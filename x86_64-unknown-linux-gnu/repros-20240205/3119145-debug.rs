#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: u128,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: u64,mut _9: usize,mut _10: u8,mut _11: u16) -> *const i64 {
mir! {
type RET = *const i64;
let _12: [isize; 1];
let _13: [i16; 8];
let _14: [i16; 8];
let _15: isize;
let _16: ([u64; 4],);
let _17: u32;
let _18: u128;
let _19: f32;
let _20: u8;
let _21: [char; 1];
let _22: *mut (*const i64,);
let _23: isize;
let _24: [i16; 3];
let _25: u8;
let _26: bool;
let _27: isize;
let _28: ();
let _29: ();
{
RET = core::ptr::addr_of!(_7);
_11 = 19183_u16;
_4 = !79493582334405691705735967209757069081_u128;
_2 = '\u{9abf7}';
_3 = 9223372036854775807_isize;
_8 = false as u64;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
9223372036854775807 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = [_3];
_6 = !(-2109316305_i32);
_2 = '\u{802fe}';
_2 = '\u{7e79}';
RET = core::ptr::addr_of!((*RET));
_13 = [11436_i16,522_i16,(-11467_i16),22125_i16,24418_i16,25920_i16,(-9952_i16),(-1826_i16)];
_6 = 590860006_i32 - 1273943999_i32;
_5 = 28902_i16 >> _6;
_5 = (-32081_i16) * 3573_i16;
match _3 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
9223372036854775807 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_13 = [_5,_5,_5,_5,_5,_5,_5,_5];
_1 = false;
_5 = (-6582_i16) << _4;
_5 = !(-12619_i16);
_7 = !8431206786745882871_i64;
_9 = 4_usize;
_16.0 = [_8,_8,_8,_8];
_15 = -_3;
_3 = _15;
_10 = 223_u8 ^ 161_u8;
_13 = [_5,_5,_5,_5,_5,_5,_5,_5];
_6 = !1515371571_i32;
_3 = -_15;
_14[_9] = _13[_9] | _5;
_4 = 106678876006877551448984239713241142177_u128 | 29857613509298712133733633542304073059_u128;
_16.0 = [_8,_8,_8,_8];
_10 = 168_u8 - 242_u8;
_21 = [_2];
_11 = 57234_u16;
_18 = _8 as u128;
_14 = [_13[_9],_13[_9],_5,_13[_9],_13[_9],_5,_13[_9],_5];
_9 = 2_usize * 17590318785942791078_usize;
_15 = _5 as isize;
_1 = _9 < _9;
Goto(bb11)
}
bb11 = {
_16.0 = [_8,_8,_8,_8];
Call(_1 = fn1(_15, _3, _9, (*RET), _15, (*RET), _4, _11, _16.0, _3, _13, _11, _15, _6, _21, _21), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_18 = !_4;
_14 = [_5,_5,_5,_5,_5,_5,_5,_5];
_8 = 1909968130160026096_u64;
_19 = _8 as f32;
_8 = 13444787873383367324_u64;
RET = core::ptr::addr_of!((*RET));
_20 = !_10;
RET = core::ptr::addr_of!((*RET));
_8 = 2878839028810145638_u64 << _5;
_11 = 58506_u16 | 13931_u16;
Goto(bb13)
}
bb13 = {
_7 = 1535469384590271585_i64 + (-992642864316761755_i64);
_11 = 15836_u16 + 20443_u16;
_12 = [_3];
_17 = (*RET) as u32;
_8 = _17 as u64;
_12 = [_3];
_23 = _3 * _3;
_21 = [_2];
_18 = _8 as u128;
_25 = _20;
_20 = !_25;
_10 = !_20;
_5 = (-24925_i16);
RET = core::ptr::addr_of!((*RET));
_3 = _15;
_12 = [_23];
_26 = _1;
_20 = _10 ^ _25;
_12 = [_3];
_9 = 4_usize;
_14 = [_13[_9],_13[_9],_13[_9],_5,_5,_13[_9],_13[_9],_13[_9]];
_7 = _2 as i64;
Goto(bb14)
}
bb14 = {
_4 = _18;
_27 = _23 & _3;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(0_usize, 17_usize, Move(_17), 18_usize, Move(_18), 11_usize, Move(_11), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(0_usize, 26_usize, Move(_26), 13_usize, Move(_13), 21_usize, Move(_21), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(0_usize, 6_usize, Move(_6), 2_usize, Move(_2), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: isize,mut _2: isize,mut _3: usize,mut _4: i64,mut _5: isize,mut _6: i64,mut _7: u128,mut _8: u16,mut _9: [u64; 4],mut _10: isize,mut _11: [i16; 8],mut _12: u16,mut _13: isize,mut _14: i32,mut _15: [char; 1],mut _16: [char; 1]) -> bool {
mir! {
type RET = bool;
let _17: Adt49;
let _18: i32;
let _19: [u64; 4];
let _20: i128;
let _21: f64;
let _22: Adt55;
let _23: u128;
let _24: ([u64; 4],);
let _25: f32;
let _26: char;
let _27: i128;
let _28: Adt49;
let _29: isize;
let _30: ([u64; 4],);
let _31: &'static f32;
let _32: Adt56;
let _33: Adt44;
let _34: usize;
let _35: bool;
let _36: u32;
let _37: Adt46;
let _38: isize;
let _39: f64;
let _40: [i16; 8];
let _41: [u64; 4];
let _42: isize;
let _43: isize;
let _44: ();
let _45: ();
{
_8 = _12;
_8 = _12;
_15 = _16;
_17.fld3 = [11550_i16,30023_i16,7318_i16];
_17.fld3 = [22241_i16,(-23234_i16),(-28859_i16)];
RET = _7 > _7;
_19 = [9046885754294708990_u64,2564212656894278993_u64,11533038345419386656_u64,18299684394171407691_u64];
_18 = _14 - _14;
_13 = !_1;
RET = _10 > _5;
_3 = 45_u8 as usize;
RET = false | false;
_15 = ['\u{77184}'];
_21 = 1005270395_u32 as f64;
_17.fld2.1 = 1409513566_u32 & 2140639192_u32;
_1 = !_13;
_9 = _19;
_17.fld2.2 = !1385_i16;
_17.fld2 = (_6, 2159933874_u32, 15244_i16);
_18 = -_14;
_18 = _14;
_17.fld3 = [_17.fld2.2,_17.fld2.2,_17.fld2.2];
_19 = [9099694267787839142_u64,16251298098589054244_u64,15450661623019928653_u64,5298959450462001482_u64];
_16 = ['\u{f12d1}'];
_2 = _17.fld2.2 as isize;
_12 = _8 - _8;
Goto(bb1)
}
bb1 = {
_2 = _10;
_17.fld1 = '\u{10b84}' as usize;
_20 = _7 as i128;
_21 = _5 as f64;
_17.fld2.2 = _20 as i16;
_22 = Adt55::Variant2 { fld0: _17.fld3 };
_17.fld2.1 = 1159411179_u32;
place!(Field::<[i16; 3]>(Variant(_22, 2), 0)) = [_17.fld2.2,_17.fld2.2,_17.fld2.2];
_17.fld2.2 = _21 as i16;
_2 = _5;
_11 = [_17.fld2.2,_17.fld2.2,_17.fld2.2,_17.fld2.2,_17.fld2.2,_17.fld2.2,_17.fld2.2,_17.fld2.2];
_9 = _19;
_15 = ['\u{328d1}'];
_17.fld2.1 = !2811516232_u32;
SetDiscriminant(_22, 2);
_10 = _13 >> _13;
_13 = _5;
_24 = (_19,);
_10 = !_2;
_28.fld3 = [_17.fld2.2,_17.fld2.2,_17.fld2.2];
_28.fld2.1 = _12 as u32;
_17.fld1 = _3;
match _8 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
57234 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_25 = _14 as f32;
_15 = ['\u{e520a}'];
place!(Field::<[i16; 3]>(Variant(_22, 2), 0)) = [_17.fld2.2,_17.fld2.2,_17.fld2.2];
RET = false ^ true;
_28.fld1 = 6134507245841795335_u64 as usize;
place!(Field::<[i16; 3]>(Variant(_22, 2), 0)) = [_17.fld2.2,_17.fld2.2,_17.fld2.2];
_13 = _25 as isize;
_18 = _28.fld2.1 as i32;
_28.fld2.2 = -_17.fld2.2;
_17.fld1 = !_3;
_27 = -_20;
_11 = [_28.fld2.2,_28.fld2.2,_17.fld2.2,_28.fld2.2,_28.fld2.2,_17.fld2.2,_28.fld2.2,_28.fld2.2];
_28.fld2 = _17.fld2;
_7 = 289632085867335385626504282793272687048_u128;
_34 = _17.fld1;
_31 = &_25;
SetDiscriminant(_22, 2);
_24 = (_9,);
_18 = -_14;
_1 = _2 >> _28.fld2.1;
_28.fld0 = Adt44::Variant1 { fld0: RET,fld1: '\u{42e2d}' };
Call(_27 = fn2(_16, _11, _24.0, _24.0, _7, _17.fld2.2, _1, _9, _24.0, _17.fld3), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_26 = '\u{9e2bd}';
_1 = _5 >> _34;
_24 = (_9,);
_2 = _10;
_28.fld3 = _17.fld3;
_30.0 = [2764305628252969194_u64,11324310359407105757_u64,4854317489916434659_u64,9034393049762596853_u64];
_37 = Adt46::Variant0 { fld0: _26 };
_17.fld1 = _28.fld1 | _34;
_19 = [6642177208715684774_u64,15182304693871621693_u64,11289456917640668596_u64,6427864910741238719_u64];
Call(_17 = fn14(_5, _30.0, _24, _24.0, _8, _28.fld3, Field::<bool>(Variant(_28.fld0, 1), 0), Field::<bool>(Variant(_28.fld0, 1), 0), _34, _28.fld3, _24, _13, _30, _28.fld2.1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_19 = [8758476994000111958_u64,17132491427666444449_u64,15192017332822106500_u64,3122709606302062739_u64];
_28.fld3 = _17.fld3;
_16 = [_26];
place!(Field::<[i16; 3]>(Variant(_22, 2), 0)) = [_28.fld2.2,_17.fld2.2,_17.fld2.2];
_16 = [Field::<char>(Variant(_17.fld0, 1), 1)];
_19 = [1756212946095373780_u64,16249295739443193784_u64,12041139730482617463_u64,16655853603168299832_u64];
_17.fld3 = [_28.fld2.2,_28.fld2.2,_17.fld2.2];
_8 = _12;
_8 = _12;
place!(Field::<bool>(Variant(_28.fld0, 1), 0)) = _18 < _18;
_20 = _27;
_12 = _8 & _8;
_28 = _17;
_33 = Adt44::Variant1 { fld0: Field::<bool>(Variant(_28.fld0, 1), 0),fld1: Field::<char>(Variant(_37, 0), 0) };
_17.fld2 = (_28.fld2.0, _28.fld2.1, _28.fld2.2);
_12 = _8;
_28.fld1 = !_17.fld1;
_18 = !_14;
SetDiscriminant(_17.fld0, 1);
RET = Field::<bool>(Variant(_28.fld0, 1), 0) <= Field::<bool>(Variant(_33, 1), 0);
place!(Field::<char>(Variant(_28.fld0, 1), 1)) = Field::<char>(Variant(_33, 1), 1);
place!(Field::<bool>(Variant(_33, 1), 0)) = !RET;
Goto(bb11)
}
bb11 = {
Call(_44 = dump_var(1_usize, 20_usize, Move(_20), 2_usize, Move(_2), 14_usize, Move(_14), 26_usize, Move(_26)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_44 = dump_var(1_usize, 1_usize, Move(_1), 8_usize, Move(_8), 13_usize, Move(_13), 3_usize, Move(_3)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_44 = dump_var(1_usize, 30_usize, Move(_30), 6_usize, Move(_6), 34_usize, Move(_34), 7_usize, Move(_7)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [char; 1],mut _2: [i16; 8],mut _3: [u64; 4],mut _4: [u64; 4],mut _5: u128,mut _6: i16,mut _7: isize,mut _8: [u64; 4],mut _9: [u64; 4],mut _10: [i16; 3]) -> i128 {
mir! {
type RET = i128;
let _11: [u64; 4];
let _12: f32;
let _13: [i32; 2];
let _14: (i64, u32, i16);
let _15: [char; 1];
let _16: f32;
let _17: [u64; 4];
let _18: ([u64; 4],);
let _19: isize;
let _20: [i32; 2];
let _21: isize;
let _22: f32;
let _23: f32;
let _24: [isize; 1];
let _25: *const i64;
let _26: (*const *mut i8, ([u64; 4],), [u16; 6]);
let _27: Adt46;
let _28: i8;
let _29: [char; 1];
let _30: u32;
let _31: u32;
let _32: i8;
let _33: [u16; 6];
let _34: (&'static f32, *mut i8, u64);
let _35: isize;
let _36: f64;
let _37: isize;
let _38: ();
let _39: ();
{
_1 = ['\u{1014c7}'];
RET = -(-100096584146167507221557068175582381876_i128);
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
289632085867335385626504282793272687048 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_7 = -9223372036854775807_isize;
_10 = [_6,_6,_6];
_1 = ['\u{be5f6}'];
RET = !(-111718188321132101559724965172320120017_i128);
_4 = [12669710902400256644_u64,12797768698888190230_u64,8659706937993652371_u64,6969015252816821446_u64];
_1 = ['\u{61336}'];
_13 = [729190725_i32,(-1855248698_i32)];
_7 = 9223372036854775807_isize;
_3 = [3624473409918529609_u64,12302396293873284902_u64,3784150955174829611_u64,17159910341570091624_u64];
_9 = [9054983042274060862_u64,1211689715495916125_u64,11014185626424106080_u64,9431970094033919456_u64];
_9 = _4;
_10 = [_6,_6,_6];
_9 = [13544396823920005006_u64,7122279739646681889_u64,4562609506803136894_u64,11938289790796236330_u64];
Goto(bb7)
}
bb7 = {
_4 = _9;
_1 = ['\u{a9b2c}'];
_5 = true as u128;
_11 = [14230777262581232028_u64,15790991933154681765_u64,4933876295278580045_u64,2750635964895956012_u64];
_14.2 = _7 as i16;
_14.0 = 3553728885831741051_i64;
_6 = _14.2;
_12 = RET as f32;
_13 = [1952723025_i32,246089624_i32];
_6 = _14.2;
_4 = [12754503830752587488_u64,12229765190306851339_u64,4240077717656015764_u64,17087302173157217349_u64];
_7 = (-9223372036854775808_isize);
_8 = _3;
Call(_14.2 = fn3(_12, _7, _13, _8), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_8 = [528811093513826157_u64,5107760417567968128_u64,16407886885591390173_u64,5510662016192289669_u64];
_16 = -_12;
_18.0 = [187494259923343089_u64,17348992236319147489_u64,9719738093084359314_u64,3954966497141275521_u64];
_19 = _7;
_14 = ((-5995054721862997364_i64), 2092749741_u32, _6);
_2 = [_14.2,_14.2,_14.2,_14.2,_6,_14.2,_14.2,_14.2];
_12 = 593747837_i32 as f32;
_5 = !187447497416093854025842212760652346394_u128;
_20 = _13;
_18 = (_8,);
_4 = _9;
RET = 60978519226028722053519561010623166298_i128 ^ 91725086109949754869829129972648958492_i128;
_4 = [618203554092129085_u64,4115346462748382825_u64,1974192011428391277_u64,10752444053027236940_u64];
_3 = [2251819035918259219_u64,16046144818616597122_u64,14049984740961649622_u64,1640918349865660108_u64];
_6 = (-1882165767_i32) as i16;
_23 = _14.0 as f32;
RET = -(-55027800207071409900259217535698335714_i128);
match _7 {
0 => bb4,
1 => bb9,
2 => bb10,
3 => bb11,
340282366920938463454151235394913435648 => bb13,
_ => bb12
}
}
bb9 = {
_4 = _9;
_1 = ['\u{a9b2c}'];
_5 = true as u128;
_11 = [14230777262581232028_u64,15790991933154681765_u64,4933876295278580045_u64,2750635964895956012_u64];
_14.2 = _7 as i16;
_14.0 = 3553728885831741051_i64;
_6 = _14.2;
_12 = RET as f32;
_13 = [1952723025_i32,246089624_i32];
_6 = _14.2;
_4 = [12754503830752587488_u64,12229765190306851339_u64,4240077717656015764_u64,17087302173157217349_u64];
_7 = (-9223372036854775808_isize);
_8 = _3;
Call(_14.2 = fn3(_12, _7, _13, _8), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_7 = -9223372036854775807_isize;
_10 = [_6,_6,_6];
_1 = ['\u{be5f6}'];
RET = !(-111718188321132101559724965172320120017_i128);
_4 = [12669710902400256644_u64,12797768698888190230_u64,8659706937993652371_u64,6969015252816821446_u64];
_1 = ['\u{61336}'];
_13 = [729190725_i32,(-1855248698_i32)];
_7 = 9223372036854775807_isize;
_3 = [3624473409918529609_u64,12302396293873284902_u64,3784150955174829611_u64,17159910341570091624_u64];
_9 = [9054983042274060862_u64,1211689715495916125_u64,11014185626424106080_u64,9431970094033919456_u64];
_9 = _4;
_10 = [_6,_6,_6];
_9 = [13544396823920005006_u64,7122279739646681889_u64,4562609506803136894_u64,11938289790796236330_u64];
Goto(bb7)
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
RET = (-63241704737264334523602495834565853836_i128);
RET = 1740542744_i32 as i128;
_14.0 = 7839594909970095536_i64;
_18 = (_8,);
_26.1 = _18;
_17 = _9;
_21 = 158_u8 as isize;
RET = 205137963_i32 as i128;
_12 = (-106_i8) as f32;
_25 = core::ptr::addr_of!(_14.0);
_25 = core::ptr::addr_of!((*_25));
_23 = (*_25) as f32;
_25 = core::ptr::addr_of!((*_25));
_14.2 = !_6;
_2 = [_6,_6,_14.2,_6,_14.2,_6,_6,_14.2];
_16 = _12 + _12;
_24 = [_21];
RET = !(-80089267044923741896424230085504894308_i128);
Call(_20 = fn11(_7, _26.1, _26.1.0, _14), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_5 = !257556812437799076243322749763434875227_u128;
_15 = _1;
_11 = [17674161215351659433_u64,13932421360260700770_u64,18417504315257623641_u64,6780653872915015720_u64];
_29 = ['\u{e5447}'];
_7 = _19;
_35 = _19;
_24 = [_7];
_32 = true as i8;
_25 = core::ptr::addr_of!(_14.0);
_3 = [10343901398595398825_u64,14257024999691293038_u64,2673534287958859773_u64,10664333662739988090_u64];
_29 = ['\u{abd9a}'];
_34.1 = core::ptr::addr_of_mut!(_32);
_30 = 9163589922300751151_u64 as u32;
_36 = 58_u8 as f64;
_14 = (7470884621211564840_i64, _30, _6);
_25 = core::ptr::addr_of!((*_25));
_22 = _12;
_34.1 = core::ptr::addr_of_mut!(_32);
_33 = [5084_u16,8045_u16,59061_u16,36592_u16,39231_u16,39557_u16];
_16 = _32 as f32;
_37 = _19 | _35;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(2_usize, 5_usize, Move(_5), 19_usize, Move(_19), 7_usize, Move(_7), 32_usize, Move(_32)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(2_usize, 11_usize, Move(_11), 18_usize, Move(_18), 8_usize, Move(_8), 29_usize, Move(_29)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(2_usize, 35_usize, Move(_35), 10_usize, Move(_10), 17_usize, Move(_17), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(2_usize, 14_usize, Move(_14), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: f32,mut _2: isize,mut _3: [i32; 2],mut _4: [u64; 4]) -> i16 {
mir! {
type RET = i16;
let _5: *mut i8;
let _6: [i16; 8];
let _7: [isize; 1];
let _8: u32;
let _9: isize;
let _10: isize;
let _11: u64;
let _12: ([u64; 4],);
let _13: [u64; 4];
let _14: [i16; 8];
let _15: char;
let _16: [isize; 1];
let _17: [i16; 3];
let _18: [char; 1];
let _19: f32;
let _20: u16;
let _21: u32;
let _22: [u64; 4];
let _23: *const i32;
let _24: [i32; 2];
let _25: isize;
let _26: [i32; 2];
let _27: f32;
let _28: Adt45;
let _29: [i32; 2];
let _30: *const i32;
let _31: (i64, u32, i16);
let _32: *const i64;
let _33: *const i64;
let _34: f32;
let _35: [i16; 3];
let _36: isize;
let _37: ([u64; 4],);
let _38: ();
let _39: ();
{
RET = 19908_i16;
_1 = (-1789517848_i32) as f32;
_1 = 168_u8 as f32;
_4 = [17333396390526528341_u64,16067177916329142074_u64,12094783082115932521_u64,6979984551383389172_u64];
_4 = [15411226666349848074_u64,9668471134759288357_u64,16146841500177048804_u64,11931678916477603916_u64];
RET = 28166_i16;
RET = (-29730_i16);
RET = 1267670045_i32 as i16;
_4 = [13366573680514434926_u64,8430506052643149604_u64,18435786004864186043_u64,10632092261863541443_u64];
Goto(bb1)
}
bb1 = {
_8 = 354495489_u32;
RET = 32283_i16 << _2;
_4 = [4635215365657103021_u64,8516688621468272305_u64,17675729332403059614_u64,8095360578429271226_u64];
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4 = [6946082645840996117_u64,10110851272522846332_u64,7075407849409625530_u64,8162360466740693514_u64];
_2 = 140_u8 as isize;
_7 = [_2];
_2 = !9223372036854775807_isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 21838_i16;
_9 = !_2;
_9 = '\u{788c1}' as isize;
_11 = !1393305540443289778_u64;
RET = '\u{e3de2}' as i16;
_1 = RET as f32;
_12.0 = _4;
_10 = RET as isize;
_4 = [_11,_11,_11,_11];
_8 = 26198_u16 as u32;
_12.0 = [_11,_11,_11,_11];
_7 = [_9];
_11 = !9366374772621482739_u64;
_12.0 = [_11,_11,_11,_11];
Call(_1 = fn4(_6, RET, _10, _6, _7, _12.0, _2, _11, _2, _9, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12 = (_4,);
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = [422338579_i32,1996133797_i32];
RET = !29569_i16;
_8 = !3918880674_u32;
_7 = [_10];
_2 = _10 ^ _10;
_12.0 = [_11,_11,_11,_11];
_12 = (_4,);
_16 = [_2];
_13 = [_11,_11,_11,_11];
_12.0 = [_11,_11,_11,_11];
_11 = 1879215661485581676_u64;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 17419_i16;
_16 = _7;
_16 = _7;
_14 = [RET,RET,RET,RET,RET,RET,RET,RET];
match _11 {
1879215661485581676 => bb4,
_ => bb3
}
}
bb3 = {
_8 = 354495489_u32;
RET = 32283_i16 << _2;
_4 = [4635215365657103021_u64,8516688621468272305_u64,17675729332403059614_u64,8095360578429271226_u64];
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4 = [6946082645840996117_u64,10110851272522846332_u64,7075407849409625530_u64,8162360466740693514_u64];
_2 = 140_u8 as isize;
_7 = [_2];
_2 = !9223372036854775807_isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 21838_i16;
_9 = !_2;
_9 = '\u{788c1}' as isize;
_11 = !1393305540443289778_u64;
RET = '\u{e3de2}' as i16;
_1 = RET as f32;
_12.0 = _4;
_10 = RET as isize;
_4 = [_11,_11,_11,_11];
_8 = 26198_u16 as u32;
_12.0 = [_11,_11,_11,_11];
_7 = [_9];
_11 = !9366374772621482739_u64;
_12.0 = [_11,_11,_11,_11];
Call(_1 = fn4(_6, RET, _10, _6, _7, _12.0, _2, _11, _2, _9, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_12 = (_4,);
RET = -25808_i16;
_7 = [_2];
RET = (-28211_i16);
_1 = _9 as f32;
_6 = _14;
RET = !(-7437_i16);
_4 = [_11,_11,_11,_11];
_17 = [RET,RET,RET];
RET = (-6223_i16) * 7764_i16;
RET = '\u{ea9e6}' as i16;
_16 = [_9];
_14 = _6;
Call(_18 = fn6(_7, _3, _7, _11, _12.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_17 = [RET,RET,RET];
_12 = (_13,);
match _11 {
0 => bb4,
1 => bb2,
1879215661485581676 => bb6,
_ => bb3
}
}
bb6 = {
_11 = !7009929307436992569_u64;
_9 = _10;
_17 = [RET,RET,RET];
_13 = _12.0;
_13 = [_11,_11,_11,_11];
_12.0 = [_11,_11,_11,_11];
RET = _11 as i16;
_12 = (_13,);
Goto(bb7)
}
bb7 = {
_18 = ['\u{ffb06}'];
_20 = 16619_u16;
_12 = (_4,);
_14 = [RET,RET,RET,RET,RET,RET,RET,RET];
_11 = 5099057854880013862_u64;
_14 = _6;
RET = !727_i16;
_17 = [RET,RET,RET];
RET = 28797_i16;
_11 = !12921445988271258904_u64;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_19 = -_1;
_9 = -_10;
RET = (-26594_i16) >> _20;
_15 = '\u{e7a30}';
_2 = _9 & _10;
_3 = [2001926939_i32,1063271334_i32];
RET = !(-1835_i16);
_1 = -_19;
_21 = _10 as u32;
_4 = [_11,_11,_11,_11];
_21 = false as u32;
_8 = _21;
_22 = [_11,_11,_11,_11];
_8 = _21 & _21;
Goto(bb8)
}
bb8 = {
_2 = _10 * _9;
_7 = [_9];
_22 = [_11,_11,_11,_11];
_13 = _22;
_18 = [_15];
_22 = _4;
_20 = _15 as u16;
_22 = _4;
_2 = -_9;
_19 = (-130320279662927608605870913055877858819_i128) as f32;
_15 = '\u{20e6e}';
_22 = _12.0;
_10 = _2 - _9;
_21 = _8;
_24 = _3;
_2 = false as isize;
_4 = [_11,_11,_11,_11];
_9 = _10 * _10;
_7 = [_9];
Goto(bb9)
}
bb9 = {
RET = (-31631_i16) >> _9;
_26 = [1758118154_i32,213737958_i32];
_6 = _14;
_22 = _13;
_2 = -_10;
_13 = [_11,_11,_11,_11];
RET = (-13438_i16) + (-27685_i16);
_25 = _10 * _9;
_22 = _4;
_17 = [RET,RET,RET];
_17 = [RET,RET,RET];
_7 = _16;
_12.0 = [_11,_11,_11,_11];
_15 = '\u{d41fe}';
_21 = _8;
_16 = _7;
_27 = -_19;
_8 = false as u32;
_25 = _1 as isize;
_18 = [_15];
_12.0 = _13;
_10 = 330686218184997349111971112247126142384_u128 as isize;
_8 = !_21;
_12.0 = [_11,_11,_11,_11];
_7 = [_10];
_4 = [_11,_11,_11,_11];
_10 = _2 + _25;
Call(_16 = fn7(_7, _9, _6, _9, _17, _10, _2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_15 = '\u{b693c}';
_10 = 123_i8 as isize;
_20 = 28538_u16 << _25;
_3 = [1862899229_i32,(-1666424298_i32)];
_11 = !10972168627660994135_u64;
_31.2 = !RET;
_29 = [(-742232229_i32),1856905572_i32];
_32 = core::ptr::addr_of!(_31.0);
_8 = _21;
_33 = core::ptr::addr_of!((*_32));
_15 = '\u{f3eb9}';
_27 = -_1;
_28 = Adt45::Variant0 { fld0: _31.2,fld1: 60220312881183187925706046463402894313_i128 };
_16 = _7;
Goto(bb11)
}
bb11 = {
_31.0 = (-6910856049506868496_i64) ^ 8584010309194678228_i64;
_31 = ((-2101544109768049491_i64), _21, Field::<i16>(Variant(_28, 0), 0));
_28 = Adt45::Variant0 { fld0: _31.2,fld1: 21168964348986006012654825486567385850_i128 };
_19 = _27;
_13 = [_11,_11,_11,_11];
_31.1 = _8;
place!(Field::<i16>(Variant(_28, 0), 0)) = RET * RET;
_1 = -_19;
_20 = (-1868972141_i32) as u16;
_35 = [_31.2,Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0)];
_2 = _20 as isize;
_1 = -_27;
_36 = 32132028605252259251236036799837951697_u128 as isize;
_24 = [1437676555_i32,(-540040914_i32)];
_20 = 3434_u16 << RET;
_31.2 = 1590364231_i32 as i16;
place!(Field::<i128>(Variant(_28, 0), 1)) = (-83654662100844737245467944938145484067_i128) << _8;
_13 = [_11,_11,_11,_11];
_33 = _32;
SetDiscriminant(_28, 0);
_17 = _35;
_14 = [RET,RET,_31.2,RET,RET,RET,_31.2,RET];
_10 = _11 as isize;
_31.1 = _21;
place!(Field::<i16>(Variant(_28, 0), 0)) = 537420748417586008617307246749779356_i128 as i16;
RET = _31.2 << _10;
_31.0 = (-5191950611356442174_i64);
_21 = _31.1;
match _31.0 {
0 => bb1,
1 => bb2,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
340282366920938463458182656820411769282 => bb18,
_ => bb17
}
}
bb12 = {
_15 = '\u{b693c}';
_10 = 123_i8 as isize;
_20 = 28538_u16 << _25;
_3 = [1862899229_i32,(-1666424298_i32)];
_11 = !10972168627660994135_u64;
_31.2 = !RET;
_29 = [(-742232229_i32),1856905572_i32];
_32 = core::ptr::addr_of!(_31.0);
_8 = _21;
_33 = core::ptr::addr_of!((*_32));
_15 = '\u{f3eb9}';
_27 = -_1;
_28 = Adt45::Variant0 { fld0: _31.2,fld1: 60220312881183187925706046463402894313_i128 };
_16 = _7;
Goto(bb11)
}
bb13 = {
_12 = (_4,);
RET = -25808_i16;
_7 = [_2];
RET = (-28211_i16);
_1 = _9 as f32;
_6 = _14;
RET = !(-7437_i16);
_4 = [_11,_11,_11,_11];
_17 = [RET,RET,RET];
RET = (-6223_i16) * 7764_i16;
RET = '\u{ea9e6}' as i16;
_16 = [_9];
_14 = _6;
Call(_18 = fn6(_7, _3, _7, _11, _12.0), ReturnTo(bb5), UnwindUnreachable())
}
bb14 = {
_2 = _10 * _9;
_7 = [_9];
_22 = [_11,_11,_11,_11];
_13 = _22;
_18 = [_15];
_22 = _4;
_20 = _15 as u16;
_22 = _4;
_2 = -_9;
_19 = (-130320279662927608605870913055877858819_i128) as f32;
_15 = '\u{20e6e}';
_22 = _12.0;
_10 = _2 - _9;
_21 = _8;
_24 = _3;
_2 = false as isize;
_4 = [_11,_11,_11,_11];
_9 = _10 * _10;
_7 = [_9];
Goto(bb9)
}
bb15 = {
_18 = ['\u{ffb06}'];
_20 = 16619_u16;
_12 = (_4,);
_14 = [RET,RET,RET,RET,RET,RET,RET,RET];
_11 = 5099057854880013862_u64;
_14 = _6;
RET = !727_i16;
_17 = [RET,RET,RET];
RET = 28797_i16;
_11 = !12921445988271258904_u64;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_19 = -_1;
_9 = -_10;
RET = (-26594_i16) >> _20;
_15 = '\u{e7a30}';
_2 = _9 & _10;
_3 = [2001926939_i32,1063271334_i32];
RET = !(-1835_i16);
_1 = -_19;
_21 = _10 as u32;
_4 = [_11,_11,_11,_11];
_21 = false as u32;
_8 = _21;
_22 = [_11,_11,_11,_11];
_8 = _21 & _21;
Goto(bb8)
}
bb16 = {
_11 = !7009929307436992569_u64;
_9 = _10;
_17 = [RET,RET,RET];
_13 = _12.0;
_13 = [_11,_11,_11,_11];
_12.0 = [_11,_11,_11,_11];
RET = _11 as i16;
_12 = (_13,);
Goto(bb7)
}
bb17 = {
_17 = [RET,RET,RET];
_12 = (_13,);
match _11 {
0 => bb4,
1 => bb2,
1879215661485581676 => bb6,
_ => bb3
}
}
bb18 = {
place!(Field::<i16>(Variant(_28, 0), 0)) = RET + RET;
_2 = !_9;
_9 = _36;
_24 = _26;
_11 = !15746092630434942299_u64;
_21 = _31.1 ^ _31.1;
_17 = [Field::<i16>(Variant(_28, 0), 0),RET,Field::<i16>(Variant(_28, 0), 0)];
Goto(bb19)
}
bb19 = {
Call(_38 = dump_var(3_usize, 9_usize, Move(_9), 17_usize, Move(_17), 10_usize, Move(_10), 29_usize, Move(_29)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_38 = dump_var(3_usize, 22_usize, Move(_22), 8_usize, Move(_8), 12_usize, Move(_12), 3_usize, Move(_3)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_38 = dump_var(3_usize, 13_usize, Move(_13), 6_usize, Move(_6), 21_usize, Move(_21), 14_usize, Move(_14)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_38 = dump_var(3_usize, 24_usize, Move(_24), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [i16; 8],mut _2: i16,mut _3: isize,mut _4: [i16; 8],mut _5: [isize; 1],mut _6: [u64; 4],mut _7: isize,mut _8: u64,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: [i32; 2]) -> f32 {
mir! {
type RET = f32;
let _13: [u16; 6];
let _14: i16;
let _15: isize;
let _16: i32;
let _17: ([u64; 4],);
let _18: f64;
let _19: [u16; 6];
let _20: isize;
let _21: ([u64; 4],);
let _22: char;
let _23: &'static f32;
let _24: [i32; 2];
let _25: i32;
let _26: [u64; 4];
let _27: Adt42;
let _28: f32;
let _29: ();
let _30: ();
{
_7 = _10 - _10;
_6 = [_8,_8,_8,_8];
_2 = 8153_i16;
_7 = _9;
_7 = _10 >> _9;
_10 = _9 & _7;
_11 = 3162661135_u32 as isize;
_15 = _10 - _7;
_14 = _2 >> _8;
_8 = 168472735969939116758268639966053478928_i128 as u64;
_3 = _15 - _15;
_1 = [_14,_14,_2,_14,_2,_14,_2,_14];
_11 = !_15;
RET = 113_u8 as f32;
_13 = [20594_u16,19279_u16,59336_u16,1116_u16,10000_u16,65257_u16];
_4 = _1;
_4 = [_14,_14,_2,_14,_2,_14,_14,_14];
_12 = [1597655900_i32,(-1151932094_i32)];
_13 = [36317_u16,54777_u16,62177_u16,2421_u16,20355_u16,61323_u16];
_16 = _8 as i32;
_15 = true as isize;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
8153 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_6 = [_8,_8,_8,_8];
_2 = '\u{f4dae}' as i16;
_13 = [17499_u16,46364_u16,6444_u16,45220_u16,49675_u16,33678_u16];
_17 = (_6,);
_18 = _16 as f64;
Goto(bb7)
}
bb7 = {
_9 = _11 & _3;
_18 = 2698440731170691500_usize as f64;
_9 = _3;
_4 = [_14,_14,_14,_14,_14,_14,_14,_14];
_14 = (-105879189116947077660112240772071766204_i128) as i16;
_12 = [_16,_16];
_5 = [_3];
_11 = !_7;
RET = _16 as f32;
_11 = _3;
_10 = '\u{8da0}' as isize;
_17.0 = [_8,_8,_8,_8];
_4 = [_14,_14,_14,_14,_2,_14,_14,_2];
_11 = _3;
_19 = [4078_u16,56160_u16,48288_u16,37497_u16,40242_u16,16328_u16];
_17.0 = _6;
_7 = _3;
_2 = _14;
_1 = _4;
_14 = !_2;
_17.0 = _6;
_5 = [_7];
_17 = (_6,);
_17 = (_6,);
_15 = !_3;
_2 = _14 | _14;
_14 = -_2;
RET = 275295613553036487129899260791020208258_u128 as f32;
_15 = _8 as isize;
Call(_5 = fn5(_9, _11, _3, _11, _9), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_8 = 9036863323357027713_u64;
RET = (-121_i8) as f32;
_10 = _7;
RET = (-59_i8) as f32;
_3 = _10;
_19 = [10682_u16,31225_u16,55903_u16,61703_u16,38064_u16,56009_u16];
_18 = _16 as f64;
_12 = [_16,_16];
RET = _2 as f32;
_13 = [51982_u16,26190_u16,11080_u16,27736_u16,44657_u16,18798_u16];
_4 = [_14,_2,_14,_2,_14,_14,_2,_2];
RET = _2 as f32;
_17 = (_6,);
_4 = [_2,_14,_2,_2,_2,_2,_14,_14];
_14 = (-83747920950196922344871084391153958731_i128) as i16;
match _8 {
0 => bb1,
1 => bb6,
9036863323357027713 => bb9,
_ => bb4
}
}
bb9 = {
RET = (-119_i8) as f32;
_15 = _3 * _3;
_6 = [_8,_8,_8,_8];
RET = _8 as f32;
_9 = _8 as isize;
RET = 251_u8 as f32;
_15 = _11 >> _3;
_8 = 5578018073249591010_u64;
_17 = (_6,);
_9 = 18570_u16 as isize;
_20 = _9;
_9 = !_7;
_21.0 = _6;
_4 = _1;
_6 = _17.0;
RET = _18 as f32;
_10 = _7;
_18 = _8 as f64;
_4 = _1;
_7 = _15 ^ _3;
_24 = [_16,_16];
RET = _2 as f32;
_6 = _21.0;
_9 = _7;
_3 = _10;
match _8 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
5578018073249591010 => bb15,
_ => bb14
}
}
bb10 = {
_8 = 9036863323357027713_u64;
RET = (-121_i8) as f32;
_10 = _7;
RET = (-59_i8) as f32;
_3 = _10;
_19 = [10682_u16,31225_u16,55903_u16,61703_u16,38064_u16,56009_u16];
_18 = _16 as f64;
_12 = [_16,_16];
RET = _2 as f32;
_13 = [51982_u16,26190_u16,11080_u16,27736_u16,44657_u16,18798_u16];
_4 = [_14,_2,_14,_2,_14,_14,_2,_2];
RET = _2 as f32;
_17 = (_6,);
_4 = [_2,_14,_2,_2,_2,_2,_14,_14];
_14 = (-83747920950196922344871084391153958731_i128) as i16;
match _8 {
0 => bb1,
1 => bb6,
9036863323357027713 => bb9,
_ => bb4
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_23 = &RET;
_20 = !_7;
_4 = _1;
_28 = -(*_23);
_23 = &_28;
Goto(bb16)
}
bb16 = {
Call(_29 = dump_var(4_usize, 3_usize, Move(_3), 9_usize, Move(_9), 4_usize, Move(_4), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(4_usize, 24_usize, Move(_24), 7_usize, Move(_7), 16_usize, Move(_16), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(4_usize, 6_usize, Move(_6), 8_usize, Move(_8), 30_usize, _30, 30_usize, _30), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize) -> [isize; 1] {
mir! {
type RET = [isize; 1];
let _6: [i32; 2];
let _7: char;
let _8: f32;
let _9: f32;
let _10: *const i32;
let _11: u16;
let _12: [i16; 3];
let _13: ();
let _14: ();
{
RET = [_3];
_6 = [(-537106518_i32),(-111800440_i32)];
_2 = _4;
_2 = -_3;
_6 = [1571676568_i32,1482559399_i32];
RET = [_5];
_4 = _2 + _2;
_3 = 276561569200335197090744058041062853544_u128 as isize;
_5 = false as isize;
_2 = _1 ^ _4;
_4 = 7_usize as isize;
_1 = 20_i8 as isize;
_3 = (-1759739489501963231_i64) as isize;
_6 = [342926162_i32,(-1706195941_i32)];
_8 = 1092091763_i32 as f32;
RET = [_2];
_8 = 209_u8 as f32;
_5 = _2 | _2;
_11 = !4332_u16;
_7 = '\u{22a84}';
_5 = _2;
_6 = [(-1867109782_i32),739700406_i32];
_7 = '\u{c15ac}';
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(5_usize, 11_usize, Move(_11), 5_usize, Move(_5), 1_usize, Move(_1), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [isize; 1],mut _2: [i32; 2],mut _3: [isize; 1],mut _4: u64,mut _5: [u64; 4]) -> [char; 1] {
mir! {
type RET = [char; 1];
let _6: Adt47;
let _7: [i32; 2];
let _8: i8;
let _9: Adt55;
let _10: [isize; 1];
let _11: (*const i128, u8);
let _12: [i32; 2];
let _13: u32;
let _14: [i32; 2];
let _15: [i16; 8];
let _16: isize;
let _17: [u64; 4];
let _18: Adt46;
let _19: bool;
let _20: usize;
let _21: i8;
let _22: f32;
let _23: [isize; 1];
let _24: [isize; 1];
let _25: ([u64; 4],);
let _26: ();
let _27: ();
{
RET = ['\u{7a764}'];
RET = ['\u{60d51}'];
_1 = [(-9223372036854775808_isize)];
RET = ['\u{4e043}'];
_2 = [(-956174490_i32),2075640209_i32];
_2 = [433108596_i32,(-87289197_i32)];
_1 = _3;
_1 = [(-9223372036854775808_isize)];
_3 = _1;
_3 = [(-9223372036854775808_isize)];
_8 = 80_i8 + (-75_i8);
_10 = [9223372036854775807_isize];
_2 = [(-1533002115_i32),938336225_i32];
_3 = [(-9223372036854775808_isize)];
RET = ['\u{4bc3e}'];
_3 = [(-9223372036854775808_isize)];
_8 = 39_i8;
_4 = !12124779740831263564_u64;
_10 = [9223372036854775807_isize];
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
39 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_4 = 1450779343277490240_u64 << _8;
_7 = [1532114744_i32,1131924744_i32];
_5 = [_4,_4,_4,_4];
_2 = [(-64431288_i32),(-2444667_i32)];
_5 = [_4,_4,_4,_4];
_11.1 = !108_u8;
_1 = [(-1_isize)];
_7 = _2;
_7 = [716743362_i32,1091021085_i32];
RET = ['\u{697cb}'];
_8 = (-116_i8);
RET = ['\u{332ec}'];
_11.1 = 17_u8;
_10 = _3;
_5 = [_4,_4,_4,_4];
_3 = _10;
_12 = _7;
_13 = 900463041_u32;
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431768211340 => bb9,
_ => bb7
}
}
bb9 = {
_5 = [_4,_4,_4,_4];
_4 = 16489560992269830259522586675456065971_u128 as u64;
_8 = (-30_i8);
_14 = [(-1378974038_i32),(-1562304430_i32)];
RET = ['\u{10722e}'];
_16 = 9223372036854775807_isize;
_11.1 = 47_u8;
_5 = [_4,_4,_4,_4];
_15 = [6666_i16,(-18259_i16),(-23252_i16),(-4518_i16),(-1304_i16),8410_i16,8971_i16,24561_i16];
_15 = [977_i16,(-25711_i16),27855_i16,(-10836_i16),(-13753_i16),(-18923_i16),3170_i16,15218_i16];
_3 = [_16];
_4 = _13 as u64;
_17 = [_4,_4,_4,_4];
_10 = _1;
RET = ['\u{69218}'];
_7 = _12;
_7 = _14;
_14 = _12;
_10 = _1;
_15 = [(-68_i16),(-1716_i16),10955_i16,23243_i16,(-28725_i16),(-10685_i16),7528_i16,(-32412_i16)];
match _11.1 {
0 => bb7,
47 => bb10,
_ => bb2
}
}
bb10 = {
_8 = 20_i8 | (-30_i8);
RET = ['\u{813b5}'];
_16 = 9223372036854775807_isize;
_5 = [_4,_4,_4,_4];
_11.1 = 159_u8;
_11.1 = 139_u8;
_12 = [1290236545_i32,544551196_i32];
_15 = [6628_i16,9356_i16,(-25523_i16),29613_i16,22602_i16,(-24119_i16),30025_i16,(-1110_i16)];
_18 = Adt46::Variant0 { fld0: '\u{5df3e}' };
_10 = _3;
_3 = _10;
_19 = _4 < _4;
_7 = _2;
_10 = [_16];
place!(Field::<char>(Variant(_18, 0), 0)) = '\u{3d209}';
_19 = !true;
match _11.1 {
0 => bb9,
139 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_15 = [19010_i16,(-23609_i16),(-30295_i16),(-14292_i16),2992_i16,(-28581_i16),(-7911_i16),(-6297_i16)];
_5 = [_4,_4,_4,_4];
_14 = _12;
_7 = [(-1893817207_i32),(-1783113734_i32)];
_16 = (-9223372036854775808_isize);
_20 = !15349554742919474725_usize;
_2 = [(-861967907_i32),647585001_i32];
_11.1 = (-31867_i16) as u8;
_19 = _8 <= _8;
_17 = [_4,_4,_4,_4];
_16 = (-9223372036854775808_isize);
RET = [Field::<char>(Variant(_18, 0), 0)];
_19 = true;
_11.1 = 209_u8;
place!(Field::<char>(Variant(_18, 0), 0)) = '\u{25f8d}';
_20 = !2_usize;
_11.1 = _8 as u8;
_21 = _11.1 as i8;
_13 = (-1307950256_i32) as u32;
RET = [Field::<char>(Variant(_18, 0), 0)];
match _16 {
340282366920938463454151235394913435648 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
_16 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_21 = _8 ^ _8;
_21 = -_8;
_10 = [_16];
_22 = 1842_u16 as f32;
_3 = _1;
RET = [Field::<char>(Variant(_18, 0), 0)];
_25.0 = [_4,_4,_4,_4];
_5 = [_4,_4,_4,_4];
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(6_usize, 7_usize, Move(_7), 19_usize, Move(_19), 8_usize, Move(_8), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(6_usize, 5_usize, Move(_5), 3_usize, Move(_3), 16_usize, Move(_16), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(6_usize, 13_usize, Move(_13), 27_usize, _27, 27_usize, _27, 27_usize, _27), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [isize; 1],mut _2: isize,mut _3: [i16; 8],mut _4: isize,mut _5: [i16; 3],mut _6: isize,mut _7: isize) -> [isize; 1] {
mir! {
type RET = [isize; 1];
let _8: f32;
let _9: char;
let _10: ((i64, u32, i16), (u32, u8, *mut i8));
let _11: [char; 1];
let _12: (i64, u32, i16);
let _13: isize;
let _14: [isize; 1];
let _15: [u16; 6];
let _16: f64;
let _17: isize;
let _18: [u64; 4];
let _19: char;
let _20: Adt50;
let _21: i128;
let _22: [i32; 2];
let _23: [u16; 6];
let _24: isize;
let _25: usize;
let _26: ();
let _27: ();
{
_4 = -_2;
_7 = -_2;
_4 = _7 + _2;
RET = [_7];
_4 = !_7;
_1 = [_7];
_6 = -_2;
_3 = [(-9784_i16),(-2610_i16),8229_i16,4229_i16,(-15312_i16),(-14493_i16),(-19242_i16),25937_i16];
RET = [_2];
RET = _1;
_6 = !_7;
_5 = [31565_i16,(-31359_i16),(-18615_i16)];
_6 = !_4;
_1 = [_6];
_4 = 95_i8 as isize;
_7 = !_6;
Call(_5 = fn8(_2, _3, _3, _6, _2, _7, _1, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [_6];
_2 = -_7;
_2 = _7 * _7;
_1 = RET;
_1 = RET;
_3 = [9639_i16,(-11132_i16),5787_i16,16699_i16,(-1257_i16),(-1303_i16),235_i16,(-16298_i16)];
_3 = [6167_i16,(-7210_i16),6101_i16,(-22479_i16),10139_i16,30294_i16,(-13324_i16),30224_i16];
_1 = [_7];
_1 = [_2];
_6 = !_7;
_10.0.0 = true as i64;
RET = [_2];
RET = [_2];
_10.1.1 = 37_u8;
_3 = [26992_i16,(-427_i16),(-30882_i16),13112_i16,3672_i16,32642_i16,(-8966_i16),4066_i16];
_10.0.1 = 707346187397732217_usize as u32;
_9 = '\u{cf234}';
_6 = !_7;
RET = [_7];
_7 = !_2;
_4 = _7;
_8 = 6612889680244272540_u64 as f32;
_11 = [_9];
_4 = !_2;
_3 = [(-498_i16),(-1625_i16),(-11898_i16),(-30688_i16),(-22810_i16),(-13016_i16),9268_i16,9199_i16];
_4 = _6;
_12.0 = _10.0.0;
Goto(bb2)
}
bb2 = {
_7 = _2;
_10.0.0 = _12.0;
_2 = _7;
_3 = [4252_i16,12969_i16,(-16936_i16),18628_i16,8600_i16,(-18608_i16),18897_i16,5034_i16];
_15 = [62018_u16,51000_u16,64632_u16,34892_u16,48381_u16,8589_u16];
_12.0 = _10.0.0 - _10.0.0;
_12.1 = _10.0.1 ^ _10.0.1;
_10.1.1 = 46_u8;
Call(_1 = core::intrinsics::transmute(_7), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10.0.2 = _10.0.1 as i16;
_7 = !_4;
_2 = 2070756888_i32 as isize;
_12.2 = 31477701369337403709233585248778966005_u128 as i16;
_12.0 = _10.0.2 as i64;
_10.1.1 = 193_u8;
_17 = _6;
_13 = _7;
_5 = [_12.2,_12.2,_12.2];
_14 = _1;
_15 = [28040_u16,33764_u16,65290_u16,32093_u16,29376_u16,40170_u16];
_9 = '\u{2959b}';
_8 = _10.0.2 as f32;
_12.1 = _10.0.1;
_4 = _7 | _7;
_17 = _6 ^ _6;
_10.1.0 = _10.0.1 & _10.0.1;
_10.0 = (_12.0, _10.1.0, _12.2);
_16 = _12.1 as f64;
_18 = [8001183594715420388_u64,9748419004497005409_u64,5973037483120663888_u64,9355729772483083506_u64];
_10.0.2 = _12.2;
_8 = _12.0 as f32;
_1 = RET;
Call(_5 = fn9(_3, _14, _10.1.0, _14, _4, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = 8043672823739240744_u64 as f32;
_6 = !_13;
_12 = (_10.0.0, _10.0.1, _10.0.2);
_6 = -_4;
match _10.1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
193 => bb10,
_ => bb9
}
}
bb5 = {
_10.0.2 = _10.0.1 as i16;
_7 = !_4;
_2 = 2070756888_i32 as isize;
_12.2 = 31477701369337403709233585248778966005_u128 as i16;
_12.0 = _10.0.2 as i64;
_10.1.1 = 193_u8;
_17 = _6;
_13 = _7;
_5 = [_12.2,_12.2,_12.2];
_14 = _1;
_15 = [28040_u16,33764_u16,65290_u16,32093_u16,29376_u16,40170_u16];
_9 = '\u{2959b}';
_8 = _10.0.2 as f32;
_12.1 = _10.0.1;
_4 = _7 | _7;
_17 = _6 ^ _6;
_10.1.0 = _10.0.1 & _10.0.1;
_10.0 = (_12.0, _10.1.0, _12.2);
_16 = _12.1 as f64;
_18 = [8001183594715420388_u64,9748419004497005409_u64,5973037483120663888_u64,9355729772483083506_u64];
_10.0.2 = _12.2;
_8 = _12.0 as f32;
_1 = RET;
Call(_5 = fn9(_3, _14, _10.1.0, _14, _4, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_7 = _2;
_10.0.0 = _12.0;
_2 = _7;
_3 = [4252_i16,12969_i16,(-16936_i16),18628_i16,8600_i16,(-18608_i16),18897_i16,5034_i16];
_15 = [62018_u16,51000_u16,64632_u16,34892_u16,48381_u16,8589_u16];
_12.0 = _10.0.0 - _10.0.0;
_12.1 = _10.0.1 ^ _10.0.1;
_10.1.1 = 46_u8;
Call(_1 = core::intrinsics::transmute(_7), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
RET = [_6];
_2 = -_7;
_2 = _7 * _7;
_1 = RET;
_1 = RET;
_3 = [9639_i16,(-11132_i16),5787_i16,16699_i16,(-1257_i16),(-1303_i16),235_i16,(-16298_i16)];
_3 = [6167_i16,(-7210_i16),6101_i16,(-22479_i16),10139_i16,30294_i16,(-13324_i16),30224_i16];
_1 = [_7];
_1 = [_2];
_6 = !_7;
_10.0.0 = true as i64;
RET = [_2];
RET = [_2];
_10.1.1 = 37_u8;
_3 = [26992_i16,(-427_i16),(-30882_i16),13112_i16,3672_i16,32642_i16,(-8966_i16),4066_i16];
_10.0.1 = 707346187397732217_usize as u32;
_9 = '\u{cf234}';
_6 = !_7;
RET = [_7];
_7 = !_2;
_4 = _7;
_8 = 6612889680244272540_u64 as f32;
_11 = [_9];
_4 = !_2;
_3 = [(-498_i16),(-1625_i16),(-11898_i16),(-30688_i16),(-22810_i16),(-13016_i16),9268_i16,9199_i16];
_4 = _6;
_12.0 = _10.0.0;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_7 = !_6;
_11 = [_9];
_12.1 = !_10.1.0;
_10.0.0 = _12.0;
_14 = [_4];
_12.2 = !_10.0.2;
_2 = _4 | _6;
_19 = _9;
_12.0 = _10.0.0 | _10.0.0;
_21 = _10.0.2 as i128;
_10.0.0 = -_12.0;
Call(RET = fn10(_17, _4, _1, _7, _2, _19, _3, _10.0.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_16 = 8754_u16 as f64;
_7 = _19 as isize;
_8 = (-25_i8) as f32;
_11 = [_9];
RET = [_2];
_9 = _19;
_12.1 = _10.1.0 ^ _10.0.1;
_17 = -_4;
Goto(bb12)
}
bb12 = {
Call(_26 = dump_var(7_usize, 6_usize, Move(_6), 21_usize, Move(_21), 2_usize, Move(_2), 17_usize, Move(_17)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_26 = dump_var(7_usize, 7_usize, Move(_7), 1_usize, Move(_1), 11_usize, Move(_11), 15_usize, Move(_15)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: [i16; 8],mut _3: [i16; 8],mut _4: isize,mut _5: isize,mut _6: isize,mut _7: [isize; 1],mut _8: isize) -> [i16; 3] {
mir! {
type RET = [i16; 3];
let _9: *mut (*const i64,);
let _10: [u16; 6];
let _11: bool;
let _12: *const i128;
let _13: (*const i128, u8);
let _14: Adt55;
let _15: *const i128;
let _16: isize;
let _17: [isize; 1];
let _18: isize;
let _19: *mut (*const i64,);
let _20: isize;
let _21: u64;
let _22: [i16; 3];
let _23: *const i64;
let _24: (i64, u32, i16);
let _25: char;
let _26: [i32; 2];
let _27: [isize; 1];
let _28: [i32; 2];
let _29: usize;
let _30: [char; 1];
let _31: i32;
let _32: f32;
let _33: char;
let _34: isize;
let _35: (i64, u32, i16);
let _36: ([u64; 4],);
let _37: ();
let _38: ();
{
_6 = _1 | _5;
RET = [22442_i16,16726_i16,22040_i16];
_4 = _1 & _6;
_8 = -_4;
_1 = !_6;
_11 = _8 == _4;
_4 = (-9088230840637146473_i64) as isize;
_8 = !_6;
_8 = !_6;
RET = [(-20066_i16),8405_i16,(-1128_i16)];
_8 = 3994977713_u32 as isize;
_10 = [27796_u16,59075_u16,46036_u16,6716_u16,5152_u16,63912_u16];
_2 = [6919_i16,(-15150_i16),(-9486_i16),(-16599_i16),(-10967_i16),(-25905_i16),(-28643_i16),524_i16];
_4 = 19_i8 as isize;
_4 = _1;
Goto(bb1)
}
bb1 = {
_11 = !false;
_6 = -_1;
_7 = [_6];
_8 = _4;
_13.1 = 78_u8;
_8 = _4 << _1;
_8 = _4;
_5 = !_1;
_2 = _3;
_4 = _8;
_11 = true | true;
_8 = _6;
_2 = _3;
_7 = [_1];
_1 = _6;
_16 = _1;
_7 = [_8];
_13.1 = 237_u8 - 22_u8;
_8 = 1814_i16 as isize;
_5 = (-48085272648279344029136405508075987237_i128) as isize;
_4 = -_1;
_7 = [_1];
_2 = [25043_i16,2367_i16,21002_i16,1574_i16,(-30339_i16),31257_i16,7061_i16,(-20344_i16)];
_3 = _2;
Goto(bb2)
}
bb2 = {
_6 = _4;
_1 = 7471127808701008869_i64 as isize;
_18 = 240944536854200228945273415105461809248_u128 as isize;
_20 = -_6;
_20 = !_6;
_10 = [34386_u16,63769_u16,43806_u16,42755_u16,21244_u16,43506_u16];
_8 = _16 | _16;
_24 = (1812515700522488368_i64, 2846360072_u32, 16565_i16);
_1 = '\u{89e91}' as isize;
_5 = (-147027953962305792556098632636766731534_i128) as isize;
_23 = core::ptr::addr_of!(_24.0);
_7 = [_6];
_7 = [_20];
_24.2 = (-18447_i16) + 32463_i16;
Goto(bb3)
}
bb3 = {
_22 = RET;
_23 = core::ptr::addr_of!(_24.0);
_4 = _20;
_4 = _16;
_7 = [_16];
_18 = 59808379758946892213235521938958017100_i128 as isize;
_24.2 = (-1916_i16);
_26 = [(-185128059_i32),(-35308867_i32)];
_17 = [_4];
_3 = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_21 = 9439573517621362000_u64 << _20;
_21 = !4603401490103770070_u64;
_24.2 = (-904178120_i32) as i16;
_24.0 = !1451246118654606792_i64;
_23 = core::ptr::addr_of!((*_23));
_25 = '\u{42e11}';
_25 = '\u{9fefe}';
_5 = _20;
Goto(bb4)
}
bb4 = {
_24.0 = 9123499444089173337_i64 ^ 4499648997831162599_i64;
_22 = [_24.2,_24.2,_24.2];
_20 = -_16;
_24.2 = (-9946_i16);
_28 = [1888893381_i32,(-385492945_i32)];
_24.0 = (-4555196397426413148_i64) - (-5384674989782862793_i64);
_24.0 = 5791164327790803191_i64 & (-1286573685921709305_i64);
_27 = [_4];
RET = [_24.2,_24.2,_24.2];
_24 = (331321442915617915_i64, 869448623_u32, 7472_i16);
match (*_23) {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
331321442915617915 => bb8,
_ => bb7
}
}
bb5 = {
_22 = RET;
_23 = core::ptr::addr_of!(_24.0);
_4 = _20;
_4 = _16;
_7 = [_16];
_18 = 59808379758946892213235521938958017100_i128 as isize;
_24.2 = (-1916_i16);
_26 = [(-185128059_i32),(-35308867_i32)];
_17 = [_4];
_3 = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_21 = 9439573517621362000_u64 << _20;
_21 = !4603401490103770070_u64;
_24.2 = (-904178120_i32) as i16;
_24.0 = !1451246118654606792_i64;
_23 = core::ptr::addr_of!((*_23));
_25 = '\u{42e11}';
_25 = '\u{9fefe}';
_5 = _20;
Goto(bb4)
}
bb6 = {
_6 = _4;
_1 = 7471127808701008869_i64 as isize;
_18 = 240944536854200228945273415105461809248_u128 as isize;
_20 = -_6;
_20 = !_6;
_10 = [34386_u16,63769_u16,43806_u16,42755_u16,21244_u16,43506_u16];
_8 = _16 | _16;
_24 = (1812515700522488368_i64, 2846360072_u32, 16565_i16);
_1 = '\u{89e91}' as isize;
_5 = (-147027953962305792556098632636766731534_i128) as isize;
_23 = core::ptr::addr_of!(_24.0);
_7 = [_6];
_7 = [_20];
_24.2 = (-18447_i16) + 32463_i16;
Goto(bb3)
}
bb7 = {
_11 = !false;
_6 = -_1;
_7 = [_6];
_8 = _4;
_13.1 = 78_u8;
_8 = _4 << _1;
_8 = _4;
_5 = !_1;
_2 = _3;
_4 = _8;
_11 = true | true;
_8 = _6;
_2 = _3;
_7 = [_1];
_1 = _6;
_16 = _1;
_7 = [_8];
_13.1 = 237_u8 - 22_u8;
_8 = 1814_i16 as isize;
_5 = (-48085272648279344029136405508075987237_i128) as isize;
_4 = -_1;
_7 = [_1];
_2 = [25043_i16,2367_i16,21002_i16,1574_i16,(-30339_i16),31257_i16,7061_i16,(-20344_i16)];
_3 = _2;
Goto(bb2)
}
bb8 = {
_17 = [_5];
_31 = -(-1171967156_i32);
_24.1 = 3388686908_u32 + 1525355338_u32;
_22 = [_24.2,_24.2,_24.2];
RET = _22;
_30 = [_25];
_13.1 = !78_u8;
_1 = -_8;
_27 = _17;
_32 = _20 as f32;
_25 = '\u{3c789}';
RET = [_24.2,_24.2,_24.2];
_6 = _24.0 as isize;
_29 = _32 as usize;
match (*_23) {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
331321442915617915 => bb17,
_ => bb16
}
}
bb9 = {
_11 = !false;
_6 = -_1;
_7 = [_6];
_8 = _4;
_13.1 = 78_u8;
_8 = _4 << _1;
_8 = _4;
_5 = !_1;
_2 = _3;
_4 = _8;
_11 = true | true;
_8 = _6;
_2 = _3;
_7 = [_1];
_1 = _6;
_16 = _1;
_7 = [_8];
_13.1 = 237_u8 - 22_u8;
_8 = 1814_i16 as isize;
_5 = (-48085272648279344029136405508075987237_i128) as isize;
_4 = -_1;
_7 = [_1];
_2 = [25043_i16,2367_i16,21002_i16,1574_i16,(-30339_i16),31257_i16,7061_i16,(-20344_i16)];
_3 = _2;
Goto(bb2)
}
bb10 = {
_6 = _4;
_1 = 7471127808701008869_i64 as isize;
_18 = 240944536854200228945273415105461809248_u128 as isize;
_20 = -_6;
_20 = !_6;
_10 = [34386_u16,63769_u16,43806_u16,42755_u16,21244_u16,43506_u16];
_8 = _16 | _16;
_24 = (1812515700522488368_i64, 2846360072_u32, 16565_i16);
_1 = '\u{89e91}' as isize;
_5 = (-147027953962305792556098632636766731534_i128) as isize;
_23 = core::ptr::addr_of!(_24.0);
_7 = [_6];
_7 = [_20];
_24.2 = (-18447_i16) + 32463_i16;
Goto(bb3)
}
bb11 = {
_22 = RET;
_23 = core::ptr::addr_of!(_24.0);
_4 = _20;
_4 = _16;
_7 = [_16];
_18 = 59808379758946892213235521938958017100_i128 as isize;
_24.2 = (-1916_i16);
_26 = [(-185128059_i32),(-35308867_i32)];
_17 = [_4];
_3 = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_21 = 9439573517621362000_u64 << _20;
_21 = !4603401490103770070_u64;
_24.2 = (-904178120_i32) as i16;
_24.0 = !1451246118654606792_i64;
_23 = core::ptr::addr_of!((*_23));
_25 = '\u{42e11}';
_25 = '\u{9fefe}';
_5 = _20;
Goto(bb4)
}
bb12 = {
_24.0 = 9123499444089173337_i64 ^ 4499648997831162599_i64;
_22 = [_24.2,_24.2,_24.2];
_20 = -_16;
_24.2 = (-9946_i16);
_28 = [1888893381_i32,(-385492945_i32)];
_24.0 = (-4555196397426413148_i64) - (-5384674989782862793_i64);
_24.0 = 5791164327790803191_i64 & (-1286573685921709305_i64);
_27 = [_4];
RET = [_24.2,_24.2,_24.2];
_24 = (331321442915617915_i64, 869448623_u32, 7472_i16);
match (*_23) {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
331321442915617915 => bb8,
_ => bb7
}
}
bb13 = {
_22 = RET;
_23 = core::ptr::addr_of!(_24.0);
_4 = _20;
_4 = _16;
_7 = [_16];
_18 = 59808379758946892213235521938958017100_i128 as isize;
_24.2 = (-1916_i16);
_26 = [(-185128059_i32),(-35308867_i32)];
_17 = [_4];
_3 = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_21 = 9439573517621362000_u64 << _20;
_21 = !4603401490103770070_u64;
_24.2 = (-904178120_i32) as i16;
_24.0 = !1451246118654606792_i64;
_23 = core::ptr::addr_of!((*_23));
_25 = '\u{42e11}';
_25 = '\u{9fefe}';
_5 = _20;
Goto(bb4)
}
bb14 = {
_6 = _4;
_1 = 7471127808701008869_i64 as isize;
_18 = 240944536854200228945273415105461809248_u128 as isize;
_20 = -_6;
_20 = !_6;
_10 = [34386_u16,63769_u16,43806_u16,42755_u16,21244_u16,43506_u16];
_8 = _16 | _16;
_24 = (1812515700522488368_i64, 2846360072_u32, 16565_i16);
_1 = '\u{89e91}' as isize;
_5 = (-147027953962305792556098632636766731534_i128) as isize;
_23 = core::ptr::addr_of!(_24.0);
_7 = [_6];
_7 = [_20];
_24.2 = (-18447_i16) + 32463_i16;
Goto(bb3)
}
bb15 = {
_11 = !false;
_6 = -_1;
_7 = [_6];
_8 = _4;
_13.1 = 78_u8;
_8 = _4 << _1;
_8 = _4;
_5 = !_1;
_2 = _3;
_4 = _8;
_11 = true | true;
_8 = _6;
_2 = _3;
_7 = [_1];
_1 = _6;
_16 = _1;
_7 = [_8];
_13.1 = 237_u8 - 22_u8;
_8 = 1814_i16 as isize;
_5 = (-48085272648279344029136405508075987237_i128) as isize;
_4 = -_1;
_7 = [_1];
_2 = [25043_i16,2367_i16,21002_i16,1574_i16,(-30339_i16),31257_i16,7061_i16,(-20344_i16)];
_3 = _2;
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
_8 = _31 as isize;
_5 = _4 & _16;
_6 = _8 | _4;
_1 = !_16;
_31 = (-148866463_i32);
_20 = _11 as isize;
_25 = '\u{f01f8}';
_4 = _5 >> _29;
_30 = [_25];
_29 = _5 as usize;
_35.0 = _13.1 as i64;
_4 = _6;
RET = _22;
_23 = core::ptr::addr_of!(_35.0);
_16 = 34002_u16 as isize;
RET = [_24.2,_24.2,_24.2];
Goto(bb18)
}
bb18 = {
Call(_37 = dump_var(8_usize, 18_usize, Move(_18), 11_usize, Move(_11), 22_usize, Move(_22), 31_usize, Move(_31)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_37 = dump_var(8_usize, 29_usize, Move(_29), 6_usize, Move(_6), 21_usize, Move(_21), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_37 = dump_var(8_usize, 3_usize, Move(_3), 28_usize, Move(_28), 5_usize, Move(_5), 26_usize, Move(_26)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [i16; 8],mut _2: [isize; 1],mut _3: u32,mut _4: [isize; 1],mut _5: isize,mut _6: char) -> [i16; 3] {
mir! {
type RET = [i16; 3];
let _7: i32;
let _8: isize;
let _9: ([u64; 4],);
let _10: *mut (*const i64,);
let _11: (i64, u32, i16);
let _12: ((i64, u32, i16), (u32, u8, *mut i8));
let _13: f32;
let _14: isize;
let _15: f64;
let _16: [u16; 6];
let _17: ([u64; 4],);
let _18: usize;
let _19: (i64, u32, i16);
let _20: [u16; 6];
let _21: [u16; 6];
let _22: f32;
let _23: [i16; 3];
let _24: [i16; 3];
let _25: [char; 1];
let _26: [u64; 4];
let _27: Adt48;
let _28: ([u64; 4],);
let _29: i64;
let _30: isize;
let _31: [char; 1];
let _32: isize;
let _33: [u16; 6];
let _34: [i32; 2];
let _35: i64;
let _36: *const *mut i8;
let _37: Adt51;
let _38: char;
let _39: ();
let _40: ();
{
_1 = [30222_i16,(-2812_i16),11640_i16,(-21588_i16),8237_i16,14330_i16,(-26452_i16),(-24534_i16)];
_4 = [_5];
RET = [30854_i16,(-29725_i16),440_i16];
_6 = '\u{adf9d}';
_6 = '\u{7eaba}';
_4 = [_5];
_3 = 3307971827_u32 >> _5;
_3 = 509957216_u32 - 265918840_u32;
_4 = [_5];
_9.0 = [2479398909876144007_u64,8824386906684977915_u64,1639147889488158075_u64,3256649121342728045_u64];
RET = [3625_i16,23836_i16,19710_i16];
_3 = !1003988466_u32;
_7 = 3009927_i32;
RET = [13704_i16,(-2541_i16),(-24130_i16)];
_3 = 6_usize as u32;
RET = [(-27941_i16),27295_i16,(-20253_i16)];
_9.0 = [17932068532115953543_u64,9221546387254010355_u64,8364329289498999127_u64,1362641594989467444_u64];
Goto(bb1)
}
bb1 = {
_8 = _5;
_12.0 = ((-6154990249603577157_i64), _3, (-22053_i16));
_12.1.1 = 211_u8;
_11.0 = _12.0.0;
_6 = '\u{c12e1}';
_11.2 = !_12.0.2;
_12.0.1 = _3 ^ _3;
_9.0 = [1306807974632105023_u64,14807945505196034368_u64,13179234039092056098_u64,11565154651334268578_u64];
_12.0.1 = _3;
_7 = -1993795837_i32;
_5 = _8 ^ _8;
_11 = (_12.0.0, _12.0.1, _12.0.2);
_12.0.0 = _8 as i64;
_9.0 = [9813296178910006845_u64,1363384288784325476_u64,2781199145633114071_u64,6898580892150509473_u64];
_2 = [_8];
match _12.0.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607431768189403 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_7 = true as i32;
_11.2 = -_12.0.2;
_3 = !_11.1;
_8 = _5;
_12.1.1 = 201_u8;
_4 = [_8];
_5 = -_8;
_13 = _7 as f32;
_13 = _12.1.1 as f32;
_8 = _5 - _5;
_9.0 = [2625480954095277253_u64,5996034622305347778_u64,7291054531824291791_u64,5991433711005112770_u64];
_12.1.0 = _11.1 | _11.1;
_13 = _12.1.1 as f32;
RET = [_12.0.2,_11.2,_11.2];
_12.1.0 = _12.0.1 + _3;
_11.1 = !_12.1.0;
_8 = _5 << _5;
RET = [_11.2,_11.2,_11.2];
_16 = [39859_u16,18126_u16,54448_u16,24811_u16,30884_u16,24386_u16];
_7 = 13733555115897473706_u64 as i32;
_12.0.1 = _12.1.0 * _3;
Goto(bb8)
}
bb8 = {
_19.0 = _12.0.0;
_5 = _8 * _8;
_6 = '\u{7a08b}';
_19.0 = -_11.0;
_11.1 = _12.0.1 << _11.0;
_11.1 = _12.0.1;
_12.0 = _11;
_17 = _9;
_4 = [_5];
_3 = _12.0.0 as u32;
RET = [_11.2,_12.0.2,_12.0.2];
_13 = _7 as f32;
_12.0.0 = _11.0 * _11.0;
_4 = [_8];
_12.1.0 = _6 as u32;
Goto(bb9)
}
bb9 = {
_4 = [_5];
_12.1.1 = _13 as u8;
_6 = '\u{47db}';
_9 = _17;
_19.0 = _6 as i64;
_11.2 = 13_i8 as i16;
_22 = -_13;
_15 = _12.1.1 as f64;
_18 = !7_usize;
_18 = 2447086383710208308_usize | 6822303394637825808_usize;
_9.0 = [18348173109918701393_u64,13449885521631106248_u64,16214948027101554884_u64,14398152968114544702_u64];
_25 = [_6];
_8 = _5 | _5;
_23 = [_12.0.2,_12.0.2,_11.2];
_11.0 = _12.0.1 as i64;
_5 = 50457_u16 as isize;
_4 = _2;
_12.0.0 = 163281337351638345426602856150602714476_i128 as i64;
Goto(bb10)
}
bb10 = {
_20 = [33848_u16,31920_u16,36801_u16,36245_u16,32975_u16,20832_u16];
_6 = '\u{879da}';
_26 = _17.0;
_5 = _8 * _8;
_6 = '\u{63cb6}';
_19.1 = _6 as u32;
_20 = [54289_u16,57487_u16,25015_u16,53919_u16,45926_u16,20718_u16];
_23 = RET;
RET = [_12.0.2,_12.0.2,_11.2];
_11.1 = !_19.1;
_2 = [_5];
_27.fld1 = (-88_i8) as u8;
_14 = _8 << _5;
_19 = _12.0;
_21 = _16;
_11.0 = _12.0.0 * _12.0.0;
_12.0.1 = _19.1 ^ _12.1.0;
_18 = !6_usize;
_12.0.1 = _19.1 + _12.1.0;
_22 = _13 + _13;
_19.2 = !_12.0.2;
_18 = 7_usize ^ 6_usize;
Goto(bb11)
}
bb11 = {
_13 = _22;
_24 = [_12.0.2,_11.2,_19.2];
_32 = 86_i8 as isize;
_28.0 = _26;
_19.2 = _12.0.2;
_11 = (_19.0, _3, _19.2);
Goto(bb12)
}
bb12 = {
_29 = !_11.0;
_23 = [_19.2,_11.2,_12.0.2];
_30 = _6 as isize;
_12.1.0 = 1440258200981530680_u64 as u32;
_26 = [3411890887518415240_u64,8838844948549765042_u64,9413251691150719205_u64,5138225791532016474_u64];
_4 = [_5];
_17 = (_9.0,);
_7 = true as i32;
_22 = -_13;
_17.0 = _28.0;
_11.1 = _3 ^ _3;
_4 = [_5];
_15 = _19.0 as f64;
_4 = [_8];
Goto(bb13)
}
bb13 = {
_30 = _5;
_17.0 = [9213080527502352060_u64,12223589013308871232_u64,6030139217748742681_u64,10807918894139536194_u64];
_12.0.1 = !_11.1;
_32 = _8;
_12.0.2 = _11.2;
_8 = _30;
RET = _24;
_23 = [_12.0.2,_12.0.2,_12.0.2];
_11.1 = !_3;
_26 = _9.0;
_26 = [4817625170297402582_u64,12416796321321989405_u64,10674296535858874589_u64,2047594615138463445_u64];
_19 = _12.0;
_31 = _25;
_1 = [_11.2,_12.0.2,_11.2,_11.2,_12.0.2,_19.2,_19.2,_19.2];
_11.2 = _3 as i16;
_35 = _11.0;
_23 = _24;
_28 = (_17.0,);
_9 = (_28.0,);
_12.1.1 = !_27.fld1;
_28 = (_26,);
_21 = [41716_u16,35838_u16,48174_u16,19481_u16,29499_u16,53176_u16];
_37 = Adt51::Variant0 { fld0: _17,fld1: _6 };
_11 = _12.0;
Goto(bb14)
}
bb14 = {
SetDiscriminant(_37, 1);
_15 = _12.0.2 as f64;
place!(Field::<*const usize>(Variant(_37, 1), 1)) = core::ptr::addr_of!(_18);
_23 = [_12.0.2,_19.2,_12.0.2];
_26 = [504523112029130029_u64,7451029106072763572_u64,13329874985640055646_u64,16260892376828628673_u64];
_24 = [_12.0.2,_11.2,_19.2];
_14 = _30;
_35 = _29;
_13 = _18 as f32;
_17.0 = _28.0;
_23 = [_11.2,_11.2,_12.0.2];
_34 = [_7,_7];
_11 = _19;
_12.0.0 = -_19.0;
RET = [_12.0.2,_19.2,_12.0.2];
place!(Field::<i32>(Variant(_37, 1), 5)) = _7 | _7;
_33 = [46008_u16,45526_u16,4161_u16,6626_u16,1073_u16,23433_u16];
_35 = -_12.0.0;
place!(Field::<u64>(Variant(_37, 1), 2)) = 110_i8 as u64;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(9_usize, 29_usize, Move(_29), 1_usize, Move(_1), 6_usize, Move(_6), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(9_usize, 20_usize, Move(_20), 26_usize, Move(_26), 24_usize, Move(_24), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(9_usize, 25_usize, Move(_25), 9_usize, Move(_9), 3_usize, Move(_3), 31_usize, Move(_31)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(9_usize, 11_usize, Move(_11), 30_usize, Move(_30), 40_usize, _40, 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: isize,mut _2: isize,mut _3: [isize; 1],mut _4: isize,mut _5: isize,mut _6: char,mut _7: [i16; 8],mut _8: u32) -> [isize; 1] {
mir! {
type RET = [isize; 1];
let _9: [i32; 2];
let _10: ();
let _11: ();
{
_3 = [_5];
RET = [_5];
_3 = [_1];
_9 = [1508408508_i32,44361867_i32];
_4 = _6 as isize;
_6 = '\u{b2880}';
_8 = 432680785_u32;
_6 = '\u{e7bd1}';
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(10_usize, 1_usize, Move(_1), 3_usize, Move(_3), 5_usize, Move(_5), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: ([u64; 4],),mut _3: [u64; 4],mut _4: (i64, u32, i16)) -> [i32; 2] {
mir! {
type RET = [i32; 2];
let _5: &'static f32;
let _6: isize;
let _7: i64;
let _8: i128;
let _9: ([u64; 4],);
let _10: (i64, u32, i16);
let _11: *mut i8;
let _12: f32;
let _13: i16;
let _14: f32;
let _15: f32;
let _16: isize;
let _17: i128;
let _18: f32;
let _19: (i64, u32, i16);
let _20: ((i64, u32, i16), (u32, u8, *mut i8));
let _21: [u16; 6];
let _22: f32;
let _23: isize;
let _24: Adt56;
let _25: ();
let _26: ();
{
_4 = (9160545127416496914_i64, 94337117_u32, 9648_i16);
RET = [(-124282545_i32),82262704_i32];
_4.1 = !3413011308_u32;
_4 = (2843452820077496168_i64, 1567023788_u32, 20046_i16);
RET = [(-1167482123_i32),2051424680_i32];
_2 = (_3,);
_4 = ((-8380298134249271646_i64), 3235337375_u32, (-29758_i16));
_4.2 = (-12085_i16);
_3 = [12104090407413259778_u64,11430028124975040096_u64,9178562951952338554_u64,14495712224621740775_u64];
_2.0 = [14153846378453391028_u64,9528514379803336594_u64,16260031302858936018_u64,2495071886714625412_u64];
_4.2 = !4007_i16;
_3 = _2.0;
_4.0 = 4206597727343949535_i64 << _4.1;
_2.0 = [13631661296633135317_u64,8187693995218832914_u64,17499366467092149880_u64,4020492778085957773_u64];
_4.0 = _4.1 as i64;
_6 = _1 - _1;
_4.2 = 10792_i16;
_4.1 = (-258680707_i32) as u32;
match _4.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
10792 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = (_3,);
RET = [(-564680075_i32),809274078_i32];
_6 = (-159444180324228850816919470181466965086_i128) as isize;
_3 = _2.0;
_7 = _4.0;
_4.1 = 1726934258_u32;
RET = [(-909458279_i32),127440127_i32];
_2.0 = [430410297939767956_u64,13205481256446332166_u64,759523530855517399_u64,1340239545353181532_u64];
RET = [(-1735834860_i32),336140406_i32];
_4.2 = (-6573_i16) & (-10256_i16);
_8 = _4.1 as i128;
_2 = (_3,);
_4.0 = _4.2 as i64;
_3 = [17015958898212992756_u64,16064844423633334729_u64,18288201292472904188_u64,15971987530852493144_u64];
RET = [(-383541410_i32),985274524_i32];
_9.0 = _2.0;
_2.0 = [6179212863541733043_u64,8439063346738093759_u64,15736265482867361623_u64,18032587167090160459_u64];
_1 = -_6;
Goto(bb10)
}
bb10 = {
_9 = _2;
_4.1 = 3039265854_u32 & 1380226286_u32;
_1 = !_6;
RET = [(-1225787705_i32),1059066363_i32];
_4 = (_7, 1978773224_u32, 28432_i16);
_4.2 = (-4747_i16);
RET = [1882208480_i32,(-1266363865_i32)];
_2.0 = [2018403015316149294_u64,10760998440686279734_u64,4579984410560492951_u64,2762697841841831188_u64];
_4.0 = _7;
_9 = (_3,);
RET = [1230002585_i32,(-2071322930_i32)];
_7 = _4.0;
_6 = _1;
_13 = 2102028390856599505_usize as i16;
_4 = (_7, 317076386_u32, _13);
_1 = (-45_i8) as isize;
_10.2 = _13 & _4.2;
Call(_3 = fn12(_2.0, _10.2, _9, _2.0, _9.0, _7, _9, _1, _4.1, _2, _2.0, _4.1, _9, _4.1, _4.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_4.1 = _6 as u32;
_10.0 = -_4.0;
_7 = _4.0;
_13 = !_10.2;
_5 = &_12;
_9.0 = [16741407809210099241_u64,7228709567898331384_u64,8298819427522611220_u64,14916553083019574756_u64];
_10.1 = _4.1;
_6 = _1 & _1;
_10.1 = _4.1 - _4.1;
_10.1 = !_4.1;
_10 = (_7, _4.1, _13);
_12 = _4.2 as f32;
_2.0 = [14337817693529058192_u64,1824353700262371090_u64,12001105731759904798_u64,14501851897688324468_u64];
_18 = -_12;
_19.2 = _13 ^ _10.2;
_9.0 = [3087766696513433239_u64,2667866468254443771_u64,9641052903017182891_u64,12873661244068958695_u64];
_14 = _12;
_16 = _8 as isize;
_19.1 = 4_usize as u32;
_6 = _16;
_15 = _14 * _14;
Goto(bb12)
}
bb12 = {
_4.2 = !_10.2;
_20.0.0 = !_7;
_3 = [8055183589869282347_u64,12988993356863813215_u64,1278872042566355323_u64,302089629210888897_u64];
_20.0.2 = _19.2 ^ _13;
_8 = _10.1 as i128;
_10 = _4;
_2.0 = [16873221872104521475_u64,18285674571314849487_u64,16714649650962436202_u64,6279352684852962835_u64];
_3 = [9720141241674077957_u64,2472708027378846366_u64,18337279628427049990_u64,12041945507310075952_u64];
_14 = -_15;
_10.1 = _4.1;
_9.0 = [15847171692804216349_u64,5017461926249641577_u64,5169889178797965349_u64,11704545921864837948_u64];
_4.0 = !_20.0.0;
_8 = !(-103405894355034026330395689978122203572_i128);
_9 = (_2.0,);
Call(_16 = core::intrinsics::transmute(_10.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_20.1.1 = 46_u8 | 21_u8;
_7 = _10.0;
_6 = _16;
_19.1 = _10.1;
_22 = _12;
_10.0 = _6 as i64;
_2.0 = _3;
_15 = _22 + _12;
_4 = (_10.0, _10.1, _20.0.2);
_9 = _2;
_15 = -_12;
Goto(bb14)
}
bb14 = {
_10.0 = _4.0;
_17 = _8;
_20.0 = (_4.0, _19.1, _13);
_20.0.0 = _10.0 | _4.0;
_20.0.2 = -_19.2;
_19.1 = _4.1;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(11_usize, 17_usize, Move(_17), 7_usize, Move(_7), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(11_usize, 6_usize, Move(_6), 10_usize, Move(_10), 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [u64; 4],mut _2: i16,mut _3: ([u64; 4],),mut _4: [u64; 4],mut _5: [u64; 4],mut _6: i64,mut _7: ([u64; 4],),mut _8: isize,mut _9: u32,mut _10: ([u64; 4],),mut _11: [u64; 4],mut _12: u32,mut _13: ([u64; 4],),mut _14: u32,mut _15: u32) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _16: char;
let _17: [i16; 8];
let _18: f32;
let _19: f32;
let _20: Adt49;
let _21: f32;
let _22: isize;
let _23: [i16; 8];
let _24: [char; 1];
let _25: [i32; 2];
let _26: *const i64;
let _27: u32;
let _28: *const usize;
let _29: usize;
let _30: *mut i8;
let _31: u16;
let _32: f64;
let _33: u32;
let _34: f32;
let _35: ();
let _36: ();
{
_3 = (_5,);
_13.0 = [5870596977840487966_u64,2646450016773394115_u64,10031372959688543095_u64,15909450668240896502_u64];
_16 = '\u{58345}';
Call(_9 = fn13(_7.0, _12, _15, _7.0, _10, _7.0, _13, _14, _14, _15, _14, _4, _10.0, _8, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7.0 = [15086468967448041546_u64,9038153004697520771_u64,3688018623491386277_u64,12924721580523493185_u64];
RET = _4;
_3.0 = _4;
_6 = 4907947298002381000_i64;
_9 = _15;
_13.0 = _4;
_1 = _4;
_2 = (-26424_i16) & 11691_i16;
_2 = 22173_i16;
_17 = [_2,_2,_2,_2,_2,_2,_2,_2];
_3 = _10;
_7.0 = [3781094037319077407_u64,8988964866223313301_u64,10841549200061376681_u64,11094555181596349500_u64];
match _15 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
317076386 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_9 = !_15;
_19 = 211_u8 as f32;
_20.fld2.0 = _6 - _6;
RET = [14242371857411703848_u64,1494540186612571489_u64,13354259478150660994_u64,10206138771626348312_u64];
_8 = 85_isize + 9223372036854775807_isize;
_20.fld3 = [_2,_2,_2];
_11 = _10.0;
_7.0 = [2419505078117130292_u64,11848494681169614055_u64,7927821411588944636_u64,11938039062447564209_u64];
_1 = _13.0;
_20.fld1 = 5_usize & 15344410047098160502_usize;
_14 = _15 * _15;
_12 = !_14;
_1 = [12527377772499212359_u64,2844991436814681560_u64,5254694314968993269_u64,18075742386962868606_u64];
_23 = [_2,_2,_2,_2,_2,_2,_2,_2];
_22 = _8;
_1 = [3230050579620617712_u64,14336857359706619506_u64,913460956395270549_u64,1454615200003593725_u64];
_13.0 = [14068273352122052475_u64,12752816205409089259_u64,199157603662979411_u64,18417287202543402838_u64];
_25 = [1006547176_i32,507739747_i32];
Goto(bb11)
}
bb11 = {
_26 = core::ptr::addr_of!(_20.fld2.0);
RET = _1;
_6 = 152751314085727914514184537509270648469_u128 as i64;
_27 = _22 as u32;
_24 = [_16];
_29 = _2 as usize;
_15 = _12;
_28 = core::ptr::addr_of!(_20.fld1);
_25 = [(-1029496731_i32),(-887194647_i32)];
match _2 {
0 => bb10,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
22173 => bb13,
_ => bb12
}
}
bb12 = {
_7.0 = [15086468967448041546_u64,9038153004697520771_u64,3688018623491386277_u64,12924721580523493185_u64];
RET = _4;
_3.0 = _4;
_6 = 4907947298002381000_i64;
_9 = _15;
_13.0 = _4;
_1 = _4;
_2 = (-26424_i16) & 11691_i16;
_2 = 22173_i16;
_17 = [_2,_2,_2,_2,_2,_2,_2,_2];
_3 = _10;
_7.0 = [3781094037319077407_u64,8988964866223313301_u64,10841549200061376681_u64,11094555181596349500_u64];
match _15 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
317076386 => bb10,
_ => bb9
}
}
bb13 = {
_27 = _16 as u32;
_11 = [4519550192321717138_u64,9421462587980003797_u64,8612793474004132066_u64,1604504400075496252_u64];
_27 = _19 as u32;
_20.fld2.2 = false as i16;
_9 = !_15;
_3.0 = [11080249145036627004_u64,7684664979665117792_u64,6425383499311632909_u64,9633066148156425921_u64];
_20.fld3 = [_2,_20.fld2.2,_2];
_9 = _15 << _14;
_31 = _19 as u16;
_7 = _3;
_20.fld2.1 = _9 << _15;
_29 = !(*_28);
_27 = _9;
Call(_21 = core::intrinsics::transmute(_27), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_20.fld2 = (_6, _12, _2);
_21 = (*_28) as f32;
_9 = _20.fld2.1;
_20.fld2.2 = _2;
_34 = _21;
_18 = -_19;
_20.fld3 = [_2,_20.fld2.2,_20.fld2.2];
_29 = _20.fld1;
_34 = _18 + _21;
_16 = '\u{c673}';
_23 = _17;
_25 = [997937691_i32,(-1327683179_i32)];
_26 = core::ptr::addr_of!(_6);
_3.0 = [1744110706285723614_u64,9913284415674026035_u64,16715238971420483796_u64,13571258415600361456_u64];
_16 = '\u{b60ed}';
_12 = !_27;
_33 = !_27;
_33 = _12 << _9;
_4 = _11;
_9 = !_14;
_9 = _12;
_3.0 = _7.0;
_31 = _20.fld2.0 as u16;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(12_usize, 3_usize, Move(_3), 25_usize, Move(_25), 27_usize, Move(_27), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(12_usize, 5_usize, Move(_5), 1_usize, Move(_1), 14_usize, Move(_14), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(12_usize, 24_usize, Move(_24), 7_usize, Move(_7), 16_usize, Move(_16), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [u64; 4],mut _2: u32,mut _3: u32,mut _4: [u64; 4],mut _5: ([u64; 4],),mut _6: [u64; 4],mut _7: ([u64; 4],),mut _8: u32,mut _9: u32,mut _10: u32,mut _11: u32,mut _12: [u64; 4],mut _13: [u64; 4],mut _14: isize,mut _15: [u64; 4]) -> u32 {
mir! {
type RET = u32;
let _16: f64;
let _17: bool;
let _18: u8;
let _19: ();
let _20: ();
{
_13 = [17640184601192609419_u64,1781463678439195950_u64,11597268588599515173_u64,6185487540194102277_u64];
_7.0 = _4;
_11 = 41_u8 as u32;
_13 = [18031776240940316049_u64,13854626653299292999_u64,3227154028857608472_u64,9157081691713184184_u64];
_15 = [12396704613679475120_u64,10585784791159351994_u64,9241284924133005200_u64,14011162839564946048_u64];
_9 = _8 << _8;
_7 = _5;
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
317076386 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_12 = [4934007937406113705_u64,11579974431664347017_u64,527905268432490193_u64,13529217191385882440_u64];
_1 = [18413787889730648300_u64,10954537719113137652_u64,15324728977224836972_u64,862589547878438610_u64];
RET = _10 * _9;
_14 = (-9223372036854775808_isize);
_12 = _1;
_6 = _15;
_11 = _3;
_8 = 86994487958628388142344198062588982476_u128 as u32;
_16 = (-338712890_i32) as f64;
_8 = RET ^ _3;
_7.0 = [8358993038591745570_u64,16004426682537050445_u64,13501751937532177885_u64,4769870806665497379_u64];
_15 = _5.0;
_2 = (-130368926752303934532609321549655691385_i128) as u32;
_3 = !_11;
_7 = (_6,);
_9 = !_8;
_4 = _6;
_7 = _5;
_7.0 = [12765774365481558111_u64,7640710131174178016_u64,1152925850796335011_u64,13160858439151668526_u64];
_7 = (_4,);
Goto(bb8)
}
bb8 = {
Call(_19 = dump_var(13_usize, 2_usize, Move(_2), 9_usize, Move(_9), 10_usize, Move(_10), 13_usize, Move(_13)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_19 = dump_var(13_usize, 8_usize, Move(_8), 7_usize, Move(_7), 1_usize, Move(_1), 20_usize, _20), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: isize,mut _2: [u64; 4],mut _3: ([u64; 4],),mut _4: [u64; 4],mut _5: u16,mut _6: [i16; 3],mut _7: bool,mut _8: bool,mut _9: usize,mut _10: [i16; 3],mut _11: ([u64; 4],),mut _12: isize,mut _13: ([u64; 4],),mut _14: u32) -> Adt49 {
mir! {
type RET = Adt49;
let _15: f32;
let _16: ([u64; 4],);
let _17: f32;
let _18: f64;
let _19: [isize; 1];
let _20: isize;
let _21: ([u64; 4],);
let _22: isize;
let _23: u64;
let _24: u128;
let _25: *const i64;
let _26: (*const *mut i8, ([u64; 4],), [u16; 6]);
let _27: [i16; 8];
let _28: *const *mut i8;
let _29: isize;
let _30: (i64, u32, i16);
let _31: isize;
let _32: i16;
let _33: [char; 1];
let _34: i128;
let _35: char;
let _36: ([u64; 4],);
let _37: [i16; 8];
let _38: u16;
let _39: *const i32;
let _40: *mut (*const i64,);
let _41: [i32; 2];
let _42: [char; 1];
let _43: bool;
let _44: [isize; 1];
let _45: f32;
let _46: i8;
let _47: i64;
let _48: ();
let _49: ();
{
_7 = _8;
_3.0 = [14352083324681244017_u64,9273606472955294129_u64,18234288652994183287_u64,16996340221246861004_u64];
RET.fld3 = [(-16169_i16),(-3251_i16),(-12825_i16)];
_4 = [18224336492010317198_u64,14034142774669936948_u64,3589080538871716862_u64,16900564300063378209_u64];
RET.fld2.0 = (-6079877491607355242_i64);
RET.fld2.2 = 7071_i16;
_3 = (_13.0,);
_9 = 3_usize * 11108610393155531623_usize;
_5 = 31456_u16;
RET.fld2.0 = -5899975889231484599_i64;
RET.fld2 = (383428930701110296_i64, _14, 18037_i16);
RET.fld0 = Adt44::Variant1 { fld0: _7,fld1: '\u{ac880}' };
place!(Field::<char>(Variant(RET.fld0, 1), 1)) = '\u{6ea14}';
RET.fld1 = (-81_i8) as usize;
_2 = [16828392364796319918_u64,8682853326677975138_u64,2064947452275356701_u64,3955068724332265574_u64];
_11 = (_13.0,);
SetDiscriminant(RET.fld0, 0);
_2 = [3213582044889278614_u64,10855641833426870109_u64,2880378050812156918_u64,596210292824709003_u64];
_11.0 = _3.0;
RET.fld2.1 = _14 - _14;
_13 = _3;
RET.fld2.2 = -31013_i16;
match RET.fld2.0 {
383428930701110296 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
RET.fld0 = Adt44::Variant1 { fld0: _7,fld1: '\u{755f5}' };
RET.fld2.2 = 11275_i16 >> _1;
RET.fld2.0 = RET.fld2.2 as i64;
_17 = (-33_i8) as f32;
_1 = _12 >> RET.fld2.1;
_11 = _3;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_14 = RET.fld2.1;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _8;
_5 = !51884_u16;
_6 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld2 = ((-149904129111795348_i64), _14, 30707_i16);
RET.fld3 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld2.1 = !_14;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _8 | _7;
_19 = [_1];
_5 = !26826_u16;
_13.0 = [1184070636224451581_u64,3355090737731227914_u64,14770373542544040611_u64,9534764641012011803_u64];
_9 = RET.fld1 & RET.fld1;
_13 = _3;
RET.fld2.0 = -7611045707594495332_i64;
Goto(bb3)
}
bb3 = {
_15 = _17 * _17;
_18 = RET.fld1 as f64;
_17 = _15;
place!(Field::<char>(Variant(RET.fld0, 1), 1)) = '\u{a1f6d}';
_20 = 253916430955411094025358543725528143966_u128 as isize;
Call(place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = fn15(_11, RET.fld2, _1, _18, _11, _6, RET.fld3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_7;
_1 = _15 as isize;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _7;
_8 = _7;
RET.fld2.1 = _14 << RET.fld2.0;
RET.fld2 = (2763899554468071949_i64, _14, (-1496_i16));
_16 = (_3.0,);
_21.0 = [11631872636609702659_u64,8627848100534512939_u64,10087944918179392350_u64,11003916011677132911_u64];
_2 = [16548143891441499602_u64,16934815956276493333_u64,8508564661845651007_u64,6987806832536437497_u64];
_14 = RET.fld2.1 - RET.fld2.1;
_16 = (_13.0,);
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_11 = (_21.0,);
_9 = RET.fld2.0 as usize;
RET.fld2.0 = 20342754953400057635481202013328801747_i128 as i64;
RET.fld1 = _18 as usize;
_15 = _17 * _17;
SetDiscriminant(RET.fld0, 1);
_13 = (_2,);
place!(Field::<char>(Variant(RET.fld0, 1), 1)) = '\u{b1604}';
Goto(bb5)
}
bb5 = {
RET.fld0 = Adt44::Variant1 { fld0: _7,fld1: '\u{e3227}' };
_22 = !_1;
_15 = 88082344204959841678631735783143928798_u128 as f32;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_22 = _1 & _1;
match RET.fld2.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463463374607431768209960 => bb7,
_ => bb6
}
}
bb6 = {
RET.fld0 = Adt44::Variant1 { fld0: _7,fld1: '\u{755f5}' };
RET.fld2.2 = 11275_i16 >> _1;
RET.fld2.0 = RET.fld2.2 as i64;
_17 = (-33_i8) as f32;
_1 = _12 >> RET.fld2.1;
_11 = _3;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_14 = RET.fld2.1;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _8;
_5 = !51884_u16;
_6 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld2 = ((-149904129111795348_i64), _14, 30707_i16);
RET.fld3 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld2.1 = !_14;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _8 | _7;
_19 = [_1];
_5 = !26826_u16;
_13.0 = [1184070636224451581_u64,3355090737731227914_u64,14770373542544040611_u64,9534764641012011803_u64];
_9 = RET.fld1 & RET.fld1;
_13 = _3;
RET.fld2.0 = -7611045707594495332_i64;
Goto(bb3)
}
bb7 = {
_1 = _22 - _22;
_26.1.0 = _2;
_4 = [11714336535354872571_u64,7449129359910467401_u64,2527707150612164360_u64,5997614711501816242_u64];
match RET.fld2.2 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb8,
340282366920938463463374607431768209960 => bb10,
_ => bb9
}
}
bb8 = {
RET.fld0 = Adt44::Variant1 { fld0: _7,fld1: '\u{755f5}' };
RET.fld2.2 = 11275_i16 >> _1;
RET.fld2.0 = RET.fld2.2 as i64;
_17 = (-33_i8) as f32;
_1 = _12 >> RET.fld2.1;
_11 = _3;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_14 = RET.fld2.1;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _8;
_5 = !51884_u16;
_6 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld2 = ((-149904129111795348_i64), _14, 30707_i16);
RET.fld3 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld2.1 = !_14;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _8 | _7;
_19 = [_1];
_5 = !26826_u16;
_13.0 = [1184070636224451581_u64,3355090737731227914_u64,14770373542544040611_u64,9534764641012011803_u64];
_9 = RET.fld1 & RET.fld1;
_13 = _3;
RET.fld2.0 = -7611045707594495332_i64;
Goto(bb3)
}
bb9 = {
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_7;
_1 = _15 as isize;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = _7;
_8 = _7;
RET.fld2.1 = _14 << RET.fld2.0;
RET.fld2 = (2763899554468071949_i64, _14, (-1496_i16));
_16 = (_3.0,);
_21.0 = [11631872636609702659_u64,8627848100534512939_u64,10087944918179392350_u64,11003916011677132911_u64];
_2 = [16548143891441499602_u64,16934815956276493333_u64,8508564661845651007_u64,6987806832536437497_u64];
_14 = RET.fld2.1 - RET.fld2.1;
_16 = (_13.0,);
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_11 = (_21.0,);
_9 = RET.fld2.0 as usize;
RET.fld2.0 = 20342754953400057635481202013328801747_i128 as i64;
RET.fld1 = _18 as usize;
_15 = _17 * _17;
SetDiscriminant(RET.fld0, 1);
_13 = (_2,);
place!(Field::<char>(Variant(RET.fld0, 1), 1)) = '\u{b1604}';
Goto(bb5)
}
bb10 = {
_3.0 = [9703100195302114457_u64,7770564697601146559_u64,7220673246169983353_u64,15218016821894838490_u64];
_15 = _17;
_25 = core::ptr::addr_of!(RET.fld2.0);
_3 = (_2,);
_26.1 = _16;
_12 = -_1;
RET.fld2.1 = _14 + _14;
_9 = RET.fld1 & RET.fld1;
_10 = [RET.fld2.2,RET.fld2.2,RET.fld2.2];
_29 = -_1;
_27 = [RET.fld2.2,RET.fld2.2,RET.fld2.2,RET.fld2.2,RET.fld2.2,RET.fld2.2,RET.fld2.2,RET.fld2.2];
RET.fld1 = _7 as usize;
_22 = -_1;
_23 = !6052007729922133314_u64;
_8 = _7 & Field::<bool>(Variant(RET.fld0, 1), 0);
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_8;
_11.0 = [_23,_23,_23,_23];
_17 = _14 as f32;
_13.0 = [_23,_23,_23,_23];
_21.0 = [_23,_23,_23,_23];
_30.1 = !_14;
_21 = (_11.0,);
_32 = 1531381648274191153287520901344666911_i128 as i16;
Goto(bb11)
}
bb11 = {
_30.0 = (*_25) << _29;
_13 = _3;
_36.0 = _21.0;
RET.fld2 = (_30.0, _30.1, _32);
_25 = core::ptr::addr_of!((*_25));
RET.fld2.0 = _12 as i64;
_21.0 = [_23,_23,_23,_23];
_30 = ((*_25), _14, RET.fld2.2);
_7 = _8 | Field::<bool>(Variant(RET.fld0, 1), 0);
_21 = _36;
_8 = (*_25) >= _30.0;
_8 = !Field::<bool>(Variant(RET.fld0, 1), 0);
_15 = -_17;
_11 = (_16.0,);
Goto(bb12)
}
bb12 = {
_16.0 = [_23,_23,_23,_23];
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_7;
_26.1.0 = _3.0;
_26.2 = [_5,_5,_5,_5,_5,_5];
_34 = _12 as i128;
Goto(bb13)
}
bb13 = {
_8 = !Field::<bool>(Variant(RET.fld0, 1), 0);
place!(Field::<char>(Variant(RET.fld0, 1), 1)) = '\u{bcc1}';
_11.0 = [_23,_23,_23,_23];
RET.fld2.2 = _32;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = !_7;
RET.fld2 = (_30.0, _14, _32);
_16.0 = _36.0;
_45 = _17 * _17;
Goto(bb14)
}
bb14 = {
_38 = (*_25) as u16;
_24 = 104958621739157831301013062279389243690_u128;
place!(Field::<char>(Variant(RET.fld0, 1), 1)) = '\u{ba504}';
_42 = [Field::<char>(Variant(RET.fld0, 1), 1)];
_34 = (-62211279347987038643241775399897870068_i128);
_17 = _15 * _45;
_15 = (-2024283237_i32) as f32;
RET.fld2 = _30;
_37 = [_30.2,_30.2,_32,_30.2,_32,_30.2,RET.fld2.2,RET.fld2.2];
_46 = (-57_i8);
_16 = (_26.1.0,);
_44 = [_29];
_22 = _29 - _29;
place!(Field::<bool>(Variant(RET.fld0, 1), 0)) = (*_25) >= (*_25);
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(14_usize, 36_usize, Move(_36), 19_usize, Move(_19), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(14_usize, 42_usize, Move(_42), 37_usize, Move(_37), 22_usize, Move(_22), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(14_usize, 21_usize, Move(_21), 30_usize, Move(_30), 46_usize, Move(_46), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(14_usize, 13_usize, Move(_13), 34_usize, Move(_34), 44_usize, Move(_44), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: ([u64; 4],),mut _2: (i64, u32, i16),mut _3: isize,mut _4: f64,mut _5: ([u64; 4],),mut _6: [i16; 3],mut _7: [i16; 3]) -> bool {
mir! {
type RET = bool;
let _8: [i32; 2];
let _9: bool;
let _10: isize;
let _11: [i16; 3];
let _12: (&'static f32, *mut i8, u64);
let _13: *mut i8;
let _14: (u32, u8, *mut i8);
let _15: f32;
let _16: isize;
let _17: u8;
let _18: ([u64; 4],);
let _19: [char; 1];
let _20: isize;
let _21: u64;
let _22: u32;
let _23: f64;
let _24: Adt49;
let _25: *const i128;
let _26: isize;
let _27: [i32; 2];
let _28: [u16; 6];
let _29: ();
let _30: ();
{
_5 = (_1.0,);
RET = true;
_1 = (_5.0,);
_3 = 6196374837354276718_u64 as isize;
_1 = _5;
_2.1 = 1226174434_u32 << _2.2;
_5.0 = [17331050646412455292_u64,771032432172821583_u64,5551081219131279383_u64,5708690928392027290_u64];
_2.0 = 7454580057687923298_u64 as i64;
_2 = (6670878119702021633_i64, 1365630487_u32, 22124_i16);
_3 = 9223372036854775807_isize >> _2.2;
_9 = RET & RET;
_8 = [2587887_i32,(-40341139_i32)];
RET = _9;
_10 = 84300881121734556112411188447408729837_i128 as isize;
_4 = 4849211629504525025_u64 as f64;
Goto(bb1)
}
bb1 = {
_2.2 = -(-24063_i16);
_1 = _5;
RET = !_9;
_2 = ((-4269855280217733772_i64), 457555938_u32, (-17418_i16));
_2.2 = (-24422_i16);
_5.0 = _1.0;
_11 = [_2.2,_2.2,_2.2];
RET = _4 == _4;
match _2.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
457555938 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = _9 | _9;
_7 = _6;
RET = _9 | _9;
_5 = _1;
_12.2 = _2.1 as u64;
_10 = _3;
_6 = [_2.2,_2.2,_2.2];
_2.1 = 4173069415_u32;
_1 = (_5.0,);
_6 = [_2.2,_2.2,_2.2];
_2.0 = -(-8269958001241169528_i64);
_8 = [(-1245026024_i32),816191649_i32];
RET = !_9;
_8 = [22469858_i32,175968026_i32];
_2.2 = 32254_i16;
_4 = 6398617330927048712_usize as f64;
_4 = (-37105617442134998011630372194805968078_i128) as f64;
Goto(bb11)
}
bb11 = {
_3 = _10 - _10;
_1 = (_5.0,);
_6 = [_2.2,_2.2,_2.2];
_12.2 = 17639945591193311103_u64 | 3180974105072843071_u64;
RET = _9;
_7 = [_2.2,_2.2,_2.2];
_2.0 = 6136637364823380782_i64;
_3 = _10;
_10 = _3 << _2.2;
_2 = ((-3871044381498648676_i64), 1542787554_u32, (-12473_i16));
_1.0 = _5.0;
_10 = -_3;
_1.0 = _5.0;
Goto(bb12)
}
bb12 = {
_9 = RET;
_2.1 = !847439484_u32;
_15 = _2.2 as f32;
_8 = [1612992398_i32,(-838423718_i32)];
_5 = (_1.0,);
_10 = _3;
_6 = [_2.2,_2.2,_2.2];
_14.0 = !_2.1;
_10 = _3 & _3;
_4 = _2.2 as f64;
Call(_15 = fn16(_10, _1, _2.2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_2.1 = _14.0 - _14.0;
_18 = (_1.0,);
_8 = [1711512333_i32,(-585287372_i32)];
_17 = !17_u8;
_7 = [_2.2,_2.2,_2.2];
_23 = _4;
_14.1 = !_17;
_6 = _7;
_10 = _17 as isize;
_12.2 = 10531079396565738907_u64 * 6704497843487352850_u64;
_12.0 = &_15;
_24.fld2.0 = _2.0;
_16 = '\u{43931}' as isize;
_15 = _2.1 as f32;
_11 = _6;
_24.fld2 = (_2.0, _2.1, _2.2);
_18 = _1;
Call(_15 = fn17(_24.fld2.2, _8, _24.fld2.0, _7, _24.fld2.2, _3), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_1 = (_5.0,);
_21 = (-32_i8) as u64;
_23 = (-20_i8) as f64;
_2 = _24.fld2;
_14.1 = _17;
_24.fld2 = _2;
_20 = '\u{f5371}' as isize;
_22 = _2.1;
_4 = _23;
_19 = ['\u{c7919}'];
_24.fld2.1 = _2.1 << _24.fld2.0;
_12.2 = _21;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(15_usize, 5_usize, Move(_5), 7_usize, Move(_7), 11_usize, Move(_11), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(15_usize, 19_usize, Move(_19), 20_usize, Move(_20), 18_usize, Move(_18), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: isize,mut _2: ([u64; 4],),mut _3: i16) -> f32 {
mir! {
type RET = f32;
let _4: isize;
let _5: isize;
let _6: [i16; 8];
let _7: f32;
let _8: f32;
let _9: [isize; 1];
let _10: u16;
let _11: i16;
let _12: [u64; 4];
let _13: ();
let _14: ();
{
_1 = _3 as isize;
RET = (-114_i8) as f32;
RET = 133884130085608404560279602734376107305_u128 as f32;
RET = 654716334_i32 as f32;
_4 = _1;
_6 = [_3,_3,_3,_3,_3,_3,_3,_3];
_5 = _3 as isize;
_1 = 3532385576_u32 as isize;
RET = _3 as f32;
_8 = RET + RET;
_1 = _4;
_6 = [_3,_3,_3,_3,_3,_3,_3,_3];
_5 = 18715996998600464410589685760986079789_i128 as isize;
Goto(bb1)
}
bb1 = {
_4 = 889848255_i32 as isize;
_7 = -_8;
_12 = [1833071275364833122_u64,16531684331563766279_u64,16237509300992027843_u64,2997476598607554213_u64];
_1 = _4 - _5;
RET = _8;
_1 = 41_i8 as isize;
RET = _8 + _7;
_2 = (_12,);
Goto(bb2)
}
bb2 = {
Call(_13 = dump_var(16_usize, 12_usize, Move(_12), 5_usize, Move(_5), 3_usize, Move(_3), 14_usize, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i16,mut _2: [i32; 2],mut _3: i64,mut _4: [i16; 3],mut _5: i16,mut _6: isize) -> f32 {
mir! {
type RET = f32;
let _7: [u16; 6];
let _8: f64;
let _9: [i16; 8];
let _10: [u16; 6];
let _11: *const i128;
let _12: i128;
let _13: [i32; 2];
let _14: char;
let _15: Adt51;
let _16: *const *mut i8;
let _17: [u64; 4];
let _18: ([u64; 4],);
let _19: u128;
let _20: u16;
let _21: [char; 1];
let _22: i16;
let _23: usize;
let _24: ();
let _25: ();
{
_1 = _5 << _5;
RET = (-145797091533332818586606307579040794374_i128) as f32;
RET = 47469939160644820640168170255453489779_i128 as f32;
RET = 1257847054_i32 as f32;
RET = 223_u8 as f32;
_7 = [36088_u16,37805_u16,15409_u16,11080_u16,5031_u16,24074_u16];
RET = 2839380817_u32 as f32;
_7 = [61187_u16,59443_u16,44_u16,60566_u16,8131_u16,35552_u16];
_2 = [1596535993_i32,2029927266_i32];
_1 = _5;
_9 = [_5,_5,_5,_5,_1,_5,_1,_1];
RET = 1104108512_i32 as f32;
_7 = [59506_u16,31710_u16,44196_u16,30667_u16,10113_u16,1536_u16];
_6 = (-9223372036854775808_isize);
_8 = _3 as f64;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463463374607431768198983 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_1 = (-127_i8) as i16;
_9 = [_1,_5,_5,_5,_5,_5,_5,_1];
_4 = [_1,_1,_5];
RET = 2895116177_u32 as f32;
_9 = [_5,_5,_5,_5,_5,_5,_1,_5];
Call(_5 = core::intrinsics::bswap(_1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_5 = _1 - _1;
_2 = [(-253880136_i32),1669083241_i32];
_9 = [_5,_1,_1,_1,_5,_5,_5,_5];
_2 = [883546872_i32,(-233718209_i32)];
_8 = 0_u8 as f64;
_1 = -_5;
_5 = !_1;
_14 = '\u{4dcd3}';
_13 = [744026409_i32,1214366851_i32];
_17 = [2462494934140962809_u64,2115521709784796388_u64,18357161161736788596_u64,6977254319362730329_u64];
_9 = [_1,_1,_5,_5,_1,_1,_5,_5];
_7 = [20784_u16,10165_u16,36432_u16,33489_u16,45540_u16,25461_u16];
_17 = [15922333385834152951_u64,486410933175860817_u64,7026898428323649524_u64,15053222431080012384_u64];
match _3 {
0 => bb5,
1 => bb6,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
340282366920938463459503563050269562780 => bb15,
_ => bb14
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_11 = core::ptr::addr_of!(_12);
_12 = 14230736068182107829272235452321320344_i128;
_8 = 11364557876720292244_u64 as f64;
_13 = _2;
_5 = _6 as i16;
_7 = [60866_u16,53302_u16,46628_u16,10890_u16,3806_u16,633_u16];
_7 = [47823_u16,42137_u16,55357_u16,48538_u16,45590_u16,15342_u16];
_18 = (_17,);
_4 = [_1,_5,_1];
_18.0 = [8868414027442385272_u64,13517115235591062260_u64,8450283632578314321_u64,1371718530287069198_u64];
_18.0 = [8373253773756874473_u64,11204726971414056878_u64,15955423504592857252_u64,8470598532830611162_u64];
_1 = _5 ^ _5;
_9 = [_1,_1,_1,_5,_1,_1,_1,_5];
RET = _6 as f32;
_18.0 = [13858660472062196098_u64,16162749768081576042_u64,11701028376580441401_u64,7288467431567844558_u64];
_18 = (_17,);
_17 = _18.0;
_1 = !_5;
_12 = (-22162224844839592807739513710828774316_i128);
_2 = [674902561_i32,1862253431_i32];
_19 = true as u128;
_22 = _5 ^ _5;
_9 = [_5,_1,_5,_22,_1,_22,_22,_22];
_17 = [5390335850307709295_u64,9415079408870511238_u64,9625232725083668828_u64,3257575735506925381_u64];
_23 = 2789894403609432322_usize;
RET = _3 as f32;
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(17_usize, 22_usize, Move(_22), 23_usize, Move(_23), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(17_usize, 14_usize, Move(_14), 9_usize, Move(_9), 19_usize, Move(_19), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{24a8e}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(298171033278214895425842522703130741242_u128), std::hint::black_box((-24323_i16)), std::hint::black_box(2079532105_i32), std::hint::black_box(724406161012224002_i64), std::hint::black_box(10833809246849961908_u64), std::hint::black_box(4416655688307588684_usize), std::hint::black_box(28_u8), std::hint::black_box(33197_u16));
                
            }
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: *const i32,
fld1: char,
fld2: *mut i8,
fld3: [u64; 4],
fld4: usize,
fld5: f64,

},
Variant1{
fld0: (*const *mut i8, ([u64; 4],), [u16; 6]),
fld1: i128,

},
Variant2{
fld0: bool,
fld1: [char; 1],
fld2: (u32, u8, *mut i8),
fld3: *const i128,
fld4: *mut i8,
fld5: ((i64, u32, i16), (u32, u8, *mut i8)),
fld6: u128,

},
Variant3{
fld0: i128,
fld1: usize,
fld2: *const i32,
fld3: [isize; 1],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt41 {
Variant0{
fld0: (*const *mut i8, ([u64; 4],), [u16; 6]),
fld1: [u16; 6],
fld2: f32,
fld3: ([u64; 4],),
fld4: *const i32,
fld5: i32,
fld6: [i16; 8],
fld7: [i16; 3],

},
Variant1{
fld0: [i32; 2],
fld1: u128,
fld2: u32,
fld3: f32,
fld4: (i64, u32, i16),
fld5: (*const i128, u8),

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: [u16; 6],
fld1: char,
fld2: *const usize,
fld3: (*const i64,),
fld4: *const i128,
fld5: [u64; 4],

},
Variant1{
fld0: i128,
fld1: char,
fld2: [isize; 1],
fld3: [i32; 2],
fld4: ((i64, u32, i16), (u32, u8, *mut i8)),

},
Variant2{
fld0: usize,
fld1: (*const i128, u8),
fld2: isize,
fld3: Adt40,
fld4: *const i128,
fld5: i32,
fld6: [char; 1],
fld7: (*const i64,),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: bool,
fld1: char,
fld2: (*const i64,),
fld3: i64,
fld4: ([u64; 4],),

},
Variant1{
fld0: u128,
fld1: (*const *mut i8, ([u64; 4],), [u16; 6]),
fld2: (i64, u32, i16),
fld3: [u64; 4],
fld4: i16,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt44 {
Variant0{
fld0: *const i128,

},
Variant1{
fld0: bool,
fld1: char,

},
Variant2{
fld0: Adt43,
fld1: u64,

},
Variant3{
fld0: *const *mut i8,
fld1: ((i64, u32, i16), (u32, u8, *mut i8)),
fld2: isize,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt45 {
Variant0{
fld0: i16,
fld1: i128,

},
Variant1{
fld0: u128,
fld1: *const i64,
fld2: (*const *mut i8, ([u64; 4],), [u16; 6]),
fld3: Adt41,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt46 {
Variant0{
fld0: char,

},
Variant1{
fld0: Adt44,
fld1: u8,
fld2: *const i128,
fld3: *const usize,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (u32, u8, *mut i8),
fld1: *const *mut i8,
fld2: ([u64; 4],),

},
Variant1{
fld0: Adt46,
fld1: f64,
fld2: [u16; 6],
fld3: u32,
fld4: Adt40,
fld5: *const i128,
fld6: (*const i64,),
fld7: *mut i8,

},
Variant2{
fld0: (*const *mut i8, ([u64; 4],), [u16; 6]),
fld1: char,
fld2: (u32, u8, *mut i8),
fld3: Adt43,
fld4: [isize; 1],
fld5: i32,
fld6: (i64, u32, i16),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt48 {
fld0: Adt41,
fld1: u8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: Adt44,
fld1: usize,
fld2: (i64, u32, i16),
fld3: [i16; 3],
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: Adt40,
fld1: *const i32,
fld2: *const usize,

},
Variant1{
fld0: Adt47,
fld1: Adt46,
fld2: isize,
fld3: (*const i64,),
fld4: u8,

},
Variant2{
fld0: [u64; 4],
fld1: i16,
fld2: Adt41,
fld3: Adt40,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: ([u64; 4],),
fld1: char,

},
Variant1{
fld0: Adt40,
fld1: *const usize,
fld2: u64,
fld3: *const i128,
fld4: Adt46,
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt51,
fld1: Adt44,
fld2: (*const i64,),
fld3: Adt43,
fld4: *mut (*const i64,),
fld5: ([u64; 4],),
fld6: (u32, u8, *mut i8),
fld7: (i64, u32, i16),

},
Variant1{
fld0: f64,
fld1: Adt43,
fld2: Adt49,
fld3: (i64, u32, i16),

},
Variant2{
fld0: (i64, u32, i16),
fld1: u8,
fld2: isize,
fld3: i8,
fld4: [u64; 4],
fld5: Adt42,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: i16,
fld1: u32,

},
Variant1{
fld0: (u32, u8, *mut i8),
fld1: Adt51,
fld2: Adt43,
fld3: u8,
fld4: u128,
fld5: Adt46,
fld6: [i16; 8],

},
Variant2{
fld0: *const usize,

},
Variant3{
fld0: ([u64; 4],),
fld1: [i16; 3],
fld2: Adt40,
fld3: u8,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: (*const i64,),
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: i8,
fld1: i128,
fld2: f64,

},
Variant1{
fld0: i128,
fld1: Adt47,
fld2: (*const *mut i8, ([u64; 4],), [u16; 6]),

},
Variant2{
fld0: [i16; 3],

},
Variant3{
fld0: (*const i128, u8),
fld1: [i16; 8],
fld2: u16,
fld3: Adt51,
fld4: ([u64; 4],),
fld5: Adt49,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: ([u64; 4],),
fld1: *const i128,

},
Variant1{
fld0: (u32, u8, *mut i8),
fld1: char,
fld2: Adt50,
fld3: Adt53,
fld4: [u16; 6],
fld5: *const i64,

},
Variant2{
fld0: [i32; 2],
fld1: *const i64,

},
Variant3{
fld0: [u64; 4],
fld1: [char; 1],
fld2: Adt42,

}}

