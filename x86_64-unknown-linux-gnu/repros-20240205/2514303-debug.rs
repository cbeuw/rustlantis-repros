#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u64,mut _2: u16,mut _3: isize,mut _4: u32,mut _5: i16) -> *const u128 {
mir! {
type RET = *const u128;
let _6: [i8; 6];
let _7: [u128; 5];
let _8: f64;
let _9: f64;
let _10: f64;
let _11: (usize,);
let _12: Adt53;
let _13: u64;
let _14: isize;
let _15: f32;
let _16: [usize; 8];
let _17: i128;
let _18: [u32; 2];
let _19: bool;
let _20: char;
let _21: f64;
let _22: u8;
let _23: [u32; 2];
let _24: [u64; 3];
let _25: *const ((*mut u128, u128, bool), u128);
let _26: isize;
let _27: isize;
let _28: f32;
let _29: [u32; 2];
let _30: Adt47;
let _31: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool));
let _32: [u64; 3];
let _33: char;
let _34: bool;
let _35: [usize; 4];
let _36: usize;
let _37: [u64; 3];
let _38: char;
let _39: Adt48;
let _40: bool;
let _41: [i16; 3];
let _42: u64;
let _43: [usize; 8];
let _44: ();
let _45: ();
{
_2 = '\u{18f89}' as u16;
_5 = -13566_i16;
_1 = 720046288590364947_u64 * 15267020558601105617_u64;
_4 = 146634131_i32 as u32;
_6 = [(-52_i8),2_i8,(-121_i8),18_i8,92_i8,(-30_i8)];
_1 = 5259796334481333845_u64;
_3 = -(-55_isize);
_1 = !12278230614353965250_u64;
_6 = [103_i8,(-97_i8),65_i8,(-91_i8),(-123_i8),(-75_i8)];
Call(_6 = fn1(_5, _2, _5, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [50_i8,(-67_i8),32_i8,17_i8,94_i8,(-114_i8)];
_4 = 459091965_u32 & 1187287150_u32;
_4 = !1499545888_u32;
_5 = !(-20597_i16);
_2 = 1542_u16 | 7720_u16;
_4 = !816924961_u32;
_9 = 43_u8 as f64;
_7 = [119934090184221699644992234456534413718_u128,217568502804194889270341483350744943854_u128,338051109367038950940090016079823931212_u128,297673961908106624583171310230118700227_u128,172278352967821800039969317821559650021_u128];
_7 = [49354784872533771371513172234088604360_u128,322363827297913634634407174557699725244_u128,332685457937564814215257784055008675687_u128,77102163901637408016099654696220385815_u128,271413552696779272073294220163294731937_u128];
_4 = _3 as u32;
_1 = 12_u8 as u64;
_6 = [106_i8,95_i8,115_i8,97_i8,(-86_i8),50_i8];
_7 = [323489148741186098758920117563575279616_u128,271019309351573030644313853294205425455_u128,213696243306062465658382534657922380797_u128,311693224470752391307730713750252008562_u128,204047672714176439705316318240619366039_u128];
_10 = -_9;
Goto(bb2)
}
bb2 = {
_7 = [275457345567679010574489446369119189056_u128,650622276068801242113929222095205057_u128,105421535691406216796028377561146838928_u128,175766476074731877472661977586923181066_u128,269023564014273528771214633170145097064_u128];
_7 = [202480466380607060083930832406503194881_u128,121498306879083778528218216129907033626_u128,269198065770936861615996415257822205779_u128,167045006981500381572304736476596729211_u128,122623898556120138797552925101146607635_u128];
_2 = !11263_u16;
_2 = 151594554859144726640527832951947375304_i128 as u16;
_4 = 943618519_u32 & 3782702967_u32;
_10 = _9 * _9;
_8 = 77_u8 as f64;
_8 = _10 * _10;
_9 = -_8;
_9 = _8 * _10;
_7 = [106893667989503321056104149047590022251_u128,327571131929768951902207601549961214020_u128,22816504291162409973311983447828880031_u128,215228316727987721406912911928117313042_u128,334545434271148620273830185829366319412_u128];
_7 = [144820709156432777138119688512274665424_u128,311436398739441338593958476961993666468_u128,3505656662051879715622029229115038468_u128,92748536375693212841113918104326644171_u128,128107319220425580096910039896661538431_u128];
_5 = 17245_i16;
_2 = _3 as u16;
_10 = _8;
_8 = 14648685782043782952_usize as f64;
_11.0 = 7_usize;
_14 = 59_i8 as isize;
_13 = false as u64;
_11.0 = !17460575988624658852_usize;
Goto(bb3)
}
bb3 = {
_1 = !_13;
_2 = 28212_u16 - 13592_u16;
_13 = _1 >> _5;
_15 = _2 as f32;
_16 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_15 = _4 as f32;
_6 = [(-68_i8),(-62_i8),(-104_i8),(-110_i8),23_i8,(-107_i8)];
_4 = 56_i8 as u32;
_15 = 270833386088866769656205329083867339467_u128 as f32;
_7 = [199512098489980670110107298045992464475_u128,66708978858267149106253095085022525201_u128,101051855494703445436461301513352744338_u128,159202618639967547729799579481928768277_u128,151904641679009503426849190481109724014_u128];
_15 = _11.0 as f32;
_18 = [_4,_4];
_3 = _14 | _14;
_1 = !_13;
_1 = _13;
_8 = -_10;
_7 = [86847834518687947248573333840840894355_u128,207049944014692457025147391207960006237_u128,214033226784493014770488904588880908876_u128,147438468529248905777970549549482419250_u128,108968468941967588740976739369005014433_u128];
_6 = [35_i8,60_i8,(-58_i8),(-39_i8),90_i8,(-38_i8)];
_18 = [_4,_4];
_19 = !true;
_3 = -_14;
_21 = _2 as f64;
Goto(bb4)
}
bb4 = {
_22 = 236_u8 | 72_u8;
_8 = 99364406994348090238232658795598858885_u128 as f64;
_22 = (-7960342252417442279_i64) as u8;
_18 = [_4,_4];
_3 = !_14;
_6 = [41_i8,(-105_i8),(-3_i8),37_i8,(-3_i8),(-89_i8)];
_24 = [_1,_1,_1];
_22 = !119_u8;
_3 = _14;
_13 = _1;
_5 = 29798_i16;
_21 = _9 + _9;
_6 = [(-57_i8),(-31_i8),48_i8,76_i8,(-74_i8),(-15_i8)];
_24 = [_1,_13,_13];
_17 = !168610738792729710424080784423688954038_i128;
_16 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_22 = _2 as u8;
_2 = !57735_u16;
_19 = false;
_26 = _15 as isize;
_27 = _14;
match _5 {
0 => bb1,
1 => bb2,
29798 => bb5,
_ => bb3
}
}
bb5 = {
_3 = _22 as isize;
_13 = _15 as u64;
_24 = [_1,_1,_1];
_14 = _27 ^ _26;
_22 = !203_u8;
_3 = _26;
_11 = (9005708091553846954_usize,);
_10 = _22 as f64;
_19 = !true;
_3 = !_14;
_22 = 101_u8 | 249_u8;
_19 = false;
_18 = [_4,_4];
_15 = (-101_i8) as f32;
_8 = -_21;
_18 = [_4,_4];
_30.fld3 = _2;
_31.1 = _30.fld3 as i16;
_30.fld2 = core::ptr::addr_of!(_28);
RET = core::ptr::addr_of!(_31.3.1);
match _5 {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
29798 => bb12,
_ => bb11
}
}
bb6 = {
_22 = 236_u8 | 72_u8;
_8 = 99364406994348090238232658795598858885_u128 as f64;
_22 = (-7960342252417442279_i64) as u8;
_18 = [_4,_4];
_3 = !_14;
_6 = [41_i8,(-105_i8),(-3_i8),37_i8,(-3_i8),(-89_i8)];
_24 = [_1,_1,_1];
_22 = !119_u8;
_3 = _14;
_13 = _1;
_5 = 29798_i16;
_21 = _9 + _9;
_6 = [(-57_i8),(-31_i8),48_i8,76_i8,(-74_i8),(-15_i8)];
_24 = [_1,_13,_13];
_17 = !168610738792729710424080784423688954038_i128;
_16 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_22 = _2 as u8;
_2 = !57735_u16;
_19 = false;
_26 = _15 as isize;
_27 = _14;
match _5 {
0 => bb1,
1 => bb2,
29798 => bb5,
_ => bb3
}
}
bb7 = {
_1 = !_13;
_2 = 28212_u16 - 13592_u16;
_13 = _1 >> _5;
_15 = _2 as f32;
_16 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_15 = _4 as f32;
_6 = [(-68_i8),(-62_i8),(-104_i8),(-110_i8),23_i8,(-107_i8)];
_4 = 56_i8 as u32;
_15 = 270833386088866769656205329083867339467_u128 as f32;
_7 = [199512098489980670110107298045992464475_u128,66708978858267149106253095085022525201_u128,101051855494703445436461301513352744338_u128,159202618639967547729799579481928768277_u128,151904641679009503426849190481109724014_u128];
_15 = _11.0 as f32;
_18 = [_4,_4];
_3 = _14 | _14;
_1 = !_13;
_1 = _13;
_8 = -_10;
_7 = [86847834518687947248573333840840894355_u128,207049944014692457025147391207960006237_u128,214033226784493014770488904588880908876_u128,147438468529248905777970549549482419250_u128,108968468941967588740976739369005014433_u128];
_6 = [35_i8,60_i8,(-58_i8),(-39_i8),90_i8,(-38_i8)];
_18 = [_4,_4];
_19 = !true;
_3 = -_14;
_21 = _2 as f64;
Goto(bb4)
}
bb8 = {
_7 = [275457345567679010574489446369119189056_u128,650622276068801242113929222095205057_u128,105421535691406216796028377561146838928_u128,175766476074731877472661977586923181066_u128,269023564014273528771214633170145097064_u128];
_7 = [202480466380607060083930832406503194881_u128,121498306879083778528218216129907033626_u128,269198065770936861615996415257822205779_u128,167045006981500381572304736476596729211_u128,122623898556120138797552925101146607635_u128];
_2 = !11263_u16;
_2 = 151594554859144726640527832951947375304_i128 as u16;
_4 = 943618519_u32 & 3782702967_u32;
_10 = _9 * _9;
_8 = 77_u8 as f64;
_8 = _10 * _10;
_9 = -_8;
_9 = _8 * _10;
_7 = [106893667989503321056104149047590022251_u128,327571131929768951902207601549961214020_u128,22816504291162409973311983447828880031_u128,215228316727987721406912911928117313042_u128,334545434271148620273830185829366319412_u128];
_7 = [144820709156432777138119688512274665424_u128,311436398739441338593958476961993666468_u128,3505656662051879715622029229115038468_u128,92748536375693212841113918104326644171_u128,128107319220425580096910039896661538431_u128];
_5 = 17245_i16;
_2 = _3 as u16;
_10 = _8;
_8 = 14648685782043782952_usize as f64;
_11.0 = 7_usize;
_14 = 59_i8 as isize;
_13 = false as u64;
_11.0 = !17460575988624658852_usize;
Goto(bb3)
}
bb9 = {
_6 = [50_i8,(-67_i8),32_i8,17_i8,94_i8,(-114_i8)];
_4 = 459091965_u32 & 1187287150_u32;
_4 = !1499545888_u32;
_5 = !(-20597_i16);
_2 = 1542_u16 | 7720_u16;
_4 = !816924961_u32;
_9 = 43_u8 as f64;
_7 = [119934090184221699644992234456534413718_u128,217568502804194889270341483350744943854_u128,338051109367038950940090016079823931212_u128,297673961908106624583171310230118700227_u128,172278352967821800039969317821559650021_u128];
_7 = [49354784872533771371513172234088604360_u128,322363827297913634634407174557699725244_u128,332685457937564814215257784055008675687_u128,77102163901637408016099654696220385815_u128,271413552696779272073294220163294731937_u128];
_4 = _3 as u32;
_1 = 12_u8 as u64;
_6 = [106_i8,95_i8,115_i8,97_i8,(-86_i8),50_i8];
_7 = [323489148741186098758920117563575279616_u128,271019309351573030644313853294205425455_u128,213696243306062465658382534657922380797_u128,311693224470752391307730713750252008562_u128,204047672714176439705316318240619366039_u128];
_10 = -_9;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET = core::ptr::addr_of!(_31.3.1);
_31.1 = _5 ^ _5;
_9 = _1 as f64;
Goto(bb13)
}
bb13 = {
_10 = _8 - _8;
_11 = (1_usize,);
_8 = -_21;
_16 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_26 = _3;
_17 = 69840984158112860054328264863184292917_i128;
_31.3.0 = core::ptr::addr_of_mut!(_31.3.1);
_15 = 58_i8 as f32;
_33 = '\u{78f32}';
_21 = _10;
_32 = [_1,_1,_1];
_26 = !_3;
_3 = _27 & _27;
_29 = _18;
_4 = !3560018789_u32;
_26 = _27 + _14;
_24 = [_1,_1,_13];
_38 = _33;
_10 = _8;
_31.3.1 = _17 as u128;
_14 = _26;
_8 = -_21;
_21 = -_8;
_20 = _33;
match _17 {
0 => bb1,
1 => bb11,
2 => bb6,
69840984158112860054328264863184292917 => bb14,
_ => bb5
}
}
bb14 = {
_32 = [_13,_13,_1];
_32 = _24;
_16 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_31.3.2 = _19;
_37 = _24;
_30.fld0 = !_1;
RET = core::ptr::addr_of!((*RET));
_31.0 = -_15;
RET = core::ptr::addr_of!((*RET));
_22 = 116_u8;
_34 = _19;
_17 = _2 as i128;
_22 = 201_u8 << _30.fld3;
_29 = _18;
_17 = _15 as i128;
_35 = [_11.0,_11.0,_11.0,_11.0];
_6 = [(-93_i8),125_i8,(-27_i8),(-110_i8),(-34_i8),(-29_i8)];
_14 = _26;
_32 = _24;
_23 = [_4,_4];
_33 = _38;
_31.3.1 = _30.fld0 as u128;
_31.3.2 = !_34;
_14 = !_26;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(0_usize, 33_usize, Move(_33), 18_usize, Move(_18), 19_usize, Move(_19), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(0_usize, 3_usize, Move(_3), 22_usize, Move(_22), 4_usize, Move(_4), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(0_usize, 26_usize, Move(_26), 6_usize, Move(_6), 17_usize, Move(_17), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(0_usize, 27_usize, Move(_27), 45_usize, _45, 45_usize, _45, 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i16,mut _2: u16,mut _3: i16,mut _4: u64) -> [i8; 6] {
mir! {
type RET = [i8; 6];
let _5: u128;
let _6: [usize; 8];
let _7: [usize; 8];
let _8: isize;
let _9: bool;
let _10: ((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)));
let _11: (usize,);
let _12: isize;
let _13: char;
let _14: [u128; 5];
let _15: char;
let _16: isize;
let _17: ((*mut u128, u128, bool), u128);
let _18: *mut u128;
let _19: (*mut u128, u128, bool);
let _20: [i16; 3];
let _21: [usize; 8];
let _22: [usize; 8];
let _23: isize;
let _24: Adt46;
let _25: [usize; 4];
let _26: i32;
let _27: Adt55;
let _28: *mut ((*mut u128, u128, bool), u128);
let _29: u32;
let _30: u128;
let _31: [i16; 3];
let _32: bool;
let _33: ();
let _34: ();
{
RET = [123_i8,(-70_i8),44_i8,48_i8,120_i8,(-46_i8)];
RET = [82_i8,(-99_i8),(-63_i8),(-38_i8),(-88_i8),(-29_i8)];
_2 = !61111_u16;
_5 = !298350190093061831346505224783622930552_u128;
_4 = !15943138495641544493_u64;
RET = [(-82_i8),24_i8,121_i8,(-35_i8),26_i8,(-5_i8)];
_4 = 107_u8 as u64;
_7 = [4066055192477416760_usize,6460291398663482797_usize,0_usize,2968638855088173121_usize,16450952116935523460_usize,4_usize,1054853130246344201_usize,12105908825465908459_usize];
_4 = 4069065075672613479_u64;
_8 = !(-9223372036854775808_isize);
_6 = _7;
_3 = -_1;
_5 = !220730363694684052823633402176516092642_u128;
Goto(bb1)
}
bb1 = {
_1 = _3;
_5 = !68593964597420852896181758925094645238_u128;
_1 = !_3;
RET = [8_i8,(-12_i8),(-86_i8),(-52_i8),(-58_i8),(-104_i8)];
RET = [(-83_i8),(-109_i8),60_i8,61_i8,101_i8,(-3_i8)];
_4 = 16148734428240938033_u64;
_4 = 17901853745982373599_u64 & 13816455155168458372_u64;
_5 = 96396348760592179386264413092240710287_u128;
Goto(bb2)
}
bb2 = {
RET = [(-36_i8),55_i8,116_i8,79_i8,(-10_i8),(-105_i8)];
_1 = _3 - _3;
match _5 {
96396348760592179386264413092240710287 => bb4,
_ => bb3
}
}
bb3 = {
_1 = _3;
_5 = !68593964597420852896181758925094645238_u128;
_1 = !_3;
RET = [8_i8,(-12_i8),(-86_i8),(-52_i8),(-58_i8),(-104_i8)];
RET = [(-83_i8),(-109_i8),60_i8,61_i8,101_i8,(-3_i8)];
_4 = 16148734428240938033_u64;
_4 = 17901853745982373599_u64 & 13816455155168458372_u64;
_5 = 96396348760592179386264413092240710287_u128;
Goto(bb2)
}
bb4 = {
_4 = 15876537401240999128_u64;
_10.1.3.1 = _5 - _5;
_10.0.1 = core::ptr::addr_of_mut!(_10.1.3.1);
_6 = [1_usize,4_usize,2_usize,11793505703988991233_usize,16719001270299736306_usize,16417538852987694170_usize,1_usize,1_usize];
_10.1.1 = _3 >> _2;
_9 = !true;
_10.1.1 = _8 as i16;
_10.1.3.0 = core::ptr::addr_of_mut!(_5);
_10.1.0 = 160_u8 as f32;
_10.1.3 = (_10.0.1, _5, _9);
_10.1.3.2 = _1 <= _10.1.1;
_11.0 = 4_usize;
_1 = _10.1.3.2 as i16;
_10.0 = (_11.0, _10.1.3.0);
_10.0.0 = _11.0;
_10.1.3 = (_10.0.1, _5, _9);
_4 = 9003308187475062995_u64 | 6985751342971268449_u64;
_10.1.3.0 = _10.0.1;
_7 = [_11.0,_10.0.0,_11.0,_10.0.0,_11.0,_10.0.0,_11.0,_11.0];
_8 = 9223372036854775807_isize * (-9223372036854775808_isize);
_9 = _10.1.3.1 == _10.1.3.1;
_10.1.1 = _1 << _3;
_10.1.1 = _1 >> _10.1.3.1;
match _11.0 {
0 => bb1,
1 => bb3,
4 => bb6,
_ => bb5
}
}
bb5 = {
_1 = _3;
_5 = !68593964597420852896181758925094645238_u128;
_1 = !_3;
RET = [8_i8,(-12_i8),(-86_i8),(-52_i8),(-58_i8),(-104_i8)];
RET = [(-83_i8),(-109_i8),60_i8,61_i8,101_i8,(-3_i8)];
_4 = 16148734428240938033_u64;
_4 = 17901853745982373599_u64 & 13816455155168458372_u64;
_5 = 96396348760592179386264413092240710287_u128;
Goto(bb2)
}
bb6 = {
_10.0.0 = _11.0;
_6 = [_11.0,_11.0,_11.0,_10.0.0,_10.0.0,_11.0,_10.0.0,_11.0];
_10.1.3.0 = core::ptr::addr_of_mut!(_5);
_11 = (_10.0.0,);
_10.0.0 = _11.0 << _11.0;
_9 = _10.1.3.2 != _10.1.3.2;
_10.1.3.1 = _5;
_12 = (-7645073397021997649_i64) as isize;
_1 = -_3;
_10.1.3.1 = 51940197972090077858135761515198818213_i128 as u128;
_9 = !_10.1.3.2;
_14 = [_10.1.3.1,_10.1.3.1,_10.1.3.1,_5,_10.1.3.1];
_10.0.1 = _10.1.3.0;
_10.0.0 = _1 as usize;
_14 = [_5,_5,_10.1.3.1,_10.1.3.1,_10.1.3.1];
_10.1.3.1 = 19687788614884119565456995259084059789_i128 as u128;
_10.1.3 = (_10.0.1, _5, _9);
_10.0.0 = _11.0;
Call(_10.0.0 = fn2(_10.1.1, _12, _7, _5, _10.1.3), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_9 = _10.1.3.2;
_11 = (_10.0.0,);
RET = [124_i8,60_i8,9_i8,52_i8,(-76_i8),(-53_i8)];
_10.1.1 = _1 | _3;
_15 = '\u{de559}';
RET = [(-98_i8),126_i8,57_i8,95_i8,(-52_i8),33_i8];
Goto(bb8)
}
bb8 = {
_10.0.1 = core::ptr::addr_of_mut!(_10.1.3.1);
_17.0.1 = !_5;
_17.0.1 = 1935768395_u32 as u128;
_17 = (_10.1.3, _5);
_17.0.1 = _5;
Goto(bb9)
}
bb9 = {
_10.1.3.1 = !_5;
_17.0.2 = !_10.1.3.2;
RET = [87_i8,(-73_i8),69_i8,(-15_i8),99_i8,74_i8];
_17.0.0 = _10.1.3.0;
_6 = _7;
_17.0 = (_10.0.1, _10.1.3.1, _9);
_1 = _10.1.1 ^ _3;
_10.0.1 = _17.0.0;
_13 = _15;
_17.0 = (_10.1.3.0, _10.1.3.1, _9);
_16 = _12;
RET = [(-39_i8),(-46_i8),119_i8,122_i8,60_i8,127_i8];
_18 = _10.0.1;
_12 = _16;
_15 = _13;
_17.1 = _10.1.3.1;
_19.1 = _10.0.0 as u128;
_18 = _10.0.1;
_19.0 = _10.1.3.0;
_17.0 = (_10.0.1, _19.1, _10.1.3.2);
_11 = (_10.0.0,);
Goto(bb10)
}
bb10 = {
_17.0 = _10.1.3;
_21 = _6;
_17.0.0 = _18;
_11.0 = 32766233_i32 as usize;
_5 = !_19.1;
_19 = (_18, _5, _17.0.2);
_8 = 527477839_i32 as isize;
_1 = _10.1.1;
_10.1.3.1 = !_5;
_19.2 = _10.0.0 > _10.0.0;
_17.0.0 = _10.0.1;
_17.0.2 = _15 != _15;
_20 = [_10.1.1,_10.1.1,_10.1.1];
_5 = !_17.0.1;
_10.0.1 = core::ptr::addr_of_mut!(_10.1.3.1);
_23 = -_8;
_10.1.3.2 = _19.2;
_22 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_1 = _2 as i16;
_9 = _10.0.0 != _10.0.0;
_4 = !2447828458416876379_u64;
_9 = _19.1 >= _10.1.3.1;
Call(_10.1 = fn19(_10.0, _19.2, _19.2, _10.0.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_6 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_3 = _9 as i16;
_11.0 = 1444426620_u32 as usize;
_4 = 230_u8 as u64;
RET = [(-87_i8),24_i8,(-109_i8),(-20_i8),37_i8,(-16_i8)];
_10.0.1 = core::ptr::addr_of_mut!(_17.1);
_10.0 = (_11.0, _10.1.3.0);
_20 = [_3,_3,_3];
_10.1.0 = _2 as f32;
_3 = _1 >> _19.1;
_23 = -_16;
_19.0 = _10.0.1;
_19.1 = _10.1.3.1;
Goto(bb12)
}
bb12 = {
_17.0.0 = _19.0;
RET = [(-16_i8),(-57_i8),(-50_i8),(-3_i8),117_i8,74_i8];
_10.1.3 = _19;
_10.1.3.2 = _19.2;
_17.1 = !_19.1;
_12 = !_23;
_25 = [_10.0.0,_11.0,_10.0.0,_11.0];
_17.0.0 = core::ptr::addr_of_mut!(_17.1);
_10.1.1 = _3 - _3;
_10.1.0 = (-165316111905555175648466717852041592855_i128) as f32;
_17.0.2 = !_10.1.3.2;
_10.1.3.1 = !_17.1;
_17 = (_19, _10.1.3.1);
Goto(bb13)
}
bb13 = {
_13 = _15;
_10.1.0 = _11.0 as f32;
_11.0 = _10.0.0 >> _17.0.1;
_9 = _17.0.2;
_25 = [_11.0,_11.0,_11.0,_10.0.0];
_2 = !48523_u16;
_23 = _16;
_17.0 = (_10.0.1, _19.1, _19.2);
_14 = [_10.1.3.1,_17.0.1,_19.1,_10.1.3.1,_10.1.3.1];
_17.0 = (_10.1.3.0, _17.1, _10.1.3.2);
_16 = _10.1.3.2 as isize;
_15 = _13;
_28 = core::ptr::addr_of_mut!(_17);
_17.0 = (_10.0.1, (*_28).1, _19.2);
_18 = core::ptr::addr_of_mut!((*_28).1);
_10.1.3.0 = core::ptr::addr_of_mut!(_5);
Goto(bb14)
}
bb14 = {
_31 = [_3,_3,_3];
_7 = [_10.0.0,_10.0.0,_11.0,_11.0,_11.0,_10.0.0,_11.0,_11.0];
_4 = 10038095443753925978_u64;
_17.0.1 = (*_28).1;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(1_usize, 14_usize, Move(_14), 21_usize, Move(_21), 16_usize, Move(_16), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(1_usize, 13_usize, Move(_13), 12_usize, Move(_12), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(1_usize, 1_usize, Move(_1), 8_usize, Move(_8), 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: i16,mut _2: isize,mut _3: [usize; 8],mut _4: u128,mut _5: (*mut u128, u128, bool)) -> usize {
mir! {
type RET = usize;
let _6: f64;
let _7: Adt48;
let _8: isize;
let _9: u16;
let _10: [u128; 5];
let _11: usize;
let _12: [u128; 5];
let _13: [u64; 3];
let _14: [i16; 3];
let _15: usize;
let _16: f64;
let _17: isize;
let _18: *const ((*mut u128, u128, bool), u128);
let _19: char;
let _20: u32;
let _21: Adt56;
let _22: Adt51;
let _23: f64;
let _24: Adt50;
let _25: [i8; 6];
let _26: (usize,);
let _27: Adt40;
let _28: [i16; 3];
let _29: Adt53;
let _30: i128;
let _31: [i8; 6];
let _32: f32;
let _33: char;
let _34: ();
let _35: ();
{
RET = 13459874219344931895_usize;
_4 = _5.1 >> _1;
_1 = -26399_i16;
Goto(bb1)
}
bb1 = {
_5.2 = _4 == _4;
_5.2 = _2 < _2;
_5.2 = !false;
_2 = !9223372036854775807_isize;
_6 = 12293665661896655574_u64 as f64;
_1 = !12019_i16;
_1 = _2 as i16;
RET = !3_usize;
RET = !4_usize;
RET = 7_usize;
_2 = _1 as isize;
_5.0 = core::ptr::addr_of_mut!(_5.1);
_3 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3[RET] = RET << _5.1;
_5.1 = !_4;
RET = 5497666668971551039_i64 as usize;
_5.1 = _4 | _4;
_4 = !_5.1;
RET = 4963976277774454455_usize;
_8 = -_2;
_5.2 = !true;
_5.2 = !true;
RET = _4 as usize;
Call(_7 = fn3(_6, _5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5.0 = core::ptr::addr_of_mut!(_4);
_4 = !_5.1;
_3 = [RET,Field::<(usize,)>(Variant(_7, 1), 0).0,Field::<(usize,)>(Variant(_7, 1), 0).0,RET,RET,Field::<(usize,)>(Variant(_7, 1), 0).0,Field::<(usize,)>(Variant(_7, 1), 0).0,Field::<(usize,)>(Variant(_7, 1), 0).0];
SetDiscriminant(_7, 0);
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = 79400150446869084178865777765540877751_i128 ^ 114093843697741044570744505480369912425_i128;
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = (-23075254515460401351969118734337854953_i128) >> _5.1;
RET = _6 as usize;
place!(Field::<usize>(Variant(_7, 0), 7)) = RET * RET;
place!(Field::<u16>(Variant(_7, 0), 4)) = !15769_u16;
RET = Field::<usize>(Variant(_7, 0), 7) * Field::<usize>(Variant(_7, 0), 7);
_6 = 1197046827_i32 as f64;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).2 = _5.2;
place!(Field::<i64>(Variant(_7, 0), 6)) = (-748660586_i32) as i64;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).2 = _5.2;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = _5.1;
Goto(bb3)
}
bb3 = {
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = _6 as u16;
_5.0 = core::ptr::addr_of_mut!(_5.1);
_9 = Field::<u16>(Variant(_7, 0), 4) * Field::<u16>(Variant(_7, 0), 4);
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = _9 << _5.1;
place!(Field::<usize>(Variant(_7, 0), 7)) = _5.2 as usize;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = (_5.0, _4, _5.2);
_10 = [_4,_4,_4,Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1,Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1];
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = _5;
_11 = !RET;
RET = _11 * _11;
RET = Field::<usize>(Variant(_7, 0), 7);
_11 = !Field::<usize>(Variant(_7, 0), 7);
_3 = [RET,_11,_11,_11,RET,_11,RET,RET];
_10 = [_5.1,_4,_4,Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1,_4];
_3 = [RET,Field::<usize>(Variant(_7, 0), 7),Field::<usize>(Variant(_7, 0), 7),Field::<usize>(Variant(_7, 0), 7),Field::<usize>(Variant(_7, 0), 7),_11,_11,RET];
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = _5.1 << _4;
_4 = 11736766950550164800_u64 as u128;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).0 = _5.0;
_4 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1 + Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
_10 = [_4,_4,_4,_4,_4];
_12 = [_5.1,_4,_4,_4,_4];
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld2 = Field::<i64>(Variant(_7, 0), 6);
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = _8 as i128;
place!(Field::<i64>(Variant(_7, 0), 6)) = Field::<Adt45>(Variant(_7, 0), 1).fld2 & Field::<Adt45>(Variant(_7, 0), 1).fld2;
_4 = _5.1;
place!(Field::<u16>(Variant(_7, 0), 4)) = !Field::<Adt47>(Variant(_7, 0), 2).fld3;
place!(Field::<usize>(Variant(_7, 0), 7)) = RET | RET;
Goto(bb4)
}
bb4 = {
place!(Field::<i64>(Variant(_7, 0), 6)) = Field::<Adt45>(Variant(_7, 0), 1).fld2;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = _5;
_13 = [14456210816237516563_u64,13540163557337323996_u64,18409264371792837059_u64];
place!(Field::<u32>(Variant(_7, 0), 5)) = !3257077067_u32;
_15 = !Field::<usize>(Variant(_7, 0), 7);
_13 = [4168097977130745290_u64,14025981730114075523_u64,3229037883681476755_u64];
_4 = !Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
place!(Field::<i64>(Variant(_7, 0), 6)) = !Field::<Adt45>(Variant(_7, 0), 1).fld2;
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = _5.1 as u16;
_16 = _6;
_3 = [_11,Field::<usize>(Variant(_7, 0), 7),_15,_15,_15,RET,Field::<usize>(Variant(_7, 0), 7),_11];
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = _5;
place!(Field::<usize>(Variant(_7, 0), 7)) = _11 >> _5.1;
_14 = [_1,_1,_1];
_13 = [12517256073496158334_u64,12085148800029203128_u64,12080067721905185185_u64];
_10 = _12;
Goto(bb5)
}
bb5 = {
_5 = (Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0, _4, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).2);
Goto(bb6)
}
bb6 = {
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = _6 as u128;
_15 = Field::<usize>(Variant(_7, 0), 7);
_12 = [_5.1,_5.1,_5.1,_4,_5.1];
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = 119568606311725770574913841425108114124_i128 & 81869338403779740798926536215280232_i128;
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = 1871140982_i32 as u16;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = Field::<u32>(Variant(_7, 0), 5) as u128;
_10 = _12;
_11 = !Field::<usize>(Variant(_7, 0), 7);
_5 = (Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0, _4, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).2);
_16 = -_6;
place!(Field::<u32>(Variant(_7, 0), 5)) = 1132557432_u32 >> Field::<u16>(Variant(_7, 0), 4);
_9 = !Field::<u16>(Variant(_7, 0), 4);
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = _9;
_5.0 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0;
_1 = (-4298_i16);
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = (_5.0, _4, _5.2);
_9 = 4_i8 as u16;
_5 = (Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0, _4, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).2);
_5.2 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).2;
_8 = _2 << Field::<Adt47>(Variant(_7, 0), 2).fld3;
_13 = [2063625614576933616_u64,9244471438493534882_u64,7501039775340020051_u64];
_17 = -_8;
Call(_1 = fn18(_17, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3), Field::<Adt47>(Variant(_7, 0), 2).fld3, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3), _4, _5.1, _5.0, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3), Field::<u16>(Variant(_7, 0), 4)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld0 = 299402468378863333_u64 + 14567457335903725108_u64;
_19 = '\u{60e0f}';
_3 = [_11,_15,Field::<usize>(Variant(_7, 0), 7),_11,_15,_15,RET,_11];
_20 = Field::<u32>(Variant(_7, 0), 5) & Field::<u32>(Variant(_7, 0), 5);
_20 = Field::<u32>(Variant(_7, 0), 5);
_19 = '\u{1c8b5}';
place!(Field::<i64>(Variant(_7, 0), 6)) = Field::<Adt45>(Variant(_7, 0), 1).fld2;
_5.0 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0;
_5.0 = core::ptr::addr_of_mut!(_5.1);
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld0 = 14798939150506468630_u64;
_10 = _12;
_5.1 = !Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
_1 = Field::<u32>(Variant(_7, 0), 5) as i16;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).2 = _20 > Field::<u32>(Variant(_7, 0), 5);
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).0 = core::ptr::addr_of_mut!(_5.1);
match Field::<Adt47>(Variant(_7, 0), 2).fld0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb8,
14798939150506468630 => bb10,
_ => bb9
}
}
bb8 = {
_5.2 = _4 == _4;
_5.2 = _2 < _2;
_5.2 = !false;
_2 = !9223372036854775807_isize;
_6 = 12293665661896655574_u64 as f64;
_1 = !12019_i16;
_1 = _2 as i16;
RET = !3_usize;
RET = !4_usize;
RET = 7_usize;
_2 = _1 as isize;
_5.0 = core::ptr::addr_of_mut!(_5.1);
_3 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3[RET] = RET << _5.1;
_5.1 = !_4;
RET = 5497666668971551039_i64 as usize;
_5.1 = _4 | _4;
_4 = !_5.1;
RET = 4963976277774454455_usize;
_8 = -_2;
_5.2 = !true;
_5.2 = !true;
RET = _4 as usize;
Call(_7 = fn3(_6, _5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_5 = (Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0, _4, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).2);
Goto(bb6)
}
bb10 = {
_25 = [(-117_i8),(-115_i8),66_i8,(-32_i8),28_i8,89_i8];
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).0 = core::ptr::addr_of_mut!(_5.1);
_26 = (_11,);
_4 = !Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = _19 as u128;
_5 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3);
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld0 = core::ptr::addr_of_mut!(_27.fld2);
_11 = _26.0;
_18 = core::ptr::addr_of!(_27.fld2);
_27.fld2.0 = (_5.0, _4, Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).2);
_27.fld2.0.1 = _4 - Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
_27.fld2.0.0 = core::ptr::addr_of_mut!((*_18).1);
place!(Field::<usize>(Variant(_7, 0), 7)) = 128_u8 as usize;
_2 = _19 as isize;
_15 = _1 as usize;
_15 = _11;
match Field::<Adt47>(Variant(_7, 0), 2).fld0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
14798939150506468630 => bb16,
_ => bb15
}
}
bb11 = {
_5.2 = _4 == _4;
_5.2 = _2 < _2;
_5.2 = !false;
_2 = !9223372036854775807_isize;
_6 = 12293665661896655574_u64 as f64;
_1 = !12019_i16;
_1 = _2 as i16;
RET = !3_usize;
RET = !4_usize;
RET = 7_usize;
_2 = _1 as isize;
_5.0 = core::ptr::addr_of_mut!(_5.1);
_3 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3[RET] = RET << _5.1;
_5.1 = !_4;
RET = 5497666668971551039_i64 as usize;
_5.1 = _4 | _4;
_4 = !_5.1;
RET = 4963976277774454455_usize;
_8 = -_2;
_5.2 = !true;
_5.2 = !true;
RET = _4 as usize;
Call(_7 = fn3(_6, _5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_5.2 = _4 == _4;
_5.2 = _2 < _2;
_5.2 = !false;
_2 = !9223372036854775807_isize;
_6 = 12293665661896655574_u64 as f64;
_1 = !12019_i16;
_1 = _2 as i16;
RET = !3_usize;
RET = !4_usize;
RET = 7_usize;
_2 = _1 as isize;
_5.0 = core::ptr::addr_of_mut!(_5.1);
_3 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3[RET] = RET << _5.1;
_5.1 = !_4;
RET = 5497666668971551039_i64 as usize;
_5.1 = _4 | _4;
_4 = !_5.1;
RET = 4963976277774454455_usize;
_8 = -_2;
_5.2 = !true;
_5.2 = !true;
RET = _4 as usize;
Call(_7 = fn3(_6, _5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld0 = 299402468378863333_u64 + 14567457335903725108_u64;
_19 = '\u{60e0f}';
_3 = [_11,_15,Field::<usize>(Variant(_7, 0), 7),_11,_15,_15,RET,_11];
_20 = Field::<u32>(Variant(_7, 0), 5) & Field::<u32>(Variant(_7, 0), 5);
_20 = Field::<u32>(Variant(_7, 0), 5);
_19 = '\u{1c8b5}';
place!(Field::<i64>(Variant(_7, 0), 6)) = Field::<Adt45>(Variant(_7, 0), 1).fld2;
_5.0 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).0;
_5.0 = core::ptr::addr_of_mut!(_5.1);
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld0 = 14798939150506468630_u64;
_10 = _12;
_5.1 = !Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
_1 = Field::<u32>(Variant(_7, 0), 5) as i16;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).2 = _20 > Field::<u32>(Variant(_7, 0), 5);
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).0 = core::ptr::addr_of_mut!(_5.1);
match Field::<Adt47>(Variant(_7, 0), 2).fld0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb8,
14798939150506468630 => bb10,
_ => bb9
}
}
bb14 = {
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = _6 as u16;
_5.0 = core::ptr::addr_of_mut!(_5.1);
_9 = Field::<u16>(Variant(_7, 0), 4) * Field::<u16>(Variant(_7, 0), 4);
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld3 = _9 << _5.1;
place!(Field::<usize>(Variant(_7, 0), 7)) = _5.2 as usize;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = (_5.0, _4, _5.2);
_10 = [_4,_4,_4,Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1,Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1];
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)) = _5;
_11 = !RET;
RET = _11 * _11;
RET = Field::<usize>(Variant(_7, 0), 7);
_11 = !Field::<usize>(Variant(_7, 0), 7);
_3 = [RET,_11,_11,_11,RET,_11,RET,RET];
_10 = [_5.1,_4,_4,Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1,_4];
_3 = [RET,Field::<usize>(Variant(_7, 0), 7),Field::<usize>(Variant(_7, 0), 7),Field::<usize>(Variant(_7, 0), 7),Field::<usize>(Variant(_7, 0), 7),_11,_11,RET];
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = _5.1 << _4;
_4 = 11736766950550164800_u64 as u128;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).0 = _5.0;
_4 = Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1 + Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3).1;
_10 = [_4,_4,_4,_4,_4];
_12 = [_5.1,_4,_4,_4,_4];
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld2 = Field::<i64>(Variant(_7, 0), 6);
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = _8 as i128;
place!(Field::<i64>(Variant(_7, 0), 6)) = Field::<Adt45>(Variant(_7, 0), 1).fld2 & Field::<Adt45>(Variant(_7, 0), 1).fld2;
_4 = _5.1;
place!(Field::<u16>(Variant(_7, 0), 4)) = !Field::<Adt47>(Variant(_7, 0), 2).fld3;
place!(Field::<usize>(Variant(_7, 0), 7)) = RET | RET;
Goto(bb4)
}
bb15 = {
_5.0 = core::ptr::addr_of_mut!(_4);
_4 = !_5.1;
_3 = [RET,Field::<(usize,)>(Variant(_7, 1), 0).0,Field::<(usize,)>(Variant(_7, 1), 0).0,RET,RET,Field::<(usize,)>(Variant(_7, 1), 0).0,Field::<(usize,)>(Variant(_7, 1), 0).0,Field::<(usize,)>(Variant(_7, 1), 0).0];
SetDiscriminant(_7, 0);
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = 79400150446869084178865777765540877751_i128 ^ 114093843697741044570744505480369912425_i128;
place!(Field::<Adt45>(Variant(_7, 0), 1)).fld4 = (-23075254515460401351969118734337854953_i128) >> _5.1;
RET = _6 as usize;
place!(Field::<usize>(Variant(_7, 0), 7)) = RET * RET;
place!(Field::<u16>(Variant(_7, 0), 4)) = !15769_u16;
RET = Field::<usize>(Variant(_7, 0), 7) * Field::<usize>(Variant(_7, 0), 7);
_6 = 1197046827_i32 as f64;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).2 = _5.2;
place!(Field::<i64>(Variant(_7, 0), 6)) = (-748660586_i32) as i64;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).2 = _5.2;
place!(Field::<(*mut u128, u128, bool)>(Variant(_7, 0), 3)).1 = _5.1;
Goto(bb3)
}
bb16 = {
_21 = Adt56::Variant3 { fld0: (*_18).0,fld1: _18 };
_5.0 = core::ptr::addr_of_mut!(_5.1);
_28 = [_1,_1,_1];
_19 = '\u{a5ee}';
_23 = Field::<Adt47>(Variant(_7, 0), 2).fld0 as f64;
place!(Field::<(*mut u128, u128, bool)>(Variant(_21, 3), 0)).2 = _4 > (*_18).0.1;
_27.fld2.0.2 = !_5.2;
RET = _26.0 | _15;
_23 = _8 as f64;
place!(Field::<Adt47>(Variant(_7, 0), 2)).fld2 = core::ptr::addr_of!(_32);
_27.fld2.0.0 = _5.0;
place!(Field::<u16>(Variant(_7, 0), 4)) = !Field::<Adt47>(Variant(_7, 0), 2).fld3;
place!(Field::<(*mut u128, u128, bool)>(Variant(_21, 3), 0)).0 = (*_18).0.0;
_11 = RET * RET;
_25 = [48_i8,(-89_i8),(-50_i8),95_i8,(-109_i8),67_i8];
SetDiscriminant(_21, 3);
_2 = _8;
Goto(bb17)
}
bb17 = {
Call(_34 = dump_var(2_usize, 25_usize, Move(_25), 4_usize, Move(_4), 9_usize, Move(_9), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_34 = dump_var(2_usize, 26_usize, Move(_26), 2_usize, Move(_2), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_34 = dump_var(2_usize, 11_usize, Move(_11), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: f64,mut _2: *mut u128) -> Adt48 {
mir! {
type RET = Adt48;
let _3: isize;
let _4: [usize; 4];
let _5: [u64; 3];
let _6: (usize,);
let _7: isize;
let _8: *const *mut ((*mut u128, u128, bool), u128);
let _9: [usize; 4];
let _10: i64;
let _11: *const *mut ((*mut u128, u128, bool), u128);
let _12: i128;
let _13: char;
let _14: Adt40;
let _15: [i8; 6];
let _16: [u128; 5];
let _17: [usize; 4];
let _18: u8;
let _19: i8;
let _20: ((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)));
let _21: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool));
let _22: u64;
let _23: [u128; 5];
let _24: Adt49;
let _25: i32;
let _26: *const ((*mut u128, u128, bool), u128);
let _27: f32;
let _28: Adt48;
let _29: Adt49;
let _30: f64;
let _31: [i8; 6];
let _32: Adt55;
let _33: (usize,);
let _34: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool));
let _35: char;
let _36: Adt50;
let _37: (usize,);
let _38: *mut u128;
let _39: isize;
let _40: bool;
let _41: f64;
let _42: isize;
let _43: [i16; 3];
let _44: [u64; 3];
let _45: i128;
let _46: f64;
let _47: isize;
let _48: i16;
let _49: bool;
let _50: char;
let _51: i16;
let _52: i8;
let _53: i64;
let _54: Adt52;
let _55: bool;
let _56: [i8; 6];
let _57: isize;
let _58: usize;
let _59: [i8; 6];
let _60: f32;
let _61: (usize,);
let _62: u32;
let _63: isize;
let _64: bool;
let _65: (usize, *mut u128);
let _66: f32;
let _67: [i16; 3];
let _68: Adt47;
let _69: isize;
let _70: Adt50;
let _71: f64;
let _72: bool;
let _73: f64;
let _74: (usize, *mut u128);
let _75: i64;
let _76: *mut i64;
let _77: char;
let _78: i64;
let _79: char;
let _80: char;
let _81: Adt45;
let _82: u8;
let _83: [usize; 8];
let _84: i32;
let _85: f32;
let _86: i16;
let _87: bool;
let _88: [usize; 8];
let _89: [u64; 3];
let _90: isize;
let _91: ();
let _92: ();
{
_1 = (-4982_i16) as f64;
_1 = (-1062760204_i32) as f64;
_1 = (-28644847941769553761094003288319331186_i128) as f64;
_1 = (-1702737718_i32) as f64;
_1 = 15746_i16 as f64;
_1 = 2140601241_u32 as f64;
_1 = 23432078010714652097214739367050469673_u128 as f64;
_1 = 153559579230096011153780614245796951282_u128 as f64;
_1 = (-289852729_i32) as f64;
_3 = (-787680269_i32) as isize;
_1 = (-30984316109180852795477173282443523159_i128) as f64;
_1 = _3 as f64;
_4 = [1483968468949063435_usize,7_usize,15537801930600971014_usize,1213633555587584317_usize];
_3 = -(-9223372036854775808_isize);
_3 = 60_u8 as isize;
_1 = 267897070504659368723103108487939644152_u128 as f64;
_3 = _1 as isize;
_5 = [5445187600831885914_u64,12913669283756918870_u64,11768247415309742117_u64];
_4 = [15087434587695475947_usize,6_usize,2_usize,5_usize];
_1 = (-4742542638768194370_i64) as f64;
_6.0 = (-8110_i16) as usize;
Goto(bb1)
}
bb1 = {
_7 = _3 << _6.0;
_1 = 34966912547371735267035331851607983347_u128 as f64;
_6.0 = 286857750969897582_usize | 7_usize;
_5 = [2571212033605102953_u64,10759875413852997958_u64,1054931119308073105_u64];
_5 = [12788557734816692668_u64,11012722017265978760_u64,1408623673289471132_u64];
_1 = (-46_i8) as f64;
Goto(bb2)
}
bb2 = {
_3 = (-22583_i16) as isize;
_3 = (-85_i8) as isize;
_3 = true as isize;
_1 = 118581127362471423506467208989639649810_i128 as f64;
_6.0 = 3915713724747031110_usize >> _7;
_1 = 24755_i16 as f64;
_6 = (16740552646491789904_usize,);
_3 = -_7;
_7 = !_3;
_5 = [4375876114903638167_u64,7457061973843438841_u64,9681611858142839330_u64];
_6.0 = !2_usize;
Goto(bb3)
}
bb3 = {
_6 = (16300673819667719718_usize,);
_6 = (10260257136890456067_usize,);
_1 = _3 as f64;
_7 = _3;
_4 = [_6.0,_6.0,_6.0,_6.0];
_1 = (-23_i8) as f64;
_3 = _7;
_9 = [_6.0,_6.0,_6.0,_6.0];
_6.0 = !17304304065548808210_usize;
_6.0 = 8528573456286154340_usize;
_7 = _3 + _3;
_9 = [_6.0,_6.0,_6.0,_6.0];
Goto(bb4)
}
bb4 = {
_3 = _7;
_5 = [5938533539200923675_u64,7750673393665946665_u64,7963953061841603154_u64];
_5 = [10178082661731616645_u64,18377842458714282572_u64,1519376624951116917_u64];
_9 = [_6.0,_6.0,_6.0,_6.0];
_10 = (-6986724093548871253_i64);
_6.0 = 6_usize << _7;
_3 = _7 & _7;
_5 = [11869988477570181077_u64,1438204508430328673_u64,508961339503568006_u64];
_6.0 = 6_usize;
_6 = (4584859237027944011_usize,);
_9 = _4;
_1 = 94391992048630969497752253172617970033_u128 as f64;
_6.0 = !5997638248349805784_usize;
Call(RET = fn4(_7, _7, _2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_10 = 45_u8 as i64;
RET = Adt48::Variant1 { fld0: _6 };
_1 = 21_i8 as f64;
_6.0 = false as usize;
_5 = [13756808357115278474_u64,3111836943813457431_u64,884266686600938_u64];
_6.0 = Field::<(usize,)>(Variant(RET, 1), 0).0;
_6 = Field::<(usize,)>(Variant(RET, 1), 0);
_12 = (-124007681203997688653136639626519336229_i128) & 130681527395893002374521921964596490868_i128;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 << _3;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 * _6.0;
_7 = 136822575239824294147431549764975611771_u128 as isize;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 ^ _6.0;
_1 = 54004_u16 as f64;
Call(_1 = core::intrinsics::transmute(_7), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_7 = !_3;
_7 = '\u{e1a39}' as isize;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = (_6.0,);
_10 = -(-2388730288431730984_i64);
_3 = _7;
_14.fld2.0.0 = _2;
_7 = !_3;
_13 = '\u{a8c93}';
_14.fld2.1 = !146738356445456477087867563734190669170_u128;
Goto(bb7)
}
bb7 = {
_7 = (-34_i8) as isize;
_13 = '\u{2c929}';
_6 = (Field::<(usize,)>(Variant(RET, 1), 0).0,);
_7 = 143_u8 as isize;
_7 = _3;
RET = Adt48::Variant1 { fld0: _6 };
_3 = _7 | _7;
SetDiscriminant(RET, 2);
_13 = '\u{b3be8}';
_5 = [10699682780766338985_u64,3418023523414789221_u64,11587689911400777728_u64];
_14.fld2.0.1 = _14.fld2.1;
RET = Adt48::Variant1 { fld0: _6 };
_14.fld2.0.0 = _2;
_14.fld2.0.1 = _14.fld2.1;
_15 = [81_i8,33_i8,(-73_i8),66_i8,(-32_i8),103_i8];
Call(_6 = fn7(_14.fld2.0.0, _5, _2, _14.fld2.0.0, _14.fld2.0.0, _14.fld2.0.0, _14.fld2.0.0, _9, _14.fld2.0.0, _14.fld2.0.0, _15, _2), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = _6;
_14.fld2.0.1 = _14.fld2.1 >> _12;
_12 = _6.0 as i128;
_1 = 72_i8 as f64;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = (_6.0,);
_18 = !80_u8;
_14.fld2.0.2 = true;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = _6;
_19 = !(-52_i8);
_17 = [_6.0,Field::<(usize,)>(Variant(RET, 1), 0).0,Field::<(usize,)>(Variant(RET, 1), 0).0,Field::<(usize,)>(Variant(RET, 1), 0).0];
_6 = Field::<(usize,)>(Variant(RET, 1), 0);
_2 = _14.fld2.0.0;
_2 = _14.fld2.0.0;
SetDiscriminant(RET, 1);
_20.1.0 = _12 as f32;
_20.1.3.1 = _6.0 as u128;
_6.0 = 4_usize & 7103001686445679619_usize;
_14.fld1 = core::ptr::addr_of_mut!(_20.1.0);
_16 = [_14.fld2.0.1,_14.fld2.0.1,_14.fld2.0.1,_20.1.3.1,_14.fld2.0.1];
_20.1.3 = _14.fld2.0;
Goto(bb9)
}
bb9 = {
_20.1.2 = core::ptr::addr_of_mut!(_14.fld2);
_17 = _4;
_2 = core::ptr::addr_of_mut!(_14.fld2.1);
_22 = !15243271329439107926_u64;
_8 = core::ptr::addr_of!(_21.2);
_21.2 = core::ptr::addr_of_mut!(_14.fld2);
_20.1.3.0 = _14.fld2.0.0;
_15 = [_19,_19,_19,_19,_19,_19];
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = (_6.0,);
_21.0 = _20.1.0 - _20.1.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = _6;
_20.1.3.1 = !_14.fld2.1;
_21.3.2 = _20.1.3.2 | _20.1.3.2;
_10 = 2750037774_u32 as i64;
_20.1.0 = -_21.0;
_20.1.3.1 = !(*_2);
_20.0 = (Field::<(usize,)>(Variant(RET, 1), 0).0, _2);
_23 = [_14.fld2.0.1,_14.fld2.0.1,_14.fld2.0.1,_14.fld2.1,_14.fld2.0.1];
_10 = _19 as i64;
_20.1.3.0 = core::ptr::addr_of_mut!((*_2));
_20.0.1 = _14.fld2.0.0;
_21.1 = _1 as i16;
_20.1.1 = !_21.1;
SetDiscriminant(RET, 0);
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).0 = core::ptr::addr_of_mut!((*_2));
_14.fld1 = core::ptr::addr_of_mut!(_20.1.0);
Goto(bb10)
}
bb10 = {
_19 = -65_i8;
_21.3 = (_20.0.1, _14.fld2.0.1, _20.1.3.2);
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld3 = 13265_u16 * 50743_u16;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld2 = core::ptr::addr_of!(_20.1.0);
_20.1.3.0 = core::ptr::addr_of_mut!(_20.1.3.1);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = _13 as i128;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)) = (_21.3.0, _21.3.1, _20.1.3.2);
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = core::ptr::addr_of_mut!(_14.fld2);
_21 = _20.1;
_20.0 = (_6.0, _14.fld2.0.0);
_21.2 = core::ptr::addr_of_mut!(_14.fld2);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0 = core::ptr::addr_of_mut!(_14.fld2);
place!(Field::<u32>(Variant(RET, 0), 5)) = _20.1.1 as u32;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).1 = !_14.fld2.0.1;
_27 = _21.0;
Goto(bb11)
}
bb11 = {
_22 = 14892103549267154856_u64 >> _14.fld2.0.1;
_20.1.2 = core::ptr::addr_of_mut!(_14.fld2);
_20.1.3.2 = _21.3.2;
_23 = [_14.fld2.1,_20.1.3.1,(*_2),(*_2),Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1];
_26 = core::ptr::addr_of!(_14.fld2);
_20.1.3.1 = !(*_26).0.1;
_30 = _1 * _1;
_26 = core::ptr::addr_of!((*_26));
_14.fld2.0 = (_20.0.1, (*_26).1, Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).2);
_8 = core::ptr::addr_of!(place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1);
Goto(bb12)
}
bb12 = {
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).2 = !_21.3.2;
_14.fld0 = core::ptr::addr_of!(_20.1.0);
_12 = !Field::<Adt45>(Variant(RET, 0), 1).fld4;
_14.fld2.0.1 = !_14.fld2.1;
_16 = [(*_26).0.1,(*_2),(*_26).0.1,_20.1.3.1,(*_2)];
_6 = (_20.0.0,);
_20.1.3.0 = Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).0;
place!(Field::<u16>(Variant(RET, 0), 4)) = Field::<Adt47>(Variant(RET, 0), 2).fld3;
_21.3 = ((*_26).0.0, _14.fld2.0.1, _14.fld2.0.2);
place!(Field::<usize>(Variant(RET, 0), 7)) = !_20.0.0;
_14.fld0 = core::ptr::addr_of!(_21.0);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = _20.1.1 as i128;
place!(Field::<Adt47>(Variant(RET, 0), 2)) = Adt47 { fld0: _22,fld1: _20.1.2,fld2: _14.fld0,fld3: Field::<u16>(Variant(RET, 0), 4) };
_10 = (-7349734745101990557_i64);
place!(Field::<u32>(Variant(RET, 0), 5)) = _13 as u32;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = -_12;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = _12;
place!(Field::<i64>(Variant(RET, 0), 6)) = !_10;
Goto(bb13)
}
bb13 = {
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).1 = !_14.fld2.1;
_21.3.0 = core::ptr::addr_of_mut!(_14.fld2.1);
place!(Field::<i64>(Variant(RET, 0), 6)) = _10 & _10;
_6 = (Field::<usize>(Variant(RET, 0), 7),);
_9 = [_20.0.0,Field::<usize>(Variant(RET, 0), 7),Field::<usize>(Variant(RET, 0), 7),Field::<usize>(Variant(RET, 0), 7)];
_14.fld2.0.0 = Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).0;
_34.2 = (*_8);
_33 = (_20.0.0,);
_22 = _19 as u64;
_25 = 80157883_i32 & (-1019664950_i32);
_3 = _7;
Goto(bb14)
}
bb14 = {
_11 = _8;
_21.3.0 = core::ptr::addr_of_mut!((*_2));
_18 = _13 as u8;
_11 = core::ptr::addr_of!(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0);
_21 = (_27, _20.1.1, (*_11), Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3));
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld2 = _20.1.0 as i64;
_37.0 = _13 as usize;
_18 = 23_u8 + 226_u8;
match _10 {
0 => bb8,
1 => bb12,
2 => bb3,
3 => bb10,
4 => bb5,
5 => bb6,
340282366920938463456024872686666220899 => bb16,
_ => bb15
}
}
bb15 = {
_7 = (-34_i8) as isize;
_13 = '\u{2c929}';
_6 = (Field::<(usize,)>(Variant(RET, 1), 0).0,);
_7 = 143_u8 as isize;
_7 = _3;
RET = Adt48::Variant1 { fld0: _6 };
_3 = _7 | _7;
SetDiscriminant(RET, 2);
_13 = '\u{b3be8}';
_5 = [10699682780766338985_u64,3418023523414789221_u64,11587689911400777728_u64];
_14.fld2.0.1 = _14.fld2.1;
RET = Adt48::Variant1 { fld0: _6 };
_14.fld2.0.0 = _2;
_14.fld2.0.1 = _14.fld2.1;
_15 = [81_i8,33_i8,(-73_i8),66_i8,(-32_i8),103_i8];
Call(_6 = fn7(_14.fld2.0.0, _5, _2, _14.fld2.0.0, _14.fld2.0.0, _14.fld2.0.0, _14.fld2.0.0, _9, _14.fld2.0.0, _14.fld2.0.0, _15, _2), ReturnTo(bb8), UnwindUnreachable())
}
bb16 = {
_34.3.1 = _20.1.3.1 * Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1;
_34.3 = _14.fld2.0;
_34 = _20.1;
_21.1 = !_34.1;
_21.3 = (_14.fld2.0.0, _34.3.1, (*_26).0.2);
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = _21.2;
_21.3.1 = Field::<Adt47>(Variant(RET, 0), 2).fld3 as u128;
place!(Field::<usize>(Variant(RET, 0), 7)) = _6.0;
_31 = _15;
_40 = _34.3.2;
_21.1 = _34.1;
_7 = -_3;
_13 = '\u{586a7}';
_20.0.1 = core::ptr::addr_of_mut!((*_26).1);
_20.0.0 = _33.0 * Field::<usize>(Variant(RET, 0), 7);
_6 = _33;
Goto(bb17)
}
bb17 = {
_33.0 = !_20.0.0;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld0 = _18 as u64;
_20.1.3 = _21.3;
_10 = !Field::<i64>(Variant(RET, 0), 6);
_41 = _30;
_26 = core::ptr::addr_of!(_14.fld2);
_2 = (*_26).0.0;
_12 = Field::<Adt47>(Variant(RET, 0), 2).fld0 as i128;
_14.fld2.0.2 = _20.0.0 >= _33.0;
_21.1 = _20.1.1;
_14.fld0 = Field::<Adt47>(Variant(RET, 0), 2).fld2;
_20.1.3.2 = (*_26).0.2;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0 = core::ptr::addr_of_mut!((*_26));
_17 = [Field::<usize>(Variant(RET, 0), 7),_33.0,_20.0.0,_6.0];
_34.2 = core::ptr::addr_of_mut!((*_26));
place!(Field::<usize>(Variant(RET, 0), 7)) = _3 as usize;
_21.3.2 = _40 >= (*_26).0.2;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = _12 >> _14.fld2.0.1;
_31 = [_19,_19,_19,_19,_19,_19];
_34.2 = core::ptr::addr_of_mut!((*_26));
_4 = [_6.0,_20.0.0,_33.0,_33.0];
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0 = Field::<Adt47>(Variant(RET, 0), 2).fld1;
_14.fld2.0.0 = _21.3.0;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).0 = core::ptr::addr_of_mut!((*_26).0.1);
Call(place!(Field::<Adt47>(Variant(RET, 0), 2)).fld3 = core::intrinsics::transmute(Field::<u16>(Variant(RET, 0), 4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
place!(Field::<u32>(Variant(RET, 0), 5)) = 708268189_u32;
_49 = _33.0 >= Field::<usize>(Variant(RET, 0), 7);
place!(Field::<u16>(Variant(RET, 0), 4)) = Field::<Adt47>(Variant(RET, 0), 2).fld3;
place!(Field::<usize>(Variant(RET, 0), 7)) = _6.0 | _20.0.0;
_27 = -_20.1.0;
match Field::<u32>(Variant(RET, 0), 5) {
0 => bb16,
1 => bb10,
2 => bb19,
708268189 => bb21,
_ => bb20
}
}
bb19 = {
_10 = 45_u8 as i64;
RET = Adt48::Variant1 { fld0: _6 };
_1 = 21_i8 as f64;
_6.0 = false as usize;
_5 = [13756808357115278474_u64,3111836943813457431_u64,884266686600938_u64];
_6.0 = Field::<(usize,)>(Variant(RET, 1), 0).0;
_6 = Field::<(usize,)>(Variant(RET, 1), 0);
_12 = (-124007681203997688653136639626519336229_i128) & 130681527395893002374521921964596490868_i128;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 << _3;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 * _6.0;
_7 = 136822575239824294147431549764975611771_u128 as isize;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 ^ _6.0;
_1 = 54004_u16 as f64;
Call(_1 = core::intrinsics::transmute(_7), ReturnTo(bb6), UnwindUnreachable())
}
bb20 = {
_3 = (-22583_i16) as isize;
_3 = (-85_i8) as isize;
_3 = true as isize;
_1 = 118581127362471423506467208989639649810_i128 as f64;
_6.0 = 3915713724747031110_usize >> _7;
_1 = 24755_i16 as f64;
_6 = (16740552646491789904_usize,);
_3 = -_7;
_7 = !_3;
_5 = [4375876114903638167_u64,7457061973843438841_u64,9681611858142839330_u64];
_6.0 = !2_usize;
Goto(bb3)
}
bb21 = {
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).0 = _21.3.0;
_34.1 = -_21.1;
_20.1 = (_27, _21.1, (*_8), Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3));
_38 = core::ptr::addr_of_mut!((*_26).0.1);
_21.3.0 = _34.3.0;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3 = Adt41::Variant0 { fld0: _26,fld1: Field::<Adt45>(Variant(RET, 0), 1).fld0 };
_43 = [_20.1.1,_20.1.1,_20.1.1];
_20.0 = (_6.0, _14.fld2.0.0);
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).2 = !_49;
_21 = (_20.1.0, _34.1, (*_8), (*_26).0);
_22 = Field::<Adt47>(Variant(RET, 0), 2).fld0;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = Field::<Adt47>(Variant(RET, 0), 2).fld3 as i128;
place!(Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3, 0), 1)) = _21.2;
_24 = Adt49::Variant1 { fld0: (*_26).0.2 };
_54.fld2 = _3;
_18 = 214_u8 + 92_u8;
Goto(bb22)
}
bb22 = {
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)) = (*_26).0;
_34.3 = (_14.fld2.0.0, (*_38), (*_26).0.2);
_15 = _31;
_14.fld2.0.0 = core::ptr::addr_of_mut!((*_26).1);
_20.1.3.2 = _49;
_2 = _20.1.3.0;
_20.0 = (_33.0, _34.3.0);
_40 = (*_26).0.2;
_20.1 = (_21.0, _34.1, (*_8), (*_26).0);
_40 = !Field::<bool>(Variant(_24, 1), 0);
place!(Field::<u32>(Variant(RET, 0), 5)) = 1358866092_u32 - 692348117_u32;
SetDiscriminant(_24, 2);
_14.fld2.0 = (_21.3.0, _21.3.1, _20.1.3.2);
_20.0.1 = _14.fld2.0.0;
place!(Field::<u32>(Variant(RET, 0), 5)) = 4112798118_u32;
_14.fld2.1 = (*_26).0.1 ^ _34.3.1;
place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_24, 2), 0)).3.0 = core::ptr::addr_of_mut!(place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).1);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1 = Adt44::Variant0 { fld0: Field::<Adt45>(Variant(RET, 0), 1).fld3,fld1: _19,fld2: Field::<Adt45>(Variant(RET, 0), 1).fld4 };
_45 = -Field::<Adt45>(Variant(RET, 0), 1).fld4;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0 = Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0), 0), 1);
match Field::<u32>(Variant(RET, 0), 5) {
4112798118 => bb23,
_ => bb18
}
}
bb23 = {
_8 = core::ptr::addr_of!((*_11));
_53 = Field::<Adt45>(Variant(RET, 0), 1).fld2;
Goto(bb24)
}
bb24 = {
_34.2 = Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld3, 0), 1);
place!(Field::<u16>(Variant(RET, 0), 4)) = Field::<u32>(Variant(RET, 0), 5) as u16;
_52 = _19 | Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1);
_34.3.0 = core::ptr::addr_of_mut!((*_38));
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld2 = _14.fld0;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).2 = _20.1.3.2 & (*_26).0.2;
_43 = [_34.1,_34.1,_20.1.1];
_46 = -_41;
_56 = _15;
_30 = _46 * _1;
SetDiscriminant(Field::<Adt45>(Variant(RET, 0), 1).fld3, 1);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = -_12;
_20.1.2 = (*_11);
place!(Field::<[u128; 5]>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3, 1), 1)) = _16;
place!(Field::<i64>(Variant(RET, 0), 6)) = !_53;
_21.3.2 = !Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).2;
place!(Field::<[usize; 8]>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3, 1), 2)) = [Field::<usize>(Variant(RET, 0), 7),_33.0,_20.0.0,Field::<usize>(Variant(RET, 0), 7),_33.0,_6.0,_20.0.0,_37.0];
_54.fld0 = _21.3.2 != Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).2;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3 = Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0);
place!(Field::<i64>(Variant(RET, 0), 6)) = _13 as i64;
_60 = -_34.0;
_61.0 = Field::<Adt45>(Variant(RET, 0), 1).fld2 as usize;
_24 = Adt49::Variant1 { fld0: _54.fld0 };
Goto(bb25)
}
bb25 = {
_14.fld2.0.0 = core::ptr::addr_of_mut!((*_26).1);
_49 = _54.fld0;
place!(Field::<Adt47>(Variant(RET, 0), 2)) = Adt47 { fld0: _22,fld1: (*_11),fld2: _14.fld0,fld3: Field::<u16>(Variant(RET, 0), 4) };
_55 = !Field::<bool>(Variant(_24, 1), 0);
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = Field::<Adt45>(Variant(RET, 0), 1).fld0;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld0 = _54.fld2 as u64;
_16 = [Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1,_14.fld2.1,_20.1.3.1,(*_26).0.1,_20.1.3.1];
_11 = _8;
place!(Field::<i64>(Variant(RET, 0), 6)) = -_53;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)) = (_20.0.1, (*_26).1, _40);
_16 = _23;
_7 = _54.fld2 | _3;
_20.0 = (_33.0, _21.3.0);
_22 = Field::<Adt47>(Variant(RET, 0), 2).fld0 << _61.0;
_20.1.3.2 = !_54.fld0;
place!(Field::<Adt47>(Variant(RET, 0), 2)) = Adt47 { fld0: _22,fld1: Field::<Adt45>(Variant(RET, 0), 1).fld0,fld2: _14.fld0,fld3: Field::<u16>(Variant(RET, 0), 4) };
_60 = _34.0 + _20.1.0;
_14.fld0 = Field::<Adt47>(Variant(RET, 0), 2).fld2;
_7 = _41 as isize;
_54.fld4 = _30;
_20.1.2 = Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0), 0), 1);
_54.fld2 = _7 + _3;
_34.3.0 = core::ptr::addr_of_mut!(_34.3.1);
_14.fld2.0.1 = !(*_26).1;
place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)) = Field::<Adt45>(Variant(RET, 0), 1).fld3;
_44 = _5;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = _21.2;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = core::ptr::addr_of_mut!((*_26));
_61.0 = Field::<usize>(Variant(RET, 0), 7) | _33.0;
Goto(bb26)
}
bb26 = {
_27 = -_21.0;
_17 = _4;
_33 = _61;
place!(Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 0), 1)) = Field::<Adt47>(Variant(RET, 0), 2).fld1;
_43 = [_21.1,_34.1,_34.1];
_42 = _54.fld2 | _54.fld2;
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 0), 0)) = _26;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = (*_8);
_20.1.1 = _21.1 - _34.1;
_34 = _20.1;
_65 = (_61.0, _2);
_10 = Field::<i64>(Variant(RET, 0), 6) - Field::<Adt45>(Variant(RET, 0), 1).fld2;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld3 = _13 as u16;
_29 = Move(_24);
_20.1.1 = _21.1 * _34.1;
_54.fld1 = [_20.1.3.1,_14.fld2.0.1,(*_38),(*_38),(*_38)];
_41 = _30 + _30;
SetDiscriminant(Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0), 1);
_66 = _27 - _34.0;
_20.1.3.0 = core::ptr::addr_of_mut!((*_26).0.1);
place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)) = Adt41::Variant0 { fld0: _26,fld1: (*_8) };
_51 = _21.1;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3 = Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0);
_20.1.0 = -_21.0;
Goto(bb27)
}
bb27 = {
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0 = _20.1.2;
_19 = !Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1);
_61 = (_33.0,);
_62 = !Field::<u32>(Variant(RET, 0), 5);
_61 = (Field::<usize>(Variant(RET, 0), 7),);
place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)) = Adt41::Variant0 { fld0: Field::<*const ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld3, 0), 0),fld1: (*_8) };
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld0 = Field::<Adt45>(Variant(RET, 0), 1).fld4 as u64;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld0 = _22 & _22;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld2 = _14.fld0;
_15 = [_52,_52,Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1),_52,_52,_52];
SetDiscriminant(Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0), 1);
_20.1.3.0 = core::ptr::addr_of_mut!((*_38));
_58 = _33.0;
_15 = _56;
_21.3.1 = (*_26).0.1;
_20.0 = (_33.0, _65.1);
_68.fld1 = _21.2;
_39 = !_54.fld2;
_10 = (*_38) as i64;
place!(Field::<[i8; 6]>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 1), 3)) = _31;
_21.3.0 = (*_26).0.0;
Goto(bb28)
}
bb28 = {
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld2 = core::ptr::addr_of!(_34.0);
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).1 = _20.1.3.2 as u128;
_10 = Field::<u32>(Variant(RET, 0), 5) as i64;
_60 = _62 as f32;
_21.3 = _20.1.3;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld3 = Field::<u16>(Variant(RET, 0), 4);
_20 = (_65, _34);
_48 = Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1 as i16;
_60 = _25 as f32;
place!(Field::<usize>(Variant(RET, 0), 7)) = _33.0;
_68.fld0 = !Field::<Adt47>(Variant(RET, 0), 2).fld0;
_20.1.3.0 = core::ptr::addr_of_mut!((*_38));
_64 = _49 | Field::<bool>(Variant(_29, 1), 0);
place!(Field::<[u128; 5]>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 1), 1)) = _23;
_8 = _11;
_27 = -_20.1.0;
place!(Field::<[i8; 6]>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 1), 3)) = _56;
_50 = _13;
_21.2 = Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld3, 0), 1);
match Field::<u32>(Variant(RET, 0), 5) {
0 => bb29,
4112798118 => bb31,
_ => bb30
}
}
bb29 = {
_10 = 45_u8 as i64;
RET = Adt48::Variant1 { fld0: _6 };
_1 = 21_i8 as f64;
_6.0 = false as usize;
_5 = [13756808357115278474_u64,3111836943813457431_u64,884266686600938_u64];
_6.0 = Field::<(usize,)>(Variant(RET, 1), 0).0;
_6 = Field::<(usize,)>(Variant(RET, 1), 0);
_12 = (-124007681203997688653136639626519336229_i128) & 130681527395893002374521921964596490868_i128;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 << _3;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = !_6.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 * _6.0;
_7 = 136822575239824294147431549764975611771_u128 as isize;
place!(Field::<(usize,)>(Variant(RET, 1), 0)).0 = _6.0 ^ _6.0;
_1 = 54004_u16 as f64;
Call(_1 = core::intrinsics::transmute(_7), ReturnTo(bb6), UnwindUnreachable())
}
bb30 = {
_3 = _7;
_5 = [5938533539200923675_u64,7750673393665946665_u64,7963953061841603154_u64];
_5 = [10178082661731616645_u64,18377842458714282572_u64,1519376624951116917_u64];
_9 = [_6.0,_6.0,_6.0,_6.0];
_10 = (-6986724093548871253_i64);
_6.0 = 6_usize << _7;
_3 = _7 & _7;
_5 = [11869988477570181077_u64,1438204508430328673_u64,508961339503568006_u64];
_6.0 = 6_usize;
_6 = (4584859237027944011_usize,);
_9 = _4;
_1 = 94391992048630969497752253172617970033_u128 as f64;
_6.0 = !5997638248349805784_usize;
Call(RET = fn4(_7, _7, _2), ReturnTo(bb5), UnwindUnreachable())
}
bb31 = {
_47 = _34.3.1 as isize;
_47 = _42;
_43 = [_20.1.1,_48,_48];
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld3 = Field::<u16>(Variant(RET, 0), 4) | Field::<u16>(Variant(RET, 0), 4);
Goto(bb32)
}
bb32 = {
_32 = Adt55::Variant0 { fld0: _25 };
_74 = _20.0;
place!(Field::<Adt47>(Variant(RET, 0), 2)) = Adt47 { fld0: _22,fld1: Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld3, 0), 1),fld2: _14.fld0,fld3: Field::<u16>(Variant(RET, 0), 4) };
_45 = Field::<Adt45>(Variant(RET, 0), 1).fld4 - Field::<i128>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 2);
_62 = _20.0.0 as u32;
_17 = [_74.0,Field::<usize>(Variant(RET, 0), 7),_58,_65.0];
_65.1 = core::ptr::addr_of_mut!((*_26).0.1);
_21.3.1 = !Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1;
_45 = _12 * _12;
_14.fld2.0.1 = _21.3.1 & Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld2 = !_53;
place!(Field::<u32>(Variant(RET, 0), 5)) = _64 as u32;
_54.fld3 = Adt44::Variant0 { fld0: Field::<Adt45>(Variant(RET, 0), 1).fld3,fld1: _52,fld2: Field::<i128>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 2) };
_48 = _51 >> (*_26).0.1;
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3, 0), 0)) = core::ptr::addr_of!((*_26));
_68.fld0 = !_22;
place!(Field::<[i8; 6]>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 1), 3)) = [Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1),Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1),_52,_52,Field::<i8>(Variant(_54.fld3, 0), 1),Field::<i8>(Variant(_54.fld3, 0), 1)];
_52 = _19 ^ Field::<i8>(Variant(_54.fld3, 0), 1);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld2 = Field::<i128>(Variant(_54.fld3, 0), 2) as i64;
Goto(bb33)
}
bb33 = {
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld0 = core::ptr::addr_of_mut!((*_26));
_76 = core::ptr::addr_of_mut!(_53);
_63 = !_39;
place!(Field::<i128>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 2)) = Field::<i128>(Variant(_54.fld3, 0), 2);
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld3 = Field::<u16>(Variant(RET, 0), 4);
_33.0 = !_74.0;
_25 = Field::<i32>(Variant(_32, 0), 0);
_49 = _21.3.2;
place!(Field::<[i8; 6]>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 1), 3)) = [Field::<i8>(Variant(_54.fld3, 0), 1),Field::<i8>(Variant(_54.fld3, 0), 1),Field::<i8>(Variant(_54.fld3, 0), 1),Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1),Field::<i8>(Variant(_54.fld3, 0), 1),Field::<i8>(Variant(_54.fld3, 0), 1)];
_74 = (_65.0, _20.1.3.0);
_34.0 = -_60;
_77 = _50;
_5 = [Field::<Adt47>(Variant(RET, 0), 2).fld0,_22,_22];
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt41>(Variant(_54.fld3, 0), 0)), 0), 0)) = Field::<*const ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld3, 0), 0);
_14.fld0 = core::ptr::addr_of!(_34.0);
place!(Field::<[u32; 2]>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 1), 0)) = [Field::<u32>(Variant(RET, 0), 5),Field::<u32>(Variant(RET, 0), 5)];
_10 = (*_76) * (*_76);
_22 = _18 as u64;
_58 = Field::<usize>(Variant(RET, 0), 7) + _6.0;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).2 = Field::<bool>(Variant(_29, 1), 0);
_33.0 = _61.0 - _65.0;
_63 = _7;
_68.fld2 = core::ptr::addr_of!(_20.1.0);
_5 = [_68.fld0,_68.fld0,_22];
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).2 = _34.3.2 <= _64;
_6.0 = _33.0 << Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).1;
_34.2 = _21.2;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld0 = _68.fld0;
Goto(bb34)
}
bb34 = {
_8 = _11;
_20.1.2 = core::ptr::addr_of_mut!((*_26));
_59 = [_52,Field::<i8>(Variant(_54.fld3, 0), 1),_52,_52,_52,_52];
place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)) = Adt41::Variant0 { fld0: _26,fld1: Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt41>(Variant(_54.fld3, 0), 0), 0), 1) };
place!(Field::<u32>(Variant(RET, 0), 5)) = _42 as u32;
_35 = _77;
place!(Field::<Adt47>(Variant(RET, 0), 2)) = Adt47 { fld0: _68.fld0,fld1: _68.fld1,fld2: _68.fld2,fld3: Field::<u16>(Variant(RET, 0), 4) };
place!(Field::<Adt46>(Variant(RET, 0), 0)) = Adt46::Variant0 { fld0: Move(Field::<Adt45>(Variant(RET, 0), 1)) };
_21.3 = (_65.1, (*_38), _55);
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld2 = !Field::<i64>(Variant(RET, 0), 6);
place!(Field::<Adt45>(Variant(RET, 0), 1)) = Adt45 { fld0: Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld0,fld1: Move(Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld1),fld2: _53,fld3: Field::<Adt41>(Variant(_54.fld3, 0), 0),fld4: Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld4 };
_68.fld0 = _22 + _22;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).1 = (*_38) & (*_38);
_82 = _18;
_68.fld2 = Field::<Adt47>(Variant(RET, 0), 2).fld2;
_22 = Field::<Adt47>(Variant(RET, 0), 2).fld0 >> (*_26).0.1;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)).1 = _50 as u128;
Goto(bb35)
}
bb35 = {
_67 = _43;
_34.1 = _48 - _48;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld4 = !Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld4;
_54.fld4 = -_41;
place!(Field::<Adt47>(Variant(RET, 0), 2)) = Adt47 { fld0: _22,fld1: Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld0,fld2: _68.fld2,fld3: Field::<u16>(Variant(RET, 0), 4) };
_16 = [(*_26).0.1,(*_26).0.1,_14.fld2.0.1,_21.3.1,_14.fld2.0.1];
place!(Field::<Adt45>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 0), 0)).fld3 = Field::<Adt41>(Variant(_54.fld3, 0), 0);
place!(Field::<Adt45>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 0), 0)) = Adt45 { fld0: Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(Field::<Adt41>(Variant(_54.fld3, 0), 0), 0), 1),fld1: Move(_54.fld3),fld2: (*_76),fld3: Field::<Adt41>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 0),fld4: _45 };
place!(Field::<i128>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 2)) = _45;
_58 = _6.0;
SetDiscriminant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0);
_14.fld2.0.2 = !Field::<bool>(Variant(_29, 1), 0);
_3 = -_42;
place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1 = Move(Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld1);
_85 = Field::<i8>(Variant(Field::<Adt45>(Variant(RET, 0), 1).fld1, 0), 1) as f32;
place!(Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3)) = (_65.1, _21.3.1, _34.3.2);
_74.1 = _65.1;
place!(Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt41>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 0)), 0), 1)) = core::ptr::addr_of_mut!(_14.fld2);
_20.1.3.0 = core::ptr::addr_of_mut!((*_38));
_20.0 = (_6.0, _20.1.3.0);
_75 = _30 as i64;
place!(Field::<i128>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld1, 0), 2)) = Field::<Adt45>(Variant(RET, 0), 1).fld4;
Goto(bb36)
}
bb36 = {
_54.fld0 = _14.fld2.0.1 >= (*_38);
_6 = _33;
place!(Field::<Adt47>(Variant(RET, 0), 2)).fld1 = core::ptr::addr_of_mut!((*_26));
_65.1 = Field::<(*mut u128, u128, bool)>(Variant(RET, 0), 3).0;
place!(Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(place!(Field::<Adt45>(Variant(RET, 0), 1)).fld3, 0), 1)) = Field::<Adt45>(Variant(RET, 0), 1).fld0;
_68 = Adt47 { fld0: _22,fld1: Field::<Adt45>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0).fld0,fld2: _14.fld0,fld3: Field::<Adt47>(Variant(RET, 0), 2).fld3 };
_84 = Field::<i32>(Variant(_32, 0), 0) << _58;
_20.0.1 = core::ptr::addr_of_mut!(_14.fld2.0.1);
_43 = [_34.1,_48,_34.1];
RET = Adt48::Variant1 { fld0: _6 };
_20.1.3 = (_38, _21.3.1, _64);
_76 = core::ptr::addr_of_mut!(_75);
_20 = (_65, _21);
_11 = core::ptr::addr_of!(_34.2);
_74.1 = _21.3.0;
_80 = _13;
_46 = _30;
_65.1 = _21.3.0;
_34.3.1 = _14.fld2.0.1;
_49 = !_34.3.2;
_21.0 = _27;
_9 = _17;
_49 = _64;
_34.3.0 = core::ptr::addr_of_mut!((*_26).1);
_29 = Adt49::Variant1 { fld0: _34.3.2 };
_84 = Field::<i32>(Variant(_32, 0), 0);
_81.fld3 = Adt41::Variant0 { fld0: _26,fld1: _21.2 };
_87 = !_54.fld0;
_68.fld2 = _14.fld0;
Goto(bb37)
}
bb37 = {
Call(_91 = dump_var(3_usize, 15_usize, Move(_15), 5_usize, Move(_5), 44_usize, Move(_44), 63_usize, Move(_63)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_91 = dump_var(3_usize, 56_usize, Move(_56), 47_usize, Move(_47), 49_usize, Move(_49), 87_usize, Move(_87)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_91 = dump_var(3_usize, 12_usize, Move(_12), 50_usize, Move(_50), 37_usize, Move(_37), 77_usize, Move(_77)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_91 = dump_var(3_usize, 48_usize, Move(_48), 3_usize, Move(_3), 80_usize, Move(_80), 9_usize, Move(_9)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_91 = dump_var(3_usize, 45_usize, Move(_45), 58_usize, Move(_58), 31_usize, Move(_31), 43_usize, Move(_43)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Call(_91 = dump_var(3_usize, 42_usize, Move(_42), 16_usize, Move(_16), 4_usize, Move(_4), 59_usize, Move(_59)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: isize,mut _2: isize,mut _3: *mut u128) -> Adt48 {
mir! {
type RET = Adt48;
let _4: Adt56;
let _5: Adt54;
let _6: f32;
let _7: [i16; 3];
let _8: [i8; 6];
let _9: i64;
let _10: (*mut u128, u128, bool);
let _11: [usize; 8];
let _12: bool;
let _13: (usize,);
let _14: u16;
let _15: isize;
let _16: *const u128;
let _17: *const ((*mut u128, u128, bool), u128);
let _18: [usize; 4];
let _19: char;
let _20: [i16; 3];
let _21: *mut u128;
let _22: [u64; 3];
let _23: u64;
let _24: i8;
let _25: bool;
let _26: *mut u128;
let _27: ();
let _28: ();
{
_2 = false as isize;
_2 = _1 & _1;
_1 = !_2;
_2 = 6401_i16 as isize;
_2 = _1 << _1;
_1 = _2;
_2 = _1 + _1;
_2 = _1 & _1;
_2 = '\u{353ed}' as isize;
_1 = _2;
_1 = -_2;
_2 = _1 | _1;
_2 = _1 + _1;
_1 = !_2;
_2 = !_1;
_2 = _1;
_1 = '\u{1ba2}' as isize;
_5.fld0 = 312673814582348358642551062089017592501_u128 as i64;
_5.fld3 = (-63_i8);
Goto(bb1)
}
bb1 = {
_5.fld1.1 = 236102121932027088607891892133097474271_u128;
_5.fld1.1 = !228759770243272481090302262004329638064_u128;
_5.fld0 = 6262866132356772027_i64;
_5.fld1 = (_3, 63550565501060096682120626116098309690_u128, true);
_5.fld1.2 = _5.fld1.1 > _5.fld1.1;
_5.fld2 = -204260561_i32;
_2 = !_1;
_5.fld0 = (-4175404920386084033_i64);
_2 = -_1;
_5.fld1 = (_3, 74504573104313555570783823582884798091_u128, true);
_6 = 430391397_u32 as f32;
_6 = 69_u8 as f32;
_5.fld2 = -(-1637389887_i32);
_6 = 12719_i16 as f32;
_3 = core::ptr::addr_of_mut!(_5.fld1.1);
_8 = [_5.fld3,_5.fld3,_5.fld3,_5.fld3,_5.fld3,_5.fld3];
_10 = (_3, (*_3), _5.fld1.2);
_5.fld0 = -8534494607089392398_i64;
Call(_10 = fn5(_5.fld1.0, _5.fld1.2, _5.fld1.1, _5.fld1.2, _3, _5.fld1.1, (*_3), (*_3), _5.fld1.2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = !_2;
_6 = (*_3) as f32;
_10.2 = !_5.fld1.2;
_5.fld2 = -1674647013_i32;
_7 = [(-7148_i16),(-31892_i16),(-17341_i16)];
_3 = core::ptr::addr_of_mut!((*_3));
_5.fld1 = (_3, _10.1, _10.2);
_12 = !_5.fld1.2;
_11 = [2_usize,1_usize,2_usize,1274965660779187031_usize,3_usize,15469696319105930382_usize,1_usize,4_usize];
_12 = _5.fld1.2 > _10.2;
_10.1 = !_5.fld1.1;
_10.1 = _5.fld1.1;
_12 = _6 > _6;
_9 = _5.fld3 as i64;
_10.0 = _5.fld1.0;
_10.0 = core::ptr::addr_of_mut!((*_3));
_6 = _1 as f32;
_10.1 = (*_3) & (*_3);
_5.fld1.0 = core::ptr::addr_of_mut!((*_3));
_13 = (7_usize,);
Goto(bb3)
}
bb3 = {
_3 = core::ptr::addr_of_mut!(_5.fld1.1);
_1 = !_2;
Call(_10.2 = fn6(_5.fld1, _1, _1, _5.fld3, _5.fld1, _12, _5.fld1.2, _5.fld1.2, _5.fld1.1, _5.fld1, _12, _10.0, _5.fld0, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = [(-2608_i16),23305_i16,12543_i16];
_9 = _5.fld0;
_2 = _5.fld1.1 as isize;
_10.0 = _3;
_8 = [_5.fld3,_5.fld3,_5.fld3,_5.fld3,_5.fld3,_5.fld3];
_7 = [(-11291_i16),(-17347_i16),9616_i16];
_14 = 58195_u16 >> _5.fld3;
_7 = [2931_i16,10953_i16,(-7928_i16)];
_10.0 = core::ptr::addr_of_mut!(_10.1);
_5.fld0 = _9 + _9;
_1 = _2;
_14 = !22625_u16;
_5.fld1 = (_3, _10.1, _12);
_6 = _14 as f32;
RET = Adt48::Variant1 { fld0: _13 };
_5.fld1.2 = !_10.2;
match _13.0 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
7 => bb12,
_ => bb11
}
}
bb5 = {
_3 = core::ptr::addr_of_mut!(_5.fld1.1);
_1 = !_2;
Call(_10.2 = fn6(_5.fld1, _1, _1, _5.fld3, _5.fld1, _12, _5.fld1.2, _5.fld1.2, _5.fld1.1, _5.fld1, _12, _10.0, _5.fld0, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_1 = !_2;
_6 = (*_3) as f32;
_10.2 = !_5.fld1.2;
_5.fld2 = -1674647013_i32;
_7 = [(-7148_i16),(-31892_i16),(-17341_i16)];
_3 = core::ptr::addr_of_mut!((*_3));
_5.fld1 = (_3, _10.1, _10.2);
_12 = !_5.fld1.2;
_11 = [2_usize,1_usize,2_usize,1274965660779187031_usize,3_usize,15469696319105930382_usize,1_usize,4_usize];
_12 = _5.fld1.2 > _10.2;
_10.1 = !_5.fld1.1;
_10.1 = _5.fld1.1;
_12 = _6 > _6;
_9 = _5.fld3 as i64;
_10.0 = _5.fld1.0;
_10.0 = core::ptr::addr_of_mut!((*_3));
_6 = _1 as f32;
_10.1 = (*_3) & (*_3);
_5.fld1.0 = core::ptr::addr_of_mut!((*_3));
_13 = (7_usize,);
Goto(bb3)
}
bb7 = {
_5.fld1.1 = 236102121932027088607891892133097474271_u128;
_5.fld1.1 = !228759770243272481090302262004329638064_u128;
_5.fld0 = 6262866132356772027_i64;
_5.fld1 = (_3, 63550565501060096682120626116098309690_u128, true);
_5.fld1.2 = _5.fld1.1 > _5.fld1.1;
_5.fld2 = -204260561_i32;
_2 = !_1;
_5.fld0 = (-4175404920386084033_i64);
_2 = -_1;
_5.fld1 = (_3, 74504573104313555570783823582884798091_u128, true);
_6 = 430391397_u32 as f32;
_6 = 69_u8 as f32;
_5.fld2 = -(-1637389887_i32);
_6 = 12719_i16 as f32;
_3 = core::ptr::addr_of_mut!(_5.fld1.1);
_8 = [_5.fld3,_5.fld3,_5.fld3,_5.fld3,_5.fld3,_5.fld3];
_10 = (_3, (*_3), _5.fld1.2);
_5.fld0 = -8534494607089392398_i64;
Call(_10 = fn5(_5.fld1.0, _5.fld1.2, _5.fld1.1, _5.fld1.2, _3, _5.fld1.1, (*_3), (*_3), _5.fld1.2), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_5.fld1 = (_3, _10.1, _12);
_5.fld1 = (_3, _10.1, _10.2);
_13 = (Field::<(usize,)>(Variant(RET, 1), 0).0,);
_3 = _5.fld1.0;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = _13;
_1 = _2 ^ _2;
_13.0 = Field::<(usize,)>(Variant(RET, 1), 0).0 >> _5.fld3;
_5.fld1.1 = _10.1;
_13.0 = Field::<(usize,)>(Variant(RET, 1), 0).0 - Field::<(usize,)>(Variant(RET, 1), 0).0;
_15 = _1 + _1;
_5.fld3 = _1 as i8;
match Field::<(usize,)>(Variant(RET, 1), 0).0 {
0 => bb4,
1 => bb2,
7 => bb13,
_ => bb8
}
}
bb13 = {
_2 = _15;
_10 = _5.fld1;
SetDiscriminant(RET, 2);
_7 = [22879_i16,23945_i16,21172_i16];
_5.fld1.2 = _15 < _1;
place!(Field::<Adt43>(Variant(RET, 2), 0)).fld0 = core::ptr::addr_of_mut!(_6);
_7 = [(-27482_i16),(-26963_i16),(-11744_i16)];
_19 = '\u{fdcfd}';
_16 = core::ptr::addr_of!(_10.1);
_10.0 = _5.fld1.0;
_13 = (7_usize,);
_5.fld0 = !_9;
_1 = (*_16) as isize;
_5.fld1.1 = (*_16);
RET = Adt48::Variant1 { fld0: _13 };
_10.0 = _5.fld1.0;
Goto(bb14)
}
bb14 = {
_5.fld3 = (-49_i8) | 1_i8;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = (_13.0,);
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = (_13.0,);
_16 = core::ptr::addr_of!((*_16));
_2 = _15 ^ _15;
place!(Field::<(usize,)>(Variant(RET, 1), 0)) = _13;
_21 = _3;
_15 = !_2;
_18 = [_13.0,Field::<(usize,)>(Variant(RET, 1), 0).0,_13.0,_13.0];
_5.fld2 = (-1373795175_i32) * 869025969_i32;
_3 = _10.0;
_23 = !8575999077064504327_u64;
_15 = -_1;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(4_usize, 1_usize, Move(_1), 19_usize, Move(_19), 12_usize, Move(_12), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(4_usize, 18_usize, Move(_18), 13_usize, Move(_13), 28_usize, _28, 28_usize, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *mut u128,mut _2: bool,mut _3: u128,mut _4: bool,mut _5: *mut u128,mut _6: u128,mut _7: u128,mut _8: u128,mut _9: bool) -> (*mut u128, u128, bool) {
mir! {
type RET = (*mut u128, u128, bool);
let _10: isize;
let _11: Adt51;
let _12: ();
let _13: ();
{
RET = (_1, _8, _4);
_7 = 391908657_i32 as u128;
RET.2 = _4;
RET.1 = 1072545113_i32 as u128;
_10 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_3 = RET.1 << _10;
RET.2 = _4 == _4;
_5 = RET.0;
_4 = !RET.2;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(5_usize, 10_usize, Move(_10), 3_usize, Move(_3), 6_usize, Move(_6), 7_usize, Move(_7)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: (*mut u128, u128, bool),mut _2: isize,mut _3: isize,mut _4: i8,mut _5: (*mut u128, u128, bool),mut _6: bool,mut _7: bool,mut _8: bool,mut _9: u128,mut _10: (*mut u128, u128, bool),mut _11: bool,mut _12: *mut u128,mut _13: i64,mut _14: [i16; 3]) -> bool {
mir! {
type RET = bool;
let _15: [u32; 2];
let _16: f32;
let _17: i128;
let _18: Adt48;
let _19: [usize; 4];
let _20: i128;
let _21: ();
let _22: ();
{
RET = _10.1 >= _10.1;
_1.0 = _5.0;
_8 = _11;
_10.0 = _5.0;
_6 = _11;
_15 = [421508809_u32,169973682_u32];
RET = _6 != _10.2;
_3 = _2 & _2;
RET = _1.2 | _6;
_11 = !RET;
RET = !_7;
_10.2 = !_11;
_16 = 3191760577_u32 as f32;
_14 = [(-8347_i16),(-20119_i16),(-8861_i16)];
_15 = [2683624002_u32,3654516037_u32];
Goto(bb1)
}
bb1 = {
Call(_21 = dump_var(6_usize, 8_usize, Move(_8), 11_usize, Move(_11), 7_usize, Move(_7), 13_usize, Move(_13)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_21 = dump_var(6_usize, 4_usize, Move(_4), 22_usize, _22, 22_usize, _22, 22_usize, _22), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *mut u128,mut _2: [u64; 3],mut _3: *mut u128,mut _4: *mut u128,mut _5: *mut u128,mut _6: *mut u128,mut _7: *mut u128,mut _8: [usize; 4],mut _9: *mut u128,mut _10: *mut u128,mut _11: [i8; 6],mut _12: *mut u128) -> (usize,) {
mir! {
type RET = (usize,);
let _13: [u32; 2];
let _14: f32;
let _15: *mut ((*mut u128, u128, bool), u128);
let _16: [u64; 3];
let _17: f64;
let _18: isize;
let _19: isize;
let _20: bool;
let _21: [usize; 8];
let _22: [u32; 2];
let _23: Adt45;
let _24: i32;
let _25: [i8; 6];
let _26: u128;
let _27: *const ((*mut u128, u128, bool), u128);
let _28: u128;
let _29: f64;
let _30: isize;
let _31: [i8; 6];
let _32: Adt45;
let _33: [u128; 5];
let _34: f32;
let _35: bool;
let _36: [i8; 6];
let _37: Adt55;
let _38: Adt43;
let _39: [i8; 6];
let _40: bool;
let _41: f64;
let _42: [i8; 6];
let _43: u64;
let _44: [i16; 3];
let _45: *const f32;
let _46: f32;
let _47: ();
let _48: ();
{
_9 = _1;
_12 = _5;
_7 = _4;
_4 = _3;
RET.0 = 2547575422822735766_i64 as usize;
_2 = [10576975590819690517_u64,8860015811862826124_u64,6524150780523963938_u64];
_5 = _4;
_5 = _9;
_13 = [1135439786_u32,2676888542_u32];
_1 = _6;
_10 = _1;
RET.0 = 4645844869771052717_usize;
_16 = [1488334001369414432_u64,14597694186878958989_u64,11014924253037453482_u64];
_10 = _6;
_8 = [RET.0,RET.0,RET.0,RET.0];
_18 = '\u{10d016}' as isize;
RET.0 = 18427248898625471020_usize;
Goto(bb1)
}
bb1 = {
_10 = _9;
_7 = _4;
_9 = _6;
_20 = !true;
_14 = 56_u8 as f32;
_13 = [3151271472_u32,2839174967_u32];
_1 = _12;
_6 = _1;
_10 = _6;
_6 = _12;
RET = (4_usize,);
_7 = _5;
_9 = _5;
RET = (1_usize,);
_6 = _7;
_7 = _3;
_9 = _4;
_7 = _3;
_9 = _10;
_5 = _3;
_12 = _3;
Goto(bb2)
}
bb2 = {
_23.fld4 = 136053839670734314488907721420057884676_i128;
_19 = -_18;
_5 = _10;
_19 = _18;
_1 = _4;
_2 = [14714637788010384421_u64,10268070158626543590_u64,7980663872875313942_u64];
_2 = _16;
_18 = _20 as isize;
_6 = core::ptr::addr_of_mut!(_26);
_8 = [RET.0,RET.0,RET.0,RET.0];
_17 = (-3151110864969336005_i64) as f64;
_1 = _10;
_21 = [RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0];
_18 = -_19;
RET.0 = !6_usize;
_23.fld4 = (-102861583340746495557510342454414758204_i128);
_21 = [RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0];
_23.fld2 = 8803631383852457721_i64;
_7 = core::ptr::addr_of_mut!(_28);
_11 = [84_i8,(-43_i8),9_i8,(-74_i8),(-39_i8),76_i8];
RET.0 = !3_usize;
Call(_32.fld2 = fn8(_9, _1, _4, _5, _5, _9, _1, _16, _10, _10, _17, _10, _10, _12, _4, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_9 = core::ptr::addr_of_mut!((*_6));
_17 = _14 as f64;
_33 = [304064959036434241184153527985329301443_u128,14005349570124056603192983526943397302_u128,165788662265211781988137694793752231076_u128,62507625935155582256432638513000728445_u128,9373329390187724818434399716176546168_u128];
_32.fld2 = _23.fld2 | _23.fld2;
_11 = [22_i8,(-67_i8),95_i8,(-46_i8),(-125_i8),(-39_i8)];
_34 = _18 as f32;
_4 = _12;
_33 = [245116424535112135772539757462412452173_u128,88647886010514719442589591701749042249_u128,232309350860721445377747279047976309428_u128,57670466640624822984990271817955025687_u128,301355428752715649195942626332841727583_u128];
_24 = (-2118454722_i32);
_10 = _5;
_7 = _5;
_36 = _11;
_25 = [(-114_i8),(-18_i8),49_i8,107_i8,(-38_i8),(-107_i8)];
_16 = [16488367654799167026_u64,16718531989518177720_u64,4143399591247527192_u64];
_32.fld4 = 150_u8 as i128;
match _24 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607429649756734 => bb9,
_ => bb8
}
}
bb4 = {
_23.fld4 = 136053839670734314488907721420057884676_i128;
_19 = -_18;
_5 = _10;
_19 = _18;
_1 = _4;
_2 = [14714637788010384421_u64,10268070158626543590_u64,7980663872875313942_u64];
_2 = _16;
_18 = _20 as isize;
_6 = core::ptr::addr_of_mut!(_26);
_8 = [RET.0,RET.0,RET.0,RET.0];
_17 = (-3151110864969336005_i64) as f64;
_1 = _10;
_21 = [RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0];
_18 = -_19;
RET.0 = !6_usize;
_23.fld4 = (-102861583340746495557510342454414758204_i128);
_21 = [RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0];
_23.fld2 = 8803631383852457721_i64;
_7 = core::ptr::addr_of_mut!(_28);
_11 = [84_i8,(-43_i8),9_i8,(-74_i8),(-39_i8),76_i8];
RET.0 = !3_usize;
Call(_32.fld2 = fn8(_9, _1, _4, _5, _5, _9, _1, _16, _10, _10, _17, _10, _10, _12, _4, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_10 = _9;
_7 = _4;
_9 = _6;
_20 = !true;
_14 = 56_u8 as f32;
_13 = [3151271472_u32,2839174967_u32];
_1 = _12;
_6 = _1;
_10 = _6;
_6 = _12;
RET = (4_usize,);
_7 = _5;
_9 = _5;
RET = (1_usize,);
_6 = _7;
_7 = _3;
_9 = _4;
_7 = _3;
_9 = _10;
_5 = _3;
_12 = _3;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_19 = 2067990055415341546_u64 as isize;
_20 = false;
_30 = !_19;
_22 = [4294729625_u32,872571697_u32];
_13 = [4074132837_u32,1937851355_u32];
RET.0 = _17 as usize;
_32.fld3 = Adt41::Variant1 { fld0: _22,fld1: _33,fld2: _21,fld3: _36 };
_18 = _30;
_38.fld1 = RET.0 - RET.0;
_29 = -_17;
_3 = core::ptr::addr_of_mut!((*_6));
_23.fld2 = _32.fld2;
_9 = _10;
_38.fld1 = _24 as usize;
_8 = [RET.0,RET.0,RET.0,RET.0];
_23.fld3 = _32.fld3;
_8 = [_38.fld1,RET.0,_38.fld1,_38.fld1];
_18 = _19 + _19;
Call(_32.fld0 = fn10(Field::<[usize; 8]>(Variant(_32.fld3, 1), 2), _36, _5, _7, _1, _25, _23.fld3, _10), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_31 = _36;
_4 = _5;
_36 = [100_i8,82_i8,17_i8,18_i8,98_i8,(-38_i8)];
_39 = [63_i8,80_i8,(-2_i8),(-6_i8),(-23_i8),(-55_i8)];
_23.fld2 = _32.fld2;
_32.fld3 = _23.fld3;
_10 = core::ptr::addr_of_mut!((*_3));
_32.fld4 = _23.fld4 * _23.fld4;
_38.fld0 = core::ptr::addr_of_mut!(_14);
_24 = RET.0 as i32;
_7 = _1;
_15 = _32.fld0;
_32.fld3 = Adt41::Variant1 { fld0: _22,fld1: _33,fld2: _21,fld3: _25 };
_41 = _17;
_28 = 247153231449632233145976064950605473464_u128 + 290302906170094875200049656236035901654_u128;
place!(Field::<[i8; 6]>(Variant(_23.fld3, 1), 3)) = [69_i8,4_i8,103_i8,(-10_i8),(-23_i8),87_i8];
RET = (_38.fld1,);
_30 = _18;
place!(Field::<[u32; 2]>(Variant(_32.fld3, 1), 0)) = Field::<[u32; 2]>(Variant(_23.fld3, 1), 0);
_14 = 29_u8 as f32;
_23.fld3 = _32.fld3;
_25 = [(-45_i8),(-96_i8),11_i8,(-73_i8),(-39_i8),(-8_i8)];
SetDiscriminant(_23.fld3, 0);
_32.fld2 = -_23.fld2;
_35 = _20;
match _23.fld4 {
0 => bb4,
1 => bb6,
2 => bb11,
3 => bb12,
4 => bb13,
237420783580191967905864264977353453252 => bb15,
_ => bb14
}
}
bb11 = {
_23.fld4 = 136053839670734314488907721420057884676_i128;
_19 = -_18;
_5 = _10;
_19 = _18;
_1 = _4;
_2 = [14714637788010384421_u64,10268070158626543590_u64,7980663872875313942_u64];
_2 = _16;
_18 = _20 as isize;
_6 = core::ptr::addr_of_mut!(_26);
_8 = [RET.0,RET.0,RET.0,RET.0];
_17 = (-3151110864969336005_i64) as f64;
_1 = _10;
_21 = [RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0];
_18 = -_19;
RET.0 = !6_usize;
_23.fld4 = (-102861583340746495557510342454414758204_i128);
_21 = [RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0,RET.0];
_23.fld2 = 8803631383852457721_i64;
_7 = core::ptr::addr_of_mut!(_28);
_11 = [84_i8,(-43_i8),9_i8,(-74_i8),(-39_i8),76_i8];
RET.0 = !3_usize;
Call(_32.fld2 = fn8(_9, _1, _4, _5, _5, _9, _1, _16, _10, _10, _17, _10, _10, _12, _4, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_10 = _9;
_7 = _4;
_9 = _6;
_20 = !true;
_14 = 56_u8 as f32;
_13 = [3151271472_u32,2839174967_u32];
_1 = _12;
_6 = _1;
_10 = _6;
_6 = _12;
RET = (4_usize,);
_7 = _5;
_9 = _5;
RET = (1_usize,);
_6 = _7;
_7 = _3;
_9 = _4;
_7 = _3;
_9 = _10;
_5 = _3;
_12 = _3;
Goto(bb2)
}
bb15 = {
_14 = -_34;
_19 = _24 as isize;
_5 = _4;
_10 = _9;
_6 = _10;
_3 = _10;
RET.0 = _38.fld1;
_23.fld2 = !_32.fld2;
_38.fld0 = core::ptr::addr_of_mut!(_34);
_35 = !_20;
RET.0 = _38.fld1 + _38.fld1;
Goto(bb16)
}
bb16 = {
Call(_47 = dump_var(7_usize, 8_usize, Move(_8), 31_usize, Move(_31), 25_usize, Move(_25), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(7_usize, 28_usize, Move(_28), 16_usize, Move(_16), 20_usize, Move(_20), 30_usize, Move(_30)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(7_usize, 24_usize, Move(_24), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: *mut u128,mut _2: *mut u128,mut _3: *mut u128,mut _4: *mut u128,mut _5: *mut u128,mut _6: *mut u128,mut _7: *mut u128,mut _8: [u64; 3],mut _9: *mut u128,mut _10: *mut u128,mut _11: f64,mut _12: *mut u128,mut _13: *mut u128,mut _14: *mut u128,mut _15: *mut u128,mut _16: f32) -> i64 {
mir! {
type RET = i64;
let _17: bool;
let _18: isize;
let _19: i64;
let _20: (usize,);
let _21: u16;
let _22: (usize,);
let _23: i32;
let _24: [usize; 4];
let _25: Adt52;
let _26: isize;
let _27: char;
let _28: [usize; 4];
let _29: [usize; 4];
let _30: [i16; 3];
let _31: i16;
let _32: ();
let _33: ();
{
_8 = [9133521960051984934_u64,648140676910558838_u64,54011766560329157_u64];
RET = 1791081321222360154_i64;
Call(_1 = fn9(_3, _15, _7, _10, _9, _5, _15), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _2;
_13 = _5;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
1791081321222360154 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_10 = _5;
_5 = _4;
RET = -(-1877849645209305345_i64);
_17 = _11 != _11;
_5 = _4;
_13 = _9;
_19 = RET;
_4 = _1;
_17 = false;
_11 = (-112617840538313454523059596411838549845_i128) as f64;
_16 = 2037380412_i32 as f32;
_17 = !true;
_18 = -(-10_isize);
_7 = _2;
_16 = 3623_u16 as f32;
_13 = _1;
_3 = _7;
_16 = (-2078872904_i32) as f32;
_16 = RET as f32;
_13 = _9;
Goto(bb11)
}
bb11 = {
_20 = (6_usize,);
_20 = (10879870008949950557_usize,);
_13 = _7;
_21 = 62979_u16 ^ 53546_u16;
_19 = 3923637286_u32 as i64;
_12 = _15;
_9 = _12;
_21 = 36776_u16 >> _18;
_3 = _1;
_16 = 75_i8 as f32;
_20 = (6237439243702903048_usize,);
_14 = _1;
_7 = _13;
_17 = true | true;
_25.fld4 = _11;
_7 = _15;
_22 = (_20.0,);
_6 = _12;
_25.fld2 = 51_i8 as isize;
_20 = _22;
_23 = 986373909_i32;
_25.fld1 = [35578092042936392908115471936254956722_u128,175276453311214756798801394262918093328_u128,61561889129998042926392582136768719198_u128,301389100003606535436457253727484539656_u128,25389417348417573787111228648174294546_u128];
_22 = (_20.0,);
_20.0 = !_22.0;
match _23 {
0 => bb4,
986373909 => bb12,
_ => bb2
}
}
bb12 = {
_1 = _2;
_5 = _3;
_24 = [_22.0,_22.0,_20.0,_22.0];
_8 = [6677955946129033961_u64,12598118760778150315_u64,14127074730529141309_u64];
_28 = [_22.0,_22.0,_22.0,_20.0];
_17 = RET > _19;
_10 = _3;
_24 = [_22.0,_22.0,_22.0,_20.0];
_25.fld0 = _17;
_26 = _18 - _18;
_27 = '\u{102c29}';
_6 = _3;
_15 = _7;
_3 = _12;
_28 = _24;
_6 = _3;
_28 = [_20.0,_20.0,_22.0,_20.0];
_29 = _24;
_30 = [4282_i16,22322_i16,(-915_i16)];
_7 = _12;
_15 = _4;
_19 = RET;
_25.fld1 = [293268707064053867340469599040623826833_u128,38167696297881562089564145463846051468_u128,315344698808869733230653333040675199264_u128,151323455944266676501743582798983991030_u128,154432069768520194385697172788839803361_u128];
_25.fld0 = _17;
match _23 {
0 => bb6,
1 => bb5,
2 => bb3,
3 => bb11,
4 => bb13,
986373909 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_22 = (_20.0,);
_4 = _5;
_21 = 21449_u16;
_22.0 = _20.0 + _20.0;
_2 = _10;
_20 = _22;
_24 = [_20.0,_22.0,_20.0,_20.0];
_25.fld0 = _17;
_18 = _16 as isize;
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(8_usize, 26_usize, Move(_26), 23_usize, Move(_23), 20_usize, Move(_20), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(8_usize, 17_usize, Move(_17), 27_usize, Move(_27), 29_usize, Move(_29), 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *mut u128,mut _2: *mut u128,mut _3: *mut u128,mut _4: *mut u128,mut _5: *mut u128,mut _6: *mut u128,mut _7: *mut u128) -> *mut u128 {
mir! {
type RET = *mut u128;
let _8: isize;
let _9: isize;
let _10: [i8; 6];
let _11: Adt46;
let _12: u16;
let _13: [u32; 2];
let _14: u64;
let _15: char;
let _16: f32;
let _17: ();
let _18: ();
{
_2 = _6;
Goto(bb1)
}
bb1 = {
_7 = _5;
RET = _4;
RET = _4;
_7 = _2;
RET = _2;
_2 = _3;
_3 = _1;
_3 = _1;
_3 = RET;
_1 = _7;
RET = _7;
_5 = _4;
RET = _3;
_8 = 9223372036854775807_isize;
_5 = _7;
RET = _1;
_3 = _7;
_4 = RET;
_3 = _6;
RET = _5;
_7 = _6;
_6 = RET;
_2 = RET;
match _8 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_10 = [(-18_i8),(-20_i8),117_i8,96_i8,(-95_i8),74_i8];
_8 = (-12318_i16) as isize;
_7 = _1;
_8 = (-9223372036854775808_isize);
_9 = _8 * _8;
RET = _7;
_2 = _6;
_2 = _5;
_2 = _3;
_5 = _1;
RET = _4;
_9 = _8 + _8;
_7 = _4;
_1 = _7;
_2 = _3;
RET = _1;
_6 = _5;
_10 = [59_i8,116_i8,(-105_i8),(-59_i8),101_i8,(-128_i8)];
_2 = _5;
_9 = _8;
_5 = _6;
RET = _5;
RET = _7;
match _9 {
0 => bb4,
1 => bb2,
2 => bb10,
3 => bb11,
4 => bb12,
340282366920938463454151235394913435648 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
_7 = _5;
RET = _4;
RET = _4;
_7 = _2;
RET = _2;
_2 = _3;
_3 = _1;
_3 = _1;
_3 = RET;
_1 = _7;
RET = _7;
_5 = _4;
RET = _3;
_8 = 9223372036854775807_isize;
_5 = _7;
RET = _1;
_3 = _7;
_4 = RET;
_3 = _6;
RET = _5;
_7 = _6;
_6 = RET;
_2 = RET;
match _8 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_8 = -_9;
_6 = _4;
_8 = _9 ^ _9;
_13 = [3828965033_u32,211231999_u32];
_8 = _9 * _9;
_9 = _8 * _8;
_2 = _7;
_14 = 12521113931559425844_u64 >> _8;
_10 = [97_i8,(-89_i8),23_i8,(-55_i8),(-60_i8),(-91_i8)];
_8 = _9;
_6 = _1;
_8 = !_9;
_15 = '\u{a31d}';
_1 = _5;
RET = _3;
RET = _3;
_12 = _14 as u16;
_7 = RET;
_13 = [2106249687_u32,1012882133_u32];
_8 = _9 & _9;
_6 = _2;
_5 = RET;
_16 = 5561_i16 as f32;
Goto(bb15)
}
bb15 = {
Call(_17 = dump_var(9_usize, 12_usize, Move(_12), 13_usize, Move(_13), 10_usize, Move(_10), 18_usize, _18), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [usize; 8],mut _2: [i8; 6],mut _3: *mut u128,mut _4: *mut u128,mut _5: *mut u128,mut _6: [i8; 6],mut _7: Adt41,mut _8: *mut u128) -> *mut ((*mut u128, u128, bool), u128) {
mir! {
type RET = *mut ((*mut u128, u128, bool), u128);
let _9: [usize; 4];
let _10: f64;
let _11: f32;
let _12: Adt43;
let _13: Adt51;
let _14: bool;
let _15: char;
let _16: bool;
let _17: isize;
let _18: isize;
let _19: ();
let _20: ();
{
_4 = _3;
_6 = [70_i8,99_i8,3_i8,(-92_i8),(-26_i8),112_i8];
place!(Field::<[u32; 2]>(Variant(_7, 1), 0)) = [2281409647_u32,574254712_u32];
_1 = Field::<[usize; 8]>(Variant(_7, 1), 2);
place!(Field::<[usize; 8]>(Variant(_7, 1), 2)) = [5646338289504730786_usize,16004520715396114013_usize,1859923729600011043_usize,3621849954414130320_usize,3_usize,5_usize,6427605111790613868_usize,11936444058796812735_usize];
Call(RET = fn11(_7, _4, _7, _7, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _5;
_4 = _5;
_3 = _5;
_9 = [5_usize,7_usize,4173470626859855231_usize,2_usize];
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [269084557042837539781569110470537873477_u128,91425269926583538939340364652804889539_u128,79219838007991420982138232874131605230_u128,195112504196228052138574321655761528196_u128,279796594233962235430901852441408651447_u128];
_6 = _2;
_10 = (-6423730926435634086_i64) as f64;
place!(Field::<[i8; 6]>(Variant(_7, 1), 3)) = [(-105_i8),110_i8,(-57_i8),(-86_i8),(-120_i8),(-50_i8)];
place!(Field::<[i8; 6]>(Variant(_7, 1), 3)) = [(-47_i8),44_i8,(-10_i8),86_i8,28_i8,6_i8];
_4 = _3;
_9 = [6_usize,7_usize,3_usize,6_usize];
_12.fld0 = core::ptr::addr_of_mut!(_11);
Call(_12.fld1 = core::intrinsics::bswap(2_usize), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = (-1964310801028415655_i64) as f32;
_10 = (-126_i8) as f64;
_8 = _5;
_5 = _8;
_11 = 12701376066761356583_u64 as f32;
_12.fld0 = core::ptr::addr_of_mut!(_11);
place!(Field::<[u32; 2]>(Variant(_7, 1), 0)) = [343103815_u32,1379572166_u32];
_6 = Field::<[i8; 6]>(Variant(_7, 1), 3);
_8 = _5;
_5 = _8;
_14 = true;
_15 = '\u{9ddad}';
_12.fld1 = !3_usize;
_2 = _6;
_17 = -(-9223372036854775808_isize);
_4 = _5;
Call(RET = fn12(_7, _14, _8, _11, _2, _2, _9, Field::<[usize; 8]>(Variant(_7, 1), 2), _5, _15), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [106226675296256494436931333528602274401_u128,253279546551189297109978008644112545177_u128,139158302086721463860631618422346872181_u128,215131812003245224770984061971062717608_u128,291053132493414894168486286994498623738_u128];
_12.fld0 = core::ptr::addr_of_mut!(_11);
_16 = _14;
SetDiscriminant(_7, 2);
_17 = 9223372036854775807_isize + (-9223372036854775808_isize);
_15 = '\u{5ecf}';
place!(Field::<[usize; 8]>(Variant(_7, 2), 1)) = _1;
Goto(bb4)
}
bb4 = {
Call(_19 = dump_var(10_usize, 6_usize, Move(_6), 14_usize, Move(_14), 15_usize, Move(_15), 1_usize, Move(_1)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: Adt41,mut _2: *mut u128,mut _3: Adt41,mut _4: Adt41,mut _5: *mut u128) -> *mut ((*mut u128, u128, bool), u128) {
mir! {
type RET = *mut ((*mut u128, u128, bool), u128);
let _6: (usize,);
let _7: *const *mut ((*mut u128, u128, bool), u128);
let _8: Adt53;
let _9: *const u128;
let _10: u8;
let _11: Adt41;
let _12: f64;
let _13: *const u128;
let _14: Adt51;
let _15: isize;
let _16: isize;
let _17: u128;
let _18: [u32; 2];
let _19: isize;
let _20: *const ((*mut u128, u128, bool), u128);
let _21: isize;
let _22: Adt42;
let _23: [i16; 3];
let _24: [usize; 4];
let _25: i8;
let _26: [u128; 5];
let _27: isize;
let _28: [u32; 2];
let _29: isize;
let _30: (usize,);
let _31: Adt40;
let _32: i16;
let _33: [usize; 4];
let _34: [i8; 6];
let _35: *const *mut ((*mut u128, u128, bool), u128);
let _36: ();
let _37: ();
{
_4 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_3, 1), 0),fld1: Field::<[u128; 5]>(Variant(_3, 1), 1),fld2: Field::<[usize; 8]>(Variant(_3, 1), 2),fld3: Field::<[i8; 6]>(Variant(_1, 1), 3) };
place!(Field::<[u32; 2]>(Variant(_3, 1), 0)) = [326887138_u32,1133444237_u32];
Goto(bb1)
}
bb1 = {
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = [93187669740908091985959996379876004049_u128,41727945147724286668114380873443626205_u128,25904505943024764753783244536014271824_u128,97416692260030356175002097393243897563_u128,223619353907035425756109801937667058142_u128];
place!(Field::<[i8; 6]>(Variant(_4, 1), 3)) = Field::<[i8; 6]>(Variant(_1, 1), 3);
_2 = _5;
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = Field::<[u128; 5]>(Variant(_4, 1), 1);
_3 = _1;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [11311211629815010514_usize,7_usize,7_usize,1_usize,3067327005362325051_usize,5_usize,4416423480882250964_usize,3_usize];
_1 = _3;
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = Field::<[usize; 8]>(Variant(_3, 1), 2);
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [321949422499058009800877366596139205714_u128,170923504931644811591979718474404698686_u128,178494453353294285726086133126126996142_u128,128122305484662326350613211181395705810_u128,234480692871309813578237827716134163513_u128];
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = [1925357211_u32,1968670667_u32];
_6 = (6712498577026078040_usize,);
_6.0 = 3_usize << (-3765_i16);
_3 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_1, 1), 0),fld1: Field::<[u128; 5]>(Variant(_1, 1), 1),fld2: Field::<[usize; 8]>(Variant(_1, 1), 2),fld3: Field::<[i8; 6]>(Variant(_1, 1), 3) };
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [16_i8,97_i8,124_i8,21_i8,58_i8,33_i8];
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [146878496988499802708399708396253624286_u128,281050729048645544926303613948329647619_u128,270771542042875103023957481029186144824_u128,26640646209149924618006845374569558628_u128,262637254030281346345084393072095357711_u128];
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = Field::<[u128; 5]>(Variant(_3, 1), 1);
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [20214600407854043367878019826857779648_u128,225082629967751293771035732152693517448_u128,321022052032418049362229390995691237262_u128,200064406552354078548229543678573034232_u128,190211647774889421631481392788003462049_u128];
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
Goto(bb2)
}
bb2 = {
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
place!(Field::<[u32; 2]>(Variant(_3, 1), 0)) = [1559755038_u32,209532829_u32];
_7 = core::ptr::addr_of!(RET);
place!(Field::<[u128; 5]>(Variant(_4, 1), 1)) = [209927184912561292235883675226011142410_u128,43321842347425147385755206770779566050_u128,339321283663827003652146138472569736914_u128,317689296901421452600499057433114095124_u128,316128996871622547553908422844419663385_u128];
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [(-9_i8),(-78_i8),117_i8,(-5_i8),78_i8,(-118_i8)];
place!(Field::<[usize; 8]>(Variant(_3, 1), 2)) = Field::<[usize; 8]>(Variant(_4, 1), 2);
_2 = _5;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = Field::<[usize; 8]>(Variant(_3, 1), 2);
Goto(bb3)
}
bb3 = {
place!(Field::<[u128; 5]>(Variant(_4, 1), 1)) = [315305285457029629385311285743070358756_u128,37155172404186935681529610594806788317_u128,172650093374452617393708697344115902025_u128,59033606339232470118759539944134608754_u128,122402180688598808381590285131977743152_u128];
_5 = _2;
_7 = core::ptr::addr_of!((*_7));
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = Field::<[u128; 5]>(Variant(_4, 1), 1);
place!(Field::<[i8; 6]>(Variant(_4, 1), 3)) = Field::<[i8; 6]>(Variant(_1, 1), 3);
place!(Field::<[usize; 8]>(Variant(_3, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
place!(Field::<[i8; 6]>(Variant(_3, 1), 3)) = [122_i8,(-14_i8),48_i8,(-71_i8),(-89_i8),(-96_i8)];
_2 = _5;
_1 = _3;
place!(Field::<[u32; 2]>(Variant(_3, 1), 0)) = Field::<[u32; 2]>(Variant(_1, 1), 0);
_6.0 = (-165_i16) as usize;
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = Field::<[u128; 5]>(Variant(_4, 1), 1);
_6.0 = (-69628606707955600518982638776847263580_i128) as usize;
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = Field::<[u32; 2]>(Variant(_4, 1), 0);
SetDiscriminant(_4, 0);
Goto(bb4)
}
bb4 = {
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [(-72_i8),(-97_i8),(-92_i8),(-7_i8),108_i8,(-22_i8)];
_4 = _3;
SetDiscriminant(_3, 2);
SetDiscriminant(_1, 0);
_5 = _2;
_9 = core::ptr::addr_of!(place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1);
_7 = core::ptr::addr_of!((*_7));
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0.0 = !_6.0;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.0 = 97518939963387826587867767593878543265_u128 as f32;
place!(Field::<[usize; 8]>(Variant(_3, 2), 1)) = Field::<[usize; 8]>(Variant(_4, 1), 2);
place!(Field::<[i8; 6]>(Variant(_4, 1), 3)) = [(-97_i8),28_i8,104_i8,(-48_i8),67_i8,104_i8];
SetDiscriminant(_4, 0);
Goto(bb5)
}
bb5 = {
place!(Field::<bool>(Variant(_3, 2), 0)) = false;
_2 = _5;
place!(Field::<u16>(Variant(_3, 2), 3)) = 38200_u16 - 34355_u16;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1 = !165358643157140516332999829639186213301_u128;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3 = (_5, 254777757895313911905519610761441326914_u128, Field::<bool>(Variant(_3, 2), 0));
match (*_9) {
0 => bb4,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
254777757895313911905519610761441326914 => bb12,
_ => bb11
}
}
bb6 = {
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [(-72_i8),(-97_i8),(-92_i8),(-7_i8),108_i8,(-22_i8)];
_4 = _3;
SetDiscriminant(_3, 2);
SetDiscriminant(_1, 0);
_5 = _2;
_9 = core::ptr::addr_of!(place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1);
_7 = core::ptr::addr_of!((*_7));
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0.0 = !_6.0;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.0 = 97518939963387826587867767593878543265_u128 as f32;
place!(Field::<[usize; 8]>(Variant(_3, 2), 1)) = Field::<[usize; 8]>(Variant(_4, 1), 2);
place!(Field::<[i8; 6]>(Variant(_4, 1), 3)) = [(-97_i8),28_i8,104_i8,(-48_i8),67_i8,104_i8];
SetDiscriminant(_4, 0);
Goto(bb5)
}
bb7 = {
place!(Field::<[u128; 5]>(Variant(_4, 1), 1)) = [315305285457029629385311285743070358756_u128,37155172404186935681529610594806788317_u128,172650093374452617393708697344115902025_u128,59033606339232470118759539944134608754_u128,122402180688598808381590285131977743152_u128];
_5 = _2;
_7 = core::ptr::addr_of!((*_7));
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = Field::<[u128; 5]>(Variant(_4, 1), 1);
place!(Field::<[i8; 6]>(Variant(_4, 1), 3)) = Field::<[i8; 6]>(Variant(_1, 1), 3);
place!(Field::<[usize; 8]>(Variant(_3, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
place!(Field::<[i8; 6]>(Variant(_3, 1), 3)) = [122_i8,(-14_i8),48_i8,(-71_i8),(-89_i8),(-96_i8)];
_2 = _5;
_1 = _3;
place!(Field::<[u32; 2]>(Variant(_3, 1), 0)) = Field::<[u32; 2]>(Variant(_1, 1), 0);
_6.0 = (-165_i16) as usize;
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = Field::<[u128; 5]>(Variant(_4, 1), 1);
_6.0 = (-69628606707955600518982638776847263580_i128) as usize;
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = Field::<[u32; 2]>(Variant(_4, 1), 0);
SetDiscriminant(_4, 0);
Goto(bb4)
}
bb8 = {
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
place!(Field::<[u32; 2]>(Variant(_3, 1), 0)) = [1559755038_u32,209532829_u32];
_7 = core::ptr::addr_of!(RET);
place!(Field::<[u128; 5]>(Variant(_4, 1), 1)) = [209927184912561292235883675226011142410_u128,43321842347425147385755206770779566050_u128,339321283663827003652146138472569736914_u128,317689296901421452600499057433114095124_u128,316128996871622547553908422844419663385_u128];
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [(-9_i8),(-78_i8),117_i8,(-5_i8),78_i8,(-118_i8)];
place!(Field::<[usize; 8]>(Variant(_3, 1), 2)) = Field::<[usize; 8]>(Variant(_4, 1), 2);
_2 = _5;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = Field::<[usize; 8]>(Variant(_3, 1), 2);
Goto(bb3)
}
bb9 = {
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = [93187669740908091985959996379876004049_u128,41727945147724286668114380873443626205_u128,25904505943024764753783244536014271824_u128,97416692260030356175002097393243897563_u128,223619353907035425756109801937667058142_u128];
place!(Field::<[i8; 6]>(Variant(_4, 1), 3)) = Field::<[i8; 6]>(Variant(_1, 1), 3);
_2 = _5;
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = Field::<[u128; 5]>(Variant(_4, 1), 1);
_3 = _1;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [11311211629815010514_usize,7_usize,7_usize,1_usize,3067327005362325051_usize,5_usize,4416423480882250964_usize,3_usize];
_1 = _3;
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = Field::<[usize; 8]>(Variant(_3, 1), 2);
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [321949422499058009800877366596139205714_u128,170923504931644811591979718474404698686_u128,178494453353294285726086133126126996142_u128,128122305484662326350613211181395705810_u128,234480692871309813578237827716134163513_u128];
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = [1925357211_u32,1968670667_u32];
_6 = (6712498577026078040_usize,);
_6.0 = 3_usize << (-3765_i16);
_3 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_1, 1), 0),fld1: Field::<[u128; 5]>(Variant(_1, 1), 1),fld2: Field::<[usize; 8]>(Variant(_1, 1), 2),fld3: Field::<[i8; 6]>(Variant(_1, 1), 3) };
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [16_i8,97_i8,124_i8,21_i8,58_i8,33_i8];
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [146878496988499802708399708396253624286_u128,281050729048645544926303613948329647619_u128,270771542042875103023957481029186144824_u128,26640646209149924618006845374569558628_u128,262637254030281346345084393072095357711_u128];
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = Field::<[u128; 5]>(Variant(_3, 1), 1);
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [20214600407854043367878019826857779648_u128,225082629967751293771035732152693517448_u128,321022052032418049362229390995691237262_u128,200064406552354078548229543678573034232_u128,190211647774889421631481392788003462049_u128];
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_2 = core::ptr::addr_of_mut!((*_9));
_10 = 153_u8 + 36_u8;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.1 = 18059_i16;
place!(Field::<[usize; 8]>(Variant(_3, 2), 1)) = [Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0];
Goto(bb13)
}
bb13 = {
place!(Field::<[usize; 4]>(Variant(_3, 2), 7)) = [_6.0,_6.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0];
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1 = !28585430893740654938339218969106738344_u128;
_9 = core::ptr::addr_of!((*_2));
_12 = 1695388419_u32 as f64;
_6 = (Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,);
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.1 = 2549_i16;
_6 = (Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,);
match Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1 {
0 => bb10,
1 => bb2,
2 => bb7,
3 => bb9,
2549 => bb15,
_ => bb14
}
}
bb14 = {
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
place!(Field::<[u32; 2]>(Variant(_3, 1), 0)) = [1559755038_u32,209532829_u32];
_7 = core::ptr::addr_of!(RET);
place!(Field::<[u128; 5]>(Variant(_4, 1), 1)) = [209927184912561292235883675226011142410_u128,43321842347425147385755206770779566050_u128,339321283663827003652146138472569736914_u128,317689296901421452600499057433114095124_u128,316128996871622547553908422844419663385_u128];
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [(-9_i8),(-78_i8),117_i8,(-5_i8),78_i8,(-118_i8)];
place!(Field::<[usize; 8]>(Variant(_3, 1), 2)) = Field::<[usize; 8]>(Variant(_4, 1), 2);
_2 = _5;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _2;
place!(Field::<[usize; 8]>(Variant(_4, 1), 2)) = Field::<[usize; 8]>(Variant(_3, 1), 2);
Goto(bb3)
}
bb15 = {
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.0 = (-86_isize) as f32;
place!(Field::<[usize; 8]>(Variant(_3, 2), 1)) = [Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0];
place!(Field::<i16>(Variant(_3, 2), 4)) = (*_9) as i16;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0 = (_6.0, Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.3.0);
_10 = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.3.2 as u8;
place!(Field::<[usize; 8]>(Variant(_3, 2), 1)) = [_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,_6.0];
_21 = _10 as isize;
_16 = _21;
Goto(bb16)
}
bb16 = {
_23 = [Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1];
_21 = _16 >> Field::<u16>(Variant(_3, 2), 3);
place!(Field::<f32>(Variant(_3, 2), 5)) = 112983790505954320930383039588804497497_i128 as f32;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1 = 337938242717930544113301122584994408947_u128 - 29148580626698140694804832646007877311_u128;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.0 = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.1;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.1 = -Field::<i16>(Variant(_3, 2), 4);
_18 = [3795574853_u32,1377400045_u32];
_21 = _16;
_12 = Field::<u16>(Variant(_3, 2), 3) as f64;
place!(Field::<u16>(Variant(_3, 2), 3)) = 49386_u16;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1 = _6.0 as u128;
_17 = (*_2) << Field::<u16>(Variant(_3, 2), 3);
_24 = [Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0];
_2 = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.3.0;
match Field::<u16>(Variant(_3, 2), 3) {
0 => bb15,
1 => bb13,
2 => bb14,
3 => bb4,
4 => bb5,
5 => bb12,
49386 => bb18,
_ => bb17
}
}
bb17 = {
place!(Field::<bool>(Variant(_3, 2), 0)) = false;
_2 = _5;
place!(Field::<u16>(Variant(_3, 2), 3)) = 38200_u16 - 34355_u16;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1 = !165358643157140516332999829639186213301_u128;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3 = (_5, 254777757895313911905519610761441326914_u128, Field::<bool>(Variant(_3, 2), 0));
match (*_9) {
0 => bb4,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
254777757895313911905519610761441326914 => bb12,
_ => bb11
}
}
bb18 = {
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0.0 = !_6.0;
_21 = _16 >> Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0;
place!(Field::<f32>(Variant(_3, 2), 5)) = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.0 - Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.0;
_26 = [(*_9),(*_9),(*_9),_17,_17];
_25 = -33_i8;
_9 = core::ptr::addr_of!((*_9));
_25 = Field::<f32>(Variant(_3, 2), 5) as i8;
place!(Field::<i16>(Variant(_3, 2), 4)) = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1;
_23 = [Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1];
_19 = _16;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3 = (_5, _17, Field::<bool>(Variant(_3, 2), 0));
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0.0 = (*_9) as usize;
place!(Field::<bool>(Variant(_3, 2), 0)) = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.3.2;
_24 = [Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0];
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.1 = !_17;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3 = (_2, _17, Field::<bool>(Variant(_3, 2), 0));
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0 = (_6.0, _5);
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).0.0 = !_6.0;
_7 = core::ptr::addr_of!(place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.2);
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.1 = 12899851315206809728_u64 as i16;
_2 = core::ptr::addr_of_mut!((*_9));
Goto(bb19)
}
bb19 = {
_28 = [1017528600_u32,2355360121_u32];
_28 = [3084273753_u32,1579937520_u32];
_2 = core::ptr::addr_of_mut!((*_2));
_24 = [_6.0,_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0];
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.3.0 = core::ptr::addr_of_mut!((*_2));
_7 = core::ptr::addr_of!(RET);
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.2 = core::ptr::addr_of_mut!(_31.fld2);
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(_1, 0), 0)) = core::ptr::addr_of!(_31.fld2);
place!(Field::<i16>(Variant(_3, 2), 4)) = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1 ^ Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).1.1;
_30 = (Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,);
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(_4, 0), 0)) = core::ptr::addr_of!(_31.fld2);
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.1 = Field::<i16>(Variant(_3, 2), 4) - Field::<i16>(Variant(_3, 2), 4);
_6 = _30;
RET = core::ptr::addr_of_mut!(_31.fld2);
_33 = _24;
_31.fld2.0.1 = (*_2) & (*_2);
_7 = core::ptr::addr_of!(place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6)).1.2);
_2 = Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.1;
place!(Field::<[usize; 4]>(Variant(_3, 2), 7)) = [_6.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_3, 2), 6).0.0,_6.0];
_17 = !(*RET).0.1;
_32 = -Field::<i16>(Variant(_3, 2), 4);
_31.fld0 = core::ptr::addr_of!(place!(Field::<f32>(Variant(_3, 2), 5)));
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(_1, 0), 0)) = core::ptr::addr_of!((*RET));
_30.0 = !_6.0;
Goto(bb20)
}
bb20 = {
Call(_36 = dump_var(11_usize, 21_usize, Move(_21), 18_usize, Move(_18), 25_usize, Move(_25), 23_usize, Move(_23)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_36 = dump_var(11_usize, 33_usize, Move(_33), 28_usize, Move(_28), 32_usize, Move(_32), 37_usize, _37), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: Adt41,mut _2: bool,mut _3: *mut u128,mut _4: f32,mut _5: [i8; 6],mut _6: [i8; 6],mut _7: [usize; 4],mut _8: [usize; 8],mut _9: *mut u128,mut _10: char) -> *mut ((*mut u128, u128, bool), u128) {
mir! {
type RET = *mut ((*mut u128, u128, bool), u128);
let _11: bool;
let _12: f64;
let _13: isize;
let _14: f64;
let _15: i64;
let _16: [usize; 8];
let _17: u32;
let _18: [i16; 3];
let _19: Adt40;
let _20: bool;
let _21: bool;
let _22: f32;
let _23: [u128; 5];
let _24: ();
let _25: ();
{
_4 = (-585129374_i32) as f32;
_8 = [4_usize,0_usize,14340776514569762940_usize,4_usize,5132412893961531430_usize,4_usize,1_usize,14766065873218159802_usize];
SetDiscriminant(_1, 1);
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = _8;
_3 = _9;
_4 = 2348685349_u32 as f32;
_4 = 163_u8 as f32;
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = _6;
_6 = [(-63_i8),(-16_i8),(-97_i8),(-118_i8),(-4_i8),(-39_i8)];
_8 = [7_usize,11240486773168501728_usize,6366624847807736985_usize,1784707996510811149_usize,3371706359903975070_usize,6_usize,1827797039015108625_usize,6_usize];
_2 = false;
_8 = [15999461461255307473_usize,2_usize,1_usize,2603883149682377112_usize,9827423131113575027_usize,5_usize,1807369605721199359_usize,1324796734794804648_usize];
_14 = 60_u8 as f64;
_15 = -(-6082239534613835180_i64);
_4 = 22402_u16 as f32;
_2 = _10 < _10;
Call(_11 = fn13(_6, _3, _8, _9, _6, _9, _2, _9, _6, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = [135344113256933329914719723615360187968_u128,292566991588789993957641161593204854087_u128,86439041630971360061111105318477863355_u128,165856331720047890113360555576336631624_u128,154545644083279832296117429877018926084_u128];
_15 = 9073130507367713521_u64 as i64;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [6_usize,5830774038877137957_usize,0_usize,5010729408812963470_usize,4_usize,4_usize,6_usize,12273753982561041041_usize];
_3 = _9;
_4 = 2_usize as f32;
_7 = [3_usize,1632579330211230112_usize,0_usize,6_usize];
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = [264375867388361943398580977908253553937_u128,328725268783648659526133891487125886893_u128,90125068083444533585461099900215204226_u128,307759351871416845571638723343360032565_u128,14441889971252187235192729426061007526_u128];
_3 = _9;
_19.fld2.0.2 = _11;
_13 = _15 as isize;
_5 = [(-14_i8),50_i8,26_i8,(-77_i8),57_i8,33_i8];
_5 = Field::<[i8; 6]>(Variant(_1, 1), 3);
_20 = _19.fld2.0.2;
Goto(bb2)
}
bb2 = {
RET = core::ptr::addr_of_mut!(_19.fld2);
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = [2022009664_u32,1110204556_u32];
_13 = 87_isize >> _15;
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = _6;
_19.fld2.0 = (_3, 308778559889054750523499717342726512715_u128, _20);
_5 = [(-89_i8),(-119_i8),(-30_i8),127_i8,(-95_i8),53_i8];
_20 = _11;
_13 = (-48_isize) >> _19.fld2.0.1;
_14 = (-96_i8) as f64;
_3 = core::ptr::addr_of_mut!((*RET).0.1);
_14 = _4 as f64;
_19.fld2.1 = !(*_3);
RET = core::ptr::addr_of_mut!(_19.fld2);
Goto(bb3)
}
bb3 = {
Call(_24 = dump_var(12_usize, 20_usize, Move(_20), 6_usize, Move(_6), 11_usize, Move(_11), 10_usize, Move(_10)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_24 = dump_var(12_usize, 15_usize, Move(_15), 25_usize, _25, 25_usize, _25, 25_usize, _25), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [i8; 6],mut _2: *mut u128,mut _3: [usize; 8],mut _4: *mut u128,mut _5: [i8; 6],mut _6: *mut u128,mut _7: bool,mut _8: *mut u128,mut _9: [i8; 6],mut _10: *mut u128) -> bool {
mir! {
type RET = bool;
let _11: [u128; 5];
let _12: isize;
let _13: [u64; 3];
let _14: [i16; 3];
let _15: Adt47;
let _16: [usize; 4];
let _17: [u128; 5];
let _18: bool;
let _19: isize;
let _20: [usize; 4];
let _21: Adt55;
let _22: [u128; 5];
let _23: [u64; 3];
let _24: i128;
let _25: Adt50;
let _26: f32;
let _27: [usize; 4];
let _28: Adt54;
let _29: *const ((*mut u128, u128, bool), u128);
let _30: [u64; 3];
let _31: [i8; 6];
let _32: ();
let _33: ();
{
_5 = [81_i8,42_i8,(-24_i8),120_i8,73_i8,(-63_i8)];
_10 = _6;
_4 = _2;
RET = _7 ^ _7;
_5 = [42_i8,53_i8,(-115_i8),24_i8,(-14_i8),20_i8];
_4 = _6;
_3 = [2_usize,1_usize,6599974078907571002_usize,17823595448714974927_usize,4071825216720756195_usize,5_usize,13768664977539312747_usize,9968317492503359267_usize];
_8 = _4;
_1 = _9;
_4 = _8;
_2 = _10;
_4 = _10;
_9 = [58_i8,24_i8,122_i8,92_i8,(-79_i8),(-114_i8)];
_10 = _8;
_5 = [12_i8,(-54_i8),20_i8,58_i8,114_i8,(-98_i8)];
_3 = [3_usize,7_usize,9876792512815591292_usize,7_usize,3_usize,3371935806616507340_usize,0_usize,0_usize];
_4 = _6;
_10 = _4;
_12 = 6317773259701050227_usize as isize;
_13 = [17916117483131223428_u64,2948972510649819123_u64,2755330357798160960_u64];
_4 = _8;
_5 = [42_i8,(-108_i8),(-30_i8),23_i8,122_i8,61_i8];
_12 = (-9223372036854775808_isize);
_11 = [32858100362029212790673108816686850355_u128,122210976756821253633259563786989576119_u128,286340173761704526726807349978962020340_u128,252217967987260882245237564433353686668_u128,76859046521575030597439612115538927366_u128];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_9 = [(-28_i8),(-23_i8),(-117_i8),50_i8,(-114_i8),26_i8];
_6 = _8;
_1 = [(-70_i8),53_i8,(-12_i8),(-23_i8),44_i8,117_i8];
_14 = [29582_i16,(-30233_i16),9289_i16];
_10 = _8;
_6 = _8;
_1 = _5;
_13 = [6594852832108728953_u64,9384011907307314240_u64,7359332763055034119_u64];
_11 = [314142025161900431951217887479851379332_u128,295604234338120688424928083687018114012_u128,308747687294283195773365590538837431979_u128,115664080293547439619121879421054102708_u128,330911507672990250335991412530883250751_u128];
_6 = _8;
_10 = _4;
Call(_2 = fn14(_4, _12, _8, _3, _8, _5, _6, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_15.fld0 = !12301761418631947714_u64;
_13 = [_15.fld0,_15.fld0,_15.fld0];
_9 = [54_i8,56_i8,85_i8,95_i8,23_i8,119_i8];
_9 = [114_i8,1_i8,(-15_i8),(-74_i8),(-58_i8),(-41_i8)];
match _12 {
0 => bb5,
1 => bb2,
2 => bb3,
340282366920938463454151235394913435648 => bb7,
_ => bb4
}
}
bb7 = {
_3 = [2_usize,0_usize,11495887943066691405_usize,7_usize,9842113245932895688_usize,6_usize,6223012530380277882_usize,6_usize];
_6 = _10;
match _12 {
0 => bb1,
340282366920938463454151235394913435648 => bb8,
_ => bb4
}
}
bb8 = {
_14 = [8895_i16,10624_i16,(-9927_i16)];
RET = _7 | _7;
_6 = _4;
_15.fld3 = 47439_u16;
_18 = _7 ^ _7;
_17 = [65432774149308310475444837064685622247_u128,43909381168055677912910269056291781980_u128,262563676658085131656199482991240797862_u128,77136374655544935961836889291145607457_u128,97691552216332043576206880242430771264_u128];
RET = _18;
_19 = _18 as isize;
_11 = [51397733180786743152570713920497760081_u128,143607000040990518658646446252875135241_u128,298207169392615913408898119711519452038_u128,75182855494860732140417930230717456744_u128,110828920072715041836384698698507369322_u128];
_14 = [31085_i16,27153_i16,19963_i16];
_15.fld3 = 44291_u16 >> _19;
_15.fld3 = 144_u16 << _19;
_14 = [5746_i16,4455_i16,27784_i16];
_13 = [_15.fld0,_15.fld0,_15.fld0];
_7 = _15.fld0 == _15.fld0;
_8 = _6;
_19 = (-64471247030560046178128147018689744101_i128) as isize;
_1 = [25_i8,75_i8,(-78_i8),(-39_i8),(-73_i8),30_i8];
_19 = _12;
_15.fld0 = 16725333156755836133_u64 - 6791506466904091117_u64;
_22 = [53909970599172952118415978417339356497_u128,61932398544989839462837208914065193134_u128,253211740786247054685209437261522833821_u128,143804575353465883924242358077764868867_u128,318042255604110534621087534894795955499_u128];
Goto(bb9)
}
bb9 = {
_13 = [_15.fld0,_15.fld0,_15.fld0];
_20 = [6071713798281845396_usize,6_usize,2_usize,2_usize];
_22 = _11;
_10 = _2;
RET = _18;
_12 = -_19;
_4 = _8;
_14 = [15232_i16,16411_i16,(-30665_i16)];
_12 = !_19;
_1 = _5;
_23 = _13;
_20 = [7_usize,1_usize,0_usize,3437746309066858026_usize];
_11 = _17;
_23 = [_15.fld0,_15.fld0,_15.fld0];
_7 = _18;
_9 = [(-78_i8),16_i8,80_i8,(-114_i8),(-115_i8),71_i8];
_1 = _5;
_5 = _1;
_4 = _8;
_6 = _8;
_15.fld0 = 11254226754536369939_u64 + 3894482401952027218_u64;
match _19 {
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_6 = _8;
_11 = _22;
_21 = Adt55::Variant0 { fld0: 1332478739_i32 };
_10 = _4;
_15.fld3 = !31145_u16;
_11 = [38360797677228983052193027852910859934_u128,186626018817547742740292414941431798198_u128,156407618424528277255747345618931007356_u128,247977042946224451932202339031955111786_u128,218724673333433943414230855947852894622_u128];
_17 = _22;
_3 = [14408977839618340204_usize,9289980951116663474_usize,2_usize,4_usize,7515854067260775091_usize,9643828688853922243_usize,5_usize,12969883337076601279_usize];
_19 = _12 + _12;
_19 = _12;
Goto(bb12)
}
bb12 = {
_4 = _8;
_22 = [291458139486211195903522003810220710284_u128,80740111403282779707063522747530888861_u128,272224653030550796633725725080444934356_u128,339441574553591533375942827532907908920_u128,53836997758944691423916466381410552301_u128];
_17 = _11;
_16 = [2_usize,4_usize,1_usize,6_usize];
_23 = [_15.fld0,_15.fld0,_15.fld0];
_9 = [124_i8,16_i8,(-123_i8),(-47_i8),(-92_i8),95_i8];
_5 = [19_i8,50_i8,103_i8,(-98_i8),20_i8,(-63_i8)];
_4 = _2;
_18 = RET;
_11 = _22;
place!(Field::<i32>(Variant(_21, 0), 0)) = 95685976_i32 | 1705304331_i32;
_22 = [314005206377031834294857138732054565972_u128,72546258824434925400641590719139029013_u128,116620040885848007516320058986231803464_u128,114896450201489771202741674680230569795_u128,63770832946438353070282015325187580796_u128];
RET = _7;
_19 = _12 | _12;
_20 = [17148887669833723000_usize,0_usize,1_usize,5_usize];
_3 = [269902290207495576_usize,13788813719407119084_usize,12049147539099489960_usize,4474660072780025683_usize,0_usize,0_usize,0_usize,1017565799748796699_usize];
_4 = _6;
RET = _18 > _7;
Goto(bb13)
}
bb13 = {
RET = !_18;
RET = !_7;
_14 = [15208_i16,(-11275_i16),(-661_i16)];
place!(Field::<i32>(Variant(_21, 0), 0)) = -(-1652599283_i32);
_24 = (-154924036926562177781734357824371710749_i128);
_14 = [23972_i16,(-12881_i16),30740_i16];
_15.fld3 = 52446_u16;
_28.fld1.0 = core::ptr::addr_of_mut!(_28.fld1.1);
_19 = 185_u8 as isize;
_13 = [_15.fld0,_15.fld0,_15.fld0];
_28.fld3 = !115_i8;
_1 = [_28.fld3,_28.fld3,_28.fld3,_28.fld3,_28.fld3,_28.fld3];
_1 = [_28.fld3,_28.fld3,_28.fld3,_28.fld3,_28.fld3,_28.fld3];
_2 = _8;
_9 = _5;
_10 = _6;
match _15.fld3 {
0 => bb8,
1 => bb14,
52446 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
_6 = _8;
_11 = _22;
_21 = Adt55::Variant0 { fld0: 1332478739_i32 };
_10 = _4;
_15.fld3 = !31145_u16;
_11 = [38360797677228983052193027852910859934_u128,186626018817547742740292414941431798198_u128,156407618424528277255747345618931007356_u128,247977042946224451932202339031955111786_u128,218724673333433943414230855947852894622_u128];
_17 = _22;
_3 = [14408977839618340204_usize,9289980951116663474_usize,2_usize,4_usize,7515854067260775091_usize,9643828688853922243_usize,5_usize,12969883337076601279_usize];
_19 = _12 + _12;
_19 = _12;
Goto(bb12)
}
bb16 = {
RET = _7;
_28.fld3 = -36_i8;
_27 = [6_usize,6640468022567133191_usize,2_usize,1_usize];
_7 = _18;
_30 = [_15.fld0,_15.fld0,_15.fld0];
_8 = core::ptr::addr_of_mut!(_28.fld1.1);
_20 = _16;
_22 = _17;
_28.fld1 = (_4, 114594493883052252680359686176431390612_u128, RET);
_7 = _28.fld1.1 >= _28.fld1.1;
_28.fld2 = Field::<i32>(Variant(_21, 0), 0);
_21 = Adt55::Variant0 { fld0: _28.fld2 };
_13 = [_15.fld0,_15.fld0,_15.fld0];
_28.fld0 = 6142316581364866179_i64;
_28.fld1.2 = !_7;
RET = _7 == _7;
_3 = [2_usize,4_usize,11355968768054017254_usize,14652233934252004206_usize,0_usize,609645629866263940_usize,7_usize,0_usize];
Goto(bb17)
}
bb17 = {
Call(_32 = dump_var(13_usize, 7_usize, Move(_7), 1_usize, Move(_1), 18_usize, Move(_18), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_32 = dump_var(13_usize, 14_usize, Move(_14), 11_usize, Move(_11), 19_usize, Move(_19), 5_usize, Move(_5)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(13_usize, 17_usize, Move(_17), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: *mut u128,mut _2: isize,mut _3: *mut u128,mut _4: [usize; 8],mut _5: *mut u128,mut _6: [i8; 6],mut _7: *mut u128,mut _8: *mut u128) -> *mut u128 {
mir! {
type RET = *mut u128;
let _9: Adt51;
let _10: Adt49;
let _11: *mut i64;
let _12: usize;
let _13: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool));
let _14: char;
let _15: i64;
let _16: isize;
let _17: i64;
let _18: [u128; 5];
let _19: [i8; 6];
let _20: [usize; 8];
let _21: [u64; 3];
let _22: Adt41;
let _23: *mut ((*mut u128, u128, bool), u128);
let _24: i128;
let _25: [u64; 3];
let _26: [usize; 4];
let _27: bool;
let _28: [i8; 6];
let _29: bool;
let _30: u8;
let _31: ();
let _32: ();
{
_4 = [7_usize,11654354592631998839_usize,6_usize,0_usize,6677506005615246662_usize,11819535536878824681_usize,6_usize,5_usize];
_2 = 192008558896699017157445412720731539379_u128 as isize;
_2 = -(-9223372036854775808_isize);
RET = _8;
_5 = _8;
_3 = _8;
_7 = _5;
_7 = _5;
RET = _3;
RET = _8;
Goto(bb1)
}
bb1 = {
_12 = 8547233840374817118_usize;
_4 = [_12,_12,_12,_12,_12,_12,_12,_12];
_2 = 64150699539451159329873070498145750941_i128 as isize;
_4 = [_12,_12,_12,_12,_12,_12,_12,_12];
_3 = core::ptr::addr_of_mut!(_13.3.1);
RET = _8;
_4 = [_12,_12,_12,_12,_12,_12,_12,_12];
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
8547233840374817118 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = 16969643007989724848_usize;
_3 = core::ptr::addr_of_mut!((*_3));
_13.3.0 = core::ptr::addr_of_mut!(_13.3.1);
_3 = RET;
_13.3.1 = 3495910095168024890_u64 as u128;
_13.3 = (_7, 311329542509354262195873064149855881678_u128, true);
Goto(bb9)
}
bb9 = {
_13.0 = (-26789_i16) as f32;
_2 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_7 = core::ptr::addr_of_mut!(_13.3.1);
_14 = '\u{72bf9}';
_13.1 = !(-13823_i16);
_2 = !9223372036854775807_isize;
_13.3.1 = !107403767418243427974081700327278028163_u128;
_12 = !0_usize;
Goto(bb10)
}
bb10 = {
_3 = core::ptr::addr_of_mut!(_13.3.1);
_2 = 9223372036854775807_isize ^ (-38_isize);
_10 = Adt49::Variant1 { fld0: _13.3.2 };
_6 = [(-45_i8),106_i8,86_i8,(-125_i8),24_i8,114_i8];
_13.1 = !(-4643_i16);
_15 = -2554327327328844728_i64;
_13.0 = (-45_i8) as f32;
_13.1 = !13640_i16;
place!(Field::<bool>(Variant(_10, 1), 0)) = _12 < _12;
_2 = -9223372036854775807_isize;
_11 = core::ptr::addr_of_mut!(_17);
_17 = _15 | _15;
_8 = core::ptr::addr_of_mut!(_13.3.1);
_14 = '\u{50de0}';
_13.3.1 = 307683526541969945834748357182399438745_u128;
_16 = _2;
_11 = core::ptr::addr_of_mut!((*_11));
_13.3.1 = 191111202788221792474468644743705308906_u128;
_8 = _5;
Call(_12 = core::intrinsics::bswap(13106518394402053218_usize), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_15 = _16 as i64;
SetDiscriminant(_10, 0);
_2 = _16 + _16;
place!(Field::<Adt47>(Variant(_10, 0), 2)).fld0 = 7705484510662021702_u64;
_13.3 = (_8, 59418631116447066403234578051354497590_u128, true);
_10 = Adt49::Variant1 { fld0: _13.3.2 };
_13.3.0 = core::ptr::addr_of_mut!(_13.3.1);
SetDiscriminant(_10, 2);
_3 = core::ptr::addr_of_mut!(_13.3.1);
_13.3.1 = 2776415853571058771710600423547971495_u128 ^ 252495935343079159688477750264226748706_u128;
place!(Field::<[u32; 2]>(Variant(_10, 2), 2)) = [1149855668_u32,2698725509_u32];
Goto(bb12)
}
bb12 = {
place!(Field::<*const f32>(Variant(_10, 2), 3)) = core::ptr::addr_of!(place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).0);
_10 = Adt49::Variant1 { fld0: _13.3.2 };
_13.3.1 = 138778713211025886437597455498432886773_u128 | 206186276662918466660858658955683353143_u128;
_12 = 14709288150351846115_usize ^ 2_usize;
_18 = [(*_7),_13.3.1,_13.3.1,(*_3),(*_7)];
RET = core::ptr::addr_of_mut!((*_3));
SetDiscriminant(_10, 2);
_19 = [99_i8,4_i8,(-115_i8),78_i8,(-121_i8),103_i8];
place!(Field::<[usize; 8]>(Variant(_10, 2), 4)) = [_12,_12,_12,_12,_12,_12,_12,_12];
place!(Field::<[usize; 8]>(Variant(_10, 2), 4)) = [_12,_12,_12,_12,_12,_12,_12,_12];
_13.3.2 = true;
_14 = '\u{72ea7}';
_1 = RET;
RET = core::ptr::addr_of_mut!(_13.3.1);
_6 = _19;
place!(Field::<*const f32>(Variant(_10, 2), 3)) = core::ptr::addr_of!(_13.0);
place!(Field::<[usize; 8]>(Variant(_10, 2), 4)) = [_12,_12,_12,_12,_12,_12,_12,_12];
place!(Field::<*mut i64>(Variant(_10, 2), 1)) = core::ptr::addr_of_mut!(_17);
place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).0 = 19135_u16 as f32;
place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).3.1 = _13.1 as u128;
place!(Field::<[u32; 2]>(Variant(_10, 2), 2)) = [2658621360_u32,2168373810_u32];
place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).3.0 = _8;
_22 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_10, 2), 2),fld1: _18,fld2: Field::<[usize; 8]>(Variant(_10, 2), 4),fld3: _19 };
_7 = core::ptr::addr_of_mut!((*RET));
place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).3 = (_5, (*_3), _13.3.2);
Call(place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).3.2 = fn15(_8, _22, _12, _3, _5, _8, _22, _6, _13.3.0, Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0).3.0, _12, (*_3), _22), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
place!(Field::<[u32; 2]>(Variant(_22, 1), 0)) = Field::<[u32; 2]>(Variant(_10, 2), 2);
place!(Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0)).1 = _12 as i16;
place!(Field::<i32>(Variant(_10, 2), 5)) = 586245231_i32 & (-1934861661_i32);
_8 = Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0).3.0;
_11 = Field::<*mut i64>(Variant(_10, 2), 1);
_5 = core::ptr::addr_of_mut!((*RET));
_15 = _17;
place!(Field::<[u32; 2]>(Variant(_10, 2), 2)) = [672726688_u32,339279809_u32];
_15 = !_17;
_12 = 7825383721124967310_usize * 4_usize;
_12 = 2669902501636212874_usize - 2321073563057588991_usize;
_24 = 128857086981093598117367179359019564560_i128;
Goto(bb14)
}
bb14 = {
RET = _8;
_27 = _13.3.2;
_25 = [5939812414468479154_u64,12983161432750751699_u64,8075155818097335226_u64];
_5 = core::ptr::addr_of_mut!((*_3));
SetDiscriminant(_22, 2);
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_22, 2), 6)).1.3.0 = Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0).3.0;
_19 = _6;
_13.3.1 = !Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0).3.1;
_26 = [_12,_12,_12,_12];
_12 = 4_usize;
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_22, 2), 6)).1.3.2 = Field::<(f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))>(Variant(_10, 2), 0).0 <= _13.0;
_20 = [Field::<[usize; 8]>(Variant(_10, 2), 4)[_12],_4[_12],_4[_12],_4[_12],_12,_4[_12],Field::<[usize; 8]>(Variant(_10, 2), 4)[_12],Field::<[usize; 8]>(Variant(_10, 2), 4)[_12]];
_30 = 71_u8 - 161_u8;
_17 = _15 & _15;
_18 = [_13.3.1,_13.3.1,(*_5),(*_7),(*_3)];
_16 = _15 as isize;
RET = core::ptr::addr_of_mut!((*_5));
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(14_usize, 6_usize, Move(_6), 24_usize, Move(_24), 25_usize, Move(_25), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(14_usize, 2_usize, Move(_2), 4_usize, Move(_4), 19_usize, Move(_19), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: *mut u128,mut _2: Adt41,mut _3: usize,mut _4: *mut u128,mut _5: *mut u128,mut _6: *mut u128,mut _7: Adt41,mut _8: [i8; 6],mut _9: *mut u128,mut _10: *mut u128,mut _11: usize,mut _12: u128,mut _13: Adt41) -> bool {
mir! {
type RET = bool;
let _14: Adt45;
let _15: u16;
let _16: [i16; 3];
let _17: *const *mut ((*mut u128, u128, bool), u128);
let _18: isize;
let _19: bool;
let _20: f64;
let _21: [i16; 3];
let _22: (usize, *mut u128);
let _23: i8;
let _24: *const u128;
let _25: ((*mut u128, u128, bool), u128);
let _26: [u32; 2];
let _27: f64;
let _28: [i16; 3];
let _29: [i8; 6];
let _30: [u64; 3];
let _31: Adt50;
let _32: [u128; 5];
let _33: char;
let _34: ();
let _35: ();
{
_6 = core::ptr::addr_of_mut!(_12);
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = [_3,_3,_11,_11,_3,_11,_3,_11];
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [(*_6),(*_6),(*_6),_12,_12];
RET = (*_6) < (*_6);
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [_12,(*_6),(*_6),(*_6),_12];
place!(Field::<[usize; 8]>(Variant(_2, 1), 2)) = [_3,_3,_3,_3,_3,_3,_3,_11];
place!(Field::<[i8; 6]>(Variant(_7, 1), 3)) = [69_i8,107_i8,(-28_i8),(-102_i8),100_i8,106_i8];
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = [_11,_3,_11,_3,_3,_3,_3,_3];
_14.fld4 = -81844574632116289169759627747400794278_i128;
place!(Field::<[u32; 2]>(Variant(_7, 1), 0)) = [2128138062_u32,2933916653_u32];
_6 = core::ptr::addr_of_mut!((*_6));
place!(Field::<[i8; 6]>(Variant(_13, 1), 3)) = [(-37_i8),(-62_i8),(-34_i8),89_i8,83_i8,(-49_i8)];
_8 = [(-124_i8),(-108_i8),(-102_i8),52_i8,93_i8,(-99_i8)];
place!(Field::<[i8; 6]>(Variant(_2, 1), 3)) = [(-103_i8),(-95_i8),19_i8,101_i8,31_i8,106_i8];
_8 = Field::<[i8; 6]>(Variant(_13, 1), 3);
Goto(bb1)
}
bb1 = {
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = [_3,_3,_3,_11,_3,_3,_11,_3];
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [_12,(*_6),_12,(*_6),(*_6)];
_14.fld3 = _13;
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [(*_6),(*_6),_12,_12,(*_6)];
_4 = core::ptr::addr_of_mut!((*_6));
place!(Field::<[i8; 6]>(Variant(_14.fld3, 1), 3)) = [(-73_i8),86_i8,55_i8,70_i8,101_i8,(-62_i8)];
place!(Field::<[u32; 2]>(Variant(_2, 1), 0)) = Field::<[u32; 2]>(Variant(_13, 1), 0);
_8 = Field::<[i8; 6]>(Variant(_13, 1), 3);
place!(Field::<[u128; 5]>(Variant(_13, 1), 1)) = Field::<[u128; 5]>(Variant(_2, 1), 1);
Goto(bb2)
}
bb2 = {
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = Field::<[usize; 8]>(Variant(_7, 1), 2);
_1 = core::ptr::addr_of_mut!((*_6));
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [(*_4),(*_4),(*_6),(*_1),(*_4)];
RET = true;
SetDiscriminant(_13, 1);
place!(Field::<[usize; 8]>(Variant(_14.fld3, 1), 2)) = Field::<[usize; 8]>(Variant(_2, 1), 2);
place!(Field::<[u128; 5]>(Variant(_13, 1), 1)) = [(*_1),(*_6),(*_4),(*_6),_12];
place!(Field::<[usize; 8]>(Variant(_7, 1), 2)) = [_11,_3,_11,_11,_11,_3,_11,_11];
place!(Field::<[usize; 8]>(Variant(_14.fld3, 1), 2)) = [_3,_3,_3,_11,_3,_11,_3,_11];
_13 = _2;
_7 = _13;
_15 = !10804_u16;
_7 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_13, 1), 0),fld1: Field::<[u128; 5]>(Variant(_14.fld3, 1), 1),fld2: Field::<[usize; 8]>(Variant(_14.fld3, 1), 2),fld3: Field::<[i8; 6]>(Variant(_13, 1), 3) };
place!(Field::<[u32; 2]>(Variant(_14.fld3, 1), 0)) = [2432440626_u32,2907449986_u32];
Goto(bb3)
}
bb3 = {
_14.fld3 = _2;
_16 = [(-8853_i16),20207_i16,(-18968_i16)];
RET = !true;
RET = true;
_20 = 1199112127_i32 as f64;
_22.0 = !_11;
_19 = !RET;
_2 = _7;
SetDiscriminant(_7, 1);
_8 = [(-65_i8),(-126_i8),76_i8,29_i8,12_i8,118_i8];
place!(Field::<[u32; 2]>(Variant(_14.fld3, 1), 0)) = [2103863720_u32,1384414414_u32];
_2 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_13, 1), 0),fld1: Field::<[u128; 5]>(Variant(_14.fld3, 1), 1),fld2: Field::<[usize; 8]>(Variant(_13, 1), 2),fld3: Field::<[i8; 6]>(Variant(_13, 1), 3) };
Goto(bb4)
}
bb4 = {
_22.1 = core::ptr::addr_of_mut!((*_1));
place!(Field::<[usize; 8]>(Variant(_2, 1), 2)) = [_3,_22.0,_11,_22.0,_3,_3,_3,_3];
_6 = _10;
_22.1 = core::ptr::addr_of_mut!(_12);
_3 = _20 as usize;
_18 = _19 as isize;
place!(Field::<[u32; 2]>(Variant(_13, 1), 0)) = Field::<[u32; 2]>(Variant(_2, 1), 0);
_14.fld1 = Adt44::Variant0 { fld0: _14.fld3,fld1: (-82_i8),fld2: _14.fld4 };
Goto(bb5)
}
bb5 = {
_2 = Field::<Adt41>(Variant(_14.fld1, 0), 0);
SetDiscriminant(_14.fld3, 0);
_11 = (-29223_i16) as usize;
_1 = _6;
place!(Field::<[i8; 6]>(Variant(_7, 1), 3)) = [127_i8,49_i8,50_i8,(-39_i8),(-54_i8),26_i8];
_14.fld2 = 3621454091155101740_i64 | (-3598352174534528568_i64);
_23 = 3370324043_u32 as i8;
Goto(bb6)
}
bb6 = {
_25.0.0 = _5;
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = Field::<[usize; 8]>(Variant(Field::<Adt41>(Variant(_14.fld1, 0), 0), 1), 2);
_14.fld0 = core::ptr::addr_of_mut!(_25);
_4 = _10;
place!(Field::<[u32; 2]>(Variant(_7, 1), 0)) = [1178828026_u32,2148277818_u32];
_7 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_13, 1), 0),fld1: Field::<[u128; 5]>(Variant(_13, 1), 1),fld2: Field::<[usize; 8]>(Variant(Field::<Adt41>(Variant(_14.fld1, 0), 0), 1), 2),fld3: Field::<[i8; 6]>(Variant(Field::<Adt41>(Variant(_14.fld1, 0), 0), 1), 3) };
_23 = (-62_i8) ^ 44_i8;
_22.0 = _3 | _3;
place!(Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(_14.fld3, 0), 1)) = _14.fld0;
_22.1 = core::ptr::addr_of_mut!(_12);
_25.1 = _12 & _12;
_16 = [(-14808_i16),19624_i16,(-20510_i16)];
_22.0 = _11 << _11;
_25.0.1 = _14.fld2 as u128;
_15 = 4885_u16;
_19 = !RET;
match _15 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
4885 => bb13,
_ => bb12
}
}
bb7 = {
_2 = Field::<Adt41>(Variant(_14.fld1, 0), 0);
SetDiscriminant(_14.fld3, 0);
_11 = (-29223_i16) as usize;
_1 = _6;
place!(Field::<[i8; 6]>(Variant(_7, 1), 3)) = [127_i8,49_i8,50_i8,(-39_i8),(-54_i8),26_i8];
_14.fld2 = 3621454091155101740_i64 | (-3598352174534528568_i64);
_23 = 3370324043_u32 as i8;
Goto(bb6)
}
bb8 = {
_22.1 = core::ptr::addr_of_mut!((*_1));
place!(Field::<[usize; 8]>(Variant(_2, 1), 2)) = [_3,_22.0,_11,_22.0,_3,_3,_3,_3];
_6 = _10;
_22.1 = core::ptr::addr_of_mut!(_12);
_3 = _20 as usize;
_18 = _19 as isize;
place!(Field::<[u32; 2]>(Variant(_13, 1), 0)) = Field::<[u32; 2]>(Variant(_2, 1), 0);
_14.fld1 = Adt44::Variant0 { fld0: _14.fld3,fld1: (-82_i8),fld2: _14.fld4 };
Goto(bb5)
}
bb9 = {
_14.fld3 = _2;
_16 = [(-8853_i16),20207_i16,(-18968_i16)];
RET = !true;
RET = true;
_20 = 1199112127_i32 as f64;
_22.0 = !_11;
_19 = !RET;
_2 = _7;
SetDiscriminant(_7, 1);
_8 = [(-65_i8),(-126_i8),76_i8,29_i8,12_i8,118_i8];
place!(Field::<[u32; 2]>(Variant(_14.fld3, 1), 0)) = [2103863720_u32,1384414414_u32];
_2 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_13, 1), 0),fld1: Field::<[u128; 5]>(Variant(_14.fld3, 1), 1),fld2: Field::<[usize; 8]>(Variant(_13, 1), 2),fld3: Field::<[i8; 6]>(Variant(_13, 1), 3) };
Goto(bb4)
}
bb10 = {
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = Field::<[usize; 8]>(Variant(_7, 1), 2);
_1 = core::ptr::addr_of_mut!((*_6));
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [(*_4),(*_4),(*_6),(*_1),(*_4)];
RET = true;
SetDiscriminant(_13, 1);
place!(Field::<[usize; 8]>(Variant(_14.fld3, 1), 2)) = Field::<[usize; 8]>(Variant(_2, 1), 2);
place!(Field::<[u128; 5]>(Variant(_13, 1), 1)) = [(*_1),(*_6),(*_4),(*_6),_12];
place!(Field::<[usize; 8]>(Variant(_7, 1), 2)) = [_11,_3,_11,_11,_11,_3,_11,_11];
place!(Field::<[usize; 8]>(Variant(_14.fld3, 1), 2)) = [_3,_3,_3,_11,_3,_11,_3,_11];
_13 = _2;
_7 = _13;
_15 = !10804_u16;
_7 = Adt41::Variant1 { fld0: Field::<[u32; 2]>(Variant(_13, 1), 0),fld1: Field::<[u128; 5]>(Variant(_14.fld3, 1), 1),fld2: Field::<[usize; 8]>(Variant(_14.fld3, 1), 2),fld3: Field::<[i8; 6]>(Variant(_13, 1), 3) };
place!(Field::<[u32; 2]>(Variant(_14.fld3, 1), 0)) = [2432440626_u32,2907449986_u32];
Goto(bb3)
}
bb11 = {
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = [_3,_3,_3,_11,_3,_3,_11,_3];
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [_12,(*_6),_12,(*_6),(*_6)];
_14.fld3 = _13;
place!(Field::<[u128; 5]>(Variant(_7, 1), 1)) = [(*_6),(*_6),_12,_12,(*_6)];
_4 = core::ptr::addr_of_mut!((*_6));
place!(Field::<[i8; 6]>(Variant(_14.fld3, 1), 3)) = [(-73_i8),86_i8,55_i8,70_i8,101_i8,(-62_i8)];
place!(Field::<[u32; 2]>(Variant(_2, 1), 0)) = Field::<[u32; 2]>(Variant(_13, 1), 0);
_8 = Field::<[i8; 6]>(Variant(_13, 1), 3);
place!(Field::<[u128; 5]>(Variant(_13, 1), 1)) = Field::<[u128; 5]>(Variant(_2, 1), 1);
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_22.0 = _12 as usize;
_22 = (_11, _5);
_15 = _23 as u16;
_16 = [(-22012_i16),31949_i16,174_i16];
_14.fld0 = Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(_14.fld3, 0), 1);
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = Field::<[usize; 8]>(Variant(_2, 1), 2);
_14.fld2 = !3222909277304872085_i64;
_16 = [20938_i16,(-23182_i16),15266_i16];
place!(Field::<*const ((*mut u128, u128, bool), u128)>(Variant(_14.fld3, 0), 0)) = core::ptr::addr_of!(_25);
place!(Field::<*mut ((*mut u128, u128, bool), u128)>(Variant(_14.fld3, 0), 1)) = _14.fld0;
_27 = 848966334_u32 as f64;
Call(_26 = fn16(Field::<Adt41>(Variant(_14.fld1, 0), 0), _22.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
place!(Field::<[usize; 8]>(Variant(place!(Field::<Adt41>(Variant(_14.fld1, 0), 0)), 1), 2)) = Field::<[usize; 8]>(Variant(_2, 1), 2);
place!(Field::<[usize; 8]>(Variant(_13, 1), 2)) = [_22.0,_22.0,_3,_11,_11,_22.0,_22.0,_11];
place!(Field::<i8>(Variant(_14.fld1, 0), 1)) = -_23;
_3 = _11 | _11;
_29 = [_23,_23,_23,_23,Field::<i8>(Variant(_14.fld1, 0), 1),Field::<i8>(Variant(_14.fld1, 0), 1)];
SetDiscriminant(_14.fld1, 0);
_21 = _16;
_26 = Field::<[u32; 2]>(Variant(_7, 1), 0);
_29 = [_23,_23,_23,_23,_23,_23];
_30 = [12623959973282586586_u64,608914588278699900_u64,10884936113538341786_u64];
_30 = [5488194562562319623_u64,17669497801642346162_u64,3288467462782106307_u64];
RET = !_19;
_8 = [_23,_23,_23,_23,_23,_23];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(15_usize, 21_usize, Move(_21), 11_usize, Move(_11), 30_usize, Move(_30), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(15_usize, 18_usize, Move(_18), 12_usize, Move(_12), 35_usize, _35, 35_usize, _35), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: Adt41,mut _2: *mut u128) -> [u32; 2] {
mir! {
type RET = [u32; 2];
let _3: f32;
let _4: [u128; 5];
let _5: *mut u128;
let _6: i16;
let _7: usize;
let _8: ((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)));
let _9: [usize; 8];
let _10: bool;
let _11: Adt42;
let _12: isize;
let _13: [u32; 2];
let _14: f32;
let _15: usize;
let _16: [u128; 5];
let _17: [i8; 6];
let _18: Adt48;
let _19: u64;
let _20: char;
let _21: (usize,);
let _22: [u64; 3];
let _23: u32;
let _24: Adt52;
let _25: [usize; 8];
let _26: Adt40;
let _27: isize;
let _28: char;
let _29: ();
let _30: ();
{
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [(-3_i8),(-36_i8),(-104_i8),(-1_i8),(-110_i8),(-119_i8)];
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = [603873619_u32,126307709_u32];
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = [3622899075_u32,4170940291_u32];
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = [58_i8,5_i8,68_i8,(-66_i8),62_i8,(-24_i8)];
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [3_usize,1528951547215651134_usize,3_usize,7_usize,6_usize,17536630459389179479_usize,4_usize,5_usize];
RET = Field::<[u32; 2]>(Variant(_1, 1), 0);
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = [42111494181491865845809606685332919545_u128,210781082673688047369810381861960505277_u128,315866655348186453267701997211808193944_u128,91965291284497672419509055500757490606_u128,1226871967704911179174858211434000401_u128];
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [4145847357445681492_usize,4_usize,12379583647905907935_usize,3175323088398181441_usize,13597049455417888219_usize,3260734712518526021_usize,1_usize,1_usize];
RET = [3178264062_u32,2550338374_u32];
SetDiscriminant(_1, 0);
Goto(bb1)
}
bb1 = {
RET = [2561656246_u32,823152607_u32];
RET = [1862971884_u32,4163426187_u32];
RET = [3861446354_u32,1489410159_u32];
RET = [3120075179_u32,1650649354_u32];
RET = [522960367_u32,657897900_u32];
RET = [3040602506_u32,3164718189_u32];
RET = [3708187813_u32,3277848481_u32];
RET = [2217938651_u32,2130144450_u32];
RET = [1557517455_u32,449245155_u32];
RET = [1501743201_u32,3618381625_u32];
_3 = 1968811729_u32 as f32;
RET = [3998499557_u32,4087565889_u32];
RET = [3318228632_u32,847515516_u32];
RET = [767008762_u32,1556667669_u32];
_3 = 23603_i16 as f32;
_4 = [10305376242387968789409492862823334812_u128,289624797833363213829908192719455229639_u128,233988440255973983676791638584647175275_u128,35894706317223242944770089605127935011_u128,22717837757828395849734451792269006161_u128];
_4 = [191131306419953986762903309381205501587_u128,265112923863122906648424875430937657673_u128,111464093742495641967314953172786238271_u128,268491336419719498930268107128424034054_u128,290837543631124256919601690149190846544_u128];
_3 = 37_isize as f32;
RET = [3114211495_u32,185580930_u32];
RET = [2198360518_u32,3494134713_u32];
_4 = [281967819917115486281113461294383139068_u128,271252852537975641684999866508723725221_u128,196427694157911232260639266923335202392_u128,80305645465310542339093575848447402205_u128,250776179849841390913358092818888278032_u128];
Goto(bb2)
}
bb2 = {
RET = [2572558977_u32,3848008798_u32];
RET = [1498696443_u32,3756025940_u32];
_4 = [53236298257236260734426470246074251454_u128,274303165479016927898294203820359184774_u128,183294042604637576376511255249506260493_u128,274777707333850085547611913437589038728_u128,51432142153420715986478997442482787591_u128];
_3 = 44_u8 as f32;
RET = [3703132440_u32,3013052399_u32];
_6 = -4690_i16;
_5 = _2;
_4 = [75558507927102018628277490480221677227_u128,218097637066877294399271165097648462875_u128,121285316049187835591555767369019570666_u128,69079572804558608613582904978520710150_u128,235710926995013062481371954277786327267_u128];
_4 = [44455070145521767956627430098994915048_u128,57545749324553787087306161737818132991_u128,103620087594385026347086534988097286243_u128,205140794133159870434474533839391476247_u128,131406317463869398131799370980554388301_u128];
_2 = _5;
_4 = [17226052635397497857095300382070255026_u128,58762491544863573878482727177624406449_u128,302520652964388994450480723768539433797_u128,185497244716494895233719662630983388108_u128,136708033771290255482240947025301980773_u128];
_7 = 3_usize * 0_usize;
_5 = _2;
_4 = [329609927890631553303581034784877455180_u128,250180649888799526185848630244303239927_u128,253208902272335277412929033294654136378_u128,100890683850778731013555947726675423246_u128,76757892560883858343566372358830659822_u128];
_3 = 154_u8 as f32;
_8.1.3 = (_2, 183872125878397252551528992149379153506_u128, true);
_6 = (-2605_i16) >> _8.1.3.1;
_5 = _8.1.3.0;
_2 = _5;
RET = [2858218407_u32,3154150033_u32];
match _8.1.3.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
183872125878397252551528992149379153506 => bb7,
_ => bb6
}
}
bb3 = {
RET = [2561656246_u32,823152607_u32];
RET = [1862971884_u32,4163426187_u32];
RET = [3861446354_u32,1489410159_u32];
RET = [3120075179_u32,1650649354_u32];
RET = [522960367_u32,657897900_u32];
RET = [3040602506_u32,3164718189_u32];
RET = [3708187813_u32,3277848481_u32];
RET = [2217938651_u32,2130144450_u32];
RET = [1557517455_u32,449245155_u32];
RET = [1501743201_u32,3618381625_u32];
_3 = 1968811729_u32 as f32;
RET = [3998499557_u32,4087565889_u32];
RET = [3318228632_u32,847515516_u32];
RET = [767008762_u32,1556667669_u32];
_3 = 23603_i16 as f32;
_4 = [10305376242387968789409492862823334812_u128,289624797833363213829908192719455229639_u128,233988440255973983676791638584647175275_u128,35894706317223242944770089605127935011_u128,22717837757828395849734451792269006161_u128];
_4 = [191131306419953986762903309381205501587_u128,265112923863122906648424875430937657673_u128,111464093742495641967314953172786238271_u128,268491336419719498930268107128424034054_u128,290837543631124256919601690149190846544_u128];
_3 = 37_isize as f32;
RET = [3114211495_u32,185580930_u32];
RET = [2198360518_u32,3494134713_u32];
_4 = [281967819917115486281113461294383139068_u128,271252852537975641684999866508723725221_u128,196427694157911232260639266923335202392_u128,80305645465310542339093575848447402205_u128,250776179849841390913358092818888278032_u128];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_10 = _8.1.3.2 | _8.1.3.2;
_8.1.3 = (_2, 29029164083497136551074625326444918327_u128, _10);
_8.1.3.1 = !77589210177716735387002829858918426043_u128;
_8.1.0 = -_3;
_4 = [_8.1.3.1,_8.1.3.1,_8.1.3.1,_8.1.3.1,_8.1.3.1];
_8.1.1 = -_6;
Call(_5 = fn17(_8.1.3, _8.1.3.2, _10, _2, _8.1.3.2, _8.1.3.0, _6, _8.1.3.0, _8.1.3.2), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6 = !_8.1.1;
RET = [267418801_u32,2930654459_u32];
_8.0 = (_7, _5);
_8.1.0 = -_3;
_8.1.3 = (_8.0.1, 259878731462475555876682611048409991923_u128, _10);
RET = [3275194754_u32,596250699_u32];
_8.0.1 = _5;
_8.1.3.2 = _10;
_8.0.0 = !_7;
_8.0 = (_7, _8.1.3.0);
RET = [1030800089_u32,2688529701_u32];
_2 = core::ptr::addr_of_mut!(_8.1.3.1);
_14 = _3;
_8.1.0 = -_3;
match _8.1.3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb6,
6 => bb9,
259878731462475555876682611048409991923 => bb11,
_ => bb10
}
}
bb9 = {
_10 = _8.1.3.2 | _8.1.3.2;
_8.1.3 = (_2, 29029164083497136551074625326444918327_u128, _10);
_8.1.3.1 = !77589210177716735387002829858918426043_u128;
_8.1.0 = -_3;
_4 = [_8.1.3.1,_8.1.3.1,_8.1.3.1,_8.1.3.1,_8.1.3.1];
_8.1.1 = -_6;
Call(_5 = fn17(_8.1.3, _8.1.3.2, _10, _2, _8.1.3.2, _8.1.3.0, _6, _8.1.3.0, _8.1.3.2), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
RET = [843530399_u32,3406428573_u32];
_8.1.1 = 61548_u16 as i16;
_8.1.3.1 = _8.1.0 as u128;
_13 = RET;
_16 = _4;
_8.1.3.0 = core::ptr::addr_of_mut!((*_2));
_9 = [_8.0.0,_7,_8.0.0,_7,_7,_7,_8.0.0,_8.0.0];
_13 = [3146236008_u32,3456807973_u32];
RET = [1992476520_u32,952154115_u32];
_5 = core::ptr::addr_of_mut!((*_2));
_17 = [(-37_i8),100_i8,73_i8,(-65_i8),118_i8,37_i8];
_5 = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
_8.0.1 = core::ptr::addr_of_mut!(_8.1.3.1);
_8.0.0 = _7 << _6;
RET = [1039969632_u32,2047432538_u32];
_2 = _5;
Goto(bb12)
}
bb12 = {
_8.1.0 = 54898_u16 as f32;
_20 = '\u{6ce39}';
_17 = [(-60_i8),(-113_i8),(-9_i8),(-59_i8),8_i8,47_i8];
_10 = _8.1.3.2;
_19 = 798757666938688646_i64 as u64;
_2 = _5;
_8.0 = (_7, _2);
RET = [1498056420_u32,2641815647_u32];
_1 = Adt41::Variant1 { fld0: RET,fld1: _16,fld2: _9,fld3: _17 };
_8.1.3.2 = _8.1.3.1 < (*_5);
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<[u32; 2]>(Variant(_1, 1), 0)) = _13;
_20 = '\u{e3362}';
_7 = !_8.0.0;
_8.1.3.2 = !_10;
_8.1.3 = (_2, 3262834918007301222340597185793212359_u128, _10);
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = [_7,_7,_7,_7,_7,_7,_8.0.0,_7];
_13 = [2434600900_u32,577373598_u32];
_15 = _8.0.0 & _7;
place!(Field::<[usize; 8]>(Variant(_1, 1), 2)) = _9;
_12 = (-9223372036854775808_isize);
place!(Field::<[u128; 5]>(Variant(_1, 1), 1)) = [(*_5),_8.1.3.1,(*_5),_8.1.3.1,_8.1.3.1];
match (*_5) {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb11,
4 => bb5,
3262834918007301222340597185793212359 => bb13,
_ => bb6
}
}
bb13 = {
_9 = [_8.0.0,_8.0.0,_7,_15,_7,_15,_15,_8.0.0];
_23 = (-2493444_i32) as u32;
_8.1.1 = !_6;
_21 = (_15,);
_15 = _19 as usize;
_8.1.3.0 = core::ptr::addr_of_mut!((*_5));
RET = [_23,_23];
_22 = [_19,_19,_19];
_3 = _14 + _8.1.0;
_9 = Field::<[usize; 8]>(Variant(_1, 1), 2);
_19 = !7795628284355365172_u64;
_3 = 43190827406708879466780769062965900015_i128 as f32;
_8.1.3 = (_5, 42002312161339765252446068629996221634_u128, _10);
_23 = (-284855930_i32) as u32;
_8.1.3.2 = !_10;
_8.1.3.0 = core::ptr::addr_of_mut!((*_5));
_8.1.3.0 = core::ptr::addr_of_mut!((*_5));
_8.0 = (_7, _5);
_4 = Field::<[u128; 5]>(Variant(_1, 1), 1);
_26.fld1 = core::ptr::addr_of_mut!(_14);
_8.1.0 = -_14;
Goto(bb14)
}
bb14 = {
_26.fld2.0.1 = !(*_5);
_6 = _8.1.1;
_7 = _21.0 ^ _21.0;
_26.fld2.0.2 = _10 | _10;
_22 = [_19,_19,_19];
_15 = (-624889002_i32) as usize;
_8.1.0 = _14 + _14;
_8.1.0 = _14 - _14;
_20 = '\u{f1024}';
_10 = !_8.1.3.2;
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<[i8; 6]>(Variant(_1, 1), 3)) = _17;
RET = [_23,_23];
SetDiscriminant(_1, 2);
_27 = (-125529013310862715148003614331728687848_i128) as isize;
_8.1.1 = _6;
RET = [_23,_23];
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_1, 2), 6)).1.1 = _6;
_22 = [_19,_19,_19];
place!(Field::<((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)))>(Variant(_1, 2), 6)).0.1 = core::ptr::addr_of_mut!((*_5));
place!(Field::<[usize; 8]>(Variant(_1, 2), 1)) = [_7,_21.0,_7,_7,_7,_7,_7,_7];
_28 = _20;
_8.1.3.1 = _26.fld2.0.1;
_26.fld2.0 = (_5, (*_5), _10);
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(16_usize, 19_usize, Move(_19), 28_usize, Move(_28), 21_usize, Move(_21), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(16_usize, 23_usize, Move(_23), 9_usize, Move(_9), 20_usize, Move(_20), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: (*mut u128, u128, bool),mut _2: bool,mut _3: bool,mut _4: *mut u128,mut _5: bool,mut _6: *mut u128,mut _7: i16,mut _8: *mut u128,mut _9: bool) -> *mut u128 {
mir! {
type RET = *mut u128;
let _10: usize;
let _11: isize;
let _12: ();
let _13: ();
{
_9 = _5 <= _1.2;
_1.1 = 3451261266_u32 as u128;
RET = _8;
_8 = core::ptr::addr_of_mut!(_1.1);
_1.0 = core::ptr::addr_of_mut!(_1.1);
RET = _6;
_6 = _4;
RET = core::ptr::addr_of_mut!((*_8));
_1.1 = 212380599481595532511565510310367601142_u128;
_1.0 = _4;
_1 = (_4, 328165131601722715375074943896334923387_u128, _5);
_9 = (*RET) > (*RET);
_3 = !_9;
_6 = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*_6));
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(17_usize, 2_usize, Move(_2), 5_usize, Move(_5), 13_usize, _13, 13_usize, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: isize,mut _2: (*mut u128, u128, bool),mut _3: u16,mut _4: (*mut u128, u128, bool),mut _5: u128,mut _6: u128,mut _7: *mut u128,mut _8: (*mut u128, u128, bool),mut _9: u16) -> i16 {
mir! {
type RET = i16;
let _10: isize;
let _11: [u64; 3];
let _12: u8;
let _13: [u32; 2];
let _14: ();
let _15: ();
{
RET = -(-24222_i16);
_5 = _4.1 ^ _2.1;
_2.1 = _4.1 ^ _8.1;
Goto(bb1)
}
bb1 = {
_4 = (_2.0, _5, _2.2);
_10 = _1 + _1;
_9 = !_3;
_8.2 = !_2.2;
_2.0 = core::ptr::addr_of_mut!(_5);
_11 = [10896040627501460060_u64,9706166342990937949_u64,6703209925679163906_u64];
_13 = [3154010946_u32,1486034763_u32];
_2 = (_8.0, _5, _4.2);
_13 = [3058694966_u32,1730216908_u32];
RET = 32302_i16 << _5;
_8.0 = _4.0;
_8.1 = _2.1;
Goto(bb2)
}
bb2 = {
Call(_14 = dump_var(18_usize, 11_usize, Move(_11), 5_usize, Move(_5), 13_usize, Move(_13), 3_usize, Move(_3)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: (usize, *mut u128),mut _2: bool,mut _3: bool,mut _4: *mut u128) -> (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)) {
mir! {
type RET = (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool));
let _5: isize;
let _6: [i8; 6];
let _7: [usize; 8];
let _8: Adt42;
let _9: i16;
let _10: *const *mut ((*mut u128, u128, bool), u128);
let _11: Adt47;
let _12: [u64; 3];
let _13: [u128; 5];
let _14: [i8; 6];
let _15: Adt46;
let _16: isize;
let _17: (usize,);
let _18: [u128; 5];
let _19: (usize,);
let _20: [u64; 3];
let _21: isize;
let _22: f64;
let _23: u8;
let _24: *const f32;
let _25: [i8; 6];
let _26: f32;
let _27: [i8; 6];
let _28: Adt42;
let _29: u16;
let _30: i16;
let _31: f32;
let _32: [u128; 5];
let _33: ((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)));
let _34: isize;
let _35: [usize; 8];
let _36: usize;
let _37: *const f32;
let _38: u32;
let _39: u32;
let _40: Adt50;
let _41: [i8; 6];
let _42: [u32; 2];
let _43: f64;
let _44: u128;
let _45: [i16; 3];
let _46: bool;
let _47: [usize; 4];
let _48: i32;
let _49: isize;
let _50: Adt41;
let _51: u32;
let _52: [i16; 3];
let _53: i16;
let _54: char;
let _55: isize;
let _56: isize;
let _57: u16;
let _58: f32;
let _59: isize;
let _60: [i8; 6];
let _61: [i8; 6];
let _62: [i8; 6];
let _63: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool));
let _64: f32;
let _65: i64;
let _66: isize;
let _67: isize;
let _68: f64;
let _69: isize;
let _70: f32;
let _71: [u128; 5];
let _72: ();
let _73: ();
{
RET.3.2 = !_2;
_4 = core::ptr::addr_of_mut!(RET.3.1);
RET.3.0 = core::ptr::addr_of_mut!(RET.3.1);
RET.3.0 = _1.1;
RET.3 = (_1.1, 258849220338589672112801758521983459672_u128, _2);
RET.0 = 64_isize as f32;
_4 = _1.1;
Goto(bb1)
}
bb1 = {
_3 = !_2;
_6 = [(-97_i8),25_i8,18_i8,(-13_i8),77_i8,(-23_i8)];
RET.3.2 = _2 | _3;
RET.3.1 = 23050479786968925773849267466052111611_u128;
_6 = [(-18_i8),113_i8,6_i8,76_i8,(-26_i8),61_i8];
RET.3.1 = 153683893229023140834814315395287237260_u128;
match RET.3.1 {
0 => bb2,
153683893229023140834814315395287237260 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
RET.3.1 = 4377212912279284923_i64 as u128;
_5 = 439121633423525823_i64 as isize;
RET.3.2 = !_3;
RET.0 = (-9092793020819407992_i64) as f32;
RET.3.2 = !_2;
RET.3.0 = core::ptr::addr_of_mut!(RET.3.1);
_1 = (0_usize, _4);
RET.0 = 2459582287_u32 as f32;
RET.1 = (-2157884307215477348_i64) as i16;
_4 = core::ptr::addr_of_mut!(RET.3.1);
_2 = RET.3.2;
RET.3.1 = !90281356934301018305818735693949164637_u128;
RET.0 = 518171883_u32 as f32;
_7 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_2 = _3;
RET.0 = (-112_i8) as f32;
RET.3.0 = _1.1;
RET.3.2 = _3;
RET.3 = (_1.1, 145643783560223007982628665602559996966_u128, _2);
RET.3 = (_4, 117800410514108882971669721512698660686_u128, _3);
_1.1 = _4;
Goto(bb5)
}
bb5 = {
RET.3.0 = core::ptr::addr_of_mut!(RET.3.1);
RET.3.1 = !300681896764858802975093714536570323295_u128;
_11.fld3 = 64767_u16;
_1 = (15356733311403943059_usize, _4);
_1 = (1_usize, _4);
_1.1 = core::ptr::addr_of_mut!((*_4));
_5 = -9223372036854775807_isize;
_9 = RET.1;
_5 = (-11_isize) ^ 9223372036854775807_isize;
_11.fld2 = core::ptr::addr_of!(RET.0);
_12 = [8077595183461073964_u64,3877161166399338731_u64,486472120122056670_u64];
match _1.0 {
0 => bb1,
1 => bb7,
_ => bb6
}
}
bb6 = {
Return()
}
bb7 = {
_14 = [52_i8,9_i8,19_i8,97_i8,(-54_i8),(-81_i8)];
RET.0 = 58_u8 as f32;
RET.3.2 = !_3;
_1.0 = !0_usize;
_11.fld2 = core::ptr::addr_of!(RET.0);
RET.3 = (_4, 170413130074398173773895978663122795109_u128, _3);
_12 = [13004467705288041472_u64,6830554853570672460_u64,1634386602622738046_u64];
RET.3.0 = _1.1;
_5 = 9223372036854775807_isize;
RET.0 = 18099581874471049023_u64 as f32;
_9 = RET.1;
RET.3.0 = _1.1;
_1 = (14625277863812188461_usize, RET.3.0);
RET.3 = (_4, 310320251735727351484946819314927380091_u128, _3);
_7 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
RET.3 = (_1.1, 255229495645828092106149244156647561327_u128, _3);
RET.3.1 = 311928001631951442419484115143644156380_u128 << _1.0;
_17.0 = _1.0 | _1.0;
Goto(bb8)
}
bb8 = {
_19 = (_17.0,);
_17.0 = _1.0;
RET.0 = 15138128272418427093_u64 as f32;
_11.fld0 = _5 as u64;
_17 = _19;
_16 = !_5;
_2 = RET.3.2 < _3;
_6 = [(-88_i8),(-76_i8),(-117_i8),33_i8,114_i8,(-123_i8)];
_4 = _1.1;
_17 = (_1.0,);
_16 = !_5;
_5 = _11.fld3 as isize;
_5 = _16 + _16;
_17.0 = _19.0 >> _19.0;
_11.fld3 = 12749_u16 - 15261_u16;
_10 = core::ptr::addr_of!(RET.2);
match _1.0 {
0 => bb9,
1 => bb10,
2 => bb11,
14625277863812188461 => bb13,
_ => bb12
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
RET.3.0 = core::ptr::addr_of_mut!(RET.3.1);
RET.3.1 = !300681896764858802975093714536570323295_u128;
_11.fld3 = 64767_u16;
_1 = (15356733311403943059_usize, _4);
_1 = (1_usize, _4);
_1.1 = core::ptr::addr_of_mut!((*_4));
_5 = -9223372036854775807_isize;
_9 = RET.1;
_5 = (-11_isize) ^ 9223372036854775807_isize;
_11.fld2 = core::ptr::addr_of!(RET.0);
_12 = [8077595183461073964_u64,3877161166399338731_u64,486472120122056670_u64];
match _1.0 {
0 => bb1,
1 => bb7,
_ => bb6
}
}
bb12 = {
Return()
}
bb13 = {
RET.1 = _9;
_1.1 = core::ptr::addr_of_mut!(RET.3.1);
_17.0 = !_1.0;
_1 = (_19.0, RET.3.0);
_18 = [RET.3.1,RET.3.1,RET.3.1,RET.3.1,RET.3.1];
_4 = core::ptr::addr_of_mut!(RET.3.1);
RET.1 = _9 >> (*_4);
_7 = [_1.0,_1.0,_1.0,_1.0,_19.0,_17.0,_1.0,_1.0];
RET.3.2 = _1.0 != _19.0;
_1 = (_17.0, RET.3.0);
RET.3 = (_4, 335624133679152437612738313772192574840_u128, _2);
_17 = _19;
_11.fld3 = 62874_u16;
_20 = [_11.fld0,_11.fld0,_11.fld0];
_18 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
_19.0 = _17.0 ^ _17.0;
_13 = _18;
RET.3 = (_4, 186343951911580480340100710644430120877_u128, _3);
match (*_4) {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
6 => bb20,
186343951911580480340100710644430120877 => bb22,
_ => bb21
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_14 = [52_i8,9_i8,19_i8,97_i8,(-54_i8),(-81_i8)];
RET.0 = 58_u8 as f32;
RET.3.2 = !_3;
_1.0 = !0_usize;
_11.fld2 = core::ptr::addr_of!(RET.0);
RET.3 = (_4, 170413130074398173773895978663122795109_u128, _3);
_12 = [13004467705288041472_u64,6830554853570672460_u64,1634386602622738046_u64];
RET.3.0 = _1.1;
_5 = 9223372036854775807_isize;
RET.0 = 18099581874471049023_u64 as f32;
_9 = RET.1;
RET.3.0 = _1.1;
_1 = (14625277863812188461_usize, RET.3.0);
RET.3 = (_4, 310320251735727351484946819314927380091_u128, _3);
_7 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
RET.3 = (_1.1, 255229495645828092106149244156647561327_u128, _3);
RET.3.1 = 311928001631951442419484115143644156380_u128 << _1.0;
_17.0 = _1.0 | _1.0;
Goto(bb8)
}
bb20 = {
Return()
}
bb21 = {
RET.3.1 = 4377212912279284923_i64 as u128;
_5 = 439121633423525823_i64 as isize;
RET.3.2 = !_3;
RET.0 = (-9092793020819407992_i64) as f32;
RET.3.2 = !_2;
RET.3.0 = core::ptr::addr_of_mut!(RET.3.1);
_1 = (0_usize, _4);
RET.0 = 2459582287_u32 as f32;
RET.1 = (-2157884307215477348_i64) as i16;
_4 = core::ptr::addr_of_mut!(RET.3.1);
_2 = RET.3.2;
RET.3.1 = !90281356934301018305818735693949164637_u128;
RET.0 = 518171883_u32 as f32;
_7 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_2 = _3;
RET.0 = (-112_i8) as f32;
RET.3.0 = _1.1;
RET.3.2 = _3;
RET.3 = (_1.1, 145643783560223007982628665602559996966_u128, _2);
RET.3 = (_4, 117800410514108882971669721512698660686_u128, _3);
_1.1 = _4;
Goto(bb5)
}
bb22 = {
RET.3.2 = _17.0 < _19.0;
_10 = core::ptr::addr_of!(RET.2);
_9 = _11.fld3 as i16;
_22 = _11.fld0 as f64;
_4 = RET.3.0;
RET.3 = (_4, 308384847593769071171055276301234285420_u128, _2);
_10 = core::ptr::addr_of!((*_10));
RET.1 = _9 + _9;
RET.0 = _9 as f32;
RET.1 = _9 + _9;
RET.1 = !_9;
_1.1 = core::ptr::addr_of_mut!(RET.3.1);
_23 = (-2319658824569399212_i64) as u8;
_1.1 = _4;
_20 = [_11.fld0,_11.fld0,_11.fld0];
_25 = [89_i8,(-125_i8),37_i8,(-87_i8),59_i8,81_i8];
_1.0 = !_19.0;
_25 = [(-90_i8),(-106_i8),(-93_i8),22_i8,(-8_i8),111_i8];
_11.fld2 = core::ptr::addr_of!(_26);
_21 = _5 ^ _5;
_5 = _21 | _21;
_17.0 = _22 as usize;
_2 = RET.3.1 < RET.3.1;
RET.3.2 = !_2;
_4 = core::ptr::addr_of_mut!(RET.3.1);
match (*_4) {
0 => bb1,
1 => bb2,
2 => bb15,
3 => bb12,
4 => bb16,
5 => bb6,
308384847593769071171055276301234285420 => bb23,
_ => bb8
}
}
bb23 = {
_5 = (-70648015515220445089963878920381199205_i128) as isize;
_24 = core::ptr::addr_of!(_26);
RET.3.1 = 78580860840660006896747925359608266557_u128;
_21 = -_16;
_20 = [_11.fld0,_11.fld0,_11.fld0];
Call(_22 = core::intrinsics::transmute(_19.0), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
RET.1 = _9;
_23 = !174_u8;
_23 = _21 as u8;
_1 = (_19.0, RET.3.0);
RET.1 = -_9;
_12 = [_11.fld0,_11.fld0,_11.fld0];
_17.0 = !_1.0;
_27 = [(-40_i8),98_i8,(-98_i8),(-84_i8),(-116_i8),(-60_i8)];
_19 = _17;
RET.0 = _23 as f32;
RET.3.2 = _3;
RET.3.0 = _1.1;
Goto(bb25)
}
bb25 = {
_31 = RET.0 * RET.0;
RET.3.1 = 272941772997449433185590802539691426598_u128;
_16 = _5;
_33.1.3.0 = _1.1;
_1 = (_17.0, RET.3.0);
RET.3.1 = !306566689730357546424773288362044608199_u128;
_31 = RET.0 + RET.0;
_30 = RET.1 + RET.1;
RET.0 = -_31;
RET.3.1 = !192201023787079188157642713828444249885_u128;
_6 = _25;
_33.0 = (_17.0, _33.1.3.0);
_33.0.0 = '\u{d41f8}' as usize;
_12 = [_11.fld0,_11.fld0,_11.fld0];
_33.1.0 = -_31;
_21 = !_16;
_34 = _16;
_9 = -RET.1;
_21 = -_34;
Goto(bb26)
}
bb26 = {
_27 = _6;
_1.1 = _33.0.1;
_2 = _3;
Goto(bb27)
}
bb27 = {
_1.0 = 725526553_u32 as usize;
_34 = _11.fld0 as isize;
_32 = [(*_4),RET.3.1,(*_4),(*_4),(*_4)];
_35 = _7;
_25 = [74_i8,(-34_i8),(-54_i8),(-80_i8),4_i8,(-52_i8)];
RET.0 = _11.fld3 as f32;
_29 = _11.fld3;
RET.0 = _33.1.0 * _31;
RET.3.1 = 32996813194606496678216611967243181029_u128 + 172752326121497183526404425393490195195_u128;
_33.0.1 = _33.1.3.0;
_16 = _34;
_18 = [(*_4),(*_4),(*_4),RET.3.1,(*_4)];
_4 = core::ptr::addr_of_mut!(_33.1.3.1);
_20 = [_11.fld0,_11.fld0,_11.fld0];
_41 = _14;
_36 = !_17.0;
_29 = '\u{beb88}' as u16;
_5 = (-703358005_i32) as isize;
match _11.fld3 {
0 => bb11,
1 => bb21,
2 => bb17,
3 => bb23,
4 => bb5,
5 => bb26,
6 => bb24,
62874 => bb29,
_ => bb28
}
}
bb28 = {
Return()
}
bb29 = {
_39 = 808142903_u32;
_33.1.3.1 = 1459831164_i32 as u128;
RET.1 = _9;
_35 = [_17.0,_17.0,_19.0,_36,_17.0,_36,_36,_17.0];
_18 = [(*_4),(*_4),RET.3.1,(*_4),_33.1.3.1];
_39 = (-156093380877500791123209363621373533657_i128) as u32;
_10 = core::ptr::addr_of!(RET.2);
_1.1 = core::ptr::addr_of_mut!((*_4));
_36 = !_17.0;
_12 = _20;
_11.fld0 = 15408250920398270756_u64 & 11739258581351631399_u64;
_33.1.3.2 = RET.3.2;
_33.1.3 = RET.3;
_27 = _6;
_14 = _6;
_33.1.0 = _31;
_1.0 = _5 as usize;
Goto(bb30)
}
bb30 = {
_38 = _39 ^ _39;
_5 = _11.fld0 as isize;
_33.1.3 = (RET.3.0, RET.3.1, _3);
_36 = _19.0 << RET.1;
_33.0.1 = core::ptr::addr_of_mut!((*_4));
_35 = [_17.0,_19.0,_17.0,_36,_17.0,_17.0,_17.0,_19.0];
_37 = core::ptr::addr_of!(_33.1.0);
_33.1.3.2 = _31 > _31;
RET.3.1 = !(*_4);
_22 = _29 as f64;
_12 = [_11.fld0,_11.fld0,_11.fld0];
_26 = (*_37) * (*_37);
_1.0 = _34 as usize;
_27 = _14;
_33.0.0 = _17.0 - _19.0;
_33.0 = _1;
_18 = _13;
_44 = (*_4);
_9 = !_30;
_34 = _21;
_34 = !_5;
_14 = _6;
_6 = [(-93_i8),30_i8,38_i8,116_i8,2_i8,53_i8];
match _11.fld3 {
0 => bb10,
62874 => bb31,
_ => bb16
}
}
bb31 = {
_43 = _22 - _22;
RET.3.0 = core::ptr::addr_of_mut!((*_4));
_27 = [(-81_i8),(-99_i8),(-128_i8),68_i8,(-89_i8),(-56_i8)];
_10 = core::ptr::addr_of!(RET.2);
_42 = [_39,_39];
_1.1 = core::ptr::addr_of_mut!((*_4));
Goto(bb32)
}
bb32 = {
_17.0 = _36;
RET.1 = _30;
_11.fld2 = core::ptr::addr_of!(_26);
_38 = 668320970_i32 as u32;
_21 = _43 as isize;
_33.1.3.0 = core::ptr::addr_of_mut!(RET.3.1);
_25 = [126_i8,88_i8,(-23_i8),8_i8,(-2_i8),(-37_i8)];
_41 = [(-63_i8),44_i8,(-27_i8),118_i8,(-128_i8),(-16_i8)];
_39 = '\u{98524}' as u32;
RET.3.2 = !_3;
_44 = RET.3.1;
RET.3.1 = _44 << _19.0;
_46 = _3;
_17.0 = !_36;
_27 = [125_i8,9_i8,(-116_i8),14_i8,(-84_i8),(-50_i8)];
_7 = [_36,_36,_36,_36,_36,_17.0,_36,_19.0];
_33.1.3 = (_1.1, RET.3.1, _3);
RET.0 = _39 as f32;
_33.1.1 = !_9;
_36 = (-2296075658222418899_i64) as usize;
_20 = [_11.fld0,_11.fld0,_11.fld0];
_6 = [(-86_i8),15_i8,29_i8,(-31_i8),114_i8,(-17_i8)];
Goto(bb33)
}
bb33 = {
_4 = core::ptr::addr_of_mut!((*_4));
_41 = _6;
RET.1 = _33.1.1 * _33.1.1;
_47 = [_19.0,_17.0,_17.0,_19.0];
RET.3 = (_1.1, _33.1.3.1, _33.1.3.2);
RET.3 = (_1.1, _33.1.3.1, _2);
_29 = !_11.fld3;
_44 = RET.3.1 >> RET.3.1;
_45 = [_30,_33.1.1,_30];
_26 = _31;
_33.1.3.1 = RET.3.1;
_29 = _11.fld3 << (*_4);
_51 = (-95_i8) as u32;
Goto(bb34)
}
bb34 = {
_33.0 = (_17.0, _4);
_43 = _22;
_33.1.0 = (*_24) * (*_24);
Goto(bb35)
}
bb35 = {
_31 = _43 as f32;
_48 = 1023437256_i32 - (-1259032654_i32);
_11.fld2 = core::ptr::addr_of!(_33.1.0);
_17.0 = _33.1.3.2 as usize;
_17 = (_33.0.0,);
_40 = Adt50::Variant1 { fld0: '\u{f6975}' };
_46 = !_33.1.3.2;
_21 = _34 >> (*_4);
_21 = _5;
_49 = _11.fld0 as isize;
_38 = !_39;
_24 = _11.fld2;
place!(Field::<char>(Variant(_40, 1), 0)) = '\u{6a987}';
_48 = -1583866173_i32;
_42 = [_38,_38];
_11.fld3 = _29;
_32 = [RET.3.1,RET.3.1,_33.1.3.1,(*_4),_33.1.3.1];
place!(Field::<char>(Variant(_40, 1), 0)) = '\u{871e}';
_17.0 = _33.0.0 + _33.0.0;
RET.1 = _9 - _33.1.1;
_54 = Field::<char>(Variant(_40, 1), 0);
_13 = [RET.3.1,(*_4),(*_4),_33.1.3.1,(*_4)];
_32 = _18;
_44 = RET.3.1 + RET.3.1;
Goto(bb36)
}
bb36 = {
RET.3.1 = !(*_4);
_17.0 = _33.0.0;
_6 = [116_i8,88_i8,(-119_i8),(-4_i8),75_i8,121_i8];
_14 = [15_i8,50_i8,85_i8,12_i8,(-33_i8),(-51_i8)];
Goto(bb37)
}
bb37 = {
SetDiscriminant(_40, 1);
_26 = _31;
_58 = -_33.1.0;
_51 = !_39;
_57 = _11.fld3 * _29;
Goto(bb38)
}
bb38 = {
_18 = _13;
_33.0.0 = _23 as usize;
_62 = [95_i8,103_i8,(-2_i8),54_i8,79_i8,65_i8];
_43 = _22 - _22;
_49 = !_34;
_24 = core::ptr::addr_of!(RET.0);
_35 = _7;
_53 = _33.1.1;
_33.1.0 = -_58;
_3 = _33.1.3.2;
_44 = !(*_4);
_60 = [(-96_i8),(-51_i8),113_i8,31_i8,(-46_i8),5_i8];
_19.0 = !_33.0.0;
RET.3.0 = core::ptr::addr_of_mut!(_44);
_30 = RET.1 ^ _33.1.1;
Goto(bb39)
}
bb39 = {
_56 = _21;
_29 = !_57;
_48 = 210669290_i32;
_17.0 = 4398482236938342806_i64 as usize;
_7 = [_17.0,_19.0,_36,_17.0,_1.0,_33.0.0,_1.0,_19.0];
_22 = _43 * _43;
_60 = [(-18_i8),118_i8,(-60_i8),97_i8,72_i8,56_i8];
_63.1 = _30;
_35 = [_19.0,_36,_1.0,_19.0,_17.0,_1.0,_36,_19.0];
_6 = [121_i8,(-73_i8),104_i8,(-95_i8),5_i8,51_i8];
Goto(bb40)
}
bb40 = {
_55 = _49;
_27 = _41;
_18 = [_44,(*_4),(*_4),_44,(*_4)];
_9 = !_30;
_5 = _55;
_16 = _39 as isize;
_9 = -_63.1;
_64 = _58;
_29 = !_11.fld3;
_34 = _22 as isize;
RET.0 = -_58;
_63.3.1 = !RET.3.1;
match _48 {
0 => bb26,
1 => bb38,
2 => bb41,
3 => bb42,
210669290 => bb44,
_ => bb43
}
}
bb41 = {
_43 = _22 - _22;
RET.3.0 = core::ptr::addr_of_mut!((*_4));
_27 = [(-81_i8),(-99_i8),(-128_i8),68_i8,(-89_i8),(-56_i8)];
_10 = core::ptr::addr_of!(RET.2);
_42 = [_39,_39];
_1.1 = core::ptr::addr_of_mut!((*_4));
Goto(bb32)
}
bb42 = {
RET.3.2 = _17.0 < _19.0;
_10 = core::ptr::addr_of!(RET.2);
_9 = _11.fld3 as i16;
_22 = _11.fld0 as f64;
_4 = RET.3.0;
RET.3 = (_4, 308384847593769071171055276301234285420_u128, _2);
_10 = core::ptr::addr_of!((*_10));
RET.1 = _9 + _9;
RET.0 = _9 as f32;
RET.1 = _9 + _9;
RET.1 = !_9;
_1.1 = core::ptr::addr_of_mut!(RET.3.1);
_23 = (-2319658824569399212_i64) as u8;
_1.1 = _4;
_20 = [_11.fld0,_11.fld0,_11.fld0];
_25 = [89_i8,(-125_i8),37_i8,(-87_i8),59_i8,81_i8];
_1.0 = !_19.0;
_25 = [(-90_i8),(-106_i8),(-93_i8),22_i8,(-8_i8),111_i8];
_11.fld2 = core::ptr::addr_of!(_26);
_21 = _5 ^ _5;
_5 = _21 | _21;
_17.0 = _22 as usize;
_2 = RET.3.1 < RET.3.1;
RET.3.2 = !_2;
_4 = core::ptr::addr_of_mut!(RET.3.1);
match (*_4) {
0 => bb1,
1 => bb2,
2 => bb15,
3 => bb12,
4 => bb16,
5 => bb6,
308384847593769071171055276301234285420 => bb23,
_ => bb8
}
}
bb43 = {
SetDiscriminant(_40, 1);
_26 = _31;
_58 = -_33.1.0;
_51 = !_39;
_57 = _11.fld3 * _29;
Goto(bb38)
}
bb44 = {
_9 = !_63.1;
_44 = RET.3.1 + _63.3.1;
_29 = !_11.fld3;
_13 = _32;
_41 = _60;
Goto(bb45)
}
bb45 = {
_48 = 1115795111_i32;
_26 = (-73543215610891159935034907114179847090_i128) as f32;
_37 = core::ptr::addr_of!((*_24));
_60 = _6;
RET.3.0 = core::ptr::addr_of_mut!(_33.1.3.1);
_20 = [_11.fld0,_11.fld0,_11.fld0];
_27 = [(-59_i8),(-82_i8),(-16_i8),18_i8,8_i8,(-119_i8)];
RET.3.1 = (*_4) >> (*_4);
Goto(bb46)
}
bb46 = {
place!(Field::<char>(Variant(_40, 1), 0)) = _54;
RET.3 = (_33.0.1, (*_4), _3);
_20 = [_11.fld0,_11.fld0,_11.fld0];
_39 = !_38;
_63.1 = _9 - _53;
_33.1.3 = (_33.0.1, _44, _3);
_59 = _11.fld0 as isize;
_34 = _55 & _56;
_21 = _59 & _16;
_29 = _11.fld3 | _11.fld3;
RET.3.0 = core::ptr::addr_of_mut!((*_4));
place!(Field::<char>(Variant(_40, 1), 0)) = _54;
match _48 {
0 => bb47,
1 => bb48,
1115795111 => bb50,
_ => bb49
}
}
bb47 = {
_48 = 1115795111_i32;
_26 = (-73543215610891159935034907114179847090_i128) as f32;
_37 = core::ptr::addr_of!((*_24));
_60 = _6;
RET.3.0 = core::ptr::addr_of_mut!(_33.1.3.1);
_20 = [_11.fld0,_11.fld0,_11.fld0];
_27 = [(-59_i8),(-82_i8),(-16_i8),18_i8,8_i8,(-119_i8)];
RET.3.1 = (*_4) >> (*_4);
Goto(bb46)
}
bb48 = {
RET.3.2 = _17.0 < _19.0;
_10 = core::ptr::addr_of!(RET.2);
_9 = _11.fld3 as i16;
_22 = _11.fld0 as f64;
_4 = RET.3.0;
RET.3 = (_4, 308384847593769071171055276301234285420_u128, _2);
_10 = core::ptr::addr_of!((*_10));
RET.1 = _9 + _9;
RET.0 = _9 as f32;
RET.1 = _9 + _9;
RET.1 = !_9;
_1.1 = core::ptr::addr_of_mut!(RET.3.1);
_23 = (-2319658824569399212_i64) as u8;
_1.1 = _4;
_20 = [_11.fld0,_11.fld0,_11.fld0];
_25 = [89_i8,(-125_i8),37_i8,(-87_i8),59_i8,81_i8];
_1.0 = !_19.0;
_25 = [(-90_i8),(-106_i8),(-93_i8),22_i8,(-8_i8),111_i8];
_11.fld2 = core::ptr::addr_of!(_26);
_21 = _5 ^ _5;
_5 = _21 | _21;
_17.0 = _22 as usize;
_2 = RET.3.1 < RET.3.1;
RET.3.2 = !_2;
_4 = core::ptr::addr_of_mut!(RET.3.1);
match (*_4) {
0 => bb1,
1 => bb2,
2 => bb15,
3 => bb12,
4 => bb16,
5 => bb6,
308384847593769071171055276301234285420 => bb23,
_ => bb8
}
}
bb49 = {
_3 = !_2;
_6 = [(-97_i8),25_i8,18_i8,(-13_i8),77_i8,(-23_i8)];
RET.3.2 = _2 | _3;
RET.3.1 = 23050479786968925773849267466052111611_u128;
_6 = [(-18_i8),113_i8,6_i8,76_i8,(-26_i8),61_i8];
RET.3.1 = 153683893229023140834814315395287237260_u128;
match RET.3.1 {
0 => bb2,
153683893229023140834814315395287237260 => bb4,
_ => bb3
}
}
bb50 = {
_20 = [_11.fld0,_11.fld0,_11.fld0];
SetDiscriminant(_40, 2);
_33.1.0 = -_58;
_6 = [80_i8,28_i8,(-60_i8),(-65_i8),112_i8,86_i8];
RET.3.1 = _11.fld0 as u128;
place!(Field::<Adt40>(Variant(_40, 2), 2)).fld2.0.2 = RET.3.2 ^ _3;
RET.2 = core::ptr::addr_of_mut!(place!(Field::<Adt40>(Variant(_40, 2), 2)).fld2);
_61 = [(-114_i8),(-44_i8),13_i8,126_i8,(-44_i8),(-2_i8)];
place!(Field::<Adt40>(Variant(_40, 2), 2)).fld2.1 = !(*_4);
_27 = _25;
_52 = [_63.1,_63.1,_33.1.1];
_10 = core::ptr::addr_of!(_11.fld1);
_68 = _29 as f64;
_71 = _32;
_55 = _21 | _59;
_11 = Adt47 { fld0: 1375824882094994450_u64,fld1: RET.2,fld2: _24,fld3: _57 };
Goto(bb51)
}
bb51 = {
Call(_72 = dump_var(19_usize, 53_usize, Move(_53), 34_usize, Move(_34), 44_usize, Move(_44), 23_usize, Move(_23)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_72 = dump_var(19_usize, 46_usize, Move(_46), 21_usize, Move(_21), 36_usize, Move(_36), 20_usize, Move(_20)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_72 = dump_var(19_usize, 17_usize, Move(_17), 55_usize, Move(_55), 6_usize, Move(_6), 62_usize, Move(_62)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_72 = dump_var(19_usize, 3_usize, Move(_3), 60_usize, Move(_60), 25_usize, Move(_25), 29_usize, Move(_29)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_72 = dump_var(19_usize, 56_usize, Move(_56), 18_usize, Move(_18), 42_usize, Move(_42), 32_usize, Move(_32)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_72 = dump_var(19_usize, 14_usize, Move(_14), 59_usize, Move(_59), 39_usize, Move(_39), 73_usize, _73), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(7354521748340481089_u64), std::hint::black_box(24214_u16), std::hint::black_box(9223372036854775807_isize), std::hint::black_box(2727632507_u32), std::hint::black_box(30093_i16));
                
            }
#[derive(Debug)]
pub struct Adt40 {
fld0: *const f32,
fld1: *mut f32,
fld2: ((*mut u128, u128, bool), u128),
}
#[derive(Debug,Copy,Clone)]
pub enum Adt41 {
Variant0{
fld0: *const ((*mut u128, u128, bool), u128),
fld1: *mut ((*mut u128, u128, bool), u128),

},
Variant1{
fld0: [u32; 2],
fld1: [u128; 5],
fld2: [usize; 8],
fld3: [i8; 6],

},
Variant2{
fld0: bool,
fld1: [usize; 8],
fld2: *mut i64,
fld3: u16,
fld4: i16,
fld5: f32,
fld6: ((usize, *mut u128), (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool))),
fld7: [usize; 4],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: *const ((*mut u128, u128, bool), u128),
fld1: [u128; 5],
fld2: f64,
fld3: f32,
fld4: Adt41,
fld5: (usize, *mut u128),
fld6: i64,

},
Variant1{
fld0: ((*mut u128, u128, bool), u128),
fld1: Adt41,
fld2: u128,
fld3: [u128; 5],
fld4: [usize; 4],
fld5: *const u128,
fld6: i64,

},
Variant2{
fld0: u32,
fld1: [usize; 4],
fld2: Adt41,
fld3: i8,
fld4: usize,

}}
#[derive(Debug)]
pub struct Adt43 {
fld0: *mut f32,
fld1: usize,
}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: Adt41,
fld1: i8,
fld2: i128,

},
Variant1{
fld0: *mut ((*mut u128, u128, bool), u128),
fld1: *mut u8,
fld2: *mut i64,
fld3: u32,
fld4: [u128; 5],

},
Variant2{
fld0: *mut u8,
fld1: [u32; 2],
fld2: isize,
fld3: ((*mut u128, u128, bool), u128),
fld4: Adt40,
fld5: *mut u128,
fld6: i64,
fld7: u128,

}}
#[derive(Debug)]
pub struct Adt45 {
fld0: *mut ((*mut u128, u128, bool), u128),
fld1: Adt44,
fld2: i64,
fld3: Adt41,
fld4: i128,
}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: Adt45,

},
Variant1{
fld0: *const u128,
fld1: (usize, *mut u128),
fld2: [usize; 4],

}}
#[derive(Debug)]
pub struct Adt47 {
fld0: u64,
fld1: *mut ((*mut u128, u128, bool), u128),
fld2: *const f32,
fld3: u16,
}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt46,
fld1: Adt45,
fld2: Adt47,
fld3: (*mut u128, u128, bool),
fld4: u16,
fld5: u32,
fld6: i64,
fld7: usize,

},
Variant1{
fld0: (usize,),

},
Variant2{
fld0: Adt43,

},
Variant3{
fld0: bool,
fld1: *mut f32,
fld2: Adt45,
fld3: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)),
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: *const ((*mut u128, u128, bool), u128),
fld1: Adt44,
fld2: Adt47,
fld3: *const *mut ((*mut u128, u128, bool), u128),

},
Variant1{
fld0: bool,

},
Variant2{
fld0: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)),
fld1: *mut i64,
fld2: [u32; 2],
fld3: *const f32,
fld4: [usize; 8],
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: *mut i64,
fld1: char,
fld2: [usize; 4],
fld3: usize,
fld4: u16,
fld5: *mut u128,
fld6: [u32; 2],
fld7: (usize,),

},
Variant1{
fld0: char,

},
Variant2{
fld0: *mut u8,
fld1: u32,
fld2: Adt40,
fld3: *const ((*mut u128, u128, bool), u128),

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt45,

},
Variant1{
fld0: [u64; 3],
fld1: *mut i64,

},
Variant2{
fld0: i32,
fld1: *const *mut ((*mut u128, u128, bool), u128),
fld2: [u128; 5],

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: bool,
fld1: [u128; 5],
fld2: isize,
fld3: Adt44,
fld4: f64,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: [u64; 3],
fld1: char,
fld2: *mut ((*mut u128, u128, bool), u128),
fld3: *const f32,
fld4: Adt46,
fld5: Adt50,

},
Variant1{
fld0: Adt40,
fld1: *mut u128,

}}
#[derive(Debug)]
pub struct Adt54 {
fld0: i64,
fld1: (*mut u128, u128, bool),
fld2: i32,
fld3: i8,
fld4: Adt44,
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: i32,

},
Variant1{
fld0: bool,
fld1: [i8; 6],
fld2: Adt46,
fld3: [u64; 3],
fld4: *mut u8,
fld5: i32,

},
Variant2{
fld0: Adt49,
fld1: [u32; 2],
fld2: *const u128,
fld3: i128,
fld4: Adt53,
fld5: i32,
fld6: u32,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *const *mut ((*mut u128, u128, bool), u128),
fld1: Adt44,
fld2: Adt55,
fld3: [u32; 2],
fld4: i32,

},
Variant1{
fld0: usize,
fld1: (usize, *mut u128),
fld2: u64,
fld3: [i8; 6],
fld4: Adt55,
fld5: (f32, i16, *mut ((*mut u128, u128, bool), u128), (*mut u128, u128, bool)),
fld6: Adt43,

},
Variant2{
fld0: Adt46,

},
Variant3{
fld0: (*mut u128, u128, bool),
fld1: *const ((*mut u128, u128, bool), u128),

}}

