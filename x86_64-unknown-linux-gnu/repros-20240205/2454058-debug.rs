#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i128,mut _2: i8) -> ([u32; 4], [i64; 1]) {
mir! {
type RET = ([u32; 4], [i64; 1]);
let _3: bool;
let _4: [u16; 4];
let _5: u16;
let _6: Adt46;
let _7: *mut i64;
let _8: u16;
let _9: Adt54;
let _10: Adt57;
let _11: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _12: *mut isize;
let _13: char;
let _14: Adt54;
let _15: Adt44;
let _16: Adt53;
let _17: u32;
let _18: Adt55;
let _19: *const u128;
let _20: (u8, *mut i64, i8, *const u128, (i32,));
let _21: [u16; 4];
let _22: isize;
let _23: char;
let _24: u64;
let _25: Adt53;
let _26: Adt49;
let _27: (u16, u32, i64);
let _28: Adt48;
let _29: Adt52;
let _30: ();
let _31: ();
{
RET.0 = [678702478_u32,3058751713_u32,889972131_u32,1336674335_u32];
RET.1 = [(-3472461651225983929_i64)];
_1 = !60502294704685684337515195392065282617_i128;
_1 = -(-106291776603094703948915829947652341335_i128);
_3 = _1 > _1;
_2 = !(-27_i8);
_1 = (-87936103426424046249440364812276819767_i128);
_4 = [7318_u16,38356_u16,59920_u16,25515_u16];
_3 = _2 > _2;
RET.0 = [3881505963_u32,897991341_u32,54938914_u32,228302328_u32];
RET.0 = [2826323480_u32,3090788363_u32,2532678632_u32,206573222_u32];
Call(_2 = fn1(RET.0, _1, _4, RET.0, _4, RET.0, RET.0, _1, RET.0, _4, RET.0, RET, _1, RET.0, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = (-44418198410655240515347986948552002586_i128) << _2;
_3 = true;
_3 = !true;
_1 = 158712175195912633308482535739828742379_i128;
RET.1 = [(-2440657175244349883_i64)];
_5 = !54772_u16;
RET.0 = [3112040330_u32,4169288558_u32,2955555313_u32,2752998857_u32];
Goto(bb2)
}
bb2 = {
RET.0 = [2805878446_u32,2208427841_u32,4065930820_u32,3547399854_u32];
_4 = [_5,_5,_5,_5];
_3 = !true;
_5 = 7698_u16;
match _5 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
7698 => bb8,
_ => bb7
}
}
bb3 = {
_1 = (-44418198410655240515347986948552002586_i128) << _2;
_3 = true;
_3 = !true;
_1 = 158712175195912633308482535739828742379_i128;
RET.1 = [(-2440657175244349883_i64)];
_5 = !54772_u16;
RET.0 = [3112040330_u32,4169288558_u32,2955555313_u32,2752998857_u32];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET.0 = [2995995748_u32,2608534454_u32,3448800416_u32,2590005786_u32];
RET.0 = [1784384247_u32,3945235968_u32,235626745_u32,186865272_u32];
RET.1 = [6207347292140293569_i64];
RET.0 = [1719255861_u32,606784665_u32,2878893813_u32,3145538013_u32];
_11.1 = -(-265611180_i32);
_11.2 = !_3;
_1 = (-125180430361315551834934204641167373738_i128) + (-107062754413945820247653635570474900527_i128);
_11.3 = [_5,_5,_5,_5];
_3 = _11.1 < _11.1;
_5 = 15284_u16 | 41561_u16;
_11.0 = (RET.0, RET.1);
RET = _11.0;
_2 = _5 as i8;
_3 = _11.2;
_11.0.1 = [589964239506480650_i64];
_11 = (RET, 770369184_i32, _3, _4);
RET.1 = _11.0.1;
Goto(bb9)
}
bb9 = {
_8 = !_5;
_11.1 = 8622339638104371475_u64 as i32;
_13 = '\u{f4e13}';
RET.1 = [3041010175008384153_i64];
_3 = _5 > _8;
_11.3 = _4;
RET.1 = [1830020223366832248_i64];
RET = (_11.0.0, _11.0.1);
_11.1 = (-1636428370_i32);
RET = _11.0;
RET = _11.0;
_2 = 9_u8 as i8;
_1 = (-62742772669316889859927442954239312372_i128) >> _5;
_1 = (-165401077645119934924508416261504994605_i128) >> _2;
_5 = !_8;
_11.0.1 = [2893202201776386418_i64];
_2 = 38_i8;
_11.3 = [_8,_8,_5,_5];
RET.1 = _11.0.1;
match _11.1 {
0 => bb1,
1 => bb8,
2 => bb7,
3 => bb4,
4 => bb6,
340282366920938463463374607430131783086 => bb11,
_ => bb10
}
}
bb10 = {
RET.0 = [2805878446_u32,2208427841_u32,4065930820_u32,3547399854_u32];
_4 = [_5,_5,_5,_5];
_3 = !true;
_5 = 7698_u16;
match _5 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
7698 => bb8,
_ => bb7
}
}
bb11 = {
_17 = _1 as u32;
_5 = _8;
_3 = !_11.2;
_11.2 = _17 == _17;
_11.0 = (RET.0, RET.1);
RET.0 = [_17,_17,_17,_17];
_11.3 = [_8,_5,_5,_8];
_18 = Adt55::Variant2 { fld0: _17 };
_8 = _5 >> Field::<u32>(Variant(_18, 2), 0);
_11 = (RET, 1504292719_i32, _3, _4);
_11.0 = (RET.0, RET.1);
RET = _11.0;
RET.0 = [Field::<u32>(Variant(_18, 2), 0),Field::<u32>(Variant(_18, 2), 0),Field::<u32>(Variant(_18, 2), 0),_17];
RET = _11.0;
place!(Field::<u32>(Variant(_18, 2), 0)) = !_17;
_11.0.1 = [5177369997780046956_i64];
_18 = Adt55::Variant2 { fld0: _17 };
_13 = '\u{72301}';
_5 = !_8;
Goto(bb12)
}
bb12 = {
_2 = !(-35_i8);
_3 = _11.2 & _11.2;
_11.0.0 = [Field::<u32>(Variant(_18, 2), 0),Field::<u32>(Variant(_18, 2), 0),_17,Field::<u32>(Variant(_18, 2), 0)];
_8 = _5;
_2 = -(-104_i8);
_18 = Adt55::Variant2 { fld0: _17 };
_2 = 123_u8 as i8;
RET = _11.0;
RET.1 = [2415536331097832389_i64];
SetDiscriminant(_18, 3);
_5 = _8 - _8;
_11 = (RET, (-1017138252_i32), _3, _4);
RET.0 = _11.0.0;
_11.3 = [_5,_8,_5,_5];
_11.0.0 = [_17,_17,_17,_17];
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).4.0 = _11.1;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).0 = 213_u8 | 101_u8;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).2 = _2 ^ _2;
_16 = Adt53::Variant1 { fld0: 10143145023445287428_u64,fld1: Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1).4 };
_17 = 6587585127618547441684739096013865077_u128 as u32;
_20.4 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1).4;
Goto(bb13)
}
bb13 = {
_5 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1).0 as u16;
_22 = _1 as isize;
_11.3 = _4;
_5 = !_8;
place!(Field::<u64>(Variant(_16, 1), 0)) = !2336206960586803333_u64;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).2 = _2;
RET.1 = [(-5911258699886390028_i64)];
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).0 = 89_u8;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).4.0 = _20.4.0;
_11.0.1 = [(-7565640859099891419_i64)];
_11.0.0 = RET.0;
_20.2 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1).2;
_17 = _2 as u32;
SetDiscriminant(_16, 0);
place!(Field::<i32>(Variant(_16, 0), 1)) = !_20.4.0;
Goto(bb14)
}
bb14 = {
_26 = Adt49 { fld0: _1 };
_11.3 = [_8,_5,_5,_5];
place!(Field::<Adt49>(Variant(_16, 0), 0)) = Adt49 { fld0: _26.fld0 };
_13 = '\u{75c6b}';
place!(Field::<Adt49>(Variant(_16, 0), 0)) = Move(_26);
place!(Field::<(u16, u32, i64)>(Variant(_16, 0), 2)) = (_5, _17, 2051394843681482462_i64);
place!(Field::<[i128; 4]>(Variant(_16, 0), 3)) = [Field::<Adt49>(Variant(_16, 0), 0).fld0,Field::<Adt49>(Variant(_16, 0), 0).fld0,_1,_1];
_11.0.0 = [_17,_17,Field::<(u16, u32, i64)>(Variant(_16, 0), 2).1,Field::<(u16, u32, i64)>(Variant(_16, 0), 2).1];
place!(Field::<i32>(Variant(_16, 0), 1)) = 6825681578077045478327144920002103943_u128 as i32;
place!(Field::<(u16, u32, i64)>(Variant(_16, 0), 2)).0 = !_8;
_27.2 = Field::<(u16, u32, i64)>(Variant(_16, 0), 2).2;
_11 = (RET, Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1).4.0, _3, _4);
place!(Field::<*mut [u32; 4]>(Variant(_18, 3), 2)) = core::ptr::addr_of_mut!(RET.0);
_26 = Adt49 { fld0: Field::<Adt49>(Variant(_16, 0), 0).fld0 };
_20.0 = Field::<i32>(Variant(_16, 0), 1) as u8;
_23 = _13;
_26 = Adt49 { fld0: _1 };
_20.2 = -_2;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1)).0 = Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0 as u8;
_11.3 = [Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0];
_12 = core::ptr::addr_of_mut!(_22);
_17 = !Field::<(u16, u32, i64)>(Variant(_16, 0), 2).1;
_17 = 9996992384861245565_usize as u32;
_21 = [Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_16, 0), 2).0,_8,_5];
_11.1 = !Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_18, 3), 1).4.0;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(0_usize, 8_usize, Move(_8), 3_usize, Move(_3), 17_usize, Move(_17), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(0_usize, 11_usize, Move(_11), 13_usize, Move(_13), 31_usize, _31, 31_usize, _31), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: [u32; 4],mut _2: i128,mut _3: [u16; 4],mut _4: [u32; 4],mut _5: [u16; 4],mut _6: [u32; 4],mut _7: [u32; 4],mut _8: i128,mut _9: [u32; 4],mut _10: [u16; 4],mut _11: [u32; 4],mut _12: ([u32; 4], [i64; 1]),mut _13: i128,mut _14: [u32; 4],mut _15: ([u32; 4], [i64; 1])) -> i8 {
mir! {
type RET = i8;
let _16: char;
let _17: Adt59;
let _18: f64;
let _19: f32;
let _20: (u16,);
let _21: char;
let _22: (u64,);
let _23: [bool; 1];
let _24: bool;
let _25: Adt59;
let _26: [u16; 4];
let _27: i32;
let _28: f32;
let _29: [u16; 4];
let _30: i16;
let _31: char;
let _32: f64;
let _33: [bool; 2];
let _34: char;
let _35: bool;
let _36: (u16, u32, i64);
let _37: f64;
let _38: Adt47;
let _39: ();
let _40: ();
{
RET = 21_i8 - 84_i8;
_7 = _14;
_9 = [931043543_u32,2258554837_u32,2412107496_u32,2752167210_u32];
_9 = _15.0;
_11 = [2231795235_u32,3696313352_u32,2498552497_u32,1704742454_u32];
_2 = _8;
_2 = -_13;
_17.fld0 = (16655702612496441864_u64,);
_6 = _12.0;
_2 = _13 + _8;
_9 = [1124110500_u32,2832698615_u32,563574209_u32,2764207125_u32];
_18 = 624586846_i32 as f64;
_10 = [11838_u16,5399_u16,9503_u16,65287_u16];
_4 = [704702528_u32,3209780787_u32,131379220_u32,673657329_u32];
_3 = _10;
_13 = -_2;
_12.0 = [885288771_u32,1614821496_u32,1208898992_u32,1131563119_u32];
_17.fld0 = (9124421154831553972_u64,);
_16 = '\u{a5da0}';
_18 = (-14096_i16) as f64;
_12.0 = [3008588411_u32,862105679_u32,3250497831_u32,2845110255_u32];
_20.0 = !34027_u16;
_20 = (32599_u16,);
_13 = !_2;
Call(RET = fn2(_15.0, _1, _15.0, _20.0, _16, _10, _1, _3, _4, _6, _20, _12.1, _13, _11, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = 49_i8 >> _8;
_5 = [_20.0,_20.0,_20.0,_20.0];
_5 = _3;
_15 = _12;
_18 = 4049977213028677608828640860470300763_u128 as f64;
_16 = '\u{4d079}';
_17.fld0 = (15221336344617621102_u64,);
_6 = [2839003128_u32,3530329472_u32,4256777661_u32,3499103195_u32];
RET = -(-60_i8);
_3 = _10;
_15.0 = [3470897639_u32,1553619529_u32,113704560_u32,3765179951_u32];
_14 = _6;
_15 = (_9, _12.1);
_16 = '\u{93259}';
_2 = _17.fld0.0 as i128;
_18 = 56_u8 as f64;
_19 = (-5544566543508186169_i64) as f32;
Call(_1 = core::intrinsics::transmute(_12.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
match _17.fld0.0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
15221336344617621102 => bb10,
_ => bb9
}
}
bb3 = {
RET = 49_i8 >> _8;
_5 = [_20.0,_20.0,_20.0,_20.0];
_5 = _3;
_15 = _12;
_18 = 4049977213028677608828640860470300763_u128 as f64;
_16 = '\u{4d079}';
_17.fld0 = (15221336344617621102_u64,);
_6 = [2839003128_u32,3530329472_u32,4256777661_u32,3499103195_u32];
RET = -(-60_i8);
_3 = _10;
_15.0 = [3470897639_u32,1553619529_u32,113704560_u32,3765179951_u32];
_14 = _6;
_15 = (_9, _12.1);
_16 = '\u{93259}';
_2 = _17.fld0.0 as i128;
_18 = 56_u8 as f64;
_19 = (-5544566543508186169_i64) as f32;
Call(_1 = core::intrinsics::transmute(_12.0), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_18 = 5066619246583535225_i64 as f64;
_12.0 = [3589736353_u32,2730715152_u32,4019536507_u32,2130299740_u32];
_23 = [false];
_19 = 170903953824189582511289489294226104558_u128 as f32;
_25.fld0 = (_17.fld0.0,);
_12.1 = [(-421833647526501232_i64)];
_15 = (_11, _12.1);
_27 = (-938974030_i32);
_8 = _2 >> RET;
_23 = [true];
_21 = _16;
_15 = (_6, _12.1);
_22 = (_25.fld0.0,);
_17.fld0 = (_22.0,);
_22.0 = _25.fld0.0;
_23 = [false];
_25.fld0.0 = 51_u8 as u64;
_5 = _10;
_16 = _21;
_20.0 = 26267_u16 + 29588_u16;
_5 = _3;
_19 = 10547517996524417835_usize as f32;
_8 = _2 * _2;
_16 = _21;
match _22.0 {
0 => bb1,
1 => bb7,
2 => bb9,
3 => bb4,
4 => bb5,
15221336344617621102 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_19 = 495653419_u32 as f32;
_14 = [2501999099_u32,3755238968_u32,2323684185_u32,4053209823_u32];
_17.fld0.0 = RET as u64;
_29 = _3;
_12 = (_14, _15.1);
_17.fld0 = (_22.0,);
match _27 {
0 => bb10,
340282366920938463463374607430829237426 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
_20.0 = 41179_u16;
_17.fld0 = _25.fld0;
_10 = _29;
_18 = _27 as f64;
_16 = _21;
RET = _19 as i8;
_22.0 = _17.fld0.0;
_14 = [1699652897_u32,370382195_u32,654492727_u32,1809549296_u32];
_12 = (_1, _15.1);
_13 = _2;
_13 = _8;
_20 = (40308_u16,);
_30 = !11851_i16;
_8 = _13 - _13;
_4 = [4278825808_u32,2589778855_u32,2555215852_u32,499348483_u32];
_20.0 = !2218_u16;
_28 = _19;
_8 = -_13;
_25.fld0.0 = !_22.0;
_15.0 = _6;
_33 = [true,true];
_26 = [_20.0,_20.0,_20.0,_20.0];
_31 = _21;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(1_usize, 30_usize, Move(_30), 15_usize, Move(_15), 3_usize, Move(_3), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(1_usize, 11_usize, Move(_11), 5_usize, Move(_5), 20_usize, Move(_20), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(1_usize, 26_usize, Move(_26), 4_usize, Move(_4), 22_usize, Move(_22), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(1_usize, 2_usize, Move(_2), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [u32; 4],mut _2: [u32; 4],mut _3: [u32; 4],mut _4: u16,mut _5: char,mut _6: [u16; 4],mut _7: [u32; 4],mut _8: [u16; 4],mut _9: [u32; 4],mut _10: [u32; 4],mut _11: (u16,),mut _12: [i64; 1],mut _13: i128,mut _14: [u32; 4],mut _15: [u32; 4]) -> i8 {
mir! {
type RET = i8;
let _16: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _17: isize;
let _18: u64;
let _19: i16;
let _20: [i128; 4];
let _21: Adt58;
let _22: [bool; 1];
let _23: f32;
let _24: Adt54;
let _25: [i128; 4];
let _26: f64;
let _27: Adt48;
let _28: isize;
let _29: isize;
let _30: Adt55;
let _31: u32;
let _32: Adt53;
let _33: f64;
let _34: u8;
let _35: ();
let _36: ();
{
_11.0 = !_4;
_7 = [4103577986_u32,1004956092_u32,3349091644_u32,1031052248_u32];
_8 = _6;
_7 = [626877261_u32,3426480507_u32,1168118801_u32,2902793228_u32];
_12 = [842189330812984132_i64];
RET = -10_i8;
_6 = [_4,_11.0,_4,_11.0];
_4 = !_11.0;
RET = 83_i8;
_12 = [8058037348975515499_i64];
_9 = _2;
_5 = '\u{1b280}';
_13 = (-73962275096483533886953191346971586004_i128);
_7 = [4240543366_u32,1960927151_u32,2568594654_u32,1190423533_u32];
_7 = [2956729984_u32,98885427_u32,51727933_u32,2031045298_u32];
_15 = _10;
_15 = _2;
_13 = 3523843094_u32 as i128;
RET = 28434656_u32 as i8;
_16.0 = (_10, _12);
Goto(bb1)
}
bb1 = {
_4 = !_11.0;
_4 = _11.0 & _11.0;
_16.1 = 188940670_i32 << _4;
_1 = [1265347021_u32,1325655855_u32,3259205975_u32,3570102876_u32];
_13 = 61646279256821417676669137022819651981_i128 + (-152222879928206139531585160418307501410_i128);
_18 = 61_u8 as u64;
_16.2 = false;
_16.2 = _16.1 != _16.1;
_16.0 = (_3, _12);
_16.0 = (_3, _12);
_17 = 107_isize;
_10 = [3900998599_u32,3752056459_u32,2605999734_u32,3748992184_u32];
_5 = '\u{52c46}';
_11 = (_4,);
RET = (-103_i8) << _18;
_16.3 = [_11.0,_4,_4,_4];
_16.1 = -861100065_i32;
_20 = [_13,_13,_13,_13];
_12 = [(-1782993525379174303_i64)];
_16.0 = (_9, _12);
_16.0.0 = [999345643_u32,1545401390_u32,1254791823_u32,461182016_u32];
_22 = [_16.2];
_6 = [_4,_4,_11.0,_4];
_16.2 = !false;
match _17 {
0 => bb2,
1 => bb3,
2 => bb4,
107 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_18 = 6809661274181935602_u64;
_16.0.0 = [2345475556_u32,788109755_u32,1707350455_u32,601932337_u32];
_4 = !_11.0;
_16.2 = !false;
_12 = _16.0.1;
_23 = 29380_i16 as f32;
_9 = [267180299_u32,540406480_u32,2565870849_u32,1348687156_u32];
_1 = [1825255869_u32,2681086006_u32,2944824434_u32,171759677_u32];
_2 = [913388835_u32,49583765_u32,2015860837_u32,1596682914_u32];
_26 = _4 as f64;
_16.3 = [_4,_4,_4,_4];
_17 = (-33_isize);
_11.0 = _4 << _17;
_7 = [1689254669_u32,4230381280_u32,3629153946_u32,4032820931_u32];
_16.2 = _4 > _11.0;
_19 = -(-25770_i16);
RET = 47_i8;
_4 = _13 as u16;
_10 = [389764851_u32,3004117206_u32,3746824961_u32,539471935_u32];
_3 = _7;
_16.1 = _19 as i32;
_5 = '\u{c9777}';
match RET {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
47 => bb12,
_ => bb11
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_4 = !_11.0;
_4 = _11.0 & _11.0;
_16.1 = 188940670_i32 << _4;
_1 = [1265347021_u32,1325655855_u32,3259205975_u32,3570102876_u32];
_13 = 61646279256821417676669137022819651981_i128 + (-152222879928206139531585160418307501410_i128);
_18 = 61_u8 as u64;
_16.2 = false;
_16.2 = _16.1 != _16.1;
_16.0 = (_3, _12);
_16.0 = (_3, _12);
_17 = 107_isize;
_10 = [3900998599_u32,3752056459_u32,2605999734_u32,3748992184_u32];
_5 = '\u{52c46}';
_11 = (_4,);
RET = (-103_i8) << _18;
_16.3 = [_11.0,_4,_4,_4];
_16.1 = -861100065_i32;
_20 = [_13,_13,_13,_13];
_12 = [(-1782993525379174303_i64)];
_16.0 = (_9, _12);
_16.0.0 = [999345643_u32,1545401390_u32,1254791823_u32,461182016_u32];
_22 = [_16.2];
_6 = [_4,_4,_11.0,_4];
_16.2 = !false;
match _17 {
0 => bb2,
1 => bb3,
2 => bb4,
107 => bb6,
_ => bb5
}
}
bb12 = {
_10 = [1986789528_u32,1922511234_u32,3808953614_u32,3997413995_u32];
_20 = [_13,_13,_13,_13];
_18 = 18358732514137647290_u64;
RET = 5062239176834727644_usize as i8;
_23 = _16.1 as f32;
_10 = [3347627241_u32,3986894196_u32,2536482706_u32,1475655852_u32];
RET = _16.2 as i8;
Call(_28 = core::intrinsics::transmute(_6), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_24 = Adt54::Variant1 { fld0: _26 };
_26 = -Field::<f64>(Variant(_24, 1), 0);
_5 = '\u{4c4ba}';
_6 = _8;
Call(_1 = fn3(RET, _4, _15, _16.0.0, Move(_24)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_12 = [66370226309403238_i64];
_22 = [_16.2];
_2 = [2149826525_u32,2908320874_u32,559781563_u32,2586742205_u32];
_13 = _5 as i128;
_4 = !_11.0;
_16.0.1 = _12;
_16.1 = 1481803022_i32 << RET;
_25 = [_13,_13,_13,_13];
_10 = _9;
_24 = Adt54::Variant1 { fld0: _26 };
_16.0.0 = [2758721013_u32,140665894_u32,3291404332_u32,2562736284_u32];
_1 = [289894256_u32,2683844965_u32,43985940_u32,74960244_u32];
_25 = [_13,_13,_13,_13];
_14 = [3964494600_u32,3385271579_u32,589708208_u32,1057817465_u32];
_3 = [2984096742_u32,5985233_u32,2355026504_u32,3314592003_u32];
_34 = 26_u8 >> RET;
SetDiscriminant(_24, 1);
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(2_usize, 12_usize, Move(_12), 20_usize, Move(_20), 7_usize, Move(_7), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(2_usize, 6_usize, Move(_6), 18_usize, Move(_18), 9_usize, Move(_9), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(2_usize, 34_usize, Move(_34), 15_usize, Move(_15), 4_usize, Move(_4), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: i8,mut _2: u16,mut _3: [u32; 4],mut _4: [u32; 4],mut _5: Adt54) -> [u32; 4] {
mir! {
type RET = [u32; 4];
let _6: f32;
let _7: u128;
let _8: usize;
let _9: *const u32;
let _10: char;
let _11: Adt45;
let _12: (i16, i8, i8);
let _13: (i16, i8, i8);
let _14: isize;
let _15: ([u32; 4], [i64; 1]);
let _16: u32;
let _17: i64;
let _18: char;
let _19: i128;
let _20: char;
let _21: Adt45;
let _22: *mut isize;
let _23: (u16,);
let _24: ([u32; 4], [i64; 1]);
let _25: char;
let _26: i8;
let _27: u64;
let _28: (u16, u32, i64);
let _29: char;
let _30: *const i128;
let _31: isize;
let _32: isize;
let _33: f32;
let _34: Adt43;
let _35: u128;
let _36: (char, *mut i64);
let _37: i64;
let _38: (u16, u32, i64);
let _39: ();
let _40: ();
{
RET = [3725443435_u32,3553473729_u32,94425247_u32,2884571859_u32];
RET = [2265849927_u32,2909107931_u32,2961657283_u32,1085440139_u32];
_7 = 145257497773330009920291190852507267421_u128;
_2 = 26479_u16;
_7 = 249639735096694153693069574903450704450_u128 & 128887850307444828370192280522240223149_u128;
_2 = 58702_u16 | 6485_u16;
_8 = 3611459431603595335_usize & 2_usize;
RET = _4;
_4 = [1653034092_u32,3540084959_u32,2505417244_u32,2067930068_u32];
RET = [2753425934_u32,1876506246_u32,2646335919_u32,1126025818_u32];
_2 = !4006_u16;
_1 = -(-19_i8);
_1 = -53_i8;
RET = [960936674_u32,2660756218_u32,2977662713_u32,1955302237_u32];
_6 = _8 as f32;
RET = [876647010_u32,1162732520_u32,2985237466_u32,958339617_u32];
_1 = -86_i8;
RET = [2809841543_u32,1086078355_u32,3552758396_u32,458330995_u32];
Call(_11.fld1.3 = fn4(Move(_5), RET, _3, _3, _3, _4, _3, _2, _8, RET, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = [2658953397_u32,232633219_u32,1415840327_u32,2087564223_u32];
_11.fld3.2 = _1 ^ _1;
_11.fld1.1 = 314748867_i32 & (-800685740_i32);
_11.fld0 = (_11.fld1.1,);
_12.0 = !2030_i16;
Goto(bb2)
}
bb2 = {
_11.fld2 = _11.fld3.2 as isize;
_13.0 = !_12.0;
_11.fld1.2 = false & false;
_13.2 = _11.fld1.2 as i8;
_11.fld3 = (_12.0, _1, _13.2);
_11.fld1.0.1 = [1823776017724027794_i64];
_8 = 4_usize * 1_usize;
_2 = !26663_u16;
_11.fld1.0.0 = _4;
_12.0 = !_13.0;
_15.1 = [5044996160934097910_i64];
_15.0 = _3;
_10 = '\u{3aa25}';
RET = [4130609341_u32,983080093_u32,74882531_u32,140957161_u32];
_14 = 229_u8 as isize;
_13 = (_12.0, _1, _11.fld3.1);
_12.1 = -_11.fld3.1;
_12.2 = _13.2 ^ _11.fld3.2;
_11.fld3 = (_13.0, _12.2, _1);
_11.fld1.0.0 = [4053295274_u32,257324713_u32,3097827314_u32,2624093867_u32];
_11.fld0 = (_11.fld1.1,);
_13.0 = !_11.fld3.0;
_11.fld1.1 = _11.fld0.0 - _11.fld0.0;
_11.fld1.0.1 = [4738118352727667425_i64];
Call(_4 = fn16(Move(_11), _3, _3, _3, _15, _15), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15.1 = [(-4816479798835754287_i64)];
_11.fld1.0 = (_15.0, _15.1);
_11.fld3.2 = _1;
_4 = _3;
_11.fld0 = (1981665090_i32,);
_11.fld3.2 = _1 | _12.1;
_11.fld2 = _14 + _14;
_18 = _10;
_11.fld3.2 = 222_u8 as i8;
_17 = 1938009293503580266_i64;
_13.1 = !_12.1;
_19 = 116282836036481695976354085698813774769_i128;
_17 = _13.2 as i64;
_21.fld1.0.1 = [_17];
_21.fld0 = (_11.fld0.0,);
_13.2 = _19 as i8;
_11.fld3.0 = _13.0 & _13.0;
_21.fld3 = (_11.fld3.0, _12.2, _12.2);
_21.fld2 = !_14;
_21.fld0 = (_11.fld0.0,);
_21.fld1.2 = false;
_21.fld1.1 = _11.fld0.0;
_11.fld3.0 = !_21.fld3.0;
_11.fld3.1 = _12.2 * _21.fld3.1;
_21.fld1.3 = [_2,_2,_2,_2];
_21.fld1.0 = (_4, _15.1);
Goto(bb4)
}
bb4 = {
_11 = Adt45 { fld0: _21.fld0,fld1: _21.fld1,fld2: _21.fld2,fld3: _12 };
_21.fld0 = (_11.fld1.1,);
_14 = _11.fld2;
_17 = (-3042047796508415428_i64);
_9 = core::ptr::addr_of!(_16);
_11.fld1.0.1 = [_17];
_10 = _18;
_23.0 = !_2;
_24 = (_3, _11.fld1.0.1);
_21.fld1.0.1 = _15.1;
_15.0 = [1967619646_u32,1893394213_u32,1703717190_u32,790520448_u32];
_12.2 = _21.fld3.1 - _12.1;
_11.fld3.0 = _21.fld3.0 >> _23.0;
_11.fld1.0 = _21.fld1.0;
_28.0 = !_23.0;
_21.fld0.0 = _21.fld1.1 & _11.fld0.0;
_21.fld3.0 = _21.fld3.1 as i16;
_21.fld1.0.0 = _3;
_11.fld1.2 = _21.fld1.2;
_13.2 = _21.fld3.1 * _11.fld3.1;
_26 = -_12.2;
_21.fld1.1 = _21.fld3.1 as i32;
_21.fld1.1 = _8 as i32;
_11.fld2 = _14;
_2 = !_23.0;
Goto(bb5)
}
bb5 = {
_28.2 = _2 as i64;
_27 = 16529239144295259801_u64;
_11.fld1.0.1 = [_28.2];
_20 = _18;
_21.fld2 = _14 - _11.fld2;
_16 = !19372005_u32;
_24.0 = _4;
_11.fld3.0 = _13.0;
_21.fld3.2 = _11.fld3.2;
_27 = _11.fld1.2 as u64;
Goto(bb6)
}
bb6 = {
_29 = _20;
_11.fld3.0 = _6 as i16;
_22 = core::ptr::addr_of_mut!(_31);
_11.fld3.0 = _21.fld3.0 & _21.fld3.0;
_13.0 = _12.0 << _26;
_11.fld2 = _21.fld2;
_28.1 = _16;
_24.0 = [(*_9),(*_9),_28.1,(*_9)];
_15 = _21.fld1.0;
Goto(bb7)
}
bb7 = {
_21.fld1.0.1 = [_28.2];
_21.fld1.1 = _21.fld0.0;
_27 = 10368437242208551500_u64;
_12.0 = _13.0;
_12.0 = _10 as i16;
_13.0 = _11.fld3.0;
_26 = _12.2 >> _19;
RET = _3;
_21.fld0 = (_21.fld1.1,);
_13.2 = _7 as i8;
_9 = core::ptr::addr_of!(_16);
_17 = _28.2;
_9 = core::ptr::addr_of!(_16);
_19 = 47026027996047309231733131009506664196_i128 & (-7416933231931692217459937278299577809_i128);
_11.fld2 = _17 as isize;
_12 = _11.fld3;
_15.1 = _11.fld1.0.1;
Goto(bb8)
}
bb8 = {
_25 = _29;
_11.fld3 = (_12.0, _26, _12.2);
_21 = Adt45 { fld0: _11.fld0,fld1: _11.fld1,fld2: _11.fld2,fld3: _13 };
_32 = _21.fld2;
_11.fld3.1 = _12.1 + _26;
_20 = _29;
match _11.fld1.1 {
0 => bb4,
1 => bb2,
2 => bb9,
3 => bb10,
1981665090 => bb12,
_ => bb11
}
}
bb9 = {
_21.fld1.0.1 = [_28.2];
_21.fld1.1 = _21.fld0.0;
_27 = 10368437242208551500_u64;
_12.0 = _13.0;
_12.0 = _10 as i16;
_13.0 = _11.fld3.0;
_26 = _12.2 >> _19;
RET = _3;
_21.fld0 = (_21.fld1.1,);
_13.2 = _7 as i8;
_9 = core::ptr::addr_of!(_16);
_17 = _28.2;
_9 = core::ptr::addr_of!(_16);
_19 = 47026027996047309231733131009506664196_i128 & (-7416933231931692217459937278299577809_i128);
_11.fld2 = _17 as isize;
_12 = _11.fld3;
_15.1 = _11.fld1.0.1;
Goto(bb8)
}
bb10 = {
_11.fld2 = _11.fld3.2 as isize;
_13.0 = !_12.0;
_11.fld1.2 = false & false;
_13.2 = _11.fld1.2 as i8;
_11.fld3 = (_12.0, _1, _13.2);
_11.fld1.0.1 = [1823776017724027794_i64];
_8 = 4_usize * 1_usize;
_2 = !26663_u16;
_11.fld1.0.0 = _4;
_12.0 = !_13.0;
_15.1 = [5044996160934097910_i64];
_15.0 = _3;
_10 = '\u{3aa25}';
RET = [4130609341_u32,983080093_u32,74882531_u32,140957161_u32];
_14 = 229_u8 as isize;
_13 = (_12.0, _1, _11.fld3.1);
_12.1 = -_11.fld3.1;
_12.2 = _13.2 ^ _11.fld3.2;
_11.fld3 = (_13.0, _12.2, _1);
_11.fld1.0.0 = [4053295274_u32,257324713_u32,3097827314_u32,2624093867_u32];
_11.fld0 = (_11.fld1.1,);
_13.0 = !_11.fld3.0;
_11.fld1.1 = _11.fld0.0 - _11.fld0.0;
_11.fld1.0.1 = [4738118352727667425_i64];
Call(_4 = fn16(Move(_11), _3, _3, _3, _15, _15), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_4 = [2658953397_u32,232633219_u32,1415840327_u32,2087564223_u32];
_11.fld3.2 = _1 ^ _1;
_11.fld1.1 = 314748867_i32 & (-800685740_i32);
_11.fld0 = (_11.fld1.1,);
_12.0 = !2030_i16;
Goto(bb2)
}
bb12 = {
_21.fld3.2 = _8 as i8;
_20 = _29;
_11.fld1.3 = [_23.0,_23.0,_23.0,_23.0];
_21.fld3.1 = _11.fld3.2 * _11.fld3.2;
_11.fld1.2 = !_21.fld1.2;
_33 = _11.fld1.1 as f32;
match _11.fld1.1 {
0 => bb1,
1 => bb10,
2 => bb3,
3 => bb11,
4 => bb5,
5 => bb6,
6 => bb7,
1981665090 => bb14,
_ => bb13
}
}
bb13 = {
_11 = Adt45 { fld0: _21.fld0,fld1: _21.fld1,fld2: _21.fld2,fld3: _12 };
_21.fld0 = (_11.fld1.1,);
_14 = _11.fld2;
_17 = (-3042047796508415428_i64);
_9 = core::ptr::addr_of!(_16);
_11.fld1.0.1 = [_17];
_10 = _18;
_23.0 = !_2;
_24 = (_3, _11.fld1.0.1);
_21.fld1.0.1 = _15.1;
_15.0 = [1967619646_u32,1893394213_u32,1703717190_u32,790520448_u32];
_12.2 = _21.fld3.1 - _12.1;
_11.fld3.0 = _21.fld3.0 >> _23.0;
_11.fld1.0 = _21.fld1.0;
_28.0 = !_23.0;
_21.fld0.0 = _21.fld1.1 & _11.fld0.0;
_21.fld3.0 = _21.fld3.1 as i16;
_21.fld1.0.0 = _3;
_11.fld1.2 = _21.fld1.2;
_13.2 = _21.fld3.1 * _11.fld3.1;
_26 = -_12.2;
_21.fld1.1 = _21.fld3.1 as i32;
_21.fld1.1 = _8 as i32;
_11.fld2 = _14;
_2 = !_23.0;
Goto(bb5)
}
bb14 = {
_24.1 = [_17];
_2 = _23.0;
_11.fld0.0 = !_21.fld0.0;
_28.2 = _17;
_21.fld1.3 = [_28.0,_23.0,_2,_23.0];
_11.fld1.1 = _11.fld1.2 as i32;
_6 = _13.0 as f32;
_3 = [_28.1,(*_9),(*_9),_16];
_21.fld1.3 = _11.fld1.3;
_11.fld3.1 = _21.fld3.1;
_1 = _21.fld3.1 & _21.fld3.1;
_11.fld3.0 = -_12.0;
_29 = _10;
_11.fld1.0.1 = _24.1;
_12 = (_13.0, _1, _11.fld3.1);
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(3_usize, 32_usize, Move(_32), 25_usize, Move(_25), 29_usize, Move(_29), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(3_usize, 14_usize, Move(_14), 23_usize, Move(_23), 8_usize, Move(_8), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(3_usize, 16_usize, Move(_16), 4_usize, Move(_4), 28_usize, Move(_28), 18_usize, Move(_18)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: Adt54,mut _2: [u32; 4],mut _3: [u32; 4],mut _4: [u32; 4],mut _5: [u32; 4],mut _6: [u32; 4],mut _7: [u32; 4],mut _8: u16,mut _9: usize,mut _10: [u32; 4],mut _11: i8) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _12: u64;
let _13: bool;
let _14: f64;
let _15: [i64; 1];
let _16: u8;
let _17: (i16, i8, i8);
let _18: u8;
let _19: isize;
let _20: (u16, u32, i64);
let _21: u64;
let _22: [u32; 4];
let _23: (u64,);
let _24: f64;
let _25: *mut isize;
let _26: ();
let _27: ();
{
place!(Field::<f64>(Variant(_1, 1), 0)) = (-9172570465872274948_i64) as f64;
RET = [_8,_8,_8,_8];
RET = [_8,_8,_8,_8];
_13 = false;
_10 = [1355084306_u32,1259888069_u32,456162197_u32,619652205_u32];
_5 = [3132797269_u32,1319906729_u32,1288924008_u32,631607624_u32];
_12 = 1458947207220832566_u64;
SetDiscriminant(_1, 1);
_2 = [4060723466_u32,566922569_u32,2377105555_u32,4122750873_u32];
RET = [_8,_8,_8,_8];
place!(Field::<f64>(Variant(_1, 1), 0)) = (-26410_i16) as f64;
_13 = true;
RET = [_8,_8,_8,_8];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
1458947207220832566 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4 = _5;
_9 = !1_usize;
_9 = 0_usize;
SetDiscriminant(_1, 0);
_3[_9] = _7[_9];
_7 = [_6[_9],_5[_9],_3[_9],_4[_9]];
_14 = _12 as f64;
Call(_13 = fn5(_2[_9], _6), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_3 = [773721684_u32,1248343311_u32,631598663_u32,2099647951_u32];
place!(Field::<u32>(Variant(_1, 0), 0)) = !3017804732_u32;
_17.1 = (-128980379_i32) as i8;
place!(Field::<(u64,)>(Variant(_1, 0), 1)).0 = _12;
_18 = !80_u8;
_13 = false;
_13 = true;
_13 = !false;
RET = [_8,_8,_8,_8];
match _9 {
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
0 => bb11,
_ => bb7
}
}
bb11 = {
RET = [_8,_8,_8,_8];
_5 = [Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0)];
_15 = [1193574359807181305_i64];
_11 = -_17.1;
_18 = 179_u8 * 182_u8;
_2 = _10;
_17.2 = _17.1;
_12 = !Field::<(u64,)>(Variant(_1, 0), 1).0;
_18 = 166_u8;
_10 = [Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0)];
_17 = ((-32102_i16), _11, _11);
_17.1 = _13 as i8;
_2 = _4;
match Field::<(u64,)>(Variant(_1, 0), 1).0 {
0 => bb1,
1 => bb6,
2 => bb12,
3 => bb13,
4 => bb14,
1458947207220832566 => bb16,
_ => bb15
}
}
bb12 = {
_3 = [773721684_u32,1248343311_u32,631598663_u32,2099647951_u32];
place!(Field::<u32>(Variant(_1, 0), 0)) = !3017804732_u32;
_17.1 = (-128980379_i32) as i8;
place!(Field::<(u64,)>(Variant(_1, 0), 1)).0 = _12;
_18 = !80_u8;
_13 = false;
_13 = true;
_13 = !false;
RET = [_8,_8,_8,_8];
match _9 {
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
0 => bb11,
_ => bb7
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET = [_8,_8,_8,_8];
place!(Field::<(u64,)>(Variant(_1, 0), 1)) = (_12,);
_10 = [Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0)];
_6 = _7;
_20.0 = _8 + _8;
_19 = 9223372036854775807_isize;
_20 = (_8, Field::<u32>(Variant(_1, 0), 0), 2571766620806670857_i64);
_16 = _20.2 as u8;
_20.0 = !_8;
_18 = !_16;
_17.1 = _11 + _17.2;
_3 = _2;
_16 = _18;
_14 = _20.0 as f64;
_2 = [Field::<u32>(Variant(_1, 0), 0),_20.1,Field::<u32>(Variant(_1, 0), 0),_20.1];
_16 = !_18;
RET = [_8,_8,_8,_8];
_2 = [Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0),Field::<u32>(Variant(_1, 0), 0)];
_14 = _16 as f64;
_16 = _18;
SetDiscriminant(_1, 2);
_18 = _16 & _16;
_24 = _14;
_9 = 2702679873319885262_usize;
_9 = !18120888449305130862_usize;
_9 = !9403177274004619826_usize;
Goto(bb17)
}
bb17 = {
Call(_26 = dump_var(4_usize, 19_usize, Move(_19), 8_usize, Move(_8), 6_usize, Move(_6), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_26 = dump_var(4_usize, 10_usize, Move(_10), 17_usize, Move(_17), 18_usize, Move(_18), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_26 = dump_var(4_usize, 3_usize, Move(_3), 27_usize, _27, 27_usize, _27, 27_usize, _27), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u32,mut _2: [u32; 4]) -> bool {
mir! {
type RET = bool;
let _3: f64;
let _4: Adt47;
let _5: (u64,);
let _6: bool;
let _7: [u128; 8];
let _8: [i64; 1];
let _9: Adt52;
let _10: Adt45;
let _11: Adt43;
let _12: [bool; 2];
let _13: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _14: i32;
let _15: f64;
let _16: usize;
let _17: [u32; 4];
let _18: [u128; 8];
let _19: isize;
let _20: bool;
let _21: *mut isize;
let _22: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _23: i16;
let _24: i16;
let _25: (u16, u32, i64);
let _26: u32;
let _27: Adt47;
let _28: Adt46;
let _29: ();
let _30: ();
{
_2 = [_1,_1,_1,_1];
_5 = (7846071405001794966_u64,);
_3 = 35670_u16 as f64;
RET = true;
RET = _1 == _1;
_2 = [_1,_1,_1,_1];
RET = true | false;
RET = !true;
RET = true;
Goto(bb1)
}
bb1 = {
RET = false;
_7 = [129596307901841228906635058049178384575_u128,24368828088816385917199216775286583737_u128,31526130066628899051468134415909106550_u128,75652409757146407070385832355608678240_u128,22551212961907331023132210907637032123_u128,50784726230751528043440935609434555676_u128,124156957100550801060622373463345573113_u128,80868483138499284092605627694043455379_u128];
_8 = [(-6710000516512764456_i64)];
_6 = _5.0 < _5.0;
_8 = [733356754540045249_i64];
RET = !_6;
_7 = [263209547321707732354680196915291409135_u128,187545604662049579822606569614281310264_u128,25487051071768291276417040538921012209_u128,141933240552659225101976378174091363272_u128,260607230479610757327104335752185328746_u128,16632486643396187704563708646725338265_u128,175862670508861352214043318174064624880_u128,271031485584969071733578948920667316443_u128];
RET = !_6;
_7 = [142288395155774499878970959298103625651_u128,75328841707565120567735270644994809200_u128,58092881004950278309254881827320561091_u128,150327708405568239332976026862222074394_u128,59208842161643171481374193957052094855_u128,42013575845977105205167407640059621898_u128,28807194839713283056375754310391360270_u128,16600679227597229520570892608483576460_u128];
_6 = RET != RET;
_7 = [338801980199590932699867257600768628239_u128,281860821022470960306153696184962500778_u128,27783664689115494745179145644275448346_u128,264556403826871130387316696233612559186_u128,228786769854834214713645812443219629728_u128,270741021674682841034490807828834327523_u128,16828350591575900299355828829894240929_u128,189826563547443487889490826273189514040_u128];
_5 = (866510518855194946_u64,);
_2 = [_1,_1,_1,_1];
_5.0 = !13779243984757981049_u64;
RET = _6;
_7 = [328844094823502184121449849453936734443_u128,53712631280466857060165231161430627274_u128,62234242075760852476934930747923537006_u128,219939731076179832193779418645482561751_u128,170638092326342305048013731022783674985_u128,74015643063907178650635351918051983508_u128,198039960503444352325160438596785992765_u128,277270934097503553881401831089311117469_u128];
_9 = Adt52::Variant1 { fld0: 11382_i16 };
_8 = [(-247873954479593655_i64)];
_9 = Adt52::Variant1 { fld0: (-20026_i16) };
_3 = 963484712671098406_usize as f64;
_2 = [_1,_1,_1,_1];
_9 = Adt52::Variant1 { fld0: 22534_i16 };
_5.0 = _3 as u64;
match _1 {
0 => bb2,
1 => bb3,
4060723466 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_10.fld3.2 = !(-10_i8);
_9 = Adt52::Variant1 { fld0: (-971_i16) };
_9 = Adt52::Variant1 { fld0: (-675_i16) };
_10.fld0.0 = (-1965166362_i32) - (-2103496179_i32);
_9 = Adt52::Variant1 { fld0: (-19723_i16) };
_7 = [247189471396717273135381385713687629646_u128,206548009359303102224056657425183898581_u128,255108131863991331470958142677765332321_u128,119299005384084956066870934442732644827_u128,41147498108442353921836081449430984315_u128,186294236690548977618586041109881921381_u128,65672865542869286298836548310747982517_u128,25352440193603859726887825480680898599_u128];
_9 = Adt52::Variant1 { fld0: (-4342_i16) };
_10.fld3.2 = 121_u8 as i8;
_10.fld1.2 = !_6;
_10.fld3.0 = 2545906213249028686_usize as i16;
_1 = 3659345140_u32 * 4191035413_u32;
_10.fld2 = (-9223372036854775808_isize);
RET = !_10.fld1.2;
_10.fld0.0 = 1737510659_i32 << _1;
_10.fld3.0 = RET as i16;
place!(Field::<i16>(Variant(_9, 1), 0)) = -_10.fld3.0;
Goto(bb6)
}
bb6 = {
_10.fld3 = (Field::<i16>(Variant(_9, 1), 0), 67_i8, 3_i8);
_10.fld3 = (Field::<i16>(Variant(_9, 1), 0), 13_i8, (-112_i8));
_10.fld1.0.0 = [_1,_1,_1,_1];
_13.0.0 = _2;
_13.3 = [12197_u16,40211_u16,51663_u16,50514_u16];
_1 = 3743952482_u32;
_10.fld1.0 = (_2, _8);
_3 = 104545200955628310261434720589076263491_u128 as f64;
_3 = (-31218771713072042460579185341496407907_i128) as f64;
match _10.fld3.2 {
340282366920938463463374607431768211344 => bb7,
_ => bb2
}
}
bb7 = {
_14 = -_10.fld0.0;
_7 = [286958463178343504724454351613788819512_u128,113729995414070200497995204893458922281_u128,299935446204721371269322150541055477192_u128,214369228441368558936303183667293835843_u128,53415860784060870073223039062319959082_u128,85775363273950482956113973287798291120_u128,285178941711921987117757452994538401327_u128,248557108136566600699778113820966156912_u128];
_2 = [_1,_1,_1,_1];
_13.1 = 185320230563811302718485688409515476584_u128 as i32;
_10.fld0 = (_13.1,);
_13.0.0 = [_1,_1,_1,_1];
_17 = [_1,_1,_1,_1];
_10.fld2 = -(-29_isize);
_10.fld3.2 = -_10.fld3.1;
_18 = _7;
_10.fld3.1 = _10.fld2 as i8;
_13.0 = _10.fld1.0;
_13.3 = [18984_u16,4878_u16,27177_u16,34761_u16];
_3 = (-116424520057385765642424315473232814260_i128) as f64;
Call(RET = fn6(Move(_9), _13.3, _18, _13.0, _10.fld1.0.0, _10.fld1.2, _13.0.0, _13.3, _13.3, _13.0, _14), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_20 = !_10.fld1.2;
_22.3 = [22352_u16,36900_u16,4361_u16,46883_u16];
_19 = _10.fld3.0 as isize;
_22 = (_10.fld1.0, _14, RET, _13.3);
_13.0.1 = [(-2309245850345520296_i64)];
_16 = 98026582846350276506732764467838591213_i128 as usize;
_1 = !3896744121_u32;
_10.fld1.2 = !RET;
RET = _22.2 & _22.2;
_22.1 = 24_u8 as i32;
_10.fld1.0.1 = [5529261706666666387_i64];
_5 = (7015561447393518342_u64,);
_26 = !_1;
_10.fld0.0 = _26 as i32;
_13 = _22;
_16 = _22.1 as usize;
_15 = _3 + _3;
_13.0.1 = [(-8349600961383679500_i64)];
_10.fld1.3 = [58071_u16,34944_u16,64792_u16,63135_u16];
_23 = _10.fld3.0;
_10.fld3.2 = _10.fld3.1;
_10.fld3 = (_23, 126_i8, 113_i8);
_22.0.1 = [9146745122626984551_i64];
_25.1 = !_1;
_2 = [_26,_25.1,_1,_25.1];
_13.2 = _6;
_7 = [3913728278646276735044683785417059649_u128,38612612435908318045366462336034047605_u128,37603559489704088799429627507639503564_u128,223963208365013169987466688965811562009_u128,10815023723778575493872816115817193839_u128,193699647310582182007921393867435836630_u128,80713100405252936617150483908891928795_u128,119600202226030824961582657495996118017_u128];
Goto(bb9)
}
bb9 = {
Call(_29 = dump_var(5_usize, 8_usize, Move(_8), 19_usize, Move(_19), 14_usize, Move(_14), 23_usize, Move(_23)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_29 = dump_var(5_usize, 5_usize, Move(_5), 17_usize, Move(_17), 16_usize, Move(_16), 20_usize, Move(_20)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: Adt52,mut _2: [u16; 4],mut _3: [u128; 8],mut _4: ([u32; 4], [i64; 1]),mut _5: [u32; 4],mut _6: bool,mut _7: [u32; 4],mut _8: [u16; 4],mut _9: [u16; 4],mut _10: ([u32; 4], [i64; 1]),mut _11: i32) -> bool {
mir! {
type RET = bool;
let _12: (i32,);
let _13: Adt49;
let _14: f32;
let _15: isize;
let _16: Adt58;
let _17: i64;
let _18: char;
let _19: Adt51;
let _20: isize;
let _21: f64;
let _22: Adt58;
let _23: (i32,);
let _24: f32;
let _25: [u32; 4];
let _26: Adt52;
let _27: u8;
let _28: [u16; 4];
let _29: [u16; 4];
let _30: ();
let _31: ();
{
_9 = [37174_u16,17975_u16,7113_u16,59265_u16];
RET = !_6;
_11 = 1775361356_i32 ^ 396889696_i32;
_9 = _8;
RET = !_6;
_4.1 = [7176137456586948480_i64];
_5 = [3273503525_u32,434739767_u32,3809054178_u32,3328058964_u32];
_10.0 = _7;
_12.0 = 6_usize as i32;
Goto(bb1)
}
bb1 = {
_12.0 = _11;
_10 = _4;
_13.fld0 = 81_i8 as i128;
_9 = _2;
_9 = _2;
_5 = [3931958921_u32,2493705353_u32,1006325502_u32,4225985085_u32];
_12.0 = _11 & _11;
SetDiscriminant(_1, 0);
place!(Field::<u32>(Variant(_1, 0), 1)) = !2454709503_u32;
RET = _12.0 >= _11;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_1, 0), 0)).1 = core::ptr::addr_of_mut!(place!(Field::<(u16, u32, i64)>(Variant(_1, 0), 2)).2);
_10.1 = [1472542276932201620_i64];
_10.0 = _7;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_1, 0), 0)).4 = (_12.0,);
_10.0 = [Field::<u32>(Variant(_1, 0), 1),Field::<u32>(Variant(_1, 0), 1),Field::<u32>(Variant(_1, 0), 1),Field::<u32>(Variant(_1, 0), 1)];
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_1, 0), 0)).2 = (-15_i8) << _13.fld0;
_14 = 208_u8 as f32;
place!(Field::<(u16, u32, i64)>(Variant(_1, 0), 2)) = (59776_u16, Field::<u32>(Variant(_1, 0), 1), (-3897194811219283425_i64));
place!(Field::<(u16, u32, i64)>(Variant(_1, 0), 2)) = (22718_u16, Field::<u32>(Variant(_1, 0), 1), 7900305768911510712_i64);
match Field::<(u16, u32, i64)>(Variant(_1, 0), 2).0 {
0 => bb2,
1 => bb3,
22718 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_13.fld0 = !(-22138250882268889561663427241402448514_i128);
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_1, 0), 0)).0 = !14_u8;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_1, 0), 0)).2 = 104_i8 | (-95_i8);
_15 = 9223372036854775807_isize | (-9223372036854775808_isize);
_10 = (_5, _4.1);
_14 = 7_usize as f32;
_19 = Adt51::Variant0 { fld0: _6,fld1: _13.fld0,fld2: 134986305540849229870703344711974796998_u128,fld3: _10 };
_13 = Adt49 { fld0: Field::<i128>(Variant(_19, 0), 1) };
_1 = Adt52::Variant1 { fld0: (-1515_i16) };
_3 = [234757033658038318675149249622307297225_u128,207030869938737514981738678455601570241_u128,26148366432307837211607726547154983682_u128,190667836893803232496563997708386979095_u128,58694516154944094126622871635266995454_u128,162148195692780384812545718243941194851_u128,189448860297577503792977239317369711485_u128,210170048105251944407592113592819180984_u128];
place!(Field::<([u32; 4], [i64; 1])>(Variant(_19, 0), 3)) = (_4.0, _4.1);
_1 = Adt52::Variant1 { fld0: (-4132_i16) };
_15 = !124_isize;
place!(Field::<i16>(Variant(_1, 1), 0)) = 2307082905277554046_usize as i16;
_4.1 = _10.1;
_21 = 19_i8 as f64;
place!(Field::<([u32; 4], [i64; 1])>(Variant(_19, 0), 3)) = _4;
place!(Field::<u128>(Variant(_19, 0), 2)) = 64464993339980339645912665585010405824_u128 - 188980981278008000600672777875585693597_u128;
place!(Field::<bool>(Variant(_19, 0), 0)) = _6;
_13.fld0 = '\u{fb7e4}' as i128;
place!(Field::<i16>(Variant(_1, 1), 0)) = 15090393960154021759_usize as i16;
_2 = [37722_u16,25668_u16,42542_u16,14869_u16];
_3 = [Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2),Field::<u128>(Variant(_19, 0), 2)];
_19 = Adt51::Variant1 { fld0: _7 };
_18 = '\u{5db5a}';
Call(_10 = fn7(_12, _12, _4.0, Move(_19), Move(_1), _18, _9), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_4.1 = _10.1;
_10.1 = _4.1;
Goto(bb7)
}
bb7 = {
_23.0 = -_12.0;
_3 = [202081555472997931790508419929308406444_u128,39861898206394766827517406437460094814_u128,27417536415528846042141766102009853695_u128,90562912366729917664994259104103754969_u128,50177679656831820776230184044869293134_u128,197731403095329033852033539106171255156_u128,315405563217193477714582096762869925269_u128,17958415273084290939616785878516723252_u128];
_24 = _14 - _14;
_17 = 3522796615503711826_i64;
_19 = Adt51::Variant1 { fld0: _4.0 };
match _17 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb8,
5 => bb9,
3522796615503711826 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_18 = '\u{f4364}';
_5 = [2126172607_u32,3887922949_u32,3495706670_u32,1904392723_u32];
_13 = Adt49 { fld0: 153727093901656754572367847288643573160_i128 };
_20 = _15;
_7 = [1016547879_u32,3690440500_u32,258178130_u32,3161238713_u32];
_23 = (_11,);
SetDiscriminant(_19, 3);
_5 = [1032347927_u32,624533090_u32,3442411456_u32,1996658915_u32];
_22 = Adt58::Variant1 { fld0: (-30729_i16) };
_12 = _23;
_13.fld0 = (-1404149130909693750199876107818186492_i128) | (-32439107178932581666378743238512824564_i128);
Goto(bb12)
}
bb12 = {
_23 = (_11,);
_12 = (_23.0,);
place!(Field::<u32>(Variant(_19, 3), 3)) = _24 as u32;
_10 = _4;
place!(Field::<(i32,)>(Variant(_19, 3), 5)) = (_11,);
_10.1 = _4.1;
_28 = _8;
place!(Field::<u32>(Variant(_19, 3), 3)) = !743752733_u32;
place!(Field::<i16>(Variant(_22, 1), 0)) = -10670_i16;
_19 = Adt51::Variant0 { fld0: RET,fld1: _13.fld0,fld2: 194242567907238913743156376540579670595_u128,fld3: _10 };
_17 = 121_u8 as i64;
_7 = [3685636724_u32,2471329467_u32,747172986_u32,1318341965_u32];
RET = _11 < _11;
_6 = Field::<bool>(Variant(_19, 0), 0);
place!(Field::<u128>(Variant(_19, 0), 2)) = _24 as u128;
place!(Field::<bool>(Variant(_19, 0), 0)) = _24 < _24;
_16 = Move(_22);
_4.1 = [_17];
place!(Field::<i16>(Variant(_16, 1), 0)) = (-23960_i16) * 21348_i16;
place!(Field::<bool>(Variant(_19, 0), 0)) = !RET;
SetDiscriminant(_19, 0);
place!(Field::<([u32; 4], [i64; 1])>(Variant(_19, 0), 3)).0 = _4.0;
_20 = 18693_u16 as isize;
_12.0 = _11 >> Field::<i16>(Variant(_16, 1), 0);
_23 = _12;
_10.1 = [_17];
Goto(bb13)
}
bb13 = {
_27 = 200_u8;
_11 = _23.0 & _12.0;
place!(Field::<u128>(Variant(_19, 0), 2)) = !274246531756689502409214912784448050796_u128;
_22 = Move(_16);
SetDiscriminant(_22, 3);
_25 = [3539273352_u32,2669218973_u32,3386574503_u32,455658835_u32];
_9 = _8;
place!(Field::<i128>(Variant(_19, 0), 1)) = -_13.fld0;
place!(Field::<*mut i64>(Variant(_22, 3), 2)) = core::ptr::addr_of_mut!(_17);
_29 = [41151_u16,7576_u16,64042_u16,44022_u16];
place!(Field::<*mut i64>(Variant(_22, 3), 2)) = core::ptr::addr_of_mut!(_17);
place!(Field::<Adt45>(Variant(_22, 3), 1)).fld1.0.1 = _10.1;
place!(Field::<(i16, i8, i8)>(Variant(_22, 3), 0)) = ((-11257_i16), 126_i8, 4_i8);
place!(Field::<Adt45>(Variant(_22, 3), 1)).fld3 = Field::<(i16, i8, i8)>(Variant(_22, 3), 0);
RET = _6;
Goto(bb14)
}
bb14 = {
place!(Field::<Adt45>(Variant(_22, 3), 1)).fld3.0 = Field::<(i16, i8, i8)>(Variant(_22, 3), 0).0 - Field::<(i16, i8, i8)>(Variant(_22, 3), 0).0;
RET = _6;
place!(Field::<Adt45>(Variant(_22, 3), 1)).fld1.0 = _4;
_13.fld0 = Field::<i128>(Variant(_19, 0), 1);
place!(Field::<([u32; 4], [i64; 1])>(Variant(_19, 0), 3)).0 = _5;
_21 = 15668042070735028554_usize as f64;
_11 = _12.0;
_9 = [45997_u16,63969_u16,20084_u16,39228_u16];
place!(Field::<i128>(Variant(_19, 0), 1)) = _17 as i128;
place!(Field::<bool>(Variant(_19, 0), 0)) = _6 ^ RET;
place!(Field::<Adt45>(Variant(_22, 3), 1)).fld0.0 = _11;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(6_usize, 7_usize, Move(_7), 9_usize, Move(_9), 5_usize, Move(_5), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(6_usize, 17_usize, Move(_17), 11_usize, Move(_11), 23_usize, Move(_23), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(6_usize, 10_usize, Move(_10), 4_usize, Move(_4), 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: (i32,),mut _2: (i32,),mut _3: [u32; 4],mut _4: Adt51,mut _5: Adt52,mut _6: char,mut _7: [u16; 4]) -> ([u32; 4], [i64; 1]) {
mir! {
type RET = ([u32; 4], [i64; 1]);
let _8: [u16; 4];
let _9: i64;
let _10: (char, (u16, u32, i64), i64);
let _11: bool;
let _12: i16;
let _13: u8;
let _14: Adt53;
let _15: [bool; 1];
let _16: ([u32; 4], [i64; 1]);
let _17: (u64,);
let _18: Adt50;
let _19: [bool; 2];
let _20: (i16, i8, i8);
let _21: isize;
let _22: ();
let _23: ();
{
RET.0 = _3;
RET.0 = [4001121057_u32,1684993993_u32,3001526564_u32,544167785_u32];
RET.1 = [7264899641792489090_i64];
Goto(bb1)
}
bb1 = {
_2.0 = -_1.0;
_1.0 = _2.0;
RET.0 = [502348352_u32,1144401810_u32,1554819307_u32,2678962904_u32];
_4 = Adt51::Variant0 { fld0: false,fld1: 68470059762362275429838352785156043093_i128,fld2: 183319165247914216869200786063724309605_u128,fld3: RET };
_2 = (_1.0,);
_4 = Adt51::Variant0 { fld0: false,fld1: (-98956420566274792830743985053295531020_i128),fld2: 61240888393878892990218543389031504708_u128,fld3: RET };
place!(Field::<bool>(Variant(_4, 0), 0)) = !false;
place!(Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3)).1 = [(-466113078842324729_i64)];
place!(Field::<i128>(Variant(_4, 0), 1)) = (-26672651466425980778598586432089354444_i128) << _2.0;
RET.1 = Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1;
_8 = _7;
_1.0 = _2.0;
place!(Field::<i16>(Variant(_5, 1), 0)) = (-13794_i16);
RET.0 = _3;
match Field::<i16>(Variant(_5, 1), 0) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768197662 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_9 = 2312701928222439097_i64;
RET.0 = [3355566087_u32,4293918714_u32,1443317660_u32,110289492_u32];
_8 = [43935_u16,58046_u16,47325_u16,19722_u16];
_2.0 = _1.0 + _1.0;
RET.1 = [_9];
_10.1 = (48112_u16, 4218462045_u32, _9);
RET = (Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).0, Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1);
_10.1.2 = _9 | _9;
_2.0 = Field::<bool>(Variant(_4, 0), 0) as i32;
Call(RET.0 = fn8(Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3), Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1, _10.1.0, _8, _3, _10.1.2, _2.0, Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).0, _10.1.0, Field::<i128>(Variant(_4, 0), 1), _7), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_10.0 = _6;
_4 = Adt51::Variant1 { fld0: RET.0 };
RET.1 = [_10.1.2];
_2 = (_1.0,);
_10.0 = _6;
_9 = -_10.1.2;
_10.1.1 = !2398005311_u32;
place!(Field::<i16>(Variant(_5, 1), 0)) = 64_u8 as i16;
RET.1 = [_9];
RET.0 = Field::<[u32; 4]>(Variant(_4, 1), 0);
_2 = _1;
_10.1 = (37889_u16, 1470128138_u32, _9);
_10.1 = (11945_u16, 2812584552_u32, _9);
SetDiscriminant(_5, 0);
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)).0 = (-34081829449215139253895338701710579274_i128) as u16;
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)) = _10.1;
_13 = _1.0 as u8;
_10.2 = -_10.1.2;
_4 = Adt51::Variant0 { fld0: false,fld1: (-2197806170705498239392068803476644502_i128),fld2: 163527376081459609161685043920704175739_u128,fld3: RET };
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0)).4.0 = !_1.0;
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)).2 = 17197782481024407716_u64 as i64;
_6 = _10.0;
_11 = !true;
RET = Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3);
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)).0 = _10.1.0;
_9 = _10.1.2 | _10.2;
_10.1 = (Field::<(u16, u32, i64)>(Variant(_5, 0), 2).0, Field::<(u16, u32, i64)>(Variant(_5, 0), 2).1, Field::<(u16, u32, i64)>(Variant(_5, 0), 2).2);
Goto(bb12)
}
bb12 = {
place!(Field::<u128>(Variant(_4, 0), 2)) = !28826285003534231740494867375357246270_u128;
RET.0 = _3;
_10.1.2 = _10.2 << Field::<(u16, u32, i64)>(Variant(_5, 0), 2).1;
_1 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0).4;
_10 = (_6, Field::<(u16, u32, i64)>(Variant(_5, 0), 2), _9);
_10.1.0 = !Field::<(u16, u32, i64)>(Variant(_5, 0), 2).0;
_11 = false;
place!(Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3)).1 = RET.1;
_10.1.1 = Field::<(u16, u32, i64)>(Variant(_5, 0), 2).1 * Field::<(u16, u32, i64)>(Variant(_5, 0), 2).1;
_10.0 = _6;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0)).0 = _13;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0)).4.0 = -_1.0;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0)).3 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_4, 0), 2)));
_12 = 3989_i16 & 30869_i16;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0)).0 = !_13;
_14 = Adt53::Variant1 { fld0: 556984277849709615_u64,fld1: _2 };
match Field::<(u16, u32, i64)>(Variant(_5, 0), 2).0 {
0 => bb13,
1 => bb14,
2 => bb15,
11945 => bb17,
_ => bb16
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_2.0 = -_1.0;
_1.0 = _2.0;
RET.0 = [502348352_u32,1144401810_u32,1554819307_u32,2678962904_u32];
_4 = Adt51::Variant0 { fld0: false,fld1: 68470059762362275429838352785156043093_i128,fld2: 183319165247914216869200786063724309605_u128,fld3: RET };
_2 = (_1.0,);
_4 = Adt51::Variant0 { fld0: false,fld1: (-98956420566274792830743985053295531020_i128),fld2: 61240888393878892990218543389031504708_u128,fld3: RET };
place!(Field::<bool>(Variant(_4, 0), 0)) = !false;
place!(Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3)).1 = [(-466113078842324729_i64)];
place!(Field::<i128>(Variant(_4, 0), 1)) = (-26672651466425980778598586432089354444_i128) << _2.0;
RET.1 = Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1;
_8 = _7;
_1.0 = _2.0;
place!(Field::<i16>(Variant(_5, 1), 0)) = (-13794_i16);
RET.0 = _3;
match Field::<i16>(Variant(_5, 1), 0) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768197662 => bb10,
_ => bb9
}
}
bb16 = {
Return()
}
bb17 = {
RET.1 = Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1;
_10.1.0 = _6 as u16;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0)).4.0 = _2.0 | _2.0;
place!(Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3)).0 = [_10.1.1,_10.1.1,_10.1.1,Field::<(u16, u32, i64)>(Variant(_5, 0), 2).1];
RET.1 = [_10.2];
_10.1.2 = _10.2;
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)) = _10.1;
_13 = !Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_5, 0), 0).0;
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)) = (_10.1.0, _10.1.1, _10.2);
RET.1 = Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1;
_16.1 = [_10.2];
_16 = Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3);
place!(Field::<u128>(Variant(_4, 0), 2)) = 77011822662045868678552992932322270087_u128 & 7214838631682519253287135167669781612_u128;
_15 = [_11];
_16 = (RET.0, Field::<([u32; 4], [i64; 1])>(Variant(_4, 0), 3).1);
place!(Field::<(u16, u32, i64)>(Variant(_5, 0), 2)).0 = _10.1.0 ^ _10.1.0;
Goto(bb18)
}
bb18 = {
Call(_22 = dump_var(7_usize, 12_usize, Move(_12), 10_usize, Move(_10), 7_usize, Move(_7), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_22 = dump_var(7_usize, 13_usize, Move(_13), 11_usize, Move(_11), 23_usize, _23, 23_usize, _23), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: ([u32; 4], [i64; 1]),mut _2: [i64; 1],mut _3: u16,mut _4: [u16; 4],mut _5: [u32; 4],mut _6: i64,mut _7: i32,mut _8: [u32; 4],mut _9: u16,mut _10: i128,mut _11: [u16; 4]) -> [u32; 4] {
mir! {
type RET = [u32; 4];
let _12: *mut isize;
let _13: [bool; 2];
let _14: bool;
let _15: isize;
let _16: (i32,);
let _17: u8;
let _18: f32;
let _19: char;
let _20: ([u32; 4], [i64; 1]);
let _21: bool;
let _22: Adt50;
let _23: char;
let _24: bool;
let _25: i32;
let _26: u64;
let _27: Adt46;
let _28: u128;
let _29: [i128; 4];
let _30: Adt47;
let _31: isize;
let _32: *const u128;
let _33: (u64,);
let _34: bool;
let _35: char;
let _36: ();
let _37: ();
{
RET = [953939929_u32,2699432020_u32,821964586_u32,1884354888_u32];
_1 = (RET, _2);
_1.1 = [_6];
_5 = [1048709124_u32,492354563_u32,2139296479_u32,3102768139_u32];
_1.1 = [_6];
_11 = [_9,_3,_9,_3];
_1.1 = _2;
_1.0 = [95396701_u32,1845609382_u32,2403812067_u32,2853455391_u32];
_13 = [false,false];
_6 = !3036529847028728216_i64;
RET = _8;
RET = [250278423_u32,1174273363_u32,295137304_u32,2063003396_u32];
_8 = _5;
_10 = !57137018612363747098263544713490907499_i128;
_2 = [_6];
_3 = _10 as u16;
Call(_13 = fn9(_4, _7, _8, _5, _3, _9, _6, _1.0, _9, _11, _9, _1.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = -109705570980451050509061334694254317414_i128;
_16.0 = -_7;
_5 = _8;
_12 = core::ptr::addr_of_mut!(_15);
_11 = _4;
_2 = [_6];
_14 = !false;
_17 = 119_u8 << _16.0;
_19 = '\u{e06e9}';
_5 = [4119618997_u32,1629204428_u32,3325374073_u32,247072084_u32];
_16 = (_7,);
_20.0 = _5;
_15 = 15781402929048569685_u64 as isize;
_21 = _3 == _9;
_11 = [_9,_9,_9,_3];
_19 = '\u{e61f9}';
_1.0 = [1672690835_u32,1175751351_u32,1018347370_u32,3970356806_u32];
_10 = -(-52531224007378215469144261601421837729_i128);
Goto(bb2)
}
bb2 = {
RET = _8;
_16 = (_7,);
_20 = _1;
_16.0 = _7;
_20.1 = [_6];
_4 = _11;
_7 = (-30372_i16) as i32;
_12 = core::ptr::addr_of_mut!(_15);
_20 = _1;
_1.0 = [2914789242_u32,2757384039_u32,1403020697_u32,2330214250_u32];
match _9 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
48112 => bb8,
_ => bb7
}
}
bb3 = {
_10 = -109705570980451050509061334694254317414_i128;
_16.0 = -_7;
_5 = _8;
_12 = core::ptr::addr_of_mut!(_15);
_11 = _4;
_2 = [_6];
_14 = !false;
_17 = 119_u8 << _16.0;
_19 = '\u{e06e9}';
_5 = [4119618997_u32,1629204428_u32,3325374073_u32,247072084_u32];
_16 = (_7,);
_20.0 = _5;
_15 = 15781402929048569685_u64 as isize;
_21 = _3 == _9;
_11 = [_9,_9,_9,_3];
_19 = '\u{e61f9}';
_1.0 = [1672690835_u32,1175751351_u32,1018347370_u32,3970356806_u32];
_10 = -(-52531224007378215469144261601421837729_i128);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = core::ptr::addr_of_mut!(_15);
_14 = _21;
_20.1 = [_6];
_3 = !_9;
RET = [978665816_u32,951164873_u32,4141472445_u32,2540631810_u32];
_13 = [_14,_14];
_20 = (_1.0, _2);
_9 = _3 * _3;
_11 = [_3,_3,_9,_9];
_18 = _17 as f32;
_20.0 = [921312886_u32,2801941446_u32,3304550996_u32,3111574371_u32];
_20.0 = [2374412767_u32,2637053515_u32,3702276200_u32,1544121948_u32];
_11 = [_3,_3,_9,_9];
_16 = (_7,);
_19 = '\u{3d8dc}';
RET = [2602959190_u32,2227877066_u32,2346990791_u32,3131327200_u32];
_1.1 = _20.1;
_9 = 7926360563081046888_usize as u16;
RET = [2192363898_u32,2327494722_u32,3568468616_u32,107142467_u32];
_20 = (_5, _1.1);
_9 = _3;
_6 = (-5117920164207850114_i64);
_8 = [3072540641_u32,2928441901_u32,4205355501_u32,490102600_u32];
_10 = 132601237162447826594499409102447959657_i128 * (-126958486254539450836156253825679642993_i128);
_9 = !_3;
match _6 {
0 => bb6,
1 => bb9,
2 => bb10,
3 => bb11,
340282366920938463458256687267560361342 => bb13,
_ => bb12
}
}
bb9 = {
Return()
}
bb10 = {
_10 = -109705570980451050509061334694254317414_i128;
_16.0 = -_7;
_5 = _8;
_12 = core::ptr::addr_of_mut!(_15);
_11 = _4;
_2 = [_6];
_14 = !false;
_17 = 119_u8 << _16.0;
_19 = '\u{e06e9}';
_5 = [4119618997_u32,1629204428_u32,3325374073_u32,247072084_u32];
_16 = (_7,);
_20.0 = _5;
_15 = 15781402929048569685_u64 as isize;
_21 = _3 == _9;
_11 = [_9,_9,_9,_3];
_19 = '\u{e61f9}';
_1.0 = [1672690835_u32,1175751351_u32,1018347370_u32,3970356806_u32];
_10 = -(-52531224007378215469144261601421837729_i128);
Goto(bb2)
}
bb11 = {
Return()
}
bb12 = {
_10 = -109705570980451050509061334694254317414_i128;
_16.0 = -_7;
_5 = _8;
_12 = core::ptr::addr_of_mut!(_15);
_11 = _4;
_2 = [_6];
_14 = !false;
_17 = 119_u8 << _16.0;
_19 = '\u{e06e9}';
_5 = [4119618997_u32,1629204428_u32,3325374073_u32,247072084_u32];
_16 = (_7,);
_20.0 = _5;
_15 = 15781402929048569685_u64 as isize;
_21 = _3 == _9;
_11 = [_9,_9,_9,_3];
_19 = '\u{e61f9}';
_1.0 = [1672690835_u32,1175751351_u32,1018347370_u32,3970356806_u32];
_10 = -(-52531224007378215469144261601421837729_i128);
Goto(bb2)
}
bb13 = {
_23 = _19;
_17 = 100_u8;
_21 = !_14;
_16.0 = _7 ^ _7;
_1.0 = [3204863537_u32,2498080476_u32,877150585_u32,446331385_u32];
_25 = !_7;
_2 = [_6];
_12 = core::ptr::addr_of_mut!((*_12));
_1 = (_8, _2);
_9 = _3;
_1 = (_8, _20.1);
_24 = _21;
Goto(bb14)
}
bb14 = {
_3 = !_9;
_21 = _24 <= _14;
_19 = _23;
_12 = core::ptr::addr_of_mut!(_15);
_26 = _10 as u64;
_9 = (-20387_i16) as u16;
RET = [3643275632_u32,4238287090_u32,626322397_u32,1637031368_u32];
_1.0 = [3273128445_u32,1304957206_u32,936688559_u32,3776367392_u32];
_28 = 9101632056803044846_usize as u128;
_8 = _5;
_17 = _16.0 as u8;
_15 = !108_isize;
_20 = _1;
_15 = -(-9223372036854775808_isize);
_18 = _17 as f32;
_16 = (_7,);
_7 = _16.0 << _6;
_7 = _16.0;
_28 = 283895181861014949959589967682022063939_u128 + 113346475034625880277297532622328575853_u128;
_33.0 = (-31471_i16) as u64;
_2 = [_6];
_9 = !_3;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(8_usize, 7_usize, Move(_7), 25_usize, Move(_25), 24_usize, Move(_24), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(8_usize, 19_usize, Move(_19), 17_usize, Move(_17), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(8_usize, 33_usize, Move(_33), 6_usize, Move(_6), 21_usize, Move(_21), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [u16; 4],mut _2: i32,mut _3: [u32; 4],mut _4: [u32; 4],mut _5: u16,mut _6: u16,mut _7: i64,mut _8: [u32; 4],mut _9: u16,mut _10: [u16; 4],mut _11: u16,mut _12: [u32; 4]) -> [bool; 2] {
mir! {
type RET = [bool; 2];
let _13: Adt48;
let _14: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _15: (isize, &'static *mut [u32; 4]);
let _16: Adt47;
let _17: [u16; 4];
let _18: i32;
let _19: char;
let _20: (char, *mut i64);
let _21: isize;
let _22: Adt48;
let _23: u16;
let _24: ();
let _25: ();
{
_5 = _11 % _9;
_2 = 1659768016_i32;
_10 = _1;
_1 = [_5,_6,_6,_5];
_9 = _5;
RET = [true,false];
_11 = !_6;
_4 = [360075699_u32,3989125005_u32,2037434063_u32,3004093457_u32];
_1 = [_9,_5,_9,_5];
_2 = 1702332940_i32;
_11 = _5 % _6;
_2 = (-571842680_i32);
_5 = _11;
_12 = [3409748185_u32,1216148093_u32,982230913_u32,3149825601_u32];
_12 = _3;
_5 = _7 as u16;
_9 = _11;
_9 = !_11;
Call(_2 = fn10(_9, _9, _6, _11, _1, _9, _1, _6, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = [83326631_u32,795593446_u32,1713428171_u32,2627503255_u32];
_5 = _9;
_6 = _11 & _5;
_9 = _11;
_6 = (-111_isize) as u16;
RET = [false,false];
_11 = _5 | _5;
_4 = [68587509_u32,2666410415_u32,2798125150_u32,1139525_u32];
RET = [false,false];
Call(_5 = core::intrinsics::bswap(_9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12 = [3182796989_u32,3494351557_u32,3457091201_u32,2995788531_u32];
_12 = _4;
_6 = 88_i8 as u16;
_7 = 455806727611472985_i64;
_3 = [4096626148_u32,1845659905_u32,192458998_u32,3280224103_u32];
_1 = [_5,_11,_9,_11];
_11 = true as u16;
RET = [true,true];
RET = [true,false];
_2 = 7_usize as i32;
_5 = !_9;
_9 = 1439493606_u32 as u16;
RET = [false,false];
_1 = [_5,_5,_11,_5];
_3 = _12;
_7 = 4781913814137726859_i64 << _6;
_14.1 = 193760362495583580675914952200303044055_u128 as i32;
RET = [false,false];
_11 = _5 >> _5;
_2 = _14.1 * _14.1;
RET = [true,false];
_12 = [977289427_u32,971691074_u32,2504677176_u32,3598856070_u32];
Goto(bb3)
}
bb3 = {
_5 = _11 * _11;
_14.2 = true | true;
_14.0.0 = _8;
_11 = _9;
_18 = _14.1 >> _5;
_1 = _10;
_2 = _18 >> _18;
_8 = [3120250991_u32,169597022_u32,2500009825_u32,4180516122_u32];
_3 = _8;
RET = [_14.2,_14.2];
Call(_11 = fn15(_2, _2, _2, _18, _18, _18, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_15.0 = 9223372036854775807_isize;
_10 = [_5,_5,_5,_11];
match _11 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
42156 => bb11,
_ => bb10
}
}
bb5 = {
_5 = _11 * _11;
_14.2 = true | true;
_14.0.0 = _8;
_11 = _9;
_18 = _14.1 >> _5;
_1 = _10;
_2 = _18 >> _18;
_8 = [3120250991_u32,169597022_u32,2500009825_u32,4180516122_u32];
_3 = _8;
RET = [_14.2,_14.2];
Call(_11 = fn15(_2, _2, _2, _18, _18, _18, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_12 = [3182796989_u32,3494351557_u32,3457091201_u32,2995788531_u32];
_12 = _4;
_6 = 88_i8 as u16;
_7 = 455806727611472985_i64;
_3 = [4096626148_u32,1845659905_u32,192458998_u32,3280224103_u32];
_1 = [_5,_11,_9,_11];
_11 = true as u16;
RET = [true,true];
RET = [true,false];
_2 = 7_usize as i32;
_5 = !_9;
_9 = 1439493606_u32 as u16;
RET = [false,false];
_1 = [_5,_5,_11,_5];
_3 = _12;
_7 = 4781913814137726859_i64 << _6;
_14.1 = 193760362495583580675914952200303044055_u128 as i32;
RET = [false,false];
_11 = _5 >> _5;
_2 = _14.1 * _14.1;
RET = [true,false];
_12 = [977289427_u32,971691074_u32,2504677176_u32,3598856070_u32];
Goto(bb3)
}
bb7 = {
_12 = [83326631_u32,795593446_u32,1713428171_u32,2627503255_u32];
_5 = _9;
_6 = _11 & _5;
_9 = _11;
_6 = (-111_isize) as u16;
RET = [false,false];
_11 = _5 | _5;
_4 = [68587509_u32,2666410415_u32,2798125150_u32,1139525_u32];
RET = [false,false];
Call(_5 = core::intrinsics::bswap(_9), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_4 = _12;
_6 = _5;
_14.0.0 = _12;
_1 = [_6,_6,_5,_5];
_15.0 = _6 as isize;
_6 = !_5;
_14.2 = _2 <= _18;
_14.0.1 = [_7];
_18 = _2;
_20.0 = '\u{a1416}';
_2 = 4_usize as i32;
_6 = _5;
_18 = -_2;
Call(_12 = core::intrinsics::transmute(_14.0.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_9 = _20.0 as u16;
_14.0.0 = [1910548633_u32,2053314230_u32,1323780288_u32,2195322854_u32];
_17 = _10;
_21 = _15.0;
_14.0.0 = [1230206649_u32,3019882600_u32,2713997702_u32,1140558785_u32];
_1 = [_6,_6,_6,_6];
_5 = _6;
match _11 {
0 => bb10,
42156 => bb14,
_ => bb13
}
}
bb13 = {
_5 = _11 * _11;
_14.2 = true | true;
_14.0.0 = _8;
_11 = _9;
_18 = _14.1 >> _5;
_1 = _10;
_2 = _18 >> _18;
_8 = [3120250991_u32,169597022_u32,2500009825_u32,4180516122_u32];
_3 = _8;
RET = [_14.2,_14.2];
Call(_11 = fn15(_2, _2, _2, _18, _18, _18, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_1 = [_9,_5,_5,_6];
_19 = _20.0;
_12 = _4;
_2 = !_18;
_21 = -_15.0;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(9_usize, 19_usize, Move(_19), 10_usize, Move(_10), 8_usize, Move(_8), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(9_usize, 7_usize, Move(_7), 1_usize, Move(_1), 9_usize, Move(_9), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: u16,mut _2: u16,mut _3: u16,mut _4: u16,mut _5: [u16; 4],mut _6: u16,mut _7: [u16; 4],mut _8: u16,mut _9: [u16; 4]) -> i32 {
mir! {
type RET = i32;
let _10: u64;
let _11: isize;
let _12: (i32,);
let _13: u128;
let _14: u8;
let _15: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _16: bool;
let _17: Adt45;
let _18: Adt59;
let _19: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _20: bool;
let _21: f32;
let _22: char;
let _23: (u16,);
let _24: Adt47;
let _25: [u128; 8];
let _26: ([u32; 4], [i64; 1]);
let _27: i16;
let _28: isize;
let _29: usize;
let _30: u32;
let _31: i64;
let _32: f64;
let _33: ();
let _34: ();
{
RET = 87399964528953767168753035362628530039_u128 as i32;
_5 = [_4,_1,_6,_1];
_3 = _4 + _4;
_4 = 3980340015730196311_i64 as u16;
_5 = _7;
_5 = _9;
_10 = 153_u8 as u64;
_12 = (RET,);
_11 = _10 as isize;
RET = _12.0;
_6 = true as u16;
_2 = _3;
Goto(bb1)
}
bb1 = {
_6 = _2 ^ _8;
_12.0 = RET;
_8 = _3 + _3;
Goto(bb2)
}
bb2 = {
_6 = '\u{d90a0}' as u16;
_4 = !_2;
_1 = !_3;
RET = !_12.0;
RET = (-55_i8) as i32;
_2 = !_8;
_10 = 7888435154877241256_u64;
_3 = '\u{18d8a}' as u16;
_9 = _5;
_12 = (RET,);
_15.0.0 = [2939793163_u32,9744062_u32,3793210270_u32,2013820788_u32];
_15.3 = [_8,_8,_8,_4];
_2 = _8;
_3 = _8;
Goto(bb3)
}
bb3 = {
RET = -_12.0;
_2 = _1;
RET = _12.0;
_17.fld3.2 = (-126_i8);
_19.2 = false;
_19.0.0 = [2092470248_u32,3099127159_u32,2298766400_u32,1518508839_u32];
_18.fld2 = core::ptr::addr_of_mut!(_11);
_17.fld3.0 = !(-8622_i16);
_19.1 = _12.0 | RET;
_19.1 = _19.2 as i32;
_4 = _3;
_16 = _4 == _4;
_20 = !_16;
_17.fld3.0 = (-12280_i16) & (-5918_i16);
Goto(bb4)
}
bb4 = {
_5 = [_3,_2,_8,_4];
_19.0.1 = [(-1596494296232096610_i64)];
_19.2 = _20;
_18.fld1 = Adt53::Variant1 { fld0: _10,fld1: _12 };
place!(Field::<u64>(Variant(_18.fld1, 1), 0)) = _10;
_12 = (_19.1,);
_17.fld1.0 = (_19.0.0, _19.0.1);
_20 = !_16;
_19 = (_17.fld1.0, RET, _20, _15.3);
_17.fld3.1 = _17.fld3.2;
_17.fld1.0 = (_15.0.0, _19.0.1);
_5 = _15.3;
_19.1 = _12.0 & _12.0;
_17.fld3 = ((-3509_i16), (-30_i8), (-57_i8));
_17.fld0.0 = _12.0;
_12 = (_19.1,);
_12 = (_19.1,);
_11 = !9223372036854775807_isize;
SetDiscriminant(_18.fld1, 1);
_17.fld0 = _12;
_17.fld3.2 = _11 as i8;
_18.fld0.0 = _10;
_17.fld1.3 = [_4,_4,_1,_4];
_1 = !_4;
_17.fld1 = (_19.0, _12.0, _20, _19.3);
_25 = [282875165715652640079631448499422450516_u128,38363923575703554943971155990418403113_u128,191198964859541455487102473198772258538_u128,118660659817896431921922804573477500549_u128,48695972523143363760617879028709562464_u128,189631183372944840279743712864136233062_u128,232621326540498709700170578188674506858_u128,69632558746437408052161411571059694183_u128];
_11 = 253_u8 as isize;
_20 = _17.fld1.2;
Call(_15.3 = fn11(_17.fld1, _17.fld1.2, _17.fld1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_19.2 = !_20;
_17.fld2 = _11;
_18.fld2 = core::ptr::addr_of_mut!(_11);
match _17.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463463374607431768211426 => bb8,
_ => bb7
}
}
bb6 = {
_5 = [_3,_2,_8,_4];
_19.0.1 = [(-1596494296232096610_i64)];
_19.2 = _20;
_18.fld1 = Adt53::Variant1 { fld0: _10,fld1: _12 };
place!(Field::<u64>(Variant(_18.fld1, 1), 0)) = _10;
_12 = (_19.1,);
_17.fld1.0 = (_19.0.0, _19.0.1);
_20 = !_16;
_19 = (_17.fld1.0, RET, _20, _15.3);
_17.fld3.1 = _17.fld3.2;
_17.fld1.0 = (_15.0.0, _19.0.1);
_5 = _15.3;
_19.1 = _12.0 & _12.0;
_17.fld3 = ((-3509_i16), (-30_i8), (-57_i8));
_17.fld0.0 = _12.0;
_12 = (_19.1,);
_12 = (_19.1,);
_11 = !9223372036854775807_isize;
SetDiscriminant(_18.fld1, 1);
_17.fld0 = _12;
_17.fld3.2 = _11 as i8;
_18.fld0.0 = _10;
_17.fld1.3 = [_4,_4,_1,_4];
_1 = !_4;
_17.fld1 = (_19.0, _12.0, _20, _19.3);
_25 = [282875165715652640079631448499422450516_u128,38363923575703554943971155990418403113_u128,191198964859541455487102473198772258538_u128,118660659817896431921922804573477500549_u128,48695972523143363760617879028709562464_u128,189631183372944840279743712864136233062_u128,232621326540498709700170578188674506858_u128,69632558746437408052161411571059694183_u128];
_11 = 253_u8 as isize;
_20 = _17.fld1.2;
Call(_15.3 = fn11(_17.fld1, _17.fld1.2, _17.fld1), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_6 = _2 ^ _8;
_12.0 = RET;
_8 = _3 + _3;
Goto(bb2)
}
bb8 = {
_25 = [150891033421101173275547221117435095311_u128,240236478318590628795489188064137843356_u128,58637396291121216032820309364725915205_u128,19839174433841749974829780054402009520_u128,200898147832607564252139612849405216625_u128,160361615681070668799455412133432354042_u128,15326687679436794309851071509217133728_u128,213250916371346603661707258721391234801_u128];
_26 = (_15.0.0, _17.fld1.0.1);
_16 = _19.2;
_19.1 = !_17.fld1.1;
_22 = '\u{b86b9}';
_19.0.1 = _17.fld1.0.1;
_26 = _19.0;
_17.fld1.0 = (_19.0.0, _19.0.1);
_15 = (_19.0, _12.0, _20, _5);
RET = _17.fld0.0;
_17.fld1.3 = [_8,_8,_1,_2];
Goto(bb9)
}
bb9 = {
_21 = _15.1 as f32;
place!(Field::<(i32,)>(Variant(_18.fld1, 1), 1)) = _12;
_13 = 26510473552935472002996423310687383968_u128;
_20 = _19.2;
_15.2 = !_17.fld1.2;
_22 = '\u{a8220}';
_17.fld3.2 = _17.fld3.1 | _17.fld3.1;
place!(Field::<(i32,)>(Variant(_18.fld1, 1), 1)).0 = RET >> _4;
_20 = _19.2;
_17.fld0.0 = !_17.fld1.1;
place!(Field::<(i32,)>(Variant(_18.fld1, 1), 1)).0 = _15.1 & _17.fld0.0;
place!(Field::<(i32,)>(Variant(_18.fld1, 1), 1)).0 = _17.fld1.1;
Call(_7 = fn14(_15.3, _3, _19.1, Move(_17), _15, _19.2, _19.3, _2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_17.fld1.0.0 = [3689822859_u32,190503394_u32,861625743_u32,1078334384_u32];
_23.0 = _4;
_12 = (_15.1,);
_15.0.0 = [674420074_u32,4060933346_u32,3994413264_u32,3141963914_u32];
RET = _15.1 ^ _15.1;
_23 = (_3,);
_2 = _21 as u16;
_12.0 = 7454_i16 as i32;
_14 = !58_u8;
_30 = 241396294_u32;
match _10 {
0 => bb5,
1 => bb2,
2 => bb7,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
7888435154877241256 => bb16,
_ => bb15
}
}
bb11 = {
_5 = [_3,_2,_8,_4];
_19.0.1 = [(-1596494296232096610_i64)];
_19.2 = _20;
_18.fld1 = Adt53::Variant1 { fld0: _10,fld1: _12 };
place!(Field::<u64>(Variant(_18.fld1, 1), 0)) = _10;
_12 = (_19.1,);
_17.fld1.0 = (_19.0.0, _19.0.1);
_20 = !_16;
_19 = (_17.fld1.0, RET, _20, _15.3);
_17.fld3.1 = _17.fld3.2;
_17.fld1.0 = (_15.0.0, _19.0.1);
_5 = _15.3;
_19.1 = _12.0 & _12.0;
_17.fld3 = ((-3509_i16), (-30_i8), (-57_i8));
_17.fld0.0 = _12.0;
_12 = (_19.1,);
_12 = (_19.1,);
_11 = !9223372036854775807_isize;
SetDiscriminant(_18.fld1, 1);
_17.fld0 = _12;
_17.fld3.2 = _11 as i8;
_18.fld0.0 = _10;
_17.fld1.3 = [_4,_4,_1,_4];
_1 = !_4;
_17.fld1 = (_19.0, _12.0, _20, _19.3);
_25 = [282875165715652640079631448499422450516_u128,38363923575703554943971155990418403113_u128,191198964859541455487102473198772258538_u128,118660659817896431921922804573477500549_u128,48695972523143363760617879028709562464_u128,189631183372944840279743712864136233062_u128,232621326540498709700170578188674506858_u128,69632558746437408052161411571059694183_u128];
_11 = 253_u8 as isize;
_20 = _17.fld1.2;
Call(_15.3 = fn11(_17.fld1, _17.fld1.2, _17.fld1), ReturnTo(bb5), UnwindUnreachable())
}
bb12 = {
_25 = [150891033421101173275547221117435095311_u128,240236478318590628795489188064137843356_u128,58637396291121216032820309364725915205_u128,19839174433841749974829780054402009520_u128,200898147832607564252139612849405216625_u128,160361615681070668799455412133432354042_u128,15326687679436794309851071509217133728_u128,213250916371346603661707258721391234801_u128];
_26 = (_15.0.0, _17.fld1.0.1);
_16 = _19.2;
_19.1 = !_17.fld1.1;
_22 = '\u{b86b9}';
_19.0.1 = _17.fld1.0.1;
_26 = _19.0;
_17.fld1.0 = (_19.0.0, _19.0.1);
_15 = (_19.0, _12.0, _20, _5);
RET = _17.fld0.0;
_17.fld1.3 = [_8,_8,_1,_2];
Goto(bb9)
}
bb13 = {
_6 = _2 ^ _8;
_12.0 = RET;
_8 = _3 + _3;
Goto(bb2)
}
bb14 = {
RET = -_12.0;
_2 = _1;
RET = _12.0;
_17.fld3.2 = (-126_i8);
_19.2 = false;
_19.0.0 = [2092470248_u32,3099127159_u32,2298766400_u32,1518508839_u32];
_18.fld2 = core::ptr::addr_of_mut!(_11);
_17.fld3.0 = !(-8622_i16);
_19.1 = _12.0 | RET;
_19.1 = _19.2 as i32;
_4 = _3;
_16 = _4 == _4;
_20 = !_16;
_17.fld3.0 = (-12280_i16) & (-5918_i16);
Goto(bb4)
}
bb15 = {
_19.2 = !_20;
_17.fld2 = _11;
_18.fld2 = core::ptr::addr_of_mut!(_11);
match _17.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463463374607431768211426 => bb8,
_ => bb7
}
}
bb16 = {
_15.0.1 = _19.0.1;
_19.1 = _15.1;
_17.fld1 = _19;
_18.fld0 = (_10,);
_5 = _15.3;
_5 = _17.fld1.3;
_32 = _30 as f64;
_31 = _13 as i64;
Goto(bb17)
}
bb17 = {
Call(_33 = dump_var(10_usize, 7_usize, Move(_7), 8_usize, Move(_8), 25_usize, Move(_25), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_33 = dump_var(10_usize, 19_usize, Move(_19), 26_usize, Move(_26), 9_usize, Move(_9), 2_usize, Move(_2)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_33 = dump_var(10_usize, 30_usize, Move(_30), 1_usize, Move(_1), 20_usize, Move(_20), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),mut _2: bool,mut _3: (([u32; 4], [i64; 1]), i32, bool, [u16; 4])) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _4: [u16; 4];
let _5: *const u128;
let _6: Adt44;
let _7: char;
let _8: bool;
let _9: [u128; 8];
let _10: [i64; 1];
let _11: Adt50;
let _12: u8;
let _13: usize;
let _14: Adt51;
let _15: (u16, u32, i64);
let _16: *mut [u32; 4];
let _17: *const u32;
let _18: (char, (u16, u32, i64), i64);
let _19: (u64,);
let _20: u8;
let _21: isize;
let _22: Adt47;
let _23: char;
let _24: char;
let _25: u8;
let _26: isize;
let _27: char;
let _28: f64;
let _29: usize;
let _30: f32;
let _31: ();
let _32: ();
{
RET = _1.3;
_1.0.0 = [800318913_u32,58285455_u32,2493056092_u32,2900319839_u32];
_1.0.1 = [6668095555998290408_i64];
_3.0.0 = [184821243_u32,1137092396_u32,983756642_u32,337167871_u32];
_3.3 = RET;
_1.0.0 = [3608382996_u32,3044149498_u32,3312375479_u32,1648024101_u32];
_3.2 = _1.2;
_3 = (_1.0, _1.1, _2, _1.3);
_3.1 = _1.1 | _1.1;
_1.0.0 = _3.0.0;
_3.1 = _1.1 * _1.1;
_2 = !_1.2;
_1.3 = _3.3;
_3 = (_1.0, _1.1, _1.2, _1.3);
_3 = (_1.0, _1.1, _1.2, _1.3);
_4 = [12408_u16,25547_u16,43287_u16,23046_u16];
_3.0.0 = [3876223627_u32,486376699_u32,3696112631_u32,3213785003_u32];
_1.0 = _3.0;
RET = [56334_u16,18067_u16,46033_u16,42458_u16];
_1.3 = [33329_u16,15535_u16,27576_u16,44725_u16];
_2 = _3.2;
_3.0 = (_1.0.0, _1.0.1);
_1.3 = [3510_u16,55096_u16,20259_u16,57424_u16];
_3.3 = [32654_u16,112_u16,36014_u16,60677_u16];
_3.2 = _2;
Goto(bb1)
}
bb1 = {
RET = [38734_u16,15980_u16,5119_u16,23373_u16];
RET = [49925_u16,28072_u16,31614_u16,40065_u16];
RET = [21435_u16,40317_u16,55385_u16,973_u16];
_9 = [180367902967589625976647043488148688792_u128,339593438962318597454330659850852365347_u128,15027554343573626503806986545873488010_u128,20089278124367936296948031674713344263_u128,290340170887550279518126089431277896551_u128,154678185924469673457986433878512878404_u128,198474398542156491333819718716459583493_u128,45903634125313971181765687852540312374_u128];
_7 = '\u{9b700}';
_2 = !_3.2;
_1.2 = !_3.2;
_1 = (_3.0, _3.1, _3.2, RET);
_4 = [11398_u16,40448_u16,57195_u16,52060_u16];
_2 = _1.2;
_1.2 = !_3.2;
_4 = _3.3;
_9 = [113701562151524978699720770948270027423_u128,13501807530595891354153821722194893407_u128,333622083052905743388725680646170802810_u128,91643264886241684918365353685883772388_u128,145197797442363913999519118912750593444_u128,78887839247762134281742331358586402058_u128,72656870776378303458738918720565076365_u128,41139301631986085129857701936872217205_u128];
_10 = [5214901921259706632_i64];
_1.1 = !_3.1;
_4 = [39777_u16,50532_u16,11380_u16,13426_u16];
_12 = 64807_u16 as u8;
Goto(bb2)
}
bb2 = {
_1.0 = (_3.0.0, _10);
_1.1 = 89963362_u32 as i32;
_1 = (_3.0, _3.1, _3.2, _3.3);
_1.0.1 = [(-7711295859576351695_i64)];
_12 = 180_u8 << _1.1;
_9 = [333297461822014528312054083367129152994_u128,26004517277365736884454271035861685844_u128,276689715050136338558633816042313134240_u128,167555968935246990526328074369532008492_u128,316976552656718235069421238766300168812_u128,98982078986987185629146329397741425297_u128,277869108961820106869680251001917180909_u128,89075556754355178210592877274692649579_u128];
_3 = _1;
_16 = core::ptr::addr_of_mut!(_1.0.0);
_3.3 = [33497_u16,3325_u16,42024_u16,50731_u16];
_15.0 = 44351_u16 | 35478_u16;
_12 = (-166734389705919110155080081530850871958_i128) as u8;
Call(_15.1 = fn12(_16, _2, _1, _1.2, _2, RET, _3, _3.2, _1, _1.2, _1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = _1;
_14 = Adt51::Variant1 { fld0: (*_16) };
_1.2 = _2;
_2 = !_3.2;
_1.0 = _3.0;
_19 = (10298253911762699441_u64,);
RET = _4;
_13 = (-4517265908268297761903780599574913332_i128) as usize;
RET = [_15.0,_15.0,_15.0,_15.0];
_3.0.1 = _10;
_18.1.1 = _15.1 & _15.1;
match _19.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
10298253911762699441 => bb11,
_ => bb10
}
}
bb4 = {
_1.0 = (_3.0.0, _10);
_1.1 = 89963362_u32 as i32;
_1 = (_3.0, _3.1, _3.2, _3.3);
_1.0.1 = [(-7711295859576351695_i64)];
_12 = 180_u8 << _1.1;
_9 = [333297461822014528312054083367129152994_u128,26004517277365736884454271035861685844_u128,276689715050136338558633816042313134240_u128,167555968935246990526328074369532008492_u128,316976552656718235069421238766300168812_u128,98982078986987185629146329397741425297_u128,277869108961820106869680251001917180909_u128,89075556754355178210592877274692649579_u128];
_3 = _1;
_16 = core::ptr::addr_of_mut!(_1.0.0);
_3.3 = [33497_u16,3325_u16,42024_u16,50731_u16];
_15.0 = 44351_u16 | 35478_u16;
_12 = (-166734389705919110155080081530850871958_i128) as u8;
Call(_15.1 = fn12(_16, _2, _1, _1.2, _2, RET, _3, _3.2, _1, _1.2, _1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET = [38734_u16,15980_u16,5119_u16,23373_u16];
RET = [49925_u16,28072_u16,31614_u16,40065_u16];
RET = [21435_u16,40317_u16,55385_u16,973_u16];
_9 = [180367902967589625976647043488148688792_u128,339593438962318597454330659850852365347_u128,15027554343573626503806986545873488010_u128,20089278124367936296948031674713344263_u128,290340170887550279518126089431277896551_u128,154678185924469673457986433878512878404_u128,198474398542156491333819718716459583493_u128,45903634125313971181765687852540312374_u128];
_7 = '\u{9b700}';
_2 = !_3.2;
_1.2 = !_3.2;
_1 = (_3.0, _3.1, _3.2, RET);
_4 = [11398_u16,40448_u16,57195_u16,52060_u16];
_2 = _1.2;
_1.2 = !_3.2;
_4 = _3.3;
_9 = [113701562151524978699720770948270027423_u128,13501807530595891354153821722194893407_u128,333622083052905743388725680646170802810_u128,91643264886241684918365353685883772388_u128,145197797442363913999519118912750593444_u128,78887839247762134281742331358586402058_u128,72656870776378303458738918720565076365_u128,41139301631986085129857701936872217205_u128];
_10 = [5214901921259706632_i64];
_1.1 = !_3.1;
_4 = [39777_u16,50532_u16,11380_u16,13426_u16];
_12 = 64807_u16 as u8;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
SetDiscriminant(_14, 0);
place!(Field::<i128>(Variant(_14, 0), 1)) = (-169812678986092635686552321925373887722_i128);
RET = [_15.0,_15.0,_15.0,_15.0];
_1.1 = _3.1 + _3.1;
_3.0.0 = (*_16);
place!(Field::<([u32; 4], [i64; 1])>(Variant(_14, 0), 3)).0 = [_18.1.1,_18.1.1,_18.1.1,_18.1.1];
place!(Field::<([u32; 4], [i64; 1])>(Variant(_14, 0), 3)).1 = [1862035829995865870_i64];
place!(Field::<i128>(Variant(_14, 0), 1)) = (-43290735101685265607097959709977627792_i128);
_9 = [54618647057169924008964166695323505272_u128,214188438860411156830956213072988693054_u128,77814807083502385845072814393777585070_u128,291420038900529710633948819960299169276_u128,201304464617238870790539562077947805603_u128,194160955295812965733403236115849658347_u128,38418902104976762474690032575554143678_u128,35549092839854777411280327249299542191_u128];
_18.1.2 = (-863206608621142995_i64) ^ (-7068575942999695995_i64);
place!(Field::<u128>(Variant(_14, 0), 2)) = 9223372036854775807_isize as u128;
_18.0 = _7;
match Field::<i128>(Variant(_14, 0), 1) {
296991631819253197856276647721790583664 => bb13,
_ => bb12
}
}
bb12 = {
_1.0 = (_3.0.0, _10);
_1.1 = 89963362_u32 as i32;
_1 = (_3.0, _3.1, _3.2, _3.3);
_1.0.1 = [(-7711295859576351695_i64)];
_12 = 180_u8 << _1.1;
_9 = [333297461822014528312054083367129152994_u128,26004517277365736884454271035861685844_u128,276689715050136338558633816042313134240_u128,167555968935246990526328074369532008492_u128,316976552656718235069421238766300168812_u128,98982078986987185629146329397741425297_u128,277869108961820106869680251001917180909_u128,89075556754355178210592877274692649579_u128];
_3 = _1;
_16 = core::ptr::addr_of_mut!(_1.0.0);
_3.3 = [33497_u16,3325_u16,42024_u16,50731_u16];
_15.0 = 44351_u16 | 35478_u16;
_12 = (-166734389705919110155080081530850871958_i128) as u8;
Call(_15.1 = fn12(_16, _2, _1, _1.2, _2, RET, _3, _3.2, _1, _1.2, _1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_19.0 = 18373662501654322286_u64 * 12085954283573690409_u64;
_3.0.1 = [_18.1.2];
_24 = _18.0;
_2 = _3.2 != _3.2;
_1 = (Field::<([u32; 4], [i64; 1])>(Variant(_14, 0), 3), _3.1, _2, _3.3);
_3.0.1 = _10;
place!(Field::<([u32; 4], [i64; 1])>(Variant(_14, 0), 3)).0 = _3.0.0;
_19 = (813468154724121108_u64,);
RET = [_15.0,_15.0,_15.0,_15.0];
_19 = (614111418050820925_u64,);
_3.0.0 = [_18.1.1,_15.1,_18.1.1,_18.1.1];
place!(Field::<bool>(Variant(_14, 0), 0)) = !_1.2;
_1.3 = _3.3;
_3.0.1 = _1.0.1;
_20 = !_12;
place!(Field::<bool>(Variant(_14, 0), 0)) = _3.2 < _3.2;
_16 = core::ptr::addr_of_mut!((*_16));
_18.2 = _15.1 as i64;
Goto(bb14)
}
bb14 = {
_1.2 = !_2;
_3.0 = Field::<([u32; 4], [i64; 1])>(Variant(_14, 0), 3);
_25 = !_20;
SetDiscriminant(_14, 3);
place!(Field::<*mut i64>(Variant(_14, 3), 0)) = core::ptr::addr_of_mut!(_18.1.2);
_12 = _20 << _1.1;
_26 = 43_isize & (-9223372036854775808_isize);
place!(Field::<(i32,)>(Variant(_14, 3), 5)) = (_3.1,);
_27 = _7;
_24 = _18.0;
_1.0 = (_3.0.0, _3.0.1);
_13 = !3_usize;
_14 = Adt51::Variant1 { fld0: (*_16) };
_18.2 = _18.1.2;
_18.1 = (_15.0, _15.1, _18.2);
_20 = _12;
_15.2 = _18.1.2 << _26;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(11_usize, 7_usize, Move(_7), 15_usize, Move(_15), 4_usize, Move(_4), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(11_usize, 2_usize, Move(_2), 25_usize, Move(_25), 1_usize, Move(_1), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: *mut [u32; 4],mut _2: bool,mut _3: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),mut _4: bool,mut _5: bool,mut _6: [u16; 4],mut _7: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),mut _8: bool,mut _9: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),mut _10: bool,mut _11: bool) -> u32 {
mir! {
type RET = u32;
let _12: f32;
let _13: f64;
let _14: (i32,);
let _15: char;
let _16: isize;
let _17: Adt49;
let _18: (char, (u16, u32, i64), i64);
let _19: bool;
let _20: f64;
let _21: (isize, &'static *mut [u32; 4]);
let _22: Adt52;
let _23: (u64,);
let _24: Adt59;
let _25: (u16, u32, i64);
let _26: isize;
let _27: Adt53;
let _28: i64;
let _29: ([u32; 4], [i64; 1]);
let _30: f32;
let _31: f32;
let _32: isize;
let _33: f64;
let _34: Adt57;
let _35: [u128; 8];
let _36: isize;
let _37: [i128; 4];
let _38: Adt53;
let _39: f64;
let _40: i64;
let _41: u32;
let _42: char;
let _43: f64;
let _44: Adt44;
let _45: i64;
let _46: ();
let _47: ();
{
_3.0.0 = _9.0.0;
_9.0.0 = _3.0.0;
_9.2 = _10;
_3.0.1 = _7.0.1;
RET = 2231988136_u32;
_9.1 = '\u{a4578}' as i32;
_9.0.0 = [RET,RET,RET,RET];
_7.0 = (_3.0.0, _9.0.1);
_9.0.1 = _7.0.1;
_3.3 = [62442_u16,25848_u16,8428_u16,13264_u16];
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
2231988136 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_9.0 = (_7.0.0, _7.0.1);
_3.2 = !_11;
_16 = 9223372036854775807_isize;
_3.0.1 = _9.0.1;
_3.1 = !_9.1;
_18.1.0 = 323726562842332366220147809372940364672_u128 as u16;
_19 = _7.2 == _11;
_14 = (_7.1,);
_9.2 = _19;
_9 = (_7.0, _14.0, _19, _3.3);
_3.0.0 = [RET,RET,RET,RET];
_9 = (_7.0, _14.0, _2, _6);
_18.1.1 = 6967924324238074456_u64 as u32;
_17.fld0 = _18.1.1 as i128;
_12 = _18.1.0 as f32;
_7.1 = _9.1 + _3.1;
_18.1.2 = 6122254014399377223_i64;
_9.1 = _7.1 ^ _3.1;
_9.2 = !_2;
_7.0 = _9.0;
match RET {
0 => bb4,
2231988136 => bb6,
_ => bb2
}
}
bb6 = {
_21.1 = &_1;
_3.1 = !_7.1;
_18.1.0 = 261542504529942594735363626078583339785_u128 as u16;
_3.0.1 = _7.0.1;
_18.0 = '\u{cb088}';
_18.1 = (54900_u16, RET, (-4580579367821416769_i64));
_23.0 = 4620666457735117295_u64;
_20 = 121_u8 as f64;
_9.0.0 = _7.0.0;
_1 = core::ptr::addr_of_mut!(_3.0.0);
_3.3 = _7.3;
_21.1 = &_1;
_9.3 = _3.3;
_21.0 = !_16;
_11 = !_9.2;
_18.2 = _17.fld0 as i64;
_3.0 = _7.0;
_3.0.1 = [_18.1.2];
_15 = _18.0;
_21.0 = _16;
_3 = (_7.0, _9.1, _5, _9.3);
_25 = _18.1;
_24.fld0.0 = !_23.0;
match _25.2 {
0 => bb5,
340282366920938463458794028063946794687 => bb7,
_ => bb2
}
}
bb7 = {
_19 = !_11;
_8 = !_5;
_22 = Adt52::Variant1 { fld0: (-24675_i16) };
_24.fld1 = Adt53::Variant1 { fld0: _23.0,fld1: _14 };
_25.2 = _18.1.2 & _18.1.2;
_18.0 = _15;
_27 = Move(_24.fld1);
_9.0.1 = [_18.1.2];
SetDiscriminant(_27, 1);
_27 = Adt53::Variant1 { fld0: _23.0,fld1: _14 };
_3 = _7;
_9.0 = ((*_1), _3.0.1);
_19 = _9.2 >= _10;
_3.0.0 = [RET,RET,_25.1,_18.1.1];
_3.0.0 = [_25.1,RET,RET,RET];
_18.2 = _9.1 as i64;
_8 = _11 | _10;
_24.fld1 = Adt53::Variant1 { fld0: Field::<u64>(Variant(_27, 1), 0),fld1: Field::<(i32,)>(Variant(_27, 1), 1) };
_18.1.2 = _25.2 >> _7.1;
SetDiscriminant(_27, 1);
_3 = (_7.0, Field::<(i32,)>(Variant(_24.fld1, 1), 1).0, _9.2, _7.3);
_1 = core::ptr::addr_of_mut!(_3.0.0);
_7.0 = _3.0;
match _21.0 {
0 => bb6,
1 => bb5,
2 => bb8,
3 => bb9,
9223372036854775807 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
_9.0 = (_7.0.0, _7.0.1);
_3.2 = !_11;
_16 = 9223372036854775807_isize;
_3.0.1 = _9.0.1;
_3.1 = !_9.1;
_18.1.0 = 323726562842332366220147809372940364672_u128 as u16;
_19 = _7.2 == _11;
_14 = (_7.1,);
_9.2 = _19;
_9 = (_7.0, _14.0, _19, _3.3);
_3.0.0 = [RET,RET,RET,RET];
_9 = (_7.0, _14.0, _2, _6);
_18.1.1 = 6967924324238074456_u64 as u32;
_17.fld0 = _18.1.1 as i128;
_12 = _18.1.0 as f32;
_7.1 = _9.1 + _3.1;
_18.1.2 = 6122254014399377223_i64;
_9.1 = _7.1 ^ _3.1;
_9.2 = !_2;
_7.0 = _9.0;
match RET {
0 => bb4,
2231988136 => bb6,
_ => bb2
}
}
bb10 = {
Return()
}
bb11 = {
_12 = _25.0 as f32;
SetDiscriminant(_24.fld1, 0);
_9.3 = [_18.1.0,_25.0,_25.0,_18.1.0];
_18.0 = _15;
_15 = _18.0;
_27 = Adt53::Variant1 { fld0: _23.0,fld1: _14 };
_23 = (Field::<u64>(Variant(_27, 1), 0),);
_9 = _7;
_3.2 = _5 == _8;
_3.2 = _2;
_9.0.1 = _7.0.1;
place!(Field::<[i128; 4]>(Variant(_24.fld1, 0), 3)) = [_17.fld0,_17.fld0,_17.fld0,_17.fld0];
place!(Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2)).0 = 87881765190884807103547058414579612449_u128 as u16;
_32 = _16;
_33 = _25.1 as f64;
_29.1 = [_18.1.2];
_1 = core::ptr::addr_of_mut!(_9.0.0);
SetDiscriminant(_27, 0);
_25.0 = !_18.1.0;
_21.1 = &_1;
_2 = !_19;
RET = 13986033335524713928_usize as u32;
_7.0 = ((*_1), _29.1);
place!(Field::<(u16, u32, i64)>(Variant(_27, 0), 2)).1 = 13829954205213430788_usize as u32;
match _21.0 {
0 => bb9,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb10,
9223372036854775807 => bb12,
_ => bb6
}
}
bb12 = {
place!(Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2)) = (_25.0, _25.1, _18.1.2);
_7 = (_3.0, _14.0, _3.2, _6);
_30 = _33 as f32;
place!(Field::<Adt49>(Variant(_24.fld1, 0), 0)) = Adt49 { fld0: _17.fld0 };
_18.1.0 = _33 as u16;
_3.0 = (_7.0.0, _29.1);
_25 = (Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2).0, _18.1.1, _18.1.2);
_18.1.1 = _20 as u32;
_3.1 = _7.1;
RET = !Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2).1;
_29.0 = [Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2).1,RET,Field::<(u16, u32, i64)>(Variant(_27, 0), 2).1,_25.1];
_7.2 = !_11;
_30 = _7.1 as f32;
Call(_3 = fn13(_9.2, _11, _19, _5, _7), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
place!(Field::<i16>(Variant(_22, 1), 0)) = (-89_i8) as i16;
RET = _18.1.1 - Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2).1;
_35 = [237645848784117161044420380337410296826_u128,223644679380575376150501944641348041378_u128,160172732405104484094192333484279590474_u128,263331555138731858930087309975537441637_u128,253179371593169485037244345789748331677_u128,163179725298157360579861985888709069492_u128,281341526939459246663677474402698534414_u128,257916532686341073735618819292351900352_u128];
_18.1.2 = Field::<(u16, u32, i64)>(Variant(_24.fld1, 0), 2).2 + _18.2;
place!(Field::<i32>(Variant(_24.fld1, 0), 1)) = _3.1 & _14.0;
_22 = Adt52::Variant1 { fld0: 9782_i16 };
_9.0 = (_7.0.0, _29.1);
_25.2 = _9.2 as i64;
_12 = -_30;
place!(Field::<Adt49>(Variant(_27, 0), 0)) = Adt49 { fld0: _17.fld0 };
place!(Field::<i32>(Variant(_24.fld1, 0), 1)) = -_3.1;
_25.1 = !RET;
_13 = -_20;
place!(Field::<i16>(Variant(_22, 1), 0)) = 7_usize as i16;
place!(Field::<[i128; 4]>(Variant(_27, 0), 3)) = [_17.fld0,Field::<Adt49>(Variant(_27, 0), 0).fld0,_17.fld0,Field::<Adt49>(Variant(_24.fld1, 0), 0).fld0];
_18.1.0 = _25.0 << _25.2;
_29.1 = _9.0.1;
_18.0 = _15;
_25.1 = _18.1.1 >> _18.1.0;
place!(Field::<(u16, u32, i64)>(Variant(_27, 0), 2)).1 = !_25.1;
_30 = _18.1.0 as f32;
_3.0 = (_7.0.0, _29.1);
_14.0 = -Field::<i32>(Variant(_24.fld1, 0), 1);
_24.fld1 = Adt53::Variant1 { fld0: _23.0,fld1: _14 };
Goto(bb14)
}
bb14 = {
_25.2 = _18.1.0 as i64;
_3.0 = _29;
_9 = _3;
place!(Field::<(i32,)>(Variant(_24.fld1, 1), 1)).0 = Field::<Adt49>(Variant(_27, 0), 0).fld0 as i32;
_27 = Move(_24.fld1);
_31 = _25.1 as f32;
_5 = _4;
place!(Field::<u64>(Variant(_27, 1), 0)) = !_23.0;
RET = !_25.1;
_36 = _21.0 | _32;
_39 = -_33;
_18.2 = _18.1.0 as i64;
_3.2 = _4;
_37 = [_17.fld0,_17.fld0,_17.fld0,_17.fld0];
_25.1 = RET & RET;
_24.fld0.0 = _23.0;
SetDiscriminant(_27, 0);
RET = _17.fld0 as u32;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(12_usize, 18_usize, Move(_18), 9_usize, Move(_9), 23_usize, Move(_23), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(12_usize, 15_usize, Move(_15), 8_usize, Move(_8), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(12_usize, 14_usize, Move(_14), 6_usize, Move(_6), 29_usize, Move(_29), 47_usize, _47), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: (([u32; 4], [i64; 1]), i32, bool, [u16; 4])) -> (([u32; 4], [i64; 1]), i32, bool, [u16; 4]) {
mir! {
type RET = (([u32; 4], [i64; 1]), i32, bool, [u16; 4]);
let _6: *mut [u32; 4];
let _7: Adt54;
let _8: f32;
let _9: Adt50;
let _10: Adt55;
let _11: f64;
let _12: isize;
let _13: f64;
let _14: ();
let _15: ();
{
RET.0.0 = [507304298_u32,4250001107_u32,2868364260_u32,2733151857_u32];
RET = (_5.0, _5.1, _1, _5.3);
_6 = core::ptr::addr_of_mut!(RET.0.0);
RET.2 = _4;
RET = (_5.0, _5.1, _5.2, _5.3);
_3 = _2 == _1;
_2 = _4;
_5.2 = RET.2;
RET.0.1 = [(-1311830283963563022_i64)];
_1 = RET.2;
RET.0 = (_5.0.0, _5.0.1);
_1 = !_3;
_5.0.1 = RET.0.1;
_5.0.0 = [3962183580_u32,2087454314_u32,2981649268_u32,3816154873_u32];
_8 = 4467681574595597250_usize as f32;
_5.0 = RET.0;
RET.3 = [3506_u16,30956_u16,19573_u16,45661_u16];
_10 = Adt55::Variant2 { fld0: 3535282429_u32 };
_6 = core::ptr::addr_of_mut!(RET.0.0);
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(13_usize, 3_usize, Move(_3), 4_usize, Move(_4), 15_usize, _15, 15_usize, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [u16; 4],mut _2: u16,mut _3: i32,mut _4: Adt45,mut _5: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),mut _6: bool,mut _7: [u16; 4],mut _8: u16) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _9: [u16; 4];
let _10: u8;
let _11: f32;
let _12: Adt49;
let _13: Adt43;
let _14: [i128; 4];
let _15: *mut i64;
let _16: u16;
let _17: ();
let _18: ();
{
_2 = _8 + _8;
_5.2 = !_6;
RET = _4.fld1.3;
_5.0.1 = [5371965853322336859_i64];
_4.fld3 = ((-8294_i16), 32_i8, (-17_i8));
_8 = 27020424444821657746397237992207967112_i128 as u16;
_5.0 = (_4.fld1.0.0, _4.fld1.0.1);
_5.0.0 = [2645487447_u32,3662930272_u32,373610897_u32,3360714765_u32];
_4.fld3.1 = !_4.fld3.2;
_4.fld3.2 = _4.fld3.1;
_1 = [_2,_2,_2,_2];
_8 = 2021296629_u32 as u16;
_5.0 = _4.fld1.0;
_4.fld1.3 = [_2,_2,_2,_2];
_4.fld1.0.0 = [888095669_u32,1448632717_u32,1936228714_u32,2777471290_u32];
_4.fld1 = (_5.0, _4.fld0.0, _6, _1);
_4.fld3 = ((-17905_i16), (-76_i8), (-3_i8));
_5 = _4.fld1;
_6 = !_5.2;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(14_usize, 5_usize, Move(_5), 1_usize, Move(_1), 2_usize, Move(_2), 18_usize, _18), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: i32,mut _2: i32,mut _3: i32,mut _4: i32,mut _5: i32,mut _6: i32,mut _7: i32) -> u16 {
mir! {
type RET = u16;
let _8: i16;
let _9: *mut [u32; 4];
let _10: Adt49;
let _11: Adt45;
let _12: [bool; 1];
let _13: (u16, u32, i64);
let _14: f64;
let _15: (u64,);
let _16: Adt55;
let _17: (char, *mut i64);
let _18: f64;
let _19: char;
let _20: i64;
let _21: i32;
let _22: ();
let _23: ();
{
RET = !8899_u16;
_2 = _7;
RET = 38622_u16;
_4 = _3;
_4 = _3 | _1;
_1 = 113_i8 as i32;
_8 = (-19071_i16);
_3 = _8 as i32;
_4 = -_7;
_6 = _7 - _4;
RET = 61226_u16 * 21072_u16;
_2 = _6;
_3 = -_6;
_1 = _8 as i32;
_5 = _6 << _3;
Call(_2 = core::intrinsics::bswap(_3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _2;
_8 = -(-4807_i16);
_11.fld3.1 = _6 as i8;
_11.fld0 = (_4,);
_11.fld1.0.1 = [3512734054280574518_i64];
_11.fld3.0 = (-33480799573335642647645210236215864028_i128) as i16;
_5 = _11.fld0.0;
_13.2 = 4298806454950692234_i64;
_12 = [true];
_9 = core::ptr::addr_of_mut!(_11.fld1.0.0);
Goto(bb2)
}
bb2 = {
RET = 42156_u16;
_13.1 = !114930116_u32;
_11.fld3.2 = 82_u8 as i8;
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_11.fld2 = 9223372036854775807_isize;
_2 = -_11.fld0.0;
_10 = Adt49 { fld0: (-53011051998074545505714038746347282621_i128) };
_8 = _11.fld3.0;
_11.fld1.0.1 = [_13.2];
_2 = _6 * _4;
_5 = RET as i32;
_7 = _6 - _4;
_11.fld2 = (-9223372036854775808_isize) << _7;
_15 = (3304078723345481360_u64,);
_5 = _11.fld3.1 as i32;
_11.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [false];
_11.fld2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_5 = _2;
_10 = Adt49 { fld0: 97022596429531317818212759618632970107_i128 };
_11.fld1.2 = _11.fld0.0 >= _7;
Goto(bb3)
}
bb3 = {
_11.fld3.2 = _11.fld3.1 | _11.fld3.1;
_11.fld1.1 = _6;
_2 = _10.fld0 as i32;
_13.0 = _10.fld0 as u16;
match RET {
0 => bb4,
1 => bb5,
42156 => bb7,
_ => bb6
}
}
bb4 = {
RET = 42156_u16;
_13.1 = !114930116_u32;
_11.fld3.2 = 82_u8 as i8;
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_11.fld2 = 9223372036854775807_isize;
_2 = -_11.fld0.0;
_10 = Adt49 { fld0: (-53011051998074545505714038746347282621_i128) };
_8 = _11.fld3.0;
_11.fld1.0.1 = [_13.2];
_2 = _6 * _4;
_5 = RET as i32;
_7 = _6 - _4;
_11.fld2 = (-9223372036854775808_isize) << _7;
_15 = (3304078723345481360_u64,);
_5 = _11.fld3.1 as i32;
_11.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [false];
_11.fld2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_5 = _2;
_10 = Adt49 { fld0: 97022596429531317818212759618632970107_i128 };
_11.fld1.2 = _11.fld0.0 >= _7;
Goto(bb3)
}
bb5 = {
_1 = _2;
_8 = -(-4807_i16);
_11.fld3.1 = _6 as i8;
_11.fld0 = (_4,);
_11.fld1.0.1 = [3512734054280574518_i64];
_11.fld3.0 = (-33480799573335642647645210236215864028_i128) as i16;
_5 = _11.fld0.0;
_13.2 = 4298806454950692234_i64;
_12 = [true];
_9 = core::ptr::addr_of_mut!(_11.fld1.0.0);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_4 = _5 + _1;
_10.fld0 = -52981281483972206655881819786551334064_i128;
_13 = (RET, 3051679195_u32, 4128955684521459841_i64);
_11.fld0.0 = _5 >> _11.fld3.1;
_17.1 = core::ptr::addr_of_mut!(_13.2);
_13 = (RET, 2951486460_u32, 122882241098199941_i64);
_11.fld1.3 = [RET,RET,_13.0,_13.0];
_9 = core::ptr::addr_of_mut!((*_9));
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_16 = Adt55::Variant1 { fld0: _9,fld1: '\u{c4e64}' };
match _13.1 {
0 => bb8,
1 => bb9,
2 => bb10,
2951486460 => bb12,
_ => bb11
}
}
bb8 = {
RET = 42156_u16;
_13.1 = !114930116_u32;
_11.fld3.2 = 82_u8 as i8;
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_11.fld2 = 9223372036854775807_isize;
_2 = -_11.fld0.0;
_10 = Adt49 { fld0: (-53011051998074545505714038746347282621_i128) };
_8 = _11.fld3.0;
_11.fld1.0.1 = [_13.2];
_2 = _6 * _4;
_5 = RET as i32;
_7 = _6 - _4;
_11.fld2 = (-9223372036854775808_isize) << _7;
_15 = (3304078723345481360_u64,);
_5 = _11.fld3.1 as i32;
_11.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [false];
_11.fld2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_5 = _2;
_10 = Adt49 { fld0: 97022596429531317818212759618632970107_i128 };
_11.fld1.2 = _11.fld0.0 >= _7;
Goto(bb3)
}
bb9 = {
_1 = _2;
_8 = -(-4807_i16);
_11.fld3.1 = _6 as i8;
_11.fld0 = (_4,);
_11.fld1.0.1 = [3512734054280574518_i64];
_11.fld3.0 = (-33480799573335642647645210236215864028_i128) as i16;
_5 = _11.fld0.0;
_13.2 = 4298806454950692234_i64;
_12 = [true];
_9 = core::ptr::addr_of_mut!(_11.fld1.0.0);
Goto(bb2)
}
bb10 = {
RET = 42156_u16;
_13.1 = !114930116_u32;
_11.fld3.2 = 82_u8 as i8;
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_11.fld2 = 9223372036854775807_isize;
_2 = -_11.fld0.0;
_10 = Adt49 { fld0: (-53011051998074545505714038746347282621_i128) };
_8 = _11.fld3.0;
_11.fld1.0.1 = [_13.2];
_2 = _6 * _4;
_5 = RET as i32;
_7 = _6 - _4;
_11.fld2 = (-9223372036854775808_isize) << _7;
_15 = (3304078723345481360_u64,);
_5 = _11.fld3.1 as i32;
_11.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [false];
_11.fld2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_5 = _2;
_10 = Adt49 { fld0: 97022596429531317818212759618632970107_i128 };
_11.fld1.2 = _11.fld0.0 >= _7;
Goto(bb3)
}
bb11 = {
_11.fld3.2 = _11.fld3.1 | _11.fld3.1;
_11.fld1.1 = _6;
_2 = _10.fld0 as i32;
_13.0 = _10.fld0 as u16;
match RET {
0 => bb4,
1 => bb5,
42156 => bb7,
_ => bb6
}
}
bb12 = {
_14 = _15.0 as f64;
match _13.2 {
0 => bb8,
1 => bb13,
2 => bb14,
3 => bb15,
122882241098199941 => bb17,
_ => bb16
}
}
bb13 = {
_4 = _5 + _1;
_10.fld0 = -52981281483972206655881819786551334064_i128;
_13 = (RET, 3051679195_u32, 4128955684521459841_i64);
_11.fld0.0 = _5 >> _11.fld3.1;
_17.1 = core::ptr::addr_of_mut!(_13.2);
_13 = (RET, 2951486460_u32, 122882241098199941_i64);
_11.fld1.3 = [RET,RET,_13.0,_13.0];
_9 = core::ptr::addr_of_mut!((*_9));
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_16 = Adt55::Variant1 { fld0: _9,fld1: '\u{c4e64}' };
match _13.1 {
0 => bb8,
1 => bb9,
2 => bb10,
2951486460 => bb12,
_ => bb11
}
}
bb14 = {
RET = 42156_u16;
_13.1 = !114930116_u32;
_11.fld3.2 = 82_u8 as i8;
_11.fld1.0.0 = [_13.1,_13.1,_13.1,_13.1];
_11.fld2 = 9223372036854775807_isize;
_2 = -_11.fld0.0;
_10 = Adt49 { fld0: (-53011051998074545505714038746347282621_i128) };
_8 = _11.fld3.0;
_11.fld1.0.1 = [_13.2];
_2 = _6 * _4;
_5 = RET as i32;
_7 = _6 - _4;
_11.fld2 = (-9223372036854775808_isize) << _7;
_15 = (3304078723345481360_u64,);
_5 = _11.fld3.1 as i32;
_11.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [false];
_11.fld2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_5 = _2;
_10 = Adt49 { fld0: 97022596429531317818212759618632970107_i128 };
_11.fld1.2 = _11.fld0.0 >= _7;
Goto(bb3)
}
bb15 = {
_1 = _2;
_8 = -(-4807_i16);
_11.fld3.1 = _6 as i8;
_11.fld0 = (_4,);
_11.fld1.0.1 = [3512734054280574518_i64];
_11.fld3.0 = (-33480799573335642647645210236215864028_i128) as i16;
_5 = _11.fld0.0;
_13.2 = 4298806454950692234_i64;
_12 = [true];
_9 = core::ptr::addr_of_mut!(_11.fld1.0.0);
Goto(bb2)
}
bb16 = {
_1 = _2;
_8 = -(-4807_i16);
_11.fld3.1 = _6 as i8;
_11.fld0 = (_4,);
_11.fld1.0.1 = [3512734054280574518_i64];
_11.fld3.0 = (-33480799573335642647645210236215864028_i128) as i16;
_5 = _11.fld0.0;
_13.2 = 4298806454950692234_i64;
_12 = [true];
_9 = core::ptr::addr_of_mut!(_11.fld1.0.0);
Goto(bb2)
}
bb17 = {
RET = _13.0;
_11.fld3 = (_8, (-96_i8), 102_i8);
_10.fld0 = 143589629476687104510394812046777034443_i128 - 100261827920624589425229378486843118107_i128;
_6 = _8 as i32;
_9 = core::ptr::addr_of_mut!((*_9));
_11.fld0.0 = _5 ^ _1;
Goto(bb18)
}
bb18 = {
Call(_22 = dump_var(15_usize, 2_usize, Move(_2), 7_usize, Move(_7), 4_usize, Move(_4), 3_usize, Move(_3)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_22 = dump_var(15_usize, 8_usize, Move(_8), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: Adt45,mut _2: [u32; 4],mut _3: [u32; 4],mut _4: [u32; 4],mut _5: ([u32; 4], [i64; 1]),mut _6: ([u32; 4], [i64; 1])) -> [u32; 4] {
mir! {
type RET = [u32; 4];
let _7: &'static *mut [u32; 4];
let _8: bool;
let _9: isize;
let _10: [bool; 2];
let _11: [u32; 4];
let _12: u64;
let _13: [bool; 2];
let _14: Adt52;
let _15: [bool; 1];
let _16: *const u128;
let _17: f64;
let _18: char;
let _19: *mut [u32; 4];
let _20: u128;
let _21: ();
let _22: ();
{
RET = [996504409_u32,627944352_u32,3054326787_u32,1337481779_u32];
Goto(bb1)
}
bb1 = {
_1.fld3.1 = _1.fld3.2;
_1.fld1.3 = [27992_u16,16212_u16,62470_u16,51266_u16];
_1.fld1.2 = true;
_3 = _4;
_1.fld3 = ((-8456_i16), 25_i8, 50_i8);
_1.fld1.0 = _6;
_2 = [1609380083_u32,788815724_u32,2918273477_u32,1447590866_u32];
_9 = !_1.fld2;
_13 = [_1.fld1.2,_1.fld1.2];
match _1.fld3.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
50 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6.1 = [(-1868110553905797305_i64)];
_1.fld2 = _9;
Goto(bb11)
}
bb11 = {
_1.fld2 = !_9;
_1.fld1.2 = false;
_1.fld3.1 = _1.fld3.2;
_10 = [_1.fld1.2,_1.fld1.2];
_1.fld3.2 = -_1.fld3.1;
_12 = 3041853306300457538_i64 as u64;
_1.fld3.0 = (-15732_i16);
_1.fld1.1 = _1.fld0.0 & _1.fld0.0;
_3 = [426974382_u32,1228505682_u32,208825511_u32,3613303086_u32];
Goto(bb12)
}
bb12 = {
_1.fld3.2 = (-3379239099534629862_i64) as i8;
_8 = _1.fld1.2 | _1.fld1.2;
_10 = _13;
_5.0 = [887899145_u32,3861087471_u32,81147431_u32,2760968899_u32];
_1.fld1.0.1 = [(-6280312072000670940_i64)];
_13 = [_8,_8];
_11 = [2805878325_u32,1661779059_u32,4141100189_u32,3605753328_u32];
_1.fld1.3 = [25554_u16,10985_u16,25867_u16,11580_u16];
_1.fld1.0.1 = [8302248600648137891_i64];
_5.0 = [1830585443_u32,2706553513_u32,1447259327_u32,1872838623_u32];
_1.fld3.1 = -_1.fld3.2;
_13 = [_1.fld1.2,_8];
_6.1 = [(-6824003667962478117_i64)];
_1.fld1.2 = _8;
_2 = _11;
_3 = _1.fld1.0.0;
_1.fld1.1 = 2440924294954040483_usize as i32;
_10 = _13;
_12 = 1442215915_u32 as u64;
_5.1 = _1.fld1.0.1;
_1.fld1.1 = _1.fld0.0 & _1.fld0.0;
_1.fld1.0 = (RET, _5.1);
_8 = _1.fld1.2 < _1.fld1.2;
_6.0 = [123776443_u32,4096848234_u32,555040411_u32,1518990125_u32];
_1.fld3.1 = 113586218500121342170399593436818494215_i128 as i8;
_1.fld3.0 = 26455_i16 - (-13548_i16);
_1.fld1.0 = (_2, _5.1);
_3 = _6.0;
_12 = 84090558861080104647586398576362597731_u128 as u64;
Call(_13 = fn17(RET, _11, _1.fld1.0.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_12 = 11297250120855041293_u64 & 8624061062466171042_u64;
_2 = [1807951582_u32,394772412_u32,1300264638_u32,1803415698_u32];
_8 = _9 != _1.fld2;
_8 = _1.fld1.2 & _1.fld1.2;
_1.fld0 = (_1.fld1.1,);
_15 = [_8];
_4 = _11;
_9 = _1.fld2 | _1.fld2;
_1.fld3.1 = _1.fld3.2 >> _1.fld0.0;
_1.fld3 = ((-11942_i16), (-118_i8), 32_i8);
_6.0 = [4127438838_u32,4046877739_u32,1204233079_u32,693840034_u32];
_13 = [_8,_1.fld1.2];
_1.fld1.1 = _1.fld3.2 as i32;
_6.0 = _5.0;
_14 = Adt52::Variant1 { fld0: _1.fld3.0 };
_5 = _6;
_8 = _1.fld3.2 >= _1.fld3.2;
_3 = _6.0;
_14 = Adt52::Variant1 { fld0: _1.fld3.0 };
_1.fld0.0 = _1.fld1.1;
_18 = '\u{97a02}';
match _1.fld3.2 {
0 => bb10,
1 => bb8,
2 => bb14,
32 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
_1.fld3.1 = _1.fld3.2;
_1.fld1.3 = [27992_u16,16212_u16,62470_u16,51266_u16];
_1.fld1.2 = true;
_3 = _4;
_1.fld3 = ((-8456_i16), 25_i8, 50_i8);
_1.fld1.0 = _6;
_2 = [1609380083_u32,788815724_u32,2918273477_u32,1447590866_u32];
_9 = !_1.fld2;
_13 = [_1.fld1.2,_1.fld1.2];
match _1.fld3.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
50 => bb10,
_ => bb9
}
}
bb16 = {
_1.fld3 = (Field::<i16>(Variant(_14, 1), 0), (-18_i8), 76_i8);
place!(Field::<i16>(Variant(_14, 1), 0)) = _1.fld3.0 << _1.fld3.1;
Goto(bb17)
}
bb17 = {
Call(_21 = dump_var(16_usize, 5_usize, Move(_5), 10_usize, Move(_10), 8_usize, Move(_8), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_21 = dump_var(16_usize, 6_usize, Move(_6), 11_usize, Move(_11), 22_usize, _22, 22_usize, _22), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [u32; 4],mut _2: [u32; 4],mut _3: [i64; 1]) -> [bool; 2] {
mir! {
type RET = [bool; 2];
let _4: char;
let _5: i128;
let _6: u128;
let _7: Adt52;
let _8: i64;
let _9: char;
let _10: i16;
let _11: i32;
let _12: Adt44;
let _13: [bool; 2];
let _14: u32;
let _15: isize;
let _16: Adt47;
let _17: isize;
let _18: f64;
let _19: Adt45;
let _20: ();
let _21: ();
{
RET = [true,false];
RET = [true,true];
_1 = [3551775485_u32,3165114539_u32,3067515132_u32,1859052845_u32];
RET = [false,true];
_3 = [6600132882166430373_i64];
RET = [true,false];
RET = [false,false];
_2 = [312599877_u32,3199282801_u32,2789103480_u32,2458474101_u32];
RET = [true,true];
_3 = [(-6709212861952180237_i64)];
RET = [true,true];
_2 = [421858100_u32,2032804242_u32,2902405097_u32,1151842621_u32];
_4 = '\u{83275}';
RET = [false,false];
RET = [true,true];
_4 = '\u{909fc}';
_2 = _1;
_1 = [930755465_u32,2350725503_u32,1658771255_u32,4172719220_u32];
_4 = '\u{1cfd1}';
_5 = (-32112852496219078490896871092530118995_i128) << 81_i8;
_2 = [2365211859_u32,725774273_u32,2885808849_u32,214857973_u32];
_5 = (-117686660329499826763019975569469588995_i128);
_5 = (-5457879602989905622046889189949880673_i128) >> 6193_i16;
_1 = [4194783878_u32,279496383_u32,3774108288_u32,953335069_u32];
_2 = [3697490342_u32,1862803170_u32,196925878_u32,1591650028_u32];
_3 = [3383974163007452095_i64];
_3 = [5828383870163659999_i64];
_2 = _1;
RET = [true,false];
RET = [true,false];
Goto(bb1)
}
bb1 = {
_3 = [(-8347165554643181918_i64)];
_4 = '\u{58ebd}';
_3 = [3104336370933989064_i64];
_3 = [2837708816103821035_i64];
RET = [true,true];
_1 = [1580361956_u32,2922215467_u32,281570346_u32,165480279_u32];
_5 = 117531484062811845762065288080549162360_i128;
_3 = [(-6381056320115265157_i64)];
_3 = [(-3441090675844741945_i64)];
_4 = '\u{4a6f}';
_5 = 294202028_i32 as i128;
RET = [false,false];
_8 = (-8596649370309768090_i64);
_8 = 2998130743658222464_i64;
_8 = (-6846521931439421732_i64);
match _8 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463456528085500328789724 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_2 = [2084336355_u32,2077274306_u32,2326722526_u32,1143912140_u32];
Goto(bb9)
}
bb9 = {
RET = [false,false];
_8 = _5 as i64;
_9 = _4;
_10 = !23736_i16;
_4 = _9;
_3 = [_8];
_8 = 1442731547244396833_i64 - 660729569334150537_i64;
_5 = (-59000455112344247026775483266396044841_i128);
_1 = [3904567545_u32,1038744819_u32,2634841096_u32,732126961_u32];
_4 = _9;
match _5 {
281281911808594216436599124165372166615 => bb10,
_ => bb8
}
}
bb10 = {
_3 = [_8];
_11 = (-600122262_i32) >> _10;
_7 = Adt52::Variant1 { fld0: _10 };
SetDiscriminant(_7, 1);
_11 = !(-1827700390_i32);
_2 = _1;
_1 = [472572078_u32,403365514_u32,1847210844_u32,1742889218_u32];
_4 = _9;
_7 = Adt52::Variant1 { fld0: _10 };
place!(Field::<i16>(Variant(_7, 1), 0)) = _11 as i16;
_11 = !1150113202_i32;
place!(Field::<i16>(Variant(_7, 1), 0)) = -_10;
_3 = [_8];
_14 = !144914455_u32;
_10 = 10140143130871621013_u64 as i16;
RET = [true,true];
_6 = _10 as u128;
SetDiscriminant(_7, 0);
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).1 = _14;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).4.0 = _11;
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).0 = !30078_u16;
_1 = _2;
_14 = _10 as u32;
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)) = (27560_u16, _14, _8);
place!(Field::<u32>(Variant(_7, 0), 1)) = _14;
Goto(bb11)
}
bb11 = {
_2 = [Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1,Field::<u32>(Variant(_7, 0), 1),Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1];
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).0 = 40_u8;
_15 = (-9223372036854775808_isize) << _10;
_5 = -(-8576866954485874803863304279782222681_i128);
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).0 = 53342_u16 & 34476_u16;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).3 = core::ptr::addr_of!(_6);
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).0 = 20069_u16 + 54945_u16;
_4 = _9;
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).0 = _10 as u16;
_2 = [_14,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1,_14,Field::<u32>(Variant(_7, 0), 1)];
_9 = _4;
_11 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).4.0;
_4 = _9;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).0 = Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0 as u8;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).4 = (_11,);
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).4.0 = -_11;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).2 = 1843102750292799115_u64 as i8;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).3 = core::ptr::addr_of!(_6);
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).3 = core::ptr::addr_of!(_6);
Goto(bb12)
}
bb12 = {
_11 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).4.0;
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).1 = Field::<u32>(Variant(_7, 0), 1) + Field::<u32>(Variant(_7, 0), 1);
place!(Field::<u32>(Variant(_7, 0), 1)) = Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1 - Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1;
Goto(bb13)
}
bb13 = {
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).4 = (_11,);
_8 = Field::<(u16, u32, i64)>(Variant(_7, 0), 2).2 | Field::<(u16, u32, i64)>(Variant(_7, 0), 2).2;
_17 = _15;
_13 = [false,true];
_10 = -(-2740_i16);
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).2 = _6 as i8;
_3 = [Field::<(u16, u32, i64)>(Variant(_7, 0), 2).2];
_11 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).4.0;
_17 = -_15;
Goto(bb14)
}
bb14 = {
_11 = _9 as i32;
_2 = [_14,Field::<u32>(Variant(_7, 0), 1),_14,Field::<u32>(Variant(_7, 0), 1)];
_19.fld0.0 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).4.0;
_1 = [Field::<u32>(Variant(_7, 0), 1),Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1,Field::<u32>(Variant(_7, 0), 1),Field::<u32>(Variant(_7, 0), 1)];
_19.fld3.1 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).2 - Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).2;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).1 = core::ptr::addr_of_mut!(_8);
_19.fld0.0 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).4.0 * _11;
_19.fld0.0 = _11 & Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).4.0;
_19.fld1.0.1 = [_8];
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).0 = 23_u8;
_19.fld3.0 = -_10;
_19.fld3 = (_10, Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).2, Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).2);
_19.fld2 = Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1 as isize;
_6 = Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0).0 as u128;
place!(Field::<(u8, *mut i64, i8, *const u128, (i32,))>(Variant(_7, 0), 0)).4.0 = 16814384335569810465_u64 as i32;
place!(Field::<(u16, u32, i64)>(Variant(_7, 0), 2)).0 = 21666_u16;
_19.fld1.0.0 = [_14,Field::<u32>(Variant(_7, 0), 1),Field::<(u16, u32, i64)>(Variant(_7, 0), 2).1,_14];
_19.fld1.3 = [Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0];
_19.fld1.3 = [Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0,Field::<(u16, u32, i64)>(Variant(_7, 0), 2).0];
_15 = _17;
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(17_usize, 15_usize, Move(_15), 10_usize, Move(_10), 5_usize, Move(_5), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(17_usize, 2_usize, Move(_2), 4_usize, Move(_4), 14_usize, Move(_14), 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box((-109610559020207805948440983943423711960_i128)), std::hint::black_box(92_i8));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: *mut isize,
fld1: i16,
fld2: f64,
fld3: u16,

},
Variant1{
fld0: u128,
fld1: [u16; 4],
fld2: [i128; 4],
fld3: *mut i64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: bool,
fld1: u64,
fld2: u128,
fld3: i8,
fld4: u8,
fld5: (u64,),
fld6: u32,
fld7: (char, *mut i64),

},
Variant1{
fld0: *mut u128,
fld1: i16,
fld2: u8,
fld3: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),

},
Variant2{
fld0: (char, *mut i64),
fld1: *const u128,
fld2: [u16; 4],
fld3: i8,
fld4: u8,
fld5: i64,

}}
#[derive(Debug)]
pub struct Adt45 {
fld0: (i32,),
fld1: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),
fld2: isize,
fld3: (i16, i8, i8),
}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: u16,
fld1: (i32,),
fld2: *mut i64,

},
Variant1{
fld0: (u8, *mut i64, i8, *const u128, (i32,)),
fld1: *const i128,
fld2: (u16, u32, i64),
fld3: f64,
fld4: u128,
fld5: i32,
fld6: ([u32; 4], [i64; 1]),
fld7: usize,

},
Variant2{
fld0: Adt45,
fld1: char,
fld2: *mut i64,
fld3: Adt43,
fld4: i16,
fld5: i32,
fld6: i64,
fld7: i128,

},
Variant3{
fld0: (char, *mut i64),
fld1: u8,
fld2: [u32; 4],
fld3: u16,
fld4: (u64,),
fld5: Adt45,
fld6: [i64; 1],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: u64,
fld1: f32,
fld2: i128,

},
Variant1{
fld0: bool,
fld1: (i32,),
fld2: *const u32,
fld3: [i64; 1],
fld4: usize,

},
Variant2{
fld0: *const u128,
fld1: f32,
fld2: [u16; 4],
fld3: f64,
fld4: *mut u128,
fld5: Adt44,
fld6: u64,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),
fld1: Adt46,
fld2: *const u128,
fld3: (char, (u16, u32, i64), i64),
fld4: (i32,),
fld5: i32,

},
Variant1{
fld0: bool,
fld1: [u128; 8],
fld2: isize,
fld3: (i32,),
fld4: f32,
fld5: i32,
fld6: *mut i64,
fld7: (u16,),

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: i128,
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: Adt48,
fld1: [u32; 4],
fld2: (i32,),
fld3: *mut isize,
fld4: f32,
fld5: u16,
fld6: (char, (u16, u32, i64), i64),
fld7: u8,

},
Variant1{
fld0: Adt46,
fld1: char,
fld2: Adt48,
fld3: f64,
fld4: [bool; 2],
fld5: usize,
fld6: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),
fld7: (i32,),

},
Variant2{
fld0: (u16,),
fld1: char,
fld2: [u32; 4],
fld3: (i16, i8, i8),
fld4: [i128; 4],
fld5: usize,
fld6: i64,

},
Variant3{
fld0: [u128; 8],
fld1: Adt47,
fld2: Adt44,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: bool,
fld1: i128,
fld2: u128,
fld3: ([u32; 4], [i64; 1]),

},
Variant1{
fld0: [u32; 4],

},
Variant2{
fld0: [i64; 1],
fld1: Adt47,
fld2: *mut isize,
fld3: (i32,),
fld4: i16,
fld5: *const i128,
fld6: i64,
fld7: (u8, *mut i64, i8, *const u128, (i32,)),

},
Variant3{
fld0: *mut i64,
fld1: *mut isize,
fld2: [i128; 4],
fld3: u32,
fld4: i16,
fld5: (i32,),

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: (u8, *mut i64, i8, *const u128, (i32,)),
fld1: u32,
fld2: (u16, u32, i64),

},
Variant1{
fld0: i16,

},
Variant2{
fld0: *mut [u32; 4],
fld1: ([u32; 4], [i64; 1]),
fld2: isize,
fld3: i8,
fld4: Adt50,
fld5: [bool; 2],
fld6: Adt47,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: Adt49,
fld1: i32,
fld2: (u16, u32, i64),
fld3: [i128; 4],

},
Variant1{
fld0: u64,
fld1: (i32,),

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: u32,
fld1: (u64,),

},
Variant1{
fld0: f64,

},
Variant2{
fld0: bool,
fld1: (u8, *mut i64, i8, *const u128, (i32,)),
fld2: u16,
fld3: Adt46,
fld4: f64,
fld5: Adt45,
fld6: *mut u128,
fld7: [i128; 4],

},
Variant3{
fld0: *mut isize,
fld1: *mut [u32; 4],
fld2: Adt49,
fld3: u64,
fld4: (u64,),
fld5: u128,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt44,

},
Variant1{
fld0: *mut [u32; 4],
fld1: char,

},
Variant2{
fld0: u32,

},
Variant3{
fld0: *const u128,
fld1: (u8, *mut i64, i8, *const u128, (i32,)),
fld2: *mut [u32; 4],

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *const i128,
fld1: [u32; 4],
fld2: *const u32,
fld3: Adt50,
fld4: [u128; 8],

},
Variant1{
fld0: [bool; 2],
fld1: char,
fld2: Adt49,
fld3: u64,
fld4: *mut u128,

},
Variant2{
fld0: u16,
fld1: Adt54,
fld2: isize,
fld3: *mut i64,
fld4: [u16; 4],
fld5: (u8, *mut i64, i8, *const u128, (i32,)),
fld6: i64,
fld7: ([u32; 4], [i64; 1]),

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: bool,
fld1: Adt56,
fld2: f32,
fld3: i8,
fld4: u16,
fld5: [u16; 4],
fld6: i64,
fld7: i128,

},
Variant1{
fld0: (u16,),
fld1: f64,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: Adt56,
fld1: *mut i64,
fld2: (i32,),
fld3: *const i128,
fld4: [bool; 1],
fld5: (([u32; 4], [i64; 1]), i32, bool, [u16; 4]),
fld6: Adt50,
fld7: Adt55,

},
Variant1{
fld0: i16,

},
Variant2{
fld0: Adt46,
fld1: (u8, *mut i64, i8, *const u128, (i32,)),
fld2: [bool; 2],
fld3: u16,

},
Variant3{
fld0: (i16, i8, i8),
fld1: Adt45,
fld2: *mut i64,

}}
#[derive(Debug)]
pub struct Adt59 {
fld0: (u64,),
fld1: Adt53,
fld2: *mut isize,
}

