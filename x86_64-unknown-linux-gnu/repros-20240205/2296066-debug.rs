#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u16,mut _2: char,mut _3: u8,mut _4: u128,mut _5: i16,mut _6: i32,mut _7: u32,mut _8: i128,mut _9: usize) -> usize {
mir! {
type RET = usize;
let _10: *mut (u32, i16, isize);
let _11: *mut isize;
let _12: f64;
let _13: i16;
let _14: [u8; 7];
let _15: Adt53;
let _16: (u32, *const [usize; 5], char, char, u64, [bool; 5]);
let _17: [u64; 4];
let _18: (i16,);
let _19: ([i64; 5],);
let _20: f64;
let _21: usize;
let _22: ();
let _23: ();
{
_1 = !51361_u16;
_2 = '\u{6f9a2}';
_5 = 19310_i16 * 4136_i16;
_5 = -26783_i16;
_4 = 175431916331914018286305265785119145057_u128 ^ 1776092466198150355045734660327282221_u128;
_5 = 15959_i16 & 27183_i16;
_7 = 13383977165966983522_u64 as u32;
RET = 6_usize;
_5 = _2 as i16;
_9 = RET;
_6 = 1104729757_i32;
_12 = (-110665863917810813763523498915460506989_i128) as f64;
_4 = 111727161241677390081050560202555910251_u128;
_6 = _1 as i32;
_6 = !502579581_i32;
_14 = [59_u8,8_u8,166_u8,19_u8,167_u8,145_u8,0_u8];
_4 = (-8477669750521025230_i64) as u128;
Call(_12 = fn1(_6, _14[RET], _14, _2, _14[RET], _14[RET], _14[RET], _9, _2, _2, _14, _14[RET], _14), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = 1416181054_u32;
_5 = -12381_i16;
_3 = 146_u8;
_3 = !241_u8;
RET = _9;
RET = _9;
_14[RET] = !_3;
_12 = (-51_i8) as f64;
_4 = 79310413772355190423898406169509319428_u128;
_8 = 170034939135025066981826107379116640694_i128 * (-74302797814477435051118075553745599255_i128);
RET = _9;
_3 = _14[RET] + _14[RET];
Goto(bb2)
}
bb2 = {
_16.3 = _2;
_7 = !3335045510_u32;
_7 = !2472447504_u32;
_16.4 = _7 as u64;
_16.5 = [false,true,true,true,true];
_16.0 = !_7;
_15 = Adt53::Variant2 { fld0: _16.4 };
_16.4 = !Field::<u64>(Variant(_15, 2), 0);
_8 = _5 as i128;
RET = !_9;
_16.3 = _2;
_2 = _16.3;
_13 = 121879390046148002_i64 as i16;
RET = _9 & _9;
RET = 1882868227844719331_i64 as usize;
match _4 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
79310413772355190423898406169509319428 => bb10,
_ => bb9
}
}
bb3 = {
_7 = 1416181054_u32;
_5 = -12381_i16;
_3 = 146_u8;
_3 = !241_u8;
RET = _9;
RET = _9;
_14[RET] = !_3;
_12 = (-51_i8) as f64;
_4 = 79310413772355190423898406169509319428_u128;
_8 = 170034939135025066981826107379116640694_i128 * (-74302797814477435051118075553745599255_i128);
RET = _9;
_3 = _14[RET] + _14[RET];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = _9 + _9;
_18 = (_5,);
_2 = _16.3;
_6 = (-174419804_i32) + 728309353_i32;
_7 = Field::<u64>(Variant(_15, 2), 0) as u32;
_16.2 = _16.3;
_7 = _12 as u32;
_2 = _16.3;
_17 = [Field::<u64>(Variant(_15, 2), 0),Field::<u64>(Variant(_15, 2), 0),_16.4,Field::<u64>(Variant(_15, 2), 0)];
_14 = [_3,_3,_3,_3,_3,_3,_3];
_12 = _9 as f64;
_12 = _16.4 as f64;
_2 = _16.2;
Call(_17 = fn2(_9, _16.2, _4, Move(_15), _12, _12, _2, _4, _1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_2 = _16.3;
_16.0 = !_7;
_12 = _1 as f64;
_16.0 = _7;
_16.3 = _16.2;
_9 = RET + RET;
_18 = (_5,);
_13 = !_18.0;
_4 = !42435367353401382769641545169594259085_u128;
_17 = [_16.4,_16.4,_16.4,_16.4];
_16.2 = _16.3;
_12 = (-8020291881053932345_i64) as f64;
_6 = !1961398023_i32;
_18 = (_5,);
_16.4 = 15779172248071079429_u64;
_19.0 = [(-5786742566507450217_i64),156106465444109240_i64,4742771446523877594_i64,1857176190360145257_i64,(-2060621784173829573_i64)];
_16.0 = (-1816743925529450464_i64) as u32;
_4 = !107064247363200468531116226338738392954_u128;
_4 = _9 as u128;
_15 = Adt53::Variant0 { fld0: _16.0 };
_12 = _3 as f64;
_14 = [_3,_3,_3,_3,_3,_3,_3];
_19.0 = [7008976008963398948_i64,(-4060513164417477428_i64),(-8248407925190262031_i64),(-5739283279123394391_i64),6682901598961878644_i64];
match _16.4 {
0 => bb9,
1 => bb12,
2 => bb13,
15779172248071079429 => bb15,
_ => bb14
}
}
bb12 = {
_7 = 1416181054_u32;
_5 = -12381_i16;
_3 = 146_u8;
_3 = !241_u8;
RET = _9;
RET = _9;
_14[RET] = !_3;
_12 = (-51_i8) as f64;
_4 = 79310413772355190423898406169509319428_u128;
_8 = 170034939135025066981826107379116640694_i128 * (-74302797814477435051118075553745599255_i128);
RET = _9;
_3 = _14[RET] + _14[RET];
Goto(bb2)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_18 = (_13,);
RET = _9 & _9;
Goto(bb16)
}
bb16 = {
Call(_22 = dump_var(0_usize, 19_usize, Move(_19), 14_usize, Move(_14), 4_usize, Move(_4), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_22 = dump_var(0_usize, 2_usize, Move(_2), 6_usize, Move(_6), 8_usize, Move(_8), 23_usize, _23), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i32,mut _2: u8,mut _3: [u8; 7],mut _4: char,mut _5: u8,mut _6: u8,mut _7: u8,mut _8: usize,mut _9: char,mut _10: char,mut _11: [u8; 7],mut _12: u8,mut _13: [u8; 7]) -> f64 {
mir! {
type RET = f64;
let _14: f64;
let _15: f64;
let _16: [u8; 7];
let _17: (u32, i16, isize);
let _18: (isize, u64);
let _19: f32;
let _20: ();
let _21: ();
{
_2 = !_5;
RET = 89183225899014338533333896894205019124_i128 as f64;
_4 = _9;
_7 = 10929197639659065841_u64 as u8;
_7 = !_2;
_6 = (-7448139412145015260_i64) as u8;
_8 = !1833003475897622379_usize;
_13 = [_5,_2,_12,_2,_2,_2,_7];
RET = _1 as f64;
_12 = _2 * _7;
_2 = !_7;
_14 = _2 as f64;
_9 = _10;
_8 = !12136453829565408670_usize;
_10 = _9;
_2 = _6;
_8 = 1808921016911601208_usize ^ 2588680497550274808_usize;
_8 = 2_usize & 7_usize;
RET = _14;
_15 = _7 as f64;
match _5 {
1 => bb2,
2 => bb3,
0 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_17.2 = -(-9223372036854775808_isize);
Goto(bb6)
}
bb6 = {
_3 = [_12,_5,_5,_12,_12,_7,_12];
_7 = _12;
_17 = (3064332504_u32, 6208_i16, (-27_isize));
_8 = _17.2 as usize;
_14 = RET + _15;
_16 = [_7,_7,_5,_7,_5,_12,_12];
_6 = !_12;
_17 = (3162427182_u32, (-8671_i16), (-9223372036854775808_isize));
_4 = _10;
_1 = -809790868_i32;
RET = _14;
Goto(bb7)
}
bb7 = {
Call(_20 = dump_var(1_usize, 3_usize, Move(_3), 7_usize, Move(_7), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_20 = dump_var(1_usize, 4_usize, Move(_4), 6_usize, Move(_6), 16_usize, Move(_16), 21_usize, _21), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: usize,mut _2: char,mut _3: u128,mut _4: Adt53,mut _5: f64,mut _6: f64,mut _7: char,mut _8: u128,mut _9: u16) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _10: [i32; 1];
let _11: isize;
let _12: isize;
let _13: *const u128;
let _14: (usize,);
let _15: &'static u128;
let _16: f32;
let _17: i16;
let _18: u32;
let _19: (i16,);
let _20: [usize; 5];
let _21: bool;
let _22: [u8; 1];
let _23: [u8; 1];
let _24: isize;
let _25: Adt62;
let _26: bool;
let _27: Adt61;
let _28: i8;
let _29: i128;
let _30: Adt64;
let _31: char;
let _32: char;
let _33: (isize, u64);
let _34: (i8,);
let _35: isize;
let _36: i32;
let _37: [usize; 5];
let _38: [usize; 5];
let _39: (i8,);
let _40: (usize,);
let _41: [i32; 1];
let _42: char;
let _43: (u64,);
let _44: char;
let _45: ();
let _46: ();
{
_8 = 148321035499980289453681047168778185268_i128 as u128;
_6 = _5;
_8 = 140_u8 as u128;
_8 = !_3;
_10 = [589053555_i32];
_3 = (-7288185122959403585_i64) as u128;
place!(Field::<u64>(Variant(_4, 2), 0)) = !6354891036869774954_u64;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_1 = !16567306350355586661_usize;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_9 = !35476_u16;
_8 = _6 as u128;
_6 = (-918847463_i32) as f64;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_7 = _2;
_8 = (-53106832793491170424598006286439497498_i128) as u128;
_8 = _5 as u128;
_4 = Adt53::Variant2 { fld0: 17062910319755284741_u64 };
RET = [741567499212711288_u64,1268141433735001257_u64,16648322586789187094_u64,13458480914524725007_u64];
place!(Field::<u64>(Variant(_4, 2), 0)) = 16681880335692766851_u64;
_6 = -_5;
_5 = 1081969230374330003_i64 as f64;
Goto(bb1)
}
bb1 = {
_11 = (-9223372036854775808_isize) << _3;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
SetDiscriminant(_4, 0);
_8 = _3 << _3;
RET = [11176796194069827818_u64,12108269704513108357_u64,17728900122328837053_u64,3539194743476387873_u64];
_10 = [1288606802_i32];
_5 = _6;
_5 = _6 + _6;
_7 = _2;
RET = [15822456933809647780_u64,13725192265335392203_u64,16480123219743656106_u64,18311934748807373973_u64];
_7 = _2;
_8 = _11 as u128;
_4 = Adt53::Variant2 { fld0: 10436677602428890315_u64 };
_7 = _2;
_2 = _7;
place!(Field::<u64>(Variant(_4, 2), 0)) = 8576457477129505179_u64;
_14.0 = _1 << _8;
_11 = 39_u8 as isize;
_14 = (_1,);
_13 = core::ptr::addr_of!(_3);
Goto(bb2)
}
bb2 = {
_14.0 = false as usize;
_12 = _8 as isize;
_14 = (_1,);
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_16 = 55_i8 as f32;
_17 = 25975_i16 & (-14256_i16);
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_18 = 84_i8 as u32;
_18 = 2988847342_u32 - 3954507273_u32;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
Call(_20 = fn3(_6, _7, _1, Move(_4), RET, _8, _2, RET, _10, _8, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_19.0 = _9 as i16;
RET = [5368522205872605052_u64,11595005905688098048_u64,11594321379225652927_u64,13496381964640134960_u64];
_4 = Adt53::Variant2 { fld0: 7789676150339146835_u64 };
_19 = (_17,);
_10 = [637361897_i32];
_4 = Adt53::Variant2 { fld0: 10637968543637541285_u64 };
_19 = (_17,);
_6 = (-47_i8) as f64;
_12 = (-76303811988123240928050457081012163231_i128) as isize;
_19.0 = _17 + _17;
_7 = _2;
_17 = _19.0;
place!(Field::<u64>(Variant(_4, 2), 0)) = !7595753540017544608_u64;
_2 = _7;
_8 = (*_13);
_25.fld0 = (*_13) as u64;
_11 = _12;
_26 = !false;
RET = [_25.fld0,Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),_25.fld0];
_19.0 = _17;
_23 = [59_u8];
_20 = [_1,_1,_1,_1,_14.0];
Goto(bb4)
}
bb4 = {
_12 = _11 & _11;
_11 = -_12;
_6 = -_5;
_17 = _19.0;
_27 = Adt61::Variant0 { fld0: _19,fld1: _1 };
_15 = &(*_13);
Goto(bb5)
}
bb5 = {
SetDiscriminant(_27, 0);
place!(Field::<usize>(Variant(_27, 0), 1)) = _26 as usize;
_10 = [591149814_i32];
_22 = _23;
_30.fld2 = [(-1962951194058804500_i64),311170189049002417_i64,8264431740015862842_i64,(-1834840781717099015_i64),590636344024780138_i64];
place!(Field::<u64>(Variant(_4, 2), 0)) = !_25.fld0;
_11 = -_12;
_19.0 = _17;
_25.fld0 = !Field::<u64>(Variant(_4, 2), 0);
RET = [_25.fld0,_25.fld0,_25.fld0,Field::<u64>(Variant(_4, 2), 0)];
_25.fld0 = !Field::<u64>(Variant(_4, 2), 0);
Goto(bb6)
}
bb6 = {
_13 = core::ptr::addr_of!(_3);
_7 = _2;
_23 = _22;
_29 = 93195621924729782566743961389063727149_i128;
_30.fld1 = _6 + _6;
_9 = !46905_u16;
_24 = _11 * _11;
_15 = &_8;
_31 = _7;
Goto(bb7)
}
bb7 = {
Goto(bb8)
}
bb8 = {
_30.fld3 = core::ptr::addr_of!(_20);
match _29 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb9,
4 => bb10,
5 => bb11,
93195621924729782566743961389063727149 => bb13,
_ => bb12
}
}
bb9 = {
_19.0 = _9 as i16;
RET = [5368522205872605052_u64,11595005905688098048_u64,11594321379225652927_u64,13496381964640134960_u64];
_4 = Adt53::Variant2 { fld0: 7789676150339146835_u64 };
_19 = (_17,);
_10 = [637361897_i32];
_4 = Adt53::Variant2 { fld0: 10637968543637541285_u64 };
_19 = (_17,);
_6 = (-47_i8) as f64;
_12 = (-76303811988123240928050457081012163231_i128) as isize;
_19.0 = _17 + _17;
_7 = _2;
_17 = _19.0;
place!(Field::<u64>(Variant(_4, 2), 0)) = !7595753540017544608_u64;
_2 = _7;
_8 = (*_13);
_25.fld0 = (*_13) as u64;
_11 = _12;
_26 = !false;
RET = [_25.fld0,Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),_25.fld0];
_19.0 = _17;
_23 = [59_u8];
_20 = [_1,_1,_1,_1,_14.0];
Goto(bb4)
}
bb10 = {
_14.0 = false as usize;
_12 = _8 as isize;
_14 = (_1,);
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_16 = 55_i8 as f32;
_17 = 25975_i16 & (-14256_i16);
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_18 = 84_i8 as u32;
_18 = 2988847342_u32 - 3954507273_u32;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
Call(_20 = fn3(_6, _7, _1, Move(_4), RET, _8, _2, RET, _10, _8, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
SetDiscriminant(_27, 0);
place!(Field::<usize>(Variant(_27, 0), 1)) = _26 as usize;
_10 = [591149814_i32];
_22 = _23;
_30.fld2 = [(-1962951194058804500_i64),311170189049002417_i64,8264431740015862842_i64,(-1834840781717099015_i64),590636344024780138_i64];
place!(Field::<u64>(Variant(_4, 2), 0)) = !_25.fld0;
_11 = -_12;
_19.0 = _17;
_25.fld0 = !Field::<u64>(Variant(_4, 2), 0);
RET = [_25.fld0,_25.fld0,_25.fld0,Field::<u64>(Variant(_4, 2), 0)];
_25.fld0 = !Field::<u64>(Variant(_4, 2), 0);
Goto(bb6)
}
bb12 = {
_12 = _11 & _11;
_11 = -_12;
_6 = -_5;
_17 = _19.0;
_27 = Adt61::Variant0 { fld0: _19,fld1: _1 };
_15 = &(*_13);
Goto(bb5)
}
bb13 = {
place!(Field::<usize>(Variant(_27, 0), 1)) = !_14.0;
_34.0 = (-83_i8) << _19.0;
_1 = Field::<usize>(Variant(_27, 0), 1);
_15 = &(*_15);
_31 = _7;
_21 = !_26;
_10 = [(-1757891676_i32)];
match _29 {
0 => bb14,
93195621924729782566743961389063727149 => bb16,
_ => bb15
}
}
bb14 = {
SetDiscriminant(_27, 0);
place!(Field::<usize>(Variant(_27, 0), 1)) = _26 as usize;
_10 = [591149814_i32];
_22 = _23;
_30.fld2 = [(-1962951194058804500_i64),311170189049002417_i64,8264431740015862842_i64,(-1834840781717099015_i64),590636344024780138_i64];
place!(Field::<u64>(Variant(_4, 2), 0)) = !_25.fld0;
_11 = -_12;
_19.0 = _17;
_25.fld0 = !Field::<u64>(Variant(_4, 2), 0);
RET = [_25.fld0,_25.fld0,_25.fld0,Field::<u64>(Variant(_4, 2), 0)];
_25.fld0 = !Field::<u64>(Variant(_4, 2), 0);
Goto(bb6)
}
bb15 = {
_14.0 = false as usize;
_12 = _8 as isize;
_14 = (_1,);
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_16 = 55_i8 as f32;
_17 = 25975_i16 & (-14256_i16);
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_18 = 84_i8 as u32;
_18 = 2988847342_u32 - 3954507273_u32;
RET = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
Call(_20 = fn3(_6, _7, _1, Move(_4), RET, _8, _2, RET, _10, _8, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_29 = !159267517677034754267246722135315613390_i128;
_25.fld3 = core::ptr::addr_of!(_20);
_30.fld2 = [(-3724859620125039707_i64),2037770959256832427_i64,6995045358371007898_i64,5032892178766674563_i64,8845399265539196241_i64];
_6 = _29 as f64;
_25.fld1.0 = !_19.0;
_8 = _34.0 as u128;
_25.fld2 = core::ptr::addr_of!(_36);
_30.fld0 = core::ptr::addr_of!(_36);
_19 = (_25.fld1.0,);
_7 = _31;
_32 = _7;
_34 = (76_i8,);
place!(Field::<usize>(Variant(_27, 0), 1)) = !_1;
_35 = _12 * _24;
_17 = _21 as i16;
_24 = !_35;
_9 = 3070_u16 << _8;
_33 = (_35, Field::<u64>(Variant(_4, 2), 0));
_27 = Adt61::Variant0 { fld0: _25.fld1,fld1: _1 };
SetDiscriminant(_27, 0);
SetDiscriminant(_4, 1);
_21 = _26;
Goto(bb17)
}
bb17 = {
Call(_45 = dump_var(2_usize, 29_usize, Move(_29), 3_usize, Move(_3), 17_usize, Move(_17), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(2_usize, 8_usize, Move(_8), 1_usize, Move(_1), 24_usize, Move(_24), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_45 = dump_var(2_usize, 33_usize, Move(_33), 23_usize, Move(_23), 18_usize, Move(_18), 21_usize, Move(_21)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: f64,mut _2: char,mut _3: usize,mut _4: Adt53,mut _5: [u64; 4],mut _6: u128,mut _7: char,mut _8: [u64; 4],mut _9: [i32; 1],mut _10: u128,mut _11: char) -> [usize; 5] {
mir! {
type RET = [usize; 5];
let _12: [i64; 5];
let _13: (i8,);
let _14: f32;
let _15: (*const i32,);
let _16: ([i64; 5],);
let _17: Adt55;
let _18: [usize; 5];
let _19: i16;
let _20: isize;
let _21: [usize; 5];
let _22: isize;
let _23: [u64; 4];
let _24: (*const i32,);
let _25: [i64; 5];
let _26: f32;
let _27: (usize,);
let _28: f64;
let _29: (usize,);
let _30: Adt62;
let _31: [bool; 5];
let _32: ();
let _33: ();
{
_5 = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
place!(Field::<u64>(Variant(_4, 2), 0)) = 1485921713644912219_u64 >> _10;
RET = [_3,_3,_3,_3,_3];
_5 = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_10 = (-1705646140_i32) as u128;
_3 = !11193708153483766580_usize;
_1 = _10 as f64;
_4 = Adt53::Variant0 { fld0: 500321498_u32 };
place!(Field::<u32>(Variant(_4, 0), 0)) = 1829395843_i32 as u32;
_12 = [4178310940874737863_i64,1467735652869970188_i64,(-2927977255159766499_i64),(-8925595856484903386_i64),7286013493053673335_i64];
Call(_8 = fn4(_7, _10, _6, _5, Move(_4), RET, _5, _6, RET, _12, _7, _2, _7, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = _6;
_3 = !13597145056334417364_usize;
_6 = !_10;
Goto(bb2)
}
bb2 = {
_12 = [5435281125018595459_i64,(-6421473829605889230_i64),4763951200429154255_i64,(-1202161238727193456_i64),647007833603408051_i64];
_4 = Adt53::Variant0 { fld0: 945575897_u32 };
_6 = _10;
_9 = [910434327_i32];
_14 = 87_i8 as f32;
place!(Field::<u32>(Variant(_4, 0), 0)) = 4175627702_u32;
_11 = _7;
_1 = (-1029279186_i32) as f64;
_1 = _14 as f64;
_13.0 = 9223372036854775807_isize as i8;
_4 = Adt53::Variant2 { fld0: 17067410420955844115_u64 };
_6 = !_10;
place!(Field::<u64>(Variant(_4, 2), 0)) = 50615857794681357470022794181928706651_i128 as u64;
_13.0 = 95718215464890813253670886941976973115_i128 as i8;
_11 = _7;
_12 = [(-4595425592911521101_i64),(-473708122727121989_i64),(-2008173784292304880_i64),4747607116166675848_i64,(-2777197467689642827_i64)];
place!(Field::<u64>(Variant(_4, 2), 0)) = 61094_u16 as u64;
_16.0 = [7812033034067749540_i64,(-3424186084325683003_i64),(-1014414394488265661_i64),(-7216459738555613410_i64),6610847162023980177_i64];
Goto(bb3)
}
bb3 = {
_4 = Adt53::Variant2 { fld0: 17212054645806155821_u64 };
_16 = (_12,);
place!(Field::<u64>(Variant(_4, 2), 0)) = !9480461031786601000_u64;
_8 = _5;
_12 = _16.0;
Goto(bb4)
}
bb4 = {
_11 = _2;
_9 = [(-2055423988_i32)];
_11 = _7;
place!(Field::<u64>(Variant(_4, 2), 0)) = 13514925096448995210_u64 ^ 2996616124351988972_u64;
_16 = (_12,);
_14 = _1 as f32;
RET = [_3,_3,_3,_3,_3];
_9 = [271612027_i32];
_7 = _11;
_16.0 = [955713774486898877_i64,4120681493741180030_i64,8139028179946742314_i64,7905995101217744305_i64,425703417662943882_i64];
_10 = 2344389882_u32 as u128;
_12 = _16.0;
_16 = (_12,);
Goto(bb5)
}
bb5 = {
_18 = [_3,_3,_3,_3,_3];
_8 = _5;
_13 = (22_i8,);
_14 = 3643409590385570269_i64 as f32;
_18 = [_3,_3,_3,_3,_3];
_13 = (41_i8,);
_16.0 = _12;
_5 = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_13 = (97_i8,);
_21 = _18;
_16 = (_12,);
_3 = 2_usize;
_4 = Adt53::Variant2 { fld0: _8[_3] };
SetDiscriminant(_4, 2);
_6 = _2 as u128;
_22 = 16_isize | 9223372036854775807_isize;
match _3 {
0 => bb3,
1 => bb6,
2 => bb9,
_ => bb8
}
}
bb6 = {
_11 = _2;
_9 = [(-2055423988_i32)];
_11 = _7;
place!(Field::<u64>(Variant(_4, 2), 0)) = 13514925096448995210_u64 ^ 2996616124351988972_u64;
_16 = (_12,);
_14 = _1 as f32;
RET = [_3,_3,_3,_3,_3];
_9 = [271612027_i32];
_7 = _11;
_16.0 = [955713774486898877_i64,4120681493741180030_i64,8139028179946742314_i64,7905995101217744305_i64,425703417662943882_i64];
_10 = 2344389882_u32 as u128;
_12 = _16.0;
_16 = (_12,);
Goto(bb5)
}
bb7 = {
_4 = Adt53::Variant2 { fld0: 17212054645806155821_u64 };
_16 = (_12,);
place!(Field::<u64>(Variant(_4, 2), 0)) = !9480461031786601000_u64;
_8 = _5;
_12 = _16.0;
Goto(bb4)
}
bb8 = {
_10 = _6;
_3 = !13597145056334417364_usize;
_6 = !_10;
Goto(bb2)
}
bb9 = {
_7 = _11;
_2 = _11;
_19 = -(-5423_i16);
_11 = _2;
_20 = -_22;
_18[_3] = !_21[_3];
_6 = !_10;
RET[_3] = _21[_3] / _3;
_5[_3] = _8[_3];
_18 = [_21[_3],_3,RET[_3],_21[_3],RET[_3]];
_16.0 = [_12[_3],_12[_3],_12[_3],_12[_3],_12[_3]];
_22 = _20 - _20;
_7 = _2;
_8[_3] = _5[_3];
_12 = [_16.0[_3],_16.0[_3],_16.0[_3],_16.0[_3],_16.0[_3]];
_23[_3] = 49037_u16 as u64;
RET = [_18[_3],_18[_3],_21[_3],_21[_3],_18[_3]];
_9 = [(-1926159210_i32)];
_23 = _8;
_26 = -_14;
_25[_3] = _16.0[_3] | _16.0[_3];
RET[_3] = _18[_3] & _18[_3];
_25 = [_16.0[_3],_16.0[_3],_16.0[_3],_12[_3],_12[_3]];
_2 = _7;
RET = _18;
_10 = !_6;
_16.0[_3] = false as i64;
_26 = _14 - _14;
_21[_3] = RET[_3] * _18[_3];
Call(_20 = core::intrinsics::transmute(_22), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_21[_3] = !RET[_3];
_13.0 = !98_i8;
_11 = _2;
_10 = 1407481241_i32 as u128;
_4 = Adt53::Variant2 { fld0: _8[_3] };
_6 = _10 >> _18[_3];
RET = _21;
Goto(bb11)
}
bb11 = {
_23[_3] = !_5[_3];
_9 = [(-382029955_i32)];
_20 = -_22;
_19 = (-2653_i16);
_21 = _18;
_14 = _22 as f32;
_16 = (_12,);
_26 = _14;
_23[_3] = 43849_u16 as u64;
RET = [_18[_3],_18[_3],_21[_3],_21[_3],_3];
_16 = (_25,);
_23 = [_8[_3],_5[_3],_5[_3],_8[_3]];
place!(Field::<u64>(Variant(_4, 2), 0)) = _8[_3];
RET = [_21[_3],_18[_3],_18[_3],_21[_3],_18[_3]];
_6 = _18[_3] as u128;
_18 = _21;
match _16.0[_3] {
0 => bb7,
8139028179946742314 => bb13,
_ => bb12
}
}
bb12 = {
_10 = _6;
_3 = !13597145056334417364_usize;
_6 = !_10;
Goto(bb2)
}
bb13 = {
RET[_3] = _21[_3];
_16 = (_25,);
_5 = _8;
_26 = _22 as f32;
_27.0 = _21[_3];
_23[_3] = _5[_3] & _8[_3];
_10 = !_6;
_12 = [_25[_3],_16.0[_3],_16.0[_3],_16.0[_3],_16.0[_3]];
_5 = [_23[_3],_8[_3],_23[_3],_23[_3]];
match _16.0[_3] {
0 => bb8,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb14,
5 => bb15,
6 => bb16,
8139028179946742314 => bb18,
_ => bb17
}
}
bb14 = {
_10 = _6;
_3 = !13597145056334417364_usize;
_6 = !_10;
Goto(bb2)
}
bb15 = {
_18 = [_3,_3,_3,_3,_3];
_8 = _5;
_13 = (22_i8,);
_14 = 3643409590385570269_i64 as f32;
_18 = [_3,_3,_3,_3,_3];
_13 = (41_i8,);
_16.0 = _12;
_5 = [Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0),Field::<u64>(Variant(_4, 2), 0)];
_13 = (97_i8,);
_21 = _18;
_16 = (_12,);
_3 = 2_usize;
_4 = Adt53::Variant2 { fld0: _8[_3] };
SetDiscriminant(_4, 2);
_6 = _2 as u128;
_22 = 16_isize | 9223372036854775807_isize;
match _3 {
0 => bb3,
1 => bb6,
2 => bb9,
_ => bb8
}
}
bb16 = {
_10 = _6;
_3 = !13597145056334417364_usize;
_6 = !_10;
Goto(bb2)
}
bb17 = {
_4 = Adt53::Variant2 { fld0: 17212054645806155821_u64 };
_16 = (_12,);
place!(Field::<u64>(Variant(_4, 2), 0)) = !9480461031786601000_u64;
_8 = _5;
_12 = _16.0;
Goto(bb4)
}
bb18 = {
_23 = [_5[_3],_5[_3],_5[_3],_5[_3]];
_18 = _21;
_8[_3] = 1_u8 as u64;
_14 = -_26;
SetDiscriminant(_4, 3);
_8[_3] = _5[_3] + _23[_3];
_29 = _27;
_3 = RET[_3] << _16.0[_3];
_30.fld4 = [1950542795297212216_i64,(-7521627264934379071_i64),3834816837315566063_i64,8754513719122045327_i64,(-5589419690950998531_i64)];
_23 = [13554441439779426291_u64,10529174840312205415_u64,16154317211327058600_u64,13020021608548475712_u64];
Goto(bb19)
}
bb19 = {
Call(_32 = dump_var(3_usize, 23_usize, Move(_23), 3_usize, Move(_3), 9_usize, Move(_9), 27_usize, Move(_27)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_32 = dump_var(3_usize, 8_usize, Move(_8), 2_usize, Move(_2), 11_usize, Move(_11), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_32 = dump_var(3_usize, 18_usize, Move(_18), 5_usize, Move(_5), 33_usize, _33, 33_usize, _33), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: char,mut _2: u128,mut _3: u128,mut _4: [u64; 4],mut _5: Adt53,mut _6: [usize; 5],mut _7: [u64; 4],mut _8: u128,mut _9: [usize; 5],mut _10: [i64; 5],mut _11: char,mut _12: char,mut _13: char,mut _14: u128) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _15: bool;
let _16: Adt65;
let _17: i32;
let _18: &'static u128;
let _19: *mut isize;
let _20: char;
let _21: [u8; 7];
let _22: Adt65;
let _23: *mut (u32, i16, isize);
let _24: char;
let _25: [bool; 5];
let _26: (i16,);
let _27: (u8, *const i32, (i8,));
let _28: (isize, u64);
let _29: usize;
let _30: ([i64; 5],);
let _31: [bool; 6];
let _32: u64;
let _33: [u64; 4];
let _34: u128;
let _35: (u32, *const [usize; 5], char, char, u64, [bool; 5]);
let _36: bool;
let _37: (u64,);
let _38: f32;
let _39: [i32; 1];
let _40: [i32; 7];
let _41: ([i64; 5], *mut isize, usize);
let _42: isize;
let _43: u8;
let _44: [u64; 4];
let _45: u8;
let _46: u16;
let _47: ();
let _48: ();
{
_7 = [14831746236745382232_u64,8398930894812130825_u64,15631797391202132838_u64,1850298077211842038_u64];
_3 = _14;
_15 = !true;
_6 = [10150878959709087185_usize,2_usize,6_usize,4087391720238263121_usize,1_usize];
_1 = _11;
_17 = (-1937179435_i32);
_11 = _12;
_18 = &_3;
_13 = _11;
_11 = _12;
Call(_5 = fn5(_7, _10, _6, _10, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = [8654300256014309773_i64,(-9088544139897077229_i64),(-3938326488252735960_i64),(-6755524648943411034_i64),7797224247018518958_i64];
_2 = (-5802419464347466053_i64) as u128;
_3 = _2 - _8;
_7 = _4;
_17 = 397259870_i32;
_13 = _11;
_10 = [(-2592350977050654371_i64),4025915974608172047_i64,3342317842917303131_i64,(-1448491315554582261_i64),(-5572715847750869258_i64)];
_3 = _8;
_18 = &_2;
RET = [Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0)];
match _17 {
0 => bb2,
397259870 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
place!(Field::<u64>(Variant(_5, 2), 0)) = 12772385750723830859_u64;
_14 = _3 << _8;
_17 = 141086544_i32;
RET = [Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0)];
_8 = _14;
_13 = _1;
_2 = _8 + _14;
_3 = !_2;
SetDiscriminant(_5, 0);
_6 = _9;
_14 = _3 * _3;
_17 = 1588407415_i32 & (-1528574066_i32);
_12 = _11;
_24 = _11;
_5 = Adt53::Variant0 { fld0: 2475455483_u32 };
_2 = _8 << _3;
RET = [5797305473170185196_u64,17062024420219635693_u64,7093021815990750776_u64,17167270256063251138_u64];
_11 = _1;
Goto(bb5)
}
bb5 = {
_27.2.0 = -69_i8;
_25 = [_15,_15,_15,_15,_15];
RET = _7;
_2 = _8 << _8;
_15 = false;
_17 = (-6945999293609762682_i64) as i32;
_21 = [157_u8,63_u8,98_u8,226_u8,100_u8,167_u8,19_u8];
_26 = (117_i16,);
_12 = _11;
_19 = core::ptr::addr_of_mut!(_28.0);
_24 = _1;
_19 = core::ptr::addr_of_mut!((*_19));
_8 = _2 ^ _14;
Goto(bb6)
}
bb6 = {
_6 = [4385766411405263393_usize,6661430766849321905_usize,6_usize,6_usize,9448224821869301525_usize];
_15 = !true;
_27.2.0 = !66_i8;
_30 = (_10,);
_11 = _13;
_6 = [1_usize,5364273673896281886_usize,16490990324846878710_usize,2_usize,12591410045469514450_usize];
_10 = _30.0;
RET = _4;
_10 = [(-731016945726777705_i64),(-1212202762031946298_i64),1956426591650820403_i64,(-228806491262050572_i64),(-687633222031513832_i64)];
_4 = _7;
_3 = _8;
_28 = (9223372036854775807_isize, 9397285560890318886_u64);
_31 = [_15,_15,_15,_15,_15,_15];
Goto(bb7)
}
bb7 = {
_24 = _1;
_9 = _6;
_35.2 = _1;
_27.0 = 95_u8;
Goto(bb8)
}
bb8 = {
_2 = _3 + _3;
_18 = &_14;
_7 = RET;
_34 = _1 as u128;
_20 = _12;
RET = [_28.1,_28.1,_28.1,_28.1];
_36 = !_15;
_18 = &_14;
_1 = _11;
_35.3 = _12;
_13 = _12;
_32 = _28.1;
_19 = core::ptr::addr_of_mut!(_28.0);
_18 = &_14;
_35.5 = [_36,_36,_15,_36,_15];
_1 = _35.3;
_21 = [_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0];
_35.5 = [_36,_36,_36,_15,_36];
_38 = 3302804152_u32 as f32;
_11 = _20;
_26.0 = _15 as i16;
_10 = [4452708242346196157_i64,4801976915942260652_i64,9008634683722329538_i64,(-2415007788699463738_i64),7974474388714519990_i64];
_27.1 = core::ptr::addr_of!(_17);
_27.2.0 = 21_i8 << _2;
_27.2 = (117_i8,);
_35.3 = _1;
_28.0 = !(-9223372036854775808_isize);
_8 = !_3;
Goto(bb9)
}
bb9 = {
_13 = _24;
_28.1 = !_32;
_17 = (-1352526835_i32);
_35.2 = _35.3;
_39 = [_17];
Goto(bb10)
}
bb10 = {
_18 = &_8;
_41 = (_30.0, _19, 3_usize);
_3 = _2;
_20 = _11;
_39 = [_17];
_41 = (_30.0, _19, 3291960876276850595_usize);
_29 = _41.2;
_35.4 = !_28.1;
_31 = [_36,_36,_36,_15,_15,_36];
_33 = [_28.1,_35.4,_32,_35.4];
_28.0 = 54_isize;
_28 = ((-62_isize), _35.4);
_8 = _3;
_38 = _32 as f32;
_35.0 = 18311_u16 as u32;
_33 = [_35.4,_35.4,_28.1,_35.4];
place!(Field::<u32>(Variant(_5, 0), 0)) = !_35.0;
_20 = _35.2;
match (*_19) {
340282366920938463463374607431768211394 => bb11,
_ => bb8
}
}
bb11 = {
_22 = Adt65::Variant0 { fld0: _17 };
_42 = _28.0;
_37.0 = _35.4 + _28.1;
_27.2 = ((-98_i8),);
_40 = [Field::<i32>(Variant(_22, 0), 0),_17,_17,Field::<i32>(Variant(_22, 0), 0),Field::<i32>(Variant(_22, 0), 0),_17,Field::<i32>(Variant(_22, 0), 0)];
_21 = [_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0];
_26.0 = (-15896_i16) - (-30435_i16);
SetDiscriminant(_5, 1);
_28.0 = _42;
_35.1 = core::ptr::addr_of!(_6);
_38 = _42 as f32;
_9 = [_41.2,_29,_41.2,_29,_29];
_31 = [_36,_15,_36,_15,_15,_15];
RET = _7;
match _29 {
0 => bb12,
1 => bb13,
3291960876276850595 => bb15,
_ => bb14
}
}
bb12 = {
_18 = &_8;
_41 = (_30.0, _19, 3_usize);
_3 = _2;
_20 = _11;
_39 = [_17];
_41 = (_30.0, _19, 3291960876276850595_usize);
_29 = _41.2;
_35.4 = !_28.1;
_31 = [_36,_36,_36,_15,_15,_36];
_33 = [_28.1,_35.4,_32,_35.4];
_28.0 = 54_isize;
_28 = ((-62_isize), _35.4);
_8 = _3;
_38 = _32 as f32;
_35.0 = 18311_u16 as u32;
_33 = [_35.4,_35.4,_28.1,_35.4];
place!(Field::<u32>(Variant(_5, 0), 0)) = !_35.0;
_20 = _35.2;
match (*_19) {
340282366920938463463374607431768211394 => bb11,
_ => bb8
}
}
bb13 = {
place!(Field::<u64>(Variant(_5, 2), 0)) = 12772385750723830859_u64;
_14 = _3 << _8;
_17 = 141086544_i32;
RET = [Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0),Field::<u64>(Variant(_5, 2), 0)];
_8 = _14;
_13 = _1;
_2 = _8 + _14;
_3 = !_2;
SetDiscriminant(_5, 0);
_6 = _9;
_14 = _3 * _3;
_17 = 1588407415_i32 & (-1528574066_i32);
_12 = _11;
_24 = _11;
_5 = Adt53::Variant0 { fld0: 2475455483_u32 };
_2 = _8 << _3;
RET = [5797305473170185196_u64,17062024420219635693_u64,7093021815990750776_u64,17167270256063251138_u64];
_11 = _1;
Goto(bb5)
}
bb14 = {
Return()
}
bb15 = {
_18 = &_34;
_6 = _9;
place!(Field::<i64>(Variant(_5, 1), 6)) = 8295990166822332980_i64 + (-6082544995958770492_i64);
_39 = [Field::<i32>(Variant(_22, 0), 0)];
place!(Field::<[u64; 4]>(Variant(_5, 1), 5)) = [_35.4,_35.4,_37.0,_35.4];
Goto(bb16)
}
bb16 = {
Call(_47 = dump_var(4_usize, 3_usize, Move(_3), 28_usize, Move(_28), 31_usize, Move(_31), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(4_usize, 8_usize, Move(_8), 25_usize, Move(_25), 34_usize, Move(_34), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(4_usize, 9_usize, Move(_9), 33_usize, Move(_33), 29_usize, Move(_29), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_47 = dump_var(4_usize, 26_usize, Move(_26), 15_usize, Move(_15), 24_usize, Move(_24), 37_usize, Move(_37)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [u64; 4],mut _2: [i64; 5],mut _3: [usize; 5],mut _4: [i64; 5],mut _5: [i64; 5]) -> Adt53 {
mir! {
type RET = Adt53;
let _6: bool;
let _7: *mut (u32, i16, isize);
let _8: i128;
let _9: u128;
let _10: bool;
let _11: (i8,);
let _12: Adt59;
let _13: u32;
let _14: isize;
let _15: i128;
let _16: u128;
let _17: [u8; 1];
let _18: isize;
let _19: Adt55;
let _20: u16;
let _21: char;
let _22: Adt55;
let _23: isize;
let _24: ([i64; 5], *mut isize, usize);
let _25: char;
let _26: isize;
let _27: [i32; 1];
let _28: (u64,);
let _29: f32;
let _30: Adt50;
let _31: *mut (u32, i16, isize);
let _32: u128;
let _33: isize;
let _34: u64;
let _35: i16;
let _36: [i32; 1];
let _37: *mut isize;
let _38: Adt62;
let _39: bool;
let _40: (u8, *const i32, (i8,));
let _41: Adt51;
let _42: i128;
let _43: Adt63;
let _44: [bool; 6];
let _45: (u64,);
let _46: Adt52;
let _47: isize;
let _48: f32;
let _49: [i32; 7];
let _50: ();
let _51: ();
{
_3 = [3_usize,10903483450137891372_usize,16845573776814911294_usize,7_usize,6_usize];
_6 = true;
_1 = [12805964460445658684_u64,16123595826867682052_u64,14529098995222389847_u64,1975098831982614785_u64];
RET = Adt53::Variant0 { fld0: 2889921168_u32 };
_3 = [8019221017188659961_usize,6444107475183373281_usize,5_usize,1_usize,7_usize];
_3 = [5939900668175378653_usize,5407723097008224026_usize,0_usize,5_usize,5433229063752956166_usize];
RET = Adt53::Variant0 { fld0: 3963105312_u32 };
_4 = [(-4588553316063735517_i64),1824641678291038317_i64,(-5992643560439778706_i64),2025876125624659680_i64,(-1044012333434570279_i64)];
place!(Field::<u32>(Variant(RET, 0), 0)) = 93621946_u32 * 3420226936_u32;
_4 = _5;
place!(Field::<u32>(Variant(RET, 0), 0)) = 3569725647_u32 - 3878295975_u32;
_1 = [3887375912793746380_u64,13963501074813471472_u64,5470316930413022870_u64,6823649466930655858_u64];
_2 = [(-959580376087810319_i64),(-1352002904252779169_i64),878649421569554316_i64,2823989242121151466_i64,2649487654654056303_i64];
_3 = [1639774718275548062_usize,8892342960589447818_usize,1_usize,10109135652006118805_usize,6_usize];
_8 = (-50103318588745844803630824863469175240_i128);
SetDiscriminant(RET, 1);
_3 = [6_usize,16816079088395445438_usize,11783748072723678543_usize,7_usize,3_usize];
_4 = [(-4081593322316906771_i64),7303870753226870288_i64,3219199113468955427_i64,2626946879525265717_i64,(-179640145895349738_i64)];
_9 = 302276942151309986353752787645596523121_u128;
place!(Field::<i64>(Variant(RET, 1), 6)) = 4997232810493866718_i64 & (-4893010753674968256_i64);
place!(Field::<(u8, *const i32, (i8,))>(Variant(RET, 1), 4)).2.0 = 8277259275874040130_usize as i8;
place!(Field::<*const [usize; 5]>(Variant(RET, 1), 3)) = core::ptr::addr_of!(_3);
place!(Field::<[u64; 4]>(Variant(RET, 1), 5)) = [1214666328501106887_u64,4460417189986295655_u64,8624187825638330234_u64,12792627539943214113_u64];
place!(Field::<i64>(Variant(RET, 1), 6)) = 1447395137987737089_i64 * (-4826378693984594633_i64);
place!(Field::<isize>(Variant(RET, 1), 2)) = !9223372036854775807_isize;
match _9 {
0 => bb1,
302276942151309986353752787645596523121 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_10 = !_6;
_11.0 = Field::<(u8, *const i32, (i8,))>(Variant(RET, 1), 4).2.0;
place!(Field::<[bool; 6]>(Variant(RET, 1), 0)) = [_10,_6,_6,_6,_10,_6];
RET = Adt53::Variant0 { fld0: 3540679318_u32 };
_3 = [2_usize,1_usize,7_usize,4_usize,5069370390322977056_usize];
_11.0 = 127_i8 + (-122_i8);
_9 = 136802046496016498435979435488606034881_u128;
_11.0 = 2_isize as i8;
_9 = !268030662011413090025426335795868233070_u128;
_10 = _6;
place!(Field::<u32>(Variant(RET, 0), 0)) = 1998980166_u32;
place!(Field::<u32>(Variant(RET, 0), 0)) = !2339003867_u32;
_2 = [829314534764381988_i64,1676736856929979046_i64,(-755558831322871433_i64),(-6124878224863222552_i64),(-3105801801052505140_i64)];
_6 = !_10;
_6 = !_10;
_9 = 26_u8 as u128;
_9 = !32982332163002406485793718941667697728_u128;
_8 = -(-90617904251125952152203094660575355862_i128);
Goto(bb4)
}
bb4 = {
_2 = [(-8042900921980203192_i64),(-7242286639342794250_i64),9171654134094142169_i64,(-5227265764021460173_i64),(-6028727901267780893_i64)];
_16 = _9 ^ _9;
_13 = (-772189450_i32) as u32;
_8 = (-150958659025584034932616240675334175892_i128);
_1 = [14059748447845852220_u64,1532303586228631342_u64,6283503927221562672_u64,15195061608172393881_u64];
_14 = 9223372036854775807_isize - 24_isize;
_14 = (-676521999_i32) as isize;
SetDiscriminant(RET, 2);
_14 = !127_isize;
_5 = _4;
_18 = -_14;
_1 = [8522962677099480442_u64,14335332458627467500_u64,16073105968674394397_u64,9804605456144481588_u64];
place!(Field::<u64>(Variant(RET, 2), 0)) = (-12662_i16) as u64;
_4 = [(-5926661200944872153_i64),(-5288318237147056592_i64),(-115162930680668541_i64),3083506988901607752_i64,3259899369550526869_i64];
_2 = [2501801968598610039_i64,(-6148098652847607208_i64),(-4190224874981233801_i64),(-2340302957215248334_i64),2875062663090510257_i64];
_17 = [87_u8];
_17 = [121_u8];
_2 = [(-2816215855852007681_i64),4381073699393433795_i64,(-308198732843424679_i64),(-7335676575636753627_i64),358685846847462656_i64];
Call(_9 = core::intrinsics::bswap(_16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_3 = [0_usize,7742612126521979275_usize,11351612018792378047_usize,18088451150563429068_usize,9812121838769716503_usize];
place!(Field::<u64>(Variant(RET, 2), 0)) = 45744_u16 as u64;
_1 = [Field::<u64>(Variant(RET, 2), 0),Field::<u64>(Variant(RET, 2), 0),Field::<u64>(Variant(RET, 2), 0),Field::<u64>(Variant(RET, 2), 0)];
_3 = [4_usize,6761334693243680612_usize,6779726193496796711_usize,12121664379585476614_usize,4093027934824132955_usize];
Call(place!(Field::<u64>(Variant(RET, 2), 0)) = fn6(_5, _3, _4, _2, _2, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17 = [172_u8];
RET = Adt53::Variant0 { fld0: _13 };
_14 = _18;
_11 = ((-77_i8),);
_8 = 625634568_i32 as i128;
_8 = (-54113641976132133118970486058368551798_i128) | (-21492572387487537797245924538849674542_i128);
_10 = _6;
_10 = !_6;
_4 = [(-8173588745929870579_i64),3880573801900122816_i64,(-668255323566309072_i64),(-360613427588865544_i64),(-4811229218774678149_i64)];
_10 = !_6;
_6 = _10 ^ _10;
_20 = 55714_u16 >> _8;
_10 = _6 | _6;
_17 = [133_u8];
_9 = _16 >> _11.0;
_18 = !_14;
_5 = [7550280837121807477_i64,5505737654292422540_i64,(-9048028847658605994_i64),4922469012148637128_i64,(-6880460329367403764_i64)];
_18 = _14;
Goto(bb7)
}
bb7 = {
_4 = _2;
_15 = 217_u8 as i128;
_15 = !_8;
_23 = -_18;
_13 = Field::<u32>(Variant(RET, 0), 0);
RET = Adt53::Variant0 { fld0: _13 };
_13 = !Field::<u32>(Variant(RET, 0), 0);
RET = Adt53::Variant0 { fld0: _13 };
_1 = [9994488569625356195_u64,16592481661234669463_u64,6050028021408817139_u64,8188693175343933939_u64];
_21 = '\u{5a9f9}';
_23 = _18;
_10 = !_6;
place!(Field::<u32>(Variant(RET, 0), 0)) = (-5736809127787741082_i64) as u32;
place!(Field::<u32>(Variant(RET, 0), 0)) = !_13;
place!(Field::<u32>(Variant(RET, 0), 0)) = _13 + _13;
_21 = '\u{e3639}';
_10 = _15 >= _15;
_14 = _23 + _18;
place!(Field::<u32>(Variant(RET, 0), 0)) = !_13;
Goto(bb8)
}
bb8 = {
_11.0 = 26_i8 << _20;
_4 = _2;
_8 = _20 as i128;
Goto(bb9)
}
bb9 = {
_2 = _5;
_11 = (34_i8,);
_24.1 = core::ptr::addr_of_mut!(_18);
_4 = _2;
_24.1 = core::ptr::addr_of_mut!(_18);
SetDiscriminant(RET, 3);
_23 = -_14;
place!(Field::<char>(Variant(RET, 3), 1)) = _21;
_9 = _16 & _16;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2.0 = _11.0 << _14;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).2 = _14 as i16;
_8 = _15;
_11.0 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0 + Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0;
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_10,_10,_10,_10,_10];
place!(Field::<(u64,)>(Variant(RET, 3), 0)) = (13942579640967374903_u64,);
_25 = Field::<char>(Variant(RET, 3), 1);
Goto(bb10)
}
bb10 = {
_3 = [3_usize,9929873570139197595_usize,2_usize,13505848816455616490_usize,2_usize];
place!(Field::<u8>(Variant(RET, 3), 6)) = 20_u8 << _11.0;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = _8 << Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0;
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_10,_10,_6,_10,_6];
_11.0 = -Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0;
_3 = [6_usize,7217935583165864879_usize,18233225389606742624_usize,2_usize,6332705097298603072_usize];
place!(Field::<f64>(Variant(RET, 3), 5)) = 8326950829657731515_usize as f64;
_27 = [(-1564254743_i32)];
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_10,_10,_10,_6,_10];
_24.1 = core::ptr::addr_of_mut!(_23);
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = _15 * _15;
_1 = [Field::<(u64,)>(Variant(RET, 3), 0).0,Field::<(u64,)>(Variant(RET, 3), 0).0,Field::<(u64,)>(Variant(RET, 3), 0).0,Field::<(u64,)>(Variant(RET, 3), 0).0];
place!(Field::<i8>(Variant(RET, 3), 3)) = _13 as i8;
_15 = _18 as i128;
_25 = Field::<char>(Variant(RET, 3), 1);
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).0 = _24.1;
_27 = [(-1730918355_i32)];
place!(Field::<u8>(Variant(RET, 3), 6)) = 176_u8;
place!(Field::<(u64,)>(Variant(RET, 3), 0)) = (10121972373653951483_u64,);
place!(Field::<i8>(Variant(RET, 3), 3)) = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0 | Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0;
Goto(bb11)
}
bb11 = {
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = _15;
_16 = Field::<f64>(Variant(RET, 3), 5) as u128;
_11.0 = Field::<i8>(Variant(RET, 3), 3) & Field::<i8>(Variant(RET, 3), 3);
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.0 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).1 as u8;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = -_15;
Call(_8 = core::intrinsics::transmute(_16), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_21 = _25;
_24 = (_2, Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).0, 3_usize);
_20 = !8606_u16;
place!(Field::<(u64,)>(Variant(RET, 3), 0)) = (3207155067893196721_u64,);
_29 = 55538444758003878_i64 as f32;
place!(Field::<char>(Variant(RET, 3), 1)) = _21;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2 = (_11.0,);
place!(Field::<f64>(Variant(RET, 3), 5)) = _8 as f64;
_27 = [(-366069690_i32)];
Goto(bb13)
}
bb13 = {
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_10,_6,_10,_10,_10];
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2.0 = _11.0;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = !_8;
_33 = _23 | _14;
_32 = !_9;
_11.0 = Field::<i8>(Variant(RET, 3), 3);
place!(Field::<(u64,)>(Variant(RET, 3), 0)).0 = 16412082321642659673_u64;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2 = (Field::<i8>(Variant(RET, 3), 3),);
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_6,_6,_6,_6,_10];
_8 = !_15;
_23 = _33 | _33;
_3 = [_24.2,_24.2,_24.2,_24.2,_24.2];
place!(Field::<(u64,)>(Variant(RET, 3), 0)).0 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).2 as u64;
_29 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).1 as f32;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2 = (Field::<i8>(Variant(RET, 3), 3),);
_5 = [(-2472690875873092155_i64),(-7655987412771457074_i64),6988627061094257854_i64,(-8163533444272239106_i64),(-4603970670441816642_i64)];
_38.fld1.0 = -Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).2;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = _15 & _15;
match _24.2 {
0 => bb7,
1 => bb14,
2 => bb15,
3 => bb17,
_ => bb16
}
}
bb14 = {
_2 = _5;
_11 = (34_i8,);
_24.1 = core::ptr::addr_of_mut!(_18);
_4 = _2;
_24.1 = core::ptr::addr_of_mut!(_18);
SetDiscriminant(RET, 3);
_23 = -_14;
place!(Field::<char>(Variant(RET, 3), 1)) = _21;
_9 = _16 & _16;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2.0 = _11.0 << _14;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).2 = _14 as i16;
_8 = _15;
_11.0 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0 + Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).3.2.0;
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_10,_10,_10,_10,_10];
place!(Field::<(u64,)>(Variant(RET, 3), 0)) = (13942579640967374903_u64,);
_25 = Field::<char>(Variant(RET, 3), 1);
Goto(bb10)
}
bb15 = {
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = _15;
_16 = Field::<f64>(Variant(RET, 3), 5) as u128;
_11.0 = Field::<i8>(Variant(RET, 3), 3) & Field::<i8>(Variant(RET, 3), 3);
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.0 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).1 as u8;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = -_15;
Call(_8 = core::intrinsics::transmute(_16), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
_11.0 = 26_i8 << _20;
_4 = _2;
_8 = _20 as i128;
Goto(bb9)
}
bb17 = {
_38.fld1 = (Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).2,);
_2 = [3486840630359159125_i64,366724892426604377_i64,6197897096305757374_i64,(-268064874040638168_i64),(-2423850146275567315_i64)];
_25 = Field::<char>(Variant(RET, 3), 1);
_26 = !_14;
_18 = -_33;
place!(Field::<(u64,)>(Variant(RET, 3), 0)).0 = 17991073224672847942_u64;
_24.0 = _5;
_26 = Field::<(u64,)>(Variant(RET, 3), 0).0 as isize;
place!(Field::<[bool; 5]>(Variant(RET, 3), 4)) = [_6,_10,_10,_10,_10];
place!(Field::<(u64,)>(Variant(RET, 3), 0)) = (7554105094751580284_u64,);
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).0 = core::ptr::addr_of_mut!(_26);
_38.fld3 = core::ptr::addr_of!(_3);
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.0 = Field::<u8>(Variant(RET, 3), 6);
_34 = !Field::<(u64,)>(Variant(RET, 3), 0).0;
_37 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).0;
_23 = -_33;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).2 = !_38.fld1.0;
_10 = _6;
_9 = !_32;
_38.fld0 = !Field::<(u64,)>(Variant(RET, 3), 0).0;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).2 = _38.fld1.0;
_44 = [_10,_6,_6,_10,_10,_6];
_42 = Field::<f64>(Variant(RET, 3), 5) as i128;
_40.2 = (Field::<i8>(Variant(RET, 3), 3),);
_21 = Field::<char>(Variant(RET, 3), 1);
Goto(bb18)
}
bb18 = {
_25 = _21;
place!(Field::<(u64,)>(Variant(RET, 3), 0)).0 = _8 as u64;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2.0 = !_11.0;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.2.0 = Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).2 as i8;
_40.2.0 = _21 as i8;
_27 = [(-769361609_i32)];
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).1 = _42 >> _11.0;
_38.fld1.0 = -Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7).2;
_28 = Field::<(u64,)>(Variant(RET, 3), 0);
_45 = _28;
place!(Field::<(*mut isize, i128, i16, (u8, *const i32, (i8,)))>(Variant(RET, 3), 7)).3.0 = (-3304779865104765620_i64) as u8;
_23 = -_33;
place!(Field::<i8>(Variant(RET, 3), 3)) = _20 as i8;
_39 = _6 | _10;
_34 = _32 as u64;
_40.2.0 = Field::<i8>(Variant(RET, 3), 3) << _24.2;
RET = Adt53::Variant2 { fld0: _45.0 };
_38.fld4 = [3251132447107754212_i64,(-3629077419550833098_i64),7515852776559314460_i64,5969862282515222535_i64,(-9167186962820319402_i64)];
_18 = _26 - _23;
_25 = _21;
_34 = _28.0;
_36 = [(-1135319375_i32)];
_26 = _23 * _33;
_38.fld3 = core::ptr::addr_of!(_3);
_40.2 = (_11.0,);
_38.fld1.0 = 18786_i16;
_38.fld1 = ((-4318_i16),);
Goto(bb19)
}
bb19 = {
Call(_50 = dump_var(5_usize, 11_usize, Move(_11), 28_usize, Move(_28), 3_usize, Move(_3), 25_usize, Move(_25)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_50 = dump_var(5_usize, 33_usize, Move(_33), 4_usize, Move(_4), 1_usize, Move(_1), 32_usize, Move(_32)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_50 = dump_var(5_usize, 44_usize, Move(_44), 5_usize, Move(_5), 36_usize, Move(_36), 13_usize, Move(_13)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_50 = dump_var(5_usize, 34_usize, Move(_34), 6_usize, Move(_6), 2_usize, Move(_2), 51_usize, _51), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [i64; 5],mut _2: [usize; 5],mut _3: [i64; 5],mut _4: [i64; 5],mut _5: [i64; 5],mut _6: [i64; 5]) -> u64 {
mir! {
type RET = u64;
let _7: f32;
let _8: [i32; 1];
let _9: (isize, u64);
let _10: u16;
let _11: (usize,);
let _12: isize;
let _13: Adt52;
let _14: Adt63;
let _15: [u8; 7];
let _16: [bool; 6];
let _17: [u8; 1];
let _18: Adt57;
let _19: Adt55;
let _20: i64;
let _21: (u32, i16, isize);
let _22: f32;
let _23: isize;
let _24: f32;
let _25: ([i64; 5],);
let _26: u32;
let _27: Adt65;
let _28: (i16,);
let _29: ();
let _30: ();
{
_4 = [(-2326976391750024432_i64),(-9032478552613960392_i64),(-77090648250301070_i64),(-1034331870018870179_i64),7635524177104651799_i64];
_4 = [(-2558067133243265255_i64),507981474567273237_i64,2332974547340107697_i64,2758470541050564325_i64,4891092689416556129_i64];
_3 = _6;
_3 = [(-3216782872368647569_i64),(-938677482043855634_i64),1118020468466589740_i64,8319242371701376987_i64,(-5626672053745521467_i64)];
_4 = [278466662247441588_i64,8534803548901503984_i64,3376234360391191372_i64,(-6287469032001214736_i64),574693970876221564_i64];
_6 = [(-1886448693932725626_i64),(-2083109013301575839_i64),5462119878335443851_i64,(-1469831932042368986_i64),(-2605302374363298277_i64)];
_4 = [(-1745395534412101145_i64),3614670024139267785_i64,1842142543176326424_i64,8328952062431322392_i64,(-8266204070126382679_i64)];
_5 = [(-825053783103337278_i64),5892000895383005847_i64,4524373336112771694_i64,(-677120290367767238_i64),(-3421010988466092102_i64)];
Call(_4 = fn7(_5, _5, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = [8684567475934075938_i64,3353177666775973779_i64,3320933029136043533_i64,6605021598410577112_i64,(-7117357883304111576_i64)];
RET = (-1596000338129383846_i64) as u64;
_4 = [(-5027975946140727926_i64),(-5197770401705096852_i64),6470224213708470343_i64,5278703619852523027_i64,(-155600817030310_i64)];
_7 = (-18811_i16) as f32;
_2 = [0_usize,9227444826995321017_usize,8990656288326634931_usize,1_usize,1_usize];
RET = 7496104146749089255_u64;
_8 = [(-1401571628_i32)];
_5 = [6356246897956806913_i64,4608141447126330575_i64,2555770901568713106_i64,3610076255192402248_i64,(-7988349546069412182_i64)];
_5 = _6;
RET = 9671290840830527563_u64 * 12512358365303553917_u64;
_9.1 = RET ^ RET;
_4 = _5;
RET = !_9.1;
RET = _9.1;
_9.1 = RET;
_5 = [(-8390114883559898345_i64),(-4311348410142136137_i64),4054369567689785007_i64,(-9005299321183937780_i64),7492112716248207818_i64];
_9 = (9223372036854775807_isize, RET);
_6 = _3;
RET = _9.1;
_7 = 115362009935501004804460604145176371213_i128 as f32;
_5 = [(-2277707452131899156_i64),1462810376570982159_i64,(-3205013606555919210_i64),2642569577376011964_i64,(-2432138803470813861_i64)];
_6 = _5;
Call(_9.0 = fn18(RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = [8112560848131701717_i64,4652867212423897034_i64,8098697396665299404_i64,(-6580345420998237263_i64),5960289429907235258_i64];
_8 = [(-77091653_i32)];
_8 = [(-1642557971_i32)];
_11 = (6469715451329175713_usize,);
_4 = [6043055429947429289_i64,9184479005697633408_i64,3113100712271164738_i64,(-3099449281522160366_i64),(-9115028265004505459_i64)];
_3 = [971677961113419165_i64,4236192672055162457_i64,(-7159880036298290186_i64),4469777899547841409_i64,4725052138891215887_i64];
_7 = _11.0 as f32;
_12 = _9.0;
RET = 43794687978607797478240051438694105516_i128 as u64;
_10 = _9.0 as u16;
_3 = [(-3345672356291021432_i64),6054511567291262579_i64,3438560616207924974_i64,1586103770896680615_i64,(-3931285946893528303_i64)];
match _11.0 {
0 => bb3,
6469715451329175713 => bb5,
_ => bb4
}
}
bb3 = {
_5 = [8684567475934075938_i64,3353177666775973779_i64,3320933029136043533_i64,6605021598410577112_i64,(-7117357883304111576_i64)];
RET = (-1596000338129383846_i64) as u64;
_4 = [(-5027975946140727926_i64),(-5197770401705096852_i64),6470224213708470343_i64,5278703619852523027_i64,(-155600817030310_i64)];
_7 = (-18811_i16) as f32;
_2 = [0_usize,9227444826995321017_usize,8990656288326634931_usize,1_usize,1_usize];
RET = 7496104146749089255_u64;
_8 = [(-1401571628_i32)];
_5 = [6356246897956806913_i64,4608141447126330575_i64,2555770901568713106_i64,3610076255192402248_i64,(-7988349546069412182_i64)];
_5 = _6;
RET = 9671290840830527563_u64 * 12512358365303553917_u64;
_9.1 = RET ^ RET;
_4 = _5;
RET = !_9.1;
RET = _9.1;
_9.1 = RET;
_5 = [(-8390114883559898345_i64),(-4311348410142136137_i64),4054369567689785007_i64,(-9005299321183937780_i64),7492112716248207818_i64];
_9 = (9223372036854775807_isize, RET);
_6 = _3;
RET = _9.1;
_7 = 115362009935501004804460604145176371213_i128 as f32;
_5 = [(-2277707452131899156_i64),1462810376570982159_i64,(-3205013606555919210_i64),2642569577376011964_i64,(-2432138803470813861_i64)];
_6 = _5;
Call(_9.0 = fn18(RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_11.0 = 18432619809902041140_usize;
_9.1 = RET + RET;
match _11.0 {
0 => bb1,
1 => bb6,
18432619809902041140 => bb8,
_ => bb7
}
}
bb6 = {
_6 = [8112560848131701717_i64,4652867212423897034_i64,8098697396665299404_i64,(-6580345420998237263_i64),5960289429907235258_i64];
_8 = [(-77091653_i32)];
_8 = [(-1642557971_i32)];
_11 = (6469715451329175713_usize,);
_4 = [6043055429947429289_i64,9184479005697633408_i64,3113100712271164738_i64,(-3099449281522160366_i64),(-9115028265004505459_i64)];
_3 = [971677961113419165_i64,4236192672055162457_i64,(-7159880036298290186_i64),4469777899547841409_i64,4725052138891215887_i64];
_7 = _11.0 as f32;
_12 = _9.0;
RET = 43794687978607797478240051438694105516_i128 as u64;
_10 = _9.0 as u16;
_3 = [(-3345672356291021432_i64),6054511567291262579_i64,3438560616207924974_i64,1586103770896680615_i64,(-3931285946893528303_i64)];
match _11.0 {
0 => bb3,
6469715451329175713 => bb5,
_ => bb4
}
}
bb7 = {
_5 = [8684567475934075938_i64,3353177666775973779_i64,3320933029136043533_i64,6605021598410577112_i64,(-7117357883304111576_i64)];
RET = (-1596000338129383846_i64) as u64;
_4 = [(-5027975946140727926_i64),(-5197770401705096852_i64),6470224213708470343_i64,5278703619852523027_i64,(-155600817030310_i64)];
_7 = (-18811_i16) as f32;
_2 = [0_usize,9227444826995321017_usize,8990656288326634931_usize,1_usize,1_usize];
RET = 7496104146749089255_u64;
_8 = [(-1401571628_i32)];
_5 = [6356246897956806913_i64,4608141447126330575_i64,2555770901568713106_i64,3610076255192402248_i64,(-7988349546069412182_i64)];
_5 = _6;
RET = 9671290840830527563_u64 * 12512358365303553917_u64;
_9.1 = RET ^ RET;
_4 = _5;
RET = !_9.1;
RET = _9.1;
_9.1 = RET;
_5 = [(-8390114883559898345_i64),(-4311348410142136137_i64),4054369567689785007_i64,(-9005299321183937780_i64),7492112716248207818_i64];
_9 = (9223372036854775807_isize, RET);
_6 = _3;
RET = _9.1;
_7 = 115362009935501004804460604145176371213_i128 as f32;
_5 = [(-2277707452131899156_i64),1462810376570982159_i64,(-3205013606555919210_i64),2642569577376011964_i64,(-2432138803470813861_i64)];
_6 = _5;
Call(_9.0 = fn18(RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
_9.1 = 32405803864507364893734943123131979299_i128 as u64;
RET = 290775498794967863983530957032794202207_u128 as u64;
RET = _9.1;
_9 = (_12, RET);
_13.fld0 = core::ptr::addr_of_mut!(_2);
_10 = 748_u16;
_3 = [7256749813813068005_i64,3599227520930173656_i64,(-6456093255991680013_i64),(-6391344229507774504_i64),(-6659200090760363753_i64)];
_3 = [(-4813657019730359230_i64),2154779553800896158_i64,(-4073657207039627493_i64),(-1926919190409024668_i64),(-6452783078632927946_i64)];
_11.0 = 7849330045530009867_usize;
_4 = [(-8233564686773276635_i64),2041229705810222672_i64,4040379495202820702_i64,(-5030043251640732638_i64),(-2855981754884134409_i64)];
RET = !_9.1;
_6 = _5;
_7 = 44873063826907216577553638521707873414_i128 as f32;
_2 = [_11.0,_11.0,_11.0,_11.0,_11.0];
_1 = [4945343168157580611_i64,(-9219870173114324949_i64),(-463371033179523685_i64),(-512876363474218563_i64),(-2803851158988869648_i64)];
_9 = (_12, RET);
_9.0 = -_12;
_11 = (7_usize,);
RET = 192_u8 as u64;
_3 = _5;
_1 = [(-81622190908161838_i64),(-3995646841216650408_i64),4181112156305308133_i64,(-9014217324509667572_i64),(-69475985522961347_i64)];
_4 = [(-469074146461833264_i64),6682628235828002575_i64,(-3237791666986501752_i64),3263400465308792467_i64,(-2552069434307117080_i64)];
_16 = [true,true,true,true,false,false];
_9.0 = !_12;
_3 = [(-2385561830902483333_i64),3368422098529808379_i64,(-8639606858742781719_i64),(-7815492271825826024_i64),3125456806271709691_i64];
_5 = _3;
_17 = [181_u8];
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
748 => bb9,
_ => bb6
}
}
bb9 = {
RET = _9.1 >> _12;
_10 = 104_i8 as u16;
RET = !_9.1;
RET = _9.1;
_7 = _9.1 as f32;
_11.0 = 485294970_u32 as usize;
RET = !_9.1;
RET = !_9.1;
_10 = 45115_u16 - 63376_u16;
RET = _9.1;
_16 = [true,false,true,false,false,true];
_2 = [_11.0,_11.0,_11.0,_11.0,_11.0];
RET = _9.1;
_7 = (-22126_i16) as f32;
_15 = [29_u8,9_u8,209_u8,23_u8,245_u8,206_u8,201_u8];
_15 = [51_u8,108_u8,239_u8,131_u8,215_u8,238_u8,235_u8];
_12 = _9.0 | _9.0;
_11 = (13424436494701737315_usize,);
_15 = [30_u8,205_u8,70_u8,123_u8,200_u8,77_u8,173_u8];
_17 = [194_u8];
_8 = [(-759866188_i32)];
Call(_4 = fn19(_15, _1, _13), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_9.1 = RET;
_4 = _3;
_21.0 = 27_u8 as u32;
match _11.0 {
0 => bb3,
13424436494701737315 => bb12,
_ => bb11
}
}
bb11 = {
_9.1 = 32405803864507364893734943123131979299_i128 as u64;
RET = 290775498794967863983530957032794202207_u128 as u64;
RET = _9.1;
_9 = (_12, RET);
_13.fld0 = core::ptr::addr_of_mut!(_2);
_10 = 748_u16;
_3 = [7256749813813068005_i64,3599227520930173656_i64,(-6456093255991680013_i64),(-6391344229507774504_i64),(-6659200090760363753_i64)];
_3 = [(-4813657019730359230_i64),2154779553800896158_i64,(-4073657207039627493_i64),(-1926919190409024668_i64),(-6452783078632927946_i64)];
_11.0 = 7849330045530009867_usize;
_4 = [(-8233564686773276635_i64),2041229705810222672_i64,4040379495202820702_i64,(-5030043251640732638_i64),(-2855981754884134409_i64)];
RET = !_9.1;
_6 = _5;
_7 = 44873063826907216577553638521707873414_i128 as f32;
_2 = [_11.0,_11.0,_11.0,_11.0,_11.0];
_1 = [4945343168157580611_i64,(-9219870173114324949_i64),(-463371033179523685_i64),(-512876363474218563_i64),(-2803851158988869648_i64)];
_9 = (_12, RET);
_9.0 = -_12;
_11 = (7_usize,);
RET = 192_u8 as u64;
_3 = _5;
_1 = [(-81622190908161838_i64),(-3995646841216650408_i64),4181112156305308133_i64,(-9014217324509667572_i64),(-69475985522961347_i64)];
_4 = [(-469074146461833264_i64),6682628235828002575_i64,(-3237791666986501752_i64),3263400465308792467_i64,(-2552069434307117080_i64)];
_16 = [true,true,true,true,false,false];
_9.0 = !_12;
_3 = [(-2385561830902483333_i64),3368422098529808379_i64,(-8639606858742781719_i64),(-7815492271825826024_i64),3125456806271709691_i64];
_5 = _3;
_17 = [181_u8];
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
748 => bb9,
_ => bb6
}
}
bb12 = {
_20 = (-7769911555136964796_i64);
_21.2 = -_9.0;
_5 = [_20,_20,_20,_20,_20];
_11 = (2767269943779077231_usize,);
_1 = [_20,_20,_20,_20,_20];
_9.0 = _12 >> _21.2;
_24 = 21401_i16 as f32;
_6 = [_20,_20,_20,_20,_20];
_21.1 = false as i16;
_2 = [_11.0,_11.0,_11.0,_11.0,_11.0];
_16 = [true,false,false,false,false,false];
_12 = !_21.2;
_3 = [_20,_20,_20,_20,_20];
_9.1 = !RET;
_26 = !_21.0;
_13.fld0 = core::ptr::addr_of_mut!(_2);
_9 = (_21.2, RET);
_21.0 = _26;
_9 = (_21.2, RET);
_10 = (-42603711878508665453210350478698792895_i128) as u16;
match _11.0 {
0 => bb2,
1 => bb13,
2 => bb14,
2767269943779077231 => bb16,
_ => bb15
}
}
bb13 = {
Return()
}
bb14 = {
_5 = [8684567475934075938_i64,3353177666775973779_i64,3320933029136043533_i64,6605021598410577112_i64,(-7117357883304111576_i64)];
RET = (-1596000338129383846_i64) as u64;
_4 = [(-5027975946140727926_i64),(-5197770401705096852_i64),6470224213708470343_i64,5278703619852523027_i64,(-155600817030310_i64)];
_7 = (-18811_i16) as f32;
_2 = [0_usize,9227444826995321017_usize,8990656288326634931_usize,1_usize,1_usize];
RET = 7496104146749089255_u64;
_8 = [(-1401571628_i32)];
_5 = [6356246897956806913_i64,4608141447126330575_i64,2555770901568713106_i64,3610076255192402248_i64,(-7988349546069412182_i64)];
_5 = _6;
RET = 9671290840830527563_u64 * 12512358365303553917_u64;
_9.1 = RET ^ RET;
_4 = _5;
RET = !_9.1;
RET = _9.1;
_9.1 = RET;
_5 = [(-8390114883559898345_i64),(-4311348410142136137_i64),4054369567689785007_i64,(-9005299321183937780_i64),7492112716248207818_i64];
_9 = (9223372036854775807_isize, RET);
_6 = _3;
RET = _9.1;
_7 = 115362009935501004804460604145176371213_i128 as f32;
_5 = [(-2277707452131899156_i64),1462810376570982159_i64,(-3205013606555919210_i64),2642569577376011964_i64,(-2432138803470813861_i64)];
_6 = _5;
Call(_9.0 = fn18(RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_6 = [8112560848131701717_i64,4652867212423897034_i64,8098697396665299404_i64,(-6580345420998237263_i64),5960289429907235258_i64];
_8 = [(-77091653_i32)];
_8 = [(-1642557971_i32)];
_11 = (6469715451329175713_usize,);
_4 = [6043055429947429289_i64,9184479005697633408_i64,3113100712271164738_i64,(-3099449281522160366_i64),(-9115028265004505459_i64)];
_3 = [971677961113419165_i64,4236192672055162457_i64,(-7159880036298290186_i64),4469777899547841409_i64,4725052138891215887_i64];
_7 = _11.0 as f32;
_12 = _9.0;
RET = 43794687978607797478240051438694105516_i128 as u64;
_10 = _9.0 as u16;
_3 = [(-3345672356291021432_i64),6054511567291262579_i64,3438560616207924974_i64,1586103770896680615_i64,(-3931285946893528303_i64)];
match _11.0 {
0 => bb3,
6469715451329175713 => bb5,
_ => bb4
}
}
bb16 = {
_21.1 = 30138_i16 >> _26;
_8 = [977253657_i32];
_10 = 14092_u16 * 24481_u16;
_21.1 = !(-31178_i16);
_25.0 = _5;
_16 = [false,true,true,true,true,true];
_6 = [_20,_20,_20,_20,_20];
_25 = (_5,);
Goto(bb17)
}
bb17 = {
Call(_29 = dump_var(6_usize, 11_usize, Move(_11), 16_usize, Move(_16), 9_usize, Move(_9), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(6_usize, 25_usize, Move(_25), 8_usize, Move(_8), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_29 = dump_var(6_usize, 3_usize, Move(_3), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [i64; 5],mut _2: [i64; 5],mut _3: [usize; 5]) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _4: isize;
let _5: *const u128;
let _6: isize;
let _7: isize;
let _8: ([i64; 5],);
let _9: [u64; 4];
let _10: Adt54;
let _11: isize;
let _12: [u8; 1];
let _13: isize;
let _14: i64;
let _15: Adt64;
let _16: (isize, u64);
let _17: usize;
let _18: bool;
let _19: (*mut isize, i128, i16, (u8, *const i32, (i8,)));
let _20: *mut (u32, i16, isize);
let _21: u32;
let _22: isize;
let _23: isize;
let _24: [bool; 5];
let _25: (i8,);
let _26: f64;
let _27: isize;
let _28: i8;
let _29: (u32, i16, isize);
let _30: [u8; 7];
let _31: ();
let _32: ();
{
_3 = [4_usize,10416997958063906957_usize,7606191334494860314_usize,16591763793148574560_usize,4_usize];
RET = _2;
RET = [6206176418123452716_i64,2130585918874244211_i64,(-9014416808416257346_i64),(-1160782722957635203_i64),8383674206990024608_i64];
_2 = [(-3067341577964405376_i64),(-5999270700507665979_i64),(-639633500385407940_i64),(-5151032356047643625_i64),(-530535451216209958_i64)];
_2 = [8255465063390716040_i64,5474554289389471496_i64,4325118138995107107_i64,3222195406287744056_i64,5429639785176072859_i64];
RET = [8506115693916566611_i64,4153357873142984637_i64,1511443075377560490_i64,(-2694229316440578966_i64),(-6685894890597101643_i64)];
RET = [2287204203997194535_i64,(-2569166044936187979_i64),1045704893047524986_i64,6559875697552883421_i64,(-1793739790142300426_i64)];
_3 = [9768858005766570444_usize,6_usize,7_usize,1732913644933476121_usize,1_usize];
RET = [8893654325152511690_i64,(-2950064729041202698_i64),(-8889846186336747701_i64),(-302386307531207722_i64),(-8966701732239105193_i64)];
RET = _1;
_2 = [(-4575513811395202190_i64),238614129616127408_i64,(-6045768206316183883_i64),(-5467608586350689970_i64),1105200969059551625_i64];
RET = [(-6749664723199708360_i64),1894734521162487454_i64,7423459865862159190_i64,3526142737225017312_i64,(-910520654750154607_i64)];
Call(_4 = fn8(_3, _1, _2, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = _1;
RET = _1;
_6 = (-7645249101495203838_i64) as isize;
_7 = _4;
_4 = 339492728510216901970671612523672283741_u128 as isize;
_3 = [4610290145825770947_usize,12805817049577011354_usize,6183194762405879937_usize,4_usize,1799095701734298274_usize];
_3 = [7527523863256434105_usize,17059965589683773789_usize,843429339012299830_usize,17895019606139318779_usize,1792468395661494281_usize];
_3 = [13993865906404002015_usize,4923489463562910562_usize,7_usize,4_usize,4_usize];
_2 = [(-1792692233669472823_i64),8855945161698171112_i64,(-6894256222560337107_i64),(-3961598520684473460_i64),(-7785614012882446614_i64)];
RET = _2;
_6 = _7;
_4 = -_6;
RET = [7676855017861486416_i64,(-9115617017379402530_i64),(-8799131360660965543_i64),488909943876535948_i64,398636872717655976_i64];
RET = [5977883533198792910_i64,(-1521011945982858681_i64),154595839677418527_i64,(-7603849813203060035_i64),(-6246443927858905069_i64)];
_8 = (RET,);
_1 = [3863661795185559875_i64,(-1640891205082215911_i64),(-8511568202683353462_i64),3075321813848034802_i64,7889674332804941601_i64];
_4 = 91_u8 as isize;
_2 = [9039456110267884362_i64,(-4092282459986665320_i64),2852420635895015695_i64,(-1053730411658221397_i64),(-6864481606946932456_i64)];
_9 = [15643201675316231370_u64,3163172149791822180_u64,7518143377733808943_u64,918207426714055367_u64];
_10 = Adt54::Variant0 { fld0: 125187510529884292097209964213067194368_i128 };
_1 = RET;
_6 = 20094_i16 as isize;
place!(Field::<i128>(Variant(_10, 0), 0)) = -3080324619631890225120068598905611322_i128;
RET = [(-5275327619896842267_i64),3528169348137300756_i64,3598619030056289406_i64,(-1376666962143918689_i64),4065589933356720445_i64];
Call(_11 = core::intrinsics::bswap(_6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = _7;
Goto(bb3)
}
bb3 = {
_11 = Field::<i128>(Variant(_10, 0), 0) as isize;
_6 = -_4;
_7 = _6;
SetDiscriminant(_10, 0);
RET = _2;
place!(Field::<i128>(Variant(_10, 0), 0)) = 3230530191_u32 as i128;
RET = [6082235221642687706_i64,(-4771210406303310181_i64),2424606906621050799_i64,(-8413430807680047705_i64),(-3086225284189199547_i64)];
_7 = _4 - _4;
_1 = [(-8185627301135120089_i64),8060857671049248354_i64,(-3288375863103288464_i64),(-1006860997505520490_i64),(-3638205078269587902_i64)];
RET = _2;
_1 = _8.0;
RET = _2;
_10 = Adt54::Variant0 { fld0: 19133706116020960597683317622189256044_i128 };
place!(Field::<i128>(Variant(_10, 0), 0)) = (-30922578356981812203170905963062143693_i128);
_3 = [3943385203396806323_usize,11215421246562140776_usize,5_usize,13644071208505307282_usize,6_usize];
_2 = [(-5929077623492663545_i64),(-978856840483089689_i64),(-6644512132768155166_i64),4691547765605939964_i64,2094875907313523151_i64];
_8.0 = _2;
_6 = -_4;
_10 = Adt54::Variant2 { fld0: 30_u8,fld1: _8 };
place!(Field::<u8>(Variant(_10, 2), 0)) = 131_u8 & 217_u8;
_1 = [3645333711173768362_i64,5390375049246307589_i64,4755912040949567914_i64,(-8053671917152965790_i64),1964306682956289110_i64];
Call(_9 = fn17(_7, _3, _10, _7, Field::<([i64; 5],)>(Variant(_10, 2), 1).0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
place!(Field::<([i64; 5],)>(Variant(_10, 2), 1)) = (RET,);
_8.0 = [(-5733314649188446385_i64),(-7340748240329754116_i64),(-4559304499236455097_i64),9133500674262535722_i64,(-5592996242706546581_i64)];
_12 = [Field::<u8>(Variant(_10, 2), 0)];
_11 = !_7;
_10 = Adt54::Variant2 { fld0: 145_u8,fld1: _8 };
_16.1 = 18169990161943862896_u64;
RET = [(-4564336737044119815_i64),(-3991611671760416272_i64),4125959437452427737_i64,926617493015260086_i64,(-2467430047040202873_i64)];
_15.fld1 = 17950_i16 as f64;
_12 = [32_u8];
_15.fld2 = [(-2747919663347247530_i64),7601941136842661140_i64,7543060535044670101_i64,(-3254652297046701447_i64),4649025284722405713_i64];
_13 = _11;
place!(Field::<u8>(Variant(_10, 2), 0)) = !199_u8;
_15.fld2 = _8.0;
_18 = false ^ true;
Goto(bb5)
}
bb5 = {
_14 = 91_i8 as i64;
_16 = (_11, 18143728496275468394_u64);
_11 = 43950_u16 as isize;
_19.3.2.0 = (-5_i8) - (-18_i8);
_15.fld1 = _7 as f64;
_19.1 = _18 as i128;
_4 = _13 ^ _6;
_16 = (_4, 9764595927297090728_u64);
_7 = _16.0 + _13;
_1 = [_14,_14,_14,_14,_14];
_19.0 = core::ptr::addr_of_mut!(_11);
_8.0 = RET;
SetDiscriminant(_10, 0);
_10 = Adt54::Variant0 { fld0: _19.1 };
_9 = [_16.1,_16.1,_16.1,_16.1];
_19.3.0 = 194_u8;
_10 = Adt54::Variant2 { fld0: _19.3.0,fld1: _8 };
_16.0 = _7;
_7 = !_13;
_1 = [_14,_14,_14,_14,_14];
Goto(bb6)
}
bb6 = {
match _19.3.0 {
0 => bb4,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
194 => bb12,
_ => bb11
}
}
bb7 = {
_14 = 91_i8 as i64;
_16 = (_11, 18143728496275468394_u64);
_11 = 43950_u16 as isize;
_19.3.2.0 = (-5_i8) - (-18_i8);
_15.fld1 = _7 as f64;
_19.1 = _18 as i128;
_4 = _13 ^ _6;
_16 = (_4, 9764595927297090728_u64);
_7 = _16.0 + _13;
_1 = [_14,_14,_14,_14,_14];
_19.0 = core::ptr::addr_of_mut!(_11);
_8.0 = RET;
SetDiscriminant(_10, 0);
_10 = Adt54::Variant0 { fld0: _19.1 };
_9 = [_16.1,_16.1,_16.1,_16.1];
_19.3.0 = 194_u8;
_10 = Adt54::Variant2 { fld0: _19.3.0,fld1: _8 };
_16.0 = _7;
_7 = !_13;
_1 = [_14,_14,_14,_14,_14];
Goto(bb6)
}
bb8 = {
place!(Field::<([i64; 5],)>(Variant(_10, 2), 1)) = (RET,);
_8.0 = [(-5733314649188446385_i64),(-7340748240329754116_i64),(-4559304499236455097_i64),9133500674262535722_i64,(-5592996242706546581_i64)];
_12 = [Field::<u8>(Variant(_10, 2), 0)];
_11 = !_7;
_10 = Adt54::Variant2 { fld0: 145_u8,fld1: _8 };
_16.1 = 18169990161943862896_u64;
RET = [(-4564336737044119815_i64),(-3991611671760416272_i64),4125959437452427737_i64,926617493015260086_i64,(-2467430047040202873_i64)];
_15.fld1 = 17950_i16 as f64;
_12 = [32_u8];
_15.fld2 = [(-2747919663347247530_i64),7601941136842661140_i64,7543060535044670101_i64,(-3254652297046701447_i64),4649025284722405713_i64];
_13 = _11;
place!(Field::<u8>(Variant(_10, 2), 0)) = !199_u8;
_15.fld2 = _8.0;
_18 = false ^ true;
Goto(bb5)
}
bb9 = {
_11 = Field::<i128>(Variant(_10, 0), 0) as isize;
_6 = -_4;
_7 = _6;
SetDiscriminant(_10, 0);
RET = _2;
place!(Field::<i128>(Variant(_10, 0), 0)) = 3230530191_u32 as i128;
RET = [6082235221642687706_i64,(-4771210406303310181_i64),2424606906621050799_i64,(-8413430807680047705_i64),(-3086225284189199547_i64)];
_7 = _4 - _4;
_1 = [(-8185627301135120089_i64),8060857671049248354_i64,(-3288375863103288464_i64),(-1006860997505520490_i64),(-3638205078269587902_i64)];
RET = _2;
_1 = _8.0;
RET = _2;
_10 = Adt54::Variant0 { fld0: 19133706116020960597683317622189256044_i128 };
place!(Field::<i128>(Variant(_10, 0), 0)) = (-30922578356981812203170905963062143693_i128);
_3 = [3943385203396806323_usize,11215421246562140776_usize,5_usize,13644071208505307282_usize,6_usize];
_2 = [(-5929077623492663545_i64),(-978856840483089689_i64),(-6644512132768155166_i64),4691547765605939964_i64,2094875907313523151_i64];
_8.0 = _2;
_6 = -_4;
_10 = Adt54::Variant2 { fld0: 30_u8,fld1: _8 };
place!(Field::<u8>(Variant(_10, 2), 0)) = 131_u8 & 217_u8;
_1 = [3645333711173768362_i64,5390375049246307589_i64,4755912040949567914_i64,(-8053671917152965790_i64),1964306682956289110_i64];
Call(_9 = fn17(_7, _3, _10, _7, Field::<([i64; 5],)>(Variant(_10, 2), 1).0), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_4 = _7;
Goto(bb3)
}
bb11 = {
_2 = _1;
RET = _1;
_6 = (-7645249101495203838_i64) as isize;
_7 = _4;
_4 = 339492728510216901970671612523672283741_u128 as isize;
_3 = [4610290145825770947_usize,12805817049577011354_usize,6183194762405879937_usize,4_usize,1799095701734298274_usize];
_3 = [7527523863256434105_usize,17059965589683773789_usize,843429339012299830_usize,17895019606139318779_usize,1792468395661494281_usize];
_3 = [13993865906404002015_usize,4923489463562910562_usize,7_usize,4_usize,4_usize];
_2 = [(-1792692233669472823_i64),8855945161698171112_i64,(-6894256222560337107_i64),(-3961598520684473460_i64),(-7785614012882446614_i64)];
RET = _2;
_6 = _7;
_4 = -_6;
RET = [7676855017861486416_i64,(-9115617017379402530_i64),(-8799131360660965543_i64),488909943876535948_i64,398636872717655976_i64];
RET = [5977883533198792910_i64,(-1521011945982858681_i64),154595839677418527_i64,(-7603849813203060035_i64),(-6246443927858905069_i64)];
_8 = (RET,);
_1 = [3863661795185559875_i64,(-1640891205082215911_i64),(-8511568202683353462_i64),3075321813848034802_i64,7889674332804941601_i64];
_4 = 91_u8 as isize;
_2 = [9039456110267884362_i64,(-4092282459986665320_i64),2852420635895015695_i64,(-1053730411658221397_i64),(-6864481606946932456_i64)];
_9 = [15643201675316231370_u64,3163172149791822180_u64,7518143377733808943_u64,918207426714055367_u64];
_10 = Adt54::Variant0 { fld0: 125187510529884292097209964213067194368_i128 };
_1 = RET;
_6 = 20094_i16 as isize;
place!(Field::<i128>(Variant(_10, 0), 0)) = -3080324619631890225120068598905611322_i128;
RET = [(-5275327619896842267_i64),3528169348137300756_i64,3598619030056289406_i64,(-1376666962143918689_i64),4065589933356720445_i64];
Call(_11 = core::intrinsics::bswap(_6), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
RET = [_14,_14,_14,_14,_14];
Goto(bb13)
}
bb13 = {
_21 = '\u{94db}' as u32;
_23 = -_16.0;
_19.1 = (-89102800837713959812690099130919952672_i128);
_19.2 = (-19950_i16) ^ (-26956_i16);
_3 = [1_usize,5_usize,14318480175947295187_usize,817994466888120001_usize,12652644632379177012_usize];
_24 = [_18,_18,_18,_18,_18];
_19.3.2.0 = _16.0 as i8;
_14 = _15.fld1 as i64;
_21 = !485769230_u32;
_3 = [3_usize,0_usize,5_usize,3_usize,15813545485454687662_usize];
_17 = _19.2 as usize;
_7 = _18 as isize;
_15.fld3 = core::ptr::addr_of!(_3);
_24 = [_18,_18,_18,_18,_18];
_15.fld2 = [_14,_14,_14,_14,_14];
_25.0 = _19.1 as i8;
RET = [_14,_14,_14,_14,_14];
_13 = _23;
_15.fld2 = [_14,_14,_14,_14,_14];
_25 = (_19.3.2.0,);
_1 = [_14,_14,_14,_14,_14];
Goto(bb14)
}
bb14 = {
Call(_31 = dump_var(7_usize, 4_usize, Move(_4), 1_usize, Move(_1), 2_usize, Move(_2), 16_usize, Move(_16)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_31 = dump_var(7_usize, 3_usize, Move(_3), 8_usize, Move(_8), 14_usize, Move(_14), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(7_usize, 17_usize, Move(_17), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [usize; 5],mut _2: [i64; 5],mut _3: [i64; 5],mut _4: [i64; 5]) -> isize {
mir! {
type RET = isize;
let _5: char;
let _6: [bool; 5];
let _7: f64;
let _8: isize;
let _9: (i16,);
let _10: [bool; 5];
let _11: Adt63;
let _12: [i64; 5];
let _13: [usize; 5];
let _14: bool;
let _15: char;
let _16: ([i64; 5],);
let _17: isize;
let _18: ([i64; 5],);
let _19: *const u128;
let _20: bool;
let _21: (isize, u64);
let _22: Adt51;
let _23: (usize,);
let _24: bool;
let _25: i64;
let _26: (u64,);
let _27: (u32, i16, isize);
let _28: Adt54;
let _29: isize;
let _30: char;
let _31: [u8; 1];
let _32: isize;
let _33: (usize,);
let _34: bool;
let _35: [usize; 5];
let _36: [i32; 7];
let _37: Adt63;
let _38: Adt49;
let _39: Adt54;
let _40: [u64; 4];
let _41: Adt58;
let _42: ([i64; 5],);
let _43: (i16,);
let _44: bool;
let _45: ();
let _46: ();
{
RET = 429614900_u32 as isize;
_1 = [5_usize,1380623962679434083_usize,4_usize,6067871409925486736_usize,3_usize];
RET = 9223372036854775807_isize;
_3 = _4;
_1 = [9323082584633901123_usize,0_usize,7_usize,1323061973717409809_usize,17069498106604090700_usize];
_3 = [4177284259606237673_i64,(-7412906803567231237_i64),(-8245668069616434872_i64),1088570534087975094_i64,3125167479074540902_i64];
_5 = '\u{169bd}';
_4 = [5919206760812877767_i64,(-3357157652384264955_i64),6615223554172589447_i64,(-2250442573886722554_i64),(-8402289150055517704_i64)];
RET = !(-9223372036854775808_isize);
RET = (-103_isize);
_4 = [(-692521909178050592_i64),(-1201351311646643502_i64),7008638071429225421_i64,435695888511578403_i64,(-4488354930615693218_i64)];
_2 = [4725577597384695991_i64,(-856300649807903652_i64),9106731452122917445_i64,(-1772614871774618819_i64),8583338533221758003_i64];
_4 = [7189268363245451198_i64,6901745803403786933_i64,(-1064865798844892723_i64),(-4715930734068005134_i64),(-1552690537777760470_i64)];
RET = -(-9223372036854775808_isize);
_5 = '\u{69b93}';
_5 = '\u{55479}';
_4 = [(-5386995944017774485_i64),(-5975872832149993131_i64),(-3682998465211509065_i64),(-6770246762580665833_i64),(-5300931370165828573_i64)];
_4 = _3;
_2 = [1747604386290760691_i64,(-5738484691383360933_i64),517247040718162238_i64,6792373683000928095_i64,(-8824591611680764043_i64)];
RET = 9223372036854775807_isize;
_2 = _4;
RET = 149511206564949535836274782709880794791_u128 as isize;
_4 = _3;
_5 = '\u{78fce}';
_4 = [(-498712932534120870_i64),(-1986765984051877367_i64),(-9198389332315218859_i64),4381361818181043972_i64,7336933912119245585_i64];
_5 = '\u{c54d0}';
_6 = [true,false,false,false,false];
_2 = [(-8142389481246432741_i64),(-6215131380890347705_i64),(-3522415822666094696_i64),3551350161713811988_i64,(-1589292111481601035_i64)];
_3 = [6979978694202492782_i64,(-6035922870461090694_i64),(-963795380636248772_i64),7321922026857292611_i64,46197146052954430_i64];
Goto(bb1)
}
bb1 = {
_3 = [3940377042363172419_i64,(-1819063837026450250_i64),(-6817637326262612765_i64),(-2587874562136985601_i64),(-1582282597784042797_i64)];
RET = 9223372036854775807_isize;
_7 = 1286146957_i32 as f64;
_7 = 122_u8 as f64;
RET = (-126_isize) & (-8_isize);
_3 = [(-8271771344806168106_i64),1535028660971724080_i64,(-4808487693241991843_i64),(-3256191836376252445_i64),(-8548415638811195964_i64)];
_7 = 30574_u16 as f64;
_8 = !RET;
RET = (-1917797591_i32) as isize;
Goto(bb2)
}
bb2 = {
RET = _8 << _8;
_9 = ((-2838_i16),);
_2 = [(-5557042863374115610_i64),(-8156487621834462687_i64),7064429477032311063_i64,7985130282822058902_i64,(-6900100148770328987_i64)];
_2 = [3217340499679856316_i64,6331819210937095485_i64,2718906010388882621_i64,1967025902755647844_i64,8369078988971358005_i64];
_10 = [true,true,true,false,true];
_3 = _2;
_1 = [7575424329416947468_usize,1_usize,37264523241055435_usize,3_usize,0_usize];
RET = 6686624442132280438_i64 as isize;
_13 = [17774199475927861144_usize,9720700666903150965_usize,9105006367258082298_usize,11230788389819183190_usize,16792111801645874972_usize];
_5 = '\u{94352}';
RET = 68200199932385014982893986003244459169_i128 as isize;
_12 = [(-1505809487651223866_i64),(-1525342293832590928_i64),(-1582211007966816743_i64),2499895921285110296_i64,(-7892607843089628048_i64)];
_7 = 1881675934740980166_usize as f64;
_2 = [(-3960615171880152160_i64),(-7395935082922625225_i64),8578350043877262205_i64,(-8997822128673535572_i64),2288258527283939026_i64];
_5 = '\u{8e425}';
_12 = [(-6004337546756297507_i64),(-3603652559836375371_i64),1256965570838518030_i64,(-1201085849382315879_i64),(-7006474855545477661_i64)];
_4 = [5303779095402906646_i64,8780677343800248738_i64,(-1519865575289871594_i64),(-3662353883616351101_i64),7443142757983191812_i64];
_14 = false;
_4 = [9139459500270571455_i64,(-4450141165267112899_i64),(-9046712329868779345_i64),4619719495337623745_i64,(-162075542496870243_i64)];
_6 = _10;
_8 = RET * RET;
match _9.0 {
0 => bb3,
1 => bb4,
340282366920938463463374607431768208618 => bb6,
_ => bb5
}
}
bb3 = {
_3 = [3940377042363172419_i64,(-1819063837026450250_i64),(-6817637326262612765_i64),(-2587874562136985601_i64),(-1582282597784042797_i64)];
RET = 9223372036854775807_isize;
_7 = 1286146957_i32 as f64;
_7 = 122_u8 as f64;
RET = (-126_isize) & (-8_isize);
_3 = [(-8271771344806168106_i64),1535028660971724080_i64,(-4808487693241991843_i64),(-3256191836376252445_i64),(-8548415638811195964_i64)];
_7 = 30574_u16 as f64;
_8 = !RET;
RET = (-1917797591_i32) as isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_12 = _3;
_4 = _3;
_16.0 = [(-4296674542446542369_i64),(-3484291367866893952_i64),3166996365489741072_i64,5995137206509336233_i64,8426151420886772760_i64];
_10 = _6;
_17 = -_8;
_2 = [(-5772784487670020181_i64),3942355875870010667_i64,(-2665277896893306367_i64),587946859451829281_i64,(-6605467341633802982_i64)];
match _9.0 {
0 => bb3,
1 => bb7,
2 => bb8,
3 => bb9,
340282366920938463463374607431768208618 => bb11,
_ => bb10
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = [3940377042363172419_i64,(-1819063837026450250_i64),(-6817637326262612765_i64),(-2587874562136985601_i64),(-1582282597784042797_i64)];
RET = 9223372036854775807_isize;
_7 = 1286146957_i32 as f64;
_7 = 122_u8 as f64;
RET = (-126_isize) & (-8_isize);
_3 = [(-8271771344806168106_i64),1535028660971724080_i64,(-4808487693241991843_i64),(-3256191836376252445_i64),(-8548415638811195964_i64)];
_7 = 30574_u16 as f64;
_8 = !RET;
RET = (-1917797591_i32) as isize;
Goto(bb2)
}
bb10 = {
RET = _8 << _8;
_9 = ((-2838_i16),);
_2 = [(-5557042863374115610_i64),(-8156487621834462687_i64),7064429477032311063_i64,7985130282822058902_i64,(-6900100148770328987_i64)];
_2 = [3217340499679856316_i64,6331819210937095485_i64,2718906010388882621_i64,1967025902755647844_i64,8369078988971358005_i64];
_10 = [true,true,true,false,true];
_3 = _2;
_1 = [7575424329416947468_usize,1_usize,37264523241055435_usize,3_usize,0_usize];
RET = 6686624442132280438_i64 as isize;
_13 = [17774199475927861144_usize,9720700666903150965_usize,9105006367258082298_usize,11230788389819183190_usize,16792111801645874972_usize];
_5 = '\u{94352}';
RET = 68200199932385014982893986003244459169_i128 as isize;
_12 = [(-1505809487651223866_i64),(-1525342293832590928_i64),(-1582211007966816743_i64),2499895921285110296_i64,(-7892607843089628048_i64)];
_7 = 1881675934740980166_usize as f64;
_2 = [(-3960615171880152160_i64),(-7395935082922625225_i64),8578350043877262205_i64,(-8997822128673535572_i64),2288258527283939026_i64];
_5 = '\u{8e425}';
_12 = [(-6004337546756297507_i64),(-3603652559836375371_i64),1256965570838518030_i64,(-1201085849382315879_i64),(-7006474855545477661_i64)];
_4 = [5303779095402906646_i64,8780677343800248738_i64,(-1519865575289871594_i64),(-3662353883616351101_i64),7443142757983191812_i64];
_14 = false;
_4 = [9139459500270571455_i64,(-4450141165267112899_i64),(-9046712329868779345_i64),4619719495337623745_i64,(-162075542496870243_i64)];
_6 = _10;
_8 = RET * RET;
match _9.0 {
0 => bb3,
1 => bb4,
340282366920938463463374607431768208618 => bb6,
_ => bb5
}
}
bb11 = {
_7 = 89462003987581827850611993319856764303_u128 as f64;
_16.0 = [1848716498142419666_i64,(-6813054028471953119_i64),(-1485249629399112471_i64),(-3986463378794299381_i64),(-1340158127709346415_i64)];
RET = _8;
_7 = 190811194274955735602776149536915597446_u128 as f64;
_3 = [(-1472519895621457076_i64),(-908405599386717105_i64),4641655663614958519_i64,4619392164118984004_i64,4738786287977585662_i64];
_21.0 = _8;
_23 = (0_usize,);
_18 = (_3,);
_24 = _14 | _14;
_16.0 = [2707279807176541889_i64,6521293678599565660_i64,5422132346441699159_i64,(-5308167952967014235_i64),(-5257252669123590082_i64)];
RET = 778017602_u32 as isize;
_20 = _17 <= _21.0;
_2 = _4;
_27 = (1923562976_u32, _9.0, _17);
_28 = Adt54::Variant2 { fld0: 231_u8,fld1: _16 };
_23.0 = 1123221131836841434_usize;
Goto(bb12)
}
bb12 = {
_3 = [7595636218295363886_i64,5032710495921019186_i64,2442280530359222811_i64,(-4804915595950092497_i64),(-868434287892685295_i64)];
Call(_29 = core::intrinsics::bswap(RET), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13 = _1;
_31 = [202_u8];
_28 = Adt54::Variant2 { fld0: 90_u8,fld1: _18 };
_4 = [108465638055795703_i64,(-3025238331467294007_i64),(-2522285451685609808_i64),(-53088606518156006_i64),(-5504796825681788638_i64)];
_22 = Adt51::Variant2 { fld0: _9,fld1: _27 };
_27.0 = Field::<(u32, i16, isize)>(Variant(_22, 2), 1).0;
_27.2 = RET;
_32 = Field::<(u32, i16, isize)>(Variant(_22, 2), 1).2 >> Field::<(u32, i16, isize)>(Variant(_22, 2), 1).0;
_24 = _20 & _20;
_16 = Field::<([i64; 5],)>(Variant(_28, 2), 1);
SetDiscriminant(_22, 0);
place!(Field::<(u32, i16, isize)>(Variant(_22, 0), 0)).1 = _9.0;
Call(_26.0 = fn9(_4, _18.0, _10, _12, RET, _9.0, Field::<([i64; 5],)>(Variant(_28, 2), 1).0, _32), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23.0 = 3_usize;
place!(Field::<u8>(Variant(_28, 2), 0)) = 111_u8;
_7 = 35_i8 as f64;
_33 = (_23.0,);
_28 = Adt54::Variant2 { fld0: 11_u8,fld1: _16 };
place!(Field::<(u32, i16, isize)>(Variant(_22, 0), 0)).0 = _27.0;
place!(Field::<u8>(Variant(_28, 2), 0)) = 117_u8;
place!(Field::<(u32, i16, isize)>(Variant(_22, 0), 0)) = (_27.0, _9.0, _32);
_25 = (-8247056469700632575_i64) & 1801888128120659728_i64;
SetDiscriminant(_28, 2);
_21.0 = (-102979150_i32) as isize;
_27.1 = -_9.0;
_40 = [_26.0,_26.0,_26.0,_26.0];
_3 = _12;
_9.0 = -_27.1;
RET = !_32;
_3 = _16.0;
_14 = _24;
place!(Field::<(u32, i16, isize)>(Variant(_22, 0), 0)).2 = 58577_u16 as isize;
_21.0 = 20_i8 as isize;
_27.0 = !Field::<(u32, i16, isize)>(Variant(_22, 0), 0).0;
place!(Field::<u8>(Variant(_28, 2), 0)) = 97_u8 << RET;
place!(Field::<([i64; 5],)>(Variant(_28, 2), 1)).0 = [_25,_25,_25,_25,_25];
_6 = [_20,_14,_14,_14,_24];
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(8_usize, 14_usize, Move(_14), 18_usize, Move(_18), 6_usize, Move(_6), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(8_usize, 16_usize, Move(_16), 23_usize, Move(_23), 10_usize, Move(_10), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(8_usize, 3_usize, Move(_3), 9_usize, Move(_9), 26_usize, Move(_26), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(8_usize, 1_usize, Move(_1), 46_usize, _46, 46_usize, _46, 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [i64; 5],mut _2: [i64; 5],mut _3: [bool; 5],mut _4: [i64; 5],mut _5: isize,mut _6: i16,mut _7: [i64; 5],mut _8: isize) -> u64 {
mir! {
type RET = u64;
let _9: u8;
let _10: i128;
let _11: isize;
let _12: [i32; 7];
let _13: Adt50;
let _14: isize;
let _15: (u32, *const [usize; 5], char, char, u64, [bool; 5]);
let _16: ();
let _17: ();
{
_6 = 4351_i16 + (-1573_i16);
_3 = [true,true,true,true,false];
_4 = [1534731747766179975_i64,(-1425647586785591594_i64),4025994189710726684_i64,3802645119380877122_i64,1891271320735349341_i64];
RET = 6632377830945278407_u64;
_5 = 13_i8 as isize;
_3 = [true,false,true,false,true];
RET = 17326409374217108622_u64;
Goto(bb1)
}
bb1 = {
_1 = _7;
_8 = !_5;
RET = 7846399249763660010_u64 ^ 3492895294843071376_u64;
_3 = [false,true,false,false,false];
_8 = _5;
_6 = 53394_u16 as i16;
_2 = [(-4277568016553050788_i64),5270378100431621130_i64,(-419723792007419351_i64),4611929462968948136_i64,(-4725758194975239901_i64)];
_7 = _4;
_2 = _1;
_2 = [(-5857417519538007315_i64),(-8018543154028695948_i64),8935991704517644520_i64,(-8798112737356975430_i64),2606963971124462667_i64];
_9 = !74_u8;
Goto(bb2)
}
bb2 = {
RET = !13956846145711086456_u64;
_7 = [(-2319076533614203967_i64),(-6157899489959359826_i64),5033276841968542552_i64,(-327793362596119774_i64),(-7427913512032121536_i64)];
RET = 13205790723479394014515871735249011325_u128 as u64;
RET = 11113341095854553093_u64;
_6 = 3538993162_u32 as i16;
_4 = _1;
_8 = _5 >> RET;
_8 = (-87004998654684493347095369154273666164_i128) as isize;
_1 = _4;
_1 = _2;
_3 = [false,true,false,true,true];
_1 = [(-343113765704981503_i64),3090421215229567503_i64,7468228158569862405_i64,(-2078021553722086915_i64),6877487692511328498_i64];
_7 = _4;
_11 = -_5;
_11 = _8 + _5;
_1 = _7;
_4 = [(-340992482624409174_i64),1703333359839420019_i64,4352414932544208794_i64,603342642030161244_i64,2498706789271355651_i64];
_6 = -21592_i16;
Call(RET = fn10(_2, _3, _11, _7, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8 = !_11;
_9 = 68_u8;
_15.2 = '\u{d1220}';
Goto(bb4)
}
bb4 = {
Call(_16 = dump_var(9_usize, 5_usize, Move(_5), 1_usize, Move(_1), 2_usize, Move(_2), 4_usize, Move(_4)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_16 = dump_var(9_usize, 3_usize, Move(_3), 17_usize, _17, 17_usize, _17, 17_usize, _17), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [i64; 5],mut _2: [bool; 5],mut _3: isize,mut _4: [i64; 5],mut _5: isize) -> u64 {
mir! {
type RET = u64;
let _6: isize;
let _7: usize;
let _8: *const u128;
let _9: u16;
let _10: char;
let _11: i64;
let _12: isize;
let _13: i16;
let _14: (u32, i16, isize);
let _15: bool;
let _16: f32;
let _17: isize;
let _18: Adt63;
let _19: i8;
let _20: Adt58;
let _21: [i32; 7];
let _22: Adt52;
let _23: u16;
let _24: u8;
let _25: [u8; 7];
let _26: [u8; 1];
let _27: [bool; 5];
let _28: usize;
let _29: i64;
let _30: usize;
let _31: ();
let _32: ();
{
_3 = 3628070660_u32 as isize;
_3 = !_5;
_7 = 2_usize;
_2 = [true,false,true,true,true];
_2 = [false,true,true,true,true];
RET = 2199943070810307_u64 - 17692201647767360887_u64;
_6 = _5;
RET = 7274010950379550391_u64 - 4206632159027850900_u64;
_1[_7] = _4[_7] ^ _4[_7];
Call(_7 = core::intrinsics::bswap(16927963500282441435_usize), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = 62960_u16 as isize;
_4 = _1;
_4 = [(-91261993046060175_i64),(-1641044465306450744_i64),6238812814582778461_i64,3904857825834237921_i64,6424384725052407604_i64];
_4 = [(-179947520622101238_i64),90475228968195133_i64,(-594205369893245653_i64),(-4314034736432731929_i64),2248399668379754160_i64];
_7 = (-34145291530110137518254396051396389622_i128) as usize;
_2 = [true,false,false,true,false];
_4 = _1;
_5 = _6 ^ _3;
_3 = _5 + _5;
_2 = [false,false,true,true,false];
RET = (-121445243987647978841425128570193045700_i128) as u64;
_3 = 41909_u16 as isize;
RET = !6700019594233574838_u64;
_4 = _1;
_4 = _1;
_3 = !_6;
_1 = [2145719562712898372_i64,3669937449560423370_i64,5873516871750185887_i64,5444637315297968246_i64,(-625701011829378221_i64)];
_6 = _3;
_2 = [false,false,false,false,true];
_6 = !_3;
_4 = [(-3932024695733602337_i64),6876497149062956637_i64,5107222417111380720_i64,(-7786083852882762019_i64),6130095614934809188_i64];
_2 = [true,false,true,false,true];
_6 = 23706_u16 as isize;
RET = 8946443793161238159_u64;
_5 = _3;
_5 = _3 >> RET;
_9 = 5064_u16;
_1 = _4;
match _9 {
0 => bb2,
1 => bb3,
5064 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1 = [(-3761625276673967363_i64),(-8657222103721726980_i64),(-3408566367216482005_i64),(-8911936381992897484_i64),1095589782316227670_i64];
_3 = -_5;
Goto(bb6)
}
bb6 = {
_7 = !4_usize;
RET = 254132647095122370999121857819618833069_u128 as u64;
_11 = -(-8316992123550801784_i64);
_10 = '\u{4c74a}';
_7 = RET as usize;
_9 = !10437_u16;
_6 = -_5;
_7 = !7_usize;
_10 = '\u{e9ca7}';
_12 = _3;
_10 = '\u{e7ec2}';
_9 = _10 as u16;
Goto(bb7)
}
bb7 = {
RET = !10203573967471229512_u64;
_7 = !5_usize;
RET = !8735579699058415911_u64;
_5 = _6 - _12;
_5 = _3;
_1 = [_11,_11,_11,_11,_11];
_14.2 = -_6;
RET = !1156701578085170116_u64;
_14 = (920350117_u32, 19473_i16, _5);
_3 = 214_u8 as isize;
_15 = true;
_6 = _14.2 >> _7;
_6 = _5 | _3;
_7 = !5_usize;
_14.1 = _14.2 as i16;
Call(_13 = fn11(_4, _6, _14.2, _4, _14.1, _14, _6, _14, _4, _14.0, _11, _2, _9, _12), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_14 = (960775078_u32, _13, _5);
RET = 285088045980997756_u64 + 7729798252555524446_u64;
_11 = 74_u8 as i64;
_6 = -_5;
RET = 16446209342682657084_u64 | 14659670672808316404_u64;
_14.2 = _6;
_2 = [_15,_15,_15,_15,_15];
_3 = _14.2 << _14.0;
_13 = _7 as i16;
RET = 17614538493730395471_u64 ^ 15428137680426111371_u64;
_12 = -_3;
_16 = _5 as f32;
_12 = -_3;
_13 = 600787089_i32 as i16;
_14 = (520847607_u32, _13, _12);
_6 = _12;
_7 = RET as usize;
_4 = [_11,_11,_11,_11,_11];
_14.2 = _6 | _12;
_14.1 = _13;
_10 = '\u{b8f58}';
RET = _7 as u64;
_4 = [_11,_11,_11,_11,_11];
_15 = true & false;
_14.0 = 829989091_u32;
Call(_9 = fn15(_3, _16, _14.2, _12, _11, _6, _6, _3, _16, _14.2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_2 = [_15,_15,_15,_15,_15];
_14.0 = _7 as u32;
RET = 10488098129118183763_u64 - 10782510894326352353_u64;
_17 = -_14.2;
_15 = false & true;
RET = !17706992339655559448_u64;
_14.2 = !_17;
_4 = [_11,_11,_11,_11,_11];
_21 = [(-995199391_i32),(-1814403705_i32),(-171299032_i32),(-1415294446_i32),389305590_i32,85245360_i32,1112463067_i32];
_4 = [_11,_11,_11,_11,_11];
_15 = _14.2 == _6;
_1 = [_11,_11,_11,_11,_11];
_14.1 = !_13;
Call(_19 = core::intrinsics::bswap(104_i8), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_9 = !63893_u16;
_1 = [_11,_11,_11,_11,_11];
_21 = [(-560906033_i32),1198490549_i32,(-554709302_i32),248008620_i32,2100323024_i32,(-1979151982_i32),(-1017347817_i32)];
RET = 18407480409263575676_u64;
_14.0 = !3517253531_u32;
_17 = !_12;
_5 = _3 << _6;
_5 = _6 ^ _17;
_11 = _9 as i64;
_14.2 = _17 + _5;
_4 = [_11,_11,_11,_11,_11];
_24 = 109_u8;
match _24 {
109 => bb11,
_ => bb1
}
}
bb11 = {
_21 = [1889827106_i32,1723808222_i32,(-2003763306_i32),(-1527058295_i32),(-30328391_i32),995301326_i32,14541753_i32];
_1 = _4;
_1 = [_11,_11,_11,_11,_11];
_1 = _4;
_9 = _5 as u16;
_7 = _11 as usize;
_15 = !false;
_27 = _2;
_2 = [_15,_15,_15,_15,_15];
_15 = _3 < _14.2;
_27 = [_15,_15,_15,_15,_15];
_13 = _12 as i16;
_26 = [_24];
_14.0 = _17 as u32;
_21 = [841389993_i32,1497672757_i32,(-1013313697_i32),(-641745764_i32),1212683450_i32,514146143_i32,43565577_i32];
_14.0 = 1477394553_u32 * 537501787_u32;
_12 = RET as isize;
_3 = !_14.2;
_13 = _14.0 as i16;
_1 = _4;
Goto(bb12)
}
bb12 = {
_9 = 53622_u16 + 5268_u16;
_9 = 81714114645112021284028726709429584512_i128 as u16;
_12 = _14.2;
_11 = !2614933482809124926_i64;
_15 = !true;
_2 = [_15,_15,_15,_15,_15];
_25 = [_24,_24,_24,_24,_24,_24,_24];
_2 = _27;
_3 = _14.2;
_25 = [_24,_24,_24,_24,_24,_24,_24];
_14.0 = _11 as u32;
_16 = _7 as f32;
_1 = [_11,_11,_11,_11,_11];
_28 = _7;
_16 = (-128_i8) as f32;
RET = _12 as u64;
_16 = 73_i8 as f32;
_11 = (-4642199143470473376_i64) << _3;
_29 = !_11;
_14.1 = RET as i16;
_4 = _1;
_26 = [_24];
_21 = [(-885995414_i32),866963730_i32,1368719212_i32,627241058_i32,242879670_i32,1375968415_i32,(-1734910118_i32)];
_21 = [(-658067485_i32),1768799183_i32,1179443227_i32,(-1899067697_i32),(-883349457_i32),(-1077914740_i32),(-944620650_i32)];
_14.1 = _13 ^ _13;
_24 = !123_u8;
Goto(bb13)
}
bb13 = {
Call(_31 = dump_var(10_usize, 11_usize, Move(_11), 10_usize, Move(_10), 27_usize, Move(_27), 15_usize, Move(_15)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_31 = dump_var(10_usize, 6_usize, Move(_6), 29_usize, Move(_29), 7_usize, Move(_7), 21_usize, Move(_21)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_31 = dump_var(10_usize, 3_usize, Move(_3), 26_usize, Move(_26), 24_usize, Move(_24), 32_usize, _32), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [i64; 5],mut _2: isize,mut _3: isize,mut _4: [i64; 5],mut _5: i16,mut _6: (u32, i16, isize),mut _7: isize,mut _8: (u32, i16, isize),mut _9: [i64; 5],mut _10: u32,mut _11: i64,mut _12: [bool; 5],mut _13: u16,mut _14: isize) -> i16 {
mir! {
type RET = i16;
let _15: ([i64; 5],);
let _16: f32;
let _17: Adt54;
let _18: isize;
let _19: f32;
let _20: ([i64; 5], *mut isize, usize);
let _21: (u32, i16, isize);
let _22: isize;
let _23: [i64; 5];
let _24: [i32; 1];
let _25: Adt65;
let _26: f64;
let _27: u128;
let _28: (usize,);
let _29: ([i64; 5], *mut isize, usize);
let _30: isize;
let _31: f64;
let _32: ([i64; 5],);
let _33: i64;
let _34: isize;
let _35: (u32, i16, isize);
let _36: bool;
let _37: f64;
let _38: [bool; 6];
let _39: [bool; 5];
let _40: char;
let _41: ();
let _42: ();
{
_8.2 = _2 | _14;
_6.0 = _10 * _10;
RET = _6.1;
_6 = _8;
RET = 7934419936193783791_u64 as i16;
_6 = (_8.0, _8.1, _3);
_11 = -2613919815085825494_i64;
_10 = !_8.0;
_14 = !_3;
RET = -_6.1;
_15 = (_9,);
_7 = _14;
_5 = _8.1;
RET = !_6.1;
_6.2 = _2;
RET = _13 as i16;
_1 = [_11,_11,_11,_11,_11];
_4 = [_11,_11,_11,_11,_11];
Call(_4 = fn12(_15, _9, _2, _8, _6, _8.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = (_10, _5, _8.2);
_9 = _15.0;
_13 = 28429_u16 | 14078_u16;
_9 = _15.0;
_9 = _4;
_2 = -_6.2;
_3 = 41_u8 as isize;
_15.0 = _9;
_6.1 = _5 * _8.1;
_15.0 = [_11,_11,_11,_11,_11];
_5 = _2 as i16;
_3 = _8.2;
_9 = _15.0;
_17 = Adt54::Variant2 { fld0: 31_u8,fld1: _15 };
_16 = 135_u8 as f32;
_6 = (_8.0, _5, _7);
_13 = 34092_u16 - 56474_u16;
place!(Field::<([i64; 5],)>(Variant(_17, 2), 1)) = _15;
_8.2 = _2;
_17 = Adt54::Variant2 { fld0: 94_u8,fld1: _15 };
_10 = _8.0 << _3;
_8 = (_10, _5, _6.2);
_11 = _16 as i64;
match _6.0 {
0 => bb2,
1 => bb3,
920350117 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_12 = [true,true,true,false,false];
_6 = _8;
_3 = _6.2 << _6.1;
_5 = !_8.1;
_16 = 1444722950683526435_usize as f32;
place!(Field::<([i64; 5],)>(Variant(_17, 2), 1)) = (_4,);
Goto(bb6)
}
bb6 = {
_6.0 = !_10;
_6.0 = _8.0 + _8.0;
_12 = [true,false,false,false,true];
_12 = [true,false,true,false,false];
_3 = _2 | _2;
_16 = 5913300170542459861_u64 as f32;
place!(Field::<u8>(Variant(_17, 2), 0)) = 158_u8;
_18 = _14 - _2;
_7 = 1208168537_i32 as isize;
_8.1 = _5 << _3;
_1 = _4;
_6.0 = 7889021625229841816_u64 as u32;
_3 = !_14;
_14 = _18 ^ _3;
_8.1 = _6.1;
_18 = !_8.2;
_15.0 = [_11,_11,_11,_11,_11];
match Field::<u8>(Variant(_17, 2), 0) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
158 => bb7,
_ => bb5
}
}
bb7 = {
RET = -_8.1;
_4 = _1;
_20.2 = Field::<u8>(Variant(_17, 2), 0) as usize;
_15 = Field::<([i64; 5],)>(Variant(_17, 2), 1);
_20.1 = core::ptr::addr_of_mut!(_6.2);
place!(Field::<u8>(Variant(_17, 2), 0)) = 213_u8 - 243_u8;
_16 = _8.1 as f32;
_6.0 = _10;
_14 = 10189672101173988179_u64 as isize;
place!(Field::<([i64; 5],)>(Variant(_17, 2), 1)).0 = [_11,_11,_11,_11,_11];
RET = -_5;
_4 = [_11,_11,_11,_11,_11];
_8 = (_10, RET, _2);
SetDiscriminant(_17, 1);
Goto(bb8)
}
bb8 = {
_18 = _2;
_8.1 = true as i16;
_22 = (-947402717_i32) as isize;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0)) = (_15.0, _20.1, _20.2);
_19 = -_16;
_21.0 = _8.0 | _8.0;
_11 = (-1078945920295021630_i64);
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0)).2 = _20.2;
_6.0 = _8.1 as u32;
_10 = _8.0 << _13;
_13 = !62396_u16;
_22 = _8.2;
_16 = _19;
_5 = _11 as i16;
_7 = _8.2 * _18;
_20 = (_15.0, Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0).1, Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0).2);
_7 = _3 ^ _3;
_23 = [_11,_11,_11,_11,_11];
_9 = [_11,_11,_11,_11,_11];
_21.2 = _2 - _22;
_5 = !RET;
_27 = (-101_i8) as u128;
_21.1 = _6.1 ^ _5;
_3 = _2;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb6,
6 => bb9,
340282366920938463462295661511473189826 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
_6.0 = !_10;
_6.0 = _8.0 + _8.0;
_12 = [true,false,false,false,true];
_12 = [true,false,true,false,false];
_3 = _2 | _2;
_16 = 5913300170542459861_u64 as f32;
place!(Field::<u8>(Variant(_17, 2), 0)) = 158_u8;
_18 = _14 - _2;
_7 = 1208168537_i32 as isize;
_8.1 = _5 << _3;
_1 = _4;
_6.0 = 7889021625229841816_u64 as u32;
_3 = !_14;
_14 = _18 ^ _3;
_8.1 = _6.1;
_18 = !_8.2;
_15.0 = [_11,_11,_11,_11,_11];
match Field::<u8>(Variant(_17, 2), 0) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
158 => bb7,
_ => bb5
}
}
bb11 = {
_17 = Adt54::Variant2 { fld0: 201_u8,fld1: _15 };
_8.1 = -RET;
_8.2 = _21.2;
_6.2 = _3;
_21.1 = _11 as i16;
place!(Field::<([i64; 5],)>(Variant(_17, 2), 1)) = (_15.0,);
_6.2 = -_18;
_6.0 = _21.0;
_15 = (_1,);
_22 = !_21.2;
_22 = _21.2 & _8.2;
_6.1 = RET + _8.1;
_5 = !_6.1;
_20.0 = [_11,_11,_11,_11,_11];
_32 = (_1,);
_26 = 2_i8 as f64;
_6.2 = _8.2 >> _2;
Call(_28.0 = fn13(_18, _8, _21.2, _21.0, _6, _6.2, _8.2, _21.0, _20, _20), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20.2 = 1016240739810716673_u64 as usize;
_13 = 29455_u16 - 22728_u16;
_24 = [(-1432720153_i32)];
_21.0 = _10;
_29 = (_20.0, _20.1, _28.0);
_27 = !146438117879848712810922174275326417244_u128;
_8 = (_21.0, _6.1, _22);
RET = _8.1 * _5;
_15.0 = [_11,_11,_11,_11,_11];
_9 = [_11,_11,_11,_11,_11];
_8.0 = _6.0;
_8.1 = RET;
_14 = _22;
_24 = [827860918_i32];
_8.2 = _6.2;
_21.1 = _11 as i16;
_13 = 45873_u16;
RET = _27 as i16;
_18 = -_8.2;
_21.2 = _7 - _14;
_30 = _3 | _14;
_20.0 = _29.0;
match _11 {
0 => bb11,
1 => bb3,
2 => bb13,
3 => bb14,
340282366920938463462295661511473189826 => bb16,
_ => bb15
}
}
bb13 = {
Return()
}
bb14 = {
_6.0 = !_10;
_6.0 = _8.0 + _8.0;
_12 = [true,false,false,false,true];
_12 = [true,false,true,false,false];
_3 = _2 | _2;
_16 = 5913300170542459861_u64 as f32;
place!(Field::<u8>(Variant(_17, 2), 0)) = 158_u8;
_18 = _14 - _2;
_7 = 1208168537_i32 as isize;
_8.1 = _5 << _3;
_1 = _4;
_6.0 = 7889021625229841816_u64 as u32;
_3 = !_14;
_14 = _18 ^ _3;
_8.1 = _6.1;
_18 = !_8.2;
_15.0 = [_11,_11,_11,_11,_11];
match Field::<u8>(Variant(_17, 2), 0) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
158 => bb7,
_ => bb5
}
}
bb15 = {
_18 = _2;
_8.1 = true as i16;
_22 = (-947402717_i32) as isize;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0)) = (_15.0, _20.1, _20.2);
_19 = -_16;
_21.0 = _8.0 | _8.0;
_11 = (-1078945920295021630_i64);
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0)).2 = _20.2;
_6.0 = _8.1 as u32;
_10 = _8.0 << _13;
_13 = !62396_u16;
_22 = _8.2;
_16 = _19;
_5 = _11 as i16;
_7 = _8.2 * _18;
_20 = (_15.0, Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0).1, Field::<([i64; 5], *mut isize, usize)>(Variant(_17, 1), 0).2);
_7 = _3 ^ _3;
_23 = [_11,_11,_11,_11,_11];
_9 = [_11,_11,_11,_11,_11];
_21.2 = _2 - _22;
_5 = !RET;
_27 = (-101_i8) as u128;
_21.1 = _6.1 ^ _5;
_3 = _2;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb6,
6 => bb9,
340282366920938463462295661511473189826 => bb11,
_ => bb10
}
}
bb16 = {
_6.0 = !_8.0;
place!(Field::<([i64; 5],)>(Variant(_17, 2), 1)).0 = [_11,_11,_11,_11,_11];
Goto(bb17)
}
bb17 = {
Call(_41 = dump_var(11_usize, 8_usize, Move(_8), 3_usize, Move(_3), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(11_usize, 28_usize, Move(_28), 9_usize, Move(_9), 32_usize, Move(_32), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(11_usize, 30_usize, Move(_30), 15_usize, Move(_15), 12_usize, Move(_12), 27_usize, Move(_27)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: ([i64; 5],),mut _2: [i64; 5],mut _3: isize,mut _4: (u32, i16, isize),mut _5: (u32, i16, isize),mut _6: i16) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _7: (i8,);
let _8: [i32; 7];
let _9: char;
let _10: Adt61;
let _11: [bool; 5];
let _12: *mut [usize; 5];
let _13: isize;
let _14: Adt62;
let _15: *mut [usize; 5];
let _16: [bool; 6];
let _17: ();
let _18: ();
{
_3 = _5.2 >> _4.2;
_4.0 = _5.0;
_6 = _4.1 << _3;
_7.0 = (-23_i8) >> _3;
RET = [(-8484428269681680029_i64),3000652637184220279_i64,5727151346079066667_i64,(-6100255731697848721_i64),5246619663560517910_i64];
_4.2 = 8089270488639022454_i64 as isize;
_1.0 = [(-328451712218882376_i64),(-8225029896792708378_i64),(-5242064744926034183_i64),4773763226803293449_i64,7663471304608571904_i64];
_5.1 = -_6;
_7.0 = 5253294283581114004_u64 as i8;
_1.0 = RET;
_2 = [8156813400488548833_i64,1776276532661772817_i64,(-7399532504518372951_i64),8712955184605016944_i64,7369618673034646534_i64];
_1.0 = RET;
_1.0 = _2;
_5.2 = -_3;
_4 = (_5.0, _5.1, _5.2);
_7 = ((-70_i8),);
_7.0 = 53_i8;
_4 = _5;
_5.0 = _4.1 as u32;
_7 = ((-24_i8),);
_5.1 = '\u{5f498}' as i16;
_9 = '\u{9e8f4}';
_8 = [(-915453115_i32),528843891_i32,1228203308_i32,2043942771_i32,(-871816208_i32),290168732_i32,(-1262998498_i32)];
_4 = _5;
match _7.0 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463463374607431768211432 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_4.2 = !_3;
_3 = _4.2 << _4.0;
_1 = (RET,);
_8 = [132212732_i32,1843752935_i32,(-989141900_i32),(-1008051764_i32),(-867442112_i32),(-829238128_i32),(-1141715322_i32)];
_4.2 = _3;
_3 = _5.2;
_1 = (_2,);
RET = [8502123272881240732_i64,4500580376023693588_i64,(-379512390148924991_i64),(-6150665214859069742_i64),5953660676964437833_i64];
_11 = [true,true,false,true,false];
_5 = (_4.0, _6, _4.2);
_4 = _5;
_2 = [(-3084300417318340614_i64),(-6069091708127085873_i64),4159135299961871984_i64,7115173760238414709_i64,1962301023888062059_i64];
_1 = (RET,);
_8 = [402344107_i32,(-1287587606_i32),(-113791551_i32),399967037_i32,1838367499_i32,1677092836_i32,722444070_i32];
_1.0 = RET;
_4.1 = _6 << _5.1;
_1.0 = [(-762424746648475109_i64),(-7523905739100801156_i64),2883673381175337919_i64,(-5040797676642335169_i64),(-1220854302280460801_i64)];
RET = [6165647495350435471_i64,2192645814098673406_i64,5558707150280171956_i64,5588693609699344335_i64,6727611436038604492_i64];
match _7.0 {
0 => bb6,
1 => bb7,
340282366920938463463374607431768211432 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4.0 = !_5.0;
_1.0 = _2;
RET = _1.0;
_1 = (_2,);
_1 = (RET,);
_5.2 = _4.2;
_4.1 = _5.1 >> _4.2;
_11 = [true,false,true,false,true];
_5 = (_4.0, _4.1, _4.2);
_7.0 = -(-125_i8);
_8 = [(-2054819522_i32),1347410554_i32,(-302235930_i32),(-1703755540_i32),(-904601435_i32),(-961016724_i32),557947717_i32];
_1 = (RET,);
_1.0 = [(-487468394923460575_i64),2565021878853379185_i64,703371542541008691_i64,284748310749114691_i64,(-8162530390030198346_i64)];
_7.0 = 23_i8;
_11 = [false,true,true,false,false];
_3 = -_4.2;
_5 = (_4.0, _4.1, _3);
_5.2 = _4.2;
RET = [(-6594790004080332650_i64),6361090943595282416_i64,6435304934356326643_i64,(-3121429823289333036_i64),(-657903240361619607_i64)];
_11 = [true,true,true,false,false];
_5 = (_4.0, _4.1, _4.2);
_2 = [2140769931694854488_i64,(-3913478382520070745_i64),(-1281613502104736194_i64),320176593113207566_i64,(-2540630513346310871_i64)];
_8 = [1479711689_i32,1561533105_i32,(-2709520_i32),(-1687062969_i32),1376054461_i32,(-1448100362_i32),(-1567962515_i32)];
_4.0 = !_5.0;
_3 = _4.2;
RET = [4544611029998199691_i64,(-1875792100138588661_i64),(-2942044626409387266_i64),4963405622879405135_i64,(-4858897058723154745_i64)];
_5 = (_4.0, _6, _3);
_1.0 = [(-4771937349960240170_i64),(-2814190906597025945_i64),(-6712503141621013757_i64),7937027517991045012_i64,5744943099772021232_i64];
match _7.0 {
0 => bb8,
1 => bb10,
2 => bb11,
3 => bb12,
23 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_4.0 = !_5.0;
_4.2 = 3_u8 as isize;
_6 = !_4.1;
_4.2 = _3 >> _5.2;
RET = [(-4513808555961867099_i64),(-7866867958223182799_i64),6587433129561989904_i64,(-5801793798144412679_i64),(-5503614823535563778_i64)];
_14.fld1.0 = _4.1;
_5.1 = _4.1 * _6;
Goto(bb15)
}
bb15 = {
Call(_17 = dump_var(12_usize, 5_usize, Move(_5), 7_usize, Move(_7), 6_usize, Move(_6), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_17 = dump_var(12_usize, 11_usize, Move(_11), 18_usize, _18, 18_usize, _18, 18_usize, _18), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: isize,mut _2: (u32, i16, isize),mut _3: isize,mut _4: u32,mut _5: (u32, i16, isize),mut _6: isize,mut _7: isize,mut _8: u32,mut _9: ([i64; 5], *mut isize, usize),mut _10: ([i64; 5], *mut isize, usize)) -> usize {
mir! {
type RET = usize;
let _11: bool;
let _12: bool;
let _13: (u32, i16, isize);
let _14: ([i64; 5],);
let _15: *const i32;
let _16: (isize, u64);
let _17: isize;
let _18: f32;
let _19: Adt49;
let _20: char;
let _21: [i32; 1];
let _22: ();
let _23: ();
{
_5 = (_4, _2.1, _6);
RET = _9.2;
_11 = false;
_8 = _4;
_9.2 = 34_u8 as usize;
_7 = _1 * _3;
_5.0 = _2.0 * _8;
_13.0 = _2.1 as u32;
_5.0 = '\u{ded29}' as u32;
_13.2 = _3;
RET = !_9.2;
_10 = _9;
_5.0 = 84_i8 as u32;
_10.0 = _9.0;
_8 = !_4;
_12 = _6 <= _7;
_9.0 = _10.0;
_14 = (_9.0,);
_10.2 = !RET;
Goto(bb1)
}
bb1 = {
_7 = _6 & _6;
_4 = _8 + _2.0;
_14 = (_10.0,);
_13.0 = !_4;
_5.1 = _2.1;
_2 = _5;
_2.2 = _3 ^ _7;
_13.0 = 103440936939743339766489774753046931668_i128 as u32;
_13.1 = 173_u8 as i16;
_2 = (_8, _5.1, _13.2);
_10.2 = !RET;
RET = _9.2;
_1 = _6 - _6;
_7 = _5.2 | _5.2;
_9 = (_10.0, _10.1, RET);
_7 = _1;
_6 = -_7;
_14.0 = [(-4136498949595257237_i64),5180095273097026461_i64,7348427858297178007_i64,528296310640401386_i64,3295629253093697518_i64];
_9.0 = _10.0;
_2.0 = (-135413253_i32) as u32;
_8 = _12 as u32;
_16.0 = _7 * _3;
Call(_13.2 = fn14(_1, _9.0, _5.2, _6, _7, _16.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = 1756167202_i32 as usize;
Goto(bb3)
}
bb3 = {
_9.2 = _10.2 & RET;
_6 = _16.0;
_3 = _2.2 - _6;
_9 = (_14.0, _10.1, _10.2);
_4 = _8;
_5.0 = _8;
_14.0 = [5774514957457182285_i64,(-1851933813223500044_i64),9064190878309566482_i64,(-5070217392200313359_i64),(-692285077074727397_i64)];
Goto(bb4)
}
bb4 = {
RET = _9.2 + _9.2;
_9.2 = 89489432_i32 as usize;
_4 = _5.0;
_9.0 = _14.0;
_17 = -_6;
_10.2 = _12 as usize;
_14 = (_9.0,);
_20 = '\u{7e6d9}';
_16.1 = 182_u8 as u64;
_5.1 = _2.1;
_16 = (_3, 5604342853751915250_u64);
_5.2 = -_17;
_2.0 = _5.1 as u32;
_5.2 = -_6;
RET = _10.2;
Goto(bb5)
}
bb5 = {
Call(_22 = dump_var(13_usize, 3_usize, Move(_3), 7_usize, Move(_7), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_22 = dump_var(13_usize, 14_usize, Move(_14), 2_usize, Move(_2), 20_usize, Move(_20), 23_usize, _23), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: [i64; 5],mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize) -> isize {
mir! {
type RET = isize;
let _7: ();
let _8: ();
{
_2 = [4856086941456026263_i64,8154313871625988512_i64,(-7920763766305376014_i64),528055509903094971_i64,1881042773621312474_i64];
RET = -_1;
_3 = _6;
_6 = 1376565364_u32 as isize;
RET = _4;
Goto(bb1)
}
bb1 = {
Call(_7 = dump_var(14_usize, 3_usize, Move(_3), 1_usize, Move(_1), 4_usize, Move(_4), 8_usize, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: isize,mut _2: f32,mut _3: isize,mut _4: isize,mut _5: i64,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: f32,mut _10: isize) -> u16 {
mir! {
type RET = u16;
let _11: [i64; 5];
let _12: u64;
let _13: *const u128;
let _14: [u64; 4];
let _15: [u8; 7];
let _16: (isize, u64);
let _17: bool;
let _18: f32;
let _19: Adt53;
let _20: *const [usize; 5];
let _21: (u32, i16, isize);
let _22: ();
let _23: ();
{
_8 = _6;
_5 = 33_u8 as i64;
_3 = !_1;
_9 = -_2;
_10 = _9 as isize;
_11 = [_5,_5,_5,_5,_5];
_8 = -_1;
_11 = [_5,_5,_5,_5,_5];
_11 = [_5,_5,_5,_5,_5];
_2 = _9 * _9;
Call(RET = fn16(_6, _2, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = _3;
_8 = _4;
_7 = _8 - _3;
_4 = _1;
_14 = [8381619532655413586_u64,11205768500912979509_u64,1052108845733771627_u64,2722442393076049134_u64];
_2 = _9 * _9;
_5 = (-1133429160863558909_i64);
_9 = 0_usize as f32;
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463462241178270904652547 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_12 = !2148990007919244895_u64;
match _5 {
0 => bb7,
1 => bb6,
2 => bb5,
3 => bb11,
4 => bb12,
340282366920938463462241178270904652547 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_9 = -_2;
_7 = _1;
_15 = [203_u8,96_u8,88_u8,211_u8,146_u8,160_u8,192_u8];
_17 = _9 < _9;
_9 = _2;
_18 = _9 - _9;
RET = 42939_u16 | 38989_u16;
_7 = _8;
_16.1 = !_12;
_4 = !_8;
_17 = !false;
_16 = (_1, _12);
_1 = _8;
_5 = 1813497969158428868_i64;
_16.0 = -_1;
_21.2 = -_10;
_21 = (17912142_u32, 26657_i16, _16.0);
_9 = _18 * _18;
_16.1 = !_12;
_10 = _8 | _16.0;
_21.2 = _10 * _8;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(15_usize, 10_usize, Move(_10), 16_usize, Move(_16), 14_usize, Move(_14), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(15_usize, 7_usize, Move(_7), 12_usize, Move(_12), 17_usize, Move(_17), 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: isize,mut _2: f32,mut _3: isize) -> u16 {
mir! {
type RET = u16;
let _4: [i32; 1];
let _5: char;
let _6: u8;
let _7: [i32; 7];
let _8: isize;
let _9: isize;
let _10: i128;
let _11: char;
let _12: Adt57;
let _13: i32;
let _14: u16;
let _15: [i64; 5];
let _16: *const *const [usize; 5];
let _17: isize;
let _18: [u8; 7];
let _19: [i32; 1];
let _20: Adt63;
let _21: (isize, u64);
let _22: [u64; 4];
let _23: char;
let _24: *const i16;
let _25: u128;
let _26: Adt62;
let _27: (i8,);
let _28: [u8; 7];
let _29: ([i64; 5],);
let _30: [bool; 6];
let _31: f32;
let _32: isize;
let _33: char;
let _34: ();
let _35: ();
{
RET = 30993_u16 - 34275_u16;
RET = 76_i8 as u16;
_2 = 748562226_u32 as f32;
RET = (-95_i8) as u16;
_3 = 3961406933_u32 as isize;
RET = !51491_u16;
_5 = '\u{6d637}';
RET = 57757_u16 >> _1;
Call(_4 = core::intrinsics::transmute(_5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _3;
_2 = 23708907153571403502817954166763288348_i128 as f32;
_1 = _3 ^ _3;
Goto(bb2)
}
bb2 = {
_6 = 205_u8 * 187_u8;
_7 = [(-1515533719_i32),595373342_i32,(-844610234_i32),(-1687665972_i32),(-1391341994_i32),(-962049205_i32),1689576546_i32];
_10 = RET as i128;
RET = 20871_u16 << _1;
_8 = -_1;
_1 = -_3;
_10 = !16101711132694235236288510078047717898_i128;
Goto(bb3)
}
bb3 = {
_4 = [1103627720_i32];
_11 = _5;
_5 = _11;
RET = 8943_u16;
_5 = _11;
_3 = (-972555399296542094_i64) as isize;
_2 = 1337117482_i32 as f32;
_8 = _1 + _1;
_11 = _5;
_13 = (-1805662763_i32) >> _8;
_4 = [_13];
_10 = (-75119272474611277051475384486123523285_i128) - (-42816768202884182290933767525759174325_i128);
_7 = [_13,_13,_13,_13,_13,_13,_13];
_9 = _1;
RET = !64722_u16;
_3 = _1 << _8;
_5 = _11;
_3 = _9 + _8;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_4 = [_13];
_3 = _9;
Call(_1 = core::intrinsics::transmute(_8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = !_8;
_1 = RET as isize;
_15 = [8349476100159897171_i64,5434203319749827507_i64,(-7305163112704685722_i64),8460467764363769001_i64,(-7163793382950363045_i64)];
_11 = _5;
_9 = _3 ^ _8;
_8 = _9;
_8 = true as isize;
_5 = _11;
_1 = !_9;
_1 = !_9;
_8 = RET as isize;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_13 = -(-1439058383_i32);
_6 = _10 as u8;
_4 = [_13];
_15 = [(-2214762043496947510_i64),(-2675695437005085834_i64),(-1093779208198024016_i64),(-5203164754147393022_i64),6629740277539188791_i64];
_10 = _1 as i128;
_3 = -_9;
_17 = 21500_i16 as isize;
_8 = !_3;
RET = 58956_u16 * 33779_u16;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_1 = RET as isize;
_4 = [_13];
_18 = [_6,_6,_6,_6,_6,_6,_6];
_3 = _8;
Goto(bb5)
}
bb5 = {
_18 = [_6,_6,_6,_6,_6,_6,_6];
_8 = -_9;
_18 = [_6,_6,_6,_6,_6,_6,_6];
_14 = !RET;
_1 = _3;
_11 = _5;
_15 = [6755615475044491182_i64,5886057257012398328_i64,5454934997342763391_i64,(-2161474488422525194_i64),(-731916390231578356_i64)];
_5 = _11;
_11 = _5;
_8 = _10 as isize;
_5 = _11;
_19 = [_13];
_17 = -_8;
_18 = [_6,_6,_6,_6,_6,_6,_6];
RET = 9190204689896880388_i64 as u16;
_3 = !_8;
_13 = (-749010849_i32);
RET = 5_usize as u16;
_19 = [_13];
RET = _14;
_15 = [3795071227575148973_i64,6082947553829912337_i64,8156377001493605876_i64,(-4644675491599031375_i64),6170798902958047157_i64];
_14 = (-1744982395370403759_i64) as u16;
_21.0 = _1;
RET = _14 & _14;
Goto(bb6)
}
bb6 = {
_22 = [18236075976572530094_u64,12111392686595671125_u64,13350737692699636031_u64,9396626297211569867_u64];
_9 = false as isize;
_21 = (_8, 1990234558770238678_u64);
_15 = [(-7064558108350145518_i64),(-7104237151387062033_i64),(-5417140156536029947_i64),4152182830896202073_i64,5808588463943420950_i64];
_17 = _21.0;
_21.0 = _3 >> _1;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_2 = _3 as f32;
match _21.1 {
0 => bb3,
1 => bb2,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
1990234558770238678 => bb13,
_ => bb12
}
}
bb7 = {
_18 = [_6,_6,_6,_6,_6,_6,_6];
_8 = -_9;
_18 = [_6,_6,_6,_6,_6,_6,_6];
_14 = !RET;
_1 = _3;
_11 = _5;
_15 = [6755615475044491182_i64,5886057257012398328_i64,5454934997342763391_i64,(-2161474488422525194_i64),(-731916390231578356_i64)];
_5 = _11;
_11 = _5;
_8 = _10 as isize;
_5 = _11;
_19 = [_13];
_17 = -_8;
_18 = [_6,_6,_6,_6,_6,_6,_6];
RET = 9190204689896880388_i64 as u16;
_3 = !_8;
_13 = (-749010849_i32);
RET = 5_usize as u16;
_19 = [_13];
RET = _14;
_15 = [3795071227575148973_i64,6082947553829912337_i64,8156377001493605876_i64,(-4644675491599031375_i64),6170798902958047157_i64];
_14 = (-1744982395370403759_i64) as u16;
_21.0 = _1;
RET = _14 & _14;
Goto(bb6)
}
bb8 = {
_9 = !_8;
_1 = RET as isize;
_15 = [8349476100159897171_i64,5434203319749827507_i64,(-7305163112704685722_i64),8460467764363769001_i64,(-7163793382950363045_i64)];
_11 = _5;
_9 = _3 ^ _8;
_8 = _9;
_8 = true as isize;
_5 = _11;
_1 = !_9;
_1 = !_9;
_8 = RET as isize;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_13 = -(-1439058383_i32);
_6 = _10 as u8;
_4 = [_13];
_15 = [(-2214762043496947510_i64),(-2675695437005085834_i64),(-1093779208198024016_i64),(-5203164754147393022_i64),6629740277539188791_i64];
_10 = _1 as i128;
_3 = -_9;
_17 = 21500_i16 as isize;
_8 = !_3;
RET = 58956_u16 * 33779_u16;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_1 = RET as isize;
_4 = [_13];
_18 = [_6,_6,_6,_6,_6,_6,_6];
_3 = _8;
Goto(bb5)
}
bb9 = {
_4 = [1103627720_i32];
_11 = _5;
_5 = _11;
RET = 8943_u16;
_5 = _11;
_3 = (-972555399296542094_i64) as isize;
_2 = 1337117482_i32 as f32;
_8 = _1 + _1;
_11 = _5;
_13 = (-1805662763_i32) >> _8;
_4 = [_13];
_10 = (-75119272474611277051475384486123523285_i128) - (-42816768202884182290933767525759174325_i128);
_7 = [_13,_13,_13,_13,_13,_13,_13];
_9 = _1;
RET = !64722_u16;
_3 = _1 << _8;
_5 = _11;
_3 = _9 + _8;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_4 = [_13];
_3 = _9;
Call(_1 = core::intrinsics::transmute(_8), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_6 = 205_u8 * 187_u8;
_7 = [(-1515533719_i32),595373342_i32,(-844610234_i32),(-1687665972_i32),(-1391341994_i32),(-962049205_i32),1689576546_i32];
_10 = RET as i128;
RET = 20871_u16 << _1;
_8 = -_1;
_1 = -_3;
_10 = !16101711132694235236288510078047717898_i128;
Goto(bb3)
}
bb11 = {
_1 = _3;
_2 = 23708907153571403502817954166763288348_i128 as f32;
_1 = _3 ^ _3;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_21 = (_3, 15729534609096008461_u64);
_18 = [_6,_6,_6,_6,_6,_6,_6];
_13 = 332237586_i32;
_6 = 176_u8;
_13 = 1309140149_i32;
_14 = 98198320731821063306880365758074301251_u128 as u16;
_10 = 123764910391732767948346322301985503128_i128;
_24 = core::ptr::addr_of!(_26.fld1.0);
_9 = _1;
_13 = 1112069563_i32;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_7 = [_13,_13,_13,_13,_13,_13,_13];
_17 = _3;
_27 = (48_i8,);
RET = !_14;
_9 = _21.0 >> _17;
_26.fld0 = RET as u64;
_25 = 147695723765303152932554401269544971751_u128 >> _9;
RET = !_14;
_26.fld4 = _15;
_26.fld1 = (31633_i16,);
_9 = _21.0;
_26.fld1.0 = _10 as i16;
match _21.1 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
15729534609096008461 => bb19,
_ => bb18
}
}
bb14 = {
Return()
}
bb15 = {
_1 = _3;
_2 = 23708907153571403502817954166763288348_i128 as f32;
_1 = _3 ^ _3;
Goto(bb2)
}
bb16 = {
_6 = 205_u8 * 187_u8;
_7 = [(-1515533719_i32),595373342_i32,(-844610234_i32),(-1687665972_i32),(-1391341994_i32),(-962049205_i32),1689576546_i32];
_10 = RET as i128;
RET = 20871_u16 << _1;
_8 = -_1;
_1 = -_3;
_10 = !16101711132694235236288510078047717898_i128;
Goto(bb3)
}
bb17 = {
_9 = !_8;
_1 = RET as isize;
_15 = [8349476100159897171_i64,5434203319749827507_i64,(-7305163112704685722_i64),8460467764363769001_i64,(-7163793382950363045_i64)];
_11 = _5;
_9 = _3 ^ _8;
_8 = _9;
_8 = true as isize;
_5 = _11;
_1 = !_9;
_1 = !_9;
_8 = RET as isize;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_13 = -(-1439058383_i32);
_6 = _10 as u8;
_4 = [_13];
_15 = [(-2214762043496947510_i64),(-2675695437005085834_i64),(-1093779208198024016_i64),(-5203164754147393022_i64),6629740277539188791_i64];
_10 = _1 as i128;
_3 = -_9;
_17 = 21500_i16 as isize;
_8 = !_3;
RET = 58956_u16 * 33779_u16;
_7 = [_13,_13,_13,_13,_13,_13,_13];
_1 = RET as isize;
_4 = [_13];
_18 = [_6,_6,_6,_6,_6,_6,_6];
_3 = _8;
Goto(bb5)
}
bb18 = {
_18 = [_6,_6,_6,_6,_6,_6,_6];
_8 = -_9;
_18 = [_6,_6,_6,_6,_6,_6,_6];
_14 = !RET;
_1 = _3;
_11 = _5;
_15 = [6755615475044491182_i64,5886057257012398328_i64,5454934997342763391_i64,(-2161474488422525194_i64),(-731916390231578356_i64)];
_5 = _11;
_11 = _5;
_8 = _10 as isize;
_5 = _11;
_19 = [_13];
_17 = -_8;
_18 = [_6,_6,_6,_6,_6,_6,_6];
RET = 9190204689896880388_i64 as u16;
_3 = !_8;
_13 = (-749010849_i32);
RET = 5_usize as u16;
_19 = [_13];
RET = _14;
_15 = [3795071227575148973_i64,6082947553829912337_i64,8156377001493605876_i64,(-4644675491599031375_i64),6170798902958047157_i64];
_14 = (-1744982395370403759_i64) as u16;
_21.0 = _1;
RET = _14 & _14;
Goto(bb6)
}
bb19 = {
_27 = ((-100_i8),);
_9 = _8 << _25;
_28 = [_6,_6,_6,_6,_6,_6,_6];
_6 = 187_u8 << _9;
_27 = (22_i8,);
_11 = _5;
_21 = (_9, _26.fld0);
_17 = _10 as isize;
_26.fld1.0 = (-30087_i16) - 17968_i16;
_16 = core::ptr::addr_of!(_26.fld3);
_29 = (_15,);
_27 = ((-93_i8),);
_22 = [_21.1,_21.1,_21.1,_21.1];
_21.1 = _2 as u64;
_32 = _3 << _9;
_14 = RET << _9;
_21 = (_8, _26.fld0);
_9 = _32;
_1 = _3;
Goto(bb20)
}
bb20 = {
Call(_34 = dump_var(16_usize, 13_usize, Move(_13), 17_usize, Move(_17), 8_usize, Move(_8), 21_usize, Move(_21)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_34 = dump_var(16_usize, 15_usize, Move(_15), 19_usize, Move(_19), 14_usize, Move(_14), 32_usize, Move(_32)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_34 = dump_var(16_usize, 6_usize, Move(_6), 3_usize, Move(_3), 18_usize, Move(_18), 35_usize, _35), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: isize,mut _2: [usize; 5],mut _3: Adt54,mut _4: isize,mut _5: [i64; 5]) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _6: (i32, f32, *const *const [usize; 5]);
let _7: [usize; 5];
let _8: isize;
let _9: [bool; 6];
let _10: usize;
let _11: usize;
let _12: (i8,);
let _13: i64;
let _14: u8;
let _15: (usize,);
let _16: Adt63;
let _17: Adt63;
let _18: Adt53;
let _19: (isize, u64);
let _20: [u64; 4];
let _21: usize;
let _22: Adt53;
let _23: *mut isize;
let _24: ();
let _25: ();
{
_1 = _4 & _4;
RET = [11118383313790512772_u64,11286150724872971233_u64,299585564206353994_u64,8854720855364650059_u64];
_5 = [(-2030538329578426279_i64),1286310506604088051_i64,649311684690076564_i64,5762868440885041252_i64,3691795845194137587_i64];
place!(Field::<([i64; 5],)>(Variant(_3, 2), 1)) = (_5,);
_5 = Field::<([i64; 5],)>(Variant(_3, 2), 1).0;
place!(Field::<u8>(Variant(_3, 2), 0)) = 213_u8 - 191_u8;
RET = [18384219496538730294_u64,9232729166313171104_u64,7624390990173538190_u64,9430297234168759684_u64];
Goto(bb1)
}
bb1 = {
place!(Field::<([i64; 5],)>(Variant(_3, 2), 1)) = (_5,);
place!(Field::<([i64; 5],)>(Variant(_3, 2), 1)).0 = [8683282939235281284_i64,1865447138656832841_i64,9211771222540951506_i64,(-5205387234263698143_i64),(-2034812995320915792_i64)];
place!(Field::<([i64; 5],)>(Variant(_3, 2), 1)).0 = [(-940633851022827584_i64),5860815684107379150_i64,1216569112996791687_i64,1324964484504798748_i64,(-646502620874141176_i64)];
Goto(bb2)
}
bb2 = {
SetDiscriminant(_3, 1);
_2 = [3189556131865439411_usize,9226988580261376215_usize,3_usize,2_usize,1640369080746346579_usize];
_7 = [6904578820257227892_usize,3_usize,2_usize,15745843085342126118_usize,1250028299803287150_usize];
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = (26863_i16,);
_9 = [false,true,false,true,false,false];
_4 = !_1;
_9 = [true,true,false,false,false,true];
RET = [14247924116887039763_u64,407479562300605341_u64,5074708823355631291_u64,18371835057050495183_u64];
RET = [7469813561646459654_u64,5235027362671267643_u64,4544730419325307256_u64,5609657420232174625_u64];
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_4);
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_1);
_6.0 = !(-1300116060_i32);
_6.0 = -444088140_i32;
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = ((-14981_i16),);
Goto(bb3)
}
bb3 = {
_6.1 = _6.0 as f32;
_6.1 = _6.0 as f32;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = _5;
_3 = Adt54::Variant0 { fld0: (-55308070066371685638764689970597316810_i128) };
RET = [6020493054506215350_u64,9060162527897242220_u64,12166169375410607950_u64,17576987903960152457_u64];
_3 = Adt54::Variant0 { fld0: 67428894516217902173073201403812745713_i128 };
place!(Field::<i128>(Variant(_3, 0), 0)) = 93944267683559189380336079397166048687_i128;
_10 = !4402703751880558645_usize;
Goto(bb4)
}
bb4 = {
RET = [5531323961353918237_u64,15836834776054673353_u64,15627852627832601734_u64,1832881863975048110_u64];
_12 = ((-113_i8),);
_6.1 = _12.0 as f32;
_9 = [false,true,true,false,false,false];
_7 = [_10,_10,_10,_10,_10];
_7 = _2;
_4 = Field::<i128>(Variant(_3, 0), 0) as isize;
Goto(bb5)
}
bb5 = {
RET = [16729297130286763511_u64,13688718201978784921_u64,662446792828460190_u64,16620838528483482135_u64];
_6.0 = !(-252216304_i32);
_10 = 2683676223160161014_usize * 4_usize;
_5 = [1324458278272980949_i64,5133177148350879657_i64,1602514683045303669_i64,7794513523683114429_i64,1226100139171585742_i64];
_2 = _7;
RET = [18092656388149646201_u64,949496371066326842_u64,6601065268442232988_u64,7710995311686153444_u64];
_12 = (124_i8,);
_11 = !_10;
_1 = !_4;
_11 = 2468492355840641542_i64 as usize;
_13 = -(-5077129570149109750_i64);
Goto(bb6)
}
bb6 = {
_2 = [_11,_11,_11,_10,_10];
SetDiscriminant(_3, 1);
_5 = [_13,_13,_13,_13,_13];
_8 = 113_u8 as isize;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_4);
_8 = _1 << _12.0;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = [_13,_13,_13,_13,_13];
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).2 = _10 + _10;
_9 = [false,false,false,true,false,false];
_1 = 142_u8 as isize;
_2 = _7;
RET = [13275066151433094270_u64,8954002878768931257_u64,6793070906665230207_u64,10090881254778488925_u64];
_6.1 = 2157791427_u32 as f32;
_5 = [_13,_13,_13,_13,_13];
_7 = [_10,_10,Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0).2,_10,_10];
_12.0 = _6.0 as i8;
Goto(bb7)
}
bb7 = {
_11 = 247_u8 as usize;
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = ((-22998_i16),);
_8 = _1;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).2 = '\u{21715}' as usize;
_4 = _1;
RET = [301461780243053020_u64,6248404576281296143_u64,18161221005594328843_u64,5876500809480947094_u64];
_15 = (_11,);
place!(Field::<usize>(Variant(_3, 1), 2)) = _10 | _11;
place!(Field::<(i16,)>(Variant(_3, 1), 1)).0 = -18082_i16;
Goto(bb8)
}
bb8 = {
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = _5;
_12.0 = 123_i8 * (-77_i8);
_5 = Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0).0;
_13 = _6.1 as i64;
_7 = [Field::<usize>(Variant(_3, 1), 2),Field::<usize>(Variant(_3, 1), 2),_15.0,Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0).2,Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0).2];
RET = [15794835158001865002_u64,9047689760970169034_u64,4002788307634274175_u64,14594816774957070344_u64];
_4 = _1;
_11 = Field::<usize>(Variant(_3, 1), 2);
_10 = _11;
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = (11467_i16,);
_6.1 = 17583_u16 as f32;
RET = [16737722896535600133_u64,9824210829458799625_u64,3555148927080041896_u64,12478847761010400746_u64];
_15 = (_10,);
Goto(bb9)
}
bb9 = {
RET = [1370463836578802934_u64,9538837710833633813_u64,17547191305930476078_u64,2517029644473841561_u64];
place!(Field::<usize>(Variant(_3, 1), 2)) = _15.0 >> _13;
_7 = _2;
_5 = [_13,_13,_13,_13,_13];
_9 = [false,false,false,true,false,true];
_12.0 = 180_u8 as i8;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_1);
_15 = (_11,);
_9 = [true,true,false,false,false,false];
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).2 = _10;
RET = [1958368644327740068_u64,16604840279174762641_u64,7504412615344755209_u64,12294175773598535365_u64];
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = _5;
_15.0 = !_11;
_14 = !227_u8;
_19 = (_8, 3889592660557698774_u64);
_15 = (_10,);
_19.0 = _4 & _4;
_19 = (_1, 14227377097234435186_u64);
match _19.1 {
0 => bb2,
1 => bb10,
14227377097234435186 => bb12,
_ => bb11
}
}
bb10 = {
_2 = [_11,_11,_11,_10,_10];
SetDiscriminant(_3, 1);
_5 = [_13,_13,_13,_13,_13];
_8 = 113_u8 as isize;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_4);
_8 = _1 << _12.0;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = [_13,_13,_13,_13,_13];
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).2 = _10 + _10;
_9 = [false,false,false,true,false,false];
_1 = 142_u8 as isize;
_2 = _7;
RET = [13275066151433094270_u64,8954002878768931257_u64,6793070906665230207_u64,10090881254778488925_u64];
_6.1 = 2157791427_u32 as f32;
_5 = [_13,_13,_13,_13,_13];
_7 = [_10,_10,Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0).2,_10,_10];
_12.0 = _6.0 as i8;
Goto(bb7)
}
bb11 = {
_11 = 247_u8 as usize;
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = ((-22998_i16),);
_8 = _1;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).2 = '\u{21715}' as usize;
_4 = _1;
RET = [301461780243053020_u64,6248404576281296143_u64,18161221005594328843_u64,5876500809480947094_u64];
_15 = (_11,);
place!(Field::<usize>(Variant(_3, 1), 2)) = _10 | _11;
place!(Field::<(i16,)>(Variant(_3, 1), 1)).0 = -18082_i16;
Goto(bb8)
}
bb12 = {
RET = [_19.1,_19.1,_19.1,_19.1];
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = (13443_i16,);
_12 = ((-30_i8),);
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = [_13,_13,_13,_13,_13];
_7 = _2;
_13 = _14 as i64;
_2 = [_10,Field::<usize>(Variant(_3, 1), 2),Field::<usize>(Variant(_3, 1), 2),Field::<usize>(Variant(_3, 1), 2),Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0).2];
_10 = !_11;
_19.0 = _1;
SetDiscriminant(_3, 1);
Goto(bb13)
}
bb13 = {
_20 = [_19.1,_19.1,_19.1,_19.1];
place!(Field::<(i16,)>(Variant(_3, 1), 1)).0 = 32757_i16 - (-14790_i16);
_14 = 44_u8 << _12.0;
place!(Field::<usize>(Variant(_3, 1), 2)) = _11 | _10;
_18 = Adt53::Variant2 { fld0: _19.1 };
_15.0 = Field::<usize>(Variant(_3, 1), 2);
_19.0 = _4 ^ _4;
_5 = [_13,_13,_13,_13,_13];
_15.0 = Field::<usize>(Variant(_3, 1), 2) + Field::<usize>(Variant(_3, 1), 2);
_8 = !_19.0;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_19.0);
_19.0 = -_8;
place!(Field::<(i16,)>(Variant(_3, 1), 1)) = (15172_i16,);
_6.1 = (-153713259445514041160672297553847921469_i128) as f32;
_15 = (_11,);
_6.0 = !1716749017_i32;
SetDiscriminant(_18, 2);
RET = [_19.1,_19.1,_19.1,_19.1];
_19.0 = _8;
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).0 = [_13,_13,_13,_13,_13];
_2 = _7;
place!(Field::<u64>(Variant(_18, 2), 0)) = _19.1 - _19.1;
_6.0 = 673782279_i32;
_12 = ((-77_i8),);
place!(Field::<([i64; 5], *mut isize, usize)>(Variant(_3, 1), 0)).1 = core::ptr::addr_of_mut!(_8);
_6.0 = -2082443677_i32;
_22 = Move(_18);
_10 = !_15.0;
Goto(bb14)
}
bb14 = {
_19.1 = Field::<u64>(Variant(_22, 2), 0);
_6.1 = Field::<(i16,)>(Variant(_3, 1), 1).0 as f32;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(17_usize, 14_usize, Move(_14), 15_usize, Move(_15), 8_usize, Move(_8), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(17_usize, 20_usize, Move(_20), 11_usize, Move(_11), 1_usize, Move(_1), 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: u64,mut _2: [i64; 5]) -> isize {
mir! {
type RET = isize;
let _3: [bool; 6];
let _4: (u32, i16, isize);
let _5: f64;
let _6: char;
let _7: u64;
let _8: [u64; 4];
let _9: (u32, *const [usize; 5], char, char, u64, [bool; 5]);
let _10: isize;
let _11: (isize, u64);
let _12: (i16,);
let _13: i128;
let _14: [bool; 5];
let _15: (usize,);
let _16: char;
let _17: bool;
let _18: *const *const [usize; 5];
let _19: ();
let _20: ();
{
_2 = [(-5667037897271016410_i64),8101120533538694333_i64,(-3182143826693744255_i64),7259483163121617120_i64,(-5358117209162061778_i64)];
RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
RET = (-9223372036854775808_isize);
RET = (-29_isize);
RET = 10_i8 as isize;
RET = 57_i8 as isize;
Goto(bb1)
}
bb1 = {
RET = !(-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
_1 = 16970315564573017383_u64;
_1 = 16310891754389598967_u64;
RET = (-9223372036854775808_isize);
_4.0 = '\u{8a220}' as u32;
_4.0 = !1155446229_u32;
_3 = [true,false,false,true,true,false];
_4.2 = !RET;
_2 = [413681037273795427_i64,(-5534411710675776550_i64),(-921092374227294525_i64),5893687224121547786_i64,8760374453352597175_i64];
_2 = [(-1955512491717832022_i64),4051057562265848450_i64,(-6429765159396773277_i64),(-3396536150182985280_i64),(-2253729300665869764_i64)];
Goto(bb2)
}
bb2 = {
_4.1 = -(-28354_i16);
_4.1 = _4.0 as i16;
_4 = (3852289173_u32, (-32373_i16), RET);
_4.1 = 51181380834585655087985043237925966409_u128 as i16;
RET = _4.2 - _4.2;
_4.0 = 20_i8 as u32;
_4.2 = RET;
_4.0 = 2337406685_u32 * 2273422669_u32;
_3 = [true,false,true,false,false,false];
_4.1 = _1 as i16;
RET = -_4.2;
_4.2 = RET;
RET = _4.0 as isize;
match _1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
16310891754389598967 => bb10,
_ => bb9
}
}
bb3 = {
RET = !(-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
_1 = 16970315564573017383_u64;
_1 = 16310891754389598967_u64;
RET = (-9223372036854775808_isize);
_4.0 = '\u{8a220}' as u32;
_4.0 = !1155446229_u32;
_3 = [true,false,false,true,true,false];
_4.2 = !RET;
_2 = [413681037273795427_i64,(-5534411710675776550_i64),(-921092374227294525_i64),5893687224121547786_i64,8760374453352597175_i64];
_2 = [(-1955512491717832022_i64),4051057562265848450_i64,(-6429765159396773277_i64),(-3396536150182985280_i64),(-2253729300665869764_i64)];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_5 = (-84_i8) as f64;
RET = _4.2 & _4.2;
_5 = 152645966736497149428715411211080912066_i128 as f64;
_4.2 = RET | RET;
_4.2 = _5 as isize;
_4 = (3017828836_u32, 17582_i16, RET);
_2 = [(-907342195843482862_i64),8031537092936017577_i64,(-3492558541779737773_i64),(-5720463182946949252_i64),(-1846316933104382491_i64)];
_4.0 = 2124133253_u32 * 3161989215_u32;
_4.1 = (-4513_i16);
_1 = 4277515946767440369_u64;
_4.1 = _4.0 as i16;
_5 = 250903830209468461858869098124062510159_u128 as f64;
_4.0 = 39812_u16 as u32;
_6 = '\u{70ccf}';
_3 = [true,true,false,true,true,true];
_4.0 = 3503097902_u32;
_4.1 = (-16940_i16);
RET = -_4.2;
_4.2 = RET << _4.0;
RET = -_4.2;
_4.1 = (-22536_i16);
Goto(bb11)
}
bb11 = {
_4 = (896958346_u32, 25234_i16, RET);
_7 = _1 | _1;
Goto(bb12)
}
bb12 = {
_4 = (1505906176_u32, 30286_i16, RET);
_1 = !_7;
_8 = [_7,_1,_7,_7];
_4.1 = (-23058_i16);
_4 = (656638409_u32, 29808_i16, RET);
_2 = [932890707652174479_i64,(-3588182445542045611_i64),119998306403144238_i64,2068603978542466359_i64,7540156940515784179_i64];
_4.1 = _5 as i16;
_2 = [(-961512827378692798_i64),(-1210515591634256549_i64),(-8170774696790587379_i64),(-7122590985508019000_i64),6542992390759085961_i64];
_9.5 = [false,false,false,false,true];
_9.0 = _4.0;
_9.2 = _6;
_4.2 = 123508424244288339539979803553494020957_i128 as isize;
_1 = _7 | _7;
_4.0 = (-2100089046_i32) as u32;
_9.4 = _7;
_9.4 = _7;
_9.3 = _6;
_3 = [true,false,false,true,true,false];
match _9.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
656638409 => bb20,
_ => bb19
}
}
bb13 = {
_4 = (896958346_u32, 25234_i16, RET);
_7 = _1 | _1;
Goto(bb12)
}
bb14 = {
_4.1 = -(-28354_i16);
_4.1 = _4.0 as i16;
_4 = (3852289173_u32, (-32373_i16), RET);
_4.1 = 51181380834585655087985043237925966409_u128 as i16;
RET = _4.2 - _4.2;
_4.0 = 20_i8 as u32;
_4.2 = RET;
_4.0 = 2337406685_u32 * 2273422669_u32;
_3 = [true,false,true,false,false,false];
_4.1 = _1 as i16;
RET = -_4.2;
_4.2 = RET;
RET = _4.0 as isize;
match _1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
16310891754389598967 => bb10,
_ => bb9
}
}
bb15 = {
RET = !(-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
_1 = 16970315564573017383_u64;
_1 = 16310891754389598967_u64;
RET = (-9223372036854775808_isize);
_4.0 = '\u{8a220}' as u32;
_4.0 = !1155446229_u32;
_3 = [true,false,false,true,true,false];
_4.2 = !RET;
_2 = [413681037273795427_i64,(-5534411710675776550_i64),(-921092374227294525_i64),5893687224121547786_i64,8760374453352597175_i64];
_2 = [(-1955512491717832022_i64),4051057562265848450_i64,(-6429765159396773277_i64),(-3396536150182985280_i64),(-2253729300665869764_i64)];
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
_9.5 = [true,false,true,false,false];
_4.2 = false as isize;
RET = -_4.2;
_9.4 = !_1;
_4.0 = !_9.0;
_4 = (_9.0, 14840_i16, RET);
_9.0 = _4.0 >> _9.4;
_9.0 = _4.0 - _4.0;
_11.0 = !_4.2;
_8 = [_7,_9.4,_1,_1];
_11.0 = _4.2;
_4.0 = _9.0 * _9.0;
_12 = (_4.1,);
_3 = [true,true,false,true,false,false];
_14 = [true,true,true,true,false];
RET = _4.2 * _11.0;
_9.4 = _1;
_9.3 = _6;
_15.0 = !0_usize;
_9.5 = [true,true,true,false,false];
_13 = !64269615137803455687428903460116889057_i128;
Goto(bb21)
}
bb21 = {
Call(_19 = dump_var(18_usize, 14_usize, Move(_14), 8_usize, Move(_8), 2_usize, Move(_2), 1_usize, Move(_1)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_19 = dump_var(18_usize, 4_usize, Move(_4), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [u8; 7],mut _2: [i64; 5],mut _3: Adt52) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _4: (u32, *const [usize; 5], char, char, u64, [bool; 5]);
let _5: [i32; 1];
let _6: [i64; 5];
let _7: (*mut isize, i128, i16, (u8, *const i32, (i8,)));
let _8: i64;
let _9: char;
let _10: [usize; 5];
let _11: (isize, u64);
let _12: [u8; 7];
let _13: char;
let _14: f64;
let _15: Adt51;
let _16: (u32, i16, isize);
let _17: Adt53;
let _18: Adt55;
let _19: u8;
let _20: isize;
let _21: [bool; 5];
let _22: Adt53;
let _23: (i32, f32, *const *const [usize; 5]);
let _24: f32;
let _25: ();
let _26: ();
{
RET = _2;
Goto(bb1)
}
bb1 = {
_2 = [4459913247380735305_i64,5611176819850361099_i64,5247374583352632677_i64,(-2256330309917730145_i64),(-3559281032926781178_i64)];
_2 = [6486241767348698594_i64,(-4071047311597683493_i64),(-6484850798274974489_i64),(-963332950050883216_i64),(-8701976736717757812_i64)];
RET = _2;
RET = _2;
RET = [(-7581419059895651204_i64),(-2893884232321269402_i64),(-4275298670191200343_i64),(-3159211220375836899_i64),(-730108198941770841_i64)];
_2 = [7260840038420106534_i64,4644039416622485807_i64,7455840020428147343_i64,3828980367091196073_i64,341668537091345470_i64];
_2 = [2528588550108981011_i64,(-605355727944721096_i64),2358223261629558079_i64,(-5224542310062096457_i64),8597256192403126600_i64];
RET = [(-373806357755410160_i64),6037819904816949486_i64,2332180829335687556_i64,(-2861464396869953343_i64),7073114883363369070_i64];
_2 = [1863489296774341094_i64,(-3791008409765911216_i64),7168138930295561722_i64,8173457719305573454_i64,(-386048932036196541_i64)];
_4.5 = [false,false,false,true,true];
RET = _2;
_4.5 = [true,false,false,true,false];
_4.2 = '\u{ebfae}';
_4.2 = '\u{6e5ea}';
_4.2 = '\u{f76b9}';
_4.2 = '\u{a89fb}';
Goto(bb2)
}
bb2 = {
_4.3 = _4.2;
_4.3 = _4.2;
_4.0 = !643694539_u32;
RET = [1628073351264482294_i64,(-3437389448852803364_i64),8191337579251195010_i64,(-1845411619101655043_i64),2656189917227758922_i64];
_2 = [(-8652772680916930766_i64),2978638553805548066_i64,8167484487968127774_i64,2856785377476877477_i64,(-195493750143642472_i64)];
RET = [4139255739375151502_i64,(-3789638921090655151_i64),(-5103387181836722223_i64),7244101356323873844_i64,2371298379223345399_i64];
_2 = [7054565285472911260_i64,2749783117684705734_i64,(-3727331186265445857_i64),7387539080792169433_i64,(-1386740185344294079_i64)];
RET = [9187579234846213785_i64,(-6097318066521210844_i64),(-4074939629174148959_i64),(-6367024813315775304_i64),(-6510788838554352646_i64)];
_5 = [(-1032852417_i32)];
_5 = [297014249_i32];
_4.2 = _4.3;
_4.4 = !5775471662024520912_u64;
RET = _2;
_4.5 = [false,false,true,true,false];
_1 = [114_u8,214_u8,225_u8,211_u8,217_u8,153_u8,222_u8];
_4.4 = !10840693523931826982_u64;
_6 = [4758855357998040082_i64,2307406948488124759_i64,(-7128303993157588749_i64),403103824141328126_i64,7954769463574726419_i64];
_2 = [170414747369021065_i64,(-570494035001904796_i64),9215014707977170879_i64,6371762951287362611_i64,(-1679960257830238135_i64)];
_2 = RET;
RET = _6;
_4.2 = _4.3;
_4.2 = _4.3;
_6 = [(-4052415585239054832_i64),6386230292469243253_i64,(-4185839450247844540_i64),6013981901711505876_i64,8630194604967886173_i64];
RET = [(-7488111681501593234_i64),(-5519638022185987731_i64),(-2921207402921435018_i64),1742707518507113782_i64,2033430070480897585_i64];
_4.4 = !264845604390572414_u64;
_5 = [(-963631577_i32)];
Goto(bb3)
}
bb3 = {
RET = [4048040769734555111_i64,(-4238450534372379657_i64),3139778145387570228_i64,7448779729415319386_i64,6563937374707088787_i64];
_4.3 = _4.2;
Goto(bb4)
}
bb4 = {
_2 = _6;
_4.2 = _4.3;
_4.5 = [true,true,true,true,false];
_7.3.2.0 = 67_i8;
_5 = [(-898631489_i32)];
_4.5 = [true,false,true,true,true];
_8 = (-5384241258127619808_i64) | 8725157619290206382_i64;
_4.2 = _4.3;
_7.2 = (-19414_i16);
_2 = RET;
_7.2 = -268_i16;
_7.3.2 = ((-71_i8),);
_7.1 = 65032_u16 as i128;
_7.3.0 = 61_u8;
_7.2 = -(-24271_i16);
_10 = [6_usize,15183434986163708963_usize,15975556193032306129_usize,1_usize,3_usize];
_3.fld0 = core::ptr::addr_of_mut!(_10);
match _7.3.0 {
0 => bb3,
1 => bb2,
61 => bb6,
_ => bb5
}
}
bb5 = {
_2 = [4459913247380735305_i64,5611176819850361099_i64,5247374583352632677_i64,(-2256330309917730145_i64),(-3559281032926781178_i64)];
_2 = [6486241767348698594_i64,(-4071047311597683493_i64),(-6484850798274974489_i64),(-963332950050883216_i64),(-8701976736717757812_i64)];
RET = _2;
RET = _2;
RET = [(-7581419059895651204_i64),(-2893884232321269402_i64),(-4275298670191200343_i64),(-3159211220375836899_i64),(-730108198941770841_i64)];
_2 = [7260840038420106534_i64,4644039416622485807_i64,7455840020428147343_i64,3828980367091196073_i64,341668537091345470_i64];
_2 = [2528588550108981011_i64,(-605355727944721096_i64),2358223261629558079_i64,(-5224542310062096457_i64),8597256192403126600_i64];
RET = [(-373806357755410160_i64),6037819904816949486_i64,2332180829335687556_i64,(-2861464396869953343_i64),7073114883363369070_i64];
_2 = [1863489296774341094_i64,(-3791008409765911216_i64),7168138930295561722_i64,8173457719305573454_i64,(-386048932036196541_i64)];
_4.5 = [false,false,false,true,true];
RET = _2;
_4.5 = [true,false,false,true,false];
_4.2 = '\u{ebfae}';
_4.2 = '\u{6e5ea}';
_4.2 = '\u{f76b9}';
_4.2 = '\u{a89fb}';
Goto(bb2)
}
bb6 = {
_4.4 = _8 as u64;
RET = _6;
_4.2 = _4.3;
_4.4 = 150661863841800715180342724172909790455_u128 as u64;
_4.2 = _4.3;
_4.5 = [false,false,true,true,false];
_4.3 = _4.2;
match _7.3.2.0 {
0 => bb5,
1 => bb4,
2 => bb3,
3 => bb7,
4 => bb8,
340282366920938463463374607431768211385 => bb10,
_ => bb9
}
}
bb7 = {
_2 = [4459913247380735305_i64,5611176819850361099_i64,5247374583352632677_i64,(-2256330309917730145_i64),(-3559281032926781178_i64)];
_2 = [6486241767348698594_i64,(-4071047311597683493_i64),(-6484850798274974489_i64),(-963332950050883216_i64),(-8701976736717757812_i64)];
RET = _2;
RET = _2;
RET = [(-7581419059895651204_i64),(-2893884232321269402_i64),(-4275298670191200343_i64),(-3159211220375836899_i64),(-730108198941770841_i64)];
_2 = [7260840038420106534_i64,4644039416622485807_i64,7455840020428147343_i64,3828980367091196073_i64,341668537091345470_i64];
_2 = [2528588550108981011_i64,(-605355727944721096_i64),2358223261629558079_i64,(-5224542310062096457_i64),8597256192403126600_i64];
RET = [(-373806357755410160_i64),6037819904816949486_i64,2332180829335687556_i64,(-2861464396869953343_i64),7073114883363369070_i64];
_2 = [1863489296774341094_i64,(-3791008409765911216_i64),7168138930295561722_i64,8173457719305573454_i64,(-386048932036196541_i64)];
_4.5 = [false,false,false,true,true];
RET = _2;
_4.5 = [true,false,false,true,false];
_4.2 = '\u{ebfae}';
_4.2 = '\u{6e5ea}';
_4.2 = '\u{f76b9}';
_4.2 = '\u{a89fb}';
Goto(bb2)
}
bb8 = {
_2 = _6;
_4.2 = _4.3;
_4.5 = [true,true,true,true,false];
_7.3.2.0 = 67_i8;
_5 = [(-898631489_i32)];
_4.5 = [true,false,true,true,true];
_8 = (-5384241258127619808_i64) | 8725157619290206382_i64;
_4.2 = _4.3;
_7.2 = (-19414_i16);
_2 = RET;
_7.2 = -268_i16;
_7.3.2 = ((-71_i8),);
_7.1 = 65032_u16 as i128;
_7.3.0 = 61_u8;
_7.2 = -(-24271_i16);
_10 = [6_usize,15183434986163708963_usize,15975556193032306129_usize,1_usize,3_usize];
_3.fld0 = core::ptr::addr_of_mut!(_10);
match _7.3.0 {
0 => bb3,
1 => bb2,
61 => bb6,
_ => bb5
}
}
bb9 = {
RET = [4048040769734555111_i64,(-4238450534372379657_i64),3139778145387570228_i64,7448779729415319386_i64,6563937374707088787_i64];
_4.3 = _4.2;
Goto(bb4)
}
bb10 = {
_10 = [7_usize,2684985359731927045_usize,7_usize,1_usize,7_usize];
_3.fld0 = core::ptr::addr_of_mut!(_10);
_4.1 = core::ptr::addr_of!(_10);
_6 = [_8,_8,_8,_8,_8];
_9 = _4.2;
_7.1 = -(-14076109207222516615077187622103517499_i128);
_7.3.0 = 5_u8;
_2 = [_8,_8,_8,_8,_8];
_9 = _4.2;
_12 = _1;
_4.2 = _4.3;
_7.0 = core::ptr::addr_of_mut!(_11.0);
_8 = -(-1640209711440564470_i64);
_6 = _2;
_15 = Adt51::Variant3 { fld0: true,fld1: _1,fld2: _8 };
_11.1 = _8 as u64;
_1 = _12;
Goto(bb11)
}
bb11 = {
place!(Field::<i64>(Variant(_15, 3), 2)) = _8;
_4.3 = _4.2;
RET = [_8,_8,Field::<i64>(Variant(_15, 3), 2),_8,_8];
_11 = (76_isize, _4.4);
_4.4 = _9 as u64;
_4.0 = 2375656478_u32 | 878085628_u32;
_7.3.0 = 89_u8;
_7.0 = core::ptr::addr_of_mut!(_11.0);
_7.3.2 = ((-21_i8),);
_4.0 = false as u32;
place!(Field::<[u8; 7]>(Variant(_15, 3), 1)) = [_7.3.0,_7.3.0,_7.3.0,_7.3.0,_7.3.0,_7.3.0,_7.3.0];
_13 = _9;
Goto(bb12)
}
bb12 = {
_16.0 = _4.0 << _11.1;
_4.3 = _9;
_4.4 = _7.2 as u64;
_16.2 = !_11.0;
_4.2 = _13;
_9 = _13;
_5 = [(-1958160076_i32)];
_7.3.2 = (111_i8,);
_16.1 = _7.1 as i16;
place!(Field::<[u8; 7]>(Variant(_15, 3), 1)) = _12;
_2 = [_8,_8,Field::<i64>(Variant(_15, 3), 2),_8,_8];
_7.3.2.0 = _11.1 as i8;
_8 = _7.3.2.0 as i64;
_17 = Adt53::Variant2 { fld0: _11.1 };
_4.5 = [true,true,true,false,true];
_7.3.2.0 = !(-93_i8);
_7.3.2 = (123_i8,);
_16.1 = _4.0 as i16;
_4.0 = !_16.0;
place!(Field::<i64>(Variant(_15, 3), 2)) = _8 & _8;
_11.0 = !_16.2;
Goto(bb13)
}
bb13 = {
_7.2 = _16.1 ^ _16.1;
_12 = _1;
_4.2 = _9;
_6 = [Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2)];
_7.3.2 = ((-73_i8),);
_11.1 = Field::<u64>(Variant(_17, 2), 0);
_16.1 = 58944_u16 as i16;
_5 = [(-297758926_i32)];
_14 = _16.1 as f64;
_6 = [_8,Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2)];
_8 = !Field::<i64>(Variant(_15, 3), 2);
place!(Field::<bool>(Variant(_15, 3), 0)) = !false;
_11.1 = Field::<u64>(Variant(_17, 2), 0);
_6 = [_8,Field::<i64>(Variant(_15, 3), 2),Field::<i64>(Variant(_15, 3), 2),_8,Field::<i64>(Variant(_15, 3), 2)];
SetDiscriminant(_17, 1);
place!(Field::<isize>(Variant(_17, 1), 2)) = _16.2;
place!(Field::<[u64; 4]>(Variant(_17, 1), 5)) = [_11.1,_11.1,_11.1,_11.1];
place!(Field::<[bool; 6]>(Variant(_17, 1), 0)) = [Field::<bool>(Variant(_15, 3), 0),Field::<bool>(Variant(_15, 3), 0),Field::<bool>(Variant(_15, 3), 0),Field::<bool>(Variant(_15, 3), 0),Field::<bool>(Variant(_15, 3), 0),Field::<bool>(Variant(_15, 3), 0)];
_17 = Adt53::Variant0 { fld0: _4.0 };
_20 = -_16.2;
Goto(bb14)
}
bb14 = {
SetDiscriminant(_15, 3);
_11 = (_20, _4.4);
place!(Field::<bool>(Variant(_15, 3), 0)) = _13 <= _13;
_16.1 = _7.2 | _7.2;
_4.2 = _13;
_13 = _4.3;
_11 = (_16.2, _4.4);
_11.1 = _4.4 - _4.4;
_7.1 = (-86938739930036879524343989361847055427_i128) - (-127973814171125329782464142097652371488_i128);
_23.0 = !2019703792_i32;
_23.1 = _16.0 as f32;
_7.2 = _16.1 + _16.1;
_8 = 3929060094931764451_i64 ^ (-2925076855588172505_i64);
_7.3.0 = 248_u8;
_4.1 = core::ptr::addr_of!(_10);
_16.2 = _23.0 as isize;
_8 = 5548221788382194719_i64;
_5 = [_23.0];
place!(Field::<i64>(Variant(_15, 3), 2)) = _8;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(19_usize, 10_usize, Move(_10), 11_usize, Move(_11), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(19_usize, 12_usize, Move(_12), 20_usize, Move(_20), 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(53752_u16), std::hint::black_box('\u{a9192}'), std::hint::black_box(143_u8), std::hint::black_box(113399957494668635723900117849791845731_u128), std::hint::black_box(19886_i16), std::hint::black_box(1203617583_i32), std::hint::black_box(1048624692_u32), std::hint::black_box((-128474584709120834719232336185817525426_i128)), std::hint::black_box(0_usize));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: [u8; 7],
fld1: (u32, *const [usize; 5], char, char, u64, [bool; 5]),
fld2: u64,
fld3: [u8; 1],
fld4: [usize; 5],
fld5: [i32; 1],

},
Variant1{
fld0: [u64; 4],
fld1: char,
fld2: (i8,),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt50 {
Variant0{
fld0: [bool; 6],
fld1: [bool; 5],
fld2: u8,
fld3: u32,
fld4: (u8, *const i32, (i8,)),
fld5: f64,

},
Variant1{
fld0: ([i64; 5],),
fld1: (*const i32,),
fld2: isize,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: (u32, i16, isize),
fld1: *const *const [usize; 5],

},
Variant1{
fld0: (*const i32,),
fld1: *const u128,

},
Variant2{
fld0: (i16,),
fld1: (u32, i16, isize),

},
Variant3{
fld0: bool,
fld1: [u8; 7],
fld2: i64,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: *mut [usize; 5],
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u32,

},
Variant1{
fld0: [bool; 6],
fld1: f64,
fld2: isize,
fld3: *const [usize; 5],
fld4: (u8, *const i32, (i8,)),
fld5: [u64; 4],
fld6: i64,

},
Variant2{
fld0: u64,

},
Variant3{
fld0: (u64,),
fld1: char,
fld2: (*const i32,),
fld3: i8,
fld4: [bool; 5],
fld5: f64,
fld6: u8,
fld7: (*mut isize, i128, i16, (u8, *const i32, (i8,))),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt54 {
Variant0{
fld0: i128,

},
Variant1{
fld0: ([i64; 5], *mut isize, usize),
fld1: (i16,),
fld2: usize,

},
Variant2{
fld0: u8,
fld1: ([i64; 5],),

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: (usize,),
fld1: usize,
fld2: (i16,),
fld3: Adt53,
fld4: i16,
fld5: *const u128,
fld6: Adt50,

},
Variant1{
fld0: bool,
fld1: *mut [usize; 5],
fld2: Adt50,
fld3: (i16,),

},
Variant2{
fld0: [bool; 6],
fld1: (i8,),
fld2: *const u128,
fld3: [i64; 5],
fld4: *const i32,

},
Variant3{
fld0: [u8; 7],
fld1: char,
fld2: u64,
fld3: ([i64; 5],),
fld4: f64,
fld5: i32,
fld6: u32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt56 {
Variant0{
fld0: Adt50,

},
Variant1{
fld0: bool,
fld1: Adt50,
fld2: u16,
fld3: i16,

},
Variant2{
fld0: Adt54,
fld1: i8,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt50,
fld1: Adt52,
fld2: (*mut isize, i128, i16, (u8, *const i32, (i8,))),
fld3: [u8; 7],

},
Variant1{
fld0: bool,
fld1: (i16,),
fld2: Adt52,
fld3: i32,
fld4: (i8,),

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: (*mut isize, i128, i16, (u8, *const i32, (i8,))),
fld1: Adt53,

},
Variant1{
fld0: (u32, i16, isize),
fld1: (i32, f32, *const *const [usize; 5]),
fld2: u8,
fld3: (u64,),

},
Variant2{
fld0: u16,
fld1: i32,
fld2: Adt52,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: (u64,),
fld1: [bool; 5],
fld2: Adt50,
fld3: Adt55,

},
Variant1{
fld0: *mut isize,
fld1: (usize,),
fld2: ([i64; 5],),
fld3: ([i64; 5], *mut isize, usize),
fld4: i16,
fld5: (*mut isize, i128, i16, (u8, *const i32, (i8,))),

},
Variant2{
fld0: [u8; 7],
fld1: i128,
fld2: (usize,),
fld3: Adt54,
fld4: [u8; 1],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt60 {
fld0: u32,
fld1: Adt49,
fld2: (i32, f32, *const *const [usize; 5]),
fld3: [usize; 5],
fld4: [bool; 6],
}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: (i16,),
fld1: usize,

},
Variant1{
fld0: (i8,),
fld1: usize,
fld2: *mut (u32, i16, isize),
fld3: Adt59,
fld4: Adt56,
fld5: Adt55,
fld6: (u32, *const [usize; 5], char, char, u64, [bool; 5]),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt62 {
fld0: u64,
fld1: (i16,),
fld2: *const i32,
fld3: *const [usize; 5],
fld4: [i64; 5],
}
#[derive(Debug,Copy,Clone)]
pub enum Adt63 {
Variant0{
fld0: (*mut isize, i128, i16, (u8, *const i32, (i8,))),
fld1: Adt62,
fld2: u32,

},
Variant1{
fld0: (isize, u64),
fld1: [bool; 5],
fld2: u128,
fld3: i128,

},
Variant2{
fld0: (u64,),
fld1: (i32, f32, *const *const [usize; 5]),
fld2: (u32, i16, isize),
fld3: u128,
fld4: *mut [usize; 5],
fld5: [bool; 6],
fld6: u8,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt64 {
fld0: *const i32,
fld1: f64,
fld2: [i64; 5],
fld3: *const [usize; 5],
}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: i32,

},
Variant1{
fld0: (i8,),
fld1: char,
fld2: (u32, *const [usize; 5], char, char, u64, [bool; 5]),
fld3: *const u128,
fld4: (*const i32,),
fld5: (u8, *const i32, (i8,)),
fld6: Adt51,
fld7: *const i16,

},
Variant2{
fld0: i128,
fld1: f64,
fld2: *const *const [usize; 5],

},
Variant3{
fld0: [u8; 1],
fld1: Adt60,
fld2: *mut [usize; 5],
fld3: (u32, *const [usize; 5], char, char, u64, [bool; 5]),
fld4: Adt64,
fld5: [bool; 6],

}}

