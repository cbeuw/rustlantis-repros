#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i32,mut _2: i128,mut _3: i8) -> [u64; 2] {
mir! {
type RET = [u64; 2];
let _4: [char; 3];
let _5: [isize; 5];
let _6: [i64; 2];
let _7: [i64; 2];
let _8: f64;
let _9: ([isize; 5], f64);
let _10: char;
let _11: ([isize; 5], f64);
let _12: bool;
let _13: Adt47;
let _14: f32;
let _15: i64;
let _16: ();
let _17: ();
{
_1 = (-2103019380_i32) + 2061344666_i32;
_1 = (-1100388468_i32);
RET = [8442807682793412208_u64,11226171409992713969_u64];
RET = [15216695135275381072_u64,4480030539992133_u64];
RET = [13417632300533956740_u64,1354238787669196925_u64];
_4 = ['\u{c929a}','\u{fbb6c}','\u{b035b}'];
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463463374607430667822988 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_2 = 120076146695001909345902222084777622476_i128 ^ 15186724187614151537561710630343580132_i128;
_2 = -46070202850446733753517187890448134477_i128;
_3 = 42_i8 << _2;
_2 = 128187358097066373743561504034420721773_i128 >> _1;
RET = [14908953712913449028_u64,11177486640966225555_u64];
RET = [164622866533693601_u64,12301036193407887921_u64];
RET = [17071348754657839574_u64,5193646788495349225_u64];
_1 = (-215761655_i32) ^ (-1572276755_i32);
_3 = (-5_i8) | (-31_i8);
_1 = 1561550834_i32 >> _2;
RET = [660211020732474573_u64,16486612454280557967_u64];
RET = [5940410989358850110_u64,1066994360102919778_u64];
RET = [4655391915995382856_u64,9840718930172513508_u64];
Goto(bb8)
}
bb8 = {
_1 = 625843255_i32 - 1181823552_i32;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,100_isize,9223372036854775807_isize];
RET = [11660327298443369114_u64,4805985060177473409_u64];
_2 = -124448516273067818590247485442724191706_i128;
_4 = ['\u{b55e6}','\u{2e3f4}','\u{9221f}'];
_3 = (-60_i8) * (-46_i8);
_6 = [2785478617555302315_i64,5221562156586598515_i64];
_6 = [(-3771587875141096676_i64),1463909195651480332_i64];
_2 = 88281399292025254266810050458201613933_i128;
RET = [9493185003460807580_u64,14687972203446655316_u64];
_6 = [(-8475729786828439641_i64),(-1237197432124364443_i64)];
_6 = [(-1036590851866730644_i64),807112817046044299_i64];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_2 = !(-130412229920270670330651728161175387443_i128);
_2 = 8672895622718690786_i64 as i128;
_3 = (-120_i8);
RET = [11444831325824961961_u64,1707324451654149850_u64];
_6 = [2976814619478279004_i64,3887412808511637317_i64];
_4 = ['\u{563a6}','\u{fcaf1}','\u{1ebf5}'];
_6 = [(-4666347883708600562_i64),(-629683551224097017_i64)];
_2 = (-11444718454752581855657152340565812948_i128);
_1 = (-109187082_i32);
_7 = _6;
_1 = (-1651333329_i32);
_6 = [(-7039017976548704142_i64),(-6504895557675295491_i64)];
_6 = _7;
RET = [1657645793890098557_u64,16477952300998839507_u64];
Goto(bb9)
}
bb9 = {
_7 = _6;
_6 = [(-6798118112059579674_i64),3563362521144981652_i64];
_5 = [(-78_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-96_isize)];
_5 = [9223372036854775807_isize,92_isize,7_isize,(-9223372036854775808_isize),(-36_isize)];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_2 = (-44910092172679804912851314824829366873_i128) + (-165977423463987871901953151148528094377_i128);
_2 = 98588260902344722106195813941678860222_i128;
RET = [12750612776085500441_u64,13962326286511148414_u64];
_3 = !(-62_i8);
_7 = [(-2084524320316934210_i64),(-5472488704929929325_i64)];
Goto(bb10)
}
bb10 = {
_6 = _7;
_3 = -126_i8;
RET = [5066395700119607771_u64,16200578776764801280_u64];
_3 = (-68_i8);
_3 = (-4_i8) & (-7_i8);
_9.0 = _5;
_8 = 221_u8 as f64;
_8 = _1 as f64;
_9 = (_5, _8);
_9.0 = _5;
_10 = '\u{27ec}';
_10 = '\u{eea49}';
_6 = [(-7862287914550418809_i64),9210199286918139058_i64];
_1 = 83932795_i32 >> _2;
RET = [8394366421880841612_u64,2350907997296209372_u64];
_9.0 = _5;
_11.0 = [9223372036854775807_isize,(-22_isize),9223372036854775807_isize,(-9223372036854775808_isize),64_isize];
_2 = 97588635724750128428319875129422470999_i128 << _3;
_3 = (-112_i8);
_11.1 = _9.1;
_11.0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-10_isize),(-9223372036854775808_isize)];
RET = [13668150805674667287_u64,3474862073521423169_u64];
_11.0 = _5;
Goto(bb11)
}
bb11 = {
_6 = [869084327708349201_i64,1667724608005049580_i64];
_6 = [(-3080092535833846311_i64),(-4050904480052419167_i64)];
_10 = '\u{2ad30}';
_7 = _6;
RET = [15086704074299810521_u64,16087854340937163803_u64];
_11.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_6 = [(-6667606329141452297_i64),1309765493274030165_i64];
_11.1 = _8 * _9.1;
_11 = (_5, _9.1);
_8 = _9.1;
_9.1 = 1618552346_u32 as f64;
_2 = (-77_isize) as i128;
_8 = _9.1 + _11.1;
_11.0 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-20_isize),9223372036854775807_isize];
_11.1 = _8;
_12 = _11.1 != _8;
_4 = [_10,_10,_10];
_1 = -(-18016710_i32);
_11.1 = _1 as f64;
_8 = 5998757708134502862_u64 as f64;
Call(_11.1 = fn1(_5, _9, _9.0, _10, _9.1, _9.0, _9), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_10 = '\u{49879}';
_11.0 = [9223372036854775807_isize,(-120_isize),(-9223372036854775808_isize),123_isize,(-80_isize)];
RET = [429771748243682351_u64,9861598842710218676_u64];
_11 = (_5, _8);
_9.1 = _8 + _11.1;
_11.1 = -_9.1;
_7 = [5135702425225548816_i64,1377196738106323136_i64];
Call(_14 = fn7(RET, _9.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_1 = -(-1509518024_i32);
_10 = '\u{b56d6}';
_5 = _9.0;
_11 = _9;
_8 = -_9.1;
_1 = -1307025679_i32;
_12 = false;
_11.0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),30_isize,(-9223372036854775808_isize)];
_3 = _1 as i8;
_11.0 = _5;
_11.0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-28_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9.0 = [(-9223372036854775808_isize),58_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-44_isize)];
_10 = '\u{1d483}';
RET = [7704409520333414828_u64,9719759525591214467_u64];
_1 = (-455708208_i32);
_4 = [_10,_10,_10];
_5 = [(-26_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),46_isize];
match _1 {
0 => bb8,
1 => bb14,
2 => bb15,
340282366920938463463374607431312503248 => bb17,
_ => bb16
}
}
bb14 = {
_10 = '\u{49879}';
_11.0 = [9223372036854775807_isize,(-120_isize),(-9223372036854775808_isize),123_isize,(-80_isize)];
RET = [429771748243682351_u64,9861598842710218676_u64];
_11 = (_5, _8);
_9.1 = _8 + _11.1;
_11.1 = -_9.1;
_7 = [5135702425225548816_i64,1377196738106323136_i64];
Call(_14 = fn7(RET, _9.0), ReturnTo(bb13), UnwindUnreachable())
}
bb15 = {
_6 = [869084327708349201_i64,1667724608005049580_i64];
_6 = [(-3080092535833846311_i64),(-4050904480052419167_i64)];
_10 = '\u{2ad30}';
_7 = _6;
RET = [15086704074299810521_u64,16087854340937163803_u64];
_11.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_6 = [(-6667606329141452297_i64),1309765493274030165_i64];
_11.1 = _8 * _9.1;
_11 = (_5, _9.1);
_8 = _9.1;
_9.1 = 1618552346_u32 as f64;
_2 = (-77_isize) as i128;
_8 = _9.1 + _11.1;
_11.0 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-20_isize),9223372036854775807_isize];
_11.1 = _8;
_12 = _11.1 != _8;
_4 = [_10,_10,_10];
_1 = -(-18016710_i32);
_11.1 = _1 as f64;
_8 = 5998757708134502862_u64 as f64;
Call(_11.1 = fn1(_5, _9, _9.0, _10, _9.1, _9.0, _9), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
_1 = 625843255_i32 - 1181823552_i32;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,100_isize,9223372036854775807_isize];
RET = [11660327298443369114_u64,4805985060177473409_u64];
_2 = -124448516273067818590247485442724191706_i128;
_4 = ['\u{b55e6}','\u{2e3f4}','\u{9221f}'];
_3 = (-60_i8) * (-46_i8);
_6 = [2785478617555302315_i64,5221562156586598515_i64];
_6 = [(-3771587875141096676_i64),1463909195651480332_i64];
_2 = 88281399292025254266810050458201613933_i128;
RET = [9493185003460807580_u64,14687972203446655316_u64];
_6 = [(-8475729786828439641_i64),(-1237197432124364443_i64)];
_6 = [(-1036590851866730644_i64),807112817046044299_i64];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_2 = !(-130412229920270670330651728161175387443_i128);
_2 = 8672895622718690786_i64 as i128;
_3 = (-120_i8);
RET = [11444831325824961961_u64,1707324451654149850_u64];
_6 = [2976814619478279004_i64,3887412808511637317_i64];
_4 = ['\u{563a6}','\u{fcaf1}','\u{1ebf5}'];
_6 = [(-4666347883708600562_i64),(-629683551224097017_i64)];
_2 = (-11444718454752581855657152340565812948_i128);
_1 = (-109187082_i32);
_7 = _6;
_1 = (-1651333329_i32);
_6 = [(-7039017976548704142_i64),(-6504895557675295491_i64)];
_6 = _7;
RET = [1657645793890098557_u64,16477952300998839507_u64];
Goto(bb9)
}
bb17 = {
_15 = 3066_u16 as i64;
_1 = !818830302_i32;
_9.0 = [9223372036854775807_isize,83_isize,29_isize,118_isize,(-9_isize)];
_11 = (_9.0, _9.1);
_4 = [_10,_10,_10];
_3 = 54_i8;
_10 = '\u{d0a86}';
_5 = _9.0;
_9.1 = _11.1;
RET = [13968983792691076666_u64,16744512011852975548_u64];
_15 = 7857076199086339170_i64 >> _3;
_2 = 67_u8 as i128;
RET = [6967883618033789120_u64,6158459603762614301_u64];
Goto(bb18)
}
bb18 = {
Call(_16 = dump_var(0_usize, 12_usize, Move(_12), 15_usize, Move(_15), 7_usize, Move(_7), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_16 = dump_var(0_usize, 4_usize, Move(_4), 17_usize, _17, 17_usize, _17, 17_usize, _17), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: [isize; 5],mut _2: ([isize; 5], f64),mut _3: [isize; 5],mut _4: char,mut _5: f64,mut _6: [isize; 5],mut _7: ([isize; 5], f64)) -> f64 {
mir! {
type RET = f64;
let _8: u32;
let _9: [usize; 5];
let _10: *const u8;
let _11: f32;
let _12: *const u8;
let _13: i128;
let _14: (*const i32,);
let _15: Adt57;
let _16: ();
let _17: ();
{
_7.0 = _6;
RET = 3959327501415557062_i64 as f64;
RET = 56983_u16 as f64;
_4 = '\u{da05b}';
_7.0 = _3;
RET = _5;
_2.1 = 16910276388139563540_usize as f64;
_8 = !3069571981_u32;
_5 = 30_u8 as f64;
_8 = 3765045933_u32;
_2.1 = -RET;
_6 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-128_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-77_isize),9223372036854775807_isize,(-91_isize)];
_7.1 = -RET;
Goto(bb1)
}
bb1 = {
_2.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),31_isize];
match _8 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
3765045933 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_9 = [1_usize,4_usize,4_usize,1_usize,4_usize];
_7 = _2;
_6 = _2.0;
_4 = '\u{47d32}';
_8 = !3324557853_u32;
_2.1 = _5;
_3 = _7.0;
RET = -_2.1;
_8 = 9025911669812094210_u64 as u32;
_9 = [0_usize,58916295712900146_usize,1_usize,303047113568271608_usize,13419545159541359271_usize];
_2 = _7;
_7 = (_1, _2.1);
RET = -_7.1;
_4 = '\u{e3624}';
_8 = 268412055946982689938954930205986329263_u128 as u32;
RET = (-16_i8) as f64;
_6 = [(-9223372036854775808_isize),(-98_isize),9223372036854775807_isize,67_isize,9223372036854775807_isize];
_2.0 = [(-17_isize),28_isize,122_isize,(-9223372036854775808_isize),(-95_isize)];
_11 = 9392500823478974714_usize as f32;
_4 = '\u{3e2ab}';
_13 = 117456098316521250192698687026107152308_i128 - 148385252517900615444574741507104476509_i128;
_4 = '\u{8b5a1}';
_4 = '\u{e95f7}';
_13 = 8396657729288836295936843630826154109_i128 - 34975414961564887551943502869996973270_i128;
Call(RET = fn2(_2.0, _2, _3, _6, _2, _1, _1, _1, _7, _7.0, _7, _7.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_11 = 1_i8 as f32;
_7.1 = -RET;
_4 = '\u{a74c3}';
_2.1 = -_7.1;
Goto(bb12)
}
bb12 = {
Call(_16 = dump_var(1_usize, 13_usize, Move(_13), 3_usize, Move(_3), 8_usize, Move(_8), 17_usize, _17), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [isize; 5],mut _2: ([isize; 5], f64),mut _3: [isize; 5],mut _4: [isize; 5],mut _5: ([isize; 5], f64),mut _6: [isize; 5],mut _7: [isize; 5],mut _8: [isize; 5],mut _9: ([isize; 5], f64),mut _10: [isize; 5],mut _11: ([isize; 5], f64),mut _12: [isize; 5]) -> f64 {
mir! {
type RET = f64;
let _13: bool;
let _14: f64;
let _15: *mut i16;
let _16: bool;
let _17: [u16; 7];
let _18: (*const i32,);
let _19: Adt52;
let _20: [char; 3];
let _21: Adt59;
let _22: Adt59;
let _23: f32;
let _24: [isize; 5];
let _25: bool;
let _26: Adt51;
let _27: isize;
let _28: [i32; 3];
let _29: ();
let _30: ();
{
_14 = -_5.1;
_11.1 = _2.1 * _9.1;
_11.1 = -_14;
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = _5.1;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-101_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_11.1 = _9.1 + _2.1;
_9.1 = _2.1 * _2.1;
_2 = (_3, _11.1);
_14 = _9.1;
_9.1 = RET;
Goto(bb1)
}
bb1 = {
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_9 = (_7, _14);
_12 = _7;
_5.1 = -_9.1;
_1 = [(-9223372036854775808_isize),101_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-109_isize)];
_3 = _8;
_13 = true;
_2 = _11;
_12 = _9.0;
_6 = [(-9223372036854775808_isize),9223372036854775807_isize,(-71_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_9.1 = _2.1 + _14;
_7 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5.1 = _2.1;
_14 = (-120608741966836225618739124530283931563_i128) as f64;
_3 = [(-9_isize),9223372036854775807_isize,55_isize,(-4_isize),(-9223372036854775808_isize)];
_14 = -_11.1;
_7 = [(-9223372036854775808_isize),(-91_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_2.0 = _12;
Call(_2.1 = fn3(_10, _8, _9, _8, _2.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = _9.1;
_14 = _2.1;
_8 = [121_isize,(-9223372036854775808_isize),127_isize,9223372036854775807_isize,9223372036854775807_isize];
_2.0 = _4;
_12 = [9223372036854775807_isize,(-9223372036854775808_isize),84_isize,(-9223372036854775808_isize),(-9_isize)];
_5 = (_9.0, _14);
_5.1 = 12919_u16 as f64;
_11.1 = RET + _14;
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_14 = _2.1;
_16 = _2.1 != _2.1;
_6 = [(-10_isize),9223372036854775807_isize,(-75_isize),9223372036854775807_isize,(-81_isize)];
_17 = [48402_u16,47728_u16,34740_u16,5609_u16,47593_u16,58022_u16,58332_u16];
_7 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,32_isize,(-18_isize)];
_17 = [18196_u16,55180_u16,10073_u16,11898_u16,4738_u16,54718_u16,18866_u16];
_16 = _13;
_3 = _11.0;
_4 = _3;
Call(_18 = fn4(_5, _11, _8, _2, _9.0, _11.1, _11.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-29_isize)];
_5 = (_10, _14);
_9.1 = (-18_i8) as f64;
_9 = _11;
_11.1 = _14 - _14;
_14 = _11.1 * _2.1;
_5.1 = _9.1 + _9.1;
_20 = ['\u{81274}','\u{6c1d9}','\u{10d60b}'];
_13 = _16;
_19 = Adt52::Variant1 { fld0: _11 };
_20 = ['\u{f3c6f}','\u{15cb}','\u{3dbfe}'];
Goto(bb4)
}
bb4 = {
_2.1 = _14;
_1 = Field::<([isize; 5], f64)>(Variant(_19, 1), 0).0;
_11.1 = 4228202504_u32 as f64;
_14 = Field::<([isize; 5], f64)>(Variant(_19, 1), 0).1 + Field::<([isize; 5], f64)>(Variant(_19, 1), 0).1;
_2.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-108_isize),9223372036854775807_isize,9223372036854775807_isize];
place!(Field::<([isize; 5], f64)>(Variant(_19, 1), 0)).0 = [54_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-18_isize),(-27_isize)];
_17 = [50096_u16,27897_u16,22817_u16,20623_u16,58587_u16,52755_u16,51247_u16];
_9 = Field::<([isize; 5], f64)>(Variant(_19, 1), 0);
_17 = [54225_u16,37705_u16,42031_u16,22375_u16,29643_u16,16170_u16,2830_u16];
_23 = 515700421_i32 as f32;
place!(Field::<([isize; 5], f64)>(Variant(_19, 1), 0)).1 = _9.1 - _5.1;
_5.1 = -_14;
_10 = _9.0;
_4 = _8;
RET = _9.1;
_11.0 = [9223372036854775807_isize,9223372036854775807_isize,88_isize,(-9223372036854775808_isize),(-126_isize)];
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_9.0 = [1_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10 = [9223372036854775807_isize,(-35_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11.0 = [(-105_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-53_isize),(-9223372036854775808_isize)];
SetDiscriminant(_19, 1);
_3 = _5.0;
_3 = [(-102_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-74_isize)];
_9.1 = 2400324466_u32 as f64;
Goto(bb5)
}
bb5 = {
Call(_29 = dump_var(2_usize, 8_usize, Move(_8), 4_usize, Move(_4), 10_usize, Move(_10), 13_usize, Move(_13)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_29 = dump_var(2_usize, 16_usize, Move(_16), 7_usize, Move(_7), 30_usize, _30, 30_usize, _30), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [isize; 5],mut _2: [isize; 5],mut _3: ([isize; 5], f64),mut _4: [isize; 5],mut _5: [isize; 5]) -> f64 {
mir! {
type RET = f64;
let _6: ();
let _7: ();
{
_5 = _4;
_5 = _1;
_2 = [73_isize,9223372036854775807_isize,113_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
RET = 1532963623_i32 as f64;
RET = _3.1 + _3.1;
_4 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_3 = (_1, RET);
RET = _3.1 * _3.1;
_3.1 = 106_u8 as f64;
_3 = (_5, RET);
_2 = _5;
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-68_isize),47_isize,9223372036854775807_isize];
Goto(bb1)
}
bb1 = {
Call(_6 = dump_var(3_usize, 4_usize, Move(_4), 2_usize, Move(_2), 7_usize, _7, 7_usize, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: ([isize; 5], f64),mut _2: ([isize; 5], f64),mut _3: [isize; 5],mut _4: ([isize; 5], f64),mut _5: [isize; 5],mut _6: f64,mut _7: f64) -> (*const i32,) {
mir! {
type RET = (*const i32,);
let _8: isize;
let _9: u128;
let _10: char;
let _11: isize;
let _12: f64;
let _13: usize;
let _14: Adt48;
let _15: [u64; 4];
let _16: i32;
let _17: bool;
let _18: [usize; 5];
let _19: Adt50;
let _20: [bool; 7];
let _21: f32;
let _22: u64;
let _23: i32;
let _24: u32;
let _25: isize;
let _26: isize;
let _27: [bool; 7];
let _28: Adt48;
let _29: char;
let _30: char;
let _31: f32;
let _32: isize;
let _33: [isize; 5];
let _34: [bool; 7];
let _35: (f64, [i8; 1], (*const i32,));
let _36: u32;
let _37: [i8; 1];
let _38: (f64, i128, u8, u32);
let _39: i8;
let _40: f32;
let _41: [u16; 7];
let _42: ();
let _43: ();
{
_2.1 = _4.1 - _6;
_4 = (_5, _2.1);
_2 = (_1.0, _4.1);
_8 = !(-128_isize);
_4.0 = _5;
_3 = [_8,_8,_8,_8,_8];
_1.1 = 8559994538941290907_i64 as f64;
_2.1 = -_6;
_2 = (_1.0, _7);
Call(_6 = core::intrinsics::transmute(_8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = (-92_isize) ^ (-9223372036854775808_isize);
_4 = (_2.0, _2.1);
_2 = _4;
_10 = '\u{14197}';
_11 = _8 - _8;
_1.1 = _7;
Call(_8 = fn5(_11, _2.0, _1.0, _7, _4.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = !228700631463242194546435339642700776457_u128;
_4.1 = _7 - _2.1;
_11 = -_8;
_5 = [_11,_11,_11,_11,_8];
_2.1 = -_4.1;
_8 = _10 as isize;
_2.1 = 2141321393823198797_i64 as f64;
_2.0 = [_11,_11,_11,_11,_11];
_1 = (_2.0, _4.1);
_10 = '\u{3043e}';
_2.0 = [_11,_11,_11,_11,_11];
_4 = _1;
_1.0 = [_11,_11,_11,_11,_11];
_17 = true & false;
_18 = [4353017091847697411_usize,6314472098809583106_usize,2_usize,3402713656749895658_usize,3_usize];
_4 = _1;
Goto(bb3)
}
bb3 = {
_13 = !4981027648475050585_usize;
_17 = !true;
_16 = _13 as i32;
RET.0 = core::ptr::addr_of!(_16);
_1.0 = _2.0;
_18 = [_13,_13,_13,_13,_13];
_2.0 = [_11,_11,_11,_11,_11];
_19 = Adt50 { fld0: RET };
_1 = (_4.0, _4.1);
_4.0 = _5;
_5 = [_11,_11,_11,_11,_11];
_12 = _4.1 + _7;
_17 = false;
Goto(bb4)
}
bb4 = {
_16 = 279050931_i32 & 253943508_i32;
_13 = 5_usize;
_13 = _9 as usize;
_19 = Adt50 { fld0: RET };
RET.0 = _19.fld0.0;
_15 = [15092982715238399013_u64,4561887950618901476_u64,3165270739473496154_u64,391915515568976481_u64];
_18 = [_13,_13,_13,_13,_13];
_1 = (_4.0, _12);
_19.fld0.0 = RET.0;
_3 = [_11,_11,_11,_11,_11];
_2.1 = 207_u8 as f64;
_17 = true ^ false;
_1.1 = -_4.1;
_9 = 198627765809167580716551133393247897474_u128;
_1.1 = _12 - _4.1;
Goto(bb5)
}
bb5 = {
_21 = _13 as f32;
_7 = 51_u8 as f64;
_3 = [_11,_11,_11,_11,_11];
_1.1 = _12 + _12;
RET.0 = _19.fld0.0;
RET.0 = core::ptr::addr_of!(_16);
_16 = 1163826092_i32;
RET.0 = _19.fld0.0;
_21 = _16 as f32;
RET.0 = _19.fld0.0;
_6 = -_1.1;
_22 = _10 as u64;
match _16 {
0 => bb1,
1163826092 => bb6,
_ => bb2
}
}
bb6 = {
_12 = -_4.1;
RET.0 = _19.fld0.0;
RET.0 = _19.fld0.0;
_4.1 = _11 as f64;
_2.0 = [_11,_11,_11,_11,_11];
_18 = [_13,_13,_13,_13,_13];
Goto(bb7)
}
bb7 = {
_19.fld0.0 = core::ptr::addr_of!(_23);
_3 = [_11,_11,_11,_11,_11];
_19 = Adt50 { fld0: RET };
_18 = [_13,_13,_13,_13,_13];
_1.1 = _7 + _6;
_24 = 2461292005_u32 | 3476748193_u32;
_15 = [_22,_22,_22,_22];
_13 = 5_usize & 3_usize;
_13 = _21 as usize;
_19 = Adt50 { fld0: RET };
_19.fld0.0 = RET.0;
_1.1 = -_6;
_27 = [_17,_17,_17,_17,_17,_17,_17];
_7 = -_1.1;
_26 = _11 + _11;
_27 = [_17,_17,_17,_17,_17,_17,_17];
_24 = !1966456075_u32;
_7 = _4.1 * _1.1;
_29 = _10;
_16 = !1600196054_i32;
_2.0 = [_26,_11,_26,_26,_26];
_30 = _10;
_24 = !4137371913_u32;
RET.0 = _19.fld0.0;
Call(_26 = fn6(_11, _5, _1, _1.0, _2.0, _2.0, _7, _7, _1.1, _2.0, _5, _4, _4, _2, _1.1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_23 = _16 ^ _16;
RET = (_19.fld0.0,);
_29 = _30;
_35.2 = RET;
_19 = Adt50 { fld0: _35.2 };
_24 = 374828189_u32;
_16 = -_23;
_19.fld0 = (_35.2.0,);
_8 = !_26;
_1.0 = [_8,_8,_26,_11,_26];
_4.1 = 12_i8 as f64;
RET = _35.2;
_20 = _27;
_35.0 = _6 + _1.1;
_32 = -_8;
_29 = _10;
_1.0 = [_26,_11,_26,_11,_11];
_9 = !3088660526402433865536160037849200197_u128;
_25 = (-115647909647767677927972910446992339827_i128) as isize;
_38.0 = 148_u8 as f64;
RET = _35.2;
Goto(bb9)
}
bb9 = {
_1.0 = [_11,_8,_8,_32,_26];
_6 = -_7;
_38 = (_6, 154992946057161260069621699541303787655_i128, 238_u8, _24);
_31 = _21 * _21;
_8 = _32 | _26;
_39 = (-128_i8) | (-120_i8);
_20 = [_17,_17,_17,_17,_17,_17,_17];
_18 = [_13,_13,_13,_13,_13];
_3 = _5;
_21 = _9 as f32;
_38.1 = 6458700311221029913_i64 as i128;
_18 = [_13,_13,_13,_13,_13];
_18 = [_13,_13,_13,_13,_13];
_11 = _9 as isize;
match _38.2 {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
238 => bb15,
_ => bb14
}
}
bb10 = {
_23 = _16 ^ _16;
RET = (_19.fld0.0,);
_29 = _30;
_35.2 = RET;
_19 = Adt50 { fld0: _35.2 };
_24 = 374828189_u32;
_16 = -_23;
_19.fld0 = (_35.2.0,);
_8 = !_26;
_1.0 = [_8,_8,_26,_11,_26];
_4.1 = 12_i8 as f64;
RET = _35.2;
_20 = _27;
_35.0 = _6 + _1.1;
_32 = -_8;
_29 = _10;
_1.0 = [_26,_11,_26,_11,_11];
_9 = !3088660526402433865536160037849200197_u128;
_25 = (-115647909647767677927972910446992339827_i128) as isize;
_38.0 = 148_u8 as f64;
RET = _35.2;
Goto(bb9)
}
bb11 = {
_9 = !228700631463242194546435339642700776457_u128;
_4.1 = _7 - _2.1;
_11 = -_8;
_5 = [_11,_11,_11,_11,_8];
_2.1 = -_4.1;
_8 = _10 as isize;
_2.1 = 2141321393823198797_i64 as f64;
_2.0 = [_11,_11,_11,_11,_11];
_1 = (_2.0, _4.1);
_10 = '\u{3043e}';
_2.0 = [_11,_11,_11,_11,_11];
_4 = _1;
_1.0 = [_11,_11,_11,_11,_11];
_17 = true & false;
_18 = [4353017091847697411_usize,6314472098809583106_usize,2_usize,3402713656749895658_usize,3_usize];
_4 = _1;
Goto(bb3)
}
bb12 = {
_12 = -_4.1;
RET.0 = _19.fld0.0;
RET.0 = _19.fld0.0;
_4.1 = _11 as f64;
_2.0 = [_11,_11,_11,_11,_11];
_18 = [_13,_13,_13,_13,_13];
Goto(bb7)
}
bb13 = {
_21 = _13 as f32;
_7 = 51_u8 as f64;
_3 = [_11,_11,_11,_11,_11];
_1.1 = _12 + _12;
RET.0 = _19.fld0.0;
RET.0 = core::ptr::addr_of!(_16);
_16 = 1163826092_i32;
RET.0 = _19.fld0.0;
_21 = _16 as f32;
RET.0 = _19.fld0.0;
_6 = -_1.1;
_22 = _10 as u64;
match _16 {
0 => bb1,
1163826092 => bb6,
_ => bb2
}
}
bb14 = {
_13 = !4981027648475050585_usize;
_17 = !true;
_16 = _13 as i32;
RET.0 = core::ptr::addr_of!(_16);
_1.0 = _2.0;
_18 = [_13,_13,_13,_13,_13];
_2.0 = [_11,_11,_11,_11,_11];
_19 = Adt50 { fld0: RET };
_1 = (_4.0, _4.1);
_4.0 = _5;
_5 = [_11,_11,_11,_11,_11];
_12 = _4.1 + _7;
_17 = false;
Goto(bb4)
}
bb15 = {
_30 = _10;
Goto(bb16)
}
bb16 = {
Call(_42 = dump_var(4_usize, 15_usize, Move(_15), 27_usize, Move(_27), 5_usize, Move(_5), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(4_usize, 23_usize, Move(_23), 30_usize, Move(_30), 8_usize, Move(_8), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(4_usize, 11_usize, Move(_11), 17_usize, Move(_17), 3_usize, Move(_3), 43_usize, _43), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: [isize; 5],mut _3: [isize; 5],mut _4: f64,mut _5: [isize; 5]) -> isize {
mir! {
type RET = isize;
let _6: u128;
let _7: u64;
let _8: (*const i32,);
let _9: f64;
let _10: u32;
let _11: Adt45;
let _12: char;
let _13: char;
let _14: u8;
let _15: isize;
let _16: i32;
let _17: [u64; 4];
let _18: ();
let _19: ();
{
_4 = _1 as f64;
RET = !_1;
_6 = 131431890034120333392278942215416949889_u128;
_3 = [_1,RET,_1,_1,RET];
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
131431890034120333392278942215416949889 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7 = 15073728135002887545_u64;
_4 = _7 as f64;
_4 = (-3907257659168386478_i64) as f64;
_2 = _3;
_2 = _5;
RET = -_1;
RET = !_1;
RET = _1;
_5 = [_1,RET,_1,RET,_1];
_4 = 1157828920_i32 as f64;
_1 = RET | RET;
_3 = [_1,RET,_1,_1,_1];
Goto(bb6)
}
bb6 = {
_6 = _7 as u128;
_5 = [_1,_1,RET,RET,RET];
_2 = _5;
_7 = 16913781376742366518_u64 >> _1;
_5 = [_1,_1,RET,_1,_1];
_4 = 3_usize as f64;
_6 = 311881790929680752011597769548235918399_u128;
_2 = [RET,RET,_1,RET,_1];
_2 = _3;
RET = _1 + _1;
RET = !_1;
_5 = _2;
_4 = (-1825103926_i32) as f64;
_5 = _2;
_3 = [RET,RET,RET,RET,_1];
_3 = _5;
_1 = 4255332419_u32 as isize;
_6 = (-1426419163_i32) as u128;
_2 = [RET,RET,RET,RET,RET];
_5 = _3;
_5 = [RET,RET,_1,RET,RET];
_3 = [RET,RET,RET,RET,RET];
_6 = 192821498233260951164374847180878427337_u128 * 322080146502990624735701605882111253764_u128;
_6 = 14487239699373966181_usize as u128;
_4 = 61_u8 as f64;
_9 = _4 + _4;
_1 = RET << RET;
Goto(bb7)
}
bb7 = {
_6 = !103141728116570275138675138582379427307_u128;
Goto(bb8)
}
bb8 = {
_10 = 3714754656_u32;
_2 = [_1,_1,RET,RET,RET];
_4 = _9 - _9;
_7 = !12016397871743340409_u64;
_4 = -_9;
_6 = 276764801568641261581516659173064028980_u128 * 96550371499871821788623831138325172707_u128;
RET = _1;
_5 = [RET,_1,_1,RET,_1];
_7 = 15341602728707608243_u64;
_1 = RET | RET;
_3 = _5;
_9 = _4;
_4 = _9 * _9;
RET = -_1;
_3 = [RET,_1,RET,_1,RET];
RET = _1 >> _1;
_12 = '\u{6e252}';
_13 = _12;
_6 = _12 as u128;
_13 = _12;
_7 = (-61992168151253186089659138435170082613_i128) as u64;
Goto(bb9)
}
bb9 = {
Call(_18 = dump_var(5_usize, 12_usize, Move(_12), 7_usize, Move(_7), 10_usize, Move(_10), 5_usize, Move(_5)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: [isize; 5],mut _3: ([isize; 5], f64),mut _4: [isize; 5],mut _5: [isize; 5],mut _6: [isize; 5],mut _7: f64,mut _8: f64,mut _9: f64,mut _10: [isize; 5],mut _11: [isize; 5],mut _12: ([isize; 5], f64),mut _13: ([isize; 5], f64),mut _14: ([isize; 5], f64),mut _15: f64) -> isize {
mir! {
type RET = isize;
let _16: [u64; 4];
let _17: usize;
let _18: ();
let _19: ();
{
_5 = [_1,_1,_1,_1,_1];
_3 = (_6, _7);
_7 = -_3.1;
_14 = (_10, _12.1);
_11 = [_1,_1,_1,_1,_1];
_6 = [_1,_1,_1,_1,_1];
_13.1 = 10_u8 as f64;
_6 = _14.0;
_13.0 = _5;
RET = _1;
_3.1 = 165329958649588230408688730586860593262_i128 as f64;
_14 = (_6, _9);
_10 = [_1,_1,RET,RET,_1];
_3.1 = _15 + _8;
_14.0 = [RET,_1,_1,RET,RET];
_4 = _5;
_3.1 = _7 + _12.1;
_12.0 = [RET,RET,RET,_1,RET];
RET = _1 | _1;
_9 = -_3.1;
_9 = -_8;
_14.0 = [RET,_1,RET,RET,RET];
_13 = _14;
_13.1 = _12.1;
_12.1 = _8;
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(6_usize, 6_usize, Move(_6), 2_usize, Move(_2), 10_usize, Move(_10), 19_usize, _19), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [u64; 2],mut _2: [isize; 5]) -> f32 {
mir! {
type RET = f32;
let _3: u64;
let _4: f32;
let _5: char;
let _6: [u64; 4];
let _7: [i64; 2];
let _8: f32;
let _9: *mut i16;
let _10: char;
let _11: Adt53;
let _12: Adt43;
let _13: [u16; 7];
let _14: f64;
let _15: f64;
let _16: [u64; 4];
let _17: (*const i32,);
let _18: [u64; 4];
let _19: Adt54;
let _20: isize;
let _21: *mut [i8; 1];
let _22: f32;
let _23: [bool; 7];
let _24: (f64, i128, u8, u32);
let _25: Adt47;
let _26: isize;
let _27: u16;
let _28: char;
let _29: *mut [i8; 1];
let _30: *mut [i8; 1];
let _31: ();
let _32: ();
{
RET = (-9062548585767043813_i64) as f32;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_3 = 1576797054_u32 as u64;
_1 = [_3,_3];
_1 = [_3,_3];
RET = 14_u8 as f32;
_2 = [(-9223372036854775808_isize),108_isize,9223372036854775807_isize,108_isize,(-9223372036854775808_isize)];
_3 = RET as u64;
_4 = RET - RET;
_3 = 632750090929011476_u64;
RET = _4 * _4;
RET = _4 - _4;
_2 = [57_isize,9223372036854775807_isize,(-11_isize),9223372036854775807_isize,59_isize];
RET = -_4;
RET = 79_i8 as f32;
RET = _4;
match _3 {
0 => bb1,
632750090929011476 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
RET = 18825_i16 as f32;
_3 = 4404115375428934459_u64;
_5 = '\u{100562}';
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
RET = (-127_i8) as f32;
_1 = [_3,_3];
RET = (-8375768095802262344_i64) as f32;
_1 = [_3,_3];
RET = _4 - _4;
_3 = 5529949906640705014_u64 & 17854098576669452132_u64;
_1 = [_3,_3];
_4 = -RET;
_6 = [_3,_3,_3,_3];
_6 = [_3,_3,_3,_3];
_5 = '\u{560ba}';
_6 = [_3,_3,_3,_3];
_6 = [_3,_3,_3,_3];
_7 = [4313517408796646629_i64,(-8543047807738762518_i64)];
_5 = '\u{b8cd1}';
_4 = 1_usize as f32;
Goto(bb4)
}
bb4 = {
_7 = [2202244080770012275_i64,(-4273669632496568961_i64)];
_1 = [_3,_3];
_4 = RET;
_1 = [_3,_3];
RET = -_4;
_3 = 906150431_u32 as u64;
RET = -_4;
_6 = [_3,_3,_3,_3];
_1 = [_3,_3];
_7 = [128797596604155964_i64,7150093367942400702_i64];
_3 = true as u64;
RET = _3 as f32;
_3 = 3393417824262421246_u64;
_7 = [(-7139077044588619390_i64),(-2352647563800900885_i64)];
_3 = 157_u8 as u64;
_5 = '\u{41ca2}';
_8 = _4 + _4;
Goto(bb5)
}
bb5 = {
_8 = (-9223372036854775808_isize) as f32;
_2 = [(-9223372036854775808_isize),(-41_isize),9223372036854775807_isize,(-115_isize),9223372036854775807_isize];
_5 = '\u{547e4}';
_1 = [_3,_3];
_7 = [4095861766812292919_i64,4677530064430485677_i64];
_5 = '\u{99212}';
_2 = [9223372036854775807_isize,(-38_isize),(-9223372036854775808_isize),(-67_isize),(-78_isize)];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-12_isize),9223372036854775807_isize,9223372036854775807_isize];
_10 = _5;
_2 = [(-9223372036854775808_isize),(-33_isize),14_isize,40_isize,21_isize];
Goto(bb6)
}
bb6 = {
_10 = _5;
_1 = [_3,_3];
_4 = _8;
Goto(bb7)
}
bb7 = {
_5 = _10;
Call(_6 = fn8(_3, _2, _5), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_10 = _5;
_3 = 14960900171444895713_u64;
_10 = _5;
RET = 3_usize as f32;
_3 = 8879075418000707751_u64 * 16901266926150865823_u64;
_1 = [_3,_3];
RET = _3 as f32;
_13 = [44036_u16,37267_u16,62050_u16,61382_u16,55113_u16,47881_u16,43631_u16];
_3 = 5339758455484319349_u64 * 789562356879127265_u64;
_1 = [_3,_3];
_14 = _4 as f64;
_16 = [_3,_3,_3,_3];
_5 = _10;
RET = _8;
Call(_14 = fn18(_13, _4, _13, _2, _13, _2, _13, _2, _16, RET), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_8 = _4;
_8 = 238_u8 as f32;
_14 = 7_usize as f64;
RET = _3 as f32;
_13 = [7403_u16,6031_u16,53303_u16,63900_u16,64610_u16,28909_u16,31713_u16];
_20 = -(-3_isize);
_19.fld4 = _14 as u8;
_22 = -RET;
_20 = 13702_u16 as isize;
Call(_14 = fn19(_13, _4, _10, _16, _2, RET, _2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_19.fld1 = !45404_u16;
_1 = [_3,_3];
_15 = _14;
_4 = -RET;
_18 = _6;
_19.fld0 = _19.fld4 as i64;
_23 = [true,false,false,false,false,true,false];
RET = _8;
_3 = 13987469188193644058_u64;
_19.fld2 = _3 as f32;
_19.fld1 = 10253_u16 >> _20;
_19.fld0 = 914905763800280404_i64;
_16 = [_3,_3,_3,_3];
_22 = _8;
RET = _19.fld2;
_2 = [_20,_20,_20,_20,_20];
RET = -_4;
_24.2 = _19.fld4 & _19.fld4;
_24.3 = _20 as u32;
_24 = (_14, (-32464376389506865333490853261127064284_i128), _19.fld4, 116938919_u32);
match _24.1 {
0 => bb11,
307817990531431598129883754170641147172 => bb13,
_ => bb12
}
}
bb11 = {
_8 = (-9223372036854775808_isize) as f32;
_2 = [(-9223372036854775808_isize),(-41_isize),9223372036854775807_isize,(-115_isize),9223372036854775807_isize];
_5 = '\u{547e4}';
_1 = [_3,_3];
_7 = [4095861766812292919_i64,4677530064430485677_i64];
_5 = '\u{99212}';
_2 = [9223372036854775807_isize,(-38_isize),(-9223372036854775808_isize),(-67_isize),(-78_isize)];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-12_isize),9223372036854775807_isize,9223372036854775807_isize];
_10 = _5;
_2 = [(-9223372036854775808_isize),(-33_isize),14_isize,40_isize,21_isize];
Goto(bb6)
}
bb12 = {
_10 = _5;
_1 = [_3,_3];
_4 = _8;
Goto(bb7)
}
bb13 = {
_22 = _19.fld0 as f32;
_15 = _24.0;
_16 = [_3,_3,_3,_3];
_24.0 = (-297528177_i32) as f64;
_7 = [_19.fld0,_19.fld0];
_19.fld0 = !(-920962660707289327_i64);
_15 = _24.2 as f64;
_8 = RET;
_18 = _6;
_19.fld4 = _24.2 & _24.2;
_3 = !338613409088042647_u64;
_14 = _15 * _24.0;
_14 = 192704793826295620700500938703929386948_u128 as f64;
RET = _15 as f32;
_10 = _5;
_22 = -_4;
_8 = _22 + _4;
_14 = -_15;
_1 = [_3,_3];
match _24.1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb14,
4 => bb15,
307817990531431598129883754170641147172 => bb17,
_ => bb16
}
}
bb14 = {
RET = 18825_i16 as f32;
_3 = 4404115375428934459_u64;
_5 = '\u{100562}';
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
RET = (-127_i8) as f32;
_1 = [_3,_3];
RET = (-8375768095802262344_i64) as f32;
_1 = [_3,_3];
RET = _4 - _4;
_3 = 5529949906640705014_u64 & 17854098576669452132_u64;
_1 = [_3,_3];
_4 = -RET;
_6 = [_3,_3,_3,_3];
_6 = [_3,_3,_3,_3];
_5 = '\u{560ba}';
_6 = [_3,_3,_3,_3];
_6 = [_3,_3,_3,_3];
_7 = [4313517408796646629_i64,(-8543047807738762518_i64)];
_5 = '\u{b8cd1}';
_4 = 1_usize as f32;
Goto(bb4)
}
bb15 = {
_7 = [2202244080770012275_i64,(-4273669632496568961_i64)];
_1 = [_3,_3];
_4 = RET;
_1 = [_3,_3];
RET = -_4;
_3 = 906150431_u32 as u64;
RET = -_4;
_6 = [_3,_3,_3,_3];
_1 = [_3,_3];
_7 = [128797596604155964_i64,7150093367942400702_i64];
_3 = true as u64;
RET = _3 as f32;
_3 = 3393417824262421246_u64;
_7 = [(-7139077044588619390_i64),(-2352647563800900885_i64)];
_3 = 157_u8 as u64;
_5 = '\u{41ca2}';
_8 = _4 + _4;
Goto(bb5)
}
bb16 = {
_19.fld1 = !45404_u16;
_1 = [_3,_3];
_15 = _14;
_4 = -RET;
_18 = _6;
_19.fld0 = _19.fld4 as i64;
_23 = [true,false,false,false,false,true,false];
RET = _8;
_3 = 13987469188193644058_u64;
_19.fld2 = _3 as f32;
_19.fld1 = 10253_u16 >> _20;
_19.fld0 = 914905763800280404_i64;
_16 = [_3,_3,_3,_3];
_22 = _8;
RET = _19.fld2;
_2 = [_20,_20,_20,_20,_20];
RET = -_4;
_24.2 = _19.fld4 & _19.fld4;
_24.3 = _20 as u32;
_24 = (_14, (-32464376389506865333490853261127064284_i128), _19.fld4, 116938919_u32);
match _24.1 {
0 => bb11,
307817990531431598129883754170641147172 => bb13,
_ => bb12
}
}
bb17 = {
RET = _19.fld2;
_19.fld4 = _24.2;
_19.fld0 = -(-5647572244789263232_i64);
_3 = 11635031446782452847_u64 & 2941621846651639512_u64;
_16 = [_3,_3,_3,_3];
_24.2 = _19.fld4 | _19.fld4;
_15 = _8 as f64;
_3 = 14765009386160400399_u64;
_14 = _24.1 as f64;
_26 = -_20;
_16 = [_3,_3,_3,_3];
RET = _8 * _8;
_19.fld0 = !(-4139010673352999373_i64);
_24.0 = -_14;
_8 = RET + RET;
_28 = _10;
_24.2 = 113_i8 as u8;
Goto(bb18)
}
bb18 = {
Call(_31 = dump_var(7_usize, 1_usize, Move(_1), 13_usize, Move(_13), 20_usize, Move(_20), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(7_usize, 3_usize, Move(_3), 23_usize, Move(_23), 7_usize, Move(_7), 32_usize, _32), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: u64,mut _2: [isize; 5],mut _3: char) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _4: isize;
let _5: bool;
let _6: isize;
let _7: [isize; 1];
let _8: [bool; 7];
let _9: [u64; 2];
let _10: bool;
let _11: f32;
let _12: *const bool;
let _13: u128;
let _14: Adt54;
let _15: ([isize; 5], f64);
let _16: [char; 3];
let _17: char;
let _18: [u64; 2];
let _19: bool;
let _20: i32;
let _21: f32;
let _22: char;
let _23: *const bool;
let _24: isize;
let _25: Adt47;
let _26: i64;
let _27: ();
let _28: ();
{
_1 = !9699742880309617744_u64;
RET = [_1,_1,_1,_1];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),12_isize,(-9223372036854775808_isize),44_isize];
_1 = 9404616733729568248_u64 * 4657853254609087516_u64;
RET = [_1,_1,_1,_1];
_1 = 4791539392691754655_u64 ^ 515471833587758538_u64;
_2 = [85_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = !508796005975013914_u64;
RET = [_1,_1,_1,_1];
_4 = (-9223372036854775808_isize);
_4 = 9532_i16 as isize;
RET = [_1,_1,_1,_1];
_4 = -(-73_isize);
_3 = '\u{80e7}';
_4 = 9223372036854775807_isize - 9223372036854775807_isize;
_5 = false;
_3 = '\u{6f30a}';
RET = [_1,_1,_1,_1];
RET = [_1,_1,_1,_1];
_4 = (-9223372036854775808_isize);
Goto(bb1)
}
bb1 = {
_5 = _1 == _1;
_1 = 9724905319669346677_u64 ^ 17804474505323348160_u64;
_5 = true & true;
RET = [_1,_1,_1,_1];
RET = [_1,_1,_1,_1];
_5 = true;
_4 = (-9223372036854775808_isize) << _1;
_2 = [_4,_4,_4,_4,_4];
_3 = '\u{b5787}';
_3 = '\u{625b8}';
_1 = 17204614197330781107_u64 - 3414578323560627266_u64;
_3 = '\u{5b427}';
_5 = !true;
RET = [_1,_1,_1,_1];
_7 = [_4];
_1 = 10577535422283361220_u64 & 3507961080367547384_u64;
RET = [_1,_1,_1,_1];
Call(_6 = fn9(RET, _2, _2, _5, _4, _7, _2, _3, _2, _4, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = [_6];
_2 = [_6,_6,_6,_6,_4];
_5 = false;
Goto(bb3)
}
bb3 = {
_6 = _1 as isize;
_2 = [_4,_6,_4,_4,_6];
_8 = [_5,_5,_5,_5,_5,_5,_5];
_2 = [_6,_4,_6,_6,_6];
_7 = [_4];
_5 = false;
_9 = [_1,_1];
_9 = [_1,_1];
_7 = [_4];
_9 = [_1,_1];
_7 = [_4];
RET = [_1,_1,_1,_1];
_3 = '\u{9386e}';
RET = [_1,_1,_1,_1];
_1 = _6 as u64;
_11 = (-568291013_i32) as f32;
_8 = [_5,_5,_5,_5,_5,_5,_5];
_10 = _5;
_4 = _6;
_7 = [_4];
_5 = _10 & _10;
Goto(bb4)
}
bb4 = {
_5 = _10 | _10;
_7 = [_4];
_14.fld4 = !61_u8;
_6 = _4;
_17 = _3;
_17 = _3;
Call(_15.0 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_13 = 327772618511565645940734490624914489349_u128 - 20668531598965333149342310676572889948_u128;
_2 = _15.0;
_16 = [_17,_3,_17];
_20 = (-1218415683_i32);
_12 = core::ptr::addr_of!(_5);
_1 = 14856725223944355293_u64;
_2 = _15.0;
_14.fld2 = _11 * _11;
_21 = _14.fld2 - _14.fld2;
_10 = (*_12);
_15.1 = _14.fld4 as f64;
_14.fld0 = (-1642904724350406935_i64);
_14.fld3.0 = core::ptr::addr_of!(_20);
_19 = !_5;
_6 = _15.1 as isize;
_21 = _14.fld2 * _14.fld2;
match _1 {
0 => bb1,
1 => bb4,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
14856725223944355293 => bb12,
_ => bb11
}
}
bb6 = {
_5 = _10 | _10;
_7 = [_4];
_14.fld4 = !61_u8;
_6 = _4;
_17 = _3;
_17 = _3;
Call(_15.0 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_6 = _1 as isize;
_2 = [_4,_6,_4,_4,_6];
_8 = [_5,_5,_5,_5,_5,_5,_5];
_2 = [_6,_4,_6,_6,_6];
_7 = [_4];
_5 = false;
_9 = [_1,_1];
_9 = [_1,_1];
_7 = [_4];
_9 = [_1,_1];
_7 = [_4];
RET = [_1,_1,_1,_1];
_3 = '\u{9386e}';
RET = [_1,_1,_1,_1];
_1 = _6 as u64;
_11 = (-568291013_i32) as f32;
_8 = [_5,_5,_5,_5,_5,_5,_5];
_10 = _5;
_4 = _6;
_7 = [_4];
_5 = _10 & _10;
Goto(bb4)
}
bb8 = {
_7 = [_6];
_2 = [_6,_6,_6,_6,_4];
_5 = false;
Goto(bb3)
}
bb9 = {
_5 = _1 == _1;
_1 = 9724905319669346677_u64 ^ 17804474505323348160_u64;
_5 = true & true;
RET = [_1,_1,_1,_1];
RET = [_1,_1,_1,_1];
_5 = true;
_4 = (-9223372036854775808_isize) << _1;
_2 = [_4,_4,_4,_4,_4];
_3 = '\u{b5787}';
_3 = '\u{625b8}';
_1 = 17204614197330781107_u64 - 3414578323560627266_u64;
_3 = '\u{5b427}';
_5 = !true;
RET = [_1,_1,_1,_1];
_7 = [_4];
_1 = 10577535422283361220_u64 & 3507961080367547384_u64;
RET = [_1,_1,_1,_1];
Call(_6 = fn9(RET, _2, _2, _5, _4, _7, _2, _3, _2, _4, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_14.fld1 = 30513_u16 | 33022_u16;
_11 = -_14.fld2;
_20 = !1792510929_i32;
match _14.fld0 {
0 => bb1,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463461731702707417804521 => bb19,
_ => bb18
}
}
bb13 = {
_5 = _1 == _1;
_1 = 9724905319669346677_u64 ^ 17804474505323348160_u64;
_5 = true & true;
RET = [_1,_1,_1,_1];
RET = [_1,_1,_1,_1];
_5 = true;
_4 = (-9223372036854775808_isize) << _1;
_2 = [_4,_4,_4,_4,_4];
_3 = '\u{b5787}';
_3 = '\u{625b8}';
_1 = 17204614197330781107_u64 - 3414578323560627266_u64;
_3 = '\u{5b427}';
_5 = !true;
RET = [_1,_1,_1,_1];
_7 = [_4];
_1 = 10577535422283361220_u64 & 3507961080367547384_u64;
RET = [_1,_1,_1,_1];
Call(_6 = fn9(RET, _2, _2, _5, _4, _7, _2, _3, _2, _4, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
_5 = _10 | _10;
_7 = [_4];
_14.fld4 = !61_u8;
_6 = _4;
_17 = _3;
_17 = _3;
Call(_15.0 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_7 = [_6];
_2 = [_6,_6,_6,_6,_4];
_5 = false;
Goto(bb3)
}
bb17 = {
_6 = _1 as isize;
_2 = [_4,_6,_4,_4,_6];
_8 = [_5,_5,_5,_5,_5,_5,_5];
_2 = [_6,_4,_6,_6,_6];
_7 = [_4];
_5 = false;
_9 = [_1,_1];
_9 = [_1,_1];
_7 = [_4];
_9 = [_1,_1];
_7 = [_4];
RET = [_1,_1,_1,_1];
_3 = '\u{9386e}';
RET = [_1,_1,_1,_1];
_1 = _6 as u64;
_11 = (-568291013_i32) as f32;
_8 = [_5,_5,_5,_5,_5,_5,_5];
_10 = _5;
_4 = _6;
_7 = [_4];
_5 = _10 & _10;
Goto(bb4)
}
bb18 = {
_6 = _1 as isize;
_2 = [_4,_6,_4,_4,_6];
_8 = [_5,_5,_5,_5,_5,_5,_5];
_2 = [_6,_4,_6,_6,_6];
_7 = [_4];
_5 = false;
_9 = [_1,_1];
_9 = [_1,_1];
_7 = [_4];
_9 = [_1,_1];
_7 = [_4];
RET = [_1,_1,_1,_1];
_3 = '\u{9386e}';
RET = [_1,_1,_1,_1];
_1 = _6 as u64;
_11 = (-568291013_i32) as f32;
_8 = [_5,_5,_5,_5,_5,_5,_5];
_10 = _5;
_4 = _6;
_7 = [_4];
_5 = _10 & _10;
Goto(bb4)
}
bb19 = {
_11 = _14.fld2 - _21;
_24 = _6;
_10 = !_5;
_14.fld1 = !65249_u16;
RET = [_1,_1,_1,_1];
_16 = [_17,_17,_3];
_22 = _17;
_21 = _11 + _14.fld2;
_15.0 = [_4,_6,_6,_6,_6];
_3 = _22;
_5 = !_10;
_2 = [_4,_6,_4,_24,_4];
_12 = core::ptr::addr_of!(_5);
_20 = 248775585_i32 >> _14.fld4;
_13 = 284112944879025581939359766762811018147_u128;
_14.fld3.0 = core::ptr::addr_of!(_20);
_14.fld2 = -_21;
_15.0 = [_24,_4,_24,_4,_24];
_14.fld1 = !50557_u16;
Goto(bb20)
}
bb20 = {
Call(_27 = dump_var(8_usize, 10_usize, Move(_10), 3_usize, Move(_3), 8_usize, Move(_8), 4_usize, Move(_4)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_27 = dump_var(8_usize, 19_usize, Move(_19), 17_usize, Move(_17), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [u64; 4],mut _2: [isize; 5],mut _3: [isize; 5],mut _4: bool,mut _5: isize,mut _6: [isize; 1],mut _7: [isize; 5],mut _8: char,mut _9: [isize; 5],mut _10: isize,mut _11: isize) -> isize {
mir! {
type RET = isize;
let _12: i8;
let _13: ([isize; 5], f64);
let _14: bool;
let _15: isize;
let _16: [i8; 1];
let _17: [isize; 5];
let _18: Adt56;
let _19: bool;
let _20: ();
let _21: ();
{
_4 = false;
_3 = _9;
_13.0 = [_10,_10,_11,_11,_10];
_7 = _2;
_10 = (-5451635513181351951_i64) as isize;
_8 = '\u{d9c69}';
_13.1 = 5988626513894458442_usize as f64;
_13.1 = 61_u8 as f64;
_7 = [_11,_11,_5,_5,_11];
_13.1 = 0_usize as f64;
_8 = '\u{de055}';
_12 = -24_i8;
RET = _5;
RET = -_5;
_9 = [_11,_11,_5,_11,_5];
_7 = _9;
_13.1 = 1988454588_u32 as f64;
_5 = -_10;
_12 = 58_i8 << _11;
RET = 241098793910960491833815946644721159580_u128 as isize;
_8 = '\u{ff7a9}';
_13.0 = [_11,_5,RET,_11,_10];
_9 = _2;
RET = !_11;
_12 = (-5_i8);
Call(RET = fn10(_3, _7, _6, _10, _13.0, _13.0, _12, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = '\u{336e6}';
_9 = _2;
_3 = _2;
_3 = [_5,RET,RET,RET,RET];
_5 = RET ^ RET;
_6 = [_5];
_14 = !_4;
_12 = _14 as i8;
RET = !_5;
_8 = '\u{97280}';
RET = _5;
_6 = [RET];
_15 = 59562_u16 as isize;
Goto(bb2)
}
bb2 = {
Call(_20 = dump_var(9_usize, 8_usize, Move(_8), 9_usize, Move(_9), 2_usize, Move(_2), 14_usize, Move(_14)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_20 = dump_var(9_usize, 6_usize, Move(_6), 4_usize, Move(_4), 5_usize, Move(_5), 21_usize, _21), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [isize; 5],mut _2: [isize; 5],mut _3: [isize; 1],mut _4: isize,mut _5: [isize; 5],mut _6: [isize; 5],mut _7: i8,mut _8: [isize; 1]) -> isize {
mir! {
type RET = isize;
let _9: [char; 3];
let _10: Adt57;
let _11: char;
let _12: [u64; 4];
let _13: [u64; 4];
let _14: [u64; 4];
let _15: *const u8;
let _16: Adt53;
let _17: ([isize; 5], f64);
let _18: isize;
let _19: Adt52;
let _20: bool;
let _21: f64;
let _22: *const i32;
let _23: isize;
let _24: [isize; 8];
let _25: Adt45;
let _26: ();
let _27: ();
{
_2 = _1;
Goto(bb1)
}
bb1 = {
_3 = [_4];
_3 = [_4];
_4 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
RET = !_4;
_7 = 5162243058686193976_u64 as i8;
_5 = _2;
RET = _4;
_2 = _1;
_2 = [_4,_4,_4,RET,_4];
_9 = ['\u{d402d}','\u{78eb}','\u{103e37}'];
_4 = RET;
_11 = '\u{74dd8}';
_7 = !104_i8;
_7 = -(-34_i8);
_6 = [_4,_4,_4,RET,_4];
RET = (-21477_i16) as isize;
_6 = [_4,RET,RET,RET,_4];
_2 = [RET,_4,RET,_4,_4];
_3 = [RET];
_8 = [_4];
RET = 124172422595841566435286658661703321340_u128 as isize;
_3 = [_4];
RET = 1128846757_i32 as isize;
_12 = [4834798816027396520_u64,10168392430578004242_u64,16979892717256795678_u64,2630890636497604568_u64];
_13 = [286206276385499216_u64,7078623368208683602_u64,8128035838698581238_u64,11621213096118955254_u64];
_1 = [_4,_4,_4,_4,RET];
Goto(bb2)
}
bb2 = {
_3 = [_4];
RET = _4 << _4;
_12 = _13;
_14 = [11030437963163593944_u64,5017444667771430757_u64,474511991387598346_u64,2295186461630376210_u64];
_3 = [_4];
_11 = '\u{be354}';
_6 = [_4,RET,_4,RET,RET];
_13 = _12;
RET = _4;
_8 = [_4];
RET = _4;
_17.1 = _7 as f64;
_13 = [2158836140888929747_u64,14722493853537916595_u64,6799116841531067780_u64,10500564217423715343_u64];
RET = -_4;
Call(_12 = fn11(_6, _4, _5, _14, _6, _6, _4, _11, _9, _4, _3, _6, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_17.0 = [_4,RET,_4,RET,_4];
RET = -_4;
RET = -_4;
_11 = '\u{a1ccf}';
_17.0 = _1;
_2 = [RET,_4,RET,RET,RET];
_8 = [_4];
_18 = RET << _4;
_4 = _18;
_14 = [4286349613549245286_u64,2627039178368364495_u64,17423097319299768869_u64,1849765881847939570_u64];
Goto(bb4)
}
bb4 = {
_13 = [2416162576685831247_u64,2330399121184852699_u64,11768571969416642009_u64,11982151072727962892_u64];
_3 = [_18];
RET = -_4;
_14 = _12;
_4 = !RET;
_4 = _18;
_7 = 12_i8;
RET = _4;
_18 = -RET;
_5 = [_4,_4,_18,_4,RET];
_3 = _8;
_7 = 120_u8 as i8;
_5 = [_18,_18,_4,RET,_18];
_18 = _4;
Goto(bb5)
}
bb5 = {
_12 = [18271412463293129146_u64,12205069871867154560_u64,8518446378823758206_u64,14614899547025810396_u64];
_21 = -_17.1;
_21 = RET as f64;
_7 = -(-51_i8);
_6 = _1;
_9 = [_11,_11,_11];
_12 = [14880292493162026576_u64,17441337346054259690_u64,3019109316530906234_u64,4138168963226662732_u64];
RET = _4 >> _4;
_17 = (_5, _21);
_23 = 13674479297343149628680531992141786311_u128 as isize;
_1 = [_4,_4,_18,_18,RET];
_14 = _12;
_1 = [_4,_23,RET,RET,RET];
_2 = [_18,_18,RET,RET,_4];
_2 = [_18,RET,RET,_18,RET];
_19 = Adt52::Variant1 { fld0: _17 };
_20 = true ^ false;
_3 = [RET];
_1 = [_4,RET,RET,_18,_18];
Call(RET = fn17(_3, _14, Field::<([isize; 5], f64)>(Variant(_19, 1), 0).0, _1, _4, _2, _4, _11, _17.0, Field::<([isize; 5], f64)>(Variant(_19, 1), 0).0, _4, _1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_11 = '\u{ca35f}';
_17 = (_6, Field::<([isize; 5], f64)>(Variant(_19, 1), 0).1);
place!(Field::<([isize; 5], f64)>(Variant(_19, 1), 0)).0 = _2;
_4 = 294147632646114330381812495930967044688_u128 as isize;
_1 = [RET,RET,RET,RET,RET];
Goto(bb7)
}
bb7 = {
Call(_26 = dump_var(10_usize, 14_usize, Move(_14), 13_usize, Move(_13), 11_usize, Move(_11), 1_usize, Move(_1)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_26 = dump_var(10_usize, 5_usize, Move(_5), 2_usize, Move(_2), 9_usize, Move(_9), 18_usize, Move(_18)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [isize; 5],mut _2: isize,mut _3: [isize; 5],mut _4: [u64; 4],mut _5: [isize; 5],mut _6: [isize; 5],mut _7: isize,mut _8: char,mut _9: [char; 3],mut _10: isize,mut _11: [isize; 1],mut _12: [isize; 5],mut _13: [isize; 1]) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _14: [i8; 1];
let _15: Adt45;
let _16: Adt54;
let _17: (*const i32,);
let _18: bool;
let _19: isize;
let _20: u128;
let _21: isize;
let _22: Adt55;
let _23: [u64; 2];
let _24: [usize; 5];
let _25: char;
let _26: f32;
let _27: [u16; 7];
let _28: usize;
let _29: *mut isize;
let _30: &'static u128;
let _31: usize;
let _32: [i32; 3];
let _33: [isize; 8];
let _34: isize;
let _35: i32;
let _36: [u16; 7];
let _37: ([isize; 5], f64);
let _38: isize;
let _39: ([isize; 5], f64);
let _40: isize;
let _41: Adt48;
let _42: [usize; 5];
let _43: [u64; 4];
let _44: u16;
let _45: u16;
let _46: u32;
let _47: isize;
let _48: isize;
let _49: bool;
let _50: [i32; 3];
let _51: isize;
let _52: [i32; 3];
let _53: [usize; 5];
let _54: isize;
let _55: i16;
let _56: i16;
let _57: [u64; 2];
let _58: ();
let _59: ();
{
_2 = _10 & _7;
_3 = [_10,_10,_2,_7,_2];
_10 = _8 as isize;
_12 = [_2,_2,_2,_2,_7];
_4 = [12698826721126110094_u64,8316409154300973343_u64,7493425909713794365_u64,12123197913212094991_u64];
_1 = _3;
Goto(bb1)
}
bb1 = {
RET = [17897939506435027197_u64,8734527561220693115_u64,8484265704590220114_u64,16501185885631731092_u64];
_11 = [_2];
_5 = [_10,_10,_2,_7,_7];
_14 = [(-31_i8)];
_13 = [_2];
_14 = [(-106_i8)];
_3 = [_2,_2,_2,_10,_2];
_6 = [_2,_2,_7,_2,_7];
_5 = _1;
_6 = [_2,_7,_2,_2,_2];
Call(_12 = fn12(_5, RET, _3, _6, RET, _13, _6, _2, _4, _13, _4, _8, _1, _14, _7, _11), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = _7;
_13 = _11;
_13 = [_10];
_14 = [67_i8];
_16.fld0 = (-3922796417026304369_i64) >> _2;
_1 = [_10,_2,_2,_2,_7];
_1 = [_2,_7,_10,_7,_7];
Call(_16.fld3 = fn13(_16.fld0, _12, _5, _12, _3, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = [_10,_2,_7,_2,_10];
_12 = [_2,_7,_2,_2,_2];
_14 = [(-125_i8)];
RET = [10706901599114790295_u64,13661873843275296687_u64,8288186110768598099_u64,6643206081825100456_u64];
_7 = !_2;
_2 = _10 | _10;
_12 = [_7,_7,_2,_7,_2];
_2 = _7 + _7;
_16.fld2 = _10 as f32;
_16.fld1 = _16.fld0 as u16;
_3 = _6;
_5 = [_10,_2,_2,_7,_2];
_10 = _7 * _7;
_11 = [_10];
_16.fld2 = (-435815108_i32) as f32;
_5 = [_7,_10,_10,_10,_10];
_9 = [_8,_8,_8];
_7 = _10;
Goto(bb4)
}
bb4 = {
_12 = [_10,_10,_2,_7,_2];
_13 = [_2];
_4 = RET;
_8 = '\u{dda8d}';
_2 = _16.fld0 as isize;
_17 = (_16.fld3.0,);
_1 = _5;
_11 = [_10];
_18 = _2 > _10;
_4 = RET;
_4 = RET;
_11 = [_10];
_9 = [_8,_8,_8];
_1 = [_10,_10,_10,_10,_7];
_13 = [_10];
_1 = [_10,_7,_7,_10,_10];
_16.fld4 = (-14086_i16) as u8;
_7 = (-109338820393424289246238717905766681013_i128) as isize;
_7 = !_2;
_14 = [103_i8];
_3 = _1;
Goto(bb5)
}
bb5 = {
_16.fld3 = (_17.0,);
_3 = _1;
RET = _4;
Goto(bb6)
}
bb6 = {
_19 = !_7;
_16.fld3.0 = _17.0;
_3 = [_2,_19,_2,_10,_19];
_20 = !107648707621339349809296761868300585841_u128;
_20 = 1741109952_i32 as u128;
_20 = 183370104025593003424960396846865744684_u128 ^ 120953838043589150497614659999078746924_u128;
_1 = [_19,_7,_7,_10,_19];
_23 = [10765296699610302746_u64,2129092227347314162_u64];
_15 = Adt45::Variant0 { fld0: _1 };
place!(Field::<[isize; 5]>(Variant(_15, 0), 0)) = _1;
_25 = _8;
SetDiscriminant(_15, 0);
_2 = !_19;
_19 = !_2;
_25 = _8;
_14 = [(-45_i8)];
_7 = _20 as isize;
_27 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1];
_14 = [61_i8];
_19 = -_2;
_28 = _16.fld2 as usize;
_5 = [_2,_10,_7,_19,_2];
_23 = [3939463819380721108_u64,15468801836478698789_u64];
_16.fld4 = _16.fld0 as u8;
_17 = (_16.fld3.0,);
Call(_23 = core::intrinsics::transmute(_20), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_16.fld4 = 252_u8;
_9 = [_8,_25,_25];
_5 = _6;
_6 = [_10,_10,_10,_10,_10];
_19 = _10;
_5 = [_19,_7,_19,_10,_10];
_9 = [_25,_25,_25];
_8 = _25;
RET = [16314302829787580880_u64,15134540211020178184_u64,12591483072166560192_u64,2928267657284402650_u64];
_29 = core::ptr::addr_of_mut!(_2);
_3 = [_2,(*_29),_2,_2,_2];
_5 = _1;
RET = [13057227588821845566_u64,9418720258332518713_u64,8758532030356149852_u64,9517559192922435640_u64];
Call(place!(Field::<[isize; 5]>(Variant(_15, 0), 0)) = core::intrinsics::transmute(_12), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
SetDiscriminant(_15, 0);
_27 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1];
_16.fld4 = 174_u8;
_21 = _10 & _7;
_29 = core::ptr::addr_of_mut!(_2);
_16.fld4 = 123_u8 << _21;
_14 = [(-56_i8)];
_31 = _16.fld1 as usize;
_11 = _13;
_3 = _6;
_16.fld3.0 = _17.0;
_28 = !_31;
_16.fld4 = !49_u8;
_1 = [_10,_21,_21,_2,_21];
Goto(bb9)
}
bb9 = {
_16.fld4 = _31 as u8;
_24 = [_28,_28,_31,_31,_31];
_26 = _16.fld2 - _16.fld2;
_31 = !_28;
Goto(bb10)
}
bb10 = {
_16.fld2 = _26;
place!(Field::<[isize; 5]>(Variant(_15, 0), 0)) = [(*_29),_10,(*_29),_19,(*_29)];
_29 = core::ptr::addr_of_mut!(_34);
_6 = [_21,_21,_10,_7,_7];
_25 = _8;
_38 = _19;
_35 = 1810171609_i32;
_37.1 = _16.fld0 as f64;
Goto(bb11)
}
bb11 = {
_34 = !_7;
RET = [1621630277316923247_u64,10330234292773498083_u64,12156465512994523868_u64,12810795986588453581_u64];
_37.0 = _3;
_15 = Adt45::Variant0 { fld0: _1 };
_39 = _37;
_18 = false;
RET = [14894796608844777373_u64,7572759637270312990_u64,6226188630083945824_u64,7107406634348411072_u64];
_28 = _31 * _31;
SetDiscriminant(_15, 2);
_17 = (_16.fld3.0,);
place!(Field::<usize>(Variant(_15, 2), 1)) = _28 ^ _28;
_15 = Adt45::Variant0 { fld0: _37.0 };
_26 = _16.fld2 * _16.fld2;
_38 = !_2;
_28 = _31 * _31;
_3 = [_10,_21,_21,_21,_38];
_9 = [_8,_8,_8];
_16.fld1 = _38 as u16;
_36 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1];
_38 = _19 + _19;
_16.fld0 = (-14169_i16) as i64;
_11 = [_21];
_3 = _1;
_17.0 = _16.fld3.0;
Call(_11 = core::intrinsics::transmute(_19), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_43 = [18351136293934355127_u64,9143720121534257058_u64,5812293787013078344_u64,2009172140187680184_u64];
_39 = (_1, _37.1);
_30 = &_20;
_26 = -_16.fld2;
_32 = [_35,_35,_35];
_13 = _11;
_29 = core::ptr::addr_of_mut!(_2);
_11 = [_38];
_25 = _8;
_36 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1];
_38 = -(*_29);
match _35 {
0 => bb10,
1 => bb4,
2 => bb13,
3 => bb14,
4 => bb15,
1810171609 => bb17,
_ => bb16
}
}
bb13 = {
_12 = [_10,_10,_2,_7,_2];
_13 = [_2];
_4 = RET;
_8 = '\u{dda8d}';
_2 = _16.fld0 as isize;
_17 = (_16.fld3.0,);
_1 = _5;
_11 = [_10];
_18 = _2 > _10;
_4 = RET;
_4 = RET;
_11 = [_10];
_9 = [_8,_8,_8];
_1 = [_10,_10,_10,_10,_7];
_13 = [_10];
_1 = [_10,_7,_7,_10,_10];
_16.fld4 = (-14086_i16) as u8;
_7 = (-109338820393424289246238717905766681013_i128) as isize;
_7 = !_2;
_14 = [103_i8];
_3 = _1;
Goto(bb5)
}
bb14 = {
_16.fld3 = (_17.0,);
_3 = _1;
RET = _4;
Goto(bb6)
}
bb15 = {
_16.fld4 = _31 as u8;
_24 = [_28,_28,_31,_31,_31];
_26 = _16.fld2 - _16.fld2;
_31 = !_28;
Goto(bb10)
}
bb16 = {
SetDiscriminant(_15, 0);
_27 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1];
_16.fld4 = 174_u8;
_21 = _10 & _7;
_29 = core::ptr::addr_of_mut!(_2);
_16.fld4 = 123_u8 << _21;
_14 = [(-56_i8)];
_31 = _16.fld1 as usize;
_11 = _13;
_3 = _6;
_16.fld3.0 = _17.0;
_28 = !_31;
_16.fld4 = !49_u8;
_1 = [_10,_21,_21,_2,_21];
Goto(bb9)
}
bb17 = {
_16.fld2 = _26 * _26;
_32 = [_35,_35,_35];
RET = [17785609814223603066_u64,12778592118113196565_u64,15654380558241679094_u64,13079558869006369350_u64];
_30 = &_20;
_2 = _25 as isize;
_19 = _7 - _34;
_8 = _25;
_26 = -_16.fld2;
_39.0 = [_10,_21,_34,_19,_10];
_47 = (-100075583996701802721342389594489554998_i128) as isize;
_6 = Field::<[isize; 5]>(Variant(_15, 0), 0);
_39.0 = _12;
_11 = _13;
_16.fld3.0 = _17.0;
_2 = -_21;
_2 = _21 >> (*_30);
_46 = _35 as u32;
Goto(bb18)
}
bb18 = {
Call(_58 = dump_var(11_usize, 47_usize, Move(_47), 7_usize, Move(_7), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_58 = dump_var(11_usize, 18_usize, Move(_18), 27_usize, Move(_27), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_58 = dump_var(11_usize, 13_usize, Move(_13), 19_usize, Move(_19), 8_usize, Move(_8), 24_usize, Move(_24)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_58 = dump_var(11_usize, 23_usize, Move(_23), 36_usize, Move(_36), 14_usize, Move(_14), 10_usize, Move(_10)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [isize; 5],mut _2: [u64; 4],mut _3: [isize; 5],mut _4: [isize; 5],mut _5: [u64; 4],mut _6: [isize; 1],mut _7: [isize; 5],mut _8: isize,mut _9: [u64; 4],mut _10: [isize; 1],mut _11: [u64; 4],mut _12: char,mut _13: [isize; 5],mut _14: [i8; 1],mut _15: isize,mut _16: [isize; 1]) -> [isize; 5] {
mir! {
type RET = [isize; 5];
let _17: i32;
let _18: u128;
let _19: i8;
let _20: bool;
let _21: [bool; 7];
let _22: i64;
let _23: *const i32;
let _24: i8;
let _25: Adt45;
let _26: Adt53;
let _27: Adt43;
let _28: isize;
let _29: u128;
let _30: [i32; 3];
let _31: ();
let _32: ();
{
_10 = _6;
_14 = [112_i8];
_14 = [65_i8];
_9 = [8554148557562625265_u64,7687745966172156357_u64,439313703586095429_u64,5133368843035137409_u64];
_4 = [_8,_8,_15,_8,_8];
_17 = !(-1805564286_i32);
_7 = [_15,_8,_15,_8,_8];
_3 = [_8,_8,_8,_8,_8];
RET = [_8,_15,_15,_15,_15];
_6 = [_8];
_14 = [80_i8];
_3 = _1;
_13 = _3;
_2 = [13777578085333518912_u64,4820167800161594192_u64,12530733471898289555_u64,1401161782886966464_u64];
_14 = [(-89_i8)];
_15 = _8;
_3 = [_8,_8,_8,_8,_15];
_3 = [_8,_15,_15,_15,_8];
RET = [_15,_8,_15,_8,_15];
_15 = _8;
_2 = _5;
_13 = [_8,_15,_8,_8,_8];
_17 = (-17114_i16) as i32;
_1 = [_15,_15,_15,_15,_15];
_11 = _9;
_6 = [_8];
_9 = [6495923682504179086_u64,3378018342045745522_u64,10219195060053048633_u64,13252425460580495937_u64];
Goto(bb1)
}
bb1 = {
_2 = [8000373108168544108_u64,1808755683233585266_u64,5249776475649719121_u64,4993601528083492386_u64];
_15 = (-22316_i16) as isize;
_11 = _9;
_19 = -(-76_i8);
_18 = 258439425381535803373368146980921806327_u128;
_16 = [_8];
_5 = [11040172674058638461_u64,15018945870742914388_u64,4870344872670333240_u64,11354432165804889255_u64];
_10 = [_8];
_7 = [_8,_8,_8,_8,_8];
_16 = _10;
_11 = _5;
_19 = _12 as i8;
_5 = [15789690469437886305_u64,17587549039028902789_u64,1210513697033452256_u64,11481808184815327171_u64];
_1 = [_8,_8,_15,_15,_8];
_15 = _8 << _8;
_16 = [_8];
_11 = _2;
_9 = [1741730933198925238_u64,10628737645054074471_u64,11937611742739023519_u64,2677487688918897335_u64];
_17 = -1620593190_i32;
RET = _1;
_19 = !123_i8;
_2 = [8835524116210548609_u64,2496340765834558053_u64,7837600603973170668_u64,646915965161272361_u64];
_1 = [_15,_15,_8,_8,_15];
_20 = !true;
_1 = [_8,_15,_15,_15,_15];
_11 = [18239201080340621232_u64,8038525310685263744_u64,18096735190531642939_u64,16850215451988223800_u64];
Goto(bb2)
}
bb2 = {
_21 = [_20,_20,_20,_20,_20,_20,_20];
_11 = [14661647440523115808_u64,5492918576023954784_u64,17875558576785726250_u64,12896517903486914259_u64];
RET = [_8,_15,_15,_8,_15];
_4 = [_8,_15,_15,_15,_8];
_10 = _16;
_4 = [_8,_15,_15,_15,_8];
_8 = _15 << _15;
_18 = 170038166905643096765795589852911466154_u128;
RET = _4;
_2 = [14179994256181800215_u64,2711042366408573547_u64,6129313192410628400_u64,5045750571835450235_u64];
_23 = core::ptr::addr_of!(_17);
_21 = [_20,_20,_20,_20,_20,_20,_20];
Goto(bb3)
}
bb3 = {
_18 = !318961328793280930600689671759433488186_u128;
_15 = !_8;
_24 = -_19;
_14 = [_24];
_14 = [_19];
_2 = [4296257213528373764_u64,4169692544800070162_u64,9593812833173541696_u64,11686716350302629857_u64];
_28 = !_8;
_21 = [_20,_20,_20,_20,_20,_20,_20];
_1 = _3;
RET = [_8,_15,_15,_28,_8];
_9 = _2;
_14 = [_24];
_22 = 3146890404999891299_i64 * 1312302371300602329_i64;
_21 = [_20,_20,_20,_20,_20,_20,_20];
_21 = [_20,_20,_20,_20,_20,_20,_20];
_20 = _28 < _15;
_29 = _18 * _18;
_6 = [_15];
Goto(bb4)
}
bb4 = {
Call(_31 = dump_var(12_usize, 22_usize, Move(_22), 28_usize, Move(_28), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_31 = dump_var(12_usize, 6_usize, Move(_6), 12_usize, Move(_12), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_31 = dump_var(12_usize, 19_usize, Move(_19), 11_usize, Move(_11), 29_usize, Move(_29), 3_usize, Move(_3)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: i64,mut _2: [isize; 5],mut _3: [isize; 5],mut _4: [isize; 5],mut _5: [isize; 5],mut _6: [isize; 5],mut _7: [isize; 5]) -> (*const i32,) {
mir! {
type RET = (*const i32,);
let _8: [u64; 2];
let _9: f32;
let _10: f64;
let _11: [u16; 7];
let _12: Adt44;
let _13: isize;
let _14: [isize; 8];
let _15: Adt55;
let _16: ([isize; 5], f64);
let _17: [u64; 2];
let _18: [isize; 5];
let _19: [isize; 8];
let _20: char;
let _21: usize;
let _22: f32;
let _23: u128;
let _24: i64;
let _25: isize;
let _26: char;
let _27: bool;
let _28: [u64; 4];
let _29: [u16; 7];
let _30: char;
let _31: u8;
let _32: [u64; 2];
let _33: i16;
let _34: [i8; 1];
let _35: char;
let _36: Adt56;
let _37: [i8; 1];
let _38: bool;
let _39: Adt51;
let _40: u128;
let _41: i64;
let _42: u128;
let _43: isize;
let _44: [isize; 8];
let _45: [char; 3];
let _46: i64;
let _47: Adt59;
let _48: ();
let _49: ();
{
_6 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
Call(_7 = fn14(_3, _4, _4, _2, _2, _4, _4, _4, _6, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _6;
_8 = [10361823766962348726_u64,3285420977518499802_u64];
_9 = 13199533991725216171_u64 as f32;
_1 = 8619395391834879305_i64 ^ 7803566224549152231_i64;
_10 = (-99463087980531760601453816574840442161_i128) as f64;
_4 = [(-59_isize),9223372036854775807_isize,(-119_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_4 = [9223372036854775807_isize,9223372036854775807_isize,111_isize,5_isize,(-9223372036854775808_isize)];
_9 = 31_i8 as f32;
_6 = [101_isize,9223372036854775807_isize,(-31_isize),9223372036854775807_isize,9223372036854775807_isize];
_5 = _3;
_11 = [13428_u16,56343_u16,64325_u16,62080_u16,28599_u16,62405_u16,8594_u16];
_2 = _4;
_12.fld1 = 16369382009958455431_u64 as f64;
Goto(bb2)
}
bb2 = {
_12.fld5 = false as u64;
Goto(bb3)
}
bb3 = {
_9 = 3661398084_u32 as f32;
_11 = [31186_u16,52865_u16,25383_u16,35316_u16,48811_u16,28076_u16,32669_u16];
_1 = (-8446379336930170633_i64);
_7 = _5;
_12.fld3 = _9 + _9;
_13 = 9223372036854775807_isize - 9223372036854775807_isize;
_6 = _3;
_9 = _12.fld3;
_12.fld0 = [3_usize,1_usize,1_usize,6_usize,6_usize];
_1 = !(-2992273024167488829_i64);
_9 = -_12.fld3;
_5 = _2;
Call(_10 = core::intrinsics::fmaf64(_12.fld1, _12.fld1, _12.fld1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_12.fld3 = _9;
_9 = 174040827200621746035794852614768697771_u128 as f32;
_7 = [_13,_13,_13,_13,_13];
_12.fld1 = 117_i8 as f64;
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_12.fld3 = _9;
_10 = -_12.fld1;
_4 = _3;
_12.fld2 = _11;
_9 = _12.fld3 - _12.fld3;
_12.fld1 = (-8647_i16) as f64;
_12.fld1 = 2660526063_u32 as f64;
_9 = _12.fld3 + _12.fld3;
_12.fld3 = _12.fld5 as f32;
_2 = _5;
_4 = [_13,_13,_13,_13,_13];
_16.1 = -_12.fld1;
_16.1 = _12.fld1 * _10;
_17 = _8;
Goto(bb5)
}
bb5 = {
_17 = [_12.fld5,_12.fld5];
_4 = _2;
_13 = 9223372036854775807_isize | 9223372036854775807_isize;
_16.1 = _12.fld1;
_16 = (_6, _12.fld1);
_9 = 56369520801209874893365272347012518705_u128 as f32;
_17 = [_12.fld5,_12.fld5];
_12.fld0 = [3_usize,7_usize,7_usize,2_usize,4_usize];
_10 = _12.fld5 as f64;
Goto(bb6)
}
bb6 = {
_18 = _5;
_12.fld0 = [5800792074926949493_usize,7_usize,9604952334492128594_usize,8820516757331942230_usize,6_usize];
_2 = [_13,_13,_13,_13,_13];
_10 = _16.1;
_8 = [_12.fld5,_12.fld5];
_12.fld2 = [60590_u16,28138_u16,1830_u16,53218_u16,49229_u16,10311_u16,7172_u16];
_12.fld2 = _11;
_2 = _5;
_18 = [_13,_13,_13,_13,_13];
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_16 = (_18, _10);
_11 = [40001_u16,2455_u16,25002_u16,23136_u16,23278_u16,41727_u16,42472_u16];
_16.1 = 34_i8 as f64;
_3 = _5;
_16.1 = _10;
_12.fld0 = [6_usize,4879063067100315067_usize,9339715273429127907_usize,3117906746391728457_usize,1270209125339986606_usize];
_20 = '\u{eca23}';
_12.fld0 = [5503178619812289590_usize,6_usize,7_usize,4_usize,7364171042140638056_usize];
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_4 = [_13,_13,_13,_13,_13];
_24 = _1 << _12.fld5;
_23 = 28514671724289077160323098228517196148_u128;
_12.fld2 = [59792_u16,22137_u16,46808_u16,62338_u16,55357_u16,1724_u16,51891_u16];
_16.1 = -_10;
match _23 {
28514671724289077160323098228517196148 => bb7,
_ => bb2
}
}
bb7 = {
_17 = [_12.fld5,_12.fld5];
_18 = [_13,_13,_13,_13,_13];
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_4 = _5;
match _23 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
28514671724289077160323098228517196148 => bb16,
_ => bb15
}
}
bb8 = {
_18 = _5;
_12.fld0 = [5800792074926949493_usize,7_usize,9604952334492128594_usize,8820516757331942230_usize,6_usize];
_2 = [_13,_13,_13,_13,_13];
_10 = _16.1;
_8 = [_12.fld5,_12.fld5];
_12.fld2 = [60590_u16,28138_u16,1830_u16,53218_u16,49229_u16,10311_u16,7172_u16];
_12.fld2 = _11;
_2 = _5;
_18 = [_13,_13,_13,_13,_13];
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_16 = (_18, _10);
_11 = [40001_u16,2455_u16,25002_u16,23136_u16,23278_u16,41727_u16,42472_u16];
_16.1 = 34_i8 as f64;
_3 = _5;
_16.1 = _10;
_12.fld0 = [6_usize,4879063067100315067_usize,9339715273429127907_usize,3117906746391728457_usize,1270209125339986606_usize];
_20 = '\u{eca23}';
_12.fld0 = [5503178619812289590_usize,6_usize,7_usize,4_usize,7364171042140638056_usize];
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_4 = [_13,_13,_13,_13,_13];
_24 = _1 << _12.fld5;
_23 = 28514671724289077160323098228517196148_u128;
_12.fld2 = [59792_u16,22137_u16,46808_u16,62338_u16,55357_u16,1724_u16,51891_u16];
_16.1 = -_10;
match _23 {
28514671724289077160323098228517196148 => bb7,
_ => bb2
}
}
bb9 = {
_17 = [_12.fld5,_12.fld5];
_4 = _2;
_13 = 9223372036854775807_isize | 9223372036854775807_isize;
_16.1 = _12.fld1;
_16 = (_6, _12.fld1);
_9 = 56369520801209874893365272347012518705_u128 as f32;
_17 = [_12.fld5,_12.fld5];
_12.fld0 = [3_usize,7_usize,7_usize,2_usize,4_usize];
_10 = _12.fld5 as f64;
Goto(bb6)
}
bb10 = {
_12.fld3 = _9;
_9 = 174040827200621746035794852614768697771_u128 as f32;
_7 = [_13,_13,_13,_13,_13];
_12.fld1 = 117_i8 as f64;
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_12.fld3 = _9;
_10 = -_12.fld1;
_4 = _3;
_12.fld2 = _11;
_9 = _12.fld3 - _12.fld3;
_12.fld1 = (-8647_i16) as f64;
_12.fld1 = 2660526063_u32 as f64;
_9 = _12.fld3 + _12.fld3;
_12.fld3 = _12.fld5 as f32;
_2 = _5;
_4 = [_13,_13,_13,_13,_13];
_16.1 = -_12.fld1;
_16.1 = _12.fld1 * _10;
_17 = _8;
Goto(bb5)
}
bb11 = {
_9 = 3661398084_u32 as f32;
_11 = [31186_u16,52865_u16,25383_u16,35316_u16,48811_u16,28076_u16,32669_u16];
_1 = (-8446379336930170633_i64);
_7 = _5;
_12.fld3 = _9 + _9;
_13 = 9223372036854775807_isize - 9223372036854775807_isize;
_6 = _3;
_9 = _12.fld3;
_12.fld0 = [3_usize,1_usize,1_usize,6_usize,6_usize];
_1 = !(-2992273024167488829_i64);
_9 = -_12.fld3;
_5 = _2;
Call(_10 = core::intrinsics::fmaf64(_12.fld1, _12.fld1, _12.fld1), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
_12.fld5 = false as u64;
Goto(bb3)
}
bb13 = {
_4 = _6;
_8 = [10361823766962348726_u64,3285420977518499802_u64];
_9 = 13199533991725216171_u64 as f32;
_1 = 8619395391834879305_i64 ^ 7803566224549152231_i64;
_10 = (-99463087980531760601453816574840442161_i128) as f64;
_4 = [(-59_isize),9223372036854775807_isize,(-119_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_4 = [9223372036854775807_isize,9223372036854775807_isize,111_isize,5_isize,(-9223372036854775808_isize)];
_9 = 31_i8 as f32;
_6 = [101_isize,9223372036854775807_isize,(-31_isize),9223372036854775807_isize,9223372036854775807_isize];
_5 = _3;
_11 = [13428_u16,56343_u16,64325_u16,62080_u16,28599_u16,62405_u16,8594_u16];
_2 = _4;
_12.fld1 = 16369382009958455431_u64 as f64;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_23 = 213_u8 as u128;
_9 = _12.fld3 - _12.fld3;
_3 = [_13,_13,_13,_13,_13];
_6 = [_13,_13,_13,_13,_13];
_10 = (-20_i8) as f64;
_12.fld5 = !9000282088980229340_u64;
Call(_12.fld6 = fn16(_5, _4, _2, _7, _12.fld2, _7, _16.0, _12.fld2, _5, _5), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_22 = _12.fld3 * _12.fld3;
_15 = Adt55::Variant2 { fld0: _12.fld6,fld1: _24 };
_7 = _2;
Goto(bb18)
}
bb18 = {
_9 = _22;
_16 = (_2, _10);
_28 = [_12.fld5,_12.fld5,_12.fld5,_12.fld5];
_2 = [_13,_13,_13,_13,_13];
_1 = (-4106_i16) as i64;
_3 = [_13,_13,_13,_13,_13];
_12.fld3 = _13 as f32;
place!(Field::<i64>(Variant(_15, 2), 1)) = !_24;
_12.fld5 = 22166_i16 as u64;
_27 = !false;
_10 = _16.1 + _16.1;
_1 = _24;
_29 = _11;
Goto(bb19)
}
bb19 = {
_18 = _6;
_31 = 121_u8 + 153_u8;
_11 = [24977_u16,34629_u16,65514_u16,40455_u16,52637_u16,61850_u16,48599_u16];
_21 = 6_usize;
_12.fld2[_21] = _11[_21] - _11[_21];
_16.0 = _18;
_11 = [_12.fld2[_21],_12.fld2[_21],_12.fld2[_21],_29[_21],_12.fld2[_21],_29[_21],_29[_21]];
_23 = (-1248212564_i32) as u128;
_11 = _29;
_32 = _17;
_11[_21] = (-1586726066_i32) as u16;
_22 = _12.fld3 + _9;
_30 = _20;
_27 = true & true;
_12.fld4 = core::ptr::addr_of!(_27);
_16.0 = [_14[_21],_13,_13,_14[_21],_14[_21]];
_14[_21] = _13 + _13;
_28 = [_12.fld5,_12.fld5,_12.fld5,_12.fld5];
Goto(bb20)
}
bb20 = {
_12.fld4 = core::ptr::addr_of!(_27);
_31 = _10 as u8;
SetDiscriminant(_15, 2);
_12.fld1 = _10 - _16.1;
_36.fld1 = [_27,_27,_27,_27,_27,_27,_27];
_9 = _22 * _22;
_1 = _24;
_12.fld4 = core::ptr::addr_of!(_27);
_8 = [_12.fld5,_12.fld5];
_27 = _29[_21] == _12.fld2[_21];
_34 = [118_i8];
_26 = _20;
_12.fld3 = -_9;
_16.0 = [_13,_14[_21],_14[_21],_14[_21],_14[_21]];
_32 = [_12.fld5,_12.fld5];
_33 = !(-31617_i16);
_20 = _26;
_12.fld2[_21] = _12.fld5 as u16;
_13 = _14[_21];
_19[_21] = _14[_21];
match _29[_21] {
0 => bb17,
1 => bb21,
2 => bb22,
42472 => bb24,
_ => bb23
}
}
bb21 = {
_18 = _6;
_31 = 121_u8 + 153_u8;
_11 = [24977_u16,34629_u16,65514_u16,40455_u16,52637_u16,61850_u16,48599_u16];
_21 = 6_usize;
_12.fld2[_21] = _11[_21] - _11[_21];
_16.0 = _18;
_11 = [_12.fld2[_21],_12.fld2[_21],_12.fld2[_21],_29[_21],_12.fld2[_21],_29[_21],_29[_21]];
_23 = (-1248212564_i32) as u128;
_11 = _29;
_32 = _17;
_11[_21] = (-1586726066_i32) as u16;
_22 = _12.fld3 + _9;
_30 = _20;
_27 = true & true;
_12.fld4 = core::ptr::addr_of!(_27);
_16.0 = [_14[_21],_13,_13,_14[_21],_14[_21]];
_14[_21] = _13 + _13;
_28 = [_12.fld5,_12.fld5,_12.fld5,_12.fld5];
Goto(bb20)
}
bb22 = {
_4 = _6;
_8 = [10361823766962348726_u64,3285420977518499802_u64];
_9 = 13199533991725216171_u64 as f32;
_1 = 8619395391834879305_i64 ^ 7803566224549152231_i64;
_10 = (-99463087980531760601453816574840442161_i128) as f64;
_4 = [(-59_isize),9223372036854775807_isize,(-119_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_4 = [9223372036854775807_isize,9223372036854775807_isize,111_isize,5_isize,(-9223372036854775808_isize)];
_9 = 31_i8 as f32;
_6 = [101_isize,9223372036854775807_isize,(-31_isize),9223372036854775807_isize,9223372036854775807_isize];
_5 = _3;
_11 = [13428_u16,56343_u16,64325_u16,62080_u16,28599_u16,62405_u16,8594_u16];
_2 = _4;
_12.fld1 = 16369382009958455431_u64 as f64;
Goto(bb2)
}
bb23 = {
_9 = 3661398084_u32 as f32;
_11 = [31186_u16,52865_u16,25383_u16,35316_u16,48811_u16,28076_u16,32669_u16];
_1 = (-8446379336930170633_i64);
_7 = _5;
_12.fld3 = _9 + _9;
_13 = 9223372036854775807_isize - 9223372036854775807_isize;
_6 = _3;
_9 = _12.fld3;
_12.fld0 = [3_usize,1_usize,1_usize,6_usize,6_usize];
_1 = !(-2992273024167488829_i64);
_9 = -_12.fld3;
_5 = _2;
Call(_10 = core::intrinsics::fmaf64(_12.fld1, _12.fld1, _12.fld1), ReturnTo(bb4), UnwindUnreachable())
}
bb24 = {
_27 = !_36.fld1[_21];
match _29[_21] {
0 => bb17,
1 => bb2,
42472 => bb26,
_ => bb25
}
}
bb25 = {
_12.fld3 = _9;
_9 = 174040827200621746035794852614768697771_u128 as f32;
_7 = [_13,_13,_13,_13,_13];
_12.fld1 = 117_i8 as f64;
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_12.fld3 = _9;
_10 = -_12.fld1;
_4 = _3;
_12.fld2 = _11;
_9 = _12.fld3 - _12.fld3;
_12.fld1 = (-8647_i16) as f64;
_12.fld1 = 2660526063_u32 as f64;
_9 = _12.fld3 + _12.fld3;
_12.fld3 = _12.fld5 as f32;
_2 = _5;
_4 = [_13,_13,_13,_13,_13];
_16.1 = -_12.fld1;
_16.1 = _12.fld1 * _10;
_17 = _8;
Goto(bb5)
}
bb26 = {
_11[_21] = !_29[_21];
_26 = _20;
place!(Field::<i64>(Variant(_15, 2), 1)) = _1;
_13 = _19[_21];
_1 = -Field::<i64>(Variant(_15, 2), 1);
_36.fld1[_21] = _12.fld1 <= _10;
_19 = [_14[_21],_13,_13,_14[_21],_14[_21],_13,_14[_21],_13];
_23 = 271629138088557854110010015967534991490_u128;
_11 = [_12.fld2[_21],_29[_21],_29[_21],_29[_21],_29[_21],_29[_21],_29[_21]];
_11 = [_29[_21],_29[_21],_29[_21],_29[_21],_29[_21],_29[_21],_29[_21]];
place!(Field::<i64>(Variant(_15, 2), 1)) = _24 ^ _1;
_12.fld1 = _9 as f64;
_40 = !_23;
_26 = _20;
_12.fld0 = [_21,_21,_21,_21,_21];
_7 = [_14[_21],_14[_21],_13,_14[_21],_19[_21]];
place!(Field::<*mut i8>(Variant(_15, 2), 0)) = _12.fld6;
SetDiscriminant(_15, 1);
_36.fld0 = _11[_21] * _11[_21];
_14 = [_19[_21],_19[_21],_13,_13,_13,_19[_21],_19[_21],_19[_21]];
_3 = [_13,_14[_21],_19[_21],_14[_21],_13];
place!(Field::<[u16; 7]>(Variant(_15, 1), 4)) = _11;
_20 = _26;
Goto(bb27)
}
bb27 = {
_9 = -_22;
_12.fld0 = [_21,_21,_21,_21,_21];
_40 = _23 & _23;
_38 = _36.fld0 == _36.fld0;
_8 = _17;
_12.fld3 = _22 - _9;
_35 = _20;
_9 = -_22;
_36.fld0 = !Field::<[u16; 7]>(Variant(_15, 1), 4)[_21];
_25 = -_19[_21];
place!(Field::<[u64; 2]>(Variant(_15, 1), 1)) = _32;
_13 = _38 as isize;
Goto(bb28)
}
bb28 = {
_12.fld2 = _29;
RET.0 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_15, 1), 2)));
_14 = [_19[_21],_13,_13,_13,_13,_13,_13,_13];
_26 = _35;
_4 = [_13,_14[_21],_14[_21],_14[_21],_14[_21]];
_42 = !_40;
_16.1 = _12.fld1;
_34 = [(-32_i8)];
_10 = _16.1 - _12.fld1;
_29 = [_11[_21],Field::<[u16; 7]>(Variant(_15, 1), 4)[_21],_36.fld0,_36.fld0,_11[_21],Field::<[u16; 7]>(Variant(_15, 1), 4)[_21],_12.fld2[_21]];
_42 = _40;
_29[_21] = _12.fld2[_21] % _11[_21];
place!(Field::<bool>(Variant(_15, 1), 0)) = _38 < _38;
_32 = [_12.fld5,_12.fld5];
_12.fld2 = [_29[_21],_29[_21],_36.fld0,_11[_21],_29[_21],Field::<[u16; 7]>(Variant(_15, 1), 4)[_21],_36.fld0];
_11[_21] = (-109_i8) as u16;
_3 = [_14[_21],_13,_14[_21],_14[_21],_13];
_36.fld0 = !_12.fld2[_21];
_24 = _1 ^ _1;
place!(Field::<i32>(Variant(_15, 1), 2)) = -(-583765058_i32);
_43 = _13;
_32 = [_12.fld5,_12.fld5];
_14 = [_43,_13,_13,_13,_13,_13,_43,_43];
_25 = _12.fld5 as isize;
_34 = [(-11_i8)];
_44[_21] = -_14[_21];
_9 = _12.fld3;
Goto(bb29)
}
bb29 = {
Call(_48 = dump_var(13_usize, 23_usize, Move(_23), 17_usize, Move(_17), 4_usize, Move(_4), 32_usize, Move(_32)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_48 = dump_var(13_usize, 34_usize, Move(_34), 6_usize, Move(_6), 27_usize, Move(_27), 28_usize, Move(_28)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_48 = dump_var(13_usize, 40_usize, Move(_40), 43_usize, Move(_43), 7_usize, Move(_7), 18_usize, Move(_18)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_48 = dump_var(13_usize, 33_usize, Move(_33), 1_usize, Move(_1), 35_usize, Move(_35), 26_usize, Move(_26)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [isize; 5],mut _2: [isize; 5],mut _3: [isize; 5],mut _4: [isize; 5],mut _5: [isize; 5],mut _6: [isize; 5],mut _7: [isize; 5],mut _8: [isize; 5],mut _9: [isize; 5],mut _10: [isize; 5],mut _11: [isize; 5]) -> [isize; 5] {
mir! {
type RET = [isize; 5];
let _12: i16;
let _13: &'static u128;
let _14: (f64, i128, u8, u32);
let _15: f64;
let _16: isize;
let _17: f64;
let _18: Adt53;
let _19: isize;
let _20: [bool; 7];
let _21: [bool; 7];
let _22: [i32; 3];
let _23: *const u8;
let _24: [u64; 4];
let _25: f64;
let _26: [u64; 4];
let _27: u32;
let _28: Adt59;
let _29: Adt43;
let _30: f32;
let _31: f32;
let _32: f32;
let _33: isize;
let _34: ();
let _35: ();
{
_9 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_9 = [(-59_isize),74_isize,9223372036854775807_isize,9223372036854775807_isize,(-91_isize)];
_2 = _5;
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = [13_isize,82_isize,9223372036854775807_isize,(-9223372036854775808_isize),80_isize];
_11 = [57_isize,9223372036854775807_isize,9223372036854775807_isize,67_isize,9223372036854775807_isize];
Goto(bb1)
}
bb1 = {
_2 = _5;
_10 = [9223372036854775807_isize,117_isize,50_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_12 = !24337_i16;
_4 = [9223372036854775807_isize,9223372036854775807_isize,98_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_12 = (-8826_i16);
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),68_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9 = [(-101_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,56_isize];
_10 = [61_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-126_isize),(-9223372036854775808_isize)];
_10 = _8;
_11 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-26_isize)];
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),102_isize,(-9223372036854775808_isize)];
_15 = 40023264272731031201686917125592201716_i128 as f64;
_14.2 = 174_u8;
_12 = 7301996863931556638_u64 as i16;
_11 = [9223372036854775807_isize,9223372036854775807_isize,(-126_isize),(-9223372036854775808_isize),9223372036854775807_isize];
Goto(bb2)
}
bb2 = {
_9 = _4;
_16 = (-90_isize) ^ 16_isize;
_14.3 = 173674250_u32 * 1821321505_u32;
_5 = _11;
_14 = (_15, (-43109727360739361215846584635890765477_i128), 127_u8, 1569327534_u32);
_3 = _1;
_2 = [_16,_16,_16,_16,_16];
_14.3 = 106122204_u32 << _14.2;
RET = [_16,_16,_16,_16,_16];
_1 = _7;
_11 = [_16,_16,_16,_16,_16];
_17 = _14.0 - _14.0;
_14.3 = 572052310_u32 ^ 4012085762_u32;
_6 = [_16,_16,_16,_16,_16];
_5 = _7;
_12 = _14.1 as i16;
_14.0 = _16 as f64;
_7 = [_16,_16,_16,_16,_16];
_4 = [_16,_16,_16,_16,_16];
_16 = 9223372036854775807_isize - 41_isize;
_4 = _8;
match _14.2 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
127 => bb11,
_ => bb10
}
}
bb3 = {
_2 = _5;
_10 = [9223372036854775807_isize,117_isize,50_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_12 = !24337_i16;
_4 = [9223372036854775807_isize,9223372036854775807_isize,98_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_12 = (-8826_i16);
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),68_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9 = [(-101_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,56_isize];
_10 = [61_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-126_isize),(-9223372036854775808_isize)];
_10 = _8;
_11 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-26_isize)];
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),102_isize,(-9223372036854775808_isize)];
_15 = 40023264272731031201686917125592201716_i128 as f64;
_14.2 = 174_u8;
_12 = 7301996863931556638_u64 as i16;
_11 = [9223372036854775807_isize,9223372036854775807_isize,(-126_isize),(-9223372036854775808_isize),9223372036854775807_isize];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_5 = [_16,_16,_16,_16,_16];
_3 = [_16,_16,_16,_16,_16];
_6 = [_16,_16,_16,_16,_16];
_17 = 14645_u16 as f64;
_15 = _14.0 + _14.0;
_6 = [_16,_16,_16,_16,_16];
_16 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_14.3 = 714790696_u32;
_14.2 = _17 as u8;
_3 = [_16,_16,_16,_16,_16];
_9 = [_16,_16,_16,_16,_16];
RET = [_16,_16,_16,_16,_16];
_7 = [_16,_16,_16,_16,_16];
_19 = _16 | _16;
_20 = [false,false,true,true,true,false,false];
_17 = _15;
_7 = [_19,_19,_16,_19,_19];
_3 = [_16,_19,_19,_19,_19];
_4 = [_16,_16,_16,_16,_16];
_17 = _14.2 as f64;
_20 = [false,true,true,false,false,false,true];
_16 = !_19;
_4 = _1;
_19 = _12 as isize;
_8 = [_19,_16,_16,_16,_19];
Call(_14.3 = fn15(_4, _1, _4, _14.1, _6, _4, _7, _3, _1, _1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_15 = -_17;
_20 = [false,false,true,false,true,true,true];
_14.3 = _14.0 as u32;
_10 = [_19,_19,_16,_19,_16];
_11 = [_19,_19,_16,_19,_19];
_19 = _16;
_20 = [false,true,false,false,true,true,false];
_15 = _16 as f64;
_5 = [_16,_16,_16,_19,_16];
_23 = core::ptr::addr_of!(_14.2);
_24 = [16603326696227802687_u64,7778227570985725288_u64,2882490856448294881_u64,262521124961895061_u64];
_20 = [false,true,false,true,false,false,true];
_14.2 = 139_u8;
_22 = [(-178432336_i32),(-312991602_i32),1565507754_i32];
_25 = -_15;
_6 = _4;
_16 = 50741_u16 as isize;
_23 = core::ptr::addr_of!(_14.2);
_17 = _14.0 - _25;
_23 = core::ptr::addr_of!(_14.2);
_14.2 = 7691669737811231487_u64 as u8;
_8 = [_16,_19,_19,_16,_16];
_21 = [false,false,false,true,false,false,true];
RET = [_19,_19,_19,_19,_19];
_15 = _14.1 as f64;
Goto(bb13)
}
bb13 = {
_14.3 = 6653561433199860206_u64 as u32;
RET = [_19,_19,_19,_19,_19];
_20 = _21;
_4 = [_19,_19,_19,_19,_19];
_19 = 14214472828748018353_u64 as isize;
_27 = _14.3;
_1 = [_16,_19,_16,_19,_19];
_19 = _16;
_9 = [_16,_19,_16,_19,_16];
_26 = _24;
match _14.1 {
0 => bb6,
1 => bb10,
297172639560199102247528022795877445979 => bb14,
_ => bb3
}
}
bb14 = {
_17 = _14.0 * _15;
_7 = _5;
_26 = _24;
_2 = [_16,_16,_19,_16,_16];
_24 = [1284755038597227881_u64,11093240062320400527_u64,2507305063756343679_u64,18409063752462300858_u64];
_21 = _20;
_25 = _17;
_2 = RET;
_3 = [_16,_19,_16,_16,_19];
_16 = (-6931021684372547648_i64) as isize;
_14.0 = _25 + _17;
_14.2 = _14.3 as u8;
_26 = [13967743164143545622_u64,10682779546968212086_u64,2862734610175034448_u64,2435689372828605191_u64];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(14_usize, 11_usize, Move(_11), 19_usize, Move(_19), 2_usize, Move(_2), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(14_usize, 10_usize, Move(_10), 27_usize, Move(_27), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(14_usize, 24_usize, Move(_24), 22_usize, Move(_22), 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [isize; 5],mut _2: [isize; 5],mut _3: [isize; 5],mut _4: i128,mut _5: [isize; 5],mut _6: [isize; 5],mut _7: [isize; 5],mut _8: [isize; 5],mut _9: [isize; 5],mut _10: [isize; 5]) -> u32 {
mir! {
type RET = u32;
let _11: [i64; 2];
let _12: ([isize; 5], f64);
let _13: f32;
let _14: u8;
let _15: u16;
let _16: u128;
let _17: i64;
let _18: *const i32;
let _19: f64;
let _20: [isize; 1];
let _21: (*const i32,);
let _22: Adt51;
let _23: ();
let _24: ();
{
_2 = _1;
_9 = [(-9223372036854775808_isize),9223372036854775807_isize,(-4_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = [9223372036854775807_isize,(-75_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = 3857253396_u32 | 1854904135_u32;
RET = 2745951549_u32 & 1713528272_u32;
_11 = [(-473772559803597783_i64),(-2377313062565740593_i64)];
_11 = [(-4746539980029444884_i64),404549365148980876_i64];
_9 = [(-83_isize),9223372036854775807_isize,(-9223372036854775808_isize),120_isize,(-9223372036854775808_isize)];
RET = !439098890_u32;
_15 = (-1877595681_i32) as u16;
_7 = _3;
_7 = [9223372036854775807_isize,(-43_isize),9223372036854775807_isize,9223372036854775807_isize,26_isize];
_13 = 2792082638703015417_usize as f32;
_3 = [(-61_isize),(-53_isize),69_isize,(-9223372036854775808_isize),60_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_12.1 = _4 as f64;
_13 = 8093764236283292328_i64 as f32;
_6 = _2;
_15 = true as u16;
_17 = 20_i8 as i64;
_10 = [45_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
Call(_2 = core::intrinsics::transmute(_10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = [(-9223372036854775808_isize),(-120_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-30_isize)];
match _4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
297172639560199102247528022795877445979 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,31_isize,37_isize,(-9223372036854775808_isize)];
_4 = (-9223372036854775808_isize) as i128;
_14 = 76_u8;
_19 = _12.1 + _12.1;
_12.0 = _10;
_16 = 224123987789763341343683349728642697806_u128 ^ 76198166220436979710807025762292573551_u128;
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),(-7_isize),66_isize,9223372036854775807_isize];
_12.0 = [9223372036854775807_isize,(-107_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-24_isize)];
_5 = [(-93_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_13 = 16025836493787009014_usize as f32;
match _14 {
0 => bb1,
1 => bb8,
2 => bb11,
76 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_20 = [(-115_isize)];
_20 = [(-9223372036854775808_isize)];
_13 = _16 as f32;
_12 = (_9, _19);
_4 = (-143088898272156048626926099774900391849_i128) - (-63360944670970936211395852518617048360_i128);
_19 = -_12.1;
_5 = _1;
_12 = (_5, _19);
_12 = (_5, _19);
_9 = _1;
_12 = (_6, _19);
_15 = 55029_u16 * 49704_u16;
Goto(bb14)
}
bb14 = {
_17 = !7263266228654279700_i64;
_1 = [(-9223372036854775808_isize),(-8_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-122_isize)];
_15 = 27301_u16 ^ 45453_u16;
_10 = [9223372036854775807_isize,9223372036854775807_isize,9_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_19 = -_12.1;
_14 = 145_u8;
_14 = 107_u8;
_8 = _6;
_15 = 38058_u16;
_2 = [103_isize,(-50_isize),35_isize,(-122_isize),9223372036854775807_isize];
_12 = (_8, _19);
RET = _15 as u32;
_3 = [48_isize,(-47_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-6_isize),9223372036854775807_isize];
_6 = [9223372036854775807_isize,10_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_12 = (_7, _19);
_9 = [122_isize,(-78_isize),(-124_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = !144971840968542626093237731181262289570_u128;
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(15_usize, 2_usize, Move(_2), 4_usize, Move(_4), 6_usize, Move(_6), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(15_usize, 20_usize, Move(_20), 16_usize, Move(_16), 9_usize, Move(_9), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [isize; 5],mut _2: [isize; 5],mut _3: [isize; 5],mut _4: [isize; 5],mut _5: [u16; 7],mut _6: [isize; 5],mut _7: [isize; 5],mut _8: [u16; 7],mut _9: [isize; 5],mut _10: [isize; 5]) -> *mut i8 {
mir! {
type RET = *mut i8;
let _11: Adt52;
let _12: isize;
let _13: i32;
let _14: [isize; 1];
let _15: i32;
let _16: [i64; 2];
let _17: isize;
let _18: f32;
let _19: isize;
let _20: [i8; 1];
let _21: [u16; 7];
let _22: Adt59;
let _23: u16;
let _24: Adt55;
let _25: i8;
let _26: i64;
let _27: [u64; 4];
let _28: [char; 3];
let _29: (*const i32,);
let _30: u32;
let _31: char;
let _32: *mut i8;
let _33: Adt44;
let _34: (u128, isize, *const u8, f32, *mut i8);
let _35: (*const i32,);
let _36: char;
let _37: ([isize; 5], f64);
let _38: (f64, i128, u8, u32);
let _39: Adt43;
let _40: u8;
let _41: ([isize; 5], f64);
let _42: (f64, [i8; 1], (*const i32,));
let _43: bool;
let _44: [i8; 1];
let _45: ();
let _46: ();
{
_6 = [(-19_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_2 = [118_isize,9223372036854775807_isize,(-37_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_10 = [(-115_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_7 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-65_isize),9223372036854775807_isize];
_1 = [80_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2 = _1;
_4 = _10;
_3 = _7;
_2 = _10;
_3 = [(-9223372036854775808_isize),(-1_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),116_isize];
_9 = _2;
_4 = [9223372036854775807_isize,73_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_8 = [30950_u16,39797_u16,10960_u16,41198_u16,37721_u16,43401_u16,44893_u16];
_7 = _9;
_3 = [109_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_12 = !9223372036854775807_isize;
_10 = _1;
_3 = [_12,_12,_12,_12,_12];
_3 = [_12,_12,_12,_12,_12];
_2 = _9;
_6 = _7;
_9 = [_12,_12,_12,_12,_12];
_5 = _8;
Goto(bb1)
}
bb1 = {
_8 = [49823_u16,62934_u16,52028_u16,8778_u16,24209_u16,13075_u16,20263_u16];
_2 = _7;
_7 = [_12,_12,_12,_12,_12];
Goto(bb2)
}
bb2 = {
_4 = [_12,_12,_12,_12,_12];
_1 = [_12,_12,_12,_12,_12];
_1 = [_12,_12,_12,_12,_12];
_6 = [_12,_12,_12,_12,_12];
_5 = _8;
_5 = [34007_u16,28501_u16,5930_u16,19338_u16,60351_u16,50732_u16,54921_u16];
_10 = [_12,_12,_12,_12,_12];
_7 = [_12,_12,_12,_12,_12];
_13 = 753825807_i32;
_5 = [13263_u16,34637_u16,46151_u16,62616_u16,47831_u16,16321_u16,20463_u16];
_7 = [_12,_12,_12,_12,_12];
_13 = 4520729688412470468_u64 as i32;
_4 = _7;
_17 = _12 | _12;
_1 = _2;
_15 = _13;
_5 = [57219_u16,7261_u16,7191_u16,55162_u16,12750_u16,6094_u16,56664_u16];
_17 = 24_i8 as isize;
_9 = [_17,_12,_12,_12,_12];
_5 = [22378_u16,49248_u16,14350_u16,52053_u16,62167_u16,12381_u16,6384_u16];
_13 = !_15;
_2 = _1;
_15 = _13 << _12;
Call(_7 = core::intrinsics::transmute(_1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18 = 40_i8 as f32;
_9 = [_12,_12,_17,_17,_12];
_14 = [_12];
_3 = [_12,_17,_17,_12,_12];
_7 = [_17,_12,_17,_12,_12];
Call(_2 = core::intrinsics::transmute(_1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = _9;
_12 = -_17;
_13 = _15 * _15;
_19 = -_17;
_20 = [75_i8];
_8 = [19877_u16,15196_u16,23243_u16,31751_u16,47397_u16,45757_u16,32954_u16];
_16 = [3835957250748611954_i64,(-2141653435575499280_i64)];
_18 = 6961336571585924139_u64 as f32;
Goto(bb5)
}
bb5 = {
_12 = 396008344079735461_u64 as isize;
_5 = _8;
_7 = _1;
_14 = [_19];
_7 = [_19,_12,_19,_17,_19];
_21 = [47162_u16,7153_u16,18509_u16,36919_u16,57536_u16,24040_u16,11305_u16];
_14 = [_17];
_21 = _5;
_1 = _10;
_16 = [(-3003735796961441260_i64),(-3732091952556142304_i64)];
_1 = [_12,_12,_12,_12,_17];
_3 = [_17,_12,_19,_12,_19];
_5 = [60154_u16,58225_u16,48375_u16,64884_u16,23631_u16,34039_u16,60970_u16];
_5 = [29435_u16,23939_u16,49285_u16,13910_u16,671_u16,45445_u16,1543_u16];
_12 = _17 ^ _19;
_19 = !_12;
_23 = !34454_u16;
_18 = _12 as f32;
_15 = -_13;
Goto(bb6)
}
bb6 = {
_9 = _2;
_5 = _21;
_23 = 31652_u16 | 21348_u16;
_4 = [_12,_17,_17,_19,_12];
_4 = [_19,_12,_17,_12,_12];
_3 = [_12,_17,_19,_17,_12];
_7 = _2;
_23 = 26550_u16;
_19 = _17 ^ _17;
_16 = [5438632197336670174_i64,(-4212071888587341824_i64)];
_5 = _21;
_20 = [116_i8];
_27 = [6269752647354476061_u64,868088987810897488_u64,18379642854068800057_u64,11739598971839205521_u64];
_6 = [_12,_12,_12,_19,_17];
RET = core::ptr::addr_of_mut!(_25);
_16 = [(-7820964006677795406_i64),4944250703427888200_i64];
RET = core::ptr::addr_of_mut!((*RET));
_13 = 4412404371080237591_i64 as i32;
_15 = _13 + _13;
_15 = _13;
_5 = [_23,_23,_23,_23,_23,_23,_23];
Call(_25 = core::intrinsics::transmute(_20), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_27 = [18003730635300711963_u64,9939538423500878166_u64,3062191515714697260_u64,15635641474834981942_u64];
_23 = 51943_u16 * 46574_u16;
_26 = -(-3507016141302167049_i64);
_16 = [_26,_26];
_8 = _21;
_17 = -_19;
_5 = [_23,_23,_23,_23,_23,_23,_23];
_26 = 4826024950700783209_i64 ^ (-3903499618640523769_i64);
_26 = (-5822403279370020226_i64) + 2172865499631258974_i64;
_3 = _7;
_2 = _9;
_29.0 = core::ptr::addr_of!(_15);
_30 = 432313325_u32 & 3513222028_u32;
_10 = _2;
_14 = [_12];
_30 = 1525002605_u32 + 1204579495_u32;
_3 = _7;
RET = core::ptr::addr_of_mut!((*RET));
_16 = [_26,_26];
_8 = [_23,_23,_23,_23,_23,_23,_23];
Goto(bb8)
}
bb8 = {
_16 = [_26,_26];
_26 = 7345471860487204045_i64 << (*RET);
_28 = ['\u{c4832}','\u{12a3}','\u{3e595}'];
_18 = (-167057369104640624038512266849342728754_i128) as f32;
_12 = _19 | _17;
RET = core::ptr::addr_of_mut!((*RET));
_27 = [11217353236107146997_u64,9417398445247325795_u64,13982642721061630423_u64,10869170335794718798_u64];
_20 = [_25];
_14 = [_12];
_9 = [_12,_12,_17,_12,_19];
_1 = [_12,_12,_12,_17,_12];
_6 = [_12,_12,_17,_17,_12];
_21 = _5;
_10 = [_19,_17,_12,_17,_12];
_3 = [_17,_12,_19,_17,_12];
_9 = [_17,_12,_12,_19,_17];
_17 = !_12;
Goto(bb9)
}
bb9 = {
_14 = [_17];
_2 = [_17,_19,_17,_12,_17];
_29.0 = core::ptr::addr_of!(_13);
_12 = -_19;
_15 = _13;
_20 = [(*RET)];
_15 = !_13;
_32 = RET;
_28 = ['\u{feae2}','\u{b1646}','\u{e07f}'];
_19 = _12 & _12;
_12 = _17 >> _15;
_27 = [1924139818565446415_u64,7857902697570766471_u64,18040749669630069222_u64,9444813374196744429_u64];
_30 = (*RET) as u32;
_28 = ['\u{18f8b}','\u{1b7f4}','\u{7a1f3}'];
_31 = '\u{75d88}';
_33.fld1 = _26 as f64;
_29.0 = core::ptr::addr_of!(_15);
_13 = _30 as i32;
RET = _32;
_34.0 = 84719756783495228406247958575546493266_u128;
_8 = [_23,_23,_23,_23,_23,_23,_23];
_34.1 = _17;
_1 = [_12,_19,_12,_34.1,_12];
_33.fld1 = 8622249076243217178_u64 as f64;
_24 = Adt55::Variant2 { fld0: RET,fld1: _26 };
_34.3 = (-160601769562680773751774650983770069462_i128) as f32;
_28 = [_31,_31,_31];
Goto(bb10)
}
bb10 = {
_16 = [_26,Field::<i64>(Variant(_24, 2), 1)];
_10 = _9;
_4 = _1;
RET = Field::<*mut i8>(Variant(_24, 2), 0);
_29.0 = core::ptr::addr_of!(_13);
_16 = [Field::<i64>(Variant(_24, 2), 1),Field::<i64>(Variant(_24, 2), 1)];
_34.4 = core::ptr::addr_of_mut!(_25);
_37.1 = _33.fld1 + _33.fld1;
_16 = [_26,Field::<i64>(Variant(_24, 2), 1)];
_34.4 = core::ptr::addr_of_mut!(_25);
_33.fld3 = -_34.3;
_33.fld3 = 16546790937230500307_u64 as f32;
RET = Field::<*mut i8>(Variant(_24, 2), 0);
_27 = [16119469791854347448_u64,18165386552040777406_u64,8599286313540071125_u64,8643328867463413988_u64];
_33.fld6 = Field::<*mut i8>(Variant(_24, 2), 0);
_17 = _34.1;
Goto(bb11)
}
bb11 = {
_13 = false as i32;
_33.fld5 = 18046713655165456569_u64 ^ 1774464804135168885_u64;
_26 = !Field::<i64>(Variant(_24, 2), 1);
_34.3 = _33.fld3;
_7 = [_17,_19,_12,_34.1,_12];
_38.0 = (-12408025707124728178815025701913201344_i128) as f64;
_33.fld3 = -_18;
_35.0 = core::ptr::addr_of!(_13);
_26 = Field::<i64>(Variant(_24, 2), 1);
_26 = Field::<i64>(Variant(_24, 2), 1) * Field::<i64>(Variant(_24, 2), 1);
_38.3 = !_30;
_27 = [_33.fld5,_33.fld5,_33.fld5,_33.fld5];
_29 = _35;
_29.0 = core::ptr::addr_of!(_15);
_37 = (_10, _33.fld1);
_34.4 = core::ptr::addr_of_mut!(_25);
_4 = [_34.1,_19,_19,_12,_34.1];
_7 = [_17,_34.1,_19,_19,_19];
_5 = _21;
SetDiscriminant(_24, 2);
place!(Field::<i64>(Variant(_24, 2), 1)) = -_26;
RET = _32;
_15 = _13 | _13;
_26 = -Field::<i64>(Variant(_24, 2), 1);
_37.1 = _33.fld1;
_3 = _37.0;
_34.3 = -_18;
_31 = '\u{6c387}';
_1 = _9;
match _34.0 {
0 => bb2,
1 => bb12,
2 => bb13,
84719756783495228406247958575546493266 => bb15,
_ => bb14
}
}
bb12 = {
_16 = [_26,Field::<i64>(Variant(_24, 2), 1)];
_10 = _9;
_4 = _1;
RET = Field::<*mut i8>(Variant(_24, 2), 0);
_29.0 = core::ptr::addr_of!(_13);
_16 = [Field::<i64>(Variant(_24, 2), 1),Field::<i64>(Variant(_24, 2), 1)];
_34.4 = core::ptr::addr_of_mut!(_25);
_37.1 = _33.fld1 + _33.fld1;
_16 = [_26,Field::<i64>(Variant(_24, 2), 1)];
_34.4 = core::ptr::addr_of_mut!(_25);
_33.fld3 = -_34.3;
_33.fld3 = 16546790937230500307_u64 as f32;
RET = Field::<*mut i8>(Variant(_24, 2), 0);
_27 = [16119469791854347448_u64,18165386552040777406_u64,8599286313540071125_u64,8643328867463413988_u64];
_33.fld6 = Field::<*mut i8>(Variant(_24, 2), 0);
_17 = _34.1;
Goto(bb11)
}
bb13 = {
_8 = [49823_u16,62934_u16,52028_u16,8778_u16,24209_u16,13075_u16,20263_u16];
_2 = _7;
_7 = [_12,_12,_12,_12,_12];
Goto(bb2)
}
bb14 = {
_6 = _9;
_12 = -_17;
_13 = _15 * _15;
_19 = -_17;
_20 = [75_i8];
_8 = [19877_u16,15196_u16,23243_u16,31751_u16,47397_u16,45757_u16,32954_u16];
_16 = [3835957250748611954_i64,(-2141653435575499280_i64)];
_18 = 6961336571585924139_u64 as f32;
Goto(bb5)
}
bb15 = {
_41.1 = _33.fld1 + _38.0;
place!(Field::<i64>(Variant(_24, 2), 1)) = _12 as i64;
_33.fld2 = [_23,_23,_23,_23,_23,_23,_23];
_14 = [_17];
_19 = -_12;
_17 = !_12;
_38.2 = 53_u8 >> _30;
_2 = [_17,_17,_19,_34.1,_12];
_41 = _37;
_36 = _31;
_37.0 = [_34.1,_19,_34.1,_17,_12];
_41.1 = _33.fld1;
place!(Field::<i64>(Variant(_24, 2), 1)) = _26;
_12 = _17 >> _19;
_6 = [_12,_34.1,_34.1,_34.1,_12];
_19 = _12 + _12;
_42.0 = _38.0;
_42.0 = _38.0 * _33.fld1;
_32 = core::ptr::addr_of_mut!(_25);
_44 = [(*_32)];
_12 = !_34.1;
_11 = Adt52::Variant1 { fld0: _41 };
_33.fld3 = _18;
Goto(bb16)
}
bb16 = {
Call(_45 = dump_var(16_usize, 26_usize, Move(_26), 21_usize, Move(_21), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(16_usize, 16_usize, Move(_16), 12_usize, Move(_12), 30_usize, Move(_30), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(16_usize, 13_usize, Move(_13), 4_usize, Move(_4), 23_usize, Move(_23), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_45 = dump_var(16_usize, 14_usize, Move(_14), 25_usize, Move(_25), 46_usize, _46, 46_usize, _46), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [isize; 1],mut _2: [u64; 4],mut _3: [isize; 5],mut _4: [isize; 5],mut _5: isize,mut _6: [isize; 5],mut _7: isize,mut _8: char,mut _9: [isize; 5],mut _10: [isize; 5],mut _11: isize,mut _12: [isize; 5]) -> isize {
mir! {
type RET = isize;
let _13: [isize; 8];
let _14: i64;
let _15: u8;
let _16: u128;
let _17: u32;
let _18: Adt57;
let _19: [char; 3];
let _20: isize;
let _21: u16;
let _22: [isize; 8];
let _23: usize;
let _24: u64;
let _25: [bool; 7];
let _26: isize;
let _27: ();
let _28: ();
{
RET = _11;
_8 = '\u{221e5}';
_6 = [_7,_7,_5,_5,_7];
_2 = [17504977089689694869_u64,14618709024963695882_u64,16045488499913264954_u64,6384001630157899291_u64];
_2 = [7055728071362453663_u64,8750536559527108138_u64,18261066106164614019_u64,14344802673168818691_u64];
_2 = [2060921468995500864_u64,16003413772829098061_u64,14494770959693994135_u64,332429555372087430_u64];
_8 = '\u{6eb6b}';
_5 = _7;
_4 = _12;
Goto(bb1)
}
bb1 = {
_17 = 2331141316_u32 | 1862612866_u32;
_5 = _7;
_3 = [_7,_5,_11,_7,_11];
RET = 6_usize as isize;
_15 = !111_u8;
_14 = -819848842178173920_i64;
_17 = 821837461_u32 << _5;
_9 = [RET,RET,_5,_11,_11];
_11 = 18162_i16 as isize;
RET = 26658231450896744408558275603595060006_i128 as isize;
_7 = _5;
_16 = 326503090575169552124361987781263222396_u128 * 49244582293955628316760437276547707144_u128;
_2 = [10151124797165013563_u64,3036056050624601262_u64,16006328783172965805_u64,14717495328788773271_u64];
_2 = [680048008018934449_u64,8853654500681108347_u64,5853408464748552362_u64,1410911246922212012_u64];
Goto(bb2)
}
bb2 = {
_5 = _7 + _7;
_7 = 9509_u16 as isize;
_20 = _5 ^ _5;
_8 = '\u{19b97}';
_6 = _4;
_17 = _20 as u32;
_12 = _3;
_21 = 29912_u16;
_6 = [_20,_20,_20,_20,_5];
_10 = _6;
_17 = !1408987597_u32;
_1 = [_20];
_13 = [RET,_20,_20,_20,_5,_20,_5,_20];
_7 = RET * _5;
_16 = !265468467811190088635206803964434525174_u128;
_7 = (-820341034_i32) as isize;
_1 = [RET];
_4 = [_5,_20,_20,_20,_7];
_13 = [_20,_20,_20,_20,_20,_5,_20,_20];
_5 = !_20;
Call(_20 = core::intrinsics::bswap(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15 = !143_u8;
_26 = -_5;
_11 = _20;
_1 = [_26];
_23 = 6_usize;
_2 = [18389324682764373184_u64,262947240686031089_u64,6039304649563801873_u64,6924344703065989758_u64];
_16 = 148807417118151090019725587308434876771_u128;
_26 = _5 - _11;
_22 = _13;
_15 = !111_u8;
_23 = 6_usize;
_24 = !8212158935847156936_u64;
_19 = [_8,_8,_8];
_21 = 61062_u16 | 9931_u16;
_1 = [_26];
RET = _26;
RET = _26;
Goto(bb4)
}
bb4 = {
Call(_27 = dump_var(17_usize, 17_usize, Move(_17), 9_usize, Move(_9), 16_usize, Move(_16), 19_usize, Move(_19)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_27 = dump_var(17_usize, 6_usize, Move(_6), 14_usize, Move(_14), 12_usize, Move(_12), 7_usize, Move(_7)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_27 = dump_var(17_usize, 10_usize, Move(_10), 8_usize, Move(_8), 15_usize, Move(_15), 22_usize, Move(_22)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [u16; 7],mut _2: f32,mut _3: [u16; 7],mut _4: [isize; 5],mut _5: [u16; 7],mut _6: [isize; 5],mut _7: [u16; 7],mut _8: [isize; 5],mut _9: [u64; 4],mut _10: f32) -> f64 {
mir! {
type RET = f64;
let _11: isize;
let _12: isize;
let _13: *mut [i8; 1];
let _14: f64;
let _15: *const u8;
let _16: isize;
let _17: u8;
let _18: f32;
let _19: f32;
let _20: isize;
let _21: bool;
let _22: char;
let _23: [isize; 5];
let _24: f64;
let _25: u64;
let _26: f32;
let _27: [u64; 4];
let _28: &'static u128;
let _29: ();
let _30: ();
{
_4 = _8;
_3 = _5;
RET = (-63350514211395306786928619472766501413_i128) as f64;
_3 = [57218_u16,51288_u16,11977_u16,60476_u16,48857_u16,56760_u16,36858_u16];
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-37_isize)];
Goto(bb1)
}
bb1 = {
_9 = [2448510160078398004_u64,15024924173586086963_u64,9768218994932818838_u64,3287662025949830370_u64];
RET = 20252_u16 as f64;
_2 = _10 * _10;
_8 = [(-9223372036854775808_isize),(-55_isize),(-9223372036854775808_isize),23_isize,9223372036854775807_isize];
_8 = [(-48_isize),(-9223372036854775808_isize),(-75_isize),(-26_isize),9223372036854775807_isize];
_4 = [(-9223372036854775808_isize),(-19_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [61182_u16,18077_u16,16755_u16,8937_u16,38499_u16,61962_u16,46410_u16];
_12 = -9223372036854775807_isize;
_8 = _6;
_6 = [_12,_12,_12,_12,_12];
RET = 4179120506306518337_i64 as f64;
RET = 44156_u16 as f64;
_8 = [_12,_12,_12,_12,_12];
_10 = -_2;
_15 = core::ptr::addr_of!(_17);
_3 = [11888_u16,9228_u16,53021_u16,6927_u16,57108_u16,10760_u16,65270_u16];
RET = 15774718721535399283_usize as f64;
_11 = !_12;
_2 = _10 - _10;
_9 = [11985107656370542980_u64,10603761823008392247_u64,17587912616523408042_u64,6208199915356648125_u64];
Goto(bb2)
}
bb2 = {
_1 = _7;
_7 = _1;
_9 = [14013184191674090893_u64,3344430628381619217_u64,3355721636584040570_u64,8149457246646754990_u64];
_9 = [16189450288558288631_u64,4823660678177635445_u64,16196614196061799189_u64,9866363595944439630_u64];
_2 = _10 + _10;
_16 = 2218_u16 as isize;
_21 = _11 < _12;
_14 = RET * RET;
_4 = [_16,_16,_12,_11,_16];
_7 = [22463_u16,29221_u16,32422_u16,15790_u16,16113_u16,11632_u16,47983_u16];
_19 = _10 + _2;
_20 = _11;
Goto(bb3)
}
bb3 = {
RET = 2563215891125639111_i64 as f64;
_21 = !false;
_18 = -_19;
_14 = -RET;
_21 = true;
_23 = _4;
_3 = [5151_u16,37598_u16,14435_u16,38933_u16,23050_u16,20829_u16,52449_u16];
_10 = _18 * _18;
_22 = '\u{dc0fb}';
RET = -_14;
_22 = '\u{224fd}';
_10 = _18;
_1 = _5;
_22 = '\u{40431}';
_20 = _16 << _12;
RET = -_14;
_12 = (-1403819570_i32) as isize;
Goto(bb4)
}
bb4 = {
_22 = '\u{ab108}';
_23 = [_16,_20,_11,_16,_20];
_5 = [38376_u16,39960_u16,15088_u16,34782_u16,54023_u16,28875_u16,54006_u16];
_17 = 103_u8;
_18 = -_2;
RET = _18 as f64;
_21 = true;
_22 = '\u{6681c}';
_22 = '\u{f46d8}';
RET = 63636_u16 as f64;
_12 = _20 << _17;
_16 = _12 >> _17;
_21 = true | false;
RET = -_14;
_14 = RET;
_9 = [5175164936067291759_u64,7872857224896441186_u64,7668171462690235403_u64,7326226517136137904_u64];
_22 = '\u{daffb}';
_12 = (-4469566129595829240_i64) as isize;
_23 = _8;
RET = 9095_u16 as f64;
_15 = core::ptr::addr_of!(_17);
_19 = _10;
RET = -_14;
_7 = [9052_u16,11251_u16,39585_u16,15750_u16,57811_u16,57543_u16,5603_u16];
_23 = _6;
_24 = -_14;
RET = _24 * _14;
match (*_15) {
0 => bb2,
1 => bb5,
2 => bb6,
103 => bb8,
_ => bb7
}
}
bb5 = {
RET = 2563215891125639111_i64 as f64;
_21 = !false;
_18 = -_19;
_14 = -RET;
_21 = true;
_23 = _4;
_3 = [5151_u16,37598_u16,14435_u16,38933_u16,23050_u16,20829_u16,52449_u16];
_10 = _18 * _18;
_22 = '\u{dc0fb}';
RET = -_14;
_22 = '\u{224fd}';
_10 = _18;
_1 = _5;
_22 = '\u{40431}';
_20 = _16 << _12;
RET = -_14;
_12 = (-1403819570_i32) as isize;
Goto(bb4)
}
bb6 = {
_1 = _7;
_7 = _1;
_9 = [14013184191674090893_u64,3344430628381619217_u64,3355721636584040570_u64,8149457246646754990_u64];
_9 = [16189450288558288631_u64,4823660678177635445_u64,16196614196061799189_u64,9866363595944439630_u64];
_2 = _10 + _10;
_16 = 2218_u16 as isize;
_21 = _11 < _12;
_14 = RET * RET;
_4 = [_16,_16,_12,_11,_16];
_7 = [22463_u16,29221_u16,32422_u16,15790_u16,16113_u16,11632_u16,47983_u16];
_19 = _10 + _2;
_20 = _11;
Goto(bb3)
}
bb7 = {
_9 = [2448510160078398004_u64,15024924173586086963_u64,9768218994932818838_u64,3287662025949830370_u64];
RET = 20252_u16 as f64;
_2 = _10 * _10;
_8 = [(-9223372036854775808_isize),(-55_isize),(-9223372036854775808_isize),23_isize,9223372036854775807_isize];
_8 = [(-48_isize),(-9223372036854775808_isize),(-75_isize),(-26_isize),9223372036854775807_isize];
_4 = [(-9223372036854775808_isize),(-19_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [61182_u16,18077_u16,16755_u16,8937_u16,38499_u16,61962_u16,46410_u16];
_12 = -9223372036854775807_isize;
_8 = _6;
_6 = [_12,_12,_12,_12,_12];
RET = 4179120506306518337_i64 as f64;
RET = 44156_u16 as f64;
_8 = [_12,_12,_12,_12,_12];
_10 = -_2;
_15 = core::ptr::addr_of!(_17);
_3 = [11888_u16,9228_u16,53021_u16,6927_u16,57108_u16,10760_u16,65270_u16];
RET = 15774718721535399283_usize as f64;
_11 = !_12;
_2 = _10 - _10;
_9 = [11985107656370542980_u64,10603761823008392247_u64,17587912616523408042_u64,6208199915356648125_u64];
Goto(bb2)
}
bb8 = {
RET = _20 as f64;
RET = _24 + _24;
_24 = RET;
_26 = -_2;
_25 = 11682460795603389012_u64;
_3 = [11497_u16,61502_u16,57066_u16,52879_u16,40088_u16,20490_u16,13771_u16];
_26 = -_10;
_15 = core::ptr::addr_of!((*_15));
_8 = _4;
_27 = _9;
RET = _24;
Call(_5 = core::intrinsics::transmute(_1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_2 = _18 * _26;
RET = _14;
_3 = [45263_u16,14849_u16,29390_u16,966_u16,7251_u16,4467_u16,64809_u16];
_27 = _9;
_1 = [8757_u16,43853_u16,24182_u16,49475_u16,25593_u16,30801_u16,37475_u16];
_16 = _12;
_27 = _9;
match _17 {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
103 => bb17,
_ => bb16
}
}
bb10 = {
RET = _20 as f64;
RET = _24 + _24;
_24 = RET;
_26 = -_2;
_25 = 11682460795603389012_u64;
_3 = [11497_u16,61502_u16,57066_u16,52879_u16,40088_u16,20490_u16,13771_u16];
_26 = -_10;
_15 = core::ptr::addr_of!((*_15));
_8 = _4;
_27 = _9;
RET = _24;
Call(_5 = core::intrinsics::transmute(_1), ReturnTo(bb9), UnwindUnreachable())
}
bb11 = {
_9 = [2448510160078398004_u64,15024924173586086963_u64,9768218994932818838_u64,3287662025949830370_u64];
RET = 20252_u16 as f64;
_2 = _10 * _10;
_8 = [(-9223372036854775808_isize),(-55_isize),(-9223372036854775808_isize),23_isize,9223372036854775807_isize];
_8 = [(-48_isize),(-9223372036854775808_isize),(-75_isize),(-26_isize),9223372036854775807_isize];
_4 = [(-9223372036854775808_isize),(-19_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [61182_u16,18077_u16,16755_u16,8937_u16,38499_u16,61962_u16,46410_u16];
_12 = -9223372036854775807_isize;
_8 = _6;
_6 = [_12,_12,_12,_12,_12];
RET = 4179120506306518337_i64 as f64;
RET = 44156_u16 as f64;
_8 = [_12,_12,_12,_12,_12];
_10 = -_2;
_15 = core::ptr::addr_of!(_17);
_3 = [11888_u16,9228_u16,53021_u16,6927_u16,57108_u16,10760_u16,65270_u16];
RET = 15774718721535399283_usize as f64;
_11 = !_12;
_2 = _10 - _10;
_9 = [11985107656370542980_u64,10603761823008392247_u64,17587912616523408042_u64,6208199915356648125_u64];
Goto(bb2)
}
bb12 = {
_9 = [2448510160078398004_u64,15024924173586086963_u64,9768218994932818838_u64,3287662025949830370_u64];
RET = 20252_u16 as f64;
_2 = _10 * _10;
_8 = [(-9223372036854775808_isize),(-55_isize),(-9223372036854775808_isize),23_isize,9223372036854775807_isize];
_8 = [(-48_isize),(-9223372036854775808_isize),(-75_isize),(-26_isize),9223372036854775807_isize];
_4 = [(-9223372036854775808_isize),(-19_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [61182_u16,18077_u16,16755_u16,8937_u16,38499_u16,61962_u16,46410_u16];
_12 = -9223372036854775807_isize;
_8 = _6;
_6 = [_12,_12,_12,_12,_12];
RET = 4179120506306518337_i64 as f64;
RET = 44156_u16 as f64;
_8 = [_12,_12,_12,_12,_12];
_10 = -_2;
_15 = core::ptr::addr_of!(_17);
_3 = [11888_u16,9228_u16,53021_u16,6927_u16,57108_u16,10760_u16,65270_u16];
RET = 15774718721535399283_usize as f64;
_11 = !_12;
_2 = _10 - _10;
_9 = [11985107656370542980_u64,10603761823008392247_u64,17587912616523408042_u64,6208199915356648125_u64];
Goto(bb2)
}
bb13 = {
RET = 2563215891125639111_i64 as f64;
_21 = !false;
_18 = -_19;
_14 = -RET;
_21 = true;
_23 = _4;
_3 = [5151_u16,37598_u16,14435_u16,38933_u16,23050_u16,20829_u16,52449_u16];
_10 = _18 * _18;
_22 = '\u{dc0fb}';
RET = -_14;
_22 = '\u{224fd}';
_10 = _18;
_1 = _5;
_22 = '\u{40431}';
_20 = _16 << _12;
RET = -_14;
_12 = (-1403819570_i32) as isize;
Goto(bb4)
}
bb14 = {
_22 = '\u{ab108}';
_23 = [_16,_20,_11,_16,_20];
_5 = [38376_u16,39960_u16,15088_u16,34782_u16,54023_u16,28875_u16,54006_u16];
_17 = 103_u8;
_18 = -_2;
RET = _18 as f64;
_21 = true;
_22 = '\u{6681c}';
_22 = '\u{f46d8}';
RET = 63636_u16 as f64;
_12 = _20 << _17;
_16 = _12 >> _17;
_21 = true | false;
RET = -_14;
_14 = RET;
_9 = [5175164936067291759_u64,7872857224896441186_u64,7668171462690235403_u64,7326226517136137904_u64];
_22 = '\u{daffb}';
_12 = (-4469566129595829240_i64) as isize;
_23 = _8;
RET = 9095_u16 as f64;
_15 = core::ptr::addr_of!(_17);
_19 = _10;
RET = -_14;
_7 = [9052_u16,11251_u16,39585_u16,15750_u16,57811_u16,57543_u16,5603_u16];
_23 = _6;
_24 = -_14;
RET = _24 * _14;
match (*_15) {
0 => bb2,
1 => bb5,
2 => bb6,
103 => bb8,
_ => bb7
}
}
bb15 = {
RET = 2563215891125639111_i64 as f64;
_21 = !false;
_18 = -_19;
_14 = -RET;
_21 = true;
_23 = _4;
_3 = [5151_u16,37598_u16,14435_u16,38933_u16,23050_u16,20829_u16,52449_u16];
_10 = _18 * _18;
_22 = '\u{dc0fb}';
RET = -_14;
_22 = '\u{224fd}';
_10 = _18;
_1 = _5;
_22 = '\u{40431}';
_20 = _16 << _12;
RET = -_14;
_12 = (-1403819570_i32) as isize;
Goto(bb4)
}
bb16 = {
_1 = _7;
_7 = _1;
_9 = [14013184191674090893_u64,3344430628381619217_u64,3355721636584040570_u64,8149457246646754990_u64];
_9 = [16189450288558288631_u64,4823660678177635445_u64,16196614196061799189_u64,9866363595944439630_u64];
_2 = _10 + _10;
_16 = 2218_u16 as isize;
_21 = _11 < _12;
_14 = RET * RET;
_4 = [_16,_16,_12,_11,_16];
_7 = [22463_u16,29221_u16,32422_u16,15790_u16,16113_u16,11632_u16,47983_u16];
_19 = _10 + _2;
_20 = _11;
Goto(bb3)
}
bb17 = {
_3 = [5524_u16,18620_u16,1099_u16,43764_u16,25699_u16,27976_u16,10094_u16];
_20 = _22 as isize;
_8 = [_12,_16,_16,_11,_16];
Goto(bb18)
}
bb18 = {
Call(_29 = dump_var(18_usize, 25_usize, Move(_25), 22_usize, Move(_22), 16_usize, Move(_16), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_29 = dump_var(18_usize, 8_usize, Move(_8), 23_usize, Move(_23), 17_usize, Move(_17), 12_usize, Move(_12)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_29 = dump_var(18_usize, 6_usize, Move(_6), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [u16; 7],mut _2: f32,mut _3: char,mut _4: [u64; 4],mut _5: [isize; 5],mut _6: f32,mut _7: [isize; 5]) -> f64 {
mir! {
type RET = f64;
let _8: [bool; 7];
let _9: [isize; 1];
let _10: isize;
let _11: *mut i16;
let _12: [u64; 4];
let _13: [i64; 2];
let _14: ([isize; 5], f64);
let _15: Adt43;
let _16: Adt53;
let _17: [u64; 2];
let _18: [u64; 4];
let _19: Adt55;
let _20: [i32; 3];
let _21: u64;
let _22: u8;
let _23: [char; 3];
let _24: bool;
let _25: Adt51;
let _26: Adt54;
let _27: f64;
let _28: Adt51;
let _29: isize;
let _30: char;
let _31: isize;
let _32: [u16; 7];
let _33: isize;
let _34: (f64, i128, u8, u32);
let _35: [usize; 5];
let _36: i32;
let _37: [i64; 2];
let _38: f32;
let _39: ();
let _40: ();
{
RET = 8251519415406301139_i64 as f64;
_1 = [29415_u16,29167_u16,16423_u16,9153_u16,24567_u16,6346_u16,53281_u16];
_1 = [44145_u16,65020_u16,4709_u16,9432_u16,21561_u16,55516_u16,13857_u16];
_5 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_2 = -_6;
Goto(bb1)
}
bb1 = {
RET = 3041493073210392591_i64 as f64;
_4 = [16401198277498827376_u64,16498840598714129552_u64,14235553711630340481_u64,15273865453642871696_u64];
_7 = [2_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_2 = _6 - _6;
_4 = [15717156675227954742_u64,10182541663546047595_u64,140322955356001242_u64,8417217509337589887_u64];
Goto(bb2)
}
bb2 = {
RET = 4_u8 as f64;
_8 = [true,true,true,false,false,true,false];
_1 = [40411_u16,16862_u16,33097_u16,4361_u16,13659_u16,28222_u16,16053_u16];
_1 = [2411_u16,5680_u16,39936_u16,34689_u16,4427_u16,56205_u16,54664_u16];
_9 = [(-9223372036854775808_isize)];
_9 = [(-9223372036854775808_isize)];
_10 = _6 as isize;
_8 = [true,false,true,true,false,true,true];
_8 = [false,false,false,true,true,true,false];
_4 = [8886924946310598530_u64,4043265367768698718_u64,17392232901918459586_u64,6136610151494870910_u64];
_6 = 6476129376616769921_u64 as f32;
_10 = 40799218604820786547335395600102258459_i128 as isize;
RET = _2 as f64;
RET = 5177_i16 as f64;
_7 = _5;
_14.0 = [_10,_10,_10,_10,_10];
_10 = (-48285501547775103075946582344857887046_i128) as isize;
_5 = _7;
Goto(bb3)
}
bb3 = {
_10 = (-109_isize);
_14.0 = [_10,_10,_10,_10,_10];
RET = 93_i8 as f64;
RET = (-1695306825_i32) as f64;
_12 = [15921996964978261219_u64,15573694770756688468_u64,171440179934227479_u64,1966432158960526753_u64];
RET = _10 as f64;
_12 = [15555963153767269062_u64,8465127585874306407_u64,778021631230715621_u64,6801660667468951584_u64];
_1 = [15805_u16,9947_u16,64171_u16,51797_u16,15519_u16,40216_u16,8362_u16];
_1 = [53564_u16,10760_u16,38617_u16,32458_u16,30481_u16,52768_u16,24926_u16];
_6 = _2 + _2;
_8 = [false,true,false,false,true,true,true];
Goto(bb4)
}
bb4 = {
_14 = (_5, RET);
_8 = [false,false,true,false,true,true,false];
_10 = 9223372036854775807_isize << 26434312428805488187842069200948242128_u128;
_7 = [_10,_10,_10,_10,_10];
_2 = (-41338270586558498011825173534123124162_i128) as f32;
_7 = [_10,_10,_10,_10,_10];
_3 = '\u{7018d}';
_1 = [57639_u16,55173_u16,21053_u16,7830_u16,56177_u16,17020_u16,34713_u16];
_13 = [4485510855415506775_i64,(-4054063548963463946_i64)];
_1 = [45791_u16,55638_u16,1887_u16,8995_u16,15549_u16,14448_u16,57030_u16];
_12 = _4;
_8 = [true,true,true,false,false,true,true];
_1 = [59548_u16,15409_u16,63388_u16,45145_u16,6795_u16,1763_u16,5138_u16];
_5 = [_10,_10,_10,_10,_10];
_14.1 = -RET;
_9 = [_10];
_14 = (_7, RET);
Call(_5 = core::intrinsics::transmute(_7), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_4 = [17203725283341738481_u64,10063751522647225584_u64,14988978521456171131_u64,13444045857651386403_u64];
RET = _14.1 + _14.1;
_21 = 13570909333885714470_u64;
_4 = [_21,_21,_21,_21];
_17 = [_21,_21];
_20 = [(-1893096764_i32),1835163293_i32,(-865040727_i32)];
_8 = [false,false,false,true,false,false,false];
RET = 57_i8 as f64;
_2 = _6;
_6 = _2 + _2;
_10 = RET as isize;
_14 = (_7, RET);
_14.0 = _5;
match _21 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb6,
13570909333885714470 => bb8,
_ => bb7
}
}
bb6 = {
RET = 3041493073210392591_i64 as f64;
_4 = [16401198277498827376_u64,16498840598714129552_u64,14235553711630340481_u64,15273865453642871696_u64];
_7 = [2_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_2 = _6 - _6;
_4 = [15717156675227954742_u64,10182541663546047595_u64,140322955356001242_u64,8417217509337589887_u64];
Goto(bb2)
}
bb7 = {
_10 = (-109_isize);
_14.0 = [_10,_10,_10,_10,_10];
RET = 93_i8 as f64;
RET = (-1695306825_i32) as f64;
_12 = [15921996964978261219_u64,15573694770756688468_u64,171440179934227479_u64,1966432158960526753_u64];
RET = _10 as f64;
_12 = [15555963153767269062_u64,8465127585874306407_u64,778021631230715621_u64,6801660667468951584_u64];
_1 = [15805_u16,9947_u16,64171_u16,51797_u16,15519_u16,40216_u16,8362_u16];
_1 = [53564_u16,10760_u16,38617_u16,32458_u16,30481_u16,52768_u16,24926_u16];
_6 = _2 + _2;
_8 = [false,true,false,false,true,true,true];
Goto(bb4)
}
bb8 = {
_6 = 1866969420_u32 as f32;
_23 = [_3,_3,_3];
_8 = [true,true,true,false,false,true,false];
_14.0 = _5;
_26.fld0 = 1873066049_u32 as i64;
_21 = (-126_i8) as u64;
_26.fld2 = _6;
_22 = 102_u8 << _21;
_27 = RET;
_9 = [_10];
_21 = !16525425688950860665_u64;
_26.fld4 = _22 - _22;
_26.fld1 = 28152046404443259140543130369843797985_u128 as u16;
_27 = -_14.1;
_23 = [_3,_3,_3];
_26.fld1 = !11599_u16;
_25 = Adt51::Variant1 { fld0: _9,fld1: _20 };
Goto(bb9)
}
bb9 = {
_5 = [_10,_10,_10,_10,_10];
_10 = -9223372036854775807_isize;
SetDiscriminant(_25, 0);
_20 = [1403806881_i32,580856254_i32,1957218007_i32];
_20 = [1153207261_i32,893285269_i32,333126510_i32];
place!(Field::<i16>(Variant(_25, 0), 4)) = (-17274_i16) ^ 2786_i16;
_24 = _21 <= _21;
place!(Field::<[u16; 7]>(Variant(_25, 0), 0)) = [_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1];
place!(Field::<*mut i16>(Variant(_25, 0), 5)) = core::ptr::addr_of_mut!(place!(Field::<i16>(Variant(_25, 0), 4)));
RET = 5_usize as f64;
_11 = core::ptr::addr_of_mut!(place!(Field::<i16>(Variant(_25, 0), 4)));
_1 = [_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1];
_34.2 = _26.fld4 | _26.fld4;
_10 = _27 as isize;
_8 = [_24,_24,_24,_24,_24,_24,_24];
_31 = _3 as isize;
_23 = [_3,_3,_3];
_4 = [_21,_21,_21,_21];
_21 = 126934504864912168539095356508529829683_i128 as u64;
_34 = (_14.1, (-16118245232640891074991784966743717862_i128), _26.fld4, 2018604401_u32);
_12 = _4;
_34 = (RET, 59507321966013936875851672238281548604_i128, _22, 4183534994_u32);
_28 = Adt51::Variant1 { fld0: _9,fld1: _20 };
_12 = [_21,_21,_21,_21];
match _34.3 {
4183534994 => bb10,
_ => bb1
}
}
bb10 = {
place!(Field::<i8>(Variant(_25, 0), 3)) = -109_i8;
_8 = [_24,_24,_24,_24,_24,_24,_24];
_26.fld4 = _26.fld0 as u8;
_32 = [_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1,_26.fld1];
_34.2 = _31 as u8;
_29 = 306163173471974149888100340608558807926_u128 as isize;
RET = -_27;
_34.2 = !_26.fld4;
_25 = Adt51::Variant1 { fld0: Field::<[isize; 1]>(Variant(_28, 1), 0),fld1: _20 };
_33 = _34.2 as isize;
place!(Field::<[isize; 1]>(Variant(_25, 1), 0)) = [_10];
match _34.3 {
0 => bb9,
1 => bb2,
4183534994 => bb11,
_ => bb4
}
}
bb11 = {
_10 = _29 * _31;
_17 = [_21,_21];
_14.1 = -RET;
_26.fld4 = _22 << _26.fld0;
_14.0 = [_29,_31,_31,_10,_33];
place!(Field::<[i32; 3]>(Variant(_28, 1), 1)) = [(-771007585_i32),(-417603696_i32),134478294_i32];
_10 = (-612452884_i32) as isize;
_25 = Adt51::Variant1 { fld0: Field::<[isize; 1]>(Variant(_28, 1), 0),fld1: Field::<[i32; 3]>(Variant(_28, 1), 1) };
_22 = !_34.2;
_35 = [4_usize,7_usize,1_usize,3_usize,17816643612917215319_usize];
_8 = [_24,_24,_24,_24,_24,_24,_24];
_3 = '\u{6efc1}';
_10 = _31;
_1 = _32;
_17 = [_21,_21];
_20 = Field::<[i32; 3]>(Variant(_28, 1), 1);
_10 = _29;
place!(Field::<[isize; 1]>(Variant(_25, 1), 0)) = [_29];
Call(_26.fld4 = core::intrinsics::bswap(_22), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_33 = _2 as isize;
_1 = _32;
place!(Field::<[isize; 1]>(Variant(_25, 1), 0)) = [_33];
match _34.1 {
0 => bb2,
59507321966013936875851672238281548604 => bb14,
_ => bb13
}
}
bb13 = {
RET = 4_u8 as f64;
_8 = [true,true,true,false,false,true,false];
_1 = [40411_u16,16862_u16,33097_u16,4361_u16,13659_u16,28222_u16,16053_u16];
_1 = [2411_u16,5680_u16,39936_u16,34689_u16,4427_u16,56205_u16,54664_u16];
_9 = [(-9223372036854775808_isize)];
_9 = [(-9223372036854775808_isize)];
_10 = _6 as isize;
_8 = [true,false,true,true,false,true,true];
_8 = [false,false,false,true,true,true,false];
_4 = [8886924946310598530_u64,4043265367768698718_u64,17392232901918459586_u64,6136610151494870910_u64];
_6 = 6476129376616769921_u64 as f32;
_10 = 40799218604820786547335395600102258459_i128 as isize;
RET = _2 as f64;
RET = 5177_i16 as f64;
_7 = _5;
_14.0 = [_10,_10,_10,_10,_10];
_10 = (-48285501547775103075946582344857887046_i128) as isize;
_5 = _7;
Goto(bb3)
}
bb14 = {
_2 = -_6;
_18 = [_21,_21,_21,_21];
_36 = (-1862913662_i32) | (-660558580_i32);
_26.fld3.0 = core::ptr::addr_of!(_36);
SetDiscriminant(_25, 1);
_26.fld4 = _22;
_26.fld2 = _2;
_12 = [_21,_21,_21,_21];
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(19_usize, 4_usize, Move(_4), 33_usize, Move(_33), 8_usize, Move(_8), 36_usize, Move(_36)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(19_usize, 21_usize, Move(_21), 32_usize, Move(_32), 5_usize, Move(_5), 35_usize, Move(_35)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(19_usize, 3_usize, Move(_3), 20_usize, Move(_20), 24_usize, Move(_24), 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(527792591_i32), std::hint::black_box((-67321669330531261357283086523111706506_i128)), std::hint::black_box((-44_i8)));
                
            }
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: *mut i16,
fld1: u8,
fld2: usize,
fld3: [char; 3],
fld4: *mut [i8; 1],
fld5: [i64; 2],
fld6: f32,
fld7: i128,

},
Variant1{
fld0: [u16; 7],
fld1: [isize; 8],
fld2: *const i32,
fld3: *mut isize,
fld4: *mut i16,
fld5: [i64; 2],
fld6: u128,
fld7: f32,

},
Variant2{
fld0: *mut u128,
fld1: char,
fld2: [i64; 2],
fld3: u32,
fld4: *mut i8,

},
Variant3{
fld0: (f64, i128, u8, u32),
fld1: [i64; 2],
fld2: isize,
fld3: i8,
fld4: [isize; 1],
fld5: [isize; 8],
fld6: i64,
fld7: u64,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt44 {
fld0: [usize; 5],
fld1: f64,
fld2: [u16; 7],
fld3: f32,
fld4: *const bool,
fld5: u64,
fld6: *mut i8,
}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: [isize; 5],

},
Variant1{
fld0: Adt43,
fld1: *mut u128,
fld2: *const u8,
fld3: i8,
fld4: *mut isize,

},
Variant2{
fld0: Adt44,
fld1: usize,
fld2: *mut i16,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt46 {
Variant0{
fld0: [u64; 4],
fld1: char,
fld2: [u64; 2],

},
Variant1{
fld0: [i8; 1],
fld1: *mut u128,
fld2: f64,
fld3: [usize; 5],

},
Variant2{
fld0: u16,
fld1: [u64; 4],

},
Variant3{
fld0: bool,
fld1: [isize; 5],
fld2: [u64; 4],
fld3: *mut u128,
fld4: *mut isize,
fld5: f64,
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: [usize; 5],
fld1: usize,
fld2: Adt43,
fld3: *const i32,
fld4: i16,
fld5: [i8; 1],
fld6: [bool; 7],

},
Variant1{
fld0: *const bool,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: u8,
fld1: *const i32,
fld2: Adt45,
fld3: u64,
fld4: *mut u128,

},
Variant1{
fld0: [isize; 8],
fld1: char,
fld2: *mut [i8; 1],
fld3: (f64, [i8; 1], (*const i32,)),
fld4: u8,
fld5: *mut i8,
fld6: u64,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: (f64, [i8; 1], (*const i32,)),
fld1: [u64; 4],

},
Variant1{
fld0: [i32; 3],
fld1: [char; 3],

},
Variant2{
fld0: [char; 3],
fld1: [i8; 1],

},
Variant3{
fld0: i64,
fld1: char,
fld2: *const i32,

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: (*const i32,),
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [u16; 7],
fld1: Adt50,
fld2: u128,
fld3: i8,
fld4: i16,
fld5: *mut i16,
fld6: usize,
fld7: Adt45,

},
Variant1{
fld0: [isize; 1],
fld1: [i32; 3],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: (u128, isize, *const u8, f32, *mut i8),
fld1: Adt49,
fld2: usize,
fld3: Adt50,
fld4: i16,
fld5: f32,

},
Variant1{
fld0: ([isize; 5], f64),

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: bool,
fld1: *const bool,
fld2: *mut isize,
fld3: Adt44,
fld4: i32,

},
Variant1{
fld0: Adt52,
fld1: f64,
fld2: f32,
fld3: Adt48,

},
Variant2{
fld0: u32,
fld1: (*const i32,),
fld2: *const i32,
fld3: i8,
fld4: *mut i8,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: i64,
fld1: u16,
fld2: f32,
fld3: (*const i32,),
fld4: u8,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt55 {
Variant0{
fld0: u64,
fld1: f32,
fld2: (f64, [i8; 1], (*const i32,)),
fld3: [i64; 2],

},
Variant1{
fld0: bool,
fld1: [u64; 2],
fld2: i32,
fld3: Adt46,
fld4: [u16; 7],

},
Variant2{
fld0: *mut i8,
fld1: i64,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: u16,
fld1: [bool; 7],
fld2: Adt55,
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt56,

},
Variant1{
fld0: Adt53,
fld1: u32,
fld2: *const bool,
fld3: f64,
fld4: usize,
fld5: [isize; 5],
fld6: *mut u128,
fld7: u64,

},
Variant2{
fld0: f64,
fld1: f32,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: f32,

},
Variant1{
fld0: f32,
fld1: u128,
fld2: [bool; 7],
fld3: Adt53,

},
Variant2{
fld0: *mut isize,

},
Variant3{
fld0: [isize; 5],
fld1: [bool; 7],

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: *const i32,
fld1: f32,
fld2: Adt50,
fld3: i8,
fld4: [isize; 1],
fld5: (*const i32,),
fld6: Adt49,
fld7: *const bool,

},
Variant1{
fld0: bool,
fld1: *const i32,
fld2: [usize; 5],
fld3: [char; 3],
fld4: [isize; 5],
fld5: i32,

},
Variant2{
fld0: f64,
fld1: *mut isize,
fld2: Adt49,
fld3: i8,
fld4: [bool; 7],
fld5: (u128, isize, *const u8, f32, *mut i8),

},
Variant3{
fld0: [u64; 2],
fld1: i64,
fld2: Adt58,
fld3: i8,
fld4: i16,

}}

