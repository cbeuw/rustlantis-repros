#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> u32 {
mir! {
type RET = u32;
let _15: u64;
let _16: usize;
let _17: Adt53;
let _18: i64;
let _19: isize;
let _20: i32;
let _21: isize;
let _22: (*const i16, bool);
let _23: (*mut u16, *const u16);
let _24: i32;
let _25: u128;
let _26: u64;
let _27: Adt47;
let _28: (*mut u16, *const u16);
let _29: Adt53;
let _30: (*mut i8, usize);
let _31: Adt39;
let _32: char;
let _33: i64;
let _34: i64;
let _35: Adt41;
let _36: f64;
let _37: [i128; 6];
let _38: Adt39;
let _39: isize;
let _40: isize;
let _41: i128;
let _42: ();
let _43: ();
{
_6 = 450241281_i32;
_10 = 69_u8 & 118_u8;
_1 = true ^ false;
_2 = '\u{dd574}';
_5 = -(-16110_i16);
_7 = 5684517886897511552_i64;
_8 = 68793862665349075405230507553088329586_i128;
_11 = 50936_u16 << _8;
_8 = !57046534605536842612968947238068392604_i128;
_6 = 2033481418_i32;
_6 = (-2051649421_i32) << _5;
Goto(bb1)
}
bb1 = {
_6 = !547845009_i32;
RET = 3964825292_u32 + 2884273141_u32;
RET = 3234107037_u32;
_18 = _7 + _7;
_14 = !287497436009329722317868911926921555015_u128;
_5 = 6505_i16;
_13 = 18233198042788856019_u64;
_15 = _13;
_15 = !_13;
_9 = 3_usize | 11383658088461784505_usize;
_19 = (-19_isize);
_8 = (-8199054699216857049143531652252568934_i128) | (-53972775274868631529573764572670900929_i128);
match _13 {
0 => bb2,
18233198042788856019 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_3 = _10 as isize;
_12 = RET | RET;
_17.fld0.0 = RET as i16;
_23.0 = core::ptr::addr_of_mut!(_11);
_17.fld0.0 = _5 >> _8;
_9 = 9499236076550135945_usize ^ 4_usize;
_22.1 = _1 >= _1;
_17.fld0.0 = !_5;
_20 = !_6;
RET = !_12;
_16 = _9 - _9;
_11 = 27713_u16 << RET;
_22.1 = _1 | _1;
_5 = -_17.fld0.0;
_11 = !36635_u16;
_5 = _17.fld0.0 ^ _17.fld0.0;
_23.1 = core::ptr::addr_of!(_11);
_11 = !22375_u16;
_21 = _3 + _3;
_22.0 = core::ptr::addr_of!(_17.fld0.0);
_1 = _22.1;
_26 = !_13;
_25 = !_14;
_16 = _21 as usize;
_23.0 = core::ptr::addr_of_mut!(_11);
_22.0 = core::ptr::addr_of!(_5);
_23.1 = core::ptr::addr_of!(_11);
match _7 {
0 => bb1,
1 => bb2,
5684517886897511552 => bb5,
_ => bb3
}
}
bb5 = {
_21 = _3 >> RET;
_20 = _6;
_5 = _6 as i16;
_24 = _10 as i32;
_17.fld0 = (_5,);
RET = !_12;
_16 = !_9;
_1 = _22.1 | _22.1;
RET = _12;
_21 = -_3;
_15 = _26 ^ _26;
_23.0 = core::ptr::addr_of_mut!(_11);
match _7 {
0 => bb1,
5684517886897511552 => bb6,
_ => bb3
}
}
bb6 = {
_5 = _17.fld0.0 ^ _17.fld0.0;
_26 = _12 as u64;
_29 = Adt53 { fld0: _17.fld0 };
_28.0 = core::ptr::addr_of_mut!(_11);
_32 = _2;
_8 = !63064370347643651832192512032881736566_i128;
_4 = -(-59_i8);
_5 = _11 as i16;
_5 = _17.fld0.0 | _29.fld0.0;
_30.1 = _32 as usize;
_23.1 = core::ptr::addr_of!(_11);
_33 = !_18;
_17.fld0 = (_5,);
_32 = _2;
_28 = (_23.0, _23.1);
_23 = (_28.0, _28.1);
Goto(bb7)
}
bb7 = {
_30.0 = core::ptr::addr_of_mut!(_4);
_17.fld0 = (_5,);
_31.fld0 = (_30.0, _9);
_17 = _29;
_30.0 = core::ptr::addr_of_mut!(_4);
_10 = !157_u8;
_17.fld0.0 = _14 as i16;
_5 = _29.fld0.0 + _17.fld0.0;
_31.fld0.0 = core::ptr::addr_of_mut!(_4);
_32 = _2;
_6 = _10 as i32;
_31.fld0.1 = _5 as usize;
RET = _12;
_31.fld0 = (_30.0, _9);
_31 = Adt39 { fld0: _30 };
_20 = _3 as i32;
_6 = _24 | _20;
_17.fld0 = (_5,);
_21 = _3;
_21 = _3;
_22.0 = core::ptr::addr_of!(_17.fld0.0);
_30.0 = _31.fld0.0;
_28.0 = _23.0;
_30.1 = !_16;
_23 = _28;
_30 = _31.fld0;
_16 = _10 as usize;
_23 = _28;
Goto(bb8)
}
bb8 = {
_7 = _6 as i64;
_8 = (-128379533448319190442370299384968164411_i128) >> _5;
_30.1 = _11 as usize;
_4 = (-43_i8) >> _33;
_25 = !_14;
_28 = (_23.0, _23.1);
match _13 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb9,
6 => bb10,
18233198042788856019 => bb12,
_ => bb11
}
}
bb9 = {
Return()
}
bb10 = {
_5 = _17.fld0.0 ^ _17.fld0.0;
_26 = _12 as u64;
_29 = Adt53 { fld0: _17.fld0 };
_28.0 = core::ptr::addr_of_mut!(_11);
_32 = _2;
_8 = !63064370347643651832192512032881736566_i128;
_4 = -(-59_i8);
_5 = _11 as i16;
_5 = _17.fld0.0 | _29.fld0.0;
_30.1 = _32 as usize;
_23.1 = core::ptr::addr_of!(_11);
_33 = !_18;
_17.fld0 = (_5,);
_32 = _2;
_28 = (_23.0, _23.1);
_23 = (_28.0, _28.1);
Goto(bb7)
}
bb11 = {
_3 = _10 as isize;
_12 = RET | RET;
_17.fld0.0 = RET as i16;
_23.0 = core::ptr::addr_of_mut!(_11);
_17.fld0.0 = _5 >> _8;
_9 = 9499236076550135945_usize ^ 4_usize;
_22.1 = _1 >= _1;
_17.fld0.0 = !_5;
_20 = !_6;
RET = !_12;
_16 = _9 - _9;
_11 = 27713_u16 << RET;
_22.1 = _1 | _1;
_5 = -_17.fld0.0;
_11 = !36635_u16;
_5 = _17.fld0.0 ^ _17.fld0.0;
_23.1 = core::ptr::addr_of!(_11);
_11 = !22375_u16;
_21 = _3 + _3;
_22.0 = core::ptr::addr_of!(_17.fld0.0);
_1 = _22.1;
_26 = !_13;
_25 = !_14;
_16 = _21 as usize;
_23.0 = core::ptr::addr_of_mut!(_11);
_22.0 = core::ptr::addr_of!(_5);
_23.1 = core::ptr::addr_of!(_11);
match _7 {
0 => bb1,
1 => bb2,
5684517886897511552 => bb5,
_ => bb3
}
}
bb12 = {
_28.0 = core::ptr::addr_of_mut!(_11);
_2 = _32;
_4 = 58_i8 - (-109_i8);
_18 = _32 as i64;
_23 = (_28.0, _28.1);
_8 = _6 as i128;
_32 = _2;
RET = _25 as u32;
_7 = _11 as i64;
_36 = _7 as f64;
_23.1 = _28.1;
_18 = _29.fld0.0 as i64;
Call(_32 = fn1(_6, _22, _26, _2, _23.1, _22, _30.0, _1, _28.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_30.1 = _9;
_36 = _11 as f64;
_33 = _18 | _18;
_23.1 = _28.1;
_29.fld0 = _17.fld0;
_29.fld0.0 = _17.fld0.0 - _5;
_6 = _20 * _20;
_37 = [_8,_8,_8,_8,_8,_8];
_5 = !_17.fld0.0;
_31.fld0.0 = _30.0;
_23.1 = _28.1;
_19 = _3;
_15 = _13;
_32 = _2;
RET = _12;
Call(_33 = core::intrinsics::bswap(_7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_35 = Adt41::Variant1 { fld0: _22.1,fld1: _32,fld2: _33,fld3: _31.fld0.1,fld4: _22 };
place!(Field::<bool>(Variant(_35, 1), 0)) = _1;
_31.fld0.1 = !Field::<usize>(Variant(_35, 1), 3);
place!(Field::<char>(Variant(_35, 1), 1)) = _2;
_13 = _26;
_38.fld0.1 = _9 >> _4;
_10 = 8_u8 ^ 197_u8;
_32 = _2;
_34 = _9 as i64;
_22.1 = _36 > _36;
_19 = -_3;
place!(Field::<char>(Variant(_35, 1), 1)) = _32;
_38.fld0.0 = _31.fld0.0;
_19 = _21 << _13;
_38.fld0.1 = _9 * _9;
_17.fld0.0 = _2 as i16;
_4 = 110_i8 ^ 113_i8;
_4 = (-17_i8);
_38.fld0.1 = _31.fld0.1;
_16 = !_9;
place!(Field::<usize>(Variant(_35, 1), 3)) = _11 as usize;
place!(Field::<(*const i16, bool)>(Variant(_35, 1), 4)).0 = _22.0;
_7 = -_33;
_6 = -_24;
_7 = Field::<bool>(Variant(_35, 1), 0) as i64;
_41 = _24 as i128;
_38.fld0.0 = _30.0;
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(0_usize, 13_usize, Move(_13), 6_usize, Move(_6), 14_usize, Move(_14), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(0_usize, 7_usize, Move(_7), 10_usize, Move(_10), 34_usize, Move(_34), 41_usize, Move(_41)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(0_usize, 2_usize, Move(_2), 16_usize, Move(_16), 12_usize, Move(_12), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(0_usize, 21_usize, Move(_21), 32_usize, Move(_32), 43_usize, _43, 43_usize, _43), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i32,mut _2: (*const i16, bool),mut _3: u64,mut _4: char,mut _5: *const u16,mut _6: (*const i16, bool),mut _7: *mut i8,mut _8: bool,mut _9: *mut u16) -> char {
mir! {
type RET = char;
let _10: (u64,);
let _11: (i16,);
let _12: i16;
let _13: [i128; 6];
let _14: Adt41;
let _15: i16;
let _16: isize;
let _17: char;
let _18: Adt53;
let _19: *const *const u64;
let _20: Adt37;
let _21: (u64,);
let _22: Adt42;
let _23: isize;
let _24: (i16,);
let _25: (u64,);
let _26: isize;
let _27: char;
let _28: i128;
let _29: i16;
let _30: (u64,);
let _31: *const i16;
let _32: [u8; 7];
let _33: isize;
let _34: *mut u16;
let _35: [i128; 6];
let _36: [u8; 7];
let _37: f64;
let _38: (i16,);
let _39: bool;
let _40: (i16,);
let _41: i64;
let _42: isize;
let _43: (i16,);
let _44: i128;
let _45: (*mut i8, usize);
let _46: [u8; 7];
let _47: (i16,);
let _48: f32;
let _49: f64;
let _50: isize;
let _51: bool;
let _52: (u64,);
let _53: ();
let _54: ();
{
_2.0 = _6.0;
RET = _4;
_2 = _6;
_2 = _6;
_4 = RET;
RET = _4;
_2 = (_6.0, _8);
_6.0 = _2.0;
_6.1 = _2.1;
_6.1 = _2.1;
_1 = 7_usize as i32;
_6 = _2;
_3 = !11419422789158641989_u64;
_11 = ((-18590_i16),);
_11.0 = 5287_i16 ^ (-8838_i16);
_11.0 = 7128_i16 ^ 29622_i16;
_11.0 = _3 as i16;
_1 = 1581932639_i32;
_12 = _11.0 | _11.0;
_3 = !16570812921829094137_u64;
_12 = 14881742652767646608_usize as i16;
RET = _4;
_2 = (_6.0, _8);
_6.0 = core::ptr::addr_of!(_11.0);
Goto(bb1)
}
bb1 = {
_6 = (_2.0, _2.1);
RET = _4;
_2.0 = _6.0;
_6 = (_2.0, _2.1);
_12 = !_11.0;
_8 = _4 > RET;
_12 = 106_i8 as i16;
RET = _4;
_13 = [(-33281902785288860820011765938724739269_i128),21520276606455783209751842469186958469_i128,54528591428316541047047740991972756880_i128,145036000821601687973463124700248010700_i128,116574918165401456835811920695813594722_i128,153636258077262824286348630507686051279_i128];
_2 = (_6.0, _6.1);
_10.0 = !_3;
_6 = _2;
_6.0 = _2.0;
_3 = !_10.0;
_6.1 = !_8;
_13 = [20553476640318515595040314316432373471_i128,(-87059258538035413556646804622260428398_i128),(-15038090084286291388409977389085576950_i128),66415290158492338073953387474844302924_i128,(-138556395223859227365860051021864140396_i128),88798156592263601581293218554076068252_i128];
_11 = (_12,);
_4 = RET;
_2 = (_6.0, _6.1);
_10 = (_3,);
_6.0 = core::ptr::addr_of!(_11.0);
_1 = -(-837708038_i32);
_8 = _6.1;
_2 = (_6.0, _6.1);
Goto(bb2)
}
bb2 = {
_2.1 = _8;
_8 = _2.1 & _6.1;
_6.0 = _2.0;
_11.0 = _12 ^ _12;
_4 = RET;
_2.0 = core::ptr::addr_of!(_11.0);
_15 = 15090801137416992580_usize as i16;
_4 = RET;
_1 = (-1260277302_i32);
_12 = !_11.0;
_2.1 = !_6.1;
_16 = (-9223372036854775808_isize) | 9223372036854775807_isize;
RET = _4;
_3 = _10.0 | _10.0;
_20.fld3 = _10.0 as i8;
_20.fld5 = _1;
RET = _4;
Call(_20.fld4 = fn2(_9, _16, _9, _20.fld5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = (_6.0, _6.1);
_12 = _11.0;
_4 = RET;
_2 = (_6.0, _6.1);
_21 = (_3,);
_18.fld0 = _11;
_20.fld2 = !_16;
_20.fld6 = core::ptr::addr_of_mut!(_9);
_4 = RET;
_25 = (_10.0,);
_17 = RET;
RET = _4;
_2.1 = !_6.1;
_8 = _2.1;
RET = _4;
_2.0 = core::ptr::addr_of!(_24.0);
_17 = RET;
_24.0 = 4038_u16 as i16;
_6 = (_2.0, _8);
match _1 {
340282366920938463463374607430507934154 => bb4,
_ => bb1
}
}
bb4 = {
_24 = (_18.fld0.0,);
_16 = _20.fld2;
RET = _17;
_18.fld0.0 = !_24.0;
_26 = -_20.fld2;
_20.fld0 = !_6.1;
_2.0 = _6.0;
_3 = _20.fld0 as u64;
_25.0 = !_10.0;
_24.0 = _12 - _11.0;
_30 = _21;
_17 = _4;
_28 = (-81530893160837468429416228501631365498_i128) & 150243622361757669376274426893149815414_i128;
_25.0 = !_3;
_30 = (_3,);
_21.0 = !_25.0;
_3 = !_10.0;
_10 = (_25.0,);
_4 = RET;
_2.1 = !_8;
_15 = _6.1 as i16;
_21 = _10;
_18 = Adt53 { fld0: _24 };
_3 = !_25.0;
Goto(bb5)
}
bb5 = {
_20.fld5 = _1;
_24 = (_18.fld0.0,);
_10.0 = _25.0 << _15;
_20.fld0 = !_6.1;
_26 = _20.fld2 * _16;
_2 = _6;
_30.0 = 5_usize as u64;
_20.fld3 = 19_i8 ^ (-40_i8);
Call(_20.fld5 = core::intrinsics::bswap(_1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17 = _4;
_10.0 = _30.0 + _3;
match _1 {
0 => bb1,
340282366920938463463374607430507934154 => bb7,
_ => bb2
}
}
bb7 = {
_29 = _18.fld0.0 >> _26;
_3 = _25.0;
_13 = [_28,_28,_28,_28,_28,_28];
_1 = _20.fld5;
_33 = _20.fld2 & _20.fld2;
_25.0 = _10.0;
_11 = (_18.fld0.0,);
_20.fld5 = !_1;
_34 = _9;
_27 = _17;
_34 = _9;
_35 = [_28,_28,_28,_28,_28,_28];
_36 = [206_u8,199_u8,70_u8,217_u8,122_u8,189_u8,138_u8];
RET = _17;
Goto(bb8)
}
bb8 = {
_6.1 = _20.fld0;
_31 = core::ptr::addr_of!(_15);
_22 = Adt42::Variant2 { fld0: _36,fld1: _27,fld2: _5,fld3: _3,fld4: _9,fld5: 7_usize,fld6: (-75602598222358840_i64),fld7: 88275407715227069382830415087673525725_u128 };
_24.0 = _28 as i16;
_20.fld4 = core::ptr::addr_of_mut!(_20.fld3);
_24.0 = 253014387254878406544852276046421785422_u128 as i16;
place!(Field::<u64>(Variant(_22, 2), 3)) = 1_usize as u64;
_15 = -_29;
_14 = Adt41::Variant1 { fld0: _2.1,fld1: _17,fld2: (-6757406658222544707_i64),fld3: 14798908306485501813_usize,fld4: _2 };
_6.1 = Field::<(*const i16, bool)>(Variant(_14, 1), 4).1;
_23 = !_20.fld2;
place!(Field::<[u8; 7]>(Variant(_22, 2), 0)) = [173_u8,68_u8,53_u8,211_u8,105_u8,221_u8,204_u8];
_6.1 = _2.1;
_32 = [221_u8,229_u8,225_u8,197_u8,50_u8,81_u8,253_u8];
RET = _27;
place!(Field::<usize>(Variant(_22, 2), 5)) = 1695127967288852362_usize - 16373835587281735906_usize;
_39 = Field::<(*const i16, bool)>(Variant(_14, 1), 4).1 & _20.fld0;
_22 = Adt42::Variant2 { fld0: _32,fld1: RET,fld2: _5,fld3: _30.0,fld4: _9,fld5: 16542718161836025469_usize,fld6: (-3989394953491291183_i64),fld7: 261725593138828043582640516939758905818_u128 };
place!(Field::<(*const i16, bool)>(Variant(_14, 1), 4)).0 = _2.0;
place!(Field::<i64>(Variant(_14, 1), 2)) = 7203982894977616582_i64;
_37 = 3921889339_u32 as f64;
place!(Field::<i64>(Variant(_22, 2), 6)) = Field::<i64>(Variant(_14, 1), 2);
RET = Field::<char>(Variant(_14, 1), 1);
_12 = !_18.fld0.0;
_1 = _20.fld5 ^ _20.fld5;
_2.0 = _31;
Goto(bb9)
}
bb9 = {
_36 = [66_u8,79_u8,19_u8,231_u8,182_u8,85_u8,235_u8];
_11.0 = (*_31) | (*_31);
place!(Field::<i64>(Variant(_22, 2), 6)) = -Field::<i64>(Variant(_14, 1), 2);
place!(Field::<u128>(Variant(_22, 2), 7)) = 205299564554009940562822306713341666459_u128;
_29 = (*_31) << _11.0;
_20.fld3 = Field::<u64>(Variant(_22, 2), 3) as i8;
match Field::<u128>(Variant(_22, 2), 7) {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb6,
205299564554009940562822306713341666459 => bb11,
_ => bb10
}
}
bb10 = {
_24 = (_18.fld0.0,);
_16 = _20.fld2;
RET = _17;
_18.fld0.0 = !_24.0;
_26 = -_20.fld2;
_20.fld0 = !_6.1;
_2.0 = _6.0;
_3 = _20.fld0 as u64;
_25.0 = !_10.0;
_24.0 = _12 - _11.0;
_30 = _21;
_17 = _4;
_28 = (-81530893160837468429416228501631365498_i128) & 150243622361757669376274426893149815414_i128;
_25.0 = !_3;
_30 = (_3,);
_21.0 = !_25.0;
_3 = !_10.0;
_10 = (_25.0,);
_4 = RET;
_2.1 = !_8;
_15 = _6.1 as i16;
_21 = _10;
_18 = Adt53 { fld0: _24 };
_3 = !_25.0;
Goto(bb5)
}
bb11 = {
_31 = core::ptr::addr_of!((*_31));
_28 = _29 as i128;
_41 = Field::<i64>(Variant(_22, 2), 6) * Field::<i64>(Variant(_14, 1), 2);
_6 = (_2.0, _39);
_26 = _23 ^ _33;
_31 = _2.0;
_4 = _17;
place!(Field::<(*const i16, bool)>(Variant(_14, 1), 4)).1 = _8 | _8;
_12 = _29 * _11.0;
_5 = Field::<*const u16>(Variant(_22, 2), 2);
_40.0 = _12 << _15;
place!(Field::<bool>(Variant(_14, 1), 0)) = !_6.1;
place!(Field::<i64>(Variant(_14, 1), 2)) = _41 ^ _41;
_34 = _9;
place!(Field::<i64>(Variant(_14, 1), 2)) = Field::<char>(Variant(_14, 1), 1) as i64;
_4 = Field::<char>(Variant(_14, 1), 1);
_18.fld0 = _11;
_38.0 = _40.0 * _40.0;
_12 = _1 as i16;
place!(Field::<(*const i16, bool)>(Variant(_14, 1), 4)).0 = _31;
RET = _4;
_10.0 = _21.0 ^ _3;
_1 = 113_u8 as i32;
_45.1 = _41 as usize;
_28 = 107115967556293272114978411659112171755_i128;
place!(Field::<u64>(Variant(_22, 2), 3)) = _30.0 >> _29;
match Field::<u128>(Variant(_22, 2), 7) {
205299564554009940562822306713341666459 => bb13,
_ => bb12
}
}
bb12 = {
_6 = (_2.0, _2.1);
RET = _4;
_2.0 = _6.0;
_6 = (_2.0, _2.1);
_12 = !_11.0;
_8 = _4 > RET;
_12 = 106_i8 as i16;
RET = _4;
_13 = [(-33281902785288860820011765938724739269_i128),21520276606455783209751842469186958469_i128,54528591428316541047047740991972756880_i128,145036000821601687973463124700248010700_i128,116574918165401456835811920695813594722_i128,153636258077262824286348630507686051279_i128];
_2 = (_6.0, _6.1);
_10.0 = !_3;
_6 = _2;
_6.0 = _2.0;
_3 = !_10.0;
_6.1 = !_8;
_13 = [20553476640318515595040314316432373471_i128,(-87059258538035413556646804622260428398_i128),(-15038090084286291388409977389085576950_i128),66415290158492338073953387474844302924_i128,(-138556395223859227365860051021864140396_i128),88798156592263601581293218554076068252_i128];
_11 = (_12,);
_4 = RET;
_2 = (_6.0, _6.1);
_10 = (_3,);
_6.0 = core::ptr::addr_of!(_11.0);
_1 = -(-837708038_i32);
_8 = _6.1;
_2 = (_6.0, _6.1);
Goto(bb2)
}
bb13 = {
place!(Field::<(*const i16, bool)>(Variant(_14, 1), 4)).0 = core::ptr::addr_of!(_18.fld0.0);
match Field::<u128>(Variant(_22, 2), 7) {
0 => bb1,
1 => bb11,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
205299564554009940562822306713341666459 => bb19,
_ => bb18
}
}
bb14 = {
_6 = (_2.0, _2.1);
RET = _4;
_2.0 = _6.0;
_6 = (_2.0, _2.1);
_12 = !_11.0;
_8 = _4 > RET;
_12 = 106_i8 as i16;
RET = _4;
_13 = [(-33281902785288860820011765938724739269_i128),21520276606455783209751842469186958469_i128,54528591428316541047047740991972756880_i128,145036000821601687973463124700248010700_i128,116574918165401456835811920695813594722_i128,153636258077262824286348630507686051279_i128];
_2 = (_6.0, _6.1);
_10.0 = !_3;
_6 = _2;
_6.0 = _2.0;
_3 = !_10.0;
_6.1 = !_8;
_13 = [20553476640318515595040314316432373471_i128,(-87059258538035413556646804622260428398_i128),(-15038090084286291388409977389085576950_i128),66415290158492338073953387474844302924_i128,(-138556395223859227365860051021864140396_i128),88798156592263601581293218554076068252_i128];
_11 = (_12,);
_4 = RET;
_2 = (_6.0, _6.1);
_10 = (_3,);
_6.0 = core::ptr::addr_of!(_11.0);
_1 = -(-837708038_i32);
_8 = _6.1;
_2 = (_6.0, _6.1);
Goto(bb2)
}
bb15 = {
_20.fld5 = _1;
_24 = (_18.fld0.0,);
_10.0 = _25.0 << _15;
_20.fld0 = !_6.1;
_26 = _20.fld2 * _16;
_2 = _6;
_30.0 = 5_usize as u64;
_20.fld3 = 19_i8 ^ (-40_i8);
Call(_20.fld5 = core::intrinsics::bswap(_1), ReturnTo(bb6), UnwindUnreachable())
}
bb16 = {
_2.1 = _8;
_8 = _2.1 & _6.1;
_6.0 = _2.0;
_11.0 = _12 ^ _12;
_4 = RET;
_2.0 = core::ptr::addr_of!(_11.0);
_15 = 15090801137416992580_usize as i16;
_4 = RET;
_1 = (-1260277302_i32);
_12 = !_11.0;
_2.1 = !_6.1;
_16 = (-9223372036854775808_isize) | 9223372036854775807_isize;
RET = _4;
_3 = _10.0 | _10.0;
_20.fld3 = _10.0 as i8;
_20.fld5 = _1;
RET = _4;
Call(_20.fld4 = fn2(_9, _16, _9, _20.fld5), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_17 = _4;
_10.0 = _30.0 + _3;
match _1 {
0 => bb1,
340282366920938463463374607430507934154 => bb7,
_ => bb2
}
}
bb18 = {
_6.1 = _20.fld0;
_31 = core::ptr::addr_of!(_15);
_22 = Adt42::Variant2 { fld0: _36,fld1: _27,fld2: _5,fld3: _3,fld4: _9,fld5: 7_usize,fld6: (-75602598222358840_i64),fld7: 88275407715227069382830415087673525725_u128 };
_24.0 = _28 as i16;
_20.fld4 = core::ptr::addr_of_mut!(_20.fld3);
_24.0 = 253014387254878406544852276046421785422_u128 as i16;
place!(Field::<u64>(Variant(_22, 2), 3)) = 1_usize as u64;
_15 = -_29;
_14 = Adt41::Variant1 { fld0: _2.1,fld1: _17,fld2: (-6757406658222544707_i64),fld3: 14798908306485501813_usize,fld4: _2 };
_6.1 = Field::<(*const i16, bool)>(Variant(_14, 1), 4).1;
_23 = !_20.fld2;
place!(Field::<[u8; 7]>(Variant(_22, 2), 0)) = [173_u8,68_u8,53_u8,211_u8,105_u8,221_u8,204_u8];
_6.1 = _2.1;
_32 = [221_u8,229_u8,225_u8,197_u8,50_u8,81_u8,253_u8];
RET = _27;
place!(Field::<usize>(Variant(_22, 2), 5)) = 1695127967288852362_usize - 16373835587281735906_usize;
_39 = Field::<(*const i16, bool)>(Variant(_14, 1), 4).1 & _20.fld0;
_22 = Adt42::Variant2 { fld0: _32,fld1: RET,fld2: _5,fld3: _30.0,fld4: _9,fld5: 16542718161836025469_usize,fld6: (-3989394953491291183_i64),fld7: 261725593138828043582640516939758905818_u128 };
place!(Field::<(*const i16, bool)>(Variant(_14, 1), 4)).0 = _2.0;
place!(Field::<i64>(Variant(_14, 1), 2)) = 7203982894977616582_i64;
_37 = 3921889339_u32 as f64;
place!(Field::<i64>(Variant(_22, 2), 6)) = Field::<i64>(Variant(_14, 1), 2);
RET = Field::<char>(Variant(_14, 1), 1);
_12 = !_18.fld0.0;
_1 = _20.fld5 ^ _20.fld5;
_2.0 = _31;
Goto(bb9)
}
bb19 = {
_45.0 = core::ptr::addr_of_mut!(_20.fld3);
_40.0 = _29 - _11.0;
_43 = (_40.0,);
_49 = _20.fld5 as f64;
_11 = _40;
_10 = (Field::<u64>(Variant(_22, 2), 3),);
_6.1 = _11.0 == _11.0;
_21 = _10;
_2.0 = Field::<(*const i16, bool)>(Variant(_14, 1), 4).0;
_30 = (_10.0,);
_15 = _49 as i16;
_52 = (_30.0,);
place!(Field::<*const u16>(Variant(_22, 2), 2)) = _5;
Goto(bb20)
}
bb20 = {
Call(_53 = dump_var(1_usize, 17_usize, Move(_17), 24_usize, Move(_24), 13_usize, Move(_13), 38_usize, Move(_38)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_53 = dump_var(1_usize, 10_usize, Move(_10), 32_usize, Move(_32), 41_usize, Move(_41), 35_usize, Move(_35)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_53 = dump_var(1_usize, 27_usize, Move(_27), 52_usize, Move(_52), 39_usize, Move(_39), 28_usize, Move(_28)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_53 = dump_var(1_usize, 33_usize, Move(_33), 16_usize, Move(_16), 29_usize, Move(_29), 54_usize, _54), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: *mut u16,mut _2: isize,mut _3: *mut u16,mut _4: i32) -> *mut i8 {
mir! {
type RET = *mut i8;
let _5: (i16,);
let _6: Adt53;
let _7: char;
let _8: (u64,);
let _9: (u64,);
let _10: [u8; 7];
let _11: isize;
let _12: isize;
let _13: i16;
let _14: Adt53;
let _15: f64;
let _16: [i128; 6];
let _17: u128;
let _18: (u64,);
let _19: Adt38;
let _20: f32;
let _21: isize;
let _22: [u8; 7];
let _23: i16;
let _24: isize;
let _25: [i128; 6];
let _26: (*mut u16, *const u16);
let _27: (i16,);
let _28: (usize, i32, char, (*const i16, bool), i16);
let _29: Adt45;
let _30: u16;
let _31: u64;
let _32: Adt37;
let _33: (u64,);
let _34: bool;
let _35: f64;
let _36: isize;
let _37: (u64,);
let _38: Adt38;
let _39: u8;
let _40: f32;
let _41: ();
let _42: ();
{
_1 = _3;
_5 = ((-5649_i16),);
_6.fld0.0 = 7400598121194482624_i64 as i16;
_4 = 128256569_i32;
_7 = '\u{37de9}';
_2 = (-26_i8) as isize;
Call(_3 = fn3(_1, _2, _7, _6.fld0, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 9223372036854775807_isize;
_5 = (_6.fld0.0,);
_5.0 = _7 as i16;
_5 = (_6.fld0.0,);
_7 = '\u{9d768}';
_6 = Adt53 { fld0: _5 };
_3 = _1;
_5.0 = _6.fld0.0 >> _4;
_6 = Adt53 { fld0: _5 };
_7 = '\u{15a0c}';
_1 = _3;
match _2 {
0 => bb2,
1 => bb3,
2 => bb4,
9223372036854775807 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_7 = '\u{373a3}';
_6 = Adt53 { fld0: _5 };
Goto(bb7)
}
bb7 = {
_4 = 34009_u16 as i32;
_6.fld0.0 = _5.0 >> _5.0;
_6 = Adt53 { fld0: _5 };
_3 = _1;
_5 = (_6.fld0.0,);
_6.fld0.0 = _5.0 & _5.0;
_5.0 = _6.fld0.0 << _2;
_6.fld0.0 = -_5.0;
match _2 {
9223372036854775807 => bb9,
_ => bb8
}
}
bb8 = {
_7 = '\u{373a3}';
_6 = Adt53 { fld0: _5 };
Goto(bb7)
}
bb9 = {
_6.fld0 = (_5.0,);
_5.0 = !_6.fld0.0;
_3 = _1;
_5 = (_6.fld0.0,);
_1 = _3;
_2 = _4 as isize;
_6 = Adt53 { fld0: _5 };
Goto(bb10)
}
bb10 = {
_5 = _6.fld0;
_8 = (18308999168411105950_u64,);
_6.fld0.0 = 220_u8 as i16;
_6.fld0 = (_5.0,);
_5 = (_6.fld0.0,);
_5 = (_6.fld0.0,);
_8 = (17419228843302572008_u64,);
_11 = _2;
_1 = _3;
_9.0 = _8.0 / _8.0;
_9.0 = _2 as u64;
_6.fld0 = (_5.0,);
_8 = (_9.0,);
_11 = _9.0 as isize;
_10 = [6_u8,45_u8,250_u8,176_u8,17_u8,254_u8,27_u8];
Goto(bb11)
}
bb11 = {
_3 = _1;
_7 = '\u{5fc1d}';
_12 = _11 + _2;
_6 = Adt53 { fld0: _5 };
_8.0 = _9.0;
_6.fld0.0 = _9.0 as i16;
_14.fld0.0 = 215881653770184384149184739304813443682_u128 as i16;
_2 = _11 + _11;
_6.fld0.0 = _5.0;
Goto(bb12)
}
bb12 = {
_8.0 = 10097661100979209561_usize as u64;
_7 = '\u{45752}';
_8.0 = _9.0 & _9.0;
_5 = _14.fld0;
_15 = 9254813428511419305453516668963042268_i128 as f64;
_12 = _2;
Goto(bb13)
}
bb13 = {
_8 = (_9.0,);
_17 = 151346720504298698158777055281898680882_u128 * 130369385873955482540908072439639375323_u128;
_13 = _6.fld0.0 + _14.fld0.0;
_5 = (_13,);
_13 = _6.fld0.0;
_5 = (_6.fld0.0,);
_12 = _7 as isize;
_10 = [42_u8,97_u8,8_u8,10_u8,43_u8,113_u8,61_u8];
_16 = [(-77068171590915727988719326333082197923_i128),(-42080969867033689968717008976052056115_i128),(-78368376148737753725089357519940129484_i128),(-33351733648216246952993362733471902181_i128),(-131386858263605735054379420462577106973_i128),75914566967823076229826013693400785896_i128];
_2 = !_12;
_14.fld0.0 = _6.fld0.0;
_6 = _14;
_19.fld0.1 = core::ptr::addr_of!(_19.fld5);
_18.0 = !_8.0;
_12 = _2;
_14.fld0 = (_13,);
_13 = -_14.fld0.0;
_11 = !_12;
_19.fld7 = _3;
_17 = 264867790632565380556121757265289239481_u128;
_19.fld3.1 = !2_usize;
_14.fld0.0 = -_5.0;
_19.fld0.0 = _19.fld7;
Goto(bb14)
}
bb14 = {
_8 = (_18.0,);
_19.fld2 = core::ptr::addr_of!(_6.fld0.0);
_5 = _14.fld0;
_9 = (_18.0,);
_7 = '\u{10aae3}';
_7 = '\u{5e523}';
_22 = [26_u8,51_u8,210_u8,173_u8,196_u8,144_u8,187_u8];
_7 = '\u{1046ef}';
_13 = _14.fld0.0 | _6.fld0.0;
_18.0 = _8.0 + _8.0;
_19.fld6 = (-9202331928549421527_i64);
_19.fld4 = core::ptr::addr_of!(_20);
_23 = _13;
_19.fld3.1 = 7_usize * 16204573556219185410_usize;
_22 = [44_u8,121_u8,251_u8,110_u8,178_u8,173_u8,67_u8];
_15 = _17 as f64;
_5.0 = _4 as i16;
_19.fld3.1 = !4_usize;
Call(_9.0 = core::intrinsics::bswap(_18.0), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_14 = Adt53 { fld0: _6.fld0 };
_5.0 = -_13;
_19.fld1 = _19.fld3.1 | _19.fld3.1;
_19.fld4 = core::ptr::addr_of!(_20);
_21 = _15 as isize;
_20 = _13 as f32;
_6 = Adt53 { fld0: _14.fld0 };
_5.0 = _14.fld0.0;
_23 = 1132489454_u32 as i16;
_26.1 = core::ptr::addr_of!(_19.fld5);
Goto(bb16)
}
bb16 = {
_19.fld7 = _19.fld0.0;
match _19.fld6 {
0 => bb17,
1 => bb18,
340282366920938463454172275503218789929 => bb20,
_ => bb19
}
}
bb17 = {
_6.fld0 = (_5.0,);
_5.0 = !_6.fld0.0;
_3 = _1;
_5 = (_6.fld0.0,);
_1 = _3;
_2 = _4 as isize;
_6 = Adt53 { fld0: _5 };
Goto(bb10)
}
bb18 = {
Return()
}
bb19 = {
_8.0 = 10097661100979209561_usize as u64;
_7 = '\u{45752}';
_8.0 = _9.0 & _9.0;
_5 = _14.fld0;
_15 = 9254813428511419305453516668963042268_i128 as f64;
_12 = _2;
Goto(bb13)
}
bb20 = {
_26 = _19.fld0;
_28.2 = _7;
_22 = [137_u8,101_u8,106_u8,60_u8,185_u8,125_u8,12_u8];
_7 = _28.2;
_5.0 = !_23;
_28.3.1 = !true;
_24 = _11 >> _11;
_19.fld4 = core::ptr::addr_of!(_20);
_12 = _17 as isize;
_19.fld7 = _19.fld0.0;
match _19.fld6 {
0 => bb8,
1 => bb21,
2 => bb22,
3 => bb23,
340282366920938463454172275503218789929 => bb25,
_ => bb24
}
}
bb21 = {
_6.fld0 = (_5.0,);
_5.0 = !_6.fld0.0;
_3 = _1;
_5 = (_6.fld0.0,);
_1 = _3;
_2 = _4 as isize;
_6 = Adt53 { fld0: _5 };
Goto(bb10)
}
bb22 = {
Return()
}
bb23 = {
_6.fld0 = (_5.0,);
_5.0 = !_6.fld0.0;
_3 = _1;
_5 = (_6.fld0.0,);
_1 = _3;
_2 = _4 as isize;
_6 = Adt53 { fld0: _5 };
Goto(bb10)
}
bb24 = {
Return()
}
bb25 = {
_25 = [(-111110227505466313978231241587853195623_i128),(-124889191047384056843929811185517861041_i128),117032176038158964120025676815607992453_i128,74022652066486968191281842581363797165_i128,(-120466468086913453943564364445366507071_i128),114920803901104510268876075157187135228_i128];
_18.0 = !_9.0;
_27 = (_14.fld0.0,);
_24 = _11 >> _18.0;
_18 = _8;
_28.4 = _23;
_8.0 = 238_u8 as u64;
_19.fld3.1 = !_19.fld1;
_8 = (_9.0,);
_7 = _28.2;
_16 = _25;
_14.fld0.0 = _13;
_26 = _19.fld0;
_14.fld0 = _27;
_19.fld7 = core::ptr::addr_of_mut!(_19.fld5);
_19.fld6 = 699102165046938578_i64;
_19.fld6 = (-565069936063360762_i64) - (-7543158539166498887_i64);
_17 = (-156660859313162732911798125564399864544_i128) as u128;
_23 = _24 as i16;
_11 = _21;
_1 = core::ptr::addr_of_mut!(_19.fld5);
_19.fld0.0 = core::ptr::addr_of_mut!((*_1));
_19.fld3.1 = _19.fld1;
_13 = _27.0;
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb26)
}
bb26 = {
_28.1 = _4;
_16 = _25;
_19.fld7 = _3;
_28.2 = _7;
_19.fld1 = !_19.fld3.1;
_11 = _7 as isize;
_14.fld0.0 = _23 + _27.0;
_32.fld0 = !_28.3.1;
_32.fld2 = -_24;
_35 = _15 + _15;
_19.fld0 = _26;
_28.4 = _14.fld0.0 | _27.0;
Goto(bb27)
}
bb27 = {
_10 = _22;
_32.fld4 = core::ptr::addr_of_mut!(_32.fld3);
_13 = _27.0;
_20 = 96656810982594006020565060554516757862_i128 as f32;
_32.fld6 = core::ptr::addr_of_mut!(_19.fld7);
_9.0 = _8.0;
_31 = !_8.0;
_11 = -_32.fld2;
_24 = -_12;
_38.fld0 = _26;
Goto(bb28)
}
bb28 = {
_37.0 = !_9.0;
_19.fld0 = _26;
_19.fld0.1 = core::ptr::addr_of!(_30);
_35 = -_15;
_18 = _8;
_19.fld3.0 = core::ptr::addr_of_mut!(_32.fld3);
_38.fld1 = _19.fld3.1 - _19.fld3.1;
_4 = _28.1;
RET = core::ptr::addr_of_mut!(_32.fld3);
Goto(bb29)
}
bb29 = {
Call(_41 = dump_var(2_usize, 7_usize, Move(_7), 12_usize, Move(_12), 4_usize, Move(_4), 10_usize, Move(_10)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_41 = dump_var(2_usize, 27_usize, Move(_27), 17_usize, Move(_17), 23_usize, Move(_23), 9_usize, Move(_9)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_41 = dump_var(2_usize, 8_usize, Move(_8), 37_usize, Move(_37), 42_usize, _42, 42_usize, _42), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: *mut u16,mut _2: isize,mut _3: char,mut _4: (i16,),mut _5: isize) -> *mut u16 {
mir! {
type RET = *mut u16;
let _6: u16;
let _7: i64;
let _8: (i16,);
let _9: (i16,);
let _10: Adt39;
let _11: f32;
let _12: char;
let _13: f64;
let _14: Adt52;
let _15: f32;
let _16: [i128; 6];
let _17: i64;
let _18: (i16,);
let _19: Adt37;
let _20: u64;
let _21: [u8; 7];
let _22: i16;
let _23: i32;
let _24: i16;
let _25: isize;
let _26: [u8; 7];
let _27: isize;
let _28: u8;
let _29: bool;
let _30: u8;
let _31: isize;
let _32: ();
let _33: ();
{
RET = _1;
_4 = ((-2178_i16),);
_5 = _2;
_2 = 5_usize as isize;
_4 = ((-10551_i16),);
_5 = 318690098_i32 as isize;
_3 = '\u{573fa}';
_2 = -_5;
_3 = '\u{93ce2}';
RET = core::ptr::addr_of_mut!(_6);
_2 = !_5;
_8.0 = -_4.0;
_10.fld0.1 = 1445824064986379972_usize;
_9 = (_8.0,);
_9.0 = !_4.0;
_1 = core::ptr::addr_of_mut!(_6);
Goto(bb1)
}
bb1 = {
_4.0 = -_8.0;
_2 = _5;
_1 = core::ptr::addr_of_mut!((*RET));
_7 = (-219884783479995757_i64) & (-1240563903615257082_i64);
_9 = _4;
RET = core::ptr::addr_of_mut!((*RET));
_6 = 201_u8 as u16;
_1 = core::ptr::addr_of_mut!((*RET));
RET = _1;
_6 = 2411_u16;
_9.0 = _4.0 ^ _4.0;
_8.0 = true as i16;
RET = _1;
_7 = 1238594825880355611_u64 as i64;
_9 = _4;
_12 = _3;
_8.0 = _10.fld0.1 as i16;
_3 = _12;
_13 = _9.0 as f64;
match _10.fld0.1 {
1445824064986379972 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_7 = -(-5958184106795561375_i64);
_4 = (_9.0,);
_10.fld0.1 = 1024420681_i32 as usize;
_9.0 = _8.0 + _4.0;
_12 = _3;
Goto(bb4)
}
bb4 = {
_9 = (_8.0,);
_9 = (_8.0,);
_8.0 = _4.0 * _4.0;
_2 = -_5;
_11 = 16516062216005836400_u64 as f32;
_14 = Adt52::Variant3 { fld0: _7,fld1: _12 };
_4 = (_8.0,);
_15 = _11 + _11;
_8 = _9;
_5 = _2 ^ _2;
_3 = _12;
_1 = core::ptr::addr_of_mut!((*_1));
_4 = (_9.0,);
_18.0 = _8.0 >> (*_1);
_16 = [50855752771207479242685743266577757635_i128,132688991288494192906602110565504737518_i128,(-13234519364102111170870840144233929602_i128),(-134296964449021962712617117388376042181_i128),(-119832169700603299877483078116496700017_i128),122813187592166959401986278480789714582_i128];
_11 = _15;
_4.0 = _18.0;
_18 = _9;
_17 = -_7;
_3 = Field::<char>(Variant(_14, 3), 1);
_9 = (_8.0,);
_19.fld5 = 589145098_i32;
place!(Field::<char>(Variant(_14, 3), 1)) = _3;
_19.fld2 = !_5;
_9.0 = _18.0 ^ _18.0;
Call(_19.fld3 = fn4(_15, _4.0, (*_1), _5, Move(_14), _19.fld2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_19.fld6 = core::ptr::addr_of_mut!(_1);
_8.0 = _4.0 << _19.fld3;
_2 = _5 * _19.fld2;
_2 = !_19.fld2;
_10.fld0.1 = 4_usize;
_6 = 44709_u16;
RET = _1;
_19.fld2 = _10.fld0.1 as isize;
RET = core::ptr::addr_of_mut!((*_1));
_10.fld0.1 = 9435291751847535692_usize;
_19.fld2 = _2;
_11 = _15;
_15 = _11;
_19.fld2 = _5;
_10.fld0.1 = 247208472_u32 as usize;
_21 = [186_u8,128_u8,206_u8,95_u8,21_u8,7_u8,148_u8];
RET = _1;
_18 = _8;
_19.fld0 = _3 < _12;
_24 = _19.fld2 as i16;
_13 = _10.fld0.1 as f64;
_8 = _18;
_16 = [(-167306135226723332866796288576181088476_i128),51036914209156469068345523385641394005_i128,(-23649522959758341635095491939179012100_i128),(-120071282238227885017175310541003613329_i128),139645969762229288406607504345283744779_i128,(-59500670824826473707941489670084425877_i128)];
_14 = Adt52::Variant2 { fld0: 306186517490137657599019473592728818362_u128 };
Goto(bb6)
}
bb6 = {
_8.0 = -_18.0;
_10.fld0.0 = core::ptr::addr_of_mut!(_19.fld3);
_2 = _5 ^ _19.fld2;
_13 = _18.0 as f64;
_4 = (_18.0,);
_24 = _18.0;
RET = _1;
_19.fld5 = (-648753635_i32) + (-620053300_i32);
_10.fld0.1 = 4_usize;
_17 = _7;
_23 = !_19.fld5;
_23 = _19.fld5 ^ _19.fld5;
_14 = Adt52::Variant3 { fld0: _7,fld1: _3 };
_20 = 3940587803988575125_u64;
_2 = _23 as isize;
_24 = _18.0;
_5 = _19.fld2 + _19.fld2;
_14 = Adt52::Variant0 { fld0: _19.fld5,fld1: _19.fld6,fld2: _10.fld0 };
_19.fld4 = core::ptr::addr_of_mut!(_19.fld3);
_5 = _19.fld2;
_21 = [180_u8,49_u8,74_u8,44_u8,75_u8,159_u8,132_u8];
match _10.fld0.1 {
0 => bb1,
1 => bb5,
2 => bb7,
3 => bb8,
5 => bb10,
4 => bb12,
_ => bb11
}
}
bb7 = {
_19.fld6 = core::ptr::addr_of_mut!(_1);
_8.0 = _4.0 << _19.fld3;
_2 = _5 * _19.fld2;
_2 = !_19.fld2;
_10.fld0.1 = 4_usize;
_6 = 44709_u16;
RET = _1;
_19.fld2 = _10.fld0.1 as isize;
RET = core::ptr::addr_of_mut!((*_1));
_10.fld0.1 = 9435291751847535692_usize;
_19.fld2 = _2;
_11 = _15;
_15 = _11;
_19.fld2 = _5;
_10.fld0.1 = 247208472_u32 as usize;
_21 = [186_u8,128_u8,206_u8,95_u8,21_u8,7_u8,148_u8];
RET = _1;
_18 = _8;
_19.fld0 = _3 < _12;
_24 = _19.fld2 as i16;
_13 = _10.fld0.1 as f64;
_8 = _18;
_16 = [(-167306135226723332866796288576181088476_i128),51036914209156469068345523385641394005_i128,(-23649522959758341635095491939179012100_i128),(-120071282238227885017175310541003613329_i128),139645969762229288406607504345283744779_i128,(-59500670824826473707941489670084425877_i128)];
_14 = Adt52::Variant2 { fld0: 306186517490137657599019473592728818362_u128 };
Goto(bb6)
}
bb8 = {
_9 = (_8.0,);
_9 = (_8.0,);
_8.0 = _4.0 * _4.0;
_2 = -_5;
_11 = 16516062216005836400_u64 as f32;
_14 = Adt52::Variant3 { fld0: _7,fld1: _12 };
_4 = (_8.0,);
_15 = _11 + _11;
_8 = _9;
_5 = _2 ^ _2;
_3 = _12;
_1 = core::ptr::addr_of_mut!((*_1));
_4 = (_9.0,);
_18.0 = _8.0 >> (*_1);
_16 = [50855752771207479242685743266577757635_i128,132688991288494192906602110565504737518_i128,(-13234519364102111170870840144233929602_i128),(-134296964449021962712617117388376042181_i128),(-119832169700603299877483078116496700017_i128),122813187592166959401986278480789714582_i128];
_11 = _15;
_4.0 = _18.0;
_18 = _9;
_17 = -_7;
_3 = Field::<char>(Variant(_14, 3), 1);
_9 = (_8.0,);
_19.fld5 = 589145098_i32;
place!(Field::<char>(Variant(_14, 3), 1)) = _3;
_19.fld2 = !_5;
_9.0 = _18.0 ^ _18.0;
Call(_19.fld3 = fn4(_15, _4.0, (*_1), _5, Move(_14), _19.fld2), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_7 = -(-5958184106795561375_i64);
_4 = (_9.0,);
_10.fld0.1 = 1024420681_i32 as usize;
_9.0 = _8.0 + _4.0;
_12 = _3;
Goto(bb4)
}
bb10 = {
Return()
}
bb11 = {
_4.0 = -_8.0;
_2 = _5;
_1 = core::ptr::addr_of_mut!((*RET));
_7 = (-219884783479995757_i64) & (-1240563903615257082_i64);
_9 = _4;
RET = core::ptr::addr_of_mut!((*RET));
_6 = 201_u8 as u16;
_1 = core::ptr::addr_of_mut!((*RET));
RET = _1;
_6 = 2411_u16;
_9.0 = _4.0 ^ _4.0;
_8.0 = true as i16;
RET = _1;
_7 = 1238594825880355611_u64 as i64;
_9 = _4;
_12 = _3;
_8.0 = _10.fld0.1 as i16;
_3 = _12;
_13 = _9.0 as f64;
match _10.fld0.1 {
1445824064986379972 => bb3,
_ => bb2
}
}
bb12 = {
_12 = _3;
place!(Field::<(*mut i8, usize)>(Variant(_14, 0), 2)).1 = _3 as usize;
_18.0 = -_4.0;
RET = _1;
_3 = _12;
_12 = _3;
_10.fld0.0 = core::ptr::addr_of_mut!(_19.fld3);
_18.0 = _8.0 - _4.0;
_10.fld0.1 = _13 as usize;
place!(Field::<*mut *mut u16>(Variant(_14, 0), 1)) = core::ptr::addr_of_mut!(RET);
_6 = !55339_u16;
_14 = Adt52::Variant3 { fld0: _7,fld1: _12 };
_6 = 40990_u16 & 3014_u16;
_19.fld2 = _5;
_19.fld2 = _2 >> _8.0;
_19.fld0 = true;
_11 = -_15;
_8.0 = _4.0 * _18.0;
match _20 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
3940587803988575125 => bb21,
_ => bb20
}
}
bb13 = {
_4.0 = -_8.0;
_2 = _5;
_1 = core::ptr::addr_of_mut!((*RET));
_7 = (-219884783479995757_i64) & (-1240563903615257082_i64);
_9 = _4;
RET = core::ptr::addr_of_mut!((*RET));
_6 = 201_u8 as u16;
_1 = core::ptr::addr_of_mut!((*RET));
RET = _1;
_6 = 2411_u16;
_9.0 = _4.0 ^ _4.0;
_8.0 = true as i16;
RET = _1;
_7 = 1238594825880355611_u64 as i64;
_9 = _4;
_12 = _3;
_8.0 = _10.fld0.1 as i16;
_3 = _12;
_13 = _9.0 as f64;
match _10.fld0.1 {
1445824064986379972 => bb3,
_ => bb2
}
}
bb14 = {
Return()
}
bb15 = {
_7 = -(-5958184106795561375_i64);
_4 = (_9.0,);
_10.fld0.1 = 1024420681_i32 as usize;
_9.0 = _8.0 + _4.0;
_12 = _3;
Goto(bb4)
}
bb16 = {
_9 = (_8.0,);
_9 = (_8.0,);
_8.0 = _4.0 * _4.0;
_2 = -_5;
_11 = 16516062216005836400_u64 as f32;
_14 = Adt52::Variant3 { fld0: _7,fld1: _12 };
_4 = (_8.0,);
_15 = _11 + _11;
_8 = _9;
_5 = _2 ^ _2;
_3 = _12;
_1 = core::ptr::addr_of_mut!((*_1));
_4 = (_9.0,);
_18.0 = _8.0 >> (*_1);
_16 = [50855752771207479242685743266577757635_i128,132688991288494192906602110565504737518_i128,(-13234519364102111170870840144233929602_i128),(-134296964449021962712617117388376042181_i128),(-119832169700603299877483078116496700017_i128),122813187592166959401986278480789714582_i128];
_11 = _15;
_4.0 = _18.0;
_18 = _9;
_17 = -_7;
_3 = Field::<char>(Variant(_14, 3), 1);
_9 = (_8.0,);
_19.fld5 = 589145098_i32;
place!(Field::<char>(Variant(_14, 3), 1)) = _3;
_19.fld2 = !_5;
_9.0 = _18.0 ^ _18.0;
Call(_19.fld3 = fn4(_15, _4.0, (*_1), _5, Move(_14), _19.fld2), ReturnTo(bb5), UnwindUnreachable())
}
bb17 = {
_19.fld6 = core::ptr::addr_of_mut!(_1);
_8.0 = _4.0 << _19.fld3;
_2 = _5 * _19.fld2;
_2 = !_19.fld2;
_10.fld0.1 = 4_usize;
_6 = 44709_u16;
RET = _1;
_19.fld2 = _10.fld0.1 as isize;
RET = core::ptr::addr_of_mut!((*_1));
_10.fld0.1 = 9435291751847535692_usize;
_19.fld2 = _2;
_11 = _15;
_15 = _11;
_19.fld2 = _5;
_10.fld0.1 = 247208472_u32 as usize;
_21 = [186_u8,128_u8,206_u8,95_u8,21_u8,7_u8,148_u8];
RET = _1;
_18 = _8;
_19.fld0 = _3 < _12;
_24 = _19.fld2 as i16;
_13 = _10.fld0.1 as f64;
_8 = _18;
_16 = [(-167306135226723332866796288576181088476_i128),51036914209156469068345523385641394005_i128,(-23649522959758341635095491939179012100_i128),(-120071282238227885017175310541003613329_i128),139645969762229288406607504345283744779_i128,(-59500670824826473707941489670084425877_i128)];
_14 = Adt52::Variant2 { fld0: 306186517490137657599019473592728818362_u128 };
Goto(bb6)
}
bb18 = {
_7 = -(-5958184106795561375_i64);
_4 = (_9.0,);
_10.fld0.1 = 1024420681_i32 as usize;
_9.0 = _8.0 + _4.0;
_12 = _3;
Goto(bb4)
}
bb19 = {
_19.fld6 = core::ptr::addr_of_mut!(_1);
_8.0 = _4.0 << _19.fld3;
_2 = _5 * _19.fld2;
_2 = !_19.fld2;
_10.fld0.1 = 4_usize;
_6 = 44709_u16;
RET = _1;
_19.fld2 = _10.fld0.1 as isize;
RET = core::ptr::addr_of_mut!((*_1));
_10.fld0.1 = 9435291751847535692_usize;
_19.fld2 = _2;
_11 = _15;
_15 = _11;
_19.fld2 = _5;
_10.fld0.1 = 247208472_u32 as usize;
_21 = [186_u8,128_u8,206_u8,95_u8,21_u8,7_u8,148_u8];
RET = _1;
_18 = _8;
_19.fld0 = _3 < _12;
_24 = _19.fld2 as i16;
_13 = _10.fld0.1 as f64;
_8 = _18;
_16 = [(-167306135226723332866796288576181088476_i128),51036914209156469068345523385641394005_i128,(-23649522959758341635095491939179012100_i128),(-120071282238227885017175310541003613329_i128),139645969762229288406607504345283744779_i128,(-59500670824826473707941489670084425877_i128)];
_14 = Adt52::Variant2 { fld0: 306186517490137657599019473592728818362_u128 };
Goto(bb6)
}
bb20 = {
_9 = (_8.0,);
_9 = (_8.0,);
_8.0 = _4.0 * _4.0;
_2 = -_5;
_11 = 16516062216005836400_u64 as f32;
_14 = Adt52::Variant3 { fld0: _7,fld1: _12 };
_4 = (_8.0,);
_15 = _11 + _11;
_8 = _9;
_5 = _2 ^ _2;
_3 = _12;
_1 = core::ptr::addr_of_mut!((*_1));
_4 = (_9.0,);
_18.0 = _8.0 >> (*_1);
_16 = [50855752771207479242685743266577757635_i128,132688991288494192906602110565504737518_i128,(-13234519364102111170870840144233929602_i128),(-134296964449021962712617117388376042181_i128),(-119832169700603299877483078116496700017_i128),122813187592166959401986278480789714582_i128];
_11 = _15;
_4.0 = _18.0;
_18 = _9;
_17 = -_7;
_3 = Field::<char>(Variant(_14, 3), 1);
_9 = (_8.0,);
_19.fld5 = 589145098_i32;
place!(Field::<char>(Variant(_14, 3), 1)) = _3;
_19.fld2 = !_5;
_9.0 = _18.0 ^ _18.0;
Call(_19.fld3 = fn4(_15, _4.0, (*_1), _5, Move(_14), _19.fld2), ReturnTo(bb5), UnwindUnreachable())
}
bb21 = {
_8.0 = -_4.0;
_8 = (_18.0,);
RET = core::ptr::addr_of_mut!((*_1));
_9.0 = !_18.0;
_22 = _24;
_10.fld0 = (_19.fld4, 1_usize);
_17 = 219862697013821821581377501573905680069_u128 as i64;
_18.0 = _8.0;
_9 = (_8.0,);
_22 = _9.0 & _9.0;
_28 = 235_u8;
place!(Field::<i64>(Variant(_14, 3), 0)) = _7;
_19.fld6 = core::ptr::addr_of_mut!(RET);
_10.fld0.1 = 5311405329743790288_usize;
_10.fld0.1 = 1748758915085004540_usize;
_18 = (_4.0,);
_15 = _11 * _11;
_19.fld5 = -_23;
Goto(bb22)
}
bb22 = {
Call(_32 = dump_var(3_usize, 8_usize, Move(_8), 24_usize, Move(_24), 12_usize, Move(_12), 4_usize, Move(_4)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_32 = dump_var(3_usize, 7_usize, Move(_7), 17_usize, Move(_17), 2_usize, Move(_2), 3_usize, Move(_3)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_32 = dump_var(3_usize, 22_usize, Move(_22), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: f32,mut _2: i16,mut _3: u16,mut _4: isize,mut _5: Adt52,mut _6: isize) -> i8 {
mir! {
type RET = i8;
let _7: isize;
let _8: i64;
let _9: i32;
let _10: f64;
let _11: u32;
let _12: isize;
let _13: *const u64;
let _14: [u8; 7];
let _15: Adt45;
let _16: [i128; 6];
let _17: isize;
let _18: *mut *mut u16;
let _19: f64;
let _20: f32;
let _21: u128;
let _22: Adt50;
let _23: i8;
let _24: bool;
let _25: *const [i128; 6];
let _26: Adt38;
let _27: Adt53;
let _28: [u8; 7];
let _29: [u8; 7];
let _30: &'static (i16,);
let _31: u16;
let _32: [u8; 7];
let _33: isize;
let _34: f32;
let _35: isize;
let _36: usize;
let _37: (i16,);
let _38: u32;
let _39: isize;
let _40: (u64,);
let _41: Adt38;
let _42: Adt53;
let _43: (i16,);
let _44: [i128; 6];
let _45: char;
let _46: u8;
let _47: f32;
let _48: isize;
let _49: char;
let _50: Adt40;
let _51: [i128; 6];
let _52: usize;
let _53: [i128; 6];
let _54: Adt46;
let _55: (i16,);
let _56: bool;
let _57: usize;
let _58: i32;
let _59: f64;
let _60: u64;
let _61: *mut i8;
let _62: f64;
let _63: usize;
let _64: i32;
let _65: (i16,);
let _66: Adt52;
let _67: isize;
let _68: f64;
let _69: ();
let _70: ();
{
_6 = _4 << _4;
place!(Field::<char>(Variant(_5, 3), 1)) = '\u{a4877}';
_3 = !42121_u16;
place!(Field::<i64>(Variant(_5, 3), 0)) = -(-4424608105164571539_i64);
RET = 0_usize as i8;
_4 = -_6;
_1 = 152845919685247054726331094068826356668_u128 as f32;
_3 = (-1968076080_i32) as u16;
RET = Field::<i64>(Variant(_5, 3), 0) as i8;
RET = (-55_i8) - (-90_i8);
_1 = 1829236701_i32 as f32;
place!(Field::<char>(Variant(_5, 3), 1)) = '\u{43c16}';
RET = 13869110365016045692_u64 as i8;
_1 = _2 as f32;
_3 = Field::<i64>(Variant(_5, 3), 0) as u16;
_1 = 183565534041340150929042215644087283409_u128 as f32;
_7 = _2 as isize;
Call(_3 = fn5(_4, _2, Move(_5), _1, _4, RET, _4, _4, _1, _4, _2, _2, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = 4053908577_u32 as f32;
_5 = Adt52::Variant3 { fld0: (-4041960617221057064_i64),fld1: '\u{6e482}' };
RET = (-5598888714895928027_i64) as i8;
_4 = _6;
_11 = 2622112152_u32;
_11 = (-560110838196335226_i64) as u32;
place!(Field::<char>(Variant(_5, 3), 1)) = '\u{1b4cb}';
RET = 127902121605084372516919869143032361124_u128 as i8;
_3 = 55333_u16;
_6 = _1 as isize;
_7 = true as isize;
_12 = _4 & _6;
place!(Field::<i64>(Variant(_5, 3), 0)) = 324140794516061652126640853294051778095_u128 as i64;
RET = _11 as i8;
_10 = (-89217582693942276921897682381368472210_i128) as f64;
Goto(bb2)
}
bb2 = {
_14 = [226_u8,142_u8,179_u8,226_u8,201_u8,255_u8,255_u8];
SetDiscriminant(_5, 3);
_6 = _3 as isize;
_9 = -134436747_i32;
_9 = (-22890212_i32) >> _4;
_14 = [229_u8,10_u8,249_u8,121_u8,85_u8,79_u8,214_u8];
_9 = (-665840493_i32) * 772695602_i32;
RET = (-128_i8) ^ (-49_i8);
_5 = Adt52::Variant2 { fld0: 13370877773429380079138152474978190718_u128 };
_1 = 35_u8 as f32;
_5 = Adt52::Variant3 { fld0: 1068202220420794120_i64,fld1: '\u{102b68}' };
_2 = (-550476985854205929_i64) as i16;
_6 = true as isize;
_7 = _12;
_16 = [46905732752524551577125382764641172742_i128,56130594771611070294468716081695183424_i128,86479826843629422346007843729249762005_i128,163922046998402802118805973106598779157_i128,3230361898013430143695134275119008188_i128,(-102445942991438158979691068821727669908_i128)];
place!(Field::<char>(Variant(_5, 3), 1)) = '\u{e6f3}';
_1 = 0_usize as f32;
_8 = 4002101179729373920_i64 * (-3669807731614095679_i64);
_7 = _4 | _6;
match _3 {
55333 => bb4,
_ => bb3
}
}
bb3 = {
_1 = 4053908577_u32 as f32;
_5 = Adt52::Variant3 { fld0: (-4041960617221057064_i64),fld1: '\u{6e482}' };
RET = (-5598888714895928027_i64) as i8;
_4 = _6;
_11 = 2622112152_u32;
_11 = (-560110838196335226_i64) as u32;
place!(Field::<char>(Variant(_5, 3), 1)) = '\u{1b4cb}';
RET = 127902121605084372516919869143032361124_u128 as i8;
_3 = 55333_u16;
_6 = _1 as isize;
_7 = true as isize;
_12 = _4 & _6;
place!(Field::<i64>(Variant(_5, 3), 0)) = 324140794516061652126640853294051778095_u128 as i64;
RET = _11 as i8;
_10 = (-89217582693942276921897682381368472210_i128) as f64;
Goto(bb2)
}
bb4 = {
_11 = 1029307995_u32 >> _6;
_1 = 17031918927231235133_usize as f32;
_11 = _4 as u32;
_8 = !4629937313004727538_i64;
_2 = -(-17006_i16);
_10 = _2 as f64;
_16 = [114600643058332028503411636288454358582_i128,59997209551976532980463549277841888119_i128,64350256326028532752514511782067369047_i128,(-89361705889196794571758856949607092492_i128),(-112894226255066706314000754004822582132_i128),168015874408871044583517747560424089427_i128];
_20 = _1 * _1;
_17 = _12;
_1 = _20 + _20;
_23 = RET;
_24 = false;
_3 = 20092_u16 << _11;
_20 = _11 as f32;
_17 = _4 * _7;
_26.fld7 = core::ptr::addr_of_mut!(_3);
_26.fld7 = core::ptr::addr_of_mut!(_3);
_2 = (-6435_i16) * (-16041_i16);
_19 = _10 - _10;
_24 = false;
Call(place!(Field::<i64>(Variant(_5, 3), 0)) = core::intrinsics::transmute(_17), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_4 = 8010861821097717974_u64 as isize;
_26.fld2 = core::ptr::addr_of!(_2);
_26.fld2 = core::ptr::addr_of!(_2);
_3 = Field::<char>(Variant(_5, 3), 1) as u16;
_26.fld5 = _3 + _3;
place!(Field::<i64>(Variant(_5, 3), 0)) = -_8;
_17 = 6_usize as isize;
place!(Field::<char>(Variant(_5, 3), 1)) = '\u{e5d3a}';
_18 = core::ptr::addr_of_mut!(_26.fld7);
_26.fld5 = !_3;
Goto(bb6)
}
bb6 = {
_23 = !RET;
_3 = _26.fld5 * _26.fld5;
_26.fld0.0 = _26.fld7;
_26.fld4 = core::ptr::addr_of!(_1);
_1 = _20 * _20;
_27.fld0 = (_2,);
_29 = [212_u8,150_u8,173_u8,137_u8,198_u8,169_u8,72_u8];
_31 = !_3;
_16 = [(-146152301367794513496658993861918378294_i128),34902679703535911103700861810738554103_i128,(-143059393136411678171487080500495133481_i128),(-5639137400218459342615868725119850321_i128),10402038467309577919818406612177584933_i128,(-137891587150429282535347885577334613373_i128)];
_32 = _29;
_26.fld3.1 = 12242623083197071949_usize >> _2;
_35 = Field::<char>(Variant(_5, 3), 1) as isize;
_34 = -_20;
RET = _23;
_34 = _23 as f32;
_21 = 154709452882441487883009788065988271528_u128 + 90793927812739102844305671508598463448_u128;
_28 = [240_u8,36_u8,99_u8,59_u8,86_u8,215_u8,70_u8];
_34 = _1;
_2 = _3 as i16;
_28 = [224_u8,13_u8,45_u8,142_u8,144_u8,153_u8,193_u8];
Goto(bb7)
}
bb7 = {
_30 = &_37;
_1 = _34;
SetDiscriminant(_5, 0);
_17 = _12;
RET = _23;
_33 = _7;
_39 = _26.fld3.1 as isize;
_6 = _1 as isize;
_1 = _20 * _34;
_36 = _26.fld3.1;
_29 = _32;
_39 = _9 as isize;
_26.fld1 = _36 << _12;
_27.fld0 = (_2,);
_39 = '\u{8039f}' as isize;
_16 = [167446752153451253781335359259362504535_i128,(-60806869379017570398381631495511864295_i128),(-79888172663651890522922412499378572579_i128),(-58237918782907314118545201150386612257_i128),28990571259184432312061379924358229265_i128,73784123535697743372673480973456925593_i128];
_6 = -_7;
_25 = core::ptr::addr_of!(_16);
_13 = core::ptr::addr_of!(_40.0);
Goto(bb8)
}
bb8 = {
_26.fld3.0 = core::ptr::addr_of_mut!(RET);
_34 = 13769654641122881287_u64 as f32;
_19 = _10;
RET = _23 | _23;
_19 = -_10;
_41.fld7 = (*_18);
_8 = _10 as i64;
_26.fld0.1 = core::ptr::addr_of!(_31);
_31 = _3;
place!(Field::<(*mut i8, usize)>(Variant(_5, 0), 2)).1 = (-124046247575728170168574026648548658963_i128) as usize;
_41.fld0.1 = _26.fld0.1;
_39 = _12 + _17;
Goto(bb9)
}
bb9 = {
_41 = Adt38 { fld0: _26.fld0,fld1: _26.fld1,fld2: _26.fld2,fld3: _26.fld3,fld4: _26.fld4,fld5: _3,fld6: _8,fld7: (*_18) };
_5 = Adt52::Variant2 { fld0: _21 };
_35 = _7 + _33;
_27.fld0 = (_2,);
_27.fld0 = (_2,);
RET = _23 + _23;
_41.fld7 = core::ptr::addr_of_mut!(_31);
_41.fld2 = _26.fld2;
_41.fld3.0 = _26.fld3.0;
_43 = _27.fld0;
_26.fld0.1 = core::ptr::addr_of!(_41.fld5);
_42.fld0.0 = _2 & _43.0;
_41.fld6 = RET as i64;
_30 = &_42.fld0;
_14 = [253_u8,114_u8,100_u8,50_u8,174_u8,159_u8,110_u8];
_29 = [2_u8,171_u8,251_u8,77_u8,237_u8,95_u8,82_u8];
RET = -_23;
_47 = -_1;
SetDiscriminant(_5, 3);
_26.fld3.0 = _41.fld3.0;
_45 = '\u{c636e}';
Goto(bb10)
}
bb10 = {
_17 = _39;
place!(Field::<char>(Variant(_5, 3), 1)) = _45;
_35 = !_12;
_19 = -_10;
_25 = core::ptr::addr_of!((*_25));
_36 = (-45407505637730354877589036620178418333_i128) as usize;
_26.fld0.0 = _26.fld7;
_37 = (*_30);
place!(Field::<char>(Variant(_5, 3), 1)) = _45;
_21 = 83087305481201752272701316216520823090_i128 as u128;
_47 = _1 + _1;
place!(Field::<i64>(Variant(_5, 3), 0)) = _41.fld6 >> _26.fld1;
_1 = _47;
SetDiscriminant(_5, 3);
_40.0 = _39 as u64;
_26 = Adt38 { fld0: _41.fld0,fld1: _41.fld3.1,fld2: _41.fld2,fld3: _41.fld3,fld4: _41.fld4,fld5: _41.fld5,fld6: _8,fld7: _41.fld7 };
_26.fld1 = _41.fld1;
_42.fld0.0 = _37.0 * _27.fld0.0;
_40.0 = _41.fld6 as u64;
_41.fld2 = _26.fld2;
Goto(bb11)
}
bb11 = {
_19 = _40.0 as f64;
_48 = -_35;
place!(Field::<i64>(Variant(_5, 3), 0)) = _41.fld6 & _41.fld6;
_31 = _3;
_1 = _47;
_23 = 71047576327548716498781812789368042881_i128 as i8;
_42.fld0.0 = (-130696241939432251018367099888235665414_i128) as i16;
_26.fld2 = _41.fld2;
_18 = core::ptr::addr_of_mut!(_41.fld7);
_29 = _14;
_26.fld3 = _41.fld3;
_4 = !_39;
_1 = _20;
_26.fld0.1 = core::ptr::addr_of!(_26.fld5);
_37 = (_43.0,);
_3 = _41.fld5;
_6 = _33;
_19 = _10 + _10;
_26.fld5 = 58_u8 as u16;
_27.fld0.0 = -_2;
place!(Field::<i64>(Variant(_5, 3), 0)) = _41.fld6;
_47 = _1;
_5 = Adt52::Variant2 { fld0: _21 };
SetDiscriminant(_5, 3);
_5 = Adt52::Variant2 { fld0: _21 };
_19 = _20 as f64;
_49 = _45;
_44 = _16;
_16 = [146497981376875815096508994975112741111_i128,59804157312537127196087407598159697264_i128,(-64817844977642274465100102080123672482_i128),9319119214399607296654021074063581058_i128,(-34467746302938329341459327126709743397_i128),61219783952771523995932909089429076615_i128];
RET = _39 as i8;
Call(_33 = core::intrinsics::transmute(_4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_24 = false;
_26.fld1 = !_26.fld3.1;
_32 = [18_u8,139_u8,182_u8,29_u8,27_u8,17_u8,11_u8];
_20 = -_1;
_26 = Adt38 { fld0: _41.fld0,fld1: _41.fld3.1,fld2: _41.fld2,fld3: _41.fld3,fld4: _41.fld4,fld5: _31,fld6: _41.fld6,fld7: _41.fld7 };
_4 = _33;
_41 = Adt38 { fld0: _26.fld0,fld1: _26.fld1,fld2: _26.fld2,fld3: _26.fld3,fld4: _26.fld4,fld5: _31,fld6: _26.fld6,fld7: _26.fld7 };
_54.fld4.fld4 = _41.fld3.0;
SetDiscriminant(_5, 1);
_54.fld7 = !_11;
Goto(bb13)
}
bb13 = {
_27.fld0 = (_43.0,);
_16 = _44;
_4 = (-76515836120732878548913706046860676176_i128) as isize;
_59 = -_19;
_41.fld3.1 = !_26.fld3.1;
_26.fld0 = ((*_18), _41.fld0.1);
_30 = &_43;
_56 = _24;
_55.0 = -_37.0;
_49 = _45;
_28 = [137_u8,75_u8,33_u8,32_u8,94_u8,199_u8,159_u8];
_40 = (16245859129880081713_u64,);
_41.fld3.1 = _41.fld1 | _26.fld3.1;
_28 = [52_u8,141_u8,232_u8,244_u8,99_u8,202_u8,150_u8];
place!(Field::<Adt37>(Variant(_5, 1), 0)).fld1 = core::ptr::addr_of!(_13);
_54.fld2 = _48;
_23 = _49 as i8;
_60 = (*_13) - (*_13);
_54.fld3.fld4 = core::ptr::addr_of!(_1);
match (*_13) {
16245859129880081713 => bb15,
_ => bb14
}
}
bb14 = {
_30 = &_37;
_1 = _34;
SetDiscriminant(_5, 0);
_17 = _12;
RET = _23;
_33 = _7;
_39 = _26.fld3.1 as isize;
_6 = _1 as isize;
_1 = _20 * _34;
_36 = _26.fld3.1;
_29 = _32;
_39 = _9 as isize;
_26.fld1 = _36 << _12;
_27.fld0 = (_2,);
_39 = '\u{8039f}' as isize;
_16 = [167446752153451253781335359259362504535_i128,(-60806869379017570398381631495511864295_i128),(-79888172663651890522922412499378572579_i128),(-58237918782907314118545201150386612257_i128),28990571259184432312061379924358229265_i128,73784123535697743372673480973456925593_i128];
_6 = -_7;
_25 = core::ptr::addr_of!(_16);
_13 = core::ptr::addr_of!(_40.0);
Goto(bb8)
}
bb15 = {
_62 = -_59;
_59 = _62 + _19;
_54.fld4.fld2 = _39;
_54.fld3.fld3.0 = _54.fld4.fld4;
_27.fld0.0 = _37.0 >> _6;
Goto(bb16)
}
bb16 = {
Call(_69 = dump_var(4_usize, 4_usize, Move(_4), 7_usize, Move(_7), 48_usize, Move(_48), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_69 = dump_var(4_usize, 17_usize, Move(_17), 9_usize, Move(_9), 40_usize, Move(_40), 31_usize, Move(_31)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_69 = dump_var(4_usize, 35_usize, Move(_35), 32_usize, Move(_32), 37_usize, Move(_37), 21_usize, Move(_21)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_69 = dump_var(4_usize, 44_usize, Move(_44), 29_usize, Move(_29), 3_usize, Move(_3), 6_usize, Move(_6)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: i16,mut _3: Adt52,mut _4: f32,mut _5: isize,mut _6: i8,mut _7: isize,mut _8: isize,mut _9: f32,mut _10: isize,mut _11: i16,mut _12: i16,mut _13: isize) -> u16 {
mir! {
type RET = u16;
let _14: bool;
let _15: [u8; 7];
let _16: Adt50;
let _17: char;
let _18: char;
let _19: Adt41;
let _20: f64;
let _21: Adt41;
let _22: (u64,);
let _23: f64;
let _24: [i128; 6];
let _25: isize;
let _26: u128;
let _27: char;
let _28: [i128; 6];
let _29: Adt44;
let _30: isize;
let _31: Adt53;
let _32: [i128; 6];
let _33: (u64,);
let _34: [i128; 6];
let _35: ();
let _36: ();
{
_6 = _9 as i8;
place!(Field::<i64>(Variant(_3, 3), 0)) = !1270591358419630382_i64;
_13 = _10 | _7;
RET = 3_usize as u16;
RET = !36678_u16;
_12 = -_2;
place!(Field::<char>(Variant(_3, 3), 1)) = '\u{a27c9}';
place!(Field::<i64>(Variant(_3, 3), 0)) = (-4237447367600003159_i64);
_15 = [30_u8,171_u8,173_u8,106_u8,8_u8,220_u8,56_u8];
_2 = -_12;
RET = !48430_u16;
_4 = -_9;
_6 = (-56_i8);
_12 = _2 & _11;
place!(Field::<char>(Variant(_3, 3), 1)) = '\u{6358f}';
_1 = _7 ^ _8;
_6 = 1952135779_i32 as i8;
RET = 55420_u16 + 53173_u16;
_2 = _12 * _12;
_5 = _2 as isize;
_6 = -108_i8;
Goto(bb1)
}
bb1 = {
_6 = 37_i8;
_15 = [143_u8,237_u8,78_u8,6_u8,179_u8,227_u8,168_u8];
_14 = !false;
_2 = _12 >> _10;
place!(Field::<i64>(Variant(_3, 3), 0)) = (-5957698295699712942_i64);
_2 = _11;
_1 = _5;
_7 = _1;
RET = !38618_u16;
place!(Field::<char>(Variant(_3, 3), 1)) = '\u{f55ea}';
_4 = _9 + _9;
_10 = _1;
_7 = -_10;
_12 = _11 & _11;
_14 = !true;
_2 = !_11;
_14 = _7 != _13;
_13 = Field::<char>(Variant(_3, 3), 1) as isize;
place!(Field::<i64>(Variant(_3, 3), 0)) = _1 as i64;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
37 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_15 = [89_u8,203_u8,109_u8,238_u8,141_u8,138_u8,115_u8];
_9 = _4 + _4;
_6 = (-13_i8);
_5 = _8 * _7;
_11 = _12;
_4 = _6 as f32;
place!(Field::<i64>(Variant(_3, 3), 0)) = 7378459463948595031_i64 | (-4976048973419736712_i64);
_14 = _2 <= _11;
_22 = (2259518243824161121_u64,);
SetDiscriminant(_3, 2);
_1 = _10 | _10;
_23 = (-33795474597579508176271547350520400447_i128) as f64;
_5 = _10;
_17 = '\u{9d9e7}';
_26 = 4829136336084521761155799260684953906_u128;
_24 = [82997900304375703757271941680171886159_i128,(-160684197625027528921385119154608437495_i128),141100312484301894227934687131842995120_i128,(-49581247060047485134559191475446252714_i128),(-147470605748890721921467990048230842586_i128),94686546496578562181424453847857133502_i128];
_23 = _22.0 as f64;
Call(_24 = fn6(_15, _9, _8, _1, _10, _10, _10, _1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
place!(Field::<u128>(Variant(_3, 2), 0)) = _26;
_26 = Field::<u128>(Variant(_3, 2), 0) - Field::<u128>(Variant(_3, 2), 0);
_24 = [105731335932428759350941056902002474534_i128,(-55093709350597881171749238199091323153_i128),8185070738546223275098400553969202803_i128,(-152507884774398340671189582555485584162_i128),40644042299232300142437295929021970752_i128,(-13808780581757366731621680366912881782_i128)];
SetDiscriminant(_3, 1);
_29.fld5.fld2 = _1 * _1;
_22 = (2831143327332075853_u64,);
match _6 {
0 => bb1,
1 => bb8,
2 => bb12,
340282366920938463463374607431768211443 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_29.fld5.fld5 = !(-2100560077_i32);
_28 = [54859397788228459839545954715866485859_i128,81495875382329343797964648293341538056_i128,9355145127054004227126681883696592061_i128,138840520167354028455514858534568725125_i128,27270981219055150752980932044714157462_i128,41073247532891318526647813852404925078_i128];
_20 = -_23;
_12 = _2;
_11 = !_2;
_29.fld0 = !(-106377657998945662408223844940360889165_i128);
_3 = Adt52::Variant2 { fld0: _26 };
_22 = (6785183541515517869_u64,);
_15 = [26_u8,104_u8,212_u8,218_u8,165_u8,151_u8,10_u8];
_29.fld2 = _29.fld0 as u32;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(5_usize, 28_usize, Move(_28), 15_usize, Move(_15), 26_usize, Move(_26), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(5_usize, 12_usize, Move(_12), 13_usize, Move(_13), 17_usize, Move(_17), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [u8; 7],mut _2: f32,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize) -> [i128; 6] {
mir! {
type RET = [i128; 6];
let _9: [i128; 6];
let _10: Adt53;
let _11: [i128; 6];
let _12: isize;
let _13: isize;
let _14: (&'static (i16,), u8, *const f32);
let _15: (u64,);
let _16: (*const i16, bool);
let _17: bool;
let _18: [u8; 7];
let _19: [i128; 6];
let _20: u16;
let _21: Adt53;
let _22: bool;
let _23: f64;
let _24: f64;
let _25: ();
let _26: ();
{
_3 = -_4;
Call(_1 = fn7(_7, _4, _7, _3, _5, _4, _8, _4, _3, _2, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [73010883853843820666625533022942464534_i128,35332628197984598793947097284358269173_i128,158056069964607913684813715561970790778_i128,(-128164085332531295633448160931414001841_i128),(-76848421833596039821393164724630231166_i128),(-124438622039288480287896727084674035703_i128)];
_2 = _4 as f32;
_10.fld0.0 = 18801_i16;
_1 = [150_u8,7_u8,60_u8,100_u8,249_u8,44_u8,171_u8];
_8 = -_3;
_3 = _10.fld0.0 as isize;
_9 = [(-46109325138473471395892610656541563225_i128),(-38095218546943359499190573089280485755_i128),10201633526368787963246679418502564421_i128,77233185136203456998642087517220953569_i128,(-5760558199249260248924623397874079165_i128),296552959870312561590836779657494589_i128];
_10.fld0.0 = -(-190_i16);
_12 = _8;
_10.fld0.0 = (-1478_i16) * (-24070_i16);
_2 = 23178761419023902875932001115516646338_u128 as f32;
_9 = RET;
_3 = 4230329000_u32 as isize;
_6 = _5 * _5;
_1 = [70_u8,28_u8,37_u8,207_u8,12_u8,43_u8,109_u8];
_5 = _12;
_6 = _4 ^ _4;
_1 = [76_u8,235_u8,234_u8,139_u8,61_u8,215_u8,33_u8];
Goto(bb2)
}
bb2 = {
RET = _9;
_5 = (-2592434598003312753_i64) as isize;
_11 = [(-74908902019027582521195694127112525704_i128),(-84213437773233123902635960507794287546_i128),3066855573023723142607265502225051001_i128,(-137097166844031852228895631819684265063_i128),(-93189804444366888001612417204506368671_i128),106700440379644869727513596244080313881_i128];
_1 = [98_u8,204_u8,162_u8,227_u8,176_u8,2_u8,207_u8];
RET = [124553580395261058023477568288378814158_i128,(-76739514397752592842420606359993354177_i128),(-88222339852059167853324423800297032680_i128),158146523633088201357157317872817621183_i128,(-118904438878578921369209984190735004122_i128),51755347836208912341326020252411870548_i128];
Goto(bb3)
}
bb3 = {
_2 = _6 as f32;
_14.0 = &_10.fld0;
_3 = _12;
_14.0 = &_10.fld0;
_9 = [(-2900419432980619171588666827291574044_i128),(-7175647065267424310427267934950167875_i128),(-148800075692884981573768713982787814853_i128),38155826262653444250075128247707967213_i128,137742674110698019284597124214864087255_i128,124669340661387313579893950569766384495_i128];
Goto(bb4)
}
bb4 = {
_10.fld0 = ((-15210_i16),);
_8 = !_3;
_4 = 16932136004343931971_usize as isize;
_17 = false;
_6 = _12;
_16.1 = !_17;
_14.0 = &_10.fld0;
_9 = [157714386042268468513502663888148730079_i128,(-81081589151494404151418821708158050672_i128),(-113160280356932249812687759929631469323_i128),2125054015324697434248044194736875543_i128,(-128886203860646170371616215210232938519_i128),110659732213655851420042199328636529593_i128];
_16.0 = core::ptr::addr_of!(_10.fld0.0);
_8 = !_3;
RET = [162126536662878848714842172270841892889_i128,135956397193418246852178162785649550940_i128,150659187811016462925382167842965259605_i128,(-131683729153642173713663111467524052099_i128),(-143060777404327789298157445926328709295_i128),101985924607878648818331869301461762396_i128];
_18 = [69_u8,74_u8,103_u8,202_u8,97_u8,182_u8,36_u8];
RET = _9;
_5 = (-2044042875_i32) as isize;
_19 = [(-72344394471911020070130756841765831939_i128),(-49456490799360254559656236692723914623_i128),61305185867953653588251108427865420292_i128,(-146044184308361468010381458277651026699_i128),76161794876681023683562343226288999468_i128,43179027015692465741734393129003246628_i128];
_15 = (12659411105340788810_u64,);
_15 = (363844110437004950_u64,);
_15.0 = !18271135935141483092_u64;
_13 = _6 | _8;
_16.1 = !_17;
Call(_3 = core::intrinsics::bswap(_6), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_14.0 = &_10.fld0;
_1 = [73_u8,31_u8,192_u8,173_u8,38_u8,39_u8,78_u8];
_14.1 = !242_u8;
_16.0 = core::ptr::addr_of!(_10.fld0.0);
_14.0 = &_10.fld0;
_12 = -_6;
_5 = !_13;
_18 = _1;
_14.2 = core::ptr::addr_of!(_2);
_14.1 = 252_u8 | 210_u8;
match _10.fld0.0 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463463374607431768196246 => bb11,
_ => bb10
}
}
bb6 = {
_10.fld0 = ((-15210_i16),);
_8 = !_3;
_4 = 16932136004343931971_usize as isize;
_17 = false;
_6 = _12;
_16.1 = !_17;
_14.0 = &_10.fld0;
_9 = [157714386042268468513502663888148730079_i128,(-81081589151494404151418821708158050672_i128),(-113160280356932249812687759929631469323_i128),2125054015324697434248044194736875543_i128,(-128886203860646170371616215210232938519_i128),110659732213655851420042199328636529593_i128];
_16.0 = core::ptr::addr_of!(_10.fld0.0);
_8 = !_3;
RET = [162126536662878848714842172270841892889_i128,135956397193418246852178162785649550940_i128,150659187811016462925382167842965259605_i128,(-131683729153642173713663111467524052099_i128),(-143060777404327789298157445926328709295_i128),101985924607878648818331869301461762396_i128];
_18 = [69_u8,74_u8,103_u8,202_u8,97_u8,182_u8,36_u8];
RET = _9;
_5 = (-2044042875_i32) as isize;
_19 = [(-72344394471911020070130756841765831939_i128),(-49456490799360254559656236692723914623_i128),61305185867953653588251108427865420292_i128,(-146044184308361468010381458277651026699_i128),76161794876681023683562343226288999468_i128,43179027015692465741734393129003246628_i128];
_15 = (12659411105340788810_u64,);
_15 = (363844110437004950_u64,);
_15.0 = !18271135935141483092_u64;
_13 = _6 | _8;
_16.1 = !_17;
Call(_3 = core::intrinsics::bswap(_6), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_2 = _6 as f32;
_14.0 = &_10.fld0;
_3 = _12;
_14.0 = &_10.fld0;
_9 = [(-2900419432980619171588666827291574044_i128),(-7175647065267424310427267934950167875_i128),(-148800075692884981573768713982787814853_i128),38155826262653444250075128247707967213_i128,137742674110698019284597124214864087255_i128,124669340661387313579893950569766384495_i128];
Goto(bb4)
}
bb8 = {
RET = _9;
_5 = (-2592434598003312753_i64) as isize;
_11 = [(-74908902019027582521195694127112525704_i128),(-84213437773233123902635960507794287546_i128),3066855573023723142607265502225051001_i128,(-137097166844031852228895631819684265063_i128),(-93189804444366888001612417204506368671_i128),106700440379644869727513596244080313881_i128];
_1 = [98_u8,204_u8,162_u8,227_u8,176_u8,2_u8,207_u8];
RET = [124553580395261058023477568288378814158_i128,(-76739514397752592842420606359993354177_i128),(-88222339852059167853324423800297032680_i128),158146523633088201357157317872817621183_i128,(-118904438878578921369209984190735004122_i128),51755347836208912341326020252411870548_i128];
Goto(bb3)
}
bb9 = {
RET = [73010883853843820666625533022942464534_i128,35332628197984598793947097284358269173_i128,158056069964607913684813715561970790778_i128,(-128164085332531295633448160931414001841_i128),(-76848421833596039821393164724630231166_i128),(-124438622039288480287896727084674035703_i128)];
_2 = _4 as f32;
_10.fld0.0 = 18801_i16;
_1 = [150_u8,7_u8,60_u8,100_u8,249_u8,44_u8,171_u8];
_8 = -_3;
_3 = _10.fld0.0 as isize;
_9 = [(-46109325138473471395892610656541563225_i128),(-38095218546943359499190573089280485755_i128),10201633526368787963246679418502564421_i128,77233185136203456998642087517220953569_i128,(-5760558199249260248924623397874079165_i128),296552959870312561590836779657494589_i128];
_10.fld0.0 = -(-190_i16);
_12 = _8;
_10.fld0.0 = (-1478_i16) * (-24070_i16);
_2 = 23178761419023902875932001115516646338_u128 as f32;
_9 = RET;
_3 = 4230329000_u32 as isize;
_6 = _5 * _5;
_1 = [70_u8,28_u8,37_u8,207_u8,12_u8,43_u8,109_u8];
_5 = _12;
_6 = _4 ^ _4;
_1 = [76_u8,235_u8,234_u8,139_u8,61_u8,215_u8,33_u8];
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_16.0 = core::ptr::addr_of!(_10.fld0.0);
_15.0 = 13427301456462049952_u64 | 985879505176173106_u64;
_13 = _5;
_21 = Adt53 { fld0: _10.fld0 };
_10.fld0 = _21.fld0;
_17 = _16.1;
_3 = !_13;
_14.2 = core::ptr::addr_of!(_2);
match _21.fld0.0 {
0 => bb8,
1 => bb10,
2 => bb5,
340282366920938463463374607431768196246 => bb12,
_ => bb4
}
}
bb12 = {
_21.fld0 = _10.fld0;
_10.fld0 = (_21.fld0.0,);
_1 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_10.fld0 = (_21.fld0.0,);
_18 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_18 = _1;
_19 = [(-52162258123611636438871339932113098232_i128),(-95454638654153010508725567878400470207_i128),155061593790294049677419253951734450831_i128,124907175108556098594472555034635557978_i128,(-123818300928671769600102104757980391449_i128),(-45661739091838376701733900171074281795_i128)];
_17 = !_16.1;
_21 = Adt53 { fld0: _10.fld0 };
_13 = -_3;
_16.1 = !_17;
_8 = _13 - _12;
_22 = !_17;
_21.fld0 = _10.fld0;
_20 = 61628_u16;
_7 = _8;
_16.1 = _17;
_24 = _2 as f64;
_15.0 = 11859445154875362674_u64 << _8;
_3 = -_8;
_4 = _7;
match _10.fld0.0 {
0 => bb1,
1 => bb5,
2 => bb7,
3 => bb10,
4 => bb13,
340282366920938463463374607431768196246 => bb15,
_ => bb14
}
}
bb13 = {
_14.0 = &_10.fld0;
_1 = [73_u8,31_u8,192_u8,173_u8,38_u8,39_u8,78_u8];
_14.1 = !242_u8;
_16.0 = core::ptr::addr_of!(_10.fld0.0);
_14.0 = &_10.fld0;
_12 = -_6;
_5 = !_13;
_18 = _1;
_14.2 = core::ptr::addr_of!(_2);
_14.1 = 252_u8 | 210_u8;
match _10.fld0.0 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463463374607431768196246 => bb11,
_ => bb10
}
}
bb14 = {
_10.fld0 = ((-15210_i16),);
_8 = !_3;
_4 = 16932136004343931971_usize as isize;
_17 = false;
_6 = _12;
_16.1 = !_17;
_14.0 = &_10.fld0;
_9 = [157714386042268468513502663888148730079_i128,(-81081589151494404151418821708158050672_i128),(-113160280356932249812687759929631469323_i128),2125054015324697434248044194736875543_i128,(-128886203860646170371616215210232938519_i128),110659732213655851420042199328636529593_i128];
_16.0 = core::ptr::addr_of!(_10.fld0.0);
_8 = !_3;
RET = [162126536662878848714842172270841892889_i128,135956397193418246852178162785649550940_i128,150659187811016462925382167842965259605_i128,(-131683729153642173713663111467524052099_i128),(-143060777404327789298157445926328709295_i128),101985924607878648818331869301461762396_i128];
_18 = [69_u8,74_u8,103_u8,202_u8,97_u8,182_u8,36_u8];
RET = _9;
_5 = (-2044042875_i32) as isize;
_19 = [(-72344394471911020070130756841765831939_i128),(-49456490799360254559656236692723914623_i128),61305185867953653588251108427865420292_i128,(-146044184308361468010381458277651026699_i128),76161794876681023683562343226288999468_i128,43179027015692465741734393129003246628_i128];
_15 = (12659411105340788810_u64,);
_15 = (363844110437004950_u64,);
_15.0 = !18271135935141483092_u64;
_13 = _6 | _8;
_16.1 = !_17;
Call(_3 = core::intrinsics::bswap(_6), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_16.0 = core::ptr::addr_of!(_21.fld0.0);
Goto(bb16)
}
bb16 = {
Call(_25 = dump_var(6_usize, 13_usize, Move(_13), 11_usize, Move(_11), 8_usize, Move(_8), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_25 = dump_var(6_usize, 22_usize, Move(_22), 18_usize, Move(_18), 1_usize, Move(_1), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: f32,mut _11: isize) -> [u8; 7] {
mir! {
type RET = [u8; 7];
let _12: (u64,);
let _13: f32;
let _14: Adt44;
let _15: (usize, i32, char, (*const i16, bool), i16);
let _16: (u64,);
let _17: i32;
let _18: (i16,);
let _19: [u8; 7];
let _20: Adt53;
let _21: [u8; 7];
let _22: Adt38;
let _23: Adt52;
let _24: Adt53;
let _25: u128;
let _26: (u64,);
let _27: [u8; 7];
let _28: [i128; 6];
let _29: isize;
let _30: *mut u16;
let _31: i32;
let _32: f64;
let _33: (u64,);
let _34: (u64,);
let _35: Adt53;
let _36: f32;
let _37: isize;
let _38: *mut *mut u16;
let _39: [i128; 6];
let _40: bool;
let _41: i128;
let _42: Adt49;
let _43: [u8; 7];
let _44: char;
let _45: char;
let _46: u64;
let _47: [i128; 6];
let _48: [i128; 6];
let _49: isize;
let _50: (u64,);
let _51: Adt50;
let _52: i128;
let _53: ();
let _54: ();
{
_1 = _6;
RET = [190_u8,16_u8,215_u8,184_u8,206_u8,217_u8,73_u8];
_11 = -_7;
_10 = 3070593534_u32 as f32;
Goto(bb1)
}
bb1 = {
_6 = _7 ^ _11;
RET = [221_u8,48_u8,101_u8,224_u8,108_u8,145_u8,17_u8];
_4 = _11;
_12.0 = 5484032583759696890_u64 >> _4;
_3 = -_6;
_8 = _10 as isize;
_1 = _9;
_7 = 34920373906273945984620068234580659686_u128 as isize;
_14.fld4 = !64853778908431318738724225776267953315_u128;
_13 = -_10;
_14.fld6 = core::ptr::addr_of_mut!(_14.fld3);
_3 = -_6;
_15.4 = 925_i16 ^ (-10819_i16);
_9 = _4;
_15.0 = 7159770814582254921_usize;
_16.0 = _12.0;
_14.fld5.fld3 = 33_i8 | (-115_i8);
_11 = !_6;
_15.2 = '\u{14d83}';
_14.fld5.fld3 = 29_i8;
match _15.0 {
0 => bb2,
7159770814582254921 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_14.fld3 = _14.fld5.fld3 - _14.fld5.fld3;
_15.3.1 = _6 <= _3;
_17 = 2092879152_i32 << _6;
_1 = _14.fld4 as isize;
_5 = -_4;
RET = [168_u8,246_u8,28_u8,75_u8,15_u8,38_u8,65_u8];
RET = [112_u8,243_u8,221_u8,197_u8,88_u8,163_u8,69_u8];
_14.fld5.fld3 = !_14.fld3;
_14.fld5.fld0 = _15.3.1 != _15.3.1;
_14.fld5.fld4 = _14.fld6;
_14.fld3 = _14.fld5.fld3;
_15.3.0 = core::ptr::addr_of!(_18.0);
RET = [90_u8,67_u8,172_u8,223_u8,139_u8,187_u8,85_u8];
_21 = RET;
_16.0 = !_12.0;
_18 = (_15.4,);
RET = _21;
_13 = _14.fld4 as f32;
_22.fld3 = (_14.fld5.fld4, _15.0);
_24 = Adt53 { fld0: _18 };
_10 = _13 - _13;
_6 = _9 - _5;
Call(_19 = fn8(_11, _3, _4, _15.3, _22.fld3, _15.3, _11, _5, _3, _15.3.1, _14.fld6, _15.3, _6, _14.fld5.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_14.fld0 = -57302139566995887761500011187287622339_i128;
_14.fld2 = 1467762492_u32 | 1136993582_u32;
_22.fld4 = core::ptr::addr_of!(_13);
_22.fld2 = core::ptr::addr_of!(_20.fld0.0);
_20.fld0.0 = !_15.4;
_22.fld7 = core::ptr::addr_of_mut!(_22.fld5);
_14.fld5.fld2 = (-2241260458647390245_i64) as isize;
_14.fld5.fld6 = core::ptr::addr_of_mut!(_22.fld0.0);
_22.fld7 = core::ptr::addr_of_mut!(_22.fld5);
_15.3 = (_22.fld2, _14.fld5.fld0);
_22.fld6 = !5582294327493202916_i64;
Goto(bb6)
}
bb6 = {
_22.fld5 = _18.0 as u16;
_18 = (_24.fld0.0,);
_22.fld5 = 5879_u16 ^ 39326_u16;
_2 = _22.fld6 as isize;
_22.fld0.0 = core::ptr::addr_of_mut!(_22.fld5);
_22.fld1 = _22.fld3.1 & _15.0;
_22.fld3.1 = _22.fld1;
_27 = [111_u8,150_u8,120_u8,84_u8,1_u8,213_u8,202_u8];
_14.fld5.fld5 = !_17;
_25 = !_14.fld4;
_15.3 = (_22.fld2, _14.fld5.fld0);
_14.fld5.fld6 = core::ptr::addr_of_mut!(_22.fld0.0);
_22.fld2 = _15.3.0;
_11 = _14.fld5.fld0 as isize;
_23 = Adt52::Variant0 { fld0: _17,fld1: _14.fld5.fld6,fld2: _22.fld3 };
_14.fld1 = Field::<*mut *mut u16>(Variant(_23, 0), 1);
_27 = [38_u8,121_u8,192_u8,152_u8,209_u8,223_u8,156_u8];
_14.fld5.fld2 = _6 ^ _11;
_30 = core::ptr::addr_of_mut!(_22.fld5);
_2 = -_14.fld5.fld2;
Call(_26.0 = core::intrinsics::bswap(_12.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_29 = -_2;
_34.0 = _10 as u64;
_31 = _18.0 as i32;
_22.fld3 = (_14.fld5.fld4, Field::<(*mut i8, usize)>(Variant(_23, 0), 2).1);
Call(_11 = core::intrinsics::bswap(_14.fld5.fld2), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_22.fld1 = _14.fld5.fld2 as usize;
_32 = _16.0 as f64;
_14.fld5.fld3 = !_14.fld3;
_19 = [85_u8,121_u8,97_u8,114_u8,195_u8,198_u8,100_u8];
_14.fld5.fld5 = _17 * _17;
_1 = _14.fld5.fld2 + _29;
place!(Field::<(*mut i8, usize)>(Variant(_23, 0), 2)).1 = !_22.fld1;
_15.0 = !Field::<(*mut i8, usize)>(Variant(_23, 0), 2).1;
place!(Field::<(*mut i8, usize)>(Variant(_23, 0), 2)).1 = _15.0;
_35.fld0.0 = 74_u8 as i16;
_22.fld3.0 = core::ptr::addr_of_mut!(_14.fld5.fld3);
_26 = (_16.0,);
_24.fld0.0 = _35.fld0.0 + _20.fld0.0;
_9 = _3;
SetDiscriminant(_23, 0);
_27 = [12_u8,192_u8,55_u8,129_u8,191_u8,204_u8,14_u8];
_14.fld5.fld2 = _25 as isize;
_33.0 = _26.0;
_25 = _14.fld4;
_32 = 5_u8 as f64;
_34.0 = _22.fld1 as u64;
_16.0 = _34.0;
_4 = _3;
place!(Field::<(*mut i8, usize)>(Variant(_23, 0), 2)).0 = _14.fld5.fld4;
Goto(bb9)
}
bb9 = {
_28 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_15.3 = (_22.fld2, _14.fld5.fld0);
_14.fld1 = core::ptr::addr_of_mut!(_22.fld7);
_7 = _5;
_20 = Adt53 { fld0: _18 };
_14.fld6 = Field::<(*mut i8, usize)>(Variant(_23, 0), 2).0;
_20.fld0.0 = _24.fld0.0 & _18.0;
_14.fld3 = _14.fld5.fld3;
_30 = _22.fld0.0;
_20 = Adt53 { fld0: _24.fld0 };
_35 = Adt53 { fld0: _24.fld0 };
_22.fld3 = (_14.fld6, _15.0);
Goto(bb10)
}
bb10 = {
_26.0 = !_34.0;
_25 = _22.fld5 as u128;
_22.fld1 = _22.fld5 as usize;
_39 = _28;
_35.fld0.0 = _18.0;
place!(Field::<i32>(Variant(_23, 0), 0)) = !_14.fld5.fld5;
place!(Field::<(*mut i8, usize)>(Variant(_23, 0), 2)).1 = _34.0 as usize;
Goto(bb11)
}
bb11 = {
_15.1 = Field::<i32>(Variant(_23, 0), 0) << _11;
_22.fld6 = _15.0 as i64;
_15.2 = '\u{fa971}';
_22.fld6 = (-2753533130537213833_i64) << _29;
Call(_43 = fn9(_6, _2, _1, _15, _15.3, _22.fld6, _15.3, _15.3.1, _1, _34, _2, _16.0, _22.fld3, _15.1, _22.fld3, _34), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_11 = -_4;
_23 = Adt52::Variant0 { fld0: _15.1,fld1: _14.fld5.fld6,fld2: _22.fld3 };
_22.fld3.0 = Field::<(*mut i8, usize)>(Variant(_23, 0), 2).0;
_22.fld5 = 59698_u16 << _6;
_21 = [233_u8,120_u8,229_u8,236_u8,178_u8,19_u8,181_u8];
_8 = _2 << _1;
_15.1 = Field::<i32>(Variant(_23, 0), 0);
place!(Field::<i32>(Variant(_23, 0), 0)) = _17 >> _8;
_20.fld0 = _18;
_44 = _15.2;
_34.0 = _26.0;
_19 = [91_u8,49_u8,0_u8,150_u8,59_u8,71_u8,64_u8];
Goto(bb13)
}
bb13 = {
_16 = (_34.0,);
place!(Field::<*mut *mut u16>(Variant(_23, 0), 1)) = _14.fld1;
_22.fld1 = !_22.fld3.1;
_21 = [38_u8,83_u8,116_u8,197_u8,128_u8,189_u8,59_u8];
_40 = !_14.fld5.fld0;
_14.fld3 = 40_u8 as i8;
_39 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_15.0 = !_22.fld1;
_15.0 = !Field::<(*mut i8, usize)>(Variant(_23, 0), 2).1;
_26 = (_16.0,);
_40 = !_15.3.1;
_47 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
RET = [1_u8,2_u8,132_u8,166_u8,68_u8,32_u8,168_u8];
_7 = !_2;
_35 = Adt53 { fld0: _20.fld0 };
_35 = Adt53 { fld0: _24.fld0 };
_14.fld4 = _25 << _1;
_12.0 = _15.2 as u64;
_41 = _14.fld0;
_33 = _26;
Call(_22 = fn15(_14.fld5.fld6, _14.fld4, _15, _15.3, _8, _40, _14.fld4, _15, _40, _2, _14.fld5.fld5, _15.3, _15.3.0, _29, _8, _14.fld4), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_18.0 = !_35.fld0.0;
_4 = _32 as isize;
_2 = -_1;
_47 = [_41,_14.fld0,_41,_14.fld0,_41,_14.fld0];
_18 = (_24.fld0.0,);
_38 = _14.fld1;
_26 = (_16.0,);
_31 = _13 as i32;
_38 = core::ptr::addr_of_mut!(_30);
_18 = (_24.fld0.0,);
_19 = [131_u8,247_u8,249_u8,103_u8,175_u8,90_u8,253_u8];
_15.3 = (_22.fld2, _14.fld5.fld0);
_3 = _29;
_36 = _10 - _10;
_22.fld2 = core::ptr::addr_of!(_15.4);
_35.fld0 = _18;
_48 = [_41,_41,_41,_41,_14.fld0,_14.fld0];
_46 = !_16.0;
_43 = [66_u8,161_u8,177_u8,61_u8,77_u8,242_u8,213_u8];
_10 = -_36;
place!(Field::<(*mut i8, usize)>(Variant(_23, 0), 2)) = (_22.fld3.0, _15.0);
_41 = _32 as i128;
_3 = _29;
place!(Field::<*mut *mut u16>(Variant(_23, 0), 1)) = _14.fld1;
_20.fld0.0 = _15.4;
Goto(bb15)
}
bb15 = {
Call(_53 = dump_var(7_usize, 6_usize, Move(_6), 33_usize, Move(_33), 40_usize, Move(_40), 39_usize, Move(_39)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_53 = dump_var(7_usize, 9_usize, Move(_9), 44_usize, Move(_44), 12_usize, Move(_12), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_53 = dump_var(7_usize, 17_usize, Move(_17), 3_usize, Move(_3), 29_usize, Move(_29), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_53 = dump_var(7_usize, 1_usize, Move(_1), 21_usize, Move(_21), 41_usize, Move(_41), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: (*const i16, bool),mut _5: (*mut i8, usize),mut _6: (*const i16, bool),mut _7: isize,mut _8: isize,mut _9: isize,mut _10: bool,mut _11: *mut i8,mut _12: (*const i16, bool),mut _13: isize,mut _14: bool) -> [u8; 7] {
mir! {
type RET = [u8; 7];
let _15: &'static (i16,);
let _16: isize;
let _17: isize;
let _18: Adt53;
let _19: usize;
let _20: Adt38;
let _21: i8;
let _22: bool;
let _23: u32;
let _24: bool;
let _25: char;
let _26: [u8; 7];
let _27: [u8; 7];
let _28: isize;
let _29: Adt53;
let _30: Adt53;
let _31: isize;
let _32: f32;
let _33: u64;
let _34: isize;
let _35: (*mut u16, *const u16);
let _36: Adt44;
let _37: Adt53;
let _38: (*const i16, bool);
let _39: Adt50;
let _40: (u64,);
let _41: (usize, i32, char, (*const i16, bool), i16);
let _42: [i128; 6];
let _43: f32;
let _44: *const u64;
let _45: [u8; 7];
let _46: char;
let _47: [i128; 6];
let _48: ();
let _49: ();
{
_12 = (_6.0, _14);
RET = [64_u8,52_u8,38_u8,183_u8,21_u8,135_u8,121_u8];
_10 = !_12.1;
_12 = (_6.0, _14);
_14 = !_12.1;
_8 = _2;
_1 = _9;
_7 = _4.1 as isize;
_9 = _8;
_4.0 = _12.0;
_4.1 = _12.1;
_17 = 3808307280_u32 as isize;
_14 = _4.1;
RET = [122_u8,88_u8,87_u8,157_u8,87_u8,24_u8,165_u8];
_18.fld0.0 = (-6286_i16);
_6.1 = _14 != _10;
_10 = _7 != _9;
_6.0 = core::ptr::addr_of!(_18.fld0.0);
Goto(bb1)
}
bb1 = {
_19 = _5.1;
_16 = _7;
_20.fld3.0 = core::ptr::addr_of_mut!(_21);
_22 = !_12.1;
_16 = _1;
_6.0 = _12.0;
_20.fld2 = _4.0;
_6 = (_20.fld2, _12.1);
_15 = &_18.fld0;
_20.fld0.0 = core::ptr::addr_of_mut!(_20.fld5);
_24 = _3 < _8;
_11 = core::ptr::addr_of_mut!(_21);
_4 = _6;
_14 = _10;
_13 = _3;
_19 = _5.1;
_12.0 = _4.0;
_12.0 = _20.fld2;
_20.fld3 = (_5.0, _19);
Goto(bb2)
}
bb2 = {
_18.fld0.0 = 31082_i16;
RET = [120_u8,127_u8,96_u8,122_u8,84_u8,206_u8,35_u8];
_15 = &_18.fld0;
_18.fld0.0 = !10480_i16;
_12 = _6;
_20.fld0.0 = core::ptr::addr_of_mut!(_20.fld5);
_15 = &_18.fld0;
_20.fld0.0 = core::ptr::addr_of_mut!(_20.fld5);
_14 = _6.1 != _6.1;
_12 = _6;
_22 = _10 ^ _24;
_23 = 61755303_u32;
match _5.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
7159770814582254921 => bb7,
_ => bb6
}
}
bb3 = {
_19 = _5.1;
_16 = _7;
_20.fld3.0 = core::ptr::addr_of_mut!(_21);
_22 = !_12.1;
_16 = _1;
_6.0 = _12.0;
_20.fld2 = _4.0;
_6 = (_20.fld2, _12.1);
_15 = &_18.fld0;
_20.fld0.0 = core::ptr::addr_of_mut!(_20.fld5);
_24 = _3 < _8;
_11 = core::ptr::addr_of_mut!(_21);
_4 = _6;
_14 = _10;
_13 = _3;
_19 = _5.1;
_12.0 = _4.0;
_12.0 = _20.fld2;
_20.fld3 = (_5.0, _19);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_16 = 132686084_i32 as isize;
_6 = (_4.0, _22);
_20.fld0.1 = core::ptr::addr_of!(_20.fld5);
_4.0 = core::ptr::addr_of!((*_15).0);
_20.fld3 = _5;
_8 = !_7;
_25 = '\u{63f8c}';
_20.fld7 = core::ptr::addr_of_mut!(_20.fld5);
_20.fld5 = _5.1 as u16;
_17 = 145_u8 as isize;
_26 = [99_u8,10_u8,10_u8,151_u8,93_u8,230_u8,138_u8];
_29.fld0.0 = -(*_15).0;
Goto(bb8)
}
bb8 = {
_20.fld1 = _5.1 * _19;
_16 = -_8;
_2 = !_9;
_18.fld0.0 = !_29.fld0.0;
_32 = _18.fld0.0 as f32;
_14 = _22 ^ _22;
_30.fld0 = (_18.fld0.0,);
_29 = Adt53 { fld0: _18.fld0 };
_20.fld7 = core::ptr::addr_of_mut!(_20.fld5);
_31 = 290398905029171365021516539130243947537_u128 as isize;
RET = _26;
_20.fld3.1 = 43829869976119976399669150998091652352_i128 as usize;
_20.fld0.1 = core::ptr::addr_of!(_20.fld5);
_7 = 201_u8 as isize;
_4.0 = _20.fld2;
_25 = '\u{eb4c8}';
_28 = _20.fld5 as isize;
_9 = _8;
_15 = &_29.fld0;
_20.fld0.0 = _20.fld7;
_34 = _2;
_29.fld0.0 = _18.fld0.0;
_20.fld4 = core::ptr::addr_of!(_32);
_6.1 = _22;
_4.0 = core::ptr::addr_of!(_30.fld0.0);
match _5.1 {
7159770814582254921 => bb10,
_ => bb9
}
}
bb9 = {
_19 = _5.1;
_16 = _7;
_20.fld3.0 = core::ptr::addr_of_mut!(_21);
_22 = !_12.1;
_16 = _1;
_6.0 = _12.0;
_20.fld2 = _4.0;
_6 = (_20.fld2, _12.1);
_15 = &_18.fld0;
_20.fld0.0 = core::ptr::addr_of_mut!(_20.fld5);
_24 = _3 < _8;
_11 = core::ptr::addr_of_mut!(_21);
_4 = _6;
_14 = _10;
_13 = _3;
_19 = _5.1;
_12.0 = _4.0;
_12.0 = _20.fld2;
_20.fld3 = (_5.0, _19);
Goto(bb2)
}
bb10 = {
_35.0 = core::ptr::addr_of_mut!(_20.fld5);
_20.fld7 = core::ptr::addr_of_mut!(_20.fld5);
_31 = _1 << _9;
_36.fld5.fld5 = -607406792_i32;
_36.fld5.fld4 = _5.0;
_37.fld0 = _29.fld0;
_20.fld0.0 = core::ptr::addr_of_mut!(_20.fld5);
_33 = !6601454949588803084_u64;
_26 = [203_u8,133_u8,150_u8,88_u8,254_u8,142_u8,93_u8];
_22 = !_12.1;
_20.fld3.1 = !_20.fld1;
_3 = (-23831340050971505346563444462456261794_i128) as isize;
_25 = '\u{a55db}';
_36.fld5.fld5 = !846574966_i32;
_20.fld3.0 = _5.0;
_29 = _37;
_6.1 = _22 & _12.1;
_20.fld5 = _23 as u16;
_41.2 = _25;
_41.3 = (_6.0, _12.1);
_36.fld5.fld0 = !_4.1;
match _19 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
7159770814582254921 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_36.fld1 = core::ptr::addr_of_mut!(_35.0);
_40 = (_33,);
_35 = _20.fld0;
_1 = _31;
Goto(bb13)
}
bb13 = {
_40.0 = !_33;
_20.fld3.0 = core::ptr::addr_of_mut!((*_11));
_20.fld3.0 = _5.0;
_36.fld5.fld3 = !(-98_i8);
_36.fld5.fld6 = core::ptr::addr_of_mut!(_35.0);
_31 = _2;
_36.fld5.fld4 = _20.fld3.0;
Goto(bb14)
}
bb14 = {
_21 = _20.fld3.1 as i8;
_41.0 = !_20.fld3.1;
_40 = (_33,);
_6.0 = _20.fld2;
_37 = Adt53 { fld0: _29.fld0 };
_17 = _36.fld5.fld3 as isize;
_20.fld7 = _35.0;
_2 = _16;
_37 = _29;
_42 = [(-100997387484807528685274172938498067753_i128),125758346420611222168421962443743003044_i128,(-156947026631699920624746432249502656463_i128),114759563920111139179386492032199317352_i128,(-33588795272594064182758787030538513492_i128),102426138653073722558075241672595975120_i128];
_14 = !_36.fld5.fld0;
_20.fld0 = (_35.0, _35.1);
_38.0 = core::ptr::addr_of!(_29.fld0.0);
_10 = _22;
_36.fld3 = (*_11);
_5 = (_11, _41.0);
RET = _26;
_41.3.1 = !_14;
_20.fld6 = 4634782858484800556_i64;
_36.fld5.fld0 = _10;
_36.fld5.fld5 = 215919648_i32 + (-895164847_i32);
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(8_usize, 33_usize, Move(_33), 21_usize, Move(_21), 13_usize, Move(_13), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(8_usize, 3_usize, Move(_3), 26_usize, Move(_26), 42_usize, Move(_42), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(8_usize, 14_usize, Move(_14), 9_usize, Move(_9), 1_usize, Move(_1), 31_usize, Move(_31)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: (usize, i32, char, (*const i16, bool), i16),mut _5: (*const i16, bool),mut _6: i64,mut _7: (*const i16, bool),mut _8: bool,mut _9: isize,mut _10: (u64,),mut _11: isize,mut _12: u64,mut _13: (*mut i8, usize),mut _14: i32,mut _15: (*mut i8, usize),mut _16: (u64,)) -> [u8; 7] {
mir! {
type RET = [u8; 7];
let _17: u64;
let _18: *mut i8;
let _19: f32;
let _20: isize;
let _21: Adt47;
let _22: Adt53;
let _23: f32;
let _24: *mut *mut u16;
let _25: (i16,);
let _26: f32;
let _27: (i16,);
let _28: i16;
let _29: f32;
let _30: *mut *mut u16;
let _31: isize;
let _32: f32;
let _33: usize;
let _34: (i16,);
let _35: Adt39;
let _36: (i16,);
let _37: *mut (&'static (i16,), u8, *const f32);
let _38: [u8; 7];
let _39: (i16,);
let _40: f64;
let _41: u64;
let _42: (i16,);
let _43: char;
let _44: i64;
let _45: Adt53;
let _46: bool;
let _47: char;
let _48: (usize, i32, char, (*const i16, bool), i16);
let _49: ();
let _50: ();
{
_7.0 = _4.3.0;
_10.0 = _12;
_7 = (_5.0, _8);
RET = [224_u8,190_u8,206_u8,80_u8,97_u8,119_u8,13_u8];
_17 = _8 as u64;
_5.0 = _4.3.0;
_11 = 1989267786_u32 as isize;
_5 = (_7.0, _8);
_10.0 = !_17;
_2 = _10.0 as isize;
_7.1 = _5.1;
_9 = _2;
_11 = _2;
_13.1 = _4.0 << _10.0;
_7.1 = _4.3.1;
_7 = (_4.3.0, _5.1);
_4.4 = !(-25165_i16);
_7 = _5;
_15.0 = _13.0;
_15.1 = !_4.0;
_4.3.0 = _7.0;
_15.1 = !_13.1;
_4.0 = !_15.1;
Call(_16.0 = fn10(_5.1, _4.1, _17, _15, _15.1, _9, _4.1, _5.1, _13, _12, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = _7;
_18 = _15.0;
_4.4 = -32577_i16;
_1 = _2;
_4.1 = _14 - _14;
_2 = !_3;
_10 = (_16.0,);
_13 = (_18, _4.0);
_10.0 = _16.0;
_16.0 = _10.0;
Call(_15 = fn11(_16, _3, _16.0, _13.0, _4.0, _4, _8, _9, _7.1, _3, _13, _4.3, _13, _4.0, _4.3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_16.0 = _12;
_12 = _10.0 * _10.0;
_10.0 = _12;
RET = [142_u8,148_u8,7_u8,201_u8,217_u8,247_u8,92_u8];
_15.0 = _18;
Call(_23 = fn12(_4, _15, _4.3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = -(-5198967240759189128_i64);
_14 = _4.1;
_10 = _16;
_22.fld0.0 = _4.4 ^ _4.4;
_4.3.1 = !_7.1;
_16.0 = _17;
_13.0 = _15.0;
_4.3.1 = !_8;
RET = [56_u8,211_u8,14_u8,39_u8,248_u8,109_u8,67_u8];
_15 = (_13.0, _4.0);
_10.0 = _4.2 as u64;
_26 = _23 + _23;
_25 = _22.fld0;
_4.4 = _22.fld0.0;
_4.3.1 = _11 <= _9;
_17 = _23 as u64;
_5.1 = !_4.3.1;
Call(_22.fld0.0 = core::intrinsics::bswap(_4.4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7.1 = _5.1;
_19 = -_26;
_3 = _1;
_5 = (_7.0, _4.3.1);
Call(_24 = fn13(_4.0, _3, _1, _15, _15.1, _3, _1, _5), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_25.0 = _4.4 << _4.0;
_15.0 = _18;
RET = [88_u8,102_u8,60_u8,112_u8,3_u8,209_u8,10_u8];
_8 = !_4.3.1;
_4.2 = '\u{b3543}';
_22 = Adt53 { fld0: _25 };
_4.4 = !_22.fld0.0;
_27 = (_25.0,);
_15 = (_18, _4.0);
RET = [249_u8,103_u8,14_u8,231_u8,194_u8,135_u8,211_u8];
_15.0 = _18;
_12 = _13.1 as u64;
_33 = _15.1 ^ _13.1;
_16.0 = _4.4 as u64;
_34.0 = _4.2 as i16;
_27 = (_25.0,);
_22.fld0 = (_25.0,);
_29 = _26 + _19;
_2 = !_11;
Goto(bb6)
}
bb6 = {
_13.1 = _15.1 ^ _4.0;
_27 = (_22.fld0.0,);
_7.0 = core::ptr::addr_of!(_34.0);
Goto(bb7)
}
bb7 = {
_31 = _2 + _9;
_13.0 = _15.0;
_4.3 = (_5.0, _5.1);
_7 = (_5.0, _8);
_13.1 = _15.1;
RET = [140_u8,68_u8,33_u8,126_u8,90_u8,62_u8,12_u8];
_10 = (_12,);
_13.0 = _18;
_33 = !_15.1;
_2 = 65478_u16 as isize;
_5.0 = _7.0;
_35.fld0 = (_15.0, _13.1);
_12 = _10.0;
_13.0 = _35.fld0.0;
_13.1 = _35.fld0.1 & _33;
_34.0 = _22.fld0.0 << _3;
_31 = -_9;
_18 = _15.0;
_4.3.0 = _7.0;
_16 = _10;
_16.0 = _10.0;
_25.0 = -_22.fld0.0;
_28 = _27.0 & _27.0;
_36 = (_22.fld0.0,);
_5.0 = _7.0;
_7 = (_4.3.0, _4.3.1);
_4.3.0 = core::ptr::addr_of!(_36.0);
_11 = (-40_i8) as isize;
_8 = _31 <= _1;
Goto(bb8)
}
bb8 = {
_35.fld0 = (_13.0, _33);
_15.0 = _18;
_7.1 = !_8;
_8 = !_5.1;
_36.0 = _4.4 << _15.1;
_34.0 = _36.0 * _36.0;
_20 = _31;
_34.0 = -_22.fld0.0;
_33 = _13.1;
_7.0 = core::ptr::addr_of!(_22.fld0.0);
_5 = (_4.3.0, _8);
_31 = _20;
_8 = _15.1 < _15.1;
_20 = _15.1 as isize;
_4.2 = '\u{3f804}';
_16.0 = !_12;
Goto(bb9)
}
bb9 = {
_25.0 = _4.4 >> _35.fld0.1;
_22.fld0.0 = _25.0 & _27.0;
_4.3.0 = _7.0;
_27.0 = _34.0 + _4.4;
_14 = _4.1;
_28 = -_4.4;
_33 = _13.1 << _12;
_8 = !_7.1;
Goto(bb10)
}
bb10 = {
_32 = -_23;
_29 = _23;
_17 = _16.0;
_38 = [82_u8,136_u8,226_u8,195_u8,77_u8,215_u8,157_u8];
_15 = (_18, _35.fld0.1);
_15.1 = _9 as usize;
_23 = _19;
RET = _38;
_13.0 = _15.0;
_22 = Adt53 { fld0: _36 };
_22.fld0 = (_25.0,);
_15.0 = _35.fld0.0;
_39 = (_4.4,);
_15.0 = _35.fld0.0;
Goto(bb11)
}
bb11 = {
_4.0 = _13.1;
_33 = !_4.0;
_6 = (-871334528807560913_i64);
RET = [21_u8,88_u8,79_u8,133_u8,176_u8,118_u8,139_u8];
_45.fld0.0 = -_36.0;
_4.0 = _15.1;
_8 = _7.1 | _7.1;
_25.0 = -_28;
_26 = _19 - _19;
_11 = _31 & _1;
_43 = _4.2;
RET = [248_u8,214_u8,40_u8,70_u8,244_u8,127_u8,111_u8];
_33 = _35.fld0.1;
_17 = _4.2 as u64;
RET = [236_u8,48_u8,129_u8,83_u8,141_u8,85_u8,14_u8];
_35 = Adt39 { fld0: _15 };
match _6 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb10,
4 => bb7,
5 => bb12,
340282366920938463462503272902960650543 => bb14,
_ => bb13
}
}
bb12 = {
_13.1 = _15.1 ^ _4.0;
_27 = (_22.fld0.0,);
_7.0 = core::ptr::addr_of!(_34.0);
Goto(bb7)
}
bb13 = {
_6 = -(-5198967240759189128_i64);
_14 = _4.1;
_10 = _16;
_22.fld0.0 = _4.4 ^ _4.4;
_4.3.1 = !_7.1;
_16.0 = _17;
_13.0 = _15.0;
_4.3.1 = !_8;
RET = [56_u8,211_u8,14_u8,39_u8,248_u8,109_u8,67_u8];
_15 = (_13.0, _4.0);
_10.0 = _4.2 as u64;
_26 = _23 + _23;
_25 = _22.fld0;
_4.4 = _22.fld0.0;
_4.3.1 = _11 <= _9;
_17 = _23 as u64;
_5.1 = !_4.3.1;
Call(_22.fld0.0 = core::intrinsics::bswap(_4.4), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_1 = _3 + _11;
_40 = (-27_i8) as f64;
_31 = _11;
_34.0 = (-85_i8) as i16;
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(9_usize, 38_usize, Move(_38), 3_usize, Move(_3), 25_usize, Move(_25), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(9_usize, 2_usize, Move(_2), 16_usize, Move(_16), 36_usize, Move(_36), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(9_usize, 34_usize, Move(_34), 11_usize, Move(_11), 6_usize, Move(_6), 50_usize, _50), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: bool,mut _2: i32,mut _3: u64,mut _4: (*mut i8, usize),mut _5: usize,mut _6: isize,mut _7: i32,mut _8: bool,mut _9: (*mut i8, usize),mut _10: u64,mut _11: (*const i16, bool)) -> u64 {
mir! {
type RET = u64;
let _12: (i16,);
let _13: ();
let _14: ();
{
_9 = _4;
_7 = _2;
_3 = _10;
_9 = (_4.0, _4.1);
Goto(bb1)
}
bb1 = {
_9.1 = _4.1 * _5;
RET = _3;
_9 = _4;
Goto(bb2)
}
bb2 = {
Call(_13 = dump_var(10_usize, 2_usize, Move(_2), 1_usize, Move(_1), 5_usize, Move(_5), 7_usize, Move(_7)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: (u64,),mut _2: isize,mut _3: u64,mut _4: *mut i8,mut _5: usize,mut _6: (usize, i32, char, (*const i16, bool), i16),mut _7: bool,mut _8: isize,mut _9: bool,mut _10: isize,mut _11: (*mut i8, usize),mut _12: (*const i16, bool),mut _13: (*mut i8, usize),mut _14: usize,mut _15: (*const i16, bool)) -> (*mut i8, usize) {
mir! {
type RET = (*mut i8, usize);
let _16: [u8; 7];
let _17: u64;
let _18: isize;
let _19: isize;
let _20: [i128; 6];
let _21: ();
let _22: ();
{
_11.0 = _13.0;
RET.1 = _13.1 + _14;
_13.1 = RET.1;
_15.0 = _6.3.0;
_13.0 = _11.0;
_6.0 = !_5;
_3 = _6.1 as u64;
_5 = _14;
RET = (_13.0, _5);
_15.1 = _6.1 <= _6.1;
_11.1 = _5 ^ _13.1;
_6.3.1 = _12.1;
RET = (_11.0, _6.0);
RET = (_13.0, _6.0);
_13 = RET;
_11.1 = _14 + _13.1;
_6.2 = '\u{24809}';
_19 = _11.1 as isize;
_15.0 = core::ptr::addr_of!(_6.4);
_15.0 = core::ptr::addr_of!(_6.4);
_8 = _19 | _10;
_6.4 = (-84_i8) as i16;
Goto(bb1)
}
bb1 = {
Call(_21 = dump_var(11_usize, 8_usize, Move(_8), 9_usize, Move(_9), 10_usize, Move(_10), 19_usize, Move(_19)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_21 = dump_var(11_usize, 1_usize, Move(_1), 22_usize, _22, 22_usize, _22, 22_usize, _22), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: (usize, i32, char, (*const i16, bool), i16),mut _2: (*mut i8, usize),mut _3: (*const i16, bool)) -> f32 {
mir! {
type RET = f32;
let _4: (*const i16, bool);
let _5: u8;
let _6: u16;
let _7: f64;
let _8: isize;
let _9: *const u64;
let _10: i16;
let _11: char;
let _12: *const [i128; 6];
let _13: char;
let _14: Adt49;
let _15: f64;
let _16: u8;
let _17: usize;
let _18: i8;
let _19: u8;
let _20: u64;
let _21: (i16,);
let _22: bool;
let _23: i16;
let _24: f64;
let _25: isize;
let _26: ();
let _27: ();
{
_1.3.1 = !_3.1;
_4.1 = !_3.1;
_3.0 = core::ptr::addr_of!(_1.4);
_4.1 = !_1.3.1;
_1.3 = (_3.0, _4.1);
_5 = 43_u8;
_5 = !227_u8;
_4.1 = _1.3.1 == _3.1;
_1 = (_2.1, 1744640928_i32, '\u{4b31e}', _3, 28281_i16);
_4.0 = core::ptr::addr_of!(_1.4);
RET = _1.0 as f32;
_1.4 = -24406_i16;
RET = 22046_u16 as f32;
_5 = !77_u8;
_1.4 = (-23432_i16) - 585_i16;
_1.3 = _4;
_1.4 = !(-23021_i16);
RET = 228028391_u32 as f32;
_1.3.0 = core::ptr::addr_of!(_1.4);
_1.3.1 = _1.1 != _1.1;
_5 = 202_u8 - 119_u8;
_1.0 = !_2.1;
RET = 9223372036854775807_isize as f32;
_1.0 = _2.1;
Call(RET = core::intrinsics::transmute(_1.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = (-6336143707863629166_i64) as f32;
Goto(bb2)
}
bb2 = {
_3 = _1.3;
_1.2 = '\u{6c593}';
RET = 2371216062_u32 as f32;
_5 = (-7027432359070651063_i64) as u8;
_1.1 = (-863115984_i32) >> _1.0;
_1.3.0 = _4.0;
_4.1 = _1.3.1;
_1.0 = _2.1 + _2.1;
_3.1 = _1.1 == _1.1;
_1.3 = (_3.0, _4.1);
_5 = 73_u8;
_1.4 = 10309_i16;
_1 = (_2.1, (-913113629_i32), '\u{9f2cb}', _3, (-24376_i16));
_1.0 = 25_isize as usize;
Goto(bb3)
}
bb3 = {
_1 = (_2.1, (-180537039_i32), '\u{8989f}', _3, 10931_i16);
Goto(bb4)
}
bb4 = {
_4.0 = _1.3.0;
_7 = (-5680010710229836550_i64) as f64;
_2.1 = _1.0 & _1.0;
_1 = (_2.1, 885994361_i32, '\u{4ff6c}', _3, (-23455_i16));
_4.1 = !_1.3.1;
_1.2 = '\u{688b6}';
_4 = (_1.3.0, _1.3.1);
_6 = 6508_u16 ^ 61788_u16;
_4.1 = _1.1 != _1.1;
_4.1 = _3.1 < _3.1;
_4.1 = _3.1 | _1.3.1;
_2.1 = _1.0 << _1.0;
Goto(bb5)
}
bb5 = {
_1.0 = !_2.1;
_1.1 = -(-62535869_i32);
_1.3 = _4;
_4.1 = _1.4 == _1.4;
_1.3.0 = core::ptr::addr_of!(_1.4);
_1.4 = _1.2 as i16;
_1.2 = '\u{9b22f}';
_4.0 = core::ptr::addr_of!(_1.4);
_4 = (_1.3.0, _1.3.1);
_3.1 = _1.3.1 ^ _1.3.1;
_1.3 = _4;
_3 = _1.3;
_1.3.1 = _3.1 == _3.1;
match _5 {
0 => bb2,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
73 => bb11,
_ => bb10
}
}
bb6 = {
_4.0 = _1.3.0;
_7 = (-5680010710229836550_i64) as f64;
_2.1 = _1.0 & _1.0;
_1 = (_2.1, 885994361_i32, '\u{4ff6c}', _3, (-23455_i16));
_4.1 = !_1.3.1;
_1.2 = '\u{688b6}';
_4 = (_1.3.0, _1.3.1);
_6 = 6508_u16 ^ 61788_u16;
_4.1 = _1.1 != _1.1;
_4.1 = _3.1 < _3.1;
_4.1 = _3.1 | _1.3.1;
_2.1 = _1.0 << _1.0;
Goto(bb5)
}
bb7 = {
_1 = (_2.1, (-180537039_i32), '\u{8989f}', _3, 10931_i16);
Goto(bb4)
}
bb8 = {
_3 = _1.3;
_1.2 = '\u{6c593}';
RET = 2371216062_u32 as f32;
_5 = (-7027432359070651063_i64) as u8;
_1.1 = (-863115984_i32) >> _1.0;
_1.3.0 = _4.0;
_4.1 = _1.3.1;
_1.0 = _2.1 + _2.1;
_3.1 = _1.1 == _1.1;
_1.3 = (_3.0, _4.1);
_5 = 73_u8;
_1.4 = 10309_i16;
_1 = (_2.1, (-913113629_i32), '\u{9f2cb}', _3, (-24376_i16));
_1.0 = 25_isize as usize;
Goto(bb3)
}
bb9 = {
RET = (-6336143707863629166_i64) as f32;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_3 = (_4.0, _1.3.1);
RET = 48_i8 as f32;
_8 = 38_isize;
RET = 4224101651500066183_u64 as f32;
_4 = (_1.3.0, _1.3.1);
_5 = 189_u8;
_1.4 = _7 as i16;
_1.3.0 = _4.0;
_6 = 25952_u16 * 7783_u16;
_3 = (_4.0, _1.3.1);
_1 = (_2.1, (-1837105276_i32), '\u{d8aa4}', _3, (-13318_i16));
_3 = (_1.3.0, _1.3.1);
_11 = _1.2;
_6 = !22392_u16;
_3.0 = _4.0;
_15 = 31_i8 as f64;
_7 = (-3482705787077057944_i64) as f64;
_1.3.1 = _4.1;
_15 = _7 * _7;
_5 = !93_u8;
_15 = _7;
RET = (-155844288916836689427156754084477582489_i128) as f32;
_11 = _1.2;
_1.3.0 = _4.0;
_3.1 = !_1.3.1;
Goto(bb12)
}
bb12 = {
_6 = 29319_u16 + 37522_u16;
_8 = 122_isize & 46_isize;
_16 = _1.2 as u8;
_3 = _4;
Goto(bb13)
}
bb13 = {
_4.0 = _3.0;
RET = 8332048836864553390_u64 as f32;
_17 = !_2.1;
_1 = (_17, 1947311862_i32, _11, _4, 18635_i16);
_10 = !_1.4;
_4 = (_3.0, _1.3.1);
_18 = (-598400479910448670_i64) as i8;
_2.1 = _1.0 + _1.0;
match _1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb12,
5 => bb6,
1947311862 => bb14,
_ => bb11
}
}
bb14 = {
_15 = _7;
_4 = (_3.0, _1.3.1);
_22 = _1.3.1 & _4.1;
_16 = _18 as u8;
_16 = !_5;
_3 = (_1.3.0, _4.1);
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(12_usize, 8_usize, Move(_8), 6_usize, Move(_6), 18_usize, Move(_18), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: usize,mut _2: isize,mut _3: isize,mut _4: (*mut i8, usize),mut _5: usize,mut _6: isize,mut _7: isize,mut _8: (*const i16, bool)) -> *mut *mut u16 {
mir! {
type RET = *mut *mut u16;
let _9: usize;
let _10: (i16,);
let _11: Adt53;
let _12: f32;
let _13: bool;
let _14: isize;
let _15: (u64,);
let _16: [u8; 7];
let _17: *mut u16;
let _18: Adt53;
let _19: f32;
let _20: isize;
let _21: (u64,);
let _22: isize;
let _23: i16;
let _24: u64;
let _25: (u64,);
let _26: u32;
let _27: Adt53;
let _28: [i128; 6];
let _29: u128;
let _30: isize;
let _31: [u8; 7];
let _32: [i128; 6];
let _33: u128;
let _34: [u8; 7];
let _35: (u64,);
let _36: *mut (&'static (i16,), u8, *const f32);
let _37: Adt46;
let _38: char;
let _39: *const u64;
let _40: Adt37;
let _41: Adt53;
let _42: (u64,);
let _43: isize;
let _44: *mut *mut u16;
let _45: ();
let _46: ();
{
_8.1 = !true;
_4.1 = _1;
_2 = 7850463341060330490_i64 as isize;
_4.1 = _1;
_4.1 = _1 >> _1;
_3 = 39_u8 as isize;
_9 = !_4.1;
_6 = 70_u8 as isize;
_4.1 = !_1;
_9 = _5 ^ _4.1;
_1 = !_9;
_4.1 = _1;
_10.0 = 23615_i16 ^ (-29541_i16);
_12 = (-2594408032407792742_i64) as f32;
_1 = !_9;
_12 = 214_u8 as f32;
_12 = 8941226820950396815_u64 as f32;
Goto(bb1)
}
bb1 = {
_9 = _4.1;
Goto(bb2)
}
bb2 = {
_11 = Adt53 { fld0: _10 };
_2 = !_7;
_2 = _7 - _7;
_6 = _7;
_8.1 = _5 > _4.1;
_11.fld0.0 = _10.0;
_1 = _5;
_5 = _1 - _1;
_5 = _4.1;
_10 = _11.fld0;
_6 = _2 ^ _7;
_5 = _4.1 * _1;
_3 = _6 * _2;
_13 = _8.1;
_8.0 = core::ptr::addr_of!(_11.fld0.0);
_5 = _9;
_14 = _3;
_12 = (-170134079_i32) as f32;
_6 = _2 + _7;
_13 = _4.1 < _9;
_2 = _6 >> _6;
_6 = -_7;
_1 = !_9;
Goto(bb3)
}
bb3 = {
_15 = (9326206945044318384_u64,);
_13 = _8.1 == _8.1;
_5 = '\u{c27d3}' as usize;
_11.fld0.0 = _10.0 >> _2;
_13 = _8.1;
RET = core::ptr::addr_of_mut!(_17);
_1 = !_9;
_6 = (-76_i8) as isize;
_9 = _1 | _1;
_1 = (-31382265477048966946572041656322168821_i128) as usize;
_8.1 = _13;
_11 = Adt53 { fld0: _10 };
_16 = [187_u8,141_u8,242_u8,67_u8,2_u8,82_u8,129_u8];
_6 = _3 | _2;
_14 = !_7;
_12 = 5898_u16 as f32;
_5 = _9 >> _9;
_14 = _7 | _3;
_16 = [219_u8,208_u8,104_u8,73_u8,83_u8,220_u8,122_u8];
Call(_4.1 = fn14(_13, _2, _8, _9, _2, _2, _3, _13, _8, _5, _6), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = _7 ^ _14;
RET = core::ptr::addr_of_mut!((*RET));
_3 = '\u{eaa4a}' as isize;
_15.0 = 17770063068923106195_u64;
_11 = Adt53 { fld0: _10 };
_8.1 = _13 & _13;
_9 = !_5;
_11.fld0 = _10;
_10 = (_11.fld0.0,);
_15.0 = 458543858_u32 as u64;
_15 = (7018104113904251297_u64,);
_18 = Adt53 { fld0: _11.fld0 };
_18 = _11;
_19 = _4.1 as f32;
RET = core::ptr::addr_of_mut!((*RET));
_6 = _2;
_16 = [185_u8,49_u8,71_u8,156_u8,177_u8,178_u8,236_u8];
_11 = Adt53 { fld0: _18.fld0 };
_3 = _11.fld0.0 as isize;
_18.fld0.0 = _11.fld0.0;
_1 = _4.1;
_12 = 5489386812808961168_i64 as f32;
_15.0 = !5131818079471444639_u64;
_4.1 = !_5;
_21 = (_15.0,);
_10.0 = !_18.fld0.0;
_8.1 = _13 ^ _13;
Goto(bb5)
}
bb5 = {
_11 = Adt53 { fld0: _18.fld0 };
_19 = _12 * _12;
_11.fld0.0 = _18.fld0.0;
_18.fld0 = _10;
_5 = 539593981047227953_i64 as usize;
_14 = _2 | _7;
RET = core::ptr::addr_of_mut!((*RET));
_22 = _7 + _14;
RET = core::ptr::addr_of_mut!((*RET));
_21.0 = _15.0 * _15.0;
_4.1 = _1 + _1;
_11 = _18;
_11.fld0.0 = _18.fld0.0 & _10.0;
_7 = _6 * _6;
_20 = _7;
_19 = -_12;
_23 = (-112207776689317019043443666184355018566_i128) as i16;
_11.fld0 = (_18.fld0.0,);
_18 = Adt53 { fld0: _11.fld0 };
_11.fld0.0 = _10.0;
_10 = _11.fld0;
Call(_11.fld0.0 = core::intrinsics::bswap(_18.fld0.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_25 = (_21.0,);
_24 = !_25.0;
Goto(bb7)
}
bb7 = {
_21 = (_15.0,);
_11.fld0.0 = 103_i8 as i16;
_10.0 = _11.fld0.0 ^ _18.fld0.0;
_13 = _8.1;
_26 = 1235587614_u32;
_18.fld0 = (_10.0,);
_15.0 = !_24;
_8.0 = core::ptr::addr_of!(_18.fld0.0);
_1 = _4.1 ^ _9;
_15 = (_25.0,);
_16 = [18_u8,228_u8,169_u8,198_u8,208_u8,73_u8,102_u8];
Goto(bb8)
}
bb8 = {
RET = core::ptr::addr_of_mut!(_17);
_22 = _20 << _18.fld0.0;
_13 = !_8.1;
_24 = _15.0;
_22 = -_2;
_28 = [111108981960576186629523262201995991797_i128,(-150328897389856094676925030910020531230_i128),113853275914438730157732832646640136065_i128,(-55387425855611686581602518162198612391_i128),137749790144355254216186065026407292919_i128,(-55175779672928246845554024721929585580_i128)];
_11.fld0.0 = _18.fld0.0;
_27.fld0 = (_18.fld0.0,);
_23 = _27.fld0.0;
_27.fld0.0 = _10.0 | _10.0;
_34 = [101_u8,168_u8,34_u8,156_u8,146_u8,55_u8,113_u8];
match _26 {
0 => bb4,
1 => bb2,
2 => bb3,
1235587614 => bb10,
_ => bb9
}
}
bb9 = {
_25 = (_21.0,);
_24 = !_25.0;
Goto(bb7)
}
bb10 = {
_33 = !131481319445038746403136551616869212354_u128;
_21.0 = !_15.0;
_35.0 = _15.0 - _24;
_25 = (_35.0,);
_35 = _15;
_32 = [134931031916224133518988205309505801488_i128,135845055913870645783956997349018218614_i128,(-79139299010348399595201618574508183374_i128),30982356879884804907661319461614432680_i128,31338874739881428029905154152202088633_i128,164394904149412938981557408324131744781_i128];
_31 = _16;
_37.fld3.fld3.1 = _4.1 | _4.1;
_31 = [158_u8,251_u8,95_u8,15_u8,254_u8,206_u8,156_u8];
_37.fld5 = core::ptr::addr_of_mut!(_37.fld3.fld5);
_37.fld3.fld3 = (_4.0, _9);
_37.fld7 = _1 as u32;
_22 = _14;
_38 = '\u{f1113}';
_37.fld4.fld6 = core::ptr::addr_of_mut!((*RET));
match _26 {
0 => bb8,
1 => bb7,
2 => bb5,
3 => bb11,
1235587614 => bb13,
_ => bb12
}
}
bb11 = {
_11 = Adt53 { fld0: _10 };
_2 = !_7;
_2 = _7 - _7;
_6 = _7;
_8.1 = _5 > _4.1;
_11.fld0.0 = _10.0;
_1 = _5;
_5 = _1 - _1;
_5 = _4.1;
_10 = _11.fld0;
_6 = _2 ^ _7;
_5 = _4.1 * _1;
_3 = _6 * _2;
_13 = _8.1;
_8.0 = core::ptr::addr_of!(_11.fld0.0);
_5 = _9;
_14 = _3;
_12 = (-170134079_i32) as f32;
_6 = _2 + _7;
_13 = _4.1 < _9;
_2 = _6 >> _6;
_6 = -_7;
_1 = !_9;
Goto(bb3)
}
bb12 = {
RET = core::ptr::addr_of_mut!(_17);
_22 = _20 << _18.fld0.0;
_13 = !_8.1;
_24 = _15.0;
_22 = -_2;
_28 = [111108981960576186629523262201995991797_i128,(-150328897389856094676925030910020531230_i128),113853275914438730157732832646640136065_i128,(-55387425855611686581602518162198612391_i128),137749790144355254216186065026407292919_i128,(-55175779672928246845554024721929585580_i128)];
_11.fld0.0 = _18.fld0.0;
_27.fld0 = (_18.fld0.0,);
_23 = _27.fld0.0;
_27.fld0.0 = _10.0 | _10.0;
_34 = [101_u8,168_u8,34_u8,156_u8,146_u8,55_u8,113_u8];
match _26 {
0 => bb4,
1 => bb2,
2 => bb3,
1235587614 => bb10,
_ => bb9
}
}
bb13 = {
_37.fld4.fld1 = core::ptr::addr_of!(_39);
_19 = _37.fld3.fld3.1 as f32;
_27 = Adt53 { fld0: _11.fld0 };
_37.fld3.fld0.0 = core::ptr::addr_of_mut!(_37.fld3.fld5);
_40.fld5 = 132_u8 as i32;
_1 = _9 << _22;
_37.fld3.fld0.1 = core::ptr::addr_of!(_37.fld3.fld5);
_11.fld0 = (_18.fld0.0,);
_1 = _37.fld3.fld3.1;
_40.fld3 = (-91_i8);
Goto(bb14)
}
bb14 = {
_2 = _22;
_26 = _37.fld7;
_6 = _14 * _20;
_40.fld6 = core::ptr::addr_of_mut!(_37.fld5);
_8.0 = core::ptr::addr_of!(_27.fld0.0);
_30 = _22 ^ _2;
_22 = _37.fld7 as isize;
_11 = Adt53 { fld0: _10 };
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(13_usize, 26_usize, Move(_26), 33_usize, Move(_33), 32_usize, Move(_32), 35_usize, Move(_35)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(13_usize, 9_usize, Move(_9), 2_usize, Move(_2), 16_usize, Move(_16), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(13_usize, 14_usize, Move(_14), 20_usize, Move(_20), 30_usize, Move(_30), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(13_usize, 15_usize, Move(_15), 46_usize, _46, 46_usize, _46, 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: bool,mut _2: isize,mut _3: (*const i16, bool),mut _4: usize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: bool,mut _9: (*const i16, bool),mut _10: usize,mut _11: isize) -> usize {
mir! {
type RET = usize;
let _12: [u8; 7];
let _13: &'static (i16,);
let _14: isize;
let _15: (i16,);
let _16: [i128; 6];
let _17: u64;
let _18: ();
let _19: ();
{
RET = (-7767851960553715427_i64) as usize;
_3 = (_9.0, _9.1);
_3 = (_9.0, _9.1);
_3.1 = !_9.1;
Goto(bb1)
}
bb1 = {
_7 = 216_u8 as isize;
RET = _4 ^ _4;
_7 = _11 >> RET;
_5 = '\u{38478}' as isize;
_4 = _10 ^ RET;
_10 = _11 as usize;
_4 = RET;
_3.1 = _8 | _1;
_6 = _11 & _11;
_9 = _3;
_3 = (_9.0, _1);
_9.1 = _6 < _6;
RET = 45_u8 as usize;
_4 = !_10;
_5 = _7 & _11;
_1 = _3.1;
_3 = (_9.0, _8);
Call(_10 = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = _6;
_6 = 10394_i16 as isize;
_3.0 = _9.0;
_2 = _11;
_1 = _9.1 <= _8;
_9.1 = _3.1 <= _8;
_5 = 2553556030_u32 as isize;
_9 = (_3.0, _3.1);
_1 = !_9.1;
_9.1 = !_8;
_10 = 7635235149234571811_i64 as usize;
_15 = ((-7820_i16),);
_8 = _7 <= _2;
_8 = !_3.1;
_3 = _9;
_3.0 = core::ptr::addr_of!(_15.0);
_14 = _11;
match _15.0 {
0 => bb1,
340282366920938463463374607431768203636 => bb4,
_ => bb3
}
}
bb3 = {
_7 = 216_u8 as isize;
RET = _4 ^ _4;
_7 = _11 >> RET;
_5 = '\u{38478}' as isize;
_4 = _10 ^ RET;
_10 = _11 as usize;
_4 = RET;
_3.1 = _8 | _1;
_6 = _11 & _11;
_9 = _3;
_3 = (_9.0, _1);
_9.1 = _6 < _6;
RET = 45_u8 as usize;
_4 = !_10;
_5 = _7 & _11;
_1 = _3.1;
_3 = (_9.0, _8);
Call(_10 = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_10 = _4;
_8 = !_9.1;
_3.1 = _8 ^ _9.1;
_5 = !_7;
_11 = _7 >> _14;
RET = _10;
_1 = _9.1;
_2 = _5 & _7;
_15.0 = 13818_i16 << RET;
Goto(bb5)
}
bb5 = {
Call(_18 = dump_var(14_usize, 10_usize, Move(_10), 7_usize, Move(_7), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_18 = dump_var(14_usize, 14_usize, Move(_14), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: *mut *mut u16,mut _2: u128,mut _3: (usize, i32, char, (*const i16, bool), i16),mut _4: (*const i16, bool),mut _5: isize,mut _6: bool,mut _7: u128,mut _8: (usize, i32, char, (*const i16, bool), i16),mut _9: bool,mut _10: isize,mut _11: i32,mut _12: (*const i16, bool),mut _13: *const i16,mut _14: isize,mut _15: isize,mut _16: u128) -> Adt38 {
mir! {
type RET = Adt38;
let _17: [i128; 6];
let _18: f64;
let _19: char;
let _20: *mut (&'static (i16,), u8, *const f32);
let _21: f64;
let _22: u8;
let _23: Adt53;
let _24: Adt37;
let _25: Adt53;
let _26: f64;
let _27: i128;
let _28: usize;
let _29: i8;
let _30: (u64,);
let _31: u8;
let _32: i64;
let _33: u64;
let _34: u16;
let _35: *const i16;
let _36: isize;
let _37: i16;
let _38: (u64,);
let _39: Adt53;
let _40: Adt42;
let _41: (*const i16, bool);
let _42: Adt53;
let _43: isize;
let _44: f64;
let _45: i8;
let _46: Adt53;
let _47: usize;
let _48: u16;
let _49: *mut *mut u16;
let _50: f64;
let _51: i64;
let _52: Adt52;
let _53: Adt53;
let _54: isize;
let _55: Adt53;
let _56: bool;
let _57: (usize, i32, char, (*const i16, bool), i16);
let _58: [u8; 7];
let _59: i8;
let _60: [u8; 7];
let _61: i32;
let _62: (i16,);
let _63: Adt53;
let _64: isize;
let _65: Adt46;
let _66: Adt41;
let _67: Adt44;
let _68: [i128; 6];
let _69: (u64,);
let _70: f32;
let _71: bool;
let _72: [u8; 7];
let _73: Adt43;
let _74: f32;
let _75: i32;
let _76: u16;
let _77: isize;
let _78: f64;
let _79: [u8; 7];
let _80: (&'static (i16,), u8, *const f32);
let _81: Adt49;
let _82: (u64,);
let _83: *const i16;
let _84: Adt53;
let _85: isize;
let _86: f64;
let _87: i128;
let _88: f64;
let _89: bool;
let _90: Adt48;
let _91: (i16,);
let _92: [i128; 6];
let _93: isize;
let _94: &'static (i16,);
let _95: &'static (i16,);
let _96: f32;
let _97: u64;
let _98: i8;
let _99: Adt53;
let _100: (i16,);
let _101: isize;
let _102: isize;
let _103: i64;
let _104: Adt45;
let _105: ();
let _106: ();
{
RET.fld0.0 = core::ptr::addr_of_mut!(RET.fld5);
RET.fld7 = core::ptr::addr_of_mut!(RET.fld5);
_8.0 = !_3.0;
RET.fld3.1 = _3.0;
RET.fld6 = (-4751041200186439656_i64);
_3.3.0 = core::ptr::addr_of!(_8.4);
_2 = !_7;
_5 = RET.fld3.1 as isize;
_10 = _5;
_19 = _3.2;
_4.1 = _6;
_4 = (_8.3.0, _8.3.1);
RET.fld2 = core::ptr::addr_of!(_3.4);
_17 = [(-62765314780221379261952607123031889675_i128),(-138278307299892814811744419274565308839_i128),(-83785809398631393988892963467252541547_i128),159988283746462591953502732074556412471_i128,109216614032336283677043374991830687604_i128,152208778321106712657087052791049704800_i128];
_8.0 = RET.fld6 as usize;
RET.fld1 = !_3.0;
RET.fld3.1 = _3.0 & RET.fld1;
_1 = core::ptr::addr_of_mut!(RET.fld0.0);
Goto(bb1)
}
bb1 = {
RET.fld7 = core::ptr::addr_of_mut!(RET.fld5);
_3.3.1 = !_6;
_25.fld0 = (_3.4,);
_3.3.1 = _6;
RET.fld6 = 105_u8 as i64;
RET.fld5 = 14181_u16 << _8.1;
_21 = 7080645510698772951_u64 as f64;
RET.fld6 = (-7521036393257357095_i64) << _10;
_9 = _3.3.1 ^ _4.1;
_24.fld0 = _6 ^ _8.3.1;
RET.fld0.0 = RET.fld7;
_3.4 = _8.4 + _8.4;
_19 = _3.2;
RET.fld3.0 = core::ptr::addr_of_mut!(_24.fld3);
_25.fld0.0 = _3.4;
_23.fld0 = (_3.4,);
Goto(bb2)
}
bb2 = {
_24.fld0 = !_12.1;
_8 = (RET.fld1, _11, _19, _3.3, _25.fld0.0);
_24.fld6 = _1;
_4.1 = _3.3.1 & _24.fld0;
_22 = !211_u8;
_10 = !_14;
_18 = _21;
RET.fld3.0 = core::ptr::addr_of_mut!(_24.fld3);
_7 = !_2;
_24.fld0 = !_6;
_27 = 39206335652568056568911036400195265319_i128;
_8.1 = _3.1;
_8.0 = RET.fld1 - RET.fld3.1;
_24.fld4 = core::ptr::addr_of_mut!(_24.fld3);
RET.fld0.1 = core::ptr::addr_of!(RET.fld5);
_8 = _3;
_25.fld0.0 = -_3.4;
_25.fld0 = _23.fld0;
_13 = core::ptr::addr_of!(_25.fld0.0);
match _27 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
39206335652568056568911036400195265319 => bb9,
_ => bb8
}
}
bb3 = {
RET.fld7 = core::ptr::addr_of_mut!(RET.fld5);
_3.3.1 = !_6;
_25.fld0 = (_3.4,);
_3.3.1 = _6;
RET.fld6 = 105_u8 as i64;
RET.fld5 = 14181_u16 << _8.1;
_21 = 7080645510698772951_u64 as f64;
RET.fld6 = (-7521036393257357095_i64) << _10;
_9 = _3.3.1 ^ _4.1;
_24.fld0 = _6 ^ _8.3.1;
RET.fld0.0 = RET.fld7;
_3.4 = _8.4 + _8.4;
_19 = _3.2;
RET.fld3.0 = core::ptr::addr_of_mut!(_24.fld3);
_25.fld0.0 = _3.4;
_23.fld0 = (_3.4,);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_25.fld0.0 = _3.4;
_25.fld0 = (_8.4,);
Goto(bb10)
}
bb10 = {
RET.fld1 = RET.fld3.1;
_3.3.1 = _15 >= _5;
_27 = (-44376129161450669484483957650681898505_i128) << _5;
_4.0 = core::ptr::addr_of!(_25.fld0.0);
_8.3 = (_13, _6);
_10 = 7200598383139945124_u64 as isize;
RET.fld3.0 = core::ptr::addr_of_mut!(_29);
Goto(bb11)
}
bb11 = {
_22 = !145_u8;
_8.3 = (RET.fld2, _6);
RET.fld6 = 3600729037930059296_i64 | 3742503169672533127_i64;
_8.0 = RET.fld1 * RET.fld1;
_3.4 = (*_13);
RET.fld0.0 = RET.fld7;
RET.fld2 = core::ptr::addr_of!(_23.fld0.0);
RET.fld6 = -(-5440400602886070020_i64);
_23.fld0 = (_8.4,);
_13 = _4.0;
_16 = _7;
_14 = _5;
_8.2 = _19;
_26 = _8.1 as f64;
_24.fld2 = _15 + _15;
RET.fld0.0 = RET.fld7;
RET.fld7 = core::ptr::addr_of_mut!(RET.fld5);
_29 = (-78_i8) | (-58_i8);
_16 = _7 * _7;
_3.3.0 = core::ptr::addr_of!(_8.4);
RET.fld7 = core::ptr::addr_of_mut!(RET.fld5);
RET.fld1 = _14 as usize;
_22 = _24.fld2 as u8;
_7 = _25.fld0.0 as u128;
_23 = Adt53 { fld0: _25.fld0 };
RET.fld6 = 8446102678184804999_i64 + 3066709477237125423_i64;
_8 = (RET.fld1, _3.1, _19, _3.3, _25.fld0.0);
_3.2 = _8.2;
Call(RET.fld5 = core::intrinsics::transmute(_23.fld0.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4.0 = _8.3.0;
_15 = _5 - _14;
_3.3 = (_13, _24.fld0);
_4 = (_8.3.0, _3.3.1);
_8.0 = !RET.fld1;
_27 = (-112132332338463843510497184768756828475_i128) & 74073790685579283922920637543013018545_i128;
_33 = _8.1 as u64;
_25.fld0 = _23.fld0;
RET.fld0.1 = core::ptr::addr_of!(RET.fld5);
_30.0 = !_33;
_31 = !_22;
_12 = (_4.0, _9);
_12.1 = _3.3.1;
_24.fld3 = _29;
_6 = !_4.1;
_3.0 = _8.4 as usize;
_8.4 = !_23.fld0.0;
_37 = RET.fld3.1 as i16;
_8.1 = !_11;
RET.fld3.1 = _5 as usize;
_8.2 = _19;
RET.fld3.0 = _24.fld4;
_24.fld4 = RET.fld3.0;
_23 = Adt53 { fld0: _25.fld0 };
_35 = core::ptr::addr_of!(_39.fld0.0);
Goto(bb13)
}
bb13 = {
RET.fld3.1 = _27 as usize;
_24.fld5 = _8.1;
_39.fld0 = (_37,);
_5 = _15 - _14;
_38.0 = 2561956205_u32 as u64;
_3.0 = _8.0;
_19 = _3.2;
Goto(bb14)
}
bb14 = {
_30.0 = _2 as u64;
_16 = RET.fld6 as u128;
RET.fld7 = core::ptr::addr_of_mut!(RET.fld5);
_17 = [_27,_27,_27,_27,_27,_27];
_6 = _4.1;
RET.fld5 = !2965_u16;
RET.fld2 = _4.0;
_21 = _26;
_41.1 = _15 != _24.fld2;
RET.fld1 = _3.0;
RET.fld0.0 = core::ptr::addr_of_mut!(_34);
_23.fld0.0 = (*_35);
_10 = -_5;
_23.fld0.0 = _37 & _37;
_29 = _26 as i8;
_28 = RET.fld1 | RET.fld1;
_2 = _7;
Goto(bb15)
}
bb15 = {
_25.fld0 = ((*_35),);
_8.3.0 = core::ptr::addr_of!(_37);
_41 = _3.3;
_14 = -_15;
_1 = _24.fld6;
_8.3 = (_12.0, _3.3.1);
_41.0 = core::ptr::addr_of!(_39.fld0.0);
_10 = -_5;
RET.fld0.0 = RET.fld7;
RET.fld1 = _5 as usize;
Goto(bb16)
}
bb16 = {
_16 = _7 ^ _2;
_3 = _8;
Goto(bb17)
}
bb17 = {
_3.2 = _8.2;
_42 = Adt53 { fld0: _23.fld0 };
_8.3.1 = _12.1 | _6;
_31 = _22;
RET.fld3 = (_24.fld4, _8.0);
_24.fld6 = _1;
_12.1 = _41.1;
RET.fld1 = !RET.fld3.1;
_41.0 = core::ptr::addr_of!(_46.fld0.0);
_33 = _30.0;
_39 = Adt53 { fld0: _25.fld0 };
RET.fld0.0 = core::ptr::addr_of_mut!(_48);
_7 = RET.fld6 as u128;
_49 = core::ptr::addr_of_mut!(RET.fld0.0);
_4 = (_12.0, _6);
_41.1 = !_12.1;
_3.0 = _3.1 as usize;
_32 = -RET.fld6;
RET.fld3.0 = core::ptr::addr_of_mut!(_45);
RET.fld7 = core::ptr::addr_of_mut!(_48);
Goto(bb18)
}
bb18 = {
_3.4 = _25.fld0.0 & _37;
_7 = _16;
_24.fld4 = core::ptr::addr_of_mut!(_29);
_53.fld0.0 = -(*_35);
_3 = (RET.fld1, _8.1, _8.2, _12, (*_35));
_37 = _42.fld0.0;
_54 = _14 - _10;
_16 = _7 - _2;
_23 = _42;
_12.0 = core::ptr::addr_of!(_37);
_4.0 = _35;
_39.fld0.0 = _37;
_46 = Adt53 { fld0: _39.fld0 };
_14 = _54;
_39.fld0 = (_23.fld0.0,);
_25.fld0.0 = _3.4 << (*_35);
_55.fld0 = (_25.fld0.0,);
Goto(bb19)
}
bb19 = {
_6 = _3.3.1;
_34 = !RET.fld5;
_41 = _3.3;
_44 = _26 - _26;
_24.fld0 = _8.3.1 > _41.1;
_42 = Adt53 { fld0: _53.fld0 };
_8.3 = _41;
_48 = RET.fld1 as u16;
_41.0 = core::ptr::addr_of!(_42.fld0.0);
_29 = !_24.fld3;
_8.3.0 = core::ptr::addr_of!((*_35));
_49 = core::ptr::addr_of_mut!(RET.fld7);
_24.fld6 = core::ptr::addr_of_mut!((*_49));
_2 = _16;
_57.0 = _24.fld3 as usize;
Call(_57.0 = fn16(RET.fld2, _39.fld0.0, _8, _3.3.1, _54, _48, _24.fld5, _42.fld0.0, _1, _11, _12.0, _9, _15, _54, _54, _8.3.1), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
RET.fld3.1 = !_3.0;
_24.fld6 = _1;
_54 = -_10;
_4 = (_8.3.0, _12.1);
_57.3 = (_35, _4.1);
_52 = Adt52::Variant2 { fld0: _16 };
RET.fld7 = RET.fld0.0;
RET.fld3.0 = _24.fld4;
_43 = _30.0 as isize;
SetDiscriminant(_52, 2);
_14 = _43;
_3.1 = -_8.1;
_39.fld0.0 = _25.fld0.0 * _37;
_33 = _30.0;
_24.fld4 = RET.fld3.0;
_23.fld0.0 = _46.fld0.0;
RET.fld0.1 = core::ptr::addr_of!(_34);
RET.fld3 = (_24.fld4, _8.0);
_25.fld0 = _23.fld0;
_45 = _29;
_62 = ((*_35),);
_33 = !_30.0;
_24.fld3 = _4.1 as i8;
_8.3.0 = core::ptr::addr_of!(_8.4);
Call(_15 = core::intrinsics::bswap(_10), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_41.1 = !_4.1;
_61 = _8.1 + _11;
_65.fld3.fld1 = _3.2 as usize;
_65.fld3.fld7 = core::ptr::addr_of_mut!(_48);
_12 = (_3.3.0, _41.1);
_61 = _8.1 + _8.1;
RET.fld0.1 = core::ptr::addr_of!(_48);
_1 = core::ptr::addr_of_mut!((*_49));
_65.fld4.fld0 = !_3.3.1;
_50 = _44;
_65.fld4.fld2 = _43;
RET.fld1 = _15 as usize;
_55 = Adt53 { fld0: _39.fld0 };
_53.fld0 = _46.fld0;
_46.fld0 = _53.fld0;
_39.fld0 = _55.fld0;
_19 = _8.2;
_41 = (_12.0, _4.1);
_51 = -RET.fld6;
_67.fld5.fld4 = RET.fld3.0;
_23.fld0.0 = _30.0 as i16;
_65.fld4.fld3 = _24.fld3 << _54;
_41.1 = _4.1;
_65.fld4.fld5 = _31 as i32;
Call(_50 = core::intrinsics::transmute(_30.0), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
_3.3.0 = _4.0;
_7 = _16;
Goto(bb23)
}
bb23 = {
_57.3.1 = !_8.3.1;
_69.0 = _30.0;
_8.4 = _62.0 | _55.fld0.0;
_42.fld0.0 = (*_35);
RET.fld3 = (_24.fld4, _3.0);
_65.fld4.fld4 = _67.fld5.fld4;
_65.fld3.fld2 = core::ptr::addr_of!(_46.fld0.0);
_3.1 = _32 as i32;
_67.fld4 = !_16;
_58 = [_31,_31,_31,_31,_22,_22,_22];
_69.0 = _33 ^ _30.0;
_57.3.1 = _15 == _14;
_63.fld0 = (_37,);
_53.fld0.0 = -_46.fld0.0;
_70 = _65.fld4.fld3 as f32;
RET.fld3.1 = _57.0;
_12 = (_8.3.0, _65.fld4.fld0);
_69 = _30;
_17 = [_27,_27,_27,_27,_27,_27];
RET.fld2 = _65.fld3.fld2;
_8.3 = (_65.fld3.fld2, _12.1);
Goto(bb24)
}
bb24 = {
_25.fld0.0 = _39.fld0.0;
_67.fld4 = _16 * _16;
RET.fld3 = (_67.fld5.fld4, RET.fld1);
_55 = Adt53 { fld0: _46.fld0 };
_65.fld3.fld3 = (RET.fld3.0, _8.0);
_5 = _4.1 as isize;
RET.fld1 = RET.fld3.1 << _65.fld4.fld5;
_14 = _65.fld4.fld2 | _65.fld4.fld2;
_69.0 = _33 ^ _30.0;
_65.fld3.fld3 = (_24.fld4, _57.0);
_65.fld3.fld5 = !_48;
_51 = !_32;
_57.2 = _19;
RET.fld7 = core::ptr::addr_of_mut!(_48);
_35 = core::ptr::addr_of!(_42.fld0.0);
_8.3.1 = _4.1;
_41.1 = _24.fld0 ^ _12.1;
_65.fld1 = _69.0;
_69.0 = _55.fld0.0 as u64;
_7 = _8.3.1 as u128;
place!(Field::<u128>(Variant(_52, 2), 0)) = !_16;
_10 = _65.fld4.fld2;
_39 = _63;
_58 = [_22,_31,_31,_22,_31,_31,_22];
_42 = Adt53 { fld0: _55.fld0 };
_69 = (_65.fld1,);
Goto(bb25)
}
bb25 = {
_65.fld3.fld3 = RET.fld3;
_65.fld3.fld1 = _8.2 as usize;
Call(_67.fld4 = core::intrinsics::transmute(_7), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_65.fld7 = 435687726_u32 * 682240529_u32;
_12.0 = _4.0;
SetDiscriminant(_52, 1);
_36 = _16 as isize;
_67.fld5.fld2 = _48 as isize;
_24.fld0 = _8.3.1;
_12.1 = _3.3.1 <= _3.3.1;
_51 = RET.fld6 >> _23.fld0.0;
_42.fld0.0 = -_25.fld0.0;
_8.3.0 = core::ptr::addr_of!((*_35));
place!(Field::<Adt37>(Variant(_52, 1), 0)).fld0 = RET.fld1 < _57.0;
_57.3.0 = core::ptr::addr_of!(_3.4);
_28 = _37 as usize;
_67.fld5.fld5 = _65.fld4.fld5 << _65.fld4.fld3;
RET.fld1 = _65.fld3.fld3.1;
_72 = _58;
_65.fld4.fld3 = -_24.fld3;
_24.fld2 = _54 + _43;
_56 = _24.fld0;
_65.fld4.fld6 = core::ptr::addr_of_mut!((*_49));
Goto(bb27)
}
bb27 = {
_67.fld3 = _65.fld4.fld3;
_53.fld0.0 = _27 as i16;
_42.fld0 = (_39.fld0.0,);
_71 = _65.fld4.fld0;
RET.fld0.1 = core::ptr::addr_of!(_76);
_67.fld5.fld3 = _24.fld3;
_67.fld1 = _1;
Goto(bb28)
}
bb28 = {
_59 = _2 as i8;
RET.fld3.1 = _26 as usize;
_12 = (_65.fld3.fld2, _56);
_51 = RET.fld6;
_65.fld4.fld6 = _1;
_69.0 = _51 as u64;
_8.0 = !_3.0;
_58 = [_22,_31,_22,_31,_31,_31,_22];
_53.fld0.0 = _8.4;
_67.fld5.fld3 = _24.fld3 ^ _67.fld3;
_24.fld0 = _6;
_64 = !_24.fld2;
Goto(bb29)
}
bb29 = {
_67.fld5.fld5 = _31 as i32;
_63.fld0 = ((*_35),);
RET.fld7 = _65.fld3.fld7;
_75 = -_24.fld5;
_16 = !_67.fld4;
_46 = Adt53 { fld0: _63.fld0 };
_67.fld2 = _65.fld7 & _65.fld7;
_65.fld4.fld2 = _33 as isize;
_51 = _32;
Goto(bb30)
}
bb30 = {
RET.fld0.0 = core::ptr::addr_of_mut!(_76);
_77 = _15;
_38.0 = _65.fld1 >> _8.0;
_84.fld0 = _46.fld0;
_47 = RET.fld1;
_67.fld4 = _3.0 as u128;
_3.3 = (_4.0, _71);
RET.fld6 = _24.fld5 as i64;
_65.fld7 = _12.1 as u32;
_63.fld0 = (_84.fld0.0,);
_70 = _7 as f32;
_46.fld0 = _25.fld0;
_8 = (_57.0, _65.fld4.fld5, _3.2, _4, _39.fld0.0);
_65.fld3.fld6 = _65.fld7 as i64;
_65.fld3.fld6 = -RET.fld6;
_23.fld0 = (_62.0,);
place!(Field::<Adt37>(Variant(_52, 1), 0)).fld4 = core::ptr::addr_of_mut!(_45);
_82 = (_33,);
RET.fld1 = _43 as usize;
_67.fld5.fld6 = core::ptr::addr_of_mut!(RET.fld7);
_43 = RET.fld6 as isize;
_41.0 = core::ptr::addr_of!(_62.0);
_67.fld5.fld3 = _25.fld0.0 as i8;
_8.3 = _12;
_65.fld3.fld0.1 = core::ptr::addr_of!(_76);
_55 = Adt53 { fld0: _62 };
_57.2 = _3.2;
_63 = Adt53 { fld0: _39.fld0 };
Goto(bb31)
}
bb31 = {
_67.fld5.fld3 = _67.fld2 as i8;
_39 = Adt53 { fld0: _25.fld0 };
_65.fld3.fld5 = !_48;
_45 = _24.fld3 - _67.fld5.fld3;
_3.2 = _8.2;
_39 = Adt53 { fld0: _53.fld0 };
_67.fld2 = !_65.fld7;
_46 = _42;
_1 = core::ptr::addr_of_mut!((*_1));
place!(Field::<Adt37>(Variant(_52, 1), 0)).fld0 = _71;
_17 = [_27,_27,_27,_27,_27,_27];
_59 = _24.fld3 | _45;
_30.0 = _31 as u64;
_62 = (_42.fld0.0,);
_69.0 = _62.0 as u64;
_39 = Adt53 { fld0: _25.fld0 };
_80.2 = core::ptr::addr_of!(_74);
_8.1 = _65.fld4.fld5;
_65.fld3.fld3 = (Field::<Adt37>(Variant(_52, 1), 0).fld4, _8.0);
_86 = -_44;
_65.fld4.fld4 = core::ptr::addr_of_mut!(_67.fld5.fld3);
_8.0 = _57.0;
_60 = _58;
place!(Field::<Adt37>(Variant(_52, 1), 0)).fld2 = _69.0 as isize;
_79 = _72;
_67.fld5.fld2 = -_77;
Goto(bb32)
}
bb32 = {
_7 = _16;
RET.fld2 = _3.3.0;
_3.0 = !_28;
_25.fld0.0 = _63.fld0.0 << _84.fld0.0;
_51 = _65.fld3.fld6 ^ RET.fld6;
_63 = Adt53 { fld0: _39.fld0 };
_57 = _8;
_65.fld3.fld0.0 = core::ptr::addr_of_mut!(_48);
_57.1 = _7 as i32;
_79 = [_22,_22,_22,_22,_22,_31,_22];
_53.fld0 = ((*_35),);
_65.fld3.fld0.1 = core::ptr::addr_of!(_76);
Goto(bb33)
}
bb33 = {
RET.fld3.0 = core::ptr::addr_of_mut!(_29);
_80.2 = core::ptr::addr_of!(_70);
_91.0 = _27 as i16;
_80.1 = _31 | _31;
_34 = _65.fld3.fld5;
_41 = _57.3;
_3.1 = _75 >> _61;
_68 = [_27,_27,_27,_27,_27,_27];
_87 = _34 as i128;
RET.fld0.1 = core::ptr::addr_of!(_65.fld3.fld5);
_64 = -_15;
_67.fld3 = _24.fld3 >> _57.0;
_85 = _3.1 as isize;
Call(_65.fld7 = fn17(_28, RET.fld0.1, Field::<Adt37>(Variant(_52, 1), 0).fld4, _8.3.1, _3, _65.fld1, _35, _28, _14, _3.0, _87, _86, _10), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_55 = _42;
_68 = [_87,_87,_87,_87,_87,_87];
_39.fld0 = (_42.fld0.0,);
_25 = Adt53 { fld0: _84.fld0 };
place!(Field::<Adt37>(Variant(_52, 1), 0)).fld4 = core::ptr::addr_of_mut!(_59);
_25 = _63;
_65.fld3.fld3.1 = RET.fld1 << _67.fld5.fld5;
_31 = _70 as u8;
_79 = [_80.1,_31,_80.1,_22,_31,_80.1,_22];
Goto(bb35)
}
bb35 = {
_3 = (_65.fld3.fld3.1, _65.fld4.fld5, _19, _4, (*_35));
RET.fld7 = _65.fld3.fld0.0;
_83 = core::ptr::addr_of!((*_35));
_65.fld2 = _22 as isize;
_57.3.0 = _8.3.0;
_65.fld3.fld5 = _34;
_65.fld3.fld6 = _8.3.1 as i64;
RET.fld3 = _65.fld3.fld3;
_95 = &_55.fld0;
_46.fld0.0 = (*_83);
RET.fld0 = _65.fld3.fld0;
_25.fld0 = ((*_83),);
_12.1 = _6 | _24.fld0;
_64 = _70 as isize;
_39.fld0.0 = -_84.fld0.0;
Goto(bb36)
}
bb36 = {
_62 = (_53.fld0.0,);
_71 = !_9;
_97 = _33;
Goto(bb37)
}
bb37 = {
match _65.fld7 {
1033802012 => bb39,
_ => bb38
}
}
bb38 = {
RET.fld0.0 = core::ptr::addr_of_mut!(_76);
_77 = _15;
_38.0 = _65.fld1 >> _8.0;
_84.fld0 = _46.fld0;
_47 = RET.fld1;
_67.fld4 = _3.0 as u128;
_3.3 = (_4.0, _71);
RET.fld6 = _24.fld5 as i64;
_65.fld7 = _12.1 as u32;
_63.fld0 = (_84.fld0.0,);
_70 = _7 as f32;
_46.fld0 = _25.fld0;
_8 = (_57.0, _65.fld4.fld5, _3.2, _4, _39.fld0.0);
_65.fld3.fld6 = _65.fld7 as i64;
_65.fld3.fld6 = -RET.fld6;
_23.fld0 = (_62.0,);
place!(Field::<Adt37>(Variant(_52, 1), 0)).fld4 = core::ptr::addr_of_mut!(_45);
_82 = (_33,);
RET.fld1 = _43 as usize;
_67.fld5.fld6 = core::ptr::addr_of_mut!(RET.fld7);
_43 = RET.fld6 as isize;
_41.0 = core::ptr::addr_of!(_62.0);
_67.fld5.fld3 = _25.fld0.0 as i8;
_8.3 = _12;
_65.fld3.fld0.1 = core::ptr::addr_of!(_76);
_55 = Adt53 { fld0: _62 };
_57.2 = _3.2;
_63 = Adt53 { fld0: _39.fld0 };
Goto(bb31)
}
bb39 = {
_35 = core::ptr::addr_of!(_57.4);
_53.fld0 = (_23.fld0.0,);
_12 = _57.3;
_76 = _34;
_55 = Adt53 { fld0: _39.fld0 };
RET.fld2 = core::ptr::addr_of!(_91.0);
_62.0 = _3.4;
_69.0 = _65.fld1;
RET.fld0.1 = core::ptr::addr_of!(_65.fld3.fld5);
_100.0 = _44 as i16;
_67.fld0 = -_87;
_67.fld5.fld0 = _24.fld0;
_45 = _37 as i8;
RET.fld1 = _28 & _8.0;
_65.fld3.fld5 = _48;
RET.fld5 = !_65.fld3.fld5;
_76 = _65.fld3.fld5;
_12.1 = _41.1;
RET.fld2 = _57.3.0;
_92 = [_87,_87,_87,_87,_87,_67.fld0];
match _65.fld7 {
0 => bb22,
1033802012 => bb41,
_ => bb40
}
}
bb40 = {
_4.0 = _8.3.0;
_15 = _5 - _14;
_3.3 = (_13, _24.fld0);
_4 = (_8.3.0, _3.3.1);
_8.0 = !RET.fld1;
_27 = (-112132332338463843510497184768756828475_i128) & 74073790685579283922920637543013018545_i128;
_33 = _8.1 as u64;
_25.fld0 = _23.fld0;
RET.fld0.1 = core::ptr::addr_of!(RET.fld5);
_30.0 = !_33;
_31 = !_22;
_12 = (_4.0, _9);
_12.1 = _3.3.1;
_24.fld3 = _29;
_6 = !_4.1;
_3.0 = _8.4 as usize;
_8.4 = !_23.fld0.0;
_37 = RET.fld3.1 as i16;
_8.1 = !_11;
RET.fld3.1 = _5 as usize;
_8.2 = _19;
RET.fld3.0 = _24.fld4;
_24.fld4 = RET.fld3.0;
_23 = Adt53 { fld0: _25.fld0 };
_35 = core::ptr::addr_of!(_39.fld0.0);
Goto(bb13)
}
bb41 = {
_17 = [_87,_67.fld0,_87,_67.fld0,_87,_87];
_61 = _3.1 ^ _3.1;
_80.0 = &_39.fld0;
_12 = _4;
_95 = &_63.fld0;
_89 = _57.3.1 & _41.1;
_99.fld0.0 = _37;
_65.fld3.fld5 = _34;
_55.fld0 = (_37,);
_65.fld6 = Adt45::Variant3 { fld0: _26,fld1: RET.fld3,fld2: _68,fld3: _65.fld3.fld3.0,fld4: _58,fld5: _62 };
_86 = _65.fld3.fld3.1 as f64;
_65.fld3 = Adt38 { fld0: RET.fld0,fld1: Field::<(*mut i8, usize)>(Variant(_65.fld6, 3), 1).1,fld2: _57.3.0,fld3: RET.fld3,fld4: _80.2,fld5: _34,fld6: RET.fld6,fld7: RET.fld7 };
RET.fld5 = _48 >> _15;
RET = Move(_65.fld3);
_65.fld3.fld0.0 = core::ptr::addr_of_mut!(RET.fld5);
Goto(bb42)
}
bb42 = {
Call(_105 = dump_var(15_usize, 85_usize, Move(_85), 59_usize, Move(_59), 54_usize, Move(_54), 82_usize, Move(_82)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Call(_105 = dump_var(15_usize, 43_usize, Move(_43), 16_usize, Move(_16), 97_usize, Move(_97), 56_usize, Move(_56)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_105 = dump_var(15_usize, 28_usize, Move(_28), 87_usize, Move(_87), 17_usize, Move(_17), 7_usize, Move(_7)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_105 = dump_var(15_usize, 37_usize, Move(_37), 27_usize, Move(_27), 30_usize, Move(_30), 9_usize, Move(_9)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_105 = dump_var(15_usize, 34_usize, Move(_34), 62_usize, Move(_62), 79_usize, Move(_79), 11_usize, Move(_11)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_105 = dump_var(15_usize, 2_usize, Move(_2), 29_usize, Move(_29), 77_usize, Move(_77), 14_usize, Move(_14)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_105 = dump_var(15_usize, 60_usize, Move(_60), 61_usize, Move(_61), 106_usize, _106, 106_usize, _106), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: *const i16,mut _2: i16,mut _3: (usize, i32, char, (*const i16, bool), i16),mut _4: bool,mut _5: isize,mut _6: u16,mut _7: i32,mut _8: i16,mut _9: *mut *mut u16,mut _10: i32,mut _11: *const i16,mut _12: bool,mut _13: isize,mut _14: isize,mut _15: isize,mut _16: bool) -> usize {
mir! {
type RET = usize;
let _17: isize;
let _18: u128;
let _19: Adt43;
let _20: isize;
let _21: (u64,);
let _22: (u64,);
let _23: Adt46;
let _24: [u8; 7];
let _25: *mut *mut u16;
let _26: f32;
let _27: char;
let _28: [u8; 7];
let _29: (*mut u16, *const u16);
let _30: (u64,);
let _31: f32;
let _32: [u8; 7];
let _33: isize;
let _34: Adt53;
let _35: Adt53;
let _36: ();
let _37: ();
{
_3.0 = 12322473995896795578_usize ^ 6_usize;
_4 = _12;
_6 = 45093_u16;
_16 = _14 <= _14;
_10 = 117488088957052905530878290068920721502_u128 as i32;
Goto(bb1)
}
bb1 = {
_2 = _8 & _8;
_3.3 = (_1, _12);
_8 = -_2;
_4 = _16;
_4 = !_16;
_4 = _3.3.1 ^ _16;
RET = !_3.0;
_17 = _5 & _15;
_7 = 9756315194560556840_u64 as i32;
RET = _3.0 + _3.0;
_16 = _4;
_3.3.1 = !_4;
_2 = _3.2 as i16;
_4 = _8 < _8;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
45093 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_10 = (-8779392692801161664_i64) as i32;
RET = _3.0 >> _15;
_17 = _5;
_16 = _13 >= _15;
_5 = _14 << _15;
_10 = _3.1 >> _8;
_21.0 = 18115002158209118720_u64 * 13310073347239818083_u64;
_21.0 = 7161310198815475776_u64;
_3.3 = (_1, _12);
_12 = !_16;
_15 = _5;
_8 = -_3.4;
_3.1 = _10;
_3.3 = (_1, _16);
_20 = _5;
RET = _3.0;
_6 = 230_u8 as u16;
Goto(bb10)
}
bb10 = {
_3.4 = -_8;
_3.4 = _8 & _8;
_22.0 = _21.0 ^ _21.0;
_21 = (_22.0,);
_3.3 = (_11, _4);
_23.fld7 = _3.4 as u32;
_23.fld2 = RET as isize;
_18 = 295416288999563885102619356995784445970_u128;
_23.fld3.fld1 = (-1357738245210715228_i64) as usize;
_21 = (_22.0,);
_6 = (-57831150972912276403986840731021033832_i128) as u16;
_11 = _1;
_1 = core::ptr::addr_of!(_2);
_21 = (_22.0,);
_24 = [187_u8,94_u8,128_u8,187_u8,191_u8,210_u8,182_u8];
Goto(bb11)
}
bb11 = {
_5 = _13;
_23.fld5 = core::ptr::addr_of_mut!(_23.fld3.fld5);
_20 = -_5;
_23.fld4.fld4 = core::ptr::addr_of_mut!(_23.fld4.fld3);
_18 = 96120359047865178699989037450970525563_u128 - 110558785946648269259439746045837661888_u128;
_18 = 24506183078732745440318901175040190273_u128 >> _15;
_23.fld4.fld2 = !_20;
_3.3 = (_11, _4);
_10 = _3.1;
_23.fld2 = _4 as isize;
_11 = _3.3.0;
_23.fld3.fld3.0 = core::ptr::addr_of_mut!(_23.fld4.fld3);
_23.fld2 = _13;
_23.fld3.fld1 = !RET;
_3.3 = (_11, _16);
_25 = core::ptr::addr_of_mut!(_23.fld3.fld7);
_23.fld3.fld0.0 = core::ptr::addr_of_mut!(_23.fld3.fld5);
_22 = _21;
_23.fld3.fld6 = 2313449569127149021_i64;
Goto(bb12)
}
bb12 = {
RET = _23.fld3.fld6 as usize;
_22 = (_21.0,);
_23.fld4.fld6 = _9;
_17 = _15 << _20;
_23.fld4.fld0 = !_3.3.1;
_23.fld3.fld2 = _11;
_23.fld3.fld1 = _6 as usize;
_23.fld3.fld7 = core::ptr::addr_of_mut!(_23.fld3.fld5);
_28 = _24;
_25 = core::ptr::addr_of_mut!(_23.fld3.fld7);
_6 = 7043_u16;
_23.fld4.fld4 = core::ptr::addr_of_mut!(_23.fld4.fld3);
_3.1 = _10;
_23.fld3.fld4 = core::ptr::addr_of!(_26);
_14 = !_5;
_18 = !34096398654376332059645642196647557717_u128;
_23.fld5 = core::ptr::addr_of_mut!(_23.fld3.fld5);
_9 = core::ptr::addr_of_mut!((*_25));
_13 = _23.fld2 >> _23.fld4.fld2;
_29.0 = core::ptr::addr_of_mut!(_23.fld3.fld5);
_21 = _22;
_30 = (_22.0,);
_27 = _3.2;
_23.fld4.fld2 = _14;
match _23.fld3.fld6 {
0 => bb11,
1 => bb8,
2 => bb3,
3 => bb4,
2313449569127149021 => bb13,
_ => bb10
}
}
bb13 = {
_23.fld4.fld2 = _13;
RET = _16 as usize;
_3.4 = (*_1);
_29.1 = core::ptr::addr_of!(_23.fld3.fld5);
_26 = 15_i8 as f32;
_2 = _23.fld7 as i16;
_32 = [14_u8,40_u8,91_u8,74_u8,60_u8,185_u8,213_u8];
_28 = [194_u8,202_u8,54_u8,36_u8,65_u8,196_u8,122_u8];
_31 = _26 * _26;
_23.fld3.fld6 = (-4157111110568432130086728690037346769_i128) as i64;
_23.fld5 = core::ptr::addr_of_mut!(_6);
_23.fld1 = _21.0 + _30.0;
_3.0 = RET;
_1 = _23.fld3.fld2;
_3.1 = -_10;
_27 = _3.2;
_23.fld5 = core::ptr::addr_of_mut!(_6);
_28 = _24;
_34.fld0 = (_2,);
Goto(bb14)
}
bb14 = {
Call(_36 = dump_var(16_usize, 12_usize, Move(_12), 4_usize, Move(_4), 13_usize, Move(_13), 32_usize, Move(_32)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_36 = dump_var(16_usize, 7_usize, Move(_7), 15_usize, Move(_15), 28_usize, Move(_28), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(16_usize, 27_usize, Move(_27), 10_usize, Move(_10), 18_usize, Move(_18), 37_usize, _37), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: usize,mut _2: *const u16,mut _3: *mut i8,mut _4: bool,mut _5: (usize, i32, char, (*const i16, bool), i16),mut _6: u64,mut _7: *const i16,mut _8: usize,mut _9: isize,mut _10: usize,mut _11: i128,mut _12: f64,mut _13: isize) -> u32 {
mir! {
type RET = u32;
let _14: *const *const u64;
let _15: *const u16;
let _16: Adt47;
let _17: f32;
let _18: isize;
let _19: [u8; 7];
let _20: Adt53;
let _21: *const u16;
let _22: u16;
let _23: Adt48;
let _24: [u8; 7];
let _25: isize;
let _26: u64;
let _27: f64;
let _28: (i16,);
let _29: Adt53;
let _30: Adt43;
let _31: ();
let _32: ();
{
_13 = 257166637353492398864625731731992022332_u128 as isize;
_6 = _5.2 as u64;
_5.3 = (_7, _4);
RET = 809419710_u32;
_8 = _5.4 as usize;
_8 = _5.0;
_13 = (-7939749527548468928_i64) as isize;
_5.3.1 = _4;
_5.0 = !_10;
_4 = _5.3.1;
_8 = !_10;
_8 = 26231_u16 as usize;
RET = 1967898165_u32 ^ 1130346790_u32;
_9 = !_13;
_5.1 = _11 as i32;
_5.2 = '\u{5fd}';
_12 = 25885929003886638109343721235798079786_u128 as f64;
_10 = 221723393148175517294334043478610727792_u128 as usize;
_11 = 163702159653373612739817815884623005243_i128 >> _5.0;
_15 = _2;
_13 = _12 as isize;
_7 = core::ptr::addr_of!(_5.4);
_8 = _5.0 >> _5.0;
_1 = !_5.0;
_6 = !1802151792238328528_u64;
Goto(bb1)
}
bb1 = {
_4 = !_5.3.1;
_10 = _5.0;
RET = 841973139_u32;
_5.3 = (_7, _4);
_5.3.1 = _4;
_13 = _5.1 as isize;
_5.0 = !_1;
_10 = !_8;
_7 = core::ptr::addr_of!((*_7));
_11 = _6 as i128;
_15 = _2;
_4 = _5.3.1;
_12 = (-2795477898676920335_i64) as f64;
RET = 1033802012_u32;
_5.0 = _8;
_5.4 = -(-21769_i16);
_18 = _13;
_19 = [255_u8,14_u8,89_u8,212_u8,171_u8,198_u8,191_u8];
_6 = 13290999187854288051_u64;
_5.2 = '\u{aecf1}';
Goto(bb2)
}
bb2 = {
_19 = [20_u8,82_u8,11_u8,112_u8,146_u8,28_u8,35_u8];
_17 = RET as f32;
_13 = -_18;
_10 = _17 as usize;
_17 = 125269425794824613618474578792710158815_u128 as f32;
_5.2 = '\u{983dc}';
_7 = core::ptr::addr_of!((*_7));
_5.2 = '\u{3af55}';
_5.0 = _1 | _1;
_7 = core::ptr::addr_of!((*_7));
_18 = _11 as isize;
_5.1 = 102508439_i32;
_5.4 = 6534_i16;
match _5.4 {
0 => bb3,
1 => bb4,
2 => bb5,
6534 => bb7,
_ => bb6
}
}
bb3 = {
_4 = !_5.3.1;
_10 = _5.0;
RET = 841973139_u32;
_5.3 = (_7, _4);
_5.3.1 = _4;
_13 = _5.1 as isize;
_5.0 = !_1;
_10 = !_8;
_7 = core::ptr::addr_of!((*_7));
_11 = _6 as i128;
_15 = _2;
_4 = _5.3.1;
_12 = (-2795477898676920335_i64) as f64;
RET = 1033802012_u32;
_5.0 = _8;
_5.4 = -(-21769_i16);
_18 = _13;
_19 = [255_u8,14_u8,89_u8,212_u8,171_u8,198_u8,191_u8];
_6 = 13290999187854288051_u64;
_5.2 = '\u{aecf1}';
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_20.fld0 = ((*_7),);
_5.3 = (_7, _4);
_12 = (-99_i8) as f64;
match _5.4 {
0 => bb8,
1 => bb9,
2 => bb10,
6534 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = !_5.3.1;
_10 = _5.0;
RET = 841973139_u32;
_5.3 = (_7, _4);
_5.3.1 = _4;
_13 = _5.1 as isize;
_5.0 = !_1;
_10 = !_8;
_7 = core::ptr::addr_of!((*_7));
_11 = _6 as i128;
_15 = _2;
_4 = _5.3.1;
_12 = (-2795477898676920335_i64) as f64;
RET = 1033802012_u32;
_5.0 = _8;
_5.4 = -(-21769_i16);
_18 = _13;
_19 = [255_u8,14_u8,89_u8,212_u8,171_u8,198_u8,191_u8];
_6 = 13290999187854288051_u64;
_5.2 = '\u{aecf1}';
Goto(bb2)
}
bb11 = {
_4 = !_5.3.1;
_10 = _5.0;
RET = 841973139_u32;
_5.3 = (_7, _4);
_5.3.1 = _4;
_13 = _5.1 as isize;
_5.0 = !_1;
_10 = !_8;
_7 = core::ptr::addr_of!((*_7));
_11 = _6 as i128;
_15 = _2;
_4 = _5.3.1;
_12 = (-2795477898676920335_i64) as f64;
RET = 1033802012_u32;
_5.0 = _8;
_5.4 = -(-21769_i16);
_18 = _13;
_19 = [255_u8,14_u8,89_u8,212_u8,171_u8,198_u8,191_u8];
_6 = 13290999187854288051_u64;
_5.2 = '\u{aecf1}';
Goto(bb2)
}
bb12 = {
_15 = core::ptr::addr_of!(_22);
_21 = core::ptr::addr_of!((*_15));
_11 = (-56554419027309098781986217864393268468_i128) << _8;
_5.3 = (_7, _4);
_11 = 44822487154722549271391852379060759646_i128;
_11 = !(-40833182600925979273509628511242152850_i128);
_4 = _5.3.1;
_5.4 = _20.fld0.0;
_20.fld0 = (_5.4,);
_22 = RET as u16;
_10 = _1;
_5.1 = (-1282548586_i32);
_24 = _19;
_19 = [243_u8,168_u8,192_u8,235_u8,15_u8,43_u8,107_u8];
_20.fld0 = ((*_7),);
_8 = _1 - _5.0;
_2 = _15;
_20.fld0 = ((*_7),);
_20.fld0.0 = 7049103974737861349_i64 as i16;
_7 = core::ptr::addr_of!(_5.4);
_24 = _19;
Goto(bb13)
}
bb13 = {
_2 = _15;
_9 = _5.0 as isize;
_18 = _13 ^ _9;
_20.fld0.0 = (*_15) as i16;
_5.0 = _8 * _8;
_27 = -_12;
_28.0 = (*_7) * (*_7);
_20.fld0.0 = _9 as i16;
_20 = Adt53 { fld0: _28 };
_17 = _5.1 as f32;
_25 = _18;
_13 = !_9;
_13 = -_18;
_29.fld0.0 = (*_7);
_19 = [57_u8,16_u8,169_u8,95_u8,149_u8,147_u8,233_u8];
_10 = _8;
_8 = _10;
match (*_7) {
0 => bb4,
1 => bb14,
2 => bb15,
6534 => bb17,
_ => bb16
}
}
bb14 = {
_15 = core::ptr::addr_of!(_22);
_21 = core::ptr::addr_of!((*_15));
_11 = (-56554419027309098781986217864393268468_i128) << _8;
_5.3 = (_7, _4);
_11 = 44822487154722549271391852379060759646_i128;
_11 = !(-40833182600925979273509628511242152850_i128);
_4 = _5.3.1;
_5.4 = _20.fld0.0;
_20.fld0 = (_5.4,);
_22 = RET as u16;
_10 = _1;
_5.1 = (-1282548586_i32);
_24 = _19;
_19 = [243_u8,168_u8,192_u8,235_u8,15_u8,43_u8,107_u8];
_20.fld0 = ((*_7),);
_8 = _1 - _5.0;
_2 = _15;
_20.fld0 = ((*_7),);
_20.fld0.0 = 7049103974737861349_i64 as i16;
_7 = core::ptr::addr_of!(_5.4);
_24 = _19;
Goto(bb13)
}
bb15 = {
_4 = !_5.3.1;
_10 = _5.0;
RET = 841973139_u32;
_5.3 = (_7, _4);
_5.3.1 = _4;
_13 = _5.1 as isize;
_5.0 = !_1;
_10 = !_8;
_7 = core::ptr::addr_of!((*_7));
_11 = _6 as i128;
_15 = _2;
_4 = _5.3.1;
_12 = (-2795477898676920335_i64) as f64;
RET = 1033802012_u32;
_5.0 = _8;
_5.4 = -(-21769_i16);
_18 = _13;
_19 = [255_u8,14_u8,89_u8,212_u8,171_u8,198_u8,191_u8];
_6 = 13290999187854288051_u64;
_5.2 = '\u{aecf1}';
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
_28 = _29.fld0;
_29.fld0 = (_20.fld0.0,);
_5.3 = (_7, _4);
_20.fld0.0 = _6 as i16;
_20.fld0 = _29.fld0;
_8 = !_5.0;
_28 = (_20.fld0.0,);
_26 = _5.2 as u64;
_8 = 174002595639123487327257440836041822270_u128 as usize;
_8 = _17 as usize;
_28 = (_29.fld0.0,);
_29.fld0 = (_5.4,);
_29.fld0 = (_28.0,);
Goto(bb18)
}
bb18 = {
Call(_31 = dump_var(17_usize, 19_usize, Move(_19), 24_usize, Move(_24), 22_usize, Move(_22), 18_usize, Move(_18)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(17_usize, 8_usize, Move(_8), 10_usize, Move(_10), 13_usize, Move(_13), 32_usize, _32), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{d18ad}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(61_i8), std::hint::black_box((-29731_i16)), std::hint::black_box(576886820_i32), std::hint::black_box((-7028386805778496472_i64)), std::hint::black_box((-155066291504329586359632274614567846845_i128)), std::hint::black_box(3_usize), std::hint::black_box(81_u8), std::hint::black_box(50044_u16), std::hint::black_box(635378108_u32), std::hint::black_box(4416788232829454911_u64), std::hint::black_box(159243978789725560603777150922184232234_u128));
                
            }
#[derive(Debug)]
pub struct Adt37 {
fld0: bool,
fld1: *const *const u64,
fld2: isize,
fld3: i8,
fld4: *mut i8,
fld5: i32,
fld6: *mut *mut u16,
}
#[derive(Debug)]
pub struct Adt38 {
fld0: (*mut u16, *const u16),
fld1: usize,
fld2: *const i16,
fld3: (*mut i8, usize),
fld4: *const f32,
fld5: u16,
fld6: i64,
fld7: *mut u16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt39 {
fld0: (*mut i8, usize),
}
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: u64,
fld1: f32,
fld2: *mut *mut u16,
fld3: Adt39,
fld4: u32,
fld5: i128,
fld6: *const f32,

},
Variant1{
fld0: *const *const u64,
fld1: Adt37,
fld2: isize,
fld3: usize,
fld4: (*mut u16, *const u16),
fld5: i32,
fld6: f32,

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: bool,
fld1: u32,
fld2: *mut i8,
fld3: u128,
fld4: usize,
fld5: *const f32,
fld6: (*const i16, bool),

},
Variant1{
fld0: bool,
fld1: char,
fld2: i64,
fld3: usize,
fld4: (*const i16, bool),

},
Variant2{
fld0: (*mut u16, *const u16),
fld1: [i128; 6],
fld2: isize,
fld3: *const u64,
fld4: u128,

},
Variant3{
fld0: *const u64,
fld1: *const u16,
fld2: *const f32,
fld3: *const i16,

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: Adt38,
fld1: *const *const u64,
fld2: isize,
fld3: i8,
fld4: u8,
fld5: *mut i8,
fld6: (*mut i8, usize),

},
Variant1{
fld0: *const [i128; 6],
fld1: (*mut u16, *const u16),
fld2: i128,
fld3: (usize, i32, char, (*const i16, bool), i16),
fld4: (*const i16, bool),
fld5: *mut *mut u16,
fld6: Adt39,

},
Variant2{
fld0: [u8; 7],
fld1: char,
fld2: *const u16,
fld3: u64,
fld4: *mut u16,
fld5: usize,
fld6: i64,
fld7: u128,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: Adt41,
fld1: i8,

},
Variant1{
fld0: (*const i16, bool),
fld1: char,
fld2: [u8; 7],
fld3: i8,
fld4: *const u16,
fld5: i32,
fld6: Adt37,
fld7: u32,

}}
#[derive(Debug)]
pub struct Adt44 {
fld0: i128,
fld1: *mut *mut u16,
fld2: u32,
fld3: i8,
fld4: u128,
fld5: Adt37,
fld6: *mut i8,
}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: Adt40,
fld1: char,
fld2: u64,
fld3: u128,
fld4: *const f32,
fld5: *mut u16,
fld6: *const u16,

},
Variant1{
fld0: bool,
fld1: Adt41,
fld2: Adt38,
fld3: f32,
fld4: (*mut i8, usize),

},
Variant2{
fld0: *const u64,
fld1: (*mut u16, *const u16),
fld2: *mut *mut u16,
fld3: u8,

},
Variant3{
fld0: f64,
fld1: (*mut i8, usize),
fld2: [i128; 6],
fld3: *mut i8,
fld4: [u8; 7],
fld5: (i16,),

}}
#[derive(Debug)]
pub struct Adt46 {
fld0: *const *const u64,
fld1: u64,
fld2: isize,
fld3: Adt38,
fld4: Adt37,
fld5: *mut u16,
fld6: Adt45,
fld7: u32,
}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: Adt42,
fld1: *const [i128; 6],
fld2: isize,
fld3: *const u64,
fld4: i16,
fld5: i32,
fld6: u32,
fld7: u8,

},
Variant1{
fld0: f64,
fld1: [i128; 6],
fld2: *mut *mut u16,
fld3: i8,
fld4: *const i16,

},
Variant2{
fld0: (*mut i8, usize),
fld1: Adt40,
fld2: isize,
fld3: i8,
fld4: u32,
fld5: u64,
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt41,
fld1: usize,
fld2: (u64,),
fld3: *const i16,
fld4: Adt39,

},
Variant1{
fld0: (*const i16, bool),
fld1: Adt47,
fld2: Adt41,
fld3: i8,
fld4: i32,

},
Variant2{
fld0: (*mut i8, usize),
fld1: usize,
fld2: isize,
fld3: Adt37,
fld4: *mut i8,
fld5: *const i16,
fld6: u128,

},
Variant3{
fld0: Adt37,
fld1: Adt45,

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: Adt42,
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: f32,
fld1: *const f32,
fld2: f64,

},
Variant1{
fld0: Adt44,
fld1: Adt46,

},
Variant2{
fld0: (*mut i8, usize),

}}
#[derive(Debug)]
pub struct Adt51 {
fld0: (u64,),
fld1: u32,
fld2: u64,
fld3: Adt39,
fld4: *const *const u64,
fld5: Adt37,
fld6: Adt45,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: i32,
fld1: *mut *mut u16,
fld2: (*mut i8, usize),

},
Variant1{
fld0: Adt37,

},
Variant2{
fld0: u128,

},
Variant3{
fld0: i64,
fld1: char,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: (i16,),
}

