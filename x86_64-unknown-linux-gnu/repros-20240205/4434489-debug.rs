#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u64,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u128,mut _11: u16,mut _12: u32) -> char {
mir! {
type RET = char;
let _13: [char; 5];
let _14: [i32; 4];
let _15: Adt56;
let _16: i8;
let _17: bool;
let _18: (i128, [i64; 4], i16);
let _19: (*mut i8,);
let _20: i8;
let _21: ([i64; 5],);
let _22: i32;
let _23: [usize; 1];
let _24: isize;
let _25: usize;
let _26: bool;
let _27: isize;
let _28: Adt56;
let _29: usize;
let _30: *mut f64;
let _31: isize;
let _32: f32;
let _33: Adt53;
let _34: [i128; 6];
let _35: isize;
let _36: Adt42;
let _37: isize;
let _38: Adt51;
let _39: [i64; 5];
let _40: isize;
let _41: Adt43;
let _42: ();
let _43: ();
{
_7 = -(-1178714314539629927_i64);
_1 = true;
_8 = 54717674218354180721928838685130482688_i128;
_14 = [786952572_i32,793570266_i32,(-1406639632_i32),248426635_i32];
_15.fld2 = 692879154_u32;
_10 = 297867616017482616327631870419819802460_u128 + 321442970567490109921454215359417150668_u128;
_15.fld1 = [_7,_7,_7];
RET = '\u{6042e}';
RET = '\u{7aeb9}';
RET = '\u{27500}';
_13 = [RET,RET,RET,RET,RET];
_15.fld1 = [_7,_7,_7];
_15.fld1 = [_7,_7,_7];
_15.fld1 = [_7,_7,_7];
_4 = 53_isize as i8;
RET = '\u{8915e}';
RET = '\u{4e0d}';
_9 = 12261964157481053613_usize;
_10 = 221695994016879858133804065871621906834_u128 | 15222287634727189997619703653716878288_u128;
_17 = _9 >= _9;
_14 = [(-2031895515_i32),(-272196063_i32),(-2043981572_i32),767028333_i32];
Call(_15 = fn1(_14, _1, _13, _17, _1, _9, _1, RET, _10, _10, _10, _14, _13, _17), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_15.fld1 = [_7,_7,_7];
_5 = (-10714_i16);
_6 = (-1159207048_i32) | (-1986189540_i32);
_15.fld1 = [_7,_7,_7];
_13 = [RET,RET,RET,RET,RET];
_16 = !_4;
_18.1 = [_7,_7,_7,_7];
_15.fld1 = [_7,_7,_7];
RET = '\u{25266}';
_11 = _6 as u16;
_3 = (-107_isize);
Goto(bb2)
}
bb2 = {
_12 = !_15.fld2;
_18.0 = _8 >> _12;
_22 = _6;
RET = '\u{18729}';
_15.fld2 = _12;
_10 = _5 as u128;
_15.fld2 = _12;
_21.0 = [_7,_7,_7,_7,_7];
_2 = !13846902265858129506_u64;
RET = '\u{e217c}';
_13 = [RET,RET,RET,RET,RET];
_8 = _18.0;
_23 = [_9];
_23 = [_9];
_5 = (-9751_i16);
_2 = !6411578131264611454_u64;
Goto(bb3)
}
bb3 = {
_3 = (-9223372036854775808_isize);
_19.0 = core::ptr::addr_of_mut!(_16);
_15.fld2 = _12 | _12;
RET = '\u{17cdc}';
_18.1 = [_7,_7,_7,_7];
_17 = !_1;
_17 = !_1;
_20 = RET as i8;
_18.1 = [_7,_7,_7,_7];
_5 = (-4514_i16) * (-19351_i16);
_24 = _9 as isize;
_18.0 = -_8;
_19.0 = core::ptr::addr_of_mut!(_20);
_1 = !_17;
match _3 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb4 = {
_12 = !_15.fld2;
_18.0 = _8 >> _12;
_22 = _6;
RET = '\u{18729}';
_15.fld2 = _12;
_10 = _5 as u128;
_15.fld2 = _12;
_21.0 = [_7,_7,_7,_7,_7];
_2 = !13846902265858129506_u64;
RET = '\u{e217c}';
_13 = [RET,RET,RET,RET,RET];
_8 = _18.0;
_23 = [_9];
_23 = [_9];
_5 = (-9751_i16);
_2 = !6411578131264611454_u64;
Goto(bb3)
}
bb5 = {
_15.fld1 = [_7,_7,_7];
_5 = (-10714_i16);
_6 = (-1159207048_i32) | (-1986189540_i32);
_15.fld1 = [_7,_7,_7];
_13 = [RET,RET,RET,RET,RET];
_16 = !_4;
_18.1 = [_7,_7,_7,_7];
_15.fld1 = [_7,_7,_7];
RET = '\u{25266}';
_11 = _6 as u16;
_3 = (-107_isize);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_28.fld0 = [_9];
_14 = [_22,_22,_6,_22];
_13 = [RET,RET,RET,RET,RET];
_28.fld1 = [_7,_7,_7];
_26 = _17;
_15.fld3 = !233_u8;
_28 = Adt56 { fld0: _23,fld1: _15.fld1,fld2: _12,fld3: _15.fld3 };
_8 = _18.0;
_25 = _9 + _9;
_23 = [_25];
_2 = _17 as u64;
_34 = [_8,_8,_8,_18.0,_18.0,_8];
_15.fld3 = _28.fld3 ^ _28.fld3;
_28.fld3 = _5 as u8;
_31 = _24 ^ _24;
_21.0 = [_7,_7,_7,_7,_7];
_29 = !_25;
_20 = RET as i8;
match _3 {
0 => bb4,
340282366920938463454151235394913435648 => bb9,
_ => bb5
}
}
bb9 = {
_7 = 2071910384770511577_i64;
_13 = [RET,RET,RET,RET,RET];
Call(_35 = core::intrinsics::bswap(_31), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_9 = _25;
_1 = _26;
_8 = _11 as i128;
_28 = Adt56 { fld0: _15.fld0,fld1: _15.fld1,fld2: _12,fld3: _15.fld3 };
_5 = -12467_i16;
_5 = _10 as i16;
_13 = [RET,RET,RET,RET,RET];
_33 = Adt53::Variant2 { fld0: _15.fld3 };
_34 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_8 = -_18.0;
_31 = !_3;
_20 = _22 as i8;
_18.0 = _10 as i128;
place!(Field::<u8>(Variant(_33, 2), 0)) = _5 as u8;
_28 = Adt56 { fld0: _23,fld1: _15.fld1,fld2: _12,fld3: _15.fld3 };
place!(Field::<u8>(Variant(_33, 2), 0)) = !_28.fld3;
_27 = _31;
_22 = -_6;
_26 = !_1;
_33 = Adt53::Variant2 { fld0: _15.fld3 };
match _7 {
0 => bb1,
2071910384770511577 => bb12,
_ => bb11
}
}
bb11 = {
_15.fld1 = [_7,_7,_7];
_5 = (-10714_i16);
_6 = (-1159207048_i32) | (-1986189540_i32);
_15.fld1 = [_7,_7,_7];
_13 = [RET,RET,RET,RET,RET];
_16 = !_4;
_18.1 = [_7,_7,_7,_7];
_15.fld1 = [_7,_7,_7];
RET = '\u{25266}';
_11 = _6 as u16;
_3 = (-107_isize);
Goto(bb2)
}
bb12 = {
_11 = _1 as u16;
_25 = _9 + _29;
_13 = [RET,RET,RET,RET,RET];
_1 = !_17;
_19.0 = core::ptr::addr_of_mut!(_16);
_1 = !_26;
_18.2 = _5 - _5;
_6 = _22;
_15.fld1 = _28.fld1;
RET = '\u{6336c}';
_15.fld1 = _28.fld1;
_28 = Adt56 { fld0: _15.fld0,fld1: _15.fld1,fld2: _12,fld3: Field::<u8>(Variant(_33, 2), 0) };
Goto(bb13)
}
bb13 = {
_18.1 = [_7,_7,_7,_7];
_20 = _28.fld2 as i8;
_13 = [RET,RET,RET,RET,RET];
_15.fld0 = [_29];
_15.fld2 = !_28.fld2;
_28 = _15;
place!(Field::<u8>(Variant(_33, 2), 0)) = _28.fld3 - _28.fld3;
_37 = _28.fld2 as isize;
_40 = _37;
_39 = [_7,_7,_7,_7,_7];
_28.fld3 = _1 as u8;
_22 = _6;
_11 = 28190_u16;
_2 = !9418775918230997730_u64;
Goto(bb14)
}
bb14 = {
_32 = _12 as f32;
_39 = [_7,_7,_7,_7,_7];
_17 = _3 == _40;
_13 = [RET,RET,RET,RET,RET];
RET = '\u{c84ca}';
_28.fld1 = _15.fld1;
_28 = Adt56 { fld0: _15.fld0,fld1: _15.fld1,fld2: _12,fld3: _15.fld3 };
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(0_usize, 31_usize, Move(_31), 29_usize, Move(_29), 39_usize, Move(_39), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(0_usize, 12_usize, Move(_12), 16_usize, Move(_16), 13_usize, Move(_13), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(0_usize, 7_usize, Move(_7), 17_usize, Move(_17), 21_usize, Move(_21), 24_usize, Move(_24)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(0_usize, 35_usize, Move(_35), 3_usize, Move(_3), 27_usize, Move(_27), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [i32; 4],mut _2: bool,mut _3: [char; 5],mut _4: bool,mut _5: bool,mut _6: usize,mut _7: bool,mut _8: char,mut _9: u128,mut _10: u128,mut _11: u128,mut _12: [i32; 4],mut _13: [char; 5],mut _14: bool) -> Adt56 {
mir! {
type RET = Adt56;
let _15: [usize; 1];
let _16: [i64; 5];
let _17: [i64; 4];
let _18: isize;
let _19: i16;
let _20: u64;
let _21: ([i64; 5],);
let _22: isize;
let _23: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _24: (*mut isize, [i64; 4], i32);
let _25: isize;
let _26: f64;
let _27: isize;
let _28: [i64; 5];
let _29: Adt56;
let _30: *mut isize;
let _31: char;
let _32: u32;
let _33: [i64; 5];
let _34: (u8, u8, f64, [i64; 4]);
let _35: ([i64; 5],);
let _36: [i64; 5];
let _37: [i32; 4];
let _38: Adt56;
let _39: *const *mut i8;
let _40: isize;
let _41: i16;
let _42: isize;
let _43: ();
let _44: ();
{
RET.fld1 = [(-4455556416941010666_i64),(-8008272379087406244_i64),(-3498965278527924986_i64)];
RET.fld2 = 3448225742_u32;
RET.fld3 = !28_u8;
_6 = _9 as usize;
_11 = _9 & _9;
_8 = '\u{1925}';
_1 = [1044859899_i32,(-1395648508_i32),(-1482232961_i32),1305955976_i32];
RET.fld1 = [1644264052807162858_i64,(-7001737900010773799_i64),7793253817228114080_i64];
RET.fld2 = 2122290609_u32 << _10;
_5 = !_7;
_15 = [_6];
RET.fld0 = [_6];
Goto(bb1)
}
bb1 = {
_6 = RET.fld3 as usize;
RET.fld0 = _15;
_17 = [7091666325753032066_i64,(-6594944957225915798_i64),(-9179117687342590748_i64),5123916166652925887_i64];
RET.fld0 = [_6];
_12 = _1;
_1 = _12;
RET.fld1 = [(-1711996380374690629_i64),(-4711006944722064105_i64),(-3118778553121254597_i64)];
RET.fld0 = [_6];
_18 = 9223372036854775807_isize * (-9223372036854775808_isize);
RET.fld1 = [(-4396484598039526635_i64),(-2812049165857167904_i64),(-4095469439055972327_i64)];
_20 = 13157497327895855484_u64 & 3309585136302120198_u64;
RET.fld2 = 3278678206_u32;
_11 = 2942_i16 as u128;
RET.fld3 = 251_u8 | 171_u8;
_16 = [(-8642349389276223142_i64),989283394136123315_i64,(-5047751507873444782_i64),4892709920304436079_i64,2435853420974795856_i64];
_13 = _3;
_14 = _4 | _2;
_19 = (-20386_i16);
_2 = !_14;
_5 = !_2;
Goto(bb2)
}
bb2 = {
RET.fld1 = [(-8020898981308767774_i64),(-5040661051159069666_i64),(-4475135034946059123_i64)];
_17 = [3828185035866760893_i64,(-6065178262447397265_i64),(-5692979329317852687_i64),(-5498022926786806996_i64)];
_5 = _2 ^ _2;
RET.fld3 = _5 as u8;
_23.1 = _16;
RET.fld0 = _15;
_24.0 = core::ptr::addr_of_mut!(_18);
RET.fld1 = [(-8970297839559433936_i64),7682421208571660106_i64,(-769692847889865872_i64)];
_24.0 = core::ptr::addr_of_mut!(_18);
_14 = _2;
_18 = (-48_isize) | (-11_isize);
Call(_23 = fn2(_11, RET.fld3, _19, _18, _20, RET.fld1, _24.0, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_22 = 3991118048489867260_i64 as isize;
_21 = (_23.1,);
RET.fld3 = _23.0 as u8;
_1 = [_23.0,_23.0,_23.0,_23.0];
_5 = _14;
_11 = _10 * _10;
_24.2 = -_23.0;
RET.fld3 = !185_u8;
_8 = '\u{9a398}';
RET.fld0 = [_6];
match _19 {
0 => bb2,
1 => bb4,
340282366920938463463374607431768191070 => bb6,
_ => bb5
}
}
bb4 = {
RET.fld1 = [(-8020898981308767774_i64),(-5040661051159069666_i64),(-4475135034946059123_i64)];
_17 = [3828185035866760893_i64,(-6065178262447397265_i64),(-5692979329317852687_i64),(-5498022926786806996_i64)];
_5 = _2 ^ _2;
RET.fld3 = _5 as u8;
_23.1 = _16;
RET.fld0 = _15;
_24.0 = core::ptr::addr_of_mut!(_18);
RET.fld1 = [(-8970297839559433936_i64),7682421208571660106_i64,(-769692847889865872_i64)];
_24.0 = core::ptr::addr_of_mut!(_18);
_14 = _2;
_18 = (-48_isize) | (-11_isize);
Call(_23 = fn2(_11, RET.fld3, _19, _18, _20, RET.fld1, _24.0, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_6 = RET.fld3 as usize;
RET.fld0 = _15;
_17 = [7091666325753032066_i64,(-6594944957225915798_i64),(-9179117687342590748_i64),5123916166652925887_i64];
RET.fld0 = [_6];
_12 = _1;
_1 = _12;
RET.fld1 = [(-1711996380374690629_i64),(-4711006944722064105_i64),(-3118778553121254597_i64)];
RET.fld0 = [_6];
_18 = 9223372036854775807_isize * (-9223372036854775808_isize);
RET.fld1 = [(-4396484598039526635_i64),(-2812049165857167904_i64),(-4095469439055972327_i64)];
_20 = 13157497327895855484_u64 & 3309585136302120198_u64;
RET.fld2 = 3278678206_u32;
_11 = 2942_i16 as u128;
RET.fld3 = 251_u8 | 171_u8;
_16 = [(-8642349389276223142_i64),989283394136123315_i64,(-5047751507873444782_i64),4892709920304436079_i64,2435853420974795856_i64];
_13 = _3;
_14 = _4 | _2;
_19 = (-20386_i16);
_2 = !_14;
_5 = !_2;
Goto(bb2)
}
bb6 = {
RET.fld1 = [(-2794978465870700760_i64),7270889531518038992_i64,(-8495221638769690062_i64)];
_25 = _23.0 as isize;
_13 = _3;
RET.fld2 = !3244244292_u32;
_23.0 = !_24.2;
_6 = (-23_i8) as usize;
_2 = !_4;
_23.3 = 35439_u16 ^ 59399_u16;
_24.1 = _17;
RET.fld3 = _19 as u8;
_21.0 = [(-7376139376279395209_i64),(-4916161885916713218_i64),(-618407566947121543_i64),4269274557629397009_i64,(-1851332058104813633_i64)];
_24.0 = core::ptr::addr_of_mut!(_25);
_8 = '\u{1040b7}';
RET.fld0 = [_6];
RET.fld2 = 3514019547_u32;
_20 = 11686551385891535346_u64;
_21 = (_23.1,);
_25 = _18 << _24.2;
RET.fld2 = 2189455975_u32;
_13 = [_8,_8,_8,_8,_8];
RET.fld2 = !830543659_u32;
_14 = _5 <= _2;
_4 = _5 | _5;
RET.fld2 = (-106_i8) as u32;
RET.fld3 = !127_u8;
_3 = [_8,_8,_8,_8,_8];
_8 = '\u{47c3c}';
_24.1 = _17;
Call(RET.fld0 = fn3(_24, _10, _16, _24.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_27 = _22;
_26 = _6 as f64;
_28 = [(-6218893718372998459_i64),(-2834505776567075176_i64),(-7129417997464882078_i64),1731922971377974777_i64,8547038403630069797_i64];
_23.0 = _24.2 - _24.2;
RET.fld1 = [4224774619082622454_i64,(-9117510136474722417_i64),(-6024252659015663749_i64)];
RET.fld1 = [8735870263136478701_i64,3977619755790675358_i64,7146620831398031269_i64];
RET.fld2 = 3400769312_u32;
_1 = [_24.2,_24.2,_23.0,_23.0];
_23.0 = _11 as i32;
_19 = _14 as i16;
_20 = 13862487392067190872_u64 ^ 5763896481155711779_u64;
_14 = !_4;
_23.2 = [(-6867152953353948368_i64)];
_1 = [_23.0,_23.0,_23.0,_23.0];
_21.0 = [(-5956085466774861382_i64),(-5624893064777316557_i64),(-367277731247741568_i64),6188433718643140278_i64,(-6566281707502537446_i64)];
_29.fld1 = [8525285540174034749_i64,(-4136874131747514918_i64),6004106211662359531_i64];
_15 = [_6];
_26 = _23.3 as f64;
_11 = !_9;
_30 = _24.0;
_24.2 = _23.0 >> _19;
_24 = (_30, _17, _23.0);
_24.0 = _30;
RET.fld0 = [_6];
_16 = [(-3850894439729447917_i64),(-4106678048212399952_i64),2335344905341351302_i64,7476792645583992745_i64,4740933792946443592_i64];
_31 = _8;
_9 = _11;
_21 = (_23.1,);
Goto(bb8)
}
bb8 = {
_13 = [_8,_31,_31,_8,_31];
_23.0 = (-85_i8) as i32;
_31 = _8;
_4 = !_5;
_14 = _2 | _7;
_29.fld2 = !RET.fld2;
_5 = !_14;
_29.fld0 = [_6];
_29.fld3 = _4 as u8;
_10 = _9 ^ _11;
Goto(bb9)
}
bb9 = {
_30 = _24.0;
_17 = [7821321787940655862_i64,(-5892152682298124063_i64),3012803074032851170_i64,(-2896773261392890053_i64)];
_34.3 = [8262690362178145482_i64,(-893906630176185429_i64),(-259934932706990675_i64),(-6870064187785108135_i64)];
_16 = _21.0;
_34.0 = !_29.fld3;
_10 = _11;
_24.2 = -_23.0;
match RET.fld2 {
0 => bb6,
1 => bb7,
2 => bb3,
3400769312 => bb10,
_ => bb4
}
}
bb10 = {
_16 = _21.0;
RET.fld0 = [_6];
_36 = [(-3023997076615634673_i64),1161849231682191670_i64,(-3935929663972175638_i64),(-2242545491864231161_i64),(-7205545988827754701_i64)];
RET.fld2 = _29.fld2;
_23.2 = [(-6102814549997961968_i64)];
RET.fld2 = _19 as u32;
_23.1 = [5672978817806215785_i64,2948643580324409248_i64,(-8306860682448746167_i64),(-8605245777894685172_i64),(-3514714716872521204_i64)];
_6 = RET.fld2 as usize;
_27 = -_18;
_34.1 = _6 as u8;
_23.0 = 57100880739856090950156772450801519766_i128 as i32;
_37 = _1;
_24.2 = _23.0;
_23.1 = _28;
RET = Adt56 { fld0: _29.fld0,fld1: _29.fld1,fld2: _29.fld2,fld3: _34.0 };
_5 = _14;
_35 = _21;
_38.fld3 = _34.1 << _10;
_29.fld0 = [_6];
_3 = _13;
_15 = [_6];
_23.0 = _26 as i32;
_1 = _37;
RET.fld3 = _18 as u8;
RET.fld3 = !_38.fld3;
_17 = [6800696123768154301_i64,3334434683173315822_i64,(-16709563062717756_i64),7514619282736432620_i64];
Call(_17 = fn18(_21, _30, _9, _30, _24.1, _21.0, _21.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
RET.fld0 = [_6];
_2 = _14 & _4;
_22 = _6 as isize;
RET.fld2 = RET.fld3 as u32;
_23.1 = [(-3485349518977707499_i64),(-6852281396909761757_i64),20188946632410463_i64,317640199486523693_i64,(-2364773126243997594_i64)];
_34.1 = 83760562095824482782498877226928933022_i128 as u8;
_34.2 = _26 - _26;
_16 = _21.0;
RET.fld3 = _29.fld3;
_32 = !RET.fld2;
_38 = RET;
RET.fld2 = _32;
_40 = -_22;
_27 = _18 >> _22;
_7 = !_5;
RET.fld0 = _15;
RET.fld1 = [3795519879574597276_i64,8830447271480434921_i64,8761916638025046863_i64];
_25 = -_40;
_32 = _38.fld2 << _25;
_34.0 = 126_i8 as u8;
RET.fld2 = _32 | _32;
_32 = _38.fld2;
_29.fld3 = !RET.fld3;
_42 = _22 << _6;
_15 = [_6];
_24 = (_30, _34.3, _23.0);
Goto(bb12)
}
bb12 = {
Call(_43 = dump_var(1_usize, 23_usize, Move(_23), 6_usize, Move(_6), 1_usize, Move(_1), 17_usize, Move(_17)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_43 = dump_var(1_usize, 19_usize, Move(_19), 31_usize, Move(_31), 40_usize, Move(_40), 13_usize, Move(_13)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_43 = dump_var(1_usize, 35_usize, Move(_35), 11_usize, Move(_11), 37_usize, Move(_37), 9_usize, Move(_9)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_43 = dump_var(1_usize, 5_usize, Move(_5), 28_usize, Move(_28), 8_usize, Move(_8), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: u128,mut _2: u8,mut _3: i16,mut _4: isize,mut _5: u64,mut _6: [i64; 3],mut _7: *mut isize,mut _8: [i32; 4]) -> (i32, [i64; 5], [i64; 1], u16, [usize; 6]) {
mir! {
type RET = (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _9: i128;
let _10: f64;
let _11: (i128, [i64; 4], i16);
let _12: Adt43;
let _13: u128;
let _14: [i32; 4];
let _15: u16;
let _16: Adt55;
let _17: Adt42;
let _18: u16;
let _19: Adt54;
let _20: u8;
let _21: [i64; 1];
let _22: isize;
let _23: isize;
let _24: i64;
let _25: Adt55;
let _26: isize;
let _27: f64;
let _28: char;
let _29: [i128; 6];
let _30: [usize; 6];
let _31: ();
let _32: ();
{
_5 = _3 as u64;
RET.1 = [9020258712975919360_i64,(-675817589263732717_i64),(-5039830793135385448_i64),8341429244343954946_i64,7385268943608891325_i64];
RET.4 = [7_usize,5_usize,4_usize,9947778768675215557_usize,4_usize,7_usize];
RET.3 = 55569_u16 & 54232_u16;
_12.fld3 = [1619446409671387049_i64,4713802236860978039_i64,6761336353678144716_i64,(-1776084686024525436_i64)];
RET.3 = 26142_u16 >> _2;
_11.1 = [(-2304942067306229070_i64),(-3852368437456544809_i64),(-340875416681233115_i64),1883188643286070779_i64];
RET.2 = [1464185454710574838_i64];
_6 = [1600524845781242387_i64,2116099416402515729_i64,(-525089003689702209_i64)];
RET.0 = _3 as i32;
_12.fld2 = 14832736011254138226564431119366268808_i128;
_12.fld0 = [1247262974963680656_i64,(-4494613466545312360_i64),(-1095302348672571972_i64),(-448030298762200414_i64),(-2993243319288646709_i64)];
_8 = [RET.0,RET.0,RET.0,RET.0];
_6 = [2624506477860134039_i64,(-4770029687732238413_i64),8778043562513123708_i64];
_11 = (_12.fld2, _12.fld3, _3);
_12.fld0 = [7435158393542920167_i64,(-8302307918959504813_i64),1736326191271336092_i64,6467130712173330370_i64,9174071150816792598_i64];
_9 = -_12.fld2;
RET.1 = _12.fld0;
_5 = 3626510735_u32 as u64;
RET.2 = [(-2671584047479684226_i64)];
_12.fld0 = [8395841037321850349_i64,441482166373863358_i64,(-2452705368832719226_i64),8720041318060967910_i64,828201032599855457_i64];
RET.2 = [8212317258487966853_i64];
_3 = 10228716732708129078_usize as i16;
RET.1 = [2332297538070280015_i64,4008359933514904858_i64,7087901159186052887_i64,3065241789093159741_i64,9022089517919727998_i64];
RET.1 = [893493035160206973_i64,(-1952163853686598735_i64),(-2203662506221396323_i64),(-1544577388503746622_i64),6036493934665727064_i64];
Goto(bb1)
}
bb1 = {
_14 = _8;
RET.3 = _2 as u16;
_11.2 = -_3;
RET.1 = [5851032915608213696_i64,2279226219441793335_i64,(-8641515497122394740_i64),3659061048999281119_i64,5930683212317024059_i64];
_11.2 = 0_usize as i16;
RET.0 = 1753234148_i32 - (-624901628_i32);
_2 = 240_u8;
match _11.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
14832736011254138226564431119366268808 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_16.fld2 = !_4;
RET.4 = [6_usize,6_usize,13877857194654379138_usize,5_usize,6171994673488201936_usize,7_usize];
_14 = [RET.0,RET.0,RET.0,RET.0];
_12.fld0 = [8730936388961470704_i64,6864766535547795772_i64,6749257889765221603_i64,(-881571094420210264_i64),(-7913724437838946367_i64)];
_11.0 = _12.fld2;
_16.fld6 = _7;
_16.fld5 = ['\u{c408f}'];
_16.fld4 = (_7, _11.1, RET.0);
_16.fld1 = [1_usize];
RET.1 = [(-6977070057270421191_i64),(-177027783964023875_i64),2927520228449363709_i64,5807922676194629388_i64,(-2110817042018309194_i64)];
_6 = [2521294334214455742_i64,3863018977321228372_i64,5347811133555781633_i64];
match _12.fld2 {
14832736011254138226564431119366268808 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_10 = _4 as f64;
_13 = _1;
_8 = [_16.fld4.2,RET.0,_16.fld4.2,_16.fld4.2];
_9 = _12.fld2;
RET.0 = -_16.fld4.2;
_16.fld0 = !_1;
_11 = (_9, _12.fld3, _3);
_9 = -_12.fld2;
_16.fld1 = [5_usize];
RET.2 = [(-2271862211161199155_i64)];
_16.fld5 = ['\u{6e39}'];
RET.1 = _12.fld0;
_10 = (-4163019496581975598_i64) as f64;
_12 = Adt43 { fld0: RET.1,fld1: _10,fld2: _11.0,fld3: _11.1 };
_15 = !RET.3;
_17 = Adt42::Variant1 { fld0: _5,fld1: _16.fld4,fld2: RET };
RET.4 = Field::<(i32, [i64; 5], [i64; 1], u16, [usize; 6])>(Variant(_17, 1), 2).4;
_16.fld6 = Field::<(*mut isize, [i64; 4], i32)>(Variant(_17, 1), 1).0;
RET.2 = [(-7865408174701036268_i64)];
RET.0 = _16.fld4.2;
_16.fld4.0 = core::ptr::addr_of_mut!(_16.fld2);
_4 = _16.fld2 << Field::<(i32, [i64; 5], [i64; 1], u16, [usize; 6])>(Variant(_17, 1), 2).3;
RET.4 = [10462365839941491836_usize,14041763912214749053_usize,5_usize,11463643267145412812_usize,0_usize,7_usize];
RET.2 = [(-4740401884914524347_i64)];
_2 = !200_u8;
match _12.fld2 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb11,
14832736011254138226564431119366268808 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_16.fld2 = !_4;
RET.4 = [6_usize,6_usize,13877857194654379138_usize,5_usize,6171994673488201936_usize,7_usize];
_14 = [RET.0,RET.0,RET.0,RET.0];
_12.fld0 = [8730936388961470704_i64,6864766535547795772_i64,6749257889765221603_i64,(-881571094420210264_i64),(-7913724437838946367_i64)];
_11.0 = _12.fld2;
_16.fld6 = _7;
_16.fld5 = ['\u{c408f}'];
_16.fld4 = (_7, _11.1, RET.0);
_16.fld1 = [1_usize];
RET.1 = [(-6977070057270421191_i64),(-177027783964023875_i64),2927520228449363709_i64,5807922676194629388_i64,(-2110817042018309194_i64)];
_6 = [2521294334214455742_i64,3863018977321228372_i64,5347811133555781633_i64];
match _12.fld2 {
14832736011254138226564431119366268808 => bb10,
_ => bb9
}
}
bb13 = {
RET.0 = !Field::<(*mut isize, [i64; 4], i32)>(Variant(_17, 1), 1).2;
RET.3 = _15;
_3 = _11.2 ^ _11.2;
_11.0 = _12.fld2 | _9;
_23 = _16.fld2 + _4;
place!(Field::<(i32, [i64; 5], [i64; 1], u16, [usize; 6])>(Variant(_17, 1), 2)).1 = [(-2512778619926775378_i64),7541911805108075312_i64,4571997135684995302_i64,(-1463720940236686944_i64),1768685756884645683_i64];
place!(Field::<u64>(Variant(_17, 1), 0)) = !_5;
SetDiscriminant(_17, 3);
_18 = '\u{42023}' as u16;
_3 = -_11.2;
_1 = _13 - _16.fld0;
_16.fld4 = (_16.fld6, _12.fld3, RET.0);
_6 = [(-3397377812710339474_i64),3453138645670825627_i64,4006650147968965179_i64];
_21 = RET.2;
_16.fld3 = Adt48::Variant1 { fld0: _12.fld1 };
SetDiscriminant(_16.fld3, 2);
RET.1 = _12.fld0;
_5 = !15257942612833764016_u64;
RET.2 = _21;
RET.2 = _21;
_22 = (-74_i8) as isize;
place!(Field::<f32>(Variant(_17, 3), 1)) = _12.fld2 as f32;
_20 = _1 as u8;
match _12.fld2 {
0 => bb8,
1 => bb10,
2 => bb3,
3 => bb9,
4 => bb14,
14832736011254138226564431119366268808 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET.4 = [5_usize,7_usize,2_usize,735998760931794057_usize,7_usize,11295112160579436004_usize];
place!(Field::<[i64; 5]>(Variant(_17, 3), 0)) = [(-1362630256322245741_i64),(-75282052552711757_i64),(-6079798689287444264_i64),(-4718099708155021924_i64),6580304841637026979_i64];
_25.fld5 = _16.fld5;
_25.fld4 = (_16.fld4.0, _12.fld3, RET.0);
_3 = true as i16;
SetDiscriminant(_17, 0);
_25.fld4.1 = [(-3219164353336830221_i64),8282796890942174123_i64,866238632901557127_i64,(-2356082320307561681_i64)];
_26 = -_4;
_29 = [_9,_11.0,_11.0,_12.fld2,_11.0,_9];
_12.fld1 = _10;
Goto(bb17)
}
bb17 = {
Call(_31 = dump_var(2_usize, 1_usize, Move(_1), 15_usize, Move(_15), 9_usize, Move(_9), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_31 = dump_var(2_usize, 21_usize, Move(_21), 5_usize, Move(_5), 29_usize, Move(_29), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(2_usize, 26_usize, Move(_26), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: (*mut isize, [i64; 4], i32),mut _2: u128,mut _3: [i64; 5],mut _4: *mut isize) -> [usize; 1] {
mir! {
type RET = [usize; 1];
let _5: [usize; 1];
let _6: f64;
let _7: f32;
let _8: isize;
let _9: [i64; 3];
let _10: (i128, [i64; 4], i16);
let _11: u32;
let _12: [i64; 4];
let _13: Adt51;
let _14: f32;
let _15: Adt42;
let _16: Adt50;
let _17: [usize; 1];
let _18: Adt52;
let _19: isize;
let _20: Adt48;
let _21: Adt52;
let _22: *mut f64;
let _23: (i128, [i64; 4], i16);
let _24: [char; 1];
let _25: f32;
let _26: ([i64; 5],);
let _27: Adt45;
let _28: (u8, u8, f64, [i64; 4]);
let _29: Adt52;
let _30: isize;
let _31: [char; 1];
let _32: i64;
let _33: *mut [i64; 4];
let _34: isize;
let _35: usize;
let _36: isize;
let _37: i32;
let _38: Adt51;
let _39: ();
let _40: ();
{
_1.1 = [784204652306582998_i64,(-4788859844611592222_i64),(-7007326422359753573_i64),(-249302696681037404_i64)];
_2 = !22231050118267932812791114741948885955_u128;
_1.1 = [(-1959863444127799420_i64),1521920606016828516_i64,3131914304522814993_i64,7300042771901140784_i64];
_1.0 = _4;
_6 = 18600519969436256970798055829832235377_i128 as f64;
_5 = [6_usize];
RET = [6372061875659601715_usize];
_5 = [2978670096104622175_usize];
_4 = _1.0;
_1.1 = [(-2406383607505501578_i64),(-1712858021901914215_i64),(-7773569575607403717_i64),900881094514789410_i64];
_3 = [28817344818557361_i64,(-3594251152708850659_i64),(-1808486399965667429_i64),8191294814256259907_i64,(-2953382988448920015_i64)];
_1.2 = !(-324678638_i32);
RET = [14901772247586419288_usize];
RET = _5;
_2 = 255344637863284090415147828524593666028_u128;
_2 = 279935405938564981514719563924046463254_u128;
_2 = !237424387559725299414759201967163245840_u128;
Goto(bb1)
}
bb1 = {
_9 = [(-2150084632445246033_i64),5033244588494919101_i64,(-1212823603523744167_i64)];
_8 = -(-12_isize);
_8 = 9223372036854775807_isize;
_7 = (-19_i8) as f32;
_4 = _1.0;
_11 = 965069254_u32 >> _2;
_10.2 = (-5124_i16) | 11311_i16;
_10.2 = !(-21467_i16);
_10.2 = false as i16;
_7 = (-93_i8) as f32;
_10 = ((-73623406876366973108428096869967952161_i128), _1.1, 4024_i16);
_12 = [(-5101669299188158389_i64),(-5705646211053390514_i64),(-5805605219018859735_i64),5177605829372143345_i64];
_14 = _11 as f32;
_13 = Adt51::Variant0 { fld0: _1.1 };
SetDiscriminant(_13, 2);
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)).1 = [(-7994903897577942695_i64),(-3495292454004613543_i64),2946136458163399186_i64,(-4508801968749767843_i64)];
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)) = _10;
place!(Field::<i16>(Variant(_13, 2), 4)) = -Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).2;
_5 = [0_usize];
_4 = core::ptr::addr_of_mut!(_8);
match _8 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_12 = _1.1;
_1.1 = [3080132123235989488_i64,3737958123376349040_i64,8940267512296408293_i64,(-8170658661247324764_i64)];
_9 = [9121439803039900895_i64,(-1521850491493825064_i64),1278250629713351699_i64];
place!(Field::<[i64; 1]>(Variant(_13, 2), 6)) = [(-5473545450334315944_i64)];
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)) = (_10.0, _10.1, _10.2);
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)).0 = _10.0 - _10.0;
place!(Field::<Adt45>(Variant(_13, 2), 1)).fld1.2 = [Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0,Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0,_10.0,Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0,_10.0,Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0];
_12 = [(-4509690916883566991_i64),(-6458118462433487014_i64),1602483611551752808_i64,(-8587336475004439481_i64)];
Goto(bb5)
}
bb5 = {
place!(Field::<Adt45>(Variant(_13, 2), 1)).fld1.0.0 = [(-6790036226640797699_i64),(-4831198271048648206_i64),(-6398626828176383112_i64),4134366808373446857_i64,(-8617555733264678446_i64)];
place!(Field::<Adt45>(Variant(_13, 2), 1)).fld1.1 = (-33_i8) << Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0;
_1.1 = [7702061348067845579_i64,1589807590790435354_i64,(-17766968090373158_i64),(-1169365977322113644_i64)];
place!(Field::<Adt45>(Variant(_13, 2), 1)).fld1.0 = (_3,);
Call(place!(Field::<Adt46>(Variant(_13, 2), 5)) = fn4(Field::<Adt45>(Variant(_13, 2), 1).fld1.0.0, Field::<Adt45>(Variant(_13, 2), 1).fld1.1, _14, Field::<Adt45>(Variant(_13, 2), 1).fld1.0.0, _1.0, Field::<Adt45>(Variant(_13, 2), 1).fld1.2, Field::<Adt45>(Variant(_13, 2), 1).fld1.2, Field::<Adt45>(Variant(_13, 2), 1).fld1.0, Field::<Adt45>(Variant(_13, 2), 1).fld1.1, Field::<Adt45>(Variant(_13, 2), 1).fld1.2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)) = (_10.0, _10.1, _10.2);
_22 = core::ptr::addr_of_mut!(_6);
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)).1 = [3920543814930542865_i64,6637944328466840022_i64,(-7066655626877687066_i64),(-518666923580630207_i64)];
_14 = _7 - _7;
place!(Field::<[i64; 1]>(Variant(place!(Field::<Adt46>(Variant(_13, 2), 5)), 3), 0)) = Field::<[i64; 1]>(Variant(_13, 2), 6);
_7 = _14;
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)).2 = _2 as i16;
_23.2 = 2808239278480186436_u64 as i16;
_24 = ['\u{39ada}'];
_10.0 = Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0 | Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0;
_24 = ['\u{a9e16}'];
_1 = (_4, _10.1, 367704105_i32);
_10.2 = Field::<i16>(Variant(_13, 2), 4);
match (*_4) {
9223372036854775807 => bb7,
_ => bb3
}
}
bb7 = {
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)) = _10;
_9 = [(-1783815119233798110_i64),(-4058672200078310443_i64),(-9196802116894497586_i64)];
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)).0 = _10.0 >> _10.0;
_17 = [3333002364106114457_usize];
SetDiscriminant(Field::<Adt46>(Variant(_13, 2), 5), 0);
place!(Field::<Adt45>(Variant(_13, 2), 1)).fld0 = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(place!(Field::<Adt46>(Variant(_13, 2), 5)), 0), 3)).2.0);
place!(Field::<Adt45>(Variant(_13, 2), 1)).fld1.0.0 = [2402088387742703752_i64,(-7848805464317949355_i64),6122073074253692933_i64,6844935432007807571_i64,464708261993226503_i64];
place!(Field::<[char; 5]>(Variant(place!(Field::<Adt46>(Variant(_13, 2), 5)), 0), 1)) = ['\u{19b7c}','\u{6430d}','\u{48352}','\u{5cf4}','\u{87a14}'];
_23.1 = [(-5283375717591863062_i64),(-2059143226563922370_i64),8910997721456272784_i64,4458182125375638380_i64];
place!(Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0)).1 = [4338867032487738760_i64,1611845558696922825_i64,(-7677582173072729540_i64),(-5214944561132055837_i64)];
place!(Field::<bool>(Variant(place!(Field::<Adt46>(Variant(_13, 2), 5)), 0), 0)) = Field::<(i128, [i64; 4], i16)>(Variant(_13, 2), 0).0 != _10.0;
match _1.2 {
0 => bb1,
1 => bb2,
2 => bb5,
367704105 => bb8,
_ => bb4
}
}
bb8 = {
_13 = Adt51::Variant0 { fld0: _1.1 };
_14 = _7 * _7;
_28.3 = _10.1;
Goto(bb9)
}
bb9 = {
_28.2 = _6 + (*_22);
_27.fld1.0.0 = [6072355018299749124_i64,(-5697519030770585434_i64),8435192637569392685_i64,(-2785391001788578095_i64),6521678022841962241_i64];
_28.0 = 54_u8 ^ 143_u8;
_17 = [2_usize];
_21 = Adt52::Variant0 { fld0: (-21_i8),fld1: _10.2,fld2: _9 };
_10 = (78172819185584242517883601972014878494_i128, _23.1, Field::<i16>(Variant(_21, 0), 1));
_26.0 = [1138716990874608918_i64,3337927471987623876_i64,(-3948394091403396971_i64),2184295614114363759_i64,(-2846716379541911693_i64)];
_27.fld1.0 = (_26.0,);
_15 = Adt42::Variant3 { fld0: _26.0,fld1: _14 };
_25 = _14;
_19 = _8;
_6 = _28.2 + _28.2;
_28.1 = false as u8;
_27.fld1.0.0 = _3;
_5 = RET;
_6 = _11 as f64;
place!(Field::<f32>(Variant(_15, 3), 1)) = _7 - _25;
_3 = [(-8523062621979692257_i64),(-4173595517225334687_i64),4911765152549903655_i64,4584352739924634845_i64,6426216715117797243_i64];
_23 = (_10.0, _12, _10.2);
_28.2 = (*_22);
_10 = (_23.0, _12, _23.2);
Goto(bb10)
}
bb10 = {
_8 = _19;
_8 = 7_usize as isize;
_12 = [(-8112562125652344218_i64),4187533903543583309_i64,8655408600866067640_i64,9047614181615921559_i64];
place!(Field::<i16>(Variant(_21, 0), 1)) = _11 as i16;
RET = [6_usize];
RET = [3_usize];
_26.0 = [296926785926199299_i64,6031015680944339403_i64,8274086468619747309_i64,(-1969771414130627601_i64),573010453372083828_i64];
_33 = core::ptr::addr_of_mut!(_1.1);
_30 = _19 ^ _8;
place!(Field::<i8>(Variant(_21, 0), 0)) = -(-39_i8);
place!(Field::<[i64; 3]>(Variant(_21, 0), 2)) = [1570888982304009149_i64,4986881674980719779_i64,2512865976739470301_i64];
_33 = core::ptr::addr_of_mut!((*_33));
_29 = Move(_21);
_18 = Adt52::Variant0 { fld0: Field::<i8>(Variant(_29, 0), 0),fld1: _10.2,fld2: _9 };
Goto(bb11)
}
bb11 = {
place!(Field::<i8>(Variant(_18, 0), 0)) = -Field::<i8>(Variant(_29, 0), 0);
_27.fld1.1 = _1.2 as i8;
_26.0 = _27.fld1.0.0;
_17 = [10843439877225360602_usize];
SetDiscriminant(_18, 1);
_4 = _1.0;
place!(Field::<usize>(Variant(_18, 1), 1)) = 4_usize;
Goto(bb12)
}
bb12 = {
place!(Field::<[usize; 6]>(Variant(_18, 1), 0)) = [Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1)];
_23.1 = [1487108780711046712_i64,6129849445073730293_i64,4785136434989042462_i64,(-2873989641889491368_i64)];
_24 = ['\u{1bfb7}'];
_17 = [Field::<usize>(Variant(_18, 1), 1)];
Goto(bb13)
}
bb13 = {
_21 = Adt52::Variant0 { fld0: _27.fld1.1,fld1: _23.2,fld2: _9 };
_34 = -_19;
place!(Field::<[usize; 6]>(Variant(_18, 1), 0)) = [Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1),Field::<usize>(Variant(_18, 1), 1)];
_17 = [Field::<usize>(Variant(_18, 1), 1)];
_27.fld1.1 = Field::<i8>(Variant(_29, 0), 0) + Field::<i8>(Variant(_21, 0), 0);
_23 = (_10.0, _28.3, Field::<i16>(Variant(_21, 0), 1));
match _19 {
0 => bb9,
9223372036854775807 => bb14,
_ => bb12
}
}
bb14 = {
_31 = ['\u{f403}'];
_34 = _1.2 as isize;
_4 = _1.0;
_18 = Move(_21);
_13 = Adt51::Variant0 { fld0: (*_33) };
_26 = _27.fld1.0;
_1.0 = core::ptr::addr_of_mut!(_30);
_28.0 = _28.1 >> Field::<i16>(Variant(_18, 0), 1);
_29 = Move(_18);
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(3_usize, 17_usize, Move(_17), 31_usize, Move(_31), 10_usize, Move(_10), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(3_usize, 2_usize, Move(_2), 5_usize, Move(_5), 9_usize, Move(_9), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [i64; 5],mut _2: i8,mut _3: f32,mut _4: [i64; 5],mut _5: *mut isize,mut _6: [i128; 6],mut _7: [i128; 6],mut _8: ([i64; 5],),mut _9: i8,mut _10: [i128; 6]) -> Adt46 {
mir! {
type RET = Adt46;
let _11: i16;
let _12: [i64; 5];
let _13: (i128, [i64; 4], i16);
let _14: f64;
let _15: usize;
let _16: isize;
let _17: [usize; 6];
let _18: f64;
let _19: (i128, [i64; 4], i16);
let _20: f64;
let _21: [usize; 1];
let _22: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _23: isize;
let _24: i64;
let _25: (u8, u8, f64, [i64; 4]);
let _26: f64;
let _27: *mut f64;
let _28: Adt56;
let _29: f32;
let _30: Adt56;
let _31: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _32: isize;
let _33: ([i64; 5],);
let _34: Adt47;
let _35: ();
let _36: ();
{
_3 = 276643556269154563346814149834083586108_u128 as f32;
_8 = (_4,);
_6 = [(-156476791237106166122208504491097656450_i128),48450874117133221346004350225478218894_i128,31249377945861754512347867570643500315_i128,(-107126933195117526915584593563780419877_i128),(-50583046236382743152065848147920265363_i128),(-77214547677487281153716814074405142569_i128)];
_10 = _7;
_2 = 16533299603374666139_u64 as i8;
_6 = [122755992525976894968021931519391142417_i128,(-59826140776146390460318657249371843328_i128),(-82041678734858167772428364043479316906_i128),144984225164994971202642174870636271128_i128,40359571070080150993365361589594918826_i128,97116624104773177618219853854462802826_i128];
_3 = 17016117317389237190_u64 as f32;
_3 = _9 as f32;
_3 = 115489626146493177362086474303464324055_u128 as f32;
_6 = [(-71408070538454113214576582900617708757_i128),(-111102218574817278316398270095274901773_i128),(-3820582691815149777935552727998858379_i128),(-84912780085149666725960035354414142951_i128),68538965343849240518377002253149338147_i128,(-33985037762305194443092541700771276285_i128)];
_1 = [(-1583954323562357573_i64),(-5888277101133896660_i64),44534952949722639_i64,(-1972338110306107648_i64),829050351032664264_i64];
_9 = _2;
_6 = [(-81958997115119870122900688445544108918_i128),(-38328119696528832565798751965880768533_i128),8487310621386872591121877404932883926_i128,36950660029233941696210014050542263378_i128,(-63125363041502449937214298285120642001_i128),(-98493747711265141885928654239799013498_i128)];
_12 = [(-8268973827916842201_i64),(-944938408502792380_i64),7689928170251095606_i64,1415800301385363222_i64,(-6495084417387563917_i64)];
_10 = [(-6082953420235226641695820450214944059_i128),(-93237721953467910589306145538060354570_i128),(-111207320630322496247396003828889057258_i128),110735272050307557958707573104279318594_i128,112609674768609650176357209796878548908_i128,80182330337862946411323225316618600169_i128];
_8 = (_12,);
_9 = false as i8;
_13.0 = -121247768414667098806019546956148710443_i128;
_2 = -_9;
_7 = _6;
_11 = 17231_i16 << _2;
_4 = _8.0;
_13.2 = _11 & _11;
_7 = _6;
_13.0 = 92900286999534514413661125142912715949_i128 - 161182689338773521776284759877425694875_i128;
_3 = 5823200963662574453_usize as f32;
Call(_12 = fn5(_6, _13.0, _5, _8, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8.0 = _1;
_8 = (_1,);
_13.2 = _11;
_8.0 = _12;
_6 = _10;
_2 = _9;
_8 = (_12,);
_13.1 = [5014413246472465488_i64,960768029571366774_i64,(-6624871917009112719_i64),4638725671759108960_i64];
_12 = [7949939764531259461_i64,(-817501151242822188_i64),3649753554182861749_i64,8953943192457344738_i64,(-3313342217630161124_i64)];
Goto(bb2)
}
bb2 = {
_1 = _12;
_14 = 13660908901945529103_u64 as f64;
_4 = _12;
_13.1 = [(-6608846069830861714_i64),(-2637899765328042518_i64),(-4843380127547970628_i64),(-3191636377053656324_i64)];
_8.0 = [4521212175729127856_i64,(-7647900633608524127_i64),(-2737563439946445572_i64),(-3050635970094580311_i64),(-8176041633177266507_i64)];
RET = Adt46::Variant1 { fld0: _9 };
_4 = [4091955723286791053_i64,(-2152725820894811782_i64),570332562203829283_i64,858479175755411759_i64,(-3716231517222393933_i64)];
_3 = Field::<i8>(Variant(RET, 1), 0) as f32;
_1 = [4737244893931115095_i64,(-3059916759934192472_i64),(-5599451203156488176_i64),(-2017066891236370433_i64),7894764099882998600_i64];
_3 = 83_u8 as f32;
_13.1 = [8971897912958559454_i64,1141464108521067955_i64,7749918858609167267_i64,5342529332616556632_i64];
_7 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
Goto(bb3)
}
bb3 = {
_13.2 = 560964848_u32 as i16;
_16 = (-9223372036854775808_isize);
SetDiscriminant(RET, 1);
_16 = _11 as isize;
RET = Adt46::Variant1 { fld0: _2 };
_12 = [7348886030567935008_i64,8216207520402674777_i64,(-1035690765550537614_i64),(-2922626659809249344_i64),5726508872269778732_i64];
_11 = _13.2;
_15 = 1502014337110144398_usize << _9;
_13.2 = 452329179885453916_u64 as i16;
_2 = !_9;
_10 = _6;
Goto(bb4)
}
bb4 = {
_4 = [(-4820737915312617315_i64),5171635970448100691_i64,7453720649656400105_i64,(-4739214756312812374_i64),2219344487607831546_i64];
_8 = (_1,);
_18 = -_14;
_4 = [(-3010940489277662400_i64),(-4397461943566171382_i64),(-759162358419289780_i64),779569641207126815_i64,123510887052093164_i64];
_8.0 = [(-3875612358213397699_i64),(-2678486210976053996_i64),1201302225345265710_i64,443288530365903209_i64,(-7772043109775165012_i64)];
_9 = _2 - _2;
_4 = [8666582226442629792_i64,2184741318457155280_i64,(-3742420506519099479_i64),3872185459329385822_i64,(-3597946089257270379_i64)];
_9 = _2;
_2 = -_9;
_13.2 = _11 ^ _11;
_20 = _14 + _18;
_19.0 = _11 as i128;
_1 = [8318327139930171443_i64,6793443544951143849_i64,2097631396341074989_i64,(-7580426751598705238_i64),(-6006532242905867755_i64)];
_18 = _14 * _14;
_6 = [_19.0,_13.0,_19.0,_19.0,_13.0,_19.0];
_15 = 10515474881317010690_usize;
SetDiscriminant(RET, 0);
place!(Field::<*const *mut i8>(Variant(RET, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).2.0);
_19 = (_13.0, _13.1, _13.2);
Call(_4 = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_19.0 = true as i128;
_10 = [_19.0,_19.0,_13.0,_19.0,_13.0,_13.0];
_23 = true as isize;
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [(-8055935920816510255_i64),8901470416850853002_i64,(-8546586860062759029_i64),(-4426502981684451809_i64),(-21642250916330120_i64)];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).0 = 5184_u16;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).1.0 = core::ptr::addr_of_mut!(_2);
_13.0 = 169310568509358397976886278065091440600_u128 as i128;
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)) = _8;
_20 = _14;
_25 = (80_u8, 209_u8, _18, _19.1);
_2 = 2939930988_u32 as i8;
_8.0 = _12;
_25.3 = [(-2447952395079319675_i64),(-7263464579503760471_i64),(-4801879325191333807_i64),(-4064733315438725706_i64)];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).2.0 = core::ptr::addr_of_mut!(_9);
place!(Field::<[char; 5]>(Variant(RET, 0), 1)) = ['\u{d472c}','\u{91e8b}','\u{6fd88}','\u{6d74e}','\u{54a36}'];
_19.2 = _13.2 ^ _13.2;
_19.1 = _25.3;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).0 = 18570_u16 - 18884_u16;
_22.1 = _8.0;
_6 = [_19.0,_13.0,_19.0,_19.0,_13.0,_19.0];
_6 = [_19.0,_19.0,_19.0,_19.0,_13.0,_19.0];
_24 = !(-3231643777841265349_i64);
_19 = (_13.0, _25.3, _13.2);
Call(_28.fld1 = fn9(_13, _19.0, _4, _4, _14, _25.0, _16, _5, Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3), Field::<([i64; 5],)>(Variant(RET, 0), 2)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_15 = 4_usize;
_21 = [_15];
_26 = -_18;
_12[_15] = -_8.0[_15];
_19.0 = _7[_15];
_22.4 = [_15,_15,_15,_15,_15,_15];
_25.3 = [_12[_15],_12[_15],_22.1[_15],_4[_15]];
_31.2 = [_8.0[_15]];
_27 = core::ptr::addr_of_mut!(_26);
_31.4[_15] = !_22.4[_15];
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [_4[_15],_8.0[_15],_22.1[_15],_4[_15],_4[_15]];
_12 = _22.1;
_28.fld3 = !_25.0;
Goto(bb7)
}
bb7 = {
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).1.0 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3).2.0;
_31.4 = [_15,_15,_15,_15,_22.4[_15],_15];
_31.0 = _4[_15] as i32;
_8.0 = [_12[_15],_22.1[_15],_4[_15],_12[_15],Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15]];
_31.1[_15] = Field::<[char; 5]>(Variant(RET, 0), 1)[_15] as i64;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3).2.0,);
_30 = Adt56 { fld0: _21,fld1: _28.fld1,fld2: 4198102058_u32,fld3: _25.1 };
_24 = Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15];
_28.fld2 = _30.fld2 * _30.fld2;
_13.2 = _19.2 ^ _11;
_13 = (_7[_15], _19.1, _19.2);
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [_24,_31.1[_15],_4[_15],_4[_15],_22.1[_15]];
match Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15] {
0 => bb5,
1 => bb8,
5726508872269778732 => bb10,
_ => bb9
}
}
bb8 = {
_15 = 4_usize;
_21 = [_15];
_26 = -_18;
_12[_15] = -_8.0[_15];
_19.0 = _7[_15];
_22.4 = [_15,_15,_15,_15,_15,_15];
_25.3 = [_12[_15],_12[_15],_22.1[_15],_4[_15]];
_31.2 = [_8.0[_15]];
_27 = core::ptr::addr_of_mut!(_26);
_31.4[_15] = !_22.4[_15];
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [_4[_15],_8.0[_15],_22.1[_15],_4[_15],_4[_15]];
_12 = _22.1;
_28.fld3 = !_25.0;
Goto(bb7)
}
bb9 = {
_8.0 = _1;
_8 = (_1,);
_13.2 = _11;
_8.0 = _12;
_6 = _10;
_2 = _9;
_8 = (_12,);
_13.1 = [5014413246472465488_i64,960768029571366774_i64,(-6624871917009112719_i64),4638725671759108960_i64];
_12 = [7949939764531259461_i64,(-817501151242822188_i64),3649753554182861749_i64,8953943192457344738_i64,(-3313342217630161124_i64)];
Goto(bb2)
}
bb10 = {
_19.2 = _11 * _13.2;
_22.2 = _31.2;
_19.1 = [_24,_31.1[_15],_4[_15],_24];
_16 = !_23;
_5 = core::ptr::addr_of_mut!(_16);
_8.0 = [_31.1[_15],_1[_15],_22.1[_15],_31.1[_15],_12[_15]];
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0[_15] = -_22.1[_15];
_12[_15] = !_31.1[_15];
_28.fld0 = [_15];
match _22.1[_15] {
0 => bb2,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
5726508872269778732 => bb17,
_ => bb16
}
}
bb11 = {
_1 = _12;
_14 = 13660908901945529103_u64 as f64;
_4 = _12;
_13.1 = [(-6608846069830861714_i64),(-2637899765328042518_i64),(-4843380127547970628_i64),(-3191636377053656324_i64)];
_8.0 = [4521212175729127856_i64,(-7647900633608524127_i64),(-2737563439946445572_i64),(-3050635970094580311_i64),(-8176041633177266507_i64)];
RET = Adt46::Variant1 { fld0: _9 };
_4 = [4091955723286791053_i64,(-2152725820894811782_i64),570332562203829283_i64,858479175755411759_i64,(-3716231517222393933_i64)];
_3 = Field::<i8>(Variant(RET, 1), 0) as f32;
_1 = [4737244893931115095_i64,(-3059916759934192472_i64),(-5599451203156488176_i64),(-2017066891236370433_i64),7894764099882998600_i64];
_3 = 83_u8 as f32;
_13.1 = [8971897912958559454_i64,1141464108521067955_i64,7749918858609167267_i64,5342529332616556632_i64];
_7 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
Goto(bb3)
}
bb12 = {
_15 = 4_usize;
_21 = [_15];
_26 = -_18;
_12[_15] = -_8.0[_15];
_19.0 = _7[_15];
_22.4 = [_15,_15,_15,_15,_15,_15];
_25.3 = [_12[_15],_12[_15],_22.1[_15],_4[_15]];
_31.2 = [_8.0[_15]];
_27 = core::ptr::addr_of_mut!(_26);
_31.4[_15] = !_22.4[_15];
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [_4[_15],_8.0[_15],_22.1[_15],_4[_15],_4[_15]];
_12 = _22.1;
_28.fld3 = !_25.0;
Goto(bb7)
}
bb13 = {
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).1.0 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3).2.0;
_31.4 = [_15,_15,_15,_15,_22.4[_15],_15];
_31.0 = _4[_15] as i32;
_8.0 = [_12[_15],_22.1[_15],_4[_15],_12[_15],Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15]];
_31.1[_15] = Field::<[char; 5]>(Variant(RET, 0), 1)[_15] as i64;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3).2.0,);
_30 = Adt56 { fld0: _21,fld1: _28.fld1,fld2: 4198102058_u32,fld3: _25.1 };
_24 = Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15];
_28.fld2 = _30.fld2 * _30.fld2;
_13.2 = _19.2 ^ _11;
_13 = (_7[_15], _19.1, _19.2);
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [_24,_31.1[_15],_4[_15],_4[_15],_22.1[_15]];
match Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15] {
0 => bb5,
1 => bb8,
5726508872269778732 => bb10,
_ => bb9
}
}
bb14 = {
_15 = 4_usize;
_21 = [_15];
_26 = -_18;
_12[_15] = -_8.0[_15];
_19.0 = _7[_15];
_22.4 = [_15,_15,_15,_15,_15,_15];
_25.3 = [_12[_15],_12[_15],_22.1[_15],_4[_15]];
_31.2 = [_8.0[_15]];
_27 = core::ptr::addr_of_mut!(_26);
_31.4[_15] = !_22.4[_15];
place!(Field::<([i64; 5],)>(Variant(RET, 0), 2)).0 = [_4[_15],_8.0[_15],_22.1[_15],_4[_15],_4[_15]];
_12 = _22.1;
_28.fld3 = !_25.0;
Goto(bb7)
}
bb15 = {
_8.0 = _1;
_8 = (_1,);
_13.2 = _11;
_8.0 = _12;
_6 = _10;
_2 = _9;
_8 = (_12,);
_13.1 = [5014413246472465488_i64,960768029571366774_i64,(-6624871917009112719_i64),4638725671759108960_i64];
_12 = [7949939764531259461_i64,(-817501151242822188_i64),3649753554182861749_i64,8953943192457344738_i64,(-3313342217630161124_i64)];
Goto(bb2)
}
bb16 = {
_4 = [(-4820737915312617315_i64),5171635970448100691_i64,7453720649656400105_i64,(-4739214756312812374_i64),2219344487607831546_i64];
_8 = (_1,);
_18 = -_14;
_4 = [(-3010940489277662400_i64),(-4397461943566171382_i64),(-759162358419289780_i64),779569641207126815_i64,123510887052093164_i64];
_8.0 = [(-3875612358213397699_i64),(-2678486210976053996_i64),1201302225345265710_i64,443288530365903209_i64,(-7772043109775165012_i64)];
_9 = _2 - _2;
_4 = [8666582226442629792_i64,2184741318457155280_i64,(-3742420506519099479_i64),3872185459329385822_i64,(-3597946089257270379_i64)];
_9 = _2;
_2 = -_9;
_13.2 = _11 ^ _11;
_20 = _14 + _18;
_19.0 = _11 as i128;
_1 = [8318327139930171443_i64,6793443544951143849_i64,2097631396341074989_i64,(-7580426751598705238_i64),(-6006532242905867755_i64)];
_18 = _14 * _14;
_6 = [_19.0,_13.0,_19.0,_19.0,_13.0,_19.0];
_15 = 10515474881317010690_usize;
SetDiscriminant(RET, 0);
place!(Field::<*const *mut i8>(Variant(RET, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(RET, 0), 3)).2.0);
_19 = (_13.0, _13.1, _13.2);
Call(_4 = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb17 = {
_8.0 = [_22.1[_15],_1[_15],_1[_15],_31.1[_15],_4[_15]];
_28.fld3 = !_30.fld3;
_13.1 = [_31.1[_15],_31.1[_15],Field::<([i64; 5],)>(Variant(RET, 0), 2).0[_15],_12[_15]];
_10 = _7;
_31.0 = 2036070987_i32 & (-141358002_i32);
RET = Adt46::Variant3 { fld0: _22.2 };
_30.fld3 = !_28.fld3;
_4[_15] = _7[_15] as i64;
_30.fld1 = [_8.0[_15],_22.1[_15],_1[_15]];
Goto(bb18)
}
bb18 = {
Call(_35 = dump_var(4_usize, 21_usize, Move(_21), 23_usize, Move(_23), 13_usize, Move(_13), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_35 = dump_var(4_usize, 6_usize, Move(_6), 1_usize, Move(_1), 15_usize, Move(_15), 12_usize, Move(_12)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [i128; 6],mut _2: i128,mut _3: *mut isize,mut _4: ([i64; 5],),mut _5: *mut isize) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _6: bool;
let _7: [usize; 6];
let _8: f64;
let _9: i128;
let _10: (*mut i8,);
let _11: [i64; 3];
let _12: Adt46;
let _13: [i64; 1];
let _14: bool;
let _15: f64;
let _16: i8;
let _17: u8;
let _18: *mut f64;
let _19: f32;
let _20: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _21: i16;
let _22: (*mut i8,);
let _23: (u8, u8, f64, [i64; 4]);
let _24: f32;
let _25: [usize; 1];
let _26: (*mut isize, [i64; 4], i32);
let _27: (u8, u8, f64, [i64; 4]);
let _28: i16;
let _29: bool;
let _30: u32;
let _31: ();
let _32: ();
{
_3 = _5;
RET = [(-321510497885314563_i64),5637437489707713056_i64,972029767196289475_i64,(-4674188272912795645_i64),2959009565738484948_i64];
_4 = (RET,);
RET = [(-6977211247881255132_i64),4103590128859311952_i64,(-4044029781006677455_i64),(-3638668277289998876_i64),5293950211289475082_i64];
_6 = false;
_5 = _3;
_1 = [_2,_2,_2,_2,_2,_2];
_4 = (RET,);
_4 = (RET,);
RET = [(-1566363305987313884_i64),(-5486546017766659051_i64),(-8628287141076396958_i64),(-4131257725647882476_i64),(-234605212862306724_i64)];
_2 = (-145691999075240808439139986830769384961_i128);
_2 = (-9223372036854775808_isize) as i128;
_2 = (-65428070731100354245982400413976451955_i128);
_6 = !false;
_1 = [_2,_2,_2,_2,_2,_2];
_5 = _3;
_3 = _5;
RET = _4.0;
_1 = [_2,_2,_2,_2,_2,_2];
_3 = _5;
_9 = _2 ^ _2;
_7 = [7416760081017364367_usize,39160487069320833_usize,5470118739790531660_usize,3_usize,16050663307488953347_usize,5_usize];
RET = _4.0;
match _2 {
0 => bb1,
274854296189838109217392207017791759501 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_1 = [_2,_9,_9,_9,_9,_9];
_4.0 = [5581621701620944401_i64,4850611650285506124_i64,(-7235565100999658812_i64),1053317167657648270_i64,738678599772561831_i64];
_11 = [7893549081502952864_i64,(-3341775533372068623_i64),2433456693407069889_i64];
_4.0 = RET;
_9 = _2 | _2;
_12 = Adt46::Variant1 { fld0: (-30_i8) };
_4 = (RET,);
RET = _4.0;
_15 = 9223372036854775807_isize as f64;
_6 = !false;
_8 = _15 + _15;
_9 = !_2;
_18 = core::ptr::addr_of_mut!(_15);
_10.0 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_12, 1), 0)));
Goto(bb4)
}
bb4 = {
place!(Field::<i8>(Variant(_12, 1), 0)) = 160473474184072802499258348052278475101_u128 as i8;
_17 = 73_u8;
_2 = _9;
Call(RET = fn6(_7, _5, _5, _3, _3, Move(_12), _10.0, _11, _3, _5, _3, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_20.2 = [8580772198127918994_i64];
_14 = _17 > _17;
_7 = [12667577422992602972_usize,2_usize,7_usize,6528132964630094368_usize,3508121470903174735_usize,4_usize];
_9 = _2 - _2;
_20.0 = 1850341032_i32;
_20.3 = 53524_u16;
_9 = (-9223372036854775808_isize) as i128;
_6 = _14 > _14;
_6 = !_14;
_20.4 = _7;
_22.0 = _10.0;
_22.0 = core::ptr::addr_of_mut!(_16);
_20.0 = !(-78713405_i32);
RET = [(-7286464288273838696_i64),140664431084562409_i64,7574414919603202058_i64,(-2420334689794743354_i64),8441457682250201557_i64];
_21 = (-8963_i16) & (-21393_i16);
_2 = -_9;
_21 = -(-28124_i16);
_19 = _9 as f32;
_23.2 = -(*_18);
_6 = _14 & _14;
match _20.3 {
53524 => bb7,
_ => bb6
}
}
bb6 = {
_1 = [_2,_9,_9,_9,_9,_9];
_4.0 = [5581621701620944401_i64,4850611650285506124_i64,(-7235565100999658812_i64),1053317167657648270_i64,738678599772561831_i64];
_11 = [7893549081502952864_i64,(-3341775533372068623_i64),2433456693407069889_i64];
_4.0 = RET;
_9 = _2 | _2;
_12 = Adt46::Variant1 { fld0: (-30_i8) };
_4 = (RET,);
RET = _4.0;
_15 = 9223372036854775807_isize as f64;
_6 = !false;
_8 = _15 + _15;
_9 = !_2;
_18 = core::ptr::addr_of_mut!(_15);
_10.0 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_12, 1), 0)));
Goto(bb4)
}
bb7 = {
_20.1 = RET;
_24 = _19 * _19;
_8 = -_15;
_22.0 = _10.0;
_23.2 = _15 - _15;
_13 = [(-6599986043545681440_i64)];
_20.2 = [(-1714045735956175571_i64)];
Goto(bb8)
}
bb8 = {
_20.4 = [14863284113633233406_usize,14724900213661314746_usize,9973123496015377352_usize,6_usize,17444822502102709161_usize,5249601901679009027_usize];
_14 = _6;
_2 = 8426151756300134344_usize as i128;
_9 = (-2861660834161783751_i64) as i128;
_22.0 = _10.0;
_10.0 = core::ptr::addr_of_mut!(_16);
_23.1 = _17 << _2;
_4.0 = [5397963180264395020_i64,3246176210917166440_i64,448283533447506335_i64,(-9008112748274835942_i64),(-4186678338954527330_i64)];
_17 = _23.1;
_20 = (1449736630_i32, RET, _13, 52142_u16, _7);
_21 = 120113101412117765026360027376776866243_u128 as i16;
_19 = _24 * _24;
_26.2 = _20.0;
_20.3 = 22976_u16;
_12 = Adt46::Variant3 { fld0: _13 };
SetDiscriminant(_12, 2);
place!(Field::<[usize; 6]>(Variant(_12, 2), 4)) = [6_usize,8890161953144890450_usize,7_usize,16124720073758126405_usize,3_usize,8455498381425388961_usize];
_23.0 = !_17;
place!(Field::<*mut [i64; 4]>(Variant(_12, 2), 3)) = core::ptr::addr_of_mut!(_23.3);
_12 = Adt46::Variant1 { fld0: (-43_i8) };
_20.2 = [1807867578315884807_i64];
match _26.2 {
0 => bb9,
1449736630 => bb11,
_ => bb10
}
}
bb9 = {
_20.1 = RET;
_24 = _19 * _19;
_8 = -_15;
_22.0 = _10.0;
_23.2 = _15 - _15;
_13 = [(-6599986043545681440_i64)];
_20.2 = [(-1714045735956175571_i64)];
Goto(bb8)
}
bb10 = {
place!(Field::<i8>(Variant(_12, 1), 0)) = 160473474184072802499258348052278475101_u128 as i8;
_17 = 73_u8;
_2 = _9;
Call(RET = fn6(_7, _5, _5, _3, _3, Move(_12), _10.0, _11, _3, _5, _3, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_24 = _19 * _19;
_20.2 = [8414832195486011533_i64];
_23.2 = _15 - (*_18);
_26.0 = _5;
_20.0 = _26.2 >> _17;
_18 = core::ptr::addr_of_mut!(_23.2);
_17 = _23.1;
Goto(bb12)
}
bb12 = {
_22.0 = core::ptr::addr_of_mut!(_16);
_23.2 = -_8;
_25 = [5643622648607811209_usize];
_8 = _15 * (*_18);
_16 = '\u{5ba62}' as i8;
_27.1 = !_23.0;
_21 = 27943_i16 << _26.2;
_21 = 5642730119786939285_usize as i16;
_25 = [7635468992371860390_usize];
_23.2 = _15;
_15 = (*_18);
_27.3 = [(-3280140485990329240_i64),(-4123004522242335747_i64),7871167267294843816_i64,4954839059718886045_i64];
RET = [8469128991594325882_i64,(-1523977447174295059_i64),(-6840914688382473675_i64),5213929494563811472_i64,3607538620669361633_i64];
_23.3 = [2148005569845980091_i64,(-4622565608021196504_i64),4587974586311149774_i64,7338043982167584129_i64];
_7 = [2_usize,6_usize,2_usize,5886757534231086497_usize,17937357389866893094_usize,9673822398286217217_usize];
_10 = (_22.0,);
_23.1 = _17;
_26.0 = _3;
_14 = _6;
_3 = _26.0;
match _26.2 {
0 => bb13,
1 => bb14,
1449736630 => bb16,
_ => bb15
}
}
bb13 = {
_1 = [_2,_9,_9,_9,_9,_9];
_4.0 = [5581621701620944401_i64,4850611650285506124_i64,(-7235565100999658812_i64),1053317167657648270_i64,738678599772561831_i64];
_11 = [7893549081502952864_i64,(-3341775533372068623_i64),2433456693407069889_i64];
_4.0 = RET;
_9 = _2 | _2;
_12 = Adt46::Variant1 { fld0: (-30_i8) };
_4 = (RET,);
RET = _4.0;
_15 = 9223372036854775807_isize as f64;
_6 = !false;
_8 = _15 + _15;
_9 = !_2;
_18 = core::ptr::addr_of_mut!(_15);
_10.0 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_12, 1), 0)));
Goto(bb4)
}
bb14 = {
place!(Field::<i8>(Variant(_12, 1), 0)) = 160473474184072802499258348052278475101_u128 as i8;
_17 = 73_u8;
_2 = _9;
Call(RET = fn6(_7, _5, _5, _3, _3, Move(_12), _10.0, _11, _3, _5, _3, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_1 = [_2,_9,_9,_9,_9,_9];
_4.0 = [5581621701620944401_i64,4850611650285506124_i64,(-7235565100999658812_i64),1053317167657648270_i64,738678599772561831_i64];
_11 = [7893549081502952864_i64,(-3341775533372068623_i64),2433456693407069889_i64];
_4.0 = RET;
_9 = _2 | _2;
_12 = Adt46::Variant1 { fld0: (-30_i8) };
_4 = (RET,);
RET = _4.0;
_15 = 9223372036854775807_isize as f64;
_6 = !false;
_8 = _15 + _15;
_9 = !_2;
_18 = core::ptr::addr_of_mut!(_15);
_10.0 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_12, 1), 0)));
Goto(bb4)
}
bb16 = {
_26.2 = -_20.0;
_20.4 = [823198811682542389_usize,6807593744337814881_usize,7_usize,7_usize,4_usize,8688540853655290281_usize];
Goto(bb17)
}
bb17 = {
Call(_31 = dump_var(5_usize, 13_usize, Move(_13), 16_usize, Move(_16), 25_usize, Move(_25), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_31 = dump_var(5_usize, 7_usize, Move(_7), 1_usize, Move(_1), 2_usize, Move(_2), 32_usize, _32), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [usize; 6],mut _2: *mut isize,mut _3: *mut isize,mut _4: *mut isize,mut _5: *mut isize,mut _6: Adt46,mut _7: *mut i8,mut _8: [i64; 3],mut _9: *mut isize,mut _10: *mut isize,mut _11: *mut isize,mut _12: [i128; 6]) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _13: i64;
let _14: i8;
let _15: i128;
let _16: isize;
let _17: [i64; 1];
let _18: i64;
let _19: *mut i8;
let _20: isize;
let _21: bool;
let _22: *mut f64;
let _23: [i32; 4];
let _24: Adt46;
let _25: u8;
let _26: f64;
let _27: [i64; 1];
let _28: i32;
let _29: u64;
let _30: Adt49;
let _31: isize;
let _32: u16;
let _33: char;
let _34: (*mut isize, [i64; 4], i32);
let _35: u16;
let _36: &'static f32;
let _37: Adt41;
let _38: [i128; 6];
let _39: Adt43;
let _40: Adt43;
let _41: isize;
let _42: char;
let _43: *mut i8;
let _44: f32;
let _45: ();
let _46: ();
{
SetDiscriminant(_6, 3);
RET = [3696157987457014167_i64,2394683102679308157_i64,1831022704655048519_i64,(-7895224796996545286_i64),1680988095062411900_i64];
RET = [2423940210323277742_i64,(-4759494400269634879_i64),6031289364448007787_i64,(-1360003300305156870_i64),1007094434900669217_i64];
_1 = [6047333530448231245_usize,3_usize,5_usize,5_usize,8603255785920133053_usize,1_usize];
_10 = _5;
place!(Field::<[i64; 1]>(Variant(_6, 3), 0)) = [(-7935001441955476763_i64)];
_9 = _11;
_12 = [(-32073206125073653801506358637837636503_i128),(-37672917905635778610669255913271563166_i128),24290325540172310932596446762307714338_i128,26963103378682247985888202109928328407_i128,60108173516784398438122243728655366646_i128,(-13617561471042861736486614474863155539_i128)];
Call(_4 = fn7(_11, _9, _5, _2, _5, _10, _3, _5, _10, _1, _9, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = [5724277590211016941_i64,7215985537228262292_i64,(-8066529324606806336_i64)];
SetDiscriminant(_6, 0);
_13 = 123_u8 as i64;
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
place!(Field::<bool>(Variant(_6, 0), 0)) = true;
Goto(bb2)
}
bb2 = {
_15 = Field::<bool>(Variant(_6, 0), 0) as i128;
_1 = [1_usize,7658609674345660031_usize,15435701350977063846_usize,1_usize,2_usize,4_usize];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).0 = 36170_u16;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (_7,);
_1 = [7_usize,153640661828514669_usize,1212514656952260075_usize,1_usize,0_usize,3_usize];
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{1676d}','\u{c6dbc}','\u{1e564}','\u{331}','\u{4b123}'];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = _7;
place!(Field::<*const *mut i8>(Variant(_6, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0);
_8 = [_13,_13,_13];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0,);
_3 = _10;
RET = Field::<([i64; 5],)>(Variant(_6, 0), 2).0;
RET = [_13,_13,_13,_13,_13];
place!(Field::<bool>(Variant(_6, 0), 0)) = !false;
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{d393}','\u{2bf6f}','\u{10ba90}','\u{1261d}','\u{8494a}'];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).1.0,);
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{1e10c}','\u{d7210}','\u{24f4c}','\u{46868}','\u{22df3}'];
_14 = -89_i8;
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{d03f4}','\u{69840}','\u{e3b3}','\u{23d58}','\u{4e289}'];
_11 = _5;
_1 = [14601228660546606913_usize,4_usize,2228117845546834285_usize,7_usize,16743999012634545621_usize,11660900036097124463_usize];
_14 = (-6726_i16) as i8;
_13 = -(-4058917693815562084_i64);
_7 = core::ptr::addr_of_mut!(_14);
_16 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
Goto(bb3)
}
bb3 = {
_7 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0;
_5 = _11;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
_8 = [_13,_13,_13];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0,);
_2 = _11;
_7 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).1.0,);
_15 = !(-166569259558186184376751786924866661777_i128);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0 = core::ptr::addr_of_mut!(_14);
_3 = _4;
_8 = [_13,_13,_13];
_2 = _9;
RET = [_13,_13,_13,_13,_13];
_2 = _11;
match Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
36170 => bb7,
_ => bb6
}
}
bb4 = {
_15 = Field::<bool>(Variant(_6, 0), 0) as i128;
_1 = [1_usize,7658609674345660031_usize,15435701350977063846_usize,1_usize,2_usize,4_usize];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).0 = 36170_u16;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (_7,);
_1 = [7_usize,153640661828514669_usize,1212514656952260075_usize,1_usize,0_usize,3_usize];
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{1676d}','\u{c6dbc}','\u{1e564}','\u{331}','\u{4b123}'];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = _7;
place!(Field::<*const *mut i8>(Variant(_6, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0);
_8 = [_13,_13,_13];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0,);
_3 = _10;
RET = Field::<([i64; 5],)>(Variant(_6, 0), 2).0;
RET = [_13,_13,_13,_13,_13];
place!(Field::<bool>(Variant(_6, 0), 0)) = !false;
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{d393}','\u{2bf6f}','\u{10ba90}','\u{1261d}','\u{8494a}'];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).1.0,);
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{1e10c}','\u{d7210}','\u{24f4c}','\u{46868}','\u{22df3}'];
_14 = -89_i8;
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{d03f4}','\u{69840}','\u{e3b3}','\u{23d58}','\u{4e289}'];
_11 = _5;
_1 = [14601228660546606913_usize,4_usize,2228117845546834285_usize,7_usize,16743999012634545621_usize,11660900036097124463_usize];
_14 = (-6726_i16) as i8;
_13 = -(-4058917693815562084_i64);
_7 = core::ptr::addr_of_mut!(_14);
_16 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
Goto(bb3)
}
bb5 = {
_8 = [5724277590211016941_i64,7215985537228262292_i64,(-8066529324606806336_i64)];
SetDiscriminant(_6, 0);
_13 = 123_u8 as i64;
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
place!(Field::<bool>(Variant(_6, 0), 0)) = true;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_1 = [0_usize,4_usize,15307949119684182830_usize,5_usize,1787112657485061995_usize,1_usize];
_19 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0;
_20 = !_16;
_11 = _5;
_24 = Adt46::Variant1 { fld0: _14 };
Goto(bb8)
}
bb8 = {
_21 = _20 < _20;
_3 = _9;
_7 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).1.0;
_9 = core::ptr::addr_of_mut!(_20);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = _7;
_24 = Adt46::Variant0 { fld0: Field::<bool>(Variant(_6, 0), 0),fld1: Field::<[char; 5]>(Variant(_6, 0), 1),fld2: Field::<([i64; 5],)>(Variant(_6, 0), 2),fld3: Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3),fld4: Field::<*const *mut i8>(Variant(_6, 0), 4) };
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0 = core::ptr::addr_of_mut!(_14);
_19 = core::ptr::addr_of_mut!(_14);
place!(Field::<[char; 5]>(Variant(_24, 0), 1)) = Field::<[char; 5]>(Variant(_6, 0), 1);
_17 = [_13];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_24, 0), 3)).1.0 = core::ptr::addr_of_mut!((*_19));
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = _19;
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = Field::<([i64; 5],)>(Variant(_24, 0), 2);
_8 = [_13,_13,_13];
_21 = Field::<bool>(Variant(_6, 0), 0) | Field::<bool>(Variant(_24, 0), 0);
_4 = core::ptr::addr_of_mut!(_16);
_4 = _2;
place!(Field::<*const *mut i8>(Variant(_6, 0), 4)) = Field::<*const *mut i8>(Variant(_24, 0), 4);
RET = [_13,_13,_13,_13,_13];
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).0 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_24, 0), 3).0 % Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_24, 0), 3).0;
_18 = _13 & _13;
SetDiscriminant(_24, 0);
place!(Field::<*const *mut i8>(Variant(_6, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0);
Goto(bb9)
}
bb9 = {
_2 = _10;
_23 = [(-1247386925_i32),(-2031413955_i32),(-894385428_i32),1981419911_i32];
_26 = (*_19) as f64;
_21 = Field::<bool>(Variant(_6, 0), 0);
SetDiscriminant(_6, 3);
_20 = 3074229985_u32 as isize;
_12 = [_15,_15,_15,_15,_15,_15];
place!(Field::<bool>(Variant(_24, 0), 0)) = !_21;
_12 = [_15,_15,_15,_15,_15,_15];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_24, 0), 3)).1 = (_7,);
_28 = -1615584960_i32;
_9 = core::ptr::addr_of_mut!(_16);
_27 = [_18];
_24 = Adt46::Variant1 { fld0: _14 };
place!(Field::<i8>(Variant(_24, 1), 0)) = (*_19) | _14;
_7 = _19;
_10 = _2;
_20 = _16;
_31 = (*_9) * (*_9);
_17 = [_18];
Goto(bb10)
}
bb10 = {
_4 = _10;
_27 = [_13];
_15 = -169826355122411120167132508805414659644_i128;
_21 = true;
_17 = [_13];
_39.fld2 = _15;
_35 = 9232_u16;
_39.fld1 = -_26;
SetDiscriminant(_24, 3);
_22 = core::ptr::addr_of_mut!(_26);
_37 = Adt41::Variant0 { fld0: _12,fld1: _26,fld2: _31,fld3: RET,fld4: _8 };
_14 = (-53_i8) + (-124_i8);
_8 = [_18,_18,_18];
_19 = core::ptr::addr_of_mut!((*_19));
_40.fld2 = _28 as i128;
_13 = !_18;
_4 = core::ptr::addr_of_mut!(_20);
_2 = core::ptr::addr_of_mut!(_20);
match _35 {
0 => bb7,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
9232 => bb18,
_ => bb17
}
}
bb11 = {
_2 = _10;
_23 = [(-1247386925_i32),(-2031413955_i32),(-894385428_i32),1981419911_i32];
_26 = (*_19) as f64;
_21 = Field::<bool>(Variant(_6, 0), 0);
SetDiscriminant(_6, 3);
_20 = 3074229985_u32 as isize;
_12 = [_15,_15,_15,_15,_15,_15];
place!(Field::<bool>(Variant(_24, 0), 0)) = !_21;
_12 = [_15,_15,_15,_15,_15,_15];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_24, 0), 3)).1 = (_7,);
_28 = -1615584960_i32;
_9 = core::ptr::addr_of_mut!(_16);
_27 = [_18];
_24 = Adt46::Variant1 { fld0: _14 };
place!(Field::<i8>(Variant(_24, 1), 0)) = (*_19) | _14;
_7 = _19;
_10 = _2;
_20 = _16;
_31 = (*_9) * (*_9);
_17 = [_18];
Goto(bb10)
}
bb12 = {
_8 = [5724277590211016941_i64,7215985537228262292_i64,(-8066529324606806336_i64)];
SetDiscriminant(_6, 0);
_13 = 123_u8 as i64;
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
place!(Field::<bool>(Variant(_6, 0), 0)) = true;
Goto(bb2)
}
bb13 = {
_1 = [0_usize,4_usize,15307949119684182830_usize,5_usize,1787112657485061995_usize,1_usize];
_19 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0;
_20 = !_16;
_11 = _5;
_24 = Adt46::Variant1 { fld0: _14 };
Goto(bb8)
}
bb14 = {
Return()
}
bb15 = {
_8 = [5724277590211016941_i64,7215985537228262292_i64,(-8066529324606806336_i64)];
SetDiscriminant(_6, 0);
_13 = 123_u8 as i64;
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
place!(Field::<bool>(Variant(_6, 0), 0)) = true;
Goto(bb2)
}
bb16 = {
_15 = Field::<bool>(Variant(_6, 0), 0) as i128;
_1 = [1_usize,7658609674345660031_usize,15435701350977063846_usize,1_usize,2_usize,4_usize];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).0 = 36170_u16;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (_7,);
_1 = [7_usize,153640661828514669_usize,1212514656952260075_usize,1_usize,0_usize,3_usize];
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{1676d}','\u{c6dbc}','\u{1e564}','\u{331}','\u{4b123}'];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1.0 = _7;
place!(Field::<*const *mut i8>(Variant(_6, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0);
_8 = [_13,_13,_13];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0,);
_3 = _10;
RET = Field::<([i64; 5],)>(Variant(_6, 0), 2).0;
RET = [_13,_13,_13,_13,_13];
place!(Field::<bool>(Variant(_6, 0), 0)) = !false;
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{d393}','\u{2bf6f}','\u{10ba90}','\u{1261d}','\u{8494a}'];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).1.0,);
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{1e10c}','\u{d7210}','\u{24f4c}','\u{46868}','\u{22df3}'];
_14 = -89_i8;
place!(Field::<[char; 5]>(Variant(_6, 0), 1)) = ['\u{d03f4}','\u{69840}','\u{e3b3}','\u{23d58}','\u{4e289}'];
_11 = _5;
_1 = [14601228660546606913_usize,4_usize,2228117845546834285_usize,7_usize,16743999012634545621_usize,11660900036097124463_usize];
_14 = (-6726_i16) as i8;
_13 = -(-4058917693815562084_i64);
_7 = core::ptr::addr_of_mut!(_14);
_16 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
Goto(bb3)
}
bb17 = {
_7 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0;
_5 = _11;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<([i64; 5],)>(Variant(_6, 0), 2)) = (RET,);
_8 = [_13,_13,_13];
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0,);
_2 = _11;
_7 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2.0;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2 = (Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).1.0,);
_15 = !(-166569259558186184376751786924866661777_i128);
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).1 = Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).2;
place!(Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3)).2.0 = core::ptr::addr_of_mut!(_14);
_3 = _4;
_8 = [_13,_13,_13];
_2 = _9;
RET = [_13,_13,_13,_13,_13];
_2 = _11;
match Field::<(u16, (*mut i8,), (*mut i8,))>(Variant(_6, 0), 3).0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
36170 => bb7,
_ => bb6
}
}
bb18 = {
_12 = [_39.fld2,_15,_40.fld2,_15,_40.fld2,_15];
place!(Field::<[i64; 1]>(Variant(_6, 3), 0)) = [_18];
_32 = !_35;
_13 = (*_19) as i64;
place!(Field::<[i64; 5]>(Variant(_37, 0), 3)) = [_18,_13,_13,_18,_18];
_39.fld3 = [_18,_18,_18,_13];
_11 = _4;
_22 = core::ptr::addr_of_mut!(_26);
_21 = !true;
_42 = '\u{40a42}';
_15 = _18 as i128;
Goto(bb19)
}
bb19 = {
Call(_45 = dump_var(6_usize, 42_usize, Move(_42), 35_usize, Move(_35), 20_usize, Move(_20), 12_usize, Move(_12)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_45 = dump_var(6_usize, 16_usize, Move(_16), 21_usize, Move(_21), 8_usize, Move(_8), 17_usize, Move(_17)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_45 = dump_var(6_usize, 18_usize, Move(_18), 46_usize, _46, 46_usize, _46, 46_usize, _46), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: *mut isize,mut _2: *mut isize,mut _3: *mut isize,mut _4: *mut isize,mut _5: *mut isize,mut _6: *mut isize,mut _7: *mut isize,mut _8: *mut isize,mut _9: *mut isize,mut _10: [usize; 6],mut _11: *mut isize,mut _12: *mut isize) -> *mut isize {
mir! {
type RET = *mut isize;
let _13: *mut isize;
let _14: isize;
let _15: u64;
let _16: char;
let _17: (*mut isize, [i64; 4], i32);
let _18: Adt43;
let _19: isize;
let _20: Adt51;
let _21: u16;
let _22: Adt41;
let _23: isize;
let _24: f64;
let _25: bool;
let _26: char;
let _27: u128;
let _28: *const *mut i8;
let _29: i64;
let _30: &'static f32;
let _31: Adt47;
let _32: &'static f32;
let _33: &'static f32;
let _34: bool;
let _35: Adt53;
let _36: [char; 1];
let _37: char;
let _38: isize;
let _39: Adt43;
let _40: ();
let _41: ();
{
_8 = _5;
_9 = _4;
RET = _4;
_3 = _9;
_12 = _2;
Goto(bb1)
}
bb1 = {
_3 = _2;
_6 = _3;
_13 = _1;
_1 = _3;
_11 = _13;
_4 = _1;
RET = core::ptr::addr_of_mut!(_14);
_1 = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*_1));
Goto(bb2)
}
bb2 = {
_10 = [7_usize,1153615844179268804_usize,17138916844767127359_usize,4_usize,8742129395034536499_usize,15286410772936421675_usize];
Goto(bb3)
}
bb3 = {
_5 = core::ptr::addr_of_mut!((*RET));
_13 = core::ptr::addr_of_mut!((*_1));
_10 = [6280503809090258147_usize,1_usize,1720988161703191344_usize,3_usize,17672554070453108594_usize,4_usize];
RET = _8;
_15 = 4282957755018845959_u64 | 1853007325276600820_u64;
_14 = -65_isize;
_7 = _11;
_16 = '\u{1dea0}';
_8 = core::ptr::addr_of_mut!(_14);
Goto(bb4)
}
bb4 = {
_17.1 = [3546528046835740555_i64,(-6158042046236235702_i64),(-2084858551971680366_i64),8370093804860683493_i64];
_1 = core::ptr::addr_of_mut!((*_5));
_7 = core::ptr::addr_of_mut!((*_13));
Goto(bb5)
}
bb5 = {
_17.2 = -(-2013880429_i32);
_17.0 = _6;
_7 = _4;
_18.fld3 = [785694852256942337_i64,(-3777683884589553424_i64),(-9097991738600429536_i64),6609540703537282268_i64];
_16 = '\u{ef94e}';
_16 = '\u{c5aeb}';
RET = core::ptr::addr_of_mut!((*_8));
_1 = _3;
_14 = (-9223372036854775808_isize) - 77_isize;
_15 = !17747262777390013596_u64;
_17.0 = _12;
_7 = core::ptr::addr_of_mut!((*_8));
_18.fld1 = 14251401146989602809_usize as f64;
_21 = 12571_u16 & 9696_u16;
_1 = core::ptr::addr_of_mut!(_14);
_5 = _13;
_5 = _12;
Goto(bb6)
}
bb6 = {
_17 = (_12, _18.fld3, (-985580912_i32));
_14 = 141179977636779285460599275719808316723_u128 as isize;
_8 = core::ptr::addr_of_mut!((*_8));
_9 = core::ptr::addr_of_mut!(_14);
_5 = _13;
_18.fld2 = 20270706386370229570662493211081939726_i128;
_24 = _18.fld2 as f64;
_5 = core::ptr::addr_of_mut!((*_7));
Call(_14 = fn8(_2, _16, _11, _17, _8, _6, _17.0, _2, _4, _2, _12, _17, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_20 = Adt51::Variant0 { fld0: _18.fld3 };
_6 = core::ptr::addr_of_mut!((*RET));
_18.fld0 = [(-1107384464429735750_i64),5384944102676033358_i64,(-1711279686583066628_i64),3903585792651587346_i64,7286688790936530201_i64];
_17.2 = _15 as i32;
_14 = -97_isize;
_15 = 16107240483008459956_u64 - 15726000556396571342_u64;
RET = _1;
_23 = !(*_5);
_12 = core::ptr::addr_of_mut!((*_5));
_16 = '\u{595ac}';
_18.fld3 = [(-3425518248451367069_i64),6160987118093666419_i64,7502054474276449707_i64,6875184602970849566_i64];
_27 = 240238905598957873936119479607036356256_u128;
_23 = (*_9) - (*_12);
Goto(bb8)
}
bb8 = {
_29 = !(-2274354915940776071_i64);
place!(Field::<[i64; 4]>(Variant(_20, 0), 0)) = _17.1;
_12 = _11;
_9 = _12;
Goto(bb9)
}
bb9 = {
SetDiscriminant(_20, 2);
place!(Field::<Adt45>(Variant(_20, 2), 1)).fld1.0 = (_18.fld0,);
_16 = '\u{27ec3}';
place!(Field::<Adt45>(Variant(_20, 2), 1)).fld1.2 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_26 = _16;
_20 = Adt51::Variant0 { fld0: _17.1 };
_21 = !26461_u16;
_12 = core::ptr::addr_of_mut!((*_7));
place!(Field::<[i64; 4]>(Variant(_20, 0), 0)) = [_29,_29,_29,_29];
_19 = (*_13) & (*_1);
_19 = _14 + (*_13);
_24 = -_18.fld1;
_19 = !(*_7);
_24 = -_18.fld1;
RET = _6;
_16 = _26;
_8 = core::ptr::addr_of_mut!(_14);
match _18.fld2 {
0 => bb10,
20270706386370229570662493211081939726 => bb12,
_ => bb11
}
}
bb10 = {
_29 = !(-2274354915940776071_i64);
place!(Field::<[i64; 4]>(Variant(_20, 0), 0)) = _17.1;
_12 = _11;
_9 = _12;
Goto(bb9)
}
bb11 = {
_17.2 = -(-2013880429_i32);
_17.0 = _6;
_7 = _4;
_18.fld3 = [785694852256942337_i64,(-3777683884589553424_i64),(-9097991738600429536_i64),6609540703537282268_i64];
_16 = '\u{ef94e}';
_16 = '\u{c5aeb}';
RET = core::ptr::addr_of_mut!((*_8));
_1 = _3;
_14 = (-9223372036854775808_isize) - 77_isize;
_15 = !17747262777390013596_u64;
_17.0 = _12;
_7 = core::ptr::addr_of_mut!((*_8));
_18.fld1 = 14251401146989602809_usize as f64;
_21 = 12571_u16 & 9696_u16;
_1 = core::ptr::addr_of_mut!(_14);
_5 = _13;
_5 = _12;
Goto(bb6)
}
bb12 = {
_18.fld3 = _17.1;
_1 = core::ptr::addr_of_mut!((*_6));
_13 = _9;
_37 = _26;
_8 = _13;
match _27 {
0 => bb1,
1 => bb11,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb13,
6 => bb14,
240238905598957873936119479607036356256 => bb16,
_ => bb15
}
}
bb13 = {
_10 = [7_usize,1153615844179268804_usize,17138916844767127359_usize,4_usize,8742129395034536499_usize,15286410772936421675_usize];
Goto(bb3)
}
bb14 = {
_29 = !(-2274354915940776071_i64);
place!(Field::<[i64; 4]>(Variant(_20, 0), 0)) = _17.1;
_12 = _11;
_9 = _12;
Goto(bb9)
}
bb15 = {
_17 = (_12, _18.fld3, (-985580912_i32));
_14 = 141179977636779285460599275719808316723_u128 as isize;
_8 = core::ptr::addr_of_mut!((*_8));
_9 = core::ptr::addr_of_mut!(_14);
_5 = _13;
_18.fld2 = 20270706386370229570662493211081939726_i128;
_24 = _18.fld2 as f64;
_5 = core::ptr::addr_of_mut!((*_7));
Call(_14 = fn8(_2, _16, _11, _17, _8, _6, _17.0, _2, _4, _2, _12, _17, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb16 = {
_2 = _8;
_39.fld1 = _24 - _24;
_19 = (*_7);
_17.1 = [_29,_29,_29,_29];
_39.fld2 = _18.fld2;
_19 = _29 as isize;
Goto(bb17)
}
bb17 = {
Call(_40 = dump_var(7_usize, 16_usize, Move(_16), 21_usize, Move(_21), 15_usize, Move(_15), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(7_usize, 27_usize, Move(_27), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: *mut isize,mut _2: char,mut _3: *mut isize,mut _4: (*mut isize, [i64; 4], i32),mut _5: *mut isize,mut _6: *mut isize,mut _7: *mut isize,mut _8: *mut isize,mut _9: *mut isize,mut _10: *mut isize,mut _11: *mut isize,mut _12: (*mut isize, [i64; 4], i32),mut _13: *mut isize) -> isize {
mir! {
type RET = isize;
let _14: u8;
let _15: bool;
let _16: [i64; 4];
let _17: i32;
let _18: (i128, [i64; 4], i16);
let _19: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _20: ([i64; 5],);
let _21: isize;
let _22: *mut isize;
let _23: u64;
let _24: i32;
let _25: u128;
let _26: [i32; 4];
let _27: Adt47;
let _28: char;
let _29: f32;
let _30: Adt47;
let _31: [i64; 5];
let _32: isize;
let _33: (u16, (*mut i8,), (*mut i8,));
let _34: bool;
let _35: char;
let _36: ();
let _37: ();
{
_7 = core::ptr::addr_of_mut!(RET);
RET = (-48_isize) | 113_isize;
_11 = _12.0;
_8 = _13;
_12 = (_11, _4.1, _4.2);
_11 = core::ptr::addr_of_mut!((*_7));
_5 = core::ptr::addr_of_mut!((*_7));
_12 = _4;
_6 = core::ptr::addr_of_mut!((*_5));
_6 = core::ptr::addr_of_mut!((*_7));
_8 = _13;
_4 = (_8, _12.1, _12.2);
_5 = _13;
_8 = _10;
RET = (-64_i8) as isize;
RET = -(-87_isize);
_9 = core::ptr::addr_of_mut!((*_11));
Goto(bb1)
}
bb1 = {
_4 = _12;
_1 = _12.0;
_5 = _1;
_8 = _3;
_4 = (_13, _12.1, _12.2);
_13 = _1;
_10 = core::ptr::addr_of_mut!((*_11));
_19.2 = [(-8350924144104813635_i64)];
RET = !32_isize;
Call(_18.2 = core::intrinsics::bswap(7743_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_20.0 = [(-5292392513831777333_i64),(-5016682035307916704_i64),1802861736377282127_i64,5279358032422614665_i64,9072098582781387498_i64];
_19.4 = [2441021263604683932_usize,6298945907744588106_usize,13857393942273358978_usize,6_usize,841839902605975657_usize,2_usize];
match _4.2 {
0 => bb3,
340282366920938463463374607430782630544 => bb5,
_ => bb4
}
}
bb3 = {
_4 = _12;
_1 = _12.0;
_5 = _1;
_8 = _3;
_4 = (_13, _12.1, _12.2);
_13 = _1;
_10 = core::ptr::addr_of_mut!((*_11));
_19.2 = [(-8350924144104813635_i64)];
RET = !32_isize;
Call(_18.2 = core::intrinsics::bswap(7743_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_19.1 = [(-8198450875537619536_i64),(-4674947515425414453_i64),(-3502640695439518169_i64),(-6814131714800368596_i64),(-4526759876621779461_i64)];
_8 = _3;
RET = !(-63_isize);
_18.2 = (-56_i8) as i16;
_19.1 = [6977794331442476127_i64,(-2110309576976758015_i64),3762137693890871479_i64,8005904854639089263_i64,7174746037173372493_i64];
_18 = (138462345847855307627018658564302435983_i128, _4.1, 21960_i16);
_4 = (_8, _18.1, _12.2);
_4.0 = _5;
_16 = [7865593281741313978_i64,(-8196207154794537907_i64),(-1132150916890537020_i64),(-4253210166160404025_i64)];
_18.2 = -24729_i16;
_5 = core::ptr::addr_of_mut!((*_9));
_18.1 = _4.1;
_4.2 = _12.2 * _12.2;
_14 = 18787_u16 as u8;
_5 = core::ptr::addr_of_mut!((*_7));
_14 = !232_u8;
_1 = _7;
_4.0 = core::ptr::addr_of_mut!((*_6));
_8 = _3;
_8 = core::ptr::addr_of_mut!((*_7));
_4.1 = [(-5924697896646821197_i64),(-5245791992437518538_i64),395687214892976740_i64,4430982146023642564_i64];
_18.0 = (-35458801009420122699698753794901665816_i128);
Goto(bb6)
}
bb6 = {
_4.0 = _13;
_3 = _13;
_15 = !false;
_4 = (_10, _18.1, _12.2);
_1 = _3;
_24 = 10577987979065994868_usize as i32;
_18.2 = (-28288_i16);
_25 = !296835999205355534832297201700652727212_u128;
_7 = _13;
RET = !(-9223372036854775808_isize);
_1 = core::ptr::addr_of_mut!((*_9));
_4.2 = _12.2 + _12.2;
_27 = Adt47::Variant1 { fld0: _18.1,fld1: _4,fld2: (*_1),fld3: 20314_u16,fld4: _18.2,fld5: _25,fld6: _18.0 };
_19.0 = Field::<(*mut isize, [i64; 4], i32)>(Variant(_27, 1), 1).2 * _4.2;
_17 = Field::<u128>(Variant(_27, 1), 5) as i32;
_21 = 64466_u16 as isize;
_9 = core::ptr::addr_of_mut!((*_1));
place!(Field::<u16>(Variant(_27, 1), 3)) = _15 as u16;
_18.0 = Field::<i128>(Variant(_27, 1), 6) * Field::<i128>(Variant(_27, 1), 6);
match _12.2 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463463374607430782630544 => bb13,
_ => bb12
}
}
bb7 = {
_19.1 = [(-8198450875537619536_i64),(-4674947515425414453_i64),(-3502640695439518169_i64),(-6814131714800368596_i64),(-4526759876621779461_i64)];
_8 = _3;
RET = !(-63_isize);
_18.2 = (-56_i8) as i16;
_19.1 = [6977794331442476127_i64,(-2110309576976758015_i64),3762137693890871479_i64,8005904854639089263_i64,7174746037173372493_i64];
_18 = (138462345847855307627018658564302435983_i128, _4.1, 21960_i16);
_4 = (_8, _18.1, _12.2);
_4.0 = _5;
_16 = [7865593281741313978_i64,(-8196207154794537907_i64),(-1132150916890537020_i64),(-4253210166160404025_i64)];
_18.2 = -24729_i16;
_5 = core::ptr::addr_of_mut!((*_9));
_18.1 = _4.1;
_4.2 = _12.2 * _12.2;
_14 = 18787_u16 as u8;
_5 = core::ptr::addr_of_mut!((*_7));
_14 = !232_u8;
_1 = _7;
_4.0 = core::ptr::addr_of_mut!((*_6));
_8 = _3;
_8 = core::ptr::addr_of_mut!((*_7));
_4.1 = [(-5924697896646821197_i64),(-5245791992437518538_i64),395687214892976740_i64,4430982146023642564_i64];
_18.0 = (-35458801009420122699698753794901665816_i128);
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
_4 = _12;
_1 = _12.0;
_5 = _1;
_8 = _3;
_4 = (_13, _12.1, _12.2);
_13 = _1;
_10 = core::ptr::addr_of_mut!((*_11));
_19.2 = [(-8350924144104813635_i64)];
RET = !32_isize;
Call(_18.2 = core::intrinsics::bswap(7743_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_20.0 = [(-5292392513831777333_i64),(-5016682035307916704_i64),1802861736377282127_i64,5279358032422614665_i64,9072098582781387498_i64];
_19.4 = [2441021263604683932_usize,6298945907744588106_usize,13857393942273358978_usize,6_usize,841839902605975657_usize,2_usize];
match _4.2 {
0 => bb3,
340282366920938463463374607430782630544 => bb5,
_ => bb4
}
}
bb11 = {
_4 = _12;
_1 = _12.0;
_5 = _1;
_8 = _3;
_4 = (_13, _12.1, _12.2);
_13 = _1;
_10 = core::ptr::addr_of_mut!((*_11));
_19.2 = [(-8350924144104813635_i64)];
RET = !32_isize;
Call(_18.2 = core::intrinsics::bswap(7743_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
_9 = core::ptr::addr_of_mut!(RET);
_19.2 = [(-6283516703992285428_i64)];
_1 = core::ptr::addr_of_mut!((*_8));
_4.2 = _18.0 as i32;
place!(Field::<[i64; 4]>(Variant(_27, 1), 0)) = Field::<(*mut isize, [i64; 4], i32)>(Variant(_27, 1), 1).1;
_4.0 = _12.0;
RET = _21;
_27 = Adt47::Variant1 { fld0: _16,fld1: _12,fld2: (*_1),fld3: 7751_u16,fld4: _18.2,fld5: _25,fld6: _18.0 };
_28 = _2;
_20.0 = [(-4530842752139613062_i64),(-8261792067163560045_i64),6292184446983216533_i64,(-3703921343661514992_i64),(-6238577509171617310_i64)];
_21 = 119_i8 as isize;
place!(Field::<(*mut isize, [i64; 4], i32)>(Variant(_27, 1), 1)).2 = (-5_i8) as i32;
_19.1 = _20.0;
place!(Field::<(*mut isize, [i64; 4], i32)>(Variant(_27, 1), 1)).2 = 1529313883_u32 as i32;
place!(Field::<i16>(Variant(_27, 1), 4)) = _18.2 | _18.2;
_21 = !(*_1);
_7 = _4.0;
place!(Field::<(*mut isize, [i64; 4], i32)>(Variant(_27, 1), 1)).2 = -_19.0;
_21 = -(*_5);
place!(Field::<i128>(Variant(_27, 1), 6)) = _18.0;
_28 = _2;
_19.3 = 36417_u16;
place!(Field::<u16>(Variant(_27, 1), 3)) = _2 as u16;
_4.0 = Field::<(*mut isize, [i64; 4], i32)>(Variant(_27, 1), 1).0;
match _12.2 {
0 => bb5,
1 => bb2,
340282366920938463463374607430782630544 => bb15,
_ => bb14
}
}
bb14 = {
_4 = _12;
_1 = _12.0;
_5 = _1;
_8 = _3;
_4 = (_13, _12.1, _12.2);
_13 = _1;
_10 = core::ptr::addr_of_mut!((*_11));
_19.2 = [(-8350924144104813635_i64)];
RET = !32_isize;
Call(_18.2 = core::intrinsics::bswap(7743_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_16 = [1022946162687894565_i64,(-58301873079764997_i64),5045129814580400621_i64,(-8876346764524262854_i64)];
Goto(bb16)
}
bb16 = {
Call(_36 = dump_var(8_usize, 14_usize, Move(_14), 18_usize, Move(_18), 17_usize, Move(_17), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(8_usize, 21_usize, Move(_21), 28_usize, Move(_28), 37_usize, _37, 37_usize, _37), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: (i128, [i64; 4], i16),mut _2: i128,mut _3: [i64; 5],mut _4: [i64; 5],mut _5: f64,mut _6: u8,mut _7: isize,mut _8: *mut isize,mut _9: (u16, (*mut i8,), (*mut i8,)),mut _10: ([i64; 5],)) -> [i64; 3] {
mir! {
type RET = [i64; 3];
let _11: *mut [i64; 4];
let _12: char;
let _13: [i64; 1];
let _14: u128;
let _15: (i128, [i64; 4], i16);
let _16: Adt50;
let _17: [i64; 1];
let _18: Adt55;
let _19: char;
let _20: Adt50;
let _21: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _22: isize;
let _23: (*mut i8,);
let _24: u64;
let _25: [i128; 6];
let _26: [i32; 4];
let _27: [i64; 3];
let _28: *mut [i64; 4];
let _29: &'static f32;
let _30: i16;
let _31: i64;
let _32: Adt54;
let _33: u32;
let _34: f32;
let _35: [i64; 4];
let _36: *mut isize;
let _37: u64;
let _38: char;
let _39: [i64; 3];
let _40: [i32; 4];
let _41: u16;
let _42: [i32; 4];
let _43: ();
let _44: ();
{
_9.2.0 = _9.1.0;
_9.1.0 = _9.2.0;
_1.1 = [4458173049195901839_i64,6404975890081848290_i64,(-3135628595633685874_i64),8894859514453522854_i64];
_10 = (_4,);
_10.0 = [3713508571128123092_i64,(-2181752651588611978_i64),3549402471628321108_i64,(-2983942535588243434_i64),1848972987158329580_i64];
_1.1 = [2847378330307358124_i64,(-6039347234724858864_i64),5404952986168508801_i64,1958317356831172849_i64];
RET = [3831658093909153491_i64,(-1202691363204022135_i64),5644767325927284636_i64];
_10.0 = [909887819108157260_i64,(-9065925075441037207_i64),2951220431837064685_i64,2971556495872370769_i64,1839244581599547816_i64];
_1.2 = (-93_i8) as i16;
_4 = [(-4812828927591481286_i64),(-2002851698007805001_i64),(-4971091336841080713_i64),5422289542007782502_i64,93732719111765263_i64];
_10.0 = _4;
_1.0 = 6409858481618810061_i64 as i128;
_9.0 = _1.0 as u16;
_11 = core::ptr::addr_of_mut!(_1.1);
RET = [(-1151226245854302623_i64),(-8914719732512141548_i64),(-2684714113932016021_i64)];
_9.0 = '\u{fbaad}' as u16;
_7 = (-9223372036854775808_isize) ^ (-120_isize);
_8 = core::ptr::addr_of_mut!(_7);
_10.0 = _4;
_12 = '\u{8bf6c}';
_1.0 = _2 << _7;
_1.0 = 1477920369_i32 as i128;
_2 = 7_usize as i128;
_9.1 = _9.2;
match _6 {
0 => bb1,
80 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_7 = 9223372036854775807_isize;
_10 = (_3,);
_1.1 = [929074331439495949_i64,2967477733590446300_i64,6060198468355870271_i64,3720871720011225338_i64];
_11 = core::ptr::addr_of_mut!(_1.1);
_7 = !(-113_isize);
_3 = _4;
_7 = (-9223372036854775808_isize) >> _9.0;
_9.2.0 = _9.1.0;
_5 = 48714388215187130779241645298306433932_u128 as f64;
_12 = '\u{a22d8}';
_3 = _4;
_1.0 = _7 as i128;
_10 = (_3,);
_3 = [5452062488290417804_i64,(-8662298979633226931_i64),3607996419042711875_i64,2925453225159036389_i64,(-8302644029124408024_i64)];
_9.0 = 61153_u16;
_1.2 = 18748_i16 & 1175_i16;
_9.0 = true as u16;
_5 = 3027006065_u32 as f64;
_14 = _1.2 as u128;
_18.fld4 = (_8, (*_11), 1620166470_i32);
_18.fld4.2 = _14 as i32;
_18.fld4.2 = 1172333336_i32;
Call(_7 = core::intrinsics::bswap(9223372036854775807_isize), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18.fld5 = [_12];
_17 = [(-6462675134278634324_i64)];
_12 = '\u{d5f41}';
_15.1 = [2606665011479357105_i64,4189265307002095080_i64,3483813108333822350_i64,(-7753436822108086343_i64)];
RET = [(-1853010961186928078_i64),7119139277287528395_i64,5080416275932931815_i64];
_15.2 = -_1.2;
_15.1 = _18.fld4.1;
_9.0 = 8711_u16;
_18.fld4.0 = core::ptr::addr_of_mut!((*_8));
_18.fld4.1 = [(-5922794929327868604_i64),8223378166978926051_i64,(-3915921828968691444_i64),4339730551699908271_i64];
_9.1.0 = _9.2.0;
Goto(bb5)
}
bb5 = {
_18.fld4 = (_8, _1.1, (-531685537_i32));
_7 = 46_i8 as isize;
_13 = [(-5559056917240379078_i64)];
_21.3 = _9.0 & _9.0;
_8 = core::ptr::addr_of_mut!((*_8));
_9.2 = (_9.1.0,);
_23.0 = _9.1.0;
Goto(bb6)
}
bb6 = {
_11 = core::ptr::addr_of_mut!((*_11));
_19 = _12;
RET = [(-414148910773530503_i64),(-8522492485197175802_i64),(-1592216303630519231_i64)];
_7 = !(-9223372036854775808_isize);
_22 = _12 as isize;
_10 = (_3,);
_24 = 1764342246402546438_u64 & 13283409560109569365_u64;
_18.fld4 = (_8, _1.1, 2055360158_i32);
_12 = _19;
_28 = core::ptr::addr_of_mut!((*_11));
Goto(bb7)
}
bb7 = {
_28 = _11;
_15 = (_1.0, _1.1, _1.2);
_18.fld0 = 3_usize as u128;
_21.1 = _4;
Call(_9.2 = fn10(_18.fld4.2, _18.fld4.1, (*_8), _18.fld4.2, _28, _3, _6), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_7 = _22;
_4 = _3;
_18.fld1 = [18136039462395477765_usize];
_18.fld6 = core::ptr::addr_of_mut!(_22);
_19 = _12;
_24 = !10221298379122916201_u64;
_1.0 = _15.0;
_15.2 = !_1.2;
_21.2 = [7545788192499524305_i64];
_21.3 = _9.0;
_15.0 = _1.0 << _9.0;
_5 = _18.fld4.2 as f64;
_1.2 = _19 as i16;
Goto(bb9)
}
bb9 = {
_15.1 = [2915297617218105499_i64,(-6081802289711052851_i64),(-4435542281457779401_i64),(-5809485905851146045_i64)];
_1.0 = -_2;
_5 = (-88_i8) as f64;
_1.2 = _15.2;
RET = [6272234126093010884_i64,(-3027422735531118097_i64),8997273923167015472_i64];
_9 = (_21.3, _23, _23);
_9.1.0 = _23.0;
_3 = [(-7964624884929638995_i64),5155641159888677577_i64,(-2891610485854566604_i64),193339796508648059_i64,(-1825000227423836765_i64)];
_21.4 = [5_usize,5_usize,3_usize,9541103421396393265_usize,0_usize,513098699501579572_usize];
_15 = _1;
_12 = _19;
_12 = _19;
_18.fld5 = [_12];
_21.1 = [(-3302329508446770343_i64),1017386300073808901_i64,(-7045276398904958111_i64),(-4403907339360081435_i64),(-331540142176310382_i64)];
_23 = (_9.1.0,);
_18.fld6 = _18.fld4.0;
_7 = -_22;
_7 = _5 as isize;
_15.0 = _2 ^ _1.0;
_12 = _19;
_25 = [_15.0,_2,_15.0,_15.0,_1.0,_1.0];
Call(_9.0 = core::intrinsics::bswap(_21.3), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_2 = _6 as i128;
_23.0 = _9.2.0;
_18.fld1 = [3_usize];
_15.1 = [(-4907993223781931197_i64),(-2877971653072891358_i64),(-8868069847538331653_i64),(-6646974590591853247_i64)];
_9.2.0 = _23.0;
_7 = _22 >> _1.0;
_21.3 = !_9.0;
_28 = core::ptr::addr_of_mut!(_15.1);
_18.fld6 = core::ptr::addr_of_mut!((*_8));
_15 = _1;
_18.fld2 = (*_8) - (*_8);
_5 = (*_8) as f64;
_14 = _18.fld0 & _18.fld0;
Goto(bb11)
}
bb11 = {
_30 = _24 as i16;
_15.0 = -_2;
_9.2 = (_23.0,);
_15.0 = _2;
_21.0 = _18.fld4.2 - _18.fld4.2;
_21.1 = [3163500695997699786_i64,(-1903849361177477944_i64),(-6260935588265247382_i64),2127925351399417117_i64,5507310846886882481_i64];
_27 = RET;
_18.fld4.2 = _21.0;
_13 = [5420217634459952661_i64];
_1.2 = _30 ^ _15.2;
_18.fld1 = [6_usize];
_18.fld2 = _22 - (*_8);
_1.2 = _15.2 - _30;
_10.0 = _4;
_9.1.0 = _23.0;
_15 = _1;
_34 = _2 as f32;
_10 = (_21.1,);
_37 = _24;
_10.0 = [(-6279043202443437269_i64),5172006755290270902_i64,1896343144268410037_i64,(-239448587557704238_i64),(-7451960915858192150_i64)];
_18.fld2 = (-66_i8) as isize;
_30 = _18.fld4.2 as i16;
_22 = !(*_8);
_23.0 = _9.1.0;
_14 = _18.fld0;
match _6 {
0 => bb6,
1 => bb2,
2 => bb9,
3 => bb8,
4 => bb10,
80 => bb13,
_ => bb12
}
}
bb12 = {
_28 = _11;
_15 = (_1.0, _1.1, _1.2);
_18.fld0 = 3_usize as u128;
_21.1 = _4;
Call(_9.2 = fn10(_18.fld4.2, _18.fld4.1, (*_8), _18.fld4.2, _28, _3, _6), ReturnTo(bb8), UnwindUnreachable())
}
bb13 = {
_18.fld4.0 = core::ptr::addr_of_mut!((*_8));
_14 = !_18.fld0;
RET = _27;
_10.0 = [(-4955675925327978541_i64),(-8648260199549985223_i64),(-1829789615238892580_i64),183482760804062972_i64,3669825429634151437_i64];
_36 = _8;
_35 = [(-2409751639785201021_i64),(-3289565370851010271_i64),(-4921919129218814259_i64),(-3584695735110721294_i64)];
_18.fld1 = [5660349363754965585_usize];
_38 = _12;
_1.2 = -_30;
_31 = (-7609756500819310185_i64) >> _6;
_34 = 1_usize as f32;
_22 = (*_8) * _18.fld2;
_33 = _22 as u32;
_2 = _1.0 ^ _1.0;
_18.fld4.0 = _18.fld6;
_12 = _19;
_27 = [_31,_31,_31];
_42 = [_21.0,_18.fld4.2,_18.fld4.2,_18.fld4.2];
_35 = (*_28);
_41 = (*_8) as u16;
RET = [_31,_31,_31];
_12 = _19;
_15.2 = !_1.2;
_2 = _15.0;
_15.1 = [_31,_31,_31,_31];
match _6 {
0 => bb1,
1 => bb12,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
80 => bb19,
_ => bb18
}
}
bb14 = {
_28 = _11;
_15 = (_1.0, _1.1, _1.2);
_18.fld0 = 3_usize as u128;
_21.1 = _4;
Call(_9.2 = fn10(_18.fld4.2, _18.fld4.1, (*_8), _18.fld4.2, _28, _3, _6), ReturnTo(bb8), UnwindUnreachable())
}
bb15 = {
_28 = _11;
_15 = (_1.0, _1.1, _1.2);
_18.fld0 = 3_usize as u128;
_21.1 = _4;
Call(_9.2 = fn10(_18.fld4.2, _18.fld4.1, (*_8), _18.fld4.2, _28, _3, _6), ReturnTo(bb8), UnwindUnreachable())
}
bb16 = {
_11 = core::ptr::addr_of_mut!((*_11));
_19 = _12;
RET = [(-414148910773530503_i64),(-8522492485197175802_i64),(-1592216303630519231_i64)];
_7 = !(-9223372036854775808_isize);
_22 = _12 as isize;
_10 = (_3,);
_24 = 1764342246402546438_u64 & 13283409560109569365_u64;
_18.fld4 = (_8, _1.1, 2055360158_i32);
_12 = _19;
_28 = core::ptr::addr_of_mut!((*_11));
Goto(bb7)
}
bb17 = {
_18.fld5 = [_12];
_17 = [(-6462675134278634324_i64)];
_12 = '\u{d5f41}';
_15.1 = [2606665011479357105_i64,4189265307002095080_i64,3483813108333822350_i64,(-7753436822108086343_i64)];
RET = [(-1853010961186928078_i64),7119139277287528395_i64,5080416275932931815_i64];
_15.2 = -_1.2;
_15.1 = _18.fld4.1;
_9.0 = 8711_u16;
_18.fld4.0 = core::ptr::addr_of_mut!((*_8));
_18.fld4.1 = [(-5922794929327868604_i64),8223378166978926051_i64,(-3915921828968691444_i64),4339730551699908271_i64];
_9.1.0 = _9.2.0;
Goto(bb5)
}
bb18 = {
_18.fld4 = (_8, _1.1, (-531685537_i32));
_7 = 46_i8 as isize;
_13 = [(-5559056917240379078_i64)];
_21.3 = _9.0 & _9.0;
_8 = core::ptr::addr_of_mut!((*_8));
_9.2 = (_9.1.0,);
_23.0 = _9.1.0;
Goto(bb6)
}
bb19 = {
_40 = [_21.0,_18.fld4.2,_21.0,_18.fld4.2];
_21.0 = _34 as i32;
_36 = core::ptr::addr_of_mut!(_7);
_21.4 = [2_usize,0_usize,6_usize,8979937366907398849_usize,5_usize,5_usize];
_35 = (*_11);
_4 = [_31,_31,_31,_31,_31];
_10 = (_21.1,);
_15.2 = _30 | _1.2;
_15.0 = !_2;
_1.0 = _2 << (*_8);
_19 = _12;
_5 = _34 as f64;
_9.2 = _9.1;
_41 = (*_36) as u16;
_18.fld0 = _14 | _14;
RET = _27;
Goto(bb20)
}
bb20 = {
Call(_43 = dump_var(9_usize, 19_usize, Move(_19), 27_usize, Move(_27), 13_usize, Move(_13), 33_usize, Move(_33)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_43 = dump_var(9_usize, 41_usize, Move(_41), 38_usize, Move(_38), 42_usize, Move(_42), 2_usize, Move(_2)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_43 = dump_var(9_usize, 14_usize, Move(_14), 35_usize, Move(_35), 6_usize, Move(_6), 37_usize, Move(_37)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_43 = dump_var(9_usize, 1_usize, Move(_1), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: i32,mut _2: [i64; 4],mut _3: isize,mut _4: i32,mut _5: *mut [i64; 4],mut _6: [i64; 5],mut _7: u8) -> (*mut i8,) {
mir! {
type RET = (*mut i8,);
let _8: bool;
let _9: [i64; 1];
let _10: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _11: (([i64; 5],), i8, [i128; 6]);
let _12: bool;
let _13: Adt52;
let _14: i8;
let _15: [char; 1];
let _16: Adt54;
let _17: Adt55;
let _18: u8;
let _19: Adt50;
let _20: [i128; 6];
let _21: usize;
let _22: f64;
let _23: i64;
let _24: [i64; 3];
let _25: &'static f32;
let _26: i16;
let _27: ();
let _28: ();
{
_1 = _4 | _4;
_6 = [(-1980571590213470663_i64),4320207978357895948_i64,(-8920694763293734147_i64),(-2226873391672444249_i64),(-8143361221783693708_i64)];
_3 = _1 as isize;
_8 = _1 <= _1;
_3 = 9223372036854775807_isize - (-9223372036854775808_isize);
_1 = 98358028117921711322241217959578151874_i128 as i32;
_8 = _4 >= _4;
_5 = core::ptr::addr_of_mut!(_2);
_11.1 = -72_i8;
_10.4 = [3_usize,9946880279594729111_usize,0_usize,8701929695992288169_usize,4532817327717359932_usize,17017972388546398856_usize];
_5 = core::ptr::addr_of_mut!((*_5));
_10.0 = _1 | _4;
_7 = '\u{5e2ca}' as u8;
_9 = [(-1807316752343089101_i64)];
_12 = _8;
match _4 {
0 => bb1,
1 => bb2,
2 => bb3,
2055360158 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_11.0.0 = [1327996766903115843_i64,6527594325332316248_i64,829798080866288693_i64,(-3873441224032037206_i64),(-668370508545334623_i64)];
_11.2 = [53283244116842824567690229066253925349_i128,117485678542637468426311987856890362924_i128,(-132499481634574693694672818338189373944_i128),148028612559072144738023359970330148218_i128,(-145952485102486281800249134645733018154_i128),70622735688682590220228207954568374826_i128];
_11.0 = (_6,);
_10.3 = 80792492011594110450774950915837880127_i128 as u16;
_14 = _11.1 >> _10.0;
_11.2 = [107939168699408974210391296239800809291_i128,145629642011190722598027473626310574340_i128,(-157018209461100730074450388479394309288_i128),(-118715834920085754049154761520814357808_i128),105638327637579589569443197461548391171_i128,(-161412211907209328291776110530667458952_i128)];
_8 = !_12;
_11.1 = _14 & _14;
_17.fld2 = -_3;
_17.fld5 = ['\u{7a71e}'];
_17.fld4.1 = [(-6079198310538772207_i64),7469911992532660269_i64,640812894257996387_i64,3492130569514787357_i64];
_7 = 93_u8 | 222_u8;
_15 = ['\u{f1489}'];
Goto(bb6)
}
bb6 = {
_11.0 = (_6,);
_6 = [3291524043927204817_i64,(-7135022896368316223_i64),(-2924718843482916010_i64),(-2489856744768588242_i64),(-8722980636646323344_i64)];
_8 = _12;
_1 = 17542818087237502052_usize as i32;
_11.0 = (_6,);
RET.0 = core::ptr::addr_of_mut!(_14);
_17.fld5 = ['\u{10c23f}'];
_17.fld0 = !282509907735412268261161245290042840129_u128;
_12 = !_8;
_17.fld6 = core::ptr::addr_of_mut!(_3);
_5 = core::ptr::addr_of_mut!((*_5));
_17.fld4.2 = _10.3 as i32;
_15 = ['\u{1a89a}'];
_17.fld4.1 = [4553939157593524110_i64,4321570042300949932_i64,6371755615745190024_i64,(-3119990525092588352_i64)];
RET.0 = core::ptr::addr_of_mut!(_14);
_11.0.0 = _6;
_10.2 = [(-2344067965702457380_i64)];
_21 = 1814115763203178409_usize + 7_usize;
_17.fld2 = _3 >> _14;
_3 = _17.fld2 ^ _17.fld2;
_17.fld4.2 = !_10.0;
_11.0.0 = [7639932371176385758_i64,(-576266249609963214_i64),(-406887917841737350_i64),(-885889641596766030_i64),1547650263542165875_i64];
_9 = [2447289371850048057_i64];
_10.3 = 35916_u16;
Call(_20 = fn11(_3, _17.fld6, RET, _17.fld6, _3, _17.fld6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_20 = [39534179771324950488874147007762278094_i128,(-127939057332089103655648607445373229968_i128),(-151540999685392279501140175355448810792_i128),77115479249346854683178289395818330149_i128,(-163075889517010737059859165918917023164_i128),17996592941292415477293839430276223019_i128];
_23 = -(-268015087362133445_i64);
_21 = 746362447127468220_usize;
_7 = !150_u8;
_11.0.0 = [_23,_23,_23,_23,_23];
_14 = _11.1 ^ _11.1;
_11.2 = [163403710173350106391557461075425012285_i128,74055954863413657948764146710558496868_i128,12030952272292458096467386179871599344_i128,45266879877547476553224355994122961735_i128,28772667558160418533318344809827141015_i128,(-111511334372557240440466518067296929994_i128)];
_3 = _17.fld0 as isize;
_3 = _17.fld2 * _17.fld2;
_18 = _7;
_7 = !_18;
_9 = [_23];
_22 = _10.3 as f64;
_1 = _22 as i32;
RET.0 = core::ptr::addr_of_mut!(_11.1);
_22 = _10.3 as f64;
_4 = _10.3 as i32;
_4 = _17.fld0 as i32;
_9 = _10.2;
_17.fld4 = (_17.fld6, (*_5), _10.0);
_17.fld4.2 = 101816622_u32 as i32;
Goto(bb8)
}
bb8 = {
Call(_27 = dump_var(10_usize, 7_usize, Move(_7), 4_usize, Move(_4), 18_usize, Move(_18), 6_usize, Move(_6)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_27 = dump_var(10_usize, 2_usize, Move(_2), 12_usize, Move(_12), 15_usize, Move(_15), 21_usize, Move(_21)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize,mut _2: *mut isize,mut _3: (*mut i8,),mut _4: *mut isize,mut _5: isize,mut _6: *mut isize) -> [i128; 6] {
mir! {
type RET = [i128; 6];
let _7: [usize; 1];
let _8: i128;
let _9: [i64; 1];
let _10: f32;
let _11: Adt43;
let _12: f64;
let _13: [usize; 6];
let _14: [char; 5];
let _15: Adt56;
let _16: *const *mut i8;
let _17: &'static f32;
let _18: Adt45;
let _19: [usize; 6];
let _20: i32;
let _21: f32;
let _22: Adt50;
let _23: [char; 1];
let _24: Adt55;
let _25: isize;
let _26: *mut f64;
let _27: (i128, [i64; 4], i16);
let _28: (i128, [i64; 4], i16);
let _29: bool;
let _30: u8;
let _31: bool;
let _32: Adt49;
let _33: char;
let _34: i32;
let _35: *const *mut i8;
let _36: char;
let _37: (([i64; 5],), i8, [i128; 6]);
let _38: ([i64; 5],);
let _39: ();
let _40: ();
{
_1 = _5 << _5;
_6 = core::ptr::addr_of_mut!(_1);
_1 = _5;
_6 = _4;
RET = [32930599880287047472530911900686243400_i128,(-74329861325289378855880073006076340124_i128),(-88104570143242771297408343542934015556_i128),(-140057065554498973552359623626889140520_i128),(-147262543275841336275189439928621234252_i128),(-143933647259618572893691933439915824011_i128)];
_6 = _4;
_6 = _4;
_4 = core::ptr::addr_of_mut!(_1);
_5 = (*_4);
_2 = _6;
RET = [(-87941088831596788880990827563155414118_i128),(-60089705953136428778915530931229833914_i128),13592497671248253614318155964355519890_i128,(-105880279652078058346501586166835575906_i128),88174092964056082467074487634030367586_i128,107478672545088082403990239607275600809_i128];
RET = [169464257092123633346451357553475990534_i128,113063662215682664728571567038380085309_i128,146340409365364355332880634470558577071_i128,11958595277382211272591227892223904065_i128,57864037812299511537432381580363589522_i128,114874100862520004133658487295566647640_i128];
_1 = 7_usize as isize;
_8 = 52250546898027256976132956154706567338_i128;
_5 = (*_4);
_7 = [3601599935002809225_usize];
RET = [_8,_8,_8,_8,_8,_8];
_8 = (-60199609203846800226060587654006352294_i128) & (-129703727289485693913290403146808635221_i128);
_5 = false as isize;
RET = [_8,_8,_8,_8,_8,_8];
RET = [_8,_8,_8,_8,_8,_8];
_7 = [4319904063933055316_usize];
_11.fld0 = [(-4782930125830151632_i64),6977702026333541603_i64,(-7858360716299601788_i64),8199684741026950256_i64,(-5988418813947340374_i64)];
Goto(bb1)
}
bb1 = {
_9 = [(-373181539621381020_i64)];
_7 = [4472302493104570006_usize];
_4 = core::ptr::addr_of_mut!(_1);
_10 = 5_usize as f32;
_8 = (-131059000155439606966360570306539978676_i128);
RET = [_8,_8,_8,_8,_8,_8];
_7 = [4_usize];
_12 = _10 as f64;
_7 = [18246572871070604437_usize];
_11.fld3 = [(-8103126303370274465_i64),1160345196908177431_i64,6983714120631780076_i64,8769034518962573627_i64];
_11.fld1 = 0_usize as f64;
_4 = core::ptr::addr_of_mut!(_5);
_11.fld3 = [4660080894289343534_i64,4305336512105186858_i64,(-8058977102280412194_i64),1187479095402970810_i64];
Call(RET = fn12(_2, _6, _6, _2, _2, _6, _2, _6, _5, _2, _3, _3.0, _2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = core::ptr::addr_of_mut!(_5);
_10 = 3917470140_u32 as f32;
_6 = _2;
_6 = _2;
_11.fld0 = [(-1633035539577356799_i64),(-6836909000102352189_i64),717422269636743154_i64,(-4076032036112136806_i64),6433653903706425748_i64];
_4 = core::ptr::addr_of_mut!(_5);
_1 = (*_4) - _5;
_2 = core::ptr::addr_of_mut!(_1);
_10 = _12 as f32;
_11.fld1 = 54_i8 as f64;
_13 = [0_usize,2_usize,12417828745234405469_usize,985052441231789268_usize,6_usize,2_usize];
RET = [_8,_8,_8,_8,_8,_8];
_8 = 129353603188947275296846911816222745113_i128 << _1;
_1 = (-70_i8) as isize;
RET = [_8,_8,_8,_8,_8,_8];
RET = [_8,_8,_8,_8,_8,_8];
_7 = [0_usize];
_4 = core::ptr::addr_of_mut!((*_4));
_6 = core::ptr::addr_of_mut!((*_2));
_11.fld1 = _12;
_11.fld1 = -_12;
RET = [_8,_8,_8,_8,_8,_8];
Goto(bb3)
}
bb3 = {
_2 = core::ptr::addr_of_mut!((*_4));
RET = [_8,_8,_8,_8,_8,_8];
_11.fld1 = _12;
_10 = 63616_u16 as f32;
_12 = 338661428260794470178187139416319580537_u128 as f64;
_11.fld3 = [(-8195292046108295913_i64),(-6861813250609534640_i64),(-972554884492149475_i64),(-6980435510088042213_i64)];
_10 = 11318_u16 as f32;
_15.fld0 = [5668550723501824486_usize];
RET = [_8,_8,_8,_8,_8,_8];
RET = [_8,_8,_8,_8,_8,_8];
_14 = ['\u{1081ff}','\u{f8073}','\u{1e1b7}','\u{11fdb}','\u{6be7e}'];
_11.fld3 = [960401735407845679_i64,2315025799062365083_i64,(-8625758629404395587_i64),(-73578826508536526_i64)];
_11.fld2 = (-30852_i16) as i128;
RET = [_8,_8,_8,_8,_8,_8];
_6 = _2;
_2 = _4;
_11.fld3 = [(-4788961800181102952_i64),(-4053395505156336827_i64),(-8673546424114646497_i64),(-7635395459195291548_i64)];
_9 = [(-2534027753309127370_i64)];
Goto(bb4)
}
bb4 = {
_15.fld1 = [(-8837468561386741337_i64),(-2523698423056982877_i64),(-3539369007794645937_i64)];
_10 = 243_u8 as f32;
_15.fld1 = [(-5963583496996503190_i64),215631065850108876_i64,(-8442221129397151561_i64)];
_15.fld1 = [(-7500549739287487228_i64),(-1324311409024485687_i64),5678530137041442262_i64];
_18.fld1.0 = (_11.fld0,);
_19 = [5_usize,12256463027690389014_usize,4846721257373397823_usize,7047335460091889160_usize,6_usize,17779896840449119221_usize];
_18.fld0 = core::ptr::addr_of!(_3.0);
_18.fld1.0 = (_11.fld0,);
_15.fld3 = !186_u8;
_8 = true as i128;
_11.fld0 = _18.fld1.0.0;
_15.fld0 = [18332110529008201751_usize];
_15.fld3 = 124_u8;
Goto(bb5)
}
bb5 = {
_11.fld3 = [7936733483502754838_i64,6104019921669875470_i64,(-8994199735372573426_i64),8553812713921474655_i64];
_2 = _4;
_18.fld1.0 = (_11.fld0,);
_10 = 974118032_u32 as f32;
_7 = _15.fld0;
_15.fld1 = [3711612561825624015_i64,(-1780293112987065840_i64),(-3627296483882110601_i64)];
_11.fld2 = (-3909659069035442626_i64) as i128;
_20 = -(-980517143_i32);
_14 = ['\u{45b27}','\u{b40f2}','\u{944db}','\u{a8937}','\u{1d888}'];
_5 = !_1;
_15.fld2 = !3972747096_u32;
_2 = _4;
_6 = core::ptr::addr_of_mut!((*_4));
_8 = false as i128;
_21 = _10 * _10;
_13 = _19;
_15.fld2 = !2210268847_u32;
_21 = _10 * _10;
Goto(bb6)
}
bb6 = {
_1 = 17949396125068017569_u64 as isize;
_3.0 = core::ptr::addr_of_mut!(_18.fld1.1);
_23 = ['\u{62fad}'];
_12 = _11.fld1 * _11.fld1;
_17 = &_10;
_18.fld1.0.0 = _11.fld0;
_14 = ['\u{7fe01}','\u{7f499}','\u{10b365}','\u{9c5a3}','\u{61ae3}'];
_18.fld1.2 = RET;
_18.fld1.1 = _8 as i8;
_9 = [4476245852787448111_i64];
_11.fld1 = _12;
_21 = -_10;
_15.fld3 = 59464_u16 as u8;
Goto(bb7)
}
bb7 = {
_10 = -_21;
_8 = _11.fld2 << (*_4);
_18.fld1.1 = 79_i8 ^ 117_i8;
_8 = !_11.fld2;
_1 = -(*_4);
_11.fld3 = [(-7547009744054538928_i64),736530745442197552_i64,5515150405075684661_i64,6304009902028647885_i64];
_12 = -_11.fld1;
_18.fld1.2 = [_11.fld2,_11.fld2,_8,_11.fld2,_8,_11.fld2];
_2 = core::ptr::addr_of_mut!((*_6));
_18.fld1.0 = (_11.fld0,);
_23 = ['\u{74bce}'];
_24.fld0 = _15.fld2 as u128;
_24.fld4.1 = [(-5565295853109175268_i64),(-4509877672237758995_i64),(-67957750278101362_i64),2584463971547642388_i64];
_23 = ['\u{912bc}'];
_7 = [2_usize];
Goto(bb8)
}
bb8 = {
_28.1 = [9196898077364520805_i64,(-5927567731503047672_i64),(-2425536405405907922_i64),(-6174862511549775821_i64)];
Goto(bb9)
}
bb9 = {
_11.fld0 = _18.fld1.0.0;
Goto(bb10)
}
bb10 = {
_30 = _24.fld0 as u8;
_1 = _18.fld1.1 as isize;
Goto(bb11)
}
bb11 = {
_20 = -785642580_i32;
_24.fld1 = _15.fld0;
_24.fld3 = Adt48::Variant2 { fld0: _14 };
_14 = Field::<[char; 5]>(Variant(_24.fld3, 2), 0);
_15.fld0 = [4_usize];
_27 = (_11.fld2, _28.1, (-3758_i16));
_16 = core::ptr::addr_of!(_3.0);
Goto(bb12)
}
bb12 = {
_31 = !false;
_4 = _6;
_28.2 = _27.2;
_34 = _8 as i32;
_7 = [558929631602829097_usize];
_9 = [(-8614401307013136875_i64)];
_11.fld3 = [8354494814051256748_i64,7001809694249565292_i64,409677022013611527_i64,(-8107071901613491917_i64)];
_24.fld4.0 = core::ptr::addr_of_mut!(_1);
_11.fld3 = _28.1;
_18.fld1.0 = (_11.fld0,);
_28 = (_27.0, _27.1, _27.2);
_19 = [10478152592804257510_usize,2_usize,13912771867428689774_usize,12075224234481015766_usize,0_usize,1_usize];
_24.fld4.2 = _34;
_15.fld1 = [(-1629472326017852706_i64),3331995317258910213_i64,7724379814694335975_i64];
_27.2 = _28.2 * _28.2;
_24.fld4.0 = core::ptr::addr_of_mut!(_25);
Call(_24.fld6 = fn14(_11.fld0, _19, (*_2), (*_16), _19, _11.fld3, Move(_18)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_18.fld1.0.0 = [(-2163585314231921153_i64),(-2003019383833099450_i64),2865368137821218871_i64,8921800265785571990_i64,7917773527177758518_i64];
_10 = _21 - _21;
_31 = true;
_17 = &_10;
_15.fld3 = !_30;
match _28.2 {
0 => bb6,
1 => bb14,
2 => bb15,
340282366920938463463374607431768207698 => bb17,
_ => bb16
}
}
bb14 = {
_9 = [(-373181539621381020_i64)];
_7 = [4472302493104570006_usize];
_4 = core::ptr::addr_of_mut!(_1);
_10 = 5_usize as f32;
_8 = (-131059000155439606966360570306539978676_i128);
RET = [_8,_8,_8,_8,_8,_8];
_7 = [4_usize];
_12 = _10 as f64;
_7 = [18246572871070604437_usize];
_11.fld3 = [(-8103126303370274465_i64),1160345196908177431_i64,6983714120631780076_i64,8769034518962573627_i64];
_11.fld1 = 0_usize as f64;
_4 = core::ptr::addr_of_mut!(_5);
_11.fld3 = [4660080894289343534_i64,4305336512105186858_i64,(-8058977102280412194_i64),1187479095402970810_i64];
Call(RET = fn12(_2, _6, _6, _2, _2, _6, _2, _6, _5, _2, _3, _3.0, _2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_28.1 = [9196898077364520805_i64,(-5927567731503047672_i64),(-2425536405405907922_i64),(-6174862511549775821_i64)];
Goto(bb9)
}
bb16 = {
_30 = _24.fld0 as u8;
_1 = _18.fld1.1 as isize;
Goto(bb11)
}
bb17 = {
RET = [_27.0,_28.0,_8,_8,_28.0,_27.0];
_29 = !_31;
_33 = '\u{4f46d}';
_24.fld6 = _4;
_36 = _33;
_27 = (_11.fld2, _24.fld4.1, _28.2);
_22 = Adt50::Variant0 { fld0: _16 };
_15.fld3 = _30 << _20;
Goto(bb18)
}
bb18 = {
Call(_39 = dump_var(11_usize, 5_usize, Move(_5), 30_usize, Move(_30), 7_usize, Move(_7), 29_usize, Move(_29)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_39 = dump_var(11_usize, 19_usize, Move(_19), 20_usize, Move(_20), 33_usize, Move(_33), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_39 = dump_var(11_usize, 13_usize, Move(_13), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: *mut isize,mut _2: *mut isize,mut _3: *mut isize,mut _4: *mut isize,mut _5: *mut isize,mut _6: *mut isize,mut _7: *mut isize,mut _8: *mut isize,mut _9: isize,mut _10: *mut isize,mut _11: (*mut i8,),mut _12: *mut i8,mut _13: *mut isize,mut _14: *mut isize) -> [i128; 6] {
mir! {
type RET = [i128; 6];
let _15: u64;
let _16: [i64; 4];
let _17: f32;
let _18: f32;
let _19: &'static f32;
let _20: Adt55;
let _21: u16;
let _22: (i128, [i64; 4], i16);
let _23: f64;
let _24: [i64; 3];
let _25: Adt55;
let _26: [i64; 1];
let _27: i128;
let _28: [i64; 4];
let _29: isize;
let _30: ([i64; 5],);
let _31: ();
let _32: ();
{
_13 = core::ptr::addr_of_mut!(_9);
_9 = (-9223372036854775808_isize) << 16320482881099509638879168289872373313_i128;
_10 = core::ptr::addr_of_mut!((*_13));
RET = [134104079982672224397974073153574672072_i128,125277761831535171754538065499434122141_i128,65554044398020078848063872131338281552_i128,(-58745446339299226608181258234801686793_i128),(-59427771343204631638291801819745968738_i128),(-28349447883358466872541718489905589366_i128)];
_7 = core::ptr::addr_of_mut!((*_13));
_14 = _4;
_7 = core::ptr::addr_of_mut!((*_13));
_1 = _6;
_14 = _6;
_5 = core::ptr::addr_of_mut!((*_13));
_9 = 10114_i16 as isize;
_11 = (_12,);
_14 = _8;
_8 = core::ptr::addr_of_mut!((*_10));
_9 = 21_isize;
_15 = (-88141938103261756_i64) as u64;
_9 = !(-64_isize);
_6 = core::ptr::addr_of_mut!((*_13));
_2 = _5;
Goto(bb1)
}
bb1 = {
_12 = _11.0;
_6 = _14;
_11.0 = _12;
_7 = _6;
_16 = [(-3443669426633449975_i64),2975786678343548441_i64,(-5101913907497357815_i64),4980443265994345969_i64];
_11.0 = _12;
_10 = core::ptr::addr_of_mut!(_9);
_10 = core::ptr::addr_of_mut!((*_8));
_6 = _1;
RET = [158370544498101795924066327154023862911_i128,106559314088940569819608970415868428906_i128,109994364870858895402359343865906776011_i128,9606026676388951680124987961608321657_i128,77319152638993001736710644347381017007_i128,(-151163318232923888728062517805792865655_i128)];
_12 = _11.0;
_12 = _11.0;
_7 = _1;
RET = [136029639275169495699761572527202978850_i128,(-168723955407640101864545470163067401026_i128),95696799874590890045886710577083233446_i128,(-126744689285340666256482461648379998962_i128),(-47708702496169384195303598684679632748_i128),(-26727477078248528366847416442841310208_i128)];
_11.0 = _12;
_15 = 12537590531471963890_u64;
RET = [102500032737122603009483813195119336123_i128,(-12025443040264608856910158075252688259_i128),76035008489373690127112514166923442225_i128,159770858236696834437131595474295746866_i128,(-90628951603214881348376454430509309847_i128),(-149298019833980504614611253203295045340_i128)];
_18 = 238_u8 as f32;
_20.fld1 = [7915441090442005617_usize];
_11 = (_12,);
_4 = _6;
_1 = _4;
match _15 {
12537590531471963890 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_20.fld4 = (_7, _16, 1438406321_i32);
RET = [59883414978523130444055947497377687740_i128,(-90870999057207590415113881794431072032_i128),(-94773241337375462576667823195436458953_i128),168562547218038642186547050078869180609_i128,(-160529655240514200374805545709004488951_i128),(-10196040858675352084015415186209085627_i128)];
_21 = (-20215078655057022235965695347961437384_i128) as u16;
_6 = core::ptr::addr_of_mut!((*_8));
_20.fld5 = ['\u{6274c}'];
_6 = core::ptr::addr_of_mut!(_9);
_3 = core::ptr::addr_of_mut!((*_13));
_20.fld6 = core::ptr::addr_of_mut!(_9);
_15 = 13742428718393044554_u64;
_21 = 24767_u16 - 10432_u16;
_17 = _18;
match _20.fld4.2 {
0 => bb1,
1438406321 => bb4,
_ => bb2
}
}
bb4 = {
_20.fld4 = (_7, _16, 1712501542_i32);
_5 = _6;
_5 = core::ptr::addr_of_mut!((*_6));
_25.fld2 = (*_5);
_25.fld4 = _20.fld4;
_3 = core::ptr::addr_of_mut!((*_6));
_22.1 = [8770063174716586153_i64,2872041661465804934_i64,(-2170488493275310659_i64),881323443750996015_i64];
_25.fld0 = !97442857882709651590758210659764464714_u128;
_3 = core::ptr::addr_of_mut!((*_5));
_22.0 = _15 as i128;
_22.1 = _25.fld4.1;
_23 = _20.fld4.2 as f64;
_25.fld4.0 = _14;
_6 = _4;
_1 = core::ptr::addr_of_mut!((*_8));
_25.fld5 = _20.fld5;
_25.fld0 = 23038543445288589688132288933908149080_u128 >> _25.fld4.2;
Call(_7 = fn13(_20.fld4, _25.fld4.2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_22.0 = (-19519066931596850797072556397287864194_i128);
_25.fld6 = core::ptr::addr_of_mut!((*_10));
RET = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_20.fld5 = _25.fld5;
_4 = core::ptr::addr_of_mut!((*_1));
_20.fld6 = _7;
_20.fld0 = _25.fld0 ^ _25.fld0;
_20.fld6 = core::ptr::addr_of_mut!((*_5));
_26 = [8313151960038514237_i64];
_4 = _20.fld4.0;
_6 = core::ptr::addr_of_mut!(_20.fld2);
_20.fld6 = _4;
_25.fld4.0 = core::ptr::addr_of_mut!(_20.fld2);
_5 = core::ptr::addr_of_mut!((*_13));
_2 = core::ptr::addr_of_mut!((*_6));
Goto(bb6)
}
bb6 = {
_15 = 3936923342847908254_u64 ^ 13906710046781892054_u64;
_25.fld0 = '\u{105b31}' as u128;
_22 = (129971655324947429509939502313309485496_i128, _20.fld4.1, (-320_i16));
RET = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
Goto(bb7)
}
bb7 = {
_25.fld4.2 = _20.fld4.2 >> _20.fld0;
_22.1 = [5413700773920653262_i64,1662996914139111486_i64,(-4685740858174979011_i64),2208501781106473873_i64];
_25.fld5 = ['\u{6a41}'];
_20.fld0 = 2697803564_u32 as u128;
_25.fld4 = (_7, _20.fld4.1, _20.fld4.2);
_6 = core::ptr::addr_of_mut!((*_10));
_17 = _23 as f32;
_13 = core::ptr::addr_of_mut!((*_6));
_7 = _25.fld4.0;
_13 = core::ptr::addr_of_mut!((*_5));
_19 = &_18;
_5 = core::ptr::addr_of_mut!((*_8));
_20.fld4.0 = _4;
RET = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_22.1 = [8188313821443787579_i64,549151435739824239_i64,(-2387859570707206090_i64),(-6155109404793370710_i64)];
_22 = (15139105330318054845459084705212482604_i128, _16, (-21302_i16));
_25.fld4.2 = 3321654948_u32 as i32;
_7 = core::ptr::addr_of_mut!(_25.fld2);
match _20.fld4.2 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
1712501542 => bb13,
_ => bb12
}
}
bb8 = {
_15 = 3936923342847908254_u64 ^ 13906710046781892054_u64;
_25.fld0 = '\u{105b31}' as u128;
_22 = (129971655324947429509939502313309485496_i128, _20.fld4.1, (-320_i16));
RET = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
Goto(bb7)
}
bb9 = {
_12 = _11.0;
_6 = _14;
_11.0 = _12;
_7 = _6;
_16 = [(-3443669426633449975_i64),2975786678343548441_i64,(-5101913907497357815_i64),4980443265994345969_i64];
_11.0 = _12;
_10 = core::ptr::addr_of_mut!(_9);
_10 = core::ptr::addr_of_mut!((*_8));
_6 = _1;
RET = [158370544498101795924066327154023862911_i128,106559314088940569819608970415868428906_i128,109994364870858895402359343865906776011_i128,9606026676388951680124987961608321657_i128,77319152638993001736710644347381017007_i128,(-151163318232923888728062517805792865655_i128)];
_12 = _11.0;
_12 = _11.0;
_7 = _1;
RET = [136029639275169495699761572527202978850_i128,(-168723955407640101864545470163067401026_i128),95696799874590890045886710577083233446_i128,(-126744689285340666256482461648379998962_i128),(-47708702496169384195303598684679632748_i128),(-26727477078248528366847416442841310208_i128)];
_11.0 = _12;
_15 = 12537590531471963890_u64;
RET = [102500032737122603009483813195119336123_i128,(-12025443040264608856910158075252688259_i128),76035008489373690127112514166923442225_i128,159770858236696834437131595474295746866_i128,(-90628951603214881348376454430509309847_i128),(-149298019833980504614611253203295045340_i128)];
_18 = 238_u8 as f32;
_20.fld1 = [7915441090442005617_usize];
_11 = (_12,);
_4 = _6;
_1 = _4;
match _15 {
12537590531471963890 => bb3,
_ => bb2
}
}
bb10 = {
_20.fld4 = (_7, _16, 1712501542_i32);
_5 = _6;
_5 = core::ptr::addr_of_mut!((*_6));
_25.fld2 = (*_5);
_25.fld4 = _20.fld4;
_3 = core::ptr::addr_of_mut!((*_6));
_22.1 = [8770063174716586153_i64,2872041661465804934_i64,(-2170488493275310659_i64),881323443750996015_i64];
_25.fld0 = !97442857882709651590758210659764464714_u128;
_3 = core::ptr::addr_of_mut!((*_5));
_22.0 = _15 as i128;
_22.1 = _25.fld4.1;
_23 = _20.fld4.2 as f64;
_25.fld4.0 = _14;
_6 = _4;
_1 = core::ptr::addr_of_mut!((*_8));
_25.fld5 = _20.fld5;
_25.fld0 = 23038543445288589688132288933908149080_u128 >> _25.fld4.2;
Call(_7 = fn13(_20.fld4, _25.fld4.2), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_20.fld4 = (_7, _16, 1438406321_i32);
RET = [59883414978523130444055947497377687740_i128,(-90870999057207590415113881794431072032_i128),(-94773241337375462576667823195436458953_i128),168562547218038642186547050078869180609_i128,(-160529655240514200374805545709004488951_i128),(-10196040858675352084015415186209085627_i128)];
_21 = (-20215078655057022235965695347961437384_i128) as u16;
_6 = core::ptr::addr_of_mut!((*_8));
_20.fld5 = ['\u{6274c}'];
_6 = core::ptr::addr_of_mut!(_9);
_3 = core::ptr::addr_of_mut!((*_13));
_20.fld6 = core::ptr::addr_of_mut!(_9);
_15 = 13742428718393044554_u64;
_21 = 24767_u16 - 10432_u16;
_17 = _18;
match _20.fld4.2 {
0 => bb1,
1438406321 => bb4,
_ => bb2
}
}
bb12 = {
Return()
}
bb13 = {
_25.fld3 = Adt48::Variant0 { fld0: _21,fld1: _22.0,fld2: _20.fld1 };
_26 = [(-3409662184495712066_i64)];
_27 = _22.0 >> _20.fld4.2;
_3 = core::ptr::addr_of_mut!((*_1));
_7 = core::ptr::addr_of_mut!((*_5));
place!(Field::<i128>(Variant(_25.fld3, 0), 1)) = _27;
_23 = _22.2 as f64;
_20.fld0 = _25.fld0;
_20.fld3 = Adt48::Variant1 { fld0: _23 };
_2 = core::ptr::addr_of_mut!((*_1));
_6 = core::ptr::addr_of_mut!((*_13));
_24 = [5692140449651745658_i64,(-8176679845396489058_i64),8548540060908288808_i64];
_28 = [4097548250224246350_i64,808246619618619320_i64,7887236288672498539_i64,8170871161711728496_i64];
_7 = core::ptr::addr_of_mut!((*_2));
_20.fld0 = _25.fld0;
_13 = core::ptr::addr_of_mut!(_25.fld2);
RET = [_27,Field::<i128>(Variant(_25.fld3, 0), 1),Field::<i128>(Variant(_25.fld3, 0), 1),Field::<i128>(Variant(_25.fld3, 0), 1),Field::<i128>(Variant(_25.fld3, 0), 1),Field::<i128>(Variant(_25.fld3, 0), 1)];
_25.fld1 = [6_usize];
_20 = Adt55 { fld0: _25.fld0,fld1: Field::<[usize; 1]>(Variant(_25.fld3, 0), 2),fld2: (*_6),fld3: Move(_25.fld3),fld4: _25.fld4,fld5: _25.fld5,fld6: _4 };
_30.0 = [856920942316390814_i64,(-5699929152518126020_i64),(-5358828842424730127_i64),6003315093547765102_i64,(-224020789525556991_i64)];
place!(Field::<u16>(Variant(_20.fld3, 0), 0)) = _25.fld4.2 as u16;
_20.fld6 = core::ptr::addr_of_mut!((*_6));
_11.0 = _12;
place!(Field::<u16>(Variant(_20.fld3, 0), 0)) = (*_10) as u16;
_25.fld0 = _20.fld0 + _20.fld0;
_20.fld4.2 = _25.fld4.2 ^ _25.fld4.2;
_25.fld6 = core::ptr::addr_of_mut!((*_10));
Goto(bb14)
}
bb14 = {
Call(_31 = dump_var(12_usize, 21_usize, Move(_21), 28_usize, Move(_28), 30_usize, Move(_30), 9_usize, Move(_9)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_31 = dump_var(12_usize, 22_usize, Move(_22), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: (*mut isize, [i64; 4], i32),mut _2: i32) -> *mut isize {
mir! {
type RET = *mut isize;
let _3: ([i64; 5],);
let _4: *mut isize;
let _5: isize;
let _6: usize;
let _7: Adt56;
let _8: Adt54;
let _9: f32;
let _10: Adt56;
let _11: (([i64; 5],), i8, [i128; 6]);
let _12: ();
let _13: ();
{
RET = _1.0;
RET = _1.0;
RET = _1.0;
RET = _1.0;
_3.0 = [(-1977858763022983137_i64),9167454581000020964_i64,(-623319183915694343_i64),1318226476918959274_i64,(-8742371721667390740_i64)];
_1.1 = [6888179395091221015_i64,4323989500004935121_i64,7663880324867070558_i64,7612421968538920533_i64];
_1.2 = -_2;
RET = _1.0;
_1.1 = [(-6411417348884043088_i64),7306090772242207243_i64,2356557485149629633_i64,3575887623829633242_i64];
_3.0 = [8298513392890835596_i64,5115064622350327594_i64,2613000489597756469_i64,11891717588754133_i64,(-3864705278808870502_i64)];
_2 = !_1.2;
_1.1 = [(-147848189964092087_i64),2826749039906203121_i64,2165531709962612554_i64,2647022770915212600_i64];
_3.0 = [(-7312266422335655150_i64),(-122726958862417399_i64),4381393568393669007_i64,4608031264062148764_i64,(-6596346581621274160_i64)];
_4 = RET;
_1.1 = [5462395135133618403_i64,7745448130077083059_i64,(-1025875133200661745_i64),(-40867448573838388_i64)];
RET = _1.0;
_5 = (-36_isize);
_1.2 = _2;
_10.fld0 = [2708588805944507368_usize];
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(13_usize, 2_usize, Move(_2), 13_usize, _13, 13_usize, _13, 13_usize, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: [i64; 5],mut _2: [usize; 6],mut _3: isize,mut _4: *mut i8,mut _5: [usize; 6],mut _6: [i64; 4],mut _7: Adt45) -> *mut isize {
mir! {
type RET = *mut isize;
let _8: i128;
let _9: char;
let _10: i64;
let _11: [i128; 6];
let _12: f64;
let _13: f32;
let _14: *mut isize;
let _15: u8;
let _16: (u8, u8, f64, [i64; 4]);
let _17: f32;
let _18: [char; 5];
let _19: Adt45;
let _20: i64;
let _21: (*mut i8,);
let _22: usize;
let _23: Adt54;
let _24: i64;
let _25: Adt43;
let _26: Adt56;
let _27: (([i64; 5],), i8, [i128; 6]);
let _28: isize;
let _29: (([i64; 5],), i8, [i128; 6]);
let _30: [usize; 6];
let _31: bool;
let _32: u128;
let _33: Adt56;
let _34: u16;
let _35: isize;
let _36: ([i64; 5],);
let _37: isize;
let _38: bool;
let _39: (*mut isize, [i64; 4], i32);
let _40: Adt55;
let _41: bool;
let _42: char;
let _43: ();
let _44: ();
{
_4 = core::ptr::addr_of_mut!(_7.fld1.1);
RET = core::ptr::addr_of_mut!(_3);
_7.fld1.0 = (_1,);
_8 = 31843_u16 as i128;
_6 = [6959025968961736321_i64,8848446193620695637_i64,(-2978923349056376207_i64),(-7064071535781634412_i64)];
_6 = [(-2527638898281857896_i64),835040524443216955_i64,4638489907666492818_i64,7577308779656507850_i64];
_6 = [4760495117425714409_i64,(-3664729836405173788_i64),(-2010332608418472712_i64),(-8980607253374789137_i64)];
_6 = [4312804937253746380_i64,(-2625571930387360446_i64),8776721915776722_i64,1675504842639468006_i64];
_9 = '\u{39490}';
_10 = -4863727806365542663_i64;
RET = core::ptr::addr_of_mut!((*RET));
_1 = _7.fld1.0.0;
_7.fld1.2 = [_8,_8,_8,_8,_8,_8];
_1 = _7.fld1.0.0;
RET = core::ptr::addr_of_mut!((*RET));
_14 = core::ptr::addr_of_mut!((*RET));
_13 = (-2635_i16) as f32;
_15 = _8 as u8;
_7.fld1.2 = [_8,_8,_8,_8,_8,_8];
_11 = _7.fld1.2;
Goto(bb1)
}
bb1 = {
_4 = core::ptr::addr_of_mut!((*_4));
_16.0 = _15;
_7.fld1.0 = (_1,);
_7.fld1.1 = 1636739165983831073_u64 as i8;
_7.fld1.1 = (-86_i8);
_7.fld1.1 = -22_i8;
_1 = [_10,_10,_10,_10,_10];
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb2)
}
bb2 = {
_11 = [_8,_8,_8,_8,_8,_8];
_19.fld1.2 = [_8,_8,_8,_8,_8,_8];
RET = core::ptr::addr_of_mut!((*_14));
_16.2 = 351053384458315907_usize as f64;
_16.0 = !_15;
_7.fld1.0.0 = [_10,_10,_10,_10,_10];
_16.3 = [_10,_10,_10,_10];
_7.fld1.1 = _13 as i8;
_17 = _13 + _13;
Call(_2 = fn15(_5, _7.fld1.1, _7.fld1, (*_14), _14, (*_4), _7.fld1.2, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_16.3 = _6;
RET = _14;
_2 = [0_usize,5268103124652680326_usize,7_usize,1_usize,16608338951846566784_usize,7_usize];
_2 = _5;
_22 = 15520391396231680998_usize & 11297735326897636644_usize;
_17 = _13 + _13;
_19.fld1.0 = (_1,);
_17 = _13;
_17 = -_13;
_12 = _22 as f64;
_21.0 = core::ptr::addr_of_mut!(_19.fld1.1);
_20 = !_10;
_24 = _10 ^ _10;
_19.fld1.0 = _7.fld1.0;
_16 = (_15, _15, _12, _6);
_16.1 = 2240901699_u32 as u8;
_25.fld3 = _16.3;
_19.fld1.2 = [_8,_8,_8,_8,_8,_8];
_7.fld1.1 = 19_i8;
_3 = 9607422585243509853_u64 as isize;
_18 = [_9,_9,_9,_9,_9];
_21 = (_4,);
_2 = [_22,_22,_22,_22,_22,_22];
_7.fld1.2 = [_8,_8,_8,_8,_8,_8];
Call(_19.fld1.1 = fn17(_22, _8, _16.3, (*_4), _16, _1, _16, _4, _5, _15, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_25.fld1 = -_12;
_27.0 = (_7.fld1.0.0,);
_7.fld1.0.0 = [_24,_10,_24,_24,_10];
_3 = 9223372036854775807_isize;
_27.1 = !(*_4);
_3 = _10 as isize;
_11 = _7.fld1.2;
_27.2 = _19.fld1.2;
_19.fld1.0 = (_7.fld1.0.0,);
_29 = (_19.fld1.0, (*_4), _27.2);
_25 = Adt43 { fld0: _27.0.0,fld1: _12,fld2: _8,fld3: _16.3 };
_7.fld1.1 = _29.1;
_27.0.0 = _25.fld0;
_22 = _20 as usize;
_6 = [_24,_20,_20,_24];
_16 = (_15, _15, _25.fld1, _25.fld3);
Goto(bb5)
}
bb5 = {
_12 = -_16.2;
_21.0 = _4;
_25.fld0 = _29.0.0;
match (*_4) {
0 => bb6,
1 => bb7,
2 => bb8,
19 => bb10,
_ => bb9
}
}
bb6 = {
_25.fld1 = -_12;
_27.0 = (_7.fld1.0.0,);
_7.fld1.0.0 = [_24,_10,_24,_24,_10];
_3 = 9223372036854775807_isize;
_27.1 = !(*_4);
_3 = _10 as isize;
_11 = _7.fld1.2;
_27.2 = _19.fld1.2;
_19.fld1.0 = (_7.fld1.0.0,);
_29 = (_19.fld1.0, (*_4), _27.2);
_25 = Adt43 { fld0: _27.0.0,fld1: _12,fld2: _8,fld3: _16.3 };
_7.fld1.1 = _29.1;
_27.0.0 = _25.fld0;
_22 = _20 as usize;
_6 = [_24,_20,_20,_24];
_16 = (_15, _15, _25.fld1, _25.fld3);
Goto(bb5)
}
bb7 = {
_16.3 = _6;
RET = _14;
_2 = [0_usize,5268103124652680326_usize,7_usize,1_usize,16608338951846566784_usize,7_usize];
_2 = _5;
_22 = 15520391396231680998_usize & 11297735326897636644_usize;
_17 = _13 + _13;
_19.fld1.0 = (_1,);
_17 = _13;
_17 = -_13;
_12 = _22 as f64;
_21.0 = core::ptr::addr_of_mut!(_19.fld1.1);
_20 = !_10;
_24 = _10 ^ _10;
_19.fld1.0 = _7.fld1.0;
_16 = (_15, _15, _12, _6);
_16.1 = 2240901699_u32 as u8;
_25.fld3 = _16.3;
_19.fld1.2 = [_8,_8,_8,_8,_8,_8];
_7.fld1.1 = 19_i8;
_3 = 9607422585243509853_u64 as isize;
_18 = [_9,_9,_9,_9,_9];
_21 = (_4,);
_2 = [_22,_22,_22,_22,_22,_22];
_7.fld1.2 = [_8,_8,_8,_8,_8,_8];
Call(_19.fld1.1 = fn17(_22, _8, _16.3, (*_4), _16, _1, _16, _4, _5, _15, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_11 = [_8,_8,_8,_8,_8,_8];
_19.fld1.2 = [_8,_8,_8,_8,_8,_8];
RET = core::ptr::addr_of_mut!((*_14));
_16.2 = 351053384458315907_usize as f64;
_16.0 = !_15;
_7.fld1.0.0 = [_10,_10,_10,_10,_10];
_16.3 = [_10,_10,_10,_10];
_7.fld1.1 = _13 as i8;
_17 = _13 + _13;
Call(_2 = fn15(_5, _7.fld1.1, _7.fld1, (*_14), _14, (*_4), _7.fld1.2, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_4 = core::ptr::addr_of_mut!((*_4));
_16.0 = _15;
_7.fld1.0 = (_1,);
_7.fld1.1 = 1636739165983831073_u64 as i8;
_7.fld1.1 = (-86_i8);
_7.fld1.1 = -22_i8;
_1 = [_10,_10,_10,_10,_10];
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb2)
}
bb10 = {
_11 = _19.fld1.2;
_16.3 = [_10,_10,_20,_20];
_19.fld1.2 = [_25.fld2,_25.fld2,_25.fld2,_8,_8,_25.fld2];
_7.fld1.0.0 = [_24,_20,_10,_10,_10];
_31 = !false;
_7.fld1.0 = (_29.0.0,);
_26.fld0 = [_22];
_25.fld2 = !_8;
_19.fld1.1 = 26298_u16 as i8;
_27.0.0 = [_10,_10,_20,_24,_20];
_21 = (_4,);
_14 = RET;
_33.fld3 = _16.1 | _15;
_11 = [_8,_8,_8,_8,_25.fld2,_25.fld2];
_33.fld2 = _3 as u32;
_17 = _15 as f32;
_16 = (_15, _33.fld3, _25.fld1, _6);
_19.fld1.0 = (_29.0.0,);
_16 = (_33.fld3, _33.fld3, _12, _6);
_7.fld1.0 = (_1,);
_33.fld2 = 2454881574_u32;
_2 = [_22,_22,_22,_22,_22,_22];
_33.fld1 = [_24,_24,_20];
_16.3 = [_10,_24,_20,_24];
_19.fld1.0.0 = [_20,_24,_24,_24,_10];
Call(_7.fld1.2 = core::intrinsics::transmute(_27.2), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_25.fld0 = [_24,_24,_10,_20,_24];
_33.fld1 = [_20,_24,_24];
_27.0 = (_29.0.0,);
_17 = _3 as f32;
match _33.fld2 {
0 => bb12,
2454881574 => bb14,
_ => bb13
}
}
bb12 = {
_11 = _19.fld1.2;
_16.3 = [_10,_10,_20,_20];
_19.fld1.2 = [_25.fld2,_25.fld2,_25.fld2,_8,_8,_25.fld2];
_7.fld1.0.0 = [_24,_20,_10,_10,_10];
_31 = !false;
_7.fld1.0 = (_29.0.0,);
_26.fld0 = [_22];
_25.fld2 = !_8;
_19.fld1.1 = 26298_u16 as i8;
_27.0.0 = [_10,_10,_20,_24,_20];
_21 = (_4,);
_14 = RET;
_33.fld3 = _16.1 | _15;
_11 = [_8,_8,_8,_8,_25.fld2,_25.fld2];
_33.fld2 = _3 as u32;
_17 = _15 as f32;
_16 = (_15, _33.fld3, _25.fld1, _6);
_19.fld1.0 = (_29.0.0,);
_16 = (_33.fld3, _33.fld3, _12, _6);
_7.fld1.0 = (_1,);
_33.fld2 = 2454881574_u32;
_2 = [_22,_22,_22,_22,_22,_22];
_33.fld1 = [_24,_24,_20];
_16.3 = [_10,_24,_20,_24];
_19.fld1.0.0 = [_20,_24,_24,_24,_10];
Call(_7.fld1.2 = core::intrinsics::transmute(_27.2), ReturnTo(bb11), UnwindUnreachable())
}
bb13 = {
_25.fld1 = -_12;
_27.0 = (_7.fld1.0.0,);
_7.fld1.0.0 = [_24,_10,_24,_24,_10];
_3 = 9223372036854775807_isize;
_27.1 = !(*_4);
_3 = _10 as isize;
_11 = _7.fld1.2;
_27.2 = _19.fld1.2;
_19.fld1.0 = (_7.fld1.0.0,);
_29 = (_19.fld1.0, (*_4), _27.2);
_25 = Adt43 { fld0: _27.0.0,fld1: _12,fld2: _8,fld3: _16.3 };
_7.fld1.1 = _29.1;
_27.0.0 = _25.fld0;
_22 = _20 as usize;
_6 = [_24,_20,_20,_24];
_16 = (_15, _15, _25.fld1, _25.fld3);
Goto(bb5)
}
bb14 = {
_19.fld0 = core::ptr::addr_of!(_21.0);
_2 = [_22,_22,_22,_22,_22,_22];
_31 = !false;
_7 = Adt45 { fld0: _19.fld0,fld1: _19.fld1 };
_26.fld1 = _33.fld1;
_28 = _3 + _3;
_32 = _16.2 as u128;
_33.fld0 = [_22];
_25.fld2 = -_8;
_35 = !_28;
_29.2 = [_25.fld2,_8,_8,_25.fld2,_8,_25.fld2];
_26.fld1 = _33.fld1;
_39.0 = _14;
_26.fld2 = _33.fld2;
_17 = _20 as f32;
_40.fld4 = (_14, _16.3, 1272527126_i32);
_26 = Adt56 { fld0: _33.fld0,fld1: _33.fld1,fld2: _33.fld2,fld3: _16.1 };
_40.fld4.1 = [_20,_20,_20,_20];
_8 = _25.fld2;
_7.fld1.2 = [_8,_8,_8,_8,_25.fld2,_8];
_25.fld0 = [_24,_24,_10,_10,_24];
_22 = 2550554614060400999_usize;
_10 = _17 as i64;
_29.0.0 = [_20,_24,_24,_24,_10];
_26.fld3 = _9 as u8;
_25.fld0 = [_24,_20,_24,_10,_24];
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(14_usize, 1_usize, Move(_1), 10_usize, Move(_10), 35_usize, Move(_35), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(14_usize, 29_usize, Move(_29), 6_usize, Move(_6), 31_usize, Move(_31), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(14_usize, 9_usize, Move(_9), 2_usize, Move(_2), 44_usize, _44, 44_usize, _44), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [usize; 6],mut _2: i8,mut _3: (([i64; 5],), i8, [i128; 6]),mut _4: isize,mut _5: *mut isize,mut _6: i8,mut _7: [i128; 6],mut _8: isize) -> [usize; 6] {
mir! {
type RET = [usize; 6];
let _9: [usize; 6];
let _10: Adt56;
let _11: [i64; 5];
let _12: Adt49;
let _13: bool;
let _14: (([i64; 5],), i8, [i128; 6]);
let _15: f64;
let _16: isize;
let _17: [usize; 6];
let _18: u8;
let _19: i32;
let _20: [usize; 6];
let _21: usize;
let _22: f32;
let _23: (i128, [i64; 4], i16);
let _24: u8;
let _25: isize;
let _26: Adt46;
let _27: char;
let _28: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _29: ([i64; 5],);
let _30: i64;
let _31: u16;
let _32: f32;
let _33: f64;
let _34: char;
let _35: [i64; 3];
let _36: ();
let _37: ();
{
RET = _1;
Goto(bb1)
}
bb1 = {
_8 = 3_usize as isize;
_2 = _6;
RET = _1;
_1 = RET;
_1 = RET;
_3.2 = [49349388710007778705334038667692416617_i128,1637676296525704986983833526447807238_i128,(-39634512889512740797495785170071551250_i128),135688313508518621305204809425515591880_i128,106952896304889738484243404202290011445_i128,17403770798951712749136286263932662288_i128];
_5 = core::ptr::addr_of_mut!(_8);
_10.fld0 = [15926066073575284521_usize];
_10.fld3 = 117_u8;
_3.0.0 = [7662203717437151507_i64,3826973731315110111_i64,7256004861095752795_i64,(-1117406058069845945_i64),7904659742255200329_i64];
_10.fld3 = !66_u8;
_11 = [(-8585817398839504036_i64),(-334710495948482928_i64),(-2275917365049346359_i64),5076603618498258934_i64,6954056773724013_i64];
_11 = _3.0.0;
RET = [1_usize,4244951440351000308_usize,6645854210874451683_usize,758011256377841042_usize,0_usize,10309622691384990314_usize];
_2 = -_3.1;
_2 = _6;
_10.fld2 = 127871439844704349575897936064978364955_i128 as u32;
_10.fld1 = [1866591615494567256_i64,(-3175654022929698599_i64),7550200720063428768_i64];
_9 = [1_usize,3_usize,0_usize,5_usize,2_usize,14356934173889763112_usize];
_10.fld3 = !175_u8;
_10.fld3 = 243_u8;
_1 = RET;
RET = [10046551267438898156_usize,13078151295765974243_usize,4_usize,494944752028325808_usize,5_usize,6876593012973577476_usize];
_4 = _10.fld3 as isize;
_10.fld2 = 3776474711_u32 + 233509231_u32;
_13 = !false;
_3.0.0 = [6349503676170616527_i64,(-7661870080471764788_i64),886675469340037855_i64,1112325182383960042_i64,(-3707107404311003682_i64)];
Goto(bb2)
}
bb2 = {
_3.0.0 = [(-9222008387753556914_i64),3669919189929328641_i64,(-6731353868594579500_i64),(-4344031824375019359_i64),2937024087371347230_i64];
_3.0 = (_11,);
RET = [1_usize,13068923271489142036_usize,13550032198706253181_usize,10674234448444773749_usize,3200842834969840658_usize,15922178597072859214_usize];
RET = [4199167018681565503_usize,1_usize,11419788499489778586_usize,2_usize,6_usize,13684191188240220745_usize];
_10.fld0 = [16841003087999449380_usize];
_4 = 59907_u16 as isize;
_10.fld1 = [(-1293611613616519241_i64),7515927592383137417_i64,466005864728166406_i64];
Call(_10.fld0 = fn16(_3.2, _11, _3.0, _3.0, _10.fld3, _9, _3.0.0, _3, _10.fld1, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10.fld0 = [6_usize];
_14.1 = _2;
_14.0.0 = _3.0.0;
_14.2 = [(-138035128672940250140110754029247860042_i128),161695037031805640595308317305700347273_i128,115196962386369873674766920025186818593_i128,83470827963477111847853046229627594245_i128,(-130152626583190850058442811003411749658_i128),(-164326290629116144616142826401134160622_i128)];
_14.0.0 = _3.0.0;
match _10.fld3 {
0 => bb1,
1 => bb4,
2 => bb5,
243 => bb7,
_ => bb6
}
}
bb4 = {
_3.0.0 = [(-9222008387753556914_i64),3669919189929328641_i64,(-6731353868594579500_i64),(-4344031824375019359_i64),2937024087371347230_i64];
_3.0 = (_11,);
RET = [1_usize,13068923271489142036_usize,13550032198706253181_usize,10674234448444773749_usize,3200842834969840658_usize,15922178597072859214_usize];
RET = [4199167018681565503_usize,1_usize,11419788499489778586_usize,2_usize,6_usize,13684191188240220745_usize];
_10.fld0 = [16841003087999449380_usize];
_4 = 59907_u16 as isize;
_10.fld1 = [(-1293611613616519241_i64),7515927592383137417_i64,466005864728166406_i64];
Call(_10.fld0 = fn16(_3.2, _11, _3.0, _3.0, _10.fld3, _9, _3.0.0, _3, _10.fld1, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_8 = 3_usize as isize;
_2 = _6;
RET = _1;
_1 = RET;
_1 = RET;
_3.2 = [49349388710007778705334038667692416617_i128,1637676296525704986983833526447807238_i128,(-39634512889512740797495785170071551250_i128),135688313508518621305204809425515591880_i128,106952896304889738484243404202290011445_i128,17403770798951712749136286263932662288_i128];
_5 = core::ptr::addr_of_mut!(_8);
_10.fld0 = [15926066073575284521_usize];
_10.fld3 = 117_u8;
_3.0.0 = [7662203717437151507_i64,3826973731315110111_i64,7256004861095752795_i64,(-1117406058069845945_i64),7904659742255200329_i64];
_10.fld3 = !66_u8;
_11 = [(-8585817398839504036_i64),(-334710495948482928_i64),(-2275917365049346359_i64),5076603618498258934_i64,6954056773724013_i64];
_11 = _3.0.0;
RET = [1_usize,4244951440351000308_usize,6645854210874451683_usize,758011256377841042_usize,0_usize,10309622691384990314_usize];
_2 = -_3.1;
_2 = _6;
_10.fld2 = 127871439844704349575897936064978364955_i128 as u32;
_10.fld1 = [1866591615494567256_i64,(-3175654022929698599_i64),7550200720063428768_i64];
_9 = [1_usize,3_usize,0_usize,5_usize,2_usize,14356934173889763112_usize];
_10.fld3 = !175_u8;
_10.fld3 = 243_u8;
_1 = RET;
RET = [10046551267438898156_usize,13078151295765974243_usize,4_usize,494944752028325808_usize,5_usize,6876593012973577476_usize];
_4 = _10.fld3 as isize;
_10.fld2 = 3776474711_u32 + 233509231_u32;
_13 = !false;
_3.0.0 = [6349503676170616527_i64,(-7661870080471764788_i64),886675469340037855_i64,1112325182383960042_i64,(-3707107404311003682_i64)];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_3.2 = _14.2;
_4 = !(*_5);
_3 = (_14.0, _6, _14.2);
_15 = 7188415770138280830_i64 as f64;
_10.fld2 = !1360926476_u32;
_5 = core::ptr::addr_of_mut!(_16);
_1 = [6233802420111126786_usize,4_usize,17921824258634726112_usize,9097874431683491531_usize,10575328278705026330_usize,0_usize];
_14.0 = (_3.0.0,);
_14.0 = (_11,);
_4 = _8 - _8;
_16 = _4 & _8;
_14 = _3;
_13 = _16 < (*_5);
_13 = !true;
_14.0 = _3.0;
_3 = (_14.0, _2, _14.2);
_13 = !true;
_13 = true;
_16 = _8;
match _10.fld3 {
0 => bb1,
1 => bb5,
243 => bb8,
_ => bb6
}
}
bb8 = {
_15 = _10.fld2 as f64;
_3 = (_14.0, _14.1, _7);
_14.2 = _3.2;
_7 = _14.2;
_14.2 = _7;
_22 = (-7753561078137674284_i64) as f32;
_7 = [105196645518349406373796799523731454518_i128,137024431546298746405595415345636792948_i128,156107958424462205439523901148105062056_i128,(-51034069260342524491386916625726873111_i128),41637809126521289289901190859529752801_i128,49692271486168436565815595813396382778_i128];
_6 = '\u{5f850}' as i8;
Goto(bb9)
}
bb9 = {
_11 = [(-2603137047059497504_i64),5004291935579853084_i64,5018734930810636397_i64,(-9062443523482730055_i64),(-8539092208727295101_i64)];
_7 = _14.2;
_3 = (_14.0, _6, _7);
RET = _1;
_13 = _8 != _8;
_10.fld2 = 1602464415_u32;
_10.fld0 = [17273848272891637290_usize];
_3.1 = _6;
_14 = _3;
_8 = -(*_5);
_23.2 = !14834_i16;
_23.0 = (-25208155043360296639451256096255190200_i128) - 165110014355049246270132154341823807437_i128;
_20 = [3556696855002728151_usize,1_usize,4358009805022594882_usize,18066646385253442063_usize,5_usize,5_usize];
_6 = _2 ^ _14.1;
_18 = _23.2 as u8;
_18 = _10.fld3 % _10.fld3;
_21 = 7_usize >> _23.0;
_1 = [_21,_21,_21,_21,_21,_21];
_7 = _14.2;
_10.fld3 = _18;
_8 = !(*_5);
_15 = _21 as f64;
Call(_23.2 = core::intrinsics::bswap((-27284_i16)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_16 = _23.2 as isize;
_18 = '\u{ff3e0}' as u8;
_3.0.0 = _14.0.0;
_6 = !_2;
_11 = [(-8922550486344220335_i64),(-170277527496215839_i64),(-8507175035083786883_i64),(-1685624419226505035_i64),(-8354669480806760637_i64)];
_2 = -_14.1;
_10.fld0 = [_21];
_3 = (_14.0, _6, _14.2);
_14.0.0 = _3.0.0;
_18 = _10.fld3;
match _10.fld2 {
1602464415 => bb11,
_ => bb1
}
}
bb11 = {
_2 = -_3.1;
_14.0 = _3.0;
_19 = !1650612886_i32;
_9 = [_21,_21,_21,_21,_21,_21];
_3.2 = _14.2;
_11 = [684649510313711958_i64,747005337800904794_i64,6884126904857872535_i64,(-3673668755789135888_i64),8650553288645377001_i64];
_9 = [_21,_21,_21,_21,_21,_21];
_3.1 = !_14.1;
_28.4 = RET;
_10.fld3 = _15 as u8;
_28.3 = 54674_u16;
Goto(bb12)
}
bb12 = {
_21 = 0_usize & 4_usize;
_3.0 = _14.0;
_11 = [(-2872707767533113718_i64),(-2940864520967818247_i64),(-5615110575214310190_i64),(-2255330117643481427_i64),(-766360922316090958_i64)];
_20 = _28.4;
_29.0 = _3.0.0;
_28.1 = [(-4429431280777461750_i64),(-1270152977853718507_i64),7993165290548037360_i64,2595428391052578013_i64,(-7303904698527342314_i64)];
_14.2 = [_23.0,_23.0,_23.0,_23.0,_23.0,_23.0];
_28.2 = [(-5981926759691666723_i64)];
_30 = 5556389527979115174_i64 ^ (-5820822559037402416_i64);
RET = [_21,_21,_21,_21,_21,_21];
RET = [_21,_21,_21,_21,_21,_21];
_27 = '\u{f1d13}';
_15 = _28.3 as f64;
Goto(bb13)
}
bb13 = {
_13 = !true;
_5 = core::ptr::addr_of_mut!((*_5));
_10.fld1 = [_30,_30,_30];
_28.4 = _1;
_6 = _14.1;
_7 = _3.2;
_1 = _20;
_25 = !_4;
_29 = _14.0;
_16 = -_25;
_14.2 = [_23.0,_23.0,_23.0,_23.0,_23.0,_23.0];
_24 = !_10.fld3;
_19 = 1690448881_i32 - (-1883235250_i32);
_14.2 = _7;
_10.fld3 = 113732592129286509514516184988444241290_u128 as u8;
_28.3 = !52514_u16;
_2 = _14.1;
_17 = [_21,_21,_21,_21,_21,_21];
_23.1 = [_30,_30,_30,_30];
_29 = (_11,);
_6 = _15 as i8;
_13 = false;
_31 = !_28.3;
_3.0.0 = [_30,_30,_30,_30,_30];
_19 = _23.0 as i32;
_28.0 = -_19;
match _10.fld2 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb8,
4 => bb5,
5 => bb11,
1602464415 => bb14,
_ => bb7
}
}
bb14 = {
_10.fld1 = [_30,_30,_30];
_32 = _22;
_3.0 = (_29.0,);
_14.1 = -_6;
_35 = _10.fld1;
_23.2 = (-28080_i16);
_29.0 = [_30,_30,_30,_30,_30];
_25 = _2 as isize;
_33 = _22 as f64;
_14.0.0 = [_30,_30,_30,_30,_30];
_14.2 = [_23.0,_23.0,_23.0,_23.0,_23.0,_23.0];
_8 = -(*_5);
_3.0.0 = [_30,_30,_30,_30,_30];
_14.0.0 = [_30,_30,_30,_30,_30];
_17 = _1;
_14.0 = (_28.1,);
_9 = [_21,_21,_21,_21,_21,_21];
_6 = -_2;
_29 = (_14.0.0,);
_16 = _19 as isize;
_30 = !166090535728697624_i64;
_26 = Adt46::Variant3 { fld0: _28.2 };
_20 = RET;
_28.4 = [_21,_21,_21,_21,_21,_21];
_24 = _10.fld3;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(15_usize, 17_usize, Move(_17), 16_usize, Move(_16), 30_usize, Move(_30), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(15_usize, 1_usize, Move(_1), 3_usize, Move(_3), 8_usize, Move(_8), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(15_usize, 6_usize, Move(_6), 20_usize, Move(_20), 24_usize, Move(_24), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(15_usize, 19_usize, Move(_19), 37_usize, _37, 37_usize, _37, 37_usize, _37), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [i128; 6],mut _2: [i64; 5],mut _3: ([i64; 5],),mut _4: ([i64; 5],),mut _5: u8,mut _6: [usize; 6],mut _7: [i64; 5],mut _8: (([i64; 5],), i8, [i128; 6]),mut _9: [i64; 3],mut _10: *mut isize) -> [usize; 1] {
mir! {
type RET = [usize; 1];
let _11: [i32; 4];
let _12: [i64; 4];
let _13: [i128; 6];
let _14: isize;
let _15: isize;
let _16: (i128, [i64; 4], i16);
let _17: Adt51;
let _18: f32;
let _19: Adt50;
let _20: [usize; 6];
let _21: i16;
let _22: i32;
let _23: isize;
let _24: i64;
let _25: bool;
let _26: (([i64; 5],), i8, [i128; 6]);
let _27: bool;
let _28: [i64; 1];
let _29: (*mut i8,);
let _30: u64;
let _31: [i32; 4];
let _32: [i64; 4];
let _33: [char; 1];
let _34: [i128; 6];
let _35: Adt49;
let _36: isize;
let _37: bool;
let _38: isize;
let _39: ();
let _40: ();
{
_4.0 = _7;
RET = [13009907572602748946_usize];
_8.0.0 = _3.0;
_8.0 = (_4.0,);
_8.0 = (_2,);
_8.0.0 = _2;
RET = [5_usize];
_4.0 = _3.0;
_9 = [(-9167367479498030600_i64),7825099258236134174_i64,6119723276851825932_i64];
_8.1 = (-31_i8) & 7_i8;
_4.0 = [7044686516759458444_i64,(-7039130768772419147_i64),(-4983286543499625582_i64),(-58757411261207245_i64),(-3841107783280994719_i64)];
_8.2 = _1;
_11 = [(-1776495528_i32),(-654191285_i32),18291950_i32,31149859_i32];
RET = [3_usize];
Goto(bb1)
}
bb1 = {
_7 = [6546319272135325005_i64,5464269586074048136_i64,340390682838065692_i64,(-7752205162313365859_i64),(-5205022250165021250_i64)];
_11 = [2104441136_i32,931069972_i32,(-622509437_i32),(-2094306648_i32)];
_8.1 = 9223372036854775807_isize as i8;
_8.0.0 = [(-1275775261804090897_i64),7843510710419136000_i64,(-7658330263218499449_i64),(-8861804798859587133_i64),3015445293890761532_i64];
_9 = [7854437902142638781_i64,9132994757357740481_i64,(-265807420153264340_i64)];
_12 = [2985040796020850545_i64,(-2248772037639087394_i64),(-699659678375777679_i64),6307016715522087525_i64];
_2 = [(-2867775849833877320_i64),2125349394128753615_i64,2111909921910069160_i64,(-401748325872579716_i64),(-4674173375317094393_i64)];
_4.0 = [3794384170322464319_i64,9066272547590760508_i64,4587835260290450389_i64,702187614387831763_i64,(-2767850648955493389_i64)];
_4 = (_8.0.0,);
_3.0 = [4262547793657098218_i64,(-4386511887107122630_i64),4006319568227034928_i64,3370055582450124480_i64,6001670932321149925_i64];
RET = [2_usize];
_8 = (_3, (-70_i8), _1);
_8.1 = (-604064608_i32) as i8;
match _5 {
0 => bb2,
1 => bb3,
243 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Goto(bb6)
}
bb6 = {
_7 = [(-1025816444077075140_i64),(-2948345396090233950_i64),(-4826629588687163461_i64),4635191472778737995_i64,(-465658890690558671_i64)];
_9 = [75752031647095813_i64,5855290548824183160_i64,5552391966807997115_i64];
_12 = [(-6235891164424878435_i64),4942570863352612710_i64,216323001302135545_i64,3300881389139312634_i64];
_9 = [(-1584594767958040905_i64),(-5202462080837694756_i64),1012274725058010969_i64];
_13 = _1;
_8 = (_3, (-11_i8), _1);
_16.2 = (-137734470349662763731362676497519125684_i128) as i16;
_8 = (_4, (-73_i8), _13);
_18 = 30148_u16 as f32;
_10 = core::ptr::addr_of_mut!(_14);
_8.1 = 63_i8;
_7 = [1328292465855105604_i64,(-9172609395424219223_i64),(-2907302877324888013_i64),(-3244082052169231611_i64),(-390760718117494709_i64)];
match _8.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
63 => bb8,
_ => bb7
}
}
bb7 = {
_7 = [6546319272135325005_i64,5464269586074048136_i64,340390682838065692_i64,(-7752205162313365859_i64),(-5205022250165021250_i64)];
_11 = [2104441136_i32,931069972_i32,(-622509437_i32),(-2094306648_i32)];
_8.1 = 9223372036854775807_isize as i8;
_8.0.0 = [(-1275775261804090897_i64),7843510710419136000_i64,(-7658330263218499449_i64),(-8861804798859587133_i64),3015445293890761532_i64];
_9 = [7854437902142638781_i64,9132994757357740481_i64,(-265807420153264340_i64)];
_12 = [2985040796020850545_i64,(-2248772037639087394_i64),(-699659678375777679_i64),6307016715522087525_i64];
_2 = [(-2867775849833877320_i64),2125349394128753615_i64,2111909921910069160_i64,(-401748325872579716_i64),(-4674173375317094393_i64)];
_4.0 = [3794384170322464319_i64,9066272547590760508_i64,4587835260290450389_i64,702187614387831763_i64,(-2767850648955493389_i64)];
_4 = (_8.0.0,);
_3.0 = [4262547793657098218_i64,(-4386511887107122630_i64),4006319568227034928_i64,3370055582450124480_i64,6001670932321149925_i64];
RET = [2_usize];
_8 = (_3, (-70_i8), _1);
_8.1 = (-604064608_i32) as i8;
match _5 {
0 => bb2,
1 => bb3,
243 => bb5,
_ => bb4
}
}
bb8 = {
_4 = _3;
_6 = [11604967410275498337_usize,6_usize,3_usize,3_usize,6_usize,18085552032110663521_usize];
_16 = ((-20409454036341870894721380929245344050_i128), _12, 19568_i16);
_20 = [14767589700014964687_usize,248640272609485237_usize,14452932775905795007_usize,0_usize,6_usize,1_usize];
_4.0 = [(-7125807689552415301_i64),(-3748325946018962166_i64),(-2181393483148181249_i64),7646338503244797699_i64,5253619143634003133_i64];
_10 = core::ptr::addr_of_mut!(_15);
RET = [2_usize];
_16.1 = [(-150514501040417437_i64),6210983028339567696_i64,(-3093686691172744494_i64),(-4211262075010566206_i64)];
_5 = 2_usize as u8;
_18 = 5316995238164296251_i64 as f32;
_3 = (_2,);
_6 = _20;
_18 = 12976615868056922151_u64 as f32;
RET = [7_usize];
_14 = 9223372036854775807_isize - 9223372036854775807_isize;
_1 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_6 = _20;
_21 = _16.2;
_12 = [(-9129493976488792007_i64),(-6868018550446238810_i64),7455462680132070900_i64,(-1651243530685761234_i64)];
_21 = -_16.2;
_8.1 = 66_i8;
_20 = [10333992338256777402_usize,1_usize,5600335533779200571_usize,4_usize,454813836901797714_usize,9827535218666978568_usize];
_9 = [6352752901113028638_i64,(-2814744392518207414_i64),(-1799625949241768669_i64)];
_14 = _18 as isize;
_5 = 109_u8;
_8.0 = (_7,);
_12 = _16.1;
_11 = [(-979754101_i32),109432288_i32,392268079_i32,(-314109818_i32)];
_6 = [6566180099864044686_usize,4_usize,7_usize,1_usize,4310900019364072359_usize,1159705725196901339_usize];
_21 = -_16.2;
Call(_22 = core::intrinsics::bswap((-499952384_i32)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_13 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_16 = ((-47941215217330960336148677992078477829_i128), _12, _21);
_16.0 = -9622254064689559034870735529746690691_i128;
_21 = _5 as i16;
_11 = [2089877864_i32,1162302872_i32,2082457698_i32,2006562089_i32];
_8.0 = _4;
_15 = _14;
_3.0 = [3559891386222092473_i64,5393761130288947792_i64,(-6100591670943939355_i64),(-3179554210335097932_i64),582727908662426006_i64];
_15 = !_14;
_16.2 = _21 ^ _21;
_16.0 = '\u{4af01}' as i128;
_8.1 = 3738_u16 as i8;
_4.0 = [1481657691562557616_i64,(-3459421791783978247_i64),8059259630139058258_i64,6353615054893384042_i64,5443448835213788319_i64];
match _5 {
109 => bb11,
_ => bb10
}
}
bb10 = {
_4 = _3;
_6 = [11604967410275498337_usize,6_usize,3_usize,3_usize,6_usize,18085552032110663521_usize];
_16 = ((-20409454036341870894721380929245344050_i128), _12, 19568_i16);
_20 = [14767589700014964687_usize,248640272609485237_usize,14452932775905795007_usize,0_usize,6_usize,1_usize];
_4.0 = [(-7125807689552415301_i64),(-3748325946018962166_i64),(-2181393483148181249_i64),7646338503244797699_i64,5253619143634003133_i64];
_10 = core::ptr::addr_of_mut!(_15);
RET = [2_usize];
_16.1 = [(-150514501040417437_i64),6210983028339567696_i64,(-3093686691172744494_i64),(-4211262075010566206_i64)];
_5 = 2_usize as u8;
_18 = 5316995238164296251_i64 as f32;
_3 = (_2,);
_6 = _20;
_18 = 12976615868056922151_u64 as f32;
RET = [7_usize];
_14 = 9223372036854775807_isize - 9223372036854775807_isize;
_1 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_6 = _20;
_21 = _16.2;
_12 = [(-9129493976488792007_i64),(-6868018550446238810_i64),7455462680132070900_i64,(-1651243530685761234_i64)];
_21 = -_16.2;
_8.1 = 66_i8;
_20 = [10333992338256777402_usize,1_usize,5600335533779200571_usize,4_usize,454813836901797714_usize,9827535218666978568_usize];
_9 = [6352752901113028638_i64,(-2814744392518207414_i64),(-1799625949241768669_i64)];
_14 = _18 as isize;
_5 = 109_u8;
_8.0 = (_7,);
_12 = _16.1;
_11 = [(-979754101_i32),109432288_i32,392268079_i32,(-314109818_i32)];
_6 = [6566180099864044686_usize,4_usize,7_usize,1_usize,4310900019364072359_usize,1159705725196901339_usize];
_21 = -_16.2;
Call(_22 = core::intrinsics::bswap((-499952384_i32)), ReturnTo(bb9), UnwindUnreachable())
}
bb11 = {
_16 = ((-23482153447506298329516961506735610887_i128), _12, _21);
_8.2 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_15 = _14;
_8.1 = !(-78_i8);
_6 = _20;
_21 = '\u{c4df2}' as i16;
_6 = _20;
_23 = (*_10);
_23 = _14 << _21;
_16 = ((-128272024495587067045656581166975694546_i128), _12, _21);
_24 = 756655469_u32 as i64;
Call(_20 = core::intrinsics::transmute(_6), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_13 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_15 = !_23;
_8.0 = (_2,);
_12 = [_24,_24,_24,_24];
_8.1 = 56_i8;
_15 = _23;
_4.0 = _8.0.0;
_26.1 = 19413_u16 as i8;
_26.0 = _4;
_10 = core::ptr::addr_of_mut!(_15);
_8.0 = (_7,);
_20 = [6_usize,7176887768000433382_usize,2504098740764915749_usize,2261581961870239031_usize,7_usize,3_usize];
_26 = _8;
_9 = [_24,_24,_24];
_26.2 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_13 = _26.2;
_17 = Adt51::Variant0 { fld0: _12 };
_2 = [_24,_24,_24,_24,_24];
_1 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_31 = [168044999_i32,434315215_i32,277599234_i32,(-395492865_i32)];
_16.2 = _21;
_16.1 = [_24,_24,_24,_24];
place!(Field::<[i64; 4]>(Variant(_17, 0), 0)) = [_24,_24,_24,_24];
Goto(bb13)
}
bb13 = {
_32 = [_24,_24,_24,_24];
_3 = _4;
RET = [6_usize];
_28 = [_24];
_29.0 = core::ptr::addr_of_mut!(_8.1);
Goto(bb14)
}
bb14 = {
_1 = _13;
_32 = [_24,_24,_24,_24];
_24 = (-7113525107446212550_i64) - 8091172212740008899_i64;
_10 = core::ptr::addr_of_mut!(_23);
_20 = _6;
_29.0 = core::ptr::addr_of_mut!(_26.1);
_33 = ['\u{6949d}'];
_20 = [0_usize,3_usize,4_usize,14916868841583258297_usize,10264121587521771645_usize,4_usize];
_3.0 = [_24,_24,_24,_24,_24];
_2 = [_24,_24,_24,_24,_24];
_24 = 731656119485544422_i64;
_4.0 = [_24,_24,_24,_24,_24];
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(16_usize, 4_usize, Move(_4), 2_usize, Move(_2), 24_usize, Move(_24), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(16_usize, 21_usize, Move(_21), 7_usize, Move(_7), 15_usize, Move(_15), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(16_usize, 32_usize, Move(_32), 23_usize, Move(_23), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: usize,mut _2: i128,mut _3: [i64; 4],mut _4: i8,mut _5: (u8, u8, f64, [i64; 4]),mut _6: [i64; 5],mut _7: (u8, u8, f64, [i64; 4]),mut _8: *mut i8,mut _9: [usize; 6],mut _10: u8,mut _11: [usize; 6]) -> i8 {
mir! {
type RET = i8;
let _12: u64;
let _13: isize;
let _14: [i32; 4];
let _15: u32;
let _16: Adt44;
let _17: ();
let _18: ();
{
RET = 324572257209639455518422662393543795341_u128 as i8;
_10 = _7.1 << _5.0;
RET = _4;
_10 = _7.1;
_7.3 = [4259757126747455754_i64,(-3329363491611218096_i64),(-8462143357920052209_i64),718172890265766176_i64];
_1 = 17190155218788741985_usize;
_12 = 9223372036854775807_isize as u64;
_9 = [_1,_1,_1,_1,_1,_1];
_3 = [109713106831222960_i64,6695158296671120329_i64,9136987452640444573_i64,(-1615107092737806322_i64)];
_5.0 = !_7.0;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
17190155218788741985 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_5.2 = _7.2;
_10 = _5.0 * _7.0;
_11 = [_1,_1,_1,_1,_1,_1];
_6 = [3423555939983412915_i64,8544879468752998195_i64,2387257195475972500_i64,1930543428351146214_i64,(-8421139193809981512_i64)];
_4 = _1 as i8;
_7.0 = _10 - _5.0;
_4 = -RET;
RET = _4;
_9 = [_1,_1,_1,_1,_1,_1];
_2 = -37838450470774892572590885873396563131_i128;
_7.0 = _7.1 - _5.1;
_7.0 = _10;
_9 = _11;
_7 = (_5.1, _5.0, _5.2, _5.3);
_12 = 1634366132_u32 as u64;
_5.0 = _10;
_3 = [(-2680640776313135043_i64),(-443026805137489917_i64),(-2931815960448011581_i64),(-9075002025619705836_i64)];
_13 = '\u{dc22f}' as isize;
RET = 4368719670985197377_i64 as i8;
_8 = core::ptr::addr_of_mut!(_4);
Call(_5.2 = core::intrinsics::fmaf64(_7.2, _7.2, _7.2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5.0 = _10 * _10;
_6 = [(-1115002324698345761_i64),(-4116319651613458769_i64),7768175629116231000_i64,(-4512134936458717896_i64),3129975084849445685_i64];
_5.1 = _5.0 - _10;
_8 = core::ptr::addr_of_mut!(_4);
_7 = (_10, _5.1, _5.2, _5.3);
_14 = [(-1077653925_i32),1798984060_i32,(-92903290_i32),(-1206140073_i32)];
_2 = -(-93695316551497748843964489532542283458_i128);
_7 = (_5.1, _5.1, _5.2, _5.3);
_5.0 = _5.1;
Goto(bb11)
}
bb11 = {
_10 = '\u{6b90b}' as u8;
_3 = [(-8944406528372882062_i64),2817357255594503429_i64,(-3806831147922488216_i64),(-2158380134667973380_i64)];
_7 = _5;
_2 = 129638904183264242173238161406545937604_i128;
_6 = [5359384438270991984_i64,3943156801678976386_i64,5818720559783665252_i64,(-5896749459605311043_i64),5429789698380552198_i64];
_14 = [(-1537256150_i32),(-339952454_i32),(-1143274500_i32),(-905425060_i32)];
_5.2 = _7.2 - _7.2;
_5.0 = _7.0;
_7.0 = !_5.1;
Goto(bb12)
}
bb12 = {
_12 = 1297611682_u32 as u64;
_16.fld0.1 = [2860241286074364000_i64,7887626184934865039_i64,4457293618024828069_i64,(-3420864390194885339_i64),(-8387838480197762752_i64)];
_16.fld4 = [7641423736250657888_i64,(-543237941999506252_i64),(-4926436240647230002_i64),4493374312902151996_i64,(-4856692649897595289_i64)];
match _2 {
0 => bb13,
1 => bb14,
2 => bb15,
129638904183264242173238161406545937604 => bb17,
_ => bb16
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_13 = !119_isize;
Goto(bb18)
}
bb18 = {
Call(_17 = dump_var(17_usize, 6_usize, Move(_6), 3_usize, Move(_3), 10_usize, Move(_10), 12_usize, Move(_12)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_17 = dump_var(17_usize, 2_usize, Move(_2), 18_usize, _18, 18_usize, _18, 18_usize, _18), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: ([i64; 5],),mut _2: *mut isize,mut _3: u128,mut _4: *mut isize,mut _5: [i64; 4],mut _6: [i64; 5],mut _7: [i64; 5]) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _8: isize;
let _9: char;
let _10: bool;
let _11: isize;
let _12: bool;
let _13: isize;
let _14: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _15: Adt56;
let _16: Adt47;
let _17: i32;
let _18: [usize; 1];
let _19: *mut isize;
let _20: [usize; 6];
let _21: usize;
let _22: [i128; 6];
let _23: isize;
let _24: isize;
let _25: char;
let _26: isize;
let _27: (u16, (*mut i8,), (*mut i8,));
let _28: u32;
let _29: [i64; 4];
let _30: (i32, [i64; 5], [i64; 1], u16, [usize; 6]);
let _31: u32;
let _32: [i64; 5];
let _33: Adt57;
let _34: [usize; 6];
let _35: i16;
let _36: [i32; 4];
let _37: isize;
let _38: ();
let _39: ();
{
_3 = 195418002966234929137252025328760237229_u128 * 82050495376183284283358449308709749908_u128;
_2 = _4;
RET = [(-3897500434750903815_i64),(-5244679392831311658_i64),3056260014622484828_i64,(-3204181060719703373_i64)];
_5 = RET;
_3 = !45764602508202638806596513804559334178_u128;
Goto(bb1)
}
bb1 = {
RET = [6095282400636321868_i64,(-7266374972170109082_i64),(-8137489016938704455_i64),(-5012439224812407541_i64)];
_5 = [2136649837323793676_i64,(-5506481034845115107_i64),2071591103492728939_i64,(-2502533117520197455_i64)];
RET = _5;
_1.0 = [71928425035232510_i64,(-5749007378598470530_i64),(-4815873191629118993_i64),4572823926368242488_i64,(-1456804891274066381_i64)];
_8 = 16266_u16 as isize;
RET = [6088692469786473019_i64,(-3332742644838920944_i64),(-2317256954591984337_i64),(-6834149334307960215_i64)];
_2 = core::ptr::addr_of_mut!(_8);
_5 = RET;
RET = [(-8478693021926548989_i64),(-4524421321974256938_i64),(-1220880308797692937_i64),(-8710226068139681306_i64)];
RET = _5;
RET = _5;
_6 = [(-9102164429664860500_i64),(-8906069803812994660_i64),8582849381570036885_i64,5494633502641572506_i64,4389291909153569227_i64];
_1.0 = [(-3234827374351290522_i64),(-9019629097132230824_i64),563273229509034296_i64,(-173761780706258463_i64),933359782518019367_i64];
_9 = '\u{2e764}';
_5 = [(-246474285240176738_i64),(-3432289452477923282_i64),(-7706878614203218348_i64),7319864224664192168_i64];
RET = [(-9212448036205438638_i64),3449288358821551774_i64,(-7373898112226707284_i64),(-7701634776299109592_i64)];
_10 = !true;
RET = _5;
_11 = (*_2);
_1 = (_6,);
_6 = [2853379978850211941_i64,4580227788419623269_i64,(-8226181614161762224_i64),6583016069208388496_i64,(-6992405442105872419_i64)];
Goto(bb2)
}
bb2 = {
_12 = _10;
_5 = [5659937014637101305_i64,5137533266967413891_i64,3880494058891508647_i64,(-6322282277721380610_i64)];
_12 = _10;
_7 = _1.0;
_9 = '\u{3f3}';
_7 = _1.0;
_4 = _2;
Goto(bb3)
}
bb3 = {
_9 = '\u{a28b1}';
_10 = _12;
_6 = _1.0;
_3 = 42649945539143125222157586893629353831_i128 as u128;
_1.0 = _6;
_13 = (*_2) - _8;
Call(_11 = core::intrinsics::transmute((*_2)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = [(-8678845910750419860_i64),(-1544872141610954463_i64),(-1966906225503585404_i64),(-1404391414328959992_i64),7622077617348563290_i64];
_1 = (_6,);
_11 = _13;
_5 = [(-1770152265835432406_i64),7906873179397781938_i64,(-8527380757118731586_i64),8964678483088714388_i64];
_8 = _13;
RET = _5;
Goto(bb5)
}
bb5 = {
_14.2 = [972148813497925385_i64];
_14.1 = _1.0;
_12 = !_10;
_14.2 = [(-9026387432815145189_i64)];
_1 = (_14.1,);
_15.fld1 = [6788685179238478574_i64,8911126863856595340_i64,(-6980266629324206779_i64)];
_8 = -_13;
RET = _5;
_4 = core::ptr::addr_of_mut!(_13);
_15.fld2 = (-5953567315462062478_i64) as u32;
_14.0 = (-388334024_i32);
RET = [7361164856420225427_i64,(-4690239732751361001_i64),(-6471845974248826080_i64),(-4992650332666418066_i64)];
_14.2 = [(-6799333603842415922_i64)];
_15.fld1 = [(-3109283345629645505_i64),(-319530932301690342_i64),1756881842161641638_i64];
_15.fld3 = (-7254_i16) as u8;
_8 = _14.0 as isize;
_6 = [(-1919296311294988698_i64),(-7367511148174260740_i64),1453505175704835346_i64,(-7445699280733873622_i64),(-8230388163024539953_i64)];
_14.3 = 54491_u16 - 11550_u16;
_12 = (*_4) != _13;
_5 = [(-4553148318494301921_i64),4427074650038221207_i64,3574516403326965864_i64,(-2303708561815890208_i64)];
_15.fld0 = [6_usize];
_15.fld3 = 144_u8;
_6 = _1.0;
_15.fld3 = 96_u8 * 96_u8;
match _14.0 {
340282366920938463463374607431379877432 => bb6,
_ => bb1
}
}
bb6 = {
_5 = [6266943936136344246_i64,(-7976531674928355245_i64),3397872634456979777_i64,(-5967156976177615304_i64)];
_11 = (*_4);
_1 = (_7,);
_6 = [7480915303325199310_i64,6067294002374717716_i64,5144947290012115642_i64,2274970095340799594_i64,4270072810079338745_i64];
_14.4 = [0_usize,6_usize,0_usize,10269785468944505170_usize,11449152610390710599_usize,0_usize];
_14.0 = !(-629352680_i32);
Goto(bb7)
}
bb7 = {
_14.3 = !55104_u16;
_7 = [(-1880984440016795850_i64),(-5954631115861667083_i64),7982026833260128857_i64,(-3155642314350770168_i64),(-165246918436424755_i64)];
_8 = !_11;
_1 = (_6,);
_7 = _1.0;
_14.4 = [5_usize,5_usize,18318336829889868855_usize,6_usize,14304685150015542148_usize,16220078519096039344_usize];
RET = [(-2546468860103381194_i64),4136983420260139928_i64,4558164467994285555_i64,(-3728182817011484068_i64)];
_7 = [(-3248885369825344465_i64),1425597426230641994_i64,1992330219553534581_i64,(-1899404589900931098_i64),(-8074326520843607481_i64)];
_14.3 = 50388_u16 & 54220_u16;
_14.4 = [1_usize,1_usize,13052950190150183954_usize,4_usize,14430992224388902701_usize,6_usize];
_14.4 = [2_usize,16847995498979387545_usize,17182674296131090466_usize,6786342411639222880_usize,3_usize,2_usize];
_8 = _13;
_10 = (*_2) != _8;
_19 = _2;
_17 = _14.0;
_14.3 = !29585_u16;
_8 = _3 as isize;
_15.fld3 = 161_u8;
_24 = _13 * _8;
_19 = core::ptr::addr_of_mut!((*_4));
_6 = _14.1;
Goto(bb8)
}
bb8 = {
_21 = 5_usize | 1_usize;
_8 = -_24;
_15.fld1 = [(-7451028086686254587_i64),(-2311840184666430693_i64),6697409405956167142_i64];
_22 = [155654402362329980408615370622399466666_i128,40393324091051553555234850038965539453_i128,46807499389248001512213545545652610831_i128,(-51595251798031698487705801216922284674_i128),85340156349715538059551569187562567971_i128,(-158390340983330687196195367128511064207_i128)];
_18 = [_21];
_13 = _8 + (*_2);
_13 = !_24;
_28 = _21 as u32;
_29 = [(-3627501336129185620_i64),8557447660055205758_i64,4617679512974700245_i64,2128166531289635572_i64];
_23 = _14.0 as isize;
_18 = [_21];
_29 = RET;
_30.2 = _14.2;
_19 = _2;
_20 = _14.4;
_14 = (_17, _1.0, _30.2, 39257_u16, _20);
_19 = core::ptr::addr_of_mut!(_24);
Call(_13 = core::intrinsics::bswap((*_2)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_10 = !_12;
_1.0 = [(-9216837297139016913_i64),(-2863533507947817812_i64),30867773518756102_i64,(-4524967439650346571_i64),6112863745564330858_i64];
_30.4 = [_21,_21,_21,_21,_21,_21];
_30 = (_17, _6, _14.2, _14.3, _14.4);
RET = [5783791256555655285_i64,6083753068375709279_i64,(-8501813749780427643_i64),(-3517086391382881827_i64)];
_10 = _12;
Goto(bb10)
}
bb10 = {
_20 = [_21,_21,_21,_21,_21,_21];
_17 = _30.0;
_30.3 = _14.3;
_30.1 = [5815998925585612678_i64,(-9104772785917560025_i64),(-4101167049282551135_i64),(-6302857407303204237_i64),(-5392747119853532737_i64)];
_14.1 = _6;
_30 = _14;
_30.0 = -_14.0;
_30 = _14;
_22 = [4187010168861174008899110077055866663_i128,131775655696383410091333282363887428145_i128,(-83332650221177456851636029295631356940_i128),89535944619470472272491664926547633207_i128,(-74975772199608960208250532569041543334_i128),28317833208683348304027365041307819337_i128];
_24 = !_11;
_14.0 = _30.0 >> _11;
_15.fld0 = _18;
_24 = _9 as isize;
_19 = core::ptr::addr_of_mut!(_26);
_30.3 = _14.3;
_26 = (*_4) | _13;
Goto(bb11)
}
bb11 = {
_30.4 = _14.4;
RET = _29;
_15.fld0 = [_21];
_20 = [_21,_21,_21,_21,_21,_21];
RET = [(-1495318636735790446_i64),2577809019221173510_i64,(-9015530608886722125_i64),8698189289398176305_i64];
_10 = _12;
_6 = _7;
_11 = -(*_4);
_1.0 = [5171260562399708792_i64,8963168793976306124_i64,2251983510786120778_i64,3289255255503423061_i64,(-8708019730087743509_i64)];
_25 = _9;
_34 = _30.4;
_25 = _9;
match _30.3 {
0 => bb8,
39257 => bb13,
_ => bb12
}
}
bb12 = {
_9 = '\u{a28b1}';
_10 = _12;
_6 = _1.0;
_3 = 42649945539143125222157586893629353831_i128 as u128;
_1.0 = _6;
_13 = (*_2) - _8;
Call(_11 = core::intrinsics::transmute((*_2)), ReturnTo(bb4), UnwindUnreachable())
}
bb13 = {
_14 = _30;
_14.1 = _30.1;
_22 = [(-110025728275684229255934960893681480323_i128),(-17671399570481961986138835488391345538_i128),61388611869277348758672444537228968867_i128,(-40588597546699353859103917408526947950_i128),27881780728935375605269776566124478014_i128,(-78412616151253729517376534307353927072_i128)];
_5 = [(-1884229359361456117_i64),(-4539720730957990688_i64),(-1446220198771326253_i64),(-6917916883766687378_i64)];
Goto(bb14)
}
bb14 = {
_30.0 = (-65_i8) as i32;
_27.0 = _30.3;
_30.0 = !_14.0;
_2 = core::ptr::addr_of_mut!(_23);
_32 = _1.0;
_36 = [_17,_14.0,_17,_14.0];
_7 = [5303457964447789266_i64,(-7719239193184937282_i64),(-2205366136781364589_i64),8355440147027170729_i64,5725402285361314747_i64];
_2 = _19;
_5 = RET;
_27.0 = !_14.3;
_14.2 = [(-6680561867526827156_i64)];
_30 = _14;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(18_usize, 30_usize, Move(_30), 5_usize, Move(_5), 20_usize, Move(_20), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(18_usize, 1_usize, Move(_1), 34_usize, Move(_34), 28_usize, Move(_28), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(18_usize, 18_usize, Move(_18), 24_usize, Move(_24), 32_usize, Move(_32), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(18_usize, 6_usize, Move(_6), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box(5115928807983941929_u64), std::hint::black_box(9223372036854775807_isize), std::hint::black_box(64_i8), std::hint::black_box((-6665_i16)), std::hint::black_box(1096591615_i32), std::hint::black_box((-7177973346442037202_i64)), std::hint::black_box((-68965424270660977054860244925287815913_i128)), std::hint::black_box(2_usize), std::hint::black_box(127144083606116811524398179127307535662_u128), std::hint::black_box(46859_u16), std::hint::black_box(4036254818_u32));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt41 {
Variant0{
fld0: [i128; 6],
fld1: f64,
fld2: isize,
fld3: [i64; 5],
fld4: [i64; 3],

},
Variant1{
fld0: (([i64; 5],), i8, [i128; 6]),
fld1: *const *mut i8,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: bool,
fld1: i128,
fld2: f32,
fld3: ([i64; 5],),

},
Variant1{
fld0: u64,
fld1: (*mut isize, [i64; 4], i32),
fld2: (i32, [i64; 5], [i64; 1], u16, [usize; 6]),

},
Variant2{
fld0: (([i64; 5],), i8, [i128; 6]),
fld1: u64,
fld2: u128,
fld3: [i32; 4],
fld4: [usize; 6],
fld5: i32,

},
Variant3{
fld0: [i64; 5],
fld1: f32,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt43 {
fld0: [i64; 5],
fld1: f64,
fld2: i128,
fld3: [i64; 4],
}
#[derive(Debug)]
pub struct Adt44 {
fld0: (i32, [i64; 5], [i64; 1], u16, [usize; 6]),
fld1: char,
fld2: [i64; 3],
fld3: usize,
fld4: [i64; 5],
fld5: i32,
fld6: *mut i8,
fld7: [i64; 1],
}
#[derive(Debug)]
pub struct Adt45 {
fld0: *const *mut i8,
fld1: (([i64; 5],), i8, [i128; 6]),
}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: bool,
fld1: [char; 5],
fld2: ([i64; 5],),
fld3: (u16, (*mut i8,), (*mut i8,)),
fld4: *const *mut i8,

},
Variant1{
fld0: i8,

},
Variant2{
fld0: [usize; 1],
fld1: Adt41,
fld2: [i64; 3],
fld3: *mut [i64; 4],
fld4: [usize; 6],
fld5: Adt45,
fld6: *const *mut i8,

},
Variant3{
fld0: [i64; 1],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: *mut f64,
fld1: [char; 1],
fld2: [usize; 6],
fld3: ([i64; 5],),
fld4: Adt45,

},
Variant1{
fld0: [i64; 4],
fld1: (*mut isize, [i64; 4], i32),
fld2: isize,
fld3: u16,
fld4: i16,
fld5: u128,
fld6: i128,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: u16,
fld1: i128,
fld2: [usize; 1],

},
Variant1{
fld0: f64,

},
Variant2{
fld0: [char; 5],

},
Variant3{
fld0: bool,
fld1: [char; 1],
fld2: *const *mut i8,
fld3: Adt41,
fld4: *mut i8,
fld5: Adt46,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: Adt47,
fld1: char,
fld2: [i64; 4],
fld3: [char; 1],

},
Variant1{
fld0: [char; 5],
fld1: (i128, [i64; 4], i16),
fld2: (u16, (*mut i8,), (*mut i8,)),
fld3: (([i64; 5],), i8, [i128; 6]),
fld4: usize,
fld5: Adt42,
fld6: i64,
fld7: ([i64; 5],),

},
Variant2{
fld0: (u16, (*mut i8,), (*mut i8,)),
fld1: f64,
fld2: isize,
fld3: (([i64; 5],), i8, [i128; 6]),
fld4: usize,
fld5: [usize; 6],

},
Variant3{
fld0: (u8, u8, f64, [i64; 4]),
fld1: Adt42,
fld2: u16,
fld3: *mut isize,
fld4: (i32, [i64; 5], [i64; 1], u16, [usize; 6]),
fld5: usize,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt50 {
Variant0{
fld0: *const *mut i8,

},
Variant1{
fld0: bool,
fld1: (([i64; 5],), i8, [i128; 6]),
fld2: [usize; 6],
fld3: [i128; 6],
fld4: [i64; 1],
fld5: f64,
fld6: Adt42,
fld7: u8,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [i64; 4],

},
Variant1{
fld0: *const *mut i8,
fld1: Adt50,
fld2: isize,
fld3: (i32, [i64; 5], [i64; 1], u16, [usize; 6]),
fld4: i16,
fld5: Adt47,
fld6: Adt48,
fld7: Adt41,

},
Variant2{
fld0: (i128, [i64; 4], i16),
fld1: Adt45,
fld2: *mut isize,
fld3: [i64; 3],
fld4: i16,
fld5: Adt46,
fld6: [i64; 1],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: i8,
fld1: i16,
fld2: [i64; 3],

},
Variant1{
fld0: [usize; 6],
fld1: usize,
fld2: isize,
fld3: u64,
fld4: i16,
fld5: Adt49,

},
Variant2{
fld0: (([i64; 5],), i8, [i128; 6]),

},
Variant3{
fld0: bool,
fld1: ([i64; 5],),
fld2: [char; 1],
fld3: i64,
fld4: [i32; 4],
fld5: *mut isize,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u32,
fld1: Adt50,
fld2: Adt45,
fld3: Adt51,
fld4: *mut i8,
fld5: [i32; 4],

},
Variant1{
fld0: [i64; 3],
fld1: ([i64; 5],),
fld2: isize,
fld3: Adt47,
fld4: (u16, (*mut i8,), (*mut i8,)),
fld5: u32,
fld6: [i128; 6],
fld7: Adt43,

},
Variant2{
fld0: u8,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [i128; 6],
fld1: [char; 1],
fld2: Adt50,
fld3: i8,

},
Variant1{
fld0: Adt44,
fld1: *mut [i64; 4],
fld2: (i32, [i64; 5], [i64; 1], u16, [usize; 6]),
fld3: (*mut isize, [i64; 4], i32),

}}
#[derive(Debug)]
pub struct Adt55 {
fld0: u128,
fld1: [usize; 1],
fld2: isize,
fld3: Adt48,
fld4: (*mut isize, [i64; 4], i32),
fld5: [char; 1],
fld6: *mut isize,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: [usize; 1],
fld1: [i64; 3],
fld2: u32,
fld3: u8,
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: [char; 5],
fld1: [i64; 4],
fld2: Adt43,

},
Variant1{
fld0: [i64; 3],
fld1: Adt43,

},
Variant2{
fld0: *const *mut i8,
fld1: [i64; 3],
fld2: u8,
fld3: Adt46,
fld4: [i64; 5],
fld5: Adt45,
fld6: f32,
fld7: Adt44,

}}

