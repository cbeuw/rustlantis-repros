#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> u128 {
mir! {
type RET = u128;
let _15: usize;
let _16: f64;
let _17: isize;
let _18: [isize; 6];
let _19: i8;
let _20: [bool; 1];
let _21: *const *mut i16;
let _22: f64;
let _23: f64;
let _24: [isize; 7];
let _25: [isize; 6];
let _26: bool;
let _27: bool;
let _28: [i32; 3];
let _29: char;
let _30: *const *mut *mut i16;
let _31: bool;
let _32: [bool; 6];
let _33: *mut u64;
let _34: (bool, [i32; 7], i32, u16, (i64, bool));
let _35: [usize; 2];
let _36: isize;
let _37: isize;
let _38: f64;
let _39: i16;
let _40: bool;
let _41: f32;
let _42: f64;
let _43: i64;
let _44: bool;
let _45: ();
let _46: ();
{
_11 = 8235119645914552071461181349175440130_i128 as u16;
_7 = (-831606911326976521_i64);
Goto(bb1)
}
bb1 = {
_13 = true as u64;
_11 = 4713_u16;
_8 = -(-46808228863784592354025245411350185382_i128);
_10 = 158_u8 * 230_u8;
_12 = 2870159506_u32;
_4 = 0_i8 + 5_i8;
_11 = 10140_u16 >> _10;
_15 = !17638768507491933379_usize;
_15 = _8 as usize;
_9 = !_15;
_11 = _7 as u16;
_10 = 195_u8;
_9 = _15;
_5 = _7 as i16;
_5 = (-5812_i16);
_11 = 30097_u16;
_10 = 39_u8 << _11;
_13 = !11695528516687169187_u64;
_11 = 49362_u16 - 54714_u16;
_20 = [true];
Call(_18 = fn1(_20, _5, _10, _4, _12, _4, _9, _15, _10, _7, _4, _4, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = (-57_i8) * 48_i8;
_16 = _8 as f64;
_3 = (-9223372036854775808_isize);
_13 = 7638011135891321654_u64 - 14859057224771672479_u64;
RET = 135968676092621697830857028860841769906_u128 << _13;
RET = 96626392157266231797910977510986553530_u128;
match _5 {
0 => bb3,
340282366920938463463374607431768205644 => bb5,
_ => bb4
}
}
bb3 = {
_13 = true as u64;
_11 = 4713_u16;
_8 = -(-46808228863784592354025245411350185382_i128);
_10 = 158_u8 * 230_u8;
_12 = 2870159506_u32;
_4 = 0_i8 + 5_i8;
_11 = 10140_u16 >> _10;
_15 = !17638768507491933379_usize;
_15 = _8 as usize;
_9 = !_15;
_11 = _7 as u16;
_10 = 195_u8;
_9 = _15;
_5 = _7 as i16;
_5 = (-5812_i16);
_11 = 30097_u16;
_10 = 39_u8 << _11;
_13 = !11695528516687169187_u64;
_11 = 49362_u16 - 54714_u16;
_20 = [true];
Call(_18 = fn1(_20, _5, _10, _4, _12, _4, _9, _15, _10, _7, _4, _4, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_12 = 2043927183_u32 + 4079271674_u32;
_6 = (-1519907944_i32) + (-825746825_i32);
_5 = -19401_i16;
_17 = _10 as isize;
RET = 72022682186000326978684256060167114871_u128 >> _6;
_10 = _12 as u8;
_5 = (-32070_i16) | (-8739_i16);
_12 = !744414823_u32;
_1 = _13 < _13;
_22 = -_16;
_6 = (-844703155_i32);
_25 = [_17,_17,_17,_3,_17,_17];
_20 = [_1];
_3 = _17;
_2 = '\u{6b43c}';
_2 = '\u{8e47}';
_13 = _17 as u64;
_23 = _16;
_13 = 6499247936419549740_u64;
_14 = RET;
RET = _14 << _14;
_7 = _8 as i64;
_24 = [_17,_17,_17,_3,_3,_17,_3];
_24 = [_17,_3,_3,_3,_3,_17,_3];
Goto(bb6)
}
bb6 = {
_18 = _25;
_15 = _13 as usize;
_7 = (-4511071359273037918_i64) + (-8084879758671702226_i64);
_14 = _1 as u128;
_27 = !_1;
_9 = !_15;
_26 = _12 >= _12;
_11 = _10 as u16;
_12 = 673951641_u32;
_23 = RET as f64;
_16 = -_23;
_18 = _25;
_4 = 13_i8 * (-73_i8);
_15 = _9;
_7 = _16 as i64;
_24 = [_3,_3,_17,_3,_3,_3,_17];
_24 = [_17,_3,_17,_17,_17,_3,_17];
_4 = (-86_i8);
_18 = [_3,_17,_3,_3,_17,_17];
_12 = 652079842_u32 - 3305892692_u32;
_3 = -_17;
_4 = (-21_i8) ^ (-86_i8);
RET = _14 ^ _14;
_3 = _15 as isize;
_14 = RET;
_29 = _2;
Goto(bb7)
}
bb7 = {
_28 = [_6,_6,_6];
_18 = [_17,_17,_17,_17,_3,_17];
_23 = _16;
_29 = _2;
_9 = !_15;
_24 = [_17,_3,_17,_17,_17,_3,_17];
_13 = !14689490625942361121_u64;
_24 = [_17,_17,_17,_17,_3,_17,_17];
_12 = !32262514_u32;
_17 = -_3;
_14 = _4 as u128;
_1 = _27;
_23 = _16 + _16;
RET = _4 as u128;
_5 = !6732_i16;
_3 = _26 as isize;
_4 = _9 as i8;
_7 = _23 as i64;
_4 = 20_i8;
_34.2 = _6;
_19 = _4 & _4;
RET = _14;
match _6 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
340282366920938463463374607430923508301 => bb11,
_ => bb10
}
}
bb8 = {
_18 = _25;
_15 = _13 as usize;
_7 = (-4511071359273037918_i64) + (-8084879758671702226_i64);
_14 = _1 as u128;
_27 = !_1;
_9 = !_15;
_26 = _12 >= _12;
_11 = _10 as u16;
_12 = 673951641_u32;
_23 = RET as f64;
_16 = -_23;
_18 = _25;
_4 = 13_i8 * (-73_i8);
_15 = _9;
_7 = _16 as i64;
_24 = [_3,_3,_17,_3,_3,_3,_17];
_24 = [_17,_3,_17,_17,_17,_3,_17];
_4 = (-86_i8);
_18 = [_3,_17,_3,_3,_17,_17];
_12 = 652079842_u32 - 3305892692_u32;
_3 = -_17;
_4 = (-21_i8) ^ (-86_i8);
RET = _14 ^ _14;
_3 = _15 as isize;
_14 = RET;
_29 = _2;
Goto(bb7)
}
bb9 = {
_13 = true as u64;
_11 = 4713_u16;
_8 = -(-46808228863784592354025245411350185382_i128);
_10 = 158_u8 * 230_u8;
_12 = 2870159506_u32;
_4 = 0_i8 + 5_i8;
_11 = 10140_u16 >> _10;
_15 = !17638768507491933379_usize;
_15 = _8 as usize;
_9 = !_15;
_11 = _7 as u16;
_10 = 195_u8;
_9 = _15;
_5 = _7 as i16;
_5 = (-5812_i16);
_11 = 30097_u16;
_10 = 39_u8 << _11;
_13 = !11695528516687169187_u64;
_11 = 49362_u16 - 54714_u16;
_20 = [true];
Call(_18 = fn1(_20, _5, _10, _4, _12, _4, _9, _15, _10, _7, _4, _4, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_13 = true as u64;
_11 = 4713_u16;
_8 = -(-46808228863784592354025245411350185382_i128);
_10 = 158_u8 * 230_u8;
_12 = 2870159506_u32;
_4 = 0_i8 + 5_i8;
_11 = 10140_u16 >> _10;
_15 = !17638768507491933379_usize;
_15 = _8 as usize;
_9 = !_15;
_11 = _7 as u16;
_10 = 195_u8;
_9 = _15;
_5 = _7 as i16;
_5 = (-5812_i16);
_11 = 30097_u16;
_10 = 39_u8 << _11;
_13 = !11695528516687169187_u64;
_11 = 49362_u16 - 54714_u16;
_20 = [true];
Call(_18 = fn1(_20, _5, _10, _4, _12, _4, _9, _15, _10, _7, _4, _4, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_22 = _16;
_1 = _23 > _22;
_34.4.1 = _1;
_34.0 = _34.4.1;
_36 = _3;
RET = !_14;
_8 = 25354664422124512017857264937748560921_i128;
_34.4.0 = _7;
_17 = _3;
_31 = !_34.4.1;
_35 = [_15,_15];
_27 = !_1;
_3 = _17;
_34.3 = _23 as u16;
_23 = _16 + _22;
_5 = -319_i16;
_19 = _4;
_17 = -_3;
_27 = _34.0;
_38 = -_23;
_34.4 = (_7, _34.0);
_34.4.0 = _7;
_29 = _2;
_22 = _38 + _23;
match _19 {
0 => bb1,
1 => bb7,
20 => bb12,
_ => bb5
}
}
bb12 = {
_6 = RET as i32;
_25 = [_17,_3,_17,_3,_3,_3];
_19 = -_4;
_33 = core::ptr::addr_of_mut!(_13);
_25 = [_17,_36,_17,_3,_17,_36];
_15 = _5 as usize;
_5 = 5626_i16;
_38 = _22;
_34.4 = (_7, _27);
_34.2 = _6 - _6;
_34.3 = _31 as u16;
_34.4.1 = _31;
_32 = [_27,_31,_1,_31,_31,_1];
_33 = core::ptr::addr_of_mut!(_13);
_9 = _15 * _15;
_28 = [_34.2,_34.2,_34.2];
_34.3 = _11;
_37 = _36 ^ _3;
_35 = [_9,_9];
_19 = _4;
_39 = _5 & _5;
_34.4.1 = _31;
RET = _14 | _14;
_32 = [_27,_27,_1,_1,_31,_27];
_34.1 = [_34.2,_34.2,_6,_34.2,_34.2,_34.2,_34.2];
_22 = -_23;
_17 = -_36;
Call(_4 = core::intrinsics::bswap(_19), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_26 = _34.4.1;
_31 = _23 == _22;
_34.0 = _34.4.1;
_27 = _26 == _34.0;
_9 = !_15;
_5 = !_39;
_34.0 = _26 ^ _34.4.1;
_36 = _3;
RET = _14 | _14;
_34.4.1 = _34.0;
Goto(bb14)
}
bb14 = {
_36 = _37;
_39 = _5 - _5;
_22 = -_38;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(0_usize, 15_usize, Move(_15), 19_usize, Move(_19), 1_usize, Move(_1), 27_usize, Move(_27)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(0_usize, 9_usize, Move(_9), 6_usize, Move(_6), 36_usize, Move(_36), 32_usize, Move(_32)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(0_usize, 24_usize, Move(_24), 29_usize, Move(_29), 12_usize, Move(_12), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(0_usize, 13_usize, Move(_13), 17_usize, Move(_17), 7_usize, Move(_7), 25_usize, Move(_25)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [bool; 1],mut _2: i16,mut _3: u8,mut _4: i8,mut _5: u32,mut _6: i8,mut _7: usize,mut _8: usize,mut _9: u8,mut _10: i64,mut _11: i8,mut _12: i8,mut _13: usize) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _14: bool;
let _15: i64;
let _16: (char, [bool; 1], f64);
let _17: Adt44;
let _18: &'static [isize; 6];
let _19: isize;
let _20: [u128; 5];
let _21: u8;
let _22: Adt55;
let _23: Adt59;
let _24: f32;
let _25: f64;
let _26: isize;
let _27: bool;
let _28: isize;
let _29: *const u16;
let _30: [isize; 6];
let _31: [isize; 7];
let _32: f32;
let _33: *mut [isize; 6];
let _34: f32;
let _35: (char, [bool; 1], f64);
let _36: u128;
let _37: Adt43;
let _38: f64;
let _39: [i32; 3];
let _40: u16;
let _41: [u16; 7];
let _42: f32;
let _43: ();
let _44: ();
{
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,34_isize,9223372036854775807_isize];
_11 = _12 - _4;
_11 = -_4;
_10 = _5 as i64;
_1 = [true];
_9 = !_3;
_12 = !_6;
RET = [(-22_isize),(-9223372036854775808_isize),85_isize,(-45_isize),(-9223372036854775808_isize),(-51_isize)];
_12 = _11 ^ _4;
_9 = _3;
_7 = !_8;
RET = [9223372036854775807_isize,(-48_isize),(-9223372036854775808_isize),42_isize,(-9223372036854775808_isize),9223372036854775807_isize];
RET = [37_isize,45_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),105_isize,(-9223372036854775808_isize)];
_13 = _7;
_3 = _9;
RET = [9223372036854775807_isize,9223372036854775807_isize,(-3_isize),9223372036854775807_isize,(-9223372036854775808_isize),12_isize];
_4 = _5 as i8;
_14 = false & false;
_2 = -(-2294_i16);
_16.1 = _1;
_10 = 6423093252209644764_i64;
_6 = '\u{d6db}' as i8;
_9 = _3 ^ _3;
_15 = -_10;
_4 = _13 as i8;
RET = [(-45_isize),74_isize,69_isize,(-9223372036854775808_isize),81_isize,(-9223372036854775808_isize)];
match _5 {
0 => bb1,
1 => bb2,
2870159506 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_12 = _11;
_8 = _13;
_5 = _14 as u32;
_13 = _14 as usize;
_19 = 10_isize * 9223372036854775807_isize;
_20 = [142581578994639034481611864232534712257_u128,78422112347802209190454990116316377047_u128,23852554143367540990124993287432760855_u128,208386070144267460334568221199765390382_u128,101633180841746182020679712740820319704_u128];
_16.0 = '\u{b6b10}';
_4 = _2 as i8;
_2 = (-16067_i16) + 29037_i16;
_8 = !_7;
_4 = _7 as i8;
_8 = _13;
_7 = _13 - _13;
_14 = false;
_18 = &RET;
_18 = &(*_18);
RET = [_19,_19,_19,_19,_19,_19];
_22.fld3 = [_19,_19,_19,_19,_19,_19,_19];
_8 = _13;
_16.1 = [_14];
_18 = &RET;
Goto(bb5)
}
bb5 = {
_16.2 = _5 as f64;
_8 = _7;
_13 = _8;
_16.0 = '\u{e182f}';
_9 = _3;
_20 = [263101773884040172318712851013406700465_u128,237719057875791270591859871447793777178_u128,131430559686062353863462084958312885602_u128,67602132432480188317823360481953578822_u128,19089012306005017433630049342057892629_u128];
_22.fld0 = _1;
_22.fld2 = _14 as usize;
_19 = -48_isize;
_12 = -_6;
_21 = !_9;
_18 = &(*_18);
_22.fld3 = [_19,_19,_19,_19,_19,_19,_19];
_16.0 = '\u{eb045}';
_16.0 = '\u{40156}';
_10 = _14 as i64;
_13 = _7;
_16.2 = _19 as f64;
_18 = &RET;
_23 = Adt59::Variant2 { fld0: _2 };
_23 = Adt59::Variant2 { fld0: _2 };
_17 = Adt44::Variant1 { fld0: _20,fld1: _5,fld2: _13 };
_24 = 135282243628445428560241086311948057703_u128 as f32;
RET = [_19,_19,_19,_19,_19,_19];
_12 = Field::<i16>(Variant(_23, 2), 0) as i8;
Goto(bb6)
}
bb6 = {
_18 = &RET;
_3 = _9;
_3 = _15 as u8;
_27 = _14 ^ _14;
_18 = &(*_18);
_12 = _6 ^ _6;
_27 = _14 ^ _14;
RET = [_19,_19,_19,_19,_19,_19];
_4 = _11;
_26 = _19 & _19;
_22.fld2 = 12316379250623499829_u64 as usize;
Goto(bb7)
}
bb7 = {
place!(Field::<[u128; 5]>(Variant(_17, 1), 0)) = [233127534451186070981476690177322390878_u128,181915154668880440017498018220823890664_u128,168756364081148010750209689930220436946_u128,122386834591447830460921299321659932458_u128,269723726141767964620170097664143371739_u128];
_25 = _16.2 * _16.2;
_18 = &RET;
Call(_28 = core::intrinsics::bswap(_26), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_30 = [_26,_19,_26,_26,_26,_26];
_9 = _3;
place!(Field::<u32>(Variant(_17, 1), 1)) = _5 * _5;
place!(Field::<[u128; 5]>(Variant(_17, 1), 0)) = [326975026190529930383972318128132913820_u128,143183040409536449450777750870644802151_u128,189973289946755733180921832912774266318_u128,292158029374417944789722808692011367848_u128,207880737306327442085329206821074681843_u128];
_33 = core::ptr::addr_of_mut!(_30);
_4 = _11 | _6;
_5 = !Field::<u32>(Variant(_17, 1), 1);
_12 = _6;
SetDiscriminant(_17, 0);
place!(Field::<[u16; 7]>(Variant(_17, 0), 0)) = [54581_u16,27972_u16,11514_u16,19240_u16,46272_u16,64561_u16,22382_u16];
_1 = [_27];
Call(_25 = fn2(_8, _22.fld0, _6, _16.0, _13, _17, _30, _5, (*_33)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
SetDiscriminant(_23, 1);
Goto(bb10)
}
bb10 = {
place!(Field::<*mut [i32; 3]>(Variant(_23, 1), 0)) = core::ptr::addr_of_mut!(place!(Field::<[i32; 3]>(Variant(_23, 1), 1)));
_3 = !_21;
_26 = _19;
_5 = !2883240472_u32;
_4 = _11;
_34 = -_24;
_25 = _16.2 * _16.2;
_30 = [_19,_19,_26,_19,_19,_19];
_14 = _27;
_27 = _21 < _9;
_28 = _26;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).4.0 = _7 as i64;
_33 = core::ptr::addr_of_mut!((*_33));
_5 = 1777268842_u32 * 1104209005_u32;
RET = (*_33);
_5 = _4 as u32;
_17 = Adt44::Variant1 { fld0: _20,fld1: _5,fld2: _8 };
place!(Field::<i16>(Variant(_23, 1), 4)) = _2 * _2;
_16.2 = _25 + _25;
_9 = !_3;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).2 = 167313941_i32;
_14 = Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).4.0 > Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).4.0;
_24 = _34 * _34;
_9 = !_3;
_8 = _7 * _7;
_13 = !_7;
_16.2 = _25 - _25;
_31 = _22.fld3;
_35.2 = _16.2 * _16.2;
_2 = Field::<i16>(Variant(_23, 1), 4) << _7;
_4 = !_12;
Goto(bb11)
}
bb11 = {
_35 = (_16.0, _22.fld0, _16.2);
_2 = Field::<i16>(Variant(_23, 1), 4);
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).2 = 1839542240_i32;
match Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2 {
0 => bb1,
1 => bb9,
2 => bb6,
3 => bb10,
1839542240 => bb12,
_ => bb8
}
}
bb12 = {
_7 = !_8;
_16.2 = _35.2;
_21 = _9 >> _3;
_14 = _2 == _2;
place!(Field::<u32>(Variant(_17, 1), 1)) = _5;
_7 = _8 >> Field::<i16>(Variant(_23, 1), 4);
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).1 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2];
_24 = _34 + _34;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).1 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2];
_37 = Adt43::Variant1 { fld0: 16476785544440725211_u64 };
_13 = _8;
_14 = _2 < Field::<i16>(Variant(_23, 1), 4);
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).4.1 = !_27;
_24 = _34;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).0 = Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).4.1;
_22.fld2 = !_7;
match Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2 {
0 => bb1,
1 => bb5,
2 => bb9,
3 => bb13,
4 => bb14,
1839542240 => bb16,
_ => bb15
}
}
bb13 = {
Return()
}
bb14 = {
_16.2 = _5 as f64;
_8 = _7;
_13 = _8;
_16.0 = '\u{e182f}';
_9 = _3;
_20 = [263101773884040172318712851013406700465_u128,237719057875791270591859871447793777178_u128,131430559686062353863462084958312885602_u128,67602132432480188317823360481953578822_u128,19089012306005017433630049342057892629_u128];
_22.fld0 = _1;
_22.fld2 = _14 as usize;
_19 = -48_isize;
_12 = -_6;
_21 = !_9;
_18 = &(*_18);
_22.fld3 = [_19,_19,_19,_19,_19,_19,_19];
_16.0 = '\u{eb045}';
_16.0 = '\u{40156}';
_10 = _14 as i64;
_13 = _7;
_16.2 = _19 as f64;
_18 = &RET;
_23 = Adt59::Variant2 { fld0: _2 };
_23 = Adt59::Variant2 { fld0: _2 };
_17 = Adt44::Variant1 { fld0: _20,fld1: _5,fld2: _13 };
_24 = 135282243628445428560241086311948057703_u128 as f32;
RET = [_19,_19,_19,_19,_19,_19];
_12 = Field::<i16>(Variant(_23, 2), 0) as i8;
Goto(bb6)
}
bb15 = {
_18 = &RET;
_3 = _9;
_3 = _15 as u8;
_27 = _14 ^ _14;
_18 = &(*_18);
_12 = _6 ^ _6;
_27 = _14 ^ _14;
RET = [_19,_19,_19,_19,_19,_19];
_4 = _11;
_26 = _19 & _19;
_22.fld2 = 12316379250623499829_u64 as usize;
Goto(bb7)
}
bb16 = {
_35 = (_16.0, _1, _25);
_14 = !_27;
_17 = Adt44::Variant1 { fld0: _20,fld1: _5,fld2: _22.fld2 };
_18 = &_30;
_2 = 51061_u16 as i16;
_24 = _34 + _34;
_9 = _21 & _21;
_39 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2];
_4 = _12 * _11;
_38 = -_35.2;
place!(Field::<*mut u64>(Variant(_23, 1), 3)) = core::ptr::addr_of_mut!(place!(Field::<u64>(Variant(_37, 1), 0)));
place!(Field::<u32>(Variant(_17, 1), 1)) = _5 & _5;
_40 = 34619_u16 + 181_u16;
_16.0 = _35.0;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2)).1 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_23, 1), 2).2];
_4 = _11 ^ _6;
Goto(bb17)
}
bb17 = {
Call(_43 = dump_var(1_usize, 40_usize, Move(_40), 7_usize, Move(_7), 28_usize, Move(_28), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_43 = dump_var(1_usize, 19_usize, Move(_19), 3_usize, Move(_3), 6_usize, Move(_6), 12_usize, Move(_12)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_43 = dump_var(1_usize, 11_usize, Move(_11), 14_usize, Move(_14), 30_usize, Move(_30), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: usize,mut _2: [bool; 1],mut _3: i8,mut _4: char,mut _5: usize,mut _6: Adt44,mut _7: [isize; 6],mut _8: u32,mut _9: [isize; 6]) -> f64 {
mir! {
type RET = f64;
let _10: (i128, bool, [isize; 6]);
let _11: f64;
let _12: Adt44;
let _13: u64;
let _14: f64;
let _15: *const u16;
let _16: bool;
let _17: (bool, [i32; 7], i32, u16, (i64, bool));
let _18: i16;
let _19: Adt56;
let _20: isize;
let _21: i32;
let _22: i8;
let _23: isize;
let _24: bool;
let _25: f32;
let _26: f64;
let _27: i16;
let _28: f32;
let _29: u8;
let _30: char;
let _31: ();
let _32: ();
{
_10.0 = !62888217715833533076331441365620826871_i128;
_3 = 108_i8;
_2 = [false];
RET = 6729816827104312461_i64 as f64;
_3 = (-64_i8);
_5 = _1;
_12 = _6;
_10.0 = (-170074140806846415301642106999928375136_i128);
_10.2 = _7;
_8 = 1545898724_u32;
_10 = ((-112536453688916095172338509864023557198_i128), true, _7);
RET = (-4110097873306568338_i64) as f64;
_9 = [49_isize,9223372036854775807_isize,9223372036854775807_isize,(-17_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_10.1 = _1 > _1;
_2 = [_10.1];
_8 = 1801287347_u32 | 2206394060_u32;
_10.2 = [13_isize,(-94_isize),(-122_isize),9223372036854775807_isize,(-26_isize),(-51_isize)];
_13 = 18330555965395589900_u64;
_8 = 20418972182857677539667023668019755265_u128 as u32;
RET = _8 as f64;
Call(_5 = fn3(Field::<[u16; 7]>(Variant(_12, 0), 0), _10.0, _9, Field::<[u16; 7]>(Variant(_6, 0), 0), _9, _3, _10.2, _10, _10.0, _9, _12, _9, _2, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = 1838208126_u32 + 944227835_u32;
SetDiscriminant(_6, 0);
_3 = RET as i8;
_14 = -RET;
place!(Field::<[u16; 7]>(Variant(_6, 0), 0)) = [39845_u16,56702_u16,27733_u16,55869_u16,43080_u16,34106_u16,63867_u16];
_14 = RET - RET;
_14 = -RET;
_11 = RET - RET;
_7 = [9223372036854775807_isize,122_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-124_isize)];
_10.1 = true;
_10.2 = _9;
_6 = _12;
_17.2 = (-1340823566_i32);
_17.0 = _5 != _1;
SetDiscriminant(_12, 0);
_19.fld0.fld1 = core::ptr::addr_of!(_19.fld4);
SetDiscriminant(_6, 0);
_17.3 = 45277_u16 & 17921_u16;
_2 = [_17.0];
_15 = core::ptr::addr_of!(_17.3);
place!(Field::<[u16; 7]>(Variant(_12, 0), 0)) = [_17.3,(*_15),(*_15),(*_15),(*_15),(*_15),_17.3];
_5 = !_1;
_21 = _17.2;
match _10.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
227745913232022368291036097567744654258 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_19.fld2 = (-9223372036854775808_isize);
_17.1 = [_17.2,_21,_17.2,_21,_17.2,_21,_17.2];
_19.fld2 = -9223372036854775807_isize;
_19.fld1 = core::ptr::addr_of!(_14);
SetDiscriminant(_12, 0);
_15 = core::ptr::addr_of!(_17.3);
_16 = _17.0 ^ _17.0;
_3 = _13 as i8;
_18 = -6514_i16;
_10 = ((-132020897751052008957684691265357018531_i128), _16, _9);
_17.4.0 = !8573417540808984877_i64;
_19.fld0.fld0 = [_16];
_19.fld0.fld1 = core::ptr::addr_of!(_19.fld4);
_4 = '\u{cc30f}';
_4 = '\u{8c89f}';
_25 = 89_u8 as f32;
_19.fld0.fld2 = _5 | _1;
place!(Field::<[u16; 7]>(Variant(_6, 0), 0)) = [(*_15),_17.3,(*_15),_17.3,(*_15),_17.3,_17.3];
_19.fld6 = _10.2;
_17.3 = !25837_u16;
_17.1 = [_17.2,_17.2,_17.2,_17.2,_17.2,_21,_17.2];
match _10.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
5 => bb8,
6 => bb9,
208261469169886454505689916166411192925 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
_8 = 1838208126_u32 + 944227835_u32;
SetDiscriminant(_6, 0);
_3 = RET as i8;
_14 = -RET;
place!(Field::<[u16; 7]>(Variant(_6, 0), 0)) = [39845_u16,56702_u16,27733_u16,55869_u16,43080_u16,34106_u16,63867_u16];
_14 = RET - RET;
_14 = -RET;
_11 = RET - RET;
_7 = [9223372036854775807_isize,122_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-124_isize)];
_10.1 = true;
_10.2 = _9;
_6 = _12;
_17.2 = (-1340823566_i32);
_17.0 = _5 != _1;
SetDiscriminant(_12, 0);
_19.fld0.fld1 = core::ptr::addr_of!(_19.fld4);
SetDiscriminant(_6, 0);
_17.3 = 45277_u16 & 17921_u16;
_2 = [_17.0];
_15 = core::ptr::addr_of!(_17.3);
place!(Field::<[u16; 7]>(Variant(_12, 0), 0)) = [_17.3,(*_15),(*_15),(*_15),(*_15),(*_15),_17.3];
_5 = !_1;
_21 = _17.2;
match _10.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
227745913232022368291036097567744654258 => bb7,
_ => bb6
}
}
bb10 = {
Return()
}
bb11 = {
_15 = core::ptr::addr_of!(_17.3);
_12 = _6;
_22 = _3 + _3;
_19.fld0.fld1 = core::ptr::addr_of!(_19.fld4);
_19.fld5 = !_21;
_12 = _6;
_19.fld7 = _19.fld0.fld2;
_14 = RET * _11;
_26 = _14;
_5 = _1 & _19.fld7;
_24 = _16 ^ _16;
_19.fld0.fld1 = core::ptr::addr_of!(_19.fld4);
_18 = !(-31208_i16);
_4 = '\u{5dffd}';
_22 = _3 >> _5;
RET = _26 + _14;
_19.fld3 = _8 >> _19.fld0.fld2;
_28 = _25;
_19.fld0.fld3 = [_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2];
Call(_26 = fn4(_1, _19.fld3, _10.0, _2, _24, _19.fld0.fld0, _22, _7, _7, _9, _10.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_10.0 = (-107553163996040253129741536976142107515_i128) + (-11480318179692085335998337115035578989_i128);
_17.4 = Checked((-8993685571101959385_i64) + 9152139607162278622_i64);
_17.0 = _24;
_28 = _25;
_2 = [_24];
Goto(bb13)
}
bb13 = {
_17.3 = 15016_u16 - 54287_u16;
_14 = _25 as f64;
_20 = _19.fld2 ^ _19.fld2;
_22 = _3;
_2 = _19.fld0.fld0;
_10.1 = !_24;
_22 = _20 as i8;
_6 = Adt44::Variant0 { fld0: Field::<[u16; 7]>(Variant(_12, 0), 0) };
place!(Field::<[u16; 7]>(Variant(_6, 0), 0)) = [(*_15),(*_15),_17.3,(*_15),_17.3,(*_15),_17.3];
_13 = !12498315128157900709_u64;
_19.fld1 = core::ptr::addr_of!(_26);
_11 = _26 * _26;
_23 = _19.fld2 + _20;
_11 = (*_15) as f64;
_16 = _10.1;
_9 = _10.2;
_7 = [_23,_23,_23,_19.fld2,_23,_19.fld2];
_10.0 = (-128710022206027090365333613498939486159_i128);
_27 = _26 as i16;
_17.4.0 = -(-4936694783486291015_i64);
_26 = RET;
_17.2 = -_19.fld5;
_29 = _17.4.0 as u8;
RET = _26;
RET = (*_15) as f64;
Goto(bb14)
}
bb14 = {
RET = _26;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(2_usize, 17_usize, Move(_17), 2_usize, Move(_2), 3_usize, Move(_3), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(2_usize, 23_usize, Move(_23), 21_usize, Move(_21), 24_usize, Move(_24), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(2_usize, 16_usize, Move(_16), 20_usize, Move(_20), 32_usize, _32, 32_usize, _32), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [u16; 7],mut _2: i128,mut _3: [isize; 6],mut _4: [u16; 7],mut _5: [isize; 6],mut _6: i8,mut _7: [isize; 6],mut _8: (i128, bool, [isize; 6]),mut _9: i128,mut _10: [isize; 6],mut _11: Adt44,mut _12: [isize; 6],mut _13: [bool; 1],mut _14: [isize; 6]) -> usize {
mir! {
type RET = usize;
let _15: [bool; 1];
let _16: char;
let _17: i8;
let _18: (bool, [i32; 7], i32, u16, (i64, bool));
let _19: (char, [bool; 1], f64);
let _20: [bool; 1];
let _21: *const u16;
let _22: bool;
let _23: ();
let _24: ();
{
_14 = _3;
RET = 7_usize ^ 14555609886371403812_usize;
_1 = [24485_u16,6728_u16,61490_u16,12245_u16,8010_u16,41098_u16,1500_u16];
_1 = [56687_u16,7556_u16,52843_u16,5580_u16,36355_u16,55969_u16,6216_u16];
_5 = _8.2;
place!(Field::<[u16; 7]>(Variant(_11, 0), 0)) = [54743_u16,30383_u16,225_u16,60924_u16,21140_u16,43270_u16,25945_u16];
_2 = _8.0;
_6 = -68_i8;
_1 = [2682_u16,62167_u16,60036_u16,37776_u16,35435_u16,1758_u16,23091_u16];
_10 = [(-13_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),51_isize,9223372036854775807_isize,9223372036854775807_isize];
SetDiscriminant(_11, 1);
_4 = [53187_u16,59165_u16,48106_u16,46411_u16,32767_u16,30768_u16,15945_u16];
_8.0 = _2;
place!(Field::<usize>(Variant(_11, 1), 2)) = 109746345215224690326278790503703811597_u128 as usize;
_9 = _8.0 << RET;
place!(Field::<[u128; 5]>(Variant(_11, 1), 0)) = [129619057432689136350301776737783298793_u128,337571704066535210948624145670178781876_u128,19068919936677243133032637072590174986_u128,289532469074202278796624042199569236526_u128,25798196691514731086056892733417340840_u128];
_14 = _8.2;
RET = Field::<usize>(Variant(_11, 1), 2) - Field::<usize>(Variant(_11, 1), 2);
place!(Field::<usize>(Variant(_11, 1), 2)) = 9686292093464030469_u64 as usize;
_2 = _9;
_16 = '\u{b60ec}';
_3 = [(-9223372036854775808_isize),(-77_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_18.3 = !25372_u16;
Goto(bb1)
}
bb1 = {
place!(Field::<usize>(Variant(_11, 1), 2)) = !RET;
match _8.0 {
0 => bb2,
1 => bb3,
2 => bb4,
227745913232022368291036097567744654258 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
place!(Field::<[u128; 5]>(Variant(_11, 1), 0)) = [1242123716492036297503776981029474731_u128,300677521368382204103837778921496101074_u128,298106830421790764450162856057701736946_u128,280284625047933300723757967248737384555_u128,125708711135345343178078873243730039866_u128];
match _8.0 {
0 => bb7,
1 => bb8,
227745913232022368291036097567744654258 => bb10,
_ => bb9
}
}
bb7 = {
Return()
}
bb8 = {
place!(Field::<usize>(Variant(_11, 1), 2)) = !RET;
match _8.0 {
0 => bb2,
1 => bb3,
2 => bb4,
227745913232022368291036097567744654258 => bb6,
_ => bb5
}
}
bb9 = {
Return()
}
bb10 = {
RET = 1862122366_u32 as usize;
_19.2 = 214853163601392114990898201503213995694_u128 as f64;
_18.4 = Checked(4450142619535638922_i64 + 7044489362317483278_i64);
_15 = [_8.1];
Goto(bb11)
}
bb11 = {
_1 = _4;
_18.1 = [(-1907277947_i32),955652055_i32,1259520926_i32,(-1385604235_i32),(-39917139_i32),778202659_i32,345446668_i32];
_8.1 = !_18.4.1;
RET = Field::<usize>(Variant(_11, 1), 2) & Field::<usize>(Variant(_11, 1), 2);
place!(Field::<u32>(Variant(_11, 1), 1)) = !1910906164_u32;
_19.2 = _6 as f64;
_12 = [(-9223372036854775808_isize),123_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-50_isize),40_isize];
_2 = _8.0;
_20 = [_18.4.1];
_19.1 = [_18.4.1];
_18.0 = !_8.1;
_5 = [9223372036854775807_isize,9223372036854775807_isize,(-47_isize),9223372036854775807_isize,(-32_isize),44_isize];
place!(Field::<usize>(Variant(_11, 1), 2)) = RET | RET;
_19.0 = _16;
_18.2 = 946331003_i32 << _2;
_19.2 = _18.3 as f64;
match _8.0 {
0 => bb4,
1 => bb12,
2 => bb13,
227745913232022368291036097567744654258 => bb15,
_ => bb14
}
}
bb12 = {
place!(Field::<usize>(Variant(_11, 1), 2)) = !RET;
match _8.0 {
0 => bb2,
1 => bb3,
2 => bb4,
227745913232022368291036097567744654258 => bb6,
_ => bb5
}
}
bb13 = {
place!(Field::<[u128; 5]>(Variant(_11, 1), 0)) = [1242123716492036297503776981029474731_u128,300677521368382204103837778921496101074_u128,298106830421790764450162856057701736946_u128,280284625047933300723757967248737384555_u128,125708711135345343178078873243730039866_u128];
match _8.0 {
0 => bb7,
1 => bb8,
227745913232022368291036097567744654258 => bb10,
_ => bb9
}
}
bb14 = {
Return()
}
bb15 = {
_18.3 = 49944_u16;
_18.0 = !_18.4.1;
_18.4.1 = _8.1;
_2 = !_9;
_22 = !_8.1;
_18.4.1 = _8.1 ^ _8.1;
_18.4.0 = Field::<u32>(Variant(_11, 1), 1) as i64;
_10 = [9223372036854775807_isize,9223372036854775807_isize,19_isize,(-9223372036854775808_isize),(-117_isize),(-9223372036854775808_isize)];
_8.0 = 174804189771520376325427226614948422340_u128 as i128;
_22 = _18.0;
_18.2 = -1753612237_i32;
_8 = (_9, _18.4.1, _10);
_17 = _6 * _6;
_15 = [_18.4.1];
_18.2 = !(-1974628943_i32);
_21 = core::ptr::addr_of!(_18.3);
Goto(bb16)
}
bb16 = {
Call(_23 = dump_var(3_usize, 10_usize, Move(_10), 18_usize, Move(_18), 16_usize, Move(_16), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_23 = dump_var(3_usize, 9_usize, Move(_9), 4_usize, Move(_4), 7_usize, Move(_7), 14_usize, Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_23 = dump_var(3_usize, 1_usize, Move(_1), 24_usize, _24, 24_usize, _24, 24_usize, _24), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: usize,mut _2: u32,mut _3: i128,mut _4: [bool; 1],mut _5: bool,mut _6: [bool; 1],mut _7: i8,mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: i128) -> f64 {
mir! {
type RET = f64;
let _12: [usize; 2];
let _13: [usize; 2];
let _14: f32;
let _15: bool;
let _16: isize;
let _17: [bool; 1];
let _18: (bool, [i32; 7], i32, u16, (i64, bool));
let _19: [bool; 6];
let _20: i64;
let _21: [isize; 6];
let _22: u64;
let _23: [bool; 6];
let _24: Adt52;
let _25: u8;
let _26: isize;
let _27: i16;
let _28: ();
let _29: ();
{
RET = 191_u8 as f64;
_4 = [_5];
RET = _2 as f64;
_9 = [(-72_isize),(-9223372036854775808_isize),89_isize,62_isize,(-96_isize),(-12_isize)];
_11 = _3 >> _2;
_4 = [_5];
_5 = _7 <= _7;
_11 = _3 | _3;
_4 = [_5];
Goto(bb1)
}
bb1 = {
_2 = !1942989286_u32;
_8 = [(-9223372036854775808_isize),44_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = _3 >> _3;
RET = 117_u8 as f64;
_2 = 1405949733_u32 << _11;
_8 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),35_isize,17_isize];
_10 = [98_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_15 = !_5;
RET = 36585521152010826730466026446732570007_u128 as f64;
_13 = [_1,_1];
_10 = _8;
_3 = _11;
_2 = (-8635_i16) as u32;
_17 = _6;
_3 = _11 << _11;
_11 = _3;
_4 = [_5];
_12 = [_1,_1];
_18.1 = [(-675638396_i32),1207584310_i32,(-1207326714_i32),209388617_i32,1796211095_i32,1138301990_i32,1424143027_i32];
_16 = (-9223372036854775808_isize) >> _3;
_8 = [_16,_16,_16,_16,_16,_16];
_9 = [_16,_16,_16,_16,_16,_16];
_19 = [_5,_15,_5,_15,_15,_5];
_15 = !_5;
_7 = (-7_i8) & 109_i8;
Goto(bb2)
}
bb2 = {
RET = _2 as f64;
_15 = _5;
_14 = _7 as f32;
_9 = [_16,_16,_16,_16,_16,_16];
_7 = (-94_i8) | (-104_i8);
_18.4.1 = _15;
_6 = [_15];
_8 = _9;
_18.2 = !338566987_i32;
_5 = _15;
_2 = 9709844818639284116_u64 as u32;
_15 = _18.4.1 & _18.4.1;
_11 = _14 as i128;
_14 = _3 as f32;
_18.4 = (4811727308318447908_i64, _15);
Goto(bb3)
}
bb3 = {
_3 = !_11;
_18.1 = [_18.2,_18.2,_18.2,_18.2,_18.2,_18.2,_18.2];
_8 = _9;
_17 = [_15];
_21 = [_16,_16,_16,_16,_16,_16];
RET = _2 as f64;
_18.2 = _16 as i32;
_9 = [_16,_16,_16,_16,_16,_16];
_14 = 142_u8 as f32;
RET = _2 as f64;
_23 = [_15,_5,_18.4.1,_18.4.1,_18.4.1,_18.4.1];
_22 = !13908642122123389328_u64;
_10 = [_16,_16,_16,_16,_16,_16];
Call(_18.4.1 = fn5(_19, _10, _21, _6, _12, _21, _18.4.0, _10, _19, _16, _17, _9, _16, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18.4 = Checked(8514906807699851554_i64 * 1193212861203782381_i64);
_1 = 8143368480424713968_usize;
_15 = _16 <= _16;
_16 = (-9223372036854775808_isize);
_1 = _7 as usize;
_21 = [_16,_16,_16,_16,_16,_16];
_1 = 25576_i16 as usize;
_13 = [_1,_1];
_18.1 = [_18.2,_18.2,_18.2,_18.2,_18.2,_18.2,_18.2];
_5 = _18.2 <= _18.2;
_19 = [_5,_15,_5,_15,_5,_15];
_18.3 = 25379_u16 << _18.2;
_18.2 = 1084718639_i32;
RET = _1 as f64;
_10 = [_16,_16,_16,_16,_16,_16];
_25 = 16_u8;
match _18.2 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
1084718639 => bb10,
_ => bb9
}
}
bb5 = {
_3 = !_11;
_18.1 = [_18.2,_18.2,_18.2,_18.2,_18.2,_18.2,_18.2];
_8 = _9;
_17 = [_15];
_21 = [_16,_16,_16,_16,_16,_16];
RET = _2 as f64;
_18.2 = _16 as i32;
_9 = [_16,_16,_16,_16,_16,_16];
_14 = 142_u8 as f32;
RET = _2 as f64;
_23 = [_15,_5,_18.4.1,_18.4.1,_18.4.1,_18.4.1];
_22 = !13908642122123389328_u64;
_10 = [_16,_16,_16,_16,_16,_16];
Call(_18.4.1 = fn5(_19, _10, _21, _6, _12, _21, _18.4.0, _10, _19, _16, _17, _9, _16, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
RET = _2 as f64;
_15 = _5;
_14 = _7 as f32;
_9 = [_16,_16,_16,_16,_16,_16];
_7 = (-94_i8) | (-104_i8);
_18.4.1 = _15;
_6 = [_15];
_8 = _9;
_18.2 = !338566987_i32;
_5 = _15;
_2 = 9709844818639284116_u64 as u32;
_15 = _18.4.1 & _18.4.1;
_11 = _14 as i128;
_14 = _3 as f32;
_18.4 = (4811727308318447908_i64, _15);
Goto(bb3)
}
bb7 = {
_2 = !1942989286_u32;
_8 = [(-9223372036854775808_isize),44_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = _3 >> _3;
RET = 117_u8 as f64;
_2 = 1405949733_u32 << _11;
_8 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),35_isize,17_isize];
_10 = [98_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_15 = !_5;
RET = 36585521152010826730466026446732570007_u128 as f64;
_13 = [_1,_1];
_10 = _8;
_3 = _11;
_2 = (-8635_i16) as u32;
_17 = _6;
_3 = _11 << _11;
_11 = _3;
_4 = [_5];
_12 = [_1,_1];
_18.1 = [(-675638396_i32),1207584310_i32,(-1207326714_i32),209388617_i32,1796211095_i32,1138301990_i32,1424143027_i32];
_16 = (-9223372036854775808_isize) >> _3;
_8 = [_16,_16,_16,_16,_16,_16];
_9 = [_16,_16,_16,_16,_16,_16];
_19 = [_5,_15,_5,_15,_15,_5];
_15 = !_5;
_7 = (-7_i8) & 109_i8;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_7 = -23_i8;
_18.4.0 = (-533711103488335357_i64) * 3842756930666801585_i64;
_18.4.1 = !_15;
_18.4.0 = 2725767945634692175_i64;
_7 = !(-19_i8);
_25 = 237_u8 + 229_u8;
_18.4 = ((-1799959274666698120_i64), _15);
_18.4 = Checked(2322099358877574047_i64 * 6213170679555504433_i64);
_10 = _8;
_1 = !12344137120337938127_usize;
_6 = [_15];
_13 = [_1,_1];
_23 = _19;
RET = _18.3 as f64;
_18.1 = [_18.2,_18.2,_18.2,_18.2,_18.2,_18.2,_18.2];
_6 = [_15];
_20 = _18.4.0;
_14 = _22 as f32;
_18.4.1 = _15 | _5;
_9 = [_16,_16,_16,_16,_16,_16];
_21 = [_16,_16,_16,_16,_16,_16];
_27 = RET as i16;
_12 = [_1,_1];
Goto(bb11)
}
bb11 = {
Call(_28 = dump_var(4_usize, 22_usize, Move(_22), 7_usize, Move(_7), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_28 = dump_var(4_usize, 23_usize, Move(_23), 27_usize, Move(_27), 15_usize, Move(_15), 4_usize, Move(_4)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_28 = dump_var(4_usize, 19_usize, Move(_19), 8_usize, Move(_8), 6_usize, Move(_6), 29_usize, _29), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [bool; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [bool; 1],mut _5: [usize; 2],mut _6: [isize; 6],mut _7: i64,mut _8: [isize; 6],mut _9: [bool; 6],mut _10: isize,mut _11: [bool; 1],mut _12: [isize; 6],mut _13: isize,mut _14: [isize; 6]) -> bool {
mir! {
type RET = bool;
let _15: u128;
let _16: char;
let _17: u32;
let _18: isize;
let _19: char;
let _20: [bool; 1];
let _21: Adt52;
let _22: u16;
let _23: [isize; 7];
let _24: u128;
let _25: [i32; 3];
let _26: isize;
let _27: f64;
let _28: Adt46;
let _29: [usize; 2];
let _30: u8;
let _31: f32;
let _32: *const *mut i16;
let _33: bool;
let _34: Adt48;
let _35: i8;
let _36: *const f64;
let _37: Adt44;
let _38: u64;
let _39: [usize; 2];
let _40: bool;
let _41: char;
let _42: (i64, bool);
let _43: ();
let _44: ();
{
_12 = [_10,_10,_10,_13,_13,_10];
_4 = [true];
_13 = _10;
Call(RET = fn6(_13, _7, _1, _7, _6, _12, _12, _6, _2, _3, _2, _14, _2, _8, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = [_13,_13,_10,_10,_13,_10];
_9 = [RET,RET,RET,RET,RET,RET];
_14 = _6;
_6 = _2;
_5 = [7218277990963434366_usize,11053842522518450500_usize];
RET = !true;
_4 = [RET];
_15 = !974142260285237414253951364337789030_u128;
_13 = _7 as isize;
_17 = !2661648108_u32;
_9 = [RET,RET,RET,RET,RET,RET];
_19 = '\u{21913}';
_16 = _19;
_19 = _16;
_11 = [RET];
Call(_3 = fn7(_10, _14, _14, _1, _14, _13, _7, _2, _10, _12, _6, _8, _6, _8, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_15 = !47856882745591538275750891422139346282_u128;
_11 = [RET];
_8 = [_10,_13,_13,_10,_10,_13];
_6 = _3;
_22 = _7 as u16;
_22 = 12066_u16;
_1 = [RET,RET,RET,RET,RET,RET];
_4 = [RET];
_10 = _13 + _13;
_8 = [_13,_10,_13,_10,_10,_13];
RET = _15 == _15;
_2 = [_10,_10,_10,_10,_13,_10];
_2 = [_13,_13,_13,_13,_10,_13];
_8 = [_10,_13,_13,_10,_13,_13];
_5 = [3_usize,7_usize];
_10 = !_13;
Call(_13 = fn8(_6, _14, _2, _6, _14, _8, _2, _2, _12, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = [5033941613433591239_usize,3_usize];
_18 = 3308475443124923387_u64 as isize;
_19 = _16;
_2 = [_10,_10,_10,_10,_18,_10];
_3 = [_10,_10,_10,_10,_10,_10];
_16 = _19;
_25 = [(-199461770_i32),770821981_i32,(-1556550945_i32)];
_7 = (-5634207739203902881_i64) * (-5076880960425177709_i64);
_16 = _19;
_25 = [(-279371186_i32),(-504083686_i32),1299268319_i32];
_20 = [RET];
_13 = _10 << _10;
_8 = [_13,_10,_10,_10,_10,_13];
_14 = [_13,_10,_13,_10,_13,_13];
_19 = _16;
_11 = _20;
_3 = [_13,_13,_10,_13,_10,_13];
_29 = _5;
_25 = [575028810_i32,(-70029706_i32),(-239895626_i32)];
_16 = _19;
_29 = _5;
Goto(bb4)
}
bb4 = {
_14 = [_13,_13,_13,_13,_10,_13];
_19 = _16;
_14 = _8;
RET = !false;
_29 = [18266767408919601194_usize,6_usize];
_30 = 182_u8 | 86_u8;
_14 = [_13,_13,_10,_13,_13,_13];
_2 = [_13,_10,_13,_13,_13,_13];
_3 = [_13,_13,_10,_10,_10,_13];
_30 = !128_u8;
_1 = [RET,RET,RET,RET,RET,RET];
_13 = _10 << _10;
_9 = _1;
_31 = _30 as f32;
RET = !true;
_24 = _15 & _15;
_29 = [3_usize,2256417132360499406_usize];
_2 = [_13,_10,_13,_13,_13,_10];
_18 = _13 << _13;
Call(_24 = fn9(_14, _8, _8, _18), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_25 = [(-1385772361_i32),(-1133627757_i32),(-415894015_i32)];
_27 = _17 as f64;
_23 = [_18,_18,_18,_10,_18,_18,_10];
_16 = _19;
_22 = 5726_u16 << _18;
_12 = [_18,_18,_10,_10,_18,_13];
_38 = 11336169591210598047_u64;
_23 = [_18,_18,_10,_13,_13,_13,_18];
_29 = [6_usize,15457781847656915872_usize];
_35 = !56_i8;
_29 = _5;
_14 = [_13,_13,_13,_18,_18,_13];
_33 = RET;
_2 = [_13,_13,_18,_13,_18,_13];
RET = _13 >= _10;
_8 = [_18,_10,_18,_18,_18,_18];
_3 = [_10,_18,_13,_18,_13,_18];
_33 = !RET;
_12 = _6;
_15 = _24;
_35 = _13 as i8;
_39 = [5_usize,3569162279713192470_usize];
_20 = [RET];
Goto(bb6)
}
bb6 = {
Call(_43 = dump_var(5_usize, 19_usize, Move(_19), 33_usize, Move(_33), 24_usize, Move(_24), 17_usize, Move(_17)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_43 = dump_var(5_usize, 13_usize, Move(_13), 18_usize, Move(_18), 8_usize, Move(_8), 35_usize, Move(_35)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_43 = dump_var(5_usize, 2_usize, Move(_2), 5_usize, Move(_5), 20_usize, Move(_20), 16_usize, Move(_16)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_43 = dump_var(5_usize, 29_usize, Move(_29), 22_usize, Move(_22), 1_usize, Move(_1), 44_usize, _44), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: i64,mut _3: [bool; 6],mut _4: i64,mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: [isize; 6],mut _14: [isize; 6],mut _15: [isize; 6]) -> bool {
mir! {
type RET = bool;
let _16: usize;
let _17: ();
let _18: ();
{
_7 = [_1,_1,_1,_1,_1,_1];
_14 = [_1,_1,_1,_1,_1,_1];
RET = _1 != _1;
_11 = [_1,_1,_1,_1,_1,_1];
_8 = [_1,_1,_1,_1,_1,_1];
_13 = [_1,_1,_1,_1,_1,_1];
_3 = [RET,RET,RET,RET,RET,RET];
_13 = _15;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(6_usize, 6_usize, Move(_6), 15_usize, Move(_15), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(6_usize, 7_usize, Move(_7), 14_usize, Move(_14), 8_usize, Move(_8), 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [bool; 6],mut _5: [isize; 6],mut _6: isize,mut _7: i64,mut _8: [isize; 6],mut _9: isize,mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: [isize; 6],mut _14: [isize; 6],mut _15: isize) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _16: isize;
let _17: [bool; 6];
let _18: u64;
let _19: i64;
let _20: ();
let _21: ();
{
_6 = (-40258575396778016750780152837423467429_i128) as isize;
_10 = _3;
_4 = [true,false,true,false,true,false];
_4 = [false,false,true,true,true,true];
_16 = _15;
_10 = _5;
RET = _11;
_14 = _10;
_16 = -_1;
_3 = [_15,_16,_15,_1,_1,_15];
_13 = RET;
_17 = [true,false,true,true,false,false];
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(7_usize, 8_usize, Move(_8), 11_usize, Move(_11), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(7_usize, 12_usize, Move(_12), 15_usize, Move(_15), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [isize; 6],mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6]) -> isize {
mir! {
type RET = isize;
let _11: (char, [bool; 1], f64);
let _12: *mut u64;
let _13: i128;
let _14: [u128; 5];
let _15: u64;
let _16: i128;
let _17: char;
let _18: u64;
let _19: (i128, bool, [isize; 6]);
let _20: isize;
let _21: char;
let _22: u16;
let _23: (bool, [i32; 7], i32, u16, (i64, bool));
let _24: [bool; 1];
let _25: (bool, [i32; 7], i32, u16, (i64, bool));
let _26: [bool; 6];
let _27: [usize; 2];
let _28: *const i128;
let _29: ();
let _30: ();
{
_11.2 = 255_u8 as f64;
_5 = [9223372036854775807_isize,(-9_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),15_isize];
_11.1 = [true];
_1 = [70_isize,(-9223372036854775808_isize),74_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
RET = _11.2 as isize;
RET = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
RET = (-9223372036854775808_isize);
_1 = _2;
_11.0 = '\u{b5e1c}';
_13 = _11.0 as i128;
_9 = _10;
_2 = [RET,RET,RET,RET,RET,RET];
_9 = _8;
_4 = _10;
_11.2 = (-1580274471_i32) as f64;
_12 = core::ptr::addr_of_mut!(_15);
_11.1 = [false];
_6 = _8;
_14 = [214371772452853049066161362454313850851_u128,134122042917412795509418494045624770240_u128,304916826320361823603943855189446781872_u128,114410791981337973315242540761079215125_u128,33661116997216020880858866230759818650_u128];
_10 = [RET,RET,RET,RET,RET,RET];
_17 = _11.0;
_17 = _11.0;
_4 = [RET,RET,RET,RET,RET,RET];
_16 = 1504621922_i32 as i128;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463454151235394913435648 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11.1 = [true];
RET = (-9223372036854775808_isize) | 9223372036854775807_isize;
_2 = [RET,RET,RET,RET,RET,RET];
_11.0 = _17;
RET = -106_isize;
_8 = [RET,RET,RET,RET,RET,RET];
RET = !9223372036854775807_isize;
_5 = [RET,RET,RET,RET,RET,RET];
_8 = [RET,RET,RET,RET,RET,RET];
_11.2 = 2512221851829561506_usize as f64;
_15 = 11878351093022710959_u64 - 11180530851515677343_u64;
_14 = [126301459050779733064272389139839625693_u128,328181572545334597016084067607487474575_u128,227838111150276367840377561513867619281_u128,149677802547426973057586668366542283320_u128,283464611187267936100897736048409043551_u128];
_1 = [RET,RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET,RET];
_12 = core::ptr::addr_of_mut!(_15);
_8 = _7;
_11.0 = _17;
_8 = _9;
_8 = [RET,RET,RET,RET,RET,RET];
Goto(bb8)
}
bb8 = {
_6 = [RET,RET,RET,RET,RET,RET];
_12 = core::ptr::addr_of_mut!(_18);
_9 = [RET,RET,RET,RET,RET,RET];
_18 = _15;
_7 = [RET,RET,RET,RET,RET,RET];
_9 = [RET,RET,RET,RET,RET,RET];
_7 = [RET,RET,RET,RET,RET,RET];
_15 = _13 as u64;
_16 = _13;
_19.0 = !_13;
RET = !(-69_isize);
_19.0 = !_13;
_19 = (_16, true, _3);
_15 = !(*_12);
_12 = core::ptr::addr_of_mut!((*_12));
_6 = [RET,RET,RET,RET,RET,RET];
_17 = _11.0;
_7 = [RET,RET,RET,RET,RET,RET];
RET = (-9223372036854775808_isize);
_19 = (_16, false, _3);
_15 = _18 | (*_12);
_3 = [RET,RET,RET,RET,RET,RET];
_7 = [RET,RET,RET,RET,RET,RET];
_6 = [RET,RET,RET,RET,RET,RET];
_4 = [RET,RET,RET,RET,RET,RET];
_13 = 20_u8 as i128;
match RET {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463454151235394913435648 => bb13,
_ => bb12
}
}
bb9 = {
_11.1 = [true];
RET = (-9223372036854775808_isize) | 9223372036854775807_isize;
_2 = [RET,RET,RET,RET,RET,RET];
_11.0 = _17;
RET = -106_isize;
_8 = [RET,RET,RET,RET,RET,RET];
RET = !9223372036854775807_isize;
_5 = [RET,RET,RET,RET,RET,RET];
_8 = [RET,RET,RET,RET,RET,RET];
_11.2 = 2512221851829561506_usize as f64;
_15 = 11878351093022710959_u64 - 11180530851515677343_u64;
_14 = [126301459050779733064272389139839625693_u128,328181572545334597016084067607487474575_u128,227838111150276367840377561513867619281_u128,149677802547426973057586668366542283320_u128,283464611187267936100897736048409043551_u128];
_1 = [RET,RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET,RET];
_12 = core::ptr::addr_of_mut!(_15);
_8 = _7;
_11.0 = _17;
_8 = _9;
_8 = [RET,RET,RET,RET,RET,RET];
Goto(bb8)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_6 = [RET,RET,RET,RET,RET,RET];
_23.4.0 = 118_i8 as i64;
_13 = _16;
_23.4.0 = !4433540281291013593_i64;
_14 = [163652073938254387073590991777129661673_u128,321329806974258242276993273223520732456_u128,78114451294570673870543519554312366000_u128,334542297590899368050294865525934869442_u128,333073803286254987949345164167520389243_u128];
_23.4.1 = !_19.1;
_11.2 = 1917521417_u32 as f64;
_20 = RET;
_25.2 = (-187523453_i32) + 2044920608_i32;
_25.4.1 = _19.1;
match _20 {
0 => bb5,
340282366920938463454151235394913435648 => bb15,
_ => bb14
}
}
bb14 = {
_6 = [RET,RET,RET,RET,RET,RET];
_12 = core::ptr::addr_of_mut!(_18);
_9 = [RET,RET,RET,RET,RET,RET];
_18 = _15;
_7 = [RET,RET,RET,RET,RET,RET];
_9 = [RET,RET,RET,RET,RET,RET];
_7 = [RET,RET,RET,RET,RET,RET];
_15 = _13 as u64;
_16 = _13;
_19.0 = !_13;
RET = !(-69_isize);
_19.0 = !_13;
_19 = (_16, true, _3);
_15 = !(*_12);
_12 = core::ptr::addr_of_mut!((*_12));
_6 = [RET,RET,RET,RET,RET,RET];
_17 = _11.0;
_7 = [RET,RET,RET,RET,RET,RET];
RET = (-9223372036854775808_isize);
_19 = (_16, false, _3);
_15 = _18 | (*_12);
_3 = [RET,RET,RET,RET,RET,RET];
_7 = [RET,RET,RET,RET,RET,RET];
_6 = [RET,RET,RET,RET,RET,RET];
_4 = [RET,RET,RET,RET,RET,RET];
_13 = 20_u8 as i128;
match RET {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463454151235394913435648 => bb13,
_ => bb12
}
}
bb15 = {
_3 = [_20,_20,RET,RET,_20,RET];
_25.4.0 = 10815085707527971586_usize as i64;
_5 = _19.2;
Goto(bb16)
}
bb16 = {
Call(_29 = dump_var(8_usize, 9_usize, Move(_9), 2_usize, Move(_2), 4_usize, Move(_4), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(8_usize, 10_usize, Move(_10), 19_usize, Move(_19), 7_usize, Move(_7), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(8_usize, 15_usize, Move(_15), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: isize) -> u128 {
mir! {
type RET = u128;
let _5: *const u16;
let _6: char;
let _7: (char, [bool; 1], f64);
let _8: Adt59;
let _9: [bool; 1];
let _10: isize;
let _11: f64;
let _12: u128;
let _13: (*mut i16, u32, i16);
let _14: [u128; 5];
let _15: (i128, bool, [isize; 6]);
let _16: i8;
let _17: (bool, [i32; 7], i32, u16, (i64, bool));
let _18: Adt47;
let _19: Adt45;
let _20: Adt54;
let _21: isize;
let _22: ();
let _23: ();
{
RET = 1255713655_i32 as u128;
RET = 257702805557133463402258686817381985628_u128;
RET = !109106935232739343890670043635927769446_u128;
RET = 3979172358230302649_u64 as u128;
_2 = [_4,_4,_4,_4,_4,_4];
RET = !5563270595303040136086166029142064743_u128;
RET = 306957786835203106344662055143477343662_u128;
_6 = '\u{727bf}';
Goto(bb1)
}
bb1 = {
_7.1 = [true];
_3 = [_4,_4,_4,_4,_4,_4];
_7.0 = _6;
_7.2 = 11_u8 as f64;
_4 = !(-78_isize);
_4 = 9223372036854775807_isize;
_1 = _2;
_3 = _2;
_2 = [_4,_4,_4,_4,_4,_4];
_7.2 = 12012_u16 as f64;
_9 = [true];
_4 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_7.1 = [false];
_7.0 = _6;
_7.2 = 118246915_u32 as f64;
_11 = (-26446_i16) as f64;
_6 = _7.0;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
306957786835203106344662055143477343662 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11 = _7.2;
_7.1 = [true];
_9 = _7.1;
_9 = _7.1;
RET = (-53482114341290608222925927544934279133_i128) as u128;
RET = 11749_u16 as u128;
_11 = 39259_u16 as f64;
_8 = Adt59::Variant2 { fld0: 4489_i16 };
_12 = !RET;
_1 = _3;
_2 = _3;
_6 = _7.0;
place!(Field::<i16>(Variant(_8, 2), 0)) = 29257_i16;
_3 = [_4,_4,_4,_4,_4,_4];
_4 = (-9223372036854775808_isize);
_13.2 = !Field::<i16>(Variant(_8, 2), 0);
_2 = _1;
_13.0 = core::ptr::addr_of_mut!(_13.2);
RET = _12;
_7.1 = [false];
_14 = [RET,_12,_12,RET,RET];
_13.1 = 953706950_u32;
_10 = _6 as isize;
_11 = _7.2 * _7.2;
SetDiscriminant(_8, 1);
_3 = [_10,_10,_10,_10,_10,_4];
_9 = [true];
match _13.1 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
953706950 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_5 = core::ptr::addr_of!(place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).3);
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).2 = _6 as i32;
_7.2 = _11;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).3 = 38542_u16 - 50592_u16;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).1 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2];
_13.2 = -(-5451_i16);
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).2 = (-221286376_i32) ^ (-1970634253_i32);
_17.4.1 = _13.1 <= _13.1;
place!(Field::<[i32; 3]>(Variant(_8, 1), 1)) = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2];
_17.4.0 = 8025605572996075543_i64 * 157340466907261992_i64;
_15.0 = (-8936377558446056880612771942765634825_i128);
_17.4.1 = !false;
_15 = (158834338918417950986883865767446921862_i128, _17.4.1, _2);
_14 = [RET,_12,_12,_12,RET];
_13.1 = 3289614380_u32;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).4.1 = !_15.1;
RET = !_12;
_7 = (_6, _9, _11);
_19 = Adt45::Variant0 { fld0: Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,fld1: _17.4 };
_16 = 3_i8 ^ 108_i8;
_2 = _15.2;
Call(_16 = fn10(_1, _1, _2, _15, Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).1, _2, _15.2, _1, _15, _2, _15.2, _13.2, _2, _15.2, _2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_10 = _4 ^ _4;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).0 = !_17.4.1;
place!(Field::<i16>(Variant(_8, 1), 4)) = _13.2;
_1 = [_4,_10,_10,_10,_10,_10];
_7.0 = _6;
RET = _12;
SetDiscriminant(_19, 2);
place!(Field::<[i32; 3]>(Variant(_8, 1), 1)) = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2];
_7.2 = Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2 as f64;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).4.0 = 8741934989203919945_u64 as i64;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).2 = (-1294234671_i32);
_17.3 = (*_5);
match _15.0 {
0 => bb8,
158834338918417950986883865767446921862 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_17.0 = _17.4.1;
_11 = _7.2;
RET = _12;
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).4.1 = !Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).0;
_1 = _15.2;
_16 = (-42_i8) >> _15.0;
_18 = Adt47::Variant0 { fld0: _7.2,fld1: 14849580599288278214_u64,fld2: _7 };
place!(Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2)).1 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2];
_17.1 = [Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2,Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).2];
_15 = (28826063322130909599601524114169388156_i128, Field::<(bool, [i32; 7], i32, u16, (i64, bool))>(Variant(_8, 1), 2).4.1, _1);
_7.1 = _9;
place!(Field::<u64>(Variant(_18, 0), 1)) = !13405847442138347687_u64;
Goto(bb16)
}
bb16 = {
Call(_22 = dump_var(9_usize, 1_usize, Move(_1), 2_usize, Move(_2), 3_usize, Move(_3), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_22 = dump_var(9_usize, 12_usize, Move(_12), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: (i128, bool, [isize; 6]),mut _5: [i32; 7],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: (i128, bool, [isize; 6]),mut _10: [isize; 6],mut _11: [isize; 6],mut _12: i16,mut _13: [isize; 6],mut _14: [isize; 6],mut _15: [isize; 6]) -> i8 {
mir! {
type RET = i8;
let _16: f64;
let _17: Adt48;
let _18: *mut [i32; 3];
let _19: [i32; 3];
let _20: [i32; 3];
let _21: Adt49;
let _22: *mut f32;
let _23: bool;
let _24: isize;
let _25: [i32; 7];
let _26: [u128; 5];
let _27: (bool, [i32; 7], i32, u16, (i64, bool));
let _28: f32;
let _29: (char, [bool; 1], f64);
let _30: (i128, bool, [isize; 6]);
let _31: bool;
let _32: Adt46;
let _33: [isize; 7];
let _34: u64;
let _35: [usize; 2];
let _36: f32;
let _37: i16;
let _38: isize;
let _39: f32;
let _40: isize;
let _41: *mut i16;
let _42: *const *mut i16;
let _43: Adt44;
let _44: u16;
let _45: bool;
let _46: Adt55;
let _47: [usize; 2];
let _48: u128;
let _49: Adt49;
let _50: u32;
let _51: ();
let _52: ();
{
_9.0 = !_4.0;
_6 = _8;
RET = '\u{10df4a}' as i8;
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),41_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_10 = [(-122_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-86_isize)];
_4.2 = _6;
_1 = [(-1_isize),9223372036854775807_isize,9223372036854775807_isize,(-23_isize),(-18_isize),28_isize];
RET = -103_i8;
_4.2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,107_isize,(-9223372036854775808_isize),18_isize];
_4.2 = [(-9223372036854775808_isize),(-59_isize),27_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
RET = 12_i8;
_15 = _7;
_4.0 = _4.1 as i128;
match RET {
0 => bb1,
12 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_8 = _15;
_9.2 = [(-9223372036854775808_isize),(-3_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_4.2 = _15;
_4 = (_9.0, _9.1, _7);
_6 = _13;
_1 = _13;
_9 = _4;
_4 = _9;
_4 = (_9.0, _9.1, _1);
_1 = _9.2;
_3 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = _9.2;
_6 = [9223372036854775807_isize,(-9223372036854775808_isize),(-124_isize),9223372036854775807_isize,(-102_isize),(-9223372036854775808_isize)];
_14 = [(-9223372036854775808_isize),9223372036854775807_isize,21_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = _1;
RET = !93_i8;
_2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,21_isize,(-9223372036854775808_isize)];
RET = 19_i8 * (-59_i8);
_16 = 15259380234205943805_u64 as f64;
_12 = _9.1 as i16;
_4 = (_9.0, _9.1, _8);
_9.2 = [(-9_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-117_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_18 = core::ptr::addr_of_mut!(_19);
_19 = [(-438291135_i32),2087711621_i32,1657292882_i32];
_10 = [111_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11 = _8;
_8 = _13;
_4 = _9;
_1 = _7;
Call(_8 = fn11(_3, _9.0, _11, _9, _9, _9.0, _7, _1, _7, _3, _11, _4, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_4 = (_9.0, _9.1, _11);
_9 = (_4.0, _4.1, _8);
_14 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,109_isize];
_6 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),60_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_9.0 = _4.0 + _4.0;
_19 = [(-748392035_i32),(-926612611_i32),2011009260_i32];
_19 = [1389267039_i32,(-751174851_i32),628988961_i32];
RET = !(-41_i8);
_9.1 = _4.1;
_11 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),63_isize,9223372036854775807_isize];
Goto(bb5)
}
bb5 = {
_3 = _1;
_2 = _15;
_23 = _4.0 != _4.0;
RET = (-100_i8) ^ (-66_i8);
_2 = [(-103_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-112_isize),9223372036854775807_isize];
_10 = [(-9223372036854775808_isize),(-3_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-21_isize),9223372036854775807_isize];
RET = 118_i8 | (-90_i8);
_16 = 4_usize as f64;
_4.2 = [(-9223372036854775808_isize),(-3_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_15 = [(-35_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-125_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-6_isize),(-9223372036854775808_isize),9223372036854775807_isize,76_isize];
_24 = -9223372036854775807_isize;
_23 = _9.1;
_10 = _7;
_28 = _24 as f32;
_1 = [_24,_24,_24,_24,_24,_24];
Goto(bb6)
}
bb6 = {
_25 = _5;
_21.fld0 = _9.1;
_11 = _13;
_9.2 = _8;
_10 = [_24,_24,_24,_24,_24,_24];
_29.2 = _16 - _16;
_29.0 = '\u{e5bd7}';
_27.4.0 = -1202792964465171155_i64;
_16 = -_29.2;
_27.2 = RET as i32;
_16 = -_29.2;
_21.fld3 = 39_u8 - 230_u8;
_27.1 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_27.3 = _27.2 as u16;
_27.4 = ((-8120762903573383126_i64), _4.1);
_4.0 = !_9.0;
_27.3 = 32231_u16 >> _9.0;
_29.1 = [_23];
_22 = core::ptr::addr_of_mut!(_28);
_9.2 = [_24,_24,_24,_24,_24,_24];
_7 = [_24,_24,_24,_24,_24,_24];
_4.1 = !_23;
_31 = _9.1;
_30 = (_9.0, _21.fld0, _14);
Call(_29.0 = fn12(_13, _27.3, _8, _8, _30.0, _9), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_10 = [_24,_24,_24,_24,_24,_24];
RET = (-102_i8) & 125_i8;
_27.1 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_15 = [_24,_24,_24,_24,_24,_24];
_14 = [_24,_24,_24,_24,_24,_24];
_20 = _19;
_4 = _30;
_30.0 = _4.0 & _9.0;
_9.0 = !_4.0;
Goto(bb8)
}
bb8 = {
_14 = [_24,_24,_24,_24,_24,_24];
_2 = [_24,_24,_24,_24,_24,_24];
_18 = core::ptr::addr_of_mut!(_20);
_26 = [1302812115902515537449378266354257222_u128,183561826612659990326620312357471661245_u128,189384795627326001576297976177437893943_u128,281839692989318017419911213321156749730_u128,152892711758594700237784343447793303030_u128];
_30.0 = _9.0;
_8 = [_24,_24,_24,_24,_24,_24];
_12 = !24981_i16;
_31 = _4.1 & _4.1;
_21.fld2 = core::ptr::addr_of_mut!(_3);
_23 = _30.0 == _30.0;
_5 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_35 = [16106919214544916976_usize,379316559362623914_usize];
_27.1 = _5;
_19 = (*_18);
_21.fld0 = _23 & _23;
_20 = [_27.2,_27.2,_27.2];
_19 = [_27.2,_27.2,_27.2];
_26 = [51458527187732776576859808070282996745_u128,300110586305629096825424082824422930693_u128,113326626182818552934027537248744740333_u128,126509048704416343552492646977940251676_u128,280463784830961881131900738884432275166_u128];
match _27.4.0 {
0 => bb4,
1 => bb9,
340282366920938463455253844528194828330 => bb11,
_ => bb10
}
}
bb9 = {
_10 = [_24,_24,_24,_24,_24,_24];
RET = (-102_i8) & 125_i8;
_27.1 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_15 = [_24,_24,_24,_24,_24,_24];
_14 = [_24,_24,_24,_24,_24,_24];
_20 = _19;
_4 = _30;
_30.0 = _4.0 & _9.0;
_9.0 = !_4.0;
Goto(bb8)
}
bb10 = {
_3 = _1;
_2 = _15;
_23 = _4.0 != _4.0;
RET = (-100_i8) ^ (-66_i8);
_2 = [(-103_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-112_isize),9223372036854775807_isize];
_10 = [(-9223372036854775808_isize),(-3_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-21_isize),9223372036854775807_isize];
RET = 118_i8 | (-90_i8);
_16 = 4_usize as f64;
_4.2 = [(-9223372036854775808_isize),(-3_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_15 = [(-35_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-125_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-6_isize),(-9223372036854775808_isize),9223372036854775807_isize,76_isize];
_24 = -9223372036854775807_isize;
_23 = _9.1;
_10 = _7;
_28 = _24 as f32;
_1 = [_24,_24,_24,_24,_24,_24];
Goto(bb6)
}
bb11 = {
_28 = 17994465256214216610_u64 as f32;
_25 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_19 = [_27.2,_27.2,_27.2];
_9.0 = -_4.0;
_5 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_36 = (*_22);
_34 = 8257892449401082461_u64;
_30.2 = [_24,_24,_24,_24,_24,_24];
_22 = core::ptr::addr_of_mut!((*_22));
_9 = (_4.0, _21.fld0, _11);
_18 = core::ptr::addr_of_mut!(_19);
_27.0 = !_21.fld0;
_27.1 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_23 = _27.0 & _21.fld0;
_30.1 = _27.3 < _27.3;
_28 = _36;
_27.0 = _21.fld0;
_4 = (_30.0, _9.1, _13);
_9.1 = _23;
_27.4.0 = -378269554815015383_i64;
_29.2 = -_16;
_27.2 = (-1383770696_i32) + 272654807_i32;
_21.fld0 = _27.2 >= _27.2;
_9.1 = !_4.1;
_27.4.1 = !_23;
_37 = _12;
_21.fld3 = 97_u8;
_7 = [_24,_24,_24,_24,_24,_24];
_4.0 = !_9.0;
Goto(bb12)
}
bb12 = {
_21.fld0 = _4.1 >= _27.0;
RET = !(-116_i8);
_13 = [_24,_24,_24,_24,_24,_24];
_27.2 = (-2090486870_i32) ^ 575255601_i32;
_30.2 = [_24,_24,_24,_24,_24,_24];
_29.0 = '\u{3dc17}';
_4.0 = RET as i128;
_27.4.1 = _4.1;
_7 = [_24,_24,_24,_24,_24,_24];
_24 = _27.3 as isize;
_41 = core::ptr::addr_of_mut!(_37);
_40 = 250024903042349290757249557000104715418_u128 as isize;
_3 = _14;
_4.0 = _9.0;
_12 = (*_22) as i16;
_31 = _30.1 ^ _27.0;
_27.1 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_46.fld3 = [_24,_24,_24,_24,_24,_24,_24];
_21.fld2 = core::ptr::addr_of_mut!(_6);
_8 = [_24,_24,_40,_24,_24,_24];
_39 = (*_22);
match _21.fld3 {
97 => bb14,
_ => bb13
}
}
bb13 = {
_28 = 17994465256214216610_u64 as f32;
_25 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_19 = [_27.2,_27.2,_27.2];
_9.0 = -_4.0;
_5 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_36 = (*_22);
_34 = 8257892449401082461_u64;
_30.2 = [_24,_24,_24,_24,_24,_24];
_22 = core::ptr::addr_of_mut!((*_22));
_9 = (_4.0, _21.fld0, _11);
_18 = core::ptr::addr_of_mut!(_19);
_27.0 = !_21.fld0;
_27.1 = [_27.2,_27.2,_27.2,_27.2,_27.2,_27.2,_27.2];
_23 = _27.0 & _21.fld0;
_30.1 = _27.3 < _27.3;
_28 = _36;
_27.0 = _21.fld0;
_4 = (_30.0, _9.1, _13);
_9.1 = _23;
_27.4.0 = -378269554815015383_i64;
_29.2 = -_16;
_27.2 = (-1383770696_i32) + 272654807_i32;
_21.fld0 = _27.2 >= _27.2;
_9.1 = !_4.1;
_27.4.1 = !_23;
_37 = _12;
_21.fld3 = 97_u8;
_7 = [_24,_24,_24,_24,_24,_24];
_4.0 = !_9.0;
Goto(bb12)
}
bb14 = {
_27.4.1 = _31;
_9.0 = _4.0;
_13 = [_24,_24,_24,_24,_24,_24];
_23 = _4.1;
_30 = (_9.0, _27.0, _13);
_46.fld2 = !6432672731304048088_usize;
Goto(bb15)
}
bb15 = {
Call(_51 = dump_var(10_usize, 5_usize, Move(_5), 6_usize, Move(_6), 1_usize, Move(_1), 30_usize, Move(_30)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_51 = dump_var(10_usize, 13_usize, Move(_13), 25_usize, Move(_25), 14_usize, Move(_14), 34_usize, Move(_34)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(10_usize, 3_usize, Move(_3), 27_usize, Move(_27), 19_usize, Move(_19), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_51 = dump_var(10_usize, 31_usize, Move(_31), 11_usize, Move(_11), 52_usize, _52, 52_usize, _52), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [isize; 6],mut _2: i128,mut _3: [isize; 6],mut _4: (i128, bool, [isize; 6]),mut _5: (i128, bool, [isize; 6]),mut _6: i128,mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: (i128, bool, [isize; 6]),mut _13: [isize; 6]) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _14: u8;
let _15: bool;
let _16: *const *mut *mut i16;
let _17: bool;
let _18: u16;
let _19: char;
let _20: i16;
let _21: (i64, bool);
let _22: [u16; 7];
let _23: char;
let _24: [isize; 7];
let _25: Adt48;
let _26: [bool; 1];
let _27: char;
let _28: char;
let _29: ();
let _30: ();
{
_14 = 22_u8 * 136_u8;
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_5 = (_6, _12.1, _8);
_12.0 = !_6;
_4 = (_5.0, _12.1, _7);
_4.1 = !_12.1;
_12.2 = _5.2;
_11 = [9223372036854775807_isize,9223372036854775807_isize,14_isize,9223372036854775807_isize,(-17_isize),(-4_isize)];
_4.1 = _4.0 <= _2;
_4.0 = _5.0;
Goto(bb1)
}
bb1 = {
_8 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_15 = _4.1;
_15 = _4.1;
_5.1 = _4.1;
_14 = !89_u8;
_12.0 = _6 | _2;
_4.1 = _15 & _5.1;
_5.1 = _4.1 ^ _15;
_18 = !27921_u16;
_4.1 = _5.1;
_2 = _5.0;
_15 = _5.1;
_19 = '\u{1c061}';
_12.2 = [9223372036854775807_isize,9223372036854775807_isize,113_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_4.1 = !_5.1;
_4 = (_2, _5.1, _3);
_5.2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-78_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_12 = (_6, _5.1, _3);
_22 = [_18,_18,_18,_18,_18,_18,_18];
_22 = [_18,_18,_18,_18,_18,_18,_18];
_19 = '\u{fbb20}';
_19 = '\u{481c2}';
Goto(bb2)
}
bb2 = {
_4.0 = _6 | _12.0;
RET = _12.2;
_21 = Checked((-1407173506117692206_i64) - (-1260326198265710870_i64));
_8 = [0_isize,62_isize,9223372036854775807_isize,(-89_isize),9223372036854775807_isize,(-22_isize)];
_6 = (-2070067858_i32) as i128;
_21.1 = _5.0 <= _12.0;
_21.1 = !_15;
_21 = (3325934006566528307_i64, _5.1);
_5.0 = _4.0;
_4.0 = _12.0;
_5.1 = !_15;
_20 = !(-30102_i16);
_7 = _3;
_21.1 = _15;
_10 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_26 = [_4.1];
_15 = !_5.1;
_12.1 = !_15;
_24 = [127_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,21_isize];
_27 = _19;
_1 = _4.2;
_18 = !49203_u16;
Goto(bb3)
}
bb3 = {
Call(_29 = dump_var(11_usize, 1_usize, Move(_1), 8_usize, Move(_8), 7_usize, Move(_7), 22_usize, Move(_22)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_29 = dump_var(11_usize, 6_usize, Move(_6), 9_usize, Move(_9), 13_usize, Move(_13), 2_usize, Move(_2)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_29 = dump_var(11_usize, 24_usize, Move(_24), 10_usize, Move(_10), 12_usize, Move(_12), 30_usize, _30), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [isize; 6],mut _2: u16,mut _3: [isize; 6],mut _4: [isize; 6],mut _5: i128,mut _6: (i128, bool, [isize; 6])) -> char {
mir! {
type RET = char;
let _7: *const f64;
let _8: (i64, bool);
let _9: f32;
let _10: (i64, bool);
let _11: [bool; 6];
let _12: f32;
let _13: [u16; 7];
let _14: f64;
let _15: f32;
let _16: *mut u64;
let _17: u64;
let _18: (i64, bool);
let _19: u128;
let _20: Adt59;
let _21: [bool; 1];
let _22: f32;
let _23: u64;
let _24: f64;
let _25: char;
let _26: [usize; 2];
let _27: Adt58;
let _28: [u128; 5];
let _29: *mut *mut i16;
let _30: *const *mut i16;
let _31: isize;
let _32: char;
let _33: u128;
let _34: ();
let _35: ();
{
RET = '\u{6a3b5}';
RET = '\u{23374}';
_6.1 = false;
_2 = 103_i8 as u16;
_1 = [(-113_isize),9223372036854775807_isize,9223372036854775807_isize,106_isize,(-79_isize),28_isize];
_5 = _6.0 & _6.0;
_8.1 = !_6.1;
_8.0 = (-2066982569477397671_i64) + (-2690474549214161068_i64);
_8 = ((-3907419971665968742_i64), _6.1);
_8.0 = (-5565248207290387645_i64);
_8 = Checked(4480576729122124980_i64 - 4879455269481098653_i64);
_5 = _6.0 << _6.0;
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,55_isize,9223372036854775807_isize];
_8.0 = 1321877880585750630_i64;
RET = '\u{ac98d}';
_6.2 = _3;
RET = '\u{a0302}';
RET = '\u{a9cb}';
_6 = (_5, _8.1, _3);
_6.1 = !_8.1;
_6.2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-85_isize),9223372036854775807_isize,122_isize,(-9223372036854775808_isize)];
_6.2 = _3;
RET = '\u{cd5a4}';
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
1321877880585750630 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5 = _6.0 >> _6.0;
_2 = 18388_u16 ^ 45978_u16;
_1 = [9223372036854775807_isize,9223372036854775807_isize,52_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_9 = 1029626898_u32 as f32;
Goto(bb8)
}
bb8 = {
_6.2 = [(-86_isize),47_isize,(-105_isize),(-9223372036854775808_isize),(-39_isize),(-103_isize)];
_8 = (581651607769954310_i64, _6.1);
_6.2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,53_isize,(-9223372036854775808_isize),57_isize];
_6 = (_5, _8.1, _3);
_6 = (_5, _8.1, _3);
_2 = 51340_u16 * 32101_u16;
_10.0 = _8.0 & _8.0;
_6 = (_5, _8.1, _1);
RET = '\u{927f9}';
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-103_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_10 = _8;
RET = '\u{c97b4}';
_13 = [_2,_2,_2,_2,_2,_2,_2];
_6.0 = _5;
_9 = 119_isize as f32;
_8 = (_10.0, _10.1);
_12 = _9 * _9;
_8 = _10;
RET = '\u{5923d}';
_13 = [_2,_2,_2,_2,_2,_2,_2];
_6.0 = _8.0 as i128;
RET = '\u{e8bb3}';
_6.0 = _5;
Call(_13 = fn13(_3, _6, _3, _6.0, _3, _6, _6.1, _6, _6, _6, _5, _3, _6.2, _3, _6, _6), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_14 = 9223372036854775807_isize as f64;
_11 = [_8.1,_10.1,_8.1,_6.1,_8.1,_6.1];
_10.1 = !_8.1;
_6.1 = _10.1;
_15 = -_12;
_2 = RET as u16;
RET = '\u{55eb1}';
_8.0 = _10.0 ^ _10.0;
_10.0 = _8.0;
_2 = 15729_u16 ^ 36607_u16;
_17 = !7197425111998061044_u64;
_12 = 1597814322_u32 as f32;
_7 = core::ptr::addr_of!(_14);
_16 = core::ptr::addr_of_mut!(_17);
_18.1 = _6.1 & _8.1;
_13 = [_2,_2,_2,_2,_2,_2,_2];
_18.0 = !_10.0;
_5 = _6.0;
_10.0 = _8.0;
_7 = core::ptr::addr_of!((*_7));
Goto(bb10)
}
bb10 = {
_19 = 169021317152511578431434136642552955858_u128;
_10.0 = _18.0 ^ _18.0;
Goto(bb11)
}
bb11 = {
_17 = 32031_i16 as u64;
_7 = core::ptr::addr_of!((*_7));
_5 = !_6.0;
RET = '\u{92cf}';
_17 = 857128002563760170_u64;
_8.1 = !_18.1;
_8.1 = !_18.1;
_8 = _18;
_11 = [_6.1,_18.1,_8.1,_18.1,_8.1,_18.1];
_19 = 15078709705931643031601906442404006455_u128 >> _6.0;
_6 = (_5, _10.1, _3);
_21 = [_10.1];
_13 = [_2,_2,_2,_2,_2,_2,_2];
Goto(bb12)
}
bb12 = {
_8.0 = (*_16) as i64;
_23 = _17 & (*_16);
_8 = _18;
_17 = _14 as u64;
_3 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),107_isize,55_isize,45_isize];
_17 = !_23;
_18.1 = _6.1 & _10.1;
_24 = _2 as f64;
_21 = [_18.1];
_2 = 4064_u16 ^ 27818_u16;
_22 = 2_usize as f32;
_25 = RET;
_27.fld3 = (*_16) << _5;
_15 = _22 - _22;
_23 = _27.fld3 & (*_16);
_10.1 = _23 != _27.fld3;
_8 = Checked(_10.0 + _10.0);
_12 = _15;
_8 = (_10.0, _10.1);
_28 = [_19,_19,_19,_19,_19];
_19 = 148244250447513966750279382705030915637_u128;
_28 = [_19,_19,_19,_19,_19];
_3 = _6.2;
match _19 {
0 => bb8,
1 => bb13,
2 => bb14,
3 => bb15,
148244250447513966750279382705030915637 => bb17,
_ => bb16
}
}
bb13 = {
_17 = 32031_i16 as u64;
_7 = core::ptr::addr_of!((*_7));
_5 = !_6.0;
RET = '\u{92cf}';
_17 = 857128002563760170_u64;
_8.1 = !_18.1;
_8.1 = !_18.1;
_8 = _18;
_11 = [_6.1,_18.1,_8.1,_18.1,_8.1,_18.1];
_19 = 15078709705931643031601906442404006455_u128 >> _6.0;
_6 = (_5, _10.1, _3);
_21 = [_10.1];
_13 = [_2,_2,_2,_2,_2,_2,_2];
Goto(bb12)
}
bb14 = {
_19 = 169021317152511578431434136642552955858_u128;
_10.0 = _18.0 ^ _18.0;
Goto(bb11)
}
bb15 = {
_5 = _6.0 >> _6.0;
_2 = 18388_u16 ^ 45978_u16;
_1 = [9223372036854775807_isize,9223372036854775807_isize,52_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_9 = 1029626898_u32 as f32;
Goto(bb8)
}
bb16 = {
_6.2 = [(-86_isize),47_isize,(-105_isize),(-9223372036854775808_isize),(-39_isize),(-103_isize)];
_8 = (581651607769954310_i64, _6.1);
_6.2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,53_isize,(-9223372036854775808_isize),57_isize];
_6 = (_5, _8.1, _3);
_6 = (_5, _8.1, _3);
_2 = 51340_u16 * 32101_u16;
_10.0 = _8.0 & _8.0;
_6 = (_5, _8.1, _1);
RET = '\u{927f9}';
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-103_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_10 = _8;
RET = '\u{c97b4}';
_13 = [_2,_2,_2,_2,_2,_2,_2];
_6.0 = _5;
_9 = 119_isize as f32;
_8 = (_10.0, _10.1);
_12 = _9 * _9;
_8 = _10;
RET = '\u{5923d}';
_13 = [_2,_2,_2,_2,_2,_2,_2];
_6.0 = _8.0 as i128;
RET = '\u{e8bb3}';
_6.0 = _5;
Call(_13 = fn13(_3, _6, _3, _6.0, _3, _6, _6.1, _6, _6, _6, _5, _3, _6.2, _3, _6, _6), ReturnTo(bb9), UnwindUnreachable())
}
bb17 = {
_1 = _3;
_26 = [5_usize,7_usize];
_23 = _27.fld3 << _6.0;
_16 = core::ptr::addr_of_mut!(_17);
_14 = _24;
_18.1 = _10.1;
_20 = Adt59::Variant2 { fld0: (-22901_i16) };
Goto(bb18)
}
bb18 = {
Call(_34 = dump_var(12_usize, 28_usize, Move(_28), 10_usize, Move(_10), 3_usize, Move(_3), 21_usize, Move(_21)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_34 = dump_var(12_usize, 6_usize, Move(_6), 11_usize, Move(_11), 13_usize, Move(_13), 25_usize, Move(_25)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_34 = dump_var(12_usize, 18_usize, Move(_18), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [isize; 6],mut _2: (i128, bool, [isize; 6]),mut _3: [isize; 6],mut _4: i128,mut _5: [isize; 6],mut _6: (i128, bool, [isize; 6]),mut _7: bool,mut _8: (i128, bool, [isize; 6]),mut _9: (i128, bool, [isize; 6]),mut _10: (i128, bool, [isize; 6]),mut _11: i128,mut _12: [isize; 6],mut _13: [isize; 6],mut _14: [isize; 6],mut _15: (i128, bool, [isize; 6]),mut _16: (i128, bool, [isize; 6])) -> [u16; 7] {
mir! {
type RET = [u16; 7];
let _17: char;
let _18: [i32; 7];
let _19: Adt49;
let _20: char;
let _21: *mut [i32; 3];
let _22: i64;
let _23: (*mut i16, u32, i16);
let _24: *mut u64;
let _25: [isize; 7];
let _26: [u16; 7];
let _27: u64;
let _28: f32;
let _29: f32;
let _30: [bool; 6];
let _31: (bool, [i32; 7], i32, u16, (i64, bool));
let _32: u8;
let _33: isize;
let _34: [bool; 6];
let _35: isize;
let _36: Adt55;
let _37: Adt58;
let _38: [bool; 6];
let _39: [isize; 6];
let _40: (i128, bool, [isize; 6]);
let _41: u64;
let _42: [bool; 1];
let _43: ();
let _44: ();
{
_2 = (_9.0, _7, _14);
_16 = (_2.0, _15.1, _12);
_16.1 = !_10.1;
_3 = _16.2;
_3 = _5;
_8.1 = _10.0 < _16.0;
_10 = _8;
_8.2 = _3;
_13 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-120_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11 = -_10.0;
_6.0 = -_16.0;
RET = [31840_u16,54616_u16,62168_u16,56402_u16,13351_u16,44252_u16,51446_u16];
_17 = '\u{17804}';
_10.2 = _2.2;
_16.1 = _8.1;
_6.1 = !_8.1;
_15.1 = !_16.1;
_1 = _14;
_15.0 = -_16.0;
_9.0 = _6.0;
Goto(bb1)
}
bb1 = {
_6 = (_10.0, _15.1, _12);
Call(_19 = fn14(_10, _12, _12, _16, _2.2, _15.0, _15, _15, _8.2, _15.0, _8, _2, _8.2, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_16.1 = _10.1;
_18 = [1281749852_i32,(-206145365_i32),1255592777_i32,1667130816_i32,2049984761_i32,1213998766_i32,1231397869_i32];
Goto(bb3)
}
bb3 = {
_10 = _6;
_9.1 = _8.1 ^ _16.1;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),27_isize];
_6.1 = !_16.1;
_22 = _10.1 as i64;
_8 = (_16.0, _10.1, _6.2);
_18 = [(-815540867_i32),(-1432893060_i32),(-1428185209_i32),(-971116649_i32),992139151_i32,2146047466_i32,1420830129_i32];
_12 = [(-47_isize),9223372036854775807_isize,9223372036854775807_isize,(-99_isize),(-9223372036854775808_isize),45_isize];
_23.1 = !1591785525_u32;
_6 = (_10.0, _9.1, _8.2);
_15 = (_11, _6.1, _9.2);
_16 = _9;
_5 = _6.2;
_10.0 = !_6.0;
_9 = (_8.0, _10.1, _2.2);
_16 = (_2.0, _10.1, _5);
Goto(bb4)
}
bb4 = {
_2.0 = _15.0 & _8.0;
_16.0 = !_8.0;
_6.2 = [(-27_isize),9223372036854775807_isize,122_isize,20_isize,46_isize,(-9223372036854775808_isize)];
Goto(bb5)
}
bb5 = {
_9.1 = !_8.1;
_14 = _10.2;
_24 = core::ptr::addr_of_mut!(_27);
_6.1 = _8.0 != _16.0;
_10 = (_4, _16.1, _1);
Goto(bb6)
}
bb6 = {
_29 = _11 as f32;
_8.0 = -_6.0;
_16 = (_2.0, _19.fld0, _14);
_7 = _15.1 != _19.fld0;
_8.2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_15.0 = _10.0 >> _9.0;
_2.1 = _19.fld0;
_8.1 = !_2.1;
_26 = RET;
_15.1 = _4 == _10.0;
_2 = (_4, _19.fld0, _3);
_27 = 359016160780194082_usize as u64;
_31.2 = (-503448072_i32) ^ 315368137_i32;
Goto(bb7)
}
bb7 = {
_20 = _17;
_25 = [(-68_isize),(-83_isize),(-117_isize),(-127_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_31.0 = _10.1;
_23.1 = 1724380171_u32 | 354265829_u32;
_31.4.0 = _22 * _22;
_15.2 = [70_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_31.1 = [_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2];
_5 = [111_isize,71_isize,(-9223372036854775808_isize),99_isize,9223372036854775807_isize,9223372036854775807_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_28 = -_29;
_9.2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-15_isize),9223372036854775807_isize,9223372036854775807_isize];
_8.2 = [(-9223372036854775808_isize),(-107_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,68_isize,(-22_isize),42_isize,9223372036854775807_isize];
RET = [18235_u16,56081_u16,42591_u16,55583_u16,10748_u16,49169_u16,30310_u16];
_34 = [_6.1,_9.1,_16.1,_19.fld0,_2.1,_9.1];
_10 = _15;
_23.2 = !(-6470_i16);
Call(_23.1 = core::intrinsics::transmute(_31.2), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = _26;
_19.fld2 = core::ptr::addr_of_mut!(_2.2);
_31.3 = 21740_u16 & 63616_u16;
_4 = _31.4.0 as i128;
_31.3 = 9024_u16;
_9.1 = !_16.1;
match _31.3 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb6,
5 => bb9,
6 => bb10,
9024 => bb12,
_ => bb11
}
}
bb9 = {
_20 = _17;
_25 = [(-68_isize),(-83_isize),(-117_isize),(-127_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_31.0 = _10.1;
_23.1 = 1724380171_u32 | 354265829_u32;
_31.4.0 = _22 * _22;
_15.2 = [70_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_31.1 = [_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2];
_5 = [111_isize,71_isize,(-9223372036854775808_isize),99_isize,9223372036854775807_isize,9223372036854775807_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_28 = -_29;
_9.2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-15_isize),9223372036854775807_isize,9223372036854775807_isize];
_8.2 = [(-9223372036854775808_isize),(-107_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,68_isize,(-22_isize),42_isize,9223372036854775807_isize];
RET = [18235_u16,56081_u16,42591_u16,55583_u16,10748_u16,49169_u16,30310_u16];
_34 = [_6.1,_9.1,_16.1,_19.fld0,_2.1,_9.1];
_10 = _15;
_23.2 = !(-6470_i16);
Call(_23.1 = core::intrinsics::transmute(_31.2), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_10 = _6;
_9.1 = _8.1 ^ _16.1;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),27_isize];
_6.1 = !_16.1;
_22 = _10.1 as i64;
_8 = (_16.0, _10.1, _6.2);
_18 = [(-815540867_i32),(-1432893060_i32),(-1428185209_i32),(-971116649_i32),992139151_i32,2146047466_i32,1420830129_i32];
_12 = [(-47_isize),9223372036854775807_isize,9223372036854775807_isize,(-99_isize),(-9223372036854775808_isize),45_isize];
_23.1 = !1591785525_u32;
_6 = (_10.0, _9.1, _8.2);
_15 = (_11, _6.1, _9.2);
_16 = _9;
_5 = _6.2;
_10.0 = !_6.0;
_9 = (_8.0, _10.1, _2.2);
_16 = (_2.0, _10.1, _5);
Goto(bb4)
}
bb11 = {
_6 = (_10.0, _15.1, _12);
Call(_19 = fn14(_10, _12, _12, _16, _2.2, _15.0, _15, _15, _8.2, _15.0, _8, _2, _8.2, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_36.fld0 = [_2.1];
_31.4.1 = !_15.1;
_18 = _31.1;
_22 = _31.4.0 ^ _31.4.0;
_34 = [_6.1,_31.4.1,_9.1,_2.1,_15.1,_15.1];
match _31.3 {
0 => bb8,
1 => bb2,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
9024 => bb19,
_ => bb18
}
}
bb13 = {
_2.0 = _15.0 & _8.0;
_16.0 = !_8.0;
_6.2 = [(-27_isize),9223372036854775807_isize,122_isize,20_isize,46_isize,(-9223372036854775808_isize)];
Goto(bb5)
}
bb14 = {
_10 = _6;
_9.1 = _8.1 ^ _16.1;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),27_isize];
_6.1 = !_16.1;
_22 = _10.1 as i64;
_8 = (_16.0, _10.1, _6.2);
_18 = [(-815540867_i32),(-1432893060_i32),(-1428185209_i32),(-971116649_i32),992139151_i32,2146047466_i32,1420830129_i32];
_12 = [(-47_isize),9223372036854775807_isize,9223372036854775807_isize,(-99_isize),(-9223372036854775808_isize),45_isize];
_23.1 = !1591785525_u32;
_6 = (_10.0, _9.1, _8.2);
_15 = (_11, _6.1, _9.2);
_16 = _9;
_5 = _6.2;
_10.0 = !_6.0;
_9 = (_8.0, _10.1, _2.2);
_16 = (_2.0, _10.1, _5);
Goto(bb4)
}
bb15 = {
_20 = _17;
_25 = [(-68_isize),(-83_isize),(-117_isize),(-127_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_31.0 = _10.1;
_23.1 = 1724380171_u32 | 354265829_u32;
_31.4.0 = _22 * _22;
_15.2 = [70_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_31.1 = [_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2];
_5 = [111_isize,71_isize,(-9223372036854775808_isize),99_isize,9223372036854775807_isize,9223372036854775807_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_28 = -_29;
_9.2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-15_isize),9223372036854775807_isize,9223372036854775807_isize];
_8.2 = [(-9223372036854775808_isize),(-107_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,68_isize,(-22_isize),42_isize,9223372036854775807_isize];
RET = [18235_u16,56081_u16,42591_u16,55583_u16,10748_u16,49169_u16,30310_u16];
_34 = [_6.1,_9.1,_16.1,_19.fld0,_2.1,_9.1];
_10 = _15;
_23.2 = !(-6470_i16);
Call(_23.1 = core::intrinsics::transmute(_31.2), ReturnTo(bb8), UnwindUnreachable())
}
bb16 = {
_9.1 = !_8.1;
_14 = _10.2;
_24 = core::ptr::addr_of_mut!(_27);
_6.1 = _8.0 != _16.0;
_10 = (_4, _16.1, _1);
Goto(bb6)
}
bb17 = {
_6 = (_10.0, _15.1, _12);
Call(_19 = fn14(_10, _12, _12, _16, _2.2, _15.0, _15, _15, _8.2, _15.0, _8, _2, _8.2, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_29 = _11 as f32;
_8.0 = -_6.0;
_16 = (_2.0, _19.fld0, _14);
_7 = _15.1 != _19.fld0;
_8.2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_15.0 = _10.0 >> _9.0;
_2.1 = _19.fld0;
_8.1 = !_2.1;
_26 = RET;
_15.1 = _4 == _10.0;
_2 = (_4, _19.fld0, _3);
_27 = 359016160780194082_usize as u64;
_31.2 = (-503448072_i32) ^ 315368137_i32;
Goto(bb7)
}
bb19 = {
_8.1 = !_19.fld0;
_23.0 = core::ptr::addr_of_mut!(_23.2);
_31.0 = !_16.1;
_17 = _20;
_32 = _19.fld3 - _19.fld3;
_16.2 = _2.2;
_9.1 = _2.1 < _16.1;
_17 = _20;
_8.0 = _6.0 ^ _11;
_9.2 = _3;
_36.fld2 = 7_usize;
_31.1 = _18;
_35 = !9223372036854775807_isize;
_8.1 = !_2.1;
_40.1 = !_2.1;
_23.2 = (-3944_i16) | (-19420_i16);
RET = [_31.3,_31.3,_31.3,_31.3,_31.3,_31.3,_31.3];
_11 = !_2.0;
_10.0 = _8.0;
_1 = _9.2;
Goto(bb20)
}
bb20 = {
Call(_43 = dump_var(13_usize, 13_usize, Move(_13), 18_usize, Move(_18), 25_usize, Move(_25), 16_usize, Move(_16)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_43 = dump_var(13_usize, 35_usize, Move(_35), 34_usize, Move(_34), 27_usize, Move(_27), 5_usize, Move(_5)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_43 = dump_var(13_usize, 31_usize, Move(_31), 11_usize, Move(_11), 4_usize, Move(_4), 15_usize, Move(_15)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_43 = dump_var(13_usize, 17_usize, Move(_17), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: (i128, bool, [isize; 6]),mut _2: [isize; 6],mut _3: [isize; 6],mut _4: (i128, bool, [isize; 6]),mut _5: [isize; 6],mut _6: i128,mut _7: (i128, bool, [isize; 6]),mut _8: (i128, bool, [isize; 6]),mut _9: [isize; 6],mut _10: i128,mut _11: (i128, bool, [isize; 6]),mut _12: (i128, bool, [isize; 6]),mut _13: [isize; 6],mut _14: i128) -> Adt49 {
mir! {
type RET = Adt49;
let _15: *const f64;
let _16: isize;
let _17: f32;
let _18: f32;
let _19: u128;
let _20: [isize; 6];
let _21: [i32; 3];
let _22: [u16; 7];
let _23: [i32; 7];
let _24: (i64, bool);
let _25: Adt49;
let _26: *const *mut *mut i16;
let _27: u32;
let _28: isize;
let _29: [u128; 5];
let _30: isize;
let _31: isize;
let _32: [u16; 7];
let _33: [i32; 3];
let _34: [i32; 7];
let _35: [u128; 5];
let _36: isize;
let _37: usize;
let _38: i128;
let _39: f64;
let _40: f32;
let _41: [bool; 1];
let _42: isize;
let _43: i16;
let _44: *mut f32;
let _45: i8;
let _46: (char, [bool; 1], f64);
let _47: [isize; 7];
let _48: i64;
let _49: i8;
let _50: isize;
let _51: Adt46;
let _52: i32;
let _53: [i32; 7];
let _54: isize;
let _55: u8;
let _56: (*mut i16, u32, i16);
let _57: Adt56;
let _58: (i128, bool, [isize; 6]);
let _59: *const *mut i16;
let _60: [i32; 7];
let _61: (i128, bool, [isize; 6]);
let _62: u128;
let _63: *const *mut i16;
let _64: [i32; 3];
let _65: f32;
let _66: [i32; 7];
let _67: ();
let _68: ();
{
RET.fld0 = _1.1;
RET.fld2 = core::ptr::addr_of_mut!(_11.2);
RET.fld3 = !1_u8;
_1.2 = _9;
_3 = [(-50_isize),(-9223372036854775808_isize),50_isize,64_isize,(-9223372036854775808_isize),15_isize];
_11.1 = !_8.1;
_12.2 = [(-9223372036854775808_isize),111_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_12.1 = !_7.1;
RET.fld2 = core::ptr::addr_of_mut!(_12.2);
_12.2 = [(-90_isize),(-9223372036854775808_isize),(-41_isize),76_isize,9223372036854775807_isize,9223372036854775807_isize];
Goto(bb1)
}
bb1 = {
_1.0 = -_8.0;
_12.0 = _4.0;
_11.0 = !_1.0;
_13 = [9223372036854775807_isize,(-2_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_8.2 = [(-9223372036854775808_isize),(-43_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,37_isize];
RET.fld2 = core::ptr::addr_of_mut!(_4.2);
_1.0 = !_12.0;
_12.0 = _8.0 ^ _1.0;
_8 = _12;
_4 = (_14, _12.1, _2);
_9 = [(-3_isize),9223372036854775807_isize,9223372036854775807_isize,(-124_isize),47_isize,(-127_isize)];
_12 = (_14, RET.fld0, _5);
RET.fld3 = 931061749_i32 as u8;
Goto(bb2)
}
bb2 = {
_1.1 = _7.1;
_4.1 = RET.fld0;
_12.2 = [49_isize,9223372036854775807_isize,9223372036854775807_isize,9_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = (_12.0, _4.1, _4.2);
_13 = [(-23_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-18_isize),(-9223372036854775808_isize)];
_12 = (_7.0, _11.1, _2);
_18 = 2727173171_u32 as f32;
_12.2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_8 = (_6, _4.1, _11.2);
_18 = 8140396974318910357_u64 as f32;
_12.2 = _1.2;
RET.fld3 = _7.1 as u8;
RET.fld3 = '\u{107cf4}' as u8;
_16 = 5_usize as isize;
_8 = (_14, _7.1, _4.2);
_19 = 235474851128029353171866014451931489291_u128 - 313522946443076984173943090223150314185_u128;
_11 = (_6, _1.1, _5);
_7.2 = [_16,_16,_16,_16,_16,_16];
_1.2 = _11.2;
_5 = [_16,_16,_16,_16,_16,_16];
_21 = [1438186983_i32,(-183209220_i32),1646632505_i32];
_12.0 = RET.fld3 as i128;
_3 = [_16,_16,_16,_16,_16,_16];
Call(_20 = fn15(_12, _11.2, _4, _11, _11.1, _14, _10, _1.2, _1, _9), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_19 = _14 as u128;
RET.fld3 = 245_u8;
_12.2 = _8.2;
RET.fld0 = _11.1 | _8.1;
_11.2 = _4.2;
RET.fld3 = '\u{2dd97}' as u8;
_7.1 = _8.1 <= _12.1;
_4.2 = _12.2;
_1.1 = !_8.1;
_25.fld0 = _12.1 >= _7.1;
_24 = Checked(1978342553578295283_i64 * 7005949264743323093_i64);
_27 = 2134667307_u32 | 1516737005_u32;
_3 = [_16,_16,_16,_16,_16,_16];
_25.fld3 = RET.fld3;
_7.1 = _25.fld0;
_10 = RET.fld3 as i128;
RET.fld0 = _11.0 != _8.0;
Goto(bb4)
}
bb4 = {
_24.1 = !RET.fld0;
_7.0 = !_8.0;
_1.0 = 4766607152003132820_usize as i128;
RET.fld2 = core::ptr::addr_of_mut!(_20);
_24.0 = _18 as i64;
_7.1 = _4.1;
_9 = [_16,_16,_16,_16,_16,_16];
_8 = _11;
_11.0 = _7.0;
RET.fld3 = _16 as u8;
_30 = -_16;
_22 = [42580_u16,54594_u16,43322_u16,5830_u16,22857_u16,14811_u16,30315_u16];
_24 = ((-7316295184089525768_i64), _12.1);
_23 = [(-1213538906_i32),1043945044_i32,(-497050271_i32),1550066666_i32,(-165692137_i32),(-482256742_i32),1892247745_i32];
_7.1 = !_24.1;
_30 = _16;
_12 = (_11.0, RET.fld0, _20);
_1.1 = !RET.fld0;
Goto(bb5)
}
bb5 = {
_4.1 = _24.1 & _1.1;
_29 = [_19,_19,_19,_19,_19];
_3 = _2;
_17 = (-11363_i16) as f32;
_31 = _30;
_28 = _31;
_28 = 13588230134781295670_u64 as isize;
_11 = (_8.0, _24.1, _4.2);
_25.fld3 = 8_i8 as u8;
_29 = [_19,_19,_19,_19,_19];
_7.2 = _1.2;
match _24.0 {
0 => bb3,
1 => bb6,
340282366920938463456058312247678685688 => bb8,
_ => bb7
}
}
bb6 = {
_24.1 = !RET.fld0;
_7.0 = !_8.0;
_1.0 = 4766607152003132820_usize as i128;
RET.fld2 = core::ptr::addr_of_mut!(_20);
_24.0 = _18 as i64;
_7.1 = _4.1;
_9 = [_16,_16,_16,_16,_16,_16];
_8 = _11;
_11.0 = _7.0;
RET.fld3 = _16 as u8;
_30 = -_16;
_22 = [42580_u16,54594_u16,43322_u16,5830_u16,22857_u16,14811_u16,30315_u16];
_24 = ((-7316295184089525768_i64), _12.1);
_23 = [(-1213538906_i32),1043945044_i32,(-497050271_i32),1550066666_i32,(-165692137_i32),(-482256742_i32),1892247745_i32];
_7.1 = !_24.1;
_30 = _16;
_12 = (_11.0, RET.fld0, _20);
_1.1 = !RET.fld0;
Goto(bb5)
}
bb7 = {
_1.0 = -_8.0;
_12.0 = _4.0;
_11.0 = !_1.0;
_13 = [9223372036854775807_isize,(-2_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_8.2 = [(-9223372036854775808_isize),(-43_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,37_isize];
RET.fld2 = core::ptr::addr_of_mut!(_4.2);
_1.0 = !_12.0;
_12.0 = _8.0 ^ _1.0;
_8 = _12;
_4 = (_14, _12.1, _2);
_9 = [(-3_isize),9223372036854775807_isize,9223372036854775807_isize,(-124_isize),47_isize,(-127_isize)];
_12 = (_14, RET.fld0, _5);
RET.fld3 = 931061749_i32 as u8;
Goto(bb2)
}
bb8 = {
_28 = '\u{9b889}' as isize;
_12.2 = _3;
_6 = _8.0;
_22 = [22280_u16,40671_u16,13834_u16,36329_u16,19662_u16,2661_u16,20833_u16];
_13 = [_28,_28,_16,_30,_30,_30];
_11.2 = [_28,_28,_28,_30,_28,_28];
_11.2 = _4.2;
Goto(bb9)
}
bb9 = {
_24.1 = !RET.fld0;
_32 = [27671_u16,38101_u16,60328_u16,10392_u16,47838_u16,15131_u16,27610_u16];
_8 = _11;
_2 = [_16,_30,_31,_28,_28,_28];
_20 = [_31,_30,_30,_30,_31,_30];
_3 = [_16,_28,_30,_16,_30,_28];
_12.1 = !_7.1;
_11.1 = !_24.1;
_10 = !_7.0;
_30 = _16 >> _7.0;
_8 = (_14, _12.1, _4.2);
Goto(bb10)
}
bb10 = {
_29 = [_19,_19,_19,_19,_19];
RET.fld3 = !_25.fld3;
_23 = [(-1649482503_i32),(-1670856445_i32),(-78810545_i32),(-1202412305_i32),1623725278_i32,1934360439_i32,144427722_i32];
_33 = _21;
_24.0 = 8824010800282033908_i64 + (-4878163805888994283_i64);
_24.0 = 10777106481743973987_u64 as i64;
_32 = [28859_u16,50385_u16,51988_u16,28625_u16,31971_u16,16717_u16,22082_u16];
_29 = [_19,_19,_19,_19,_19];
Goto(bb11)
}
bb11 = {
_8.0 = _7.0 & _14;
_19 = 99138839647429199007117888961091597771_u128 - 309087925513166961025989420219775109230_u128;
_7.0 = !_14;
_28 = _19 as isize;
_32 = _22;
_2 = _1.2;
_22 = [57703_u16,34906_u16,8059_u16,49318_u16,65273_u16,2874_u16,31061_u16];
_28 = _31;
_25.fld3 = !RET.fld3;
_3 = _12.2;
_36 = _28 * _30;
_20 = _7.2;
_8 = _4;
_24 = (94793804749384733_i64, _1.1);
_12 = (_11.0, _8.1, _3);
_21 = [(-584565550_i32),209675414_i32,(-122333828_i32)];
_1.2 = [_30,_36,_36,_36,_30,_36];
_2 = [_30,_36,_36,_36,_30,_36];
_1 = _12;
_23 = [974482072_i32,(-798591940_i32),799667046_i32,(-955848385_i32),2144309026_i32,(-2053159074_i32),(-866791257_i32)];
_12.2 = _2;
_8.0 = _4.0;
_9 = _4.2;
_27 = 2509321866_u32 ^ 3286866980_u32;
_25.fld0 = !_8.1;
Goto(bb12)
}
bb12 = {
RET.fld0 = _12.1;
Goto(bb13)
}
bb13 = {
_8.0 = _36 as i128;
_1.1 = _11.0 >= _1.0;
_40 = _18 + _18;
_7.0 = _10 | _14;
_36 = 9889652814804943008_usize as isize;
_19 = 270219351681002474415160569969946610934_u128;
_10 = _11.0 - _7.0;
_38 = _4.0 ^ _4.0;
_36 = _19 as isize;
RET.fld0 = !_24.1;
_35 = _29;
_25.fld3 = RET.fld3;
_9 = _11.2;
_7.0 = _10;
_7.0 = _30 as i128;
_10 = _4.0;
_41 = [_11.1];
_34 = _23;
_29 = [_19,_19,_19,_19,_19];
_27 = 2424823055_u32;
_7.2 = [_30,_30,_30,_30,_30,_30];
_41 = [_4.1];
_1.0 = !_11.0;
_39 = _27 as f64;
_42 = _30;
_34 = [(-666693432_i32),492724317_i32,(-2136086856_i32),(-289505221_i32),(-1574832226_i32),1025542108_i32,(-1455017368_i32)];
_33 = _21;
Goto(bb14)
}
bb14 = {
_15 = core::ptr::addr_of!(_39);
_1.0 = -_10;
_32 = [64502_u16,40614_u16,60582_u16,8875_u16,12312_u16,23298_u16,53780_u16];
_4.1 = !_7.1;
_25.fld0 = _7.0 <= _11.0;
_43 = (-11468_i16) - (-1724_i16);
RET.fld0 = !_1.1;
_40 = _17;
_37 = _43 as usize;
_4 = (_1.0, RET.fld0, _8.2);
_24.0 = 1855571315102495277_i64 & 1906736054182814473_i64;
_1 = (_10, RET.fld0, _12.2);
_37 = 4614207590064856489_usize;
_25.fld2 = core::ptr::addr_of_mut!(_4.2);
_3 = [_42,_42,_30,_30,_30,_42];
RET.fld3 = _25.fld3 >> _4.0;
_19 = _39 as u128;
_22 = _32;
_12.2 = [_30,_42,_16,_30,_30,_30];
_41 = [_24.1];
_46.0 = '\u{5418f}';
_9 = [_30,_30,_30,_30,_30,_42];
_12.0 = _27 as i128;
_4.1 = _30 >= _30;
_41 = [_1.1];
Goto(bb15)
}
bb15 = {
_3 = _4.2;
_11.1 = _7.0 < _8.0;
_46.2 = (*_15) + (*_15);
RET.fld0 = _11.1;
_33 = [(-1703768115_i32),(-1059129705_i32),(-1345252175_i32)];
_10 = !_14;
_10 = !_1.0;
match _27 {
0 => bb14,
2424823055 => bb16,
_ => bb2
}
}
bb16 = {
_36 = _19 as isize;
Goto(bb17)
}
bb17 = {
_44 = core::ptr::addr_of_mut!(_17);
_45 = _1.0 as i8;
_36 = _42 + _28;
_13 = [_36,_36,_42,_42,_30,_36];
_43 = 15252_i16 | 22932_i16;
_41 = [_7.1];
_24.1 = !_12.1;
_50 = -_30;
_12.0 = _38 | _1.0;
_1.1 = RET.fld0 < _25.fld0;
_12.2 = [_50,_42,_50,_42,_50,_36];
RET.fld3 = !_25.fld3;
_21 = [1278252965_i32,666307921_i32,1175182344_i32];
_57.fld2 = -_30;
_57.fld0.fld0 = [_12.1];
_57.fld5 = 1378089556_i32;
_56.2 = _8.1 as i16;
_20 = _8.2;
match _37 {
4614207590064856489 => bb19,
_ => bb18
}
}
bb18 = {
_3 = _4.2;
_11.1 = _7.0 < _8.0;
_46.2 = (*_15) + (*_15);
RET.fld0 = _11.1;
_33 = [(-1703768115_i32),(-1059129705_i32),(-1345252175_i32)];
_10 = !_14;
_10 = !_1.0;
match _27 {
0 => bb14,
2424823055 => bb16,
_ => bb2
}
}
bb19 = {
_53 = [_57.fld5,_57.fld5,_57.fld5,_57.fld5,_57.fld5,_57.fld5,_57.fld5];
_3 = _8.2;
_57.fld5 = 739453814_i32;
_11.0 = !_38;
_7.2 = [_36,_57.fld2,_42,_30,_30,_36];
_10 = -_38;
_12.0 = _8.1 as i128;
_30 = 22122_u16 as isize;
_58 = (_6, _25.fld0, _4.2);
_57.fld0.fld0 = _41;
Call(_25 = fn16(_7, _1.2, _20, _42, _11.0, _11, _14, _35, _2, _8.2, _7.2, _2, _11), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
_28 = _50;
_61.2 = [_36,_28,_42,_57.fld2,_57.fld2,_42];
_57.fld6 = _2;
_46 = ('\u{16a74}', _57.fld0.fld0, _39);
_11 = _12;
_24.1 = _1.1 & RET.fld0;
_12.0 = !_58.0;
RET.fld2 = core::ptr::addr_of_mut!(_5);
_49 = _37 as i8;
RET = _25;
_46 = ('\u{fc111}', _41, (*_15));
_26 = core::ptr::addr_of!(_57.fld4);
_30 = _28;
_60 = [_57.fld5,_57.fld5,_57.fld5,_57.fld5,_57.fld5,_57.fld5,_57.fld5];
_21 = [_57.fld5,_57.fld5,_57.fld5];
_64 = [_57.fld5,_57.fld5,_57.fld5];
_57.fld4 = core::ptr::addr_of_mut!(_56.0);
_44 = core::ptr::addr_of_mut!(_65);
_11.1 = !_4.1;
_42 = _36;
_4 = (_10, _7.1, _7.2);
Goto(bb21)
}
bb21 = {
Call(_67 = dump_var(14_usize, 41_usize, Move(_41), 50_usize, Move(_50), 13_usize, Move(_13), 19_usize, Move(_19)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_67 = dump_var(14_usize, 10_usize, Move(_10), 1_usize, Move(_1), 12_usize, Move(_12), 16_usize, Move(_16)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_67 = dump_var(14_usize, 49_usize, Move(_49), 7_usize, Move(_7), 3_usize, Move(_3), 27_usize, Move(_27)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_67 = dump_var(14_usize, 21_usize, Move(_21), 64_usize, Move(_64), 5_usize, Move(_5), 34_usize, Move(_34)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_67 = dump_var(14_usize, 35_usize, Move(_35), 38_usize, Move(_38), 37_usize, Move(_37), 53_usize, Move(_53)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_67 = dump_var(14_usize, 43_usize, Move(_43), 68_usize, _68, 68_usize, _68, 68_usize, _68), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: (i128, bool, [isize; 6]),mut _2: [isize; 6],mut _3: (i128, bool, [isize; 6]),mut _4: (i128, bool, [isize; 6]),mut _5: bool,mut _6: i128,mut _7: i128,mut _8: [isize; 6],mut _9: (i128, bool, [isize; 6]),mut _10: [isize; 6]) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _11: isize;
let _12: [u16; 7];
let _13: (*mut i16, u32, i16);
let _14: u32;
let _15: i8;
let _16: f64;
let _17: [bool; 1];
let _18: i64;
let _19: ();
let _20: ();
{
_9.0 = 17175170498561733324_u64 as i128;
_9.1 = !_1.1;
_9.2 = [9223372036854775807_isize,(-100_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_3 = _9;
RET = _4.2;
_9.0 = _7;
_5 = _6 <= _7;
_8 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,78_isize,(-9223372036854775808_isize)];
_1.1 = _9.1;
RET = _2;
_4 = _1;
_3.2 = _1.2;
_3 = _4;
_9.0 = _1.0 + _7;
RET = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-33_isize)];
_8 = [121_isize,9223372036854775807_isize,56_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5 = _1.1;
_10 = [116_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-68_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_6 = _7 | _7;
_7 = !_6;
_1.1 = _5 | _9.1;
_1.2 = _4.2;
Goto(bb1)
}
bb1 = {
_3.0 = _9.0 >> _6;
_4.1 = !_3.1;
_9.2 = [94_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-115_isize)];
_1.2 = [(-27_isize),9223372036854775807_isize,(-47_isize),(-9223372036854775808_isize),40_isize,(-92_isize)];
_3 = _4;
_3.1 = !_9.1;
_11 = 9223372036854775807_isize - (-9223372036854775808_isize);
_9.2 = _3.2;
_1.1 = _4.1 & _5;
_1.1 = _9.0 < _7;
RET = _3.2;
_9.2 = _3.2;
_13.1 = 1919681045_u32;
_4 = _9;
_4.0 = _7;
_4.2 = _3.2;
_11 = 98_isize;
_14 = !_13.1;
_7 = -_6;
_15 = (-12_i8) * (-70_i8);
_16 = 10807243249815147184_u64 as f64;
_3.1 = _5;
_3.2 = [_11,_11,_11,_11,_11,_11];
_9.2 = [_11,_11,_11,_11,_11,_11];
_2 = [_11,_11,_11,_11,_11,_11];
_4 = (_7, _5, RET);
Goto(bb2)
}
bb2 = {
Call(_19 = dump_var(15_usize, 10_usize, Move(_10), 8_usize, Move(_8), 5_usize, Move(_5), 11_usize, Move(_11)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_19 = dump_var(15_usize, 3_usize, Move(_3), 1_usize, Move(_1), 20_usize, _20, 20_usize, _20), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: (i128, bool, [isize; 6]),mut _2: [isize; 6],mut _3: [isize; 6],mut _4: isize,mut _5: i128,mut _6: (i128, bool, [isize; 6]),mut _7: i128,mut _8: [u128; 5],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: (i128, bool, [isize; 6])) -> Adt49 {
mir! {
type RET = Adt49;
let _14: i32;
let _15: *const *mut *mut i16;
let _16: (char, [bool; 1], f64);
let _17: [i32; 7];
let _18: Adt59;
let _19: Adt43;
let _20: (i128, bool, [isize; 6]);
let _21: bool;
let _22: [bool; 6];
let _23: [u128; 5];
let _24: i64;
let _25: Adt48;
let _26: char;
let _27: *const f64;
let _28: u64;
let _29: [isize; 7];
let _30: [isize; 6];
let _31: (i128, bool, [isize; 6]);
let _32: *const i128;
let _33: [bool; 6];
let _34: u8;
let _35: [bool; 6];
let _36: [i32; 3];
let _37: Adt52;
let _38: (i128, bool, [isize; 6]);
let _39: f64;
let _40: char;
let _41: isize;
let _42: i64;
let _43: usize;
let _44: bool;
let _45: Adt52;
let _46: usize;
let _47: bool;
let _48: i64;
let _49: f32;
let _50: Adt56;
let _51: [i32; 3];
let _52: [i32; 3];
let _53: [i32; 3];
let _54: f64;
let _55: usize;
let _56: [i32; 7];
let _57: char;
let _58: Adt53;
let _59: char;
let _60: i8;
let _61: [u128; 5];
let _62: Adt44;
let _63: char;
let _64: ();
let _65: ();
{
_11 = _3;
_13 = (_6.0, _6.1, _9);
_6.0 = _13.0 * _13.0;
RET.fld3 = 8148271386609685689_u64 as u8;
_13 = (_7, _1.1, _1.2);
RET.fld2 = core::ptr::addr_of_mut!(_11);
_6.1 = _13.1 & _13.1;
_4 = 9223372036854775807_isize;
_13 = (_1.0, _6.1, _11);
_16.1 = [_1.1];
_13.0 = _1.0 * _7;
_16.0 = '\u{f0aad}';
_14 = 1813902474_i32 | 1091373710_i32;
_8 = [64092316172003130684121699455314022885_u128,89110707976037508281845728971915620316_u128,96956100465685764119089106243294608327_u128,64430993045372986445611553561182217164_u128,263859754926933278119132920591254098317_u128];
_13 = (_7, _1.1, _10);
_16.0 = '\u{7a0d6}';
_17 = [_14,_14,_14,_14,_14,_14,_14];
_1 = _6;
_10 = [_4,_4,_4,_4,_4,_4];
_16.1 = [_1.1];
_5 = _1.0 | _1.0;
_13.1 = !_6.1;
Goto(bb1)
}
bb1 = {
RET.fld3 = 30103_i16 as u8;
RET.fld2 = core::ptr::addr_of_mut!(_3);
_8 = [20915208029109625199540203204668907763_u128,49408874574697081067439121735019632652_u128,230186276169731532223415139784137531586_u128,304762052011375989608835572246257049795_u128,230576928561726081943412911897187069027_u128];
_3 = [_4,_4,_4,_4,_4,_4];
_4 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_10 = [_4,_4,_4,_4,_4,_4];
RET.fld0 = _13.1 | _13.1;
_5 = !_7;
_16.1 = [_6.1];
RET.fld0 = !_13.1;
_20.0 = _16.0 as i128;
_6.1 = _1.1;
_6.2 = [_4,_4,_4,_4,_4,_4];
Goto(bb2)
}
bb2 = {
_16.1 = [_13.1];
RET.fld2 = core::ptr::addr_of_mut!(_20.2);
_16.0 = '\u{e0a3d}';
_5 = 2963289786_u32 as i128;
_14 = !842132947_i32;
_20.0 = RET.fld3 as i128;
Goto(bb3)
}
bb3 = {
RET.fld3 = 2086719254_u32 as u8;
_5 = _1.0 | _13.0;
RET.fld2 = core::ptr::addr_of_mut!(_10);
_1.1 = _6.1 < _13.1;
_1.1 = _6.0 < _1.0;
_9 = [_4,_4,_4,_4,_4,_4];
Goto(bb4)
}
bb4 = {
_11 = _2;
_7 = _5;
_20.0 = _13.0 - _5;
_10 = _13.2;
_24 = !(-8339587665389005124_i64);
_13.1 = _1.1;
_3 = [_4,_4,_4,_4,_4,_4];
_1.0 = 3114996996_u32 as i128;
_22 = [_1.1,RET.fld0,RET.fld0,RET.fld0,_1.1,_6.1];
_3 = [_4,_4,_4,_4,_4,_4];
_16.2 = 6247523231660132664_usize as f64;
_13.1 = !_1.1;
_6.0 = _13.0;
RET.fld2 = core::ptr::addr_of_mut!(_13.2);
_20.2 = [_4,_4,_4,_4,_4,_4];
_20.2 = [_4,_4,_4,_4,_4,_4];
_23 = _8;
_20.2 = [_4,_4,_4,_4,_4,_4];
_16.1 = [RET.fld0];
_14 = 1847173782_i32;
_6.1 = _1.1;
_7 = _5;
_3 = _1.2;
_23 = [195725249915667412003651372092165260096_u128,336338650742053793105754308299465171170_u128,317431381702232107747612108697787624802_u128,139790130872805776985322251921778318281_u128,283053918489709313531142351010971885691_u128];
_11 = [_4,_4,_4,_4,_4,_4];
match _14 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
1847173782 => bb9,
_ => bb8
}
}
bb5 = {
RET.fld3 = 2086719254_u32 as u8;
_5 = _1.0 | _13.0;
RET.fld2 = core::ptr::addr_of_mut!(_10);
_1.1 = _6.1 < _13.1;
_1.1 = _6.0 < _1.0;
_9 = [_4,_4,_4,_4,_4,_4];
Goto(bb4)
}
bb6 = {
_16.1 = [_13.1];
RET.fld2 = core::ptr::addr_of_mut!(_20.2);
_16.0 = '\u{e0a3d}';
_5 = 2963289786_u32 as i128;
_14 = !842132947_i32;
_20.0 = RET.fld3 as i128;
Goto(bb3)
}
bb7 = {
RET.fld3 = 30103_i16 as u8;
RET.fld2 = core::ptr::addr_of_mut!(_3);
_8 = [20915208029109625199540203204668907763_u128,49408874574697081067439121735019632652_u128,230186276169731532223415139784137531586_u128,304762052011375989608835572246257049795_u128,230576928561726081943412911897187069027_u128];
_3 = [_4,_4,_4,_4,_4,_4];
_4 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_10 = [_4,_4,_4,_4,_4,_4];
RET.fld0 = _13.1 | _13.1;
_5 = !_7;
_16.1 = [_6.1];
RET.fld0 = !_13.1;
_20.0 = _16.0 as i128;
_6.1 = _1.1;
_6.2 = [_4,_4,_4,_4,_4,_4];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Goto(bb10)
}
bb10 = {
_14 = (-1160397779_i32);
_17 = [_14,_14,_14,_14,_14,_14,_14];
_3 = _13.2;
_20.1 = _13.1 ^ RET.fld0;
_20.0 = _14 as i128;
_27 = core::ptr::addr_of!(_16.2);
_27 = core::ptr::addr_of!(_16.2);
_26 = _16.0;
_1.1 = _6.1 ^ RET.fld0;
_21 = !_13.1;
_2 = [_4,_4,_4,_4,_4,_4];
_13 = (_5, _1.1, _10);
_16.0 = _26;
RET.fld0 = !_21;
_8 = [269058416834501609313400933264555446384_u128,34841585769832872607025897950462978085_u128,35846586298130962876143016613958490951_u128,87013500159576172442691838348767026783_u128,260171240242476835300776067839249434345_u128];
_13.0 = _5;
_2 = [_4,_4,_4,_4,_4,_4];
_13 = _6;
_29 = [_4,_4,_4,_4,_4,_4,_4];
_8 = _23;
_1.2 = [_4,_4,_4,_4,_4,_4];
_29 = [_4,_4,_4,_4,_4,_4,_4];
_6 = (_13.0, _1.1, _12);
match _14 {
340282366920938463463374607430607813677 => bb11,
_ => bb6
}
}
bb11 = {
_13.0 = _5 - _7;
_20 = _1;
_12 = [_4,_4,_4,_4,_4,_4];
_6.2 = [_4,_4,_4,_4,_4,_4];
_5 = 62443_u16 as i128;
RET.fld3 = !49_u8;
_5 = _6.0 ^ _13.0;
_16.0 = _26;
_24 = 6183477614522934635_i64 + (-2684645828505758696_i64);
_8 = [182417635560407779697603116100992368537_u128,156804913782311906113692388737473443488_u128,66841445973203720576224025233064202727_u128,145298648449192289262400258394274631857_u128,65287130507225087031882601530038305733_u128];
_18 = Adt59::Variant2 { fld0: 385_i16 };
RET.fld0 = !_21;
_2 = [_4,_4,_4,_4,_4,_4];
_31.2 = [_4,_4,_4,_4,_4,_4];
_20.1 = _21 < _13.1;
_30 = [_4,_4,_4,_4,_4,_4];
_31.0 = _6.0;
_32 = core::ptr::addr_of!(_1.0);
_28 = !10728383783517272413_u64;
RET.fld2 = core::ptr::addr_of_mut!(_1.2);
_13.2 = _10;
_1.2 = _13.2;
_1.2 = [_4,_4,_4,_4,_4,_4];
_4 = _24 as isize;
_10 = [_4,_4,_4,_4,_4,_4];
Goto(bb12)
}
bb12 = {
_14 = 120317726_i32 >> _6.0;
_3 = [_4,_4,_4,_4,_4,_4];
RET.fld3 = !235_u8;
place!(Field::<i16>(Variant(_18, 2), 0)) = 6237_i16 * 14935_i16;
_13.0 = _7;
_16.0 = _26;
RET.fld2 = core::ptr::addr_of_mut!(_1.2);
_8 = [138242025929008548482863552553744029434_u128,131015956009975663895417407042532553949_u128,79815524375682937857736340863505863706_u128,58114683390764940579575972960575590842_u128,183378900131399665726689355911365123940_u128];
RET.fld3 = !83_u8;
_34 = RET.fld3 | RET.fld3;
_20.2 = _13.2;
_1.1 = !_6.1;
_34 = RET.fld3 ^ RET.fld3;
_22 = [_1.1,RET.fld0,_13.1,_6.1,_21,_21];
_31.0 = _13.0;
_36 = [_14,_14,_14];
_4 = _34 as isize;
_13.2 = [_4,_4,_4,_4,_4,_4];
_2 = [_4,_4,_4,_4,_4,_4];
_17 = [_14,_14,_14,_14,_14,_14,_14];
_10 = _12;
_29 = [_4,_4,_4,_4,_4,_4,_4];
_13.2 = [_4,_4,_4,_4,_4,_4];
Goto(bb13)
}
bb13 = {
_24 = (-3480197373596503463_i64);
SetDiscriminant(_18, 3);
_20.0 = _5 >> _5;
_13.2 = [_4,_4,_4,_4,_4,_4];
RET.fld0 = _6.1 & _13.1;
_6.1 = !_21;
_17 = [_14,_14,_14,_14,_14,_14,_14];
_38.1 = _13.1;
place!(Field::<isize>(Variant(_18, 3), 2)) = _5 as isize;
_1 = (_5, _6.1, _20.2);
place!(Field::<bool>(Variant(_18, 3), 0)) = !_13.1;
place!(Field::<Adt44>(Variant(_18, 3), 1)) = Adt44::Variant1 { fld0: _23,fld1: 876060099_u32,fld2: 3261880062536040467_usize };
place!(Field::<(char, [bool; 1], f64)>(Variant(_18, 3), 5)).1 = [_38.1];
place!(Field::<i128>(Variant(_18, 3), 3)) = _20.0 | _13.0;
Goto(bb14)
}
bb14 = {
_19 = Adt43::Variant2 { fld0: RET.fld0,fld1: _27,fld2: 10704109640403569956_usize,fld3: _29,fld4: 27568_i16,fld5: Field::<(char, [bool; 1], f64)>(Variant(_18, 3), 5).1 };
_6.2 = _1.2;
match _24 {
340282366920938463459894410058171707993 => bb16,
_ => bb15
}
}
bb15 = {
RET.fld3 = 30103_i16 as u8;
RET.fld2 = core::ptr::addr_of_mut!(_3);
_8 = [20915208029109625199540203204668907763_u128,49408874574697081067439121735019632652_u128,230186276169731532223415139784137531586_u128,304762052011375989608835572246257049795_u128,230576928561726081943412911897187069027_u128];
_3 = [_4,_4,_4,_4,_4,_4];
_4 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_10 = [_4,_4,_4,_4,_4,_4];
RET.fld0 = _13.1 | _13.1;
_5 = !_7;
_16.1 = [_6.1];
RET.fld0 = !_13.1;
_20.0 = _16.0 as i128;
_6.1 = _1.1;
_6.2 = [_4,_4,_4,_4,_4,_4];
Goto(bb2)
}
bb16 = {
_9 = [Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2)];
_36 = [_14,_14,_14];
_1.1 = RET.fld0;
_22 = [_21,_6.1,Field::<bool>(Variant(_19, 2), 0),_13.1,_6.1,_38.1];
_3 = [Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2)];
_41 = Field::<isize>(Variant(_18, 3), 2);
place!(Field::<(char, [bool; 1], f64)>(Variant(_18, 3), 5)).1 = [Field::<bool>(Variant(_19, 2), 0)];
_31.2 = [_41,Field::<isize>(Variant(_18, 3), 2),_41,_41,Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2)];
_6.2 = _9;
_38 = (Field::<i128>(Variant(_18, 3), 3), Field::<bool>(Variant(_18, 3), 0), _3);
_2 = _20.2;
_31.0 = (*_32) + _20.0;
_44 = !_6.1;
_24 = (-4398904529705931124_i64) + 3235046054816426751_i64;
place!(Field::<i128>(Variant(_18, 3), 3)) = _34 as i128;
_20.1 = _21;
_20.0 = !(*_32);
Goto(bb17)
}
bb17 = {
place!(Field::<bool>(Variant(_18, 3), 0)) = _38.1 != _38.1;
place!(Field::<(char, [bool; 1], f64)>(Variant(_18, 3), 5)).0 = _26;
_42 = !_24;
Goto(bb18)
}
bb18 = {
_33 = _22;
place!(Field::<(char, [bool; 1], f64)>(Variant(_18, 3), 5)).1 = [_1.1];
place!(Field::<usize>(Variant(_19, 2), 2)) = _1.1 as usize;
place!(Field::<(char, [bool; 1], f64)>(Variant(_18, 3), 5)).2 = (*_27);
_39 = (*_27) - (*_27);
_49 = 137054841583513952009260421369100028235_u128 as f32;
_31.0 = _6.0;
_20.2 = _3;
_30 = [Field::<isize>(Variant(_18, 3), 2),_41,Field::<isize>(Variant(_18, 3), 2),_41,_41,_41];
_38.2 = [_41,_41,Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),_41];
_1 = (_5, _38.1, _9);
RET.fld0 = !_13.1;
RET.fld2 = core::ptr::addr_of_mut!(_20.2);
place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(_18, 3), 1)), 1), 1)) = !2552068039_u32;
_50.fld0.fld0 = [Field::<bool>(Variant(_18, 3), 0)];
_6.0 = -(*_32);
_16.0 = _26;
_16.2 = _39 * _39;
_3 = [Field::<isize>(Variant(_18, 3), 2),_41,_41,_41,_41,_41];
_9 = [_41,_41,_41,_41,_41,Field::<isize>(Variant(_18, 3), 2)];
place!(Field::<usize>(Variant(_19, 2), 2)) = 0_usize * 4_usize;
_50.fld1 = _27;
_50.fld1 = _27;
_20.0 = -(*_32);
_31.1 = _6.1;
_50.fld5 = !_14;
_42 = _41 as i64;
Call(_1.2 = core::intrinsics::transmute(_30), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
_20.0 = (*_27) as i128;
_1.0 = 247638200422264637571271093436269133402_u128 as i128;
Goto(bb20)
}
bb20 = {
_34 = RET.fld3;
_50.fld2 = Field::<isize>(Variant(_18, 3), 2);
_55 = Field::<usize>(Variant(_19, 2), 2) | Field::<usize>(Variant(_19, 2), 2);
_34 = !RET.fld3;
_1 = (_38.0, Field::<bool>(Variant(_19, 2), 0), _30);
_13.2 = [_50.fld2,_50.fld2,_41,_50.fld2,_41,Field::<isize>(Variant(_18, 3), 2)];
_48 = _34 as i64;
_50.fld0.fld2 = Field::<usize>(Variant(_19, 2), 2);
_2 = [Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),_50.fld2,Field::<isize>(Variant(_18, 3), 2),_41];
Goto(bb21)
}
bb21 = {
RET.fld0 = Field::<isize>(Variant(_18, 3), 2) <= _41;
_7 = (*_32) * _6.0;
_6.1 = !_44;
Goto(bb22)
}
bb22 = {
place!(Field::<usize>(Variant(_19, 2), 2)) = !_50.fld0.fld2;
_30 = [Field::<isize>(Variant(_18, 3), 2),_50.fld2,_41,_50.fld2,Field::<isize>(Variant(_18, 3), 2),_41];
_50.fld6 = [Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),_41,Field::<isize>(Variant(_18, 3), 2),_50.fld2,_41];
_38.1 = !_20.1;
_30 = _31.2;
_5 = _1.0;
_40 = _16.0;
_30 = _1.2;
_4 = Field::<isize>(Variant(_18, 3), 2) + _41;
_6.1 = !_13.1;
_6.2 = [_50.fld2,_41,Field::<isize>(Variant(_18, 3), 2),Field::<isize>(Variant(_18, 3), 2),_50.fld2,_50.fld2];
_20.2 = _38.2;
place!(Field::<usize>(Variant(_19, 2), 2)) = !_55;
RET.fld0 = _44 | _13.1;
_52 = [_50.fld5,_50.fld5,_14];
Call(_43 = fn17(_6.0, Field::<bool>(Variant(_19, 2), 0), _33, _31.2, _6), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_50.fld2 = _41;
RET.fld0 = !Field::<bool>(Variant(_18, 3), 0);
_55 = 24940_i16 as usize;
place!(Field::<i128>(Variant(_18, 3), 3)) = !_1.0;
RET.fld1 = core::ptr::addr_of!(_50.fld4);
_10 = _31.2;
_54 = -_16.2;
_38.0 = (*_32) * _31.0;
_18 = Adt59::Variant2 { fld0: (-6880_i16) };
_60 = -(-48_i8);
_13 = _6;
_50.fld2 = _31.1 as isize;
_50.fld3 = 759133758_u32;
_1.0 = _13.0;
Goto(bb24)
}
bb24 = {
Call(_64 = dump_var(16_usize, 4_usize, Move(_4), 31_usize, Move(_31), 55_usize, Move(_55), 12_usize, Move(_12)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_64 = dump_var(16_usize, 44_usize, Move(_44), 21_usize, Move(_21), 2_usize, Move(_2), 22_usize, Move(_22)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_64 = dump_var(16_usize, 3_usize, Move(_3), 36_usize, Move(_36), 14_usize, Move(_14), 42_usize, Move(_42)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_64 = dump_var(16_usize, 43_usize, Move(_43), 23_usize, Move(_23), 1_usize, Move(_1), 40_usize, Move(_40)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_64 = dump_var(16_usize, 29_usize, Move(_29), 8_usize, Move(_8), 17_usize, Move(_17), 65_usize, _65), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i128,mut _2: bool,mut _3: [bool; 6],mut _4: [isize; 6],mut _5: (i128, bool, [isize; 6])) -> usize {
mir! {
type RET = usize;
let _6: [u16; 7];
let _7: *mut [i32; 3];
let _8: u8;
let _9: f64;
let _10: [u16; 7];
let _11: (i64, bool);
let _12: [bool; 6];
let _13: ();
let _14: ();
{
_5 = (_1, _2, _4);
_5 = (_1, _2, _4);
RET = !12805681757302584494_usize;
_5 = (_1, _2, _4);
RET = !4_usize;
Goto(bb1)
}
bb1 = {
_6 = [62522_u16,9938_u16,6918_u16,9197_u16,56921_u16,43897_u16,9621_u16];
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-40_isize),9223372036854775807_isize,72_isize,9223372036854775807_isize];
_2 = _5.1;
_5.2 = [(-112_isize),9223372036854775807_isize,9223372036854775807_isize,5_isize,(-9223372036854775808_isize),76_isize];
_5.0 = _1 + _1;
Call(_7 = fn18(_2, _5, _2, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5.0 = _1;
_5.1 = _1 != _1;
_5.1 = _2 ^ _2;
_8 = '\u{b58e4}' as u8;
_9 = (-565176071281749596_i64) as f64;
_5 = (_1, _2, _4);
_1 = _5.0;
_5.2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-31_isize),(-32_isize),9223372036854775807_isize];
RET = 3808752963296519548_usize << _5.0;
_11.1 = _5.0 == _5.0;
_8 = RET as u8;
_5.1 = !_2;
_11.0 = (-2196025541089970760_i64);
_4 = [(-98_isize),(-65_isize),(-2_isize),13_isize,9223372036854775807_isize,(-48_isize)];
_12 = [_5.1,_5.1,_5.1,_5.1,_11.1,_2];
_9 = 125236221948481180674316461121276141702_u128 as f64;
_4 = _5.2;
_2 = _5.1;
_10 = [32623_u16,50089_u16,674_u16,61250_u16,46264_u16,13383_u16,54598_u16];
_2 = !_5.1;
_11.1 = _8 != _8;
Goto(bb3)
}
bb3 = {
Call(_13 = dump_var(17_usize, 4_usize, Move(_4), 6_usize, Move(_6), 1_usize, Move(_1), 5_usize, Move(_5)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_13 = dump_var(17_usize, 11_usize, Move(_11), 14_usize, _14, 14_usize, _14, 14_usize, _14), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: bool,mut _2: (i128, bool, [isize; 6]),mut _3: bool,mut _4: bool,mut _5: i128) -> *mut [i32; 3] {
mir! {
type RET = *mut [i32; 3];
let _6: bool;
let _7: isize;
let _8: [isize; 6];
let _9: [isize; 7];
let _10: [bool; 6];
let _11: [i32; 7];
let _12: *const f64;
let _13: i32;
let _14: Adt52;
let _15: i64;
let _16: f64;
let _17: i8;
let _18: f32;
let _19: [bool; 1];
let _20: [i32; 3];
let _21: isize;
let _22: [i32; 7];
let _23: Adt56;
let _24: [u16; 7];
let _25: usize;
let _26: bool;
let _27: *const i128;
let _28: Adt45;
let _29: [i32; 7];
let _30: bool;
let _31: [isize; 6];
let _32: u8;
let _33: char;
let _34: [isize; 7];
let _35: isize;
let _36: Adt59;
let _37: f64;
let _38: [usize; 2];
let _39: i64;
let _40: Adt44;
let _41: Adt44;
let _42: u8;
let _43: isize;
let _44: f64;
let _45: i16;
let _46: u32;
let _47: ();
let _48: ();
{
_2.1 = !_3;
_2.0 = _5;
_4 = _1;
_5 = _2.0 ^ _2.0;
_7 = 59_i8 as isize;
_2.2 = [_7,_7,_7,_7,_7,_7];
_5 = _2.0 | _2.0;
_6 = !_3;
_8 = [_7,_7,_7,_7,_7,_7];
_4 = _1;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_1 = _6;
_3 = _4;
_4 = !_2.1;
_5 = _2.0 ^ _2.0;
Goto(bb1)
}
bb1 = {
_2.2 = [_7,_7,_7,_7,_7,_7];
_2.2 = _8;
_10 = [_4,_4,_6,_6,_4,_3];
_5 = (-15857_i16) as i128;
_4 = !_3;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_13 = 532600913_i32 & 140995904_i32;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_3 = _4;
_6 = _2.1 <= _1;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_9 = [_7,_7,_7,_7,_7,_7,_7];
_8 = [_7,_7,_7,_7,_7,_7];
_11 = [_13,_13,_13,_13,_13,_13,_13];
_12 = core::ptr::addr_of!(_16);
_8 = [_7,_7,_7,_7,_7,_7];
_17 = 107_i8;
Call(_13 = fn19(_2, _6, _10, _1, _6, _1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2.1 = !_6;
match _17 {
107 => bb3,
_ => bb1
}
}
bb3 = {
_15 = 686058403113943920_i64;
_2.0 = !_5;
_15 = 326408027071827593_i64;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_4 = _2.1 >= _2.1;
_16 = 75651579582358828668896610377723011514_u128 as f64;
_15 = _2.0 as i64;
_13 = (-1333927970_i32);
_4 = !_3;
_19 = [_4];
_2.1 = _1;
_19 = [_3];
_19 = [_4];
_5 = _2.0;
_16 = 2641395079_u32 as f64;
_12 = core::ptr::addr_of!((*_12));
_1 = !_2.1;
_3 = !_6;
_18 = 37_u8 as f32;
RET = core::ptr::addr_of_mut!(_20);
_23.fld6 = [_7,_7,_7,_7,_7,_7];
_23.fld7 = 0_usize ^ 10191244041402499074_usize;
match _13 {
340282366920938463463374607430434283486 => bb5,
_ => bb4
}
}
bb4 = {
_2.2 = [_7,_7,_7,_7,_7,_7];
_2.2 = _8;
_10 = [_4,_4,_6,_6,_4,_3];
_5 = (-15857_i16) as i128;
_4 = !_3;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_13 = 532600913_i32 & 140995904_i32;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_3 = _4;
_6 = _2.1 <= _1;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_9 = [_7,_7,_7,_7,_7,_7,_7];
_8 = [_7,_7,_7,_7,_7,_7];
_11 = [_13,_13,_13,_13,_13,_13,_13];
_12 = core::ptr::addr_of!(_16);
_8 = [_7,_7,_7,_7,_7,_7];
_17 = 107_i8;
Call(_13 = fn19(_2, _6, _10, _1, _6, _1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
_23.fld0.fld3 = _9;
_23.fld1 = _12;
_23.fld0.fld0 = [_1];
_23.fld7 = 16024994191588300928_usize * 5_usize;
_20 = [_13,_13,_13];
_21 = '\u{77785}' as isize;
_23.fld0.fld2 = _23.fld7 << _17;
_21 = _7;
_23.fld1 = core::ptr::addr_of!((*_12));
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
_26 = _18 == _18;
_24 = [12176_u16,29044_u16,36159_u16,19163_u16,55685_u16,58009_u16,28552_u16];
_23.fld0.fld2 = !_23.fld7;
RET = core::ptr::addr_of_mut!(_20);
_17 = -(-47_i8);
_26 = _1 <= _1;
_23.fld0.fld2 = _23.fld7;
_24 = [17218_u16,30813_u16,8304_u16,54912_u16,59200_u16,24468_u16,27020_u16];
_3 = _4 == _6;
_23.fld5 = -_13;
_23.fld0.fld2 = _23.fld7;
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
Goto(bb6)
}
bb6 = {
_23.fld0.fld3 = [_7,_7,_7,_21,_7,_21,_21];
_18 = 13558291168189127636_u64 as f32;
_23.fld5 = -_13;
_16 = _7 as f64;
_23.fld2 = _21 * _7;
_27 = core::ptr::addr_of!(_5);
_19 = _23.fld0.fld0;
_28 = Adt45::Variant2 { fld0: (*_12) };
_17 = 72_i8;
_25 = !_23.fld0.fld2;
_1 = _3 != _4;
_21 = _23.fld2 + _23.fld2;
_26 = !_2.1;
SetDiscriminant(_28, 2);
_23.fld7 = _23.fld0.fld2 - _23.fld0.fld2;
RET = core::ptr::addr_of_mut!((*RET));
_22 = [_23.fld5,_23.fld5,_13,_23.fld5,_13,_23.fld5,_13];
_23.fld2 = !_7;
_24 = [33578_u16,19668_u16,11718_u16,36292_u16,47466_u16,36940_u16,15578_u16];
_23.fld0.fld0 = [_1];
_2.2 = [_21,_21,_21,_21,_21,_21];
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
match _13 {
0 => bb5,
1 => bb7,
2 => bb8,
340282366920938463463374607430434283486 => bb10,
_ => bb9
}
}
bb7 = {
_23.fld0.fld3 = _9;
_23.fld1 = _12;
_23.fld0.fld0 = [_1];
_23.fld7 = 16024994191588300928_usize * 5_usize;
_20 = [_13,_13,_13];
_21 = '\u{77785}' as isize;
_23.fld0.fld2 = _23.fld7 << _17;
_21 = _7;
_23.fld1 = core::ptr::addr_of!((*_12));
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
_26 = _18 == _18;
_24 = [12176_u16,29044_u16,36159_u16,19163_u16,55685_u16,58009_u16,28552_u16];
_23.fld0.fld2 = !_23.fld7;
RET = core::ptr::addr_of_mut!(_20);
_17 = -(-47_i8);
_26 = _1 <= _1;
_23.fld0.fld2 = _23.fld7;
_24 = [17218_u16,30813_u16,8304_u16,54912_u16,59200_u16,24468_u16,27020_u16];
_3 = _4 == _6;
_23.fld5 = -_13;
_23.fld0.fld2 = _23.fld7;
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
Goto(bb6)
}
bb8 = {
_2.2 = [_7,_7,_7,_7,_7,_7];
_2.2 = _8;
_10 = [_4,_4,_6,_6,_4,_3];
_5 = (-15857_i16) as i128;
_4 = !_3;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_13 = 532600913_i32 & 140995904_i32;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_3 = _4;
_6 = _2.1 <= _1;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_9 = [_7,_7,_7,_7,_7,_7,_7];
_8 = [_7,_7,_7,_7,_7,_7];
_11 = [_13,_13,_13,_13,_13,_13,_13];
_12 = core::ptr::addr_of!(_16);
_8 = [_7,_7,_7,_7,_7,_7];
_17 = 107_i8;
Call(_13 = fn19(_2, _6, _10, _1, _6, _1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_15 = 686058403113943920_i64;
_2.0 = !_5;
_15 = 326408027071827593_i64;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_4 = _2.1 >= _2.1;
_16 = 75651579582358828668896610377723011514_u128 as f64;
_15 = _2.0 as i64;
_13 = (-1333927970_i32);
_4 = !_3;
_19 = [_4];
_2.1 = _1;
_19 = [_3];
_19 = [_4];
_5 = _2.0;
_16 = 2641395079_u32 as f64;
_12 = core::ptr::addr_of!((*_12));
_1 = !_2.1;
_3 = !_6;
_18 = 37_u8 as f32;
RET = core::ptr::addr_of_mut!(_20);
_23.fld6 = [_7,_7,_7,_7,_7,_7];
_23.fld7 = 0_usize ^ 10191244041402499074_usize;
match _13 {
340282366920938463463374607430434283486 => bb5,
_ => bb4
}
}
bb10 = {
_20 = [_13,_23.fld5,_13];
_16 = 7081_i16 as f64;
_18 = 19267_u16 as f32;
_23.fld7 = _23.fld0.fld2;
_8 = [_21,_7,_7,_21,_21,_21];
_1 = _26 < _6;
_34 = [_21,_21,_21,_21,_21,_23.fld2,_7];
_15 = 19_u8 as i64;
_33 = '\u{e32cf}';
_27 = core::ptr::addr_of!((*_27));
_24 = [55854_u16,21785_u16,54237_u16,48040_u16,24342_u16,33675_u16,5590_u16];
_26 = !_6;
_29 = _11;
_29 = _11;
_22 = [_13,_13,_23.fld5,_23.fld5,_23.fld5,_23.fld5,_13];
_34 = [_21,_21,_21,_21,_21,_21,_7];
RET = core::ptr::addr_of_mut!((*RET));
_17 = (-59_i8) << _21;
_2.2 = [_21,_23.fld2,_21,_23.fld2,_21,_23.fld2];
_34 = [_21,_7,_21,_21,_21,_7,_7];
_20 = [_13,_23.fld5,_13];
Goto(bb11)
}
bb11 = {
_16 = 126118245193866671709727830822170346667_u128 as f64;
_5 = (*_12) as i128;
_24 = [57622_u16,55960_u16,29396_u16,54073_u16,45626_u16,2289_u16,42568_u16];
_1 = _26;
_32 = 143_u8 + 152_u8;
_30 = _1;
_28 = Adt45::Variant2 { fld0: _16 };
_4 = _1 <= _30;
_9 = _23.fld0.fld3;
_29 = _11;
_23.fld7 = (-5579_i16) as usize;
_23.fld0.fld0 = [_6];
_12 = _23.fld1;
_28 = Adt45::Variant2 { fld0: _16 };
Goto(bb12)
}
bb12 = {
_31 = [_21,_21,_7,_23.fld2,_21,_21];
_7 = _21;
_12 = _23.fld1;
SetDiscriminant(_28, 2);
_2.1 = _3 != _6;
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
_23.fld6 = _31;
_1 = _26;
Goto(bb13)
}
bb13 = {
_26 = _3 <= _6;
_23.fld3 = _15 as u32;
_2.0 = (*_27);
place!(Field::<f64>(Variant(_28, 2), 0)) = _16 - _16;
_23.fld7 = !_23.fld0.fld2;
_35 = _7 | _7;
_42 = _32;
_43 = _35;
match _13 {
0 => bb11,
1 => bb4,
2 => bb14,
3 => bb15,
340282366920938463463374607430434283486 => bb17,
_ => bb16
}
}
bb14 = {
_31 = [_21,_21,_7,_23.fld2,_21,_21];
_7 = _21;
_12 = _23.fld1;
SetDiscriminant(_28, 2);
_2.1 = _3 != _6;
_23.fld0.fld1 = core::ptr::addr_of!(_23.fld4);
_23.fld6 = _31;
_1 = _26;
Goto(bb13)
}
bb15 = {
_2.2 = [_7,_7,_7,_7,_7,_7];
_2.2 = _8;
_10 = [_4,_4,_6,_6,_4,_3];
_5 = (-15857_i16) as i128;
_4 = !_3;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_13 = 532600913_i32 & 140995904_i32;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_3 = _4;
_6 = _2.1 <= _1;
_9 = [_7,_7,_7,_7,_7,_7,_7];
_9 = [_7,_7,_7,_7,_7,_7,_7];
_8 = [_7,_7,_7,_7,_7,_7];
_11 = [_13,_13,_13,_13,_13,_13,_13];
_12 = core::ptr::addr_of!(_16);
_8 = [_7,_7,_7,_7,_7,_7];
_17 = 107_i8;
Call(_13 = fn19(_2, _6, _10, _1, _6, _1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_15 = 686058403113943920_i64;
_2.0 = !_5;
_15 = 326408027071827593_i64;
_11 = [_13,_13,_13,_13,_13,_13,_13];
_4 = _2.1 >= _2.1;
_16 = 75651579582358828668896610377723011514_u128 as f64;
_15 = _2.0 as i64;
_13 = (-1333927970_i32);
_4 = !_3;
_19 = [_4];
_2.1 = _1;
_19 = [_3];
_19 = [_4];
_5 = _2.0;
_16 = 2641395079_u32 as f64;
_12 = core::ptr::addr_of!((*_12));
_1 = !_2.1;
_3 = !_6;
_18 = 37_u8 as f32;
RET = core::ptr::addr_of_mut!(_20);
_23.fld6 = [_7,_7,_7,_7,_7,_7];
_23.fld7 = 0_usize ^ 10191244041402499074_usize;
match _13 {
340282366920938463463374607430434283486 => bb5,
_ => bb4
}
}
bb17 = {
RET = core::ptr::addr_of_mut!(_20);
_3 = _2.1;
_18 = _23.fld3 as f32;
_38 = [_23.fld0.fld2,_25];
_15 = _5 as i64;
_8 = [_35,_7,_43,_23.fld2,_21,_43];
_15 = (-8297030989919103675_i64);
_23.fld1 = _12;
_28 = Adt45::Variant2 { fld0: _16 };
_33 = '\u{10aa4f}';
_21 = _35 - _7;
_2.2 = [_21,_7,_35,_21,_35,_35];
_33 = '\u{38a5}';
_11 = [_13,_23.fld5,_23.fld5,_13,_13,_13,_13];
_13 = _23.fld5 + _23.fld5;
_45 = 9112_i16 * 12871_i16;
_2 = ((*_27), _26, _8);
_37 = Field::<f64>(Variant(_28, 2), 0);
_16 = _37 - Field::<f64>(Variant(_28, 2), 0);
Goto(bb18)
}
bb18 = {
Call(_47 = dump_var(18_usize, 24_usize, Move(_24), 25_usize, Move(_25), 17_usize, Move(_17), 13_usize, Move(_13)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_47 = dump_var(18_usize, 43_usize, Move(_43), 11_usize, Move(_11), 2_usize, Move(_2), 34_usize, Move(_34)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_47 = dump_var(18_usize, 31_usize, Move(_31), 8_usize, Move(_8), 4_usize, Move(_4), 9_usize, Move(_9)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_47 = dump_var(18_usize, 7_usize, Move(_7), 29_usize, Move(_29), 26_usize, Move(_26), 42_usize, Move(_42)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: (i128, bool, [isize; 6]),mut _2: bool,mut _3: [bool; 6],mut _4: bool,mut _5: bool,mut _6: bool,mut _7: [bool; 6]) -> i32 {
mir! {
type RET = i32;
let _8: isize;
let _9: isize;
let _10: u32;
let _11: isize;
let _12: usize;
let _13: i16;
let _14: f64;
let _15: f32;
let _16: (char, [bool; 1], f64);
let _17: Adt47;
let _18: [bool; 6];
let _19: Adt50;
let _20: Adt53;
let _21: f64;
let _22: i32;
let _23: bool;
let _24: f64;
let _25: ();
let _26: ();
{
_7 = _3;
_1.0 = !(-85956802864801269101017995645886438237_i128);
_1.1 = _4;
_1.1 = !_4;
_1.1 = _4 == _4;
_2 = _1.1;
RET = (-67878445_i32) - (-1259192357_i32);
_1.0 = 123032043466272222645639276329897977836_i128;
_3 = [_2,_1.1,_4,_1.1,_2,_6];
_8 = (-36_isize);
_1.0 = _8 as i128;
_2 = _1.1;
_6 = !_1.1;
_6 = _5 ^ _4;
_2 = _6 != _5;
_3 = _7;
_3 = [_1.1,_5,_4,_5,_5,_1.1];
_2 = _4;
RET = 626753814_i32 << _1.0;
_5 = _2;
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463463374607431768211420 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_1.1 = _5;
_6 = !_2;
_1.0 = (-117723914539760986732177453094346736466_i128) ^ 63509671320150988346655106660606376092_i128;
_4 = _1.1 | _2;
_8 = 4944571396982495642_i64 as isize;
_9 = _8 ^ _8;
_5 = !_2;
_6 = _1.1;
_8 = _9;
_1.2 = [_8,_8,_8,_8,_8,_9];
_9 = _8;
_8 = _9 - _9;
_1.0 = !34140945801334133026031371119272242983_i128;
_6 = _4;
_10 = !1453188080_u32;
_1.1 = !_5;
Goto(bb7)
}
bb7 = {
_5 = !_6;
_6 = !_5;
_11 = !_8;
_4 = _2;
Goto(bb8)
}
bb8 = {
_5 = !_6;
_6 = _5;
_8 = _11;
_13 = (-16320_i16) + 20390_i16;
Goto(bb9)
}
bb9 = {
_3 = [_1.1,_4,_6,_4,_4,_2];
_11 = _8;
_8 = 6931_u16 as isize;
_1.1 = _6;
RET = 1912110957_i32;
_16.2 = 0_usize as f64;
_10 = 2462569682_u32 ^ 603262575_u32;
_9 = 15278587356157244405_u64 as isize;
_11 = _8 | _9;
_10 = 5197926194361532059_i64 as u32;
_15 = 49490990524119110350744534653529807217_u128 as f32;
_6 = _4;
_16.0 = '\u{38cc2}';
_1.2 = [_8,_11,_11,_11,_8,_8];
_12 = 5_usize + 4_usize;
_16.1 = [_4];
_5 = _4 < _2;
_15 = _16.2 as f32;
_18 = _7;
_19 = Adt50::Variant3 { fld0: RET };
_2 = !_6;
match Field::<i32>(Variant(_19, 3), 0) {
0 => bb1,
1 => bb10,
2 => bb11,
3 => bb12,
1912110957 => bb14,
_ => bb13
}
}
bb10 = {
_5 = !_6;
_6 = _5;
_8 = _11;
_13 = (-16320_i16) + 20390_i16;
Goto(bb9)
}
bb11 = {
Return()
}
bb12 = {
_1.1 = _5;
_6 = !_2;
_1.0 = (-117723914539760986732177453094346736466_i128) ^ 63509671320150988346655106660606376092_i128;
_4 = _1.1 | _2;
_8 = 4944571396982495642_i64 as isize;
_9 = _8 ^ _8;
_5 = !_2;
_6 = _1.1;
_8 = _9;
_1.2 = [_8,_8,_8,_8,_8,_9];
_9 = _8;
_8 = _9 - _9;
_1.0 = !34140945801334133026031371119272242983_i128;
_6 = _4;
_10 = !1453188080_u32;
_1.1 = !_5;
Goto(bb7)
}
bb13 = {
Return()
}
bb14 = {
_6 = _1.1 & _2;
_4 = _6 != _6;
_11 = _8;
_17 = Adt47::Variant2 { fld0: 16812398273297408957239289217982072075_u128,fld1: _1,fld2: _8 };
RET = _13 as i32;
_16.2 = _12 as f64;
_10 = !770893964_u32;
_14 = _16.2 + _16.2;
_21 = _14;
place!(Field::<u128>(Variant(_17, 2), 0)) = 153190609422296033455421963490487063156_u128;
_2 = _1.1;
place!(Field::<isize>(Variant(_17, 2), 2)) = _11;
_11 = Field::<isize>(Variant(_17, 2), 2);
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(19_usize, 2_usize, Move(_2), 8_usize, Move(_8), 5_usize, Move(_5), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(19_usize, 1_usize, Move(_1), 10_usize, Move(_10), 4_usize, Move(_4), 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{b6340}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(22_i8), std::hint::black_box((-29550_i16)), std::hint::black_box((-2038621342_i32)), std::hint::black_box((-6931262168629750358_i64)), std::hint::black_box(3935338761050837777165417956197726869_i128), std::hint::black_box(1_usize), std::hint::black_box(141_u8), std::hint::black_box(8429_u16), std::hint::black_box(3289669462_u32), std::hint::black_box(6530628813196045507_u64), std::hint::black_box(158354104263923602495053907881204641775_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: u128,
fld1: f64,
fld2: *const *mut i16,
fld3: [i32; 3],
fld4: *const i128,
fld5: i32,
fld6: *mut i16,

},
Variant1{
fld0: u64,

},
Variant2{
fld0: bool,
fld1: *const f64,
fld2: usize,
fld3: [isize; 7],
fld4: i16,
fld5: [bool; 1],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt44 {
Variant0{
fld0: [u16; 7],

},
Variant1{
fld0: [u128; 5],
fld1: u32,
fld2: usize,

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: i32,
fld1: (i64, bool),

},
Variant1{
fld0: [i32; 3],
fld1: f32,
fld2: *const *mut i16,
fld3: u16,

},
Variant2{
fld0: f64,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: u64,
fld1: u128,
fld2: isize,
fld3: *const u16,
fld4: [bool; 6],
fld5: i32,

},
Variant1{
fld0: u64,
fld1: (*mut i16, u32, i16),
fld2: [u128; 5],
fld3: *const u16,
fld4: u8,
fld5: i32,
fld6: *const i128,

},
Variant2{
fld0: Adt43,
fld1: [i32; 3],
fld2: *const *mut i16,
fld3: i128,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: f64,
fld1: u64,
fld2: (char, [bool; 1], f64),

},
Variant1{
fld0: bool,
fld1: (i64, bool),
fld2: u64,
fld3: (bool, [i32; 7], i32, u16, (i64, bool)),
fld4: Adt46,
fld5: *const f64,
fld6: [bool; 1],
fld7: f64,

},
Variant2{
fld0: u128,
fld1: (i128, bool, [isize; 6]),
fld2: isize,

},
Variant3{
fld0: *mut i16,
fld1: u32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: [bool; 6],

},
Variant1{
fld0: *const f64,
fld1: [bool; 6],
fld2: isize,
fld3: *const *mut i16,

},
Variant2{
fld0: *const i128,
fld1: *mut u64,
fld2: *mut f32,
fld3: *const *mut i16,
fld4: Adt43,
fld5: u32,

},
Variant3{
fld0: [u128; 5],
fld1: u8,
fld2: f64,
fld3: Adt43,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: bool,
fld1: *const *mut *mut i16,
fld2: *mut [isize; 6],
fld3: u8,
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: *mut u64,
fld1: *mut [isize; 6],
fld2: Adt47,
fld3: u8,
fld4: *const *mut i16,

},
Variant1{
fld0: i16,

},
Variant2{
fld0: i64,

},
Variant3{
fld0: i32,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt47,
fld1: char,
fld2: *mut *mut i16,
fld3: [u128; 5],
fld4: [isize; 7],
fld5: *mut f32,
fld6: Adt48,
fld7: [i32; 3],

},
Variant1{
fld0: *mut *mut i16,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: i64,
fld1: f64,
fld2: *const u16,
fld3: (i128, bool, [isize; 6]),
fld4: [bool; 1],

},
Variant1{
fld0: i32,
fld1: [bool; 1],
fld2: isize,
fld3: Adt44,

},
Variant2{
fld0: *mut *mut i16,
fld1: (char, [bool; 1], f64),

},
Variant3{
fld0: f32,
fld1: [u16; 7],
fld2: *mut [isize; 6],
fld3: i8,
fld4: [isize; 6],
fld5: i32,
fld6: (i64, bool),

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: *mut i16,
fld1: Adt44,
fld2: i16,

},
Variant1{
fld0: i32,
fld1: char,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt43,
fld1: i128,
fld2: Adt53,
fld3: (i64, bool),
fld4: Adt51,

},
Variant1{
fld0: [isize; 7],
fld1: char,

},
Variant2{
fld0: (*mut i16, u32, i16),
fld1: u128,
fld2: *mut f32,
fld3: i8,
fld4: Adt46,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: [bool; 1],
fld1: *const *mut *mut i16,
fld2: usize,
fld3: [isize; 7],
}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt55,
fld1: *const f64,
fld2: isize,
fld3: u32,
fld4: *mut *mut i16,
fld5: i32,
fld6: [isize; 6],
fld7: usize,
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: *mut f32,
fld1: [i32; 3],
fld2: usize,
fld3: Adt51,
fld4: (i128, bool, [isize; 6]),

},
Variant1{
fld0: Adt51,
fld1: u8,
fld2: *const *mut i16,
fld3: [i32; 3],
fld4: *mut [i32; 3],
fld5: *const u16,
fld6: i64,
fld7: i128,

},
Variant2{
fld0: Adt52,
fld1: u64,
fld2: *mut [isize; 6],
fld3: *const u16,
fld4: (*mut i16, u32, i16),

}}
#[derive(Debug)]
pub struct Adt58 {
fld0: *const *mut *mut i16,
fld1: Adt51,
fld2: i16,
fld3: u64,
}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: [i32; 7],
fld1: Adt43,
fld2: Adt45,
fld3: Adt53,
fld4: f64,

},
Variant1{
fld0: *mut [i32; 3],
fld1: [i32; 3],
fld2: (bool, [i32; 7], i32, u16, (i64, bool)),
fld3: *mut u64,
fld4: i16,

},
Variant2{
fld0: i16,

},
Variant3{
fld0: bool,
fld1: Adt44,
fld2: isize,
fld3: i128,
fld4: u16,
fld5: (char, [bool; 1], f64),

}}

