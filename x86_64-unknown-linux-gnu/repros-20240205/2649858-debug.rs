#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u16,mut _2: i64,mut _3: isize,mut _4: i8) -> bool {
mir! {
type RET = bool;
let _5: i64;
let _6: Adt55;
let _7: *const [i64; 7];
let _8: char;
let _9: [isize; 7];
let _10: i16;
let _11: Adt51;
let _12: i128;
let _13: Adt55;
let _14: i64;
let _15: f64;
let _16: isize;
let _17: Adt45;
let _18: Adt57;
let _19: [isize; 7];
let _20: (char, i16, isize, u16);
let _21: Adt54;
let _22: Adt51;
let _23: ();
let _24: ();
{
_1 = 27869_u16 - 41436_u16;
_2 = (-6539654908729981187_i64);
_2 = (-5759335529322838682_i64) & (-3557005715705192486_i64);
_1 = 64202_u16;
RET = true;
_5 = _2 >> _2;
_3 = 56_isize;
_3 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
Goto(bb1)
}
bb1 = {
RET = !false;
_4 = (-1_i8) | 111_i8;
RET = !false;
_1 = 19618_u16;
_5 = _2;
_2 = '\u{109e63}' as i64;
_5 = _2;
RET = _1 == _1;
_4 = (-85_i8) * (-119_i8);
_2 = _5;
_1 = 45360_u16;
_6.fld1 = (-1673029853_i32) as f64;
_6.fld2.0 = [3802138536364137272_usize,0_usize];
_8 = '\u{48ab9}';
_3 = 310735444095326550268869386187517691072_u128 as isize;
RET = !false;
_4 = _6.fld1 as i8;
_5 = -_2;
_1 = 14796_u16;
_6.fld1 = _4 as f64;
_6.fld2.0 = [1_usize,5_usize];
_9 = [_3,_3,_3,_3,_3,_3,_3];
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
14796 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_4 = !14_i8;
_9 = [_3,_3,_3,_3,_3,_3,_3];
_9 = [_3,_3,_3,_3,_3,_3,_3];
_6.fld1 = 194504803786308396_usize as f64;
_4 = 1_usize as i8;
_2 = _5 ^ _5;
_12 = (-90589273124349139351811602400056615658_i128);
_10 = (-29536_i16) - 15612_i16;
_13.fld2.0 = _6.fld2.0;
RET = _12 != _12;
_13.fld1 = -_6.fld1;
Goto(bb7)
}
bb7 = {
_9 = [_3,_3,_3,_3,_3,_3,_3];
_1 = 10556_u16;
_1 = 5734_u16 - 47350_u16;
_5 = _2;
_9 = [_3,_3,_3,_3,_3,_3,_3];
_6.fld1 = -_13.fld1;
_13.fld2 = (_6.fld2.0,);
_13.fld2 = _6.fld2;
_14 = _5 & _2;
_5 = -_2;
_5 = _14;
_13.fld2.0 = _6.fld2.0;
_13.fld1 = _6.fld1 * _6.fld1;
RET = _13.fld1 <= _13.fld1;
_8 = '\u{f3299}';
_6.fld2 = (_13.fld2.0,);
_1 = _4 as u16;
_6.fld2.0 = _13.fld2.0;
_10 = 4597_i16 << _14;
_15 = _6.fld1 * _13.fld1;
_9 = [_3,_3,_3,_3,_3,_3,_3];
_2 = _14 << _3;
_1 = 26007_u16;
_13.fld2 = (_6.fld2.0,);
_10 = 31580_i16;
_10 = -15848_i16;
Call(_13.fld2.0 = fn1(_6.fld2, _1, _6.fld2, _9, _2, _13.fld1, _13.fld1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_16 = _3 << _1;
_8 = '\u{3084f}';
_5 = _14 >> _14;
_6.fld1 = _16 as f64;
_5 = _14;
_1 = 0_usize as u16;
_12 = !17117672053127098403230526510666278717_i128;
_1 = !9521_u16;
_6.fld2 = (_13.fld2.0,);
_5 = _2;
_12 = 7309507295761287511_u64 as i128;
Goto(bb9)
}
bb9 = {
_12 = !(-86604393387255131520103605133111666566_i128);
_4 = 43_i8 - (-104_i8);
_16 = _3 << _5;
_20.1 = _10;
_19 = [_16,_16,_16,_3,_16,_16,_16];
_10 = _20.1 & _20.1;
_6.fld2.0 = [4_usize,5_usize];
_20 = (_8, _10, _16, _1);
_13.fld2 = (_6.fld2.0,);
_8 = _20.0;
RET = !true;
_20.0 = _8;
_20.2 = _16 ^ _16;
RET = _20.2 <= _16;
_13.fld2 = (_6.fld2.0,);
Goto(bb10)
}
bb10 = {
Call(_23 = dump_var(0_usize, 9_usize, Move(_9), 5_usize, Move(_5), 16_usize, Move(_16), 2_usize, Move(_2)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_23 = dump_var(0_usize, 10_usize, Move(_10), 4_usize, Move(_4), 24_usize, _24, 24_usize, _24), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: ([usize; 2],),mut _2: u16,mut _3: ([usize; 2],),mut _4: [isize; 7],mut _5: i64,mut _6: f64,mut _7: f64) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _8: Adt54;
let _9: ((char, i16, isize, u16), usize, [isize; 3]);
let _10: [i64; 7];
let _11: [i32; 8];
let _12: f32;
let _13: f32;
let _14: i8;
let _15: isize;
let _16: [isize; 7];
let _17: [u8; 5];
let _18: (u128, isize);
let _19: f64;
let _20: [u8; 5];
let _21: Adt57;
let _22: isize;
let _23: Adt54;
let _24: [i32; 8];
let _25: isize;
let _26: (f32, u16);
let _27: [isize; 7];
let _28: isize;
let _29: ();
let _30: ();
{
_3.0 = [6_usize,10523297241882717938_usize];
_1.0 = [9578616366337057211_usize,3457181924954525752_usize];
RET = [1_usize,4_usize];
_4 = [9223372036854775807_isize,9223372036854775807_isize,51_isize,9223372036854775807_isize,9223372036854775807_isize,(-21_isize),21_isize];
Call(_5 = fn2(_3, _4, _4, _1, _4, _7, _4, _1, _2, _4, _4, _7, _6, _4, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 59758_u16 & 12909_u16;
_5 = 199554336323100561_i64 | 2697642184930484141_i64;
_2 = 60112_u16 >> _5;
_9.2 = [47_isize,(-57_isize),9223372036854775807_isize];
_9.1 = _6 as usize;
_9.0.2 = 9223372036854775807_isize;
_9.0.1 = !(-6258_i16);
_9.0 = ('\u{82ed6}', (-30845_i16), 8_isize, _2);
_9.0.0 = '\u{107d41}';
_5 = !7878695932891245820_i64;
_9.0.0 = '\u{a0770}';
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_1.0 = [_9.1,_9.1];
_3.0 = _1.0;
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_9.2 = [_9.0.2,_9.0.2,_9.0.2];
_9.1 = 919610595601073310_usize + 6_usize;
_9.0.1 = _9.1 as i16;
Goto(bb2)
}
bb2 = {
_14 = 103_i8 + 3_i8;
_9.0 = ('\u{4c48b}', 5964_i16, 9223372036854775807_isize, _2);
_9.2 = [_9.0.2,_9.0.2,_9.0.2];
_1 = (_3.0,);
_13 = _9.0.1 as f32;
_9.0.2 = (-109_isize) | 9223372036854775807_isize;
_12 = _6 as f32;
_5 = !2378981424793230351_i64;
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_9.0.1 = _13 as i16;
_14 = !(-30_i8);
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_3.0 = RET;
_3.0 = [_9.1,_9.1];
_10 = [_5,_5,_5,_5,_5,_5,_5];
_2 = _9.0.3 & _9.0.3;
RET = _1.0;
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_6 = _7 * _7;
_12 = -_13;
_15 = !_9.0.2;
_11 = [1890679493_i32,(-1927549231_i32),(-751737751_i32),920644319_i32,(-948244756_i32),1359802194_i32,228010683_i32,(-58616545_i32)];
RET = [_9.1,_9.1];
Goto(bb3)
}
bb3 = {
_4 = [_15,_9.0.2,_15,_9.0.2,_15,_9.0.2,_15];
_2 = 21090301859796265313384335349162386164_i128 as u16;
_1 = (RET,);
_2 = !_9.0.3;
_9.0 = ('\u{26104}', 21488_i16, _15, _2);
_11 = [(-1733587542_i32),(-1805943514_i32),(-964490768_i32),997838271_i32,(-1229631455_i32),413817153_i32,(-43888556_i32),1049459277_i32];
_3.0 = _1.0;
_16 = [_9.0.2,_15,_9.0.2,_15,_9.0.2,_9.0.2,_15];
_8 = Adt54::Variant0 { fld0: _7,fld1: _11 };
_9.1 = _9.0.0 as usize;
_8 = Adt54::Variant1 { fld0: _12 };
_7 = _6 * _6;
_9.1 = 10293844188105904461_usize | 3_usize;
_18 = (127514418857052176097566909945332537061_u128, _9.0.2);
_7 = -_6;
_6 = _7 + _7;
_11 = [1300697091_i32,1583883552_i32,150601661_i32,2138626617_i32,1937830102_i32,(-404601496_i32),623361742_i32,1116686355_i32];
_1.0 = [_9.1,_9.1];
RET = [_9.1,_9.1];
_11 = [(-348244001_i32),(-95036731_i32),(-1233524906_i32),1703363295_i32,302130436_i32,1683063050_i32,862367988_i32,224402704_i32];
_11 = [(-978758233_i32),1277699126_i32,220180311_i32,662309985_i32,(-876238649_i32),(-2039492928_i32),(-910902288_i32),1314246402_i32];
_4 = [_18.1,_15,_15,_18.1,_18.1,_9.0.2,_9.0.2];
_18.1 = -_9.0.2;
_4 = [_18.1,_15,_9.0.2,_18.1,_9.0.2,_18.1,_9.0.2];
_16 = [_15,_18.1,_15,_15,_15,_15,_15];
_12 = Field::<f32>(Variant(_8, 1), 0);
_9.0.2 = !_18.1;
_15 = _7 as isize;
Goto(bb4)
}
bb4 = {
_10 = [_5,_5,_5,_5,_5,_5,_5];
_3 = (RET,);
_4 = [_15,_18.1,_18.1,_15,_9.0.2,_9.0.2,_15];
RET = _3.0;
_10 = [_5,_5,_5,_5,_5,_5,_5];
_10 = [_5,_5,_5,_5,_5,_5,_5];
place!(Field::<f32>(Variant(_8, 1), 0)) = 1091894631_i32 as f32;
_14 = 13_i8;
match _14 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
13 => bb11,
_ => bb10
}
}
bb5 = {
_4 = [_15,_9.0.2,_15,_9.0.2,_15,_9.0.2,_15];
_2 = 21090301859796265313384335349162386164_i128 as u16;
_1 = (RET,);
_2 = !_9.0.3;
_9.0 = ('\u{26104}', 21488_i16, _15, _2);
_11 = [(-1733587542_i32),(-1805943514_i32),(-964490768_i32),997838271_i32,(-1229631455_i32),413817153_i32,(-43888556_i32),1049459277_i32];
_3.0 = _1.0;
_16 = [_9.0.2,_15,_9.0.2,_15,_9.0.2,_9.0.2,_15];
_8 = Adt54::Variant0 { fld0: _7,fld1: _11 };
_9.1 = _9.0.0 as usize;
_8 = Adt54::Variant1 { fld0: _12 };
_7 = _6 * _6;
_9.1 = 10293844188105904461_usize | 3_usize;
_18 = (127514418857052176097566909945332537061_u128, _9.0.2);
_7 = -_6;
_6 = _7 + _7;
_11 = [1300697091_i32,1583883552_i32,150601661_i32,2138626617_i32,1937830102_i32,(-404601496_i32),623361742_i32,1116686355_i32];
_1.0 = [_9.1,_9.1];
RET = [_9.1,_9.1];
_11 = [(-348244001_i32),(-95036731_i32),(-1233524906_i32),1703363295_i32,302130436_i32,1683063050_i32,862367988_i32,224402704_i32];
_11 = [(-978758233_i32),1277699126_i32,220180311_i32,662309985_i32,(-876238649_i32),(-2039492928_i32),(-910902288_i32),1314246402_i32];
_4 = [_18.1,_15,_15,_18.1,_18.1,_9.0.2,_9.0.2];
_18.1 = -_9.0.2;
_4 = [_18.1,_15,_9.0.2,_18.1,_9.0.2,_18.1,_9.0.2];
_16 = [_15,_18.1,_15,_15,_15,_15,_15];
_12 = Field::<f32>(Variant(_8, 1), 0);
_9.0.2 = !_18.1;
_15 = _7 as isize;
Goto(bb4)
}
bb6 = {
_14 = 103_i8 + 3_i8;
_9.0 = ('\u{4c48b}', 5964_i16, 9223372036854775807_isize, _2);
_9.2 = [_9.0.2,_9.0.2,_9.0.2];
_1 = (_3.0,);
_13 = _9.0.1 as f32;
_9.0.2 = (-109_isize) | 9223372036854775807_isize;
_12 = _6 as f32;
_5 = !2378981424793230351_i64;
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_9.0.1 = _13 as i16;
_14 = !(-30_i8);
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_3.0 = RET;
_3.0 = [_9.1,_9.1];
_10 = [_5,_5,_5,_5,_5,_5,_5];
_2 = _9.0.3 & _9.0.3;
RET = _1.0;
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_6 = _7 * _7;
_12 = -_13;
_15 = !_9.0.2;
_11 = [1890679493_i32,(-1927549231_i32),(-751737751_i32),920644319_i32,(-948244756_i32),1359802194_i32,228010683_i32,(-58616545_i32)];
RET = [_9.1,_9.1];
Goto(bb3)
}
bb7 = {
_2 = 59758_u16 & 12909_u16;
_5 = 199554336323100561_i64 | 2697642184930484141_i64;
_2 = 60112_u16 >> _5;
_9.2 = [47_isize,(-57_isize),9223372036854775807_isize];
_9.1 = _6 as usize;
_9.0.2 = 9223372036854775807_isize;
_9.0.1 = !(-6258_i16);
_9.0 = ('\u{82ed6}', (-30845_i16), 8_isize, _2);
_9.0.0 = '\u{107d41}';
_5 = !7878695932891245820_i64;
_9.0.0 = '\u{a0770}';
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_1.0 = [_9.1,_9.1];
_3.0 = _1.0;
_4 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_9.2 = [_9.0.2,_9.0.2,_9.0.2];
_9.1 = 919610595601073310_usize + 6_usize;
_9.0.1 = _9.1 as i16;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = _3;
_1 = (RET,);
RET = [_9.1,_9.1];
_17 = [223_u8,210_u8,13_u8,47_u8,114_u8];
_8 = Adt54::Variant0 { fld0: _6,fld1: _11 };
_1 = (_3.0,);
_1.0 = [_9.1,_9.1];
_12 = -_13;
_11 = [(-983285409_i32),1377505324_i32,1559295570_i32,601747120_i32,(-1220221238_i32),1265008953_i32,1267543041_i32,1778958103_i32];
_3.0 = [_9.1,_9.1];
place!(Field::<f64>(Variant(_8, 0), 0)) = _6;
_9.0 = ('\u{fc51c}', (-19774_i16), _15, _2);
_18 = (273263918233734306917830186333958623690_u128, _9.0.2);
RET = _1.0;
_18.0 = 15515414827536101196057093113842365291_u128;
_19 = _6 * Field::<f64>(Variant(_8, 0), 0);
_13 = _12;
_20 = _17;
_9.0.3 = _2;
_12 = _13 * _13;
_11 = Field::<[i32; 8]>(Variant(_8, 0), 1);
_8 = Adt54::Variant1 { fld0: _13 };
_18.1 = 4158153788_u32 as isize;
_20 = [43_u8,192_u8,243_u8,40_u8,75_u8];
_9.2 = [_9.0.2,_18.1,_18.1];
_22 = _15 & _18.1;
match _9.0.1 {
0 => bb1,
1 => bb8,
2 => bb3,
340282366920938463463374607431768191682 => bb12,
_ => bb9
}
}
bb12 = {
_12 = -Field::<f32>(Variant(_8, 1), 0);
_18.1 = _2 as isize;
_18.0 = 103681451054498700497129299144719422364_u128;
_10 = [_5,_5,_5,_5,_5,_5,_5];
_19 = _7 - _7;
_16 = _4;
_19 = _7;
_2 = _9.0.3 >> _9.0.1;
_9.0.0 = '\u{b2db7}';
_8 = Adt54::Variant0 { fld0: _6,fld1: _11 };
_9.1 = !3_usize;
_3.0 = [_9.1,_9.1];
_7 = Field::<f64>(Variant(_8, 0), 0) - Field::<f64>(Variant(_8, 0), 0);
_12 = _13;
_3.0 = [_9.1,_9.1];
_18 = (182685240829960324122299966332432070449_u128, _15);
_6 = Field::<f64>(Variant(_8, 0), 0) + _7;
_1.0 = [_9.1,_9.1];
_5 = 1953621863_i32 as i64;
_7 = Field::<f64>(Variant(_8, 0), 0) * _6;
place!(Field::<f64>(Variant(_8, 0), 0)) = _6 * _7;
_20 = _17;
RET = [_9.1,_9.1];
_16 = [_22,_9.0.2,_18.1,_22,_15,_18.1,_22];
_18.1 = _22;
_1.0 = [_9.1,_9.1];
place!(Field::<[i32; 8]>(Variant(_8, 0), 1)) = [(-1905104119_i32),1011897805_i32,1360680334_i32,(-1719827900_i32),(-363578758_i32),1763701211_i32,(-1310157796_i32),163273231_i32];
_9.0.0 = '\u{57156}';
_18.0 = !138804684366105162101881567445591549664_u128;
_7 = -Field::<f64>(Variant(_8, 0), 0);
Call(_9.0.3 = core::intrinsics::transmute(_9.0.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_3 = (_1.0,);
_1.0 = [_9.1,_9.1];
_19 = -_7;
_20 = _17;
_19 = -Field::<f64>(Variant(_8, 0), 0);
_22 = _15;
_5 = _9.0.0 as i64;
SetDiscriminant(_8, 1);
_18 = (245883939449828235094075682819284854954_u128, _22);
_9.1 = _14 as usize;
_9.0.0 = '\u{39763}';
_15 = !_18.1;
_1 = (RET,);
_20 = [239_u8,187_u8,89_u8,115_u8,181_u8];
_9.2 = [_15,_18.1,_15];
place!(Field::<f32>(Variant(_8, 1), 0)) = _13;
_26 = (_12, _2);
_1.0 = [_9.1,_9.1];
_17 = [235_u8,30_u8,174_u8,67_u8,121_u8];
_12 = -Field::<f32>(Variant(_8, 1), 0);
_13 = (-213330584_i32) as f32;
RET = [_9.1,_9.1];
place!(Field::<f32>(Variant(_8, 1), 0)) = _12 * _12;
_16 = _4;
_15 = _9.0.2 + _9.0.2;
Call(_9.0.1 = core::intrinsics::bswap(10421_i16), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_7 = -_6;
_24 = _11;
_8 = Adt54::Variant1 { fld0: _13 };
_28 = _9.0.2 & _15;
_13 = _26.0 + _26.0;
_10 = [_5,_5,_5,_5,_5,_5,_5];
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(1_usize, 16_usize, Move(_16), 5_usize, Move(_5), 15_usize, Move(_15), 28_usize, Move(_28)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(1_usize, 14_usize, Move(_14), 2_usize, Move(_2), 10_usize, Move(_10), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: ([usize; 2],),mut _2: [isize; 7],mut _3: [isize; 7],mut _4: ([usize; 2],),mut _5: [isize; 7],mut _6: f64,mut _7: [isize; 7],mut _8: ([usize; 2],),mut _9: u16,mut _10: [isize; 7],mut _11: [isize; 7],mut _12: f64,mut _13: f64,mut _14: [isize; 7],mut _15: [isize; 7]) -> i64 {
mir! {
type RET = i64;
let _16: u128;
let _17: f32;
let _18: (u128, isize);
let _19: &'static usize;
let _20: [usize; 2];
let _21: Adt52;
let _22: [usize; 2];
let _23: u64;
let _24: f64;
let _25: i64;
let _26: (([usize; 2],), ([usize; 2],));
let _27: Adt54;
let _28: [usize; 2];
let _29: u32;
let _30: Adt52;
let _31: f64;
let _32: ();
let _33: ();
{
_8.0 = [3156603082023835824_usize,2_usize];
RET = 8704949743625654225_i64 >> _9;
_6 = _12;
_13 = _12 * _6;
_5 = [(-115_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_15 = _11;
_6 = _12 + _13;
_8.0 = [15384029099789444400_usize,3640981732292343482_usize];
_1 = (_8.0,);
RET = 66_i8 as i64;
_16 = 272948070061796630249920127743726886308_u128 + 85621901145088336432433220381163176492_u128;
_4.0 = [2_usize,1_usize];
RET = (-8017600651030935091_i64);
_8 = (_4.0,);
_14 = [89_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-23_isize),24_isize,(-9223372036854775808_isize),(-8_isize)];
_8.0 = [3335036853002646885_usize,6_usize];
_16 = 71553540453286947886809186614050618201_u128 | 105161741372343788065900434793711536199_u128;
_19 = &_21.fld2.3.1;
_21.fld2.0 = false;
_8 = _4;
_21.fld1 = [139_u8,229_u8,216_u8,239_u8,109_u8];
Goto(bb1)
}
bb1 = {
_19 = &(*_19);
Goto(bb2)
}
bb2 = {
_21.fld4 = core::ptr::addr_of_mut!(_18);
_22 = [1_usize,3_usize];
Call(_22 = fn3(_10, _8.0, _5, _3, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_14 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,65_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_21.fld2.3.0.1 = 18_isize as i16;
_12 = -_13;
_23 = !17528268734321275625_u64;
_18.1 = 26_isize + (-9223372036854775808_isize);
match _9 {
0 => bb1,
1 => bb4,
2 => bb5,
26007 => bb7,
_ => bb6
}
}
bb4 = {
_21.fld4 = core::ptr::addr_of_mut!(_18);
_22 = [1_usize,3_usize];
Call(_22 = fn3(_10, _8.0, _5, _3, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_19 = &(*_19);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_21.fld2.3.2 = [_18.1,_18.1,_18.1];
_21.fld2.1 = [4_usize,6_usize];
_4 = (_21.fld2.1,);
_20 = [0_usize,337747174428408361_usize];
_17 = 7747336714720046857_usize as f32;
_18.0 = !_16;
_21.fld2.3.0.1 = _17 as i16;
_1 = (_4.0,);
_21.fld1 = [79_u8,69_u8,10_u8,17_u8,199_u8];
_18.1 = (-52_isize);
_15 = [_18.1,_18.1,_18.1,_18.1,_18.1,_18.1,_18.1];
_5 = [_18.1,_18.1,_18.1,_18.1,_18.1,_18.1,_18.1];
_23 = 5734243919100231605_u64;
_21.fld4 = core::ptr::addr_of_mut!(_18);
_4.0 = _8.0;
_1.0 = [4_usize,8565567029134062255_usize];
_21.fld3 = [_18.1,_18.1,_18.1,_18.1,_18.1];
_21.fld2.3.0 = ('\u{1429c}', (-21802_i16), _18.1, _9);
Goto(bb8)
}
bb8 = {
_25 = -RET;
_4.0 = [47384434886524360_usize,7_usize];
_1.0 = [1_usize,15786671420161995860_usize];
_11 = [_21.fld2.3.0.2,_21.fld2.3.0.2,_18.1,_18.1,_18.1,_18.1,_21.fld2.3.0.2];
_21.fld4 = core::ptr::addr_of_mut!(_18);
_19 = &(*_19);
_21.fld2.3.0 = ('\u{a9f6a}', 20171_i16, _18.1, _9);
_21.fld2.3.0.2 = 5401141107798764816_usize as isize;
_14 = _7;
_15 = [_18.1,_18.1,_21.fld2.3.0.2,_21.fld2.3.0.2,_18.1,_18.1,_21.fld2.3.0.2];
_7 = [_21.fld2.3.0.2,_21.fld2.3.0.2,_18.1,_18.1,_18.1,_18.1,_21.fld2.3.0.2];
_19 = &(*_19);
_12 = -_6;
_21.fld2.2 = !_23;
_23 = _21.fld2.2 >> _16;
_21.fld2.3.2 = [_21.fld2.3.0.2,_18.1,_18.1];
_10 = [_21.fld2.3.0.2,_18.1,_18.1,_21.fld2.3.0.2,_21.fld2.3.0.2,_21.fld2.3.0.2,_21.fld2.3.0.2];
match _21.fld2.3.0.1 {
0 => bb4,
1 => bb3,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
20171 => bb14,
_ => bb13
}
}
bb9 = {
_21.fld4 = core::ptr::addr_of_mut!(_18);
_22 = [1_usize,3_usize];
Call(_22 = fn3(_10, _8.0, _5, _3, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_19 = &(*_19);
Goto(bb2)
}
bb12 = {
_21.fld4 = core::ptr::addr_of_mut!(_18);
_22 = [1_usize,3_usize];
Call(_22 = fn3(_10, _8.0, _5, _3, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_19 = &(*_19);
Goto(bb2)
}
bb14 = {
_30.fld2.4 = core::ptr::addr_of!(_29);
_21.fld2.4 = core::ptr::addr_of!(_29);
_30.fld2.3.2 = _21.fld2.3.2;
_15 = [_21.fld2.3.0.2,_21.fld2.3.0.2,_21.fld2.3.0.2,_21.fld2.3.0.2,_21.fld2.3.0.2,_18.1,_18.1];
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(2_usize, 22_usize, Move(_22), 8_usize, Move(_8), 10_usize, Move(_10), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(2_usize, 16_usize, Move(_16), 9_usize, Move(_9), 23_usize, Move(_23), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(2_usize, 3_usize, Move(_3), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [isize; 7],mut _2: [usize; 2],mut _3: [isize; 7],mut _4: [isize; 7],mut _5: [isize; 7]) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _6: [u8; 5];
let _7: f32;
let _8: (f32, u16);
let _9: (u8, u128);
let _10: Adt50;
let _11: isize;
let _12: u16;
let _13: Adt45;
let _14: char;
let _15: isize;
let _16: isize;
let _17: Adt48;
let _18: isize;
let _19: (char, i16, isize, u16);
let _20: i8;
let _21: ([usize; 2],);
let _22: i128;
let _23: isize;
let _24: bool;
let _25: f32;
let _26: (char, i16, isize, u16);
let _27: (([usize; 2],), ([usize; 2],));
let _28: isize;
let _29: char;
let _30: char;
let _31: [isize; 7];
let _32: (char, i16, isize, u16);
let _33: i64;
let _34: [u8; 5];
let _35: isize;
let _36: u128;
let _37: [i32; 8];
let _38: Adt60;
let _39: f32;
let _40: ();
let _41: ();
{
RET = [15322992138037845290_usize,8139140756763827406_usize];
RET = [4_usize,4_usize];
_2 = [6703082508766480629_usize,2088913931156862064_usize];
_4 = _5;
_4 = _1;
_1 = [(-57_isize),117_isize,107_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [4_usize,17770860202919063205_usize];
_7 = 16024982685430194193_u64 as f32;
_2 = [5_usize,7_usize];
_3 = [61_isize,119_isize,25_isize,85_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-89_isize)];
_3 = [(-9223372036854775808_isize),(-60_isize),9223372036854775807_isize,(-45_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-2_isize),(-22_isize),(-9223372036854775808_isize),105_isize];
_2 = [10716450763033421028_usize,3_usize];
_3 = [(-75_isize),(-89_isize),(-9223372036854775808_isize),(-37_isize),9223372036854775807_isize,9223372036854775807_isize,2_isize];
_5 = [57_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),117_isize,51_isize,73_isize];
_8.0 = 1266632556_u32 as f32;
_8.0 = _7 - _7;
_6 = [60_u8,93_u8,165_u8,158_u8,123_u8];
_6 = [53_u8,218_u8,122_u8,240_u8,227_u8];
RET = [4_usize,6704340863736585717_usize];
Goto(bb1)
}
bb1 = {
_8 = (_7, 13498_u16);
_4 = _5;
_9.0 = 254_u8 + 55_u8;
_6 = [_9.0,_9.0,_9.0,_9.0,_9.0];
_8 = (_7, 18948_u16);
_8 = (_7, 12234_u16);
_9.0 = 75_u8 + 118_u8;
_9.1 = 2100427108867594420_usize as u128;
_8 = (_7, 31482_u16);
_2 = [3_usize,14270590577157438835_usize];
RET = [5_usize,6030508620685351904_usize];
_8.0 = 4436297330502267888_i64 as f32;
match _8.1 {
0 => bb2,
1 => bb3,
31482 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_2 = [1721597541446037497_usize,3_usize];
_2 = [14929912798240856625_usize,4_usize];
_8 = (_7, 23739_u16);
_2 = RET;
_3 = [(-9223372036854775808_isize),90_isize,119_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = _7 as isize;
_7 = _8.0;
_9.0 = 52_u8;
RET = [13857120289842008200_usize,7722219482390861185_usize];
_4 = _1;
_12 = !_8.1;
_7 = _8.0;
_9.1 = !217059306504594437170700333825544300578_u128;
_1 = [_11,_11,_11,_11,_11,_11,_11];
_9.0 = 89_u8 * 124_u8;
_1 = [_11,_11,_11,_11,_11,_11,_11];
_8 = (_7, _12);
_5 = [_11,_11,_11,_11,_11,_11,_11];
Goto(bb6)
}
bb6 = {
_2 = [1_usize,17897153689891397555_usize];
_2 = RET;
_3 = [_11,_11,_11,_11,_11,_11,_11];
_7 = _8.0 - _8.0;
_8.1 = _12 >> _12;
_1 = [_11,_11,_11,_11,_11,_11,_11];
RET = [17718495202140375471_usize,1_usize];
_2 = [16274077123048476554_usize,2_usize];
_9.1 = 122223170989446540376827268497996319310_u128;
_8.1 = _9.1 as u16;
_8.1 = _12 - _12;
_8 = (_7, _12);
_7 = _8.0 + _8.0;
_14 = '\u{2eb1b}';
_8.0 = _7 + _7;
_5 = [_11,_11,_11,_11,_11,_11,_11];
_8 = (_7, _12);
_9 = (141_u8, 300271742032279212626661563174980451567_u128);
_1 = _4;
_6 = [_9.0,_9.0,_9.0,_9.0,_9.0];
_8.1 = (-110_i8) as u16;
_8.1 = _12;
_11 = -(-9223372036854775808_isize);
Goto(bb7)
}
bb7 = {
_19.3 = _9.0 as u16;
Goto(bb8)
}
bb8 = {
_19.0 = _14;
_3 = _4;
_19.3 = (-1163970370_i32) as u16;
_18 = 10281386593136796951980520336707549061_i128 as isize;
_19 = (_14, 14852_i16, _18, _12);
_9 = (70_u8, 65539532392491831636370098792894925961_u128);
_8.0 = _7;
_20 = 7_i8;
RET = [7_usize,11170192371576409329_usize];
_5 = [_11,_11,_11,_19.2,_19.2,_19.2,_11];
_22 = 78683161012678278856081263117876853981_i128;
_20 = (-95_i8);
_2 = [3_usize,7912120722176386196_usize];
_11 = _19.2 >> _19.1;
_8 = (_7, _19.3);
_9.0 = _19.1 as u8;
_20 = (-3_i8);
_4 = _1;
_9 = (234_u8, 320605163048110283885856056491042453476_u128);
_21 = (RET,);
_23 = _11;
_14 = _19.0;
_26.2 = !_11;
_27.0 = _21;
match _19.1 {
14852 => bb10,
_ => bb9
}
}
bb9 = {
_2 = [1721597541446037497_usize,3_usize];
_2 = [14929912798240856625_usize,4_usize];
_8 = (_7, 23739_u16);
_2 = RET;
_3 = [(-9223372036854775808_isize),90_isize,119_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = _7 as isize;
_7 = _8.0;
_9.0 = 52_u8;
RET = [13857120289842008200_usize,7722219482390861185_usize];
_4 = _1;
_12 = !_8.1;
_7 = _8.0;
_9.1 = !217059306504594437170700333825544300578_u128;
_1 = [_11,_11,_11,_11,_11,_11,_11];
_9.0 = 89_u8 * 124_u8;
_1 = [_11,_11,_11,_11,_11,_11,_11];
_8 = (_7, _12);
_5 = [_11,_11,_11,_11,_11,_11,_11];
Goto(bb6)
}
bb10 = {
_26.2 = (-153703805_i32) as isize;
_26.2 = _11 | _11;
_2 = [7072713758503797868_usize,16840727017400574345_usize];
_25 = _7;
_26.0 = _19.0;
_28 = _22 as isize;
_22 = 4101078616472986252_u64 as i128;
_19 = (_14, 2499_i16, _26.2, _12);
_27.1.0 = [4357417868227350178_usize,15352338015839038512_usize];
_24 = !false;
_3 = _4;
_32.3 = _22 as u16;
_26 = (_14, _19.1, _23, _8.1);
_16 = !_28;
_26.1 = !_19.1;
_4 = _1;
_9 = (227_u8, 185594748125952609757810114807878653773_u128);
Call(_32.0 = fn4(_26, _19.2, _26.1, _26.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_32.1 = _26.1 ^ _26.1;
_33 = _11 as i64;
_9.1 = 89811361401813066795898676152174292694_u128;
match _19.1 {
0 => bb6,
1 => bb2,
2499 => bb12,
_ => bb5
}
}
bb12 = {
_31 = [_19.2,_11,_26.2,_19.2,_11,_11,_23];
_8.1 = _26.3;
_19.0 = _32.0;
_27.0 = (_27.1.0,);
_26.1 = 7837788068854012544_u64 as i16;
_27 = (_21, _21);
_29 = _32.0;
Call(_33 = fn5(_23, _27, _32.0, _29, _19.0, _29, _19.1, _29, _19.0, _9.0, _32.1, _4, _21.0, _32.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_16 = _8.0 as isize;
_2 = [4196261666988063752_usize,5057273288500943859_usize];
_36 = _9.1 & _9.1;
_9 = (152_u8, _36);
_18 = _16;
_35 = _19.2 | _18;
_29 = _32.0;
_2 = [10280112378358245401_usize,6642486016173024391_usize];
_30 = _29;
_16 = _35;
RET = _2;
_26.0 = _30;
_8 = (_7, _12);
_31 = _3;
RET = [2638440249846103556_usize,17365663380610515216_usize];
_34 = [_9.0,_9.0,_9.0,_9.0,_9.0];
_31 = _3;
RET = [4_usize,2858215432759034028_usize];
Call(_13 = fn6(_27.0.0, _35, _19.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_30 = _32.0;
_32.3 = !_8.1;
_36 = _9.1;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(3_usize, 9_usize, Move(_9), 23_usize, Move(_23), 5_usize, Move(_5), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(3_usize, 20_usize, Move(_20), 30_usize, Move(_30), 16_usize, Move(_16), 31_usize, Move(_31)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(3_usize, 21_usize, Move(_21), 24_usize, Move(_24), 18_usize, Move(_18), 14_usize, Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(3_usize, 4_usize, Move(_4), 26_usize, Move(_26), 41_usize, _41, 41_usize, _41), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: (char, i16, isize, u16),mut _2: isize,mut _3: i16,mut _4: i16) -> char {
mir! {
type RET = char;
let _5: bool;
let _6: [i8; 8];
let _7: ();
let _8: ();
{
_1 = ('\u{85ff1}', _3, _2, 45296_u16);
match _1.3 {
0 => bb1,
1 => bb2,
2 => bb3,
45296 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1.3 = _1.2 as u16;
RET = _1.0;
_4 = _3 - _3;
_1 = (RET, _4, _2, 50170_u16);
_3 = _1.1;
_1.1 = _3 & _4;
_4 = _1.1 >> _3;
Goto(bb6)
}
bb6 = {
Call(_7 = dump_var(4_usize, 2_usize, Move(_2), 3_usize, Move(_3), 8_usize, _8, 8_usize, _8), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: (([usize; 2],), ([usize; 2],)),mut _3: char,mut _4: char,mut _5: char,mut _6: char,mut _7: i16,mut _8: char,mut _9: char,mut _10: u8,mut _11: i16,mut _12: [isize; 7],mut _13: [usize; 2],mut _14: char) -> i64 {
mir! {
type RET = i64;
let _15: [u8; 5];
let _16: ();
let _17: ();
{
_2.1 = (_2.0.0,);
_12 = [_1,_1,_1,_1,_1,_1,_1];
_4 = _14;
_3 = _8;
_4 = _6;
_11 = 2841823613_u32 as i16;
_2.0.0 = _2.1.0;
RET = _7 as i64;
_15 = [_10,_10,_10,_10,_10];
Goto(bb1)
}
bb1 = {
Call(_16 = dump_var(5_usize, 10_usize, Move(_10), 4_usize, Move(_4), 5_usize, Move(_5), 3_usize, Move(_3)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_16 = dump_var(5_usize, 14_usize, Move(_14), 6_usize, Move(_6), 13_usize, Move(_13), 17_usize, _17), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [usize; 2],mut _2: isize,mut _3: char) -> Adt45 {
mir! {
type RET = Adt45;
let _4: *const i64;
let _5: usize;
let _6: ([usize; 2],);
let _7: Adt58;
let _8: ((usize, i16), isize, i128, [i64; 7]);
let _9: Adt60;
let _10: *const (f32, u16);
let _11: Adt54;
let _12: i8;
let _13: ();
let _14: ();
{
_2 = 76_isize & 9223372036854775807_isize;
_3 = '\u{9df5c}';
Call(_4 = fn7(_2, _2, _3, _2, _1, _2, _2, _1, _1, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 80_isize + (-9223372036854775808_isize);
_3 = '\u{6d260}';
_1 = [7_usize,3_usize];
_2 = 63640_u16 as isize;
_1 = [18172165614403419764_usize,7_usize];
_1 = [2_usize,9097719751148470756_usize];
_1 = [4_usize,9627197101174255212_usize];
_2 = 9223372036854775807_isize << 5173882456188348432_u64;
_2 = (-9223372036854775808_isize);
_2 = !96_isize;
_3 = '\u{3a327}';
_3 = '\u{ee6f6}';
_2 = (-9223372036854775808_isize);
_3 = '\u{888c5}';
_3 = '\u{35572}';
_1 = [11080369339170159067_usize,6_usize];
Goto(bb2)
}
bb2 = {
_3 = '\u{e8c32}';
_2 = (-9223372036854775808_isize);
_2 = -(-9223372036854775808_isize);
_1 = [16606050484975049989_usize,7_usize];
_3 = '\u{4c634}';
_1 = [16891012985709204683_usize,4_usize];
_2 = !9223372036854775807_isize;
_5 = 1_usize;
_2 = 49512_u16 as isize;
_1[_5] = _3 as usize;
_1[_5] = _5 / _5;
_1[_5] = !_5;
Goto(bb3)
}
bb3 = {
_2 = 1181560195_i32 as isize;
_1[_5] = _3 as usize;
_5 = !_1[_5];
_2 = -(-9223372036854775808_isize);
_1 = [_5,_5];
_6 = (_1,);
_6.0 = [_5,_5];
_2 = 87_isize;
_1 = [_5,_5];
_2 = (-9223372036854775808_isize);
_6.0 = [_5,_5];
_2 = 64_isize;
_6.0 = [_5,_5];
_3 = '\u{f6346}';
_3 = '\u{936d2}';
_2 = 9223372036854775807_isize - (-3_isize);
_5 = _2 as usize;
_2 = _3 as isize;
_5 = !2686208632342742204_usize;
_2 = 9223372036854775807_isize;
_6.0 = [_5,_5];
_6 = (_1,);
_2 = 9223372036854775807_isize;
match _2 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb4 = {
_3 = '\u{e8c32}';
_2 = (-9223372036854775808_isize);
_2 = -(-9223372036854775808_isize);
_1 = [16606050484975049989_usize,7_usize];
_3 = '\u{4c634}';
_1 = [16891012985709204683_usize,4_usize];
_2 = !9223372036854775807_isize;
_5 = 1_usize;
_2 = 49512_u16 as isize;
_1[_5] = _3 as usize;
_1[_5] = _5 / _5;
_1[_5] = !_5;
Goto(bb3)
}
bb5 = {
_2 = 80_isize + (-9223372036854775808_isize);
_3 = '\u{6d260}';
_1 = [7_usize,3_usize];
_2 = 63640_u16 as isize;
_1 = [18172165614403419764_usize,7_usize];
_1 = [2_usize,9097719751148470756_usize];
_1 = [4_usize,9627197101174255212_usize];
_2 = 9223372036854775807_isize << 5173882456188348432_u64;
_2 = (-9223372036854775808_isize);
_2 = !96_isize;
_3 = '\u{3a327}';
_3 = '\u{ee6f6}';
_2 = (-9223372036854775808_isize);
_3 = '\u{888c5}';
_3 = '\u{35572}';
_1 = [11080369339170159067_usize,6_usize];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = (_1,);
_6 = (_1,);
_6.0 = [_5,_5];
_5 = 81592374_u32 as usize;
_6.0 = _1;
_8.2 = (-1727825681070985374_i64) as i128;
_8.0.1 = 6539_i16;
_8.0 = (_5, 19791_i16);
_5 = _8.0.0 << _8.0.1;
match _8.0.1 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb4,
4 => bb10,
5 => bb11,
19791 => bb13,
_ => bb12
}
}
bb10 = {
_2 = 80_isize + (-9223372036854775808_isize);
_3 = '\u{6d260}';
_1 = [7_usize,3_usize];
_2 = 63640_u16 as isize;
_1 = [18172165614403419764_usize,7_usize];
_1 = [2_usize,9097719751148470756_usize];
_1 = [4_usize,9627197101174255212_usize];
_2 = 9223372036854775807_isize << 5173882456188348432_u64;
_2 = (-9223372036854775808_isize);
_2 = !96_isize;
_3 = '\u{3a327}';
_3 = '\u{ee6f6}';
_2 = (-9223372036854775808_isize);
_3 = '\u{888c5}';
_3 = '\u{35572}';
_1 = [11080369339170159067_usize,6_usize];
Goto(bb2)
}
bb11 = {
_2 = 80_isize + (-9223372036854775808_isize);
_3 = '\u{6d260}';
_1 = [7_usize,3_usize];
_2 = 63640_u16 as isize;
_1 = [18172165614403419764_usize,7_usize];
_1 = [2_usize,9097719751148470756_usize];
_1 = [4_usize,9627197101174255212_usize];
_2 = 9223372036854775807_isize << 5173882456188348432_u64;
_2 = (-9223372036854775808_isize);
_2 = !96_isize;
_3 = '\u{3a327}';
_3 = '\u{ee6f6}';
_2 = (-9223372036854775808_isize);
_3 = '\u{888c5}';
_3 = '\u{35572}';
_1 = [11080369339170159067_usize,6_usize];
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_8.0.1 = (-750202306_i32) as i16;
_8.2 = (-87_i8) as i128;
_1 = [_5,_5];
_8.0.1 = (-5027_i16);
_8.3 = [7962555892781519042_i64,(-824276871281894507_i64),(-6904087123862572126_i64),6493414869370044401_i64,(-2602114719439488361_i64),(-3937175928696585195_i64),(-4981796333330663738_i64)];
_8.0 = (_5, 9856_i16);
RET = Adt45::Variant0 { fld0: _8.3 };
_8.3 = Field::<[i64; 7]>(Variant(RET, 0), 0);
_1 = [_5,_8.0.0];
_1 = _6.0;
_6.0 = [_5,_5];
_6 = (_1,);
_8.0 = (_5, (-28280_i16));
_3 = '\u{7fa63}';
Call(_8.0 = fn16(_8.2, Field::<[i64; 7]>(Variant(RET, 0), 0), _8.3, _6, RET, RET, RET, _8.3), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_8.3 = [(-1419904492301945025_i64),(-8531835083276130963_i64),1295353917464902175_i64,903307443556400671_i64,(-3088921144085003079_i64),(-6258997482252639733_i64),(-8696196435723842631_i64)];
_9.fld0 = 13674402366469007534_u64 as i32;
_8.3 = [(-7858238931476069798_i64),6170730873557936543_i64,(-5760466840312100445_i64),2445108452046799464_i64,3126745349482920375_i64,5025590361199810653_i64,3604229640870760164_i64];
_8.0 = (_5, (-17364_i16));
_8.0.1 = !(-13649_i16);
_8.0.1 = _5 as i16;
_6.0 = _1;
_12 = 2187115115_u32 as i8;
_8.2 = 15909540644670872793145713397264888518_i128 ^ 133284243152887800255619536093568012936_i128;
place!(Field::<[i64; 7]>(Variant(RET, 0), 0)) = [6235776654053294622_i64,7047004428282786050_i64,4366867828813674021_i64,3150003900045044210_i64,4243143354718554604_i64,(-3772078408426067558_i64),(-9066204504193553224_i64)];
Goto(bb15)
}
bb15 = {
Call(_13 = dump_var(6_usize, 6_usize, Move(_6), 3_usize, Move(_3), 12_usize, Move(_12), 14_usize, _14), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: isize,mut _2: isize,mut _3: char,mut _4: isize,mut _5: [usize; 2],mut _6: isize,mut _7: isize,mut _8: [usize; 2],mut _9: [usize; 2],mut _10: isize) -> *const i64 {
mir! {
type RET = *const i64;
let _11: ([usize; 2],);
let _12: (([usize; 2],), ([usize; 2],));
let _13: f64;
let _14: (([usize; 2],), ([usize; 2],));
let _15: (usize, i16);
let _16: i128;
let _17: *mut (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)));
let _18: bool;
let _19: i16;
let _20: [i64; 7];
let _21: u32;
let _22: Adt60;
let _23: i8;
let _24: i16;
let _25: char;
let _26: *const [i64; 7];
let _27: isize;
let _28: usize;
let _29: usize;
let _30: [u8; 5];
let _31: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)));
let _32: char;
let _33: [i8; 8];
let _34: Adt48;
let _35: isize;
let _36: Adt54;
let _37: Adt45;
let _38: char;
let _39: *const (f32, u16);
let _40: [usize; 2];
let _41: u32;
let _42: [isize; 5];
let _43: Adt47;
let _44: isize;
let _45: Adt54;
let _46: Adt58;
let _47: bool;
let _48: [isize; 7];
let _49: Adt52;
let _50: (([usize; 2],), ([usize; 2],));
let _51: Adt46;
let _52: (([usize; 2],), ([usize; 2],));
let _53: u128;
let _54: [isize; 7];
let _55: char;
let _56: isize;
let _57: f32;
let _58: *const i64;
let _59: &'static usize;
let _60: u32;
let _61: [usize; 2];
let _62: char;
let _63: [isize; 5];
let _64: Adt58;
let _65: u16;
let _66: ((char, i16, isize, u16), usize, [isize; 3]);
let _67: *mut (u128, isize);
let _68: f32;
let _69: Adt61;
let _70: isize;
let _71: (usize, i16);
let _72: Adt46;
let _73: (u128, isize);
let _74: bool;
let _75: [i8; 8];
let _76: usize;
let _77: (u128, isize);
let _78: ([usize; 2],);
let _79: Adt55;
let _80: f32;
let _81: f64;
let _82: ((char, i16, isize, u16), usize, [isize; 3]);
let _83: u128;
let _84: i64;
let _85: [isize; 3];
let _86: (i8, *const (usize, i16), ((usize, i16), isize, i128, [i64; 7]), (f32, u16));
let _87: f32;
let _88: Adt46;
let _89: Adt57;
let _90: ();
let _91: ();
{
_10 = _6;
_5 = _8;
_3 = '\u{b3cf6}';
_3 = '\u{23d49}';
_8 = [11201789016220323079_usize,3372852065845987421_usize];
_6 = _10;
_7 = (-4913714421628329983_i64) as isize;
Goto(bb1)
}
bb1 = {
_4 = !_6;
_11 = (_5,);
_2 = _6;
_11.0 = _8;
_11 = (_8,);
_12.1 = (_11.0,);
_7 = _6;
_11.0 = [3747764418638574038_usize,4_usize];
Goto(bb2)
}
bb2 = {
_12.0.0 = _11.0;
_11 = _12.0;
_15.0 = 2_usize;
_15.0 = 1_usize | 6_usize;
_15.0 = !1718855291446367215_usize;
_16 = _3 as i128;
_14.0.0 = [_15.0,_15.0];
_16 = _7 as i128;
_15.1 = -20114_i16;
_12.0.0 = _8;
Call(_15 = fn8(_9, _10, _12.1.0, _4, _3, _12.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_14 = (_12.1, _11);
_15 = (4_usize, 2877_i16);
_11 = (_9,);
_16 = 46504713478407908510607099046566884873_i128;
_14.0 = (_12.0.0,);
_13 = _15.0 as f64;
_11 = _12.0;
_3 = '\u{71a53}';
_3 = '\u{c85ec}';
_5 = [_15.0,_15.0];
_3 = '\u{54708}';
_1 = _16 as isize;
_13 = 33_i8 as f64;
_12.0 = (_9,);
_6 = _1;
_6 = _10 << _15.0;
_3 = '\u{511d}';
_13 = _15.1 as f64;
_14.0 = _12.1;
_15.1 = (-5102_i16) >> _1;
_13 = (-2698287239052035753_i64) as f64;
_20 = [(-8339472893493661438_i64),(-6263000217294655899_i64),(-2947489092649241047_i64),(-1846047456256614612_i64),(-660559439112430155_i64),(-4598629647419369963_i64),4962292180914545583_i64];
_12.1 = (_14.1.0,);
_3 = '\u{d2a4a}';
match _15.0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb7,
_ => bb6
}
}
bb4 = {
_12.0.0 = _11.0;
_11 = _12.0;
_15.0 = 2_usize;
_15.0 = 1_usize | 6_usize;
_15.0 = !1718855291446367215_usize;
_16 = _3 as i128;
_14.0.0 = [_15.0,_15.0];
_16 = _7 as i128;
_15.1 = -20114_i16;
_12.0.0 = _8;
Call(_15 = fn8(_9, _10, _12.1.0, _4, _3, _12.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_4 = !_6;
_11 = (_5,);
_2 = _6;
_11.0 = _8;
_11 = (_8,);
_12.1 = (_11.0,);
_7 = _6;
_11.0 = [3747764418638574038_usize,4_usize];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_12.1.0 = [_15.0,_15.0];
_3 = '\u{64110}';
_12.1 = (_14.0.0,);
_15 = (5207114595911138598_usize, (-28922_i16));
_16 = !68793871821263968638480668340340409725_i128;
_12.0 = (_9,);
_14.1 = (_8,);
_21 = 3501801503_u32 & 1023470421_u32;
_19 = _15.1 ^ _15.1;
_10 = !_2;
_11.0 = _14.1.0;
_12.1.0 = [_15.0,_15.0];
_6 = _1 & _2;
_18 = _15.0 == _15.0;
_19 = _15.1 << _7;
_7 = _4 ^ _6;
_20 = [6287960053399819178_i64,(-3447099962439017337_i64),8126806323820990127_i64,8235416284106422892_i64,5915600572200655968_i64,1648619039237174843_i64,(-8621894686239696147_i64)];
_15 = (5_usize, _19);
_2 = _7;
_15.1 = _19 << _15.0;
_19 = _16 as i16;
_7 = !_4;
_22.fld0 = -2069124731_i32;
_15.0 = 1_usize - 4_usize;
Goto(bb8)
}
bb8 = {
_26 = core::ptr::addr_of!(_20);
_20 = [(-483749756808475841_i64),7160218122350844659_i64,2657475755362685389_i64,3667243491314373337_i64,3925037772800347857_i64,(-6527937781748564180_i64),6614572082649784815_i64];
_14.1 = (_11.0,);
_13 = 169224349524573120994952284740733805908_u128 as f64;
_23 = 19_i8;
_6 = _4;
_5 = [_15.0,_15.0];
_31.3.0 = (_5,);
Call(_9 = fn9(_2, (*_26), _12.0, _26, _11, _26, _15.0, _12.1.0, _7), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_25 = _3;
_10 = _2 >> _2;
_17 = core::ptr::addr_of_mut!(_31);
_8 = [_15.0,_15.0];
_12.1 = _14.0;
_31.3.0.0 = _12.1.0;
_14.0.0 = (*_17).3.0.0;
_30 = [114_u8,253_u8,59_u8,5_u8,106_u8];
_31.1.3 = 21249_u16 & 12040_u16;
_11 = (_14.0.0,);
_28 = !_15.0;
_12.0 = ((*_17).3.0.0,);
_33 = [_23,_23,_23,_23,_23,_23,_23,_23];
_25 = _3;
_12 = (_14.1, (*_17).3.0);
Goto(bb10)
}
bb10 = {
_29 = !_28;
Goto(bb11)
}
bb11 = {
_32 = _3;
_11 = (_5,);
_31.3.1 = (_11.0,);
_27 = !_1;
_7 = _2;
_24 = !_15.1;
_11.0 = [_29,_28];
_22.fld0 = _21 as i32;
_14.0.0 = [_15.0,_15.0];
_37 = Adt45::Variant0 { fld0: _20 };
_14.0 = (_14.1.0,);
_1 = -_27;
_28 = _15.0;
_12.1 = (_14.0.0,);
_32 = _3;
SetDiscriminant(_37, 0);
_14.1.0 = (*_17).3.1.0;
_31.2 = !_22.fld0;
_21 = 529440386_u32;
match _23 {
0 => bb10,
1 => bb8,
2 => bb5,
19 => bb12,
_ => bb9
}
}
bb12 = {
_20 = [(-4494063163696417297_i64),7680187837415216687_i64,(-1875214179365142717_i64),(-1246266817280696374_i64),1842512552527894534_i64,8341018022882090476_i64,7459995278578620635_i64];
_14 = (_31.3.1, (*_17).3.0);
place!(Field::<[i64; 7]>(Variant(_37, 0), 0)) = [(-4093717117755392616_i64),(-9021296834060743475_i64),7408445634182594778_i64,7525461545560734175_i64,3540279089662451799_i64,4583214546483854538_i64,1630231022193548191_i64];
_12.0.0 = _8;
_27 = _31.2 as isize;
SetDiscriminant(_37, 1);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.2 = _10;
_19 = _15.1;
Call(_31.0 = core::intrinsics::bswap(284864927917877639037147834279056214007_u128), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_14.0.0 = [_15.0,_28];
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5)) = (_31.3.1, _14.1);
_31.3.1.0 = [_15.0,_15.0];
_12.1 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.3 = _18 as u16;
_9 = (*_17).3.0.0;
_31.2 = _22.fld0;
_1 = _4 | Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.2;
_30 = [225_u8,176_u8,102_u8,182_u8,11_u8];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.0 = _32;
_31.1 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.0, _24, _10, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.3);
_30 = [121_u8,245_u8,179_u8,29_u8,83_u8];
_11 = (_8,);
_18 = (*_17).1.0 <= _32;
_31.2 = !_22.fld0;
_31.3.0.0 = (*_17).3.1.0;
place!(Field::<*const (usize, i16)>(Variant(_37, 1), 0)) = core::ptr::addr_of!(_15);
_38 = _3;
_31.1.1 = 6804402271012387984_u64 as i16;
Goto(bb14)
}
bb14 = {
_40 = [_28,_28];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3.1.0 = [_29,_29];
_9 = [_28,_29];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.3 = _13 as u16;
_22.fld0 = -(*_17).2;
place!(Field::<usize>(Variant(_37, 1), 1)) = _23 as usize;
_9 = [_15.0,_15.0];
_14.0 = (_11.0,);
Goto(bb15)
}
bb15 = {
_3 = _32;
_5 = [_29,_29];
_35 = _19 as isize;
_21 = 2259288509_u32;
_31.3.1 = (_9,);
_1 = (*_17).1.2;
place!(Field::<isize>(Variant(_37, 1), 2)) = !_7;
_1 = _28 as isize;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).0 = !114742508453996850422362107193763178696_u128;
_26 = core::ptr::addr_of!((*_26));
_29 = Field::<usize>(Variant(_37, 1), 1);
_47 = Field::<isize>(Variant(_37, 1), 2) <= _31.1.2;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = (*_17).1.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3 = (_14.1, Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0);
_31.1.1 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.1;
_6 = _15.1 as isize;
_12.0 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.1.0,);
_19 = -_15.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.0 = _32;
place!(Field::<[i32; 8]>(Variant(_37, 1), 3)) = [_22.fld0,(*_17).2,_31.2,_22.fld0,_22.fld0,_22.fld0,(*_17).2,_31.2];
Goto(bb16)
}
bb16 = {
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = _19;
_48 = [(*_17).1.2,_31.1.2,_10,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.2,_31.1.2,_6,_6];
_12.0.0 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0.0;
_49.fld2.3.2 = [_31.1.2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.2,_7];
_31.1.2 = 17357050221290335449_u64 as isize;
_11 = (*_17).3.1;
_31 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1, _22.fld0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3);
_1 = _31.1.2 | (*_17).1.2;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5)).0.0 = [Field::<usize>(Variant(_37, 1), 1),_29];
match _23 {
0 => bb17,
19 => bb19,
_ => bb18
}
}
bb17 = {
_3 = _32;
_5 = [_29,_29];
_35 = _19 as isize;
_21 = 2259288509_u32;
_31.3.1 = (_9,);
_1 = (*_17).1.2;
place!(Field::<isize>(Variant(_37, 1), 2)) = !_7;
_1 = _28 as isize;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).0 = !114742508453996850422362107193763178696_u128;
_26 = core::ptr::addr_of!((*_26));
_29 = Field::<usize>(Variant(_37, 1), 1);
_47 = Field::<isize>(Variant(_37, 1), 2) <= _31.1.2;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = (*_17).1.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3 = (_14.1, Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0);
_31.1.1 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.1;
_6 = _15.1 as isize;
_12.0 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.1.0,);
_19 = -_15.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.0 = _32;
place!(Field::<[i32; 8]>(Variant(_37, 1), 3)) = [_22.fld0,(*_17).2,_31.2,_22.fld0,_22.fld0,_22.fld0,(*_17).2,_31.2];
Goto(bb16)
}
bb18 = {
_40 = [_28,_28];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3.1.0 = [_29,_29];
_9 = [_28,_29];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.3 = _13 as u16;
_22.fld0 = -(*_17).2;
place!(Field::<usize>(Variant(_37, 1), 1)) = _23 as usize;
_9 = [_15.0,_15.0];
_14.0 = (_11.0,);
Goto(bb15)
}
bb19 = {
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).2 = _16 as i32;
_49.fld3 = [_7,_1,_2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.2,Field::<isize>(Variant(_37, 1), 2)];
place!(Field::<*const (usize, i16)>(Variant(_37, 1), 0)) = core::ptr::addr_of!(_15);
_49.fld2.3.1 = !_15.0;
_15 = (_49.fld2.3.1, (*_17).1.1);
_22.fld0 = _15.1 as i32;
_15.1 = _19;
_25 = _31.1.0;
_50.1.0 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.0.0;
Goto(bb20)
}
bb20 = {
SetDiscriminant(_37, 1);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = -_31.1.1;
_31.1.2 = (-3029103052479084093_i64) as isize;
_17 = core::ptr::addr_of_mut!((*_17));
_1 = -_10;
_49.fld3 = [_35,_4,_35,_10,_2];
_6 = _31.0 as isize;
_44 = _27 * _2;
_23 = (-52_i8) & 85_i8;
place!(Field::<isize>(Variant(_37, 1), 2)) = (*_17).1.2;
_52.1.0 = [_15.0,_29];
_21 = 2831761635_u32 ^ 554760605_u32;
_31.1.0 = _38;
_28 = _15.0 << (*_17).1.2;
_15.0 = !_29;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3.1 = (_5,);
place!(Field::<usize>(Variant(_37, 1), 1)) = _49.fld2.3.1 ^ _28;
_50.1.0 = [_28,_49.fld2.3.1];
_12.0 = _14.0;
_48 = [_1,_10,_10,_10,(*_17).1.2,_2,_35];
_7 = !_4;
_50.0 = ((*_17).3.0.0,);
Goto(bb21)
}
bb21 = {
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3.0 = (_12.0.0,);
_44 = _10 ^ _10;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = -_15.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3.0.0 = [_49.fld2.3.1,Field::<usize>(Variant(_37, 1), 1)];
_31.3.1.0 = [_28,_49.fld2.3.1];
_49.fld2.0 = !_47;
_52.0 = (_14.1.0,);
_2 = _13 as isize;
_19 = 192_u8 as i16;
_23 = _47 as i8;
Goto(bb22)
}
bb22 = {
_49.fld1 = _30;
Goto(bb23)
}
bb23 = {
Goto(bb24)
}
bb24 = {
_48 = [_44,_2,_10,_1,_44,_35,_35];
_41 = _21 & _21;
_17 = core::ptr::addr_of_mut!((*_17));
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5)) = (*_17).3;
place!(Field::<isize>(Variant(_37, 1), 2)) = _1 & _27;
_52.0.0 = [Field::<usize>(Variant(_37, 1), 1),_28];
_30 = [218_u8,231_u8,65_u8,133_u8,79_u8];
_16 = (-27322656701557593069604080708637229679_i128) << (*_17).1.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)) = (*_17);
_15 = (_28, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.1);
Goto(bb25)
}
bb25 = {
_4 = Field::<isize>(Variant(_37, 1), 2) - _1;
_33 = [_23,_23,_23,_23,_23,_23,_23,_23];
_26 = core::ptr::addr_of!((*_26));
_54 = [(*_17).1.2,Field::<isize>(Variant(_37, 1), 2),(*_17).1.2,_44,_27,Field::<isize>(Variant(_37, 1), 2),_4];
_12.0 = (_11.0,);
_12.0 = (_14.1.0,);
_66.0.0 = _38;
_66.1 = _16 as usize;
_31.3.0.0 = [_66.1,_28];
_49.fld2.0 = !_47;
_66.0.0 = _31.1.0;
_15.1 = (*_17).1.1;
_50 = _14;
_66.0.0 = _32;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)) = (*_17);
_42 = [_35,Field::<isize>(Variant(_37, 1), 2),Field::<isize>(Variant(_37, 1), 2),_10,Field::<isize>(Variant(_37, 1), 2)];
_49.fld2.3.0.0 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.0;
_12.1.0 = [_66.1,_66.1];
_31 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1, _22.fld0, _12);
Goto(bb26)
}
bb26 = {
_31.1.2 = !_4;
_52 = ((*_17).3.1, (*_17).3.1);
_48 = [_1,(*_17).1.2,_31.1.2,_31.1.2,_10,Field::<isize>(Variant(_37, 1), 2),(*_17).1.2];
_49.fld2.3.0.1 = _16 as i16;
Goto(bb27)
}
bb27 = {
_49.fld2.3.0.2 = _27;
_66.0.2 = (-7646582541839271687_i64) as isize;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = _31.1.1 ^ _31.1.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).0 = (*_17).0 << _44;
place!(Field::<[i32; 8]>(Variant(_37, 1), 3)) = [_31.2,(*_17).2,_22.fld0,_22.fld0,_31.2,_31.2,(*_17).2,(*_17).2];
_49.fld2.3.2 = [(*_17).1.2,_44,_10];
_73.1 = -_44;
_12.1.0 = _14.1.0;
_55 = _66.0.0;
_5 = [_29,Field::<usize>(Variant(_37, 1), 1)];
_49.fld3 = _42;
_19 = _47 as i16;
_50 = (Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0, _31.3.1);
_66.2 = _49.fld2.3.2;
_18 = _49.fld2.0;
place!(Field::<usize>(Variant(_37, 1), 1)) = _15.0 << _44;
_70 = !(*_17).1.2;
_18 = !_47;
_66.0.3 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.3;
Goto(bb28)
}
bb28 = {
_71.0 = Field::<usize>(Variant(_37, 1), 1);
_2 = _44 >> _31.1.2;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3.0 = (_52.0.0,);
_66.0.2 = _44;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5)) = (_31.3.1, _50.1);
_52.0.0 = [Field::<usize>(Variant(_37, 1), 1),_71.0];
_66.1 = !_49.fld2.3.1;
_73.0 = !Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).0;
_11.0 = _5;
_60 = _41 * _41;
_55 = _38;
_57 = _13 as f32;
_57 = _4 as f32;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5)).1.0 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.0.0;
_77.1 = Field::<isize>(Variant(_37, 1), 2) >> Field::<usize>(Variant(_37, 1), 1);
_66.0.3 = !(*_17).1.3;
_23 = (-22_i8) << _1;
_31.3.1 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.1;
_49.fld2.1 = [_71.0,_71.0];
_4 = _47 as isize;
_49.fld0 = 17798751515177011002_u64;
Goto(bb29)
}
bb29 = {
place!(Field::<usize>(Variant(_37, 1), 1)) = !_66.1;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5)).0.0 = [_71.0,_28];
_66.0.0 = _3;
_55 = _49.fld2.3.0.0;
_79.fld2 = (Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).1.0,);
_33 = [_23,_23,_23,_23,_23,_23,_23,_23];
_22.fld0 = -(*_17).2;
_31 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1, _22.fld0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3);
_71.0 = !_28;
_12.0 = (_79.fld2.0,);
_63 = [_66.0.2,_70,_66.0.2,_73.1,_4];
_61 = [_28,_15.0];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).2 = (*_17).0 as i32;
_71.1 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.1 << _27;
_49.fld2.4 = core::ptr::addr_of!(_60);
_50.1 = (_79.fld2.0,);
_49.fld2.3.0.3 = (*_17).1.3 | (*_17).1.3;
_49.fld2.1 = [_71.0,Field::<usize>(Variant(_37, 1), 1)];
_78.0 = [_28,_28];
_31.3 = (Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.1);
_49.fld2.3.0 = ((*_17).1.0, (*_17).1.1, _10, (*_17).1.3);
_14.1.0 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0.0;
_65 = _66.0.3 | _66.0.3;
_52 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5);
_82 = ((*_17).1, _29, _49.fld2.3.2);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)) = ((*_17).0, _49.fld2.3.0, _22.fld0, (*_17).3);
_43 = Adt47::Variant2 { fld0: 15_u8,fld1: _49.fld2.4,fld2: _44,fld3: _49.fld2.3,fld4: Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.0 };
match _49.fld0 {
0 => bb19,
1 => bb16,
2 => bb30,
17798751515177011002 => bb32,
_ => bb31
}
}
bb30 = {
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).2 = _16 as i32;
_49.fld3 = [_7,_1,_2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.2,Field::<isize>(Variant(_37, 1), 2)];
place!(Field::<*const (usize, i16)>(Variant(_37, 1), 0)) = core::ptr::addr_of!(_15);
_49.fld2.3.1 = !_15.0;
_15 = (_49.fld2.3.1, (*_17).1.1);
_22.fld0 = _15.1 as i32;
_15.1 = _19;
_25 = _31.1.0;
_50.1.0 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.0.0;
Goto(bb20)
}
bb31 = {
_4 = Field::<isize>(Variant(_37, 1), 2) - _1;
_33 = [_23,_23,_23,_23,_23,_23,_23,_23];
_26 = core::ptr::addr_of!((*_26));
_54 = [(*_17).1.2,Field::<isize>(Variant(_37, 1), 2),(*_17).1.2,_44,_27,Field::<isize>(Variant(_37, 1), 2),_4];
_12.0 = (_11.0,);
_12.0 = (_14.1.0,);
_66.0.0 = _38;
_66.1 = _16 as usize;
_31.3.0.0 = [_66.1,_28];
_49.fld2.0 = !_47;
_66.0.0 = _31.1.0;
_15.1 = (*_17).1.1;
_50 = _14;
_66.0.0 = _32;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)) = (*_17);
_42 = [_35,Field::<isize>(Variant(_37, 1), 2),Field::<isize>(Variant(_37, 1), 2),_10,Field::<isize>(Variant(_37, 1), 2)];
_49.fld2.3.0.0 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.0;
_12.1.0 = [_66.1,_66.1];
_31 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).0, Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1, _22.fld0, _12);
Goto(bb26)
}
bb32 = {
_74 = _18 & _18;
_44 = _1 << (*_17).1.3;
_57 = 94_u8 as f32;
_82.0 = (_66.0.0, (*_17).1.1, Field::<((char, i16, isize, u16), usize, [isize; 3])>(Variant(_43, 2), 3).0.2, _31.1.3);
place!(Field::<*const u32>(Variant(_43, 2), 1)) = core::ptr::addr_of!(_21);
_15 = (_66.1, (*_17).1.1);
_49.fld1 = [21_u8,161_u8,102_u8,27_u8,126_u8];
_31.1.3 = _74 as u16;
_67 = core::ptr::addr_of_mut!(_77);
_49.fld2.3.0.0 = (*_17).1.0;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).2 = !_31.2;
place!(Field::<u8>(Variant(_43, 2), 0)) = !228_u8;
_49.fld2.3 = (_31.1, _71.0, Field::<((char, i16, isize, u16), usize, [isize; 3])>(Variant(_43, 2), 3).2);
_46 = Adt58::Variant1 { fld0: Field::<((char, i16, isize, u16), usize, [isize; 3])>(Variant(_43, 2), 3),fld1: _31.3.0.0 };
_86.2.3 = [(-757653520916876742_i64),2819021240026660882_i64,(-7890943003988859261_i64),7212581728536013947_i64,(-3514071187937549037_i64),(-500231302908055467_i64),(-2752345378584071404_i64)];
_86.2.1 = _16 as isize;
_66.2 = [_49.fld2.3.0.2,_66.0.2,(*_67).1];
match _49.fld0 {
0 => bb20,
1 => bb2,
2 => bb11,
3 => bb33,
17798751515177011002 => bb35,
_ => bb34
}
}
bb33 = {
_3 = _32;
_5 = [_29,_29];
_35 = _19 as isize;
_21 = 2259288509_u32;
_31.3.1 = (_9,);
_1 = (*_17).1.2;
place!(Field::<isize>(Variant(_37, 1), 2)) = !_7;
_1 = _28 as isize;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).0 = !114742508453996850422362107193763178696_u128;
_26 = core::ptr::addr_of!((*_26));
_29 = Field::<usize>(Variant(_37, 1), 1);
_47 = Field::<isize>(Variant(_37, 1), 2) <= _31.1.2;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.1 = (*_17).1.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).3 = (_14.1, Field::<(([usize; 2],), ([usize; 2],))>(Variant(_37, 1), 5).0);
_31.1.1 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).1.1;
_6 = _15.1 as isize;
_12.0 = (Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).3.1.0,);
_19 = -_15.1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)).1.0 = _32;
place!(Field::<[i32; 8]>(Variant(_37, 1), 3)) = [_22.fld0,(*_17).2,_31.2,_22.fld0,_22.fld0,_22.fld0,(*_17).2,_31.2];
Goto(bb16)
}
bb34 = {
_12.0.0 = _11.0;
_11 = _12.0;
_15.0 = 2_usize;
_15.0 = 1_usize | 6_usize;
_15.0 = !1718855291446367215_usize;
_16 = _3 as i128;
_14.0.0 = [_15.0,_15.0];
_16 = _7 as i128;
_15.1 = -20114_i16;
_12.0.0 = _8;
Call(_15 = fn8(_9, _10, _12.1.0, _4, _3, _12.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb35 = {
_71.0 = !_29;
_14 = ((*_17).3.0, (*_17).3.0);
RET = core::ptr::addr_of!(_84);
_53 = (*_17).0 - Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4).0;
_45 = Adt54::Variant0 { fld0: _13,fld1: Field::<[i32; 8]>(Variant(_37, 1), 3) };
_43 = Adt47::Variant2 { fld0: 176_u8,fld1: _49.fld2.4,fld2: _1,fld3: _82,fld4: _31.3.1 };
_31.3 = (_78, _52.0);
_66.1 = _28 + Field::<usize>(Variant(_37, 1), 1);
_17 = core::ptr::addr_of_mut!((*_17));
_49.fld2.3.0 = (_82.0.0, _82.0.1, Field::<isize>(Variant(_37, 1), 2), (*_17).1.3);
_86.2.0 = (_66.1, _82.0.1);
SetDiscriminant(_46, 1);
SetDiscriminant(_45, 0);
_31.1.0 = _32;
_71 = _86.2.0;
place!(Field::<((char, i16, isize, u16), usize, [isize; 3])>(Variant(_46, 1), 0)).0.1 = _49.fld0 as i16;
_86.2 = (_71, _44, _16, _20);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_37, 1), 4)) = ((*_17).0, _82.0, (*_17).2, _14);
_24 = _31.1.1;
place!(Field::<((char, i16, isize, u16), usize, [isize; 3])>(Variant(_43, 2), 3)).2 = [(*_67).1,_73.1,_27];
_86.3.0 = _57 - _57;
Goto(bb36)
}
bb36 = {
Call(_90 = dump_var(7_usize, 40_usize, Move(_40), 53_usize, Move(_53), 31_usize, Move(_31), 61_usize, Move(_61)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Call(_90 = dump_var(7_usize, 16_usize, Move(_16), 73_usize, Move(_73), 1_usize, Move(_1), 12_usize, Move(_12)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_90 = dump_var(7_usize, 25_usize, Move(_25), 52_usize, Move(_52), 15_usize, Move(_15), 54_usize, Move(_54)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_90 = dump_var(7_usize, 71_usize, Move(_71), 42_usize, Move(_42), 29_usize, Move(_29), 6_usize, Move(_6)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_90 = dump_var(7_usize, 63_usize, Move(_63), 48_usize, Move(_48), 14_usize, Move(_14), 65_usize, Move(_65)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_90 = dump_var(7_usize, 60_usize, Move(_60), 7_usize, Move(_7), 30_usize, Move(_30), 47_usize, Move(_47)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Call(_90 = dump_var(7_usize, 5_usize, Move(_5), 11_usize, Move(_11), 91_usize, _91, 91_usize, _91), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [usize; 2],mut _2: isize,mut _3: [usize; 2],mut _4: isize,mut _5: char,mut _6: [usize; 2]) -> (usize, i16) {
mir! {
type RET = (usize, i16);
let _7: isize;
let _8: i64;
let _9: i128;
let _10: [i8; 8];
let _11: [u8; 5];
let _12: i16;
let _13: [isize; 7];
let _14: usize;
let _15: *const (f32, u16);
let _16: isize;
let _17: Adt51;
let _18: Adt47;
let _19: (u128, isize);
let _20: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)));
let _21: usize;
let _22: &'static usize;
let _23: *const [i64; 7];
let _24: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)));
let _25: i128;
let _26: Adt54;
let _27: [i8; 8];
let _28: f32;
let _29: f64;
let _30: [i64; 7];
let _31: ();
let _32: ();
{
RET.1 = -24473_i16;
_1 = [3_usize,3_usize];
_6 = _3;
_4 = _2;
_1 = [11521009458611597835_usize,7629729470418545838_usize];
RET.1 = !(-11477_i16);
RET = (5_usize, 2417_i16);
_1 = _3;
RET = (5254586695734270969_usize, 18060_i16);
_2 = _4 * _4;
_5 = '\u{52f5a}';
_4 = -_2;
RET = (5045755626769839497_usize, 6329_i16);
_1 = [RET.0,RET.0];
_7 = -_4;
_5 = '\u{47470}';
RET = (7_usize, (-16208_i16));
_5 = '\u{1164e}';
_4 = _7 >> RET.1;
RET.0 = 294811309237591601373577786643069018415_u128 as usize;
RET = (17830790166748859162_usize, (-12357_i16));
_5 = '\u{f67b4}';
RET.0 = 14131248409752683248_usize * 3186033325837005935_usize;
_10 = [(-10_i8),(-52_i8),(-121_i8),(-105_i8),(-126_i8),(-117_i8),(-107_i8),84_i8];
Goto(bb1)
}
bb1 = {
RET.1 = _2 as i16;
_3 = [RET.0,RET.0];
RET.1 = -6_i16;
_9 = 26090_u16 as i128;
Goto(bb2)
}
bb2 = {
RET.1 = 17095_i16;
RET.1 = -5205_i16;
_8 = 109693488150720796_i64 | 3691652338253624792_i64;
_12 = RET.1;
RET = (0_usize, _12);
RET.1 = _2 as i16;
_11 = [6_u8,204_u8,153_u8,197_u8,154_u8];
_11 = [39_u8,208_u8,34_u8,243_u8,6_u8];
RET.0 = RET.1 as usize;
_8 = 532571832886481656_i64 + (-6700365510860007679_i64);
RET = (10908330290186503849_usize, _12);
RET = (5_usize, _12);
RET.0 = _12 as usize;
RET.1 = _12;
_16 = -_4;
_4 = _16;
_13 = [_4,_4,_16,_7,_7,_4,_4];
_4 = _16 - _2;
Goto(bb3)
}
bb3 = {
_3 = _6;
Goto(bb4)
}
bb4 = {
_14 = !RET.0;
RET = (_14, _12);
_5 = '\u{a2e2c}';
_12 = RET.1;
_11 = [63_u8,148_u8,80_u8,202_u8,251_u8];
_3 = _1;
_6 = _1;
Goto(bb5)
}
bb5 = {
_2 = 161_u8 as isize;
_3 = _1;
_9 = 158086071992180940687770296299754045926_i128 & (-38074266406777789797867516277132298597_i128);
_4 = _2;
_7 = _16 + _4;
_7 = _16;
_13 = [_16,_16,_7,_16,_7,_7,_16];
_6 = [_14,_14];
_14 = RET.1 as usize;
_9 = 141010269251231371381188518024095651058_i128 >> _7;
_10 = [81_i8,(-93_i8),95_i8,5_i8,97_i8,(-27_i8),(-77_i8),90_i8];
_16 = !_7;
RET.1 = _12 << _7;
_12 = RET.1;
RET.0 = _12 as usize;
RET = (_14, _12);
_13 = [_7,_7,_7,_16,_16,_16,_4];
Goto(bb6)
}
bb6 = {
_1 = _3;
_19.1 = _7 & _7;
_5 = '\u{80236}';
_6 = [_14,RET.0];
RET.0 = !_14;
_16 = _19.1 - _19.1;
_20.1.3 = (-116_i8) as u16;
_20.2 = (-1714635827_i32);
_1 = [RET.0,RET.0];
_20.0 = 3049408028_u32 as u128;
_20.1.0 = _5;
_14 = !RET.0;
RET.1 = !_12;
_19.0 = !_20.0;
_16 = _20.2 as isize;
_19.1 = _7;
_20.1.0 = _5;
match _20.2 {
0 => bb4,
340282366920938463463374607430053575629 => bb8,
_ => bb7
}
}
bb7 = {
RET.1 = _2 as i16;
_3 = [RET.0,RET.0];
RET.1 = -6_i16;
_9 = 26090_u16 as i128;
Goto(bb2)
}
bb8 = {
_16 = _19.0 as isize;
_20.3.0.0 = [_14,RET.0];
_20.3.0 = (_1,);
_20.0 = _19.0 ^ _19.0;
_20.3.1 = (_3,);
_20.3.1 = (_3,);
_3 = [RET.0,_14];
_20.1.3 = 20392_u16 | 57681_u16;
_1 = [RET.0,_14];
_20.1.1 = _20.1.0 as i16;
_20.3.1.0 = _3;
_4 = _2 | _2;
_20.1.2 = !_19.1;
_13 = [_16,_7,_4,_7,_7,_2,_20.1.2];
_14 = RET.0 << _20.1.3;
RET.0 = !_14;
match _20.2 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
340282366920938463463374607430053575629 => bb17,
_ => bb16
}
}
bb9 = {
RET.1 = _2 as i16;
_3 = [RET.0,RET.0];
RET.1 = -6_i16;
_9 = 26090_u16 as i128;
Goto(bb2)
}
bb10 = {
_1 = _3;
_19.1 = _7 & _7;
_5 = '\u{80236}';
_6 = [_14,RET.0];
RET.0 = !_14;
_16 = _19.1 - _19.1;
_20.1.3 = (-116_i8) as u16;
_20.2 = (-1714635827_i32);
_1 = [RET.0,RET.0];
_20.0 = 3049408028_u32 as u128;
_20.1.0 = _5;
_14 = !RET.0;
RET.1 = !_12;
_19.0 = !_20.0;
_16 = _20.2 as isize;
_19.1 = _7;
_20.1.0 = _5;
match _20.2 {
0 => bb4,
340282366920938463463374607430053575629 => bb8,
_ => bb7
}
}
bb11 = {
_2 = 161_u8 as isize;
_3 = _1;
_9 = 158086071992180940687770296299754045926_i128 & (-38074266406777789797867516277132298597_i128);
_4 = _2;
_7 = _16 + _4;
_7 = _16;
_13 = [_16,_16,_7,_16,_7,_7,_16];
_6 = [_14,_14];
_14 = RET.1 as usize;
_9 = 141010269251231371381188518024095651058_i128 >> _7;
_10 = [81_i8,(-93_i8),95_i8,5_i8,97_i8,(-27_i8),(-77_i8),90_i8];
_16 = !_7;
RET.1 = _12 << _7;
_12 = RET.1;
RET.0 = _12 as usize;
RET = (_14, _12);
_13 = [_7,_7,_7,_16,_16,_16,_4];
Goto(bb6)
}
bb12 = {
_14 = !RET.0;
RET = (_14, _12);
_5 = '\u{a2e2c}';
_12 = RET.1;
_11 = [63_u8,148_u8,80_u8,202_u8,251_u8];
_3 = _1;
_6 = _1;
Goto(bb5)
}
bb13 = {
_3 = _6;
Goto(bb4)
}
bb14 = {
RET.1 = 17095_i16;
RET.1 = -5205_i16;
_8 = 109693488150720796_i64 | 3691652338253624792_i64;
_12 = RET.1;
RET = (0_usize, _12);
RET.1 = _2 as i16;
_11 = [6_u8,204_u8,153_u8,197_u8,154_u8];
_11 = [39_u8,208_u8,34_u8,243_u8,6_u8];
RET.0 = RET.1 as usize;
_8 = 532571832886481656_i64 + (-6700365510860007679_i64);
RET = (10908330290186503849_usize, _12);
RET = (5_usize, _12);
RET.0 = _12 as usize;
RET.1 = _12;
_16 = -_4;
_4 = _16;
_13 = [_4,_4,_16,_7,_7,_4,_4];
_4 = _16 - _2;
Goto(bb3)
}
bb15 = {
RET.1 = _2 as i16;
_3 = [RET.0,RET.0];
RET.1 = -6_i16;
_9 = 26090_u16 as i128;
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
_22 = &RET.0;
_24.0 = !_20.0;
_24 = (_20.0, _20.1, _20.2, _20.3);
_20.3.1 = (_3,);
_24.2 = !_20.2;
_3 = [(*_22),RET.0];
_5 = _24.1.0;
_20.0 = _24.0;
_14 = _24.1.0 as usize;
_16 = _20.1.3 as isize;
_25 = _9 - _9;
_22 = &_14;
_20.1.0 = _24.1.0;
_24.1.2 = _8 as isize;
_20.3 = (_24.3.1, _24.3.0);
_14 = RET.0;
RET.0 = !_14;
_18 = Adt47::Variant3 { fld0: _11 };
_9 = _25 | _25;
_24.3.0 = (_24.3.1.0,);
_24.0 = _20.0;
_27 = _10;
_7 = -_24.1.2;
_19.1 = -_20.1.2;
_24.3.0.0 = [RET.0,_14];
_24 = _20;
Goto(bb18)
}
bb18 = {
Call(_31 = dump_var(8_usize, 25_usize, Move(_25), 27_usize, Move(_27), 19_usize, Move(_19), 16_usize, Move(_16)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(8_usize, 1_usize, Move(_1), 24_usize, Move(_24), 13_usize, Move(_13), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_31 = dump_var(8_usize, 6_usize, Move(_6), 8_usize, Move(_8), 32_usize, _32, 32_usize, _32), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: [i64; 7],mut _3: ([usize; 2],),mut _4: *const [i64; 7],mut _5: ([usize; 2],),mut _6: *const [i64; 7],mut _7: usize,mut _8: [usize; 2],mut _9: isize) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _10: Adt55;
let _11: Adt60;
let _12: u8;
let _13: Adt50;
let _14: Adt55;
let _15: i8;
let _16: [u8; 5];
let _17: Adt55;
let _18: Adt61;
let _19: Adt51;
let _20: Adt52;
let _21: Adt59;
let _22: [usize; 2];
let _23: (([usize; 2],), ([usize; 2],));
let _24: [isize; 3];
let _25: f32;
let _26: u8;
let _27: (([usize; 2],), ([usize; 2],));
let _28: Adt58;
let _29: f64;
let _30: ([usize; 2],);
let _31: f32;
let _32: char;
let _33: (u128, isize);
let _34: Adt57;
let _35: char;
let _36: [i8; 8];
let _37: ();
let _38: ();
{
_2 = [(-4203998215312607123_i64),(-6319564378092475971_i64),3527227840172140205_i64,6690947055404817855_i64,(-470665098655081101_i64),8241962943310620874_i64,901253758644735949_i64];
_9 = _1 >> _7;
RET = _5.0;
_3.0 = [_7,_7];
_3 = (_8,);
Call(_4 = fn10(_9, _3.0, _5, _8, _1, _2, _1, _6, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [(-2632273391304926783_i64),(-5122776005454922692_i64),3296161876257249634_i64,(-6531220188741266756_i64),1672622216654972699_i64,(-7396347288158197547_i64),(-2475385201733703715_i64)];
RET = [_7,_7];
_5.0 = _3.0;
_5.0 = [_7,_7];
RET = [_7,_7];
_9 = _1 & _1;
_10.fld2.0 = _8;
_9 = _7 as isize;
_6 = core::ptr::addr_of!(_2);
_10.fld1 = 162823290129827685316506987925842700053_u128 as f64;
Goto(bb2)
}
bb2 = {
_9 = -_1;
_3.0 = [_7,_7];
RET = [_7,_7];
_1 = -_9;
_1 = 228480628282512024486183567994520079880_u128 as isize;
_2 = [4486494518523796744_i64,(-5193299542716097891_i64),(-8718031731319282968_i64),(-2619483174085254659_i64),3683130563600096194_i64,(-8217553473022884499_i64),(-7169132445899360086_i64)];
_4 = _6;
_3.0 = [_7,_7];
_9 = 296484870164427509080340682386985618892_u128 as isize;
_1 = _9;
_8 = [_7,_7];
_4 = _6;
RET = _5.0;
_2 = [2573779381314554907_i64,(-1289677223228692192_i64),2739563463724365882_i64,1969195540308502076_i64,7691818561643331092_i64,4318568047616076949_i64,(-1505872290391948105_i64)];
_7 = !3_usize;
_11.fld0 = -1289822388_i32;
_10.fld2 = (_5.0,);
_5 = _3;
_4 = core::ptr::addr_of!((*_6));
RET = _8;
_10.fld2.0 = [_7,_7];
RET = _8;
_6 = _4;
RET = [_7,_7];
_3.0 = [_7,_7];
_6 = core::ptr::addr_of!((*_4));
Goto(bb3)
}
bb3 = {
_12 = 70_u8 * 251_u8;
_9 = _1 + _1;
_3.0 = _5.0;
_3.0 = _5.0;
_5.0 = RET;
RET = _5.0;
_5.0 = _10.fld2.0;
_12 = 221_u8;
_7 = !6_usize;
_11.fld0 = 1454446988_u32 as i32;
_12 = 12_u8;
_11.fld0 = _10.fld1 as i32;
_8 = [_7,_7];
_8 = [_7,_7];
_10.fld2.0 = [_7,_7];
_4 = core::ptr::addr_of!((*_6));
_1 = -_9;
_14.fld2 = _3;
_9 = -_1;
_7 = 39_i8 as usize;
_10.fld2 = _5;
_3.0 = [_7,_7];
_12 = 62_u8;
_1 = _9 ^ _9;
Call(_15 = fn12((*_4), (*_4), _1, (*_4), (*_4), (*_4), _2, (*_4), (*_6), _9, _2, _6, (*_4), _6, _4, _6), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_12 = 246_u8;
_9 = !_1;
_3 = _14.fld2;
_4 = core::ptr::addr_of!((*_4));
_7 = 16433754958675626425_usize >> _9;
_14.fld1 = -_10.fld1;
_17.fld2 = _10.fld2;
_4 = core::ptr::addr_of!((*_6));
_1 = _9 | _9;
_3 = _5;
_16 = [_12,_12,_12,_12,_12];
_14.fld2 = (_3.0,);
_11.fld0 = 1677504213_i32;
_17.fld1 = _15 as f64;
RET = _10.fld2.0;
_4 = _6;
_5 = (_10.fld2.0,);
_3.0 = [_7,_7];
Goto(bb5)
}
bb5 = {
_10.fld2.0 = [_7,_7];
_1 = _9;
_11.fld0 = true as i32;
_2 = [(-2668695492095731786_i64),(-6973164288808192693_i64),(-5317718226505788851_i64),6598856563987409593_i64,(-6070858536236665381_i64),(-1050259335389608670_i64),(-424163832958013037_i64)];
_16 = [_12,_12,_12,_12,_12];
_15 = -(-8_i8);
_20.fld2.0 = _1 >= _9;
_20.fld2.3.0 = ('\u{bfe58}', (-20034_i16), _9, 42581_u16);
_20.fld2.2 = !6267650402041269013_u64;
match _20.fld2.3.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768191422 => bb10,
_ => bb9
}
}
bb6 = {
_12 = 246_u8;
_9 = !_1;
_3 = _14.fld2;
_4 = core::ptr::addr_of!((*_4));
_7 = 16433754958675626425_usize >> _9;
_14.fld1 = -_10.fld1;
_17.fld2 = _10.fld2;
_4 = core::ptr::addr_of!((*_6));
_1 = _9 | _9;
_3 = _5;
_16 = [_12,_12,_12,_12,_12];
_14.fld2 = (_3.0,);
_11.fld0 = 1677504213_i32;
_17.fld1 = _15 as f64;
RET = _10.fld2.0;
_4 = _6;
_5 = (_10.fld2.0,);
_3.0 = [_7,_7];
Goto(bb5)
}
bb7 = {
_12 = 70_u8 * 251_u8;
_9 = _1 + _1;
_3.0 = _5.0;
_3.0 = _5.0;
_5.0 = RET;
RET = _5.0;
_5.0 = _10.fld2.0;
_12 = 221_u8;
_7 = !6_usize;
_11.fld0 = 1454446988_u32 as i32;
_12 = 12_u8;
_11.fld0 = _10.fld1 as i32;
_8 = [_7,_7];
_8 = [_7,_7];
_10.fld2.0 = [_7,_7];
_4 = core::ptr::addr_of!((*_6));
_1 = -_9;
_14.fld2 = _3;
_9 = -_1;
_7 = 39_i8 as usize;
_10.fld2 = _5;
_3.0 = [_7,_7];
_12 = 62_u8;
_1 = _9 ^ _9;
Call(_15 = fn12((*_4), (*_4), _1, (*_4), (*_4), (*_4), _2, (*_4), (*_6), _9, _2, _6, (*_4), _6, _4, _6), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_9 = -_1;
_3.0 = [_7,_7];
RET = [_7,_7];
_1 = -_9;
_1 = 228480628282512024486183567994520079880_u128 as isize;
_2 = [4486494518523796744_i64,(-5193299542716097891_i64),(-8718031731319282968_i64),(-2619483174085254659_i64),3683130563600096194_i64,(-8217553473022884499_i64),(-7169132445899360086_i64)];
_4 = _6;
_3.0 = [_7,_7];
_9 = 296484870164427509080340682386985618892_u128 as isize;
_1 = _9;
_8 = [_7,_7];
_4 = _6;
RET = _5.0;
_2 = [2573779381314554907_i64,(-1289677223228692192_i64),2739563463724365882_i64,1969195540308502076_i64,7691818561643331092_i64,4318568047616076949_i64,(-1505872290391948105_i64)];
_7 = !3_usize;
_11.fld0 = -1289822388_i32;
_10.fld2 = (_5.0,);
_5 = _3;
_4 = core::ptr::addr_of!((*_6));
RET = _8;
_10.fld2.0 = [_7,_7];
RET = _8;
_6 = _4;
RET = [_7,_7];
_3.0 = [_7,_7];
_6 = core::ptr::addr_of!((*_4));
Goto(bb3)
}
bb9 = {
_2 = [(-2632273391304926783_i64),(-5122776005454922692_i64),3296161876257249634_i64,(-6531220188741266756_i64),1672622216654972699_i64,(-7396347288158197547_i64),(-2475385201733703715_i64)];
RET = [_7,_7];
_5.0 = _3.0;
_5.0 = [_7,_7];
RET = [_7,_7];
_9 = _1 & _1;
_10.fld2.0 = _8;
_9 = _7 as isize;
_6 = core::ptr::addr_of!(_2);
_10.fld1 = 162823290129827685316506987925842700053_u128 as f64;
Goto(bb2)
}
bb10 = {
_20.fld2.3.1 = _20.fld2.3.0.3 as usize;
_3.0 = [_20.fld2.3.1,_7];
_20.fld0 = _15 as u64;
_3 = (_10.fld2.0,);
_20.fld1 = [_12,_12,_12,_12,_12];
_20.fld3 = [_9,_1,_20.fld2.3.0.2,_9,_9];
_20.fld2.3.0.3 = 6039023373090014249_i64 as u16;
_20.fld2.3.0 = ('\u{3215}', 3643_i16, _9, 56194_u16);
_20.fld2.3.0.1 = 12544_i16;
_14.fld2.0 = [_20.fld2.3.1,_7];
_20.fld2.1 = _10.fld2.0;
_10.fld2 = _14.fld2;
_20.fld2.1 = [_20.fld2.3.1,_20.fld2.3.1];
_20.fld2.3.2 = [_9,_20.fld2.3.0.2,_1];
_5 = (_20.fld2.1,);
Call(_7 = core::intrinsics::transmute(_9), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_20.fld2.3.2 = [_9,_1,_20.fld2.3.0.2];
_10.fld2 = (_20.fld2.1,);
_20.fld2.2 = _20.fld0;
_20.fld1 = [_12,_12,_12,_12,_12];
_20.fld2.0 = !true;
_3.0 = [_20.fld2.3.1,_20.fld2.3.1];
_11.fld0 = 106831356054428342348006819015664709338_u128 as i32;
_21 = Adt59::Variant0 { fld0: _20.fld2.3.0,fld1: _20.fld2.2,fld2: 9105262739217769021_i64 };
_20.fld2.0 = false;
_15 = !(-51_i8);
RET = [_7,_20.fld2.3.1];
_20.fld2.0 = _1 == _20.fld2.3.0.2;
_20.fld3 = [_1,Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).2,_20.fld2.3.0.2,_20.fld2.3.0.2,Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).2];
_17.fld2 = _5;
_9 = !Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).2;
_20.fld2.3.0.0 = Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).0;
_5 = (_20.fld2.1,);
_3.0 = [_20.fld2.3.1,_20.fld2.3.1];
_5 = _17.fld2;
_14.fld1 = _17.fld1;
_12 = _20.fld2.3.0.3 as u8;
_7 = !_20.fld2.3.1;
_23 = (_5, _14.fld2);
match Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).3 {
56194 => bb12,
_ => bb8
}
}
bb12 = {
_5.0 = RET;
_5 = _23.1;
_9 = _20.fld2.0 as isize;
_20.fld1 = [_12,_12,_12,_12,_12];
place!(Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0)) = _20.fld2.3.0;
_20.fld2.2 = _9 as u64;
_8 = [_20.fld2.3.1,_7];
_24 = [_9,_1,_1];
_15 = !(-119_i8);
_23.1.0 = [_20.fld2.3.1,_7];
_20.fld2.3.0.3 = !Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).3;
_10.fld1 = -_17.fld1;
_20.fld2.3 = (Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0), _7, _24);
_20.fld2.3.0.3 = _9 as u16;
_27.1 = (_20.fld2.1,);
RET = [_7,_7];
place!(Field::<i64>(Variant(_21, 0), 2)) = (-7541347266004776546_i64) + (-6878184610214060627_i64);
place!(Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0)).1 = _15 as i16;
_27 = (_23.0, _10.fld2);
_30 = (_8,);
_20.fld1 = _16;
_20.fld2.3.0.0 = Field::<(char, i16, isize, u16)>(Variant(_21, 0), 0).0;
_27.1.0 = _14.fld2.0;
_4 = core::ptr::addr_of!((*_6));
_23.1.0 = [_20.fld2.3.1,_7];
Goto(bb13)
}
bb13 = {
_5.0 = _30.0;
_17.fld1 = -_14.fld1;
_20.fld1 = _16;
SetDiscriminant(_21, 1);
_20.fld2.3.2 = _24;
place!(Field::<u128>(Variant(_21, 1), 3)) = _20.fld2.3.0.3 as u128;
place!(Field::<(u128, isize)>(Variant(_21, 1), 5)) = (Field::<u128>(Variant(_21, 1), 3), _20.fld2.3.0.2);
_33.1 = -Field::<(u128, isize)>(Variant(_21, 1), 5).1;
_31 = _11.fld0 as f32;
_20.fld1 = _16;
Goto(bb14)
}
bb14 = {
_25 = _33.1 as f32;
_20.fld4 = core::ptr::addr_of_mut!(_33);
place!(Field::<u16>(Variant(_21, 1), 7)) = !_20.fld2.3.0.3;
_32 = _20.fld2.3.0.0;
place!(Field::<(usize, i16)>(Variant(_21, 1), 0)) = (_20.fld2.3.1, _20.fld2.3.0.1);
_17.fld2 = (_14.fld2.0,);
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(9_usize, 27_usize, Move(_27), 24_usize, Move(_24), 2_usize, Move(_2), 30_usize, Move(_30)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(9_usize, 16_usize, Move(_16), 23_usize, Move(_23), 32_usize, Move(_32), 38_usize, _38), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: [usize; 2],mut _3: ([usize; 2],),mut _4: [usize; 2],mut _5: isize,mut _6: [i64; 7],mut _7: isize,mut _8: *const [i64; 7],mut _9: *const [i64; 7]) -> *const [i64; 7] {
mir! {
type RET = *const [i64; 7];
let _10: bool;
let _11: f64;
let _12: isize;
let _13: *const i64;
let _14: Adt56;
let _15: isize;
let _16: f64;
let _17: (usize, i16);
let _18: f32;
let _19: Adt45;
let _20: i64;
let _21: &'static usize;
let _22: [isize; 7];
let _23: isize;
let _24: Adt57;
let _25: (char, i16, isize, u16);
let _26: Adt51;
let _27: i64;
let _28: isize;
let _29: i16;
let _30: (char, i16, isize, u16);
let _31: f64;
let _32: [isize; 3];
let _33: isize;
let _34: ();
let _35: ();
{
_9 = _8;
_6 = [1569918726249460210_i64,(-6624859549514845413_i64),(-4232488615835725511_i64),223245098386504572_i64,7333913589945502609_i64,5769935414818099133_i64,(-775528695065913277_i64)];
_8 = core::ptr::addr_of!(_6);
_10 = _1 == _7;
_2 = [1_usize,3_usize];
_2 = _3.0;
_3 = (_4,);
_7 = _1;
_9 = core::ptr::addr_of!((*_8));
_1 = _7;
RET = _9;
_10 = true;
_9 = RET;
_3 = (_2,);
_14.fld2 = 15704_i16 as u64;
_5 = _1;
_12 = 900094395051513968_i64 as isize;
_3.0 = [1_usize,4547593105189362240_usize];
_6 = [(-2260695736918381881_i64),3442578293703590840_i64,(-6450935858216537807_i64),7482494219753872871_i64,816641393299612176_i64,(-3659796595882539366_i64),1643586263804091576_i64];
_10 = !false;
_14.fld3 = (204_u8, 266144957674048229078080918396944245355_u128);
_2 = _3.0;
_3.0 = [0_usize,2_usize];
_2 = [16117875384824837187_usize,5_usize];
_14.fld3.0 = 194_u8;
_5 = _12;
_8 = core::ptr::addr_of!((*_8));
Call(_14.fld1 = fn11(RET, _9, _14.fld3.1, _6, _2, RET, _9, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = _1;
_5 = _1;
_14.fld3.0 = 209_u8;
_6 = [(-9223325688875267039_i64),(-3734826856228634126_i64),7473709198194419998_i64,4199102632498376167_i64,3389268284811362969_i64,(-7021443550112931361_i64),8318897451998370962_i64];
RET = _9;
_3 = (_4,);
_4 = [13337186174097187958_usize,5_usize];
_1 = -_5;
_3 = (_2,);
_17.0 = 12635477228031599657_usize;
_9 = _8;
_3 = (_4,);
_16 = _1 as f64;
_14.fld3 = (82_u8, 206305595228385191879667032658494870641_u128);
_2 = [_17.0,_17.0];
_15 = !_7;
_16 = _14.fld3.0 as f64;
_9 = _8;
_8 = _9;
_17.1 = _7 as i16;
_14.fld3 = (141_u8, 63226523877337216049276192150937038821_u128);
_14.fld3 = (161_u8, 79433849425931111487881758091029264961_u128);
_16 = 11618_u16 as f64;
_7 = _5 << _15;
_9 = core::ptr::addr_of!(_6);
_7 = 3835430218_u32 as isize;
Goto(bb2)
}
bb2 = {
_10 = true;
_13 = core::ptr::addr_of!(_20);
_14.fld3.0 = _17.0 as u8;
RET = _8;
_7 = _15 | _15;
_14.fld3 = (171_u8, 193864507372604300956664126511160849976_u128);
_14.fld3 = (72_u8, 184752918950983607787242532376818888417_u128);
_4 = _3.0;
_14.fld2 = _14.fld3.0 as u64;
_18 = _17.0 as f32;
_17 = (6131597858350755872_usize, (-30775_i16));
_5 = _14.fld3.1 as isize;
_10 = false;
_21 = &_17.0;
_17.1 = -563_i16;
_15 = '\u{92e64}' as isize;
_11 = (-8213315248395130126_i64) as f64;
_22 = [_15,_1,_1,_1,_15,_7,_1];
_11 = _16;
match _17.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
6131597858350755872 => bb8,
_ => bb7
}
}
bb3 = {
_5 = _1;
_5 = _1;
_14.fld3.0 = 209_u8;
_6 = [(-9223325688875267039_i64),(-3734826856228634126_i64),7473709198194419998_i64,4199102632498376167_i64,3389268284811362969_i64,(-7021443550112931361_i64),8318897451998370962_i64];
RET = _9;
_3 = (_4,);
_4 = [13337186174097187958_usize,5_usize];
_1 = -_5;
_3 = (_2,);
_17.0 = 12635477228031599657_usize;
_9 = _8;
_3 = (_4,);
_16 = _1 as f64;
_14.fld3 = (82_u8, 206305595228385191879667032658494870641_u128);
_2 = [_17.0,_17.0];
_15 = !_7;
_16 = _14.fld3.0 as f64;
_9 = _8;
_8 = _9;
_17.1 = _7 as i16;
_14.fld3 = (141_u8, 63226523877337216049276192150937038821_u128);
_14.fld3 = (161_u8, 79433849425931111487881758091029264961_u128);
_16 = 11618_u16 as f64;
_7 = _5 << _15;
_9 = core::ptr::addr_of!(_6);
_7 = 3835430218_u32 as isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_14.fld1 = 169517385963117567745460367760264058281_i128 | 163624476669398265448161985558331783472_i128;
RET = _9;
_17.1 = -928_i16;
_7 = -_1;
_20 = !(-8800581375456787771_i64);
_25.2 = (-8_i8) as isize;
_17 = (6936631997219970649_usize, (-6388_i16));
_8 = _9;
_25.0 = '\u{280eb}';
_14.fld3 = (107_u8, 156392838784857952275818753139751255205_u128);
_3.0 = [_17.0,_17.0];
_25.0 = '\u{98d8b}';
match _14.fld3.1 {
0 => bb6,
1 => bb2,
156392838784857952275818753139751255205 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_1 = -_7;
_13 = core::ptr::addr_of!((*_13));
_17.0 = !11223033394353573147_usize;
Goto(bb11)
}
bb11 = {
_16 = _11 * _11;
_25.2 = !_1;
_8 = core::ptr::addr_of!(_6);
_17.0 = 5_usize << _25.2;
_25 = ('\u{8ac54}', _17.1, _1, 19043_u16);
_27 = _20 - (*_13);
_14.fld3.1 = !320488248371415374816735848507171408375_u128;
_25.2 = _1 | _1;
_11 = -_16;
_25.0 = '\u{4cf84}';
_30.0 = _25.0;
_21 = &_17.0;
RET = _8;
_30.1 = !_17.1;
_18 = _17.0 as f32;
RET = _9;
match _14.fld3.0 {
0 => bb7,
1 => bb2,
2 => bb6,
3 => bb8,
4 => bb12,
5 => bb13,
107 => bb15,
_ => bb14
}
}
bb12 = {
_10 = true;
_13 = core::ptr::addr_of!(_20);
_14.fld3.0 = _17.0 as u8;
RET = _8;
_7 = _15 | _15;
_14.fld3 = (171_u8, 193864507372604300956664126511160849976_u128);
_14.fld3 = (72_u8, 184752918950983607787242532376818888417_u128);
_4 = _3.0;
_14.fld2 = _14.fld3.0 as u64;
_18 = _17.0 as f32;
_17 = (6131597858350755872_usize, (-30775_i16));
_5 = _14.fld3.1 as isize;
_10 = false;
_21 = &_17.0;
_17.1 = -563_i16;
_15 = '\u{92e64}' as isize;
_11 = (-8213315248395130126_i64) as f64;
_22 = [_15,_1,_1,_1,_15,_7,_1];
_11 = _16;
match _17.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
6131597858350755872 => bb8,
_ => bb7
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_12 = _10 as isize;
_32 = [_15,_7,_25.2];
_18 = _25.3 as f32;
_9 = _8;
_14.fld3.0 = !16_u8;
_17.1 = _30.1 ^ _30.1;
_25 = (_30.0, _17.1, _1, 10130_u16);
_21 = &(*_21);
_14.fld3.1 = 339030310891074707222020721555189355926_u128 ^ 150779238052218526168225115901814261255_u128;
_10 = true;
_23 = _7;
_14.fld1 = (-90260464138019323513220736794522648353_i128) & 67675887321205635145030265063175574178_i128;
_33 = 882770803_i32 as isize;
Goto(bb16)
}
bb16 = {
Call(_34 = dump_var(10_usize, 3_usize, Move(_3), 1_usize, Move(_1), 12_usize, Move(_12), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(10_usize, 2_usize, Move(_2), 6_usize, Move(_6), 32_usize, Move(_32), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_34 = dump_var(10_usize, 22_usize, Move(_22), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: *const [i64; 7],mut _2: *const [i64; 7],mut _3: u128,mut _4: [i64; 7],mut _5: [usize; 2],mut _6: *const [i64; 7],mut _7: *const [i64; 7],mut _8: *const [i64; 7]) -> i128 {
mir! {
type RET = i128;
let _9: [i8; 8];
let _10: Adt55;
let _11: bool;
let _12: (i8, *const (usize, i16), ((usize, i16), isize, i128, [i64; 7]), (f32, u16));
let _13: Adt47;
let _14: char;
let _15: [u8; 5];
let _16: Adt53;
let _17: Adt60;
let _18: isize;
let _19: [usize; 2];
let _20: bool;
let _21: usize;
let _22: u16;
let _23: f64;
let _24: f64;
let _25: isize;
let _26: [isize; 7];
let _27: [u8; 5];
let _28: char;
let _29: Adt52;
let _30: ([usize; 2],);
let _31: f64;
let _32: Adt54;
let _33: Adt58;
let _34: &'static usize;
let _35: Adt46;
let _36: bool;
let _37: ((usize, i16), isize, i128, [i64; 7]);
let _38: f64;
let _39: (i8, *const (usize, i16), ((usize, i16), isize, i128, [i64; 7]), (f32, u16));
let _40: char;
let _41: [i64; 7];
let _42: usize;
let _43: ();
let _44: ();
{
RET = -86549793381542097211542589855912591177_i128;
_10.fld2 = (_5,);
_7 = _2;
_9 = [99_i8,(-87_i8),33_i8,104_i8,63_i8,(-104_i8),120_i8,24_i8];
_11 = false | false;
match _3 {
0 => bb1,
266144957674048229078080918396944245355 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_2 = core::ptr::addr_of!(_4);
_7 = _1;
_12.2.0.0 = !2997805912046040385_usize;
RET = 6133276924519972358_i64 as i128;
_1 = _2;
_10.fld2.0 = [_12.2.0.0,_12.2.0.0];
_11 = !false;
_10.fld0 = core::ptr::addr_of!(_12.3);
Goto(bb4)
}
bb4 = {
_12.3.1 = 50_i8 as u16;
_12.2.1 = -26_isize;
_12.2.2 = -RET;
_1 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_1));
_11 = true ^ true;
_12.2.0 = (796458188045740244_usize, (-19325_i16));
_12.2.1 = -9223372036854775807_isize;
_12.2.0.1 = (-121_i8) as i16;
_9 = [96_i8,96_i8,15_i8,(-89_i8),98_i8,121_i8,6_i8,42_i8];
_10.fld1 = 4456272434471514341_i64 as f64;
_12.2.3 = _4;
match _3 {
0 => bb2,
1 => bb5,
266144957674048229078080918396944245355 => bb7,
_ => bb6
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = _7;
_6 = _1;
_6 = core::ptr::addr_of!(_4);
_14 = '\u{7c441}';
_12.1 = core::ptr::addr_of!(_12.2.0);
_5 = _10.fld2.0;
_9 = [(-5_i8),93_i8,(-53_i8),4_i8,37_i8,(-70_i8),(-118_i8),(-2_i8)];
_17.fld0 = 1608872535_i32 >> _12.3.1;
_8 = _2;
_7 = _2;
_4 = [(-4471066482713137276_i64),8040324074530589792_i64,(-7205072086422542706_i64),1822954116967767203_i64,3774851757797557588_i64,8602306761082006586_i64,(-2945237217780882784_i64)];
_12.2.0.0 = 0_usize << _3;
_7 = core::ptr::addr_of!((*_2));
_12.1 = core::ptr::addr_of!(_12.2.0);
_10.fld2.0 = _5;
_10.fld2.0 = [_12.2.0.0,_12.2.0.0];
_18 = -_12.2.1;
_12.2.0.0 = 5_usize + 4_usize;
Goto(bb8)
}
bb8 = {
_12.2.0.1 = (-4949773669158616810_i64) as i16;
_12.2.1 = _12.3.1 as isize;
_12.2.0 = (13895107499633518587_usize, 4855_i16);
_10.fld0 = core::ptr::addr_of!(_12.3);
_21 = _12.2.0.0 << _12.2.0.0;
RET = 89_i8 as i128;
_18 = _3 as isize;
_12.3.0 = 3804132084404080675_u64 as f32;
_9 = [(-115_i8),(-88_i8),17_i8,28_i8,(-114_i8),106_i8,15_i8,(-37_i8)];
_8 = core::ptr::addr_of!((*_1));
_12.0 = (-15_i8);
_12.2.3 = [3076695309381293419_i64,(-1372009477124882275_i64),(-7989922094828351940_i64),8171179810564002920_i64,(-5085468645345351068_i64),(-4698755529417173388_i64),(-742552148658883142_i64)];
_9 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_15 = [2_u8,146_u8,10_u8,128_u8,213_u8];
_12.2.2 = RET;
_23 = -_10.fld1;
_22 = _12.3.1 | _12.3.1;
_10.fld2 = (_5,);
_19 = [_12.2.0.0,_12.2.0.0];
_10.fld2 = (_19,);
_18 = _12.2.1;
_4 = [6941107840175786200_i64,(-9108300390835452565_i64),2497069161102915767_i64,(-5912209806884162342_i64),4413705746874970046_i64,6122494988825097067_i64,9083187964502229936_i64];
_12.2.0 = (_21, (-8852_i16));
Goto(bb9)
}
bb9 = {
_1 = core::ptr::addr_of!((*_8));
_24 = _10.fld1 - _23;
_12.2.3 = [(-7290057951117333748_i64),5810010376179758476_i64,8630591456933597884_i64,2636954243145498367_i64,(-7966391627260055476_i64),(-5720005416263207407_i64),4425746802840468167_i64];
_5 = [_21,_21];
_10.fld0 = core::ptr::addr_of!(_12.3);
_25 = -_18;
RET = _10.fld1 as i128;
_19 = [_21,_12.2.0.0];
_12.3.1 = _22 + _22;
_26 = [_25,_25,_25,_18,_25,_25,_25];
_9 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
RET = -_12.2.2;
_10.fld1 = _23 * _23;
_25 = !_18;
_7 = _1;
_23 = _24;
_12.3.1 = _22 * _22;
_14 = '\u{9f9da}';
_29.fld2.3.0.3 = !_12.3.1;
_29.fld2.1 = [_12.2.0.0,_12.2.0.0];
_29.fld2.3.0.1 = RET as i16;
_30.0 = [_12.2.0.0,_12.2.0.0];
_12.2.2 = RET;
_29.fld2.3.0 = (_14, _12.2.0.1, _12.2.1, _22);
_10.fld2.0 = [_12.2.0.0,_21];
Goto(bb10)
}
bb10 = {
_10.fld0 = core::ptr::addr_of!(_12.3);
_20 = _12.2.0.1 <= _29.fld2.3.0.1;
_29.fld2.3.2 = [_12.2.1,_25,_25];
_1 = _8;
_29.fld2.3.0.2 = !_12.2.1;
_29.fld2.2 = 13184324142039583899_u64;
_12.2.3 = (*_6);
_37.3 = _12.2.3;
_37.1 = _18;
_37.3 = [(-8785726538787715455_i64),(-7176001341877403526_i64),(-1783938915121813994_i64),(-5215265746959241747_i64),7266949234674443540_i64,4214548679289064490_i64,(-5305517705276052221_i64)];
_1 = core::ptr::addr_of!((*_6));
_12.2.1 = -_25;
_28 = _29.fld2.3.0.0;
_29.fld2.0 = _20;
_12.2.1 = -_25;
_29.fld2.2 = 3067203495263147345_u64 & 14592434960055463203_u64;
match _29.fld2.3.0.1 {
0 => bb3,
1 => bb2,
2 => bb11,
340282366920938463463374607431768202604 => bb13,
_ => bb12
}
}
bb11 = {
_2 = core::ptr::addr_of!(_4);
_7 = _1;
_12.2.0.0 = !2997805912046040385_usize;
RET = 6133276924519972358_i64 as i128;
_1 = _2;
_10.fld2.0 = [_12.2.0.0,_12.2.0.0];
_11 = !false;
_10.fld0 = core::ptr::addr_of!(_12.3);
Goto(bb4)
}
bb12 = {
Return()
}
bb13 = {
_29.fld1 = [182_u8,58_u8,61_u8,139_u8,251_u8];
_11 = !_20;
_37.0.1 = _12.3.0 as i16;
_39.2.3 = [5808319993652482635_i64,(-3879755428190303750_i64),(-6933657920929005301_i64),1981780390832058442_i64,(-8002748265649276353_i64),8014341912356630372_i64,6232302449232579763_i64];
Goto(bb14)
}
bb14 = {
_39.2.0 = (_12.2.0.0, _12.2.0.1);
_17.fld0 = -1157378000_i32;
_35 = Adt46::Variant1 { fld0: _21 };
_24 = _23 - _10.fld1;
_37 = (_39.2.0, _29.fld2.3.0.2, _12.2.2, (*_8));
_37 = _12.2;
_10.fld0 = core::ptr::addr_of!(_39.3);
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(11_usize, 4_usize, Move(_4), 28_usize, Move(_28), 26_usize, Move(_26), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(11_usize, 14_usize, Move(_14), 20_usize, Move(_20), 25_usize, Move(_25), 37_usize, Move(_37)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [i64; 7],mut _2: [i64; 7],mut _3: isize,mut _4: [i64; 7],mut _5: [i64; 7],mut _6: [i64; 7],mut _7: [i64; 7],mut _8: [i64; 7],mut _9: [i64; 7],mut _10: isize,mut _11: [i64; 7],mut _12: *const [i64; 7],mut _13: [i64; 7],mut _14: *const [i64; 7],mut _15: *const [i64; 7],mut _16: *const [i64; 7]) -> i8 {
mir! {
type RET = i8;
let _17: bool;
let _18: (u8, u128);
let _19: (char, i16, isize, u16);
let _20: bool;
let _21: (([usize; 2],), ([usize; 2],));
let _22: bool;
let _23: *const i64;
let _24: i16;
let _25: *const u32;
let _26: char;
let _27: [i64; 7];
let _28: (f32, u16);
let _29: *const (usize, i16);
let _30: (u128, isize);
let _31: f64;
let _32: u64;
let _33: char;
let _34: ();
let _35: ();
{
_5 = _13;
_5 = [8834457241562135965_i64,1033455855636646267_i64,(-4821307123133753570_i64),7044830831589753687_i64,(-342543335237183015_i64),(-6033354887583036450_i64),(-7012102207881648261_i64)];
_1 = _11;
_14 = core::ptr::addr_of!(_8);
RET = 63_i8;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
63 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_9 = [5303556866509920589_i64,1172762343002643262_i64,9206804053060836473_i64,(-8629359970727003839_i64),(-911708344907623876_i64),(-1540550804249612656_i64),4505037418997037447_i64];
_1 = [(-1807171334227504937_i64),(-2945270564106970278_i64),74675134870185443_i64,(-1355350173240791762_i64),(-7765967015229149132_i64),246941607319471207_i64,(-609246412705389555_i64)];
_1 = [(-984740145641345512_i64),(-441383871820532925_i64),(-4526302849587161628_i64),7628048710943273780_i64,(-1504760497445714728_i64),7395684254429102541_i64,(-7577459419700899251_i64)];
_2 = [7098752782556796119_i64,6893552754623840181_i64,1743872135525949321_i64,4757388109119792323_i64,(-1962491249127547886_i64),5605499900960666005_i64,(-852738659200324731_i64)];
_9 = [5025228327567555705_i64,6884710000753466795_i64,(-8428684470636448975_i64),(-8585622472597592462_i64),(-4653505326909887258_i64),6414831030703805474_i64,5910496627209640806_i64];
_6 = [(-599577339625846131_i64),(-2248331153641471271_i64),8407539085518062902_i64,(-2660120446486569612_i64),6976112360448702382_i64,(-6702593765292769615_i64),3514447986900500248_i64];
RET = 90_u8 as i8;
_2 = [7482766912669465660_i64,628038383850000833_i64,3696818097314602051_i64,1194878720390751114_i64,(-3105371510665396816_i64),(-6791461523881954818_i64),(-639127954665162074_i64)];
RET = (-96_i8) ^ 126_i8;
_17 = !true;
_7 = [6183525056228743490_i64,(-2868813693817456840_i64),(-7740783978509557337_i64),1885749212593756305_i64,1510490346541448575_i64,7673840017124618249_i64,(-2849297780025424551_i64)];
Call(_18.1 = fn13(_16, _15, _2, _17, (*_14), _14, _7, _12, _14), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_18.1 = 176364735748189738017485179040937689730_u128;
_11 = _5;
_17 = !true;
RET = -(-74_i8);
_19 = ('\u{42399}', (-5324_i16), _10, 45012_u16);
_6 = [(-4812812277919037662_i64),6031171817192041170_i64,1651341747733011524_i64,(-2102433266623571102_i64),(-87490637324724262_i64),(-7915541178960993575_i64),(-188266513107005315_i64)];
_19.2 = _18.1 as isize;
_18.0 = 14_u8 << _19.1;
_8 = [2467988114725953668_i64,148048342138461042_i64,(-914432503070127591_i64),6240167213989275592_i64,3679459681610449107_i64,(-823047228016576648_i64),286127898181702799_i64];
Goto(bb10)
}
bb10 = {
_19.3 = 61719_u16;
_20 = !_17;
_15 = _14;
_2 = [(-4501558602265476195_i64),(-2027655649316948519_i64),6662825840612628665_i64,3866685195955203188_i64,(-3509272218660268363_i64),(-3341506775698375796_i64),(-4474665630336167182_i64)];
_17 = !_20;
_10 = _3;
_6 = [7758224906620145808_i64,5677553023471651606_i64,(-3479813605407251162_i64),3320174003880591328_i64,(-665709145460073369_i64),(-8039082405733884634_i64),(-6301173542456486178_i64)];
_19.0 = '\u{32fbc}';
Goto(bb11)
}
bb11 = {
_11 = [6448619622496755996_i64,6863444668630601941_i64,2982911949938017320_i64,4897868797623037946_i64,7937560173947522160_i64,9103948751560674283_i64,(-8226598341682639452_i64)];
_21.1.0 = [6_usize,2280766157679464272_usize];
_19.2 = _3 - _3;
_3 = _17 as isize;
_15 = _12;
_15 = _16;
RET = 11884518796365492428_u64 as i8;
_24 = _19.1 | _19.1;
_3 = _19.2 + _19.2;
_3 = _20 as isize;
_18 = (213_u8, 101142488858565952021955786446247351480_u128);
_8 = [(-455195600143345877_i64),(-8566891127050317424_i64),6175125257949826074_i64,8721232148035829812_i64,(-1925868982864625847_i64),(-2993429609442955226_i64),(-3840282099187665365_i64)];
_18.1 = !207557929603622962963712966216934330063_u128;
_17 = !_20;
Goto(bb12)
}
bb12 = {
_21.0 = _21.1;
RET = !101_i8;
_22 = _20;
_21.1 = (_21.0.0,);
_22 = _20;
_19.3 = !46051_u16;
_24 = _19.0 as i16;
_21.0.0 = _21.1.0;
_14 = core::ptr::addr_of!((*_14));
_22 = !_17;
match _19.1 {
0 => bb8,
1 => bb2,
2 => bb3,
340282366920938463463374607431768206132 => bb13,
_ => bb6
}
}
bb13 = {
RET = (-20_i8);
_15 = core::ptr::addr_of!(_13);
_22 = _17;
_10 = -_19.2;
_9 = [1613044204736243220_i64,2168699564343713133_i64,(-7060072834382315865_i64),1428981309967745060_i64,1373399444582655574_i64,726589945020831038_i64,(-862028511823628332_i64)];
_18 = (56_u8, 296996573131848949819108653163914973997_u128);
_21.0.0 = [7_usize,10384304242699774293_usize];
_14 = core::ptr::addr_of!(_6);
_19.2 = _10 + _10;
_8 = (*_15);
_7 = (*_15);
match _19.1 {
0 => bb5,
1 => bb14,
340282366920938463463374607431768206132 => bb16,
_ => bb15
}
}
bb14 = {
_21.0 = _21.1;
RET = !101_i8;
_22 = _20;
_21.1 = (_21.0.0,);
_22 = _20;
_19.3 = !46051_u16;
_24 = _19.0 as i16;
_21.0.0 = _21.1.0;
_14 = core::ptr::addr_of!((*_14));
_22 = !_17;
match _19.1 {
0 => bb8,
1 => bb2,
2 => bb3,
340282366920938463463374607431768206132 => bb13,
_ => bb6
}
}
bb15 = {
Return()
}
bb16 = {
_15 = _14;
_26 = _19.0;
_21.1.0 = _21.0.0;
_18.1 = _19.1 as u128;
_28.0 = 7829864858114900372_u64 as f32;
_22 = !_20;
_2 = [4836272771624143973_i64,(-2343739142146824046_i64),107926973939824806_i64,5113824751525395023_i64,(-3954371223419949040_i64),(-3792244107790296484_i64),(-1854862306757452845_i64)];
_19.1 = _24 | _24;
_15 = core::ptr::addr_of!(_5);
_27 = _11;
_19.1 = !_24;
_9 = [935929466972395653_i64,(-286463281136052057_i64),1243527647066814470_i64,(-2447977921058713059_i64),(-4776946323157546615_i64),(-8404986374080046670_i64),9036325271733468745_i64];
_18.1 = 205543650024338216030326353417329625053_u128 | 156445965900063542418363591909836831161_u128;
_22 = _20;
_15 = core::ptr::addr_of!((*_14));
_21.0 = (_21.1.0,);
_19.0 = _26;
_4 = (*_14);
_2 = [7136646530615571717_i64,(-5528300469975570226_i64),3048029368253231384_i64,(-7479834475779329068_i64),1050448802809193413_i64,8311416768232989858_i64,4450013296440564394_i64];
_30.1 = _19.2;
_30 = (_18.1, _3);
_28.1 = !_19.3;
_30 = (_18.1, _10);
_4 = _5;
_24 = _19.1;
_3 = _24 as isize;
RET = -69_i8;
Goto(bb17)
}
bb17 = {
Call(_34 = dump_var(12_usize, 18_usize, Move(_18), 17_usize, Move(_17), 10_usize, Move(_10), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_34 = dump_var(12_usize, 7_usize, Move(_7), 1_usize, Move(_1), 19_usize, Move(_19), 13_usize, Move(_13)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_34 = dump_var(12_usize, 6_usize, Move(_6), 11_usize, Move(_11), 4_usize, Move(_4), 35_usize, _35), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: *const [i64; 7],mut _2: *const [i64; 7],mut _3: [i64; 7],mut _4: bool,mut _5: [i64; 7],mut _6: *const [i64; 7],mut _7: [i64; 7],mut _8: *const [i64; 7],mut _9: *const [i64; 7]) -> u128 {
mir! {
type RET = u128;
let _10: [isize; 7];
let _11: (usize, i16);
let _12: char;
let _13: Adt60;
let _14: isize;
let _15: f64;
let _16: (usize, i16);
let _17: [usize; 2];
let _18: Adt57;
let _19: ((char, i16, isize, u16), usize, [isize; 3]);
let _20: [usize; 2];
let _21: f32;
let _22: isize;
let _23: Adt54;
let _24: f32;
let _25: u64;
let _26: Adt52;
let _27: f64;
let _28: f64;
let _29: u128;
let _30: f32;
let _31: Adt56;
let _32: isize;
let _33: (usize, i16);
let _34: Adt46;
let _35: char;
let _36: isize;
let _37: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)));
let _38: (u128, isize);
let _39: *const (usize, i16);
let _40: i128;
let _41: bool;
let _42: *const [i64; 7];
let _43: isize;
let _44: [isize; 7];
let _45: f32;
let _46: isize;
let _47: ();
let _48: ();
{
_1 = core::ptr::addr_of!(_5);
_5 = [(-597449886460645722_i64),(-3327794930050318293_i64),(-4842624354703162725_i64),4591804650671879960_i64,(-5839941745803667472_i64),5551178064186892821_i64,(-8347202600390215988_i64)];
_11 = (3781222632455876247_usize, 10794_i16);
RET = 163392694887734713732936350970337575745_u128 | 124537638805940050759835583286133841709_u128;
_10 = [86_isize,9223372036854775807_isize,40_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_4 = _11.1 != _11.1;
_12 = '\u{44faf}';
RET = 283336750212024519456685618681782054422_u128 ^ 212947319817954001261336129453361650888_u128;
_7 = [(-7904794636649345643_i64),6305445460090779543_i64,6291528106414386865_i64,2160086913692182780_i64,(-7744177882695614422_i64),6755158321905674034_i64,(-2707455591102370952_i64)];
_1 = _9;
_11.0 = !5_usize;
_12 = '\u{bbaaa}';
_11.0 = !2_usize;
_11.1 = 16498_i16;
RET = 100055794942664240637611172902476376073_u128;
_9 = core::ptr::addr_of!(_3);
_10 = [9223372036854775807_isize,9223372036854775807_isize,59_isize,(-9223372036854775808_isize),56_isize,(-19_isize),74_isize];
_16.1 = _11.1 + _11.1;
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_11 = (7_usize, _16.1);
Goto(bb1)
}
bb1 = {
_8 = _9;
_7 = (*_9);
_3 = _7;
_10 = [(-9223372036854775808_isize),(-119_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),21_isize,(-9223372036854775808_isize)];
_16.0 = !_11.0;
_10 = [(-48_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),17_isize,(-98_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = (_11.0, _11.1);
RET = 231109171525621437951797916852463936236_u128 ^ 63393884103821019043057544819337896761_u128;
_16.0 = (-2033333713766775099_i64) as usize;
_12 = '\u{19533}';
_7 = _3;
_11.1 = 101_isize as i16;
_9 = core::ptr::addr_of!(_3);
_9 = core::ptr::addr_of!((*_9));
_7 = [(-3398991731600144361_i64),(-792861927224446957_i64),4115593320305873617_i64,(-849044353929914199_i64),1565738673380014495_i64,(-7799273771036113190_i64),(-5031163087625748897_i64)];
_4 = true;
RET = !50950980385505891318929730245912094561_u128;
_13.fld0 = !(-958597681_i32);
_8 = _2;
_4 = !false;
_19.0 = (_12, _16.1, 9223372036854775807_isize, 3460_u16);
_14 = 13818097465311985763_u64 as isize;
_11.1 = _16.1;
_19.0.0 = _12;
_13.fld0 = 57412_i32;
Goto(bb2)
}
bb2 = {
_17 = [_16.0,_11.0];
_15 = (-154061359103486748265208149408230641131_i128) as f64;
_19.0 = (_12, _11.1, _14, 11030_u16);
_8 = core::ptr::addr_of!(_5);
_17 = [_11.0,_11.0];
_19.0.3 = 51423_u16 * 44043_u16;
_16.0 = !_11.0;
_1 = core::ptr::addr_of!((*_8));
_16.0 = !_11.0;
_15 = 19_i8 as f64;
_19.0.2 = -_14;
_19.0.1 = _16.1 | _11.1;
_2 = core::ptr::addr_of!((*_8));
_19.0.3 = 7157223849974764633_u64 as u16;
_5 = [(-7542338399857331937_i64),(-7019721124182401365_i64),4435948809543665030_i64,(-3166987717784477330_i64),4027928481989110941_i64,1252216449188579482_i64,465116999864946450_i64];
_11.0 = _16.0 - _16.0;
_19.0.0 = _12;
_26.fld1 = [57_u8,4_u8,210_u8,207_u8,107_u8];
match _13.fld0 {
57412 => bb4,
_ => bb3
}
}
bb3 = {
_8 = _9;
_7 = (*_9);
_3 = _7;
_10 = [(-9223372036854775808_isize),(-119_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),21_isize,(-9223372036854775808_isize)];
_16.0 = !_11.0;
_10 = [(-48_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),17_isize,(-98_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = (_11.0, _11.1);
RET = 231109171525621437951797916852463936236_u128 ^ 63393884103821019043057544819337896761_u128;
_16.0 = (-2033333713766775099_i64) as usize;
_12 = '\u{19533}';
_7 = _3;
_11.1 = 101_isize as i16;
_9 = core::ptr::addr_of!(_3);
_9 = core::ptr::addr_of!((*_9));
_7 = [(-3398991731600144361_i64),(-792861927224446957_i64),4115593320305873617_i64,(-849044353929914199_i64),1565738673380014495_i64,(-7799273771036113190_i64),(-5031163087625748897_i64)];
_4 = true;
RET = !50950980385505891318929730245912094561_u128;
_13.fld0 = !(-958597681_i32);
_8 = _2;
_4 = !false;
_19.0 = (_12, _16.1, 9223372036854775807_isize, 3460_u16);
_14 = 13818097465311985763_u64 as isize;
_11.1 = _16.1;
_19.0.0 = _12;
_13.fld0 = 57412_i32;
Goto(bb2)
}
bb4 = {
_26.fld2.3.2 = [_19.0.2,_19.0.2,_14];
_26.fld2.3.0.2 = _19.0.2 | _19.0.2;
_22 = _14;
_21 = (-6794455979196525968_i64) as f32;
_19.1 = _16.0;
_16.0 = _19.0.0 as usize;
_26.fld2.1 = [_19.1,_11.0];
_16.1 = _11.1 ^ _19.0.1;
_26.fld2.3.0.3 = _13.fld0 as u16;
_25 = _21 as u64;
_29 = RET;
_27 = _15;
_21 = _16.1 as f32;
_4 = !false;
match _13.fld0 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
57412 => bb11,
_ => bb10
}
}
bb5 = {
_8 = _9;
_7 = (*_9);
_3 = _7;
_10 = [(-9223372036854775808_isize),(-119_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),21_isize,(-9223372036854775808_isize)];
_16.0 = !_11.0;
_10 = [(-48_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),17_isize,(-98_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = (_11.0, _11.1);
RET = 231109171525621437951797916852463936236_u128 ^ 63393884103821019043057544819337896761_u128;
_16.0 = (-2033333713766775099_i64) as usize;
_12 = '\u{19533}';
_7 = _3;
_11.1 = 101_isize as i16;
_9 = core::ptr::addr_of!(_3);
_9 = core::ptr::addr_of!((*_9));
_7 = [(-3398991731600144361_i64),(-792861927224446957_i64),4115593320305873617_i64,(-849044353929914199_i64),1565738673380014495_i64,(-7799273771036113190_i64),(-5031163087625748897_i64)];
_4 = true;
RET = !50950980385505891318929730245912094561_u128;
_13.fld0 = !(-958597681_i32);
_8 = _2;
_4 = !false;
_19.0 = (_12, _16.1, 9223372036854775807_isize, 3460_u16);
_14 = 13818097465311985763_u64 as isize;
_11.1 = _16.1;
_19.0.0 = _12;
_13.fld0 = 57412_i32;
Goto(bb2)
}
bb6 = {
_17 = [_16.0,_11.0];
_15 = (-154061359103486748265208149408230641131_i128) as f64;
_19.0 = (_12, _11.1, _14, 11030_u16);
_8 = core::ptr::addr_of!(_5);
_17 = [_11.0,_11.0];
_19.0.3 = 51423_u16 * 44043_u16;
_16.0 = !_11.0;
_1 = core::ptr::addr_of!((*_8));
_16.0 = !_11.0;
_15 = 19_i8 as f64;
_19.0.2 = -_14;
_19.0.1 = _16.1 | _11.1;
_2 = core::ptr::addr_of!((*_8));
_19.0.3 = 7157223849974764633_u64 as u16;
_5 = [(-7542338399857331937_i64),(-7019721124182401365_i64),4435948809543665030_i64,(-3166987717784477330_i64),4027928481989110941_i64,1252216449188579482_i64,465116999864946450_i64];
_11.0 = _16.0 - _16.0;
_19.0.0 = _12;
_26.fld1 = [57_u8,4_u8,210_u8,207_u8,107_u8];
match _13.fld0 {
57412 => bb4,
_ => bb3
}
}
bb7 = {
_8 = _9;
_7 = (*_9);
_3 = _7;
_10 = [(-9223372036854775808_isize),(-119_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),21_isize,(-9223372036854775808_isize)];
_16.0 = !_11.0;
_10 = [(-48_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),17_isize,(-98_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = (_11.0, _11.1);
RET = 231109171525621437951797916852463936236_u128 ^ 63393884103821019043057544819337896761_u128;
_16.0 = (-2033333713766775099_i64) as usize;
_12 = '\u{19533}';
_7 = _3;
_11.1 = 101_isize as i16;
_9 = core::ptr::addr_of!(_3);
_9 = core::ptr::addr_of!((*_9));
_7 = [(-3398991731600144361_i64),(-792861927224446957_i64),4115593320305873617_i64,(-849044353929914199_i64),1565738673380014495_i64,(-7799273771036113190_i64),(-5031163087625748897_i64)];
_4 = true;
RET = !50950980385505891318929730245912094561_u128;
_13.fld0 = !(-958597681_i32);
_8 = _2;
_4 = !false;
_19.0 = (_12, _16.1, 9223372036854775807_isize, 3460_u16);
_14 = 13818097465311985763_u64 as isize;
_11.1 = _16.1;
_19.0.0 = _12;
_13.fld0 = 57412_i32;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_14 = _21 as isize;
_4 = false;
_11 = _16;
_10 = [_26.fld2.3.0.2,_14,_26.fld2.3.0.2,_14,_26.fld2.3.0.2,_14,_26.fld2.3.0.2];
_26.fld0 = !_25;
_11 = (_19.1, _16.1);
_29 = !RET;
_26.fld2.3.0.0 = _12;
_11.0 = _19.1 - _19.1;
_31.fld3.1 = (-2_i8) as u128;
_20 = [_11.0,_11.0];
_19.2 = [_26.fld2.3.0.2,_14,_19.0.2];
_26.fld2.3.1 = _19.1;
_26.fld2.3.0.2 = -_14;
_29 = 316517906_u32 as u128;
_26.fld2.3.0.0 = _19.0.0;
_26.fld0 = _25 & _25;
_33.0 = _11.0 ^ _19.1;
_31.fld2 = _12 as u64;
_31.fld3 = (61_u8, _29);
_9 = core::ptr::addr_of!((*_9));
_37.3.1.0 = [_33.0,_11.0];
_37.1.0 = _26.fld2.3.0.0;
Goto(bb12)
}
bb12 = {
_26.fld2.2 = !_31.fld2;
_31.fld3.0 = _25 as u8;
_7 = [7767982868741543210_i64,(-695842254837728750_i64),(-7293040057643017460_i64),2244854899607361488_i64,127744389807441548_i64,2064358073122583873_i64,(-7174449618750145129_i64)];
_26.fld2.3.0 = (_37.1.0, _19.0.1, _19.0.2, _19.0.3);
_13.fld0 = _4 as i32;
_16.0 = _26.fld2.3.1;
_25 = _31.fld2 << _26.fld2.3.0.1;
_26.fld2.3.0.2 = _4 as isize;
_26.fld2.2 = _31.fld2;
_15 = -_27;
_31.fld1 = (-1029899751957032035_i64) as i128;
_33.0 = _13.fld0 as usize;
_39 = core::ptr::addr_of!(_16);
_14 = -_19.0.2;
_33 = (*_39);
_37.0 = _29 & _31.fld3.1;
_39 = core::ptr::addr_of!(_33);
_19 = (_26.fld2.3.0, _11.0, _26.fld2.3.2);
_26.fld2.2 = _25;
_26.fld2.3.2 = _19.2;
Goto(bb13)
}
bb13 = {
_36 = _31.fld1 as isize;
_29 = _31.fld3.1 >> (*_39).1;
_38.0 = _31.fld3.0 as u128;
_37.1.1 = -(*_39).1;
_26.fld4 = core::ptr::addr_of_mut!(_38);
Call(_26.fld0 = fn14(_37.1.1, _20, _14, _13.fld0, _19.0, _16.1, _19.0, _26.fld2.3.0.1, _10, _26.fld2.1, _25, _9, _7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_10 = [_26.fld2.3.0.2,_14,_36,_26.fld2.3.0.2,_14,_14,_19.0.2];
_33.1 = _26.fld2.3.0.1;
_19 = (_26.fld2.3.0, _33.0, _26.fld2.3.2);
_25 = _13.fld0 as u64;
_37.1.2 = _19.0.2;
_35 = _19.0.0;
_37.3.0 = (_17,);
_31.fld3.0 = 226_u8 + 60_u8;
_26.fld1 = [_31.fld3.0,_31.fld3.0,_31.fld3.0,_31.fld3.0,_31.fld3.0];
_37.2 = _13.fld0;
_11.0 = !_26.fld2.3.1;
_9 = core::ptr::addr_of!((*_8));
_45 = -_21;
_28 = _31.fld3.0 as f64;
_2 = core::ptr::addr_of!(_3);
_8 = core::ptr::addr_of!(_5);
_33.1 = _16.1 & _11.1;
_13.fld0 = _37.2 >> _26.fld0;
_26.fld4 = core::ptr::addr_of_mut!(_38);
_26.fld2.3.0.2 = -_37.1.2;
_16 = (_19.1, (*_39).1);
_16 = (*_39);
_26.fld2.3.0 = (_19.0.0, (*_39).1, _37.1.2, _19.0.3);
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(13_usize, 29_usize, Move(_29), 11_usize, Move(_11), 12_usize, Move(_12), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(13_usize, 36_usize, Move(_36), 3_usize, Move(_3), 16_usize, Move(_16), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(13_usize, 19_usize, Move(_19), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: i16,mut _2: [usize; 2],mut _3: isize,mut _4: i32,mut _5: (char, i16, isize, u16),mut _6: i16,mut _7: (char, i16, isize, u16),mut _8: i16,mut _9: [isize; 7],mut _10: [usize; 2],mut _11: u64,mut _12: *const [i64; 7],mut _13: [i64; 7]) -> u64 {
mir! {
type RET = u64;
let _14: Adt54;
let _15: Adt54;
let _16: i8;
let _17: Adt51;
let _18: bool;
let _19: Adt61;
let _20: i16;
let _21: Adt49;
let _22: u64;
let _23: Adt49;
let _24: ((usize, i16), isize, i128, [i64; 7]);
let _25: isize;
let _26: Adt49;
let _27: u128;
let _28: ([usize; 2],);
let _29: f64;
let _30: f64;
let _31: u64;
let _32: Adt52;
let _33: f64;
let _34: i128;
let _35: [i32; 8];
let _36: Adt58;
let _37: ();
let _38: ();
{
Goto(bb1)
}
bb1 = {
_11 = !16127961240625457324_u64;
_10 = _2;
RET = _11 - _11;
_12 = core::ptr::addr_of!(_13);
_5.3 = !_7.3;
_2 = _10;
_1 = 274620795593586169954045623643400523107_u128 as i16;
_13 = [(-1264247807266379901_i64),8035053424134357548_i64,860201468116389028_i64,1662384732837201708_i64,1249591326420866853_i64,3749477944561979194_i64,(-8699226868979559784_i64)];
_7.2 = !_3;
_3 = -_5.2;
_5.2 = _3;
_16 = _5.0 as i8;
_10 = _2;
_6 = -_7.1;
_5.2 = !_3;
_4 = RET as i32;
_5.3 = _7.3;
_7.1 = _5.1 + _8;
_6 = _7.1;
RET = !_11;
_16 = !48_i8;
RET = _11;
_16 = (-124_i8);
_9 = [_3,_7.2,_5.2,_7.2,_3,_5.2,_5.2];
match _16 {
0 => bb2,
340282366920938463463374607431768211332 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
RET = !_11;
_12 = core::ptr::addr_of!(_13);
_18 = false ^ false;
_12 = core::ptr::addr_of!((*_12));
_1 = _7.1 & _8;
_5.2 = _7.2 & _7.2;
_2 = [4_usize,2015615960701278878_usize];
_5.2 = _7.2 - _3;
_3 = -_7.2;
_7.3 = _5.3;
_5.1 = _1;
_8 = _6;
_3 = _7.2 - _5.2;
_7.1 = !_6;
_12 = core::ptr::addr_of!(_13);
RET = 1804142299_u32 as u64;
_5.1 = -_8;
Goto(bb5)
}
bb5 = {
_12 = core::ptr::addr_of!((*_12));
_5 = (_7.0, _7.1, _3, _7.3);
_3 = -_5.2;
_11 = RET * RET;
Goto(bb6)
}
bb6 = {
_9 = [_5.2,_5.2,_3,_7.2,_3,_5.2,_7.2];
_1 = !_6;
_10 = _2;
_9 = [_7.2,_3,_3,_7.2,_5.2,_3,_7.2];
_11 = RET;
Goto(bb7)
}
bb7 = {
_7.3 = !_5.3;
_7.2 = -_3;
_5.2 = _7.2 + _3;
_18 = false;
Goto(bb8)
}
bb8 = {
_5.1 = _8;
_7.2 = _11 as isize;
_3 = _5.2;
_12 = core::ptr::addr_of!((*_12));
_5 = (_7.0, _6, _3, _7.3);
_4 = _18 as i32;
_8 = _7.1;
_5.3 = 6473669536355076080_usize as u16;
_8 = _7.1;
_5 = (_7.0, _1, _3, _7.3);
_5.1 = _7.1;
_13 = [7940084917508435581_i64,7645320742299611438_i64,3786623758275084932_i64,173905122676610932_i64,8745053924565850311_i64,(-1190884727532652216_i64),(-5316679850680083661_i64)];
_8 = -_5.1;
_7.1 = _7.3 as i16;
_6 = -_8;
Goto(bb9)
}
bb9 = {
_7.2 = _5.2 >> _3;
_20 = _7.1;
_3 = _7.2 + _7.2;
_2 = [1_usize,17174555438492450656_usize];
_7.3 = _5.3;
RET = _11;
_11 = RET;
_7.3 = _5.3 | _5.3;
_6 = _5.1 | _8;
_2 = [2436413503389564821_usize,3473054194578259645_usize];
RET = !_11;
_10 = _2;
_24.0.1 = _5.1;
_6 = _18 as i16;
_5.2 = _7.3 as isize;
_7.3 = !_5.3;
_11 = !RET;
_10 = [8116826364619524425_usize,10188469839223695403_usize];
_6 = _24.0.1 ^ _20;
_11 = RET >> _6;
_8 = _24.0.1;
_5.2 = -_3;
_24.1 = _5.3 as isize;
Call(_27 = fn15(_9, _5, _5.2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_22 = _11;
_24.2 = 27406564244224500442674324814560676523_i128;
_24.0.1 = _4 as i16;
_3 = -_7.2;
_27 = 71256290348983967268433763961770528843_u128;
RET = _7.3 as u64;
_7.3 = _5.2 as u16;
_11 = 55_u8 as u64;
_24.0.0 = 2_usize << _5.2;
_27 = !330077770657792380222108489177805102740_u128;
_7.3 = _5.3;
_7 = (_5.0, _6, _24.1, _5.3);
_24.0 = (7_usize, _6);
_7 = (_5.0, _24.0.1, _5.2, _5.3);
_2 = [_24.0.0,_24.0.0];
_7.2 = _5.2;
_20 = _5.1;
_5.2 = -_7.2;
_28 = (_2,);
_24.0.0 = 10077183865119372931_usize;
_4 = 403560245_i32 - 590549510_i32;
_30 = _24.0.0 as f64;
RET = !_22;
_7.1 = 202427763973052725_i64 as i16;
_29 = _7.2 as f64;
_18 = !true;
_1 = !_24.0.1;
match _24.2 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
27406564244224500442674324814560676523 => bb11,
_ => bb9
}
}
bb11 = {
_9 = [_3,_5.2,_7.2,_3,_5.2,_3,_7.2];
_25 = !_7.2;
_7 = (_5.0, _8, _5.2, _5.3);
_25 = _5.0 as isize;
Goto(bb12)
}
bb12 = {
_32.fld2.1 = [_24.0.0,_24.0.0];
_32.fld1 = [58_u8,212_u8,245_u8,216_u8,208_u8];
_32.fld2.0 = _1 != _8;
match _24.0.0 {
0 => bb8,
1 => bb5,
10077183865119372931 => bb14,
_ => bb13
}
}
bb13 = {
_9 = [_3,_5.2,_7.2,_3,_5.2,_3,_7.2];
_25 = !_7.2;
_7 = (_5.0, _8, _5.2, _5.3);
_25 = _5.0 as isize;
Goto(bb12)
}
bb14 = {
_32.fld2.2 = _16 as u64;
_10 = [_24.0.0,_24.0.0];
_33 = -_29;
_27 = !291053853670492279469515087684138045473_u128;
_32.fld2.2 = _3 as u64;
RET = _3 as u64;
_32.fld2.3.0.2 = _7.2 - _24.1;
RET = _32.fld2.2 ^ _32.fld2.2;
_32.fld2.3.2 = [_5.2,_7.2,_32.fld2.3.0.2];
_6 = !_20;
_32.fld2.0 = _18;
_7.1 = _1 | _20;
_24.1 = _24.0.0 as isize;
_7 = (_5.0, _8, _32.fld2.3.0.2, _5.3);
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(14_usize, 5_usize, Move(_5), 20_usize, Move(_20), 3_usize, Move(_3), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(14_usize, 22_usize, Move(_22), 10_usize, Move(_10), 2_usize, Move(_2), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(14_usize, 8_usize, Move(_8), 38_usize, _38, 38_usize, _38, 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [isize; 7],mut _2: (char, i16, isize, u16),mut _3: isize) -> u128 {
mir! {
type RET = u128;
let _4: [isize; 7];
let _5: u64;
let _6: ([usize; 2],);
let _7: f64;
let _8: u8;
let _9: Adt49;
let _10: [usize; 2];
let _11: i8;
let _12: (([usize; 2],), ([usize; 2],));
let _13: *const (f32, u16);
let _14: Adt50;
let _15: Adt53;
let _16: isize;
let _17: f64;
let _18: *const [i64; 7];
let _19: Adt61;
let _20: (f32, u16);
let _21: isize;
let _22: isize;
let _23: ((usize, i16), isize, i128, [i64; 7]);
let _24: (bool, [usize; 2], u64, ((char, i16, isize, u16), usize, [isize; 3]), *const u32);
let _25: ();
let _26: ();
{
RET = !272374822182460025835676815738180552128_u128;
_2.0 = '\u{635fc}';
_2.2 = RET as isize;
_2 = ('\u{57fdb}', 24923_i16, _3, 31916_u16);
_4 = _1;
RET = 122785118754465418041653722817126484580_u128;
RET = 339225694958704563175067532852408570095_u128 & 5415671095930111528838584833576820675_u128;
_3 = -_2.2;
RET = 323809418185478100504861204923665153150_u128;
_4 = [_2.2,_2.2,_3,_2.2,_2.2,_3,_2.2];
_2 = ('\u{4fa1e}', (-32686_i16), _3, 18270_u16);
_2.3 = 60_u8 as u16;
_2 = ('\u{d0a12}', (-26150_i16), _3, 16908_u16);
_2.1 = 16459_i16;
RET = 325797827186286418914875671723388516758_u128 * 305716572135498450058108871449625692324_u128;
_2 = ('\u{b47d7}', 26976_i16, _3, 53330_u16);
RET = !309297643491322021425595406942761403066_u128;
_5 = 9041782780091435845_u64;
_1 = _4;
RET = 80640847628514837336984468232737974470_u128;
_2.0 = '\u{ed65e}';
_6.0 = [17390950826690608100_usize,4909277691850400671_usize];
_7 = RET as f64;
RET = (-69802041863769612367043307071686118303_i128) as u128;
_3 = !_2.2;
match _2.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
26976 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_4 = [_3,_2.2,_3,_2.2,_3,_2.2,_3];
_5 = 10664246704010418405_u64 - 14508582724846601301_u64;
_3 = _2.2;
_8 = 10_u8;
_8 = !55_u8;
_2 = ('\u{101fe3}', (-1101_i16), _3, 20516_u16);
_2.2 = _3;
_2.0 = '\u{42424}';
_3 = _5 as isize;
_2.2 = _3;
Goto(bb9)
}
bb9 = {
_2.0 = '\u{6867b}';
_8 = RET as u8;
_6.0 = [4799009385666731004_usize,5_usize];
_6.0 = [2376184831342961718_usize,7_usize];
_7 = 745253470_u32 as f64;
_8 = !23_u8;
_5 = 6564997469547625643_u64;
RET = _5 as u128;
_2.3 = !4744_u16;
_6.0 = [12935845631873967357_usize,7507026021562976331_usize];
_4 = [_2.2,_3,_2.2,_2.2,_2.2,_3,_2.2];
_10 = _6.0;
RET = 95072211622222506763439930195777269611_u128;
_6 = (_10,);
_12.1 = (_6.0,);
_6.0 = [6_usize,12152874683403990617_usize];
_1 = _4;
_4 = [_3,_2.2,_3,_3,_2.2,_3,_2.2];
match _2.1 {
340282366920938463463374607431768210355 => bb10,
_ => bb7
}
}
bb10 = {
RET = 103792662210852687287794487223819128878_u128;
_12 = (_6, _6);
_4 = _1;
_12.0.0 = [4_usize,2_usize];
_10 = [7_usize,17100528880026425607_usize];
RET = 187834831879017579321932837804420510550_u128 ^ 31962019958827677814739367979876064094_u128;
_6 = (_10,);
_8 = 248_u8;
_1 = [_3,_3,_2.2,_2.2,_3,_2.2,_3];
_6 = (_10,);
_12.0 = _12.1;
_12.1.0 = [3_usize,5_usize];
_2.0 = '\u{61334}';
_2.3 = 5292671959796699539_usize as u16;
_4 = [_2.2,_2.2,_3,_2.2,_2.2,_3,_3];
match _2.1 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb11,
340282366920938463463374607431768210355 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_2.2 = _3 >> _2.1;
_12.1.0 = _6.0;
_12.1.0 = [18211138296629482707_usize,2_usize];
_12.1 = (_12.0.0,);
_1 = [_2.2,_2.2,_2.2,_2.2,_2.2,_2.2,_2.2];
_12.1 = _12.0;
_7 = _5 as f64;
_6.0 = _12.1.0;
_16 = _2.2 & _2.2;
_8 = !231_u8;
_2.2 = _16 - _16;
_11 = -93_i8;
_5 = 10154266311500158015_u64;
_2 = ('\u{91708}', (-32685_i16), _16, 50962_u16);
_10 = [6_usize,1342890240464852894_usize];
_2.1 = (-9724_i16);
_2.0 = '\u{4ec29}';
_3 = _16;
_5 = true as u64;
_7 = RET as f64;
match _2.3 {
0 => bb7,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
50962 => bb20,
_ => bb19
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET = 103792662210852687287794487223819128878_u128;
_12 = (_6, _6);
_4 = _1;
_12.0.0 = [4_usize,2_usize];
_10 = [7_usize,17100528880026425607_usize];
RET = 187834831879017579321932837804420510550_u128 ^ 31962019958827677814739367979876064094_u128;
_6 = (_10,);
_8 = 248_u8;
_1 = [_3,_3,_2.2,_2.2,_3,_2.2,_3];
_6 = (_10,);
_12.0 = _12.1;
_12.1.0 = [3_usize,5_usize];
_2.0 = '\u{61334}';
_2.3 = 5292671959796699539_usize as u16;
_4 = [_2.2,_2.2,_3,_2.2,_2.2,_3,_3];
match _2.1 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb11,
340282366920938463463374607431768210355 => bb13,
_ => bb12
}
}
bb17 = {
Return()
}
bb18 = {
_4 = [_3,_2.2,_3,_2.2,_3,_2.2,_3];
_5 = 10664246704010418405_u64 - 14508582724846601301_u64;
_3 = _2.2;
_8 = 10_u8;
_8 = !55_u8;
_2 = ('\u{101fe3}', (-1101_i16), _3, 20516_u16);
_2.2 = _3;
_2.0 = '\u{42424}';
_3 = _5 as isize;
_2.2 = _3;
Goto(bb9)
}
bb19 = {
Return()
}
bb20 = {
_7 = RET as f64;
RET = !217226325381952593471471526629685991989_u128;
_12.1.0 = [4_usize,7_usize];
_12.0.0 = [7477273534830247437_usize,5_usize];
_6 = (_12.0.0,);
_12.0.0 = [3342789794362205813_usize,0_usize];
_6 = (_12.1.0,);
_3 = -_16;
_16 = _2.2;
_16 = _2.2 & _2.2;
_12.0 = (_6.0,);
_2.1 = _5 as i16;
_6 = (_12.1.0,);
_2 = ('\u{5988c}', (-31966_i16), _16, 54475_u16);
_16 = _8 as isize;
_4 = _1;
_6 = _12.1;
_2.1 = -(-20075_i16);
_12.1.0 = _6.0;
_21 = !_2.2;
_1 = [_3,_2.2,_3,_21,_21,_21,_3];
Goto(bb21)
}
bb21 = {
Call(_25 = dump_var(15_usize, 16_usize, Move(_16), 3_usize, Move(_3), 6_usize, Move(_6), 12_usize, Move(_12)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_25 = dump_var(15_usize, 8_usize, Move(_8), 10_usize, Move(_10), 26_usize, _26, 26_usize, _26), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: i128,mut _2: [i64; 7],mut _3: [i64; 7],mut _4: ([usize; 2],),mut _5: Adt45,mut _6: Adt45,mut _7: Adt45,mut _8: [i64; 7]) -> (usize, i16) {
mir! {
type RET = (usize, i16);
let _9: Adt55;
let _10: [isize; 5];
let _11: [i8; 8];
let _12: u8;
let _13: char;
let _14: u64;
let _15: bool;
let _16: Adt50;
let _17: f32;
let _18: [u8; 5];
let _19: (f32, u16);
let _20: *mut (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)));
let _21: Adt53;
let _22: u32;
let _23: isize;
let _24: isize;
let _25: (u8, u128);
let _26: (char, i16, isize, u16);
let _27: u32;
let _28: ();
let _29: ();
{
RET.0 = 330869329726166469875146078605840892894_u128 as usize;
_9.fld1 = _1 as f64;
SetDiscriminant(_5, 1);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).1.2 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).1.0 = [RET.0,RET.0];
RET = (16371021399192697858_usize, 29737_i16);
place!(Field::<[i32; 8]>(Variant(_5, 1), 3)) = [293567386_i32,525954525_i32,283631243_i32,1935726752_i32,(-1402843890_i32),(-1784451541_i32),(-1718690528_i32),166855835_i32];
RET.1 = (-120_i8) as i16;
SetDiscriminant(_7, 0);
_4.0 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5).1.0;
SetDiscriminant(_6, 2);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).1 = ('\u{9d6a3}', RET.1, (-9223372036854775808_isize), 36603_u16);
place!(Field::<[i32; 8]>(Variant(_5, 1), 3)) = [960352428_i32,1691012319_i32,1833673642_i32,482923569_i32,686106954_i32,1898833957_i32,(-1003515605_i32),1237885263_i32];
_9.fld1 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2 as f64;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_6, 2), 2)).0.0 = [RET.0,RET.0];
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).3.1.0 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_6, 2), 2).0.0;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).1 = (_4.0,);
_2 = _8;
place!(Field::<[i64; 7]>(Variant(_7, 0), 0)) = _8;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).3 = (Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5).1, Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5).1);
match Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.3 {
0 => bb1,
1 => bb2,
2 => bb3,
36603 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_9.fld2.0 = [RET.0,RET.0];
RET.1 = 12758992663511063214_u64 as i16;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).2 = !108467611_i32;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).1 = (_4.0,);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).3.0.0 = [RET.0,RET.0];
_10 = [Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2];
place!(Field::<[i32; 8]>(Variant(_5, 1), 3)) = [Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2,Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).2];
place!(Field::<[i64; 7]>(Variant(_7, 0), 0)) = _8;
place!(Field::<isize>(Variant(_5, 1), 2)) = RET.0 as isize;
match Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).1.2 {
0 => bb2,
340282366920938463454151235394913435648 => bb7,
_ => bb6
}
}
bb6 = {
Return()
}
bb7 = {
_2 = [(-1237252965464378218_i64),(-5888979563291109599_i64),47675980322566854_i64,(-6898076009368727228_i64),5252129987700457115_i64,584992952780217905_i64,7030477329609156027_i64];
_6 = _7;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).0 = Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4).3.1;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).1.0 = [RET.0,RET.0];
_5 = Adt45::Variant0 { fld0: _8 };
_12 = 78_u8;
_8 = [(-8424602376915180142_i64),(-8794243549186610140_i64),8119855665533953590_i64,3907677532291176596_i64,3989999253307100333_i64,(-4629678646081406950_i64),(-3135857997519354466_i64)];
match _12 {
78 => bb8,
_ => bb2
}
}
bb8 = {
place!(Field::<[i64; 7]>(Variant(_5, 0), 0)) = [4459668602025072343_i64,(-6657495321990452680_i64),3029003969415315639_i64,4267056225814131702_i64,(-1933215689468140083_i64),(-8320215524471233852_i64),(-3246112372530398545_i64)];
_1 = 102177404056956778987781497390884927129_i128 >> _12;
_14 = !4776492284610619075_u64;
RET.1 = (-27166_i16);
_12 = !200_u8;
RET.1 = (-30348_i16) << _14;
_4.0 = _9.fld2.0;
SetDiscriminant(_5, 2);
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 2), 2)).0.0 = _9.fld2.0;
_6 = _7;
RET.1 = 8246_i16;
_1 = -(-72636073056890657343270335717061372144_i128);
RET.1 = false as i16;
place!(Field::<[i64; 7]>(Variant(_5, 2), 0)) = [4753096082721077309_i64,(-6011439515827265084_i64),(-5659783081459817946_i64),8932173687816754065_i64,(-2163422695243291823_i64),(-2267535354102696088_i64),(-185175361569009334_i64)];
_3 = Field::<[i64; 7]>(Variant(_6, 0), 0);
place!(Field::<i128>(Variant(_5, 2), 1)) = !_1;
Goto(bb9)
}
bb9 = {
RET.1 = (-10794_i16) ^ 19656_i16;
RET.0 = _9.fld1 as usize;
_9.fld2 = _4;
_11 = [(-76_i8),(-108_i8),58_i8,(-51_i8),(-92_i8),5_i8,43_i8,(-59_i8)];
_9.fld2 = _4;
RET = (0_usize, (-154_i16));
_4.0 = [RET.0,RET.0];
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 2), 2)).1 = Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 2), 2).0;
_6 = _7;
Goto(bb10)
}
bb10 = {
_15 = _9.fld1 >= _9.fld1;
_5 = _6;
_18 = [_12,_12,_12,_12,_12];
_11 = [(-20_i8),(-84_i8),61_i8,74_i8,(-27_i8),50_i8,(-90_i8),(-109_i8)];
_13 = '\u{6ce26}';
_1 = (-119971861522737168392844994577871567661_i128);
_17 = _14 as f32;
_9.fld2 = (_4.0,);
RET = (16187076079005754532_usize, (-14407_i16));
_4 = (_9.fld2.0,);
place!(Field::<[i64; 7]>(Variant(_6, 0), 0)) = [1962018090685688938_i64,6685759070847938778_i64,(-3469820607168976064_i64),(-3746296591751598602_i64),(-4488411177771966502_i64),(-2311022497130007430_i64),4265886327362975313_i64];
_5 = _7;
_9.fld2 = (_4.0,);
_15 = true;
_10 = [(-50_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET.1 = (-105_isize) as i16;
_4 = (_9.fld2.0,);
_15 = false ^ false;
RET.0 = 9418364836566681033_usize;
SetDiscriminant(_6, 0);
place!(Field::<[i64; 7]>(Variant(_7, 0), 0)) = _8;
place!(Field::<[i64; 7]>(Variant(_6, 0), 0)) = _2;
_17 = _12 as f32;
_6 = _7;
_9.fld2.0 = _4.0;
_4 = (_9.fld2.0,);
_5 = Adt45::Variant0 { fld0: _2 };
_13 = '\u{7c044}';
RET.1 = !(-18925_i16);
RET.1 = 11264_i16 | 563_i16;
SetDiscriminant(_7, 1);
_13 = '\u{34f96}';
Goto(bb11)
}
bb11 = {
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_7, 1), 4)).3 = (_4, _9.fld2);
_7 = _6;
_11 = [15_i8,33_i8,9_i8,(-119_i8),101_i8,(-125_i8),9_i8,89_i8];
_10 = [(-13_isize),(-56_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_3 = [7228154833873264102_i64,(-8313862200546207913_i64),6306357929086462451_i64,1927685716216422054_i64,8684822865871937858_i64,(-1614227771956480517_i64),5197848390126135133_i64];
_6 = _7;
_4 = _9.fld2;
RET.1 = 19141_i16 ^ 495_i16;
_1 = (-112606816132885768894145467639610080720_i128);
SetDiscriminant(_6, 0);
_17 = _14 as f32;
_7 = _5;
_15 = !false;
_10 = [9223372036854775807_isize,(-46_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_12 = 35_u8;
_19 = (_17, 5349_u16);
RET.0 = _1 as usize;
_1 = !(-106897179901143096565921184290899788972_i128);
place!(Field::<[i64; 7]>(Variant(_6, 0), 0)) = Field::<[i64; 7]>(Variant(_7, 0), 0);
_6 = _7;
_4 = (_9.fld2.0,);
_6 = _5;
_9.fld0 = core::ptr::addr_of!(_19);
Goto(bb12)
}
bb12 = {
_3 = [(-4056005950738882174_i64),(-1531372500391719784_i64),6177797000946691875_i64,(-2038102130251795833_i64),1043639783246678775_i64,8734962735484829858_i64,2438724443627848189_i64];
_9.fld2 = (_4.0,);
RET.0 = _1 as usize;
Goto(bb13)
}
bb13 = {
_19.0 = _17 * _17;
_6 = _7;
_4.0 = [RET.0,RET.0];
RET.1 = _13 as i16;
_6 = _5;
_5 = _7;
_3 = Field::<[i64; 7]>(Variant(_5, 0), 0);
_15 = false;
_4.0 = [RET.0,RET.0];
_22 = 3922972278_u32 << RET.1;
_14 = 6750667268662822248_u64;
SetDiscriminant(_6, 2);
_23 = (-9223372036854775808_isize) << _14;
_3 = [(-5036115539532770844_i64),3209561887343355472_i64,2902153771022590096_i64,(-1670524640733677686_i64),5595166755422597867_i64,(-244914179079884421_i64),(-6948185994165918604_i64)];
_1 = 99040839766221716596765341896941033038_i128;
place!(Field::<usize>(Variant(_6, 2), 4)) = RET.0 - RET.0;
place!(Field::<*const u32>(Variant(_6, 2), 3)) = core::ptr::addr_of!(_22);
_13 = '\u{e352b}';
RET = (Field::<usize>(Variant(_6, 2), 4), (-16782_i16));
place!(Field::<[i64; 7]>(Variant(_7, 0), 0)) = Field::<[i64; 7]>(Variant(_5, 0), 0);
SetDiscriminant(_5, 1);
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).2 = 859209216_i32 << _22;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).0 = _4;
_20 = core::ptr::addr_of_mut!(place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)));
_23 = _13 as isize;
Goto(bb14)
}
bb14 = {
_10 = [_23,_23,_23,_23,_23];
place!(Field::<i128>(Variant(_6, 2), 1)) = -_1;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).2 = -1171401463_i32;
_23 = !(-9223372036854775808_isize);
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).0.0 = [RET.0,RET.0];
RET = (Field::<usize>(Variant(_6, 2), 4), (-16119_i16));
_19.1 = 30625_u16 & 28230_u16;
_26.0 = _13;
RET.0 = 232764665204135788528882459912328677388_u128 as usize;
_19.0 = _17;
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_6, 2), 2)).1.0 = [Field::<usize>(Variant(_6, 2), 4),Field::<usize>(Variant(_6, 2), 4)];
_25.0 = _12;
place!(Field::<(u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],)))>(Variant(_5, 1), 4)).0 = _9.fld1 as u128;
_8 = [(-3800432783535938047_i64),1473352415284799443_i64,(-1360545198502639694_i64),(-5453658887647594266_i64),(-5130101817578710899_i64),(-7007245548044627813_i64),(-5774553328207998765_i64)];
_6 = _7;
_2 = Field::<[i64; 7]>(Variant(_6, 0), 0);
place!(Field::<*const (usize, i16)>(Variant(_5, 1), 0)) = core::ptr::addr_of!(RET);
place!(Field::<(([usize; 2],), ([usize; 2],))>(Variant(_5, 1), 5)).0 = (_9.fld2.0,);
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(16_usize, 1_usize, Move(_1), 18_usize, Move(_18), 22_usize, Move(_22), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(16_usize, 4_usize, Move(_4), 3_usize, Move(_3), 12_usize, Move(_12), 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(42370_u16), std::hint::black_box(5372269941911675128_i64), std::hint::black_box(9223372036854775807_isize), std::hint::black_box((-91_i8)));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt45 {
Variant0{
fld0: [i64; 7],

},
Variant1{
fld0: *const (usize, i16),
fld1: usize,
fld2: isize,
fld3: [i32; 8],
fld4: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],))),
fld5: (([usize; 2],), ([usize; 2],)),

},
Variant2{
fld0: [i64; 7],
fld1: i128,
fld2: (([usize; 2],), ([usize; 2],)),
fld3: *const u32,
fld4: usize,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: bool,
fld1: (char, i16, isize, u16),
fld2: i64,
fld3: (f32, u16),
fld4: i128,

},
Variant1{
fld0: usize,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (u8, u128),
fld1: [isize; 5],
fld2: isize,

},
Variant1{
fld0: (usize, i16),
fld1: *const i64,

},
Variant2{
fld0: u8,
fld1: *const u32,
fld2: isize,
fld3: ((char, i16, isize, u16), usize, [isize; 3]),
fld4: ([usize; 2],),

},
Variant3{
fld0: [u8; 5],

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],))),
fld1: [i64; 7],
fld2: *mut (u128, isize),
fld3: ((char, i16, isize, u16), usize, [isize; 3]),

},
Variant1{
fld0: [i8; 8],
fld1: *const (f32, u16),

},
Variant2{
fld0: u16,
fld1: Adt47,
fld2: [isize; 5],
fld3: [i64; 7],
fld4: *mut (u128, isize),
fld5: i32,
fld6: [i8; 8],

},
Variant3{
fld0: Adt46,
fld1: [usize; 2],
fld2: *mut (u128, isize),
fld3: i8,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [isize; 3],
fld1: (i8, *const (usize, i16), ((usize, i16), isize, i128, [i64; 7]), (f32, u16)),
fld2: u64,
fld3: usize,
fld4: u8,
fld5: (([usize; 2],), ([usize; 2],)),
fld6: u128,
fld7: i128,

},
Variant1{
fld0: i8,
fld1: [i32; 8],
fld2: *mut (u128, isize),

},
Variant2{
fld0: Adt47,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: bool,
fld1: *const i64,
fld2: i128,
fld3: [isize; 3],

},
Variant1{
fld0: *const i64,
fld1: Adt48,
fld2: *const [i64; 7],
fld3: i8,
fld4: [usize; 2],
fld5: ((char, i16, isize, u16), usize, [isize; 3]),

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: ((char, i16, isize, u16), usize, [isize; 3]),
fld1: (u8, u128),
fld2: f32,
fld3: (bool, [usize; 2], u64, ((char, i16, isize, u16), usize, [isize; 3]), *const u32),
fld4: Adt48,
fld5: *const (f32, u16),
fld6: [i64; 7],

},
Variant1{
fld0: u64,
fld1: char,
fld2: *const (usize, i16),
fld3: ((usize, i16), isize, i128, [i64; 7]),

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: u64,
fld1: [u8; 5],
fld2: (bool, [usize; 2], u64, ((char, i16, isize, u16), usize, [isize; 3]), *const u32),
fld3: [isize; 5],
fld4: *mut (u128, isize),
fld5: Adt48,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: (u8, u128),
fld1: *mut (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],))),
fld2: u64,
fld3: (bool, [usize; 2], u64, ((char, i16, isize, u16), usize, [isize; 3]), *const u32),
fld4: ([usize; 2],),
fld5: [i8; 8],
fld6: [u8; 5],
fld7: *const (f32, u16),

},
Variant1{
fld0: u64,
fld1: i32,
fld2: [isize; 7],
fld3: *mut (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],))),
fld4: Adt50,

},
Variant2{
fld0: f32,
fld1: [isize; 7],
fld2: isize,
fld3: *mut (u128, isize),
fld4: Adt46,
fld5: *const u32,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: f64,
fld1: [i32; 8],

},
Variant1{
fld0: f32,

},
Variant2{
fld0: (f32, u16),
fld1: ([usize; 2],),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: *const (f32, u16),
fld1: f64,
fld2: ([usize; 2],),
}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt51,
fld1: i128,
fld2: u64,
fld3: (u8, u128),
fld4: *const (f32, u16),
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: f32,
fld1: (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],))),
fld2: (i8, *const (usize, i16), ((usize, i16), isize, i128, [i64; 7]), (f32, u16)),
fld3: [u8; 5],
fld4: (usize, i16),
fld5: Adt46,
fld6: i64,
fld7: u16,

},
Variant1{
fld0: f64,
fld1: ((usize, i16), isize, i128, [i64; 7]),

},
Variant2{
fld0: bool,
fld1: [i32; 8],
fld2: [i64; 7],
fld3: u128,
fld4: u32,
fld5: (i8, *const (usize, i16), ((usize, i16), isize, i128, [i64; 7]), (f32, u16)),

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: [i8; 8],
fld1: char,
fld2: isize,
fld3: Adt45,
fld4: u32,
fld5: Adt48,
fld6: i64,
fld7: i128,

},
Variant1{
fld0: ((char, i16, isize, u16), usize, [isize; 3]),
fld1: [usize; 2],

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: (char, i16, isize, u16),
fld1: u64,
fld2: i64,

},
Variant1{
fld0: (usize, i16),
fld1: *mut (u128, (char, i16, isize, u16), i32, (([usize; 2],), ([usize; 2],))),
fld2: Adt49,
fld3: u128,
fld4: Adt46,
fld5: (u128, isize),
fld6: i64,
fld7: u16,

},
Variant2{
fld0: ((char, i16, isize, u16), usize, [isize; 3]),
fld1: [i64; 7],
fld2: Adt52,
fld3: i64,
fld4: f32,
fld5: u128,

}}
#[derive(Debug)]
pub struct Adt60 {
fld0: i32,
fld1: Adt53,
}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: (u8, u128),
fld1: (u128, isize),
fld2: [u8; 5],
fld3: usize,
fld4: Adt57,
fld5: i32,

},
Variant1{
fld0: i128,
fld1: Adt58,
fld2: Adt53,
fld3: Adt49,
fld4: Adt50,

}}

