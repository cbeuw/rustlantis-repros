#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u32,mut _2: u128,mut _3: isize,mut _4: u16,mut _5: usize,mut _6: i64) -> ([i64; 3],) {
mir! {
type RET = ([i64; 3],);
let _7: [i16; 8];
let _8: f32;
let _9: usize;
let _10: f32;
let _11: [i16; 8];
let _12: f64;
let _13: [i32; 7];
let _14: f32;
let _15: f32;
let _16: f32;
let _17: Adt55;
let _18: Adt56;
let _19: isize;
let _20: isize;
let _21: [i16; 8];
let _22: char;
let _23: char;
let _24: ([i64; 3],);
let _25: Adt44;
let _26: i16;
let _27: *const *mut *mut u32;
let _28: Adt44;
let _29: Adt49;
let _30: [i16; 8];
let _31: Adt57;
let _32: [char; 4];
let _33: u32;
let _34: *mut char;
let _35: [i16; 8];
let _36: Adt44;
let _37: ();
let _38: ();
{
_5 = 12908427620647508112_usize;
RET.0 = [(-1380793544935151143_i64),824262170031285767_i64,(-2328736899970659037_i64)];
_6 = true as i64;
RET.0 = [_6,_6,_6];
_6 = !612593825302688101_i64;
RET.0 = [_6,_6,_6];
_6 = 29299984665232013_i64 + (-5893903917666420081_i64);
_2 = 96231961302616362371801609992448781897_u128;
_2 = !281587290487251393775462515742571147612_u128;
_6 = 4434551647768528080_i64;
_3 = !83_isize;
_4 = 2073579045_i32 as u16;
_8 = 341237237_i32 as f32;
RET.0 = [_6,_6,_6];
_1 = !2663798223_u32;
_2 = 192_u8 as u128;
_10 = -_8;
_11 = [17206_i16,(-30641_i16),(-12732_i16),(-4099_i16),17832_i16,(-24635_i16),(-23382_i16),23833_i16];
_6 = 8112132776199670822_i64 & 9060708603692119159_i64;
_11 = [2223_i16,4861_i16,29332_i16,(-18578_i16),17331_i16,31557_i16,(-32616_i16),(-14579_i16)];
RET.0 = [_6,_6,_6];
_7 = [5039_i16,(-1749_i16),25287_i16,29928_i16,22818_i16,1161_i16,(-21725_i16),13822_i16];
RET.0 = [_6,_6,_6];
_1 = 114788654_u32;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
114788654 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_3 = 9588_i16 as isize;
_8 = _2 as f32;
_10 = 106444851051283540085416530767270614059_i128 as f32;
_2 = !232103769270054940719465161414818097559_u128;
_4 = 39393_u16 - 13636_u16;
_2 = 302966351494850921782092530763594027059_u128;
_1 = 3140802192_u32 * 3024098653_u32;
_9 = _5;
_4 = 55671_u16 << _1;
_12 = _9 as f64;
_6 = 658639828509549734_i64;
_5 = !_9;
_12 = _8 as f64;
_8 = _5 as f32;
_7 = [(-8934_i16),3650_i16,(-3829_i16),15591_i16,(-17117_i16),4486_i16,28723_i16,19322_i16];
RET.0 = [_6,_6,_6];
_2 = !28924964298419676346956468883671092658_u128;
_10 = _8;
RET.0 = [_6,_6,_6];
_13 = [(-857357694_i32),2124602750_i32,(-1680573345_i32),(-1328341563_i32),1607364688_i32,1336192808_i32,(-2011672612_i32)];
_5 = !_9;
RET.0 = [_6,_6,_6];
RET.0 = [_6,_6,_6];
Call(_10 = fn1(_12, _7, _3, _7, _4, _13, _13, _7, RET, _3, _13, _11, _7, RET, _4, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_4 = _12 as u16;
_3 = !(-9223372036854775808_isize);
_7 = [(-13778_i16),(-11286_i16),(-27727_i16),8569_i16,14394_i16,6148_i16,5934_i16,25857_i16];
_5 = _9 | _9;
_4 = (-49602504633911805952071223867398163238_i128) as u16;
_15 = -_10;
_16 = _10;
_17.fld2.2 = core::ptr::addr_of_mut!(_1);
_17.fld2.3 = [87_i8];
_17.fld1 = _3 as u64;
_17.fld2.0 = core::ptr::addr_of_mut!(_1);
_1 = 879284449_u32 - 2076555433_u32;
_17.fld2.1 = -127659955855615215628529136876370366792_i128;
_16 = _15 * _8;
_8 = -_16;
_6 = -1282578573635417905_i64;
Goto(bb8)
}
bb8 = {
_8 = _16 * _16;
RET.0 = [_6,_6,_6];
_3 = (-9223372036854775808_isize) + (-50_isize);
_5 = (-2081951362_i32) as usize;
_2 = 104145631037686813670888538640891782329_u128;
_3 = 9223372036854775807_isize * 34_isize;
_9 = !_5;
_2 = 217481606253086687458954196723647963600_u128 + 64234667529972423926759140608225577432_u128;
_17.fld2.2 = _17.fld2.0;
_15 = _16;
_12 = 27375_i16 as f64;
_15 = -_16;
_17.fld1 = 9717686992400428630_u64;
_8 = _15;
_12 = _17.fld2.1 as f64;
_10 = _16;
RET.0 = [_6,_6,_6];
RET.0 = [_6,_6,_6];
_11 = _7;
_17.fld0 = [_6,_6,_6];
_16 = _4 as f32;
_2 = 167655658955005800183886596183313964440_u128 - 142571534100155546751195224415868410321_u128;
_11 = _7;
_21 = [(-3486_i16),(-25872_i16),4091_i16,29481_i16,14965_i16,24046_i16,(-30813_i16),(-22623_i16)];
_20 = _3 | _3;
_13 = [(-84592802_i32),315821838_i32,(-1458496752_i32),379632182_i32,1170286087_i32,1358382911_i32,218203968_i32];
Goto(bb9)
}
bb9 = {
_16 = _8;
_12 = _2 as f64;
_17.fld2.2 = _17.fld2.0;
_17.fld1 = 6295455002584355096_u64 >> _20;
_24 = (_17.fld0,);
_14 = _8 - _10;
_15 = _8;
_6 = 6398808256768452518_i64;
_20 = false as isize;
_25.fld2 = -(-14160_i16);
_21 = [_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2];
_25.fld0.0 = [_6,_6,_6];
_25.fld1 = _17.fld2.1 as u64;
_28.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_25.fld0.0 = [_6,_6,_6];
_19 = _3 * _3;
_28.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_7 = _11;
_9 = true as usize;
_25 = Adt44 { fld0: RET,fld1: _17.fld1,fld2: 13244_i16,fld3: _28.fld3 };
_16 = _17.fld2.1 as f32;
RET.0 = _25.fld0.0;
_16 = _15;
match _25.fld2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
13244 => bb10,
_ => bb6
}
}
bb10 = {
_28.fld2 = !_25.fld2;
_17.fld2.1 = 165209712801672832913232945733261711053_i128;
_22 = '\u{d0b5e}';
RET.0 = [_6,_6,_6];
_29 = Adt49::Variant0 { fld0: _1 };
_17.fld2.2 = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_29, 0), 0)));
_25.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_28.fld2 = _25.fld2 << _25.fld1;
_17.fld2.1 = (-49262244727852481840954598368020600845_i128);
_25.fld2 = !_28.fld2;
_8 = (-42_i8) as f32;
RET = _25.fld0;
_28 = Move(_25);
_17.fld1 = _28.fld1 & _28.fld1;
RET.0 = [_6,_6,_6];
_30 = _11;
RET = (_17.fld0,);
_23 = _22;
_25.fld0 = (_17.fld0,);
_15 = _28.fld1 as f32;
_8 = _14;
place!(Field::<u32>(Variant(_29, 0), 0)) = _1 | _1;
_11 = [_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2];
_25.fld3 = _28.fld3;
_22 = _23;
_10 = -_15;
_17.fld2.1 = false as i128;
SetDiscriminant(_29, 1);
match _6 {
0 => bb7,
1 => bb5,
2 => bb3,
6398808256768452518 => bb12,
_ => bb11
}
}
bb11 = {
_16 = _8;
_12 = _2 as f64;
_17.fld2.2 = _17.fld2.0;
_17.fld1 = 6295455002584355096_u64 >> _20;
_24 = (_17.fld0,);
_14 = _8 - _10;
_15 = _8;
_6 = 6398808256768452518_i64;
_20 = false as isize;
_25.fld2 = -(-14160_i16);
_21 = [_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2];
_25.fld0.0 = [_6,_6,_6];
_25.fld1 = _17.fld2.1 as u64;
_28.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_25.fld0.0 = [_6,_6,_6];
_19 = _3 * _3;
_28.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_7 = _11;
_9 = true as usize;
_25 = Adt44 { fld0: RET,fld1: _17.fld1,fld2: 13244_i16,fld3: _28.fld3 };
_16 = _17.fld2.1 as f32;
RET.0 = _25.fld0.0;
_16 = _15;
match _25.fld2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
13244 => bb10,
_ => bb6
}
}
bb12 = {
_2 = 27_u8 as u128;
_7 = [_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2];
_25.fld1 = _28.fld1;
_1 = 2712846957_u32;
_1 = _23 as u32;
match _6 {
0 => bb7,
1 => bb13,
2 => bb14,
6398808256768452518 => bb16,
_ => bb15
}
}
bb13 = {
_3 = 9588_i16 as isize;
_8 = _2 as f32;
_10 = 106444851051283540085416530767270614059_i128 as f32;
_2 = !232103769270054940719465161414818097559_u128;
_4 = 39393_u16 - 13636_u16;
_2 = 302966351494850921782092530763594027059_u128;
_1 = 3140802192_u32 * 3024098653_u32;
_9 = _5;
_4 = 55671_u16 << _1;
_12 = _9 as f64;
_6 = 658639828509549734_i64;
_5 = !_9;
_12 = _8 as f64;
_8 = _5 as f32;
_7 = [(-8934_i16),3650_i16,(-3829_i16),15591_i16,(-17117_i16),4486_i16,28723_i16,19322_i16];
RET.0 = [_6,_6,_6];
_2 = !28924964298419676346956468883671092658_u128;
_10 = _8;
RET.0 = [_6,_6,_6];
_13 = [(-857357694_i32),2124602750_i32,(-1680573345_i32),(-1328341563_i32),1607364688_i32,1336192808_i32,(-2011672612_i32)];
_5 = !_9;
RET.0 = [_6,_6,_6];
RET.0 = [_6,_6,_6];
Call(_10 = fn1(_12, _7, _3, _7, _4, _13, _13, _7, RET, _3, _13, _11, _7, RET, _4, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb14 = {
_28.fld2 = !_25.fld2;
_17.fld2.1 = 165209712801672832913232945733261711053_i128;
_22 = '\u{d0b5e}';
RET.0 = [_6,_6,_6];
_29 = Adt49::Variant0 { fld0: _1 };
_17.fld2.2 = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_29, 0), 0)));
_25.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_28.fld2 = _25.fld2 << _25.fld1;
_17.fld2.1 = (-49262244727852481840954598368020600845_i128);
_25.fld2 = !_28.fld2;
_8 = (-42_i8) as f32;
RET = _25.fld0;
_28 = Move(_25);
_17.fld1 = _28.fld1 & _28.fld1;
RET.0 = [_6,_6,_6];
_30 = _11;
RET = (_17.fld0,);
_23 = _22;
_25.fld0 = (_17.fld0,);
_15 = _28.fld1 as f32;
_8 = _14;
place!(Field::<u32>(Variant(_29, 0), 0)) = _1 | _1;
_11 = [_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2,_28.fld2];
_25.fld3 = _28.fld3;
_22 = _23;
_10 = -_15;
_17.fld2.1 = false as i128;
SetDiscriminant(_29, 1);
match _6 {
0 => bb7,
1 => bb5,
2 => bb3,
6398808256768452518 => bb12,
_ => bb11
}
}
bb15 = {
_16 = _8;
_12 = _2 as f64;
_17.fld2.2 = _17.fld2.0;
_17.fld1 = 6295455002584355096_u64 >> _20;
_24 = (_17.fld0,);
_14 = _8 - _10;
_15 = _8;
_6 = 6398808256768452518_i64;
_20 = false as isize;
_25.fld2 = -(-14160_i16);
_21 = [_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2];
_25.fld0.0 = [_6,_6,_6];
_25.fld1 = _17.fld2.1 as u64;
_28.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_25.fld0.0 = [_6,_6,_6];
_19 = _3 * _3;
_28.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_7 = _11;
_9 = true as usize;
_25 = Adt44 { fld0: RET,fld1: _17.fld1,fld2: 13244_i16,fld3: _28.fld3 };
_16 = _17.fld2.1 as f32;
RET.0 = _25.fld0.0;
_16 = _15;
match _25.fld2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
13244 => bb10,
_ => bb6
}
}
bb16 = {
_21 = _30;
_25.fld3 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
Goto(bb17)
}
bb17 = {
Call(_37 = dump_var(0_usize, 30_usize, Move(_30), 5_usize, Move(_5), 13_usize, Move(_13), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(0_usize, 7_usize, Move(_7), 20_usize, Move(_20), 2_usize, Move(_2), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: f64,mut _2: [i16; 8],mut _3: isize,mut _4: [i16; 8],mut _5: u16,mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [i16; 8],mut _9: ([i64; 3],),mut _10: isize,mut _11: [i32; 7],mut _12: [i16; 8],mut _13: [i16; 8],mut _14: ([i64; 3],),mut _15: u16,mut _16: u128) -> f32 {
mir! {
type RET = f32;
let _17: isize;
let _18: u32;
let _19: isize;
let _20: isize;
let _21: i16;
let _22: bool;
let _23: *mut f32;
let _24: [i8; 1];
let _25: (isize,);
let _26: isize;
let _27: [char; 4];
let _28: ([i128; 7],);
let _29: i8;
let _30: *mut u32;
let _31: i32;
let _32: Adt55;
let _33: u16;
let _34: *mut f32;
let _35: i32;
let _36: isize;
let _37: [char; 4];
let _38: f32;
let _39: i64;
let _40: [i128; 7];
let _41: bool;
let _42: Adt55;
let _43: (i64, *mut f32, (u32, u16, u64));
let _44: Adt56;
let _45: (*mut u32, i128, *mut u32, [i8; 1]);
let _46: [i32; 7];
let _47: i128;
let _48: [u64; 1];
let _49: [i64; 3];
let _50: u8;
let _51: isize;
let _52: (isize,);
let _53: i32;
let _54: isize;
let _55: isize;
let _56: isize;
let _57: Adt51;
let _58: f64;
let _59: isize;
let _60: *mut char;
let _61: [u16; 3];
let _62: Adt52;
let _63: char;
let _64: ([i128; 7],);
let _65: (*mut u32, i128, *mut u32, [i8; 1]);
let _66: ();
let _67: ();
{
RET = _16 as f32;
_8 = [6414_i16,(-30117_i16),(-1125_i16),(-9153_i16),71_i16,(-14869_i16),(-17410_i16),(-17349_i16)];
_16 = 238932478745150317344293942335399544237_u128;
_12 = [4699_i16,22889_i16,(-28911_i16),(-5502_i16),(-25800_i16),16844_i16,10266_i16,26692_i16];
_9.0 = _14.0;
_11 = _6;
_12 = [(-16304_i16),27349_i16,8865_i16,(-25293_i16),(-22073_i16),14967_i16,24445_i16,18059_i16];
_3 = _1 as isize;
RET = _1 as f32;
_17 = -_3;
_6 = [478266048_i32,(-269989915_i32),(-1066147047_i32),(-1606196647_i32),(-1504709450_i32),(-1619701791_i32),(-1910826704_i32)];
_14.0 = _9.0;
_3 = !_17;
_10 = !_3;
_8 = _13;
_9 = (_14.0,);
_2 = [(-22068_i16),(-28145_i16),(-18286_i16),2590_i16,25326_i16,7838_i16,533_i16,16573_i16];
_16 = 4757518961232701209836666397073105885_u128 - 69209760445839460269675028631558046934_u128;
_13 = [5704_i16,(-4224_i16),19141_i16,9695_i16,(-24669_i16),2318_i16,16873_i16,(-18627_i16)];
_9.0 = [7349055782816020016_i64,(-8704201013923725642_i64),(-4618530416281744078_i64)];
_19 = !_17;
Goto(bb1)
}
bb1 = {
_3 = _10 & _17;
_12 = [31821_i16,30057_i16,(-27124_i16),17958_i16,(-21107_i16),(-16166_i16),(-7587_i16),17482_i16];
_7 = _6;
_9 = _14;
_12 = [(-32065_i16),(-17629_i16),410_i16,(-2764_i16),14729_i16,3552_i16,(-11945_i16),(-11467_i16)];
_8 = [21539_i16,1515_i16,11980_i16,17740_i16,(-16229_i16),766_i16,25850_i16,29964_i16];
_15 = _5 * _5;
_25.0 = (-99_i8) as isize;
_13 = [31781_i16,(-32701_i16),17594_i16,7342_i16,5310_i16,12151_i16,(-9084_i16),(-27099_i16)];
_27 = ['\u{41dd0}','\u{4d79e}','\u{84edc}','\u{56f01}'];
_29 = -66_i8;
_23 = core::ptr::addr_of_mut!(RET);
_7 = _6;
_27 = ['\u{3a753}','\u{51cc0}','\u{b9b27}','\u{f3fb1}'];
_24 = [_29];
_31 = (-413162358_i32);
_10 = _5 as isize;
_32.fld2.1 = -161996957245519218083562915521443726526_i128;
_28.0 = [_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1];
_6 = _11;
Call(_7 = fn2(_31, _8, _10, _6, _11, _5, _17, _8, _5, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_23 = core::ptr::addr_of_mut!(RET);
_13 = _2;
_13 = [4381_i16,7995_i16,(-32032_i16),(-12645_i16),(-16094_i16),32728_i16,29264_i16,(-19997_i16)];
_2 = [27928_i16,(-231_i16),(-22507_i16),(-27186_i16),17368_i16,(-26187_i16),14545_i16,(-8283_i16)];
_32.fld2.1 = 167376166575723488652022449371412535161_i128;
_32.fld2.2 = core::ptr::addr_of_mut!(_18);
_2 = [(-30757_i16),(-29249_i16),(-24957_i16),(-1604_i16),(-18972_i16),13282_i16,4527_i16,31370_i16];
_36 = _19 * _3;
_17 = _36;
_17 = _19 << _25.0;
_30 = core::ptr::addr_of_mut!(_18);
_24 = [_29];
_22 = false;
_9.0 = _14.0;
_21 = (-8639_i16) & (-18977_i16);
_34 = _23;
_17 = _19;
_37 = ['\u{fae05}','\u{76a8c}','\u{951e8}','\u{83453}'];
_26 = _10 & _19;
_1 = _31 as f64;
Goto(bb3)
}
bb3 = {
RET = _15 as f32;
_23 = _34;
_4 = [_21,_21,_21,_21,_21,_21,_21,_21];
_10 = _36;
_16 = _29 as u128;
_38 = _19 as f32;
_42.fld2.2 = core::ptr::addr_of_mut!(_43.2.0);
_42.fld2.3 = [_29];
_20 = _32.fld2.1 as isize;
_39 = !7958128628600373080_i64;
_14 = (_9.0,);
_22 = false;
_40 = [_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1];
_42.fld2.3 = [_29];
_20 = -_26;
_15 = _5;
_32.fld2.0 = core::ptr::addr_of_mut!((*_30));
_10 = _19;
_43.2.1 = _15;
_45.1 = !_32.fld2.1;
_15 = 3996732944244008401_usize as u16;
_11 = _6;
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_3 = _26;
Call(_42.fld2 = fn3(_5, _25.0, RET, _25.0, _10, _32.fld2.1, _37, _25, _11, _6, _3, RET, _11, RET, _28.0, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_37 = _27;
_35 = _39 as i32;
_32 = Adt55 { fld0: _14.0,fld1: 11618115147124261045_u64,fld2: _42.fld2 };
RET = _38;
_45.2 = _32.fld2.2;
_27 = _37;
_46 = [_35,_31,_35,_35,_31,_35,_35];
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_32.fld0 = [_39,_39,_39];
_30 = core::ptr::addr_of_mut!(_43.2.0);
_50 = 67_u8 << _36;
_9 = (_32.fld0,);
Goto(bb5)
}
bb5 = {
_16 = 240290682539179983076622548551160482814_u128;
_42.fld2.3 = [_29];
_7 = [_35,_31,_31,_35,_35,_35,_35];
_28 = (_40,);
_43.2.2 = !_32.fld1;
_46 = _6;
_32.fld2.2 = _45.2;
_43.2 = (3278576713_u32, _5, _32.fld1);
_37 = ['\u{573c5}','\u{886b3}','\u{2a0d}','\u{b5390}'];
_45.3 = [_29];
_31 = _22 as i32;
Goto(bb6)
}
bb6 = {
_32.fld1 = !_43.2.2;
_48 = [_32.fld1];
_48 = [_32.fld1];
_14.0 = _32.fld0;
_23 = core::ptr::addr_of_mut!(_38);
_36 = 12583978880929968194_usize as isize;
_21 = _32.fld2.1 as i16;
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_50 = 231_u8 + 238_u8;
_32.fld2.1 = _21 as i128;
_32.fld1 = !_43.2.2;
_17 = _26 - _26;
_9 = _14;
_6 = _7;
_32.fld2.3 = _45.3;
_2 = [_21,_21,_21,_21,_21,_21,_21,_21];
_38 = _50 as f32;
_39 = _43.2.1 as i64;
_48 = [_43.2.2];
_45 = _42.fld2;
_28.0 = [_45.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_42.fld2.1,_45.1,_45.1];
_50 = _39 as u8;
Goto(bb7)
}
bb7 = {
_33 = _15;
_49 = [_39,_39,_39];
_42.fld2.1 = _17 as i128;
_28.0 = [_32.fld2.1,_42.fld2.1,_42.fld2.1,_42.fld2.1,_42.fld2.1,_45.1,_42.fld2.1];
_13 = _12;
match (*_30) {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb8,
3278576713 => bb10,
_ => bb9
}
}
bb8 = {
_3 = _10 & _17;
_12 = [31821_i16,30057_i16,(-27124_i16),17958_i16,(-21107_i16),(-16166_i16),(-7587_i16),17482_i16];
_7 = _6;
_9 = _14;
_12 = [(-32065_i16),(-17629_i16),410_i16,(-2764_i16),14729_i16,3552_i16,(-11945_i16),(-11467_i16)];
_8 = [21539_i16,1515_i16,11980_i16,17740_i16,(-16229_i16),766_i16,25850_i16,29964_i16];
_15 = _5 * _5;
_25.0 = (-99_i8) as isize;
_13 = [31781_i16,(-32701_i16),17594_i16,7342_i16,5310_i16,12151_i16,(-9084_i16),(-27099_i16)];
_27 = ['\u{41dd0}','\u{4d79e}','\u{84edc}','\u{56f01}'];
_29 = -66_i8;
_23 = core::ptr::addr_of_mut!(RET);
_7 = _6;
_27 = ['\u{3a753}','\u{51cc0}','\u{b9b27}','\u{f3fb1}'];
_24 = [_29];
_31 = (-413162358_i32);
_10 = _5 as isize;
_32.fld2.1 = -161996957245519218083562915521443726526_i128;
_28.0 = [_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1];
_6 = _11;
Call(_7 = fn2(_31, _8, _10, _6, _11, _5, _17, _8, _5, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_16 = 240290682539179983076622548551160482814_u128;
_42.fld2.3 = [_29];
_7 = [_35,_31,_31,_35,_35,_35,_35];
_28 = (_40,);
_43.2.2 = !_32.fld1;
_46 = _6;
_32.fld2.2 = _45.2;
_43.2 = (3278576713_u32, _5, _32.fld1);
_37 = ['\u{573c5}','\u{886b3}','\u{2a0d}','\u{b5390}'];
_45.3 = [_29];
_31 = _22 as i32;
Goto(bb6)
}
bb10 = {
_56 = _32.fld1 as isize;
_36 = _3;
_44 = Adt56::Variant0 { fld0: _39,fld1: _32.fld0,fld2: _16,fld3: _43.2,fld4: 17776027432256879430_usize };
_37 = ['\u{acf9d}','\u{1b877}','\u{ded10}','\u{7bcaf}'];
_55 = _17;
_42.fld1 = _43.2.2 - _32.fld1;
_52.0 = _42.fld2.1 as isize;
_4 = [_21,_21,_21,_21,_21,_21,_21,_21];
_3 = (*_23) as isize;
_45.2 = _42.fld2.0;
_52 = _25;
_27 = _37;
_26 = RET as isize;
_62.fld5.fld0.0 = _49;
_18 = (*_23) as u32;
_41 = _22;
_28.0 = [_42.fld2.1,_42.fld2.1,_42.fld2.1,_42.fld2.1,_32.fld2.1,_42.fld2.1,_42.fld2.1];
_45.1 = _21 as i128;
_45.2 = core::ptr::addr_of_mut!(_18);
_16 = Field::<u128>(Variant(_44, 0), 2);
_62.fld5.fld0 = _9;
_45.1 = _42.fld2.1 + _42.fld2.1;
match (*_30) {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
3278576713 => bb16,
_ => bb15
}
}
bb11 = {
_37 = _27;
_35 = _39 as i32;
_32 = Adt55 { fld0: _14.0,fld1: 11618115147124261045_u64,fld2: _42.fld2 };
RET = _38;
_45.2 = _32.fld2.2;
_27 = _37;
_46 = [_35,_31,_35,_35,_31,_35,_35];
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_32.fld0 = [_39,_39,_39];
_30 = core::ptr::addr_of_mut!(_43.2.0);
_50 = 67_u8 << _36;
_9 = (_32.fld0,);
Goto(bb5)
}
bb12 = {
_3 = _10 & _17;
_12 = [31821_i16,30057_i16,(-27124_i16),17958_i16,(-21107_i16),(-16166_i16),(-7587_i16),17482_i16];
_7 = _6;
_9 = _14;
_12 = [(-32065_i16),(-17629_i16),410_i16,(-2764_i16),14729_i16,3552_i16,(-11945_i16),(-11467_i16)];
_8 = [21539_i16,1515_i16,11980_i16,17740_i16,(-16229_i16),766_i16,25850_i16,29964_i16];
_15 = _5 * _5;
_25.0 = (-99_i8) as isize;
_13 = [31781_i16,(-32701_i16),17594_i16,7342_i16,5310_i16,12151_i16,(-9084_i16),(-27099_i16)];
_27 = ['\u{41dd0}','\u{4d79e}','\u{84edc}','\u{56f01}'];
_29 = -66_i8;
_23 = core::ptr::addr_of_mut!(RET);
_7 = _6;
_27 = ['\u{3a753}','\u{51cc0}','\u{b9b27}','\u{f3fb1}'];
_24 = [_29];
_31 = (-413162358_i32);
_10 = _5 as isize;
_32.fld2.1 = -161996957245519218083562915521443726526_i128;
_28.0 = [_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1];
_6 = _11;
Call(_7 = fn2(_31, _8, _10, _6, _11, _5, _17, _8, _5, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
RET = _15 as f32;
_23 = _34;
_4 = [_21,_21,_21,_21,_21,_21,_21,_21];
_10 = _36;
_16 = _29 as u128;
_38 = _19 as f32;
_42.fld2.2 = core::ptr::addr_of_mut!(_43.2.0);
_42.fld2.3 = [_29];
_20 = _32.fld2.1 as isize;
_39 = !7958128628600373080_i64;
_14 = (_9.0,);
_22 = false;
_40 = [_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1];
_42.fld2.3 = [_29];
_20 = -_26;
_15 = _5;
_32.fld2.0 = core::ptr::addr_of_mut!((*_30));
_10 = _19;
_43.2.1 = _15;
_45.1 = !_32.fld2.1;
_15 = 3996732944244008401_usize as u16;
_11 = _6;
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_3 = _26;
Call(_42.fld2 = fn3(_5, _25.0, RET, _25.0, _10, _32.fld2.1, _37, _25, _11, _6, _3, RET, _11, RET, _28.0, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_32.fld1 = !_43.2.2;
_48 = [_32.fld1];
_48 = [_32.fld1];
_14.0 = _32.fld0;
_23 = core::ptr::addr_of_mut!(_38);
_36 = 12583978880929968194_usize as isize;
_21 = _32.fld2.1 as i16;
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_50 = 231_u8 + 238_u8;
_32.fld2.1 = _21 as i128;
_32.fld1 = !_43.2.2;
_17 = _26 - _26;
_9 = _14;
_6 = _7;
_32.fld2.3 = _45.3;
_2 = [_21,_21,_21,_21,_21,_21,_21,_21];
_38 = _50 as f32;
_39 = _43.2.1 as i64;
_48 = [_43.2.2];
_45 = _42.fld2;
_28.0 = [_45.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_42.fld2.1,_45.1,_45.1];
_50 = _39 as u8;
Goto(bb7)
}
bb15 = {
_3 = _10 & _17;
_12 = [31821_i16,30057_i16,(-27124_i16),17958_i16,(-21107_i16),(-16166_i16),(-7587_i16),17482_i16];
_7 = _6;
_9 = _14;
_12 = [(-32065_i16),(-17629_i16),410_i16,(-2764_i16),14729_i16,3552_i16,(-11945_i16),(-11467_i16)];
_8 = [21539_i16,1515_i16,11980_i16,17740_i16,(-16229_i16),766_i16,25850_i16,29964_i16];
_15 = _5 * _5;
_25.0 = (-99_i8) as isize;
_13 = [31781_i16,(-32701_i16),17594_i16,7342_i16,5310_i16,12151_i16,(-9084_i16),(-27099_i16)];
_27 = ['\u{41dd0}','\u{4d79e}','\u{84edc}','\u{56f01}'];
_29 = -66_i8;
_23 = core::ptr::addr_of_mut!(RET);
_7 = _6;
_27 = ['\u{3a753}','\u{51cc0}','\u{b9b27}','\u{f3fb1}'];
_24 = [_29];
_31 = (-413162358_i32);
_10 = _5 as isize;
_32.fld2.1 = -161996957245519218083562915521443726526_i128;
_28.0 = [_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1,_32.fld2.1];
_6 = _11;
Call(_7 = fn2(_31, _8, _10, _6, _11, _5, _17, _8, _5, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_51 = !_55;
_36 = _55 + _20;
_45.3 = [_29];
_23 = _34;
_30 = _42.fld2.2;
Goto(bb17)
}
bb17 = {
Call(_66 = dump_var(1_usize, 7_usize, Move(_7), 16_usize, Move(_16), 11_usize, Move(_11), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_66 = dump_var(1_usize, 27_usize, Move(_27), 28_usize, Move(_28), 6_usize, Move(_6), 51_usize, Move(_51)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_66 = dump_var(1_usize, 39_usize, Move(_39), 21_usize, Move(_21), 25_usize, Move(_25), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_66 = dump_var(1_usize, 41_usize, Move(_41), 5_usize, Move(_5), 31_usize, Move(_31), 55_usize, Move(_55)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_66 = dump_var(1_usize, 33_usize, Move(_33), 18_usize, Move(_18), 14_usize, Move(_14), 9_usize, Move(_9)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_66 = dump_var(1_usize, 50_usize, Move(_50), 67_usize, _67, 67_usize, _67, 67_usize, _67), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: i32,mut _2: [i16; 8],mut _3: isize,mut _4: [i32; 7],mut _5: [i32; 7],mut _6: u16,mut _7: isize,mut _8: [i16; 8],mut _9: u16,mut _10: [i16; 8]) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _11: ([i128; 7],);
let _12: f32;
let _13: i64;
let _14: i8;
let _15: Adt48;
let _16: isize;
let _17: (i64, *mut f32, (u32, u16, u64));
let _18: f64;
let _19: char;
let _20: isize;
let _21: Adt48;
let _22: u64;
let _23: *mut char;
let _24: ();
let _25: ();
{
_10 = [(-14388_i16),(-26945_i16),17607_i16,(-23970_i16),(-23144_i16),9679_i16,(-21759_i16),31277_i16];
_2 = [18466_i16,(-16231_i16),12543_i16,(-9048_i16),(-9500_i16),(-7824_i16),(-14434_i16),28158_i16];
_8 = [(-17610_i16),16576_i16,(-21736_i16),1165_i16,16986_i16,(-26547_i16),(-27251_i16),7517_i16];
_4 = [_1,_1,_1,_1,_1,_1,_1];
_7 = 6218524602866794883_i64 as isize;
_5 = [_1,_1,_1,_1,_1,_1,_1];
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463463374607431355049098 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_8 = [(-20304_i16),(-4239_i16),(-27486_i16),28892_i16,(-8481_i16),11787_i16,25201_i16,(-32559_i16)];
_10 = _2;
_8 = _10;
_4 = _5;
RET = [_1,_1,_1,_1,_1,_1,_1];
_6 = 14095927597549348953_usize as u16;
_5 = [_1,_1,_1,_1,_1,_1,_1];
_11.0 = [(-140846056876863767146731291310937059521_i128),(-114728930072981434714201553743259751059_i128),47584811446444000559102519311822760043_i128,126419800262899739694788352352936958345_i128,60070060697164886617267629832735894041_i128,111036413562030430000142026974710162672_i128,126222209269659383671779665018884936664_i128];
match _1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463463374607431355049098 => bb13,
_ => bb12
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_11.0 = [149374397559409251789865566764560298925_i128,(-43442113068217378425801708822068201731_i128),(-151963193896087108052222456907199293908_i128),138686084804063695076359616792945270487_i128,42905093663167715052620982893737751725_i128,(-133643639029691357809757692495125532030_i128),168073072513883089557127689229909127511_i128];
_10 = [19516_i16,13900_i16,5711_i16,27401_i16,21641_i16,(-5295_i16),(-7107_i16),5485_i16];
_7 = _3;
_7 = _3;
_13 = -(-2748512699529051235_i64);
_13 = 0_usize as i64;
_15.fld2.1 = _9 | _6;
_15.fld2.0 = _3 as u32;
_9 = _15.fld2.1;
_15.fld2.0 = !270657566_u32;
_15.fld5 = _1;
_14 = 96_i8 << _9;
_15.fld0 = _15.fld2.0 + _15.fld2.0;
_15.fld1 = (_7,);
_11.0 = [(-116227864303940370437030428430189579195_i128),89713733214057368867599946801468413534_i128,18699854809874689651864083094794568641_i128,121550203690145611403486824864352741950_i128,(-74760469532220861159773054436982565374_i128),2989957878717763319041583821560890206_i128,21891772126702418290893076929712761567_i128];
_15.fld2.1 = _13 as u16;
_6 = !_9;
match _1 {
0 => bb9,
340282366920938463463374607431355049098 => bb14,
_ => bb11
}
}
bb14 = {
_11.0 = [55118759767451798110493626172865490036_i128,80035430931143645340972764413079627198_i128,111927877304826606388370423210475933678_i128,(-5490362989993631457063496109668016773_i128),34168662476063226675234820743184186032_i128,(-29965131212107486687823534192770746141_i128),(-100017915377012077961160995489236455562_i128)];
_9 = _6;
_10 = [28726_i16,(-4790_i16),31328_i16,2549_i16,3479_i16,20684_i16,6405_i16,(-29410_i16)];
RET = _5;
_15.fld1.0 = -_7;
_15.fld4 = [_14];
_15.fld3 = 293336925055250736865336143640345407031_u128;
RET = [_15.fld5,_1,_15.fld5,_15.fld5,_1,_15.fld5,_1];
_16 = _3;
_6 = !_15.fld2.1;
_11.0 = [52769066914972120563429179890310314564_i128,(-100476986429413421421078445976963002960_i128),101381490272804609923127961873454083980_i128,(-24557925341853206833733676839217193233_i128),(-32431845157052743436505307072880955199_i128),8396403789006951882845930687884504676_i128,67510973439768881768959608768935337285_i128];
_21.fld1.0 = _7;
_17.2.0 = true as u32;
_17.2 = (_15.fld0, _15.fld2.1, 14447512828905370934_u64);
_21.fld1.0 = -_16;
_21.fld4 = [_14];
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(2_usize, 7_usize, Move(_7), 1_usize, Move(_1), 6_usize, Move(_6), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(2_usize, 2_usize, Move(_2), 4_usize, Move(_4), 11_usize, Move(_11), 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u16,mut _2: isize,mut _3: f32,mut _4: isize,mut _5: isize,mut _6: i128,mut _7: [char; 4],mut _8: (isize,),mut _9: [i32; 7],mut _10: [i32; 7],mut _11: isize,mut _12: f32,mut _13: [i32; 7],mut _14: f32,mut _15: [i128; 7],mut _16: [i16; 8]) -> (*mut u32, i128, *mut u32, [i8; 1]) {
mir! {
type RET = (*mut u32, i128, *mut u32, [i8; 1]);
let _17: (*mut u32, i128, *mut u32, [i8; 1]);
let _18: isize;
let _19: [i8; 1];
let _20: Adt50;
let _21: [u64; 1];
let _22: [i8; 1];
let _23: char;
let _24: u8;
let _25: *mut f32;
let _26: [i8; 1];
let _27: [u16; 3];
let _28: [i64; 3];
let _29: isize;
let _30: [i128; 1];
let _31: Adt46;
let _32: Adt46;
let _33: char;
let _34: Adt55;
let _35: isize;
let _36: Adt55;
let _37: [i128; 7];
let _38: [u64; 1];
let _39: Adt52;
let _40: *mut u32;
let _41: char;
let _42: isize;
let _43: (isize,);
let _44: ();
let _45: ();
{
RET.1 = _6 << _8.0;
_5 = 43152704_i32 as isize;
_17.1 = -_6;
RET.1 = _6;
RET.3 = [37_i8];
_9 = [(-851249190_i32),2055927647_i32,753237108_i32,(-1079214887_i32),1604518468_i32,381989717_i32,(-1480910159_i32)];
_18 = _11;
_10 = [(-1596422821_i32),2054901076_i32,1848764601_i32,1883460381_i32,1210941941_i32,364040246_i32,(-1589383832_i32)];
_9 = [16059469_i32,407456201_i32,(-399312209_i32),(-1842657635_i32),(-1506625043_i32),803947629_i32,(-615399519_i32)];
_1 = 48958_u16 * 46824_u16;
_14 = -_3;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
167376166575723488652022449371412535161 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7 = ['\u{bef27}','\u{ed217}','\u{51f32}','\u{df4e1}'];
Call(_6 = core::intrinsics::bswap(RET.1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = (_11,);
_4 = _18 - _18;
_17.3 = [114_i8];
_11 = 3919914204660550850_i64 as isize;
_15 = [_6,_17.1,_6,_17.1,_17.1,_17.1,_6];
RET.3 = _17.3;
_21 = [12307157537894238575_u64];
_19 = RET.3;
_10 = [402066633_i32,(-880750622_i32),464522085_i32,(-99349030_i32),300782490_i32,1576527939_i32,1002699534_i32];
_2 = !_4;
_15 = [RET.1,_6,_17.1,RET.1,RET.1,_17.1,_6];
_17.3 = _19;
_8.0 = _4;
_17.1 = _6;
_7 = ['\u{e124e}','\u{c8c6a}','\u{d61a1}','\u{1008ec}'];
match RET.1 {
0 => bb3,
1 => bb7,
2 => bb8,
3 => bb9,
167376166575723488652022449371412535161 => bb11,
_ => bb10
}
}
bb7 = {
_7 = ['\u{bef27}','\u{ed217}','\u{51f32}','\u{df4e1}'];
Call(_6 = core::intrinsics::bswap(RET.1), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_22 = [58_i8];
_2 = 8025454785137455862_usize as isize;
_6 = (-2206643249524074574_i64) as i128;
_19 = [35_i8];
_23 = '\u{1dd8c}';
_2 = (-13721_i16) as isize;
_14 = -_3;
_18 = 599_i16 as isize;
_3 = _14;
_6 = RET.1 | RET.1;
_17.1 = 2_usize as i128;
_1 = false as u16;
RET.1 = 7_usize as i128;
_16 = [23745_i16,(-7028_i16),(-29038_i16),(-13439_i16),(-4824_i16),16649_i16,(-21197_i16),22507_i16];
_4 = _8.0;
_7 = [_23,_23,_23,_23];
_21 = [9012302724167436753_u64];
_19 = [(-114_i8)];
Goto(bb12)
}
bb12 = {
_19 = [54_i8];
_14 = _12 * _3;
_7 = [_23,_23,_23,_23];
_21 = [13407224170711453998_u64];
_13 = [(-1384061198_i32),1103053847_i32,375543202_i32,1926961624_i32,949018660_i32,(-2028004840_i32),2071045040_i32];
_8.0 = 144706602648936686406130778097617143786_u128 as isize;
_9 = [(-12375078_i32),(-1161779895_i32),(-2012977293_i32),1078435110_i32,1963668235_i32,(-30649392_i32),(-1543686706_i32)];
_21 = [6523247611315831565_u64];
_33 = _23;
_8 = (_4,);
_14 = 1848920907367825995890313617193487991_u128 as f32;
_29 = _11 * _8.0;
RET.1 = _6 ^ _6;
_18 = 613286942_i32 as isize;
_16 = [(-16248_i16),(-29794_i16),(-17349_i16),22685_i16,25797_i16,25958_i16,4071_i16,(-13826_i16)];
_3 = _12 * _14;
_13 = [(-829007595_i32),1468924078_i32,(-383106496_i32),748509816_i32,(-736018403_i32),584618597_i32,1310742925_i32];
_36.fld2.1 = RET.1 + RET.1;
_30 = [_17.1];
Call(RET = fn4(_29, _29, _8.0, _16, _4, _29, _12, _8, _29, _4, _8, _4, _3, _29), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_17.2 = RET.0;
_35 = _11 ^ _29;
_4 = _35;
_34.fld2.2 = _17.2;
_15 = [_36.fld2.1,_36.fld2.1,_36.fld2.1,RET.1,_36.fld2.1,_36.fld2.1,_36.fld2.1];
_17 = (RET.0, _6, RET.0, _19);
_37 = [_17.1,_36.fld2.1,RET.1,_17.1,_36.fld2.1,_36.fld2.1,_36.fld2.1];
RET = _17;
_36.fld1 = 6818408003284927696_u64 >> RET.1;
_34.fld2.1 = _6;
_39.fld5.fld3 = [_36.fld2.1,_36.fld2.1,_36.fld2.1,_36.fld2.1,_36.fld2.1,_36.fld2.1,_17.1];
Call(_39.fld3 = fn7(_29, _8.0, _1, _13, _39.fld5.fld3, _17.0, _8.0, _35, _8.0, _39.fld5.fld3, _34.fld2.1, _14), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_32 = Adt46::Variant0 { fld0: _17,fld1: _23,fld2: _17.3 };
_38 = _21;
_34.fld1 = !_36.fld1;
_4 = _35;
SetDiscriminant(_32, 0);
_6 = _36.fld2.1 & _36.fld2.1;
_39.fld5.fld1 = !_36.fld1;
place!(Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_32, 0), 0)).0 = _17.0;
RET.3 = [_39.fld3];
_19 = [_39.fld3];
_28 = [296499723524919110_i64,(-4908041961992634949_i64),(-6487331969785832040_i64)];
_39.fld5.fld2 = 21538_i16;
_34.fld1 = _3 as u64;
_8.0 = _35;
_39.fld1 = Adt49::Variant1 { fld0: _39.fld5.fld2 };
_28 = [(-1083411992873726114_i64),(-2198696013403559326_i64),(-4213565753475709689_i64)];
place!(Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_32, 0), 0)).1 = _6;
_39.fld5.fld0.0 = _28;
_36.fld2.3 = [_39.fld3];
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(3_usize, 37_usize, Move(_37), 4_usize, Move(_4), 21_usize, Move(_21), 30_usize, Move(_30)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(3_usize, 16_usize, Move(_16), 10_usize, Move(_10), 35_usize, Move(_35), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(3_usize, 11_usize, Move(_11), 18_usize, Move(_18), 5_usize, Move(_5), 29_usize, Move(_29)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: [i16; 8],mut _5: isize,mut _6: isize,mut _7: f32,mut _8: (isize,),mut _9: isize,mut _10: isize,mut _11: (isize,),mut _12: isize,mut _13: f32,mut _14: isize) -> (*mut u32, i128, *mut u32, [i8; 1]) {
mir! {
type RET = (*mut u32, i128, *mut u32, [i8; 1]);
let _15: &'static u64;
let _16: u16;
let _17: Adt57;
let _18: f64;
let _19: [u64; 1];
let _20: ([i128; 7],);
let _21: [i32; 7];
let _22: [char; 4];
let _23: [i64; 3];
let _24: [u64; 1];
let _25: isize;
let _26: Adt42;
let _27: isize;
let _28: *mut char;
let _29: bool;
let _30: *mut *mut u32;
let _31: Adt56;
let _32: [i128; 1];
let _33: isize;
let _34: Adt47;
let _35: isize;
let _36: ();
let _37: ();
{
_5 = _3;
RET.1 = (-28728430696804913606477226327574334935_i128) & (-131546325020490602378892436815915706857_i128);
_3 = !_14;
RET.1 = -123619844744856628935751077035566107597_i128;
RET.3 = [95_i8];
_1 = -_9;
_4 = [17675_i16,(-25509_i16),(-7811_i16),20064_i16,(-29038_i16),(-4585_i16),(-15274_i16),12948_i16];
_12 = _13 as isize;
_11 = _8;
_9 = _12 << _1;
_1 = _6 << _11.0;
RET.1 = (-150433070640397033382678821056368637845_i128);
_1 = -_2;
_8.0 = _9;
_13 = _7 + _7;
_9 = !_8.0;
match RET.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
189849296280541430080695786375399573611 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_11.0 = _2 * _5;
_16 = 8708270007902277454_i64 as u16;
_5 = 2305521249_u32 as isize;
_2 = _11.0;
_10 = (-682645570_i32) as isize;
_13 = _7 * _7;
_11.0 = _10;
_12 = _9;
_3 = _14 << _8.0;
_7 = _13 * _13;
_11.0 = _2 & _12;
_13 = _7 - _7;
RET.1 = -(-78457372609651194456415122764716553052_i128);
_8 = (_6,);
RET.1 = 3176079969_u32 as i128;
_8.0 = _9 << _12;
_12 = _6 ^ _8.0;
_14 = _2 | _3;
_8 = _11;
Goto(bb9)
}
bb9 = {
_7 = -_13;
_12 = !_14;
_18 = (-1337568389_i32) as f64;
Call(RET.1 = fn5(_2, _3), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5 = _12;
_11.0 = _7 as isize;
RET.1 = -(-166551141476610488097380161332331011839_i128);
Goto(bb11)
}
bb11 = {
RET.1 = 37590079446818487928321584843275262329_u128 as i128;
_11 = (_5,);
_1 = 7_usize as isize;
RET.3 = [110_i8];
_8.0 = _12 << _12;
_6 = 7_usize as isize;
RET.1 = 23809165756296159382817287387037548598_i128;
RET.3 = [(-117_i8)];
_10 = _2 ^ _8.0;
_8 = _11;
RET.1 = 24736475701042062572376627478265578979_i128;
_7 = 2_usize as f32;
_3 = _12;
match RET.1 {
24736475701042062572376627478265578979 => bb12,
_ => bb3
}
}
bb12 = {
_11 = _8;
_22 = ['\u{7ef5}','\u{b5d38}','\u{1717d}','\u{6670e}'];
RET.3 = [111_i8];
_8 = (_3,);
_12 = _9 + _3;
_8.0 = _14;
_10 = _14 ^ _5;
_13 = _7;
_5 = _11.0;
_8.0 = _5 | _11.0;
_9 = !_10;
_11.0 = _18 as isize;
_8.0 = _3;
_5 = _9;
_21 = [1831233350_i32,1296503025_i32,56460138_i32,(-840497181_i32),(-995382778_i32),336340882_i32,(-1577194807_i32)];
_22 = ['\u{3517c}','\u{2b13e}','\u{5272c}','\u{3e39d}'];
_19 = [15363462297956504817_u64];
_23 = [5877780197928192295_i64,(-1691440253066415655_i64),5258254147412038405_i64];
match RET.1 {
0 => bb9,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
24736475701042062572376627478265578979 => bb18,
_ => bb17
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_11.0 = _2 * _5;
_16 = 8708270007902277454_i64 as u16;
_5 = 2305521249_u32 as isize;
_2 = _11.0;
_10 = (-682645570_i32) as isize;
_13 = _7 * _7;
_11.0 = _10;
_12 = _9;
_3 = _14 << _8.0;
_7 = _13 * _13;
_11.0 = _2 & _12;
_13 = _7 - _7;
RET.1 = -(-78457372609651194456415122764716553052_i128);
_8 = (_6,);
RET.1 = 3176079969_u32 as i128;
_8.0 = _9 << _12;
_12 = _6 ^ _8.0;
_14 = _2 | _3;
_8 = _11;
Goto(bb9)
}
bb17 = {
Return()
}
bb18 = {
_20.0 = [RET.1,RET.1,RET.1,RET.1,RET.1,RET.1,RET.1];
_20.0 = [RET.1,RET.1,RET.1,RET.1,RET.1,RET.1,RET.1];
_20.0 = [RET.1,RET.1,RET.1,RET.1,RET.1,RET.1,RET.1];
_25 = '\u{76bdf}' as isize;
_13 = 48381276780811472_i64 as f32;
_27 = !_9;
_12 = '\u{fe3f2}' as isize;
RET.3 = [49_i8];
RET.3 = [(-96_i8)];
_20.0 = [RET.1,RET.1,RET.1,RET.1,RET.1,RET.1,RET.1];
_19 = [5746399885670084951_u64];
RET.1 = !160811005189472679456827736666351189168_i128;
_13 = _7 - _7;
_16 = 44705_u16 << _9;
_4 = [32412_i16,(-11500_i16),28795_i16,(-17508_i16),12135_i16,(-30095_i16),8024_i16,(-29269_i16)];
_11.0 = 2028141155_i32 as isize;
_26 = Adt42::Variant1 { fld0: (-1104668465_i32) };
_8.0 = 18_u8 as isize;
_3 = !_10;
_25 = !_5;
_10 = _16 as isize;
_8.0 = -_25;
place!(Field::<i32>(Variant(_26, 1), 0)) = (-1449497488_i32) << _27;
Goto(bb19)
}
bb19 = {
_21 = [Field::<i32>(Variant(_26, 1), 0),Field::<i32>(Variant(_26, 1), 0),Field::<i32>(Variant(_26, 1), 0),Field::<i32>(Variant(_26, 1), 0),Field::<i32>(Variant(_26, 1), 0),Field::<i32>(Variant(_26, 1), 0),Field::<i32>(Variant(_26, 1), 0)];
Goto(bb20)
}
bb20 = {
_5 = (-72_i8) as isize;
_16 = 4832_u16 - 33084_u16;
_5 = 1861734719644781685_usize as isize;
SetDiscriminant(_26, 2);
_32 = [RET.1];
_24 = [18374375484369381688_u64];
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_26, 2), 2)).2.1 = _16;
place!(Field::<*mut f32>(Variant(_26, 2), 4)) = core::ptr::addr_of_mut!(_7);
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_26, 2), 2)).0 = (-2282754261529450751_i64);
_13 = -_7;
place!(Field::<u32>(Variant(_26, 2), 3)) = RET.1 as u32;
RET.3 = [(-13_i8)];
_30 = core::ptr::addr_of_mut!(RET.2);
RET.2 = core::ptr::addr_of_mut!(place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_26, 2), 2)).2.0);
RET.3 = [29_i8];
_34 = Adt47::Variant3 { fld0: 14493023511833906010_u64,fld1: _23 };
place!(Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_26, 2), 1)).1 = !RET.1;
_22 = ['\u{9c0a7}','\u{bddf1}','\u{ced73}','\u{60577}'];
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_26, 2), 2)).1 = core::ptr::addr_of_mut!(_7);
place!(Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_26, 2), 1)) = (RET.2, RET.1, RET.2, RET.3);
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_26, 2), 2)).1 = Field::<*mut f32>(Variant(_26, 2), 4);
RET = (Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_26, 2), 1).2, Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_26, 2), 1).1, Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_26, 2), 1).2, Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_26, 2), 1).3);
_13 = -_7;
Goto(bb21)
}
bb21 = {
Call(_36 = dump_var(4_usize, 11_usize, Move(_11), 20_usize, Move(_20), 1_usize, Move(_1), 21_usize, Move(_21)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_36 = dump_var(4_usize, 24_usize, Move(_24), 10_usize, Move(_10), 2_usize, Move(_2), 5_usize, Move(_5)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_36 = dump_var(4_usize, 22_usize, Move(_22), 9_usize, Move(_9), 19_usize, Move(_19), 37_usize, _37), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: isize) -> i128 {
mir! {
type RET = i128;
let _3: Adt48;
let _4: (u32, ([i64; 3],), isize);
let _5: [char; 4];
let _6: &'static u64;
let _7: isize;
let _8: *mut char;
let _9: Adt44;
let _10: Adt51;
let _11: isize;
let _12: f64;
let _13: Adt51;
let _14: [u16; 3];
let _15: &'static u64;
let _16: Adt49;
let _17: i32;
let _18: isize;
let _19: char;
let _20: ([i64; 3],);
let _21: bool;
let _22: [u16; 3];
let _23: (u32, ([i64; 3],), isize);
let _24: Adt42;
let _25: (isize,);
let _26: f32;
let _27: ();
let _28: ();
{
RET = '\u{5f9ce}' as i128;
RET = 96533563635127654645634047776799380978_i128;
_3.fld2.1 = 93_i8 as u16;
_3.fld2.0 = 3_usize as u32;
_3.fld1 = (_1,);
RET = (-8236091105288393406142969539455632805_i128);
_3.fld3 = 11911283792046241900_u64 as u128;
_2 = !_3.fld1.0;
_3.fld4 = [13_i8];
_3.fld2.1 = 3479593693371419501_usize as u16;
_3.fld2.2 = !14289522672876011305_u64;
_3.fld2.2 = 5331320435245434070_u64 >> RET;
_2 = _1;
_3.fld0 = _3.fld3 as u32;
_4.1.0 = [(-1117023003968653947_i64),(-380549242334404079_i64),4185089772095795793_i64];
_3.fld1 = (_2,);
_4.0 = !_3.fld0;
RET = 24870_i16 as i128;
Goto(bb1)
}
bb1 = {
_3.fld2.0 = _3.fld0;
_3.fld5 = (-1531921557_i32) & 68600186_i32;
_3.fld5 = (-1857149339_i32);
RET = -2299340160515524878169535191217629222_i128;
_4.2 = 1155288150551633731_i64 as isize;
RET = -(-107853062677324530788947695555806745450_i128);
_3.fld5 = (-1783986803_i32);
_2 = !_1;
RET = 18_i8 as i128;
_5 = ['\u{67fa2}','\u{96f88}','\u{f5db0}','\u{34a93}'];
_3.fld3 = (-10635_i16) as u128;
_4.2 = _3.fld1.0;
_5 = ['\u{78ef4}','\u{51b0b}','\u{9ed1b}','\u{fc72e}'];
match _3.fld5 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607429984224653 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_3.fld1.0 = _3.fld0 as isize;
_5 = ['\u{356ac}','\u{5a007}','\u{612fe}','\u{daf29}'];
_7 = -_1;
_3.fld2 = (_4.0, 29199_u16, 15196564854598906494_u64);
_3.fld2 = (_4.0, 55917_u16, 14182189197127912094_u64);
RET = _1 as i128;
_9.fld0.0 = _4.1.0;
_9.fld2 = (-9409_i16) << _4.2;
_3.fld2.0 = _3.fld0 | _4.0;
_3.fld2 = (_4.0, 1663_u16, 6296426942049304554_u64);
RET = -(-78139252287582659859472956509259380322_i128);
RET = _3.fld5 as i128;
_3.fld4 = [12_i8];
_2 = _1 ^ _1;
Goto(bb11)
}
bb11 = {
_11 = _3.fld2.0 as isize;
_4.2 = _2;
_3.fld2 = (_4.0, 53069_u16, 16069215329996820252_u64);
_3.fld0 = _4.0 << _2;
_4.1.0 = [8112368876669498369_i64,358620482082453699_i64,1928429489969722075_i64];
_12 = RET as f64;
Goto(bb12)
}
bb12 = {
_9.fld0 = _4.1;
_9.fld2 = 12118402719235249865_usize as i16;
RET = -72825699181336335234287960839837321355_i128;
_9.fld3 = [RET,RET,RET,RET,RET,RET,RET];
_17 = _3.fld5;
_11 = _4.2 - _2;
_9.fld0.0 = [(-1997815595804871050_i64),4132506663999746050_i64,1937105779674018060_i64];
_6 = &_9.fld1;
_6 = &(*_6);
_5 = ['\u{8cf8e}','\u{4723a}','\u{b322a}','\u{6d791}'];
_5 = ['\u{10aece}','\u{d3ada}','\u{a2e90}','\u{4325a}'];
Goto(bb13)
}
bb13 = {
_3.fld2 = (_3.fld0, 51146_u16, 17896173031561002652_u64);
_2 = _3.fld2.1 as isize;
RET = (-2021757512219299399261148312190943411_i128);
_9.fld1 = _3.fld2.2 - _3.fld2.2;
_21 = _3.fld2.2 > _9.fld1;
_3.fld4 = [(-3_i8)];
_2 = _9.fld2 as isize;
_14 = [_3.fld2.1,_3.fld2.1,_3.fld2.1];
_4.0 = _3.fld0;
Call(_18 = fn6(_4, _11, _3.fld2.1, _4.0, _11, _3.fld2.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_4.1 = _9.fld0;
_16 = Adt49::Variant1 { fld0: _9.fld2 };
_3.fld3 = 68507954882213061267516216094351410333_u128 - 170459892383053045985151821016962648919_u128;
_2 = -_18;
_1 = _2 + _2;
_20 = _4.1;
_23.2 = _9.fld1 as isize;
_18 = _2;
_9.fld3 = [RET,RET,RET,RET,RET,RET,RET];
_23.2 = _4.2 >> _9.fld1;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(5_usize, 5_usize, Move(_5), 18_usize, Move(_18), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(5_usize, 11_usize, Move(_11), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: (u32, ([i64; 3],), isize),mut _2: isize,mut _3: u16,mut _4: u32,mut _5: isize,mut _6: u32) -> isize {
mir! {
type RET = isize;
let _7: Adt45;
let _8: ();
let _9: ();
{
_5 = !_2;
RET = !_1.2;
RET = !_2;
_1.1.0 = [4432514074234453986_i64,(-559394463561162974_i64),7018572603773742440_i64];
RET = _5 & _1.2;
_3 = 27871_u16;
_1.2 = 12336520233152889807_usize as isize;
_5 = -RET;
_1.2 = RET << _5;
_2 = 14412769169796941353_usize as isize;
_1.1.0 = [419404815715490233_i64,8907229808528444317_i64,(-7239356919945853527_i64)];
_5 = 7625540285969801188_i64 as isize;
_2 = -_1.2;
_6 = 208_u8 as u32;
_4 = _1.0 * _1.0;
_3 = (-5238_i16) as u16;
_7.fld0.0 = [(-50841587236857950377490109713984003846_i128),(-50315040907636086629842943312852613823_i128),68562836801807452713272008472008773927_i128,80889499016882604013479886941179103467_i128,137637967770492239779289472980543256657_i128,87584982472164197830103278149001256943_i128,167047343806784614617049033140745394986_i128];
_7.fld3 = (_1.2,);
_1.0 = _4;
_7.fld0.0 = [(-6224035655345884964445794496836695045_i128),(-120538142456861448672015152157000669691_i128),32197671619774372444326512559033437453_i128,139832721186929417221556680144546204807_i128,124006141931107784947639863400356125892_i128,(-105723569079952523634949490310836660102_i128),(-95173732925213312990042942522338603499_i128)];
_6 = _4 * _4;
_7.fld1 = '\u{a54d8}';
RET = _4 as isize;
Goto(bb1)
}
bb1 = {
Call(_8 = dump_var(6_usize, 4_usize, Move(_4), 3_usize, Move(_3), 1_usize, Move(_1), 9_usize, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: isize,mut _3: u16,mut _4: [i32; 7],mut _5: [i128; 7],mut _6: *mut u32,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: [i128; 7],mut _11: i128,mut _12: f32) -> i8 {
mir! {
type RET = i8;
let _13: [i16; 8];
let _14: [i8; 1];
let _15: Adt42;
let _16: Adt54;
let _17: isize;
let _18: i64;
let _19: [i32; 7];
let _20: [i128; 7];
let _21: [u16; 3];
let _22: Adt54;
let _23: f64;
let _24: *mut u32;
let _25: f32;
let _26: [i64; 3];
let _27: i16;
let _28: u64;
let _29: Adt45;
let _30: isize;
let _31: i8;
let _32: u64;
let _33: i64;
let _34: f64;
let _35: isize;
let _36: i8;
let _37: isize;
let _38: char;
let _39: (isize,);
let _40: Adt48;
let _41: (u32, ([i64; 3],), isize);
let _42: ();
let _43: ();
{
_2 = '\u{26d35}' as isize;
_3 = !43937_u16;
_3 = 58748_u16;
_11 = -(-67694436694368897527654331794049594008_i128);
_2 = (-24945_i16) as isize;
_3 = !54516_u16;
_2 = -_9;
RET = -56_i8;
_9 = RET as isize;
_3 = 25023_u16;
RET = -(-104_i8);
RET = !93_i8;
_2 = _8 << _7;
_12 = 2391578627784147819_usize as f32;
_3 = 57423_u16 + 21909_u16;
RET = _11 as i8;
_13 = [11506_i16,13768_i16,26028_i16,(-9112_i16),15257_i16,28042_i16,17715_i16,(-5737_i16)];
_14 = [RET];
_2 = _7;
_11 = 115399616947245483984079395735638150388_i128 & 90183068379788820259356777428127735079_i128;
_12 = 4465630878207741179_usize as f32;
_13 = [(-8179_i16),10844_i16,(-15042_i16),16193_i16,10512_i16,12385_i16,30757_i16,(-29758_i16)];
RET = !(-53_i8);
_2 = 154318307207496313947917806948218937135_u128 as isize;
Call(_7 = fn8(_4, _1, _1, _8, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = !121_i8;
_4 = [1778451360_i32,(-1875930466_i32),(-68559297_i32),(-2063213617_i32),1980431413_i32,(-610154588_i32),999941732_i32];
RET = 13_i8 | (-87_i8);
_10 = _5;
_14 = [RET];
RET = _11 as i8;
_19 = _4;
_20 = [_11,_11,_11,_11,_11,_11,_11];
_14 = [RET];
_3 = 18928_u16 | 46457_u16;
_1 = (-2604_i16) as isize;
Goto(bb2)
}
bb2 = {
_13 = [(-8589_i16),(-25272_i16),(-30473_i16),(-7078_i16),(-19609_i16),(-26844_i16),18640_i16,(-1395_i16)];
_7 = (-3820809648030618937_i64) as isize;
_18 = _12 as i64;
_21 = [_3,_3,_3];
_14 = [RET];
_10 = _20;
_17 = _3 as isize;
Goto(bb3)
}
bb3 = {
_12 = 3582437969_u32 as f32;
RET = (-126_i8) >> _3;
_24 = _6;
RET = 32240_i16 as i8;
_1 = _8;
_10 = [_11,_11,_11,_11,_11,_11,_11];
_5 = [_11,_11,_11,_11,_11,_11,_11];
_5 = [_11,_11,_11,_11,_11,_11,_11];
_12 = (-3832_i16) as f32;
_5 = _20;
_9 = _8;
Goto(bb4)
}
bb4 = {
_7 = _3 as isize;
_20 = [_11,_11,_11,_11,_11,_11,_11];
Goto(bb5)
}
bb5 = {
_1 = _11 as isize;
RET = !126_i8;
_23 = 15_u8 as f64;
_28 = RET as u64;
_15 = Adt42::Variant1 { fld0: 1945091549_i32 };
_15 = Adt42::Variant1 { fld0: (-2065996829_i32) };
_28 = !5285298439806950583_u64;
_24 = _6;
_1 = 534379614_i32 as isize;
_25 = _12 * _12;
place!(Field::<i32>(Variant(_15, 1), 0)) = (-95528256_i32);
_20 = [_11,_11,_11,_11,_11,_11,_11];
_27 = 15087_i16;
SetDiscriminant(_15, 0);
place!(Field::<f32>(Variant(_15, 0), 2)) = -_25;
place!(Field::<*const f32>(Variant(_15, 0), 5)) = core::ptr::addr_of!(_25);
RET = 38_i8 + (-112_i8);
place!(Field::<i64>(Variant(_15, 0), 6)) = _18 | _18;
_7 = _18 as isize;
match _27 {
0 => bb1,
15087 => bb6,
_ => bb3
}
}
bb6 = {
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).2 = _9 ^ _9;
place!(Field::<char>(Variant(_15, 0), 1)) = '\u{c1fb4}';
place!(Field::<[i128; 7]>(Variant(_15, 0), 4)) = [_11,_11,_11,_11,_11,_11,_11];
_29.fld0 = (Field::<[i128; 7]>(Variant(_15, 0), 4),);
_24 = _6;
_29.fld2 = true as u16;
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).1.0 = [_18,Field::<i64>(Variant(_15, 0), 6),Field::<i64>(Variant(_15, 0), 6)];
_31 = Field::<i64>(Variant(_15, 0), 6) as i8;
_13 = [_27,_27,_27,_27,_27,_27,_27,_27];
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).0 = (-442825537_i32) as u32;
_30 = -Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).2;
_29.fld1 = Field::<char>(Variant(_15, 0), 1);
_11 = -(-101803155596304826457075924344265493133_i128);
_2 = _29.fld1 as isize;
_4 = _19;
match _27 {
15087 => bb8,
_ => bb7
}
}
bb7 = {
_12 = 3582437969_u32 as f32;
RET = (-126_i8) >> _3;
_24 = _6;
RET = 32240_i16 as i8;
_1 = _8;
_10 = [_11,_11,_11,_11,_11,_11,_11];
_5 = [_11,_11,_11,_11,_11,_11,_11];
_5 = [_11,_11,_11,_11,_11,_11,_11];
_12 = (-3832_i16) as f32;
_5 = _20;
_9 = _8;
Goto(bb4)
}
bb8 = {
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).0 = 610058829_u32;
_32 = !_28;
_5 = [_11,_11,_11,_11,_11,_11,_11];
_34 = Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).0 as f64;
_1 = false as isize;
_2 = _30 * _30;
_30 = _2;
_17 = _30 >> _9;
_33 = 189004937435810429629598641863290321693_u128 as i64;
Goto(bb9)
}
bb9 = {
place!(Field::<f32>(Variant(_15, 0), 2)) = -_25;
RET = Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).0 as i8;
match Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb10,
4 => bb11,
610058829 => bb13,
_ => bb12
}
}
bb10 = {
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).0 = 610058829_u32;
_32 = !_28;
_5 = [_11,_11,_11,_11,_11,_11,_11];
_34 = Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).0 as f64;
_1 = false as isize;
_2 = _30 * _30;
_30 = _2;
_17 = _30 >> _9;
_33 = 189004937435810429629598641863290321693_u128 as i64;
Goto(bb9)
}
bb11 = {
_12 = 3582437969_u32 as f32;
RET = (-126_i8) >> _3;
_24 = _6;
RET = 32240_i16 as i8;
_1 = _8;
_10 = [_11,_11,_11,_11,_11,_11,_11];
_5 = [_11,_11,_11,_11,_11,_11,_11];
_5 = [_11,_11,_11,_11,_11,_11,_11];
_12 = (-3832_i16) as f32;
_5 = _20;
_9 = _8;
Goto(bb4)
}
bb12 = {
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).2 = _9 ^ _9;
place!(Field::<char>(Variant(_15, 0), 1)) = '\u{c1fb4}';
place!(Field::<[i128; 7]>(Variant(_15, 0), 4)) = [_11,_11,_11,_11,_11,_11,_11];
_29.fld0 = (Field::<[i128; 7]>(Variant(_15, 0), 4),);
_24 = _6;
_29.fld2 = true as u16;
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).1.0 = [_18,Field::<i64>(Variant(_15, 0), 6),Field::<i64>(Variant(_15, 0), 6)];
_31 = Field::<i64>(Variant(_15, 0), 6) as i8;
_13 = [_27,_27,_27,_27,_27,_27,_27,_27];
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).0 = (-442825537_i32) as u32;
_30 = -Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).2;
_29.fld1 = Field::<char>(Variant(_15, 0), 1);
_11 = -(-101803155596304826457075924344265493133_i128);
_2 = _29.fld1 as isize;
_4 = _19;
match _27 {
15087 => bb8,
_ => bb7
}
}
bb13 = {
_35 = Field::<f32>(Variant(_15, 0), 2) as isize;
_33 = _18;
_14 = [_31];
_21 = [_3,_29.fld2,_29.fld2];
_17 = _30;
place!(Field::<char>(Variant(_15, 0), 1)) = _29.fld1;
_2 = _17;
_26 = [Field::<i64>(Variant(_15, 0), 6),Field::<i64>(Variant(_15, 0), 6),Field::<i64>(Variant(_15, 0), 6)];
_29.fld2 = _3 << _30;
_11 = (-131017435313616046679691574372619065708_i128) ^ 129424863846106460069873082534488691989_i128;
_33 = _30 as i64;
_21 = [_29.fld2,_29.fld2,_29.fld2];
_19 = [(-139439429_i32),(-2017998811_i32),(-714938818_i32),(-850914061_i32),962056937_i32,(-2082995195_i32),(-1135814270_i32)];
place!(Field::<*const f32>(Variant(_15, 0), 5)) = core::ptr::addr_of!(place!(Field::<f32>(Variant(_15, 0), 2)));
_21 = [_29.fld2,_29.fld2,_29.fld2];
_36 = _31;
_6 = _24;
_29.fld3 = (_9,);
_29.fld3 = (_8,);
_22 = Adt54::Variant0 { fld0: _26,fld1: _21 };
place!(Field::<char>(Variant(_15, 0), 1)) = _29.fld1;
_28 = 18130483608673760393_usize as u64;
_12 = -Field::<f32>(Variant(_15, 0), 2);
place!(Field::<f32>(Variant(_15, 0), 2)) = -_25;
_3 = _36 as u16;
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).2 = _9;
place!(Field::<u32>(Variant(_15, 0), 0)) = Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3).0;
_16 = Move(_22);
match _27 {
0 => bb8,
1 => bb6,
15087 => bb14,
_ => bb3
}
}
bb14 = {
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).1 = (_26,);
_24 = core::ptr::addr_of_mut!(place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_15, 0), 3)).0);
_19 = [1941447484_i32,(-1777790873_i32),(-749327329_i32),(-1248894635_i32),(-1184399426_i32),(-30819733_i32),(-1175581651_i32)];
_28 = _29.fld1 as u64;
_2 = -_30;
_29.fld3 = (_30,);
place!(Field::<[u16; 3]>(Variant(_16, 0), 1)) = _21;
_7 = _2;
_22 = Move(_16);
_16 = Move(_22);
_30 = _2;
_9 = _30;
_36 = (*_24) as i8;
_41.2 = _29.fld3.0;
_40.fld1.0 = _7;
_5 = _29.fld0.0;
_33 = Field::<i64>(Variant(_15, 0), 6);
_39.0 = _40.fld1.0 * _41.2;
_20 = [_11,_11,_11,_11,_11,_11,_11];
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(7_usize, 8_usize, Move(_8), 33_usize, Move(_33), 30_usize, Move(_30), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(7_usize, 36_usize, Move(_36), 13_usize, Move(_13), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(7_usize, 35_usize, Move(_35), 32_usize, Move(_32), 10_usize, Move(_10), 39_usize, Move(_39)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(7_usize, 3_usize, Move(_3), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [i32; 7],mut _2: isize,mut _3: isize,mut _4: isize,mut _5: [i128; 7]) -> isize {
mir! {
type RET = isize;
let _6: isize;
let _7: Adt50;
let _8: char;
let _9: Adt55;
let _10: char;
let _11: isize;
let _12: [u64; 1];
let _13: Adt55;
let _14: [i16; 8];
let _15: isize;
let _16: (u32, ([i64; 3],), isize);
let _17: bool;
let _18: Adt56;
let _19: f32;
let _20: [i128; 1];
let _21: ([i128; 7],);
let _22: i128;
let _23: Adt42;
let _24: ([i128; 7],);
let _25: ([i64; 3],);
let _26: Adt48;
let _27: f32;
let _28: isize;
let _29: f32;
let _30: (isize,);
let _31: (i64, *mut f32, (u32, u16, u64));
let _32: Adt47;
let _33: i8;
let _34: isize;
let _35: Adt49;
let _36: (isize,);
let _37: (u32, ([i64; 3],), isize);
let _38: Adt45;
let _39: [i64; 3];
let _40: (u32, u16, u64);
let _41: ([i32; 7], [i64; 3], u64, u64);
let _42: Adt49;
let _43: (isize,);
let _44: bool;
let _45: u64;
let _46: Adt42;
let _47: f32;
let _48: ();
let _49: ();
{
RET = _2;
_4 = _3;
_3 = !_4;
_3 = '\u{3b41a}' as isize;
_6 = !_2;
_2 = _6 ^ RET;
_1 = [(-665858552_i32),1403668517_i32,(-488678932_i32),(-170359486_i32),(-1505200638_i32),1290796261_i32,848758750_i32];
Goto(bb1)
}
bb1 = {
_4 = 16706_u16 as isize;
_6 = _2 + _2;
_6 = -_2;
_2 = 55402_u16 as isize;
_1 = [(-2022064697_i32),(-1406229318_i32),1909257151_i32,(-712570026_i32),(-850800469_i32),542362508_i32,(-1607194856_i32)];
_3 = 14949_u16 as isize;
RET = _6;
_8 = '\u{7275c}';
_9.fld0 = [(-8565645117126424004_i64),(-1786222734544172336_i64),(-1968139742249709512_i64)];
_9.fld2.3 = [(-2_i8)];
_9.fld0 = [(-8291384643774769356_i64),5493590307687528857_i64,(-6243938034556538208_i64)];
_9.fld1 = 136_u8 as u64;
RET = 1757758885_u32 as isize;
_9.fld2.1 = false as i128;
_6 = 113220314061126335649713905130612857892_u128 as isize;
_1 = [596271854_i32,1498010598_i32,(-1639133769_i32),(-783921765_i32),(-158920841_i32),320412270_i32,2016794232_i32];
_6 = !_3;
_6 = _3;
_11 = _4;
_9.fld0 = [3338021529355177435_i64,8054268317205223918_i64,(-2930721803545698123_i64)];
_1 = [577882178_i32,(-1246543961_i32),498051048_i32,1447987479_i32,(-994975902_i32),874929428_i32,(-866026218_i32)];
Call(_11 = core::intrinsics::bswap(_6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9.fld0 = [3124629199538618634_i64,(-7624155077029636974_i64),(-5185474519147045272_i64)];
_9.fld2.3 = [(-66_i8)];
_9.fld1 = !10558457676964993145_u64;
_1 = [1554762197_i32,1338096490_i32,1998353828_i32,1685758570_i32,348594423_i32,699549840_i32,1578710525_i32];
_13.fld0 = [7004414012519037426_i64,4363483305515112404_i64,(-6103265721654772825_i64)];
_13.fld2.3 = _9.fld2.3;
_8 = '\u{cca10}';
_15 = _2;
_10 = _8;
_15 = -_11;
_6 = _3 & _3;
_4 = RET;
_10 = _8;
_3 = -_6;
_3 = _2;
_6 = _11 * _15;
_13.fld1 = _9.fld1;
_9.fld2.3 = _13.fld2.3;
_14 = [(-25489_i16),(-5664_i16),(-7143_i16),(-4155_i16),(-5284_i16),(-29815_i16),(-10819_i16),2054_i16];
_9.fld2.1 = -76640051663309396428694110231180263573_i128;
_9.fld2.1 = 230_u8 as i128;
_6 = RET >> _3;
_1 = [1410611975_i32,1275234874_i32,479522453_i32,(-104154610_i32),(-899276355_i32),(-1491994799_i32),642793004_i32];
_13.fld2.1 = 1_usize as i128;
Call(_9.fld2 = fn9(_15, _13.fld2.1, _4, _5, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = _8;
_16.0 = !189228346_u32;
_9.fld2.2 = _9.fld2.0;
_11 = _15;
_13.fld2.2 = core::ptr::addr_of_mut!(_16.0);
_5 = [_9.fld2.1,_9.fld2.1,_9.fld2.1,_9.fld2.1,_9.fld2.1,_9.fld2.1,_9.fld2.1];
_8 = _10;
_9.fld2.0 = _9.fld2.2;
Goto(bb4)
}
bb4 = {
_16.1 = (_13.fld0,);
_16.2 = _2;
_13.fld2.0 = _13.fld2.2;
_12 = [_9.fld1];
_17 = false ^ true;
_2 = _11 + _16.2;
RET = _4;
_12 = [_9.fld1];
_13.fld2.3 = [79_i8];
_2 = 574089354_i32 as isize;
_9.fld1 = _13.fld1;
_9.fld2.1 = _13.fld2.1;
_8 = _10;
_13 = Adt55 { fld0: _9.fld0,fld1: _9.fld1,fld2: _9.fld2 };
_16.1.0 = [(-7003907115628387461_i64),731552391541086866_i64,(-8540453519341759280_i64)];
_6 = _9.fld1 as isize;
_19 = (-9080_i16) as f32;
_16.1.0 = [9003000473251433376_i64,(-3658139496687857353_i64),2733554395443738943_i64];
_16.1 = (_9.fld0,);
_13 = Adt55 { fld0: _16.1.0,fld1: _9.fld1,fld2: _9.fld2 };
_1 = [(-1853935454_i32),559416455_i32,1491548391_i32,(-1857000343_i32),(-922619692_i32),(-1300621938_i32),(-841052951_i32)];
Call(_20 = core::intrinsics::transmute(_14), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_4 = 41843828472597256838270707434821989430_u128 as isize;
RET = !_16.2;
_13.fld2.1 = -_9.fld2.1;
_13.fld2.3 = [113_i8];
_13.fld2 = (_9.fld2.2, _9.fld2.1, _9.fld2.2, _9.fld2.3);
_13.fld2.3 = _9.fld2.3;
_9.fld2.0 = _13.fld2.2;
_13.fld1 = _9.fld1 >> _4;
_12 = [_13.fld1];
_1 = [474626871_i32,1334121388_i32,1899343392_i32,(-80886674_i32),676277922_i32,(-301500858_i32),2028646221_i32];
_13.fld2.2 = core::ptr::addr_of_mut!(_16.0);
_13 = Adt55 { fld0: _16.1.0,fld1: _9.fld1,fld2: _9.fld2 };
_11 = _3;
_16.1.0 = [(-6744802678230576666_i64),(-7095924965542067684_i64),(-5778627946858878326_i64)];
_13 = Adt55 { fld0: _16.1.0,fld1: _9.fld1,fld2: _9.fld2 };
_9.fld1 = _13.fld1 * _13.fld1;
_16.1.0 = [711235275452842542_i64,(-8932189762767405379_i64),6502841238231624883_i64];
_13.fld1 = _9.fld1;
RET = _10 as isize;
Goto(bb6)
}
bb6 = {
_8 = _10;
_11 = 12_u8 as isize;
_4 = _8 as isize;
_13.fld2 = (_9.fld2.0, _9.fld2.1, _9.fld2.2, _9.fld2.3);
_4 = _15 - _11;
_13 = Adt55 { fld0: _9.fld0,fld1: _9.fld1,fld2: _9.fld2 };
_16.1 = (_13.fld0,);
_9 = Adt55 { fld0: _16.1.0,fld1: _13.fld1,fld2: _13.fld2 };
RET = 233_u8 as isize;
_21.0 = _5;
_16.0 = 2181457610_u32;
_9.fld2.0 = core::ptr::addr_of_mut!(_16.0);
_13.fld0 = _9.fld0;
_10 = _8;
_21.0 = [_13.fld2.1,_13.fld2.1,_13.fld2.1,_9.fld2.1,_9.fld2.1,_9.fld2.1,_13.fld2.1];
_24 = (_5,);
_12 = [_13.fld1];
_3 = !_4;
Goto(bb7)
}
bb7 = {
_14 = [23528_i16,(-22499_i16),(-4055_i16),(-17577_i16),(-23265_i16),29630_i16,(-27804_i16),4492_i16];
_9.fld2.2 = core::ptr::addr_of_mut!(_16.0);
_8 = _10;
_19 = _16.2 as f32;
_3 = !RET;
_13.fld0 = _16.1.0;
_11 = _19 as isize;
_13.fld2 = _9.fld2;
_24.0 = [_9.fld2.1,_13.fld2.1,_9.fld2.1,_9.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1];
_21.0 = _5;
_23 = Adt42::Variant1 { fld0: (-1424151585_i32) };
place!(Field::<i32>(Variant(_23, 1), 0)) = -240111483_i32;
Goto(bb8)
}
bb8 = {
SetDiscriminant(_23, 0);
_25.0 = _9.fld0;
_16.1 = (_13.fld0,);
_3 = (-118_i8) as isize;
_27 = 11922049029603975428_usize as f32;
place!(Field::<i64>(Variant(_23, 0), 6)) = 3112520035006287573_i64 | 5936675908560469677_i64;
_28 = 12381_u16 as isize;
_21 = (_5,);
_6 = RET;
_16.0 = 1675631785_u32;
_16.1 = (_9.fld0,);
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_23, 0), 3)) = (_16.0, _16.1, _28);
_16.1 = (_13.fld0,);
_26.fld0 = _16.0 * _16.0;
_5 = [_9.fld2.1,_9.fld2.1,_9.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_9.fld2.1];
_31.2.0 = _16.0 + _26.fld0;
Goto(bb9)
}
bb9 = {
place!(Field::<char>(Variant(_23, 0), 1)) = _10;
_26.fld3 = 71125153949526884899910312197243898397_u128;
Goto(bb10)
}
bb10 = {
_30 = (_16.2,);
_26.fld4 = [54_i8];
place!(Field::<[i128; 7]>(Variant(_23, 0), 4)) = _21.0;
Goto(bb11)
}
bb11 = {
_23 = Adt42::Variant1 { fld0: (-533423183_i32) };
_26.fld2.0 = !_31.2.0;
_9.fld2.1 = !_13.fld2.1;
_22 = 35_u8 as i128;
_3 = _16.2 * _2;
_31.2 = (_26.fld0, 17628_u16, _13.fld1);
_13.fld2 = (_9.fld2.0, _22, _9.fld2.2, _26.fld4);
_26.fld2.0 = _31.2.0 << _4;
_26.fld1 = _30;
place!(Field::<i32>(Variant(_23, 1), 0)) = 110026591_i32 | 1159394177_i32;
_24.0 = [_9.fld2.1,_22,_13.fld2.1,_9.fld2.1,_22,_22,_13.fld2.1];
_31.2.2 = _13.fld1 - _9.fld1;
_26.fld2.0 = _31.2.0 % _16.0;
_25.0 = _16.1.0;
_27 = _19 * _19;
_37.1.0 = [(-1649405853340893438_i64),(-8061477898303371426_i64),(-2973649630457397418_i64)];
_1 = [Field::<i32>(Variant(_23, 1), 0),Field::<i32>(Variant(_23, 1), 0),Field::<i32>(Variant(_23, 1), 0),Field::<i32>(Variant(_23, 1), 0),Field::<i32>(Variant(_23, 1), 0),Field::<i32>(Variant(_23, 1), 0),Field::<i32>(Variant(_23, 1), 0)];
_3 = _27 as isize;
_8 = _10;
_8 = _10;
RET = _22 as isize;
_27 = 39_i8 as f32;
_26.fld2.2 = !_13.fld1;
_24 = _21;
_38.fld0 = _24;
_37.0 = _16.0;
_13.fld1 = _26.fld3 as u64;
_13.fld2.2 = _9.fld2.0;
_26.fld5 = Field::<i32>(Variant(_23, 1), 0);
Call(_26.fld2.0 = fn13(_38.fld0.0, _24.0, _37.1, _38.fld0, _16.1, _24, _16.1.0, _24.0, _24, _30, _21.0, _38.fld0.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_25 = (_37.1.0,);
_13.fld2.0 = _13.fld2.2;
_38.fld1 = _8;
_26.fld2 = (_31.2.0, _31.2.1, _31.2.2);
RET = _3;
_16.2 = !RET;
_26.fld1 = _30;
_38.fld2 = _31.2.1 % _26.fld2.1;
match _31.2.1 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb13,
6 => bb14,
17628 => bb16,
_ => bb15
}
}
bb13 = {
_14 = [23528_i16,(-22499_i16),(-4055_i16),(-17577_i16),(-23265_i16),29630_i16,(-27804_i16),4492_i16];
_9.fld2.2 = core::ptr::addr_of_mut!(_16.0);
_8 = _10;
_19 = _16.2 as f32;
_3 = !RET;
_13.fld0 = _16.1.0;
_11 = _19 as isize;
_13.fld2 = _9.fld2;
_24.0 = [_9.fld2.1,_13.fld2.1,_9.fld2.1,_9.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1];
_21.0 = _5;
_23 = Adt42::Variant1 { fld0: (-1424151585_i32) };
place!(Field::<i32>(Variant(_23, 1), 0)) = -240111483_i32;
Goto(bb8)
}
bb14 = {
_30 = (_16.2,);
_26.fld4 = [54_i8];
place!(Field::<[i128; 7]>(Variant(_23, 0), 4)) = _21.0;
Goto(bb11)
}
bb15 = {
SetDiscriminant(_23, 0);
_25.0 = _9.fld0;
_16.1 = (_13.fld0,);
_3 = (-118_i8) as isize;
_27 = 11922049029603975428_usize as f32;
place!(Field::<i64>(Variant(_23, 0), 6)) = 3112520035006287573_i64 | 5936675908560469677_i64;
_28 = 12381_u16 as isize;
_21 = (_5,);
_6 = RET;
_16.0 = 1675631785_u32;
_16.1 = (_9.fld0,);
place!(Field::<(u32, ([i64; 3],), isize)>(Variant(_23, 0), 3)) = (_16.0, _16.1, _28);
_16.1 = (_13.fld0,);
_26.fld0 = _16.0 * _16.0;
_5 = [_9.fld2.1,_9.fld2.1,_9.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_9.fld2.1];
_31.2.0 = _16.0 + _26.fld0;
Goto(bb9)
}
bb16 = {
SetDiscriminant(_23, 2);
_26.fld2.2 = !_31.2.2;
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_23, 2), 2)).2 = _26.fld2;
place!(Field::<*mut char>(Variant(_23, 2), 0)) = core::ptr::addr_of_mut!(_10);
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_23, 2), 2)).0 = (-3428332987129185869_i64) - (-805558823091774732_i64);
_40.1 = _38.fld2 ^ _31.2.1;
_13.fld2 = (_9.fld2.0, _22, _9.fld2.0, _26.fld4);
_31.0 = Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_23, 2), 2).0;
_40.0 = _26.fld5 as u32;
place!(Field::<i32>(Variant(_23, 2), 5)) = _40.1 as i32;
_31.2.1 = !_40.1;
_41.3 = _31.2.2;
_21 = (_24.0,);
RET = -_16.2;
_44 = _26.fld2.2 > _41.3;
_29 = _19 + _27;
place!(Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_23, 2), 2)).1 = core::ptr::addr_of_mut!(_29);
_3 = _10 as isize;
_33 = Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_23, 2), 2).2.0 as i8;
place!(Field::<*mut f32>(Variant(_23, 2), 4)) = Field::<(i64, *mut f32, (u32, u16, u64))>(Variant(_23, 2), 2).1;
Goto(bb17)
}
bb17 = {
Call(_48 = dump_var(8_usize, 14_usize, Move(_14), 21_usize, Move(_21), 11_usize, Move(_11), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(8_usize, 5_usize, Move(_5), 10_usize, Move(_10), 15_usize, Move(_15), 28_usize, Move(_28)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_48 = dump_var(8_usize, 2_usize, Move(_2), 8_usize, Move(_8), 17_usize, Move(_17), 49_usize, _49), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: isize,mut _2: i128,mut _3: isize,mut _4: [i128; 7],mut _5: [i16; 8]) -> (*mut u32, i128, *mut u32, [i8; 1]) {
mir! {
type RET = (*mut u32, i128, *mut u32, [i8; 1]);
let _6: Adt41;
let _7: (*mut u32, i128, *mut u32, [i8; 1]);
let _8: f64;
let _9: usize;
let _10: u8;
let _11: Adt51;
let _12: u64;
let _13: Adt43;
let _14: *const f32;
let _15: f64;
let _16: (u32, ([i64; 3],), isize);
let _17: [char; 4];
let _18: Adt48;
let _19: i32;
let _20: u64;
let _21: f32;
let _22: ();
let _23: ();
{
_5 = [23263_i16,(-30498_i16),(-20355_i16),17791_i16,12014_i16,(-4499_i16),25751_i16,16592_i16];
_4 = [_2,_2,_2,_2,_2,_2,_2];
_2 = (-75352472615384899448464207806417862363_i128);
_3 = -_1;
_5 = [6104_i16,(-18368_i16),(-7958_i16),9581_i16,(-3183_i16),(-10283_i16),(-16141_i16),27859_i16];
RET.1 = 253242862103009440_i64 as i128;
_5 = [22113_i16,(-5252_i16),5189_i16,16315_i16,12966_i16,129_i16,(-13708_i16),1416_i16];
_2 = RET.1;
RET.1 = _2;
_1 = _3;
_3 = !_1;
RET.3 = [(-37_i8)];
_8 = _3 as f64;
RET.1 = !_2;
_7.1 = _2 + RET.1;
RET.1 = !_7.1;
RET.3 = [103_i8];
_1 = -_3;
_1 = _3 * _3;
_7.3 = [(-83_i8)];
_8 = 115_u8 as f64;
RET.3 = [(-25_i8)];
_3 = -_1;
_4 = [_7.1,RET.1,_7.1,RET.1,_7.1,_2,RET.1];
RET.3 = [93_i8];
RET.1 = (-12007_i16) as i128;
RET.1 = _7.1 & _7.1;
Call(_7.3 = fn10(_7.1, _1, _8, _5, _3, _5, _3, RET.1, _4, _5, _3, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = [RET.1,RET.1,RET.1,RET.1,RET.1,RET.1,RET.1];
RET.3 = _7.3;
RET.3 = _7.3;
RET.1 = _2;
_10 = 12720_i16 as u8;
RET.1 = _10 as i128;
RET.1 = -_7.1;
_5 = [(-28348_i16),24695_i16,18326_i16,(-19402_i16),27369_i16,(-11080_i16),(-10842_i16),24313_i16];
_1 = _3;
_3 = _1;
_5 = [(-13972_i16),31598_i16,(-15091_i16),(-5127_i16),(-30124_i16),(-4257_i16),32414_i16,(-10515_i16)];
_2 = _7.1 - _7.1;
_10 = 54_u8 * 167_u8;
RET.3 = [92_i8];
_5 = [8390_i16,18292_i16,12140_i16,20943_i16,30266_i16,(-19147_i16),16998_i16,26125_i16];
_7.1 = _2 + _2;
RET.1 = 7565215142301451191_u64 as i128;
_8 = (-13979_i16) as f64;
RET.1 = _7.1 << _7.1;
Goto(bb2)
}
bb2 = {
_2 = RET.1 & RET.1;
_5 = [(-4587_i16),(-19396_i16),(-20881_i16),(-131_i16),(-6377_i16),31562_i16,(-25315_i16),(-20803_i16)];
_4 = [RET.1,RET.1,_2,_2,RET.1,_7.1,RET.1];
_3 = -_1;
Call(_7.0 = fn12(RET.1, _7.1, RET.1, _4, _1, _5, _2, _2, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET.2 = _7.0;
_4 = [_2,RET.1,_2,_2,_2,_2,_7.1];
RET.3 = _7.3;
_3 = _1 ^ _1;
RET = (_7.0, _2, _7.0, _7.3);
_16.0 = 11286141974202026925_usize as u32;
_12 = 17341054693085878789_u64;
_13 = Adt43::Variant0 { fld0: _5,fld1: RET,fld2: _3,fld3: 57800_u16,fld4: 12008_i16,fld5: _7.0,fld6: _12 };
place!(Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_13, 0), 1)).0 = RET.0;
Goto(bb4)
}
bb4 = {
Call(_22 = dump_var(9_usize, 10_usize, Move(_10), 12_usize, Move(_12), 5_usize, Move(_5), 23_usize, _23), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: i128,mut _2: isize,mut _3: f64,mut _4: [i16; 8],mut _5: isize,mut _6: [i16; 8],mut _7: isize,mut _8: i128,mut _9: [i128; 7],mut _10: [i16; 8],mut _11: isize,mut _12: isize) -> [i8; 1] {
mir! {
type RET = [i8; 1];
let _13: *mut *mut u32;
let _14: Adt50;
let _15: [char; 4];
let _16: Adt56;
let _17: [char; 4];
let _18: Adt54;
let _19: [u16; 3];
let _20: u128;
let _21: [i8; 1];
let _22: i8;
let _23: char;
let _24: f32;
let _25: i64;
let _26: ([i64; 3],);
let _27: [i16; 8];
let _28: f64;
let _29: isize;
let _30: [i128; 1];
let _31: Adt46;
let _32: &'static u64;
let _33: *const f32;
let _34: Adt48;
let _35: i8;
let _36: Adt50;
let _37: ();
let _38: ();
{
_10 = _4;
_5 = 63016993581062374290991181474092425258_u128 as isize;
_4 = _10;
_10 = [(-29275_i16),10859_i16,(-31156_i16),(-14811_i16),23243_i16,(-11149_i16),(-27879_i16),1504_i16];
Goto(bb1)
}
bb1 = {
_3 = (-84_i8) as f64;
_1 = -_8;
_7 = _2 + _2;
_1 = _8 | _8;
RET = [118_i8];
_12 = _7;
_1 = !_8;
_3 = 60_u8 as f64;
_15 = ['\u{2ff20}','\u{8c9eb}','\u{eef2e}','\u{7aebf}'];
_10 = [(-24408_i16),9540_i16,3507_i16,31278_i16,(-12820_i16),25061_i16,(-20543_i16),(-580_i16)];
_5 = _7 * _12;
_12 = _7 * _7;
_12 = 11140679408213258621_u64 as isize;
_11 = _12 & _2;
_7 = _5 * _2;
RET = [71_i8];
_9 = [_8,_8,_8,_8,_8,_8,_1];
_4 = [(-9658_i16),30012_i16,(-20430_i16),(-20426_i16),25465_i16,19467_i16,(-8644_i16),7227_i16];
_8 = _1 & _1;
_8 = -_1;
Goto(bb2)
}
bb2 = {
_10 = _6;
Goto(bb3)
}
bb3 = {
_3 = 28046_u16 as f64;
_15 = ['\u{bb69c}','\u{8157c}','\u{ec70d}','\u{d2397}'];
_6 = _10;
_17 = ['\u{d78ae}','\u{b5cca}','\u{5fdc4}','\u{b72fe}'];
_1 = _8 + _8;
_15 = ['\u{a02d6}','\u{31e11}','\u{d696}','\u{b2ef6}'];
_5 = -_7;
RET = [107_i8];
_15 = _17;
_1 = _8;
_19 = [31420_u16,13606_u16,20250_u16];
RET = [58_i8];
_17 = _15;
Call(_12 = fn11(_5, _9, _1, _7, _15, _4, _7, _5, _17), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_19 = [11272_u16,40043_u16,36821_u16];
_2 = _12 | _7;
_14 = Adt50::Variant2 { fld0: _19 };
_5 = _7 >> _8;
RET = [(-83_i8)];
_10 = [(-22905_i16),27727_i16,(-3060_i16),6475_i16,29122_i16,(-20098_i16),25113_i16,(-12576_i16)];
_22 = 725412356_i32 as i8;
RET = [_22];
_6 = _4;
_12 = _2;
_5 = !_2;
_4 = [1981_i16,(-10886_i16),16510_i16,(-1061_i16),3126_i16,13507_i16,11765_i16,(-3862_i16)];
_9 = [_8,_8,_1,_1,_8,_8,_1];
_24 = 6_u8 as f32;
RET = [_22];
_2 = _11 * _5;
_3 = 3842749057_u32 as f64;
place!(Field::<[u16; 3]>(Variant(_14, 2), 0)) = [54511_u16,4754_u16,33955_u16];
_17 = ['\u{1f118}','\u{ad656}','\u{b72c1}','\u{efa0f}'];
Goto(bb5)
}
bb5 = {
_23 = '\u{90671}';
_5 = _2;
_20 = 176029500333120013686699936682595366598_u128 | 29501844758855592169180353351038357305_u128;
_1 = -_8;
_6 = [(-10945_i16),23596_i16,9302_i16,(-26898_i16),(-23222_i16),(-8260_i16),(-18814_i16),31387_i16];
_9 = [_8,_8,_1,_1,_8,_8,_8];
_11 = _5;
_19 = [36742_u16,22045_u16,25037_u16];
_5 = _20 as isize;
SetDiscriminant(_14, 0);
place!(Field::<isize>(Variant(_14, 0), 2)) = -_2;
_7 = 12397690981343798338_usize as isize;
_6 = [(-26932_i16),28286_i16,(-1356_i16),18383_i16,(-17064_i16),(-26394_i16),(-22678_i16),(-4391_i16)];
_14 = Adt50::Variant2 { fld0: _19 };
_6 = [(-27351_i16),(-23316_i16),(-2199_i16),(-15736_i16),30175_i16,15952_i16,22046_i16,22709_i16];
_2 = _11 & _12;
_17 = [_23,_23,_23,_23];
_5 = 12318650329546703207_u64 as isize;
RET = [_22];
_11 = _12;
_21 = [_22];
SetDiscriminant(_14, 1);
_20 = 258979552299438246123316655379460906110_u128;
match _20 {
0 => bb2,
1 => bb6,
2 => bb7,
258979552299438246123316655379460906110 => bb9,
_ => bb8
}
}
bb6 = {
_3 = (-84_i8) as f64;
_1 = -_8;
_7 = _2 + _2;
_1 = _8 | _8;
RET = [118_i8];
_12 = _7;
_1 = !_8;
_3 = 60_u8 as f64;
_15 = ['\u{2ff20}','\u{8c9eb}','\u{eef2e}','\u{7aebf}'];
_10 = [(-24408_i16),9540_i16,3507_i16,31278_i16,(-12820_i16),25061_i16,(-20543_i16),(-580_i16)];
_5 = _7 * _12;
_12 = _7 * _7;
_12 = 11140679408213258621_u64 as isize;
_11 = _12 & _2;
_7 = _5 * _2;
RET = [71_i8];
_9 = [_8,_8,_8,_8,_8,_8,_1];
_4 = [(-9658_i16),30012_i16,(-20430_i16),(-20426_i16),25465_i16,19467_i16,(-8644_i16),7227_i16];
_8 = _1 & _1;
_8 = -_1;
Goto(bb2)
}
bb7 = {
_3 = 28046_u16 as f64;
_15 = ['\u{bb69c}','\u{8157c}','\u{ec70d}','\u{d2397}'];
_6 = _10;
_17 = ['\u{d78ae}','\u{b5cca}','\u{5fdc4}','\u{b72fe}'];
_1 = _8 + _8;
_15 = ['\u{a02d6}','\u{31e11}','\u{d696}','\u{b2ef6}'];
_5 = -_7;
RET = [107_i8];
_15 = _17;
_1 = _8;
_19 = [31420_u16,13606_u16,20250_u16];
RET = [58_i8];
_17 = _15;
Call(_12 = fn11(_5, _9, _1, _7, _15, _4, _7, _5, _17), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_10 = _6;
Goto(bb3)
}
bb9 = {
place!(Field::<([i32; 7], [i64; 3], u64, u64)>(Variant(_14, 1), 2)).2 = 1051732727_u32 as u64;
place!(Field::<([i32; 7], [i64; 3], u64, u64)>(Variant(_14, 1), 2)).1 = [6529399034388769200_i64,(-566951448199572123_i64),8669285471821156815_i64];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld2.1 = 20411_u16 & 22196_u16;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld2.1 = !3573_u16;
_28 = _3 * _3;
_26.0 = Field::<([i32; 7], [i64; 3], u64, u64)>(Variant(_14, 1), 2).1;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld1 = (_11,);
_27 = [(-24535_i16),(-13377_i16),(-7234_i16),26851_i16,(-17848_i16),(-28997_i16),4619_i16,7022_i16];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld5 = !881753179_i32;
_10 = _27;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld1 = (_2,);
_25 = _12 as i64;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld2.0 = 2177884667_u32 - 1655358899_u32;
_15 = _17;
_29 = _1 as isize;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld1 = (_2,);
place!(Field::<([i32; 7], [i64; 3], u64, u64)>(Variant(_14, 1), 2)).1 = [_25,_25,_25];
_9 = [_8,_1,_8,_1,_1,_1,_1];
_2 = _20 as isize;
_6 = [(-8632_i16),(-26614_i16),8886_i16,(-19676_i16),(-17802_i16),(-548_i16),12001_i16,(-19158_i16)];
_11 = Field::<Adt48>(Variant(_14, 1), 0).fld1.0;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld3 = true as u128;
_9 = [_1,_8,_8,_1,_1,_8,_1];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld3 = !_20;
RET = [_22];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld1.0 = _29 + _11;
_29 = Field::<Adt48>(Variant(_14, 1), 0).fld1.0;
Goto(bb10)
}
bb10 = {
_4 = _27;
_20 = Field::<Adt48>(Variant(_14, 1), 0).fld3;
_15 = _17;
place!(Field::<([i32; 7], [i64; 3], u64, u64)>(Variant(_14, 1), 2)).0 = [Field::<Adt48>(Variant(_14, 1), 0).fld5,Field::<Adt48>(Variant(_14, 1), 0).fld5,Field::<Adt48>(Variant(_14, 1), 0).fld5,Field::<Adt48>(Variant(_14, 1), 0).fld5,Field::<Adt48>(Variant(_14, 1), 0).fld5,Field::<Adt48>(Variant(_14, 1), 0).fld5,Field::<Adt48>(Variant(_14, 1), 0).fld5];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld4 = [_22];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld2.2 = Field::<Adt48>(Variant(_14, 1), 0).fld2.1 as u64;
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld2.0 = 843051683_u32 - 216436242_u32;
_19 = [Field::<Adt48>(Variant(_14, 1), 0).fld2.1,Field::<Adt48>(Variant(_14, 1), 0).fld2.1,Field::<Adt48>(Variant(_14, 1), 0).fld2.1];
_8 = -_1;
Goto(bb11)
}
bb11 = {
_25 = !7428160067403034007_i64;
_19 = [Field::<Adt48>(Variant(_14, 1), 0).fld2.1,Field::<Adt48>(Variant(_14, 1), 0).fld2.1,Field::<Adt48>(Variant(_14, 1), 0).fld2.1];
_30 = [_8];
place!(Field::<Adt48>(Variant(_14, 1), 0)).fld0 = Field::<Adt48>(Variant(_14, 1), 0).fld2.0 * Field::<Adt48>(Variant(_14, 1), 0).fld2.0;
_14 = Adt50::Variant2 { fld0: _19 };
_2 = _20 as isize;
_1 = _8;
_8 = _1 & _1;
Goto(bb12)
}
bb12 = {
_23 = '\u{91532}';
_12 = _29;
_29 = -_11;
Goto(bb13)
}
bb13 = {
_34.fld2.1 = 30233_u16 >> _12;
_1 = !_8;
_11 = _29;
_34.fld0 = 7_usize as u32;
_21 = [_22];
_25 = (-1030521427292372705_i64);
match _25 {
340282366920938463462344086004475838751 => bb15,
_ => bb14
}
}
bb14 = {
_3 = 28046_u16 as f64;
_15 = ['\u{bb69c}','\u{8157c}','\u{ec70d}','\u{d2397}'];
_6 = _10;
_17 = ['\u{d78ae}','\u{b5cca}','\u{5fdc4}','\u{b72fe}'];
_1 = _8 + _8;
_15 = ['\u{a02d6}','\u{31e11}','\u{d696}','\u{b2ef6}'];
_5 = -_7;
RET = [107_i8];
_15 = _17;
_1 = _8;
_19 = [31420_u16,13606_u16,20250_u16];
RET = [58_i8];
_17 = _15;
Call(_12 = fn11(_5, _9, _1, _7, _15, _4, _7, _5, _17), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
SetDiscriminant(_14, 2);
_15 = _17;
place!(Field::<[u16; 3]>(Variant(_14, 2), 0)) = [_34.fld2.1,_34.fld2.1,_34.fld2.1];
SetDiscriminant(_14, 0);
_34.fld3 = _20;
_23 = '\u{40fd}';
Goto(bb16)
}
bb16 = {
Call(_37 = dump_var(10_usize, 20_usize, Move(_20), 30_usize, Move(_30), 17_usize, Move(_17), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(10_usize, 25_usize, Move(_25), 27_usize, Move(_27), 5_usize, Move(_5), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(10_usize, 29_usize, Move(_29), 9_usize, Move(_9), 12_usize, Move(_12), 38_usize, _38), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: [i128; 7],mut _3: i128,mut _4: isize,mut _5: [char; 4],mut _6: [i16; 8],mut _7: isize,mut _8: isize,mut _9: [char; 4]) -> isize {
mir! {
type RET = isize;
let _10: Adt57;
let _11: f32;
let _12: f64;
let _13: usize;
let _14: ([i64; 3],);
let _15: ();
let _16: ();
{
_8 = _1;
RET = _4;
_8 = RET ^ _7;
_4 = 1_usize as isize;
_3 = 133360250555250186879876507146269151836_i128 >> _1;
_11 = 4495886624260374372_u64 as f32;
_8 = RET & _7;
RET = _3 as isize;
_9 = ['\u{5f1f2}','\u{4055b}','\u{a015c}','\u{12442}'];
_3 = 112977424840989376263780362022584169440_i128 - (-82361475943614442593642920425471557640_i128);
_9 = ['\u{77039}','\u{7de26}','\u{98c33}','\u{c42f4}'];
_9 = _5;
_3 = (-84528816501079620510410374994905424577_i128);
_13 = _11 as usize;
_7 = -_8;
_2 = [_3,_3,_3,_3,_3,_3,_3];
_1 = _7;
_11 = _3 as f32;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(11_usize, 13_usize, Move(_13), 6_usize, Move(_6), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(11_usize, 1_usize, Move(_1), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: i128,mut _2: i128,mut _3: i128,mut _4: [i128; 7],mut _5: isize,mut _6: [i16; 8],mut _7: i128,mut _8: i128,mut _9: [i16; 8],mut _10: [i16; 8]) -> *mut u32 {
mir! {
type RET = *mut u32;
let _11: [i8; 1];
let _12: [i64; 3];
let _13: (u32, u16, u64);
let _14: Adt44;
let _15: Adt52;
let _16: f32;
let _17: [u16; 3];
let _18: bool;
let _19: (u32, ([i64; 3],), isize);
let _20: Adt47;
let _21: [char; 4];
let _22: f32;
let _23: Adt46;
let _24: *mut char;
let _25: Adt49;
let _26: u16;
let _27: ([i128; 7],);
let _28: *const *mut *mut u32;
let _29: Adt53;
let _30: i16;
let _31: isize;
let _32: isize;
let _33: i16;
let _34: [i128; 7];
let _35: isize;
let _36: bool;
let _37: ([i128; 7],);
let _38: f32;
let _39: Adt54;
let _40: Adt52;
let _41: f64;
let _42: isize;
let _43: bool;
let _44: Adt49;
let _45: ();
let _46: ();
{
_1 = -_3;
_2 = 34_i8 as i128;
_1 = _8;
_9 = [3199_i16,10919_i16,(-6330_i16),(-16027_i16),(-32593_i16),32063_i16,22177_i16,(-24258_i16)];
_9 = [18242_i16,(-21097_i16),(-27464_i16),9968_i16,(-2927_i16),22215_i16,16604_i16,(-18447_i16)];
_10 = [24535_i16,25521_i16,(-26288_i16),27328_i16,(-739_i16),(-26395_i16),(-8515_i16),(-21821_i16)];
_5 = 9223372036854775807_isize;
_5 = 0_usize as isize;
_11 = [6_i8];
_10 = _9;
_3 = _7;
Goto(bb1)
}
bb1 = {
_5 = 1708508439_u32 as isize;
_8 = _3 >> _3;
_6 = _9;
_4 = [_8,_8,_7,_1,_8,_7,_1];
_7 = '\u{10e561}' as i128;
_3 = _8 ^ _8;
_6 = [4866_i16,27168_i16,7045_i16,30231_i16,(-545_i16),(-25156_i16),10038_i16,(-17048_i16)];
Goto(bb2)
}
bb2 = {
RET = core::ptr::addr_of_mut!(_13.0);
_4 = [_3,_3,_8,_3,_3,_3,_3];
_4 = [_8,_3,_3,_3,_8,_3,_8];
_13.1 = _3 as u16;
_11 = [54_i8];
_9 = [540_i16,(-1653_i16),123_i16,(-3843_i16),22708_i16,4122_i16,22964_i16,30049_i16];
_13.1 = 10663_u16;
_14.fld3 = [_3,_3,_3,_3,_8,_3,_3];
_3 = _8 >> _8;
_13.0 = !3387643924_u32;
_14.fld1 = 7478799941565912869_u64 & 11514146874275733359_u64;
match _13.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
10663 => bb7,
_ => bb6
}
}
bb3 = {
_5 = 1708508439_u32 as isize;
_8 = _3 >> _3;
_6 = _9;
_4 = [_8,_8,_7,_1,_8,_7,_1];
_7 = '\u{10e561}' as i128;
_3 = _8 ^ _8;
_6 = [4866_i16,27168_i16,7045_i16,30231_i16,(-545_i16),(-25156_i16),10038_i16,(-17048_i16)];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_14.fld2 = false as i16;
_15.fld0 = true;
_6 = _10;
_3 = 1204291439914844421_usize as i128;
_15.fld2 = 100362125937760144989101896226651016060_u128 ^ 56331152777042023815685153564695404227_u128;
_14.fld2 = -(-24402_i16);
_14.fld0.0 = [(-5352618400194031365_i64),5483949902703884503_i64,6398294048586378203_i64];
_5 = 122_isize;
RET = core::ptr::addr_of_mut!((*RET));
_13 = (1660278473_u32, 54048_u16, _14.fld1);
_15.fld6 = core::ptr::addr_of_mut!((*RET));
_13.1 = !20590_u16;
_12 = [(-2315190747193194130_i64),6779203660112390461_i64,(-1307233778200334981_i64)];
_15.fld5.fld3 = [_8,_8,_1,_8,_8,_8,_8];
_6 = _9;
_8 = _1;
_13.1 = _5 as u16;
_11 = [(-25_i8)];
_15.fld3 = !26_i8;
_14.fld1 = !_13.2;
_15.fld5.fld3 = _14.fld3;
_5 = 5_usize as isize;
_4 = [_8,_1,_8,_1,_8,_1,_1];
_15.fld5.fld0.0 = _12;
_15.fld5.fld1 = _14.fld1;
_11 = [_15.fld3];
_15.fld0 = true;
_9 = [_14.fld2,_14.fld2,_14.fld2,_14.fld2,_14.fld2,_14.fld2,_14.fld2,_14.fld2];
RET = _15.fld6;
match _13.0 {
0 => bb1,
1660278473 => bb8,
_ => bb5
}
}
bb8 = {
_14.fld0 = _15.fld5.fld0;
_15.fld4 = _15.fld5.fld0.0;
_13.1 = _5 as u16;
_2 = _8;
_13.1 = 30986_u16 << _14.fld1;
_14 = Adt44 { fld0: _15.fld5.fld0,fld1: _15.fld5.fld1,fld2: 29900_i16,fld3: _4 };
_6 = _10;
_15.fld1 = Adt49::Variant0 { fld0: _13.0 };
_14 = Adt44 { fld0: _15.fld5.fld0,fld1: _15.fld5.fld1,fld2: 30882_i16,fld3: _15.fld5.fld3 };
_12 = [7461486948283458577_i64,6795558222137367940_i64,3394726015561937703_i64];
_16 = _15.fld3 as f32;
_8 = _16 as i128;
_15.fld4 = [(-4298756130585055250_i64),1073888973341893386_i64,(-8344017833075080888_i64)];
_15.fld2 = _2 as u128;
_15.fld5.fld2 = _15.fld2 as i16;
_13.0 = 248_u8 as u32;
_15.fld1 = Adt49::Variant0 { fld0: _13.0 };
place!(Field::<u32>(Variant(_15.fld1, 0), 0)) = !_13.0;
_19.1.0 = [4426134709386431906_i64,8724353386340965226_i64,(-6029850339874299193_i64)];
_15.fld5.fld1 = _13.2 | _14.fld1;
_14.fld1 = _13.2;
_9 = [_14.fld2,_14.fld2,_14.fld2,_14.fld2,_15.fld5.fld2,_14.fld2,_14.fld2,_14.fld2];
_14.fld3 = [_1,_1,_2,_2,_2,_2,_1];
_5 = -(-9223372036854775808_isize);
match _14.fld2 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
30882 => bb10,
_ => bb9
}
}
bb9 = {
RET = core::ptr::addr_of_mut!(_13.0);
_4 = [_3,_3,_8,_3,_3,_3,_3];
_4 = [_8,_3,_3,_3,_8,_3,_8];
_13.1 = _3 as u16;
_11 = [54_i8];
_9 = [540_i16,(-1653_i16),123_i16,(-3843_i16),22708_i16,4122_i16,22964_i16,30049_i16];
_13.1 = 10663_u16;
_14.fld3 = [_3,_3,_3,_3,_8,_3,_3];
_3 = _8 >> _8;
_13.0 = !3387643924_u32;
_14.fld1 = 7478799941565912869_u64 & 11514146874275733359_u64;
match _13.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
10663 => bb7,
_ => bb6
}
}
bb10 = {
_15.fld6 = core::ptr::addr_of_mut!(_13.0);
_14.fld0 = (_15.fld4,);
_20 = Adt47::Variant3 { fld0: _15.fld5.fld1,fld1: _14.fld0.0 };
_5 = -9223372036854775807_isize;
_4 = [_2,_2,_1,_1,_2,_1,_1];
RET = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_15.fld1, 0), 0)));
_3 = (-2002109824_i32) as i128;
_15.fld5 = Move(_14);
_19.1.0 = [3557996245693942592_i64,3385948233627316820_i64,(-771892149259571235_i64)];
_6 = [_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2];
_5 = (-115_isize) - (-87_isize);
_21 = ['\u{5b3aa}','\u{4be39}','\u{9d54a}','\u{58515}'];
Goto(bb11)
}
bb11 = {
_18 = _15.fld0;
RET = _15.fld6;
_15.fld5 = Adt44 { fld0: _19.1,fld1: Field::<u64>(Variant(_20, 3), 0),fld2: 18516_i16,fld3: _4 };
_15.fld5 = Adt44 { fld0: _19.1,fld1: Field::<u64>(Variant(_20, 3), 0),fld2: (-28849_i16),fld3: _4 };
_9 = [_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2];
_20 = Adt47::Variant1 { fld0: _21 };
_19 = (_13.0, _15.fld5.fld0, _5);
_14.fld0.0 = [(-6908853520850568576_i64),4272073284943780708_i64,(-1775028253035166735_i64)];
_6 = [_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2,_15.fld5.fld2];
match _15.fld5.fld2 {
0 => bb1,
1 => bb10,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431768182607 => bb12,
_ => bb7
}
}
bb12 = {
_15.fld6 = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_15.fld1, 0), 0)));
_19.1 = (_15.fld5.fld0.0,);
_27 = (_15.fld5.fld3,);
_27.0 = _4;
_5 = _19.2 << _2;
_15.fld1 = Adt49::Variant1 { fld0: _15.fld5.fld2 };
_14.fld2 = !_15.fld5.fld2;
_20 = Adt47::Variant3 { fld0: _15.fld5.fld1,fld1: _15.fld5.fld0.0 };
SetDiscriminant(_15.fld1, 0);
_19.2 = !_5;
_16 = 228_u8 as f32;
_15.fld5.fld0 = _19.1;
_19.2 = _5;
_15.fld4 = [2728680859535332356_i64,(-2239839938780359786_i64),6903994780070703438_i64];
_19.2 = _14.fld2 as isize;
_15.fld5.fld2 = _14.fld2;
Goto(bb13)
}
bb13 = {
_15.fld3 = _14.fld2 as i8;
_13.2 = _15.fld5.fld1 - _15.fld5.fld1;
_15.fld3 = !(-22_i8);
_15.fld2 = _7 as u128;
_14 = Adt44 { fld0: _15.fld5.fld0,fld1: _15.fld5.fld1,fld2: _15.fld5.fld2,fld3: _27.0 };
_32 = _19.2;
place!(Field::<u64>(Variant(_20, 3), 0)) = !_13.2;
_18 = _15.fld0;
_15.fld2 = !325029211646192066476883431188659053334_u128;
place!(Field::<u32>(Variant(_15.fld1, 0), 0)) = !_19.0;
_25 = _15.fld1;
place!(Field::<u32>(Variant(_25, 0), 0)) = _19.0;
_31 = !_32;
_13.2 = Field::<u64>(Variant(_20, 3), 0);
_15.fld5.fld2 = _14.fld2;
_14.fld0 = (_19.1.0,);
_7 = _1;
_35 = _19.2;
_19.1.0 = [(-5835652795005025501_i64),3502608210031499099_i64,(-8764728919591781774_i64)];
_36 = _5 > _5;
_14 = Move(_15.fld5);
Goto(bb14)
}
bb14 = {
_15.fld5.fld0.0 = _12;
_16 = (-988320071127403022_i64) as f32;
_11 = [_15.fld3];
_37 = (_27.0,);
SetDiscriminant(_25, 0);
_15.fld3 = -43_i8;
_40.fld1 = _15.fld1;
_37.0 = [_1,_7,_1,_1,_2,_2,_2];
_9 = _6;
place!(Field::<u32>(Variant(_40.fld1, 0), 0)) = _13.0 ^ _13.0;
_4 = [_7,_7,_7,_7,_2,_2,_2];
_15.fld5.fld2 = _14.fld2 + _14.fld2;
RET = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_25, 0), 0)));
_40.fld3 = _15.fld3 >> _19.2;
_25 = Adt49::Variant1 { fld0: _15.fld5.fld2 };
_40.fld5 = Move(_14);
_43 = !_36;
_19.0 = Field::<u32>(Variant(_15.fld1, 0), 0);
_18 = _36;
_27.0 = [_7,_7,_1,_1,_1,_1,_1];
_13.0 = Field::<u32>(Variant(_15.fld1, 0), 0) >> _40.fld5.fld2;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(12_usize, 6_usize, Move(_6), 4_usize, Move(_4), 2_usize, Move(_2), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(12_usize, 21_usize, Move(_21), 12_usize, Move(_12), 43_usize, Move(_43), 27_usize, Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(12_usize, 7_usize, Move(_7), 36_usize, Move(_36), 3_usize, Move(_3), 46_usize, _46), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [i128; 7],mut _2: [i128; 7],mut _3: ([i64; 3],),mut _4: ([i128; 7],),mut _5: ([i64; 3],),mut _6: ([i128; 7],),mut _7: [i64; 3],mut _8: [i128; 7],mut _9: ([i128; 7],),mut _10: (isize,),mut _11: [i128; 7],mut _12: [i128; 7]) -> u32 {
mir! {
type RET = u32;
let _13: (u32, ([i64; 3],), isize);
let _14: isize;
let _15: isize;
let _16: Adt47;
let _17: bool;
let _18: *mut u32;
let _19: (*mut u32, i128, *mut u32, [i8; 1]);
let _20: [i128; 7];
let _21: Adt55;
let _22: isize;
let _23: *const *mut *mut u32;
let _24: bool;
let _25: (*mut u32, i128, *mut u32, [i8; 1]);
let _26: u16;
let _27: bool;
let _28: [char; 4];
let _29: [u64; 1];
let _30: ([i64; 3],);
let _31: i128;
let _32: f32;
let _33: Adt42;
let _34: [i32; 7];
let _35: (i64, *mut f32, (u32, u16, u64));
let _36: Adt50;
let _37: u8;
let _38: Adt43;
let _39: (*mut u32, i128, *mut u32, [i8; 1]);
let _40: f32;
let _41: bool;
let _42: i32;
let _43: Adt42;
let _44: i64;
let _45: bool;
let _46: f64;
let _47: Adt45;
let _48: bool;
let _49: [i128; 1];
let _50: (*mut u32, i128, *mut u32, [i8; 1]);
let _51: isize;
let _52: u8;
let _53: bool;
let _54: *const f32;
let _55: bool;
let _56: f32;
let _57: [i128; 7];
let _58: ();
let _59: ();
{
_10.0 = (-9223372036854775808_isize) + (-9223372036854775808_isize);
_3.0 = [3708443283109807378_i64,(-1898687170149001085_i64),2190172667040772037_i64];
Goto(bb1)
}
bb1 = {
_12 = _8;
_12 = _1;
_13 = (333127453_u32, _3, _10.0);
_7 = [1227012129217010905_i64,(-3583539113543749110_i64),2602435181381354696_i64];
_13.0 = 1220886566_u32 * 3923801764_u32;
_4.0 = [(-85902356484200380041141079691990259655_i128),(-5285226473753309221765296435978827543_i128),(-100814011256817553884549415445254077422_i128),48485979813119292929469981234238692048_i128,109269841437287427366735877219457025491_i128,(-37898603233073102457947576946391824174_i128),(-79085422134262765283393002216351958974_i128)];
_13.1 = _5;
_10.0 = _13.2 - _13.2;
_4.0 = [(-46753022968358485686680212253234126687_i128),163969496665691433482417244238234600764_i128,(-162587333892373869835481550517061471342_i128),(-128759589259750325423720111827450475672_i128),(-65613594160980850924282460943015636757_i128),(-117274056734704723492175680775285460061_i128),(-15761539332163993135776695881306480344_i128)];
_10.0 = 14868_u16 as isize;
_12 = [(-106055742737737374582197035418752181723_i128),70600830828914420264964830049210930064_i128,(-112502372862535170174727699401752708046_i128),11830137062479242838031929314771872129_i128,80030242242152872979507577200225208002_i128,5307355508911240780812161970523787190_i128,69271701412949719679565817844888785690_i128];
_3.0 = _5.0;
RET = !_13.0;
Goto(bb2)
}
bb2 = {
_5 = _13.1;
_4.0 = [48191019072252056264988432959539849462_i128,(-100197116215438271432209763255934704177_i128),168874137648781628265312748507538446678_i128,(-158016719923428316181162168377946822250_i128),159991281926355636924786250682626444553_i128,44465478438604622749538043300346566087_i128,86912176015738376605301308195636039122_i128];
_10 = (_13.2,);
_13.1.0 = [(-7477548941468472722_i64),7248017452414381091_i64,4472991381661268150_i64];
_5 = (_7,);
_13.0 = !RET;
_5.0 = [6262816154457853255_i64,2406563279102671443_i64,(-2284084526675484564_i64)];
Goto(bb3)
}
bb3 = {
_7 = _3.0;
_4 = (_2,);
_5.0 = [6453237698977684287_i64,6761457502958222335_i64,8858592794621565386_i64];
_13 = (RET, _3, _10.0);
_9 = _6;
_6.0 = [36092011648996584451942163131878168996_i128,19167530975491075427450412492518600572_i128,40688996732136342200146491054580513495_i128,(-126243883516740507628098612063232578629_i128),46968516546759544349715431592818750901_i128,57036472317067407098778005190834022021_i128,(-90166582189559163866963180809505868219_i128)];
_13.0 = (-68_i8) as u32;
_19.3 = [(-9_i8)];
_18 = core::ptr::addr_of_mut!(RET);
_9 = (_11,);
_9.0 = [21602505051078486578437403205546152961_i128,108038824854109902129091590211746893577_i128,48011864182727151254979427929765426492_i128,71943810425892852216956058036596794892_i128,(-109188844025091364566247785879736596207_i128),136003403088008483320969508596462609394_i128,(-111250661157551779356918417487836633581_i128)];
_14 = true as isize;
_7 = [3817767614152113677_i64,(-4616903591813918385_i64),7928061081497310202_i64];
_12 = [145427204046558358302275769291131689132_i128,(-165245376627799998387533225747386982863_i128),8679614331344167470197362060296485127_i128,87022563355844958016979925878701916742_i128,165738372361330687769323745765026822978_i128,163550312332747067635330336980994725230_i128,137464409888439418877425675597518039930_i128];
_4 = _9;
_2 = [79180995645381245851100688441327892915_i128,133263003092686325787137247816307077046_i128,138163915024622461240215375335838334314_i128,99646413563661175818857869294444993774_i128,(-106668227627146652234126659015811247076_i128),(-50389154312060909589510191761460762803_i128),(-77869592125200887423378451484936651707_i128)];
RET = (-15357_i16) as u32;
_15 = _13.2;
_12 = [82477960462486330118862440839401394500_i128,(-154622083747110417293249083374463454272_i128),(-31696218563001160633690032251037089437_i128),157511224445147619380918506311356550657_i128,(-147091849906863327858698932109148354831_i128),(-163704286987638259773473073839775049783_i128),(-24586398974490147624048009743051722953_i128)];
_13.0 = (*_18) >> (*_18);
_13.1.0 = [95951423883554044_i64,8233236007503615444_i64,6097865058811514649_i64];
_19.2 = _18;
_6.0 = [122962383148075623145229346957803311951_i128,159330092113421052313024837048768867253_i128,158709406114187782294151972057265557916_i128,(-165797123494340381142092731516687883187_i128),(-43294255703030136054021433098327404572_i128),(-70572920417370276518110401657428360528_i128),(-36607020555767733142317459519675448646_i128)];
_5 = (_13.1.0,);
_4 = (_6.0,);
_17 = !true;
_19.0 = core::ptr::addr_of_mut!(_13.0);
Call(_13.2 = fn14(_18, _4, _8, _12), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_16 = Adt47::Variant3 { fld0: 4203083690628903680_u64,fld1: _7 };
_2 = [(-504400351152117379114338717570408517_i128),(-616431114103450834183767609009444821_i128),(-127634045114431763923854883480546907999_i128),152108266020193171128096783549621032802_i128,114422754823774207173889406521148424096_i128,(-34573577267639245954658042543273936926_i128),(-138701607930826761633734669527122705227_i128)];
_13.1.0 = _3.0;
RET = 41974_u16 as u32;
_20 = [83404357573632186829800225598040367871_i128,31134825813113736561926137375642723815_i128,17748064035126623737914323905724092721_i128,116947378317311893025055839014771679504_i128,(-68057796718656375607235103794161829168_i128),104255103834024980232288340681024825511_i128,(-69122329053195398930251008423742332658_i128)];
_3.0 = [(-9141651506457900854_i64),3741754036940179461_i64,2184961898177480665_i64];
_20 = [80341318283937290483751539873813924337_i128,97426162840384391524040659279296249171_i128,(-100434821762189508885969568666109376249_i128),113611913973483568369720779626610651178_i128,(-71535763289073911779197134060172123201_i128),(-87544458610660235904806704981057345050_i128),132364796522041360464466976251579325941_i128];
Goto(bb5)
}
bb5 = {
_6.0 = _8;
_13.0 = !(*_18);
_18 = _19.2;
_4.0 = [93047567747101808301302394570252939179_i128,(-27134736380628582086199259381551382488_i128),(-119350984164311155671646328718421261030_i128),(-144527464675414156071796719398033542559_i128),(-116830155351886134713695012617106707623_i128),(-14823689587399154662487259122297643419_i128),109876379728369663011980516984933582113_i128];
_5.0 = [(-5124712881739150890_i64),(-4696201520988653766_i64),(-4073647467074888421_i64)];
_12 = [8003647197905629541018645196961221428_i128,150936768617502854607180836445992234780_i128,34783068102288987499759137837277394801_i128,(-144087396914330417001182674363493996199_i128),18340475671155873617440580110647689489_i128,(-4000672995098295829221703786522889052_i128),154013965876415991784862586161861577023_i128];
_21.fld2.2 = core::ptr::addr_of_mut!(RET);
_19.2 = core::ptr::addr_of_mut!(_13.0);
Goto(bb6)
}
bb6 = {
_25.1 = (-49908050602266013107738242668644341547_i128);
_9.0 = [_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1];
RET = !_13.0;
_25 = (_18, (-25683893540785959022113985043099046363_i128), _19.2, _19.3);
_3.0 = [5492320048942423412_i64,(-5086855689605061442_i64),8842872474877174973_i64];
_25.3 = _19.3;
place!(Field::<u64>(Variant(_16, 3), 0)) = !9503189715255014554_u64;
_24 = _17 & _17;
_19.3 = [5_i8];
_19.0 = core::ptr::addr_of_mut!(_13.0);
place!(Field::<[i64; 3]>(Variant(_16, 3), 1)) = [(-1103397464081347623_i64),4132427156546969172_i64,(-1315146395655496952_i64)];
_11 = _20;
_25.2 = core::ptr::addr_of_mut!(RET);
Goto(bb7)
}
bb7 = {
SetDiscriminant(_16, 0);
_26 = !8073_u16;
_3 = (_13.1.0,);
_19 = _25;
_2 = [_19.1,_25.1,_25.1,_19.1,_25.1,_19.1,_25.1];
_27 = _17;
_9 = _6;
_13 = (RET, _5, _15);
_25.0 = _19.2;
_25.3 = [(-37_i8)];
_21 = Adt55 { fld0: _5.0,fld1: 240105203378654513_u64,fld2: _19 };
_21.fld2.1 = _19.1 - _25.1;
_6.0 = [_19.1,_25.1,_21.fld2.1,_21.fld2.1,_19.1,_21.fld2.1,_19.1];
Goto(bb8)
}
bb8 = {
_13 = (RET, _3, _14);
_11 = [_25.1,_21.fld2.1,_19.1,_25.1,_19.1,_19.1,_21.fld2.1];
_15 = -_13.2;
_13.1.0 = [(-907159196964779047_i64),(-959030229078287994_i64),(-961953036426658015_i64)];
_26 = 11517_u16 - 47829_u16;
_19.0 = _18;
_25 = (_21.fld2.0, _21.fld2.1, _19.0, _21.fld2.3);
_13 = (RET, _5, _14);
_7 = _3.0;
_21.fld2.1 = _19.1 * _25.1;
_21.fld2 = (_19.0, _25.1, _19.0, _25.3);
_3.0 = [8923844488860736863_i64,(-3342719157693000734_i64),1993115023231365985_i64];
_25.2 = core::ptr::addr_of_mut!(RET);
_29 = [_21.fld1];
_21.fld2 = (_25.0, _25.1, _19.0, _19.3);
_9.0 = [_21.fld2.1,_21.fld2.1,_21.fld2.1,_25.1,_19.1,_21.fld2.1,_19.1];
_28 = ['\u{860bd}','\u{4ffbd}','\u{827ab}','\u{e0987}'];
RET = _13.0 | _13.0;
_22 = !_15;
_12 = [_25.1,_21.fld2.1,_19.1,_21.fld2.1,_25.1,_25.1,_25.1];
_32 = 5435580009261793832_i64 as f32;
_21.fld2 = _19;
_22 = 115729385609772970105153457342268707147_u128 as isize;
_13.1.0 = [(-2131552999330276373_i64),5655867354678031674_i64,6330243918223775883_i64];
_12 = [_19.1,_21.fld2.1,_19.1,_19.1,_21.fld2.1,_25.1,_21.fld2.1];
Goto(bb9)
}
bb9 = {
_30 = (_7,);
place!(Field::<Adt42>(Variant(_16, 0), 1)) = Adt42::Variant1 { fld0: 391238386_i32 };
place!(Field::<f64>(Variant(_16, 0), 2)) = 254350711775265120829282237653060190851_u128 as f64;
_8 = _1;
place!(Field::<*const f32>(Variant(_16, 0), 3)) = core::ptr::addr_of!(_32);
place!(Field::<i32>(Variant(place!(Field::<Adt42>(Variant(_16, 0), 1)), 1), 0)) = 1489075117_i32;
SetDiscriminant(Field::<Adt42>(Variant(_16, 0), 1), 1);
place!(Field::<f64>(Variant(_16, 0), 2)) = RET as f64;
_5 = (_13.1.0,);
_25.0 = _18;
place!(Field::<u128>(Variant(_16, 0), 0)) = 284222309583072458059762390824510141217_u128 ^ 136379945344496122258936823587241199205_u128;
_30.0 = [6164050916938708877_i64,3465985385504840086_i64,4959638669566498032_i64];
_25.3 = _21.fld2.3;
_4 = (_1,);
_9.0 = _12;
_21.fld2.1 = _25.1 + _19.1;
_19.2 = core::ptr::addr_of_mut!(_35.2.0);
Goto(bb10)
}
bb10 = {
_25.2 = _21.fld2.2;
RET = _17 as u32;
_19.3 = [(-7_i8)];
place!(Field::<f64>(Variant(_16, 0), 2)) = 185_u8 as f64;
_25 = (_21.fld2.2, _21.fld2.1, _21.fld2.0, _19.3);
_6 = _4;
_35.2.1 = _26;
_19.0 = core::ptr::addr_of_mut!(_35.2.0);
_6 = _4;
_35.2.1 = !_26;
_39.1 = !_21.fld2.1;
_35.2.2 = _21.fld1 * _21.fld1;
Call(_35.2.0 = core::intrinsics::transmute(RET), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_4.0 = _6.0;
place!(Field::<i32>(Variant(place!(Field::<Adt42>(Variant(_16, 0), 1)), 1), 0)) = (-1009698047_i32) + (-767696722_i32);
_10 = (_15,);
_3 = (_13.1.0,);
_9.0 = [_25.1,_21.fld2.1,_21.fld2.1,_39.1,_19.1,_21.fld2.1,_25.1];
_39.3 = _21.fld2.3;
_21.fld1 = Field::<u128>(Variant(_16, 0), 0) as u64;
_35.2 = (RET, _26, _21.fld1);
_4 = _6;
_34 = [Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0),Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0),Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0),Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0),Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0),Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0),Field::<i32>(Variant(Field::<Adt42>(Variant(_16, 0), 1), 1), 0)];
_30 = _3;
_13.1.0 = _3.0;
_43 = Move(Field::<Adt42>(Variant(_16, 0), 1));
_5 = (_7,);
_21.fld2.2 = _18;
SetDiscriminant(_43, 1);
_25.1 = -_21.fld2.1;
_19.1 = _39.1 & _39.1;
_19.3 = [(-38_i8)];
_14 = _22;
_2 = [_19.1,_39.1,_39.1,_21.fld2.1,_19.1,_39.1,_19.1];
_25 = (_18, _39.1, _21.fld2.2, _19.3);
_41 = _27;
Goto(bb12)
}
bb12 = {
_17 = !_41;
Goto(bb13)
}
bb13 = {
_45 = _21.fld2.1 == _39.1;
_37 = 251_u8 ^ 203_u8;
place!(Field::<*const f32>(Variant(_16, 0), 3)) = core::ptr::addr_of!(_40);
_19.3 = [72_i8];
_35.2.1 = !_26;
_21.fld1 = 391198876_i32 as u64;
_13.1.0 = [5172305984933226675_i64,2627005497159320072_i64,(-4900249058256375434_i64)];
_24 = !_45;
_5 = (_7,);
_47.fld1 = '\u{8a86b}';
_34 = [(-669500596_i32),1231911414_i32,109665537_i32,(-1967335361_i32),160368924_i32,(-1224865022_i32),338393549_i32];
_39.2 = _19.0;
_47.fld0.0 = [_39.1,_21.fld2.1,_19.1,_19.1,_25.1,_21.fld2.1,_25.1];
_6.0 = _9.0;
_25.2 = _19.2;
_17 = _45;
_25 = _19;
_44 = (-4096965243809650366_i64) | 3406346320936580085_i64;
RET = _13.0;
_40 = _32 * _32;
_11 = [_25.1,_39.1,_21.fld2.1,_21.fld2.1,_39.1,_25.1,_39.1];
_3 = (_21.fld0,);
Goto(bb14)
}
bb14 = {
_7 = [_44,_44,_44];
_2 = [_39.1,_25.1,_19.1,_19.1,_19.1,_39.1,_25.1];
_13.1 = (_5.0,);
_19.3 = [27_i8];
_47.fld1 = '\u{10bc4a}';
_53 = !_45;
_47.fld0 = (_1,);
_35.0 = _44;
_50.0 = core::ptr::addr_of_mut!(_13.0);
_53 = !_17;
_53 = _17;
place!(Field::<u128>(Variant(_16, 0), 0)) = 306095629455036105531169308410917690373_u128 >> _19.1;
_39 = (_25.0, _19.1, _21.fld2.2, _25.3);
_35.1 = core::ptr::addr_of_mut!(_32);
place!(Field::<f64>(Variant(_16, 0), 2)) = 24_i8 as f64;
_47 = Adt45 { fld0: _4,fld1: '\u{6c305}',fld2: _26,fld3: _10 };
_49 = [_39.1];
_13.0 = RET;
_13.1 = (_30.0,);
_5 = (_3.0,);
_3.0 = _30.0;
place!(Field::<Adt46>(Variant(_16, 0), 4)) = Adt46::Variant0 { fld0: _25,fld1: _47.fld1,fld2: _39.3 };
_4 = _47.fld0;
_26 = !_47.fld2;
_3 = _13.1;
_14 = !_13.2;
Goto(bb15)
}
bb15 = {
Call(_58 = dump_var(13_usize, 9_usize, Move(_9), 15_usize, Move(_15), 30_usize, Move(_30), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_58 = dump_var(13_usize, 24_usize, Move(_24), 26_usize, Move(_26), 44_usize, Move(_44), 34_usize, Move(_34)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_58 = dump_var(13_usize, 13_usize, Move(_13), 37_usize, Move(_37), 41_usize, Move(_41), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_58 = dump_var(13_usize, 17_usize, Move(_17), 53_usize, Move(_53), 27_usize, Move(_27), 59_usize, _59), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: *mut u32,mut _2: ([i128; 7],),mut _3: [i128; 7],mut _4: [i128; 7]) -> isize {
mir! {
type RET = isize;
let _5: char;
let _6: char;
let _7: u16;
let _8: (isize,);
let _9: Adt44;
let _10: u32;
let _11: *mut char;
let _12: f32;
let _13: [char; 4];
let _14: bool;
let _15: isize;
let _16: u16;
let _17: f64;
let _18: Adt48;
let _19: i16;
let _20: [i128; 7];
let _21: u32;
let _22: Adt52;
let _23: [u64; 1];
let _24: u64;
let _25: char;
let _26: ([i128; 7],);
let _27: f64;
let _28: [i128; 7];
let _29: ([i64; 3],);
let _30: [i128; 1];
let _31: Adt45;
let _32: f32;
let _33: [u64; 1];
let _34: f32;
let _35: f32;
let _36: [u64; 1];
let _37: &'static u64;
let _38: *mut char;
let _39: bool;
let _40: Adt44;
let _41: u64;
let _42: bool;
let _43: i128;
let _44: isize;
let _45: ();
let _46: ();
{
_3 = [(-82842431903833675100488772158042078693_i128),78978589908154711004330225089367889476_i128,(-52888240907019158311787938174207530529_i128),159766332421634663634052525368452729679_i128,(-3163456896386438256252369443003503334_i128),(-29142623821013091286129774273367258439_i128),140461406488464511812240816522132228155_i128];
_2 = (_4,);
RET = (-61851542044065136504495104736481429299_i128) as isize;
_3 = [111039888601154028414436184279093029423_i128,(-44790639469964850446970988918939876451_i128),42220591773987156904749146425232729933_i128,33408998820097996778525220215999745704_i128,(-7296927735787661038376620638103952917_i128),153129385043884069277685775393892295164_i128,(-74783695618854705928626289245795469356_i128)];
_2.0 = [(-18177999163398603892010841257597435647_i128),140014005738865238307973231794299091607_i128,137199805426373424497974655447243207831_i128,133875115099139573028553477908527442379_i128,123770445509339657002578562544038294533_i128,(-77486953986642264374016784785845488381_i128),(-26659626640124209798122461283413762912_i128)];
_3 = [226239197902819243612176206261592028_i128,(-54716094169714319245375235078101720900_i128),117982193737489165624577451707207948529_i128,(-40480189829614519763030067699633086740_i128),32456361530618958556412907417773491666_i128,15889232841063038178856509056602548761_i128,(-19064462986082181459637283476068367638_i128)];
RET = !30_isize;
_2 = (_4,);
_3 = _2.0;
_4 = _2.0;
_3 = [(-54020756656329661896530782082058513943_i128),(-31896177899494169657783444919482528285_i128),84915604019374291395759901330089044870_i128,(-21074115998917085604121578178046699821_i128),153781427349984227412913946655660942014_i128,(-27219143213636656180967489273121947623_i128),92276082323762271739091573363172692671_i128];
_2.0 = [71237187956662357853584459940170586776_i128,78335100225638306275523064707608339245_i128,85065696456858893464458953028002648784_i128,84043164937717352265641794195223868122_i128,34808313517145204774294241753872940866_i128,(-9946248710795363256248065451591803043_i128),33985170119302389407480440810847301620_i128];
_4 = _2.0;
RET = (-9223372036854775808_isize);
RET = (-9223372036854775808_isize) & 9223372036854775807_isize;
_5 = '\u{6012b}';
RET = 9223372036854775807_isize;
RET = 96_isize << 954348104_u32;
Goto(bb1)
}
bb1 = {
_7 = !58370_u16;
RET = 9223372036854775807_isize & (-9223372036854775808_isize);
Goto(bb2)
}
bb2 = {
RET = 116_isize & (-90_isize);
_7 = !27945_u16;
RET = 9223372036854775807_isize - (-9223372036854775808_isize);
Goto(bb3)
}
bb3 = {
_11 = core::ptr::addr_of_mut!(_6);
_9.fld0.0 = [5408519732790635732_i64,525788476753737039_i64,1628230689933405615_i64];
_10 = RET as u32;
_9.fld1 = !1437208882817255446_u64;
RET = 9223372036854775807_isize << _10;
_7 = !50384_u16;
_5 = '\u{a69f0}';
_9.fld2 = -15074_i16;
_1 = core::ptr::addr_of_mut!(_10);
_1 = core::ptr::addr_of_mut!((*_1));
_4 = [111058670404821601599444776857353154615_i128,1691690525529013579092358271260067186_i128,28660056881044546050595167374099865082_i128,162119953812403399296883499639235878052_i128,79900942554472161554773195841669322922_i128,(-19743958235953169640680375403524362991_i128),158551350845075347288201564584014093341_i128];
_9.fld0.0 = [3947445248052231488_i64,6703074379553482964_i64,1079799461678116896_i64];
_13 = [_5,_5,_5,_5];
_8.0 = -RET;
_11 = core::ptr::addr_of_mut!(_5);
_9.fld1 = 4712367099969720855_u64;
_12 = _9.fld2 as f32;
_11 = core::ptr::addr_of_mut!(_5);
_8.0 = false as isize;
_1 = core::ptr::addr_of_mut!(_10);
_9.fld0.0 = [(-4771556528966390376_i64),1048076030176788932_i64,3567373884241497882_i64];
_16 = !_7;
match _9.fld1 {
4712367099969720855 => bb5,
_ => bb4
}
}
bb4 = {
_7 = !58370_u16;
RET = 9223372036854775807_isize & (-9223372036854775808_isize);
Goto(bb2)
}
bb5 = {
_6 = (*_11);
_15 = _16 as isize;
_18.fld2.0 = !_10;
_17 = 61_i8 as f64;
_18.fld2.0 = (*_1);
_18.fld1.0 = RET;
_18.fld4 = [(-123_i8)];
_18.fld2 = ((*_1), _16, _9.fld1);
_18.fld5 = 971110449_i32 + 1637395782_i32;
_15 = _8.0 << _18.fld2.0;
_16 = _18.fld2.1;
_21 = (*_1) - _18.fld2.0;
_20 = [49514525899220392638426640112922679280_i128,66345533799382396172049881824417646962_i128,(-27794384521205816285290075319529088189_i128),(-151215653631733791012015497213568430232_i128),27282493875566107350323128928332361650_i128,4617058500544680754096232441280618440_i128,152412690189005259172576746403580437974_i128];
Goto(bb6)
}
bb6 = {
_18.fld0 = _17 as u32;
_11 = core::ptr::addr_of_mut!((*_11));
_9.fld3 = [111492111075312224314091432900982945852_i128,19696340208236530105168387938681345359_i128,(-93840459351652646119053490028857727298_i128),(-65278813508835456126247594386465281390_i128),74502132019091472249018209658413319561_i128,83413866641806835823504319638831708145_i128,126537549953538273537251458842521825804_i128];
_18.fld1 = (_8.0,);
_14 = false;
RET = _12 as isize;
RET = (*_11) as isize;
_22.fld4 = _9.fld0.0;
_16 = !_7;
_22.fld3 = 121730902248201016218005749008749975988_u128 as i8;
_18.fld0 = (*_1);
_18.fld2.1 = _7;
_22.fld4 = [1878014322609952563_i64,(-1243372022461704789_i64),(-2487759200199675531_i64)];
_22.fld5.fld0.0 = _9.fld0.0;
_9.fld0 = _22.fld5.fld0;
_19 = _9.fld2;
_4 = _20;
_3 = [160835880204331785541616553195966060357_i128,(-55767715207243127344999535932537706863_i128),(-43912610931829147761019570159346991141_i128),60893682714001540302516216372645454493_i128,31938572707257222197268176658671327235_i128,54295996834585003870177466083983970475_i128,102700530563364930599356368123688410866_i128];
_23 = [_18.fld2.2];
_17 = _18.fld5 as f64;
_6 = (*_11);
_9.fld1 = _18.fld2.2;
_22.fld4 = [3746366616176157536_i64,(-6598092892990213267_i64),(-7539731769036960384_i64)];
_18.fld2.2 = _9.fld1;
_13 = [_5,(*_11),_5,(*_11)];
_18.fld2.2 = !_9.fld1;
_6 = _5;
Goto(bb7)
}
bb7 = {
_7 = 15629484586890718481_usize as u16;
_22.fld5 = Adt44 { fld0: _9.fld0,fld1: _18.fld2.2,fld2: _9.fld2,fld3: _2.0 };
_10 = _22.fld3 as u32;
_21 = _18.fld2.0 | _10;
_22.fld5 = Adt44 { fld0: _9.fld0,fld1: _18.fld2.2,fld2: _19,fld3: _2.0 };
_22.fld0 = _15 != _15;
_19 = 5075997077779583483_usize as i16;
_22.fld5 = Adt44 { fld0: _9.fld0,fld1: _18.fld2.2,fld2: _9.fld2,fld3: _4 };
_29.0 = [(-4307384528360778944_i64),(-5647573557557050122_i64),(-6587884479586363646_i64)];
match _9.fld1 {
4712367099969720855 => bb9,
_ => bb8
}
}
bb8 = {
_7 = !58370_u16;
RET = 9223372036854775807_isize & (-9223372036854775808_isize);
Goto(bb2)
}
bb9 = {
_26 = (_9.fld3,);
_30 = [(-88156058361727137613144742313391644402_i128)];
_22.fld5.fld0 = (_22.fld4,);
_14 = _22.fld0 | _22.fld0;
_8 = (RET,);
_22.fld4 = _22.fld5.fld0.0;
_27 = _17;
_9.fld2 = -_22.fld5.fld2;
Goto(bb10)
}
bb10 = {
_22.fld6 = _1;
_18.fld2.2 = _18.fld1.0 as u64;
_32 = _12;
_7 = _16 + _16;
Call(_9 = fn15(_15, _26, _21, _22.fld4, _29.0, _4, _22.fld0, _18.fld1.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_31.fld1 = (*_11);
_31 = Adt45 { fld0: _26,fld1: _6,fld2: _7,fld3: _8 };
_2 = (_20,);
Goto(bb12)
}
bb12 = {
_4 = [(-137060135644045816545518199079517863956_i128),66321686982679672537100617571133803815_i128,(-133621666974627944906810582287533738044_i128),83374053839998979689467205950758313906_i128,(-29160886695651700072930835892725582739_i128),(-68333169811420890566817184581036815374_i128),142548814871204873389431353433770860418_i128];
_32 = _12 * _12;
_18.fld2 = ((*_1), _16, _9.fld1);
_9.fld0 = (_22.fld4,);
_14 = _18.fld2.2 == _18.fld2.2;
_35 = 149800224884197222785576181748832659249_u128 as f32;
_9.fld2 = (-7515649041913372083_i64) as i16;
_26.0 = [45044322475988429273813155569759952276_i128,27028331903544386608539924069225498491_i128,(-136988417379708144456936237279773297424_i128),80266222761901574100412453868991992488_i128,14458709517694349705885223884617095672_i128,(-135455542875648239237299139168671901126_i128),43378777202531765096946323819042569023_i128];
_22.fld2 = 282711687134943510501198301147110903626_u128 | 190839358461027696660928252927965965192_u128;
Goto(bb13)
}
bb13 = {
_31.fld1 = _6;
_33 = [_9.fld1];
_31.fld3 = _18.fld1;
_38 = _11;
_28 = [(-5548489243414928470214426583449347308_i128),(-81722306826265917595074248274832519001_i128),163677829472913241948283489574353521118_i128,(-70685686606017959443368150542603789779_i128),112241938906761427099399153402128713142_i128,(-79728837964032948165874275792852299322_i128),96486841715023409093809674842099960867_i128];
_24 = _18.fld2.2;
Goto(bb14)
}
bb14 = {
_2.0 = [74758783086590316541600967550205261103_i128,(-81808425621326284873855007959934156986_i128),18908683866537130687760650687410912021_i128,(-63520056157302581692018686224602439869_i128),72812378441332928973740256341267839299_i128,47206033792493778207137087526122934205_i128,(-131121807195057411232405618798920268191_i128)];
_22.fld5.fld0 = (_22.fld4,);
_18.fld2.0 = !_21;
_18.fld3 = _9.fld1 as u128;
_20 = _4;
_13 = [(*_11),_6,(*_11),_6];
_18.fld2.2 = !_9.fld1;
_22.fld3 = 100_u8 as i8;
_4 = [169060765611525006325588931615406735160_i128,(-96049844273561131563223182348437859553_i128),6720990621049320053457900401550881664_i128,(-118276515818127326978151266845345207751_i128),(-64597777675553211201584504241765250996_i128),(-38491164581856890924912272886598709815_i128),76306371122514548673915421370827949744_i128];
_31.fld3.0 = !_8.0;
_18.fld2 = ((*_1), _7, _9.fld1);
_14 = _22.fld0 & _22.fld0;
_40.fld3 = [133112386616064679767709602119064991324_i128,40435803132905036505943428606408398704_i128,46932240050809971539788505996625536671_i128,(-74008228668619379619965135033148914645_i128),(-22285814678970157615303055101857234724_i128),168347618338602608311241012477120064556_i128,(-50069506552494817378375031721403121528_i128)];
_26.0 = _40.fld3;
_31 = Adt45 { fld0: _2,fld1: (*_11),fld2: _16,fld3: _8 };
_22.fld1 = Adt49::Variant1 { fld0: _9.fld2 };
_31.fld0.0 = _4;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(14_usize, 14_usize, Move(_14), 2_usize, Move(_2), 21_usize, Move(_21), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(14_usize, 16_usize, Move(_16), 15_usize, Move(_15), 33_usize, Move(_33), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(14_usize, 3_usize, Move(_3), 5_usize, Move(_5), 30_usize, Move(_30), 46_usize, _46), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: isize,mut _2: ([i128; 7],),mut _3: u32,mut _4: [i64; 3],mut _5: [i64; 3],mut _6: [i128; 7],mut _7: bool,mut _8: isize) -> Adt44 {
mir! {
type RET = Adt44;
let _9: [i64; 3];
let _10: [i128; 1];
let _11: char;
let _12: f64;
let _13: Adt55;
let _14: i16;
let _15: [i64; 3];
let _16: [i128; 1];
let _17: *mut *mut u32;
let _18: isize;
let _19: (*mut u32, i128, *mut u32, [i8; 1]);
let _20: i64;
let _21: isize;
let _22: *mut *mut u32;
let _23: Adt48;
let _24: isize;
let _25: Adt44;
let _26: f64;
let _27: ([i128; 7],);
let _28: Adt54;
let _29: *mut f32;
let _30: isize;
let _31: Adt50;
let _32: isize;
let _33: ();
let _34: ();
{
RET.fld0 = (_5,);
_9 = [(-863051067545604090_i64),(-932271213448168578_i64),(-8661781402684253307_i64)];
_2.0 = [70247524923742040457958294601770070639_i128,(-15803703241793577821709108805402969726_i128),68184531876635698110539863451808376574_i128,(-76834767625790717392204014165020684108_i128),49100485214538031642176452366261614498_i128,(-72786898102296038322381676138890533448_i128),(-55678563687420533954401269825694642144_i128)];
_7 = !false;
RET.fld2 = -(-11300_i16);
RET.fld3 = [(-7315658651575754437287721978131013697_i128),(-149132874524137258151763233977506590743_i128),73636757513286941696757480628892953365_i128,(-60901832045675390590492162510814963967_i128),(-131714724415125215562735414277582979707_i128),(-5615465663514247879015479752689173917_i128),149147286500225527269915124124687164017_i128];
Goto(bb1)
}
bb1 = {
RET.fld1 = 13001210110907192973_u64 - 14757018633786017453_u64;
_9 = [3256560286802513906_i64,487207634810738724_i64,(-1650112655337812580_i64)];
_10 = [113370954159787794705271534879285037388_i128];
_5 = [1497485854408782653_i64,(-4565629909761240716_i64),1989317182919086299_i64];
_10 = [88884349658214119696215813539717082275_i128];
RET.fld3 = [95787525837734017330280171948732230408_i128,(-102332825557489991530550908073600836931_i128),(-94026794442537936053569258810827422531_i128),(-1164396311112853351650608963564803792_i128),150563267957502619057470886767662798698_i128,(-59702114898696704807972676640131622989_i128),(-58365139880629761798421667287977986302_i128)];
_6 = [(-12014048329620543104097049543126036770_i128),(-27784910051346675121580738687756082993_i128),135868849117774133032223853902778373215_i128,80404925613822751631644599645326450587_i128,166244511817297276534026694384733586581_i128,(-26723678723300522629033078158913564101_i128),(-92555400733646018907988247554522045511_i128)];
RET.fld0 = (_9,);
_11 = '\u{d3e58}';
Goto(bb2)
}
bb2 = {
RET.fld3 = _6;
_1 = _8;
RET.fld0.0 = _9;
_9 = [8248401805198744452_i64,1679473686556614913_i64,(-1562143288534581328_i64)];
_12 = 18144213_i32 as f64;
Goto(bb3)
}
bb3 = {
_3 = _12 as u32;
Goto(bb4)
}
bb4 = {
_13.fld2.0 = core::ptr::addr_of_mut!(_3);
_13.fld2.0 = core::ptr::addr_of_mut!(_3);
_2.0 = [(-42887164183661459691939688189234009835_i128),(-137098613497644364953708324359643518291_i128),149331856862932018065771490453335141124_i128,116546848229021873852884504609232119406_i128,105885167748145268304046812085475328601_i128,(-71872953190532353364171131920357936998_i128),133995820002527638524391222616489216236_i128];
_13.fld2.2 = core::ptr::addr_of_mut!(_3);
_12 = (-8375551667815252917_i64) as f64;
_13.fld1 = RET.fld1;
_14 = !RET.fld2;
RET.fld0.0 = _5;
_13.fld2.1 = _14 as i128;
_11 = '\u{326d1}';
RET.fld0 = (_9,);
Goto(bb5)
}
bb5 = {
RET.fld1 = _13.fld1 << _13.fld2.1;
_13.fld2.2 = core::ptr::addr_of_mut!(_3);
_11 = '\u{bb55d}';
_10 = [_13.fld2.1];
_15 = [(-5424285723387830127_i64),5786404253650619234_i64,(-393133441915782495_i64)];
_7 = !true;
_13.fld0 = [3415325591808292612_i64,(-6486457212956126320_i64),6342962599408073884_i64];
_5 = _9;
_9 = [343822981498179468_i64,(-8635284408704782325_i64),(-3791608879185855023_i64)];
_19.3 = [72_i8];
_2.0 = [_13.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1];
_2 = (_6,);
_11 = '\u{b78a0}';
_13.fld2.2 = core::ptr::addr_of_mut!(_3);
_2 = (RET.fld3,);
_13.fld2.2 = core::ptr::addr_of_mut!(_3);
_2 = (RET.fld3,);
_19.1 = _13.fld2.1;
_14 = _3 as i16;
_4 = RET.fld0.0;
_13.fld2.3 = [74_i8];
_19.2 = _13.fld2.2;
RET.fld2 = !_14;
_19 = (_13.fld2.0, _13.fld2.1, _13.fld2.0, _13.fld2.3);
_18 = _1;
RET.fld3 = [_13.fld2.1,_13.fld2.1,_19.1,_13.fld2.1,_19.1,_13.fld2.1,_19.1];
RET.fld0 = (_9,);
Goto(bb6)
}
bb6 = {
_19.3 = [52_i8];
_13.fld2 = (_19.2, _19.1, _19.0, _19.3);
_13.fld2 = (_19.0, _19.1, _19.2, _19.3);
RET.fld3 = [_19.1,_19.1,_13.fld2.1,_19.1,_19.1,_19.1,_13.fld2.1];
_8 = -_1;
RET.fld2 = !_14;
RET.fld0 = (_15,);
_13.fld1 = RET.fld1;
_13.fld0 = _15;
_5 = _4;
_20 = (-2236514598682964911_i64) >> _8;
RET.fld0.0 = [_20,_20,_20];
_4 = _9;
RET.fld3 = [_19.1,_19.1,_19.1,_13.fld2.1,_19.1,_13.fld2.1,_13.fld2.1];
RET.fld1 = _13.fld2.1 as u64;
_20 = 1552501056040035341_i64;
RET.fld3 = _2.0;
_23.fld1.0 = _13.fld1 as isize;
match _20 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
1552501056040035341 => bb9,
_ => bb8
}
}
bb7 = {
_3 = _12 as u32;
Goto(bb4)
}
bb8 = {
_13.fld2.0 = core::ptr::addr_of_mut!(_3);
_13.fld2.0 = core::ptr::addr_of_mut!(_3);
_2.0 = [(-42887164183661459691939688189234009835_i128),(-137098613497644364953708324359643518291_i128),149331856862932018065771490453335141124_i128,116546848229021873852884504609232119406_i128,105885167748145268304046812085475328601_i128,(-71872953190532353364171131920357936998_i128),133995820002527638524391222616489216236_i128];
_13.fld2.2 = core::ptr::addr_of_mut!(_3);
_12 = (-8375551667815252917_i64) as f64;
_13.fld1 = RET.fld1;
_14 = !RET.fld2;
RET.fld0.0 = _5;
_13.fld2.1 = _14 as i128;
_11 = '\u{326d1}';
RET.fld0 = (_9,);
Goto(bb5)
}
bb9 = {
_19.3 = [(-103_i8)];
RET.fld0 = (_13.fld0,);
_20 = -5351026910294000365_i64;
_20 = 18359639284460987712_usize as i64;
_19.3 = [(-102_i8)];
_23.fld5 = _11 as i32;
RET.fld0.0 = _4;
_19.3 = _13.fld2.3;
_23.fld0 = !_3;
_23.fld1 = (_1,);
_15 = RET.fld0.0;
_17 = core::ptr::addr_of_mut!(_13.fld2.0);
_23.fld3 = !324069572633262557992942583374314030468_u128;
RET.fld3 = [_19.1,_19.1,_13.fld2.1,_19.1,_13.fld2.1,_13.fld2.1,_13.fld2.1];
Call(RET.fld0.0 = fn16(_2.0, RET.fld1, _8, _19.2, _4, _2, _13.fld2.3, _13, _19, _11, (*_17), _13.fld0, _8), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_23.fld4 = _19.3;
_23.fld1.0 = _1;
_19.2 = core::ptr::addr_of_mut!(_23.fld2.0);
_4 = [_20,_20,_20];
_23.fld2.1 = 54055_u16;
_19 = (_13.fld2.0, _13.fld2.1, (*_17), _13.fld2.3);
RET.fld1 = _13.fld1;
_13.fld2.0 = _13.fld2.2;
_21 = _18 >> _13.fld1;
_23.fld2.2 = !RET.fld1;
_23.fld2.0 = _23.fld0 + _3;
_19.2 = core::ptr::addr_of_mut!(_23.fld0);
_2.0 = RET.fld3;
_24 = _21;
_19 = ((*_17), _13.fld2.1, (*_17), _23.fld4);
RET.fld1 = !_13.fld1;
RET.fld3 = [_19.1,_19.1,_19.1,_13.fld2.1,_19.1,_13.fld2.1,_13.fld2.1];
_16 = [_13.fld2.1];
_25.fld0 = (_13.fld0,);
RET.fld0.0 = _25.fld0.0;
_23.fld0 = _23.fld2.0 - _23.fld2.0;
_9 = [_20,_20,_20];
_13.fld2.0 = _19.2;
_25.fld2 = -RET.fld2;
Goto(bb11)
}
bb11 = {
_27.0 = [_13.fld2.1,_13.fld2.1,_19.1,_19.1,_19.1,_13.fld2.1,_13.fld2.1];
_14 = 1874981979564209336_usize as i16;
_1 = _24 >> _21;
_23.fld2 = (_23.fld0, 32337_u16, _13.fld1);
_19.1 = _13.fld2.1;
_12 = 93_u8 as f64;
_13.fld2 = (_19.2, _19.1, _19.2, _19.3);
_23.fld2 = (_23.fld0, 13725_u16, _13.fld1);
_25 = Adt44 { fld0: RET.fld0,fld1: _13.fld1,fld2: _14,fld3: _6 };
_19.1 = -_13.fld2.1;
_10 = _16;
Goto(bb12)
}
bb12 = {
_26 = _12 + _12;
_12 = _26;
RET = Adt44 { fld0: _25.fld0,fld1: _25.fld1,fld2: _25.fld2,fld3: _2.0 };
RET.fld2 = _25.fld2;
RET.fld1 = _23.fld2.0 as u64;
_23.fld2.2 = RET.fld1;
_25.fld2 = RET.fld2;
_16 = [_19.1];
RET.fld2 = _25.fld2 * _14;
_13.fld2.0 = _13.fld2.2;
RET.fld0.0 = [_20,_20,_20];
_25.fld1 = RET.fld1 << RET.fld1;
_3 = _23.fld0;
RET.fld3 = [_19.1,_19.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_13.fld2.1,_19.1];
_25 = Move(RET);
RET.fld0 = (_13.fld0,);
RET.fld2 = _3 as i16;
_13 = Adt55 { fld0: RET.fld0.0,fld1: _25.fld1,fld2: _19 };
_26 = _13.fld2.1 as f64;
Call(RET.fld1 = fn19(_13.fld1, _19.0, _25.fld0.0, _23.fld0, RET.fld0.0, RET.fld2, Move(_25), _24, _23.fld2.1, _19.0, Move(_23), _24, _19.0, _18, _13.fld2.2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
RET.fld3 = [_13.fld2.1,_19.1,_19.1,_19.1,_19.1,_19.1,_13.fld2.1];
_23.fld5 = -1295102875_i32;
Goto(bb14)
}
bb14 = {
Call(_33 = dump_var(15_usize, 24_usize, Move(_24), 11_usize, Move(_11), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_33 = dump_var(15_usize, 3_usize, Move(_3), 6_usize, Move(_6), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(15_usize, 9_usize, Move(_9), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [i128; 7],mut _2: u64,mut _3: isize,mut _4: *mut u32,mut _5: [i64; 3],mut _6: ([i128; 7],),mut _7: [i8; 1],mut _8: Adt55,mut _9: (*mut u32, i128, *mut u32, [i8; 1]),mut _10: char,mut _11: *mut u32,mut _12: [i64; 3],mut _13: isize) -> [i64; 3] {
mir! {
type RET = [i64; 3];
let _14: [i128; 7];
let _15: isize;
let _16: (u32, ([i64; 3],), isize);
let _17: char;
let _18: isize;
let _19: Adt43;
let _20: [i128; 1];
let _21: (isize,);
let _22: i16;
let _23: i16;
let _24: Adt46;
let _25: *const f32;
let _26: ([i128; 7],);
let _27: u16;
let _28: ();
let _29: ();
{
_4 = _8.fld2.2;
_9.1 = !_8.fld2.1;
_9.1 = -_8.fld2.1;
_11 = _9.2;
_3 = _8.fld1 as isize;
_8.fld2.0 = _4;
_9 = (_4, _8.fld2.1, _11, _7);
_13 = _3;
_8.fld2.3 = [(-89_i8)];
Call(_9.1 = core::intrinsics::transmute(_8.fld2.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [(-1968319417915659090_i64),(-5702044974772642880_i64),7573995734274709215_i64];
_9.0 = _4;
_8.fld2.1 = 6_usize as i128;
_8.fld1 = _2 << _13;
_8.fld2 = (_9.0, _9.1, _9.0, _7);
_9.1 = _8.fld2.1 * _8.fld2.1;
_7 = [57_i8];
Call(_8.fld1 = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = Adt55 { fld0: RET,fld1: _2,fld2: _9 };
_7 = _9.3;
_3 = _13 << _8.fld2.1;
_8.fld2 = _9;
_9.0 = _8.fld2.2;
_9 = _8.fld2;
_8.fld0 = [403191521001911291_i64,2765868391850705451_i64,(-7068961210199118520_i64)];
_8 = Adt55 { fld0: RET,fld1: _2,fld2: _9 };
_5 = [8121916003142734660_i64,(-6163598603390186702_i64),2194913313165101310_i64];
_9.0 = core::ptr::addr_of_mut!(_16.0);
RET = _12;
_16.2 = 113_u8 as isize;
_8.fld1 = _2 | _2;
_12 = [(-2586300917150921641_i64),(-8821750368423260297_i64),2144750597099929217_i64];
RET = [(-3231322636840505343_i64),934251390221019282_i64,7926226445682037089_i64];
_8.fld1 = 2521713346_u32 as u64;
_8.fld0 = _5;
Call(_8.fld2.1 = fn17(_5, _13), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = 267696573474916118816603945212056499540_u128 as u64;
_6 = (_1,);
_9.2 = _8.fld2.2;
_9.3 = [(-14_i8)];
_16.1 = (_5,);
_9.1 = 113_u8 as i128;
_9.3 = _7;
_4 = _9.2;
_13 = _3;
_13 = _3 & _3;
_16.2 = _3;
_6 = (_1,);
_8.fld2.2 = _11;
_16.1.0 = [5962745846429475019_i64,(-1995215042089478355_i64),(-141335689906802924_i64)];
_9 = (_8.fld2.2, _8.fld2.1, _8.fld2.0, _7);
_9.0 = core::ptr::addr_of_mut!(_16.0);
_1 = [_9.1,_9.1,_9.1,_8.fld2.1,_9.1,_9.1,_8.fld2.1];
_9.0 = _9.2;
_8.fld2.0 = core::ptr::addr_of_mut!(_16.0);
_21 = (_16.2,);
_5 = [(-3307381710501567062_i64),7221128543733656155_i64,1176356363340323210_i64];
_14 = [_9.1,_9.1,_9.1,_9.1,_9.1,_9.1,_9.1];
_16.1.0 = _12;
_1 = [_8.fld2.1,_8.fld2.1,_8.fld2.1,_8.fld2.1,_8.fld2.1,_9.1,_9.1];
_14 = [_8.fld2.1,_8.fld2.1,_8.fld2.1,_9.1,_8.fld2.1,_8.fld2.1,_9.1];
_22 = (-27757_i16);
_9.2 = core::ptr::addr_of_mut!(_16.0);
match _22 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768183699 => bb5,
_ => bb4
}
}
bb4 = {
RET = [(-1968319417915659090_i64),(-5702044974772642880_i64),7573995734274709215_i64];
_9.0 = _4;
_8.fld2.1 = 6_usize as i128;
_8.fld1 = _2 << _13;
_8.fld2 = (_9.0, _9.1, _9.0, _7);
_9.1 = _8.fld2.1 * _8.fld2.1;
_7 = [57_i8];
Call(_8.fld1 = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
_20 = [_8.fld2.1];
_6 = (_14,);
_1 = [_8.fld2.1,_9.1,_9.1,_9.1,_8.fld2.1,_9.1,_9.1];
RET = [(-7292134153169230909_i64),(-633662827773861794_i64),2806875676090718236_i64];
_3 = -_13;
_8 = Adt55 { fld0: _5,fld1: _2,fld2: _9 };
_18 = 21427_u16 as isize;
_9.2 = _8.fld2.0;
_1 = [_8.fld2.1,_9.1,_8.fld2.1,_8.fld2.1,_8.fld2.1,_8.fld2.1,_8.fld2.1];
match _22 {
0 => bb3,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
340282366920938463463374607431768183699 => bb12,
_ => bb11
}
}
bb6 = {
RET = [(-1968319417915659090_i64),(-5702044974772642880_i64),7573995734274709215_i64];
_9.0 = _4;
_8.fld2.1 = 6_usize as i128;
_8.fld1 = _2 << _13;
_8.fld2 = (_9.0, _9.1, _9.0, _7);
_9.1 = _8.fld2.1 * _8.fld2.1;
_7 = [57_i8];
Call(_8.fld1 = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
_2 = 267696573474916118816603945212056499540_u128 as u64;
_6 = (_1,);
_9.2 = _8.fld2.2;
_9.3 = [(-14_i8)];
_16.1 = (_5,);
_9.1 = 113_u8 as i128;
_9.3 = _7;
_4 = _9.2;
_13 = _3;
_13 = _3 & _3;
_16.2 = _3;
_6 = (_1,);
_8.fld2.2 = _11;
_16.1.0 = [5962745846429475019_i64,(-1995215042089478355_i64),(-141335689906802924_i64)];
_9 = (_8.fld2.2, _8.fld2.1, _8.fld2.0, _7);
_9.0 = core::ptr::addr_of_mut!(_16.0);
_1 = [_9.1,_9.1,_9.1,_8.fld2.1,_9.1,_9.1,_8.fld2.1];
_9.0 = _9.2;
_8.fld2.0 = core::ptr::addr_of_mut!(_16.0);
_21 = (_16.2,);
_5 = [(-3307381710501567062_i64),7221128543733656155_i64,1176356363340323210_i64];
_14 = [_9.1,_9.1,_9.1,_9.1,_9.1,_9.1,_9.1];
_16.1.0 = _12;
_1 = [_8.fld2.1,_8.fld2.1,_8.fld2.1,_8.fld2.1,_8.fld2.1,_9.1,_9.1];
_14 = [_8.fld2.1,_8.fld2.1,_8.fld2.1,_9.1,_8.fld2.1,_8.fld2.1,_9.1];
_22 = (-27757_i16);
_9.2 = core::ptr::addr_of_mut!(_16.0);
match _22 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768183699 => bb5,
_ => bb4
}
}
bb8 = {
_8 = Adt55 { fld0: RET,fld1: _2,fld2: _9 };
_7 = _9.3;
_3 = _13 << _8.fld2.1;
_8.fld2 = _9;
_9.0 = _8.fld2.2;
_9 = _8.fld2;
_8.fld0 = [403191521001911291_i64,2765868391850705451_i64,(-7068961210199118520_i64)];
_8 = Adt55 { fld0: RET,fld1: _2,fld2: _9 };
_5 = [8121916003142734660_i64,(-6163598603390186702_i64),2194913313165101310_i64];
_9.0 = core::ptr::addr_of_mut!(_16.0);
RET = _12;
_16.2 = 113_u8 as isize;
_8.fld1 = _2 | _2;
_12 = [(-2586300917150921641_i64),(-8821750368423260297_i64),2144750597099929217_i64];
RET = [(-3231322636840505343_i64),934251390221019282_i64,7926226445682037089_i64];
_8.fld1 = 2521713346_u32 as u64;
_8.fld0 = _5;
Call(_8.fld2.1 = fn17(_5, _13), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
RET = [(-1968319417915659090_i64),(-5702044974772642880_i64),7573995734274709215_i64];
_9.0 = _4;
_8.fld2.1 = 6_usize as i128;
_8.fld1 = _2 << _13;
_8.fld2 = (_9.0, _9.1, _9.0, _7);
_9.1 = _8.fld2.1 * _8.fld2.1;
_7 = [57_i8];
Call(_8.fld1 = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_16.0 = 2790621308_u32 ^ 3707953110_u32;
_8.fld2.3 = [(-11_i8)];
_15 = _21.0;
_8.fld2.3 = [(-116_i8)];
_9.1 = -_8.fld2.1;
match _22 {
340282366920938463463374607431768183699 => bb14,
_ => bb13
}
}
bb13 = {
_8 = Adt55 { fld0: RET,fld1: _2,fld2: _9 };
_7 = _9.3;
_3 = _13 << _8.fld2.1;
_8.fld2 = _9;
_9.0 = _8.fld2.2;
_9 = _8.fld2;
_8.fld0 = [403191521001911291_i64,2765868391850705451_i64,(-7068961210199118520_i64)];
_8 = Adt55 { fld0: RET,fld1: _2,fld2: _9 };
_5 = [8121916003142734660_i64,(-6163598603390186702_i64),2194913313165101310_i64];
_9.0 = core::ptr::addr_of_mut!(_16.0);
RET = _12;
_16.2 = 113_u8 as isize;
_8.fld1 = _2 | _2;
_12 = [(-2586300917150921641_i64),(-8821750368423260297_i64),2144750597099929217_i64];
RET = [(-3231322636840505343_i64),934251390221019282_i64,7926226445682037089_i64];
_8.fld1 = 2521713346_u32 as u64;
_8.fld0 = _5;
Call(_8.fld2.1 = fn17(_5, _13), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
_6.0 = [_8.fld2.1,_9.1,_8.fld2.1,_9.1,_8.fld2.1,_8.fld2.1,_8.fld2.1];
_16.0 = 3929767217_u32;
_20 = [_8.fld2.1];
_9.1 = _22 as i128;
_4 = core::ptr::addr_of_mut!(_16.0);
_8.fld0 = [7155425647197521680_i64,935670715100098349_i64,(-9219774821139552848_i64)];
_22 = (-21794_i16);
_9.3 = [(-94_i8)];
_24 = Adt46::Variant0 { fld0: _9,fld1: _10,fld2: _7 };
place!(Field::<(*mut u32, i128, *mut u32, [i8; 1])>(Variant(_24, 0), 0)).3 = [57_i8];
_16.1 = (_8.fld0,);
_17 = Field::<char>(Variant(_24, 0), 1);
_4 = _9.2;
_10 = _17;
_9.0 = core::ptr::addr_of_mut!(_16.0);
_8.fld2.0 = _11;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(16_usize, 3_usize, Move(_3), 12_usize, Move(_12), 16_usize, Move(_16), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(16_usize, 2_usize, Move(_2), 7_usize, Move(_7), 17_usize, Move(_17), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [i64; 3],mut _2: isize) -> i128 {
mir! {
type RET = i128;
let _3: u8;
let _4: Adt49;
let _5: Adt49;
let _6: Adt52;
let _7: (isize,);
let _8: i16;
let _9: isize;
let _10: isize;
let _11: isize;
let _12: u128;
let _13: char;
let _14: (u32, u16, u64);
let _15: i128;
let _16: u128;
let _17: f32;
let _18: Adt42;
let _19: ([i64; 3],);
let _20: Adt50;
let _21: [u16; 3];
let _22: isize;
let _23: usize;
let _24: ();
let _25: ();
{
RET = 3255857671545845801_usize as i128;
_2 = 104_isize & (-106_isize);
_2 = !115_isize;
Call(_2 = fn18(_1, _1, RET, RET, RET, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = !(-9223372036854775808_isize);
_1 = [(-474478173923938356_i64),7256036407941872317_i64,3041840545998045953_i64];
_2 = 9223372036854775807_isize;
_3 = 86_u8;
RET = (-78930263318839111062077406117067781568_i128) + (-64997529019845537952194335430935299238_i128);
RET = (-110508347721978880193454600991293915754_i128) ^ 139462561173458814431070791976075546095_i128;
_3 = !105_u8;
RET = -(-145276383100631435678863111142473746302_i128);
RET = 93698533172209475923936459372356351923_i128;
RET = 72460923874434174781141062596224202441_i128 * (-696801228156084140806400853202123693_i128);
_4 = Adt49::Variant1 { fld0: (-27818_i16) };
_5 = Adt49::Variant0 { fld0: 3873649603_u32 };
Goto(bb2)
}
bb2 = {
place!(Field::<i16>(Variant(_4, 1), 0)) = 15193_i16;
_5 = Adt49::Variant1 { fld0: Field::<i16>(Variant(_4, 1), 0) };
place!(Field::<i16>(Variant(_5, 1), 0)) = Field::<i16>(Variant(_4, 1), 0) << RET;
match Field::<i16>(Variant(_4, 1), 0) {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
15193 => bb9,
_ => bb8
}
}
bb3 = {
_2 = !(-9223372036854775808_isize);
_1 = [(-474478173923938356_i64),7256036407941872317_i64,3041840545998045953_i64];
_2 = 9223372036854775807_isize;
_3 = 86_u8;
RET = (-78930263318839111062077406117067781568_i128) + (-64997529019845537952194335430935299238_i128);
RET = (-110508347721978880193454600991293915754_i128) ^ 139462561173458814431070791976075546095_i128;
_3 = !105_u8;
RET = -(-145276383100631435678863111142473746302_i128);
RET = 93698533172209475923936459372356351923_i128;
RET = 72460923874434174781141062596224202441_i128 * (-696801228156084140806400853202123693_i128);
_4 = Adt49::Variant1 { fld0: (-27818_i16) };
_5 = Adt49::Variant0 { fld0: 3873649603_u32 };
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6.fld3 = !98_i8;
_1 = [4645244187313276485_i64,962603355615090327_i64,(-7850764176374976801_i64)];
_6.fld5.fld0 = (_1,);
_7 = (_2,);
place!(Field::<i16>(Variant(_5, 1), 0)) = -Field::<i16>(Variant(_4, 1), 0);
_2 = !_7.0;
_6.fld2 = 279924748485921606206429706175293186735_u128 - 63054126147263336182022689816234943750_u128;
_5 = Adt49::Variant1 { fld0: Field::<i16>(Variant(_4, 1), 0) };
_6.fld5.fld2 = !Field::<i16>(Variant(_5, 1), 0);
_6.fld5.fld1 = 5400396379634566489_u64 | 14662745979253546500_u64;
_6.fld5.fld3 = [RET,RET,RET,RET,RET,RET,RET];
_7 = (_2,);
_6.fld5.fld1 = 14314215958331695006_u64;
_9 = !_7.0;
_6.fld5.fld0.0 = [(-7481664232980456683_i64),7390713274288489194_i64,(-2745750057145296342_i64)];
_8 = -Field::<i16>(Variant(_5, 1), 0);
_6.fld5.fld1 = _6.fld3 as u64;
Call(_8 = core::intrinsics::bswap(Field::<i16>(Variant(_4, 1), 0)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
place!(Field::<i16>(Variant(_4, 1), 0)) = -Field::<i16>(Variant(_5, 1), 0);
_7 = (_9,);
_6.fld3 = (-83_i8) >> _8;
_6.fld5.fld0 = (_1,);
_10 = Field::<i16>(Variant(_4, 1), 0) as isize;
place!(Field::<i16>(Variant(_5, 1), 0)) = _6.fld5.fld2;
_10 = -_2;
_3 = RET as u8;
_6.fld5.fld1 = _3 as u64;
SetDiscriminant(_4, 0);
RET = 48710355174598601651465831892377722478_i128 | 14624748975553036485232414902646658188_i128;
_6.fld5.fld2 = 4_usize as i16;
place!(Field::<i16>(Variant(_5, 1), 0)) = _8;
_7 = (_2,);
_2 = _10 - _7.0;
_7 = (_10,);
_6.fld1 = Adt49::Variant1 { fld0: _8 };
Goto(bb11)
}
bb11 = {
_6.fld3 = 82_i8;
_11 = true as isize;
_5 = Adt49::Variant1 { fld0: Field::<i16>(Variant(_6.fld1, 1), 0) };
_2 = _11;
_5 = Adt49::Variant1 { fld0: _6.fld5.fld2 };
_6.fld5.fld1 = !7568238760124471465_u64;
_1 = [3962151415062186828_i64,(-3697156739975998959_i64),(-8810976363803790748_i64)];
_7.0 = _3 as isize;
Goto(bb12)
}
bb12 = {
_6.fld1 = _5;
place!(Field::<i16>(Variant(_5, 1), 0)) = -Field::<i16>(Variant(_6.fld1, 1), 0);
_13 = '\u{7d7e0}';
_2 = _7.0;
SetDiscriminant(_6.fld1, 0);
_14.2 = _6.fld5.fld1;
RET = 165847980246064759180962761867650229348_i128;
_15 = RET;
_6.fld1 = Adt49::Variant1 { fld0: _6.fld5.fld2 };
_15 = RET - RET;
_7.0 = -_2;
_6.fld5.fld0.0 = [(-3796114516808522881_i64),7563032379085861150_i64,(-232509201416959395_i64)];
_14.0 = 49355_u16 as u32;
_3 = 22_u8;
_14.0 = 7678876312137560080_usize as u32;
_10 = _9 << _14.2;
_13 = '\u{ad563}';
RET = _15;
_6.fld4 = _1;
_14 = (4246147357_u32, 47986_u16, _6.fld5.fld1);
_16 = _6.fld2;
_6.fld5.fld0.0 = [5734625216261928847_i64,6274899423857600843_i64,(-4444655922578103061_i64)];
_18 = Adt42::Variant1 { fld0: (-619916937_i32) };
_7.0 = _2 << _2;
RET = _15;
Call(_15 = core::intrinsics::transmute(RET), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_17 = _15 as f32;
_12 = _16;
_6.fld5.fld0.0 = _1;
_6.fld4 = [5358854517091104663_i64,(-6428827419396444513_i64),5693889443634930166_i64];
_8 = _17 as i16;
place!(Field::<i16>(Variant(_6.fld1, 1), 0)) = Field::<i16>(Variant(_5, 1), 0) << _14.0;
_6.fld1 = _5;
_3 = !184_u8;
_6.fld6 = core::ptr::addr_of_mut!(_14.0);
_1 = [(-2478609806426636804_i64),4329706389875820916_i64,331985503940096905_i64];
_6.fld5.fld3 = [_15,RET,RET,_15,RET,RET,RET];
_17 = 13182176698764529558_usize as f32;
RET = _15;
_4 = _6.fld1;
_6.fld1 = Adt49::Variant0 { fld0: _14.0 };
place!(Field::<i16>(Variant(_5, 1), 0)) = _14.2 as i16;
RET = _15 * _15;
SetDiscriminant(_5, 1);
_19 = _6.fld5.fld0;
_4 = Adt49::Variant0 { fld0: _14.0 };
Goto(bb14)
}
bb14 = {
_6.fld0 = !true;
_14 = (Field::<u32>(Variant(_4, 0), 0), 33505_u16, _6.fld5.fld1);
_14.2 = _6.fld5.fld1;
_17 = _16 as f32;
place!(Field::<i16>(Variant(_5, 1), 0)) = !_8;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(17_usize, 11_usize, Move(_11), 7_usize, Move(_7), 14_usize, Move(_14), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(17_usize, 12_usize, Move(_12), 2_usize, Move(_2), 3_usize, Move(_3), 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [i64; 3],mut _2: [i64; 3],mut _3: i128,mut _4: i128,mut _5: i128,mut _6: [i64; 3],mut _7: [i64; 3]) -> isize {
mir! {
type RET = isize;
let _8: *const *mut *mut u32;
let _9: u8;
let _10: [i128; 1];
let _11: ([i128; 7],);
let _12: Adt50;
let _13: Adt56;
let _14: [i8; 1];
let _15: bool;
let _16: ([i64; 3],);
let _17: isize;
let _18: u32;
let _19: i8;
let _20: i16;
let _21: isize;
let _22: Adt41;
let _23: isize;
let _24: Adt47;
let _25: i8;
let _26: bool;
let _27: [i64; 3];
let _28: char;
let _29: isize;
let _30: bool;
let _31: isize;
let _32: Adt45;
let _33: [u16; 3];
let _34: Adt51;
let _35: f64;
let _36: (u32, u16, u64);
let _37: Adt50;
let _38: f64;
let _39: *mut char;
let _40: Adt56;
let _41: [char; 4];
let _42: u128;
let _43: char;
let _44: *const f32;
let _45: ();
let _46: ();
{
_4 = _3 & _3;
_1 = [6597235311402489872_i64,(-2484689436767828441_i64),2405171121327144926_i64];
_5 = _4 ^ _4;
Goto(bb1)
}
bb1 = {
_2 = [99740530271025435_i64,(-5041995971127991413_i64),3525738423573833187_i64];
_3 = _5 * _5;
_9 = 6_usize as u8;
_6 = [(-3221744973786091185_i64),(-4854771847232778028_i64),2143193383229438865_i64];
_7 = [5699854644751513672_i64,9101088030386121322_i64,8413041660529066335_i64];
_6 = [3685309967571195568_i64,7572807092430304562_i64,4511056561781938420_i64];
_3 = _5 << _9;
_6 = _2;
_9 = 149_u8 * 194_u8;
_10 = [_4];
_11.0 = [_4,_3,_4,_5,_3,_3,_3];
_1 = _7;
_4 = 2378649121475372861_i64 as i128;
_9 = !78_u8;
RET = -(-9223372036854775808_isize);
_2 = [(-2409504529014830510_i64),1238010979339663069_i64,(-759184734936394866_i64)];
_3 = 10898849840995293748_usize as i128;
RET = (-9223372036854775808_isize) - 9223372036854775807_isize;
RET = 88107623976150245719040463022463137845_u128 as isize;
RET = 97_isize + 9223372036854775807_isize;
_2 = _6;
_5 = 5_i8 as i128;
_3 = _5 << _4;
_7 = [9166119642154224856_i64,(-228321539772994844_i64),2812055402819785238_i64];
Goto(bb2)
}
bb2 = {
Goto(bb3)
}
bb3 = {
_14 = [127_i8];
_6 = _7;
_15 = !false;
_3 = _5;
_16 = (_6,);
_6 = [(-684082446941379729_i64),8695456920508729935_i64,6363778114755026031_i64];
_5 = _4;
_6 = [(-4638655651386612157_i64),(-9172704168841676248_i64),(-4169840302940778303_i64)];
_11.0 = [_3,_4,_3,_3,_3,_5,_3];
_5 = -_4;
_17 = 95601233071274725700354572980071839189_u128 as isize;
_5 = -_4;
_5 = -_4;
_2 = [9111928798502379693_i64,7894214239659056921_i64,7751221252767655606_i64];
_14 = [(-85_i8)];
_1 = [7639246584486214849_i64,4998087221397561653_i64,3951422836916347476_i64];
_18 = !841641754_u32;
Goto(bb4)
}
bb4 = {
_18 = !3448364913_u32;
_4 = _3 - _3;
_16.0 = _2;
_16.0 = [7172748893620826816_i64,1025574997386104709_i64,8737382888367205695_i64];
_21 = _17 >> RET;
_14 = [66_i8];
_1 = _16.0;
_19 = (-26_i8);
_17 = RET;
_16 = (_7,);
_9 = 125_u8 & 132_u8;
_5 = !_4;
_4 = _5 & _3;
RET = _21 - _21;
_15 = !true;
_6 = [1375243740912213286_i64,(-1142880135591049325_i64),(-5662978627688878006_i64)];
_20 = 23274_i16;
_7 = [(-3156894808263960128_i64),3772357993433470692_i64,4786100004433437003_i64];
_23 = _19 as isize;
_6 = [2722766834004793860_i64,(-3369007276195516106_i64),(-7616365469040492283_i64)];
_16.0 = _2;
_9 = !74_u8;
_2 = _7;
_16.0 = [6413403142346387840_i64,4284163692028665171_i64,(-6490930147814597766_i64)];
match _19 {
0 => bb2,
1 => bb5,
2 => bb6,
340282366920938463463374607431768211430 => bb8,
_ => bb7
}
}
bb5 = {
_14 = [127_i8];
_6 = _7;
_15 = !false;
_3 = _5;
_16 = (_6,);
_6 = [(-684082446941379729_i64),8695456920508729935_i64,6363778114755026031_i64];
_5 = _4;
_6 = [(-4638655651386612157_i64),(-9172704168841676248_i64),(-4169840302940778303_i64)];
_11.0 = [_3,_4,_3,_3,_3,_5,_3];
_5 = -_4;
_17 = 95601233071274725700354572980071839189_u128 as isize;
_5 = -_4;
_5 = -_4;
_2 = [9111928798502379693_i64,7894214239659056921_i64,7751221252767655606_i64];
_14 = [(-85_i8)];
_1 = [7639246584486214849_i64,4998087221397561653_i64,3951422836916347476_i64];
_18 = !841641754_u32;
Goto(bb4)
}
bb6 = {
Goto(bb3)
}
bb7 = {
_2 = [99740530271025435_i64,(-5041995971127991413_i64),3525738423573833187_i64];
_3 = _5 * _5;
_9 = 6_usize as u8;
_6 = [(-3221744973786091185_i64),(-4854771847232778028_i64),2143193383229438865_i64];
_7 = [5699854644751513672_i64,9101088030386121322_i64,8413041660529066335_i64];
_6 = [3685309967571195568_i64,7572807092430304562_i64,4511056561781938420_i64];
_3 = _5 << _9;
_6 = _2;
_9 = 149_u8 * 194_u8;
_10 = [_4];
_11.0 = [_4,_3,_4,_5,_3,_3,_3];
_1 = _7;
_4 = 2378649121475372861_i64 as i128;
_9 = !78_u8;
RET = -(-9223372036854775808_isize);
_2 = [(-2409504529014830510_i64),1238010979339663069_i64,(-759184734936394866_i64)];
_3 = 10898849840995293748_usize as i128;
RET = (-9223372036854775808_isize) - 9223372036854775807_isize;
RET = 88107623976150245719040463022463137845_u128 as isize;
RET = 97_isize + 9223372036854775807_isize;
_2 = _6;
_5 = 5_i8 as i128;
_3 = _5 << _4;
_7 = [9166119642154224856_i64,(-228321539772994844_i64),2812055402819785238_i64];
Goto(bb2)
}
bb8 = {
_6 = [1353256029285836079_i64,6608038498121442012_i64,(-7559529194746088837_i64)];
_9 = !90_u8;
_5 = _19 as i128;
_6 = _2;
_17 = RET;
_16 = (_2,);
_3 = _4;
_21 = _18 as isize;
_26 = _15;
_25 = 13641324655858875098_u64 as i8;
_3 = !_4;
_28 = '\u{4e18c}';
_3 = _4 | _4;
_23 = RET;
_6 = [2985135943500892835_i64,(-35642856273426014_i64),(-1320736205274176959_i64)];
Goto(bb9)
}
bb9 = {
_28 = '\u{ff4f8}';
_7 = [(-193904993192815108_i64),(-5424794574243254837_i64),5797167718822098146_i64];
_25 = !_19;
_14 = [_25];
_7 = [4750524182985539013_i64,(-3306157154677758475_i64),(-8868376782216921369_i64)];
_24 = Adt47::Variant2 { fld0: _3,fld1: _10,fld2: RET };
_2 = [7296988950845948949_i64,8956184536781345733_i64,(-5426838094026557336_i64)];
RET = 55725_u16 as isize;
_9 = !145_u8;
_7 = [200302557821576946_i64,6928207228306801078_i64,(-6459995451547668975_i64)];
place!(Field::<isize>(Variant(_24, 2), 2)) = _18 as isize;
_3 = _4 >> _17;
_1 = [(-5123978393100156725_i64),7056226006777198746_i64,(-7319605619834177737_i64)];
_31 = _17 - _17;
_14 = [_25];
_16 = (_6,);
_19 = 6740978434137468482_i64 as i8;
_23 = _18 as isize;
SetDiscriminant(_24, 0);
_28 = '\u{3023c}';
place!(Field::<u128>(Variant(_24, 0), 0)) = 294377133227312659862226791795118007552_u128 + 179405470877756594401372718063916675678_u128;
_20 = 8269_u16 as i16;
_32.fld0 = (_11.0,);
RET = 4501357279899420343_usize as isize;
_32.fld2 = 13842_u16 * 25736_u16;
_16 = (_7,);
Goto(bb10)
}
bb10 = {
_29 = _23;
_9 = 48_u8;
place!(Field::<f64>(Variant(_24, 0), 2)) = Field::<u128>(Variant(_24, 0), 0) as f64;
_32.fld3 = (_17,);
_16 = (_1,);
_28 = '\u{a23b8}';
_25 = _19;
_16 = (_7,);
_27 = [592331394760107384_i64,3311440115192710968_i64,6359509221230648648_i64];
_16 = (_7,);
_32.fld2 = Field::<f64>(Variant(_24, 0), 2) as u16;
_19 = _25 >> _3;
_30 = !_26;
_19 = _18 as i8;
_15 = _26 | _26;
_28 = '\u{cd4b7}';
_28 = '\u{3865c}';
match _9 {
0 => bb5,
1 => bb7,
2 => bb3,
3 => bb11,
4 => bb12,
5 => bb13,
48 => bb15,
_ => bb14
}
}
bb11 = {
Goto(bb3)
}
bb12 = {
_6 = [1353256029285836079_i64,6608038498121442012_i64,(-7559529194746088837_i64)];
_9 = !90_u8;
_5 = _19 as i128;
_6 = _2;
_17 = RET;
_16 = (_2,);
_3 = _4;
_21 = _18 as isize;
_26 = _15;
_25 = 13641324655858875098_u64 as i8;
_3 = !_4;
_28 = '\u{4e18c}';
_3 = _4 | _4;
_23 = RET;
_6 = [2985135943500892835_i64,(-35642856273426014_i64),(-1320736205274176959_i64)];
Goto(bb9)
}
bb13 = {
_2 = [99740530271025435_i64,(-5041995971127991413_i64),3525738423573833187_i64];
_3 = _5 * _5;
_9 = 6_usize as u8;
_6 = [(-3221744973786091185_i64),(-4854771847232778028_i64),2143193383229438865_i64];
_7 = [5699854644751513672_i64,9101088030386121322_i64,8413041660529066335_i64];
_6 = [3685309967571195568_i64,7572807092430304562_i64,4511056561781938420_i64];
_3 = _5 << _9;
_6 = _2;
_9 = 149_u8 * 194_u8;
_10 = [_4];
_11.0 = [_4,_3,_4,_5,_3,_3,_3];
_1 = _7;
_4 = 2378649121475372861_i64 as i128;
_9 = !78_u8;
RET = -(-9223372036854775808_isize);
_2 = [(-2409504529014830510_i64),1238010979339663069_i64,(-759184734936394866_i64)];
_3 = 10898849840995293748_usize as i128;
RET = (-9223372036854775808_isize) - 9223372036854775807_isize;
RET = 88107623976150245719040463022463137845_u128 as isize;
RET = 97_isize + 9223372036854775807_isize;
_2 = _6;
_5 = 5_i8 as i128;
_3 = _5 << _4;
_7 = [9166119642154224856_i64,(-228321539772994844_i64),2812055402819785238_i64];
Goto(bb2)
}
bb14 = {
Goto(bb3)
}
bb15 = {
_16 = (_2,);
_36 = (_18, _32.fld2, 5011669295230016792_u64);
_32.fld3.0 = _31;
_14 = [_25];
_32.fld2 = !_36.1;
_4 = _28 as i128;
_11 = (_32.fld0.0,);
RET = _32.fld3.0 - _31;
_5 = _3;
_32.fld3.0 = _31;
_39 = core::ptr::addr_of_mut!(_28);
_4 = _15 as i128;
_43 = (*_39);
_41 = [_28,(*_39),_43,_43];
Goto(bb16)
}
bb16 = {
Call(_45 = dump_var(18_usize, 15_usize, Move(_15), 29_usize, Move(_29), 28_usize, Move(_28), 30_usize, Move(_30)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(18_usize, 14_usize, Move(_14), 27_usize, Move(_27), 11_usize, Move(_11), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(18_usize, 36_usize, Move(_36), 9_usize, Move(_9), 41_usize, Move(_41), 19_usize, Move(_19)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_45 = dump_var(18_usize, 20_usize, Move(_20), 2_usize, Move(_2), 46_usize, _46, 46_usize, _46), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: u64,mut _2: *mut u32,mut _3: [i64; 3],mut _4: u32,mut _5: [i64; 3],mut _6: i16,mut _7: Adt44,mut _8: isize,mut _9: u16,mut _10: *mut u32,mut _11: Adt48,mut _12: isize,mut _13: *mut u32,mut _14: isize,mut _15: *mut u32) -> u64 {
mir! {
type RET = u64;
let _16: char;
let _17: bool;
let _18: isize;
let _19: Adt51;
let _20: isize;
let _21: u128;
let _22: Adt42;
let _23: *mut *mut u32;
let _24: isize;
let _25: bool;
let _26: i128;
let _27: ();
let _28: ();
{
RET = !_1;
_11.fld2.1 = !_9;
_7.fld1 = !RET;
_1 = _7.fld1 >> _7.fld1;
_11.fld2.2 = _1;
_11.fld1 = (_8,);
_3 = _5;
_11.fld2.2 = '\u{d14ee}' as u64;
_13 = _15;
_5 = _3;
_10 = core::ptr::addr_of_mut!(_11.fld2.0);
_11.fld2.0 = !_11.fld0;
_11.fld1.0 = -_8;
_7.fld0 = (_3,);
Goto(bb1)
}
bb1 = {
_16 = '\u{92455}';
_17 = (*_10) > (*_10);
_9 = _11.fld2.1 >> (*_10);
RET = 16261751028038161398_usize as u64;
_11.fld1 = (_8,);
_16 = '\u{1e4a1}';
_9 = _11.fld2.1 + _11.fld2.1;
_11.fld1 = (_8,);
_11.fld1.0 = !_12;
_4 = 16_i8 as u32;
_11.fld2 = (_11.fld0, _9, _7.fld1);
_7.fld0.0 = [(-5762328964419339581_i64),(-2643628933348493445_i64),7243287918965021050_i64];
_17 = true;
_7.fld3 = [(-59899210669492145951896991074559383812_i128),64164204270723296314293255033037942926_i128,(-95649766210130276555975342835744506179_i128),(-11577985532921280059606060163646286813_i128),(-150365457556254667747337766664936857642_i128),(-82003212690741507527654161254477031652_i128),(-61398309828249507564809687106622372421_i128)];
_4 = _11.fld2.1 as u32;
_18 = _8 & _8;
_4 = _11.fld5 as u32;
_9 = _11.fld2.1;
Goto(bb2)
}
bb2 = {
_14 = _18 - _8;
_16 = '\u{3d525}';
_20 = _6 as isize;
_11.fld2.0 = !_11.fld0;
_13 = _15;
_7.fld0 = (_5,);
_8 = _18 - _18;
_2 = _13;
Goto(bb3)
}
bb3 = {
_17 = !true;
_13 = core::ptr::addr_of_mut!(_4);
_3 = _5;
_15 = _10;
_18 = !_8;
_7.fld3 = [(-164044764076832529107499284646713423364_i128),41504573408421516001217884800924216504_i128,12684505029828132878527216519919098347_i128,(-153645574101716955463012689254463727485_i128),(-116884478595148930014720237351370846485_i128),21149666673066159568861635153814343504_i128,(-169426683407946281139039850188205544698_i128)];
_11.fld5 = 1584902158_i32 - 393868275_i32;
_11.fld2.0 = 2_usize as u32;
_11.fld2.2 = _11.fld3 as u64;
_7.fld3 = [166379953424321938110338317383505198603_i128,(-169626109281922613445929084860288060496_i128),(-32481274821880468156331828753226494798_i128),(-43374000326187408192295719260506502524_i128),95026696197908395585321945622370909981_i128,(-91888285283656250175902215918178247984_i128),126684686080559698699164283306600044203_i128];
_1 = !RET;
RET = _16 as u64;
_23 = core::ptr::addr_of_mut!(_15);
_13 = core::ptr::addr_of_mut!((*_13));
_1 = _11.fld2.1 as u64;
_3 = _7.fld0.0;
RET = _9 as u64;
_11.fld2 = (_11.fld0, _9, RET);
_11.fld2 = (_11.fld0, _9, RET);
_26 = -151527166366131826460377827759267941561_i128;
_8 = !_14;
_15 = core::ptr::addr_of_mut!(_4);
Goto(bb4)
}
bb4 = {
Call(_27 = dump_var(19_usize, 18_usize, Move(_18), 9_usize, Move(_9), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_27 = dump_var(19_usize, 3_usize, Move(_3), 26_usize, Move(_26), 8_usize, Move(_8), 28_usize, _28), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(1615503773_u32), std::hint::black_box(93829600437504304587385966554518600683_u128), std::hint::black_box(9223372036854775807_isize), std::hint::black_box(49564_u16), std::hint::black_box(1_usize), std::hint::black_box(2312521275375427104_i64));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt41 {
Variant0{
fld0: *mut f32,

},
Variant1{
fld0: [i64; 3],
fld1: f64,
fld2: u128,

},
Variant2{
fld0: usize,
fld1: [i8; 1],
fld2: u32,
fld3: (*mut u32, i128, *mut u32, [i8; 1]),
fld4: (u32, ([i64; 3],), isize),
fld5: i32,

},
Variant3{
fld0: [char; 4],
fld1: u32,
fld2: [i32; 7],
fld3: i8,
fld4: (u32, u16, u64),
fld5: i128,
fld6: *const *mut *mut u32,

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: u32,
fld1: char,
fld2: f32,
fld3: (u32, ([i64; 3],), isize),
fld4: [i128; 7],
fld5: *const f32,
fld6: i64,

},
Variant1{
fld0: i32,

},
Variant2{
fld0: *mut char,
fld1: (*mut u32, i128, *mut u32, [i8; 1]),
fld2: (i64, *mut f32, (u32, u16, u64)),
fld3: u32,
fld4: *mut f32,
fld5: i32,
fld6: i64,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: [i16; 8],
fld1: (*mut u32, i128, *mut u32, [i8; 1]),
fld2: isize,
fld3: u16,
fld4: i16,
fld5: *mut u32,
fld6: u64,

},
Variant1{
fld0: *mut *mut u32,
fld1: [char; 4],
fld2: (isize,),
fld3: i8,
fld4: [i16; 8],

},
Variant2{
fld0: [i8; 1],
fld1: ([i128; 7],),
fld2: [char; 4],
fld3: i8,
fld4: (i64, *mut f32, (u32, u16, u64)),
fld5: i32,
fld6: [i64; 3],

}}
#[derive(Debug)]
pub struct Adt44 {
fld0: ([i64; 3],),
fld1: u64,
fld2: i16,
fld3: [i128; 7],
}
#[derive(Debug)]
pub struct Adt45 {
fld0: ([i128; 7],),
fld1: char,
fld2: u16,
fld3: (isize,),
}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: (*mut u32, i128, *mut u32, [i8; 1]),
fld1: char,
fld2: [i8; 1],

},
Variant1{
fld0: bool,
fld1: usize,
fld2: *mut f32,
fld3: Adt44,

},
Variant2{
fld0: bool,
fld1: *mut f32,
fld2: [i128; 7],
fld3: i8,
fld4: i128,
fld5: [char; 4],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: u128,
fld1: Adt42,
fld2: f64,
fld3: *const f32,
fld4: Adt46,

},
Variant1{
fld0: [char; 4],

},
Variant2{
fld0: i128,
fld1: [i128; 1],
fld2: isize,

},
Variant3{
fld0: u64,
fld1: [i64; 3],

}}
#[derive(Debug)]
pub struct Adt48 {
fld0: u32,
fld1: (isize,),
fld2: (u32, u16, u64),
fld3: u128,
fld4: [i8; 1],
fld5: i32,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: u32,

},
Variant1{
fld0: i16,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: [i128; 1],
fld1: i32,
fld2: isize,
fld3: i128,
fld4: Adt49,

},
Variant1{
fld0: Adt48,
fld1: [i128; 7],
fld2: ([i32; 7], [i64; 3], u64, u64),

},
Variant2{
fld0: [u16; 3],

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [i128; 7],
fld1: [char; 4],
fld2: *mut *mut u32,
fld3: Adt46,
fld4: u32,

},
Variant1{
fld0: *const f32,
fld1: Adt47,
fld2: Adt48,
fld3: Adt44,
fld4: (isize,),

},
Variant2{
fld0: ([i32; 7], [i64; 3], u64, u64),
fld1: (isize,),
fld2: f64,
fld3: u128,
fld4: Adt46,
fld5: ([i128; 7],),
fld6: *mut char,

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: bool,
fld1: Adt49,
fld2: u128,
fld3: i8,
fld4: [i64; 3],
fld5: Adt44,
fld6: *mut u32,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: [char; 4],

},
Variant1{
fld0: (*mut u32, i128, *mut u32, [i8; 1]),
fld1: *mut f32,
fld2: usize,
fld3: i8,
fld4: u32,
fld5: i32,
fld6: u64,

},
Variant2{
fld0: (u32, ([i64; 3],), isize),
fld1: Adt45,
fld2: *mut f32,
fld3: u16,
fld4: [i32; 7],
fld5: u64,

},
Variant3{
fld0: [u16; 3],
fld1: u64,
fld2: *const f32,
fld3: (u32, ([i64; 3],), isize),
fld4: u8,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [i64; 3],
fld1: [u16; 3],

},
Variant1{
fld0: ([i64; 3],),
fld1: ([i32; 7], [i64; 3], u64, u64),

},
Variant2{
fld0: [u16; 3],
fld1: Adt46,
fld2: f64,
fld3: i32,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: [i64; 3],
fld1: u64,
fld2: (*mut u32, i128, *mut u32, [i8; 1]),
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: i64,
fld1: [i64; 3],
fld2: u128,
fld3: (u32, u16, u64),
fld4: usize,

},
Variant1{
fld0: i64,
fld1: [i8; 1],
fld2: Adt44,
fld3: i8,
fld4: *const f32,
fld5: u64,

},
Variant2{
fld0: Adt52,
fld1: Adt49,
fld2: [i128; 1],
fld3: *const *mut *mut u32,
fld4: Adt48,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt44,
fld1: u8,
fld2: Adt54,
fld3: Adt42,

},
Variant1{
fld0: Adt52,
fld1: [i64; 3],
fld2: u16,
fld3: *mut *mut u32,
fld4: u128,
fld5: [i8; 1],
fld6: u32,

},
Variant2{
fld0: [i8; 1],
fld1: Adt50,
fld2: i64,
fld3: Adt47,
fld4: usize,

},
Variant3{
fld0: Adt52,
fld1: ([i32; 7], [i64; 3], u64, u64),
fld2: [i32; 7],
fld3: i8,
fld4: [i8; 1],
fld5: *mut u32,
fld6: u16,

}}

