#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: u32,mut _10: u8,mut _11: u16) -> f32 {
mir! {
type RET = f32;
let _12: char;
let _13: &'static mut bool;
let _14: i8;
let _15: i64;
let _16: bool;
let _17: Adt52;
let _18: char;
let _19: bool;
let _20: f32;
let _21: ([u16; 8],);
let _22: (&'static i8,);
let _23: f32;
let _24: usize;
let _25: f64;
let _26: [u16; 1];
let _27: (*const &'static mut &'static mut bool, isize, u8, *const &'static mut &'static mut bool);
let _28: [bool; 7];
let _29: [u16; 8];
let _30: f32;
let _31: u32;
let _32: (f64, u32, char);
let _33: (f32, bool, &'static mut u16, [bool; 4]);
let _34: f32;
let _35: [isize; 4];
let _36: &'static isize;
let _37: &'static mut bool;
let _38: u16;
let _39: [u32; 3];
let _40: &'static [u16; 6];
let _41: [i128; 6];
let _42: f32;
let _43: *mut &'static mut u64;
let _44: f32;
let _45: [u16; 8];
let _46: f32;
let _47: u16;
let _48: ();
let _49: ();
{
_1 = false | true;
_7 = 6935608926388478268_i64 - (-8542044249467905063_i64);
_1 = !true;
_10 = !226_u8;
_7 = (-9213589311495411356_i64);
_10 = 6191_i16 as u8;
_5 = 252692435453426412018124276878727441210_u128 as i16;
RET = 64_i8 as f32;
_10 = 159_u8;
_4 = -111_i8;
_6 = 396208245_i32;
_1 = !false;
_2 = '\u{61924}';
_2 = '\u{58ceb}';
_11 = _4 as u16;
_7 = -3715207069865324399_i64;
_8 = 301433584702324876708590270059472757459_u128 as i128;
_10 = 192_u8 ^ 147_u8;
_12 = _2;
_7 = -4372044952194607262_i64;
RET = _7 as f32;
_5 = (-9223372036854775808_isize) as i16;
_2 = _12;
match _6 {
0 => bb1,
1 => bb2,
396208245 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_2 = _12;
_14 = !_4;
_9 = 5_usize as u32;
_9 = 4223551697_u32 ^ 3011037635_u32;
Goto(bb5)
}
bb5 = {
_15 = _6 as i64;
_18 = _12;
_14 = _7 as i8;
_3 = 9223372036854775807_isize;
_9 = 2069527616_u32 & 1476652711_u32;
_13 = &mut _1;
_3 = 9223372036854775807_isize;
_19 = !(*_13);
_22.0 = &_14;
_20 = 111166983434442021585538518922657094786_u128 as f32;
_13 = &mut _19;
_13 = &mut _19;
_10 = 124_u8 + 221_u8;
_1 = !(*_13);
_12 = _2;
_3 = (-99_isize);
_21.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
(*_13) = !_1;
RET = _20;
_10 = 219_u8 * 135_u8;
Call(_24 = fn1(_12, _9, _9, RET, _3, Move(_22), _21, _6), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_7 = _14 as i64;
RET = _20 + _20;
RET = _20 + _20;
_21.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
_26 = [_11];
_25 = _5 as f64;
_24 = 14804906591496673754_u64 as usize;
_16 = _1;
_29 = _21.0;
_25 = _24 as f64;
_11 = 45106_u16 - 12852_u16;
_1 = _16;
_28 = [_19,_19,_1,_1,_19,_1,_16];
_8 = _15 as i128;
_24 = 198001662633214375274068229097832334166_u128 as usize;
_9 = 769810494_u32;
_4 = _6 as i8;
_20 = _25 as f32;
_4 = _14 + _14;
Call(_9 = core::intrinsics::bswap(2210558130_u32), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_32.1 = !_9;
_33.3 = [_16,_16,_16,_16];
_26 = [_11];
_22.0 = &_14;
_30 = _9 as f32;
_33.1 = _3 <= _3;
_27.2 = _10;
_8 = 50167845766208576848908681616721152477_i128 & (-33751760410791083761224908106066976243_i128);
_29 = [_11,_11,_11,_11,_11,_11,_11,_11];
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
340282366920938463463374607431768211357 => bb10,
_ => bb9
}
}
bb8 = {
_7 = _14 as i64;
RET = _20 + _20;
RET = _20 + _20;
_21.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
_26 = [_11];
_25 = _5 as f64;
_24 = 14804906591496673754_u64 as usize;
_16 = _1;
_29 = _21.0;
_25 = _24 as f64;
_11 = 45106_u16 - 12852_u16;
_1 = _16;
_28 = [_19,_19,_1,_1,_19,_1,_16];
_8 = _15 as i128;
_24 = 198001662633214375274068229097832334166_u128 as usize;
_9 = 769810494_u32;
_4 = _6 as i8;
_20 = _25 as f32;
_4 = _14 + _14;
Call(_9 = core::intrinsics::bswap(2210558130_u32), ReturnTo(bb7), UnwindUnreachable())
}
bb9 = {
_15 = _6 as i64;
_18 = _12;
_14 = _7 as i8;
_3 = 9223372036854775807_isize;
_9 = 2069527616_u32 & 1476652711_u32;
_13 = &mut _1;
_3 = 9223372036854775807_isize;
_19 = !(*_13);
_22.0 = &_14;
_20 = 111166983434442021585538518922657094786_u128 as f32;
_13 = &mut _19;
_13 = &mut _19;
_10 = 124_u8 + 221_u8;
_1 = !(*_13);
_12 = _2;
_3 = (-99_isize);
_21.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
(*_13) = !_1;
RET = _20;
_10 = 219_u8 * 135_u8;
Call(_24 = fn1(_12, _9, _9, RET, _3, Move(_22), _21, _6), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_32.2 = _18;
_23 = RET;
_36 = &_3;
_10 = _11 as u8;
_32.0 = -_25;
_6 = _33.1 as i32;
_34 = _23;
_29 = _21.0;
_33.2 = &mut _11;
_3 = -(-9223372036854775808_isize);
_23 = RET * _34;
Goto(bb11)
}
bb11 = {
_22.0 = &_14;
_32.1 = !_9;
_31 = _9 + _9;
_10 = _4 as u8;
_18 = _32.2;
_34 = _3 as f32;
_5 = -(-12380_i16);
_35 = [_3,_3,_3,_3];
_26 = [_11];
_1 = _34 == RET;
_30 = _23;
_16 = _1;
_37 = &mut _19;
Goto(bb12)
}
bb12 = {
_39 = [_9,_9,_32.1];
_29 = [_11,_11,_11,_11,_11,_11,_11,_11];
_12 = _18;
_2 = _12;
_41 = [_8,_8,_8,_8,_8,_8];
_12 = _2;
_33.0 = RET + _23;
_6 = 1235061257_i32 + (-506639880_i32);
_23 = _10 as f32;
_21 = (_29,);
_8 = 248336205823178709_u64 as i128;
_13 = &mut _33.1;
Goto(bb13)
}
bb13 = {
_3 = (-9223372036854775808_isize) | 19_isize;
_13 = Move(_37);
_6 = (-1759076212_i32) << _4;
_20 = _33.0 - _23;
_39 = [_32.1,_32.1,_31];
_27.1 = !_3;
_32.0 = -_25;
_32.1 = !_31;
_6 = !1870801257_i32;
_19 = _16;
_11 = 58402_u16;
_28 = [_1,_33.1,_33.1,_19,_33.1,_1,_1];
_27.2 = !_10;
Goto(bb14)
}
bb14 = {
_31 = _32.1;
_13 = &mut _19;
_32.2 = _12;
_14 = !_4;
_23 = _20;
_19 = _2 < _18;
_37 = &mut _33.1;
_13 = Move(_37);
_30 = _9 as f32;
_19 = _20 > _20;
_42 = _33.0 * RET;
_37 = &mut _16;
_15 = _7;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(0_usize, 16_usize, Move(_16), 41_usize, Move(_41), 19_usize, Move(_19), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(0_usize, 1_usize, Move(_1), 3_usize, Move(_3), 8_usize, Move(_8), 31_usize, Move(_31)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(0_usize, 2_usize, Move(_2), 26_usize, Move(_26), 24_usize, Move(_24), 39_usize, Move(_39)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(0_usize, 14_usize, Move(_14), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: char,mut _2: u32,mut _3: u32,mut _4: f32,mut _5: isize,mut _6: (&'static i8,),mut _7: ([u16; 8],),mut _8: i32) -> usize {
mir! {
type RET = usize;
let _9: (*mut u8,);
let _10: [usize; 1];
let _11: u32;
let _12: f32;
let _13: f64;
let _14: &'static mut isize;
let _15: ();
let _16: ();
{
RET = 4_usize;
RET = 3788685516273511088_usize;
Call(_2 = fn2(_5, _7.0, _7, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = 29325_u16 as u32;
_7.0 = [12168_u16,61960_u16,40710_u16,19187_u16,57135_u16,16459_u16,61607_u16,45400_u16];
RET = 8133335345869796364_usize;
_5 = 1904587996491346239_u64 as isize;
_4 = (-98_i8) as f32;
RET = 13047895116943509804_usize;
_8 = -(-1899453448_i32);
_3 = 3862_i16 as u32;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
13047895116943509804 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_10 = [RET];
_8 = (-1067596703_i32);
_8 = 420194286_i32;
_7.0 = [60028_u16,5984_u16,36719_u16,9085_u16,3037_u16,61168_u16,24464_u16,42573_u16];
_3 = _2 | _2;
_11 = _3 << _5;
_2 = !_3;
_11 = _2 * _3;
RET = 6182219383028903657_usize;
RET = !17313573514672983445_usize;
_5 = 9223372036854775807_isize;
_8 = 10086_i16 as i32;
_11 = !_3;
_10 = [RET];
Call(_10 = core::intrinsics::transmute(_5), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_2 = _3;
_3 = !_2;
_1 = '\u{4332b}';
_11 = _2 * _2;
RET = _1 as usize;
RET = !1752714770585631926_usize;
match _5 {
0 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb8 = {
_10 = [RET];
_8 = (-1067596703_i32);
_8 = 420194286_i32;
_7.0 = [60028_u16,5984_u16,36719_u16,9085_u16,3037_u16,61168_u16,24464_u16,42573_u16];
_3 = _2 | _2;
_11 = _3 << _5;
_2 = !_3;
_11 = _2 * _3;
RET = 6182219383028903657_usize;
RET = !17313573514672983445_usize;
_5 = 9223372036854775807_isize;
_8 = 10086_i16 as i32;
_11 = !_3;
_10 = [RET];
Call(_10 = core::intrinsics::transmute(_5), ReturnTo(bb7), UnwindUnreachable())
}
bb9 = {
Return()
}
bb10 = {
_4 = _11 as f32;
RET = 2_usize;
RET = 1_usize >> _3;
_8 = 1189822899_i32;
_12 = _8 as f32;
RET = 2175801892853486035_usize | 3531735788477533030_usize;
_13 = 8125608245657010342_i64 as f64;
RET = 6_usize << _2;
RET = _4 as usize;
Goto(bb11)
}
bb11 = {
Call(_15 = dump_var(1_usize, 1_usize, Move(_1), 2_usize, Move(_2), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: isize,mut _2: [u16; 8],mut _3: ([u16; 8],),mut _4: i32) -> u32 {
mir! {
type RET = u32;
let _5: i128;
let _6: Adt31;
let _7: char;
let _8: ((&'static u64,), &'static mut ([u16; 8],), [usize; 4]);
let _9: bool;
let _10: ((f64, u32, char), &'static f32, &'static mut &'static u64, Adt52);
let _11: *mut Adt31;
let _12: i64;
let _13: u64;
let _14: u128;
let _15: *mut Adt31;
let _16: bool;
let _17: bool;
let _18: isize;
let _19: [isize; 4];
let _20: *const &'static mut &'static mut bool;
let _21: [u8; 7];
let _22: (*mut u8, f32, i32);
let _23: u16;
let _24: i32;
let _25: f64;
let _26: char;
let _27: u16;
let _28: isize;
let _29: char;
let _30: u64;
let _31: isize;
let _32: [u32; 3];
let _33: ();
let _34: ();
{
_5 = (-98028904241071041028407023647765464496_i128);
_5 = (-8171061302399229245_i64) as i128;
Goto(bb1)
}
bb1 = {
_6.fld0.0 = _5 as f64;
_6.fld0.2 = '\u{bd04a}';
RET = 2844816531_u32 << _5;
_6.fld0.0 = _1 as f64;
_6.fld0.1 = 37_i8 as u32;
RET = 70_i8 as u32;
_1 = _6.fld0.0 as isize;
_7 = _6.fld0.2;
_7 = _6.fld0.2;
_6.fld0.0 = RET as f64;
RET = _6.fld0.1 - _6.fld0.1;
_4 = 1967100180_i32 << RET;
_1 = true as isize;
RET = _6.fld0.1 << _4;
_6.fld0.2 = _7;
_8.2 = [2_usize,641893516761057333_usize,9774535248928048772_usize,6_usize];
_8.1 = &mut _3;
_6.fld0.2 = _7;
_3 = (_2,);
_1 = 73_isize - 9223372036854775807_isize;
_6.fld0.1 = _7 as u32;
_6.fld0.1 = RET;
_6.fld0.0 = _1 as f64;
RET = _6.fld0.1;
_6.fld0.0 = 4_usize as f64;
_2 = _3.0;
_6.fld0.1 = RET;
Goto(bb2)
}
bb2 = {
_3.0 = [61759_u16,50189_u16,37641_u16,37307_u16,49847_u16,58804_u16,17432_u16,14280_u16];
_4 = 1072043922_i32;
_8.1 = &mut _3;
_3 = (_2,);
_4 = _1 as i32;
_3 = (_2,);
_3 = (_2,);
_8.1 = &mut _3;
_10.0.0 = _6.fld0.0 + _6.fld0.0;
_5 = (-12939_i16) as i128;
_6.fld0.2 = _7;
_6.fld0.1 = !RET;
_8.1 = &mut _3;
_7 = _6.fld0.2;
_10.0.2 = _7;
_6.fld0.0 = 9744690759610866567_u64 as f64;
_10.0.2 = _6.fld0.2;
Goto(bb3)
}
bb3 = {
_8.2 = [8709009176260857158_usize,2523869461995776782_usize,7_usize,7963502966489306246_usize];
_1 = 23184_i16 as isize;
_11 = core::ptr::addr_of_mut!(_6);
_8.1 = &mut _3;
_10.0.1 = 15936292081050466358_u64 as u32;
_6 = Adt31 { fld0: _10.0 };
(*_11).fld0 = _10.0;
(*_11).fld0 = _10.0;
RET = 17018_u16 as u32;
_6.fld0.1 = _6.fld0.0 as u32;
_6.fld0.0 = _10.0.0 * _10.0.0;
_12 = 42623_u16 as i64;
_10.0.2 = (*_11).fld0.2;
Goto(bb4)
}
bb4 = {
RET = (*_11).fld0.1 | _6.fld0.1;
_13 = 664505135266170353_u64;
_9 = !true;
_3.0 = [35810_u16,23325_u16,33833_u16,13473_u16,16609_u16,23239_u16,59546_u16,9902_u16];
_6.fld0 = (_10.0.0, _10.0.1, _7);
(*_11).fld0.2 = _7;
(*_11).fld0.1 = 42_i8 as u32;
_3.0 = [53053_u16,15938_u16,53658_u16,47700_u16,38557_u16,59015_u16,41783_u16,42454_u16];
_10.0.1 = _6.fld0.1;
RET = !_6.fld0.1;
match _13 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
664505135266170353 => bb7,
_ => bb6
}
}
bb5 = {
_6.fld0.0 = _5 as f64;
_6.fld0.2 = '\u{bd04a}';
RET = 2844816531_u32 << _5;
_6.fld0.0 = _1 as f64;
_6.fld0.1 = 37_i8 as u32;
RET = 70_i8 as u32;
_1 = _6.fld0.0 as isize;
_7 = _6.fld0.2;
_7 = _6.fld0.2;
_6.fld0.0 = RET as f64;
RET = _6.fld0.1 - _6.fld0.1;
_4 = 1967100180_i32 << RET;
_1 = true as isize;
RET = _6.fld0.1 << _4;
_6.fld0.2 = _7;
_8.2 = [2_usize,641893516761057333_usize,9774535248928048772_usize,6_usize];
_8.1 = &mut _3;
_6.fld0.2 = _7;
_3 = (_2,);
_1 = 73_isize - 9223372036854775807_isize;
_6.fld0.1 = _7 as u32;
_6.fld0.1 = RET;
_6.fld0.0 = _1 as f64;
RET = _6.fld0.1;
_6.fld0.0 = 4_usize as f64;
_2 = _3.0;
_6.fld0.1 = RET;
Goto(bb2)
}
bb6 = {
_3.0 = [61759_u16,50189_u16,37641_u16,37307_u16,49847_u16,58804_u16,17432_u16,14280_u16];
_4 = 1072043922_i32;
_8.1 = &mut _3;
_3 = (_2,);
_4 = _1 as i32;
_3 = (_2,);
_3 = (_2,);
_8.1 = &mut _3;
_10.0.0 = _6.fld0.0 + _6.fld0.0;
_5 = (-12939_i16) as i128;
_6.fld0.2 = _7;
_6.fld0.1 = !RET;
_8.1 = &mut _3;
_7 = _6.fld0.2;
_10.0.2 = _7;
_6.fld0.0 = 9744690759610866567_u64 as f64;
_10.0.2 = _6.fld0.2;
Goto(bb3)
}
bb7 = {
_14 = 183193254481827025300529905978028579092_u128 + 195290973531645382745979509239203880766_u128;
_16 = _9;
_7 = _6.fld0.2;
(*_11) = Adt31 { fld0: _10.0 };
(*_11).fld0 = _10.0;
_10.0.1 = RET * RET;
Goto(bb8)
}
bb8 = {
_15 = core::ptr::addr_of_mut!((*_11));
(*_11).fld0.1 = _10.0.1;
(*_15).fld0.1 = !_10.0.1;
_8.1 = &mut _3;
_17 = _16 ^ _9;
(*_11).fld0.1 = _10.0.1 + RET;
_12 = -6680286846079973378_i64;
_18 = -_1;
(*_11).fld0.2 = _7;
_15 = core::ptr::addr_of_mut!((*_15));
_9 = !_16;
_1 = !_18;
_8.0.0 = &_13;
_9 = (*_15).fld0.0 < (*_11).fld0.0;
_19 = [_1,_1,_1,_1];
_24 = _4;
_11 = core::ptr::addr_of_mut!((*_11));
_22.1 = _18 as f32;
_19 = [_18,_1,_1,_18];
(*_15) = Adt31 { fld0: _10.0 };
Goto(bb9)
}
bb9 = {
(*_15).fld0 = (_10.0.0, _10.0.1, _10.0.2);
Call((*_11).fld0.2 = fn3((*_15).fld0.0, _10.0.1, _24, _24, _14, _3, _6.fld0.1, (*_11).fld0.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_1 = _14 as isize;
(*_11).fld0.2 = _10.0.2;
_17 = _9 & _9;
_12 = _22.1 as i64;
_9 = (*_11).fld0.2 >= _10.0.2;
_16 = !_17;
RET = !_6.fld0.1;
Goto(bb11)
}
bb11 = {
_10.0.1 = _6.fld0.1 - (*_15).fld0.1;
_22.2 = _4 & _4;
(*_15).fld0.1 = _10.0.1 ^ RET;
_22.2 = -_4;
_10.2 = &mut _8.0.0;
_21 = [246_u8,82_u8,170_u8,228_u8,253_u8,221_u8,127_u8];
RET = !(*_15).fld0.1;
(*_15) = Adt31 { fld0: _10.0 };
RET = !(*_11).fld0.1;
_25 = 1957689915436961745_usize as f64;
_10.2 = &mut _8.0.0;
_24 = _5 as i32;
_8.0.0 = &_13;
_7 = (*_11).fld0.2;
Goto(bb12)
}
bb12 = {
_26 = (*_15).fld0.2;
(*_15).fld0.0 = _25;
_9 = !_17;
(*_15).fld0.1 = 1_usize as u32;
_15 = core::ptr::addr_of_mut!((*_11));
_21 = [196_u8,80_u8,73_u8,52_u8,63_u8,176_u8,51_u8];
_10.0.0 = (*_15).fld0.0 - (*_11).fld0.0;
_23 = RET as u16;
_15 = Move(_11);
_24 = !_4;
_2 = _3.0;
_14 = !263554580590188167376077292975230310717_u128;
_10.0.2 = _26;
_4 = _22.1 as i32;
_4 = _22.2;
_17 = _16;
Goto(bb13)
}
bb13 = {
_6.fld0.2 = _26;
_23 = 3_usize as u16;
_29 = _7;
_7 = _6.fld0.2;
_10.1 = &_22.1;
_27 = _17 as u16;
_25 = _10.0.1 as f64;
_14 = !264226212721801280962197394462279752662_u128;
_18 = -_1;
_3.0 = [_27,_27,_23,_27,_27,_27,_27,_27];
_8.0.0 = &_13;
_1 = _18 + _18;
match _13 {
0 => bb14,
1 => bb15,
2 => bb16,
664505135266170353 => bb18,
_ => bb17
}
}
bb14 = {
_15 = core::ptr::addr_of_mut!((*_11));
(*_11).fld0.1 = _10.0.1;
(*_15).fld0.1 = !_10.0.1;
_8.1 = &mut _3;
_17 = _16 ^ _9;
(*_11).fld0.1 = _10.0.1 + RET;
_12 = -6680286846079973378_i64;
_18 = -_1;
(*_11).fld0.2 = _7;
_15 = core::ptr::addr_of_mut!((*_15));
_9 = !_16;
_1 = !_18;
_8.0.0 = &_13;
_9 = (*_15).fld0.0 < (*_11).fld0.0;
_19 = [_1,_1,_1,_1];
_24 = _4;
_11 = core::ptr::addr_of_mut!((*_11));
_22.1 = _18 as f32;
_19 = [_18,_1,_1,_18];
(*_15) = Adt31 { fld0: _10.0 };
Goto(bb9)
}
bb15 = {
_10.0.1 = _6.fld0.1 - (*_15).fld0.1;
_22.2 = _4 & _4;
(*_15).fld0.1 = _10.0.1 ^ RET;
_22.2 = -_4;
_10.2 = &mut _8.0.0;
_21 = [246_u8,82_u8,170_u8,228_u8,253_u8,221_u8,127_u8];
RET = !(*_15).fld0.1;
(*_15) = Adt31 { fld0: _10.0 };
RET = !(*_11).fld0.1;
_25 = 1957689915436961745_usize as f64;
_10.2 = &mut _8.0.0;
_24 = _5 as i32;
_8.0.0 = &_13;
_7 = (*_11).fld0.2;
Goto(bb12)
}
bb16 = {
_6.fld0.0 = _5 as f64;
_6.fld0.2 = '\u{bd04a}';
RET = 2844816531_u32 << _5;
_6.fld0.0 = _1 as f64;
_6.fld0.1 = 37_i8 as u32;
RET = 70_i8 as u32;
_1 = _6.fld0.0 as isize;
_7 = _6.fld0.2;
_7 = _6.fld0.2;
_6.fld0.0 = RET as f64;
RET = _6.fld0.1 - _6.fld0.1;
_4 = 1967100180_i32 << RET;
_1 = true as isize;
RET = _6.fld0.1 << _4;
_6.fld0.2 = _7;
_8.2 = [2_usize,641893516761057333_usize,9774535248928048772_usize,6_usize];
_8.1 = &mut _3;
_6.fld0.2 = _7;
_3 = (_2,);
_1 = 73_isize - 9223372036854775807_isize;
_6.fld0.1 = _7 as u32;
_6.fld0.1 = RET;
_6.fld0.0 = _1 as f64;
RET = _6.fld0.1;
_6.fld0.0 = 4_usize as f64;
_2 = _3.0;
_6.fld0.1 = RET;
Goto(bb2)
}
bb17 = {
_3.0 = [61759_u16,50189_u16,37641_u16,37307_u16,49847_u16,58804_u16,17432_u16,14280_u16];
_4 = 1072043922_i32;
_8.1 = &mut _3;
_3 = (_2,);
_4 = _1 as i32;
_3 = (_2,);
_3 = (_2,);
_8.1 = &mut _3;
_10.0.0 = _6.fld0.0 + _6.fld0.0;
_5 = (-12939_i16) as i128;
_6.fld0.2 = _7;
_6.fld0.1 = !RET;
_8.1 = &mut _3;
_7 = _6.fld0.2;
_10.0.2 = _7;
_6.fld0.0 = 9744690759610866567_u64 as f64;
_10.0.2 = _6.fld0.2;
Goto(bb3)
}
bb18 = {
_6.fld0.2 = _29;
_28 = _1 & _1;
_32 = [_6.fld0.1,_10.0.1,RET];
Goto(bb19)
}
bb19 = {
Call(_33 = dump_var(2_usize, 14_usize, Move(_14), 9_usize, Move(_9), 29_usize, Move(_29), 24_usize, Move(_24)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_33 = dump_var(2_usize, 18_usize, Move(_18), 13_usize, Move(_13), 32_usize, Move(_32), 17_usize, Move(_17)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_33 = dump_var(2_usize, 1_usize, Move(_1), 26_usize, Move(_26), 21_usize, Move(_21), 34_usize, _34), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: f64,mut _2: u32,mut _3: i32,mut _4: i32,mut _5: u128,mut _6: ([u16; 8],),mut _7: u32,mut _8: f64) -> char {
mir! {
type RET = char;
let _9: Adt31;
let _10: [usize; 4];
let _11: ((&'static u64,), &'static mut ([u16; 8],), [usize; 4]);
let _12: (f64, u32, char);
let _13: [char; 4];
let _14: isize;
let _15: [isize; 4];
let _16: char;
let _17: u8;
let _18: [u8; 7];
let _19: bool;
let _20: u64;
let _21: *const u8;
let _22: Adt31;
let _23: *mut &'static mut u64;
let _24: *const &'static mut &'static mut bool;
let _25: char;
let _26: char;
let _27: [i128; 6];
let _28: u16;
let _29: Adt29;
let _30: (*mut u8,);
let _31: i32;
let _32: [char; 4];
let _33: [u8; 2];
let _34: ();
let _35: ();
{
_4 = '\u{56e16}' as i32;
_5 = !215425650252068372778279394014931723654_u128;
_8 = _1;
_4 = _3 + _3;
_7 = _2 + _2;
RET = '\u{71f5c}';
_2 = !_7;
_8 = (-73_i8) as f64;
_9.fld0 = (_1, _7, RET);
Goto(bb1)
}
bb1 = {
RET = _9.fld0.2;
_9.fld0.1 = (-9223372036854775808_isize) as u32;
_4 = _3 * _3;
RET = _9.fld0.2;
_10 = [10751714379587265710_usize,0_usize,4_usize,2_usize];
_9.fld0.1 = !_2;
_6.0 = [26140_u16,26864_u16,34824_u16,60122_u16,8025_u16,57351_u16,11164_u16,63350_u16];
_11.1 = &mut _6;
_9.fld0 = (_1, _7, RET);
_9.fld0.1 = _7;
_11.2 = [5513345222579120205_usize,3_usize,17591245962305477422_usize,6023461047966130855_usize];
_7 = 10041740914916922596_usize as u32;
_11.1 = &mut _6;
_5 = 42269_u16 as u128;
_12.1 = !_9.fld0.1;
_12 = (_9.fld0.0, _9.fld0.1, _9.fld0.2);
_8 = -_1;
_12 = (_9.fld0.0, _2, RET);
_5 = 84649280346879644673750843549803706585_u128 & 40445497159873313180645163765493015908_u128;
_12.2 = _9.fld0.2;
_13 = [RET,RET,RET,RET];
_5 = 122110258993915316118954208216039027227_u128 << _4;
_1 = -_12.0;
_5 = 307886872348226962164223953746484751334_u128 + 257620818589200817180627372465397576788_u128;
_11.1 = &mut _6;
Goto(bb2)
}
bb2 = {
RET = _12.2;
_13 = [_12.2,_12.2,RET,RET];
_1 = _12.0 + _8;
_8 = _9.fld0.0;
_12.0 = _1 * _8;
_15 = [56_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11.2 = _10;
_12 = (_1, _9.fld0.1, RET);
_17 = 66_u8;
RET = _9.fld0.2;
RET = _12.2;
_3 = _4 ^ _4;
Call(_10 = fn4(_11.2, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_9.fld0.0 = _4 as f64;
_12 = (_9.fld0.0, _2, _9.fld0.2);
_12 = _9.fld0;
_9.fld0.0 = -_12.0;
_14 = 4_usize as isize;
_16 = RET;
_13 = [RET,RET,RET,_9.fld0.2];
_14 = 26_isize;
RET = _9.fld0.2;
_9.fld0.2 = _12.2;
_18 = [_17,_17,_17,_17,_17,_17,_17];
_19 = true;
_4 = _3;
_3 = _5 as i32;
_11.1 = &mut _6;
_2 = _12.1;
_8 = _1;
_16 = RET;
_12.2 = RET;
_11.2 = _10;
match _14 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
26 => bb9,
_ => bb8
}
}
bb4 = {
RET = _12.2;
_13 = [_12.2,_12.2,RET,RET];
_1 = _12.0 + _8;
_8 = _9.fld0.0;
_12.0 = _1 * _8;
_15 = [56_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11.2 = _10;
_12 = (_1, _9.fld0.1, RET);
_17 = 66_u8;
RET = _9.fld0.2;
RET = _12.2;
_3 = _4 ^ _4;
Call(_10 = fn4(_11.2, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET = _9.fld0.2;
_9.fld0.1 = (-9223372036854775808_isize) as u32;
_4 = _3 * _3;
RET = _9.fld0.2;
_10 = [10751714379587265710_usize,0_usize,4_usize,2_usize];
_9.fld0.1 = !_2;
_6.0 = [26140_u16,26864_u16,34824_u16,60122_u16,8025_u16,57351_u16,11164_u16,63350_u16];
_11.1 = &mut _6;
_9.fld0 = (_1, _7, RET);
_9.fld0.1 = _7;
_11.2 = [5513345222579120205_usize,3_usize,17591245962305477422_usize,6023461047966130855_usize];
_7 = 10041740914916922596_usize as u32;
_11.1 = &mut _6;
_5 = 42269_u16 as u128;
_12.1 = !_9.fld0.1;
_12 = (_9.fld0.0, _9.fld0.1, _9.fld0.2);
_8 = -_1;
_12 = (_9.fld0.0, _2, RET);
_5 = 84649280346879644673750843549803706585_u128 & 40445497159873313180645163765493015908_u128;
_12.2 = _9.fld0.2;
_13 = [RET,RET,RET,RET];
_5 = 122110258993915316118954208216039027227_u128 << _4;
_1 = -_12.0;
_5 = 307886872348226962164223953746484751334_u128 + 257620818589200817180627372465397576788_u128;
_11.1 = &mut _6;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_11.2 = [3_usize,9546867250399273977_usize,4_usize,10152298502126985216_usize];
_22.fld0.1 = !_9.fld0.1;
_9.fld0.0 = _1;
_15 = [_14,_14,_14,_14];
_4 = _3 & _3;
_10 = [1_usize,444350011344291869_usize,12930289029284776736_usize,2481283196246104239_usize];
_22.fld0 = (_12.0, _12.1, _9.fld0.2);
_14 = _3 as isize;
_15 = [_14,_14,_14,_14];
_21 = core::ptr::addr_of!(_17);
_25 = _9.fld0.2;
_18 = [_17,(*_21),(*_21),(*_21),_17,(*_21),(*_21)];
_1 = -_22.fld0.0;
_22.fld0.0 = 166692461119916781085638670700762511392_i128 as f64;
_9.fld0 = _12;
_26 = _12.2;
_16 = _25;
match _17 {
0 => bb8,
1 => bb4,
2 => bb10,
3 => bb11,
66 => bb13,
_ => bb12
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET = _9.fld0.2;
_9.fld0.1 = (-9223372036854775808_isize) as u32;
_4 = _3 * _3;
RET = _9.fld0.2;
_10 = [10751714379587265710_usize,0_usize,4_usize,2_usize];
_9.fld0.1 = !_2;
_6.0 = [26140_u16,26864_u16,34824_u16,60122_u16,8025_u16,57351_u16,11164_u16,63350_u16];
_11.1 = &mut _6;
_9.fld0 = (_1, _7, RET);
_9.fld0.1 = _7;
_11.2 = [5513345222579120205_usize,3_usize,17591245962305477422_usize,6023461047966130855_usize];
_7 = 10041740914916922596_usize as u32;
_11.1 = &mut _6;
_5 = 42269_u16 as u128;
_12.1 = !_9.fld0.1;
_12 = (_9.fld0.0, _9.fld0.1, _9.fld0.2);
_8 = -_1;
_12 = (_9.fld0.0, _2, RET);
_5 = 84649280346879644673750843549803706585_u128 & 40445497159873313180645163765493015908_u128;
_12.2 = _9.fld0.2;
_13 = [RET,RET,RET,RET];
_5 = 122110258993915316118954208216039027227_u128 << _4;
_1 = -_12.0;
_5 = 307886872348226962164223953746484751334_u128 + 257620818589200817180627372465397576788_u128;
_11.1 = &mut _6;
Goto(bb2)
}
bb13 = {
_11.1 = &mut _6;
_22 = Adt31 { fld0: _12 };
_9.fld0.1 = _2;
_1 = _22.fld0.0;
_11.1 = &mut _6;
_19 = true;
_9.fld0.0 = 16860_i16 as f64;
_12 = _9.fld0;
_10 = [405189263574988850_usize,485437774772718839_usize,0_usize,7794687589975585416_usize];
_26 = _25;
_6.0 = [54112_u16,59058_u16,44700_u16,22898_u16,58268_u16,19135_u16,33805_u16,33863_u16];
_29.fld4 = !7_usize;
_20 = 14510540449137445373_u64 & 8936383363315632838_u64;
Goto(bb14)
}
bb14 = {
_11.2 = [_29.fld4,_29.fld4,_29.fld4,_29.fld4];
_29.fld0 = _19 ^ _19;
_20 = _4 as u64;
_7 = _22.fld0.1;
_12.0 = (*_21) as f64;
_29.fld3 = Move(_21);
_4 = _3;
_26 = _16;
_29.fld5 = _20 as f32;
_9.fld0.2 = _25;
_9.fld0.1 = _12.1;
_28 = 262_u16 << _29.fld4;
_18 = [_17,_17,_17,_17,_17,_17,_17];
_9 = Adt31 { fld0: _22.fld0 };
_13 = [RET,_12.2,_16,_9.fld0.2];
_9.fld0.0 = _22.fld0.0 + _1;
_10 = [_29.fld4,_29.fld4,_29.fld4,_29.fld4];
_12 = (_9.fld0.0, _9.fld0.1, _26);
_21 = core::ptr::addr_of!(_17);
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(3_usize, 20_usize, Move(_20), 17_usize, Move(_17), 14_usize, Move(_14), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(3_usize, 3_usize, Move(_3), 15_usize, Move(_15), 10_usize, Move(_10), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(3_usize, 13_usize, Move(_13), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [usize; 4],mut _2: ([u16; 8],)) -> [usize; 4] {
mir! {
type RET = [usize; 4];
let _3: isize;
let _4: *mut *mut *mut f64;
let _5: &'static mut isize;
let _6: i64;
let _7: [u8; 7];
let _8: u128;
let _9: (char,);
let _10: ([u16; 8],);
let _11: *mut *mut f64;
let _12: isize;
let _13: &'static mut ([u16; 8],);
let _14: &'static mut [u8; 6];
let _15: i8;
let _16: Adt65;
let _17: f64;
let _18: f64;
let _19: isize;
let _20: isize;
let _21: char;
let _22: u8;
let _23: i8;
let _24: ();
let _25: ();
{
RET = [4111682651621692196_usize,17120615381304405567_usize,17372226955347238769_usize,5_usize];
RET = [3000367290958345142_usize,10447495353669287292_usize,6_usize,10693971937774168663_usize];
RET = _1;
RET = [501008524987212836_usize,7_usize,1_usize,4191780230827184883_usize];
RET = [6_usize,4_usize,6105098507879194489_usize,3_usize];
_1 = [8138206366292840006_usize,3288831852086723393_usize,18182280319009767309_usize,4_usize];
_1 = [3_usize,8571885396153793081_usize,2_usize,13402383292887173874_usize];
RET = _1;
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 79_u8 as isize;
RET = [7_usize,7134762104824676086_usize,9948032920699490959_usize,908316284955851145_usize];
_2.0 = [42996_u16,31000_u16,58366_u16,36454_u16,12703_u16,6244_u16,42212_u16,52926_u16];
RET = [4549960750647810421_usize,11155368572774921143_usize,0_usize,5630420434626215619_usize];
RET = [6_usize,18249552412267603131_usize,848595594895161547_usize,1_usize];
RET = [2407192907699717150_usize,7_usize,6869838119320539042_usize,347770933542187215_usize];
_3 = 64_isize;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
64 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = [3_usize,1_usize,8137381440869395185_usize,16746292956136999057_usize];
_7 = [208_u8,24_u8,49_u8,87_u8,60_u8,227_u8,155_u8];
RET = _1;
RET = [2_usize,17659527744174368600_usize,3_usize,16484779375001801260_usize];
_6 = !(-4920659844910085943_i64);
_9.0 = '\u{b1175}';
_7 = [215_u8,147_u8,202_u8,203_u8,3_u8,151_u8,213_u8];
_7 = [27_u8,229_u8,78_u8,124_u8,205_u8,238_u8,78_u8];
_3 = 98_i8 as isize;
_6 = 5108508027593631258_i64 ^ 1067573179558427142_i64;
_8 = 15228525797061214664223082450024180761_u128;
_12 = _3 + _3;
match _8 {
15228525797061214664223082450024180761 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_10 = (_2.0,);
_5 = &mut _12;
Call((*_5) = core::intrinsics::transmute(_6), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_2.0 = [24754_u16,46242_u16,53366_u16,55165_u16,46706_u16,45204_u16,4290_u16,7790_u16];
_15 = !117_i8;
_2.0 = _10.0;
_1 = [6_usize,2_usize,18294847824964994931_usize,10524313927984628823_usize];
_2.0 = [49293_u16,42444_u16,16102_u16,48405_u16,23337_u16,21175_u16,5970_u16,17272_u16];
_12 = 10557_u16 as isize;
_4 = core::ptr::addr_of_mut!(_11);
_10.0 = [2433_u16,44092_u16,7853_u16,26461_u16,1417_u16,65111_u16,46326_u16,16991_u16];
_13 = &mut _10;
_5 = &mut _12;
Call(_11 = fn5((*_13).0, _10), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_8 = 177654017826267210698653339739141137615_u128;
_17 = (-38543417896374339089482574448731030390_i128) as f64;
(*_13) = (_2.0,);
_7 = [28_u8,31_u8,155_u8,116_u8,238_u8,36_u8,150_u8];
Goto(bb14)
}
bb14 = {
_19 = _12;
_1 = [0_usize,6_usize,4_usize,10171137173669964215_usize];
_12 = (-1588723181_i32) as isize;
_9.0 = '\u{ae06}';
_9.0 = '\u{19574}';
_10.0 = [42724_u16,21497_u16,28029_u16,56586_u16,48319_u16,39924_u16,42883_u16,45949_u16];
_8 = 60518072703949107728423990627875915849_u128 | 107973405865348931234432186497450746711_u128;
_5 = &mut _12;
_1 = RET;
_18 = _17;
_21 = _9.0;
_12 = _3 + _3;
_10.0 = [40435_u16,13893_u16,6469_u16,28152_u16,58085_u16,51216_u16,26994_u16,31421_u16];
_17 = 57616784235264717987997513135034956837_i128 as f64;
_1 = [6_usize,3_usize,17659234922771479410_usize,5_usize];
_23 = _15 & _15;
RET = _1;
_2.0 = [39179_u16,6518_u16,39569_u16,14508_u16,61832_u16,16331_u16,62593_u16,38241_u16];
RET = _1;
_2 = (_10.0,);
_2.0 = _10.0;
_10.0 = [50302_u16,22940_u16,8003_u16,56294_u16,13125_u16,46340_u16,48933_u16,7709_u16];
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(4_usize, 3_usize, Move(_3), 6_usize, Move(_6), 12_usize, Move(_12), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(4_usize, 9_usize, Move(_9), 1_usize, Move(_1), 25_usize, _25, 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: [u16; 8],mut _2: ([u16; 8],)) -> *mut *mut f64 {
mir! {
type RET = *mut *mut f64;
let _3: *const &'static u64;
let _4: *mut u8;
let _5: i128;
let _6: u64;
let _7: bool;
let _8: usize;
let _9: ((&'static u64,), &'static mut ([u16; 8],), [usize; 4]);
let _10: f64;
let _11: *const Adt31;
let _12: ();
let _13: ();
{
Call(RET = fn6(_2, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = [41890_u16,10162_u16,9951_u16,12061_u16,65191_u16,12808_u16,38584_u16,193_u16];
_1 = [36300_u16,23822_u16,3294_u16,9711_u16,65062_u16,27841_u16,10975_u16,37834_u16];
_5 = !(-134683710211973718141508425031132723330_i128);
_2.0 = [43273_u16,12971_u16,7120_u16,3931_u16,36747_u16,17868_u16,23677_u16,6565_u16];
_5 = 79187954463985034060143491065672323929_i128 - 55150114295537816255823179299574379959_i128;
_2 = (_1,);
_5 = !(-28622116199075793296355595167001572610_i128);
_1 = [21370_u16,38386_u16,54124_u16,58755_u16,38668_u16,29563_u16,56039_u16,63775_u16];
_5 = (-84871694503569369497545079120228548413_i128);
_2 = (_1,);
_2.0 = [37822_u16,8767_u16,1006_u16,44313_u16,28444_u16,2854_u16,34941_u16,14767_u16];
_2 = (_1,);
_5 = 20981250196922684748237422481912184043_i128;
_2.0 = _1;
_5 = !54448642758393098826971196094684567237_i128;
_1 = [11671_u16,16004_u16,22659_u16,38287_u16,39105_u16,23562_u16,7541_u16,29278_u16];
_2.0 = [51579_u16,51573_u16,22304_u16,56276_u16,19690_u16,50137_u16,45347_u16,27117_u16];
_2.0 = [17338_u16,12261_u16,45740_u16,31646_u16,21965_u16,26728_u16,10468_u16,3739_u16];
_2 = (_1,);
_5 = 179_u8 as i128;
Goto(bb2)
}
bb2 = {
_1 = [24961_u16,30275_u16,22570_u16,50895_u16,34831_u16,6370_u16,17021_u16,52475_u16];
_5 = (-16226566640696449953495008108198254398_i128);
_1 = [32266_u16,35818_u16,2055_u16,47463_u16,59613_u16,28538_u16,46820_u16,27645_u16];
_6 = !3882272691238676632_u64;
_2 = (_1,);
_7 = _5 >= _5;
_7 = false;
_6 = !14308664685000477220_u64;
_2 = (_1,);
_5 = 24_isize as i128;
_2 = (_1,);
_2 = (_1,);
_2.0 = [7639_u16,22353_u16,62937_u16,61946_u16,46172_u16,6044_u16,63505_u16,8489_u16];
_5 = 6_i8 as i128;
_1 = [34481_u16,17035_u16,13926_u16,36589_u16,50653_u16,51724_u16,60627_u16,44399_u16];
_5 = (-111121755167486189928450157104520378748_i128) | (-128632903309717810587654980430950958155_i128);
_5 = (-94387094104724303755455444864444262842_i128) & (-110160892051470206739957959205807149372_i128);
_7 = false;
_5 = !118354579037310737613457520334212617578_i128;
_5 = 128293114624547768397429592239660340458_i128;
match _5 {
0 => bb3,
1 => bb4,
128293114624547768397429592239660340458 => bb6,
_ => bb5
}
}
bb3 = {
_1 = [41890_u16,10162_u16,9951_u16,12061_u16,65191_u16,12808_u16,38584_u16,193_u16];
_1 = [36300_u16,23822_u16,3294_u16,9711_u16,65062_u16,27841_u16,10975_u16,37834_u16];
_5 = !(-134683710211973718141508425031132723330_i128);
_2.0 = [43273_u16,12971_u16,7120_u16,3931_u16,36747_u16,17868_u16,23677_u16,6565_u16];
_5 = 79187954463985034060143491065672323929_i128 - 55150114295537816255823179299574379959_i128;
_2 = (_1,);
_5 = !(-28622116199075793296355595167001572610_i128);
_1 = [21370_u16,38386_u16,54124_u16,58755_u16,38668_u16,29563_u16,56039_u16,63775_u16];
_5 = (-84871694503569369497545079120228548413_i128);
_2 = (_1,);
_2.0 = [37822_u16,8767_u16,1006_u16,44313_u16,28444_u16,2854_u16,34941_u16,14767_u16];
_2 = (_1,);
_5 = 20981250196922684748237422481912184043_i128;
_2.0 = _1;
_5 = !54448642758393098826971196094684567237_i128;
_1 = [11671_u16,16004_u16,22659_u16,38287_u16,39105_u16,23562_u16,7541_u16,29278_u16];
_2.0 = [51579_u16,51573_u16,22304_u16,56276_u16,19690_u16,50137_u16,45347_u16,27117_u16];
_2.0 = [17338_u16,12261_u16,45740_u16,31646_u16,21965_u16,26728_u16,10468_u16,3739_u16];
_2 = (_1,);
_5 = 179_u8 as i128;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_2.0 = _1;
match _5 {
0 => bb7,
1 => bb8,
2 => bb9,
128293114624547768397429592239660340458 => bb11,
_ => bb10
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = [41890_u16,10162_u16,9951_u16,12061_u16,65191_u16,12808_u16,38584_u16,193_u16];
_1 = [36300_u16,23822_u16,3294_u16,9711_u16,65062_u16,27841_u16,10975_u16,37834_u16];
_5 = !(-134683710211973718141508425031132723330_i128);
_2.0 = [43273_u16,12971_u16,7120_u16,3931_u16,36747_u16,17868_u16,23677_u16,6565_u16];
_5 = 79187954463985034060143491065672323929_i128 - 55150114295537816255823179299574379959_i128;
_2 = (_1,);
_5 = !(-28622116199075793296355595167001572610_i128);
_1 = [21370_u16,38386_u16,54124_u16,58755_u16,38668_u16,29563_u16,56039_u16,63775_u16];
_5 = (-84871694503569369497545079120228548413_i128);
_2 = (_1,);
_2.0 = [37822_u16,8767_u16,1006_u16,44313_u16,28444_u16,2854_u16,34941_u16,14767_u16];
_2 = (_1,);
_5 = 20981250196922684748237422481912184043_i128;
_2.0 = _1;
_5 = !54448642758393098826971196094684567237_i128;
_1 = [11671_u16,16004_u16,22659_u16,38287_u16,39105_u16,23562_u16,7541_u16,29278_u16];
_2.0 = [51579_u16,51573_u16,22304_u16,56276_u16,19690_u16,50137_u16,45347_u16,27117_u16];
_2.0 = [17338_u16,12261_u16,45740_u16,31646_u16,21965_u16,26728_u16,10468_u16,3739_u16];
_2 = (_1,);
_5 = 179_u8 as i128;
Goto(bb2)
}
bb10 = {
_1 = [24961_u16,30275_u16,22570_u16,50895_u16,34831_u16,6370_u16,17021_u16,52475_u16];
_5 = (-16226566640696449953495008108198254398_i128);
_1 = [32266_u16,35818_u16,2055_u16,47463_u16,59613_u16,28538_u16,46820_u16,27645_u16];
_6 = !3882272691238676632_u64;
_2 = (_1,);
_7 = _5 >= _5;
_7 = false;
_6 = !14308664685000477220_u64;
_2 = (_1,);
_5 = 24_isize as i128;
_2 = (_1,);
_2 = (_1,);
_2.0 = [7639_u16,22353_u16,62937_u16,61946_u16,46172_u16,6044_u16,63505_u16,8489_u16];
_5 = 6_i8 as i128;
_1 = [34481_u16,17035_u16,13926_u16,36589_u16,50653_u16,51724_u16,60627_u16,44399_u16];
_5 = (-111121755167486189928450157104520378748_i128) | (-128632903309717810587654980430950958155_i128);
_5 = (-94387094104724303755455444864444262842_i128) & (-110160892051470206739957959205807149372_i128);
_7 = false;
_5 = !118354579037310737613457520334212617578_i128;
_5 = 128293114624547768397429592239660340458_i128;
match _5 {
0 => bb3,
1 => bb4,
128293114624547768397429592239660340458 => bb6,
_ => bb5
}
}
bb11 = {
_2.0 = [9068_u16,24328_u16,45569_u16,18905_u16,8158_u16,52439_u16,22947_u16,9902_u16];
_9.2 = [14501537779299074633_usize,6_usize,7498736779624578118_usize,7_usize];
_9.0.0 = &_6;
_9.2 = [5_usize,5036597733717243238_usize,2434446578547336010_usize,3599128323235341523_usize];
_8 = 290514419573487539659045705008867916244_u128 as usize;
_9.1 = &mut _2;
_5 = 78918153993894575634829145397179926110_i128;
_9.0.0 = &_6;
_2 = (_1,);
_9.1 = &mut _2;
_3 = core::ptr::addr_of!(_9.0.0);
_8 = 0_usize;
(*_3) = &_6;
Goto(bb12)
}
bb12 = {
(*_3) = &_6;
_2.0 = _1;
_8 = _9.2[_8];
_1[_8] = !_2.0[_8];
_9.0.0 = &_6;
_2.0 = [_1[_8],_1[_8],_1[_8],_1[_8],_1[_8],_1[_8],_1[_8],_1[_8]];
_9.0.0 = &_6;
_7 = false | false;
(*_3) = &_6;
_1 = [_2.0[_8],_2.0[_8],_2.0[_8],_2.0[_8],_2.0[_8],_2.0[_8],_2.0[_8],_2.0[_8]];
_1 = _2.0;
Goto(bb13)
}
bb13 = {
_8 = !1004968356181833342_usize;
_8 = 7_usize;
_7 = _1[_8] < _2.0[_8];
Goto(bb14)
}
bb14 = {
_8 = 13842359185150893457_usize;
(*_3) = &_6;
_7 = false;
_9.2 = [_8,_8,_8,_8];
_5 = 247_u8 as i128;
_9.2 = [_8,_8,_8,_8];
_1 = [41500_u16,24366_u16,430_u16,60287_u16,12244_u16,16582_u16,36073_u16,59281_u16];
(*_3) = &_6;
_9.1 = &mut _2;
(*_3) = &_6;
Goto(bb15)
}
bb15 = {
Call(_12 = dump_var(5_usize, 6_usize, Move(_6), 1_usize, Move(_1), 8_usize, Move(_8), 13_usize, _13), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: ([u16; 8],),mut _2: [u16; 8]) -> *mut *mut f64 {
mir! {
type RET = *mut *mut f64;
let _3: f64;
let _4: bool;
let _5: [u16; 1];
let _6: char;
let _7: &'static mut isize;
let _8: u64;
let _9: u8;
let _10: u16;
let _11: *mut Adt31;
let _12: f64;
let _13: *mut Adt31;
let _14: (&'static i8,);
let _15: Adt73;
let _16: &'static mut ([u16; 8],);
let _17: char;
let _18: (&'static u64,);
let _19: &'static mut ([u16; 8],);
let _20: u16;
let _21: f64;
let _22: (*const &'static mut &'static mut bool, isize, u8, *const &'static mut &'static mut bool);
let _23: isize;
let _24: [u128; 5];
let _25: i128;
let _26: *mut [u128; 5];
let _27: (&'static u64,);
let _28: [i128; 6];
let _29: [bool; 4];
let _30: [usize; 1];
let _31: isize;
let _32: isize;
let _33: *mut u8;
let _34: i64;
let _35: f64;
let _36: ([u16; 8],);
let _37: isize;
let _38: isize;
let _39: &'static mut isize;
let _40: isize;
let _41: isize;
let _42: u64;
let _43: bool;
let _44: isize;
let _45: isize;
let _46: &'static [i128; 6];
let _47: [u128; 4];
let _48: [bool; 7];
let _49: bool;
let _50: *const u8;
let _51: u8;
let _52: u64;
let _53: (&'static i8,);
let _54: bool;
let _55: u128;
let _56: char;
let _57: u16;
let _58: f32;
let _59: (u128, *const [u16; 8], *const u8, &'static [i128; 6]);
let _60: usize;
let _61: Adt65;
let _62: [usize; 4];
let _63: char;
let _64: (f64, u32, char);
let _65: [bool; 7];
let _66: f32;
let _67: [u128; 5];
let _68: &'static mut bool;
let _69: usize;
let _70: f32;
let _71: [u128; 4];
let _72: f32;
let _73: f64;
let _74: f64;
let _75: Adt31;
let _76: isize;
let _77: (f64, u32, char);
let _78: char;
let _79: isize;
let _80: isize;
let _81: i16;
let _82: i64;
let _83: isize;
let _84: char;
let _85: isize;
let _86: u128;
let _87: *mut f64;
let _88: [u16; 8];
let _89: [char; 4];
let _90: *mut *const &'static u64;
let _91: *const &'static mut &'static mut bool;
let _92: char;
let _93: i32;
let _94: bool;
let _95: bool;
let _96: (i16,);
let _97: f32;
let _98: ();
let _99: ();
{
_2 = _1.0;
_1.0 = [57245_u16,13975_u16,20451_u16,45133_u16,33669_u16,56230_u16,21797_u16,39689_u16];
_2 = _1.0;
_2 = _1.0;
_1 = (_2,);
_2 = _1.0;
_2 = _1.0;
_2 = [34247_u16,15253_u16,58500_u16,60754_u16,59193_u16,7107_u16,61939_u16,24954_u16];
_2 = [6222_u16,2912_u16,61765_u16,65193_u16,50291_u16,64019_u16,22048_u16,47561_u16];
_2 = [6548_u16,55204_u16,59686_u16,64227_u16,48240_u16,40369_u16,34932_u16,30508_u16];
_3 = (-358862770_i32) as f64;
_2 = [20045_u16,38560_u16,33136_u16,45304_u16,5049_u16,32881_u16,48717_u16,11872_u16];
_2 = [54130_u16,64016_u16,25824_u16,53113_u16,3187_u16,22752_u16,22730_u16,42827_u16];
_2 = [3848_u16,9357_u16,41462_u16,39179_u16,37927_u16,3676_u16,4643_u16,63714_u16];
_3 = 15760616222545960122_u64 as f64;
_1 = (_2,);
_5 = [4037_u16];
_3 = 97310193355910867_i64 as f64;
_4 = !false;
_1 = (_2,);
_3 = 20819_i16 as f64;
_4 = true;
_5 = [13172_u16];
_5 = [32883_u16];
_3 = (-295896446_i32) as f64;
_3 = 142452575728694053_i64 as f64;
_6 = '\u{7d1e9}';
_4 = true;
Goto(bb1)
}
bb1 = {
_3 = 5293651726458422641_i64 as f64;
_4 = false | false;
_1.0 = [18614_u16,6809_u16,16331_u16,29851_u16,7107_u16,13483_u16,35384_u16,2464_u16];
_1 = (_2,);
_6 = '\u{c0c4a}';
_1.0 = _2;
_3 = (-2_i8) as f64;
_3 = 752684394302767629792997863981698404_i128 as f64;
_4 = false;
_1.0 = [11054_u16,26793_u16,64654_u16,62340_u16,3598_u16,57312_u16,37712_u16,51458_u16];
Call(_3 = fn7(_2, _1.0, _1.0, _1.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = 10643032464951904797_u64;
_3 = (-272013909101449454_i64) as f64;
_9 = 73_u8;
_1.0 = [51837_u16,9046_u16,39999_u16,47247_u16,64608_u16,48534_u16,12561_u16,36381_u16];
_3 = (-70_i8) as f64;
_1.0 = [17137_u16,42119_u16,15682_u16,28703_u16,60390_u16,30735_u16,19056_u16,18207_u16];
_4 = false;
_5 = [16231_u16];
_5 = [56970_u16];
_5 = [19836_u16];
_3 = 75360376349633238758747729379390756722_u128 as f64;
_1.0 = [53962_u16,49405_u16,52015_u16,36874_u16,5780_u16,43943_u16,26179_u16,42660_u16];
_10 = 64209_u16 >> _9;
_4 = true;
_9 = 77_u8;
_12 = -_3;
_3 = _8 as f64;
_10 = 7446_u16;
Goto(bb3)
}
bb3 = {
_8 = 7703571177502999918_u64 | 15912366137074941069_u64;
_12 = _3;
_10 = 209990210475658656230747756266272347027_u128 as u16;
_9 = (-6461591977670759266_i64) as u8;
_6 = '\u{e516c}';
_1 = (_2,);
_4 = _12 != _3;
_8 = !1995345852563001274_u64;
_10 = _8 as u16;
_12 = _3;
_5 = [_10];
_1 = (_2,);
_1 = (_2,);
_4 = true | true;
Call(_10 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = !5116788177263834664_u64;
_1.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_9 = 192_u8 ^ 240_u8;
_10 = 4921_u16;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_9 = _4 as u8;
_12 = _3;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_16 = &mut _1;
_1 = (_2,);
_10 = !8563_u16;
_2 = _1.0;
_12 = _3;
_10 = !58248_u16;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_2 = _1.0;
_9 = 34_u8 + 69_u8;
_16 = &mut _1;
(*_16).0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_9 = 182_u8 ^ 70_u8;
_5 = [_10];
_5 = [_10];
_8 = !12905204140076736854_u64;
_1 = (_2,);
_1.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
Call(_3 = core::intrinsics::fmaf64(_12, _12, _12), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_1 = (_2,);
_17 = _6;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_16 = &mut _1;
_4 = true & false;
_12 = -_3;
_12 = _3;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_10 = 537201974_u32 as u16;
_16 = &mut _1;
_10 = 12924_u16 & 21141_u16;
_17 = _6;
_8 = 2888885745374667636_u64;
_9 = 1001707174_u32 as u8;
(*_16) = (_2,);
_16 = &mut _1;
_17 = _6;
_1 = (_2,);
_1 = (_2,);
_20 = !_10;
Goto(bb6)
}
bb6 = {
_3 = -_12;
_10 = _20 - _20;
_21 = _3 - _12;
_3 = _21;
_9 = 221_u8;
_9 = (-9223372036854775808_isize) as u8;
_8 = 2888087836682913195_u64;
_17 = _6;
_5 = [_20];
_8 = !2787140746508925826_u64;
_18.0 = &_8;
_22.1 = (-9223372036854775808_isize);
_21 = _3 * _12;
_8 = 10626589897102556383_u64 + 10082869114363645945_u64;
_6 = _17;
_19 = &mut _1;
_9 = !85_u8;
_10 = _20;
_6 = _17;
_21 = -_3;
_3 = _21;
_20 = !_10;
_10 = _20;
_23 = _22.1;
_21 = _12 * _3;
_16 = Move(_19);
_22.1 = _23;
_23 = _22.1 << _20;
Goto(bb7)
}
bb7 = {
_20 = _10;
_6 = _17;
_6 = _17;
_10 = _20 & _20;
_9 = !246_u8;
_7 = &mut _23;
_8 = 89129027056998740919985713303745233354_u128 as u64;
_24 = [25424713254679882388018724889391242112_u128,142873173851502576153447331149618040405_u128,300037209972291423245977164865264910753_u128,205784114899927911930378268229431477788_u128,314845860180602320677691937428076520800_u128];
_3 = -_12;
_3 = _21 * _21;
_21 = _12 * _3;
_3 = _21 + _21;
match _22.1 {
340282366920938463454151235394913435648 => bb8,
_ => bb1
}
}
bb8 = {
_1 = (_2,);
_27 = Move(_18);
_26 = core::ptr::addr_of_mut!(_24);
_12 = _3;
(*_7) = _10 as isize;
match _22.1 {
340282366920938463454151235394913435648 => bb9,
_ => bb3
}
}
bb9 = {
_12 = _3 - _3;
_21 = _12 * _3;
_28 = [(-27547231585238253165478248216443021839_i128),67397617617798820637953242765737924150_i128,(-21290811053951008254491001786267666818_i128),(-94393418941282130496269789763888650183_i128),49086114365407036245972312231873363169_i128,(-4508292160618361404846099896629168359_i128)];
_26 = core::ptr::addr_of_mut!((*_26));
_10 = !_20;
_30 = [5_usize];
_9 = !118_u8;
_1 = (_2,);
_18.0 = &_8;
_21 = -_12;
_22.1 = -_23;
_5 = [_10];
Goto(bb10)
}
bb10 = {
_12 = 16416_i16 as f64;
_7 = &mut _22.1;
_29 = [_4,_4,_4,_4];
_17 = _6;
_5 = [_20];
_27 = (Move(_18.0),);
_4 = false;
_8 = 12312337522195968974_u64 << _9;
_8 = 1812456614996526648_u64 * 1414416093782929998_u64;
(*_7) = !_23;
_29 = [_4,_4,_4,_4];
(*_26) = [217530725142067313223939031465492449466_u128,11323001787459994407765019426410516680_u128,334966804502679393360312566834239537696_u128,107444954142184032220696669145243670616_u128,209666513327580125250940351716619053046_u128];
_3 = -_21;
_7 = &mut _22.1;
_8 = !4165311810646205469_u64;
_6 = _17;
_19 = &mut _1;
_3 = -_21;
_25 = 54519262792353687868392120110660043160_i128;
_10 = _20 >> _25;
_23 = (*_7);
_17 = _6;
_22.2 = !_9;
_28 = [_25,_25,_25,_25,_25,_25];
_3 = _25 as f64;
_35 = _21;
(*_7) = -_23;
match _25 {
0 => bb8,
1 => bb2,
54519262792353687868392120110660043160 => bb11,
_ => bb3
}
}
bb11 = {
_31 = _22.1;
_34 = 3083783493622597199_i64 << _23;
_1.0 = [_20,_20,_10,_10,_20,_10,_20,_20];
_34 = 4952367031674547789_i64;
_27.0 = &_8;
_5 = [_10];
_19 = &mut _1;
_18 = (Move(_27.0),);
_1 = (_2,);
_36.0 = _1.0;
_7 = &mut _23;
_31 = !(*_7);
_26 = core::ptr::addr_of_mut!((*_26));
_33 = core::ptr::addr_of_mut!(_9);
_9 = _22.1 as u8;
_29 = [_4,_4,_4,_4];
_36 = (_1.0,);
_22.1 = !_23;
_23 = _4 as isize;
_3 = _21 + _35;
_10 = !_20;
_17 = _6;
_12 = -_21;
_8 = !7395411662721725297_u64;
_1 = (_36.0,);
_32 = _23 - _31;
_35 = _12 * _3;
_22.2 = !_9;
(*_26) = [24251803452543104142255244644182325426_u128,321732425106565992637590316716351335609_u128,246011355531505750106305719005682327163_u128,122383776393419942664373735489345736678_u128,146873118414430392435141437187072889198_u128];
_34 = 828429934593139563_i64;
Call(_38 = core::intrinsics::bswap(_31), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_3 = -_21;
_1.0 = [_20,_20,_10,_10,_10,_10,_20,_10];
_10 = _20;
_24 = [332636420987915418187743356753123134390_u128,4425777412324486917497228696454968065_u128,6098689020041871479155024901824245158_u128,251610965146264804486808574010315677313_u128,68247939537139888970309024036002947469_u128];
_38 = !_32;
_12 = _35;
_24 = [48894928284178480226053397900271139775_u128,240779397451143528898884180461101701441_u128,233437962911433462186119241794457282190_u128,136688333400660574334670687253884785471_u128,139386633259093913615322063599041399437_u128];
_35 = _12;
_7 = &mut _32;
_2 = [_20,_20,_20,_10,_20,_10,_10,_20];
_33 = core::ptr::addr_of_mut!(_9);
(*_26) = [31279531830042422491489716792139255372_u128,123242230313213886145533450164232616679_u128,66477540622293485956061346025245541121_u128,219847435564801771497399302779132591654_u128,194675577105740887813350939296266682847_u128];
match _25 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
54519262792353687868392120110660043160 => bb21,
_ => bb20
}
}
bb13 = {
_31 = _22.1;
_34 = 3083783493622597199_i64 << _23;
_1.0 = [_20,_20,_10,_10,_20,_10,_20,_20];
_34 = 4952367031674547789_i64;
_27.0 = &_8;
_5 = [_10];
_19 = &mut _1;
_18 = (Move(_27.0),);
_1 = (_2,);
_36.0 = _1.0;
_7 = &mut _23;
_31 = !(*_7);
_26 = core::ptr::addr_of_mut!((*_26));
_33 = core::ptr::addr_of_mut!(_9);
_9 = _22.1 as u8;
_29 = [_4,_4,_4,_4];
_36 = (_1.0,);
_22.1 = !_23;
_23 = _4 as isize;
_3 = _21 + _35;
_10 = !_20;
_17 = _6;
_12 = -_21;
_8 = !7395411662721725297_u64;
_1 = (_36.0,);
_32 = _23 - _31;
_35 = _12 * _3;
_22.2 = !_9;
(*_26) = [24251803452543104142255244644182325426_u128,321732425106565992637590316716351335609_u128,246011355531505750106305719005682327163_u128,122383776393419942664373735489345736678_u128,146873118414430392435141437187072889198_u128];
_34 = 828429934593139563_i64;
Call(_38 = core::intrinsics::bswap(_31), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
_12 = 16416_i16 as f64;
_7 = &mut _22.1;
_29 = [_4,_4,_4,_4];
_17 = _6;
_5 = [_20];
_27 = (Move(_18.0),);
_4 = false;
_8 = 12312337522195968974_u64 << _9;
_8 = 1812456614996526648_u64 * 1414416093782929998_u64;
(*_7) = !_23;
_29 = [_4,_4,_4,_4];
(*_26) = [217530725142067313223939031465492449466_u128,11323001787459994407765019426410516680_u128,334966804502679393360312566834239537696_u128,107444954142184032220696669145243670616_u128,209666513327580125250940351716619053046_u128];
_3 = -_21;
_7 = &mut _22.1;
_8 = !4165311810646205469_u64;
_6 = _17;
_19 = &mut _1;
_3 = -_21;
_25 = 54519262792353687868392120110660043160_i128;
_10 = _20 >> _25;
_23 = (*_7);
_17 = _6;
_22.2 = !_9;
_28 = [_25,_25,_25,_25,_25,_25];
_3 = _25 as f64;
_35 = _21;
(*_7) = -_23;
match _25 {
0 => bb8,
1 => bb2,
54519262792353687868392120110660043160 => bb11,
_ => bb3
}
}
bb15 = {
_12 = _3 - _3;
_21 = _12 * _3;
_28 = [(-27547231585238253165478248216443021839_i128),67397617617798820637953242765737924150_i128,(-21290811053951008254491001786267666818_i128),(-94393418941282130496269789763888650183_i128),49086114365407036245972312231873363169_i128,(-4508292160618361404846099896629168359_i128)];
_26 = core::ptr::addr_of_mut!((*_26));
_10 = !_20;
_30 = [5_usize];
_9 = !118_u8;
_1 = (_2,);
_18.0 = &_8;
_21 = -_12;
_22.1 = -_23;
_5 = [_10];
Goto(bb10)
}
bb16 = {
_1 = (_2,);
_27 = Move(_18);
_26 = core::ptr::addr_of_mut!(_24);
_12 = _3;
(*_7) = _10 as isize;
match _22.1 {
340282366920938463454151235394913435648 => bb9,
_ => bb3
}
}
bb17 = {
_20 = _10;
_6 = _17;
_6 = _17;
_10 = _20 & _20;
_9 = !246_u8;
_7 = &mut _23;
_8 = 89129027056998740919985713303745233354_u128 as u64;
_24 = [25424713254679882388018724889391242112_u128,142873173851502576153447331149618040405_u128,300037209972291423245977164865264910753_u128,205784114899927911930378268229431477788_u128,314845860180602320677691937428076520800_u128];
_3 = -_12;
_3 = _21 * _21;
_21 = _12 * _3;
_3 = _21 + _21;
match _22.1 {
340282366920938463454151235394913435648 => bb8,
_ => bb1
}
}
bb18 = {
_8 = 7703571177502999918_u64 | 15912366137074941069_u64;
_12 = _3;
_10 = 209990210475658656230747756266272347027_u128 as u16;
_9 = (-6461591977670759266_i64) as u8;
_6 = '\u{e516c}';
_1 = (_2,);
_4 = _12 != _3;
_8 = !1995345852563001274_u64;
_10 = _8 as u16;
_12 = _3;
_5 = [_10];
_1 = (_2,);
_1 = (_2,);
_4 = true | true;
Call(_10 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb19 = {
_1 = (_2,);
_17 = _6;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_16 = &mut _1;
_4 = true & false;
_12 = -_3;
_12 = _3;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_10 = 537201974_u32 as u16;
_16 = &mut _1;
_10 = 12924_u16 & 21141_u16;
_17 = _6;
_8 = 2888885745374667636_u64;
_9 = 1001707174_u32 as u8;
(*_16) = (_2,);
_16 = &mut _1;
_17 = _6;
_1 = (_2,);
_1 = (_2,);
_20 = !_10;
Goto(bb6)
}
bb20 = {
_8 = !5116788177263834664_u64;
_1.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_9 = 192_u8 ^ 240_u8;
_10 = 4921_u16;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_9 = _4 as u8;
_12 = _3;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_16 = &mut _1;
_1 = (_2,);
_10 = !8563_u16;
_2 = _1.0;
_12 = _3;
_10 = !58248_u16;
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_2 = _1.0;
_9 = 34_u8 + 69_u8;
_16 = &mut _1;
(*_16).0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_9 = 182_u8 ^ 70_u8;
_5 = [_10];
_5 = [_10];
_8 = !12905204140076736854_u64;
_1 = (_2,);
_1.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
Call(_3 = core::intrinsics::fmaf64(_12, _12, _12), ReturnTo(bb5), UnwindUnreachable())
}
bb21 = {
_5 = [_20];
_25 = _20 as i128;
_26 = core::ptr::addr_of_mut!((*_26));
_37 = _32 & (*_7);
_32 = _38;
_18.0 = &_8;
_28 = [_25,_25,_25,_25,_25,_25];
_19 = &mut _36;
_41 = _31 & _37;
_40 = _37 | _41;
_9 = _22.2 ^ _22.2;
_16 = Move(_19);
_39 = &mut _32;
_27 = (Move(_18.0),);
_32 = _34 as isize;
(*_26) = [171687216665559074654443735413473850053_u128,316875098662118052741215383013133739941_u128,93692391652987300385343090872692079764_u128,320759048187254513221497965061149067959_u128,88382483410393044366187899454048263708_u128];
_39 = &mut _22.1;
_28 = [_25,_25,_25,_25,_25,_25];
(*_39) = _4 as isize;
Goto(bb22)
}
bb22 = {
_23 = _22.1 - _41;
_22.1 = -_41;
_16 = &mut _1;
(*_33) = 3610846571_u32 as u8;
_39 = Move(_7);
_19 = &mut _1;
_44 = -_40;
_46 = &_28;
(*_19).0 = _2;
_41 = _23;
_12 = (-4283_i16) as f64;
(*_26) = [80249614640148951050521310220997687114_u128,65906254472065055656358971456242118258_u128,301756356108371316442504104686017411963_u128,273046740135808493126837517635897497376_u128,41738091654274648336378302535572999892_u128];
_16 = Move(_19);
_43 = _4;
_48 = [_4,_43,_4,_43,_43,_4,_43];
_31 = _23 - _23;
_4 = _35 < _3;
_50 = core::ptr::addr_of!((*_33));
_20 = !_10;
_2 = [_10,_10,_20,_10,_10,_10,_20,_10];
_39 = &mut _22.1;
_47 = [193432752283973526082468912284078350971_u128,77020482395831610896328251893286145137_u128,241957445420802107555541976647016326899_u128,192671868641383504933186596368350387016_u128];
_32 = _40 | _41;
_48 = [_4,_4,_4,_4,_4,_4,_4];
match _34 {
0 => bb16,
1 => bb20,
2 => bb11,
3 => bb7,
4 => bb21,
828429934593139563 => bb23,
_ => bb9
}
}
bb23 = {
_25 = 4333035223454869586746549818116213546_i128 >> _37;
_36 = (_2,);
_6 = _17;
_41 = _22.1;
(*_39) = _6 as isize;
_42 = _8;
match _34 {
0 => bb10,
1 => bb2,
2 => bb3,
3 => bb15,
4 => bb22,
5 => bb6,
828429934593139563 => bb25,
_ => bb24
}
}
bb24 = {
_8 = 7703571177502999918_u64 | 15912366137074941069_u64;
_12 = _3;
_10 = 209990210475658656230747756266272347027_u128 as u16;
_9 = (-6461591977670759266_i64) as u8;
_6 = '\u{e516c}';
_1 = (_2,);
_4 = _12 != _3;
_8 = !1995345852563001274_u64;
_10 = _8 as u16;
_12 = _3;
_5 = [_10];
_1 = (_2,);
_1 = (_2,);
_4 = true | true;
Call(_10 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb25 = {
_50 = core::ptr::addr_of!((*_50));
_36 = (_1.0,);
_34 = !285931782808350390_i64;
_49 = !_4;
Goto(bb26)
}
bb26 = {
_22.1 = _32;
_19 = &mut _36;
_10 = _22.2 as u16;
(*_19) = (_2,);
(*_26) = [69247449248518989136375114390595045876_u128,250696550883960950108198483351723027926_u128,41834642189619292073035464440980439159_u128,61775884086604546119057193294170856765_u128,231402900108285325523540456787303337444_u128];
_57 = !_20;
_6 = _17;
_38 = (*_50) as isize;
_2 = [_20,_10,_10,_20,_10,_10,_20,_10];
_54 = _35 <= _35;
_2 = [_57,_10,_10,_10,_10,_10,_10,_57];
_55 = 30287776218776533551945655990102562455_u128;
_23 = -_22.1;
_17 = _6;
_27.0 = &_8;
_17 = _6;
_57 = _10 * _10;
_32 = !_31;
_31 = _23;
_2 = [_57,_10,_57,_10,_57,_57,_57,_20];
_39 = &mut _23;
Goto(bb27)
}
bb27 = {
_28 = [_25,_25,_25,_25,_25,_25];
_47 = [_55,_55,_55,_55];
_16 = &mut _1;
(*_33) = _22.2;
_45 = _44 & _22.1;
_27.0 = &_8;
_29 = [_54,_4,_4,_54];
_34 = 1366041259953474613_i64 & 5125502575067054892_i64;
_18.0 = Move(_27.0);
_51 = _9;
_56 = _6;
_59.3 = Move(_46);
_64.1 = !1019931534_u32;
_5 = [_57];
_55 = (-53_i8) as u128;
_46 = &_28;
_4 = !_54;
_59.3 = Move(_46);
_30 = [5_usize];
Goto(bb28)
}
bb28 = {
_50 = core::ptr::addr_of!((*_50));
(*_33) = _22.2;
_39 = &mut _23;
_37 = !(*_39);
_22.2 = (*_50) | (*_33);
_17 = _56;
_19 = Move(_16);
_30 = [6768276088009952847_usize];
(*_50) = _17 as u8;
_54 = _31 < _45;
_59.2 = Move(_50);
_36 = (_2,);
_51 = !_22.2;
Goto(bb29)
}
bb29 = {
_33 = core::ptr::addr_of_mut!(_51);
(*_39) = _31 ^ _45;
_68 = &mut _4;
_28 = [_25,_25,_25,_25,_25,_25];
Goto(bb30)
}
bb30 = {
_38 = -_45;
_47 = [_55,_55,_55,_55];
_20 = _57;
_52 = _25 as u64;
_37 = _38;
_64.1 = _34 as u32;
_54 = !(*_68);
_16 = &mut _36;
_66 = _55 as f32;
_22.2 = (*_33) - _51;
_1 = (_36.0,);
Goto(bb31)
}
bb31 = {
_29 = [_49,_4,(*_68),_54];
_27.0 = &_8;
_50 = Move(_59.2);
_64 = (_3, 1999412375_u32, _17);
_6 = _64.2;
_23 = _66 as isize;
(*_16).0 = [_20,_10,_20,_57,_57,_57,_10,_20];
_58 = _55 as f32;
_12 = -_35;
_29 = [_49,_49,_4,(*_68)];
_32 = _40;
(*_33) = _25 as u8;
_60 = _9 as usize;
_60 = _6 as usize;
_57 = _20;
_51 = _22.2;
_10 = !_20;
_18 = Move(_27);
_41 = 46_i8 as isize;
_46 = &_28;
_61 = Adt65::Variant0 { fld0: (*_46) };
_55 = !272472502751057079312409655273666191607_u128;
Goto(bb32)
}
bb32 = {
_25 = _58 as i128;
_48 = [_54,(*_68),_54,_54,_54,_54,_49];
_18.0 = &_8;
_68 = &mut _43;
_41 = _31;
_69 = !_60;
_13 = core::ptr::addr_of_mut!(_75);
(*_13).fld0 = _64;
_5 = [_10];
_39 = &mut _38;
_39 = &mut _32;
_75 = Adt31 { fld0: _64 };
_75.fld0 = (_35, _64.1, _17);
_59.3 = Move(_46);
SetDiscriminant(_61, 1);
(*_13).fld0 = (_64.0, _64.1, _6);
_62 = [_60,_69,_60,_60];
_34 = 4969022412298404853_i64 + (-2435921073127216687_i64);
_70 = _66;
_78 = (*_13).fld0.2;
_72 = _58 * _70;
Goto(bb33)
}
bb33 = {
_5 = [_10];
_30 = [_60];
_75 = Adt31 { fld0: _64 };
_27.0 = Move(_18.0);
(*_13).fld0.0 = -_3;
_7 = &mut _44;
_73 = _12 + _35;
_82 = _34 ^ _34;
_84 = _64.2;
_87 = core::ptr::addr_of_mut!(_77.0);
_21 = _75.fld0.1 as f64;
(*_7) = (*_13).fld0.1 as isize;
(*_13).fld0.1 = !_64.1;
_46 = &_28;
_18.0 = &_52;
_87 = core::ptr::addr_of_mut!((*_87));
match _64.1 {
0 => bb25,
1 => bb2,
2 => bb16,
3 => bb28,
4 => bb29,
5 => bb34,
6 => bb35,
1999412375 => bb37,
_ => bb36
}
}
bb34 = {
_50 = core::ptr::addr_of!((*_50));
(*_33) = _22.2;
_39 = &mut _23;
_37 = !(*_39);
_22.2 = (*_50) | (*_33);
_17 = _56;
_19 = Move(_16);
_30 = [6768276088009952847_usize];
(*_50) = _17 as u8;
_54 = _31 < _45;
_59.2 = Move(_50);
_36 = (_2,);
_51 = !_22.2;
Goto(bb29)
}
bb35 = {
_8 = 10643032464951904797_u64;
_3 = (-272013909101449454_i64) as f64;
_9 = 73_u8;
_1.0 = [51837_u16,9046_u16,39999_u16,47247_u16,64608_u16,48534_u16,12561_u16,36381_u16];
_3 = (-70_i8) as f64;
_1.0 = [17137_u16,42119_u16,15682_u16,28703_u16,60390_u16,30735_u16,19056_u16,18207_u16];
_4 = false;
_5 = [16231_u16];
_5 = [56970_u16];
_5 = [19836_u16];
_3 = 75360376349633238758747729379390756722_u128 as f64;
_1.0 = [53962_u16,49405_u16,52015_u16,36874_u16,5780_u16,43943_u16,26179_u16,42660_u16];
_10 = 64209_u16 >> _9;
_4 = true;
_9 = 77_u8;
_12 = -_3;
_3 = _8 as f64;
_10 = 7446_u16;
Goto(bb3)
}
bb36 = {
_12 = 16416_i16 as f64;
_7 = &mut _22.1;
_29 = [_4,_4,_4,_4];
_17 = _6;
_5 = [_20];
_27 = (Move(_18.0),);
_4 = false;
_8 = 12312337522195968974_u64 << _9;
_8 = 1812456614996526648_u64 * 1414416093782929998_u64;
(*_7) = !_23;
_29 = [_4,_4,_4,_4];
(*_26) = [217530725142067313223939031465492449466_u128,11323001787459994407765019426410516680_u128,334966804502679393360312566834239537696_u128,107444954142184032220696669145243670616_u128,209666513327580125250940351716619053046_u128];
_3 = -_21;
_7 = &mut _22.1;
_8 = !4165311810646205469_u64;
_6 = _17;
_19 = &mut _1;
_3 = -_21;
_25 = 54519262792353687868392120110660043160_i128;
_10 = _20 >> _25;
_23 = (*_7);
_17 = _6;
_22.2 = !_9;
_28 = [_25,_25,_25,_25,_25,_25];
_3 = _25 as f64;
_35 = _21;
(*_7) = -_23;
match _25 {
0 => bb8,
1 => bb2,
54519262792353687868392120110660043160 => bb11,
_ => bb3
}
}
bb37 = {
_24 = [_55,_55,_55,_55,_55];
_40 = _31;
_75.fld0.0 = _73 * _35;
_64.2 = _56;
(*_26) = [_55,_55,_55,_55,_55];
_75.fld0.2 = _17;
match _64.1 {
0 => bb5,
1999412375 => bb38,
_ => bb20
}
}
bb38 = {
_77 = (*_13).fld0;
_37 = (-2073583891_i32) as isize;
(*_87) = _60 as f64;
place!(Field::<([u16; 8],)>(Variant(_61, 1), 3)) = _1;
_74 = _34 as f64;
_85 = _22.1 >> (*_39);
_21 = _20 as f64;
_83 = !_22.1;
Call(_42 = core::intrinsics::bswap(_52), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
(*_13).fld0.2 = _78;
_94 = !_54;
(*_13) = Adt31 { fld0: _64 };
(*_13).fld0 = (_21, _77.1, _84);
_11 = core::ptr::addr_of_mut!(_75);
_37 = _83 - _85;
(*_11).fld0 = ((*_87), _64.1, _77.2);
match (*_11).fld0.1 {
0 => bb28,
1 => bb34,
2 => bb15,
3 => bb24,
4 => bb31,
5 => bb40,
1999412375 => bb42,
_ => bb41
}
}
bb40 = {
_3 = -_12;
_10 = _20 - _20;
_21 = _3 - _12;
_3 = _21;
_9 = 221_u8;
_9 = (-9223372036854775808_isize) as u8;
_8 = 2888087836682913195_u64;
_17 = _6;
_5 = [_20];
_8 = !2787140746508925826_u64;
_18.0 = &_8;
_22.1 = (-9223372036854775808_isize);
_21 = _3 * _12;
_8 = 10626589897102556383_u64 + 10082869114363645945_u64;
_6 = _17;
_19 = &mut _1;
_9 = !85_u8;
_10 = _20;
_6 = _17;
_21 = -_3;
_3 = _21;
_20 = !_10;
_10 = _20;
_23 = _22.1;
_21 = _12 * _3;
_16 = Move(_19);
_22.1 = _23;
_23 = _22.1 << _20;
Goto(bb7)
}
bb41 = {
_50 = core::ptr::addr_of!((*_50));
(*_33) = _22.2;
_39 = &mut _23;
_37 = !(*_39);
_22.2 = (*_50) | (*_33);
_17 = _56;
_19 = Move(_16);
_30 = [6768276088009952847_usize];
(*_50) = _17 as u8;
_54 = _31 < _45;
_59.2 = Move(_50);
_36 = (_2,);
_51 = !_22.2;
Goto(bb29)
}
bb42 = {
_12 = _85 as f64;
(*_33) = !_22.2;
(*_33) = _22.2 - _22.2;
_59.0 = !_55;
_31 = _22.1 << _22.1;
_64 = (_35, (*_11).fld0.1, _6);
_72 = _58;
_86 = _59.0 + _59.0;
(*_11).fld0.1 = _77.1 / _64.1;
(*_87) = _64.0;
Goto(bb43)
}
bb43 = {
_36 = (_1.0,);
place!(Field::<([u16; 8],)>(Variant(_61, 1), 3)) = (_2,);
_65 = _48;
_58 = _85 as f32;
(*_11).fld0 = (_12, _64.1, _64.2);
_52 = !_8;
_7 = &mut _45;
RET = core::ptr::addr_of_mut!(_87);
_1.0 = Field::<([u16; 8],)>(Variant(_61, 1), 3).0;
Goto(bb44)
}
bb44 = {
Call(_98 = dump_var(6_usize, 45_usize, Move(_45), 51_usize, Move(_51), 38_usize, Move(_38), 62_usize, Move(_62)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_98 = dump_var(6_usize, 47_usize, Move(_47), 69_usize, Move(_69), 28_usize, Move(_28), 5_usize, Move(_5)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_98 = dump_var(6_usize, 54_usize, Move(_54), 34_usize, Move(_34), 20_usize, Move(_20), 25_usize, Move(_25)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_98 = dump_var(6_usize, 78_usize, Move(_78), 10_usize, Move(_10), 31_usize, Move(_31), 40_usize, Move(_40)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_98 = dump_var(6_usize, 43_usize, Move(_43), 42_usize, Move(_42), 30_usize, Move(_30), 85_usize, Move(_85)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Call(_98 = dump_var(6_usize, 82_usize, Move(_82), 36_usize, Move(_36), 84_usize, Move(_84), 4_usize, Move(_4)), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: [u16; 8]) -> f64 {
mir! {
type RET = f64;
let _5: &'static mut &'static u64;
let _6: bool;
let _7: [u16; 6];
let _8: &'static u64;
let _9: i128;
let _10: *mut &'static mut u64;
let _11: f64;
let _12: u128;
let _13: [u32; 3];
let _14: bool;
let _15: isize;
let _16: *mut Adt31;
let _17: u8;
let _18: u32;
let _19: isize;
let _20: i8;
let _21: isize;
let _22: f64;
let _23: &'static mut ([u16; 8],);
let _24: i64;
let _25: ([u16; 8], Adt52);
let _26: f32;
let _27: [u16; 6];
let _28: *const &'static u64;
let _29: ();
let _30: ();
{
_1 = _4;
_3 = [20683_u16,2917_u16,11008_u16,53828_u16,6221_u16,12691_u16,63290_u16,26202_u16];
_3 = [10093_u16,16003_u16,45333_u16,34155_u16,28942_u16,13078_u16,10545_u16,31010_u16];
_3 = [52509_u16,42283_u16,25431_u16,2619_u16,42926_u16,21979_u16,31356_u16,8446_u16];
RET = 2151980712014241793_u64 as f64;
RET = (-22226_i16) as f64;
RET = 4067407193_u32 as f64;
_3 = [47114_u16,26763_u16,419_u16,6040_u16,43372_u16,65029_u16,20748_u16,10679_u16];
_4 = [57957_u16,6677_u16,42351_u16,6391_u16,33420_u16,40306_u16,51194_u16,30886_u16];
_3 = [39818_u16,35326_u16,23033_u16,12124_u16,14783_u16,14888_u16,23669_u16,2001_u16];
_3 = [38199_u16,18701_u16,27740_u16,40441_u16,56173_u16,5784_u16,44249_u16,32250_u16];
RET = 97_i8 as f64;
RET = 221624064907970099578642656524572597371_u128 as f64;
_2 = _3;
_4 = [55362_u16,14861_u16,14047_u16,54538_u16,4234_u16,54882_u16,62873_u16,43780_u16];
RET = 32_isize as f64;
_1 = [11257_u16,36966_u16,61077_u16,59484_u16,63137_u16,52895_u16,54741_u16,41350_u16];
_4 = [44374_u16,23378_u16,57981_u16,22318_u16,27991_u16,28527_u16,36181_u16,44397_u16];
RET = (-24_i8) as f64;
_4 = _3;
_1 = [34594_u16,37019_u16,844_u16,39961_u16,31840_u16,41375_u16,20170_u16,26955_u16];
_1 = [2769_u16,1412_u16,9406_u16,15290_u16,63907_u16,58117_u16,50643_u16,61024_u16];
Call(RET = fn8(_3, _1, _4, _4, _4, _1, _3, _3, _2, _2, _3, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _2;
_1 = [12680_u16,38428_u16,9751_u16,60360_u16,37580_u16,17142_u16,39098_u16,24879_u16];
RET = 1555062839329276849_u64 as f64;
_6 = !false;
_6 = true;
_1 = _3;
RET = 109_isize as f64;
RET = 3145060033_u32 as f64;
_4 = _3;
RET = 7036855665825393514_u64 as f64;
_2 = [64913_u16,49757_u16,35255_u16,7252_u16,14863_u16,30188_u16,47141_u16,48401_u16];
RET = 7495059901940680549_usize as f64;
_7 = [52932_u16,46411_u16,9109_u16,33801_u16,40539_u16,46345_u16];
RET = 305693811900485472178688041936691978864_u128 as f64;
RET = (-7215_i16) as f64;
_1 = _3;
RET = 14757163746530075920_u64 as f64;
_6 = false;
_9 = 45007785407399244890211425240695368962_i128;
_1 = [22791_u16,60885_u16,42686_u16,10685_u16,13250_u16,47942_u16,4433_u16,63229_u16];
RET = 9223372036854775807_isize as f64;
_4 = [49710_u16,49504_u16,11080_u16,30453_u16,48558_u16,17014_u16,13185_u16,11711_u16];
_6 = false & false;
_3 = [6872_u16,34368_u16,19221_u16,56745_u16,62913_u16,30953_u16,38861_u16,54115_u16];
_6 = true;
match _9 {
0 => bb2,
1 => bb3,
45007785407399244890211425240695368962 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
RET = 70120759324093677267866376563873331319_u128 as f64;
RET = (-786450148_i32) as f64;
_11 = RET + RET;
_11 = -RET;
match _9 {
0 => bb6,
1 => bb7,
45007785407399244890211425240695368962 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_3 = _2;
_1 = [12680_u16,38428_u16,9751_u16,60360_u16,37580_u16,17142_u16,39098_u16,24879_u16];
RET = 1555062839329276849_u64 as f64;
_6 = !false;
_6 = true;
_1 = _3;
RET = 109_isize as f64;
RET = 3145060033_u32 as f64;
_4 = _3;
RET = 7036855665825393514_u64 as f64;
_2 = [64913_u16,49757_u16,35255_u16,7252_u16,14863_u16,30188_u16,47141_u16,48401_u16];
RET = 7495059901940680549_usize as f64;
_7 = [52932_u16,46411_u16,9109_u16,33801_u16,40539_u16,46345_u16];
RET = 305693811900485472178688041936691978864_u128 as f64;
RET = (-7215_i16) as f64;
_1 = _3;
RET = 14757163746530075920_u64 as f64;
_6 = false;
_9 = 45007785407399244890211425240695368962_i128;
_1 = [22791_u16,60885_u16,42686_u16,10685_u16,13250_u16,47942_u16,4433_u16,63229_u16];
RET = 9223372036854775807_isize as f64;
_4 = [49710_u16,49504_u16,11080_u16,30453_u16,48558_u16,17014_u16,13185_u16,11711_u16];
_6 = false & false;
_3 = [6872_u16,34368_u16,19221_u16,56745_u16,62913_u16,30953_u16,38861_u16,54115_u16];
_6 = true;
match _9 {
0 => bb2,
1 => bb3,
45007785407399244890211425240695368962 => bb5,
_ => bb4
}
}
bb9 = {
_12 = 110638997368780028231906772862570294770_u128 + 213074653996296400555085753783234664905_u128;
_12 = 648125737566034485_i64 as u128;
RET = _11;
_9 = _12 as i128;
_4 = [57399_u16,2499_u16,56574_u16,57000_u16,50024_u16,28990_u16,63953_u16,62728_u16];
_1 = [5491_u16,13058_u16,6235_u16,5269_u16,54133_u16,10051_u16,31884_u16,55080_u16];
RET = _9 as f64;
_9 = 18897177396599996768913155756544286059_i128;
RET = _11;
_14 = !_6;
_1 = _4;
_7 = [2253_u16,35281_u16,16997_u16,19155_u16,62373_u16,18684_u16];
_13 = [3575658736_u32,999963334_u32,120638639_u32];
_1 = [15521_u16,58437_u16,7266_u16,41940_u16,30211_u16,1864_u16,302_u16,56533_u16];
_15 = 9223372036854775807_isize;
_15 = !1_isize;
_3 = [26219_u16,4130_u16,7990_u16,48292_u16,22991_u16,64940_u16,56210_u16,12003_u16];
_9 = !161039267523679134332568926515297027997_i128;
Goto(bb10)
}
bb10 = {
RET = _11 - _11;
_2 = [11167_u16,57251_u16,13080_u16,41823_u16,46210_u16,23312_u16,5868_u16,46426_u16];
_9 = (-50130273702926167105198637188287304082_i128) >> _15;
_7 = [16360_u16,20448_u16,50507_u16,36196_u16,5419_u16,13534_u16];
RET = 8831003819575473317_u64 as f64;
_14 = _6;
RET = _11;
_1 = _4;
_13 = [2249405773_u32,1282699691_u32,2387693454_u32];
_3 = [14934_u16,6048_u16,2129_u16,52907_u16,11658_u16,63099_u16,57462_u16,11935_u16];
_14 = _6 | _6;
_18 = 1979112925_u32;
_15 = (-108_isize);
_13 = [_18,_18,_18];
_18 = 105_u8 as u32;
_9 = (-2234282501315991450_i64) as i128;
_17 = 180_u8 ^ 179_u8;
_3 = [564_u16,36673_u16,20167_u16,13506_u16,14186_u16,19790_u16,1171_u16,19381_u16];
_9 = (-167180932393435731683327694898369756653_i128) * 102608520900601602059647137769902084645_i128;
Goto(bb11)
}
bb11 = {
_12 = 12572_i16 as u128;
Goto(bb12)
}
bb12 = {
_13 = [_18,_18,_18];
_9 = 12776222096528478821097638210112463843_i128;
_1 = _3;
RET = _11 * _11;
_11 = RET * RET;
_20 = 25_i8;
_7 = [26596_u16,7964_u16,12666_u16,39698_u16,63541_u16,14182_u16];
_1 = [19982_u16,365_u16,13052_u16,2166_u16,25553_u16,47690_u16,15055_u16,51292_u16];
_19 = _15 * _15;
RET = -_11;
_21 = -_15;
match _9 {
0 => bb5,
1 => bb7,
2 => bb13,
12776222096528478821097638210112463843 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
RET = _11 - _11;
_2 = [11167_u16,57251_u16,13080_u16,41823_u16,46210_u16,23312_u16,5868_u16,46426_u16];
_9 = (-50130273702926167105198637188287304082_i128) >> _15;
_7 = [16360_u16,20448_u16,50507_u16,36196_u16,5419_u16,13534_u16];
RET = 8831003819575473317_u64 as f64;
_14 = _6;
RET = _11;
_1 = _4;
_13 = [2249405773_u32,1282699691_u32,2387693454_u32];
_3 = [14934_u16,6048_u16,2129_u16,52907_u16,11658_u16,63099_u16,57462_u16,11935_u16];
_14 = _6 | _6;
_18 = 1979112925_u32;
_15 = (-108_isize);
_13 = [_18,_18,_18];
_18 = 105_u8 as u32;
_9 = (-2234282501315991450_i64) as i128;
_17 = 180_u8 ^ 179_u8;
_3 = [564_u16,36673_u16,20167_u16,13506_u16,14186_u16,19790_u16,1171_u16,19381_u16];
_9 = (-167180932393435731683327694898369756653_i128) * 102608520900601602059647137769902084645_i128;
Goto(bb11)
}
bb15 = {
_15 = -_19;
_7 = [6139_u16,11019_u16,2440_u16,46742_u16,9263_u16,22650_u16];
RET = _15 as f64;
_4 = [50049_u16,5232_u16,22909_u16,17927_u16,62934_u16,8670_u16,23388_u16,17836_u16];
_4 = _2;
_15 = _19 | _21;
_19 = _21;
_13 = [_18,_18,_18];
_25.0 = [51764_u16,55537_u16,10939_u16,11459_u16,54942_u16,20259_u16,53501_u16,26726_u16];
_3 = [23821_u16,16770_u16,42083_u16,17073_u16,20494_u16,48405_u16,47995_u16,56524_u16];
_24 = -(-1516016911059367221_i64);
_7 = [29879_u16,59862_u16,15104_u16,26406_u16,11449_u16,9000_u16];
_3 = _4;
_26 = _17 as f32;
_27 = _7;
_6 = _14;
RET = _11 * _11;
_25.0 = [30260_u16,20544_u16,8465_u16,4229_u16,60192_u16,61513_u16,60933_u16,18946_u16];
_4 = _3;
_3 = _1;
_14 = _6;
_13 = [_18,_18,_18];
_9 = _26 as i128;
Goto(bb16)
}
bb16 = {
Call(_29 = dump_var(7_usize, 9_usize, Move(_9), 19_usize, Move(_19), 2_usize, Move(_2), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(7_usize, 12_usize, Move(_12), 3_usize, Move(_3), 15_usize, Move(_15), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(7_usize, 14_usize, Move(_14), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [u16; 8],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: [u16; 8],mut _9: [u16; 8],mut _10: [u16; 8],mut _11: [u16; 8],mut _12: [u16; 8]) -> f64 {
mir! {
type RET = f64;
let _13: &'static i8;
let _14: &'static mut isize;
let _15: bool;
let _16: f32;
let _17: i32;
let _18: u128;
let _19: *mut u8;
let _20: (f64, u32, char);
let _21: char;
let _22: Adt29;
let _23: (&'static mut bool, &'static u64, char, i16);
let _24: &'static mut isize;
let _25: [u128; 4];
let _26: isize;
let _27: usize;
let _28: f32;
let _29: (Adt31, isize);
let _30: &'static mut isize;
let _31: *mut *const &'static u64;
let _32: (Adt31, isize);
let _33: (f32, bool, &'static mut u16, [bool; 4]);
let _34: bool;
let _35: ([u16; 8], Adt52);
let _36: &'static mut bool;
let _37: f32;
let _38: i128;
let _39: ();
let _40: ();
{
RET = 108_i8 as f64;
_11 = [30733_u16,9344_u16,7918_u16,54585_u16,54476_u16,39334_u16,57427_u16,34045_u16];
_6 = [14733_u16,23125_u16,37712_u16,15451_u16,5547_u16,15776_u16,23601_u16,42673_u16];
_10 = [54158_u16,2330_u16,11059_u16,39899_u16,32267_u16,15975_u16,64558_u16,28227_u16];
_2 = [52051_u16,63545_u16,36517_u16,5784_u16,44615_u16,28438_u16,60275_u16,561_u16];
RET = 38240_u16 as f64;
RET = 84272623568344029175361520025006512461_i128 as f64;
_12 = _11;
_3 = [4146_u16,42548_u16,64321_u16,35051_u16,25787_u16,19113_u16,23672_u16,36276_u16];
_11 = [44783_u16,22680_u16,64042_u16,63591_u16,5167_u16,4205_u16,21496_u16,26315_u16];
_4 = _7;
_1 = _6;
_12 = _8;
_15 = !true;
_9 = [65440_u16,23835_u16,13561_u16,16929_u16,43118_u16,35847_u16,57745_u16,18000_u16];
_3 = [46369_u16,56838_u16,56001_u16,64084_u16,46297_u16,47721_u16,58175_u16,37868_u16];
RET = 16258_u16 as f64;
Call(_10 = fn9(_12, _12, _2, _9, _12, _5, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [22794_u16,52910_u16,64551_u16,50260_u16,45222_u16,54551_u16,22873_u16,28904_u16];
_16 = 4052802761_u32 as f32;
_1 = [61825_u16,2362_u16,19012_u16,30982_u16,35254_u16,44660_u16,44877_u16,47003_u16];
_4 = _8;
RET = (-5291647259678345258_i64) as f64;
_1 = [29849_u16,60345_u16,18394_u16,227_u16,40988_u16,8525_u16,5042_u16,54388_u16];
_17 = 14022753325934581074_u64 as i32;
_12 = [27649_u16,42838_u16,34897_u16,35698_u16,63227_u16,65006_u16,64790_u16,28464_u16];
RET = (-70_i8) as f64;
_11 = _5;
_12 = [59943_u16,37335_u16,47409_u16,62534_u16,1250_u16,18350_u16,23112_u16,18452_u16];
_10 = [18020_u16,52679_u16,20216_u16,5419_u16,708_u16,59168_u16,29799_u16,37837_u16];
_18 = 123577746176726603692982061217098850255_u128;
_5 = [29623_u16,50748_u16,11514_u16,51659_u16,1549_u16,44282_u16,19463_u16,63201_u16];
_11 = _10;
_6 = _11;
_11 = _8;
_4 = _3;
_2 = [32886_u16,33708_u16,35313_u16,12981_u16,43942_u16,19826_u16,32555_u16,20869_u16];
_17 = -185008313_i32;
_20.0 = -RET;
_17 = 387323436_i32 * (-2106568878_i32);
_18 = 160737754331470858835430324515992055914_u128 + 217623423327347440196216331522456825733_u128;
_20.2 = '\u{983d4}';
_10 = [28123_u16,3018_u16,59203_u16,11623_u16,50390_u16,23884_u16,37190_u16,25281_u16];
RET = _20.0 * _20.0;
Call(RET = fn10(_7, _10, _8, _20.2, _2, _8, _5, _1, _8, _7, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_21 = _20.2;
_2 = [41855_u16,15997_u16,2406_u16,4477_u16,45176_u16,44202_u16,1607_u16,28595_u16];
_21 = _20.2;
_20.2 = _21;
_20.1 = 3506882507_u32 >> _17;
_21 = _20.2;
_17 = 789319435_i32;
_21 = _20.2;
_15 = false;
_16 = _18 as f32;
RET = _20.0;
_7 = [21343_u16,29456_u16,15535_u16,20158_u16,26483_u16,54655_u16,8624_u16,17307_u16];
_1 = _10;
_4 = [63044_u16,31324_u16,11731_u16,52947_u16,58675_u16,42490_u16,2953_u16,24091_u16];
_9 = [21227_u16,41760_u16,22312_u16,54353_u16,4309_u16,52374_u16,9605_u16,36670_u16];
_20.1 = 284218163_u32 * 1756203947_u32;
_18 = 9223372036854775807_isize as u128;
_16 = (-103111315702850018486994854204919443446_i128) as f32;
_18 = 324855338495628758678827306652619459791_u128 | 164293861055422560550885176282459414416_u128;
_12 = _9;
_6 = [62543_u16,50941_u16,12666_u16,17340_u16,54462_u16,42591_u16,49173_u16,41809_u16];
_22.fld4 = 498956991838836816_usize - 2_usize;
_25 = [_18,_18,_18,_18];
match _17 {
0 => bb3,
1 => bb4,
2 => bb5,
789319435 => bb7,
_ => bb6
}
}
bb3 = {
_6 = [22794_u16,52910_u16,64551_u16,50260_u16,45222_u16,54551_u16,22873_u16,28904_u16];
_16 = 4052802761_u32 as f32;
_1 = [61825_u16,2362_u16,19012_u16,30982_u16,35254_u16,44660_u16,44877_u16,47003_u16];
_4 = _8;
RET = (-5291647259678345258_i64) as f64;
_1 = [29849_u16,60345_u16,18394_u16,227_u16,40988_u16,8525_u16,5042_u16,54388_u16];
_17 = 14022753325934581074_u64 as i32;
_12 = [27649_u16,42838_u16,34897_u16,35698_u16,63227_u16,65006_u16,64790_u16,28464_u16];
RET = (-70_i8) as f64;
_11 = _5;
_12 = [59943_u16,37335_u16,47409_u16,62534_u16,1250_u16,18350_u16,23112_u16,18452_u16];
_10 = [18020_u16,52679_u16,20216_u16,5419_u16,708_u16,59168_u16,29799_u16,37837_u16];
_18 = 123577746176726603692982061217098850255_u128;
_5 = [29623_u16,50748_u16,11514_u16,51659_u16,1549_u16,44282_u16,19463_u16,63201_u16];
_11 = _10;
_6 = _11;
_11 = _8;
_4 = _3;
_2 = [32886_u16,33708_u16,35313_u16,12981_u16,43942_u16,19826_u16,32555_u16,20869_u16];
_17 = -185008313_i32;
_20.0 = -RET;
_17 = 387323436_i32 * (-2106568878_i32);
_18 = 160737754331470858835430324515992055914_u128 + 217623423327347440196216331522456825733_u128;
_20.2 = '\u{983d4}';
_10 = [28123_u16,3018_u16,59203_u16,11623_u16,50390_u16,23884_u16,37190_u16,25281_u16];
RET = _20.0 * _20.0;
Call(RET = fn10(_7, _10, _8, _20.2, _2, _8, _5, _1, _8, _7, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_8 = _11;
_22.fld0 = _15;
_20.1 = 75_i8 as u32;
_23.0 = &mut _15;
_22.fld2 = 13756436724007391364093196924136953107_i128;
_21 = _20.2;
_10 = [22385_u16,17328_u16,59758_u16,48550_u16,17660_u16,1518_u16,22026_u16,30175_u16];
Goto(bb8)
}
bb8 = {
_16 = 143_u8 as f32;
_22.fld1 = [_20.1,_20.1,_20.1];
_28 = _16 * _16;
_18 = 18226850288124251744899404605042430155_u128 ^ 249446308210949720884434421049833885466_u128;
_18 = !147322081961797900824466839222671653864_u128;
_23.3 = (-5151_i16);
_3 = _6;
_21 = _20.2;
_29.0.fld0.0 = -RET;
_23.3 = (-10061_i16) - 9874_i16;
Call(_20 = fn19(_2, _9, _15, _9, _7), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_20 = (_29.0.fld0.0, 307116590_u32, _21);
_1 = _4;
_21 = _20.2;
_17 = 2101939937_i32 * 1835974130_i32;
RET = _20.0 + _20.0;
_23.2 = _20.2;
_22.fld2 = -(-93009075385588649044370246528241146951_i128);
_22.fld1 = [_20.1,_20.1,_20.1];
_21 = _20.2;
_20.0 = RET + RET;
RET = -_20.0;
_2 = [2338_u16,65361_u16,21596_u16,16664_u16,26394_u16,58974_u16,27341_u16,45167_u16];
_22.fld4 = 6075774263308896514_usize >> _17;
Call(_16 = core::intrinsics::transmute(_23.2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_22.fld1 = [_20.1,_20.1,_20.1];
_20.0 = -_29.0.fld0.0;
_32.0 = Adt31 { fld0: _20 };
_22.fld1 = [_32.0.fld0.1,_20.1,_32.0.fld0.1];
_27 = !_22.fld4;
_29.0.fld0.2 = _21;
_22.fld2 = (-94736598354454321251299068142640423392_i128) << _20.1;
_29.0.fld0.2 = _20.2;
_22.fld4 = 40144_u16 as usize;
_34 = !_15;
_7 = [1241_u16,52916_u16,44860_u16,53209_u16,31770_u16,4947_u16,7261_u16,12188_u16];
_29.0.fld0.2 = _21;
_22.fld2 = (-134080657283448332591938427714932838887_i128);
_7 = [57395_u16,60489_u16,26795_u16,17104_u16,6961_u16,20762_u16,26397_u16,42108_u16];
_22.fld5 = 9223372036854775807_isize as f32;
_21 = _32.0.fld0.2;
_33.1 = _22.fld5 == _22.fld5;
match _22.fld2 {
0 => bb8,
1 => bb11,
2 => bb12,
3 => bb13,
206201709637490130871436179716835372569 => bb15,
_ => bb14
}
}
bb11 = {
_6 = [22794_u16,52910_u16,64551_u16,50260_u16,45222_u16,54551_u16,22873_u16,28904_u16];
_16 = 4052802761_u32 as f32;
_1 = [61825_u16,2362_u16,19012_u16,30982_u16,35254_u16,44660_u16,44877_u16,47003_u16];
_4 = _8;
RET = (-5291647259678345258_i64) as f64;
_1 = [29849_u16,60345_u16,18394_u16,227_u16,40988_u16,8525_u16,5042_u16,54388_u16];
_17 = 14022753325934581074_u64 as i32;
_12 = [27649_u16,42838_u16,34897_u16,35698_u16,63227_u16,65006_u16,64790_u16,28464_u16];
RET = (-70_i8) as f64;
_11 = _5;
_12 = [59943_u16,37335_u16,47409_u16,62534_u16,1250_u16,18350_u16,23112_u16,18452_u16];
_10 = [18020_u16,52679_u16,20216_u16,5419_u16,708_u16,59168_u16,29799_u16,37837_u16];
_18 = 123577746176726603692982061217098850255_u128;
_5 = [29623_u16,50748_u16,11514_u16,51659_u16,1549_u16,44282_u16,19463_u16,63201_u16];
_11 = _10;
_6 = _11;
_11 = _8;
_4 = _3;
_2 = [32886_u16,33708_u16,35313_u16,12981_u16,43942_u16,19826_u16,32555_u16,20869_u16];
_17 = -185008313_i32;
_20.0 = -RET;
_17 = 387323436_i32 * (-2106568878_i32);
_18 = 160737754331470858835430324515992055914_u128 + 217623423327347440196216331522456825733_u128;
_20.2 = '\u{983d4}';
_10 = [28123_u16,3018_u16,59203_u16,11623_u16,50390_u16,23884_u16,37190_u16,25281_u16];
RET = _20.0 * _20.0;
Call(RET = fn10(_7, _10, _8, _20.2, _2, _8, _5, _1, _8, _7, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_6 = [22794_u16,52910_u16,64551_u16,50260_u16,45222_u16,54551_u16,22873_u16,28904_u16];
_16 = 4052802761_u32 as f32;
_1 = [61825_u16,2362_u16,19012_u16,30982_u16,35254_u16,44660_u16,44877_u16,47003_u16];
_4 = _8;
RET = (-5291647259678345258_i64) as f64;
_1 = [29849_u16,60345_u16,18394_u16,227_u16,40988_u16,8525_u16,5042_u16,54388_u16];
_17 = 14022753325934581074_u64 as i32;
_12 = [27649_u16,42838_u16,34897_u16,35698_u16,63227_u16,65006_u16,64790_u16,28464_u16];
RET = (-70_i8) as f64;
_11 = _5;
_12 = [59943_u16,37335_u16,47409_u16,62534_u16,1250_u16,18350_u16,23112_u16,18452_u16];
_10 = [18020_u16,52679_u16,20216_u16,5419_u16,708_u16,59168_u16,29799_u16,37837_u16];
_18 = 123577746176726603692982061217098850255_u128;
_5 = [29623_u16,50748_u16,11514_u16,51659_u16,1549_u16,44282_u16,19463_u16,63201_u16];
_11 = _10;
_6 = _11;
_11 = _8;
_4 = _3;
_2 = [32886_u16,33708_u16,35313_u16,12981_u16,43942_u16,19826_u16,32555_u16,20869_u16];
_17 = -185008313_i32;
_20.0 = -RET;
_17 = 387323436_i32 * (-2106568878_i32);
_18 = 160737754331470858835430324515992055914_u128 + 217623423327347440196216331522456825733_u128;
_20.2 = '\u{983d4}';
_10 = [28123_u16,3018_u16,59203_u16,11623_u16,50390_u16,23884_u16,37190_u16,25281_u16];
RET = _20.0 * _20.0;
Call(RET = fn10(_7, _10, _8, _20.2, _2, _8, _5, _1, _8, _7, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_8 = _11;
_22.fld0 = _15;
_20.1 = 75_i8 as u32;
_23.0 = &mut _15;
_22.fld2 = 13756436724007391364093196924136953107_i128;
_21 = _20.2;
_10 = [22385_u16,17328_u16,59758_u16,48550_u16,17660_u16,1518_u16,22026_u16,30175_u16];
Goto(bb8)
}
bb14 = {
Return()
}
bb15 = {
_28 = _22.fld5;
_29 = (Move(_32.0), 9223372036854775807_isize);
_3 = [37809_u16,55532_u16,27883_u16,33343_u16,27615_u16,46405_u16,38680_u16,24027_u16];
_22.fld6 = 3887158409690462966_i64;
_23.3 = _29.0.fld0.1 as i16;
RET = _29.0.fld0.0;
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(8_usize, 2_usize, Move(_2), 25_usize, Move(_25), 11_usize, Move(_11), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(8_usize, 18_usize, Move(_18), 8_usize, Move(_8), 10_usize, Move(_10), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(8_usize, 5_usize, Move(_5), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [u16; 8],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: [u16; 8]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _9: [bool; 7];
let _10: &'static [i128; 6];
let _11: &'static mut u64;
let _12: [u8; 7];
let _13: ([u16; 8], Adt52);
let _14: isize;
let _15: ((f64, u32, char), &'static f32, &'static mut &'static u64, Adt52);
let _16: i128;
let _17: i8;
let _18: [u128; 4];
let _19: *const [u16; 8];
let _20: i128;
let _21: (i16,);
let _22: f64;
let _23: [u16; 8];
let _24: Adt81;
let _25: &'static mut ([u16; 8],);
let _26: i32;
let _27: char;
let _28: [char; 4];
let _29: char;
let _30: *mut Adt31;
let _31: char;
let _32: [u8; 7];
let _33: [char; 4];
let _34: &'static mut isize;
let _35: f32;
let _36: char;
let _37: *mut [u128; 5];
let _38: i128;
let _39: ();
let _40: ();
{
_3 = [40006_u16,48829_u16,48951_u16,23926_u16,26719_u16,32082_u16,2269_u16,24215_u16];
_9 = [false,true,false,true,false,false,false];
_3 = [51904_u16,25221_u16,31222_u16,25000_u16,57225_u16,713_u16,36605_u16,9324_u16];
_2 = _8;
_2 = [54193_u16,39555_u16,55133_u16,15802_u16,17662_u16,61266_u16,15814_u16,2106_u16];
_5 = _6;
RET = [30139_u16,61231_u16,16195_u16,11008_u16,60090_u16,3054_u16,63714_u16,56470_u16];
_9 = [false,true,true,false,true,false,false];
_8 = [19999_u16,18552_u16,38983_u16,25514_u16,38766_u16,29326_u16,31528_u16,49492_u16];
_9 = [false,false,false,true,true,false,true];
_6 = [2493_u16,55591_u16,12824_u16,33010_u16,43402_u16,12479_u16,10271_u16,15510_u16];
_2 = [55632_u16,13741_u16,16322_u16,34353_u16,22852_u16,32864_u16,19903_u16,18818_u16];
_2 = [4324_u16,554_u16,59796_u16,31407_u16,21376_u16,9370_u16,27881_u16,43481_u16];
_4 = [49902_u16,60071_u16,1201_u16,26353_u16,40950_u16,46489_u16,57112_u16,10522_u16];
_4 = [49419_u16,7863_u16,61761_u16,2305_u16,9728_u16,37678_u16,29422_u16,59201_u16];
_6 = [19526_u16,8973_u16,44030_u16,36723_u16,49326_u16,49177_u16,47889_u16,54670_u16];
_9 = [true,true,false,true,true,false,true];
_4 = [1950_u16,63948_u16,7409_u16,40975_u16,63568_u16,16625_u16,60444_u16,35308_u16];
_3 = [20216_u16,58853_u16,54820_u16,57982_u16,45952_u16,1306_u16,49915_u16,61179_u16];
_4 = [45078_u16,25203_u16,62850_u16,26456_u16,56884_u16,60358_u16,5913_u16,40194_u16];
_9 = [true,false,false,false,false,false,true];
_2 = [30123_u16,17062_u16,44549_u16,52975_u16,45987_u16,457_u16,43104_u16,19104_u16];
_12 = [178_u8,240_u8,56_u8,93_u8,220_u8,105_u8,76_u8];
_3 = [41277_u16,60403_u16,5891_u16,55953_u16,57032_u16,62456_u16,55998_u16,5939_u16];
_1 = [42947_u16,2943_u16,34893_u16,10792_u16,38909_u16,12254_u16,33289_u16,40978_u16];
Goto(bb1)
}
bb1 = {
_3 = [63203_u16,4338_u16,11959_u16,41365_u16,17088_u16,29600_u16,6303_u16,43197_u16];
_3 = [23741_u16,2567_u16,4416_u16,7960_u16,63795_u16,13318_u16,7729_u16,23277_u16];
_2 = _8;
_1 = _7;
_4 = _6;
_5 = [27966_u16,20371_u16,55145_u16,62830_u16,16430_u16,47900_u16,27946_u16,51836_u16];
Goto(bb2)
}
bb2 = {
_14 = 9223372036854775807_isize;
_2 = [34237_u16,29950_u16,41158_u16,32290_u16,6860_u16,63263_u16,31947_u16,49517_u16];
_4 = _7;
_5 = _1;
RET = _5;
_12 = [222_u8,230_u8,191_u8,196_u8,153_u8,93_u8,49_u8];
_6 = [13163_u16,22107_u16,59236_u16,47623_u16,6507_u16,514_u16,59827_u16,65378_u16];
_7 = _1;
_4 = _2;
_14 = true as isize;
_4 = [11721_u16,33845_u16,15972_u16,46233_u16,21931_u16,4302_u16,610_u16,20630_u16];
_13.0 = [51471_u16,30906_u16,25843_u16,55520_u16,59890_u16,52192_u16,47904_u16,10588_u16];
_14 = (-86_isize);
_2 = _13.0;
_13.0 = [41318_u16,60073_u16,33718_u16,2663_u16,62163_u16,21626_u16,36779_u16,18427_u16];
_8 = [53407_u16,7351_u16,14845_u16,40658_u16,48958_u16,65372_u16,48518_u16,28873_u16];
_12 = [206_u8,156_u8,161_u8,179_u8,106_u8,166_u8,250_u8];
_3 = _4;
RET = _5;
_9 = [false,false,true,true,true,false,false];
_9 = [false,false,false,false,false,true,false];
_15.0.2 = '\u{37d85}';
_4 = [55095_u16,65220_u16,31503_u16,21470_u16,5815_u16,34275_u16,3024_u16,54621_u16];
match _14 {
0 => bb1,
1 => bb3,
340282366920938463463374607431768211370 => bb5,
_ => bb4
}
}
bb3 = {
_3 = [63203_u16,4338_u16,11959_u16,41365_u16,17088_u16,29600_u16,6303_u16,43197_u16];
_3 = [23741_u16,2567_u16,4416_u16,7960_u16,63795_u16,13318_u16,7729_u16,23277_u16];
_2 = _8;
_1 = _7;
_4 = _6;
_5 = [27966_u16,20371_u16,55145_u16,62830_u16,16430_u16,47900_u16,27946_u16,51836_u16];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_9 = [false,false,true,false,true,true,false];
RET = _4;
_15.0.1 = 204921111_u32 >> _14;
_4 = [3443_u16,64401_u16,60266_u16,55607_u16,23901_u16,22560_u16,7430_u16,43842_u16];
_4 = [9268_u16,51552_u16,18234_u16,48870_u16,37737_u16,40811_u16,28285_u16,59597_u16];
_15.0.2 = '\u{8a77d}';
_15.0.2 = '\u{1098b6}';
_5 = [42700_u16,8189_u16,43538_u16,20617_u16,52928_u16,33655_u16,27159_u16,44509_u16];
RET = [59932_u16,48240_u16,16908_u16,59274_u16,5234_u16,12313_u16,8315_u16,5220_u16];
_4 = [53876_u16,27200_u16,54215_u16,37588_u16,23294_u16,48387_u16,14880_u16,14725_u16];
RET = [12339_u16,7405_u16,25347_u16,56462_u16,54628_u16,39541_u16,33272_u16,16863_u16];
_15.0.0 = 6338948382142879103_i64 as f64;
_2 = _7;
_9 = [false,true,true,false,true,true,false];
_6 = _13.0;
_14 = !(-28_isize);
_8 = [2913_u16,9505_u16,54423_u16,40953_u16,58547_u16,13536_u16,39028_u16,62493_u16];
_16 = (-76739953795806852220806111417267778804_i128) * 41861297560057571168176615447539327884_i128;
_9 = [true,true,true,true,false,true,true];
_9 = [true,false,false,true,false,false,true];
_1 = [5805_u16,50650_u16,7892_u16,56764_u16,64856_u16,38948_u16,41374_u16,16657_u16];
_15.0.1 = 2520672294_u32;
Goto(bb6)
}
bb6 = {
_22 = _15.0.0;
_5 = [24594_u16,5122_u16,3691_u16,21594_u16,4131_u16,47900_u16,48484_u16,56687_u16];
Goto(bb7)
}
bb7 = {
_16 = 71596794761806014697246595482356551744_i128 << _15.0.1;
RET = _5;
_19 = core::ptr::addr_of!(_7);
_12 = [130_u8,123_u8,8_u8,195_u8,128_u8,87_u8,195_u8];
_23 = _13.0;
(*_19) = [29677_u16,24471_u16,10444_u16,5728_u16,58475_u16,60179_u16,2397_u16,57993_u16];
Call(_16 = core::intrinsics::transmute(_1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_22 = _15.0.0 * _15.0.0;
_18 = [198904897791353456522963818501682629746_u128,3695369371478466430727857270578098133_u128,339161119412536831317138052430914228619_u128,11211045199934104105478055304077065533_u128];
_17 = -31_i8;
_24.fld2.2 = !1125137213_i32;
_24.fld1 = _15.0.1 * _15.0.1;
_21 = (13107_i16,);
_7 = [16338_u16,8253_u16,889_u16,37614_u16,57017_u16,30672_u16,3984_u16,57808_u16];
_5 = [16311_u16,3214_u16,13864_u16,52650_u16,54799_u16,11144_u16,30634_u16,15672_u16];
_24.fld2.1 = (-6439423400720136758_i64) as f32;
_5 = [35293_u16,61713_u16,16416_u16,29137_u16,6053_u16,2415_u16,46307_u16,56254_u16];
_1 = [7966_u16,30684_u16,40343_u16,45561_u16,62204_u16,53096_u16,61098_u16,28233_u16];
_26 = _24.fld2.2 >> _16;
_28 = [_15.0.2,_15.0.2,_15.0.2,_15.0.2];
_26 = _24.fld1 as i32;
_26 = _24.fld2.2;
_4 = _5;
_6 = [24187_u16,64649_u16,14255_u16,64105_u16,34873_u16,26590_u16,34517_u16,5227_u16];
_28 = [_15.0.2,_15.0.2,_15.0.2,_15.0.2];
_15.0.1 = _24.fld2.1 as u32;
_1 = _13.0;
_13.0 = [27015_u16,35957_u16,50436_u16,65443_u16,64369_u16,826_u16,5874_u16,11323_u16];
match _21.0 {
13107 => bb9,
_ => bb4
}
}
bb9 = {
_15.0 = (_22, _24.fld1, '\u{518cc}');
_3 = [24183_u16,2983_u16,53638_u16,64916_u16,61331_u16,21032_u16,16753_u16,29235_u16];
RET = _23;
_27 = _15.0.2;
_15.0 = (_22, _24.fld1, _27);
_20 = _16;
_15.1 = &_24.fld2.1;
_23 = [28824_u16,9415_u16,18555_u16,15766_u16,32293_u16,22187_u16,44396_u16,59920_u16];
_4 = [4643_u16,44243_u16,30323_u16,23742_u16,16651_u16,10345_u16,9477_u16,24607_u16];
_15.0.2 = _27;
_13.0 = [56335_u16,43596_u16,16555_u16,58374_u16,34769_u16,59435_u16,34134_u16,54029_u16];
_28 = [_27,_27,_15.0.2,_27];
_16 = _20;
_17 = _21.0 as i8;
_15.0.0 = _22;
_15.0.0 = _22;
_24.fld2.1 = 57186_u16 as f32;
_19 = core::ptr::addr_of!(_23);
_24.fld1 = _15.0.1;
Goto(bb10)
}
bb10 = {
_19 = core::ptr::addr_of!(_1);
match _21.0 {
0 => bb8,
1 => bb9,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb6,
6 => bb11,
13107 => bb13,
_ => bb12
}
}
bb11 = {
_15.0 = (_22, _24.fld1, '\u{518cc}');
_3 = [24183_u16,2983_u16,53638_u16,64916_u16,61331_u16,21032_u16,16753_u16,29235_u16];
RET = _23;
_27 = _15.0.2;
_15.0 = (_22, _24.fld1, _27);
_20 = _16;
_15.1 = &_24.fld2.1;
_23 = [28824_u16,9415_u16,18555_u16,15766_u16,32293_u16,22187_u16,44396_u16,59920_u16];
_4 = [4643_u16,44243_u16,30323_u16,23742_u16,16651_u16,10345_u16,9477_u16,24607_u16];
_15.0.2 = _27;
_13.0 = [56335_u16,43596_u16,16555_u16,58374_u16,34769_u16,59435_u16,34134_u16,54029_u16];
_28 = [_27,_27,_15.0.2,_27];
_16 = _20;
_17 = _21.0 as i8;
_15.0.0 = _22;
_15.0.0 = _22;
_24.fld2.1 = 57186_u16 as f32;
_19 = core::ptr::addr_of!(_23);
_24.fld1 = _15.0.1;
Goto(bb10)
}
bb12 = {
_14 = 9223372036854775807_isize;
_2 = [34237_u16,29950_u16,41158_u16,32290_u16,6860_u16,63263_u16,31947_u16,49517_u16];
_4 = _7;
_5 = _1;
RET = _5;
_12 = [222_u8,230_u8,191_u8,196_u8,153_u8,93_u8,49_u8];
_6 = [13163_u16,22107_u16,59236_u16,47623_u16,6507_u16,514_u16,59827_u16,65378_u16];
_7 = _1;
_4 = _2;
_14 = true as isize;
_4 = [11721_u16,33845_u16,15972_u16,46233_u16,21931_u16,4302_u16,610_u16,20630_u16];
_13.0 = [51471_u16,30906_u16,25843_u16,55520_u16,59890_u16,52192_u16,47904_u16,10588_u16];
_14 = (-86_isize);
_2 = _13.0;
_13.0 = [41318_u16,60073_u16,33718_u16,2663_u16,62163_u16,21626_u16,36779_u16,18427_u16];
_8 = [53407_u16,7351_u16,14845_u16,40658_u16,48958_u16,65372_u16,48518_u16,28873_u16];
_12 = [206_u8,156_u8,161_u8,179_u8,106_u8,166_u8,250_u8];
_3 = _4;
RET = _5;
_9 = [false,false,true,true,true,false,false];
_9 = [false,false,false,false,false,true,false];
_15.0.2 = '\u{37d85}';
_4 = [55095_u16,65220_u16,31503_u16,21470_u16,5815_u16,34275_u16,3024_u16,54621_u16];
match _14 {
0 => bb1,
1 => bb3,
340282366920938463463374607431768211370 => bb5,
_ => bb4
}
}
bb13 = {
_21.0 = (-13324_i16) * 12320_i16;
_13.0 = [50261_u16,51076_u16,10005_u16,14419_u16,5189_u16,36879_u16,47715_u16,59260_u16];
_1 = [58551_u16,58632_u16,43933_u16,56972_u16,44628_u16,2397_u16,16793_u16,11686_u16];
RET = _6;
_32 = [178_u8,16_u8,221_u8,99_u8,30_u8,88_u8,46_u8];
_31 = _27;
_22 = _15.0.0 * _15.0.0;
(*_19) = _8;
Goto(bb14)
}
bb14 = {
_24.fld1 = _15.0.1;
_22 = -_15.0.0;
(*_19) = [61468_u16,3727_u16,14477_u16,27636_u16,25440_u16,44295_u16,31642_u16,47556_u16];
_33 = [_27,_31,_27,_27];
_6 = _2;
_21 = (21292_i16,);
_8 = [58576_u16,43923_u16,49515_u16,29335_u16,47311_u16,57297_u16,35914_u16,24271_u16];
_24.fld2.2 = -_26;
_27 = _31;
_18 = [280238467920281421092668044294522190171_u128,98505988924438884250971776571889832162_u128,169458050158424250970150946107796761910_u128,111357604373517241634856236983596757762_u128];
_32 = [106_u8,105_u8,28_u8,154_u8,192_u8,90_u8,67_u8];
_1 = _13.0;
_16 = _20 + _20;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(9_usize, 21_usize, Move(_21), 2_usize, Move(_2), 1_usize, Move(_1), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(9_usize, 12_usize, Move(_12), 23_usize, Move(_23), 31_usize, Move(_31), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(9_usize, 16_usize, Move(_16), 28_usize, Move(_28), 3_usize, Move(_3), 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: char,mut _5: [u16; 8],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: [u16; 8],mut _9: [u16; 8],mut _10: [u16; 8],mut _11: [u16; 8]) -> f64 {
mir! {
type RET = f64;
let _12: (&'static i8,);
let _13: Adt73;
let _14: f32;
let _15: f32;
let _16: &'static [i128; 6];
let _17: Adt73;
let _18: *mut &'static mut u64;
let _19: *mut *const &'static u64;
let _20: isize;
let _21: u8;
let _22: isize;
let _23: ((&'static u64,), &'static mut ([u16; 8],), [usize; 4]);
let _24: *mut &'static mut u64;
let _25: i64;
let _26: &'static mut &'static u64;
let _27: f32;
let _28: [i128; 6];
let _29: Adt67;
let _30: (f64, u32, char);
let _31: &'static mut bool;
let _32: [usize; 4];
let _33: (f64, u32, char);
let _34: f64;
let _35: &'static isize;
let _36: isize;
let _37: i32;
let _38: *const &'static u64;
let _39: Adt31;
let _40: &'static [u16; 6];
let _41: ();
let _42: ();
{
RET = 8133_i16 as f64;
_3 = [4357_u16,61294_u16,22946_u16,28633_u16,58295_u16,30465_u16,62503_u16,25347_u16];
_2 = [5644_u16,57541_u16,24232_u16,39609_u16,20981_u16,3784_u16,21639_u16,49513_u16];
_5 = [52500_u16,59018_u16,30626_u16,49417_u16,43387_u16,36860_u16,32371_u16,51756_u16];
_5 = _11;
_8 = [39920_u16,41875_u16,36054_u16,27099_u16,54314_u16,11938_u16,62886_u16,56562_u16];
_9 = [22084_u16,57716_u16,39078_u16,53060_u16,27774_u16,61850_u16,54835_u16,13172_u16];
_3 = [64567_u16,52402_u16,36346_u16,28392_u16,42265_u16,43614_u16,10074_u16,2805_u16];
RET = 1_usize as f64;
_3 = [38782_u16,56300_u16,33542_u16,44743_u16,57309_u16,15061_u16,36727_u16,45268_u16];
_1 = [41706_u16,34925_u16,31797_u16,6945_u16,12126_u16,62957_u16,27273_u16,62858_u16];
Call(_8 = fn11(_10, _4, _10, _3, _1, _1, _9, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [14879_u16,2802_u16,314_u16,44730_u16,16452_u16,31222_u16,12877_u16,22844_u16];
_8 = [63501_u16,45957_u16,30276_u16,27534_u16,40790_u16,7464_u16,41573_u16,29967_u16];
RET = 74_isize as f64;
_5 = [2870_u16,23874_u16,18055_u16,31407_u16,50672_u16,41152_u16,14434_u16,3925_u16];
_8 = _3;
_5 = [51063_u16,59720_u16,28670_u16,19150_u16,8536_u16,58310_u16,26197_u16,15887_u16];
_8 = [6398_u16,22485_u16,42509_u16,16795_u16,4496_u16,36590_u16,42429_u16,28802_u16];
_5 = [48992_u16,48167_u16,49165_u16,11126_u16,60252_u16,53445_u16,1574_u16,32477_u16];
_14 = 4_usize as f32;
_14 = 1859870090653308793_u64 as f32;
_5 = [18810_u16,44005_u16,30532_u16,63257_u16,11444_u16,5992_u16,51499_u16,58282_u16];
_9 = [40024_u16,11685_u16,25285_u16,1613_u16,27953_u16,17532_u16,1519_u16,49243_u16];
_15 = -_14;
_15 = _14;
_7 = [61521_u16,33051_u16,44059_u16,63271_u16,23_u16,28962_u16,54547_u16,44258_u16];
Call(_3 = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = (-9223372036854775808_isize) as f64;
_1 = [14922_u16,51678_u16,23219_u16,4076_u16,62196_u16,8418_u16,21089_u16,6512_u16];
RET = 2782890428667446458_usize as f64;
_7 = [23673_u16,56663_u16,43558_u16,1538_u16,42983_u16,49764_u16,44742_u16,55134_u16];
RET = 9641621057793558549_u64 as f64;
_11 = [23025_u16,30413_u16,12163_u16,49927_u16,46018_u16,56613_u16,32042_u16,32054_u16];
_10 = [58866_u16,4069_u16,26005_u16,3403_u16,40109_u16,5108_u16,20320_u16,41667_u16];
_6 = [25358_u16,30695_u16,25026_u16,6437_u16,3614_u16,55773_u16,62129_u16,27311_u16];
_8 = _9;
_7 = [61654_u16,51503_u16,12070_u16,25272_u16,42158_u16,48964_u16,17602_u16,47326_u16];
_14 = _15;
_15 = 52_u8 as f32;
_10 = [35314_u16,58207_u16,21762_u16,28183_u16,25801_u16,48475_u16,28330_u16,35335_u16];
RET = 15108129012273186249_u64 as f64;
_6 = _10;
_8 = [12841_u16,47527_u16,42456_u16,34244_u16,23576_u16,18116_u16,14512_u16,37675_u16];
_1 = [39195_u16,823_u16,37966_u16,26066_u16,55552_u16,9398_u16,24588_u16,24313_u16];
_9 = [22188_u16,55636_u16,44378_u16,8300_u16,28480_u16,19306_u16,53097_u16,24697_u16];
_4 = '\u{aa34c}';
_9 = [39549_u16,821_u16,54788_u16,35321_u16,46493_u16,43627_u16,9012_u16,3255_u16];
_14 = -_15;
_20 = (-61_isize);
_8 = _10;
_7 = _8;
_10 = _7;
Goto(bb3)
}
bb3 = {
RET = 1_usize as f64;
_11 = [23613_u16,33535_u16,64600_u16,6162_u16,7037_u16,31554_u16,37808_u16,45962_u16];
_11 = _9;
_14 = _15 + _15;
_8 = [33282_u16,5908_u16,52486_u16,8030_u16,56377_u16,26446_u16,29504_u16,38312_u16];
_7 = [54716_u16,60270_u16,11265_u16,11238_u16,1000_u16,54184_u16,49218_u16,18306_u16];
_20 = !5_isize;
Goto(bb4)
}
bb4 = {
_3 = [23690_u16,11861_u16,44822_u16,53238_u16,665_u16,30906_u16,26441_u16,38606_u16];
_10 = [15675_u16,18536_u16,45527_u16,30348_u16,4269_u16,62480_u16,24438_u16,55762_u16];
_14 = 26575_i16 as f32;
_20 = (-81_isize) & (-9223372036854775808_isize);
Goto(bb5)
}
bb5 = {
_15 = -_14;
_1 = [53969_u16,4852_u16,58834_u16,62630_u16,19715_u16,8171_u16,21391_u16,21260_u16];
_10 = _9;
_22 = -_20;
_21 = 226_u8 + 69_u8;
_6 = _1;
RET = (-121_i8) as f64;
RET = 1145_i16 as f64;
_23.2 = [16651659690495312143_usize,15237827789843094283_usize,17526324099586939368_usize,11626418893324819082_usize];
_21 = (-145225537471919161756468030585423750973_i128) as u8;
_23.2 = [1_usize,7_usize,13918152255228420700_usize,7_usize];
_1 = [41240_u16,26592_u16,5006_u16,13482_u16,40303_u16,58722_u16,52770_u16,19659_u16];
_9 = _1;
_14 = RET as f32;
_3 = [22580_u16,61711_u16,48579_u16,52408_u16,37029_u16,32370_u16,3774_u16,42357_u16];
_8 = [5888_u16,11316_u16,58137_u16,35838_u16,63519_u16,17655_u16,27303_u16,53551_u16];
_6 = [51988_u16,44892_u16,62759_u16,36610_u16,40010_u16,4231_u16,40341_u16,15101_u16];
_6 = [22687_u16,52748_u16,19441_u16,23903_u16,16686_u16,24199_u16,29649_u16,52550_u16];
_10 = _5;
_5 = _7;
_14 = _15 * _15;
_5 = _7;
_5 = [38106_u16,17102_u16,5242_u16,37806_u16,12845_u16,62924_u16,39698_u16,23560_u16];
_11 = [51494_u16,46568_u16,1415_u16,7123_u16,12269_u16,19194_u16,55388_u16,1085_u16];
RET = (-75168149788064773564095765675065312499_i128) as f64;
_8 = [20440_u16,25672_u16,46335_u16,7499_u16,56979_u16,58657_u16,44788_u16,11831_u16];
Goto(bb6)
}
bb6 = {
_20 = _22;
_21 = 98_u8;
_10 = [44341_u16,11448_u16,57233_u16,13715_u16,44190_u16,10192_u16,2204_u16,63168_u16];
_21 = 206_u8 + 202_u8;
_15 = -_14;
_9 = [20010_u16,23419_u16,5210_u16,15730_u16,4260_u16,22407_u16,54266_u16,22869_u16];
_3 = _10;
_25 = (-4969780251149980950_i64);
_11 = _10;
_20 = _22;
_23.2 = [5864686996150655436_usize,14535031648712304716_usize,0_usize,2_usize];
_4 = '\u{c0e5b}';
_11 = _2;
_1 = [23924_u16,64187_u16,52626_u16,20078_u16,44289_u16,30452_u16,58151_u16,30846_u16];
_20 = -_22;
_25 = !50394109368031487_i64;
_30.1 = !1315178286_u32;
_30.2 = _4;
_30.0 = _14 as f64;
_28 = [106010700982757356468008440973642845126_i128,43812890733139592961552456529112194149_i128,2761364440942270251475467756886005462_i128,55697029010136391211749987361273199630_i128,94807740342445541883608790809791141241_i128,135353023156627707437074448588951254348_i128];
_29 = Adt67::Variant1 { fld0: _22 };
Goto(bb7)
}
bb7 = {
_27 = _15;
_2 = [3068_u16,28550_u16,33294_u16,31797_u16,15092_u16,48690_u16,48231_u16,50388_u16];
_30.1 = 1183342860_u32;
_7 = _5;
SetDiscriminant(_29, 0);
place!(Field::<[u8; 6]>(Variant(_29, 0), 5)) = [_21,_21,_21,_21,_21,_21];
place!(Field::<i16>(Variant(_29, 0), 4)) = (-5369_i16);
_4 = _30.2;
place!(Field::<[bool; 7]>(Variant(_29, 0), 2)) = [false,false,true,true,false,true,true];
_16 = &_28;
_9 = [27845_u16,8230_u16,37298_u16,32054_u16,18187_u16,53152_u16,48901_u16,3097_u16];
_8 = [3099_u16,15594_u16,32939_u16,58272_u16,41929_u16,56848_u16,49296_u16,65106_u16];
_20 = _22 | _22;
_30 = (RET, 746905848_u32, _4);
match _30.1 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
746905848 => bb13,
_ => bb12
}
}
bb8 = {
_20 = _22;
_21 = 98_u8;
_10 = [44341_u16,11448_u16,57233_u16,13715_u16,44190_u16,10192_u16,2204_u16,63168_u16];
_21 = 206_u8 + 202_u8;
_15 = -_14;
_9 = [20010_u16,23419_u16,5210_u16,15730_u16,4260_u16,22407_u16,54266_u16,22869_u16];
_3 = _10;
_25 = (-4969780251149980950_i64);
_11 = _10;
_20 = _22;
_23.2 = [5864686996150655436_usize,14535031648712304716_usize,0_usize,2_usize];
_4 = '\u{c0e5b}';
_11 = _2;
_1 = [23924_u16,64187_u16,52626_u16,20078_u16,44289_u16,30452_u16,58151_u16,30846_u16];
_20 = -_22;
_25 = !50394109368031487_i64;
_30.1 = !1315178286_u32;
_30.2 = _4;
_30.0 = _14 as f64;
_28 = [106010700982757356468008440973642845126_i128,43812890733139592961552456529112194149_i128,2761364440942270251475467756886005462_i128,55697029010136391211749987361273199630_i128,94807740342445541883608790809791141241_i128,135353023156627707437074448588951254348_i128];
_29 = Adt67::Variant1 { fld0: _22 };
Goto(bb7)
}
bb9 = {
_15 = -_14;
_1 = [53969_u16,4852_u16,58834_u16,62630_u16,19715_u16,8171_u16,21391_u16,21260_u16];
_10 = _9;
_22 = -_20;
_21 = 226_u8 + 69_u8;
_6 = _1;
RET = (-121_i8) as f64;
RET = 1145_i16 as f64;
_23.2 = [16651659690495312143_usize,15237827789843094283_usize,17526324099586939368_usize,11626418893324819082_usize];
_21 = (-145225537471919161756468030585423750973_i128) as u8;
_23.2 = [1_usize,7_usize,13918152255228420700_usize,7_usize];
_1 = [41240_u16,26592_u16,5006_u16,13482_u16,40303_u16,58722_u16,52770_u16,19659_u16];
_9 = _1;
_14 = RET as f32;
_3 = [22580_u16,61711_u16,48579_u16,52408_u16,37029_u16,32370_u16,3774_u16,42357_u16];
_8 = [5888_u16,11316_u16,58137_u16,35838_u16,63519_u16,17655_u16,27303_u16,53551_u16];
_6 = [51988_u16,44892_u16,62759_u16,36610_u16,40010_u16,4231_u16,40341_u16,15101_u16];
_6 = [22687_u16,52748_u16,19441_u16,23903_u16,16686_u16,24199_u16,29649_u16,52550_u16];
_10 = _5;
_5 = _7;
_14 = _15 * _15;
_5 = _7;
_5 = [38106_u16,17102_u16,5242_u16,37806_u16,12845_u16,62924_u16,39698_u16,23560_u16];
_11 = [51494_u16,46568_u16,1415_u16,7123_u16,12269_u16,19194_u16,55388_u16,1085_u16];
RET = (-75168149788064773564095765675065312499_i128) as f64;
_8 = [20440_u16,25672_u16,46335_u16,7499_u16,56979_u16,58657_u16,44788_u16,11831_u16];
Goto(bb6)
}
bb10 = {
_3 = [23690_u16,11861_u16,44822_u16,53238_u16,665_u16,30906_u16,26441_u16,38606_u16];
_10 = [15675_u16,18536_u16,45527_u16,30348_u16,4269_u16,62480_u16,24438_u16,55762_u16];
_14 = 26575_i16 as f32;
_20 = (-81_isize) & (-9223372036854775808_isize);
Goto(bb5)
}
bb11 = {
RET = 1_usize as f64;
_11 = [23613_u16,33535_u16,64600_u16,6162_u16,7037_u16,31554_u16,37808_u16,45962_u16];
_11 = _9;
_14 = _15 + _15;
_8 = [33282_u16,5908_u16,52486_u16,8030_u16,56377_u16,26446_u16,29504_u16,38312_u16];
_7 = [54716_u16,60270_u16,11265_u16,11238_u16,1000_u16,54184_u16,49218_u16,18306_u16];
_20 = !5_isize;
Goto(bb4)
}
bb12 = {
RET = (-9223372036854775808_isize) as f64;
_1 = [14922_u16,51678_u16,23219_u16,4076_u16,62196_u16,8418_u16,21089_u16,6512_u16];
RET = 2782890428667446458_usize as f64;
_7 = [23673_u16,56663_u16,43558_u16,1538_u16,42983_u16,49764_u16,44742_u16,55134_u16];
RET = 9641621057793558549_u64 as f64;
_11 = [23025_u16,30413_u16,12163_u16,49927_u16,46018_u16,56613_u16,32042_u16,32054_u16];
_10 = [58866_u16,4069_u16,26005_u16,3403_u16,40109_u16,5108_u16,20320_u16,41667_u16];
_6 = [25358_u16,30695_u16,25026_u16,6437_u16,3614_u16,55773_u16,62129_u16,27311_u16];
_8 = _9;
_7 = [61654_u16,51503_u16,12070_u16,25272_u16,42158_u16,48964_u16,17602_u16,47326_u16];
_14 = _15;
_15 = 52_u8 as f32;
_10 = [35314_u16,58207_u16,21762_u16,28183_u16,25801_u16,48475_u16,28330_u16,35335_u16];
RET = 15108129012273186249_u64 as f64;
_6 = _10;
_8 = [12841_u16,47527_u16,42456_u16,34244_u16,23576_u16,18116_u16,14512_u16,37675_u16];
_1 = [39195_u16,823_u16,37966_u16,26066_u16,55552_u16,9398_u16,24588_u16,24313_u16];
_9 = [22188_u16,55636_u16,44378_u16,8300_u16,28480_u16,19306_u16,53097_u16,24697_u16];
_4 = '\u{aa34c}';
_9 = [39549_u16,821_u16,54788_u16,35321_u16,46493_u16,43627_u16,9012_u16,3255_u16];
_14 = -_15;
_20 = (-61_isize);
_8 = _10;
_7 = _8;
_10 = _7;
Goto(bb3)
}
bb13 = {
_33 = (RET, _30.1, _4);
place!(Field::<(char,)>(Variant(_29, 0), 3)).0 = _33.2;
_33.2 = _4;
_9 = _11;
_35 = &_22;
_2 = [24147_u16,10750_u16,13400_u16,1803_u16,7494_u16,50637_u16,12471_u16,24804_u16];
_5 = [29719_u16,31018_u16,22726_u16,35875_u16,7285_u16,35520_u16,9159_u16,48318_u16];
place!(Field::<(char,)>(Variant(_29, 0), 3)) = (_30.2,);
RET = 39_i8 as f64;
RET = -_33.0;
_9 = [5151_u16,41137_u16,12193_u16,46129_u16,28599_u16,27640_u16,47969_u16,27229_u16];
_37 = _20 as i32;
_3 = [34917_u16,10068_u16,25240_u16,37187_u16,52232_u16,32532_u16,59191_u16,9022_u16];
_32 = [1146423761924444479_usize,7852477644017698994_usize,1408770957371889489_usize,2_usize];
_32 = [3_usize,7630751073643838256_usize,2_usize,9126774764082316923_usize];
_11 = [34810_u16,8589_u16,28619_u16,18668_u16,63372_u16,37835_u16,17346_u16,62027_u16];
_16 = &(*_16);
place!(Field::<i16>(Variant(_29, 0), 4)) = 16708_i16;
_36 = _20 | _20;
_30.2 = Field::<(char,)>(Variant(_29, 0), 3).0;
_33 = _30;
_25 = 9052379804873893101_i64 + (-7299197437413150605_i64);
_1 = [16989_u16,6609_u16,16862_u16,47890_u16,43786_u16,31055_u16,58568_u16,1620_u16];
_37 = !1050302621_i32;
_33.0 = -RET;
match _30.1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb5,
746905848 => bb15,
_ => bb14
}
}
bb14 = {
_15 = -_14;
_1 = [53969_u16,4852_u16,58834_u16,62630_u16,19715_u16,8171_u16,21391_u16,21260_u16];
_10 = _9;
_22 = -_20;
_21 = 226_u8 + 69_u8;
_6 = _1;
RET = (-121_i8) as f64;
RET = 1145_i16 as f64;
_23.2 = [16651659690495312143_usize,15237827789843094283_usize,17526324099586939368_usize,11626418893324819082_usize];
_21 = (-145225537471919161756468030585423750973_i128) as u8;
_23.2 = [1_usize,7_usize,13918152255228420700_usize,7_usize];
_1 = [41240_u16,26592_u16,5006_u16,13482_u16,40303_u16,58722_u16,52770_u16,19659_u16];
_9 = _1;
_14 = RET as f32;
_3 = [22580_u16,61711_u16,48579_u16,52408_u16,37029_u16,32370_u16,3774_u16,42357_u16];
_8 = [5888_u16,11316_u16,58137_u16,35838_u16,63519_u16,17655_u16,27303_u16,53551_u16];
_6 = [51988_u16,44892_u16,62759_u16,36610_u16,40010_u16,4231_u16,40341_u16,15101_u16];
_6 = [22687_u16,52748_u16,19441_u16,23903_u16,16686_u16,24199_u16,29649_u16,52550_u16];
_10 = _5;
_5 = _7;
_14 = _15 * _15;
_5 = _7;
_5 = [38106_u16,17102_u16,5242_u16,37806_u16,12845_u16,62924_u16,39698_u16,23560_u16];
_11 = [51494_u16,46568_u16,1415_u16,7123_u16,12269_u16,19194_u16,55388_u16,1085_u16];
RET = (-75168149788064773564095765675065312499_i128) as f64;
_8 = [20440_u16,25672_u16,46335_u16,7499_u16,56979_u16,58657_u16,44788_u16,11831_u16];
Goto(bb6)
}
bb15 = {
_23.2 = [5_usize,2_usize,3_usize,7_usize];
place!(Field::<*const u8>(Variant(_29, 0), 0)) = core::ptr::addr_of!(_21);
_34 = -RET;
Goto(bb16)
}
bb16 = {
Call(_41 = dump_var(10_usize, 9_usize, Move(_9), 28_usize, Move(_28), 4_usize, Move(_4), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(10_usize, 32_usize, Move(_32), 20_usize, Move(_20), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(10_usize, 21_usize, Move(_21), 42_usize, _42, 42_usize, _42, 42_usize, _42), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [u16; 8],mut _2: char,mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [u16; 8],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: [u16; 8]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _9: (i16,);
let _10: (f32, bool, &'static mut u16, [bool; 4]);
let _11: f64;
let _12: usize;
let _13: char;
let _14: bool;
let _15: ([u16; 8],);
let _16: i16;
let _17: isize;
let _18: ([u16; 8], Adt52);
let _19: ([u16; 8], Adt52);
let _20: i16;
let _21: f64;
let _22: (&'static mut bool, &'static u64, char, i16);
let _23: [u8; 6];
let _24: *mut &'static mut u64;
let _25: u128;
let _26: ((f64, u32, char), &'static f32, &'static mut &'static u64, Adt52);
let _27: u64;
let _28: i32;
let _29: &'static [u16; 6];
let _30: u32;
let _31: &'static mut *mut u8;
let _32: Adt31;
let _33: &'static mut ([u16; 8],);
let _34: char;
let _35: f32;
let _36: u8;
let _37: u8;
let _38: *mut *mut f64;
let _39: isize;
let _40: Adt52;
let _41: [usize; 1];
let _42: usize;
let _43: isize;
let _44: *mut u8;
let _45: ([u16; 8], Adt52);
let _46: usize;
let _47: ();
let _48: ();
{
_1 = [26549_u16,39618_u16,8272_u16,32201_u16,63220_u16,28163_u16,45658_u16,46708_u16];
_8 = [30215_u16,23375_u16,4493_u16,21126_u16,23478_u16,18729_u16,53384_u16,31291_u16];
_10.0 = 16861111402524742416_u64 as f32;
RET = [22450_u16,65231_u16,20498_u16,3506_u16,31658_u16,33163_u16,44204_u16,51953_u16];
RET = [64712_u16,19528_u16,10648_u16,43984_u16,3085_u16,38897_u16,23287_u16,61854_u16];
Call(_10.0 = fn12(_4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [48974_u16,57393_u16,43503_u16,60282_u16,10832_u16,10588_u16,813_u16,45074_u16];
_8 = [43865_u16,33092_u16,53500_u16,15866_u16,6867_u16,60084_u16,52045_u16,1376_u16];
_7 = [29313_u16,22891_u16,19519_u16,23860_u16,12059_u16,29162_u16,8884_u16,44054_u16];
_5 = [31214_u16,19775_u16,53146_u16,36746_u16,58596_u16,95_u16,30727_u16,31549_u16];
RET = _4;
_7 = RET;
_3 = [58481_u16,52174_u16,35704_u16,53135_u16,60411_u16,4089_u16,54387_u16,30254_u16];
_6 = [37735_u16,54486_u16,65213_u16,15213_u16,65385_u16,38552_u16,57543_u16,31365_u16];
_9 = (21219_i16,);
RET = [98_u16,13314_u16,40059_u16,34404_u16,63593_u16,23321_u16,40829_u16,58200_u16];
RET = _7;
_10.3 = [true,false,true,true];
_10.0 = (-8_i8) as f32;
_9.0 = -(-14315_i16);
RET = _1;
_6 = RET;
_12 = !4786950937814139890_usize;
_10.3 = [true,true,true,false];
_5 = [8570_u16,1565_u16,60328_u16,61412_u16,23255_u16,24993_u16,62820_u16,6293_u16];
_10.3 = [true,false,true,false];
_8 = [1775_u16,27529_u16,27560_u16,18104_u16,33370_u16,48044_u16,48393_u16,54172_u16];
RET = _7;
_10.1 = _9.0 != _9.0;
_10.0 = 254599225985146021628608067389099726465_u128 as f32;
_10.0 = (-5454751084372778774_i64) as f32;
_6 = [11248_u16,34506_u16,57790_u16,46030_u16,13035_u16,50714_u16,47904_u16,43373_u16];
_11 = 13555866414095268903_u64 as f64;
_8 = [29312_u16,27908_u16,19694_u16,40988_u16,1318_u16,10295_u16,48353_u16,65017_u16];
Goto(bb2)
}
bb2 = {
RET = [28223_u16,18369_u16,32036_u16,61428_u16,50149_u16,58260_u16,2728_u16,3139_u16];
RET = _3;
_15.0 = [61356_u16,59107_u16,55440_u16,36471_u16,6568_u16,4034_u16,63224_u16,30117_u16];
_14 = _10.1;
_3 = [33377_u16,56083_u16,32668_u16,25477_u16,35535_u16,64916_u16,62553_u16,61305_u16];
_9 = ((-29668_i16),);
_6 = _3;
_8 = [1264_u16,48395_u16,62989_u16,46806_u16,2332_u16,57182_u16,39696_u16,57842_u16];
_18.0 = [12465_u16,13349_u16,47859_u16,63656_u16,10876_u16,35895_u16,20094_u16,55329_u16];
_16 = -_9.0;
_12 = 1_usize >> _9.0;
_15 = (_4,);
_14 = _10.1;
_13 = _2;
_20 = _16;
_18.0 = [25553_u16,26701_u16,3471_u16,5153_u16,54722_u16,41062_u16,15738_u16,300_u16];
_16 = _20;
_10.1 = _14;
_4 = [30941_u16,9421_u16,45142_u16,52641_u16,58706_u16,28613_u16,6586_u16,41979_u16];
_15 = (_6,);
_10.3 = [_14,_10.1,_10.1,_14];
Goto(bb3)
}
bb3 = {
Goto(bb4)
}
bb4 = {
_22.0 = &mut _10.1;
_18.0 = [26353_u16,52806_u16,22853_u16,40124_u16,2503_u16,56886_u16,22991_u16,3498_u16];
_25 = 229683818750481433790695730813668005500_u128;
_8 = _3;
_22.3 = (-94462078_i32) as i16;
_16 = !_9.0;
_17 = (-38_isize) >> _9.0;
_16 = !_22.3;
_9 = (_22.3,);
_26.0.0 = -_11;
_26.0.2 = _2;
_26.1 = &_10.0;
_26.0.1 = 2036482566_u32;
Goto(bb5)
}
bb5 = {
_2 = _13;
_22.2 = _2;
_16 = -_22.3;
_26.0.0 = _11 + _11;
_16 = _9.0;
_26.0.1 = !683405343_u32;
_25 = 114947662450800821383069629427362633819_u128 & 314982093829497605628588472894933889994_u128;
_10.3 = [_14,_10.1,_14,_10.1];
_12 = 0_usize >> _25;
_26.0 = (_11, 736808900_u32, _2);
_20 = _9.0;
_30 = 99_u8 as u32;
_26.0 = (_11, _30, _22.2);
_32.fld0.0 = _26.0.0 * _26.0.0;
_32.fld0 = _26.0;
_16 = _20;
_12 = 2_usize + 7_usize;
Goto(bb6)
}
bb6 = {
_27 = !1774806777473553758_u64;
_12 = !7155000498193233593_usize;
_27 = _17 as u64;
_19.0 = [5713_u16,42795_u16,48977_u16,13288_u16,59069_u16,35640_u16,61012_u16,28951_u16];
_6 = [22966_u16,27314_u16,60669_u16,6734_u16,2023_u16,59960_u16,33938_u16,53771_u16];
_4 = [44099_u16,35076_u16,41943_u16,8080_u16,64907_u16,15952_u16,55546_u16,15918_u16];
_12 = !114239400532666394_usize;
_26.0.1 = _14 as u32;
_28 = _17 as i32;
Goto(bb7)
}
bb7 = {
_23 = [238_u8,147_u8,40_u8,39_u8,181_u8,194_u8];
_4 = [54442_u16,59269_u16,6551_u16,63435_u16,52680_u16,24719_u16,51920_u16,48297_u16];
_20 = _16 ^ _9.0;
_26.0 = _32.fld0;
Goto(bb8)
}
bb8 = {
_25 = 252761665246984479130178422031302033058_u128 * 40016842585345224743172825604273219395_u128;
_22.2 = _2;
_16 = -_9.0;
_32.fld0 = (_26.0.0, _26.0.1, _13);
_10.3 = [_10.1,_10.1,_10.1,_14];
_12 = 13172023376253172662_usize ^ 1325719470140596048_usize;
_8 = _6;
_8 = [25611_u16,19216_u16,59636_u16,55453_u16,60222_u16,14132_u16,29447_u16,19030_u16];
_21 = _17 as f64;
_33 = &mut _15;
_20 = -_22.3;
_32.fld0.2 = _2;
_32.fld0 = _26.0;
_1 = _5;
_33 = &mut (*_33);
_9 = (_22.3,);
_34 = _26.0.2;
Goto(bb9)
}
bb9 = {
(*_33).0 = [37000_u16,53791_u16,1996_u16,23067_u16,15269_u16,33828_u16,29336_u16,5298_u16];
_11 = 218_u8 as f64;
_2 = _34;
_22.3 = !_16;
_32 = Adt31 { fld0: _26.0 };
_6 = [55257_u16,56737_u16,44299_u16,4748_u16,49721_u16,35115_u16,11210_u16,31685_u16];
_32 = Adt31 { fld0: _26.0 };
_15.0 = [48064_u16,64410_u16,58523_u16,49389_u16,6985_u16,15939_u16,27298_u16,22297_u16];
_9 = (_16,);
_26.0.1 = _32.fld0.1;
Goto(bb10)
}
bb10 = {
_18.0 = [59559_u16,59410_u16,13420_u16,1320_u16,48977_u16,38631_u16,505_u16,59157_u16];
_34 = _32.fld0.2;
_22.0 = &mut _14;
_15.0 = RET;
_12 = 9874937285941944226_usize;
Goto(bb11)
}
bb11 = {
_12 = _25 as usize;
_22.1 = &_27;
_26.0 = (_21, _32.fld0.1, _32.fld0.2);
_36 = _27 as u8;
_22.0 = &mut _14;
_17 = !9223372036854775807_isize;
_6 = _5;
_26.0 = _32.fld0;
_32 = Adt31 { fld0: _26.0 };
_17 = _9.0 as isize;
_4 = [54796_u16,21313_u16,59496_u16,64075_u16,19262_u16,59750_u16,53603_u16,54931_u16];
_27 = _28 as u64;
_22.0 = &mut _10.1;
_5 = [56421_u16,41182_u16,4363_u16,40365_u16,56252_u16,14077_u16,990_u16,34080_u16];
_7 = [23989_u16,55950_u16,51607_u16,49591_u16,25532_u16,8034_u16,37608_u16,62647_u16];
_25 = 11808050168691980800864482289668250856_u128 - 147701903305878412035598354866036455213_u128;
_37 = _36 + _36;
_26.0.2 = _22.2;
_28 = _12 as i32;
_26.0.2 = _13;
_2 = _32.fld0.2;
_18.0 = [43805_u16,42824_u16,37592_u16,59953_u16,32640_u16,19059_u16,33727_u16,47290_u16];
Goto(bb12)
}
bb12 = {
_11 = _32.fld0.0;
_26.0.0 = _11 + _11;
_39 = !_17;
_12 = 4736804554244400514_i64 as usize;
_11 = _36 as f64;
_32.fld0 = _26.0;
_8 = [645_u16,3367_u16,10291_u16,27089_u16,19170_u16,19109_u16,44551_u16,29416_u16];
_26.2 = &mut _22.1;
_32.fld0 = (_26.0.0, _30, _2);
_7 = _6;
_10.3 = [_10.1,_10.1,_10.1,_10.1];
_26.0 = (_21, _30, _34);
_23 = [_36,_36,_36,_36,_36,_36];
_41 = [_12];
_22.0 = &mut _14;
Goto(bb13)
}
bb13 = {
_27 = 7179946730284825095_u64 * 12606547637311644947_u64;
_2 = _22.2;
_10.3 = [_10.1,_10.1,_14,_14];
_22.3 = -_20;
_34 = _22.2;
Call(_32.fld0.0 = fn14(_4, _3, _7, _18.0, _5, _28, _15.0, _11, _10.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_26.0.0 = -_11;
_32.fld0.2 = _26.0.2;
_26.0 = (_32.fld0.0, _30, _22.2);
_35 = -_10.0;
_10.1 = _14;
_10.1 = _14;
_9 = (_20,);
_34 = _22.2;
_20 = _9.0;
_32 = Adt31 { fld0: _26.0 };
_28 = !418339387_i32;
_10.0 = -_35;
_26.0.2 = _32.fld0.2;
_10.0 = _35;
_33 = &mut _15;
_26.2 = &mut _22.1;
_26.0 = (_32.fld0.0, _32.fld0.1, _32.fld0.2);
_10.3 = [_14,_14,_10.1,_10.1];
_42 = !_12;
_15.0 = [28845_u16,45285_u16,18962_u16,47716_u16,54780_u16,50712_u16,10644_u16,59488_u16];
_35 = _10.0 - _10.0;
_11 = _32.fld0.1 as f64;
_14 = !_10.1;
_8 = [23104_u16,40657_u16,2550_u16,63522_u16,61296_u16,48664_u16,10883_u16,46859_u16];
_26.0.1 = _32.fld0.1 << _42;
_12 = (-125820950189518096179094888659333425252_i128) as usize;
_26.0.0 = _21 + _32.fld0.0;
_16 = _9.0 | _22.3;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(11_usize, 27_usize, Move(_27), 30_usize, Move(_30), 15_usize, Move(_15), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(11_usize, 5_usize, Move(_5), 34_usize, Move(_34), 1_usize, Move(_1), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(11_usize, 28_usize, Move(_28), 17_usize, Move(_17), 4_usize, Move(_4), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(11_usize, 8_usize, Move(_8), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [u16; 8]) -> f32 {
mir! {
type RET = f32;
let _2: [usize; 1];
let _3: [u16; 6];
let _4: bool;
let _5: isize;
let _6: isize;
let _7: char;
let _8: char;
let _9: bool;
let _10: i8;
let _11: *mut [u128; 5];
let _12: Adt52;
let _13: *const &'static mut &'static mut bool;
let _14: (*mut u8, f32, i32);
let _15: f32;
let _16: u128;
let _17: u8;
let _18: isize;
let _19: [u32; 3];
let _20: (*mut u8, f32, i32);
let _21: &'static mut *mut u8;
let _22: f32;
let _23: [u16; 6];
let _24: usize;
let _25: &'static mut isize;
let _26: isize;
let _27: isize;
let _28: i64;
let _29: *mut u8;
let _30: Adt82;
let _31: *const &'static mut &'static mut bool;
let _32: f64;
let _33: &'static [u16; 6];
let _34: bool;
let _35: char;
let _36: i8;
let _37: usize;
let _38: ((f64, u32, char), &'static f32, &'static mut &'static u64, Adt52);
let _39: char;
let _40: ();
let _41: ();
{
RET = 22_i8 as f32;
_2 = [6_usize];
RET = 25874_u16 as f32;
RET = 503944424_u32 as f32;
RET = 1287387711_u32 as f32;
_2 = [16139101277726842261_usize];
_2 = [1_usize];
_2 = [1_usize];
RET = 19834_u16 as f32;
_3 = [1905_u16,29819_u16,44325_u16,35594_u16,32528_u16,42480_u16];
RET = (-35351927204859074870405868771732970610_i128) as f32;
_4 = RET != RET;
_4 = !true;
_5 = (-9223372036854775808_isize);
_2 = [13648023493515652943_usize];
RET = 7824289370647852753_u64 as f32;
Goto(bb1)
}
bb1 = {
_4 = _5 == _5;
_7 = '\u{5f6a2}';
_1 = [2775_u16,18981_u16,50189_u16,48537_u16,31464_u16,24186_u16,36658_u16,56400_u16];
RET = 116_u8 as f32;
_6 = RET as isize;
_8 = _7;
_8 = _7;
_6 = _5;
_7 = _8;
_1 = [64733_u16,7032_u16,61251_u16,2285_u16,44816_u16,25072_u16,46617_u16,57498_u16];
_2 = [5_usize];
_5 = (-22_i8) as isize;
_5 = 18352977034452621103_usize as isize;
_3 = [26370_u16,47424_u16,57701_u16,64200_u16,54497_u16,55671_u16];
_3 = [2781_u16,1923_u16,31611_u16,7349_u16,30196_u16,8853_u16];
_5 = 133980132681888891288486983956837176526_u128 as isize;
RET = 131_u8 as f32;
RET = 19399_u16 as f32;
_3 = [46151_u16,28172_u16,56090_u16,24628_u16,43710_u16,2764_u16];
_3 = [35374_u16,24429_u16,58164_u16,5491_u16,33585_u16,42319_u16];
Goto(bb2)
}
bb2 = {
_2 = [1582661094032921019_usize];
_7 = _8;
_3 = [38_u16,19165_u16,10259_u16,49428_u16,31461_u16,8960_u16];
_8 = _7;
RET = (-5584232311422847971_i64) as f32;
_1 = [17932_u16,42330_u16,37680_u16,11599_u16,7415_u16,43290_u16,13281_u16,24947_u16];
_9 = _4 & _4;
_10 = !18_i8;
_5 = _6 & _6;
_3 = [39036_u16,64648_u16,48447_u16,49966_u16,6891_u16,36106_u16];
_9 = _4 & _4;
_5 = _6;
_1 = [28872_u16,56498_u16,59475_u16,29872_u16,8547_u16,44933_u16,46852_u16,52710_u16];
RET = (-1262965617_i32) as f32;
_6 = -_5;
_8 = _7;
_9 = !_4;
_5 = _6;
_3 = [51075_u16,41044_u16,56487_u16,46612_u16,27087_u16,20136_u16];
_3 = [13665_u16,39225_u16,25513_u16,63326_u16,14218_u16,51659_u16];
_1 = [55822_u16,17463_u16,38743_u16,32644_u16,36791_u16,49755_u16,27202_u16,38620_u16];
Call(_9 = fn13(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _5 as f32;
_10 = (-39_i8);
_8 = _7;
_9 = _5 >= _6;
_1 = [57862_u16,46124_u16,8282_u16,6537_u16,35308_u16,54505_u16,31245_u16,642_u16];
RET = (-21581_i16) as f32;
RET = _6 as f32;
_10 = -(-57_i8);
_3 = [38115_u16,8940_u16,21742_u16,35097_u16,54680_u16,39743_u16];
RET = (-3926634907643676053577260102227466955_i128) as f32;
_8 = _7;
RET = 7_usize as f32;
_5 = _6;
_3 = [9590_u16,33655_u16,48727_u16,11234_u16,24860_u16,54337_u16];
_15 = RET;
_10 = !(-35_i8);
_16 = !86348616769866523007779181636264528025_u128;
_14.1 = _15 + _15;
Goto(bb4)
}
bb4 = {
_14.2 = (-1449282837_i32);
_1 = [36807_u16,64653_u16,28423_u16,51847_u16,30705_u16,28311_u16,11015_u16,35548_u16];
_5 = _6;
RET = _14.1;
_14.2 = 3344381842565654298_i64 as i32;
_15 = RET;
_7 = _8;
_15 = -RET;
RET = -_14.1;
_5 = -_6;
_16 = 49496357064857188757231177412216267672_u128;
_4 = _9 | _9;
_7 = _8;
_1 = [46529_u16,27024_u16,45458_u16,31804_u16,59412_u16,26153_u16,14976_u16,55699_u16];
_14.0 = core::ptr::addr_of_mut!(_17);
_17 = 93_u8 - 209_u8;
_14.2 = -1761290586_i32;
_14.0 = core::ptr::addr_of_mut!(_17);
_15 = _14.1 - _14.1;
_20.2 = _14.2;
_6 = _5 & _5;
_16 = 1156726577138375371396166272048967518_u128;
_10 = (-96_i8);
_14.2 = _20.2;
RET = 59510_u16 as f32;
Call(_15 = core::intrinsics::transmute(_7), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_20.0 = Move(_14.0);
_1 = [23376_u16,36993_u16,54898_u16,49733_u16,40491_u16,30727_u16,1211_u16,22021_u16];
_4 = _9;
_14.0 = core::ptr::addr_of_mut!(_17);
_20 = Move(_14);
_5 = _6;
_19 = [750786406_u32,4245091519_u32,1914162415_u32];
_20.1 = RET;
RET = 3410_u16 as f32;
_14.0 = core::ptr::addr_of_mut!(_17);
_18 = -_6;
_21 = &mut _14.0;
_2 = [2_usize];
_18 = _6 >> _20.2;
_14 = Move(_20);
_23 = [4387_u16,20299_u16,19188_u16,2981_u16,25632_u16,14839_u16];
_18 = _5 & _5;
_2 = [7_usize];
_21 = &mut _14.0;
_24 = 2_usize >> _5;
_21 = &mut (*_21);
(*_21) = core::ptr::addr_of_mut!(_17);
Goto(bb6)
}
bb6 = {
_18 = _6 ^ _5;
match _10 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb9,
340282366920938463463374607431768211360 => bb11,
_ => bb10
}
}
bb7 = {
_20.0 = Move(_14.0);
_1 = [23376_u16,36993_u16,54898_u16,49733_u16,40491_u16,30727_u16,1211_u16,22021_u16];
_4 = _9;
_14.0 = core::ptr::addr_of_mut!(_17);
_20 = Move(_14);
_5 = _6;
_19 = [750786406_u32,4245091519_u32,1914162415_u32];
_20.1 = RET;
RET = 3410_u16 as f32;
_14.0 = core::ptr::addr_of_mut!(_17);
_18 = -_6;
_21 = &mut _14.0;
_2 = [2_usize];
_18 = _6 >> _20.2;
_14 = Move(_20);
_23 = [4387_u16,20299_u16,19188_u16,2981_u16,25632_u16,14839_u16];
_18 = _5 & _5;
_2 = [7_usize];
_21 = &mut _14.0;
_24 = 2_usize >> _5;
_21 = &mut (*_21);
(*_21) = core::ptr::addr_of_mut!(_17);
Goto(bb6)
}
bb8 = {
_4 = _5 == _5;
_7 = '\u{5f6a2}';
_1 = [2775_u16,18981_u16,50189_u16,48537_u16,31464_u16,24186_u16,36658_u16,56400_u16];
RET = 116_u8 as f32;
_6 = RET as isize;
_8 = _7;
_8 = _7;
_6 = _5;
_7 = _8;
_1 = [64733_u16,7032_u16,61251_u16,2285_u16,44816_u16,25072_u16,46617_u16,57498_u16];
_2 = [5_usize];
_5 = (-22_i8) as isize;
_5 = 18352977034452621103_usize as isize;
_3 = [26370_u16,47424_u16,57701_u16,64200_u16,54497_u16,55671_u16];
_3 = [2781_u16,1923_u16,31611_u16,7349_u16,30196_u16,8853_u16];
_5 = 133980132681888891288486983956837176526_u128 as isize;
RET = 131_u8 as f32;
RET = 19399_u16 as f32;
_3 = [46151_u16,28172_u16,56090_u16,24628_u16,43710_u16,2764_u16];
_3 = [35374_u16,24429_u16,58164_u16,5491_u16,33585_u16,42319_u16];
Goto(bb2)
}
bb9 = {
RET = _5 as f32;
_10 = (-39_i8);
_8 = _7;
_9 = _5 >= _6;
_1 = [57862_u16,46124_u16,8282_u16,6537_u16,35308_u16,54505_u16,31245_u16,642_u16];
RET = (-21581_i16) as f32;
RET = _6 as f32;
_10 = -(-57_i8);
_3 = [38115_u16,8940_u16,21742_u16,35097_u16,54680_u16,39743_u16];
RET = (-3926634907643676053577260102227466955_i128) as f32;
_8 = _7;
RET = 7_usize as f32;
_5 = _6;
_3 = [9590_u16,33655_u16,48727_u16,11234_u16,24860_u16,54337_u16];
_15 = RET;
_10 = !(-35_i8);
_16 = !86348616769866523007779181636264528025_u128;
_14.1 = _15 + _15;
Goto(bb4)
}
bb10 = {
_2 = [1582661094032921019_usize];
_7 = _8;
_3 = [38_u16,19165_u16,10259_u16,49428_u16,31461_u16,8960_u16];
_8 = _7;
RET = (-5584232311422847971_i64) as f32;
_1 = [17932_u16,42330_u16,37680_u16,11599_u16,7415_u16,43290_u16,13281_u16,24947_u16];
_9 = _4 & _4;
_10 = !18_i8;
_5 = _6 & _6;
_3 = [39036_u16,64648_u16,48447_u16,49966_u16,6891_u16,36106_u16];
_9 = _4 & _4;
_5 = _6;
_1 = [28872_u16,56498_u16,59475_u16,29872_u16,8547_u16,44933_u16,46852_u16,52710_u16];
RET = (-1262965617_i32) as f32;
_6 = -_5;
_8 = _7;
_9 = !_4;
_5 = _6;
_3 = [51075_u16,41044_u16,56487_u16,46612_u16,27087_u16,20136_u16];
_3 = [13665_u16,39225_u16,25513_u16,63326_u16,14218_u16,51659_u16];
_1 = [55822_u16,17463_u16,38743_u16,32644_u16,36791_u16,49755_u16,27202_u16,38620_u16];
Call(_9 = fn13(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_22 = (-119263247082833074708726095059116741404_i128) as f32;
_15 = -_14.1;
_8 = _7;
_20.2 = _14.2 * _14.2;
_14.0 = core::ptr::addr_of_mut!(_17);
_20.0 = Move(_14.0);
_1 = [43593_u16,57540_u16,62198_u16,50236_u16,64010_u16,43439_u16,8495_u16,17965_u16];
_20.1 = _22;
_25 = &mut _6;
RET = _22 - _22;
_7 = _8;
_29 = core::ptr::addr_of_mut!(_17);
_21 = &mut _20.0;
_16 = 220099922843988116507928594097157411620_u128;
_23 = _3;
_4 = _6 > (*_25);
match _10 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768211360 => bb12,
_ => bb5
}
}
bb12 = {
_20 = (Move(_29), _22, _14.2);
RET = -_20.1;
_15 = -RET;
_24 = !5_usize;
_2 = [_24];
_21 = &mut _20.0;
_5 = _8 as isize;
_33 = &_23;
Goto(bb13)
}
bb13 = {
_20.0 = core::ptr::addr_of_mut!(_17);
_4 = !_9;
_7 = _8;
_16 = !232849781840182503522233842935279834692_u128;
_8 = _7;
RET = 17557_i16 as f32;
_9 = _6 >= (*_25);
_30 = Adt82::Variant0 { fld0: Move(_20.0) };
_20.0 = core::ptr::addr_of_mut!(_17);
_20 = (Move(Field::<*mut u8>(Variant(_30, 0), 0)), _22, _14.2);
_17 = 17142940130942731858_u64 as u8;
_16 = 186469873261310051176854311479533918035_u128 >> _6;
_7 = _8;
_14.0 = core::ptr::addr_of_mut!(_17);
_20.0 = core::ptr::addr_of_mut!(_17);
_2 = [_24];
_3 = [13374_u16,13149_u16,18430_u16,18080_u16,62396_u16,65146_u16];
_22 = _14.1;
_3 = [39278_u16,54534_u16,45981_u16,59577_u16,6498_u16,16707_u16];
_27 = _6 | (*_25);
_17 = 54_u8 & 178_u8;
_2 = [_24];
_20.2 = _14.2;
_16 = !119005234146301707478848242107057368288_u128;
_22 = _14.1 - _20.1;
_26 = _6;
_29 = Move(_20.0);
Call(_28 = core::intrinsics::bswap((-2169121577891464769_i64)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_38.1 = &_22;
_20.2 = !_14.2;
_1 = [7197_u16,22987_u16,17518_u16,38906_u16,10419_u16,39574_u16,30970_u16,49148_u16];
_4 = _9 | _9;
_26 = 29802_i16 as isize;
_9 = _4 | _4;
_30 = Adt82::Variant0 { fld0: Move(_29) };
_1 = [27805_u16,63889_u16,64654_u16,14100_u16,30315_u16,3491_u16,63397_u16,54403_u16];
RET = _22;
_4 = !_9;
_14.0 = core::ptr::addr_of_mut!(_17);
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(12_usize, 6_usize, Move(_6), 16_usize, Move(_16), 3_usize, Move(_3), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(12_usize, 8_usize, Move(_8), 17_usize, Move(_17), 5_usize, Move(_5), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(12_usize, 1_usize, Move(_1), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: bool) -> bool {
mir! {
type RET = bool;
let _2: [bool; 4];
let _3: (&'static u64,);
let _4: ();
let _5: ();
{
RET = _1 & _1;
RET = !_1;
_1 = RET >= RET;
RET = !_1;
RET = !_1;
_1 = !RET;
RET = _1;
RET = _1;
RET = _1;
RET = _1 != _1;
RET = _1;
RET = !_1;
Goto(bb1)
}
bb1 = {
_1 = RET & RET;
RET = _1 > _1;
_2 = [_1,_1,RET,RET];
_2 = [_1,_1,RET,RET];
_2 = [_1,RET,RET,RET];
_1 = RET;
_2 = [RET,_1,_1,_1];
_1 = !RET;
RET = _1;
RET = _1 > _1;
RET = !_1;
Goto(bb2)
}
bb2 = {
Call(_4 = dump_var(13_usize, 2_usize, Move(_2), 5_usize, _5, 5_usize, _5, 5_usize, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [u16; 8],mut _6: i32,mut _7: [u16; 8],mut _8: f64,mut _9: f32) -> f64 {
mir! {
type RET = f64;
let _10: &'static mut u16;
let _11: (char,);
let _12: &'static mut [u8; 6];
let _13: (&'static u64,);
let _14: *const Adt31;
let _15: ([u16; 8], Adt52);
let _16: (char,);
let _17: [char; 4];
let _18: ([u16; 8], Adt52);
let _19: bool;
let _20: isize;
let _21: [usize; 1];
let _22: char;
let _23: &'static mut &'static mut bool;
let _24: i64;
let _25: [u128; 4];
let _26: &'static mut *mut u8;
let _27: char;
let _28: Adt29;
let _29: [i128; 6];
let _30: f64;
let _31: char;
let _32: Adt82;
let _33: *mut u8;
let _34: [usize; 4];
let _35: f32;
let _36: [bool; 4];
let _37: [i128; 6];
let _38: f32;
let _39: i128;
let _40: (i16,);
let _41: ();
let _42: ();
{
_7 = [24238_u16,10704_u16,52905_u16,35279_u16,45770_u16,222_u16,40808_u16,21437_u16];
RET = -_8;
_9 = 39847674814103165515634768015208688769_i128 as f32;
_5 = [59446_u16,48472_u16,20480_u16,39588_u16,9187_u16,23839_u16,9036_u16,62460_u16];
_7 = [21821_u16,50484_u16,57134_u16,22610_u16,57087_u16,4290_u16,17533_u16,42779_u16];
_5 = _4;
_1 = [8663_u16,46904_u16,55814_u16,62552_u16,53866_u16,48830_u16,32130_u16,55617_u16];
Goto(bb1)
}
bb1 = {
RET = 43224_u16 as f64;
RET = _8;
_1 = [16204_u16,60789_u16,3371_u16,23540_u16,9249_u16,35387_u16,22360_u16,6790_u16];
_9 = RET as f32;
_8 = 1891257690_u32 as f64;
_11 = ('\u{af334}',);
_4 = [16907_u16,65055_u16,56532_u16,16190_u16,47175_u16,53175_u16,37388_u16,10588_u16];
_9 = 10_i8 as f32;
_2 = [14854_u16,53207_u16,5967_u16,181_u16,12659_u16,53110_u16,47847_u16,35009_u16];
_11 = ('\u{58a89}',);
_9 = 42_u8 as f32;
_3 = _4;
_7 = [4466_u16,40919_u16,65482_u16,36154_u16,46136_u16,37147_u16,14419_u16,47163_u16];
_11.0 = '\u{82007}';
_4 = _3;
_2 = _1;
_11 = ('\u{10ecbd}',);
_7 = [30400_u16,41957_u16,26076_u16,54986_u16,54504_u16,37407_u16,63479_u16,64769_u16];
_4 = [59277_u16,10720_u16,28303_u16,946_u16,16930_u16,47392_u16,53385_u16,28861_u16];
_11.0 = '\u{79f8f}';
Goto(bb2)
}
bb2 = {
_2 = [34916_u16,39779_u16,49804_u16,5573_u16,41425_u16,26299_u16,31549_u16,1111_u16];
RET = -_8;
_7 = _5;
_15.0 = [59299_u16,36670_u16,34565_u16,9243_u16,36384_u16,61418_u16,12698_u16,57851_u16];
_7 = [65156_u16,41510_u16,46729_u16,5796_u16,27267_u16,10521_u16,40298_u16,40905_u16];
_5 = [1143_u16,3712_u16,54718_u16,17810_u16,11924_u16,64897_u16,23494_u16,48238_u16];
_16.0 = _11.0;
_7 = [28386_u16,13003_u16,10235_u16,55051_u16,49613_u16,8715_u16,1093_u16,16835_u16];
_5 = [48445_u16,19223_u16,60454_u16,34723_u16,55165_u16,62254_u16,60515_u16,45315_u16];
_16 = (_11.0,);
_16.0 = _11.0;
_2 = [36989_u16,9809_u16,7912_u16,42898_u16,41715_u16,43899_u16,32180_u16,39978_u16];
_15.0 = [17529_u16,63228_u16,771_u16,39386_u16,10023_u16,59884_u16,50675_u16,3775_u16];
_4 = _2;
_4 = _15.0;
RET = -_8;
_2 = [34415_u16,35029_u16,4304_u16,25443_u16,33606_u16,41761_u16,16674_u16,59432_u16];
_4 = _5;
_1 = [47301_u16,23367_u16,53621_u16,17820_u16,19063_u16,50921_u16,7326_u16,40378_u16];
_11.0 = _16.0;
_16 = (_11.0,);
_7 = _5;
_16 = (_11.0,);
_17 = [_11.0,_11.0,_16.0,_11.0];
_4 = [10348_u16,5974_u16,10050_u16,45626_u16,10014_u16,62821_u16,14718_u16,65101_u16];
_6 = (-1161072188_i32);
Goto(bb3)
}
bb3 = {
RET = _8;
_7 = [21790_u16,53065_u16,53956_u16,38458_u16,24521_u16,40747_u16,8159_u16,5654_u16];
Call(_3 = fn15(_15.0, _1, _11, _15.0, _5, _4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_16 = (_11.0,);
_4 = _7;
_6 = -(-822322541_i32);
_11.0 = _16.0;
_2 = _5;
Goto(bb5)
}
bb5 = {
_16.0 = _11.0;
_22 = _16.0;
Goto(bb6)
}
bb6 = {
RET = -_8;
_7 = _5;
_21 = [6_usize];
_16 = (_11.0,);
RET = _8;
_8 = (-29_i8) as f64;
_5 = [4652_u16,3404_u16,11599_u16,4275_u16,22203_u16,10762_u16,34564_u16,20763_u16];
_21 = [1813795764291543022_usize];
_19 = !true;
_7 = [53067_u16,1028_u16,55821_u16,61314_u16,50019_u16,10530_u16,63143_u16,14774_u16];
RET = _8;
_5 = [19109_u16,33115_u16,36823_u16,24676_u16,59326_u16,61857_u16,14355_u16,31126_u16];
_11.0 = _16.0;
_4 = [5931_u16,6220_u16,61925_u16,21444_u16,1120_u16,22251_u16,43434_u16,56740_u16];
_19 = false;
_18.0 = [57859_u16,62631_u16,63964_u16,60446_u16,5089_u16,32125_u16,40300_u16,43533_u16];
Goto(bb7)
}
bb7 = {
_8 = -RET;
_24 = (-749378300688367759_i64);
_21 = [1_usize];
match _24 {
0 => bb6,
340282366920938463462625229131079843697 => bb8,
_ => bb4
}
}
bb8 = {
_3 = _1;
_19 = !false;
_9 = 181_u8 as f32;
_16.0 = _11.0;
_20 = -(-9223372036854775808_isize);
RET = 1619_i16 as f64;
_4 = [63605_u16,37304_u16,19815_u16,45753_u16,2530_u16,21394_u16,47085_u16,21097_u16];
_2 = [52650_u16,33104_u16,37716_u16,13131_u16,17532_u16,55939_u16,20664_u16,40733_u16];
_9 = _8 as f32;
_8 = 147_u8 as f64;
_25 = [203825692438848089980703485346688529259_u128,75358104807902764451823542914150053479_u128,191659731443180128314664217836035343352_u128,93975121905650817545133473823527899525_u128];
_4 = _5;
_15.0 = _18.0;
_21 = [6_usize];
_25 = [51565378656481507818398231430964642757_u128,7971008916610280217319109380941120417_u128,159629076895967897508527134231557169372_u128,212069855549906919731168381809585961907_u128];
_28.fld4 = !5_usize;
_28.fld0 = _22 != _22;
_28.fld5 = RET as f32;
_28.fld4 = 7_usize - 8992232502565699165_usize;
_28.fld1 = [3172177190_u32,2042359876_u32,1227009440_u32];
_28.fld0 = !_19;
_18.0 = _4;
_28.fld2 = !(-87618583426971704664789137600511930548_i128);
Call(_16.0 = fn18(), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_15.0 = _4;
_28.fld4 = 5_usize;
_28.fld1 = [2395788634_u32,1432244770_u32,1107195177_u32];
RET = 3752923820_u32 as f64;
_6 = 1622329325_i32 ^ (-918969985_i32);
_22 = _11.0;
_19 = _28.fld0;
_28.fld6 = -_24;
_18.0 = _15.0;
match _28.fld4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb10,
6 => bb12,
5 => bb14,
_ => bb13
}
}
bb10 = {
_3 = _1;
_19 = !false;
_9 = 181_u8 as f32;
_16.0 = _11.0;
_20 = -(-9223372036854775808_isize);
RET = 1619_i16 as f64;
_4 = [63605_u16,37304_u16,19815_u16,45753_u16,2530_u16,21394_u16,47085_u16,21097_u16];
_2 = [52650_u16,33104_u16,37716_u16,13131_u16,17532_u16,55939_u16,20664_u16,40733_u16];
_9 = _8 as f32;
_8 = 147_u8 as f64;
_25 = [203825692438848089980703485346688529259_u128,75358104807902764451823542914150053479_u128,191659731443180128314664217836035343352_u128,93975121905650817545133473823527899525_u128];
_4 = _5;
_15.0 = _18.0;
_21 = [6_usize];
_25 = [51565378656481507818398231430964642757_u128,7971008916610280217319109380941120417_u128,159629076895967897508527134231557169372_u128,212069855549906919731168381809585961907_u128];
_28.fld4 = !5_usize;
_28.fld0 = _22 != _22;
_28.fld5 = RET as f32;
_28.fld4 = 7_usize - 8992232502565699165_usize;
_28.fld1 = [3172177190_u32,2042359876_u32,1227009440_u32];
_28.fld0 = !_19;
_18.0 = _4;
_28.fld2 = !(-87618583426971704664789137600511930548_i128);
Call(_16.0 = fn18(), ReturnTo(bb9), UnwindUnreachable())
}
bb11 = {
RET = _8;
_7 = [21790_u16,53065_u16,53956_u16,38458_u16,24521_u16,40747_u16,8159_u16,5654_u16];
Call(_3 = fn15(_15.0, _1, _11, _15.0, _5, _4), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
RET = -_8;
_7 = _5;
_21 = [6_usize];
_16 = (_11.0,);
RET = _8;
_8 = (-29_i8) as f64;
_5 = [4652_u16,3404_u16,11599_u16,4275_u16,22203_u16,10762_u16,34564_u16,20763_u16];
_21 = [1813795764291543022_usize];
_19 = !true;
_7 = [53067_u16,1028_u16,55821_u16,61314_u16,50019_u16,10530_u16,63143_u16,14774_u16];
RET = _8;
_5 = [19109_u16,33115_u16,36823_u16,24676_u16,59326_u16,61857_u16,14355_u16,31126_u16];
_11.0 = _16.0;
_4 = [5931_u16,6220_u16,61925_u16,21444_u16,1120_u16,22251_u16,43434_u16,56740_u16];
_19 = false;
_18.0 = [57859_u16,62631_u16,63964_u16,60446_u16,5089_u16,32125_u16,40300_u16,43533_u16];
Goto(bb7)
}
bb13 = {
_16.0 = _11.0;
_22 = _16.0;
Goto(bb6)
}
bb14 = {
_31 = _22;
_34 = [_28.fld4,_28.fld4,_28.fld4,_28.fld4];
_7 = [31122_u16,54666_u16,55165_u16,12122_u16,26512_u16,12351_u16,31_u16,46310_u16];
_28.fld4 = 18142984813448002397_usize;
_28.fld2 = 167992595219269539712287453457266907506_i128 ^ (-154605205547613086173812109755918210840_i128);
_1 = _18.0;
_18.0 = [42992_u16,38102_u16,8015_u16,29857_u16,54561_u16,39959_u16,11450_u16,27492_u16];
_27 = _22;
_28.fld6 = 2285175093_u32 as i64;
_35 = _9;
_22 = _27;
_7 = [43258_u16,46593_u16,22013_u16,60759_u16,64715_u16,59492_u16,32458_u16,11385_u16];
_9 = _35;
_25 = [161764485045719160872393290825720252569_u128,14301920454465530921298886472766675483_u128,244720348220620574757490061342759909283_u128,238650889189749592494984846039652365675_u128];
RET = _8;
_2 = [18689_u16,25236_u16,7690_u16,8072_u16,6613_u16,51763_u16,12076_u16,55007_u16];
_19 = _11.0 == _22;
_16 = (_31,);
RET = _8 * _8;
_28.fld5 = 3691754741_u32 as f32;
_11.0 = _27;
_1 = _18.0;
_18.0 = [41498_u16,14116_u16,9377_u16,64241_u16,36544_u16,39101_u16,1410_u16,2785_u16];
_24 = _28.fld6 - _28.fld6;
_31 = _16.0;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(14_usize, 1_usize, Move(_1), 19_usize, Move(_19), 25_usize, Move(_25), 24_usize, Move(_24)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(14_usize, 16_usize, Move(_16), 11_usize, Move(_11), 21_usize, Move(_21), 34_usize, Move(_34)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(14_usize, 20_usize, Move(_20), 42_usize, _42, 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: (char,),mut _4: [u16; 8],mut _5: [u16; 8],mut _6: [u16; 8]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _7: [u128; 4];
let _8: Adt65;
let _9: isize;
let _10: (char,);
let _11: f64;
let _12: char;
let _13: char;
let _14: bool;
let _15: f64;
let _16: u16;
let _17: *mut *const &'static u64;
let _18: u128;
let _19: char;
let _20: i32;
let _21: [u16; 6];
let _22: f32;
let _23: [u128; 5];
let _24: [u32; 3];
let _25: *const Adt31;
let _26: [i128; 6];
let _27: (f64, u32, char);
let _28: f32;
let _29: bool;
let _30: i128;
let _31: f64;
let _32: i16;
let _33: isize;
let _34: u16;
let _35: i16;
let _36: Adt73;
let _37: isize;
let _38: &'static u64;
let _39: u8;
let _40: bool;
let _41: usize;
let _42: *mut *const &'static u64;
let _43: isize;
let _44: f32;
let _45: Adt81;
let _46: &'static i8;
let _47: i64;
let _48: i16;
let _49: *const Adt31;
let _50: [i128; 6];
let _51: ();
let _52: ();
{
RET = [25137_u16,29040_u16,40131_u16,55054_u16,44402_u16,11752_u16,38564_u16,46103_u16];
_4 = [50259_u16,44571_u16,49797_u16,46717_u16,23333_u16,47927_u16,30071_u16,34895_u16];
_3 = ('\u{b13ef}',);
_3.0 = '\u{3bc8f}';
_6 = [35131_u16,31989_u16,23246_u16,12968_u16,47558_u16,8914_u16,58459_u16,28221_u16];
RET = _6;
_1 = [23089_u16,14786_u16,7288_u16,36784_u16,26735_u16,3154_u16,14988_u16,38232_u16];
_4 = [65192_u16,55737_u16,19757_u16,54582_u16,28554_u16,24340_u16,23900_u16,21054_u16];
_7 = [5002241588781667326571501229287498393_u128,143612105630570770310205070522080441780_u128,281331569504803706066953146430090331369_u128,298858054176918776051389837661052742776_u128];
RET = [20463_u16,25003_u16,22811_u16,34739_u16,47742_u16,15352_u16,64367_u16,6266_u16];
RET = [3173_u16,42267_u16,32552_u16,27555_u16,58123_u16,27914_u16,17256_u16,10502_u16];
_7 = [93323469929930022446967638687415705114_u128,196130048801903328196369342717828491849_u128,185527884422983104819568529273097965312_u128,256293259548657297831603801201434081210_u128];
_5 = _4;
RET = [2262_u16,48111_u16,35575_u16,12011_u16,46854_u16,7740_u16,22174_u16,25207_u16];
RET = [7451_u16,59879_u16,57570_u16,3535_u16,46699_u16,5599_u16,53843_u16,32304_u16];
_3 = ('\u{881}',);
RET = [13587_u16,1202_u16,41829_u16,61869_u16,4311_u16,56488_u16,11941_u16,42749_u16];
_5 = RET;
RET = _6;
_9 = 100_isize;
_5 = [5357_u16,64084_u16,18270_u16,25072_u16,53270_u16,4706_u16,48209_u16,47109_u16];
_9 = !(-74_isize);
_6 = [56489_u16,34990_u16,8865_u16,26158_u16,44756_u16,51172_u16,13430_u16,41278_u16];
RET = _1;
_6 = RET;
Goto(bb1)
}
bb1 = {
_10 = (_3.0,);
RET = [37940_u16,28261_u16,39881_u16,12467_u16,5715_u16,40260_u16,35957_u16,49072_u16];
_11 = 2364150041_u32 as f64;
_11 = _9 as f64;
_3 = _10;
_7 = [308139171964162278431945388983973044052_u128,264779601309620484874086447785629641675_u128,306872993995968989908776325841964236964_u128,218255426231626173400513025535975829076_u128];
_9 = -(-9223372036854775808_isize);
Goto(bb2)
}
bb2 = {
_4 = RET;
_6 = RET;
Goto(bb3)
}
bb3 = {
_9 = (-33_isize) << (-1131637864_i32);
_9 = (-9223372036854775808_isize) * (-120_isize);
_13 = _3.0;
_6 = [55162_u16,57472_u16,15468_u16,53740_u16,53270_u16,9263_u16,36189_u16,31791_u16];
Goto(bb4)
}
bb4 = {
_7 = [127663468543736521036316812040805551971_u128,5513232026856452021275171337050035001_u128,100191295098383230756502285882203728174_u128,154636564209618802456687853999385290511_u128];
_1 = [49842_u16,59025_u16,33663_u16,11167_u16,50164_u16,2457_u16,17254_u16,53653_u16];
_3 = (_13,);
_4 = [22050_u16,1717_u16,15906_u16,42405_u16,59072_u16,40012_u16,58862_u16,6325_u16];
RET = [50606_u16,44850_u16,64171_u16,233_u16,37438_u16,45582_u16,50902_u16,20144_u16];
_3.0 = _13;
_3 = (_13,);
_2 = [20012_u16,4645_u16,20699_u16,48582_u16,17036_u16,35637_u16,65355_u16,37000_u16];
RET = [11921_u16,29534_u16,59444_u16,52581_u16,65445_u16,23371_u16,2721_u16,8978_u16];
_5 = [4656_u16,58640_u16,25807_u16,43196_u16,10459_u16,59820_u16,60652_u16,11289_u16];
_2 = [50418_u16,4447_u16,31105_u16,35348_u16,52166_u16,35799_u16,20162_u16,46667_u16];
_9 = 236_u8 as isize;
_12 = _10.0;
_14 = _10.0 != _13;
_5 = [55017_u16,56450_u16,57280_u16,15118_u16,8257_u16,39638_u16,57311_u16,5622_u16];
Goto(bb5)
}
bb5 = {
RET = _4;
_13 = _10.0;
_7 = [89482885663423914726898848846252109381_u128,327292498060416752241579072315491698093_u128,76068372752981742085908674325708758084_u128,142412835140117165979863241021468344558_u128];
_4 = _5;
_12 = _10.0;
_3 = _10;
_15 = -_11;
_2 = [56960_u16,51737_u16,48558_u16,44765_u16,20410_u16,49521_u16,25976_u16,12294_u16];
_1 = _2;
_13 = _12;
_10 = (_12,);
_3 = (_13,);
_10 = _3;
_5 = [33495_u16,43837_u16,6591_u16,35545_u16,51564_u16,53983_u16,50479_u16,3908_u16];
_5 = _4;
_3.0 = _10.0;
_6 = [60679_u16,51746_u16,12562_u16,63621_u16,36253_u16,36360_u16,54885_u16,34535_u16];
_22 = (-79_i8) as f32;
Call(_10.0 = fn16(_5, _4, RET, _6, RET, _3.0, _2, _9, _2, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_20 = !671522134_i32;
_16 = 21589_u16 * 62548_u16;
_11 = _15 * _15;
_12 = _3.0;
_10 = _3;
Goto(bb7)
}
bb7 = {
_7 = [99005513561413805422687021007298854574_u128,78444193175269686323602173799424113573_u128,284934847139847975713193103496204178404_u128,322712088418282562217121194949032167065_u128];
_10.0 = _3.0;
_19 = _13;
_10.0 = _3.0;
_10 = (_3.0,);
_15 = -_11;
_3.0 = _10.0;
_6 = [_16,_16,_16,_16,_16,_16,_16,_16];
_16 = !19604_u16;
_22 = 16755133635635124070_usize as f32;
_19 = _3.0;
_21 = [_16,_16,_16,_16,_16,_16];
_3 = _10;
_10.0 = _3.0;
_24 = [2012358659_u32,3981341562_u32,1699188160_u32];
Goto(bb8)
}
bb8 = {
_27.2 = _10.0;
_23 = [220573562996903346406491475702758990415_u128,105483780508911204490740366431493921889_u128,155493620842533856079325298240181526869_u128,276677549640300217689115666156856329885_u128,306694150304893485860961741295293289690_u128];
RET = _2;
_15 = (-85_i8) as f64;
RET = [_16,_16,_16,_16,_16,_16,_16,_16];
_28 = _22;
_18 = !312172962613783234759711783677389476117_u128;
_18 = (-19995_i16) as u128;
_27.0 = _11 - _15;
Goto(bb9)
}
bb9 = {
_19 = _27.2;
_20 = 2099205796_i32;
_27.1 = 4236999155_u32;
_26 = [154415148099471147222428040998840254368_i128,(-113065613972975329676084958672604653413_i128),(-82442380130616055174033297076027505628_i128),(-108870449751006513949585320743833957189_i128),159328166097149880288224899695644956443_i128,(-167666212652904184877355941593460285753_i128)];
_5 = [_16,_16,_16,_16,_16,_16,_16,_16];
_27 = (_15, 3860259428_u32, _12);
_3 = _10;
_12 = _19;
_15 = (-7510475899125459839280676058849665239_i128) as f64;
_15 = -_11;
_15 = -_11;
_18 = 292998074993023141613829129402326709755_u128 ^ 312344433907393235894155393814387769163_u128;
_35 = 6715_i16;
_14 = !false;
_29 = !_14;
_3 = (_13,);
_10 = _3;
match _27.1 {
3860259428 => bb11,
_ => bb10
}
}
bb10 = {
RET = _4;
_13 = _10.0;
_7 = [89482885663423914726898848846252109381_u128,327292498060416752241579072315491698093_u128,76068372752981742085908674325708758084_u128,142412835140117165979863241021468344558_u128];
_4 = _5;
_12 = _10.0;
_3 = _10;
_15 = -_11;
_2 = [56960_u16,51737_u16,48558_u16,44765_u16,20410_u16,49521_u16,25976_u16,12294_u16];
_1 = _2;
_13 = _12;
_10 = (_12,);
_3 = (_13,);
_10 = _3;
_5 = [33495_u16,43837_u16,6591_u16,35545_u16,51564_u16,53983_u16,50479_u16,3908_u16];
_5 = _4;
_3.0 = _10.0;
_6 = [60679_u16,51746_u16,12562_u16,63621_u16,36253_u16,36360_u16,54885_u16,34535_u16];
_22 = (-79_i8) as f32;
Call(_10.0 = fn16(_5, _4, RET, _6, RET, _3.0, _2, _9, _2, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb11 = {
_19 = _27.2;
_34 = 2_usize as u16;
_20 = 974259472_i32 - (-2044427199_i32);
_39 = 227_u8;
_12 = _19;
_31 = _15 + _15;
_1 = [_34,_34,_34,_34,_34,_34,_34,_16];
_26 = [51490205522245933970629771528059077451_i128,(-21177743456578733865803084174306106273_i128),97804677678715184676181452604840990550_i128,(-65216560834873498185169865024752464471_i128),29102426874016739309306956888938824463_i128,63599761637845532001869869290119427185_i128];
_29 = _3.0 != _10.0;
_37 = 8742691219360648451_usize as isize;
_33 = _16 as isize;
_40 = _29;
_12 = _19;
_31 = _11 - _11;
RET = [_34,_34,_34,_34,_34,_34,_34,_34];
_43 = _37;
Call(_22 = fn17(_2, _20, _35, _7, _27.1, _24, _10.0, _27.1, _27), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_44 = _22;
_6 = _2;
Goto(bb13)
}
bb13 = {
_28 = _22 - _22;
match _27.1 {
0 => bb12,
1 => bb3,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
3860259428 => bb20,
_ => bb19
}
}
bb14 = {
_44 = _22;
_6 = _2;
Goto(bb13)
}
bb15 = {
_20 = !671522134_i32;
_16 = 21589_u16 * 62548_u16;
_11 = _15 * _15;
_12 = _3.0;
_10 = _3;
Goto(bb7)
}
bb16 = {
_10 = (_3.0,);
RET = [37940_u16,28261_u16,39881_u16,12467_u16,5715_u16,40260_u16,35957_u16,49072_u16];
_11 = 2364150041_u32 as f64;
_11 = _9 as f64;
_3 = _10;
_7 = [308139171964162278431945388983973044052_u128,264779601309620484874086447785629641675_u128,306872993995968989908776325841964236964_u128,218255426231626173400513025535975829076_u128];
_9 = -(-9223372036854775808_isize);
Goto(bb2)
}
bb17 = {
_19 = _27.2;
_20 = 2099205796_i32;
_27.1 = 4236999155_u32;
_26 = [154415148099471147222428040998840254368_i128,(-113065613972975329676084958672604653413_i128),(-82442380130616055174033297076027505628_i128),(-108870449751006513949585320743833957189_i128),159328166097149880288224899695644956443_i128,(-167666212652904184877355941593460285753_i128)];
_5 = [_16,_16,_16,_16,_16,_16,_16,_16];
_27 = (_15, 3860259428_u32, _12);
_3 = _10;
_12 = _19;
_15 = (-7510475899125459839280676058849665239_i128) as f64;
_15 = -_11;
_15 = -_11;
_18 = 292998074993023141613829129402326709755_u128 ^ 312344433907393235894155393814387769163_u128;
_35 = 6715_i16;
_14 = !false;
_29 = !_14;
_3 = (_13,);
_10 = _3;
match _27.1 {
3860259428 => bb11,
_ => bb10
}
}
bb18 = {
_27.2 = _10.0;
_23 = [220573562996903346406491475702758990415_u128,105483780508911204490740366431493921889_u128,155493620842533856079325298240181526869_u128,276677549640300217689115666156856329885_u128,306694150304893485860961741295293289690_u128];
RET = _2;
_15 = (-85_i8) as f64;
RET = [_16,_16,_16,_16,_16,_16,_16,_16];
_28 = _22;
_18 = !312172962613783234759711783677389476117_u128;
_18 = (-19995_i16) as u128;
_27.0 = _11 - _15;
Goto(bb9)
}
bb19 = {
_7 = [99005513561413805422687021007298854574_u128,78444193175269686323602173799424113573_u128,284934847139847975713193103496204178404_u128,322712088418282562217121194949032167065_u128];
_10.0 = _3.0;
_19 = _13;
_10.0 = _3.0;
_10 = (_3.0,);
_15 = -_11;
_3.0 = _10.0;
_6 = [_16,_16,_16,_16,_16,_16,_16,_16];
_16 = !19604_u16;
_22 = 16755133635635124070_usize as f32;
_19 = _3.0;
_21 = [_16,_16,_16,_16,_16,_16];
_3 = _10;
_10.0 = _3.0;
_24 = [2012358659_u32,3981341562_u32,1699188160_u32];
Goto(bb8)
}
bb20 = {
_44 = -_22;
_7 = [_18,_18,_18,_18];
_18 = 206907989394272143670951204271833712593_u128 + 175289893660870432606861024598966733161_u128;
_29 = _27.1 <= _27.1;
_15 = _31;
_10.0 = _3.0;
_29 = _15 != _15;
RET = _4;
RET = [_16,_16,_34,_16,_34,_34,_16,_16];
_41 = 2_usize;
_20 = (-1927054306_i32);
_45.fld2.2 = _29 as i32;
_4[_41] = _34 % _2[_41];
Goto(bb21)
}
bb21 = {
Call(_51 = dump_var(15_usize, 7_usize, Move(_7), 40_usize, Move(_40), 34_usize, Move(_34), 21_usize, Move(_21)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_51 = dump_var(15_usize, 14_usize, Move(_14), 12_usize, Move(_12), 20_usize, Move(_20), 23_usize, Move(_23)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_51 = dump_var(15_usize, 13_usize, Move(_13), 4_usize, Move(_4), 37_usize, Move(_37), 24_usize, Move(_24)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_51 = dump_var(15_usize, 39_usize, Move(_39), 5_usize, Move(_5), 52_usize, _52, 52_usize, _52), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [u16; 8],mut _6: char,mut _7: [u16; 8],mut _8: isize,mut _9: [u16; 8],mut _10: [u16; 8]) -> char {
mir! {
type RET = char;
let _11: isize;
let _12: &'static i8;
let _13: i128;
let _14: *const &'static u64;
let _15: usize;
let _16: &'static mut ([u16; 8],);
let _17: *const &'static mut &'static mut bool;
let _18: u16;
let _19: i32;
let _20: [usize; 4];
let _21: [u128; 4];
let _22: f64;
let _23: &'static mut u64;
let _24: ();
let _25: ();
{
_10 = _4;
_5 = [48427_u16,47215_u16,27032_u16,32100_u16,50882_u16,20870_u16,61826_u16,55168_u16];
_11 = !_8;
_9 = [10889_u16,64295_u16,11656_u16,10577_u16,34047_u16,57846_u16,22395_u16,1124_u16];
_10 = [51430_u16,20702_u16,25286_u16,23342_u16,31986_u16,31698_u16,15045_u16,5701_u16];
RET = _6;
_4 = [42215_u16,45516_u16,49833_u16,40616_u16,4531_u16,32263_u16,1566_u16,63741_u16];
_6 = RET;
_6 = RET;
_1 = [50814_u16,50051_u16,36461_u16,12760_u16,35487_u16,43523_u16,6419_u16,53330_u16];
_10 = _7;
RET = _6;
_5 = [7758_u16,36785_u16,2734_u16,2386_u16,19856_u16,27347_u16,62370_u16,63342_u16];
_8 = 16306896582404590502_usize as isize;
_8 = _11 | _11;
_5 = [33890_u16,11492_u16,58403_u16,59930_u16,27391_u16,30519_u16,62484_u16,9084_u16];
RET = _6;
_5 = [35261_u16,8268_u16,54039_u16,53882_u16,23190_u16,34911_u16,58963_u16,25112_u16];
_1 = [62282_u16,54653_u16,4891_u16,19086_u16,4045_u16,11879_u16,3227_u16,6011_u16];
_9 = [21416_u16,62094_u16,5797_u16,16749_u16,15035_u16,9929_u16,47154_u16,31514_u16];
_10 = [9798_u16,61820_u16,52321_u16,40273_u16,27701_u16,32735_u16,13508_u16,3105_u16];
_8 = 1001263251_i32 as isize;
RET = _6;
_9 = [18000_u16,23501_u16,54375_u16,62324_u16,46606_u16,2380_u16,57717_u16,25636_u16];
_7 = [61331_u16,40272_u16,19831_u16,61173_u16,11756_u16,44114_u16,14720_u16,51394_u16];
_6 = RET;
_4 = [56072_u16,26378_u16,53886_u16,11267_u16,12422_u16,41490_u16,9147_u16,54861_u16];
_9 = [19456_u16,31742_u16,9174_u16,25611_u16,29462_u16,17233_u16,31779_u16,57831_u16];
_8 = _11 ^ _11;
Goto(bb1)
}
bb1 = {
_5 = [7103_u16,46972_u16,20918_u16,15563_u16,53200_u16,26659_u16,56853_u16,28378_u16];
_13 = 145992777479772297290867578081278417421_i128;
_10 = [22944_u16,20413_u16,63691_u16,37939_u16,42693_u16,42130_u16,12579_u16,15052_u16];
Goto(bb2)
}
bb2 = {
_6 = RET;
_11 = !_8;
_7 = [15746_u16,61430_u16,59969_u16,14590_u16,46555_u16,11857_u16,63348_u16,6245_u16];
match _13 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
145992777479772297290867578081278417421 => bb11,
_ => bb10
}
}
bb3 = {
_5 = [7103_u16,46972_u16,20918_u16,15563_u16,53200_u16,26659_u16,56853_u16,28378_u16];
_13 = 145992777479772297290867578081278417421_i128;
_10 = [22944_u16,20413_u16,63691_u16,37939_u16,42693_u16,42130_u16,12579_u16,15052_u16];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_3 = [41102_u16,60984_u16,52506_u16,10625_u16,30656_u16,37542_u16,60325_u16,6933_u16];
_6 = RET;
_2 = [30560_u16,36839_u16,8698_u16,28573_u16,50885_u16,57557_u16,14308_u16,2720_u16];
_18 = 54044_u16 | 37257_u16;
_1 = _4;
_18 = 4702_u16;
_6 = RET;
_5 = [_18,_18,_18,_18,_18,_18,_18,_18];
_6 = RET;
_3 = [_18,_18,_18,_18,_18,_18,_18,_18];
_15 = !5_usize;
match _13 {
0 => bb1,
1 => bb2,
145992777479772297290867578081278417421 => bb13,
_ => bb12
}
}
bb12 = {
_6 = RET;
_11 = !_8;
_7 = [15746_u16,61430_u16,59969_u16,14590_u16,46555_u16,11857_u16,63348_u16,6245_u16];
match _13 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
145992777479772297290867578081278417421 => bb11,
_ => bb10
}
}
bb13 = {
_10 = _7;
_5 = [_18,_18,_18,_18,_18,_18,_18,_18];
_13 = 81593872438105840780273997539020525582_i128;
_6 = RET;
_7 = [_18,_18,_18,_18,_18,_18,_18,_18];
_19 = 521974112_i32;
_21 = [324220758771065647416777910036029056752_u128,308528339518142585579429195937526234463_u128,121689432887085648916403031667351738652_u128,283540931699064489752415765071894920931_u128];
_18 = _15 as u16;
RET = _6;
_1 = [_18,_18,_18,_18,_18,_18,_18,_18];
RET = _6;
_21 = [155340538242942400027472470421555262598_u128,254471690888724449073327514442596758739_u128,282828647855636132049524497426936396444_u128,188318594943538382954151204795690388840_u128];
_4 = [_18,_18,_18,_18,_18,_18,_18,_18];
_9 = [_18,_18,_18,_18,_18,_18,_18,_18];
_11 = !_8;
_8 = (-64_i8) as isize;
_3 = [_18,_18,_18,_18,_18,_18,_18,_18];
RET = _6;
_22 = 44_i8 as f64;
_2 = _10;
match _13 {
0 => bb1,
1 => bb4,
2 => bb7,
81593872438105840780273997539020525582 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
RET = _6;
_5 = [_18,_18,_18,_18,_18,_18,_18,_18];
_22 = _13 as f64;
_18 = !31428_u16;
_13 = -(-42108010239528369416282706090086444160_i128);
_6 = RET;
_20 = [_15,_15,_15,_15];
_6 = RET;
_21 = [72467054170186520430392633884254416669_u128,287206814887515304094964981638055705034_u128,18830806478080651543511098354485522550_u128,283680149849668597434164916705355823384_u128];
_10 = _2;
_11 = (-7597_i16) as isize;
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(16_usize, 11_usize, Move(_11), 13_usize, Move(_13), 3_usize, Move(_3), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(16_usize, 8_usize, Move(_8), 15_usize, Move(_15), 21_usize, Move(_21), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [u16; 8],mut _2: i32,mut _3: i16,mut _4: [u128; 4],mut _5: u32,mut _6: [u32; 3],mut _7: char,mut _8: u32,mut _9: (f64, u32, char)) -> f32 {
mir! {
type RET = f32;
let _10: isize;
let _11: char;
let _12: char;
let _13: &'static mut [u8; 6];
let _14: f64;
let _15: ();
let _16: ();
{
_8 = false as u32;
_4 = [192089538948537119836044265239722043334_u128,203814286429127246890588467442697782456_u128,278763717669877632746789180841694628018_u128,96127472528238337773271386028555592700_u128];
_2 = (-1428493805_i32) << _9.1;
_9.0 = 122639335750107493907571070176349832566_i128 as f64;
RET = 9223372036854775807_isize as f32;
_7 = _9.2;
_3 = -27919_i16;
_4 = [38364972496498321955765963253320638482_u128,29688129860146964994438489975788107422_u128,123188754914347387384051708760726152556_u128,295447817520784795791795795160433466355_u128];
RET = _5 as f32;
_5 = _9.1;
RET = 164_u8 as f32;
_1 = [52781_u16,48659_u16,2983_u16,24994_u16,54608_u16,55831_u16,60072_u16,20900_u16];
_9.1 = _5;
RET = (-9223372036854775808_isize) as f32;
_3 = (-22512_i16) ^ (-1829_i16);
match _9.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
3860259428 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_3 = !4294_i16;
RET = _2 as f32;
RET = 17289213339329947850_u64 as f32;
_9.2 = _7;
_3 = (-15762_i16) << _9.1;
_12 = _9.2;
_4 = [273309400695846760781224168309840203196_u128,136529796973994883326257987308778851019_u128,90489205145250888100408435289057803431_u128,291937485209261476710877078962685769816_u128];
Goto(bb8)
}
bb8 = {
_6 = [_5,_9.1,_5];
_9.1 = !_5;
_4 = [322711760651122378680303277615101351590_u128,322073308945577978475111618956591038093_u128,90694627765033458691116329164141998511_u128,86557849752655164424121636036115058600_u128];
Goto(bb9)
}
bb9 = {
_9.2 = _12;
_4 = [126279030383587435258095359218306934919_u128,294481797589394286463139393635499563524_u128,301334992398528442801688005525291874066_u128,47093115692910652077429813160193320680_u128];
RET = 4901988015640386256_i64 as f32;
_12 = _9.2;
_9.0 = _5 as f64;
_3 = (-2885_i16) << _2;
_8 = !_9.1;
match _5 {
0 => bb5,
1 => bb8,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
3860259428 => bb16,
_ => bb15
}
}
bb10 = {
_6 = [_5,_9.1,_5];
_9.1 = !_5;
_4 = [322711760651122378680303277615101351590_u128,322073308945577978475111618956591038093_u128,90694627765033458691116329164141998511_u128,86557849752655164424121636036115058600_u128];
Goto(bb9)
}
bb11 = {
_3 = !4294_i16;
RET = _2 as f32;
RET = 17289213339329947850_u64 as f32;
_9.2 = _7;
_3 = (-15762_i16) << _9.1;
_12 = _9.2;
_4 = [273309400695846760781224168309840203196_u128,136529796973994883326257987308778851019_u128,90489205145250888100408435289057803431_u128,291937485209261476710877078962685769816_u128];
Goto(bb8)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_9.1 = _8;
RET = _8 as f32;
_12 = _7;
_11 = _9.2;
_11 = _9.2;
_11 = _12;
_5 = _8 << _9.1;
_9.2 = _12;
RET = _9.0 as f32;
_12 = _7;
RET = 7113770939150453115_u64 as f32;
RET = 160732237589511849949907712928873432419_u128 as f32;
_10 = !(-105_isize);
Goto(bb17)
}
bb17 = {
Call(_15 = dump_var(17_usize, 4_usize, Move(_4), 11_usize, Move(_11), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_15 = dump_var(17_usize, 2_usize, Move(_2), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18() -> char {
mir! {
type RET = char;
let _1: *const Adt31;
let _2: [char; 4];
let _3: isize;
let _4: [u128; 5];
let _5: (&'static i8,);
let _6: (u128, *const [u16; 8], *const u8, &'static [i128; 6]);
let _7: char;
let _8: [usize; 1];
let _9: [u8; 2];
let _10: [bool; 4];
let _11: [u8; 2];
let _12: *const Adt31;
let _13: [bool; 4];
let _14: i16;
let _15: &'static mut *mut u8;
let _16: Adt29;
let _17: ([u16; 8], Adt52);
let _18: f64;
let _19: [i128; 6];
let _20: ();
let _21: ();
{
RET = '\u{447bf}';
RET = '\u{e7adf}';
RET = '\u{e92c}';
RET = '\u{bfc47}';
Goto(bb1)
}
bb1 = {
RET = '\u{905ca}';
RET = '\u{eaf2a}';
RET = '\u{75fd0}';
RET = '\u{c6ae3}';
RET = '\u{8e937}';
RET = '\u{dbb37}';
RET = '\u{43092}';
_2 = [RET,RET,RET,RET];
_3 = (-53_isize);
_3 = 9223372036854775807_isize * (-9223372036854775808_isize);
RET = '\u{5f150}';
_3 = 11056143852898243999_usize as isize;
_2 = [RET,RET,RET,RET];
_3 = (-9223372036854775808_isize) | 39_isize;
_3 = 9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_2 = [RET,RET,RET,RET];
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463454151235394913435648 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = '\u{b7b65}';
_3 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_2 = [RET,RET,RET,RET];
_4 = [220862406476399013612443696831393263138_u128,78028189655197038352060662309547152372_u128,246403333000720565763078025107400034345_u128,223538426971806792987715058554539167856_u128,34517506881166932030278323242739389271_u128];
RET = '\u{376c8}';
Goto(bb10)
}
bb10 = {
_4 = [269121815865754564496102611563390079517_u128,120980029522460785782578977430370990310_u128,205700550627131112861670686505325833325_u128,3073174136902816704318713795628741393_u128,254557579801024100990462367571267096984_u128];
RET = '\u{3fe3d}';
_2 = [RET,RET,RET,RET];
RET = '\u{aef48}';
RET = '\u{9ed89}';
RET = '\u{a28a4}';
RET = '\u{1433c}';
_2 = [RET,RET,RET,RET];
RET = '\u{34833}';
_3 = (-1_isize) >> 14_i8;
_7 = RET;
_8 = [12265330118542737832_usize];
_10 = [true,true,false,true];
Goto(bb11)
}
bb11 = {
_2 = [RET,RET,_7,RET];
_3 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_7 = RET;
_3 = 52_isize | 9223372036854775807_isize;
_9 = [117_u8,99_u8];
_6.0 = 122241295479770597189145050815145915352_u128 + 144600849740164046350044841288226746579_u128;
_10 = [true,false,true,true];
_13 = [false,false,false,true];
_11 = [226_u8,167_u8];
_4 = [_6.0,_6.0,_6.0,_6.0,_6.0];
_14 = 28428_i16;
Goto(bb12)
}
bb12 = {
_6.0 = !15059501193714299284663714573230703001_u128;
_3 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
Goto(bb13)
}
bb13 = {
_14 = 134_u8 as i16;
_16.fld1 = [141145417_u32,3592398449_u32,4272440484_u32];
_11 = [154_u8,163_u8];
_16.fld4 = !7162251195517748750_usize;
_16.fld2 = (-838990710_i32) as i128;
_16.fld6 = -(-3734578653796082731_i64);
_11 = [189_u8,200_u8];
RET = _7;
_9 = _11;
_4 = [_6.0,_6.0,_6.0,_6.0,_6.0];
_9 = _11;
_16.fld5 = _3 as f32;
_3 = 9223372036854775807_isize << _16.fld2;
_16.fld6 = (-7432501907337833738_i64) - (-3379439138737216556_i64);
_16.fld5 = 104_u8 as f32;
_10 = _13;
Goto(bb14)
}
bb14 = {
_16.fld6 = (-7245002175637931468_i64) | (-7396307674771925220_i64);
_6.1 = core::ptr::addr_of!(_17.0);
_13 = _10;
_16.fld0 = !true;
RET = _7;
_7 = RET;
RET = _7;
_16.fld5 = 978256003_u32 as f32;
_6.0 = 139531988382143654964817414839377256027_u128 & 180197654706797148320559075399986305132_u128;
_16.fld4 = 3697818965438243144_usize + 7_usize;
_6.0 = 196675008927383902573229911776579223961_u128;
_17.0 = [64644_u16,52083_u16,8873_u16,7143_u16,61294_u16,63861_u16,4980_u16,54934_u16];
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(18_usize, 7_usize, Move(_7), 10_usize, Move(_10), 2_usize, Move(_2), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(18_usize, 14_usize, Move(_14), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: bool,mut _4: [u16; 8],mut _5: [u16; 8]) -> (f64, u32, char) {
mir! {
type RET = (f64, u32, char);
let _6: *mut *const &'static u64;
let _7: i16;
let _8: &'static [u16; 6];
let _9: Adt73;
let _10: f64;
let _11: i8;
let _12: (&'static i8,);
let _13: usize;
let _14: [u8; 6];
let _15: f64;
let _16: Adt81;
let _17: (f64, *const [u16; 8], u64, *mut [u128; 5]);
let _18: char;
let _19: [isize; 4];
let _20: Adt29;
let _21: u32;
let _22: i16;
let _23: *const [u16; 8];
let _24: ();
let _25: ();
{
RET.1 = 3573893525_u32 << 3235501234_u32;
Goto(bb1)
}
bb1 = {
RET.0 = 26726_i16 as f64;
RET.2 = '\u{26c38}';
RET.0 = 232_u8 as f64;
_4 = [23726_u16,36045_u16,10296_u16,49205_u16,49385_u16,43390_u16,5374_u16,28965_u16];
RET.1 = 4134592430_u32;
RET.2 = '\u{a223f}';
_5 = [41177_u16,6598_u16,4400_u16,443_u16,24156_u16,52383_u16,31021_u16,20577_u16];
RET.0 = 15392526035093542109_usize as f64;
RET.2 = '\u{24793}';
_1 = [14157_u16,30410_u16,10287_u16,28419_u16,21947_u16,6789_u16,33053_u16,15756_u16];
_5 = [15839_u16,8162_u16,46067_u16,43915_u16,37207_u16,31649_u16,62745_u16,47484_u16];
_2 = _5;
_7 = 15187_i16 | 20732_i16;
_3 = !false;
_7 = (-26444_i16);
_3 = !true;
_2 = [49269_u16,30506_u16,41146_u16,43893_u16,14866_u16,56998_u16,21362_u16,3688_u16];
_2 = _4;
_5 = [22253_u16,63530_u16,48809_u16,5703_u16,27567_u16,17196_u16,17512_u16,6597_u16];
_3 = false;
RET.2 = '\u{cd8f0}';
_3 = false | false;
RET.0 = 5971308150427754741_i64 as f64;
RET.1 = 188_u8 as u32;
RET.1 = 1241023021_u32;
RET.1 = 3974129579_u32 | 1187572528_u32;
_10 = RET.0;
match _7 {
0 => bb2,
340282366920938463463374607431768185012 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_5 = [59666_u16,13900_u16,52973_u16,44409_u16,32338_u16,48887_u16,39061_u16,2372_u16];
_11 = 16881749644770462146374986676062098435_u128 as i8;
RET.2 = '\u{45ecc}';
_2 = _1;
_7 = (-24830_i16) * (-23853_i16);
_7 = 3823920347535458481_usize as i16;
RET = (_10, 1340680019_u32, '\u{a61a}');
Goto(bb5)
}
bb5 = {
RET = (_10, 3743522193_u32, '\u{106a19}');
_12.0 = &_11;
_12.0 = &_11;
_13 = 0_usize;
RET.2 = '\u{c86f7}';
RET = (_10, 1948811126_u32, '\u{5cf65}');
_11 = (-83_i8);
RET = (_10, 2683651534_u32, '\u{101a0b}');
RET.0 = 310180057640511125822299483842854488765_u128 as f64;
RET.0 = _10;
_3 = !true;
RET.0 = 1803248879_i32 as f64;
_3 = false;
_2[_13] = !_5[_13];
RET.0 = _10 + _10;
RET = (_10, 3713566291_u32, '\u{feded}');
_4 = _5;
RET.1 = !2152453464_u32;
_1[_13] = !_5[_13];
_2[_13] = _4[_13];
RET.0 = -_10;
_15 = RET.0 + _10;
_7 = (-13783_i16) | 8110_i16;
Call(_14[_13] = core::intrinsics::transmute(_3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_14 = [220_u8,90_u8,117_u8,47_u8,224_u8,174_u8];
RET.2 = '\u{2e7a1}';
RET.1 = 573916703_u32 | 1490790023_u32;
_13 = _11 as usize;
_1 = [42040_u16,2004_u16,63415_u16,25965_u16,62193_u16,10461_u16,32349_u16,2809_u16];
_16.fld2.1 = _13 as f32;
_7 = 13079_i16;
RET.2 = '\u{e0312}';
_16.fld2.2 = !1270761218_i32;
_16.fld1 = RET.1;
_17.0 = _15 + _15;
_5 = [3237_u16,20305_u16,57712_u16,32146_u16,39997_u16,6239_u16,29325_u16,22373_u16];
_17.1 = core::ptr::addr_of!(_4);
_15 = -_17.0;
_1 = [47218_u16,65141_u16,10367_u16,60010_u16,17862_u16,4205_u16,22038_u16,54232_u16];
match _11 {
0 => bb1,
1 => bb7,
2 => bb8,
340282366920938463463374607431768211373 => bb10,
_ => bb9
}
}
bb7 = {
RET = (_10, 3743522193_u32, '\u{106a19}');
_12.0 = &_11;
_12.0 = &_11;
_13 = 0_usize;
RET.2 = '\u{c86f7}';
RET = (_10, 1948811126_u32, '\u{5cf65}');
_11 = (-83_i8);
RET = (_10, 2683651534_u32, '\u{101a0b}');
RET.0 = 310180057640511125822299483842854488765_u128 as f64;
RET.0 = _10;
_3 = !true;
RET.0 = 1803248879_i32 as f64;
_3 = false;
_2[_13] = !_5[_13];
RET.0 = _10 + _10;
RET = (_10, 3713566291_u32, '\u{feded}');
_4 = _5;
RET.1 = !2152453464_u32;
_1[_13] = !_5[_13];
_2[_13] = _4[_13];
RET.0 = -_10;
_15 = RET.0 + _10;
_7 = (-13783_i16) | 8110_i16;
Call(_14[_13] = core::intrinsics::transmute(_3), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14 = [230_u8,47_u8,226_u8,98_u8,89_u8,102_u8];
_4 = [40193_u16,60094_u16,5164_u16,7889_u16,9749_u16,51606_u16,3682_u16,15528_u16];
_5 = [3013_u16,47525_u16,16541_u16,59874_u16,56648_u16,59658_u16,55637_u16,38616_u16];
_17.2 = 13203836873249040509_u64;
_1 = _4;
_10 = _13 as f64;
RET.1 = !_16.fld1;
_3 = !false;
RET = (_15, _16.fld1, '\u{16bbc}');
_16.fld2.2 = (-460840898_i32);
_17.2 = 10371570675416011925_u64 - 10462569012302339605_u64;
_18 = RET.2;
_2 = _1;
_12.0 = &_11;
RET = (_17.0, _16.fld1, _18);
_14 = [213_u8,185_u8,94_u8,154_u8,44_u8,242_u8];
RET = (_10, _16.fld1, _18);
RET.0 = _17.0 + _15;
_17.2 = 17547055539850225604_u64 & 6165663944825633484_u64;
_14 = [96_u8,162_u8,136_u8,254_u8,1_u8,180_u8];
_2 = [24166_u16,48173_u16,44693_u16,53645_u16,26835_u16,50002_u16,30061_u16,34822_u16];
RET.0 = -_15;
_16.fld2.1 = _13 as f32;
_2 = _5;
_17.1 = core::ptr::addr_of!(_5);
_18 = RET.2;
_17.1 = core::ptr::addr_of!(_2);
_10 = -RET.0;
_12.0 = &_11;
match _7 {
0 => bb9,
1 => bb11,
13079 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
RET = (_10, 3743522193_u32, '\u{106a19}');
_12.0 = &_11;
_12.0 = &_11;
_13 = 0_usize;
RET.2 = '\u{c86f7}';
RET = (_10, 1948811126_u32, '\u{5cf65}');
_11 = (-83_i8);
RET = (_10, 2683651534_u32, '\u{101a0b}');
RET.0 = 310180057640511125822299483842854488765_u128 as f64;
RET.0 = _10;
_3 = !true;
RET.0 = 1803248879_i32 as f64;
_3 = false;
_2[_13] = !_5[_13];
RET.0 = _10 + _10;
RET = (_10, 3713566291_u32, '\u{feded}');
_4 = _5;
RET.1 = !2152453464_u32;
_1[_13] = !_5[_13];
_2[_13] = _4[_13];
RET.0 = -_10;
_15 = RET.0 + _10;
_7 = (-13783_i16) | 8110_i16;
Call(_14[_13] = core::intrinsics::transmute(_3), ReturnTo(bb6), UnwindUnreachable())
}
bb13 = {
_16.fld1 = !RET.1;
_14 = [218_u8,209_u8,134_u8,249_u8,189_u8,191_u8];
Goto(bb14)
}
bb14 = {
_20.fld1 = [_16.fld1,_16.fld1,_16.fld1];
_20.fld2 = _3 as i128;
RET.2 = _18;
RET.0 = _15;
_15 = -_17.0;
RET = (_17.0, _16.fld1, _18);
RET.2 = _18;
_13 = _10 as usize;
_16.fld2.1 = (-9223372036854775808_isize) as f32;
_16.fld2.2 = !706287959_i32;
_16.fld2.1 = _13 as f32;
_19 = [(-114_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.2 = 8193255327599554586_u64;
_11 = (-31_i8);
RET.1 = !_16.fld1;
_22 = _7;
_16.fld2.2 = -(-292859983_i32);
_17.1 = core::ptr::addr_of!(_1);
_11 = _16.fld1 as i8;
_16.fld2.2 = 1845865707_i32;
_22 = -_7;
_16.fld1 = _17.2 as u32;
_17.1 = core::ptr::addr_of!(_4);
_20.fld6 = _22 as i64;
_3 = true;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(19_usize, 11_usize, Move(_11), 4_usize, Move(_4), 13_usize, Move(_13), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(19_usize, 19_usize, Move(_19), 1_usize, Move(_1), 25_usize, _25, 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{b3597}'), std::hint::black_box(9223372036854775807_isize), std::hint::black_box((-13_i8)), std::hint::black_box((-8320_i16)), std::hint::black_box((-1791190409_i32)), std::hint::black_box(5713351300702774434_i64), std::hint::black_box(86625144469135328468566375080676090185_i128), std::hint::black_box(3654064603_u32), std::hint::black_box(26_u8), std::hint::black_box(50663_u16));
                
            }
#[derive(Debug)]
pub struct Adt29 {
fld0: bool,
fld1: [u32; 3],
fld2: i128,
fld3: *const u8,
fld4: usize,
fld5: f32,
fld6: i64,
}
#[derive(Debug)]
pub struct Adt31 {
fld0: (f64, u32, char),
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt31,
fld1: char,
fld2: (char,),
fld3: i8,
fld4: i16,
fld5: Adt29,
fld6: *const u8,

},
Variant1{
fld0: [u8; 2],
fld1: [isize; 4],
fld2: *mut f64,
fld3: *mut u8,
fld4: i16,
fld5: [u32; 3],
fld6: (*mut u8,),

},
Variant2{
fld0: u8,
fld1: (Adt31, isize),
fld2: [u128; 5],
fld3: [u32; 3],
fld4: u128,

}}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: [i128; 6],

},
Variant1{
fld0: (char,),
fld1: Adt52,
fld2: u8,
fld3: ([u16; 8],),
fld4: *const u8,

}}
#[derive(Debug)]
pub enum Adt67 {
Variant0{
fld0: *const u8,
fld1: [u32; 3],
fld2: [bool; 7],
fld3: (char,),
fld4: i16,
fld5: [u8; 6],
fld6: u64,

},
Variant1{
fld0: isize,

}}
#[derive(Debug)]
pub enum Adt73 {
Variant0{
fld0: (*mut u8, f32, i32),
fld1: u128,
fld2: u64,

},
Variant1{
fld0: [u8; 2],
fld1: i128,
fld2: isize,
fld3: i32,
fld4: i16,

},
Variant2{
fld0: bool,
fld1: [u16; 6],
fld2: [u16; 1],
fld3: [bool; 4],

},
Variant3{
fld0: u16,
fld1: [u16; 1],
fld2: [u128; 5],
fld3: (*mut u8,),
fld4: usize,
fld5: f64,
fld6: ([u16; 8],),

}}
#[derive(Debug)]
pub struct Adt81 {
fld0: (*mut u8,),
fld1: u32,
fld2: (*mut u8, f32, i32),
}
#[derive(Debug)]
pub enum Adt82 {
Variant0{
fld0: *mut u8,

},
Variant1{
fld0: [bool; 7],
fld1: *const [u16; 8],
fld2: [u16; 6],
fld3: [u16; 1],
fld4: [u32; 3],
fld5: Adt52,
fld6: [u128; 5],

},
Variant2{
fld0: [u32; 3],
fld1: [u16; 6],
fld2: (f64, *const [u16; 8], u64, *mut [u128; 5]),
fld3: Adt52,

}}

