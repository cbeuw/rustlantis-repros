#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u128) -> isize {
mir! {
type RET = isize;
let _2: f64;
let _3: (char,);
let _4: (&'static Adt30, u16, (char,), (([i16; 2],), Adt31, u32));
let _5: i64;
let _6: [u8; 7];
let _7: &'static mut Adt75;
let _8: u32;
let _9: i16;
let _10: u8;
let _11: i16;
let _12: i16;
let _13: (&'static Adt30, u16, (char,), (([i16; 2],), Adt31, u32));
let _14: isize;
let _15: (char,);
let _16: (([i16; 2],), Adt31, u32);
let _17: char;
let _18: isize;
let _19: isize;
let _20: char;
let _21: ();
let _22: ();
{
RET = -9223372036854775807_isize;
RET = true as isize;
_1 = 322193090541535860655182545802121600593_u128 + 224768874400995493389471183834921521534_u128;
RET = 9223372036854775807_isize >> _1;
RET = 9223372036854775807_isize << _1;
RET = !(-9223372036854775808_isize);
RET = 34_isize;
RET = (-9223372036854775808_isize);
RET = -9223372036854775807_isize;
RET = -29_isize;
RET = (-37_isize);
RET = 114_isize;
RET = (-9223372036854775808_isize);
RET = !9223372036854775807_isize;
RET = 13708_u16 as isize;
_1 = 23188160351526852317963842902917822832_u128;
Goto(bb1)
}
bb1 = {
RET = (-9223372036854775808_isize);
RET = (-31_isize);
RET = 2267_i16 as isize;
_1 = 247249061051331989518959795390590194145_u128 << RET;
_1 = 49528155304632001669460879177581741605_u128 & 307269425817156730382381470212231633816_u128;
_1 = 170394536056613408379177828478368954418_u128 + 303915372497586324362033801745986945043_u128;
_2 = 3825232442_u32 as f64;
_2 = 6462261777365247835_u64 as f64;
_2 = _1 as f64;
RET = (-9223372036854775808_isize) + 7_isize;
_1 = 209_u8 as u128;
_2 = 18_u8 as f64;
_2 = 43116_u16 as f64;
_4.2 = ('\u{1020e0}',);
_1 = !159728845736257446935370475240364929510_u128;
_2 = 2750944170_u32 as f64;
_4.1 = 21377_i16 as u16;
_4.3.0.0 = [7629_i16,28999_i16];
_4.3.1 = Adt31::Variant2 { fld0: false,fld1: _4.1,fld2: 95107593222722571364269690390078868733_i128 };
_5 = !(-1115355757936471114_i64);
_4.2 = ('\u{9f602}',);
Goto(bb2)
}
bb2 = {
_3 = _4.2;
Call(RET = fn1(_3.0, _4.2.0, _4.3.0.0, _3.0, _4.2.0, _4.3.0.0, _5, _4.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = 2666397205910896064_usize as f64;
_4.3.0.0 = [(-21404_i16),1856_i16];
_1 = 85726193552065483366759751427094880941_u128;
_4.2.0 = _3.0;
place!(Field::<u16>(Variant(_4.3.1, 2), 1)) = !_4.1;
place!(Field::<bool>(Variant(_4.3.1, 2), 0)) = !false;
_3 = (_4.2.0,);
place!(Field::<i128>(Variant(_4.3.1, 2), 2)) = 7_usize as i128;
_4.2 = _3;
_4.1 = !Field::<u16>(Variant(_4.3.1, 2), 1);
RET = -(-73_isize);
_4.3.2 = 2831544860_u32;
RET = 9223372036854775807_isize & 9223372036854775807_isize;
place!(Field::<u16>(Variant(_4.3.1, 2), 1)) = _4.1 << _5;
place!(Field::<u16>(Variant(_4.3.1, 2), 1)) = _4.1 * _4.1;
RET = 9223372036854775807_isize * 9223372036854775807_isize;
RET = 9223372036854775807_isize;
_3.0 = _4.2.0;
_3.0 = _4.2.0;
_5 = 6180478410653724197_i64;
_5 = !1841486053893792700_i64;
_1 = 96985517984830128047956387576088712512_u128 >> Field::<i128>(Variant(_4.3.1, 2), 2);
_3.0 = _4.2.0;
_4.3.2 = 3443472156_u32 & 3088161165_u32;
_8 = _4.3.2 * _4.3.2;
place!(Field::<bool>(Variant(_4.3.1, 2), 0)) = false;
_6 = [225_u8,60_u8,41_u8,175_u8,223_u8,230_u8,97_u8];
_2 = RET as f64;
Goto(bb4)
}
bb4 = {
place!(Field::<bool>(Variant(_4.3.1, 2), 0)) = !true;
SetDiscriminant(_4.3.1, 1);
place!(Field::<u128>(Variant(_4.3.1, 1), 4)) = _1 >> _1;
place!(Field::<(u16,)>(Variant(_4.3.1, 1), 0)) = (_4.1,);
_8 = !_4.3.2;
place!(Field::<u128>(Variant(_4.3.1, 1), 4)) = !_1;
_3 = (_4.2.0,);
_4.2.0 = _3.0;
place!(Field::<[i16; 2]>(Variant(_4.3.1, 1), 5)) = [(-31880_i16),3108_i16];
_5 = (-791049176_i32) as i64;
_6 = [119_u8,181_u8,203_u8,191_u8,206_u8,231_u8,215_u8];
_6 = [33_u8,237_u8,181_u8,43_u8,121_u8,79_u8,171_u8];
place!(Field::<isize>(Variant(_4.3.1, 1), 2)) = _5 as isize;
_5 = 594400268942324592_i64 << Field::<u128>(Variant(_4.3.1, 1), 4);
_1 = Field::<u128>(Variant(_4.3.1, 1), 4);
place!(Field::<[i16; 2]>(Variant(_4.3.1, 1), 5)) = _4.3.0.0;
_2 = 12115850590458747828_u64 as f64;
place!(Field::<*const ([i16; 2],)>(Variant(_4.3.1, 1), 1)) = core::ptr::addr_of!(_4.3.0);
_9 = 18387_i16;
_4.2.0 = _3.0;
_4.1 = Field::<(u16,)>(Variant(_4.3.1, 1), 0).0 - Field::<(u16,)>(Variant(_4.3.1, 1), 0).0;
place!(Field::<(u16,)>(Variant(_4.3.1, 1), 0)) = (_4.1,);
_4.3.2 = _8;
_4.2 = _3;
_9 = (-21407_i16);
_8 = !_4.3.2;
RET = _8 as isize;
_4.3.0 = (Field::<[i16; 2]>(Variant(_4.3.1, 1), 5),);
Goto(bb5)
}
bb5 = {
RET = Field::<isize>(Variant(_4.3.1, 1), 2) | Field::<isize>(Variant(_4.3.1, 1), 2);
place!(Field::<*const ([i16; 2],)>(Variant(_4.3.1, 1), 1)) = core::ptr::addr_of!(_4.3.0);
place!(Field::<isize>(Variant(_4.3.1, 1), 2)) = -RET;
Goto(bb6)
}
bb6 = {
place!(Field::<*const ([i16; 2],)>(Variant(_4.3.1, 1), 1)) = core::ptr::addr_of!(_4.3.0);
_4.3.2 = _8;
place!(Field::<u128>(Variant(_4.3.1, 1), 4)) = _1 * _1;
place!(Field::<(u16,)>(Variant(_4.3.1, 1), 0)).0 = Field::<u128>(Variant(_4.3.1, 1), 4) as u16;
place!(Field::<i8>(Variant(_4.3.1, 1), 3)) = 78_i8;
_2 = _9 as f64;
_4.1 = Field::<(u16,)>(Variant(_4.3.1, 1), 0).0;
_2 = 132_u8 as f64;
_6 = [40_u8,70_u8,76_u8,152_u8,168_u8,193_u8,185_u8];
_12 = Field::<(u16,)>(Variant(_4.3.1, 1), 0).0 as i16;
RET = Field::<isize>(Variant(_4.3.1, 1), 2) ^ Field::<isize>(Variant(_4.3.1, 1), 2);
_5 = (-8626434545594503149_i64) & 2861701734892573463_i64;
match _9 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463463374607431768190049 => bb12,
_ => bb11
}
}
bb7 = {
RET = Field::<isize>(Variant(_4.3.1, 1), 2) | Field::<isize>(Variant(_4.3.1, 1), 2);
place!(Field::<*const ([i16; 2],)>(Variant(_4.3.1, 1), 1)) = core::ptr::addr_of!(_4.3.0);
place!(Field::<isize>(Variant(_4.3.1, 1), 2)) = -RET;
Goto(bb6)
}
bb8 = {
place!(Field::<bool>(Variant(_4.3.1, 2), 0)) = !true;
SetDiscriminant(_4.3.1, 1);
place!(Field::<u128>(Variant(_4.3.1, 1), 4)) = _1 >> _1;
place!(Field::<(u16,)>(Variant(_4.3.1, 1), 0)) = (_4.1,);
_8 = !_4.3.2;
place!(Field::<u128>(Variant(_4.3.1, 1), 4)) = !_1;
_3 = (_4.2.0,);
_4.2.0 = _3.0;
place!(Field::<[i16; 2]>(Variant(_4.3.1, 1), 5)) = [(-31880_i16),3108_i16];
_5 = (-791049176_i32) as i64;
_6 = [119_u8,181_u8,203_u8,191_u8,206_u8,231_u8,215_u8];
_6 = [33_u8,237_u8,181_u8,43_u8,121_u8,79_u8,171_u8];
place!(Field::<isize>(Variant(_4.3.1, 1), 2)) = _5 as isize;
_5 = 594400268942324592_i64 << Field::<u128>(Variant(_4.3.1, 1), 4);
_1 = Field::<u128>(Variant(_4.3.1, 1), 4);
place!(Field::<[i16; 2]>(Variant(_4.3.1, 1), 5)) = _4.3.0.0;
_2 = 12115850590458747828_u64 as f64;
place!(Field::<*const ([i16; 2],)>(Variant(_4.3.1, 1), 1)) = core::ptr::addr_of!(_4.3.0);
_9 = 18387_i16;
_4.2.0 = _3.0;
_4.1 = Field::<(u16,)>(Variant(_4.3.1, 1), 0).0 - Field::<(u16,)>(Variant(_4.3.1, 1), 0).0;
place!(Field::<(u16,)>(Variant(_4.3.1, 1), 0)) = (_4.1,);
_4.3.2 = _8;
_4.2 = _3;
_9 = (-21407_i16);
_8 = !_4.3.2;
RET = _8 as isize;
_4.3.0 = (Field::<[i16; 2]>(Variant(_4.3.1, 1), 5),);
Goto(bb5)
}
bb9 = {
_2 = 2666397205910896064_usize as f64;
_4.3.0.0 = [(-21404_i16),1856_i16];
_1 = 85726193552065483366759751427094880941_u128;
_4.2.0 = _3.0;
place!(Field::<u16>(Variant(_4.3.1, 2), 1)) = !_4.1;
place!(Field::<bool>(Variant(_4.3.1, 2), 0)) = !false;
_3 = (_4.2.0,);
place!(Field::<i128>(Variant(_4.3.1, 2), 2)) = 7_usize as i128;
_4.2 = _3;
_4.1 = !Field::<u16>(Variant(_4.3.1, 2), 1);
RET = -(-73_isize);
_4.3.2 = 2831544860_u32;
RET = 9223372036854775807_isize & 9223372036854775807_isize;
place!(Field::<u16>(Variant(_4.3.1, 2), 1)) = _4.1 << _5;
place!(Field::<u16>(Variant(_4.3.1, 2), 1)) = _4.1 * _4.1;
RET = 9223372036854775807_isize * 9223372036854775807_isize;
RET = 9223372036854775807_isize;
_3.0 = _4.2.0;
_3.0 = _4.2.0;
_5 = 6180478410653724197_i64;
_5 = !1841486053893792700_i64;
_1 = 96985517984830128047956387576088712512_u128 >> Field::<i128>(Variant(_4.3.1, 2), 2);
_3.0 = _4.2.0;
_4.3.2 = 3443472156_u32 & 3088161165_u32;
_8 = _4.3.2 * _4.3.2;
place!(Field::<bool>(Variant(_4.3.1, 2), 0)) = false;
_6 = [225_u8,60_u8,41_u8,175_u8,223_u8,230_u8,97_u8];
_2 = RET as f64;
Goto(bb4)
}
bb10 = {
_3 = _4.2;
Call(RET = fn1(_3.0, _4.2.0, _4.3.0.0, _3.0, _4.2.0, _4.3.0.0, _5, _4.1), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
RET = (-9223372036854775808_isize);
RET = (-31_isize);
RET = 2267_i16 as isize;
_1 = 247249061051331989518959795390590194145_u128 << RET;
_1 = 49528155304632001669460879177581741605_u128 & 307269425817156730382381470212231633816_u128;
_1 = 170394536056613408379177828478368954418_u128 + 303915372497586324362033801745986945043_u128;
_2 = 3825232442_u32 as f64;
_2 = 6462261777365247835_u64 as f64;
_2 = _1 as f64;
RET = (-9223372036854775808_isize) + 7_isize;
_1 = 209_u8 as u128;
_2 = 18_u8 as f64;
_2 = 43116_u16 as f64;
_4.2 = ('\u{1020e0}',);
_1 = !159728845736257446935370475240364929510_u128;
_2 = 2750944170_u32 as f64;
_4.1 = 21377_i16 as u16;
_4.3.0.0 = [7629_i16,28999_i16];
_4.3.1 = Adt31::Variant2 { fld0: false,fld1: _4.1,fld2: 95107593222722571364269690390078868733_i128 };
_5 = !(-1115355757936471114_i64);
_4.2 = ('\u{9f602}',);
Goto(bb2)
}
bb12 = {
_4.3.2 = _8;
_12 = -_9;
_4.3.0.0 = [_9,_9];
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld2 = !8_u8;
_4.2.0 = _3.0;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld6.0 = _4.3.0.0;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld3 = [_5,_5,_5,_5,_5,_5,_5];
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld2 = 61_u8 << _5;
_4.3.0.0 = Field::<Adt30>(Variant(_4.3.1, 0), 4).fld6.0;
_6 = [Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2,Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2,Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2,Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2,Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2,Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2,Field::<Adt30>(Variant(_4.3.1, 0), 4).fld2];
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld1 = _4.1 >> _4.1;
_3.0 = _4.2.0;
_12 = _9;
_4.1 = 15385934410073447542_usize as u16;
place!(Field::<([i16; 2],)>(Variant(_4.3.1, 0), 1)).0 = _4.3.0.0;
_2 = 16795856089231726729_usize as f64;
Call(RET = core::intrinsics::bswap((-63_isize)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13.2.0 = _3.0;
_4.2 = (_3.0,);
place!(Field::<i8>(Variant(_4.3.1, 0), 3)) = -(-39_i8);
_4.3.2 = _8 + _8;
_13.3.1 = Adt31::Variant2 { fld0: true,fld1: Field::<Adt30>(Variant(_4.3.1, 0), 4).fld1,fld2: (-30423332116277294864090078034608037227_i128) };
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld6.0 = [_9,_12];
place!(Field::<i128>(Variant(_13.3.1, 2), 2)) = _2 as i128;
place!(Field::<i64>(Variant(_4.3.1, 0), 2)) = !_5;
place!(Field::<u16>(Variant(_13.3.1, 2), 1)) = !Field::<Adt30>(Variant(_4.3.1, 0), 4).fld1;
_15 = (_4.2.0,);
place!(Field::<([i16; 2],)>(Variant(_4.3.1, 0), 1)) = (_4.3.0.0,);
_13.1 = !Field::<Adt30>(Variant(_4.3.1, 0), 4).fld1;
place!(Field::<[i16; 2]>(Variant(_4.3.1, 0), 5)) = [_12,_9];
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld4 = Field::<[i16; 2]>(Variant(_4.3.1, 0), 5);
_13.3.0 = Field::<Adt30>(Variant(_4.3.1, 0), 4).fld6;
place!(Field::<bool>(Variant(_13.3.1, 2), 0)) = !false;
_4.3 = (_13.3.0, Move(_13.3.1), _8);
_10 = 72_u8;
_13.3.2 = Field::<bool>(Variant(_4.3.1, 2), 0) as u32;
_3.0 = _15.0;
place!(Field::<(char,)>(Variant(_4.3.1, 0), 0)) = _15;
place!(Field::<([i16; 2],)>(Variant(_4.3.1, 0), 1)) = _4.3.0;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld6 = (_13.3.0.0,);
place!(Field::<(char,)>(Variant(_4.3.1, 0), 0)).0 = _15.0;
Goto(bb14)
}
bb14 = {
place!(Field::<i64>(Variant(_4.3.1, 0), 2)) = -_5;
_16.0.0 = [_9,_12];
_18 = RET ^ RET;
_10 = _4.3.2 as u8;
_2 = 7893136415181177565_usize as f64;
_4.3.0 = (Field::<Adt30>(Variant(_4.3.1, 0), 4).fld6.0,);
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld3 = [_5,Field::<i64>(Variant(_4.3.1, 0), 2),_5,_5,Field::<i64>(Variant(_4.3.1, 0), 2),Field::<i64>(Variant(_4.3.1, 0), 2),Field::<i64>(Variant(_4.3.1, 0), 2)];
_5 = !Field::<i64>(Variant(_4.3.1, 0), 2);
_2 = (-963958489_i32) as f64;
place!(Field::<i64>(Variant(_4.3.1, 0), 2)) = -_5;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld6.0 = [_9,_9];
_17 = _13.2.0;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld1 = _13.1 + _13.1;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld2 = 41981992740074720678119091665763600315_i128 as u8;
_8 = _4.3.2;
place!(Field::<Adt30>(Variant(_4.3.1, 0), 4)).fld6 = _4.3.0;
_8 = _4.3.2 | _4.3.2;
_11 = !_12;
_13.3.2 = (-20631415749546680433629539546530449843_i128) as u32;
_13.2.0 = _15.0;
Goto(bb15)
}
bb15 = {
Call(_21 = dump_var(0_usize, 8_usize, Move(_8), 3_usize, Move(_3), 5_usize, Move(_5), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_21 = dump_var(0_usize, 17_usize, Move(_17), 10_usize, Move(_10), 22_usize, _22, 22_usize, _22), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: char,mut _2: char,mut _3: [i16; 2],mut _4: char,mut _5: char,mut _6: [i16; 2],mut _7: i64,mut _8: u16) -> isize {
mir! {
type RET = isize;
let _9: [i16; 2];
let _10: ([i64; 4], [u64; 7], [u64; 7]);
let _11: &'static Adt35;
let _12: i32;
let _13: (([i16; 2],), ([i16; 2],));
let _14: [i128; 2];
let _15: [i16; 2];
let _16: isize;
let _17: f64;
let _18: char;
let _19: [i8; 4];
let _20: *mut [u16; 6];
let _21: Adt56;
let _22: (char,);
let _23: (u16,);
let _24: isize;
let _25: isize;
let _26: [i64; 7];
let _27: &'static mut &'static mut u32;
let _28: u64;
let _29: f32;
let _30: i128;
let _31: ();
let _32: ();
{
RET = -9223372036854775807_isize;
_8 = 15857897618734238381_u64 as u16;
_7 = !(-4884012299467856364_i64);
Call(_4 = fn2(_1, _6, _6, _7, _2, _3, _7, _6, _3, RET, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [25924_i16,8818_i16];
_9 = [25670_i16,24630_i16];
_10.1 = [7781322214011635102_u64,7960785670483721508_u64,6475189008151574875_u64,15940793808120701885_u64,17116397602834055096_u64,2972913545375503926_u64,5049934755807727740_u64];
_10.2 = [5500897717975466834_u64,6939358013049325346_u64,16245517825737629930_u64,2449508216800225139_u64,7881134173734732699_u64,12956554983415264373_u64,8621350608771644451_u64];
_2 = _4;
_8 = 21840_u16 | 11857_u16;
_2 = _4;
_9 = [15278_i16,2670_i16];
_12 = 407075356_i32;
_13.0 = (_6,);
_8 = _1 as u16;
_13.1.0 = [26860_i16,13604_i16];
_9 = _13.0.0;
_10.2 = [9259227563194380963_u64,13878576994223196727_u64,5067759328100703901_u64,1012440146267961189_u64,13400407499874819180_u64,15749789885893959209_u64,15602598134051119840_u64];
_12 = !1852244834_i32;
_14 = [41044886492535050965983316879514840368_i128,121397242946816589796657813585131245810_i128];
_7 = _12 as i64;
_9 = [27794_i16,13611_i16];
_10.2 = [14514162779072190462_u64,467616728329956312_u64,12998477600318815446_u64,15192417195373784470_u64,12089176982861219725_u64,17337571273974150639_u64,14770039378969523590_u64];
_10.2 = _10.1;
_13.0.0 = _13.1.0;
_5 = _1;
_8 = !57226_u16;
_12 = !449834387_i32;
RET = !(-72_isize);
Goto(bb2)
}
bb2 = {
_13.1 = (_13.0.0,);
_4 = _5;
_13.0.0 = [15721_i16,(-14356_i16)];
_1 = _4;
RET = 56_isize - (-9223372036854775808_isize);
_15 = [137_i16,31011_i16];
_2 = _1;
_10.0 = [_7,_7,_7,_7];
_9 = [4187_i16,20306_i16];
Goto(bb3)
}
bb3 = {
_10.0 = [_7,_7,_7,_7];
RET = (-9223372036854775808_isize) | (-41_isize);
_6 = [13717_i16,(-19207_i16)];
_3 = [12573_i16,(-19656_i16)];
_2 = _4;
_14 = [(-108454371131176666005693137694761035990_i128),(-145410102492989689255946062349388851143_i128)];
_8 = 61996_u16 + 51360_u16;
_1 = _5;
RET = 9223372036854775807_isize;
_9 = [(-6012_i16),26295_i16];
_12 = _1 as i32;
_16 = -RET;
_13.0 = (_13.1.0,);
_3 = _13.0.0;
_7 = 3737406652464066642_i64 | 7671295484442714328_i64;
RET = -_16;
_15 = [(-4047_i16),3505_i16];
_4 = _1;
_17 = 1307988117240685580257227983098860890_i128 as f64;
_15 = [10435_i16,19713_i16];
_18 = _4;
_17 = 29237_i16 as f64;
_10.1 = [14011258694944794861_u64,3822563746767481600_u64,2671041045310733826_u64,14185843177933113377_u64,12812685498592041369_u64,4761578912350847299_u64,13829124229266622271_u64];
_6 = [(-25387_i16),7098_i16];
_9 = [(-32636_i16),24249_i16];
_2 = _4;
_16 = RET;
_14 = [(-21647428921390374990463736586168556625_i128),97787381533343205978899210091562947520_i128];
_8 = !30304_u16;
Goto(bb4)
}
bb4 = {
_15 = _3;
_15 = _3;
_16 = true as isize;
_6 = [(-28820_i16),4565_i16];
_5 = _18;
_2 = _18;
_6 = [17356_i16,(-9351_i16)];
_2 = _18;
_13.0 = (_6,);
_3 = [(-18488_i16),10239_i16];
_2 = _18;
_12 = -(-391391382_i32);
_13.0 = (_3,);
_8 = 103_i8 as u16;
_13.0 = (_13.1.0,);
_13.0.0 = [2586_i16,24134_i16];
_13.0.0 = [(-20800_i16),(-29760_i16)];
_12 = 647201689_i32 + 1153426537_i32;
_13.1.0 = [42_i16,23945_i16];
_22 = (_5,);
_22.0 = _1;
_5 = _1;
_13.0.0 = [32321_i16,15911_i16];
Goto(bb5)
}
bb5 = {
_13.0.0 = [31522_i16,(-15903_i16)];
_2 = _22.0;
_8 = 64638_u16;
_1 = _4;
_13.0 = (_15,);
_19 = [(-94_i8),(-64_i8),5_i8,(-24_i8)];
_14 = [120282416306311570045477317857582306588_i128,145719470660493455749594987212982678605_i128];
_2 = _5;
_22 = (_1,);
_3 = _15;
_13.0 = _13.1;
_1 = _2;
_13.1 = (_6,);
_10.0 = [_7,_7,_7,_7];
_13.0 = _13.1;
_18 = _5;
_16 = RET;
_10.2 = _10.1;
_13.0 = (_9,);
_3 = _15;
_13.0 = _13.1;
match _8 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
64638 => bb14,
_ => bb13
}
}
bb6 = {
_15 = _3;
_15 = _3;
_16 = true as isize;
_6 = [(-28820_i16),4565_i16];
_5 = _18;
_2 = _18;
_6 = [17356_i16,(-9351_i16)];
_2 = _18;
_13.0 = (_6,);
_3 = [(-18488_i16),10239_i16];
_2 = _18;
_12 = -(-391391382_i32);
_13.0 = (_3,);
_8 = 103_i8 as u16;
_13.0 = (_13.1.0,);
_13.0.0 = [2586_i16,24134_i16];
_13.0.0 = [(-20800_i16),(-29760_i16)];
_12 = 647201689_i32 + 1153426537_i32;
_13.1.0 = [42_i16,23945_i16];
_22 = (_5,);
_22.0 = _1;
_5 = _1;
_13.0.0 = [32321_i16,15911_i16];
Goto(bb5)
}
bb7 = {
_10.0 = [_7,_7,_7,_7];
RET = (-9223372036854775808_isize) | (-41_isize);
_6 = [13717_i16,(-19207_i16)];
_3 = [12573_i16,(-19656_i16)];
_2 = _4;
_14 = [(-108454371131176666005693137694761035990_i128),(-145410102492989689255946062349388851143_i128)];
_8 = 61996_u16 + 51360_u16;
_1 = _5;
RET = 9223372036854775807_isize;
_9 = [(-6012_i16),26295_i16];
_12 = _1 as i32;
_16 = -RET;
_13.0 = (_13.1.0,);
_3 = _13.0.0;
_7 = 3737406652464066642_i64 | 7671295484442714328_i64;
RET = -_16;
_15 = [(-4047_i16),3505_i16];
_4 = _1;
_17 = 1307988117240685580257227983098860890_i128 as f64;
_15 = [10435_i16,19713_i16];
_18 = _4;
_17 = 29237_i16 as f64;
_10.1 = [14011258694944794861_u64,3822563746767481600_u64,2671041045310733826_u64,14185843177933113377_u64,12812685498592041369_u64,4761578912350847299_u64,13829124229266622271_u64];
_6 = [(-25387_i16),7098_i16];
_9 = [(-32636_i16),24249_i16];
_2 = _4;
_16 = RET;
_14 = [(-21647428921390374990463736586168556625_i128),97787381533343205978899210091562947520_i128];
_8 = !30304_u16;
Goto(bb4)
}
bb8 = {
_13.1 = (_13.0.0,);
_4 = _5;
_13.0.0 = [15721_i16,(-14356_i16)];
_1 = _4;
RET = 56_isize - (-9223372036854775808_isize);
_15 = [137_i16,31011_i16];
_2 = _1;
_10.0 = [_7,_7,_7,_7];
_9 = [4187_i16,20306_i16];
Goto(bb3)
}
bb9 = {
_6 = [25924_i16,8818_i16];
_9 = [25670_i16,24630_i16];
_10.1 = [7781322214011635102_u64,7960785670483721508_u64,6475189008151574875_u64,15940793808120701885_u64,17116397602834055096_u64,2972913545375503926_u64,5049934755807727740_u64];
_10.2 = [5500897717975466834_u64,6939358013049325346_u64,16245517825737629930_u64,2449508216800225139_u64,7881134173734732699_u64,12956554983415264373_u64,8621350608771644451_u64];
_2 = _4;
_8 = 21840_u16 | 11857_u16;
_2 = _4;
_9 = [15278_i16,2670_i16];
_12 = 407075356_i32;
_13.0 = (_6,);
_8 = _1 as u16;
_13.1.0 = [26860_i16,13604_i16];
_9 = _13.0.0;
_10.2 = [9259227563194380963_u64,13878576994223196727_u64,5067759328100703901_u64,1012440146267961189_u64,13400407499874819180_u64,15749789885893959209_u64,15602598134051119840_u64];
_12 = !1852244834_i32;
_14 = [41044886492535050965983316879514840368_i128,121397242946816589796657813585131245810_i128];
_7 = _12 as i64;
_9 = [27794_i16,13611_i16];
_10.2 = [14514162779072190462_u64,467616728329956312_u64,12998477600318815446_u64,15192417195373784470_u64,12089176982861219725_u64,17337571273974150639_u64,14770039378969523590_u64];
_10.2 = _10.1;
_13.0.0 = _13.1.0;
_5 = _1;
_8 = !57226_u16;
_12 = !449834387_i32;
RET = !(-72_isize);
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_14 = [67804214013989110540969997611281763922_i128,(-93258449132847189629125045664431982199_i128)];
_16 = -RET;
_25 = _16 | RET;
_29 = 91516245754830977406813103553367835789_i128 as f32;
_12 = -(-1185047528_i32);
_24 = _4 as isize;
_13.0 = (_3,);
_22.0 = _1;
_16 = _25;
_6 = [(-30254_i16),(-12580_i16)];
_7 = -8279080346288741625_i64;
_6 = [12150_i16,(-6712_i16)];
_2 = _18;
_3 = [(-16533_i16),(-16397_i16)];
_14 = [(-2895717087977581618653893764280278515_i128),(-125650674325819004488044226170866031751_i128)];
_10.2 = [15694654027699301021_u64,10324038963652267580_u64,10353289200036323849_u64,15127504204962672463_u64,17844391466485318016_u64,5478556163300556540_u64,7110116913322180013_u64];
_15 = [9759_i16,(-29204_i16)];
_10.0 = [_7,_7,_7,_7];
_26 = [_7,_7,_7,_7,_7,_7,_7];
_19 = [(-20_i8),126_i8,(-20_i8),(-60_i8)];
_25 = _16 >> _16;
_23.0 = _8;
_10.2 = [4713228458211886381_u64,5196572461799704393_u64,16608597810779499449_u64,13522196992985968957_u64,9775811699244264524_u64,5767991208853473433_u64,15947062874066714726_u64];
_10.1 = [15421135393740261907_u64,13176372149796171382_u64,17696855418550321286_u64,14553123878084321652_u64,15233356242105153795_u64,15393350461856140664_u64,4313050408227912886_u64];
_23.0 = (-89516531263228798827872402674960968266_i128) as u16;
_3 = [(-31593_i16),15419_i16];
_1 = _4;
_25 = _24;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(1_usize, 13_usize, Move(_13), 5_usize, Move(_5), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(1_usize, 12_usize, Move(_12), 24_usize, Move(_24), 19_usize, Move(_19), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(1_usize, 8_usize, Move(_8), 16_usize, Move(_16), 22_usize, Move(_22), 32_usize, _32), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: char,mut _2: [i16; 2],mut _3: [i16; 2],mut _4: i64,mut _5: char,mut _6: [i16; 2],mut _7: i64,mut _8: [i16; 2],mut _9: [i16; 2],mut _10: isize,mut _11: char) -> char {
mir! {
type RET = char;
let _12: f32;
let _13: [i8; 4];
let _14: i8;
let _15: [u64; 7];
let _16: Adt31;
let _17: [i16; 2];
let _18: char;
let _19: char;
let _20: char;
let _21: *const char;
let _22: *mut [i64; 7];
let _23: f64;
let _24: [u16; 6];
let _25: [i64; 4];
let _26: isize;
let _27: [u8; 7];
let _28: f32;
let _29: char;
let _30: Adt75;
let _31: [u16; 6];
let _32: f64;
let _33: ();
let _34: ();
{
_4 = _5 as i64;
_3 = [(-19331_i16),8195_i16];
RET = _11;
_5 = _1;
_7 = _4;
_4 = _7;
_9 = [(-21067_i16),10650_i16];
_7 = !_4;
_8 = [31817_i16,7335_i16];
RET = _11;
_2 = [8570_i16,21973_i16];
_9 = [14089_i16,(-26807_i16)];
_3 = _6;
_6 = [17024_i16,23491_i16];
_5 = RET;
_7 = _4 << _4;
RET = _5;
RET = _5;
_2 = [(-2829_i16),7676_i16];
_7 = _4 - _4;
_13 = [(-26_i8),54_i8,(-74_i8),(-66_i8)];
_13 = [(-21_i8),(-83_i8),74_i8,(-83_i8)];
_6 = _9;
_7 = (-26445_i16) as i64;
_12 = _7 as f32;
Call(_9 = fn3(_2, _13, _10, _12, _1, _13, _12, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = _11;
_14 = _1 as i8;
Goto(bb2)
}
bb2 = {
_10 = -9223372036854775807_isize;
_1 = RET;
_7 = _4 + _4;
Goto(bb3)
}
bb3 = {
_9 = [21114_i16,(-21776_i16)];
_15 = [9518295086003612785_u64,3926862661258270321_u64,16273904585079475139_u64,501325726559056613_u64,15803073051643459062_u64,4412819161261841838_u64,7509972085483699092_u64];
_15 = [10980674167151489658_u64,9684306464286376416_u64,18075545653924452614_u64,15838901253716919535_u64,6261004721530513771_u64,17213579580816230101_u64,11940415399975535257_u64];
_2 = [(-15554_i16),(-14530_i16)];
Goto(bb4)
}
bb4 = {
_11 = RET;
_3 = [13899_i16,25524_i16];
_14 = (-54_i8) & 117_i8;
RET = _5;
_3 = [(-3055_i16),5892_i16];
_8 = _3;
_8 = _3;
Goto(bb5)
}
bb5 = {
_4 = false as i64;
_14 = 863204795_i32 as i8;
_3 = [23348_i16,4141_i16];
_9 = [(-20678_i16),(-23969_i16)];
_17 = [(-4747_i16),28594_i16];
_17 = _6;
_6 = [1443_i16,(-19021_i16)];
_14 = -(-22_i8);
RET = _1;
_18 = _11;
_19 = _5;
RET = _5;
_18 = _5;
_17 = [21287_i16,(-19348_i16)];
_15 = [8382374464568544575_u64,11628102925908831008_u64,12547984996985715349_u64,14081696533801746075_u64,1497679063736621271_u64,2062661009211430186_u64,16808123516976037741_u64];
_4 = _7;
_14 = 14_i8 * (-31_i8);
_19 = _11;
_20 = _11;
_12 = _10 as f32;
_19 = RET;
_17 = [8141_i16,22226_i16];
_19 = _1;
_20 = _5;
_8 = _9;
_17 = [26488_i16,24387_i16];
RET = _20;
Call(_9 = core::intrinsics::transmute(_11), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_6 = [(-15436_i16),(-8532_i16)];
_13 = [_14,_14,_14,_14];
_4 = _7 & _7;
_5 = _20;
_12 = 146093227219062146766789533756569320402_i128 as f32;
_15 = [9871200588185253676_u64,3197049798482747178_u64,1381360914240720333_u64,14215062081152634965_u64,3824494217695590310_u64,7247257242669609753_u64,17935100410788181156_u64];
_20 = _1;
_5 = _19;
_10 = 9223372036854775807_isize;
_4 = -_7;
_23 = _7 as f64;
RET = _18;
_13 = [_14,_14,_14,_14];
Call(_8 = fn19(_17, _9, _9, _17, _1, _19, _7), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_13 = [_14,_14,_14,_14];
RET = _5;
_16 = Adt31::Variant2 { fld0: false,fld1: 64108_u16,fld2: (-14790406069637681101580220111184800123_i128) };
_19 = _11;
place!(Field::<bool>(Variant(_16, 2), 0)) = _14 >= _14;
_16 = Adt31::Variant2 { fld0: true,fld1: 10045_u16,fld2: (-168379201265194721886033847171870806280_i128) };
_24 = [21377_u16,27387_u16,58565_u16,15407_u16,32976_u16,17901_u16];
_20 = _5;
match _10 {
0 => bb4,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
9223372036854775807 => bb13,
_ => bb12
}
}
bb8 = {
_6 = [(-15436_i16),(-8532_i16)];
_13 = [_14,_14,_14,_14];
_4 = _7 & _7;
_5 = _20;
_12 = 146093227219062146766789533756569320402_i128 as f32;
_15 = [9871200588185253676_u64,3197049798482747178_u64,1381360914240720333_u64,14215062081152634965_u64,3824494217695590310_u64,7247257242669609753_u64,17935100410788181156_u64];
_20 = _1;
_5 = _19;
_10 = 9223372036854775807_isize;
_4 = -_7;
_23 = _7 as f64;
RET = _18;
_13 = [_14,_14,_14,_14];
Call(_8 = fn19(_17, _9, _9, _17, _1, _19, _7), ReturnTo(bb7), UnwindUnreachable())
}
bb9 = {
_4 = false as i64;
_14 = 863204795_i32 as i8;
_3 = [23348_i16,4141_i16];
_9 = [(-20678_i16),(-23969_i16)];
_17 = [(-4747_i16),28594_i16];
_17 = _6;
_6 = [1443_i16,(-19021_i16)];
_14 = -(-22_i8);
RET = _1;
_18 = _11;
_19 = _5;
RET = _5;
_18 = _5;
_17 = [21287_i16,(-19348_i16)];
_15 = [8382374464568544575_u64,11628102925908831008_u64,12547984996985715349_u64,14081696533801746075_u64,1497679063736621271_u64,2062661009211430186_u64,16808123516976037741_u64];
_4 = _7;
_14 = 14_i8 * (-31_i8);
_19 = _11;
_20 = _11;
_12 = _10 as f32;
_19 = RET;
_17 = [8141_i16,22226_i16];
_19 = _1;
_20 = _5;
_8 = _9;
_17 = [26488_i16,24387_i16];
RET = _20;
Call(_9 = core::intrinsics::transmute(_11), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_11 = RET;
_3 = [13899_i16,25524_i16];
_14 = (-54_i8) & 117_i8;
RET = _5;
_3 = [(-3055_i16),5892_i16];
_8 = _3;
_8 = _3;
Goto(bb5)
}
bb11 = {
_9 = [21114_i16,(-21776_i16)];
_15 = [9518295086003612785_u64,3926862661258270321_u64,16273904585079475139_u64,501325726559056613_u64,15803073051643459062_u64,4412819161261841838_u64,7509972085483699092_u64];
_15 = [10980674167151489658_u64,9684306464286376416_u64,18075545653924452614_u64,15838901253716919535_u64,6261004721530513771_u64,17213579580816230101_u64,11940415399975535257_u64];
_2 = [(-15554_i16),(-14530_i16)];
Goto(bb4)
}
bb12 = {
_10 = -9223372036854775807_isize;
_1 = RET;
_7 = _4 + _4;
Goto(bb3)
}
bb13 = {
RET = _1;
_8 = [12972_i16,(-23979_i16)];
_6 = [15455_i16,(-22654_i16)];
place!(Field::<u16>(Variant(_16, 2), 1)) = !28455_u16;
_12 = 5551_i16 as f32;
_12 = Field::<u16>(Variant(_16, 2), 1) as f32;
_4 = _7 << _7;
place!(Field::<u16>(Variant(_16, 2), 1)) = 27595215537140115503142864445540944306_u128 as u16;
place!(Field::<i128>(Variant(_16, 2), 2)) = 3_usize as i128;
_15 = [1898293652381800647_u64,12403775229585448635_u64,14817444404400737586_u64,3554477164318899421_u64,17754002099277939351_u64,3504091472335632386_u64,11677188021845713883_u64];
_5 = _11;
_23 = Field::<i128>(Variant(_16, 2), 2) as f64;
_18 = _19;
_18 = _11;
_26 = -_10;
RET = _5;
_15 = [4547311268257361850_u64,1103502573563738879_u64,343898898415535225_u64,17100880967617446636_u64,11559155145868965948_u64,7615268490971240258_u64,14252664176867475869_u64];
RET = _5;
_20 = RET;
_27 = [215_u8,216_u8,181_u8,1_u8,66_u8,16_u8,114_u8];
RET = _20;
_27 = [130_u8,55_u8,167_u8,190_u8,235_u8,101_u8,121_u8];
RET = _1;
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23 = (-1112167527_i32) as f64;
_5 = RET;
_19 = _5;
_29 = _20;
_12 = _14 as f32;
_9 = _3;
_4 = Field::<u16>(Variant(_16, 2), 1) as i64;
_20 = _19;
_17 = [(-2322_i16),20163_i16];
_15 = [12909098430901912381_u64,16768490324165806867_u64,6237509741674139036_u64,15573026942552240309_u64,10511126198009812448_u64,4923881319547970766_u64,304579487975313558_u64];
_25 = [_7,_7,_7,_7];
_13 = [_14,_14,_14,_14];
_5 = _29;
_4 = _7 ^ _7;
_6 = _2;
_2 = [(-3399_i16),(-10332_i16)];
_29 = _20;
_19 = _11;
RET = _20;
_32 = -_23;
_25 = [_4,_4,_4,_4];
_31 = [Field::<u16>(Variant(_16, 2), 1),Field::<u16>(Variant(_16, 2), 1),Field::<u16>(Variant(_16, 2), 1),Field::<u16>(Variant(_16, 2), 1),Field::<u16>(Variant(_16, 2), 1),Field::<u16>(Variant(_16, 2), 1)];
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(2_usize, 26_usize, Move(_26), 14_usize, Move(_14), 7_usize, Move(_7), 20_usize, Move(_20)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(2_usize, 17_usize, Move(_17), 25_usize, Move(_25), 24_usize, Move(_24), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(2_usize, 9_usize, Move(_9), 13_usize, Move(_13), 31_usize, Move(_31), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i16; 2],mut _2: [i8; 4],mut _3: isize,mut _4: f32,mut _5: char,mut _6: [i8; 4],mut _7: f32,mut _8: isize) -> [i16; 2] {
mir! {
type RET = [i16; 2];
let _9: u8;
let _10: u32;
let _11: char;
let _12: *mut &'static mut &'static mut *const char;
let _13: i64;
let _14: bool;
let _15: &'static u8;
let _16: isize;
let _17: [i128; 2];
let _18: &'static mut u32;
let _19: u32;
let _20: &'static mut *const char;
let _21: ();
let _22: ();
{
_4 = _7;
RET = [(-12606_i16),7072_i16];
_4 = _7 * _7;
_8 = _3 & _3;
_9 = 137_u8 + 135_u8;
_7 = 59_i8 as f32;
RET = [(-11843_i16),21174_i16];
_3 = _8;
RET = _1;
_2 = [(-85_i8),(-28_i8),18_i8,74_i8];
_4 = -_7;
_4 = _7 * _7;
_9 = !129_u8;
_5 = '\u{daf45}';
Call(RET = fn4(_2, _8, _3, _4, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = _3 - _3;
_3 = _8;
_1 = [(-11349_i16),(-29750_i16)];
RET = _1;
_2 = _6;
RET = _1;
_6 = [78_i8,106_i8,104_i8,57_i8];
Goto(bb2)
}
bb2 = {
_5 = '\u{87993}';
_11 = _5;
RET = [12091_i16,26738_i16];
_2 = [(-110_i8),(-42_i8),34_i8,(-25_i8)];
_3 = -_8;
_10 = !1275415836_u32;
RET = _1;
_4 = _7;
_6 = [64_i8,(-79_i8),(-121_i8),(-74_i8)];
Goto(bb3)
}
bb3 = {
_4 = _10 as f32;
_13 = 660749885_i32 as i64;
_4 = -_7;
_13 = (-7024399490572503991_i64);
_6 = _2;
_9 = 143498689547641577074428995038499298497_i128 as u8;
_13 = 6034066050718906885_i64;
_5 = _11;
_11 = _5;
match _13 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6034066050718906885 => bb10,
_ => bb9
}
}
bb4 = {
_5 = '\u{87993}';
_11 = _5;
RET = [12091_i16,26738_i16];
_2 = [(-110_i8),(-42_i8),34_i8,(-25_i8)];
_3 = -_8;
_10 = !1275415836_u32;
RET = _1;
_4 = _7;
_6 = [64_i8,(-79_i8),(-121_i8),(-74_i8)];
Goto(bb3)
}
bb5 = {
_8 = _3 - _3;
_3 = _8;
_1 = [(-11349_i16),(-29750_i16)];
RET = _1;
_2 = _6;
RET = _1;
_6 = [78_i8,106_i8,104_i8,57_i8];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11 = _5;
RET = [(-868_i16),(-2711_i16)];
_13 = (-7552339729639794174_i64) & (-4566197846961793699_i64);
_15 = &_9;
_2 = [68_i8,90_i8,(-56_i8),(-123_i8)];
_11 = _5;
_2 = [(-18_i8),101_i8,(-86_i8),72_i8];
_16 = !_8;
_5 = _11;
_14 = !false;
_16 = -_8;
_15 = &_9;
_9 = !243_u8;
_8 = _16;
_2 = [(-65_i8),(-91_i8),61_i8,(-30_i8)];
_13 = 6282508405810147429_i64;
_15 = &_9;
_6 = [(-110_i8),(-116_i8),(-89_i8),100_i8];
_9 = !2_u8;
_3 = _16;
_3 = _16 + _8;
match _13 {
0 => bb7,
1 => bb11,
2 => bb12,
3 => bb13,
6282508405810147429 => bb15,
_ => bb14
}
}
bb11 = {
_4 = _10 as f32;
_13 = 660749885_i32 as i64;
_4 = -_7;
_13 = (-7024399490572503991_i64);
_6 = _2;
_9 = 143498689547641577074428995038499298497_i128 as u8;
_13 = 6034066050718906885_i64;
_5 = _11;
_11 = _5;
match _13 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6034066050718906885 => bb10,
_ => bb9
}
}
bb12 = {
_5 = '\u{87993}';
_11 = _5;
RET = [12091_i16,26738_i16];
_2 = [(-110_i8),(-42_i8),34_i8,(-25_i8)];
_3 = -_8;
_10 = !1275415836_u32;
RET = _1;
_4 = _7;
_6 = [64_i8,(-79_i8),(-121_i8),(-74_i8)];
Goto(bb3)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_6 = [(-82_i8),(-25_i8),(-49_i8),(-106_i8)];
_15 = &_9;
_11 = _5;
RET = [167_i16,8039_i16];
_17 = [151658054574799501348851354327891404664_i128,7869921167199614859850681821096699441_i128];
_10 = 101_i8 as u32;
_14 = !false;
Goto(bb16)
}
bb16 = {
Call(_21 = dump_var(3_usize, 14_usize, Move(_14), 6_usize, Move(_6), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_21 = dump_var(3_usize, 10_usize, Move(_10), 13_usize, Move(_13), 22_usize, _22, 22_usize, _22), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [i8; 4],mut _2: isize,mut _3: isize,mut _4: f32,mut _5: [i8; 4]) -> [i16; 2] {
mir! {
type RET = [i16; 2];
let _6: (&'static Adt35, [u16; 6], Adt40, *const (u16,));
let _7: isize;
let _8: [u64; 7];
let _9: *mut [i64; 7];
let _10: isize;
let _11: &'static mut (([i16; 2],), Adt31, u32);
let _12: u8;
let _13: i64;
let _14: isize;
let _15: *const (u16,);
let _16: u128;
let _17: i32;
let _18: isize;
let _19: Adt34;
let _20: Adt75;
let _21: [u8; 7];
let _22: isize;
let _23: ([i64; 4], [u64; 7], [u64; 7]);
let _24: [u64; 2];
let _25: &'static Adt35;
let _26: &'static Adt30;
let _27: (u16, u64);
let _28: &'static char;
let _29: i64;
let _30: ();
let _31: ();
{
_4 = 1209838963895387158_u64 as f32;
_2 = !_3;
_3 = !_2;
RET = [(-14118_i16),6012_i16];
_2 = _3;
_2 = _3 >> _3;
_6.1 = [33708_u16,35274_u16,14829_u16,39266_u16,33031_u16,20819_u16];
_2 = _3 >> _3;
RET = [29289_i16,(-21991_i16)];
_3 = false as isize;
RET = [(-22585_i16),18276_i16];
_6.1 = [44353_u16,45660_u16,18612_u16,2883_u16,41912_u16,22783_u16];
_4 = 12922_u16 as f32;
_4 = 15275359407151686435_usize as f32;
_2 = _3 << _3;
_1 = [(-6_i8),(-31_i8),(-33_i8),19_i8];
_6.1 = [23957_u16,1976_u16,27571_u16,52306_u16,16313_u16,21761_u16];
RET = [18683_i16,5679_i16];
RET = [14745_i16,5193_i16];
RET = [13069_i16,(-12261_i16)];
_1 = [(-39_i8),(-51_i8),62_i8,116_i8];
Call(_6.1 = fn5(_5, _1, _5, _2, _2, _1, _5, _5, _2, _3, RET, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [(-9629_i16),6690_i16];
_4 = (-80_i8) as f32;
_2 = _3 + _3;
RET = [7294_i16,19263_i16];
_4 = 1748343622_i32 as f32;
RET = [27185_i16,(-29632_i16)];
RET = [11754_i16,(-30089_i16)];
_1 = [110_i8,(-5_i8),(-10_i8),116_i8];
_2 = _3;
_2 = 59_i8 as isize;
RET = [25964_i16,14550_i16];
_2 = 51276_u16 as isize;
_7 = !_2;
_2 = _7 - _7;
_5 = _1;
_3 = !_7;
_8 = [17509837227221491293_u64,1867993765738609460_u64,10199437705281523763_u64,13558532354648257418_u64,4588957369173253997_u64,9552577622198151266_u64,16323455878473253182_u64];
RET = [(-1635_i16),(-12307_i16)];
_2 = _3;
Goto(bb2)
}
bb2 = {
_6.1 = [46387_u16,15966_u16,41983_u16,41879_u16,1842_u16,46924_u16];
_8 = [3842437103672368728_u64,10083696064890532123_u64,18439596038500565311_u64,7669888515918889156_u64,4178327810497328113_u64,3642251233407081106_u64,5012939767523834476_u64];
_8 = [13122664194000584372_u64,10137325640321878299_u64,17959236727853480890_u64,12474735167602981721_u64,6743231175665948177_u64,9716631690855845536_u64,3716414847812843907_u64];
_8 = [5722401597149977857_u64,830560138598490907_u64,11606671342532106957_u64,3744862155911568679_u64,18256230153143849061_u64,2413379661859881161_u64,4833012585881718909_u64];
_10 = 79_i8 as isize;
RET = [(-13055_i16),(-21520_i16)];
_10 = _7 >> _3;
_6.1 = [9489_u16,7842_u16,38856_u16,2837_u16,63627_u16,9906_u16];
Goto(bb3)
}
bb3 = {
_13 = (-4389413223400280210_i64);
_4 = 104_i8 as f32;
_12 = !7_u8;
RET = [13638_i16,(-30270_i16)];
_3 = _2;
_14 = _10;
Call(_3 = core::intrinsics::transmute(_7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_2 = -_14;
_5 = _1;
RET = [(-18153_i16),3194_i16];
_1 = [(-12_i8),(-29_i8),(-37_i8),26_i8];
_13 = 1818178273562208362_i64;
_5 = _1;
_7 = _3 - _2;
RET = [15435_i16,(-25795_i16)];
_10 = 1529701245_i32 as isize;
RET = [3188_i16,6078_i16];
_8 = [12749352356845878359_u64,8545017300409987583_u64,2206188013730029020_u64,1598628922448489978_u64,5148140389222081694_u64,8185041827497659000_u64,6478848022564847400_u64];
_16 = 227458368582320002029448563387268442997_u128;
_17 = (-1648074052_i32) * 354609951_i32;
_17 = 1265482242_i32 >> _7;
_4 = 0_usize as f32;
_1 = [74_i8,120_i8,122_i8,(-57_i8)];
RET = [28004_i16,(-641_i16)];
_7 = -_3;
_17 = !1939337883_i32;
_10 = !_14;
_13 = _17 as i64;
_7 = _10;
_8 = [5530037909357619919_u64,16793487116595644776_u64,3651754654394062632_u64,13216985837055287679_u64,12624687064287170580_u64,6664749243007932737_u64,8374815477511378252_u64];
_4 = (-23179_i16) as f32;
RET = [(-23620_i16),(-5790_i16)];
match _16 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
227458368582320002029448563387268442997 => bb8,
_ => bb7
}
}
bb5 = {
_13 = (-4389413223400280210_i64);
_4 = 104_i8 as f32;
_12 = !7_u8;
RET = [13638_i16,(-30270_i16)];
_3 = _2;
_14 = _10;
Call(_3 = core::intrinsics::transmute(_7), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_6.1 = [46387_u16,15966_u16,41983_u16,41879_u16,1842_u16,46924_u16];
_8 = [3842437103672368728_u64,10083696064890532123_u64,18439596038500565311_u64,7669888515918889156_u64,4178327810497328113_u64,3642251233407081106_u64,5012939767523834476_u64];
_8 = [13122664194000584372_u64,10137325640321878299_u64,17959236727853480890_u64,12474735167602981721_u64,6743231175665948177_u64,9716631690855845536_u64,3716414847812843907_u64];
_8 = [5722401597149977857_u64,830560138598490907_u64,11606671342532106957_u64,3744862155911568679_u64,18256230153143849061_u64,2413379661859881161_u64,4833012585881718909_u64];
_10 = 79_i8 as isize;
RET = [(-13055_i16),(-21520_i16)];
_10 = _7 >> _3;
_6.1 = [9489_u16,7842_u16,38856_u16,2837_u16,63627_u16,9906_u16];
Goto(bb3)
}
bb7 = {
RET = [(-9629_i16),6690_i16];
_4 = (-80_i8) as f32;
_2 = _3 + _3;
RET = [7294_i16,19263_i16];
_4 = 1748343622_i32 as f32;
RET = [27185_i16,(-29632_i16)];
RET = [11754_i16,(-30089_i16)];
_1 = [110_i8,(-5_i8),(-10_i8),116_i8];
_2 = _3;
_2 = 59_i8 as isize;
RET = [25964_i16,14550_i16];
_2 = 51276_u16 as isize;
_7 = !_2;
_2 = _7 - _7;
_5 = _1;
_3 = !_7;
_8 = [17509837227221491293_u64,1867993765738609460_u64,10199437705281523763_u64,13558532354648257418_u64,4588957369173253997_u64,9552577622198151266_u64,16323455878473253182_u64];
RET = [(-1635_i16),(-12307_i16)];
_2 = _3;
Goto(bb2)
}
bb8 = {
_10 = _3 + _2;
_5 = [42_i8,78_i8,11_i8,(-100_i8)];
_6.1 = [18882_u16,48470_u16,24555_u16,116_u16,22565_u16,56095_u16];
_4 = 17504_i16 as f32;
_13 = 3192125001595974299_i64;
_5 = _1;
_21 = [_12,_12,_12,_12,_12,_12,_12];
_18 = _7 * _10;
_7 = _13 as isize;
_18 = _10;
_12 = 212_u8 + 241_u8;
_21 = [_12,_12,_12,_12,_12,_12,_12];
_16 = 275109852100311158842303408445663848148_u128;
Goto(bb9)
}
bb9 = {
_18 = _10;
_3 = _10;
_7 = _3 & _2;
_13 = 5856568671984607228_i64 * 5982996131088409576_i64;
_21 = [_12,_12,_12,_12,_12,_12,_12];
RET = [7262_i16,(-25180_i16)];
_21 = [_12,_12,_12,_12,_12,_12,_12];
_2 = 15089571639845881712_u64 as isize;
_12 = !102_u8;
_8 = [17722060713777320871_u64,6867777094969990653_u64,14213523041359941684_u64,15504446799615871463_u64,9984629328662593132_u64,15377472611612565901_u64,18284604448337665267_u64];
_21 = [_12,_12,_12,_12,_12,_12,_12];
_4 = _13 as f32;
_23.2 = [6512757838950277818_u64,8664514675820473748_u64,585057310556762752_u64,16757279067907868677_u64,4337324210302082348_u64,11952475322505697117_u64,2576636348663573190_u64];
_24 = [14886122090296358161_u64,8250095536192135761_u64];
_17 = (-1978679798_i32) << _7;
_4 = 11845298585986718578_u64 as f32;
RET = [(-22621_i16),15316_i16];
_23.0 = [_13,_13,_13,_13];
_22 = 107_i8 as isize;
_13 = '\u{96db8}' as i64;
_27.1 = 614285544630984581_u64 << _16;
match _16 {
0 => bb3,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
275109852100311158842303408445663848148 => bb15,
_ => bb14
}
}
bb10 = {
_10 = _3 + _2;
_5 = [42_i8,78_i8,11_i8,(-100_i8)];
_6.1 = [18882_u16,48470_u16,24555_u16,116_u16,22565_u16,56095_u16];
_4 = 17504_i16 as f32;
_13 = 3192125001595974299_i64;
_5 = _1;
_21 = [_12,_12,_12,_12,_12,_12,_12];
_18 = _7 * _10;
_7 = _13 as isize;
_18 = _10;
_12 = 212_u8 + 241_u8;
_21 = [_12,_12,_12,_12,_12,_12,_12];
_16 = 275109852100311158842303408445663848148_u128;
Goto(bb9)
}
bb11 = {
_6.1 = [46387_u16,15966_u16,41983_u16,41879_u16,1842_u16,46924_u16];
_8 = [3842437103672368728_u64,10083696064890532123_u64,18439596038500565311_u64,7669888515918889156_u64,4178327810497328113_u64,3642251233407081106_u64,5012939767523834476_u64];
_8 = [13122664194000584372_u64,10137325640321878299_u64,17959236727853480890_u64,12474735167602981721_u64,6743231175665948177_u64,9716631690855845536_u64,3716414847812843907_u64];
_8 = [5722401597149977857_u64,830560138598490907_u64,11606671342532106957_u64,3744862155911568679_u64,18256230153143849061_u64,2413379661859881161_u64,4833012585881718909_u64];
_10 = 79_i8 as isize;
RET = [(-13055_i16),(-21520_i16)];
_10 = _7 >> _3;
_6.1 = [9489_u16,7842_u16,38856_u16,2837_u16,63627_u16,9906_u16];
Goto(bb3)
}
bb12 = {
RET = [(-9629_i16),6690_i16];
_4 = (-80_i8) as f32;
_2 = _3 + _3;
RET = [7294_i16,19263_i16];
_4 = 1748343622_i32 as f32;
RET = [27185_i16,(-29632_i16)];
RET = [11754_i16,(-30089_i16)];
_1 = [110_i8,(-5_i8),(-10_i8),116_i8];
_2 = _3;
_2 = 59_i8 as isize;
RET = [25964_i16,14550_i16];
_2 = 51276_u16 as isize;
_7 = !_2;
_2 = _7 - _7;
_5 = _1;
_3 = !_7;
_8 = [17509837227221491293_u64,1867993765738609460_u64,10199437705281523763_u64,13558532354648257418_u64,4588957369173253997_u64,9552577622198151266_u64,16323455878473253182_u64];
RET = [(-1635_i16),(-12307_i16)];
_2 = _3;
Goto(bb2)
}
bb13 = {
_13 = (-4389413223400280210_i64);
_4 = 104_i8 as f32;
_12 = !7_u8;
RET = [13638_i16,(-30270_i16)];
_3 = _2;
_14 = _10;
Call(_3 = core::intrinsics::transmute(_7), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_13 = (-4389413223400280210_i64);
_4 = 104_i8 as f32;
_12 = !7_u8;
RET = [13638_i16,(-30270_i16)];
_3 = _2;
_14 = _10;
Call(_3 = core::intrinsics::transmute(_7), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_29 = _13 * _13;
_23.0 = [_29,_29,_29,_13];
_7 = _10 | _22;
_6.1 = [26259_u16,9556_u16,21638_u16,22378_u16,45153_u16,21741_u16];
Goto(bb16)
}
bb16 = {
Call(_30 = dump_var(4_usize, 10_usize, Move(_10), 3_usize, Move(_3), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(4_usize, 12_usize, Move(_12), 2_usize, Move(_2), 21_usize, Move(_21), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [i8; 4],mut _2: [i8; 4],mut _3: [i8; 4],mut _4: isize,mut _5: isize,mut _6: [i8; 4],mut _7: [i8; 4],mut _8: [i8; 4],mut _9: isize,mut _10: isize,mut _11: [i16; 2],mut _12: [i8; 4]) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _13: usize;
let _14: char;
let _15: isize;
let _16: isize;
let _17: bool;
let _18: *const (Adt35, &'static char, (char,), *mut bool);
let _19: f32;
let _20: isize;
let _21: (char,);
let _22: f32;
let _23: isize;
let _24: [i64; 4];
let _25: &'static mut &'static mut *const char;
let _26: f64;
let _27: *const (Adt35, &'static char, (char,), *mut bool);
let _28: (&'static Adt30, u16, (char,), (([i16; 2],), Adt31, u32));
let _29: u128;
let _30: &'static *const ([i16; 2],);
let _31: i32;
let _32: f32;
let _33: f32;
let _34: isize;
let _35: ([i64; 4], [u64; 7], [u64; 7]);
let _36: *const isize;
let _37: &'static Adt35;
let _38: u32;
let _39: ();
let _40: ();
{
_12 = _1;
_4 = (-13393_i16) as isize;
Call(RET = fn6(_4, _8, _12, _9, _6, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = -_10;
RET = [5810_u16,6740_u16,34508_u16,44009_u16,46164_u16,35380_u16];
_5 = 196650387823891617777923367532212184507_u128 as isize;
_8 = _12;
_12 = [125_i8,(-93_i8),120_i8,35_i8];
_1 = [(-92_i8),23_i8,68_i8,(-11_i8)];
_1 = _2;
_1 = [(-88_i8),(-13_i8),76_i8,61_i8];
_13 = 14434017383694121441_usize;
RET = [48361_u16,33631_u16,4541_u16,8031_u16,32978_u16,45673_u16];
_5 = _13 as isize;
_14 = '\u{d2770}';
_13 = 4711485700673804247_usize;
_7 = [74_i8,(-58_i8),29_i8,39_i8];
_2 = _12;
_12 = [(-104_i8),107_i8,(-57_i8),(-106_i8)];
_15 = false as isize;
_2 = [18_i8,(-14_i8),14_i8,(-46_i8)];
_3 = _12;
_6 = [97_i8,(-94_i8),(-97_i8),17_i8];
_3 = _12;
_11 = [(-26435_i16),(-29428_i16)];
_6 = [120_i8,(-29_i8),119_i8,34_i8];
_6 = [75_i8,(-87_i8),(-88_i8),90_i8];
_5 = _10 + _10;
_3 = [(-79_i8),(-49_i8),(-79_i8),(-74_i8)];
_3 = _6;
match _13 {
0 => bb2,
4711485700673804247 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_6 = [66_i8,79_i8,124_i8,(-93_i8)];
_7 = _3;
_10 = _5;
_14 = '\u{23b0}';
_13 = 1_usize;
_1[_13] = 76461097385673607132769075315523446377_u128 as i8;
_16 = _15;
_9 = false as isize;
_16 = _4 | _4;
_2[_13] = _3[_13] * _6[_13];
_6 = [_8[_13],_7[_13],_12[_13],_2[_13]];
RET[_13] = 23835_u16 & 45404_u16;
RET = [15566_u16,11770_u16,49998_u16,26144_u16,56769_u16,9435_u16];
_14 = '\u{cdd89}';
_11 = [1670_i16,26212_i16];
_6[_13] = _8[_13] | _8[_13];
_7 = [_12[_13],_6[_13],_2[_13],_2[_13]];
_14 = '\u{57478}';
Call(_3[_13] = core::intrinsics::transmute(_6[_13]), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_3[_13] = _11[_13] as i8;
RET[_13] = 27306_u16 ^ 45568_u16;
_13 = 13940295256103478065_usize - 2089341766912513694_usize;
_5 = !_9;
_19 = (-1917241538_i32) as f32;
_9 = _16;
_19 = 10886005629060339635_u64 as f32;
_10 = _9 << _13;
_5 = _10 & _15;
_2 = [19_i8,103_i8,(-10_i8),100_i8];
_3 = [(-40_i8),(-78_i8),(-128_i8),(-107_i8)];
_17 = true;
_3 = _12;
_8 = _6;
RET = [40539_u16,39320_u16,60639_u16,23917_u16,59_u16,64102_u16];
_5 = !_10;
_2 = [24_i8,(-110_i8),(-29_i8),72_i8];
_1 = [(-15_i8),46_i8,(-109_i8),(-27_i8)];
_4 = 317291555_u32 as isize;
_7 = _1;
_5 = 132528405212117776_u64 as isize;
_17 = !true;
_11 = [14791_i16,11376_i16];
_5 = _10 - _16;
_17 = false;
Goto(bb6)
}
bb6 = {
_5 = _10;
_15 = _5 << _5;
_3 = [(-2_i8),70_i8,(-68_i8),92_i8];
RET = [20277_u16,24390_u16,6169_u16,17845_u16,57234_u16,33521_u16];
_14 = '\u{afd11}';
_10 = _9;
_16 = !_10;
_14 = '\u{c504a}';
_11 = [32715_i16,(-16103_i16)];
_10 = _19 as isize;
_10 = !_16;
_21 = (_14,);
_11 = [(-18775_i16),3666_i16];
RET = [9770_u16,42948_u16,44594_u16,9907_u16,27261_u16,1160_u16];
_7 = _8;
_15 = _9;
Goto(bb7)
}
bb7 = {
_12 = [(-89_i8),61_i8,(-54_i8),(-69_i8)];
_17 = _16 >= _10;
_1 = [99_i8,(-84_i8),(-62_i8),115_i8];
_17 = _9 != _16;
_15 = _9 | _4;
_11 = [(-18516_i16),(-7013_i16)];
Goto(bb8)
}
bb8 = {
_6 = [(-94_i8),(-106_i8),(-122_i8),(-66_i8)];
_22 = -_19;
_21 = (_14,);
_20 = _5 ^ _10;
_2 = [102_i8,(-32_i8),89_i8,(-114_i8)];
_26 = (-30218_i16) as f64;
_9 = !_16;
_11 = [(-9583_i16),19983_i16];
_26 = _13 as f64;
_14 = _21.0;
_1 = [59_i8,28_i8,84_i8,41_i8];
_15 = -_20;
_3 = [117_i8,56_i8,(-12_i8),(-94_i8)];
_8 = [(-86_i8),(-112_i8),17_i8,(-88_i8)];
_14 = _21.0;
_28.2 = (_14,);
_5 = _15 << _20;
_11 = [15992_i16,(-24893_i16)];
_6 = _2;
_4 = -_15;
_26 = 470535235_u32 as f64;
_29 = (-15325_i16) as u128;
Goto(bb9)
}
bb9 = {
_22 = _19 + _19;
_28.3.2 = 3068451636_u32;
_1 = [72_i8,(-55_i8),49_i8,(-126_i8)];
Goto(bb10)
}
bb10 = {
_28.3.2 = _5 as u32;
_16 = 748957498_i32 as isize;
_7 = [(-41_i8),80_i8,(-52_i8),(-112_i8)];
Goto(bb11)
}
bb11 = {
_16 = _5 ^ _20;
_8 = [58_i8,74_i8,(-8_i8),70_i8];
_23 = _20 - _4;
_3 = [(-111_i8),(-120_i8),92_i8,57_i8];
_31 = (-879969935_i32) >> _4;
_28.2.0 = _21.0;
_11 = [15573_i16,8298_i16];
_28.3.0.0 = _11;
_12 = [75_i8,(-86_i8),12_i8,15_i8];
_3 = _2;
_28.1 = 51378_u16;
_11 = [17176_i16,(-30568_i16)];
_29 = 92784660193786300508066385211504969378_u128 << _28.3.2;
_28.3.0 = (_11,);
_17 = true;
_24 = [5897115548768131062_i64,2110886374074239148_i64,(-7329375949434026622_i64),1465763725390500771_i64];
_3 = [(-120_i8),36_i8,49_i8,(-33_i8)];
_8 = [41_i8,85_i8,62_i8,(-26_i8)];
_8 = _1;
_26 = _22 as f64;
_15 = _23;
_24 = [(-6045761807437138427_i64),(-8914154859600583428_i64),(-2074486431336882729_i64),1529137418921124596_i64];
match _28.1 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
51378 => bb18,
_ => bb17
}
}
bb12 = {
_28.3.2 = _5 as u32;
_16 = 748957498_i32 as isize;
_7 = [(-41_i8),80_i8,(-52_i8),(-112_i8)];
Goto(bb11)
}
bb13 = {
Return()
}
bb14 = {
_6 = [(-94_i8),(-106_i8),(-122_i8),(-66_i8)];
_22 = -_19;
_21 = (_14,);
_20 = _5 ^ _10;
_2 = [102_i8,(-32_i8),89_i8,(-114_i8)];
_26 = (-30218_i16) as f64;
_9 = !_16;
_11 = [(-9583_i16),19983_i16];
_26 = _13 as f64;
_14 = _21.0;
_1 = [59_i8,28_i8,84_i8,41_i8];
_15 = -_20;
_3 = [117_i8,56_i8,(-12_i8),(-94_i8)];
_8 = [(-86_i8),(-112_i8),17_i8,(-88_i8)];
_14 = _21.0;
_28.2 = (_14,);
_5 = _15 << _20;
_11 = [15992_i16,(-24893_i16)];
_6 = _2;
_4 = -_15;
_26 = 470535235_u32 as f64;
_29 = (-15325_i16) as u128;
Goto(bb9)
}
bb15 = {
_6 = [66_i8,79_i8,124_i8,(-93_i8)];
_7 = _3;
_10 = _5;
_14 = '\u{23b0}';
_13 = 1_usize;
_1[_13] = 76461097385673607132769075315523446377_u128 as i8;
_16 = _15;
_9 = false as isize;
_16 = _4 | _4;
_2[_13] = _3[_13] * _6[_13];
_6 = [_8[_13],_7[_13],_12[_13],_2[_13]];
RET[_13] = 23835_u16 & 45404_u16;
RET = [15566_u16,11770_u16,49998_u16,26144_u16,56769_u16,9435_u16];
_14 = '\u{cdd89}';
_11 = [1670_i16,26212_i16];
_6[_13] = _8[_13] | _8[_13];
_7 = [_12[_13],_6[_13],_2[_13],_2[_13]];
_14 = '\u{57478}';
Call(_3[_13] = core::intrinsics::transmute(_6[_13]), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_5 = _10;
_15 = _5 << _5;
_3 = [(-2_i8),70_i8,(-68_i8),92_i8];
RET = [20277_u16,24390_u16,6169_u16,17845_u16,57234_u16,33521_u16];
_14 = '\u{afd11}';
_10 = _9;
_16 = !_10;
_14 = '\u{c504a}';
_11 = [32715_i16,(-16103_i16)];
_10 = _19 as isize;
_10 = !_16;
_21 = (_14,);
_11 = [(-18775_i16),3666_i16];
RET = [9770_u16,42948_u16,44594_u16,9907_u16,27261_u16,1160_u16];
_7 = _8;
_15 = _9;
Goto(bb7)
}
bb17 = {
_5 = -_10;
RET = [5810_u16,6740_u16,34508_u16,44009_u16,46164_u16,35380_u16];
_5 = 196650387823891617777923367532212184507_u128 as isize;
_8 = _12;
_12 = [125_i8,(-93_i8),120_i8,35_i8];
_1 = [(-92_i8),23_i8,68_i8,(-11_i8)];
_1 = _2;
_1 = [(-88_i8),(-13_i8),76_i8,61_i8];
_13 = 14434017383694121441_usize;
RET = [48361_u16,33631_u16,4541_u16,8031_u16,32978_u16,45673_u16];
_5 = _13 as isize;
_14 = '\u{d2770}';
_13 = 4711485700673804247_usize;
_7 = [74_i8,(-58_i8),29_i8,39_i8];
_2 = _12;
_12 = [(-104_i8),107_i8,(-57_i8),(-106_i8)];
_15 = false as isize;
_2 = [18_i8,(-14_i8),14_i8,(-46_i8)];
_3 = _12;
_6 = [97_i8,(-94_i8),(-97_i8),17_i8];
_3 = _12;
_11 = [(-26435_i16),(-29428_i16)];
_6 = [120_i8,(-29_i8),119_i8,34_i8];
_6 = [75_i8,(-87_i8),(-88_i8),90_i8];
_5 = _10 + _10;
_3 = [(-79_i8),(-49_i8),(-79_i8),(-74_i8)];
_3 = _6;
match _13 {
0 => bb2,
4711485700673804247 => bb4,
_ => bb3
}
}
bb18 = {
_15 = _23;
_21.0 = _28.2.0;
_13 = !2_usize;
_33 = _22 * _22;
_3 = _1;
_28.2.0 = _14;
_34 = _16 * _15;
_8 = [(-71_i8),(-7_i8),0_i8,69_i8];
_35.0 = [7138877920774866599_i64,1772272960962825646_i64,8738080757481790552_i64,7282333024869599666_i64];
_28.2.0 = _21.0;
_35.2 = [820123587918405717_u64,10480734001070652811_u64,2330831173083359122_u64,16587660380515011965_u64,16230034198584638776_u64,15044717143234782887_u64,9569278565616223376_u64];
_36 = core::ptr::addr_of!(_23);
_38 = !_28.3.2;
Goto(bb19)
}
bb19 = {
Call(_39 = dump_var(5_usize, 38_usize, Move(_38), 12_usize, Move(_12), 15_usize, Move(_15), 17_usize, Move(_17)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_39 = dump_var(5_usize, 4_usize, Move(_4), 8_usize, Move(_8), 23_usize, Move(_23), 16_usize, Move(_16)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_39 = dump_var(5_usize, 3_usize, Move(_3), 14_usize, Move(_14), 7_usize, Move(_7), 31_usize, Move(_31)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: isize,mut _2: [i8; 4],mut _3: [i8; 4],mut _4: isize,mut _5: [i8; 4],mut _6: isize) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _7: &'static *const isize;
let _8: isize;
let _9: i128;
let _10: isize;
let _11: [u16; 6];
let _12: isize;
let _13: f32;
let _14: isize;
let _15: isize;
let _16: [u8; 7];
let _17: [u8; 7];
let _18: f64;
let _19: *const Adt40;
let _20: u32;
let _21: (&'static Adt35, [u16; 6], Adt40, *const (u16,));
let _22: f64;
let _23: &'static mut &'static mut u32;
let _24: [u16; 6];
let _25: &'static mut *const char;
let _26: &'static mut u32;
let _27: Adt40;
let _28: f32;
let _29: &'static mut *const (Adt35, &'static char, (char,), *mut bool);
let _30: *const i128;
let _31: char;
let _32: &'static *const isize;
let _33: u8;
let _34: [i16; 2];
let _35: [u64; 2];
let _36: (([i16; 2],), ([i16; 2],));
let _37: i16;
let _38: &'static mut &'static mut *const char;
let _39: u16;
let _40: f32;
let _41: f64;
let _42: char;
let _43: (([i16; 2],), ([i16; 2],));
let _44: &'static mut u32;
let _45: *const i128;
let _46: u64;
let _47: (([i16; 2],), ([i16; 2],));
let _48: ([i16; 2],);
let _49: i16;
let _50: [u64; 2];
let _51: isize;
let _52: i128;
let _53: u32;
let _54: ();
let _55: ();
{
_3 = [3_i8,(-20_i8),40_i8,(-114_i8)];
_2 = [(-116_i8),10_i8,10_i8,(-55_i8)];
_3 = _5;
RET = [34705_u16,59211_u16,61670_u16,15594_u16,18822_u16,18597_u16];
_2 = [(-78_i8),121_i8,(-106_i8),13_i8];
_5 = [(-50_i8),47_i8,(-113_i8),79_i8];
RET = [37000_u16,20566_u16,27986_u16,33980_u16,37873_u16,17299_u16];
_6 = _1 * _4;
RET = [60729_u16,1130_u16,17211_u16,14658_u16,21153_u16,56013_u16];
_4 = _6 << _1;
_5 = [(-70_i8),70_i8,(-15_i8),64_i8];
_3 = [(-79_i8),53_i8,84_i8,48_i8];
_3 = [74_i8,(-57_i8),122_i8,(-108_i8)];
Call(_8 = fn7(_4, _3, _6, RET, _3, _4, RET, _3, RET, RET, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = _4;
Goto(bb2)
}
bb2 = {
_9 = (-99267508179058534069241991086568431789_i128) << _8;
_10 = _8 & _8;
RET = [43308_u16,50567_u16,42592_u16,57651_u16,49137_u16,39920_u16];
RET = [34544_u16,50006_u16,47284_u16,23081_u16,12402_u16,26305_u16];
_8 = _10 + _1;
RET = [13967_u16,34251_u16,519_u16,33908_u16,28105_u16,31931_u16];
_12 = -_8;
_10 = !_8;
_5 = [(-95_i8),88_i8,(-91_i8),22_i8];
_8 = 6_usize as isize;
_11 = [15293_u16,43428_u16,22267_u16,50225_u16,35935_u16,30138_u16];
_12 = _4 | _10;
_9 = -(-36395976147635017112543839391594902335_i128);
_9 = 3075351790_u32 as i128;
_10 = (-67_i8) as isize;
_12 = _6 >> _6;
_11 = [49147_u16,51268_u16,57227_u16,36011_u16,23648_u16,164_u16];
_4 = 20_u8 as isize;
_6 = _8 >> _12;
_5 = [83_i8,(-102_i8),(-46_i8),(-39_i8)];
_5 = [(-56_i8),82_i8,62_i8,106_i8];
_10 = _12;
_4 = _10;
Goto(bb3)
}
bb3 = {
_10 = _12;
_5 = [59_i8,68_i8,(-58_i8),(-104_i8)];
_9 = 124715238271771458815209986103214957000_i128 * 129601869195467619210931183011725178730_i128;
_1 = !_10;
_14 = 149808083868905698850932854046130518373_u128 as isize;
_16 = [170_u8,141_u8,129_u8,142_u8,117_u8,22_u8,126_u8];
_18 = (-8789085511847575474_i64) as f64;
_13 = _9 as f32;
_10 = -_1;
_13 = 7745_u16 as f32;
_12 = _6 - _1;
RET = [50083_u16,13021_u16,27063_u16,7250_u16,58029_u16,32822_u16];
RET = _11;
_8 = _12 & _1;
_16 = [16_u8,1_u8,17_u8,77_u8,107_u8,100_u8,85_u8];
RET = _11;
_12 = _4;
_17 = _16;
_4 = _8 >> _12;
Goto(bb4)
}
bb4 = {
_11 = [312_u16,9937_u16,33440_u16,7896_u16,28020_u16,28204_u16];
_11 = RET;
_13 = (-49_i8) as f32;
_16 = [11_u8,234_u8,140_u8,114_u8,224_u8,145_u8,220_u8];
_14 = _4 * _4;
_4 = -_1;
_15 = 3793861006820884353_u64 as isize;
_2 = [(-33_i8),1_i8,1_i8,(-47_i8)];
Goto(bb5)
}
bb5 = {
_9 = 19847479955115396355602891310373976657_i128 * (-6120934523342015172950577989749220963_i128);
_8 = 155964453089663210603992554850920347740_u128 as isize;
Call(_2 = core::intrinsics::transmute(_5), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_10 = _1 & _14;
_17 = [188_u8,129_u8,24_u8,205_u8,201_u8,35_u8,32_u8];
_2 = _5;
_15 = 6759_u16 as isize;
_15 = -_14;
_5 = [40_i8,34_i8,(-76_i8),(-67_i8)];
_19 = core::ptr::addr_of!(_21.2);
_20 = 1547342893_u32;
_6 = -_14;
_5 = [(-116_i8),14_i8,(-50_i8),(-36_i8)];
_19 = core::ptr::addr_of!((*_19));
_17 = [190_u8,176_u8,14_u8,199_u8,67_u8,216_u8,163_u8];
_8 = !_10;
_10 = true as isize;
_3 = _5;
_6 = -_15;
RET = [35770_u16,12683_u16,51634_u16,51530_u16,14605_u16,24329_u16];
_14 = _6 - _15;
_3 = [(-94_i8),(-13_i8),97_i8,100_i8];
_19 = core::ptr::addr_of!(_21.2);
_2 = [(-44_i8),(-23_i8),17_i8,(-1_i8)];
_21.1 = [6258_u16,21440_u16,40370_u16,44912_u16,54179_u16,42755_u16];
_5 = _3;
_18 = (-79_i8) as f64;
_16 = [207_u8,35_u8,170_u8,16_u8,251_u8,2_u8,132_u8];
_17 = [58_u8,254_u8,15_u8,211_u8,98_u8,220_u8,155_u8];
_11 = [41146_u16,2692_u16,58136_u16,64074_u16,42550_u16,26732_u16];
RET = _21.1;
_12 = _14;
Goto(bb7)
}
bb7 = {
_10 = -_15;
_11 = [62422_u16,54164_u16,17074_u16,17350_u16,36972_u16,11597_u16];
_4 = !_14;
_26 = &mut _20;
_2 = [75_i8,(-54_i8),45_i8,(-31_i8)];
(*_26) = 81_u8 as u32;
_20 = 1520771755_u32 | 443386080_u32;
_22 = _18;
_23 = &mut _26;
_18 = 162379239234431387345223147406450614184_u128 as f64;
_11 = RET;
_5 = _2;
_28 = _6 as f32;
_4 = _8 << _6;
RET = [42786_u16,62336_u16,63631_u16,8558_u16,6389_u16,47509_u16];
_8 = _12 & _14;
_24 = [19482_u16,43441_u16,32977_u16,54185_u16,4665_u16,11698_u16];
_20 = (-1845828872_i32) as u32;
_6 = _4 | _10;
_24 = [59417_u16,54959_u16,928_u16,44795_u16,57346_u16,53747_u16];
_30 = core::ptr::addr_of!(_9);
Goto(bb8)
}
bb8 = {
_23 = &mut (*_23);
_16 = _17;
_3 = [(-117_i8),(-81_i8),7_i8,24_i8];
_26 = &mut _20;
_26 = &mut (*_26);
_4 = _12;
_21.1 = [28795_u16,4733_u16,24781_u16,60046_u16,47557_u16,60541_u16];
_26 = &mut _20;
_18 = -_22;
_23 = &mut _26;
_24 = [13204_u16,14942_u16,3375_u16,34200_u16,57127_u16,28196_u16];
RET = _21.1;
Goto(bb9)
}
bb9 = {
_10 = !_6;
_15 = !_8;
_28 = _13;
_18 = (*_30) as f64;
_34 = [(-31505_i16),19413_i16];
_31 = '\u{2f8ea}';
_2 = _3;
(*_23) = &mut _20;
_15 = _12 ^ _14;
(*_26) = 10683_i16 as u32;
_12 = _15 + _6;
_36.1.0 = [21620_i16,19648_i16];
_9 = (-112271896128256691872260267888375019555_i128);
match (*_30) {
0 => bb8,
1 => bb5,
2 => bb3,
228010470792681771591114339543393191901 => bb10,
_ => bb4
}
}
bb10 = {
_6 = _12 ^ _10;
_36.0.0 = [4950_i16,(-10303_i16)];
_35 = [8708550515805142859_u64,6928584310825932793_u64];
_19 = core::ptr::addr_of!(_27);
_33 = 3_u8;
_26 = &mut _20;
(*_26) = 1132538247_u32;
_40 = _13 - _28;
_10 = _6 << _14;
_41 = 118134916947835149701187041788093641174_u128 as f64;
(*_30) = 65967843897905191163567947185597901638_i128;
_12 = _8;
_23 = &mut _26;
(*_30) = (-152926336456252751899004499095928345155_i128) - 34019786467831879714924268062033689166_i128;
_15 = !_1;
_10 = !_4;
_4 = _14 & _14;
_41 = _18;
_20 = 1333617243_u32;
_23 = &mut (*_23);
(*_30) = (-128099327528743632693968636749989150308_i128) >> _8;
match _33 {
0 => bb11,
1 => bb12,
3 => bb14,
_ => bb13
}
}
bb11 = {
_9 = 19847479955115396355602891310373976657_i128 * (-6120934523342015172950577989749220963_i128);
_8 = 155964453089663210603992554850920347740_u128 as isize;
Call(_2 = core::intrinsics::transmute(_5), ReturnTo(bb6), UnwindUnreachable())
}
bb12 = {
_10 = _1 & _14;
_17 = [188_u8,129_u8,24_u8,205_u8,201_u8,35_u8,32_u8];
_2 = _5;
_15 = 6759_u16 as isize;
_15 = -_14;
_5 = [40_i8,34_i8,(-76_i8),(-67_i8)];
_19 = core::ptr::addr_of!(_21.2);
_20 = 1547342893_u32;
_6 = -_14;
_5 = [(-116_i8),14_i8,(-50_i8),(-36_i8)];
_19 = core::ptr::addr_of!((*_19));
_17 = [190_u8,176_u8,14_u8,199_u8,67_u8,216_u8,163_u8];
_8 = !_10;
_10 = true as isize;
_3 = _5;
_6 = -_15;
RET = [35770_u16,12683_u16,51634_u16,51530_u16,14605_u16,24329_u16];
_14 = _6 - _15;
_3 = [(-94_i8),(-13_i8),97_i8,100_i8];
_19 = core::ptr::addr_of!(_21.2);
_2 = [(-44_i8),(-23_i8),17_i8,(-1_i8)];
_21.1 = [6258_u16,21440_u16,40370_u16,44912_u16,54179_u16,42755_u16];
_5 = _3;
_18 = (-79_i8) as f64;
_16 = [207_u8,35_u8,170_u8,16_u8,251_u8,2_u8,132_u8];
_17 = [58_u8,254_u8,15_u8,211_u8,98_u8,220_u8,155_u8];
_11 = [41146_u16,2692_u16,58136_u16,64074_u16,42550_u16,26732_u16];
RET = _21.1;
_12 = _14;
Goto(bb7)
}
bb13 = {
_9 = (-99267508179058534069241991086568431789_i128) << _8;
_10 = _8 & _8;
RET = [43308_u16,50567_u16,42592_u16,57651_u16,49137_u16,39920_u16];
RET = [34544_u16,50006_u16,47284_u16,23081_u16,12402_u16,26305_u16];
_8 = _10 + _1;
RET = [13967_u16,34251_u16,519_u16,33908_u16,28105_u16,31931_u16];
_12 = -_8;
_10 = !_8;
_5 = [(-95_i8),88_i8,(-91_i8),22_i8];
_8 = 6_usize as isize;
_11 = [15293_u16,43428_u16,22267_u16,50225_u16,35935_u16,30138_u16];
_12 = _4 | _10;
_9 = -(-36395976147635017112543839391594902335_i128);
_9 = 3075351790_u32 as i128;
_10 = (-67_i8) as isize;
_12 = _6 >> _6;
_11 = [49147_u16,51268_u16,57227_u16,36011_u16,23648_u16,164_u16];
_4 = 20_u8 as isize;
_6 = _8 >> _12;
_5 = [83_i8,(-102_i8),(-46_i8),(-39_i8)];
_5 = [(-56_i8),82_i8,62_i8,106_i8];
_10 = _12;
_4 = _10;
Goto(bb3)
}
bb14 = {
_16 = [_33,_33,_33,_33,_33,_33,_33];
_28 = _20 as f32;
_33 = 242_u8;
_43.1 = _36.1;
_13 = _28 + _40;
RET = [43484_u16,48624_u16,61017_u16,6003_u16,44157_u16,565_u16];
_36 = (_43.1, _43.1);
_13 = (-1888106994_i32) as f32;
_40 = -_28;
_43.0 = (_43.1.0,);
_43.1.0 = [(-9393_i16),11627_i16];
_11 = RET;
_40 = _28;
_28 = _40;
_10 = !_8;
_46 = 16160936043107986482_u64 << _4;
_47.1.0 = [(-23290_i16),(-20514_i16)];
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(6_usize, 14_usize, Move(_14), 43_usize, Move(_43), 36_usize, Move(_36), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(6_usize, 35_usize, Move(_35), 4_usize, Move(_4), 1_usize, Move(_1), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(6_usize, 5_usize, Move(_5), 12_usize, Move(_12), 6_usize, Move(_6), 31_usize, Move(_31)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: [i8; 4],mut _3: isize,mut _4: [u16; 6],mut _5: [i8; 4],mut _6: isize,mut _7: [u16; 6],mut _8: [i8; 4],mut _9: [u16; 6],mut _10: [u16; 6],mut _11: [i8; 4]) -> isize {
mir! {
type RET = isize;
let _12: *mut u16;
let _13: Adt40;
let _14: *const (u16,);
let _15: i64;
let _16: f32;
let _17: u128;
let _18: i16;
let _19: [u64; 2];
let _20: char;
let _21: (char,);
let _22: Adt30;
let _23: ([i16; 2],);
let _24: f64;
let _25: u32;
let _26: bool;
let _27: f32;
let _28: isize;
let _29: i32;
let _30: bool;
let _31: ();
let _32: ();
{
_6 = 47162_u16 as isize;
_9 = [8506_u16,22033_u16,1573_u16,29072_u16,45739_u16,23983_u16];
RET = _6 - _1;
RET = !_3;
_6 = _3;
_3 = _1;
_5 = _2;
_5 = [30_i8,70_i8,13_i8,(-50_i8)];
_1 = true as isize;
_3 = _1;
_8 = _5;
RET = _6;
_5 = _2;
_2 = _11;
_9 = [257_u16,1485_u16,51635_u16,46526_u16,28879_u16,61489_u16];
_8 = [(-121_i8),124_i8,104_i8,74_i8];
_11 = _8;
_4 = [63159_u16,6339_u16,5736_u16,23579_u16,18428_u16,25864_u16];
_8 = _2;
_7 = [8037_u16,35344_u16,8921_u16,29408_u16,23277_u16,32422_u16];
_8 = _5;
_11 = [(-80_i8),(-44_i8),84_i8,(-80_i8)];
_9 = [32342_u16,23553_u16,16312_u16,17474_u16,709_u16,3182_u16];
_8 = [68_i8,49_i8,(-21_i8),25_i8];
_6 = (-17544_i16) as isize;
_2 = _8;
Goto(bb1)
}
bb1 = {
_10 = [40045_u16,38032_u16,13948_u16,736_u16,55375_u16,59660_u16];
_8 = _2;
_6 = 2627538449_u32 as isize;
_15 = !555440404817346406_i64;
_11 = _8;
_5 = [52_i8,91_i8,(-29_i8),(-21_i8)];
Call(_12 = fn8(_11, _10, _4, _7, _2, _2, _9, _6, _11, _11, _9, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = _7;
_17 = !129180230995703612042185592132772515540_u128;
_16 = (-145108985452838567273752921548755139726_i128) as f32;
_10 = [15253_u16,26136_u16,7977_u16,1827_u16,7962_u16,53820_u16];
_4 = [50298_u16,20186_u16,63890_u16,45740_u16,1556_u16,53751_u16];
Goto(bb3)
}
bb3 = {
_9 = [295_u16,46010_u16,4455_u16,32745_u16,64944_u16,17736_u16];
_1 = _15 as isize;
RET = !_1;
_9 = [18653_u16,21521_u16,20443_u16,31817_u16,45335_u16,410_u16];
RET = _6 | _6;
RET = _3 - _3;
_7 = [39166_u16,64275_u16,24293_u16,37444_u16,1899_u16,22287_u16];
_8 = _11;
_2 = [(-123_i8),(-45_i8),(-116_i8),65_i8];
Goto(bb4)
}
bb4 = {
_17 = 324000327300257039954150196576621741382_u128;
_6 = -RET;
Goto(bb5)
}
bb5 = {
_8 = _11;
_2 = _11;
_4 = [36050_u16,28299_u16,63251_u16,9610_u16,42944_u16,25819_u16];
_15 = 7574021805911310448_i64;
_5 = _2;
_15 = -382503769466487128_i64;
_16 = 4167322967_u32 as f32;
_16 = 235_u8 as f32;
_3 = _6 | _6;
_2 = [64_i8,65_i8,11_i8,(-2_i8)];
_10 = _7;
RET = _3 + _1;
RET = _6;
_9 = [37020_u16,27849_u16,3733_u16,11779_u16,44449_u16,35091_u16];
_15 = 17371347947877294008_u64 as i64;
_4 = [39042_u16,65464_u16,29552_u16,40796_u16,13020_u16,56058_u16];
RET = _6 - _6;
_18 = false as i16;
Goto(bb6)
}
bb6 = {
_7 = _4;
_19 = [181344533041082595_u64,4498464115177465806_u64];
_19 = [13921792119090655372_u64,12305098012661532154_u64];
RET = !_3;
RET = _6;
_7 = _9;
_6 = _18 as isize;
_21 = ('\u{ce6e4}',);
_19 = [3955792891786835070_u64,13022669412412257867_u64];
_15 = (-2277597713152283443_i64);
_17 = (-61_i8) as u128;
_19 = [17855473949496069809_u64,4786007512381467421_u64];
_20 = _21.0;
Goto(bb7)
}
bb7 = {
_19 = [4024612807576220838_u64,200391570476276156_u64];
_16 = 62437736025395921233988123032310241328_i128 as f32;
_19 = [3054665004401734147_u64,11085982755381289987_u64];
_18 = 32743_i16 >> _3;
_8 = [(-72_i8),(-82_i8),(-6_i8),(-72_i8)];
_18 = (-2629_i16);
_4 = _7;
_7 = [3093_u16,62351_u16,33615_u16,49087_u16,13631_u16,46175_u16];
_9 = _4;
match _15 {
0 => bb5,
1 => bb4,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
340282366920938463461097009718615928013 => bb12,
_ => bb11
}
}
bb8 = {
_9 = _7;
_17 = !129180230995703612042185592132772515540_u128;
_16 = (-145108985452838567273752921548755139726_i128) as f32;
_10 = [15253_u16,26136_u16,7977_u16,1827_u16,7962_u16,53820_u16];
_4 = [50298_u16,20186_u16,63890_u16,45740_u16,1556_u16,53751_u16];
Goto(bb3)
}
bb9 = {
_8 = _11;
_2 = _11;
_4 = [36050_u16,28299_u16,63251_u16,9610_u16,42944_u16,25819_u16];
_15 = 7574021805911310448_i64;
_5 = _2;
_15 = -382503769466487128_i64;
_16 = 4167322967_u32 as f32;
_16 = 235_u8 as f32;
_3 = _6 | _6;
_2 = [64_i8,65_i8,11_i8,(-2_i8)];
_10 = _7;
RET = _3 + _1;
RET = _6;
_9 = [37020_u16,27849_u16,3733_u16,11779_u16,44449_u16,35091_u16];
_15 = 17371347947877294008_u64 as i64;
_4 = [39042_u16,65464_u16,29552_u16,40796_u16,13020_u16,56058_u16];
RET = _6 - _6;
_18 = false as i16;
Goto(bb6)
}
bb10 = {
_17 = 324000327300257039954150196576621741382_u128;
_6 = -RET;
Goto(bb5)
}
bb11 = {
_9 = [295_u16,46010_u16,4455_u16,32745_u16,64944_u16,17736_u16];
_1 = _15 as isize;
RET = !_1;
_9 = [18653_u16,21521_u16,20443_u16,31817_u16,45335_u16,410_u16];
RET = _6 | _6;
RET = _3 - _3;
_7 = [39166_u16,64275_u16,24293_u16,37444_u16,1899_u16,22287_u16];
_8 = _11;
_2 = [(-123_i8),(-45_i8),(-116_i8),65_i8];
Goto(bb4)
}
bb12 = {
_11 = [14_i8,13_i8,(-68_i8),(-47_i8)];
_5 = [(-60_i8),(-42_i8),(-94_i8),80_i8];
_16 = RET as f32;
_22.fld4 = [_18,_18];
_1 = 145207629874123278988011751274302861315_i128 as isize;
_5 = [125_i8,(-121_i8),12_i8,15_i8];
_22.fld1 = 5855_u16 + 48303_u16;
_10 = _4;
_22.fld4 = [_18,_18];
_19 = [12568231878440139458_u64,13430661647443273933_u64];
_12 = core::ptr::addr_of_mut!(_22.fld1);
_18 = 10280971461424102998_u64 as i16;
_22.fld6 = (_22.fld4,);
_22.fld4 = _22.fld6.0;
_21 = (_20,);
_22.fld3 = [_15,_15,_15,_15,_15,_15,_15];
_10 = _9;
_22.fld6.0 = _22.fld4;
_9 = [_22.fld1,(*_12),(*_12),(*_12),(*_12),(*_12)];
_15 = (-803551750437630062_i64);
_24 = 14441306257378802874_u64 as f64;
_25 = _16 as u32;
_23.0 = _22.fld6.0;
_4 = [(*_12),(*_12),(*_12),_22.fld1,(*_12),(*_12)];
_23 = _22.fld6;
RET = _3 & _3;
Goto(bb13)
}
bb13 = {
_17 = 131074830280403602679416722265594329539_u128 << RET;
_21.0 = _20;
_12 = core::ptr::addr_of_mut!(_22.fld1);
_22.fld6 = _23;
_7 = [_22.fld1,(*_12),_22.fld1,(*_12),(*_12),(*_12)];
_1 = 4_usize as isize;
_22.fld2 = _3 as u8;
_22.fld2 = 45_u8;
_20 = _21.0;
RET = _1;
_21 = (_20,);
_10 = [_22.fld1,(*_12),(*_12),_22.fld1,_22.fld1,_22.fld1];
RET = !_3;
_11 = _5;
_21 = (_20,);
_4 = _10;
_10 = [(*_12),(*_12),(*_12),(*_12),(*_12),_22.fld1];
_27 = -_16;
_22.fld6.0 = [_18,_18];
match _22.fld2 {
45 => bb15,
_ => bb14
}
}
bb14 = {
_19 = [4024612807576220838_u64,200391570476276156_u64];
_16 = 62437736025395921233988123032310241328_i128 as f32;
_19 = [3054665004401734147_u64,11085982755381289987_u64];
_18 = 32743_i16 >> _3;
_8 = [(-72_i8),(-82_i8),(-6_i8),(-72_i8)];
_18 = (-2629_i16);
_4 = _7;
_7 = [3093_u16,62351_u16,33615_u16,49087_u16,13631_u16,46175_u16];
_9 = _4;
match _15 {
0 => bb5,
1 => bb4,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
340282366920938463461097009718615928013 => bb12,
_ => bb11
}
}
bb15 = {
_6 = RET;
_21 = (_20,);
_22.fld0 = false ^ false;
_22.fld6 = _23;
_1 = RET;
RET = _3 * _6;
RET = _3;
_10 = _4;
_1 = _6;
_28 = -_1;
_22.fld4 = [_18,_18];
_16 = _15 as f32;
_26 = _3 == _3;
Goto(bb16)
}
bb16 = {
Call(_31 = dump_var(7_usize, 2_usize, Move(_2), 18_usize, Move(_18), 20_usize, Move(_20), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(7_usize, 11_usize, Move(_11), 6_usize, Move(_6), 7_usize, Move(_7), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_31 = dump_var(7_usize, 21_usize, Move(_21), 3_usize, Move(_3), 32_usize, _32, 32_usize, _32), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [i8; 4],mut _2: [u16; 6],mut _3: [u16; 6],mut _4: [u16; 6],mut _5: [i8; 4],mut _6: [i8; 4],mut _7: [u16; 6],mut _8: isize,mut _9: [i8; 4],mut _10: [i8; 4],mut _11: [u16; 6],mut _12: i64) -> *mut u16 {
mir! {
type RET = *mut u16;
let _13: f64;
let _14: (f64, *mut bool, &'static mut *mut bool, i32);
let _15: isize;
let _16: *const (([i16; 2],), Adt31, u32);
let _17: isize;
let _18: *mut (Adt35, &'static char, (char,), *mut bool);
let _19: [u64; 2];
let _20: f64;
let _21: (*const i64, &'static mut *const char, &'static Adt30, Adt34);
let _22: &'static mut (char,);
let _23: (u16,);
let _24: &'static mut &'static mut *const char;
let _25: i128;
let _26: &'static mut *const (Adt35, &'static char, (char,), *mut bool);
let _27: *const char;
let _28: (Adt35, &'static char, (char,), *mut bool);
let _29: (([i16; 2],), ([i16; 2],));
let _30: u128;
let _31: isize;
let _32: &'static char;
let _33: *const Adt56;
let _34: ([i64; 4], [u64; 7], [u64; 7]);
let _35: &'static Adt35;
let _36: usize;
let _37: u8;
let _38: f32;
let _39: &'static mut u32;
let _40: usize;
let _41: isize;
let _42: isize;
let _43: [i64; 4];
let _44: u128;
let _45: [i64; 4];
let _46: *const (([i16; 2],), Adt31, u32);
let _47: isize;
let _48: ();
let _49: ();
{
_3 = _7;
_3 = _7;
_6 = _9;
Goto(bb1)
}
bb1 = {
_10 = [32_i8,55_i8,48_i8,(-70_i8)];
_5 = [(-11_i8),(-24_i8),(-7_i8),73_i8];
_3 = [49269_u16,60940_u16,12932_u16,38659_u16,10501_u16,6930_u16];
_11 = [19152_u16,47123_u16,33514_u16,65284_u16,53388_u16,35381_u16];
_7 = [37949_u16,22031_u16,36528_u16,52898_u16,35743_u16,12408_u16];
_11 = [56731_u16,3620_u16,7883_u16,41949_u16,64827_u16,59043_u16];
_10 = [(-90_i8),(-25_i8),29_i8,37_i8];
_11 = [51510_u16,2356_u16,47240_u16,6387_u16,515_u16,1900_u16];
Goto(bb2)
}
bb2 = {
_11 = [8740_u16,45777_u16,26257_u16,7369_u16,16049_u16,4240_u16];
_7 = [32595_u16,18910_u16,39276_u16,57699_u16,22096_u16,13009_u16];
_6 = _5;
_3 = _2;
_12 = 7342499962665257968_u64 as i64;
_2 = _7;
_13 = 86979477579691965213064143279899377542_u128 as f64;
_5 = _9;
_1 = [94_i8,0_i8,(-37_i8),(-7_i8)];
_14.0 = _13;
_15 = !_8;
_11 = [27993_u16,7528_u16,21942_u16,55269_u16,18736_u16,2599_u16];
_3 = [40065_u16,18094_u16,52693_u16,22170_u16,32343_u16,45924_u16];
_9 = [(-79_i8),71_i8,(-76_i8),(-90_i8)];
_14.3 = !(-1401927860_i32);
_3 = [39314_u16,64323_u16,6641_u16,30919_u16,61989_u16,50034_u16];
_9 = [33_i8,(-61_i8),(-11_i8),11_i8];
_4 = _7;
_2 = [53746_u16,7616_u16,44446_u16,37667_u16,46048_u16,3726_u16];
_14.3 = _13 as i32;
_5 = [(-116_i8),36_i8,(-7_i8),26_i8];
_5 = _6;
_12 = 6945768221786215375_i64 | 4853161959917060833_i64;
_11 = [64502_u16,49266_u16,2950_u16,23037_u16,5118_u16,207_u16];
_8 = _15;
_15 = _8 >> _12;
Goto(bb3)
}
bb3 = {
_2 = _7;
_1 = [(-77_i8),(-64_i8),5_i8,(-37_i8)];
_10 = _9;
_2 = _4;
_19 = [10821151592140060658_u64,1667418328429825962_u64];
_10 = [(-119_i8),(-113_i8),38_i8,107_i8];
_20 = _13;
_8 = 30398_i16 as isize;
Call(_14.1 = fn9(_4, _9, _6, _4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_14.2 = &mut _14.1;
_17 = _15;
_17 = _15 - _15;
_8 = _17 << _17;
_15 = _8;
_7 = [64880_u16,65103_u16,4908_u16,36664_u16,6943_u16,40277_u16];
_13 = 44034_u16 as f64;
Goto(bb5)
}
bb5 = {
_7 = [22399_u16,43335_u16,35053_u16,6049_u16,59860_u16,23161_u16];
_2 = [20888_u16,44741_u16,27653_u16,58224_u16,28587_u16,40441_u16];
_14.0 = _13;
_9 = _5;
_10 = _9;
_19 = [15310198447187710770_u64,15326854342370831941_u64];
_5 = [(-27_i8),(-22_i8),106_i8,(-111_i8)];
_2 = [24944_u16,55512_u16,35594_u16,32327_u16,62202_u16,61239_u16];
_8 = -_15;
_4 = _3;
_9 = [(-68_i8),94_i8,(-57_i8),43_i8];
_21.0 = core::ptr::addr_of!(_12);
_21.0 = core::ptr::addr_of!(_12);
_5 = [(-63_i8),(-30_i8),67_i8,61_i8];
_12 = 7196155946192599225_i64 * (-642324944547061774_i64);
_14.3 = 620760724_i32;
_14.3 = (-654889625_i32);
_11 = [61163_u16,47989_u16,15477_u16,18473_u16,21879_u16,53344_u16];
_3 = _2;
_15 = _17;
_5 = _6;
_20 = _8 as f64;
RET = core::ptr::addr_of_mut!(_23.0);
Goto(bb6)
}
bb6 = {
_4 = [42422_u16,9478_u16,10842_u16,33394_u16,41240_u16,31598_u16];
(*RET) = 137_u8 as u16;
_23 = (44096_u16,);
(*RET) = !37368_u16;
_13 = _20;
_21.3 = Adt34::Variant3 { fld0: false,fld1: 380158448_u32 };
_5 = _1;
_14.0 = _13;
_17 = _8;
_21.0 = core::ptr::addr_of!(_12);
RET = core::ptr::addr_of_mut!((*RET));
place!(Field::<bool>(Variant(_21.3, 3), 0)) = _13 <= _20;
_21.0 = core::ptr::addr_of!(_12);
(*RET) = 11_u8 as u16;
(*RET) = _8 as u16;
_3 = [(*RET),(*RET),(*RET),(*RET),(*RET),_23.0];
(*RET) = 30308_u16 << _15;
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
Goto(bb7)
}
bb7 = {
_21.0 = core::ptr::addr_of!(_12);
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!(_23.0);
(*RET) = 12965_u16;
match _23.0 {
0 => bb1,
1 => bb5,
12965 => bb9,
_ => bb8
}
}
bb8 = {
_14.2 = &mut _14.1;
_17 = _15;
_17 = _15 - _15;
_8 = _17 << _17;
_15 = _8;
_7 = [64880_u16,65103_u16,4908_u16,36664_u16,6943_u16,40277_u16];
_13 = 44034_u16 as f64;
Goto(bb5)
}
bb9 = {
_14.0 = 326595189223277741001627464730452552366_u128 as f64;
_20 = 6_usize as f64;
_13 = 197417968002704903917139118604311338365_u128 as f64;
_28.2.0 = '\u{4f41c}';
(*RET) = 7179_u16 * 8136_u16;
_9 = [107_i8,(-103_i8),93_i8,(-59_i8)];
match _14.3 {
0 => bb5,
1 => bb2,
340282366920938463463374607431113321831 => bb11,
_ => bb10
}
}
bb10 = {
_21.0 = core::ptr::addr_of!(_12);
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!(_23.0);
(*RET) = 12965_u16;
match _23.0 {
0 => bb1,
1 => bb5,
12965 => bb9,
_ => bb8
}
}
bb11 = {
_1 = _5;
_22 = &mut _28.2;
_9 = _5;
place!(Field::<bool>(Variant(_21.3, 3), 0)) = false;
(*_22) = ('\u{99570}',);
_28.3 = Move(_14.1);
_34.0 = [_12,_12,_12,_12];
_32 = &_28.2.0;
_22 = &mut _28.2;
_21.3 = Adt34::Variant3 { fld0: false,fld1: 3181153969_u32 };
_8 = -_17;
_13 = _14.0 - _20;
_15 = _8;
place!(Field::<u32>(Variant(_21.3, 3), 1)) = 1235062417_u32;
_34.2 = [13206693774617478142_u64,10123094962027858580_u64,1854840117677083637_u64,11758275159771314528_u64,2709409933322989709_u64,9602258518685881004_u64,11846373307845450954_u64];
_10 = [(-95_i8),(-27_i8),(-77_i8),17_i8];
_28.1 = &(*_22).0;
_13 = -_20;
_3 = _4;
_15 = _12 as isize;
_28.0 = Adt35::Variant1 { fld0: _12,fld1: _20,fld2: Field::<u32>(Variant(_21.3, 3), 1) };
_1 = [(-124_i8),26_i8,(-90_i8),92_i8];
Goto(bb12)
}
bb12 = {
_31 = _17;
_23 = (47670_u16,);
_8 = _17 & _31;
_14.3 = (-907888316_i32);
_8 = -_17;
_27 = core::ptr::addr_of!((*_22).0);
_5 = _10;
_29.0.0 = [(-18767_i16),17562_i16];
_10 = _1;
_39 = &mut place!(Field::<u32>(Variant(_28.0, 1), 2));
place!(Field::<bool>(Variant(_21.3, 3), 0)) = true ^ false;
_30 = 323483568479638728353920474562246605629_u128;
place!(Field::<f64>(Variant(_28.0, 1), 1)) = _13;
_20 = _12 as f64;
_37 = 45_u8;
_38 = _8 as f32;
_29.1 = (_29.0.0,);
_28.1 = &(*_27);
_5 = [107_i8,72_i8,50_i8,116_i8];
_28.3 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_21.3, 3), 0)));
_7 = [(*RET),(*RET),_23.0,_23.0,_23.0,(*RET)];
_18 = core::ptr::addr_of_mut!(_28);
_18 = core::ptr::addr_of_mut!((*_18));
_15 = _37 as isize;
Goto(bb13)
}
bb13 = {
_2 = _4;
(*_18).3 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_21.3, 3), 0)));
_43 = [Field::<i64>(Variant((*_18).0, 1), 0),_12,Field::<i64>(Variant((*_18).0, 1), 0),_12];
(*_39) = Field::<u32>(Variant(_21.3, 3), 1);
_41 = _31 >> _17;
(*RET) = 22966_u16;
(*_18).3 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_21.3, 3), 0)));
_28.1 = Move(_32);
_21.0 = core::ptr::addr_of!(place!(Field::<i64>(Variant((*_18).0, 1), 0)));
_40 = 8291701918562583115_usize | 7_usize;
_44 = _30 & _30;
_11 = _4;
_28.2.0 = '\u{e91a8}';
place!(Field::<i64>(Variant((*_18).0, 1), 0)) = _37 as i64;
_27 = core::ptr::addr_of!(_28.2.0);
_20 = -_13;
_29.1.0 = [31767_i16,(-29342_i16)];
_25 = (-84999398573763257177735068624983461909_i128) | (-111237348615559941683067976165344960089_i128);
(*RET) = _14.3 as u16;
_14.3 = 886499725_i32 >> _41;
_29.1 = (_29.0.0,);
_1 = _9;
Goto(bb14)
}
bb14 = {
_29.0.0 = [(-2959_i16),3095_i16];
_17 = !_8;
_3 = [_23.0,_23.0,_23.0,_23.0,(*RET),_23.0];
_34.0 = [Field::<i64>(Variant((*_18).0, 1), 0),_12,Field::<i64>(Variant((*_18).0, 1), 0),Field::<i64>(Variant((*_18).0, 1), 0)];
_43 = [Field::<i64>(Variant((*_18).0, 1), 0),Field::<i64>(Variant((*_18).0, 1), 0),Field::<i64>(Variant(_28.0, 1), 0),_12];
_14.1 = Move((*_18).3);
_19 = [12599319756042158969_u64,18274052607672456393_u64];
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(8_usize, 41_usize, Move(_41), 3_usize, Move(_3), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(8_usize, 4_usize, Move(_4), 11_usize, Move(_11), 5_usize, Move(_5), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(8_usize, 6_usize, Move(_6), 44_usize, Move(_44), 15_usize, Move(_15), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [u16; 6],mut _2: [i8; 4],mut _3: [i8; 4],mut _4: [u16; 6]) -> *mut bool {
mir! {
type RET = *mut bool;
let _5: [i16; 2];
let _6: *mut [i64; 7];
let _7: bool;
let _8: bool;
let _9: (&'static Adt30, u16, (char,), (([i16; 2],), Adt31, u32));
let _10: ([i16; 2],);
let _11: [u64; 2];
let _12: isize;
let _13: *mut (Adt35, &'static char, (char,), *mut bool);
let _14: &'static mut *mut bool;
let _15: u8;
let _16: [u64; 7];
let _17: f32;
let _18: f64;
let _19: (char,);
let _20: i32;
let _21: [i128; 2];
let _22: isize;
let _23: &'static Adt35;
let _24: bool;
let _25: f32;
let _26: char;
let _27: [i16; 2];
let _28: *mut [u16; 6];
let _29: isize;
let _30: isize;
let _31: (u16, u64);
let _32: *mut u16;
let _33: f32;
let _34: i8;
let _35: f64;
let _36: ();
let _37: ();
{
_3 = [39_i8,8_i8,(-28_i8),6_i8];
_5 = [2872_i16,(-25404_i16)];
_3 = [(-118_i8),125_i8,105_i8,13_i8];
_1 = _4;
_3 = [31_i8,(-9_i8),10_i8,44_i8];
_5 = [26815_i16,(-29507_i16)];
RET = core::ptr::addr_of_mut!(_7);
(*RET) = !false;
(*RET) = !false;
_8 = _7 == (*RET);
_4 = [48618_u16,31568_u16,52552_u16,42359_u16,24986_u16,49224_u16];
_4 = _1;
(*RET) = _8;
RET = core::ptr::addr_of_mut!((*RET));
_4 = _1;
_7 = _8 < _8;
RET = core::ptr::addr_of_mut!((*RET));
(*RET) = _8 > _8;
(*RET) = _8;
Call(_9.2.0 = fn10((*RET), _2, _2, Move(RET), _7, _1, _2, _4, _3, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9.2.0 = '\u{dbb56}';
RET = core::ptr::addr_of_mut!(_8);
_5 = [(-12491_i16),(-2616_i16)];
Goto(bb2)
}
bb2 = {
RET = core::ptr::addr_of_mut!(_7);
_9.3.0.0 = [12497_i16,11212_i16];
_9.3.2 = !1572221076_u32;
_1 = [42486_u16,45485_u16,43980_u16,16504_u16,43198_u16,24474_u16];
_9.1 = !40163_u16;
_1 = [_9.1,_9.1,_9.1,_9.1,_9.1,_9.1];
_9.1 = _9.2.0 as u16;
Call((*RET) = fn13(_9.2, _3, _9.3.0.0, _4, _2, Move(RET), _9.2, _9.3.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_9.3.1 = Adt31::Variant2 { fld0: _8,fld1: _9.1,fld2: 69421844762408960516613239203661170409_i128 };
RET = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_9.3.1, 2), 0)));
place!(Field::<bool>(Variant(_9.3.1, 2), 0)) = !_8;
_11 = [6751496863794849578_u64,17840852457037996812_u64];
_3 = [20_i8,49_i8,(-63_i8),(-101_i8)];
_3 = [(-64_i8),69_i8,96_i8,92_i8];
_9.3.0.0 = [23545_i16,32068_i16];
_4 = [_9.1,_9.1,Field::<u16>(Variant(_9.3.1, 2), 1),_9.1,Field::<u16>(Variant(_9.3.1, 2), 1),_9.1];
(*RET) = _7;
_9.3.2 = _9.2.0 as u32;
_9.3.0 = (_5,);
_9.3.0 = (_5,);
_1 = _4;
_3 = [(-58_i8),(-122_i8),(-22_i8),90_i8];
place!(Field::<u16>(Variant(_9.3.1, 2), 1)) = !_9.1;
_9.3.0 = (_5,);
RET = core::ptr::addr_of_mut!((*RET));
_9.3.2 = 8963778832634827349_i64 as u32;
_15 = 76_u8;
_12 = _15 as isize;
_4 = [_9.1,_9.1,_9.1,_9.1,_9.1,Field::<u16>(Variant(_9.3.1, 2), 1)];
(*RET) = !_7;
match _15 {
0 => bb1,
1 => bb2,
76 => bb5,
_ => bb4
}
}
bb4 = {
RET = core::ptr::addr_of_mut!(_7);
_9.3.0.0 = [12497_i16,11212_i16];
_9.3.2 = !1572221076_u32;
_1 = [42486_u16,45485_u16,43980_u16,16504_u16,43198_u16,24474_u16];
_9.1 = !40163_u16;
_1 = [_9.1,_9.1,_9.1,_9.1,_9.1,_9.1];
_9.1 = _9.2.0 as u16;
Call((*RET) = fn13(_9.2, _3, _9.3.0.0, _4, _2, Move(RET), _9.2, _9.3.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_8 = !_7;
_9.2.0 = '\u{1d521}';
_4 = _1;
_16 = [15485585829732090224_u64,10497630983441465452_u64,8155459638073977367_u64,15152513803013845621_u64,680384636969316412_u64,6652419206278143703_u64,6850598438318488183_u64];
(*RET) = _12 > _12;
_14 = &mut RET;
match _15 {
76 => bb7,
_ => bb6
}
}
bb6 = {
RET = core::ptr::addr_of_mut!(_7);
_9.3.0.0 = [12497_i16,11212_i16];
_9.3.2 = !1572221076_u32;
_1 = [42486_u16,45485_u16,43980_u16,16504_u16,43198_u16,24474_u16];
_9.1 = !40163_u16;
_1 = [_9.1,_9.1,_9.1,_9.1,_9.1,_9.1];
_9.1 = _9.2.0 as u16;
Call((*RET) = fn13(_9.2, _3, _9.3.0.0, _4, _2, Move(RET), _9.2, _9.3.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_10.0 = _5;
_16 = [17476891431532975522_u64,3258280411386877003_u64,13322755228712243345_u64,12761850345904410060_u64,2656194143713963503_u64,6360417273656754593_u64,3794281190873735677_u64];
_5 = [12697_i16,(-29616_i16)];
_18 = 175060444770539106838509648185905185630_u128 as f64;
_7 = !_8;
_15 = 53_u8 >> _9.1;
_17 = 63513511623241483972059480441447413707_i128 as f32;
_4 = [_9.1,Field::<u16>(Variant(_9.3.1, 2), 1),_9.1,Field::<u16>(Variant(_9.3.1, 2), 1),Field::<u16>(Variant(_9.3.1, 2), 1),Field::<u16>(Variant(_9.3.1, 2), 1)];
place!(Field::<u16>(Variant(_9.3.1, 2), 1)) = _9.1 << _15;
Goto(bb8)
}
bb8 = {
_3 = _2;
_16 = [14600097000106345756_u64,17433688192838316938_u64,2828807162160000061_u64,1618470934932670522_u64,3040306800025523814_u64,10395420483869389529_u64,9649969485509917782_u64];
(*RET) = _8;
_12 = (-5331213498851868717_i64) as isize;
_11 = [12052664018390450871_u64,5230436800357999505_u64];
_9.1 = !Field::<u16>(Variant(_9.3.1, 2), 1);
_14 = &mut (*_14);
_3 = [(-84_i8),122_i8,65_i8,(-26_i8)];
_15 = !236_u8;
_9.2 = ('\u{72196}',);
_10 = _9.3.0;
_21 = [(-152335871978319455061597935142757930884_i128),(-68207340094737549882004692973847539166_i128)];
(*RET) = _8 ^ _7;
Call(_3 = fn15(_10.0), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_11 = [6295687023159439572_u64,16116059634647409431_u64];
_19 = (_9.2.0,);
_22 = (*RET) as isize;
Goto(bb10)
}
bb10 = {
_11 = [2664235352167989025_u64,13975855722968827806_u64];
_1 = [Field::<u16>(Variant(_9.3.1, 2), 1),_9.1,_9.1,Field::<u16>(Variant(_9.3.1, 2), 1),Field::<u16>(Variant(_9.3.1, 2), 1),Field::<u16>(Variant(_9.3.1, 2), 1)];
_21 = [137785179698850687387183693417225908555_i128,(-65760268896837037360455413799318003575_i128)];
_22 = !_12;
(*RET) = !_8;
place!(Field::<u16>(Variant(_9.3.1, 2), 1)) = _9.1 ^ _9.1;
_9.3.2 = !3496737162_u32;
_9.2.0 = _19.0;
_9.2.0 = _19.0;
_22 = -_12;
(*RET) = _8 | _7;
_17 = 76547257644551711100388165221003361264_i128 as f32;
Goto(bb11)
}
bb11 = {
_16 = [12045162749657120453_u64,11528585406163115818_u64,12577341174978528511_u64,9009128512384381532_u64,14557665639676325113_u64,13483030343468348888_u64,9220343354806937458_u64];
_11 = [6530810720203171578_u64,11886576138516343196_u64];
_24 = !(*RET);
_11 = [7198592235938449173_u64,2364146316667600635_u64];
_9.2 = _19;
_15 = 24_u8 * 127_u8;
_10.0 = _9.3.0.0;
(*RET) = !_7;
_4 = _1;
_9.1 = _9.3.2 as u16;
_28 = core::ptr::addr_of_mut!(_1);
_25 = _17;
Goto(bb12)
}
bb12 = {
_24 = _8;
place!(Field::<u16>(Variant(_9.3.1, 2), 1)) = _9.1;
_32 = core::ptr::addr_of_mut!(_31.0);
_5 = [(-26714_i16),15623_i16];
place!(Field::<bool>(Variant(_9.3.1, 2), 0)) = !_8;
_9.2 = (_19.0,);
_31.0 = Field::<u16>(Variant(_9.3.1, 2), 1) - _9.1;
Call(_12 = fn17(Move(_32), (*RET), _9.2.0, _2, (*RET), (*RET), Move((*_14)), _22, _1, Field::<u16>(Variant(_9.3.1, 2), 1)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_29 = _22 ^ _12;
_25 = _17;
_27 = [(-12614_i16),6392_i16];
place!(Field::<i128>(Variant(_9.3.1, 2), 2)) = 81777275786080261672981742766746830075_i128 << _9.1;
_30 = _25 as isize;
_31.1 = 4789030645061766123_u64;
_11 = [_31.1,_31.1];
_26 = _9.2.0;
_9.1 = _31.0;
Goto(bb14)
}
bb14 = {
_9.3.0 = (_5,);
_19 = (_9.2.0,);
_34 = !(-30_i8);
RET = core::ptr::addr_of_mut!(_8);
(*RET) = _24 >= _7;
_33 = _17 + _25;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(9_usize, 24_usize, Move(_24), 5_usize, Move(_5), 8_usize, Move(_8), 30_usize, Move(_30)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(9_usize, 22_usize, Move(_22), 16_usize, Move(_16), 19_usize, Move(_19), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(9_usize, 34_usize, Move(_34), 3_usize, Move(_3), 27_usize, Move(_27), 37_usize, _37), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: [i8; 4],mut _3: [i8; 4],mut _4: *mut bool,mut _5: bool,mut _6: [u16; 6],mut _7: [i8; 4],mut _8: [u16; 6],mut _9: [i8; 4],mut _10: [i8; 4]) -> char {
mir! {
type RET = char;
let _11: bool;
let _12: (char,);
let _13: *mut (Adt35, &'static char, (char,), *mut bool);
let _14: u16;
let _15: *const Adt56;
let _16: u32;
let _17: &'static Adt30;
let _18: isize;
let _19: &'static Adt35;
let _20: [i64; 4];
let _21: [i16; 2];
let _22: (u16, u64);
let _23: [u16; 6];
let _24: (Adt35, &'static char, (char,), *mut bool);
let _25: [u8; 7];
let _26: f64;
let _27: i32;
let _28: i32;
let _29: *const i128;
let _30: i8;
let _31: *mut bool;
let _32: f64;
let _33: u16;
let _34: (&'static Adt30, u16, (char,), (([i16; 2],), Adt31, u32));
let _35: f64;
let _36: f32;
let _37: isize;
let _38: bool;
let _39: u32;
let _40: &'static *const isize;
let _41: u32;
let _42: u8;
let _43: &'static mut (char,);
let _44: (char,);
let _45: i16;
let _46: *mut bool;
let _47: &'static mut *const (Adt35, &'static char, (char,), *mut bool);
let _48: isize;
let _49: f64;
let _50: (*const i64, &'static mut *const char, &'static Adt30, Adt34);
let _51: &'static *const isize;
let _52: isize;
let _53: ();
let _54: ();
{
_9 = _7;
_11 = !_5;
_7 = _10;
_3 = _2;
_9 = [(-25_i8),68_i8,38_i8,(-43_i8)];
RET = '\u{5f571}';
_4 = core::ptr::addr_of_mut!(_1);
_11 = (*_4) ^ (*_4);
_1 = !_11;
_11 = (*_4);
_5 = _11;
_9 = _2;
(*_4) = !_11;
_8 = [1356_u16,61197_u16,40887_u16,55745_u16,25560_u16,18073_u16];
_1 = _5;
_1 = _11;
_10 = [86_i8,27_i8,118_i8,116_i8];
Goto(bb1)
}
bb1 = {
RET = '\u{102cb9}';
_6 = [31131_u16,46936_u16,20088_u16,11207_u16,31885_u16,63959_u16];
_10 = _7;
RET = '\u{85778}';
_8 = [11520_u16,31849_u16,20021_u16,23031_u16,19477_u16,23358_u16];
_2 = [27_i8,(-96_i8),87_i8,93_i8];
RET = '\u{3d14d}';
_2 = [111_i8,(-20_i8),(-76_i8),125_i8];
_7 = _2;
_1 = !_11;
RET = '\u{a364b}';
_6 = [19937_u16,8702_u16,12636_u16,52264_u16,862_u16,23810_u16];
_6 = [22373_u16,44829_u16,45895_u16,10769_u16,13461_u16,45576_u16];
_2 = [24_i8,(-103_i8),(-104_i8),57_i8];
_6 = _8;
Goto(bb2)
}
bb2 = {
_14 = 58109_u16 & 17043_u16;
_5 = _1 & (*_4);
_18 = !9223372036854775807_isize;
_2 = _7;
_1 = _11 > _5;
_12 = (RET,);
_2 = _10;
_3 = [101_i8,116_i8,72_i8,(-89_i8)];
_16 = 24089328_u32 * 220973445_u32;
_4 = core::ptr::addr_of_mut!(_1);
(*_4) = !_5;
_12.0 = RET;
_8 = [_14,_14,_14,_14,_14,_14];
_14 = 47691_u16 * 14159_u16;
_14 = !20217_u16;
_10 = _2;
_18 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_12 = (RET,);
_8 = [_14,_14,_14,_14,_14,_14];
_2 = [(-50_i8),53_i8,(-93_i8),105_i8];
_6 = [_14,_14,_14,_14,_14,_14];
Call(_6 = fn11(_5, Move(_4), (*_4), (*_4), _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_1 = !_11;
_10 = _7;
_12 = (RET,);
_6 = [_14,_14,_14,_14,_14,_14];
_12.0 = RET;
_20 = [8143283829976038347_i64,(-4081825071812635349_i64),(-5790783100574661985_i64),7899358793752825362_i64];
_8 = [_14,_14,_14,_14,_14,_14];
_7 = [39_i8,62_i8,64_i8,(-34_i8)];
_21 = [(-23325_i16),18122_i16];
_20 = [(-75276058355759749_i64),163295511503656539_i64,(-5226496695884009668_i64),5524819088915663886_i64];
_22 = (_14, 16152326153672838044_u64);
_14 = !_22.0;
_22.1 = 17994911403187201302_u64 ^ 8155669281878171181_u64;
Goto(bb4)
}
bb4 = {
_2 = _7;
_26 = _18 as f64;
_12.0 = RET;
_6 = [_14,_14,_14,_22.0,_14,_14];
_26 = _16 as f64;
_25 = [175_u8,164_u8,243_u8,115_u8,170_u8,9_u8,96_u8];
_11 = _5 < _5;
_27 = (-5938130976887041059_i64) as i32;
_22.1 = _22.0 as u64;
_23 = _8;
_6 = [_14,_22.0,_22.0,_14,_22.0,_14];
_25 = [44_u8,14_u8,92_u8,108_u8,189_u8,90_u8,167_u8];
_22.0 = _14 >> _16;
_3 = [(-19_i8),20_i8,(-53_i8),15_i8];
Call(_8 = fn12(_11, _11, _16, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_20 = [(-195225474567167647_i64),(-2457703552256076795_i64),(-7625534751253459036_i64),(-3553451615073294562_i64)];
_11 = _1 & _5;
_24.2.0 = RET;
RET = _12.0;
_24.3 = core::ptr::addr_of_mut!(_11);
_14 = !_22.0;
_5 = _1;
_8 = [_14,_22.0,_14,_22.0,_22.0,_22.0];
_7 = _10;
RET = _12.0;
_22.0 = _11 as u16;
_5 = _11;
_2 = [(-112_i8),44_i8,38_i8,42_i8];
_24.2 = (_12.0,);
_18 = !9223372036854775807_isize;
_25 = [110_u8,143_u8,79_u8,13_u8,94_u8,75_u8,108_u8];
_2 = [81_i8,46_i8,(-2_i8),40_i8];
Call(_28 = core::intrinsics::bswap(_27), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_24.1 = &_24.2.0;
_31 = core::ptr::addr_of_mut!(_5);
_16 = 3174357128_u32;
_24.0 = Adt35::Variant1 { fld0: (-8836025869954802100_i64),fld1: _26,fld2: _16 };
_34.3.2 = !_16;
_10 = [(-25_i8),(-25_i8),(-77_i8),73_i8];
_34.3.2 = _16;
RET = _12.0;
_28 = _27 * _27;
(*_31) = _11;
_34.2 = _24.2;
_24.3 = Move(_31);
_14 = _22.0;
_14 = _22.0 * _22.0;
_4 = core::ptr::addr_of_mut!(_11);
_34.3.0.0 = [(-3053_i16),21191_i16];
RET = _12.0;
_33 = _14;
_36 = _26 as f32;
_1 = !_11;
_3 = [67_i8,2_i8,50_i8,43_i8];
_24.2 = _12;
Goto(bb7)
}
bb7 = {
_12 = (_34.2.0,);
_39 = Field::<u32>(Variant(_24.0, 1), 2);
_31 = Move(_24.3);
_34.2 = (_12.0,);
_39 = !_34.3.2;
_31 = Move(_4);
place!(Field::<i64>(Variant(_24.0, 1), 0)) = -(-448526531656669063_i64);
_25 = [99_u8,89_u8,220_u8,163_u8,78_u8,82_u8,17_u8];
_35 = _34.3.2 as f64;
_20 = [Field::<i64>(Variant(_24.0, 1), 0),Field::<i64>(Variant(_24.0, 1), 0),Field::<i64>(Variant(_24.0, 1), 0),Field::<i64>(Variant(_24.0, 1), 0)];
_31 = core::ptr::addr_of_mut!(_11);
_12 = (_24.2.0,);
Goto(bb8)
}
bb8 = {
_22.1 = 4122011116274182339_u64;
_25 = [76_u8,37_u8,112_u8,215_u8,44_u8,133_u8,107_u8];
_21 = [8727_i16,25852_i16];
_34.1 = !_22.0;
_2 = [32_i8,(-83_i8),106_i8,104_i8];
_23 = _8;
_3 = _2;
_22 = (_14, 5252633708457706625_u64);
place!(Field::<f64>(Variant(_24.0, 1), 1)) = _36 as f64;
_19 = &_24.0;
_24.3 = Move(_31);
_9 = _3;
_6 = [_14,_34.1,_22.0,_34.1,_22.0,_14];
_6 = [_14,_14,_34.1,_14,_22.0,_14];
_7 = [126_i8,84_i8,(-39_i8),(-63_i8)];
_35 = -Field::<f64>(Variant((*_19), 1), 1);
SetDiscriminant(_24.0, 1);
_13 = core::ptr::addr_of_mut!(_24);
_46 = core::ptr::addr_of_mut!(_38);
_24.1 = &(*_13).2.0;
place!(Field::<f64>(Variant((*_13).0, 1), 1)) = -_35;
Goto(bb9)
}
bb9 = {
_25 = [117_u8,77_u8,255_u8,31_u8,226_u8,81_u8,124_u8];
place!(Field::<u32>(Variant((*_13).0, 1), 2)) = _39;
place!(Field::<u32>(Variant((*_13).0, 1), 2)) = _39;
(*_13).3 = core::ptr::addr_of_mut!(_1);
_43 = &mut _24.2;
_11 = _1 ^ _1;
place!(Field::<i64>(Variant(_24.0, 1), 0)) = (-2419412874349593997_i64);
_34.3.2 = _16 ^ Field::<u32>(Variant(_24.0, 1), 2);
_12 = ((*_43).0,);
_4 = core::ptr::addr_of_mut!((*_46));
SetDiscriminant(_24.0, 1);
_1 = !_11;
place!(Field::<i64>(Variant(_24.0, 1), 0)) = (-5758864813854658083_i64) ^ 3862975069189144671_i64;
(*_4) = _14 >= _22.0;
place!(Field::<i64>(Variant((*_13).0, 1), 0)) = (-125225657539437603255615096968857263461_i128) as i64;
_32 = _26;
_6 = _23;
_48 = -_18;
_49 = -_26;
_32 = _49 + _35;
_22 = (_34.1, 9226459476875136786_u64);
Goto(bb10)
}
bb10 = {
_45 = (-21390_i16);
_35 = 139_u8 as f64;
_1 = (*_46);
_18 = !_48;
_28 = _27;
_28 = _27 * _27;
_2 = [(-93_i8),(-46_i8),68_i8,(-72_i8)];
_42 = _22.1 as u8;
_38 = _1 <= _11;
match _22.1 {
0 => bb4,
1 => bb11,
2 => bb12,
3 => bb13,
9226459476875136786 => bb15,
_ => bb14
}
}
bb11 = {
_25 = [117_u8,77_u8,255_u8,31_u8,226_u8,81_u8,124_u8];
place!(Field::<u32>(Variant((*_13).0, 1), 2)) = _39;
place!(Field::<u32>(Variant((*_13).0, 1), 2)) = _39;
(*_13).3 = core::ptr::addr_of_mut!(_1);
_43 = &mut _24.2;
_11 = _1 ^ _1;
place!(Field::<i64>(Variant(_24.0, 1), 0)) = (-2419412874349593997_i64);
_34.3.2 = _16 ^ Field::<u32>(Variant(_24.0, 1), 2);
_12 = ((*_43).0,);
_4 = core::ptr::addr_of_mut!((*_46));
SetDiscriminant(_24.0, 1);
_1 = !_11;
place!(Field::<i64>(Variant(_24.0, 1), 0)) = (-5758864813854658083_i64) ^ 3862975069189144671_i64;
(*_4) = _14 >= _22.0;
place!(Field::<i64>(Variant((*_13).0, 1), 0)) = (-125225657539437603255615096968857263461_i128) as i64;
_32 = _26;
_6 = _23;
_48 = -_18;
_49 = -_26;
_32 = _49 + _35;
_22 = (_34.1, 9226459476875136786_u64);
Goto(bb10)
}
bb12 = {
_1 = !_11;
_10 = _7;
_12 = (RET,);
_6 = [_14,_14,_14,_14,_14,_14];
_12.0 = RET;
_20 = [8143283829976038347_i64,(-4081825071812635349_i64),(-5790783100574661985_i64),7899358793752825362_i64];
_8 = [_14,_14,_14,_14,_14,_14];
_7 = [39_i8,62_i8,64_i8,(-34_i8)];
_21 = [(-23325_i16),18122_i16];
_20 = [(-75276058355759749_i64),163295511503656539_i64,(-5226496695884009668_i64),5524819088915663886_i64];
_22 = (_14, 16152326153672838044_u64);
_14 = !_22.0;
_22.1 = 17994911403187201302_u64 ^ 8155669281878171181_u64;
Goto(bb4)
}
bb13 = {
_12 = (_34.2.0,);
_39 = Field::<u32>(Variant(_24.0, 1), 2);
_31 = Move(_24.3);
_34.2 = (_12.0,);
_39 = !_34.3.2;
_31 = Move(_4);
place!(Field::<i64>(Variant(_24.0, 1), 0)) = -(-448526531656669063_i64);
_25 = [99_u8,89_u8,220_u8,163_u8,78_u8,82_u8,17_u8];
_35 = _34.3.2 as f64;
_20 = [Field::<i64>(Variant(_24.0, 1), 0),Field::<i64>(Variant(_24.0, 1), 0),Field::<i64>(Variant(_24.0, 1), 0),Field::<i64>(Variant(_24.0, 1), 0)];
_31 = core::ptr::addr_of_mut!(_11);
_12 = (_24.2.0,);
Goto(bb8)
}
bb14 = {
_2 = _7;
_26 = _18 as f64;
_12.0 = RET;
_6 = [_14,_14,_14,_22.0,_14,_14];
_26 = _16 as f64;
_25 = [175_u8,164_u8,243_u8,115_u8,170_u8,9_u8,96_u8];
_11 = _5 < _5;
_27 = (-5938130976887041059_i64) as i32;
_22.1 = _22.0 as u64;
_23 = _8;
_6 = [_14,_22.0,_22.0,_14,_22.0,_14];
_25 = [44_u8,14_u8,92_u8,108_u8,189_u8,90_u8,167_u8];
_22.0 = _14 >> _16;
_3 = [(-19_i8),20_i8,(-53_i8),15_i8];
Call(_8 = fn12(_11, _11, _16, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_1 = !(*_4);
_14 = _33 * _22.0;
(*_4) = _5;
place!(Field::<f64>(Variant((*_13).0, 1), 1)) = _32 - _32;
place!(Field::<u32>(Variant((*_13).0, 1), 2)) = !_34.3.2;
Goto(bb16)
}
bb16 = {
Call(_53 = dump_var(10_usize, 21_usize, Move(_21), 38_usize, Move(_38), 8_usize, Move(_8), 45_usize, Move(_45)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_53 = dump_var(10_usize, 28_usize, Move(_28), 20_usize, Move(_20), 9_usize, Move(_9), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_53 = dump_var(10_usize, 42_usize, Move(_42), 10_usize, Move(_10), 22_usize, Move(_22), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_53 = dump_var(10_usize, 14_usize, Move(_14), 54_usize, _54, 54_usize, _54, 54_usize, _54), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: bool,mut _2: *mut bool,mut _3: bool,mut _4: bool,mut _5: [i8; 4]) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _6: *const i128;
let _7: u32;
let _8: (u16, u64);
let _9: *mut bool;
let _10: bool;
let _11: [i64; 4];
let _12: *const i64;
let _13: f32;
let _14: *mut [i64; 7];
let _15: [i64; 4];
let _16: (char,);
let _17: (char,);
let _18: Adt34;
let _19: *mut (Adt35, &'static char, (char,), *mut bool);
let _20: [u8; 7];
let _21: isize;
let _22: bool;
let _23: f32;
let _24: i16;
let _25: ();
let _26: ();
{
_3 = _1 < _4;
_2 = core::ptr::addr_of_mut!(_4);
RET = [22139_u16,39932_u16,61183_u16,20277_u16,5072_u16,4237_u16];
_1 = !(*_2);
Goto(bb1)
}
bb1 = {
_1 = !_3;
_2 = core::ptr::addr_of_mut!(_1);
_3 = (*_2) <= (*_2);
RET = [58684_u16,30120_u16,47891_u16,42163_u16,17728_u16,57752_u16];
RET = [20267_u16,47587_u16,20097_u16,47960_u16,60243_u16,11394_u16];
_8.1 = !3151839257031880866_u64;
_8 = (61867_u16, 6750483976665863330_u64);
_1 = !_3;
_9 = Move(_2);
_4 = _3;
_10 = _3 & _1;
_7 = (-9223372036854775808_isize) as u32;
_11 = [(-3751188483532808983_i64),(-7952707904722154953_i64),(-5865998443015401918_i64),(-8677538594422196391_i64)];
_7 = !2233395009_u32;
_9 = core::ptr::addr_of_mut!(_10);
_4 = (*_9) < _3;
_8.0 = !3678_u16;
_8 = (51290_u16, 1722016408473391732_u64);
_10 = _4;
(*_9) = _4 & _4;
_2 = core::ptr::addr_of_mut!(_3);
_8.1 = !2550942629178015085_u64;
_10 = (*_2) & (*_2);
match _8.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
51290 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
(*_2) = !_1;
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_3 = _4 <= _1;
(*_2) = !_10;
_3 = _10;
_4 = !(*_2);
_4 = (*_9);
_10 = !(*_2);
(*_9) = _3;
_2 = core::ptr::addr_of_mut!(_3);
_4 = !(*_2);
(*_9) = !_4;
_8.1 = 2187002817918345268_u64;
_4 = !_1;
_13 = 15404105404695894760_usize as f32;
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
(*_9) = _3;
_2 = core::ptr::addr_of_mut!(_1);
Goto(bb10)
}
bb10 = {
_10 = _1 == _3;
_10 = _3 == _3;
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_11 = [93311329587938967_i64,4296443648549755528_i64,5216690372766427845_i64,2207758962091743850_i64];
_11 = [2448013078965732617_i64,3771610600685768561_i64,2301304583342521748_i64,76458414983627389_i64];
_16.0 = '\u{1beb4}';
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
51290 => bb11,
_ => bb7
}
}
bb11 = {
_15 = [831426599160753532_i64,1103438247440283254_i64,7324332038798509865_i64,(-3010571783936015165_i64)];
_2 = core::ptr::addr_of_mut!(_1);
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
(*_9) = !_3;
_13 = 239_u8 as f32;
_17 = _16;
_10 = _1;
(*_2) = !_3;
_15 = _11;
_8 = (58491_u16, 14374606839537677977_u64);
_9 = core::ptr::addr_of_mut!((*_9));
_8.1 = !10068407458799928252_u64;
_7 = !1746636452_u32;
_8.1 = 3390192442466331802_u64;
_8.1 = 1017932983560732393_u64 + 16089597272610911992_u64;
_3 = !(*_2);
_2 = Move(_9);
_8.0 = 57673_u16 + 20537_u16;
_13 = (-20_i8) as f32;
_4 = _3 > _3;
_10 = _4;
_9 = Move(_2);
_1 = _4;
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_8 = (25081_u16, 16466878692145530996_u64);
_13 = _8.0 as f32;
_9 = core::ptr::addr_of_mut!(_1);
_9 = core::ptr::addr_of_mut!(_4);
_16 = (_17.0,);
Goto(bb12)
}
bb12 = {
(*_9) = _3 & _3;
_15 = [4818060484922286783_i64,(-4933056824161295232_i64),1348038131357415334_i64,(-8688508992825626652_i64)];
_10 = _4;
_11 = [2571504115874238480_i64,353905179469659732_i64,(-1644958432974914705_i64),(-1364502972305230021_i64)];
_2 = core::ptr::addr_of_mut!(_4);
_8.1 = 110457233961245643819007040550645801875_u128 as u64;
_16.0 = _17.0;
_9 = Move(_2);
_2 = core::ptr::addr_of_mut!(_3);
_8.0 = !27434_u16;
_2 = core::ptr::addr_of_mut!(_10);
(*_2) = _1 <= _3;
_8 = (8857_u16, 12366896053612298051_u64);
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_2 = core::ptr::addr_of_mut!((*_2));
_20 = [130_u8,60_u8,153_u8,235_u8,104_u8,145_u8,224_u8];
_20 = [212_u8,159_u8,170_u8,150_u8,247_u8,121_u8,64_u8];
_15 = [719584379287048286_i64,3020063754443634432_i64,9168850994495338791_i64,4011373773502354536_i64];
_21 = 1_usize as isize;
_16 = (_17.0,);
_16 = (_17.0,);
match _8.1 {
0 => bb1,
1 => bb3,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
12366896053612298051 => bb18,
_ => bb17
}
}
bb13 = {
_15 = [831426599160753532_i64,1103438247440283254_i64,7324332038798509865_i64,(-3010571783936015165_i64)];
_2 = core::ptr::addr_of_mut!(_1);
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
(*_9) = !_3;
_13 = 239_u8 as f32;
_17 = _16;
_10 = _1;
(*_2) = !_3;
_15 = _11;
_8 = (58491_u16, 14374606839537677977_u64);
_9 = core::ptr::addr_of_mut!((*_9));
_8.1 = !10068407458799928252_u64;
_7 = !1746636452_u32;
_8.1 = 3390192442466331802_u64;
_8.1 = 1017932983560732393_u64 + 16089597272610911992_u64;
_3 = !(*_2);
_2 = Move(_9);
_8.0 = 57673_u16 + 20537_u16;
_13 = (-20_i8) as f32;
_4 = _3 > _3;
_10 = _4;
_9 = Move(_2);
_1 = _4;
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_8 = (25081_u16, 16466878692145530996_u64);
_13 = _8.0 as f32;
_9 = core::ptr::addr_of_mut!(_1);
_9 = core::ptr::addr_of_mut!(_4);
_16 = (_17.0,);
Goto(bb12)
}
bb14 = {
_10 = _1 == _3;
_10 = _3 == _3;
RET = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_11 = [93311329587938967_i64,4296443648549755528_i64,5216690372766427845_i64,2207758962091743850_i64];
_11 = [2448013078965732617_i64,3771610600685768561_i64,2301304583342521748_i64,76458414983627389_i64];
_16.0 = '\u{1beb4}';
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
51290 => bb11,
_ => bb7
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_13 = 81_u8 as f32;
_9 = core::ptr::addr_of_mut!((*_2));
_21 = (-9223372036854775808_isize);
_8.0 = !47029_u16;
_8 = (10989_u16, 14173686151816714494_u64);
_23 = _13;
_7 = 154201955_u32 << _8.1;
_8.1 = !7854230964554976965_u64;
Goto(bb19)
}
bb19 = {
Call(_25 = dump_var(11_usize, 7_usize, Move(_7), 5_usize, Move(_5), 15_usize, Move(_15), 8_usize, Move(_8)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_25 = dump_var(11_usize, 4_usize, Move(_4), 3_usize, Move(_3), 26_usize, _26, 26_usize, _26), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: bool,mut _2: bool,mut _3: u32,mut _4: bool) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _5: *const (u16,);
let _6: [i64; 7];
let _7: i16;
let _8: ([i16; 2],);
let _9: isize;
let _10: &'static mut [i64; 4];
let _11: Adt75;
let _12: &'static (([i16; 2],), Adt31, u32);
let _13: (([i16; 2],), ([i16; 2],));
let _14: bool;
let _15: isize;
let _16: &'static mut *const (Adt35, &'static char, (char,), *mut bool);
let _17: usize;
let _18: [u16; 6];
let _19: f64;
let _20: char;
let _21: u8;
let _22: i64;
let _23: u64;
let _24: f64;
let _25: f32;
let _26: *const Adt40;
let _27: *const i128;
let _28: *const (char,);
let _29: &'static *const isize;
let _30: *mut [i64; 7];
let _31: f64;
let _32: [u16; 6];
let _33: isize;
let _34: f32;
let _35: (Adt35, &'static char, (char,), *mut bool);
let _36: *const ([i16; 2],);
let _37: [i8; 4];
let _38: u32;
let _39: i8;
let _40: [u64; 7];
let _41: *const *mut bool;
let _42: [u8; 7];
let _43: isize;
let _44: *const Adt40;
let _45: f32;
let _46: ([i16; 2],);
let _47: (char,);
let _48: ();
let _49: ();
{
RET = [34164_u16,60023_u16,6389_u16,40879_u16,57918_u16,13346_u16];
_3 = !1521464228_u32;
_1 = !_2;
_4 = !_2;
RET = [55152_u16,38430_u16,29513_u16,32810_u16,38566_u16,40159_u16];
_1 = !_2;
RET = [60606_u16,62553_u16,25878_u16,6452_u16,42573_u16,1_u16];
_4 = _2;
_3 = 4064151430_u32 + 1470155158_u32;
RET = [51396_u16,26938_u16,43743_u16,4930_u16,35224_u16,171_u16];
RET = [26652_u16,40276_u16,27193_u16,54470_u16,44117_u16,28611_u16];
_3 = 2994516455_u32;
_1 = !_2;
_2 = !_4;
_4 = _1;
RET = [59153_u16,7015_u16,11121_u16,24139_u16,4343_u16,11111_u16];
_1 = !_2;
_3 = 9223372036854775807_isize as u32;
_1 = _4 >= _4;
_7 = (-25242_i16) & (-21460_i16);
Goto(bb1)
}
bb1 = {
_6 = [(-3989822380973011894_i64),(-2165000706566766734_i64),(-2742432895018889107_i64),(-8579905620354647505_i64),3713560904554315436_i64,(-7097642628090681370_i64),5813866964614558430_i64];
_3 = 1917776461_u32;
RET = [22562_u16,62498_u16,24836_u16,8350_u16,5474_u16,20371_u16];
_6 = [(-630301929738029832_i64),8290322904854199961_i64,3592219557245403367_i64,1312003995476802893_i64,(-8040487190147638974_i64),7559402822621496562_i64,(-1979595597520983097_i64)];
_4 = _2;
_8.0 = [_7,_7];
_7 = (-45355464_i32) as i16;
RET = [31400_u16,6722_u16,6069_u16,17377_u16,28245_u16,14931_u16];
_3 = '\u{75f6e}' as u32;
_7 = !11976_i16;
_7 = !2818_i16;
_8.0 = [_7,_7];
_4 = _1;
_7 = 25154_i16;
_4 = !_1;
_1 = !_2;
RET = [16708_u16,38210_u16,45844_u16,43039_u16,48291_u16,54003_u16];
_8.0 = [_7,_7];
_8.0 = [_7,_7];
_2 = _1 != _4;
_7 = 6_usize as i16;
Goto(bb2)
}
bb2 = {
_8.0 = [_7,_7];
_8.0 = [_7,_7];
_1 = _2 ^ _2;
_3 = !272868393_u32;
_4 = _1 & _1;
_8.0 = [_7,_7];
RET = [6392_u16,28463_u16,693_u16,22464_u16,36680_u16,21301_u16];
RET = [57719_u16,60576_u16,16700_u16,30883_u16,62254_u16,15235_u16];
_3 = 1218583440_u32 & 3501810824_u32;
_6 = [(-3767740307170603018_i64),(-4105042272600260159_i64),(-5845259158800609260_i64),(-707976042152198067_i64),4331891124887258768_i64,8465721848676681445_i64,7482474099992325740_i64];
_2 = _4 == _4;
_9 = (-9223372036854775808_isize);
_9 = -10_isize;
_1 = !_4;
_13.1.0 = [_7,_7];
_13.0.0 = [_7,_7];
_6 = [3102100979856908424_i64,(-6357723447673208378_i64),4372309362383825420_i64,1325151050137682721_i64,4330864620951753050_i64,5532541616269159043_i64,3706442471136395530_i64];
_14 = _4;
_13.0 = (_8.0,);
_8.0 = [_7,_7];
_15 = _9 << _7;
_8 = _13.0;
_8 = (_13.1.0,);
Goto(bb3)
}
bb3 = {
RET = [970_u16,60558_u16,58580_u16,36285_u16,11803_u16,38054_u16];
_9 = _15;
RET = [60190_u16,8109_u16,21978_u16,12724_u16,31524_u16,11119_u16];
_17 = 1_usize;
_17 = RET[_17] as usize;
_17 = _15 as usize;
_13.1 = (_8.0,);
_13.0 = (_8.0,);
_13.1.0 = _13.0.0;
_9 = _15 | _15;
_13.1 = _8;
_13.0 = _13.1;
_9 = 85_i8 as isize;
RET = [23169_u16,5247_u16,34533_u16,52067_u16,40076_u16,49436_u16];
_1 = !_4;
_14 = _2;
_8.0 = [_7,_7];
_4 = !_1;
_1 = _14;
_18 = [21225_u16,52388_u16,49632_u16,43009_u16,54455_u16,14333_u16];
_13.0.0 = [_7,_7];
RET = [54870_u16,18581_u16,2845_u16,56608_u16,41325_u16,36141_u16];
Goto(bb4)
}
bb4 = {
_7 = _17 as i16;
_14 = _4;
_13.0 = _8;
_14 = !_2;
RET = _18;
_13.1.0 = _8.0;
_9 = -_15;
_14 = _4;
_6 = [5716479012666795563_i64,5964929103161080542_i64,(-6108465815983515742_i64),8953092578792709898_i64,844831511784922204_i64,3598834673315256352_i64,(-5031156768411812801_i64)];
_2 = _14 | _14;
_2 = _1 >= _14;
_13.0 = (_13.1.0,);
_4 = !_2;
_3 = 490558413_u32;
_18 = RET;
_8.0 = [_7,_7];
_8 = _13.1;
_18 = [17261_u16,36292_u16,49765_u16,46810_u16,57529_u16,1371_u16];
_8 = (_13.1.0,);
_4 = _1 <= _1;
Goto(bb5)
}
bb5 = {
_13.0.0 = [_7,_7];
_13.1.0 = _13.0.0;
Goto(bb6)
}
bb6 = {
_7 = (-3564_i16) + (-7443_i16);
_13 = (_8, _8);
_9 = _15 - _15;
RET = _18;
_23 = !17504295328662379002_u64;
_30 = core::ptr::addr_of_mut!(_6);
_19 = 62533_u16 as f64;
_22 = -4376372019958636373_i64;
Call(_21 = core::intrinsics::transmute(_1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_32 = RET;
_7 = !(-22783_i16);
_31 = -_19;
_13.0.0 = _13.1.0;
_8.0 = [_7,_7];
_23 = 3383907070313803259_u64;
_20 = '\u{38ac6}';
_28 = core::ptr::addr_of!(_35.2);
_35.2.0 = _20;
_15 = -_9;
_35.3 = core::ptr::addr_of_mut!(_1);
_35.1 = &_20;
_4 = _1;
_3 = 1875836389_u32 * 80035501_u32;
_9 = !_15;
_25 = _7 as f32;
_30 = core::ptr::addr_of_mut!(_6);
_24 = _19;
(*_30) = [_22,_22,_22,_22,_22,_22,_22];
_36 = core::ptr::addr_of!(_8);
Goto(bb8)
}
bb8 = {
(*_30) = [_22,_22,_22,_22,_22,_22,_22];
_3 = 821859437_u32;
_35.2 = (_20,);
_33 = 31159_u16 as isize;
_34 = _7 as f32;
RET = [32263_u16,34844_u16,42662_u16,52442_u16,41355_u16,44051_u16];
_4 = _14 | _1;
_7 = -(-14004_i16);
_35.2 = (_20,);
_19 = _24 * _24;
_6 = [_22,_22,_22,_22,_22,_22,_22];
_22 = (-4856117887699071357_i64);
_20 = (*_28).0;
_39 = (-72_i8) >> _21;
_13.0 = _8;
_37 = [_39,_39,_39,_39];
_14 = _1;
(*_36) = (_13.1.0,);
(*_28) = (_20,);
_8 = _13.1;
(*_36) = (_13.0.0,);
_19 = _24 * _31;
_17 = 4500694994609610059_usize & 7_usize;
match _3 {
0 => bb7,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
821859437 => bb15,
_ => bb14
}
}
bb9 = {
_32 = RET;
_7 = !(-22783_i16);
_31 = -_19;
_13.0.0 = _13.1.0;
_8.0 = [_7,_7];
_23 = 3383907070313803259_u64;
_20 = '\u{38ac6}';
_28 = core::ptr::addr_of!(_35.2);
_35.2.0 = _20;
_15 = -_9;
_35.3 = core::ptr::addr_of_mut!(_1);
_35.1 = &_20;
_4 = _1;
_3 = 1875836389_u32 * 80035501_u32;
_9 = !_15;
_25 = _7 as f32;
_30 = core::ptr::addr_of_mut!(_6);
_24 = _19;
(*_30) = [_22,_22,_22,_22,_22,_22,_22];
_36 = core::ptr::addr_of!(_8);
Goto(bb8)
}
bb10 = {
_7 = (-3564_i16) + (-7443_i16);
_13 = (_8, _8);
_9 = _15 - _15;
RET = _18;
_23 = !17504295328662379002_u64;
_30 = core::ptr::addr_of_mut!(_6);
_19 = 62533_u16 as f64;
_22 = -4376372019958636373_i64;
Call(_21 = core::intrinsics::transmute(_1), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_13.0.0 = [_7,_7];
_13.1.0 = _13.0.0;
Goto(bb6)
}
bb12 = {
_6 = [(-3989822380973011894_i64),(-2165000706566766734_i64),(-2742432895018889107_i64),(-8579905620354647505_i64),3713560904554315436_i64,(-7097642628090681370_i64),5813866964614558430_i64];
_3 = 1917776461_u32;
RET = [22562_u16,62498_u16,24836_u16,8350_u16,5474_u16,20371_u16];
_6 = [(-630301929738029832_i64),8290322904854199961_i64,3592219557245403367_i64,1312003995476802893_i64,(-8040487190147638974_i64),7559402822621496562_i64,(-1979595597520983097_i64)];
_4 = _2;
_8.0 = [_7,_7];
_7 = (-45355464_i32) as i16;
RET = [31400_u16,6722_u16,6069_u16,17377_u16,28245_u16,14931_u16];
_3 = '\u{75f6e}' as u32;
_7 = !11976_i16;
_7 = !2818_i16;
_8.0 = [_7,_7];
_4 = _1;
_7 = 25154_i16;
_4 = !_1;
_1 = !_2;
RET = [16708_u16,38210_u16,45844_u16,43039_u16,48291_u16,54003_u16];
_8.0 = [_7,_7];
_8.0 = [_7,_7];
_2 = _1 != _4;
_7 = 6_usize as i16;
Goto(bb2)
}
bb13 = {
RET = [970_u16,60558_u16,58580_u16,36285_u16,11803_u16,38054_u16];
_9 = _15;
RET = [60190_u16,8109_u16,21978_u16,12724_u16,31524_u16,11119_u16];
_17 = 1_usize;
_17 = RET[_17] as usize;
_17 = _15 as usize;
_13.1 = (_8.0,);
_13.0 = (_8.0,);
_13.1.0 = _13.0.0;
_9 = _15 | _15;
_13.1 = _8;
_13.0 = _13.1;
_9 = 85_i8 as isize;
RET = [23169_u16,5247_u16,34533_u16,52067_u16,40076_u16,49436_u16];
_1 = !_4;
_14 = _2;
_8.0 = [_7,_7];
_4 = !_1;
_1 = _14;
_18 = [21225_u16,52388_u16,49632_u16,43009_u16,54455_u16,14333_u16];
_13.0.0 = [_7,_7];
RET = [54870_u16,18581_u16,2845_u16,56608_u16,41325_u16,36141_u16];
Goto(bb4)
}
bb14 = {
_8.0 = [_7,_7];
_8.0 = [_7,_7];
_1 = _2 ^ _2;
_3 = !272868393_u32;
_4 = _1 & _1;
_8.0 = [_7,_7];
RET = [6392_u16,28463_u16,693_u16,22464_u16,36680_u16,21301_u16];
RET = [57719_u16,60576_u16,16700_u16,30883_u16,62254_u16,15235_u16];
_3 = 1218583440_u32 & 3501810824_u32;
_6 = [(-3767740307170603018_i64),(-4105042272600260159_i64),(-5845259158800609260_i64),(-707976042152198067_i64),4331891124887258768_i64,8465721848676681445_i64,7482474099992325740_i64];
_2 = _4 == _4;
_9 = (-9223372036854775808_isize);
_9 = -10_isize;
_1 = !_4;
_13.1.0 = [_7,_7];
_13.0.0 = [_7,_7];
_6 = [3102100979856908424_i64,(-6357723447673208378_i64),4372309362383825420_i64,1325151050137682721_i64,4330864620951753050_i64,5532541616269159043_i64,3706442471136395530_i64];
_14 = _4;
_13.0 = (_8.0,);
_8.0 = [_7,_7];
_15 = _9 << _7;
_8 = _13.0;
_8 = (_13.1.0,);
Goto(bb3)
}
bb15 = {
_43 = !_9;
_31 = _7 as f64;
_36 = core::ptr::addr_of!((*_36));
_9 = !_15;
_35.2 = (_20,);
_3 = 102132087754791777111420816223885534948_u128 as u32;
(*_30) = [_22,_22,_22,_22,_22,_22,_22];
(*_36) = (_13.0.0,);
_2 = !_1;
_6 = [_22,_22,_22,_22,_22,_22,_22];
_22 = 7251977571725134775_i64;
_35.2.0 = _20;
_31 = 48384632129890206560114143969936485377_i128 as f64;
_39 = -107_i8;
_18 = RET;
RET = _18;
_17 = 4_usize & 3550503962797217385_usize;
Goto(bb16)
}
bb16 = {
Call(_48 = dump_var(12_usize, 43_usize, Move(_43), 39_usize, Move(_39), 33_usize, Move(_33), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(12_usize, 37_usize, Move(_37), 14_usize, Move(_14), 18_usize, Move(_18), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(12_usize, 7_usize, Move(_7), 13_usize, Move(_13), 6_usize, Move(_6), 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: (char,),mut _2: [i8; 4],mut _3: [i16; 2],mut _4: [u16; 6],mut _5: [i8; 4],mut _6: *mut bool,mut _7: (char,),mut _8: [i16; 2]) -> bool {
mir! {
type RET = bool;
let _9: (Adt35, &'static char, (char,), *mut bool);
let _10: [u8; 7];
let _11: *mut [i64; 7];
let _12: [i64; 4];
let _13: [bool; 1];
let _14: bool;
let _15: [i16; 2];
let _16: [i64; 7];
let _17: (&'static Adt30, u16, (char,), (([i16; 2],), Adt31, u32));
let _18: char;
let _19: (u16, u64);
let _20: u16;
let _21: *const i128;
let _22: (f64, *mut bool, &'static mut *mut bool, i32);
let _23: isize;
let _24: [i64; 7];
let _25: [u16; 6];
let _26: f64;
let _27: char;
let _28: f64;
let _29: [i64; 7];
let _30: *const (u16,);
let _31: (([i16; 2],), ([i16; 2],));
let _32: i32;
let _33: ();
let _34: ();
{
_3 = [(-11894_i16),(-3553_i16)];
_7 = _1;
RET = !true;
_7.0 = _1.0;
_2 = [(-6_i8),107_i8,50_i8,14_i8];
_2 = [(-89_i8),(-42_i8),35_i8,21_i8];
_4 = [40615_u16,41647_u16,58782_u16,37654_u16,21494_u16,28517_u16];
_6 = core::ptr::addr_of_mut!(RET);
(*_6) = !false;
_1.0 = _7.0;
_1 = (_7.0,);
_9.1 = &_7.0;
_5 = _2;
_3 = [(-14975_i16),2662_i16];
_9.3 = core::ptr::addr_of_mut!(RET);
_9.3 = core::ptr::addr_of_mut!((*_6));
_9.2.0 = _1.0;
_1 = (_9.2.0,);
_7.0 = _9.2.0;
_4 = [41444_u16,5694_u16,51225_u16,29257_u16,4880_u16,31809_u16];
_7 = (_9.2.0,);
RET = true;
(*_6) = true;
Call(_6 = fn14((*_6), RET, _5, _3, Move(_9.3), _5, Move(_9.1), _3, _2, _4, _4, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = core::ptr::addr_of_mut!(RET);
_8 = [21820_i16,(-17201_i16)];
_3 = _8;
_3 = [28009_i16,11537_i16];
(*_6) = true;
_9.3 = core::ptr::addr_of_mut!((*_6));
(*_6) = _1.0 != _7.0;
_9.1 = &_1.0;
_1.0 = _9.2.0;
Goto(bb2)
}
bb2 = {
_8 = _3;
_14 = (*_6) & (*_6);
_15 = [621_i16,(-28438_i16)];
_10 = [144_u8,172_u8,81_u8,62_u8,62_u8,235_u8,44_u8];
_12 = [2321646813199204348_i64,(-1645435513296650633_i64),2201656734615820206_i64,6736351768955633320_i64];
_9.2.0 = _7.0;
_7.0 = _1.0;
_1.0 = _7.0;
Goto(bb3)
}
bb3 = {
_11 = core::ptr::addr_of_mut!(_16);
_2 = [117_i8,(-45_i8),(-36_i8),(-47_i8)];
_4 = [50501_u16,22548_u16,10343_u16,21297_u16,20232_u16,14917_u16];
_15 = [(-10706_i16),1052_i16];
Goto(bb4)
}
bb4 = {
RET = _7.0 <= _1.0;
(*_6) = !_14;
_5 = [(-79_i8),23_i8,(-43_i8),75_i8];
_6 = core::ptr::addr_of_mut!(_14);
_12 = [1621583918713148577_i64,(-3031973979950578197_i64),1190598372376060732_i64,(-4460903308567916659_i64)];
_8 = [30832_i16,(-8421_i16)];
_9.1 = &_9.2.0;
_14 = !RET;
_7.0 = _1.0;
_4 = [22244_u16,23880_u16,27743_u16,26616_u16,32541_u16,15280_u16];
_13 = [_14];
_16 = [(-4155900401881537724_i64),(-947225528253503936_i64),5436643990402861960_i64,8533352261882118871_i64,(-6318001032197399552_i64),1896105031793693641_i64,(-8693801053003825241_i64)];
_11 = core::ptr::addr_of_mut!((*_11));
_7.0 = _9.2.0;
Goto(bb5)
}
bb5 = {
_9.1 = &_9.2.0;
_1 = _9.2;
_8 = [7490_i16,7508_i16];
Goto(bb6)
}
bb6 = {
_16 = [(-5148919885879953996_i64),(-5908358771358400306_i64),4849339217501750459_i64,1841861502563814253_i64,1788547460239322162_i64,(-3204176250024120104_i64),(-5033941309770178559_i64)];
_3 = [1027_i16,15493_i16];
_16 = [865872499243251216_i64,(-4365622386329246049_i64),(-6853222240687656655_i64),2996761742455824485_i64,(-2411405625017627250_i64),(-3699592237016650069_i64),(-7991318080089231138_i64)];
_11 = core::ptr::addr_of_mut!(_16);
(*_11) = [6880499290495659865_i64,2893185510897207068_i64,(-7021532989409941024_i64),3244344557921172058_i64,(-3539132909040654514_i64),(-8135773341561199425_i64),(-7637363920407242364_i64)];
_9.2 = (_1.0,);
_17.3.0.0 = [19798_i16,(-22418_i16)];
_10 = [53_u8,69_u8,203_u8,84_u8,47_u8,25_u8,84_u8];
_9.2 = _1;
_17.2.0 = _9.2.0;
_8 = _15;
_10 = [133_u8,207_u8,41_u8,144_u8,75_u8,11_u8,240_u8];
_10 = [65_u8,98_u8,199_u8,161_u8,43_u8,98_u8,68_u8];
(*_6) = RET;
_9.1 = &_1.0;
_11 = core::ptr::addr_of_mut!((*_11));
RET = (*_6);
_12 = [5737975967157076483_i64,469260415460985710_i64,2739402514352474834_i64,(-4942945358591573628_i64)];
_4 = [23591_u16,5845_u16,43218_u16,12470_u16,15452_u16,17444_u16];
RET = _1.0 != _9.2.0;
_9.1 = &_17.2.0;
_10 = [249_u8,189_u8,31_u8,86_u8,139_u8,162_u8,116_u8];
Goto(bb7)
}
bb7 = {
_6 = core::ptr::addr_of_mut!((*_6));
(*_11) = [(-7771023916068233294_i64),(-2082306586656988908_i64),1115031776518051227_i64,(-3694201953693437040_i64),8089218986998902403_i64,3729172702007109011_i64,(-336782545626437575_i64)];
_2 = [(-67_i8),58_i8,(-6_i8),49_i8];
_1 = _7;
(*_6) = !RET;
(*_6) = !RET;
_17.1 = 54813_u16;
RET = _14 > (*_6);
(*_11) = [(-3730308370902268886_i64),(-9113027798218639490_i64),8782109951181769970_i64,(-131860208438340724_i64),3626722358087458662_i64,(-4052037794373728869_i64),3382401557663958001_i64];
_1 = (_7.0,);
_19.0 = _17.1 - _17.1;
_1.0 = _17.2.0;
_19 = (_17.1, 8444221725611573499_u64);
_17.3.0.0 = [(-15945_i16),(-4710_i16)];
_15 = [9680_i16,(-30640_i16)];
_1 = _17.2;
_14 = !RET;
_7.0 = _1.0;
(*_11) = [(-4063608343075601305_i64),(-5882355265869832929_i64),(-208500924081855120_i64),(-6300300333144622543_i64),(-3215346103134852336_i64),(-1656357122959876019_i64),(-1266763449300753892_i64)];
RET = _14;
match _19.1 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
8444221725611573499 => bb15,
_ => bb14
}
}
bb8 = {
_16 = [(-5148919885879953996_i64),(-5908358771358400306_i64),4849339217501750459_i64,1841861502563814253_i64,1788547460239322162_i64,(-3204176250024120104_i64),(-5033941309770178559_i64)];
_3 = [1027_i16,15493_i16];
_16 = [865872499243251216_i64,(-4365622386329246049_i64),(-6853222240687656655_i64),2996761742455824485_i64,(-2411405625017627250_i64),(-3699592237016650069_i64),(-7991318080089231138_i64)];
_11 = core::ptr::addr_of_mut!(_16);
(*_11) = [6880499290495659865_i64,2893185510897207068_i64,(-7021532989409941024_i64),3244344557921172058_i64,(-3539132909040654514_i64),(-8135773341561199425_i64),(-7637363920407242364_i64)];
_9.2 = (_1.0,);
_17.3.0.0 = [19798_i16,(-22418_i16)];
_10 = [53_u8,69_u8,203_u8,84_u8,47_u8,25_u8,84_u8];
_9.2 = _1;
_17.2.0 = _9.2.0;
_8 = _15;
_10 = [133_u8,207_u8,41_u8,144_u8,75_u8,11_u8,240_u8];
_10 = [65_u8,98_u8,199_u8,161_u8,43_u8,98_u8,68_u8];
(*_6) = RET;
_9.1 = &_1.0;
_11 = core::ptr::addr_of_mut!((*_11));
RET = (*_6);
_12 = [5737975967157076483_i64,469260415460985710_i64,2739402514352474834_i64,(-4942945358591573628_i64)];
_4 = [23591_u16,5845_u16,43218_u16,12470_u16,15452_u16,17444_u16];
RET = _1.0 != _9.2.0;
_9.1 = &_17.2.0;
_10 = [249_u8,189_u8,31_u8,86_u8,139_u8,162_u8,116_u8];
Goto(bb7)
}
bb9 = {
_9.1 = &_9.2.0;
_1 = _9.2;
_8 = [7490_i16,7508_i16];
Goto(bb6)
}
bb10 = {
RET = _7.0 <= _1.0;
(*_6) = !_14;
_5 = [(-79_i8),23_i8,(-43_i8),75_i8];
_6 = core::ptr::addr_of_mut!(_14);
_12 = [1621583918713148577_i64,(-3031973979950578197_i64),1190598372376060732_i64,(-4460903308567916659_i64)];
_8 = [30832_i16,(-8421_i16)];
_9.1 = &_9.2.0;
_14 = !RET;
_7.0 = _1.0;
_4 = [22244_u16,23880_u16,27743_u16,26616_u16,32541_u16,15280_u16];
_13 = [_14];
_16 = [(-4155900401881537724_i64),(-947225528253503936_i64),5436643990402861960_i64,8533352261882118871_i64,(-6318001032197399552_i64),1896105031793693641_i64,(-8693801053003825241_i64)];
_11 = core::ptr::addr_of_mut!((*_11));
_7.0 = _9.2.0;
Goto(bb5)
}
bb11 = {
_11 = core::ptr::addr_of_mut!(_16);
_2 = [117_i8,(-45_i8),(-36_i8),(-47_i8)];
_4 = [50501_u16,22548_u16,10343_u16,21297_u16,20232_u16,14917_u16];
_15 = [(-10706_i16),1052_i16];
Goto(bb4)
}
bb12 = {
_8 = _3;
_14 = (*_6) & (*_6);
_15 = [621_i16,(-28438_i16)];
_10 = [144_u8,172_u8,81_u8,62_u8,62_u8,235_u8,44_u8];
_12 = [2321646813199204348_i64,(-1645435513296650633_i64),2201656734615820206_i64,6736351768955633320_i64];
_9.2.0 = _7.0;
_7.0 = _1.0;
_1.0 = _7.0;
Goto(bb3)
}
bb13 = {
_6 = core::ptr::addr_of_mut!(RET);
_8 = [21820_i16,(-17201_i16)];
_3 = _8;
_3 = [28009_i16,11537_i16];
(*_6) = true;
_9.3 = core::ptr::addr_of_mut!((*_6));
(*_6) = _1.0 != _7.0;
_9.1 = &_1.0;
_1.0 = _9.2.0;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
_28 = 13_u8 as f64;
_14 = RET;
_13 = [RET];
_7 = (_17.2.0,);
_19 = (_17.1, 13914134715460257021_u64);
_29 = [9109587415592620306_i64,(-4355915944189383819_i64),(-202665401832975572_i64),(-426723544933187693_i64),(-8613857714864377275_i64),(-219521332539141400_i64),593783992637660950_i64];
_3 = [(-8238_i16),23730_i16];
_11 = core::ptr::addr_of_mut!(_29);
_9.2 = (_1.0,);
_19 = (_17.1, 1070589119864733844_u64);
_17.3.2 = !3591023177_u32;
_28 = _19.0 as f64;
RET = !(*_6);
_17.3.0.0 = [(-6403_i16),(-18159_i16)];
_22.3 = (-1931998965_i32) & 384119259_i32;
_6 = Move(_9.3);
_19 = (_17.1, 7594589258532758013_u64);
_17.2 = (_9.2.0,);
Goto(bb16)
}
bb16 = {
Call(_33 = dump_var(13_usize, 15_usize, Move(_15), 8_usize, Move(_8), 3_usize, Move(_3), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(13_usize, 2_usize, Move(_2), 12_usize, Move(_12), 10_usize, Move(_10), 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: bool,mut _2: bool,mut _3: [i8; 4],mut _4: [i16; 2],mut _5: *mut bool,mut _6: [i8; 4],mut _7: &'static char,mut _8: [i16; 2],mut _9: [i8; 4],mut _10: [u16; 6],mut _11: [u16; 6],mut _12: [u16; 6]) -> *mut bool {
mir! {
type RET = *mut bool;
let _13: i64;
let _14: (&'static Adt35, [u16; 6], Adt40, *const (u16,));
let _15: [u16; 6];
let _16: &'static mut *const char;
let _17: (u16, u64);
let _18: (u16, u64);
let _19: usize;
let _20: *const isize;
let _21: &'static Adt35;
let _22: bool;
let _23: char;
let _24: [i64; 4];
let _25: i16;
let _26: f64;
let _27: [bool; 1];
let _28: &'static mut &'static mut *const char;
let _29: Adt35;
let _30: u64;
let _31: ([i64; 4], [u64; 7], [u64; 7]);
let _32: &'static mut &'static char;
let _33: &'static u8;
let _34: *const char;
let _35: ();
let _36: ();
{
_2 = _1 & _1;
_2 = _1 | _1;
_8 = _4;
RET = Move(_5);
_9 = [53_i8,(-41_i8),31_i8,10_i8];
_5 = core::ptr::addr_of_mut!(_2);
_2 = _1 >= _1;
_10 = [34938_u16,51349_u16,25472_u16,58482_u16,26707_u16,7193_u16];
_3 = [(-78_i8),(-73_i8),10_i8,(-36_i8)];
_12 = _11;
_6 = [7_i8,116_i8,(-101_i8),108_i8];
_12 = [38540_u16,22614_u16,19427_u16,50495_u16,19900_u16,57001_u16];
_8 = _4;
_9 = [13_i8,(-102_i8),(-45_i8),14_i8];
_8 = [13503_i16,5251_i16];
RET = Move(_5);
_2 = _1;
RET = core::ptr::addr_of_mut!(_2);
_1 = (*RET) == (*RET);
Goto(bb1)
}
bb1 = {
_3 = [125_i8,(-78_i8),125_i8,127_i8];
_10 = [42736_u16,10551_u16,12415_u16,33860_u16,55041_u16,15389_u16];
_9 = [52_i8,39_i8,(-117_i8),(-45_i8)];
_1 = (*RET);
RET = core::ptr::addr_of_mut!((*RET));
Goto(bb2)
}
bb2 = {
_10 = _12;
_10 = [45896_u16,63714_u16,60372_u16,30365_u16,47201_u16,41374_u16];
_1 = _2 | (*RET);
RET = core::ptr::addr_of_mut!((*RET));
_6 = _9;
_2 = _1 != _1;
(*RET) = !_1;
(*RET) = _1 < _1;
_4 = [20914_i16,31156_i16];
_12 = [13438_u16,12199_u16,40610_u16,45292_u16,45028_u16,17556_u16];
RET = core::ptr::addr_of_mut!(_1);
_5 = core::ptr::addr_of_mut!(_1);
(*RET) = _2 >= _2;
RET = core::ptr::addr_of_mut!((*RET));
_3 = _9;
_13 = 6921952550791005308_i64 ^ (-5307632051606536314_i64);
_3 = [(-26_i8),(-123_i8),(-48_i8),32_i8];
(*RET) = !_2;
RET = Move(_5);
_8 = _4;
_10 = _12;
_5 = core::ptr::addr_of_mut!(_2);
_4 = [5024_i16,(-7251_i16)];
_10 = _11;
_5 = Move(RET);
RET = Move(_5);
_11 = [63685_u16,31896_u16,6434_u16,11912_u16,55350_u16,53089_u16];
_10 = [8143_u16,20948_u16,49912_u16,41275_u16,48451_u16,64980_u16];
Goto(bb3)
}
bb3 = {
_9 = _6;
_3 = _6;
_1 = !_2;
_13 = -3046180061193315602_i64;
RET = core::ptr::addr_of_mut!(_1);
(*RET) = !_2;
_5 = core::ptr::addr_of_mut!(_1);
_1 = !_2;
_11 = _12;
RET = Move(_5);
_5 = core::ptr::addr_of_mut!(_1);
_14.1 = [13288_u16,38706_u16,2739_u16,40197_u16,9929_u16,54172_u16];
_15 = [51364_u16,55144_u16,19788_u16,9673_u16,36010_u16,43086_u16];
_5 = Move(RET);
_10 = [12768_u16,44072_u16,61860_u16,1567_u16,55444_u16,57742_u16];
_11 = [29006_u16,16584_u16,41826_u16,30488_u16,12596_u16,57558_u16];
_8 = _4;
_2 = _1;
RET = core::ptr::addr_of_mut!(_1);
RET = core::ptr::addr_of_mut!((*RET));
_13 = (-3597107006731465276_i64);
RET = core::ptr::addr_of_mut!(_1);
(*RET) = _2;
RET = core::ptr::addr_of_mut!((*RET));
_15 = [3054_u16,17252_u16,9832_u16,43983_u16,51847_u16,30038_u16];
(*RET) = _2 & _2;
(*RET) = _2;
_1 = _2;
(*RET) = _2;
Goto(bb4)
}
bb4 = {
(*RET) = _2;
_17 = (15552_u16, 5033615256714829710_u64);
(*RET) = _2;
_2 = !(*RET);
_17.0 = 177_u8 as u16;
_18 = _17;
_11 = _15;
_4 = [24910_i16,9828_i16];
_17.0 = 112839461006536498800662990983434627019_i128 as u16;
_1 = !_2;
_18.1 = 2773131531_u32 as u64;
(*RET) = _13 >= _13;
_9 = _3;
Goto(bb5)
}
bb5 = {
_11 = _15;
(*RET) = !_2;
_5 = Move(RET);
_17.1 = (-1380121687_i32) as u64;
_8 = [(-13828_i16),25754_i16];
_2 = _1 | _1;
Goto(bb6)
}
bb6 = {
RET = core::ptr::addr_of_mut!(_2);
_19 = 39_i8 as usize;
_18.0 = (-44_isize) as u16;
(*RET) = !_1;
_18.1 = !_17.1;
_1 = (*RET) >= _2;
_18 = _17;
_10 = [_17.0,_17.0,_18.0,_17.0,_18.0,_17.0];
_12 = _11;
match _13 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
340282366920938463459777500425036746180 => bb10,
_ => bb9
}
}
bb7 = {
_11 = _15;
(*RET) = !_2;
_5 = Move(RET);
_17.1 = (-1380121687_i32) as u64;
_8 = [(-13828_i16),25754_i16];
_2 = _1 | _1;
Goto(bb6)
}
bb8 = {
(*RET) = _2;
_17 = (15552_u16, 5033615256714829710_u64);
(*RET) = _2;
_2 = !(*RET);
_17.0 = 177_u8 as u16;
_18 = _17;
_11 = _15;
_4 = [24910_i16,9828_i16];
_17.0 = 112839461006536498800662990983434627019_i128 as u16;
_1 = !_2;
_18.1 = 2773131531_u32 as u64;
(*RET) = _13 >= _13;
_9 = _3;
Goto(bb5)
}
bb9 = {
_9 = _6;
_3 = _6;
_1 = !_2;
_13 = -3046180061193315602_i64;
RET = core::ptr::addr_of_mut!(_1);
(*RET) = !_2;
_5 = core::ptr::addr_of_mut!(_1);
_1 = !_2;
_11 = _12;
RET = Move(_5);
_5 = core::ptr::addr_of_mut!(_1);
_14.1 = [13288_u16,38706_u16,2739_u16,40197_u16,9929_u16,54172_u16];
_15 = [51364_u16,55144_u16,19788_u16,9673_u16,36010_u16,43086_u16];
_5 = Move(RET);
_10 = [12768_u16,44072_u16,61860_u16,1567_u16,55444_u16,57742_u16];
_11 = [29006_u16,16584_u16,41826_u16,30488_u16,12596_u16,57558_u16];
_8 = _4;
_2 = _1;
RET = core::ptr::addr_of_mut!(_1);
RET = core::ptr::addr_of_mut!((*RET));
_13 = (-3597107006731465276_i64);
RET = core::ptr::addr_of_mut!(_1);
(*RET) = _2;
RET = core::ptr::addr_of_mut!((*RET));
_15 = [3054_u16,17252_u16,9832_u16,43983_u16,51847_u16,30038_u16];
(*RET) = _2 & _2;
(*RET) = _2;
_1 = _2;
(*RET) = _2;
Goto(bb4)
}
bb10 = {
_22 = (*RET) | _2;
_10 = [_17.0,_17.0,_18.0,_18.0,_17.0,_17.0];
(*RET) = _22 != _1;
_18.0 = _17.0;
_17.0 = 137_u8 as u16;
_10 = _11;
_13 = _19 as i64;
_6 = [(-61_i8),(-66_i8),65_i8,(-38_i8)];
_2 = _1 < _1;
_11 = _14.1;
_13 = (-5860992236743622065_i64);
(*RET) = _1;
_18.0 = !_17.0;
_3 = [29_i8,36_i8,(-97_i8),21_i8];
_10 = _11;
_11 = [_17.0,_18.0,_18.0,_18.0,_17.0,_17.0];
_5 = Move(RET);
_12 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_8 = [3137_i16,(-9820_i16)];
_23 = '\u{72854}';
_6 = [104_i8,18_i8,(-60_i8),81_i8];
_24 = [_13,_13,_13,_13];
_8 = _4;
Goto(bb11)
}
bb11 = {
_18 = (_17.0, _17.1);
_2 = _1;
_26 = 126_isize as f64;
_18.0 = _26 as u16;
RET = core::ptr::addr_of_mut!(_1);
_27 = [(*RET)];
_23 = '\u{266b4}';
_1 = !_2;
_17 = (_18.0, _18.1);
_29 = Adt35::Variant1 { fld0: _13,fld1: _26,fld2: 1695682130_u32 };
match Field::<i64>(Variant(_29, 1), 0) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb5,
5 => bb9,
6 => bb12,
340282366920938463457513615195024589391 => bb14,
_ => bb13
}
}
bb12 = {
_22 = (*RET) | _2;
_10 = [_17.0,_17.0,_18.0,_18.0,_17.0,_17.0];
(*RET) = _22 != _1;
_18.0 = _17.0;
_17.0 = 137_u8 as u16;
_10 = _11;
_13 = _19 as i64;
_6 = [(-61_i8),(-66_i8),65_i8,(-38_i8)];
_2 = _1 < _1;
_11 = _14.1;
_13 = (-5860992236743622065_i64);
(*RET) = _1;
_18.0 = !_17.0;
_3 = [29_i8,36_i8,(-97_i8),21_i8];
_10 = _11;
_11 = [_17.0,_18.0,_18.0,_18.0,_17.0,_17.0];
_5 = Move(RET);
_12 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_8 = [3137_i16,(-9820_i16)];
_23 = '\u{72854}';
_6 = [104_i8,18_i8,(-60_i8),81_i8];
_24 = [_13,_13,_13,_13];
_8 = _4;
Goto(bb11)
}
bb13 = {
RET = core::ptr::addr_of_mut!(_2);
_19 = 39_i8 as usize;
_18.0 = (-44_isize) as u16;
(*RET) = !_1;
_18.1 = !_17.1;
_1 = (*RET) >= _2;
_18 = _17;
_10 = [_17.0,_17.0,_18.0,_17.0,_18.0,_17.0];
_12 = _11;
match _13 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
340282366920938463459777500425036746180 => bb10,
_ => bb9
}
}
bb14 = {
RET = Move(_5);
_7 = &_23;
_5 = core::ptr::addr_of_mut!(_22);
place!(Field::<i64>(Variant(_29, 1), 0)) = !_13;
_18.0 = _17.0;
_18.0 = _17.0 + _17.0;
_31.1 = [_17.1,_18.1,_17.1,_18.1,_17.1,_17.1,_18.1];
_24 = [_13,Field::<i64>(Variant(_29, 1), 0),_13,Field::<i64>(Variant(_29, 1), 0)];
_30 = !_18.1;
_23 = '\u{ffe2c}';
_19 = _18.1 as usize;
_10 = _15;
_2 = _1 == (*_5);
_26 = -Field::<f64>(Variant(_29, 1), 1);
_9 = _6;
_13 = Field::<i64>(Variant(_29, 1), 0) >> _19;
_18.0 = _17.0 << Field::<i64>(Variant(_29, 1), 0);
_18.0 = !_17.0;
_32 = &mut _7;
_17 = (_18.0, _18.1);
_10 = [_17.0,_17.0,_18.0,_18.0,_18.0,_18.0];
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(14_usize, 19_usize, Move(_19), 2_usize, Move(_2), 23_usize, Move(_23), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(14_usize, 17_usize, Move(_17), 24_usize, Move(_24), 11_usize, Move(_11), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(14_usize, 1_usize, Move(_1), 13_usize, Move(_13), 36_usize, _36, 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [i16; 2]) -> [i8; 4] {
mir! {
type RET = [i8; 4];
let _2: [i8; 4];
let _3: char;
let _4: bool;
let _5: isize;
let _6: u16;
let _7: &'static *const isize;
let _8: bool;
let _9: Adt56;
let _10: [u64; 2];
let _11: Adt34;
let _12: [i128; 2];
let _13: (Adt35, &'static char, (char,), *mut bool);
let _14: (Adt35, &'static char, (char,), *mut bool);
let _15: isize;
let _16: [i64; 7];
let _17: f32;
let _18: isize;
let _19: isize;
let _20: *const &'static *const ([i16; 2],);
let _21: Adt56;
let _22: [i64; 4];
let _23: &'static mut *mut bool;
let _24: i32;
let _25: f64;
let _26: (char,);
let _27: f64;
let _28: &'static mut (([i16; 2],), Adt31, u32);
let _29: &'static *const isize;
let _30: i32;
let _31: i64;
let _32: char;
let _33: &'static mut (char,);
let _34: u16;
let _35: (u16,);
let _36: Adt40;
let _37: u16;
let _38: &'static mut *const (Adt35, &'static char, (char,), *mut bool);
let _39: isize;
let _40: char;
let _41: f32;
let _42: char;
let _43: (u16, u64);
let _44: ();
let _45: ();
{
RET = [74_i8,(-86_i8),(-48_i8),45_i8];
RET = [(-77_i8),43_i8,46_i8,(-62_i8)];
Goto(bb1)
}
bb1 = {
RET = [43_i8,(-89_i8),(-35_i8),(-92_i8)];
_1 = [(-853_i16),28062_i16];
RET = [(-42_i8),95_i8,(-53_i8),(-31_i8)];
RET = [111_i8,118_i8,82_i8,99_i8];
RET = [(-116_i8),(-103_i8),(-57_i8),16_i8];
_1 = [6888_i16,(-14524_i16)];
_2 = [125_i8,58_i8,118_i8,(-116_i8)];
_6 = 56413_u16;
_3 = '\u{10f8fa}';
_5 = (-25_isize);
_6 = !27019_u16;
_2 = [(-14_i8),76_i8,29_i8,(-84_i8)];
_3 = '\u{20d38}';
_8 = _3 < _3;
RET = [36_i8,(-3_i8),27_i8,115_i8];
_3 = '\u{221ca}';
_8 = !true;
_8 = _3 >= _3;
Goto(bb2)
}
bb2 = {
RET = [(-121_i8),92_i8,75_i8,(-98_i8)];
_10 = [8427039674555509922_u64,1689675393089999059_u64];
_5 = 606185594268397377039157567145472199_i128 as isize;
RET = [(-42_i8),22_i8,(-110_i8),(-103_i8)];
_2 = RET;
RET = [62_i8,33_i8,25_i8,43_i8];
_5 = _3 as isize;
RET = [(-100_i8),(-101_i8),94_i8,(-117_i8)];
_2 = [(-53_i8),(-64_i8),102_i8,78_i8];
_9 = Adt56::Variant0 { fld0: (-3895691470738011877_i64) };
place!(Field::<i64>(Variant(_9, 0), 0)) = (-4509284343692098842_i64) * (-5745648541663935779_i64);
_4 = _8 ^ _8;
_10 = [5010884849771259460_u64,14802615262154514986_u64];
_10 = [7572269205930354170_u64,14564163851192583395_u64];
RET = [(-44_i8),(-53_i8),79_i8,78_i8];
SetDiscriminant(_9, 1);
place!(Field::<*const *mut bool>(Variant(_9, 1), 4)) = core::ptr::addr_of!(place!(Field::<*mut bool>(Variant(_9, 1), 5)));
place!(Field::<*mut bool>(Variant(_9, 1), 5)) = core::ptr::addr_of_mut!(_8);
Goto(bb3)
}
bb3 = {
place!(Field::<i8>(Variant(_9, 1), 3)) = 41_i8 | (-7_i8);
_13.2 = (_3,);
_13.2 = (_3,);
place!(Field::<*const ([i16; 2],)>(Variant(_9, 1), 7)) = core::ptr::addr_of!(place!(Field::<([i16; 2],)>(Variant(_9, 1), 0)));
_4 = !_8;
_13.2 = (_3,);
Goto(bb4)
}
bb4 = {
_14.2.0 = _13.2.0;
_12 = [(-165813989766109038799331483343435679045_i128),(-13115249445053649445777277671541710941_i128)];
_14.1 = &_13.2.0;
_13.1 = Move(_14.1);
_3 = _13.2.0;
_14.1 = &_3;
_11 = Adt34::Variant3 { fld0: _8,fld1: 3805444739_u32 };
_3 = _13.2.0;
_15 = _8 as isize;
place!(Field::<([i16; 2],)>(Variant(_9, 1), 0)).0 = _1;
_13.3 = Move(Field::<*mut bool>(Variant(_9, 1), 5));
_13.2.0 = _3;
_13.3 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_11, 3), 0)));
place!(Field::<*const *mut bool>(Variant(_9, 1), 4)) = core::ptr::addr_of!(_14.3);
place!(Field::<*mut bool>(Variant(_9, 1), 5)) = Move(_13.3);
_5 = _15;
_14.2 = (_13.2.0,);
_14.1 = &_13.2.0;
Goto(bb5)
}
bb5 = {
_13.3 = Move(Field::<*mut bool>(Variant(_9, 1), 5));
_3 = _14.2.0;
place!(Field::<[i8; 4]>(Variant(_9, 1), 1)) = [Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3)];
_13.2.0 = _3;
place!(Field::<([i16; 2],)>(Variant(_9, 1), 0)) = (_1,);
_13.2 = _14.2;
place!(Field::<*mut bool>(Variant(_9, 1), 5)) = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_11, 3), 0)));
_4 = !Field::<bool>(Variant(_11, 3), 0);
Goto(bb6)
}
bb6 = {
_8 = !_4;
_12 = [61737915682761591498567575872116237303_i128,152923121845607450632618170268957705351_i128];
_6 = (-2872724998204015079_i64) as u16;
_14.3 = Move(_13.3);
RET = [Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3)];
_16 = [5102381751982868485_i64,(-2480084653813005613_i64),3693062928426068322_i64,6696634383196592783_i64,4091566488989292851_i64,8313120501664747571_i64,3742709199336303499_i64];
_11 = Adt34::Variant3 { fld0: _4,fld1: 2190992756_u32 };
_22 = [(-1190550381588261364_i64),(-9000495613258983196_i64),(-5135315429295889478_i64),2152829404490048118_i64];
place!(Field::<bool>(Variant(_11, 3), 0)) = _4 ^ _8;
place!(Field::<[i16; 2]>(Variant(_9, 1), 2)) = Field::<([i16; 2],)>(Variant(_9, 1), 0).0;
place!(Field::<([i16; 2],)>(Variant(_9, 1), 0)) = (Field::<[i16; 2]>(Variant(_9, 1), 2),);
_6 = 3665794915847090871_usize as u16;
place!(Field::<u32>(Variant(_11, 3), 1)) = 3058398633_u32;
_19 = -_5;
_22 = [(-7230376277280580742_i64),9081911719446358963_i64,(-158861664021930726_i64),(-3257224851111161362_i64)];
_1 = [3589_i16,(-23046_i16)];
_22 = [(-8766684972855340491_i64),(-5629799351789316433_i64),2752908533537044942_i64,1696598892407571268_i64];
RET = _2;
RET = [Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3),Field::<i8>(Variant(_9, 1), 3)];
_15 = _5;
place!(Field::<([i16; 2],)>(Variant(_9, 1), 0)) = (_1,);
Goto(bb7)
}
bb7 = {
SetDiscriminant(_11, 1);
RET = _2;
_14.2 = (_3,);
place!(Field::<[i8; 4]>(Variant(_9, 1), 1)) = RET;
place!(Field::<i8>(Variant(_9, 1), 3)) = (-57_i8) - 67_i8;
place!(Field::<*const isize>(Variant(_11, 1), 1)) = core::ptr::addr_of!(_18);
_14.1 = &_3;
_13.2.0 = _3;
place!(Field::<*const isize>(Variant(_11, 1), 1)) = core::ptr::addr_of!(_15);
place!(Field::<*const i128>(Variant(_9, 1), 6)) = core::ptr::addr_of!(place!(Field::<i128>(Variant(_11, 1), 2)));
_4 = !_8;
place!(Field::<i128>(Variant(_11, 1), 2)) = !54323601077077213757620921834415757297_i128;
_14.2 = (_3,);
_21 = Adt56::Variant0 { fld0: 7133611258000468934_i64 };
_14.1 = &_14.2.0;
_23 = &mut place!(Field::<*mut bool>(Variant(_9, 1), 5));
_14.1 = &_3;
place!(Field::<[i16; 2]>(Variant(_9, 1), 2)) = [(-12387_i16),21235_i16];
Goto(bb8)
}
bb8 = {
_9 = Adt56::Variant0 { fld0: 109625350092896485_i64 };
_13.3 = core::ptr::addr_of_mut!(_4);
Call(place!(Field::<i64>(Variant(_21, 0), 0)) = core::intrinsics::transmute(_19), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_26.0 = _3;
_17 = (-82_i8) as f32;
_31 = -Field::<i64>(Variant(_21, 0), 0);
_10 = [17741446681186791620_u64,4547787856013922571_u64];
_13.2 = (_14.2.0,);
_2 = RET;
Goto(bb10)
}
bb10 = {
SetDiscriminant(_21, 0);
_7 = &place!(Field::<*const isize>(Variant(_11, 1), 1));
_29 = &(*_7);
place!(Field::<f32>(Variant(_11, 1), 0)) = 16315565436667951063_u64 as f32;
_31 = 5234452925988523343_i64;
_22 = [_31,_31,_31,_31];
_14.2 = (_3,);
_30 = (-1592022293_i32);
_14.1 = &_13.2.0;
_34 = _6 | _6;
_24 = _30;
_35 = (_34,);
place!(Field::<*const isize>(Variant(_11, 1), 1)) = core::ptr::addr_of!(_18);
Call(_24 = fn16(_16, _14.2.0, RET, _3, RET, _3, _10, RET, _35, _5, _1, Field::<i128>(Variant(_11, 1), 2)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_1 = [26564_i16,23664_i16];
_2 = RET;
_13.3 = Move(_14.3);
RET = _2;
_11 = Adt34::Variant3 { fld0: _4,fld1: 3476704527_u32 };
Goto(bb12)
}
bb12 = {
_24 = _30 ^ _30;
_9 = Adt56::Variant0 { fld0: _31 };
place!(Field::<i64>(Variant(_21, 0), 0)) = _31 | _31;
_14.2.0 = _13.2.0;
Goto(bb13)
}
bb13 = {
_33 = &mut _26;
_25 = _17 as f64;
_1 = [3662_i16,6145_i16];
(*_33) = _13.2;
_15 = _19;
_14.1 = &_3;
SetDiscriminant(_9, 1);
_14.3 = Move(_13.3);
_6 = _19 as u16;
_6 = !_35.0;
_14.3 = core::ptr::addr_of_mut!(_8);
_15 = !_5;
place!(Field::<[i16; 2]>(Variant(_9, 1), 2)) = _1;
place!(Field::<u32>(Variant(_11, 3), 1)) = 4075483142_u32 + 3120755966_u32;
_40 = _13.2.0;
place!(Field::<*const ([i16; 2],)>(Variant(_9, 1), 7)) = core::ptr::addr_of!(place!(Field::<([i16; 2],)>(Variant(_9, 1), 0)));
_21 = Adt56::Variant0 { fld0: _31 };
_37 = _6;
_9 = Adt56::Variant0 { fld0: _31 };
_30 = _24;
_16 = [_31,Field::<i64>(Variant(_9, 0), 0),Field::<i64>(Variant(_21, 0), 0),Field::<i64>(Variant(_21, 0), 0),Field::<i64>(Variant(_21, 0), 0),Field::<i64>(Variant(_21, 0), 0),_31];
_4 = _37 > _35.0;
_31 = Field::<i64>(Variant(_9, 0), 0);
_10 = [16965593383141702854_u64,2442538688980955383_u64];
place!(Field::<i64>(Variant(_21, 0), 0)) = Field::<i64>(Variant(_9, 0), 0);
match Field::<i64>(Variant(_21, 0), 0) {
0 => bb10,
1 => bb5,
2 => bb3,
3 => bb4,
4 => bb14,
5234452925988523343 => bb16,
_ => bb15
}
}
bb14 = {
_9 = Adt56::Variant0 { fld0: 109625350092896485_i64 };
_13.3 = core::ptr::addr_of_mut!(_4);
Call(place!(Field::<i64>(Variant(_21, 0), 0)) = core::intrinsics::transmute(_19), ReturnTo(bb9), UnwindUnreachable())
}
bb15 = {
RET = [(-121_i8),92_i8,75_i8,(-98_i8)];
_10 = [8427039674555509922_u64,1689675393089999059_u64];
_5 = 606185594268397377039157567145472199_i128 as isize;
RET = [(-42_i8),22_i8,(-110_i8),(-103_i8)];
_2 = RET;
RET = [62_i8,33_i8,25_i8,43_i8];
_5 = _3 as isize;
RET = [(-100_i8),(-101_i8),94_i8,(-117_i8)];
_2 = [(-53_i8),(-64_i8),102_i8,78_i8];
_9 = Adt56::Variant0 { fld0: (-3895691470738011877_i64) };
place!(Field::<i64>(Variant(_9, 0), 0)) = (-4509284343692098842_i64) * (-5745648541663935779_i64);
_4 = _8 ^ _8;
_10 = [5010884849771259460_u64,14802615262154514986_u64];
_10 = [7572269205930354170_u64,14564163851192583395_u64];
RET = [(-44_i8),(-53_i8),79_i8,78_i8];
SetDiscriminant(_9, 1);
place!(Field::<*const *mut bool>(Variant(_9, 1), 4)) = core::ptr::addr_of!(place!(Field::<*mut bool>(Variant(_9, 1), 5)));
place!(Field::<*mut bool>(Variant(_9, 1), 5)) = core::ptr::addr_of_mut!(_8);
Goto(bb3)
}
bb16 = {
_13.3 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_11, 3), 0)));
_31 = _24 as i64;
_26.0 = _40;
_26.0 = _13.2.0;
_3 = _14.2.0;
_14.2.0 = _26.0;
_18 = !_5;
_14.2.0 = _3;
_27 = _25;
SetDiscriminant(_11, 0);
_25 = _27 * _27;
_39 = _18;
_16 = [_31,_31,_31,Field::<i64>(Variant(_21, 0), 0),Field::<i64>(Variant(_21, 0), 0),Field::<i64>(Variant(_9, 0), 0),Field::<i64>(Variant(_9, 0), 0)];
_42 = _26.0;
_14.3 = Move(_13.3);
_35.0 = 12255968109335329657_u64 as u16;
place!(Field::<i64>(Variant(_9, 0), 0)) = -_31;
Goto(bb17)
}
bb17 = {
Call(_44 = dump_var(15_usize, 37_usize, Move(_37), 5_usize, Move(_5), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(15_usize, 34_usize, Move(_34), 12_usize, Move(_12), 40_usize, Move(_40), 35_usize, Move(_35)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_44 = dump_var(15_usize, 18_usize, Move(_18), 22_usize, Move(_22), 42_usize, Move(_42), 39_usize, Move(_39)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [i64; 7],mut _2: char,mut _3: [i8; 4],mut _4: char,mut _5: [i8; 4],mut _6: char,mut _7: [u64; 2],mut _8: [i8; 4],mut _9: (u16,),mut _10: isize,mut _11: [i16; 2],mut _12: i128) -> i32 {
mir! {
type RET = i32;
let _13: &'static Adt35;
let _14: &'static char;
let _15: ([i16; 2],);
let _16: char;
let _17: isize;
let _18: bool;
let _19: i64;
let _20: *mut u16;
let _21: &'static Adt30;
let _22: bool;
let _23: &'static mut &'static char;
let _24: (([i16; 2],), ([i16; 2],));
let _25: [u8; 7];
let _26: i128;
let _27: f64;
let _28: isize;
let _29: [i64; 7];
let _30: Adt75;
let _31: i16;
let _32: bool;
let _33: (([i16; 2],), ([i16; 2],));
let _34: f64;
let _35: [u64; 7];
let _36: &'static *const isize;
let _37: [u8; 7];
let _38: f32;
let _39: ();
let _40: ();
{
_12 = 131907047558377575837462964524385591025_i128 & 137241180118269894662278789967340049614_i128;
_2 = _6;
_11 = [(-17684_i16),(-4050_i16)];
_9 = (1445_u16,);
RET = 15720711723268306769_u64 as i32;
_12 = -165621775989161713066432398255082772883_i128;
match _9.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
1445 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5 = [(-57_i8),(-21_i8),59_i8,70_i8];
_8 = [41_i8,13_i8,(-47_i8),(-123_i8)];
_12 = (-48593784229018885448541666979126627739_i128) * (-62497943114187593921676436953601237548_i128);
_14 = &_4;
_5 = [0_i8,77_i8,19_i8,(-125_i8)];
_11 = [(-15866_i16),(-12771_i16)];
_14 = &(*_14);
_7 = [2643724071332675973_u64,12078438597700533129_u64];
_2 = (*_14);
_7 = [12876624623063059082_u64,8867250050818156713_u64];
_15 = (_11,);
_11 = [(-14628_i16),(-10698_i16)];
_1 = [(-5290427014699991490_i64),(-5572753247255409368_i64),(-5787556147029927347_i64),(-1215149945110522972_i64),(-4390161314420888011_i64),(-6471985984220781356_i64),(-7277706394684476051_i64)];
_3 = _8;
_14 = &(*_14);
_9 = (35786_u16,);
_9 = (60763_u16,);
_9.0 = 59180_u16 * 51508_u16;
_14 = &_6;
_10 = (-39_isize);
_3 = [(-11_i8),125_i8,(-20_i8),16_i8];
_6 = _2;
_3 = _8;
_6 = _4;
_10 = !9223372036854775807_isize;
_15 = (_11,);
_16 = _2;
RET = !963774623_i32;
Call(_10 = core::intrinsics::bswap((-58_isize)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = _9.0 as i32;
_19 = 349218073347887931_i64;
_7 = [2698383513497224874_u64,4468919108556561445_u64];
_17 = _10;
_16 = _4;
_23 = &mut _14;
_18 = !true;
_2 = _6;
_2 = _16;
_2 = _6;
_5 = [51_i8,123_i8,(-63_i8),100_i8];
_5 = [17_i8,14_i8,102_i8,(-20_i8)];
_24.0.0 = _15.0;
match _19 {
0 => bb3,
349218073347887931 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_12 = -25831384517557123109049609023742233835_i128;
_4 = _16;
_3 = _8;
_24.1 = _24.0;
_1 = [_19,_19,_19,_19,_19,_19,_19];
_11 = [7241_i16,(-28944_i16)];
_16 = _2;
_15 = (_24.1.0,);
_24 = (_15, _15);
_11 = [(-2249_i16),(-10075_i16)];
_9.0 = 16868_u16 >> RET;
_26 = _12;
_27 = _19 as f64;
_28 = _17;
_17 = RET as isize;
_24.1 = (_15.0,);
_12 = _26;
_5 = [(-19_i8),82_i8,(-98_i8),(-74_i8)];
_7 = [13601040032576552441_u64,3851657800151901512_u64];
_16 = _4;
_2 = _4;
Goto(bb11)
}
bb11 = {
_7 = [8475415897018028449_u64,17319340831115813828_u64];
_29 = [_19,_19,_19,_19,_19,_19,_19];
_1 = [_19,_19,_19,_19,_19,_19,_19];
_29 = [_19,_19,_19,_19,_19,_19,_19];
_3 = [94_i8,(-115_i8),22_i8,(-126_i8)];
_8 = [75_i8,(-30_i8),(-42_i8),123_i8];
_24.1 = (_11,);
_2 = _16;
_7 = [6451871866781131596_u64,5967989120074545708_u64];
_15 = (_24.1.0,);
_25 = [129_u8,254_u8,72_u8,229_u8,177_u8,187_u8,171_u8];
_17 = _28 >> _10;
_7 = [16577810693516959495_u64,18111070157226763209_u64];
_15 = (_24.0.0,);
_22 = _4 > _4;
_7 = [14461651742142860816_u64,2974477218980787008_u64];
_10 = !_28;
_24.0.0 = _24.1.0;
_16 = _2;
_33.0 = (_24.0.0,);
_6 = _4;
match _19 {
0 => bb12,
1 => bb13,
2 => bb14,
349218073347887931 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
RET = _9.0 as i32;
_19 = 349218073347887931_i64;
_7 = [2698383513497224874_u64,4468919108556561445_u64];
_17 = _10;
_16 = _4;
_23 = &mut _14;
_18 = !true;
_2 = _6;
_2 = _16;
_2 = _6;
_5 = [51_i8,123_i8,(-63_i8),100_i8];
_5 = [17_i8,14_i8,102_i8,(-20_i8)];
_24.0.0 = _15.0;
match _19 {
0 => bb3,
349218073347887931 => bb10,
_ => bb9
}
}
bb15 = {
Return()
}
bb16 = {
_12 = _26 << _17;
_33.1.0 = [(-14313_i16),10872_i16];
_33.0 = (_24.1.0,);
_31 = _9.0 as i16;
_24.0 = (_11,);
_29 = _1;
_28 = _17;
_27 = 145_u8 as f64;
_24 = _33;
_24.0.0 = [_31,_31];
_20 = core::ptr::addr_of_mut!(_9.0);
_15 = (_24.1.0,);
_33 = (_15, _15);
Goto(bb17)
}
bb17 = {
Call(_39 = dump_var(16_usize, 10_usize, Move(_10), 11_usize, Move(_11), 8_usize, Move(_8), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(16_usize, 22_usize, Move(_22), 1_usize, Move(_1), 19_usize, Move(_19), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_39 = dump_var(16_usize, 5_usize, Move(_5), 26_usize, Move(_26), 16_usize, Move(_16), 4_usize, Move(_4)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: *mut u16,mut _2: bool,mut _3: char,mut _4: [i8; 4],mut _5: bool,mut _6: bool,mut _7: *mut bool,mut _8: isize,mut _9: [u16; 6],mut _10: u16) -> isize {
mir! {
type RET = isize;
let _11: f64;
let _12: (u16, u64);
let _13: f64;
let _14: f64;
let _15: i8;
let _16: isize;
let _17: Adt56;
let _18: char;
let _19: bool;
let _20: *mut &'static mut &'static mut *const char;
let _21: isize;
let _22: *mut u16;
let _23: f64;
let _24: u32;
let _25: u64;
let _26: &'static mut (char,);
let _27: [u64; 7];
let _28: i128;
let _29: bool;
let _30: isize;
let _31: [u64; 2];
let _32: isize;
let _33: [u8; 7];
let _34: f32;
let _35: ();
let _36: ();
{
_12 = (_10, 1579007350532228289_u64);
_11 = (-690942393390000686_i64) as f64;
_3 = '\u{fb669}';
_3 = '\u{99b2f}';
_2 = _5;
_10 = _12.0 << _12.0;
_4 = [(-12_i8),90_i8,126_i8,(-104_i8)];
RET = _8 & _8;
_6 = !_2;
Call(_13 = fn18(Move(_7), _11, _12.1, Move(_1), _2, _4, _6, _2, _6, _6, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12.0 = !_10;
_10 = !_12.0;
_5 = _6;
_9 = [_12.0,_12.0,_10,_12.0,_12.0,_12.0];
_9 = [_12.0,_10,_10,_12.0,_10,_10];
_1 = core::ptr::addr_of_mut!(_12.0);
_3 = '\u{dd57a}';
_10 = _12.1 as u16;
_15 = 16_i8 >> _12.1;
_12.1 = !279464638913315277_u64;
_12.0 = !_10;
_7 = core::ptr::addr_of_mut!(_6);
(*_1) = _10;
_4 = [_15,_15,_15,_15];
_13 = _11;
_19 = _6 & _6;
_6 = _5;
Goto(bb2)
}
bb2 = {
_13 = _11;
_7 = core::ptr::addr_of_mut!((*_7));
(*_7) = _19;
_14 = 30350_i16 as f64;
_2 = (*_7);
_4 = [_15,_15,_15,_15];
_11 = _13 * _14;
_12.0 = _10;
(*_1) = _10;
(*_7) = _5 | _19;
_16 = -RET;
_12.1 = !13407252992333448720_u64;
_19 = _6 | (*_7);
Goto(bb3)
}
bb3 = {
RET = _16;
_9 = [_12.0,(*_1),(*_1),(*_1),(*_1),(*_1)];
_4 = [_15,_15,_15,_15];
_21 = RET;
_3 = '\u{da747}';
(*_7) = !_19;
_12 = (_10, 12197442646453196564_u64);
_12.1 = !3716206643719265049_u64;
(*_1) = _10 - _10;
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb4)
}
bb4 = {
_3 = '\u{c7f30}';
_12 = (_10, 15121392265087970021_u64);
_5 = _19 | (*_7);
_12.0 = !_10;
RET = !_21;
_22 = core::ptr::addr_of_mut!((*_1));
_13 = _11 * _11;
Goto(bb5)
}
bb5 = {
_17 = Adt56::Variant0 { fld0: (-7173619320003411299_i64) };
_12 = (_10, 2264712728380219879_u64);
_15 = (-1_i8) + 3_i8;
_22 = Move(_1);
_24 = 2605249579_u32;
RET = (-24700_i16) as isize;
_22 = core::ptr::addr_of_mut!(_10);
_9 = [_10,(*_22),_12.0,_10,_10,_10];
_1 = Move(_22);
_25 = _12.1;
match _12.1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
2264712728380219879 => bb13,
_ => bb12
}
}
bb6 = {
_3 = '\u{c7f30}';
_12 = (_10, 15121392265087970021_u64);
_5 = _19 | (*_7);
_12.0 = !_10;
RET = !_21;
_22 = core::ptr::addr_of_mut!((*_1));
_13 = _11 * _11;
Goto(bb5)
}
bb7 = {
RET = _16;
_9 = [_12.0,(*_1),(*_1),(*_1),(*_1),(*_1)];
_4 = [_15,_15,_15,_15];
_21 = RET;
_3 = '\u{da747}';
(*_7) = !_19;
_12 = (_10, 12197442646453196564_u64);
_12.1 = !3716206643719265049_u64;
(*_1) = _10 - _10;
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb4)
}
bb8 = {
_13 = _11;
_7 = core::ptr::addr_of_mut!((*_7));
(*_7) = _19;
_14 = 30350_i16 as f64;
_2 = (*_7);
_4 = [_15,_15,_15,_15];
_11 = _13 * _14;
_12.0 = _10;
(*_1) = _10;
(*_7) = _5 | _19;
_16 = -RET;
_12.1 = !13407252992333448720_u64;
_19 = _6 | (*_7);
Goto(bb3)
}
bb9 = {
_12.0 = !_10;
_10 = !_12.0;
_5 = _6;
_9 = [_12.0,_12.0,_10,_12.0,_12.0,_12.0];
_9 = [_12.0,_10,_10,_12.0,_10,_10];
_1 = core::ptr::addr_of_mut!(_12.0);
_3 = '\u{dd57a}';
_10 = _12.1 as u16;
_15 = 16_i8 >> _12.1;
_12.1 = !279464638913315277_u64;
_12.0 = !_10;
_7 = core::ptr::addr_of_mut!(_6);
(*_1) = _10;
_4 = [_15,_15,_15,_15];
_13 = _11;
_19 = _6 & _6;
_6 = _5;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_11 = _13 * _14;
place!(Field::<i64>(Variant(_17, 0), 0)) = 94_u8 as i64;
_22 = Move(_1);
_27 = [_25,_25,_12.1,_12.1,_12.1,_12.1,_12.1];
_15 = !(-31_i8);
_10 = _12.0;
_28 = _8 as i128;
_22 = core::ptr::addr_of_mut!(_10);
_18 = _3;
(*_22) = _12.0 + _12.0;
Goto(bb14)
}
bb14 = {
_30 = _16 << _8;
_7 = core::ptr::addr_of_mut!((*_7));
_28 = (-148479055376848876460691445261873469307_i128);
(*_7) = _5 > _2;
SetDiscriminant(_17, 0);
_13 = _11;
_9 = [(*_22),(*_22),(*_22),_12.0,(*_22),(*_22)];
place!(Field::<i64>(Variant(_17, 0), 0)) = 625993866230922000_i64;
SetDiscriminant(_17, 1);
place!(Field::<*const i128>(Variant(_17, 1), 6)) = core::ptr::addr_of!(_28);
place!(Field::<*mut bool>(Variant(_17, 1), 5)) = Move(_7);
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(17_usize, 3_usize, Move(_3), 19_usize, Move(_19), 6_usize, Move(_6), 28_usize, Move(_28)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(17_usize, 21_usize, Move(_21), 25_usize, Move(_25), 5_usize, Move(_5), 27_usize, Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(17_usize, 12_usize, Move(_12), 36_usize, _36, 36_usize, _36, 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: *mut bool,mut _2: f64,mut _3: u64,mut _4: *mut u16,mut _5: bool,mut _6: [i8; 4],mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool) -> f64 {
mir! {
type RET = f64;
let _12: (&'static Adt35, [u16; 6], Adt40, *const (u16,));
let _13: bool;
let _14: [u64; 2];
let _15: usize;
let _16: *const i128;
let _17: u64;
let _18: Adt35;
let _19: *mut (Adt35, &'static char, (char,), *mut bool);
let _20: bool;
let _21: *const Adt40;
let _22: Adt31;
let _23: Adt40;
let _24: char;
let _25: f32;
let _26: u8;
let _27: (([i16; 2],), ([i16; 2],));
let _28: ();
let _29: ();
{
_1 = core::ptr::addr_of_mut!(_9);
_5 = _10;
_9 = _10 != _7;
_5 = !_9;
(*_1) = _5;
_8 = _11 | (*_1);
_3 = 15775194895013658954_u64 * 12376621962732495884_u64;
(*_1) = _8;
_14 = [_3,_3];
_7 = _8;
_10 = !(*_1);
_7 = !_9;
_13 = _11 <= (*_1);
_15 = 15686299154950816320_usize;
Goto(bb1)
}
bb1 = {
_12.1 = [6949_u16,3472_u16,50783_u16,24562_u16,35462_u16,63035_u16];
RET = -_2;
_12.1 = [28560_u16,35184_u16,26710_u16,12300_u16,15458_u16,41383_u16];
_17 = _3 * _3;
_11 = _13 & (*_1);
_5 = !_11;
_18 = Adt35::Variant1 { fld0: 7394027345470849133_i64,fld1: RET,fld2: 3685970596_u32 };
_2 = RET;
place!(Field::<u32>(Variant(_18, 1), 2)) = !3993499470_u32;
_14 = [_17,_17];
match _15 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
15686299154950816320 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14 = [_17,_3];
_18 = Adt35::Variant1 { fld0: (-4559912942960566893_i64),fld1: RET,fld2: 2325287890_u32 };
_3 = _17 | _17;
_14 = [_3,_17];
RET = -_2;
Call(_15 = core::intrinsics::transmute(_17), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
(*_1) = _5 & _11;
_11 = (*_1);
_9 = _7;
place!(Field::<u32>(Variant(_18, 1), 2)) = !2245181015_u32;
RET = Field::<f64>(Variant(_18, 1), 1) * Field::<f64>(Variant(_18, 1), 1);
_20 = !_9;
_5 = _11 > _11;
_9 = !_5;
RET = 24967379928485463254619950815968110783_u128 as f64;
_13 = !_5;
RET = _2 * Field::<f64>(Variant(_18, 1), 1);
_21 = core::ptr::addr_of!(_12.2);
RET = _2 * _2;
place!(Field::<u32>(Variant(_18, 1), 2)) = !3429832761_u32;
_9 = _13 == _13;
place!(Field::<u32>(Variant(_18, 1), 2)) = '\u{df380}' as u32;
_20 = (*_1) > _13;
_15 = 931218422210520883_usize + 11394187033166061866_usize;
(*_1) = _5 != _7;
Goto(bb11)
}
bb11 = {
_17 = _3;
_12.1 = [28344_u16,25898_u16,18840_u16,19877_u16,28583_u16,2436_u16];
_17 = !_3;
_7 = !(*_1);
place!(Field::<f64>(Variant(_18, 1), 1)) = (-2461502176962474671_i64) as f64;
place!(Field::<f64>(Variant(_18, 1), 1)) = RET;
_10 = _11 < (*_1);
_22 = Adt31::Variant2 { fld0: _5,fld1: 12675_u16,fld2: 26879604144366324508113109626486212474_i128 };
_14 = [_17,_17];
_9 = _8 >= Field::<bool>(Variant(_22, 2), 0);
_1 = core::ptr::addr_of_mut!(_9);
_10 = !_20;
_15 = !5647823462509095146_usize;
_11 = Field::<bool>(Variant(_22, 2), 0) >= _5;
_21 = core::ptr::addr_of!(_23);
_18 = Adt35::Variant1 { fld0: 2215233401984977113_i64,fld1: _2,fld2: 1448149559_u32 };
_3 = _17 << _15;
_4 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_22, 2), 1)));
place!(Field::<u32>(Variant(_18, 1), 2)) = !3569731853_u32;
place!(Field::<bool>(Variant(_22, 2), 0)) = (*_1) | _11;
_18 = Adt35::Variant1 { fld0: (-8469116032254184930_i64),fld1: RET,fld2: 2600708319_u32 };
Call(place!(Field::<i128>(Variant(_22, 2), 2)) = core::intrinsics::transmute(_14), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_15 = 0_usize;
(*_4) = _12.1[_15];
_6[_15] = 13_i8 >> Field::<i128>(Variant(_22, 2), 2);
_27.1.0 = [27880_i16,(-27308_i16)];
RET = -Field::<f64>(Variant(_18, 1), 1);
match (*_4) {
28344 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
_13 = _20;
_25 = 4100999221_u32 as f32;
place!(Field::<u32>(Variant(_18, 1), 2)) = _2 as u32;
_13 = (*_1) | _20;
_15 = 7159392824043852210_usize << _6[_15];
(*_4) = !29398_u16;
_7 = _5;
(*_1) = !_5;
RET = _2;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(18_usize, 20_usize, Move(_20), 10_usize, Move(_10), 11_usize, Move(_11), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(18_usize, 5_usize, Move(_5), 15_usize, Move(_15), 29_usize, _29, 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [i16; 2],mut _2: [i16; 2],mut _3: [i16; 2],mut _4: [i16; 2],mut _5: char,mut _6: char,mut _7: i64) -> [i16; 2] {
mir! {
type RET = [i16; 2];
let _8: *mut &'static mut &'static mut *const char;
let _9: usize;
let _10: (*const i64, &'static mut *const char, &'static Adt30, Adt34);
let _11: [u16; 6];
let _12: Adt35;
let _13: (u16, u64);
let _14: *mut (Adt35, &'static char, (char,), *mut bool);
let _15: isize;
let _16: &'static Adt35;
let _17: [i8; 4];
let _18: bool;
let _19: f64;
let _20: (([i16; 2],), Adt31, u32);
let _21: &'static mut [i64; 4];
let _22: &'static Adt30;
let _23: [i64; 7];
let _24: i32;
let _25: bool;
let _26: *const i128;
let _27: char;
let _28: [i128; 2];
let _29: [u8; 7];
let _30: i32;
let _31: ();
let _32: ();
{
_7 = 5066038441501805107_i64;
RET = [734_i16,(-9558_i16)];
_2 = _4;
RET = [30682_i16,(-29946_i16)];
_4 = [20094_i16,(-6671_i16)];
_5 = _6;
match _7 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
5066038441501805107 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_3 = _1;
RET = [(-8985_i16),11204_i16];
_6 = _5;
Goto(bb9)
}
bb9 = {
_2 = [(-9190_i16),25418_i16];
RET = _4;
_4 = [5273_i16,9300_i16];
RET = [5852_i16,5531_i16];
_7 = -4434059435210767949_i64;
Goto(bb10)
}
bb10 = {
_6 = _5;
_2 = _4;
_5 = _6;
_9 = 6878119748332508324_usize;
_1 = RET;
_1 = _3;
RET = [(-16206_i16),(-27071_i16)];
RET = [(-6162_i16),(-22669_i16)];
_7 = -(-3859591323828474867_i64);
_5 = _6;
Goto(bb11)
}
bb11 = {
_11 = [43599_u16,31692_u16,45759_u16,61392_u16,16533_u16,53688_u16];
_6 = _5;
_5 = _6;
_2 = [7296_i16,(-2746_i16)];
_10.0 = core::ptr::addr_of!(_7);
RET = [532_i16,(-4189_i16)];
_9 = !7_usize;
_13.0 = !30738_u16;
_13 = (28799_u16, 10662633831648811566_u64);
_1 = [(-18079_i16),23330_i16];
_4 = [(-29418_i16),2717_i16];
RET = [3967_i16,24531_i16];
_6 = _5;
_3 = [(-8213_i16),(-20547_i16)];
_11 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
RET = [30538_i16,(-23155_i16)];
_11 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_4 = [(-15291_i16),8227_i16];
_7 = 109632882160385525000227129597327191242_i128 as i64;
_3 = _4;
match _13.1 {
0 => bb1,
1 => bb2,
2 => bb10,
3 => bb4,
4 => bb9,
10662633831648811566 => bb12,
_ => bb6
}
}
bb12 = {
_2 = [985_i16,3336_i16];
_1 = _4;
_10.0 = core::ptr::addr_of!(_7);
_11 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_9 = 1934324398_u32 as usize;
_20.2 = !3425292815_u32;
_13.0 = 30000_u16 << _13.1;
_17 = [(-116_i8),(-69_i8),72_i8,11_i8];
_9 = 4_usize * 5_usize;
RET = _1;
_20.0.0 = [(-24501_i16),(-11338_i16)];
_18 = false;
_17 = [(-39_i8),(-107_i8),121_i8,29_i8];
_19 = (-30772030171840400567380838743242653803_i128) as f64;
_11 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13.0 = !18134_u16;
_9 = 5787476055387304655014590819835342418_u128 as usize;
_10.0 = core::ptr::addr_of!(_7);
_11 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_4 = RET;
_7 = 1373019249384604808_i64 ^ (-2892140202989720119_i64);
match _13.1 {
0 => bb1,
1 => bb11,
2 => bb3,
3 => bb13,
10662633831648811566 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_24 = 1781159118_i32;
_17 = [72_i8,(-15_i8),50_i8,(-82_i8)];
_13 = (28134_u16, 5323781413397353342_u64);
_9 = 13631777515913270703_usize;
_23 = [_7,_7,_7,_7,_7,_7,_7];
_20.2 = 4188300452_u32;
_20.0 = (RET,);
_12 = Adt35::Variant1 { fld0: _7,fld1: _19,fld2: _20.2 };
_6 = _5;
_20.0 = (_1,);
_20.2 = Field::<u32>(Variant(_12, 1), 2);
_29 = [67_u8,168_u8,160_u8,156_u8,196_u8,177_u8,91_u8];
_28 = [(-23569918675749299594942602442857557412_i128),45556562708470293180197474933431306339_i128];
_13.0 = !32100_u16;
place!(Field::<f64>(Variant(_12, 1), 1)) = Field::<i64>(Variant(_12, 1), 0) as f64;
_17 = [109_i8,9_i8,100_i8,(-2_i8)];
_16 = &_12;
_3 = [(-24298_i16),32551_i16];
_28 = [157320686219799808350750994318105773206_i128,124962030713103790964907858814054827234_i128];
_2 = [31203_i16,(-30629_i16)];
_29 = [10_u8,91_u8,66_u8,161_u8,197_u8,206_u8,116_u8];
_6 = _5;
Goto(bb16)
}
bb16 = {
Call(_31 = dump_var(19_usize, 28_usize, Move(_28), 11_usize, Move(_11), 7_usize, Move(_7), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(19_usize, 29_usize, Move(_29), 2_usize, Move(_2), 6_usize, Move(_6), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(109257797193969747674275835921059386374_u128));
                
            }
#[derive(Debug)]
pub struct Adt30 {
fld0: bool,
fld1: u16,
fld2: u8,
fld3: [i64; 7],
fld4: [i16; 2],
fld5: *const (u16,),
fld6: ([i16; 2],),
}
#[derive(Debug)]
pub enum Adt31 {
Variant0{
fld0: (char,),
fld1: ([i16; 2],),
fld2: i64,
fld3: i8,
fld4: Adt30,
fld5: [i16; 2],

},
Variant1{
fld0: (u16,),
fld1: *const ([i16; 2],),
fld2: isize,
fld3: i8,
fld4: u128,
fld5: [i16; 2],

},
Variant2{
fld0: bool,
fld1: u16,
fld2: i128,

}}
#[derive(Debug)]
pub enum Adt34 {
Variant0{
fld0: *const char,

},
Variant1{
fld0: f32,
fld1: *const isize,
fld2: i128,
fld3: [i16; 2],

},
Variant2{
fld0: bool,
fld1: char,
fld2: [i64; 7],
fld3: ([i16; 2],),
fld4: Adt31,
fld5: [i16; 2],
fld6: *mut bool,
fld7: i128,

},
Variant3{
fld0: bool,
fld1: u32,

}}
#[derive(Debug)]
pub enum Adt35 {
Variant0{
fld0: Adt34,
fld1: f32,
fld2: *const (u16,),
fld3: u128,
fld4: u64,
fld5: *const char,
fld6: i64,
fld7: *mut bool,

},
Variant1{
fld0: i64,
fld1: f64,
fld2: u32,

}}
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: *const isize,
fld1: i128,
fld2: (char,),

},
Variant1{
fld0: ([i16; 2],),
fld1: [u64; 7],
fld2: *const ([i16; 2],),
fld3: *const isize,
fld4: (([i16; 2],), ([i16; 2],)),
fld5: i32,
fld6: *mut bool,

},
Variant2{
fld0: Adt34,
fld1: char,
fld2: (u16,),
fld3: *const ([i16; 2],),

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: Adt34,
fld1: *mut bool,
fld2: *const (u16,),
fld3: u64,
fld4: Adt31,

},
Variant1{
fld0: f64,

},
Variant2{
fld0: *const ([i16; 2],),
fld1: [i16; 2],
fld2: *const (u16,),
fld3: (([i16; 2],), ([i16; 2],)),

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: i64,

},
Variant1{
fld0: ([i16; 2],),
fld1: [i8; 4],
fld2: [i16; 2],
fld3: i8,
fld4: *const *mut bool,
fld5: *mut bool,
fld6: *const i128,
fld7: *const ([i16; 2],),

}}
#[derive(Debug)]
pub enum Adt75 {
Variant0{
fld0: [i8; 4],
fld1: u8,
fld2: [u64; 2],
fld3: (char,),
fld4: u64,
fld5: (([i16; 2],), ([i16; 2],)),
fld6: Adt42,
fld7: u32,

},
Variant1{
fld0: Adt56,
fld1: *mut u16,

},
Variant2{
fld0: *const i64,
fld1: char,
fld2: [u16; 6],
fld3: Adt56,

}}

