#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: u32,mut _4: i8,mut _5: usize) -> [u64; 6] {
mir! {
type RET = [u64; 6];
let _6: [i16; 8];
let _7: i128;
let _8: ([isize; 4],);
let _9: &'static &'static mut i64;
let _10: Adt47;
let _11: isize;
let _12: [i32; 8];
let _13: isize;
let _14: (([u16; 4], f32, *mut char), (usize, i16), *const usize, &'static mut i64);
let _15: (*mut u16, char);
let _16: (u64, *mut &'static mut u32);
let _17: &'static mut *mut i64;
let _18: usize;
let _19: usize;
let _20: f32;
let _21: Adt20;
let _22: u32;
let _23: ();
let _24: ();
{
_3 = 134_u8 as u32;
_2 = '\u{882fa}';
RET = [1610419817941637607_u64,11842599819310344298_u64,13880158344418312792_u64,4061637324669716884_u64,7187220675827622750_u64,13968683856914718325_u64];
_1 = true;
_2 = '\u{a2ebf}';
_4 = (-26_i8);
_5 = 4378502115590893652_usize;
_1 = false & true;
_5 = !15322571881018112725_usize;
_4 = 119_i8 - (-119_i8);
_2 = '\u{4425d}';
RET = [9481720988421650964_u64,151335092944139325_u64,5121491357210124795_u64,8563446031955819946_u64,12317177798363292358_u64,14746455299135244223_u64];
_5 = !4_usize;
_6 = [741_i16,(-32365_i16),(-22620_i16),2040_i16,(-8020_i16),(-3270_i16),6060_i16,31325_i16];
_4 = 9223372036854775807_isize as i8;
_2 = '\u{974f5}';
_6 = [(-22211_i16),(-28136_i16),18823_i16,19162_i16,18353_i16,(-19173_i16),7815_i16,(-12255_i16)];
_6 = [24545_i16,23923_i16,(-29286_i16),23082_i16,25608_i16,(-15703_i16),21150_i16,30049_i16];
_3 = !1706870877_u32;
_2 = '\u{c1ece}';
Goto(bb1)
}
bb1 = {
_5 = 213656262748624421684777980988343178124_u128 as usize;
_2 = '\u{c60a7}';
RET = [16385849028762736884_u64,15758875514100448802_u64,3633587597827393178_u64,15427675666600303863_u64,521591350477715311_u64,3202334531129345910_u64];
RET = [13093345238136214352_u64,12403621624148180573_u64,13097657234230436965_u64,7731383736550999441_u64,14191978779559314202_u64,13411510106339729531_u64];
_5 = _3 as usize;
_8.0 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_4 = (-49_i8) ^ 40_i8;
_7 = -54926636950931517232181245078950800234_i128;
_7 = 99400567091449759176410474398637907683_i128;
RET = [7328118897414520983_u64,7479641142989437491_u64,3985415981665388400_u64,8404612493415734319_u64,9727101234255505796_u64,15016174785263695361_u64];
_7 = !24735054080198042103311830232936476260_i128;
_6 = [(-15810_i16),28294_i16,(-11801_i16),(-32702_i16),16904_i16,24726_i16,1000_i16,12056_i16];
RET = [7598707669216323367_u64,3629207721024526515_u64,17426428294226211012_u64,1598273288009417330_u64,1485952406071985625_u64,12740244964153425562_u64];
_2 = '\u{433ce}';
RET = [5924879495923749097_u64,11023483846162799621_u64,15652405186093589829_u64,9358582515261701042_u64,17346460897393275997_u64,14478970126243172231_u64];
_2 = '\u{17d07}';
_8.0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-30_isize),(-9223372036854775808_isize)];
_6 = [(-24537_i16),(-3958_i16),15018_i16,11780_i16,14735_i16,339_i16,(-13297_i16),3032_i16];
_1 = !false;
_8.0 = [(-9223372036854775808_isize),9223372036854775807_isize,105_isize,(-9223372036854775808_isize)];
_7 = !(-138201527869694331466185801343797571103_i128);
RET = [15407081584063616999_u64,10111318371686463667_u64,13115472580187314813_u64,10522079904522656092_u64,14944233223664628719_u64,1924356809752801283_u64];
_7 = (-131269805872048207143094290915837837852_i128);
_6 = [6651_i16,30154_i16,(-18002_i16),(-1714_i16),(-20234_i16),23641_i16,9101_i16,(-19551_i16)];
_4 = 101_i8 ^ (-21_i8);
_8.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,26_isize];
_5 = !13110907560336618909_usize;
Call(_2 = fn1(_6, _8, RET, RET, _8, RET, _4, RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = false & false;
_6 = [28223_i16,(-24631_i16),7408_i16,15468_i16,9697_i16,23944_i16,(-32386_i16),(-1359_i16)];
_2 = '\u{106675}';
_5 = 8713840248029892893_usize + 8767207615888171532_usize;
_12 = [(-1898661144_i32),(-1872793881_i32),874262261_i32,(-1649789654_i32),(-34205732_i32),1902923323_i32,391074580_i32,(-337017799_i32)];
_7 = -73604067821082949913635370876017418090_i128;
_1 = true;
_3 = _2 as u32;
_3 = !2964924179_u32;
_11 = _3 as isize;
_14.1 = (_5, (-17649_i16));
_14.0.0 = [53246_u16,33549_u16,58125_u16,55858_u16];
_2 = '\u{100e50}';
_5 = 10984634011202368250_u64 as usize;
_14.1 = (_5, 3286_i16);
RET = [11686370858445645043_u64,16922938981367407472_u64,17816098269515720695_u64,7441043244177634605_u64,6600240485996580613_u64,9523094565258069366_u64];
_8.0 = [_11,_11,_11,_11];
_8.0 = [_11,_11,_11,_11];
_4 = (-11_i8);
_8.0 = [_11,_11,_11,_11];
RET = [14081383716085133400_u64,17601778922780102951_u64,14358024758551230198_u64,14901506969456668429_u64,17969397317915835232_u64,15706734087378849027_u64];
_5 = _2 as usize;
_16.0 = _2 as u64;
match _14.1.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
3286 => bb11,
_ => bb10
}
}
bb3 = {
_5 = 213656262748624421684777980988343178124_u128 as usize;
_2 = '\u{c60a7}';
RET = [16385849028762736884_u64,15758875514100448802_u64,3633587597827393178_u64,15427675666600303863_u64,521591350477715311_u64,3202334531129345910_u64];
RET = [13093345238136214352_u64,12403621624148180573_u64,13097657234230436965_u64,7731383736550999441_u64,14191978779559314202_u64,13411510106339729531_u64];
_5 = _3 as usize;
_8.0 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_4 = (-49_i8) ^ 40_i8;
_7 = -54926636950931517232181245078950800234_i128;
_7 = 99400567091449759176410474398637907683_i128;
RET = [7328118897414520983_u64,7479641142989437491_u64,3985415981665388400_u64,8404612493415734319_u64,9727101234255505796_u64,15016174785263695361_u64];
_7 = !24735054080198042103311830232936476260_i128;
_6 = [(-15810_i16),28294_i16,(-11801_i16),(-32702_i16),16904_i16,24726_i16,1000_i16,12056_i16];
RET = [7598707669216323367_u64,3629207721024526515_u64,17426428294226211012_u64,1598273288009417330_u64,1485952406071985625_u64,12740244964153425562_u64];
_2 = '\u{433ce}';
RET = [5924879495923749097_u64,11023483846162799621_u64,15652405186093589829_u64,9358582515261701042_u64,17346460897393275997_u64,14478970126243172231_u64];
_2 = '\u{17d07}';
_8.0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-30_isize),(-9223372036854775808_isize)];
_6 = [(-24537_i16),(-3958_i16),15018_i16,11780_i16,14735_i16,339_i16,(-13297_i16),3032_i16];
_1 = !false;
_8.0 = [(-9223372036854775808_isize),9223372036854775807_isize,105_isize,(-9223372036854775808_isize)];
_7 = !(-138201527869694331466185801343797571103_i128);
RET = [15407081584063616999_u64,10111318371686463667_u64,13115472580187314813_u64,10522079904522656092_u64,14944233223664628719_u64,1924356809752801283_u64];
_7 = (-131269805872048207143094290915837837852_i128);
_6 = [6651_i16,30154_i16,(-18002_i16),(-1714_i16),(-20234_i16),23641_i16,9101_i16,(-19551_i16)];
_4 = 101_i8 ^ (-21_i8);
_8.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,26_isize];
_5 = !13110907560336618909_usize;
Call(_2 = fn1(_6, _8, RET, RET, _8, RET, _4, RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_5 = !_14.1.0;
RET = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_5 = _16.0 as usize;
_13 = _11 & _11;
match _14.1.1 {
0 => bb1,
1 => bb2,
3286 => bb12,
_ => bb10
}
}
bb12 = {
_14.1.1 = (-7143796547995119521_i64) as i16;
_14.1.0 = !_5;
_14.0.2 = core::ptr::addr_of_mut!(_2);
_14.2 = core::ptr::addr_of!(_18);
_11 = !_13;
_12 = [(-413505817_i32),2101315003_i32,(-1273240382_i32),919314843_i32,(-1455208988_i32),(-1583552386_i32),(-2123098079_i32),1883146863_i32];
_12 = [(-601131928_i32),829165369_i32,(-1727817452_i32),1690202726_i32,(-945391507_i32),(-1092180552_i32),(-1211907266_i32),(-491652336_i32)];
_14.1.0 = _5;
_8.0 = [_11,_13,_11,_13];
RET = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_14.0.2 = core::ptr::addr_of_mut!(_2);
RET = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_14.1.1 = !27051_i16;
_5 = !_14.1.0;
_14.0.0 = [35374_u16,24969_u16,8125_u16,35498_u16];
_5 = _7 as usize;
_14.0.1 = _5 as f32;
_1 = false;
_1 = false;
_3 = !3834413553_u32;
Goto(bb13)
}
bb13 = {
_14.1 = (_5, 5512_i16);
_14.1.0 = _5;
_18 = !_14.1.0;
_16.0 = 4577666475259509625_u64 & 11787647199581882480_u64;
_14.0.1 = 203529560698215941959361380373186964571_u128 as f32;
_7 = 149211422048245696230748218314857671184_i128 & 115100581043167633192192844300761103565_i128;
_6 = [_14.1.1,_14.1.1,_14.1.1,_14.1.1,_14.1.1,_14.1.1,_14.1.1,_14.1.1];
_16.0 = 6962877365294015379_u64;
_15.1 = _2;
_16.0 = 3320026234403620711_u64;
_14.1 = (_5, (-31516_i16));
_15.1 = _2;
_14.1 = (_5, (-6324_i16));
Call(_14.1.1 = core::intrinsics::bswap(5763_i16), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_16.0 = 5185081499855514662_u64 | 6661038358652159772_u64;
_22 = _3 ^ _3;
_16.0 = 8149475527099079118_u64 & 4936356504841241552_u64;
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(0_usize, 1_usize, Move(_1), 2_usize, Move(_2), 22_usize, Move(_22), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(0_usize, 7_usize, Move(_7), 13_usize, Move(_13), 24_usize, _24, 24_usize, _24), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [i16; 8],mut _2: ([isize; 4],),mut _3: [u64; 6],mut _4: [u64; 6],mut _5: ([isize; 4],),mut _6: [u64; 6],mut _7: i8,mut _8: [u64; 6],mut _9: [i16; 8]) -> char {
mir! {
type RET = char;
let _10: isize;
let _11: char;
let _12: &'static mut u8;
let _13: (Adt21, i32, (usize, i16), &'static mut i64);
let _14: [i64; 4];
let _15: ([isize; 4],);
let _16: [isize; 2];
let _17: *mut Adt27;
let _18: isize;
let _19: f64;
let _20: Adt40;
let _21: (usize, i16);
let _22: (isize, *mut u16, i128, i128);
let _23: *const u128;
let _24: i8;
let _25: isize;
let _26: [i128; 4];
let _27: (*mut u16, char);
let _28: [i128; 4];
let _29: isize;
let _30: char;
let _31: [u64; 7];
let _32: (*mut Adt27, *mut (&'static u8, *const usize, *const u128, *const u128), Adt47, Adt26);
let _33: ();
let _34: ();
{
_10 = (-102_isize);
Goto(bb1)
}
bb1 = {
RET = '\u{b8774}';
_2.0 = _5.0;
_8 = [10340942547546073520_u64,17057953418132129853_u64,6802373968652361111_u64,2401315106386648610_u64,8874193087102812680_u64,7886528187947579884_u64];
RET = '\u{a0f32}';
_7 = 1172443496_i32 as i8;
_9 = _1;
Goto(bb2)
}
bb2 = {
_3 = _4;
_4 = [14321229763051381187_u64,4081199757162426965_u64,4072312845527933771_u64,459956011636799263_u64,2886285512697712701_u64,17675526329508751341_u64];
_3 = [14917755905921949662_u64,12380866882269544386_u64,8539560830756182877_u64,5290994218548277536_u64,15159707431067537970_u64,7262178008758157864_u64];
_13.2.1 = -13420_i16;
_6 = _3;
_7 = !(-75_i8);
_11 = RET;
_6 = _3;
RET = _11;
Goto(bb3)
}
bb3 = {
_15 = (_5.0,);
_15.0 = [_10,_10,_10,_10];
_8 = [541793618552808397_u64,1771202861688493210_u64,4572746585582235910_u64,2238634939332366692_u64,315742420950809092_u64,1755020180884765502_u64];
_11 = RET;
_8 = [9219653126372149283_u64,2675187711854021008_u64,223526962870094246_u64,4957863305420826097_u64,1365659806377233424_u64,2684736525901763600_u64];
_13.2.1 = (-8265_i16) << _7;
_11 = RET;
_13.2 = (0_usize, (-28371_i16));
_2.0 = [_10,_10,_10,_10];
_14 = [1639774731837611143_i64,357037220233522602_i64,5244086096926325384_i64,(-3060044980970811828_i64)];
_4 = [1660273017568701880_u64,9970641182808882889_u64,16355645563302796854_u64,5982502497390893352_u64,11122998048238669612_u64,5699902490706962721_u64];
_3 = [4066738074872436054_u64,17573569742543765253_u64,11114354020195442001_u64,12430917784547245834_u64,2747786025947327095_u64,12590249015281247934_u64];
_5.0 = [_10,_10,_10,_10];
_13.0 = Adt21::Variant3 { fld0: 15549961231427042876_u64 };
_13.0 = Adt21::Variant1 { fld0: 8549099543015790272045420659859985443_i128 };
_11 = RET;
place!(Field::<i128>(Variant(_13.0, 1), 0)) = !46176128912387321790402455208014914890_i128;
_5.0 = [_10,_10,_10,_10];
_14 = [3519277524758650721_i64,(-5188911650211692591_i64),903190167112358744_i64,(-3621065025600789570_i64)];
_13.0 = Adt21::Variant1 { fld0: (-104025531368493028206587637066183970411_i128) };
_9 = _1;
_15 = _5;
RET = _11;
_13.1 = -(-634887147_i32);
Goto(bb4)
}
bb4 = {
_16 = [_10,_10];
_13.2 = (2008800652467810296_usize, 6710_i16);
_3 = _6;
_5.0 = _2.0;
_13.1 = -969518164_i32;
RET = _11;
_21 = (_13.2.0, _13.2.1);
_5 = (_15.0,);
_15 = _2;
Goto(bb5)
}
bb5 = {
_21 = (_13.2.0, _13.2.1);
_19 = 13888502083025152418114345129758914047_u128 as f64;
_13.1 = (-1692294027_i32) << _13.2.1;
Call(_7 = core::intrinsics::bswap((-13_i8)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_22.3 = 56040520813455770913782774201382458323_i128;
_22.2 = -_22.3;
_22.3 = _22.2 ^ _22.2;
_5.0 = _2.0;
_13.2 = _21;
_14 = [7948573632799819410_i64,6184742650653797096_i64,5857575384085441417_i64,3025516334722074913_i64];
_21 = (_13.2.0, _13.2.1);
_3 = [13004209398040554709_u64,16556405158397370130_u64,6585317667394722321_u64,17345091074760882487_u64,15404288133012218154_u64,2464421190358591809_u64];
_22.0 = _10 ^ _10;
_10 = _22.0;
_14 = [(-7891874684803989651_i64),(-6946313773981861684_i64),4622312267492252035_i64,(-1652006093963622643_i64)];
_22.2 = 6691914466925130317_u64 as i128;
RET = _11;
_6 = [12609110416883379493_u64,17595408218575527411_u64,5849035988251353844_u64,17252915371930022641_u64,730788820813514795_u64,4577462192658033128_u64];
_14 = [5296138872077253343_i64,7031609053396195873_i64,3830176820841988411_i64,8032893309543080156_i64];
_10 = -_22.0;
_9 = _1;
Goto(bb7)
}
bb7 = {
_24 = _7 - _7;
_2.0 = [_10,_10,_10,_10];
_8 = _6;
place!(Field::<i128>(Variant(_13.0, 1), 0)) = _22.3 & _22.3;
_18 = _22.0;
_22.2 = _22.3;
_7 = _10 as i8;
Call(_22.2 = fn2(_21.1, _13.1, _9, _4, _13.2.1, _9, _22.3, _9), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_13.2.0 = 163_u8 as usize;
_10 = _18 & _22.0;
_13.1 = -(-1006063280_i32);
_22.2 = Field::<i128>(Variant(_13.0, 1), 0) * Field::<i128>(Variant(_13.0, 1), 0);
_5.0 = _15.0;
_24 = !_7;
_22.3 = !_22.2;
_16 = [_22.0,_10];
_21 = _13.2;
_6 = _3;
SetDiscriminant(_13.0, 2);
_13.2 = (_21.0, _21.1);
place!(Field::<*const i8>(Variant(_13.0, 2), 2)) = core::ptr::addr_of!(_24);
_21.1 = 245610162002159577968191236802071668387_u128 as i16;
place!(Field::<i64>(Variant(_13.0, 2), 3)) = (-504633621330157246_i64) ^ 7676739488367667226_i64;
_22.3 = 60_u8 as i128;
place!(Field::<char>(Variant(_13.0, 2), 1)) = _11;
place!(Field::<i64>(Variant(_13.0, 2), 3)) = !1069508851846189911_i64;
_15.0 = [_10,_18,_10,_10];
_10 = _18 * _18;
_26 = [_22.2,_22.3,_22.2,_22.2];
_26 = [_22.2,_22.2,_22.2,_22.2];
_22.3 = !_22.2;
_13.2 = (_21.0, _21.1);
_13.2.1 = 8677499489516574047_u64 as i16;
_25 = _21.1 as isize;
RET = _11;
place!(Field::<i64>(Variant(_13.0, 2), 3)) = 7981536195651971804_i64;
_11 = Field::<char>(Variant(_13.0, 2), 1);
_8 = [14924092833350933627_u64,7626764515355210089_u64,16152228939169056375_u64,13328950294030919870_u64,13252341872658330315_u64,4269251608526866798_u64];
place!(Field::<*const i8>(Variant(_13.0, 2), 2)) = core::ptr::addr_of!(_24);
match Field::<i64>(Variant(_13.0, 2), 3) {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
7981536195651971804 => bb15,
_ => bb14
}
}
bb9 = {
_24 = _7 - _7;
_2.0 = [_10,_10,_10,_10];
_8 = _6;
place!(Field::<i128>(Variant(_13.0, 1), 0)) = _22.3 & _22.3;
_18 = _22.0;
_22.2 = _22.3;
_7 = _10 as i8;
Call(_22.2 = fn2(_21.1, _13.1, _9, _4, _13.2.1, _9, _22.3, _9), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_22.3 = 56040520813455770913782774201382458323_i128;
_22.2 = -_22.3;
_22.3 = _22.2 ^ _22.2;
_5.0 = _2.0;
_13.2 = _21;
_14 = [7948573632799819410_i64,6184742650653797096_i64,5857575384085441417_i64,3025516334722074913_i64];
_21 = (_13.2.0, _13.2.1);
_3 = [13004209398040554709_u64,16556405158397370130_u64,6585317667394722321_u64,17345091074760882487_u64,15404288133012218154_u64,2464421190358591809_u64];
_22.0 = _10 ^ _10;
_10 = _22.0;
_14 = [(-7891874684803989651_i64),(-6946313773981861684_i64),4622312267492252035_i64,(-1652006093963622643_i64)];
_22.2 = 6691914466925130317_u64 as i128;
RET = _11;
_6 = [12609110416883379493_u64,17595408218575527411_u64,5849035988251353844_u64,17252915371930022641_u64,730788820813514795_u64,4577462192658033128_u64];
_14 = [5296138872077253343_i64,7031609053396195873_i64,3830176820841988411_i64,8032893309543080156_i64];
_10 = -_22.0;
_9 = _1;
Goto(bb7)
}
bb11 = {
_21 = (_13.2.0, _13.2.1);
_19 = 13888502083025152418114345129758914047_u128 as f64;
_13.1 = (-1692294027_i32) << _13.2.1;
Call(_7 = core::intrinsics::bswap((-13_i8)), ReturnTo(bb6), UnwindUnreachable())
}
bb12 = {
RET = '\u{b8774}';
_2.0 = _5.0;
_8 = [10340942547546073520_u64,17057953418132129853_u64,6802373968652361111_u64,2401315106386648610_u64,8874193087102812680_u64,7886528187947579884_u64];
RET = '\u{a0f32}';
_7 = 1172443496_i32 as i8;
_9 = _1;
Goto(bb2)
}
bb13 = {
_15 = (_5.0,);
_15.0 = [_10,_10,_10,_10];
_8 = [541793618552808397_u64,1771202861688493210_u64,4572746585582235910_u64,2238634939332366692_u64,315742420950809092_u64,1755020180884765502_u64];
_11 = RET;
_8 = [9219653126372149283_u64,2675187711854021008_u64,223526962870094246_u64,4957863305420826097_u64,1365659806377233424_u64,2684736525901763600_u64];
_13.2.1 = (-8265_i16) << _7;
_11 = RET;
_13.2 = (0_usize, (-28371_i16));
_2.0 = [_10,_10,_10,_10];
_14 = [1639774731837611143_i64,357037220233522602_i64,5244086096926325384_i64,(-3060044980970811828_i64)];
_4 = [1660273017568701880_u64,9970641182808882889_u64,16355645563302796854_u64,5982502497390893352_u64,11122998048238669612_u64,5699902490706962721_u64];
_3 = [4066738074872436054_u64,17573569742543765253_u64,11114354020195442001_u64,12430917784547245834_u64,2747786025947327095_u64,12590249015281247934_u64];
_5.0 = [_10,_10,_10,_10];
_13.0 = Adt21::Variant3 { fld0: 15549961231427042876_u64 };
_13.0 = Adt21::Variant1 { fld0: 8549099543015790272045420659859985443_i128 };
_11 = RET;
place!(Field::<i128>(Variant(_13.0, 1), 0)) = !46176128912387321790402455208014914890_i128;
_5.0 = [_10,_10,_10,_10];
_14 = [3519277524758650721_i64,(-5188911650211692591_i64),903190167112358744_i64,(-3621065025600789570_i64)];
_13.0 = Adt21::Variant1 { fld0: (-104025531368493028206587637066183970411_i128) };
_9 = _1;
_15 = _5;
RET = _11;
_13.1 = -(-634887147_i32);
Goto(bb4)
}
bb14 = {
_3 = _4;
_4 = [14321229763051381187_u64,4081199757162426965_u64,4072312845527933771_u64,459956011636799263_u64,2886285512697712701_u64,17675526329508751341_u64];
_3 = [14917755905921949662_u64,12380866882269544386_u64,8539560830756182877_u64,5290994218548277536_u64,15159707431067537970_u64,7262178008758157864_u64];
_13.2.1 = -13420_i16;
_6 = _3;
_7 = !(-75_i8);
_11 = RET;
_6 = _3;
RET = _11;
Goto(bb3)
}
bb15 = {
_26 = [_22.3,_22.2,_22.2,_22.3];
_18 = _10;
_5.0 = [_10,_18,_18,_10];
_10 = _25;
place!(Field::<f32>(Variant(_13.0, 2), 0)) = _24 as f32;
_27.1 = Field::<char>(Variant(_13.0, 2), 1);
_22.0 = _18;
place!(Field::<*const i8>(Variant(_13.0, 2), 2)) = core::ptr::addr_of!(_7);
_8 = _3;
_18 = _10;
_2 = (_15.0,);
_21.1 = !_13.2.1;
RET = _11;
_10 = _22.0 | _22.0;
_9 = _1;
_30 = _11;
_21.0 = 14544633820566143665_u64 as usize;
_22.3 = -_22.2;
place!(Field::<i64>(Variant(_13.0, 2), 3)) = -2515780011360528739_i64;
_22.0 = _10;
RET = _27.1;
Goto(bb16)
}
bb16 = {
Call(_33 = dump_var(1_usize, 5_usize, Move(_5), 24_usize, Move(_24), 21_usize, Move(_21), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(1_usize, 26_usize, Move(_26), 15_usize, Move(_15), 14_usize, Move(_14), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_33 = dump_var(1_usize, 3_usize, Move(_3), 4_usize, Move(_4), 34_usize, _34, 34_usize, _34), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: i16,mut _2: i32,mut _3: [i16; 8],mut _4: [u64; 6],mut _5: i16,mut _6: [i16; 8],mut _7: i128,mut _8: [i16; 8]) -> i128 {
mir! {
type RET = i128;
let _9: *const usize;
let _10: &'static mut &'static mut *mut i64;
let _11: f64;
let _12: *const *const u128;
let _13: [isize; 2];
let _14: f32;
let _15: u32;
let _16: [i32; 8];
let _17: *const *const [u16; 4];
let _18: i8;
let _19: &'static mut [u16; 4];
let _20: isize;
let _21: &'static Adt40;
let _22: [i32; 1];
let _23: isize;
let _24: *const u8;
let _25: bool;
let _26: isize;
let _27: *const [i32; 4];
let _28: f64;
let _29: [i32; 8];
let _30: isize;
let _31: &'static mut u32;
let _32: *mut &'static mut u32;
let _33: &'static mut [u16; 4];
let _34: (Adt21, i32, (usize, i16), &'static mut i64);
let _35: (usize, i16);
let _36: ([isize; 4],);
let _37: isize;
let _38: Adt20;
let _39: *mut &'static mut u32;
let _40: &'static mut &'static mut *mut i64;
let _41: ([i64; 4],);
let _42: [u16; 4];
let _43: Adt20;
let _44: *const u8;
let _45: f32;
let _46: ();
let _47: ();
{
_7 = (-78147904528098442462910133993356913631_i128) | 116267626430216774340771095244850586413_i128;
_7 = -(-150586878936905039462677460737397194944_i128);
_5 = -_1;
RET = -_7;
RET = 9718740582948566197_usize as i128;
RET = _7 ^ _7;
_6 = [_1,_5,_1,_1,_5,_5,_1,_1];
_1 = _5 * _5;
_1 = !_5;
_1 = 3197854605_u32 as i16;
_11 = 63_i8 as f64;
_5 = 2663473312_u32 as i16;
RET = _5 as i128;
_2 = 156243165_i32;
RET = _1 as i128;
Goto(bb1)
}
bb1 = {
_11 = (-55_i8) as f64;
_6 = _3;
_13 = [(-108_isize),(-9223372036854775808_isize)];
_7 = 7281622781774029016_i64 as i128;
_8 = [_1,_1,_1,_5,_1,_5,_5,_5];
RET = -_7;
_5 = _1 >> _7;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_14 = 13423742130486944790_usize as f32;
_3 = [_5,_1,_5,_5,_1,_5,_1,_5];
match _2 {
156243165 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_4 = [5499127518645975656_u64,3599942332277946895_u64,1080005605844275881_u64,1653184428565050611_u64,10807431459793953913_u64,8248321096365260873_u64];
_6 = [_5,_1,_1,_5,_5,_1,_5,_5];
RET = _2 as i128;
_15 = 2169469970_u32;
_3 = _6;
_18 = (-52_i8) ^ 26_i8;
_15 = _5 as u32;
_7 = 25565_u16 as i128;
_14 = 10911709212134873953_u64 as f32;
_5 = _1;
_2 = 1091663162_i32 + 849604080_i32;
_6 = [_1,_5,_5,_5,_1,_5,_5,_1];
_20 = (-93_isize);
_4 = [1098075559853251194_u64,6211816783290285200_u64,15254495539719824370_u64,11031739517946186505_u64,925586954961393545_u64,3560681285954067102_u64];
_5 = _1;
_3 = [_1,_5,_1,_5,_5,_5,_5,_5];
_5 = !_1;
_14 = _11 as f32;
_3 = [_5,_1,_5,_1,_1,_5,_5,_1];
_5 = _1;
_13 = [_20,_20];
_3 = _6;
_13 = [_20,_20];
_8 = _6;
match _20 {
340282366920938463463374607431768211363 => bb5,
_ => bb4
}
}
bb4 = {
Return()
}
bb5 = {
_15 = !1148151179_u32;
RET = _7;
_15 = 3984922193_u32 + 2246431626_u32;
_3 = [_1,_1,_5,_5,_5,_5,_1,_5];
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_5 = _1;
RET = 139725150992654540498172901585884113496_u128 as i128;
_7 = -RET;
_1 = !_5;
RET = -_7;
_15 = 1332702387_u32;
RET = _7 >> _18;
_13 = [_20,_20];
_4 = [544952996571226281_u64,10622499430494594817_u64,15908552351089594281_u64,16179493446288918100_u64,3300630929924298460_u64,9617127626605838516_u64];
_5 = _1;
RET = _15 as i128;
_14 = _1 as f32;
_5 = _18 as i16;
_18 = 121_i8 + 33_i8;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb6)
}
bb6 = {
_22 = [_2];
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_13 = [_20,_20];
_4 = [10311686901251083880_u64,9858876180123899712_u64,14363751407209359671_u64,7079590041975856452_u64,15318356017679772479_u64,11011227715458678664_u64];
RET = _1 as i128;
RET = 234_u8 as i128;
_1 = _5 * _5;
_23 = _14 as isize;
match _15 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb4,
1332702387 => bb8,
_ => bb7
}
}
bb7 = {
_11 = (-55_i8) as f64;
_6 = _3;
_13 = [(-108_isize),(-9223372036854775808_isize)];
_7 = 7281622781774029016_i64 as i128;
_8 = [_1,_1,_1,_5,_1,_5,_5,_5];
RET = -_7;
_5 = _1 >> _7;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_14 = 13423742130486944790_usize as f32;
_3 = [_5,_1,_5,_5,_1,_5,_1,_5];
match _2 {
156243165 => bb3,
_ => bb2
}
}
bb8 = {
RET = _7 * _7;
RET = 2464541972813981237653651674003394662_u128 as i128;
_15 = !916542629_u32;
_6 = [_5,_1,_1,_5,_1,_1,_1,_1];
_5 = !_1;
_25 = !false;
_13 = [_20,_23];
_1 = 195338694130229932129267873468366305691_u128 as i16;
_26 = !_23;
_7 = RET * RET;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = [_5,_5,_5,_1,_5,_1,_5,_5];
_26 = _23;
RET = _7;
_2 = 1731418508_i32;
_14 = _26 as f32;
Goto(bb9)
}
bb9 = {
_23 = 157_u8 as isize;
_1 = !_5;
_25 = false;
_26 = _23 - _23;
_25 = false;
_5 = _1 + _1;
_29 = [_2,_2,_2,_2,_2,_2,_2,_2];
_26 = _23 | _23;
_11 = 33620_u16 as f64;
RET = !_7;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_15 = 1524326452_u32;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_8 = _3;
_25 = _15 <= _15;
_25 = !false;
_31 = &mut _15;
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
_16 = [_2,_2,_2,_2,_2,_2,_2,_2];
Call(_34.2.0 = fn3(_25, _22, Move(_31), _22, _5, _23), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_23 = !_26;
_5 = _2 as i16;
_26 = !_23;
_35.1 = _5;
_30 = _23;
_11 = _2 as f64;
_31 = &mut _15;
(*_31) = 3608803725_u32 * 1937389806_u32;
_25 = _35.1 > _1;
_35 = (_34.2.0, _5);
_9 = core::ptr::addr_of!(_35.0);
_30 = _23;
_22 = [_2];
_34.2.1 = -_1;
_11 = _26 as f64;
_28 = _11 + _11;
_29 = _16;
Goto(bb11)
}
bb11 = {
_18 = 146799847977899833969385675991536145817_u128 as i8;
_36.0 = [_26,_30,_30,_26];
_32 = core::ptr::addr_of_mut!(_31);
_26 = _23 << _23;
_1 = _5 * _34.2.1;
_14 = 10554_u16 as f32;
_5 = _34.2.1 * _35.1;
_37 = _30 & _26;
_29 = [_2,_2,_2,_2,_2,_2,_2,_2];
_34.2.0 = _35.0;
Call(_35.0 = core::intrinsics::transmute(_37), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_7 = RET;
_34.0 = Adt21::Variant1 { fld0: _7 };
_14 = _26 as f32;
_2 = (-893550427_i32);
Goto(bb13)
}
bb13 = {
_15 = 1942922497_u32;
_29 = _16;
_34.0 = Adt21::Variant1 { fld0: RET };
_6 = _8;
(*_32) = &mut _15;
_18 = 12505594033635938664_u64 as i8;
_18 = 3_i8;
place!(Field::<i128>(Variant(_34.0, 1), 0)) = RET * _7;
_9 = core::ptr::addr_of!(_35.0);
(*_31) = (-3662269434378781102_i64) as u32;
_7 = RET;
(*_9) = _34.2.0;
RET = _7 & _7;
_39 = core::ptr::addr_of_mut!((*_32));
RET = _15 as i128;
_35 = _34.2;
_2 = (-1886564653_i32) << _1;
_8 = [_34.2.1,_34.2.1,_34.2.1,_1,_5,_35.1,_35.1,_35.1];
(*_9) = _14 as usize;
_15 = 3166435289_u32;
_28 = _2 as f64;
Goto(bb14)
}
bb14 = {
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(2_usize, 23_usize, Move(_23), 15_usize, Move(_15), 16_usize, Move(_16), 35_usize, Move(_35)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(2_usize, 1_usize, Move(_1), 4_usize, Move(_4), 22_usize, Move(_22), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(2_usize, 36_usize, Move(_36), 8_usize, Move(_8), 20_usize, Move(_20), 47_usize, _47), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: bool,mut _2: [i32; 1],mut _3: &'static mut u32,mut _4: [i32; 1],mut _5: i16,mut _6: isize) -> usize {
mir! {
type RET = usize;
let _7: *const usize;
let _8: bool;
let _9: isize;
let _10: [char; 4];
let _11: isize;
let _12: &'static mut &'static mut *mut i64;
let _13: *const *const [u16; 4];
let _14: u8;
let _15: &'static mut *const &'static mut u32;
let _16: char;
let _17: [u16; 4];
let _18: f32;
let _19: isize;
let _20: &'static mut u8;
let _21: Adt27;
let _22: *mut char;
let _23: f64;
let _24: &'static u8;
let _25: char;
let _26: *const *const [u16; 4];
let _27: &'static mut *const &'static mut u32;
let _28: *mut &'static mut u32;
let _29: f32;
let _30: &'static mut *const &'static mut u32;
let _31: ();
let _32: ();
{
RET = 16350565742334167800_usize;
RET = 16489677755654800647_usize << _6;
RET = !17354327236708642981_usize;
_2 = _4;
_7 = core::ptr::addr_of!(RET);
(*_7) = !7_usize;
_5 = (-10897_i16);
_6 = 45_isize;
RET = 2000794282866780254_u64 as usize;
_7 = core::ptr::addr_of!((*_7));
_8 = _1;
Goto(bb1)
}
bb1 = {
_6 = 9223372036854775807_isize << _5;
_9 = (-760703436_i32) as isize;
RET = (-398404238_i32) as usize;
(*_7) = 7_usize + 13935525256622791213_usize;
_5 = _6 as i16;
_6 = _9 + _9;
RET = 186940867561675512737182970582281052502_u128 as usize;
_5 = 37_i8 as i16;
_1 = _8;
_1 = _6 > _6;
_1 = _8 ^ _8;
_5 = !(-31201_i16);
_9 = 2171310860420705861_u64 as isize;
_9 = _6;
_11 = !_9;
(*_7) = 2_usize - 6840508282026150792_usize;
Call(_10 = fn4(Move(_7), _1, _2, _2, _6, _11, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = core::ptr::addr_of!(RET);
(*_7) = 22655_u16 as usize;
_8 = _6 != _11;
Call(RET = core::intrinsics::transmute(_6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = core::ptr::addr_of!((*_7));
RET = !3_usize;
(*_7) = 7770346007150842761_usize;
_6 = -_11;
_4 = _2;
_6 = _9;
_6 = _9 + _9;
_4 = [839527927_i32];
_1 = _8 >= _8;
_5 = 3184_i16;
_4 = [1730913268_i32];
match (*_7) {
7770346007150842761 => bb5,
_ => bb4
}
}
bb4 = {
_6 = 9223372036854775807_isize << _5;
_9 = (-760703436_i32) as isize;
RET = (-398404238_i32) as usize;
(*_7) = 7_usize + 13935525256622791213_usize;
_5 = _6 as i16;
_6 = _9 + _9;
RET = 186940867561675512737182970582281052502_u128 as usize;
_5 = 37_i8 as i16;
_1 = _8;
_1 = _6 > _6;
_1 = _8 ^ _8;
_5 = !(-31201_i16);
_9 = 2171310860420705861_u64 as isize;
_9 = _6;
_11 = !_9;
(*_7) = 2_usize - 6840508282026150792_usize;
Call(_10 = fn4(Move(_7), _1, _2, _2, _6, _11, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
RET = 7_usize;
_9 = _6 ^ _11;
_1 = !_8;
(*_7) = !7928621095990697390_usize;
_5 = 336681153712173463186488019311173357621_u128 as i16;
_4 = [1627455227_i32];
_10 = ['\u{1cad1}','\u{38bdc}','\u{cba40}','\u{9f0d1}'];
RET = 17331561987058978033_u64 as usize;
_1 = _9 <= _9;
(*_7) = _1 as usize;
RET = 3_usize;
_5 = 29183_i16;
RET = _6 as usize;
_5 = (-11735_i16) * 20714_i16;
_6 = !_9;
(*_7) = 0_usize & 14381122835849096322_usize;
_6 = _9;
(*_7) = !3_usize;
_14 = 101_u8 | 151_u8;
_1 = !_8;
_4 = [1449390192_i32];
_4 = [(-1364724138_i32)];
_17 = [9667_u16,18518_u16,17992_u16,57739_u16];
Goto(bb6)
}
bb6 = {
RET = !7511958300098215180_usize;
_11 = _6;
_1 = _11 != _9;
_7 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb7 = {
_4 = [(-1123760169_i32)];
_8 = (*_7) >= (*_7);
_14 = !132_u8;
_14 = 46_u8;
_4 = [1428383795_i32];
_5 = 30150_i16;
_6 = _11;
_5 = (-25337_i16);
_6 = 6325389603762823892_i64 as isize;
_1 = !_8;
_4 = [(-736038800_i32)];
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431768186119 => bb9,
_ => bb8
}
}
bb8 = {
RET = !7511958300098215180_usize;
_11 = _6;
_1 = _11 != _9;
_7 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb9 = {
_6 = (-2713401430008925773_i64) as isize;
RET = !5877092287018541196_usize;
_11 = -_6;
_10 = ['\u{e1ba2}','\u{3b24c}','\u{b2694}','\u{e692}'];
RET = 16494739896387057344_usize - 1_usize;
RET = 4_usize;
_11 = _9;
_9 = -_11;
_19 = _11 >> _9;
_14 = 132_u8 * 167_u8;
_10 = ['\u{b4829}','\u{3d33b}','\u{b5cae}','\u{6a99c}'];
_6 = _14 as isize;
(*_7) = 3_usize - 7_usize;
_19 = _11 + _9;
_8 = !_1;
_2 = [(-1810389724_i32)];
_18 = (*_7) as f32;
_10 = ['\u{64586}','\u{ed6d3}','\u{b1192}','\u{61e0e}'];
_4 = [13435224_i32];
_7 = core::ptr::addr_of!((*_7));
_7 = core::ptr::addr_of!((*_7));
Goto(bb10)
}
bb10 = {
(*_7) = (-64790462398411661157039303175727319874_i128) as usize;
_9 = _11;
_6 = _11;
_17 = [59143_u16,64138_u16,13628_u16,26425_u16];
_20 = &mut _14;
_17 = [50184_u16,23650_u16,7801_u16,20385_u16];
_5 = (-4719_i16) ^ 13342_i16;
_22 = core::ptr::addr_of_mut!(_16);
(*_22) = '\u{b7ab1}';
(*_22) = '\u{396e4}';
_21 = Adt27::Variant2 { fld0: (-5964225336192608243_i64),fld1: (*_22),fld2: 112792460446174176813097338925271916022_u128,fld3: _5 };
_23 = 5022780920973487114_i64 as f64;
_2 = [1704080198_i32];
_11 = -_19;
_21 = Adt27::Variant1 { fld0: 877809077457020049_i64 };
_1 = _8;
(*_20) = 24_u8 >> _11;
place!(Field::<i64>(Variant(_21, 1), 0)) = 2300121514_u32 as i64;
_9 = _19;
(*_7) = !11871831671906720342_usize;
place!(Field::<i64>(Variant(_21, 1), 0)) = !(-6313019961101675466_i64);
_14 = 225_u8;
(*_22) = '\u{a9258}';
(*_22) = '\u{95f33}';
place!(Field::<i64>(Variant(_21, 1), 0)) = (-23408635251498698_i64) ^ 8319229755462616997_i64;
(*_22) = '\u{54c8f}';
(*_7) = 6_usize;
(*_22) = '\u{b7996}';
_9 = _19;
_19 = !_11;
match (*_7) {
6 => bb12,
_ => bb11
}
}
bb11 = {
RET = !7511958300098215180_usize;
_11 = _6;
_1 = _11 != _9;
_7 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb12 = {
_17 = [58780_u16,64711_u16,13566_u16,64793_u16];
_24 = &_14;
place!(Field::<i64>(Variant(_21, 1), 0)) = _23 as i64;
SetDiscriminant(_21, 2);
_5 = (-2_i16) - 8254_i16;
_25 = (*_22);
place!(Field::<i16>(Variant(_21, 2), 3)) = _5 - _5;
place!(Field::<i64>(Variant(_21, 2), 0)) = (-5026067393153009464_i64) ^ 5628492301165564051_i64;
_25 = (*_22);
_6 = _11;
_21 = Adt27::Variant1 { fld0: 6367673658324803484_i64 };
_16 = _25;
_25 = (*_22);
(*_7) = 9168186393880868213_usize - 16802524010868403867_usize;
_11 = 61951_u16 as isize;
_24 = &(*_24);
_22 = core::ptr::addr_of_mut!(_16);
_9 = _11 * _6;
(*_7) = 4_usize ^ 0_usize;
_1 = !_8;
_5 = !(-30002_i16);
_21 = Adt27::Variant1 { fld0: (-7672999411502864600_i64) };
_24 = &(*_24);
_10 = [_16,_25,_16,(*_22)];
_17 = [28510_u16,48596_u16,10817_u16,35431_u16];
match _14 {
0 => bb4,
1 => bb7,
2 => bb13,
3 => bb14,
225 => bb16,
_ => bb15
}
}
bb13 = {
_7 = core::ptr::addr_of!(RET);
(*_7) = 22655_u16 as usize;
_8 = _6 != _11;
Call(RET = core::intrinsics::transmute(_6), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
(*_7) = (-64790462398411661157039303175727319874_i128) as usize;
_9 = _11;
_6 = _11;
_17 = [59143_u16,64138_u16,13628_u16,26425_u16];
_20 = &mut _14;
_17 = [50184_u16,23650_u16,7801_u16,20385_u16];
_5 = (-4719_i16) ^ 13342_i16;
_22 = core::ptr::addr_of_mut!(_16);
(*_22) = '\u{b7ab1}';
(*_22) = '\u{396e4}';
_21 = Adt27::Variant2 { fld0: (-5964225336192608243_i64),fld1: (*_22),fld2: 112792460446174176813097338925271916022_u128,fld3: _5 };
_23 = 5022780920973487114_i64 as f64;
_2 = [1704080198_i32];
_11 = -_19;
_21 = Adt27::Variant1 { fld0: 877809077457020049_i64 };
_1 = _8;
(*_20) = 24_u8 >> _11;
place!(Field::<i64>(Variant(_21, 1), 0)) = 2300121514_u32 as i64;
_9 = _19;
(*_7) = !11871831671906720342_usize;
place!(Field::<i64>(Variant(_21, 1), 0)) = !(-6313019961101675466_i64);
_14 = 225_u8;
(*_22) = '\u{a9258}';
(*_22) = '\u{95f33}';
place!(Field::<i64>(Variant(_21, 1), 0)) = (-23408635251498698_i64) ^ 8319229755462616997_i64;
(*_22) = '\u{54c8f}';
(*_7) = 6_usize;
(*_22) = '\u{b7996}';
_9 = _19;
_19 = !_11;
match (*_7) {
6 => bb12,
_ => bb11
}
}
bb15 = {
RET = !7511958300098215180_usize;
_11 = _6;
_1 = _11 != _9;
_7 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb16 = {
_22 = core::ptr::addr_of_mut!(_16);
place!(Field::<i64>(Variant(_21, 1), 0)) = (-7086984240802949761_i64);
_16 = _25;
RET = 16063544576195761969_usize;
_17 = [20234_u16,37096_u16,26704_u16,23326_u16];
_16 = _25;
(*_7) = Field::<i64>(Variant(_21, 1), 0) as usize;
Goto(bb17)
}
bb17 = {
Call(_31 = dump_var(3_usize, 6_usize, Move(_6), 4_usize, Move(_4), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_31 = dump_var(3_usize, 11_usize, Move(_11), 2_usize, Move(_2), 19_usize, Move(_19), 32_usize, _32), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: *const usize,mut _2: bool,mut _3: [i32; 1],mut _4: [i32; 1],mut _5: isize,mut _6: isize,mut _7: bool) -> [char; 4] {
mir! {
type RET = [char; 4];
let _8: *const &'static mut u32;
let _9: u8;
let _10: ([isize; 4],);
let _11: i32;
let _12: usize;
let _13: [u16; 7];
let _14: isize;
let _15: i64;
let _16: char;
let _17: isize;
let _18: f64;
let _19: char;
let _20: f64;
let _21: [i32; 1];
let _22: f64;
let _23: [u32; 3];
let _24: i128;
let _25: [i32; 8];
let _26: [u64; 7];
let _27: f32;
let _28: u128;
let _29: [i128; 2];
let _30: [u64; 6];
let _31: usize;
let _32: f64;
let _33: &'static f32;
let _34: isize;
let _35: [i128; 4];
let _36: ();
let _37: ();
{
_2 = !_7;
RET = ['\u{8b054}','\u{2d8a9}','\u{cc048}','\u{a143b}'];
_3 = [(-68895497_i32)];
RET = ['\u{109b4}','\u{4a941}','\u{aae8c}','\u{50b27}'];
_2 = _7 >= _7;
_3 = [(-808274009_i32)];
RET = ['\u{45fb0}','\u{a38e6}','\u{e38bb}','\u{412a0}'];
_10.0 = [_6,_6,_5,_6];
_9 = !72_u8;
_4 = [(-393246512_i32)];
_2 = _7;
_7 = _2;
_1 = core::ptr::addr_of!(_12);
_9 = !165_u8;
_7 = !_2;
_3 = _4;
(*_1) = 4_usize;
_9 = !231_u8;
_2 = !_7;
_2 = _6 >= _5;
RET = ['\u{a58fa}','\u{14004}','\u{9f7cb}','\u{21edb}'];
_1 = core::ptr::addr_of!((*_1));
(*_1) = 112707339068580896499421770583728954767_u128 as usize;
(*_1) = !14106935744350644951_usize;
RET = ['\u{88ea9}','\u{b5717}','\u{512c4}','\u{67743}'];
Call(_8 = fn5(_12, _5, _6, _10.0, _2, _6, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10.0 = [_5,_6,_6,_6];
_5 = -_6;
_14 = _6 | _5;
Call(_14 = fn6(Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14 = _5 | _5;
_6 = 2779929483198913550_u64 as isize;
_6 = _14 - _14;
_13 = [11666_u16,62320_u16,3053_u16,4891_u16,50814_u16,22220_u16,111_u16];
_11 = !1356116954_i32;
(*_1) = _9 as usize;
(*_1) = 5_usize << _6;
_10.0 = [_14,_6,_5,_14];
_11 = 634803281_i32 & 1252658857_i32;
_4 = _3;
RET = ['\u{79738}','\u{deb3a}','\u{8ed48}','\u{58e49}'];
RET = ['\u{c3d12}','\u{eab32}','\u{185bf}','\u{890b9}'];
_10.0 = [_6,_6,_14,_6];
_15 = _9 as i64;
RET = ['\u{adbdc}','\u{2a191}','\u{f7a7f}','\u{f03dc}'];
_4 = [_11];
RET = ['\u{708f8}','\u{de26d}','\u{47acc}','\u{5afa8}'];
_3 = _4;
_3 = _4;
_10.0 = [_6,_5,_6,_14];
_15 = _2 as i64;
RET = ['\u{eb611}','\u{3b1bb}','\u{ee5a5}','\u{44a62}'];
_2 = _7 & _7;
_9 = '\u{5aa75}' as u8;
_10.0 = [_14,_14,_6,_6];
RET = ['\u{2b7a3}','\u{1cc9f}','\u{9cfab}','\u{2577d}'];
_12 = 4_usize;
_13[_12] = 22750_u16 & 6242_u16;
Goto(bb3)
}
bb3 = {
_12 = 39692959461377959893095620920643644101_i128 as usize;
RET = ['\u{97132}','\u{40502}','\u{1f5d5}','\u{63e4a}'];
_17 = !_6;
(*_1) = !2_usize;
_17 = _6 + _6;
Goto(bb4)
}
bb4 = {
_18 = 163753370818244692119594470484615047163_u128 as f64;
RET = ['\u{b20a9}','\u{d8908}','\u{dfdbf}','\u{aa8d4}'];
_18 = 9170283780459891330_u64 as f64;
Goto(bb5)
}
bb5 = {
_13 = [36895_u16,30598_u16,31638_u16,31493_u16,34786_u16,56153_u16,9914_u16];
RET = ['\u{1943d}','\u{5a349}','\u{82b01}','\u{916c9}'];
_2 = _7 ^ _7;
_11 = (-1506782455_i32) ^ 309104812_i32;
_7 = _2;
_6 = _14;
(*_1) = 2_usize * 1_usize;
(*_1) = 17676536744991806211_usize;
_6 = 1142044268_u32 as isize;
_13 = [58739_u16,59763_u16,61016_u16,4755_u16,53549_u16,63384_u16,34479_u16];
_19 = '\u{6ea82}';
_16 = _19;
(*_1) = 16110684471652353148_usize + 5928116940105429429_usize;
_10.0 = [_17,_17,_5,_17];
_11 = -(-1773713007_i32);
_10.0 = [_17,_17,_17,_17];
_16 = _19;
_15 = 6561934736646503481_i64;
_18 = (-4628_i16) as f64;
_6 = !_17;
Goto(bb6)
}
bb6 = {
_16 = _19;
_21 = [_11];
_4 = [_11];
_7 = _2 | _2;
_12 = !6312165093611475382_usize;
_12 = 4687950412262458571_usize;
_12 = 0_usize;
RET[_12] = _16;
_13 = [9041_u16,34356_u16,63654_u16,24347_u16,57143_u16,5070_u16,32406_u16];
_9 = !133_u8;
_3[_12] = _11 >> _21[_12];
_10.0 = [_17,_17,_6,_5];
_3 = [_11];
_2 = !_7;
_1 = core::ptr::addr_of!((*_1));
_2 = !_7;
_21 = [_4[_12]];
Goto(bb7)
}
bb7 = {
RET[_12] = _19;
_21 = _4;
_15 = 1852087114614279278_i64;
_13[_12] = 3831840691_u32 as u16;
_10.0 = [_17,_14,_17,_17];
_16 = RET[_12];
_3 = [_21[_12]];
_17 = (*_1) as isize;
_7 = _2 ^ _2;
_5 = _6;
match _15 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
1852087114614279278 => bb12,
_ => bb11
}
}
bb8 = {
_10.0 = [_5,_6,_6,_6];
_5 = -_6;
_14 = _6 | _5;
Call(_14 = fn6(Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_13 = [36895_u16,30598_u16,31638_u16,31493_u16,34786_u16,56153_u16,9914_u16];
RET = ['\u{1943d}','\u{5a349}','\u{82b01}','\u{916c9}'];
_2 = _7 ^ _7;
_11 = (-1506782455_i32) ^ 309104812_i32;
_7 = _2;
_6 = _14;
(*_1) = 2_usize * 1_usize;
(*_1) = 17676536744991806211_usize;
_6 = 1142044268_u32 as isize;
_13 = [58739_u16,59763_u16,61016_u16,4755_u16,53549_u16,63384_u16,34479_u16];
_19 = '\u{6ea82}';
_16 = _19;
(*_1) = 16110684471652353148_usize + 5928116940105429429_usize;
_10.0 = [_17,_17,_5,_17];
_11 = -(-1773713007_i32);
_10.0 = [_17,_17,_17,_17];
_16 = _19;
_15 = 6561934736646503481_i64;
_18 = (-4628_i16) as f64;
_6 = !_17;
Goto(bb6)
}
bb10 = {
_18 = 163753370818244692119594470484615047163_u128 as f64;
RET = ['\u{b20a9}','\u{d8908}','\u{dfdbf}','\u{aa8d4}'];
_18 = 9170283780459891330_u64 as f64;
Goto(bb5)
}
bb11 = {
_12 = 39692959461377959893095620920643644101_i128 as usize;
RET = ['\u{97132}','\u{40502}','\u{1f5d5}','\u{63e4a}'];
_17 = !_6;
(*_1) = !2_usize;
_17 = _6 + _6;
Goto(bb4)
}
bb12 = {
_26[_12] = !13055374752585450860_u64;
_16 = RET[_12];
_1 = core::ptr::addr_of!(_12);
_22 = _12 as f64;
(*_1) = !6_usize;
_6 = (*_1) as isize;
_10.0 = [_5,_5,_5,_5];
_23 = [1224201055_u32,2711155300_u32,3052628760_u32];
_19 = _16;
_12 = !9372448168692802579_usize;
_25 = [_11,_11,_11,_11,_11,_11,_11,_11];
_13 = [38979_u16,52857_u16,56244_u16,35422_u16,52209_u16,33067_u16,25021_u16];
_27 = _15 as f32;
_3 = [_11];
_12 = 0_usize ^ 10765594950153719451_usize;
Goto(bb13)
}
bb13 = {
_31 = (*_1) ^ (*_1);
_18 = -_22;
_28 = 54681846871787673706296665526972556929_u128 >> (*_1);
_22 = -_18;
_30 = [14304455932120021316_u64,8830174431718436514_u64,4959708055435664707_u64,4591343009530095603_u64,30706387229002995_u64,12184399541052583524_u64];
_18 = _15 as f64;
_26 = [15878641562817226740_u64,7818922034508652835_u64,17580337363708012742_u64,8828025930482504160_u64,1105830931585625931_u64,13999911365456220840_u64,72515135094508806_u64];
_29 = [162616404946019410319445790390668434868_i128,7809350026509491791791603671323715091_i128];
_18 = -_22;
_33 = &_27;
_21 = [_11];
(*_1) = 951113949_u32 as usize;
_15 = 3752362377192474249_i64 >> _5;
_20 = _18;
_16 = _19;
_1 = core::ptr::addr_of!(_31);
_28 = !71415356049216501350970504337809869718_u128;
_4 = _21;
(*_1) = 133393484541435374109360528840921685209_i128 as usize;
_24 = 164613479705189705247173633848394786633_i128 | 27621364106595605111999459483368309599_i128;
_4 = _3;
Goto(bb14)
}
bb14 = {
_13 = [51973_u16,26262_u16,34996_u16,62194_u16,6557_u16,129_u16,17119_u16];
_24 = !(-57989757286672734104948076131704190653_i128);
_20 = _18;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(4_usize, 3_usize, Move(_3), 23_usize, Move(_23), 24_usize, Move(_24), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(4_usize, 14_usize, Move(_14), 16_usize, Move(_16), 7_usize, Move(_7), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(4_usize, 21_usize, Move(_21), 12_usize, Move(_12), 15_usize, Move(_15), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: usize,mut _2: isize,mut _3: isize,mut _4: [isize; 4],mut _5: bool,mut _6: isize,mut _7: bool) -> *const &'static mut u32 {
mir! {
type RET = *const &'static mut u32;
let _8: isize;
let _9: (*mut Adt27, *mut (&'static u8, *const usize, *const u128, *const u128), Adt47, Adt26);
let _10: &'static Adt40;
let _11: *const u128;
let _12: *const u128;
let _13: Adt27;
let _14: [u16; 7];
let _15: &'static mut u32;
let _16: isize;
let _17: bool;
let _18: (isize, *mut u16, i128, i128);
let _19: i32;
let _20: bool;
let _21: [isize; 2];
let _22: ([i64; 4],);
let _23: usize;
let _24: (*mut u16, char);
let _25: u32;
let _26: ([u16; 4], f32, *mut char);
let _27: i8;
let _28: u32;
let _29: *mut (&'static u8, *const usize, *const u128, *const u128);
let _30: [i32; 1];
let _31: u8;
let _32: char;
let _33: f32;
let _34: isize;
let _35: u8;
let _36: [i128; 4];
let _37: f64;
let _38: isize;
let _39: bool;
let _40: [i128; 2];
let _41: [u32; 3];
let _42: f32;
let _43: &'static u8;
let _44: Adt20;
let _45: bool;
let _46: [u32; 3];
let _47: Adt47;
let _48: usize;
let _49: u16;
let _50: (u64, *mut &'static mut u32);
let _51: ([isize; 4],);
let _52: ([u16; 4], f32, *mut char);
let _53: f64;
let _54: *const u128;
let _55: f32;
let _56: [i128; 1];
let _57: [i128; 1];
let _58: isize;
let _59: ();
let _60: ();
{
_6 = _2 * _3;
_4 = [_2,_3,_2,_6];
_6 = '\u{41ebd}' as isize;
_7 = _5;
_6 = !_2;
_8 = (-1643091805_i32) as isize;
_1 = (-17515_i16) as usize;
_5 = _7 < _7;
_7 = _5 | _5;
_2 = _3 - _6;
Goto(bb1)
}
bb1 = {
_8 = 384314103_u32 as isize;
_4 = [_2,_2,_3,_2];
_4 = [_3,_2,_3,_2];
_5 = _7 != _7;
_4 = [_8,_6,_6,_2];
_4 = [_2,_6,_6,_2];
_4 = [_3,_2,_2,_6];
_4 = [_2,_2,_6,_6];
_1 = _7 as usize;
_8 = _6;
_6 = !_8;
_2 = _3;
Goto(bb2)
}
bb2 = {
_6 = !_2;
_5 = !_7;
_4 = [_3,_8,_2,_6];
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_5 = !_7;
_5 = _7;
_1 = 2775029171_u32 as usize;
_1 = 32252928907999861_usize ^ 9163599160033548798_usize;
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = _2 & _3;
Goto(bb3)
}
bb3 = {
_16 = _2;
_5 = !_7;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = 17174_i16 as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
_13 = Adt27::Variant1 { fld0: 7830557563355132203_i64 };
_17 = !_5;
_16 = '\u{152c4}' as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = _5 as i64;
_9.0 = core::ptr::addr_of_mut!(_13);
_7 = _5;
_19 = 110521432401045940854083900816922151603_i128 as i32;
_9.0 = core::ptr::addr_of_mut!(_13);
_14 = [1172_u16,33040_u16,38247_u16,8098_u16,59208_u16,31044_u16,14081_u16];
_2 = _8;
_7 = !_17;
_19 = 1744576777_i32 ^ (-1604624495_i32);
place!(Field::<i64>(Variant(_13, 1), 0)) = 3570638263783703522_i64;
_8 = _3;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = 166062182068459046_i64;
Goto(bb4)
}
bb4 = {
_18.3 = Field::<i64>(Variant(_13, 1), 0) as i128;
_18.0 = !_8;
_18.3 = 78898835122654683429223755310268541611_i128 ^ (-21245208433720303024047895536169038661_i128);
Goto(bb5)
}
bb5 = {
_22.0 = [Field::<i64>(Variant(_13, 1), 0),Field::<i64>(Variant(_13, 1), 0),Field::<i64>(Variant(_13, 1), 0),Field::<i64>(Variant(_13, 1), 0)];
_21 = [_2,_8];
_14 = [62722_u16,58055_u16,59419_u16,6812_u16,21361_u16,54415_u16,63429_u16];
Goto(bb6)
}
bb6 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb7 = {
_9.0 = core::ptr::addr_of_mut!(_13);
_18.2 = _18.3;
_9.0 = core::ptr::addr_of_mut!(_13);
_16 = _8 * _18.0;
_13 = Adt27::Variant2 { fld0: (-179690632644846981_i64),fld1: '\u{c1c80}',fld2: 104547061205927130401528443499188546790_u128,fld3: (-25113_i16) };
_22.0 = [4774463826324059166_i64,(-2392668830245625984_i64),1168405089156383732_i64,1639494009105988191_i64];
_3 = _18.0 ^ _6;
_18.2 = _1 as i128;
match _1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb8,
8873070430430397427 => bb10,
_ => bb9
}
}
bb8 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb9 = {
_6 = !_2;
_5 = !_7;
_4 = [_3,_8,_2,_6];
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_5 = !_7;
_5 = _7;
_1 = 2775029171_u32 as usize;
_1 = 32252928907999861_usize ^ 9163599160033548798_usize;
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = _2 & _3;
Goto(bb3)
}
bb10 = {
_23 = _1;
place!(Field::<i16>(Variant(_13, 2), 3)) = -19450_i16;
place!(Field::<u128>(Variant(_13, 2), 2)) = 2347704487_u32 as u128;
_18.0 = !_2;
_1 = _23 / _23;
_21 = [_3,_18.0];
_13 = Adt27::Variant2 { fld0: (-4373397560410940897_i64),fld1: '\u{10dc46}',fld2: 318335815792118226177659302484233395922_u128,fld3: (-18431_i16) };
_4 = [_18.0,_3,_16,_6];
_6 = _3;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 2), 2)));
_16 = _17 as isize;
_21 = [_18.0,_3];
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<char>(Variant(_13, 2), 1)) = '\u{86d37}';
_18.3 = _18.2;
_6 = 4059296271_u32 as isize;
place!(Field::<u128>(Variant(_13, 2), 2)) = (-104_i8) as u128;
_18.2 = _18.3;
_25 = 1469818515_u32;
place!(Field::<i64>(Variant(_13, 2), 0)) = 2188082341807502861_i64 * 5015833627522071899_i64;
_9.0 = core::ptr::addr_of_mut!(_13);
_20 = _5 ^ _5;
place!(Field::<char>(Variant(_13, 2), 1)) = '\u{bc4cd}';
_23 = _18.0 as usize;
_8 = 59856_u16 as isize;
place!(Field::<i16>(Variant(_13, 2), 3)) = 1143_i16 * 2705_i16;
_23 = !_1;
_21 = [_16,_2];
_3 = _23 as isize;
match _25 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb8,
6 => bb11,
1469818515 => bb13,
_ => bb12
}
}
bb11 = {
_18.3 = Field::<i64>(Variant(_13, 1), 0) as i128;
_18.0 = !_8;
_18.3 = 78898835122654683429223755310268541611_i128 ^ (-21245208433720303024047895536169038661_i128);
Goto(bb5)
}
bb12 = {
_6 = !_2;
_5 = !_7;
_4 = [_3,_8,_2,_6];
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_5 = !_7;
_5 = _7;
_1 = 2775029171_u32 as usize;
_1 = 32252928907999861_usize ^ 9163599160033548798_usize;
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = _2 & _3;
Goto(bb3)
}
bb13 = {
_4 = [_16,_16,_16,_2];
_26.0 = [108_u16,4855_u16,41400_u16,42024_u16];
_8 = _16;
_6 = !_16;
_13 = Adt27::Variant2 { fld0: (-775836939978273790_i64),fld1: '\u{46fac}',fld2: 308331768852124864710435450632878392889_u128,fld3: (-16320_i16) };
_2 = _8;
_11 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 2), 2)));
_16 = _8 * _2;
Call(_27 = core::intrinsics::transmute(_7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_27 = 8_i8;
_18.0 = -_2;
(*_11) = !130868602913303226797186311685627723758_u128;
_4 = [_16,_16,_18.0,_3];
place!(Field::<char>(Variant(_13, 2), 1)) = '\u{45e65}';
_8 = _18.0 - _2;
_9.0 = core::ptr::addr_of_mut!(_13);
_12 = core::ptr::addr_of!((*_11));
place!(Field::<i16>(Variant(_13, 2), 3)) = !(-31696_i16);
_6 = _16;
_25 = 1729151681_u32;
place!(Field::<u128>(Variant(_13, 2), 2)) = 2795951207385413321_i64 as u128;
(*_11) = !46171160398766774217156915042645233922_u128;
place!(Field::<i64>(Variant(_13, 2), 0)) = (-2540204819179926993_i64) - (-1879734274814084206_i64);
place!(Field::<i16>(Variant(_13, 2), 3)) = _19 as i16;
place!(Field::<i16>(Variant(_13, 2), 3)) = 15919_i16;
_26.0 = [28502_u16,55513_u16,3027_u16,38662_u16];
_27 = !(-68_i8);
_23 = _1;
_28 = _25 ^ _25;
(*_12) = _18.3 as u128;
_32 = Field::<char>(Variant(_13, 2), 1);
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 2), 2)));
_26.1 = (*_11) as f32;
_18.0 = !_8;
(*_11) = !314050891969470096654898808211776882478_u128;
_1 = !_23;
_1 = _23;
Goto(bb15)
}
bb15 = {
_34 = _27 as isize;
_33 = -_26.1;
_9.0 = core::ptr::addr_of_mut!(_13);
SetDiscriminant(_13, 0);
_27 = 9219022584296599901_u64 as i8;
_18.3 = _18.2;
_31 = 144_u8;
_22.0 = [(-4899128669557609253_i64),2054266630084012883_i64,9113183408577770092_i64,734388328951539629_i64];
place!(Field::<i8>(Variant(_13, 0), 0)) = _31 as i8;
_16 = _31 as isize;
_23 = 23414_u16 as usize;
_38 = _18.0 | _8;
place!(Field::<f64>(Variant(_13, 0), 2)) = _31 as f64;
_37 = Field::<f64>(Variant(_13, 0), 2) - Field::<f64>(Variant(_13, 0), 2);
_26.2 = core::ptr::addr_of_mut!(_32);
_32 = '\u{bb1ac}';
match _31 {
0 => bb11,
1 => bb16,
144 => bb18,
_ => bb17
}
}
bb16 = {
_16 = _2;
_5 = !_7;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = 17174_i16 as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
_13 = Adt27::Variant1 { fld0: 7830557563355132203_i64 };
_17 = !_5;
_16 = '\u{152c4}' as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = _5 as i64;
_9.0 = core::ptr::addr_of_mut!(_13);
_7 = _5;
_19 = 110521432401045940854083900816922151603_i128 as i32;
_9.0 = core::ptr::addr_of_mut!(_13);
_14 = [1172_u16,33040_u16,38247_u16,8098_u16,59208_u16,31044_u16,14081_u16];
_2 = _8;
_7 = !_17;
_19 = 1744576777_i32 ^ (-1604624495_i32);
place!(Field::<i64>(Variant(_13, 1), 0)) = 3570638263783703522_i64;
_8 = _3;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = 166062182068459046_i64;
Goto(bb4)
}
bb17 = {
_18.3 = Field::<i64>(Variant(_13, 1), 0) as i128;
_18.0 = !_8;
_18.3 = 78898835122654683429223755310268541611_i128 ^ (-21245208433720303024047895536169038661_i128);
Goto(bb5)
}
bb18 = {
_30 = [_19];
_3 = !_6;
_42 = _23 as f32;
place!(Field::<i8>(Variant(_13, 0), 0)) = _27 << _38;
_34 = 14381865645575463580_u64 as isize;
_17 = !_20;
_7 = !_17;
_5 = _17;
_4 = [_38,_3,_38,_8];
_4 = [_38,_8,_6,_3];
_17 = _5;
_26.0 = [62636_u16,38525_u16,64715_u16,60278_u16];
_26.1 = _19 as f32;
_8 = _38 - _38;
_33 = _42;
match _31 {
0 => bb1,
1 => bb12,
2 => bb19,
3 => bb20,
144 => bb22,
_ => bb21
}
}
bb19 = {
_16 = _2;
_5 = !_7;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = 17174_i16 as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
_13 = Adt27::Variant1 { fld0: 7830557563355132203_i64 };
_17 = !_5;
_16 = '\u{152c4}' as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = _5 as i64;
_9.0 = core::ptr::addr_of_mut!(_13);
_7 = _5;
_19 = 110521432401045940854083900816922151603_i128 as i32;
_9.0 = core::ptr::addr_of_mut!(_13);
_14 = [1172_u16,33040_u16,38247_u16,8098_u16,59208_u16,31044_u16,14081_u16];
_2 = _8;
_7 = !_17;
_19 = 1744576777_i32 ^ (-1604624495_i32);
place!(Field::<i64>(Variant(_13, 1), 0)) = 3570638263783703522_i64;
_8 = _3;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = 166062182068459046_i64;
Goto(bb4)
}
bb20 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb21 = {
_9.0 = core::ptr::addr_of_mut!(_13);
_18.2 = _18.3;
_9.0 = core::ptr::addr_of_mut!(_13);
_16 = _8 * _18.0;
_13 = Adt27::Variant2 { fld0: (-179690632644846981_i64),fld1: '\u{c1c80}',fld2: 104547061205927130401528443499188546790_u128,fld3: (-25113_i16) };
_22.0 = [4774463826324059166_i64,(-2392668830245625984_i64),1168405089156383732_i64,1639494009105988191_i64];
_3 = _18.0 ^ _6;
_18.2 = _1 as i128;
match _1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb8,
8873070430430397427 => bb10,
_ => bb9
}
}
bb22 = {
place!(Field::<i8>(Variant(_13, 0), 0)) = 14292487358703286977_u64 as i8;
_36 = [_18.2,_18.2,_18.3,_18.3];
_24.1 = _32;
_20 = _38 == _8;
place!(Field::<f64>(Variant(_13, 0), 2)) = _37;
_26.2 = core::ptr::addr_of_mut!(_32);
_16 = (-3209505378028882802_i64) as isize;
place!(Field::<u128>(Variant(_13, 0), 1)) = 328187109491971990029952161844104448455_u128;
_35 = _31 << _18.0;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
_5 = _17;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
place!(Field::<u128>(Variant(_13, 0), 1)) = !90283319938214241234411695026409679970_u128;
Goto(bb23)
}
bb23 = {
place!(Field::<i8>(Variant(_13, 0), 0)) = _27 & _27;
_18.3 = (-6461327844673612488_i64) as i128;
_39 = !_20;
_43 = &_35;
_7 = _39;
_36 = [_18.2,_18.3,_18.3,_18.3];
place!(Field::<u128>(Variant(_13, 0), 1)) = !10870843216408375493401566520676584993_u128;
_23 = _1;
_25 = _19 as u32;
_2 = Field::<i8>(Variant(_13, 0), 0) as isize;
_26.2 = core::ptr::addr_of_mut!(_24.1);
_18.0 = _38;
_18.0 = _18.3 as isize;
_7 = _39;
_25 = _39 as u32;
_36 = [_18.3,_18.3,_18.3,_18.2];
Goto(bb24)
}
bb24 = {
match _31 {
0 => bb4,
1 => bb16,
2 => bb3,
3 => bb25,
4 => bb26,
5 => bb27,
144 => bb29,
_ => bb28
}
}
bb25 = {
place!(Field::<i8>(Variant(_13, 0), 0)) = _27 & _27;
_18.3 = (-6461327844673612488_i64) as i128;
_39 = !_20;
_43 = &_35;
_7 = _39;
_36 = [_18.2,_18.3,_18.3,_18.3];
place!(Field::<u128>(Variant(_13, 0), 1)) = !10870843216408375493401566520676584993_u128;
_23 = _1;
_25 = _19 as u32;
_2 = Field::<i8>(Variant(_13, 0), 0) as isize;
_26.2 = core::ptr::addr_of_mut!(_24.1);
_18.0 = _38;
_18.0 = _18.3 as isize;
_7 = _39;
_25 = _39 as u32;
_36 = [_18.3,_18.3,_18.3,_18.2];
Goto(bb24)
}
bb26 = {
_8 = 384314103_u32 as isize;
_4 = [_2,_2,_3,_2];
_4 = [_3,_2,_3,_2];
_5 = _7 != _7;
_4 = [_8,_6,_6,_2];
_4 = [_2,_6,_6,_2];
_4 = [_3,_2,_2,_6];
_4 = [_2,_2,_6,_6];
_1 = _7 as usize;
_8 = _6;
_6 = !_8;
_2 = _3;
Goto(bb2)
}
bb27 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb28 = {
_22.0 = [Field::<i64>(Variant(_13, 1), 0),Field::<i64>(Variant(_13, 1), 0),Field::<i64>(Variant(_13, 1), 0),Field::<i64>(Variant(_13, 1), 0)];
_21 = [_2,_8];
_14 = [62722_u16,58055_u16,59419_u16,6812_u16,21361_u16,54415_u16,63429_u16];
Goto(bb6)
}
bb29 = {
_43 = &_35;
_8 = -_38;
_4 = [_38,_3,_38,_8];
SetDiscriminant(_13, 1);
_5 = _20;
_1 = _42 as usize;
_28 = !_25;
_38 = _8 + _6;
_41 = [_28,_25,_25];
_25 = _28;
_45 = _8 < _6;
_21 = [_38,_8];
_20 = _5;
match _31 {
0 => bb30,
1 => bb31,
2 => bb32,
3 => bb33,
4 => bb34,
5 => bb35,
6 => bb36,
144 => bb38,
_ => bb37
}
}
bb30 = {
_27 = 8_i8;
_18.0 = -_2;
(*_11) = !130868602913303226797186311685627723758_u128;
_4 = [_16,_16,_18.0,_3];
place!(Field::<char>(Variant(_13, 2), 1)) = '\u{45e65}';
_8 = _18.0 - _2;
_9.0 = core::ptr::addr_of_mut!(_13);
_12 = core::ptr::addr_of!((*_11));
place!(Field::<i16>(Variant(_13, 2), 3)) = !(-31696_i16);
_6 = _16;
_25 = 1729151681_u32;
place!(Field::<u128>(Variant(_13, 2), 2)) = 2795951207385413321_i64 as u128;
(*_11) = !46171160398766774217156915042645233922_u128;
place!(Field::<i64>(Variant(_13, 2), 0)) = (-2540204819179926993_i64) - (-1879734274814084206_i64);
place!(Field::<i16>(Variant(_13, 2), 3)) = _19 as i16;
place!(Field::<i16>(Variant(_13, 2), 3)) = 15919_i16;
_26.0 = [28502_u16,55513_u16,3027_u16,38662_u16];
_27 = !(-68_i8);
_23 = _1;
_28 = _25 ^ _25;
(*_12) = _18.3 as u128;
_32 = Field::<char>(Variant(_13, 2), 1);
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 2), 2)));
_26.1 = (*_11) as f32;
_18.0 = !_8;
(*_11) = !314050891969470096654898808211776882478_u128;
_1 = !_23;
_1 = _23;
Goto(bb15)
}
bb31 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb32 = {
_23 = _1;
place!(Field::<i16>(Variant(_13, 2), 3)) = -19450_i16;
place!(Field::<u128>(Variant(_13, 2), 2)) = 2347704487_u32 as u128;
_18.0 = !_2;
_1 = _23 / _23;
_21 = [_3,_18.0];
_13 = Adt27::Variant2 { fld0: (-4373397560410940897_i64),fld1: '\u{10dc46}',fld2: 318335815792118226177659302484233395922_u128,fld3: (-18431_i16) };
_4 = [_18.0,_3,_16,_6];
_6 = _3;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 2), 2)));
_16 = _17 as isize;
_21 = [_18.0,_3];
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<char>(Variant(_13, 2), 1)) = '\u{86d37}';
_18.3 = _18.2;
_6 = 4059296271_u32 as isize;
place!(Field::<u128>(Variant(_13, 2), 2)) = (-104_i8) as u128;
_18.2 = _18.3;
_25 = 1469818515_u32;
place!(Field::<i64>(Variant(_13, 2), 0)) = 2188082341807502861_i64 * 5015833627522071899_i64;
_9.0 = core::ptr::addr_of_mut!(_13);
_20 = _5 ^ _5;
place!(Field::<char>(Variant(_13, 2), 1)) = '\u{bc4cd}';
_23 = _18.0 as usize;
_8 = 59856_u16 as isize;
place!(Field::<i16>(Variant(_13, 2), 3)) = 1143_i16 * 2705_i16;
_23 = !_1;
_21 = [_16,_2];
_3 = _23 as isize;
match _25 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb8,
6 => bb11,
1469818515 => bb13,
_ => bb12
}
}
bb33 = {
place!(Field::<i8>(Variant(_13, 0), 0)) = _27 & _27;
_18.3 = (-6461327844673612488_i64) as i128;
_39 = !_20;
_43 = &_35;
_7 = _39;
_36 = [_18.2,_18.3,_18.3,_18.3];
place!(Field::<u128>(Variant(_13, 0), 1)) = !10870843216408375493401566520676584993_u128;
_23 = _1;
_25 = _19 as u32;
_2 = Field::<i8>(Variant(_13, 0), 0) as isize;
_26.2 = core::ptr::addr_of_mut!(_24.1);
_18.0 = _38;
_18.0 = _18.3 as isize;
_7 = _39;
_25 = _39 as u32;
_36 = [_18.3,_18.3,_18.3,_18.2];
Goto(bb24)
}
bb34 = {
_6 = !_2;
_5 = !_7;
_4 = [_3,_8,_2,_6];
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_5 = !_7;
_5 = _7;
_1 = 2775029171_u32 as usize;
_1 = 32252928907999861_usize ^ 9163599160033548798_usize;
_7 = _5;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = _2 & _3;
Goto(bb3)
}
bb35 = {
_16 = _2;
_5 = !_7;
_9.0 = core::ptr::addr_of_mut!(_13);
_6 = 17174_i16 as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
_13 = Adt27::Variant1 { fld0: 7830557563355132203_i64 };
_17 = !_5;
_16 = '\u{152c4}' as isize;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = _5 as i64;
_9.0 = core::ptr::addr_of_mut!(_13);
_7 = _5;
_19 = 110521432401045940854083900816922151603_i128 as i32;
_9.0 = core::ptr::addr_of_mut!(_13);
_14 = [1172_u16,33040_u16,38247_u16,8098_u16,59208_u16,31044_u16,14081_u16];
_2 = _8;
_7 = !_17;
_19 = 1744576777_i32 ^ (-1604624495_i32);
place!(Field::<i64>(Variant(_13, 1), 0)) = 3570638263783703522_i64;
_8 = _3;
_9.0 = core::ptr::addr_of_mut!(_13);
place!(Field::<i64>(Variant(_13, 1), 0)) = 166062182068459046_i64;
Goto(bb4)
}
bb36 = {
place!(Field::<i8>(Variant(_13, 0), 0)) = 14292487358703286977_u64 as i8;
_36 = [_18.2,_18.2,_18.3,_18.3];
_24.1 = _32;
_20 = _38 == _8;
place!(Field::<f64>(Variant(_13, 0), 2)) = _37;
_26.2 = core::ptr::addr_of_mut!(_32);
_16 = (-3209505378028882802_i64) as isize;
place!(Field::<u128>(Variant(_13, 0), 1)) = 328187109491971990029952161844104448455_u128;
_35 = _31 << _18.0;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
_5 = _17;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
place!(Field::<u128>(Variant(_13, 0), 1)) = !90283319938214241234411695026409679970_u128;
Goto(bb23)
}
bb37 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb38 = {
_46 = _41;
_4 = [_38,_38,_38,_38];
_16 = _8 ^ _38;
_18.3 = _18.2 * _18.2;
_13 = Adt27::Variant2 { fld0: 2031588009012632769_i64,fld1: _24.1,fld2: 215062169950648231982277198074729166130_u128,fld3: (-11013_i16) };
_13 = Adt27::Variant1 { fld0: (-8748502209509153010_i64) };
_12 = Move(_11);
_35 = _27 as u8;
_18.0 = _27 as isize;
_26.1 = _33 * _42;
_26.2 = core::ptr::addr_of_mut!(_24.1);
_6 = _27 as isize;
_18.1 = core::ptr::addr_of_mut!(_49);
_15 = &mut _28;
_33 = _26.1;
_18.3 = _18.2;
_19 = 1920557400_i32 ^ (-1264509994_i32);
_31 = (-1750275611566603349_i64) as u8;
_24.0 = core::ptr::addr_of_mut!(_49);
_17 = _20;
_24.0 = core::ptr::addr_of_mut!(_49);
_11 = Move(_12);
Goto(bb39)
}
bb39 = {
_40 = [_18.2,_18.2];
_26.1 = _42 * _33;
_18.3 = _33 as i128;
_42 = _26.1;
_50.1 = core::ptr::addr_of_mut!(_15);
_52.1 = -_26.1;
_52.2 = core::ptr::addr_of_mut!(_32);
_52 = (_26.0, _42, Move(_26.2));
_2 = !_3;
_28 = !_25;
_25 = _28;
_30 = [_19];
_7 = !_20;
_12 = Move(_11);
_18.2 = (-802042006125115501_i64) as i128;
_15 = &mut _28;
_53 = _37;
place!(Field::<i64>(Variant(_13, 1), 0)) = (-1656671413883554095_i64);
_52.0 = [35730_u16,62804_u16,55142_u16,4704_u16];
_23 = _1 & _1;
_11 = Move(_12);
_3 = !_16;
_46 = [_25,_25,(*_15)];
match Field::<i64>(Variant(_13, 1), 0) {
0 => bb1,
1 => bb38,
2 => bb40,
3 => bb41,
4 => bb42,
5 => bb43,
340282366920938463461717936017884657361 => bb45,
_ => bb44
}
}
bb40 = {
_9.0 = core::ptr::addr_of_mut!(_13);
_18.2 = _18.3;
_9.0 = core::ptr::addr_of_mut!(_13);
_16 = _8 * _18.0;
_13 = Adt27::Variant2 { fld0: (-179690632644846981_i64),fld1: '\u{c1c80}',fld2: 104547061205927130401528443499188546790_u128,fld3: (-25113_i16) };
_22.0 = [4774463826324059166_i64,(-2392668830245625984_i64),1168405089156383732_i64,1639494009105988191_i64];
_3 = _18.0 ^ _6;
_18.2 = _1 as i128;
match _1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb8,
8873070430430397427 => bb10,
_ => bb9
}
}
bb41 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb42 = {
place!(Field::<i8>(Variant(_13, 0), 0)) = 14292487358703286977_u64 as i8;
_36 = [_18.2,_18.2,_18.3,_18.3];
_24.1 = _32;
_20 = _38 == _8;
place!(Field::<f64>(Variant(_13, 0), 2)) = _37;
_26.2 = core::ptr::addr_of_mut!(_32);
_16 = (-3209505378028882802_i64) as isize;
place!(Field::<u128>(Variant(_13, 0), 1)) = 328187109491971990029952161844104448455_u128;
_35 = _31 << _18.0;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
_5 = _17;
_12 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
place!(Field::<u128>(Variant(_13, 0), 1)) = !90283319938214241234411695026409679970_u128;
Goto(bb23)
}
bb43 = {
_9.0 = core::ptr::addr_of_mut!(_13);
_18.2 = _18.3;
_9.0 = core::ptr::addr_of_mut!(_13);
_16 = _8 * _18.0;
_13 = Adt27::Variant2 { fld0: (-179690632644846981_i64),fld1: '\u{c1c80}',fld2: 104547061205927130401528443499188546790_u128,fld3: (-25113_i16) };
_22.0 = [4774463826324059166_i64,(-2392668830245625984_i64),1168405089156383732_i64,1639494009105988191_i64];
_3 = _18.0 ^ _6;
_18.2 = _1 as i128;
match _1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb8,
8873070430430397427 => bb10,
_ => bb9
}
}
bb44 = {
_21 = [_8,_6];
_1 = 8873070430430397427_usize;
SetDiscriminant(_13, 3);
_18.3 = (-101119176385007172503728123344822596528_i128) ^ (-136673935898364774962337343531484247781_i128);
_18.0 = -_6;
_22.0 = [3699434765519184247_i64,(-1598786287122731943_i64),4905122189348203416_i64,5602318085995217336_i64];
place!(Field::<bool>(Variant(_13, 3), 0)) = !_7;
_14 = [10782_u16,30643_u16,37120_u16,5376_u16,3816_u16,2168_u16,64617_u16];
_19 = !1857660159_i32;
_18.3 = !106143416067153061243294699284139944218_i128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _5;
_16 = _7 as isize;
Goto(bb7)
}
bb45 = {
SetDiscriminant(_13, 0);
_39 = !_45;
_55 = _19 as f32;
RET = core::ptr::addr_of!(_15);
_52.0 = _26.0;
_12 = Move(_11);
_54 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_13, 0), 1)));
_36 = [_18.3,_18.3,_18.3,_18.3];
_36 = [_18.3,_18.3,_18.2,_18.2];
Goto(bb46)
}
bb46 = {
Call(_59 = dump_var(5_usize, 2_usize, Move(_2), 6_usize, Move(_6), 3_usize, Move(_3), 35_usize, Move(_35)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_59 = dump_var(5_usize, 17_usize, Move(_17), 22_usize, Move(_22), 19_usize, Move(_19), 34_usize, Move(_34)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_59 = dump_var(5_usize, 25_usize, Move(_25), 16_usize, Move(_16), 39_usize, Move(_39), 4_usize, Move(_4)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Call(_59 = dump_var(5_usize, 36_usize, Move(_36), 14_usize, Move(_14), 38_usize, Move(_38), 60_usize, _60), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: *const &'static mut u32) -> isize {
mir! {
type RET = isize;
let _2: [i128; 4];
let _3: char;
let _4: [i32; 1];
let _5: *mut char;
let _6: isize;
let _7: [i32; 1];
let _8: [i32; 1];
let _9: u8;
let _10: isize;
let _11: [u64; 6];
let _12: [i32; 4];
let _13: *const &'static mut u8;
let _14: *const i8;
let _15: (&'static u8, *const usize, *const u128, *const u128);
let _16: isize;
let _17: &'static Adt40;
let _18: u128;
let _19: isize;
let _20: *const [i32; 4];
let _21: isize;
let _22: [isize; 4];
let _23: [i64; 4];
let _24: isize;
let _25: u64;
let _26: f64;
let _27: isize;
let _28: u64;
let _29: &'static mut *const &'static mut u32;
let _30: ();
let _31: ();
{
RET = 12871955871944883396_usize as isize;
RET = (-9223372036854775808_isize);
RET = -(-115_isize);
RET = 213_u8 as isize;
RET = !33_isize;
RET = !28_isize;
RET = 56327_u16 as isize;
_2 = [4052008893028161789597564882609996070_i128,130043058592118320278612546053419749536_i128,135562305815257200664808761686180116151_i128,36376107654961134805960846490902915006_i128];
_2 = [111203524779072843416266077075085987884_i128,(-139828028052265861313109533138396239631_i128),(-74339695178259508706047721260535504886_i128),121258878911444766327023164311376344750_i128];
RET = (-9223372036854775808_isize) >> 1_usize;
_2 = [(-50012940886499472853081068145178753427_i128),(-43140680632352808118696707694751759282_i128),46862728457559119040233979014717730981_i128,140213122095477655693399694693999882675_i128];
_3 = '\u{915bb}';
Call(_2 = fn7(Move(_1), RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = (-43_isize);
_2 = [(-31111880731550408554629216727258314759_i128),(-56279219986923072498647238040865645718_i128),7513388846605723393492848563014221215_i128,82618951889963975706069221199414734047_i128];
_4 = [422942447_i32];
_5 = core::ptr::addr_of_mut!(_3);
_2 = [128096121652838653476299644576008593812_i128,113978434941283387777553956126272333091_i128,(-28534307724450317678047693187027875828_i128),(-89747835633964356908029625927641390783_i128)];
RET = 29422277738719077362078952128029792836_u128 as isize;
_3 = '\u{d4a4b}';
_3 = '\u{7ef59}';
(*_5) = '\u{e13fc}';
Goto(bb2)
}
bb2 = {
RET = 501363324_u32 as isize;
RET = 68815876_u32 as isize;
_4 = [1147036698_i32];
Goto(bb3)
}
bb3 = {
_5 = core::ptr::addr_of_mut!((*_5));
_4 = [(-85327827_i32)];
(*_5) = '\u{3d6d5}';
_2 = [(-70581940928201068290682834729837411384_i128),(-30133578956819207063258998790409788972_i128),84831745086118811906427686187531989180_i128,61635716162040581577922975733565301622_i128];
_4 = [381355511_i32];
_3 = '\u{fa1dc}';
RET = (-127140484400375401946036558726324070873_i128) as isize;
(*_5) = '\u{fca9a}';
RET = !9223372036854775807_isize;
_7 = _4;
_4 = _7;
(*_5) = '\u{d3666}';
_9 = 34_u8;
(*_5) = '\u{d9b38}';
_8 = _7;
_8 = [(-1709596091_i32)];
_6 = RET;
(*_5) = '\u{e9d28}';
_10 = 563212208_i32 as isize;
_6 = RET;
_4 = [(-272220887_i32)];
_2 = [(-30342881375839147334950612979409584198_i128),45469140031004627299524265467100648632_i128,(-132779960327510211818166024487773162580_i128),27988083071284510937080288583849209077_i128];
(*_5) = '\u{b2886}';
Goto(bb4)
}
bb4 = {
(*_5) = '\u{d08d}';
(*_5) = '\u{f27b9}';
match _9 {
0 => bb1,
1 => bb2,
2 => bb3,
34 => bb6,
_ => bb5
}
}
bb5 = {
RET = 501363324_u32 as isize;
RET = 68815876_u32 as isize;
_4 = [1147036698_i32];
Goto(bb3)
}
bb6 = {
_5 = core::ptr::addr_of_mut!((*_5));
RET = _10 & _10;
_4 = [(-2055305337_i32)];
_4 = _8;
_2 = [(-75593820298691996088454985561990374258_i128),50314269851699811952813150893808803179_i128,(-124123864335204325689584426509138456458_i128),45044122057116375356206582764115230697_i128];
_9 = 178_u8 * 17_u8;
_5 = core::ptr::addr_of_mut!(_3);
_10 = 172602095480087247424066444833588294908_u128 as isize;
_6 = _10;
RET = 15659_i16 as isize;
_5 = core::ptr::addr_of_mut!((*_5));
_10 = _6 | _6;
_10 = _6 << RET;
_12 = [2125733391_i32,(-1455074640_i32),1705089248_i32,(-400446429_i32)];
_3 = '\u{8e01a}';
(*_5) = '\u{efddf}';
Goto(bb7)
}
bb7 = {
(*_5) = '\u{16dd0}';
_8 = _7;
_7 = [(-468722439_i32)];
_6 = !_10;
_11 = [9920499002612506469_u64,15425807864155112126_u64,12132896033615989635_u64,2340226762003325835_u64,13962935322963379012_u64,12644990477906170583_u64];
_3 = '\u{fa868}';
RET = _6;
_2 = [(-101570035581292640280343222643740890020_i128),(-97515996470366777279012339466701378205_i128),32052115254314624605118576099901852003_i128,61988104387769175363547878612962430961_i128];
Goto(bb8)
}
bb8 = {
RET = 14978_u16 as isize;
_8 = [(-452252765_i32)];
_2 = [(-115189948941586219698926696265653144974_i128),32956406052907804684586007592490064872_i128,20389366929341750007143798191297942770_i128,(-104206253383642304344018649630939003897_i128)];
_9 = 934973922_i32 as u8;
_12 = [1340015524_i32,807893749_i32,643000058_i32,(-1148960352_i32)];
_15.0 = &_9;
_4 = _8;
_10 = _6 >> _9;
_15.0 = &_9;
_15.0 = &_9;
RET = 915877069_i32 as isize;
_10 = _6;
_12 = [1105353331_i32,1724625070_i32,1253308006_i32,(-1143424169_i32)];
(*_5) = '\u{c2225}';
(*_5) = '\u{6624f}';
(*_5) = '\u{9fb7f}';
_16 = -_6;
_4 = [(-1464920554_i32)];
_15.2 = core::ptr::addr_of!(_18);
RET = _10 - _6;
(*_5) = '\u{c2387}';
_2 = [(-91440726366662241712261686688103539310_i128),115201985297315118072837423948574407828_i128,145960078763454301666769596050916951274_i128,50890062325706472448722332714223883611_i128];
_19 = -_10;
_5 = core::ptr::addr_of_mut!((*_5));
_19 = _10;
_15.3 = core::ptr::addr_of!(_18);
RET = _16 * _6;
Call(RET = core::intrinsics::transmute(_10), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_15.3 = core::ptr::addr_of!(_18);
_19 = -_10;
_4 = [1833520153_i32];
_19 = (-1865801785_i32) as isize;
RET = 27529_i16 as isize;
_12 = [(-1167444711_i32),(-1991381912_i32),(-802073006_i32),135984408_i32];
_6 = _19 ^ _10;
_9 = (-3839925392143712290_i64) as u8;
_16 = -_6;
_7 = _4;
_15.2 = core::ptr::addr_of!(_18);
_10 = 278751780346310867156190324697226424257_u128 as isize;
_20 = core::ptr::addr_of!(_12);
(*_5) = '\u{6f377}';
RET = !_16;
(*_20) = [1614916331_i32,2045644427_i32,187633622_i32,(-1509986158_i32)];
(*_20) = [(-322691258_i32),1305903419_i32,489883246_i32,230906985_i32];
_12 = [1084913051_i32,1446496009_i32,(-1010496447_i32),1242580713_i32];
Call(_7 = core::intrinsics::transmute((*_5)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_15.2 = core::ptr::addr_of!(_18);
_16 = RET & RET;
(*_5) = '\u{efb0d}';
_15.3 = core::ptr::addr_of!(_18);
_20 = core::ptr::addr_of!((*_20));
_6 = 167399040204148840741265515943886161253_u128 as isize;
_21 = _16;
_11 = [1160073068329382484_u64,2775895561226561100_u64,2063354943077530273_u64,5165694104130219453_u64,753506581351543251_u64,6136104079563433032_u64];
Goto(bb11)
}
bb11 = {
_19 = 5860929719895404100_u64 as isize;
(*_20) = [(-1733783754_i32),1109540622_i32,1969204045_i32,1224109621_i32];
_10 = _21 * _21;
Goto(bb12)
}
bb12 = {
(*_20) = [(-2051924819_i32),1842880527_i32,370146792_i32,1919820896_i32];
_4 = _7;
(*_20) = [(-1721522891_i32),1888521038_i32,506647600_i32,(-1432588827_i32)];
_5 = core::ptr::addr_of_mut!((*_5));
_15.0 = &_9;
_2 = [(-67362508615511089145021661808253625643_i128),(-154960921221826050245360362274041412300_i128),43499899098781449018572340736734431331_i128,5453710781556922030143248955223827576_i128];
(*_5) = '\u{32c64}';
_15.2 = core::ptr::addr_of!(_18);
_24 = _16;
_19 = _9 as isize;
RET = !_16;
_26 = 2369_i16 as f64;
_24 = !_10;
(*_20) = [(-184295229_i32),(-606792847_i32),710765648_i32,(-941421060_i32)];
_28 = 6028899995193989428_u64 | 9986895805201237279_u64;
RET = _24 - _10;
_20 = core::ptr::addr_of!(_12);
_26 = 9359708711005140491639400799573617803_u128 as f64;
_23 = [1738770786659565133_i64,6249288187824585284_i64,6676729172952031551_i64,8257601826808087096_i64];
_21 = -RET;
_5 = core::ptr::addr_of_mut!(_3);
_16 = _28 as isize;
(*_20) = [(-278931543_i32),(-275552941_i32),1581921422_i32,1911467157_i32];
_16 = RET;
(*_20) = [1313266727_i32,(-48310970_i32),(-1045412615_i32),602566060_i32];
Goto(bb13)
}
bb13 = {
Call(_30 = dump_var(6_usize, 7_usize, Move(_7), 10_usize, Move(_10), 23_usize, Move(_23), 2_usize, Move(_2)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_30 = dump_var(6_usize, 21_usize, Move(_21), 11_usize, Move(_11), 3_usize, Move(_3), 12_usize, Move(_12)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *const &'static mut u32,mut _2: isize) -> [i128; 4] {
mir! {
type RET = [i128; 4];
let _3: (u64, *const i8);
let _4: isize;
let _5: u128;
let _6: u16;
let _7: f32;
let _8: *const *const u128;
let _9: f32;
let _10: *const [isize; 2];
let _11: char;
let _12: ([isize; 4],);
let _13: [i16; 8];
let _14: ([i64; 4],);
let _15: *mut u16;
let _16: *const [u16; 4];
let _17: i8;
let _18: f64;
let _19: f64;
let _20: [u16; 7];
let _21: [i64; 4];
let _22: char;
let _23: (&'static u8, *const usize, *const u128, *const u128);
let _24: u32;
let _25: char;
let _26: u32;
let _27: usize;
let _28: f32;
let _29: [i32; 1];
let _30: bool;
let _31: &'static mut [u16; 4];
let _32: f32;
let _33: i64;
let _34: [u64; 6];
let _35: f64;
let _36: &'static Adt40;
let _37: isize;
let _38: [i32; 4];
let _39: ();
let _40: ();
{
RET = [(-113394069409964382241907138347845465112_i128),(-127782836624235342509549082804407644462_i128),(-19313543767317610006604639178979868302_i128),83916371775440880121666010250748185809_i128];
RET = [(-45212589724466016205113448448037089659_i128),(-73955044617556087248505173457740661642_i128),(-109634719329864146809684719013467123879_i128),(-94188013884593340866636567539281107356_i128)];
RET = [(-141869779947822401873718705565548058011_i128),(-163783857412763275561029406422955419399_i128),(-120989627686961534962311042607846398850_i128),11154750437204160567454929780980808392_i128];
_2 = -9223372036854775807_isize;
RET = [136251007891961920928995463113182123385_i128,(-59182543098478550271460530276343804701_i128),(-132844915552424577547086931459748733999_i128),(-56993425362706895215563082405754524970_i128)];
RET = [121051231955329504392545154654733181663_i128,(-95054741094852330449475450765412864514_i128),131241568211443584981015243186166768469_i128,78317428714823320397426229656547188158_i128];
RET = [(-44674057732725051314504207519325721215_i128),75471569261680363029000549854089459277_i128,(-72601192202978743150926991337340460074_i128),(-39214707479790950395029211076887952468_i128)];
_2 = (-4076718919317406851_i64) as isize;
_2 = -86_isize;
_2 = !9223372036854775807_isize;
RET = [(-139924100335482648416567945422328386969_i128),102931145490664528319910414510610751339_i128,(-24623480889907016950456193564180662671_i128),(-70737804869389561014852078589402348760_i128)];
RET = [109464046782726049392248278585973627600_i128,(-165808394227827284981401760797706900312_i128),33864869718625132071775883257566725993_i128,(-31637071005190413451117860106520132854_i128)];
_2 = (-111_isize) - 105_isize;
RET = [(-37776711257877614882908107767716190595_i128),(-147888619190813465037652831000213663049_i128),(-124952566860143914851422889353404704213_i128),(-96498420209721463076912452386975899163_i128)];
RET = [(-147008248874698860761682376856003301678_i128),92419244546893847090986122164700217258_i128,9916792681184230675783177989950623538_i128,(-10038463851495705346345769584858949467_i128)];
RET = [(-105972856547249701054511374227881651398_i128),(-78858303001786306153574286213995090910_i128),85911005591302982411823646108607263308_i128,(-161221887467704491554155031154326022302_i128)];
RET = [(-58830666233034495699562799434208701513_i128),(-8661049522728567881321840810336821080_i128),155969146703089634384459481728458078429_i128,138589652774322610304118165154349790100_i128];
RET = [45777876911978019277892737465000344489_i128,(-138476329524746358272087554183628618151_i128),41515071683101066897551774487659249065_i128,106620315566479099702346091898517813065_i128];
_5 = !223360801915962060192889738310210287576_u128;
_4 = _2 | _2;
_4 = !_2;
RET = [1428703402263015676103585725695067870_i128,(-45430717455838142053388112681981341338_i128),(-145498896705905948649009181764815999623_i128),(-121940622049746224837201626819215551986_i128)];
_4 = _2;
_3.0 = 17255704681253249314_u64 >> _2;
Goto(bb1)
}
bb1 = {
_5 = 182043443222401617483933125736811892304_u128 << _2;
RET = [(-88287334281423884745899774447676380410_i128),(-100379519294356584339647815002179138948_i128),129375645334101827723512265096972044857_i128,(-154031004931836036717213127686856289136_i128)];
_7 = 57021_u16 as f32;
_2 = -_4;
_3.0 = 15687474424753105888_u64 | 9286277784986969475_u64;
_6 = 64269_u16 * 44547_u16;
_6 = !42177_u16;
_7 = 14091_i16 as f32;
_9 = _7 - _7;
_4 = -_2;
RET = [28605471139034357516212932305468982852_i128,(-63483440725897901643049179930545148642_i128),112861039239563284705006736135988189950_i128,10489165906771877981056833829834264665_i128];
_3.0 = 3369524419_u32 as u64;
_6 = 17844_u16 << _4;
_4 = false as isize;
_9 = _7 * _7;
_3.0 = 71_u8 as u64;
_9 = -_7;
Call(_8 = fn8(Move(_1), _3.0, _6, _2, _4, RET, _4, RET, _9, RET, _2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Goto(bb3)
}
bb3 = {
_4 = _2;
_9 = _7 + _7;
_3.0 = 12123040545927652540_u64;
_11 = '\u{d656c}';
RET = [119104750857020499255216269477600756290_i128,56995509524769362877613212762361503387_i128,12797420441874712759108817806054748086_i128,12577208639274400972021971645070645169_i128];
_12.0 = [_2,_2,_4,_4];
_4 = _2;
_6 = !34091_u16;
_13 = [7554_i16,27282_i16,6463_i16,29195_i16,(-30448_i16),(-28631_i16),(-24443_i16),28414_i16];
_7 = _9;
_2 = _4 << _4;
RET = [35956289864852233998277152149401818848_i128,154141996515880342027201174554371293210_i128,(-96072383405014437049900472921207826063_i128),89902130580500274668054126997710201403_i128];
RET = [(-47872733152982169491064041565574170339_i128),(-52090495613008781265838143386851064810_i128),74031977184740756918059512008972895140_i128,(-135804661333997182472927603320899632320_i128)];
_4 = _2;
_5 = !98493186694927867101334869436973854020_u128;
_14.0 = [4603805360356460773_i64,(-4180930091518836325_i64),4282218004287379588_i64,(-7250584972892652714_i64)];
_11 = '\u{ad386}';
Goto(bb4)
}
bb4 = {
_3.0 = !17810984315690478022_u64;
_3.0 = _4 as u64;
_7 = -_9;
_3.0 = 14397667760266394709_u64 * 3805676375474873985_u64;
_6 = (-80_i8) as u16;
RET = [89286239754735780721392381719061364182_i128,(-34129992020694490012273417903041245959_i128),(-143474295117758320331509445348246200607_i128),118282556194353872872085696284865763293_i128];
_4 = !_2;
_9 = _7;
RET = [(-9329938609674167418074007528803328016_i128),(-59523186705203518953636529347824119581_i128),(-19709794903073133822568542198496236306_i128),(-92200538043703380779163661597374170566_i128)];
_11 = '\u{a142d}';
_15 = core::ptr::addr_of_mut!(_6);
_2 = !_4;
(*_15) = !62055_u16;
_5 = 16944559998049776705524701249298846998_u128;
_11 = '\u{fbfeb}';
_15 = core::ptr::addr_of_mut!((*_15));
_4 = (-8033_i16) as isize;
_3.0 = 14299253202863052365_u64;
RET = [(-104487599857558032404815993020982645999_i128),84065491586552953081209005483658506682_i128,79523231802770631810181567941866059477_i128,138619502735165515962718329477192869459_i128];
_2 = !_4;
_3.0 = (-140976903376871979784091592083007355707_i128) as u64;
_17 = _2 as i8;
_13 = [26094_i16,7252_i16,14341_i16,(-13254_i16),(-29475_i16),(-25448_i16),(-358_i16),(-24116_i16)];
Goto(bb5)
}
bb5 = {
_5 = 10189981652209548109729440145676854474_u128 ^ 132182799414101392562513692723273587029_u128;
_12.0 = [_4,_2,_2,_2];
_13 = [19783_i16,(-515_i16),1486_i16,(-12169_i16),(-4014_i16),(-15235_i16),2063_i16,9819_i16];
_2 = _4;
_14.0 = [(-6402669794259171232_i64),8989190342845458426_i64,6491774443457780277_i64,7625662270283337464_i64];
RET = [(-103429149468601669955655828636011573465_i128),(-145416981461429952798723015326151887136_i128),(-138083343132361241010330212644777752061_i128),(-53024649541974617967971123469917209428_i128)];
_2 = -_4;
RET = [(-83528424658282198674638576805196841511_i128),113314277867774484447583343152145115754_i128,142845379980637170893982265780527340827_i128,(-152233242371655010554809266783987754703_i128)];
_7 = -_9;
(*_15) = !46491_u16;
_17 = (-97_i8);
_9 = -_7;
_17 = !(-96_i8);
(*_15) = _3.0 as u16;
_4 = -_2;
_7 = 6234523091958123593_i64 as f32;
_2 = (*_15) as isize;
_19 = (*_15) as f64;
_4 = !_2;
_14.0 = [7142184419190831661_i64,7798800424759482880_i64,7541720869984971984_i64,(-2783670275265998314_i64)];
_20 = [_6,(*_15),_6,(*_15),(*_15),(*_15),(*_15)];
Goto(bb6)
}
bb6 = {
_18 = 0_usize as f64;
_13 = [(-9741_i16),18990_i16,(-11074_i16),9055_i16,29302_i16,(-3201_i16),(-23519_i16),21519_i16];
_15 = core::ptr::addr_of_mut!((*_15));
_4 = _2 << _17;
_17 = (-78_i8) | (-106_i8);
_3.1 = core::ptr::addr_of!(_17);
_15 = core::ptr::addr_of_mut!((*_15));
_11 = '\u{10719b}';
_12.0 = [_4,_4,_4,_4];
_9 = _7;
_3.0 = 7415011907133738852_u64 - 17623148185665022492_u64;
_3.1 = core::ptr::addr_of!(_17);
_21 = [(-4349534867964668951_i64),542698918213815315_i64,(-662483677295006073_i64),1153512712018163440_i64];
Goto(bb7)
}
bb7 = {
_15 = core::ptr::addr_of_mut!(_6);
Goto(bb8)
}
bb8 = {
_22 = _11;
_23.3 = core::ptr::addr_of!(_5);
(*_15) = _2 as u16;
_4 = _2 | _2;
_5 = 191020481752606350389993356252734678800_u128;
_14.0 = _21;
_24 = 4180236614_u32;
_2 = _11 as isize;
_20 = [(*_15),_6,(*_15),_6,(*_15),(*_15),(*_15)];
_5 = 31662_i16 as u128;
_11 = _22;
_18 = -_19;
_5 = 181520184763098741861210844419653403320_u128 * 143709071913341669988212888732516868377_u128;
(*_15) = 40875_u16 >> _4;
_26 = _24 | _24;
_17 = -(-69_i8);
_12.0 = [_2,_2,_4,_4];
(*_15) = !11033_u16;
_23.1 = core::ptr::addr_of!(_27);
_25 = _22;
_12.0 = [_4,_4,_2,_4];
_5 = !231988826213151985597421354470568308562_u128;
_22 = _11;
_2 = _4 & _4;
RET = [(-1070515408304382821937397856941301437_i128),78362141141598752115388569640669662950_i128,(-138695243235224651396343219834014324937_i128),98035624607950851659947720855750981370_i128];
_3.0 = !7294477720996107533_u64;
_2 = -_4;
match _24 {
0 => bb3,
4180236614 => bb10,
_ => bb9
}
}
bb9 = {
Goto(bb3)
}
bb10 = {
_28 = _9 - _9;
Goto(bb11)
}
bb11 = {
_20 = [(*_15),(*_15),(*_15),_6,(*_15),_6,(*_15)];
_15 = core::ptr::addr_of_mut!((*_15));
_5 = 261980397649695605353656274324781896441_u128;
_25 = _11;
_22 = _25;
_23.2 = Move(_23.3);
_5 = 183500525042470791110259072786741494919_u128 >> _4;
_18 = _19 * _19;
_14 = (_21,);
_34 = [_3.0,_3.0,_3.0,_3.0,_3.0,_3.0];
(*_15) = 10111_u16 >> _24;
_28 = _7;
RET = [(-72852221599626661095461889751035113030_i128),(-117573576067030117603193834726577289046_i128),151853065466380156544456334929209616897_i128,57220048384188941640124772803556222573_i128];
_23.3 = Move(_23.2);
_23.3 = core::ptr::addr_of!(_5);
(*_15) = 41533_u16 >> _5;
_25 = _22;
_3.0 = !11544876129549609636_u64;
_27 = !1_usize;
_3.0 = 1621192655090357319_u64 & 9076701972378064128_u64;
_7 = -_9;
_19 = _5 as f64;
_25 = _11;
Goto(bb12)
}
bb12 = {
_35 = _7 as f64;
_32 = _7 + _7;
match _24 {
0 => bb8,
1 => bb4,
2 => bb5,
3 => bb13,
4180236614 => bb15,
_ => bb14
}
}
bb13 = {
_4 = _2;
_9 = _7 + _7;
_3.0 = 12123040545927652540_u64;
_11 = '\u{d656c}';
RET = [119104750857020499255216269477600756290_i128,56995509524769362877613212762361503387_i128,12797420441874712759108817806054748086_i128,12577208639274400972021971645070645169_i128];
_12.0 = [_2,_2,_4,_4];
_4 = _2;
_6 = !34091_u16;
_13 = [7554_i16,27282_i16,6463_i16,29195_i16,(-30448_i16),(-28631_i16),(-24443_i16),28414_i16];
_7 = _9;
_2 = _4 << _4;
RET = [35956289864852233998277152149401818848_i128,154141996515880342027201174554371293210_i128,(-96072383405014437049900472921207826063_i128),89902130580500274668054126997710201403_i128];
RET = [(-47872733152982169491064041565574170339_i128),(-52090495613008781265838143386851064810_i128),74031977184740756918059512008972895140_i128,(-135804661333997182472927603320899632320_i128)];
_4 = _2;
_5 = !98493186694927867101334869436973854020_u128;
_14.0 = [4603805360356460773_i64,(-4180930091518836325_i64),4282218004287379588_i64,(-7250584972892652714_i64)];
_11 = '\u{ad386}';
Goto(bb4)
}
bb14 = {
_5 = 10189981652209548109729440145676854474_u128 ^ 132182799414101392562513692723273587029_u128;
_12.0 = [_4,_2,_2,_2];
_13 = [19783_i16,(-515_i16),1486_i16,(-12169_i16),(-4014_i16),(-15235_i16),2063_i16,9819_i16];
_2 = _4;
_14.0 = [(-6402669794259171232_i64),8989190342845458426_i64,6491774443457780277_i64,7625662270283337464_i64];
RET = [(-103429149468601669955655828636011573465_i128),(-145416981461429952798723015326151887136_i128),(-138083343132361241010330212644777752061_i128),(-53024649541974617967971123469917209428_i128)];
_2 = -_4;
RET = [(-83528424658282198674638576805196841511_i128),113314277867774484447583343152145115754_i128,142845379980637170893982265780527340827_i128,(-152233242371655010554809266783987754703_i128)];
_7 = -_9;
(*_15) = !46491_u16;
_17 = (-97_i8);
_9 = -_7;
_17 = !(-96_i8);
(*_15) = _3.0 as u16;
_4 = -_2;
_7 = 6234523091958123593_i64 as f32;
_2 = (*_15) as isize;
_19 = (*_15) as f64;
_4 = !_2;
_14.0 = [7142184419190831661_i64,7798800424759482880_i64,7541720869984971984_i64,(-2783670275265998314_i64)];
_20 = [_6,(*_15),_6,(*_15),(*_15),(*_15),(*_15)];
Goto(bb6)
}
bb15 = {
_23.2 = core::ptr::addr_of!(_5);
_34 = [_3.0,_3.0,_3.0,_3.0,_3.0,_3.0];
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(7_usize, 12_usize, Move(_12), 4_usize, Move(_4), 11_usize, Move(_11), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(7_usize, 25_usize, Move(_25), 14_usize, Move(_14), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: *const &'static mut u32,mut _2: u64,mut _3: u16,mut _4: isize,mut _5: isize,mut _6: [i128; 4],mut _7: isize,mut _8: [i128; 4],mut _9: f32,mut _10: [i128; 4],mut _11: isize,mut _12: isize) -> *const *const u128 {
mir! {
type RET = *const *const u128;
let _13: i128;
let _14: f32;
let _15: u64;
let _16: *const &'static mut u32;
let _17: [i128; 4];
let _18: f64;
let _19: bool;
let _20: [isize; 2];
let _21: (usize, i16);
let _22: f32;
let _23: i8;
let _24: [i16; 8];
let _25: *mut u128;
let _26: [u32; 3];
let _27: Adt40;
let _28: u8;
let _29: f64;
let _30: *mut *const usize;
let _31: *const [u16; 4];
let _32: *mut u16;
let _33: i64;
let _34: isize;
let _35: [char; 4];
let _36: isize;
let _37: &'static mut &'static mut *mut i64;
let _38: Adt40;
let _39: u128;
let _40: isize;
let _41: Adt26;
let _42: bool;
let _43: i32;
let _44: [i128; 1];
let _45: *mut &'static mut u32;
let _46: char;
let _47: f64;
let _48: u8;
let _49: [u64; 6];
let _50: i64;
let _51: *mut u16;
let _52: f32;
let _53: &'static i64;
let _54: [i16; 8];
let _55: *const [i32; 4];
let _56: *const (isize, *mut u16, i128, i128);
let _57: f32;
let _58: [u16; 4];
let _59: *const *const u128;
let _60: f32;
let _61: char;
let _62: u32;
let _63: *const *const u128;
let _64: *const u8;
let _65: [isize; 2];
let _66: (u64, *mut &'static mut u32);
let _67: [u64; 6];
let _68: [isize; 2];
let _69: f32;
let _70: [u64; 7];
let _71: *mut Adt27;
let _72: u128;
let _73: f32;
let _74: u8;
let _75: u64;
let _76: ([isize; 4],);
let _77: isize;
let _78: Adt65;
let _79: usize;
let _80: [char; 4];
let _81: i8;
let _82: bool;
let _83: u32;
let _84: [i128; 2];
let _85: Adt27;
let _86: [i128; 2];
let _87: i16;
let _88: isize;
let _89: *mut &'static mut u32;
let _90: [isize; 4];
let _91: Adt40;
let _92: (usize, i16);
let _93: i8;
let _94: f64;
let _95: usize;
let _96: i8;
let _97: ();
let _98: ();
{
_3 = !22214_u16;
_10 = [43555269367277865762662317965754136981_i128,50727159953381790049939205077205186682_i128,162007744720133110403318739642910803620_i128,166520691317179451557444971065371000125_i128];
_11 = _7 + _12;
_13 = 154846029841854406360160389377372932451_i128;
_14 = -_9;
_10 = [_13,_13,_13,_13];
_13 = (-94779637385991252128340144372744880580_i128) * (-139848742777373557968119720538848365002_i128);
_13 = 134650416970261164328361288427174258143_i128;
_15 = _2 | _2;
_11 = _4 << _5;
Goto(bb1)
}
bb1 = {
_8 = _6;
_3 = 48059_u16;
_4 = (-92_i8) as isize;
_6 = _10;
_2 = !_15;
_10 = _8;
_3 = !61565_u16;
_12 = _7 & _11;
_2 = _3 as u64;
_12 = 6_usize as isize;
_4 = -_11;
_5 = _4 << _4;
_11 = _5 - _5;
_5 = _11 * _11;
_16 = Move(_1);
_5 = _7;
_14 = _9 * _9;
_15 = _2;
_8 = [_13,_13,_13,_13];
_1 = Move(_16);
Goto(bb2)
}
bb2 = {
_9 = _14 + _14;
_3 = 17727_u16;
_4 = -_7;
_15 = _13 as u64;
_16 = Move(_1);
_17 = [_13,_13,_13,_13];
_15 = _2 | _2;
_6 = _10;
_4 = _13 as isize;
_11 = _4 | _4;
_18 = 206156046684483037534991803873701152070_u128 as f64;
_5 = !_4;
_18 = _15 as f64;
_1 = Move(_16);
_10 = _8;
_14 = 0_usize as f32;
_4 = -_11;
_14 = _9 * _9;
_19 = true;
_16 = Move(_1);
_1 = Move(_16);
_21.0 = 3517652493369000483_usize;
_4 = _18 as isize;
_17 = _6;
_4 = -_11;
Goto(bb3)
}
bb3 = {
_18 = 1581456406_i32 as f64;
_20 = [_11,_4];
_21.1 = 16053_i16;
_18 = _3 as f64;
_21 = (13590780518480533562_usize, 4409_i16);
Goto(bb4)
}
bb4 = {
_4 = (-5063051234254853610_i64) as isize;
_16 = Move(_1);
_10 = [_13,_13,_13,_13];
_2 = !_15;
_1 = Move(_16);
_14 = _9;
_16 = Move(_1);
_23 = (-43_i8);
_15 = _4 as u64;
_15 = !_2;
_11 = _5;
_6 = [_13,_13,_13,_13];
_21.0 = 11588247538541333302_usize ^ 17415709572188843144_usize;
_12 = !_5;
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_26 = [1441450973_u32,1961067019_u32,1291347419_u32];
_14 = _9;
_4 = _12 << _21.1;
_12 = _11;
_22 = _21.1 as f32;
_1 = Move(_16);
_14 = _9;
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_7 = !_11;
_26 = [2848880440_u32,2002540365_u32,115076609_u32];
_5 = _7;
_26 = [4196067768_u32,3102713689_u32,4016463544_u32];
match _13 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
134650416970261164328361288427174258143 => bb11,
_ => bb10
}
}
bb5 = {
_18 = 1581456406_i32 as f64;
_20 = [_11,_4];
_21.1 = 16053_i16;
_18 = _3 as f64;
_21 = (13590780518480533562_usize, 4409_i16);
Goto(bb4)
}
bb6 = {
_9 = _14 + _14;
_3 = 17727_u16;
_4 = -_7;
_15 = _13 as u64;
_16 = Move(_1);
_17 = [_13,_13,_13,_13];
_15 = _2 | _2;
_6 = _10;
_4 = _13 as isize;
_11 = _4 | _4;
_18 = 206156046684483037534991803873701152070_u128 as f64;
_5 = !_4;
_18 = _15 as f64;
_1 = Move(_16);
_10 = _8;
_14 = 0_usize as f32;
_4 = -_11;
_14 = _9 * _9;
_19 = true;
_16 = Move(_1);
_1 = Move(_16);
_21.0 = 3517652493369000483_usize;
_4 = _18 as isize;
_17 = _6;
_4 = -_11;
Goto(bb3)
}
bb7 = {
_8 = _6;
_3 = 48059_u16;
_4 = (-92_i8) as isize;
_6 = _10;
_2 = !_15;
_10 = _8;
_3 = !61565_u16;
_12 = _7 & _11;
_2 = _3 as u64;
_12 = 6_usize as isize;
_4 = -_11;
_5 = _4 << _4;
_11 = _5 - _5;
_5 = _11 * _11;
_16 = Move(_1);
_5 = _7;
_14 = _9 * _9;
_15 = _2;
_8 = [_13,_13,_13,_13];
_1 = Move(_16);
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_8 = [_13,_13,_13,_13];
_16 = Move(_1);
_15 = !_2;
_21.0 = 5_usize;
_27 = Adt40::Variant2 { fld0: _21.1 };
_1 = Move(_16);
_12 = _4 >> _2;
_16 = Move(_1);
_28 = _13 as u8;
_1 = Move(_16);
_28 = 196_u8 >> _2;
_21.1 = Field::<i16>(Variant(_27, 2), 0) ^ Field::<i16>(Variant(_27, 2), 0);
_29 = _18 + _18;
_26 = [2841847092_u32,4272558828_u32,1587954096_u32];
_33 = _21.1 as i64;
_21.1 = Field::<i16>(Variant(_27, 2), 0);
_6 = _8;
SetDiscriminant(_27, 1);
place!(Field::<bool>(Variant(_27, 1), 0)) = !_19;
match _21.0 {
5 => bb12,
_ => bb9
}
}
bb12 = {
_22 = -_9;
_21.1 = 28479_i16 << _28;
_19 = _29 != _18;
_16 = Move(_1);
_9 = _14;
_8 = _17;
_11 = '\u{193a9}' as isize;
_21 = (9021766508448874063_usize, (-6609_i16));
_29 = -_18;
match _21.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb10,
9021766508448874063 => bb14,
_ => bb13
}
}
bb13 = {
_18 = 1581456406_i32 as f64;
_20 = [_11,_4];
_21.1 = 16053_i16;
_18 = _3 as f64;
_21 = (13590780518480533562_usize, 4409_i16);
Goto(bb4)
}
bb14 = {
_10 = [_13,_13,_13,_13];
place!(Field::<f32>(Variant(_27, 1), 1)) = _22;
_21.1 = 2977041752_u32 as i16;
_4 = _7 - _12;
_7 = _12;
Call(_14 = fn9(Move(_16), Field::<bool>(Variant(_27, 1), 0), _9, _33, _21, _12, _8, _21.1, Field::<f32>(Variant(_27, 1), 1), _20, _4, _15), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_29 = _14 as f64;
place!(Field::<f32>(Variant(_27, 1), 1)) = _12 as f32;
_3 = 36254_u16 >> _12;
_35 = ['\u{30af}','\u{40297}','\u{c65cf}','\u{aba45}'];
place!(Field::<Adt27>(Variant(_27, 1), 2)) = Adt27::Variant1 { fld0: _33 };
_26 = [1379986622_u32,978887681_u32,3906386470_u32];
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_11 = '\u{e1bd4}' as isize;
_20 = [_7,_12];
_12 = _4 ^ _7;
place!(Field::<Adt27>(Variant(_27, 1), 2)) = Adt27::Variant0 { fld0: _23,fld1: 126024066842030486887237898592208816272_u128,fld2: _29 };
Goto(bb16)
}
bb16 = {
_15 = _2;
_21 = (15118177635365426675_usize, (-14360_i16));
_12 = _11 * _4;
_32 = core::ptr::addr_of_mut!(_3);
_23 = Field::<i8>(Variant(Field::<Adt27>(Variant(_27, 1), 2), 0), 0) >> _4;
_33 = 2376615455912295709_i64;
_40 = _12 | _12;
_17 = [_13,_13,_13,_13];
_25 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(place!(Field::<Adt27>(Variant(_27, 1), 2)), 0), 1)));
(*_25) = 247844108413670538420353767030449732244_u128 ^ 72464415789218861609964394639617714526_u128;
place!(Field::<bool>(Variant(_27, 1), 0)) = !_19;
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
(*_25) = _29 as u128;
_21.0 = 4_usize;
_11 = _40;
_21.0 = 13097491812521380022_usize;
_25 = core::ptr::addr_of_mut!((*_25));
_22 = -_14;
_7 = _40 | _4;
SetDiscriminant(Field::<Adt27>(Variant(_27, 1), 2), 0);
_42 = Field::<bool>(Variant(_27, 1), 0);
_42 = !_19;
_36 = _7;
_21 = (13965732838410763638_usize, 18659_i16);
_38 = Adt40::Variant0 { fld0: Field::<bool>(Variant(_27, 1), 0),fld1: Move(_32),fld2: _2,fld3: _21.0,fld4: (*_32) };
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
match Field::<usize>(Variant(_38, 0), 3) {
0 => bb17,
13965732838410763638 => bb19,
_ => bb18
}
}
bb17 = {
_18 = 1581456406_i32 as f64;
_20 = [_11,_4];
_21.1 = 16053_i16;
_18 = _3 as f64;
_21 = (13590780518480533562_usize, 4409_i16);
Goto(bb4)
}
bb18 = {
Return()
}
bb19 = {
_43 = 2824050734_u32 as i32;
_4 = _43 as isize;
_43 = -(-1760374896_i32);
place!(Field::<*mut u16>(Variant(_38, 0), 1)) = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_38, 0), 4)));
_39 = !226091754593083407016610311615734332677_u128;
_44 = [_13];
place!(Field::<usize>(Variant(_38, 0), 3)) = _21.0;
_43 = (-769635424_i32);
_23 = !(-109_i8);
_38 = Adt40::Variant2 { fld0: _21.1 };
_20 = [_11,_7];
place!(Field::<u128>(Variant(place!(Field::<Adt27>(Variant(_27, 1), 2)), 0), 1)) = _39;
_47 = _7 as f64;
Goto(bb20)
}
bb20 = {
_46 = '\u{b47dd}';
_42 = !Field::<bool>(Variant(_27, 1), 0);
_27 = Adt40::Variant0 { fld0: _19,fld1: Move(_32),fld2: _2,fld3: _21.0,fld4: _3 };
_26 = [4233980809_u32,2612868334_u32,199965402_u32];
_22 = _14 * _9;
_5 = _11 >> _36;
place!(Field::<i16>(Variant(_38, 2), 0)) = !_21.1;
place!(Field::<bool>(Variant(_27, 0), 0)) = !_19;
_10 = [_13,_13,_13,_13];
_5 = _28 as isize;
_36 = _5 + _11;
_18 = -_47;
_32 = Move(Field::<*mut u16>(Variant(_27, 0), 1));
place!(Field::<i16>(Variant(_38, 2), 0)) = 3161996956_u32 as i16;
place!(Field::<u16>(Variant(_27, 0), 4)) = _3 + _3;
_49 = [_15,_2,_2,_2,Field::<u64>(Variant(_27, 0), 2),Field::<u64>(Variant(_27, 0), 2)];
_3 = Field::<u16>(Variant(_27, 0), 4) - Field::<u16>(Variant(_27, 0), 4);
_34 = 1974422918_u32 as isize;
place!(Field::<i16>(Variant(_38, 2), 0)) = !_21.1;
_42 = !Field::<bool>(Variant(_27, 0), 0);
_9 = _13 as f32;
_26 = [866949232_u32,2570121454_u32,2017841093_u32];
place!(Field::<usize>(Variant(_27, 0), 3)) = _46 as usize;
_12 = _33 as isize;
_48 = _28 * _28;
_47 = _18 + _29;
_15 = !_2;
Goto(bb21)
}
bb21 = {
_24 = [Field::<i16>(Variant(_38, 2), 0),_21.1,_21.1,Field::<i16>(Variant(_38, 2), 0),_21.1,Field::<i16>(Variant(_38, 2), 0),Field::<i16>(Variant(_38, 2), 0),Field::<i16>(Variant(_38, 2), 0)];
_22 = _14 * _14;
_50 = _33 + _33;
_21.0 = Field::<usize>(Variant(_27, 0), 3);
place!(Field::<*mut u16>(Variant(_27, 0), 1)) = Move(_32);
_26 = [2832953261_u32,1583160621_u32,1378879337_u32];
_24 = [_21.1,_21.1,Field::<i16>(Variant(_38, 2), 0),_21.1,_21.1,Field::<i16>(Variant(_38, 2), 0),_21.1,_21.1];
place!(Field::<usize>(Variant(_27, 0), 3)) = !_21.0;
_47 = 2691254588_u32 as f64;
place!(Field::<u64>(Variant(_27, 0), 2)) = _21.1 as u64;
_3 = !Field::<u16>(Variant(_27, 0), 4);
_4 = Field::<i16>(Variant(_38, 2), 0) as isize;
match _21.1 {
0 => bb7,
1 => bb18,
2 => bb19,
3 => bb15,
4 => bb17,
5 => bb22,
18659 => bb24,
_ => bb23
}
}
bb22 = {
_9 = _14 + _14;
_3 = 17727_u16;
_4 = -_7;
_15 = _13 as u64;
_16 = Move(_1);
_17 = [_13,_13,_13,_13];
_15 = _2 | _2;
_6 = _10;
_4 = _13 as isize;
_11 = _4 | _4;
_18 = 206156046684483037534991803873701152070_u128 as f64;
_5 = !_4;
_18 = _15 as f64;
_1 = Move(_16);
_10 = _8;
_14 = 0_usize as f32;
_4 = -_11;
_14 = _9 * _9;
_19 = true;
_16 = Move(_1);
_1 = Move(_16);
_21.0 = 3517652493369000483_usize;
_4 = _18 as isize;
_17 = _6;
_4 = -_11;
Goto(bb3)
}
bb23 = {
_29 = _14 as f64;
place!(Field::<f32>(Variant(_27, 1), 1)) = _12 as f32;
_3 = 36254_u16 >> _12;
_35 = ['\u{30af}','\u{40297}','\u{c65cf}','\u{aba45}'];
place!(Field::<Adt27>(Variant(_27, 1), 2)) = Adt27::Variant1 { fld0: _33 };
_26 = [1379986622_u32,978887681_u32,3906386470_u32];
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_11 = '\u{e1bd4}' as isize;
_20 = [_7,_12];
_12 = _4 ^ _7;
place!(Field::<Adt27>(Variant(_27, 1), 2)) = Adt27::Variant0 { fld0: _23,fld1: 126024066842030486887237898592208816272_u128,fld2: _29 };
Goto(bb16)
}
bb24 = {
_49 = [_2,Field::<u64>(Variant(_27, 0), 2),Field::<u64>(Variant(_27, 0), 2),_2,_2,_15];
_14 = _39 as f32;
_17 = _8;
_2 = _50 as u64;
_26 = [1661624050_u32,3717088089_u32,989503494_u32];
_3 = _46 as u16;
_33 = _15 as i64;
_40 = -_11;
_35 = [_46,_46,_46,_46];
_3 = Field::<u16>(Variant(_27, 0), 4) | Field::<u16>(Variant(_27, 0), 4);
_52 = _13 as f32;
_50 = -_33;
_15 = Field::<u64>(Variant(_27, 0), 2) + _2;
_10 = [_13,_13,_13,_13];
_19 = !Field::<bool>(Variant(_27, 0), 0);
_34 = _36;
_9 = _22 + _14;
_36 = _11 & _7;
SetDiscriminant(_27, 0);
_50 = !_33;
_47 = _18 - _29;
place!(Field::<u16>(Variant(_27, 0), 4)) = _3 << _28;
_17 = [_13,_13,_13,_13];
match _21.1 {
0 => bb9,
18659 => bb25,
_ => bb3
}
}
bb25 = {
place!(Field::<usize>(Variant(_27, 0), 3)) = !_21.0;
_3 = !Field::<u16>(Variant(_27, 0), 4);
_49 = [_15,_2,_15,_2,_15,_15];
_2 = _15 >> _34;
_26 = [3538158895_u32,1297074092_u32,599263306_u32];
_24 = [_21.1,Field::<i16>(Variant(_38, 2), 0),_21.1,_21.1,Field::<i16>(Variant(_38, 2), 0),Field::<i16>(Variant(_38, 2), 0),_21.1,Field::<i16>(Variant(_38, 2), 0)];
_26 = [570278013_u32,2713509832_u32,2738253307_u32];
SetDiscriminant(_38, 2);
_21.0 = !Field::<usize>(Variant(_27, 0), 3);
_14 = _2 as f32;
_54 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_10 = [_13,_13,_13,_13];
_7 = _36;
_14 = -_22;
_32 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_27, 0), 4)));
_57 = _50 as f32;
_33 = !_50;
_27 = Adt40::Variant0 { fld0: _42,fld1: Move(_32),fld2: _2,fld3: _21.0,fld4: _3 };
match _43 {
0 => bb13,
1 => bb26,
2 => bb27,
340282366920938463463374607430998576032 => bb29,
_ => bb28
}
}
bb26 = {
_15 = _2;
_21 = (15118177635365426675_usize, (-14360_i16));
_12 = _11 * _4;
_32 = core::ptr::addr_of_mut!(_3);
_23 = Field::<i8>(Variant(Field::<Adt27>(Variant(_27, 1), 2), 0), 0) >> _4;
_33 = 2376615455912295709_i64;
_40 = _12 | _12;
_17 = [_13,_13,_13,_13];
_25 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(place!(Field::<Adt27>(Variant(_27, 1), 2)), 0), 1)));
(*_25) = 247844108413670538420353767030449732244_u128 ^ 72464415789218861609964394639617714526_u128;
place!(Field::<bool>(Variant(_27, 1), 0)) = !_19;
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
(*_25) = _29 as u128;
_21.0 = 4_usize;
_11 = _40;
_21.0 = 13097491812521380022_usize;
_25 = core::ptr::addr_of_mut!((*_25));
_22 = -_14;
_7 = _40 | _4;
SetDiscriminant(Field::<Adt27>(Variant(_27, 1), 2), 0);
_42 = Field::<bool>(Variant(_27, 1), 0);
_42 = !_19;
_36 = _7;
_21 = (13965732838410763638_usize, 18659_i16);
_38 = Adt40::Variant0 { fld0: Field::<bool>(Variant(_27, 1), 0),fld1: Move(_32),fld2: _2,fld3: _21.0,fld4: (*_32) };
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
match Field::<usize>(Variant(_38, 0), 3) {
0 => bb17,
13965732838410763638 => bb19,
_ => bb18
}
}
bb27 = {
_8 = _6;
_3 = 48059_u16;
_4 = (-92_i8) as isize;
_6 = _10;
_2 = !_15;
_10 = _8;
_3 = !61565_u16;
_12 = _7 & _11;
_2 = _3 as u64;
_12 = 6_usize as isize;
_4 = -_11;
_5 = _4 << _4;
_11 = _5 - _5;
_5 = _11 * _11;
_16 = Move(_1);
_5 = _7;
_14 = _9 * _9;
_15 = _2;
_8 = [_13,_13,_13,_13];
_1 = Move(_16);
Goto(bb2)
}
bb28 = {
_9 = _14 + _14;
_3 = 17727_u16;
_4 = -_7;
_15 = _13 as u64;
_16 = Move(_1);
_17 = [_13,_13,_13,_13];
_15 = _2 | _2;
_6 = _10;
_4 = _13 as isize;
_11 = _4 | _4;
_18 = 206156046684483037534991803873701152070_u128 as f64;
_5 = !_4;
_18 = _15 as f64;
_1 = Move(_16);
_10 = _8;
_14 = 0_usize as f32;
_4 = -_11;
_14 = _9 * _9;
_19 = true;
_16 = Move(_1);
_1 = Move(_16);
_21.0 = 3517652493369000483_usize;
_4 = _18 as isize;
_17 = _6;
_4 = -_11;
Goto(bb3)
}
bb29 = {
_20 = [_7,_11];
_22 = _9 + _14;
_58 = [Field::<u16>(Variant(_27, 0), 4),Field::<u16>(Variant(_27, 0), 4),_3,Field::<u16>(Variant(_27, 0), 4)];
place!(Field::<*mut u16>(Variant(_27, 0), 1)) = core::ptr::addr_of_mut!(_3);
_54 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_31 = core::ptr::addr_of!(_58);
_50 = 1004741373_u32 as i64;
_38 = Move(_27);
_25 = core::ptr::addr_of_mut!(_39);
_25 = core::ptr::addr_of_mut!(_39);
_2 = _43 as u64;
(*_31) = [_3,_3,_3,_3];
_21 = (Field::<usize>(Variant(_38, 0), 3), 15503_i16);
_12 = _13 as isize;
_9 = _22;
_35 = [_46,_46,_46,_46];
_2 = _43 as u64;
_31 = core::ptr::addr_of!(_58);
_24 = _54;
_46 = '\u{aa9a3}';
_53 = &_50;
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
_53 = &_33;
_60 = _3 as f32;
match _21.1 {
0 => bb30,
15503 => bb32,
_ => bb31
}
}
bb30 = {
_10 = [_13,_13,_13,_13];
place!(Field::<f32>(Variant(_27, 1), 1)) = _22;
_21.1 = 2977041752_u32 as i16;
_4 = _7 - _12;
_7 = _12;
Call(_14 = fn9(Move(_16), Field::<bool>(Variant(_27, 1), 0), _9, _33, _21, _12, _8, _21.1, Field::<f32>(Variant(_27, 1), 1), _20, _4, _15), ReturnTo(bb15), UnwindUnreachable())
}
bb31 = {
_9 = _14 + _14;
_3 = 17727_u16;
_4 = -_7;
_15 = _13 as u64;
_16 = Move(_1);
_17 = [_13,_13,_13,_13];
_15 = _2 | _2;
_6 = _10;
_4 = _13 as isize;
_11 = _4 | _4;
_18 = 206156046684483037534991803873701152070_u128 as f64;
_5 = !_4;
_18 = _15 as f64;
_1 = Move(_16);
_10 = _8;
_14 = 0_usize as f32;
_4 = -_11;
_14 = _9 * _9;
_19 = true;
_16 = Move(_1);
_1 = Move(_16);
_21.0 = 3517652493369000483_usize;
_4 = _18 as isize;
_17 = _6;
_4 = -_11;
Goto(bb3)
}
bb32 = {
_25 = core::ptr::addr_of_mut!(_39);
_36 = !_34;
_15 = !Field::<u64>(Variant(_38, 0), 2);
place!(Field::<*mut u16>(Variant(_38, 0), 1)) = Move(_32);
_22 = -_9;
_52 = _60;
_26 = [1888972101_u32,3033689925_u32,3654642857_u32];
_43 = 1544970211_u32 as i32;
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
_51 = core::ptr::addr_of_mut!(_3);
_17 = [_13,_13,_13,_13];
(*_31) = [(*_51),(*_51),Field::<u16>(Variant(_38, 0), 4),Field::<u16>(Variant(_38, 0), 4)];
_32 = core::ptr::addr_of_mut!(_3);
_47 = (*_51) as f64;
(*_25) = !226353614030666615867617256284030403714_u128;
_32 = Move(_51);
_46 = '\u{9d4b9}';
_33 = _7 as i64;
_21.1 = _15 as i16;
_33 = _23 as i64;
place!(Field::<*mut u16>(Variant(_38, 0), 1)) = Move(_32);
_7 = _50 as isize;
SetDiscriminant(_38, 1);
_62 = 3255837902_u32 << _15;
Goto(bb33)
}
bb33 = {
_36 = -_40;
place!(Field::<bool>(Variant(_38, 1), 0)) = _19 ^ _19;
_2 = _23 as u64;
_50 = _33;
_18 = _29 + _29;
_6 = [_13,_13,_13,_13];
_21 = (1707105880848049632_usize, (-32043_i16));
_8 = [_13,_13,_13,_13];
_17 = [_13,_13,_13,_13];
place!(Field::<Adt27>(Variant(_38, 1), 2)) = Adt27::Variant0 { fld0: _23,fld1: (*_25),fld2: _47 };
_51 = core::ptr::addr_of_mut!(_3);
Goto(bb34)
}
bb34 = {
_39 = Field::<u128>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 1) - Field::<u128>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 1);
_28 = _48 | _48;
place!(Field::<f64>(Variant(place!(Field::<Adt27>(Variant(_38, 1), 2)), 0), 2)) = (*_25) as f64;
_5 = !_34;
_23 = Field::<i8>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 0);
_21.0 = _23 as usize;
_46 = '\u{6b83d}';
_20 = [_36,_34];
(*_51) = 65357_u16;
_21 = (1908641737741868104_usize, (-4814_i16));
_64 = core::ptr::addr_of!(_48);
_61 = _46;
_31 = core::ptr::addr_of!((*_31));
_13 = 99346135447423767552082737836615748191_i128;
match _13 {
0 => bb26,
1 => bb8,
2 => bb35,
3 => bb36,
99346135447423767552082737836615748191 => bb38,
_ => bb37
}
}
bb35 = {
_18 = 1581456406_i32 as f64;
_20 = [_11,_4];
_21.1 = 16053_i16;
_18 = _3 as f64;
_21 = (13590780518480533562_usize, 4409_i16);
Goto(bb4)
}
bb36 = {
_20 = [_7,_11];
_22 = _9 + _14;
_58 = [Field::<u16>(Variant(_27, 0), 4),Field::<u16>(Variant(_27, 0), 4),_3,Field::<u16>(Variant(_27, 0), 4)];
place!(Field::<*mut u16>(Variant(_27, 0), 1)) = core::ptr::addr_of_mut!(_3);
_54 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_31 = core::ptr::addr_of!(_58);
_50 = 1004741373_u32 as i64;
_38 = Move(_27);
_25 = core::ptr::addr_of_mut!(_39);
_25 = core::ptr::addr_of_mut!(_39);
_2 = _43 as u64;
(*_31) = [_3,_3,_3,_3];
_21 = (Field::<usize>(Variant(_38, 0), 3), 15503_i16);
_12 = _13 as isize;
_9 = _22;
_35 = [_46,_46,_46,_46];
_2 = _43 as u64;
_31 = core::ptr::addr_of!(_58);
_24 = _54;
_46 = '\u{aa9a3}';
_53 = &_50;
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
_53 = &_33;
_60 = _3 as f32;
match _21.1 {
0 => bb30,
15503 => bb32,
_ => bb31
}
}
bb37 = {
_29 = _14 as f64;
place!(Field::<f32>(Variant(_27, 1), 1)) = _12 as f32;
_3 = 36254_u16 >> _12;
_35 = ['\u{30af}','\u{40297}','\u{c65cf}','\u{aba45}'];
place!(Field::<Adt27>(Variant(_27, 1), 2)) = Adt27::Variant1 { fld0: _33 };
_26 = [1379986622_u32,978887681_u32,3906386470_u32];
_24 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_11 = '\u{e1bd4}' as isize;
_20 = [_7,_12];
_12 = _4 ^ _7;
place!(Field::<Adt27>(Variant(_27, 1), 2)) = Adt27::Variant0 { fld0: _23,fld1: 126024066842030486887237898592208816272_u128,fld2: _29 };
Goto(bb16)
}
bb38 = {
place!(Field::<u128>(Variant(place!(Field::<Adt27>(Variant(_38, 1), 2)), 0), 1)) = _33 as u128;
_54 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_32 = Move(_51);
(*_25) = Field::<u128>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 1);
place!(Field::<bool>(Variant(_38, 1), 0)) = _19 ^ _19;
_2 = _15;
_8 = [_13,_13,_13,_13];
(*_25) = _61 as u128;
_50 = _33;
_66.0 = !_15;
Goto(bb39)
}
bb39 = {
_31 = core::ptr::addr_of!((*_31));
_51 = core::ptr::addr_of_mut!(_3);
_27 = Adt40::Variant1 { fld0: Field::<bool>(Variant(_38, 1), 0),fld1: _9,fld2: Move(Field::<Adt27>(Variant(_38, 1), 2)) };
_18 = _29 + _29;
SetDiscriminant(Field::<Adt27>(Variant(_27, 1), 2), 0);
_47 = _15 as f64;
_19 = !Field::<bool>(Variant(_38, 1), 0);
place!(Field::<Adt27>(Variant(_38, 1), 2)) = Adt27::Variant2 { fld0: _50,fld1: _61,fld2: (*_25),fld3: _21.1 };
_6 = [_13,_13,_13,_13];
_36 = Field::<i16>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 2), 3) as isize;
_50 = Field::<i64>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 2), 0);
_21.1 = (*_25) as i16;
_67 = _49;
_66.0 = !_15;
_38 = Adt40::Variant2 { fld0: _21.1 };
_49 = [_15,_15,_2,_15,_66.0,_2];
(*_25) = !165075218275174103650238967819436554357_u128;
place!(Field::<bool>(Variant(_27, 1), 0)) = !_19;
Goto(bb40)
}
bb40 = {
place!(Field::<f32>(Variant(_27, 1), 1)) = -_14;
_21 = (0_usize, Field::<i16>(Variant(_38, 2), 0));
SetDiscriminant(_38, 0);
_28 = _50 as u8;
_68 = _20;
_64 = core::ptr::addr_of!(_48);
place!(Field::<u128>(Variant(place!(Field::<Adt27>(Variant(_27, 1), 2)), 0), 1)) = (*_25);
_69 = _9;
_48 = _28;
_10 = [_13,_13,_13,_13];
place!(Field::<u64>(Variant(_38, 0), 2)) = _13 as u64;
_51 = core::ptr::addr_of_mut!((*_51));
_15 = _66.0 >> _2;
_44 = [_13];
(*_31) = [(*_51),_3,_3,(*_51)];
place!(Field::<f32>(Variant(_27, 1), 1)) = _43 as f32;
place!(Field::<u128>(Variant(place!(Field::<Adt27>(Variant(_27, 1), 2)), 0), 1)) = _39;
_24 = _54;
_10 = [_13,_13,_13,_13];
_42 = !Field::<bool>(Variant(_27, 1), 0);
_71 = core::ptr::addr_of_mut!(place!(Field::<Adt27>(Variant(_27, 1), 2)));
_65 = _20;
_50 = _33;
(*_64) = _28;
_68 = [_40,_4];
_38 = Adt40::Variant0 { fld0: _19,fld1: Move(_51),fld2: _2,fld3: _21.0,fld4: _3 };
Goto(bb41)
}
bb41 = {
_38 = Adt40::Variant0 { fld0: _42,fld1: Move(_32),fld2: _66.0,fld3: _21.0,fld4: _3 };
_28 = !_48;
(*_25) = Field::<u128>(Variant(Field::<Adt27>(Variant(_27, 1), 2), 0), 1);
_67 = _49;
match _13 {
0 => bb37,
1 => bb2,
2 => bb40,
3 => bb14,
4 => bb13,
99346135447423767552082737836615748191 => bb42,
_ => bb23
}
}
bb42 = {
_13 = _61 as i128;
_35 = [_46,_46,_46,_46];
_14 = _9 - _60;
_21 = (Field::<usize>(Variant(_38, 0), 3), 596_i16);
_15 = !_66.0;
_27 = Adt40::Variant2 { fld0: _21.1 };
_58 = [Field::<u16>(Variant(_38, 0), 4),Field::<u16>(Variant(_38, 0), 4),Field::<u16>(Variant(_38, 0), 4),_3];
_3 = _29 as u16;
_73 = _69;
_54 = [Field::<i16>(Variant(_27, 2), 0),Field::<i16>(Variant(_27, 2), 0),Field::<i16>(Variant(_27, 2), 0),_21.1,_21.1,Field::<i16>(Variant(_27, 2), 0),Field::<i16>(Variant(_27, 2), 0),_21.1];
_26 = [_62,_62,_62];
_25 = core::ptr::addr_of_mut!(_39);
_10 = _8;
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
_65 = [_5,_11];
(*_64) = _28 - _28;
SetDiscriminant(_27, 2);
_48 = _28 | _28;
(*_31) = [_3,Field::<u16>(Variant(_38, 0), 4),_3,_3];
_44 = [_13];
(*_25) = 237610121659214615506129326904684680962_u128 + 56630434094103296080184599369878527642_u128;
Goto(bb43)
}
bb43 = {
_12 = _34 * _36;
_49 = _67;
_17 = _10;
Goto(bb44)
}
bb44 = {
place!(Field::<u16>(Variant(_38, 0), 4)) = !_3;
_17 = [_13,_13,_13,_13];
_73 = _14;
_81 = _23 ^ _23;
_27 = Adt40::Variant0 { fld0: Field::<bool>(Variant(_38, 0), 0),fld1: Move(_32),fld2: Field::<u64>(Variant(_38, 0), 2),fld3: _21.0,fld4: _3 };
_79 = Field::<usize>(Variant(_27, 0), 3);
(*_31)[_79] = _3;
_72 = _33 as u128;
place!(Field::<usize>(Variant(_38, 0), 3)) = _21.0 + Field::<usize>(Variant(_27, 0), 3);
_42 = Field::<u16>(Variant(_27, 0), 4) < (*_31)[_79];
_7 = _68[_79] * _12;
_73 = -_14;
_67[_79] = Field::<u64>(Variant(_38, 0), 2) + _66.0;
_66.0 = _15;
(*_31) = [Field::<u16>(Variant(_38, 0), 4),_3,Field::<u16>(Variant(_38, 0), 4),Field::<u16>(Variant(_38, 0), 4)];
_80[_79] = _35[_79];
_64 = core::ptr::addr_of!((*_64));
_76.0 = [_40,_20[_79],_65[_79],_34];
_44 = [_17[_79]];
match _24[_79] {
0 => bb42,
1 => bb8,
2 => bb45,
3 => bb46,
340282366920938463463374607431768206642 => bb48,
_ => bb47
}
}
bb45 = {
_9 = _14 + _14;
_3 = 17727_u16;
_4 = -_7;
_15 = _13 as u64;
_16 = Move(_1);
_17 = [_13,_13,_13,_13];
_15 = _2 | _2;
_6 = _10;
_4 = _13 as isize;
_11 = _4 | _4;
_18 = 206156046684483037534991803873701152070_u128 as f64;
_5 = !_4;
_18 = _15 as f64;
_1 = Move(_16);
_10 = _8;
_14 = 0_usize as f32;
_4 = -_11;
_14 = _9 * _9;
_19 = true;
_16 = Move(_1);
_1 = Move(_16);
_21.0 = 3517652493369000483_usize;
_4 = _18 as isize;
_17 = _6;
_4 = -_11;
Goto(bb3)
}
bb46 = {
_39 = Field::<u128>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 1) - Field::<u128>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 1);
_28 = _48 | _48;
place!(Field::<f64>(Variant(place!(Field::<Adt27>(Variant(_38, 1), 2)), 0), 2)) = (*_25) as f64;
_5 = !_34;
_23 = Field::<i8>(Variant(Field::<Adt27>(Variant(_38, 1), 2), 0), 0);
_21.0 = _23 as usize;
_46 = '\u{6b83d}';
_20 = [_36,_34];
(*_51) = 65357_u16;
_21 = (1908641737741868104_usize, (-4814_i16));
_64 = core::ptr::addr_of!(_48);
_61 = _46;
_31 = core::ptr::addr_of!((*_31));
_13 = 99346135447423767552082737836615748191_i128;
match _13 {
0 => bb26,
1 => bb8,
2 => bb35,
3 => bb36,
99346135447423767552082737836615748191 => bb38,
_ => bb37
}
}
bb47 = {
_18 = 1581456406_i32 as f64;
_20 = [_11,_4];
_21.1 = 16053_i16;
_18 = _3 as f64;
_21 = (13590780518480533562_usize, 4409_i16);
Goto(bb4)
}
bb48 = {
_21.1 = _11 as i16;
_51 = core::ptr::addr_of_mut!(_58[_79]);
_70[_79] = Field::<u64>(Variant(_27, 0), 2) + _66.0;
_21.0 = Field::<usize>(Variant(_38, 0), 3);
_71 = core::ptr::addr_of_mut!(_85);
SetDiscriminant(_27, 3);
_50 = _67[_79] as i64;
_55 = core::ptr::addr_of!(place!(Field::<[i32; 4]>(Variant(_27, 3), 4)));
(*_51) = _39 as u16;
_35 = [_46,_46,_61,_80[_79]];
place!(Field::<*const u128>(Variant(_27, 3), 1)) = core::ptr::addr_of!((*_25));
_48 = !_28;
_53 = &_33;
Goto(bb49)
}
bb49 = {
place!(Field::<usize>(Variant(_38, 0), 3)) = _18 as usize;
place!(Field::<i64>(Variant(_27, 3), 0)) = -_50;
place!(Field::<u16>(Variant(_38, 0), 4)) = _3 - _58[_79];
_64 = core::ptr::addr_of!(_48);
_50 = Field::<i64>(Variant(_27, 3), 0);
_81 = _23 & _23;
_86 = [_44[_79],_10[_79]];
_63 = core::ptr::addr_of!(place!(Field::<*const u128>(Variant(_27, 3), 1)));
match _79 {
1 => bb25,
2 => bb3,
3 => bb4,
4 => bb38,
5 => bb28,
0 => bb51,
_ => bb50
}
}
bb50 = {
_20 = [_7,_11];
_22 = _9 + _14;
_58 = [Field::<u16>(Variant(_27, 0), 4),Field::<u16>(Variant(_27, 0), 4),_3,Field::<u16>(Variant(_27, 0), 4)];
place!(Field::<*mut u16>(Variant(_27, 0), 1)) = core::ptr::addr_of_mut!(_3);
_54 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1];
_31 = core::ptr::addr_of!(_58);
_50 = 1004741373_u32 as i64;
_38 = Move(_27);
_25 = core::ptr::addr_of_mut!(_39);
_25 = core::ptr::addr_of_mut!(_39);
_2 = _43 as u64;
(*_31) = [_3,_3,_3,_3];
_21 = (Field::<usize>(Variant(_38, 0), 3), 15503_i16);
_12 = _13 as isize;
_9 = _22;
_35 = [_46,_46,_46,_46];
_2 = _43 as u64;
_31 = core::ptr::addr_of!(_58);
_24 = _54;
_46 = '\u{aa9a3}';
_53 = &_50;
_32 = Move(Field::<*mut u16>(Variant(_38, 0), 1));
_53 = &_33;
_60 = _3 as f32;
match _21.1 {
0 => bb30,
15503 => bb32,
_ => bb31
}
}
bb51 = {
_55 = core::ptr::addr_of!((*_55));
_59 = Move(_63);
place!(Field::<*mut u16>(Variant(_38, 0), 1)) = core::ptr::addr_of_mut!((*_31)[_79]);
_25 = core::ptr::addr_of_mut!((*_25));
_78 = Adt65::Variant0 { fld0: _20,fld1: _28 };
_35[_79] = _46;
(*_55) = [_43,_43,_43,_43];
place!(Field::<usize>(Variant(_38, 0), 3)) = !_21.0;
_62 = _26[_79] * _26[_79];
place!(Field::<*mut u16>(Variant(_38, 0), 1)) = Move(_51);
_92.1 = _43 as i16;
_90 = [_65[_79],_20[_79],_7,_12];
RET = core::ptr::addr_of!(place!(Field::<*const u128>(Variant(_27, 3), 1)));
place!(Field::<i32>(Variant(_27, 3), 3)) = !Field::<[i32; 4]>(Variant(_27, 3), 4)[_79];
_57 = _52;
_76.0 = [_68[_79],_90[_79],_11,_68[_79]];
_91 = Adt40::Variant2 { fld0: _21.1 };
_29 = _18 - _18;
_92 = _21;
place!(Field::<[i32; 4]>(Variant(_27, 3), 4))[_79] = -_43;
_69 = -_73;
_69 = _52 * _60;
_19 = Field::<bool>(Variant(_38, 0), 0) > _42;
_21.1 = -Field::<i16>(Variant(_91, 2), 0);
Goto(bb52)
}
bb52 = {
Call(_97 = dump_var(8_usize, 90_usize, Move(_90), 23_usize, Move(_23), 3_usize, Move(_3), 40_usize, Move(_40)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_97 = dump_var(8_usize, 58_usize, Move(_58), 79_usize, Move(_79), 33_usize, Move(_33), 68_usize, Move(_68)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_97 = dump_var(8_usize, 12_usize, Move(_12), 11_usize, Move(_11), 2_usize, Move(_2), 39_usize, Move(_39)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_97 = dump_var(8_usize, 15_usize, Move(_15), 54_usize, Move(_54), 48_usize, Move(_48), 46_usize, Move(_46)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_97 = dump_var(8_usize, 67_usize, Move(_67), 44_usize, Move(_44), 62_usize, Move(_62), 34_usize, Move(_34)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_97 = dump_var(8_usize, 61_usize, Move(_61), 24_usize, Move(_24), 7_usize, Move(_7), 98_usize, _98), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *const &'static mut u32,mut _2: bool,mut _3: f32,mut _4: i64,mut _5: (usize, i16),mut _6: isize,mut _7: [i128; 4],mut _8: i16,mut _9: f32,mut _10: [isize; 2],mut _11: isize,mut _12: u64) -> f32 {
mir! {
type RET = f32;
let _13: [char; 4];
let _14: [u32; 3];
let _15: u64;
let _16: *mut Adt27;
let _17: f64;
let _18: f64;
let _19: *const [u16; 4];
let _20: *mut i64;
let _21: &'static mut u8;
let _22: (u64, *mut &'static mut u32);
let _23: bool;
let _24: f32;
let _25: Adt26;
let _26: i8;
let _27: ([i64; 4],);
let _28: char;
let _29: ([u16; 4], f32, *mut char);
let _30: u16;
let _31: (([u16; 4], f32, *mut char), (usize, i16), *const usize, &'static mut i64);
let _32: isize;
let _33: char;
let _34: i16;
let _35: char;
let _36: i64;
let _37: bool;
let _38: [isize; 2];
let _39: u128;
let _40: (Adt21, i32, (usize, i16), &'static mut i64);
let _41: char;
let _42: isize;
let _43: [i32; 4];
let _44: i64;
let _45: isize;
let _46: &'static mut *const &'static mut u32;
let _47: *mut &'static mut u32;
let _48: &'static mut u8;
let _49: ();
let _50: ();
{
RET = _3;
RET = -_9;
_5.0 = 5427122702321786192_usize >> _11;
_2 = !false;
RET = _12 as f32;
_3 = (-1188978028_i32) as f32;
_14 = [4227709294_u32,4198844560_u32,1189286938_u32];
_13 = ['\u{3dcb8}','\u{4beea}','\u{3b5c9}','\u{8e9f9}'];
_10 = [_11,_6];
_9 = _5.0 as f32;
_15 = !_12;
_17 = 178_u8 as f64;
_4 = 1748870810_u32 as i64;
RET = _9;
_11 = -_6;
_4 = (-1986633838_i32) as i64;
_18 = _17;
_11 = _6 | _6;
RET = _9;
Call(_20 = fn10(Move(_1), _11, _11, _6, _13, _10, _11, RET, _14, _10, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = [(-155499389407705355736211397382302368269_i128),(-74253296217823188703102028413786104674_i128),(-49163339825121859578156051113125392250_i128),156816697346457768898123394925732516583_i128];
Goto(bb2)
}
bb2 = {
_5.0 = 30_i8 as usize;
_5.0 = 15963993279323944723_usize;
_7 = [(-168558016394411655207169288859501691988_i128),(-8404512610094889946697062512098839558_i128),(-5769434835292147404004830871535863380_i128),(-74553192385900890012121712864128465208_i128)];
_11 = _9 as isize;
_12 = _15;
_13 = ['\u{c4203}','\u{66fbc}','\u{3c48b}','\u{3699}'];
RET = _9 + _3;
_7 = [126985459758377509018452380618262228894_i128,(-53555208355841202751030973492448534912_i128),(-119155248836768177225821478649151418360_i128),(-138152175424466502908039247585604176309_i128)];
_22.0 = _15;
RET = _3 * _9;
_20 = core::ptr::addr_of_mut!(_4);
_18 = -_17;
_14 = [364083788_u32,859226536_u32,1320933518_u32];
Goto(bb3)
}
bb3 = {
_12 = _15;
_7 = [(-164697019910112256622846296746139914359_i128),(-47984225267913251502258112723798316956_i128),(-50681835116688441922458316151971808385_i128),(-137125730358608854678474763440811854623_i128)];
_6 = -_11;
_7 = [(-33345873247466796420696504069772883738_i128),(-46614285192173043559401878784859737579_i128),22893643176858413913889441168124764171_i128,97296417825706610166733861367118275106_i128];
_14 = [1602133578_u32,2426342792_u32,2532744898_u32];
match _5.0 {
0 => bb1,
15963993279323944723 => bb4,
_ => bb2
}
}
bb4 = {
_17 = _18;
_11 = _6 << (*_20);
_5.1 = _18 as i16;
_9 = RET + RET;
_6 = _11 | _11;
_7 = [(-165446077390388258130235340289211066024_i128),124087880897463824368709091024081865591_i128,(-56458836697702334878854637163552663410_i128),(-70054448191359023703213583180330783604_i128)];
_8 = !_5.1;
_18 = -_17;
Goto(bb5)
}
bb5 = {
_27.0 = [(*_20),(*_20),(*_20),(*_20)];
_28 = '\u{bca87}';
_13 = [_28,_28,_28,_28];
match _5.0 {
0 => bb6,
15963993279323944723 => bb8,
_ => bb7
}
}
bb6 = {
_7 = [(-155499389407705355736211397382302368269_i128),(-74253296217823188703102028413786104674_i128),(-49163339825121859578156051113125392250_i128),156816697346457768898123394925732516583_i128];
Goto(bb2)
}
bb7 = {
_12 = _15;
_7 = [(-164697019910112256622846296746139914359_i128),(-47984225267913251502258112723798316956_i128),(-50681835116688441922458316151971808385_i128),(-137125730358608854678474763440811854623_i128)];
_6 = -_11;
_7 = [(-33345873247466796420696504069772883738_i128),(-46614285192173043559401878784859737579_i128),22893643176858413913889441168124764171_i128,97296417825706610166733861367118275106_i128];
_14 = [1602133578_u32,2426342792_u32,2532744898_u32];
match _5.0 {
0 => bb1,
15963993279323944723 => bb4,
_ => bb2
}
}
bb8 = {
RET = _22.0 as f32;
_29.0 = [50105_u16,28504_u16,22981_u16,59163_u16];
_28 = '\u{b357f}';
_31.1.1 = 1765249184_u32 as i16;
_24 = _9 * _9;
_29.1 = 1232835822_i32 as f32;
_5.1 = !_31.1.1;
_23 = _2;
RET = (-1793637506_i32) as f32;
_31.0.0 = [9201_u16,13178_u16,2458_u16,8912_u16];
_31.1.0 = _5.0 | _5.0;
_27.0 = [_4,(*_20),(*_20),_4];
_33 = _28;
_29.0 = [48364_u16,13327_u16,17531_u16,12412_u16];
_34 = _8;
_20 = core::ptr::addr_of_mut!(_4);
match _5.0 {
0 => bb4,
1 => bb9,
15963993279323944723 => bb11,
_ => bb10
}
}
bb9 = {
_12 = _15;
_7 = [(-164697019910112256622846296746139914359_i128),(-47984225267913251502258112723798316956_i128),(-50681835116688441922458316151971808385_i128),(-137125730358608854678474763440811854623_i128)];
_6 = -_11;
_7 = [(-33345873247466796420696504069772883738_i128),(-46614285192173043559401878784859737579_i128),22893643176858413913889441168124764171_i128,97296417825706610166733861367118275106_i128];
_14 = [1602133578_u32,2426342792_u32,2532744898_u32];
match _5.0 {
0 => bb1,
15963993279323944723 => bb4,
_ => bb2
}
}
bb10 = {
_7 = [(-155499389407705355736211397382302368269_i128),(-74253296217823188703102028413786104674_i128),(-49163339825121859578156051113125392250_i128),156816697346457768898123394925732516583_i128];
Goto(bb2)
}
bb11 = {
_5.1 = _8;
_34 = _5.1 - _5.1;
_17 = -_18;
_14 = [2303397534_u32,2387219156_u32,3092953789_u32];
_34 = _31.1.1 ^ _8;
_31.3 = &mut (*_20);
_29.2 = core::ptr::addr_of_mut!(_28);
_11 = _6 >> _6;
_11 = !_6;
_31.0.0 = _29.0;
_3 = _24;
_14 = [605503706_u32,4231676773_u32,1074109681_u32];
_31.0.0 = [3348_u16,44254_u16,59549_u16,20519_u16];
_24 = 56860_u16 as f32;
_3 = -_9;
_6 = _11;
_35 = _33;
_36 = _3 as i64;
_7 = [24538389536127014237894535401290513194_i128,(-1222026745016757924501835168830267374_i128),39181434887773960628410732761028051839_i128,2266517199618124518780858966278449610_i128];
_29.2 = core::ptr::addr_of_mut!(_33);
_24 = _3;
_5 = _31.1;
_30 = 64653_u16;
_37 = _23;
_38 = [_11,_6];
Goto(bb12)
}
bb12 = {
_10 = [_6,_6];
_36 = _4;
_41 = _28;
_8 = _17 as i16;
RET = -_3;
_40.2.0 = !_31.1.0;
_26 = -(-71_i8);
_8 = _31.1.1 << _6;
_15 = _37 as u64;
_19 = core::ptr::addr_of!(_29.0);
_31.2 = core::ptr::addr_of!(_5.0);
_29.1 = _3;
_9 = _24;
Goto(bb13)
}
bb13 = {
Call(_49 = dump_var(9_usize, 15_usize, Move(_15), 6_usize, Move(_6), 2_usize, Move(_2), 35_usize, Move(_35)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_49 = dump_var(9_usize, 38_usize, Move(_38), 27_usize, Move(_27), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_49 = dump_var(9_usize, 10_usize, Move(_10), 33_usize, Move(_33), 26_usize, Move(_26), 36_usize, Move(_36)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: *const &'static mut u32,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: [char; 4],mut _6: [isize; 2],mut _7: isize,mut _8: f32,mut _9: [u32; 3],mut _10: [isize; 2],mut _11: [i128; 4]) -> *mut i64 {
mir! {
type RET = *mut i64;
let _12: char;
let _13: i16;
let _14: [u64; 7];
let _15: [i128; 1];
let _16: [u32; 3];
let _17: f64;
let _18: [u32; 3];
let _19: &'static mut &'static mut *mut i64;
let _20: f32;
let _21: *const *const [u16; 4];
let _22: isize;
let _23: f64;
let _24: [isize; 2];
let _25: isize;
let _26: ([i64; 4],);
let _27: f64;
let _28: &'static &'static mut i64;
let _29: u128;
let _30: *const &'static mut u8;
let _31: &'static &'static mut i64;
let _32: u8;
let _33: *mut u128;
let _34: *mut &'static mut u32;
let _35: f64;
let _36: isize;
let _37: isize;
let _38: *mut char;
let _39: isize;
let _40: &'static mut u32;
let _41: f64;
let _42: char;
let _43: f64;
let _44: &'static mut *mut i64;
let _45: i8;
let _46: *const [isize; 2];
let _47: *const [u16; 4];
let _48: *const *const u128;
let _49: f32;
let _50: [isize; 4];
let _51: [i32; 8];
let _52: f32;
let _53: *const i8;
let _54: u64;
let _55: Adt65;
let _56: isize;
let _57: &'static mut u32;
let _58: [isize; 4];
let _59: &'static mut *mut i64;
let _60: [i128; 4];
let _61: usize;
let _62: ([i64; 4],);
let _63: u16;
let _64: [i128; 1];
let _65: [i32; 4];
let _66: i32;
let _67: [u16; 4];
let _68: f32;
let _69: *const u128;
let _70: *mut *const usize;
let _71: [i128; 4];
let _72: char;
let _73: Adt65;
let _74: &'static mut u32;
let _75: usize;
let _76: *mut (&'static u8, *const usize, *const u128, *const u128);
let _77: [i32; 4];
let _78: [i32; 1];
let _79: i16;
let _80: *const u8;
let _81: *mut &'static mut u32;
let _82: i32;
let _83: ([i64; 4],);
let _84: f32;
let _85: (usize, i16);
let _86: isize;
let _87: Adt27;
let _88: f32;
let _89: [u16; 4];
let _90: [i128; 1];
let _91: [u16; 4];
let _92: i32;
let _93: [i32; 8];
let _94: u64;
let _95: isize;
let _96: ();
let _97: ();
{
_4 = (-30651964409402125797121252946121188316_i128) as isize;
_4 = _3 ^ _3;
_12 = '\u{63880}';
_13 = 10693_i16 - (-8436_i16);
_9 = [244014401_u32,1035680790_u32,2414693293_u32];
_8 = (-5903152767046481767_i64) as f32;
Call(_4 = core::intrinsics::transmute(_2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = -_7;
_4 = (-166233716900461934905655034048063563581_i128) as isize;
_12 = '\u{7dfc9}';
_11 = [88638300888206398171485484382716678505_i128,98540077206525994541838778395702061080_i128,111086314784230538905806388014905002336_i128,111546490459520191700206163701034416818_i128];
_3 = !_2;
_4 = 115092931_i32 as isize;
_14 = [11032635542955390597_u64,14680765153791938161_u64,5610774337393692247_u64,5132020074412299011_u64,14872333950137332071_u64,13477169737823585269_u64,9612163977491859122_u64];
_3 = !_2;
Goto(bb2)
}
bb2 = {
_15 = [(-14201117344142620505444160887322329803_i128)];
_10 = _6;
_16 = _9;
_10 = [_3,_3];
_9 = [252979972_u32,123426693_u32,3353105054_u32];
_7 = _2 >> _3;
_2 = -_3;
_15 = [112549769022396052487583419624566099912_i128];
_11 = [(-18559558185013147761299530560404925204_i128),133516688651185112544943374613158211050_i128,(-143949203655492636571663007349082765574_i128),(-99206440981977610518256731036459215304_i128)];
_14 = [9440886644056868107_u64,5914767540530191483_u64,16541279018827819477_u64,8465141447810643501_u64,5747356801917325128_u64,3239660895376407224_u64,2376656434014509971_u64];
_7 = _3;
_14 = [6873385966980158196_u64,8436718805062732636_u64,5113691782083377411_u64,10795337789752202688_u64,1113297796051608076_u64,4074934008916102077_u64,2881304119133614392_u64];
_10 = _6;
_17 = (-57_i8) as f64;
_4 = _3 + _7;
_12 = '\u{5843a}';
_5 = [_12,_12,_12,_12];
_22 = _13 as isize;
_18 = _9;
Goto(bb3)
}
bb3 = {
_4 = 91_i8 as isize;
_13 = (-1928251893_i32) as i16;
_12 = '\u{1f2a}';
_8 = 54068512733281338081938479113233786813_u128 as f32;
_20 = _8 - _8;
_12 = '\u{5f7e9}';
_22 = _3 & _2;
_7 = _3;
_10 = [_22,_3];
_11 = [(-123456236992171852111315570454209039656_i128),(-159308747911633489883067138457351657735_i128),(-158995802316721128777741109937527284850_i128),(-35680138049191340624451340192296379219_i128)];
_16 = _9;
_20 = -_8;
_24 = [_22,_2];
_14 = [12738033080115157825_u64,4117230414851928140_u64,2121410819864820377_u64,435808564562679629_u64,6796557710095624387_u64,9709525830783867741_u64,9299042705932113122_u64];
_15 = [69579446883145139152130822636413544596_i128];
_10 = [_3,_2];
_4 = !_2;
_18 = [2223335792_u32,3738619529_u32,2657479745_u32];
_8 = 4596490647549007195_u64 as f32;
_11 = [98115464445422938838598651158469627549_i128,9698750898199009574380067396708505268_i128,77685082206301329434328858551378675201_i128,(-6726992350686900253407892209688013034_i128)];
_9 = [777771668_u32,4142771558_u32,2607683510_u32];
_8 = _20 + _20;
_10 = [_22,_3];
_15 = [(-119119417412364868939152882226547776664_i128)];
_20 = _8 * _8;
_9 = [2020186680_u32,3896482531_u32,2900382418_u32];
_8 = _20;
_25 = _22;
Goto(bb4)
}
bb4 = {
_17 = 89_i8 as f64;
Goto(bb5)
}
bb5 = {
_26.0 = [76994637520854368_i64,(-2109711819066663495_i64),(-3014523132412730109_i64),(-4955616869970342449_i64)];
_13 = _20 as i16;
_24 = [_3,_4];
_4 = _25 | _3;
_14 = [1353478980341780000_u64,9832769081045310434_u64,7290822908666212809_u64,13943916160674732878_u64,4133498578959729695_u64,11489544504220304629_u64,6738589474800481074_u64];
_15 = [(-130536489775457716274234228712602592854_i128)];
_24 = _10;
_17 = (-793274672608749773_i64) as f64;
_12 = '\u{3c9e1}';
_10 = [_7,_4];
_11 = [(-44563863721753422479776350360811640562_i128),9854922480374546652022375309201599921_i128,89006856566787397675560497736173265920_i128,169336593166398221770410453941240308211_i128];
_9 = [2883167700_u32,2395661412_u32,1101598460_u32];
_23 = _17;
_25 = _4;
_23 = -_17;
_6 = [_25,_7];
_4 = _25 >> _25;
Call(_16 = fn11(), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_11 = [(-61384604772593639163010192297397369969_i128),(-3467441660532988304905059996635201324_i128),96206988081695556114690213136308489005_i128,53811466183076890889879280947423474198_i128];
_4 = 2_usize as isize;
_4 = _22 >> _2;
_29 = 3292526212698664387_usize as u128;
_27 = _17;
_23 = _27 * _27;
_22 = _13 as isize;
_6 = [_4,_22];
_17 = _23;
_7 = !_4;
_7 = _25;
_18 = _16;
_24 = [_7,_7];
_16 = [3879188252_u32,2800828885_u32,2371461056_u32];
_32 = 22_u8 & 108_u8;
_24 = [_25,_2];
_16 = _9;
_14 = [11264914203650986980_u64,7393374446246576554_u64,14558977774790706951_u64,15604678823905329260_u64,6449047900319723369_u64,15435951108700439787_u64,4992407604444417920_u64];
_4 = _7 & _7;
_16 = [2593250800_u32,2006519367_u32,855906347_u32];
Goto(bb7)
}
bb7 = {
_22 = _4 * _4;
_6 = [_25,_7];
_29 = 68658289335117947667826221908586323510_u128;
_14 = [14334136200043487346_u64,11851669721698385703_u64,3943529700475957884_u64,1487534467995571668_u64,14051075556349960504_u64,13229025947400776391_u64,10297045879220923865_u64];
_11 = [(-58330102457427335292191072936470173087_i128),(-65061758092680879783717068051993676611_i128),(-112600285290105143176370929071543460315_i128),(-22383176038194370105099888050438657520_i128)];
_12 = '\u{42d25}';
_9 = [1495335272_u32,226161706_u32,215649742_u32];
_26.0 = [(-1977051846919996895_i64),4069169896103862739_i64,(-6497226123563448575_i64),(-4964279280141549816_i64)];
_14 = [525161204168175391_u64,4796219873975017604_u64,11840372092386684963_u64,3783514080215217693_u64,103802946655389116_u64,18191708150085341788_u64,2549090009311845697_u64];
_14 = [4771118109572775140_u64,17782236217268541273_u64,18212168153848028595_u64,15599889997578180556_u64,2435187436457025799_u64,4243963642924999207_u64,2029365174652632336_u64];
_11 = [37187755533331450017888993072199317496_i128,163498946761562355154679123353534580317_i128,90949423121738216864877931833446515390_i128,105006011227067237799422597466130030105_i128];
_26.0 = [(-7192867688595979469_i64),(-945907345561004133_i64),4868623787867972706_i64,2750607241940097618_i64];
_29 = 11884157368696108540_u64 as u128;
_29 = 180135533171753870785747498023100844219_u128;
_17 = _23 * _27;
_26.0 = [(-2260621514179403163_i64),4113192125437042363_i64,(-2135695173260570866_i64),(-1041416296129962342_i64)];
_26.0 = [8163799312840130054_i64,(-8134243724976789064_i64),(-7825376705600472390_i64),934349466851940147_i64];
_26.0 = [6638004568955955243_i64,7830639060197422861_i64,(-5497107554073937865_i64),8356215049702629107_i64];
_20 = _8 - _8;
_22 = _4;
match _29 {
180135533171753870785747498023100844219 => bb9,
_ => bb8
}
}
bb8 = {
_26.0 = [76994637520854368_i64,(-2109711819066663495_i64),(-3014523132412730109_i64),(-4955616869970342449_i64)];
_13 = _20 as i16;
_24 = [_3,_4];
_4 = _25 | _3;
_14 = [1353478980341780000_u64,9832769081045310434_u64,7290822908666212809_u64,13943916160674732878_u64,4133498578959729695_u64,11489544504220304629_u64,6738589474800481074_u64];
_15 = [(-130536489775457716274234228712602592854_i128)];
_24 = _10;
_17 = (-793274672608749773_i64) as f64;
_12 = '\u{3c9e1}';
_10 = [_7,_4];
_11 = [(-44563863721753422479776350360811640562_i128),9854922480374546652022375309201599921_i128,89006856566787397675560497736173265920_i128,169336593166398221770410453941240308211_i128];
_9 = [2883167700_u32,2395661412_u32,1101598460_u32];
_23 = _17;
_25 = _4;
_23 = -_17;
_6 = [_25,_7];
_4 = _25 >> _25;
Call(_16 = fn11(), ReturnTo(bb6), UnwindUnreachable())
}
bb9 = {
_12 = '\u{d685c}';
_7 = (-3521498433094903275_i64) as isize;
_6 = _24;
_33 = core::ptr::addr_of_mut!(_29);
_9 = _18;
_22 = _4 * _25;
_8 = 1583807191_u32 as f32;
_18 = _9;
_25 = -_22;
_5 = [_12,_12,_12,_12];
_4 = _25 ^ _25;
(*_33) = !113436031203332791483030112151889377710_u128;
_27 = -_23;
_32 = !250_u8;
_10 = [_25,_3];
Goto(bb10)
}
bb10 = {
_23 = -_17;
_14 = [4081348808436201367_u64,1497638215978600463_u64,2877321241450762061_u64,3146857991963256248_u64,240270601027092211_u64,4081334489015519884_u64,17265386321493159090_u64];
_2 = -_22;
_13 = 103_i8 as i16;
_32 = 120_u8;
_18 = [2470171193_u32,3373743509_u32,73139147_u32];
_3 = !_25;
_27 = _23 - _23;
_33 = core::ptr::addr_of_mut!((*_33));
_16 = [3580607399_u32,3461295510_u32,1985737933_u32];
_38 = core::ptr::addr_of_mut!(_12);
_23 = -_27;
(*_38) = '\u{9cc9a}';
_5 = [(*_38),(*_38),(*_38),_12];
_25 = _32 as isize;
_37 = _2;
_7 = _4 * _37;
_2 = _13 as isize;
_32 = true as u8;
_29 = 93_i8 as u128;
(*_38) = '\u{89f7f}';
_17 = _23;
_39 = !_3;
(*_38) = '\u{cf094}';
_6 = [_3,_37];
Call(_35 = fn17(Move(_1), _10, _37, _4, _3, _10, _10, _39), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_32 = !160_u8;
_25 = _22 * _39;
_41 = _27 * _27;
Goto(bb12)
}
bb12 = {
(*_33) = !309775142733488528014071628674958939267_u128;
_3 = _17 as isize;
_24 = [_7,_4];
_9 = [1737247031_u32,3791525725_u32,2647611835_u32];
_24 = [_22,_25];
_42 = _12;
_6 = [_37,_4];
_4 = _37 & _22;
_43 = _23;
(*_38) = _42;
_32 = 15786834134703012501_u64 as u8;
_39 = !_7;
(*_38) = _42;
_37 = false as isize;
Goto(bb13)
}
bb13 = {
_41 = _17;
_45 = 59_i8;
_2 = (*_38) as isize;
_5 = [_42,_42,_42,(*_38)];
(*_33) = !96244119652833672946566719921167807237_u128;
_17 = _41 * _41;
_10 = [_7,_7];
_7 = !_25;
_8 = _20;
_8 = 2335775866_u32 as f32;
_25 = !_22;
_45 = _13 as i8;
(*_38) = _42;
(*_33) = 117128519753245213014754099096753899722_i128 as u128;
_10 = [_25,_25];
_36 = _4 & _22;
_27 = _41 + _41;
_23 = _17;
_2 = _4 ^ _7;
_26.0 = [(-2983302309138211536_i64),(-8602673802760642786_i64),3232822490121388652_i64,(-5490130122312791640_i64)];
_23 = (*_33) as f64;
_35 = _27 - _17;
_15 = [159043827312933743391353491388338612102_i128];
_12 = _42;
_21 = core::ptr::addr_of!(_47);
Call(_2 = core::intrinsics::transmute(_22), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_35 = _17;
_50 = [_25,_7,_7,_36];
_37 = !_39;
_46 = core::ptr::addr_of!(_6);
_38 = core::ptr::addr_of_mut!((*_38));
_45 = 27_i8 & 75_i8;
_24 = (*_46);
_13 = (-10372_i16);
_46 = core::ptr::addr_of!((*_46));
(*_33) = !248277500027590629856133449746355126901_u128;
(*_38) = _42;
_45 = -(-54_i8);
_29 = 130076478837317672883100699085552886296_u128;
_13 = !(-14777_i16);
(*_33) = 270949944591604101302413704002076438095_u128 | 231666540498823849105369243051393486708_u128;
_20 = -_8;
_23 = _41 * _17;
_38 = core::ptr::addr_of_mut!(_42);
_51 = [315679379_i32,(-1140622289_i32),(-1671064239_i32),1551568654_i32,(-2066374316_i32),(-65318241_i32),1969154614_i32,946232118_i32];
_15 = [142596000191000528315919356726147659826_i128];
_50 = [_36,_2,_22,_7];
_26.0 = [(-1788878306558296175_i64),(-5422265681120625646_i64),(-5939870905222868190_i64),7826232498823876955_i64];
Goto(bb15)
}
bb15 = {
_52 = -_8;
_50 = [_37,_7,_4,_39];
_53 = core::ptr::addr_of!(_45);
_54 = 14390304744449718605_u64;
_54 = 12215870847443238059_u64 & 2337172255489286778_u64;
(*_33) = 23990_u16 as u128;
_9 = [3622324490_u32,869692662_u32,2218079656_u32];
_26.0 = [(-2669706341712882109_i64),5217257231884533595_i64,8111614578262407848_i64,(-6946296455534697262_i64)];
_26.0 = [(-8764889259471747660_i64),3530573300915690599_i64,8844639973488235325_i64,5839663897413730965_i64];
_3 = _39 + _4;
_10 = [_4,_4];
_61 = !9011674040647061334_usize;
_33 = core::ptr::addr_of_mut!((*_33));
_29 = !212750579989021901241785849648232476920_u128;
Goto(bb16)
}
bb16 = {
_56 = _2;
_26.0 = [(-3250710163723309250_i64),(-7671028860646338954_i64),814921586985237586_i64,5445287828740284593_i64];
Goto(bb17)
}
bb17 = {
(*_33) = _45 as u128;
_25 = _2;
_18 = [869982579_u32,485823918_u32,1151835489_u32];
_56 = -_22;
_3 = _4 ^ _37;
_13 = 53935_u16 as i16;
_12 = (*_38);
_62.0 = _26.0;
_29 = _13 as u128;
_54 = 2456291120663747918_u64 >> _3;
_45 = (-101_i8) * 91_i8;
_50 = [_4,_4,_4,_56];
_52 = _20 + _8;
_60 = [114509145694027700490083116846888701059_i128,(-149638451315270954592180080507018960198_i128),25943401819940578262484055373055410297_i128,(-46032995828088367788048497008847762664_i128)];
_52 = _54 as f32;
_32 = 132067113728829733234719765371671935224_i128 as u8;
_41 = _35 * _35;
_2 = _56;
_53 = core::ptr::addr_of!((*_53));
_51 = [330430748_i32,(-54668356_i32),1423402459_i32,(-1629139002_i32),(-525831133_i32),1453703080_i32,1641547189_i32,(-2219185_i32)];
_56 = _22;
(*_46) = [_22,_56];
_14 = [_54,_54,_54,_54,_54,_54,_54];
(*_53) = 84_i8;
_17 = _45 as f64;
_39 = _4 | _7;
(*_21) = core::ptr::addr_of!(_67);
Goto(bb18)
}
bb18 = {
_26 = _62;
Goto(bb19)
}
bb19 = {
_64 = [98751435906827045127025122584103795181_i128];
_68 = _32 as f32;
_32 = 12_u8;
_6 = _24;
_66 = (-1880233169_i32) >> _3;
_62.0 = [(-7121051137639740153_i64),1151459559610371720_i64,8552912913875089589_i64,(-1770401844016239260_i64)];
_32 = 255_u8;
_60 = [(-95259258856084691200766051729784409688_i128),(-169785983870167280928639656172961655549_i128),(-152249022820530913814228529101848005219_i128),157386745370593740424377041181573229973_i128];
_61 = 15443475646800339521_usize;
_29 = 211335746865380952629930008607318079624_u128 | 281879655265187272642651982929194041456_u128;
_45 = _61 as i8;
_17 = _27;
_2 = _25 << _7;
_49 = _52 - _52;
_29 = 3974566249_u32 as u128;
_66 = -1344045886_i32;
_58 = _50;
_7 = -_3;
_22 = _2;
_24 = _6;
Goto(bb20)
}
bb20 = {
_9 = _18;
_37 = _39 * _39;
_8 = _52 + _49;
_15 = _64;
_39 = _54 as isize;
(*_38) = _12;
_22 = _39;
_5 = [(*_38),_42,(*_38),(*_38)];
_69 = core::ptr::addr_of!(_29);
(*_47) = [22459_u16,36754_u16,44027_u16,24488_u16];
_15 = [92951475021572852522825099499557980120_i128];
_47 = core::ptr::addr_of!(_67);
_8 = -_52;
match _32 {
255 => bb21,
_ => bb13
}
}
bb21 = {
_10 = (*_46);
_42 = _12;
_56 = _7 << _37;
_72 = (*_38);
(*_47) = [25_u16,42253_u16,15082_u16,41541_u16];
_46 = core::ptr::addr_of!(_6);
_62.0 = [501096150272589389_i64,(-1206450754332743732_i64),(-830940447532351980_i64),(-2661831163931013833_i64)];
_17 = _27 + _41;
_65 = [_66,_66,_66,_66];
(*_38) = _72;
(*_38) = _12;
_73 = Adt65::Variant0 { fld0: (*_46),fld1: _32 };
_3 = _17 as isize;
(*_38) = _12;
(*_53) = 109_i8;
_41 = _35;
_67 = [45829_u16,5931_u16,65501_u16,43985_u16];
_68 = -_52;
_5 = [(*_38),(*_38),_72,(*_38)];
(*_53) = 30_i8;
_66 = !1563257256_i32;
_26 = _62;
_26 = (_62.0,);
_3 = _4;
_60 = [(-120456486570198956024394554050276038613_i128),(-47828926189866795884101130106473307703_i128),(-60933674811034057349234377759878815891_i128),(-81902970161001907402091227238874237176_i128)];
(*_38) = _12;
_55 = Move(_73);
_32 = _23 as u8;
_21 = core::ptr::addr_of!(_47);
match (*_53) {
0 => bb7,
1 => bb22,
2 => bb23,
3 => bb24,
30 => bb26,
_ => bb25
}
}
bb22 = {
_12 = '\u{d685c}';
_7 = (-3521498433094903275_i64) as isize;
_6 = _24;
_33 = core::ptr::addr_of_mut!(_29);
_9 = _18;
_22 = _4 * _25;
_8 = 1583807191_u32 as f32;
_18 = _9;
_25 = -_22;
_5 = [_12,_12,_12,_12];
_4 = _25 ^ _25;
(*_33) = !113436031203332791483030112151889377710_u128;
_27 = -_23;
_32 = !250_u8;
_10 = [_25,_3];
Goto(bb10)
}
bb23 = {
_64 = [98751435906827045127025122584103795181_i128];
_68 = _32 as f32;
_32 = 12_u8;
_6 = _24;
_66 = (-1880233169_i32) >> _3;
_62.0 = [(-7121051137639740153_i64),1151459559610371720_i64,8552912913875089589_i64,(-1770401844016239260_i64)];
_32 = 255_u8;
_60 = [(-95259258856084691200766051729784409688_i128),(-169785983870167280928639656172961655549_i128),(-152249022820530913814228529101848005219_i128),157386745370593740424377041181573229973_i128];
_61 = 15443475646800339521_usize;
_29 = 211335746865380952629930008607318079624_u128 | 281879655265187272642651982929194041456_u128;
_45 = _61 as i8;
_17 = _27;
_2 = _25 << _7;
_49 = _52 - _52;
_29 = 3974566249_u32 as u128;
_66 = -1344045886_i32;
_58 = _50;
_7 = -_3;
_22 = _2;
_24 = _6;
Goto(bb20)
}
bb24 = {
_52 = -_8;
_50 = [_37,_7,_4,_39];
_53 = core::ptr::addr_of!(_45);
_54 = 14390304744449718605_u64;
_54 = 12215870847443238059_u64 & 2337172255489286778_u64;
(*_33) = 23990_u16 as u128;
_9 = [3622324490_u32,869692662_u32,2218079656_u32];
_26.0 = [(-2669706341712882109_i64),5217257231884533595_i64,8111614578262407848_i64,(-6946296455534697262_i64)];
_26.0 = [(-8764889259471747660_i64),3530573300915690599_i64,8844639973488235325_i64,5839663897413730965_i64];
_3 = _39 + _4;
_10 = [_4,_4];
_61 = !9011674040647061334_usize;
_33 = core::ptr::addr_of_mut!((*_33));
_29 = !212750579989021901241785849648232476920_u128;
Goto(bb16)
}
bb25 = {
_41 = _17;
_45 = 59_i8;
_2 = (*_38) as isize;
_5 = [_42,_42,_42,(*_38)];
(*_33) = !96244119652833672946566719921167807237_u128;
_17 = _41 * _41;
_10 = [_7,_7];
_7 = !_25;
_8 = _20;
_8 = 2335775866_u32 as f32;
_25 = !_22;
_45 = _13 as i8;
(*_38) = _42;
(*_33) = 117128519753245213014754099096753899722_i128 as u128;
_10 = [_25,_25];
_36 = _4 & _22;
_27 = _41 + _41;
_23 = _17;
_2 = _4 ^ _7;
_26.0 = [(-2983302309138211536_i64),(-8602673802760642786_i64),3232822490121388652_i64,(-5490130122312791640_i64)];
_23 = (*_33) as f64;
_35 = _27 - _17;
_15 = [159043827312933743391353491388338612102_i128];
_12 = _42;
_21 = core::ptr::addr_of!(_47);
Call(_2 = core::intrinsics::transmute(_22), ReturnTo(bb14), UnwindUnreachable())
}
bb26 = {
_52 = _8;
(*_47) = [1523_u16,18286_u16,56960_u16,13361_u16];
_54 = 2231770481389792785_u64;
_11 = _60;
_60 = [10505133628091301925451949978985114041_i128,(-80176042608395129881671328589535579644_i128),(-130095996715863403728999100478481607876_i128),125385945171034476389937124080756572482_i128];
(*_33) = 337321550054141007907509251660952044143_u128;
match _45 {
0 => bb22,
1 => bb27,
2 => bb28,
3 => bb29,
4 => bb30,
5 => bb31,
30 => bb33,
_ => bb32
}
}
bb27 = {
_26.0 = [76994637520854368_i64,(-2109711819066663495_i64),(-3014523132412730109_i64),(-4955616869970342449_i64)];
_13 = _20 as i16;
_24 = [_3,_4];
_4 = _25 | _3;
_14 = [1353478980341780000_u64,9832769081045310434_u64,7290822908666212809_u64,13943916160674732878_u64,4133498578959729695_u64,11489544504220304629_u64,6738589474800481074_u64];
_15 = [(-130536489775457716274234228712602592854_i128)];
_24 = _10;
_17 = (-793274672608749773_i64) as f64;
_12 = '\u{3c9e1}';
_10 = [_7,_4];
_11 = [(-44563863721753422479776350360811640562_i128),9854922480374546652022375309201599921_i128,89006856566787397675560497736173265920_i128,169336593166398221770410453941240308211_i128];
_9 = [2883167700_u32,2395661412_u32,1101598460_u32];
_23 = _17;
_25 = _4;
_23 = -_17;
_6 = [_25,_7];
_4 = _25 >> _25;
Call(_16 = fn11(), ReturnTo(bb6), UnwindUnreachable())
}
bb28 = {
_41 = _17;
_45 = 59_i8;
_2 = (*_38) as isize;
_5 = [_42,_42,_42,(*_38)];
(*_33) = !96244119652833672946566719921167807237_u128;
_17 = _41 * _41;
_10 = [_7,_7];
_7 = !_25;
_8 = _20;
_8 = 2335775866_u32 as f32;
_25 = !_22;
_45 = _13 as i8;
(*_38) = _42;
(*_33) = 117128519753245213014754099096753899722_i128 as u128;
_10 = [_25,_25];
_36 = _4 & _22;
_27 = _41 + _41;
_23 = _17;
_2 = _4 ^ _7;
_26.0 = [(-2983302309138211536_i64),(-8602673802760642786_i64),3232822490121388652_i64,(-5490130122312791640_i64)];
_23 = (*_33) as f64;
_35 = _27 - _17;
_15 = [159043827312933743391353491388338612102_i128];
_12 = _42;
_21 = core::ptr::addr_of!(_47);
Call(_2 = core::intrinsics::transmute(_22), ReturnTo(bb14), UnwindUnreachable())
}
bb29 = {
_12 = '\u{d685c}';
_7 = (-3521498433094903275_i64) as isize;
_6 = _24;
_33 = core::ptr::addr_of_mut!(_29);
_9 = _18;
_22 = _4 * _25;
_8 = 1583807191_u32 as f32;
_18 = _9;
_25 = -_22;
_5 = [_12,_12,_12,_12];
_4 = _25 ^ _25;
(*_33) = !113436031203332791483030112151889377710_u128;
_27 = -_23;
_32 = !250_u8;
_10 = [_25,_3];
Goto(bb10)
}
bb30 = {
_12 = '\u{d685c}';
_7 = (-3521498433094903275_i64) as isize;
_6 = _24;
_33 = core::ptr::addr_of_mut!(_29);
_9 = _18;
_22 = _4 * _25;
_8 = 1583807191_u32 as f32;
_18 = _9;
_25 = -_22;
_5 = [_12,_12,_12,_12];
_4 = _25 ^ _25;
(*_33) = !113436031203332791483030112151889377710_u128;
_27 = -_23;
_32 = !250_u8;
_10 = [_25,_3];
Goto(bb10)
}
bb31 = {
_23 = -_17;
_14 = [4081348808436201367_u64,1497638215978600463_u64,2877321241450762061_u64,3146857991963256248_u64,240270601027092211_u64,4081334489015519884_u64,17265386321493159090_u64];
_2 = -_22;
_13 = 103_i8 as i16;
_32 = 120_u8;
_18 = [2470171193_u32,3373743509_u32,73139147_u32];
_3 = !_25;
_27 = _23 - _23;
_33 = core::ptr::addr_of_mut!((*_33));
_16 = [3580607399_u32,3461295510_u32,1985737933_u32];
_38 = core::ptr::addr_of_mut!(_12);
_23 = -_27;
(*_38) = '\u{9cc9a}';
_5 = [(*_38),(*_38),(*_38),_12];
_25 = _32 as isize;
_37 = _2;
_7 = _4 * _37;
_2 = _13 as isize;
_32 = true as u8;
_29 = 93_i8 as u128;
(*_38) = '\u{89f7f}';
_17 = _23;
_39 = !_3;
(*_38) = '\u{cf094}';
_6 = [_3,_37];
Call(_35 = fn17(Move(_1), _10, _37, _4, _3, _10, _10, _39), ReturnTo(bb11), UnwindUnreachable())
}
bb32 = {
_9 = _18;
_37 = _39 * _39;
_8 = _52 + _49;
_15 = _64;
_39 = _54 as isize;
(*_38) = _12;
_22 = _39;
_5 = [(*_38),_42,(*_38),(*_38)];
_69 = core::ptr::addr_of!(_29);
(*_47) = [22459_u16,36754_u16,44027_u16,24488_u16];
_15 = [92951475021572852522825099499557980120_i128];
_47 = core::ptr::addr_of!(_67);
_8 = -_52;
match _32 {
255 => bb21,
_ => bb13
}
}
bb33 = {
_12 = _72;
_35 = -_27;
(*_53) = 63_i8 * 30_i8;
_26.0 = _62.0;
(*_38) = _72;
_68 = _49 + _8;
Goto(bb34)
}
bb34 = {
_35 = _17;
_24 = [_3,_22];
_26 = _62;
_69 = core::ptr::addr_of!((*_69));
_73 = Move(_55);
_58 = _50;
_72 = _12;
_69 = core::ptr::addr_of!((*_33));
_48 = core::ptr::addr_of!(_69);
Goto(bb35)
}
bb35 = {
_43 = _13 as f64;
_5 = [_42,_72,(*_38),_72];
(*_46) = _24;
SetDiscriminant(_73, 1);
(*_38) = _72;
_17 = _41;
_78 = [_66];
_15 = [(-52479191391161094769814127546130115699_i128)];
(*_69) = 183200122481471776746930691205090763709_u128 | 266363182768870116643110722672666754755_u128;
_18 = [686459338_u32,3216140431_u32,2281553955_u32];
_8 = _52 - _68;
_75 = !_61;
_27 = -_23;
_22 = _36 + _36;
_71 = _11;
_8 = _52;
_13 = -(-29600_i16);
place!(Field::<[u64; 7]>(Variant(_73, 1), 5)) = [_54,_54,_54,_54,_54,_54,_54];
(*_38) = _72;
_72 = _12;
_68 = _66 as f32;
_33 = core::ptr::addr_of_mut!(_29);
_37 = -_22;
_11 = [(-166933026540710522794279265380482212217_i128),109175854915954005641658148969824958023_i128,(-154723930760633257657835382834353290564_i128),31366236450429732829547999467987017877_i128];
_63 = !35229_u16;
_51 = [_66,_66,_66,_66,_66,_66,_66,_66];
_10 = [_22,_56];
_37 = _41 as isize;
match _54 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb28,
4 => bb34,
5 => bb36,
6 => bb37,
2231770481389792785 => bb39,
_ => bb38
}
}
bb36 = {
_35 = _17;
_24 = [_3,_22];
_26 = _62;
_69 = core::ptr::addr_of!((*_69));
_73 = Move(_55);
_58 = _50;
_72 = _12;
_69 = core::ptr::addr_of!((*_33));
_48 = core::ptr::addr_of!(_69);
Goto(bb35)
}
bb37 = {
_12 = '\u{d685c}';
_7 = (-3521498433094903275_i64) as isize;
_6 = _24;
_33 = core::ptr::addr_of_mut!(_29);
_9 = _18;
_22 = _4 * _25;
_8 = 1583807191_u32 as f32;
_18 = _9;
_25 = -_22;
_5 = [_12,_12,_12,_12];
_4 = _25 ^ _25;
(*_33) = !113436031203332791483030112151889377710_u128;
_27 = -_23;
_32 = !250_u8;
_10 = [_25,_3];
Goto(bb10)
}
bb38 = {
_64 = [98751435906827045127025122584103795181_i128];
_68 = _32 as f32;
_32 = 12_u8;
_6 = _24;
_66 = (-1880233169_i32) >> _3;
_62.0 = [(-7121051137639740153_i64),1151459559610371720_i64,8552912913875089589_i64,(-1770401844016239260_i64)];
_32 = 255_u8;
_60 = [(-95259258856084691200766051729784409688_i128),(-169785983870167280928639656172961655549_i128),(-152249022820530913814228529101848005219_i128),157386745370593740424377041181573229973_i128];
_61 = 15443475646800339521_usize;
_29 = 211335746865380952629930008607318079624_u128 | 281879655265187272642651982929194041456_u128;
_45 = _61 as i8;
_17 = _27;
_2 = _25 << _7;
_49 = _52 - _52;
_29 = 3974566249_u32 as u128;
_66 = -1344045886_i32;
_58 = _50;
_7 = -_3;
_22 = _2;
_24 = _6;
Goto(bb20)
}
bb39 = {
(*_46) = [_56,_22];
(*_69) = 268189793905291287684378492480256182954_u128;
Goto(bb40)
}
bb40 = {
place!(Field::<*const [u16; 4]>(Variant(_73, 1), 7)) = core::ptr::addr_of!((*_47));
_72 = (*_38);
_86 = -_7;
_87 = Adt27::Variant2 { fld0: 6909103372480111567_i64,fld1: (*_38),fld2: (*_33),fld3: _13 };
_5 = [(*_38),(*_38),_12,_12];
_15 = [52508978834810189127703223752152555215_i128];
_63 = 2454268908_u32 as u16;
_79 = _32 as i16;
_37 = -_56;
_13 = _36 as i16;
_20 = 3650689922_u32 as f32;
match _29 {
268189793905291287684378492480256182954 => bb42,
_ => bb41
}
}
bb41 = {
_35 = _17;
_24 = [_3,_22];
_26 = _62;
_69 = core::ptr::addr_of!((*_69));
_73 = Move(_55);
_58 = _50;
_72 = _12;
_69 = core::ptr::addr_of!((*_33));
_48 = core::ptr::addr_of!(_69);
Goto(bb35)
}
bb42 = {
_72 = _12;
(*_33) = Field::<u128>(Variant(_87, 2), 2);
_26.0 = [8610340682328086324_i64,1478665715774376620_i64,8803605730423047511_i64,3424083783080215213_i64];
_80 = core::ptr::addr_of!(_32);
_17 = _41;
place!(Field::<i16>(Variant(_87, 2), 3)) = _13;
(*_80) = 97_u8;
_17 = -_35;
_27 = _45 as f64;
_79 = -_13;
_73 = Adt65::Variant0 { fld0: _10,fld1: _32 };
_48 = core::ptr::addr_of!((*_48));
_16 = _18;
(*_38) = _12;
_90 = [52518141167435205573486757366818247250_i128];
_4 = _2;
_85 = (_61, _79);
_66 = 878100248_i32 + (-1393059120_i32);
_77 = _65;
_16 = [2621734834_u32,2867433089_u32,1761627369_u32];
RET = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_87, 2), 0)));
_44 = &mut RET;
(*_69) = Field::<u128>(Variant(_87, 2), 2) % Field::<u128>(Variant(_87, 2), 2);
_37 = _3;
_68 = _8;
_95 = !_39;
Goto(bb43)
}
bb43 = {
Call(_96 = dump_var(10_usize, 67_usize, Move(_67), 54_usize, Move(_54), 45_usize, Move(_45), 85_usize, Move(_85)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_96 = dump_var(10_usize, 3_usize, Move(_3), 65_usize, Move(_65), 72_usize, Move(_72), 10_usize, Move(_10)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_96 = dump_var(10_usize, 7_usize, Move(_7), 5_usize, Move(_5), 36_usize, Move(_36), 42_usize, Move(_42)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_96 = dump_var(10_usize, 29_usize, Move(_29), 90_usize, Move(_90), 9_usize, Move(_9), 56_usize, Move(_56)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_96 = dump_var(10_usize, 25_usize, Move(_25), 86_usize, Move(_86), 63_usize, Move(_63), 78_usize, Move(_78)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_96 = dump_var(10_usize, 95_usize, Move(_95), 51_usize, Move(_51), 22_usize, Move(_22), 60_usize, Move(_60)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11() -> [u32; 3] {
mir! {
type RET = [u32; 3];
let _1: (usize, i16);
let _2: Adt65;
let _3: u128;
let _4: (u64, *const i8);
let _5: [isize; 4];
let _6: *mut i64;
let _7: Adt47;
let _8: f64;
let _9: isize;
let _10: f32;
let _11: i64;
let _12: *mut u16;
let _13: i32;
let _14: bool;
let _15: [i32; 4];
let _16: Adt21;
let _17: char;
let _18: &'static mut i64;
let _19: (([u16; 4], f32, *mut char), (usize, i16), *const usize, &'static mut i64);
let _20: *mut Adt27;
let _21: Adt40;
let _22: i16;
let _23: (u64, *const i8);
let _24: [i128; 4];
let _25: ([isize; 4],);
let _26: isize;
let _27: ();
let _28: ();
{
RET = [3373582281_u32,2682226422_u32,3354294983_u32];
RET = [2371699623_u32,2538636229_u32,1504182796_u32];
Goto(bb1)
}
bb1 = {
RET = [1148738534_u32,3308740776_u32,2018636168_u32];
RET = [3405405939_u32,675123492_u32,2243248526_u32];
RET = [2579600205_u32,2212159913_u32,537962681_u32];
RET = [2942747535_u32,2390388809_u32,1670722493_u32];
RET = [3737064977_u32,652017884_u32,2568205686_u32];
RET = [3997949408_u32,369311226_u32,3996762594_u32];
RET = [1264384571_u32,3166226756_u32,579061868_u32];
RET = [1129669895_u32,1714305877_u32,3384683691_u32];
Goto(bb2)
}
bb2 = {
RET = [2109082802_u32,60665349_u32,1516496849_u32];
RET = [2732239209_u32,3691493783_u32,2835134316_u32];
RET = [3616833962_u32,2063758756_u32,3845678089_u32];
RET = [3769649555_u32,3411399616_u32,2429997523_u32];
RET = [4172453756_u32,213566096_u32,92166900_u32];
RET = [2997630700_u32,2555808820_u32,215093968_u32];
RET = [2697796015_u32,1160302240_u32,1419447901_u32];
RET = [1372975795_u32,2848223156_u32,3441595227_u32];
RET = [3744630200_u32,3004358216_u32,2007702283_u32];
RET = [211380170_u32,3360733776_u32,71313957_u32];
RET = [4280760810_u32,3909112058_u32,438486138_u32];
RET = [3342937222_u32,3398611715_u32,3420452300_u32];
_1 = (2_usize, 22724_i16);
RET = [140773927_u32,3559567382_u32,2949383631_u32];
RET = [3330495767_u32,158222137_u32,2144444470_u32];
RET = [1467438094_u32,2514189832_u32,349888862_u32];
_1.0 = !2472518506023251049_usize;
_4.0 = 17068831648361123328_u64 - 8374381213419449408_u64;
match _1.1 {
0 => bb1,
22724 => bb4,
_ => bb3
}
}
bb3 = {
RET = [1148738534_u32,3308740776_u32,2018636168_u32];
RET = [3405405939_u32,675123492_u32,2243248526_u32];
RET = [2579600205_u32,2212159913_u32,537962681_u32];
RET = [2942747535_u32,2390388809_u32,1670722493_u32];
RET = [3737064977_u32,652017884_u32,2568205686_u32];
RET = [3997949408_u32,369311226_u32,3996762594_u32];
RET = [1264384571_u32,3166226756_u32,579061868_u32];
RET = [1129669895_u32,1714305877_u32,3384683691_u32];
Goto(bb2)
}
bb4 = {
RET = [1877545264_u32,1892095469_u32,3850295831_u32];
_4.0 = 2511570616662166160_u64;
_3 = (-702936112_i32) as u128;
Call(_4.0 = core::intrinsics::transmute(_1.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_1 = (4_usize, (-5826_i16));
RET = [3400795155_u32,1578575998_u32,1929520126_u32];
_3 = 124941644831593856000546066968632348577_u128 << _1.1;
_3 = 146858921010465417930881561181482848244_u128 | 223278884664230875247635417000538189872_u128;
match _1.0 {
0 => bb1,
1 => bb2,
4 => bb6,
_ => bb4
}
}
bb6 = {
RET = [3109639192_u32,3686455666_u32,3812475886_u32];
_3 = '\u{27316}' as u128;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4.0 = _1.0 as u64;
_1.1 = 9223372036854775807_isize as i16;
_4.0 = 16303785093451713297_u64;
RET = [3721038268_u32,822958630_u32,1683684934_u32];
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,93_isize,(-22_isize)];
_1.1 = !(-31352_i16);
_1.0 = 13656757648309106105_usize;
_8 = 18_u8 as f64;
match _4.0 {
16303785093451713297 => bb8,
_ => bb7
}
}
bb7 = {
RET = [1148738534_u32,3308740776_u32,2018636168_u32];
RET = [3405405939_u32,675123492_u32,2243248526_u32];
RET = [2579600205_u32,2212159913_u32,537962681_u32];
RET = [2942747535_u32,2390388809_u32,1670722493_u32];
RET = [3737064977_u32,652017884_u32,2568205686_u32];
RET = [3997949408_u32,369311226_u32,3996762594_u32];
RET = [1264384571_u32,3166226756_u32,579061868_u32];
RET = [1129669895_u32,1714305877_u32,3384683691_u32];
Goto(bb2)
}
bb8 = {
RET = [2415998021_u32,3044137221_u32,580721161_u32];
_1.0 = 35989_u16 as usize;
_3 = 76118587982464146909019866673882782156_u128 & 43644131813988558016139986591213849708_u128;
RET = [3098862849_u32,1285183175_u32,1542639763_u32];
_1.1 = 10811_i16;
RET = [3551951760_u32,2879061495_u32,750287425_u32];
_10 = 1748052413_u32 as f32;
RET = [4121641196_u32,2768686668_u32,3256722806_u32];
RET = [864580736_u32,2335209997_u32,4166421563_u32];
RET = [461452339_u32,195588606_u32,2771239390_u32];
_5 = [0_isize,(-66_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = 9223372036854775807_isize as f64;
_9 = 6029352507607973545_i64 as isize;
_8 = _10 as f64;
_3 = 9206092890504912289555750468354852757_u128 + 226187377367556072315969893850298876880_u128;
_9 = 32_u8 as isize;
_9 = !9223372036854775807_isize;
_3 = _8 as u128;
match _1.1 {
0 => bb9,
10811 => bb11,
_ => bb10
}
}
bb9 = {
RET = [1148738534_u32,3308740776_u32,2018636168_u32];
RET = [3405405939_u32,675123492_u32,2243248526_u32];
RET = [2579600205_u32,2212159913_u32,537962681_u32];
RET = [2942747535_u32,2390388809_u32,1670722493_u32];
RET = [3737064977_u32,652017884_u32,2568205686_u32];
RET = [3997949408_u32,369311226_u32,3996762594_u32];
RET = [1264384571_u32,3166226756_u32,579061868_u32];
RET = [1129669895_u32,1714305877_u32,3384683691_u32];
Goto(bb2)
}
bb10 = {
RET = [3109639192_u32,3686455666_u32,3812475886_u32];
_3 = '\u{27316}' as u128;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4.0 = _1.0 as u64;
_1.1 = 9223372036854775807_isize as i16;
_4.0 = 16303785093451713297_u64;
RET = [3721038268_u32,822958630_u32,1683684934_u32];
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,93_isize,(-22_isize)];
_1.1 = !(-31352_i16);
_1.0 = 13656757648309106105_usize;
_8 = 18_u8 as f64;
match _4.0 {
16303785093451713297 => bb8,
_ => bb7
}
}
bb11 = {
_9 = 111_i8 as isize;
_1.0 = 799046719_i32 as usize;
_4.0 = !2414044038590896288_u64;
_6 = core::ptr::addr_of_mut!(_11);
RET = [3591879990_u32,732248337_u32,1762600571_u32];
(*_6) = -5338863799277960123_i64;
_10 = 9_u8 as f32;
_1.1 = -(-2523_i16);
_11 = _3 as i64;
_4.0 = (-33_i8) as u64;
_5 = [_9,_9,_9,_9];
_9 = -9223372036854775807_isize;
_10 = _9 as f32;
_9 = 182_u8 as isize;
_5 = [_9,_9,_9,_9];
_6 = core::ptr::addr_of_mut!((*_6));
_8 = (*_6) as f64;
_9 = 117_isize * 9223372036854775807_isize;
Call(_8 = fn12(_4.0, (*_6), _9, _11, _1.0, _3, _5, _5, _5, _11), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_11 = 6326367352597790262_i64;
_1 = (7_usize, (-25005_i16));
_9 = (-9223372036854775808_isize) * (-15_isize);
_1 = (4_usize, 17030_i16);
_15 = [1435275066_i32,(-1641371606_i32),(-439346933_i32),1289513511_i32];
_5 = [_9,_9,_9,_9];
_1.0 = 6_usize;
RET = [4292155947_u32,1200067030_u32,2776427414_u32];
_13 = 147877684_i32 - 919989124_i32;
_3 = 103_u8 as u128;
_10 = _1.0 as f32;
(*_6) = 1294195224124046737_i64;
_6 = core::ptr::addr_of_mut!((*_6));
Goto(bb13)
}
bb13 = {
RET = [2956965415_u32,2417907100_u32,1679025236_u32];
RET = [1141172320_u32,3692867865_u32,3602233932_u32];
_17 = '\u{1011f7}';
Goto(bb14)
}
bb14 = {
_3 = !141338175216193030924393033405650684472_u128;
(*_6) = 1492724442_u32 as i64;
_17 = '\u{85349}';
RET = [2662871110_u32,1053714354_u32,3543135184_u32];
_1.1 = (-18930_i16) & 2650_i16;
(*_6) = (-5258851235980736445_i64);
_3 = _13 as u128;
RET = [4254041527_u32,4278818945_u32,3170802104_u32];
RET = [4163117160_u32,2382478400_u32,2256011946_u32];
_11 = -(-8722710926224615100_i64);
_15 = [_13,_13,_13,_13];
_14 = false;
_19.0.2 = core::ptr::addr_of_mut!(_17);
_19.1 = _1;
RET = [2585359232_u32,3622594142_u32,4220385547_u32];
RET = [148215768_u32,3047852887_u32,1166308193_u32];
_9 = !83_isize;
_19.0.1 = -_10;
_19.0.0 = [11101_u16,36403_u16,44448_u16,49354_u16];
_16 = Adt21::Variant3 { fld0: _4.0 };
_11 = (-1548628481915166195_i64) << Field::<u64>(Variant(_16, 3), 0);
SetDiscriminant(_16, 3);
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(11_usize, 15_usize, Move(_15), 5_usize, Move(_5), 3_usize, Move(_3), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: u64,mut _2: i64,mut _3: isize,mut _4: i64,mut _5: usize,mut _6: u128,mut _7: [isize; 4],mut _8: [isize; 4],mut _9: [isize; 4],mut _10: i64) -> f64 {
mir! {
type RET = f64;
let _11: (usize, i16);
let _12: isize;
let _13: &'static mut [u16; 4];
let _14: [u32; 3];
let _15: *const usize;
let _16: ([isize; 4],);
let _17: isize;
let _18: u128;
let _19: char;
let _20: (*mut Adt27, *mut (&'static u8, *const usize, *const u128, *const u128), Adt47, Adt26);
let _21: [u16; 4];
let _22: u8;
let _23: ();
let _24: ();
{
_10 = _4;
_4 = !_10;
_3 = -9223372036854775807_isize;
_1 = _3 as u64;
_3 = (-62_isize) - (-58_isize);
Call(_3 = fn13(_6, _2, _10, _1, _5, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = 1064016310_u32 as i64;
_10 = _4 >> _3;
_9 = _8;
_11.1 = (-28278_i16);
_11 = (_5, 11391_i16);
_10 = _1 as i64;
_11.0 = !_5;
_10 = -_4;
_2 = _10 ^ _10;
_11 = (_5, (-3595_i16));
RET = (-19777254704716798919980827951392734024_i128) as f64;
_10 = _4;
_11.0 = _5;
_7 = [_3,_3,_3,_3];
_7 = _9;
_7 = _9;
match _11.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607431768207861 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11 = (_5, 21964_i16);
_11 = (_5, (-10124_i16));
_11 = (_5, 27716_i16);
_2 = _10 << _3;
_4 = _1 as i64;
_11.1 = (-42085609301722446155188796370153624768_i128) as i16;
_8 = _7;
_7 = [_3,_3,_3,_3];
RET = (-2_i8) as f64;
_8 = [_3,_3,_3,_3];
Goto(bb8)
}
bb8 = {
_7 = [_3,_3,_3,_3];
_10 = -_2;
_17 = -_3;
RET = (-119_i8) as f64;
_18 = _1 as u128;
_14 = [3065716639_u32,3253963420_u32,3904604792_u32];
_8 = _7;
_16.0 = [_3,_3,_3,_3];
_12 = 1286484142_i32 as isize;
_4 = _10;
_15 = core::ptr::addr_of!(_5);
_11.0 = (*_15) | (*_15);
_11 = ((*_15), (-30794_i16));
Call(_19 = fn14(_14, _8, _16.0, _7, _17, _16, _3, _3), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_4 = _2;
_4 = -_2;
_7 = [_3,_3,_17,_3];
_2 = _4 | _10;
_11.1 = _19 as i16;
_4 = _10;
(*_15) = _11.0;
_12 = _3 | _17;
Goto(bb10)
}
bb10 = {
_18 = !_6;
_11 = ((*_15), 30562_i16);
_2 = _10;
_9 = [_3,_12,_17,_17];
_16.0 = [_12,_12,_12,_12];
match _11.1 {
0 => bb2,
1 => bb11,
2 => bb12,
3 => bb13,
30562 => bb15,
_ => bb14
}
}
bb11 = {
_4 = _2;
_4 = -_2;
_7 = [_3,_3,_17,_3];
_2 = _4 | _10;
_11.1 = _19 as i16;
_4 = _10;
(*_15) = _11.0;
_12 = _3 | _17;
Goto(bb10)
}
bb12 = {
_7 = [_3,_3,_3,_3];
_10 = -_2;
_17 = -_3;
RET = (-119_i8) as f64;
_18 = _1 as u128;
_14 = [3065716639_u32,3253963420_u32,3904604792_u32];
_8 = _7;
_16.0 = [_3,_3,_3,_3];
_12 = 1286484142_i32 as isize;
_4 = _10;
_15 = core::ptr::addr_of!(_5);
_11.0 = (*_15) | (*_15);
_11 = ((*_15), (-30794_i16));
Call(_19 = fn14(_14, _8, _16.0, _7, _17, _16, _3, _3), ReturnTo(bb9), UnwindUnreachable())
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_1 = 862424221414300077_u64 << _3;
(*_15) = _11.0 | _11.0;
_3 = _1 as isize;
_16 = (_7,);
_16 = (_7,);
_18 = _6 * _6;
_9 = [_12,_12,_12,_3];
_6 = _18;
_12 = -_3;
_14 = [2941566172_u32,3798401755_u32,1279633965_u32];
RET = 11_u8 as f64;
Goto(bb16)
}
bb16 = {
Call(_23 = dump_var(12_usize, 18_usize, Move(_18), 12_usize, Move(_12), 19_usize, Move(_19), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_23 = dump_var(12_usize, 5_usize, Move(_5), 4_usize, Move(_4), 16_usize, Move(_16), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: u128,mut _2: i64,mut _3: i64,mut _4: u64,mut _5: usize,mut _6: u64) -> isize {
mir! {
type RET = isize;
let _7: &'static mut u32;
let _8: isize;
let _9: ([i64; 4],);
let _10: u16;
let _11: bool;
let _12: isize;
let _13: usize;
let _14: &'static u8;
let _15: &'static i64;
let _16: Adt46;
let _17: [char; 4];
let _18: [i32; 1];
let _19: f64;
let _20: u16;
let _21: u16;
let _22: bool;
let _23: Adt47;
let _24: ([u16; 4], f32, *mut char);
let _25: ();
let _26: ();
{
_6 = _4;
_5 = 4401645395766006199_usize - 10283268863950217421_usize;
_5 = !5_usize;
_3 = _2 | _2;
_2 = '\u{9f2fa}' as i64;
_1 = !310730657334591596612672628266487792239_u128;
RET = 9223372036854775807_isize;
_1 = 19673_i16 as u128;
RET = !9223372036854775807_isize;
Goto(bb1)
}
bb1 = {
RET = (-9223372036854775808_isize);
_10 = 26078_u16;
RET = (-9223372036854775808_isize) << _3;
RET = (-85317047514405996672646791818559536889_i128) as isize;
_9.0 = [_3,_3,_2,_2];
_3 = _2 + _2;
_3 = _2 - _2;
_5 = 153086086878553244504639107811709931704_i128 as usize;
_13 = !_5;
_1 = 253635670191081350618509874822837157289_u128 ^ 322341113943002243234579833268170934004_u128;
_1 = 104263773281312346176368418975872166958_u128;
RET = 30_u8 as isize;
_9.0 = [_2,_2,_3,_3];
_11 = !false;
_15 = &_2;
RET = _1 as isize;
_4 = _6 >> _5;
_6 = 2499744980_u32 as u64;
RET = _11 as isize;
_1 = 295356032161996505541853330206071183838_u128 * 2261936197470667739126936355011773311_u128;
_12 = RET << _3;
match _10 {
26078 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_12 = RET >> _6;
_5 = _13;
_11 = (*_15) != _3;
_3 = (*_15) * (*_15);
_5 = _13 ^ _13;
_8 = !_12;
_10 = '\u{10508e}' as u16;
_6 = _3 as u64;
_3 = !_2;
_1 = 105592099432344485568797764195601912209_u128;
RET = _8 & _12;
_4 = _6;
_6 = _4 >> _8;
_8 = !RET;
_8 = !RET;
_12 = !RET;
Goto(bb4)
}
bb4 = {
_9.0 = [_3,_3,_2,_2];
_4 = _6 << RET;
_10 = 48781_u16;
_2 = _3;
_15 = &_2;
_6 = _4 * _4;
_2 = _10 as i64;
_10 = !18407_u16;
_17 = ['\u{998cb}','\u{d2eae}','\u{bb1fd}','\u{22d8c}'];
_11 = !false;
RET = -_8;
_12 = RET;
_13 = _5 & _5;
_3 = -_2;
_12 = (-2087202463_i32) as isize;
_19 = 3651863519_u32 as f64;
_4 = _6;
_10 = !648_u16;
match _1 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
105592099432344485568797764195601912209 => bb10,
_ => bb9
}
}
bb5 = {
_12 = RET >> _6;
_5 = _13;
_11 = (*_15) != _3;
_3 = (*_15) * (*_15);
_5 = _13 ^ _13;
_8 = !_12;
_10 = '\u{10508e}' as u16;
_6 = _3 as u64;
_3 = !_2;
_1 = 105592099432344485568797764195601912209_u128;
RET = _8 & _12;
_4 = _6;
_6 = _4 >> _8;
_8 = !RET;
_8 = !RET;
_12 = !RET;
Goto(bb4)
}
bb6 = {
Return()
}
bb7 = {
RET = (-9223372036854775808_isize);
_10 = 26078_u16;
RET = (-9223372036854775808_isize) << _3;
RET = (-85317047514405996672646791818559536889_i128) as isize;
_9.0 = [_3,_3,_2,_2];
_3 = _2 + _2;
_3 = _2 - _2;
_5 = 153086086878553244504639107811709931704_i128 as usize;
_13 = !_5;
_1 = 253635670191081350618509874822837157289_u128 ^ 322341113943002243234579833268170934004_u128;
_1 = 104263773281312346176368418975872166958_u128;
RET = 30_u8 as isize;
_9.0 = [_2,_2,_3,_3];
_11 = !false;
_15 = &_2;
RET = _1 as isize;
_4 = _6 >> _5;
_6 = 2499744980_u32 as u64;
RET = _11 as isize;
_1 = 295356032161996505541853330206071183838_u128 * 2261936197470667739126936355011773311_u128;
_12 = RET << _3;
match _10 {
26078 => bb3,
_ => bb2
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_12 = _19 as isize;
RET = _8 & _8;
_12 = RET >> RET;
RET = _12 + _12;
_13 = _5;
_8 = -_12;
_19 = 178_u8 as f64;
_11 = _8 < RET;
_15 = &_3;
_3 = _11 as i64;
RET = _12;
_6 = !_4;
_13 = _5 & _5;
RET = _8;
_10 = !43806_u16;
RET = _8;
RET = _12;
_16 = Adt46::Variant2 { fld0: (-57681156870518452275709784252180264322_i128) };
place!(Field::<i128>(Variant(_16, 2), 0)) = !(-122527653894553251805487111096593332205_i128);
_1 = 5951567262116202685932249856848702405_u128 | 105592741435563183985953450686174807750_u128;
_3 = _2 >> _4;
_21 = _1 as u16;
_12 = !RET;
place!(Field::<i128>(Variant(_16, 2), 0)) = -(-89640507453961459091432721915599713483_i128);
_24.0 = [_10,_10,_21,_21];
RET = _8 & _8;
_24.1 = 3970061953_u32 as f32;
Goto(bb11)
}
bb11 = {
Call(_25 = dump_var(13_usize, 10_usize, Move(_10), 13_usize, Move(_13), 4_usize, Move(_4), 12_usize, Move(_12)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_25 = dump_var(13_usize, 6_usize, Move(_6), 2_usize, Move(_2), 8_usize, Move(_8), 26_usize, _26), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: [u32; 3],mut _2: [isize; 4],mut _3: [isize; 4],mut _4: [isize; 4],mut _5: isize,mut _6: ([isize; 4],),mut _7: isize,mut _8: isize) -> char {
mir! {
type RET = char;
let _9: i16;
let _10: &'static mut u8;
let _11: f64;
let _12: *mut &'static mut u32;
let _13: f32;
let _14: f64;
let _15: [u16; 4];
let _16: isize;
let _17: f64;
let _18: *const i8;
let _19: u8;
let _20: Adt20;
let _21: u128;
let _22: [isize; 2];
let _23: isize;
let _24: Adt46;
let _25: f32;
let _26: (*mut u16, char);
let _27: i16;
let _28: (*mut u16, char);
let _29: usize;
let _30: Adt65;
let _31: f64;
let _32: char;
let _33: [isize; 4];
let _34: &'static mut [u16; 4];
let _35: *const *const [u16; 4];
let _36: Adt21;
let _37: [i128; 1];
let _38: [i32; 1];
let _39: [isize; 4];
let _40: *const *const [u16; 4];
let _41: isize;
let _42: [i128; 1];
let _43: bool;
let _44: ();
let _45: ();
{
_2 = [_7,_8,_8,_8];
_4 = [_5,_7,_5,_5];
_6 = (_3,);
RET = '\u{e450b}';
_8 = _5 & _7;
_6.0 = _2;
_4 = [_8,_7,_7,_7];
_6 = (_4,);
_7 = _8;
_6 = (_3,);
RET = '\u{9ce06}';
_7 = _5 + _5;
_7 = !_8;
_8 = _5 & _7;
_6 = (_3,);
RET = '\u{69786}';
_2 = [_8,_8,_5,_8];
_2 = _4;
RET = '\u{cf8dd}';
RET = '\u{17da7}';
_3 = [_8,_8,_8,_8];
_7 = !_8;
_6.0 = [_7,_5,_8,_8];
_6 = (_4,);
_1 = [2468196213_u32,3871421295_u32,1196189617_u32];
_8 = _7 >> _7;
_9 = 27080_i16;
_8 = 1181086573414153819_u64 as isize;
Goto(bb1)
}
bb1 = {
_4 = _6.0;
_1 = [4007878820_u32,1893212376_u32,75146179_u32];
_2 = _6.0;
_5 = _7 ^ _7;
_8 = 6173195852786474100_i64 as isize;
RET = '\u{25cf5}';
RET = '\u{da0a2}';
_7 = _5 + _5;
_5 = _7 ^ _7;
_11 = 7_usize as f64;
_9 = 102866829239684856786380824252499987360_u128 as i16;
_4 = _6.0;
Goto(bb2)
}
bb2 = {
_13 = (-163664831658467129122873968779659703948_i128) as f32;
_9 = (-31136_i16) + 4822_i16;
_3 = _6.0;
_6 = (_4,);
_14 = _11;
_9 = (-25036_i16) * 3051_i16;
_8 = _7 - _7;
_13 = 119_u8 as f32;
_7 = 5953722956508848475_u64 as isize;
_6.0 = _4;
_5 = _8;
_3 = _6.0;
_15 = [7324_u16,566_u16,47357_u16,8620_u16];
Goto(bb3)
}
bb3 = {
_6.0 = [_8,_5,_5,_8];
_13 = 41741585_u32 as f32;
_5 = _8 << _8;
_7 = _5;
RET = '\u{d2364}';
_8 = 230494502_i32 as isize;
_5 = _7;
_5 = 48763_u16 as isize;
_14 = -_11;
_2 = _6.0;
Call(_16 = core::intrinsics::bswap(_7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_2 = [_7,_7,_7,_7];
_3 = [_7,_7,_7,_7];
_9 = 3556_i16;
_6.0 = [_7,_7,_7,_7];
_13 = 0_usize as f32;
_11 = -_14;
_16 = -_7;
_13 = 444972550822056517_i64 as f32;
_6 = (_3,);
_7 = 71351198365360470591965352651545487411_u128 as isize;
_16 = !_8;
_14 = _11 - _11;
_6 = (_3,);
_17 = -_14;
_11 = -_17;
_15 = [15064_u16,10052_u16,29621_u16,1642_u16];
_9 = 13663_i16 << _8;
_14 = _17;
_1 = [2258304019_u32,736482685_u32,2541322490_u32];
_9 = 59933897022944391288675632904028189664_u128 as i16;
_5 = !_16;
_7 = _5;
Call(_3 = fn15(_4, _6, _2, _4, _6.0, _6, _6.0, _6, _4, _6.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_9 = (-25815_i16) + 1339_i16;
_16 = 126862250553820470004155429535003140531_i128 as isize;
_14 = _11;
_15 = [57931_u16,3573_u16,47033_u16,36751_u16];
RET = '\u{10e0bd}';
_7 = !_8;
_22 = [_7,_16];
RET = '\u{15848}';
_19 = 124_u8;
_5 = _8;
_11 = _14;
_16 = _11 as isize;
_3 = _2;
_5 = _16;
Goto(bb6)
}
bb6 = {
_13 = (-8156663654882713280_i64) as f32;
_10 = &mut _19;
_6 = (_4,);
_21 = 245294287837474701779578922157040671866_u128 >> _7;
_17 = (*_10) as f64;
_2 = _4;
_23 = 1458246121_i32 as isize;
(*_10) = 65_u8;
_14 = -_11;
Call(_15 = fn16(_6, _3, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_13 = _23 as f32;
_6.0 = _4;
_24 = Adt46::Variant2 { fld0: (-102850251347994597559940294908085700878_i128) };
place!(Field::<i128>(Variant(_24, 2), 0)) = 54923159737914263527610680205119324060_i128;
_3 = [_23,_16,_5,_23];
match _19 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb4,
65 => bb9,
_ => bb8
}
}
bb8 = {
_4 = _6.0;
_1 = [4007878820_u32,1893212376_u32,75146179_u32];
_2 = _6.0;
_5 = _7 ^ _7;
_8 = 6173195852786474100_i64 as isize;
RET = '\u{25cf5}';
RET = '\u{da0a2}';
_7 = _5 + _5;
_5 = _7 ^ _7;
_11 = 7_usize as f64;
_9 = 102866829239684856786380824252499987360_u128 as i16;
_4 = _6.0;
Goto(bb2)
}
bb9 = {
_19 = 211_u8;
_15 = [29425_u16,40082_u16,54228_u16,63700_u16];
_11 = _14 * _14;
place!(Field::<i128>(Variant(_24, 2), 0)) = !(-96707180851984848060377438650389051570_i128);
_4 = [_5,_8,_16,_16];
_15 = [20922_u16,19278_u16,25415_u16,39985_u16];
_3 = _2;
_13 = _21 as f32;
_14 = -_11;
_25 = -_13;
RET = '\u{14615}';
place!(Field::<i128>(Variant(_24, 2), 0)) = 33221473043999688305927163773302017236_i128;
_10 = &mut _19;
_21 = 94756027537616971191911472950861474648_u128 | 237374766292227801459620466462565554337_u128;
_27 = _9;
RET = '\u{10cb47}';
_16 = !_5;
_29 = 3_usize + 7_usize;
Goto(bb10)
}
bb10 = {
_7 = _16 << _29;
_25 = _13;
_10 = &mut (*_10);
_7 = _5 - _8;
_21 = 630592585_i32 as u128;
_19 = 45100_u16 as u8;
_26.1 = RET;
RET = _26.1;
_8 = _7;
_21 = 81268187663669330954818643644642861662_u128 >> _7;
_10 = &mut _19;
_13 = _25 * _25;
match Field::<i128>(Variant(_24, 2), 0) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
33221473043999688305927163773302017236 => bb11,
_ => bb8
}
}
bb11 = {
_26.1 = RET;
_22 = [_16,_16];
_13 = -_25;
_6 = (_2,);
_30 = Adt65::Variant0 { fld0: _22,fld1: _19 };
_7 = !_8;
_1 = [3285397614_u32,1358925952_u32,2655318303_u32];
_4 = [_8,_7,_7,_16];
_16 = -_5;
SetDiscriminant(_30, 0);
place!(Field::<u8>(Variant(_30, 0), 1)) = _5 as u8;
_30 = Adt65::Variant0 { fld0: _22,fld1: (*_10) };
place!(Field::<u8>(Variant(_30, 0), 1)) = !(*_10);
_29 = 5290_u16 as usize;
_29 = 61764_u16 as usize;
_15 = [61410_u16,65_u16,43060_u16,35849_u16];
_10 = &mut (*_10);
SetDiscriminant(_30, 1);
SetDiscriminant(_24, 3);
_13 = 8_i8 as f32;
place!(Field::<Adt20>(Variant(_24, 3), 1)) = Adt20::Variant2 { fld0: false,fld1: 3707043029_u32,fld2: _7,fld3: _21,fld4: 41737_u16,fld5: 683244975_i32,fld6: 8346860631331873871_i64,fld7: 51251350465229090969799624353136593963_i128 };
place!(Field::<*const u128>(Variant(_30, 1), 2)) = core::ptr::addr_of!(place!(Field::<u128>(Variant(place!(Field::<Adt20>(Variant(_24, 3), 1)), 2), 3)));
Goto(bb12)
}
bb12 = {
_31 = _11;
Goto(bb13)
}
bb13 = {
place!(Field::<bool>(Variant(place!(Field::<Adt20>(Variant(_24, 3), 1)), 2), 0)) = !true;
_28.1 = RET;
RET = _26.1;
_36 = Adt21::Variant1 { fld0: 95703390041583965753464921205601103264_i128 };
place!(Field::<[i64; 4]>(Variant(_30, 1), 6)) = [8008979391617247458_i64,5664325836062027032_i64,5079320952610446867_i64,(-4168020961538085672_i64)];
place!(Field::<*mut i64>(Variant(_30, 1), 0)) = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(place!(Field::<Adt20>(Variant(_24, 3), 1)), 2), 6)));
place!(Field::<*mut i64>(Variant(_30, 1), 0)) = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(place!(Field::<Adt20>(Variant(_24, 3), 1)), 2), 6)));
_15 = [38321_u16,47578_u16,50893_u16,32900_u16];
place!(Field::<u8>(Variant(_30, 1), 3)) = 27153834847355892029269984908228795264_i128 as u8;
_40 = core::ptr::addr_of!(place!(Field::<*const [u16; 4]>(Variant(_30, 1), 7)));
_25 = -_13;
_39 = [Field::<isize>(Variant(Field::<Adt20>(Variant(_24, 3), 1), 2), 2),_16,_8,Field::<isize>(Variant(Field::<Adt20>(Variant(_24, 3), 1), 2), 2)];
_6 = (_3,);
_10 = &mut (*_10);
place!(Field::<i64>(Variant(place!(Field::<Adt20>(Variant(_24, 3), 1)), 2), 6)) = !(-3348484163963748608_i64);
place!(Field::<bool>(Variant(_24, 3), 0)) = Field::<bool>(Variant(Field::<Adt20>(Variant(_24, 3), 1), 2), 0);
Goto(bb14)
}
bb14 = {
place!(Field::<i128>(Variant(_36, 1), 0)) = _21 as i128;
place!(Field::<*mut char>(Variant(_30, 1), 4)) = core::ptr::addr_of_mut!(_26.1);
place!(Field::<u8>(Variant(_30, 1), 3)) = !(*_10);
place!(Field::<u128>(Variant(place!(Field::<Adt20>(Variant(_24, 3), 1)), 2), 3)) = _21 ^ _21;
_9 = _27 ^ _27;
place!(Field::<u8>(Variant(_30, 1), 3)) = (*_10);
_24 = Adt46::Variant0 { fld0: Move(_36),fld1: Field::<i128>(Variant(_36, 1), 0) };
_3 = [_7,_5,_16,_23];
place!(Field::<i128>(Variant(place!(Field::<Adt21>(Variant(_24, 0), 0)), 1), 0)) = _26.1 as i128;
place!(Field::<[u64; 7]>(Variant(_30, 1), 5)) = [6372741172672641267_u64,12171147958686192526_u64,9193113524479181135_u64,16506214145184363888_u64,16998927070278687890_u64,218892728881688412_u64,8985255406292253733_u64];
_11 = 23871_u16 as f64;
_27 = _9;
_3 = [_23,_7,_7,_8];
place!(Field::<*const u128>(Variant(_30, 1), 2)) = core::ptr::addr_of!(_21);
_23 = _28.1 as isize;
_25 = -_13;
RET = _28.1;
_23 = -_8;
_33 = [_23,_8,_23,_8];
_7 = _23;
_29 = false as usize;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(14_usize, 2_usize, Move(_2), 16_usize, Move(_16), 9_usize, Move(_9), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(14_usize, 22_usize, Move(_22), 27_usize, Move(_27), 19_usize, Move(_19), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(14_usize, 23_usize, Move(_23), 45_usize, _45, 45_usize, _45, 45_usize, _45), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [isize; 4],mut _2: ([isize; 4],),mut _3: [isize; 4],mut _4: [isize; 4],mut _5: [isize; 4],mut _6: ([isize; 4],),mut _7: [isize; 4],mut _8: ([isize; 4],),mut _9: [isize; 4],mut _10: [isize; 4]) -> [isize; 4] {
mir! {
type RET = [isize; 4];
let _11: (Adt21, i32, (usize, i16), &'static mut i64);
let _12: [i32; 8];
let _13: (*mut u16, char);
let _14: isize;
let _15: [isize; 2];
let _16: [i64; 4];
let _17: ();
let _18: ();
{
RET = [64_isize,(-9223372036854775808_isize),(-70_isize),(-86_isize)];
_6.0 = _5;
_6.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-67_isize)];
_8 = _6;
_8.0 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_6.0 = [73_isize,9223372036854775807_isize,12_isize,(-9223372036854775808_isize)];
_11.1 = (-684653671_i32);
_11.2.0 = !1_usize;
_11.2 = (2_usize, (-3717_i16));
_11.2.1 = !29861_i16;
RET = _3;
_7 = [9223372036854775807_isize,(-105_isize),9223372036854775807_isize,9223372036854775807_isize];
_3 = [(-13_isize),9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize)];
_15 = [119_isize,(-9223372036854775808_isize)];
_6 = (_9,);
_1 = _2.0;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(15_usize, 4_usize, Move(_4), 3_usize, Move(_3), 5_usize, Move(_5), 15_usize, Move(_15)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(15_usize, 6_usize, Move(_6), 18_usize, _18, 18_usize, _18, 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: ([isize; 4],),mut _2: [isize; 4],mut _3: [isize; 4]) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _4: &'static mut &'static mut *mut i64;
let _5: (*mut u16, char);
let _6: Adt40;
let _7: isize;
let _8: isize;
let _9: &'static f32;
let _10: bool;
let _11: ([u16; 4], f32, *mut char);
let _12: char;
let _13: u16;
let _14: *const &'static mut u8;
let _15: ();
let _16: ();
{
RET = [6382_u16,8646_u16,28740_u16,61527_u16];
RET = [39704_u16,11993_u16,56604_u16,4221_u16];
_1.0 = [26_isize,(-81_isize),9223372036854775807_isize,9223372036854775807_isize];
_1 = (_2,);
RET = [47072_u16,58018_u16,65459_u16,22324_u16];
RET = [55496_u16,41252_u16,53930_u16,56549_u16];
_1.0 = [(-16_isize),9223372036854775807_isize,118_isize,(-9223372036854775808_isize)];
_5.1 = '\u{b627e}';
_1.0 = [(-23_isize),(-9223372036854775808_isize),98_isize,(-9223372036854775808_isize)];
_3 = [(-57_isize),(-9223372036854775808_isize),26_isize,(-9223372036854775808_isize)];
_1.0 = [(-9223372036854775808_isize),(-71_isize),114_isize,(-9223372036854775808_isize)];
Goto(bb1)
}
bb1 = {
_5.1 = '\u{8d946}';
_3 = [(-9223372036854775808_isize),(-52_isize),9223372036854775807_isize,(-63_isize)];
_5.1 = '\u{9e227}';
RET = [43680_u16,1126_u16,42842_u16,6594_u16];
RET = [13965_u16,17894_u16,36552_u16,19510_u16];
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [9223372036854775807_isize,9_isize,118_isize,9223372036854775807_isize];
_3 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
Goto(bb2)
}
bb2 = {
_1.0 = _3;
_3 = [31_isize,(-45_isize),(-78_isize),(-57_isize)];
_1 = (_2,);
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-20_isize)];
_5.1 = '\u{fa830}';
_5.1 = '\u{53d7b}';
_2 = [(-9223372036854775808_isize),(-127_isize),(-85_isize),(-9223372036854775808_isize)];
RET = [50619_u16,55307_u16,21127_u16,38986_u16];
Goto(bb3)
}
bb3 = {
_3 = [(-9223372036854775808_isize),(-76_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [59_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_7 = -(-110_isize);
_2 = [_7,_7,_7,_7];
_8 = _7 + _7;
_1.0 = _3;
_2 = _3;
_2 = _1.0;
_8 = _7;
_1 = (_2,);
_7 = -_8;
RET = [11221_u16,58471_u16,7438_u16,49061_u16];
_2 = [_8,_7,_7,_7];
_8 = false as isize;
_6 = Adt40::Variant2 { fld0: (-7597_i16) };
place!(Field::<i16>(Variant(_6, 2), 0)) = 1064_i16 >> _7;
RET = [31689_u16,25294_u16,10654_u16,46376_u16];
place!(Field::<i16>(Variant(_6, 2), 0)) = (-15383_i16) * (-15819_i16);
_2 = _1.0;
_8 = _7;
SetDiscriminant(_6, 2);
_2 = _3;
RET = [47131_u16,6649_u16,54527_u16,15552_u16];
_3 = [_8,_8,_8,_7];
_5.1 = '\u{718df}';
RET = [54570_u16,52224_u16,2588_u16,1436_u16];
_1.0 = [_8,_8,_7,_7];
_7 = _8;
Goto(bb4)
}
bb4 = {
_8 = _5.1 as isize;
_1.0 = [_7,_8,_8,_7];
_1 = (_2,);
RET = [33779_u16,11477_u16,33718_u16,49894_u16];
_3 = [_8,_8,_7,_7];
place!(Field::<i16>(Variant(_6, 2), 0)) = 13546_i16 & 199_i16;
_1.0 = [_7,_7,_8,_7];
place!(Field::<i16>(Variant(_6, 2), 0)) = (-2567_i16);
_1.0 = _2;
_5.1 = '\u{71561}';
_10 = _7 >= _7;
_3 = [_7,_8,_8,_7];
_11.1 = 2352_u16 as f32;
_9 = &_11.1;
_1 = (_2,);
RET = [35339_u16,31631_u16,2368_u16,28792_u16];
_11.2 = core::ptr::addr_of_mut!(_5.1);
_1 = (_2,);
_2 = [_8,_7,_7,_8];
_2 = [_7,_7,_8,_8];
_7 = _8;
_1.0 = [_8,_8,_7,_7];
_11.1 = (-3_i8) as f32;
_2 = [_7,_8,_7,_8];
_7 = !_8;
_11.1 = 148003823636434692391585050579847136581_i128 as f32;
_1 = (_2,);
Call(_7 = core::intrinsics::transmute(RET), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
match Field::<i16>(Variant(_6, 2), 0) {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431768208889 => bb14,
_ => bb13
}
}
bb6 = {
_8 = _5.1 as isize;
_1.0 = [_7,_8,_8,_7];
_1 = (_2,);
RET = [33779_u16,11477_u16,33718_u16,49894_u16];
_3 = [_8,_8,_7,_7];
place!(Field::<i16>(Variant(_6, 2), 0)) = 13546_i16 & 199_i16;
_1.0 = [_7,_7,_8,_7];
place!(Field::<i16>(Variant(_6, 2), 0)) = (-2567_i16);
_1.0 = _2;
_5.1 = '\u{71561}';
_10 = _7 >= _7;
_3 = [_7,_8,_8,_7];
_11.1 = 2352_u16 as f32;
_9 = &_11.1;
_1 = (_2,);
RET = [35339_u16,31631_u16,2368_u16,28792_u16];
_11.2 = core::ptr::addr_of_mut!(_5.1);
_1 = (_2,);
_2 = [_8,_7,_7,_8];
_2 = [_7,_7,_8,_8];
_7 = _8;
_1.0 = [_8,_8,_7,_7];
_11.1 = (-3_i8) as f32;
_2 = [_7,_8,_7,_8];
_7 = !_8;
_11.1 = 148003823636434692391585050579847136581_i128 as f32;
_1 = (_2,);
Call(_7 = core::intrinsics::transmute(RET), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_3 = [(-9223372036854775808_isize),(-76_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [59_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_7 = -(-110_isize);
_2 = [_7,_7,_7,_7];
_8 = _7 + _7;
_1.0 = _3;
_2 = _3;
_2 = _1.0;
_8 = _7;
_1 = (_2,);
_7 = -_8;
RET = [11221_u16,58471_u16,7438_u16,49061_u16];
_2 = [_8,_7,_7,_7];
_8 = false as isize;
_6 = Adt40::Variant2 { fld0: (-7597_i16) };
place!(Field::<i16>(Variant(_6, 2), 0)) = 1064_i16 >> _7;
RET = [31689_u16,25294_u16,10654_u16,46376_u16];
place!(Field::<i16>(Variant(_6, 2), 0)) = (-15383_i16) * (-15819_i16);
_2 = _1.0;
_8 = _7;
SetDiscriminant(_6, 2);
_2 = _3;
RET = [47131_u16,6649_u16,54527_u16,15552_u16];
_3 = [_8,_8,_8,_7];
_5.1 = '\u{718df}';
RET = [54570_u16,52224_u16,2588_u16,1436_u16];
_1.0 = [_8,_8,_7,_7];
_7 = _8;
Goto(bb4)
}
bb8 = {
_1.0 = _3;
_3 = [31_isize,(-45_isize),(-78_isize),(-57_isize)];
_1 = (_2,);
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-20_isize)];
_5.1 = '\u{fa830}';
_5.1 = '\u{53d7b}';
_2 = [(-9223372036854775808_isize),(-127_isize),(-85_isize),(-9223372036854775808_isize)];
RET = [50619_u16,55307_u16,21127_u16,38986_u16];
Goto(bb3)
}
bb9 = {
_5.1 = '\u{8d946}';
_3 = [(-9223372036854775808_isize),(-52_isize),9223372036854775807_isize,(-63_isize)];
_5.1 = '\u{9e227}';
RET = [43680_u16,1126_u16,42842_u16,6594_u16];
RET = [13965_u16,17894_u16,36552_u16,19510_u16];
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [9223372036854775807_isize,9_isize,118_isize,9223372036854775807_isize];
_3 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_12 = _5.1;
RET = [46716_u16,64889_u16,51443_u16,56251_u16];
_5.1 = _12;
_12 = _5.1;
_7 = 11753714230773375916_u64 as isize;
_1.0 = _3;
_5.0 = core::ptr::addr_of_mut!(_13);
_13 = _5.1 as u16;
SetDiscriminant(_6, 1);
_9 = &_11.1;
_5.1 = _12;
place!(Field::<bool>(Variant(_6, 1), 0)) = _10;
_5.1 = _12;
_1 = (_2,);
_6 = Adt40::Variant0 { fld0: _10,fld1: Move(_5.0),fld2: 11894469158189437839_u64,fld3: 5_usize,fld4: _13 };
Goto(bb15)
}
bb15 = {
Call(_15 = dump_var(16_usize, 2_usize, Move(_2), 3_usize, Move(_3), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: *const &'static mut u32,mut _2: [isize; 2],mut _3: isize,mut _4: isize,mut _5: isize,mut _6: [isize; 2],mut _7: [isize; 2],mut _8: isize) -> f64 {
mir! {
type RET = f64;
let _9: *const [u16; 4];
let _10: u32;
let _11: isize;
let _12: u64;
let _13: bool;
let _14: [u64; 7];
let _15: u32;
let _16: [i64; 4];
let _17: i128;
let _18: u32;
let _19: bool;
let _20: isize;
let _21: *const *const u128;
let _22: &'static mut u32;
let _23: f32;
let _24: f64;
let _25: &'static Adt40;
let _26: i128;
let _27: &'static mut i64;
let _28: isize;
let _29: &'static f32;
let _30: f64;
let _31: [u16; 4];
let _32: &'static mut [u16; 4];
let _33: u16;
let _34: isize;
let _35: bool;
let _36: i128;
let _37: u8;
let _38: isize;
let _39: f64;
let _40: &'static Adt40;
let _41: ();
let _42: ();
{
_5 = (-6145561074280563383_i64) as isize;
_5 = 241795237076999467593263692725443343738_u128 as isize;
_10 = '\u{12f91}' as u32;
_3 = _4;
_11 = -_3;
_10 = 671341050_u32 * 1852154234_u32;
_8 = _11 ^ _4;
_12 = 8708873616929562960_u64;
_7 = [_3,_3];
_10 = 1295615427_u32 >> _11;
_11 = 3_usize as isize;
_13 = true;
_10 = 1345325424_u32;
RET = (-966419115840344310_i64) as f64;
_13 = false ^ true;
_12 = (-6502597715784774893_i64) as u64;
_8 = _3;
_11 = _3 << _3;
_7 = [_4,_3];
_8 = _11 | _3;
_2 = [_11,_3];
_12 = !17380993678000411566_u64;
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
1345325424 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_3 = 5954960911015105436_i64 as isize;
_11 = '\u{8fe16}' as isize;
_14 = [_12,_12,_12,_12,_12,_12,_12];
RET = 210733390534060514110226891131489547742_u128 as f64;
_6 = _7;
_15 = _10 / _10;
_3 = _4 >> _8;
_3 = _8 - _4;
_4 = _3 - _3;
_4 = 186648525815200493369354083657192662241_u128 as isize;
_2 = [_8,_8];
_13 = !true;
_16 = [(-3634010975791057064_i64),(-7699872994905249355_i64),5568046047497617412_i64,7246507712135289468_i64];
_15 = _10;
RET = (-76724832452188673956067077361344330045_i128) as f64;
_2 = [_3,_8];
_4 = 3_usize as isize;
_2 = _7;
_16 = [6757219392834513236_i64,(-2204941420773519775_i64),(-8901497443413324113_i64),5571496800715681975_i64];
_13 = !true;
_12 = !15278928976253157388_u64;
_2 = [_3,_8];
_15 = _10;
_8 = _3;
_13 = !true;
_8 = (-29352155686948022924006410742811823017_i128) as isize;
_12 = 11109992379435813833_u64 >> _3;
match _10 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb8,
1345325424 => bb10,
_ => bb9
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14 = [_12,_12,_12,_12,_12,_12,_12];
_5 = _3 - _3;
_11 = _5 + _5;
_5 = !_11;
_13 = !true;
_3 = _11;
_10 = _15 | _15;
_15 = _10 ^ _10;
_16 = [(-8561962428270406201_i64),3011085673727844882_i64,1806544664703780952_i64,(-8836296116795320399_i64)];
_2 = [_5,_5];
_7 = _2;
_8 = _12 as isize;
_17 = (-32693228014169226881685476216495712141_i128) & (-158008671257453248130762957757661203174_i128);
_3 = _11;
_8 = !_5;
_10 = _15 + _15;
_15 = _10;
_3 = _8 * _5;
_11 = !_3;
_7 = _6;
_4 = _3;
_2 = [_5,_5];
_16 = [8759527245365478756_i64,(-8782446589173470648_i64),16298896653786099_i64,4866563240418648425_i64];
_8 = !_11;
_18 = _10;
_11 = _5 << _4;
Goto(bb11)
}
bb11 = {
_17 = -78170756300091806083643877532946850602_i128;
RET = 7_usize as f64;
_3 = '\u{9a2dd}' as isize;
_17 = -25540458210123729081948050318514018223_i128;
_5 = _11 + _4;
_22 = &mut _18;
_3 = _5 + _5;
_8 = -_11;
_11 = -_8;
_6 = [_4,_4];
_5 = 141_u8 as isize;
RET = 254521831129185571582594484984826868610_u128 as f64;
_19 = _13;
_1 = core::ptr::addr_of!(_22);
_2 = _6;
(*_1) = &mut _18;
_24 = -RET;
_11 = _4;
_24 = RET + RET;
_3 = _4;
(*_1) = &mut (*_22);
RET = _24;
_4 = _11 & _3;
_24 = RET + RET;
(*_22) = _15 + _10;
Call(_4 = fn18(Move(_1), _7, _14, _2, _6, _6, _2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20 = _3;
_6 = [_11,_20];
_16 = [8358863592499810844_i64,(-2202174723765993082_i64),(-7213403851367755915_i64),2782298476200691086_i64];
_19 = !_13;
_14 = [_12,_12,_12,_12,_12,_12,_12];
_11 = _8;
_26 = _10 as i128;
_17 = _26;
RET = _24 - _24;
_18 = _10 ^ _10;
_22 = &mut _15;
_28 = (-261823842_i32) as isize;
_23 = 2040456253725422466148762352508111058_u128 as f32;
Call(_7 = core::intrinsics::transmute(_6), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_22 = &mut _18;
_11 = RET as isize;
_6 = [_20,_3];
_17 = -_26;
_33 = 9175_u16 & 27190_u16;
_6 = [_20,_8];
_12 = (-7698505614781861197_i64) as u64;
RET = 2_usize as f64;
_11 = _8;
_1 = core::ptr::addr_of!(_22);
_9 = core::ptr::addr_of!(_31);
_30 = -RET;
_7 = [_11,_8];
_11 = _12 as isize;
_35 = _19;
_29 = &_23;
_36 = -_26;
_16 = [3817361644130180495_i64,2852851567236527215_i64,(-2310837684687482666_i64),3814575922346800135_i64];
(*_9) = [_33,_33,_33,_33];
_8 = _3;
_11 = _8;
Call(_26 = fn19(_3, _3, Move(_1), _7, _6, _14, _8, Move((*_1)), _11), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23 = _30 as f32;
_32 = &mut (*_9);
_26 = _5 as i128;
(*_32) = [_33,_33,_33,_33];
_15 = !_18;
_15 = !_18;
_33 = _12 as u16;
_6 = _2;
_35 = _11 < _3;
_4 = !_20;
_30 = _24;
_8 = !_11;
_9 = core::ptr::addr_of!(_31);
_11 = -_3;
_19 = _35;
_15 = !_18;
_31 = [_33,_33,_33,_33];
_23 = 19011_i16 as f32;
_6 = _2;
_13 = _19;
_34 = _11;
_2 = [_11,_34];
_15 = _18;
_18 = (-629856547_i32) as u32;
_26 = _17 | _36;
_10 = 4_usize as u32;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(17_usize, 19_usize, Move(_19), 36_usize, Move(_36), 28_usize, Move(_28), 34_usize, Move(_34)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(17_usize, 2_usize, Move(_2), 11_usize, Move(_11), 26_usize, Move(_26), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(17_usize, 16_usize, Move(_16), 4_usize, Move(_4), 13_usize, Move(_13), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: *const &'static mut u32,mut _2: [isize; 2],mut _3: [u64; 7],mut _4: [isize; 2],mut _5: [isize; 2],mut _6: [isize; 2],mut _7: [isize; 2]) -> isize {
mir! {
type RET = isize;
let _8: [u64; 6];
let _9: f32;
let _10: [i128; 2];
let _11: [i128; 4];
let _12: *mut Adt27;
let _13: Adt65;
let _14: u16;
let _15: bool;
let _16: isize;
let _17: ([isize; 4],);
let _18: *const u128;
let _19: i16;
let _20: [i64; 4];
let _21: i16;
let _22: u16;
let _23: ([i64; 4],);
let _24: [u16; 4];
let _25: ();
let _26: ();
{
RET = 181_u8 as isize;
RET = (-9223372036854775808_isize);
RET = -(-98_isize);
RET = 30544664230432888948295361297359061366_i128 as isize;
_6 = [RET,RET];
_3 = [10919373254576353422_u64,989734796642075024_u64,7064016823026528488_u64,1692376440541874832_u64,2346619911658414389_u64,3243608642377580269_u64,1604789764942301634_u64];
_5 = [RET,RET];
_5 = [RET,RET];
RET = (-103_isize);
_5 = [RET,RET];
RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
_5 = [RET,RET];
_4 = [RET,RET];
_6 = [RET,RET];
_3 = [1542739858718220819_u64,18144092774270080982_u64,7658052739824806296_u64,14763081748357873864_u64,2063218883656295797_u64,17240168945222505428_u64,7562751304191964860_u64];
_8 = [9401709920180472181_u64,8705298458303765340_u64,2598109078143448257_u64,17843892380308606288_u64,13909606556796557018_u64,7088414733883715242_u64];
_6 = [RET,RET];
RET = 9223372036854775807_isize;
_3 = [16728658327650487970_u64,4906181450220105821_u64,17676418439923888583_u64,6976339097288994695_u64,17730346833245897782_u64,9934851323321920905_u64,5864978372158625188_u64];
_3 = [13938337800674427608_u64,10087725964891758972_u64,6489004023470578022_u64,12462355098081686498_u64,2628173977582862264_u64,2401305407233947376_u64,5943658544348156230_u64];
_7 = _2;
_7 = _2;
RET = 9223372036854775807_isize >> (-8947975100424331106_i64);
_7 = [RET,RET];
_7 = _2;
_3 = [8161507753475633174_u64,7620676776898212036_u64,12803549560830733210_u64,5683738975439503286_u64,15033820730080967919_u64,13183467926730926116_u64,80594232203277373_u64];
_5 = _2;
Goto(bb1)
}
bb1 = {
RET = 115_isize;
_4 = [RET,RET];
RET = 27551_u16 as isize;
_11 = [138586821204878252419537371837211919616_i128,60016837415640100465764297426276052367_i128,(-138857336633031320117383827685933544234_i128),41187298152370628070639372764438943420_i128];
_9 = 50950789907528490453729789445179606093_u128 as f32;
_11 = [(-29584240600540730568744550676960764499_i128),(-65881329386889450516003816963383061989_i128),68952970861202220629441348080952584982_i128,(-98130398879196486688963125964256601289_i128)];
_7 = _5;
_14 = 34902_u16;
_15 = true;
_2 = [RET,RET];
_7 = [RET,RET];
_11 = [61872906482935188619667537843243829436_i128,59736675916648268310345250563085940047_i128,119307531472024157911086043460205146014_i128,(-72238750438604955015247496068559462874_i128)];
_9 = 2143558917461006539_u64 as f32;
_2 = _5;
_8 = [14386751421548264407_u64,17737308492207721408_u64,5987506217114340547_u64,10208966365878911683_u64,16270760457924785905_u64,12429665502717219740_u64];
RET = 208061484748068048149282294290942262023_u128 as isize;
_2 = [RET,RET];
_9 = 5671067862576696379_i64 as f32;
_5 = _2;
_10 = [111187941803504918545899430761047875250_i128,123199841324251880464700988643572894075_i128];
match _14 {
0 => bb2,
1 => bb3,
2 => bb4,
34902 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_2 = [RET,RET];
_8 = [12587273595149307073_u64,15030646684276048571_u64,14992013166909787268_u64,14227973686737933031_u64,8885554880101799191_u64,10575528747713295796_u64];
_6 = [RET,RET];
_4 = [RET,RET];
_15 = !false;
RET = (-67_isize);
_5 = [RET,RET];
_11 = [73674954302921250035440227796900479249_i128,12322439838416590332167117113053597383_i128,64248317227261828910963941043608652040_i128,48825834755505173611916911500749827217_i128];
_3 = [13891947226029774700_u64,5469146144677472331_u64,17151147461920657931_u64,4714093016131716043_u64,4289608630066379905_u64,3680609087526633137_u64,14370232706103755721_u64];
_2 = [RET,RET];
_17.0 = [RET,RET,RET,RET];
_15 = !true;
_16 = _9 as isize;
_5 = _6;
RET = _16 << _14;
_13 = Adt65::Variant0 { fld0: _6,fld1: 163_u8 };
_7 = [_16,RET];
_7 = [RET,RET];
_9 = 134297311_i32 as f32;
RET = _16 | _16;
_4 = [RET,RET];
_8 = [12517131582322581043_u64,17950616340746694216_u64,6323852964732744778_u64,16106816808691500995_u64,8522531359496906915_u64,12624761519797552016_u64];
match _14 {
0 => bb3,
1 => bb2,
2 => bb7,
34902 => bb9,
_ => bb8
}
}
bb7 = {
RET = 115_isize;
_4 = [RET,RET];
RET = 27551_u16 as isize;
_11 = [138586821204878252419537371837211919616_i128,60016837415640100465764297426276052367_i128,(-138857336633031320117383827685933544234_i128),41187298152370628070639372764438943420_i128];
_9 = 50950789907528490453729789445179606093_u128 as f32;
_11 = [(-29584240600540730568744550676960764499_i128),(-65881329386889450516003816963383061989_i128),68952970861202220629441348080952584982_i128,(-98130398879196486688963125964256601289_i128)];
_7 = _5;
_14 = 34902_u16;
_15 = true;
_2 = [RET,RET];
_7 = [RET,RET];
_11 = [61872906482935188619667537843243829436_i128,59736675916648268310345250563085940047_i128,119307531472024157911086043460205146014_i128,(-72238750438604955015247496068559462874_i128)];
_9 = 2143558917461006539_u64 as f32;
_2 = _5;
_8 = [14386751421548264407_u64,17737308492207721408_u64,5987506217114340547_u64,10208966365878911683_u64,16270760457924785905_u64,12429665502717219740_u64];
RET = 208061484748068048149282294290942262023_u128 as isize;
_2 = [RET,RET];
_9 = 5671067862576696379_i64 as f32;
_5 = _2;
_10 = [111187941803504918545899430761047875250_i128,123199841324251880464700988643572894075_i128];
match _14 {
0 => bb2,
1 => bb3,
2 => bb4,
34902 => bb6,
_ => bb5
}
}
bb8 = {
Return()
}
bb9 = {
_4 = _7;
_9 = 156513756099014801468965407131851011193_i128 as f32;
place!(Field::<u8>(Variant(_13, 0), 1)) = !111_u8;
place!(Field::<u8>(Variant(_13, 0), 1)) = 110_u8 << RET;
_5 = _7;
place!(Field::<[isize; 2]>(Variant(_13, 0), 0)) = [RET,RET];
_3 = [13796185969651419190_u64,8058867271206731237_u64,6491786302604004160_u64,126330006403924974_u64,5926654172566923724_u64,8930722309201723697_u64,15176978802581948158_u64];
_3 = [16920619615075883026_u64,8075509539658496062_u64,8348818762563102496_u64,986924256197265768_u64,10146035228049539944_u64,12267050382244786253_u64,425071512503244364_u64];
place!(Field::<[isize; 2]>(Variant(_13, 0), 0)) = [RET,RET];
_7 = [_16,_16];
_5 = [RET,_16];
_8 = [17712179992535282577_u64,1530631339563399973_u64,10305895656226351560_u64,8650230390043677553_u64,13490124862994261862_u64,18379976460700731752_u64];
RET = -_16;
_17.0 = [RET,RET,RET,_16];
_16 = 4390565758862598034_u64 as isize;
match _14 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb5,
34902 => bb11,
_ => bb10
}
}
bb10 = {
RET = 115_isize;
_4 = [RET,RET];
RET = 27551_u16 as isize;
_11 = [138586821204878252419537371837211919616_i128,60016837415640100465764297426276052367_i128,(-138857336633031320117383827685933544234_i128),41187298152370628070639372764438943420_i128];
_9 = 50950789907528490453729789445179606093_u128 as f32;
_11 = [(-29584240600540730568744550676960764499_i128),(-65881329386889450516003816963383061989_i128),68952970861202220629441348080952584982_i128,(-98130398879196486688963125964256601289_i128)];
_7 = _5;
_14 = 34902_u16;
_15 = true;
_2 = [RET,RET];
_7 = [RET,RET];
_11 = [61872906482935188619667537843243829436_i128,59736675916648268310345250563085940047_i128,119307531472024157911086043460205146014_i128,(-72238750438604955015247496068559462874_i128)];
_9 = 2143558917461006539_u64 as f32;
_2 = _5;
_8 = [14386751421548264407_u64,17737308492207721408_u64,5987506217114340547_u64,10208966365878911683_u64,16270760457924785905_u64,12429665502717219740_u64];
RET = 208061484748068048149282294290942262023_u128 as isize;
_2 = [RET,RET];
_9 = 5671067862576696379_i64 as f32;
_5 = _2;
_10 = [111187941803504918545899430761047875250_i128,123199841324251880464700988643572894075_i128];
match _14 {
0 => bb2,
1 => bb3,
2 => bb4,
34902 => bb6,
_ => bb5
}
}
bb11 = {
_21 = 22622_i16;
RET = (-69_i8) as isize;
place!(Field::<[isize; 2]>(Variant(_13, 0), 0)) = [_16,RET];
_20 = [6674854928716299251_i64,5183657106153176970_i64,4354086044880892981_i64,(-3416761282681354871_i64)];
_19 = _21 | _21;
RET = 8613911470856556971_i64 as isize;
place!(Field::<u8>(Variant(_13, 0), 1)) = !170_u8;
match _14 {
0 => bb5,
1 => bb2,
2 => bb6,
3 => bb10,
4 => bb12,
34902 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_21 = -_19;
_10 = [119666162795441781746992669380844908704_i128,(-78311296098866998814668321585908112391_i128)];
SetDiscriminant(_13, 1);
_8 = [12470484164926365791_u64,15329206956586941468_u64,6391009206815867392_u64,3514018468739780847_u64,12199195263591804749_u64,11623280479211623235_u64];
_8 = [17733677672221652577_u64,15050314074009619362_u64,8591312123329027178_u64,12105962252171868807_u64,3409681893444313640_u64,737277882612941627_u64];
_23.0 = _20;
_22 = 83_u8 as u16;
place!(Field::<[i64; 4]>(Variant(_13, 1), 6)) = [(-1790197040402126891_i64),(-3981587142384958201_i64),4004640636681354191_i64,1198499941884272205_i64];
_6 = [_16,_16];
_9 = 7_usize as f32;
_15 = true | false;
_4 = _2;
place!(Field::<[u16; 4]>(Variant(_13, 1), 1)) = [_22,_22,_14,_22];
_23.0 = [(-7295933412329647112_i64),(-5243427754847987358_i64),6380411106553308128_i64,9176589746855368769_i64];
_2 = _5;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(18_usize, 6_usize, Move(_6), 10_usize, Move(_10), 20_usize, Move(_20), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(18_usize, 8_usize, Move(_8), 7_usize, Move(_7), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_25 = dump_var(18_usize, 19_usize, Move(_19), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: isize,mut _2: isize,mut _3: *const &'static mut u32,mut _4: [isize; 2],mut _5: [isize; 2],mut _6: [u64; 7],mut _7: isize,mut _8: &'static mut u32,mut _9: isize) -> i128 {
mir! {
type RET = i128;
let _10: u32;
let _11: f32;
let _12: *const u8;
let _13: *mut i64;
let _14: char;
let _15: i32;
let _16: isize;
let _17: Adt65;
let _18: [i32; 8];
let _19: [u64; 7];
let _20: *const [isize; 2];
let _21: ([isize; 4],);
let _22: isize;
let _23: isize;
let _24: i64;
let _25: usize;
let _26: ();
let _27: ();
{
_9 = _1;
_7 = (-163660431_i32) as isize;
Goto(bb1)
}
bb1 = {
RET = 3259411563439271091_u64 as i128;
RET = 143727876050990987767566106992724550599_i128;
_4 = [_2,_9];
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
143727876050990987767566106992724550599 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_6 = [6664621082960272257_u64,3557460910580795543_u64,7979398724025153626_u64,15947646760390776658_u64,16687344978578218934_u64,6769286588092788277_u64,9720073985209318240_u64];
RET = 8583074092925824417_i64 as i128;
_10 = 226_u8 as u32;
_11 = RET as f32;
_10 = 4262751473_u32 * 3172484524_u32;
_6 = [12935773527519564441_u64,16015140832343522387_u64,16940160605181625514_u64,2835036592135349344_u64,17028511779700464872_u64,6066049876722780206_u64,7216119378658305904_u64];
_2 = _1 | _9;
_6 = [1318921982871234811_u64,571227257689719842_u64,312055114435586056_u64,16795375925114454159_u64,12946019085176988629_u64,17873934353712542068_u64,9006867598639556622_u64];
_8 = &mut _10;
(*_8) = 3968701128_u32;
_1 = _9;
_2 = _11 as isize;
_6 = [10821482794257471652_u64,6570803048993996072_u64,8368127883277774228_u64,14865212819126670170_u64,16333057612363912778_u64,1370266938253978429_u64,3672054470859535363_u64];
_8 = &mut _10;
_4 = [_1,_1];
_5 = [_1,_9];
RET = !(-4987838313347039300826659611989192460_i128);
_1 = _9;
(*_8) = !2707877682_u32;
_2 = _1;
_15 = 1420817385_i32;
_14 = '\u{1cb52}';
match _15 {
0 => bb9,
1 => bb10,
2 => bb11,
1420817385 => bb13,
_ => bb12
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_14 = '\u{17e7e}';
_6 = [2501361711475878730_u64,1116575927128900130_u64,6271519149198114528_u64,8904218709815264906_u64,14209435456641092996_u64,10858798408664929075_u64,5108971257269262614_u64];
_14 = '\u{dc64e}';
RET = 15844628871611056031_u64 as i128;
_6 = [746004678033899000_u64,16462847380622000914_u64,11987246151365816578_u64,7982968716007610476_u64,16886560553611195201_u64,12223923112615239743_u64,14383228110196783590_u64];
_7 = _9;
_6 = [9382922231977888696_u64,13141556720568198243_u64,6645065619856616997_u64,10026952216532352953_u64,7216612549894923643_u64,12892592202914021771_u64,6798173753752259107_u64];
_18 = [_15,_15,_15,_15,_15,_15,_15,_15];
_8 = &mut _10;
_16 = !_2;
_1 = 87_u8 as isize;
_18 = [_15,_15,_15,_15,_15,_15,_15,_15];
_16 = !_2;
_2 = _16;
_15 = 1952300903_i32 & 811188911_i32;
RET = 5272_i16 as i128;
RET = _10 as i128;
_6 = [6559438878770205534_u64,567010334253297772_u64,12474956544383389227_u64,11647824850158739103_u64,17878762500320439215_u64,9765982626296223118_u64,3801385229961030085_u64];
(*_8) = 1647905134_u32 ^ 2956718884_u32;
RET = 242_u8 as i128;
_6 = [5478880854144991773_u64,4068241101219305529_u64,12650374485140554598_u64,15711497945456110293_u64,3218199387179764213_u64,18225516836795492322_u64,14995081819522184442_u64];
_16 = _7 * _7;
_18 = [_15,_15,_15,_15,_15,_15,_15,_15];
Goto(bb14)
}
bb14 = {
RET = 132883279788230712807357108481783962692_i128 - 97954730502728239259276215670112552156_i128;
_20 = core::ptr::addr_of!(_5);
_8 = &mut _10;
_7 = !_2;
(*_20) = _4;
RET = 283287324433875555032111855283299677056_u128 as i128;
_1 = _7;
(*_8) = _7 as u32;
_19 = [3230210181576878129_u64,7399269005574437836_u64,3586027519757248459_u64,3336151674561400704_u64,3640227126742170538_u64,10994646377231704658_u64,18374608867401658742_u64];
_10 = _2 as u32;
RET = 125577176576811363807266223659046817760_i128;
_11 = 5274193848626069561618271468648006240_u128 as f32;
_14 = '\u{85eea}';
_24 = !1341200973784490003_i64;
_2 = _9 & _1;
_18 = [_15,_15,_15,_15,_15,_15,_15,_15];
_10 = 4051828686_u32 & 1149400195_u32;
_14 = '\u{d494b}';
_25 = 7364447885544493316_u64 as usize;
RET = !73317292560120894392308268850752896178_i128;
_19 = _6;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(19_usize, 18_usize, Move(_18), 14_usize, Move(_14), 7_usize, Move(_7), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(19_usize, 16_usize, Move(_16), 5_usize, Move(_5), 15_usize, Move(_15), 27_usize, _27), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{8d54a}'), std::hint::black_box(985146654_u32), std::hint::black_box(38_i8), std::hint::black_box(6_usize));
                
            }
#[derive(Debug)]
pub enum Adt20 {
Variant0{
fld0: u64,
fld1: u8,
fld2: *const i8,

},
Variant1{
fld0: bool,
fld1: usize,
fld2: isize,
fld3: *const i8,
fld4: u128,

},
Variant2{
fld0: bool,
fld1: u32,
fld2: isize,
fld3: u128,
fld4: u16,
fld5: i32,
fld6: i64,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt21 {
Variant0{
fld0: u64,
fld1: u128,
fld2: isize,
fld3: i8,
fld4: *const i8,
fld5: u8,
fld6: i64,

},
Variant1{
fld0: i128,

},
Variant2{
fld0: f32,
fld1: char,
fld2: *const i8,
fld3: i64,

},
Variant3{
fld0: u64,

}}
#[derive(Debug)]
pub enum Adt26 {
Variant0{
fld0: i128,
fld1: u32,
fld2: isize,
fld3: Adt20,

},
Variant1{
fld0: u64,
fld1: u8,
fld2: *const i8,
fld3: i32,

}}
#[derive(Debug)]
pub enum Adt27 {
Variant0{
fld0: i8,
fld1: u128,
fld2: f64,

},
Variant1{
fld0: i64,

},
Variant2{
fld0: i64,
fld1: char,
fld2: u128,
fld3: i16,

},
Variant3{
fld0: bool,
fld1: char,
fld2: usize,
fld3: Adt20,
fld4: *mut u16,
fld5: f64,
fld6: *mut i64,

}}
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: bool,
fld1: *mut u16,
fld2: u64,
fld3: usize,
fld4: u16,

},
Variant1{
fld0: bool,
fld1: f32,
fld2: Adt27,

},
Variant2{
fld0: i16,

},
Variant3{
fld0: i64,
fld1: *const u128,
fld2: u128,
fld3: i32,
fld4: [i32; 4],

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: Adt21,
fld1: i128,

},
Variant1{
fld0: Adt40,
fld1: i64,
fld2: isize,
fld3: u128,
fld4: *const i8,
fld5: Adt27,

},
Variant2{
fld0: i128,

},
Variant3{
fld0: bool,
fld1: Adt20,
fld2: u16,
fld3: i8,
fld4: [i32; 4],
fld5: i32,
fld6: i64,
fld7: f32,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (isize, *mut u16, i128, i128),
fld1: [u64; 7],
fld2: u64,
fld3: Adt27,
fld4: Adt46,
fld5: [i32; 4],
fld6: Adt40,

},
Variant1{
fld0: bool,
fld1: (isize, *mut u16, i128, i128),
fld2: Adt46,
fld3: f32,
fld4: [i16; 8],
fld5: f64,
fld6: u64,
fld7: [char; 4],

}}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: [isize; 2],
fld1: u8,

},
Variant1{
fld0: *mut i64,
fld1: [u16; 4],
fld2: *const u128,
fld3: u8,
fld4: *mut char,
fld5: [u64; 7],
fld6: [i64; 4],
fld7: *const [u16; 4],

}}

