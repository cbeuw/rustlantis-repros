#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: u32,mut _5: i128,mut _6: i32) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _7: isize;
let _8: (u32,);
let _9: isize;
let _10: (i16, u32, u8);
let _11: i32;
let _12: f32;
let _13: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _14: Adt42;
let _15: u32;
let _16: i64;
let _17: [char; 3];
let _18: Adt55;
let _19: *mut i128;
let _20: (u32,);
let _21: ([u128; 2],);
let _22: char;
let _23: Adt57;
let _24: ([u128; 2],);
let _25: Adt45;
let _26: isize;
let _27: u16;
let _28: f64;
let _29: f64;
let _30: isize;
let _31: u16;
let _32: isize;
let _33: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2]));
let _34: f64;
let _35: (u32,);
let _36: Adt42;
let _37: i8;
let _38: isize;
let _39: ();
let _40: ();
{
_4 = !3196589441_u32;
_6 = 167191892570708951129413728332432951568_i128 as i32;
RET = [14498063116344447899_usize,1_usize];
_2 = '\u{c5140}';
_3 = _6 as isize;
_1 = true;
_7 = _3;
_8 = (_4,);
_5 = !143993243324664225782515553456151014065_i128;
_3 = 11271819776898141399_u64 as isize;
_5 = 2106201687565906387_i64 as i128;
Call(_7 = core::intrinsics::bswap(_3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _4 > _8.0;
_6 = 67_u8 as i32;
_1 = false ^ true;
_3 = 104_i8 as isize;
_2 = '\u{65c9f}';
Goto(bb2)
}
bb2 = {
_7 = _3 << _4;
_4 = !_8.0;
RET = [16226367684447355929_usize,2185002687350219273_usize];
_9 = !_7;
_10.1 = !_4;
_10.2 = !135_u8;
_10 = ((-19581_i16), _8.0, 28_u8);
RET = [7_usize,6519538289286926849_usize];
_6 = 62_i8 as i32;
_6 = !(-485576307_i32);
Goto(bb3)
}
bb3 = {
_7 = 322649852130067488943103155089270670703_u128 as isize;
_5 = _6 as i128;
_3 = 27843_u16 as isize;
_10.0 = 10264_u16 as i16;
RET = [11353946611625495526_usize,6_usize];
_7 = _6 as isize;
_1 = true;
RET = [16199102960287484568_usize,4_usize];
_10.0 = _6 as i16;
_4 = _8.0;
_9 = _7;
_10.2 = 17984970263876189056_u64 as u8;
_10.2 = 84_u8;
RET = [3929712130498066099_usize,8254646483275437608_usize];
_10.1 = _5 as u32;
_8.0 = _4;
_13.0.2.1 = !_1;
_11 = -_6;
_12 = _10.0 as f32;
_5 = (-147689954045740063833165434828027677860_i128);
_13.0.2.3 = [297084121474315435616075396580115544286_u128,127679560138100788246180984291906802117_u128];
_8.0 = 14521320660729991451_u64 as u32;
_13.0.0.2 = 42_i8 as u8;
_13.0.2.2 = _10.2;
_11 = 62902010154528466898292964267243080307_u128 as i32;
match _10.2 {
84 => bb5,
_ => bb4
}
}
bb4 = {
_7 = _3 << _4;
_4 = !_8.0;
RET = [16226367684447355929_usize,2185002687350219273_usize];
_9 = !_7;
_10.1 = !_4;
_10.2 = !135_u8;
_10 = ((-19581_i16), _8.0, 28_u8);
RET = [7_usize,6519538289286926849_usize];
_6 = 62_i8 as i32;
_6 = !(-485576307_i32);
Goto(bb3)
}
bb5 = {
_13.0.1.3 = _10.0;
_13.0.0 = (_11, _13.0.2.1, _13.0.2.2, _13.0.2.3);
_13.0.2.1 = _1 ^ _13.0.0.1;
match _13.0.0.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
84 => bb9,
_ => bb8
}
}
bb6 = {
_7 = _3 << _4;
_4 = !_8.0;
RET = [16226367684447355929_usize,2185002687350219273_usize];
_9 = !_7;
_10.1 = !_4;
_10.2 = !135_u8;
_10 = ((-19581_i16), _8.0, 28_u8);
RET = [7_usize,6519538289286926849_usize];
_6 = 62_i8 as i32;
_6 = !(-485576307_i32);
Goto(bb3)
}
bb7 = {
_7 = 322649852130067488943103155089270670703_u128 as isize;
_5 = _6 as i128;
_3 = 27843_u16 as isize;
_10.0 = 10264_u16 as i16;
RET = [11353946611625495526_usize,6_usize];
_7 = _6 as isize;
_1 = true;
RET = [16199102960287484568_usize,4_usize];
_10.0 = _6 as i16;
_4 = _8.0;
_9 = _7;
_10.2 = 17984970263876189056_u64 as u8;
_10.2 = 84_u8;
RET = [3929712130498066099_usize,8254646483275437608_usize];
_10.1 = _5 as u32;
_8.0 = _4;
_13.0.2.1 = !_1;
_11 = -_6;
_12 = _10.0 as f32;
_5 = (-147689954045740063833165434828027677860_i128);
_13.0.2.3 = [297084121474315435616075396580115544286_u128,127679560138100788246180984291906802117_u128];
_8.0 = 14521320660729991451_u64 as u32;
_13.0.0.2 = 42_i8 as u8;
_13.0.2.2 = _10.2;
_11 = 62902010154528466898292964267243080307_u128 as i32;
match _10.2 {
84 => bb5,
_ => bb4
}
}
bb8 = {
_7 = _3 << _4;
_4 = !_8.0;
RET = [16226367684447355929_usize,2185002687350219273_usize];
_9 = !_7;
_10.1 = !_4;
_10.2 = !135_u8;
_10 = ((-19581_i16), _8.0, 28_u8);
RET = [7_usize,6519538289286926849_usize];
_6 = 62_i8 as i32;
_6 = !(-485576307_i32);
Goto(bb3)
}
bb9 = {
_13.0.1.0 = _13.0.0.2;
_13.0.2.0 = 15936703409636425295_usize as i32;
_13.0.1.2.0 = _10.1;
_13.0.0.1 = !_13.0.2.1;
_13.0.0.1 = _12 < _12;
_1 = _13.0.0.1;
_16 = 310841753393489381575878272740713212567_u128 as i64;
_2 = '\u{5ecd9}';
_13.1 = -_7;
_13.0.1.0 = !_13.0.2.2;
_13.0.1.3 = !_10.0;
_13.0.1.1 = [5_usize,1621639154845254182_usize,17598209483767754776_usize,6_usize,1_usize,5_usize,6_usize];
_13.0.0 = (_6, _13.0.2.1, _10.2, _13.0.2.3);
_9 = _3;
_2 = '\u{106e84}';
_13.2 = _2 as u8;
_12 = _13.0.2.2 as f32;
match _13.0.0.2 {
0 => bb1,
84 => bb10,
_ => bb5
}
}
bb10 = {
_13.0.1.0 = !_10.2;
_1 = _13.0.2.1;
_15 = !_13.0.1.2.0;
_8 = (_10.1,);
RET = [1_usize,5006339207252711281_usize];
_13.0.0 = _13.0.2;
_17 = [_2,_2,_2];
_12 = _13.1 as f32;
_16 = 1428177368870627242_i64 ^ 7137941832570676107_i64;
_5 = 34680969830219815281389959164099032795_i128 ^ 85348716936537639284300955156908444503_i128;
_17 = [_2,_2,_2];
_13.0.0.2 = _13.0.1.0 | _13.2;
Goto(bb11)
}
bb11 = {
_13.0.0.0 = _13.0.2.0 - _13.0.2.0;
_13.0.0 = (_11, _13.0.2.1, _13.0.2.2, _13.0.2.3);
_13.0.2.1 = _13.0.0.1 ^ _1;
_20 = _13.0.1.2;
RET = [5213113674709487668_usize,0_usize];
_22 = _2;
_9 = _12 as isize;
_21 = (_13.0.0.3,);
_19 = core::ptr::addr_of_mut!(_5);
_24 = _21;
_10.2 = _13.2;
_15 = _10.1;
_5 = 90723012976401056158419869511135162911_i128;
_26 = _13.1;
_5 = _10.2 as i128;
_13.0.0 = (_13.0.2.0, _13.0.2.1, _10.2, _21.0);
_1 = _13.0.2.1;
_13.0.1.0 = _22 as u8;
_13.0.0.2 = _13.0.1.0 - _13.0.2.2;
_13.2 = _13.0.0.2;
Goto(bb12)
}
bb12 = {
_16 = !(-5097170941222832194_i64);
_13.0.1.3 = _13.0.0.1 as i16;
_4 = !_20.0;
_8.0 = _20.0;
_13.0.1.2 = (_4,);
_13.0.2 = (_6, _13.0.0.1, _13.0.1.0, _21.0);
Call(_13.0.1.3 = fn1(_6, _13.2, _26, _19, _13.0.2.0, _9), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13.0.0.0 = -_11;
_24 = (_21.0,);
_28 = _6 as f64;
_29 = _28 * _28;
RET = [15308605239990981487_usize,7460921803249262054_usize];
_23 = Adt57::Variant0 { fld0: _21 };
_13.0.0.2 = _13.0.1.0 * _13.0.2.2;
_17 = [_2,_2,_2];
RET = [4_usize,3_usize];
_5 = -19139346158736050825439930809845987889_i128;
_10.2 = _9 as u8;
_1 = _13.0.2.1 ^ _13.0.2.1;
_32 = _7;
_33.0.1 = _20.0 >= _4;
Call(_15 = fn12(_24.0, _13, _13.0.1, Field::<([u128; 2],)>(Variant(_23, 0), 0), _13.0.1.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_14 = Adt42::Variant1 { fld0: _17 };
_31 = 54464_u16;
_13.0.0.2 = _16 as u8;
_26 = _9;
_26 = _2 as isize;
_12 = 277214671962106914144970172198786578960_u128 as f32;
_33.0 = (_11, _1, _13.2, Field::<([u128; 2],)>(Variant(_23, 0), 0).0);
SetDiscriminant(_23, 0);
_13.0.0.3 = _13.0.2.3;
_8.0 = !_20.0;
_31 = _33.0.1 as u16;
_23 = Adt57::Variant0 { fld0: _24 };
_7 = _13.0.2.0 as isize;
_14 = Adt42::Variant1 { fld0: _17 };
_33.2.2 = _13.0.1.0 * _10.2;
_20.0 = _13.0.1.2.0;
_36 = Move(_14);
SetDiscriminant(_36, 1);
_9 = _7;
_33.1.2.0 = 130391540997061885485412238751612712856_u128 as u32;
_33.0.1 = _1;
_13.0.2.2 = _13.2;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(0_usize, 22_usize, Move(_22), 13_usize, Move(_13), 5_usize, Move(_5), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(0_usize, 9_usize, Move(_9), 8_usize, Move(_8), 7_usize, Move(_7), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(0_usize, 31_usize, Move(_31), 4_usize, Move(_4), 21_usize, Move(_21), 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i32,mut _2: u8,mut _3: isize,mut _4: *mut i128,mut _5: i32,mut _6: isize) -> i16 {
mir! {
type RET = i16;
let _7: (u32,);
let _8: [char; 3];
let _9: char;
let _10: f32;
let _11: ([u128; 2],);
let _12: *mut [usize; 7];
let _13: [usize; 1];
let _14: ();
let _15: ();
{
_1 = _5;
_7 = (224806192_u32,);
_7.0 = _1 as u32;
_5 = !_1;
Call(RET = fn2(_7, _5, _7.0, _7.0, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 157_u8 ^ 129_u8;
_8 = ['\u{74a26}','\u{616e1}','\u{90421}'];
_7.0 = 901966359_u32;
RET = !22623_i16;
_2 = 23066_u16 as u8;
_7.0 = 31222_u16 as u32;
RET = (-56851873190350347930080583683958283372_i128) as i16;
_2 = !120_u8;
_2 = 186_u8 + 135_u8;
_2 = 2_u8;
_2 = 177_u8;
_6 = !_3;
_2 = 176_u8 + 33_u8;
RET = 24863_i16;
_1 = _5;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
24863 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = -22652_i16;
_1 = -_5;
_7 = (329435036_u32,);
RET = 44228_u16 as i16;
match _7.0 {
0 => bb2,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
329435036 => bb16,
_ => bb15
}
}
bb11 = {
_2 = 157_u8 ^ 129_u8;
_8 = ['\u{74a26}','\u{616e1}','\u{90421}'];
_7.0 = 901966359_u32;
RET = !22623_i16;
_2 = 23066_u16 as u8;
_7.0 = 31222_u16 as u32;
RET = (-56851873190350347930080583683958283372_i128) as i16;
_2 = !120_u8;
_2 = 186_u8 + 135_u8;
_2 = 2_u8;
_2 = 177_u8;
_6 = !_3;
_2 = 176_u8 + 33_u8;
RET = 24863_i16;
_1 = _5;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
24863 => bb10,
_ => bb9
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_7.0 = (-3493042950371589065_i64) as u32;
_10 = 4485005956931487717_i64 as f32;
_9 = '\u{c2200}';
_7.0 = 3099324686_u32 - 131241324_u32;
Goto(bb17)
}
bb17 = {
Call(_14 = dump_var(1_usize, 7_usize, Move(_7), 9_usize, Move(_9), 1_usize, Move(_1), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: (u32,),mut _2: i32,mut _3: u32,mut _4: u32,mut _5: isize) -> i16 {
mir! {
type RET = i16;
let _6: isize;
let _7: [i8; 5];
let _8: Adt55;
let _9: (i16, u32, u8);
let _10: isize;
let _11: f32;
let _12: [usize; 2];
let _13: f64;
let _14: [char; 3];
let _15: (u32,);
let _16: char;
let _17: (i32, bool, u8, [u128; 2]);
let _18: isize;
let _19: f32;
let _20: u64;
let _21: [u128; 2];
let _22: f64;
let _23: u8;
let _24: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32);
let _25: (u8, [usize; 7], (u32,), i16);
let _26: *mut i8;
let _27: ();
let _28: ();
{
RET = (-3455_i16) | 2645_i16;
_2 = -281132567_i32;
_1 = (_4,);
RET = 16439667425325106041363090740246766668_i128 as i16;
_6 = 87_u8 as isize;
_1.0 = 27_u8 as u32;
Call(_5 = core::intrinsics::transmute(_6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = (_4,);
_1.0 = _3;
RET = 14406_i16 & 7627_i16;
_4 = 0_usize as u32;
RET = 3498_i16 - (-1948_i16);
_1.0 = _4;
_4 = !_3;
_5 = _6;
Call(_2 = fn3(_3, _6, _1, _6, RET, _1.0, _4, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = RET as i32;
_5 = !_6;
_4 = _3;
_3 = _4;
Goto(bb3)
}
bb3 = {
_5 = _2 as isize;
_1 = (_4,);
_3 = (-5295441103021773691_i64) as u32;
_2 = 1324359781_i32 - 1122357487_i32;
RET = (-119_i8) as i16;
_1.0 = _3;
RET = (-32393_i16);
RET = !23327_i16;
_1 = (_3,);
_3 = _1.0;
_3 = 127135138881469120332994940347122393329_i128 as u32;
RET = 22989809582930377230695555759495386095_i128 as i16;
RET = -(-27555_i16);
_3 = _4 ^ _1.0;
_1 = (_3,);
_1 = (_3,);
_6 = _5;
_2 = (-1983386066_i32);
Goto(bb4)
}
bb4 = {
_1 = (_4,);
_9.1 = _4;
_7 = [(-32_i8),(-74_i8),104_i8,55_i8,45_i8];
_2 = 399573810_i32;
RET = 20725_i16;
_1.0 = _4 >> _2;
RET = -14686_i16;
_9 = (RET, _4, 219_u8);
RET = _9.0 ^ _9.0;
_11 = _2 as f32;
_4 = (-4848434077979963566_i64) as u32;
_9.2 = 94_u8;
_9.0 = _3 as i16;
_6 = !_5;
_12 = [3414516685863909410_usize,12415809157695246688_usize];
_7 = [103_i8,90_i8,48_i8,(-61_i8),108_i8];
_13 = 4239838312627541560465756051205353871_u128 as f64;
_1.0 = _3 - _9.1;
_1.0 = _4 * _9.1;
RET = _9.0 * _9.0;
match _2 {
399573810 => bb6,
_ => bb5
}
}
bb5 = {
_5 = _2 as isize;
_1 = (_4,);
_3 = (-5295441103021773691_i64) as u32;
_2 = 1324359781_i32 - 1122357487_i32;
RET = (-119_i8) as i16;
_1.0 = _3;
RET = (-32393_i16);
RET = !23327_i16;
_1 = (_3,);
_3 = _1.0;
_3 = 127135138881469120332994940347122393329_i128 as u32;
RET = 22989809582930377230695555759495386095_i128 as i16;
RET = -(-27555_i16);
_3 = _4 ^ _1.0;
_1 = (_3,);
_1 = (_3,);
_6 = _5;
_2 = (-1983386066_i32);
Goto(bb4)
}
bb6 = {
_9.2 = 0_usize as u8;
_10 = _5;
_3 = _1.0;
Goto(bb7)
}
bb7 = {
_1 = (_4,);
_1.0 = _9.1;
_4 = !_3;
_14 = ['\u{cb4b7}','\u{b86ae}','\u{aeb93}'];
_15 = _1;
_9.2 = (-69_i8) as u8;
_3 = _9.1 ^ _15.0;
_9.1 = !_3;
_11 = RET as f32;
_14 = ['\u{1b417}','\u{8e673}','\u{b43d1}'];
_10 = _5 + _5;
_2 = 1566730430_i32 - 916344003_i32;
_15 = _1;
_6 = _10 ^ _10;
_10 = _6 - _6;
RET = _9.0;
_9 = (RET, _4, 220_u8);
_9.2 = 184_u8 * 200_u8;
RET = _9.0;
_16 = '\u{ba090}';
_17.3 = [174697666977826457990312786347782816745_u128,239972257000155093683894205845811440292_u128];
_16 = '\u{5c587}';
_9 = (RET, _4, 39_u8);
_9.1 = _4 * _3;
_17.2 = 17809265235750559846_u64 as u8;
match _9.2 {
0 => bb8,
39 => bb10,
_ => bb9
}
}
bb8 = {
_1 = (_4,);
_1.0 = _3;
RET = 14406_i16 & 7627_i16;
_4 = 0_usize as u32;
RET = 3498_i16 - (-1948_i16);
_1.0 = _4;
_4 = !_3;
_5 = _6;
Call(_2 = fn3(_3, _6, _1, _6, RET, _1.0, _4, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_2 = RET as i32;
_5 = !_6;
_4 = _3;
_3 = _4;
Goto(bb3)
}
bb10 = {
_15.0 = 10660009187483614048_usize as u32;
_17.0 = -_2;
_17.3 = [89191760956031552093933352819686125957_u128,128324455481905709609885020209400890127_u128];
_16 = '\u{f0bef}';
_6 = !_10;
_17.1 = true;
match _9.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
39 => bb11,
_ => bb6
}
}
bb11 = {
_12 = [4283917405512267547_usize,14280579820353254785_usize];
_15 = _1;
_15.0 = _9.1;
_16 = '\u{bc19}';
_14 = [_16,_16,_16];
_1 = _15;
_14 = [_16,_16,_16];
_15 = _1;
_1.0 = _4;
_10 = _9.1 as isize;
_3 = 1256374956719752770_u64 as u32;
RET = 8675_u16 as i16;
_9 = (RET, _3, _17.2);
_20 = 12750856345849983741_u64;
_7 = [62_i8,98_i8,(-26_i8),125_i8,106_i8];
_9 = (RET, _15.0, _17.2);
_3 = !_9.1;
_13 = _20 as f64;
_12 = [0_usize,4_usize];
match _20 {
0 => bb2,
1 => bb12,
2 => bb13,
12750856345849983741 => bb15,
_ => bb14
}
}
bb12 = {
_15.0 = 10660009187483614048_usize as u32;
_17.0 = -_2;
_17.3 = [89191760956031552093933352819686125957_u128,128324455481905709609885020209400890127_u128];
_16 = '\u{f0bef}';
_6 = !_10;
_17.1 = true;
match _9.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
39 => bb11,
_ => bb6
}
}
bb13 = {
_2 = RET as i32;
_5 = !_6;
_4 = _3;
_3 = _4;
Goto(bb3)
}
bb14 = {
_5 = _2 as isize;
_1 = (_4,);
_3 = (-5295441103021773691_i64) as u32;
_2 = 1324359781_i32 - 1122357487_i32;
RET = (-119_i8) as i16;
_1.0 = _3;
RET = (-32393_i16);
RET = !23327_i16;
_1 = (_3,);
_3 = _1.0;
_3 = 127135138881469120332994940347122393329_i128 as u32;
RET = 22989809582930377230695555759495386095_i128 as i16;
RET = -(-27555_i16);
_3 = _4 ^ _1.0;
_1 = (_3,);
_1 = (_3,);
_6 = _5;
_2 = (-1983386066_i32);
Goto(bb4)
}
bb15 = {
_6 = _17.1 as isize;
_10 = !_5;
_9.2 = _17.2 >> _9.1;
_23 = _20 as u8;
_17.2 = !_9.2;
_20 = 16956037358396837619_u64 - 9810256943285286906_u64;
_23 = _13 as u8;
_18 = -_10;
_5 = _9.1 as isize;
_17.1 = !false;
_24.3.1 = [1_usize,5_usize,0_usize,3_usize,1_usize,3609607162294908278_usize,1_usize];
_5 = -_6;
Goto(bb16)
}
bb16 = {
Call(_27 = dump_var(2_usize, 6_usize, Move(_6), 7_usize, Move(_7), 14_usize, Move(_14), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_27 = dump_var(2_usize, 18_usize, Move(_18), 2_usize, Move(_2), 15_usize, Move(_15), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: u32,mut _2: isize,mut _3: (u32,),mut _4: isize,mut _5: i16,mut _6: u32,mut _7: u32,mut _8: u32) -> i32 {
mir! {
type RET = i32;
let _9: f32;
let _10: f32;
let _11: *const i128;
let _12: Adt55;
let _13: isize;
let _14: *const [i8; 5];
let _15: [u128; 2];
let _16: isize;
let _17: isize;
let _18: (i16, u32, u8);
let _19: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _20: Adt54;
let _21: f32;
let _22: ();
let _23: ();
{
_1 = !_3.0;
RET = (-440877291_i32);
_6 = _3.0;
_4 = !_2;
_6 = !_1;
_7 = _5 as u32;
_5 = 22716_i16 >> RET;
RET = (-1355651137_i32) | 163649872_i32;
_1 = _7;
_3 = (_1,);
_2 = _4 + _4;
_9 = (-87396821704080699545631381342718747909_i128) as f32;
_7 = _3.0;
_1 = _7;
_8 = !_1;
Goto(bb1)
}
bb1 = {
_4 = _2;
_5 = 71_i8 as i16;
_8 = !_1;
_4 = _2 ^ _2;
_9 = 49718_u16 as f32;
_3 = (_8,);
_3 = (_7,);
_3 = (_1,);
_4 = -_2;
_3.0 = 24_u8 as u32;
_9 = _5 as f32;
_9 = 263600550028317008333979386139938378882_u128 as f32;
_10 = _9 * _9;
_2 = 3218166542024539056_usize as isize;
_5 = (-17410_i16);
RET = -(-957734647_i32);
_10 = 3_usize as f32;
_6 = _8;
_5 = _4 as i16;
_8 = _1 << _1;
Call(_3.0 = fn4(_4, _8, _8, _8, _8, _8, _7, _2, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = -_9;
_3.0 = _8 ^ _1;
_3 = (_6,);
_10 = _9;
RET = (-1137203574_i32) * (-1490533739_i32);
_7 = !_3.0;
_2 = (-7481375842339686862_i64) as isize;
RET = _2 as i32;
_13 = _4;
_7 = _8 ^ _8;
_4 = _13 >> _7;
_4 = -_13;
_9 = _10;
_6 = _7 - _7;
_3 = (_7,);
RET = (-877905537_i32) + 1413275466_i32;
_3 = (_7,);
_3.0 = 251_u8 as u32;
_4 = RET as isize;
_6 = _3.0;
_4 = _13 & _2;
_6 = _1;
_10 = _9;
_15 = [170837218061793122694463934447949689429_u128,134244104265521779574947464107263485576_u128];
Call(RET = fn9(_2, _7, _2, _1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_1 = _7 << _2;
_7 = _6;
RET = _13 as i32;
_5 = 15848_i16 | 3702_i16;
_4 = _13 + _2;
RET = _2 as i32;
_9 = _10;
_5 = -24977_i16;
_6 = 119_i8 as u32;
RET = !261929641_i32;
_1 = !_3.0;
_15 = [112467909281916180055973627575211440346_u128,227968570269212341828273122823469064051_u128];
_16 = 37438_u16 as isize;
_4 = _13 << _13;
_10 = _9 + _9;
_6 = _8;
_10 = -_9;
_18.0 = 7473234121246851414_u64 as i16;
_3.0 = _8;
_15 = [281335384438801211930571042816057182522_u128,73686113416789162121739916403385178583_u128];
_3.0 = _6;
_15 = [212846719645691173076228915058466157967_u128,156369916401690153371593171050327231444_u128];
_13 = _6 as isize;
_18.1 = _5 as u32;
_8 = _7 >> _4;
_19.0.2.1 = !false;
_19.0.2 = (RET, false, 28_u8, _15);
Call(_15 = fn11(RET, _19.0.2.1, _2, _6, _3, _19.0.2.2, _4, _8, _4, _4, _4, _19.0.2.1, _19.0.2, _13, _19.0.2.1, _19.0.2.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_19.0.0 = (RET, _19.0.2.1, _19.0.2.2, _19.0.2.3);
_13 = -_4;
_19.2 = _19.0.0.2;
RET = !_19.0.0.0;
_19.0.1.0 = _19.0.0.2 + _19.0.2.2;
_18.2 = !_19.0.1.0;
_17 = !_13;
_19.2 = !_18.2;
_10 = 6_usize as f32;
_3.0 = _8 & _6;
RET = (-17483585564833841795691585711263880474_i128) as i32;
_19.0.2.3 = _15;
_19.1 = _19.0.2.1 as isize;
_19.0.1.3 = -_5;
_9 = _10;
_15 = [94053886643550145567955034166097918458_u128,335643919507662777523642594232196884935_u128];
_19.0.1.2.0 = !_3.0;
_19.0.2.2 = _18.2 - _19.2;
_19.0.1.0 = !_19.0.2.2;
_19.1 = -_13;
_7 = !_3.0;
_5 = _18.0;
_19.0.1.1 = [4140357272645941715_usize,2_usize,3_usize,0_usize,2315449032776600452_usize,4451459998082520462_usize,12082012434883970575_usize];
_19.0.1.0 = _19.0.2.2;
_15 = _19.0.0.3;
_19.0.0.3 = _15;
_19.0.1.1 = [5_usize,17725878431911497207_usize,17666722919426389240_usize,6261049344808192736_usize,17106551822592296701_usize,4785328049051176582_usize,5_usize];
_19.0.1.0 = _18.2;
_2 = _17;
match _19.0.0.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
28 => bb9,
_ => bb8
}
}
bb5 = {
_1 = _7 << _2;
_7 = _6;
RET = _13 as i32;
_5 = 15848_i16 | 3702_i16;
_4 = _13 + _2;
RET = _2 as i32;
_9 = _10;
_5 = -24977_i16;
_6 = 119_i8 as u32;
RET = !261929641_i32;
_1 = !_3.0;
_15 = [112467909281916180055973627575211440346_u128,227968570269212341828273122823469064051_u128];
_16 = 37438_u16 as isize;
_4 = _13 << _13;
_10 = _9 + _9;
_6 = _8;
_10 = -_9;
_18.0 = 7473234121246851414_u64 as i16;
_3.0 = _8;
_15 = [281335384438801211930571042816057182522_u128,73686113416789162121739916403385178583_u128];
_3.0 = _6;
_15 = [212846719645691173076228915058466157967_u128,156369916401690153371593171050327231444_u128];
_13 = _6 as isize;
_18.1 = _5 as u32;
_8 = _7 >> _4;
_19.0.2.1 = !false;
_19.0.2 = (RET, false, 28_u8, _15);
Call(_15 = fn11(RET, _19.0.2.1, _2, _6, _3, _19.0.2.2, _4, _8, _4, _4, _4, _19.0.2.1, _19.0.2, _13, _19.0.2.1, _19.0.2.1), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_10 = -_9;
_3.0 = _8 ^ _1;
_3 = (_6,);
_10 = _9;
RET = (-1137203574_i32) * (-1490533739_i32);
_7 = !_3.0;
_2 = (-7481375842339686862_i64) as isize;
RET = _2 as i32;
_13 = _4;
_7 = _8 ^ _8;
_4 = _13 >> _7;
_4 = -_13;
_9 = _10;
_6 = _7 - _7;
_3 = (_7,);
RET = (-877905537_i32) + 1413275466_i32;
_3 = (_7,);
_3.0 = 251_u8 as u32;
_4 = RET as isize;
_6 = _3.0;
_4 = _13 & _2;
_6 = _1;
_10 = _9;
_15 = [170837218061793122694463934447949689429_u128,134244104265521779574947464107263485576_u128];
Call(RET = fn9(_2, _7, _2, _1), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_4 = _2;
_5 = 71_i8 as i16;
_8 = !_1;
_4 = _2 ^ _2;
_9 = 49718_u16 as f32;
_3 = (_8,);
_3 = (_7,);
_3 = (_1,);
_4 = -_2;
_3.0 = 24_u8 as u32;
_9 = _5 as f32;
_9 = 263600550028317008333979386139938378882_u128 as f32;
_10 = _9 * _9;
_2 = 3218166542024539056_usize as isize;
_5 = (-17410_i16);
RET = -(-957734647_i32);
_10 = 3_usize as f32;
_6 = _8;
_5 = _4 as i16;
_8 = _1 << _1;
Call(_3.0 = fn4(_4, _8, _8, _8, _8, _8, _7, _2, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
RET = _6 as i32;
_6 = _18.1 ^ _3.0;
_6 = _3.0;
_19.0.0.0 = !RET;
_5 = _18.0;
_18 = (_5, _19.0.1.2.0, _19.0.1.0);
_10 = _9 * _9;
_21 = _10 * _10;
_7 = _19.2 as u32;
_7 = _3.0 & _18.1;
_18.0 = !_5;
_19.0.0 = _19.0.2;
_10 = _21;
RET = 136927492312387758984557570934723538678_u128 as i32;
_19.0.0.3 = [99254653454536313154235980551197228676_u128,51265028232872172950392054581841734640_u128];
RET = _5 as i32;
_8 = _18.1 << _3.0;
_18 = (_19.0.1.3, _7, _19.2);
RET = _19.0.2.2 as i32;
_18 = (_5, _8, _19.0.0.2);
_1 = _7 * _7;
_19.0.0 = (RET, _19.0.2.1, _19.0.2.2, _15);
_8 = !_1;
_15 = _19.0.0.3;
Goto(bb10)
}
bb10 = {
Call(_22 = dump_var(3_usize, 6_usize, Move(_6), 19_usize, Move(_19), 1_usize, Move(_1), 5_usize, Move(_5)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_22 = dump_var(3_usize, 15_usize, Move(_15), 18_usize, Move(_18), 2_usize, Move(_2), 23_usize, _23), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: isize,mut _2: u32,mut _3: u32,mut _4: u32,mut _5: u32,mut _6: u32,mut _7: u32,mut _8: isize,mut _9: i32) -> u32 {
mir! {
type RET = u32;
let _10: (u32,);
let _11: i8;
let _12: [char; 3];
let _13: f32;
let _14: (u32,);
let _15: Adt46;
let _16: i64;
let _17: i64;
let _18: f64;
let _19: ();
let _20: ();
{
RET = _3 >> _1;
RET = _7 >> _1;
RET = _5 ^ _2;
_4 = 109793159688577765698186163639415953558_i128 as u32;
_4 = RET << RET;
_1 = _9 as isize;
_9 = 1598769338_i32;
_1 = _8 | _8;
_9 = 5970543952874478680_usize as i32;
_5 = _2;
_1 = RET as isize;
_4 = !RET;
_8 = _1;
Goto(bb1)
}
bb1 = {
_4 = '\u{153aa}' as u32;
_7 = RET;
RET = _7;
_3 = !RET;
_6 = 63_u8 as u32;
_11 = 23977_i16 as i8;
_8 = 12059031849920118003_u64 as isize;
_6 = (-22575800386347712046288589609522570456_i128) as u32;
_6 = _3;
_7 = _3 - _6;
_3 = !RET;
RET = _9 as u32;
_4 = _2;
_5 = _4;
_10 = (_6,);
_8 = _1;
_3 = !_7;
_10 = (_3,);
_1 = !_8;
_12 = ['\u{10b1f7}','\u{26a7}','\u{10ad39}'];
_10.0 = !_3;
Call(_3 = fn5(_6, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10.0 = _7;
_1 = !_8;
_13 = _3 as f32;
_2 = _1 as u32;
_12 = ['\u{6e865}','\u{1b927}','\u{30f72}'];
_14 = (_10.0,);
_7 = !_6;
_9 = 1977382739_i32;
_2 = !_6;
_12 = ['\u{6f12}','\u{634f5}','\u{71ae3}'];
_9 = 713329243_i32 ^ (-1417033550_i32);
RET = !_3;
_7 = _2 ^ _10.0;
_13 = 113_u8 as f32;
RET = _7;
_16 = 18064983132356257033_usize as i64;
_13 = 189_u8 as f32;
_2 = !_7;
_9 = 462187533_i32 | (-688319644_i32);
RET = !_7;
_10.0 = RET;
_3 = _11 as u32;
RET = _2 ^ _7;
_12 = ['\u{10f084}','\u{dd063}','\u{21eea}'];
_5 = true as u32;
_13 = _11 as f32;
Goto(bb3)
}
bb3 = {
Call(_19 = dump_var(4_usize, 3_usize, Move(_3), 1_usize, Move(_1), 14_usize, Move(_14), 16_usize, Move(_16)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_19 = dump_var(4_usize, 5_usize, Move(_5), 10_usize, Move(_10), 6_usize, Move(_6), 20_usize, _20), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u32,mut _2: isize) -> u32 {
mir! {
type RET = u32;
let _3: [usize; 7];
let _4: i8;
let _5: bool;
let _6: f32;
let _7: *const i128;
let _8: u128;
let _9: f64;
let _10: Adt56;
let _11: bool;
let _12: Adt47;
let _13: *const (i16, u32, u8);
let _14: isize;
let _15: i32;
let _16: [usize; 7];
let _17: isize;
let _18: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _19: *mut [i8; 5];
let _20: char;
let _21: u32;
let _22: bool;
let _23: u8;
let _24: Adt54;
let _25: i64;
let _26: &'static u16;
let _27: [char; 3];
let _28: isize;
let _29: Adt49;
let _30: f32;
let _31: Adt57;
let _32: isize;
let _33: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _34: isize;
let _35: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2]));
let _36: u32;
let _37: Adt54;
let _38: *mut i8;
let _39: i128;
let _40: Adt42;
let _41: Adt43;
let _42: i8;
let _43: ((i32, bool, u8, [u128; 2]),);
let _44: bool;
let _45: Adt54;
let _46: u128;
let _47: isize;
let _48: (i16, u32, u8);
let _49: ();
let _50: ();
{
RET = 23_i8 as u32;
RET = (-999235405_i32) as u32;
RET = _1 >> _1;
_2 = 46_isize;
RET = _1;
_2 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
RET = '\u{7fcf6}' as u32;
_3 = [5_usize,10594222563685758078_usize,5783958115075152493_usize,683088460530203520_usize,4_usize,6938666248018498251_usize,0_usize];
_3 = [1_usize,5365013062841517005_usize,1_usize,6_usize,6839570007001603141_usize,16802792674140388420_usize,10280781077470866006_usize];
_2 = (-9223372036854775808_isize);
_2 = 10765_u16 as isize;
Call(_1 = core::intrinsics::transmute(RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = _1;
_1 = !RET;
_4 = '\u{45f0e}' as i8;
RET = 11060104291210286402_u64 as u32;
RET = _1;
RET = 678592863_i32 as u32;
RET = _2 as u32;
RET = !_1;
_5 = !false;
_4 = 14729_i16 as i8;
_8 = !166282310400961501845760752410927171116_u128;
_1 = RET ^ RET;
RET = !_1;
_3 = [12050437675534625952_usize,6_usize,1_usize,12419905646956703197_usize,4314545130186776681_usize,11234436240416650025_usize,7054049997393638074_usize];
_6 = _1 as f32;
_9 = _2 as f64;
Goto(bb2)
}
bb2 = {
_3 = [5_usize,5_usize,1_usize,1496141167689682554_usize,3701903442025114867_usize,4651581877641577014_usize,4_usize];
RET = '\u{1025a2}' as u32;
_5 = true;
_5 = true;
_1 = _6 as u32;
_1 = (-6274_i16) as u32;
_5 = !true;
_5 = _2 <= _2;
_8 = 73474930680452860569322834403990583820_u128;
_5 = RET < _1;
_1 = RET << RET;
_4 = 39_i8;
RET = _1;
match _4 {
0 => bb1,
1 => bb3,
39 => bb5,
_ => bb4
}
}
bb3 = {
RET = _1;
_1 = !RET;
_4 = '\u{45f0e}' as i8;
RET = 11060104291210286402_u64 as u32;
RET = _1;
RET = 678592863_i32 as u32;
RET = _2 as u32;
RET = !_1;
_5 = !false;
_4 = 14729_i16 as i8;
_8 = !166282310400961501845760752410927171116_u128;
_1 = RET ^ RET;
RET = !_1;
_3 = [12050437675534625952_usize,6_usize,1_usize,12419905646956703197_usize,4314545130186776681_usize,11234436240416650025_usize,7054049997393638074_usize];
_6 = _1 as f32;
_9 = _2 as f64;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_3 = [11471496063758454100_usize,10210210732900643648_usize,3_usize,2828513758500485699_usize,3_usize,11928593542344251986_usize,1328076413815330161_usize];
_9 = 141057268469502850036241048815801581264_i128 as f64;
_11 = _5;
_3 = [13009704598368984444_usize,1_usize,11804950624449350833_usize,10645236375676810286_usize,6_usize,6948896636970507217_usize,6_usize];
RET = 15453590959073899888_u64 as u32;
_11 = _5;
RET = _1 >> _2;
_8 = !27515774329417684641147235640610066944_u128;
_15 = 7269_u16 as i32;
_17 = _4 as isize;
_1 = RET * RET;
_1 = RET * RET;
_3 = [16574157193972020637_usize,6648449469126235902_usize,0_usize,8379236683030897480_usize,5_usize,1_usize,5_usize];
RET = _1;
_9 = (-140258595435602239023228561176608303091_i128) as f64;
_18.0.1.3 = (-16292_i16);
_8 = 84987616864015495086829762244933347656_u128;
_3 = [5_usize,2_usize,12017535656696064450_usize,1_usize,5_usize,4_usize,5034705348050229385_usize];
_9 = 16805364453441402184_u64 as f64;
Goto(bb6)
}
bb6 = {
_14 = 10899_u16 as isize;
_17 = _6 as isize;
_18.0.1.2 = (_1,);
_18.1 = -_17;
_2 = _18.1;
_18.0.0.2 = 240_u8 >> RET;
_18.0.2.2 = _15 as u8;
_1 = 51478_u16 as u32;
Call(_18.0.0.3 = fn6(RET, _18.0.1.2.0, _4, _18.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_18.0.1.0 = !_18.0.2.2;
Goto(bb8)
}
bb8 = {
_1 = !RET;
_12 = Adt47::Variant2 { fld0: 31066_u16,fld1: _18.0.1.2 };
_18.2 = !_18.0.2.2;
place!(Field::<u16>(Variant(_12, 2), 0)) = 25709_u16 >> _17;
SetDiscriminant(_12, 1);
_16 = _3;
_14 = _4 as isize;
_18.0.0.3 = [_8,_8];
_9 = _15 as f64;
_21 = !_18.0.1.2.0;
_18.1 = _2 + _2;
place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)).0.1 = !_11;
Call(_4 = fn7(_16, RET, _6, _18.0.1.2.0), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)).0 = (_15, _5, _18.2, _18.0.0.3);
_18.0.0.3 = Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.3;
_18.0.2.3 = [_8,_8];
_18.0.0.2 = _18.2 ^ _18.0.2.2;
RET = _21;
_22 = !_11;
_18.0.2.0 = -Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.0;
_18.0.0 = Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0;
_3 = [18055492668128658489_usize,3626153939576321446_usize,11088205207739114220_usize,6_usize,3149391486601269820_usize,5_usize,5_usize];
place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)).0.0 = !_18.0.2.0;
_4 = !(-59_i8);
_16 = [5378663264154380744_usize,16095348734597468827_usize,1222469016882403544_usize,1_usize,0_usize,1_usize,8532832958324090599_usize];
_18.0.0.0 = 151418515304307109499795595976342386553_i128 as i32;
place!(Field::<*mut i8>(Variant(_12, 1), 3)) = core::ptr::addr_of_mut!(_4);
_29.fld0.3 = (Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.2, _3, _18.0.1.2, _18.0.1.3);
_20 = '\u{35f5d}';
_11 = Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.1 | _22;
_29.fld0.4 = -_6;
_29.fld0.0 = _18.0.1.0;
_14 = _29.fld0.4 as isize;
Call(place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)) = fn8(_16, _29.fld0.3, _22, _29.fld0.3, _18.0.0, _29.fld0.3.2.0, _18.0.2.3, _3, _29.fld0.3.3, _29.fld0.3.2, _1, _8), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_29.fld1.0 = Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.2 as i16;
_33.0.0.2 = _18.0.1.2.0 as u8;
_35.2.3 = Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.3;
_33.0.0.1 = !_22;
_35.1 = _29.fld0.3;
_29.fld1.0 = !_18.0.1.3;
_35.0.2 = _29.fld0.0 ^ _33.0.0.2;
_18.0.2.0 = _35.1.3 as i32;
_35.1.2 = (_1,);
_21 = _35.1.2.0;
_18.0.2.1 = _11;
_8 = 275216072841733092565647625311693613330_u128;
_29.fld0.3.0 = !_33.0.0.2;
_9 = RET as f64;
_34 = !_14;
_28 = !_14;
Goto(bb11)
}
bb11 = {
_33.0.2.2 = _29.fld0.0;
_29.fld0.1.0 = 2869655426979143007_i64 as isize;
place!(Field::<*mut i8>(Variant(_12, 1), 3)) = core::ptr::addr_of_mut!(_4);
_18.0.2.2 = !Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4).0.2;
_35.0.3 = [_8,_8];
_32 = _29.fld0.3.3 as isize;
place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)).0.1 = _21 < _1;
place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)).0.1 = !_18.0.2.1;
Goto(bb12)
}
bb12 = {
_36 = _18.0.2.0 as u32;
_33.1 = _14 & _14;
_29.fld2.3 = -_35.1.3;
_33.0.0.3 = [_8,_8];
_18.0.2.2 = _15 as u8;
_16 = [0_usize,11857780703480181266_usize,6256640375698069202_usize,4_usize,16044359542972319427_usize,3_usize,422176038929823736_usize];
_20 = '\u{d62b9}';
_16 = [9918707407710591921_usize,2_usize,6_usize,11695137310818875498_usize,7896857770849895934_usize,4_usize,3_usize];
_5 = !_18.0.2.1;
_22 = !_11;
place!(Field::<((i32, bool, u8, [u128; 2]),)>(Variant(_12, 1), 4)).0.0 = _18.0.2.0 - _18.0.0.0;
_35.2 = _18.0.2;
_29.fld0.3.3 = !_29.fld1.0;
_33.0.1.2 = _29.fld0.3.2;
_33.0.1.0 = _18.0.2.2 * _35.0.2;
_27 = [_20,_20,_20];
_33.0.1.3 = _18.0.0.0 as i16;
_17 = _33.1 << _1;
_20 = '\u{42107}';
place!(Field::<*mut i8>(Variant(_12, 1), 3)) = core::ptr::addr_of_mut!(_4);
_18.0 = (_35.2, _35.1, _35.2);
_12 = Adt47::Variant2 { fld0: 16144_u16,fld1: _33.0.1.2 };
place!(Field::<(u32,)>(Variant(_12, 2), 1)).0 = !_33.0.1.2.0;
_26 = &place!(Field::<u16>(Variant(_12, 2), 0));
_35.1 = _29.fld0.3;
_35.1.3 = _33.0.1.3;
Goto(bb13)
}
bb13 = {
_25 = 8054379510461368683_i64;
_3 = [2_usize,12140448537517528298_usize,4_usize,11797585079247050965_usize,10029011615445218846_usize,5_usize,16510712804465274045_usize];
Goto(bb14)
}
bb14 = {
_4 = (-36_i8);
_43.0.1 = !_11;
_43.0 = (_35.2.0, _18.0.2.1, _33.0.1.0, _35.0.3);
_38 = core::ptr::addr_of_mut!(_4);
_2 = _28 * _17;
_43 = (_18.0.0,);
_43.0 = _18.0.0;
_17 = -_2;
_41.fld2 = core::ptr::addr_of!(_29.fld1);
_29.fld0.3 = (_33.0.0.2, _18.0.1.1, Field::<(u32,)>(Variant(_12, 2), 1), _18.0.1.3);
_33 = (_18.0, _2, _18.0.0.2);
_35 = _18.0;
_23 = _29.fld0.3.0;
_35.2.0 = 48549_u16 as i32;
_15 = _18.0.2.0 * _18.0.0.0;
_29.fld2.1 = [5_usize,5195763919062409657_usize,2_usize,9190631701596647239_usize,5_usize,9907398862476469289_usize,1_usize];
_13 = _41.fld2;
_29.fld0.4 = -_6;
_43.0 = (_33.0.2.0, _33.0.0.1, _33.0.2.2, _18.0.0.3);
_33.2 = _18.0.1.0;
_18.0.0.3 = _35.0.3;
_35.1.0 = !_29.fld0.3.0;
_29.fld0.1.1 = [_20,_20,_20];
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(5_usize, 23_usize, Move(_23), 33_usize, Move(_33), 11_usize, Move(_11), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(5_usize, 3_usize, Move(_3), 43_usize, Move(_43), 35_usize, Move(_35), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(5_usize, 21_usize, Move(_21), 25_usize, Move(_25), 28_usize, Move(_28), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: u32,mut _2: u32,mut _3: i8,mut _4: isize) -> [u128; 2] {
mir! {
type RET = [u128; 2];
let _5: Adt51;
let _6: [u128; 2];
let _7: isize;
let _8: Adt50;
let _9: *mut [i8; 5];
let _10: isize;
let _11: f64;
let _12: f32;
let _13: u8;
let _14: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _15: bool;
let _16: ();
let _17: ();
{
RET = [82573623596223204524819525293127385015_u128,74568705397855494265966130054759944303_u128];
_2 = '\u{10931c}' as u32;
_4 = 45_isize & 1_isize;
RET = [285930719265307963003282503978766367233_u128,44082004763103024520085463091576158524_u128];
RET = [50149163507430905256808575989699604640_u128,107035245160817346524099653704373707256_u128];
RET = [289055568681887864631306534870169301151_u128,272788938111902133691380246406619751527_u128];
_4 = (-43_isize);
_4 = (-147136731949561353975325870753416091152_i128) as isize;
_2 = !_1;
_1 = _2;
RET = [214160848144474621812853868473673999202_u128,199845058785478079087925085251809322224_u128];
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
39 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = _2;
RET = [24585926237789096409705182354955982002_u128,81567983453703727975265407373451839080_u128];
Call(_2 = core::intrinsics::bswap(_1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_1 = 4639_u16 as u32;
RET = [269187171644737131513416720587390132284_u128,53673135384542115645337146116648705802_u128];
_4 = -(-38_isize);
RET = [123695465796369958347346572824706460384_u128,13998190228323821059973222848619513236_u128];
RET = [225985251353305273045778739476428528663_u128,126854830508953492104533396340432500920_u128];
_1 = 201_u8 as u32;
_1 = _2 + _2;
_2 = _1 & _1;
_7 = 145018303_i32 as isize;
_4 = _7 & _7;
Goto(bb11)
}
bb11 = {
_10 = _4;
_6 = [202918068964529023721704677377566456156_u128,197782511926708354748095266731210321447_u128];
_3 = 27_i8 & 111_i8;
_6 = RET;
_2 = _1;
_7 = false as isize;
RET = [79887005345618165915027727377139234745_u128,143708731605357406310274571048504837535_u128];
_1 = _2;
_11 = (-5955_i16) as f64;
_7 = _10;
Goto(bb12)
}
bb12 = {
_11 = 63928288478091540853218041963625793673_u128 as f64;
_12 = (-23356874292165669523516074683448453956_i128) as f32;
_2 = !_1;
_10 = 31097_i16 as isize;
_3 = 49_i8;
_12 = (-1762182243182623759_i64) as f32;
_13 = 183_u8;
_12 = 6_usize as f32;
RET = [176204697196161262784065137517899528832_u128,196184843395851315716004733701580959936_u128];
_4 = _10;
RET = [329781492954785589823237744866771926210_u128,173687679977036886163604388555687768298_u128];
match _13 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
183 => bb19,
_ => bb18
}
}
bb13 = {
_10 = _4;
_6 = [202918068964529023721704677377566456156_u128,197782511926708354748095266731210321447_u128];
_3 = 27_i8 & 111_i8;
_6 = RET;
_2 = _1;
_7 = false as isize;
RET = [79887005345618165915027727377139234745_u128,143708731605357406310274571048504837535_u128];
_1 = _2;
_11 = (-5955_i16) as f64;
_7 = _10;
Goto(bb12)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_14.0.1.2.0 = _2;
_14.0.0.1 = !false;
_7 = -_10;
_15 = !_14.0.0.1;
Goto(bb20)
}
bb20 = {
Call(_16 = dump_var(6_usize, 2_usize, Move(_2), 13_usize, Move(_13), 10_usize, Move(_10), 7_usize, Move(_7)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [usize; 7],mut _2: u32,mut _3: f32,mut _4: u32) -> i8 {
mir! {
type RET = i8;
let _5: char;
let _6: *const (i16, u32, u8);
let _7: ([u128; 2],);
let _8: [i8; 5];
let _9: (i32, bool, u8, [u128; 2]);
let _10: char;
let _11: [i8; 5];
let _12: f64;
let _13: &'static u16;
let _14: Adt51;
let _15: [char; 3];
let _16: f32;
let _17: u8;
let _18: *const i128;
let _19: u32;
let _20: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _21: isize;
let _22: isize;
let _23: [i8; 5];
let _24: isize;
let _25: ((i32, bool, u8, [u128; 2]),);
let _26: u16;
let _27: (u32,);
let _28: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _29: isize;
let _30: ();
let _31: ();
{
_2 = !_4;
RET = 31687_i16 as i8;
RET = (-54_i8) + (-35_i8);
RET = (-10_i8) >> _2;
_4 = !_2;
_2 = _4;
_2 = _4 ^ _4;
RET = !(-96_i8);
_2 = !_4;
_1 = [2_usize,11559608516331354091_usize,2_usize,10314862076168490904_usize,4104839560026943367_usize,7_usize,5_usize];
_3 = 227147610055803313825079991725051315868_u128 as f32;
RET = (-19215_i16) as i8;
RET = 56643397811488333747977738499341460488_i128 as i8;
_3 = 17754_u16 as f32;
_3 = 293038378306043341693670505493647705614_u128 as f32;
_3 = 4_usize as f32;
_4 = _2;
_2 = _4 >> _4;
_2 = !_4;
RET = _4 as i8;
_2 = 1615109877_i32 as u32;
RET = _3 as i8;
_7.0 = [107445826109624316305432702879684736160_u128,108512930747366887888849778687133478341_u128];
_1 = [2_usize,2_usize,8479171456040569322_usize,13924305059144842397_usize,7026786826482420548_usize,3_usize,2061122208135110640_usize];
_2 = _4;
Goto(bb1)
}
bb1 = {
_2 = _4;
Goto(bb2)
}
bb2 = {
RET = (-74_i8);
_7.0 = [69818548522004934648072688960715291168_u128,136356523841774300835951153981960666783_u128];
_8 = [RET,RET,RET,RET,RET];
_3 = 189_u8 as f32;
RET = 33973_u16 as i8;
RET = 9534243731271045274_u64 as i8;
_5 = '\u{18d6b}';
_2 = RET as u32;
RET = !69_i8;
_8 = [RET,RET,RET,RET,RET];
RET = _4 as i8;
RET = (-4332_i16) as i8;
_9.0 = (-1954634849_i32);
_1 = [7045549129943401357_usize,17448251397366903831_usize,3_usize,6_usize,2_usize,6221706371789907991_usize,12437446402887005377_usize];
_3 = 207_u8 as f32;
_9.0 = !103924717_i32;
_9 = ((-1363000435_i32), true, 99_u8, _7.0);
_9.2 = (-11744_i16) as u8;
_9.3 = [305318846434651378170919383248010664429_u128,106482310134096585110016499888442694505_u128];
_1 = [14227679521091878782_usize,318339627374017183_usize,3_usize,3297550956251012184_usize,9876727876065000328_usize,2_usize,1_usize];
_9.1 = _9.0 <= _9.0;
_1 = [6859816623258769380_usize,14756793097802601015_usize,0_usize,18270032738278142578_usize,8953289733431829265_usize,693478057847392281_usize,2_usize];
Goto(bb3)
}
bb3 = {
_2 = 34651_u16 as u32;
_11 = _8;
Goto(bb4)
}
bb4 = {
_1 = [4_usize,2_usize,5_usize,5_usize,6_usize,6068798385699283176_usize,11920560591445236808_usize];
_10 = _5;
_10 = _5;
_9.2 = 236_u8 << _4;
_9.1 = !true;
_11 = _8;
_9.2 = 421939894123847588_i64 as u8;
_7 = (_9.3,);
_9.3 = _7.0;
_12 = RET as f64;
_9.3 = [196534152640103174792117297983720294141_u128,254521260500956273919693839963774116446_u128];
_9.1 = false;
_9.1 = true;
Call(_9.0 = core::intrinsics::transmute(_4), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_9.2 = 27_u8 * 151_u8;
RET = -(-88_i8);
_12 = (-9223372036854775808_isize) as f64;
_9.0 = (-546320769_i32);
_1 = [11515189477493112494_usize,3142512234214229263_usize,13918344908400850217_usize,3_usize,14293811584867170144_usize,1_usize,5148154722622061893_usize];
_7 = (_9.3,);
_11 = _8;
_7 = (_9.3,);
_7 = (_9.3,);
_9.3 = _7.0;
_9.2 = !171_u8;
_9.3 = [96863168282101934093640456037724774159_u128,162184586962631164297429122904374966027_u128];
_5 = _10;
_11 = _8;
_9.2 = 214_u8 | 12_u8;
_9.0 = (-1598554535_i32);
match _9.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463463374607430169656921 => bb11,
_ => bb10
}
}
bb6 = {
_1 = [4_usize,2_usize,5_usize,5_usize,6_usize,6068798385699283176_usize,11920560591445236808_usize];
_10 = _5;
_10 = _5;
_9.2 = 236_u8 << _4;
_9.1 = !true;
_11 = _8;
_9.2 = 421939894123847588_i64 as u8;
_7 = (_9.3,);
_9.3 = _7.0;
_12 = RET as f64;
_9.3 = [196534152640103174792117297983720294141_u128,254521260500956273919693839963774116446_u128];
_9.1 = false;
_9.1 = true;
Call(_9.0 = core::intrinsics::transmute(_4), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_2 = 34651_u16 as u32;
_11 = _8;
Goto(bb4)
}
bb8 = {
RET = (-74_i8);
_7.0 = [69818548522004934648072688960715291168_u128,136356523841774300835951153981960666783_u128];
_8 = [RET,RET,RET,RET,RET];
_3 = 189_u8 as f32;
RET = 33973_u16 as i8;
RET = 9534243731271045274_u64 as i8;
_5 = '\u{18d6b}';
_2 = RET as u32;
RET = !69_i8;
_8 = [RET,RET,RET,RET,RET];
RET = _4 as i8;
RET = (-4332_i16) as i8;
_9.0 = (-1954634849_i32);
_1 = [7045549129943401357_usize,17448251397366903831_usize,3_usize,6_usize,2_usize,6221706371789907991_usize,12437446402887005377_usize];
_3 = 207_u8 as f32;
_9.0 = !103924717_i32;
_9 = ((-1363000435_i32), true, 99_u8, _7.0);
_9.2 = (-11744_i16) as u8;
_9.3 = [305318846434651378170919383248010664429_u128,106482310134096585110016499888442694505_u128];
_1 = [14227679521091878782_usize,318339627374017183_usize,3_usize,3297550956251012184_usize,9876727876065000328_usize,2_usize,1_usize];
_9.1 = _9.0 <= _9.0;
_1 = [6859816623258769380_usize,14756793097802601015_usize,0_usize,18270032738278142578_usize,8953289733431829265_usize,693478057847392281_usize,2_usize];
Goto(bb3)
}
bb9 = {
_2 = _4;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_1 = [15774141012371649524_usize,3_usize,3_usize,4001679467050582247_usize,7_usize,0_usize,0_usize];
_12 = _3 as f64;
_4 = _2;
RET = 76_i8 * (-1_i8);
_9.0 = 737225537_i32 + 990803689_i32;
_12 = 30909_u16 as f64;
_9.2 = !239_u8;
_9 = (870099918_i32, true, 101_u8, _7.0);
_10 = _5;
_11 = [RET,RET,RET,RET,RET];
_15 = [_5,_5,_10];
_10 = _5;
_15 = [_5,_10,_10];
_16 = -_3;
_12 = (-94372872694721879152189471300891960036_i128) as f64;
_12 = 22134_u16 as f64;
_1 = [10850355165362183706_usize,18081044908354709550_usize,2_usize,2_usize,1_usize,7974245085616848737_usize,17773752981734978035_usize];
_3 = _12 as f32;
_10 = _5;
_9.3 = _7.0;
_11 = [RET,RET,RET,RET,RET];
_11 = [RET,RET,RET,RET,RET];
RET = -(-4_i8);
_8 = [RET,RET,RET,RET,RET];
_9.1 = _9.0 <= _9.0;
_3 = _16;
_1 = [6475175952356781409_usize,4_usize,5460909230289094812_usize,17247873748564089032_usize,4_usize,6_usize,3807456604951433559_usize];
_12 = _16 as f64;
Goto(bb12)
}
bb12 = {
_20.0.2 = (_9.0, _9.1, _9.2, _7.0);
_20.0.1.2 = (_2,);
_9.1 = !_20.0.2.1;
_9.3 = [33111829583492190210425492709086297928_u128,218256370868040081233744346062827383831_u128];
_8 = _11;
_9.1 = _20.0.2.1 & _20.0.2.1;
_20.0.0 = (_9.0, _20.0.2.1, _20.0.2.2, _9.3);
_10 = _5;
_3 = _16;
RET = -102_i8;
_17 = 79731523553115704440181905934980561390_i128 as u8;
Goto(bb13)
}
bb13 = {
_15 = [_5,_5,_10];
_20.0.1.2.0 = _2 & _4;
_20.0.1.0 = !_9.2;
_20.1 = !(-9223372036854775808_isize);
_20.0.0.2 = !_9.2;
_20.0.0.2 = !_9.2;
_20.0.1.3 = !(-26630_i16);
_19 = _2 - _20.0.1.2.0;
_20.0.1.2.0 = _19;
_20.0.1.2.0 = _19 << _20.0.0.2;
_20.0.2.1 = _9.1;
_20.0.0.0 = _20.0.2.0 | _20.0.2.0;
_20.0.2.0 = _20.0.0.0;
_22 = !_20.1;
_10 = _5;
_20.0.1.3 = 9176_i16 + (-4498_i16);
_20.0.1.3 = 18191_i16 ^ (-23730_i16);
_4 = !_20.0.1.2.0;
Goto(bb14)
}
bb14 = {
_23 = [RET,RET,RET,RET,RET];
_7.0 = [305091772855175443390470865304121940702_u128,340085476784041447935949181180254951665_u128];
_20.0.1.1 = [16810628249659934763_usize,0_usize,1_usize,2_usize,0_usize,7_usize,1_usize];
_21 = !_20.1;
_26 = 58594_u16;
_25.0.3 = _7.0;
_24 = _21;
_20.0.2.2 = _26 as u8;
_20.0.1.2 = (_4,);
_11 = _23;
_7.0 = [134891787405217120888048772808215085729_u128,221480092765967013678743164206314421635_u128];
_17 = _20.0.0.2;
_1 = [3628252025980027290_usize,1_usize,0_usize,2_usize,2_usize,285439789839252025_usize,3_usize];
_20.0.2 = (_20.0.0.0, _9.1, _20.0.0.2, _25.0.3);
_25.0.0 = _20.0.2.0;
_20.0.1.1 = [11900672977268710308_usize,10244185324609847769_usize,8444521374496101315_usize,3613034781171852930_usize,2_usize,4_usize,10567908375855648725_usize];
_20.2 = 11749802142766051270_usize as u8;
_20.0.1.2 = (_4,);
_12 = 406978151924673813_u64 as f64;
_28.0.2.3 = _9.3;
_28.0.0.3 = [49713747179176355848039464303571904106_u128,210299978052955577352421558478563618165_u128];
_28.2 = !_9.2;
_28.0.2.2 = _28.2;
_28.0.2.0 = _25.0.0 | _20.0.0.0;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(7_usize, 7_usize, Move(_7), 20_usize, Move(_20), 5_usize, Move(_5), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(7_usize, 11_usize, Move(_11), 17_usize, Move(_17), 26_usize, Move(_26), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(7_usize, 22_usize, Move(_22), 31_usize, _31, 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [usize; 7],mut _2: (u8, [usize; 7], (u32,), i16),mut _3: bool,mut _4: (u8, [usize; 7], (u32,), i16),mut _5: (i32, bool, u8, [u128; 2]),mut _6: u32,mut _7: [u128; 2],mut _8: [usize; 7],mut _9: i16,mut _10: (u32,),mut _11: u32,mut _12: u128) -> ((i32, bool, u8, [u128; 2]),) {
mir! {
type RET = ((i32, bool, u8, [u128; 2]),);
let _13: isize;
let _14: Adt42;
let _15: ([u128; 2],);
let _16: Adt48;
let _17: Adt56;
let _18: [usize; 7];
let _19: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32);
let _20: &'static u16;
let _21: f64;
let _22: *const (i16, u32, u8);
let _23: (u8, [usize; 7], (u32,), i16);
let _24: u32;
let _25: [usize; 2];
let _26: [u128; 2];
let _27: *mut i8;
let _28: u16;
let _29: u16;
let _30: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _31: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32);
let _32: Adt57;
let _33: f32;
let _34: char;
let _35: ();
let _36: ();
{
_4.0 = _5.2 & _5.2;
RET.0.2 = (-72_i8) as u8;
RET = (_5,);
RET.0.0 = _5.0 << _4.2.0;
RET.0 = _5;
_1 = _4.1;
_5.3 = [_12,_12];
_6 = 5133_u16 as u32;
_4.1 = _8;
_6 = !_10.0;
_3 = RET.0.2 != _5.2;
_5 = RET.0;
RET.0.3 = [_12,_12];
_13 = (-100_isize);
RET.0.2 = (-2203397747369955091_i64) as u8;
RET.0.0 = _5.2 as i32;
_15.0 = [_12,_12];
RET.0.2 = 16964290760358036788_usize as u8;
_5.2 = _13 as u8;
RET = (_5,);
_4.2 = _2.2;
_4 = _2;
RET.0.1 = _9 != _2.3;
_1 = [5_usize,9772632833192745918_usize,9752879956222578422_usize,1_usize,7_usize,1168792901513686188_usize,7595983315987805272_usize];
Goto(bb1)
}
bb1 = {
_15 = (RET.0.3,);
RET = (_5,);
_1 = [16179207024043106731_usize,18419986485204337613_usize,6_usize,0_usize,12145361158751360788_usize,5_usize,17013200413148670885_usize];
_4.1 = [6_usize,7_usize,15598218501972314508_usize,5_usize,4_usize,4_usize,0_usize];
_3 = RET.0.1 ^ RET.0.1;
_19.1.1 = ['\u{95df6}','\u{f98fe}','\u{cdd78}'];
_19.3.2 = (_4.2.0,);
RET.0 = (_5.0, _5.1, _2.0, _7);
_19.3.2 = _10;
_4.2.0 = !_2.2.0;
_19.1.0 = _13 ^ _13;
_18 = _8;
RET = (_5,);
match _2.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768195164 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET.0.1 = !_3;
_3 = !RET.0.1;
RET.0.1 = _5.1;
RET.0.3 = [_12,_12];
_1 = [13522142431407642800_usize,0_usize,1_usize,0_usize,5_usize,3800453879580233296_usize,771952901971690652_usize];
_21 = 150675289702420369132881683075470020584_i128 as f64;
_19.3.2 = _2.2;
_19.3.1 = [6_usize,6_usize,2_usize,12711050498112580476_usize,16351143776696904640_usize,407071684781378393_usize,6_usize];
_8 = [2_usize,134241057909584909_usize,14501518957444484879_usize,10372639194814576323_usize,4_usize,0_usize,3132176514303906490_usize];
_5 = (RET.0.0, RET.0.1, _2.0, RET.0.3);
_5.1 = !_3;
RET.0.3 = _7;
RET.0.3 = _7;
_24 = _2.0 as u32;
_18 = _19.3.1;
_4.1 = [2_usize,6_usize,16246866167316547584_usize,7_usize,10426426494410059241_usize,18206163829620015248_usize,8587790865905961548_usize];
RET.0.1 = _3 ^ _5.1;
RET.0.2 = _19.1.0 as u8;
_2.0 = RET.0.2 << _4.0;
RET.0.1 = !_3;
match _9 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463463374607431768195164 => bb13,
_ => bb12
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_15 = (RET.0.3,);
RET = (_5,);
_1 = [16179207024043106731_usize,18419986485204337613_usize,6_usize,0_usize,12145361158751360788_usize,5_usize,17013200413148670885_usize];
_4.1 = [6_usize,7_usize,15598218501972314508_usize,5_usize,4_usize,4_usize,0_usize];
_3 = RET.0.1 ^ RET.0.1;
_19.1.1 = ['\u{95df6}','\u{f98fe}','\u{cdd78}'];
_19.3.2 = (_4.2.0,);
RET.0 = (_5.0, _5.1, _2.0, _7);
_19.3.2 = _10;
_4.2.0 = !_2.2.0;
_19.1.0 = _13 ^ _13;
_18 = _8;
RET = (_5,);
match _2.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768195164 => bb8,
_ => bb7
}
}
bb12 = {
Return()
}
bb13 = {
_11 = _6 << _10.0;
_19.3.3 = _4.3 * _9;
_23.2 = (_11,);
match _12 {
0 => bb3,
1 => bb2,
84987616864015495086829762244933347656 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_7 = [_12,_12];
_19.1.1 = ['\u{8c8f}','\u{1cc43}','\u{80129}'];
_19.4 = _21 as f32;
_28 = 32048_u16 + 52275_u16;
_2.3 = _10.0 as i16;
_4.1 = [7121532473324168771_usize,7_usize,3_usize,920645062810822965_usize,5_usize,18285454831667079314_usize,14180939798108519960_usize];
_19.3.2 = (_24,);
_20 = &_28;
_5.0 = RET.0.0 ^ RET.0.0;
_30.1 = _19.4 as isize;
_30.0.2.1 = _19.1.0 >= _19.1.0;
_11 = !_2.2.0;
_4.3 = _19.3.3;
_25 = [7_usize,0_usize];
_5.3 = [_12,_12];
_23 = (_2.0, _19.3.1, _4.2, _2.3);
_19.1.3 = -_5.0;
_30.0.0 = (_19.1.3, RET.0.1, _2.0, _15.0);
_30.0.0.3 = _5.3;
_26 = _15.0;
_31.3.1 = [4_usize,4_usize,414475078732757880_usize,4_usize,2142367948238013686_usize,1205922559678452441_usize,11139736494104000519_usize];
_30.0.1.2 = (_6,);
Goto(bb16)
}
bb16 = {
Call(_35 = dump_var(8_usize, 7_usize, Move(_7), 3_usize, Move(_3), 11_usize, Move(_11), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(8_usize, 28_usize, Move(_28), 4_usize, Move(_4), 25_usize, Move(_25), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(8_usize, 23_usize, Move(_23), 26_usize, Move(_26), 36_usize, _36, 36_usize, _36), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: u32,mut _3: isize,mut _4: u32) -> i32 {
mir! {
type RET = i32;
let _5: u128;
let _6: [usize; 7];
let _7: u8;
let _8: i64;
let _9: f64;
let _10: isize;
let _11: Adt56;
let _12: char;
let _13: (i16, u32, u8);
let _14: char;
let _15: (i32, bool, u8, [u128; 2]);
let _16: (u32,);
let _17: bool;
let _18: char;
let _19: Adt50;
let _20: (i16, u32, u8);
let _21: isize;
let _22: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _23: ();
let _24: ();
{
_3 = _1 - _1;
_1 = _3;
RET = (-771517774_i32);
_4 = _2;
RET = (-1037957549_i32) ^ 1775515827_i32;
_3 = _1;
_1 = _3;
_3 = _1 & _1;
_1 = _3 | _3;
_3 = _1 << _1;
RET = true as i32;
_5 = 311501715021905448892701874110216776073_u128 << _2;
_4 = !_2;
_2 = !_4;
_2 = _4 << _3;
_1 = -_3;
_5 = 99_u8 as u128;
_3 = -_1;
_5 = 197387488105842598466569210116306127581_u128 & 143378636766509157968416450389912580012_u128;
_5 = !150269633437133256153855670300358461010_u128;
RET = 49759_u16 as i32;
RET = 1127007019_i32;
_7 = !150_u8;
RET = 316893297_i32;
Call(_4 = core::intrinsics::bswap(_2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = !_2;
RET = !1198538150_i32;
_2 = (-5203160174052176928_i64) as u32;
_5 = !196338883804479156283617254581306049147_u128;
_4 = '\u{7d790}' as u32;
_2 = !_4;
_5 = 325590626700353896833105703558788069259_u128 * 176465402610401394582926440210634424137_u128;
_1 = _3 | _3;
RET = 1582506804_i32 | (-517560959_i32);
_6 = [9930977465822455517_usize,12060377497036610239_usize,5_usize,10034263999230855316_usize,0_usize,13111269291155907628_usize,8107321376765863176_usize];
_3 = -_1;
RET = (-1361162832_i32) * 778600511_i32;
_1 = _3 << _3;
_2 = _4 & _4;
_4 = !_2;
_5 = !40306765841763620908538033406353404932_u128;
_6 = [6_usize,1686305310889121125_usize,2302391634975882157_usize,17037109002523302078_usize,2_usize,1190033687824853797_usize,20268090679803638_usize];
_6 = [3_usize,4_usize,4_usize,2_usize,3_usize,4_usize,12268549859617456131_usize];
_4 = 31743_u16 as u32;
RET = -(-983370796_i32);
Call(_4 = fn10(_1, _1, _3, _1, _1, _1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = 613779298_i32 & (-150982830_i32);
_1 = _3;
_6 = [1_usize,5_usize,3_usize,3_usize,12703886514149004347_usize,4_usize,9509001736828154451_usize];
_1 = _3;
_6 = [420868348561975658_usize,16520850626752701624_usize,7_usize,7_usize,17865054161657480724_usize,14122627280196859166_usize,7254849721041504586_usize];
RET = 48135075972964817681770428316577619646_i128 as i32;
_8 = (-5419305753073362541_i64);
_7 = 18388162223690930642_u64 as u8;
match _8 {
0 => bb3,
1 => bb4,
2 => bb5,
340282366920938463457955301678694848915 => bb7,
_ => bb6
}
}
bb3 = {
_4 = !_2;
RET = !1198538150_i32;
_2 = (-5203160174052176928_i64) as u32;
_5 = !196338883804479156283617254581306049147_u128;
_4 = '\u{7d790}' as u32;
_2 = !_4;
_5 = 325590626700353896833105703558788069259_u128 * 176465402610401394582926440210634424137_u128;
_1 = _3 | _3;
RET = 1582506804_i32 | (-517560959_i32);
_6 = [9930977465822455517_usize,12060377497036610239_usize,5_usize,10034263999230855316_usize,0_usize,13111269291155907628_usize,8107321376765863176_usize];
_3 = -_1;
RET = (-1361162832_i32) * 778600511_i32;
_1 = _3 << _3;
_2 = _4 & _4;
_4 = !_2;
_5 = !40306765841763620908538033406353404932_u128;
_6 = [6_usize,1686305310889121125_usize,2302391634975882157_usize,17037109002523302078_usize,2_usize,1190033687824853797_usize,20268090679803638_usize];
_6 = [3_usize,4_usize,4_usize,2_usize,3_usize,4_usize,12268549859617456131_usize];
_4 = 31743_u16 as u32;
RET = -(-983370796_i32);
Call(_4 = fn10(_1, _1, _3, _1, _1, _1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_3 = _1;
match _8 {
0 => bb3,
1 => bb2,
2 => bb8,
3 => bb9,
4 => bb10,
340282366920938463457955301678694848915 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_4 = !_2;
RET = !1198538150_i32;
_2 = (-5203160174052176928_i64) as u32;
_5 = !196338883804479156283617254581306049147_u128;
_4 = '\u{7d790}' as u32;
_2 = !_4;
_5 = 325590626700353896833105703558788069259_u128 * 176465402610401394582926440210634424137_u128;
_1 = _3 | _3;
RET = 1582506804_i32 | (-517560959_i32);
_6 = [9930977465822455517_usize,12060377497036610239_usize,5_usize,10034263999230855316_usize,0_usize,13111269291155907628_usize,8107321376765863176_usize];
_3 = -_1;
RET = (-1361162832_i32) * 778600511_i32;
_1 = _3 << _3;
_2 = _4 & _4;
_4 = !_2;
_5 = !40306765841763620908538033406353404932_u128;
_6 = [6_usize,1686305310889121125_usize,2302391634975882157_usize,17037109002523302078_usize,2_usize,1190033687824853797_usize,20268090679803638_usize];
_6 = [3_usize,4_usize,4_usize,2_usize,3_usize,4_usize,12268549859617456131_usize];
_4 = 31743_u16 as u32;
RET = -(-983370796_i32);
Call(_4 = fn10(_1, _1, _3, _1, _1, _1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
RET = -(-479121460_i32);
_13 = (12210_i16, _4, _7);
_13.1 = _4 + _4;
_9 = _5 as f64;
_6 = [5_usize,2910253082470508493_usize,7_usize,4664487132370321473_usize,10820512603957614207_usize,1728515004784223221_usize,2_usize];
_13 = ((-9168_i16), _4, _7);
RET = (-11761283925525690211506669310823626222_i128) as i32;
_7 = !_13.2;
_17 = !false;
_15.2 = _13.2 >> _3;
_15.0 = RET + RET;
_3 = !_1;
_12 = '\u{2142b}';
_14 = _12;
_3 = 14614407738690754773_usize as isize;
match _13.0 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb13,
6 => bb14,
340282366920938463463374607431768202288 => bb16,
_ => bb15
}
}
bb13 = {
_4 = !_2;
RET = !1198538150_i32;
_2 = (-5203160174052176928_i64) as u32;
_5 = !196338883804479156283617254581306049147_u128;
_4 = '\u{7d790}' as u32;
_2 = !_4;
_5 = 325590626700353896833105703558788069259_u128 * 176465402610401394582926440210634424137_u128;
_1 = _3 | _3;
RET = 1582506804_i32 | (-517560959_i32);
_6 = [9930977465822455517_usize,12060377497036610239_usize,5_usize,10034263999230855316_usize,0_usize,13111269291155907628_usize,8107321376765863176_usize];
_3 = -_1;
RET = (-1361162832_i32) * 778600511_i32;
_1 = _3 << _3;
_2 = _4 & _4;
_4 = !_2;
_5 = !40306765841763620908538033406353404932_u128;
_6 = [6_usize,1686305310889121125_usize,2302391634975882157_usize,17037109002523302078_usize,2_usize,1190033687824853797_usize,20268090679803638_usize];
_6 = [3_usize,4_usize,4_usize,2_usize,3_usize,4_usize,12268549859617456131_usize];
_4 = 31743_u16 as u32;
RET = -(-983370796_i32);
Call(_4 = fn10(_1, _1, _3, _1, _1, _1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_4 = !_2;
RET = !1198538150_i32;
_2 = (-5203160174052176928_i64) as u32;
_5 = !196338883804479156283617254581306049147_u128;
_4 = '\u{7d790}' as u32;
_2 = !_4;
_5 = 325590626700353896833105703558788069259_u128 * 176465402610401394582926440210634424137_u128;
_1 = _3 | _3;
RET = 1582506804_i32 | (-517560959_i32);
_6 = [9930977465822455517_usize,12060377497036610239_usize,5_usize,10034263999230855316_usize,0_usize,13111269291155907628_usize,8107321376765863176_usize];
_3 = -_1;
RET = (-1361162832_i32) * 778600511_i32;
_1 = _3 << _3;
_2 = _4 & _4;
_4 = !_2;
_5 = !40306765841763620908538033406353404932_u128;
_6 = [6_usize,1686305310889121125_usize,2302391634975882157_usize,17037109002523302078_usize,2_usize,1190033687824853797_usize,20268090679803638_usize];
_6 = [3_usize,4_usize,4_usize,2_usize,3_usize,4_usize,12268549859617456131_usize];
_4 = 31743_u16 as u32;
RET = -(-983370796_i32);
Call(_4 = fn10(_1, _1, _3, _1, _1, _1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
_16 = (_4,);
_15.1 = _17;
_5 = 233902929980689530135576055454307093389_u128 >> _1;
_13.1 = _4 << _13.0;
_15.0 = 1_usize as i32;
_7 = 6_usize as u8;
_2 = _16.0 ^ _4;
_15.2 = _7;
_21 = -_1;
_15.1 = _17 & _17;
_15.2 = _7 & _13.2;
_9 = (-10_i8) as f64;
_13 = (6560_i16, _2, _15.2);
Goto(bb17)
}
bb17 = {
Call(_23 = dump_var(9_usize, 7_usize, Move(_7), 6_usize, Move(_6), 12_usize, Move(_12), 21_usize, Move(_21)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_23 = dump_var(9_usize, 16_usize, Move(_16), 4_usize, Move(_4), 1_usize, Move(_1), 24_usize, _24), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize) -> u32 {
mir! {
type RET = u32;
let _8: ();
let _9: ();
{
RET = 2303811642_u32 << _1;
_5 = _2;
Goto(bb1)
}
bb1 = {
Call(_8 = dump_var(10_usize, 4_usize, Move(_4), 3_usize, Move(_3), 2_usize, Move(_2), 9_usize, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: i32,mut _2: bool,mut _3: isize,mut _4: u32,mut _5: (u32,),mut _6: u8,mut _7: isize,mut _8: u32,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: bool,mut _13: (i32, bool, u8, [u128; 2]),mut _14: isize,mut _15: bool,mut _16: bool) -> [u128; 2] {
mir! {
type RET = [u128; 2];
let _17: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _18: isize;
let _19: isize;
let _20: (i16, u32, u8);
let _21: char;
let _22: Adt42;
let _23: Adt45;
let _24: i16;
let _25: bool;
let _26: u64;
let _27: char;
let _28: [i8; 5];
let _29: i16;
let _30: u64;
let _31: i32;
let _32: f64;
let _33: f32;
let _34: i16;
let _35: ((i32, bool, u8, [u128; 2]),);
let _36: (i16, u32, u8);
let _37: isize;
let _38: Adt50;
let _39: f64;
let _40: isize;
let _41: i128;
let _42: ();
let _43: ();
{
_16 = _13.2 != _6;
_9 = '\u{b7ac}' as isize;
_7 = _11 << _14;
_11 = _14;
RET = [139575927609330781201073649866052739199_u128,31304590729720420844499800028054513097_u128];
_13.2 = _6 | _6;
_16 = !_12;
_8 = _5.0;
_8 = !_5.0;
_13 = (_1, _16, _6, RET);
_4 = !_5.0;
_17.0.0.2 = _1 as u8;
_17.0.0 = (_1, _15, _13.2, _13.3);
_1 = 39610_u16 as i32;
_17.0.1.2 = _5;
_17.0.1.3 = 16343_i16 ^ (-22997_i16);
_14 = -_10;
_17.0.1.2 = (_5.0,);
_17.0.1.2 = (_8,);
Goto(bb1)
}
bb1 = {
_17.0.1.0 = _17.0.0.2;
_18 = _7 << _13.2;
_13.1 = _17.0.0.1;
_14 = _18 | _18;
_17.0.2 = (_13.0, _15, _17.0.0.2, _13.3);
_8 = _4;
_13 = (_1, _17.0.2.1, _17.0.1.0, _17.0.0.3);
_7 = _18;
_20.2 = _17.0.0.2 & _13.2;
_2 = !_13.1;
_20.2 = _17.0.1.0 + _17.0.0.2;
_20.1 = !_8;
_15 = !_16;
_17.2 = _17.0.2.2;
_11 = 11897644966071148988_usize as isize;
_4 = _17.0.2.0 as u32;
_17.0.2.2 = _6 ^ _17.0.0.2;
_17.0.0 = (_17.0.2.0, _16, _20.2, _17.0.2.3);
_17.0.1.2.0 = 167452256595679943776751309209923129469_i128 as u32;
_17.0.2.0 = '\u{108b07}' as i32;
_20 = (_17.0.1.3, _5.0, _17.0.0.2);
_17.1 = _14 << _6;
_13 = (_1, _2, _20.2, RET);
_3 = _11;
_12 = !_15;
Goto(bb2)
}
bb2 = {
_20.1 = !_5.0;
_17.0.2 = (_17.0.0.0, _2, _6, RET);
_17.0.2 = (_1, _2, _20.2, RET);
_5 = (_8,);
_13.2 = _17.0.0.2;
_9 = _17.1 - _14;
_17.0.2.0 = _13.0 & _17.0.0.0;
_17.0.2.3 = _17.0.0.3;
_19 = _17.1 & _9;
_20 = (_17.0.1.3, _5.0, _17.0.1.0);
_19 = _8 as isize;
_17.0.2.3 = [234099636686013871547940592350283738457_u128,110514740259149480876567458684433220949_u128];
_13.1 = _12;
_7 = _17.0.2.2 as isize;
RET = [101575473508088033482973866093604546425_u128,35909093550273510178788859022093247041_u128];
Goto(bb3)
}
bb3 = {
_17.0.1.0 = !_13.2;
_13.3 = [266114585114719489550808468256881631845_u128,76095469952719665532678262620095204095_u128];
match _17.2 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
28 => bb10,
_ => bb9
}
}
bb4 = {
_20.1 = !_5.0;
_17.0.2 = (_17.0.0.0, _2, _6, RET);
_17.0.2 = (_1, _2, _20.2, RET);
_5 = (_8,);
_13.2 = _17.0.0.2;
_9 = _17.1 - _14;
_17.0.2.0 = _13.0 & _17.0.0.0;
_17.0.2.3 = _17.0.0.3;
_19 = _17.1 & _9;
_20 = (_17.0.1.3, _5.0, _17.0.1.0);
_19 = _8 as isize;
_17.0.2.3 = [234099636686013871547940592350283738457_u128,110514740259149480876567458684433220949_u128];
_13.1 = _12;
_7 = _17.0.2.2 as isize;
RET = [101575473508088033482973866093604546425_u128,35909093550273510178788859022093247041_u128];
Goto(bb3)
}
bb5 = {
_17.0.1.0 = _17.0.0.2;
_18 = _7 << _13.2;
_13.1 = _17.0.0.1;
_14 = _18 | _18;
_17.0.2 = (_13.0, _15, _17.0.0.2, _13.3);
_8 = _4;
_13 = (_1, _17.0.2.1, _17.0.1.0, _17.0.0.3);
_7 = _18;
_20.2 = _17.0.0.2 & _13.2;
_2 = !_13.1;
_20.2 = _17.0.1.0 + _17.0.0.2;
_20.1 = !_8;
_15 = !_16;
_17.2 = _17.0.2.2;
_11 = 11897644966071148988_usize as isize;
_4 = _17.0.2.0 as u32;
_17.0.2.2 = _6 ^ _17.0.0.2;
_17.0.0 = (_17.0.2.0, _16, _20.2, _17.0.2.3);
_17.0.1.2.0 = 167452256595679943776751309209923129469_i128 as u32;
_17.0.2.0 = '\u{108b07}' as i32;
_20 = (_17.0.1.3, _5.0, _17.0.0.2);
_17.1 = _14 << _6;
_13 = (_1, _2, _20.2, RET);
_3 = _11;
_12 = !_15;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_13 = (_1, _17.0.0.1, _17.0.2.2, _17.0.0.3);
_24 = _20.0 * _17.0.1.3;
_17.0.2.2 = _17.0.1.0;
RET = _13.3;
_19 = _17.1;
match _6 {
0 => bb8,
1 => bb4,
2 => bb9,
28 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_25 = !_12;
_17.0.2.2 = !_6;
_9 = _17.1;
_17.0.2 = (_13.0, _12, _17.2, RET);
_17.0.0.1 = _2;
_13.1 = _15;
_13 = _17.0.0;
_17.1 = _10;
_27 = '\u{33b0d}';
_17.0.1.3 = _20.0 ^ _24;
_17.0.1.2.0 = !_8;
_13.2 = _17.0.1.0 % _17.2;
_17.0.2 = (_17.0.0.0, _17.0.0.1, _17.0.1.0, _13.3);
_5.0 = _20.1 + _17.0.1.2.0;
RET = [4056204127155459705481013170500619464_u128,26425616736005811849589236361022604392_u128];
_19 = !_14;
_29 = _24;
_17.0.1.2 = (_5.0,);
_19 = _27 as isize;
_17.0.0.0 = !_13.0;
_2 = _17.0.0.1;
_11 = -_10;
_17.0.0 = _13;
_24 = _13.0 as i16;
_17.0.1.2 = (_5.0,);
_17.0.2 = (_13.0, _17.0.0.1, _17.0.1.0, RET);
_24 = 15165203700270758617_usize as i16;
match _17.2 {
28 => bb13,
_ => bb9
}
}
bb13 = {
_5.0 = _8;
_1 = -_17.0.2.0;
_20.2 = _17.0.2.2;
_17.0.1.1 = [5_usize,2_usize,3_usize,10983150781774023002_usize,4_usize,6_usize,6172453685149501553_usize];
_9 = _7 ^ _7;
_17.0.0.1 = !_15;
_27 = '\u{a9f5a}';
_26 = (-40_i8) as u64;
_17.0.1.3 = -_24;
_25 = _15;
_1 = 19952999100090232691859035152966919995_u128 as i32;
_15 = _13.1;
_9 = -_14;
_31 = !_13.0;
_15 = _17.0.0.1;
_21 = _27;
_17.0.2.1 = !_17.0.0.1;
_19 = _27 as isize;
_17.0.1.3 = _9 as i16;
_9 = _7 + _14;
_34 = 10656_u16 as i16;
_17.0.0 = (_31, _25, _17.0.2.2, RET);
_20.0 = _17.0.1.3;
Goto(bb14)
}
bb14 = {
_35.0.0 = _26 as i32;
_17.0.2.0 = (-4831793110746604717_i64) as i32;
_20.2 = _13.2 | _17.0.0.2;
_32 = 31756607298400590370905313726642377517_u128 as f64;
_17.0.1.2 = (_5.0,);
_17.0.2 = _13;
_5.0 = 2792_u16 as u32;
_34 = -_20.0;
_35.0.2 = !_17.0.2.2;
_25 = _2;
_35.0.3 = [203253403886826293850189040138013028522_u128,187836506965179677294884799999840894162_u128];
_17.0.1.3 = _34 & _20.0;
_16 = _2 >= _2;
_35.0.1 = !_16;
_13.2 = _17.0.0.2;
_7 = -_9;
_36.2 = _17.0.2.2;
_37 = _14 << _9;
_28 = [39_i8,92_i8,97_i8,46_i8,(-72_i8)];
_21 = _27;
_17.1 = _37 + _9;
_24 = _17.0.1.3 + _17.0.1.3;
_27 = _21;
_32 = 1321445902860062684_usize as f64;
_36 = (_17.0.1.3, _4, _20.2);
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(11_usize, 9_usize, Move(_9), 7_usize, Move(_7), 2_usize, Move(_2), 27_usize, Move(_27)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(11_usize, 35_usize, Move(_35), 12_usize, Move(_12), 19_usize, Move(_19), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(11_usize, 17_usize, Move(_17), 6_usize, Move(_6), 31_usize, Move(_31), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(11_usize, 34_usize, Move(_34), 29_usize, Move(_29), 5_usize, Move(_5), 24_usize, Move(_24)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [u128; 2],mut _2: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),mut _3: (u8, [usize; 7], (u32,), i16),mut _4: ([u128; 2],),mut _5: [usize; 7]) -> u32 {
mir! {
type RET = u32;
let _6: f32;
let _7: f64;
let _8: bool;
let _9: i64;
let _10: &'static u16;
let _11: [i8; 5];
let _12: (u32,);
let _13: f64;
let _14: u64;
let _15: isize;
let _16: i8;
let _17: [i8; 5];
let _18: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _19: (u8, [usize; 7], (u32,), i16);
let _20: [usize; 1];
let _21: (u32,);
let _22: isize;
let _23: Adt42;
let _24: isize;
let _25: Adt48;
let _26: [usize; 2];
let _27: (i32, bool, u8, [u128; 2]);
let _28: [u128; 2];
let _29: u128;
let _30: *mut i128;
let _31: (isize, [char; 3], *mut i128, i32);
let _32: isize;
let _33: f64;
let _34: ((i32, bool, u8, [u128; 2]),);
let _35: Adt54;
let _36: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _37: f64;
let _38: ();
let _39: ();
{
_2.0.1.1 = _3.1;
_3 = (_2.0.0.2, _2.0.1.1, _2.0.1.2, _2.0.1.3);
_2.0.2 = (_2.0.0.0, _2.0.0.1, _2.0.1.0, _2.0.0.3);
_2.0.1.2.0 = 31_i8 as u32;
RET = !_2.0.1.2.0;
_2.2 = _3.0;
_3.2.0 = RET;
_2.0.2.1 = _2.0.0.1;
_6 = _2.0.1.3 as f32;
_3.2.0 = _3.3 as u32;
_2.0.1.0 = _3.0 | _2.2;
_2.0.2.3 = [119226977259913303599281943865502469974_u128,103481821431809745333412969721672061479_u128];
_2.0.0.2 = 7101579992900462179_u64 as u8;
_2.1 = 18_isize & 9223372036854775807_isize;
_2.0.0.1 = _2.0.2.1;
_2.0.2.1 = _2.0.0.1 | _2.0.0.1;
Goto(bb1)
}
bb1 = {
_3.2.0 = _2.0.1.2.0 & RET;
_2.0.2.2 = _2.0.1.0 | _2.0.1.0;
_2.0.1.3 = !_3.3;
_2.0.1.3 = _3.3 & _3.3;
_3.2 = (_2.0.1.2.0,);
_4 = (_1,);
RET = !_3.2.0;
_3.2.0 = !RET;
_2.0.2.3 = _1;
_8 = _2.0.0.1;
_3.1 = [10898632113824033413_usize,4_usize,5_usize,1002702244478646718_usize,6_usize,10306102821268989042_usize,5_usize];
_2.0.1 = _3;
_2.2 = _2.0.2.2;
_2.0.0.2 = !_2.0.1.0;
_2.0.1.1 = _5;
_2.0.2.0 = _2.0.0.0 | _2.0.0.0;
_2.0.0 = (_2.0.2.0, _2.0.2.1, _2.2, _1);
_4.0 = [295307612806034010625666030813408670933_u128,213630261849374445812378468623619730526_u128];
Call(_2.0.0.2 = fn13(_2.0.0.1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = (_2.0.2.2, _5, _2.0.1.2, _2.0.1.3);
_3.2 = _2.0.1.2;
_3.0 = _2.2;
_2.0.2.0 = !_2.0.0.0;
_12.0 = !RET;
_9 = 52943_u16 as i64;
_14 = 9358757415151342930_u64 << _3.0;
_2.0.1 = _3;
_3.3 = _2.0.0.1 as i16;
_3.2 = _2.0.1.2;
_4.0 = [64061870084182700391070162626839256302_u128,57635118501081466787332626949616670600_u128];
_2.0.0.1 = _2.0.2.1;
_13 = 4018_u16 as f64;
_6 = 44845052266697166719055089165331644423_u128 as f32;
Goto(bb3)
}
bb3 = {
_3.3 = !_2.0.1.3;
_7 = _13 * _13;
_2.0.1.3 = _3.3 * _3.3;
_8 = _2.0.2.1;
_17 = [122_i8,69_i8,(-111_i8),51_i8,(-127_i8)];
_2.0.0.1 = !_2.0.2.1;
_2.0.2.2 = _3.0;
_2.0.0.3 = [311549981231594072290279322348286884045_u128,158087898134763529263777872832581699210_u128];
_9 = _2.0.1.2.0 as i64;
_18.0.1.1 = _2.0.1.1;
_18.0.2 = _2.0.2;
_2.0 = (_18.0.2, _3, _18.0.2);
_2.0.2.2 = _2.2;
_3 = (_2.0.1.0, _18.0.1.1, _2.0.1.2, _2.0.1.3);
_19.2 = (_2.0.1.2.0,);
_21.0 = _3.2.0;
_7 = -_13;
_18.0.2.1 = _2.0.0.1;
_18.0.2.3 = [35302730304532011949624729364101651363_u128,240297698559041356937817713768020899384_u128];
_18.2 = _18.0.2.2 * _2.0.1.0;
Call(_2.0.0.3 = fn17(_3.0, _14), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = -_13;
_2.0.2.3 = [233947778058000950194257307163283024090_u128,263014078019296151983907752350111908954_u128];
_18.0.2.2 = _18.2;
_2.0.0.2 = _3.3 as u8;
_2.0.2.2 = _2.0.1.0;
_18.0.0.1 = !_18.0.2.1;
_2.0.1.1 = [3_usize,5_usize,6890025165198335171_usize,2_usize,1_usize,6675910997935320161_usize,7_usize];
_20 = [7247966871258646594_usize];
_18.0.0.2 = !_2.0.2.2;
_18.0.0.0 = _2.0.2.0;
_11 = [30_i8,(-3_i8),17_i8,18_i8,(-86_i8)];
_3.3 = _6 as i16;
_18 = (_2.0, _2.1, _3.0);
_2.2 = _18.2 << _14;
Goto(bb5)
}
bb5 = {
_19 = (_2.0.1.0, _3.1, _2.0.1.2, _3.3);
_15 = _18.1 - _2.1;
_18.0.1.0 = _18.2 - _3.0;
_2.0.1.1 = _3.1;
_17 = [(-10_i8),69_i8,106_i8,66_i8,73_i8];
_19.3 = -_18.0.1.3;
_3 = (_19.0, _18.0.1.1, _2.0.1.2, _2.0.1.3);
_2.1 = _7 as isize;
_2.0.2.3 = _18.0.2.3;
_16 = 18_i8 | (-15_i8);
_3.1 = _5;
_2.0.0.3 = _18.0.0.3;
_27.3 = _2.0.2.3;
_18.0.0.0 = _2.0.2.0;
_23 = Adt42::Variant0 { fld0: 183121902100652534_usize,fld1: _20,fld2: _3.2,fld3: _2.0.0 };
_23 = Adt42::Variant0 { fld0: 7_usize,fld1: _20,fld2: _2.0.1.2,fld3: _18.0.0 };
_12.0 = RET << _18.0.1.0;
_2.0.1.3 = _19.3 << _19.0;
_3.2 = (_12.0,);
_2.0.2.1 = _18.0.0.1;
_18.0.2.2 = !_2.0.2.2;
_3.2.0 = _12.0 << _19.0;
Goto(bb6)
}
bb6 = {
_2.2 = '\u{9d642}' as u8;
_27 = (Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).0, _18.0.2.1, _19.0, _1);
_19.2 = (_3.2.0,);
_7 = _3.0 as f64;
_27 = (_2.0.0.0, _8, _18.0.1.0, _18.0.0.3);
_12.0 = _3.2.0 + _19.2.0;
_2.0.1.3 = !_19.3;
Goto(bb7)
}
bb7 = {
_26 = [6_usize,6541301061991407560_usize];
place!(Field::<[usize; 1]>(Variant(_23, 0), 1)) = _20;
_3 = (_18.0.1.0, _19.1, _19.2, _18.0.1.3);
place!(Field::<usize>(Variant(_23, 0), 0)) = '\u{23bcb}' as usize;
Goto(bb8)
}
bb8 = {
_16 = _9 as i8;
_27.2 = _7 as u8;
_19.1 = [Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0)];
_27 = _2.0.0;
_18.0.0.2 = !_18.0.2.2;
_19.2 = (_3.2.0,);
_18 = _2;
_27.0 = _18.0.0.0 >> _14;
_18.0.0 = (_27.0, _2.0.0.1, Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).2, _2.0.2.3);
_18.0.0.0 = _27.0 * _27.0;
_22 = !_2.1;
_2.0.0.2 = _18.0.1.0 >> _12.0;
_9 = _14 as i64;
_2.1 = _18.1;
place!(Field::<(u32,)>(Variant(_23, 0), 2)) = (_19.2.0,);
_13 = -_7;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3)).3 = [277851432527692504448594472008830717112_u128,153245921850617265247623135375208512730_u128];
_19.2.0 = _2.0.1.0 as u32;
_5 = _2.0.1.1;
Goto(bb9)
}
bb9 = {
_16 = (-19_i8) ^ 36_i8;
_18.0.1.3 = _3.3 + _3.3;
_18.2 = _14 as u8;
_18.2 = _2.0.1.0 | _2.0.0.2;
_20 = [Field::<usize>(Variant(_23, 0), 0)];
_18.0.2.0 = _2.0.2.0;
_31.3 = _18.0.0.0;
_2.2 = !_3.0;
_24 = _7 as isize;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3)) = (_31.3, _2.0.2.1, _18.0.1.0, _2.0.2.3);
_29 = 91121825621957002647714120653512198754_u128;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3)).0 = _18.0.0.0;
match _29 {
0 => bb4,
1 => bb2,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
91121825621957002647714120653512198754 => bb15,
_ => bb14
}
}
bb10 = {
_3 = (_2.0.2.2, _5, _2.0.1.2, _2.0.1.3);
_3.2 = _2.0.1.2;
_3.0 = _2.2;
_2.0.2.0 = !_2.0.0.0;
_12.0 = !RET;
_9 = 52943_u16 as i64;
_14 = 9358757415151342930_u64 << _3.0;
_2.0.1 = _3;
_3.3 = _2.0.0.1 as i16;
_3.2 = _2.0.1.2;
_4.0 = [64061870084182700391070162626839256302_u128,57635118501081466787332626949616670600_u128];
_2.0.0.1 = _2.0.2.1;
_13 = 4018_u16 as f64;
_6 = 44845052266697166719055089165331644423_u128 as f32;
Goto(bb3)
}
bb11 = {
_26 = [6_usize,6541301061991407560_usize];
place!(Field::<[usize; 1]>(Variant(_23, 0), 1)) = _20;
_3 = (_18.0.1.0, _19.1, _19.2, _18.0.1.3);
place!(Field::<usize>(Variant(_23, 0), 0)) = '\u{23bcb}' as usize;
Goto(bb8)
}
bb12 = {
_2.2 = '\u{9d642}' as u8;
_27 = (Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).0, _18.0.2.1, _19.0, _1);
_19.2 = (_3.2.0,);
_7 = _3.0 as f64;
_27 = (_2.0.0.0, _8, _18.0.1.0, _18.0.0.3);
_12.0 = _3.2.0 + _19.2.0;
_2.0.1.3 = !_19.3;
Goto(bb7)
}
bb13 = {
_19 = (_2.0.1.0, _3.1, _2.0.1.2, _3.3);
_15 = _18.1 - _2.1;
_18.0.1.0 = _18.2 - _3.0;
_2.0.1.1 = _3.1;
_17 = [(-10_i8),69_i8,106_i8,66_i8,73_i8];
_19.3 = -_18.0.1.3;
_3 = (_19.0, _18.0.1.1, _2.0.1.2, _2.0.1.3);
_2.1 = _7 as isize;
_2.0.2.3 = _18.0.2.3;
_16 = 18_i8 | (-15_i8);
_3.1 = _5;
_2.0.0.3 = _18.0.0.3;
_27.3 = _2.0.2.3;
_18.0.0.0 = _2.0.2.0;
_23 = Adt42::Variant0 { fld0: 183121902100652534_usize,fld1: _20,fld2: _3.2,fld3: _2.0.0 };
_23 = Adt42::Variant0 { fld0: 7_usize,fld1: _20,fld2: _2.0.1.2,fld3: _18.0.0 };
_12.0 = RET << _18.0.1.0;
_2.0.1.3 = _19.3 << _19.0;
_3.2 = (_12.0,);
_2.0.2.1 = _18.0.0.1;
_18.0.2.2 = !_2.0.2.2;
_3.2.0 = _12.0 << _19.0;
Goto(bb6)
}
bb14 = {
_3.2.0 = _2.0.1.2.0 & RET;
_2.0.2.2 = _2.0.1.0 | _2.0.1.0;
_2.0.1.3 = !_3.3;
_2.0.1.3 = _3.3 & _3.3;
_3.2 = (_2.0.1.2.0,);
_4 = (_1,);
RET = !_3.2.0;
_3.2.0 = !RET;
_2.0.2.3 = _1;
_8 = _2.0.0.1;
_3.1 = [10898632113824033413_usize,4_usize,5_usize,1002702244478646718_usize,6_usize,10306102821268989042_usize,5_usize];
_2.0.1 = _3;
_2.2 = _2.0.2.2;
_2.0.0.2 = !_2.0.1.0;
_2.0.1.1 = _5;
_2.0.2.0 = _2.0.0.0 | _2.0.0.0;
_2.0.0 = (_2.0.2.0, _2.0.2.1, _2.2, _1);
_4.0 = [295307612806034010625666030813408670933_u128,213630261849374445812378468623619730526_u128];
Call(_2.0.0.2 = fn13(_2.0.0.1, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_31.1 = ['\u{48018}','\u{55436}','\u{8d67e}'];
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3)) = (_18.0.0.0, _2.0.0.1, _2.0.0.2, _2.0.2.3);
_18.0.0.3 = [_29,_29];
_7 = _13 - _13;
_19.2.0 = Field::<(u32,)>(Variant(_23, 0), 2).0;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3)).1 = _8 | _18.0.0.1;
_27.3 = _2.0.0.3;
_2 = (_18.0, _15, Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).2);
_34.0.0 = Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).0;
_31.1 = ['\u{67573}','\u{16268}','\u{307c3}'];
_20 = [Field::<usize>(Variant(_23, 0), 0)];
_27 = (Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).0, Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).1, _18.2, _4.0);
place!(Field::<(u32,)>(Variant(_23, 0), 2)) = (_3.2.0,);
_36.0.2.2 = !Field::<(i32, bool, u8, [u128; 2])>(Variant(_23, 0), 3).2;
_36.0.1.1 = _18.0.1.1;
_36.0.2 = (_2.0.0.0, _27.1, _27.2, _2.0.2.3);
_2.0.2.1 = _36.0.2.1;
_3.1 = [Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0),Field::<usize>(Variant(_23, 0), 0)];
place!(Field::<(u32,)>(Variant(_23, 0), 2)).0 = _6 as u32;
_18.0.1 = (_18.2, _36.0.1.1, _19.2, _19.3);
_19.2.0 = _3.2.0;
_36.0.0 = (_27.0, _18.0.2.1, _2.2, _36.0.2.3);
_3 = (_18.0.1.0, _36.0.1.1, _18.0.1.2, _2.0.1.3);
_36.1 = _24 << _36.0.0.2;
_15 = _2.1 << _2.1;
Goto(bb16)
}
bb16 = {
Call(_38 = dump_var(12_usize, 16_usize, Move(_16), 15_usize, Move(_15), 9_usize, Move(_9), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(12_usize, 21_usize, Move(_21), 14_usize, Move(_14), 5_usize, Move(_5), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(12_usize, 8_usize, Move(_8), 11_usize, Move(_11), 2_usize, Move(_2), 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: bool,mut _2: [u128; 2]) -> u8 {
mir! {
type RET = u8;
let _3: (i16, u32, u8);
let _4: isize;
let _5: Adt57;
let _6: isize;
let _7: *const (i16, u32, u8);
let _8: i32;
let _9: *mut [i8; 5];
let _10: *const [i8; 5];
let _11: i8;
let _12: i64;
let _13: (i32, bool, u8, [u128; 2]);
let _14: f64;
let _15: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2]));
let _16: [usize; 7];
let _17: Adt56;
let _18: Adt46;
let _19: *mut [usize; 7];
let _20: char;
let _21: u16;
let _22: isize;
let _23: (isize, [char; 3], *mut i128, i32);
let _24: char;
let _25: *const [i8; 5];
let _26: bool;
let _27: Adt43;
let _28: Adt42;
let _29: char;
let _30: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _31: isize;
let _32: isize;
let _33: Adt47;
let _34: *mut i8;
let _35: char;
let _36: isize;
let _37: ();
let _38: ();
{
_2 = [327628241633706908685939462970210962418_u128,176956128737961803742953364033727939616_u128];
_1 = true;
RET = 219_u8 * 188_u8;
RET = !202_u8;
_1 = false;
_1 = RET == RET;
Goto(bb1)
}
bb1 = {
RET = '\u{6922c}' as u8;
_1 = !true;
_2 = [29976333161100067442593999522955698486_u128,95062622301662582179356696475170329440_u128];
RET = !31_u8;
_1 = true;
_2 = [77016860298467988915626931488175148928_u128,56466154177302987207093407678111052164_u128];
Goto(bb2)
}
bb2 = {
_3.1 = 4008207573_u32;
_4 = -(-53_isize);
_3.0 = 20854_i16;
_4 = (-9223372036854775808_isize) - (-53_isize);
_3.2 = RET >> _4;
_6 = _4 + _4;
_1 = false;
_1 = true;
RET = _3.2;
_3.2 = (-3407688761466381997_i64) as u8;
_3.1 = !664381284_u32;
Call(RET = core::intrinsics::transmute(_3.2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = (12231_i16, 2356680348_u32, RET);
_3 = ((-18991_i16), 2108523253_u32, RET);
_3.1 = 3427233532_u32 << _4;
Call(_8 = core::intrinsics::bswap(1623648135_i32), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_3.2 = '\u{22870}' as u8;
_3 = ((-30626_i16), 967909325_u32, RET);
_1 = _4 < _6;
RET = _1 as u8;
_7 = core::ptr::addr_of!(_3);
RET = (*_7).2;
_11 = 37_i8;
_3.2 = !RET;
_3.2 = RET >> _11;
_3 = ((-2160_i16), 3658300026_u32, RET);
_13 = (777746103_i32, _1, _3.2, _2);
_14 = _6 as f64;
_15.1.0 = (*_7).2 * (*_7).2;
_15.1.2.0 = (*_7).1 - _3.1;
match (*_7).0 {
340282366920938463463374607431768209296 => bb5,
_ => bb3
}
}
bb5 = {
_15.2.1 = _13.0 != _13.0;
_15.2 = (_13.0, _13.1, RET, _13.3);
RET = !(*_7).2;
_13 = (_15.2.0, _1, _15.1.0, _2);
_15.0.3 = [141127353409135341314133767364529624345_u128,271801111888711879348331216846898254423_u128];
_15.1.0 = !_3.2;
RET = !_15.1.0;
_3.2 = _13.2;
_15.2.1 = !_13.1;
_15.1.0 = RET;
_15.1.3 = (*_7).0 | (*_7).0;
Call(_5 = fn14(_15.2, _13.0, _15.1.2, _1, _15.2.0, _15.2.0, _7, _3.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
SetDiscriminant(_5, 0);
_15.0.1 = _13.1;
_15.1.1 = [309700292320738647_usize,9027999686460921181_usize,0_usize,2_usize,12973700686387316347_usize,5246941415705871091_usize,1_usize];
_15.0.1 = !_15.2.1;
_14 = 275828166937855705710946656208845055949_u128 as f64;
_8 = !_15.2.0;
_13.1 = _1 | _1;
place!(Field::<([u128; 2],)>(Variant(_5, 0), 0)).0 = [70362011900259335991535903375691551159_u128,81487909076916315136530234497575679108_u128];
_13.1 = _15.2.1;
_15.2.2 = !_3.2;
_6 = _4;
_15.1.3 = -(*_7).0;
_15.0.2 = (*_7).2 + (*_7).2;
_15.0.1 = !_15.2.1;
_13 = (_8, _1, (*_7).2, _2);
_15.1.0 = _15.0.2 & _15.2.2;
_15.2.0 = _6 as i32;
place!(Field::<([u128; 2],)>(Variant(_5, 0), 0)).0 = [267625640068444263269615257779004596023_u128,257967030266058125401345810435060356900_u128];
_15.0 = (_8, _15.2.1, _15.1.0, Field::<([u128; 2],)>(Variant(_5, 0), 0).0);
RET = _14 as u8;
_11 = !64_i8;
Goto(bb7)
}
bb7 = {
_15.1.1 = [3_usize,5_usize,7_usize,14807930110643423720_usize,4_usize,8752974648395030906_usize,2_usize];
_15.2 = (_13.0, _15.0.1, _15.1.0, _2);
_3.0 = _15.1.3;
place!(Field::<([u128; 2],)>(Variant(_5, 0), 0)).0 = [241739376506737082951304255009202874416_u128,336435462676053361322073140715532331844_u128];
SetDiscriminant(_5, 3);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.1 = _15.1;
Goto(bb8)
}
bb8 = {
_3.1 = _6 as u32;
_10 = core::ptr::addr_of!(place!(Field::<[i8; 5]>(Variant(_5, 3), 1)));
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.1 = _15.1;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.0.0 = _8 + _13.0;
place!(Field::<*const [i8; 5]>(Variant(_5, 3), 0)) = core::ptr::addr_of!((*_10));
_15.2.0 = _8 << _8;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(_5, 3), 3)).2.0 = 5718153705847699695_u64 as u32;
_6 = _15.0.2 as isize;
place!(Field::<*const [i8; 5]>(Variant(_5, 3), 0)) = _10;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(_5, 3), 3)) = _15.1;
_20 = '\u{bc87c}';
Goto(bb9)
}
bb9 = {
_10 = core::ptr::addr_of!(place!(Field::<[i8; 5]>(Variant(_5, 3), 1)));
Call(place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.2.2 = core::intrinsics::bswap(_15.2.2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
place!(Field::<*const [i8; 5]>(Variant(_5, 3), 0)) = _10;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.2.3 = [107817539195632103469724847969707437410_u128,148240524925045041683127244572439688597_u128];
_13 = (_8, _1, (*_7).2, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.3);
_15.0.1 = !_13.1;
Goto(bb11)
}
bb11 = {
place!(Field::<[i8; 5]>(Variant(_5, 3), 1)) = [_11,_11,_11,_11,_11];
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)) = (_15, _6, Field::<(u8, [usize; 7], (u32,), i16)>(Variant(_5, 3), 3).0);
_15.2.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.0;
_4 = _6;
_13 = (_15.0.0, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.1, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.2, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.3);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.0.3 = _15.0.3;
_20 = '\u{a14ca}';
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.0.2 = _15.0.2 >> _15.2.2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.0.2 = _15.0.2 * _15.1.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).1 = _6;
_27.fld4 = [_20,_20,_20];
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.0.0 = _15.2.0 >> _15.0.0;
_13.3 = [299872767444918645005317104368871429740_u128,59065352624405429973362927860122756536_u128];
_27.fld0 = _15.2.1 as u16;
_25 = Field::<*const [i8; 5]>(Variant(_5, 3), 0);
_15.2.3 = [242771080461076588558827533980992870034_u128,1841233438327558665128998338922723091_u128];
place!(Field::<*const [i8; 5]>(Variant(_5, 3), 0)) = core::ptr::addr_of!((*_10));
_11 = 92_i8;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.2 = _15.2;
_15.0.1 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.0.1;
_30.0.2.2 = _15.0.2 | _15.2.2;
match _11 {
0 => bb12,
1 => bb13,
92 => bb15,
_ => bb14
}
}
bb12 = {
RET = '\u{6922c}' as u8;
_1 = !true;
_2 = [29976333161100067442593999522955698486_u128,95062622301662582179356696475170329440_u128];
RET = !31_u8;
_1 = true;
_2 = [77016860298467988915626931488175148928_u128,56466154177302987207093407678111052164_u128];
Goto(bb2)
}
bb13 = {
_3.1 = 4008207573_u32;
_4 = -(-53_isize);
_3.0 = 20854_i16;
_4 = (-9223372036854775808_isize) - (-53_isize);
_3.2 = RET >> _4;
_6 = _4 + _4;
_1 = false;
_1 = true;
RET = _3.2;
_3.2 = (-3407688761466381997_i64) as u8;
_3.1 = !664381284_u32;
Call(RET = core::intrinsics::transmute(_3.2), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
_15.2.1 = _13.0 != _13.0;
_15.2 = (_13.0, _13.1, RET, _13.3);
RET = !(*_7).2;
_13 = (_15.2.0, _1, _15.1.0, _2);
_15.0.3 = [141127353409135341314133767364529624345_u128,271801111888711879348331216846898254423_u128];
_15.1.0 = !_3.2;
RET = !_15.1.0;
_3.2 = _13.2;
_15.2.1 = !_13.1;
_15.1.0 = RET;
_15.1.3 = (*_7).0 | (*_7).0;
Call(_5 = fn14(_15.2, _13.0, _15.1.2, _1, _15.2.0, _15.2.0, _7, _3.0), ReturnTo(bb6), UnwindUnreachable())
}
bb15 = {
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).2 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.0.1 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.2.1;
_15.1.2.0 = (-8670799500929859266_i64) as u32;
_13.3 = _15.2.3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.1.0 = !_15.1.0;
_30.0 = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.0, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.1, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2).0.0);
_30 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2);
_22 = (-167669700078873159302519392113575534970_i128) as isize;
_13.3 = _15.0.3;
_21 = _27.fld0;
_23.2 = core::ptr::addr_of_mut!(_27.fld1);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_5, 3), 2)).0.2.3 = [116244285711654788938654551699711695034_u128,57248391486484335280710864457064683232_u128];
_7 = core::ptr::addr_of!((*_7));
Goto(bb16)
}
bb16 = {
Call(_37 = dump_var(13_usize, 4_usize, Move(_4), 11_usize, Move(_11), 13_usize, Move(_13), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(13_usize, 8_usize, Move(_8), 21_usize, Move(_21), 38_usize, _38, 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: (i32, bool, u8, [u128; 2]),mut _2: i32,mut _3: (u32,),mut _4: bool,mut _5: i32,mut _6: i32,mut _7: *const (i16, u32, u8),mut _8: i16) -> Adt57 {
mir! {
type RET = Adt57;
let _9: *const (i16, u32, u8);
let _10: *mut i8;
let _11: f32;
let _12: char;
let _13: [char; 3];
let _14: [usize; 7];
let _15: isize;
let _16: isize;
let _17: ((i32, bool, u8, [u128; 2]),);
let _18: ((i32, bool, u8, [u128; 2]),);
let _19: Adt44;
let _20: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _21: [usize; 2];
let _22: f64;
let _23: *mut i128;
let _24: isize;
let _25: isize;
let _26: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8);
let _27: i128;
let _28: f64;
let _29: [usize; 2];
let _30: Adt50;
let _31: i16;
let _32: isize;
let _33: [usize; 1];
let _34: isize;
let _35: i64;
let _36: *const [i8; 5];
let _37: i64;
let _38: *mut u32;
let _39: [usize; 7];
let _40: &'static u16;
let _41: Adt49;
let _42: *const (i16, u32, u8);
let _43: u128;
let _44: [char; 3];
let _45: [usize; 1];
let _46: [u128; 2];
let _47: Adt47;
let _48: i128;
let _49: ([u128; 2],);
let _50: Adt47;
let _51: f32;
let _52: isize;
let _53: Adt58;
let _54: char;
let _55: [usize; 7];
let _56: [char; 3];
let _57: Adt46;
let _58: (u8, [usize; 7], (u32,), i16);
let _59: bool;
let _60: *const (i16, u32, u8);
let _61: ();
let _62: ();
{
_2 = -_6;
_4 = _1.1 | _1.1;
_1.3 = [249175442591740177337081283798406091635_u128,166153851234082399279690840497700342783_u128];
_3.0 = 1462277803_u32;
_1.2 = _8 as u8;
_8 = (-4172_i16);
_1.1 = !_4;
_3.0 = 1308959169_u32 & 790339003_u32;
_1.3 = [234538934300125268580790020161928898759_u128,307136798250917185843899453180495194362_u128];
_2 = _6;
_6 = !_1.0;
_1.1 = !_4;
_8 = -(-20418_i16);
_5 = -_2;
_1.1 = !_4;
_3.0 = 1127271293_u32 & 1577565523_u32;
_1.0 = _6 | _5;
_4 = !_1.1;
Call(RET = fn15(_4, _4, _1.0, _2, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = _7;
place!(Field::<([u128; 2],)>(Variant(RET, 0), 0)) = (_1.3,);
_1.2 = !148_u8;
_2 = _6 | _6;
_1 = (_5, _4, 210_u8, Field::<([u128; 2],)>(Variant(RET, 0), 0).0);
_3.0 = _4 as u32;
_2 = !_6;
SetDiscriminant(RET, 0);
_9 = _7;
place!(Field::<([u128; 2],)>(Variant(RET, 0), 0)) = (_1.3,);
_1 = (_6, _4, 63_u8, Field::<([u128; 2],)>(Variant(RET, 0), 0).0);
_4 = _3.0 > _3.0;
place!(Field::<([u128; 2],)>(Variant(RET, 0), 0)).0 = _1.3;
place!(Field::<([u128; 2],)>(Variant(RET, 0), 0)).0 = _1.3;
_11 = 4954716969436460954_i64 as f32;
_1.0 = !_2;
place!(Field::<([u128; 2],)>(Variant(RET, 0), 0)).0 = [186064058659602053758468928661227784836_u128,109921144276656759115852121641021019241_u128];
_11 = (-9223372036854775808_isize) as f32;
_1.0 = 11062035455344898052_u64 as i32;
_1.2 = (-17_i8) as u8;
place!(Field::<([u128; 2],)>(Variant(RET, 0), 0)) = (_1.3,);
_3 = (1423164946_u32,);
Goto(bb2)
}
bb2 = {
_1.3 = Field::<([u128; 2],)>(Variant(RET, 0), 0).0;
_12 = '\u{fc5ac}';
_14 = [6_usize,7_usize,2_usize,12512864906688642189_usize,10303423562377414956_usize,4920367324307499244_usize,0_usize];
SetDiscriminant(RET, 1);
_1.3 = [52807605543194952556066954993981063106_u128,206052381422277896989379416420136730917_u128];
_1.1 = _4;
_2 = -_5;
_1.1 = _6 > _6;
_5 = _2;
_3.0 = !1414091167_u32;
_5 = _2;
_17.0 = (_5, _4, _1.2, _1.3);
_18.0.2 = !_17.0.2;
_4 = !_1.1;
_15 = _4 as isize;
_2 = !_17.0.0;
place!(Field::<i64>(Variant(RET, 1), 4)) = 5860357674318545499_i64 & (-8185719370982745636_i64);
Goto(bb3)
}
bb3 = {
_20.0.2.2 = _17.0.1 as u8;
_21 = [15543125620365986097_usize,2223207366479955327_usize];
_22 = Field::<i64>(Variant(RET, 1), 4) as f64;
_13 = [_12,_12,_12];
place!(Field::<i64>(Variant(RET, 1), 4)) = !6778151917000517203_i64;
place!(Field::<usize>(Variant(RET, 1), 3)) = 5_usize ^ 5_usize;
_18.0.0 = _2;
_17 = (_1,);
Goto(bb4)
}
bb4 = {
_20.0.0.2 = _20.0.2.2 + _20.0.2.2;
place!(Field::<usize>(Variant(RET, 1), 3)) = !6_usize;
_20.0.1.2.0 = !_3.0;
Goto(bb5)
}
bb5 = {
_20.0.1.0 = _20.0.2.2;
_18.0.3 = [158131221671904202601152946184948512050_u128,82114367631273530299709733076101329607_u128];
_20.0.1.1 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_18.0.1 = !_17.0.1;
_20.0.1.3 = _8 * _8;
_20.1 = !_15;
_20.2 = _20.0.0.2 ^ _20.0.0.2;
_1.1 = _18.0.1;
_20.1 = _17.0.1 as isize;
_3.0 = !_20.0.1.2.0;
_22 = 24_i8 as f64;
_17.0.3 = _18.0.3;
_6 = _18.0.0 & _18.0.0;
Goto(bb6)
}
bb6 = {
_17 = _18;
_26.0.1.1 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_26.0.2.2 = _20.0.0.2 & _20.2;
_17.0.0 = _2 ^ _6;
_26.0.2.0 = _2 | _17.0.0;
place!(Field::<usize>(Variant(RET, 1), 3)) = 980131518299024314_usize + 4451688636565742146_usize;
_26.0.0.3 = _1.3;
place!(Field::<isize>(Variant(RET, 1), 2)) = _15;
_20.0.0.0 = _1.1 as i32;
_18.0.1 = _17.0.1 & _1.1;
place!(Field::<i64>(Variant(RET, 1), 4)) = 4188530540674378638_i64;
_20.0.1.2.0 = _3.0 & _3.0;
_1.1 = !_18.0.1;
_26.0.0 = (_2, _1.1, _20.2, _1.3);
match Field::<i64>(Variant(RET, 1), 4) {
0 => bb1,
1 => bb4,
2 => bb7,
3 => bb8,
4188530540674378638 => bb10,
_ => bb9
}
}
bb7 = {
_20.0.1.0 = _20.0.2.2;
_18.0.3 = [158131221671904202601152946184948512050_u128,82114367631273530299709733076101329607_u128];
_20.0.1.1 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_18.0.1 = !_17.0.1;
_20.0.1.3 = _8 * _8;
_20.1 = !_15;
_20.2 = _20.0.0.2 ^ _20.0.0.2;
_1.1 = _18.0.1;
_20.1 = _17.0.1 as isize;
_3.0 = !_20.0.1.2.0;
_22 = 24_i8 as f64;
_17.0.3 = _18.0.3;
_6 = _18.0.0 & _18.0.0;
Goto(bb6)
}
bb8 = {
_1.3 = Field::<([u128; 2],)>(Variant(RET, 0), 0).0;
_12 = '\u{fc5ac}';
_14 = [6_usize,7_usize,2_usize,12512864906688642189_usize,10303423562377414956_usize,4920367324307499244_usize,0_usize];
SetDiscriminant(RET, 1);
_1.3 = [52807605543194952556066954993981063106_u128,206052381422277896989379416420136730917_u128];
_1.1 = _4;
_2 = -_5;
_1.1 = _6 > _6;
_5 = _2;
_3.0 = !1414091167_u32;
_5 = _2;
_17.0 = (_5, _4, _1.2, _1.3);
_18.0.2 = !_17.0.2;
_4 = !_1.1;
_15 = _4 as isize;
_2 = !_17.0.0;
place!(Field::<i64>(Variant(RET, 1), 4)) = 5860357674318545499_i64 & (-8185719370982745636_i64);
Goto(bb3)
}
bb9 = {
_20.0.2.2 = _17.0.1 as u8;
_21 = [15543125620365986097_usize,2223207366479955327_usize];
_22 = Field::<i64>(Variant(RET, 1), 4) as f64;
_13 = [_12,_12,_12];
place!(Field::<i64>(Variant(RET, 1), 4)) = !6778151917000517203_i64;
place!(Field::<usize>(Variant(RET, 1), 3)) = 5_usize ^ 5_usize;
_18.0.0 = _2;
_17 = (_1,);
Goto(bb4)
}
bb10 = {
_18.0 = (_2, _4, _20.0.0.2, _1.3);
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant0 { fld0: _8 };
_17.0.3 = [94699425722682150433314217384013829399_u128,247945055905288264497036792968584836725_u128];
_26.1 = Field::<isize>(Variant(RET, 1), 2);
_29 = _21;
place!(Field::<i16>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 0), 0)) = -_20.0.1.3;
_18 = (_17.0,);
_26.0.2.3 = [209872072242891431874062890133703243899_u128,314580551082402846312881302056093163536_u128];
_11 = _22 as f32;
SetDiscriminant(Field::<Adt48>(Variant(RET, 1), 1), 1);
_5 = _6 & _26.0.2.0;
_26.0.0 = (_18.0.0, _4, _20.2, _18.0.3);
_21 = _29;
_26.0.0.1 = !_18.0.1;
_20.0.2.0 = _6 - _26.0.2.0;
_26.0 = (_17.0, _20.0.1, _1);
place!(Field::<isize>(Variant(RET, 1), 2)) = _26.1;
_26.0.1.2.0 = (-70403478429040481526639806722639051209_i128) as u32;
_17.0.1 = _18.0.1;
_20.0 = (_26.0.2, _26.0.1, _26.0.0);
_26.0.0.3 = _20.0.2.3;
_29 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_34 = Field::<isize>(Variant(RET, 1), 2) | _20.1;
Goto(bb11)
}
bb11 = {
_18 = _17;
_28 = _22 - _22;
_19 = Adt44::Variant0 { fld0: _26.0.1.2 };
_27 = -159197263957415476318488815404675428589_i128;
_29 = _21;
_29 = _21;
_6 = Field::<i64>(Variant(RET, 1), 4) as i32;
_26.2 = !_20.0.1.0;
place!(Field::<u64>(Variant(RET, 1), 0)) = 15742287845153654019_u64 + 4836900038260403654_u64;
_18.0.0 = 61770_u16 as i32;
_29 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_9 = _7;
_18.0.3 = [179141828948525105996796696758629668215_u128,138338252318247866285885497864335613400_u128];
_8 = _26.0.1.3 ^ _26.0.1.3;
_20.0.1.1 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_7 = _9;
SetDiscriminant(_19, 1);
_20.0.0.0 = _27 as i32;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1.0 = !_26.0.1.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0.0 = _20.0.2.0;
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)) = _22 as i8;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0.2 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.1.0;
_20.2 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.2 & _26.2;
_17.0.0 = _20.0.2.0 | _20.0.2.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1 = (_20.2, _26.0.1.1, _26.0.1.2, _8);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).1 = -_34;
_29 = _21;
_1.2 = _20.0.0.2;
Goto(bb12)
}
bb12 = {
_4 = !_1.1;
_24 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).1;
_1.3 = _17.0.3;
_18.0.1 = _20.0.0.1;
_17.0.3 = [322848772605629952412554236762569244386_u128,281277387492186145092907838871740233598_u128];
_10 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)));
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0.3 = _20.0.2.3;
_1.1 = _18.0.1;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)) = (_26.0, _34, _20.2);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1.2.0 = _26.0.1.2.0;
place!(Field::<u64>(Variant(RET, 1), 0)) = _28 as u64;
place!(Field::<[char; 3]>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 2)) = [_12,_12,_12];
_28 = _20.2 as f64;
place!(Field::<u8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 0)) = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).2 << _26.2;
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)) = _24 as i8;
_26.0.1.2 = _3;
_3.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.1.2.0 | Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.1.2.0;
_20.0.0.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.0 + _5;
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant1 { fld0: _26.0.1.0,fld1: (-108_i8),fld2: _13 };
_29 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
place!(Field::<Adt42>(Variant(RET, 1), 5)) = Adt42::Variant1 { fld0: Field::<[char; 3]>(Variant(Field::<Adt48>(Variant(RET, 1), 1), 1), 2) };
place!(Field::<Adt42>(Variant(RET, 1), 5)) = Adt42::Variant1 { fld0: _13 };
place!(Field::<i64>(Variant(RET, 1), 4)) = _3.0 as i64;
_2 = _20.0.0.0;
SetDiscriminant(Field::<Adt42>(Variant(RET, 1), 5), 0);
_26.2 = _20.2 >> _2;
place!(Field::<*mut i8>(Variant(_19, 1), 2)) = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)));
_22 = _11 as f64;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 3)).2 = !_20.2;
Call(_26.0.2 = fn16(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0, _18, _20.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_7 = _9;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0 = (_20.0.0.0, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2.1, Field::<(i32, bool, u8, [u128; 2])>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 3).2, _26.0.2.3);
place!(Field::<(u32,)>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 2)).0 = !_20.0.1.2.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.2 = _26.0.0;
_33 = [Field::<usize>(Variant(RET, 1), 3)];
_20.0.1.1 = _14;
_19 = Adt44::Variant0 { fld0: _20.0.1.2 };
Goto(bb14)
}
bb14 = {
_26.0 = (_1, _20.0.1, _20.0.0);
_20.1 = _17.0.1 as isize;
SetDiscriminant(_19, 0);
_4 = !_26.0.0.1;
place!(Field::<usize>(Variant(RET, 1), 3)) = 7390449789798315551_usize;
_16 = !_34;
_20.0.0.3 = [246790145112437890067459040999436776833_u128,181472369501100253282974137435536642752_u128];
place!(Field::<[char; 3]>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 2)) = [_12,_12,_12];
_18.0.3 = [249746845474226603352585749596934858678_u128,82195455500476211241614089652009801419_u128];
_25 = _15 | _34;
_22 = Field::<i64>(Variant(RET, 1), 4) as f64;
_31 = _8 - _20.0.1.3;
_26.0.2.2 = _12 as u8;
_20.0.0 = (_5, _1.1, _26.0.1.0, _26.0.2.3);
_31 = _26.1 as i16;
_22 = -_28;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 3)).3 = [6238760707221605955968416454229849677_u128,52277171659441977416504374387046175544_u128];
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 3)).1 = _18.0.1;
_26.0.1.1 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_20.0 = (_1, _26.0.1, _17.0);
_17.0.2 = !_20.2;
place!(Field::<usize>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 0)) = Field::<usize>(Variant(RET, 1), 3);
match Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0) {
0 => bb10,
7390449789798315551 => bb16,
_ => bb15
}
}
bb15 = {
_18.0 = (_2, _4, _20.0.0.2, _1.3);
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant0 { fld0: _8 };
_17.0.3 = [94699425722682150433314217384013829399_u128,247945055905288264497036792968584836725_u128];
_26.1 = Field::<isize>(Variant(RET, 1), 2);
_29 = _21;
place!(Field::<i16>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 0), 0)) = -_20.0.1.3;
_18 = (_17.0,);
_26.0.2.3 = [209872072242891431874062890133703243899_u128,314580551082402846312881302056093163536_u128];
_11 = _22 as f32;
SetDiscriminant(Field::<Adt48>(Variant(RET, 1), 1), 1);
_5 = _6 & _26.0.2.0;
_26.0.0 = (_18.0.0, _4, _20.2, _18.0.3);
_21 = _29;
_26.0.0.1 = !_18.0.1;
_20.0.2.0 = _6 - _26.0.2.0;
_26.0 = (_17.0, _20.0.1, _1);
place!(Field::<isize>(Variant(RET, 1), 2)) = _26.1;
_26.0.1.2.0 = (-70403478429040481526639806722639051209_i128) as u32;
_17.0.1 = _18.0.1;
_20.0 = (_26.0.2, _26.0.1, _26.0.0);
_26.0.0.3 = _20.0.2.3;
_29 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(RET, 1), 3)];
_34 = Field::<isize>(Variant(RET, 1), 2) | _20.1;
Goto(bb11)
}
bb16 = {
_41.fld0.1.3 = _4 as i32;
_26.0.2 = (_20.0.2.0, _18.0.1, Field::<(i32, bool, u8, [u128; 2])>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 3).2, _17.0.3);
place!(Field::<isize>(Variant(RET, 1), 2)) = _24;
_41.fld0.1.1 = [_12,_12,_12];
_41.fld0.1.0 = _25 >> _24;
_1 = _20.0.0;
_41.fld0.1.2 = core::ptr::addr_of_mut!(_27);
_20.0.1.0 = _26.2;
_41.fld2.3 = _28 as i16;
_41.fld1.2 = Field::<u8>(Variant(Field::<Adt48>(Variant(RET, 1), 1), 1), 0);
_14 = [Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0),Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0),Field::<usize>(Variant(RET, 1), 3),Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0),Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0),Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0)];
_17.0.3 = _26.0.0.3;
place!(Field::<[usize; 1]>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 1)) = [Field::<usize>(Variant(RET, 1), 3)];
_27 = Field::<i64>(Variant(RET, 1), 4) as i128;
match Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0) {
0 => bb12,
1 => bb2,
2 => bb7,
3 => bb10,
4 => bb9,
5 => bb11,
7390449789798315551 => bb18,
_ => bb17
}
}
bb17 = {
_20.0.2.2 = _17.0.1 as u8;
_21 = [15543125620365986097_usize,2223207366479955327_usize];
_22 = Field::<i64>(Variant(RET, 1), 4) as f64;
_13 = [_12,_12,_12];
place!(Field::<i64>(Variant(RET, 1), 4)) = !6778151917000517203_i64;
place!(Field::<usize>(Variant(RET, 1), 3)) = 5_usize ^ 5_usize;
_18.0.0 = _2;
_17 = (_1,);
Goto(bb4)
}
bb18 = {
_20.0.1.2.0 = (-37_i8) as u32;
place!(Field::<usize>(Variant(RET, 1), 3)) = !Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0);
place!(Field::<(u32,)>(Variant(_19, 0), 0)) = (_3.0,);
Goto(bb19)
}
bb19 = {
_26.0.0.3 = [166922250890383335978210143549405139405_u128,12904863975947279927475462943644931819_u128];
_29 = [Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0),Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0)];
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)) = -5_i8;
_20.0.2.3 = [257682295288925130486573637021478779171_u128,234805761183604480495473036577967291271_u128];
_38 = core::ptr::addr_of_mut!(_41.fld4);
_26.0.1.2 = Field::<(u32,)>(Variant(_19, 0), 0);
_41.fld1.0 = _31 - _41.fld2.3;
place!(Field::<isize>(Variant(RET, 1), 2)) = -_41.fld0.1.0;
_20.0.1.2.0 = _26.0.1.2.0;
_41.fld0.0 = _17.0.0 as u8;
_41.fld2 = (_26.2, _14, _3, _31);
_26.0.2.2 = _41.fld1.0 as u8;
Goto(bb20)
}
bb20 = {
place!(Field::<u8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 0)) = _26.0.1.0 ^ _41.fld2.0;
_41.fld0.3.3 = !_8;
_17.0.2 = _41.fld0.0 >> _41.fld0.1.0;
_20.2 = Field::<(i32, bool, u8, [u128; 2])>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 3).1 as u8;
SetDiscriminant(Field::<Adt48>(Variant(RET, 1), 1), 2);
_26.0.1.3 = _41.fld1.0;
_41.fld0.3.0 = _26.2 + _41.fld2.0;
_46 = [25883036058508741739153845018138419852_u128,329332207357965055916300151887483678758_u128];
_26.0.2.2 = !_41.fld0.3.0;
SetDiscriminant(_19, 1);
_41.fld2 = (_17.0.2, _26.0.1.1, _26.0.1.2, _41.fld1.0);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1.3 = _26.0.1.3 & _41.fld1.0;
_41.fld0.3.0 = (-23_i8) as u8;
_41.fld2.3 = _26.0.1.3 - Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.1.3;
_18.0.2 = _12 as u8;
place!(Field::<Adt42>(Variant(RET, 1), 5)) = Adt42::Variant1 { fld0: _13 };
_26.0.0.3 = _1.3;
_20.0.2.2 = !_26.2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0.1 = !_20.0.0.1;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1.2.0 = _26.0.1.2.0;
_20.0.0 = (_5, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.1, _41.fld1.2, _20.0.2.3);
place!(Field::<*mut i8>(Variant(_19, 1), 2)) = _10;
place!(Field::<*const i128>(Variant(_19, 1), 1)) = core::ptr::addr_of!(_48);
place!(Field::<isize>(Variant(RET, 1), 2)) = -_25;
Goto(bb21)
}
bb21 = {
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)) = _20;
place!(Field::<Adt42>(Variant(RET, 1), 5)) = Adt42::Variant0 { fld0: Field::<usize>(Variant(RET, 1), 3),fld1: _33,fld2: _41.fld2.2,fld3: Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2 };
place!(Field::<usize>(Variant(RET, 1), 3)) = Field::<usize>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 0);
_2 = _20.0.2.2 as i32;
place!(Field::<(u32,)>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 2)).0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.1.2.0 * _20.0.1.2.0;
_23 = core::ptr::addr_of_mut!(_48);
Goto(bb22)
}
bb22 = {
_41.fld2.1 = _14;
_48 = _41.fld2.2.0 as i128;
_26.0.0.1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2.1;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).2 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2.2;
_10 = Field::<*mut i8>(Variant(_19, 1), 2);
_18.0 = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.0, _20.0.0.1, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).2, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.3);
place!(Field::<*const i128>(Variant(_19, 1), 1)) = core::ptr::addr_of!(_27);
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 3)).3 = [56957263548168711303745974973247287934_u128,146822074650669124524026410769980882392_u128];
place!(Field::<*const i128>(Variant(_19, 1), 1)) = core::ptr::addr_of!((*_23));
_18.0.3 = [313413859528276604067928503822045311535_u128,24441681122187345055093830689874346498_u128];
_41.fld3 = Adt46::Variant2 { fld0: Field::<(i32, bool, u8, [u128; 2])>(Variant(Field::<Adt42>(Variant(RET, 1), 5), 0), 3).0,fld1: Move(Field::<Adt42>(Variant(RET, 1), 5)) };
_26.0 = (_18.0, _41.fld2, Field::<(i32, bool, u8, [u128; 2])>(Variant(Field::<Adt42>(Variant(_41.fld3, 2), 1), 0), 3));
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(place!(Field::<Adt42>(Variant(_41.fld3, 2), 1)), 0), 3)).0 = !_20.0.2.0;
place!(Field::<u32>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 2), 2)) = Field::<(u32,)>(Variant(Field::<Adt42>(Variant(_41.fld3, 2), 1), 0), 2).0;
_3 = (Field::<(u32,)>(Variant(Field::<Adt42>(Variant(_41.fld3, 2), 1), 0), 2).0,);
_26.2 = _20.0.1.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).2 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2.2 >> Field::<i32>(Variant(_41.fld3, 2), 0);
_52 = _41.fld0.1.0;
_3 = (Field::<(u32,)>(Variant(Field::<Adt42>(Variant(_41.fld3, 2), 1), 0), 2).0,);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0.1 = _26.2 == _41.fld2.0;
SetDiscriminant(_41.fld3, 2);
_7 = core::ptr::addr_of!(_41.fld1);
_26 = (_20.0, _16, _17.0.2);
_26.1 = Field::<usize>(Variant(RET, 1), 3) as isize;
_49 = (_26.0.0.3,);
_20.0.0.3 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.3;
Call(_41.fld0.3.1 = core::intrinsics::transmute(_26.0.1.1), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_17.0.3 = _26.0.2.3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1.0 = _26.0.0.2 | _26.2;
place!(Field::<u32>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 2), 2)) = 249788716225725803717002476457091839700_u128 as u32;
_9 = _7;
Goto(bb24)
}
bb24 = {
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.2.0 = _26.0.0.0;
_41.fld0.1 = (_15, _13, _23, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2.0);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.2.0 = _18.0.2 as i32;
_20.0.2.3 = _1.3;
_50 = Adt47::Variant2 { fld0: 19990_u16,fld1: _41.fld2.2 };
_20.0.1.2 = _26.0.1.2;
place!(Field::<Adt42>(Variant(RET, 1), 5)) = Adt42::Variant0 { fld0: Field::<usize>(Variant(RET, 1), 3),fld1: _33,fld2: Field::<(u32,)>(Variant(_50, 2), 1),fld3: Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2 };
_39 = _14;
_41.fld0.3.2.0 = _41.fld0.0 as u32;
SetDiscriminant(Field::<Adt42>(Variant(RET, 1), 5), 0);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.0.0 = _2;
_20.0.1.2.0 = _41.fld0.3.2.0 << _24;
place!(Field::<(i32, bool, u8, [u128; 2])>(Variant(place!(Field::<Adt42>(Variant(RET, 1), 5)), 0), 3)).1 = _4;
_4 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.0.1;
_52 = _41.fld0.1.0 >> Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3).0.2.0;
_20.0.2.0 = -_2;
_13 = [_12,_12,_12];
_26.0.0.3 = _49.0;
_12 = '\u{a4527}';
Goto(bb25)
}
bb25 = {
RET = Adt57::Variant0 { fld0: _49 };
_49 = Field::<([u128; 2],)>(Variant(RET, 0), 0);
_18.0.0 = _20.0.0.1 as i32;
_45 = [10279907432685151205_usize];
_41.fld2.2.0 = _41.fld0.3.2.0 * _41.fld0.3.2.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_19, 1), 3)).0.1.3 = -(*_7).0;
Goto(bb26)
}
bb26 = {
Call(_61 = dump_var(14_usize, 4_usize, Move(_4), 15_usize, Move(_15), 31_usize, Move(_31), 26_usize, Move(_26)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_61 = dump_var(14_usize, 6_usize, Move(_6), 2_usize, Move(_2), 34_usize, Move(_34), 33_usize, Move(_33)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_61 = dump_var(14_usize, 13_usize, Move(_13), 3_usize, Move(_3), 52_usize, Move(_52), 24_usize, Move(_24)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_61 = dump_var(14_usize, 49_usize, Move(_49), 8_usize, Move(_8), 45_usize, Move(_45), 62_usize, _62), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: bool,mut _3: i32,mut _4: i32,mut _5: bool) -> Adt57 {
mir! {
type RET = Adt57;
let _6: Adt44;
let _7: [usize; 2];
let _8: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2]));
let _9: (u32,);
let _10: f64;
let _11: *mut i128;
let _12: u16;
let _13: isize;
let _14: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32);
let _15: f32;
let _16: isize;
let _17: [u128; 2];
let _18: ([u128; 2],);
let _19: u32;
let _20: isize;
let _21: f32;
let _22: *mut u32;
let _23: isize;
let _24: (u8, [usize; 7], (u32,), i16);
let _25: ((i32, bool, u8, [u128; 2]),);
let _26: Adt53;
let _27: (i32, bool, u8, [u128; 2]);
let _28: isize;
let _29: Adt42;
let _30: ((i32, bool, u8, [u128; 2]),);
let _31: (i32, bool, u8, [u128; 2]);
let _32: Adt49;
let _33: i8;
let _34: &'static u16;
let _35: f64;
let _36: (i32, bool, u8, [u128; 2]);
let _37: ((i32, bool, u8, [u128; 2]),);
let _38: Adt48;
let _39: i8;
let _40: f32;
let _41: (u8, [usize; 7], (u32,), i16);
let _42: ();
let _43: ();
{
_4 = 8603043009199659857_usize as i32;
_2 = _1 ^ _5;
_2 = !_1;
_5 = !_2;
_7 = [12566550900769857004_usize,2594659802980716637_usize];
Goto(bb1)
}
bb1 = {
_8.0.1 = _1 >= _1;
_8.2.0 = _3;
_8.0.2 = 43_u8 ^ 65_u8;
_8.1.3 = (-469_i16);
_9.0 = 11682560063428791330_usize as u32;
_8.2.2 = '\u{982c0}' as u8;
_8.2.0 = 228775624444202397381056759980408684081_u128 as i32;
Goto(bb2)
}
bb2 = {
_8.1.1 = [11695578805043667640_usize,1_usize,5235111522754819403_usize,2_usize,6_usize,15765663464095630662_usize,3618498715961089347_usize];
_8.1.0 = _8.0.2 + _8.0.2;
_8.0.0 = _9.0 as i32;
_8.2.3 = [13619670407201227204011645263389865531_u128,186663783690694268937693105178122371096_u128];
_8.1.1 = [3833160020343091714_usize,6309711211534683037_usize,14728759093913216423_usize,4_usize,5_usize,1_usize,2_usize];
_8.1.2 = _9;
_8.0 = (_3, _1, _8.2.2, _8.2.3);
_8.2.0 = !_3;
_10 = _8.1.3 as f64;
_5 = !_8.0.1;
_8.2.3 = _8.0.3;
_8.1.0 = _8.2.2;
_4 = 89_i8 as i32;
_8.1.0 = _8.0.2;
_8.2.3 = [278809486562057012782368961853347791067_u128,255004542185987619550778032810892912955_u128];
_9.0 = _8.1.2.0;
_2 = !_1;
_10 = _8.1.3 as f64;
_13 = 67786828945322064249041675913658551499_u128 as isize;
_8.0.0 = !_8.2.0;
_9.0 = _8.1.2.0 & _8.1.2.0;
_14.3.2.0 = _8.1.0 as u32;
_14.4 = 53066088591823336179536211936547684494_i128 as f32;
_14.0 = _8.2.2 << _3;
Goto(bb3)
}
bb3 = {
_8.1.2 = (_9.0,);
_8.2.3 = [86897136823577704752587794812585829691_u128,34259162419962305359802312039354881060_u128];
_14.3.0 = _14.0 | _14.0;
_14.1.3 = _8.0.0;
_1 = !_2;
_8.0.0 = _10 as i32;
_3 = _8.2.0;
_10 = 46139991766257316108282641587283828063_u128 as f64;
_9 = (_14.3.2.0,);
_8.0.3 = [224404570736181414515720045955105156541_u128,176701687995752975513487898945168129442_u128];
_8.0.2 = _14.3.0 & _14.0;
_14.3.2 = _8.1.2;
_14.0 = _8.0.2;
_14.3.0 = _14.0 >> _14.1.3;
_14.1.1 = ['\u{9fe8a}','\u{d20a0}','\u{c4fa1}'];
_15 = -_14.4;
_8.1.3 = (-23574_i16) ^ (-8064_i16);
_13 = 44_isize >> _14.3.0;
Goto(bb4)
}
bb4 = {
_14.1.0 = _13;
_8.2.2 = _8.0.2 << _14.1.0;
_8.0 = (_8.2.0, _2, _8.2.2, _8.2.3);
_8.1.3 = (-11024_i16) ^ (-19054_i16);
_6 = Adt44::Variant0 { fld0: _9 };
_4 = -_8.2.0;
_4 = _13 as i32;
_15 = _8.1.3 as f32;
_8.2 = (_3, _8.0.1, _14.3.0, _8.0.3);
_18.0 = [44908633816781123333508075618165462866_u128,133029673345990799640310377546884968388_u128];
_8.2.0 = _4 - _8.0.0;
_17 = [194811467705635080512675093285808017955_u128,221347159357556186366719713421655760322_u128];
_10 = _9.0 as f64;
SetDiscriminant(_6, 0);
_10 = 39666385166539803340900161831888552690_u128 as f64;
RET = Adt57::Variant0 { fld0: _18 };
SetDiscriminant(RET, 1);
_14.3 = _8.1;
_17 = _8.2.3;
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant1 { fld0: _8.0.2,fld1: 83_i8,fld2: _14.1.1 };
Goto(bb5)
}
bb5 = {
_9.0 = _8.1.2.0 & _14.3.2.0;
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant1 { fld0: _8.2.2,fld1: 47_i8,fld2: _14.1.1 };
_8.2.0 = _14.1.3 >> _14.0;
_8.1.3 = _14.3.3 << _8.2.0;
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)) = 201924953683940130106411277275410142688_u128 as i8;
_8.2.2 = _14.3.0;
_12 = 33763_u16 & 3232_u16;
_6 = Adt44::Variant0 { fld0: _9 };
RET = Adt57::Variant0 { fld0: _18 };
_14.3.3 = _8.1.3;
_12 = 65426_u16;
SetDiscriminant(RET, 3);
_15 = _14.4;
Goto(bb6)
}
bb6 = {
_20 = !_14.1.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.0.1 = _8.1.3 <= _14.3.3;
_20 = _13;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.0 = _8.0.2;
_8.2.3 = [209023888428733583048318130480006425818_u128,230400067534086239230223041971636316328_u128];
place!(Field::<*const [i8; 5]>(Variant(RET, 3), 0)) = core::ptr::addr_of!(place!(Field::<[i8; 5]>(Variant(RET, 3), 1)));
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.0.3 = _8.2.3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)) = (_8, _20, _8.0.2);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)) = (_8, _20, _8.0.2);
SetDiscriminant(_6, 1);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)).0 = _12 as u8;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.2 = (_9.0,);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).2 as isize;
_24.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2 * Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.2;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)).3 = -Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.1.3;
_14.3.2 = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.2.0,);
_22 = core::ptr::addr_of_mut!(_8.1.2.0);
_24.1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.1;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.0 = (-4988401670515961516_i64) as u8;
_8.1.1 = [7_usize,12381763883262590621_usize,5_usize,12642968422590301294_usize,11495260941842061055_usize,7_usize,13236889500146525782_usize];
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)) = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2, _14.3.1, _9, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.1.3);
match _12 {
0 => bb4,
1 => bb2,
65426 => bb7,
_ => bb3
}
}
bb7 = {
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1 = _14.3;
_23 = 107_i8 as isize;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.0 = Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).0 & _24.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.2 = (_8.2.0, _5, _14.0, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.3);
_26.fld2 = _20 >> Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.2.0;
_14.0 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2;
_25.0.0 = _8.2.0 >> Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.3 = Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.2.0 = _8.1.2.0 | Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).2.0;
place!(Field::<[i8; 5]>(Variant(RET, 3), 1)) = [120_i8,95_i8,(-124_i8),(-88_i8),(-97_i8)];
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).2 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2;
_14.1.1 = ['\u{d0ee7}','\u{f9203}','\u{1f22f}'];
_8.0.1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.1;
place!(Field::<*mut [usize; 7]>(Variant(_6, 1), 6)) = core::ptr::addr_of_mut!(_8.1.1);
_32.fld2.2 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.2;
_25.0.1 = !_2;
_27.1 = _25.0.1;
place!(Field::<*const (i16, u32, u8)>(Variant(_6, 1), 4)) = core::ptr::addr_of!(_32.fld1);
_32.fld0.3.2 = (_9.0,);
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)).3 = _8.1.3 ^ Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).1 = _10 as isize;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)) = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1;
Goto(bb8)
}
bb8 = {
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.0 = (_8.2.0, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.1, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).2, _8.0.3);
_31.1 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.2.1;
_34 = &_12;
_8.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.2;
_15 = -_14.4;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.0 = 1_usize as u8;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.0.2 = 4736470214913057254_i64 as u8;
_26.fld3 = (*_34);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.0.2 = !Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).0;
_26.fld3 = (*_22) as u16;
_26.fld1 = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.3, _32.fld0.3.2.0, Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).0);
_31.2 = !_8.0.2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)) = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3);
_14.2 = core::ptr::addr_of_mut!(place!(Field::<[i8; 5]>(Variant(_6, 1), 5)));
_32.fld2 = _14.3;
_32.fld0.2 = _14.2;
_24.2.0 = _26.fld1.1 + (*_22);
_32.fld0.3.3 = _26.fld2 as i16;
_30.0.1 = _25.0.1;
_27 = (_25.0.0, _5, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.2.2, _8.2.3);
_26.fld2 = _24.2.0 as isize;
_32.fld2.2 = _8.1.2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.2 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.1 = [0_usize,6_usize,16174807995165628882_usize,3_usize,15234441340308987979_usize,3_usize,3_usize];
_32.fld0.4 = -_15;
RET = Adt57::Variant0 { fld0: _18 };
_32.fld4 = !_26.fld1.1;
match _12 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
65426 => bb14,
_ => bb13
}
}
bb9 = {
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1 = _14.3;
_23 = 107_i8 as isize;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.0 = Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).0 & _24.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.2 = (_8.2.0, _5, _14.0, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.3);
_26.fld2 = _20 >> Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.2.0;
_14.0 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2;
_25.0.0 = _8.2.0 >> Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).2;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.3 = Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.2.0 = _8.1.2.0 | Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3).2.0;
place!(Field::<[i8; 5]>(Variant(RET, 3), 1)) = [120_i8,95_i8,(-124_i8),(-88_i8),(-97_i8)];
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).2 = !Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2;
_14.1.1 = ['\u{d0ee7}','\u{f9203}','\u{1f22f}'];
_8.0.1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.1;
place!(Field::<*mut [usize; 7]>(Variant(_6, 1), 6)) = core::ptr::addr_of_mut!(_8.1.1);
_32.fld2.2 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.2;
_25.0.1 = !_2;
_27.1 = _25.0.1;
place!(Field::<*const (i16, u32, u8)>(Variant(_6, 1), 4)) = core::ptr::addr_of!(_32.fld1);
_32.fld0.3.2 = (_9.0,);
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)).3 = _8.1.3 ^ Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).1 = _10 as isize;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)) = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1;
Goto(bb8)
}
bb10 = {
_20 = !_14.1.0;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.0.1 = _8.1.3 <= _14.3.3;
_20 = _13;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.1.0 = _8.0.2;
_8.2.3 = [209023888428733583048318130480006425818_u128,230400067534086239230223041971636316328_u128];
place!(Field::<*const [i8; 5]>(Variant(RET, 3), 0)) = core::ptr::addr_of!(place!(Field::<[i8; 5]>(Variant(RET, 3), 1)));
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).0.0.3 = _8.2.3;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)) = (_8, _20, _8.0.2);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)) = (_8, _20, _8.0.2);
SetDiscriminant(_6, 1);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)).0 = _12 as u8;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.2 = (_9.0,);
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2)).1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).2 as isize;
_24.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2 * Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.2;
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)).3 = -Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.1.3;
_14.3.2 = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.2.0,);
_22 = core::ptr::addr_of_mut!(_8.1.2.0);
_24.1 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.1.1;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.0 = (-4988401670515961516_i64) as u8;
_8.1.1 = [7_usize,12381763883262590621_usize,5_usize,12642968422590301294_usize,11495260941842061055_usize,7_usize,13236889500146525782_usize];
place!(Field::<(u8, [usize; 7], (u32,), i16)>(Variant(RET, 3), 3)) = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(RET, 3), 2).0.0.2, _14.3.1, _9, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.1.3);
match _12 {
0 => bb4,
1 => bb2,
65426 => bb7,
_ => bb3
}
}
bb11 = {
_9.0 = _8.1.2.0 & _14.3.2.0;
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant1 { fld0: _8.2.2,fld1: 47_i8,fld2: _14.1.1 };
_8.2.0 = _14.1.3 >> _14.0;
_8.1.3 = _14.3.3 << _8.2.0;
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(RET, 1), 1)), 1), 1)) = 201924953683940130106411277275410142688_u128 as i8;
_8.2.2 = _14.3.0;
_12 = 33763_u16 & 3232_u16;
_6 = Adt44::Variant0 { fld0: _9 };
RET = Adt57::Variant0 { fld0: _18 };
_14.3.3 = _8.1.3;
_12 = 65426_u16;
SetDiscriminant(RET, 3);
_15 = _14.4;
Goto(bb6)
}
bb12 = {
_14.1.0 = _13;
_8.2.2 = _8.0.2 << _14.1.0;
_8.0 = (_8.2.0, _2, _8.2.2, _8.2.3);
_8.1.3 = (-11024_i16) ^ (-19054_i16);
_6 = Adt44::Variant0 { fld0: _9 };
_4 = -_8.2.0;
_4 = _13 as i32;
_15 = _8.1.3 as f32;
_8.2 = (_3, _8.0.1, _14.3.0, _8.0.3);
_18.0 = [44908633816781123333508075618165462866_u128,133029673345990799640310377546884968388_u128];
_8.2.0 = _4 - _8.0.0;
_17 = [194811467705635080512675093285808017955_u128,221347159357556186366719713421655760322_u128];
_10 = _9.0 as f64;
SetDiscriminant(_6, 0);
_10 = 39666385166539803340900161831888552690_u128 as f64;
RET = Adt57::Variant0 { fld0: _18 };
SetDiscriminant(RET, 1);
_14.3 = _8.1;
_17 = _8.2.3;
place!(Field::<Adt48>(Variant(RET, 1), 1)) = Adt48::Variant1 { fld0: _8.0.2,fld1: 83_i8,fld2: _14.1.1 };
Goto(bb5)
}
bb13 = {
_8.0.1 = _1 >= _1;
_8.2.0 = _3;
_8.0.2 = 43_u8 ^ 65_u8;
_8.1.3 = (-469_i16);
_9.0 = 11682560063428791330_usize as u32;
_8.2.2 = '\u{982c0}' as u8;
_8.2.0 = 228775624444202397381056759980408684081_u128 as i32;
Goto(bb2)
}
bb14 = {
_32.fld0.1.1 = ['\u{2a131}','\u{2e9fb}','\u{8781}'];
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.0 = 3_usize as u8;
_23 = _8.0.0 as isize;
_8.2.0 = Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.2.0;
place!(Field::<*mut i8>(Variant(_6, 1), 2)) = core::ptr::addr_of_mut!(_33);
_29 = Adt42::Variant1 { fld0: _14.1.1 };
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.0.3 = [276272817436098266678309692215070685409_u128,226104304773700521671022826593280869545_u128];
_14.3.3 = _25.0.1 as i16;
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.0 = _26.fld1.2;
_36.3 = [233828406199650322748609576864811584554_u128,283389177100408677091560492276266250962_u128];
_14.2 = core::ptr::addr_of_mut!(place!(Field::<[i8; 5]>(Variant(_6, 1), 5)));
_32.fld0.1.3 = _8.2.0;
_8 = (Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.2, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.1, Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0);
_8.0.3 = _18.0;
_32.fld3 = Adt46::Variant2 { fld0: Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3).0.0.0,fld1: Move(_29) };
place!(Field::<(((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8)>(Variant(_6, 1), 3)).0.1.2 = _24.2;
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(15_usize, 27_usize, Move(_27), 3_usize, Move(_3), 12_usize, Move(_12), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(15_usize, 5_usize, Move(_5), 17_usize, Move(_17), 20_usize, Move(_20), 43_usize, _43), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])),mut _2: ((i32, bool, u8, [u128; 2]),),mut _3: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2]))) -> (i32, bool, u8, [u128; 2]) {
mir! {
type RET = (i32, bool, u8, [u128; 2]);
let _4: [i8; 5];
let _5: char;
let _6: isize;
let _7: i128;
let _8: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32);
let _9: (i32, bool, u8, [u128; 2]);
let _10: (i32, bool, u8, [u128; 2]);
let _11: ();
let _12: ();
{
_1.2.0 = _3.2.0;
RET.3 = [98796345774406914806910055477609832158_u128,159572520264075088362049709846063678500_u128];
_3.1.3 = !_1.1.3;
RET.2 = _1.1.0 << _1.0.0;
_2 = (_3.0,);
_4 = [(-11_i8),48_i8,82_i8,85_i8,66_i8];
_3.1 = (RET.2, _1.1.1, _1.1.2, _1.1.3);
_1.0 = _3.2;
Goto(bb1)
}
bb1 = {
_3.2.0 = '\u{75914}' as i32;
_2.0.1 = _1.0.1 & _1.2.1;
_7 = (-30880995821151775217443466782331404715_i128);
RET = (_3.0.0, _2.0.1, _3.1.0, _1.0.3);
_2 = (_3.0,);
RET = (_2.0.0, _1.2.1, _3.0.2, _3.0.3);
_1.2.3 = [100750301086015720825229341828913158850_u128,199965437162617145589768655522573390703_u128];
_1.0.1 = _3.0.1;
_6 = 29111_u16 as isize;
_1.1.1 = [6_usize,4_usize,3710330442371928194_usize,1488058401469570530_usize,2237164913157380322_usize,0_usize,5_usize];
_1.1.0 = _3.1.0 + _3.1.0;
_8.1.1 = ['\u{ba788}','\u{4c7bb}','\u{ec905}'];
_3.1.0 = _1.1.0 & _1.1.0;
_1.0 = (RET.0, _2.0.1, _3.1.0, _2.0.3);
_1.0.3 = _2.0.3;
_2.0.3 = _1.0.3;
_8.1.0 = _6 - _6;
_8.3.2.0 = _3.1.2.0;
_1.0.0 = _1.2.1 as i32;
Goto(bb2)
}
bb2 = {
Call(_11 = dump_var(16_usize, 6_usize, Move(_6), 4_usize, Move(_4), 2_usize, Move(_2), 12_usize, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: u8,mut _2: u64) -> [u128; 2] {
mir! {
type RET = [u128; 2];
let _3: ((i32, bool, u8, [u128; 2]),);
let _4: f64;
let _5: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2]));
let _6: u64;
let _7: (u32,);
let _8: f32;
let _9: isize;
let _10: f32;
let _11: usize;
let _12: u32;
let _13: [char; 3];
let _14: char;
let _15: Adt52;
let _16: Adt51;
let _17: (i16, u32, u8);
let _18: *const [i8; 5];
let _19: f32;
let _20: u128;
let _21: f32;
let _22: ();
let _23: ();
{
_1 = 251_u8;
_1 = 8554499837422615931_i64 as u8;
RET = [170970383061267807994949579670327711906_u128,305792746700506962465106416350904540936_u128];
_1 = 32056224175553736766528488908617496279_u128 as u8;
_2 = 12817502977649981978_u64;
_2 = 10390161082387581016_u64;
RET = [37227273218565437166356201528664352373_u128,266803690902953620993462622506667543301_u128];
RET = [163637357946154828787499200260403100187_u128,321256114834392258295314922671867602115_u128];
RET = [135932274405444322832690740238085918500_u128,139095542486117399139603317762851543508_u128];
RET = [320931035047425026615551866014773516712_u128,173969459513479963886900530324014848947_u128];
_1 = 203_u8 | 106_u8;
_2 = 8772543750025181500_u64;
RET = [279658668015606012012609006251191448579_u128,326372999515952343178697861388657309047_u128];
_1 = 56123_u16 as u8;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
8772543750025181500 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_1 = 134_u8 >> _2;
_2 = 15891744153029361555_u64 + 17816224440824848580_u64;
_3.0.2 = !_1;
_3.0.3 = [248554649452424787620904267568964145161_u128,242329433131073151630307682092277869901_u128];
_4 = (-83_i8) as f64;
_3.0.0 = (-1151695323_i32);
_3.0.3 = [2412660525879382452125351603333657318_u128,144682920304818461739571912496302632156_u128];
_3.0 = (1290460945_i32, true, _1, RET);
_3.0.0 = !(-565525315_i32);
_3.0.2 = !_1;
_3.0 = ((-544629319_i32), true, _1, RET);
_5.0.3 = [296344502317578474670225232100408989187_u128,315623085552262939206070558836767506120_u128];
_5.0 = (_3.0.0, _3.0.1, _3.0.2, RET);
_5.2 = _5.0;
_5.2.1 = _5.2.0 < _3.0.0;
_5.2.1 = _5.0.1;
_5.2.1 = _5.0.1 ^ _5.0.1;
_6 = 691893364_u32 as u64;
_4 = 116753092442076276855937875728052080927_u128 as f64;
_8 = _5.0.0 as f32;
_5.0.3 = [205899535048706318031202778109874309653_u128,5176632060123337503766082435307011687_u128];
_5.2.2 = _1 * _1;
_5.1.0 = !_3.0.2;
_5.0.1 = _3.0.1;
_5.1.2 = (123636048_u32,);
match _5.0.0 {
340282366920938463463374607431223582137 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
_5.1.0 = _5.2.2 | _5.2.2;
_7.0 = _5.1.2.0;
_3.0.2 = 69_i8 as u8;
_3.0 = (_5.0.0, _5.2.1, _5.2.2, _5.0.3);
_9 = -(-119_isize);
_5.0.3 = RET;
Call(_2 = fn18(_3.0.1, _3.0.0, _5.0.0, _5.1.0, _5.0.0, _3.0.0, _5.1.0, _3.0, _3, _3.0, _5.2.3), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_4 = 5672395728516226721_usize as f64;
_5.1.1 = [734254529650273857_usize,10266827295897207660_usize,1_usize,3_usize,7_usize,15173751359532258182_usize,5_usize];
_5.0.0 = _5.2.0 << _2;
_5.2.2 = 4291607595695353321_i64 as u8;
_11 = 3793682903049447029_usize;
_5.2.3 = _3.0.3;
_3.0.1 = !_5.2.1;
_1 = !_3.0.2;
_5.0 = (_5.2.0, _3.0.1, _5.1.0, _5.2.3);
_8 = _3.0.0 as f32;
_5.2.3 = [126174737162909133953569466733461204034_u128,46578499249030117294594548891694509813_u128];
match _5.2.0 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb5,
340282366920938463463374607431223582137 => bb11,
_ => bb9
}
}
bb11 = {
_6 = _2;
Goto(bb12)
}
bb12 = {
_5.0.0 = _5.2.0 & _3.0.0;
_1 = !_3.0.2;
Goto(bb13)
}
bb13 = {
_5.2 = _3.0;
_10 = _8 - _8;
_13 = ['\u{a7adb}','\u{2f01d}','\u{8d7f4}'];
_5.0.2 = _5.2.2 - _5.1.0;
_7.0 = _5.1.2.0;
_12 = _5.2.1 as u32;
_5.2.1 = _3.0.1 & _5.0.1;
_5.0.3 = RET;
_5.0.0 = _5.2.0;
_5.1.2.0 = _5.2.2 as u32;
_5.0 = _3.0;
_17 = (20348_i16, _12, _3.0.2);
_5.1.2 = (_12,);
_5.0.2 = 36466639193832709569188785515663891129_i128 as u8;
_5.1.0 = _4 as u8;
_5.0.3 = [28903559245589736159500609985163704757_u128,30576459785147500769348643113419614739_u128];
_7 = (_17.1,);
_1 = !_3.0.2;
_5.2.3 = [111664943633473658863599587831695796559_u128,82456637000125646251456748102658404048_u128];
_11 = 1_usize;
_3.0.3[_11] = _5.0.3[_11] * RET[_11];
_17 = (32422_i16, _7.0, _5.2.2);
_5.0.3[_11] = !RET[_11];
_5.2 = _5.0;
_5.1.2 = (_17.1,);
Goto(bb14)
}
bb14 = {
_17.0 = 21542_i16 - (-8390_i16);
_14 = _13[_11];
_20 = !RET[_11];
_5.1.0 = _1 * _3.0.2;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(17_usize, 6_usize, Move(_6), 9_usize, Move(_9), 11_usize, Move(_11), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(17_usize, 13_usize, Move(_13), 1_usize, Move(_1), 23_usize, _23, 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: bool,mut _2: i32,mut _3: i32,mut _4: u8,mut _5: i32,mut _6: i32,mut _7: u8,mut _8: (i32, bool, u8, [u128; 2]),mut _9: ((i32, bool, u8, [u128; 2]),),mut _10: (i32, bool, u8, [u128; 2]),mut _11: [u128; 2]) -> u64 {
mir! {
type RET = u64;
let _12: Adt54;
let _13: bool;
let _14: u128;
let _15: bool;
let _16: Adt44;
let _17: isize;
let _18: u128;
let _19: [usize; 1];
let _20: [usize; 1];
let _21: ((i32, bool, u8, [u128; 2]),);
let _22: isize;
let _23: isize;
let _24: bool;
let _25: u8;
let _26: *mut [i8; 5];
let _27: ((i32, bool, u8, [u128; 2]),);
let _28: i16;
let _29: Adt42;
let _30: ();
let _31: ();
{
_8.0 = _10.2 as i32;
_9.0.0 = _8.0;
_10.1 = _9.0.1;
_11 = [84356586416896707595253067053106402228_u128,159446049393923829606746683339451738776_u128];
RET = 8183771101905760200_u64;
_5 = _6 * _10.0;
_9.0.0 = 1261671169_u32 as i32;
_9.0.2 = !_7;
_9.0.2 = _4;
_10.2 = _7 << _2;
_9.0.2 = _4;
_9.0.0 = (-26027_i16) as i32;
_1 = !_9.0.1;
_10 = (_3, _1, _9.0.2, _9.0.3);
_8 = (_10.0, _1, _4, _10.3);
RET = !5460075627019972306_u64;
_9.0.2 = !_4;
match _3 {
0 => bb1,
340282366920938463463374607431223582137 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_8.2 = !_10.2;
RET = 4287386547874635159_u64;
_8.2 = 9223372036854775807_isize as u8;
_6 = 3505_u16 as i32;
_11 = [32632592963734994476697892009452958677_u128,86891945229829958829771741693270808086_u128];
_4 = !_9.0.2;
_6 = _10.0 | _8.0;
_9.0.0 = !_3;
_8 = (_3, _9.0.1, _7, _9.0.3);
_9.0.2 = _6 as u8;
_2 = !_6;
_9 = (_8,);
_8.2 = _7;
_13 = _10.1 == _1;
_9.0.1 = _10.2 != _9.0.2;
_11 = _9.0.3;
_14 = !122479714819341509407994331891952765308_u128;
_9.0 = _8;
_9.0.3 = [_14,_14];
_9 = (_10,);
_14 = 28012191914932417667412624314006877775_u128 & 88467418424084138773227162950275238694_u128;
_8 = (_5, _1, _7, _10.3);
_10.0 = _8.0 * _5;
_8.0 = 15754414783934679934_usize as i32;
_9.0.3 = [_14,_14];
_6 = _10.0 >> _7;
_8.2 = (-82797369499620796023669282039022897162_i128) as u8;
_11 = _10.3;
match _3 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431223582137 => bb9,
_ => bb8
}
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_7 = _4;
_10.1 = !_9.0.1;
_3 = _9.0.0 * _2;
_7 = _5 as u8;
_9.0.2 = _7;
_10.3 = [_14,_14];
_8.0 = _3;
_9.0.0 = '\u{93939}' as i32;
_3 = 52857_u16 as i32;
_8.0 = -_3;
_14 = !28017917124990513517958905739656378484_u128;
_7 = _10.2 + _4;
_10.1 = _9.0.2 < _10.2;
_10.0 = _6;
_10.0 = !_2;
_6 = _5 - _10.0;
RET = 4917062554882007866_u64;
_10.0 = _5 * _6;
_15 = _10.1;
Goto(bb10)
}
bb10 = {
RET = 11328695476688188984_u64 + 7527515602591856895_u64;
_8.2 = _6 as u8;
_14 = !148792107512770008667290498695059180785_u128;
Goto(bb11)
}
bb11 = {
_10 = _8;
_10 = _9.0;
_11 = [_14,_14];
_18 = (-53119697074122782438401989489020582783_i128) as u128;
_8 = (_6, _13, _7, _11);
_18 = _14;
_17 = !9223372036854775807_isize;
_1 = _2 > _8.0;
_21.0.1 = _7 < _10.2;
_4 = !_9.0.2;
RET = 683899453507165340_u64;
_20 = [2_usize];
_9.0.1 = _8.1 & _15;
_10.2 = !_7;
_9.0.3 = [_18,_18];
_8.1 = _1;
_11 = _10.3;
_15 = !_8.1;
Goto(bb12)
}
bb12 = {
_2 = _8.0 ^ _6;
RET = 1_usize as u64;
_10.0 = _2;
_2 = 68_i8 as i32;
_22 = RET as isize;
_11 = [_14,_14];
_22 = _17 + _17;
_21.0.0 = _8.0 & _8.0;
_20 = [5782550098583571387_usize];
_21.0.0 = _9.0.0;
_27.0.1 = _8.1 > _9.0.1;
_27.0.3 = [_18,_18];
_27 = (_10,);
_4 = _8.2 >> _6;
_2 = _6;
_21.0.0 = -_6;
_2 = _6;
_24 = _9.0.1;
_27.0.0 = -_2;
RET = _9.0.1 as u64;
Goto(bb13)
}
bb13 = {
Call(_30 = dump_var(18_usize, 1_usize, Move(_1), 22_usize, Move(_22), 17_usize, Move(_17), 11_usize, Move(_11)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_30 = dump_var(18_usize, 3_usize, Move(_3), 24_usize, Move(_24), 4_usize, Move(_4), 18_usize, Move(_18)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_30 = dump_var(18_usize, 6_usize, Move(_6), 27_usize, Move(_27), 31_usize, _31, 31_usize, _31), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{e7956}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(898697255_u32), std::hint::black_box((-57330057075994201838754907223382300374_i128)), std::hint::black_box(1315275414_i32));
                
            }
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: usize,
fld1: [usize; 1],
fld2: (u32,),
fld3: (i32, bool, u8, [u128; 2]),

},
Variant1{
fld0: [char; 3],

}}
#[derive(Debug)]
pub struct Adt43 {
fld0: u16,
fld1: i128,
fld2: *const (i16, u32, u8),
fld3: *mut [usize; 7],
fld4: [char; 3],
}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: (u32,),

},
Variant1{
fld0: u32,
fld1: *const i128,
fld2: *mut i8,
fld3: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),
fld4: *const (i16, u32, u8),
fld5: [i8; 5],
fld6: *mut [usize; 7],

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: *const (i16, u32, u8),
fld1: (u32,),
fld2: isize,
fld3: (i16, u32, u8),
fld4: [usize; 1],
fld5: *mut [usize; 7],
fld6: i64,
fld7: i128,

},
Variant1{
fld0: [char; 3],
fld1: u8,
fld2: isize,
fld3: u64,
fld4: (i32, bool, u8, [u128; 2]),
fld5: i32,
fld6: f64,

},
Variant2{
fld0: [usize; 2],
fld1: (isize, [char; 3], *mut i128, i32),
fld2: Adt43,
fld3: (i16, u32, u8),

},
Variant3{
fld0: f32,
fld1: [usize; 7],
fld2: isize,
fld3: (i32, bool, u8, [u128; 2]),
fld4: *mut u32,
fld5: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32),
fld6: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: Adt42,
fld1: [usize; 2],
fld2: *mut [usize; 7],

},
Variant1{
fld0: (i32, bool, u8, [u128; 2]),
fld1: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32),
fld2: f64,
fld3: Adt44,
fld4: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),
fld5: f32,
fld6: u16,
fld7: ([u128; 2],),

},
Variant2{
fld0: i32,
fld1: Adt42,

},
Variant3{
fld0: *mut [usize; 7],
fld1: u128,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: Adt46,
fld1: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])),
fld2: *mut [i8; 5],
fld3: i8,
fld4: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),
fld5: [i8; 5],

},
Variant1{
fld0: u64,
fld1: *const (i16, u32, u8),
fld2: Adt46,
fld3: *mut i8,
fld4: ((i32, bool, u8, [u128; 2]),),
fld5: *const [i8; 5],

},
Variant2{
fld0: u16,
fld1: (u32,),

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: i16,

},
Variant1{
fld0: u8,
fld1: i8,
fld2: [char; 3],

},
Variant2{
fld0: Adt45,
fld1: Adt47,
fld2: u32,
fld3: f64,

},
Variant3{
fld0: ([u128; 2],),
fld1: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32),
fld2: u128,
fld3: Adt47,

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: (u8, (isize, [char; 3], *mut i128, i32), *mut [i8; 5], (u8, [usize; 7], (u32,), i16), f32),
fld1: (i16, u32, u8),
fld2: (u8, [usize; 7], (u32,), i16),
fld3: Adt46,
fld4: u32,
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: Adt47,
fld1: [char; 3],
fld2: isize,
fld3: i128,
fld4: [i8; 5],
fld5: u64,

},
Variant1{
fld0: ((i32, bool, u8, [u128; 2]),),
fld1: u16,
fld2: *const [i8; 5],
fld3: Adt48,
fld4: (u32,),
fld5: *const i128,

},
Variant2{
fld0: f32,
fld1: *const i128,
fld2: [i8; 5],
fld3: ((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])),
fld4: Adt45,
fld5: (i32, bool, u8, [u128; 2]),
fld6: Adt44,

},
Variant3{
fld0: Adt46,
fld1: *mut [i8; 5],
fld2: Adt49,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: bool,
fld1: Adt50,
fld2: Adt43,
fld3: u16,

},
Variant1{
fld0: bool,
fld1: (u32,),
fld2: Adt49,
fld3: [i8; 5],
fld4: [u128; 2],
fld5: f32,

},
Variant2{
fld0: [u128; 2],
fld1: Adt50,
fld2: [usize; 1],
fld3: [char; 3],
fld4: usize,
fld5: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: [i8; 5],
fld1: (i32, bool, u8, [u128; 2]),
fld2: f32,
fld3: Adt45,
fld4: *const [i8; 5],
fld5: Adt44,
fld6: [usize; 1],

},
Variant1{
fld0: [usize; 2],
fld1: Adt44,
fld2: [usize; 7],

}}
#[derive(Debug)]
pub struct Adt53 {
fld0: (u32,),
fld1: (i16, u32, u8),
fld2: isize,
fld3: u16,
fld4: Adt50,
}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [char; 3],

},
Variant1{
fld0: u8,
fld1: Adt45,
fld2: [usize; 1],
fld3: i8,
fld4: i64,
fld5: Adt53,

},
Variant2{
fld0: Adt49,

},
Variant3{
fld0: bool,
fld1: [usize; 1],
fld2: Adt42,
fld3: Adt45,
fld4: (i16, u32, u8),
fld5: u16,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: bool,
fld1: ((i32, bool, u8, [u128; 2]),),
fld2: usize,
fld3: *const (i16, u32, u8),
fld4: Adt46,
fld5: [usize; 1],
fld6: Adt44,

},
Variant1{
fld0: *mut [usize; 7],
fld1: [char; 3],
fld2: isize,
fld3: f32,
fld4: u8,
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *const i128,
fld1: [i8; 5],
fld2: *mut u32,
fld3: i8,
fld4: *mut [i8; 5],
fld5: u8,
fld6: Adt44,

},
Variant1{
fld0: u128,
fld1: *const (i16, u32, u8),
fld2: [char; 3],

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: ([u128; 2],),

},
Variant1{
fld0: u64,
fld1: Adt48,
fld2: isize,
fld3: usize,
fld4: i64,
fld5: Adt42,

},
Variant2{
fld0: *const i128,
fld1: u64,
fld2: Adt54,
fld3: (isize, [char; 3], *mut i128, i32),
fld4: i32,

},
Variant3{
fld0: *const [i8; 5],
fld1: [i8; 5],
fld2: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),
fld3: (u8, [usize; 7], (u32,), i16),
fld4: Adt56,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: Adt50,
fld1: (i16, u32, u8),
fld2: Adt49,
fld3: u128,

},
Variant1{
fld0: Adt46,

},
Variant2{
fld0: [usize; 1],
fld1: Adt56,
fld2: Adt54,
fld3: (isize, [char; 3], *mut i128, i32),
fld4: (((i32, bool, u8, [u128; 2]), (u8, [usize; 7], (u32,), i16), (i32, bool, u8, [u128; 2])), isize, u8),
fld5: *mut [usize; 7],

}}

