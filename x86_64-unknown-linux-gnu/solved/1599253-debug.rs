#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u16,mut _3: isize,mut _4: u32) -> [u64; 5] {
mir! {
type RET = [u64; 5];
let _5: char;
let _6: u16;
let _7: [isize; 7];
let _8: [bool; 4];
let _9: [bool; 4];
let _10: i32;
let _11: u128;
let _12: u64;
let _13: i16;
let _14: u64;
let _15: ();
let _16: ();
{
RET = [9771040268765698893_u64,5440031048080977675_u64,6242437882649625224_u64,12772540757149747924_u64,14924868505392625168_u64];
RET = [16812855392728435706_u64,5094184432539850263_u64,13500918420274839603_u64,7334978222319803971_u64,2625913105162919859_u64];
_3 = false as isize;
_3 = 17363_u16 as isize;
RET = [3117089117353337677_u64,12824899671830499319_u64,11397442316159783813_u64,4544192895335795726_u64,1642763053169621751_u64];
_2 = 6985_u16 >> _3;
_1 = true;
RET = [10980719951394285720_u64,1022366854085797680_u64,9035068293886711874_u64,3006385132660503562_u64,10007839017708803955_u64];
Call(_6 = fn1(RET, _1, _1, _1, RET, RET, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = '\u{6bb20}';
RET = [15715117284196539262_u64,8492991911287034787_u64,5588635463640501766_u64,11229159422140565854_u64,1689973343615524073_u64];
_7 = [_3,_3,_3,_3,_3,_3,_3];
_8 = [_1,_1,_1,_1];
_5 = '\u{61fac}';
RET = [7360388840790278360_u64,3908228409417963400_u64,1626908216940638094_u64,7128897221214375651_u64,16290889662350452775_u64];
_4 = 10193444800603507870_u64 as u32;
RET = [596518150808922376_u64,14319142806035993622_u64,6565376244131990869_u64,12926383745244528728_u64,4162903102288771232_u64];
_2 = !_6;
_5 = '\u{ee68d}';
Goto(bb2)
}
bb2 = {
_1 = _6 > _6;
_9 = [_1,_1,_1,_1];
RET = [10286393827970067633_u64,15790286114687490043_u64,5692235859447477372_u64,8392284782309816927_u64,11268109514737191905_u64];
_10 = 664527377_i32 * (-852170756_i32);
_2 = 2747883367065685565_i64 as u16;
_11 = 252263731869374061746618485708809099882_u128 * 104855270413450203413439428598558881691_u128;
_4 = (-6591_i16) as u32;
_12 = 6846523316527772741_u64 >> _6;
_13 = !25020_i16;
RET = [_12,_12,_12,_12,_12];
_6 = _2 & _2;
_2 = _6 + _6;
_5 = '\u{6f082}';
_1 = true;
_10 = _11 as i32;
_9 = _8;
Goto(bb3)
}
bb3 = {
Call(_15 = dump_var(0_usize, 5_usize, Move(_5), 10_usize, Move(_10), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_15 = dump_var(0_usize, 12_usize, Move(_12), 1_usize, Move(_1), 16_usize, _16, 16_usize, _16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: [u64; 5],mut _2: bool,mut _3: bool,mut _4: bool,mut _5: [u64; 5],mut _6: [u64; 5],mut _7: u16) -> u16 {
mir! {
type RET = u16;
let _8: *const u128;
let _9: i8;
let _10: u8;
let _11: char;
let _12: i64;
let _13: Adt56;
let _14: Adt50;
let _15: f32;
let _16: Adt56;
let _17: char;
let _18: (bool,);
let _19: isize;
let _20: i128;
let _21: i128;
let _22: i8;
let _23: Adt50;
let _24: i128;
let _25: (u128,);
let _26: isize;
let _27: ();
let _28: ();
{
_3 = !_4;
Goto(bb1)
}
bb1 = {
_1 = [12766396572116568757_u64,952200703426576877_u64,8212397862932852831_u64,16867577908613090404_u64,5857043728097457669_u64];
_4 = !_3;
_5 = [12699494176685746093_u64,13364096244133659682_u64,14426664737926597920_u64,12578952956344662021_u64,18338989726848838406_u64];
_3 = _2 == _2;
_5 = [16049891210110098844_u64,13436057288399979640_u64,6084302936617029948_u64,12395883545790102257_u64,7501250670762979716_u64];
RET = 48058350740323992403937500510633263030_u128 as u16;
_7 = !RET;
RET = 102_i8 as u16;
_6 = [12413530954314343682_u64,119155450975509988_u64,11303728068976294582_u64,6432110546853469580_u64,15864615749333533549_u64];
_2 = _3 < _3;
_1 = [7164508757093354119_u64,14046726159747275029_u64,13280270299880740037_u64,1123202100422861678_u64,10272670064322646665_u64];
_7 = RET | RET;
RET = !_7;
_6 = _5;
RET = !_7;
_4 = _3 > _2;
_5 = [9904849276547906877_u64,1615076418515897036_u64,17552040447751425006_u64,4405036183947999764_u64,17840943287316367466_u64];
_1 = _6;
_7 = RET & RET;
_7 = RET - RET;
_3 = _4;
_5 = [13174886692360149818_u64,3853728581501825126_u64,15539769795199195059_u64,16057760116841175725_u64,7188795424519965207_u64];
_7 = RET;
_3 = !_2;
_7 = !RET;
_9 = 123_i8 - 74_i8;
Call(RET = fn2(_7, _2, _5, _5, _6, _9, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = _1;
_7 = RET;
RET = 9357160211987385193_usize as u16;
Call(_7 = core::intrinsics::bswap(RET), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = !39_u8;
RET = _7 * _7;
_6 = [13393547867780853682_u64,1408218668223100464_u64,13630644620373796622_u64,9691649577322030915_u64,11268147616152373894_u64];
_7 = RET;
_1 = _6;
RET = (-9223372036854775808_isize) as u16;
_3 = _4 == _2;
_9 = (-42_i8) & 98_i8;
_10 = 193_u8 >> _7;
Call(_10 = core::intrinsics::bswap(244_u8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = 64_i8 - 100_i8;
_1 = [11226724912163918214_u64,11530873484925121064_u64,17750402918758083968_u64,13892828764351103106_u64,2326866307360589724_u64];
_2 = _4;
_3 = _2;
_10 = !77_u8;
_5 = _6;
_11 = '\u{f701}';
_11 = '\u{e483a}';
_9 = 40_i8;
_5 = [18382592404947277867_u64,6192227339253640617_u64,16787149715520162120_u64,1269761731267633939_u64,17054388265020607421_u64];
_3 = _11 != _11;
_6 = [5788607115258260251_u64,14408564931095311462_u64,7414202686409047698_u64,17083669742703651724_u64,6664274552024054792_u64];
RET = _10 as u16;
_1 = [2167765223966196764_u64,3072543785042634230_u64,5357290982007532783_u64,11562817410590152382_u64,9397998982202220270_u64];
RET = 8756519895462794064_i64 as u16;
RET = !_7;
_11 = '\u{c1f4f}';
match _9 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
40 => bb9,
_ => bb8
}
}
bb5 = {
_10 = !39_u8;
RET = _7 * _7;
_6 = [13393547867780853682_u64,1408218668223100464_u64,13630644620373796622_u64,9691649577322030915_u64,11268147616152373894_u64];
_7 = RET;
_1 = _6;
RET = (-9223372036854775808_isize) as u16;
_3 = _4 == _2;
_9 = (-42_i8) & 98_i8;
_10 = 193_u8 >> _7;
Call(_10 = core::intrinsics::bswap(244_u8), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_6 = _1;
_7 = RET;
RET = 9357160211987385193_usize as u16;
Call(_7 = core::intrinsics::bswap(RET), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_1 = [12766396572116568757_u64,952200703426576877_u64,8212397862932852831_u64,16867577908613090404_u64,5857043728097457669_u64];
_4 = !_3;
_5 = [12699494176685746093_u64,13364096244133659682_u64,14426664737926597920_u64,12578952956344662021_u64,18338989726848838406_u64];
_3 = _2 == _2;
_5 = [16049891210110098844_u64,13436057288399979640_u64,6084302936617029948_u64,12395883545790102257_u64,7501250670762979716_u64];
RET = 48058350740323992403937500510633263030_u128 as u16;
_7 = !RET;
RET = 102_i8 as u16;
_6 = [12413530954314343682_u64,119155450975509988_u64,11303728068976294582_u64,6432110546853469580_u64,15864615749333533549_u64];
_2 = _3 < _3;
_1 = [7164508757093354119_u64,14046726159747275029_u64,13280270299880740037_u64,1123202100422861678_u64,10272670064322646665_u64];
_7 = RET | RET;
RET = !_7;
_6 = _5;
RET = !_7;
_4 = _3 > _2;
_5 = [9904849276547906877_u64,1615076418515897036_u64,17552040447751425006_u64,4405036183947999764_u64,17840943287316367466_u64];
_1 = _6;
_7 = RET & RET;
_7 = RET - RET;
_3 = _4;
_5 = [13174886692360149818_u64,3853728581501825126_u64,15539769795199195059_u64,16057760116841175725_u64,7188795424519965207_u64];
_7 = RET;
_3 = !_2;
_7 = !RET;
_9 = 123_i8 - 74_i8;
Call(RET = fn2(_7, _2, _5, _5, _6, _9, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_4 = !_3;
RET = _7 + _7;
_12 = !(-7768498797440272297_i64);
RET = !_7;
RET = _7 | _7;
_9 = 27_i8 & 59_i8;
_1 = [4573461548110081637_u64,7557572009970663998_u64,8823835974407692172_u64,97542249506749853_u64,8344562835591608883_u64];
RET = _7;
_7 = RET;
_15 = _9 as f32;
_12 = -(-155334451400733221_i64);
_6 = _5;
_18 = (_2,);
_5 = _6;
_7 = _12 as u16;
_9 = (-106_i8);
match _9 {
0 => bb6,
1 => bb5,
2 => bb8,
340282366920938463463374607431768211350 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_9 = 40_i8 >> _10;
_19 = -9223372036854775807_isize;
_11 = '\u{9b733}';
Goto(bb12)
}
bb12 = {
_2 = _18.0;
_22 = _9;
_7 = _2 as u16;
_23.fld0 = core::ptr::addr_of!(_25.0);
_24 = !(-133226779843848039389431149519441273208_i128);
_25 = (323266227160132144449107613678812486396_u128,);
_10 = _7 as u8;
match _25.0 {
0 => bb5,
1 => bb13,
2 => bb14,
323266227160132144449107613678812486396 => bb16,
_ => bb15
}
}
bb13 = {
_1 = [12766396572116568757_u64,952200703426576877_u64,8212397862932852831_u64,16867577908613090404_u64,5857043728097457669_u64];
_4 = !_3;
_5 = [12699494176685746093_u64,13364096244133659682_u64,14426664737926597920_u64,12578952956344662021_u64,18338989726848838406_u64];
_3 = _2 == _2;
_5 = [16049891210110098844_u64,13436057288399979640_u64,6084302936617029948_u64,12395883545790102257_u64,7501250670762979716_u64];
RET = 48058350740323992403937500510633263030_u128 as u16;
_7 = !RET;
RET = 102_i8 as u16;
_6 = [12413530954314343682_u64,119155450975509988_u64,11303728068976294582_u64,6432110546853469580_u64,15864615749333533549_u64];
_2 = _3 < _3;
_1 = [7164508757093354119_u64,14046726159747275029_u64,13280270299880740037_u64,1123202100422861678_u64,10272670064322646665_u64];
_7 = RET | RET;
RET = !_7;
_6 = _5;
RET = !_7;
_4 = _3 > _2;
_5 = [9904849276547906877_u64,1615076418515897036_u64,17552040447751425006_u64,4405036183947999764_u64,17840943287316367466_u64];
_1 = _6;
_7 = RET & RET;
_7 = RET - RET;
_3 = _4;
_5 = [13174886692360149818_u64,3853728581501825126_u64,15539769795199195059_u64,16057760116841175725_u64,7188795424519965207_u64];
_7 = RET;
_3 = !_2;
_7 = !RET;
_9 = 123_i8 - 74_i8;
Call(RET = fn2(_7, _2, _5, _5, _6, _9, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
_6 = _1;
_7 = RET;
RET = 9357160211987385193_usize as u16;
Call(_7 = core::intrinsics::bswap(RET), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_20 = _24 ^ _24;
_15 = 2021471630_i32 as f32;
_26 = -_19;
_23.fld0 = core::ptr::addr_of!(_25.0);
_19 = _26 | _26;
RET = _7 << _10;
Goto(bb17)
}
bb17 = {
Call(_27 = dump_var(1_usize, 10_usize, Move(_10), 20_usize, Move(_20), 11_usize, Move(_11), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_27 = dump_var(1_usize, 12_usize, Move(_12), 22_usize, Move(_22), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_27 = dump_var(1_usize, 2_usize, Move(_2), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: u16,mut _2: bool,mut _3: [u64; 5],mut _4: [u64; 5],mut _5: [u64; 5],mut _6: i8,mut _7: bool) -> u16 {
mir! {
type RET = u16;
let _8: [bool; 4];
let _9: i32;
let _10: i8;
let _11: [i32; 8];
let _12: i64;
let _13: isize;
let _14: Adt49;
let _15: [usize; 5];
let _16: *const char;
let _17: i128;
let _18: Adt60;
let _19: *const f64;
let _20: Adt56;
let _21: *mut [u64; 5];
let _22: bool;
let _23: f64;
let _24: f32;
let _25: u64;
let _26: *const *const char;
let _27: Adt46;
let _28: (i32,);
let _29: Adt59;
let _30: bool;
let _31: [u64; 5];
let _32: [isize; 7];
let _33: bool;
let _34: [isize; 7];
let _35: bool;
let _36: Adt48;
let _37: u128;
let _38: (u8,);
let _39: [isize; 7];
let _40: u8;
let _41: [bool; 4];
let _42: (u8,);
let _43: ();
let _44: ();
{
RET = _1 & _1;
_4 = _3;
_6 = -112_i8;
_2 = !_7;
_7 = !_2;
_6 = !73_i8;
_4 = [1242981477842956151_u64,18004825802436498253_u64,14809979329764627306_u64,15164852288057593748_u64,1558417200463599178_u64];
_5 = _4;
_8 = [_7,_2,_2,_7];
_1 = RET | RET;
_7 = _2;
Goto(bb1)
}
bb1 = {
_8 = [_7,_7,_2,_2];
_5 = [5582785356343676238_u64,4281587044160617835_u64,2413688416602516936_u64,12455928826684907155_u64,1283678115793401042_u64];
_2 = _7;
_7 = _2;
_1 = RET - RET;
_8 = [_7,_2,_2,_7];
_3 = _5;
_7 = _2;
RET = !_1;
_8 = [_7,_2,_2,_2];
_9 = (-16807_i16) as i32;
_8 = [_7,_2,_7,_7];
RET = 74936054418335972128582188074430263583_u128 as u16;
_2 = _7;
_1 = RET;
RET = _1;
RET = _1 * _1;
RET = !_1;
_7 = !_2;
_6 = -32_i8;
_10 = _9 as i8;
_7 = _2 > _2;
Call(RET = fn3(_4, _3, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = !_2;
RET = _1 | _1;
_1 = 657_i16 as u16;
_1 = RET;
_11 = [_9,_9,_9,_9,_9,_9,_9,_9];
_5 = _4;
_3 = [3283852731797563857_u64,11774071431411773425_u64,11800000031437354258_u64,12030241866034092702_u64,8025118392784302989_u64];
_2 = !_7;
_9 = 1044441783_i32 << RET;
_5 = _4;
_9 = 1639499843_i32 - 1335921346_i32;
Goto(bb3)
}
bb3 = {
_9 = (-1304696675_i32);
_8 = [_7,_2,_2,_7];
_1 = _9 as u16;
_12 = 630933666354328590_i64 - 781397820093357163_i64;
_4 = [11343777317693147568_u64,6731668161837781695_u64,202188892789332369_u64,3504362704918352271_u64,6193078554245497840_u64];
_8 = [_2,_7,_2,_2];
_1 = RET;
_2 = _12 < _12;
_2 = _7;
RET = _6 as u16;
_2 = !_7;
_5 = [17854429860513626281_u64,3346350052643151985_u64,7731553523008406275_u64,3923397368212180777_u64,1927513813342377203_u64];
_13 = RET as isize;
RET = !_1;
RET = !_1;
RET = !_1;
_12 = (-3072110758512311755_i64) >> _1;
_10 = _13 as i8;
_6 = _13 as i8;
_4 = [11628435482572858240_u64,8203686787360171396_u64,13129714471051120944_u64,12344388860729673965_u64,13643310950110250194_u64];
_17 = !49571264759684251973229450223110866369_i128;
_1 = _12 as u16;
_12 = 7038002734795520275_usize as i64;
_2 = RET != RET;
Call(_9 = core::intrinsics::bswap((-787846287_i32)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
RET = 3094373530_u32 as u16;
_4 = [2594580933698167454_u64,13440642711990649308_u64,7906523829765057447_u64,16605770855133189405_u64,13975250354802188224_u64];
_17 = -121022225357714937651046394632118989613_i128;
RET = !_1;
RET = _7 as u16;
_6 = -_10;
Goto(bb5)
}
bb5 = {
_21 = core::ptr::addr_of_mut!(_5);
_17 = (-89812998631530592835468742355568721520_i128);
_12 = 31870669053750569_i64 & 6186181829952784020_i64;
_19 = core::ptr::addr_of!(_23);
_22 = _2;
_18 = Adt60::Variant2 { fld0: _12,fld1: _8 };
_23 = 3046476179583353856_u64 as f64;
place!(Field::<i64>(Variant(_18, 2), 0)) = _12 + _12;
match _17 {
0 => bb1,
1 => bb3,
2 => bb6,
250469368289407870627905865076199489936 => bb8,
_ => bb7
}
}
bb6 = {
RET = 3094373530_u32 as u16;
_4 = [2594580933698167454_u64,13440642711990649308_u64,7906523829765057447_u64,16605770855133189405_u64,13975250354802188224_u64];
_17 = -121022225357714937651046394632118989613_i128;
RET = !_1;
RET = _7 as u16;
_6 = -_10;
Goto(bb5)
}
bb7 = {
_9 = (-1304696675_i32);
_8 = [_7,_2,_2,_7];
_1 = _9 as u16;
_12 = 630933666354328590_i64 - 781397820093357163_i64;
_4 = [11343777317693147568_u64,6731668161837781695_u64,202188892789332369_u64,3504362704918352271_u64,6193078554245497840_u64];
_8 = [_2,_7,_2,_2];
_1 = RET;
_2 = _12 < _12;
_2 = _7;
RET = _6 as u16;
_2 = !_7;
_5 = [17854429860513626281_u64,3346350052643151985_u64,7731553523008406275_u64,3923397368212180777_u64,1927513813342377203_u64];
_13 = RET as isize;
RET = !_1;
RET = !_1;
RET = !_1;
_12 = (-3072110758512311755_i64) >> _1;
_10 = _13 as i8;
_6 = _13 as i8;
_4 = [11628435482572858240_u64,8203686787360171396_u64,13129714471051120944_u64,12344388860729673965_u64,13643310950110250194_u64];
_17 = !49571264759684251973229450223110866369_i128;
_1 = _12 as u16;
_12 = 7038002734795520275_usize as i64;
_2 = RET != RET;
Call(_9 = core::intrinsics::bswap((-787846287_i32)), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_17 = (-34174305185959357736768110861585296818_i128) | (-135995202792133344640509839691254813580_i128);
_22 = _2;
_7 = _2;
_22 = _2;
_21 = core::ptr::addr_of_mut!((*_21));
_13 = !(-9223372036854775808_isize);
_10 = _6;
_11 = [_9,_9,_9,_9,_9,_9,_9,_9];
_1 = RET;
_8 = [_22,_2,_22,_22];
_24 = 13449222937183997143_u64 as f32;
_25 = _9 as u64;
_13 = !3_isize;
_17 = !(-78009464127235757479560481175083397196_i128);
_2 = _22 == _22;
_15 = [4_usize,14575392685394494882_usize,4719307753036983821_usize,9708781340917061143_usize,9316327097243583737_usize];
_19 = core::ptr::addr_of!((*_19));
_10 = _6;
_7 = !_2;
_1 = RET;
_24 = _9 as f32;
_13 = _24 as isize;
Goto(bb9)
}
bb9 = {
_9 = !968040925_i32;
_24 = _25 as f32;
_11 = [_9,_9,_9,_9,_9,_9,_9,_9];
_4 = [_25,_25,_25,_25,_25];
_1 = (*_19) as u16;
_3 = [_25,_25,_25,_25,_25];
_1 = !RET;
_26 = core::ptr::addr_of!(_16);
_11 = [_9,_9,_9,_9,_9,_9,_9,_9];
_30 = _2;
_3 = _5;
_28 = (_9,);
_6 = _10 & _10;
_4 = [_25,_25,_25,_25,_25];
_5 = [_25,_25,_25,_25,_25];
_29 = Adt59::Variant0 { fld0: Field::<[bool; 4]>(Variant(_18, 2), 1),fld1: '\u{8ebd2}',fld2: 225872211890782456118399827871422610373_u128,fld3: 1_usize };
place!(Field::<u128>(Variant(_29, 0), 2)) = _10 as u128;
_17 = 2571181949_u32 as i128;
_16 = core::ptr::addr_of!(place!(Field::<char>(Variant(_29, 0), 1)));
place!(Field::<[bool; 4]>(Variant(_18, 2), 1)) = [_7,_2,_22,_30];
Goto(bb10)
}
bb10 = {
_19 = core::ptr::addr_of!(_23);
_4 = (*_21);
Goto(bb11)
}
bb11 = {
_28.0 = Field::<u128>(Variant(_29, 0), 2) as i32;
_32 = [_13,_13,_13,_13,_13,_13,_13];
SetDiscriminant(_18, 0);
_26 = core::ptr::addr_of!(_16);
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld3 = _15;
_33 = !_22;
place!(Field::<*const u64>(Variant(_18, 0), 4)) = core::ptr::addr_of!(_25);
place!(Field::<usize>(Variant(_29, 0), 3)) = 89_u8 as usize;
_9 = _28.0 * _28.0;
RET = _1 << _1;
_5 = [_25,_25,_25,_25,_25];
_28 = (_9,);
place!(Field::<u128>(Variant(_29, 0), 2)) = 113494424447666892586606314730865850102_u128;
_35 = !_7;
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld0 = core::ptr::addr_of!(_23);
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld0 = core::ptr::addr_of!((*_19));
match Field::<u128>(Variant(_29, 0), 2) {
0 => bb1,
1 => bb8,
2 => bb7,
3 => bb4,
4 => bb5,
5 => bb6,
113494424447666892586606314730865850102 => bb13,
_ => bb12
}
}
bb12 = {
_19 = core::ptr::addr_of!(_23);
_4 = (*_21);
Goto(bb11)
}
bb13 = {
_29 = Adt59::Variant2 { fld0: _3 };
_2 = !_33;
place!(Field::<*const u64>(Variant(_18, 0), 4)) = core::ptr::addr_of!(_25);
RET = 5_usize as u16;
_33 = !_30;
_33 = !_2;
place!(Field::<(u128,)>(Variant(_18, 0), 1)) = (279475150304917297200207952753589744696_u128,);
_34 = [_13,_13,_13,_13,_13,_13,_13];
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld3 = [3_usize,1165507544319934134_usize,14537082560686725596_usize,13093501934887567407_usize,1_usize];
place!(Field::<i32>(Variant(_18, 0), 5)) = 906604986_u32 as i32;
_22 = _30 == _33;
place!(Field::<i32>(Variant(_18, 0), 5)) = _9 * _9;
_2 = !_7;
_36 = Adt48 { fld0: _15 };
_26 = core::ptr::addr_of!(_16);
place!(Field::<[i32; 8]>(Variant(_18, 0), 0)) = _11;
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld1 = [_2,_22,_30,_30];
_4 = [_25,_25,_25,_25,_25];
_33 = !_35;
SetDiscriminant(_29, 2);
match Field::<(u128,)>(Variant(_18, 0), 1).0 {
0 => bb11,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb9,
279475150304917297200207952753589744696 => bb14,
_ => bb7
}
}
bb14 = {
_28 = (Field::<i32>(Variant(_18, 0), 5),);
place!(Field::<i8>(Variant(_18, 0), 3)) = _6;
place!(Field::<[u64; 5]>(Variant(_29, 2), 0)) = [_25,_25,_25,_25,_25];
_38 = (79_u8,);
_22 = _23 == _23;
_9 = Field::<i32>(Variant(_18, 0), 5) | _28.0;
_34 = [_13,_13,_13,_13,_13,_13,_13];
_9 = Field::<i32>(Variant(_18, 0), 5) * _28.0;
place!(Field::<[i32; 8]>(Variant(_18, 0), 0)) = _11;
_34 = [_13,_13,_13,_13,_13,_13,_13];
_24 = 20365_i16 as f32;
_22 = _30;
_19 = Field::<Adt45>(Variant(_18, 0), 6).fld0;
_34 = [_13,_13,_13,_13,_13,_13,_13];
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld1 = [_2,_35,_2,_35];
_35 = !_2;
_26 = core::ptr::addr_of!((*_26));
place!(Field::<Adt45>(Variant(_18, 0), 6)).fld3 = [6_usize,13940606551731500676_usize,7_usize,1_usize,7_usize];
_12 = -(-169585372395377523_i64);
_42.0 = _12 as u8;
SetDiscriminant(_29, 1);
_35 = _7;
_42.0 = _13 as u8;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(2_usize, 4_usize, Move(_4), 6_usize, Move(_6), 42_usize, Move(_42), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(2_usize, 5_usize, Move(_5), 13_usize, Move(_13), 8_usize, Move(_8), 32_usize, Move(_32)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(2_usize, 33_usize, Move(_33), 7_usize, Move(_7), 22_usize, Move(_22), 30_usize, Move(_30)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [u64; 5],mut _2: [u64; 5],mut _3: [u64; 5]) -> u16 {
mir! {
type RET = u16;
let _4: char;
let _5: Adt48;
let _6: [u8; 8];
let _7: Adt58;
let _8: (u128,);
let _9: f64;
let _10: u16;
let _11: (u8,);
let _12: i128;
let _13: *const *const char;
let _14: [isize; 7];
let _15: usize;
let _16: u16;
let _17: Adt53;
let _18: isize;
let _19: u16;
let _20: u8;
let _21: Adt52;
let _22: i32;
let _23: *mut [u64; 5];
let _24: (u8,);
let _25: Adt59;
let _26: usize;
let _27: isize;
let _28: f32;
let _29: i8;
let _30: char;
let _31: *const *const *const f64;
let _32: ();
let _33: ();
{
RET = 9500_u16 + 36793_u16;
RET = !8875_u16;
_3 = _1;
_5.fld0 = [7649280823708154449_usize,3_usize,3_usize,13172602349002883376_usize,2806903149595662863_usize];
RET = !27273_u16;
RET = 43787_u16 - 56850_u16;
_4 = '\u{98032}';
_5.fld0 = [16794767882060443100_usize,10827338994185077197_usize,0_usize,5_usize,3_usize];
_6 = [38_u8,86_u8,11_u8,109_u8,95_u8,180_u8,81_u8,126_u8];
Call(_5 = fn4(_1, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = [9658337908731505932_u64,3027439624416696461_u64,3930197484775598731_u64,18073844851942351930_u64,15997979243081071142_u64];
_1 = _3;
_1 = [12285164124221274589_u64,17213779077840236141_u64,1660085487101373549_u64,16994053813343281690_u64,8970563950504772835_u64];
RET = 780_u16;
_5.fld0 = [4712102272740816123_usize,2_usize,16898272988054033776_usize,11908263348617558650_usize,5_usize];
_2 = _3;
_3 = [4945825406485407551_u64,391738748803533151_u64,3245352756452186008_u64,15693930345677994076_u64,8414953665277562506_u64];
_3 = [10493357259653580902_u64,8785611740989181494_u64,1658139084767569391_u64,6562151986420857738_u64,5349204757223861830_u64];
_5.fld0 = [3973700457495392331_usize,4581787425502864217_usize,4_usize,7_usize,13652506603204751878_usize];
RET = !26719_u16;
_5.fld0 = [4_usize,11308004655331959478_usize,2172630176082046108_usize,6_usize,6_usize];
_1 = _3;
_1 = [15712644164735201663_u64,4478742313897969774_u64,15517955661345663296_u64,4345064515670575811_u64,10216021881005048359_u64];
RET = 26113_u16 - 34730_u16;
RET = 57645_u16 >> (-118564685444597849775329580602144573421_i128);
_5.fld0 = [5_usize,16162181629757690652_usize,12518026666526506226_usize,16769529178910358910_usize,1_usize];
_5.fld0 = [6976093166032356010_usize,17051476919987262164_usize,2625129968820346555_usize,13259317618027651250_usize,2_usize];
Goto(bb2)
}
bb2 = {
_8.0 = !274668543684492907427863295280740419652_u128;
_3 = [3422092250252800646_u64,2632850988809545461_u64,3292956738942092948_u64,1664980565939590223_u64,17097773334015091464_u64];
_9 = _8.0 as f64;
RET = !32672_u16;
RET = 45832_u16 ^ 54072_u16;
_7 = Adt58::Variant2 { fld0: _5.fld0 };
Goto(bb3)
}
bb3 = {
_9 = RET as f64;
RET = (-24_i8) as u16;
_6 = [12_u8,168_u8,74_u8,171_u8,37_u8,178_u8,206_u8,129_u8];
_8 = (30606963380363753594108594660000968538_u128,);
_3 = [4400029441672975360_u64,16640123769607135067_u64,16214597095020160954_u64,8042293718707580102_u64,1988471842546720956_u64];
_10 = RET | RET;
_11.0 = 87_u8 >> _10;
_2 = _3;
_8 = (119742465034840726748083733270002478840_u128,);
place!(Field::<[usize; 5]>(Variant(_7, 2), 0)) = _5.fld0;
_3 = [14310731008779651839_u64,14845978274652549680_u64,5263999373086916187_u64,6080357332631462931_u64,7971809470312957071_u64];
_4 = '\u{bb495}';
SetDiscriminant(_7, 0);
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld1 = core::ptr::addr_of!(_13);
place!(Field::<u8>(Variant(_7, 0), 4)) = _10 as u8;
Goto(bb4)
}
bb4 = {
RET = _10 ^ _10;
_6 = [_11.0,_11.0,_11.0,_11.0,Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4)];
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
place!(Field::<(u8,)>(Variant(_7, 0), 5)).0 = Field::<u8>(Variant(_7, 0), 4);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
RET = !_10;
_9 = 107_i8 as f64;
_4 = '\u{31f57}';
_4 = '\u{9020c}';
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld0 = core::ptr::addr_of!(_8.0);
_15 = 11416464595112846764_usize - 1_usize;
_14 = [(-35_isize),69_isize,(-8_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-118_isize),10_isize];
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_17.fld1 = [false,true,true,true];
_8 = (300223348001176372301504715726514952943_u128,);
RET = 8791777841612635709_u64 as u16;
_2 = _3;
_17.fld0 = core::ptr::addr_of!(_13);
_14 = [(-54_isize),9223372036854775807_isize,9223372036854775807_isize,68_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = '\u{54502}';
_18 = (-111_i8) as isize;
_17.fld1 = [true,false,false,false];
_11 = (Field::<(u8,)>(Variant(_7, 0), 5).0,);
Goto(bb5)
}
bb5 = {
RET = !_10;
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_3 = [17031615581284378310_u64,2379174136655670223_u64,14272682129192191514_u64,16749075031203933660_u64,11113579139836022845_u64];
_7 = Adt58::Variant2 { fld0: _5.fld0 };
_2 = [9197546494829882791_u64,4664982005443822698_u64,13695576802874941910_u64,6367660620101728683_u64,4847903558700049072_u64];
_19 = !RET;
_15 = 5_usize >> RET;
Goto(bb6)
}
bb6 = {
_16 = 3119039181_u32 as u16;
place!(Field::<[usize; 5]>(Variant(_7, 2), 0)) = _5.fld0;
SetDiscriminant(_7, 0);
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant0 { fld0: _6,fld1: 2754719907757219643_u64 };
_17.fld1 = [false,false,true,true];
_22 = _18 as i32;
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_15 = 5_usize | 12173122754148459710_usize;
_16 = !_19;
_10 = _16;
RET = _19 >> _16;
place!(Field::<u64>(Variant(place!(Field::<Adt44>(Variant(_7, 0), 0)), 0), 1)) = 13854906697308018279_u64 - 18215056875075048539_u64;
place!(Field::<(u8,)>(Variant(_7, 0), 5)).0 = 5390488627759516121_i64 as u8;
_22 = -1339359191_i32;
SetDiscriminant(Field::<Adt44>(Variant(_7, 0), 0), 1);
_1 = [15815673679959868739_u64,16389184505354654227_u64,13132401266540417852_u64,2655265298276481549_u64,15319397585391218527_u64];
_11 = (Field::<(u8,)>(Variant(_7, 0), 5).0,);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant2 { fld0: 3152330636905112988_u64 };
RET = _19;
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld1 = core::ptr::addr_of!(_13);
_15 = 2991513186402093007_usize << _19;
_4 = '\u{8f6b}';
_14 = [_18,_18,_18,_18,_18,_18,_18];
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = _11;
Goto(bb7)
}
bb7 = {
_14 = [_18,_18,_18,_18,_18,_18,_18];
match _8.0 {
0 => bb1,
1 => bb8,
2 => bb9,
3 => bb10,
300223348001176372301504715726514952943 => bb12,
_ => bb11
}
}
bb8 = {
_16 = 3119039181_u32 as u16;
place!(Field::<[usize; 5]>(Variant(_7, 2), 0)) = _5.fld0;
SetDiscriminant(_7, 0);
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant0 { fld0: _6,fld1: 2754719907757219643_u64 };
_17.fld1 = [false,false,true,true];
_22 = _18 as i32;
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_15 = 5_usize | 12173122754148459710_usize;
_16 = !_19;
_10 = _16;
RET = _19 >> _16;
place!(Field::<u64>(Variant(place!(Field::<Adt44>(Variant(_7, 0), 0)), 0), 1)) = 13854906697308018279_u64 - 18215056875075048539_u64;
place!(Field::<(u8,)>(Variant(_7, 0), 5)).0 = 5390488627759516121_i64 as u8;
_22 = -1339359191_i32;
SetDiscriminant(Field::<Adt44>(Variant(_7, 0), 0), 1);
_1 = [15815673679959868739_u64,16389184505354654227_u64,13132401266540417852_u64,2655265298276481549_u64,15319397585391218527_u64];
_11 = (Field::<(u8,)>(Variant(_7, 0), 5).0,);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant2 { fld0: 3152330636905112988_u64 };
RET = _19;
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld1 = core::ptr::addr_of!(_13);
_15 = 2991513186402093007_usize << _19;
_4 = '\u{8f6b}';
_14 = [_18,_18,_18,_18,_18,_18,_18];
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = _11;
Goto(bb7)
}
bb9 = {
RET = !_10;
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_3 = [17031615581284378310_u64,2379174136655670223_u64,14272682129192191514_u64,16749075031203933660_u64,11113579139836022845_u64];
_7 = Adt58::Variant2 { fld0: _5.fld0 };
_2 = [9197546494829882791_u64,4664982005443822698_u64,13695576802874941910_u64,6367660620101728683_u64,4847903558700049072_u64];
_19 = !RET;
_15 = 5_usize >> RET;
Goto(bb6)
}
bb10 = {
RET = _10 ^ _10;
_6 = [_11.0,_11.0,_11.0,_11.0,Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4)];
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
place!(Field::<(u8,)>(Variant(_7, 0), 5)).0 = Field::<u8>(Variant(_7, 0), 4);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
RET = !_10;
_9 = 107_i8 as f64;
_4 = '\u{31f57}';
_4 = '\u{9020c}';
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld0 = core::ptr::addr_of!(_8.0);
_15 = 11416464595112846764_usize - 1_usize;
_14 = [(-35_isize),69_isize,(-8_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-118_isize),10_isize];
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_17.fld1 = [false,true,true,true];
_8 = (300223348001176372301504715726514952943_u128,);
RET = 8791777841612635709_u64 as u16;
_2 = _3;
_17.fld0 = core::ptr::addr_of!(_13);
_14 = [(-54_isize),9223372036854775807_isize,9223372036854775807_isize,68_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = '\u{54502}';
_18 = (-111_i8) as isize;
_17.fld1 = [true,false,false,false];
_11 = (Field::<(u8,)>(Variant(_7, 0), 5).0,);
Goto(bb5)
}
bb11 = {
_8.0 = !274668543684492907427863295280740419652_u128;
_3 = [3422092250252800646_u64,2632850988809545461_u64,3292956738942092948_u64,1664980565939590223_u64,17097773334015091464_u64];
_9 = _8.0 as f64;
RET = !32672_u16;
RET = 45832_u16 ^ 54072_u16;
_7 = Adt58::Variant2 { fld0: _5.fld0 };
Goto(bb3)
}
bb12 = {
_17.fld2 = core::ptr::addr_of!(_8.0);
place!(Field::<u8>(Variant(_7, 0), 4)) = Field::<(u8,)>(Variant(_7, 0), 5).0;
RET = !_16;
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant0 { fld0: _6,fld1: 4188074705270956533_u64 };
_12 = 3705713354_u32 as i128;
_2 = [10460624636100339486_u64,16565535207481143443_u64,2463498463470131111_u64,2360443951065704355_u64,2062936431936801354_u64];
_17.fld2 = core::ptr::addr_of!(_8.0);
_5.fld0 = [_15,_15,_15,_15,_15];
_22 = 1137397179_i32 << _16;
_23 = core::ptr::addr_of_mut!(_2);
_6 = Field::<[u8; 8]>(Variant(Field::<Adt44>(Variant(_7, 0), 0), 0), 0);
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld1 = core::ptr::addr_of!(_13);
_28 = _8.0 as f32;
_24.0 = Field::<u8>(Variant(_7, 0), 4) >> _10;
_27 = _9 as isize;
match _8.0 {
0 => bb13,
1 => bb14,
2 => bb15,
300223348001176372301504715726514952943 => bb17,
_ => bb16
}
}
bb13 = {
_8.0 = !274668543684492907427863295280740419652_u128;
_3 = [3422092250252800646_u64,2632850988809545461_u64,3292956738942092948_u64,1664980565939590223_u64,17097773334015091464_u64];
_9 = _8.0 as f64;
RET = !32672_u16;
RET = 45832_u16 ^ 54072_u16;
_7 = Adt58::Variant2 { fld0: _5.fld0 };
Goto(bb3)
}
bb14 = {
_16 = 3119039181_u32 as u16;
place!(Field::<[usize; 5]>(Variant(_7, 2), 0)) = _5.fld0;
SetDiscriminant(_7, 0);
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant0 { fld0: _6,fld1: 2754719907757219643_u64 };
_17.fld1 = [false,false,true,true];
_22 = _18 as i32;
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_15 = 5_usize | 12173122754148459710_usize;
_16 = !_19;
_10 = _16;
RET = _19 >> _16;
place!(Field::<u64>(Variant(place!(Field::<Adt44>(Variant(_7, 0), 0)), 0), 1)) = 13854906697308018279_u64 - 18215056875075048539_u64;
place!(Field::<(u8,)>(Variant(_7, 0), 5)).0 = 5390488627759516121_i64 as u8;
_22 = -1339359191_i32;
SetDiscriminant(Field::<Adt44>(Variant(_7, 0), 0), 1);
_1 = [15815673679959868739_u64,16389184505354654227_u64,13132401266540417852_u64,2655265298276481549_u64,15319397585391218527_u64];
_11 = (Field::<(u8,)>(Variant(_7, 0), 5).0,);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
place!(Field::<Adt44>(Variant(_7, 0), 0)) = Adt44::Variant2 { fld0: 3152330636905112988_u64 };
RET = _19;
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld1 = core::ptr::addr_of!(_13);
_15 = 2991513186402093007_usize << _19;
_4 = '\u{8f6b}';
_14 = [_18,_18,_18,_18,_18,_18,_18];
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = _11;
Goto(bb7)
}
bb15 = {
_14 = [_18,_18,_18,_18,_18,_18,_18];
match _8.0 {
0 => bb1,
1 => bb8,
2 => bb9,
3 => bb10,
300223348001176372301504715726514952943 => bb12,
_ => bb11
}
}
bb16 = {
RET = _10 ^ _10;
_6 = [_11.0,_11.0,_11.0,_11.0,Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4),Field::<u8>(Variant(_7, 0), 4)];
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
place!(Field::<(u8,)>(Variant(_7, 0), 5)).0 = Field::<u8>(Variant(_7, 0), 4);
place!(Field::<(u8,)>(Variant(_7, 0), 5)) = (_11.0,);
RET = !_10;
_9 = 107_i8 as f64;
_4 = '\u{31f57}';
_4 = '\u{9020c}';
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld0 = core::ptr::addr_of!(_8.0);
_15 = 11416464595112846764_usize - 1_usize;
_14 = [(-35_isize),69_isize,(-8_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-118_isize),10_isize];
place!(Field::<*const *const *const char>(Variant(_7, 0), 1)) = core::ptr::addr_of!(_13);
_17.fld1 = [false,true,true,true];
_8 = (300223348001176372301504715726514952943_u128,);
RET = 8791777841612635709_u64 as u16;
_2 = _3;
_17.fld0 = core::ptr::addr_of!(_13);
_14 = [(-54_isize),9223372036854775807_isize,9223372036854775807_isize,68_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = '\u{54502}';
_18 = (-111_i8) as isize;
_17.fld1 = [true,false,false,false];
_11 = (Field::<(u8,)>(Variant(_7, 0), 5).0,);
Goto(bb5)
}
bb17 = {
_24 = (_11.0,);
RET = _10;
_2 = _1;
place!(Field::<Adt50>(Variant(_7, 0), 3)).fld0 = _17.fld2;
_12 = (-94886710072463266805655902003876978987_i128) << _22;
_18 = _12 as isize;
_3 = (*_23);
_24.0 = _11.0;
_11.0 = Field::<(u8,)>(Variant(_7, 0), 5).0;
_12 = (-114209805859521780733214449429753517096_i128);
_10 = !_19;
_1 = [5391059706132401705_u64,8847269662455907086_u64,13076537555358477020_u64,11534893124512152509_u64,2883797985063549574_u64];
Goto(bb18)
}
bb18 = {
Call(_32 = dump_var(3_usize, 16_usize, Move(_16), 24_usize, Move(_24), 22_usize, Move(_22), 8_usize, Move(_8)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(3_usize, 11_usize, Move(_11), 6_usize, Move(_6), 19_usize, Move(_19), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [u64; 5],mut _2: [u8; 8]) -> Adt48 {
mir! {
type RET = Adt48;
let _3: Adt47;
let _4: *mut u8;
let _5: [u8; 8];
let _6: [u64; 5];
let _7: Adt48;
let _8: [u8; 8];
let _9: usize;
let _10: u32;
let _11: i16;
let _12: *mut *const *const f64;
let _13: Adt59;
let _14: (bool,);
let _15: f32;
let _16: usize;
let _17: [i16; 1];
let _18: f64;
let _19: [bool; 4];
let _20: f32;
let _21: (u128,);
let _22: char;
let _23: (u128,);
let _24: Adt60;
let _25: Adt58;
let _26: [bool; 4];
let _27: (u128,);
let _28: bool;
let _29: Adt57;
let _30: i128;
let _31: (u128,);
let _32: [i16; 1];
let _33: ();
let _34: ();
{
RET.fld0 = [12851252938544308349_usize,1_usize,10907631940957794246_usize,588156377516266416_usize,6_usize];
_2 = [138_u8,242_u8,31_u8,26_u8,169_u8,239_u8,142_u8,228_u8];
_1 = [2473141977132412019_u64,2302151509004511108_u64,10484128903722782010_u64,13292890485043640759_u64,16580688083509327475_u64];
_1 = [686563314136003434_u64,3820445798232779464_u64,17887770221889961312_u64,368346627065647261_u64,14317489166899748220_u64];
RET.fld0 = [654207928277911840_usize,0_usize,7_usize,6728375642462226535_usize,4_usize];
_2 = [208_u8,202_u8,155_u8,219_u8,13_u8,77_u8,240_u8,47_u8];
RET.fld0 = [3333277806901659988_usize,5_usize,9598631201335878189_usize,12059635690207655601_usize,18169458336052198592_usize];
_1 = [11872753723932155732_u64,9725782823153243645_u64,14696138856737069309_u64,13618968924489940508_u64,17873890904119663606_u64];
RET.fld0 = [6566218493062139596_usize,6624351300512802084_usize,7_usize,5_usize,5_usize];
RET.fld0 = [6_usize,4_usize,1395152495506678465_usize,5_usize,6_usize];
_1 = [16544470742462243397_u64,4748730281830230282_u64,8859580883983497802_u64,13069395391690373559_u64,15245327783564114606_u64];
_2 = [165_u8,227_u8,87_u8,196_u8,214_u8,84_u8,8_u8,104_u8];
RET.fld0 = [11700713567676859090_usize,5_usize,2242452911102575487_usize,3_usize,6_usize];
RET.fld0 = [3644764129262909245_usize,1447696508040277260_usize,7_usize,7_usize,1_usize];
_1 = [2108486228083065107_u64,17831492867280300544_u64,3799600232120053395_u64,16400939795094209524_u64,5856047243921414956_u64];
RET.fld0 = [4_usize,1_usize,14576973399730534251_usize,6_usize,2146605430596870224_usize];
RET.fld0 = [8882382533456516310_usize,7573478927649341710_usize,11180874652644424534_usize,2_usize,15368786733532530505_usize];
_2 = [15_u8,8_u8,148_u8,159_u8,29_u8,239_u8,193_u8,177_u8];
RET.fld0 = [3_usize,2_usize,8093356390639395851_usize,1978611761679072519_usize,16293148579637378864_usize];
_1 = [4124983936113048046_u64,157598112838704614_u64,6158800135807545136_u64,8873944792011062562_u64,17682929677298570188_u64];
Call(RET = fn5(_2, _2, _1, _2, _1, _2, _1, _2, _1, _2, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.fld0 = [7_usize,5_usize,17226134474876051678_usize,5694780703688374312_usize,15643096916853981836_usize];
Goto(bb2)
}
bb2 = {
RET.fld0 = [5_usize,11011175373167112568_usize,2_usize,6924130089809352265_usize,7709570524049813945_usize];
_2 = [162_u8,21_u8,180_u8,131_u8,171_u8,199_u8,255_u8,142_u8];
RET.fld0 = [6_usize,7_usize,12759060570622602888_usize,5_usize,2_usize];
RET.fld0 = [12929732294971922850_usize,12522174924026806210_usize,7_usize,15387646089105478032_usize,9377853554016021844_usize];
_1 = [2534464528108292825_u64,7204451828453551324_u64,13843340600093055884_u64,14647689302970650612_u64,2335411083007531712_u64];
RET.fld0 = [3_usize,0_usize,1365475015965616379_usize,4_usize,3250033130619611250_usize];
RET.fld0 = [0_usize,2_usize,5_usize,7_usize,7502436109869722097_usize];
_5 = _2;
_2 = [250_u8,83_u8,30_u8,112_u8,86_u8,81_u8,152_u8,114_u8];
RET.fld0 = [2_usize,8869460279222243873_usize,15000574006779440359_usize,7_usize,15935900058538421699_usize];
_5 = _2;
_6 = [16667907352628660074_u64,17261942629012851362_u64,92606886204847186_u64,6035293456172494872_u64,13737425295442260660_u64];
_6 = _1;
RET.fld0 = [1_usize,6_usize,1_usize,5251069087118045923_usize,1363060012342035207_usize];
Goto(bb3)
}
bb3 = {
_5 = _2;
_1 = _6;
_2 = [219_u8,204_u8,243_u8,13_u8,188_u8,6_u8,255_u8,164_u8];
_7 = Adt48 { fld0: RET.fld0 };
RET.fld0 = [11787132427170121465_usize,6_usize,17344320212660025942_usize,3_usize,5_usize];
RET = Adt48 { fld0: _7.fld0 };
_1 = [10745897066324497983_u64,15924092335903181871_u64,16941804036449897777_u64,9539338205435985694_u64,6656109761660697553_u64];
_1 = [873211205356034660_u64,11125282459342301719_u64,378343249275345456_u64,8977231692836920925_u64,16015316330961921493_u64];
_7 = Move(RET);
RET = Move(_7);
_7 = Move(RET);
Goto(bb4)
}
bb4 = {
_7.fld0 = [14064526611077872927_usize,10659698568490842576_usize,7_usize,16513436762322643861_usize,0_usize];
RET = Move(_7);
_2 = [200_u8,111_u8,15_u8,175_u8,234_u8,226_u8,40_u8,92_u8];
_1 = [7523513571106673532_u64,9862874183410147167_u64,16610909268717808317_u64,3175157497410674401_u64,6109069749801737565_u64];
Goto(bb5)
}
bb5 = {
_1 = [12257432549688278907_u64,10237314281645327256_u64,13282781651704835687_u64,14793861614606465595_u64,18041124572656568510_u64];
_5 = [106_u8,82_u8,211_u8,149_u8,58_u8,186_u8,76_u8,164_u8];
_8 = [65_u8,153_u8,71_u8,218_u8,71_u8,47_u8,165_u8,252_u8];
RET.fld0 = [2_usize,9663245051981970881_usize,7_usize,3876942191642956080_usize,0_usize];
_7.fld0 = [9493509955851273440_usize,4_usize,6_usize,7_usize,6199184177443642804_usize];
_5 = [220_u8,26_u8,205_u8,118_u8,234_u8,197_u8,218_u8,49_u8];
RET = Move(_7);
_7.fld0 = [2_usize,4_usize,3_usize,16320494655839171741_usize,2_usize];
_7 = Move(RET);
RET.fld0 = [11764391979874651148_usize,2556404422408404217_usize,2_usize,4_usize,1_usize];
Goto(bb6)
}
bb6 = {
_9 = 0_usize;
RET = Adt48 { fld0: _7.fld0 };
_2[_9] = _9 as u8;
RET.fld0[_9] = !_7.fld0[_9];
_9 = !RET.fld0[_9];
_11 = 63_isize as i16;
_7 = Adt48 { fld0: RET.fld0 };
_7.fld0 = RET.fld0;
RET.fld0 = _7.fld0;
_2 = [59_u8,44_u8,208_u8,24_u8,112_u8,172_u8,105_u8,198_u8];
_10 = 3862236976_u32 >> _9;
RET = Adt48 { fld0: _7.fld0 };
_8 = _2;
_7.fld0 = [_9,_9,_9,_9,_9];
_5 = [183_u8,137_u8,109_u8,75_u8,177_u8,91_u8,52_u8,153_u8];
_10 = (-57_isize) as u32;
_6 = [17798180960511809059_u64,1892956846432779416_u64,9640649985942797826_u64,13529300163867598737_u64,10762014000897295801_u64];
_8 = [210_u8,86_u8,212_u8,113_u8,232_u8,172_u8,203_u8,76_u8];
_5 = [165_u8,240_u8,222_u8,180_u8,87_u8,174_u8,28_u8,121_u8];
Goto(bb7)
}
bb7 = {
_7.fld0 = [_9,_9,_9,_9,_9];
_14.0 = _9 != _9;
_7.fld0 = [_9,_9,_9,_9,_9];
_14.0 = false ^ false;
_7 = Move(RET);
_1 = _6;
RET = Move(_7);
_7.fld0 = [_9,_9,_9,_9,_9];
_10 = !2687208550_u32;
_9 = _14.0 as usize;
_14.0 = !false;
_1 = [5147249386604011219_u64,5837530149277649672_u64,16874056218478177673_u64,1780785154700774860_u64,8487356963669650720_u64];
_15 = (-9223372036854775808_isize) as f32;
RET = Move(_7);
RET.fld0 = [_9,_9,_9,_9,_9];
_14.0 = !false;
Goto(bb8)
}
bb8 = {
_1 = _6;
_1 = _6;
_14.0 = !false;
_14 = (false,);
_11 = 110_i8 as i16;
_19 = [_14.0,_14.0,_14.0,_14.0];
_13 = Adt59::Variant2 { fld0: _1 };
_18 = 150_u8 as f64;
RET.fld0 = [_9,_9,_9,_9,_9];
_14 = (false,);
_5 = [68_u8,27_u8,160_u8,65_u8,201_u8,246_u8,71_u8,13_u8];
_16 = _18 as usize;
place!(Field::<[u64; 5]>(Variant(_13, 2), 0)) = [16625678573347324901_u64,6451757515254466242_u64,7060787953512876720_u64,5883821065097723826_u64,8113020438056348193_u64];
_7.fld0 = [_9,_16,_9,_16,_16];
_19 = [_14.0,_14.0,_14.0,_14.0];
_18 = 1705312054_i32 as f64;
_6 = _1;
_6 = [14459373269327344247_u64,6711384836487096736_u64,16202098554918374177_u64,5465351057154704817_u64,15683109931195333672_u64];
_21 = (3853204637699450855297766092827819521_u128,);
_9 = !_16;
SetDiscriminant(_13, 0);
_7.fld0 = [_9,_16,_9,_9,_16];
_19 = [_14.0,_14.0,_14.0,_14.0];
_6 = [7349553258059298415_u64,803463878658010708_u64,3223605075671122561_u64,9293673573818544256_u64,11209264345456371809_u64];
_18 = (-2996750035975996827_i64) as f64;
RET.fld0 = _7.fld0;
place!(Field::<usize>(Variant(_13, 0), 3)) = _16 + _9;
RET.fld0 = [Field::<usize>(Variant(_13, 0), 3),_9,Field::<usize>(Variant(_13, 0), 3),_16,Field::<usize>(Variant(_13, 0), 3)];
Goto(bb9)
}
bb9 = {
_19 = [_14.0,_14.0,_14.0,_14.0];
place!(Field::<u128>(Variant(_13, 0), 2)) = !_21.0;
_9 = Field::<usize>(Variant(_13, 0), 3) ^ _16;
_1 = [17837053393054086095_u64,11611766822089412103_u64,14348804673742436655_u64,14958794694327048055_u64,8762923601682436212_u64];
_21.0 = '\u{37c11}' as u128;
_7 = Adt48 { fld0: RET.fld0 };
RET = Adt48 { fld0: _7.fld0 };
_2 = [155_u8,193_u8,74_u8,209_u8,51_u8,91_u8,175_u8,119_u8];
_8 = [173_u8,148_u8,42_u8,142_u8,127_u8,139_u8,219_u8,48_u8];
_17 = [_11];
_19 = [_14.0,_14.0,_14.0,_14.0];
_22 = '\u{8729c}';
_6 = [4545411794940472721_u64,8978501483186244668_u64,13991678220150159189_u64,6906874821756228905_u64,3670826076815034677_u64];
_20 = _15;
Call(place!(Field::<u128>(Variant(_13, 0), 2)) = core::intrinsics::bswap(_21.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_15 = _20 + _20;
RET.fld0 = [_9,Field::<usize>(Variant(_13, 0), 3),_9,_9,_9];
_6 = [14506061047207228126_u64,18379447719834033577_u64,13552399090612750638_u64,7731106650238586684_u64,15439958125427460996_u64];
place!(Field::<char>(Variant(_13, 0), 1)) = _22;
_7.fld0 = RET.fld0;
RET.fld0 = _7.fld0;
_21 = (Field::<u128>(Variant(_13, 0), 2),);
_23.0 = _21.0;
_14 = (false,);
_6 = [4886600764514827000_u64,13081358895382896636_u64,13684142713127515135_u64,2787500629741223932_u64,15589850746005632113_u64];
_19 = [_14.0,_14.0,_14.0,_14.0];
Goto(bb11)
}
bb11 = {
_20 = _11 as f32;
_17 = [_11];
_11 = (-8822_i16);
RET.fld0 = [Field::<usize>(Variant(_13, 0), 3),_9,_9,_9,Field::<usize>(Variant(_13, 0), 3)];
_16 = _11 as usize;
place!(Field::<u128>(Variant(_13, 0), 2)) = 22451_u16 as u128;
RET = Adt48 { fld0: _7.fld0 };
_13 = Adt59::Variant2 { fld0: _6 };
_26 = [_14.0,_14.0,_14.0,_14.0];
_21 = (_23.0,);
_27.0 = !_21.0;
SetDiscriminant(_13, 3);
_21.0 = !_23.0;
_8 = [38_u8,154_u8,81_u8,134_u8,249_u8,191_u8,211_u8,135_u8];
_16 = _9;
_25 = Adt58::Variant2 { fld0: _7.fld0 };
_14.0 = _16 < _9;
place!(Field::<Adt48>(Variant(_13, 3), 6)).fld0 = [_16,_16,_9,_16,_16];
SetDiscriminant(_25, 0);
_10 = 67131525_u32;
place!(Field::<Adt50>(Variant(_25, 0), 3)).fld0 = core::ptr::addr_of!(_27.0);
RET.fld0 = Field::<Adt48>(Variant(_13, 3), 6).fld0;
_7.fld0 = [_9,_9,_16,_9,_9];
place!(Field::<*mut i16>(Variant(_25, 0), 2)) = core::ptr::addr_of_mut!(_11);
_22 = '\u{2c27a}';
_23.0 = _27.0 - _21.0;
_14.0 = _16 > _16;
Goto(bb12)
}
bb12 = {
_1 = _6;
_22 = '\u{e28d6}';
RET.fld0 = _7.fld0;
_9 = 491115885_i32 as usize;
place!(Field::<*mut u8>(Variant(_13, 3), 5)) = core::ptr::addr_of_mut!(place!(Field::<(u8,)>(Variant(_25, 0), 5)).0);
place!(Field::<Adt56>(Variant(_13, 3), 4)) = Adt56::Variant0 { fld0: Field::<*mut u8>(Variant(_13, 3), 5),fld1: _22 };
RET = Adt48 { fld0: Field::<Adt48>(Variant(_13, 3), 6).fld0 };
_23 = (_21.0,);
_27 = (_23.0,);
_15 = _20 * _20;
place!(Field::<Adt48>(Variant(_13, 3), 6)).fld0 = _7.fld0;
place!(Field::<*mut i16>(Variant(_25, 0), 2)) = core::ptr::addr_of_mut!(_11);
place!(Field::<*mut u8>(Variant(_13, 3), 5)) = core::ptr::addr_of_mut!(place!(Field::<(u8,)>(Variant(_25, 0), 5)).0);
_13 = Adt59::Variant2 { fld0: _1 };
_27 = _23;
_26 = [_14.0,_14.0,_14.0,_14.0];
_28 = !_14.0;
_27.0 = 38_i8 as u128;
_24 = Adt60::Variant2 { fld0: (-4522943984247677475_i64),fld1: _26 };
_11 = 16924_i16 << _16;
_1 = _6;
_28 = !_14.0;
match _10 {
0 => bb4,
1 => bb10,
67131525 => bb13,
_ => bb6
}
}
bb13 = {
_30 = -(-157607625414576222754329213379025208521_i128);
RET.fld0 = _7.fld0;
place!(Field::<(u8,)>(Variant(_25, 0), 5)).0 = 80_u8 + 231_u8;
_14.0 = !_28;
_14 = (_28,);
match _10 {
0 => bb6,
1 => bb11,
2 => bb9,
67131525 => bb14,
_ => bb4
}
}
bb14 = {
place!(Field::<Adt44>(Variant(_25, 0), 0)) = Adt44::Variant2 { fld0: 13250477428828870752_u64 };
_11 = _16 as i16;
_7.fld0 = [_9,_16,_16,_16,_16];
_31.0 = 49_i8 as u128;
_20 = _11 as f32;
place!(Field::<i64>(Variant(_24, 2), 0)) = _10 as i64;
_10 = _31.0 as u32;
_13 = Adt59::Variant2 { fld0: _1 };
place!(Field::<i64>(Variant(_24, 2), 0)) = 50_isize as i64;
_15 = _20;
RET.fld0 = [_16,_16,_16,_16,_16];
_1 = Field::<[u64; 5]>(Variant(_13, 2), 0);
_15 = _20 - _20;
_23.0 = !_27.0;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(4_usize, 8_usize, Move(_8), 19_usize, Move(_19), 6_usize, Move(_6), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(4_usize, 23_usize, Move(_23), 9_usize, Move(_9), 1_usize, Move(_1), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(4_usize, 26_usize, Move(_26), 2_usize, Move(_2), 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [u8; 8],mut _2: [u8; 8],mut _3: [u64; 5],mut _4: [u8; 8],mut _5: [u64; 5],mut _6: [u8; 8],mut _7: [u64; 5],mut _8: [u8; 8],mut _9: [u64; 5],mut _10: [u8; 8],mut _11: [u8; 8],mut _12: [u8; 8]) -> Adt48 {
mir! {
type RET = Adt48;
let _13: *const u128;
let _14: i64;
let _15: isize;
let _16: Adt60;
let _17: [bool; 4];
let _18: bool;
let _19: (bool, (u8,), *const f64, &'static [u64; 5], *const *const f64);
let _20: [isize; 7];
let _21: u64;
let _22: u32;
let _23: *const [i32; 8];
let _24: [bool; 4];
let _25: *const f64;
let _26: (i32,);
let _27: i8;
let _28: u64;
let _29: i128;
let _30: [u64; 5];
let _31: (u128,);
let _32: (u128,);
let _33: i32;
let _34: u16;
let _35: *const u128;
let _36: [i32; 8];
let _37: u128;
let _38: Adt58;
let _39: ();
let _40: ();
{
_7 = [6124315903653743546_u64,7270741303375295953_u64,582755215721621731_u64,11566246105125537002_u64,2469029254248025970_u64];
_2 = [148_u8,167_u8,86_u8,25_u8,189_u8,96_u8,113_u8,240_u8];
_1 = [184_u8,196_u8,7_u8,207_u8,141_u8,221_u8,188_u8,51_u8];
_5 = [13113559646860339079_u64,5059551100126597262_u64,7801727718334604637_u64,17026289375929310100_u64,8013514689293545144_u64];
_6 = [173_u8,242_u8,181_u8,41_u8,37_u8,44_u8,61_u8,63_u8];
_9 = _3;
_9 = [6065214742173973581_u64,2972090038217174398_u64,3945817714896730801_u64,12230371134998270489_u64,361840351883558116_u64];
RET.fld0 = [1_usize,3_usize,5_usize,7_usize,15240468054342007147_usize];
_5 = [12434535354165685846_u64,14568296369441097095_u64,9273886419530941847_u64,8916044227166982153_u64,2806873374641868362_u64];
_10 = [4_u8,27_u8,90_u8,217_u8,131_u8,223_u8,93_u8,37_u8];
_4 = [224_u8,85_u8,113_u8,255_u8,64_u8,181_u8,30_u8,231_u8];
_1 = [8_u8,167_u8,242_u8,231_u8,237_u8,72_u8,166_u8,39_u8];
_2 = _6;
_8 = [79_u8,122_u8,106_u8,29_u8,174_u8,124_u8,12_u8,62_u8];
Call(_12 = core::intrinsics::transmute(_8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = _8;
Call(_5 = fn6(_8, _3, _10, _9, _2, _4, _6, _6, _2, _11, _10, _2, _8, _11, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = _2;
_5 = _7;
Goto(bb3)
}
bb3 = {
_7 = [15406832691855055458_u64,8302616091406154187_u64,15646052024014973595_u64,11093127809813618136_u64,4324692212918106263_u64];
_10 = [50_u8,121_u8,68_u8,145_u8,71_u8,91_u8,233_u8,151_u8];
_14 = !(-1882534315080211424_i64);
RET.fld0 = [8029636092724781081_usize,4_usize,14496010619755453579_usize,9399706611686475710_usize,4_usize];
_8 = [39_u8,117_u8,238_u8,192_u8,120_u8,43_u8,137_u8,95_u8];
_8 = [202_u8,15_u8,45_u8,116_u8,141_u8,172_u8,195_u8,237_u8];
_8 = _1;
_14 = 2680504585817433445_i64;
_3 = [18206763212506514420_u64,3707981818511765748_u64,5168935095262435741_u64,16653020054033976148_u64,5272901149705857966_u64];
_1 = [193_u8,159_u8,247_u8,200_u8,109_u8,103_u8,172_u8,38_u8];
RET.fld0 = [3281746471166589129_usize,0_usize,0_usize,4_usize,0_usize];
_6 = _8;
Goto(bb4)
}
bb4 = {
_7 = _9;
_5 = [3684682800757574113_u64,17416152368738260453_u64,17820122975656406480_u64,1521990950841152768_u64,1008733779764328327_u64];
_10 = _4;
_2 = _12;
_6 = _10;
RET.fld0 = [17775906736217216528_usize,6832183181459716686_usize,18294315432954205534_usize,6_usize,4_usize];
_5 = _3;
RET.fld0 = [17069583804494725761_usize,4_usize,10030029582925445704_usize,0_usize,16383768439856362148_usize];
_14 = !(-7620774764583627711_i64);
_8 = [127_u8,100_u8,65_u8,115_u8,78_u8,132_u8,157_u8,31_u8];
RET.fld0 = [7_usize,1_usize,11170640178837886820_usize,1356545047645721667_usize,9679031152294245322_usize];
_10 = _4;
_8 = [255_u8,171_u8,122_u8,31_u8,127_u8,73_u8,13_u8,184_u8];
_18 = _14 < _14;
_7 = [7886892469113780855_u64,17185551067544072464_u64,13328878506521547898_u64,11999998125111309829_u64,17620960033546824579_u64];
_8 = _10;
_2 = [157_u8,188_u8,130_u8,136_u8,135_u8,75_u8,239_u8,38_u8];
_11 = [211_u8,205_u8,203_u8,165_u8,116_u8,130_u8,240_u8,48_u8];
_10 = _11;
_19.0 = _18;
_2 = [249_u8,101_u8,32_u8,202_u8,141_u8,122_u8,66_u8,252_u8];
_19.3 = &_7;
_19.1 = (173_u8,);
_19.4 = core::ptr::addr_of!(_19.2);
_9 = [10932620701050722580_u64,3904628393083499302_u64,13039627896610818424_u64,11275893895132818261_u64,1306377198320804685_u64];
match _19.1.0 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
173 => bb11,
_ => bb10
}
}
bb5 = {
_7 = [15406832691855055458_u64,8302616091406154187_u64,15646052024014973595_u64,11093127809813618136_u64,4324692212918106263_u64];
_10 = [50_u8,121_u8,68_u8,145_u8,71_u8,91_u8,233_u8,151_u8];
_14 = !(-1882534315080211424_i64);
RET.fld0 = [8029636092724781081_usize,4_usize,14496010619755453579_usize,9399706611686475710_usize,4_usize];
_8 = [39_u8,117_u8,238_u8,192_u8,120_u8,43_u8,137_u8,95_u8];
_8 = [202_u8,15_u8,45_u8,116_u8,141_u8,172_u8,195_u8,237_u8];
_8 = _1;
_14 = 2680504585817433445_i64;
_3 = [18206763212506514420_u64,3707981818511765748_u64,5168935095262435741_u64,16653020054033976148_u64,5272901149705857966_u64];
_1 = [193_u8,159_u8,247_u8,200_u8,109_u8,103_u8,172_u8,38_u8];
RET.fld0 = [3281746471166589129_usize,0_usize,0_usize,4_usize,0_usize];
_6 = _8;
Goto(bb4)
}
bb6 = {
_11 = _2;
_5 = _7;
Goto(bb3)
}
bb7 = {
_6 = _8;
Call(_5 = fn6(_8, _3, _10, _9, _2, _4, _6, _6, _2, _11, _10, _2, _8, _11, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_12 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_2 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_15 = 63229926981147189250630447679584063849_u128 as isize;
_19.1 = (111_u8,);
_12 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_5 = [14355899234710767194_u64,8856995854892316157_u64,12694512944563262985_u64,2005735788432917520_u64,14731695058593104780_u64];
_17 = [_18,_18,_19.0,_18];
_10 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_3 = [11122938937737149666_u64,7072537509114308585_u64,14136358815687122088_u64,9630179945128465112_u64,7068433948731336035_u64];
_5 = _7;
_3 = [11771963411598189847_u64,2133248063839239014_u64,18125036999512987132_u64,13639504201942968022_u64,4378331738277463596_u64];
_2 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_15 = -9223372036854775807_isize;
_19.4 = core::ptr::addr_of!(_19.2);
_2 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_14 = 4509587263106157590_i64;
_14 = -3696945975708405770_i64;
_4 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_17 = [_18,_19.0,_19.0,_18];
_22 = 2146326377_u32 ^ 3248048820_u32;
_20 = [_15,_15,_15,_15,_15,_15,_15];
_11 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_6 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_24 = _17;
_14 = -7944012884125333196_i64;
Goto(bb12)
}
bb12 = {
_19.1 = (159_u8,);
_4 = _1;
_26 = ((-1699995891_i32),);
_26.0 = 1050158691_i32 | 921585238_i32;
_3 = _7;
_4 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_28 = !14846426099124605089_u64;
_19.0 = !_18;
_19.3 = &_5;
_7 = _5;
_14 = 6909356582875339432_i64;
_1 = _8;
_19.0 = !_18;
_5 = [_28,_28,_28,_28,_28];
_19.4 = core::ptr::addr_of!(_19.2);
_19.1 = (35_u8,);
_12 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_9 = [_28,_28,_28,_28,_28];
_27 = -(-114_i8);
_13 = core::ptr::addr_of!(_31.0);
_24 = [_18,_18,_18,_19.0];
_12 = _1;
RET.fld0 = [4_usize,4670203256965274980_usize,0_usize,1003520357524011181_usize,4_usize];
_26.0 = 1222401440_i32;
Goto(bb13)
}
bb13 = {
_5 = [_28,_28,_28,_28,_28];
_11 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_30 = [_28,_28,_28,_28,_28];
_32 = (188690439156365619941857839341226534887_u128,);
_2 = _8;
_31.0 = _32.0 | _32.0;
RET.fld0 = [5_usize,4_usize,4359651035752240714_usize,2_usize,5_usize];
_13 = core::ptr::addr_of!((*_13));
_32 = (_31.0,);
_3 = [_28,_28,_28,_28,_28];
_28 = 67740947949655141403041136271087026533_i128 as u64;
_6 = _8;
_32 = ((*_13),);
_34 = _18 as u16;
Goto(bb14)
}
bb14 = {
_21 = _32.0 as u64;
_7 = [_21,_21,_28,_28,_21];
_4 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_15 = 9223372036854775807_isize - (-9223372036854775808_isize);
_32 = (_31.0,);
_1 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_29 = _32.0 as i128;
_1 = [_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0,_19.1.0];
_15 = (-9223372036854775808_isize) + (-96_isize);
_22 = !1388084975_u32;
_5 = [_21,_28,_21,_21,_28];
_16 = Adt60::Variant2 { fld0: _14,fld1: _24 };
RET.fld0 = [5374809347070161296_usize,1_usize,7739907681578334536_usize,4_usize,3_usize];
_14 = Field::<i64>(Variant(_16, 2), 0) ^ Field::<i64>(Variant(_16, 2), 0);
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(5_usize, 29_usize, Move(_29), 3_usize, Move(_3), 12_usize, Move(_12), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(5_usize, 2_usize, Move(_2), 24_usize, Move(_24), 11_usize, Move(_11), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(5_usize, 10_usize, Move(_10), 5_usize, Move(_5), 30_usize, Move(_30), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(5_usize, 4_usize, Move(_4), 8_usize, Move(_8), 40_usize, _40, 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [u8; 8],mut _2: [u64; 5],mut _3: [u8; 8],mut _4: [u64; 5],mut _5: [u8; 8],mut _6: [u8; 8],mut _7: [u8; 8],mut _8: [u8; 8],mut _9: [u8; 8],mut _10: [u8; 8],mut _11: [u8; 8],mut _12: [u8; 8],mut _13: [u8; 8],mut _14: [u8; 8],mut _15: [u8; 8]) -> [u64; 5] {
mir! {
type RET = [u64; 5];
let _16: Adt47;
let _17: Adt59;
let _18: [u8; 8];
let _19: (u8,);
let _20: (u128,);
let _21: Adt44;
let _22: isize;
let _23: Adt52;
let _24: *const f64;
let _25: [i16; 1];
let _26: Adt52;
let _27: i128;
let _28: Adt48;
let _29: [u8; 8];
let _30: char;
let _31: u8;
let _32: Adt50;
let _33: f32;
let _34: f64;
let _35: f64;
let _36: Adt49;
let _37: (i32,);
let _38: [i16; 1];
let _39: f32;
let _40: *const u64;
let _41: ();
let _42: ();
{
_4 = [2942121318412087745_u64,13193130468515452544_u64,10587388615199754367_u64,12116967350608061671_u64,13871055249379574962_u64];
_5 = _15;
_5 = [123_u8,145_u8,93_u8,223_u8,77_u8,141_u8,194_u8,165_u8];
_7 = _12;
RET = [6422951685079343941_u64,6118588032340273927_u64,4113332185757500298_u64,10723883567394699274_u64,13826188831109490032_u64];
_1 = [20_u8,230_u8,35_u8,104_u8,238_u8,137_u8,152_u8,131_u8];
Call(_6 = fn7(_12, _13, _15, RET, _4, _9, _13, _1, _7, _10, _8, _14), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [230_u8,198_u8,111_u8,55_u8,220_u8,174_u8,35_u8,106_u8];
_8 = [181_u8,88_u8,173_u8,18_u8,86_u8,84_u8,169_u8,138_u8];
_8 = [10_u8,0_u8,103_u8,34_u8,67_u8,120_u8,206_u8,73_u8];
_3 = _9;
_17 = Adt59::Variant2 { fld0: RET };
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = RET;
_1 = [25_u8,219_u8,235_u8,236_u8,28_u8,122_u8,15_u8,161_u8];
_3 = [71_u8,102_u8,8_u8,105_u8,210_u8,183_u8,242_u8,230_u8];
_17 = Adt59::Variant2 { fld0: RET };
_3 = _14;
_9 = _14;
_12 = _13;
_12 = _6;
_19.0 = !172_u8;
_5 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
RET = [10335482095532656078_u64,13889622010984176379_u64,3727723008135275239_u64,11868766761194306911_u64,2156677535841604757_u64];
_18 = _10;
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_9 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_2 = [16782648104291496787_u64,9767347376569716281_u64,11337918601577470568_u64,15834589470009237716_u64,2432102533793947530_u64];
_4 = [11928272416208548955_u64,10642517442388800330_u64,17569848300974801672_u64,7644965854751405097_u64,5485901623128359302_u64];
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = [12034929751321756931_u64,11112947268887425513_u64,1622174414818816311_u64,1676322755902072549_u64,64426874385963895_u64];
Goto(bb2)
}
bb2 = {
_20.0 = 329629622624883168381637366253904034278_u128;
_3 = _15;
_7 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_14 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_22 = -61_isize;
_1 = _3;
_19 = (62_u8,);
_21 = Adt44::Variant2 { fld0: 473573450561895909_u64 };
_4 = RET;
match _20.0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
329629622624883168381637366253904034278 => bb8,
_ => bb7
}
}
bb3 = {
_6 = [230_u8,198_u8,111_u8,55_u8,220_u8,174_u8,35_u8,106_u8];
_8 = [181_u8,88_u8,173_u8,18_u8,86_u8,84_u8,169_u8,138_u8];
_8 = [10_u8,0_u8,103_u8,34_u8,67_u8,120_u8,206_u8,73_u8];
_3 = _9;
_17 = Adt59::Variant2 { fld0: RET };
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = RET;
_1 = [25_u8,219_u8,235_u8,236_u8,28_u8,122_u8,15_u8,161_u8];
_3 = [71_u8,102_u8,8_u8,105_u8,210_u8,183_u8,242_u8,230_u8];
_17 = Adt59::Variant2 { fld0: RET };
_3 = _14;
_9 = _14;
_12 = _13;
_12 = _6;
_19.0 = !172_u8;
_5 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
RET = [10335482095532656078_u64,13889622010984176379_u64,3727723008135275239_u64,11868766761194306911_u64,2156677535841604757_u64];
_18 = _10;
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_9 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_2 = [16782648104291496787_u64,9767347376569716281_u64,11337918601577470568_u64,15834589470009237716_u64,2432102533793947530_u64];
_4 = [11928272416208548955_u64,10642517442388800330_u64,17569848300974801672_u64,7644965854751405097_u64,5485901623128359302_u64];
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = [12034929751321756931_u64,11112947268887425513_u64,1622174414818816311_u64,1676322755902072549_u64,64426874385963895_u64];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_1 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
match _20.0 {
0 => bb9,
329629622624883168381637366253904034278 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
_6 = [230_u8,198_u8,111_u8,55_u8,220_u8,174_u8,35_u8,106_u8];
_8 = [181_u8,88_u8,173_u8,18_u8,86_u8,84_u8,169_u8,138_u8];
_8 = [10_u8,0_u8,103_u8,34_u8,67_u8,120_u8,206_u8,73_u8];
_3 = _9;
_17 = Adt59::Variant2 { fld0: RET };
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = RET;
_1 = [25_u8,219_u8,235_u8,236_u8,28_u8,122_u8,15_u8,161_u8];
_3 = [71_u8,102_u8,8_u8,105_u8,210_u8,183_u8,242_u8,230_u8];
_17 = Adt59::Variant2 { fld0: RET };
_3 = _14;
_9 = _14;
_12 = _13;
_12 = _6;
_19.0 = !172_u8;
_5 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
RET = [10335482095532656078_u64,13889622010984176379_u64,3727723008135275239_u64,11868766761194306911_u64,2156677535841604757_u64];
_18 = _10;
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_9 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_2 = [16782648104291496787_u64,9767347376569716281_u64,11337918601577470568_u64,15834589470009237716_u64,2432102533793947530_u64];
_4 = [11928272416208548955_u64,10642517442388800330_u64,17569848300974801672_u64,7644965854751405097_u64,5485901623128359302_u64];
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = [12034929751321756931_u64,11112947268887425513_u64,1622174414818816311_u64,1676322755902072549_u64,64426874385963895_u64];
Goto(bb2)
}
bb11 = {
_12 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
place!(Field::<u64>(Variant(_21, 2), 0)) = !7103233896519382582_u64;
_6 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
RET = _2;
_8 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_25 = [(-15257_i16)];
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_15 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_19 = (84_u8,);
_11 = _10;
_12 = _13;
_11 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
place!(Field::<u64>(Variant(_21, 2), 0)) = 15138531639541985614_usize as u64;
_15 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_1 = _12;
_15 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_19.0 = 52_u8;
_15 = _1;
place!(Field::<u64>(Variant(_21, 2), 0)) = 13683886201552481328_u64 * 9497166438555262629_u64;
_6 = _18;
RET = _4;
_12 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_4 = [Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0)];
_18 = _10;
_20.0 = 9573994573476255757785367524400490372_u128;
Goto(bb12)
}
bb12 = {
_7 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = _9;
place!(Field::<u64>(Variant(_21, 2), 0)) = 16901995642603974848_u64 << _19.0;
_6 = _14;
SetDiscriminant(_17, 3);
_28.fld0 = [6_usize,7473875693779725011_usize,1_usize,5_usize,7_usize];
_1 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_19.0 = !210_u8;
place!(Field::<*mut u8>(Variant(_17, 3), 5)) = core::ptr::addr_of_mut!(_19.0);
place!(Field::<Adt48>(Variant(_17, 3), 6)) = Adt48 { fld0: _28.fld0 };
_3 = _15;
place!(Field::<*mut u8>(Variant(_17, 3), 5)) = core::ptr::addr_of_mut!(_19.0);
_31 = _19.0;
_5 = [_19.0,_31,_31,_31,_19.0,_31,_31,_31];
_19 = (_31,);
_28 = Adt48 { fld0: Field::<Adt48>(Variant(_17, 3), 6).fld0 };
SetDiscriminant(_21, 1);
_20 = (163870096422338290333310338596356393497_u128,);
Goto(bb13)
}
bb13 = {
_28 = Adt48 { fld0: Field::<Adt48>(Variant(_17, 3), 6).fld0 };
_1 = [_19.0,_19.0,_19.0,_31,_19.0,_19.0,_19.0,_31];
_13 = [_31,_19.0,_19.0,_19.0,_31,_31,_31,_31];
_32.fld0 = core::ptr::addr_of!(_20.0);
_1 = [_19.0,_19.0,_19.0,_19.0,_31,_19.0,_31,_31];
_30 = '\u{a4029}';
RET = _4;
_4 = [3329437860063350491_u64,6058531826529888549_u64,12144206845689153192_u64,1388448206897810325_u64,17672760038968210487_u64];
_19 = (_31,);
_35 = 1198147095133516303_usize as f64;
_19.0 = _31 - _31;
_21 = Adt44::Variant2 { fld0: 16000052539329503535_u64 };
_30 = '\u{28538}';
_1 = [_19.0,_19.0,_19.0,_19.0,_31,_31,_31,_31];
place!(Field::<*mut [u64; 5]>(Variant(_17, 3), 0)) = core::ptr::addr_of_mut!(_4);
_22 = (-13_isize) + 9223372036854775807_isize;
_6 = [_19.0,_31,_19.0,_19.0,_19.0,_19.0,_31,_19.0];
_4 = [494760675949131862_u64,3395090005190795675_u64,4974673244107076999_u64,14741762105184782598_u64,15823234660284867732_u64];
match _20.0 {
0 => bb9,
1 => bb14,
2 => bb15,
163870096422338290333310338596356393497 => bb17,
_ => bb16
}
}
bb14 = {
_7 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = _9;
place!(Field::<u64>(Variant(_21, 2), 0)) = 16901995642603974848_u64 << _19.0;
_6 = _14;
SetDiscriminant(_17, 3);
_28.fld0 = [6_usize,7473875693779725011_usize,1_usize,5_usize,7_usize];
_1 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_19.0 = !210_u8;
place!(Field::<*mut u8>(Variant(_17, 3), 5)) = core::ptr::addr_of_mut!(_19.0);
place!(Field::<Adt48>(Variant(_17, 3), 6)) = Adt48 { fld0: _28.fld0 };
_3 = _15;
place!(Field::<*mut u8>(Variant(_17, 3), 5)) = core::ptr::addr_of_mut!(_19.0);
_31 = _19.0;
_5 = [_19.0,_31,_31,_31,_19.0,_31,_31,_31];
_19 = (_31,);
_28 = Adt48 { fld0: Field::<Adt48>(Variant(_17, 3), 6).fld0 };
SetDiscriminant(_21, 1);
_20 = (163870096422338290333310338596356393497_u128,);
Goto(bb13)
}
bb15 = {
Return()
}
bb16 = {
_6 = [230_u8,198_u8,111_u8,55_u8,220_u8,174_u8,35_u8,106_u8];
_8 = [181_u8,88_u8,173_u8,18_u8,86_u8,84_u8,169_u8,138_u8];
_8 = [10_u8,0_u8,103_u8,34_u8,67_u8,120_u8,206_u8,73_u8];
_3 = _9;
_17 = Adt59::Variant2 { fld0: RET };
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = RET;
_1 = [25_u8,219_u8,235_u8,236_u8,28_u8,122_u8,15_u8,161_u8];
_3 = [71_u8,102_u8,8_u8,105_u8,210_u8,183_u8,242_u8,230_u8];
_17 = Adt59::Variant2 { fld0: RET };
_3 = _14;
_9 = _14;
_12 = _13;
_12 = _6;
_19.0 = !172_u8;
_5 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
RET = [10335482095532656078_u64,13889622010984176379_u64,3727723008135275239_u64,11868766761194306911_u64,2156677535841604757_u64];
_18 = _10;
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_3 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_6 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_9 = [_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0,_19.0];
_2 = [16782648104291496787_u64,9767347376569716281_u64,11337918601577470568_u64,15834589470009237716_u64,2432102533793947530_u64];
_4 = [11928272416208548955_u64,10642517442388800330_u64,17569848300974801672_u64,7644965854751405097_u64,5485901623128359302_u64];
place!(Field::<[u64; 5]>(Variant(_17, 2), 0)) = [12034929751321756931_u64,11112947268887425513_u64,1622174414818816311_u64,1676322755902072549_u64,64426874385963895_u64];
Goto(bb2)
}
bb17 = {
_5 = [_19.0,_19.0,_31,_19.0,_19.0,_19.0,_31,_19.0];
_30 = '\u{36655}';
place!(Field::<u64>(Variant(_21, 2), 0)) = !3208280005261446077_u64;
_25 = [25410_i16];
_20.0 = 3988983535_u32 as u128;
RET = [Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0),Field::<u64>(Variant(_21, 2), 0)];
_19 = (_31,);
_13 = [_19.0,_31,_19.0,_19.0,_19.0,_31,_31,_19.0];
place!(Field::<u64>(Variant(_17, 3), 2)) = Field::<u64>(Variant(_21, 2), 0);
_15 = [_19.0,_19.0,_31,_19.0,_19.0,_19.0,_31,_19.0];
place!(Field::<*mut u8>(Variant(_17, 3), 5)) = core::ptr::addr_of_mut!(_19.0);
_6 = [_31,_19.0,_19.0,_19.0,_31,_19.0,_19.0,_31];
_9 = [_31,_31,_31,_19.0,_19.0,_31,_19.0,_19.0];
_34 = _35 + _35;
_15 = [_31,_19.0,_19.0,_19.0,_31,_19.0,_31,_19.0];
_33 = (-20439_i16) as f32;
_15 = [_19.0,_19.0,_19.0,_31,_19.0,_19.0,_19.0,_31];
_37.0 = _22 as i32;
_11 = [_31,_31,_31,_31,_31,_31,_31,_19.0];
_25 = [(-6354_i16)];
_37 = (1552713852_i32,);
place!(Field::<u64>(Variant(_21, 2), 0)) = Field::<u64>(Variant(_17, 3), 2);
_30 = '\u{9462}';
_21 = Adt44::Variant2 { fld0: Field::<u64>(Variant(_17, 3), 2) };
_34 = _35 * _35;
_28.fld0 = [6926559131865537380_usize,6_usize,6_usize,6_usize,2_usize];
_11 = _9;
place!(Field::<u64>(Variant(_21, 2), 0)) = Field::<u64>(Variant(_17, 3), 2) | Field::<u64>(Variant(_17, 3), 2);
_14 = _18;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(6_usize, 11_usize, Move(_11), 10_usize, Move(_10), 3_usize, Move(_3), 13_usize, Move(_13)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(6_usize, 7_usize, Move(_7), 22_usize, Move(_22), 9_usize, Move(_9), 37_usize, Move(_37)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(6_usize, 19_usize, Move(_19), 14_usize, Move(_14), 15_usize, Move(_15), 42_usize, _42), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [u8; 8],mut _2: [u8; 8],mut _3: [u8; 8],mut _4: [u64; 5],mut _5: [u64; 5],mut _6: [u8; 8],mut _7: [u8; 8],mut _8: [u8; 8],mut _9: [u8; 8],mut _10: [u8; 8],mut _11: [u8; 8],mut _12: [u8; 8]) -> [u8; 8] {
mir! {
type RET = [u8; 8];
let _13: Adt47;
let _14: Adt47;
let _15: i128;
let _16: bool;
let _17: [u64; 5];
let _18: isize;
let _19: i8;
let _20: *const [i32; 8];
let _21: *const *const char;
let _22: Adt49;
let _23: char;
let _24: *const u128;
let _25: f32;
let _26: f64;
let _27: Adt48;
let _28: f64;
let _29: isize;
let _30: char;
let _31: *mut [u64; 5];
let _32: Adt57;
let _33: [isize; 7];
let _34: (bool,);
let _35: *const char;
let _36: [isize; 7];
let _37: Adt48;
let _38: u128;
let _39: Adt59;
let _40: f64;
let _41: u16;
let _42: [usize; 5];
let _43: (bool,);
let _44: [usize; 5];
let _45: (u8,);
let _46: [i16; 1];
let _47: *const u64;
let _48: f32;
let _49: [u8; 8];
let _50: ();
let _51: ();
{
_4 = [9032710287144861710_u64,14204402519365219879_u64,16838824189599021863_u64,9364871896903197570_u64,5544721841874393422_u64];
_9 = _6;
RET = [114_u8,223_u8,191_u8,50_u8,252_u8,170_u8,34_u8,193_u8];
_7 = _11;
_2 = [250_u8,4_u8,68_u8,246_u8,184_u8,57_u8,16_u8,215_u8];
_3 = [14_u8,100_u8,145_u8,67_u8,155_u8,125_u8,138_u8,203_u8];
RET = [158_u8,114_u8,197_u8,95_u8,146_u8,131_u8,20_u8,186_u8];
_2 = [232_u8,203_u8,80_u8,36_u8,133_u8,188_u8,165_u8,255_u8];
_2 = _3;
_11 = [170_u8,12_u8,70_u8,219_u8,89_u8,1_u8,85_u8,255_u8];
_3 = [159_u8,240_u8,21_u8,94_u8,197_u8,8_u8,187_u8,202_u8];
_15 = (-34776353898033619870786921218576367605_i128) >> 6_usize;
_2 = [131_u8,240_u8,242_u8,90_u8,72_u8,139_u8,108_u8,216_u8];
Goto(bb1)
}
bb1 = {
_3 = [42_u8,234_u8,113_u8,166_u8,151_u8,115_u8,60_u8,49_u8];
_15 = -65385410164488827210070555457460541765_i128;
_17 = _5;
_1 = [50_u8,255_u8,37_u8,114_u8,94_u8,208_u8,152_u8,35_u8];
_8 = _12;
_3 = _1;
_6 = _8;
_10 = [139_u8,83_u8,239_u8,227_u8,210_u8,108_u8,35_u8,237_u8];
RET = [120_u8,199_u8,187_u8,137_u8,74_u8,178_u8,150_u8,227_u8];
_16 = !true;
_10 = [171_u8,159_u8,217_u8,109_u8,7_u8,57_u8,178_u8,173_u8];
_18 = 437463422_u32 as isize;
_10 = [22_u8,219_u8,20_u8,211_u8,155_u8,24_u8,99_u8,12_u8];
Goto(bb2)
}
bb2 = {
_19 = 4_usize as i8;
_19 = 3_i8 * 107_i8;
Call(_11 = fn8(RET, _2, _10, _6, _1, _6, _10, _3, _3, _7, _10, _9, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_1 = _6;
RET = [113_u8,169_u8,27_u8,162_u8,102_u8,55_u8,53_u8,205_u8];
_19 = 4_i8 ^ (-107_i8);
_10 = [132_u8,96_u8,229_u8,168_u8,252_u8,166_u8,123_u8,246_u8];
_6 = [52_u8,108_u8,100_u8,59_u8,48_u8,18_u8,180_u8,68_u8];
_8 = [2_u8,127_u8,71_u8,89_u8,208_u8,29_u8,238_u8,100_u8];
_6 = _8;
_15 = (-37725875334844903999889168207818439133_i128) >> _19;
_18 = !(-9223372036854775808_isize);
RET = _11;
RET = _12;
_3 = [221_u8,202_u8,185_u8,91_u8,171_u8,7_u8,130_u8,4_u8];
_17 = _5;
RET = [42_u8,51_u8,52_u8,112_u8,160_u8,138_u8,48_u8,215_u8];
_11 = [194_u8,163_u8,14_u8,179_u8,22_u8,88_u8,92_u8,96_u8];
_17 = _5;
Goto(bb4)
}
bb4 = {
_4 = [703675099362592306_u64,14114801124125285174_u64,7745624160467275841_u64,12093021218488029309_u64,17936101731751372981_u64];
_17 = [16858761314910661686_u64,3566309883619651973_u64,914144575718246470_u64,2386904070389453098_u64,17272923519716318781_u64];
_1 = _7;
_10 = [241_u8,87_u8,17_u8,235_u8,251_u8,127_u8,197_u8,13_u8];
RET = [96_u8,241_u8,7_u8,162_u8,19_u8,14_u8,29_u8,17_u8];
_25 = 2790_i16 as f32;
_11 = _2;
_7 = [104_u8,81_u8,200_u8,59_u8,36_u8,209_u8,209_u8,116_u8];
_10 = _11;
_11 = RET;
_1 = _10;
_5 = _4;
_5 = _17;
_7 = RET;
_4 = [16147268792843968819_u64,2699771241716747414_u64,9620541522096448623_u64,2658313530850561051_u64,9974403257186083249_u64];
_2 = [106_u8,215_u8,130_u8,40_u8,251_u8,50_u8,12_u8,50_u8];
_15 = 11010_u16 as i128;
_16 = false;
Goto(bb5)
}
bb5 = {
_15 = !15758975761898697345809770350501516972_i128;
_4 = [11930945485248241882_u64,2233418486417126164_u64,8691791552941091832_u64,6168029424054949066_u64,7614602512313014728_u64];
_6 = _9;
_26 = 48882919335342651012814127899965542884_u128 as f64;
_6 = _1;
_26 = (-525999635_i32) as f64;
_15 = (-88661780841059576163963294560589295972_i128) + 129940752429666113709331995795134504848_i128;
_27.fld0 = [13996724116658011811_usize,5345964850403527218_usize,5_usize,0_usize,1290594551541490016_usize];
_3 = [32_u8,183_u8,226_u8,232_u8,55_u8,19_u8,213_u8,180_u8];
_1 = [29_u8,251_u8,151_u8,80_u8,196_u8,79_u8,116_u8,118_u8];
_6 = _12;
RET = _10;
_4 = [14863291958058683961_u64,5815547138913665479_u64,7402925420887618155_u64,11439435236924801377_u64,9078582338022844892_u64];
_5 = [16937982112313384065_u64,9146665020683492388_u64,9073574199478864334_u64,17647438054206459135_u64,9307292896123125692_u64];
_17 = [1296287818412177455_u64,5447277602490265970_u64,2656316641160523276_u64,3617790021948613846_u64,13298967542000954491_u64];
_25 = 52951278500225542367192496000271295616_u128 as f32;
_4 = [11838713624046350544_u64,14476658263971458647_u64,17868640044676567060_u64,5502517819784804391_u64,11884560104494839532_u64];
_1 = [208_u8,81_u8,198_u8,9_u8,72_u8,159_u8,37_u8,254_u8];
_7 = [84_u8,225_u8,246_u8,97_u8,87_u8,15_u8,105_u8,107_u8];
RET = [104_u8,226_u8,138_u8,101_u8,40_u8,220_u8,130_u8,20_u8];
RET = _7;
_10 = _9;
_19 = _16 as i8;
_1 = _3;
_6 = [96_u8,221_u8,112_u8,205_u8,82_u8,3_u8,147_u8,156_u8];
_16 = !false;
Call(_28 = core::intrinsics::transmute(_1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_11 = _1;
_15 = -53016587744119806604598810504430419169_i128;
_11 = [186_u8,39_u8,202_u8,122_u8,233_u8,91_u8,2_u8,43_u8];
_23 = '\u{da2e8}';
_12 = [96_u8,209_u8,150_u8,6_u8,177_u8,244_u8,30_u8,41_u8];
_19 = (-4033_i16) as i8;
_11 = _9;
_9 = [170_u8,249_u8,26_u8,122_u8,169_u8,172_u8,87_u8,4_u8];
_30 = _23;
_8 = [223_u8,249_u8,199_u8,188_u8,152_u8,163_u8,166_u8,96_u8];
_6 = [4_u8,251_u8,194_u8,206_u8,159_u8,218_u8,180_u8,212_u8];
_25 = 207_u8 as f32;
_23 = _30;
_25 = _15 as f32;
_18 = 255722981478255892762958949766399750150_u128 as isize;
_29 = -_18;
_6 = [133_u8,170_u8,220_u8,121_u8,18_u8,177_u8,86_u8,69_u8];
_17 = [2255794931415237505_u64,16179795301771217817_u64,14088307601077588660_u64,1560120653831922365_u64,15766319004979839358_u64];
RET = _7;
RET = [239_u8,102_u8,199_u8,87_u8,205_u8,52_u8,204_u8,56_u8];
_11 = _9;
_9 = [102_u8,120_u8,172_u8,178_u8,111_u8,31_u8,219_u8,236_u8];
_29 = _18 | _18;
_18 = _25 as isize;
_15 = !(-151804859383743438162872199596983081326_i128);
_7 = [45_u8,152_u8,182_u8,205_u8,204_u8,131_u8,53_u8,198_u8];
_31 = core::ptr::addr_of_mut!(_5);
Goto(bb7)
}
bb7 = {
_30 = _23;
_16 = true;
RET = [237_u8,168_u8,79_u8,168_u8,24_u8,218_u8,228_u8,120_u8];
_26 = _28;
_23 = _30;
_6 = _3;
_23 = _30;
_23 = _30;
_9 = RET;
_5 = [8243145643659007490_u64,4433404108704922165_u64,9131771259856761206_u64,407898701489253181_u64,9022216439767715638_u64];
Goto(bb8)
}
bb8 = {
_12 = [196_u8,87_u8,128_u8,152_u8,85_u8,2_u8,191_u8,24_u8];
_33 = [_29,_29,_29,_18,_29,_18,_29];
_34 = (_16,);
_15 = 114970514641179576990445990788033726387_i128 * 121124504140889442974956016184088111623_i128;
_5 = _4;
Goto(bb9)
}
bb9 = {
_11 = [12_u8,248_u8,40_u8,125_u8,166_u8,10_u8,102_u8,220_u8];
RET = [151_u8,95_u8,215_u8,173_u8,255_u8,137_u8,121_u8,95_u8];
_19 = 123_i8;
_35 = core::ptr::addr_of!(_30);
_12 = [61_u8,139_u8,184_u8,94_u8,214_u8,221_u8,123_u8,246_u8];
_16 = _34.0;
_23 = _30;
Goto(bb10)
}
bb10 = {
_34.0 = _16;
_18 = -_29;
_11 = [253_u8,34_u8,25_u8,142_u8,233_u8,69_u8,20_u8,32_u8];
_24 = core::ptr::addr_of!(_38);
_9 = [109_u8,71_u8,168_u8,178_u8,236_u8,211_u8,24_u8,24_u8];
_26 = _28;
_28 = _26 - _26;
RET = [34_u8,159_u8,72_u8,20_u8,105_u8,187_u8,203_u8,16_u8];
_34 = (_16,);
_12 = [189_u8,141_u8,92_u8,211_u8,124_u8,36_u8,203_u8,107_u8];
_37 = Move(_27);
Goto(bb11)
}
bb11 = {
_24 = core::ptr::addr_of!((*_24));
_16 = _34.0;
_30 = _23;
_28 = _26;
_27 = Move(_37);
_4 = [2464613440239144175_u64,11016138986955654539_u64,12216659736962359974_u64,1338525206161075076_u64,11480610433982197883_u64];
_33 = [_18,_18,_18,_18,_29,_18,_29];
_16 = _34.0;
RET = [167_u8,27_u8,221_u8,194_u8,6_u8,108_u8,121_u8,133_u8];
Goto(bb12)
}
bb12 = {
_37.fld0 = [2_usize,6283484330445203163_usize,8796256691224376603_usize,7_usize,14132636671272966382_usize];
_42 = _37.fld0;
_41 = !2462_u16;
_15 = _41 as i128;
_23 = (*_35);
_16 = !_34.0;
_17 = _4;
_39 = Adt59::Variant2 { fld0: _5 };
SetDiscriminant(_39, 1);
_9 = [7_u8,0_u8,36_u8,208_u8,245_u8,59_u8,245_u8,113_u8];
_29 = _18;
_16 = !_34.0;
_35 = core::ptr::addr_of!((*_35));
_8 = [253_u8,56_u8,128_u8,191_u8,148_u8,14_u8,185_u8,226_u8];
_26 = _28 * _28;
_40 = -_26;
RET = [103_u8,120_u8,62_u8,247_u8,3_u8,221_u8,98_u8,75_u8];
_37 = Move(_27);
_30 = _23;
_43 = (_34.0,);
_29 = _18 + _18;
_29 = _18 | _18;
_19 = _25 as i8;
Goto(bb13)
}
bb13 = {
_4 = [15140000779295198315_u64,1697117734547375560_u64,2779898976616905565_u64,834548493129815087_u64,4554181404861459254_u64];
_17 = [857757737523292405_u64,749617644611649064_u64,14437380539965756470_u64,17365735862754426017_u64,2055693400683023747_u64];
_17 = [129863056725047371_u64,10382577515203143206_u64,17455964151766000552_u64,15806659401488022754_u64,430830032430979246_u64];
_28 = _41 as f64;
_6 = [138_u8,32_u8,195_u8,44_u8,34_u8,212_u8,60_u8,229_u8];
_37.fld0 = [8771446839523629569_usize,6390402455249242500_usize,11074576303019938511_usize,5_usize,15856718683072849749_usize];
Goto(bb14)
}
bb14 = {
_40 = _26 + _26;
_43.0 = !_16;
_39 = Adt59::Variant2 { fld0: (*_31) };
_42 = [4_usize,3_usize,9458888126768891828_usize,6_usize,14618265505800088797_usize];
_21 = core::ptr::addr_of!(_35);
_15 = !53485879779191784665624809212272348235_i128;
_8 = [248_u8,151_u8,167_u8,177_u8,190_u8,30_u8,242_u8,155_u8];
_41 = 8182_u16;
_29 = !_18;
Goto(bb15)
}
bb15 = {
Call(_50 = dump_var(7_usize, 16_usize, Move(_16), 43_usize, Move(_43), 3_usize, Move(_3), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_50 = dump_var(7_usize, 30_usize, Move(_30), 7_usize, Move(_7), 33_usize, Move(_33), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_50 = dump_var(7_usize, 8_usize, Move(_8), 18_usize, Move(_18), 11_usize, Move(_11), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [u8; 8],mut _2: [u8; 8],mut _3: [u8; 8],mut _4: [u8; 8],mut _5: [u8; 8],mut _6: [u8; 8],mut _7: [u8; 8],mut _8: [u8; 8],mut _9: [u8; 8],mut _10: [u8; 8],mut _11: [u8; 8],mut _12: [u8; 8],mut _13: [u8; 8]) -> [u8; 8] {
mir! {
type RET = [u8; 8];
let _14: [usize; 5];
let _15: i64;
let _16: f32;
let _17: f32;
let _18: isize;
let _19: Adt58;
let _20: (i32,);
let _21: [u64; 5];
let _22: f64;
let _23: isize;
let _24: (bool,);
let _25: u32;
let _26: [i16; 1];
let _27: char;
let _28: *const f64;
let _29: Adt55;
let _30: (i32,);
let _31: Adt48;
let _32: f32;
let _33: i128;
let _34: u16;
let _35: char;
let _36: &'static [u64; 5];
let _37: [isize; 7];
let _38: Adt53;
let _39: isize;
let _40: [u64; 5];
let _41: (u8,);
let _42: isize;
let _43: [u64; 5];
let _44: ();
let _45: ();
{
_9 = [21_u8,100_u8,163_u8,36_u8,248_u8,47_u8,79_u8,225_u8];
RET = [43_u8,208_u8,27_u8,114_u8,38_u8,215_u8,225_u8,52_u8];
_6 = _7;
_11 = [200_u8,123_u8,253_u8,86_u8,139_u8,201_u8,93_u8,122_u8];
_10 = _12;
RET = [82_u8,99_u8,72_u8,109_u8,229_u8,64_u8,204_u8,116_u8];
_11 = _7;
_5 = [250_u8,168_u8,170_u8,179_u8,218_u8,44_u8,57_u8,153_u8];
_7 = RET;
_2 = [221_u8,96_u8,46_u8,220_u8,67_u8,206_u8,128_u8,65_u8];
RET = _6;
_11 = [92_u8,252_u8,228_u8,13_u8,119_u8,167_u8,213_u8,207_u8];
_12 = _10;
_10 = _4;
_13 = [84_u8,236_u8,166_u8,21_u8,220_u8,59_u8,126_u8,101_u8];
_7 = [216_u8,165_u8,21_u8,20_u8,60_u8,9_u8,148_u8,141_u8];
_13 = [122_u8,211_u8,168_u8,107_u8,0_u8,181_u8,145_u8,225_u8];
_15 = false as i64;
Goto(bb1)
}
bb1 = {
_8 = _5;
_9 = [158_u8,149_u8,136_u8,0_u8,112_u8,93_u8,92_u8,240_u8];
_4 = _9;
_18 = 2102856688_u32 as isize;
Call(_8 = fn9(_6, _10, _10, _2, _6, _9, _6, _9, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = [197_u8,21_u8,197_u8,252_u8,193_u8,176_u8,206_u8,179_u8];
_5 = [82_u8,197_u8,234_u8,235_u8,109_u8,96_u8,145_u8,151_u8];
_14 = [6594416193632599927_usize,7_usize,11117806055798297687_usize,16656473707912293723_usize,5708020964789030686_usize];
_10 = [94_u8,103_u8,18_u8,86_u8,86_u8,143_u8,109_u8,27_u8];
_5 = _3;
_17 = _15 as f32;
_2 = [224_u8,100_u8,34_u8,192_u8,127_u8,114_u8,65_u8,157_u8];
_1 = [124_u8,97_u8,166_u8,163_u8,169_u8,79_u8,7_u8,254_u8];
RET = [145_u8,143_u8,105_u8,246_u8,222_u8,42_u8,119_u8,173_u8];
_2 = _1;
_14 = [4_usize,11849367680509128447_usize,4_usize,14046081077614633543_usize,5269568953513979003_usize];
_13 = [251_u8,198_u8,4_u8,149_u8,10_u8,132_u8,35_u8,54_u8];
Goto(bb3)
}
bb3 = {
_20 = ((-1513177220_i32),);
_19 = Adt58::Variant2 { fld0: _14 };
_17 = 18443151828928152304_u64 as f32;
_12 = [32_u8,18_u8,16_u8,160_u8,137_u8,124_u8,207_u8,181_u8];
_2 = [105_u8,199_u8,19_u8,53_u8,203_u8,102_u8,59_u8,231_u8];
_7 = _6;
_10 = [187_u8,204_u8,133_u8,125_u8,55_u8,64_u8,83_u8,250_u8];
_14 = [5_usize,0_usize,0_usize,1_usize,13800365759674874931_usize];
_4 = [205_u8,175_u8,90_u8,204_u8,18_u8,228_u8,88_u8,40_u8];
SetDiscriminant(_19, 1);
match _20.0 {
340282366920938463463374607430255034236 => bb5,
_ => bb4
}
}
bb4 = {
_3 = [197_u8,21_u8,197_u8,252_u8,193_u8,176_u8,206_u8,179_u8];
_5 = [82_u8,197_u8,234_u8,235_u8,109_u8,96_u8,145_u8,151_u8];
_14 = [6594416193632599927_usize,7_usize,11117806055798297687_usize,16656473707912293723_usize,5708020964789030686_usize];
_10 = [94_u8,103_u8,18_u8,86_u8,86_u8,143_u8,109_u8,27_u8];
_5 = _3;
_17 = _15 as f32;
_2 = [224_u8,100_u8,34_u8,192_u8,127_u8,114_u8,65_u8,157_u8];
_1 = [124_u8,97_u8,166_u8,163_u8,169_u8,79_u8,7_u8,254_u8];
RET = [145_u8,143_u8,105_u8,246_u8,222_u8,42_u8,119_u8,173_u8];
_2 = _1;
_14 = [4_usize,11849367680509128447_usize,4_usize,14046081077614633543_usize,5269568953513979003_usize];
_13 = [251_u8,198_u8,4_u8,149_u8,10_u8,132_u8,35_u8,54_u8];
Goto(bb3)
}
bb5 = {
_20 = (822893253_i32,);
_20 = (1837734028_i32,);
RET = [194_u8,219_u8,182_u8,123_u8,29_u8,159_u8,36_u8,15_u8];
_20.0 = !779986176_i32;
place!(Field::<char>(Variant(_19, 1), 1)) = '\u{69bba}';
_20.0 = 4_usize as i32;
Goto(bb6)
}
bb6 = {
_21 = [2714265799497450418_u64,11144189552529292312_u64,10924309585012848839_u64,11699422540023406714_u64,15106813979481502931_u64];
place!(Field::<char>(Variant(_19, 1), 1)) = '\u{79772}';
place!(Field::<f64>(Variant(_19, 1), 2)) = 9784_u16 as f64;
_11 = _10;
_16 = _17;
Goto(bb7)
}
bb7 = {
_9 = _10;
_4 = _10;
_20.0 = !(-256297895_i32);
_25 = 2196672520_u32;
place!(Field::<char>(Variant(_19, 1), 1)) = '\u{fddcb}';
_14 = [2290261222383978579_usize,2_usize,13045737159616035433_usize,17012394852315634809_usize,5255999571307223968_usize];
place!(Field::<f64>(Variant(_19, 1), 2)) = 86_u8 as f64;
_8 = _10;
place!(Field::<f64>(Variant(_19, 1), 2)) = (-94351572181478351781357289124449928718_i128) as f64;
_22 = -Field::<f64>(Variant(_19, 1), 2);
_21 = [17803072674630913556_u64,4562066230041912169_u64,1641862538187292993_u64,5225885624117072155_u64,12553543779002004762_u64];
_10 = [27_u8,69_u8,177_u8,5_u8,9_u8,183_u8,236_u8,172_u8];
_9 = [142_u8,247_u8,94_u8,215_u8,253_u8,240_u8,36_u8,167_u8];
_4 = [138_u8,240_u8,133_u8,218_u8,199_u8,143_u8,173_u8,209_u8];
_10 = [101_u8,58_u8,243_u8,73_u8,37_u8,114_u8,157_u8,21_u8];
_22 = 11965702293248104076_u64 as f64;
_24 = (false,);
_7 = _10;
RET = _1;
_15 = !4721594581480044721_i64;
_27 = Field::<char>(Variant(_19, 1), 1);
_20 = ((-1537048626_i32),);
_17 = _16;
_1 = [91_u8,182_u8,249_u8,106_u8,110_u8,92_u8,61_u8,134_u8];
_19 = Adt58::Variant2 { fld0: _14 };
Goto(bb8)
}
bb8 = {
_13 = [59_u8,118_u8,22_u8,155_u8,48_u8,180_u8,65_u8,167_u8];
Goto(bb9)
}
bb9 = {
_20.0 = _18 as i32;
_6 = [117_u8,93_u8,194_u8,160_u8,203_u8,36_u8,120_u8,78_u8];
_24 = (false,);
_20.0 = 110_i8 as i32;
_20.0 = 867939240_i32;
_26 = [(-10929_i16)];
_8 = [95_u8,212_u8,226_u8,216_u8,226_u8,177_u8,208_u8,177_u8];
_24.0 = !false;
_31.fld0 = _14;
_28 = core::ptr::addr_of!(_22);
_30.0 = 40789_u16 as i32;
_33 = 828520560162697919970349694873785076_u128 as i128;
_14 = [6_usize,4824493571492394097_usize,7_usize,6_usize,14587625281383766424_usize];
_12 = [163_u8,195_u8,34_u8,76_u8,19_u8,223_u8,147_u8,13_u8];
_31.fld0 = Field::<[usize; 5]>(Variant(_19, 2), 0);
_32 = 20983_u16 as f32;
_11 = [249_u8,35_u8,196_u8,128_u8,73_u8,11_u8,82_u8,236_u8];
_14 = _31.fld0;
_20 = (_30.0,);
_5 = _3;
_30.0 = !_20.0;
_30 = (_20.0,);
RET = [136_u8,91_u8,228_u8,198_u8,242_u8,136_u8,118_u8,0_u8];
Goto(bb10)
}
bb10 = {
_31.fld0 = [4_usize,17879303485828102789_usize,6553520105619223854_usize,12499769943212498673_usize,7_usize];
_18 = _20.0 as isize;
_7 = _3;
_31 = Adt48 { fld0: _14 };
_34 = 41738_u16 - 49011_u16;
_37 = [_18,_18,_18,_18,_18,_18,_18];
_23 = _30.0 as isize;
_14 = [12864283133813158702_usize,9110930178357999205_usize,737595539839177218_usize,16539719284013564878_usize,6_usize];
_22 = _25 as f64;
_10 = [244_u8,110_u8,14_u8,165_u8,254_u8,137_u8,174_u8,171_u8];
_25 = 3454101710_u32;
_13 = [243_u8,200_u8,155_u8,119_u8,104_u8,250_u8,142_u8,245_u8];
_33 = -(-61441915580832268924870364784802307510_i128);
_32 = _17 * _16;
match _25 {
0 => bb11,
1 => bb12,
3454101710 => bb14,
_ => bb13
}
}
bb11 = {
_20.0 = _18 as i32;
_6 = [117_u8,93_u8,194_u8,160_u8,203_u8,36_u8,120_u8,78_u8];
_24 = (false,);
_20.0 = 110_i8 as i32;
_20.0 = 867939240_i32;
_26 = [(-10929_i16)];
_8 = [95_u8,212_u8,226_u8,216_u8,226_u8,177_u8,208_u8,177_u8];
_24.0 = !false;
_31.fld0 = _14;
_28 = core::ptr::addr_of!(_22);
_30.0 = 40789_u16 as i32;
_33 = 828520560162697919970349694873785076_u128 as i128;
_14 = [6_usize,4824493571492394097_usize,7_usize,6_usize,14587625281383766424_usize];
_12 = [163_u8,195_u8,34_u8,76_u8,19_u8,223_u8,147_u8,13_u8];
_31.fld0 = Field::<[usize; 5]>(Variant(_19, 2), 0);
_32 = 20983_u16 as f32;
_11 = [249_u8,35_u8,196_u8,128_u8,73_u8,11_u8,82_u8,236_u8];
_14 = _31.fld0;
_20 = (_30.0,);
_5 = _3;
_30.0 = !_20.0;
_30 = (_20.0,);
RET = [136_u8,91_u8,228_u8,198_u8,242_u8,136_u8,118_u8,0_u8];
Goto(bb10)
}
bb12 = {
_13 = [59_u8,118_u8,22_u8,155_u8,48_u8,180_u8,65_u8,167_u8];
Goto(bb9)
}
bb13 = {
_21 = [2714265799497450418_u64,11144189552529292312_u64,10924309585012848839_u64,11699422540023406714_u64,15106813979481502931_u64];
place!(Field::<char>(Variant(_19, 1), 1)) = '\u{79772}';
place!(Field::<f64>(Variant(_19, 1), 2)) = 9784_u16 as f64;
_11 = _10;
_16 = _17;
Goto(bb7)
}
bb14 = {
_35 = _27;
_12 = [247_u8,178_u8,70_u8,247_u8,91_u8,90_u8,167_u8,26_u8];
_20.0 = -_30.0;
_40 = [16565152622241283815_u64,634874835623529375_u64,14836741423307652593_u64,9752928306961570044_u64,14918334757295471578_u64];
_38.fld1 = [_24.0,_24.0,_24.0,_24.0];
_30 = _20;
_18 = !_23;
_10 = [107_u8,248_u8,1_u8,135_u8,203_u8,189_u8,7_u8,107_u8];
_6 = [93_u8,92_u8,211_u8,137_u8,65_u8,160_u8,107_u8,190_u8];
_7 = [63_u8,47_u8,202_u8,34_u8,210_u8,210_u8,240_u8,157_u8];
_7 = [78_u8,3_u8,133_u8,103_u8,27_u8,20_u8,7_u8,244_u8];
_14 = [9041315202883831907_usize,0_usize,11539832410882242083_usize,7747719675276020750_usize,7_usize];
_24 = (false,);
_36 = &_21;
_30 = (_20.0,);
_2 = [54_u8,239_u8,174_u8,188_u8,9_u8,62_u8,65_u8,64_u8];
_17 = _25 as f32;
_41.0 = 242_u8 ^ 232_u8;
_20.0 = _30.0 * _30.0;
_39 = _23 & _18;
_31.fld0 = [2_usize,3_usize,0_usize,1_usize,5_usize];
_13 = [_41.0,_41.0,_41.0,_41.0,_41.0,_41.0,_41.0,_41.0];
_24.0 = false;
_34 = 978_u16;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(8_usize, 5_usize, Move(_5), 26_usize, Move(_26), 41_usize, Move(_41), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(8_usize, 37_usize, Move(_37), 24_usize, Move(_24), 3_usize, Move(_3), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(8_usize, 15_usize, Move(_15), 20_usize, Move(_20), 30_usize, Move(_30), 18_usize, Move(_18)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(8_usize, 21_usize, Move(_21), 39_usize, Move(_39), 11_usize, Move(_11), 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [u8; 8],mut _2: [u8; 8],mut _3: [u8; 8],mut _4: [u8; 8],mut _5: [u8; 8],mut _6: [u8; 8],mut _7: [u8; 8],mut _8: [u8; 8],mut _9: [u8; 8]) -> [u8; 8] {
mir! {
type RET = [u8; 8];
let _10: f32;
let _11: isize;
let _12: Adt50;
let _13: u8;
let _14: u16;
let _15: u8;
let _16: [usize; 5];
let _17: *const *const *const f64;
let _18: u64;
let _19: f64;
let _20: u64;
let _21: f32;
let _22: u128;
let _23: char;
let _24: [i16; 1];
let _25: u8;
let _26: *const char;
let _27: u32;
let _28: bool;
let _29: char;
let _30: isize;
let _31: f64;
let _32: *const f64;
let _33: [isize; 7];
let _34: Adt45;
let _35: [bool; 4];
let _36: (bool,);
let _37: *mut u8;
let _38: u8;
let _39: i32;
let _40: i16;
let _41: [bool; 4];
let _42: isize;
let _43: Adt48;
let _44: bool;
let _45: isize;
let _46: (bool,);
let _47: char;
let _48: [isize; 7];
let _49: i128;
let _50: [usize; 5];
let _51: [u8; 8];
let _52: (u8,);
let _53: *mut [u64; 5];
let _54: ();
let _55: ();
{
_7 = [27_u8,113_u8,140_u8,196_u8,254_u8,26_u8,24_u8,22_u8];
_7 = [134_u8,157_u8,116_u8,250_u8,105_u8,182_u8,242_u8,35_u8];
RET = [235_u8,197_u8,183_u8,164_u8,91_u8,50_u8,120_u8,66_u8];
RET = [100_u8,132_u8,200_u8,104_u8,1_u8,187_u8,44_u8,26_u8];
Goto(bb1)
}
bb1 = {
RET = [67_u8,28_u8,149_u8,69_u8,96_u8,138_u8,248_u8,223_u8];
_2 = [16_u8,42_u8,64_u8,126_u8,207_u8,42_u8,85_u8,62_u8];
_10 = 2384823712_u32 as f32;
_5 = _9;
RET = [62_u8,211_u8,205_u8,226_u8,233_u8,254_u8,205_u8,51_u8];
_9 = _4;
_11 = (-7379971388800337630_i64) as isize;
RET = [75_u8,49_u8,220_u8,252_u8,110_u8,185_u8,205_u8,194_u8];
_11 = false as isize;
_9 = [96_u8,200_u8,53_u8,191_u8,97_u8,194_u8,227_u8,146_u8];
_3 = [243_u8,229_u8,160_u8,27_u8,214_u8,87_u8,227_u8,188_u8];
RET = [201_u8,94_u8,83_u8,54_u8,171_u8,160_u8,8_u8,253_u8];
_13 = !255_u8;
_16 = [10637908492286651607_usize,7_usize,3283523752531497159_usize,8717179649543611429_usize,11602528586328793545_usize];
RET = [_13,_13,_13,_13,_13,_13,_13,_13];
_15 = _13;
_10 = _15 as f32;
_15 = _13 | _13;
_18 = 12012508405259323549_u64 & 17107011178768075101_u64;
_18 = 41238_u16 as u64;
Goto(bb2)
}
bb2 = {
_14 = !9635_u16;
_18 = 4200869549228071888_u64;
RET = _1;
_1 = [_15,_15,_13,_15,_15,_15,_15,_13];
_20 = _18 | _18;
_3 = _4;
_20 = _18 + _18;
RET = [_15,_13,_15,_13,_15,_15,_15,_15];
_21 = _10 + _10;
Goto(bb3)
}
bb3 = {
_2 = [_13,_15,_13,_13,_13,_15,_15,_15];
_11 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1 = _9;
_8 = [_13,_15,_15,_13,_15,_15,_15,_13];
_19 = _14 as f64;
_7 = [_15,_15,_15,_15,_13,_15,_15,_15];
_2 = [_13,_13,_13,_15,_13,_15,_15,_15];
_20 = 5696072660490184757_i64 as u64;
_19 = 125_i8 as f64;
_8 = [_15,_15,_15,_15,_15,_15,_13,_13];
_5 = [_13,_15,_15,_13,_13,_13,_15,_15];
_2 = [_15,_13,_15,_13,_15,_13,_15,_13];
_2 = [_15,_15,_15,_15,_13,_13,_15,_15];
_15 = _13 + _13;
RET = [_15,_15,_15,_15,_13,_15,_15,_13];
_18 = 4412910630138786636_i64 as u64;
_15 = _13;
_18 = _19 as u64;
_23 = '\u{f8ea3}';
_16 = [4_usize,7_usize,13684173464349307632_usize,5_usize,4_usize];
_3 = _6;
_4 = _7;
_15 = _13;
_21 = _10 - _10;
_5 = [_15,_15,_15,_13,_15,_15,_13,_15];
_2 = _9;
_14 = !43563_u16;
Call(_12 = fn10(_6, _16, _3, _1, _2, _6, _4, _20, _1, _3, _16, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_2 = [_15,_15,_15,_15,_15,_13,_15,_13];
_11 = 5159989162343884403_i64 as isize;
_20 = _18;
_15 = !_13;
RET = _3;
RET = [_13,_13,_15,_13,_13,_15,_13,_15];
_9 = _3;
_24 = [(-5945_i16)];
_15 = _14 as u8;
_24 = [(-10834_i16)];
RET = _9;
_10 = _21 + _21;
_23 = '\u{66658}';
_5 = [_13,_15,_15,_15,_15,_15,_15,_13];
_20 = _18;
_23 = '\u{1f134}';
_25 = !_15;
_20 = 160462700814851270026335071497212380170_u128 as u64;
Goto(bb5)
}
bb5 = {
_1 = [_15,_25,_15,_25,_25,_13,_25,_25];
_21 = _10;
_27 = !2025197342_u32;
_16 = [7_usize,17660855816338647150_usize,4_usize,6_usize,0_usize];
_6 = [_25,_25,_25,_15,_15,_13,_13,_15];
_19 = 295478345486413360038942788606788509568_u128 as f64;
_26 = core::ptr::addr_of!(_23);
_10 = -_21;
_29 = _23;
_5 = _3;
_22 = 173812978146361714770707615698404144824_u128;
_15 = _13;
_25 = _13 >> _13;
_22 = 114448277408401897326662845762548012027_u128 * 315159342269775093656307702560359873870_u128;
_28 = true;
_16 = [6_usize,61030991666291155_usize,17254685724870837728_usize,5_usize,3_usize];
_15 = !_25;
RET = [_15,_25,_25,_25,_15,_25,_15,_25];
_4 = [_15,_13,_15,_25,_25,_15,_25,_13];
_23 = _29;
_23 = _29;
_19 = _11 as f64;
_29 = _23;
RET = [_25,_15,_25,_25,_25,_13,_25,_25];
_6 = _3;
_22 = 190343760929130454677250612489816504327_u128 - 184460695387817009358208329541440510250_u128;
Call(_32 = fn18(_9, _25, _16, _29, _21, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_4 = [_13,_13,_13,_25,_25,_25,_25,_15];
_4 = _6;
_1 = [_25,_25,_15,_25,_15,_25,_13,_15];
_15 = _25;
_5 = [_25,_25,_25,_15,_15,_15,_13,_25];
Call(_30 = core::intrinsics::transmute(_3), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_4 = [_15,_25,_13,_25,_25,_15,_25,_13];
_25 = _15;
_23 = _29;
_33 = [_30,_30,_30,_11,_30,_30,_30];
_34.fld0 = core::ptr::addr_of!(_31);
_1 = _8;
_2 = RET;
_34.fld1 = [_28,_28,_28,_28];
_10 = -_21;
_34.fld3 = [7_usize,14407946636481057696_usize,3_usize,1_usize,5_usize];
_24 = [28972_i16];
_8 = [_15,_15,_15,_15,_15,_13,_25,_15];
RET = [_13,_25,_13,_15,_15,_15,_15,_15];
_9 = _3;
_4 = _3;
_30 = -_11;
Goto(bb8)
}
bb8 = {
_34.fld0 = _32;
_24 = [(-854_i16)];
RET = [_25,_15,_25,_15,_15,_25,_15,_15];
_2 = [_13,_15,_25,_25,_13,_25,_15,_25];
_9 = [_15,_15,_15,_15,_15,_25,_15,_15];
_34.fld0 = core::ptr::addr_of!(_19);
_16 = [7_usize,13305679820077946608_usize,17850062626992080362_usize,17040637315134214001_usize,1916317652147200156_usize];
_32 = core::ptr::addr_of!(_31);
_9 = [_13,_13,_25,_15,_25,_15,_15,_15];
_34.fld3 = [2_usize,5_usize,5_usize,9490890684419577222_usize,4_usize];
Goto(bb9)
}
bb9 = {
_5 = [_25,_25,_15,_25,_15,_15,_25,_15];
_16 = [1_usize,3602457169213902446_usize,1_usize,2241194092004275579_usize,2_usize];
_35 = [_28,_28,_28,_28];
_24 = [27364_i16];
_24 = [16930_i16];
_34.fld1 = [_28,_28,_28,_28];
_28 = true;
_28 = !false;
_36 = (_28,);
_37 = core::ptr::addr_of_mut!(_13);
_20 = _22 as u64;
_29 = (*_26);
_26 = core::ptr::addr_of!(_29);
_16 = _34.fld3;
_31 = -_19;
Goto(bb10)
}
bb10 = {
_8 = [(*_37),(*_37),(*_37),(*_37),_15,_15,_15,(*_37)];
_23 = (*_26);
_24 = [(-29269_i16)];
_5 = [_25,_13,(*_37),(*_37),(*_37),(*_37),_25,_25];
_11 = _30 + _30;
_6 = [_25,_25,_13,(*_37),_13,_25,_15,_15];
_10 = _11 as f32;
_25 = !_13;
_20 = _18 | _18;
_18 = _20;
_8 = _3;
_9 = [(*_37),(*_37),(*_37),_15,(*_37),(*_37),_15,_25];
_41 = [_28,_28,_36.0,_28];
_15 = !_13;
_13 = 878936911_i32 as u8;
RET = [_13,(*_37),_15,(*_37),_13,_13,_25,_15];
Goto(bb11)
}
bb11 = {
_24 = [(-9572_i16)];
_7 = [_13,(*_37),_25,(*_37),_25,_13,_13,(*_37)];
_2 = _8;
_2 = _6;
_32 = _34.fld0;
_43.fld0 = _34.fld3;
RET = [(*_37),_25,(*_37),_13,_25,(*_37),(*_37),_13];
_24 = [(-9831_i16)];
_30 = _11 + _11;
_40 = (-1376_i16) & (-3737_i16);
Goto(bb12)
}
bb12 = {
_16 = [5_usize,528088229682731404_usize,0_usize,12252444500742324619_usize,4_usize];
_27 = 1329433969_u32;
_30 = _10 as isize;
_7 = [_15,(*_37),_15,_13,_13,(*_37),(*_37),_15];
_38 = (*_37);
_35 = [_36.0,_36.0,_28,_28];
_10 = -_21;
_26 = core::ptr::addr_of!((*_26));
_2 = [_13,_38,_38,_15,_25,_13,_13,(*_37)];
_38 = _15 * _25;
_34.fld3 = [5048590315524745459_usize,17215684130726217259_usize,3492048122204447306_usize,2_usize,3735799559531976178_usize];
_35 = [_36.0,_28,_36.0,_28];
_26 = core::ptr::addr_of!((*_26));
_1 = [_38,(*_37),_38,_25,_15,_13,_25,(*_37)];
_7 = _4;
_7 = [_15,_15,_13,_13,_38,(*_37),_38,_38];
_46.0 = _38 >= (*_37);
_43 = Adt48 { fld0: _16 };
_49 = -29007636269957718411903069297159498829_i128;
_39 = !578283103_i32;
_5 = _4;
_43 = Adt48 { fld0: _34.fld3 };
Goto(bb13)
}
bb13 = {
_2 = [_38,_25,(*_37),(*_37),(*_37),_15,(*_37),_13];
_48 = [_11,_11,_11,_11,_11,_11,_30];
_13 = !_25;
_11 = _30 + _30;
_28 = _36.0;
_46.0 = _28;
_36.0 = _46.0 & _28;
_19 = _31;
_49 = -135459560531756819579344496481918894510_i128;
_23 = (*_26);
_25 = (*_37);
_47 = _29;
_44 = _28;
_19 = _31 - _31;
_26 = core::ptr::addr_of!(_29);
Goto(bb14)
}
bb14 = {
_23 = (*_26);
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(9_usize, 24_usize, Move(_24), 3_usize, Move(_3), 48_usize, Move(_48), 47_usize, Move(_47)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(9_usize, 27_usize, Move(_27), 7_usize, Move(_7), 13_usize, Move(_13), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(9_usize, 30_usize, Move(_30), 38_usize, Move(_38), 2_usize, Move(_2), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(9_usize, 1_usize, Move(_1), 41_usize, Move(_41), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_54 = dump_var(9_usize, 39_usize, Move(_39), 36_usize, Move(_36), 55_usize, _55, 55_usize, _55), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [u8; 8],mut _2: [usize; 5],mut _3: [u8; 8],mut _4: [u8; 8],mut _5: [u8; 8],mut _6: [u8; 8],mut _7: [u8; 8],mut _8: u64,mut _9: [u8; 8],mut _10: [u8; 8],mut _11: [usize; 5],mut _12: [usize; 5]) -> Adt50 {
mir! {
type RET = Adt50;
let _13: (u8,);
let _14: char;
let _15: usize;
let _16: (bool,);
let _17: Adt53;
let _18: isize;
let _19: [u8; 8];
let _20: u16;
let _21: u64;
let _22: Adt45;
let _23: f32;
let _24: [u64; 5];
let _25: isize;
let _26: [i16; 1];
let _27: bool;
let _28: u16;
let _29: Adt49;
let _30: (bool,);
let _31: *const u128;
let _32: bool;
let _33: [u8; 8];
let _34: [isize; 7];
let _35: (bool,);
let _36: ();
let _37: ();
{
_7 = [34_u8,163_u8,98_u8,65_u8,12_u8,208_u8,64_u8,71_u8];
_11 = [3_usize,1598563742245821190_usize,0_usize,8963397040174081023_usize,1938495497228454464_usize];
_9 = _3;
_12 = [1847977288057268312_usize,1_usize,4_usize,1087822029425646072_usize,2320705290323797419_usize];
_4 = [175_u8,17_u8,91_u8,8_u8,200_u8,181_u8,223_u8,40_u8];
_8 = false as u64;
_10 = [153_u8,161_u8,159_u8,187_u8,70_u8,194_u8,59_u8,117_u8];
_13.0 = 2518467163_u32 as u8;
_6 = _7;
_7 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_10 = _5;
_6 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_10 = _4;
_13.0 = (-9223372036854775808_isize) as u8;
_13 = (228_u8,);
_15 = 2_usize | 1_usize;
_15 = '\u{aed0b}' as usize;
Call(RET = fn11(_10, _2, _2, _4, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13 = (91_u8,);
_2 = _11;
_4 = _5;
_13.0 = 123_u8;
_14 = '\u{62dc1}';
match _13.0 {
0 => bb2,
123 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_8 = !11296484114740095939_u64;
_6 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_1 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_17.fld1 = [true,true,true,true];
_16 = (false,);
_17.fld1 = [_16.0,_16.0,_16.0,_16.0];
_15 = 1701689717180099394_usize & 3_usize;
_16 = (true,);
_13.0 = !90_u8;
_19 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13.0 = 29_u8 * 69_u8;
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_13.0 = 666678542_u32 as u8;
_20 = !34404_u16;
Goto(bb5)
}
bb5 = {
_11 = [_15,_15,_15,_15,_15];
_7 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_8 = 3304171824_u32 as u64;
_8 = 17608871198040592278_u64;
_17.fld2 = RET.fld0;
_23 = 67476689601676188531698161656130791716_i128 as f32;
_1 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_22.fld1 = [_16.0,_16.0,_16.0,_16.0];
_22.fld3 = [_15,_15,_15,_15,_15];
_21 = _8 / _8;
_16 = (true,);
_16.0 = true;
_14 = '\u{e57bc}';
_13 = (10_u8,);
_9 = _6;
Call(_18 = core::intrinsics::transmute(_4), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_5 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13 = (201_u8,);
_11 = _2;
_23 = _18 as f32;
_5 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_20 = 62084_u16;
_24 = [_21,_8,_21,_21,_21];
_26 = [22458_i16];
_24 = [_8,_21,_8,_21,_8];
_19 = _4;
_18 = 9223372036854775807_isize * (-9223372036854775808_isize);
_1 = _10;
Goto(bb7)
}
bb7 = {
_17.fld1 = [_16.0,_16.0,_16.0,_16.0];
_22.fld2 = core::ptr::addr_of!(_17.fld3);
_9 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_20 = 11758_u16;
_22.fld1 = [_16.0,_16.0,_16.0,_16.0];
_1 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_19 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_12 = [_15,_15,_15,_15,_15];
_25 = _18 - _18;
_3 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_4 = _10;
_13 = (114_u8,);
_28 = _20;
_25 = _23 as isize;
match _20 {
0 => bb4,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
11758 => bb15,
_ => bb14
}
}
bb8 = {
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_5 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13 = (201_u8,);
_11 = _2;
_23 = _18 as f32;
_5 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_20 = 62084_u16;
_24 = [_21,_8,_21,_21,_21];
_26 = [22458_i16];
_24 = [_8,_21,_8,_21,_8];
_19 = _4;
_18 = 9223372036854775807_isize * (-9223372036854775808_isize);
_1 = _10;
Goto(bb7)
}
bb9 = {
_11 = [_15,_15,_15,_15,_15];
_7 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_8 = 3304171824_u32 as u64;
_8 = 17608871198040592278_u64;
_17.fld2 = RET.fld0;
_23 = 67476689601676188531698161656130791716_i128 as f32;
_1 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_22.fld1 = [_16.0,_16.0,_16.0,_16.0];
_22.fld3 = [_15,_15,_15,_15,_15];
_21 = _8 / _8;
_16 = (true,);
_16.0 = true;
_14 = '\u{e57bc}';
_13 = (10_u8,);
_9 = _6;
Call(_18 = core::intrinsics::transmute(_4), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_8 = !11296484114740095939_u64;
_6 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_1 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_17.fld1 = [true,true,true,true];
_16 = (false,);
_17.fld1 = [_16.0,_16.0,_16.0,_16.0];
_15 = 1701689717180099394_usize & 3_usize;
_16 = (true,);
_13.0 = !90_u8;
_19 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13.0 = 29_u8 * 69_u8;
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_13.0 = 666678542_u32 as u8;
_20 = !34404_u16;
Goto(bb5)
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_3 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13 = (91_u8,);
_2 = _11;
_4 = _5;
_13.0 = 123_u8;
_14 = '\u{62dc1}';
match _13.0 {
0 => bb2,
123 => bb4,
_ => bb3
}
}
bb14 = {
Return()
}
bb15 = {
_16 = (false,);
_20 = _28 % _28;
_1 = _4;
_27 = _16.0 ^ _16.0;
_28 = (-1059762081_i32) as u16;
_5 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_17.fld3 = core::ptr::addr_of!(_22.fld0);
_6 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_7 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_16.0 = _27;
_14 = '\u{3713a}';
_18 = _25 << _25;
_28 = _20;
_8 = 43118235922087393459870548755645858490_i128 as u64;
_30.0 = !_27;
_9 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_13 = (242_u8,);
_33 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
_20 = _28 * _28;
_35 = (_30.0,);
_34 = [_25,_18,_25,_25,_18,_18,_18];
_3 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
Goto(bb16)
}
bb16 = {
Call(_36 = dump_var(10_usize, 24_usize, Move(_24), 28_usize, Move(_28), 16_usize, Move(_16), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(10_usize, 15_usize, Move(_15), 35_usize, Move(_35), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(10_usize, 34_usize, Move(_34), 3_usize, Move(_3), 11_usize, Move(_11), 33_usize, Move(_33)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_36 = dump_var(10_usize, 21_usize, Move(_21), 1_usize, Move(_1), 37_usize, _37, 37_usize, _37), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [u8; 8],mut _2: [usize; 5],mut _3: [usize; 5],mut _4: [u8; 8],mut _5: [u8; 8]) -> Adt50 {
mir! {
type RET = Adt50;
let _6: (i32,);
let _7: [u8; 8];
let _8: isize;
let _9: Adt53;
let _10: *const *const *const char;
let _11: f32;
let _12: Adt48;
let _13: [isize; 7];
let _14: u128;
let _15: usize;
let _16: i8;
let _17: Adt48;
let _18: *const *const char;
let _19: Adt53;
let _20: (*const u128, u64, i8);
let _21: f32;
let _22: (u8,);
let _23: bool;
let _24: char;
let _25: i16;
let _26: u128;
let _27: *const *const *const f64;
let _28: f32;
let _29: Adt60;
let _30: char;
let _31: (u128,);
let _32: (bool,);
let _33: f32;
let _34: isize;
let _35: ();
let _36: ();
{
_3 = [6929324095462749113_usize,1850703990533002476_usize,8686036570631321250_usize,9105916664856153112_usize,1417225025002624063_usize];
_2 = [14678841879632147168_usize,6_usize,5857382457858374028_usize,7_usize,6_usize];
_5 = [101_u8,25_u8,173_u8,171_u8,95_u8,251_u8,28_u8,201_u8];
_1 = _4;
_3 = [7_usize,9516891817037442366_usize,864671546808276208_usize,17538654448782050400_usize,1749760471876958894_usize];
_6 = ((-1668947823_i32),);
_3 = [14596816274165172057_usize,17570873944965593349_usize,15816259535964725150_usize,2_usize,13645276783868928180_usize];
_6 = (1621724218_i32,);
_6 = ((-1363864625_i32),);
_2 = _3;
_7 = [99_u8,120_u8,212_u8,34_u8,116_u8,197_u8,93_u8,94_u8];
_3 = _2;
_8 = '\u{ea0ab}' as isize;
_3 = _2;
_8 = (-9223372036854775808_isize) * 26_isize;
match _6.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463463374607430404346831 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_6.0 = _8 as i32;
_9.fld1 = [true,true,true,false];
_2 = [12163272010242655159_usize,7_usize,16156192401112660439_usize,6881934165702492862_usize,0_usize];
_6 = ((-968678511_i32),);
_4 = [5_u8,252_u8,157_u8,48_u8,17_u8,211_u8,174_u8,104_u8];
_9.fld1 = [true,false,false,false];
_3 = [4_usize,15027159547568311930_usize,10759976459402412863_usize,5886670480703662680_usize,16190084159721332640_usize];
_4 = _1;
_11 = (-9060822312813611597_i64) as f32;
_1 = [68_u8,153_u8,75_u8,76_u8,211_u8,175_u8,68_u8,136_u8];
_5 = _4;
_9.fld1 = [true,false,false,false];
_13 = [_8,_8,_8,_8,_8,_8,_8];
_12.fld0 = [5_usize,1430369790067922470_usize,5_usize,6_usize,17072110518227175732_usize];
_12 = Adt48 { fld0: _2 };
RET.fld0 = core::ptr::addr_of!(_14);
_6.0 = 494188823_i32 - (-1433066249_i32);
_5 = _7;
Goto(bb7)
}
bb7 = {
_9.fld1 = [true,true,true,false];
_7 = _5;
_13 = [_8,_8,_8,_8,_8,_8,_8];
RET.fld0 = core::ptr::addr_of!(_14);
_12.fld0 = [2966728639897063806_usize,1_usize,3_usize,18328016041070732993_usize,9367829735261451980_usize];
RET.fld0 = core::ptr::addr_of!(_14);
_9.fld2 = core::ptr::addr_of!(_14);
_17.fld0 = [933620065720573716_usize,2_usize,627007639370449807_usize,11584415328265276458_usize,4_usize];
RET.fld1 = core::ptr::addr_of!(_18);
_3 = _2;
RET.fld0 = core::ptr::addr_of!(_14);
_19.fld0 = core::ptr::addr_of!(_18);
_12.fld0 = _2;
_12.fld0 = [5427520885593612156_usize,12512802189480338868_usize,17082142578227820965_usize,4_usize,7_usize];
_5 = [176_u8,195_u8,232_u8,144_u8,0_u8,251_u8,183_u8,104_u8];
_9.fld0 = core::ptr::addr_of!(_18);
_17 = Adt48 { fld0: _3 };
_19.fld1 = [false,true,false,true];
_6 = ((-672361259_i32),);
_9.fld0 = core::ptr::addr_of!(_18);
_9.fld0 = core::ptr::addr_of!(_18);
_6.0 = 5963209120188738681_u64 as i32;
_9.fld1 = [true,true,false,true];
_12 = Adt48 { fld0: _3 };
_16 = -(-58_i8);
_17 = Move(_12);
Call(_9.fld2 = core::intrinsics::arith_offset(RET.fld0, 111_isize), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_17.fld0 = _3;
_19.fld0 = core::ptr::addr_of!(_18);
_17.fld0 = [5658090293273798452_usize,13462087528428466226_usize,15759167591242952484_usize,4_usize,15858905042021815057_usize];
_20.0 = core::ptr::addr_of!(_14);
Goto(bb9)
}
bb9 = {
_19.fld1 = _9.fld1;
_15 = '\u{7a936}' as usize;
_12.fld0 = [_15,_15,_15,_15,_15];
_6 = ((-1096452207_i32),);
_22 = (4_u8,);
_11 = 241961787808324065423905267911967911343_u128 as f32;
_22 = (72_u8,);
_10 = core::ptr::addr_of!(_18);
_20.0 = core::ptr::addr_of!(_14);
_20.2 = (-2213_i16) as i8;
_9.fld0 = core::ptr::addr_of!(_18);
_6.0 = 894392042_i32;
_12 = Move(_17);
_10 = core::ptr::addr_of!(_18);
_12.fld0 = [_15,_15,_15,_15,_15];
_23 = false & true;
_21 = _11 - _11;
_22 = (200_u8,);
_8 = -52_isize;
match _6.0 {
894392042 => bb10,
_ => bb8
}
}
bb10 = {
_14 = 296997408466422161653383761187258200951_u128 * 63072654727283992333535308837574248294_u128;
_14 = 237008564244514249991274746198569833216_u128;
_5 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_21 = -_11;
_19.fld1 = _9.fld1;
_20 = (RET.fld0, 16705495602452249841_u64, _16);
_5 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
RET.fld0 = _20.0;
_22.0 = !8_u8;
_25 = 4740_i16 & (-19937_i16);
_22 = (123_u8,);
_9.fld1 = _19.fld1;
_21 = -_11;
_10 = core::ptr::addr_of!(_18);
_20.0 = RET.fld0;
_19.fld2 = core::ptr::addr_of!(_14);
_21 = -_11;
_17 = Adt48 { fld0: _3 };
_23 = _16 < _16;
_11 = _25 as f32;
RET.fld0 = core::ptr::addr_of!(_14);
_6 = (981048970_i32,);
_9.fld0 = core::ptr::addr_of!((*_10));
_9.fld0 = core::ptr::addr_of!((*_10));
_10 = core::ptr::addr_of!((*_10));
_9.fld0 = core::ptr::addr_of!((*_10));
Goto(bb11)
}
bb11 = {
_22.0 = !240_u8;
_9.fld1 = [_23,_23,_23,_23];
_16 = (-70541060815471554101743447084366864298_i128) as i8;
_25 = 60154568294751783535985859944270489739_i128 as i16;
_12 = Adt48 { fld0: _3 };
_24 = '\u{2fc33}';
_28 = 8282658335491960761_i64 as f32;
_7 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_22.0 = 126_u8 + 132_u8;
RET.fld1 = core::ptr::addr_of!((*_10));
_4 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_20.0 = _19.fld2;
_21 = _16 as f32;
_27 = core::ptr::addr_of!(_19.fld3);
_4 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_12 = Adt48 { fld0: _17.fld0 };
_26 = _14 >> _25;
_21 = _15 as f32;
_23 = false;
_13 = [_8,_8,_8,_8,_8,_8,_8];
_20.2 = _16 | _16;
_6.0 = -6557764_i32;
_15 = (-8827415620913069241_i64) as usize;
_24 = '\u{a4392}';
_23 = _20.2 == _20.2;
_19.fld1 = [_23,_23,_23,_23];
_20.0 = RET.fld0;
Call(_20.2 = fn12(_24, _23, _15, _12.fld0, Move(_17), _8, _19.fld1, _13, _20.1, _7, _8, _28, _19.fld1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_13 = [_8,_8,_8,_8,_8,_8,_8];
_28 = _22.0 as f32;
_9.fld0 = core::ptr::addr_of!(_18);
_4 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
RET.fld1 = core::ptr::addr_of!((*_10));
_12.fld0 = [_15,_15,_15,_15,_15];
_20 = (RET.fld0, 14271027932406147026_u64, _16);
_2 = [_15,_15,_15,_15,_15];
_13 = [_8,_8,_8,_8,_8,_8,_8];
_22.0 = !134_u8;
_7 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_31.0 = 2090482157_u32 as u128;
_6.0 = 428708074_i32;
_15 = 6_usize;
_19.fld1 = [_23,_23,_23,_23];
_26 = _14;
_30 = _24;
_19.fld2 = core::ptr::addr_of!(_26);
Call(RET.fld0 = core::intrinsics::arith_offset(_19.fld2, (-78_isize)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_20.1 = 3655202604859705924_u64 - 7209375888156544884_u64;
_9.fld0 = core::ptr::addr_of!(_18);
_32.0 = _23;
_17 = Move(_12);
_30 = _24;
_2 = _3;
_4 = [_1[_15],_1[_15],_7[_15],_5[_15],_1[_15],_1[_15],_1[_15],_1[_15]];
_11 = _21 + _21;
_34 = -_13[_15];
_13[_15] = _4[_15] as isize;
_23 = _4[_15] > _1[_15];
_17.fld0 = _2;
_19.fld1 = _9.fld1;
_2 = _3;
_20.1 = 13411421657168169790_u64;
_12.fld0 = [_15,_15,_15,_15,_15];
_21 = -_11;
_11 = -_21;
Goto(bb14)
}
bb14 = {
_4 = [_5[_15],_1[_15],_5[_15],_1[_15],_1[_15],_22.0,_1[_15],_1[_15]];
RET.fld1 = core::ptr::addr_of!((*_10));
_12.fld0 = [_15,_15,_15,_15,_15];
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(11_usize, 25_usize, Move(_25), 32_usize, Move(_32), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(11_usize, 22_usize, Move(_22), 13_usize, Move(_13), 2_usize, Move(_2), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(11_usize, 7_usize, Move(_7), 26_usize, Move(_26), 36_usize, _36, 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: char,mut _2: bool,mut _3: usize,mut _4: [usize; 5],mut _5: Adt48,mut _6: isize,mut _7: [bool; 4],mut _8: [isize; 7],mut _9: u64,mut _10: [u8; 8],mut _11: isize,mut _12: f32,mut _13: [bool; 4]) -> i8 {
mir! {
type RET = i8;
let _14: Adt53;
let _15: (bool, (u8,), *const f64, &'static [u64; 5], *const *const f64);
let _16: Adt60;
let _17: i32;
let _18: char;
let _19: i8;
let _20: [bool; 4];
let _21: isize;
let _22: (u128,);
let _23: [bool; 4];
let _24: Adt53;
let _25: *const *const char;
let _26: Adt57;
let _27: ();
let _28: ();
{
_5.fld0 = [_3,_3,_3,_3,_3];
_5 = Adt48 { fld0: _4 };
_7 = [_2,_2,_2,_2];
RET = (-50_i8) & (-46_i8);
_13 = [_2,_2,_2,_2];
_14.fld1 = [_2,_2,_2,_2];
_14.fld1 = _13;
_7 = _13;
_7 = [_2,_2,_2,_2];
_5 = Adt48 { fld0: _4 };
_5 = Adt48 { fld0: _4 };
_14.fld3 = core::ptr::addr_of!(_15.2);
_15.0 = _2;
_7 = [_2,_15.0,_15.0,_15.0];
_15.1 = (42_u8,);
RET = -65_i8;
_14.fld1 = _7;
_12 = 21276_i16 as f32;
_10 = [_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
_3 = 29041_u16 as usize;
_6 = _11;
RET = 20_i8 - 96_i8;
_15.1.0 = 105_u8 - 2_u8;
_6 = !_11;
Goto(bb1)
}
bb1 = {
_13 = [_15.0,_2,_15.0,_2];
_3 = 6_usize;
_9 = 168467890213347551264878397467982039677_i128 as u64;
_15.0 = _3 >= _3;
_15.1.0 = _10[_3] | _10[_3];
_12 = 41349290141717809031459204723796407113_u128 as f32;
_1 = '\u{20a67}';
_15.1 = (_10[_3],);
_4 = _5.fld0;
_14.fld3 = core::ptr::addr_of!(_15.2);
_17 = !(-795365485_i32);
_10 = [_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
6 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_8 = [_11,_6,_11,_6,_6,_6,_6];
_10[_3] = !_15.1.0;
_6 = !_8[_3];
_5.fld0 = [_3,_3,_3,_3,_3];
_15.0 = _2 | _2;
_12 = 200544114970614836755430598584978327729_u128 as f32;
_20 = _13;
_5 = Adt48 { fld0: _4 };
_5.fld0 = [_3,_3,_3,_3,_3];
_6 = (-138471187382527835962006325670975107759_i128) as isize;
_9 = 6782309481438199468_u64;
_10 = [_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
Call(_16 = fn13(_6, _2, _13, _4, _20, _4, _20, _7, _11, _15.0, _9, _4, _6, _8[_3], _15.0), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_15.1.0 = _9 as u8;
RET = (-40524394340276828279715028646750840584_i128) as i8;
_4 = _5.fld0;
_6 = Field::<i64>(Variant(_16, 2), 0) as isize;
_2 = _15.0;
_11 = _6 - _6;
_21 = 1620660634_u32 as isize;
_11 = _21;
_21 = _6 ^ _6;
_7 = [_15.0,_15.0,_2,_2];
_18 = _1;
_18 = _1;
RET = !33_i8;
match _9 {
0 => bb6,
1 => bb4,
2 => bb3,
3 => bb10,
4 => bb11,
5 => bb12,
6782309481438199468 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
_13 = [_15.0,_2,_15.0,_2];
_3 = 6_usize;
_9 = 168467890213347551264878397467982039677_i128 as u64;
_15.0 = _3 >= _3;
_15.1.0 = _10[_3] | _10[_3];
_12 = 41349290141717809031459204723796407113_u128 as f32;
_1 = '\u{20a67}';
_15.1 = (_10[_3],);
_4 = _5.fld0;
_14.fld3 = core::ptr::addr_of!(_15.2);
_17 = !(-795365485_i32);
_10 = [_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
6 => bb8,
_ => bb7
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_23 = Field::<[bool; 4]>(Variant(_16, 2), 1);
_14.fld0 = core::ptr::addr_of!(_25);
_24.fld1 = [_15.0,_2,_15.0,_2];
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(12_usize, 2_usize, Move(_2), 17_usize, Move(_17), 20_usize, Move(_20), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(12_usize, 11_usize, Move(_11), 3_usize, Move(_3), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: isize,mut _2: bool,mut _3: [bool; 4],mut _4: [usize; 5],mut _5: [bool; 4],mut _6: [usize; 5],mut _7: [bool; 4],mut _8: [bool; 4],mut _9: isize,mut _10: bool,mut _11: u64,mut _12: [usize; 5],mut _13: isize,mut _14: isize,mut _15: bool) -> Adt60 {
mir! {
type RET = Adt60;
let _16: (*const u128, u64, i8);
let _17: isize;
let _18: i32;
let _19: bool;
let _20: *mut i16;
let _21: isize;
let _22: Adt48;
let _23: f64;
let _24: isize;
let _25: (u8,);
let _26: Adt48;
let _27: u8;
let _28: u32;
let _29: Adt59;
let _30: i32;
let _31: [u8; 8];
let _32: [i32; 8];
let _33: [u64; 5];
let _34: i16;
let _35: [bool; 4];
let _36: bool;
let _37: [u64; 5];
let _38: *const char;
let _39: Adt56;
let _40: (i32,);
let _41: isize;
let _42: u8;
let _43: [u64; 5];
let _44: char;
let _45: [u64; 5];
let _46: Adt50;
let _47: Adt48;
let _48: (u8,);
let _49: bool;
let _50: *mut [u64; 5];
let _51: i128;
let _52: Adt52;
let _53: (u128,);
let _54: [u64; 5];
let _55: ();
let _56: ();
{
_3 = [_15,_2,_15,_10];
_16.1 = _11 ^ _11;
RET = Adt60::Variant2 { fld0: 6438652385668813004_i64,fld1: _7 };
_3 = [_15,_10,_2,_2];
_12 = [3483717958488282756_usize,271869157718161144_usize,7127632304569224253_usize,5_usize,13193742284734680467_usize];
_5 = [_15,_2,_2,_15];
_15 = !_10;
place!(Field::<i64>(Variant(RET, 2), 0)) = (-3731975667487927620_i64) >> _9;
_2 = _10;
_16.2 = -46_i8;
place!(Field::<i64>(Variant(RET, 2), 0)) = 7939177609569541509_i64 >> _16.1;
_19 = _15;
SetDiscriminant(RET, 2);
_1 = -_13;
place!(Field::<i64>(Variant(RET, 2), 0)) = (-18794_i16) as i64;
_6 = _4;
_9 = (-209421371_i32) as isize;
_9 = !_14;
Call(_18 = core::intrinsics::transmute(_5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_10,_10,_10,_10];
_2 = !_10;
_2 = _15 ^ _19;
_5 = Field::<[bool; 4]>(Variant(RET, 2), 1);
_16.1 = 3359324661_u32 as u64;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_2,_15,_10,_10];
_21 = -_1;
_22.fld0 = [678117409694027233_usize,5_usize,12316426288680422946_usize,14355565280312941276_usize,14261805783914529277_usize];
_21 = _14;
_10 = _2 ^ _15;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _7;
_6 = [16573487826179351077_usize,9164034685482402231_usize,7_usize,5_usize,1_usize];
_25 = (145_u8,);
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _3;
_26 = Adt48 { fld0: _22.fld0 };
Call(_9 = core::intrinsics::transmute(_21), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
place!(Field::<i64>(Variant(RET, 2), 0)) = 5327615523988155767_i64;
place!(Field::<i64>(Variant(RET, 2), 0)) = 7003733926249518702_i64;
_9 = 38458939993808326274511625678924391699_u128 as isize;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_10,_2,_2,_15];
_17 = _9 ^ _21;
place!(Field::<i64>(Variant(RET, 2), 0)) = !5514713759515593528_i64;
_7 = [_19,_10,_19,_2];
_4 = _6;
_4 = [17101267933536257281_usize,3_usize,4_usize,7023935620285691709_usize,6_usize];
_5 = [_2,_19,_10,_10];
_24 = -_14;
place!(Field::<i64>(Variant(RET, 2), 0)) = 7949366627111494327_i64;
_5 = Field::<[bool; 4]>(Variant(RET, 2), 1);
_4 = _26.fld0;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_2,_19,_10,_2];
_15 = _10 & _10;
_9 = _21;
_17 = _21 * _13;
_3 = [_19,_2,_15,_15];
SetDiscriminant(RET, 1);
_24 = -_17;
_13 = !_17;
_26 = Adt48 { fld0: _4 };
_1 = _24 ^ _13;
_7 = [_15,_10,_2,_10];
_21 = _17;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
6782309481438199468 => bb8,
_ => bb7
}
}
bb3 = {
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_10,_10,_10,_10];
_2 = !_10;
_2 = _15 ^ _19;
_5 = Field::<[bool; 4]>(Variant(RET, 2), 1);
_16.1 = 3359324661_u32 as u64;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_2,_15,_10,_10];
_21 = -_1;
_22.fld0 = [678117409694027233_usize,5_usize,12316426288680422946_usize,14355565280312941276_usize,14261805783914529277_usize];
_21 = _14;
_10 = _2 ^ _15;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _7;
_6 = [16573487826179351077_usize,9164034685482402231_usize,7_usize,5_usize,1_usize];
_25 = (145_u8,);
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _3;
_26 = Adt48 { fld0: _22.fld0 };
Call(_9 = core::intrinsics::transmute(_21), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_15 = _10;
_13 = (-5793378191456489235_i64) as isize;
_10 = _19;
_24 = 10441853979943015_i64 as isize;
_9 = _21 - _1;
_13 = (-136515061272905941287443219422949211063_i128) as isize;
_26 = Adt48 { fld0: _22.fld0 };
_12 = [2_usize,4855885101893024865_usize,0_usize,4_usize,6_usize];
_8 = [_10,_2,_15,_2];
_11 = _16.1;
_6 = _26.fld0;
_17 = !_9;
place!(Field::<[bool; 4]>(Variant(RET, 1), 0)) = _7;
_15 = !_10;
_2 = !_15;
_18 = 5_usize as i32;
_16.1 = !_11;
_25 = (136_u8,);
RET = Adt60::Variant2 { fld0: 8358961875774656349_i64,fld1: _7 };
_23 = 1710552223_u32 as f64;
Goto(bb9)
}
bb9 = {
_5 = [_15,_2,_10,_19];
_2 = _15;
_5 = [_2,_19,_10,_19];
_27 = !_25.0;
_5 = [_19,_15,_10,_2];
_9 = _17;
match _25.0 {
0 => bb4,
1 => bb2,
136 => bb10,
_ => bb3
}
}
bb10 = {
place!(Field::<i64>(Variant(RET, 2), 0)) = _23 as i64;
_27 = !_25.0;
_6 = _22.fld0;
_28 = _21 as u32;
_26.fld0 = _22.fld0;
SetDiscriminant(RET, 2);
_11 = _16.1 & _16.1;
_25.0 = _27 | _27;
_4 = _22.fld0;
_30 = !_18;
_6 = [14251301480225094780_usize,11988656786291742225_usize,7439738658968367391_usize,3566712247330798361_usize,11329693016368817358_usize];
_10 = !_19;
_36 = !_10;
_12 = [6_usize,5_usize,4_usize,13195416107606569570_usize,3_usize];
_2 = _19 < _15;
_37 = [_11,_16.1,_11,_16.1,_11];
_28 = 3937688488_u32;
_33 = _37;
_34 = -16348_i16;
place!(Field::<i64>(Variant(RET, 2), 0)) = 239104992731139404_i64;
_26.fld0 = _22.fld0;
_21 = -_9;
_1 = _9;
_24 = _21;
_10 = _2;
match _28 {
0 => bb4,
1 => bb11,
3937688488 => bb13,
_ => bb12
}
}
bb11 = {
_5 = [_15,_2,_10,_19];
_2 = _15;
_5 = [_2,_19,_10,_19];
_27 = !_25.0;
_5 = [_19,_15,_10,_2];
_9 = _17;
match _25.0 {
0 => bb4,
1 => bb2,
136 => bb10,
_ => bb3
}
}
bb12 = {
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_10,_10,_10,_10];
_2 = !_10;
_2 = _15 ^ _19;
_5 = Field::<[bool; 4]>(Variant(RET, 2), 1);
_16.1 = 3359324661_u32 as u64;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_2,_15,_10,_10];
_21 = -_1;
_22.fld0 = [678117409694027233_usize,5_usize,12316426288680422946_usize,14355565280312941276_usize,14261805783914529277_usize];
_21 = _14;
_10 = _2 ^ _15;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _7;
_6 = [16573487826179351077_usize,9164034685482402231_usize,7_usize,5_usize,1_usize];
_25 = (145_u8,);
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _3;
_26 = Adt48 { fld0: _22.fld0 };
Call(_9 = core::intrinsics::transmute(_21), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_5 = _3;
_15 = _10;
_35 = [_15,_10,_15,_36];
_35 = [_36,_2,_10,_2];
_26 = Adt48 { fld0: _6 };
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = [_10,_19,_19,_2];
SetDiscriminant(RET, 2);
match _28 {
0 => bb10,
1 => bb8,
2 => bb12,
3 => bb4,
4 => bb7,
5 => bb6,
3937688488 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_7 = [_19,_2,_2,_36];
_13 = '\u{5ebde}' as isize;
_21 = _17;
_29 = Adt59::Variant0 { fld0: _5,fld1: '\u{f7162}',fld2: 11801823329139802624486107965190424473_u128,fld3: 7_usize };
_25.0 = !_27;
_37 = [_11,_11,_16.1,_11,_16.1];
_9 = !_1;
match _28 {
0 => bb9,
1 => bb13,
2 => bb8,
3 => bb4,
4 => bb10,
5 => bb6,
3937688488 => bb17,
_ => bb16
}
}
bb16 = {
Return()
}
bb17 = {
_32 = [_18,_18,_18,_18,_18,_18,_18,_18];
_40 = (_18,);
_9 = _24;
_30 = _27 as i32;
_20 = core::ptr::addr_of_mut!(_34);
_16.1 = _11;
_37 = [_16.1,_11,_16.1,_16.1,_11];
place!(Field::<[bool; 4]>(Variant(_29, 0), 0)) = [_10,_15,_15,_2];
_21 = !_24;
_15 = !_36;
RET = Adt60::Variant2 { fld0: (-4204125456499322740_i64),fld1: _3 };
place!(Field::<char>(Variant(_29, 0), 1)) = '\u{34067}';
_41 = !_1;
_31 = [_27,_27,_25.0,_27,_27,_25.0,_25.0,_27];
place!(Field::<usize>(Variant(_29, 0), 3)) = 3_usize | 6_usize;
_9 = !_41;
_20 = core::ptr::addr_of_mut!((*_20));
_8 = [_2,_15,_10,_2];
_4 = [Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3)];
_4 = [Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3),Field::<usize>(Variant(_29, 0), 3)];
_18 = _30 | _40.0;
_38 = core::ptr::addr_of!(place!(Field::<char>(Variant(_29, 0), 1)));
match _28 {
0 => bb8,
1 => bb9,
2 => bb7,
3 => bb15,
4 => bb5,
5 => bb18,
3937688488 => bb20,
_ => bb19
}
}
bb18 = {
Return()
}
bb19 = {
_15 = _10;
_13 = (-5793378191456489235_i64) as isize;
_10 = _19;
_24 = 10441853979943015_i64 as isize;
_9 = _21 - _1;
_13 = (-136515061272905941287443219422949211063_i128) as isize;
_26 = Adt48 { fld0: _22.fld0 };
_12 = [2_usize,4855885101893024865_usize,0_usize,4_usize,6_usize];
_8 = [_10,_2,_15,_2];
_11 = _16.1;
_6 = _26.fld0;
_17 = !_9;
place!(Field::<[bool; 4]>(Variant(RET, 1), 0)) = _7;
_15 = !_10;
_2 = !_15;
_18 = 5_usize as i32;
_16.1 = !_11;
_25 = (136_u8,);
RET = Adt60::Variant2 { fld0: 8358961875774656349_i64,fld1: _7 };
_23 = 1710552223_u32 as f64;
Goto(bb9)
}
bb20 = {
_25 = (_27,);
place!(Field::<i64>(Variant(RET, 2), 0)) = Field::<usize>(Variant(_29, 0), 3) as i64;
RET = Adt60::Variant2 { fld0: (-560103602574959539_i64),fld1: Field::<[bool; 4]>(Variant(_29, 0), 0) };
_5 = Field::<[bool; 4]>(Variant(_29, 0), 0);
_13 = _1 - _1;
_34 = 53914787453636550224581416260235206826_i128 as i16;
_19 = !_36;
_18 = _34 as i32;
_3 = [_36,_10,_2,_36];
_9 = _17;
_17 = _24 * _1;
_44 = Field::<char>(Variant(_29, 0), 1);
_28 = 183566669_u32;
_37 = _33;
_29 = Adt59::Variant0 { fld0: _35,fld1: _44,fld2: 62564499497146978407035696245708729654_u128,fld3: 3_usize };
_13 = _16.2 as isize;
Call(_43 = core::intrinsics::transmute(_26.fld0), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_26.fld0 = _6;
place!(Field::<i64>(Variant(RET, 2), 0)) = (-2349497450490120447_i64);
_27 = _25.0 + _25.0;
_3 = _8;
_27 = _25.0;
_6 = [16070362400119223212_usize,8687038170088374808_usize,13591858698664716469_usize,8040380995258095868_usize,7_usize];
_16.2 = 40_i8 * (-111_i8);
_46.fld0 = core::ptr::addr_of!(place!(Field::<u128>(Variant(_29, 0), 2)));
_17 = (-118724733636545883259730408040751238583_i128) as isize;
_42 = 99957864998137412251822951072509796171_i128 as u8;
_29 = Adt59::Variant2 { fld0: _43 };
_22 = Adt48 { fld0: _26.fld0 };
_35 = [_2,_10,_19,_36];
_8 = _7;
place!(Field::<[u64; 5]>(Variant(_29, 2), 0)) = [_16.1,_16.1,_16.1,_16.1,_16.1];
SetDiscriminant(RET, 0);
place!(Field::<*const u64>(Variant(RET, 0), 4)) = core::ptr::addr_of!(_11);
_17 = _24 | _9;
place!(Field::<(u128,)>(Variant(RET, 0), 1)) = (162787232403585639396381722234126691054_u128,);
_16.1 = _28 as u64;
place!(Field::<[i32; 8]>(Variant(RET, 0), 0)) = [_40.0,_30,_30,_18,_30,_40.0,_40.0,_18];
_14 = _17;
Call(_21 = fn14(Field::<(u128,)>(Variant(RET, 0), 1).0, _2, _4), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Goto(bb23)
}
bb23 = {
place!(Field::<*const u64>(Variant(RET, 0), 4)) = core::ptr::addr_of!(_11);
place!(Field::<i32>(Variant(RET, 0), 5)) = _40.0 - _18;
_16 = (_46.fld0, _11, 50_i8);
_34 = _23 as i16;
_22.fld0 = [6_usize,15548192364750788182_usize,3_usize,4_usize,13972933603366204794_usize];
_30 = _14 as i32;
_34 = 27922_i16 << _30;
_5 = [_10,_19,_19,_19];
place!(Field::<(u128,)>(Variant(RET, 0), 1)).0 = 35085444556406525828351692564771808147_u128;
_17 = _16.2 as isize;
RET = Adt60::Variant2 { fld0: 9007144510426347132_i64,fld1: _3 };
Goto(bb24)
}
bb24 = {
_41 = _17 + _9;
_50 = core::ptr::addr_of_mut!(place!(Field::<[u64; 5]>(Variant(_29, 2), 0)));
place!(Field::<i64>(Variant(RET, 2), 0)) = -(-8208010542996464146_i64);
_16.1 = _11 | _11;
_12 = _6;
_25.0 = _16.2 as u8;
_51 = !162075311581950454776822594348145072867_i128;
SetDiscriminant(RET, 2);
_4 = [9691601248717622795_usize,12686184459936216897_usize,3_usize,0_usize,8512437605942126282_usize];
_47 = Move(_22);
_50 = core::ptr::addr_of_mut!(_43);
place!(Field::<i64>(Variant(RET, 2), 0)) = _51 as i64;
_22 = Adt48 { fld0: _4 };
_26.fld0 = [6_usize,0_usize,1_usize,17824569072920664172_usize,88240407712757121_usize];
_23 = 1990587989903355072_usize as f64;
SetDiscriminant(_29, 0);
_11 = !_16.1;
_26 = Adt48 { fld0: _22.fld0 };
_53.0 = _10 as u128;
_51 = -147253407003962619920279665052944024046_i128;
_50 = core::ptr::addr_of_mut!(_33);
_9 = !_14;
_16.2 = (-46_i8) + 127_i8;
place!(Field::<[bool; 4]>(Variant(_29, 0), 0)) = [_2,_10,_2,_36];
_12 = _6;
_54 = [_16.1,_11,_16.1,_16.1,_16.1];
_38 = core::ptr::addr_of!(_44);
_16.2 = 115_i8;
place!(Field::<[bool; 4]>(Variant(RET, 2), 1)) = _7;
Goto(bb25)
}
bb25 = {
Call(_55 = dump_var(13_usize, 54_usize, Move(_54), 35_usize, Move(_35), 7_usize, Move(_7), 9_usize, Move(_9)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_55 = dump_var(13_usize, 12_usize, Move(_12), 44_usize, Move(_44), 53_usize, Move(_53), 41_usize, Move(_41)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_55 = dump_var(13_usize, 3_usize, Move(_3), 32_usize, Move(_32), 19_usize, Move(_19), 1_usize, Move(_1)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_55 = dump_var(13_usize, 21_usize, Move(_21), 14_usize, Move(_14), 5_usize, Move(_5), 28_usize, Move(_28)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_55 = dump_var(13_usize, 4_usize, Move(_4), 6_usize, Move(_6), 18_usize, Move(_18), 56_usize, _56), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: u128,mut _2: bool,mut _3: [usize; 5]) -> isize {
mir! {
type RET = isize;
let _4: *const *const *const f64;
let _5: [u8; 8];
let _6: [u64; 5];
let _7: u32;
let _8: [usize; 5];
let _9: Adt48;
let _10: usize;
let _11: Adt60;
let _12: isize;
let _13: [u8; 8];
let _14: f32;
let _15: isize;
let _16: char;
let _17: i128;
let _18: ();
let _19: ();
{
RET = !(-32_isize);
_2 = _1 == _1;
_3 = [11981724166506559320_usize,8498448033496906304_usize,7_usize,3_usize,2_usize];
RET = !36_isize;
_5 = [76_u8,124_u8,47_u8,231_u8,67_u8,129_u8,5_u8,63_u8];
_1 = 316058703233429828189752576319876165419_u128;
RET = 70464832336691986135864293672335506151_i128 as isize;
_1 = (-54891706531614674927016932113787440712_i128) as u128;
RET = 3585_i16 as isize;
_8 = _3;
RET = -9223372036854775807_isize;
RET = (-103_isize);
_6 = [11037202236900760011_u64,10055061052475863907_u64,12272068267932853647_u64,14887001403063648357_u64,15023905397081043830_u64];
_7 = _2 as u32;
Goto(bb1)
}
bb1 = {
_7 = _2 as u32;
Call(_1 = core::intrinsics::bswap(215717403612329008900607396577625002012_u128), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = _3;
_6 = [8806999682965663810_u64,17508994509316617742_u64,8743963669938403772_u64,2787210906744591577_u64,13981531988655552121_u64];
_5 = [112_u8,223_u8,79_u8,240_u8,78_u8,119_u8,189_u8,42_u8];
_3 = _8;
RET = 25481_i16 as isize;
RET = !5_isize;
_5 = [26_u8,114_u8,187_u8,246_u8,128_u8,26_u8,226_u8,4_u8];
_5 = [222_u8,22_u8,155_u8,58_u8,6_u8,85_u8,232_u8,133_u8];
RET = 9223372036854775807_isize * 9223372036854775807_isize;
_1 = !239061960213403785879986822317056849835_u128;
_6 = [2143359535974945861_u64,5935895409523803975_u64,6841766616687590155_u64,7041121312140574958_u64,10294246591002255008_u64];
RET = 16_isize;
match RET {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
16 => bb7,
_ => bb6
}
}
bb3 = {
_7 = _2 as u32;
Call(_1 = core::intrinsics::bswap(215717403612329008900607396577625002012_u128), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_3 = _8;
_1 = 138034239683502040563636990206433304237_i128 as u128;
_3 = [653205040262407942_usize,5_usize,6_usize,6096925511965402683_usize,6_usize];
_8 = [2_usize,12481297376060033024_usize,4_usize,7_usize,5069301171943312701_usize];
_9.fld0 = [16676375637604438420_usize,7_usize,14054266475105214136_usize,18076709410415532227_usize,6_usize];
Call(_1 = fn15(_2, RET, _3, _8), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_7 = 41_u8 as u32;
_7 = 1076463848_u32 >> RET;
_5 = [219_u8,135_u8,132_u8,184_u8,43_u8,135_u8,73_u8,4_u8];
RET = 164810281667707268352079280264813549803_i128 as isize;
_6 = [14910762411619840793_u64,7556116818218125563_u64,16201857853923243606_u64,15584738870846179757_u64,10823231138714936620_u64];
_9.fld0 = [4_usize,4_usize,7_usize,15230244664973696911_usize,7_usize];
_2 = true;
_7 = 4047538325_u32;
_6 = [14189136802363914415_u64,9087823217354366229_u64,4514978057455920714_u64,2967173727232121345_u64,10753356158610665316_u64];
_10 = 1_usize;
_6[_10] = _2 as u64;
match _7 {
0 => bb9,
1 => bb10,
4047538325 => bb12,
_ => bb11
}
}
bb9 = {
_8 = _3;
_6 = [8806999682965663810_u64,17508994509316617742_u64,8743963669938403772_u64,2787210906744591577_u64,13981531988655552121_u64];
_5 = [112_u8,223_u8,79_u8,240_u8,78_u8,119_u8,189_u8,42_u8];
_3 = _8;
RET = 25481_i16 as isize;
RET = !5_isize;
_5 = [26_u8,114_u8,187_u8,246_u8,128_u8,26_u8,226_u8,4_u8];
_5 = [222_u8,22_u8,155_u8,58_u8,6_u8,85_u8,232_u8,133_u8];
RET = 9223372036854775807_isize * 9223372036854775807_isize;
_1 = !239061960213403785879986822317056849835_u128;
_6 = [2143359535974945861_u64,5935895409523803975_u64,6841766616687590155_u64,7041121312140574958_u64,10294246591002255008_u64];
RET = 16_isize;
match RET {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
16 => bb7,
_ => bb6
}
}
bb10 = {
_7 = _2 as u32;
Call(_1 = core::intrinsics::bswap(215717403612329008900607396577625002012_u128), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
Return()
}
bb12 = {
RET = -9223372036854775807_isize;
_10 = _6[_10] as usize;
_1 = RET as u128;
_9.fld0 = [_10,_10,_10,_10,_10];
_8 = _3;
_2 = !false;
_6 = [12340786920158597487_u64,15426214649713980456_u64,14602808049752325522_u64,12685237682211097779_u64,4315695762692708897_u64];
RET = !9223372036854775807_isize;
_9 = Adt48 { fld0: _3 };
_12 = !RET;
_9.fld0 = [_10,_10,_10,_10,_10];
_1 = !8154736855632665007157714828171914501_u128;
_10 = 177_u8 as usize;
_7 = 3867427926_u32 >> _1;
_13 = [0_u8,84_u8,1_u8,147_u8,137_u8,97_u8,65_u8,73_u8];
RET = _12;
_9 = Adt48 { fld0: _3 };
_3 = [_10,_10,_10,_10,_10];
_5 = _13;
_14 = 61146_u16 as f32;
_5 = [240_u8,129_u8,90_u8,105_u8,234_u8,251_u8,72_u8,170_u8];
RET = _10 as isize;
_1 = 144380792735245966433839492098665662652_u128 ^ 148133902093698563818319972390372598055_u128;
_7 = 3324107094_u32 * 3930800029_u32;
_5 = [106_u8,229_u8,116_u8,221_u8,15_u8,178_u8,134_u8,46_u8];
_7 = 18_u8 as u32;
_9 = Adt48 { fld0: _8 };
Goto(bb13)
}
bb13 = {
_2 = _1 == _1;
_16 = '\u{1e785}';
_14 = _10 as f32;
Goto(bb14)
}
bb14 = {
RET = 70027468270630148464716286336500967215_i128 as isize;
Goto(bb15)
}
bb15 = {
Call(_18 = dump_var(14_usize, 2_usize, Move(_2), 7_usize, Move(_7), 5_usize, Move(_5), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_18 = dump_var(14_usize, 3_usize, Move(_3), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: isize,mut _3: [usize; 5],mut _4: [usize; 5]) -> u128 {
mir! {
type RET = u128;
let _5: [u8; 8];
let _6: (i32,);
let _7: i128;
let _8: bool;
let _9: [u8; 8];
let _10: i8;
let _11: i16;
let _12: isize;
let _13: Adt48;
let _14: i8;
let _15: f64;
let _16: f32;
let _17: u32;
let _18: *mut [u64; 5];
let _19: isize;
let _20: [isize; 7];
let _21: u32;
let _22: (bool,);
let _23: [isize; 7];
let _24: [i16; 1];
let _25: isize;
let _26: u16;
let _27: [bool; 4];
let _28: isize;
let _29: *const *const *const f64;
let _30: i32;
let _31: f32;
let _32: u128;
let _33: Adt48;
let _34: Adt51;
let _35: bool;
let _36: u8;
let _37: f64;
let _38: Adt58;
let _39: [u64; 5];
let _40: (bool,);
let _41: f64;
let _42: [u8; 8];
let _43: i16;
let _44: [isize; 7];
let _45: [i32; 8];
let _46: (bool,);
let _47: i64;
let _48: [usize; 5];
let _49: f64;
let _50: (bool,);
let _51: Adt48;
let _52: [i16; 1];
let _53: char;
let _54: char;
let _55: f32;
let _56: ();
let _57: ();
{
_3 = _4;
Call(_4 = core::intrinsics::transmute(_3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = 242404260955326197085159656922161638817_u128 - 132999569057396538086221872015725854238_u128;
_2 = (-9223372036854775808_isize) | (-107_isize);
_3 = [6_usize,1_usize,1356548145610237320_usize,3801424881321290090_usize,4_usize];
_4 = _3;
_5 = [59_u8,57_u8,25_u8,212_u8,24_u8,49_u8,103_u8,227_u8];
_6 = (38545775_i32,);
_2 = -(-9223372036854775808_isize);
_1 = !false;
_1 = _2 != _2;
_7 = 142_u8 as i128;
_5 = [215_u8,66_u8,151_u8,51_u8,1_u8,223_u8,107_u8,242_u8];
_6 = (1313948913_i32,);
_7 = _6.0 as i128;
_6.0 = 1831856196_i32;
_2 = !9223372036854775807_isize;
RET = 344107871270584243_usize as u128;
_6 = ((-1228984442_i32),);
_5 = [148_u8,194_u8,209_u8,76_u8,230_u8,174_u8,120_u8,135_u8];
_9 = [119_u8,177_u8,110_u8,42_u8,0_u8,54_u8,94_u8,13_u8];
RET = !58564840254384345091819871155518287785_u128;
_10 = 0_i8;
_5 = [21_u8,125_u8,225_u8,1_u8,188_u8,137_u8,85_u8,193_u8];
_7 = -(-155297000143453725730734730283007740870_i128);
_8 = _1;
Call(_9 = fn16(_1, RET, _4, RET, _8, _1, _1, _6.0, _3, _8, _6, _2, _1, _1, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = [1261333374764801165_usize,6_usize,7_usize,9454868528810021594_usize,7_usize];
_8 = !_1;
_2 = (-9223372036854775808_isize);
_11 = (-7214_i16);
_4 = [6_usize,6_usize,13152776062887819058_usize,6_usize,11487610227107502339_usize];
_5 = [194_u8,96_u8,193_u8,90_u8,54_u8,212_u8,47_u8,116_u8];
_4 = [4_usize,5_usize,1514641268444155607_usize,7521431249518650797_usize,5_usize];
RET = 78180670768190094608106341001750564988_u128;
_4 = [1_usize,0_usize,3093937365582566320_usize,4_usize,1584376466694485723_usize];
_4 = _3;
_2 = 9223372036854775807_isize ^ 9223372036854775807_isize;
_13 = Adt48 { fld0: _4 };
RET = 221335805200926908535019563779372693036_u128;
_3 = _13.fld0;
_4 = _3;
RET = !277398606849981628168416476987162425145_u128;
_3 = [14181702674242787168_usize,8311105258363209613_usize,102334642953731698_usize,1_usize,2_usize];
RET = 252672938771746479142474992988582058348_u128 & 305040876808571470242676371506190798244_u128;
RET = 3462005546_u32 as u128;
_1 = !_8;
Goto(bb3)
}
bb3 = {
_12 = _2 & _2;
_16 = _11 as f32;
_5 = [194_u8,78_u8,234_u8,175_u8,15_u8,88_u8,44_u8,158_u8];
_12 = _2;
_7 = 18640_u16 as i128;
_6 = (201678843_i32,);
_19 = !_2;
_2 = _19;
_5 = [112_u8,227_u8,120_u8,10_u8,130_u8,53_u8,83_u8,226_u8];
_14 = _10 | _10;
_15 = 20569_u16 as f64;
_3 = _4;
_17 = RET as u32;
_16 = _11 as f32;
_3 = [14838750404938544185_usize,8114689070239644383_usize,4_usize,2440862315724904084_usize,7_usize];
_8 = _1 | _1;
RET = 22375511478525297735385852295997064447_u128 & 241695955127276929647832221120272928112_u128;
_7 = 158702899101760540085402943851325128780_i128;
_21 = !_17;
_17 = 12927_u16 as u32;
_6.0 = _19 as i32;
_6.0 = -10724516_i32;
Goto(bb4)
}
bb4 = {
RET = 11150428724536440637_usize as u128;
_6.0 = 997198090_i32;
Goto(bb5)
}
bb5 = {
_15 = _7 as f64;
_23 = [_12,_19,_2,_2,_2,_2,_2];
_22 = (_8,);
_13.fld0 = [2_usize,1_usize,5_usize,16993516106979397676_usize,3_usize];
_4 = [6460472027057340946_usize,7338204385060339633_usize,2_usize,16537343794110942911_usize,13315550302244830259_usize];
_25 = RET as isize;
_13.fld0 = _4;
_13.fld0 = _3;
_26 = _11 as u16;
_15 = _6.0 as f64;
_6 = (1757811382_i32,);
_13.fld0 = [18434259125808483614_usize,17354356772589063443_usize,7537564128278103760_usize,9064222885118951860_usize,13561570471866467607_usize];
_14 = _15 as i8;
_22 = (_8,);
_11 = -(-13433_i16);
_28 = _25 * _12;
_12 = !_28;
_5 = _9;
RET = 102583121061801067111270512455821257639_u128;
RET = !187642709423830437557616148515155879465_u128;
_20 = [_12,_28,_2,_19,_19,_12,_2];
match _6.0 {
0 => bb4,
1757811382 => bb6,
_ => bb3
}
}
bb6 = {
_31 = -_16;
_33 = Move(_13);
_22 = (_1,);
_22.0 = _1;
_27 = [_1,_8,_1,_22.0];
_6 = ((-276751378_i32),);
_31 = _7 as f32;
_1 = _8 | _8;
_6 = (1351002342_i32,);
_9 = [181_u8,26_u8,85_u8,213_u8,96_u8,171_u8,151_u8,63_u8];
_33.fld0 = [3_usize,4_usize,1_usize,12072637627023699239_usize,7280094184172135823_usize];
_4 = [5_usize,2_usize,3_usize,1_usize,734646464025919855_usize];
_33 = Adt48 { fld0: _3 };
_13.fld0 = [4_usize,6_usize,15321513372504909983_usize,12396966566712394743_usize,0_usize];
_27 = [_8,_22.0,_1,_1];
_8 = _1;
_14 = _10;
_12 = -_28;
_30 = !_6.0;
_27 = [_1,_1,_1,_8];
_13 = Move(_33);
_1 = _30 != _30;
_20 = [_28,_19,_12,_12,_25,_2,_28];
_22 = (_8,);
_13 = Adt48 { fld0: _3 };
_33 = Adt48 { fld0: _4 };
_1 = _22.0;
Goto(bb7)
}
bb7 = {
_28 = !_12;
_15 = 5_usize as f64;
_3 = _4;
_12 = _28;
_23 = _20;
_35 = _1;
_11 = _17 as i16;
_36 = 169_u8;
_24 = [_11];
_5 = [_36,_36,_36,_36,_36,_36,_36,_36];
_17 = _35 as u32;
RET = !37557427757012867245453780140764954971_u128;
RET = 5_usize as u128;
_22 = (_1,);
_16 = _17 as f32;
_12 = 18269017612104171207_usize as isize;
_12 = _2 * _2;
Goto(bb8)
}
bb8 = {
_20 = _23;
_31 = _16 - _16;
_7 = 30646442308129930401698156538045512154_i128;
_5 = _9;
_14 = _36 as i8;
_9 = [_36,_36,_36,_36,_36,_36,_36,_36];
_4 = _3;
_4 = [7_usize,6_usize,7_usize,4360582134467761749_usize,13890525631284053663_usize];
_37 = _15 - _15;
Call(_23 = fn17(_8, _27, Move(_33), _19, _2, _35, _25, _14, _37), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_30 = _6.0 * _6.0;
_5 = [_36,_36,_36,_36,_36,_36,_36,_36];
_25 = -_12;
_31 = -_16;
_40 = (_1,);
_40.0 = _35;
_13 = Adt48 { fld0: _3 };
_36 = !180_u8;
_33 = Adt48 { fld0: _3 };
_32 = !RET;
_40.0 = !_8;
_31 = _16;
_4 = [0_usize,1_usize,6_usize,5_usize,5_usize];
RET = (-4088106388811611154_i64) as u128;
_37 = -_15;
_4 = _33.fld0;
_39 = [8891107322247740731_u64,3860161572713385013_u64,3723360403317580884_u64,12756443512309365311_u64,15059855502080472976_u64];
_35 = _1 & _22.0;
_31 = -_16;
_1 = !_22.0;
Goto(bb10)
}
bb10 = {
_28 = _7 as isize;
_13 = Move(_33);
Goto(bb11)
}
bb11 = {
_24 = [_11];
_16 = _31;
_25 = _19;
_12 = !_2;
_40 = (_22.0,);
_23 = [_12,_12,_28,_12,_28,_25,_12];
_27 = [_35,_40.0,_35,_35];
_42 = [_36,_36,_36,_36,_36,_36,_36,_36];
_18 = core::ptr::addr_of_mut!(_39);
_14 = _10 * _10;
_23 = _20;
_26 = !22011_u16;
_40.0 = _1 ^ _8;
_6 = (_30,);
_45 = [_6.0,_30,_30,_6.0,_30,_30,_6.0,_6.0];
_33 = Adt48 { fld0: _3 };
_2 = _32 as isize;
_39 = [13060129298176090553_u64,16349123682789001179_u64,12021793777633709295_u64,9583496079440476207_u64,17196673744742791914_u64];
_41 = _7 as f64;
_22 = (_35,);
_22.0 = !_40.0;
_24 = [_11];
_44 = [_2,_19,_19,_28,_25,_25,_12];
_42 = [_36,_36,_36,_36,_36,_36,_36,_36];
match _7 {
30646442308129930401698156538045512154 => bb12,
_ => bb5
}
}
bb12 = {
_8 = _1 | _22.0;
_14 = _10 + _10;
_37 = _2 as f64;
_17 = _6.0 as u32;
_4 = [7852246337601787393_usize,12525938770781908948_usize,2_usize,0_usize,5_usize];
_40 = (_8,);
_10 = _14 - _14;
_19 = !_12;
_33.fld0 = [11616873634156493758_usize,7_usize,0_usize,9190253049038637504_usize,14998018693912850826_usize];
_9 = [_36,_36,_36,_36,_36,_36,_36,_36];
_45 = [_30,_30,_30,_6.0,_6.0,_6.0,_6.0,_6.0];
_22 = (_8,);
_31 = -_16;
_46.0 = _8;
_11 = 23114_i16;
_45 = [_6.0,_6.0,_30,_6.0,_30,_30,_30,_6.0];
_18 = core::ptr::addr_of_mut!((*_18));
_33 = Adt48 { fld0: _13.fld0 };
_42 = _5;
_43 = _11 >> _6.0;
Goto(bb13)
}
bb13 = {
_20 = _44;
_18 = core::ptr::addr_of_mut!((*_18));
_30 = !_6.0;
RET = _32;
_47 = 4265582830166848569_u64 as i64;
RET = _32 << _14;
_46.0 = _22.0;
_23 = [_25,_19,_25,_19,_2,_12,_28];
RET = _32 - _32;
_38 = Adt58::Variant2 { fld0: _33.fld0 };
_48 = [6_usize,1910474327903768177_usize,2015552078304482971_usize,1_usize,15939226529417126378_usize];
Call(_30 = core::intrinsics::transmute(_17), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_40.0 = _35 == _8;
_46.0 = !_1;
_25 = _19 * _12;
_14 = !_10;
_1 = _40.0;
_11 = _43 * _43;
_3 = [4153903625033755356_usize,6_usize,7_usize,13623549984691169218_usize,7_usize];
_30 = _7 as i32;
_15 = _41 + _37;
_16 = _31 * _31;
_46 = _22;
_41 = -_37;
_10 = _14 ^ _14;
_15 = _41;
_47 = (-4937638450327509706_i64);
_53 = '\u{c9753}';
_50.0 = _40.0;
_38 = Adt58::Variant2 { fld0: _33.fld0 };
_4 = _13.fld0;
SetDiscriminant(_38, 0);
_49 = _41;
Goto(bb15)
}
bb15 = {
Call(_56 = dump_var(15_usize, 4_usize, Move(_4), 46_usize, Move(_46), 25_usize, Move(_25), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_56 = dump_var(15_usize, 30_usize, Move(_30), 22_usize, Move(_22), 27_usize, Move(_27), 47_usize, Move(_47)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_56 = dump_var(15_usize, 6_usize, Move(_6), 20_usize, Move(_20), 35_usize, Move(_35), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_56 = dump_var(15_usize, 14_usize, Move(_14), 53_usize, Move(_53), 5_usize, Move(_5), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_56 = dump_var(15_usize, 21_usize, Move(_21), 2_usize, Move(_2), 32_usize, Move(_32), 57_usize, _57), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: bool,mut _2: u128,mut _3: [usize; 5],mut _4: u128,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: i32,mut _9: [usize; 5],mut _10: bool,mut _11: (i32,),mut _12: isize,mut _13: bool,mut _14: bool,mut _15: [usize; 5]) -> [u8; 8] {
mir! {
type RET = [u8; 8];
let _16: f32;
let _17: *mut i16;
let _18: [i16; 1];
let _19: isize;
let _20: Adt48;
let _21: char;
let _22: Adt48;
let _23: i128;
let _24: [isize; 7];
let _25: char;
let _26: u32;
let _27: f64;
let _28: (u8,);
let _29: [bool; 4];
let _30: f32;
let _31: *const u128;
let _32: [bool; 4];
let _33: (i32,);
let _34: f32;
let _35: isize;
let _36: [i32; 8];
let _37: ();
let _38: ();
{
_6 = _14;
_12 = !(-9223372036854775808_isize);
_9 = _15;
_13 = _7;
RET = [122_u8,241_u8,146_u8,145_u8,218_u8,82_u8,30_u8,12_u8];
_2 = _4 << _12;
_11.0 = _8;
_6 = _10 & _5;
_16 = (-7337_i16) as f32;
_7 = !_13;
RET = [204_u8,70_u8,254_u8,140_u8,233_u8,164_u8,59_u8,133_u8];
_16 = 15101_u16 as f32;
_7 = _6;
_7 = _1;
_14 = _6 | _6;
RET = [50_u8,99_u8,122_u8,113_u8,92_u8,145_u8,101_u8,66_u8];
_11 = (_8,);
_11 = (_8,);
_9 = [2753056550421049385_usize,17661218791940454947_usize,14637281482192149222_usize,13204641132848726306_usize,5_usize];
_6 = _1;
_3 = [8757111478203281497_usize,3_usize,11176456364680021446_usize,921882850733739768_usize,8207471953982456105_usize];
_3 = _9;
_2 = _4 & _4;
_19 = !_12;
Call(RET = core::intrinsics::transmute(_12), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = !_7;
_11 = (_8,);
_2 = _4;
_2 = !_4;
_13 = !_14;
RET = [164_u8,75_u8,150_u8,39_u8,33_u8,136_u8,15_u8,244_u8];
_12 = (-7342516380891217724505928608973189474_i128) as isize;
Goto(bb2)
}
bb2 = {
_22.fld0 = [7_usize,7_usize,18143265190380508609_usize,3_usize,11244587848986492307_usize];
_22.fld0 = _9;
_22.fld0 = _9;
_7 = !_1;
_4 = _2;
_11.0 = _8;
_18 = [(-28383_i16)];
RET = [245_u8,208_u8,101_u8,159_u8,94_u8,109_u8,53_u8,178_u8];
_20 = Move(_22);
_21 = '\u{a4385}';
_15 = [14505839558595229797_usize,3_usize,4_usize,3991388267545482308_usize,7_usize];
_3 = _15;
_24 = [_12,_12,_12,_19,_19,_12,_12];
_18 = [(-18003_i16)];
_4 = !_2;
_22.fld0 = [2_usize,7746639560897988052_usize,13178031246840906201_usize,1745604585147581129_usize,0_usize];
_7 = !_13;
_21 = '\u{82528}';
match _11.0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607430539227014 => bb9,
_ => bb8
}
}
bb3 = {
_6 = !_7;
_11 = (_8,);
_2 = _4;
_2 = !_4;
_13 = !_14;
RET = [164_u8,75_u8,150_u8,39_u8,33_u8,136_u8,15_u8,244_u8];
_12 = (-7342516380891217724505928608973189474_i128) as isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_10 = !_13;
_18 = [2930_i16];
Goto(bb10)
}
bb10 = {
_24 = [_12,_19,_19,_12,_19,_12,_12];
_1 = _16 <= _16;
match _8 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb11,
340282366920938463463374607430539227014 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_6 = !_7;
_11 = (_8,);
_2 = _4;
_2 = !_4;
_13 = !_14;
RET = [164_u8,75_u8,150_u8,39_u8,33_u8,136_u8,15_u8,244_u8];
_12 = (-7342516380891217724505928608973189474_i128) as isize;
Goto(bb2)
}
bb13 = {
_8 = _11.0 ^ _11.0;
_26 = 1695920903_u32 & 2037382878_u32;
_7 = _13 & _13;
_13 = _7;
_28 = (46_u8,);
_19 = _12;
_13 = _14;
Goto(bb14)
}
bb14 = {
_15 = _22.fld0;
_1 = _7 != _14;
_29 = [_13,_1,_1,_7];
_16 = (-109_i8) as f32;
_29 = [_1,_13,_10,_7];
RET = [_28.0,_28.0,_28.0,_28.0,_28.0,_28.0,_28.0,_28.0];
_5 = !_13;
RET = [_28.0,_28.0,_28.0,_28.0,_28.0,_28.0,_28.0,_28.0];
_10 = _7;
_22.fld0 = _15;
_31 = core::ptr::addr_of!(_4);
_1 = _11.0 < _8;
_14 = _10;
_33 = _11;
_12 = _19;
_32 = [_14,_13,_10,_7];
_12 = _19 - _19;
_30 = _16;
_20 = Adt48 { fld0: _3 };
_16 = -_30;
_30 = _16 + _16;
_22 = Adt48 { fld0: _15 };
_30 = 59639_u16 as f32;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(16_usize, 18_usize, Move(_18), 6_usize, Move(_6), 21_usize, Move(_21), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(16_usize, 29_usize, Move(_29), 3_usize, Move(_3), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(16_usize, 32_usize, Move(_32), 11_usize, Move(_11), 2_usize, Move(_2), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: bool,mut _2: [bool; 4],mut _3: Adt48,mut _4: isize,mut _5: isize,mut _6: bool,mut _7: isize,mut _8: i8,mut _9: f64) -> [isize; 7] {
mir! {
type RET = [isize; 7];
let _10: f64;
let _11: [usize; 5];
let _12: (bool, (u8,), *const f64, &'static [u64; 5], *const *const f64);
let _13: (u128,);
let _14: [usize; 5];
let _15: Adt51;
let _16: [i16; 1];
let _17: bool;
let _18: [u8; 8];
let _19: bool;
let _20: [u64; 5];
let _21: bool;
let _22: isize;
let _23: isize;
let _24: *const [i32; 8];
let _25: (bool,);
let _26: (bool,);
let _27: ();
let _28: ();
{
_5 = _4 - _4;
_6 = _1;
_4 = _5 ^ _7;
_4 = 74294617169978861958096936166082269268_i128 as isize;
RET = [_7,_5,_4,_5,_5,_5,_4];
RET = [_5,_5,_5,_5,_5,_7,_7];
_2 = [_1,_6,_1,_6];
_2 = [_6,_6,_1,_1];
_9 = 9115289295831653395213802733335514370_u128 as f64;
_5 = _4;
RET = [_7,_4,_5,_7,_4,_4,_4];
RET = [_5,_7,_5,_7,_5,_7,_7];
_2 = [_6,_6,_6,_1];
_3.fld0 = [6_usize,8783182522083338686_usize,1577464257822379513_usize,4787795575872063161_usize,14146685848986477472_usize];
Goto(bb1)
}
bb1 = {
_10 = 4_usize as f64;
Goto(bb2)
}
bb2 = {
_11 = _3.fld0;
_1 = _6;
RET = [_5,_7,_7,_4,_5,_4,_7];
Goto(bb3)
}
bb3 = {
_3.fld0 = _11;
_5 = _1 as isize;
_6 = _1 & _1;
RET = [_4,_7,_5,_5,_5,_5,_5];
_4 = 22668_i16 as isize;
_3 = Adt48 { fld0: _11 };
RET = [_5,_5,_5,_4,_5,_5,_5];
RET = [_5,_7,_5,_7,_5,_5,_5];
_9 = _10;
_3 = Adt48 { fld0: _11 };
_11 = [6302210762940430691_usize,18196540730914255587_usize,6_usize,11571682855775880567_usize,4837425113689303751_usize];
_9 = -_10;
_9 = _10 + _10;
RET = [_5,_5,_5,_5,_5,_5,_5];
Goto(bb4)
}
bb4 = {
_1 = _4 >= _5;
_8 = (-47_i8) & (-101_i8);
_11 = [10222735909046206805_usize,0_usize,6_usize,1645491509208351431_usize,7619574069168250088_usize];
_9 = _10 + _10;
_3.fld0 = _11;
_5 = !_4;
_3.fld0 = [5_usize,0_usize,7_usize,14622122030023758534_usize,17161176017399376630_usize];
RET = [_5,_5,_7,_5,_5,_7,_5];
_4 = -_5;
_12.4 = core::ptr::addr_of!(_12.2);
_1 = _6;
_12.2 = core::ptr::addr_of!(_9);
_8 = _7 as i8;
_11 = _3.fld0;
_12.1 = (85_u8,);
_11 = [4_usize,3_usize,3_usize,11910425535813101916_usize,2_usize];
_12.2 = core::ptr::addr_of!(_10);
_14 = [15437094188521311994_usize,7_usize,6007024634488036631_usize,3_usize,5_usize];
_13.0 = _8 as u128;
_13 = (338365477193865107085689132638813512738_u128,);
_9 = -_10;
_5 = -_7;
_12.2 = core::ptr::addr_of!(_9);
RET = [_7,_5,_4,_5,_5,_7,_7];
_4 = _5;
RET = [_7,_7,_4,_7,_5,_7,_5];
match _13.0 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
338365477193865107085689132638813512738 => bb11,
_ => bb10
}
}
bb5 = {
_3.fld0 = _11;
_5 = _1 as isize;
_6 = _1 & _1;
RET = [_4,_7,_5,_5,_5,_5,_5];
_4 = 22668_i16 as isize;
_3 = Adt48 { fld0: _11 };
RET = [_5,_5,_5,_4,_5,_5,_5];
RET = [_5,_7,_5,_7,_5,_5,_5];
_9 = _10;
_3 = Adt48 { fld0: _11 };
_11 = [6302210762940430691_usize,18196540730914255587_usize,6_usize,11571682855775880567_usize,4837425113689303751_usize];
_9 = -_10;
_9 = _10 + _10;
RET = [_5,_5,_5,_5,_5,_5,_5];
Goto(bb4)
}
bb6 = {
_11 = _3.fld0;
_1 = _6;
RET = [_5,_7,_7,_4,_5,_4,_7];
Goto(bb3)
}
bb7 = {
_10 = 4_usize as f64;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_12.2 = core::ptr::addr_of!(_9);
_17 = _1 < _1;
_3.fld0 = [9782617381475430342_usize,18314075191908212548_usize,902076071747404443_usize,14666275839521996006_usize,2621959204190972424_usize];
_2 = [_17,_1,_17,_1];
_1 = _17 <= _6;
_1 = _17 | _17;
_12.0 = !_17;
RET = [_7,_5,_7,_5,_4,_5,_7];
_18 = [_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0];
_11 = [3_usize,5_usize,2_usize,15900874292715875183_usize,4852464213231745310_usize];
_3 = Adt48 { fld0: _11 };
_14 = _11;
_12.1.0 = !154_u8;
_8 = 48_i8 | (-8_i8);
_3 = Adt48 { fld0: _14 };
RET = [_7,_7,_4,_4,_7,_4,_4];
_4 = !_5;
_16 = [(-18111_i16)];
_7 = _4 & _5;
match _13.0 {
0 => bb10,
338365477193865107085689132638813512738 => bb13,
_ => bb12
}
}
bb12 = {
_10 = 4_usize as f64;
Goto(bb2)
}
bb13 = {
_12.1 = (243_u8,);
_12.1 = (34_u8,);
_17 = _12.0;
_12.1 = (60_u8,);
_19 = !_6;
_12.2 = core::ptr::addr_of!(_10);
_7 = _5;
_12.1.0 = !222_u8;
_7 = 44943980423714043528054416233689276067_i128 as isize;
_7 = 59770_u16 as isize;
_8 = 67_i8 | 19_i8;
_12.1 = (206_u8,);
_2 = [_17,_12.0,_12.0,_19];
_13 = (327929170988420714279306238686002762879_u128,);
_5 = _7;
_20 = [1631365293237897435_u64,255815238485542730_u64,5592690324611754469_u64,9334980239946616136_u64,15248492289351556259_u64];
_20 = [16795892675161288355_u64,6279212480466107287_u64,7274540384251218135_u64,12985834817870159897_u64,7241639596287311793_u64];
Goto(bb14)
}
bb14 = {
_18 = [_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0];
_20 = [15611733138156194012_u64,17611090642839191884_u64,15180754993289339774_u64,474585291451003601_u64,17418723662311090412_u64];
_12.3 = &_20;
_16 = [(-22064_i16)];
_25.0 = _6 >= _17;
_10 = _9;
_22 = 1911326865_i32 as isize;
_17 = _25.0;
RET = [_22,_4,_7,_4,_7,_4,_4];
_14 = [3838212196910015840_usize,4_usize,4397684260707036834_usize,4990615017615741661_usize,5_usize];
_12.2 = core::ptr::addr_of!(_9);
_23 = -_22;
_10 = 72888044891504678376620809598799128179_i128 as f64;
_12.0 = !_17;
_12.3 = &_20;
_21 = _17 >= _12.0;
_21 = _17 & _6;
_20 = [16553694642498767633_u64,4252163298563984417_u64,11531220713270388801_u64,6282204453512329404_u64,2110209822553309254_u64];
_22 = _5 * _5;
_8 = !(-30_i8);
_26 = _25;
_18 = [_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0,_12.1.0];
_13 = (156192970159786830059163356617172061392_u128,);
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(17_usize, 2_usize, Move(_2), 25_usize, Move(_25), 11_usize, Move(_11), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(17_usize, 23_usize, Move(_23), 20_usize, Move(_20), 7_usize, Move(_7), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_27 = dump_var(17_usize, 8_usize, Move(_8), 22_usize, Move(_22), 28_usize, _28, 28_usize, _28), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [u8; 8],mut _2: u8,mut _3: [usize; 5],mut _4: char,mut _5: f32,mut _6: [u8; 8]) -> *const f64 {
mir! {
type RET = *const f64;
let _7: u64;
let _8: bool;
let _9: [bool; 4];
let _10: u32;
let _11: Adt52;
let _12: i32;
let _13: [usize; 5];
let _14: *const u64;
let _15: *const [i32; 8];
let _16: Adt54;
let _17: isize;
let _18: f32;
let _19: f64;
let _20: usize;
let _21: *const [i32; 8];
let _22: (i32,);
let _23: *const u64;
let _24: Adt48;
let _25: (bool,);
let _26: &'static [u64; 5];
let _27: [usize; 5];
let _28: [u64; 5];
let _29: f32;
let _30: [i16; 1];
let _31: Adt48;
let _32: f32;
let _33: Adt57;
let _34: [usize; 5];
let _35: *const f64;
let _36: Adt51;
let _37: (u8,);
let _38: u8;
let _39: (bool,);
let _40: ();
let _41: ();
{
_2 = !125_u8;
_7 = (-26395_i16) as u64;
_5 = 159395243775670666710444610688093837758_i128 as f32;
_4 = '\u{27035}';
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_4 = '\u{10d865}';
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_7 = 1233562249614912474_u64 ^ 5396470879365337679_u64;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_2 = 105_u8 - 25_u8;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb1)
}
bb1 = {
_2 = 219_u8 * 88_u8;
_2 = 62_u8;
_2 = 38621_u16 as u8;
Goto(bb2)
}
bb2 = {
_3 = [707103690917426023_usize,241566270639431253_usize,7725536538707174573_usize,7_usize,5_usize];
_8 = !true;
_5 = 2008307889_u32 as f32;
_8 = !true;
_4 = '\u{109e1e}';
_7 = 1879788269774182300_u64;
_3 = [16578253508739833761_usize,7_usize,1532301899189434978_usize,3_usize,11998101288502812115_usize];
_6 = _1;
_7 = !3344198474586881992_u64;
_1 = _6;
_8 = _5 > _5;
_2 = !100_u8;
_9 = [_8,_8,_8,_8];
_3 = [2_usize,15902035753699654059_usize,4_usize,10534433080102285849_usize,8775664156230388690_usize];
_4 = '\u{66dad}';
_13 = _3;
_10 = (-51_i8) as u32;
Goto(bb3)
}
bb3 = {
_8 = !true;
_7 = 11070833091732295172_u64;
_12 = _10 as i32;
_12 = (-795495315_i32) ^ (-1661919141_i32);
_5 = 5759_u16 as f32;
_8 = _10 != _10;
_10 = !1651161898_u32;
_10 = 1188060262_u32 & 1564438702_u32;
_13 = [6_usize,2225988037008395865_usize,1549205103081539852_usize,4105959585146315252_usize,2_usize];
_9 = [_8,_8,_8,_8];
_8 = _10 != _10;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_8 = !true;
_8 = _5 <= _5;
_8 = true;
_5 = _10 as f32;
_2 = 207_u8 + 17_u8;
_7 = _10 as u64;
_3 = [16034575583993002819_usize,2_usize,17596171015943277735_usize,1_usize,7_usize];
_7 = 10379490130498779807_u64;
_14 = core::ptr::addr_of!(_7);
Goto(bb4)
}
bb4 = {
_2 = 40_u8 * 18_u8;
_13 = [12300651475159702228_usize,1_usize,12435708670563204923_usize,18419228131734700570_usize,4_usize];
_13 = [5_usize,4419136466336944038_usize,3230620154076260450_usize,5_usize,1_usize];
_8 = true;
_5 = 21937_i16 as f32;
_12 = -778971201_i32;
_8 = !false;
_7 = 13599262601709788875_u64;
_14 = core::ptr::addr_of!((*_14));
_4 = '\u{69252}';
_10 = 2055432251_u32 | 2752093193_u32;
_12 = 97306301_i32;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb5)
}
bb5 = {
_7 = !9169426677460031152_u64;
_10 = 1989112137_u32 | 3658010936_u32;
_5 = 111_i8 as f32;
_8 = false;
_17 = (-9223372036854775808_isize);
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_9 = [_8,_8,_8,_8];
_14 = core::ptr::addr_of!((*_14));
_13 = [4_usize,6763343438347078951_usize,17813779299842735416_usize,1_usize,7_usize];
_12 = (-1351063618_i32) & 380793096_i32;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = core::ptr::addr_of!(_19);
Goto(bb6)
}
bb6 = {
RET = core::ptr::addr_of!((*RET));
_12 = 1188914840_i32 + 1473639340_i32;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_20 = !15380429114747324406_usize;
_18 = _5;
_12 = (-25892372_i32) & (-664537081_i32);
_20 = 5_usize;
_6 = _1;
_22 = (_12,);
_9 = [_8,_8,_8,_8];
_12 = _22.0;
_4 = '\u{cc354}';
_14 = core::ptr::addr_of!(_7);
_2 = _6[_20] - _1[_20];
_19 = 28569_u16 as f64;
_22.0 = -_12;
RET = core::ptr::addr_of!((*RET));
_2 = _5 as u8;
Goto(bb7)
}
bb7 = {
_5 = -_18;
_10 = 2296404125_u32;
_7 = 23527_i16 as u64;
_2 = _18 as u8;
RET = core::ptr::addr_of!((*RET));
_14 = core::ptr::addr_of!((*_14));
_5 = _18 + _18;
_7 = _17 as u64;
_23 = _14;
_23 = _14;
Goto(bb8)
}
bb8 = {
_18 = -_5;
RET = core::ptr::addr_of!(_19);
_14 = core::ptr::addr_of!((*_14));
_6 = _1;
_22.0 = _12 ^ _12;
_9 = [_8,_8,_8,_8];
_24 = Adt48 { fld0: _13 };
_18 = _5;
_18 = 956_u16 as f32;
_6 = [_1[_20],_2,_1[_20],_2,_1[_20],_1[_20],_2,_1[_20]];
_25 = (_8,);
_25.0 = _22.0 < _22.0;
_25.0 = !_8;
_7 = 10368761195189850949_u64 + 12521142251735838473_u64;
_8 = _25.0 & _25.0;
_20 = !7311968545668519870_usize;
_24.fld0 = [_20,_20,_20,_20,_20];
_18 = -_5;
Call(_14 = core::intrinsics::arith_offset(_23, _17), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_2 = !197_u8;
_25.0 = !_8;
_3 = [_20,_20,_20,_20,_20];
_18 = -_5;
RET = core::ptr::addr_of!((*RET));
_8 = _25.0;
_2 = 117_u8 * 184_u8;
_24.fld0 = _13;
_19 = (-22588700401559916892991396144669310175_i128) as f64;
_3 = [_20,_20,_20,_20,_20];
_7 = 1313470715129005306_u64 - 4082872852642906729_u64;
_22.0 = _12 >> _20;
_13 = [_20,_20,_20,_20,_20];
_18 = -_5;
_8 = _25.0;
_25.0 = _8 | _8;
_9 = [_8,_25.0,_8,_25.0];
_8 = _25.0;
_24 = Adt48 { fld0: _13 };
_22.0 = _12 << _7;
_24.fld0 = [_20,_20,_20,_20,_20];
_3 = [_20,_20,_20,_20,_20];
_27 = [_20,_20,_20,_20,_20];
_10 = 4077470783_u32;
Goto(bb10)
}
bb10 = {
_5 = _18 - _18;
_7 = 15074188553658734216_u64;
_27 = [_20,_20,_20,_20,_20];
_12 = !_22.0;
_22.0 = _12 >> _2;
_24 = Adt48 { fld0: _3 };
_2 = 59_u8 * 142_u8;
_20 = 5_usize;
_26 = &_28;
_31.fld0 = [_20,_20,_20,_20,_20];
_10 = !4216744235_u32;
_3 = [_20,_20,_20,_20,_20];
_20 = _17 as usize;
_4 = '\u{199c}';
_17 = _4 as isize;
_31 = Adt48 { fld0: _13 };
_5 = -_18;
_22 = (_12,);
match _7 {
0 => bb1,
15074188553658734216 => bb12,
_ => bb11
}
}
bb11 = {
_18 = -_5;
RET = core::ptr::addr_of!(_19);
_14 = core::ptr::addr_of!((*_14));
_6 = _1;
_22.0 = _12 ^ _12;
_9 = [_8,_8,_8,_8];
_24 = Adt48 { fld0: _13 };
_18 = _5;
_18 = 956_u16 as f32;
_6 = [_1[_20],_2,_1[_20],_2,_1[_20],_1[_20],_2,_1[_20]];
_25 = (_8,);
_25.0 = _22.0 < _22.0;
_25.0 = !_8;
_7 = 10368761195189850949_u64 + 12521142251735838473_u64;
_8 = _25.0 & _25.0;
_20 = !7311968545668519870_usize;
_24.fld0 = [_20,_20,_20,_20,_20];
_18 = -_5;
Call(_14 = core::intrinsics::arith_offset(_23, _17), ReturnTo(bb9), UnwindUnreachable())
}
bb12 = {
_28 = [_7,_7,_7,_7,_7];
_25 = (_8,);
_4 = '\u{9dedf}';
_23 = core::ptr::addr_of!(_7);
RET = core::ptr::addr_of!((*RET));
_20 = !1_usize;
_6 = _1;
_17 = !(-9223372036854775808_isize);
_23 = core::ptr::addr_of!((*_23));
_22.0 = (*RET) as i32;
_25.0 = _8;
_19 = _10 as f64;
RET = core::ptr::addr_of!((*RET));
match (*_23) {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
15074188553658734216 => bb21,
_ => bb20
}
}
bb13 = {
_18 = -_5;
RET = core::ptr::addr_of!(_19);
_14 = core::ptr::addr_of!((*_14));
_6 = _1;
_22.0 = _12 ^ _12;
_9 = [_8,_8,_8,_8];
_24 = Adt48 { fld0: _13 };
_18 = _5;
_18 = 956_u16 as f32;
_6 = [_1[_20],_2,_1[_20],_2,_1[_20],_1[_20],_2,_1[_20]];
_25 = (_8,);
_25.0 = _22.0 < _22.0;
_25.0 = !_8;
_7 = 10368761195189850949_u64 + 12521142251735838473_u64;
_8 = _25.0 & _25.0;
_20 = !7311968545668519870_usize;
_24.fld0 = [_20,_20,_20,_20,_20];
_18 = -_5;
Call(_14 = core::intrinsics::arith_offset(_23, _17), ReturnTo(bb9), UnwindUnreachable())
}
bb14 = {
_3 = [707103690917426023_usize,241566270639431253_usize,7725536538707174573_usize,7_usize,5_usize];
_8 = !true;
_5 = 2008307889_u32 as f32;
_8 = !true;
_4 = '\u{109e1e}';
_7 = 1879788269774182300_u64;
_3 = [16578253508739833761_usize,7_usize,1532301899189434978_usize,3_usize,11998101288502812115_usize];
_6 = _1;
_7 = !3344198474586881992_u64;
_1 = _6;
_8 = _5 > _5;
_2 = !100_u8;
_9 = [_8,_8,_8,_8];
_3 = [2_usize,15902035753699654059_usize,4_usize,10534433080102285849_usize,8775664156230388690_usize];
_4 = '\u{66dad}';
_13 = _3;
_10 = (-51_i8) as u32;
Goto(bb3)
}
bb15 = {
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_2 = !197_u8;
_25.0 = !_8;
_3 = [_20,_20,_20,_20,_20];
_18 = -_5;
RET = core::ptr::addr_of!((*RET));
_8 = _25.0;
_2 = 117_u8 * 184_u8;
_24.fld0 = _13;
_19 = (-22588700401559916892991396144669310175_i128) as f64;
_3 = [_20,_20,_20,_20,_20];
_7 = 1313470715129005306_u64 - 4082872852642906729_u64;
_22.0 = _12 >> _20;
_13 = [_20,_20,_20,_20,_20];
_18 = -_5;
_8 = _25.0;
_25.0 = _8 | _8;
_9 = [_8,_25.0,_8,_25.0];
_8 = _25.0;
_24 = Adt48 { fld0: _13 };
_22.0 = _12 << _7;
_24.fld0 = [_20,_20,_20,_20,_20];
_3 = [_20,_20,_20,_20,_20];
_27 = [_20,_20,_20,_20,_20];
_10 = 4077470783_u32;
Goto(bb10)
}
bb16 = {
_18 = -_5;
RET = core::ptr::addr_of!(_19);
_14 = core::ptr::addr_of!((*_14));
_6 = _1;
_22.0 = _12 ^ _12;
_9 = [_8,_8,_8,_8];
_24 = Adt48 { fld0: _13 };
_18 = _5;
_18 = 956_u16 as f32;
_6 = [_1[_20],_2,_1[_20],_2,_1[_20],_1[_20],_2,_1[_20]];
_25 = (_8,);
_25.0 = _22.0 < _22.0;
_25.0 = !_8;
_7 = 10368761195189850949_u64 + 12521142251735838473_u64;
_8 = _25.0 & _25.0;
_20 = !7311968545668519870_usize;
_24.fld0 = [_20,_20,_20,_20,_20];
_18 = -_5;
Call(_14 = core::intrinsics::arith_offset(_23, _17), ReturnTo(bb9), UnwindUnreachable())
}
bb17 = {
_5 = -_18;
_10 = 2296404125_u32;
_7 = 23527_i16 as u64;
_2 = _18 as u8;
RET = core::ptr::addr_of!((*RET));
_14 = core::ptr::addr_of!((*_14));
_5 = _18 + _18;
_7 = _17 as u64;
_23 = _14;
_23 = _14;
Goto(bb8)
}
bb18 = {
_2 = 219_u8 * 88_u8;
_2 = 62_u8;
_2 = 38621_u16 as u8;
Goto(bb2)
}
bb19 = {
_7 = !9169426677460031152_u64;
_10 = 1989112137_u32 | 3658010936_u32;
_5 = 111_i8 as f32;
_8 = false;
_17 = (-9223372036854775808_isize);
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_9 = [_8,_8,_8,_8];
_14 = core::ptr::addr_of!((*_14));
_13 = [4_usize,6763343438347078951_usize,17813779299842735416_usize,1_usize,7_usize];
_12 = (-1351063618_i32) & 380793096_i32;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = core::ptr::addr_of!(_19);
Goto(bb6)
}
bb20 = {
_2 = 40_u8 * 18_u8;
_13 = [12300651475159702228_usize,1_usize,12435708670563204923_usize,18419228131734700570_usize,4_usize];
_13 = [5_usize,4419136466336944038_usize,3230620154076260450_usize,5_usize,1_usize];
_8 = true;
_5 = 21937_i16 as f32;
_12 = -778971201_i32;
_8 = !false;
_7 = 13599262601709788875_u64;
_14 = core::ptr::addr_of!((*_14));
_4 = '\u{69252}';
_10 = 2055432251_u32 | 2752093193_u32;
_12 = 97306301_i32;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb5)
}
bb21 = {
_28 = [(*_23),(*_23),_7,_7,(*_23)];
_22.0 = _12;
_31 = Adt48 { fld0: _27 };
_29 = (*_23) as f32;
_31 = Move(_24);
_19 = 17_i8 as f64;
_8 = _12 == _22.0;
_10 = _25.0 as u32;
_25.0 = !_8;
_37.0 = _2;
_38 = _4 as u8;
_31.fld0 = [_20,_20,_20,_20,_20];
_13 = _31.fld0;
_3 = [_20,_20,_20,_20,_20];
_31.fld0 = [_20,_20,_20,_20,_20];
_9 = [_25.0,_8,_8,_8];
_31 = Adt48 { fld0: _13 };
_39.0 = _12 <= _12;
Goto(bb22)
}
bb22 = {
Call(_40 = dump_var(18_usize, 3_usize, Move(_3), 22_usize, Move(_22), 2_usize, Move(_2), 9_usize, Move(_9)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_40 = dump_var(18_usize, 38_usize, Move(_38), 4_usize, Move(_4), 27_usize, Move(_27), 7_usize, Move(_7)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_40 = dump_var(18_usize, 28_usize, Move(_28), 39_usize, Move(_39), 41_usize, _41, 41_usize, _41), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box(8724_u16), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(4003899998_u32));
                
            }
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: [u8; 8],
fld1: u64,

},
Variant1{
fld0: *mut [u64; 5],
fld1: *const *const char,
fld2: i32,
fld3: *const *const *const f64,
fld4: [u8; 8],

},
Variant2{
fld0: u64,

},
Variant3{
fld0: bool,
fld1: *const *const *const char,
fld2: u64,
fld3: *mut *const *const f64,
fld4: [i16; 1],

}}
#[derive(Debug)]
pub struct Adt45 {
fld0: *const f64,
fld1: [bool; 4],
fld2: *const *const *const f64,
fld3: [usize; 5],
}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: bool,
fld1: Adt45,
fld2: [bool; 4],
fld3: (bool,),
fld4: *const char,
fld5: usize,

},
Variant1{
fld0: u32,
fld1: *const [i32; 8],
fld2: usize,
fld3: *const *const f64,
fld4: i16,
fld5: i64,

},
Variant2{
fld0: (i32,),

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: *const *const char,

},
Variant1{
fld0: usize,
fld1: *const u128,

},
Variant2{
fld0: (*const u128, u64, i8),
fld1: char,
fld2: u64,
fld3: i128,
fld4: i16,
fld5: *mut i16,
fld6: [u64; 5],

}}
#[derive(Debug)]
pub struct Adt48 {
fld0: [usize; 5],
}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [usize; 5],
fld1: *const f64,
fld2: Adt47,
fld3: f32,
fld4: (u128,),
fld5: Adt45,

},
Variant1{
fld0: (u128,),
fld1: *const *const *const char,
fld2: isize,
fld3: f64,
fld4: i16,
fld5: u64,
fld6: [u64; 5],
fld7: i128,

},
Variant2{
fld0: [i32; 8],
fld1: *const f64,
fld2: *const char,
fld3: u32,
fld4: i16,
fld5: [i16; 1],
fld6: *const u64,
fld7: [u64; 5],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: *const u128,
fld1: *const *const *const char,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: u128,
fld1: u8,
fld2: Adt48,
fld3: *const *const *const f64,
fld4: *const char,
fld5: *mut i16,

},
Variant1{
fld0: Adt49,

},
Variant2{
fld0: *mut *const *const f64,
fld1: *const *const *const char,
fld2: *const *const *const f64,
fld3: (bool,),
fld4: Adt47,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: *const u64,
fld1: *mut u8,
fld2: *const u128,
fld3: Adt51,
fld4: *const f64,

},
Variant1{
fld0: [i32; 8],
fld1: Adt49,
fld2: (*const u128, u64, i8),
fld3: *mut i16,
fld4: Adt47,

},
Variant2{
fld0: [i16; 1],
fld1: (i32,),
fld2: u16,

},
Variant3{
fld0: (i32,),
fld1: i64,
fld2: (u8,),

}}
#[derive(Debug)]
pub struct Adt53 {
fld0: *const *const *const char,
fld1: [bool; 4],
fld2: *const u128,
fld3: *const *const f64,
}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: bool,
fld1: (*const u128, u64, i8),
fld2: Adt50,
fld3: u16,
fld4: *const [i32; 8],
fld5: Adt48,
fld6: i64,
fld7: *const u64,

},
Variant1{
fld0: u128,
fld1: *const u128,
fld2: Adt52,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt45,

},
Variant1{
fld0: [usize; 5],
fld1: *const *const char,
fld2: isize,
fld3: u8,
fld4: *mut [u64; 5],
fld5: i32,
fld6: usize,
fld7: [isize; 7],

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *mut u8,
fld1: char,

},
Variant1{
fld0: Adt45,
fld1: *const f64,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: u8,
fld1: char,
fld2: Adt44,
fld3: i8,
fld4: i16,
fld5: (i32,),

},
Variant1{
fld0: Adt51,
fld1: i128,
fld2: *const *const *const f64,
fld3: (i32,),

},
Variant2{
fld0: usize,
fld1: Adt52,
fld2: Adt50,
fld3: Adt47,
fld4: i16,
fld5: *mut u8,

},
Variant3{
fld0: *const *const *const char,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: Adt44,
fld1: *const *const *const char,
fld2: *mut i16,
fld3: Adt50,
fld4: u8,
fld5: (u8,),

},
Variant1{
fld0: Adt50,
fld1: char,
fld2: f64,
fld3: *const *const *const f64,

},
Variant2{
fld0: [usize; 5],

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: [bool; 4],
fld1: char,
fld2: u128,
fld3: usize,

},
Variant1{
fld0: *const char,

},
Variant2{
fld0: [u64; 5],

},
Variant3{
fld0: *mut [u64; 5],
fld1: Adt55,
fld2: u64,
fld3: Adt54,
fld4: Adt56,
fld5: *mut u8,
fld6: Adt48,

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: [i32; 8],
fld1: (u128,),
fld2: Adt56,
fld3: i8,
fld4: *const u64,
fld5: i32,
fld6: Adt45,

},
Variant1{
fld0: [bool; 4],
fld1: *mut i16,
fld2: *mut *const *const f64,
fld3: Adt57,

},
Variant2{
fld0: i64,
fld1: [bool; 4],

}}

