#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: u16,mut _4: usize) -> u128 {
mir! {
type RET = u128;
let _5: i8;
let _6: ((*mut isize,),);
let _7: u64;
let _8: f64;
let _9: u128;
let _10: usize;
let _11: *const u8;
let _12: u32;
let _13: [i16; 5];
let _14: u64;
let _15: bool;
let _16: *const *const [usize; 2];
let _17: ((*mut isize,), *const u128, u128, [usize; 2]);
let _18: usize;
let _19: f64;
let _20: bool;
let _21: [usize; 2];
let _22: (f64,);
let _23: Adt56;
let _24: f32;
let _25: Adt55;
let _26: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _27: i32;
let _28: isize;
let _29: [i64; 5];
let _30: f64;
let _31: bool;
let _32: f64;
let _33: char;
let _34: [char; 3];
let _35: u8;
let _36: ([u32; 5],);
let _37: Adt54;
let _38: ();
let _39: ();
{
RET = !219679197057005504884901227890590874577_u128;
_2 = '\u{dcf8c}';
_5 = 39_i8;
_3 = !39074_u16;
_3 = !2270_u16;
_4 = 6020803960986570009_u64 as usize;
_2 = '\u{7a1cc}';
_3 = !31064_u16;
_1 = false & false;
RET = !157133080111644755998426890818524582788_u128;
_5 = 5_i8 * 63_i8;
_1 = _2 == _2;
_1 = !true;
_5 = !(-30_i8);
_3 = 59168_u16;
_1 = _3 == _3;
RET = 224931764443251246885510673086159104628_u128;
RET = _2 as u128;
_4 = 988797287_i32 as usize;
Call(_5 = core::intrinsics::transmute(_1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = '\u{85f7a}';
_3 = !20592_u16;
_1 = _2 <= _2;
_7 = 2841201191134903631_u64;
_3 = 49950_u16 * 55351_u16;
_7 = (-466664085_i32) as u64;
_5 = 41_i8;
_5 = _1 as i8;
RET = 226004334_u32 as u128;
_2 = '\u{bd785}';
_3 = !11321_u16;
_2 = '\u{1cd73}';
_8 = _7 as f64;
_5 = (-117_i8) ^ 41_i8;
_5 = -62_i8;
RET = 277664783121734914926895606564584973379_u128 | 213002359363865189958848729035224879088_u128;
RET = !161220528486034783999368545568834794973_u128;
_1 = !false;
_9 = _2 as u128;
RET = !_9;
_3 = 65477_u16 >> _5;
RET = _9;
_5 = 180_u8 as i8;
Goto(bb2)
}
bb2 = {
_1 = _9 >= _9;
_8 = _4 as f64;
Goto(bb3)
}
bb3 = {
_3 = 23357_u16;
_2 = '\u{b6cde}';
_5 = !122_i8;
_5 = 45_i8 >> _9;
_3 = (-111895982935598466942592693954335869882_i128) as u16;
_8 = _9 as f64;
_8 = (-9223372036854775808_isize) as f64;
RET = 55_isize as u128;
_8 = _3 as f64;
RET = _9;
RET = 3833689049_u32 as u128;
_4 = 6691969473386610268_usize;
_5 = _2 as i8;
_10 = _4 % 6351328030706394085_usize;
_9 = 244767081120465432916765894194732718281_u128;
_8 = (-6362452411304546727_i64) as f64;
_3 = !32400_u16;
RET = !_9;
_2 = '\u{cef1d}';
_8 = _5 as f64;
Call(_7 = fn1(_4, _4, _10, _1, _5, _10, _1, _4, _1, _9, _5, _9, _1, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_2 = '\u{c4f9}';
_9 = !137761332725869292653142697159907872339_u128;
_1 = _7 < _7;
_7 = _1 as u64;
_12 = 1581663150_u32;
_13 = [(-5634_i16),6981_i16,(-9980_i16),(-32217_i16),(-3709_i16)];
_15 = _1 ^ _1;
_14 = _5 as u64;
RET = _14 as u128;
_8 = 183_u8 as f64;
_17.3 = [_10,_10];
_17.1 = core::ptr::addr_of!(_9);
_2 = '\u{ea28f}';
_12 = !3574595548_u32;
_4 = _10;
_12 = 664891081_u32;
_4 = _10;
_2 = '\u{f9c9b}';
_7 = !_14;
_12 = 2743038652_u32;
Goto(bb5)
}
bb5 = {
_14 = !_7;
_10 = !_4;
_18 = _10;
_15 = _7 >= _7;
Call(_7 = core::intrinsics::transmute(_14), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_5 = !66_i8;
_3 = _4 as u16;
_17.2 = _9 | _9;
_1 = _15;
_5 = -(-76_i8);
_10 = _18 ^ _4;
_15 = _1;
_7 = _14;
Goto(bb7)
}
bb7 = {
_5 = 36_i8;
_10 = !_18;
RET = _17.2 >> _9;
_13 = [(-28626_i16),(-8458_i16),11615_i16,21775_i16,4994_i16];
_19 = (-9223372036854775808_isize) as f64;
_3 = 45543_u16;
_7 = (-2281187910697878873_i64) as u64;
_9 = _17.2 | _17.2;
_17.2 = _9;
_12 = 13019448_u32;
_4 = _18 % 5907276710801752963_usize;
_18 = _2 as usize;
_20 = _15;
_17.2 = _9 / 203587832801985666303335025262953241967_u128;
_12 = _1 as u32;
_2 = '\u{6168f}';
_14 = _7;
_10 = _14 as usize;
_1 = _9 == _9;
_15 = !_20;
_20 = !_1;
_12 = !2203460639_u32;
_7 = _14 | _14;
_21 = _17.3;
_21 = _17.3;
_14 = _7 / 1635832612119545543_u64;
_1 = _20;
_4 = _18 * _10;
Goto(bb8)
}
bb8 = {
_10 = !_4;
_5 = (-19_i8);
RET = !_9;
_12 = (-997725144_i32) as u32;
_17.1 = core::ptr::addr_of!(_9);
_14 = (-4532093914886650523_i64) as u64;
_22.0 = _19;
_22.0 = _8;
_22.0 = (-30820_i16) as f64;
_3 = 4715_u16 | 10764_u16;
_17.3 = [_4,_4];
_14 = _7;
_13 = [26163_i16,(-18709_i16),(-23053_i16),(-22599_i16),(-18242_i16)];
_4 = _18 % 17045672506294183183_usize;
_7 = _14 | _14;
_4 = _10 >> _7;
_12 = _3 as u32;
_3 = _4 as u16;
_8 = _19 + _19;
_23.fld1 = [(-30164_i16),(-6372_i16),23828_i16,(-7296_i16),25545_i16];
_23.fld5 = _19;
_20 = _1;
_18 = _10 * _4;
_12 = 1802429090_i32 as u32;
_1 = !_20;
_23.fld2 = !_4;
_14 = _7 / 3329148507858019336_u64;
_1 = _4 <= _4;
Goto(bb9)
}
bb9 = {
_23.fld4 = [(-637828688_i32),1619702399_i32,1093352551_i32];
_22 = (_19,);
_2 = '\u{efb32}';
_19 = _8 + _8;
_9 = _17.2;
_26.4.0 = core::ptr::addr_of_mut!(_28);
_24 = _9 as f32;
_23.fld1 = [(-1558_i16),(-21322_i16),16424_i16,(-10599_i16),12356_i16];
_26.4.0 = core::ptr::addr_of_mut!(_28);
_22.0 = -_23.fld5;
_26.2 = 89_u8 as usize;
_29 = [(-25695080873013672_i64),(-8092683453845901765_i64),(-437241055010453079_i64),5040360231951120156_i64,(-8980150372656536896_i64)];
_23.fld1 = [27063_i16,26520_i16,12090_i16,(-9507_i16),(-30857_i16)];
_17.0.0 = core::ptr::addr_of_mut!(_28);
_22.0 = -_19;
_19 = _8 + _22.0;
_25 = Adt55 { fld0: _5 };
_24 = _18 as f32;
_32 = -_19;
_17.2 = _9;
_6.0.0 = core::ptr::addr_of_mut!(_28);
_9 = _17.2;
match _25.fld0 {
0 => bb2,
340282366920938463463374607431768211437 => bb11,
_ => bb10
}
}
bb10 = {
_2 = '\u{c4f9}';
_9 = !137761332725869292653142697159907872339_u128;
_1 = _7 < _7;
_7 = _1 as u64;
_12 = 1581663150_u32;
_13 = [(-5634_i16),6981_i16,(-9980_i16),(-32217_i16),(-3709_i16)];
_15 = _1 ^ _1;
_14 = _5 as u64;
RET = _14 as u128;
_8 = 183_u8 as f64;
_17.3 = [_10,_10];
_17.1 = core::ptr::addr_of!(_9);
_2 = '\u{ea28f}';
_12 = !3574595548_u32;
_4 = _10;
_12 = 664891081_u32;
_4 = _10;
_2 = '\u{f9c9b}';
_7 = !_14;
_12 = 2743038652_u32;
Goto(bb5)
}
bb11 = {
_27 = 416894084_i32;
_24 = _12 as f32;
_23.fld1 = [4632_i16,2763_i16,(-26524_i16),(-29224_i16),14704_i16];
_23.fld3 = _19 as i8;
_17.1 = core::ptr::addr_of!(_17.2);
_14 = _7 | _7;
_25.fld0 = !_23.fld3;
_23.fld5 = -_19;
_28 = 32_isize & (-9223372036854775808_isize);
_21 = [_4,_18];
_26.3 = (-9827_i16) as u64;
_2 = '\u{ee81a}';
_23.fld3 = -_25.fld0;
_28 = _19 as isize;
_26.2 = _3 as usize;
_21 = _17.3;
_26.1.2 = core::ptr::addr_of_mut!(_28);
_17.1 = core::ptr::addr_of!(_9);
_2 = '\u{704da}';
_6.0.0 = core::ptr::addr_of_mut!(_28);
_33 = _2;
_29 = [(-3871811206924340293_i64),(-7835640050439767255_i64),5121778636595708216_i64,(-1516875745890507944_i64),(-326011516867087272_i64)];
_1 = !_15;
_19 = -_23.fld5;
_2 = _33;
match _27 {
0 => bb8,
1 => bb2,
2 => bb4,
3 => bb12,
416894084 => bb14,
_ => bb13
}
}
bb12 = {
_10 = !_4;
_5 = (-19_i8);
RET = !_9;
_12 = (-997725144_i32) as u32;
_17.1 = core::ptr::addr_of!(_9);
_14 = (-4532093914886650523_i64) as u64;
_22.0 = _19;
_22.0 = _8;
_22.0 = (-30820_i16) as f64;
_3 = 4715_u16 | 10764_u16;
_17.3 = [_4,_4];
_14 = _7;
_13 = [26163_i16,(-18709_i16),(-23053_i16),(-22599_i16),(-18242_i16)];
_4 = _18 % 17045672506294183183_usize;
_7 = _14 | _14;
_4 = _10 >> _7;
_12 = _3 as u32;
_3 = _4 as u16;
_8 = _19 + _19;
_23.fld1 = [(-30164_i16),(-6372_i16),23828_i16,(-7296_i16),25545_i16];
_23.fld5 = _19;
_20 = _1;
_18 = _10 * _4;
_12 = 1802429090_i32 as u32;
_1 = !_20;
_23.fld2 = !_4;
_14 = _7 / 3329148507858019336_u64;
_1 = _4 <= _4;
Goto(bb9)
}
bb13 = {
_23.fld4 = [(-637828688_i32),1619702399_i32,1093352551_i32];
_22 = (_19,);
_2 = '\u{efb32}';
_19 = _8 + _8;
_9 = _17.2;
_26.4.0 = core::ptr::addr_of_mut!(_28);
_24 = _9 as f32;
_23.fld1 = [(-1558_i16),(-21322_i16),16424_i16,(-10599_i16),12356_i16];
_26.4.0 = core::ptr::addr_of_mut!(_28);
_22.0 = -_23.fld5;
_26.2 = 89_u8 as usize;
_29 = [(-25695080873013672_i64),(-8092683453845901765_i64),(-437241055010453079_i64),5040360231951120156_i64,(-8980150372656536896_i64)];
_23.fld1 = [27063_i16,26520_i16,12090_i16,(-9507_i16),(-30857_i16)];
_17.0.0 = core::ptr::addr_of_mut!(_28);
_22.0 = -_19;
_19 = _8 + _22.0;
_25 = Adt55 { fld0: _5 };
_24 = _18 as f32;
_32 = -_19;
_17.2 = _9;
_6.0.0 = core::ptr::addr_of_mut!(_28);
_9 = _17.2;
match _25.fld0 {
0 => bb2,
340282366920938463463374607431768211437 => bb11,
_ => bb10
}
}
bb14 = {
_22 = (_19,);
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(0_usize, 21_usize, Move(_21), 27_usize, Move(_27), 7_usize, Move(_7), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(0_usize, 15_usize, Move(_15), 9_usize, Move(_9), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(0_usize, 5_usize, Move(_5), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: usize,mut _2: usize,mut _3: usize,mut _4: bool,mut _5: i8,mut _6: usize,mut _7: bool,mut _8: usize,mut _9: bool,mut _10: u128,mut _11: i8,mut _12: u128,mut _13: bool,mut _14: char) -> u64 {
mir! {
type RET = u64;
let _15: isize;
let _16: isize;
let _17: i8;
let _18: bool;
let _19: i64;
let _20: [u32; 5];
let _21: char;
let _22: [i16; 4];
let _23: Adt50;
let _24: f32;
let _25: bool;
let _26: [isize; 2];
let _27: [i16; 5];
let _28: Adt60;
let _29: isize;
let _30: bool;
let _31: Adt62;
let _32: isize;
let _33: isize;
let _34: [u64; 1];
let _35: i64;
let _36: Adt55;
let _37: u64;
let _38: ();
let _39: ();
{
_9 = !_4;
RET = 3698035162663464146_u64;
_7 = _4;
_6 = !_3;
_13 = _9 | _7;
RET = 206_u8 as u64;
_13 = _7;
_7 = _9;
RET = 11260472210929074164_u64 >> _12;
_12 = _10 * _10;
_12 = _10;
_1 = _14 as usize;
_3 = !_6;
RET = _14 as u64;
_3 = !_1;
_2 = _11 as usize;
_14 = '\u{727c6}';
_15 = _5 as isize;
_11 = -_5;
_9 = !_13;
Goto(bb1)
}
bb1 = {
_7 = _13 & _13;
_17 = !_11;
_18 = _7 < _13;
_5 = _11;
RET = 3072549711247393369_u64 + 14931990535804544251_u64;
_2 = !_1;
_21 = _14;
_2 = _6 | _6;
_19 = (-4358065294995669351_i64);
_13 = !_18;
_4 = !_18;
_2 = _3;
_19 = !(-4947611063389822061_i64);
_21 = _14;
_3 = !_8;
RET = 5805599388641886711_u64 | 10881589535331615795_u64;
_11 = _21 as i8;
_18 = !_13;
_20 = [1740689230_u32,495293292_u32,2109453566_u32,4135346331_u32,2017711177_u32];
_16 = _15 * _15;
_23.fld3.1 = _12 as u16;
_24 = _16 as f32;
Goto(bb2)
}
bb2 = {
_26 = [_16,_16];
_26 = [_16,_15];
RET = !11632985561546316953_u64;
RET = 6698818304328735129_u64 | 6072128929569904100_u64;
_4 = _7 > _13;
_12 = _23.fld3.1 as u128;
_2 = _3;
_18 = _9;
_23.fld3.2 = (-1694438908_i32);
_4 = _6 < _6;
_4 = _19 >= _19;
_23.fld0 = _13;
_17 = -_5;
_11 = !_17;
_14 = _21;
match _8 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
6691969473386610268 => bb11,
_ => bb10
}
}
bb3 = {
_7 = _13 & _13;
_17 = !_11;
_18 = _7 < _13;
_5 = _11;
RET = 3072549711247393369_u64 + 14931990535804544251_u64;
_2 = !_1;
_21 = _14;
_2 = _6 | _6;
_19 = (-4358065294995669351_i64);
_13 = !_18;
_4 = !_18;
_2 = _3;
_19 = !(-4947611063389822061_i64);
_21 = _14;
_3 = !_8;
RET = 5805599388641886711_u64 | 10881589535331615795_u64;
_11 = _21 as i8;
_18 = !_13;
_20 = [1740689230_u32,495293292_u32,2109453566_u32,4135346331_u32,2017711177_u32];
_16 = _15 * _15;
_23.fld3.1 = _12 as u16;
_24 = _16 as f32;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_11 = _5;
_11 = _17 >> _6;
RET = 8136974435266617615_u64 & 7349958964012773165_u64;
_15 = 7694113262162127400_u64 as isize;
_10 = _12 + _12;
Call(_10 = core::intrinsics::bswap(_12), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_24 = 18433_i16 as f32;
_23.fld3.1 = !21870_u16;
_27 = [6090_i16,(-4496_i16),10303_i16,(-2478_i16),(-24998_i16)];
_21 = _14;
_14 = _21;
_23.fld3.2 = _18 as i32;
_12 = _10 << _1;
_12 = _10;
_6 = _3 >> _10;
RET = !6565122878754571341_u64;
_25 = _23.fld0;
_10 = !_12;
_8 = _6 & _6;
_19 = -5731770737596428219_i64;
_28.fld2.fld0 = core::ptr::addr_of_mut!(_15);
_28.fld0.fld3.2 = 85030755_u32 as i32;
_23.fld1 = _14;
_27 = [16133_i16,23159_i16,16943_i16,29641_i16,(-12180_i16)];
_7 = !_23.fld0;
_17 = _5;
_22 = [(-16025_i16),(-29097_i16),(-14745_i16),7677_i16];
RET = _23.fld3.2 as u64;
_28.fld2.fld2 = _1 & _6;
_13 = _6 != _2;
Call(_28.fld2.fld1 = fn2(_23.fld1, _25, _1, _23.fld3.2, _21, _17, _10, _18, _18), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_20 = [2993776312_u32,361574284_u32,174050626_u32,2232307564_u32,3494060029_u32];
_28.fld2.fld1 = [29710_i16,27994_i16,11862_i16,(-20814_i16),(-3561_i16)];
_6 = _28.fld2.fld2;
RET = 16172696084109836202_u64;
_1 = _8;
_6 = _28.fld2.fld2;
_28.fld0.fld3.0 = core::ptr::addr_of_mut!(_16);
_23.fld2 = core::ptr::addr_of!(_28.fld1);
_28.fld0.fld3 = (_28.fld2.fld0, _23.fld3.1, _23.fld3.2);
_7 = _28.fld2.fld2 != _28.fld2.fld2;
RET = _28.fld0.fld3.2 as u64;
_20 = [2798293445_u32,2591192573_u32,2663590607_u32,1275478809_u32,2706489420_u32];
_23.fld3.0 = _28.fld0.fld3.0;
_13 = !_25;
_31.fld2.0 = _24;
_23.fld0 = _25;
_21 = _23.fld1;
_3 = !_8;
Goto(bb14)
}
bb14 = {
_16 = (-16545_i16) as isize;
_23.fld3.0 = _28.fld0.fld3.0;
_31.fld4 = [_23.fld1,_23.fld1,_21];
_32 = _15;
_23.fld4 = core::ptr::addr_of!(_28.fld2.fld5);
_12 = _10;
_28.fld2.fld2 = _1;
_33 = 87937711031283543461701378086724069689_i128 as isize;
_23.fld0 = _25 & _25;
_10 = _12;
_29 = _32 << _28.fld2.fld2;
_23.fld4 = core::ptr::addr_of!(_28.fld2.fld5);
_1 = _29 as usize;
_16 = 34_u8 as isize;
_31.fld0 = 7862047504113976687_u64;
_15 = _29 ^ _29;
_23.fld2 = core::ptr::addr_of!(_28.fld1);
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(1_usize, 10_usize, Move(_10), 13_usize, Move(_13), 4_usize, Move(_4), 27_usize, Move(_27)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(1_usize, 1_usize, Move(_1), 14_usize, Move(_14), 19_usize, Move(_19), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(1_usize, 18_usize, Move(_18), 17_usize, Move(_17), 15_usize, Move(_15), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(1_usize, 16_usize, Move(_16), 3_usize, Move(_3), 39_usize, _39, 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: char,mut _2: bool,mut _3: usize,mut _4: i32,mut _5: char,mut _6: i8,mut _7: u128,mut _8: bool,mut _9: bool) -> [i16; 5] {
mir! {
type RET = [i16; 5];
let _10: (usize, (char, *const u8, bool, i8), f64);
let _11: u8;
let _12: i64;
let _13: bool;
let _14: isize;
let _15: isize;
let _16: Adt57;
let _17: isize;
let _18: isize;
let _19: [isize; 2];
let _20: (f32,);
let _21: Adt57;
let _22: [isize; 2];
let _23: [u64; 1];
let _24: [i16; 5];
let _25: [char; 3];
let _26: Adt55;
let _27: [i64; 5];
let _28: [char; 3];
let _29: ();
let _30: ();
{
RET = [(-9093_i16),22710_i16,(-9883_i16),(-12311_i16),(-1825_i16)];
_3 = 2714_u16 as usize;
RET = [9494_i16,(-5564_i16),21519_i16,(-9888_i16),(-14986_i16)];
_8 = _2;
_9 = !_2;
RET = [19911_i16,901_i16,(-16279_i16),(-18028_i16),30551_i16];
_2 = !_8;
_7 = !244424162976743744619745017284629406194_u128;
_2 = _8 < _8;
_8 = _9 >= _2;
_5 = _1;
_1 = _5;
RET = [(-27836_i16),25172_i16,19849_i16,13671_i16,2631_i16];
_4 = 1532511521_i32;
_10.1.3 = _6;
_1 = _5;
_8 = !_2;
_3 = _6 as usize;
Call(_10 = fn3(_3, _1, _5, _1, _9, _6, _4, _5, _1, _9, _4, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = _10.1.0;
_5 = _1;
_9 = _8 > _8;
_11 = 8_u8 - 165_u8;
RET = [20634_i16,(-8391_i16),(-1555_i16),(-25402_i16),21224_i16];
_6 = -_10.1.3;
_12 = 32677_i16 as i64;
_1 = _10.1.0;
_11 = 2755865515541624902_u64 as u8;
_5 = _10.1.0;
_6 = -_10.1.3;
_10.2 = (-9223372036854775808_isize) as f64;
RET = [(-30440_i16),(-1466_i16),(-9194_i16),(-10198_i16),(-22911_i16)];
_12 = _10.0 as i64;
_8 = _10.1.2 >= _2;
_2 = _8;
_7 = 54797213795641985885426760339011573489_u128 | 148032278813335565415584300299699910854_u128;
match _4 {
1532511521 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_13 = _9;
_15 = 5215_u16 as isize;
_10.2 = 2072515994_u32 as f64;
_12 = 2120649836443437540_i64 << _10.0;
_6 = !_10.1.3;
RET = [(-11639_i16),10122_i16,13782_i16,(-4530_i16),16465_i16];
_13 = _9;
match _4 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
1532511521 => bb8,
_ => bb7
}
}
bb4 = {
Return()
}
bb5 = {
_5 = _10.1.0;
_5 = _1;
_9 = _8 > _8;
_11 = 8_u8 - 165_u8;
RET = [20634_i16,(-8391_i16),(-1555_i16),(-25402_i16),21224_i16];
_6 = -_10.1.3;
_12 = 32677_i16 as i64;
_1 = _10.1.0;
_11 = 2755865515541624902_u64 as u8;
_5 = _10.1.0;
_6 = -_10.1.3;
_10.2 = (-9223372036854775808_isize) as f64;
RET = [(-30440_i16),(-1466_i16),(-9194_i16),(-10198_i16),(-22911_i16)];
_12 = _10.0 as i64;
_8 = _10.1.2 >= _2;
_2 = _8;
_7 = 54797213795641985885426760339011573489_u128 | 148032278813335565415584300299699910854_u128;
match _4 {
1532511521 => bb3,
_ => bb2
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = _9 as i64;
_10.1.2 = _9 <= _8;
_16.fld0 = [_4,_4,_4];
_7 = _4 as u128;
_2 = _13 <= _13;
_1 = _5;
_10.1.2 = _13;
_10.0 = _3 - _3;
_15 = 9223372036854775807_isize << _10.1.3;
_10.1.0 = _1;
_15 = -9223372036854775807_isize;
_10.2 = _4 as f64;
_13 = !_2;
_13 = _10.1.2;
_14 = _12 as isize;
_3 = _10.0;
RET = [(-1922_i16),17452_i16,28301_i16,16471_i16,(-32338_i16)];
_6 = _10.1.3 + _10.1.3;
_7 = !207170250347033254896011911661620335803_u128;
_18 = _14 | _14;
Goto(bb9)
}
bb9 = {
_3 = !_10.0;
_8 = _13;
_6 = _10.1.3 >> _12;
_13 = !_10.1.2;
_10.2 = _12 as f64;
_1 = _10.1.0;
match _4 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb8,
5 => bb10,
1532511521 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
_5 = _10.1.0;
_5 = _1;
_9 = _8 > _8;
_11 = 8_u8 - 165_u8;
RET = [20634_i16,(-8391_i16),(-1555_i16),(-25402_i16),21224_i16];
_6 = -_10.1.3;
_12 = 32677_i16 as i64;
_1 = _10.1.0;
_11 = 2755865515541624902_u64 as u8;
_5 = _10.1.0;
_6 = -_10.1.3;
_10.2 = (-9223372036854775808_isize) as f64;
RET = [(-30440_i16),(-1466_i16),(-9194_i16),(-10198_i16),(-22911_i16)];
_12 = _10.0 as i64;
_8 = _10.1.2 >= _2;
_2 = _8;
_7 = 54797213795641985885426760339011573489_u128 | 148032278813335565415584300299699910854_u128;
match _4 {
1532511521 => bb3,
_ => bb2
}
}
bb12 = {
_21 = Adt57 { fld0: _16.fld0 };
_22 = [_18,_18];
_10.1.0 = _5;
_17 = !_18;
_23 = [6717294812439022510_u64];
_10.0 = _3;
_24 = [14527_i16,(-18375_i16),650_i16,10816_i16,5179_i16];
Goto(bb13)
}
bb13 = {
_16 = Adt57 { fld0: _21.fld0 };
RET = _24;
Goto(bb14)
}
bb14 = {
_15 = -_17;
_7 = _6 as u128;
RET = _24;
_2 = _9 != _10.1.2;
_22 = [_17,_18];
_11 = _7 as u8;
_25 = [_5,_5,_5];
_18 = !_17;
_25 = [_10.1.0,_10.1.0,_5];
_17 = !_15;
_14 = _18;
RET = [31622_i16,(-8280_i16),(-1974_i16),27141_i16,(-30815_i16)];
_16 = Adt57 { fld0: _21.fld0 };
_19 = [_14,_17];
_14 = _6 as isize;
_26.fld0 = _6 & _6;
_13 = !_2;
_10.1.2 = !_2;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(2_usize, 12_usize, Move(_12), 17_usize, Move(_17), 5_usize, Move(_5), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(2_usize, 6_usize, Move(_6), 9_usize, Move(_9), 3_usize, Move(_3), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(2_usize, 23_usize, Move(_23), 18_usize, Move(_18), 30_usize, _30, 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: usize,mut _2: char,mut _3: char,mut _4: char,mut _5: bool,mut _6: i8,mut _7: i32,mut _8: char,mut _9: char,mut _10: bool,mut _11: i32,mut _12: char,mut _13: char) -> (usize, (char, *const u8, bool, i8), f64) {
mir! {
type RET = (usize, (char, *const u8, bool, i8), f64);
let _14: Adt61;
let _15: bool;
let _16: usize;
let _17: u128;
let _18: [i16; 4];
let _19: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _20: *mut (*mut isize,);
let _21: [isize; 2];
let _22: isize;
let _23: [i16; 4];
let _24: [u32; 5];
let _25: [isize; 2];
let _26: bool;
let _27: i16;
let _28: f32;
let _29: isize;
let _30: [u64; 1];
let _31: Adt49;
let _32: ([u32; 5],);
let _33: f64;
let _34: [u64; 1];
let _35: f64;
let _36: u128;
let _37: bool;
let _38: (f64,);
let _39: [u32; 5];
let _40: usize;
let _41: [u32; 5];
let _42: f32;
let _43: [usize; 2];
let _44: i8;
let _45: [char; 3];
let _46: usize;
let _47: Adt57;
let _48: [isize; 2];
let _49: u8;
let _50: (*mut isize,);
let _51: isize;
let _52: [i64; 5];
let _53: [char; 3];
let _54: Adt53;
let _55: f64;
let _56: Adt54;
let _57: f64;
let _58: f32;
let _59: char;
let _60: ();
let _61: ();
{
_11 = _7;
_14.fld4.fld2.fld3 = _6;
_14.fld1.fld0 = -_6;
_14.fld2.fld0.fld3.1 = 34456_u16 / 6594_u16;
RET.1.2 = _10;
_14.fld2.fld2.fld5 = 265444825539386350550188843678007981327_u128 as f64;
RET.1.3 = _6 ^ _6;
_14.fld2.fld0.fld1 = _12;
_5 = _10;
_3 = _13;
_14.fld2.fld2.fld1 = [22046_i16,4890_i16,(-8774_i16),(-7800_i16),(-22259_i16)];
RET.2 = _14.fld2.fld2.fld5 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012918164536056315_f64;
_14.fld4.fld1 = (-39242323223185054213821837134826490989_i128);
Call(RET.1.2 = fn4(_4, _12, _6, _14.fld2.fld0.fld3.1, _1, _7, _14.fld2.fld0.fld3.1, _9, _14.fld2.fld0.fld1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14.fld2.fld2.fld1 = [12713_i16,(-13181_i16),15403_i16,5254_i16,27320_i16];
_14.fld4.fld2.fld5 = _14.fld2.fld2.fld5;
_4 = _13;
_14.fld3 = [2291474193_u32,2281641568_u32,1487422685_u32,982701755_u32,1035136451_u32];
_14.fld2.fld2.fld4 = [_11,_11,_11];
RET.2 = _14.fld2.fld2.fld5 - _14.fld2.fld2.fld5;
_14.fld4.fld0 = 14976540006762162706_u64;
_16 = _1 | _1;
_18 = [1688_i16,(-18431_i16),(-30806_i16),(-28679_i16)];
Goto(bb2)
}
bb2 = {
_3 = _13;
match _14.fld4.fld0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
14976540006762162706 => bb8,
_ => bb7
}
}
bb3 = {
_14.fld2.fld2.fld1 = [12713_i16,(-13181_i16),15403_i16,5254_i16,27320_i16];
_14.fld4.fld2.fld5 = _14.fld2.fld2.fld5;
_4 = _13;
_14.fld3 = [2291474193_u32,2281641568_u32,1487422685_u32,982701755_u32,1035136451_u32];
_14.fld2.fld2.fld4 = [_11,_11,_11];
RET.2 = _14.fld2.fld2.fld5 - _14.fld2.fld2.fld5;
_14.fld4.fld0 = 14976540006762162706_u64;
_16 = _1 | _1;
_18 = [1688_i16,(-18431_i16),(-30806_i16),(-28679_i16)];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_14.fld4.fld2.fld1 = [1888_i16,(-17457_i16),(-27636_i16),(-30204_i16),(-6960_i16)];
_14.fld1 = Adt55 { fld0: _6 };
RET.1.0 = _8;
_7 = 95_isize as i32;
_14.fld2.fld0.fld2 = core::ptr::addr_of!(_14.fld2.fld1);
_14.fld4.fld1 = 34798585543247257973517081078340738267_i128;
_14.fld2.fld2.fld3 = !_14.fld1.fld0;
_14.fld2.fld0.fld3.2 = _7;
_9 = _3;
_8 = _14.fld2.fld0.fld1;
_14.fld2.fld0.fld2 = core::ptr::addr_of!(_14.fld2.fld1);
RET.0 = !_16;
_14.fld4.fld2.fld2 = _1 / 7_usize;
_17 = 145191798931946001391250466881554820962_u128 >> _14.fld2.fld0.fld3.1;
_14.fld4.fld2.fld0 = core::ptr::addr_of_mut!(_22);
_14.fld2.fld2.fld1 = [6697_i16,14718_i16,(-25341_i16),9726_i16,4346_i16];
RET.0 = _16 << _14.fld1.fld0;
_14.fld4.fld2.fld4 = [_11,_7,_11];
_19.1.1 = _5 <= _10;
_20 = core::ptr::addr_of_mut!(_19.4);
_14.fld4.fld2.fld4 = _14.fld2.fld2.fld4;
_14.fld2.fld0.fld4 = core::ptr::addr_of!(_14.fld4.fld2.fld5);
_14.fld4.fld2.fld2 = _16 | _16;
_14.fld4.fld2.fld0 = core::ptr::addr_of_mut!(_22);
Goto(bb9)
}
bb9 = {
(*_20).0 = core::ptr::addr_of_mut!(_22);
_14.fld2.fld2.fld1 = [(-8729_i16),(-1464_i16),(-5749_i16),(-20630_i16),17158_i16];
_21 = [9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb10)
}
bb10 = {
_14.fld2.fld0.fld3.0 = core::ptr::addr_of_mut!(_22);
RET.1.0 = _14.fld2.fld0.fld1;
_16 = _9 as usize;
_14.fld4.fld2.fld5 = (-21697_i16) as f64;
_14.fld2.fld0.fld0 = _5 ^ _10;
_17 = _14.fld4.fld0 as u128;
_14.fld2.fld2.fld0 = core::ptr::addr_of_mut!(_22);
_11 = (-1567275424806683871_i64) as i32;
_19.3 = !_14.fld4.fld0;
_19.1.2 = core::ptr::addr_of_mut!(_22);
RET.2 = _14.fld2.fld2.fld5 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001168990090919984_f64;
_19.2 = !_14.fld4.fld2.fld2;
_20 = core::ptr::addr_of_mut!(_14.fld0.0);
_11 = _7 & _7;
_14.fld4.fld2.fld0 = core::ptr::addr_of_mut!(_22);
_24 = [1458502016_u32,2524653966_u32,2463771901_u32,17782062_u32,560151874_u32];
_14.fld2.fld0.fld1 = _2;
_19.1.0 = core::ptr::addr_of_mut!(_21);
_10 = _19.1.1;
_17 = 120449257835382035303836058164925847547_u128 / 61032598720513950581526307299828042126_u128;
match _14.fld4.fld1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
34798585543247257973517081078340738267 => bb12,
_ => bb11
}
}
bb11 = {
_14.fld4.fld2.fld1 = [1888_i16,(-17457_i16),(-27636_i16),(-30204_i16),(-6960_i16)];
_14.fld1 = Adt55 { fld0: _6 };
RET.1.0 = _8;
_7 = 95_isize as i32;
_14.fld2.fld0.fld2 = core::ptr::addr_of!(_14.fld2.fld1);
_14.fld4.fld1 = 34798585543247257973517081078340738267_i128;
_14.fld2.fld2.fld3 = !_14.fld1.fld0;
_14.fld2.fld0.fld3.2 = _7;
_9 = _3;
_8 = _14.fld2.fld0.fld1;
_14.fld2.fld0.fld2 = core::ptr::addr_of!(_14.fld2.fld1);
RET.0 = !_16;
_14.fld4.fld2.fld2 = _1 / 7_usize;
_17 = 145191798931946001391250466881554820962_u128 >> _14.fld2.fld0.fld3.1;
_14.fld4.fld2.fld0 = core::ptr::addr_of_mut!(_22);
_14.fld2.fld2.fld1 = [6697_i16,14718_i16,(-25341_i16),9726_i16,4346_i16];
RET.0 = _16 << _14.fld1.fld0;
_14.fld4.fld2.fld4 = [_11,_7,_11];
_19.1.1 = _5 <= _10;
_20 = core::ptr::addr_of_mut!(_19.4);
_14.fld4.fld2.fld4 = _14.fld2.fld2.fld4;
_14.fld2.fld0.fld4 = core::ptr::addr_of!(_14.fld4.fld2.fld5);
_14.fld4.fld2.fld2 = _16 | _16;
_14.fld4.fld2.fld0 = core::ptr::addr_of_mut!(_22);
Goto(bb9)
}
bb12 = {
_10 = _19.1.1;
RET.1.3 = !_14.fld1.fld0;
_8 = _3;
_14.fld1 = Adt55 { fld0: _6 };
(*_20).0 = core::ptr::addr_of_mut!(_22);
_19.3 = _14.fld4.fld2.fld2 as u64;
_6 = -_14.fld4.fld2.fld3;
RET.1.0 = _2;
_23 = [14858_i16,3731_i16,25117_i16,(-29987_i16)];
_32.0 = [1239939649_u32,3964706180_u32,1899725299_u32,832691650_u32,417167455_u32];
_18 = [(-16049_i16),(-6225_i16),(-16009_i16),(-10003_i16)];
_9 = _2;
_29 = _1 as isize;
_14.fld2.fld2.fld0 = core::ptr::addr_of_mut!(_29);
_10 = _19.1.1 >= _14.fld2.fld0.fld0;
_19.2 = _1;
Goto(bb13)
}
bb13 = {
RET.1.0 = _2;
_14.fld4.fld2.fld1 = [4883_i16,19652_i16,(-14345_i16),(-3822_i16),(-5369_i16)];
_3 = _4;
_22 = _29 | _29;
_19.4.0 = core::ptr::addr_of_mut!(_29);
_23 = _18;
_20 = core::ptr::addr_of_mut!(_19.4);
_19.4 = (_14.fld2.fld2.fld0,);
(*_20) = (_19.1.2,);
RET.1.3 = _14.fld1.fld0;
_14.fld2.fld0.fld0 = _5;
_31.fld2 = (_14.fld4.fld2.fld5,);
_36 = _17 << _14.fld4.fld2.fld3;
_14.fld0.0.0 = (*_20).0;
_31.fld0 = [_8,_8,_2];
_31.fld1.1.0 = _19.1.0;
RET.0 = _14.fld4.fld2.fld2 % 8269477909698759976_usize;
_14.fld2.fld0.fld3 = (_19.4.0, 62609_u16, _11);
_24 = _14.fld3;
_14.fld4.fld2.fld1 = [12608_i16,21916_i16,(-4748_i16),(-1021_i16),(-2638_i16)];
_26 = _14.fld4.fld1 == _14.fld4.fld1;
_38.0 = _14.fld2.fld0.fld3.1 as f64;
_14.fld2.fld2 = Move(_14.fld4.fld2);
_31.fld2 = (_38.0,);
_20 = core::ptr::addr_of_mut!(_31.fld1.4);
Goto(bb14)
}
bb14 = {
_27 = 30700_i16;
_36 = 172_u8 as u128;
_26 = _19.1.1 == _10;
_33 = _11 as f64;
_15 = !_10;
(*_20) = (_14.fld0.0.0,);
_6 = _26 as i8;
_14.fld2.fld0.fld3.2 = 5673619387568243172_i64 as i32;
_16 = 111_u8 as usize;
_14.fld1.fld0 = -_6;
_40 = _16;
_10 = _5 != _26;
_24 = [1022355164_u32,1553473034_u32,795290495_u32,4191911420_u32,2833661564_u32];
(*_20).0 = core::ptr::addr_of_mut!(_29);
_19.3 = _14.fld4.fld0 * _14.fld4.fld0;
_19.1 = (_31.fld1.1.0, _10, _14.fld2.fld2.fld0);
_17 = _36 % 117799231073007116678979657896404076581_u128;
_26 = _19.1.1 == _19.1.1;
_19.1.0 = _31.fld1.1.0;
_17 = !_36;
_14.fld2.fld0.fld3.1 = !48206_u16;
_14.fld0.0 = (*_20);
_34 = [_14.fld4.fld0];
RET.2 = _31.fld2.0;
Goto(bb15)
}
bb15 = {
_41 = [1267509968_u32,566026971_u32,1629372194_u32,3683148167_u32,3011796706_u32];
_29 = _14.fld2.fld0.fld3.1 as isize;
RET.1.0 = _8;
_43 = [_14.fld2.fld2.fld2,_14.fld2.fld2.fld2];
_31.fld1.4.0 = core::ptr::addr_of_mut!(_29);
_14.fld4.fld0 = _19.3 >> _6;
_31.fld1.1.2 = core::ptr::addr_of_mut!(_29);
_19.3 = _14.fld4.fld0 / 167929213629917200_u64;
_13 = _14.fld2.fld0.fld1;
_14.fld1 = Adt55 { fld0: _6 };
_32.0 = [3511332006_u32,2309223207_u32,1757290496_u32,1683029975_u32,29789181_u32];
_14.fld2.fld0.fld3 = ((*_20).0, 50266_u16, _11);
(*_20).0 = core::ptr::addr_of_mut!(_22);
_39 = _14.fld3;
Goto(bb16)
}
bb16 = {
_14.fld2.fld2.fld4 = [_7,_11,_7];
_47.fld0 = _14.fld2.fld2.fld4;
_14.fld2.fld1 = core::ptr::addr_of!(_43);
_14.fld4 = Adt58 { fld0: _19.3,fld1: 99085711409444172914250938619397349596_i128,fld2: Move(_14.fld2.fld2) };
_36 = _29 as u128;
_30 = [_14.fld4.fld0];
_14.fld2.fld0.fld3.2 = _11 & _7;
_31.fld1.1.1 = _26;
_32.0 = _41;
_44 = _6;
_31.fld1.1.1 = _19.3 < _19.3;
_31.fld1.0 = core::ptr::addr_of!(_49);
_42 = _1 as f32;
_34 = [_14.fld4.fld0];
_31.fld1.4 = (_19.1.2,);
_14.fld2.fld0.fld3.0 = core::ptr::addr_of_mut!(_22);
_3 = _13;
match _14.fld4.fld1 {
0 => bb4,
1 => bb2,
2 => bb7,
3 => bb17,
4 => bb18,
5 => bb19,
99085711409444172914250938619397349596 => bb21,
_ => bb20
}
}
bb17 = {
Return()
}
bb18 = {
_14.fld2.fld0.fld3.0 = core::ptr::addr_of_mut!(_22);
RET.1.0 = _14.fld2.fld0.fld1;
_16 = _9 as usize;
_14.fld4.fld2.fld5 = (-21697_i16) as f64;
_14.fld2.fld0.fld0 = _5 ^ _10;
_17 = _14.fld4.fld0 as u128;
_14.fld2.fld2.fld0 = core::ptr::addr_of_mut!(_22);
_11 = (-1567275424806683871_i64) as i32;
_19.3 = !_14.fld4.fld0;
_19.1.2 = core::ptr::addr_of_mut!(_22);
RET.2 = _14.fld2.fld2.fld5 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001168990090919984_f64;
_19.2 = !_14.fld4.fld2.fld2;
_20 = core::ptr::addr_of_mut!(_14.fld0.0);
_11 = _7 & _7;
_14.fld4.fld2.fld0 = core::ptr::addr_of_mut!(_22);
_24 = [1458502016_u32,2524653966_u32,2463771901_u32,17782062_u32,560151874_u32];
_14.fld2.fld0.fld1 = _2;
_19.1.0 = core::ptr::addr_of_mut!(_21);
_10 = _19.1.1;
_17 = 120449257835382035303836058164925847547_u128 / 61032598720513950581526307299828042126_u128;
match _14.fld4.fld1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
34798585543247257973517081078340738267 => bb12,
_ => bb11
}
}
bb19 = {
Return()
}
bb20 = {
_10 = _19.1.1;
RET.1.3 = !_14.fld1.fld0;
_8 = _3;
_14.fld1 = Adt55 { fld0: _6 };
(*_20).0 = core::ptr::addr_of_mut!(_22);
_19.3 = _14.fld4.fld2.fld2 as u64;
_6 = -_14.fld4.fld2.fld3;
RET.1.0 = _2;
_23 = [14858_i16,3731_i16,25117_i16,(-29987_i16)];
_32.0 = [1239939649_u32,3964706180_u32,1899725299_u32,832691650_u32,417167455_u32];
_18 = [(-16049_i16),(-6225_i16),(-16009_i16),(-10003_i16)];
_9 = _2;
_29 = _1 as isize;
_14.fld2.fld2.fld0 = core::ptr::addr_of_mut!(_29);
_10 = _19.1.1 >= _14.fld2.fld0.fld0;
_19.2 = _1;
Goto(bb13)
}
bb21 = {
_10 = _31.fld2.0 >= _31.fld2.0;
_31.fld1.2 = !_19.2;
_21 = [_29,_22];
_31.fld3 = core::ptr::addr_of_mut!(_31.fld1.1.1);
_14.fld2.fld0.fld3.0 = core::ptr::addr_of_mut!(_29);
_51 = -_22;
_31.fld0 = [_8,_2,_13];
_45 = _31.fld0;
_40 = !_1;
match _14.fld4.fld1 {
0 => bb17,
1 => bb22,
99085711409444172914250938619397349596 => bb24,
_ => bb23
}
}
bb22 = {
(*_20).0 = core::ptr::addr_of_mut!(_22);
_14.fld2.fld2.fld1 = [(-8729_i16),(-1464_i16),(-5749_i16),(-20630_i16),17158_i16];
_21 = [9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb10)
}
bb23 = {
RET.1.0 = _2;
_14.fld4.fld2.fld1 = [4883_i16,19652_i16,(-14345_i16),(-3822_i16),(-5369_i16)];
_3 = _4;
_22 = _29 | _29;
_19.4.0 = core::ptr::addr_of_mut!(_29);
_23 = _18;
_20 = core::ptr::addr_of_mut!(_19.4);
_19.4 = (_14.fld2.fld2.fld0,);
(*_20) = (_19.1.2,);
RET.1.3 = _14.fld1.fld0;
_14.fld2.fld0.fld0 = _5;
_31.fld2 = (_14.fld4.fld2.fld5,);
_36 = _17 << _14.fld4.fld2.fld3;
_14.fld0.0.0 = (*_20).0;
_31.fld0 = [_8,_8,_2];
_31.fld1.1.0 = _19.1.0;
RET.0 = _14.fld4.fld2.fld2 % 8269477909698759976_usize;
_14.fld2.fld0.fld3 = (_19.4.0, 62609_u16, _11);
_24 = _14.fld3;
_14.fld4.fld2.fld1 = [12608_i16,21916_i16,(-4748_i16),(-1021_i16),(-2638_i16)];
_26 = _14.fld4.fld1 == _14.fld4.fld1;
_38.0 = _14.fld2.fld0.fld3.1 as f64;
_14.fld2.fld2 = Move(_14.fld4.fld2);
_31.fld2 = (_38.0,);
_20 = core::ptr::addr_of_mut!(_31.fld1.4);
Goto(bb14)
}
bb24 = {
RET.1.3 = _27 as i8;
Goto(bb25)
}
bb25 = {
_51 = _42 as isize;
_25 = _21;
_14.fld3 = _39;
_38.0 = (-6686373311641051568_i64) as f64;
_49 = 37_u8 ^ 181_u8;
_5 = !_15;
_31.fld1.1.0 = _19.1.0;
_19.4 = _14.fld0.0;
(*_20) = (_14.fld0.0.0,);
_54.fld2 = (_19.1.2,);
_37 = _26 & _19.1.1;
_56.fld2 = _14.fld1.fld0 as isize;
_46 = !_1;
_39 = [2654732490_u32,1336112553_u32,3312729513_u32,1491151426_u32,490783119_u32];
_54.fld2 = (_31.fld1.1.2,);
_54.fld0 = core::ptr::addr_of!(_14.fld2.fld1);
RET.1.1 = core::ptr::addr_of!(_49);
_5 = _19.1.1 | _37;
_50 = (_19.1.2,);
_49 = _3 as u8;
_58 = _14.fld1.fld0 as f32;
_19 = (_31.fld1.0, _31.fld1.1, _1, _14.fld4.fld0, (*_20));
_23 = [_27,_27,_27,_27];
(*_20).0 = _14.fld2.fld0.fld3.0;
_14.fld2.fld0.fld4 = core::ptr::addr_of!(_57);
_31.fld2.0 = _33;
Goto(bb26)
}
bb26 = {
Call(_60 = dump_var(3_usize, 13_usize, Move(_13), 27_usize, Move(_27), 17_usize, Move(_17), 6_usize, Move(_6)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_60 = dump_var(3_usize, 37_usize, Move(_37), 8_usize, Move(_8), 32_usize, Move(_32), 1_usize, Move(_1)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_60 = dump_var(3_usize, 24_usize, Move(_24), 9_usize, Move(_9), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_60 = dump_var(3_usize, 29_usize, Move(_29), 15_usize, Move(_15), 34_usize, Move(_34), 46_usize, Move(_46)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_60 = dump_var(3_usize, 36_usize, Move(_36), 3_usize, Move(_3), 7_usize, Move(_7), 61_usize, _61), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: char,mut _2: char,mut _3: i8,mut _4: u16,mut _5: usize,mut _6: i32,mut _7: u16,mut _8: char,mut _9: char) -> bool {
mir! {
type RET = bool;
let _10: [u64; 1];
let _11: f32;
let _12: f32;
let _13: [u32; 5];
let _14: *const *const [usize; 2];
let _15: isize;
let _16: [i16; 5];
let _17: [i16; 5];
let _18: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _19: isize;
let _20: Adt62;
let _21: Adt51;
let _22: char;
let _23: char;
let _24: ([u32; 5],);
let _25: *const u128;
let _26: i16;
let _27: ((*mut isize,),);
let _28: isize;
let _29: isize;
let _30: bool;
let _31: ([u32; 5],);
let _32: isize;
let _33: Adt64;
let _34: [u32; 5];
let _35: isize;
let _36: Adt62;
let _37: Adt55;
let _38: i32;
let _39: char;
let _40: ();
let _41: ();
{
RET = false;
_4 = !_7;
_1 = _8;
_4 = _7;
_9 = _8;
_1 = _9;
_6 = 1508950401_i32 | (-1842329136_i32);
_1 = _8;
_12 = _5 as f32;
_10 = [9773307777558157328_u64];
_1 = _8;
_3 = (-40_i8) << _6;
_11 = _12 * _12;
Call(_2 = fn5(_9, _5, _8, _9, _8, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = (-844564910_i32) << _3;
_2 = _9;
_12 = -_11;
_4 = _7 >> _3;
_10 = [12312663769509752528_u64];
_15 = _5 as isize;
_10 = [37542827440745737_u64];
_16 = [16940_i16,3489_i16,(-5092_i16),(-21601_i16),(-11435_i16)];
_4 = _7 % 27596_u16;
_12 = _11;
Goto(bb2)
}
bb2 = {
RET = !true;
_18.1.1 = true;
_18.1.2 = core::ptr::addr_of_mut!(_15);
_10 = [12393269736938700972_u64];
_9 = _8;
_17 = [6785_i16,16386_i16,17080_i16,4172_i16,(-26982_i16)];
_1 = _9;
_18.4.0 = core::ptr::addr_of_mut!(_15);
_3 = (-94_i8);
_5 = 1258715941104759608_usize;
_18.2 = !_5;
_13 = [3965157721_u32,1984374612_u32,3036882675_u32,372806722_u32,3613153054_u32];
_6 = !(-135403517_i32);
_18.4 = (_18.1.2,);
_19 = -_15;
_7 = !_4;
_2 = _9;
_17 = [25098_i16,(-8195_i16),27348_i16,(-7077_i16),18530_i16];
_9 = _8;
_3 = (-91_i8);
_10 = [15469180038692539601_u64];
_11 = -_12;
_3 = (-40_i8) + 59_i8;
Goto(bb3)
}
bb3 = {
_13 = [2479191732_u32,915804294_u32,3141372288_u32,176300069_u32,4270788217_u32];
_20.fld5 = [_6,_6,_6];
_7 = _4;
_6 = 137431256032209287001118538755384535621_u128 as i32;
_20.fld2.0 = _12;
_21.fld3 = core::ptr::addr_of_mut!(_18.4);
_23 = _2;
_21.fld1 = [(-26382_i16),(-24535_i16),(-14825_i16),28303_i16];
_18.4 = (_18.1.2,);
_20.fld2 = (_11,);
Goto(bb4)
}
bb4 = {
_1 = _2;
_21.fld4 = !1068004232878454252_u64;
_20.fld2.0 = _12;
_21.fld2 = [3302799629_u32,3521873801_u32,1533366856_u32,2406504903_u32,3594766426_u32];
_18.1.2 = core::ptr::addr_of_mut!(_15);
_22 = _23;
_20.fld1 = [(-18601_i16),3153_i16,5602_i16,(-18371_i16)];
_20.fld0 = _21.fld4;
_21.fld3 = core::ptr::addr_of_mut!(_18.4);
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
1258715941104759608 => bb9,
_ => bb8
}
}
bb5 = {
_13 = [2479191732_u32,915804294_u32,3141372288_u32,176300069_u32,4270788217_u32];
_20.fld5 = [_6,_6,_6];
_7 = _4;
_6 = 137431256032209287001118538755384535621_u128 as i32;
_20.fld2.0 = _12;
_21.fld3 = core::ptr::addr_of_mut!(_18.4);
_23 = _2;
_21.fld1 = [(-26382_i16),(-24535_i16),(-14825_i16),28303_i16];
_18.4 = (_18.1.2,);
_20.fld2 = (_11,);
Goto(bb4)
}
bb6 = {
RET = !true;
_18.1.1 = true;
_18.1.2 = core::ptr::addr_of_mut!(_15);
_10 = [12393269736938700972_u64];
_9 = _8;
_17 = [6785_i16,16386_i16,17080_i16,4172_i16,(-26982_i16)];
_1 = _9;
_18.4.0 = core::ptr::addr_of_mut!(_15);
_3 = (-94_i8);
_5 = 1258715941104759608_usize;
_18.2 = !_5;
_13 = [3965157721_u32,1984374612_u32,3036882675_u32,372806722_u32,3613153054_u32];
_6 = !(-135403517_i32);
_18.4 = (_18.1.2,);
_19 = -_15;
_7 = !_4;
_2 = _9;
_17 = [25098_i16,(-8195_i16),27348_i16,(-7077_i16),18530_i16];
_9 = _8;
_3 = (-91_i8);
_10 = [15469180038692539601_u64];
_11 = -_12;
_3 = (-40_i8) + 59_i8;
Goto(bb3)
}
bb7 = {
_6 = (-844564910_i32) << _3;
_2 = _9;
_12 = -_11;
_4 = _7 >> _3;
_10 = [12312663769509752528_u64];
_15 = _5 as isize;
_10 = [37542827440745737_u64];
_16 = [16940_i16,3489_i16,(-5092_i16),(-21601_i16),(-11435_i16)];
_4 = _7 % 27596_u16;
_12 = _11;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_9 = _23;
_24 = (_21.fld2,);
_21.fld4 = _20.fld0 / 10690283072144518635_u64;
_18.4.0 = _18.1.2;
_20.fld0 = _21.fld4;
_22 = _9;
_18.3 = _21.fld4;
_22 = _2;
_7 = !_4;
_18.3 = _21.fld4 << _4;
_6 = !(-1359401445_i32);
_16 = [23377_i16,17206_i16,(-23303_i16),10998_i16,26760_i16];
_18.4 = (_18.1.2,);
match _5 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
1258715941104759608 => bb10,
_ => bb5
}
}
bb10 = {
_18.4 = (_18.1.2,);
_20.fld2.0 = _11;
_4 = _3 as u16;
_20.fld3 = [29811_i16,(-2629_i16),(-963_i16),1918_i16,(-17664_i16)];
_18.4.0 = core::ptr::addr_of_mut!(_15);
_3 = 87_i8 - 13_i8;
_18.1.2 = core::ptr::addr_of_mut!(_19);
_21.fld7 = [9041380734058150399_i64,6863625703324511666_i64,(-3819850767251381859_i64),(-8775323451398201252_i64),(-2140560274888918185_i64)];
_13 = [1143404271_u32,3026508062_u32,2957746302_u32,561129470_u32,2258420229_u32];
_19 = _15 ^ _15;
_20.fld4 = [_1,_8,_2];
_17 = _20.fld3;
_21.fld1 = [19389_i16,(-30358_i16),11362_i16,(-22318_i16)];
_27 = (_18.4,);
_21.fld2 = [138990066_u32,2433177234_u32,2083881909_u32,2948941562_u32,1518065361_u32];
_20.fld1 = [(-5204_i16),29786_i16,18918_i16,(-21366_i16)];
_26 = (-20244_i16);
_20.fld4 = [_9,_9,_1];
match _26 {
0 => bb8,
1 => bb3,
340282366920938463463374607431768191212 => bb12,
_ => bb11
}
}
bb11 = {
RET = !true;
_18.1.1 = true;
_18.1.2 = core::ptr::addr_of_mut!(_15);
_10 = [12393269736938700972_u64];
_9 = _8;
_17 = [6785_i16,16386_i16,17080_i16,4172_i16,(-26982_i16)];
_1 = _9;
_18.4.0 = core::ptr::addr_of_mut!(_15);
_3 = (-94_i8);
_5 = 1258715941104759608_usize;
_18.2 = !_5;
_13 = [3965157721_u32,1984374612_u32,3036882675_u32,372806722_u32,3613153054_u32];
_6 = !(-135403517_i32);
_18.4 = (_18.1.2,);
_19 = -_15;
_7 = !_4;
_2 = _9;
_17 = [25098_i16,(-8195_i16),27348_i16,(-7077_i16),18530_i16];
_9 = _8;
_3 = (-91_i8);
_10 = [15469180038692539601_u64];
_11 = -_12;
_3 = (-40_i8) + 59_i8;
Goto(bb3)
}
bb12 = {
_21.fld6 = _5 << _19;
_19 = _15 >> _21.fld6;
_18.2 = _21.fld6;
_11 = -_12;
_20.fld2 = (_12,);
_30 = !_18.1.1;
_5 = _21.fld6;
_7 = !_4;
_15 = !_19;
_20.fld5 = [_6,_6,_6];
_31.0 = _24.0;
_27 = (_18.4,);
_8 = _22;
Goto(bb13)
}
bb13 = {
_18.1.2 = core::ptr::addr_of_mut!(_19);
RET = _18.1.1;
_27.0.0 = core::ptr::addr_of_mut!(_19);
_29 = -_19;
match _26 {
340282366920938463463374607431768191212 => bb14,
_ => bb2
}
}
bb14 = {
_7 = _4 - _4;
_15 = _29 | _19;
_15 = _19 & _19;
_34 = _31.0;
_8 = _2;
_31.0 = [246854787_u32,3758538724_u32,3683118489_u32,315160169_u32,1641322745_u32];
_5 = _18.2;
_37 = Adt55 { fld0: _3 };
_35 = _15 ^ _15;
_36.fld2.0 = -_20.fld2.0;
_33.fld0.2 = !_21.fld6;
_27 = (_18.4,);
_20.fld2 = (_12,);
_36.fld1 = _20.fld1;
_7 = _4;
_27 = (_18.4,);
_24 = _31;
_5 = !_21.fld6;
_34 = [2413106472_u32,4192118909_u32,617848916_u32,858419279_u32,3143623699_u32];
_38 = _6 * _6;
RET = _30 | _18.1.1;
_20.fld0 = _18.3;
_21.fld4 = _20.fld0;
_18.1.1 = _30;
_27.0 = (_18.4.0,);
_18.4.0 = _27.0.0;
_20.fld0 = !_21.fld4;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(4_usize, 4_usize, Move(_4), 2_usize, Move(_2), 26_usize, Move(_26), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(4_usize, 22_usize, Move(_22), 34_usize, Move(_34), 7_usize, Move(_7), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(4_usize, 10_usize, Move(_10), 23_usize, Move(_23), 19_usize, Move(_19), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: char,mut _2: usize,mut _3: char,mut _4: char,mut _5: char,mut _6: char) -> char {
mir! {
type RET = char;
let _7: [i16; 5];
let _8: isize;
let _9: (f64,);
let _10: f64;
let _11: char;
let _12: *const u8;
let _13: [i16; 5];
let _14: Adt62;
let _15: isize;
let _16: Adt64;
let _17: usize;
let _18: [u64; 1];
let _19: i8;
let _20: bool;
let _21: f64;
let _22: [i32; 3];
let _23: *mut isize;
let _24: (*mut isize, u16, i32);
let _25: [i16; 5];
let _26: u64;
let _27: bool;
let _28: Adt57;
let _29: Adt57;
let _30: [usize; 2];
let _31: u16;
let _32: char;
let _33: usize;
let _34: ([u32; 5],);
let _35: u128;
let _36: (f64,);
let _37: u64;
let _38: [i32; 3];
let _39: i64;
let _40: [u32; 5];
let _41: [isize; 2];
let _42: Adt48;
let _43: *const u128;
let _44: bool;
let _45: isize;
let _46: Adt63;
let _47: isize;
let _48: isize;
let _49: *mut isize;
let _50: [i64; 5];
let _51: [i16; 4];
let _52: Adt60;
let _53: u32;
let _54: [i16; 4];
let _55: ();
let _56: ();
{
RET = _5;
_6 = _1;
RET = _5;
_2 = !1426933193389229360_usize;
RET = _5;
_6 = _3;
_2 = 1130491635_u32 as usize;
RET = _4;
_3 = _1;
RET = _1;
_1 = _3;
_6 = _1;
_1 = _5;
_5 = _3;
Call(_5 = fn6(_1, _6, _6, _6, _1, _4, _3, _6, _1, _3, _1, _4, _1, _1, _6, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = [(-28227_i16),14656_i16,4058_i16,(-16060_i16),912_i16];
_8 = -(-127_isize);
_1 = _5;
_1 = _3;
RET = _1;
_8 = 9223372036854775807_isize - (-9223372036854775808_isize);
_2 = 6369822937282210968_usize << _8;
RET = _5;
_6 = _4;
_3 = _6;
_8 = (-9223372036854775808_isize);
_9.0 = 15070_i16 as f64;
_1 = _6;
_10 = 307973446009970122244268204243906838358_u128 as f64;
_9.0 = (-141072189993142194777324266222525850650_i128) as f64;
_8 = 154777259934153507565015744088530951622_u128 as isize;
_7 = [6280_i16,31295_i16,3213_i16,(-12650_i16),(-30758_i16)];
_3 = _6;
_5 = _4;
_6 = _3;
_9.0 = _8 as f64;
RET = _6;
_10 = _9.0;
Goto(bb2)
}
bb2 = {
_1 = _6;
_3 = _4;
_2 = _8 as usize;
RET = _3;
_9.0 = _10;
_3 = _5;
_1 = _6;
_5 = _4;
_8 = 9223372036854775807_isize ^ 9223372036854775807_isize;
_10 = _9.0;
_3 = _1;
_3 = _4;
_4 = _6;
_3 = _1;
RET = _4;
_10 = -_9.0;
_14.fld0 = 17230281594736050093_u64;
_13 = [(-5989_i16),(-18891_i16),28237_i16,(-20847_i16),(-14390_i16)];
_14.fld1 = [(-4704_i16),(-15785_i16),26057_i16,(-31629_i16)];
_9.0 = -_10;
_3 = _5;
_9.0 = -_10;
_8 = 9223372036854775807_isize;
_14.fld6 = -_9.0;
Goto(bb3)
}
bb3 = {
_16.fld0.3 = _14.fld0;
RET = _6;
_16.fld2 = [17609_i16,27719_i16,(-14002_i16),8805_i16,15825_i16];
_14.fld2.0 = 4068554996_u32 as f32;
_16.fld3.1 = !true;
_3 = _4;
_14.fld5 = [393208405_i32,787673990_i32,(-806817228_i32)];
_14.fld3 = [(-14186_i16),20945_i16,29777_i16,(-19991_i16),(-13790_i16)];
_22 = [(-1087574450_i32),290339468_i32,(-1448400416_i32)];
match _16.fld0.3 {
17230281594736050093 => bb4,
_ => bb2
}
}
bb4 = {
RET = _1;
_9 = (_10,);
_5 = _3;
_21 = (-6328_i16) as f64;
_25 = [11792_i16,(-3765_i16),(-14893_i16),4240_i16,4296_i16];
_23 = core::ptr::addr_of_mut!(_8);
_15 = (*_23) | _8;
_2 = !5_usize;
(*_23) = _15 ^ _15;
_4 = _1;
_4 = _1;
_8 = -_15;
_16.fld3.1 = !false;
_9 = (_21,);
_24.1 = 19431_u16;
_24 = (_23, 47543_u16, (-80584595_i32));
_17 = _2;
_17 = _2 << _8;
_4 = _3;
_16.fld3.2 = _24.0;
_24.0 = core::ptr::addr_of_mut!(_15);
Goto(bb5)
}
bb5 = {
_29 = Adt57 { fld0: _14.fld5 };
_16.fld0.3 = _14.fld0;
_29.fld0 = _14.fld5;
_8 = _15;
_7 = [19805_i16,29681_i16,(-9446_i16),29023_i16,7431_i16];
_16.fld0.1.2 = core::ptr::addr_of_mut!(_8);
_20 = !_16.fld3.1;
_14.fld5 = [_24.2,_24.2,_24.2];
_14.fld5 = [_24.2,_24.2,_24.2];
_16.fld3.1 = !_20;
_11 = _4;
_16.fld3.1 = !_20;
_20 = _16.fld3.1 | _16.fld3.1;
_15 = _8;
_18 = [_16.fld0.3];
Goto(bb6)
}
bb6 = {
_17 = _2;
_13 = [(-24812_i16),8866_i16,(-24608_i16),(-5370_i16),13895_i16];
_28.fld0 = _29.fld0;
_25 = [30375_i16,11315_i16,10569_i16,(-25864_i16),18908_i16];
_14.fld3 = [32416_i16,18321_i16,10866_i16,13288_i16,(-8244_i16)];
_14.fld0 = _16.fld0.3;
_11 = _1;
_32 = _5;
Goto(bb7)
}
bb7 = {
_16.fld0.1.2 = core::ptr::addr_of_mut!(_15);
RET = _1;
_16.fld0.1.1 = _14.fld6 > _21;
_20 = _16.fld0.1.1;
_26 = _14.fld0;
_3 = _1;
_23 = core::ptr::addr_of_mut!((*_23));
_14.fld2.0 = 93_i8 as f32;
_8 = !_15;
_16.fld0.2 = _17;
Goto(bb8)
}
bb8 = {
_29 = Adt57 { fld0: _14.fld5 };
_3 = _5;
_30 = [_2,_17];
_16.fld3.2 = core::ptr::addr_of_mut!((*_23));
_18 = [_26];
_34.0 = [3119980036_u32,1225098248_u32,887822196_u32,1328801482_u32,3556323170_u32];
_26 = !_14.fld0;
_14.fld0 = _16.fld0.3 / 5100516315162945985_u64;
_9 = (_14.fld6,);
_36.0 = 16268_i16 as f64;
_32 = _6;
_31 = _24.1 & _24.1;
_24.2 = _4 as i32;
_27 = _16.fld0.1.1;
_35 = !100084899623578977710720745519086675838_u128;
_16.fld0.4 = (_24.0,);
_17 = _2;
_33 = _17 - _2;
_37 = !_26;
Goto(bb9)
}
bb9 = {
_38 = [_24.2,_24.2,_24.2];
_23 = core::ptr::addr_of_mut!((*_23));
_14.fld2.0 = _24.2 as f32;
_21 = _9.0 - _36.0;
match _24.1 {
0 => bb7,
1 => bb6,
2 => bb3,
47543 => bb10,
_ => bb4
}
}
bb10 = {
_34.0 = [1376524101_u32,4223570636_u32,574212841_u32,3590932157_u32,3999810452_u32];
_28 = _29;
_39 = -8380009146424280264_i64;
_31 = _24.1;
_10 = _21;
_42.fld1 = _6;
_17 = _2 & _16.fld0.2;
_14.fld6 = _10;
_16.fld3.1 = !_16.fld0.1.1;
_4 = _3;
_24.1 = _31;
_37 = !_14.fld0;
_43 = core::ptr::addr_of!(_35);
match _31 {
0 => bb1,
1 => bb11,
47543 => bb13,
_ => bb12
}
}
bb11 = {
_38 = [_24.2,_24.2,_24.2];
_23 = core::ptr::addr_of_mut!((*_23));
_14.fld2.0 = _24.2 as f32;
_21 = _9.0 - _36.0;
match _24.1 {
0 => bb7,
1 => bb6,
2 => bb3,
47543 => bb10,
_ => bb4
}
}
bb12 = {
_17 = _2;
_13 = [(-24812_i16),8866_i16,(-24608_i16),(-5370_i16),13895_i16];
_28.fld0 = _29.fld0;
_25 = [30375_i16,11315_i16,10569_i16,(-25864_i16),18908_i16];
_14.fld3 = [32416_i16,18321_i16,10866_i16,13288_i16,(-8244_i16)];
_14.fld0 = _16.fld0.3;
_11 = _1;
_32 = _5;
Goto(bb7)
}
bb13 = {
_19 = (-2_i8) ^ 47_i8;
_42.fld3 = _24.1 as i64;
_2 = _16.fld0.2;
_16.fld1 = core::ptr::addr_of_mut!(_41);
_42.fld2.0 = _2 >> _33;
_8 = -_15;
_29 = Adt57 { fld0: _22 };
match _24.1 {
0 => bb3,
1 => bb14,
2 => bb15,
3 => bb16,
47543 => bb18,
_ => bb17
}
}
bb14 = {
_17 = _2;
_13 = [(-24812_i16),8866_i16,(-24608_i16),(-5370_i16),13895_i16];
_28.fld0 = _29.fld0;
_25 = [30375_i16,11315_i16,10569_i16,(-25864_i16),18908_i16];
_14.fld3 = [32416_i16,18321_i16,10866_i16,13288_i16,(-8244_i16)];
_14.fld0 = _16.fld0.3;
_11 = _1;
_32 = _5;
Goto(bb7)
}
bb15 = {
_17 = _2;
_13 = [(-24812_i16),8866_i16,(-24608_i16),(-5370_i16),13895_i16];
_28.fld0 = _29.fld0;
_25 = [30375_i16,11315_i16,10569_i16,(-25864_i16),18908_i16];
_14.fld3 = [32416_i16,18321_i16,10866_i16,13288_i16,(-8244_i16)];
_14.fld0 = _16.fld0.3;
_11 = _1;
_32 = _5;
Goto(bb7)
}
bb16 = {
_34.0 = [1376524101_u32,4223570636_u32,574212841_u32,3590932157_u32,3999810452_u32];
_28 = _29;
_39 = -8380009146424280264_i64;
_31 = _24.1;
_10 = _21;
_42.fld1 = _6;
_17 = _2 & _16.fld0.2;
_14.fld6 = _10;
_16.fld3.1 = !_16.fld0.1.1;
_4 = _3;
_24.1 = _31;
_37 = !_14.fld0;
_43 = core::ptr::addr_of!(_35);
match _31 {
0 => bb1,
1 => bb11,
47543 => bb13,
_ => bb12
}
}
bb17 = {
_16.fld0.3 = _14.fld0;
RET = _6;
_16.fld2 = [17609_i16,27719_i16,(-14002_i16),8805_i16,15825_i16];
_14.fld2.0 = 4068554996_u32 as f32;
_16.fld3.1 = !true;
_3 = _4;
_14.fld5 = [393208405_i32,787673990_i32,(-806817228_i32)];
_14.fld3 = [(-14186_i16),20945_i16,29777_i16,(-19991_i16),(-13790_i16)];
_22 = [(-1087574450_i32),290339468_i32,(-1448400416_i32)];
match _16.fld0.3 {
17230281594736050093 => bb4,
_ => bb2
}
}
bb18 = {
_30 = [_17,_17];
_26 = _16.fld0.3 / 4974940545478488797_u64;
_52.fld2.fld4 = [_24.2,_24.2,_24.2];
_16.fld0.3 = _14.fld0;
_14.fld1 = [(-15164_i16),3452_i16,(-7294_i16),(-17813_i16)];
_16.fld0.3 = _3 as u64;
_25 = _14.fld3;
_46.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_47);
_22 = [_24.2,_24.2,_24.2];
_22 = [_24.2,_24.2,_24.2];
Goto(bb19)
}
bb19 = {
Call(_55 = dump_var(5_usize, 5_usize, Move(_5), 33_usize, Move(_33), 37_usize, Move(_37), 30_usize, Move(_30)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_55 = dump_var(5_usize, 13_usize, Move(_13), 2_usize, Move(_2), 26_usize, Move(_26), 27_usize, Move(_27)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_55 = dump_var(5_usize, 31_usize, Move(_31), 32_usize, Move(_32), 39_usize, Move(_39), 3_usize, Move(_3)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_55 = dump_var(5_usize, 22_usize, Move(_22), 38_usize, Move(_38), 56_usize, _56, 56_usize, _56), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: char,mut _2: char,mut _3: char,mut _4: char,mut _5: char,mut _6: char,mut _7: char,mut _8: char,mut _9: char,mut _10: char,mut _11: char,mut _12: char,mut _13: char,mut _14: char,mut _15: char,mut _16: char) -> char {
mir! {
type RET = char;
let _17: [char; 3];
let _18: [u32; 5];
let _19: (usize, (char, *const u8, bool, i8), f64);
let _20: bool;
let _21: [char; 3];
let _22: [usize; 2];
let _23: f64;
let _24: bool;
let _25: (char, *const u8, bool, i8);
let _26: Adt57;
let _27: Adt57;
let _28: (*const *const [usize; 2], (usize, (char, *const u8, bool, i8), f64), u8, (f32,));
let _29: bool;
let _30: i128;
let _31: isize;
let _32: bool;
let _33: i8;
let _34: bool;
let _35: isize;
let _36: usize;
let _37: ((*mut isize,),);
let _38: [i64; 5];
let _39: Adt55;
let _40: bool;
let _41: [i16; 4];
let _42: i128;
let _43: [i16; 5];
let _44: f32;
let _45: ((*mut isize,),);
let _46: u64;
let _47: [u32; 5];
let _48: bool;
let _49: *const *const [usize; 2];
let _50: usize;
let _51: char;
let _52: Adt62;
let _53: f64;
let _54: (f32,);
let _55: isize;
let _56: Adt64;
let _57: ([u32; 5],);
let _58: [i32; 3];
let _59: (f32,);
let _60: [i32; 3];
let _61: i16;
let _62: bool;
let _63: ();
let _64: ();
{
_6 = _1;
_5 = _15;
_17 = [_16,_3,_12];
_7 = _1;
RET = _7;
_17 = [_7,_2,_4];
_1 = _14;
_7 = _12;
_12 = _4;
_3 = _16;
_16 = _11;
_14 = _16;
RET = _5;
_19.1.2 = !true;
_6 = _2;
Goto(bb1)
}
bb1 = {
_15 = _4;
_19.2 = (-15902_i16) as f64;
_19.1.2 = _14 >= _5;
_19.0 = 1_usize + 7_usize;
_20 = !_19.1.2;
RET = _11;
_10 = _13;
_12 = _6;
RET = _9;
_19.1.0 = _14;
_7 = _10;
RET = _14;
_2 = _5;
RET = _1;
_15 = _2;
_19.1.2 = !_20;
_14 = _3;
_11 = _3;
RET = _14;
RET = _2;
_21 = _17;
_16 = _6;
_19.1.3 = 68_u8 as i8;
Goto(bb2)
}
bb2 = {
_22 = [_19.0,_19.0];
_18 = [3956039945_u32,2100100128_u32,82190194_u32,1874109802_u32,3497096725_u32];
_13 = _7;
_14 = _7;
_4 = _11;
_8 = _6;
_10 = _12;
_19.2 = _19.0 as f64;
Goto(bb3)
}
bb3 = {
_19.0 = 42163712805603609057647650533763291679_i128 as usize;
_15 = _8;
_25.3 = _19.1.3;
_13 = _5;
_14 = _8;
_16 = _19.1.0;
_16 = _14;
_27.fld0 = [237717186_i32,(-10726885_i32),1622242547_i32];
_6 = _4;
RET = _19.1.0;
_23 = 11872245368593979536_u64 as f64;
_24 = _19.1.2 > _19.1.2;
_19.0 = !16188570554607091011_usize;
_28.3.0 = 3326358367_u32 as f32;
_6 = _11;
_7 = _13;
Goto(bb4)
}
bb4 = {
_29 = _24;
_19.2 = _23;
_3 = _10;
_28.3.0 = 423219075_i32 as f32;
_1 = _9;
_9 = _7;
_26 = Adt57 { fld0: _27.fld0 };
_10 = _12;
_13 = _3;
_17 = [_2,_3,_15];
_11 = _10;
_15 = _7;
_25.0 = _4;
_19.2 = _23 / f64::INFINITY;
_4 = _12;
_18 = [3596721803_u32,441170176_u32,1645318654_u32,1150747791_u32,2779041530_u32];
_28.1.1.1 = core::ptr::addr_of!(_28.2);
_28.1.1.3 = !_19.1.3;
_28.3.0 = 1892439551762304328_i64 as f32;
Call(_25.1 = core::intrinsics::arith_offset(_28.1.1.1, 51_isize), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_18 = [2937330908_u32,3709731234_u32,1840267433_u32,993456380_u32,2449881509_u32];
_29 = _24;
_12 = _9;
_22 = [_19.0,_19.0];
_21 = [_4,_6,_11];
_19.2 = _23;
_21 = [_25.0,_6,_6];
_33 = _19.1.3 << _19.0;
_28.1.1.2 = !_20;
_1 = _10;
_30 = 17356694189022212451_u64 as i128;
_19.2 = _23;
_19.1.1 = core::ptr::addr_of!(_28.2);
_7 = _1;
_28.2 = !125_u8;
RET = _9;
_6 = _15;
_3 = _6;
_28.3.0 = (-14017_i16) as f32;
_7 = _1;
_28.1.1 = (_8, _19.1.1, _29, _25.3);
_32 = _5 <= _9;
_32 = _19.1.2;
Goto(bb6)
}
bb6 = {
_22 = [_19.0,_19.0];
_28.1.0 = !_19.0;
_3 = _7;
_33 = _19.1.3 | _28.1.1.3;
_31 = !97_isize;
_35 = _16 as isize;
_35 = !_31;
_25.2 = _28.1.0 != _28.1.0;
_29 = _1 < _8;
_32 = _24;
_25 = (_19.1.0, _19.1.1, _24, _19.1.3);
_13 = _9;
_16 = _14;
_25.0 = _2;
_3 = _28.1.1.0;
_1 = _12;
_7 = _28.1.1.0;
_22 = [_19.0,_28.1.0];
_1 = _12;
Call(RET = fn7(_31, _2, _16, _28.1.1.2, _15, _31, _19.1.2, _26.fld0, _20, _28.2, _19.1, _1, _19, _3, _15), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_37.0.0 = core::ptr::addr_of_mut!(_35);
_14 = _3;
_15 = _19.1.0;
_28.1.2 = -_23;
_35 = 317269972657530114887926810959937074902_u128 as isize;
Goto(bb8)
}
bb8 = {
_19.1.2 = !_24;
_7 = _19.1.0;
_28.1 = _19;
_19.1.0 = _11;
_19.1.2 = _28.1.1.2;
_32 = _28.2 >= _28.2;
_28.2 = 152_u8 & 190_u8;
_28.1.1.2 = _29;
_38 = [(-1580500674713763283_i64),7449280857425290711_i64,(-7558034473968035855_i64),1798559632268658041_i64,(-5482045034161960573_i64)];
RET = _8;
_36 = !_19.0;
_38 = [(-4555300561041882957_i64),4050279122417306363_i64,(-5297030469561355182_i64),1643250140658894773_i64,8837908950521276209_i64];
_28.2 = 215_u8 - 170_u8;
_25.3 = _33 * _33;
_28.1.1.3 = _33 >> _35;
_19 = (_36, _28.1.1, _28.1.2);
_13 = _6;
_40 = _24;
Goto(bb9)
}
bb9 = {
_17 = [_19.1.0,_4,_7];
_31 = _35 | _35;
_17 = [_25.0,_8,_5];
_13 = _8;
_28.1.1 = (_8, _19.1.1, _24, _25.3);
_13 = _3;
_27 = Adt57 { fld0: _26.fld0 };
_5 = _6;
_27 = _26;
_16 = _8;
_19.0 = _28.1.0;
_36 = _28.1.0 - _28.1.0;
_38 = [(-1789959746854296211_i64),5161130903001303176_i64,1866909569466885775_i64,7946444434704659382_i64,(-1789153247609920067_i64)];
_34 = _24;
_26 = Adt57 { fld0: _27.fld0 };
_43 = [(-32687_i16),25985_i16,30446_i16,32262_i16,(-7801_i16)];
_28.1 = (_36, _25, _23);
_28.1.0 = _36 % 5_usize;
_39.fld0 = _28.1.1.3 ^ _25.3;
_42 = _30;
_44 = _19.2 as f32;
RET = _10;
_5 = _9;
_3 = _11;
_11 = _9;
_8 = _4;
Call(_25.1 = core::intrinsics::arith_offset(_28.1.1.1, (-9223372036854775808_isize)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_43 = [(-17443_i16),13837_i16,28747_i16,28727_i16,19315_i16];
_18 = [2639513929_u32,984788090_u32,3115363388_u32,2973801221_u32,2763033890_u32];
_22 = [_36,_36];
_40 = _32;
Goto(bb11)
}
bb11 = {
_28.1 = (_19.0, _25, _23);
_44 = -_28.3.0;
_23 = _33 as f64;
RET = _12;
_42 = -_30;
_19 = _28.1;
_41 = [(-30156_i16),24702_i16,(-30467_i16),(-19870_i16)];
_44 = (-474290167_i32) as f32;
_17 = [_28.1.1.0,_28.1.1.0,_13];
_46 = 4030575921311352468_u64 ^ 2862717612818430287_u64;
_19.1.2 = _24;
_28.1.1.3 = 218886558370344971537774151127283396235_u128 as i8;
RET = _28.1.1.0;
_45.0.0 = core::ptr::addr_of_mut!(_35);
_39 = Adt55 { fld0: _19.1.3 };
_27.fld0 = _26.fld0;
_19.1 = _25;
_6 = _16;
_19.1.3 = -_33;
_1 = _11;
_5 = _16;
_4 = _19.1.0;
_25.3 = (-1083_i16) as i8;
_47 = [2672339222_u32,4156575243_u32,2580495890_u32,1239798327_u32,3932045724_u32];
_27 = Adt57 { fld0: _26.fld0 };
_3 = _10;
Goto(bb12)
}
bb12 = {
_28.1.2 = -_23;
_45.0.0 = _37.0.0;
_28.3.0 = -_44;
_52 = Adt62 { fld0: _46,fld1: _41,fld2: _28.3,fld3: _43,fld4: _17,fld5: _26.fld0,fld6: _23 };
_39 = Adt55 { fld0: _19.1.3 };
_27 = Adt57 { fld0: _26.fld0 };
_25 = _28.1.1;
_52.fld5 = [1579333017_i32,(-1938118936_i32),244328657_i32];
_52.fld3 = [(-25174_i16),(-29379_i16),8959_i16,(-4061_i16),(-776_i16)];
_7 = _11;
_37.0.0 = core::ptr::addr_of_mut!(_35);
_19.1.3 = !_25.3;
_51 = _4;
_45.0.0 = core::ptr::addr_of_mut!(_35);
_16 = _9;
_42 = -_30;
_52.fld4 = [_11,_12,_3];
_19 = (_28.1.0, _25, _52.fld6);
_27 = _26;
_24 = _32;
_53 = (-631479126_i32) as f64;
_16 = _25.0;
_37 = (_45.0,);
_25.3 = _39.fld0;
_19 = (_36, _28.1.1, _53);
_39 = Adt55 { fld0: _28.1.1.3 };
_29 = !_34;
Goto(bb13)
}
bb13 = {
_52.fld4 = [_7,_7,_25.0];
_5 = _4;
_50 = _36;
_21 = [_8,_12,_16];
_51 = _16;
_55 = _35;
_19.1.2 = _32;
_28.1.1.3 = _33 << _46;
_19.2 = _23 * _28.1.2;
_53 = _19.2;
RET = _3;
_7 = _4;
_51 = _15;
_4 = _6;
_52.fld2 = (_44,);
_9 = _7;
_56.fld0.1.1 = _3 >= _3;
_28.1 = _19;
_54 = _52.fld2;
_45.0 = (_37.0.0,);
_17 = _52.fld4;
Goto(bb14)
}
bb14 = {
_28.3 = (_54.0,);
_52.fld1 = [(-29126_i16),(-13076_i16),(-6948_i16),552_i16];
_28.1.1.0 = _15;
_21 = _17;
_33 = -_19.1.3;
_59.0 = -_28.3.0;
_36 = 138939227_u32 as usize;
_20 = _29;
_28.1.1.3 = !_33;
Goto(bb15)
}
bb15 = {
Call(_63 = dump_var(6_usize, 21_usize, Move(_21), 51_usize, Move(_51), 20_usize, Move(_20), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_63 = dump_var(6_usize, 18_usize, Move(_18), 35_usize, Move(_35), 30_usize, Move(_30), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_63 = dump_var(6_usize, 15_usize, Move(_15), 9_usize, Move(_9), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_63 = dump_var(6_usize, 5_usize, Move(_5), 17_usize, Move(_17), 29_usize, Move(_29), 32_usize, Move(_32)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_63 = dump_var(6_usize, 22_usize, Move(_22), 47_usize, Move(_47), 36_usize, Move(_36), 6_usize, Move(_6)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: char,mut _3: char,mut _4: bool,mut _5: char,mut _6: isize,mut _7: bool,mut _8: [i32; 3],mut _9: bool,mut _10: u8,mut _11: (char, *const u8, bool, i8),mut _12: char,mut _13: (usize, (char, *const u8, bool, i8), f64),mut _14: char,mut _15: char) -> char {
mir! {
type RET = char;
let _16: (f64,);
let _17: [u32; 5];
let _18: Adt51;
let _19: u64;
let _20: Adt57;
let _21: [isize; 2];
let _22: isize;
let _23: [char; 3];
let _24: i8;
let _25: (f64,);
let _26: [usize; 2];
let _27: [i16; 5];
let _28: (f64,);
let _29: u32;
let _30: isize;
let _31: *mut (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _32: (f64,);
let _33: Adt57;
let _34: *mut (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _35: Adt51;
let _36: i64;
let _37: Adt57;
let _38: char;
let _39: usize;
let _40: *mut (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _41: i16;
let _42: Adt63;
let _43: i16;
let _44: f64;
let _45: isize;
let _46: Adt51;
let _47: Adt62;
let _48: [u32; 5];
let _49: isize;
let _50: f64;
let _51: char;
let _52: i128;
let _53: f32;
let _54: isize;
let _55: f64;
let _56: ();
let _57: ();
{
_4 = !_13.1.2;
_5 = _13.1.0;
_16 = (_13.2,);
_13.1 = (_12, _11.1, _11.2, _11.3);
_14 = _13.1.0;
_2 = _15;
_8 = [1692863159_i32,545464630_i32,(-992012441_i32)];
_11.0 = _13.1.0;
_13.1.0 = _11.0;
_3 = _15;
_3 = _15;
RET = _14;
_7 = _9 == _11.2;
RET = _15;
_7 = _11.2;
_5 = _2;
_16.0 = -_13.2;
_14 = _2;
_11.3 = 44423_u16 as i8;
_13.1.0 = _11.0;
_7 = !_11.2;
_11.1 = core::ptr::addr_of!(_10);
_14 = _15;
Goto(bb1)
}
bb1 = {
_13.1 = (_14, _11.1, _7, _11.3);
_13.2 = _16.0;
_4 = _3 != _3;
_9 = _11.2;
_13.1 = (_15, _11.1, _11.2, _11.3);
_18.fld2 = [2634233730_u32,3355161897_u32,520225666_u32,1364619089_u32,3010271516_u32];
_18.fld5 = [_3,_13.1.0,_2];
_11.2 = _4 ^ _4;
_10 = 17_u8;
_13.1.2 = _4;
_2 = _14;
_18.fld6 = _13.0;
_4 = !_9;
_17 = [154877533_u32,4175927116_u32,2669034381_u32,3061649149_u32,3020477863_u32];
_13 = (_18.fld6, _11, _16.0);
_17 = [1313445979_u32,1987146029_u32,2071824663_u32,1552156177_u32,1983936746_u32];
_13.1.3 = _6 as i8;
_18.fld6 = 13962379187702278263_u64 as usize;
Goto(bb2)
}
bb2 = {
_11.2 = !_7;
_18.fld7 = [(-276454160785157745_i64),297046763216430136_i64,5546007783023702530_i64,(-9198311906817920212_i64),6865102905998427710_i64];
_13.2 = -_16.0;
_7 = !_13.1.2;
_13.1 = (_5, _11.1, _9, _11.3);
_11.3 = _13.1.3;
_19 = _9 as u64;
_20 = Adt57 { fld0: _8 };
_11.2 = _4;
_18.fld0 = core::ptr::addr_of_mut!(_21);
_11.0 = _15;
_22 = _1 | _1;
_9 = _7;
_22 = !_6;
_18.fld7 = [(-3231095704818629141_i64),6977982495393868717_i64,(-2032225831933392864_i64),8288282721475638052_i64,1377878157709496274_i64];
_2 = _15;
_12 = _2;
_18.fld4 = _19;
_18.fld7 = [(-8354425876870370961_i64),(-5250441175597796716_i64),95855612795712668_i64,8022560890626588160_i64,(-5914584244119758214_i64)];
_2 = _14;
_11.0 = _3;
_18.fld6 = _13.0;
_9 = _5 != _14;
_18.fld1 = [17668_i16,10205_i16,28857_i16,(-16958_i16)];
_1 = !_22;
_18.fld1 = [4226_i16,11569_i16,(-25334_i16),(-4344_i16)];
_6 = _22 - _1;
_13.1.1 = core::ptr::addr_of!(_10);
Goto(bb3)
}
bb3 = {
_20.fld0 = [1113659018_i32,450119535_i32,244922097_i32];
match _10 {
17 => bb4,
_ => bb1
}
}
bb4 = {
_13.1.2 = _2 == _14;
_25 = _16;
_3 = _12;
_18.fld4 = !_19;
_28.0 = _16.0;
_18.fld6 = 31925_i16 as usize;
_13 = (_18.fld6, _11, _16.0);
_11.2 = _7;
_13.1.1 = _11.1;
_18.fld5 = [_3,_12,_15];
_11.2 = _7 ^ _7;
RET = _3;
_13.1 = _11;
_16 = (_25.0,);
_29 = 759037955_u32;
_18.fld5 = [_5,_13.1.0,_2];
Goto(bb5)
}
bb5 = {
_19 = 16021_i16 as u64;
_27 = [3500_i16,(-24971_i16),24982_i16,29869_i16,3132_i16];
_29 = 2723657321_u32;
_26 = [_13.0,_13.0];
_32.0 = -_25.0;
_24 = _11.3;
_11.3 = !_13.1.3;
_11.2 = _13.1.2;
_2 = _13.1.0;
_13.2 = -_28.0;
_21 = [_22,_6];
RET = _2;
_35.fld4 = _11.3 as u64;
_5 = _15;
_15 = _3;
match _10 {
0 => bb3,
17 => bb6,
_ => bb2
}
}
bb6 = {
_9 = !_13.1.2;
_19 = _35.fld4 / 3481433435029527386_u64;
Goto(bb7)
}
bb7 = {
_23 = [_3,_3,_14];
_2 = _12;
_35.fld7 = _18.fld7;
_25.0 = _28.0 - _13.2;
_13.1.2 = _9;
_39 = _13.0 + _13.0;
_13.2 = _32.0 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001015020554247556_f64;
_18.fld4 = 83368308014941771803886345037785273515_u128 as u64;
_38 = _15;
_12 = _3;
_20.fld0 = _8;
Goto(bb8)
}
bb8 = {
_4 = !_9;
_27 = [(-25162_i16),(-16738_i16),25561_i16,(-15578_i16),27288_i16];
_39 = _13.0;
_28 = _16;
_39 = (-1847060820_i32) as usize;
_33 = _20;
_35.fld5 = [_14,_12,_11.0];
_11.2 = !_7;
_24 = _11.3;
_13.1.1 = core::ptr::addr_of!(_10);
_11.1 = core::ptr::addr_of!(_42.fld0);
_6 = _1;
_42.fld1 = _3;
_24 = -_11.3;
Call(_42.fld3.fld0.fld1 = fn8(_22, _27, _13.2, _10, _29, _42.fld1, _25.0, _9, _26, _13.1.0, _32, _16.0, _26, _6, _38, _6), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_42.fld3.fld2.fld4 = _33.fld0;
_35.fld6 = _13.0;
_42.fld3.fld2.fld4 = [1317247913_i32,1487215207_i32,806896334_i32];
_4 = _13.1.2;
_18.fld7 = _35.fld7;
_10 = 131_u8;
_29 = 2311282425_u32 % 3703293392_u32;
_42.fld2 = -4100792681959922495_i64;
_11.2 = _9 ^ _13.1.2;
_42.fld3.fld0.fld2 = core::ptr::addr_of!(_42.fld3.fld1);
Goto(bb10)
}
bb10 = {
_7 = _25.0 <= _25.0;
_42.fld0 = (-28901_i16) as u8;
_42.fld0 = !_10;
_42.fld3.fld0.fld3.0 = core::ptr::addr_of_mut!(_1);
_36 = !_42.fld2;
_43 = !7577_i16;
_8 = [(-757947433_i32),179612140_i32,270435510_i32];
_36 = 1032509434_i32 as i64;
_42.fld3.fld2.fld5 = _13.2;
_12 = _15;
_46.fld6 = !_35.fld6;
_9 = _11.2 | _11.2;
_27 = [_43,_43,_43,_43,_43];
_22 = -_1;
_9 = _13.1.2;
_14 = _2;
_47.fld5 = [1288768425_i32,1489084708_i32,(-297810821_i32)];
_46.fld1 = [_43,_43,_43,_43];
match _10 {
0 => bb6,
1 => bb7,
2 => bb9,
3 => bb4,
4 => bb11,
131 => bb13,
_ => bb12
}
}
bb11 = {
_13.1 = (_14, _11.1, _7, _11.3);
_13.2 = _16.0;
_4 = _3 != _3;
_9 = _11.2;
_13.1 = (_15, _11.1, _11.2, _11.3);
_18.fld2 = [2634233730_u32,3355161897_u32,520225666_u32,1364619089_u32,3010271516_u32];
_18.fld5 = [_3,_13.1.0,_2];
_11.2 = _4 ^ _4;
_10 = 17_u8;
_13.1.2 = _4;
_2 = _14;
_18.fld6 = _13.0;
_4 = !_9;
_17 = [154877533_u32,4175927116_u32,2669034381_u32,3061649149_u32,3020477863_u32];
_13 = (_18.fld6, _11, _16.0);
_17 = [1313445979_u32,1987146029_u32,2071824663_u32,1552156177_u32,1983936746_u32];
_13.1.3 = _6 as i8;
_18.fld6 = 13962379187702278263_u64 as usize;
Goto(bb2)
}
bb12 = {
_23 = [_3,_3,_14];
_2 = _12;
_35.fld7 = _18.fld7;
_25.0 = _28.0 - _13.2;
_13.1.2 = _9;
_39 = _13.0 + _13.0;
_13.2 = _32.0 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001015020554247556_f64;
_18.fld4 = 83368308014941771803886345037785273515_u128 as u64;
_38 = _15;
_12 = _3;
_20.fld0 = _8;
Goto(bb8)
}
bb13 = {
_42.fld1 = _11.0;
_45 = _43 as isize;
_14 = _11.0;
_47.fld3 = [_43,_43,_43,_43,_43];
_42.fld3.fld0.fld0 = _11.2;
_47.fld4 = [_14,_5,_15];
_46.fld2 = _18.fld2;
_47.fld4 = _18.fld5;
_47.fld4 = _18.fld5;
_48 = [_29,_29,_29,_29,_29];
_35.fld7 = _18.fld7;
_37.fld0 = _42.fld3.fld2.fld4;
_35.fld0 = core::ptr::addr_of_mut!(_21);
_21 = [_22,_45];
_42.fld2 = _36 - _36;
_46.fld6 = _36 as usize;
_32 = (_25.0,);
_46.fld4 = _19;
_39 = _18.fld6;
_9 = !_42.fld3.fld0.fld0;
_10 = _42.fld0;
_35.fld1 = [_43,_43,_43,_43];
_46.fld0 = core::ptr::addr_of_mut!(_21);
_43 = (-16057_i16);
_28.0 = _13.2;
_36 = _42.fld2 + _42.fld2;
match _43 {
0 => bb9,
1 => bb6,
2 => bb12,
3 => bb8,
4 => bb14,
340282366920938463463374607431768195399 => bb16,
_ => bb15
}
}
bb14 = {
_42.fld3.fld2.fld4 = _33.fld0;
_35.fld6 = _13.0;
_42.fld3.fld2.fld4 = [1317247913_i32,1487215207_i32,806896334_i32];
_4 = _13.1.2;
_18.fld7 = _35.fld7;
_10 = 131_u8;
_29 = 2311282425_u32 % 3703293392_u32;
_42.fld2 = -4100792681959922495_i64;
_11.2 = _9 ^ _13.1.2;
_42.fld3.fld0.fld2 = core::ptr::addr_of!(_42.fld3.fld1);
Goto(bb10)
}
bb15 = {
_7 = _25.0 <= _25.0;
_42.fld0 = (-28901_i16) as u8;
_42.fld0 = !_10;
_42.fld3.fld0.fld3.0 = core::ptr::addr_of_mut!(_1);
_36 = !_42.fld2;
_43 = !7577_i16;
_8 = [(-757947433_i32),179612140_i32,270435510_i32];
_36 = 1032509434_i32 as i64;
_42.fld3.fld2.fld5 = _13.2;
_12 = _15;
_46.fld6 = !_35.fld6;
_9 = _11.2 | _11.2;
_27 = [_43,_43,_43,_43,_43];
_22 = -_1;
_9 = _13.1.2;
_14 = _2;
_47.fld5 = [1288768425_i32,1489084708_i32,(-297810821_i32)];
_46.fld1 = [_43,_43,_43,_43];
match _10 {
0 => bb6,
1 => bb7,
2 => bb9,
3 => bb4,
4 => bb11,
131 => bb13,
_ => bb12
}
}
bb16 = {
_47.fld3 = [_43,_43,_43,_43,_43];
_11 = (_42.fld1, _13.1.1, _13.1.2, _24);
_46.fld1 = [_43,_43,_43,_43];
_8 = _42.fld3.fld2.fld4;
_41 = !_43;
_42.fld3.fld2.fld3 = -_11.3;
_17 = _18.fld2;
_15 = _14;
_35.fld2 = [_29,_29,_29,_29,_29];
_42.fld3.fld0.fld3.2 = _29 as i32;
_4 = !_9;
_32 = _28;
_23 = [_3,_2,_42.fld1];
_46.fld4 = _19 / 7814599334375733492_u64;
_13.1.0 = _5;
_18.fld1 = [_43,_43,_43,_41];
_46.fld0 = core::ptr::addr_of_mut!(_21);
_13.2 = -_16.0;
Goto(bb17)
}
bb17 = {
Call(_56 = dump_var(7_usize, 21_usize, Move(_21), 48_usize, Move(_48), 38_usize, Move(_38), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_56 = dump_var(7_usize, 3_usize, Move(_3), 43_usize, Move(_43), 29_usize, Move(_29), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_56 = dump_var(7_usize, 26_usize, Move(_26), 39_usize, Move(_39), 45_usize, Move(_45), 27_usize, Move(_27)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_56 = dump_var(7_usize, 2_usize, Move(_2), 9_usize, Move(_9), 57_usize, _57, 57_usize, _57), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: [i16; 5],mut _3: f64,mut _4: u8,mut _5: u32,mut _6: char,mut _7: f64,mut _8: bool,mut _9: [usize; 2],mut _10: char,mut _11: (f64,),mut _12: f64,mut _13: [usize; 2],mut _14: isize,mut _15: char,mut _16: isize) -> char {
mir! {
type RET = char;
let _17: Adt52;
let _18: char;
let _19: f32;
let _20: u8;
let _21: Adt62;
let _22: [i64; 5];
let _23: (*mut [isize; 2], bool, *mut isize);
let _24: isize;
let _25: Adt63;
let _26: i16;
let _27: isize;
let _28: f64;
let _29: char;
let _30: Adt61;
let _31: f32;
let _32: i8;
let _33: [i16; 4];
let _34: ();
let _35: ();
{
RET = _6;
_13 = [265074252765649221_usize,6_usize];
_1 = _14;
_1 = -_14;
_12 = -_3;
RET = _10;
_15 = _6;
_10 = _15;
_16 = _1 >> _4;
RET = _6;
_15 = _6;
_1 = _16 ^ _14;
_16 = !_1;
_8 = !false;
_9 = _13;
_12 = -_7;
_14 = _16 * _1;
_9 = [0_usize,0_usize];
RET = _15;
_12 = (-127_i8) as f64;
_17.fld1 = core::ptr::addr_of!(_11.0);
_11.0 = -_3;
Goto(bb1)
}
bb1 = {
_14 = _16;
_14 = _16 ^ _16;
_15 = _6;
_17.fld1 = core::ptr::addr_of!(_7);
_6 = _10;
_17.fld1 = core::ptr::addr_of!(_7);
RET = _15;
_4 = !208_u8;
_5 = 2409543711_u32;
_17.fld0 = [5_usize,11275526039993767755_usize];
_5 = !3079940062_u32;
_14 = _4 as isize;
RET = _6;
_10 = _6;
_12 = 16249020259462763644_u64 as f64;
_9 = [15734620430926931727_usize,0_usize];
_18 = _10;
_7 = _11.0;
RET = _18;
_20 = _4 ^ _4;
_10 = _6;
_17.fld1 = core::ptr::addr_of!(_11.0);
_22 = [7719819077921130558_i64,3584740945972107_i64,(-7761968221841153049_i64),9060554835079140041_i64,(-1179065739808857703_i64)];
_21.fld5 = [(-807605484_i32),(-663371400_i32),1171590063_i32];
_15 = _18;
Call(_3 = fn9(_17.fld0, _6, _9, _17.fld0, _20, _20, _20), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14 = 43924_u16 as isize;
_21.fld3 = [(-29036_i16),(-25027_i16),(-5488_i16),11202_i16,14684_i16];
_17.fld1 = core::ptr::addr_of!(_11.0);
_17.fld0 = _13;
_15 = _10;
_1 = -_16;
_21.fld6 = -_11.0;
_21.fld3 = _2;
Goto(bb3)
}
bb3 = {
_12 = -_11.0;
_23.1 = _8 | _8;
_21.fld2.0 = _5 as f32;
_21.fld3 = [22965_i16,5506_i16,3731_i16,(-14026_i16),(-21604_i16)];
_21.fld6 = _12 + _3;
_11 = (_21.fld6,);
_6 = _15;
_9 = _17.fld0;
_21.fld6 = -_7;
_13 = [7_usize,16983160681619035417_usize];
_21.fld3 = _2;
_12 = _11.0 + _11.0;
_19 = _21.fld2.0;
_23.1 = _10 < _6;
RET = _15;
RET = _10;
_25.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_1);
_25.fld3.fld2.fld3 = -127_i8;
_24 = _16 ^ _16;
_9 = [0_usize,1_usize];
_23.2 = core::ptr::addr_of_mut!(_14);
_25.fld2 = _5 as i64;
_25.fld3.fld0.fld1 = _6;
_25.fld3.fld0.fld0 = _23.1;
_21.fld0 = 16648633348040392051_u64;
_3 = _21.fld0 as f64;
_13 = [16764602447274973953_usize,4_usize];
match _21.fld0 {
0 => bb4,
1 => bb5,
16648633348040392051 => bb7,
_ => bb6
}
}
bb4 = {
_14 = 43924_u16 as isize;
_21.fld3 = [(-29036_i16),(-25027_i16),(-5488_i16),11202_i16,14684_i16];
_17.fld1 = core::ptr::addr_of!(_11.0);
_17.fld0 = _13;
_15 = _10;
_1 = -_16;
_21.fld6 = -_11.0;
_21.fld3 = _2;
Goto(bb3)
}
bb5 = {
_14 = _16;
_14 = _16 ^ _16;
_15 = _6;
_17.fld1 = core::ptr::addr_of!(_7);
_6 = _10;
_17.fld1 = core::ptr::addr_of!(_7);
RET = _15;
_4 = !208_u8;
_5 = 2409543711_u32;
_17.fld0 = [5_usize,11275526039993767755_usize];
_5 = !3079940062_u32;
_14 = _4 as isize;
RET = _6;
_10 = _6;
_12 = 16249020259462763644_u64 as f64;
_9 = [15734620430926931727_usize,0_usize];
_18 = _10;
_7 = _11.0;
RET = _18;
_20 = _4 ^ _4;
_10 = _6;
_17.fld1 = core::ptr::addr_of!(_11.0);
_22 = [7719819077921130558_i64,3584740945972107_i64,(-7761968221841153049_i64),9060554835079140041_i64,(-1179065739808857703_i64)];
_21.fld5 = [(-807605484_i32),(-663371400_i32),1171590063_i32];
_15 = _18;
Call(_3 = fn9(_17.fld0, _6, _9, _17.fld0, _20, _20, _20), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_25.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_24);
_25.fld3.fld2.fld3 = 81_i8 & (-26_i8);
_25.fld3.fld0.fld3.1 = _25.fld3.fld2.fld3 as u16;
_21.fld2 = (_19,);
RET = _10;
_21.fld5 = [1391336522_i32,15975978_i32,1674245436_i32];
_25.fld3.fld0.fld4 = _17.fld1;
_21.fld2.0 = _16 as f32;
_23.1 = !_25.fld3.fld0.fld0;
_25.fld3.fld0.fld3.2 = (-1516744119_i32);
_23.2 = core::ptr::addr_of_mut!(_14);
_21.fld2 = (_19,);
_25.fld3.fld2.fld5 = _1 as f64;
_23.2 = core::ptr::addr_of_mut!(_24);
_25.fld3.fld0.fld2 = core::ptr::addr_of!(_25.fld3.fld1);
_25.fld3.fld2 = Adt56 { fld0: _23.2,fld1: _21.fld3,fld2: 16580346383140925736_usize,fld3: 7_i8,fld4: _21.fld5,fld5: _21.fld6 };
_25.fld3.fld0.fld1 = _6;
_1 = !_24;
_26 = !(-2607_i16);
_21.fld2 = (_19,);
_25.fld3.fld2.fld2 = !11228878395207126987_usize;
_25.fld3.fld0.fld2 = core::ptr::addr_of!(_25.fld3.fld1);
_25.fld3.fld2.fld1 = [_26,_26,_26,_26,_26];
_13 = [_25.fld3.fld2.fld2,_25.fld3.fld2.fld2];
_25.fld3.fld0.fld3.0 = _23.2;
Goto(bb8)
}
bb8 = {
_25.fld1 = _10;
_29 = _6;
_25.fld3.fld2.fld2 = 0_usize << _20;
_25.fld3.fld0.fld0 = !_8;
_4 = _26 as u8;
_25.fld3.fld1 = core::ptr::addr_of!(_13);
_28 = _11.0;
_29 = _25.fld3.fld0.fld1;
match _25.fld3.fld2.fld3 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb9,
5 => bb10,
7 => bb12,
_ => bb11
}
}
bb9 = {
_14 = _16;
_14 = _16 ^ _16;
_15 = _6;
_17.fld1 = core::ptr::addr_of!(_7);
_6 = _10;
_17.fld1 = core::ptr::addr_of!(_7);
RET = _15;
_4 = !208_u8;
_5 = 2409543711_u32;
_17.fld0 = [5_usize,11275526039993767755_usize];
_5 = !3079940062_u32;
_14 = _4 as isize;
RET = _6;
_10 = _6;
_12 = 16249020259462763644_u64 as f64;
_9 = [15734620430926931727_usize,0_usize];
_18 = _10;
_7 = _11.0;
RET = _18;
_20 = _4 ^ _4;
_10 = _6;
_17.fld1 = core::ptr::addr_of!(_11.0);
_22 = [7719819077921130558_i64,3584740945972107_i64,(-7761968221841153049_i64),9060554835079140041_i64,(-1179065739808857703_i64)];
_21.fld5 = [(-807605484_i32),(-663371400_i32),1171590063_i32];
_15 = _18;
Call(_3 = fn9(_17.fld0, _6, _9, _17.fld0, _20, _20, _20), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_14 = 43924_u16 as isize;
_21.fld3 = [(-29036_i16),(-25027_i16),(-5488_i16),11202_i16,14684_i16];
_17.fld1 = core::ptr::addr_of!(_11.0);
_17.fld0 = _13;
_15 = _10;
_1 = -_16;
_21.fld6 = -_11.0;
_21.fld3 = _2;
Goto(bb3)
}
bb11 = {
_12 = -_11.0;
_23.1 = _8 | _8;
_21.fld2.0 = _5 as f32;
_21.fld3 = [22965_i16,5506_i16,3731_i16,(-14026_i16),(-21604_i16)];
_21.fld6 = _12 + _3;
_11 = (_21.fld6,);
_6 = _15;
_9 = _17.fld0;
_21.fld6 = -_7;
_13 = [7_usize,16983160681619035417_usize];
_21.fld3 = _2;
_12 = _11.0 + _11.0;
_19 = _21.fld2.0;
_23.1 = _10 < _6;
RET = _15;
RET = _10;
_25.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_1);
_25.fld3.fld2.fld3 = -127_i8;
_24 = _16 ^ _16;
_9 = [0_usize,1_usize];
_23.2 = core::ptr::addr_of_mut!(_14);
_25.fld2 = _5 as i64;
_25.fld3.fld0.fld1 = _6;
_25.fld3.fld0.fld0 = _23.1;
_21.fld0 = 16648633348040392051_u64;
_3 = _21.fld0 as f64;
_13 = [16764602447274973953_usize,4_usize];
match _21.fld0 {
0 => bb4,
1 => bb5,
16648633348040392051 => bb7,
_ => bb6
}
}
bb12 = {
_17.fld1 = core::ptr::addr_of!(_12);
_25.fld3.fld0.fld3.1 = 39470_u16 << _25.fld3.fld2.fld3;
Goto(bb13)
}
bb13 = {
_22 = [_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2];
_30.fld2.fld0.fld3.2 = _25.fld3.fld0.fld3.2;
_30.fld4.fld2 = Adt56 { fld0: _25.fld3.fld0.fld3.0,fld1: _25.fld3.fld2.fld1,fld2: _25.fld3.fld2.fld2,fld3: _25.fld3.fld2.fld3,fld4: _21.fld5,fld5: _28 };
_25.fld3.fld0.fld4 = _17.fld1;
_7 = -_11.0;
_27 = _26 as isize;
_21.fld5 = [_25.fld3.fld0.fld3.2,_25.fld3.fld0.fld3.2,_25.fld3.fld0.fld3.2];
_24 = _1 | _1;
_17 = Adt52 { fld0: _9,fld1: _25.fld3.fld0.fld4 };
_30.fld2.fld2.fld4 = _25.fld3.fld2.fld4;
_31 = _21.fld2.0;
_24 = _1 + _14;
_25.fld1 = _18;
_30.fld3 = [_5,_5,_5,_5,_5];
_30.fld4.fld1 = !(-11500270002088447587670354615309130055_i128);
_30.fld1.fld0 = _5 as i8;
_25.fld3.fld0.fld3.1 = 14326_u16;
_30.fld2.fld0 = Adt50 { fld0: _23.1,fld1: _25.fld3.fld0.fld1,fld2: _25.fld3.fld0.fld2,fld3: _25.fld3.fld0.fld3,fld4: _17.fld1 };
_6 = _25.fld1;
_7 = _28;
_25.fld3.fld0.fld3 = (_30.fld2.fld0.fld3.0, _30.fld2.fld0.fld3.1, _30.fld2.fld0.fld3.2);
_21.fld3 = [_26,_26,_26,_26,_26];
_30.fld2.fld0 = Adt50 { fld0: _23.1,fld1: _6,fld2: _25.fld3.fld0.fld2,fld3: _25.fld3.fld0.fld3,fld4: _25.fld3.fld0.fld4 };
_25.fld3.fld2.fld0 = _30.fld4.fld2.fld0;
_30.fld2.fld0.fld4 = core::ptr::addr_of!(_30.fld4.fld2.fld5);
_21.fld0 = _5 as u64;
_30.fld2.fld0.fld3.1 = _8 as u16;
_25.fld3.fld2.fld3 = _30.fld4.fld2.fld3 ^ _30.fld4.fld2.fld3;
_3 = -_11.0;
_21.fld3 = [_26,_26,_26,_26,_26];
Goto(bb14)
}
bb14 = {
_30.fld2.fld2.fld0 = core::ptr::addr_of_mut!(_27);
_1 = _24 * _24;
_25.fld3.fld0.fld1 = _18;
_25.fld3.fld0.fld3.0 = _30.fld2.fld0.fld3.0;
_17.fld1 = core::ptr::addr_of!(_30.fld4.fld2.fld5);
_25.fld1 = _29;
_21.fld6 = _12 + _3;
_30.fld4.fld2.fld1 = _2;
_30.fld2.fld0.fld1 = _10;
_27 = _1 | _1;
_25.fld3.fld2.fld3 = _30.fld4.fld2.fld3;
RET = _30.fld2.fld0.fld1;
_30.fld2.fld1 = _25.fld3.fld1;
_30.fld4.fld2.fld4 = [_30.fld2.fld0.fld3.2,_25.fld3.fld0.fld3.2,_25.fld3.fld0.fld3.2];
_30.fld2.fld2.fld1 = _25.fld3.fld2.fld1;
_23.1 = _25.fld3.fld0.fld0;
_30.fld2.fld2.fld3 = _30.fld2.fld0.fld0 as i8;
_30.fld0.0.0 = _25.fld3.fld2.fld0;
_28 = _25.fld3.fld0.fld3.1 as f64;
_30.fld4.fld0 = _21.fld0;
_30.fld4.fld2.fld1 = [_26,_26,_26,_26,_26];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(8_usize, 14_usize, Move(_14), 16_usize, Move(_16), 13_usize, Move(_13), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(8_usize, 22_usize, Move(_22), 2_usize, Move(_2), 29_usize, Move(_29), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(8_usize, 24_usize, Move(_24), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [usize; 2],mut _2: char,mut _3: [usize; 2],mut _4: [usize; 2],mut _5: u8,mut _6: u8,mut _7: u8) -> f64 {
mir! {
type RET = f64;
let _8: u8;
let _9: i128;
let _10: [i32; 3];
let _11: (f32,);
let _12: (*mut isize,);
let _13: *mut [isize; 2];
let _14: (f64,);
let _15: Adt55;
let _16: i16;
let _17: u32;
let _18: f32;
let _19: *const u128;
let _20: Adt55;
let _21: f64;
let _22: (*mut isize,);
let _23: [i16; 4];
let _24: u8;
let _25: bool;
let _26: (char, *const u8, bool, i8);
let _27: usize;
let _28: (f32,);
let _29: [char; 3];
let _30: ();
let _31: ();
{
RET = 17256404422273905708_u64 as f64;
_3 = _1;
Goto(bb1)
}
bb1 = {
_6 = !_5;
RET = 315071240461303189677295582945095805166_u128 as f64;
_5 = !_6;
_6 = 2054757191_i32 as u8;
_7 = 5_i8 as u8;
_7 = !_5;
_1 = [3_usize,0_usize];
_3 = _4;
RET = (-27_i8) as f64;
_3 = [5_usize,0_usize];
_1 = [3_usize,0_usize];
_6 = _7 * _7;
RET = (-6389731137689599426_i64) as f64;
_4 = [3_usize,0_usize];
_3 = [1_usize,0_usize];
_7 = _5 + _6;
_5 = _6;
_8 = !_7;
RET = (-3700320590785540921_i64) as f64;
_7 = !_6;
Call(_1 = fn10(_8, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = -48204817645358278546762988280091984404_i128;
_5 = (-675658266_i32) as u8;
_3 = _1;
_7 = _8;
_6 = (-26968_i16) as u8;
_2 = '\u{4866b}';
_11.0 = 3913693750_u32 as f32;
_10 = [(-749635493_i32),(-1762327324_i32),(-94413768_i32)];
_7 = _8 / 235_u8;
RET = (-743982574257172858_i64) as f64;
RET = 6_usize as f64;
_5 = _7 - _6;
_10 = [1726837927_i32,483222954_i32,(-96058641_i32)];
Goto(bb3)
}
bb3 = {
_3 = _1;
_7 = 6654477670678057585_u64 as u8;
_9 = (-31533364792634504204409366869099171981_i128) << _5;
_1 = [0_usize,1_usize];
_8 = _5;
_2 = '\u{2378e}';
_6 = !_8;
_17 = _9 as u32;
_15.fld0 = _17 as i8;
_16 = 7492_i16 + 18523_i16;
_14.0 = _15.fld0 as f64;
_17 = _9 as u32;
_15.fld0 = (-127_i8);
_1 = [14355053210406293550_usize,14627338046081322788_usize];
_6 = _5;
_16 = 20109_i16 * 8281_i16;
RET = _14.0;
RET = (-1666196125_i32) as f64;
_18 = _11.0;
RET = _14.0 / 1_f64;
_8 = _6;
_3 = [9425746120730465381_usize,7_usize];
_1 = _4;
_14.0 = _15.fld0 as f64;
match _15.fld0 {
0 => bb4,
1 => bb5,
2 => bb6,
340282366920938463463374607431768211329 => bb8,
_ => bb7
}
}
bb4 = {
_9 = -48204817645358278546762988280091984404_i128;
_5 = (-675658266_i32) as u8;
_3 = _1;
_7 = _8;
_6 = (-26968_i16) as u8;
_2 = '\u{4866b}';
_11.0 = 3913693750_u32 as f32;
_10 = [(-749635493_i32),(-1762327324_i32),(-94413768_i32)];
_7 = _8 / 235_u8;
RET = (-743982574257172858_i64) as f64;
RET = 6_usize as f64;
_5 = _7 - _6;
_10 = [1726837927_i32,483222954_i32,(-96058641_i32)];
Goto(bb3)
}
bb5 = {
_6 = !_5;
RET = 315071240461303189677295582945095805166_u128 as f64;
_5 = !_6;
_6 = 2054757191_i32 as u8;
_7 = 5_i8 as u8;
_7 = !_5;
_1 = [3_usize,0_usize];
_3 = _4;
RET = (-27_i8) as f64;
_3 = [5_usize,0_usize];
_1 = [3_usize,0_usize];
_6 = _7 * _7;
RET = (-6389731137689599426_i64) as f64;
_4 = [3_usize,0_usize];
_3 = [1_usize,0_usize];
_7 = _5 + _6;
_5 = _6;
_8 = !_7;
RET = (-3700320590785540921_i64) as f64;
_7 = !_6;
Call(_1 = fn10(_8, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_1 = [7377659001042720554_usize,2_usize];
_16 = -(-10597_i16);
_3 = _4;
_4 = [12149167247988122580_usize,11587096303284069572_usize];
Goto(bb9)
}
bb9 = {
_17 = 3142673212_u32;
_15 = Adt55 { fld0: 89_i8 };
_11 = (_18,);
RET = _14.0 + _14.0;
_1 = [8037810299929586397_usize,3_usize];
_6 = !_8;
_9 = (-143475737109507597462143838300946063671_i128);
_8 = !_5;
_20 = Adt55 { fld0: _15.fld0 };
_14.0 = _17 as f64;
_18 = 2884_u16 as f32;
_5 = _6 * _8;
_17 = !1772502482_u32;
_21 = -_14.0;
_5 = _6 >> _6;
Goto(bb10)
}
bb10 = {
_10 = [788972156_i32,1025323112_i32,(-1305322676_i32)];
_14 = (_21,);
_10 = [2133957327_i32,881437740_i32,1229090593_i32];
_7 = 10824526519117947768_u64 as u8;
_3 = [10778332307098975632_usize,3_usize];
RET = _21 + _21;
_15.fld0 = _9 as i8;
_14 = (_21,);
_26.2 = false | false;
_23 = [_16,_16,_16,_16];
_24 = _5 * _5;
_28 = (_18,);
_2 = '\u{9eaec}';
_20 = Adt55 { fld0: _15.fld0 };
match _9 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
196806629811430866001230769130822147785 => bb19,
_ => bb18
}
}
bb11 = {
_17 = 3142673212_u32;
_15 = Adt55 { fld0: 89_i8 };
_11 = (_18,);
RET = _14.0 + _14.0;
_1 = [8037810299929586397_usize,3_usize];
_6 = !_8;
_9 = (-143475737109507597462143838300946063671_i128);
_8 = !_5;
_20 = Adt55 { fld0: _15.fld0 };
_14.0 = _17 as f64;
_18 = 2884_u16 as f32;
_5 = _6 * _8;
_17 = !1772502482_u32;
_21 = -_14.0;
_5 = _6 >> _6;
Goto(bb10)
}
bb12 = {
_1 = [7377659001042720554_usize,2_usize];
_16 = -(-10597_i16);
_3 = _4;
_4 = [12149167247988122580_usize,11587096303284069572_usize];
Goto(bb9)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_6 = !_5;
RET = 315071240461303189677295582945095805166_u128 as f64;
_5 = !_6;
_6 = 2054757191_i32 as u8;
_7 = 5_i8 as u8;
_7 = !_5;
_1 = [3_usize,0_usize];
_3 = _4;
RET = (-27_i8) as f64;
_3 = [5_usize,0_usize];
_1 = [3_usize,0_usize];
_6 = _7 * _7;
RET = (-6389731137689599426_i64) as f64;
_4 = [3_usize,0_usize];
_3 = [1_usize,0_usize];
_7 = _5 + _6;
_5 = _6;
_8 = !_7;
RET = (-3700320590785540921_i64) as f64;
_7 = !_6;
Call(_1 = fn10(_8, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_9 = -48204817645358278546762988280091984404_i128;
_5 = (-675658266_i32) as u8;
_3 = _1;
_7 = _8;
_6 = (-26968_i16) as u8;
_2 = '\u{4866b}';
_11.0 = 3913693750_u32 as f32;
_10 = [(-749635493_i32),(-1762327324_i32),(-94413768_i32)];
_7 = _8 / 235_u8;
RET = (-743982574257172858_i64) as f64;
RET = 6_usize as f64;
_5 = _7 - _6;
_10 = [1726837927_i32,483222954_i32,(-96058641_i32)];
Goto(bb3)
}
bb17 = {
_6 = !_5;
RET = 315071240461303189677295582945095805166_u128 as f64;
_5 = !_6;
_6 = 2054757191_i32 as u8;
_7 = 5_i8 as u8;
_7 = !_5;
_1 = [3_usize,0_usize];
_3 = _4;
RET = (-27_i8) as f64;
_3 = [5_usize,0_usize];
_1 = [3_usize,0_usize];
_6 = _7 * _7;
RET = (-6389731137689599426_i64) as f64;
_4 = [3_usize,0_usize];
_3 = [1_usize,0_usize];
_7 = _5 + _6;
_5 = _6;
_8 = !_7;
RET = (-3700320590785540921_i64) as f64;
_7 = !_6;
Call(_1 = fn10(_8, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_9 = -48204817645358278546762988280091984404_i128;
_5 = (-675658266_i32) as u8;
_3 = _1;
_7 = _8;
_6 = (-26968_i16) as u8;
_2 = '\u{4866b}';
_11.0 = 3913693750_u32 as f32;
_10 = [(-749635493_i32),(-1762327324_i32),(-94413768_i32)];
_7 = _8 / 235_u8;
RET = (-743982574257172858_i64) as f64;
RET = 6_usize as f64;
_5 = _7 - _6;
_10 = [1726837927_i32,483222954_i32,(-96058641_i32)];
Goto(bb3)
}
bb19 = {
_20.fld0 = _15.fld0 + _15.fld0;
_21 = _14.0 + _14.0;
_27 = _2 as usize;
Goto(bb20)
}
bb20 = {
Call(_30 = dump_var(9_usize, 23_usize, Move(_23), 16_usize, Move(_16), 9_usize, Move(_9), 8_usize, Move(_8)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_30 = dump_var(9_usize, 7_usize, Move(_7), 3_usize, Move(_3), 10_usize, Move(_10), 31_usize, _31), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: u8,mut _2: u8) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _3: isize;
let _4: [i16; 5];
let _5: [isize; 2];
let _6: i16;
let _7: *const f64;
let _8: *mut isize;
let _9: f64;
let _10: [char; 3];
let _11: [i32; 3];
let _12: [isize; 2];
let _13: Adt59;
let _14: isize;
let _15: Adt63;
let _16: (usize, (char, *const u8, bool, i8), f64);
let _17: bool;
let _18: i64;
let _19: Adt57;
let _20: [u64; 1];
let _21: [isize; 2];
let _22: u32;
let _23: *const *const [usize; 2];
let _24: *const u128;
let _25: u32;
let _26: bool;
let _27: ();
let _28: ();
{
_1 = _2;
RET = [11532443404662890024_usize,3721344961424330532_usize];
_1 = !_2;
Goto(bb1)
}
bb1 = {
RET = [3_usize,16654781243255931443_usize];
_4 = [4139_i16,26568_i16,(-8735_i16),26465_i16,4656_i16];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = _2 >> _2;
RET = [0_usize,0_usize];
_4 = [(-21419_i16),(-3166_i16),24128_i16,6316_i16,22824_i16];
RET = [640965120526665115_usize,10082780168279132110_usize];
_5 = [(-9223372036854775808_isize),(-79_isize)];
_1 = _2 >> _2;
_2 = _1;
Call(_8 = fn11(_5, _5, _2, _2, _1, _1, _2, _4, _5, _5, _5, _2, _1, _2, _1, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = [92852999776515831_usize,9708389713554335739_usize];
_8 = core::ptr::addr_of_mut!(_3);
(*_8) = 17104_u16 as isize;
_5 = [(*_8),_3];
Goto(bb3)
}
bb3 = {
(*_8) = (-66_isize) >> _1;
_8 = core::ptr::addr_of_mut!(_3);
_3 = (-9223372036854775808_isize);
_4 = [(-8304_i16),21110_i16,24496_i16,(-11685_i16),1772_i16];
_3 = (-68_isize) & (-9223372036854775808_isize);
_4 = [21627_i16,(-8246_i16),21278_i16,(-17655_i16),(-24706_i16)];
_6 = -26588_i16;
_6 = !(-15583_i16);
RET = [0_usize,9460549534463925875_usize];
_6 = -8507_i16;
_3 = (-9223372036854775808_isize);
match (*_8) {
0 => bb2,
1 => bb4,
2 => bb5,
340282366920938463454151235394913435648 => bb7,
_ => bb6
}
}
bb4 = {
RET = [92852999776515831_usize,9708389713554335739_usize];
_8 = core::ptr::addr_of_mut!(_3);
(*_8) = 17104_u16 as isize;
_5 = [(*_8),_3];
Goto(bb3)
}
bb5 = {
RET = [3_usize,16654781243255931443_usize];
_4 = [4139_i16,26568_i16,(-8735_i16),26465_i16,4656_i16];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = _2 >> _2;
RET = [0_usize,0_usize];
_4 = [(-21419_i16),(-3166_i16),24128_i16,6316_i16,22824_i16];
RET = [640965120526665115_usize,10082780168279132110_usize];
_5 = [(-9223372036854775808_isize),(-79_isize)];
_1 = _2 >> _2;
_2 = _1;
Call(_8 = fn11(_5, _5, _2, _2, _1, _1, _2, _4, _5, _5, _5, _2, _1, _2, _1, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
RET = [14226509600788234510_usize,6_usize];
_9 = (-4000130755719225759_i64) as f64;
(*_8) = (-86_isize) + (-3_isize);
(*_8) = (-9223372036854775808_isize) - 33_isize;
_10 = ['\u{911d7}','\u{e6563}','\u{975e7}'];
_5 = [_3,(*_8)];
Goto(bb8)
}
bb8 = {
_4 = [_6,_6,_6,_6,_6];
_2 = _1;
_11 = [1985150688_i32,1875435333_i32,(-1687406445_i32)];
_9 = (-119_i8) as f64;
_12 = [(*_8),(*_8)];
_8 = core::ptr::addr_of_mut!((*_8));
_7 = core::ptr::addr_of!(_9);
_12 = [(*_8),_3];
_13.fld2.1.1.3 = 14_i8 >> (*_8);
Goto(bb9)
}
bb9 = {
_15.fld3.fld2.fld1 = [_6,_6,_6,_6,_6];
_13.fld1.2 = !false;
_5 = [(*_8),_3];
_11 = [(-121726083_i32),(-726188856_i32),(-749926156_i32)];
_13.fld2.1.2 = -(*_7);
_15.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_3);
_15.fld3.fld2.fld5 = _9;
_15.fld2 = !5165786355345051009_i64;
_15.fld3.fld2.fld1 = [_6,_6,_6,_6,_6];
_16.2 = _15.fld3.fld2.fld5 / f64::INFINITY;
_10 = ['\u{bd8ef}','\u{3156c}','\u{73de6}'];
_15.fld3.fld2.fld1 = [_6,_6,_6,_6,_6];
_15.fld3.fld2.fld5 = _13.fld2.1.2;
_10 = ['\u{3b5b1}','\u{8d97a}','\u{cb524}'];
_12 = [(*_8),_3];
Goto(bb10)
}
bb10 = {
_13.fld2.1.2 = -_15.fld3.fld2.fld5;
_17 = !_13.fld1.2;
_15.fld3.fld0.fld3 = (_15.fld3.fld2.fld0, 61552_u16, 1113521913_i32);
_16.1.3 = -_13.fld2.1.1.3;
_15.fld0 = _1 / 174_u8;
_16.1.2 = _17;
_19.fld0 = [_15.fld3.fld0.fld3.2,_15.fld3.fld0.fld3.2,_15.fld3.fld0.fld3.2];
_5 = [(*_8),(*_8)];
_16.1.1 = core::ptr::addr_of!(_15.fld0);
_15.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_14);
_15.fld3.fld2 = Adt56 { fld0: _15.fld3.fld0.fld3.0,fld1: _4,fld2: 1730316623207642253_usize,fld3: _13.fld2.1.1.3,fld4: _19.fld0,fld5: _16.2 };
_15.fld3.fld0.fld3.2 = _15.fld2 as i32;
_13.fld2.1.1.1 = core::ptr::addr_of!(_13.fld2.2);
match _15.fld3.fld2.fld2 {
1730316623207642253 => bb12,
_ => bb11
}
}
bb11 = {
RET = [3_usize,16654781243255931443_usize];
_4 = [4139_i16,26568_i16,(-8735_i16),26465_i16,4656_i16];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = _2 >> _2;
RET = [0_usize,0_usize];
_4 = [(-21419_i16),(-3166_i16),24128_i16,6316_i16,22824_i16];
RET = [640965120526665115_usize,10082780168279132110_usize];
_5 = [(-9223372036854775808_isize),(-79_isize)];
_1 = _2 >> _2;
_2 = _1;
Call(_8 = fn11(_5, _5, _2, _2, _1, _1, _2, _4, _5, _5, _5, _2, _1, _2, _1, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_15.fld3.fld0.fld0 = _15.fld3.fld2.fld5 < _15.fld3.fld2.fld5;
_13.fld1.0 = '\u{eefeb}';
RET = [_15.fld3.fld2.fld2,_15.fld3.fld2.fld2];
_16.0 = _15.fld3.fld2.fld2;
(*_8) = 9223372036854775807_isize;
_15.fld1 = _13.fld1.0;
_5 = [(*_8),(*_8)];
_13.fld2.1.1.2 = _15.fld3.fld0.fld0;
_13.fld2.2 = !_1;
_11 = [_15.fld3.fld0.fld3.2,_15.fld3.fld0.fld3.2,_15.fld3.fld0.fld3.2];
_13.fld2.1.1 = (_13.fld1.0, _16.1.1, _15.fld3.fld0.fld0, _16.1.3);
_13.fld2.2 = _15.fld2 as u8;
_13.fld2.2 = _13.fld2.1.1.3 as u8;
_10 = [_13.fld1.0,_13.fld2.1.1.0,_13.fld2.1.1.0];
_13.fld1.3 = _16.0 as i8;
(*_7) = _16.2;
_15.fld1 = _13.fld1.0;
_13.fld2.3.0 = 3655941792_u32 as f32;
RET = [_16.0,_15.fld3.fld2.fld2];
_13.fld1.0 = _15.fld1;
_13.fld1.1 = core::ptr::addr_of!(_15.fld0);
_10 = [_15.fld1,_13.fld1.0,_13.fld1.0];
RET = [_15.fld3.fld2.fld2,_16.0];
_16.1.0 = _13.fld1.0;
_8 = core::ptr::addr_of_mut!((*_8));
Goto(bb13)
}
bb13 = {
Call(_27 = dump_var(10_usize, 6_usize, Move(_6), 10_usize, Move(_10), 17_usize, Move(_17), 5_usize, Move(_5)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_27 = dump_var(10_usize, 12_usize, Move(_12), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [isize; 2],mut _2: [isize; 2],mut _3: u8,mut _4: u8,mut _5: u8,mut _6: u8,mut _7: u8,mut _8: [i16; 5],mut _9: [isize; 2],mut _10: [isize; 2],mut _11: [isize; 2],mut _12: u8,mut _13: u8,mut _14: u8,mut _15: u8,mut _16: [isize; 2]) -> *mut isize {
mir! {
type RET = *mut isize;
let _17: [i32; 3];
let _18: Adt63;
let _19: isize;
let _20: [i16; 4];
let _21: [i16; 5];
let _22: [i16; 5];
let _23: i128;
let _24: (f32,);
let _25: bool;
let _26: *const u8;
let _27: (f32,);
let _28: [i64; 5];
let _29: [i16; 4];
let _30: Adt62;
let _31: isize;
let _32: isize;
let _33: (usize, (char, *const u8, bool, i8), f64);
let _34: bool;
let _35: Adt60;
let _36: (*mut [isize; 2], bool, *mut isize);
let _37: ();
let _38: ();
{
_9 = [(-59_isize),9223372036854775807_isize];
_2 = _1;
Call(_2 = fn12(_11, _7, _15, _14, _11, _13, _8, _9, _4, _16, _16), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_14 = 27046_i16 as u8;
_3 = !_6;
_1 = _16;
_16 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),1_isize];
_7 = !_6;
_9 = [(-18_isize),9223372036854775807_isize];
_13 = _15;
_12 = _7;
_11 = _10;
_4 = _13 * _6;
_18.fld3.fld0.fld4 = core::ptr::addr_of!(_18.fld3.fld2.fld5);
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_14 = !_4;
_18.fld3.fld2.fld1 = _8;
Goto(bb2)
}
bb2 = {
_18.fld3.fld0.fld3.0 = core::ptr::addr_of_mut!(_19);
_18.fld2 = (-8921525891275928920_i64) ^ (-7563697348903129864_i64);
_18.fld3.fld0.fld3.2 = 103188744_i32 * 899918066_i32;
_4 = _18.fld2 as u8;
_10 = _11;
_18.fld3.fld2.fld3 = 16728_i16 as i8;
_12 = true as u8;
_18.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_19);
_18.fld3.fld0.fld3.1 = !62779_u16;
_4 = _3;
_18.fld1 = '\u{5173b}';
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
RET = core::ptr::addr_of_mut!(_19);
_18.fld3.fld2.fld1 = [19076_i16,25284_i16,(-7794_i16),523_i16,(-3531_i16)];
Goto(bb3)
}
bb3 = {
_20 = [21832_i16,(-17496_i16),26173_i16,18821_i16];
(*RET) = (-9223372036854775808_isize) & (-30_isize);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_6 = _14;
_19 = (-9223372036854775808_isize);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_18.fld1 = '\u{eb5c7}';
_6 = !_14;
_18.fld3.fld0.fld3.1 = (*RET) as u16;
_2 = _9;
_3 = _6;
(*RET) = 32528_i16 as isize;
_18.fld3.fld0.fld4 = core::ptr::addr_of!(_18.fld3.fld2.fld5);
_1 = [(*RET),_19];
Call(_18.fld3.fld2.fld1 = fn13(_18.fld3.fld2.fld0, _13, _7, _15, _18.fld3.fld0.fld3.0, _10, _18.fld3.fld0.fld3.0, _15, _18.fld3.fld0.fld3, _4, _18.fld3.fld0.fld4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18.fld3.fld0.fld1 = _18.fld1;
_2 = _1;
_14 = _4 << _18.fld3.fld0.fld3.1;
(*RET) = 22_isize;
(*RET) = _18.fld2 as isize;
_7 = _15;
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
(*RET) = 2730395751428135463_u64 as isize;
_18.fld3.fld2.fld1 = [4704_i16,16712_i16,29721_i16,16689_i16,(-3533_i16)];
_20 = [31072_i16,2797_i16,5309_i16,23884_i16];
_20 = [314_i16,(-19563_i16),19346_i16,22898_i16];
_18.fld3.fld0.fld0 = false;
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_10 = [(*RET),(*RET)];
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_18.fld1 = _18.fld3.fld0.fld1;
_19 = 9223372036854775807_isize;
_5 = _13;
(*RET) = (-9223372036854775808_isize);
_25 = _18.fld3.fld0.fld0 & _18.fld3.fld0.fld0;
_5 = 10741745705739485998_usize as u8;
_24.0 = _18.fld3.fld2.fld5 as f32;
match (*RET) {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb5 = {
_20 = [21832_i16,(-17496_i16),26173_i16,18821_i16];
(*RET) = (-9223372036854775808_isize) & (-30_isize);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_6 = _14;
_19 = (-9223372036854775808_isize);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_18.fld1 = '\u{eb5c7}';
_6 = !_14;
_18.fld3.fld0.fld3.1 = (*RET) as u16;
_2 = _9;
_3 = _6;
(*RET) = 32528_i16 as isize;
_18.fld3.fld0.fld4 = core::ptr::addr_of!(_18.fld3.fld2.fld5);
_1 = [(*RET),_19];
Call(_18.fld3.fld2.fld1 = fn13(_18.fld3.fld2.fld0, _13, _7, _15, _18.fld3.fld0.fld3.0, _10, _18.fld3.fld0.fld3.0, _15, _18.fld3.fld0.fld3, _4, _18.fld3.fld0.fld4), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_18.fld3.fld0.fld3.0 = core::ptr::addr_of_mut!(_19);
_18.fld2 = (-8921525891275928920_i64) ^ (-7563697348903129864_i64);
_18.fld3.fld0.fld3.2 = 103188744_i32 * 899918066_i32;
_4 = _18.fld2 as u8;
_10 = _11;
_18.fld3.fld2.fld3 = 16728_i16 as i8;
_12 = true as u8;
_18.fld3.fld2.fld0 = core::ptr::addr_of_mut!(_19);
_18.fld3.fld0.fld3.1 = !62779_u16;
_4 = _3;
_18.fld1 = '\u{5173b}';
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
RET = core::ptr::addr_of_mut!(_19);
_18.fld3.fld2.fld1 = [19076_i16,25284_i16,(-7794_i16),523_i16,(-3531_i16)];
Goto(bb3)
}
bb7 = {
_1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_14 = 27046_i16 as u8;
_3 = !_6;
_1 = _16;
_16 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),1_isize];
_7 = !_6;
_9 = [(-18_isize),9223372036854775807_isize];
_13 = _15;
_12 = _7;
_11 = _10;
_4 = _13 * _6;
_18.fld3.fld0.fld4 = core::ptr::addr_of!(_18.fld3.fld2.fld5);
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_14 = !_4;
_18.fld3.fld2.fld1 = _8;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_6 = _7 - _7;
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_11 = _10;
_27 = (_24.0,);
_8 = [24140_i16,(-11958_i16),25299_i16,19775_i16,5811_i16];
_1 = [(*RET),(*RET)];
_30.fld3 = [(-4610_i16),(-21314_i16),12457_i16,25436_i16,(-2022_i16)];
_4 = !_13;
_18.fld3.fld2.fld2 = 4_usize - 4_usize;
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_2 = [(*RET),(*RET)];
_7 = _25 as u8;
_5 = !_4;
match (*RET) {
0 => bb9,
1 => bb8,
2 => bb4,
3 => bb12,
4 => bb13,
340282366920938463454151235394913435648 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
_20 = [21832_i16,(-17496_i16),26173_i16,18821_i16];
(*RET) = (-9223372036854775808_isize) & (-30_isize);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_6 = _14;
_19 = (-9223372036854775808_isize);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_18.fld1 = '\u{eb5c7}';
_6 = !_14;
_18.fld3.fld0.fld3.1 = (*RET) as u16;
_2 = _9;
_3 = _6;
(*RET) = 32528_i16 as isize;
_18.fld3.fld0.fld4 = core::ptr::addr_of!(_18.fld3.fld2.fld5);
_1 = [(*RET),_19];
Call(_18.fld3.fld2.fld1 = fn13(_18.fld3.fld2.fld0, _13, _7, _15, _18.fld3.fld0.fld3.0, _10, _18.fld3.fld0.fld3.0, _15, _18.fld3.fld0.fld3, _4, _18.fld3.fld0.fld4), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_14 = 27046_i16 as u8;
_3 = !_6;
_1 = _16;
_16 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [(-9223372036854775808_isize),1_isize];
_7 = !_6;
_9 = [(-18_isize),9223372036854775807_isize];
_13 = _15;
_12 = _7;
_11 = _10;
_4 = _13 * _6;
_18.fld3.fld0.fld4 = core::ptr::addr_of!(_18.fld3.fld2.fld5);
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_14 = !_4;
_18.fld3.fld2.fld1 = _8;
Goto(bb2)
}
bb15 = {
_18.fld3.fld0.fld3.2 = 1702195133_i32 + (-1155687069_i32);
_7 = !_3;
_30.fld4 = [_18.fld1,_18.fld1,_18.fld3.fld0.fld1];
_17 = _18.fld3.fld2.fld4;
_29 = _20;
_15 = !_6;
_13 = !_4;
_30.fld2.0 = _27.0;
_18.fld3.fld0.fld1 = _18.fld1;
_15 = (*RET) as u8;
_32 = _25 as isize;
_1 = [(*RET),_32];
_5 = _13 - _14;
_8 = _30.fld3;
_33.1.0 = _18.fld1;
_23 = _18.fld3.fld0.fld3.2 as i128;
_18.fld0 = _18.fld3.fld0.fld3.1 as u8;
(*RET) = -_32;
_18.fld3.fld0.fld3 = (_18.fld3.fld2.fld0, 48060_u16, (-1965635028_i32));
_33.1.2 = _18.fld3.fld0.fld0;
_35.fld0.fld0 = _25;
_3 = _5 * _4;
(*RET) = -_32;
_27.0 = _23 as f32;
Goto(bb16)
}
bb16 = {
Call(_37 = dump_var(11_usize, 11_usize, Move(_11), 5_usize, Move(_5), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(11_usize, 8_usize, Move(_8), 10_usize, Move(_10), 32_usize, Move(_32), 29_usize, Move(_29)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(11_usize, 19_usize, Move(_19), 25_usize, Move(_25), 3_usize, Move(_3), 38_usize, _38), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [isize; 2],mut _2: u8,mut _3: u8,mut _4: u8,mut _5: [isize; 2],mut _6: u8,mut _7: [i16; 5],mut _8: [isize; 2],mut _9: u8,mut _10: [isize; 2],mut _11: [isize; 2]) -> [isize; 2] {
mir! {
type RET = [isize; 2];
let _12: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _13: (usize, (char, *const u8, bool, i8), f64);
let _14: isize;
let _15: [u64; 1];
let _16: (usize, (char, *const u8, bool, i8), f64);
let _17: bool;
let _18: [i32; 3];
let _19: [i32; 3];
let _20: (f32,);
let _21: bool;
let _22: (usize, (char, *const u8, bool, i8), f64);
let _23: *mut bool;
let _24: [usize; 2];
let _25: *const f64;
let _26: isize;
let _27: f32;
let _28: *const u128;
let _29: Adt56;
let _30: Adt55;
let _31: isize;
let _32: char;
let _33: f32;
let _34: ();
let _35: ();
{
RET = _11;
_9 = _3;
_7 = [(-30883_i16),10003_i16,(-29442_i16),29706_i16,31639_i16];
_12.2 = !4_usize;
_13.1.1 = core::ptr::addr_of!(_3);
_13.1.2 = false;
_12.0 = core::ptr::addr_of!(_6);
_7 = [(-30879_i16),(-25192_i16),(-2995_i16),(-15129_i16),12802_i16];
_7 = [25015_i16,23516_i16,(-8930_i16),(-2200_i16),24112_i16];
_13.1.1 = core::ptr::addr_of!(_6);
_12.1.1 = _13.1.2;
_12.3 = _4 as u64;
RET = _10;
Goto(bb1)
}
bb1 = {
_12.3 = _2 as u64;
_13.1.3 = -(-108_i8);
_13.1.0 = '\u{dcdc4}';
_12.3 = 17267433268503222421_u64;
_13.0 = 29903_i16 as usize;
_16.2 = _12.3 as f64;
_15 = [_12.3];
_16.1.2 = _12.1.1 & _12.1.1;
_12.2 = _13.0;
_13.1 = ('\u{10e442}', _12.0, _16.1.2, 31_i8);
_16.1.2 = _12.1.1 | _13.1.2;
_13.1.2 = _16.1.2 | _16.1.2;
_16.1.3 = _12.1.1 as i8;
_16.1.1 = core::ptr::addr_of!(_2);
_17 = !_13.1.2;
_13.2 = _2 as f64;
_2 = (-8247946536939228172_i64) as u8;
_6 = _3 & _4;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16.0 = !_12.2;
_10 = [9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [9223372036854775807_isize,(-23_isize)];
_3 = _13.1.3 as u8;
_2 = (-1761445817_i32) as u8;
_16.1.0 = _13.1.0;
match _13.1.3 {
0 => bb2,
1 => bb3,
2 => bb4,
31 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_13.2 = -_16.2;
_18 = [93620146_i32,(-2006258089_i32),115687681_i32];
_12.3 = _13.1.3 as u64;
_16.1 = (_13.1.0, _12.0, _13.1.2, _13.1.3);
_14 = (-3545410008111869926_i64) as isize;
_12.4.0 = core::ptr::addr_of_mut!(_14);
_11 = _8;
_16.1.0 = _13.1.0;
_11 = [_14,_14];
_3 = !_6;
_16.1.3 = !_13.1.3;
Call(_3 = core::intrinsics::transmute(_6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_10 = _1;
_22 = (_16.0, _13.1, _13.2);
_9 = _3 ^ _4;
_12.1.2 = _12.4.0;
Call(_13.1.1 = core::intrinsics::arith_offset(_12.0, (-60_isize)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = _8;
_13.1 = (_16.1.0, _12.0, _16.1.2, _16.1.3);
Goto(bb9)
}
bb9 = {
_9 = _6 ^ _6;
_12.1.2 = core::ptr::addr_of_mut!(_14);
_21 = !_17;
RET = [_14,_14];
Goto(bb10)
}
bb10 = {
_13.2 = 51776_u16 as f64;
_22.1 = (_13.1.0, _12.0, _21, _13.1.3);
_25 = core::ptr::addr_of!(_13.2);
_21 = !_17;
_16 = (_12.2, _22.1, _13.2);
_20.0 = _6 as f32;
_14 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_7 = [12051_i16,(-17863_i16),5654_i16,(-28317_i16),30834_i16];
_24 = [_13.0,_13.0];
_20.0 = _14 as f32;
_22.1.2 = _22.1.0 >= _13.1.0;
_16.1.3 = _22.1.3;
Goto(bb11)
}
bb11 = {
_29.fld1 = [(-5667_i16),(-13042_i16),17926_i16,25563_i16,(-24071_i16)];
_7 = [(-30214_i16),(-14047_i16),(-31356_i16),(-8718_i16),1527_i16];
_11 = [_14,_14];
_29.fld2 = _12.2;
_26 = -_14;
_29.fld5 = _22.1.3 as f64;
_29.fld3 = _13.1.3 | _22.1.3;
_16 = _22;
_29.fld4 = _18;
RET = _8;
_16.1.3 = _13.1.0 as i8;
Goto(bb12)
}
bb12 = {
_16.1.0 = _22.1.0;
Goto(bb13)
}
bb13 = {
_10 = _1;
_12.4.0 = core::ptr::addr_of_mut!(_14);
_16 = (_22.0, _13.1, (*_25));
_16.1.2 = _22.1.2;
_11 = [_26,_26];
_24 = [_22.0,_12.2];
_19 = [(-910447586_i32),(-1430327500_i32),2028213639_i32];
_12.2 = !_22.0;
_12.3 = 1811892094_i32 as u64;
_13.1.1 = core::ptr::addr_of!(_6);
_27 = _20.0 / 1_f32;
_21 = _16.1.2;
_5 = [_14,_14];
_18 = _19;
Goto(bb14)
}
bb14 = {
_5 = [_14,_26];
_24 = [_13.0,_22.0];
_12.1.0 = core::ptr::addr_of_mut!(_1);
_10 = [_14,_14];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(12_usize, 5_usize, Move(_5), 17_usize, Move(_17), 21_usize, Move(_21), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(12_usize, 15_usize, Move(_15), 6_usize, Move(_6), 9_usize, Move(_9), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(12_usize, 14_usize, Move(_14), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: *mut isize,mut _2: u8,mut _3: u8,mut _4: u8,mut _5: *mut isize,mut _6: [isize; 2],mut _7: *mut isize,mut _8: u8,mut _9: (*mut isize, u16, i32),mut _10: u8,mut _11: *const f64) -> [i16; 5] {
mir! {
type RET = [i16; 5];
let _12: (f64,);
let _13: (f64,);
let _14: Adt57;
let _15: [u32; 5];
let _16: f64;
let _17: i128;
let _18: Adt63;
let _19: Adt57;
let _20: Adt59;
let _21: *mut (*mut isize,);
let _22: isize;
let _23: i16;
let _24: [char; 3];
let _25: i32;
let _26: [usize; 2];
let _27: char;
let _28: Adt55;
let _29: Adt48;
let _30: isize;
let _31: Adt52;
let _32: (f64,);
let _33: f32;
let _34: isize;
let _35: bool;
let _36: isize;
let _37: char;
let _38: char;
let _39: u32;
let _40: [usize; 2];
let _41: isize;
let _42: f64;
let _43: f32;
let _44: bool;
let _45: char;
let _46: isize;
let _47: f64;
let _48: Adt55;
let _49: isize;
let _50: u16;
let _51: i8;
let _52: [usize; 2];
let _53: Adt57;
let _54: ((*mut isize,),);
let _55: f64;
let _56: u128;
let _57: f64;
let _58: i8;
let _59: [char; 3];
let _60: ([u32; 5],);
let _61: u16;
let _62: char;
let _63: isize;
let _64: *const *const [usize; 2];
let _65: [i16; 4];
let _66: ();
let _67: ();
{
_7 = _1;
_2 = (-9001396898377998025_i64) as u8;
(*_1) = (-58_isize) * 9223372036854775807_isize;
_1 = core::ptr::addr_of_mut!((*_7));
_14.fld0 = [_9.2,_9.2,_9.2];
_12.0 = _9.2 as f64;
(*_5) = -(-9223372036854775808_isize);
_4 = _10 % 130_u8;
_14.fld0 = [_9.2,_9.2,_9.2];
(*_1) = -(-64_isize);
Goto(bb1)
}
bb1 = {
(*_11) = 814423195_u32 as f64;
RET = [(-17707_i16),(-11946_i16),(-13635_i16),(-18722_i16),(-5201_i16)];
_5 = _7;
_18.fld0 = !_3;
_5 = _1;
_5 = core::ptr::addr_of_mut!((*_1));
Goto(bb2)
}
bb2 = {
_18.fld3.fld0.fld3.2 = _9.2 | _9.2;
_18.fld3.fld2.fld4 = _14.fld0;
_18.fld3.fld0.fld0 = _4 > _4;
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_18.fld1 = '\u{b8ee5}';
_9.1 = !11661_u16;
_18.fld3.fld2.fld2 = 2_usize >> (*_1);
_14 = Adt57 { fld0: _18.fld3.fld2.fld4 };
_18.fld3.fld0.fld1 = _18.fld1;
_18.fld3.fld0.fld0 = false;
_18.fld3.fld2.fld0 = _7;
_20.fld1.3 = (-23_i8) * 4_i8;
_9.2 = !_18.fld3.fld0.fld3.2;
_20.fld1.0 = _18.fld1;
RET = [(-21975_i16),25068_i16,16970_i16,20056_i16,10128_i16];
_20.fld0 = !_18.fld3.fld0.fld0;
_13 = ((*_11),);
_22 = (*_1);
_19 = Adt57 { fld0: _18.fld3.fld2.fld4 };
_1 = _18.fld3.fld2.fld0;
_18.fld3.fld0.fld3.0 = core::ptr::addr_of_mut!((*_7));
_18.fld3.fld0.fld4 = _11;
_15 = [3838991371_u32,1472297934_u32,3712106387_u32,3305850791_u32,1549102142_u32];
Goto(bb3)
}
bb3 = {
_20.fld1.3 = !(-8_i8);
_9.0 = core::ptr::addr_of_mut!(_22);
_10 = !_18.fld0;
_11 = core::ptr::addr_of!(_13.0);
_8 = !_10;
_18.fld3.fld2.fld4 = [_9.2,_9.2,_9.2];
_20.fld2.1.1.2 = !_20.fld0;
_25 = -_18.fld3.fld0.fld3.2;
_19 = _14;
_20.fld2.1.2 = -_12.0;
_29.fld1 = _20.fld1.0;
_18.fld2 = (*_11) as i64;
_18.fld3.fld2.fld3 = !_20.fld1.3;
_29.fld2.0 = (-35562956523289440856025702431228588282_i128) as usize;
_20.fld1.1 = core::ptr::addr_of!(_10);
Goto(bb4)
}
bb4 = {
_18.fld3.fld2.fld2 = !_29.fld2.0;
(*_1) = _22 >> _18.fld3.fld0.fld3.2;
_29.fld2.1 = (_18.fld3.fld0.fld1, _20.fld1.1, _20.fld0, _18.fld3.fld2.fld3);
(*_1) = !_22;
_18.fld3.fld0.fld3.1 = !_9.1;
_31.fld1 = _18.fld3.fld0.fld4;
_20.fld2.2 = _8;
_20.fld2.1.2 = (*_11);
Goto(bb5)
}
bb5 = {
_18.fld3.fld0.fld3.0 = _9.0;
_18.fld0 = _2;
_31.fld0 = [_18.fld3.fld2.fld2,_18.fld3.fld2.fld2];
_24 = [_18.fld3.fld0.fld1,_29.fld1,_29.fld1];
_4 = _20.fld2.2;
_18.fld3.fld2.fld2 = _29.fld2.0 + _29.fld2.0;
_26 = [_18.fld3.fld2.fld2,_18.fld3.fld2.fld2];
(*_5) = -_22;
_9.0 = core::ptr::addr_of_mut!((*_5));
_5 = _18.fld3.fld2.fld0;
_18.fld3.fld0.fld3 = (_5, _9.1, _25);
_20.fld2.3.0 = (*_1) as f32;
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_9.2,_25];
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_9.0 = core::ptr::addr_of_mut!((*_5));
_9.2 = -_25;
_22 = (*_7);
Call(_20.fld2.1.1.2 = fn14((*_5), _20.fld1.0, _18.fld3.fld0.fld0, _2, _29.fld2.0, _18.fld3.fld2.fld4, _20.fld1.1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_31 = Adt52 { fld0: _26,fld1: _11 };
_18.fld3.fld2.fld0 = core::ptr::addr_of_mut!((*_7));
(*_5) = !_22;
_38 = _18.fld3.fld0.fld1;
_1 = _9.0;
_20.fld2.1.1.3 = -_20.fld1.3;
_35 = _20.fld2.1.1.2;
Goto(bb7)
}
bb7 = {
_20.fld2.1.1 = _29.fld2.1;
Call(_23 = core::intrinsics::bswap((-860_i16)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_18.fld3.fld0.fld3.1 = _9.1;
_31 = Adt52 { fld0: _26,fld1: _18.fld3.fld0.fld4 };
Goto(bb9)
}
bb9 = {
(*_5) = _22;
_29.fld0 = [(*_7),_22];
_13.0 = -_12.0;
_18.fld3.fld2.fld1 = [14225_i16,28325_i16,(-21709_i16),21958_i16,4732_i16];
_18.fld0 = _20.fld2.2 & _3;
(*_7) = _22 & _22;
_4 = _3;
_34 = _18.fld1 as isize;
_6 = [(*_1),_34];
_29.fld4 = _34 as u64;
_45 = _29.fld1;
_29.fld2.0 = _18.fld3.fld2.fld2;
_18.fld3.fld0.fld3.2 = _9.2 + _25;
_29.fld1 = _18.fld3.fld0.fld1;
(*_11) = _12.0 * _20.fld2.1.2;
Goto(bb10)
}
bb10 = {
_37 = _45;
_42 = (*_11);
_18.fld3.fld0.fld0 = _35;
_20.fld1.0 = _45;
(*_1) = _22 + _34;
_20.fld2.1.1.3 = (*_11) as i8;
_32 = ((*_11),);
_9.2 = _25;
_43 = _20.fld2.3.0;
Goto(bb11)
}
bb11 = {
_47 = _32.0 / f64::INFINITY;
_48 = Adt55 { fld0: _20.fld1.3 };
_33 = _18.fld2 as f32;
_36 = (*_7) * (*_5);
_20.fld1.1 = core::ptr::addr_of!(_3);
_29.fld2.1.0 = _20.fld2.1.1.0;
Call(_20.fld2.1 = fn16(_18.fld3.fld0.fld3, (*_1), _29.fld2.1, _9.1, _1, _29.fld2.1, _15), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20.fld2.1.1.2 = !_35;
_25 = 1406026653_u32 as i32;
_13.0 = _42;
_29.fld3 = _18.fld2 - _18.fld2;
_20.fld2.1.2 = -_12.0;
_40 = [_29.fld2.0,_18.fld3.fld2.fld2];
_36 = (*_5);
match _20.fld2.1.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
14754627523791419049 => bb19,
_ => bb18
}
}
bb13 = {
_47 = _32.0 / f64::INFINITY;
_48 = Adt55 { fld0: _20.fld1.3 };
_33 = _18.fld2 as f32;
_36 = (*_7) * (*_5);
_20.fld1.1 = core::ptr::addr_of!(_3);
_29.fld2.1.0 = _20.fld2.1.1.0;
Call(_20.fld2.1 = fn16(_18.fld3.fld0.fld3, (*_1), _29.fld2.1, _9.1, _1, _29.fld2.1, _15), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
(*_11) = 814423195_u32 as f64;
RET = [(-17707_i16),(-11946_i16),(-13635_i16),(-18722_i16),(-5201_i16)];
_5 = _7;
_18.fld0 = !_3;
_5 = _1;
_5 = core::ptr::addr_of_mut!((*_1));
Goto(bb2)
}
bb15 = {
_20.fld1.3 = !(-8_i8);
_9.0 = core::ptr::addr_of_mut!(_22);
_10 = !_18.fld0;
_11 = core::ptr::addr_of!(_13.0);
_8 = !_10;
_18.fld3.fld2.fld4 = [_9.2,_9.2,_9.2];
_20.fld2.1.1.2 = !_20.fld0;
_25 = -_18.fld3.fld0.fld3.2;
_19 = _14;
_20.fld2.1.2 = -_12.0;
_29.fld1 = _20.fld1.0;
_18.fld2 = (*_11) as i64;
_18.fld3.fld2.fld3 = !_20.fld1.3;
_29.fld2.0 = (-35562956523289440856025702431228588282_i128) as usize;
_20.fld1.1 = core::ptr::addr_of!(_10);
Goto(bb4)
}
bb16 = {
_18.fld3.fld0.fld3.2 = _9.2 | _9.2;
_18.fld3.fld2.fld4 = _14.fld0;
_18.fld3.fld0.fld0 = _4 > _4;
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_18.fld1 = '\u{b8ee5}';
_9.1 = !11661_u16;
_18.fld3.fld2.fld2 = 2_usize >> (*_1);
_14 = Adt57 { fld0: _18.fld3.fld2.fld4 };
_18.fld3.fld0.fld1 = _18.fld1;
_18.fld3.fld0.fld0 = false;
_18.fld3.fld2.fld0 = _7;
_20.fld1.3 = (-23_i8) * 4_i8;
_9.2 = !_18.fld3.fld0.fld3.2;
_20.fld1.0 = _18.fld1;
RET = [(-21975_i16),25068_i16,16970_i16,20056_i16,10128_i16];
_20.fld0 = !_18.fld3.fld0.fld0;
_13 = ((*_11),);
_22 = (*_1);
_19 = Adt57 { fld0: _18.fld3.fld2.fld4 };
_1 = _18.fld3.fld2.fld0;
_18.fld3.fld0.fld3.0 = core::ptr::addr_of_mut!((*_7));
_18.fld3.fld0.fld4 = _11;
_15 = [3838991371_u32,1472297934_u32,3712106387_u32,3305850791_u32,1549102142_u32];
Goto(bb3)
}
bb17 = {
_20.fld2.1.1 = _29.fld2.1;
Call(_23 = core::intrinsics::bswap((-860_i16)), ReturnTo(bb8), UnwindUnreachable())
}
bb18 = {
_31 = Adt52 { fld0: _26,fld1: _11 };
_18.fld3.fld2.fld0 = core::ptr::addr_of_mut!((*_7));
(*_5) = !_22;
_38 = _18.fld3.fld0.fld1;
_1 = _9.0;
_20.fld2.1.1.3 = -_20.fld1.3;
_35 = _20.fld2.1.1.2;
Goto(bb7)
}
bb19 = {
_13 = (_20.fld2.1.2,);
_29.fld3 = -_18.fld2;
_13 = _32;
_17 = (-126265459684423293637218532991691121706_i128) | (-25433368020355759215208856579294760198_i128);
_24 = [_37,_20.fld2.1.1.0,_20.fld1.0];
_20.fld2.1.1.0 = _18.fld1;
_21 = core::ptr::addr_of_mut!(_54.0);
_29 = Adt48 { fld0: _6,fld1: _18.fld3.fld0.fld1,fld2: _20.fld2.1,fld3: _18.fld2,fld4: 14500722020661017803_u64 };
_9.0 = core::ptr::addr_of_mut!((*_7));
_20.fld1.0 = _18.fld1;
_29.fld2.1.2 = _35;
_54.0 = (_18.fld3.fld2.fld0,);
_61 = _29.fld2.1.3 as u16;
_1 = core::ptr::addr_of_mut!(_34);
_18.fld3.fld2.fld4 = [_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2,_18.fld3.fld0.fld3.2];
_18.fld3.fld0.fld2 = core::ptr::addr_of!(_18.fld3.fld1);
_32 = _13;
_62 = _29.fld1;
_20.fld1.2 = !_20.fld2.1.1.2;
Goto(bb20)
}
bb20 = {
Call(_66 = dump_var(13_usize, 10_usize, Move(_10), 35_usize, Move(_35), 26_usize, Move(_26), 15_usize, Move(_15)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_66 = dump_var(13_usize, 62_usize, Move(_62), 23_usize, Move(_23), 3_usize, Move(_3), 22_usize, Move(_22)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_66 = dump_var(13_usize, 45_usize, Move(_45), 24_usize, Move(_24), 17_usize, Move(_17), 67_usize, _67), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: char,mut _3: bool,mut _4: u8,mut _5: usize,mut _6: [i32; 3],mut _7: *const u8) -> bool {
mir! {
type RET = bool;
let _8: usize;
let _9: (char, *const u8, bool, i8);
let _10: (f32,);
let _11: f64;
let _12: (f32,);
let _13: isize;
let _14: Adt55;
let _15: ([u32; 5],);
let _16: isize;
let _17: u128;
let _18: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _19: char;
let _20: bool;
let _21: isize;
let _22: isize;
let _23: (f64,);
let _24: isize;
let _25: Adt63;
let _26: ();
let _27: ();
{
RET = _3;
_3 = !false;
RET = _3;
_7 = core::ptr::addr_of!((*_7));
_4 = (*_7);
_9.3 = 1557277002_u32 as i8;
_9.0 = _2;
RET = _2 == _2;
_10.0 = 2897145710_u32 as f32;
(*_7) = !_4;
_9.0 = _2;
_10.0 = _5 as f32;
(*_7) = _4 >> _4;
_10.0 = _9.3 as f32;
(*_7) = _5 as u8;
Goto(bb1)
}
bb1 = {
_11 = 186197256040026668764040023459816704573_u128 as f64;
_8 = _5 * _5;
_9 = (_2, _7, _3, 80_i8);
_3 = _4 == _4;
_11 = (-7718_i16) as f64;
_3 = !_9.2;
_7 = core::ptr::addr_of!((*_7));
_4 = !(*_7);
_9.3 = (-5_i8);
_1 = (-9223372036854775808_isize);
_9.0 = _2;
_6 = [1010418630_i32,(-1861562533_i32),(-1042670442_i32)];
_2 = _9.0;
RET = !_3;
_9.3 = 93_i8;
_9.2 = _8 == _8;
_8 = _5 / 1_usize;
(*_7) = _9.3 as u8;
_12 = (_10.0,);
_9.3 = _5 as i8;
_11 = (*_7) as f64;
_9.2 = _3;
_13 = -_1;
_13 = -_1;
_1 = !_13;
Goto(bb2)
}
bb2 = {
_9.3 = 23_i8;
_9 = (_2, _7, _3, (-6_i8));
_10.0 = 72329194352683094384597310844554497308_i128 as f32;
(*_7) = _4;
_14.fld0 = !_9.3;
_2 = _9.0;
_12.0 = _8 as f32;
_3 = !_9.2;
_10.0 = _12.0;
(*_7) = _4 + _4;
RET = _9.2;
_9.2 = _3;
_6 = [(-1077090386_i32),(-1775867563_i32),139278372_i32];
RET = _12.0 <= _12.0;
_4 = !(*_7);
_3 = _14.fld0 == _9.3;
_16 = _13;
_10.0 = _12.0 / (-0.000000000000000000000000000000000000000025170123016202364_f32);
_10 = _12;
_18.4.0 = core::ptr::addr_of_mut!(_13);
_18.4.0 = core::ptr::addr_of_mut!(_13);
_16 = !_13;
_15.0 = [1304295015_u32,1847837911_u32,2675505195_u32,4147831883_u32,113444220_u32];
_11 = _16 as f64;
_7 = core::ptr::addr_of!(_4);
_14 = Adt55 { fld0: _9.3 };
_9 = (_2, _7, _3, _14.fld0);
Call(_7 = fn15(_9.3, _18.4, _12, _18.4, _9, _18.4.0, _15, _5, _12.0, _9.3, _18.4.0, _18.4.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_7) = _11 as u8;
_13 = _1;
_18.0 = core::ptr::addr_of!(_4);
_11 = 4742_u16 as f64;
_14 = Adt55 { fld0: _9.3 };
_12.0 = _10.0;
_18.1.1 = !_3;
_12.0 = -_10.0;
_17 = 49426223999871567463347568452496222688_u128;
_18.1.1 = _9.2;
_6 = [1869577876_i32,457369922_i32,(-1789783757_i32)];
_7 = _18.0;
_18.3 = 8458907118249584747_u64;
_9.3 = _2 as i8;
_9.2 = _18.1.1;
_15.0 = [2030477038_u32,654598586_u32,1735482638_u32,2831565302_u32,2008108580_u32];
_18.4.0 = core::ptr::addr_of_mut!(_1);
Call(_17 = core::intrinsics::bswap(333343580588494290235655947553707166453_u128), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = (_2, _18.0, _18.1.1, _14.fld0);
(*_7) = !228_u8;
_3 = _18.1.1;
_17 = 159405455942943643512112959922492913207_u128;
_18.1.2 = _18.4.0;
_8 = _5;
_3 = (*_7) == _4;
_18.1.1 = _9.2 ^ _9.2;
_18.0 = _7;
_9 = (_2, _7, _18.1.1, _14.fld0);
_9 = (_2, _7, _18.1.1, _14.fld0);
_5 = !_8;
RET = !_18.1.1;
_17 = (-61723429520841793584793167346132915673_i128) as u128;
_19 = _2;
_16 = _1;
_5 = _8 << _13;
_12.0 = _10.0;
_18.3 = _14.fld0 as u64;
Goto(bb5)
}
bb5 = {
Call(_26 = dump_var(14_usize, 5_usize, Move(_5), 16_usize, Move(_16), 13_usize, Move(_13), 17_usize, Move(_17)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_26 = dump_var(14_usize, 6_usize, Move(_6), 3_usize, Move(_3), 27_usize, _27, 27_usize, _27), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: i8,mut _2: (*mut isize,),mut _3: (f32,),mut _4: (*mut isize,),mut _5: (char, *const u8, bool, i8),mut _6: *mut isize,mut _7: ([u32; 5],),mut _8: usize,mut _9: f32,mut _10: i8,mut _11: *mut isize,mut _12: *mut isize) -> *const u8 {
mir! {
type RET = *const u8;
let _13: Adt59;
let _14: f32;
let _15: u64;
let _16: i16;
let _17: u16;
let _18: isize;
let _19: Adt62;
let _20: (*mut isize, u16, i32);
let _21: isize;
let _22: [u64; 1];
let _23: [u64; 1];
let _24: ();
let _25: ();
{
_3.0 = (-5977382632483896651_i64) as f32;
(*_11) = 1108350023_u32 as isize;
_12 = _4.0;
_13.fld2.1.2 = 235812945057849828811412045720374658548_u128 as f64;
_7.0 = [1581684236_u32,3272415207_u32,1841182129_u32,4029319651_u32,14016828_u32];
Goto(bb1)
}
bb1 = {
_2.0 = core::ptr::addr_of_mut!((*_6));
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431768211450 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = core::ptr::addr_of!(_13.fld2.2);
_13.fld2.2 = 23_u8 >> _10;
_13.fld2.1.0 = _8 - _8;
_5.2 = false;
_2 = _4;
Goto(bb10)
}
bb10 = {
_13.fld2.1.2 = 17915660431817851475_u64 as f64;
_13.fld1.0 = _5.0;
_2 = (_4.0,);
_1 = 92256090099507822576393188423632186168_i128 as i8;
_13.fld2.1.1.2 = _5.2;
_5.3 = _13.fld2.1.1.2 as i8;
_11 = core::ptr::addr_of_mut!((*_12));
_1 = _10;
(*RET) = 95_u8;
(*_11) = -9223372036854775807_isize;
RET = _5.1;
_13.fld2.1.2 = _8 as f64;
_13.fld2.1.2 = (-23425_i16) as f64;
_10 = !_1;
(*RET) = _13.fld2.2 % 120_u8;
(*RET) = _13.fld2.2 & _13.fld2.2;
_13.fld2.1.1.3 = 114593460_i32 as i8;
_13.fld2.3 = (_9,);
match _13.fld2.2 {
0 => bb9,
1 => bb2,
95 => bb11,
_ => bb3
}
}
bb11 = {
_13.fld2.1.1.0 = _5.0;
_19.fld5 = [500214712_i32,1242383730_i32,(-624723814_i32)];
match _1 {
0 => bb6,
1 => bb9,
2 => bb4,
3 => bb12,
340282366920938463463374607431768211450 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_19.fld2.0 = -_13.fld2.3.0;
_5.0 = _13.fld1.0;
_11 = core::ptr::addr_of_mut!((*_11));
_6 = _12;
_19.fld3 = [(-12976_i16),(-24948_i16),15245_i16,(-6807_i16),(-6729_i16)];
_19.fld4 = [_13.fld2.1.1.0,_13.fld2.1.1.0,_13.fld2.1.1.0];
_20.0 = core::ptr::addr_of_mut!((*_11));
_14 = 295933279885560829678266111449110360828_u128 as f32;
_20 = (_12, 4937_u16, (-416334211_i32));
_13.fld1.1 = core::ptr::addr_of!((*RET));
_7.0 = [3880851691_u32,3868823302_u32,171932405_u32,305768957_u32,2236665707_u32];
_18 = -(*_6);
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(15_usize, 1_usize, Move(_1), 10_usize, Move(_10), 25_usize, _25, 25_usize, _25), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: (*mut isize, u16, i32),mut _2: isize,mut _3: (char, *const u8, bool, i8),mut _4: u16,mut _5: *mut isize,mut _6: (char, *const u8, bool, i8),mut _7: [u32; 5]) -> (usize, (char, *const u8, bool, i8), f64) {
mir! {
type RET = (usize, (char, *const u8, bool, i8), f64);
let _8: ([u32; 5],);
let _9: [u64; 1];
let _10: Adt49;
let _11: isize;
let _12: Adt57;
let _13: u32;
let _14: u128;
let _15: [i64; 5];
let _16: i16;
let _17: u32;
let _18: [u32; 5];
let _19: Adt59;
let _20: [u32; 5];
let _21: i128;
let _22: *const u8;
let _23: u8;
let _24: isize;
let _25: f64;
let _26: bool;
let _27: isize;
let _28: ();
let _29: ();
{
RET.1 = (_6.0, _3.1, _3.2, _6.3);
_3 = (_6.0, _6.1, _6.2, _6.3);
RET.1 = _3;
RET.0 = 14754627523791419049_usize;
_4 = _1.1;
RET.2 = (*_5) as f64;
_3.0 = _6.0;
_10.fld1.1.1 = _2 >= _2;
_10.fld1.1.2 = core::ptr::addr_of_mut!((*_5));
_8.0 = [4117686200_u32,2279931193_u32,2475229793_u32,2100558096_u32,3909995755_u32];
Goto(bb1)
}
bb1 = {
_10.fld1.0 = _6.1;
RET.1.2 = !_10.fld1.1.1;
_10.fld0 = [_3.0,_3.0,_6.0];
_11 = (*_5);
_17 = 2188237165_u32 | 1480621896_u32;
_10.fld1.4.0 = core::ptr::addr_of_mut!(_11);
_15 = [(-5562776803987069012_i64),3719251164497958201_i64,5458115254802606713_i64,7765072994220660410_i64,8917382565225998892_i64];
_16 = (-21051_i16) | (-3776_i16);
_1.1 = _4;
_10.fld0 = [_3.0,_3.0,_6.0];
_3 = (_6.0, _10.fld1.0, _10.fld1.1.1, _6.3);
_8 = (_7,);
_15 = [(-4850353294465111102_i64),5943764721858898072_i64,279478358964168642_i64,(-7263451140260112629_i64),(-7585090314422032219_i64)];
_3.3 = -_6.3;
RET.1.3 = _6.3;
_10.fld1.1.2 = core::ptr::addr_of_mut!(_11);
_6 = (_3.0, _10.fld1.0, _3.2, _3.3);
Goto(bb2)
}
bb2 = {
_6.1 = _10.fld1.0;
RET.1 = (_3.0, _10.fld1.0, _6.2, _6.3);
_16 = (-19417_i16);
_12.fld0 = [_1.2,_1.2,_1.2];
_10.fld1.1.2 = core::ptr::addr_of_mut!(_11);
RET.1.1 = core::ptr::addr_of!(_19.fld2.2);
_19.fld2.1.2 = _4 as f64;
_10.fld1.3 = 14719439945779537385_u64;
_19.fld2.1.1.3 = 8817909910925809536_i64 as i8;
RET.1.2 = _10.fld1.1.1;
RET.1.2 = _6.2;
(*_5) = _2;
RET.1.1 = _6.1;
_19.fld1.0 = _3.0;
Goto(bb3)
}
bb3 = {
_20 = [_17,_17,_17,_17,_17];
_19.fld2.1.1.0 = _19.fld1.0;
RET.2 = _19.fld2.1.2 * _19.fld2.1.2;
_10.fld1.2 = !6835793441621796557_usize;
_19.fld2.1.1.0 = _19.fld1.0;
_10.fld1.3 = 12477553211510558090_u64;
Goto(bb4)
}
bb4 = {
_1.1 = _4 | _4;
match _16 {
340282366920938463463374607431768192039 => bb6,
_ => bb5
}
}
bb5 = {
_20 = [_17,_17,_17,_17,_17];
_19.fld2.1.1.0 = _19.fld1.0;
RET.2 = _19.fld2.1.2 * _19.fld2.1.2;
_10.fld1.2 = !6835793441621796557_usize;
_19.fld2.1.1.0 = _19.fld1.0;
_10.fld1.3 = 12477553211510558090_u64;
Goto(bb4)
}
bb6 = {
_3 = _6;
RET.1.3 = _19.fld2.1.1.3;
_8.0 = _7;
_19.fld1.3 = _19.fld2.1.1.3;
_6.0 = _19.fld1.0;
_6.3 = !_3.3;
_9 = [_10.fld1.3];
RET.1 = (_6.0, _3.1, _10.fld1.1.1, _6.3);
Call(_19 = fn17(_20, _10.fld1.4.0, _10.fld1.4.0, _3.1, _1, _6.1, _5, _7, _6.3, _10.fld1.1.1, (*_5), _8, _10.fld1.4.0, _8.0, _8, _12), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_19.fld1 = _19.fld2.1.1;
RET.1.2 = _19.fld2.1.1.2;
_6 = (_19.fld2.1.1.0, _10.fld1.0, _19.fld2.1.1.2, _19.fld2.1.1.3);
RET.1 = _19.fld1;
_1 = (_5, _4, (-1258537622_i32));
_6.1 = core::ptr::addr_of!(_23);
_1.0 = core::ptr::addr_of_mut!(_11);
_19.fld2.1.2 = _17 as f64;
_4 = _1.1 >> _19.fld1.3;
_10.fld1.3 = 14934623645829887941_u64 >> _11;
_16 = 241476376305570970415697357052380577383_u128 as i16;
_19.fld2.1.2 = _19.fld2.3.0 as f64;
_3.3 = _19.fld2.3.0 as i8;
_19.fld1 = (_6.0, _3.1, _6.2, _6.3);
RET.1.1 = core::ptr::addr_of!(_19.fld2.2);
_10.fld2.0 = _19.fld2.1.2 + _19.fld2.1.2;
_13 = _17;
Goto(bb8)
}
bb8 = {
Call(_28 = dump_var(16_usize, 15_usize, Move(_15), 13_usize, Move(_13), 2_usize, Move(_2), 8_usize, Move(_8)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_28 = dump_var(16_usize, 20_usize, Move(_20), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [u32; 5],mut _2: *mut isize,mut _3: *mut isize,mut _4: *const u8,mut _5: (*mut isize, u16, i32),mut _6: *const u8,mut _7: *mut isize,mut _8: [u32; 5],mut _9: i8,mut _10: bool,mut _11: isize,mut _12: ([u32; 5],),mut _13: *mut isize,mut _14: [u32; 5],mut _15: ([u32; 5],),mut _16: Adt57) -> Adt59 {
mir! {
type RET = Adt59;
let _17: isize;
let _18: char;
let _19: f64;
let _20: isize;
let _21: i64;
let _22: f32;
let _23: (*mut isize,);
let _24: f64;
let _25: [i16; 5];
let _26: Adt57;
let _27: Adt49;
let _28: char;
let _29: (usize, (char, *const u8, bool, i8), f64);
let _30: *const u8;
let _31: [char; 3];
let _32: (f64,);
let _33: Adt55;
let _34: bool;
let _35: (f32,);
let _36: ([u32; 5],);
let _37: u16;
let _38: ([u32; 5],);
let _39: u8;
let _40: [u32; 5];
let _41: usize;
let _42: [i64; 5];
let _43: Adt57;
let _44: f64;
let _45: u32;
let _46: i8;
let _47: [u32; 5];
let _48: [i32; 3];
let _49: u128;
let _50: [i32; 3];
let _51: f32;
let _52: [i16; 4];
let _53: isize;
let _54: bool;
let _55: [char; 3];
let _56: u64;
let _57: u16;
let _58: isize;
let _59: u128;
let _60: bool;
let _61: u16;
let _62: i8;
let _63: isize;
let _64: isize;
let _65: (*mut [isize; 2], bool, *mut isize);
let _66: Adt59;
let _67: u128;
let _68: f64;
let _69: *const u128;
let _70: u64;
let _71: isize;
let _72: char;
let _73: Adt48;
let _74: bool;
let _75: (char, *const u8, bool, i8);
let _76: [i64; 5];
let _77: i8;
let _78: ((*mut isize,),);
let _79: [i16; 5];
let _80: [u64; 1];
let _81: bool;
let _82: Adt58;
let _83: f64;
let _84: u64;
let _85: u8;
let _86: isize;
let _87: [i16; 5];
let _88: *mut [isize; 2];
let _89: u128;
let _90: *mut bool;
let _91: u64;
let _92: Adt64;
let _93: [i16; 4];
let _94: Adt63;
let _95: *mut (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _96: i16;
let _97: [i16; 4];
let _98: [i32; 3];
let _99: i8;
let _100: bool;
let _101: [usize; 2];
let _102: u32;
let _103: (char, *const u8, bool, i8);
let _104: ((*mut isize,),);
let _105: ([u32; 5],);
let _106: [i32; 3];
let _107: [i16; 5];
let _108: isize;
let _109: (f32,);
let _110: Adt56;
let _111: [usize; 2];
let _112: ([u32; 5],);
let _113: f32;
let _114: *mut (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,));
let _115: bool;
let _116: char;
let _117: Adt62;
let _118: i64;
let _119: (usize, (char, *const u8, bool, i8), f64);
let _120: ();
let _121: ();
{
RET.fld2.1.1.1 = core::ptr::addr_of!((*_6));
RET.fld1.0 = '\u{b2c2b}';
RET.fld1.2 = _5.2 <= _5.2;
RET.fld1 = ('\u{20a05}', _4, _10, _9);
RET.fld2.1.1 = ('\u{f3b8f}', _4, _10, _9);
Goto(bb1)
}
bb1 = {
RET.fld2.1.1.3 = -_9;
RET.fld1.1 = core::ptr::addr_of!((*_4));
(*_2) = _11 - _11;
RET.fld1.2 = _5.2 == _5.2;
RET.fld2.1.1.0 = '\u{1455b}';
_9 = 28_i8 & (-19_i8);
_5 = (_3, 13748_u16, (-62671700_i32));
(*_7) = (*_3);
RET.fld2.1.2 = 9909_i16 as f64;
RET.fld2.1.2 = (*_6) as f64;
(*_13) = (*_7) + (*_7);
_16.fld0 = [_5.2,_5.2,_5.2];
RET.fld2.1.1 = ('\u{9a199}', _4, _10, _9);
_7 = _3;
RET.fld1.0 = '\u{3cefa}';
(*_6) = !210_u8;
(*_2) = _10 as isize;
_5.1 = !10168_u16;
(*_2) = -_11;
_12 = _15;
_10 = !true;
_17 = (*_7);
_3 = _13;
(*_6) = 83_u8 + 113_u8;
(*_3) = _17;
Goto(bb2)
}
bb2 = {
(*_4) = 130712719526645059415035131995380784713_u128 as u8;
RET.fld2.1.1.2 = (*_2) > (*_2);
RET.fld2.1.2 = (-25228_i16) as f64;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_15.0 = [669233417_u32,73206633_u32,2648420251_u32,1994716136_u32,1983244007_u32];
_20 = _11 ^ (*_2);
_6 = _4;
RET.fld0 = (*_4) != (*_4);
_5.0 = core::ptr::addr_of_mut!(_11);
RET.fld2.1.1.1 = _6;
_19 = 66012991854343168598383690778676182766_i128 as f64;
_8 = [1042267487_u32,1752075991_u32,288755258_u32,1829280122_u32,3606356905_u32];
RET.fld2.1.2 = (*_4) as f64;
_3 = core::ptr::addr_of_mut!((*_13));
_12 = (_8,);
RET.fld1 = ('\u{9e058}', _6, _10, _9);
Goto(bb3)
}
bb3 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb4 = {
RET.fld2.1.1.0 = _18;
_25 = [2985_i16,(-14432_i16),1881_i16,(-17159_i16),(-5367_i16)];
_6 = core::ptr::addr_of!((*_4));
_27.fld1.4 = (_7,);
RET.fld2.3.0 = (*_6) as f32;
RET.fld0 = _10;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_3));
_27.fld1.2 = !3_usize;
_14 = _12.0;
RET.fld2.1.1.0 = _18;
_27.fld1.1.1 = (*_13) > (*_7);
RET.fld1.3 = _9;
_27.fld2.0 = _24 + _24;
Goto(bb5)
}
bb5 = {
_15 = _12;
_26 = _16;
_3 = core::ptr::addr_of_mut!((*_2));
_29.1.0 = _18;
_27.fld3 = core::ptr::addr_of_mut!(_10);
_27.fld1.1.1 = _10;
RET.fld2.1.1 = (_18, _6, _27.fld1.1.1, _9);
RET.fld2.1.1.2 = (*_3) <= (*_7);
RET.fld2.1.2 = _24 / f64::NEG_INFINITY;
RET.fld2.1.2 = -_24;
_3 = _5.0;
Call(_27.fld1.1.2 = fn18(_27.fld1.4.0, _7, (*_13)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = _14;
_12.0 = _14;
_5 = (_27.fld1.1.2, 44668_u16, 448918670_i32);
RET.fld1.2 = !_10;
_27.fld1.0 = core::ptr::addr_of!((*_6));
_27.fld0 = [_18,_29.1.0,_29.1.0];
_27.fld1.1.2 = _5.0;
_17 = (*_7);
_31 = _27.fld0;
_31 = [_29.1.0,_18,_29.1.0];
_28 = _29.1.0;
Goto(bb7)
}
bb7 = {
(*_13) = -(*_3);
RET.fld2.1.1.0 = _28;
RET.fld2.1.1.1 = _27.fld1.0;
(*_2) = _5.2 as isize;
_25 = [(-6659_i16),11741_i16,20895_i16,(-12217_i16),11476_i16];
RET.fld1.1 = core::ptr::addr_of!((*_6));
_20 = (*_13) - (*_2);
match _5.2 {
0 => bb4,
1 => bb3,
2 => bb8,
3 => bb9,
4 => bb10,
448918670 => bb12,
_ => bb11
}
}
bb8 = {
_8 = _14;
_12.0 = _14;
_5 = (_27.fld1.1.2, 44668_u16, 448918670_i32);
RET.fld1.2 = !_10;
_27.fld1.0 = core::ptr::addr_of!((*_6));
_27.fld0 = [_18,_29.1.0,_29.1.0];
_27.fld1.1.2 = _5.0;
_17 = (*_7);
_31 = _27.fld0;
_31 = [_29.1.0,_18,_29.1.0];
_28 = _29.1.0;
Goto(bb7)
}
bb9 = {
RET.fld2.1.1.3 = -_9;
RET.fld1.1 = core::ptr::addr_of!((*_4));
(*_2) = _11 - _11;
RET.fld1.2 = _5.2 == _5.2;
RET.fld2.1.1.0 = '\u{1455b}';
_9 = 28_i8 & (-19_i8);
_5 = (_3, 13748_u16, (-62671700_i32));
(*_7) = (*_3);
RET.fld2.1.2 = 9909_i16 as f64;
RET.fld2.1.2 = (*_6) as f64;
(*_13) = (*_7) + (*_7);
_16.fld0 = [_5.2,_5.2,_5.2];
RET.fld2.1.1 = ('\u{9a199}', _4, _10, _9);
_7 = _3;
RET.fld1.0 = '\u{3cefa}';
(*_6) = !210_u8;
(*_2) = _10 as isize;
_5.1 = !10168_u16;
(*_2) = -_11;
_12 = _15;
_10 = !true;
_17 = (*_7);
_3 = _13;
(*_6) = 83_u8 + 113_u8;
(*_3) = _17;
Goto(bb2)
}
bb10 = {
RET.fld2.1.1.0 = _18;
_25 = [2985_i16,(-14432_i16),1881_i16,(-17159_i16),(-5367_i16)];
_6 = core::ptr::addr_of!((*_4));
_27.fld1.4 = (_7,);
RET.fld2.3.0 = (*_6) as f32;
RET.fld0 = _10;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_3));
_27.fld1.2 = !3_usize;
_14 = _12.0;
RET.fld2.1.1.0 = _18;
_27.fld1.1.1 = (*_13) > (*_7);
RET.fld1.3 = _9;
_27.fld2.0 = _24 + _24;
Goto(bb5)
}
bb11 = {
(*_4) = 130712719526645059415035131995380784713_u128 as u8;
RET.fld2.1.1.2 = (*_2) > (*_2);
RET.fld2.1.2 = (-25228_i16) as f64;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_15.0 = [669233417_u32,73206633_u32,2648420251_u32,1994716136_u32,1983244007_u32];
_20 = _11 ^ (*_2);
_6 = _4;
RET.fld0 = (*_4) != (*_4);
_5.0 = core::ptr::addr_of_mut!(_11);
RET.fld2.1.1.1 = _6;
_19 = 66012991854343168598383690778676182766_i128 as f64;
_8 = [1042267487_u32,1752075991_u32,288755258_u32,1829280122_u32,3606356905_u32];
RET.fld2.1.2 = (*_4) as f64;
_3 = core::ptr::addr_of_mut!((*_13));
_12 = (_8,);
RET.fld1 = ('\u{9e058}', _6, _10, _9);
Goto(bb3)
}
bb12 = {
_25 = [22563_i16,28308_i16,(-29812_i16),3457_i16,(-19316_i16)];
RET.fld1.2 = _10;
RET.fld2.1.0 = _27.fld1.2 / 3_usize;
(*_6) = 68_u8 & 241_u8;
_27.fld1.2 = 1_usize % 17556424914530853909_usize;
_13 = core::ptr::addr_of_mut!((*_13));
RET.fld2.1.1.2 = _27.fld1.1.1;
RET.fld2.1.1 = (_28, _6, _10, _9);
_5 = (_13, 21811_u16, 87603505_i32);
_22 = _9 as f32;
_29.1 = (_18, _4, _27.fld1.1.1, _9);
RET.fld1.2 = !_10;
RET.fld2.3.0 = _22;
_29.0 = _20 as usize;
_29.1.0 = _28;
_6 = core::ptr::addr_of!((*_4));
RET.fld2.2 = _27.fld2.0 as u8;
_38 = _12;
_37 = _5.1;
_34 = _10 | _29.1.2;
RET.fld0 = _29.1.2 ^ _34;
_16.fld0 = [_5.2,_5.2,_5.2];
match _37 {
0 => bb7,
1 => bb10,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
21811 => bb19,
_ => bb18
}
}
bb13 = {
RET.fld2.1.1.0 = _18;
_25 = [2985_i16,(-14432_i16),1881_i16,(-17159_i16),(-5367_i16)];
_6 = core::ptr::addr_of!((*_4));
_27.fld1.4 = (_7,);
RET.fld2.3.0 = (*_6) as f32;
RET.fld0 = _10;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_3));
_27.fld1.2 = !3_usize;
_14 = _12.0;
RET.fld2.1.1.0 = _18;
_27.fld1.1.1 = (*_13) > (*_7);
RET.fld1.3 = _9;
_27.fld2.0 = _24 + _24;
Goto(bb5)
}
bb14 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb15 = {
RET.fld2.1.1.3 = -_9;
RET.fld1.1 = core::ptr::addr_of!((*_4));
(*_2) = _11 - _11;
RET.fld1.2 = _5.2 == _5.2;
RET.fld2.1.1.0 = '\u{1455b}';
_9 = 28_i8 & (-19_i8);
_5 = (_3, 13748_u16, (-62671700_i32));
(*_7) = (*_3);
RET.fld2.1.2 = 9909_i16 as f64;
RET.fld2.1.2 = (*_6) as f64;
(*_13) = (*_7) + (*_7);
_16.fld0 = [_5.2,_5.2,_5.2];
RET.fld2.1.1 = ('\u{9a199}', _4, _10, _9);
_7 = _3;
RET.fld1.0 = '\u{3cefa}';
(*_6) = !210_u8;
(*_2) = _10 as isize;
_5.1 = !10168_u16;
(*_2) = -_11;
_12 = _15;
_10 = !true;
_17 = (*_7);
_3 = _13;
(*_6) = 83_u8 + 113_u8;
(*_3) = _17;
Goto(bb2)
}
bb16 = {
_8 = _14;
_12.0 = _14;
_5 = (_27.fld1.1.2, 44668_u16, 448918670_i32);
RET.fld1.2 = !_10;
_27.fld1.0 = core::ptr::addr_of!((*_6));
_27.fld0 = [_18,_29.1.0,_29.1.0];
_27.fld1.1.2 = _5.0;
_17 = (*_7);
_31 = _27.fld0;
_31 = [_29.1.0,_18,_29.1.0];
_28 = _29.1.0;
Goto(bb7)
}
bb17 = {
(*_13) = -(*_3);
RET.fld2.1.1.0 = _28;
RET.fld2.1.1.1 = _27.fld1.0;
(*_2) = _5.2 as isize;
_25 = [(-6659_i16),11741_i16,20895_i16,(-12217_i16),11476_i16];
RET.fld1.1 = core::ptr::addr_of!((*_6));
_20 = (*_13) - (*_2);
match _5.2 {
0 => bb4,
1 => bb3,
2 => bb8,
3 => bb9,
4 => bb10,
448918670 => bb12,
_ => bb11
}
}
bb18 = {
_8 = _14;
_12.0 = _14;
_5 = (_27.fld1.1.2, 44668_u16, 448918670_i32);
RET.fld1.2 = !_10;
_27.fld1.0 = core::ptr::addr_of!((*_6));
_27.fld0 = [_18,_29.1.0,_29.1.0];
_27.fld1.1.2 = _5.0;
_17 = (*_7);
_31 = _27.fld0;
_31 = [_29.1.0,_18,_29.1.0];
_28 = _29.1.0;
Goto(bb7)
}
bb19 = {
_1 = [2952523063_u32,2004865891_u32,150297051_u32,1863658753_u32,4201617784_u32];
(*_7) = -_20;
(*_2) = _20;
RET.fld2.1.1 = (_29.1.0, _29.1.1, _34, _9);
RET.fld2.3 = (_22,);
_36.0 = _12.0;
RET.fld1.2 = _37 < _5.1;
_10 = _27.fld1.1.1;
RET.fld2.1.2 = _27.fld2.0;
Goto(bb20)
}
bb20 = {
_5.2 = _9 as i32;
_11 = !(*_13);
(*_6) = !124_u8;
_30 = _4;
RET.fld2.1.1.2 = _29.1.2;
_32.0 = _27.fld2.0;
RET.fld2.2 = (*_4) >> _37;
RET.fld1 = _29.1;
RET.fld2.1.2 = _32.0;
_42 = [(-7864484669796158888_i64),6356264816203657009_i64,(-2370641037091486210_i64),933702139475062465_i64,(-4052936110020367414_i64)];
_29.1.0 = _18;
_9 = _29.1.3;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_29.1.1 = _4;
RET.fld2.1.1.1 = _29.1.1;
_29.0 = _27.fld1.2;
_43.fld0 = [_5.2,_5.2,_5.2];
_46 = _29.1.3 & _29.1.3;
_27.fld2.0 = _29.0 as f64;
_42 = [4377703344638491771_i64,(-3783254979085266184_i64),445975070372696981_i64,(-8227159027054151314_i64),7703064846497310360_i64];
_34 = !_27.fld1.1.1;
_37 = _19 as u16;
_29.2 = -_32.0;
_11 = 3279941447313991148_i64 as isize;
match _5.1 {
0 => bb1,
1 => bb19,
21811 => bb22,
_ => bb21
}
}
bb21 = {
(*_4) = 130712719526645059415035131995380784713_u128 as u8;
RET.fld2.1.1.2 = (*_2) > (*_2);
RET.fld2.1.2 = (-25228_i16) as f64;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_15.0 = [669233417_u32,73206633_u32,2648420251_u32,1994716136_u32,1983244007_u32];
_20 = _11 ^ (*_2);
_6 = _4;
RET.fld0 = (*_4) != (*_4);
_5.0 = core::ptr::addr_of_mut!(_11);
RET.fld2.1.1.1 = _6;
_19 = 66012991854343168598383690778676182766_i128 as f64;
_8 = [1042267487_u32,1752075991_u32,288755258_u32,1829280122_u32,3606356905_u32];
RET.fld2.1.2 = (*_4) as f64;
_3 = core::ptr::addr_of_mut!((*_13));
_12 = (_8,);
RET.fld1 = ('\u{9e058}', _6, _10, _9);
Goto(bb3)
}
bb22 = {
match _5.1 {
0 => bb18,
1 => bb23,
21811 => bb25,
_ => bb24
}
}
bb23 = {
_25 = [22563_i16,28308_i16,(-29812_i16),3457_i16,(-19316_i16)];
RET.fld1.2 = _10;
RET.fld2.1.0 = _27.fld1.2 / 3_usize;
(*_6) = 68_u8 & 241_u8;
_27.fld1.2 = 1_usize % 17556424914530853909_usize;
_13 = core::ptr::addr_of_mut!((*_13));
RET.fld2.1.1.2 = _27.fld1.1.1;
RET.fld2.1.1 = (_28, _6, _10, _9);
_5 = (_13, 21811_u16, 87603505_i32);
_22 = _9 as f32;
_29.1 = (_18, _4, _27.fld1.1.1, _9);
RET.fld1.2 = !_10;
RET.fld2.3.0 = _22;
_29.0 = _20 as usize;
_29.1.0 = _28;
_6 = core::ptr::addr_of!((*_4));
RET.fld2.2 = _27.fld2.0 as u8;
_38 = _12;
_37 = _5.1;
_34 = _10 | _29.1.2;
RET.fld0 = _29.1.2 ^ _34;
_16.fld0 = [_5.2,_5.2,_5.2];
match _37 {
0 => bb7,
1 => bb10,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
21811 => bb19,
_ => bb18
}
}
bb24 = {
(*_13) = -(*_3);
RET.fld2.1.1.0 = _28;
RET.fld2.1.1.1 = _27.fld1.0;
(*_2) = _5.2 as isize;
_25 = [(-6659_i16),11741_i16,20895_i16,(-12217_i16),11476_i16];
RET.fld1.1 = core::ptr::addr_of!((*_6));
_20 = (*_13) - (*_2);
match _5.2 {
0 => bb4,
1 => bb3,
2 => bb8,
3 => bb9,
4 => bb10,
448918670 => bb12,
_ => bb11
}
}
bb25 = {
_27.fld1.4.0 = _5.0;
RET.fld2.1.1.0 = _29.1.0;
RET.fld2.1.1.3 = _9 & _29.1.3;
_46 = (*_7) as i8;
_47 = [4030306773_u32,1724817255_u32,1669387409_u32,1652224552_u32,1088189425_u32];
_23.0 = _7;
_29.0 = _27.fld1.2 - _27.fld1.2;
_41 = _29.0;
_41 = _27.fld1.2 | _27.fld1.2;
RET.fld2.1.0 = _29.0;
_21 = _37 as i64;
match _5.1 {
0 => bb19,
1 => bb26,
2 => bb27,
3 => bb28,
4 => bb29,
5 => bb30,
6 => bb31,
21811 => bb33,
_ => bb32
}
}
bb26 = {
RET.fld2.1.1.3 = -_9;
RET.fld1.1 = core::ptr::addr_of!((*_4));
(*_2) = _11 - _11;
RET.fld1.2 = _5.2 == _5.2;
RET.fld2.1.1.0 = '\u{1455b}';
_9 = 28_i8 & (-19_i8);
_5 = (_3, 13748_u16, (-62671700_i32));
(*_7) = (*_3);
RET.fld2.1.2 = 9909_i16 as f64;
RET.fld2.1.2 = (*_6) as f64;
(*_13) = (*_7) + (*_7);
_16.fld0 = [_5.2,_5.2,_5.2];
RET.fld2.1.1 = ('\u{9a199}', _4, _10, _9);
_7 = _3;
RET.fld1.0 = '\u{3cefa}';
(*_6) = !210_u8;
(*_2) = _10 as isize;
_5.1 = !10168_u16;
(*_2) = -_11;
_12 = _15;
_10 = !true;
_17 = (*_7);
_3 = _13;
(*_6) = 83_u8 + 113_u8;
(*_3) = _17;
Goto(bb2)
}
bb27 = {
(*_13) = -(*_3);
RET.fld2.1.1.0 = _28;
RET.fld2.1.1.1 = _27.fld1.0;
(*_2) = _5.2 as isize;
_25 = [(-6659_i16),11741_i16,20895_i16,(-12217_i16),11476_i16];
RET.fld1.1 = core::ptr::addr_of!((*_6));
_20 = (*_13) - (*_2);
match _5.2 {
0 => bb4,
1 => bb3,
2 => bb8,
3 => bb9,
4 => bb10,
448918670 => bb12,
_ => bb11
}
}
bb28 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb29 = {
(*_4) = 130712719526645059415035131995380784713_u128 as u8;
RET.fld2.1.1.2 = (*_2) > (*_2);
RET.fld2.1.2 = (-25228_i16) as f64;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_15.0 = [669233417_u32,73206633_u32,2648420251_u32,1994716136_u32,1983244007_u32];
_20 = _11 ^ (*_2);
_6 = _4;
RET.fld0 = (*_4) != (*_4);
_5.0 = core::ptr::addr_of_mut!(_11);
RET.fld2.1.1.1 = _6;
_19 = 66012991854343168598383690778676182766_i128 as f64;
_8 = [1042267487_u32,1752075991_u32,288755258_u32,1829280122_u32,3606356905_u32];
RET.fld2.1.2 = (*_4) as f64;
_3 = core::ptr::addr_of_mut!((*_13));
_12 = (_8,);
RET.fld1 = ('\u{9e058}', _6, _10, _9);
Goto(bb3)
}
bb30 = {
_5.2 = _9 as i32;
_11 = !(*_13);
(*_6) = !124_u8;
_30 = _4;
RET.fld2.1.1.2 = _29.1.2;
_32.0 = _27.fld2.0;
RET.fld2.2 = (*_4) >> _37;
RET.fld1 = _29.1;
RET.fld2.1.2 = _32.0;
_42 = [(-7864484669796158888_i64),6356264816203657009_i64,(-2370641037091486210_i64),933702139475062465_i64,(-4052936110020367414_i64)];
_29.1.0 = _18;
_9 = _29.1.3;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_29.1.1 = _4;
RET.fld2.1.1.1 = _29.1.1;
_29.0 = _27.fld1.2;
_43.fld0 = [_5.2,_5.2,_5.2];
_46 = _29.1.3 & _29.1.3;
_27.fld2.0 = _29.0 as f64;
_42 = [4377703344638491771_i64,(-3783254979085266184_i64),445975070372696981_i64,(-8227159027054151314_i64),7703064846497310360_i64];
_34 = !_27.fld1.1.1;
_37 = _19 as u16;
_29.2 = -_32.0;
_11 = 3279941447313991148_i64 as isize;
match _5.1 {
0 => bb1,
1 => bb19,
21811 => bb22,
_ => bb21
}
}
bb31 = {
_1 = [2952523063_u32,2004865891_u32,150297051_u32,1863658753_u32,4201617784_u32];
(*_7) = -_20;
(*_2) = _20;
RET.fld2.1.1 = (_29.1.0, _29.1.1, _34, _9);
RET.fld2.3 = (_22,);
_36.0 = _12.0;
RET.fld1.2 = _37 < _5.1;
_10 = _27.fld1.1.1;
RET.fld2.1.2 = _27.fld2.0;
Goto(bb20)
}
bb32 = {
RET.fld2.1.1.0 = _18;
_25 = [2985_i16,(-14432_i16),1881_i16,(-17159_i16),(-5367_i16)];
_6 = core::ptr::addr_of!((*_4));
_27.fld1.4 = (_7,);
RET.fld2.3.0 = (*_6) as f32;
RET.fld0 = _10;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_3));
_27.fld1.2 = !3_usize;
_14 = _12.0;
RET.fld2.1.1.0 = _18;
_27.fld1.1.1 = (*_13) > (*_7);
RET.fld1.3 = _9;
_27.fld2.0 = _24 + _24;
Goto(bb5)
}
bb33 = {
RET.fld2.1.1.2 = !_27.fld1.1.1;
_27.fld2 = _32;
_30 = core::ptr::addr_of!((*_30));
_27.fld1.1.2 = core::ptr::addr_of_mut!((*_13));
RET.fld2.1.1.3 = _46 | _46;
(*_30) = !171_u8;
RET.fld2.1.2 = _5.1 as f64;
_12 = _38;
RET.fld2.2 = _46 as u8;
RET.fld2.1.1.1 = _30;
_27.fld1.3 = 6716728062753741427_u64 ^ 18142202157083800829_u64;
_5.2 = _27.fld1.1.1 as i32;
_15 = (_14,);
_41 = !_29.0;
_26 = _16;
_16.fld0 = [_5.2,_5.2,_5.2];
_3 = core::ptr::addr_of_mut!(_17);
_10 = _34;
_27.fld1.1.1 = _29.1.2;
_41 = 101277424885062670473735686056406500978_u128 as usize;
_44 = _29.2;
_45 = 3962320125_u32 / 738038355_u32;
RET.fld2.1.1.0 = _18;
_27.fld1.2 = !_29.0;
_39 = !(*_30);
_3 = core::ptr::addr_of_mut!((*_13));
(*_3) = !_20;
_15 = (_36.0,);
_20 = _5.2 as isize;
match _5.1 {
0 => bb28,
1 => bb21,
2 => bb3,
3 => bb14,
4 => bb11,
5 => bb27,
21811 => bb35,
_ => bb34
}
}
bb34 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb35 = {
(*_30) = _39;
Goto(bb36)
}
bb36 = {
_34 = !_29.1.2;
_28 = _18;
RET.fld2.2 = !_39;
_34 = _10;
_27.fld0 = _31;
_33 = Adt55 { fld0: _46 };
RET.fld1.2 = _29.1.2;
Call(_26 = fn19(_5.2, _23, _16.fld0, _25, _27.fld3, _33.fld0, _5, _21, _27.fld1.4, _42, _27.fld1.4, _36, _17, (*_2), (*_13)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
_39 = !(*_30);
(*_2) = 10007_i16 as isize;
_27.fld1.3 = 16343075221557317615_u64;
_28 = _18;
_15 = (_36.0,);
_27.fld1.3 = 10468810728889715846_u64;
RET.fld2.1.1 = (_28, _30, _34, _29.1.3);
_52 = [(-19667_i16),10680_i16,6940_i16,(-8075_i16)];
_29.1.0 = _28;
_41 = _27.fld1.2;
Goto(bb38)
}
bb38 = {
(*_2) = _27.fld1.3 as isize;
RET.fld1.1 = _6;
_27.fld1.1.2 = core::ptr::addr_of_mut!(_17);
_4 = core::ptr::addr_of!((*_4));
_35.0 = -_22;
_53 = _46 as isize;
_45 = _27.fld1.3 as u32;
_5.0 = core::ptr::addr_of_mut!(_53);
_55 = [_28,_28,_28];
_27.fld1.3 = 17279524966242417006_u64 & 8643064214850193637_u64;
RET.fld2.1.1.3 = _33.fld0 + _46;
_35 = (_22,);
_30 = _27.fld1.0;
_37 = _5.1;
RET.fld0 = _10;
_49 = !234101607814830433677531670998337208172_u128;
Goto(bb39)
}
bb39 = {
_29.1.1 = _6;
(*_2) = 40202359142815809588463153612149682203_i128 as isize;
RET.fld1 = _29.1;
RET.fld2.1.1.1 = core::ptr::addr_of!((*_30));
_10 = _29.1.2;
RET.fld2.1.1 = (_18, _27.fld1.0, _27.fld1.1.1, _29.1.3);
_27.fld3 = core::ptr::addr_of_mut!(_34);
RET.fld0 = _29.1.2;
_54 = !_29.1.2;
_18 = _29.1.0;
_4 = core::ptr::addr_of!((*_4));
(*_3) = !_53;
_58 = _29.0 as isize;
_33 = Adt55 { fld0: _46 };
_27.fld3 = core::ptr::addr_of_mut!(_29.1.2);
_30 = _27.fld1.0;
_24 = _22 as f64;
_27.fld1.3 = 147264065401101090201168448536653934668_i128 as u64;
(*_30) = _32.0 as u8;
_27.fld1.1.2 = core::ptr::addr_of_mut!(_20);
_13 = _2;
_3 = core::ptr::addr_of_mut!(_11);
_46 = _9;
RET.fld2.1.1.2 = _34;
_31 = _27.fld0;
Goto(bb40)
}
bb40 = {
_58 = _33.fld0 as isize;
_35.0 = _22 / 1_f32;
RET.fld1.0 = _18;
(*_7) = !_53;
_42 = [_21,_21,_21,_21,_21];
RET.fld2.1.1.1 = _30;
_27.fld1.2 = !_29.0;
_48 = _26.fld0;
match _37 {
21811 => bb42,
_ => bb41
}
}
bb41 = {
_29.1.1 = _6;
(*_2) = 40202359142815809588463153612149682203_i128 as isize;
RET.fld1 = _29.1;
RET.fld2.1.1.1 = core::ptr::addr_of!((*_30));
_10 = _29.1.2;
RET.fld2.1.1 = (_18, _27.fld1.0, _27.fld1.1.1, _29.1.3);
_27.fld3 = core::ptr::addr_of_mut!(_34);
RET.fld0 = _29.1.2;
_54 = !_29.1.2;
_18 = _29.1.0;
_4 = core::ptr::addr_of!((*_4));
(*_3) = !_53;
_58 = _29.0 as isize;
_33 = Adt55 { fld0: _46 };
_27.fld3 = core::ptr::addr_of_mut!(_29.1.2);
_30 = _27.fld1.0;
_24 = _22 as f64;
_27.fld1.3 = 147264065401101090201168448536653934668_i128 as u64;
(*_30) = _32.0 as u8;
_27.fld1.1.2 = core::ptr::addr_of_mut!(_20);
_13 = _2;
_3 = core::ptr::addr_of_mut!(_11);
_46 = _9;
RET.fld2.1.1.2 = _34;
_31 = _27.fld0;
Goto(bb40)
}
bb42 = {
(*_2) = _53 | _58;
(*_13) = _49 as isize;
RET.fld1.0 = _18;
RET.fld2.1 = (_29.0, _29.1, _32.0);
_60 = _34;
(*_30) = _39;
_5 = (_13, _37, 1586896743_i32);
(*_2) = _5.2 as isize;
(*_30) = _39 >> _27.fld1.2;
_53 = !_58;
_56 = (-12985522679721243858129372460191866529_i128) as u64;
_42 = [_21,_21,_21,_21,_21];
_42 = [_21,_21,_21,_21,_21];
RET.fld2.1.1.1 = core::ptr::addr_of!((*_30));
_66.fld1.1 = core::ptr::addr_of!((*_30));
_11 = (*_2) - _17;
_62 = _46 + _33.fld0;
_38 = (_8,);
Call(_12.0 = core::intrinsics::transmute(_8), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
_18 = _28;
_41 = _27.fld1.2 >> _58;
_66.fld2.1.2 = _33.fld0 as f64;
_66.fld2.2 = _29.1.0 as u8;
RET.fld0 = _29.1.2;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_7));
_63 = _49 as isize;
_46 = _33.fld0 | _62;
RET.fld1.1 = core::ptr::addr_of!(_39);
_29.0 = _41 + _27.fld1.2;
_38.0 = _12.0;
_40 = [_45,_45,_45,_45,_45];
RET.fld2.1.1 = (_29.1.0, _30, _54, _46);
RET.fld1.1 = core::ptr::addr_of!((*_4));
_66.fld1.2 = _34;
_66.fld1.1 = core::ptr::addr_of!(_39);
_32.0 = _21 as f64;
RET.fld2.1.0 = _27.fld1.2 / 17246915900463722062_usize;
_27.fld1.3 = _56 / 7467467391110554094_u64;
(*_6) = !_39;
_61 = _29.0 as u16;
RET.fld1.1 = core::ptr::addr_of!((*_4));
RET.fld1.3 = _46 & _46;
Goto(bb44)
}
bb44 = {
_57 = _61 % 59801_u16;
match _5.2 {
0 => bb34,
1 => bb45,
2 => bb46,
3 => bb47,
1586896743 => bb49,
_ => bb48
}
}
bb45 = {
_18 = _28;
_41 = _27.fld1.2 >> _58;
_66.fld2.1.2 = _33.fld0 as f64;
_66.fld2.2 = _29.1.0 as u8;
RET.fld0 = _29.1.2;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_7));
_63 = _49 as isize;
_46 = _33.fld0 | _62;
RET.fld1.1 = core::ptr::addr_of!(_39);
_29.0 = _41 + _27.fld1.2;
_38.0 = _12.0;
_40 = [_45,_45,_45,_45,_45];
RET.fld2.1.1 = (_29.1.0, _30, _54, _46);
RET.fld1.1 = core::ptr::addr_of!((*_4));
_66.fld1.2 = _34;
_66.fld1.1 = core::ptr::addr_of!(_39);
_32.0 = _21 as f64;
RET.fld2.1.0 = _27.fld1.2 / 17246915900463722062_usize;
_27.fld1.3 = _56 / 7467467391110554094_u64;
(*_6) = !_39;
_61 = _29.0 as u16;
RET.fld1.1 = core::ptr::addr_of!((*_4));
RET.fld1.3 = _46 & _46;
Goto(bb44)
}
bb46 = {
(*_2) = _27.fld1.3 as isize;
RET.fld1.1 = _6;
_27.fld1.1.2 = core::ptr::addr_of_mut!(_17);
_4 = core::ptr::addr_of!((*_4));
_35.0 = -_22;
_53 = _46 as isize;
_45 = _27.fld1.3 as u32;
_5.0 = core::ptr::addr_of_mut!(_53);
_55 = [_28,_28,_28];
_27.fld1.3 = 17279524966242417006_u64 & 8643064214850193637_u64;
RET.fld2.1.1.3 = _33.fld0 + _46;
_35 = (_22,);
_30 = _27.fld1.0;
_37 = _5.1;
RET.fld0 = _10;
_49 = !234101607814830433677531670998337208172_u128;
Goto(bb39)
}
bb47 = {
(*_4) = 130712719526645059415035131995380784713_u128 as u8;
RET.fld2.1.1.2 = (*_2) > (*_2);
RET.fld2.1.2 = (-25228_i16) as f64;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_15.0 = [669233417_u32,73206633_u32,2648420251_u32,1994716136_u32,1983244007_u32];
_20 = _11 ^ (*_2);
_6 = _4;
RET.fld0 = (*_4) != (*_4);
_5.0 = core::ptr::addr_of_mut!(_11);
RET.fld2.1.1.1 = _6;
_19 = 66012991854343168598383690778676182766_i128 as f64;
_8 = [1042267487_u32,1752075991_u32,288755258_u32,1829280122_u32,3606356905_u32];
RET.fld2.1.2 = (*_4) as f64;
_3 = core::ptr::addr_of_mut!((*_13));
_12 = (_8,);
RET.fld1 = ('\u{9e058}', _6, _10, _9);
Goto(bb3)
}
bb48 = {
_8 = _14;
_12.0 = _14;
_5 = (_27.fld1.1.2, 44668_u16, 448918670_i32);
RET.fld1.2 = !_10;
_27.fld1.0 = core::ptr::addr_of!((*_6));
_27.fld0 = [_18,_29.1.0,_29.1.0];
_27.fld1.1.2 = _5.0;
_17 = (*_7);
_31 = _27.fld0;
_31 = [_29.1.0,_18,_29.1.0];
_28 = _29.1.0;
Goto(bb7)
}
bb49 = {
_5 = (_3, _61, 909844081_i32);
(*_13) = _11;
_23.0 = core::ptr::addr_of_mut!(_58);
_26 = Adt57 { fld0: _48 };
_66.fld1 = _29.1;
_5.2 = !1977269195_i32;
_66.fld1.3 = _46 | _62;
RET.fld2.1.1.3 = _34 as i8;
_59 = _49;
RET.fld1.2 = !_34;
(*_7) = _21 as isize;
_66.fld2.1.1 = (_29.1.0, _66.fld1.1, _34, _62);
match _37 {
0 => bb45,
1 => bb50,
2 => bb51,
3 => bb52,
4 => bb53,
21811 => bb55,
_ => bb54
}
}
bb50 = {
_15 = _12;
_26 = _16;
_3 = core::ptr::addr_of_mut!((*_2));
_29.1.0 = _18;
_27.fld3 = core::ptr::addr_of_mut!(_10);
_27.fld1.1.1 = _10;
RET.fld2.1.1 = (_18, _6, _27.fld1.1.1, _9);
RET.fld2.1.1.2 = (*_3) <= (*_7);
RET.fld2.1.2 = _24 / f64::NEG_INFINITY;
RET.fld2.1.2 = -_24;
_3 = _5.0;
Call(_27.fld1.1.2 = fn18(_27.fld1.4.0, _7, (*_13)), ReturnTo(bb6), UnwindUnreachable())
}
bb51 = {
(*_4) = 130712719526645059415035131995380784713_u128 as u8;
RET.fld2.1.1.2 = (*_2) > (*_2);
RET.fld2.1.2 = (-25228_i16) as f64;
RET.fld1.1 = core::ptr::addr_of!((*_6));
_15.0 = [669233417_u32,73206633_u32,2648420251_u32,1994716136_u32,1983244007_u32];
_20 = _11 ^ (*_2);
_6 = _4;
RET.fld0 = (*_4) != (*_4);
_5.0 = core::ptr::addr_of_mut!(_11);
RET.fld2.1.1.1 = _6;
_19 = 66012991854343168598383690778676182766_i128 as f64;
_8 = [1042267487_u32,1752075991_u32,288755258_u32,1829280122_u32,3606356905_u32];
RET.fld2.1.2 = (*_4) as f64;
_3 = core::ptr::addr_of_mut!((*_13));
_12 = (_8,);
RET.fld1 = ('\u{9e058}', _6, _10, _9);
Goto(bb3)
}
bb52 = {
RET.fld2.1.1.2 = !_27.fld1.1.1;
_27.fld2 = _32;
_30 = core::ptr::addr_of!((*_30));
_27.fld1.1.2 = core::ptr::addr_of_mut!((*_13));
RET.fld2.1.1.3 = _46 | _46;
(*_30) = !171_u8;
RET.fld2.1.2 = _5.1 as f64;
_12 = _38;
RET.fld2.2 = _46 as u8;
RET.fld2.1.1.1 = _30;
_27.fld1.3 = 6716728062753741427_u64 ^ 18142202157083800829_u64;
_5.2 = _27.fld1.1.1 as i32;
_15 = (_14,);
_41 = !_29.0;
_26 = _16;
_16.fld0 = [_5.2,_5.2,_5.2];
_3 = core::ptr::addr_of_mut!(_17);
_10 = _34;
_27.fld1.1.1 = _29.1.2;
_41 = 101277424885062670473735686056406500978_u128 as usize;
_44 = _29.2;
_45 = 3962320125_u32 / 738038355_u32;
RET.fld2.1.1.0 = _18;
_27.fld1.2 = !_29.0;
_39 = !(*_30);
_3 = core::ptr::addr_of_mut!((*_13));
(*_3) = !_20;
_15 = (_36.0,);
_20 = _5.2 as isize;
match _5.1 {
0 => bb28,
1 => bb21,
2 => bb3,
3 => bb14,
4 => bb11,
5 => bb27,
21811 => bb35,
_ => bb34
}
}
bb53 = {
RET.fld2.1.1.0 = _18;
_25 = [2985_i16,(-14432_i16),1881_i16,(-17159_i16),(-5367_i16)];
_6 = core::ptr::addr_of!((*_4));
_27.fld1.4 = (_7,);
RET.fld2.3.0 = (*_6) as f32;
RET.fld0 = _10;
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_3));
_27.fld1.2 = !3_usize;
_14 = _12.0;
RET.fld2.1.1.0 = _18;
_27.fld1.1.1 = (*_13) > (*_7);
RET.fld1.3 = _9;
_27.fld2.0 = _24 + _24;
Goto(bb5)
}
bb54 = {
RET.fld2.1.1.3 = -_9;
RET.fld1.1 = core::ptr::addr_of!((*_4));
(*_2) = _11 - _11;
RET.fld1.2 = _5.2 == _5.2;
RET.fld2.1.1.0 = '\u{1455b}';
_9 = 28_i8 & (-19_i8);
_5 = (_3, 13748_u16, (-62671700_i32));
(*_7) = (*_3);
RET.fld2.1.2 = 9909_i16 as f64;
RET.fld2.1.2 = (*_6) as f64;
(*_13) = (*_7) + (*_7);
_16.fld0 = [_5.2,_5.2,_5.2];
RET.fld2.1.1 = ('\u{9a199}', _4, _10, _9);
_7 = _3;
RET.fld1.0 = '\u{3cefa}';
(*_6) = !210_u8;
(*_2) = _10 as isize;
_5.1 = !10168_u16;
(*_2) = -_11;
_12 = _15;
_10 = !true;
_17 = (*_7);
_3 = _13;
(*_6) = 83_u8 + 113_u8;
(*_3) = _17;
Goto(bb2)
}
bb55 = {
_49 = !_59;
RET.fld2.1.1.1 = _66.fld2.1.1.1;
RET.fld2.1.1.1 = core::ptr::addr_of!((*_4));
_27.fld1.4.0 = core::ptr::addr_of_mut!((*_7));
_50 = [_5.2,_5.2,_5.2];
_66.fld1 = _66.fld2.1.1;
_73.fld4 = _27.fld1.3 + _27.fld1.3;
_12.0 = [_45,_45,_45,_45,_45];
_27.fld2 = (_44,);
_66.fld2.3 = (_22,);
_33.fld0 = _62 << (*_6);
_26 = Adt57 { fld0: _48 };
_46 = _73.fld4 as i8;
_66.fld2.1.0 = _29.0;
_43 = _26;
_43 = _26;
_28 = _66.fld2.1.1.0;
_29.1.0 = _66.fld2.1.1.0;
_75.0 = _66.fld1.0;
_66.fld2.3 = _35;
Goto(bb56)
}
bb56 = {
RET.fld2.1.1 = _66.fld1;
_64 = _60 as isize;
_73.fld2.2 = _32.0 * _27.fld2.0;
_27.fld1.1.0 = core::ptr::addr_of_mut!(_73.fld0);
_27.fld1.3 = _73.fld4;
_5.0 = _23.0;
_73.fld2.0 = _66.fld2.1.0;
_32 = (_73.fld2.2,);
_29.2 = _49 as f64;
RET.fld1.3 = _5.2 as i8;
RET.fld1.1 = core::ptr::addr_of!((*_30));
_75.2 = _66.fld1.2;
Goto(bb57)
}
bb57 = {
_74 = _41 >= _29.0;
_65.1 = _74 & _74;
_73.fld3 = !_21;
_82.fld1 = (-119066006247123062167758060471907700503_i128);
_10 = _65.1 ^ _65.1;
_29.0 = !_66.fld2.1.0;
_5.1 = _57;
_32.0 = _66.fld2.1.2;
_15 = (_38.0,);
_82.fld2.fld0 = core::ptr::addr_of_mut!((*_13));
_82.fld2.fld0 = core::ptr::addr_of_mut!((*_7));
_66.fld2.3 = (_35.0,);
(*_30) = !_66.fld2.2;
RET.fld2.1.1.2 = !_10;
_5 = (_23.0, _57, (-1292637728_i32));
_9 = _33.fld0 << _53;
_56 = _59 as u64;
match _5.2 {
0 => bb58,
340282366920938463463374607430475573728 => bb60,
_ => bb59
}
}
bb58 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb59 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb60 = {
(*_30) = !_39;
_11 = -_53;
_82.fld2.fld4 = [_5.2,_5.2,_5.2];
_79 = [19622_i16,(-12526_i16),(-23049_i16),(-454_i16),(-3685_i16)];
_47 = [_45,_45,_45,_45,_45];
_73.fld2.1 = (_18, _6, _65.1, _66.fld2.1.1.3);
(*_4) = _39 % 193_u8;
_36.0 = _40;
_29 = (_66.fld2.1.0, _73.fld2.1, _44);
_81 = _41 >= _66.fld2.1.0;
_27.fld1.2 = _66.fld2.1.0 - _41;
(*_30) = _66.fld2.2;
_78.0 = (_5.0,);
_66.fld2.2 = (*_4);
(*_4) = (*_3) as u8;
_78 = (_23,);
_66.fld2.1.1.3 = _35.0 as i8;
_73.fld2.1 = (_18, _4, _81, _29.1.3);
_2 = core::ptr::addr_of_mut!(_71);
_88 = core::ptr::addr_of_mut!(_73.fld0);
_46 = _9;
RET.fld1.0 = _66.fld2.1.1.0;
RET.fld2.2 = (*_30) << _66.fld1.3;
Goto(bb61)
}
bb61 = {
_33 = Adt55 { fld0: _62 };
_15.0 = [_45,_45,_45,_45,_45];
_82.fld2.fld3 = _9;
(*_4) = _39 * _39;
_66.fld1.2 = _27.fld1.1.1;
_73.fld0 = [(*_7),(*_3)];
_67 = !_49;
RET.fld1.2 = _10 ^ _81;
_66.fld1.2 = _10;
_82.fld2.fld5 = _27.fld1.3 as f64;
_77 = _73.fld2.0 as i8;
_5.2 = 1702471440_i32;
(*_7) = _66.fld2.1.1.0 as isize;
RET.fld1.3 = _9 * _66.fld1.3;
_27.fld1.0 = core::ptr::addr_of!(_66.fld2.2);
(*_4) = _39 + _39;
_27.fld1.1.0 = core::ptr::addr_of_mut!((*_88));
_44 = _82.fld2.fld5 - _66.fld2.1.2;
_75.2 = !_10;
Goto(bb62)
}
bb62 = {
_92.fld0.1 = _27.fld1.1;
RET.fld2.1 = (_27.fld1.2, _66.fld1, _44);
_66.fld1.0 = _28;
_87 = [(-6133_i16),17217_i16,(-7875_i16),(-6643_i16),(-23946_i16)];
_66.fld0 = _74;
(*_30) = _66.fld2.2;
_70 = _27.fld1.3 % 8805211342545786669_u64;
RET.fld2.3.0 = -_22;
_73.fld2.1.0 = _75.0;
_76 = [_73.fld3,_21,_73.fld3,_21,_21];
_82.fld0 = _27.fld1.3 + _27.fld1.3;
(*_7) = (*_3);
_12.0 = [_45,_45,_45,_45,_45];
RET.fld2.3 = _66.fld2.3;
_73.fld2.1 = (_66.fld1.0, _66.fld2.1.1.1, _65.1, _46);
_51 = _35.0;
RET.fld2.1.2 = _44 * _29.2;
Goto(bb63)
}
bb63 = {
_82.fld2 = Adt56 { fld0: _27.fld1.1.2,fld1: _79,fld2: _29.0,fld3: _29.1.3,fld4: _43.fld0,fld5: _44 };
_94.fld1 = _28;
_92.fld0.4.0 = core::ptr::addr_of_mut!((*_3));
RET.fld2.1.2 = _66.fld2.3.0 as f64;
RET.fld2.1.1.0 = _66.fld2.1.1.0;
_39 = !(*_30);
_94.fld3.fld2 = Adt56 { fld0: _7,fld1: _87,fld2: _82.fld2.fld2,fld3: _33.fld0,fld4: _50,fld5: _44 };
_12.0 = [_45,_45,_45,_45,_45];
_69 = core::ptr::addr_of!(_49);
_73.fld4 = _61 as u64;
RET.fld2.1 = _29;
RET.fld2.1.1.1 = core::ptr::addr_of!(_66.fld2.2);
_73.fld2.1.3 = !_77;
_3 = core::ptr::addr_of_mut!((*_2));
_15 = (_38.0,);
_92.fld0.2 = _18 as usize;
RET.fld1.3 = !_9;
_75.1 = _30;
_94.fld3.fld0.fld1 = _66.fld2.1.1.0;
_29.1 = _73.fld2.1;
_36.0 = [_45,_45,_45,_45,_45];
_3 = core::ptr::addr_of_mut!(_86);
_94.fld3.fld2 = Adt56 { fld0: _92.fld0.4.0,fld1: _25,fld2: _41,fld3: _62,fld4: _26.fld0,fld5: _24 };
RET.fld1.2 = _73.fld2.1.2;
Goto(bb64)
}
bb64 = {
_48 = [_5.2,_5.2,_5.2];
_92.fld2 = _94.fld3.fld2.fld1;
(*_3) = (*_13) * _11;
_92.fld3 = _27.fld1.1;
_83 = _27.fld2.0;
_85 = !(*_30);
_94.fld3.fld0.fld2 = core::ptr::addr_of!(_94.fld3.fld1);
_84 = _27.fld1.3;
_92.fld2 = _79;
_92.fld0.1.0 = _92.fld3.0;
_13 = _3;
_27.fld3 = core::ptr::addr_of_mut!(_94.fld3.fld0.fld0);
_94.fld3.fld0.fld0 = _65.1 & _75.2;
match _37 {
0 => bb51,
1 => bb5,
2 => bb43,
3 => bb65,
4 => bb66,
5 => bb67,
21811 => bb69,
_ => bb68
}
}
bb65 = {
_39 = !(*_30);
(*_2) = 10007_i16 as isize;
_27.fld1.3 = 16343075221557317615_u64;
_28 = _18;
_15 = (_36.0,);
_27.fld1.3 = 10468810728889715846_u64;
RET.fld2.1.1 = (_28, _30, _34, _29.1.3);
_52 = [(-19667_i16),10680_i16,6940_i16,(-8075_i16)];
_29.1.0 = _28;
_41 = _27.fld1.2;
Goto(bb38)
}
bb66 = {
(*_30) = _39;
Goto(bb36)
}
bb67 = {
RET.fld2.1.1.3 = -_9;
RET.fld1.1 = core::ptr::addr_of!((*_4));
(*_2) = _11 - _11;
RET.fld1.2 = _5.2 == _5.2;
RET.fld2.1.1.0 = '\u{1455b}';
_9 = 28_i8 & (-19_i8);
_5 = (_3, 13748_u16, (-62671700_i32));
(*_7) = (*_3);
RET.fld2.1.2 = 9909_i16 as f64;
RET.fld2.1.2 = (*_6) as f64;
(*_13) = (*_7) + (*_7);
_16.fld0 = [_5.2,_5.2,_5.2];
RET.fld2.1.1 = ('\u{9a199}', _4, _10, _9);
_7 = _3;
RET.fld1.0 = '\u{3cefa}';
(*_6) = !210_u8;
(*_2) = _10 as isize;
_5.1 = !10168_u16;
(*_2) = -_11;
_12 = _15;
_10 = !true;
_17 = (*_7);
_3 = _13;
(*_6) = 83_u8 + 113_u8;
(*_3) = _17;
Goto(bb2)
}
bb68 = {
_74 = _41 >= _29.0;
_65.1 = _74 & _74;
_73.fld3 = !_21;
_82.fld1 = (-119066006247123062167758060471907700503_i128);
_10 = _65.1 ^ _65.1;
_29.0 = !_66.fld2.1.0;
_5.1 = _57;
_32.0 = _66.fld2.1.2;
_15 = (_38.0,);
_82.fld2.fld0 = core::ptr::addr_of_mut!((*_13));
_82.fld2.fld0 = core::ptr::addr_of_mut!((*_7));
_66.fld2.3 = (_35.0,);
(*_30) = !_66.fld2.2;
RET.fld2.1.1.2 = !_10;
_5 = (_23.0, _57, (-1292637728_i32));
_9 = _33.fld0 << _53;
_56 = _59 as u64;
match _5.2 {
0 => bb58,
340282366920938463463374607430475573728 => bb60,
_ => bb59
}
}
bb69 = {
RET.fld1.3 = _9;
_94.fld3.fld2.fld1 = [(-16155_i16),29332_i16,(-22751_i16),26136_i16,24178_i16];
_66.fld2.1 = (_27.fld1.2, _66.fld1, _82.fld2.fld5);
match _37 {
0 => bb42,
1 => bb27,
2 => bb70,
3 => bb71,
21811 => bb73,
_ => bb72
}
}
bb70 = {
_57 = _61 % 59801_u16;
match _5.2 {
0 => bb34,
1 => bb45,
2 => bb46,
3 => bb47,
1586896743 => bb49,
_ => bb48
}
}
bb71 = {
_23 = (_5.0,);
_12.0 = [3459605943_u32,4219174623_u32,4239350038_u32,2091474631_u32,3590787216_u32];
RET.fld2.1.1.0 = '\u{bc1b7}';
_12 = (_15.0,);
RET.fld1.2 = _10;
_12.0 = [1631871757_u32,2177538479_u32,2337251050_u32,3963166614_u32,3498523995_u32];
_19 = 582458132_u32 as f64;
_7 = _13;
_18 = '\u{8767d}';
_24 = _19 * _19;
_20 = -(*_2);
RET.fld2.1.1.2 = _10;
_5.2 = (-228121011_i32) + 212575692_i32;
Goto(bb4)
}
bb72 = {
_82.fld2 = Adt56 { fld0: _27.fld1.1.2,fld1: _79,fld2: _29.0,fld3: _29.1.3,fld4: _43.fld0,fld5: _44 };
_94.fld1 = _28;
_92.fld0.4.0 = core::ptr::addr_of_mut!((*_3));
RET.fld2.1.2 = _66.fld2.3.0 as f64;
RET.fld2.1.1.0 = _66.fld2.1.1.0;
_39 = !(*_30);
_94.fld3.fld2 = Adt56 { fld0: _7,fld1: _87,fld2: _82.fld2.fld2,fld3: _33.fld0,fld4: _50,fld5: _44 };
_12.0 = [_45,_45,_45,_45,_45];
_69 = core::ptr::addr_of!(_49);
_73.fld4 = _61 as u64;
RET.fld2.1 = _29;
RET.fld2.1.1.1 = core::ptr::addr_of!(_66.fld2.2);
_73.fld2.1.3 = !_77;
_3 = core::ptr::addr_of_mut!((*_2));
_15 = (_38.0,);
_92.fld0.2 = _18 as usize;
RET.fld1.3 = !_9;
_75.1 = _30;
_94.fld3.fld0.fld1 = _66.fld2.1.1.0;
_29.1 = _73.fld2.1;
_36.0 = [_45,_45,_45,_45,_45];
_3 = core::ptr::addr_of_mut!(_86);
_94.fld3.fld2 = Adt56 { fld0: _92.fld0.4.0,fld1: _25,fld2: _41,fld3: _62,fld4: _26.fld0,fld5: _24 };
RET.fld1.2 = _73.fld2.1.2;
Goto(bb64)
}
bb73 = {
_66.fld1.0 = _94.fld3.fld0.fld1;
_100 = _66.fld1.2;
Call((*_2) = core::intrinsics::transmute(_20), ReturnTo(bb74), UnwindUnreachable())
}
bb74 = {
_94.fld1 = _29.1.0;
match _37 {
21811 => bb76,
_ => bb75
}
}
bb75 = {
_57 = _61 % 59801_u16;
match _5.2 {
0 => bb34,
1 => bb45,
2 => bb46,
3 => bb47,
1586896743 => bb49,
_ => bb48
}
}
bb76 = {
_104.0 = (_78.0.0,);
_103 = _66.fld1;
_47 = _38.0;
_16 = _43;
_72 = _28;
_26 = Adt57 { fld0: _43.fld0 };
_101 = [_82.fld2.fld2,_94.fld3.fld2.fld2];
_96 = _5.2 as i16;
RET.fld2.1.0 = _66.fld2.1.0 % 2_usize;
_92.fld0.0 = _29.1.1;
_91 = _27.fld1.3;
Call(_73.fld4 = core::intrinsics::transmute(_21), ReturnTo(bb77), UnwindUnreachable())
}
bb77 = {
RET.fld1 = (_66.fld2.1.1.0, _6, _10, _29.1.3);
_49 = _66.fld2.1.1.3 as u128;
_29.1.3 = _66.fld2.1.1.3;
_10 = _75.2 & _65.1;
_50 = _48;
_15 = (_38.0,);
_94.fld3.fld2 = Move(_82.fld2);
_66.fld1 = (_72, _73.fld2.1.1, _66.fld2.1.1.2, _73.fld2.1.3);
_92.fld0 = (_30, _27.fld1.1, _29.0, _82.fld0, _23);
(*_7) = -(*_3);
_94.fld3.fld0.fld3.2 = !_5.2;
_80 = [_82.fld0];
_20 = !(*_13);
_92.fld0.3 = _66.fld2.1.2 as u64;
_66.fld2.2 = !(*_6);
_9 = !_66.fld2.1.1.3;
_106 = _16.fld0;
RET.fld2.1 = (_92.fld0.2, _103, _32.0);
_73.fld2.0 = _27.fld1.2;
_23.0 = _27.fld1.1.2;
_73.fld1 = _94.fld3.fld0.fld1;
_92.fld0.1.1 = _66.fld2.1.1.2;
_87 = [_96,_96,_96,_96,_96];
(*_7) = (*_13) ^ _53;
_37 = !_5.1;
_94.fld2 = _21 << _66.fld1.3;
Goto(bb78)
}
bb78 = {
_18 = _28;
_92.fld1 = core::ptr::addr_of_mut!((*_88));
_110.fld2 = _51 as usize;
_92.fld0.1.0 = _92.fld1;
_27.fld1.4.0 = _3;
RET.fld2.3 = (_35.0,);
_65 = (_92.fld3.0, _92.fld0.1.1, _23.0);
Goto(bb79)
}
bb79 = {
_21 = _85 as i64;
RET.fld1.0 = _28;
(*_6) = _66.fld2.2;
_92.fld0.4.0 = _92.fld0.1.2;
_25 = [_96,_96,_96,_96,_96];
_66.fld2.3 = _35;
_46 = _96 as i8;
_45 = 429251203_u32;
_73.fld2.1.0 = _94.fld1;
_65 = _92.fld0.1;
_92.fld0.1 = (_88, _65.1, _3);
_105 = (_38.0,);
_71 = _45 as isize;
RET.fld2.1 = _66.fld2.1;
_94.fld3.fld0.fld3 = _5;
_57 = _81 as u16;
_40 = [_45,_45,_45,_45,_45];
_27.fld1.1.2 = _65.2;
_29.1.0 = _66.fld1.0;
_110.fld1 = [_96,_96,_96,_96,_96];
_111 = [_41,_66.fld2.1.0];
_32.0 = _94.fld3.fld2.fld5 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000514954264152602_f64);
_47 = _14;
_15 = _105;
Goto(bb80)
}
bb80 = {
_41 = _92.fld0.2 + _73.fld2.0;
_90 = core::ptr::addr_of_mut!(_10);
_102 = _45;
_65.1 = !_81;
_32.0 = -_94.fld3.fld2.fld5;
_66.fld2.1.0 = !_27.fld1.2;
RET.fld2.1.1.2 = !_94.fld3.fld0.fld0;
_92.fld0.1.0 = core::ptr::addr_of_mut!((*_88));
_83 = -_32.0;
(*_4) = _51 as u8;
_92.fld0.0 = _73.fld2.1.1;
_110.fld4 = _16.fld0;
_73.fld2.1.0 = _72;
_94.fld2 = _35.0 as i64;
RET.fld2.1.1 = (_75.0, _66.fld1.1, _66.fld1.2, _77);
_65.0 = core::ptr::addr_of_mut!(_73.fld0);
_107 = [_96,_96,_96,_96,_96];
_112.0 = [_45,_102,_45,_102,_102];
_91 = _92.fld0.3 | _82.fld0;
_109 = (_66.fld2.3.0,);
_82.fld1 = _45 as i128;
_73.fld2.1.1 = core::ptr::addr_of!((*_6));
_28 = _66.fld2.1.1.0;
match _94.fld3.fld0.fld3.2 {
1702471440 => bb82,
_ => bb81
}
}
bb81 = {
(*_13) = -(*_3);
RET.fld2.1.1.0 = _28;
RET.fld2.1.1.1 = _27.fld1.0;
(*_2) = _5.2 as isize;
_25 = [(-6659_i16),11741_i16,20895_i16,(-12217_i16),11476_i16];
RET.fld1.1 = core::ptr::addr_of!((*_6));
_20 = (*_13) - (*_2);
match _5.2 {
0 => bb4,
1 => bb3,
2 => bb8,
3 => bb9,
4 => bb10,
448918670 => bb12,
_ => bb11
}
}
bb82 = {
_66.fld1.1 = core::ptr::addr_of!((*_4));
_29.1.2 = _100 & (*_90);
_66.fld2.1.1.1 = core::ptr::addr_of!(_94.fld0);
_57 = _92.fld0.3 as u16;
_18 = _66.fld2.1.1.0;
_75.3 = _29.1.3 | _103.3;
_52 = [_96,_96,_96,_96];
_58 = _73.fld2.0 as isize;
_31 = [_66.fld2.1.1.0,_29.1.0,_18];
RET.fld0 = _10 <= _66.fld1.2;
_73.fld2 = (_94.fld3.fld2.fld2, _66.fld2.1.1, _83);
_51 = _66.fld2.3.0;
_66.fld1.0 = _66.fld2.1.1.0;
_94.fld3.fld2.fld4 = _110.fld4;
RET.fld2.0 = core::ptr::addr_of!(_94.fld3.fld1);
_25 = [_96,_96,_96,_96,_96];
_110.fld3 = _62 ^ _103.3;
RET.fld1.2 = (*_90);
RET.fld1.3 = _28 as i8;
_29.1.3 = -_62;
Goto(bb83)
}
bb83 = {
Call(_120 = dump_var(17_usize, 42_usize, Move(_42), 46_usize, Move(_46), 21_usize, Move(_21), 102_usize, Move(_102)), ReturnTo(bb84), UnwindUnreachable())
}
bb84 = {
Call(_120 = dump_var(17_usize, 71_usize, Move(_71), 49_usize, Move(_49), 67_usize, Move(_67), 28_usize, Move(_28)), ReturnTo(bb85), UnwindUnreachable())
}
bb85 = {
Call(_120 = dump_var(17_usize, 37_usize, Move(_37), 10_usize, Move(_10), 77_usize, Move(_77), 84_usize, Move(_84)), ReturnTo(bb86), UnwindUnreachable())
}
bb86 = {
Call(_120 = dump_var(17_usize, 72_usize, Move(_72), 60_usize, Move(_60), 55_usize, Move(_55), 11_usize, Move(_11)), ReturnTo(bb87), UnwindUnreachable())
}
bb87 = {
Call(_120 = dump_var(17_usize, 45_usize, Move(_45), 79_usize, Move(_79), 58_usize, Move(_58), 41_usize, Move(_41)), ReturnTo(bb88), UnwindUnreachable())
}
bb88 = {
Call(_120 = dump_var(17_usize, 107_usize, Move(_107), 64_usize, Move(_64), 31_usize, Move(_31), 20_usize, Move(_20)), ReturnTo(bb89), UnwindUnreachable())
}
bb89 = {
Call(_120 = dump_var(17_usize, 48_usize, Move(_48), 39_usize, Move(_39), 34_usize, Move(_34), 81_usize, Move(_81)), ReturnTo(bb90), UnwindUnreachable())
}
bb90 = {
Call(_120 = dump_var(17_usize, 86_usize, Move(_86), 40_usize, Move(_40), 9_usize, Move(_9), 50_usize, Move(_50)), ReturnTo(bb91), UnwindUnreachable())
}
bb91 = {
Call(_120 = dump_var(17_usize, 76_usize, Move(_76), 121_usize, _121, 121_usize, _121, 121_usize, _121), ReturnTo(bb92), UnwindUnreachable())
}
bb92 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: *mut isize,mut _2: *mut isize,mut _3: isize) -> *mut isize {
mir! {
type RET = *mut isize;
let _4: [u64; 1];
let _5: bool;
let _6: Adt51;
let _7: char;
let _8: char;
let _9: (f32,);
let _10: [usize; 2];
let _11: Adt57;
let _12: f32;
let _13: f64;
let _14: [u64; 1];
let _15: u16;
let _16: f64;
let _17: Adt59;
let _18: char;
let _19: [u64; 1];
let _20: isize;
let _21: u128;
let _22: Adt55;
let _23: u16;
let _24: f64;
let _25: f64;
let _26: ((*mut isize,), *const u128, u128, [usize; 2]);
let _27: (f32,);
let _28: u16;
let _29: bool;
let _30: *const u8;
let _31: ([u32; 5],);
let _32: u16;
let _33: Adt49;
let _34: [u32; 5];
let _35: *const f64;
let _36: Adt57;
let _37: ();
let _38: ();
{
(*_1) = _3 << _3;
RET = core::ptr::addr_of_mut!((*_1));
_6.fld2 = [1711369183_u32,3590864528_u32,938599103_u32,2323416834_u32,3625307542_u32];
_2 = core::ptr::addr_of_mut!((*_1));
_6.fld1 = [(-16697_i16),5455_i16,(-6520_i16),13506_i16];
_4 = [12840317632289425264_u64];
RET = core::ptr::addr_of_mut!(_3);
_3 = (*_2) + (*_2);
(*_2) = (*RET);
_7 = '\u{a2965}';
_8 = _7;
_5 = !false;
_6.fld1 = [(-16866_i16),(-32563_i16),(-8226_i16),(-6699_i16)];
(*_2) = 187_u8 as isize;
_6.fld4 = 11100431877306923839_u64 ^ 15275801994619691051_u64;
_6.fld5 = [_7,_8,_8];
Goto(bb1)
}
bb1 = {
_11.fld0 = [319693031_i32,(-672291759_i32),(-614925899_i32)];
_2 = core::ptr::addr_of_mut!((*_1));
_2 = _1;
(*_2) = (*RET);
(*_2) = _3;
_12 = 128_u8 as f32;
_4 = [_6.fld4];
_10 = [7517739659069965624_usize,136341463666696379_usize];
(*RET) = -(*_2);
RET = core::ptr::addr_of_mut!(_3);
(*RET) = (*_1) ^ (*_2);
_9.0 = _12 * _12;
_6.fld5 = [_8,_8,_7];
_6.fld1 = [24757_i16,(-2047_i16),32300_i16,(-3198_i16)];
(*RET) = (*_1);
_9 = (_12,);
(*_1) = (-903941045_i32) as isize;
_6.fld7 = [2033705577553100847_i64,(-8374322329009174498_i64),5996278696482464943_i64,(-1829930082337049624_i64),(-7663666277722117663_i64)];
(*_2) = !_3;
(*RET) = -(*_1);
_13 = 16939959861695858086_usize as f64;
_6.fld5 = [_7,_8,_8];
_11.fld0 = [952166995_i32,518387530_i32,(-677236885_i32)];
(*_2) = 3_usize as isize;
_7 = _8;
_14 = [_6.fld4];
_6.fld2 = [4038890557_u32,4095418303_u32,4098179041_u32,3254338762_u32,619597826_u32];
Goto(bb2)
}
bb2 = {
(*RET) = _8 as isize;
_6.fld6 = !4158381769807153039_usize;
(*_1) = 197_u8 as isize;
_13 = 2061642299_u32 as f64;
_1 = core::ptr::addr_of_mut!(_3);
_6.fld6 = 5351122681633218872_usize;
_2 = core::ptr::addr_of_mut!((*RET));
_13 = (-121_i8) as f64;
_17.fld2.1.0 = (-158821389032438567163560767892842254623_i128) as usize;
_5 = !true;
_17.fld0 = _5 & _5;
_17.fld0 = !_5;
_17.fld1.1 = core::ptr::addr_of!(_17.fld2.2);
_17.fld2.2 = 196_u8 ^ 199_u8;
_8 = _7;
_17.fld2.1.1.0 = _7;
_5 = _17.fld0;
Call(_17.fld2.1.2 = core::intrinsics::fmaf64(_13, _13, _13), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_17.fld2.1.1.2 = _5;
(*_2) = (-61_i8) as isize;
_17.fld1.2 = !_17.fld0;
_17.fld1.1 = core::ptr::addr_of!(_17.fld2.2);
_6.fld2 = [1835162376_u32,2173209535_u32,4283982116_u32,880316471_u32,3136936276_u32];
_1 = core::ptr::addr_of_mut!((*RET));
_14 = [_6.fld4];
_17.fld1.3 = 12227605692265546142602792867665469335_u128 as i8;
(*RET) = (-9223372036854775808_isize) & 27_isize;
_17.fld2.1.0 = _6.fld6;
_15 = 18028_u16;
Goto(bb4)
}
bb4 = {
(*_2) = 9223372036854775807_isize & (-48_isize);
(*RET) = !9223372036854775807_isize;
_20 = (*_2);
_17.fld1.3 = (-68_i8);
Goto(bb5)
}
bb5 = {
_17.fld2.1.1.3 = _17.fld1.3;
_17.fld1.3 = _17.fld2.1.1.3;
_17.fld2.1.1.1 = _17.fld1.1;
(*_1) = _20 << _17.fld2.1.1.3;
_13 = 1939647357_u32 as f64;
_6.fld7 = [6021160238589572883_i64,2072368956562790737_i64,4531281987025819181_i64,(-8171369206308672400_i64),(-360716167288770190_i64)];
_16 = _13;
(*_2) = _20 + _20;
_20 = (*_1);
_17.fld2.1.0 = _6.fld6;
_6.fld7 = [(-1103485934947098000_i64),7112473711168014533_i64,(-8502608311199976335_i64),2665971561953759597_i64,(-1212079984086682002_i64)];
_17.fld1.1 = core::ptr::addr_of!(_17.fld2.2);
_17.fld2.3 = (_12,);
_15 = 21037_u16 / 20559_u16;
Goto(bb6)
}
bb6 = {
(*RET) = -_20;
_17.fld2.1.1.2 = _5 <= _17.fld1.2;
_26.0.0 = core::ptr::addr_of_mut!((*_1));
_25 = _6.fld6 as f64;
Goto(bb7)
}
bb7 = {
_17.fld0 = _5;
_21 = 158084706560075749721948171602214898462_i128 as u128;
_28 = !_15;
_17.fld2.2 = 198_u8 | 126_u8;
_26.2 = _21 >> _20;
_9.0 = _12 / f32::NAN;
_19 = [_6.fld4];
_2 = _26.0.0;
(*RET) = _20;
_25 = 5243_i16 as f64;
_17.fld1.3 = -_17.fld2.1.1.3;
_17.fld1 = (_8, _17.fld2.1.1.1, _17.fld0, _17.fld2.1.1.3);
_8 = _7;
_14 = [_6.fld4];
_4 = [_6.fld4];
_25 = (-3713730641348676710_i64) as f64;
Goto(bb8)
}
bb8 = {
_6.fld3 = core::ptr::addr_of_mut!(_26.0);
_26.3 = _10;
_26.0.0 = _2;
_26.1 = core::ptr::addr_of!(_21);
(*RET) = _20;
_30 = _17.fld1.1;
_13 = _28 as f64;
_7 = _8;
_22 = Adt55 { fld0: _17.fld1.3 };
_33.fld2 = (_13,);
_6.fld5 = [_17.fld2.1.1.0,_17.fld1.0,_17.fld1.0];
match _22.fld0 {
340282366920938463463374607431768211388 => bb9,
_ => bb1
}
}
bb9 = {
_11.fld0 = [2046317995_i32,2047152347_i32,(-922046394_i32)];
match _6.fld6 {
0 => bb7,
1 => bb10,
2 => bb11,
3 => bb12,
5351122681633218872 => bb14,
_ => bb13
}
}
bb10 = {
_6.fld3 = core::ptr::addr_of_mut!(_26.0);
_26.3 = _10;
_26.0.0 = _2;
_26.1 = core::ptr::addr_of!(_21);
(*RET) = _20;
_30 = _17.fld1.1;
_13 = _28 as f64;
_7 = _8;
_22 = Adt55 { fld0: _17.fld1.3 };
_33.fld2 = (_13,);
_6.fld5 = [_17.fld2.1.1.0,_17.fld1.0,_17.fld1.0];
match _22.fld0 {
340282366920938463463374607431768211388 => bb9,
_ => bb1
}
}
bb11 = {
_11.fld0 = [319693031_i32,(-672291759_i32),(-614925899_i32)];
_2 = core::ptr::addr_of_mut!((*_1));
_2 = _1;
(*_2) = (*RET);
(*_2) = _3;
_12 = 128_u8 as f32;
_4 = [_6.fld4];
_10 = [7517739659069965624_usize,136341463666696379_usize];
(*RET) = -(*_2);
RET = core::ptr::addr_of_mut!(_3);
(*RET) = (*_1) ^ (*_2);
_9.0 = _12 * _12;
_6.fld5 = [_8,_8,_7];
_6.fld1 = [24757_i16,(-2047_i16),32300_i16,(-3198_i16)];
(*RET) = (*_1);
_9 = (_12,);
(*_1) = (-903941045_i32) as isize;
_6.fld7 = [2033705577553100847_i64,(-8374322329009174498_i64),5996278696482464943_i64,(-1829930082337049624_i64),(-7663666277722117663_i64)];
(*_2) = !_3;
(*RET) = -(*_1);
_13 = 16939959861695858086_usize as f64;
_6.fld5 = [_7,_8,_8];
_11.fld0 = [952166995_i32,518387530_i32,(-677236885_i32)];
(*_2) = 3_usize as isize;
_7 = _8;
_14 = [_6.fld4];
_6.fld2 = [4038890557_u32,4095418303_u32,4098179041_u32,3254338762_u32,619597826_u32];
Goto(bb2)
}
bb12 = {
(*RET) = -_20;
_17.fld2.1.1.2 = _5 <= _17.fld1.2;
_26.0.0 = core::ptr::addr_of_mut!((*_1));
_25 = _6.fld6 as f64;
Goto(bb7)
}
bb13 = {
_17.fld2.1.1.2 = _5;
(*_2) = (-61_i8) as isize;
_17.fld1.2 = !_17.fld0;
_17.fld1.1 = core::ptr::addr_of!(_17.fld2.2);
_6.fld2 = [1835162376_u32,2173209535_u32,4283982116_u32,880316471_u32,3136936276_u32];
_1 = core::ptr::addr_of_mut!((*RET));
_14 = [_6.fld4];
_17.fld1.3 = 12227605692265546142602792867665469335_u128 as i8;
(*RET) = (-9223372036854775808_isize) & 27_isize;
_17.fld2.1.0 = _6.fld6;
_15 = 18028_u16;
Goto(bb4)
}
bb14 = {
_23 = _28 % 22695_u16;
_24 = _13 - _13;
_30 = _17.fld1.1;
_17.fld2.1.1.0 = _8;
_14 = _19;
_23 = _15 * _15;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(18_usize, 19_usize, Move(_19), 5_usize, Move(_5), 15_usize, Move(_15), 28_usize, Move(_28)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(18_usize, 4_usize, Move(_4), 3_usize, Move(_3), 38_usize, _38, 38_usize, _38), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: i32,mut _2: (*mut isize,),mut _3: [i32; 3],mut _4: [i16; 5],mut _5: *mut bool,mut _6: i8,mut _7: (*mut isize, u16, i32),mut _8: i64,mut _9: (*mut isize,),mut _10: [i64; 5],mut _11: (*mut isize,),mut _12: ([u32; 5],),mut _13: isize,mut _14: isize,mut _15: isize) -> Adt57 {
mir! {
type RET = Adt57;
let _16: ((*mut isize,),);
let _17: f32;
let _18: u32;
let _19: f32;
let _20: isize;
let _21: [i32; 3];
let _22: u8;
let _23: *const u128;
let _24: Adt59;
let _25: (f32,);
let _26: *mut [isize; 2];
let _27: Adt60;
let _28: char;
let _29: [u64; 1];
let _30: [i16; 5];
let _31: char;
let _32: f64;
let _33: f32;
let _34: Adt55;
let _35: ();
let _36: ();
{
RET = Adt57 { fld0: _3 };
_12.0 = [1898609517_u32,4058843786_u32,1087279341_u32,2720552336_u32,3463960091_u32];
_6 = 50_i8 + 35_i8;
(*_5) = !true;
Goto(bb1)
}
bb1 = {
_9.0 = _2.0;
_11 = _9;
_5 = core::ptr::addr_of_mut!((*_5));
_16.0 = _9;
_5 = core::ptr::addr_of_mut!((*_5));
_9 = _16.0;
_7 = (_11.0, 34866_u16, _1);
Goto(bb2)
}
bb2 = {
_11.0 = core::ptr::addr_of_mut!(_13);
_3 = [_1,_1,_7.2];
_7.2 = _1 >> _14;
_18 = 2107169342_u32;
RET = Adt57 { fld0: _3 };
_13 = _15 ^ _15;
RET = Adt57 { fld0: _3 };
_6 = -(-9_i8);
_20 = _13;
_5 = core::ptr::addr_of_mut!((*_5));
RET.fld0 = [_7.2,_7.2,_7.2];
_5 = core::ptr::addr_of_mut!((*_5));
_19 = _8 as f32;
_21 = [_1,_7.2,_7.2];
_11 = (_7.0,);
_16.0 = _9;
_13 = -_20;
_11 = _2;
RET.fld0 = [_7.2,_7.2,_1];
_7.2 = _1 + _1;
_22 = _18 as u8;
match _7.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
34866 => bb10,
_ => bb9
}
}
bb3 = {
_9.0 = _2.0;
_11 = _9;
_5 = core::ptr::addr_of_mut!((*_5));
_16.0 = _9;
_5 = core::ptr::addr_of_mut!((*_5));
_9 = _16.0;
_7 = (_11.0, 34866_u16, _1);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_24.fld2.1.1.0 = '\u{4c52c}';
RET = Adt57 { fld0: _21 };
_16.0 = (_2.0,);
_9 = (_7.0,);
_27.fld0.fld1 = _24.fld2.1.1.0;
_10 = [_8,_8,_8,_8,_8];
_24.fld2.3 = (_19,);
RET = Adt57 { fld0: _21 };
_28 = _27.fld0.fld1;
_24.fld2.1.2 = _18 as f64;
_27.fld2 = Adt56 { fld0: _7.0,fld1: _4,fld2: 5128743233462928593_usize,fld3: _6,fld4: _21,fld5: _24.fld2.1.2 };
_27.fld2.fld5 = _24.fld2.1.2;
_24.fld0 = !(*_5);
_27.fld0.fld2 = core::ptr::addr_of!(_27.fld1);
_17 = _19;
_14 = (-147624709538890536724441793987722939613_i128) as isize;
_18 = 2535608851_u32 - 3172147207_u32;
_24.fld2.1.1.3 = _27.fld2.fld3 & _27.fld2.fld3;
_24.fld2.3 = (_17,);
_25 = _24.fld2.3;
match _27.fld2.fld2 {
0 => bb11,
5128743233462928593 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_17 = _24.fld2.3.0;
_30 = _27.fld2.fld1;
_15 = _7.2 as isize;
_27.fld2.fld3 = _6;
_24.fld2.1.1.3 = -_6;
_7 = (_9.0, 49506_u16, _1);
_15 = !_20;
_2.0 = _27.fld2.fld0;
_16 = (_9,);
_16.0.0 = _27.fld2.fld0;
(*_5) = !_24.fld0;
_31 = _28;
_9.0 = _16.0.0;
_7.1 = 26081_u16;
_24.fld2.3.0 = _19 * _19;
_7 = (_2.0, 44425_u16, _1);
_30 = [20537_i16,23072_i16,31103_i16,22234_i16,1498_i16];
_19 = _25.0 + _24.fld2.3.0;
_30 = [1040_i16,(-7203_i16),30323_i16,(-5623_i16),(-23937_i16)];
_16 = (_2,);
_5 = core::ptr::addr_of_mut!((*_5));
_27.fld2 = Adt56 { fld0: _11.0,fld1: _30,fld2: 3_usize,fld3: _6,fld4: _21,fld5: _24.fld2.1.2 };
RET = Adt57 { fld0: _27.fld2.fld4 };
_25.0 = _18 as f32;
match _27.fld2.fld2 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb18,
_ => bb17
}
}
bb14 = {
_9.0 = _2.0;
_11 = _9;
_5 = core::ptr::addr_of_mut!((*_5));
_16.0 = _9;
_5 = core::ptr::addr_of_mut!((*_5));
_9 = _16.0;
_7 = (_11.0, 34866_u16, _1);
Goto(bb2)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_11.0 = core::ptr::addr_of_mut!(_13);
_3 = [_1,_1,_7.2];
_7.2 = _1 >> _14;
_18 = 2107169342_u32;
RET = Adt57 { fld0: _3 };
_13 = _15 ^ _15;
RET = Adt57 { fld0: _3 };
_6 = -(-9_i8);
_20 = _13;
_5 = core::ptr::addr_of_mut!((*_5));
RET.fld0 = [_7.2,_7.2,_7.2];
_5 = core::ptr::addr_of_mut!((*_5));
_19 = _8 as f32;
_21 = [_1,_7.2,_7.2];
_11 = (_7.0,);
_16.0 = _9;
_13 = -_20;
_11 = _2;
RET.fld0 = [_7.2,_7.2,_1];
_7.2 = _1 + _1;
_22 = _18 as u8;
match _7.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
34866 => bb10,
_ => bb9
}
}
bb18 = {
_27.fld0.fld0 = !(*_5);
_22 = 28_u8 + 9_u8;
_24.fld2.1.2 = _27.fld2.fld5 - _27.fld2.fld5;
_10 = [_8,_8,_8,_8,_8];
_27.fld0.fld0 = !(*_5);
_17 = _24.fld2.3.0 * _19;
_24.fld2.3.0 = _19 * _25.0;
_27.fld0.fld3 = (_2.0, _7.1, _1);
_3 = [_27.fld0.fld3.2,_27.fld0.fld3.2,_1];
_6 = _27.fld2.fld3 ^ _24.fld2.1.1.3;
_11.0 = core::ptr::addr_of_mut!(_20);
_27.fld0.fld2 = core::ptr::addr_of!(_27.fld1);
_2 = _11;
_27.fld0.fld2 = core::ptr::addr_of!(_27.fld1);
_21 = [_1,_1,_1];
_27.fld2.fld5 = -_24.fld2.1.2;
_3 = [_1,_7.2,_1];
_33 = _24.fld2.3.0;
_24.fld2.1.1.1 = core::ptr::addr_of!(_24.fld2.2);
_24.fld2.3.0 = _17;
_7.1 = _27.fld0.fld3.1;
_24.fld2.3 = _25;
_27.fld2 = Adt56 { fld0: _11.0,fld1: _30,fld2: 5_usize,fld3: _24.fld2.1.1.3,fld4: _21,fld5: _24.fld2.1.2 };
_24.fld2.1.1.2 = (*_5);
_27.fld0.fld3.1 = _7.1;
_18 = !1927999011_u32;
_24.fld2.3 = (_19,);
_25.0 = _24.fld2.3.0 - _19;
_27.fld0.fld4 = core::ptr::addr_of!(_32);
_29 = [1630383708143501311_u64];
Goto(bb19)
}
bb19 = {
Call(_35 = dump_var(19_usize, 18_usize, Move(_18), 1_usize, Move(_1), 22_usize, Move(_22), 8_usize, Move(_8)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_35 = dump_var(19_usize, 20_usize, Move(_20), 10_usize, Move(_10), 6_usize, Move(_6), 15_usize, Move(_15)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_35 = dump_var(19_usize, 13_usize, Move(_13), 36_usize, _36, 36_usize, _36, 36_usize, _36), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(true), std::hint::black_box('\u{7eab}'), std::hint::black_box(26813_u16), std::hint::black_box(7442807604927359064_usize)));
                
            }
#[derive(Debug)]
pub struct Adt48 {
fld0: [isize; 2],
fld1: char,
fld2: (usize, (char, *const u8, bool, i8), f64),
fld3: i64,
fld4: u64,
}
#[derive(Debug)]
pub struct Adt49 {
fld0: [char; 3],
fld1: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,)),
fld2: (f64,),
fld3: *mut bool,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: bool,
fld1: char,
fld2: *const *const [usize; 2],
fld3: (*mut isize, u16, i32),
fld4: *const f64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: *mut [isize; 2],
fld1: [i16; 4],
fld2: [u32; 5],
fld3: *mut (*mut isize,),
fld4: u64,
fld5: [char; 3],
fld6: usize,
fld7: [i64; 5],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: [usize; 2],
fld1: *const f64,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: *const *const [usize; 2],
fld1: *mut [isize; 2],
fld2: (*mut isize,),
fld3: *mut bool,
fld4: *const u8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: i8,
fld1: *const *const [usize; 2],
fld2: isize,
}
#[derive(Debug)]
pub struct Adt55 {
fld0: i8,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: *mut isize,
fld1: [i16; 5],
fld2: usize,
fld3: i8,
fld4: [i32; 3],
fld5: f64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: [i32; 3],
}
#[derive(Debug)]
pub struct Adt58 {
fld0: u64,
fld1: i128,
fld2: Adt56,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: bool,
fld1: (char, *const u8, bool, i8),
fld2: (*const *const [usize; 2], (usize, (char, *const u8, bool, i8), f64), u8, (f32,)),
}
#[derive(Debug)]
pub struct Adt60 {
fld0: Adt50,
fld1: *const [usize; 2],
fld2: Adt56,
}
#[derive(Debug)]
pub struct Adt61 {
fld0: ((*mut isize,),),
fld1: Adt55,
fld2: Adt60,
fld3: [u32; 5],
fld4: Adt58,
}
#[derive(Debug)]
pub struct Adt62 {
fld0: u64,
fld1: [i16; 4],
fld2: (f32,),
fld3: [i16; 5],
fld4: [char; 3],
fld5: [i32; 3],
fld6: f64,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: u8,
fld1: char,
fld2: i64,
fld3: Adt60,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt64 {
fld0: (*const u8, (*mut [isize; 2], bool, *mut isize), usize, u64, (*mut isize,)),
fld1: *mut [isize; 2],
fld2: [i16; 5],
fld3: (*mut [isize; 2], bool, *mut isize),
}

