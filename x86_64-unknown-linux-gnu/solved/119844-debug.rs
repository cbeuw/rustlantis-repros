#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i128,mut _2: char,mut _3: u32,mut _4: usize) -> Adt47 {
mir! {
type RET = Adt47;
let _5: i64;
let _6: f32;
let _7: char;
let _8: Adt54;
let _9: char;
let _10: f64;
let _11: ([u128; 7], i128, i32);
let _12: u8;
let _13: i128;
let _14: f32;
let _15: (u64,);
let _16: [u128; 7];
let _17: i16;
let _18: usize;
let _19: (u64,);
let _20: [u128; 7];
let _21: (u32, *const [u32; 5], isize);
let _22: Adt43;
let _23: char;
let _24: (i128, i16);
let _25: f32;
let _26: [char; 3];
let _27: [i64; 6];
let _28: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16));
let _29: char;
let _30: ([u128; 7], i128, i32);
let _31: char;
let _32: Adt40;
let _33: i8;
let _34: [char; 7];
let _35: i128;
let _36: isize;
let _37: Adt43;
let _38: Adt44;
let _39: isize;
let _40: [u64; 5];
let _41: f64;
let _42: isize;
let _43: u32;
let _44: Adt44;
let _45: Adt43;
let _46: Adt40;
let _47: i64;
let _48: Adt44;
let _49: *const [u64; 5];
let _50: Adt42;
let _51: Adt53;
let _52: ([u128; 7], i128, i32);
let _53: Adt42;
let _54: u128;
let _55: [u32; 5];
let _56: ();
let _57: ();
{
_4 = 7_usize - 2_usize;
_4 = 6477231638538099026_usize >> 1109748336_u32;
_1 = 102467738516356402131629621320289584940_i128 << _4;
_5 = 4122334028231246518_i64;
_4 = !5755981845345499451_usize;
_1 = '\u{e8835}' as i128;
_4 = 2_usize;
_4 = 0_usize;
_2 = '\u{2abd5}';
_3 = false as u32;
_3 = !2671376151_u32;
_2 = '\u{bf30e}';
_4 = 1_usize * 15501390608467339766_usize;
_6 = 2880272157934953856062742964346398743_u128 as f32;
_6 = 223_u8 as f32;
_2 = '\u{4cacd}';
_7 = _2;
_6 = 4338701684833636509_u64 as f32;
_7 = _2;
_1 = 162327387048686162911006155307511433219_i128 * (-155899003766080268715113904463135081895_i128);
Goto(bb1)
}
bb1 = {
_2 = _7;
_6 = (-78_i8) as f32;
_2 = _7;
_8.fld0 = Adt45::Variant1 { fld0: 271655949573430481749247148429455832635_u128 };
_4 = 17232198212278171582_u64 as usize;
_7 = _2;
_6 = _5 as f32;
_9 = _7;
_5 = 1194668036232241580_i64 + (-2577834316703141101_i64);
_6 = _4 as f32;
_11.2 = (-1169935934_i32);
_11.2 = (-511646088_i32) + (-1352025390_i32);
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 317391406041735202283059055553701279896_u128;
_11.1 = true as i128;
_7 = _2;
_7 = _9;
_3 = 414915425_u32 << _5;
_11.2 = -66760103_i32;
_10 = _4 as f64;
_8.fld0 = Adt45::Variant1 { fld0: 70286647357175712441585874502596217659_u128 };
_9 = _7;
_11.2 = -(-1924598160_i32);
_8.fld0 = Adt45::Variant1 { fld0: 41450199574634494385655063427049428276_u128 };
_5 = (-4430500143658540906_i64);
_12 = 57_u8;
_11.2 = 32977583_i32 | (-645073925_i32);
_11.0 = [86626221880366629148238872934640508274_u128,296969726799563369278356241217001150168_u128,247980163236687149658359333995825463399_u128,330584308844581147011301565083965091577_u128,74571659282289182212702809060831918774_u128,218160832244447617846745550853143824602_u128,78785534630722307549900227815332088248_u128];
_10 = _3 as f64;
Goto(bb2)
}
bb2 = {
_7 = _2;
_1 = _9 as i128;
_14 = _6;
_1 = 74_isize as i128;
Goto(bb3)
}
bb3 = {
_9 = _2;
_12 = 121341095654455981133863506299141043359_u128 as u8;
_5 = 89410229457771886_i64;
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = _4 as u128;
_14 = -_6;
_11.1 = !_1;
_14 = _6 * _6;
_11.1 = _1 ^ _1;
_11.0 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_11.1 = _1 >> _3;
_1 = _5 as i128;
_5 = _11.1 as i64;
_1 = _11.1;
_7 = _9;
_7 = _9;
_14 = _6 + _6;
_15.0 = _14 as u64;
Call(_13 = core::intrinsics::bswap(_11.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_15.0 = 2206775885991643430_u64 << _4;
_15.0 = !8856352859274211674_u64;
_1 = _11.1 & _11.1;
_3 = 2562481096_u32 + 3499176902_u32;
_10 = _12 as f64;
_16 = _11.0;
_15.0 = 14522473328882236590_u64 << _1;
_15.0 = 17362701322608207047_u64;
Goto(bb5)
}
bb5 = {
_11.2 = !1661399079_i32;
_5 = !7248912171753769009_i64;
_9 = _7;
_19.0 = _15.0 % _15.0;
_2 = _7;
_11 = (_16, _1, (-1047908995_i32));
_1 = false as i128;
Call(_8 = fn1(_5, _19, _15, _11.1, _9, _11.1, _5, _11.2, _11, _11, _15.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_19.0 = _10 as u64;
_15 = (_19.0,);
_9 = _2;
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 173923353825256371432378008602612491882_u128 >> _11.2;
_7 = _9;
_11.2 = -1507492406_i32;
_15.0 = !_19.0;
_18 = _4;
_11.1 = _1;
_1 = _11.1 ^ _11.1;
_3 = !281888892_u32;
_19.0 = _12 as u64;
_7 = _2;
SetDiscriminant(_8.fld1, 1);
_11.2 = 1828881140_i32;
_13 = _12 as i128;
place!(Field::<i8>(Variant(_8.fld1, 1), 3)) = !(-75_i8);
_16 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_2 = _9;
_2 = _7;
place!(Field::<bool>(Variant(_8.fld1, 1), 0)) = false;
_10 = 23198_i16 as f64;
_10 = Field::<i8>(Variant(_8.fld1, 1), 3) as f64;
_17 = _15.0 as i16;
_9 = _2;
match _11.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
1828881140 => bb9,
_ => bb8
}
}
bb7 = {
_2 = _7;
_6 = (-78_i8) as f32;
_2 = _7;
_8.fld0 = Adt45::Variant1 { fld0: 271655949573430481749247148429455832635_u128 };
_4 = 17232198212278171582_u64 as usize;
_7 = _2;
_6 = _5 as f32;
_9 = _7;
_5 = 1194668036232241580_i64 + (-2577834316703141101_i64);
_6 = _4 as f32;
_11.2 = (-1169935934_i32);
_11.2 = (-511646088_i32) + (-1352025390_i32);
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 317391406041735202283059055553701279896_u128;
_11.1 = true as i128;
_7 = _2;
_7 = _9;
_3 = 414915425_u32 << _5;
_11.2 = -66760103_i32;
_10 = _4 as f64;
_8.fld0 = Adt45::Variant1 { fld0: 70286647357175712441585874502596217659_u128 };
_9 = _7;
_11.2 = -(-1924598160_i32);
_8.fld0 = Adt45::Variant1 { fld0: 41450199574634494385655063427049428276_u128 };
_5 = (-4430500143658540906_i64);
_12 = 57_u8;
_11.2 = 32977583_i32 | (-645073925_i32);
_11.0 = [86626221880366629148238872934640508274_u128,296969726799563369278356241217001150168_u128,247980163236687149658359333995825463399_u128,330584308844581147011301565083965091577_u128,74571659282289182212702809060831918774_u128,218160832244447617846745550853143824602_u128,78785534630722307549900227815332088248_u128];
_10 = _3 as f64;
Goto(bb2)
}
bb8 = {
_15.0 = 2206775885991643430_u64 << _4;
_15.0 = !8856352859274211674_u64;
_1 = _11.1 & _11.1;
_3 = 2562481096_u32 + 3499176902_u32;
_10 = _12 as f64;
_16 = _11.0;
_15.0 = 14522473328882236590_u64 << _1;
_15.0 = 17362701322608207047_u64;
Goto(bb5)
}
bb9 = {
_8.fld0 = Adt45::Variant1 { fld0: 150579293371435694775055976805066567834_u128 };
_8.fld0 = Adt45::Variant1 { fld0: 150787732544702360891138437409000265646_u128 };
place!(Field::<f64>(Variant(_8.fld1, 1), 4)) = _10;
place!(Field::<[u128; 7]>(Variant(_8.fld1, 1), 2)) = [100663152468477201804794775494437627641_u128,196007937273576383370973111744144425351_u128,262446975686967595410887686641058192032_u128,114283753189729720783222827052241418208_u128,122769070954370521986266365039738341094_u128,105465727539761443847935021290083770112_u128,249557826674218508524427199500150895057_u128];
_16 = [154325868703127603409087232870136984008_u128,76329607367794300169576353794641910742_u128,42886072345622548539545417706026373715_u128,253080424571168653192998887570850303269_u128,118053324069785357356876896870887156395_u128,252987623394276193470069531292975197894_u128,27303191534659356437527105782267188437_u128];
_11.0 = [6169918467474885508290150942408441438_u128,326985261112533214793981961674174977957_u128,30813310169038128615543345058307918973_u128,259336437393165634126630294491671010445_u128,105837595197052418994814569291690162284_u128,126546360597026600631788145298944224988_u128,28756349870283918064933576089754003336_u128];
_19.0 = _15.0 << _1;
_10 = Field::<f64>(Variant(_8.fld1, 1), 4) - Field::<f64>(Variant(_8.fld1, 1), 4);
_11.2 = (-632006493_i32) >> _1;
_2 = _9;
_21.2 = !9223372036854775807_isize;
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = !108080207249825507022412131075050793783_u128;
_13 = _14 as i128;
SetDiscriminant(_8.fld0, 1);
_19 = (_15.0,);
_20 = Field::<[u128; 7]>(Variant(_8.fld1, 1), 2);
_6 = -_14;
place!(Field::<i8>(Variant(_8.fld1, 1), 3)) = 105_i8;
_3 = 1859625930_u32;
_8.fld0 = Adt45::Variant1 { fld0: 231826513449611753030147593833853345275_u128 };
_5 = _18 as i64;
_21.0 = _3;
_14 = _6 + _6;
_12 = _5 as u8;
_10 = Field::<f64>(Variant(_8.fld1, 1), 4);
_21.0 = _3;
_5 = _11.2 as i64;
match _3 {
0 => bb1,
1 => bb7,
1859625930 => bb10,
_ => bb8
}
}
bb10 = {
_8.fld0 = Adt45::Variant1 { fld0: 106457732889754331333051296475859962966_u128 };
place!(Field::<f64>(Variant(_8.fld1, 1), 4)) = -_10;
place!(Field::<i8>(Variant(_8.fld1, 1), 3)) = !13_i8;
_24.0 = -_1;
_6 = 28485875988462991963568467114496120882_u128 as f32;
_13 = _1 >> _11.2;
_24.0 = _13;
_7 = _2;
_19.0 = _15.0 ^ _15.0;
match _21.0 {
0 => bb6,
1 => bb4,
1859625930 => bb12,
_ => bb11
}
}
bb11 = {
_19.0 = _10 as u64;
_15 = (_19.0,);
_9 = _2;
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 173923353825256371432378008602612491882_u128 >> _11.2;
_7 = _9;
_11.2 = -1507492406_i32;
_15.0 = !_19.0;
_18 = _4;
_11.1 = _1;
_1 = _11.1 ^ _11.1;
_3 = !281888892_u32;
_19.0 = _12 as u64;
_7 = _2;
SetDiscriminant(_8.fld1, 1);
_11.2 = 1828881140_i32;
_13 = _12 as i128;
place!(Field::<i8>(Variant(_8.fld1, 1), 3)) = !(-75_i8);
_16 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_2 = _9;
_2 = _7;
place!(Field::<bool>(Variant(_8.fld1, 1), 0)) = false;
_10 = 23198_i16 as f64;
_10 = Field::<i8>(Variant(_8.fld1, 1), 3) as f64;
_17 = _15.0 as i16;
_9 = _2;
match _11.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
1828881140 => bb9,
_ => bb8
}
}
bb12 = {
_9 = _7;
_24.0 = _11.2 as i128;
_25 = _6;
_24.1 = Field::<f64>(Variant(_8.fld1, 1), 4) as i16;
_20 = [327330904152516963996786426114354832604_u128,278579971172762107442735353976331121048_u128,92286878104370986806930158679881755148_u128,15919562229759019510624052714866338580_u128,293322288287466444505929447696791897725_u128,77896447358138293242343001929297778657_u128,110591590846883237767621782376943699506_u128];
_20 = _16;
_23 = _9;
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 133575617283917998255853087129528487586_u128;
match Field::<u128>(Variant(_8.fld0, 1), 0) {
0 => bb1,
1 => bb9,
2 => bb11,
3 => bb8,
4 => bb5,
5 => bb13,
133575617283917998255853087129528487586 => bb15,
_ => bb14
}
}
bb13 = {
_2 = _7;
_6 = (-78_i8) as f32;
_2 = _7;
_8.fld0 = Adt45::Variant1 { fld0: 271655949573430481749247148429455832635_u128 };
_4 = 17232198212278171582_u64 as usize;
_7 = _2;
_6 = _5 as f32;
_9 = _7;
_5 = 1194668036232241580_i64 + (-2577834316703141101_i64);
_6 = _4 as f32;
_11.2 = (-1169935934_i32);
_11.2 = (-511646088_i32) + (-1352025390_i32);
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 317391406041735202283059055553701279896_u128;
_11.1 = true as i128;
_7 = _2;
_7 = _9;
_3 = 414915425_u32 << _5;
_11.2 = -66760103_i32;
_10 = _4 as f64;
_8.fld0 = Adt45::Variant1 { fld0: 70286647357175712441585874502596217659_u128 };
_9 = _7;
_11.2 = -(-1924598160_i32);
_8.fld0 = Adt45::Variant1 { fld0: 41450199574634494385655063427049428276_u128 };
_5 = (-4430500143658540906_i64);
_12 = 57_u8;
_11.2 = 32977583_i32 | (-645073925_i32);
_11.0 = [86626221880366629148238872934640508274_u128,296969726799563369278356241217001150168_u128,247980163236687149658359333995825463399_u128,330584308844581147011301565083965091577_u128,74571659282289182212702809060831918774_u128,218160832244447617846745550853143824602_u128,78785534630722307549900227815332088248_u128];
_10 = _3 as f64;
Goto(bb2)
}
bb14 = {
_7 = _2;
_1 = _9 as i128;
_14 = _6;
_1 = 74_isize as i128;
Goto(bb3)
}
bb15 = {
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 201355635363201005647547098354017479006_u128 - 4438910637624284832849118262123893213_u128;
_26 = [_9,_9,_9];
_27 = [_5,_5,_5,_5,_5,_5];
Goto(bb16)
}
bb16 = {
_16 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_13 = -_1;
_27 = [_5,_5,_5,_5,_5,_5];
_16 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_11.2 = (-828351967_i32);
_28.2 = (_5, _14, _13, _11.2);
_30.1 = _28.2.2;
_24 = (_1, _17);
place!(Field::<[i64; 8]>(Variant(_8.fld0, 0), 0)) = [_28.2.0,_28.2.0,_5,_28.2.0,_28.2.0,_28.2.0,_28.2.0,_5];
_15.0 = _19.0 << _11.1;
_28.2.3 = _7 as i32;
_28.3 = (_30.1, _17);
_30.2 = _28.3.0 as i32;
_27 = [_28.2.0,_28.2.0,_5,_5,_28.2.0,_5];
_30.2 = _11.2;
_29 = _9;
_28.3.1 = !_24.1;
_32.fld1.0 = _11.0;
_32.fld1.2 = -_28.2.3;
_30.0 = [122744332480940022701189062178449449485_u128,102124456444829371009518169614071401490_u128,86963702656882992613289235646810765908_u128,23726824994121765550154080387755396274_u128,192536143328229071461721528114987810413_u128,68563087746005381750674170594929016054_u128,131555837948122090926882041243044083358_u128];
match _30.2 {
0 => bb12,
1 => bb2,
2 => bb10,
3 => bb4,
4 => bb17,
5 => bb18,
340282366920938463463374607430939859489 => bb20,
_ => bb19
}
}
bb17 = {
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = 201355635363201005647547098354017479006_u128 - 4438910637624284832849118262123893213_u128;
_26 = [_9,_9,_9];
_27 = [_5,_5,_5,_5,_5,_5];
Goto(bb16)
}
bb18 = {
_15.0 = 2206775885991643430_u64 << _4;
_15.0 = !8856352859274211674_u64;
_1 = _11.1 & _11.1;
_3 = 2562481096_u32 + 3499176902_u32;
_10 = _12 as f64;
_16 = _11.0;
_15.0 = 14522473328882236590_u64 << _1;
_15.0 = 17362701322608207047_u64;
Goto(bb5)
}
bb19 = {
_15.0 = 2206775885991643430_u64 << _4;
_15.0 = !8856352859274211674_u64;
_1 = _11.1 & _11.1;
_3 = 2562481096_u32 + 3499176902_u32;
_10 = _12 as f64;
_16 = _11.0;
_15.0 = 14522473328882236590_u64 << _1;
_15.0 = 17362701322608207047_u64;
Goto(bb5)
}
bb20 = {
_35 = _11.1;
_32.fld1 = (_16, _28.3.0, _30.2);
RET = Adt47::Variant1 { fld0: _19.0,fld1: _24 };
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (_24.0, _17);
_12 = _4 as u8;
_28.2 = (_5, _14, _32.fld1.1, _32.fld1.2);
place!(Field::<[u128; 7]>(Variant(_8.fld1, 1), 2)) = [283073760378072747596310860059067086110_u128,57618085336365160820197312182653605163_u128,304670940564082100801884313366522369419_u128,103838867346805651262737392361974204946_u128,164321193675091352133547138639306652332_u128,236658748308479233930402784603763426243_u128,60430073943598065454705472467043577046_u128];
_28.0 = [_28.2.0,_28.2.0,_28.2.0,_5,_5,_28.2.0,_5,_5];
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).0 = _21.0 - _21.0;
_34 = [_9,_23,_9,_23,_7,_7,_7];
place!(Field::<([i64; 8],)>(Variant(RET, 0), 2)).0 = [_5,_28.2.0,_28.2.0,_28.2.0,_5,_28.2.0,_28.2.0,_5];
place!(Field::<[u64; 5]>(Variant(_8.fld0, 0), 3)) = [_19.0,_15.0,_15.0,_19.0,_19.0];
_29 = _2;
match _11.2 {
0 => bb5,
1 => bb16,
2 => bb17,
3 => bb4,
4 => bb21,
5 => bb22,
6 => bb23,
340282366920938463463374607430939859489 => bb25,
_ => bb24
}
}
bb21 = {
_15.0 = 2206775885991643430_u64 << _4;
_15.0 = !8856352859274211674_u64;
_1 = _11.1 & _11.1;
_3 = 2562481096_u32 + 3499176902_u32;
_10 = _12 as f64;
_16 = _11.0;
_15.0 = 14522473328882236590_u64 << _1;
_15.0 = 17362701322608207047_u64;
Goto(bb5)
}
bb22 = {
_15.0 = 2206775885991643430_u64 << _4;
_15.0 = !8856352859274211674_u64;
_1 = _11.1 & _11.1;
_3 = 2562481096_u32 + 3499176902_u32;
_10 = _12 as f64;
_16 = _11.0;
_15.0 = 14522473328882236590_u64 << _1;
_15.0 = 17362701322608207047_u64;
Goto(bb5)
}
bb23 = {
_8.fld0 = Adt45::Variant1 { fld0: 106457732889754331333051296475859962966_u128 };
place!(Field::<f64>(Variant(_8.fld1, 1), 4)) = -_10;
place!(Field::<i8>(Variant(_8.fld1, 1), 3)) = !13_i8;
_24.0 = -_1;
_6 = 28485875988462991963568467114496120882_u128 as f32;
_13 = _1 >> _11.2;
_24.0 = _13;
_7 = _2;
_19.0 = _15.0 ^ _15.0;
match _21.0 {
0 => bb6,
1 => bb4,
1859625930 => bb12,
_ => bb11
}
}
bb24 = {
_16 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_13 = -_1;
_27 = [_5,_5,_5,_5,_5,_5];
_16 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_11.2 = (-828351967_i32);
SetDiscriminant(_8.fld0, 0);
_28.2 = (_5, _14, _13, _11.2);
_30.1 = _28.2.2;
_24 = (_1, _17);
place!(Field::<[i64; 8]>(Variant(_8.fld0, 0), 0)) = [_28.2.0,_28.2.0,_5,_28.2.0,_28.2.0,_28.2.0,_28.2.0,_5];
_15.0 = _19.0 << _11.1;
_28.2.3 = _7 as i32;
_28.3 = (_30.1, _17);
_30.2 = _28.3.0 as i32;
_27 = [_28.2.0,_28.2.0,_5,_5,_28.2.0,_5];
_30.2 = _11.2;
_29 = _9;
_28.3.1 = !_24.1;
_32.fld1.0 = _11.0;
_32.fld1.2 = -_28.2.3;
_30.0 = [122744332480940022701189062178449449485_u128,102124456444829371009518169614071401490_u128,86963702656882992613289235646810765908_u128,23726824994121765550154080387755396274_u128,192536143328229071461721528114987810413_u128,68563087746005381750674170594929016054_u128,131555837948122090926882041243044083358_u128];
match _30.2 {
0 => bb12,
1 => bb2,
2 => bb10,
3 => bb4,
4 => bb17,
5 => bb18,
340282366920938463463374607430939859489 => bb20,
_ => bb19
}
}
bb25 = {
_31 = _2;
_18 = !_4;
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).1 = _28.2.2;
place!(Field::<[u64; 5]>(Variant(_8.fld0, 0), 3)) = [_19.0,_19.0,_15.0,_15.0,_15.0];
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (_1, _28.3.1);
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)) = (_20, _28.2.2, _30.2);
_20 = _11.0;
_41 = 64756_u16 as f64;
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (_32.fld1.1, _24.1);
_41 = Field::<f64>(Variant(_8.fld1, 1), 4) * _10;
_2 = _23;
_33 = Field::<i8>(Variant(_8.fld1, 1), 3);
place!(Field::<[u128; 7]>(Variant(_8.fld1, 1), 2)) = [8824522243401920200845166524440025057_u128,57048193320276439048673465693477269149_u128,197875043164139610382208490465373113636_u128,288521688463699957197998742670505506609_u128,249627026112375371266352924399306708187_u128,210310494527708644243322499756620723389_u128,195361722542135326427983067920625979603_u128];
_13 = !Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1).1;
place!(Field::<i32>(Variant(_8.fld0, 0), 5)) = Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1).2;
_28.2.1 = -_6;
_32.fld0 = [_7,_23,_7];
_17 = _28.3.1 >> _15.0;
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).0 = [196573897566878123324135763153680453171_u128,22535968008740319234221371613992737442_u128,310279794432215800491194513017044786337_u128,124499461943979770930946649932278749885_u128,25587181850028310686588764993825523807_u128,320441731221856550697927253167725423805_u128,62586764368101981746626903310141066539_u128];
_32.fld1.2 = !_11.2;
_28.3 = (_30.1, _17);
_6 = _15.0 as f32;
_32.fld1.2 = _9 as i32;
_19.0 = !_15.0;
Call(_26 = fn12(_30.0, _32.fld1, _4, Field::<([i64; 8],)>(Variant(RET, 0), 2).0, Field::<[u128; 7]>(Variant(_8.fld1, 1), 2), _7, Field::<([i64; 8],)>(Variant(RET, 0), 2).0, _21.0, _28.2.0, Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1).2, Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1).2, _30.0, _30), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_28.2.1 = -_14;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).2 = _21.2 + _21.2;
_19.0 = _33 as u64;
place!(Field::<bool>(Variant(_8.fld1, 1), 0)) = true;
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1).1, _24.1);
_28.2 = (_5, _25, _28.3.0, _30.2);
_42 = _15.0 as isize;
_28.1 = -_6;
place!(Field::<i128>(Variant(_8.fld0, 0), 4)) = -_13;
_46.fld1.1 = -_28.3.0;
_32.fld1.0 = [213457638939662803656481520475273959293_u128,28702656555291303059438760672561083514_u128,107998085769485031531683349959031577145_u128,251063606981110611882013684796674749901_u128,72847537827212034722594664279335577214_u128,316622364244282023623911810209867456412_u128,120823495810489381131321751608751054442_u128];
place!(Field::<([i64; 8],)>(Variant(_8.fld0, 0), 2)) = Field::<([i64; 8],)>(Variant(RET, 0), 2);
_12 = 0_u8 * 178_u8;
match _11.2 {
0 => bb22,
1 => bb10,
2 => bb11,
3 => bb4,
4 => bb9,
5 => bb27,
6 => bb28,
340282366920938463463374607430939859489 => bb30,
_ => bb29
}
}
bb27 = {
_9 = _2;
_12 = 121341095654455981133863506299141043359_u128 as u8;
_5 = 89410229457771886_i64;
place!(Field::<u128>(Variant(_8.fld0, 1), 0)) = _4 as u128;
_14 = -_6;
_11.1 = !_1;
_14 = _6 * _6;
_11.1 = _1 ^ _1;
_11.0 = [Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0),Field::<u128>(Variant(_8.fld0, 1), 0)];
_11.1 = _1 >> _3;
_1 = _5 as i128;
_5 = _11.1 as i64;
_1 = _11.1;
_7 = _9;
_7 = _9;
_14 = _6 + _6;
_15.0 = _14 as u64;
Call(_13 = core::intrinsics::bswap(_11.1), ReturnTo(bb4), UnwindUnreachable())
}
bb28 = {
_35 = _11.1;
_32.fld1 = (_16, _28.3.0, _30.2);
RET = Adt47::Variant1 { fld0: _19.0,fld1: _24 };
SetDiscriminant(RET, 0);
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (_24.0, _17);
_12 = _4 as u8;
_28.2 = (_5, _14, _32.fld1.1, _32.fld1.2);
place!(Field::<[u128; 7]>(Variant(_8.fld1, 1), 2)) = [283073760378072747596310860059067086110_u128,57618085336365160820197312182653605163_u128,304670940564082100801884313366522369419_u128,103838867346805651262737392361974204946_u128,164321193675091352133547138639306652332_u128,236658748308479233930402784603763426243_u128,60430073943598065454705472467043577046_u128];
_28.0 = [_28.2.0,_28.2.0,_28.2.0,_5,_5,_28.2.0,_5,_5];
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).0 = _21.0 - _21.0;
_34 = [_9,_23,_9,_23,_7,_7,_7];
place!(Field::<([i64; 8],)>(Variant(RET, 0), 2)).0 = [_5,_28.2.0,_28.2.0,_28.2.0,_5,_28.2.0,_28.2.0,_5];
place!(Field::<[u64; 5]>(Variant(_8.fld0, 0), 3)) = [_19.0,_15.0,_15.0,_19.0,_19.0];
_29 = _2;
match _11.2 {
0 => bb5,
1 => bb16,
2 => bb17,
3 => bb4,
4 => bb21,
5 => bb22,
6 => bb23,
340282366920938463463374607430939859489 => bb25,
_ => bb24
}
}
bb29 = {
_7 = _2;
_1 = _9 as i128;
_14 = _6;
_1 = 74_isize as i128;
Goto(bb3)
}
bb30 = {
_32 = Adt40 { fld0: _26,fld1: _11 };
_31 = _2;
_46 = Adt40 { fld0: _26,fld1: _30 };
place!(Field::<[u64; 5]>(Variant(_8.fld0, 0), 3)) = [_19.0,_15.0,_15.0,_19.0,_15.0];
place!(Field::<i8>(Variant(_8.fld1, 1), 3)) = !_33;
match _21.0 {
0 => bb7,
1 => bb16,
2 => bb31,
1859625930 => bb33,
_ => bb32
}
}
bb31 = {
_28.2.1 = -_14;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).2 = _21.2 + _21.2;
_19.0 = _33 as u64;
place!(Field::<bool>(Variant(_8.fld1, 1), 0)) = true;
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1).1, _24.1);
_28.2 = (_5, _25, _28.3.0, _30.2);
_42 = _15.0 as isize;
_28.1 = -_6;
place!(Field::<i128>(Variant(_8.fld0, 0), 4)) = -_13;
_46.fld1.1 = -_28.3.0;
_32.fld1.0 = [213457638939662803656481520475273959293_u128,28702656555291303059438760672561083514_u128,107998085769485031531683349959031577145_u128,251063606981110611882013684796674749901_u128,72847537827212034722594664279335577214_u128,316622364244282023623911810209867456412_u128,120823495810489381131321751608751054442_u128];
place!(Field::<([i64; 8],)>(Variant(_8.fld0, 0), 2)) = Field::<([i64; 8],)>(Variant(RET, 0), 2);
_12 = 0_u8 * 178_u8;
match _11.2 {
0 => bb22,
1 => bb10,
2 => bb11,
3 => bb4,
4 => bb9,
5 => bb27,
6 => bb28,
340282366920938463463374607430939859489 => bb30,
_ => bb29
}
}
bb32 = {
_11.2 = !1661399079_i32;
_5 = !7248912171753769009_i64;
_9 = _7;
_19.0 = _15.0 % _15.0;
_2 = _7;
_11 = (_16, _1, (-1047908995_i32));
_1 = false as i128;
Call(_8 = fn1(_5, _19, _15, _11.1, _9, _11.1, _5, _11.2, _11, _11, _15.0), ReturnTo(bb6), UnwindUnreachable())
}
bb33 = {
_40 = [_15.0,_15.0,_15.0,_19.0,_15.0];
_39 = !_21.2;
_30.0 = [156732649318059735667435650180024550025_u128,177746484250909540175920648764643253010_u128,281076376490854679388410995324813257760_u128,253917154091624692732907300687948892514_u128,42630176490397937084145110351297697180_u128,157878186018120425507052737526428758696_u128,292566935381721554785131902613080211306_u128];
_46.fld0 = _32.fld0;
_26 = [_23,_31,_9];
_32.fld1.2 = Field::<i32>(Variant(_8.fld0, 0), 5);
_49 = core::ptr::addr_of!(place!(Field::<[u64; 5]>(Variant(_8.fld0, 0), 3)));
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)) = (_24.0, _17);
_36 = _21.2 >> _28.3.1;
_24 = (Field::<(i128, i16)>(Variant(RET, 0), 4).0, _17);
_52 = _46.fld1;
_36 = !_42;
place!(Field::<[char; 6]>(Variant(RET, 0), 0)) = [_23,_9,_29,_29,_23,_29];
_12 = 156_u8;
place!(Field::<char>(Variant(_8.fld0, 0), 1)) = _9;
_41 = _10 - _10;
_30.1 = _41 as i128;
place!(Field::<([i64; 8],)>(Variant(_8.fld0, 0), 2)).0 = Field::<([i64; 8],)>(Variant(RET, 0), 2).0;
_15 = _19;
_48 = Adt44::Variant1 { fld0: Field::<[char; 6]>(Variant(RET, 0), 0),fld1: _6,fld2: _19.0,fld3: _33 };
_44 = Move(_48);
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).0 = [9025959601736671567566709285425250604_u128,264023649807752451995705392916758757540_u128,8867135518057559196399653147026375755_u128,250765320762297316993464617693999752623_u128,43619651289814401586661013367572240305_u128,211508163568050959825404229134582619466_u128,185075396629256718461044567465942623394_u128];
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).2 = _36;
SetDiscriminant(_8.fld0, 0);
_16 = _30.0;
Call(place!(Field::<Adt46>(Variant(RET, 0), 3)) = fn13(_42, _49, _46.fld1.0, _4, Move(_44), _28.3, _36, _14), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_23 = _7;
_2 = _31;
_20 = _30.0;
place!(Field::<[char; 6]>(Variant(RET, 0), 0)) = [_7,_23,_31,_7,_29,_23];
_28.2.3 = _30.2;
place!(Field::<usize>(Variant(place!(Field::<Adt44>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 3)), 0), 3)), 0), 3)) = _18;
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)).1 = Field::<i16>(Variant(Field::<Adt44>(Variant(Field::<Adt46>(Variant(RET, 0), 3), 0), 3), 0), 4);
place!(Field::<[char; 6]>(Variant(RET, 0), 0)) = [_23,_9,_9,_29,_29,_9];
place!(Field::<i128>(Variant(_8.fld0, 0), 4)) = _28.2.2;
SetDiscriminant(Field::<Adt46>(Variant(RET, 0), 3), 2);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).0 = _3;
_39 = !_36;
RET = Adt47::Variant1 { fld0: _19.0,fld1: _28.3 };
_46.fld1.1 = _32.fld1.1 - _13;
place!(Field::<i32>(Variant(_8.fld0, 0), 5)) = -_28.2.3;
_19.0 = Field::<u64>(Variant(RET, 1), 0) << _46.fld1.1;
_6 = _28.1;
Goto(bb35)
}
bb35 = {
Call(_56 = dump_var(0_usize, 33_usize, Move(_33), 9_usize, Move(_9), 24_usize, Move(_24), 23_usize, Move(_23)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_56 = dump_var(0_usize, 27_usize, Move(_27), 29_usize, Move(_29), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Call(_56 = dump_var(0_usize, 52_usize, Move(_52), 1_usize, Move(_1), 42_usize, Move(_42), 34_usize, Move(_34)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_56 = dump_var(0_usize, 26_usize, Move(_26), 15_usize, Move(_15), 5_usize, Move(_5), 57_usize, _57), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i64,mut _2: (u64,),mut _3: (u64,),mut _4: i128,mut _5: char,mut _6: i128,mut _7: i64,mut _8: i32,mut _9: ([u128; 7], i128, i32),mut _10: ([u128; 7], i128, i32),mut _11: u64) -> Adt54 {
mir! {
type RET = Adt54;
let _12: Adt47;
let _13: f64;
let _14: (u64,);
let _15: (i128, i16);
let _16: isize;
let _17: (u32, *const [u32; 5], isize);
let _18: u64;
let _19: i16;
let _20: [char; 6];
let _21: bool;
let _22: [u32; 5];
let _23: (bool, char, bool, u16, [u64; 5]);
let _24: u8;
let _25: f32;
let _26: (u32, *const [u32; 5], isize);
let _27: (i128, i16);
let _28: isize;
let _29: (i128, i16);
let _30: f32;
let _31: Adt50;
let _32: bool;
let _33: [i64; 8];
let _34: [char; 6];
let _35: f64;
let _36: u128;
let _37: [i64; 8];
let _38: [char; 7];
let _39: [u32; 5];
let _40: isize;
let _41: i32;
let _42: ([u128; 7], i128, i32);
let _43: u16;
let _44: f32;
let _45: &'static usize;
let _46: Adt47;
let _47: [u128; 7];
let _48: Adt48;
let _49: *const [u64; 5];
let _50: f64;
let _51: u8;
let _52: usize;
let _53: isize;
let _54: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16));
let _55: u64;
let _56: char;
let _57: i32;
let _58: [u32; 5];
let _59: usize;
let _60: Adt54;
let _61: Adt43;
let _62: ();
let _63: ();
{
_2.0 = _3.0 + _3.0;
RET.fld0 = Adt45::Variant1 { fld0: 133615541749290906333329072971896626324_u128 };
_8 = _9.2;
_10.2 = _6 as i32;
_10.2 = _9.2 * _9.2;
_2 = (_3.0,);
_11 = _2.0 * _2.0;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 45821_u16 as u128;
_9.1 = _5 as i128;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 5330_i16 as u128;
_4 = _10.1 & _10.1;
RET.fld0 = Adt45::Variant1 { fld0: 274201611605274181955995199195152344546_u128 };
_2.0 = _3.0;
_13 = 289258531287198348597089970354334584165_u128 as f64;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 165303368_u32 as u128;
_2 = _3;
_14.0 = _11;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 141586587978861636641598675868768168257_u128 + 312007548331672897433224219332378180415_u128;
_11 = _2.0;
SetDiscriminant(RET.fld0, 1);
_6 = _10.1;
_9.1 = _4;
_5 = '\u{e7144}';
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = !88398047121688193858924018868082048913_u128;
_14.0 = _11;
_5 = '\u{77365}';
Call(_15.0 = fn2(_9, _9, _14.0, _9.1, _9, Field::<u128>(Variant(RET.fld0, 1), 0), _8, _4, _4, _9.2, _9, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14 = (_11,);
_7 = _1;
_10.1 = _4;
_7 = _13 as i64;
_6 = Field::<u128>(Variant(RET.fld0, 1), 0) as i128;
_16 = _5 as isize;
_10.0 = [Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0)];
_15.0 = true as i128;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 139686752084000163336032970045183779160_u128;
Call(_7 = fn3(_10.1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_17.0 = !4061964189_u32;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 87805930903712058203191910357244089900_u128;
_9.1 = _10.1;
_2.0 = _14.0;
_7 = -_1;
_8 = _9.2 | _9.2;
_15.1 = 8324_i16;
_10.2 = -_9.2;
_3.0 = _11;
_9.0 = _10.0;
_11 = 207_u8 as u64;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 106794101435484299359635155133622044456_u128 >> _15.0;
_8 = _10.2 - _10.2;
_13 = _15.1 as f64;
_3.0 = _13 as u64;
_2.0 = Field::<u128>(Variant(RET.fld0, 1), 0) as u64;
_5 = '\u{c1ede}';
RET.fld0 = Adt45::Variant1 { fld0: 183904295846421407010679376433948200139_u128 };
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 289284385191414367558881532205277726136_u128;
_3.0 = _14.0;
_14 = (_11,);
_10.2 = _8;
SetDiscriminant(RET.fld0, 2);
place!(Field::<i128>(Variant(RET.fld0, 2), 0)) = _10.1;
_10.0 = [239292184320904738193741157313952423425_u128,57786140679404606402596742514441571335_u128,17831240283321226152250915490787643539_u128,133684801522847030224436718196967855465_u128,57065661026860112216674783624977513169_u128,236840774544701385629491899909080569217_u128,42543479119681352281230499289874108323_u128];
match _9.2 {
0 => bb3,
1 => bb4,
2 => bb5,
340282366920938463463374607430720302461 => bb7,
_ => bb6
}
}
bb3 = {
_14 = (_11,);
_7 = _1;
_10.1 = _4;
_7 = _13 as i64;
_6 = Field::<u128>(Variant(RET.fld0, 1), 0) as i128;
_16 = _5 as isize;
_10.0 = [Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0)];
_15.0 = true as i128;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 139686752084000163336032970045183779160_u128;
Call(_7 = fn3(_10.1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_17.2 = _16 * _16;
_9 = (_10.0, _10.1, _10.2);
_18 = _5 as u64;
_12 = Adt47::Variant1 { fld0: _3.0,fld1: _15 };
_9.1 = Field::<i128>(Variant(RET.fld0, 2), 0) * _6;
place!(Field::<(i128, i16)>(Variant(_12, 1), 1)).1 = _15.1 | _15.1;
_18 = _11 * _11;
_2.0 = _5 as u64;
_14.0 = Field::<u64>(Variant(_12, 1), 0) % _3.0;
_19 = _5 as i16;
RET.fld0 = Adt45::Variant1 { fld0: 35419697377081730842255589721801592632_u128 };
_12 = Adt47::Variant1 { fld0: _18,fld1: _15 };
_17.2 = _16 << _9.1;
_23.2 = !true;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5)).2 = _17.0 as isize;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = _15.1 ^ _15.1;
_15.1 = -_19;
Goto(bb8)
}
bb8 = {
_19 = 8450951808040745151_usize as i16;
_26.1 = core::ptr::addr_of!(_22);
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = !4798988583965974818849608333189320152_u128;
_10.0 = [Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0)];
_26.0 = _7 as u32;
_17.0 = _13 as u32;
_6 = -_4;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)) = (_10.1, _19);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5)).2 = _16 - _16;
_9.0 = [Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0)];
_29 = (_9.1, _19);
_5 = '\u{c2827}';
_26.0 = _17.0;
_10.2 = _8;
_20 = [_5,_5,_5,_5,_5,_5];
_15.1 = Field::<(i128, i16)>(Variant(_12, 0), 4).1 << _17.2;
_23.3 = 20585_u16;
_26.2 = Field::<u128>(Variant(RET.fld0, 1), 0) as isize;
match _23.3 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb9,
20585 => bb11,
_ => bb10
}
}
bb9 = {
_17.2 = _16 * _16;
_9 = (_10.0, _10.1, _10.2);
_18 = _5 as u64;
_12 = Adt47::Variant1 { fld0: _3.0,fld1: _15 };
_9.1 = Field::<i128>(Variant(RET.fld0, 2), 0) * _6;
place!(Field::<(i128, i16)>(Variant(_12, 1), 1)).1 = _15.1 | _15.1;
_18 = _11 * _11;
_2.0 = _5 as u64;
_14.0 = Field::<u64>(Variant(_12, 1), 0) % _3.0;
_19 = _5 as i16;
RET.fld0 = Adt45::Variant1 { fld0: 35419697377081730842255589721801592632_u128 };
_12 = Adt47::Variant1 { fld0: _18,fld1: _15 };
_17.2 = _16 << _9.1;
_23.2 = !true;
SetDiscriminant(_12, 0);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5)).2 = _17.0 as isize;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = _15.1 ^ _15.1;
_15.1 = -_19;
Goto(bb8)
}
bb10 = {
Return()
}
bb11 = {
_9.2 = _13 as i32;
_26.0 = !_17.0;
_17.1 = core::ptr::addr_of!(_22);
_3.0 = _11 | _14.0;
Goto(bb12)
}
bb12 = {
_27.1 = _15.1;
_10.1 = _29.0;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_10.0, _9.1, _10.2);
_14 = (_18,);
_15.1 = -_27.1;
_17.0 = _26.0;
_16 = _17.2 * Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5).2;
_3 = (_2.0,);
_28 = _16 - _17.2;
_27.1 = 7317844640181258218_usize as i16;
RET.fld0 = Adt45::Variant1 { fld0: 126845539719429723623268074341182768883_u128 };
_10.0 = [18454599130153588950606770700118082716_u128,170372730936424311556459631564998282736_u128,236805368723231035517193367296370942890_u128,49279840682083188677634498306700795796_u128,328104161736534604120094108785504167642_u128,22194926962554602703984642940281917141_u128,5987867257987864781052094601359884461_u128];
_20 = [_5,_5,_5,_5,_5,_5];
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).2 = -_10.2;
RET.fld0 = Adt45::Variant1 { fld0: 13901564837862868058178282339346267318_u128 };
_14.0 = _2.0;
_25 = _7 as f32;
_26.2 = _6 as isize;
_25 = _16 as f32;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = !_19;
_17.0 = _26.0 >> Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).2;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_10.0, _9.1, _10.2);
_9.1 = Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1;
_33 = [_1,_1,_1,_1,_1,_7,_1,_1];
_22 = [_17.0,_26.0,_17.0,_17.0,_17.0];
_3.0 = _18;
_2.0 = _14.0 | _3.0;
Goto(bb13)
}
bb13 = {
_26 = (_17.0, _17.1, _28);
_32 = !_23.2;
_21 = !_32;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = _5 as u128;
_26.1 = core::ptr::addr_of!(_22);
_26.0 = _17.0 + _17.0;
_15 = (_6, _19);
place!(Field::<[char; 6]>(Variant(_12, 0), 0)) = [_5,_5,_5,_5,_5,_5];
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).1 = _9.1;
_29.0 = Field::<(i128, i16)>(Variant(_12, 0), 4).0;
_31.fld2 = _26.2 * _16;
SetDiscriminant(RET.fld0, 1);
_34 = [_5,_5,_5,_5,_5,_5];
RET.fld0 = Adt45::Variant1 { fld0: 137129634564801356361120420366154097667_u128 };
place!(Field::<([i64; 8],)>(Variant(_12, 0), 2)) = (_33,);
_14.0 = _2.0;
_31.fld0 = _23.2 & _23.2;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).0 = _10.1 * _6;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).0 = [33821487588322274444888149838329258926_u128,81655648631439212227550853569450920626_u128,215236594311721449791240820112172988989_u128,162259763230762700676110776196142645824_u128,282021984780472533844640399596747666467_u128,194433078126752480454981687124973936469_u128,31474945982646037311224168998991208480_u128];
match _23.3 {
0 => bb14,
1 => bb15,
20585 => bb17,
_ => bb16
}
}
bb14 = {
_27.1 = _15.1;
_10.1 = _29.0;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_10.0, _9.1, _10.2);
_14 = (_18,);
_15.1 = -_27.1;
_17.0 = _26.0;
_16 = _17.2 * Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5).2;
_3 = (_2.0,);
_28 = _16 - _17.2;
_27.1 = 7317844640181258218_usize as i16;
RET.fld0 = Adt45::Variant1 { fld0: 126845539719429723623268074341182768883_u128 };
_10.0 = [18454599130153588950606770700118082716_u128,170372730936424311556459631564998282736_u128,236805368723231035517193367296370942890_u128,49279840682083188677634498306700795796_u128,328104161736534604120094108785504167642_u128,22194926962554602703984642940281917141_u128,5987867257987864781052094601359884461_u128];
_20 = [_5,_5,_5,_5,_5,_5];
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).2 = -_10.2;
RET.fld0 = Adt45::Variant1 { fld0: 13901564837862868058178282339346267318_u128 };
_14.0 = _2.0;
_25 = _7 as f32;
_26.2 = _6 as isize;
_25 = _16 as f32;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = !_19;
_17.0 = _26.0 >> Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).2;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_10.0, _9.1, _10.2);
_9.1 = Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1;
_33 = [_1,_1,_1,_1,_1,_7,_1,_1];
_22 = [_17.0,_26.0,_17.0,_17.0,_17.0];
_3.0 = _18;
_2.0 = _14.0 | _3.0;
Goto(bb13)
}
bb15 = {
_14 = (_11,);
_7 = _1;
_10.1 = _4;
_7 = _13 as i64;
_6 = Field::<u128>(Variant(RET.fld0, 1), 0) as i128;
_16 = _5 as isize;
_10.0 = [Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0)];
_15.0 = true as i128;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 139686752084000163336032970045183779160_u128;
Call(_7 = fn3(_10.1, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
Return()
}
bb17 = {
_2.0 = _14.0 + _11;
_24 = 193_u8;
_26.0 = _17.0;
_19 = _27.1;
_31.fld3 = _1 as u64;
_15.0 = _13 as i128;
place!(Field::<u128>(Variant(RET.fld0, 1), 0)) = 121885273781267916079694096711928911546_u128 + 237156026629919993568901031668599534351_u128;
_31.fld2 = _25 as isize;
_35 = _13 + _13;
_20 = [_5,_5,_5,_5,_5,_5];
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)) = (Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1, _15.1);
_31 = Adt50 { fld0: _23.2,fld1: _23.3,fld2: _28,fld3: _18,fld4: RET.fld0,fld5: _33 };
_15 = (Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1, _29.1);
_27.1 = _15.1 & _15.1;
_31.fld2 = 6_usize as isize;
_22 = [_17.0,_26.0,_26.0,_26.0,_26.0];
_23.4 = [_18,_14.0,_18,_3.0,_14.0];
place!(Field::<[u64; 5]>(Variant(RET.fld0, 0), 3)) = [_3.0,_2.0,_18,_2.0,_2.0];
place!(Field::<u128>(Variant(_31.fld4, 1), 0)) = 157844753448226692686623158138886202737_u128;
place!(Field::<[i64; 8]>(Variant(RET.fld0, 0), 0)) = Field::<([i64; 8],)>(Variant(_12, 0), 2).0;
_9 = (_10.0, _15.0, _8);
_20 = [_5,_5,_5,_5,_5,_5];
_23.1 = _5;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = _19 - _27.1;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_9.0, _15.0, _9.2);
match _31.fld1 {
0 => bb6,
1 => bb11,
2 => bb3,
3 => bb8,
4 => bb18,
20585 => bb20,
_ => bb19
}
}
bb18 = {
_27.1 = _15.1;
_10.1 = _29.0;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_10.0, _9.1, _10.2);
_14 = (_18,);
_15.1 = -_27.1;
_17.0 = _26.0;
_16 = _17.2 * Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5).2;
_3 = (_2.0,);
_28 = _16 - _17.2;
_27.1 = 7317844640181258218_usize as i16;
RET.fld0 = Adt45::Variant1 { fld0: 126845539719429723623268074341182768883_u128 };
_10.0 = [18454599130153588950606770700118082716_u128,170372730936424311556459631564998282736_u128,236805368723231035517193367296370942890_u128,49279840682083188677634498306700795796_u128,328104161736534604120094108785504167642_u128,22194926962554602703984642940281917141_u128,5987867257987864781052094601359884461_u128];
_20 = [_5,_5,_5,_5,_5,_5];
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).2 = -_10.2;
RET.fld0 = Adt45::Variant1 { fld0: 13901564837862868058178282339346267318_u128 };
_14.0 = _2.0;
_25 = _7 as f32;
_26.2 = _6 as isize;
_25 = _16 as f32;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = !_19;
_17.0 = _26.0 >> Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).2;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)) = (_10.0, _9.1, _10.2);
_9.1 = Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1;
_33 = [_1,_1,_1,_1,_1,_7,_1,_1];
_22 = [_17.0,_26.0,_17.0,_17.0,_17.0];
_3.0 = _18;
_2.0 = _14.0 | _3.0;
Goto(bb13)
}
bb19 = {
_9.2 = _13 as i32;
_26.0 = !_17.0;
_17.1 = core::ptr::addr_of!(_22);
_3.0 = _11 | _14.0;
Goto(bb12)
}
bb20 = {
place!(Field::<[i64; 8]>(Variant(RET.fld0, 0), 0)) = [_1,_7,_1,_7,_1,_1,_7,_7];
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5)).0 = _13 as u32;
_23.0 = _8 != Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).2;
_3 = _14;
_13 = _29.1 as f64;
place!(Field::<i128>(Variant(RET.fld0, 0), 4)) = _4 << _28;
_26 = _17;
_41 = -_9.2;
place!(Field::<([i64; 8],)>(Variant(RET.fld0, 0), 2)) = (_31.fld5,);
RET.fld0 = Adt45::Variant2 { fld0: _6,fld1: _23.4,fld2: _10.0,fld3: _3.0 };
_42 = (_9.0, _4, _10.2);
_10 = Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1);
_42.0 = [Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0)];
_42.1 = _10.1;
_14.0 = _25 as u64;
_17.2 = _26.2 - Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5).2;
_10.2 = -Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).2;
Goto(bb21)
}
bb21 = {
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).0 = [Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0),Field::<u128>(Variant(_31.fld4, 1), 0)];
RET.fld0 = _31.fld4;
Goto(bb22)
}
bb22 = {
SetDiscriminant(_31.fld4, 1);
_44 = -_25;
place!(Field::<([i64; 8],)>(Variant(_12, 0), 2)).0 = _31.fld5;
place!(Field::<(i128, i16)>(Variant(_12, 0), 4)).1 = !_15.1;
_42.1 = Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1 + _29.0;
_17 = (Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5).0, _26.1, _16);
RET.fld1 = Adt48::Variant1 { fld0: _23.0,fld1: _17.1,fld2: Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).0,fld3: (-4_i8),fld4: _35 };
_2.0 = !_14.0;
_23.1 = _5;
_15.0 = _42.1;
_36 = Field::<u128>(Variant(RET.fld0, 1), 0) & Field::<u128>(Variant(RET.fld0, 1), 0);
_47 = _9.0;
place!(Field::<i8>(Variant(RET.fld1, 1), 3)) = !2_i8;
_15.1 = _23.3 as i16;
_28 = !_16;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).2 = !_42.2;
RET.fld1 = Adt48::Variant1 { fld0: _23.0,fld1: _17.1,fld2: _42.0,fld3: (-86_i8),fld4: _13 };
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).0 = [_36,_36,_36,Field::<u128>(Variant(RET.fld0, 1), 0),_36,Field::<u128>(Variant(RET.fld0, 1), 0),Field::<u128>(Variant(RET.fld0, 1), 0)];
_3.0 = !_14.0;
_10.0 = _9.0;
place!(Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1)).0 = [_36,_36,_36,Field::<u128>(Variant(RET.fld0, 1), 0),_36,_36,Field::<u128>(Variant(RET.fld0, 1), 0)];
Goto(bb23)
}
bb23 = {
_14.0 = _3.0;
_48 = Adt48::Variant1 { fld0: Field::<bool>(Variant(RET.fld1, 1), 0),fld1: Field::<*const [u32; 5]>(Variant(RET.fld1, 1), 1),fld2: _10.0,fld3: 7_i8,fld4: _35 };
_37 = _33;
_31 = Adt50 { fld0: Field::<bool>(Variant(RET.fld1, 1), 0),fld1: _23.3,fld2: _17.2,fld3: _3.0,fld4: RET.fld0,fld5: _33 };
_17.1 = core::ptr::addr_of!(_22);
_54.3.0 = Field::<([u128; 7], i128, i32)>(Variant(_12, 0), 1).1 - _15.0;
_42.1 = -_4;
_17 = (_26.0, Field::<*const [u32; 5]>(Variant(RET.fld1, 1), 1), _26.2);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_12, 0), 5)).1 = Field::<*const [u32; 5]>(Variant(RET.fld1, 1), 1);
SetDiscriminant(_31.fld4, 2);
_54.2.3 = _9.2;
place!(Field::<i8>(Variant(RET.fld1, 1), 3)) = !(-77_i8);
_37 = [_1,_1,_1,_1,_1,_7,_1,_7];
_4 = Field::<i8>(Variant(RET.fld1, 1), 3) as i128;
_28 = Field::<f64>(Variant(_48, 1), 4) as isize;
_17.1 = Field::<*const [u32; 5]>(Variant(RET.fld1, 1), 1);
_40 = _26.2 * _16;
_27 = (_15.0, _29.1);
_56 = _23.1;
_51 = _24 + _24;
Goto(bb24)
}
bb24 = {
Call(_62 = dump_var(1_usize, 8_usize, Move(_8), 56_usize, Move(_56), 10_usize, Move(_10), 18_usize, Move(_18)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_62 = dump_var(1_usize, 29_usize, Move(_29), 28_usize, Move(_28), 40_usize, Move(_40), 32_usize, Move(_32)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_62 = dump_var(1_usize, 51_usize, Move(_51), 36_usize, Move(_36), 15_usize, Move(_15), 6_usize, Move(_6)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_62 = dump_var(1_usize, 5_usize, Move(_5), 19_usize, Move(_19), 16_usize, Move(_16), 20_usize, Move(_20)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_62 = dump_var(1_usize, 3_usize, Move(_3), 63_usize, _63, 63_usize, _63, 63_usize, _63), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: ([u128; 7], i128, i32),mut _2: ([u128; 7], i128, i32),mut _3: u64,mut _4: i128,mut _5: ([u128; 7], i128, i32),mut _6: u128,mut _7: i32,mut _8: i128,mut _9: i128,mut _10: i32,mut _11: ([u128; 7], i128, i32),mut _12: i128) -> i128 {
mir! {
type RET = i128;
let _13: ();
let _14: ();
{
_12 = _8;
_5.1 = _9 << _8;
_2 = (_11.0, _11.1, _1.2);
_2 = (_11.0, _5.1, _1.2);
_5.2 = -_2.2;
_2.1 = '\u{f0831}' as i128;
RET = _9;
_8 = !_5.1;
_2.0 = _1.0;
_5 = _2;
RET = !_8;
_3 = 218_u8 as u64;
_12 = _11.1 + _1.1;
_5.2 = _10 & _1.2;
_11.0 = [_6,_6,_6,_6,_6,_6,_6];
_1.2 = 7034022738396604872_usize as i32;
_8 = (-25_i8) as i128;
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(2_usize, 8_usize, Move(_8), 12_usize, Move(_12), 10_usize, Move(_10), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_13 = dump_var(2_usize, 3_usize, Move(_3), 11_usize, Move(_11), 14_usize, _14, 14_usize, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: i128,mut _2: ([u128; 7], i128, i32)) -> i64 {
mir! {
type RET = i64;
let _3: Adt54;
let _4: isize;
let _5: i16;
let _6: isize;
let _7: bool;
let _8: ([i64; 8],);
let _9: (i128, i16);
let _10: usize;
let _11: [u32; 5];
let _12: Adt50;
let _13: (u64,);
let _14: Adt56;
let _15: isize;
let _16: u8;
let _17: Adt49;
let _18: Adt55;
let _19: (u32, *const [u32; 5], isize);
let _20: i8;
let _21: f64;
let _22: ([u128; 7], i128, i32);
let _23: char;
let _24: (u64,);
let _25: *const [u64; 5];
let _26: Adt50;
let _27: f64;
let _28: [i64; 8];
let _29: bool;
let _30: *mut u32;
let _31: u128;
let _32: [char; 3];
let _33: ();
let _34: ();
{
_2.1 = _1 ^ _1;
_1 = _2.1 | _2.1;
RET = (-5985224142005103993_i64);
_1 = _2.1 * _2.1;
RET = (-3448016882693466926_i64);
RET = false as i64;
RET = (-6009255187230647747_i64);
RET = 222322014119978134240968546837281252250_u128 as i64;
_2.0 = [52084807858923630599283892114125668671_u128,204527723297899002374321389621476764004_u128,99736328958429951936184072360586988313_u128,168151390598951827625293955795801731419_u128,113424434637144177272950703773088251347_u128,235804181155081034233305212553637607274_u128,162246591572080512269088268684122508052_u128];
_4 = !9223372036854775807_isize;
_2.1 = _1;
_2.1 = _1 + _1;
_1 = _2.1;
_2.1 = !_1;
_4 = !(-88_isize);
_3.fld0 = Adt45::Variant1 { fld0: 338258733611390865434320235781571172593_u128 };
_2.0 = [179001497298862708729531654160111151586_u128,141613824470351253929407035267565749229_u128,181245781447257399022838367808448463940_u128,277096901225356502691805399804479531244_u128,201881600927786599746149053935907845722_u128,19190414477772419246580535095369840334_u128,261675137593550759413747342562393486163_u128];
RET = 19_u8 as i64;
_2.1 = _1;
Call(_5 = fn4(_1, _1, _1, _1, _2.1, _2.1, _2, _2, _2.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = _1 <= _2.1;
RET = !4161905641739792682_i64;
_6 = 2781310832_u32 as isize;
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = !213749508004645074452718208838359463765_u128;
RET = 7584329606119600959_i64;
_3.fld0 = Adt45::Variant1 { fld0: 60755635843888309728817871497765364410_u128 };
_1 = -_2.1;
_9.1 = _7 as i16;
_3.fld0 = Adt45::Variant1 { fld0: 292017448024609197893103308830378103798_u128 };
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
_10 = !4_usize;
_2.0 = [29221947889428279150381431739501030370_u128,222106337833963625480686360432464802412_u128,228377739927751077833164865639159485497_u128,67500282390172692375481578701304531633_u128,93326886037815544685663025017643843626_u128,191155748851154338144904748714212840559_u128,117455859265499776012518111058076159170_u128];
_9.1 = _5;
_11 = [4024003048_u32,3711115338_u32,3091029811_u32,18281185_u32,2638043683_u32];
_10 = 5729275210648585819_usize ^ 5271339421344062411_usize;
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = _6 as u128;
_6 = _4;
_12.fld0 = _1 >= _1;
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = !100238458472298706974005853165727273231_u128;
_9 = (_2.1, _5);
_2.1 = !_9.0;
_12.fld0 = _7;
Goto(bb2)
}
bb2 = {
_13.0 = 3846396170_u32 as u64;
_12.fld0 = _7;
_16 = _13.0 as u8;
_2.0 = [286063389796859236168644808931816650159_u128,244706812404325621805512623474309780505_u128,129950453341153365383007464582326902835_u128,101896843341729289069569405390444941085_u128,155693787987230443230046820719040787561_u128,297702347869479453901147006111063243570_u128,114364085110616908474899133283656284689_u128];
_11 = [941538994_u32,2301751562_u32,4090490705_u32,2535079030_u32,3604232231_u32];
_12.fld1 = _16 as u16;
_12.fld1 = !54335_u16;
_12.fld0 = !_7;
_13 = (17603539082410062039_u64,);
_15 = _6;
_19.1 = core::ptr::addr_of!(_11);
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<char>(Variant(_3.fld0, 0), 1)) = '\u{c7645}';
Call(_2.0 = fn6(_1, _11, _12.fld0, _4, _7, _1, _9, _12.fld0, _1, _9.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3.fld0 = Adt45::Variant1 { fld0: 8373107770007368525182574169855995931_u128 };
_12.fld3 = _13.0;
_12.fld2 = -_15;
_9.0 = _2.1 - _2.1;
_9.1 = _5;
_1 = _9.0 << _9.0;
RET = 501908239063869379_i64 ^ (-2999619958644640639_i64);
_20 = !9_i8;
_12.fld5 = _8.0;
Goto(bb4)
}
bb4 = {
_20 = 104_i8;
_15 = _4 << _9.0;
_6 = _7 as isize;
_19.2 = -_15;
_20 = -57_i8;
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = _19.2 as u128;
_22 = _2;
_19.1 = core::ptr::addr_of!(_11);
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = 6452686610097453270913224078539688238_u128 ^ 28753691877226235765437119391409779050_u128;
_2 = (_22.0, _1, _22.2);
_8.0 = _12.fld5;
SetDiscriminant(_3.fld0, 2);
_7 = _12.fld0;
_10 = 8559582109383453478_usize;
_15 = _6 + _19.2;
_14.fld2 = _6 & _19.2;
place!(Field::<u64>(Variant(_3.fld0, 2), 3)) = _20 as u64;
_19.1 = core::ptr::addr_of!(_11);
_9 = (_1, _5);
_8 = (_12.fld5,);
_25 = core::ptr::addr_of!(place!(Field::<[u64; 5]>(Variant(_3.fld0, 2), 1)));
Call(_14.fld0 = fn10(_14.fld2, _9.0, _22, _9, _14.fld2, _6, _14.fld2, _2, _14.fld2, _22, _15, _9), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
SetDiscriminant(_14.fld0, 1);
_22.1 = _9.0;
place!(Field::<(i128, i16)>(Variant(_14.fld0, 1), 1)).0 = _2.1;
place!(Field::<u64>(Variant(_14.fld0, 1), 0)) = Field::<u64>(Variant(_3.fld0, 2), 3) ^ _13.0;
_16 = !103_u8;
_24.0 = _13.0;
place!(Field::<[u128; 7]>(Variant(_3.fld0, 2), 2)) = _22.0;
_26.fld1 = _12.fld1;
_23 = '\u{103144}';
place!(Field::<i128>(Variant(_3.fld0, 2), 0)) = !_22.1;
_19.0 = Field::<u64>(Variant(_3.fld0, 2), 3) as u32;
place!(Field::<(i128, i16)>(Variant(_14.fld0, 1), 1)) = _9;
match _10 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
8559582109383453478 => bb13,
_ => bb12
}
}
bb6 = {
_20 = 104_i8;
_15 = _4 << _9.0;
_6 = _7 as isize;
_19.2 = -_15;
_20 = -57_i8;
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = _19.2 as u128;
_22 = _2;
_19.1 = core::ptr::addr_of!(_11);
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = 6452686610097453270913224078539688238_u128 ^ 28753691877226235765437119391409779050_u128;
_2 = (_22.0, _1, _22.2);
_8.0 = _12.fld5;
SetDiscriminant(_3.fld0, 2);
_7 = _12.fld0;
_10 = 8559582109383453478_usize;
_15 = _6 + _19.2;
_14.fld2 = _6 & _19.2;
place!(Field::<u64>(Variant(_3.fld0, 2), 3)) = _20 as u64;
_19.1 = core::ptr::addr_of!(_11);
_9 = (_1, _5);
_8 = (_12.fld5,);
_25 = core::ptr::addr_of!(place!(Field::<[u64; 5]>(Variant(_3.fld0, 2), 1)));
Call(_14.fld0 = fn10(_14.fld2, _9.0, _22, _9, _14.fld2, _6, _14.fld2, _2, _14.fld2, _22, _15, _9), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_3.fld0 = Adt45::Variant1 { fld0: 8373107770007368525182574169855995931_u128 };
_12.fld3 = _13.0;
_12.fld2 = -_15;
_9.0 = _2.1 - _2.1;
_9.1 = _5;
_1 = _9.0 << _9.0;
RET = 501908239063869379_i64 ^ (-2999619958644640639_i64);
_20 = !9_i8;
_12.fld5 = _8.0;
Goto(bb4)
}
bb8 = {
_13.0 = 3846396170_u32 as u64;
_12.fld0 = _7;
_16 = _13.0 as u8;
SetDiscriminant(_3.fld0, 0);
_2.0 = [286063389796859236168644808931816650159_u128,244706812404325621805512623474309780505_u128,129950453341153365383007464582326902835_u128,101896843341729289069569405390444941085_u128,155693787987230443230046820719040787561_u128,297702347869479453901147006111063243570_u128,114364085110616908474899133283656284689_u128];
_11 = [941538994_u32,2301751562_u32,4090490705_u32,2535079030_u32,3604232231_u32];
_12.fld1 = _16 as u16;
_12.fld1 = !54335_u16;
_12.fld0 = !_7;
_13 = (17603539082410062039_u64,);
_15 = _6;
_19.1 = core::ptr::addr_of!(_11);
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<char>(Variant(_3.fld0, 0), 1)) = '\u{c7645}';
Call(_2.0 = fn6(_1, _11, _12.fld0, _4, _7, _1, _9, _12.fld0, _1, _9.0), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_7 = _1 <= _2.1;
RET = !4161905641739792682_i64;
_6 = 2781310832_u32 as isize;
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = !213749508004645074452718208838359463765_u128;
RET = 7584329606119600959_i64;
_3.fld0 = Adt45::Variant1 { fld0: 60755635843888309728817871497765364410_u128 };
_1 = -_2.1;
_9.1 = _7 as i16;
_3.fld0 = Adt45::Variant1 { fld0: 292017448024609197893103308830378103798_u128 };
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
_10 = !4_usize;
_2.0 = [29221947889428279150381431739501030370_u128,222106337833963625480686360432464802412_u128,228377739927751077833164865639159485497_u128,67500282390172692375481578701304531633_u128,93326886037815544685663025017643843626_u128,191155748851154338144904748714212840559_u128,117455859265499776012518111058076159170_u128];
_9.1 = _5;
_11 = [4024003048_u32,3711115338_u32,3091029811_u32,18281185_u32,2638043683_u32];
_10 = 5729275210648585819_usize ^ 5271339421344062411_usize;
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = _6 as u128;
_6 = _4;
_12.fld0 = _1 >= _1;
_8.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = !100238458472298706974005853165727273231_u128;
_9 = (_2.1, _5);
_2.1 = !_9.0;
_12.fld0 = _7;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_26.fld2 = _6 ^ _14.fld2;
_26.fld0 = Field::<(i128, i16)>(Variant(_14.fld0, 1), 1).0 == Field::<(i128, i16)>(Variant(_14.fld0, 1), 1).0;
_12.fld1 = !_26.fld1;
_26.fld2 = -_14.fld2;
_12.fld3 = Field::<(i128, i16)>(Variant(_14.fld0, 1), 1).1 as u64;
_29 = _7;
RET = _16 as i64;
_30 = core::ptr::addr_of_mut!(_19.0);
_26.fld0 = !_29;
_21 = _26.fld1 as f64;
_22.0 = [31938959679077767169580158627283486825_u128,27949063709074482367826439478076364205_u128,206707672795059560906906498960047699025_u128,299283478594832108794886093507804641253_u128,147784289120127523556513625301870123791_u128,25636109583276919517894426603596353134_u128,274267703250965105977822421683611894625_u128];
place!(Field::<(i128, i16)>(Variant(_14.fld0, 1), 1)).1 = !_9.1;
place!(Field::<(i128, i16)>(Variant(_14.fld0, 1), 1)).1 = !_5;
_28 = _8.0;
_8.0 = _28;
place!(Field::<(i128, i16)>(Variant(_14.fld0, 1), 1)).1 = _15 as i16;
_5 = !Field::<(i128, i16)>(Variant(_14.fld0, 1), 1).1;
_26.fld3 = _24.0 & _13.0;
place!(Field::<[u128; 7]>(Variant(_3.fld0, 2), 2)) = [183721048701312080810751120728614047874_u128,90830705840714614237326682570507563080_u128,204908975609271684438023942262720400348_u128,275979343387103024810913946206772219996_u128,241807164963184902181549298141051156200_u128,87553915476571627643418422656646474720_u128,125822671325593531778954537728483842259_u128];
_12.fld2 = -_26.fld2;
Goto(bb14)
}
bb14 = {
_26.fld2 = _15 >> _14.fld2;
_13 = _24;
_3.fld1 = Adt48::Variant0 { fld0: _8,fld1: _25,fld2: Field::<(i128, i16)>(Variant(_14.fld0, 1), 1),fld3: Field::<u64>(Variant(_14.fld0, 1), 0),fld4: Field::<(i128, i16)>(Variant(_14.fld0, 1), 1).1 };
_32 = [_23,_23,_23];
_24 = _13;
_2.2 = _22.2 ^ _22.2;
place!(Field::<u64>(Variant(_14.fld0, 1), 0)) = _12.fld3;
_24 = _13;
_26.fld3 = Field::<u64>(Variant(_3.fld1, 0), 3);
_6 = !_15;
_12.fld0 = !_26.fld0;
_3.fld0 = Adt45::Variant1 { fld0: 174374123464838993736930920846558000823_u128 };
_12.fld0 = _29;
_26.fld0 = _29;
place!(Field::<u128>(Variant(_3.fld0, 1), 0)) = 41587033908821578436478584592977286242_u128;
SetDiscriminant(_14.fld0, 2);
place!(Field::<([i64; 8], f32, (i64, f32, i128, i32), (i128, i16))>(Variant(_14.fld0, 2), 2)).3 = (_1, Field::<i16>(Variant(_3.fld1, 0), 4));
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(3_usize, 22_usize, Move(_22), 1_usize, Move(_1), 9_usize, Move(_9), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(3_usize, 7_usize, Move(_7), 8_usize, Move(_8), 23_usize, Move(_23), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(3_usize, 2_usize, Move(_2), 32_usize, Move(_32), 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i128,mut _2: i128,mut _3: i128,mut _4: i128,mut _5: i128,mut _6: i128,mut _7: ([u128; 7], i128, i32),mut _8: ([u128; 7], i128, i32),mut _9: i32) -> i16 {
mir! {
type RET = i16;
let _10: [u32; 5];
let _11: Adt42;
let _12: *const [char; 3];
let _13: [u32; 5];
let _14: f32;
let _15: *const [u32; 5];
let _16: Adt44;
let _17: i64;
let _18: isize;
let _19: u128;
let _20: char;
let _21: usize;
let _22: Adt50;
let _23: Adt56;
let _24: isize;
let _25: [i64; 8];
let _26: u8;
let _27: i128;
let _28: (u64,);
let _29: *const [u64; 5];
let _30: *const [u32; 5];
let _31: i16;
let _32: [u128; 7];
let _33: i128;
let _34: (bool, char, bool, u16, [u64; 5]);
let _35: u16;
let _36: char;
let _37: *mut i8;
let _38: ();
let _39: ();
{
_8.0 = _7.0;
_8.0 = [288577905991222380958605366500639797888_u128,265562123520830137086194140570664610311_u128,156773234971773531704534706194675369265_u128,232196595987250511969366331081785125618_u128,202229571907362490738909171494707642184_u128,111457994113109638683266206259452100180_u128,66757717996055332998505335337761538189_u128];
_10 = [4014287260_u32,4099125061_u32,4148536827_u32,1530329345_u32,4070037739_u32];
_7.1 = _1 >> _3;
RET = (-29072_i16) - (-29597_i16);
_7.2 = _9 | _8.2;
_8.0 = [78297383656435756643754117612353158592_u128,163603583051176678358637605776576089817_u128,116834561601485581423272210781181353965_u128,36525292032603718061491227403806684345_u128,241900073783798850195011733714549824438_u128,135846597469738272383316883315888339606_u128,129035571606800673030638596997467254490_u128];
_7.1 = _4;
_7.2 = -_9;
_5 = true as i128;
_7.1 = _8.1 * _1;
_2 = !_1;
_7.2 = -_8.2;
_14 = 252418108610042973603459254770289522513_u128 as f32;
_8.1 = _14 as i128;
Goto(bb1)
}
bb1 = {
_8.0 = _7.0;
_7.2 = -_8.2;
_8.1 = _2;
_8.1 = !_4;
RET = 10076_i16 + (-22143_i16);
_8.2 = -_9;
_14 = 17029688350465866800_usize as f32;
_7 = (_8.0, _8.1, _9);
Call(_5 = fn5(_7.2, _2, _8.1, _6, _3, _1, _7, _8.1, _8.1, _1, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_15 = core::ptr::addr_of!(_13);
_5 = 93_i8 as i128;
_9 = !_7.2;
_8 = _7;
_15 = core::ptr::addr_of!(_13);
_5 = 147_u8 as i128;
_15 = core::ptr::addr_of!((*_15));
_8.0 = [309234809790453005808331609867337337011_u128,42923239881877618853706072545517993728_u128,261715836333628735297300032551065673519_u128,73325026995374989377784584394352478447_u128,308087343560875682643346988356039820801_u128,334398797110058588794091862236869161561_u128,306390805031268783639468866242780319065_u128];
_8.2 = _7.2;
_1 = _2 >> _4;
_8.2 = RET as i32;
_8.0 = [146074431715874584530839328793216766984_u128,53934999818663453874281468733657598062_u128,317906014890546943618012499191620740355_u128,331839395181630513208001664767199223401_u128,283546423830471586586088953968919632235_u128,209238866320593360195271759379161665419_u128,310572886258029507219728242753522404036_u128];
_8 = (_7.0, _7.1, _9);
_13 = [246061583_u32,996013726_u32,4232524035_u32,1238254277_u32,1431094041_u32];
_14 = RET as f32;
_14 = (-128_i8) as f32;
_7 = (_8.0, _1, _8.2);
RET = (-18803_i16);
_8 = (_7.0, _4, _9);
_18 = RET as isize;
Goto(bb3)
}
bb3 = {
_8.0 = _7.0;
_9 = -_7.2;
_22.fld2 = _18;
_7.1 = !_8.1;
_4 = _7.2 as i128;
_2 = _7.1;
Goto(bb4)
}
bb4 = {
_22.fld5 = [5918005426925845859_i64,(-4405985875352982758_i64),(-2755339675266329665_i64),5380526404874767483_i64,(-8579704779156243722_i64),4918251032490451199_i64,2938521155238939715_i64,3080299645878349724_i64];
_23.fld2 = _18 >> _8.1;
_21 = 5_usize & 2_usize;
_26 = 112_u8 + 144_u8;
Goto(bb5)
}
bb5 = {
_22.fld3 = _9 as u64;
_21 = '\u{d170e}' as usize;
_19 = 450698729321818767_i64 as u128;
_22.fld4 = Adt45::Variant1 { fld0: _19 };
_8.2 = _9 | _9;
_19 = Field::<u128>(Variant(_22.fld4, 1), 0) & Field::<u128>(Variant(_22.fld4, 1), 0);
_17 = 1226657046370317365_i64 << _1;
Goto(bb6)
}
bb6 = {
_23.fld2 = _22.fld3 as isize;
_24 = _23.fld2;
_8 = (_7.0, _3, _9);
_7.1 = !_4;
_27 = _2 + _6;
_13 = _10;
_26 = 48583_u16 as u8;
Goto(bb7)
}
bb7 = {
_23.fld2 = -_24;
_24 = _23.fld2 * _23.fld2;
_19 = _21 as u128;
_22.fld1 = !34097_u16;
_28.0 = !_22.fld3;
_8.0 = [Field::<u128>(Variant(_22.fld4, 1), 0),_19,_19,_19,Field::<u128>(Variant(_22.fld4, 1), 0),Field::<u128>(Variant(_22.fld4, 1), 0),Field::<u128>(Variant(_22.fld4, 1), 0)];
_23.fld2 = !_24;
_8.1 = _27 + _6;
match RET {
0 => bb5,
1 => bb6,
340282366920938463463374607431768192653 => bb8,
_ => bb4
}
}
bb8 = {
_10 = [757527981_u32,2622687065_u32,64148899_u32,179112103_u32,3942339525_u32];
SetDiscriminant(_22.fld4, 1);
_7.1 = _22.fld1 as i128;
_26 = !205_u8;
_23.fld2 = !_24;
_27 = _2 & _1;
_7.0 = _8.0;
_27 = _17 as i128;
_7.0 = [_19,_19,_19,_19,_19,_19,_19];
_1 = -_8.1;
_8.1 = _3;
_22.fld1 = _21 as u16;
_26 = 211_u8;
RET = _14 as i16;
Goto(bb9)
}
bb9 = {
_3 = _6;
_7.2 = _14 as i32;
_4 = _2 - _6;
_21 = !7_usize;
_8 = (_7.0, _6, _9);
_28 = (_22.fld3,);
_3 = _1;
_22.fld0 = !true;
_17 = (-7197599401450160555_i64);
_7.1 = _2;
Goto(bb10)
}
bb10 = {
_22.fld2 = _24;
_23.fld2 = _24 | _22.fld2;
_20 = '\u{b33ac}';
_8.0 = [_19,_19,_19,_19,_19,_19,_19];
_24 = -_23.fld2;
_18 = !_24;
_21 = _27 as usize;
_4 = -_1;
_27 = _7.1 + _3;
_24 = _18 | _23.fld2;
place!(Field::<u128>(Variant(_22.fld4, 1), 0)) = _19;
_15 = core::ptr::addr_of!((*_15));
_22.fld0 = !false;
RET = !12117_i16;
_25 = [_17,_17,_17,_17,_17,_17,_17,_17];
_19 = Field::<u128>(Variant(_22.fld4, 1), 0);
_21 = _17 as usize;
_7 = _8;
_30 = _15;
_31 = !RET;
_34.1 = _20;
_7.0 = [Field::<u128>(Variant(_22.fld4, 1), 0),_19,_19,_19,Field::<u128>(Variant(_22.fld4, 1), 0),Field::<u128>(Variant(_22.fld4, 1), 0),Field::<u128>(Variant(_22.fld4, 1), 0)];
match _26 {
0 => bb1,
1 => bb11,
211 => bb13,
_ => bb12
}
}
bb11 = {
_15 = core::ptr::addr_of!(_13);
_5 = 93_i8 as i128;
_9 = !_7.2;
_8 = _7;
_15 = core::ptr::addr_of!(_13);
_5 = 147_u8 as i128;
_15 = core::ptr::addr_of!((*_15));
_8.0 = [309234809790453005808331609867337337011_u128,42923239881877618853706072545517993728_u128,261715836333628735297300032551065673519_u128,73325026995374989377784584394352478447_u128,308087343560875682643346988356039820801_u128,334398797110058588794091862236869161561_u128,306390805031268783639468866242780319065_u128];
_8.2 = _7.2;
_1 = _2 >> _4;
_8.2 = RET as i32;
_8.0 = [146074431715874584530839328793216766984_u128,53934999818663453874281468733657598062_u128,317906014890546943618012499191620740355_u128,331839395181630513208001664767199223401_u128,283546423830471586586088953968919632235_u128,209238866320593360195271759379161665419_u128,310572886258029507219728242753522404036_u128];
_8 = (_7.0, _7.1, _9);
_13 = [246061583_u32,996013726_u32,4232524035_u32,1238254277_u32,1431094041_u32];
_14 = RET as f32;
_14 = (-128_i8) as f32;
_7 = (_8.0, _1, _8.2);
RET = (-18803_i16);
_8 = (_7.0, _4, _9);
_18 = RET as isize;
Goto(bb3)
}
bb12 = {
_8.0 = _7.0;
_9 = -_7.2;
_22.fld2 = _18;
_7.1 = !_8.1;
_4 = _7.2 as i128;
_2 = _7.1;
Goto(bb4)
}
bb13 = {
_26 = 148_u8;
_22.fld5 = [_17,_17,_17,_17,_17,_17,_17,_17];
_14 = _18 as f32;
_2 = !_6;
Goto(bb14)
}
bb14 = {
_35 = _22.fld1 | _22.fld1;
_36 = _20;
_34.0 = _22.fld0;
_34.2 = !_22.fld0;
_22.fld2 = -_23.fld2;
_34.3 = _35;
place!(Field::<u128>(Variant(_22.fld4, 1), 0)) = _19 >> _24;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(4_usize, 24_usize, Move(_24), 1_usize, Move(_1), 4_usize, Move(_4), 35_usize, Move(_35)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(4_usize, 2_usize, Move(_2), 13_usize, Move(_13), 36_usize, Move(_36), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(4_usize, 17_usize, Move(_17), 6_usize, Move(_6), 25_usize, Move(_25), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: i32,mut _2: i128,mut _3: i128,mut _4: i128,mut _5: i128,mut _6: i128,mut _7: ([u128; 7], i128, i32),mut _8: i128,mut _9: i128,mut _10: i128,mut _11: i128) -> i128 {
mir! {
type RET = i128;
let _12: Adt45;
let _13: (i64, f32, i128, i32);
let _14: Adt55;
let _15: ();
let _16: ();
{
RET = -_10;
_5 = _3;
_7.1 = _3 >> _8;
_11 = _8;
_7.1 = _5 + _9;
_4 = _6 | _11;
_3 = _1 as i128;
RET = _5 + _9;
_6 = _7.1 + _8;
_11 = 2633898861_u32 as i128;
RET = _9 - _5;
_9 = 199_u8 as i128;
_5 = !_10;
_11 = RET;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(5_usize, 2_usize, Move(_2), 7_usize, Move(_7), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(5_usize, 3_usize, Move(_3), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: i128,mut _2: [u32; 5],mut _3: bool,mut _4: isize,mut _5: bool,mut _6: i128,mut _7: (i128, i16),mut _8: bool,mut _9: i128,mut _10: i128) -> [u128; 7] {
mir! {
type RET = [u128; 7];
let _11: i8;
let _12: [u64; 5];
let _13: bool;
let _14: [u32; 5];
let _15: i32;
let _16: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16));
let _17: isize;
let _18: Adt48;
let _19: Adt45;
let _20: f64;
let _21: char;
let _22: isize;
let _23: [i64; 8];
let _24: i32;
let _25: (bool, char, bool, u16, [u64; 5]);
let _26: (bool, char, bool, u16, [u64; 5]);
let _27: isize;
let _28: Adt50;
let _29: Adt48;
let _30: char;
let _31: u8;
let _32: Adt55;
let _33: *mut u32;
let _34: [i64; 6];
let _35: isize;
let _36: i32;
let _37: f64;
let _38: bool;
let _39: Adt55;
let _40: [char; 7];
let _41: [i64; 8];
let _42: f64;
let _43: isize;
let _44: isize;
let _45: ();
let _46: ();
{
_7 = (_6, 25715_i16);
RET = [161271895444022803860896685780030341749_u128,158200754283326770431575887321467080205_u128,15144701829038124449984913672065624623_u128,185354833910015190618949696459295435643_u128,112048835434059476312266331370826905653_u128,207019220417468595418773540597969785020_u128,238667077792070170837007225519823497171_u128];
_8 = _1 > _1;
_9 = _10;
_7.0 = _9;
_4 = (-65_i8) as isize;
_1 = 52809_u16 as i128;
_7 = (_6, 16611_i16);
Goto(bb1)
}
bb1 = {
_12 = [9172962993207575936_u64,612290680972355637_u64,15758490995577999291_u64,1505719296712135684_u64,18408671828583033151_u64];
_5 = _8;
_12 = [16300893574671682475_u64,13828838441887457863_u64,13823348116967988140_u64,12222555135886820071_u64,3948917341540432363_u64];
_3 = !_8;
_2 = [2206957411_u32,3308826588_u32,1636941320_u32,169156555_u32,1933812044_u32];
_2 = [3989793801_u32,2841503605_u32,2778765870_u32,2234789404_u32,469893652_u32];
_4 = _10 as isize;
_6 = _7.1 as i128;
_9 = _6;
_2 = [479350320_u32,416456149_u32,3358259443_u32,1284165025_u32,2478201429_u32];
_5 = _3 & _8;
_7 = (_10, 9022_i16);
_1 = _10;
_10 = 16858865568925111585_u64 as i128;
_5 = _8;
_1 = _7.0 >> _9;
_12 = [3385576878563129816_u64,13826812548767825466_u64,3087765892921242936_u64,12384360321598798281_u64,5560459939966110196_u64];
_14 = _2;
_2 = _14;
_3 = _5 | _5;
RET = [37132739580705070881108618591171332740_u128,98899469232413740465073312119942709695_u128,1904642748448979096684445973382472324_u128,303700302688680365526445001539329895347_u128,166444891685777349876598226405259058828_u128,266464900313211612969280889255615270848_u128,250854522941137752737085800758949701239_u128];
_3 = _5;
_7 = (_6, (-10742_i16));
_4 = 9223372036854775807_isize * 29_isize;
_11 = 53_i8 << _7.1;
_12 = [5530862370823801400_u64,7371826824830502568_u64,6773500976718906240_u64,973199029994101363_u64,17802942420293648505_u64];
_8 = !_5;
_9 = -_6;
Goto(bb2)
}
bb2 = {
_8 = _6 <= _7.0;
_4 = 9223372036854775807_isize;
_6 = 21773_u16 as i128;
RET = [339942178132014798132404307600824860290_u128,323653601096029591084874006187511644010_u128,306020749380151886706421364748905888696_u128,106780653722949196278771072197665136837_u128,72818024769803724588709644974514963470_u128,82577730251997244852390538302720043516_u128,300982335711941122686291391183506208675_u128];
_1 = 995967353_i32 as i128;
_6 = _7.0 | _9;
_15 = !(-1238131403_i32);
_16.3.0 = '\u{b0967}' as i128;
_16.2.3 = 225_u8 as i32;
_16.3.0 = _6 | _6;
_1 = _6;
_16.0 = [7312810416430343966_i64,2899798453188370610_i64,6326847611628291147_i64,8829987339250650818_i64,8013630313254564853_i64,5969635402093936486_i64,(-1162907315001880871_i64),5275410202787409798_i64];
RET = [4435886481678689242493154232222295775_u128,120212379460663733558379138737333815598_u128,327730340225708834303035184062898071594_u128,110774550942472003888545144839722148464_u128,307892816087615097162234081974771992115_u128,239758537444265013357273788853794650847_u128,267142948516001171608068695270059283963_u128];
_9 = -_7.0;
_16.2.1 = 45687_u16 as f32;
_7.1 = 15924607373497465994_u64 as i16;
_17 = !_4;
Goto(bb3)
}
bb3 = {
_19 = Adt45::Variant2 { fld0: _6,fld1: _12,fld2: RET,fld3: 8207338503393948307_u64 };
_16.2.0 = (-1830069617317208644_i64) & 4402805498162082447_i64;
_4 = -_17;
_20 = _4 as f64;
_3 = !_8;
_16.2.3 = _15 - _15;
_5 = !_8;
_19 = Adt45::Variant1 { fld0: 287749846763062015231633753339460122016_u128 };
_7 = (_1, (-3558_i16));
_17 = _4;
RET = [321268412119415563325427006135526019965_u128,322615921177448412153901717281839163942_u128,222769227727262650736484406886302857023_u128,107865658254274959719482596123336476476_u128,232224152257496615274032376773252186870_u128,41797057037591426804746958996262019440_u128,226886248246206865395955875476101435282_u128];
_8 = !_3;
_16.2.0 = 7710141201545366953_i64 - (-7729491587639262124_i64);
_11 = (-91_i8) << _7.1;
_16.0 = [_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0];
_3 = !_8;
_3 = _8;
_5 = !_3;
Call(_1 = fn7(_5, _7.0, _7.0, _7.0, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = (_16.3.0, (-6264_i16));
_7.1 = _16.2.0 as i16;
_16.3 = (_1, _7.1);
_5 = !_3;
_16.0 = [_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0];
_1 = _11 as i128;
_1 = _7.0;
_20 = 27718_u16 as f64;
_13 = !_8;
_1 = _7.0 << _11;
RET = [30503586431355314629962820174225943768_u128,292166772635742509917701654144242512561_u128,118559417571803103430840772321175430338_u128,339887463575832769214458223466434541512_u128,212647523982018352042586627422705096927_u128,92835252650602771953771911179370271337_u128,163182985395072316341511653552979998575_u128];
place!(Field::<u128>(Variant(_19, 1), 0)) = 104337919464314533055748549550802483447_u128 ^ 49074832198666930620514961175801103783_u128;
_3 = !_13;
_23 = _16.0;
_16.2.0 = (-8800750101061452277_i64);
_15 = _16.2.3;
_7.1 = _16.3.1 ^ _16.3.1;
match _16.2.0 {
340282366920938463454573857330706759179 => bb6,
_ => bb5
}
}
bb5 = {
_19 = Adt45::Variant2 { fld0: _6,fld1: _12,fld2: RET,fld3: 8207338503393948307_u64 };
_16.2.0 = (-1830069617317208644_i64) & 4402805498162082447_i64;
_4 = -_17;
_20 = _4 as f64;
_3 = !_8;
_16.2.3 = _15 - _15;
_5 = !_8;
_19 = Adt45::Variant1 { fld0: 287749846763062015231633753339460122016_u128 };
_7 = (_1, (-3558_i16));
_17 = _4;
RET = [321268412119415563325427006135526019965_u128,322615921177448412153901717281839163942_u128,222769227727262650736484406886302857023_u128,107865658254274959719482596123336476476_u128,232224152257496615274032376773252186870_u128,41797057037591426804746958996262019440_u128,226886248246206865395955875476101435282_u128];
_8 = !_3;
_16.2.0 = 7710141201545366953_i64 - (-7729491587639262124_i64);
_11 = (-91_i8) << _7.1;
_16.0 = [_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0];
_3 = !_8;
_3 = _8;
_5 = !_3;
Call(_1 = fn7(_5, _7.0, _7.0, _7.0, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_25.4 = [10974631781623423960_u64,18071116338452990202_u64,8881585378880693553_u64,2172869105746593753_u64,3995182718623296710_u64];
_16.3 = (_1, _7.1);
Call(_25.0 = fn8(_9, _16.3.0, _13, _9, _9), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_26.2 = _5 ^ _13;
Goto(bb8)
}
bb8 = {
_16.3.0 = _1;
_19 = Adt45::Variant2 { fld0: _1,fld1: _12,fld2: RET,fld3: 11250364247400406377_u64 };
_16.2.0 = (-4532319456769195799_i64);
_26.3 = !60827_u16;
_16.2.1 = _4 as f32;
_19 = Adt45::Variant1 { fld0: 100449788164214596967750942526870846373_u128 };
_27 = _17;
_8 = _5 != _13;
_24 = _15;
_16.3.0 = -_9;
_25.2 = !_25.0;
_25 = (_13, '\u{7ff48}', _5, _26.3, _12);
Call(_16.3.1 = core::intrinsics::bswap(_7.1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_16.2.2 = !_7.0;
_31 = !207_u8;
_28.fld0 = !_3;
_25.2 = _13;
_28.fld1 = _25.3;
_28.fld0 = _26.2;
_10 = -_1;
_26.4 = [767290073221564534_u64,14391181229459359377_u64,14689736059592165294_u64,5326576444168194659_u64,14718760086829054394_u64];
_16.2.2 = !_1;
_26.0 = _9 < _1;
_16.1 = 3384654346_u32 as f32;
_28.fld5 = [_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0];
Goto(bb10)
}
bb10 = {
_30 = _25.1;
_26 = (_25.0, _25.1, _25.2, _28.fld1, _25.4);
_30 = _25.1;
_7.0 = -_9;
_13 = !_26.0;
_28.fld0 = _3;
_3 = _5;
_7.0 = 3_usize as i128;
_21 = _26.1;
_15 = _24;
_2 = [3359163418_u32,200705216_u32,2220996271_u32,4256359299_u32,1536651409_u32];
_22 = _17 ^ _17;
_30 = _26.1;
_14 = _2;
_31 = _15 as u8;
_16.2.3 = _24;
_12 = [4515500300050379927_u64,16935476711990819404_u64,18236500118754250504_u64,1946160155289933984_u64,6704480642227833739_u64];
_25.4 = [13489151038962159234_u64,8440804793579253603_u64,14803736290332161465_u64,17609361615638991489_u64,1720463192220694664_u64];
_13 = _28.fld0 & _25.2;
Call(_19 = fn9(_26.0, _16.3.0, _3, _16, _10, _26), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
place!(Field::<i128>(Variant(_19, 2), 0)) = _9;
_16.3.1 = _7.1;
_24 = -_15;
RET = [1011543383685026409692959267120168140_u128,126793566662534508296614414013496004654_u128,110590414992918444442299574213487849015_u128,282392206232114073682452215903152055923_u128,232670827279655942133173590486845110239_u128,300380942237185284672332736076008174176_u128,69262341477712619510324733673262379207_u128];
_28.fld3 = !Field::<u64>(Variant(_19, 2), 3);
_11 = 73_i8 >> Field::<i128>(Variant(_19, 2), 0);
_25.4 = [_28.fld3,Field::<u64>(Variant(_19, 2), 3),Field::<u64>(Variant(_19, 2), 3),Field::<u64>(Variant(_19, 2), 3),_28.fld3];
_5 = _8 & _26.0;
_26.1 = _30;
_40 = [_26.1,_30,_26.1,_26.1,_26.1,_25.1,_21];
_28.fld2 = _4;
_25.1 = _30;
_25 = _26;
_37 = -_20;
Goto(bb12)
}
bb12 = {
_16.2 = ((-4847912744009694780_i64), _16.1, _16.3.0, _24);
SetDiscriminant(_19, 1);
_28.fld4 = Adt45::Variant2 { fld0: _6,fld1: _25.4,fld2: RET,fld3: _28.fld3 };
place!(Field::<u64>(Variant(_28.fld4, 2), 3)) = _16.2.0 as u64;
place!(Field::<u128>(Variant(_19, 1), 0)) = !203896129544310714382572484856686044075_u128;
place!(Field::<[u128; 7]>(Variant(_28.fld4, 2), 2)) = [Field::<u128>(Variant(_19, 1), 0),Field::<u128>(Variant(_19, 1), 0),Field::<u128>(Variant(_19, 1), 0),Field::<u128>(Variant(_19, 1), 0),Field::<u128>(Variant(_19, 1), 0),Field::<u128>(Variant(_19, 1), 0),Field::<u128>(Variant(_19, 1), 0)];
_16.3 = (_16.2.2, _7.1);
_28 = Adt50 { fld0: _26.2,fld1: _26.3,fld2: _4,fld3: 5981999168279973704_u64,fld4: _19,fld5: _23 };
_43 = !_4;
_36 = _24 & _16.2.3;
match _28.fld3 {
0 => bb13,
5981999168279973704 => bb15,
_ => bb14
}
}
bb13 = {
_8 = _6 <= _7.0;
_4 = 9223372036854775807_isize;
_6 = 21773_u16 as i128;
RET = [339942178132014798132404307600824860290_u128,323653601096029591084874006187511644010_u128,306020749380151886706421364748905888696_u128,106780653722949196278771072197665136837_u128,72818024769803724588709644974514963470_u128,82577730251997244852390538302720043516_u128,300982335711941122686291391183506208675_u128];
_1 = 995967353_i32 as i128;
_6 = _7.0 | _9;
_15 = !(-1238131403_i32);
_16.3.0 = '\u{b0967}' as i128;
_16.2.3 = 225_u8 as i32;
_16.3.0 = _6 | _6;
_1 = _6;
_16.0 = [7312810416430343966_i64,2899798453188370610_i64,6326847611628291147_i64,8829987339250650818_i64,8013630313254564853_i64,5969635402093936486_i64,(-1162907315001880871_i64),5275410202787409798_i64];
RET = [4435886481678689242493154232222295775_u128,120212379460663733558379138737333815598_u128,327730340225708834303035184062898071594_u128,110774550942472003888545144839722148464_u128,307892816087615097162234081974771992115_u128,239758537444265013357273788853794650847_u128,267142948516001171608068695270059283963_u128];
_9 = -_7.0;
_16.2.1 = 45687_u16 as f32;
_7.1 = 15924607373497465994_u64 as i16;
_17 = !_4;
Goto(bb3)
}
bb14 = {
_12 = [9172962993207575936_u64,612290680972355637_u64,15758490995577999291_u64,1505719296712135684_u64,18408671828583033151_u64];
_5 = _8;
_12 = [16300893574671682475_u64,13828838441887457863_u64,13823348116967988140_u64,12222555135886820071_u64,3948917341540432363_u64];
_3 = !_8;
_2 = [2206957411_u32,3308826588_u32,1636941320_u32,169156555_u32,1933812044_u32];
_2 = [3989793801_u32,2841503605_u32,2778765870_u32,2234789404_u32,469893652_u32];
_4 = _10 as isize;
_6 = _7.1 as i128;
_9 = _6;
_2 = [479350320_u32,416456149_u32,3358259443_u32,1284165025_u32,2478201429_u32];
_5 = _3 & _8;
_7 = (_10, 9022_i16);
_1 = _10;
_10 = 16858865568925111585_u64 as i128;
_5 = _8;
_1 = _7.0 >> _9;
_12 = [3385576878563129816_u64,13826812548767825466_u64,3087765892921242936_u64,12384360321598798281_u64,5560459939966110196_u64];
_14 = _2;
_2 = _14;
_3 = _5 | _5;
RET = [37132739580705070881108618591171332740_u128,98899469232413740465073312119942709695_u128,1904642748448979096684445973382472324_u128,303700302688680365526445001539329895347_u128,166444891685777349876598226405259058828_u128,266464900313211612969280889255615270848_u128,250854522941137752737085800758949701239_u128];
_3 = _5;
_7 = (_6, (-10742_i16));
_4 = 9223372036854775807_isize * 29_isize;
_11 = 53_i8 << _7.1;
_12 = [5530862370823801400_u64,7371826824830502568_u64,6773500976718906240_u64,973199029994101363_u64,17802942420293648505_u64];
_8 = !_5;
_9 = -_6;
Goto(bb2)
}
bb15 = {
_26.1 = _21;
_5 = _13;
_17 = 2761807479_u32 as isize;
_28.fld0 = !_5;
_24 = _26.0 as i32;
place!(Field::<[i64; 8]>(Variant(_28.fld4, 0), 0)) = [_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0,_16.2.0];
_26.3 = _25.3 - _25.3;
Goto(bb16)
}
bb16 = {
Call(_45 = dump_var(6_usize, 22_usize, Move(_22), 31_usize, Move(_31), 12_usize, Move(_12), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(6_usize, 9_usize, Move(_9), 24_usize, Move(_24), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(6_usize, 23_usize, Move(_23), 10_usize, Move(_10), 14_usize, Move(_14), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_45 = dump_var(6_usize, 3_usize, Move(_3), 26_usize, Move(_26), 46_usize, _46, 46_usize, _46), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: bool,mut _2: i128,mut _3: i128,mut _4: i128,mut _5: bool) -> i128 {
mir! {
type RET = i128;
let _6: i32;
let _7: f32;
let _8: [i64; 8];
let _9: f32;
let _10: [char; 3];
let _11: isize;
let _12: (u64,);
let _13: Adt51;
let _14: [char; 7];
let _15: ();
let _16: ();
{
_1 = !_5;
_4 = _3 | _3;
_1 = _5;
_4 = _3;
RET = _2 >> _4;
RET = _2 | _2;
_5 = !_1;
_1 = _5;
_4 = !_2;
RET = -_4;
_3 = _4 * _2;
RET = _3 | _2;
_3 = -RET;
_1 = _5;
_5 = _1;
_1 = RET < _3;
_2 = !_4;
_2 = _4 * RET;
_4 = _2 ^ _3;
_5 = _4 <= _4;
_2 = _4 ^ RET;
_9 = (-6388479836101277317_i64) as f32;
_7 = 42_u8 as f32;
RET = '\u{16a2b}' as i128;
_4 = _3;
RET = 35_u8 as i128;
_6 = (-688550686_i32);
_6 = 7078973_i32;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
7078973 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = _2;
_5 = !_1;
RET = -_3;
_8 = [828515519393438806_i64,(-786662428121897114_i64),(-3487181307641028754_i64),(-1110618728794049133_i64),(-1699779843814189822_i64),1789923999335878837_i64,(-3057280682105098399_i64),(-6603950937011768813_i64)];
RET = !_3;
_4 = _2;
_7 = 2871259497532914033_usize as f32;
_11 = -(-9223372036854775808_isize);
_10 = ['\u{37434}','\u{b2972}','\u{af96f}'];
_7 = _11 as f32;
_9 = _7 * _7;
_12.0 = 199440085238701314_u64 & 6913767923357690684_u64;
_1 = _5 | _5;
_14 = ['\u{34a9e}','\u{1250f}','\u{821c3}','\u{5adda}','\u{736f8}','\u{778cd}','\u{6c72d}'];
_1 = _5 | _5;
RET = _4;
_5 = _1;
_12 = (13733976730060179500_u64,);
_5 = _1;
_6 = !(-271194216_i32);
_14 = ['\u{d5e73}','\u{500ca}','\u{cd9b4}','\u{fd039}','\u{27080}','\u{1b024}','\u{bef53}'];
_3 = _4;
_1 = !_5;
_14 = ['\u{90a3c}','\u{5ce26}','\u{50338}','\u{b94c6}','\u{4e86d}','\u{d5469}','\u{721d6}'];
_12 = (13413141008875117620_u64,);
RET = !_3;
_8 = [(-865360926688159950_i64),(-3748016269879648362_i64),(-7736842995469248203_i64),7020017188453474635_i64,(-5595621206990148032_i64),5292582635843759146_i64,8562415143903056789_i64,8047908907178634089_i64];
Goto(bb9)
}
bb9 = {
Call(_15 = dump_var(7_usize, 1_usize, Move(_1), 3_usize, Move(_3), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_15 = dump_var(7_usize, 11_usize, Move(_11), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: i128,mut _2: i128,mut _3: bool,mut _4: i128,mut _5: i128) -> bool {
mir! {
type RET = bool;
let _6: Adt50;
let _7: [char; 6];
let _8: char;
let _9: Adt40;
let _10: f32;
let _11: ();
let _12: ();
{
_5 = !_4;
RET = _3;
_4 = _2 * _5;
_5 = -_1;
RET = !_3;
_6.fld3 = 11184590697804853098_u64;
_6.fld5 = [(-4708247006408097415_i64),2530179485397880317_i64,3798509923534441219_i64,73620568039539384_i64,(-7847595730025405632_i64),(-4951547190132149864_i64),4672310548181116077_i64,8954210645423978784_i64];
_1 = _5;
_8 = '\u{26d89}';
_6.fld2 = 59_isize ^ 115_isize;
_9.fld1.2 = 1593831338_i32 + (-1018961306_i32);
_9.fld1.1 = _4 ^ _2;
_9.fld1.0 = [302025312161227444737637394442030926997_u128,210502722959725563694503143703117237636_u128,19115474976393098734885439715540532948_u128,84152564143292926939356339166577445383_u128,229405723123528537787745569776439343976_u128,98493132152217418495993367368541910654_u128,52598370516111602953799116999605757034_u128];
_9.fld1.2 = 1125723873_i32;
_6.fld3 = 166344825314470358_u64;
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(8_usize, 1_usize, Move(_1), 4_usize, Move(_4), 5_usize, Move(_5), 12_usize, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: bool,mut _2: i128,mut _3: bool,mut _4: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16)),mut _5: i128,mut _6: (bool, char, bool, u16, [u64; 5])) -> Adt45 {
mir! {
type RET = Adt45;
let _7: usize;
let _8: isize;
let _9: Adt43;
let _10: Adt44;
let _11: u128;
let _12: [u32; 5];
let _13: bool;
let _14: bool;
let _15: [u128; 7];
let _16: u32;
let _17: Adt41;
let _18: isize;
let _19: (i128, i16);
let _20: f64;
let _21: Adt41;
let _22: (u32, *const [u32; 5], isize);
let _23: i64;
let _24: char;
let _25: [i64; 6];
let _26: u128;
let _27: isize;
let _28: Adt55;
let _29: Adt53;
let _30: isize;
let _31: ();
let _32: ();
{
_6.4 = [67178253043935540_u64,17033421294062087668_u64,5587156842573173224_u64,14291168741129254567_u64,18308003681726381632_u64];
RET = Adt45::Variant1 { fld0: 273602205107110928024406887589468549821_u128 };
_6.3 = !12981_u16;
_5 = _2 ^ _2;
_4.2.2 = !_2;
_3 = !_6.2;
_4.3 = (_4.2.2, 4612_i16);
_1 = _6.2 ^ _6.0;
place!(Field::<u128>(Variant(RET, 1), 0)) = !78961736640901368470240701760062415879_u128;
_4.2 = ((-5997984678323923333_i64), _4.1, _2, (-1021437618_i32));
_4.0 = [_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0];
_4.1 = _4.2.1;
_4.2.2 = -_4.3.0;
Goto(bb1)
}
bb1 = {
_4.3.1 = -4543_i16;
_1 = _2 > _4.2.2;
_6.1 = '\u{5d3be}';
place!(Field::<u128>(Variant(RET, 1), 0)) = _4.2.3 as u128;
_2 = Field::<u128>(Variant(RET, 1), 0) as i128;
_4.3.0 = -_4.2.2;
SetDiscriminant(RET, 1);
_6.2 = !_1;
_5 = _4.3.0;
place!(Field::<u128>(Variant(RET, 1), 0)) = 10145764641414234046561113801220781749_u128 * 335123038476246445267180367537529106744_u128;
_6.3 = !4597_u16;
match _4.2.0 {
340282366920938463457376622753444288123 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_4.3.1 = !746_i16;
_4.3 = (_2, 6275_i16);
_4.0 = [_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0];
_6.1 = '\u{372d6}';
_5 = _4.2.2 >> _4.3.0;
_4.3.1 = 1334_i16 >> _5;
_4.2.2 = _6.1 as i128;
_4.2.2 = _4.3.0 * _5;
_3 = _1;
_6.4 = [16979493514796719626_u64,8285279313435300613_u64,13487115586286928181_u64,999925232093657404_u64,14389882587492513458_u64];
_6.1 = '\u{30038}';
_11 = _6.3 as u128;
_12 = [1035069789_u32,3030386637_u32,1242565994_u32,1498082542_u32,662609645_u32];
_2 = !_4.2.2;
_6.3 = 102_i8 as u16;
_6.4 = [3731797570246891726_u64,975410978687404178_u64,3737352900454670963_u64,760274121957594659_u64,5634320241623743292_u64];
_4.3.0 = _5 - _5;
_5 = !_2;
_4.3 = (_5, 17344_i16);
_13 = !_1;
_4.3.0 = _4.2.3 as i128;
match _4.2.0 {
340282366920938463457376622753444288123 => bb4,
_ => bb2
}
}
bb4 = {
_4.2.3 = 1072781122_i32;
RET = Adt45::Variant1 { fld0: _11 };
_15 = [_11,Field::<u128>(Variant(RET, 1), 0),Field::<u128>(Variant(RET, 1), 0),Field::<u128>(Variant(RET, 1), 0),_11,_11,Field::<u128>(Variant(RET, 1), 0)];
RET = Adt45::Variant2 { fld0: _4.2.2,fld1: _6.4,fld2: _15,fld3: 2938666017227287770_u64 };
_4.0 = [_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0];
_6.0 = !_3;
place!(Field::<i128>(Variant(RET, 2), 0)) = !_4.3.0;
_7 = 4_usize + 4_usize;
place!(Field::<u64>(Variant(RET, 2), 3)) = 4688089471944404190_u64 - 10071848583738784013_u64;
_19.1 = _4.3.1;
_2 = Field::<i128>(Variant(RET, 2), 0) & _5;
_19 = (Field::<i128>(Variant(RET, 2), 0), _4.3.1);
place!(Field::<i128>(Variant(RET, 2), 0)) = _2 ^ _5;
_17 = Adt41 { fld0: _11,fld1: _6.1,fld2: _4.2.0 };
_19.0 = -_2;
_12 = [2680347377_u32,2417497255_u32,3038339929_u32,2742966289_u32,753301314_u32];
SetDiscriminant(RET, 1);
_6.1 = _17.fld1;
_18 = _4.2.1 as isize;
_6.0 = !_13;
_19.0 = -_4.3.0;
_21.fld0 = _11 ^ _17.fld0;
_4.3.0 = !_5;
_4.2.1 = _21.fld0 as f32;
_6.0 = _3;
_6.1 = _17.fld1;
Goto(bb5)
}
bb5 = {
_20 = _6.3 as f64;
_6.4 = [12440590837109358270_u64,7383331030334883280_u64,12724474755102153287_u64,13151180975543201110_u64,17151763864402225794_u64];
_21.fld2 = _17.fld2 ^ _4.2.0;
_6.1 = _17.fld1;
Goto(bb6)
}
bb6 = {
_17.fld0 = _4.2.1 as u128;
_4.2.2 = -_2;
_4.3 = (_2, _19.1);
_17.fld1 = _6.1;
_22.2 = 1707693797_u32 as isize;
_4.2.1 = _4.1;
_12 = [946764938_u32,847833427_u32,840204528_u32,2591063232_u32,595313956_u32];
_5 = _4.2.2;
_11 = _21.fld0;
Goto(bb7)
}
bb7 = {
_6.1 = _17.fld1;
_4.3.0 = !_5;
_5 = _2;
_21.fld0 = _11 & _17.fld0;
_22.1 = core::ptr::addr_of!(_12);
_22.1 = core::ptr::addr_of!(_12);
_2 = _4.2.2 - _19.0;
_23 = 1725030200_u32 as i64;
_17 = Adt41 { fld0: _11,fld1: _6.1,fld2: _21.fld2 };
RET = Adt45::Variant2 { fld0: _4.3.0,fld1: _6.4,fld2: _15,fld3: 9805345353584855178_u64 };
_24 = _6.1;
_21.fld1 = _17.fld1;
_11 = !_21.fld0;
_17 = Adt41 { fld0: _21.fld0,fld1: _6.1,fld2: _4.2.0 };
_6.2 = !_3;
_4.3 = (_4.2.2, _19.1);
Goto(bb8)
}
bb8 = {
_18 = 3426924460873513707_u64 as isize;
_6.4 = [10816518853046226253_u64,14722283395275667433_u64,9514778317899003533_u64,12947557788740479496_u64,5159697964395368213_u64];
match _19.1 {
0 => bb3,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
17344 => bb16,
_ => bb15
}
}
bb9 = {
_6.1 = _17.fld1;
_4.3.0 = !_5;
_5 = _2;
_21.fld0 = _11 & _17.fld0;
_22.1 = core::ptr::addr_of!(_12);
_22.1 = core::ptr::addr_of!(_12);
_2 = _4.2.2 - _19.0;
_23 = 1725030200_u32 as i64;
_17 = Adt41 { fld0: _11,fld1: _6.1,fld2: _21.fld2 };
RET = Adt45::Variant2 { fld0: _4.3.0,fld1: _6.4,fld2: _15,fld3: 9805345353584855178_u64 };
_24 = _6.1;
_21.fld1 = _17.fld1;
_11 = !_21.fld0;
_17 = Adt41 { fld0: _21.fld0,fld1: _6.1,fld2: _4.2.0 };
_6.2 = !_3;
_4.3 = (_4.2.2, _19.1);
Goto(bb8)
}
bb10 = {
_17.fld0 = _4.2.1 as u128;
_4.2.2 = -_2;
_4.3 = (_2, _19.1);
_17.fld1 = _6.1;
_22.2 = 1707693797_u32 as isize;
_4.2.1 = _4.1;
_12 = [946764938_u32,847833427_u32,840204528_u32,2591063232_u32,595313956_u32];
_5 = _4.2.2;
_11 = _21.fld0;
Goto(bb7)
}
bb11 = {
_20 = _6.3 as f64;
_6.4 = [12440590837109358270_u64,7383331030334883280_u64,12724474755102153287_u64,13151180975543201110_u64,17151763864402225794_u64];
_21.fld2 = _17.fld2 ^ _4.2.0;
_6.1 = _17.fld1;
Goto(bb6)
}
bb12 = {
_4.2.3 = 1072781122_i32;
RET = Adt45::Variant1 { fld0: _11 };
_15 = [_11,Field::<u128>(Variant(RET, 1), 0),Field::<u128>(Variant(RET, 1), 0),Field::<u128>(Variant(RET, 1), 0),_11,_11,Field::<u128>(Variant(RET, 1), 0)];
RET = Adt45::Variant2 { fld0: _4.2.2,fld1: _6.4,fld2: _15,fld3: 2938666017227287770_u64 };
_4.0 = [_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0];
_6.0 = !_3;
place!(Field::<i128>(Variant(RET, 2), 0)) = !_4.3.0;
_7 = 4_usize + 4_usize;
place!(Field::<u64>(Variant(RET, 2), 3)) = 4688089471944404190_u64 - 10071848583738784013_u64;
_19.1 = _4.3.1;
_2 = Field::<i128>(Variant(RET, 2), 0) & _5;
_19 = (Field::<i128>(Variant(RET, 2), 0), _4.3.1);
place!(Field::<i128>(Variant(RET, 2), 0)) = _2 ^ _5;
_17 = Adt41 { fld0: _11,fld1: _6.1,fld2: _4.2.0 };
_19.0 = -_2;
_12 = [2680347377_u32,2417497255_u32,3038339929_u32,2742966289_u32,753301314_u32];
SetDiscriminant(RET, 1);
_6.1 = _17.fld1;
_18 = _4.2.1 as isize;
_6.0 = !_13;
_19.0 = -_4.3.0;
_21.fld0 = _11 ^ _17.fld0;
_4.3.0 = !_5;
_4.2.1 = _21.fld0 as f32;
_6.0 = _3;
_6.1 = _17.fld1;
Goto(bb5)
}
bb13 = {
_4.3.1 = !746_i16;
_4.3 = (_2, 6275_i16);
_4.0 = [_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.2.0];
_6.1 = '\u{372d6}';
_5 = _4.2.2 >> _4.3.0;
_4.3.1 = 1334_i16 >> _5;
_4.2.2 = _6.1 as i128;
_4.2.2 = _4.3.0 * _5;
_3 = _1;
_6.4 = [16979493514796719626_u64,8285279313435300613_u64,13487115586286928181_u64,999925232093657404_u64,14389882587492513458_u64];
_6.1 = '\u{30038}';
_11 = _6.3 as u128;
_12 = [1035069789_u32,3030386637_u32,1242565994_u32,1498082542_u32,662609645_u32];
_2 = !_4.2.2;
_6.3 = 102_i8 as u16;
_6.4 = [3731797570246891726_u64,975410978687404178_u64,3737352900454670963_u64,760274121957594659_u64,5634320241623743292_u64];
_4.3.0 = _5 - _5;
_5 = !_2;
_4.3 = (_5, 17344_i16);
_13 = !_1;
_4.3.0 = _4.2.3 as i128;
match _4.2.0 {
340282366920938463457376622753444288123 => bb4,
_ => bb2
}
}
bb14 = {
Return()
}
bb15 = {
_4.3.1 = -4543_i16;
_1 = _2 > _4.2.2;
_6.1 = '\u{5d3be}';
place!(Field::<u128>(Variant(RET, 1), 0)) = _4.2.3 as u128;
_2 = Field::<u128>(Variant(RET, 1), 0) as i128;
_4.3.0 = -_4.2.2;
SetDiscriminant(RET, 1);
_6.2 = !_1;
_5 = _4.3.0;
place!(Field::<u128>(Variant(RET, 1), 0)) = 10145764641414234046561113801220781749_u128 * 335123038476246445267180367537529106744_u128;
_6.3 = !4597_u16;
match _4.2.0 {
340282366920938463457376622753444288123 => bb3,
_ => bb2
}
}
bb16 = {
_22.0 = 3502301111_u32;
_2 = _4.2.2;
_4.3 = (_4.2.2, _19.1);
_22.1 = core::ptr::addr_of!(_12);
Goto(bb17)
}
bb17 = {
_16 = _4.2.3 as u32;
_7 = !5_usize;
_18 = _4.2.3 as isize;
place!(Field::<u64>(Variant(RET, 2), 3)) = 41_u8 as u64;
_11 = _17.fld0;
_4.3 = _19;
_7 = 1_usize;
_3 = !_6.0;
_1 = !_6.2;
_2 = Field::<i128>(Variant(RET, 2), 0) & _19.0;
_27 = _22.0 as isize;
_16 = _12[_7] % _12[_7];
_25 = [_4.0[_7],_17.fld2,_4.0[_7],_21.fld2,_21.fld2,_21.fld2];
_15[_7] = !_11;
_4.3.0 = _2;
_6.2 = !_1;
_17.fld1 = _6.1;
_6.4[_7] = !Field::<[u64; 5]>(Variant(RET, 2), 1)[_7];
Goto(bb18)
}
bb18 = {
Call(_31 = dump_var(9_usize, 16_usize, Move(_16), 6_usize, Move(_6), 5_usize, Move(_5), 3_usize, Move(_3)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(9_usize, 25_usize, Move(_25), 11_usize, Move(_11), 2_usize, Move(_2), 19_usize, Move(_19)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: i128,mut _3: ([u128; 7], i128, i32),mut _4: (i128, i16),mut _5: isize,mut _6: isize,mut _7: isize,mut _8: ([u128; 7], i128, i32),mut _9: isize,mut _10: ([u128; 7], i128, i32),mut _11: isize,mut _12: (i128, i16)) -> Adt47 {
mir! {
type RET = Adt47;
let _13: i32;
let _14: f64;
let _15: [i64; 6];
let _16: (u64,);
let _17: bool;
let _18: bool;
let _19: [char; 7];
let _20: ();
let _21: ();
{
_10 = (_8.0, _3.1, _3.2);
_10.1 = 6_u8 as i128;
_4 = (_2, _12.1);
_4.0 = _8.1 ^ _8.1;
_10.1 = _3.1;
_3 = (_8.0, _8.1, _8.2);
_12.0 = 21984_u16 as i128;
_11 = !_6;
_3.0 = [263507678129408584073415194682077086264_u128,182601642675932863538978975115306357362_u128,260344720106877313375027467333659254890_u128,288686712885092102725735443910114917362_u128,265091058990486009933036168654984390050_u128,153307328719112979353485947622502901551_u128,46669489818689917826878491464988252137_u128];
_10.1 = -_2;
_8.0 = [142662087044999817755990183048280191141_u128,19377674104080332330494615081949226318_u128,246014427574156906096347758562618253237_u128,201989349347744556609643323940430409520_u128,181609803870330110255907927487314197932_u128,119850623741596816316849802463793396912_u128,280955008952593124271592556941891861542_u128];
_4.0 = !_10.1;
_10.1 = 123085890154835826737911190015115598650_u128 as i128;
_4 = _12;
Call(RET = fn11(_8.1, _5, _7, _2, _7, _7, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8.1 = _3.1 & _3.1;
place!(Field::<(i128, i16)>(Variant(RET, 1), 1)) = (_2, _4.1);
_12.1 = 7200974635060961641_i64 as i16;
_8.2 = !_3.2;
_5 = _9 << _1;
Goto(bb2)
}
bb2 = {
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).2 = -_7;
place!(Field::<([i64; 8],)>(Variant(RET, 0), 2)).0 = [(-6832040715444340502_i64),(-5547057149750946675_i64),(-7606823396423211226_i64),7881745670827252869_i64,(-465363383811272854_i64),9135923567740648321_i64,(-6433721126805436436_i64),(-6298002590451132507_i64)];
_10.2 = '\u{32cca}' as i32;
_4 = (_3.1, _12.1);
_9 = -_7;
place!(Field::<[char; 6]>(Variant(RET, 0), 0)) = ['\u{b827d}','\u{e7e82}','\u{ca1a1}','\u{67b83}','\u{2085d}','\u{82a4d}'];
_15 = [(-3444065113799176781_i64),(-3074372134839087695_i64),9100666423204347210_i64,(-2845330631356485319_i64),6690534866701759658_i64,3226227609738748035_i64];
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).1 = '\u{f30e0}' as i128;
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)).0 = (-118_i8) as i128;
_13 = _3.2;
_17 = false;
_6 = _4.0 as isize;
_16 = (59941911846333280_u64,);
_14 = 0_u8 as f64;
_17 = _11 > _9;
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).2 = _13 & _13;
_18 = _17;
_14 = 17790_u16 as f64;
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).1 = _3.1 * _8.1;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).2 = _5 & _6;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(RET, 0), 5)).0 = _4.1 as u32;
place!(Field::<[char; 6]>(Variant(RET, 0), 0)) = ['\u{f89b}','\u{fba63}','\u{e2a96}','\u{10e8a4}','\u{c6f05}','\u{774d8}'];
_13 = _12.1 as i32;
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).0 = _8.0;
place!(Field::<([u128; 7], i128, i32)>(Variant(RET, 0), 1)).1 = _14 as i128;
place!(Field::<(i128, i16)>(Variant(RET, 0), 4)).1 = _4.1;
RET = Adt47::Variant1 { fld0: _16.0,fld1: _4 };
Goto(bb3)
}
bb3 = {
Call(_20 = dump_var(10_usize, 3_usize, Move(_3), 15_usize, Move(_15), 1_usize, Move(_1), 16_usize, Move(_16)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_20 = dump_var(10_usize, 2_usize, Move(_2), 5_usize, Move(_5), 18_usize, Move(_18), 12_usize, Move(_12)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: i128,mut _2: isize,mut _3: isize,mut _4: i128,mut _5: isize,mut _6: isize,mut _7: isize) -> Adt47 {
mir! {
type RET = Adt47;
let _8: [char; 3];
let _9: [u32; 5];
let _10: (i128, i16);
let _11: Adt44;
let _12: char;
let _13: (bool, char, bool, u16, [u64; 5]);
let _14: ();
let _15: ();
{
_4 = -_1;
_1 = -_4;
_3 = !_5;
_8 = ['\u{b0e12}','\u{b80a}','\u{1a965}'];
_6 = _5;
_8 = ['\u{1d4e4}','\u{1a598}','\u{573e}'];
_2 = _3;
_6 = _5;
_2 = _3;
_2 = 10704151797713558424_u64 as isize;
_7 = _5;
_10.0 = _4;
_10.1 = -22501_i16;
_6 = _3 & _5;
_8 = ['\u{9a169}','\u{977cd}','\u{3d859}'];
_1 = _10.0;
_8 = ['\u{17c62}','\u{b7939}','\u{c075}'];
_4 = !_1;
_6 = _5;
_10 = (_1, 15310_i16);
_7 = '\u{ca736}' as isize;
_7 = _3 - _6;
RET = Adt47::Variant1 { fld0: 15493746412761630506_u64,fld1: _10 };
_4 = _1 | _1;
Goto(bb1)
}
bb1 = {
_6 = 35_i8 as isize;
_5 = !_7;
place!(Field::<u64>(Variant(RET, 1), 0)) = 8870343453004992916_u64 ^ 13341486303707430500_u64;
_10.1 = Field::<(i128, i16)>(Variant(RET, 1), 1).1 << _10.0;
place!(Field::<(i128, i16)>(Variant(RET, 1), 1)) = (_10.0, _10.1);
_3 = '\u{9df02}' as isize;
_1 = -Field::<(i128, i16)>(Variant(RET, 1), 1).0;
_2 = 3310907047_u32 as isize;
place!(Field::<(i128, i16)>(Variant(RET, 1), 1)).1 = 52698_u16 as i16;
place!(Field::<(i128, i16)>(Variant(RET, 1), 1)).0 = -_10.0;
_10 = (_4, Field::<(i128, i16)>(Variant(RET, 1), 1).1);
Goto(bb2)
}
bb2 = {
Call(_14 = dump_var(11_usize, 4_usize, Move(_4), 3_usize, Move(_3), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [u128; 7],mut _2: ([u128; 7], i128, i32),mut _3: usize,mut _4: [i64; 8],mut _5: [u128; 7],mut _6: char,mut _7: [i64; 8],mut _8: u32,mut _9: i64,mut _10: i32,mut _11: i32,mut _12: [u128; 7],mut _13: ([u128; 7], i128, i32)) -> [char; 3] {
mir! {
type RET = [char; 3];
let _14: Adt55;
let _15: Adt53;
let _16: i128;
let _17: Adt52;
let _18: f32;
let _19: isize;
let _20: Adt41;
let _21: Adt48;
let _22: i128;
let _23: f64;
let _24: u64;
let _25: (i128, i16);
let _26: isize;
let _27: Adt43;
let _28: [char; 6];
let _29: Adt45;
let _30: [char; 6];
let _31: Adt51;
let _32: ([i64; 8],);
let _33: [char; 6];
let _34: i128;
let _35: f64;
let _36: ([i64; 8],);
let _37: i32;
let _38: (i64, f32, i128, i32);
let _39: [i64; 8];
let _40: f64;
let _41: [i64; 6];
let _42: i32;
let _43: Adt43;
let _44: Adt49;
let _45: Adt51;
let _46: [i64; 8];
let _47: u128;
let _48: Adt46;
let _49: isize;
let _50: i32;
let _51: [char; 3];
let _52: isize;
let _53: f32;
let _54: (i128, i16);
let _55: u128;
let _56: ();
let _57: ();
{
_8 = 280358420_u32;
RET = [_6,_6,_6];
_8 = !1772604938_u32;
RET = [_6,_6,_6];
_12 = [180925418969086494913250334421527659819_u128,176751914262311877422603349194421255315_u128,87821301610516140563917405312314686842_u128,240704662855845624744072247337209442883_u128,254896023532747093929482673507158127101_u128,296208342057613935382505798920150103910_u128,315359342717414848972124009366721372684_u128];
_13 = (_5, _2.1, _2.2);
RET = [_6,_6,_6];
RET = [_6,_6,_6];
_8 = 1238423014_u32 ^ 2932167889_u32;
_12 = _1;
_6 = '\u{70e03}';
_1 = [272337571813134793309969089947067135365_u128,247584480720597714408117456188799740475_u128,167641089300252888335795478566066269220_u128,138115018383695771274536193297467001880_u128,162686425962336662645433395192806633079_u128,163463634272906397506982993254337444472_u128,129117894992136859751725313963718724539_u128];
_13.0 = _1;
_7 = [_9,_9,_9,_9,_9,_9,_9,_9];
_1 = [143724506663305400402095274862110960660_u128,148297398011487359443994703243938814234_u128,164259333117342151792381166161387658513_u128,228002855976535443359342351258549007631_u128,3794772509510838125527402278673719218_u128,162488804681094617521567782797709305662_u128,13739892855167137030241523784328066008_u128];
_2.2 = _11;
match _11 {
0 => bb1,
340282366920938463463374607430939859489 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_7 = [_9,_9,_9,_9,_9,_9,_9,_9];
_12 = [49671309053617364580555125196077286605_u128,98079272628764918183174665317174632651_u128,272859913167397599313813760436323746067_u128,51726111728803700131696175909381017941_u128,236571193602230463452977409640478521631_u128,2426404698494947389242210858643581237_u128,246794212705168746145595006656873689693_u128];
_16 = _13.1;
_10 = _13.2 ^ _11;
_10 = _2.2;
_2 = (_12, _16, _13.2);
Goto(bb4)
}
bb4 = {
_19 = _6 as isize;
_2 = (_12, _16, _11);
_11 = -_13.2;
_1 = _2.0;
_13 = (_2.0, _2.1, _11);
_2.0 = [130009418279938750895993557953261577121_u128,162329976355803287554608066934724928798_u128,5140010912877176439399500374293024409_u128,339367858999227668273157996420090686332_u128,111250268791782348771916138560985618936_u128,49419963634526810605499422699659238738_u128,144410121247861346274369222465207148796_u128];
_20.fld1 = _6;
_2.1 = _13.1;
_1 = [19473805551671936911290228786845698839_u128,307276717144414859640071927874789171301_u128,164138663747725404582465539478479915218_u128,81625363382841082197768969413371741531_u128,29673015262451770125990429848222002640_u128,287986658781671593721620001896786994675_u128,81951086086310369477342453264001260058_u128];
_5 = [114687934944052662157243670871377488290_u128,130243291607154865228192557665099006796_u128,276434626167440647387211905905945537412_u128,25290579914799738498653811849474044794_u128,97399034880976961248410958600480487817_u128,8571929599892148913164679582617878294_u128,171768478118701177259585929164013158113_u128];
_13.1 = !_2.1;
_2.1 = 7247343842989883607_u64 as i128;
_20.fld0 = 61094_u16 as u128;
_18 = _19 as f32;
_11 = false as i32;
_1 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_23 = _8 as f64;
Goto(bb5)
}
bb5 = {
_13.1 = -_16;
_25.1 = 15754_u16 as i16;
_1 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_26 = _19;
_24 = !4209769187425092999_u64;
_13.1 = !_2.1;
_13.1 = _2.1 << _9;
RET = [_6,_20.fld1,_6];
_18 = _25.1 as f32;
_16 = _26 as i128;
_19 = !_26;
_20.fld2 = -_9;
_5 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_3 = 14239150217641178991_usize;
_25.0 = _18 as i128;
Goto(bb6)
}
bb6 = {
_12 = _2.0;
_2.2 = _10 | _11;
_13.1 = _2.1;
_19 = _26;
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463463374607430939859489 => bb7,
_ => bb4
}
}
bb7 = {
_11 = _9 as i32;
_1 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_22 = _2.1 * _16;
_24 = 8496508382921682130_u64;
_19 = _26;
_5 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_5 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_2.1 = _22;
_13.1 = _2.1;
RET = [_6,_6,_6];
_9 = _20.fld2 * _20.fld2;
_12 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_18 = _24 as f32;
_20 = Adt41 { fld0: 161401745068526428563589243030042570198_u128,fld1: _6,fld2: _9 };
_18 = 12_i8 as f32;
_16 = _2.1 << _20.fld0;
_26 = _19 << _10;
_25 = (_16, 2352_i16);
RET = [_6,_6,_6];
RET = [_6,_20.fld1,_6];
match _20.fld0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
161401745068526428563589243030042570198 => bb9,
_ => bb8
}
}
bb8 = {
_19 = _6 as isize;
_2 = (_12, _16, _11);
_11 = -_13.2;
_1 = _2.0;
_13 = (_2.0, _2.1, _11);
_2.0 = [130009418279938750895993557953261577121_u128,162329976355803287554608066934724928798_u128,5140010912877176439399500374293024409_u128,339367858999227668273157996420090686332_u128,111250268791782348771916138560985618936_u128,49419963634526810605499422699659238738_u128,144410121247861346274369222465207148796_u128];
_20.fld1 = _6;
_2.1 = _13.1;
_1 = [19473805551671936911290228786845698839_u128,307276717144414859640071927874789171301_u128,164138663747725404582465539478479915218_u128,81625363382841082197768969413371741531_u128,29673015262451770125990429848222002640_u128,287986658781671593721620001896786994675_u128,81951086086310369477342453264001260058_u128];
_5 = [114687934944052662157243670871377488290_u128,130243291607154865228192557665099006796_u128,276434626167440647387211905905945537412_u128,25290579914799738498653811849474044794_u128,97399034880976961248410958600480487817_u128,8571929599892148913164679582617878294_u128,171768478118701177259585929164013158113_u128];
_13.1 = !_2.1;
_2.1 = 7247343842989883607_u64 as i128;
_20.fld0 = 61094_u16 as u128;
_18 = _19 as f32;
_11 = false as i32;
_1 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_23 = _8 as f64;
Goto(bb5)
}
bb9 = {
_2.1 = _16;
_5 = _2.0;
_34 = !_25.0;
_20.fld1 = _6;
_4 = [_20.fld2,_9,_9,_9,_20.fld2,_9,_9,_9];
_4 = [_9,_9,_9,_20.fld2,_9,_9,_20.fld2,_9];
_6 = _20.fld1;
_10 = _2.2;
_20 = Adt41 { fld0: 285177542494374731337205212388601436770_u128,fld1: _6,fld2: _9 };
_32 = (_7,);
_13 = (_2.0, _16, _11);
Goto(bb10)
}
bb10 = {
_36.0 = [_20.fld2,_9,_20.fld2,_9,_9,_9,_9,_20.fld2];
_2.1 = _16;
_3 = !2_usize;
RET = [_6,_6,_20.fld1];
_13.2 = _11;
RET = [_6,_6,_20.fld1];
_28 = [_20.fld1,_6,_6,_20.fld1,_20.fld1,_6];
_4 = _7;
_32 = _36;
_2.0 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_5 = _1;
_18 = _8 as f32;
_16 = _20.fld0 as i128;
_4 = [_9,_9,_20.fld2,_20.fld2,_9,_20.fld2,_9,_9];
_31 = Adt51::Variant1 { fld0: RET,fld1: _20.fld1,fld2: _25,fld3: _7,fld4: _28 };
_2.2 = _26 as i32;
_38.2 = _25.0;
_38.0 = _9 | _20.fld2;
_38.3 = _10;
_34 = _38.2;
_38 = (_20.fld2, _18, _13.1, _10);
Goto(bb11)
}
bb11 = {
_20 = Adt41 { fld0: 59781856551289684310906094724507348609_u128,fld1: Field::<char>(Variant(_31, 1), 1),fld2: _9 };
_2 = (_13.0, Field::<(i128, i16)>(Variant(_31, 1), 2).0, _11);
_25.0 = _16;
_37 = !_10;
_38.3 = -_10;
_38.2 = !_16;
_30 = [_6,Field::<char>(Variant(_31, 1), 1),_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_41 = [_38.0,_20.fld2,_20.fld2,_20.fld2,_20.fld2,_38.0];
_4 = [_38.0,_20.fld2,_9,_20.fld2,_20.fld2,_9,_9,_9];
_41 = [_9,_38.0,_20.fld2,_20.fld2,_20.fld2,_38.0];
_9 = _38.0 ^ _38.0;
place!(Field::<(i128, i16)>(Variant(_31, 1), 2)).0 = _13.1;
_38.0 = _38.3 as i64;
_19 = _20.fld1 as isize;
_41 = [_9,_38.0,_9,_9,_20.fld2,_38.0];
_39 = [_9,_20.fld2,_9,_9,_20.fld2,_38.0,_38.0,_20.fld2];
place!(Field::<char>(Variant(_31, 1), 1)) = _6;
Goto(bb12)
}
bb12 = {
_19 = _26;
SetDiscriminant(_31, 2);
place!(Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1)).1 = _38.1 + _18;
_34 = _38.2;
place!(Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1)).0 = _20.fld2 ^ _9;
_45 = Adt51::Variant1 { fld0: RET,fld1: _6,fld2: _25,fld3: _4,fld4: _30 };
_2.1 = _13.1;
place!(Field::<i32>(Variant(_31, 2), 3)) = _13.2;
place!(Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1)) = (_20.fld2, _38.1, _34, _13.2);
_38.2 = -_34;
place!(Field::<Adt43>(Variant(_45, 0), 0)) = Adt43::Variant1 { fld0: _19,fld1: _30 };
_19 = _37 as isize;
_26 = _8 as isize;
_36.0 = [_20.fld2,_38.0,_20.fld2,Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).0,_9,_9,Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).0,_9];
_1 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0,_20.fld0];
_38.2 = _2.1 * _13.1;
_38.0 = _9 + Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).0;
_38.3 = !_11;
_13.1 = _2.1 & _22;
_30 = Field::<[char; 6]>(Variant(Field::<Adt43>(Variant(_45, 0), 0), 1), 1);
_35 = _3 as f64;
match _25.1 {
0 => bb6,
2352 => bb13,
_ => bb7
}
}
bb13 = {
_11 = !Field::<i32>(Variant(_31, 2), 3);
_3 = !18100746794896874290_usize;
_46 = _36.0;
_33 = _30;
place!(Field::<u128>(Variant(_31, 2), 4)) = _20.fld0 % _20.fld0;
SetDiscriminant(Field::<Adt43>(Variant(_45, 0), 0), 1);
_5 = _1;
Goto(bb14)
}
bb14 = {
_32.0 = [Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).0,Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).0,_20.fld2,_38.0,_9,_9,_38.0,_38.0];
_33 = [_20.fld1,_6,_20.fld1,_20.fld1,_6,_6];
_16 = !Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).2;
_42 = -Field::<(i64, f32, i128, i32)>(Variant(_31, 2), 1).3;
_31 = Adt51::Variant1 { fld0: RET,fld1: _6,fld2: _25,fld3: _32.0,fld4: _33 };
_35 = _8 as f64;
_3 = 10017351497808989211_usize * 10007378208612388604_usize;
_9 = _25.1 as i64;
place!(Field::<[char; 6]>(Variant(place!(Field::<Adt43>(Variant(_45, 0), 0)), 1), 1)) = [_20.fld1,_20.fld1,_6,Field::<char>(Variant(_31, 1), 1),_20.fld1,Field::<char>(Variant(_31, 1), 1)];
_49 = _19;
_52 = _38.1 as isize;
_2 = (_5, _25.0, _11);
_54.1 = -Field::<(i128, i16)>(Variant(_31, 1), 2).1;
_36 = (_4,);
_38 = (_9, _18, _34, _37);
_31 = Adt51::Variant1 { fld0: RET,fld1: _20.fld1,fld2: _25,fld3: _46,fld4: _30 };
_36 = (_39,);
_28 = [Field::<char>(Variant(_31, 1), 1),Field::<char>(Variant(_31, 1), 1),_6,_6,_6,_20.fld1];
_39 = [_38.0,_9,_20.fld2,_20.fld2,_9,_9,_9,_20.fld2];
_23 = _35;
_4 = Field::<[i64; 8]>(Variant(_31, 1), 3);
_28 = Field::<[char; 6]>(Variant(Field::<Adt43>(Variant(_45, 0), 0), 1), 1);
Goto(bb15)
}
bb15 = {
Call(_56 = dump_var(12_usize, 5_usize, Move(_5), 2_usize, Move(_2), 46_usize, Move(_46), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_56 = dump_var(12_usize, 9_usize, Move(_9), 41_usize, Move(_41), 1_usize, Move(_1), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_56 = dump_var(12_usize, 25_usize, Move(_25), 32_usize, Move(_32), 33_usize, Move(_33), 52_usize, Move(_52)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_56 = dump_var(12_usize, 39_usize, Move(_39), 36_usize, Move(_36), 19_usize, Move(_19), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: isize,mut _2: *const [u64; 5],mut _3: [u128; 7],mut _4: usize,mut _5: Adt44,mut _6: (i128, i16),mut _7: isize,mut _8: f32) -> Adt46 {
mir! {
type RET = Adt46;
let _9: f32;
let _10: Adt40;
let _11: ([u128; 7], i128, i32);
let _12: (i64, f32, i128, i32);
let _13: Adt45;
let _14: isize;
let _15: i16;
let _16: u16;
let _17: i8;
let _18: i32;
let _19: f64;
let _20: Adt56;
let _21: *mut u16;
let _22: ([i64; 8],);
let _23: [u128; 7];
let _24: bool;
let _25: [u32; 5];
let _26: usize;
let _27: u16;
let _28: u8;
let _29: Adt43;
let _30: [u64; 5];
let _31: [u32; 5];
let _32: [char; 3];
let _33: *mut i8;
let _34: char;
let _35: bool;
let _36: [i64; 6];
let _37: u8;
let _38: u16;
let _39: [char; 3];
let _40: *const [u64; 5];
let _41: ();
let _42: ();
{
_6.0 = 48107167758870591614506309609790629831_i128 & 29206035842933899440568545788240020599_i128;
_6.0 = (-70676604331934758307005228422674978171_i128);
_7 = !_1;
_4 = 2_usize * 2_usize;
place!(Field::<[char; 6]>(Variant(_5, 1), 0)) = ['\u{d4341}','\u{e5fdf}','\u{35c8b}','\u{70145}','\u{108083}','\u{ec421}'];
_4 = 13081603220780356544_usize + 5_usize;
place!(Field::<i8>(Variant(_5, 1), 3)) = (-15_i8);
_11.2 = 1207620139_i32 << _7;
SetDiscriminant(_5, 1);
_12 = (5580940044361000739_i64, _8, _6.0, _11.2);
_11 = (_3, _12.2, _12.3);
_10.fld1.2 = _12.3;
_4 = !1_usize;
_7 = 107_u8 as isize;
_10.fld1.1 = 5552856946259668839_u64 as i128;
_10.fld1 = (_11.0, _6.0, _12.3);
_6.1 = (-582_i16) >> _11.2;
_4 = 12878782284517029_usize << _12.3;
_6.1 = 1011712694421829896_u64 as i16;
_12 = ((-8926108672159633067_i64), _8, _6.0, _10.fld1.2);
place!(Field::<u64>(Variant(_5, 1), 2)) = !3197349591540878629_u64;
_10.fld1 = _11;
_11.2 = -_10.fld1.2;
_4 = 6041711365833969755_usize << _12.0;
_11.2 = _12.3;
_10.fld0 = ['\u{ac5ff}','\u{6bc36}','\u{5f6e}'];
Goto(bb1)
}
bb1 = {
_12.3 = _11.2 & _10.fld1.2;
_6 = (_11.1, 10986_i16);
_6 = (_12.2, (-12615_i16));
_12.1 = -_8;
_11 = (_10.fld1.0, _10.fld1.1, _10.fld1.2);
_10.fld1.0 = _11.0;
_11.0 = [26421440549496355992656944372362034183_u128,165710357649119710290104322400782117494_u128,183827622842000310306924422785458855588_u128,197038901674444389166422599285230711754_u128,179282567042450878840134837397137337978_u128,166314214758650511550932751137819726151_u128,146567751533154135524749359192265321573_u128];
place!(Field::<i8>(Variant(_5, 1), 3)) = true as i8;
_3 = [251926080057417458076632319733780233698_u128,120964701726796955366780111632834519793_u128,329876325999566151873052498304623216651_u128,213438105874461090088918755207899707827_u128,68060251835935789283317654609562144981_u128,90174189169124322239777765996204980512_u128,201695425498131287208922060735830910623_u128];
_6 = (_11.1, (-23385_i16));
_14 = _7;
_12.0 = Field::<i8>(Variant(_5, 1), 3) as i64;
place!(Field::<f32>(Variant(_5, 1), 1)) = _12.1;
place!(Field::<[char; 6]>(Variant(_5, 1), 0)) = ['\u{f8298}','\u{1acb2}','\u{107656}','\u{8a0ab}','\u{e19a5}','\u{d1b6f}'];
_7 = !_1;
_10.fld1 = (_3, _12.2, _11.2);
_10.fld1.2 = -_12.3;
_10.fld0 = ['\u{10cbaf}','\u{5a3d7}','\u{1645b}'];
_12 = ((-2155598430977518563_i64), _8, _6.0, _10.fld1.2);
_10.fld1.2 = !_12.3;
Goto(bb2)
}
bb2 = {
_16 = Field::<f32>(Variant(_5, 1), 1) as u16;
_11.2 = _10.fld1.2;
_10.fld1.1 = _6.0;
_12.2 = _11.1;
_12.2 = _6.0 << _4;
_9 = Field::<f32>(Variant(_5, 1), 1) * _12.1;
_11.2 = !_12.3;
_12 = (7193574104491459084_i64, _8, _10.fld1.1, _10.fld1.2);
_6.0 = _11.1 + _11.1;
_3 = _10.fld1.0;
_10.fld1.1 = false as i128;
_8 = -_12.1;
_3 = _11.0;
place!(Field::<f32>(Variant(_5, 1), 1)) = _4 as f32;
_4 = !17199689126231201483_usize;
_1 = !_7;
place!(Field::<[char; 6]>(Variant(_5, 1), 0)) = ['\u{532b5}','\u{230b0}','\u{cc662}','\u{6828d}','\u{49ac0}','\u{41836}'];
SetDiscriminant(_5, 0);
_17 = _12.0 as i8;
_15 = !_6.1;
place!(Field::<usize>(Variant(_5, 0), 3)) = _4;
_10.fld1.1 = 101_u8 as i128;
place!(Field::<u128>(Variant(_5, 0), 1)) = 145754728709693049435727510118628077832_u128 - 39477238193178399765057723142344651382_u128;
Call(_11.2 = core::intrinsics::bswap(_10.fld1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_22.0 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_6.1 = !_15;
_10.fld1 = (_11.0, _6.0, _12.3);
place!(Field::<i16>(Variant(_5, 0), 4)) = _6.1 + _15;
_12 = (6409189219671576101_i64, _9, _10.fld1.1, _11.2);
_18 = _11.2;
place!(Field::<*mut u32>(Variant(_5, 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_5, 0), 0)));
_11.2 = _10.fld1.2;
_10.fld1.0 = _3;
_21 = core::ptr::addr_of_mut!(_16);
_10.fld1.1 = _12.2 ^ _12.2;
_6.0 = _10.fld1.1;
_13 = Adt45::Variant1 { fld0: Field::<u128>(Variant(_5, 0), 1) };
Call(_15 = core::intrinsics::transmute(_6.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_25 = [4092523180_u32,980419491_u32,677506704_u32,1021101443_u32,4069825482_u32];
_13 = Adt45::Variant1 { fld0: Field::<u128>(Variant(_5, 0), 1) };
_19 = 312197935_u32 as f64;
place!(Field::<u32>(Variant(_5, 0), 0)) = 2625026016_u32 * 713013266_u32;
_10.fld1.0 = [Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0)];
_30 = [11255294362720588674_u64,9886355153567755706_u64,481739470667912451_u64,10086377444116214378_u64,9426717627181686955_u64];
SetDiscriminant(_13, 2);
place!(Field::<[u64; 5]>(Variant(_13, 2), 1)) = _30;
_22.0 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_20.fld3 = Adt51::Variant2 { fld0: _22.0,fld1: _12,fld2: Field::<*mut u32>(Variant(_5, 0), 2),fld3: _18,fld4: Field::<u128>(Variant(_5, 0), 1) };
_12.3 = Field::<(i64, f32, i128, i32)>(Variant(_20.fld3, 2), 1).3;
_14 = _1 * _7;
place!(Field::<u128>(Variant(_5, 0), 1)) = !Field::<u128>(Variant(_20.fld3, 2), 4);
_3 = [Field::<u128>(Variant(_5, 0), 1),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_5, 0), 1),Field::<u128>(Variant(_5, 0), 1)];
place!(Field::<i32>(Variant(_20.fld3, 2), 3)) = _10.fld1.2;
place!(Field::<[u32; 5]>(Variant(_5, 0), 5)) = [Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0)];
Call(_15 = core::intrinsics::transmute(_16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
place!(Field::<u128>(Variant(_20.fld3, 2), 4)) = Field::<u128>(Variant(_5, 0), 1) & Field::<u128>(Variant(_5, 0), 1);
place!(Field::<i32>(Variant(_20.fld3, 2), 3)) = _12.3;
RET = Adt46::Variant0 { fld0: false,fld1: Field::<*mut u32>(Variant(_20.fld3, 2), 2),fld2: _12.1,fld3: Move(_5) };
place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 0)) = 2001050793_u32;
place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 0)) = !1526703385_u32;
Call(_11.2 = fn14(_10.fld1.1, Move(_20.fld3), Move(Field::<Adt44>(Variant(RET, 0), 3))), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
place!(Field::<f32>(Variant(RET, 0), 2)) = _19 as f32;
place!(Field::<bool>(Variant(RET, 0), 0)) = !true;
_11.0 = _3;
_16 = 33039_u16 << _10.fld1.1;
_10.fld1.1 = _17 as i128;
_13 = Adt45::Variant0 { fld0: _22.0,fld1: '\u{817f1}',fld2: _22,fld3: _30,fld4: _10.fld1.1,fld5: _18 };
_8 = _10.fld1.2 as f32;
_23 = [205989605527487443832204940777174240960_u128,99496527044593124328808249051142141932_u128,279834901637088048168639361408751419343_u128,209735509710152338469894527486966699474_u128,37296357596728305284000654905162920597_u128,265467249837489219717627410669742511173_u128,314251837284190005513649101673947831147_u128];
_11.0 = _23;
match _12.0 {
0 => bb4,
1 => bb2,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6409189219671576101 => bb12,
_ => bb11
}
}
bb7 = {
place!(Field::<u128>(Variant(_20.fld3, 2), 4)) = Field::<u128>(Variant(_5, 0), 1) & Field::<u128>(Variant(_5, 0), 1);
place!(Field::<i32>(Variant(_20.fld3, 2), 3)) = _12.3;
RET = Adt46::Variant0 { fld0: false,fld1: Field::<*mut u32>(Variant(_20.fld3, 2), 2),fld2: _12.1,fld3: Move(_5) };
place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 0)) = 2001050793_u32;
place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 0)) = !1526703385_u32;
Call(_11.2 = fn14(_10.fld1.1, Move(_20.fld3), Move(Field::<Adt44>(Variant(RET, 0), 3))), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_25 = [4092523180_u32,980419491_u32,677506704_u32,1021101443_u32,4069825482_u32];
_13 = Adt45::Variant1 { fld0: Field::<u128>(Variant(_5, 0), 1) };
_19 = 312197935_u32 as f64;
place!(Field::<u32>(Variant(_5, 0), 0)) = 2625026016_u32 * 713013266_u32;
_10.fld1.0 = [Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0),Field::<u128>(Variant(_13, 1), 0)];
_30 = [11255294362720588674_u64,9886355153567755706_u64,481739470667912451_u64,10086377444116214378_u64,9426717627181686955_u64];
SetDiscriminant(_13, 2);
place!(Field::<[u64; 5]>(Variant(_13, 2), 1)) = _30;
_22.0 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_20.fld3 = Adt51::Variant2 { fld0: _22.0,fld1: _12,fld2: Field::<*mut u32>(Variant(_5, 0), 2),fld3: _18,fld4: Field::<u128>(Variant(_5, 0), 1) };
_12.3 = Field::<(i64, f32, i128, i32)>(Variant(_20.fld3, 2), 1).3;
_14 = _1 * _7;
place!(Field::<u128>(Variant(_5, 0), 1)) = !Field::<u128>(Variant(_20.fld3, 2), 4);
_3 = [Field::<u128>(Variant(_5, 0), 1),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_20.fld3, 2), 4),Field::<u128>(Variant(_5, 0), 1),Field::<u128>(Variant(_5, 0), 1)];
place!(Field::<i32>(Variant(_20.fld3, 2), 3)) = _10.fld1.2;
place!(Field::<[u32; 5]>(Variant(_5, 0), 5)) = [Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0),Field::<u32>(Variant(_5, 0), 0)];
Call(_15 = core::intrinsics::transmute(_16), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_22.0 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_6.1 = !_15;
_10.fld1 = (_11.0, _6.0, _12.3);
place!(Field::<i16>(Variant(_5, 0), 4)) = _6.1 + _15;
_12 = (6409189219671576101_i64, _9, _10.fld1.1, _11.2);
_18 = _11.2;
place!(Field::<*mut u32>(Variant(_5, 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_5, 0), 0)));
_11.2 = _10.fld1.2;
_10.fld1.0 = _3;
_21 = core::ptr::addr_of_mut!(_16);
_10.fld1.1 = _12.2 ^ _12.2;
_6.0 = _10.fld1.1;
_13 = Adt45::Variant1 { fld0: Field::<u128>(Variant(_5, 0), 1) };
Call(_15 = core::intrinsics::transmute(_6.1), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_16 = Field::<f32>(Variant(_5, 1), 1) as u16;
_11.2 = _10.fld1.2;
_10.fld1.1 = _6.0;
_12.2 = _11.1;
_12.2 = _6.0 << _4;
_9 = Field::<f32>(Variant(_5, 1), 1) * _12.1;
_11.2 = !_12.3;
_12 = (7193574104491459084_i64, _8, _10.fld1.1, _10.fld1.2);
_6.0 = _11.1 + _11.1;
_3 = _10.fld1.0;
_10.fld1.1 = false as i128;
_8 = -_12.1;
_3 = _11.0;
place!(Field::<f32>(Variant(_5, 1), 1)) = _4 as f32;
_4 = !17199689126231201483_usize;
_1 = !_7;
place!(Field::<[char; 6]>(Variant(_5, 1), 0)) = ['\u{532b5}','\u{230b0}','\u{cc662}','\u{6828d}','\u{49ac0}','\u{41836}'];
SetDiscriminant(_5, 0);
_17 = _12.0 as i8;
_15 = !_6.1;
place!(Field::<usize>(Variant(_5, 0), 3)) = _4;
_10.fld1.1 = 101_u8 as i128;
place!(Field::<u128>(Variant(_5, 0), 1)) = 145754728709693049435727510118628077832_u128 - 39477238193178399765057723142344651382_u128;
Call(_11.2 = core::intrinsics::bswap(_10.fld1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_12.3 = _11.2 & _10.fld1.2;
_6 = (_11.1, 10986_i16);
_6 = (_12.2, (-12615_i16));
_12.1 = -_8;
_11 = (_10.fld1.0, _10.fld1.1, _10.fld1.2);
_10.fld1.0 = _11.0;
_11.0 = [26421440549496355992656944372362034183_u128,165710357649119710290104322400782117494_u128,183827622842000310306924422785458855588_u128,197038901674444389166422599285230711754_u128,179282567042450878840134837397137337978_u128,166314214758650511550932751137819726151_u128,146567751533154135524749359192265321573_u128];
place!(Field::<i8>(Variant(_5, 1), 3)) = true as i8;
_3 = [251926080057417458076632319733780233698_u128,120964701726796955366780111632834519793_u128,329876325999566151873052498304623216651_u128,213438105874461090088918755207899707827_u128,68060251835935789283317654609562144981_u128,90174189169124322239777765996204980512_u128,201695425498131287208922060735830910623_u128];
_6 = (_11.1, (-23385_i16));
_14 = _7;
_12.0 = Field::<i8>(Variant(_5, 1), 3) as i64;
place!(Field::<f32>(Variant(_5, 1), 1)) = _12.1;
place!(Field::<[char; 6]>(Variant(_5, 1), 0)) = ['\u{f8298}','\u{1acb2}','\u{107656}','\u{8a0ab}','\u{e19a5}','\u{d1b6f}'];
_7 = !_1;
_10.fld1 = (_3, _12.2, _11.2);
_10.fld1.2 = -_12.3;
_10.fld0 = ['\u{10cbaf}','\u{5a3d7}','\u{1645b}'];
_12 = ((-2155598430977518563_i64), _8, _6.0, _10.fld1.2);
_10.fld1.2 = !_12.3;
Goto(bb2)
}
bb12 = {
_24 = _10.fld1.1 == Field::<i128>(Variant(_13, 0), 4);
_28 = 206_u8;
place!(Field::<bool>(Variant(RET, 0), 0)) = _24;
_10.fld1 = (_23, Field::<i128>(Variant(_13, 0), 4), _11.2);
_3 = _10.fld1.0;
place!(Field::<char>(Variant(_13, 0), 1)) = '\u{10ac99}';
place!(Field::<bool>(Variant(RET, 0), 0)) = _24 & _24;
_15 = _6.1;
_9 = _12.1;
_12.2 = -_10.fld1.1;
place!(Field::<char>(Variant(_13, 0), 1)) = '\u{1849a}';
Call(place!(Field::<bool>(Variant(RET, 0), 0)) = fn15(_10.fld1.0, _1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_32 = _10.fld0;
place!(Field::<f32>(Variant(RET, 0), 2)) = -_12.1;
_14 = _1 - _1;
_10.fld1 = (_11.0, _12.2, _18);
Call(_17 = fn18(_24, _22.0, _18, _21, Field::<([i64; 8],)>(Variant(_13, 0), 2)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_36 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
match _12.0 {
0 => bb3,
1 => bb9,
6409189219671576101 => bb16,
_ => bb15
}
}
bb15 = {
_22.0 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_6.1 = !_15;
_10.fld1 = (_11.0, _6.0, _12.3);
place!(Field::<i16>(Variant(_5, 0), 4)) = _6.1 + _15;
_12 = (6409189219671576101_i64, _9, _10.fld1.1, _11.2);
_18 = _11.2;
place!(Field::<*mut u32>(Variant(_5, 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_5, 0), 0)));
_11.2 = _10.fld1.2;
_10.fld1.0 = _3;
_21 = core::ptr::addr_of_mut!(_16);
_10.fld1.1 = _12.2 ^ _12.2;
_6.0 = _10.fld1.1;
_13 = Adt45::Variant1 { fld0: Field::<u128>(Variant(_5, 0), 1) };
Call(_15 = core::intrinsics::transmute(_6.1), ReturnTo(bb4), UnwindUnreachable())
}
bb16 = {
_19 = _28 as f64;
_6.0 = -_10.fld1.1;
_1 = _19 as isize;
Goto(bb17)
}
bb17 = {
_23 = _10.fld1.0;
_15 = _6.1 << _10.fld1.2;
_20.fld2 = !_7;
_10.fld0 = [Field::<char>(Variant(_13, 0), 1),Field::<char>(Variant(_13, 0), 1),Field::<char>(Variant(_13, 0), 1)];
place!(Field::<Adt44>(Variant(RET, 0), 3)) = Adt44::Variant0 { fld0: 4148492355_u32,fld1: 194363566726690649301734375905128386109_u128,fld2: Field::<*mut u32>(Variant(RET, 0), 1),fld3: _4,fld4: _15,fld5: _25 };
place!(Field::<[i64; 8]>(Variant(_13, 0), 0)) = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_12.0 = Field::<usize>(Variant(Field::<Adt44>(Variant(RET, 0), 3), 0), 3) as i64;
place!(Field::<i16>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 4)) = !_15;
_34 = Field::<char>(Variant(_13, 0), 1);
SetDiscriminant(_13, 0);
_27 = !(*_21);
place!(Field::<i32>(Variant(_13, 0), 5)) = !_11.2;
_12.2 = _6.0;
place!(Field::<u128>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 1)) = 296491939222840412305512441477297089459_u128;
_10.fld1.1 = _15 as i128;
place!(Field::<[i64; 8]>(Variant(_13, 0), 0)) = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_22 = (Field::<[i64; 8]>(Variant(_13, 0), 0),);
_7 = _11.2 as isize;
_12.2 = _10.fld1.1;
place!(Field::<[u64; 5]>(Variant(_13, 0), 3)) = [12505147844368919054_u64,16672543253797999973_u64,8380221798761179299_u64,18242297227730402075_u64,6133759495455796106_u64];
place!(Field::<*mut u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 0)));
place!(Field::<i32>(Variant(_13, 0), 5)) = _12.3 >> Field::<usize>(Variant(Field::<Adt44>(Variant(RET, 0), 3), 0), 3);
place!(Field::<i128>(Variant(_13, 0), 4)) = _24 as i128;
_10 = Adt40 { fld0: _32,fld1: _11 };
_13 = Adt45::Variant2 { fld0: _6.0,fld1: _30,fld2: _10.fld1.0,fld3: 5267275794083943788_u64 };
place!(Field::<u32>(Variant(place!(Field::<Adt44>(Variant(RET, 0), 3)), 0), 0)) = !3858783567_u32;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(13_usize, 36_usize, Move(_36), 4_usize, Move(_4), 25_usize, Move(_25), 17_usize, Move(_17)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(13_usize, 15_usize, Move(_15), 30_usize, Move(_30), 3_usize, Move(_3), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(13_usize, 11_usize, Move(_11), 18_usize, Move(_18), 42_usize, _42, 42_usize, _42), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: i128,mut _2: Adt51,mut _3: Adt44) -> i32 {
mir! {
type RET = i32;
let _4: char;
let _5: Adt56;
let _6: usize;
let _7: (bool, char, bool, u16, [u64; 5]);
let _8: u16;
let _9: (i64, f32, i128, i32);
let _10: isize;
let _11: isize;
let _12: ([i64; 8],);
let _13: u64;
let _14: Adt49;
let _15: i8;
let _16: i8;
let _17: [char; 7];
let _18: *const [u64; 5];
let _19: f32;
let _20: Adt50;
let _21: i64;
let _22: f64;
let _23: Adt49;
let _24: u8;
let _25: u128;
let _26: Adt42;
let _27: ();
let _28: ();
{
RET = Field::<i32>(Variant(_2, 2), 3);
Goto(bb1)
}
bb1 = {
place!(Field::<u128>(Variant(_2, 2), 4)) = 31_i8 as u128;
SetDiscriminant(_3, 2);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 3645289445_u32;
RET = !429419298_i32;
place!(Field::<usize>(Variant(_3, 2), 2)) = !7937458900394492150_usize;
RET = 222_u8 as i32;
_4 = '\u{28dce}';
RET = !(-1285290219_i32);
place!(Field::<usize>(Variant(_3, 2), 2)) = !6_usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = false as u32;
place!(Field::<usize>(Variant(_3, 2), 2)) = 6891582912513286338_u64 as usize;
Goto(bb2)
}
bb2 = {
RET = 451573005_i32;
RET = -(-1962656795_i32);
RET = 1502271038_i32;
place!(Field::<usize>(Variant(_3, 2), 2)) = 4_usize + 3_usize;
place!(Field::<i64>(Variant(_3, 2), 0)) = 2653249105192603582_i64 * (-2338602759012972115_i64);
RET = !(-744620048_i32);
RET = 264046899_i32;
Goto(bb3)
}
bb3 = {
place!(Field::<f32>(Variant(_3, 2), 3)) = (-31840_i16) as f32;
place!(Field::<usize>(Variant(_3, 2), 2)) = !747207616304737964_usize;
_5.fld2 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2 & Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_6 = (-46_i8) as usize;
Goto(bb4)
}
bb4 = {
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = Field::<f32>(Variant(_3, 2), 3) as u32;
_7.1 = _4;
_7.2 = !true;
_7.4 = [4011111953800987475_u64,531792294674554937_u64,1433919830290548496_u64,18230627768885780470_u64,9873370647025460808_u64];
_7.3 = 11738_u16 * 30469_u16;
_8 = !_7.3;
Goto(bb5)
}
bb5 = {
_5.fld2 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.3 = _8 | _8;
_5.fld2 = -Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.0 = _7.2;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2 << _5.fld2;
_4 = _7.1;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_7.0 = _7.2;
place!(Field::<usize>(Variant(_3, 2), 2)) = _7.3 as usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _7.3 as u32;
_7.0 = _7.2;
_7.4 = [13002101382164778716_u64,15850697390347502281_u64,17861648082590290633_u64,16240414074503956237_u64,11606346188617647401_u64];
RET = (-967571968_i32);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2;
_8 = !_7.3;
_9.0 = Field::<usize>(Variant(_3, 2), 2) as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<i64>(Variant(_3, 2), 0)) = 128_u8 as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<f32>(Variant(_3, 2), 3)) = Field::<usize>(Variant(_3, 2), 2) as f32;
RET = _1 as i32;
_9.1 = -Field::<f32>(Variant(_3, 2), 3);
place!(Field::<i64>(Variant(_3, 2), 0)) = -_9.0;
Goto(bb6)
}
bb6 = {
_9 = (Field::<i64>(Variant(_3, 2), 0), Field::<f32>(Variant(_3, 2), 3), _1, RET);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 3149976464_u32;
_6 = !Field::<usize>(Variant(_3, 2), 2);
_6 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).0 as usize;
_10 = _4 as isize;
_7.1 = _4;
_11 = !_10;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _7.2 as u32;
_8 = _7.3;
_12.0 = [_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0)];
_13 = 1162831989001947178_u64;
place!(Field::<i64>(Variant(_3, 2), 0)) = _9.0;
_7.2 = _9.1 <= _9.1;
_12.0 = [_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0];
_7.4 = [_13,_13,_13,_13,_13];
match _13 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
1162831989001947178 => bb9,
_ => bb8
}
}
bb7 = {
_5.fld2 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.3 = _8 | _8;
_5.fld2 = -Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.0 = _7.2;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2 << _5.fld2;
_4 = _7.1;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_7.0 = _7.2;
place!(Field::<usize>(Variant(_3, 2), 2)) = _7.3 as usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _7.3 as u32;
_7.0 = _7.2;
_7.4 = [13002101382164778716_u64,15850697390347502281_u64,17861648082590290633_u64,16240414074503956237_u64,11606346188617647401_u64];
RET = (-967571968_i32);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2;
_8 = !_7.3;
_9.0 = Field::<usize>(Variant(_3, 2), 2) as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<i64>(Variant(_3, 2), 0)) = 128_u8 as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<f32>(Variant(_3, 2), 3)) = Field::<usize>(Variant(_3, 2), 2) as f32;
RET = _1 as i32;
_9.1 = -Field::<f32>(Variant(_3, 2), 3);
place!(Field::<i64>(Variant(_3, 2), 0)) = -_9.0;
Goto(bb6)
}
bb8 = {
place!(Field::<u128>(Variant(_2, 2), 4)) = 31_i8 as u128;
SetDiscriminant(_2, 0);
SetDiscriminant(_3, 2);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 3645289445_u32;
RET = !429419298_i32;
place!(Field::<usize>(Variant(_3, 2), 2)) = !7937458900394492150_usize;
RET = 222_u8 as i32;
_4 = '\u{28dce}';
RET = !(-1285290219_i32);
place!(Field::<usize>(Variant(_3, 2), 2)) = !6_usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = false as u32;
place!(Field::<usize>(Variant(_3, 2), 2)) = 6891582912513286338_u64 as usize;
Goto(bb2)
}
bb9 = {
_9.3 = !RET;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6 * _6;
RET = _9.3 ^ _9.3;
_12.0 = [_9.0,_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),Field::<i64>(Variant(_3, 2), 0)];
RET = _9.3;
_12.0 = [_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0];
_8 = !_7.3;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 1222322306_u32;
RET = _9.3 | _9.3;
_15 = 112_i8 ^ (-76_i8);
_4 = _7.1;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _5.fld2 as u32;
_8 = _7.3;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_20.fld1 = _8 & _7.3;
_9.0 = Field::<i64>(Variant(_3, 2), 0);
_7.4 = [_13,_13,_13,_13,_13];
Goto(bb10)
}
bb10 = {
_19 = _9.1;
_20.fld2 = _13 as isize;
_20.fld5 = [_9.0,Field::<i64>(Variant(_3, 2), 0),Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),Field::<i64>(Variant(_3, 2), 0),_9.0];
_1 = _9.2;
_1 = _9.2 ^ _9.2;
place!(Field::<usize>(Variant(_3, 2), 2)) = 26413_i16 as usize;
_17 = [_4,_7.1,_4,_4,_4,_7.1,_7.1];
_9.3 = !RET;
_20.fld4 = Adt45::Variant1 { fld0: 78420259217588449080551727726545545265_u128 };
_18 = core::ptr::addr_of!(_7.4);
_19 = _9.1;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = 8_u8 as isize;
_16 = _15 << _1;
_7.4 = [_13,_13,_13,_13,_13];
match _13 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
1162831989001947178 => bb19,
_ => bb18
}
}
bb11 = {
_9.3 = !RET;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6 * _6;
RET = _9.3 ^ _9.3;
_12.0 = [_9.0,_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),Field::<i64>(Variant(_3, 2), 0)];
RET = _9.3;
_12.0 = [_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0];
_8 = !_7.3;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 1222322306_u32;
RET = _9.3 | _9.3;
_15 = 112_i8 ^ (-76_i8);
_4 = _7.1;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _5.fld2 as u32;
_8 = _7.3;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_20.fld1 = _8 & _7.3;
_9.0 = Field::<i64>(Variant(_3, 2), 0);
_7.4 = [_13,_13,_13,_13,_13];
Goto(bb10)
}
bb12 = {
place!(Field::<u128>(Variant(_2, 2), 4)) = 31_i8 as u128;
SetDiscriminant(_2, 0);
SetDiscriminant(_3, 2);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 3645289445_u32;
RET = !429419298_i32;
place!(Field::<usize>(Variant(_3, 2), 2)) = !7937458900394492150_usize;
RET = 222_u8 as i32;
_4 = '\u{28dce}';
RET = !(-1285290219_i32);
place!(Field::<usize>(Variant(_3, 2), 2)) = !6_usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = false as u32;
place!(Field::<usize>(Variant(_3, 2), 2)) = 6891582912513286338_u64 as usize;
Goto(bb2)
}
bb13 = {
_5.fld2 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.3 = _8 | _8;
_5.fld2 = -Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.0 = _7.2;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2 << _5.fld2;
_4 = _7.1;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_7.0 = _7.2;
place!(Field::<usize>(Variant(_3, 2), 2)) = _7.3 as usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _7.3 as u32;
_7.0 = _7.2;
_7.4 = [13002101382164778716_u64,15850697390347502281_u64,17861648082590290633_u64,16240414074503956237_u64,11606346188617647401_u64];
RET = (-967571968_i32);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2;
_8 = !_7.3;
_9.0 = Field::<usize>(Variant(_3, 2), 2) as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<i64>(Variant(_3, 2), 0)) = 128_u8 as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<f32>(Variant(_3, 2), 3)) = Field::<usize>(Variant(_3, 2), 2) as f32;
RET = _1 as i32;
_9.1 = -Field::<f32>(Variant(_3, 2), 3);
place!(Field::<i64>(Variant(_3, 2), 0)) = -_9.0;
Goto(bb6)
}
bb14 = {
_9 = (Field::<i64>(Variant(_3, 2), 0), Field::<f32>(Variant(_3, 2), 3), _1, RET);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 3149976464_u32;
_6 = !Field::<usize>(Variant(_3, 2), 2);
_6 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).0 as usize;
_10 = _4 as isize;
_7.1 = _4;
_11 = !_10;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _7.2 as u32;
_8 = _7.3;
_12.0 = [_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0)];
_13 = 1162831989001947178_u64;
place!(Field::<i64>(Variant(_3, 2), 0)) = _9.0;
_7.2 = _9.1 <= _9.1;
_12.0 = [_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_9.0];
_7.4 = [_13,_13,_13,_13,_13];
match _13 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
1162831989001947178 => bb9,
_ => bb8
}
}
bb15 = {
_5.fld2 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.3 = _8 | _8;
_5.fld2 = -Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_7.0 = _7.2;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2 << _5.fld2;
_4 = _7.1;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_7.0 = _7.2;
place!(Field::<usize>(Variant(_3, 2), 2)) = _7.3 as usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = _7.3 as u32;
_7.0 = _7.2;
_7.4 = [13002101382164778716_u64,15850697390347502281_u64,17861648082590290633_u64,16240414074503956237_u64,11606346188617647401_u64];
RET = (-967571968_i32);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _5.fld2;
_8 = !_7.3;
_9.0 = Field::<usize>(Variant(_3, 2), 2) as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<i64>(Variant(_3, 2), 0)) = 128_u8 as i64;
_6 = Field::<usize>(Variant(_3, 2), 2);
place!(Field::<f32>(Variant(_3, 2), 3)) = Field::<usize>(Variant(_3, 2), 2) as f32;
RET = _1 as i32;
_9.1 = -Field::<f32>(Variant(_3, 2), 3);
place!(Field::<i64>(Variant(_3, 2), 0)) = -_9.0;
Goto(bb6)
}
bb16 = {
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = Field::<f32>(Variant(_3, 2), 3) as u32;
_7.1 = _4;
_7.2 = !true;
_7.4 = [4011111953800987475_u64,531792294674554937_u64,1433919830290548496_u64,18230627768885780470_u64,9873370647025460808_u64];
_7.3 = 11738_u16 * 30469_u16;
_8 = !_7.3;
Goto(bb5)
}
bb17 = {
place!(Field::<f32>(Variant(_3, 2), 3)) = (-31840_i16) as f32;
place!(Field::<usize>(Variant(_3, 2), 2)) = !747207616304737964_usize;
_5.fld2 = Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2 & Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1).2;
_6 = (-46_i8) as usize;
Goto(bb4)
}
bb18 = {
place!(Field::<u128>(Variant(_2, 2), 4)) = 31_i8 as u128;
SetDiscriminant(_2, 0);
SetDiscriminant(_3, 2);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = 3645289445_u32;
RET = !429419298_i32;
place!(Field::<usize>(Variant(_3, 2), 2)) = !7937458900394492150_usize;
RET = 222_u8 as i32;
_4 = '\u{28dce}';
RET = !(-1285290219_i32);
place!(Field::<usize>(Variant(_3, 2), 2)) = !6_usize;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).0 = false as u32;
place!(Field::<usize>(Variant(_3, 2), 2)) = 6891582912513286338_u64 as usize;
Goto(bb2)
}
bb19 = {
_21 = _9.0;
_15 = -_16;
_18 = core::ptr::addr_of!((*_18));
_24 = RET as u8;
_7.0 = !_7.2;
_9 = (_21, _19, _1, RET);
_22 = _24 as f64;
_10 = _5.fld2;
place!(Field::<usize>(Variant(_3, 2), 2)) = !_6;
place!(Field::<usize>(Variant(_3, 2), 2)) = _6;
_25 = _4 as u128;
_7.1 = _4;
_18 = core::ptr::addr_of!((*_18));
_11 = _10 - _20.fld2;
RET = _9.2 as i32;
_4 = _7.1;
place!(Field::<u128>(Variant(_20.fld4, 1), 0)) = _25 | _25;
_12.0 = [Field::<i64>(Variant(_3, 2), 0),Field::<i64>(Variant(_3, 2), 0),Field::<i64>(Variant(_3, 2), 0),_9.0,_21,Field::<i64>(Variant(_3, 2), 0),_21,_9.0];
_5.fld2 = !_11;
_20.fld4 = Adt45::Variant1 { fld0: _25 };
_15 = -_16;
place!(Field::<(u32, *const [u32; 5], isize)>(Variant(_3, 2), 1)).2 = _10;
place!(Field::<u128>(Variant(_20.fld4, 1), 0)) = !_25;
_9 = (_21, Field::<f32>(Variant(_3, 2), 3), _1, RET);
_9.3 = !RET;
_16 = _15 | _15;
_9.2 = -_1;
_20.fld5 = [Field::<i64>(Variant(_3, 2), 0),_9.0,_9.0,_9.0,Field::<i64>(Variant(_3, 2), 0),_21,_21,Field::<i64>(Variant(_3, 2), 0)];
_24 = 142_u8;
SetDiscriminant(_20.fld4, 2);
Goto(bb20)
}
bb20 = {
Call(_27 = dump_var(14_usize, 16_usize, Move(_16), 21_usize, Move(_21), 15_usize, Move(_15), 25_usize, Move(_25)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_27 = dump_var(14_usize, 7_usize, Move(_7), 1_usize, Move(_1), 10_usize, Move(_10), 28_usize, _28), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [u128; 7],mut _2: isize) -> bool {
mir! {
type RET = bool;
let _3: *mut u32;
let _4: (i128, i16);
let _5: u16;
let _6: i8;
let _7: u32;
let _8: (i128, i16);
let _9: Adt50;
let _10: f32;
let _11: Adt53;
let _12: f64;
let _13: Adt50;
let _14: bool;
let _15: [char; 6];
let _16: [u64; 5];
let _17: [char; 7];
let _18: bool;
let _19: isize;
let _20: Adt44;
let _21: i128;
let _22: char;
let _23: Adt45;
let _24: bool;
let _25: [i64; 6];
let _26: f64;
let _27: *const [u64; 5];
let _28: Adt53;
let _29: [i64; 6];
let _30: (i64, f32, i128, i32);
let _31: char;
let _32: isize;
let _33: Adt47;
let _34: isize;
let _35: i32;
let _36: &'static usize;
let _37: u32;
let _38: (i128, i16);
let _39: Adt53;
let _40: i64;
let _41: ();
let _42: ();
{
_2 = '\u{a67a4}' as isize;
RET = false & true;
RET = !true;
_1 = [176009912343414035759705034065814348337_u128,248146238432063838207522835140830107659_u128,284016033771642948408943071847946292377_u128,228949913696206370620825715244620105507_u128,277040041461105056677600690206783160597_u128,185216035230686090847437569895389223986_u128,194927873193275239068536478821339300263_u128];
RET = true | true;
RET = !false;
RET = !false;
_2 = -(-96_isize);
Goto(bb1)
}
bb1 = {
_1 = [294931834415161031150719991158139949742_u128,20639829290567461316843874634330390932_u128,42751353567718651603431249634809371861_u128,134791221114963843891808215181715740791_u128,238818282611903969711973402682406686500_u128,289576536670886694672964750681498846054_u128,179879381549532959428938902481860647339_u128];
_1 = [47475476430884518053768467322724864390_u128,60753280987364774818151084911215780405_u128,115439224510487332863589452241584574179_u128,73672021689216876703025159070091340606_u128,274436259469571006302340491378702476161_u128,28328663366246961546605352444793499962_u128,223185274489119588020855532856149464429_u128];
RET = _2 < _2;
_2 = RET as isize;
RET = !true;
_4.0 = RET as i128;
_4.0 = -152789728069706744088585547668420724467_i128;
_1 = [136602854914391202314767953472401741798_u128,221249842864924365236142136811019204653_u128,72242959890202829343609736138169081284_u128,216081187305705010017782085773222082963_u128,86489578690092136636894951653385298890_u128,312979893088671486818843723268933083419_u128,235451498726614706516920612363902191064_u128];
_4.0 = 154871055329987958997417018617512896054_i128 << _2;
_4 = (88239824406174268695551271996336919901_i128, 11640_i16);
RET = !false;
_4.0 = 252_u8 as i128;
_1 = [307475293450702086663100281970282801220_u128,135384201967068416196687754999211406854_u128,146359447287353043583589632346574686304_u128,335211939788579240857246159267906946365_u128,228088748964363806509433124083320021937_u128,117558469924978839795735216600253350890_u128,314944381472016143513235943993383057271_u128];
Call(_4.1 = fn16(_2, _1, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = 67_isize << _4.1;
_4.1 = (-7496_i16);
_1 = [233209938133696742232877457875893900840_u128,230912628886696486905497701479516227295_u128,9208373592747837895362314554051987226_u128,111280002651914919404130648301329046406_u128,197325124068476004918137681830590605797_u128,31393685652774246740795652410403689708_u128,19502364224957415609541328713178273752_u128];
_1 = [264569518414513438132820993967986346964_u128,282374444137498525212622474457762607409_u128,316231748762503659480270920122055304780_u128,246589783456794446795359355604512549748_u128,28526363899593286168979961551505888348_u128,239888565868678362714081652101665133932_u128,138212203818325953898164818879982050961_u128];
RET = _2 <= _2;
_1 = [103244706959174525252827803049981482626_u128,312759910543002050743921210544010222464_u128,297378737639648827418952292431225530685_u128,21681396556466974941456174279956641828_u128,276850238077157731679656821957094110266_u128,94745425129171617784162314586307985411_u128,315303234530542140641887133876903329372_u128];
RET = !true;
RET = _4.1 <= _4.1;
_4.1 = 3723175456866630020_i64 as i16;
_8 = (_4.0, _4.1);
_7 = !3610314872_u32;
_8 = (_4.0, _4.1);
_9.fld2 = _2;
_9.fld1 = 26831_u16 + 23286_u16;
_9.fld0 = _2 < _9.fld2;
Goto(bb3)
}
bb3 = {
_8.1 = 10675596827417420513_usize as i16;
_8.1 = _4.1;
_10 = _7 as f32;
_6 = (-110_i8) >> _7;
_8.1 = _4.1;
_8.1 = _9.fld0 as i16;
Goto(bb4)
}
bb4 = {
_4.1 = 4344424353294599990_usize as i16;
_9.fld0 = !RET;
_3 = core::ptr::addr_of_mut!(_7);
_8.0 = _4.0 * _4.0;
_8 = (_4.0, _4.1);
_9.fld1 = !28430_u16;
_13.fld2 = 214_u8 as isize;
_13.fld3 = !14824897689213171261_u64;
_6 = _7 as i8;
_12 = 255_u8 as f64;
_9.fld3 = _9.fld0 as u64;
_3 = core::ptr::addr_of_mut!((*_3));
_6 = 8_i8 ^ 2_i8;
_4.1 = _8.0 as i16;
_13.fld3 = _9.fld3;
_9.fld2 = _13.fld2 | _13.fld2;
Goto(bb5)
}
bb5 = {
_4.1 = _8.1 - _8.1;
_14 = _9.fld0;
_9.fld2 = _2;
_17 = ['\u{e4ade}','\u{d025e}','\u{50f72}','\u{33156}','\u{6a3ee}','\u{e454c}','\u{fc41a}'];
_13.fld5 = [9099605134704750761_i64,1028793565241290600_i64,(-4424880260392514842_i64),7311354022436633966_i64,8836244111440361995_i64,(-2016697767525636849_i64),(-8612234914609135480_i64),(-4686351990880393752_i64)];
_4 = _8;
_17 = ['\u{afe58}','\u{66ed}','\u{c93c3}','\u{708b8}','\u{12e96}','\u{f66ee}','\u{92b5f}'];
_13.fld2 = _10 as isize;
_6 = !120_i8;
_13.fld1 = _9.fld1;
_9.fld2 = _4.0 as isize;
_5 = _2 as u16;
_7 = 2455111707_u32;
_13.fld0 = _8.1 == _4.1;
RET = !_14;
_8.1 = _4.1;
Goto(bb6)
}
bb6 = {
_13.fld1 = _5 * _5;
_13.fld5 = [4854057187202267154_i64,(-1173362502150601158_i64),(-5283770381832512036_i64),(-4557052665653442605_i64),3580498891995502871_i64,(-5065740419614195203_i64),3474381852362706635_i64,3710214254514439387_i64];
_19 = _2 | _2;
_18 = !_9.fld0;
_5 = _13.fld1 * _13.fld1;
_9.fld2 = _13.fld2;
_13.fld3 = (*_3) as u64;
_7 = !1447744449_u32;
_16 = [_13.fld3,_9.fld3,_13.fld3,_13.fld3,_9.fld3];
_13.fld1 = _5;
_13.fld3 = !_9.fld3;
_9.fld4 = Adt45::Variant1 { fld0: 6075754830741543909681037222340250765_u128 };
_8.0 = -_4.0;
_21 = !_4.0;
_9.fld5 = [5584098783955404051_i64,3040988783243392966_i64,7984213431120101151_i64,(-1474928516022843502_i64),609774796576547547_i64,(-8395450586431503472_i64),(-4959089027993641961_i64),(-8300071597836704366_i64)];
_4.1 = _8.1;
_16 = [_9.fld3,_13.fld3,_13.fld3,_9.fld3,_9.fld3];
Goto(bb7)
}
bb7 = {
_17 = ['\u{5ad32}','\u{9197}','\u{ef2a5}','\u{f0c22}','\u{f9a3a}','\u{2ece7}','\u{5487d}'];
_9.fld5 = _13.fld5;
_23 = Adt45::Variant2 { fld0: _8.0,fld1: _16,fld2: _1,fld3: _9.fld3 };
_13.fld0 = _9.fld2 != _19;
_9.fld1 = _5;
_9.fld4 = _23;
_9.fld1 = _13.fld1;
_9.fld4 = _23;
_15 = ['\u{3691f}','\u{7db67}','\u{8d5a1}','\u{d024d}','\u{c7bc}','\u{52bf7}'];
_13.fld5 = [(-1267122216952161304_i64),6946491806915116857_i64,7195195497675429504_i64,5252259455891922854_i64,(-5753583297524365940_i64),(-3400756334445300786_i64),2241907362844815604_i64,(-4436405188444545369_i64)];
place!(Field::<[u64; 5]>(Variant(_9.fld4, 2), 1)) = Field::<[u64; 5]>(Variant(_23, 2), 1);
_21 = Field::<i128>(Variant(_23, 2), 0) ^ _4.0;
place!(Field::<[u64; 5]>(Variant(_23, 2), 1)) = _16;
_9.fld5 = [(-906810909524821107_i64),2893966026877509357_i64,(-1985236326588187789_i64),(-1213113500794949974_i64),5909901026910763890_i64,(-2400668929204795173_i64),(-3753258953434415032_i64),(-8506622111830797231_i64)];
_4.1 = !_8.1;
_23 = Adt45::Variant1 { fld0: 80098618009129626724224055247673485356_u128 };
_23 = _9.fld4;
_3 = core::ptr::addr_of_mut!((*_3));
SetDiscriminant(_23, 2);
place!(Field::<u64>(Variant(_23, 2), 3)) = _13.fld3;
_26 = _8.0 as f64;
_25 = [(-5866452986845931369_i64),(-5137199706749113378_i64),(-5770657184828953965_i64),(-583970279802864061_i64),9141615695852712077_i64,(-648803320824352020_i64)];
_22 = '\u{c20c2}';
_19 = _13.fld2 | _2;
place!(Field::<[u128; 7]>(Variant(_23, 2), 2)) = [257115026524494440631448229877934118885_u128,283081202112700104647500550003839766873_u128,184787454211735877864998796443756762872_u128,329690169816181960876977054640438711948_u128,56808997219003532139655772360770818627_u128,90658017047117086863093561871434709614_u128,51300288882888954489247744741001787010_u128];
_24 = !RET;
_9.fld1 = _2 as u16;
Goto(bb8)
}
bb8 = {
_1 = Field::<[u128; 7]>(Variant(_23, 2), 2);
_10 = _21 as f32;
place!(Field::<i32>(Variant(_9.fld4, 0), 5)) = -(-1651757327_i32);
place!(Field::<[u64; 5]>(Variant(_9.fld4, 0), 3)) = [Field::<u64>(Variant(_23, 2), 3),_13.fld3,_9.fld3,_13.fld3,_13.fld3];
_5 = _9.fld1;
_17 = [_22,_22,_22,_22,_22,_22,_22];
place!(Field::<([i64; 8],)>(Variant(_9.fld4, 0), 2)).0 = [(-6117012369009855246_i64),8828785498833001981_i64,(-3259529238204864661_i64),5511065949325932191_i64,(-1187493080347796574_i64),9054992542714413538_i64,8879697672890177160_i64,7822993589831961956_i64];
_17 = [_22,_22,_22,_22,_22,_22,_22];
place!(Field::<[u128; 7]>(Variant(_23, 2), 2)) = [186522583476646979429820329195555563364_u128,148285400310037979580867620303045167149_u128,255413458333867835943053496452011661406_u128,181381418540525697340781381008864499191_u128,273406062060781924121634799522920253906_u128,99807685661015849002354571528962827710_u128,104472880023334840765763423108724537992_u128];
_3 = core::ptr::addr_of_mut!((*_3));
_3 = core::ptr::addr_of_mut!((*_3));
_6 = 104_u8 as i8;
place!(Field::<i32>(Variant(_9.fld4, 0), 5)) = !1787552440_i32;
_10 = _9.fld3 as f32;
_14 = _18 > _9.fld0;
_14 = _24;
_23 = Adt45::Variant2 { fld0: _21,fld1: _16,fld2: _1,fld3: _9.fld3 };
_27 = core::ptr::addr_of!(place!(Field::<[u64; 5]>(Variant(_23, 2), 1)));
place!(Field::<u64>(Variant(_23, 2), 3)) = _4.0 as u64;
_12 = _26 - _26;
_3 = core::ptr::addr_of_mut!((*_3));
_13.fld1 = !_5;
place!(Field::<[u128; 7]>(Variant(_23, 2), 2)) = [108732524695123119117103208670425397490_u128,26262246177363088566615469263745032702_u128,53812859911661812356742376810931764391_u128,42777878700276072295483865373961302670_u128,328618472527996582419738125071517054352_u128,293693886299110876241865880451140665804_u128,320671359340664322153425879242571226666_u128];
_13 = Adt50 { fld0: _14,fld1: _5,fld2: _2,fld3: Field::<u64>(Variant(_23, 2), 3),fld4: _23,fld5: _9.fld5 };
Goto(bb9)
}
bb9 = {
_9.fld5 = [969803007182924056_i64,(-8504289635252215197_i64),(-4570582467457648174_i64),(-7230827286674087479_i64),4177103003036163698_i64,868712223141829534_i64,7175089947522737334_i64,6532013970968992211_i64];
_24 = !_13.fld0;
place!(Field::<[i64; 8]>(Variant(_9.fld4, 0), 0)) = [3969091693687550603_i64,8087294951892829935_i64,(-419051770653501062_i64),(-1531243283060055970_i64),4781785542918343441_i64,6061215935467142964_i64,8286482371842693849_i64,1012010879288966812_i64];
_2 = -_9.fld2;
_13.fld3 = !Field::<u64>(Variant(_23, 2), 3);
_31 = _22;
place!(Field::<[u64; 5]>(Variant(_13.fld4, 2), 1)) = [Field::<u64>(Variant(_13.fld4, 2), 3),_9.fld3,Field::<u64>(Variant(_13.fld4, 2), 3),_9.fld3,Field::<u64>(Variant(_13.fld4, 2), 3)];
_9 = Adt50 { fld0: _24,fld1: _13.fld1,fld2: _13.fld2,fld3: _13.fld3,fld4: _23,fld5: _13.fld5 };
place!(Field::<[u64; 5]>(Variant(_9.fld4, 2), 1)) = Field::<[u64; 5]>(Variant(_13.fld4, 2), 1);
place!(Field::<[u128; 7]>(Variant(_13.fld4, 2), 2)) = [67884285443227158551965564960216762727_u128,321600943154366503749570293854001242431_u128,240215920606182178414736464757714990619_u128,59566312518814537691613750730743542179_u128,43548844920151993611974802693712163821_u128,86286174184915668670621723694179172422_u128,166823550851771026307234784987318190045_u128];
_9.fld3 = !_13.fld3;
_30.1 = -_10;
place!(Field::<u64>(Variant(_13.fld4, 2), 3)) = Field::<u64>(Variant(_9.fld4, 2), 3);
_2 = !_19;
_15 = [_31,_22,_22,_22,_22,_22];
_7 = !4274028236_u32;
_9 = _13;
_2 = -_19;
RET = _24 & _24;
_30.2 = _4.0;
_13.fld0 = _24;
_17 = [_31,_22,_31,_22,_31,_31,_22];
_30 = (5632987757317895580_i64, _10, Field::<i128>(Variant(_23, 2), 0), (-214261449_i32));
_7 = 2407928119_u32 * 1157230357_u32;
_32 = _9.fld2 ^ _19;
place!(Field::<[u128; 7]>(Variant(_13.fld4, 2), 2)) = [149945502002733855430108611959455428789_u128,303882123711558364003349389763542116791_u128,66280233173803646952559952306960154527_u128,328662671812011576903708681350470073794_u128,28698934218550289094208889611109547771_u128,69284790453948494533350589771376602461_u128,78392365299787559005549018945569412420_u128];
match _30.0 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb7,
4 => bb10,
5 => bb11,
5632987757317895580 => bb13,
_ => bb12
}
}
bb10 = {
_1 = [294931834415161031150719991158139949742_u128,20639829290567461316843874634330390932_u128,42751353567718651603431249634809371861_u128,134791221114963843891808215181715740791_u128,238818282611903969711973402682406686500_u128,289576536670886694672964750681498846054_u128,179879381549532959428938902481860647339_u128];
_1 = [47475476430884518053768467322724864390_u128,60753280987364774818151084911215780405_u128,115439224510487332863589452241584574179_u128,73672021689216876703025159070091340606_u128,274436259469571006302340491378702476161_u128,28328663366246961546605352444793499962_u128,223185274489119588020855532856149464429_u128];
RET = _2 < _2;
_2 = RET as isize;
RET = !true;
_4.0 = RET as i128;
_4.0 = -152789728069706744088585547668420724467_i128;
_1 = [136602854914391202314767953472401741798_u128,221249842864924365236142136811019204653_u128,72242959890202829343609736138169081284_u128,216081187305705010017782085773222082963_u128,86489578690092136636894951653385298890_u128,312979893088671486818843723268933083419_u128,235451498726614706516920612363902191064_u128];
_4.0 = 154871055329987958997417018617512896054_i128 << _2;
_4 = (88239824406174268695551271996336919901_i128, 11640_i16);
RET = !false;
_4.0 = 252_u8 as i128;
_1 = [307475293450702086663100281970282801220_u128,135384201967068416196687754999211406854_u128,146359447287353043583589632346574686304_u128,335211939788579240857246159267906946365_u128,228088748964363806509433124083320021937_u128,117558469924978839795735216600253350890_u128,314944381472016143513235943993383057271_u128];
Call(_4.1 = fn16(_2, _1, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_17 = ['\u{5ad32}','\u{9197}','\u{ef2a5}','\u{f0c22}','\u{f9a3a}','\u{2ece7}','\u{5487d}'];
_9.fld5 = _13.fld5;
_23 = Adt45::Variant2 { fld0: _8.0,fld1: _16,fld2: _1,fld3: _9.fld3 };
_13.fld0 = _9.fld2 != _19;
_9.fld1 = _5;
_9.fld4 = _23;
_9.fld1 = _13.fld1;
_9.fld4 = _23;
_15 = ['\u{3691f}','\u{7db67}','\u{8d5a1}','\u{d024d}','\u{c7bc}','\u{52bf7}'];
_13.fld5 = [(-1267122216952161304_i64),6946491806915116857_i64,7195195497675429504_i64,5252259455891922854_i64,(-5753583297524365940_i64),(-3400756334445300786_i64),2241907362844815604_i64,(-4436405188444545369_i64)];
place!(Field::<[u64; 5]>(Variant(_9.fld4, 2), 1)) = Field::<[u64; 5]>(Variant(_23, 2), 1);
_21 = Field::<i128>(Variant(_23, 2), 0) ^ _4.0;
place!(Field::<[u64; 5]>(Variant(_23, 2), 1)) = _16;
_9.fld5 = [(-906810909524821107_i64),2893966026877509357_i64,(-1985236326588187789_i64),(-1213113500794949974_i64),5909901026910763890_i64,(-2400668929204795173_i64),(-3753258953434415032_i64),(-8506622111830797231_i64)];
_4.1 = !_8.1;
_23 = Adt45::Variant1 { fld0: 80098618009129626724224055247673485356_u128 };
_23 = _9.fld4;
_3 = core::ptr::addr_of_mut!((*_3));
SetDiscriminant(_9.fld4, 0);
SetDiscriminant(_23, 2);
place!(Field::<u64>(Variant(_23, 2), 3)) = _13.fld3;
_26 = _8.0 as f64;
_25 = [(-5866452986845931369_i64),(-5137199706749113378_i64),(-5770657184828953965_i64),(-583970279802864061_i64),9141615695852712077_i64,(-648803320824352020_i64)];
_22 = '\u{c20c2}';
_19 = _13.fld2 | _2;
place!(Field::<[u128; 7]>(Variant(_23, 2), 2)) = [257115026524494440631448229877934118885_u128,283081202112700104647500550003839766873_u128,184787454211735877864998796443756762872_u128,329690169816181960876977054640438711948_u128,56808997219003532139655772360770818627_u128,90658017047117086863093561871434709614_u128,51300288882888954489247744741001787010_u128];
_24 = !RET;
_9.fld1 = _2 as u16;
Goto(bb8)
}
bb12 = {
_2 = 67_isize << _4.1;
_4.1 = (-7496_i16);
_1 = [233209938133696742232877457875893900840_u128,230912628886696486905497701479516227295_u128,9208373592747837895362314554051987226_u128,111280002651914919404130648301329046406_u128,197325124068476004918137681830590605797_u128,31393685652774246740795652410403689708_u128,19502364224957415609541328713178273752_u128];
_1 = [264569518414513438132820993967986346964_u128,282374444137498525212622474457762607409_u128,316231748762503659480270920122055304780_u128,246589783456794446795359355604512549748_u128,28526363899593286168979961551505888348_u128,239888565868678362714081652101665133932_u128,138212203818325953898164818879982050961_u128];
RET = _2 <= _2;
_1 = [103244706959174525252827803049981482626_u128,312759910543002050743921210544010222464_u128,297378737639648827418952292431225530685_u128,21681396556466974941456174279956641828_u128,276850238077157731679656821957094110266_u128,94745425129171617784162314586307985411_u128,315303234530542140641887133876903329372_u128];
RET = !true;
RET = _4.1 <= _4.1;
_4.1 = 3723175456866630020_i64 as i16;
_8 = (_4.0, _4.1);
_7 = !3610314872_u32;
_8 = (_4.0, _4.1);
_9.fld2 = _2;
_9.fld1 = 26831_u16 + 23286_u16;
_9.fld0 = _2 < _9.fld2;
Goto(bb3)
}
bb13 = {
_4.0 = Field::<i128>(Variant(_13.fld4, 2), 0) - Field::<i128>(Variant(_23, 2), 0);
_19 = _2 + _2;
_13 = Adt50 { fld0: _24,fld1: _5,fld2: _19,fld3: Field::<u64>(Variant(_9.fld4, 2), 3),fld4: _23,fld5: _9.fld5 };
Goto(bb14)
}
bb14 = {
_9.fld2 = !_19;
_4.0 = _30.2 * _30.2;
_13.fld3 = Field::<u64>(Variant(_13.fld4, 2), 3) & Field::<u64>(Variant(_9.fld4, 2), 3);
place!(Field::<i128>(Variant(_9.fld4, 2), 0)) = Field::<i128>(Variant(_23, 2), 0) - _4.0;
_13.fld4 = Adt45::Variant2 { fld0: _21,fld1: (*_27),fld2: Field::<[u128; 7]>(Variant(_9.fld4, 2), 2),fld3: Field::<u64>(Variant(_23, 2), 3) };
place!(Field::<i128>(Variant(_23, 2), 0)) = _30.2;
_23 = Adt45::Variant2 { fld0: _4.0,fld1: Field::<[u64; 5]>(Variant(_13.fld4, 2), 1),fld2: Field::<[u128; 7]>(Variant(_9.fld4, 2), 2),fld3: Field::<u64>(Variant(_9.fld4, 2), 3) };
_37 = 26_u8 as u32;
_4.1 = _8.1;
_19 = _9.fld2;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(15_usize, 16_usize, Move(_16), 19_usize, Move(_19), 6_usize, Move(_6), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(15_usize, 1_usize, Move(_1), 32_usize, Move(_32), 7_usize, Move(_7), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(15_usize, 25_usize, Move(_25), 37_usize, Move(_37), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: isize,mut _2: [u128; 7],mut _3: [u128; 7],mut _4: isize,mut _5: [u128; 7]) -> i16 {
mir! {
type RET = i16;
let _6: [char; 3];
let _7: char;
let _8: i32;
let _9: f32;
let _10: [char; 6];
let _11: Adt49;
let _12: f32;
let _13: i8;
let _14: i128;
let _15: [char; 6];
let _16: u64;
let _17: u8;
let _18: bool;
let _19: [u32; 5];
let _20: u64;
let _21: f64;
let _22: (i64, f32, i128, i32);
let _23: bool;
let _24: isize;
let _25: f64;
let _26: usize;
let _27: u64;
let _28: [u128; 7];
let _29: bool;
let _30: Adt45;
let _31: i128;
let _32: ([u128; 7], i128, i32);
let _33: u64;
let _34: [u128; 7];
let _35: ();
let _36: ();
{
_1 = _4;
RET = -3486_i16;
_2 = _3;
RET = (-6005_i16) - (-2221_i16);
RET = !19558_i16;
RET = !(-24741_i16);
_7 = '\u{7db07}';
_1 = _4;
_2 = [182517061473400435809456281906883206476_u128,279942440996755609141800772564205407162_u128,203668557611292466409694388116379542709_u128,52545760631469377087095980207884166104_u128,307735130892098309482540980886115031490_u128,53760842510343026099858520993191888644_u128,228430335429354443454025642654939572856_u128];
_2 = [192358905363825852927589135569457194076_u128,44120202308767187241210281409558411379_u128,311574421800745690115247945466334187737_u128,201562581402811879982345688970179674937_u128,85903682102366463354533369298707788860_u128,165300432737043908812183401962875856884_u128,118857343993626250131988159842931534963_u128];
_3 = [269632674328326822909799294790601979274_u128,329682134124588376755980571878510245160_u128,337672210127276017461812810381207172485_u128,28385807899348217217959683729152221537_u128,95104374107025869273843601119144062576_u128,80097663461216979546708710821588915198_u128,1850756738985679049760749016411697156_u128];
_2 = [238041062366959618511572050502193021300_u128,200287696360304869249217188419926242667_u128,222726644455487233208737732591794066777_u128,232974273497672366868194364202729786538_u128,68693381095666222345516547102796489471_u128,147786560446866803086675995925505616506_u128,32043752575449953203641914131798377760_u128];
_6 = [_7,_7,_7];
_6 = [_7,_7,_7];
_5 = _3;
_3 = _2;
_1 = !_4;
_8 = -(-1927056215_i32);
_2 = [90377411455628850207855438349778402036_u128,159322441656561544699683771101667342720_u128,73884219141432937803048003012053881229_u128,161460931006798602609389404689655421782_u128,116611599725453718486893914033542413716_u128,135075374799203349833189909653325630451_u128,10224330706568928533902208919241754895_u128];
_6 = [_7,_7,_7];
_6 = [_7,_7,_7];
RET = 127_i8 as i16;
Goto(bb1)
}
bb1 = {
_12 = 183_u8 as f32;
_4 = _1 & _1;
_9 = _12;
_2 = [181647086973410928556208951392006409461_u128,297123996916072456129403160362586872380_u128,270274066382605622956182006495121595452_u128,93637862182703087946372112475021300547_u128,258280319007135197774792211534539440931_u128,125875348950102693825248375971156782238_u128,161459466828953703205775176435545709439_u128];
_10 = [_7,_7,_7,_7,_7,_7];
_6 = [_7,_7,_7];
_3 = [160939350692011930949761038425486734231_u128,110356931472337017402174827353710940705_u128,308783080158342256325737699855084731677_u128,179324993357942854928725025069699252825_u128,109888843551228756615892088103696347290_u128,338960354152922813688128547656639760616_u128,41447408592108981025733950405584954542_u128];
_15 = _10;
RET = 2949_i16;
_1 = -_4;
_19 = [1952535776_u32,439987908_u32,3002191825_u32,1585209132_u32,4157992470_u32];
_13 = !47_i8;
Call(_1 = fn17(_8, _19, _4, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = _13 as i16;
_9 = -_12;
_12 = _9 * _9;
RET = !(-8387_i16);
RET = -603_i16;
_17 = 112_u8 - 143_u8;
_19 = [1792846883_u32,477055666_u32,1093842538_u32,1646497290_u32,3721555952_u32];
RET = _9 as i16;
_16 = 326659982028392933805746848243783312680_u128 as u64;
_10 = _15;
_4 = -_1;
_18 = !true;
_17 = 24_u8 | 63_u8;
Goto(bb3)
}
bb3 = {
_22.0 = 2537162034644836191_i64 >> _13;
_21 = 3_usize as f64;
_1 = _4 << _16;
_18 = !true;
_21 = _17 as f64;
_22.0 = RET as i64;
_6 = [_7,_7,_7];
_14 = (-116557882014838627118858213393686465005_i128);
_22.2 = _16 as i128;
_23 = _18 ^ _18;
_22.2 = 1609381975_u32 as i128;
_23 = !_18;
Goto(bb4)
}
bb4 = {
_7 = '\u{2af84}';
Goto(bb5)
}
bb5 = {
_16 = _8 as u64;
_3 = [89346062333834981384857384876852294538_u128,211753538947404794066385001212299207059_u128,259942407392307584016051697198321108949_u128,45961977000447013162028287116000812521_u128,237109466869296411304401195477281853243_u128,79024344671611391871553446688987574463_u128,155138472695907358848985662351254318024_u128];
_21 = _17 as f64;
_20 = !_16;
_3 = [138954958518276762210664102069239284056_u128,259032912648788331878862723929729730857_u128,67263920179887847367872158577392882140_u128,147846447249133541234526836121915342679_u128,161131516697759918717190935689181615190_u128,118723019508625791456972388274617465482_u128,34697316326807897663488974107991519147_u128];
_22.1 = -_12;
_23 = _18;
_3 = _2;
_21 = _22.1 as f64;
_16 = !_20;
_20 = _16 << _13;
_20 = _16 * _16;
_3 = [204586189159896802990813282229610950786_u128,292225918840991590816673307442577788441_u128,183764369454027199213984658488361331189_u128,80762974009729424460186365008126691197_u128,241680239971079478838766776850003986795_u128,223339441699756335409099254577880957154_u128,230416665156531367610470220953035597688_u128];
RET = !117_i16;
_12 = -_22.1;
_22.1 = _9 + _9;
_23 = _18;
_12 = _22.1 + _22.1;
_10 = [_7,_7,_7,_7,_7,_7];
_12 = _17 as f32;
_22.2 = _14;
match _14 {
0 => bb4,
223724484906099836344516394038081746451 => bb6,
_ => bb3
}
}
bb6 = {
_22 = (7836136665054811354_i64, _12, _14, _8);
_22.0 = (-8367230520649571909_i64) | (-8563185772299464833_i64);
Call(_25 = core::intrinsics::fmaf64(_21, _21, _21), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_8 = _22.3;
_22.2 = -_14;
_13 = 46363_u16 as i8;
_1 = _4 * _4;
_10 = [_7,_7,_7,_7,_7,_7];
_22.3 = _8 & _8;
_24 = _1;
_2 = _5;
_22.2 = 2450641431_u32 as i128;
_6 = [_7,_7,_7];
_15 = [_7,_7,_7,_7,_7,_7];
_6 = [_7,_7,_7];
_8 = _22.3;
_18 = !_23;
_2 = [313013813362688189387230224348348727492_u128,337339657295855332551150749259500175572_u128,336443336375533837674017666860330767316_u128,338324007186498817577864024600769240648_u128,330994551976832525604300259818795284741_u128,142007833062963270292600857107635722597_u128,287424181303956841241021977457887479062_u128];
_23 = _18 ^ _18;
_22.1 = _9;
_13 = 6991471351819484703_usize as i8;
_13 = 23_i8 - (-82_i8);
_22.3 = _8 >> _8;
_18 = _23;
_18 = _23;
_9 = 13088_u16 as f32;
_1 = 32849_u16 as isize;
_22.1 = _12;
Call(_27 = core::intrinsics::bswap(_16), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_29 = !_23;
_28 = _2;
RET = (-5874_i16);
_22.1 = -_9;
_19 = [1709661154_u32,442116966_u32,2255512729_u32,1471937573_u32,636029467_u32];
_31 = !_22.2;
_29 = _23;
_26 = 8889070229652953985_usize - 9190914196055588733_usize;
_22.1 = _9 + _12;
_32 = (_5, _31, _8);
match _14 {
0 => bb3,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
223724484906099836344516394038081746451 => bb14,
_ => bb13
}
}
bb9 = {
_8 = _22.3;
_22.2 = -_14;
_13 = 46363_u16 as i8;
_1 = _4 * _4;
_10 = [_7,_7,_7,_7,_7,_7];
_22.3 = _8 & _8;
_24 = _1;
_2 = _5;
_22.2 = 2450641431_u32 as i128;
_6 = [_7,_7,_7];
_15 = [_7,_7,_7,_7,_7,_7];
_6 = [_7,_7,_7];
_8 = _22.3;
_18 = !_23;
_2 = [313013813362688189387230224348348727492_u128,337339657295855332551150749259500175572_u128,336443336375533837674017666860330767316_u128,338324007186498817577864024600769240648_u128,330994551976832525604300259818795284741_u128,142007833062963270292600857107635722597_u128,287424181303956841241021977457887479062_u128];
_23 = _18 ^ _18;
_22.1 = _9;
_13 = 6991471351819484703_usize as i8;
_13 = 23_i8 - (-82_i8);
_22.3 = _8 >> _8;
_18 = _23;
_18 = _23;
_9 = 13088_u16 as f32;
_1 = 32849_u16 as isize;
_22.1 = _12;
Call(_27 = core::intrinsics::bswap(_16), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_22 = (7836136665054811354_i64, _12, _14, _8);
_22.0 = (-8367230520649571909_i64) | (-8563185772299464833_i64);
Call(_25 = core::intrinsics::fmaf64(_21, _21, _21), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_16 = _8 as u64;
_3 = [89346062333834981384857384876852294538_u128,211753538947404794066385001212299207059_u128,259942407392307584016051697198321108949_u128,45961977000447013162028287116000812521_u128,237109466869296411304401195477281853243_u128,79024344671611391871553446688987574463_u128,155138472695907358848985662351254318024_u128];
_21 = _17 as f64;
_20 = !_16;
_3 = [138954958518276762210664102069239284056_u128,259032912648788331878862723929729730857_u128,67263920179887847367872158577392882140_u128,147846447249133541234526836121915342679_u128,161131516697759918717190935689181615190_u128,118723019508625791456972388274617465482_u128,34697316326807897663488974107991519147_u128];
_22.1 = -_12;
_23 = _18;
_3 = _2;
_21 = _22.1 as f64;
_16 = !_20;
_20 = _16 << _13;
_20 = _16 * _16;
_3 = [204586189159896802990813282229610950786_u128,292225918840991590816673307442577788441_u128,183764369454027199213984658488361331189_u128,80762974009729424460186365008126691197_u128,241680239971079478838766776850003986795_u128,223339441699756335409099254577880957154_u128,230416665156531367610470220953035597688_u128];
RET = !117_i16;
_12 = -_22.1;
_22.1 = _9 + _9;
_23 = _18;
_12 = _22.1 + _22.1;
_10 = [_7,_7,_7,_7,_7,_7];
_12 = _17 as f32;
_22.2 = _14;
match _14 {
0 => bb4,
223724484906099836344516394038081746451 => bb6,
_ => bb3
}
}
bb12 = {
_12 = 183_u8 as f32;
_4 = _1 & _1;
_9 = _12;
_2 = [181647086973410928556208951392006409461_u128,297123996916072456129403160362586872380_u128,270274066382605622956182006495121595452_u128,93637862182703087946372112475021300547_u128,258280319007135197774792211534539440931_u128,125875348950102693825248375971156782238_u128,161459466828953703205775176435545709439_u128];
_10 = [_7,_7,_7,_7,_7,_7];
_6 = [_7,_7,_7];
_3 = [160939350692011930949761038425486734231_u128,110356931472337017402174827353710940705_u128,308783080158342256325737699855084731677_u128,179324993357942854928725025069699252825_u128,109888843551228756615892088103696347290_u128,338960354152922813688128547656639760616_u128,41447408592108981025733950405584954542_u128];
_15 = _10;
RET = 2949_i16;
_1 = -_4;
_19 = [1952535776_u32,439987908_u32,3002191825_u32,1585209132_u32,4157992470_u32];
_13 = !47_i8;
Call(_1 = fn17(_8, _19, _4, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
RET = _13 as i16;
_9 = -_12;
_12 = _9 * _9;
RET = !(-8387_i16);
RET = -603_i16;
_17 = 112_u8 - 143_u8;
_19 = [1792846883_u32,477055666_u32,1093842538_u32,1646497290_u32,3721555952_u32];
RET = _9 as i16;
_16 = 326659982028392933805746848243783312680_u128 as u64;
_10 = _15;
_4 = -_1;
_18 = !true;
_17 = 24_u8 | 63_u8;
Goto(bb3)
}
bb14 = {
_13 = (-18_i8);
_22.3 = _7 as i32;
_10 = [_7,_7,_7,_7,_7,_7];
_25 = _21 - _21;
_24 = _4;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(16_usize, 17_usize, Move(_17), 8_usize, Move(_8), 13_usize, Move(_13), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(16_usize, 1_usize, Move(_1), 31_usize, Move(_31), 27_usize, Move(_27), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(16_usize, 28_usize, Move(_28), 18_usize, Move(_18), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i32,mut _2: [u32; 5],mut _3: isize,mut _4: [u128; 7]) -> isize {
mir! {
type RET = isize;
let _5: f64;
let _6: Adt56;
let _7: bool;
let _8: isize;
let _9: f64;
let _10: (u64,);
let _11: f64;
let _12: Adt44;
let _13: [char; 3];
let _14: bool;
let _15: isize;
let _16: [char; 7];
let _17: u8;
let _18: *mut i8;
let _19: f64;
let _20: *const [u32; 5];
let _21: u8;
let _22: (u64,);
let _23: Adt48;
let _24: Adt43;
let _25: *mut i8;
let _26: Adt46;
let _27: f32;
let _28: (i64, f32, i128, i32);
let _29: (u32, *const [u32; 5], isize);
let _30: [u64; 5];
let _31: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16));
let _32: (i64, f32, i128, i32);
let _33: Adt47;
let _34: isize;
let _35: char;
let _36: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16));
let _37: ();
let _38: ();
{
_4 = [321538922272392818662361354947686310216_u128,201512961785533995313855283981246786092_u128,227349735686480653353279752489092616903_u128,36122635114934464057302386767308855121_u128,232990335775902299610126748437950425238_u128,139328555204938422587460973498124992656_u128,217593941608168243218334086636981680231_u128];
RET = -_3;
_6.fld2 = 6343659742064431317_usize as isize;
Goto(bb1)
}
bb1 = {
_1 = !1702950970_i32;
RET = _3;
_3 = 38030_u16 as isize;
_10.0 = 14913471201499117750_u64;
_4 = [89943985363125372592348259902593014494_u128,119030759363998748527014467672188358504_u128,176128860038192704120450650488699221717_u128,123334809754182218519519117687714780139_u128,310356419973107287330359740413068034789_u128,241553692226845753688531654041968040358_u128,246348713060203486205292244055915402847_u128];
_2 = [4027755925_u32,3594899107_u32,3904927073_u32,2630655641_u32,3947863874_u32];
_5 = (-8887272367265581845_i64) as f64;
_9 = -_5;
_7 = _6.fld2 == RET;
_9 = _5;
_8 = _3;
_5 = -_9;
match _10.0 {
0 => bb2,
1 => bb3,
2 => bb4,
14913471201499117750 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_5 = (-15123_i16) as f64;
_10 = (6527688800202417226_u64,);
_4 = [204052000921384307897350686603042032368_u128,322643569018650265305821924011561568739_u128,159062024913426231524149594778799702036_u128,173055645434297374960312321796104162229_u128,196096888598347799518169022551123917624_u128,221115297154955911058995701033397329106_u128,76191313954524622611669720006992248707_u128];
_10.0 = 5443467318999212205_u64 << RET;
_13 = ['\u{b3c54}','\u{9340d}','\u{f7744}'];
_13 = ['\u{e28f9}','\u{13a7b}','\u{aea0b}'];
RET = _8 & _6.fld2;
_11 = _9 - _9;
_11 = _9;
_6.fld2 = RET;
_9 = (-128263426573159555325644991554021571660_i128) as f64;
_5 = -_11;
RET = _8 * _6.fld2;
_8 = _5 as isize;
_6.fld2 = !_3;
_14 = _7;
_3 = _6.fld2 ^ _6.fld2;
_13 = ['\u{1ed1b}','\u{c2a69}','\u{b0bb1}'];
_1 = (-1458244214_i32) << RET;
_11 = _5;
_10 = (17359028838405810862_u64,);
_8 = _5 as isize;
RET = _8 + _3;
_9 = _5;
_6.fld2 = 3289770112_u32 as isize;
_15 = (-95882463804938683833671966976999311984_i128) as isize;
Goto(bb7)
}
bb7 = {
_10 = (8516581650999530726_u64,);
Goto(bb8)
}
bb8 = {
_15 = _3 >> RET;
_17 = 27_u8 << _15;
_9 = -_11;
_7 = !_14;
_10.0 = 7714637486566738629_u64 << RET;
_14 = !_7;
_9 = _5 + _11;
_16 = ['\u{7672d}','\u{10591d}','\u{1d8f2}','\u{9d5ba}','\u{a525a}','\u{b9701}','\u{13f04}'];
_1 = 517624528_i32 + (-141167764_i32);
_8 = _15;
_7 = !_14;
_10.0 = (-137779379596636040834808553519931469567_i128) as u64;
_4 = [272046902418513058988410879709603831101_u128,74779672173182180698218191435489310562_u128,329710627012060760816194102946828501500_u128,113645752198657587500030941071557496500_u128,112226178458449864940809431117484538193_u128,231265703964374360959875323110578633965_u128,280368832819254880201248512631807620457_u128];
_3 = 291526000999467923863621808907288546217_u128 as isize;
_10.0 = !8144871704010687829_u64;
_3 = '\u{92231}' as isize;
Goto(bb9)
}
bb9 = {
_5 = 118040175449287405484594829612099038717_u128 as f64;
RET = _6.fld2;
_15 = 19315_u16 as isize;
_15 = 1_usize as isize;
_9 = 10560415345843234135_usize as f64;
_15 = _10.0 as isize;
_14 = _7 <= _7;
_5 = 1_usize as f64;
_10 = (984552943395903304_u64,);
_13 = ['\u{58373}','\u{5de96}','\u{2bf54}'];
_16 = ['\u{9b6d7}','\u{fe589}','\u{40c81}','\u{5d9a0}','\u{c975}','\u{250ec}','\u{67e55}'];
Goto(bb10)
}
bb10 = {
_19 = _9 + _9;
_5 = _11;
_20 = core::ptr::addr_of!(_2);
_11 = _19;
_20 = core::ptr::addr_of!(_2);
_11 = _19;
_19 = _11;
_5 = _6.fld2 as f64;
_2 = [691224442_u32,1118250110_u32,2923481091_u32,3818734078_u32,1849668022_u32];
_5 = 2481010675585231597_i64 as f64;
RET = -_8;
RET = _8;
_1 = 528491424_i32;
_14 = _7;
RET = '\u{d346e}' as isize;
match _1 {
0 => bb1,
1 => bb11,
528491424 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_5 = (-15123_i16) as f64;
_10 = (6527688800202417226_u64,);
_4 = [204052000921384307897350686603042032368_u128,322643569018650265305821924011561568739_u128,159062024913426231524149594778799702036_u128,173055645434297374960312321796104162229_u128,196096888598347799518169022551123917624_u128,221115297154955911058995701033397329106_u128,76191313954524622611669720006992248707_u128];
_10.0 = 5443467318999212205_u64 << RET;
_13 = ['\u{b3c54}','\u{9340d}','\u{f7744}'];
_13 = ['\u{e28f9}','\u{13a7b}','\u{aea0b}'];
RET = _8 & _6.fld2;
_11 = _9 - _9;
_11 = _9;
_6.fld2 = RET;
_9 = (-128263426573159555325644991554021571660_i128) as f64;
_5 = -_11;
RET = _8 * _6.fld2;
_8 = _5 as isize;
_6.fld2 = !_3;
_14 = _7;
_3 = _6.fld2 ^ _6.fld2;
_13 = ['\u{1ed1b}','\u{c2a69}','\u{b0bb1}'];
_1 = (-1458244214_i32) << RET;
_11 = _5;
_10 = (17359028838405810862_u64,);
_8 = _5 as isize;
RET = _8 + _3;
_9 = _5;
_6.fld2 = 3289770112_u32 as isize;
_15 = (-95882463804938683833671966976999311984_i128) as isize;
Goto(bb7)
}
bb13 = {
_13 = ['\u{3f031}','\u{a28d8}','\u{3ab75}'];
_7 = _14 | _14;
_3 = _11 as isize;
_4 = [322721600065120580218240379427816377268_u128,318671202344446070160842036735762824404_u128,118687907883569388426129024483755927666_u128,48272410909429854821945105254709199281_u128,191535120229531838461873837983542868352_u128,329742960259685841159965032557890495085_u128,249823482045365079853616708169518243596_u128];
_16 = ['\u{eb0b2}','\u{fa312}','\u{c7543}','\u{2a73d}','\u{d2092}','\u{33514}','\u{99cf2}'];
_5 = _19 - _19;
_22 = _10;
_21 = _17;
_1 = -951414191_i32;
_27 = 3777342033_u32 as f32;
_20 = core::ptr::addr_of!(_2);
_3 = _6.fld2;
_14 = _7;
_16 = ['\u{5846a}','\u{181f4}','\u{c353d}','\u{7b941}','\u{b7e94}','\u{14be0}','\u{6e48a}'];
_28 = ((-5840565650343539124_i64), _27, (-126287035293996366132728886345946628862_i128), _1);
_5 = -_11;
_31.3.0 = -_28.2;
Goto(bb14)
}
bb14 = {
_32.0 = _28.0;
_32.1 = _27 * _28.1;
_31.2.0 = _28.0 - _28.0;
_21 = !_17;
_17 = _5 as u8;
_31.2.2 = _28.2;
_31.2.3 = _1 | _1;
_30 = [_22.0,_22.0,_10.0,_22.0,_10.0];
_13 = ['\u{c7f28}','\u{10f267}','\u{95da1}'];
_31.2.1 = -_32.1;
_29.2 = !_8;
_20 = core::ptr::addr_of!((*_20));
_32.2 = 2481945295_u32 as i128;
_28.0 = _31.2.0 >> _29.2;
_32.1 = _27;
_15 = _8;
_32.3 = _1;
_31.0 = [_31.2.0,_28.0,_31.2.0,_28.0,_28.0,_28.0,_32.0,_28.0];
_31.0 = [_28.0,_28.0,_28.0,_28.0,_32.0,_31.2.0,_31.2.0,_28.0];
_36.3.1 = 27953_i16 + (-4932_i16);
_32.2 = _14 as i128;
_36.2.0 = _28.0;
_27 = -_28.1;
_31.2.3 = _1 + _32.3;
_36.2.3 = 257343126_u32 as i32;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(17_usize, 8_usize, Move(_8), 3_usize, Move(_3), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(17_usize, 16_usize, Move(_16), 7_usize, Move(_7), 4_usize, Move(_4), 38_usize, _38), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: bool,mut _2: [i64; 8],mut _3: i32,mut _4: *mut u16,mut _5: ([i64; 8],)) -> i8 {
mir! {
type RET = i8;
let _6: char;
let _7: isize;
let _8: [u128; 7];
let _9: (u64,);
let _10: Adt41;
let _11: isize;
let _12: [i64; 8];
let _13: bool;
let _14: (u64,);
let _15: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16));
let _16: Adt50;
let _17: i128;
let _18: Adt50;
let _19: usize;
let _20: char;
let _21: f64;
let _22: *const [char; 3];
let _23: Adt55;
let _24: (bool, char, bool, u16, [u64; 5]);
let _25: isize;
let _26: (i64, f32, i128, i32);
let _27: char;
let _28: f64;
let _29: isize;
let _30: f64;
let _31: usize;
let _32: isize;
let _33: Adt48;
let _34: Adt48;
let _35: ();
let _36: ();
{
RET = 31359_u16 as i8;
RET = (-103_i8);
_6 = '\u{9b28a}';
_1 = !true;
_3 = 9223372036854775807_isize as i32;
RET = (-71_i8) * (-112_i8);
RET = (-64_i8);
_1 = !false;
_6 = '\u{1da0f}';
RET = _3 as i8;
_5.0 = [5925282743361945209_i64,6300131574276348811_i64,(-215320476697611473_i64),4540241574562001702_i64,250658804036925353_i64,(-7513814094793783881_i64),5870350986875368131_i64,(-966356287164795699_i64)];
RET = 111_i8;
_8 = [60661201748269568198228811365078339779_u128,266414551052885846831492461559873499112_u128,76181313648154589626162239811928733081_u128,94501158412040034930974015575339870440_u128,639735215006190908822165528414217396_u128,256125143689873908758147093306512800347_u128,203418985848910462170537509486370399631_u128];
_8 = [274754769953171522238484366736528213338_u128,120457766454554875889134129662387078522_u128,311091724797292155817089704246226698417_u128,310961741481192114578335193958332596104_u128,230275575312788996159411081293589800620_u128,30093997162622702469544029583372699531_u128,24704609572957630749624129231626680760_u128];
_7 = 21792_u16 as isize;
_1 = _3 <= _3;
_5 = (_2,);
_5 = (_2,);
Goto(bb1)
}
bb1 = {
_9 = (1730384392172903160_u64,);
_5.0 = [2843968977182661195_i64,(-9033349948288101764_i64),7976495502404656315_i64,(-3435752576846544833_i64),(-1995159838444248159_i64),(-1445794964693925080_i64),(-7438776357477281189_i64),2465537597541853092_i64];
_10 = Adt41 { fld0: 130472189992323805196770011152246093425_u128,fld1: _6,fld2: 1662562316021696074_i64 };
_11 = _3 as isize;
_9.0 = 3148719834849052086_u64 & 15361870325398590557_u64;
RET = -(-5_i8);
match _10.fld2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
1662562316021696074 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_10.fld0 = !105568957080413833632430334481523864162_u128;
_12 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_3 = !190545397_i32;
_9 = (15262998062513314737_u64,);
_5.0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_10.fld1 = _6;
_6 = _10.fld1;
_10.fld1 = _6;
_10 = Adt41 { fld0: 61088323780877255671063882265052262111_u128,fld1: _6,fld2: (-6413868460572011904_i64) };
_13 = _1;
_9 = (17990284794703905935_u64,);
_8 = [_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0];
_10.fld2 = _10.fld0 as i64;
match _10.fld0 {
61088323780877255671063882265052262111 => bb8,
_ => bb4
}
}
bb8 = {
_16.fld2 = !_11;
_16.fld5 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_3 = !62074519_i32;
_6 = _10.fld1;
_15.2.2 = 139754918089725412428109261075538764248_i128 ^ 135310680306519992175134836642751130991_i128;
_14 = (_9.0,);
_16.fld4 = Adt45::Variant1 { fld0: _10.fld0 };
_5 = (_2,);
_15.3 = (_15.2.2, (-28366_i16));
_2 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_15.2.3 = _15.3.1 as i32;
_7 = _16.fld2 ^ _16.fld2;
Call(_15.2.0 = core::intrinsics::bswap(_10.fld2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_5 = (_16.fld5,);
_5 = (_16.fld5,);
_8 = [_10.fld0,Field::<u128>(Variant(_16.fld4, 1), 0),_10.fld0,_10.fld0,_10.fld0,_10.fld0,Field::<u128>(Variant(_16.fld4, 1), 0)];
_1 = !_13;
_15.3 = (_15.2.2, 26076_i16);
_5 = (_16.fld5,);
_5.0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_15.2.1 = _16.fld2 as f32;
_3 = -_15.2.3;
_15.2.0 = 2654287905_u32 as i64;
_15.3.1 = (-24331_i16);
_7 = _11 + _11;
_18.fld5 = _12;
_15.1 = -_15.2.1;
_9.0 = _14.0 & _14.0;
_5 = (_12,);
_18.fld3 = !_9.0;
_18.fld5 = _12;
_18.fld3 = _9.0 + _14.0;
_16.fld0 = !_1;
_18.fld3 = _14.0 % _14.0;
_4 = core::ptr::addr_of_mut!(_18.fld1);
Goto(bb10)
}
bb10 = {
_18.fld5 = _2;
_13 = !_1;
_10.fld1 = _6;
_9.0 = !_18.fld3;
_15.0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_15.2.0,_10.fld2,_15.2.0];
_15.2.2 = _15.3.0 * _15.3.0;
_18.fld2 = _7;
_9 = _14;
_16.fld1 = !28131_u16;
place!(Field::<char>(Variant(_16.fld4, 0), 1)) = _10.fld1;
_2 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_15.0 = [_10.fld2,_10.fld2,_10.fld2,_15.2.0,_10.fld2,_10.fld2,_15.2.0,_10.fld2];
_18.fld0 = !_1;
_19 = _3 as usize;
_15.2.2 = _15.3.0;
_16.fld2 = _7 & _7;
_2 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_15.2.0,_15.2.0,_10.fld2,_10.fld2];
_20 = Field::<char>(Variant(_16.fld4, 0), 1);
_18.fld1 = !_16.fld1;
_14.0 = _9.0 << _15.2.3;
_5 = (_2,);
_5.0 = _2;
_15.3 = (_15.2.2, 4157_i16);
Goto(bb11)
}
bb11 = {
_15.2 = (_10.fld2, _15.1, _15.3.0, _3);
_17 = _15.2.2 & _15.2.2;
place!(Field::<[i64; 8]>(Variant(_16.fld4, 0), 0)) = _2;
_10.fld0 = 158_u8 as u128;
place!(Field::<[i64; 8]>(Variant(_16.fld4, 0), 0)) = [_15.2.0,_15.2.0,_10.fld2,_10.fld2,_15.2.0,_10.fld2,_10.fld2,_10.fld2];
place!(Field::<[i64; 8]>(Variant(_16.fld4, 0), 0)) = _5.0;
_3 = _15.2.3 | _15.2.3;
_10 = Adt41 { fld0: 259951952943051731611352076116823439160_u128,fld1: _6,fld2: _15.2.0 };
_16.fld5 = [_10.fld2,_15.2.0,_15.2.0,_15.2.0,_10.fld2,_15.2.0,_15.2.0,_15.2.0];
_21 = _15.2.0 as f64;
place!(Field::<i128>(Variant(_16.fld4, 0), 4)) = _15.3.0 + _15.3.0;
_15.2.2 = !Field::<i128>(Variant(_16.fld4, 0), 4);
_16.fld2 = _7;
place!(Field::<char>(Variant(_16.fld4, 0), 1)) = _6;
_16.fld2 = _11;
_16.fld0 = _20 < _6;
_25 = !_7;
_18.fld5 = [_15.2.0,_15.2.0,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_15.2.0,_10.fld2];
_17 = !Field::<i128>(Variant(_16.fld4, 0), 4);
_11 = _18.fld2;
_19 = _18.fld2 as usize;
_15.3.0 = -Field::<i128>(Variant(_16.fld4, 0), 4);
place!(Field::<[i64; 8]>(Variant(_16.fld4, 0), 0)) = [_15.2.0,_15.2.0,_10.fld2,_15.2.0,_10.fld2,_15.2.0,_10.fld2,_15.2.0];
_26.0 = _10.fld2;
_24.1 = _20;
Call(_12 = core::intrinsics::transmute(_2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_27 = Field::<char>(Variant(_16.fld4, 0), 1);
Goto(bb13)
}
bb13 = {
_16.fld3 = _24.1 as u64;
_13 = !_18.fld0;
_26 = (_10.fld2, _15.1, _17, _15.2.3);
_13 = !_18.fld0;
_25 = _18.fld2 & _7;
_18.fld5 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_26.0,_15.2.0,_15.2.0,_10.fld2];
_24.4 = [_14.0,_14.0,_14.0,_14.0,_16.fld3];
_12 = [_15.2.0,_10.fld2,_15.2.0,_26.0,_15.2.0,_10.fld2,_15.2.0,_26.0];
_6 = _10.fld1;
_10 = Adt41 { fld0: 55217709305270969070094016234201352601_u128,fld1: _20,fld2: _26.0 };
match _10.fld0 {
0 => bb1,
1 => bb12,
2 => bb3,
3 => bb10,
4 => bb5,
5 => bb6,
55217709305270969070094016234201352601 => bb14,
_ => bb11
}
}
bb14 = {
_16.fld3 = RET as u64;
_24.0 = _1 | _1;
_19 = _26.1 as usize;
_29 = _25;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(18_usize, 3_usize, Move(_3), 9_usize, Move(_9), 27_usize, Move(_27), 20_usize, Move(_20)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(18_usize, 19_usize, Move(_19), 5_usize, Move(_5), 1_usize, Move(_1), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(18_usize, 17_usize, Move(_17), 36_usize, _36, 36_usize, _36, 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box((-83846507502971645237784449768863601936_i128)), std::hint::black_box('\u{cc718}'), std::hint::black_box(3942630389_u32), std::hint::black_box(0_usize));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt40 {
fld0: [char; 3],
fld1: ([u128; 7], i128, i32),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt41 {
fld0: u128,
fld1: char,
fld2: i64,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: bool,
fld1: *const [u32; 5],
fld2: isize,
fld3: [u64; 5],
fld4: (i128, i16),
fld5: *const [char; 3],
fld6: [char; 6],
fld7: i128,

},
Variant1{
fld0: (i128, i16),
fld1: u128,
fld2: *mut i8,
fld3: u8,
fld4: (u64,),
fld5: i32,

},
Variant2{
fld0: u16,
fld1: i64,
fld2: ([i64; 8],),
fld3: [u32; 5],
fld4: u128,
fld5: f32,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: ([i64; 8],),
fld1: (u32, *const [u32; 5], isize),

},
Variant1{
fld0: isize,
fld1: [char; 6],

},
Variant2{
fld0: Adt42,
fld1: f32,
fld2: (u64,),
fld3: *const [u64; 5],
fld4: ([i64; 8],),
fld5: i32,
fld6: f64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: u32,
fld1: u128,
fld2: *mut u32,
fld3: usize,
fld4: i16,
fld5: [u32; 5],

},
Variant1{
fld0: [char; 6],
fld1: f32,
fld2: u64,
fld3: i8,

},
Variant2{
fld0: i64,
fld1: (u32, *const [u32; 5], isize),
fld2: usize,
fld3: f32,
fld4: Adt42,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt45 {
Variant0{
fld0: [i64; 8],
fld1: char,
fld2: ([i64; 8],),
fld3: [u64; 5],
fld4: i128,
fld5: i32,

},
Variant1{
fld0: u128,

},
Variant2{
fld0: i128,
fld1: [u64; 5],
fld2: [u128; 7],
fld3: u64,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: bool,
fld1: *mut u32,
fld2: f32,
fld3: Adt44,

},
Variant1{
fld0: Adt41,
fld1: [char; 3],
fld2: *mut u16,
fld3: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16)),
fld4: Adt43,
fld5: f64,
fld6: u8,

},
Variant2{
fld0: u16,
fld1: char,
fld2: [u32; 5],
fld3: Adt41,
fld4: i128,
fld5: [i64; 8],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: [char; 6],
fld1: ([u128; 7], i128, i32),
fld2: ([i64; 8],),
fld3: Adt46,
fld4: (i128, i16),
fld5: (u32, *const [u32; 5], isize),

},
Variant1{
fld0: u64,
fld1: (i128, i16),

},
Variant2{
fld0: *const [char; 3],
fld1: Adt42,
fld2: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16)),
fld3: u64,
fld4: *mut u32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: ([i64; 8],),
fld1: *const [u64; 5],
fld2: (i128, i16),
fld3: u64,
fld4: i16,

},
Variant1{
fld0: bool,
fld1: *const [u32; 5],
fld2: [u128; 7],
fld3: i8,
fld4: f64,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [u32; 5],
fld1: (bool, char, bool, u16, [u64; 5]),
fld2: (i128, i16),
fld3: Adt46,
fld4: [u64; 5],
fld5: Adt40,
fld6: Adt44,
fld7: Adt41,

},
Variant1{
fld0: [char; 6],
fld1: char,
fld2: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16)),
fld3: i8,
fld4: Adt47,
fld5: Adt43,
fld6: (bool, char, bool, u16, [u64; 5]),
fld7: (u32, *const [u32; 5], isize),

},
Variant2{
fld0: i128,
fld1: Adt44,
fld2: *mut u32,
fld3: f32,
fld4: [char; 7],
fld5: i32,

},
Variant3{
fld0: *mut u32,
fld1: (i128, i16),
fld2: *const [u64; 5],
fld3: [char; 3],
fld4: Adt46,
fld5: Adt41,
fld6: f64,
fld7: [u32; 5],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: bool,
fld1: u16,
fld2: isize,
fld3: u64,
fld4: Adt45,
fld5: [i64; 8],
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt43,

},
Variant1{
fld0: [char; 3],
fld1: char,
fld2: (i128, i16),
fld3: [i64; 8],
fld4: [char; 6],

},
Variant2{
fld0: [i64; 8],
fld1: (i64, f32, i128, i32),
fld2: *mut u32,
fld3: i32,
fld4: u128,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: usize,
fld2: [char; 3],
fld3: Adt42,
fld4: Adt40,
fld5: u64,
fld6: Adt46,
fld7: (u64,),

},
Variant1{
fld0: Adt47,
fld1: Adt49,
fld2: i128,
fld3: i8,
fld4: Adt42,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: [char; 3],
fld1: usize,
fld2: Adt45,
fld3: *const [u64; 5],

},
Variant1{
fld0: Adt44,
fld1: char,
fld2: Adt46,
fld3: ([u128; 7], i128, i32),
fld4: [char; 3],
fld5: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16)),
fld6: i64,
fld7: i128,

},
Variant2{
fld0: ([i64; 8],),
fld1: u8,
fld2: ([u128; 7], i128, i32),
fld3: Adt51,
fld4: u32,
fld5: i32,
fld6: Adt46,
fld7: Adt40,

}}
#[derive(Debug)]
pub struct Adt54 {
fld0: Adt45,
fld1: Adt48,
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: bool,
fld1: ([i64; 8], f32, (i64, f32, i128, i32), (i128, i16)),
fld2: i64,
fld3: ([u128; 7], i128, i32),
fld4: [i64; 8],

},
Variant1{
fld0: [char; 7],
fld1: Adt52,
fld2: [i64; 6],
fld3: Adt42,
fld4: i16,

},
Variant2{
fld0: u128,
fld1: (bool, char, bool, u16, [u64; 5]),
fld2: *mut u32,
fld3: Adt45,
fld4: Adt50,
fld5: i32,

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt47,
fld1: Adt55,
fld2: isize,
fld3: Adt51,
}

