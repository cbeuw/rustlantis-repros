#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u32,mut _2: i64,mut _3: isize,mut _4: u16,mut _5: i128) -> bool {
mir! {
type RET = bool;
let _6: i16;
let _7: f32;
let _8: [isize; 6];
let _9: u32;
let _10: [u16; 4];
let _11: u64;
let _12: ([bool; 4], f64, char, [bool; 4]);
let _13: usize;
let _14: [usize; 8];
let _15: (f64, &'static ([isize; 6],));
let _16: Adt58;
let _17: bool;
let _18: Adt51;
let _19: Adt46;
let _20: f64;
let _21: Adt60;
let _22: Adt55;
let _23: char;
let _24: [isize; 6];
let _25: [u128; 7];
let _26: u128;
let _27: Adt57;
let _28: ([isize; 6],);
let _29: i64;
let _30: ();
let _31: ();
{
_5 = (-89584318795543719605696164374576529602_i128);
_1 = !2327599731_u32;
_5 = 147982852720700639166877677472586384078_i128;
RET = !false;
_2 = 61_i8 as i64;
_5 = 164710602112649411012301152594061403317_i128;
RET = false | true;
_4 = 3674_u16;
_4 = !9214_u16;
_2 = 8721457690996911235_i64 * 138508010905583819_i64;
_7 = 14528915800283295828_u64 as f32;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
164710602112649411012301152594061403317 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5 = -(-50214196302406970772383801919131137504_i128);
RET = !false;
_5 = 31635430822508802241560559142386163089_i128;
_6 = 14452_i16;
_5 = -(-165241753808569013502271098372133162434_i128);
RET = true ^ false;
_9 = '\u{169a3}' as u32;
_8 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),111_isize,(-59_isize),(-9223372036854775808_isize)];
_4 = 9582_u16 & 44554_u16;
_10 = [_4,_4,_4,_4];
_2 = (-1482440025206820779_i64) & (-2075548374978457628_i64);
_10 = [_4,_4,_4,_4];
_1 = _9;
_12.1 = (-480037391_i32) as f64;
_1 = _9;
_4 = 13230685612705441884_u64 as u16;
_13 = _9 as usize;
_3 = 37_u8 as isize;
Goto(bb8)
}
bb8 = {
_12.0 = [RET,RET,RET,RET];
_6 = _4 as i16;
_12.2 = '\u{41d69}';
_3 = -122_isize;
_4 = 57242_u16 ^ 44914_u16;
_11 = !3805608161053332382_u64;
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_11 = 16961352359826338439_u64 + 2186750662573804252_u64;
_7 = (-847015201_i32) as f32;
_13 = 0_usize;
RET = !_12.0[_13];
_10[_13] = _4 ^ _4;
_12.0 = [RET,RET,RET,RET];
_12.1 = _13 as f64;
_17 = RET;
_2 = (-5287858425866992058_i64);
_8 = [_3,_3,_3,_3,_3,_3];
RET = !_12.0[_13];
_12.2 = '\u{11721}';
_10[_13] = !_4;
RET = _12.0[_13];
_15.0 = _12.1;
_12.2 = '\u{e7e5b}';
Call(_12.0[_13] = fn1(_10[_13], _8[_13], _17, _10, _10, _11, _11, _10, _10[_13], _8[_13]), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_12.3 = _12.0;
_2 = (-5690171929850379811_i64);
_12.0 = [RET,RET,RET,RET];
_12.2 = '\u{54f24}';
_19.fld0 = _11 < _11;
_19.fld6 = 259890347916386720144143318117207792986_u128 - 137668642379349200507292607994399254746_u128;
_7 = (-67_i8) as f32;
_14 = [_13,_13,_13,_13,_13,_13,_13,_13];
_12.1 = _15.0 - _15.0;
_6 = _3 as i16;
_8 = [_3,_3,_3,_3,_3,_3];
_19.fld0 = _1 < _1;
_12.3 = [RET,_19.fld0,_19.fld0,_19.fld0];
_17 = RET;
_1 = _9;
RET = _19.fld0 != _19.fld0;
_12.0 = [_17,RET,_19.fld0,_17];
_11 = _6 as u64;
_19.fld5 = [RET,_19.fld0,RET,_17];
_12 = (_19.fld5, _15.0, '\u{61fd3}', _19.fld5);
_4 = _13 as u16;
match _2 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb7,
5 => bb6,
340282366920938463457684435501917831645 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_19.fld1 = 70_u8 & 106_u8;
_12.3 = [_17,RET,_19.fld0,_17];
_19.fld4 = _4;
_12.2 = '\u{46d57}';
_11 = 2128858204674869930_u64 << _19.fld1;
_3 = (-9223372036854775808_isize);
_12.3 = [RET,_17,_19.fld0,RET];
_1 = _9 ^ _9;
_19.fld5 = [RET,RET,_19.fld0,_19.fld0];
_9 = _7 as u32;
_19.fld0 = RET;
_19.fld0 = !RET;
_3 = -(-9223372036854775808_isize);
_12.2 = '\u{102c7b}';
_3 = 9223372036854775807_isize;
_20 = _4 as f64;
_17 = _19.fld0 < RET;
_19.fld3 = [_13];
_12.0 = _19.fld5;
_8 = [_3,_3,_3,_3,_3,_3];
_5 = _19.fld4 as i128;
_9 = _1 | _1;
_10 = [_4,_19.fld4,_19.fld4,_19.fld4];
_23 = _12.2;
RET = _17;
_19.fld5 = _12.0;
_21 = Adt60::Variant0 { fld0: _5 };
Goto(bb12)
}
bb12 = {
_19.fld5 = _12.0;
_12.2 = _23;
_13 = 3_usize;
_5 = Field::<i128>(Variant(_21, 0), 0) + Field::<i128>(Variant(_21, 0), 0);
_19.fld5 = _12.0;
_12.1 = _15.0;
_12.2 = _23;
_25 = [_19.fld6,_19.fld6,_19.fld6,_19.fld6,_19.fld6,_19.fld6,_19.fld6];
RET = !_17;
match _13 {
0 => bb1,
1 => bb8,
2 => bb9,
4 => bb11,
5 => bb13,
3 => bb15,
_ => bb14
}
}
bb13 = {
_19.fld1 = 70_u8 & 106_u8;
_12.3 = [_17,RET,_19.fld0,_17];
_19.fld4 = _4;
_12.2 = '\u{46d57}';
_11 = 2128858204674869930_u64 << _19.fld1;
_3 = (-9223372036854775808_isize);
_12.3 = [RET,_17,_19.fld0,RET];
_1 = _9 ^ _9;
_19.fld5 = [RET,RET,_19.fld0,_19.fld0];
_9 = _7 as u32;
_19.fld0 = RET;
_19.fld0 = !RET;
_3 = -(-9223372036854775808_isize);
_12.2 = '\u{102c7b}';
_3 = 9223372036854775807_isize;
_20 = _4 as f64;
_17 = _19.fld0 < RET;
_19.fld3 = [_13];
_12.0 = _19.fld5;
_8 = [_3,_3,_3,_3,_3,_3];
_5 = _19.fld4 as i128;
_9 = _1 | _1;
_10 = [_4,_19.fld4,_19.fld4,_19.fld4];
_23 = _12.2;
RET = _17;
_19.fld5 = _12.0;
_21 = Adt60::Variant0 { fld0: _5 };
Goto(bb12)
}
bb14 = {
Return()
}
bb15 = {
_26 = _25[_13] << _5;
SetDiscriminant(_21, 1);
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_21, 1), 0)).3[_13] = _12.3[_13];
_23 = _12.2;
_2 = -4892868603995890258_i64;
_12 = (_19.fld5, _20, _23, _19.fld5);
_19.fld5 = [_17,_17,_17,RET];
_21 = Adt60::Variant0 { fld0: _5 };
_17 = _19.fld5[_13];
_15.0 = -_12.1;
_12.0 = [RET,RET,_19.fld5[_13],_17];
SetDiscriminant(_21, 0);
_19.fld0 = !_19.fld5[_13];
_10[_13] = _4;
_19.fld5[_13] = !RET;
_15.1 = &_28;
_24[_13] = _3;
_8 = [_3,_3,_3,_3,_3,_24[_13]];
_10 = [_19.fld4,_4,_19.fld4,_4];
Goto(bb16)
}
bb16 = {
Call(_30 = dump_var(0_usize, 13_usize, Move(_13), 6_usize, Move(_6), 25_usize, Move(_25), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(0_usize, 9_usize, Move(_9), 1_usize, Move(_1), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u16,mut _2: isize,mut _3: bool,mut _4: [u16; 4],mut _5: [u16; 4],mut _6: u64,mut _7: u64,mut _8: [u16; 4],mut _9: u16,mut _10: isize) -> bool {
mir! {
type RET = bool;
let _11: bool;
let _12: [usize; 8];
let _13: Adt60;
let _14: u8;
let _15: u32;
let _16: [i64; 1];
let _17: f32;
let _18: *mut u128;
let _19: u128;
let _20: [bool; 6];
let _21: u16;
let _22: Adt53;
let _23: *const &'static ([isize; 6],);
let _24: [bool; 4];
let _25: bool;
let _26: u64;
let _27: isize;
let _28: u16;
let _29: f32;
let _30: char;
let _31: isize;
let _32: u128;
let _33: char;
let _34: [usize; 1];
let _35: Adt52;
let _36: ([isize; 6],);
let _37: bool;
let _38: *mut u128;
let _39: [bool; 6];
let _40: u128;
let _41: ([u64; 5], [i128; 7]);
let _42: usize;
let _43: Adt55;
let _44: ();
let _45: ();
{
_6 = _7;
_6 = !_7;
RET = _3 | _3;
_8 = _5;
_9 = (-59212367_i32) as u16;
_7 = !_6;
_5 = [_1,_9,_9,_9];
_2 = (-136294659038633495499212171581806345336_i128) as isize;
_11 = RET | _3;
_3 = !RET;
_12 = [6_usize,1_usize,17486743965646346524_usize,692370705526714752_usize,0_usize,11383791113510547143_usize,11884172641922941073_usize,17773914763858098751_usize];
RET = _3 <= _3;
_6 = 217891961217060936200893540076950198467_u128 as u64;
_4 = [_1,_1,_1,_1];
_5 = _4;
_1 = 106568021207001764787983166906022887292_i128 as u16;
Goto(bb1)
}
bb1 = {
_4 = _5;
_5 = [_1,_1,_1,_1];
_10 = !_2;
Goto(bb2)
}
bb2 = {
_12 = [1470866156488360715_usize,2_usize,6_usize,6_usize,0_usize,433010781114646989_usize,2_usize,4844064839193363218_usize];
_10 = (-32227_i16) as isize;
_10 = _7 as isize;
_1 = '\u{35a0b}' as u16;
_3 = _11;
_10 = _2;
_2 = _10;
_4 = [_9,_1,_9,_1];
_9 = _1;
_10 = _2 - _2;
Goto(bb3)
}
bb3 = {
_5 = [_1,_1,_1,_9];
_13 = Adt60::Variant0 { fld0: (-39059308073010341792381096011131283551_i128) };
_3 = RET;
_10 = _2;
_7 = !_6;
Goto(bb4)
}
bb4 = {
_10 = _2 >> _1;
_4 = _8;
place!(Field::<i128>(Variant(_13, 0), 0)) = 97726731097090040970884083290910815496_i128 >> _10;
_12 = [0_usize,17019684374557828748_usize,11936326130751620941_usize,0_usize,6_usize,6961957767468299674_usize,13316154266819547615_usize,9307139017388648627_usize];
_6 = !_7;
_5 = _8;
_2 = !_10;
SetDiscriminant(_13, 1);
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).0 = [RET,_11,_11,RET];
_5 = _4;
_1 = _9 >> _7;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).1 = 207_u8 as f64;
_16 = [2681243829596298252_i64];
_4 = [_9,_9,_9,_9];
_5 = [_9,_1,_1,_9];
Goto(bb5)
}
bb5 = {
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).0 = [_3,RET,_3,_3];
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).3 = [_11,_3,RET,_11];
Goto(bb6)
}
bb6 = {
_16 = [(-7325092491261364328_i64)];
RET = _3 & _11;
_12 = [13483526126225599432_usize,9855483945963531180_usize,4129462819019252337_usize,5_usize,5_usize,18133824427501109393_usize,7417673596569284828_usize,6561202564663262034_usize];
_12 = [1_usize,18093019551796175372_usize,1094910169098389246_usize,14363563916450606060_usize,18423235494930618802_usize,12559571275890271912_usize,1_usize,12635069526771380745_usize];
_14 = 6_usize as u8;
_5 = [_1,_1,_1,_1];
_19 = !5809494712537170212329810649329422623_u128;
_7 = (-438550559_i32) as u64;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).1 = 967_i16 as f64;
_6 = !_7;
_18 = core::ptr::addr_of_mut!(_19);
_16 = [(-8401324682894565304_i64)];
_4 = [_9,_9,_1,_1];
_19 = !85596479440217874699913569586696510490_u128;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).2 = '\u{640bc}';
_19 = !90147108011001736136740195055000242044_u128;
_17 = (-11846_i16) as f32;
_18 = core::ptr::addr_of_mut!(_19);
RET = _3;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).0 = [_3,RET,_3,_3];
Goto(bb7)
}
bb7 = {
_4 = [_9,_1,_1,_9];
_15 = (-4014024209981412025_i64) as u32;
_5 = _4;
_6 = _7 >> _14;
_21 = !_1;
_19 = 320533929120962204384661829249031164052_u128 >> _15;
_19 = 284083596355251343704438645742164902487_u128 >> _7;
_21 = _9;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).3 = [RET,_3,_3,RET];
_24 = [RET,_3,RET,_11];
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).2 = '\u{ddbbe}';
Goto(bb8)
}
bb8 = {
_20 = [_11,_3,_11,_3,RET,_3];
_18 = core::ptr::addr_of_mut!(_19);
_4 = [_9,_9,_1,_1];
_16 = [3568613479215664193_i64];
_7 = Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0).2 as u64;
SetDiscriminant(_13, 1);
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).3 = [_3,RET,RET,_11];
_8 = [_1,_21,_9,_1];
_13 = Adt60::Variant0 { fld0: 79525302190764451210661489858967336027_i128 };
_10 = _2;
_8 = _4;
_8 = [_1,_1,_9,_1];
_20 = [_11,RET,_3,_3,RET,_11];
_10 = -_2;
_27 = _10;
_8 = _5;
_15 = 4065353386_u32 & 4144199300_u32;
_15 = !3047021949_u32;
_27 = _2 & _2;
_6 = _7 * _7;
_12 = [7_usize,16272368507682597434_usize,6_usize,6166520420675615896_usize,8897954167148085476_usize,314388112167835956_usize,5066499586816459806_usize,3_usize];
_4 = [_9,_1,_9,_1];
Goto(bb9)
}
bb9 = {
_10 = '\u{8834}' as isize;
_4 = [_1,_21,_9,_1];
_26 = _6 & _6;
_21 = !_9;
_3 = !RET;
_29 = _17;
_30 = '\u{806b5}';
_29 = _17 * _17;
_4 = _8;
_27 = _2 + _10;
_25 = RET < RET;
_4 = _8;
_20 = [_25,_3,_25,RET,_25,_25];
_29 = _17 - _17;
_14 = 55_u8;
_6 = 20181_i16 as u64;
RET = _19 != _19;
Call(_8 = fn2(_2, _30, _7, _25, _25, RET), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_20 = [_25,_3,_25,_25,_25,_11];
RET = (*_18) != (*_18);
_3 = _25 >= _11;
_9 = !_1;
_15 = (-18_i8) as u32;
_29 = _17;
_17 = _29 + _29;
_34 = [5109848991439505823_usize];
_24 = [RET,_3,_11,_11];
_31 = -_2;
_28 = (-636334224_i32) as u16;
place!(Field::<i128>(Variant(_13, 0), 0)) = (-125216778240474986822656895987860703859_i128) | (-48449935004884075666810845841937893428_i128);
RET = !_25;
RET = _11;
_27 = -_2;
_19 = _29 as u128;
match _14 {
0 => bb7,
55 => bb12,
_ => bb11
}
}
bb11 = {
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).0 = [_3,RET,_3,_3];
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_13, 1), 0)).3 = [_11,_3,RET,_11];
Goto(bb6)
}
bb12 = {
RET = !_3;
_7 = !_26;
_32 = !(*_18);
_27 = !_2;
_33 = _30;
_27 = _2 ^ _2;
_30 = _33;
_39 = [RET,RET,_25,_3,_3,_11];
_18 = core::ptr::addr_of_mut!((*_18));
_19 = _17 as u128;
_25 = !RET;
_14 = 204_u8;
_21 = !_28;
_2 = _31;
_1 = _28 | _9;
_6 = !_7;
_26 = _6 << _2;
_10 = _31 ^ _2;
_8 = _5;
_9 = _15 as u16;
_29 = _17;
_28 = 28821_i16 as u16;
_39 = _20;
Goto(bb13)
}
bb13 = {
Call(_44 = dump_var(1_usize, 15_usize, Move(_15), 2_usize, Move(_2), 3_usize, Move(_3), 1_usize, Move(_1)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_44 = dump_var(1_usize, 8_usize, Move(_8), 39_usize, Move(_39), 25_usize, Move(_25), 30_usize, Move(_30)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_44 = dump_var(1_usize, 21_usize, Move(_21), 14_usize, Move(_14), 9_usize, Move(_9), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(1_usize, 33_usize, Move(_33), 4_usize, Move(_4), 45_usize, _45, 45_usize, _45), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: isize,mut _2: char,mut _3: u64,mut _4: bool,mut _5: bool,mut _6: bool) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _7: [usize; 1];
let _8: [i64; 1];
let _9: usize;
let _10: f64;
let _11: Adt52;
let _12: [bool; 6];
let _13: isize;
let _14: [isize; 1];
let _15: (u64, *mut u128, u8, i32);
let _16: [bool; 6];
let _17: *const i16;
let _18: f32;
let _19: i16;
let _20: ();
let _21: ();
{
_3 = _1 as u64;
_1 = 54_isize;
Call(_2 = fn3(_1, _4, _4, _4, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = _6;
_1 = -41_isize;
_3 = 13840746519120486893_u64 * 3217886124338304287_u64;
_1 = 2315997210661275374_usize as isize;
_3 = 5340047534245418786_u64;
_7 = [3_usize];
_8 = [8571452706929923606_i64];
RET = [5394_u16,48897_u16,43371_u16,35149_u16];
_8 = [6095871076205480049_i64];
RET = [35187_u16,40496_u16,55136_u16,31580_u16];
RET = [46310_u16,18199_u16,50758_u16,25331_u16];
_7 = [5_usize];
RET = [5976_u16,62707_u16,31827_u16,41688_u16];
RET = [61185_u16,60029_u16,42259_u16,40327_u16];
RET = [20072_u16,21080_u16,60619_u16,60465_u16];
_7 = [2_usize];
_4 = !_6;
_4 = _5 == _6;
RET = [29354_u16,53031_u16,62346_u16,24079_u16];
RET = [35297_u16,57660_u16,61609_u16,14204_u16];
_7 = [15857897598198221981_usize];
_5 = _6 < _4;
_5 = _3 >= _3;
_6 = _1 <= _1;
_5 = _4;
_10 = (-3762796730136549923_i64) as f64;
match _3 {
0 => bb2,
5340047534245418786 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_1 = (-85844749680541568739986067585963629665_i128) as isize;
match _3 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
5340047534245418786 => bb11,
_ => bb10
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5 = _6;
_1 = -41_isize;
_3 = 13840746519120486893_u64 * 3217886124338304287_u64;
_1 = 2315997210661275374_usize as isize;
_3 = 5340047534245418786_u64;
_7 = [3_usize];
_8 = [8571452706929923606_i64];
RET = [5394_u16,48897_u16,43371_u16,35149_u16];
_8 = [6095871076205480049_i64];
RET = [35187_u16,40496_u16,55136_u16,31580_u16];
RET = [46310_u16,18199_u16,50758_u16,25331_u16];
_7 = [5_usize];
RET = [5976_u16,62707_u16,31827_u16,41688_u16];
RET = [61185_u16,60029_u16,42259_u16,40327_u16];
RET = [20072_u16,21080_u16,60619_u16,60465_u16];
_7 = [2_usize];
_4 = !_6;
_4 = _5 == _6;
RET = [29354_u16,53031_u16,62346_u16,24079_u16];
RET = [35297_u16,57660_u16,61609_u16,14204_u16];
_7 = [15857897598198221981_usize];
_5 = _6 < _4;
_5 = _3 >= _3;
_6 = _1 <= _1;
_5 = _4;
_10 = (-3762796730136549923_i64) as f64;
match _3 {
0 => bb2,
5340047534245418786 => bb4,
_ => bb3
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_9 = 7_usize;
_9 = 9616956561553071518_usize;
_6 = _5 & _4;
_4 = _5;
_8 = [3531939122379581465_i64];
match _9 {
0 => bb9,
1 => bb2,
2 => bb7,
3 => bb12,
9616956561553071518 => bb14,
_ => bb13
}
}
bb12 = {
_5 = _6;
_1 = -41_isize;
_3 = 13840746519120486893_u64 * 3217886124338304287_u64;
_1 = 2315997210661275374_usize as isize;
_3 = 5340047534245418786_u64;
_7 = [3_usize];
_8 = [8571452706929923606_i64];
RET = [5394_u16,48897_u16,43371_u16,35149_u16];
_8 = [6095871076205480049_i64];
RET = [35187_u16,40496_u16,55136_u16,31580_u16];
RET = [46310_u16,18199_u16,50758_u16,25331_u16];
_7 = [5_usize];
RET = [5976_u16,62707_u16,31827_u16,41688_u16];
RET = [61185_u16,60029_u16,42259_u16,40327_u16];
RET = [20072_u16,21080_u16,60619_u16,60465_u16];
_7 = [2_usize];
_4 = !_6;
_4 = _5 == _6;
RET = [29354_u16,53031_u16,62346_u16,24079_u16];
RET = [35297_u16,57660_u16,61609_u16,14204_u16];
_7 = [15857897598198221981_usize];
_5 = _6 < _4;
_5 = _3 >= _3;
_6 = _1 <= _1;
_5 = _4;
_10 = (-3762796730136549923_i64) as f64;
match _3 {
0 => bb2,
5340047534245418786 => bb4,
_ => bb3
}
}
bb13 = {
Return()
}
bb14 = {
_12 = [_4,_6,_4,_6,_6,_6];
_13 = _1;
_3 = !6974354159251370141_u64;
_13 = 162640622869687270408135431213249109295_u128 as isize;
_15.0 = _3 >> _1;
_5 = !_6;
RET = [37478_u16,3509_u16,10646_u16,54341_u16];
_15.2 = 37_u8 * 151_u8;
RET = [38948_u16,65344_u16,22639_u16,22730_u16];
_16 = [_4,_4,_5,_6,_4,_6];
_6 = _5;
_14 = [_1];
_7 = [_9];
_8 = [7702827379704467409_i64];
_14 = [_1];
_2 = '\u{f45bf}';
_18 = 172780807008223435275319885921296870547_u128 as f32;
_12 = [_5,_6,_6,_5,_5,_6];
_6 = !_4;
_17 = core::ptr::addr_of!(_19);
_2 = '\u{a0698}';
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(2_usize, 12_usize, Move(_12), 1_usize, Move(_1), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(2_usize, 3_usize, Move(_3), 14_usize, Move(_14), 21_usize, _21, 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: isize,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: isize) -> char {
mir! {
type RET = char;
let _6: u8;
let _7: *mut u128;
let _8: ([bool; 4], f64, char, [bool; 4]);
let _9: isize;
let _10: i32;
let _11: i32;
let _12: [usize; 8];
let _13: *const i16;
let _14: *const i16;
let _15: Adt46;
let _16: Adt47;
let _17: char;
let _18: [isize; 6];
let _19: ([bool; 4], f64, char, [bool; 4]);
let _20: Adt57;
let _21: isize;
let _22: *mut u128;
let _23: u64;
let _24: isize;
let _25: *const &'static ([isize; 6],);
let _26: bool;
let _27: ([u16; 4], [i64; 1]);
let _28: [isize; 1];
let _29: f64;
let _30: i128;
let _31: isize;
let _32: f32;
let _33: ();
let _34: ();
{
_3 = !_2;
RET = '\u{faa4d}';
_1 = _5;
RET = '\u{c0258}';
match _1 {
54 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
RET = '\u{f46fd}';
_3 = _4 == _2;
RET = '\u{2d547}';
_5 = _1 & _1;
_4 = _2 != _2;
RET = '\u{3d047}';
RET = '\u{39044}';
_5 = _1;
RET = '\u{d1e5}';
_2 = _3 == _4;
RET = '\u{8fc4a}';
_2 = _4;
_5 = (-23_i8) as isize;
_6 = 4702959857958666694_i64 as u8;
_8.1 = _1 as f64;
_8.2 = RET;
_1 = _5 | _5;
_8.3 = [_4,_2,_2,_2];
_8.0 = [_3,_3,_3,_4];
_8.0 = _8.3;
_4 = !_3;
_5 = _8.2 as isize;
_4 = _3 < _3;
RET = _8.2;
_4 = _2;
Goto(bb3)
}
bb3 = {
_8.1 = 32_i8 as f64;
_8.0 = [_2,_2,_3,_4];
_2 = !_3;
_8.1 = _5 as f64;
_2 = !_3;
_2 = !_3;
RET = _8.2;
_8.3 = [_3,_2,_2,_3];
_2 = _3;
_6 = 221_u8;
_9 = 18_i8 as isize;
RET = _8.2;
_3 = !_2;
_1 = (-1072154315_i32) as isize;
_8.0 = [_3,_4,_3,_2];
_8.0 = [_3,_4,_2,_3];
_8.3 = [_2,_4,_2,_4];
_4 = !_3;
_1 = _5 & _5;
_8.3 = [_3,_3,_3,_2];
RET = _8.2;
_1 = 11614_u16 as isize;
_3 = !_2;
RET = _8.2;
Goto(bb4)
}
bb4 = {
_5 = _1;
_2 = _4;
_8.2 = RET;
RET = _8.2;
_10 = 881062364_i32 & 153351307_i32;
_8.1 = (-14043_i16) as f64;
_11 = _10;
_5 = !_1;
_5 = !_9;
_3 = _2 | _2;
_8.1 = _5 as f64;
_4 = _3;
_2 = _4;
_10 = _11 * _11;
_1 = 20269_i16 as isize;
RET = _8.2;
_6 = 83_u8 & 78_u8;
_5 = -_9;
_8.2 = RET;
_3 = _4;
Goto(bb5)
}
bb5 = {
_4 = !_3;
RET = _8.2;
Call(_8 = fn4(_4, _11, _3, _2, _4, _11, _3, _3, _4, _3, _3, _2, _4, _3, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_10 = !_11;
_8.2 = RET;
_12 = [2_usize,7_usize,0_usize,2213876156180233901_usize,5_usize,0_usize,6358663098031112515_usize,17808014411419028829_usize];
_12 = [3801191856852859629_usize,445834843706154270_usize,7340320272781659095_usize,3_usize,6_usize,0_usize,2_usize,0_usize];
_6 = 17471156032633455202_u64 as u8;
_6 = !75_u8;
_8.3 = _8.0;
_15.fld4 = 18493_u16 - 5473_u16;
_15.fld5 = _8.0;
RET = _8.2;
_4 = _2 | _2;
RET = _8.2;
_15.fld1 = !_6;
_8.3 = [_4,_3,_4,_3];
_15.fld5 = _8.0;
_18 = [_9,_1,_1,_5,_9,_1];
Goto(bb7)
}
bb7 = {
_15.fld4 = 24215_u16;
RET = _8.2;
_6 = _15.fld1;
_15.fld3 = [0_usize];
_19.3 = _8.0;
_21 = 3001862028_u32 as isize;
_23 = 16456585491143584522_u64;
_17 = RET;
Goto(bb8)
}
bb8 = {
_12 = [5_usize,18006729308315940808_usize,11929817722330495939_usize,15331268984959028363_usize,17218523500268151191_usize,15897150285911014600_usize,16249954032906343986_usize,1_usize];
RET = _8.2;
_19.3 = [_2,_3,_4,_2];
_23 = 11961191683475104330_u64;
_15.fld3 = [9136385841816506746_usize];
_18 = [_9,_1,_1,_1,_9,_21];
_19.1 = _15.fld4 as f64;
_1 = 3818225617_u32 as isize;
_15.fld1 = _6;
_11 = _10 + _10;
_8 = (_19.3, _19.1, _17, _15.fld5);
RET = _17;
_7 = core::ptr::addr_of_mut!(_15.fld6);
_22 = core::ptr::addr_of_mut!(_15.fld6);
_21 = 108151632308560737537842905414930260673_u128 as isize;
_19.3 = [_2,_4,_4,_3];
_8 = (_15.fld5, _19.1, RET, _15.fld5);
_26 = !_2;
match _15.fld4 {
24215 => bb9,
_ => bb1
}
}
bb9 = {
_21 = _5;
_19.1 = _8.1 * _8.1;
_4 = !_26;
_15.fld6 = 101756461710078989329158820431299483132_u128 * 57866074559300457300651792402722839006_u128;
_8.3 = [_4,_4,_2,_3];
_11 = !_10;
_10 = _11 * _11;
match _15.fld4 {
0 => bb1,
1 => bb2,
2 => bb7,
24215 => bb11,
_ => bb10
}
}
bb10 = {
_8.1 = 32_i8 as f64;
_8.0 = [_2,_2,_3,_4];
_2 = !_3;
_8.1 = _5 as f64;
_2 = !_3;
_2 = !_3;
RET = _8.2;
_8.3 = [_3,_2,_2,_3];
_2 = _3;
_6 = 221_u8;
_9 = 18_i8 as isize;
RET = _8.2;
_3 = !_2;
_1 = (-1072154315_i32) as isize;
_8.0 = [_3,_4,_3,_2];
_8.0 = [_3,_4,_2,_3];
_8.3 = [_2,_4,_2,_4];
_4 = !_3;
_1 = _5 & _5;
_8.3 = [_3,_3,_3,_2];
RET = _8.2;
_1 = 11614_u16 as isize;
_3 = !_2;
RET = _8.2;
Goto(bb4)
}
bb11 = {
_15.fld1 = _6 * _6;
_18 = [_21,_21,_9,_21,_5,_1];
_23 = 17998279647505459937_u64;
_27.0 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_6 = !_15.fld1;
_23 = 11200208725125224480_u64 | 1191456038829445492_u64;
Call(_14 = fn6(_15.fld5, _3, _15.fld5, _8.3, _26, _8.0, _8.3, _8, _19.3, _8, _10, _15.fld5, _26, _15.fld5, _15.fld1, _8.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_2 = !_26;
_15.fld1 = _17 as u8;
_15.fld4 = 30820_u16;
_8.2 = _17;
_11 = _3 as i32;
_8.2 = RET;
_24 = _21 & _9;
_15.fld0 = !_26;
Call(_23 = core::intrinsics::bswap(8806082789979932937_u64), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_18 = [_9,_24,_9,_1,_24,_1];
_21 = -_5;
_31 = _15.fld1 as isize;
_3 = !_15.fld0;
_32 = _15.fld4 as f32;
_4 = _26;
_24 = _6 as isize;
_24 = _31 | _1;
_24 = _21;
_19.0 = [_26,_26,_26,_15.fld0];
_9 = !_21;
_4 = _2 <= _15.fld0;
_32 = _23 as f32;
_27.1 = [(-5769485512889793303_i64)];
_1 = _24 << _11;
_15.fld1 = !_6;
_30 = 154606517544304560849892534507760383684_i128 | (-23961533957319768380424192086031212766_i128);
_19.2 = _17;
_8.1 = _19.1 * _19.1;
_8.1 = _19.1;
_15.fld5 = [_26,_3,_15.fld0,_15.fld0];
match _15.fld4 {
0 => bb6,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
30820 => bb21,
_ => bb20
}
}
bb14 = {
RET = '\u{f46fd}';
_3 = _4 == _2;
RET = '\u{2d547}';
_5 = _1 & _1;
_4 = _2 != _2;
RET = '\u{3d047}';
RET = '\u{39044}';
_5 = _1;
RET = '\u{d1e5}';
_2 = _3 == _4;
RET = '\u{8fc4a}';
_2 = _4;
_5 = (-23_i8) as isize;
_6 = 4702959857958666694_i64 as u8;
_8.1 = _1 as f64;
_8.2 = RET;
_1 = _5 | _5;
_8.3 = [_4,_2,_2,_2];
_8.0 = [_3,_3,_3,_4];
_8.0 = _8.3;
_4 = !_3;
_5 = _8.2 as isize;
_4 = _3 < _3;
RET = _8.2;
_4 = _2;
Goto(bb3)
}
bb15 = {
_15.fld1 = _6 * _6;
_18 = [_21,_21,_9,_21,_5,_1];
_23 = 17998279647505459937_u64;
_27.0 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_6 = !_15.fld1;
_23 = 11200208725125224480_u64 | 1191456038829445492_u64;
Call(_14 = fn6(_15.fld5, _3, _15.fld5, _8.3, _26, _8.0, _8.3, _8, _19.3, _8, _10, _15.fld5, _26, _15.fld5, _15.fld1, _8.0), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
_8.1 = 32_i8 as f64;
_8.0 = [_2,_2,_3,_4];
_2 = !_3;
_8.1 = _5 as f64;
_2 = !_3;
_2 = !_3;
RET = _8.2;
_8.3 = [_3,_2,_2,_3];
_2 = _3;
_6 = 221_u8;
_9 = 18_i8 as isize;
RET = _8.2;
_3 = !_2;
_1 = (-1072154315_i32) as isize;
_8.0 = [_3,_4,_3,_2];
_8.0 = [_3,_4,_2,_3];
_8.3 = [_2,_4,_2,_4];
_4 = !_3;
_1 = _5 & _5;
_8.3 = [_3,_3,_3,_2];
RET = _8.2;
_1 = 11614_u16 as isize;
_3 = !_2;
RET = _8.2;
Goto(bb4)
}
bb17 = {
_21 = _5;
_19.1 = _8.1 * _8.1;
_4 = !_26;
_15.fld6 = 101756461710078989329158820431299483132_u128 * 57866074559300457300651792402722839006_u128;
_8.3 = [_4,_4,_2,_3];
_11 = !_10;
_10 = _11 * _11;
match _15.fld4 {
0 => bb1,
1 => bb2,
2 => bb7,
24215 => bb11,
_ => bb10
}
}
bb18 = {
_12 = [5_usize,18006729308315940808_usize,11929817722330495939_usize,15331268984959028363_usize,17218523500268151191_usize,15897150285911014600_usize,16249954032906343986_usize,1_usize];
RET = _8.2;
_19.3 = [_2,_3,_4,_2];
_23 = 11961191683475104330_u64;
_15.fld3 = [9136385841816506746_usize];
_18 = [_9,_1,_1,_1,_9,_21];
_19.1 = _15.fld4 as f64;
_1 = 3818225617_u32 as isize;
_15.fld1 = _6;
_11 = _10 + _10;
_8 = (_19.3, _19.1, _17, _15.fld5);
RET = _17;
_7 = core::ptr::addr_of_mut!(_15.fld6);
_22 = core::ptr::addr_of_mut!(_15.fld6);
_21 = 108151632308560737537842905414930260673_u128 as isize;
_19.3 = [_2,_4,_4,_3];
_8 = (_15.fld5, _19.1, RET, _15.fld5);
_26 = !_2;
match _15.fld4 {
24215 => bb9,
_ => bb1
}
}
bb19 = {
_15.fld4 = 24215_u16;
RET = _8.2;
_6 = _15.fld1;
_15.fld3 = [0_usize];
_19.3 = _8.0;
_21 = 3001862028_u32 as isize;
_23 = 16456585491143584522_u64;
_17 = RET;
Goto(bb8)
}
bb20 = {
_10 = !_11;
_8.2 = RET;
_12 = [2_usize,7_usize,0_usize,2213876156180233901_usize,5_usize,0_usize,6358663098031112515_usize,17808014411419028829_usize];
_12 = [3801191856852859629_usize,445834843706154270_usize,7340320272781659095_usize,3_usize,6_usize,0_usize,2_usize,0_usize];
_6 = 17471156032633455202_u64 as u8;
_6 = !75_u8;
_8.3 = _8.0;
_15.fld4 = 18493_u16 - 5473_u16;
_15.fld5 = _8.0;
RET = _8.2;
_4 = _2 | _2;
RET = _8.2;
_15.fld1 = !_6;
_8.3 = [_4,_3,_4,_3];
_15.fld5 = _8.0;
_18 = [_9,_1,_1,_5,_9,_1];
Goto(bb7)
}
bb21 = {
_15.fld4 = 8699_u16 - 16123_u16;
_10 = _11;
_23 = _32 as u64;
_19 = (_15.fld5, _8.1, _17, _8.0);
Goto(bb22)
}
bb22 = {
Call(_33 = dump_var(3_usize, 6_usize, Move(_6), 4_usize, Move(_4), 2_usize, Move(_2), 1_usize, Move(_1)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_33 = dump_var(3_usize, 31_usize, Move(_31), 10_usize, Move(_10), 21_usize, Move(_21), 30_usize, Move(_30)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_33 = dump_var(3_usize, 27_usize, Move(_27), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: bool,mut _2: i32,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: i32,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool,mut _13: bool,mut _14: bool,mut _15: bool) -> ([bool; 4], f64, char, [bool; 4]) {
mir! {
type RET = ([bool; 4], f64, char, [bool; 4]);
let _16: isize;
let _17: [usize; 1];
let _18: *mut i8;
let _19: i64;
let _20: Adt46;
let _21: [bool; 4];
let _22: u16;
let _23: *mut bool;
let _24: *mut u128;
let _25: Adt58;
let _26: [u8; 8];
let _27: u16;
let _28: i8;
let _29: bool;
let _30: ();
let _31: ();
{
RET.1 = 1472_i16 as f64;
_15 = _5;
RET.1 = 22_u8 as f64;
_8 = _15 & _14;
_4 = _1;
RET.0 = [_7,_3,_12,_8];
_19 = (-1260571749284624612_i64) >> _6;
_16 = !9223372036854775807_isize;
_20.fld1 = !19_u8;
Call(_14 = fn5(_5, _9, _4, _7, _8, _15, _5, _3, _8, _8, _1, _15), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.1 = 9_i8 as f64;
RET.2 = '\u{6b0d5}';
_10 = !_11;
_14 = !_9;
_21 = [_1,_5,_15,_11];
_20.fld4 = 32612_u16;
_3 = _8;
_5 = _10;
Goto(bb2)
}
bb2 = {
RET.2 = '\u{fb471}';
_21 = RET.0;
_24 = core::ptr::addr_of_mut!(_20.fld6);
Goto(bb3)
}
bb3 = {
RET.1 = _6 as f64;
_16 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_21 = RET.0;
_7 = _4;
_14 = _3 | _4;
_20.fld6 = 59620161447895985357021752764969857903_u128;
RET.3 = [_8,_3,_14,_11];
_27 = _20.fld4;
_28 = 1_i8 ^ 9_i8;
_2 = _13 as i32;
_21 = [_13,_15,_14,_15];
_23 = core::ptr::addr_of_mut!(_10);
RET.1 = (*_24) as f64;
_20.fld2 = core::ptr::addr_of_mut!(_28);
RET.2 = '\u{95912}';
_29 = _5;
_20.fld1 = _20.fld4 as u8;
RET.2 = '\u{bb0fb}';
RET.1 = _28 as f64;
_29 = _10 == _4;
RET.2 = '\u{105e68}';
_20.fld5 = [_3,_10,_13,_29];
_2 = RET.2 as i32;
_20.fld2 = core::ptr::addr_of_mut!(_28);
_13 = !_4;
_7 = _1 <= _8;
_26 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
Goto(bb4)
}
bb4 = {
Call(_30 = dump_var(4_usize, 9_usize, Move(_9), 2_usize, Move(_2), 4_usize, Move(_4), 13_usize, Move(_13)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_30 = dump_var(4_usize, 6_usize, Move(_6), 1_usize, Move(_1), 16_usize, Move(_16), 8_usize, Move(_8)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_30 = dump_var(4_usize, 19_usize, Move(_19), 29_usize, Move(_29), 12_usize, Move(_12), 31_usize, _31), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool) -> bool {
mir! {
type RET = bool;
let _13: Adt57;
let _14: isize;
let _15: i16;
let _16: [bool; 4];
let _17: u16;
let _18: [u128; 7];
let _19: i32;
let _20: Adt58;
let _21: i128;
let _22: ();
let _23: ();
{
_4 = _6 <= _1;
_6 = _1 & _9;
_14 = !(-26_isize);
_2 = !_5;
_6 = !_7;
_9 = _11 < _8;
_4 = !_9;
_11 = !_7;
_15 = 21813_i16;
_5 = _3;
_14 = -(-9223372036854775808_isize);
_3 = !_7;
_18 = [133578891835049752686010304853728858119_u128,325262695931528180381310716074534848834_u128,316995836369482989344711266679786854197_u128,329732993670978050604938928999359976025_u128,250835286265347146675952950072162283788_u128,228329702058165577963685787824156028762_u128,197235552590962333389148103040171527461_u128];
_2 = _12 <= _10;
match _15 {
0 => bb1,
1 => bb2,
2 => bb3,
21813 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_2 = !_11;
_1 = !_9;
_15 = !11556_i16;
_19 = !699837992_i32;
_17 = 49224_u16;
RET = _6 >= _2;
_14 = 126_isize;
_19 = (-860016509_i32) >> _17;
_3 = _2;
_7 = !RET;
Goto(bb6)
}
bb6 = {
Call(_22 = dump_var(5_usize, 19_usize, Move(_19), 5_usize, Move(_5), 18_usize, Move(_18), 11_usize, Move(_11)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_22 = dump_var(5_usize, 15_usize, Move(_15), 17_usize, Move(_17), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [bool; 4],mut _2: bool,mut _3: [bool; 4],mut _4: [bool; 4],mut _5: bool,mut _6: [bool; 4],mut _7: [bool; 4],mut _8: ([bool; 4], f64, char, [bool; 4]),mut _9: [bool; 4],mut _10: ([bool; 4], f64, char, [bool; 4]),mut _11: i32,mut _12: [bool; 4],mut _13: bool,mut _14: [bool; 4],mut _15: u8,mut _16: [bool; 4]) -> *const i16 {
mir! {
type RET = *const i16;
let _17: Adt50;
let _18: [u16; 4];
let _19: Adt59;
let _20: Adt60;
let _21: u32;
let _22: [isize; 1];
let _23: [i128; 7];
let _24: f32;
let _25: bool;
let _26: isize;
let _27: f32;
let _28: u128;
let _29: Adt55;
let _30: bool;
let _31: isize;
let _32: *mut bool;
let _33: f32;
let _34: Adt53;
let _35: isize;
let _36: u8;
let _37: isize;
let _38: i8;
let _39: i8;
let _40: f32;
let _41: isize;
let _42: isize;
let _43: u64;
let _44: ([bool; 4], f64, char, [bool; 4]);
let _45: [u8; 8];
let _46: Adt54;
let _47: f32;
let _48: [isize; 6];
let _49: i128;
let _50: [usize; 8];
let _51: [bool; 6];
let _52: char;
let _53: Adt59;
let _54: i8;
let _55: Adt51;
let _56: Adt49;
let _57: bool;
let _58: ([isize; 6],);
let _59: [usize; 1];
let _60: (u64, *mut u128, u8, i32);
let _61: (f64,);
let _62: char;
let _63: bool;
let _64: isize;
let _65: u32;
let _66: u16;
let _67: i16;
let _68: char;
let _69: f64;
let _70: bool;
let _71: isize;
let _72: u64;
let _73: isize;
let _74: Adt53;
let _75: [i128; 7];
let _76: [i64; 1];
let _77: [usize; 1];
let _78: ([bool; 4], f64, char, [bool; 4]);
let _79: Adt47;
let _80: Adt48;
let _81: Adt51;
let _82: isize;
let _83: (isize, i16, u128, i8);
let _84: isize;
let _85: bool;
let _86: Adt58;
let _87: ();
let _88: ();
{
_8 = (_3, _10.1, _10.2, _16);
_3 = [_5,_5,_2,_13];
_1 = [_5,_2,_5,_2];
_11 = (-535499423_i32) ^ 33282613_i32;
_10 = (_7, _8.1, _8.2, _8.0);
Goto(bb1)
}
bb1 = {
_10.1 = _8.1 * _8.1;
_7 = [_5,_5,_2,_13];
_7 = [_2,_5,_5,_2];
Goto(bb2)
}
bb2 = {
_11 = !1571403188_i32;
_10.0 = [_5,_13,_2,_2];
_8 = (_9, _10.1, _10.2, _7);
_10 = (_1, _8.1, _8.2, _1);
_11 = _15 as i32;
_15 = 192_u8 - 103_u8;
_8.2 = _10.2;
_3 = [_13,_2,_13,_13];
_14 = [_5,_5,_5,_5];
_7 = [_13,_2,_5,_13];
_8.0 = _12;
_18 = [3601_u16,762_u16,17912_u16,37872_u16];
_8.0 = _14;
_18 = [58124_u16,44764_u16,65516_u16,63342_u16];
_8.2 = _10.2;
_8.0 = [_13,_13,_13,_13];
_8.2 = _10.2;
_13 = _2;
_8.3 = [_2,_13,_13,_5];
_8.0 = [_5,_5,_2,_5];
_16 = _8.0;
Goto(bb3)
}
bb3 = {
_8.1 = _10.1 - _10.1;
Call(_3 = fn7(_6, _14, _8, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8.0 = [_2,_2,_13,_5];
_4 = _12;
_2 = _13 < _13;
_13 = !_2;
_15 = !110_u8;
_10.3 = [_13,_13,_2,_2];
_10.1 = _8.1;
_11 = (-986929929_i32) - 1581606395_i32;
_9 = [_13,_13,_2,_13];
_8.1 = _10.1;
_9 = [_5,_13,_13,_13];
Goto(bb5)
}
bb5 = {
_12 = _16;
_1 = [_13,_2,_5,_13];
_10.1 = _8.1;
_9 = [_2,_5,_13,_2];
_5 = _2;
_14 = [_13,_2,_13,_13];
_20 = Adt60::Variant0 { fld0: 38084079554040184907883292410066050067_i128 };
Goto(bb6)
}
bb6 = {
_3 = [_2,_13,_2,_13];
_10 = _8;
_8.3 = [_13,_5,_5,_5];
_8.1 = 28007_i16 as f64;
_8.3 = [_13,_13,_5,_2];
_10.2 = _8.2;
_8.2 = _10.2;
_10.1 = _8.1 * _8.1;
_9 = [_13,_13,_13,_2];
_14 = [_5,_13,_5,_2];
Goto(bb7)
}
bb7 = {
_10.1 = _11 as f64;
_11 = 1192673181_i32 + (-1166725815_i32);
_8 = _10;
_23 = [(-112358037079852322818086732561863640254_i128),12763146467392741631279445121605286289_i128,(-85504340405113466623526703961502525582_i128),(-13967563553627179718760245687643100809_i128),1979100335623640018630779863379446051_i128,31338928800865342829043773271797665619_i128,94757254862403459101702907067548788309_i128];
_21 = 1732974007_u32 & 2935099872_u32;
_22 = [9223372036854775807_isize];
place!(Field::<i128>(Variant(_20, 0), 0)) = _8.1 as i128;
_10 = (_12, _8.1, _8.2, _8.0);
Goto(bb8)
}
bb8 = {
_24 = 8175591466621714932_u64 as f32;
_15 = 99_u8 * 91_u8;
_22 = [43_isize];
Call(_24 = core::intrinsics::transmute(_3), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_8 = (_4, _10.1, _10.2, _6);
_6 = [_5,_2,_2,_5];
_6 = [_5,_5,_5,_2];
place!(Field::<i128>(Variant(_20, 0), 0)) = 2546_i16 as i128;
_8.1 = 2012988619529423850_i64 as f64;
_8.0 = [_13,_2,_2,_5];
_10.0 = _9;
_8.1 = _10.1;
_14 = [_13,_2,_5,_5];
_28 = 233990650024961393082210378072014206138_u128;
_26 = 9223372036854775807_isize + 9223372036854775807_isize;
_23 = [Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0)];
_25 = !_2;
_3 = _10.0;
_10.0 = [_2,_2,_25,_2];
_30 = _24 < _24;
place!(Field::<i128>(Variant(_20, 0), 0)) = 52561_u16 as i128;
_8 = (_10.0, _10.1, _10.2, _9);
_32 = core::ptr::addr_of_mut!(_25);
_31 = _28 as isize;
_14 = _16;
match _28 {
0 => bb7,
1 => bb10,
233990650024961393082210378072014206138 => bb12,
_ => bb11
}
}
bb10 = {
_11 = !1571403188_i32;
_10.0 = [_5,_13,_2,_2];
_8 = (_9, _10.1, _10.2, _7);
_10 = (_1, _8.1, _8.2, _1);
_11 = _15 as i32;
_15 = 192_u8 - 103_u8;
_8.2 = _10.2;
_3 = [_13,_2,_13,_13];
_14 = [_5,_5,_5,_5];
_7 = [_13,_2,_5,_13];
_8.0 = _12;
_18 = [3601_u16,762_u16,17912_u16,37872_u16];
_8.0 = _14;
_18 = [58124_u16,44764_u16,65516_u16,63342_u16];
_8.2 = _10.2;
_8.0 = [_13,_13,_13,_13];
_8.2 = _10.2;
_13 = _2;
_8.3 = [_2,_13,_13,_5];
_8.0 = [_5,_5,_2,_5];
_16 = _8.0;
Goto(bb3)
}
bb11 = {
_8.0 = [_2,_2,_13,_5];
_4 = _12;
_2 = _13 < _13;
_13 = !_2;
_15 = !110_u8;
_10.3 = [_13,_13,_2,_2];
_10.1 = _8.1;
_11 = (-986929929_i32) - 1581606395_i32;
_9 = [_13,_13,_2,_13];
_8.1 = _10.1;
_9 = [_5,_13,_13,_13];
Goto(bb5)
}
bb12 = {
_27 = _26 as f32;
_22 = [_26];
_38 = 24_i8;
_31 = 15325705020889944063_u64 as isize;
_36 = _15;
_25 = _2;
_27 = 3_usize as f32;
_10.1 = _8.1 * _8.1;
_7 = [(*_32),_30,_25,_25];
_36 = _26 as u8;
_37 = _25 as isize;
_31 = _37;
_8 = _10;
_26 = _37;
_13 = !_2;
_39 = !_38;
_16 = _3;
_18 = [7896_u16,38165_u16,62090_u16,2701_u16];
_16 = [_5,_5,_30,_2];
_15 = _36;
_2 = _25;
_14 = [_2,_2,_13,_13];
_33 = _24 + _24;
match _38 {
24 => bb14,
_ => bb13
}
}
bb13 = {
_11 = !1571403188_i32;
_10.0 = [_5,_13,_2,_2];
_8 = (_9, _10.1, _10.2, _7);
_10 = (_1, _8.1, _8.2, _1);
_11 = _15 as i32;
_15 = 192_u8 - 103_u8;
_8.2 = _10.2;
_3 = [_13,_2,_13,_13];
_14 = [_5,_5,_5,_5];
_7 = [_13,_2,_5,_13];
_8.0 = _12;
_18 = [3601_u16,762_u16,17912_u16,37872_u16];
_8.0 = _14;
_18 = [58124_u16,44764_u16,65516_u16,63342_u16];
_8.2 = _10.2;
_8.0 = [_13,_13,_13,_13];
_8.2 = _10.2;
_13 = _2;
_8.3 = [_2,_13,_13,_5];
_8.0 = [_5,_5,_2,_5];
_16 = _8.0;
Goto(bb3)
}
bb14 = {
_27 = _11 as f32;
_8 = (_1, _10.1, _10.2, _7);
_15 = _36;
_41 = _37 | _26;
_41 = _26;
_8 = _10;
_12 = [_2,_2,_25,_25];
SetDiscriminant(_20, 0);
match _38 {
0 => bb1,
1 => bb11,
2 => bb9,
3 => bb4,
24 => bb16,
_ => bb15
}
}
bb15 = {
_27 = _26 as f32;
_22 = [_26];
_38 = 24_i8;
_31 = 15325705020889944063_u64 as isize;
_36 = _15;
_25 = _2;
_27 = 3_usize as f32;
_10.1 = _8.1 * _8.1;
_7 = [(*_32),_30,_25,_25];
_36 = _26 as u8;
_37 = _25 as isize;
_31 = _37;
_8 = _10;
_26 = _37;
_13 = !_2;
_39 = !_38;
_16 = _3;
_18 = [7896_u16,38165_u16,62090_u16,2701_u16];
_16 = [_5,_5,_30,_2];
_15 = _36;
_2 = _25;
_14 = [_2,_2,_13,_13];
_33 = _24 + _24;
match _38 {
24 => bb14,
_ => bb13
}
}
bb16 = {
_39 = _38;
_22 = [_26];
_45 = [_36,_15,_36,_15,_15,_15,_36,_15];
_8.3 = [_25,_30,_30,(*_32)];
_11 = (-466765672_i32);
_15 = !_36;
_40 = _24 * _24;
_10.0 = _3;
_36 = _15;
_18 = [37576_u16,28616_u16,47407_u16,4407_u16];
_10.1 = _28 as f64;
_5 = _2 | (*_32);
_33 = 168211130884547563499266435525012039291_i128 as f32;
_21 = !2356540903_u32;
_44.3 = [(*_32),_13,_13,(*_32)];
_28 = 68389618604671864086268783610798530540_u128 * 296509097499330770450379469030473271341_u128;
_9 = [_25,(*_32),_13,_2];
_30 = (*_32) != _13;
Goto(bb17)
}
bb17 = {
_44.2 = _8.2;
_12 = [_13,(*_32),(*_32),(*_32)];
_26 = _41 + _37;
_38 = _8.1 as i8;
_14 = [_13,_13,_25,_5];
_25 = _30;
_8.1 = _37 as f64;
_10.0 = [(*_32),(*_32),(*_32),_5];
_32 = core::ptr::addr_of_mut!(_25);
_1 = [_5,_2,_2,_30];
_32 = core::ptr::addr_of_mut!((*_32));
_44.1 = -_8.1;
_10 = (_14, _44.1, _44.2, _14);
_5 = !_2;
place!(Field::<i128>(Variant(_20, 0), 0)) = 121722817109036656438734180795427349449_i128 & (-56633668528654939122254570946400649710_i128);
_8.2 = _10.2;
_43 = 17184301866336564011_u64 >> _26;
_10.3 = [_25,_30,_2,(*_32)];
_44 = _8;
_23 = [Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0)];
_27 = -_40;
_8 = (_7, _44.1, _44.2, _16);
_25 = _44.1 > _44.1;
_14 = [_30,_5,_13,_5];
Goto(bb18)
}
bb18 = {
_31 = -_37;
_7 = [(*_32),_30,_25,(*_32)];
_28 = _10.2 as u128;
_10.2 = _8.2;
_43 = 4786313956797659652_u64 - 7872470184901138097_u64;
_20 = Adt60::Variant0 { fld0: 15732441633483192645392989789281081840_i128 };
_50 = [4_usize,4_usize,3_usize,7_usize,1371231174557509792_usize,4_usize,5_usize,12428768805248854344_usize];
_11 = (-1450516150_i32) & (-1287705060_i32);
Goto(bb19)
}
bb19 = {
_41 = -_37;
_52 = _44.2;
_49 = _10.2 as i128;
_3 = [_25,_2,_5,_5];
_44 = (_6, _10.1, _8.2, _8.3);
_24 = _40 - _27;
_43 = !12680401491797611664_u64;
_54 = !_38;
_44.1 = _8.1;
_10.0 = _16;
_24 = _49 as f32;
_10 = (_4, _8.1, _52, _6);
_13 = !_25;
_1 = [_25,_2,(*_32),_30];
_10.2 = _8.2;
_44.3 = _7;
_25 = _13 >= _13;
_44.0 = [(*_32),_13,_5,_30];
_1 = [_5,_5,_5,(*_32)];
_2 = !(*_32);
_40 = _27;
match _39 {
0 => bb5,
1 => bb20,
24 => bb22,
_ => bb21
}
}
bb20 = {
_10.1 = _11 as f64;
_11 = 1192673181_i32 + (-1166725815_i32);
_8 = _10;
_23 = [(-112358037079852322818086732561863640254_i128),12763146467392741631279445121605286289_i128,(-85504340405113466623526703961502525582_i128),(-13967563553627179718760245687643100809_i128),1979100335623640018630779863379446051_i128,31338928800865342829043773271797665619_i128,94757254862403459101702907067548788309_i128];
_21 = 1732974007_u32 & 2935099872_u32;
_22 = [9223372036854775807_isize];
place!(Field::<i128>(Variant(_20, 0), 0)) = _8.1 as i128;
_10 = (_12, _8.1, _8.2, _8.0);
Goto(bb8)
}
bb21 = {
_44.2 = _8.2;
_12 = [_13,(*_32),(*_32),(*_32)];
_26 = _41 + _37;
_38 = _8.1 as i8;
_14 = [_13,_13,_25,_5];
_25 = _30;
_8.1 = _37 as f64;
_10.0 = [(*_32),(*_32),(*_32),_5];
_32 = core::ptr::addr_of_mut!(_25);
_1 = [_5,_2,_2,_30];
_32 = core::ptr::addr_of_mut!((*_32));
_44.1 = -_8.1;
_10 = (_14, _44.1, _44.2, _14);
_5 = !_2;
place!(Field::<i128>(Variant(_20, 0), 0)) = 121722817109036656438734180795427349449_i128 & (-56633668528654939122254570946400649710_i128);
_8.2 = _10.2;
_43 = 17184301866336564011_u64 >> _26;
_10.3 = [_25,_30,_2,(*_32)];
_44 = _8;
_23 = [Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0)];
_27 = -_40;
_8 = (_7, _44.1, _44.2, _16);
_25 = _44.1 > _44.1;
_14 = [_30,_5,_13,_5];
Goto(bb18)
}
bb22 = {
_12 = _6;
_3 = _44.3;
_24 = _40 - _27;
_45 = [_15,_15,_15,_15,_36,_36,_15,_15];
match _39 {
0 => bb23,
1 => bb24,
2 => bb25,
3 => bb26,
4 => bb27,
24 => bb29,
_ => bb28
}
}
bb23 = {
_11 = !1571403188_i32;
_10.0 = [_5,_13,_2,_2];
_8 = (_9, _10.1, _10.2, _7);
_10 = (_1, _8.1, _8.2, _1);
_11 = _15 as i32;
_15 = 192_u8 - 103_u8;
_8.2 = _10.2;
_3 = [_13,_2,_13,_13];
_14 = [_5,_5,_5,_5];
_7 = [_13,_2,_5,_13];
_8.0 = _12;
_18 = [3601_u16,762_u16,17912_u16,37872_u16];
_8.0 = _14;
_18 = [58124_u16,44764_u16,65516_u16,63342_u16];
_8.2 = _10.2;
_8.0 = [_13,_13,_13,_13];
_8.2 = _10.2;
_13 = _2;
_8.3 = [_2,_13,_13,_5];
_8.0 = [_5,_5,_2,_5];
_16 = _8.0;
Goto(bb3)
}
bb24 = {
_12 = _16;
_1 = [_13,_2,_5,_13];
_10.1 = _8.1;
_9 = [_2,_5,_13,_2];
_5 = _2;
_14 = [_13,_2,_13,_13];
_20 = Adt60::Variant0 { fld0: 38084079554040184907883292410066050067_i128 };
Goto(bb6)
}
bb25 = {
_8 = (_4, _10.1, _10.2, _6);
_6 = [_5,_2,_2,_5];
_6 = [_5,_5,_5,_2];
place!(Field::<i128>(Variant(_20, 0), 0)) = 2546_i16 as i128;
_8.1 = 2012988619529423850_i64 as f64;
_8.0 = [_13,_2,_2,_5];
_10.0 = _9;
_8.1 = _10.1;
_14 = [_13,_2,_5,_5];
_28 = 233990650024961393082210378072014206138_u128;
_26 = 9223372036854775807_isize + 9223372036854775807_isize;
_23 = [Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0),Field::<i128>(Variant(_20, 0), 0)];
_25 = !_2;
_3 = _10.0;
_10.0 = [_2,_2,_25,_2];
_30 = _24 < _24;
place!(Field::<i128>(Variant(_20, 0), 0)) = 52561_u16 as i128;
_8 = (_10.0, _10.1, _10.2, _9);
_32 = core::ptr::addr_of_mut!(_25);
_31 = _28 as isize;
_14 = _16;
match _28 {
0 => bb7,
1 => bb10,
233990650024961393082210378072014206138 => bb12,
_ => bb11
}
}
bb26 = {
_31 = -_37;
_7 = [(*_32),_30,_25,(*_32)];
_28 = _10.2 as u128;
_10.2 = _8.2;
_43 = 4786313956797659652_u64 - 7872470184901138097_u64;
_20 = Adt60::Variant0 { fld0: 15732441633483192645392989789281081840_i128 };
_50 = [4_usize,4_usize,3_usize,7_usize,1371231174557509792_usize,4_usize,5_usize,12428768805248854344_usize];
_11 = (-1450516150_i32) & (-1287705060_i32);
Goto(bb19)
}
bb27 = {
_8.0 = [_2,_2,_13,_5];
_4 = _12;
_2 = _13 < _13;
_13 = !_2;
_15 = !110_u8;
_10.3 = [_13,_13,_2,_2];
_10.1 = _8.1;
_11 = (-986929929_i32) - 1581606395_i32;
_9 = [_13,_13,_2,_13];
_8.1 = _10.1;
_9 = [_5,_13,_13,_13];
Goto(bb5)
}
bb28 = {
_10.1 = _11 as f64;
_11 = 1192673181_i32 + (-1166725815_i32);
_8 = _10;
_23 = [(-112358037079852322818086732561863640254_i128),12763146467392741631279445121605286289_i128,(-85504340405113466623526703961502525582_i128),(-13967563553627179718760245687643100809_i128),1979100335623640018630779863379446051_i128,31338928800865342829043773271797665619_i128,94757254862403459101702907067548788309_i128];
_21 = 1732974007_u32 & 2935099872_u32;
_22 = [9223372036854775807_isize];
place!(Field::<i128>(Variant(_20, 0), 0)) = _8.1 as i128;
_10 = (_12, _8.1, _8.2, _8.0);
Goto(bb8)
}
bb29 = {
_51 = [_13,_25,(*_32),_5,_2,(*_32)];
_42 = _36 as isize;
_8.2 = _52;
_22 = [_26];
_44.2 = _10.2;
_31 = _41;
_25 = _10.1 > _10.1;
_44.1 = _8.1 - _10.1;
_21 = 1402664783_u32;
_21 = 51673625_u32 & 236666909_u32;
_13 = _5;
_20 = Adt60::Variant0 { fld0: _49 };
_51 = [_5,_2,_2,(*_32),_13,_5];
_10.2 = _44.2;
_56 = Adt49::Variant1 { fld0: _18,fld1: _49,fld2: _45 };
_32 = core::ptr::addr_of_mut!(_5);
_6 = _16;
_44.0 = [_2,_13,_25,_5];
_31 = _37 ^ _26;
Goto(bb30)
}
bb30 = {
_18 = Field::<[u16; 4]>(Variant(_56, 1), 0);
_40 = _24 + _27;
_18 = [12474_u16,22770_u16,2594_u16,1175_u16];
_52 = _8.2;
_24 = _40;
_10.0 = [(*_32),(*_32),_2,_13];
_32 = core::ptr::addr_of_mut!(_25);
_8.2 = _44.2;
_14 = _6;
_37 = !_26;
_39 = _54 + _38;
_56 = Adt49::Variant1 { fld0: _18,fld1: _49,fld2: _45 };
_28 = _54 as u128;
_8.1 = -_44.1;
_44.1 = _10.1;
_25 = _5 ^ _2;
_44.2 = _10.2;
_1 = [_25,_30,_30,_2];
_2 = _30;
_44 = (_10.0, _8.1, _52, _1);
_49 = Field::<i128>(Variant(_20, 0), 0) << _31;
_22 = [_26];
Goto(bb31)
}
bb31 = {
_42 = !_41;
_21 = 1578962153_u32 + 3158632481_u32;
_14 = [_30,_13,_5,_2];
_51 = [_30,_2,_25,_25,_30,_2];
_52 = _44.2;
_48 = [_37,_31,_31,_42,_26,_31];
_27 = _40 * _40;
_60.3 = -_11;
_22 = [_26];
_8.1 = -_44.1;
_48 = [_26,_31,_31,_42,_41,_41];
_27 = -_40;
_58 = (_48,);
_35 = 27180_i16 as isize;
_3 = [(*_32),_13,_13,(*_32)];
_5 = _2;
_44.2 = _52;
_16 = [_30,_25,(*_32),_30];
_58.0 = _48;
SetDiscriminant(_56, 1);
_54 = _38 * _39;
place!(Field::<[u8; 8]>(Variant(_56, 1), 2)) = [_15,_15,_15,_15,_36,_15,_15,_36];
_62 = _52;
_21 = !1712736021_u32;
_63 = !(*_32);
Call(_29 = fn8(_49, _48, _30, _37, _5, _48, _42, _14, _22, (*_32), _44.1, _30, _37, _37, _9), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
_10 = _44;
_39 = -_54;
_40 = (-18744_i16) as f32;
_7 = _44.3;
_49 = _10.1 as i128;
_63 = !(*_32);
_36 = Field::<i128>(Variant(_29, 0), 0) as u8;
_28 = 146562522333833804108218817962857221307_u128 - 73156570268230431668667287040833226423_u128;
_15 = !_36;
_30 = !_63;
_6 = [_63,_13,(*_32),_2];
_20 = Adt60::Variant1 { fld0: _10 };
_44 = (_14, Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0).1, Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0).2, Field::<[bool; 4]>(Variant(_29, 0), 4));
_39 = -_54;
_60.3 = _11 << _15;
Goto(bb33)
}
bb33 = {
_7 = _4;
_60.2 = _15;
Call(_47 = core::intrinsics::transmute(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0).0), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_5 = !_63;
_59 = Field::<[usize; 1]>(Variant(_29, 0), 2);
_24 = Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0).1 as f32;
_67 = (-9388_i16);
_54 = _27 as i8;
_1 = [_5,_13,_5,(*_32)];
_8.1 = -Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0).1;
_20 = Adt60::Variant0 { fld0: Field::<i128>(Variant(_29, 0), 0) };
match _67 {
0 => bb22,
1 => bb23,
2 => bb25,
3 => bb27,
340282366920938463463374607431768202068 => bb35,
_ => bb18
}
}
bb35 = {
_44 = (_7, _8.1, _62, _9);
_64 = _37;
_8.1 = _44.1 * _44.1;
_40 = _47 * _24;
place!(Field::<i128>(Variant(_56, 1), 1)) = _28 as i128;
_44.0 = [_30,_25,(*_32),_63];
_1 = [_63,_30,_25,_25];
place!(Field::<[usize; 1]>(Variant(_29, 0), 2)) = _59;
_16 = [_25,_13,_30,_13];
place!(Field::<[u64; 5]>(Variant(_29, 0), 1)) = [_43,_43,_43,_43,_43];
_56 = Adt49::Variant1 { fld0: _18,fld1: _49,fld2: _45 };
_60.1 = core::ptr::addr_of_mut!(_28);
_28 = _10.1 as u128;
_71 = _42 | _31;
_11 = !_60.3;
Goto(bb36)
}
bb36 = {
_72 = !_43;
_7 = [_5,_5,_13,_30];
_60.2 = _36 - _36;
place!(Field::<[usize; 1]>(Variant(_29, 0), 2)) = _59;
_70 = _30;
_48 = _58.0;
_61 = (_10.1,);
_58 = (_48,);
_4 = [_2,_30,(*_32),(*_32)];
place!(Field::<[i32; 3]>(Variant(_29, 0), 3)) = [_11,_11,_60.3];
_54 = _39;
_11 = _60.3 | _60.3;
_50 = [12930402950759806926_usize,11527288928333373873_usize,3_usize,6_usize,6_usize,2047611087802428790_usize,1680612569534402063_usize,2175682328385933214_usize];
_65 = _21;
_65 = _60.3 as u32;
_24 = _65 as f32;
_77 = [6_usize];
_12 = [(*_32),_5,(*_32),_25];
_26 = _54 as isize;
_63 = _70;
_78 = (_7, _8.1, _10.2, _12);
SetDiscriminant(_20, 1);
match _67 {
0 => bb11,
1 => bb18,
2 => bb13,
3 => bb37,
4 => bb38,
5 => bb39,
6 => bb40,
340282366920938463463374607431768202068 => bb42,
_ => bb41
}
}
bb37 = {
_51 = [_13,_25,(*_32),_5,_2,(*_32)];
_42 = _36 as isize;
_8.2 = _52;
_22 = [_26];
_44.2 = _10.2;
_31 = _41;
_25 = _10.1 > _10.1;
_44.1 = _8.1 - _10.1;
_21 = 1402664783_u32;
_21 = 51673625_u32 & 236666909_u32;
_13 = _5;
_20 = Adt60::Variant0 { fld0: _49 };
_51 = [_5,_2,_2,(*_32),_13,_5];
_10.2 = _44.2;
_56 = Adt49::Variant1 { fld0: _18,fld1: _49,fld2: _45 };
_32 = core::ptr::addr_of_mut!(_5);
_6 = _16;
_44.0 = [_2,_13,_25,_5];
_31 = _37 ^ _26;
Goto(bb30)
}
bb38 = {
_8.1 = _10.1 - _10.1;
Call(_3 = fn7(_6, _14, _8, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb39 = {
_11 = !1571403188_i32;
_10.0 = [_5,_13,_2,_2];
_8 = (_9, _10.1, _10.2, _7);
_10 = (_1, _8.1, _8.2, _1);
_11 = _15 as i32;
_15 = 192_u8 - 103_u8;
_8.2 = _10.2;
_3 = [_13,_2,_13,_13];
_14 = [_5,_5,_5,_5];
_7 = [_13,_2,_5,_13];
_8.0 = _12;
_18 = [3601_u16,762_u16,17912_u16,37872_u16];
_8.0 = _14;
_18 = [58124_u16,44764_u16,65516_u16,63342_u16];
_8.2 = _10.2;
_8.0 = [_13,_13,_13,_13];
_8.2 = _10.2;
_13 = _2;
_8.3 = [_2,_13,_13,_5];
_8.0 = [_5,_5,_2,_5];
_16 = _8.0;
Goto(bb3)
}
bb40 = {
_31 = -_37;
_7 = [(*_32),_30,_25,(*_32)];
_28 = _10.2 as u128;
_10.2 = _8.2;
_43 = 4786313956797659652_u64 - 7872470184901138097_u64;
_20 = Adt60::Variant0 { fld0: 15732441633483192645392989789281081840_i128 };
_50 = [4_usize,4_usize,3_usize,7_usize,1371231174557509792_usize,4_usize,5_usize,12428768805248854344_usize];
_11 = (-1450516150_i32) & (-1287705060_i32);
Goto(bb19)
}
bb41 = {
_8.0 = [_2,_2,_13,_5];
_4 = _12;
_2 = _13 < _13;
_13 = !_2;
_15 = !110_u8;
_10.3 = [_13,_13,_2,_2];
_10.1 = _8.1;
_11 = (-986929929_i32) - 1581606395_i32;
_9 = [_13,_13,_2,_13];
_8.1 = _10.1;
_9 = [_5,_13,_13,_13];
Goto(bb5)
}
bb42 = {
_15 = _28 as u8;
_63 = _13 >= (*_32);
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0)).3 = _8.0;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0)).0 = _14;
_12 = [_63,(*_32),_70,(*_32)];
Goto(bb43)
}
bb43 = {
_10.1 = _8.1;
_78.1 = _8.1;
_15 = _60.2;
_72 = _43;
_23 = [Field::<i128>(Variant(_56, 1), 1),_49,Field::<i128>(Variant(_56, 1), 1),_49,_49,Field::<i128>(Variant(_56, 1), 1),_49];
SetDiscriminant(_56, 1);
_66 = 47199_u16;
_70 = _63 | _63;
_73 = _31 >> _11;
_10.1 = -_78.1;
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_20, 1), 0)).0 = [_70,_63,(*_32),(*_32)];
SetDiscriminant(_29, 1);
_8.1 = -_78.1;
_30 = !_13;
Goto(bb44)
}
bb44 = {
_44.3 = _8.3;
_35 = _71 >> _42;
_38 = -_39;
_69 = -_10.1;
RET = core::ptr::addr_of!(_67);
_25 = _70;
_48 = [_35,_35,_35,_41,_64,_37];
place!(Field::<Adt45>(Variant(_29, 1), 0)) = Adt45::Variant0 { fld0: _77 };
_49 = 6098854333507961203459196441875483005_i128;
_60.1 = core::ptr::addr_of_mut!(_83.2);
_10.1 = _8.1;
_32 = core::ptr::addr_of_mut!(_63);
_73 = _37 | _35;
_12 = [_13,_13,_25,_25];
_73 = !_71;
place!(Field::<f64>(Variant(_29, 1), 7)) = -_10.1;
_86 = Adt58::Variant2 { fld0: _72,fld1: _61,fld2: _45,fld3: _59,fld4: _78 };
_8.2 = _52;
_27 = _47;
_66 = 6633_u16;
_44.2 = Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_86, 2), 4).2;
_16 = [_63,_2,_2,_25];
Goto(bb45)
}
bb45 = {
Call(_87 = dump_var(6_usize, 31_usize, Move(_31), 65_usize, Move(_65), 23_usize, Move(_23), 26_usize, Move(_26)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_87 = dump_var(6_usize, 73_usize, Move(_73), 42_usize, Move(_42), 22_usize, Move(_22), 43_usize, Move(_43)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_87 = dump_var(6_usize, 64_usize, Move(_64), 35_usize, Move(_35), 41_usize, Move(_41), 13_usize, Move(_13)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_87 = dump_var(6_usize, 39_usize, Move(_39), 9_usize, Move(_9), 51_usize, Move(_51), 5_usize, Move(_5)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Call(_87 = dump_var(6_usize, 59_usize, Move(_59), 67_usize, Move(_67), 71_usize, Move(_71), 6_usize, Move(_6)), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
Call(_87 = dump_var(6_usize, 52_usize, Move(_52), 37_usize, Move(_37), 28_usize, Move(_28), 45_usize, Move(_45)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_87 = dump_var(6_usize, 1_usize, Move(_1), 88_usize, _88, 88_usize, _88, 88_usize, _88), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [bool; 4],mut _2: [bool; 4],mut _3: ([bool; 4], f64, char, [bool; 4]),mut _4: bool) -> [bool; 4] {
mir! {
type RET = [bool; 4];
let _5: *mut u128;
let _6: *const &'static ([isize; 6],);
let _7: [u8; 8];
let _8: Adt60;
let _9: i64;
let _10: [isize; 1];
let _11: ();
let _12: ();
{
RET = _3.0;
RET = [_4,_4,_4,_4];
RET = [_4,_4,_4,_4];
RET = [_4,_4,_4,_4];
_1 = [_4,_4,_4,_4];
_3.1 = 6725763349808070507_usize as f64;
_2 = RET;
_3.0 = [_4,_4,_4,_4];
_1 = _2;
RET = [_4,_4,_4,_4];
RET = _2;
_2 = _3.3;
_1 = RET;
_3.2 = '\u{df2f8}';
_9 = 9223372036854775807_isize as i64;
_3.1 = 12441130946447903539_u64 as f64;
_1 = _3.3;
_3.0 = [_4,_4,_4,_4];
_7 = [97_u8,192_u8,129_u8,177_u8,127_u8,154_u8,95_u8,77_u8];
_8 = Adt60::Variant1 { fld0: _3 };
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(7_usize, 7_usize, Move(_7), 1_usize, Move(_1), 12_usize, _12, 12_usize, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: i128,mut _2: [isize; 6],mut _3: bool,mut _4: isize,mut _5: bool,mut _6: [isize; 6],mut _7: isize,mut _8: [bool; 4],mut _9: [isize; 1],mut _10: bool,mut _11: f64,mut _12: bool,mut _13: isize,mut _14: isize,mut _15: [bool; 4]) -> Adt55 {
mir! {
type RET = Adt55;
let _16: [i32; 3];
let _17: [bool; 6];
let _18: Adt59;
let _19: Adt49;
let _20: [i128; 7];
let _21: [usize; 8];
let _22: [bool; 4];
let _23: *mut i8;
let _24: (f64,);
let _25: [i32; 3];
let _26: f64;
let _27: [u128; 7];
let _28: (f64, &'static ([isize; 6],));
let _29: f32;
let _30: [i128; 7];
let _31: i8;
let _32: f32;
let _33: Adt54;
let _34: bool;
let _35: f64;
let _36: u8;
let _37: f32;
let _38: i8;
let _39: ([u16; 4], [i64; 1]);
let _40: Adt50;
let _41: usize;
let _42: Adt60;
let _43: *const i16;
let _44: [u128; 7];
let _45: u64;
let _46: i32;
let _47: Adt58;
let _48: *const &'static ([isize; 6],);
let _49: i16;
let _50: f64;
let _51: ([u16; 4], [i64; 1]);
let _52: Adt48;
let _53: [u64; 5];
let _54: [i32; 3];
let _55: Adt60;
let _56: isize;
let _57: f64;
let _58: ();
let _59: ();
{
_8 = [_3,_5,_5,_3];
_17 = [_3,_12,_3,_5,_10,_12];
_3 = _5 < _10;
_8 = [_10,_10,_10,_3];
_8 = _15;
_11 = 2899997378338614374_usize as f64;
_6 = [_4,_14,_14,_4,_4,_14];
_14 = _13;
_11 = 43_i8 as f64;
_14 = _4 | _4;
_7 = _4 & _13;
_13 = -_4;
_5 = _7 < _14;
_2 = _6;
_8 = [_10,_10,_10,_3];
_7 = _14;
_20 = [_1,_1,_1,_1,_1,_1,_1];
_6 = [_7,_7,_14,_13,_4,_13];
_9 = [_13];
Call(_9 = fn9(_14, _4, _6, _2, _14, _5, _13), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_21 = [3_usize,778920517408840502_usize,5_usize,11946199087589018910_usize,6_usize,15295720055044865839_usize,2_usize,17588053502254132997_usize];
_10 = _4 > _4;
_21 = [15487120241581036989_usize,0_usize,16284004430111569105_usize,16042050525794739516_usize,7_usize,9585770541838625518_usize,1_usize,5_usize];
_22 = _15;
_14 = _4 | _4;
_10 = _5;
_3 = !_12;
_7 = _14;
_9 = [_4];
_8 = [_10,_10,_12,_12];
_13 = _14 ^ _14;
_10 = !_3;
_9 = [_13];
_25 = [(-919166517_i32),(-72246924_i32),751387425_i32];
_2 = [_13,_14,_4,_13,_4,_13];
_26 = _11 * _11;
_15 = _8;
_9 = [_14];
_24.0 = _11 + _26;
_16 = [(-1301748524_i32),1975800619_i32,781400541_i32];
Goto(bb2)
}
bb2 = {
_17 = [_12,_10,_10,_10,_12,_3];
Call(_13 = fn10(_14, _4, _9, _2, _7, _10, _6, _17, _12, _3, _6, _14, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_22 = [_5,_10,_3,_5];
_21 = [0_usize,17146943875892131076_usize,14598356711750476267_usize,7_usize,7014906648356244344_usize,263798758305875403_usize,5_usize,3_usize];
_2 = _6;
_10 = !_12;
Goto(bb4)
}
bb4 = {
_11 = _24.0;
_2 = _6;
Goto(bb5)
}
bb5 = {
_25 = [(-1137399063_i32),1391634423_i32,(-1286736300_i32)];
_8 = [_10,_5,_12,_10];
_28.0 = _26 * _11;
_5 = _3 ^ _3;
_27 = [293372330595312298365929402311708557371_u128,234048244038748947401979463145042288356_u128,249651142590620595718764610259421925231_u128,271659265962571942788625985285219472334_u128,134107856765694016061710679347096287007_u128,41093314609550760647926976603769024171_u128,239600630980111081030756372053680656238_u128];
_15 = [_3,_10,_12,_5];
_16 = _25;
_16 = _25;
_3 = _24.0 > _26;
_29 = 906984057_u32 as f32;
Goto(bb6)
}
bb6 = {
_22 = [_5,_5,_3,_12];
_24.0 = _28.0 * _26;
_25 = [(-126986362_i32),984962019_i32,(-1400401692_i32)];
_30 = [_1,_1,_1,_1,_1,_1,_1];
_20 = _30;
_3 = _12;
Goto(bb7)
}
bb7 = {
_1 = 6262674357739355192704810000190683555_i128 * (-147928572361464345129316038434472413228_i128);
_11 = _4 as f64;
_30 = [_1,_1,_1,_1,_1,_1,_1];
_35 = -_11;
_9 = [_14];
_11 = _35 - _28.0;
_11 = -_35;
_21 = [12294470965764604345_usize,7880914208303912833_usize,0_usize,14161045671645390970_usize,9941129992622171982_usize,2_usize,4_usize,15270476644282552299_usize];
_31 = (-101_i8);
_27 = [297864363561011888415650616905345276485_u128,20251583439487770123065580065085891782_u128,266072093773875156968707042043959299539_u128,180603560837009245489863444630516126722_u128,42994639875319383235056152152796539131_u128,334710042112998273318319267582998216024_u128,18962176409325836654466212446692613774_u128];
_27 = [180753500036284605194238002541072432291_u128,267495026427161865409353312684834617971_u128,124653222614634994634412564116399366941_u128,149179459976186088793744318040824261131_u128,287628821829737554787540326924738973669_u128,208235041408484442135604006098299496661_u128,258011645858267071836472146248602969004_u128];
_32 = _14 as f32;
_9 = [_14];
_17 = [_3,_5,_5,_5,_10,_5];
_8 = [_3,_10,_3,_5];
_24 = (_11,);
_24 = (_35,);
_38 = _31;
_3 = _11 < _35;
_35 = (-1703814151_i32) as f64;
_15 = _22;
_23 = core::ptr::addr_of_mut!(_38);
_10 = !_12;
_4 = (-5001_i16) as isize;
match _31 {
0 => bb5,
1 => bb6,
340282366920938463463374607431768211355 => bb8,
_ => bb4
}
}
bb8 = {
_17 = [_12,_12,_12,_10,_10,_3];
_21 = [14187664894938189026_usize,5337809580605502615_usize,9085081822907002869_usize,4468707549617390864_usize,11234860312892026616_usize,5_usize,7927749634154550191_usize,6_usize];
_41 = !7_usize;
_42 = Adt60::Variant0 { fld0: _1 };
_34 = _10;
_30 = [Field::<i128>(Variant(_42, 0), 0),_1,_1,Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),_1,_1];
_16 = [1800337559_i32,(-402473212_i32),413424622_i32];
_39.0 = [62223_u16,16452_u16,48762_u16,23051_u16];
_28.0 = _26 + _24.0;
_41 = 17798373969611234821_usize & 1_usize;
_7 = Field::<i128>(Variant(_42, 0), 0) as isize;
_36 = !191_u8;
_15 = [_12,_3,_10,_3];
_29 = _32;
match (*_23) {
340282366920938463463374607431768211355 => bb10,
_ => bb9
}
}
bb9 = {
_22 = [_5,_5,_3,_12];
_24.0 = _28.0 * _26;
_25 = [(-126986362_i32),984962019_i32,(-1400401692_i32)];
_30 = [_1,_1,_1,_1,_1,_1,_1];
_20 = _30;
_3 = _12;
Goto(bb7)
}
bb10 = {
_15 = [_34,_34,_34,_5];
_41 = Field::<i128>(Variant(_42, 0), 0) as usize;
_23 = core::ptr::addr_of_mut!(_38);
_22 = _8;
_20 = [Field::<i128>(Variant(_42, 0), 0),_1,Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0)];
_13 = _14;
_5 = _13 > _14;
_13 = !_14;
match _31 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211355 => bb14,
_ => bb13
}
}
bb11 = {
_22 = [_5,_10,_3,_5];
_21 = [0_usize,17146943875892131076_usize,14598356711750476267_usize,7_usize,7014906648356244344_usize,263798758305875403_usize,5_usize,3_usize];
_2 = _6;
_10 = !_12;
Goto(bb4)
}
bb12 = {
_25 = [(-1137399063_i32),1391634423_i32,(-1286736300_i32)];
_8 = [_10,_5,_12,_10];
_28.0 = _26 * _11;
_5 = _3 ^ _3;
_27 = [293372330595312298365929402311708557371_u128,234048244038748947401979463145042288356_u128,249651142590620595718764610259421925231_u128,271659265962571942788625985285219472334_u128,134107856765694016061710679347096287007_u128,41093314609550760647926976603769024171_u128,239600630980111081030756372053680656238_u128];
_15 = [_3,_10,_12,_5];
_16 = _25;
_16 = _25;
_3 = _24.0 > _26;
_29 = 906984057_u32 as f32;
Goto(bb6)
}
bb13 = {
_1 = 6262674357739355192704810000190683555_i128 * (-147928572361464345129316038434472413228_i128);
_11 = _4 as f64;
_30 = [_1,_1,_1,_1,_1,_1,_1];
_35 = -_11;
_9 = [_14];
_11 = _35 - _28.0;
_11 = -_35;
_21 = [12294470965764604345_usize,7880914208303912833_usize,0_usize,14161045671645390970_usize,9941129992622171982_usize,2_usize,4_usize,15270476644282552299_usize];
_31 = (-101_i8);
_27 = [297864363561011888415650616905345276485_u128,20251583439487770123065580065085891782_u128,266072093773875156968707042043959299539_u128,180603560837009245489863444630516126722_u128,42994639875319383235056152152796539131_u128,334710042112998273318319267582998216024_u128,18962176409325836654466212446692613774_u128];
_27 = [180753500036284605194238002541072432291_u128,267495026427161865409353312684834617971_u128,124653222614634994634412564116399366941_u128,149179459976186088793744318040824261131_u128,287628821829737554787540326924738973669_u128,208235041408484442135604006098299496661_u128,258011645858267071836472146248602969004_u128];
_32 = _14 as f32;
_9 = [_14];
_17 = [_3,_5,_5,_5,_10,_5];
_8 = [_3,_10,_3,_5];
_24 = (_11,);
_24 = (_35,);
_38 = _31;
_3 = _11 < _35;
_35 = (-1703814151_i32) as f64;
_15 = _22;
_23 = core::ptr::addr_of_mut!(_38);
_10 = !_12;
_4 = (-5001_i16) as isize;
match _31 {
0 => bb5,
1 => bb6,
340282366920938463463374607431768211355 => bb8,
_ => bb4
}
}
bb14 = {
_7 = _41 as isize;
_13 = (-1337554549_i32) as isize;
_12 = _10;
_28.0 = _24.0;
match _31 {
0 => bb15,
1 => bb16,
2 => bb17,
3 => bb18,
340282366920938463463374607431768211355 => bb20,
_ => bb19
}
}
bb15 = {
_17 = [_12,_10,_10,_10,_12,_3];
Call(_13 = fn10(_14, _4, _9, _2, _7, _10, _6, _17, _12, _3, _6, _14, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_22 = [_5,_5,_3,_12];
_24.0 = _28.0 * _26;
_25 = [(-126986362_i32),984962019_i32,(-1400401692_i32)];
_30 = [_1,_1,_1,_1,_1,_1,_1];
_20 = _30;
_3 = _12;
Goto(bb7)
}
bb17 = {
_21 = [3_usize,778920517408840502_usize,5_usize,11946199087589018910_usize,6_usize,15295720055044865839_usize,2_usize,17588053502254132997_usize];
_10 = _4 > _4;
_21 = [15487120241581036989_usize,0_usize,16284004430111569105_usize,16042050525794739516_usize,7_usize,9585770541838625518_usize,1_usize,5_usize];
_22 = _15;
_14 = _4 | _4;
_10 = _5;
_3 = !_12;
_7 = _14;
_9 = [_4];
_8 = [_10,_10,_12,_12];
_13 = _14 ^ _14;
_10 = !_3;
_9 = [_13];
_25 = [(-919166517_i32),(-72246924_i32),751387425_i32];
_2 = [_13,_14,_4,_13,_4,_13];
_26 = _11 * _11;
_15 = _8;
_9 = [_14];
_24.0 = _11 + _26;
_16 = [(-1301748524_i32),1975800619_i32,781400541_i32];
Goto(bb2)
}
bb18 = {
_1 = 6262674357739355192704810000190683555_i128 * (-147928572361464345129316038434472413228_i128);
_11 = _4 as f64;
_30 = [_1,_1,_1,_1,_1,_1,_1];
_35 = -_11;
_9 = [_14];
_11 = _35 - _28.0;
_11 = -_35;
_21 = [12294470965764604345_usize,7880914208303912833_usize,0_usize,14161045671645390970_usize,9941129992622171982_usize,2_usize,4_usize,15270476644282552299_usize];
_31 = (-101_i8);
_27 = [297864363561011888415650616905345276485_u128,20251583439487770123065580065085891782_u128,266072093773875156968707042043959299539_u128,180603560837009245489863444630516126722_u128,42994639875319383235056152152796539131_u128,334710042112998273318319267582998216024_u128,18962176409325836654466212446692613774_u128];
_27 = [180753500036284605194238002541072432291_u128,267495026427161865409353312684834617971_u128,124653222614634994634412564116399366941_u128,149179459976186088793744318040824261131_u128,287628821829737554787540326924738973669_u128,208235041408484442135604006098299496661_u128,258011645858267071836472146248602969004_u128];
_32 = _14 as f32;
_9 = [_14];
_17 = [_3,_5,_5,_5,_10,_5];
_8 = [_3,_10,_3,_5];
_24 = (_11,);
_24 = (_35,);
_38 = _31;
_3 = _11 < _35;
_35 = (-1703814151_i32) as f64;
_15 = _22;
_23 = core::ptr::addr_of_mut!(_38);
_10 = !_12;
_4 = (-5001_i16) as isize;
match _31 {
0 => bb5,
1 => bb6,
340282366920938463463374607431768211355 => bb8,
_ => bb4
}
}
bb19 = {
_25 = [(-1137399063_i32),1391634423_i32,(-1286736300_i32)];
_8 = [_10,_5,_12,_10];
_28.0 = _26 * _11;
_5 = _3 ^ _3;
_27 = [293372330595312298365929402311708557371_u128,234048244038748947401979463145042288356_u128,249651142590620595718764610259421925231_u128,271659265962571942788625985285219472334_u128,134107856765694016061710679347096287007_u128,41093314609550760647926976603769024171_u128,239600630980111081030756372053680656238_u128];
_15 = [_3,_10,_12,_5];
_16 = _25;
_16 = _25;
_3 = _24.0 > _26;
_29 = 906984057_u32 as f32;
Goto(bb6)
}
bb20 = {
place!(Field::<i128>(Variant(_42, 0), 0)) = -_1;
_39.1 = [(-8088303503406726860_i64)];
SetDiscriminant(_42, 1);
_42 = Adt60::Variant0 { fld0: _1 };
_10 = _3;
_36 = 5495673148634608683_u64 as u8;
_36 = 184_u8 >> _14;
_2 = [_14,_14,_14,_14,_4,_14];
_12 = !_34;
place!(Field::<i128>(Variant(_42, 0), 0)) = _1;
_26 = -_24.0;
_1 = !Field::<i128>(Variant(_42, 0), 0);
_16 = _25;
_10 = !_34;
_12 = !_5;
_37 = 50993_u16 as f32;
_44 = [239353980181728034981590084158330608852_u128,69755221743912142419205186425796237807_u128,280941127830202127802940074169319214292_u128,10436963089218066437235041050135598402_u128,175844551745106313495182972957516512589_u128,101613769526517334213186416677713162727_u128,219137905336144827519173684189096752436_u128];
_39.1 = [4456773613360361717_i64];
_17 = [_5,_34,_12,_3,_12,_34];
_37 = -_32;
_10 = _5;
_27 = _44;
_22 = [_10,_5,_5,_10];
_5 = _26 <= _26;
_22 = _15;
match (*_23) {
0 => bb21,
1 => bb22,
2 => bb23,
340282366920938463463374607431768211355 => bb25,
_ => bb24
}
}
bb21 = {
_25 = [(-1137399063_i32),1391634423_i32,(-1286736300_i32)];
_8 = [_10,_5,_12,_10];
_28.0 = _26 * _11;
_5 = _3 ^ _3;
_27 = [293372330595312298365929402311708557371_u128,234048244038748947401979463145042288356_u128,249651142590620595718764610259421925231_u128,271659265962571942788625985285219472334_u128,134107856765694016061710679347096287007_u128,41093314609550760647926976603769024171_u128,239600630980111081030756372053680656238_u128];
_15 = [_3,_10,_12,_5];
_16 = _25;
_16 = _25;
_3 = _24.0 > _26;
_29 = 906984057_u32 as f32;
Goto(bb6)
}
bb22 = {
_15 = [_34,_34,_34,_5];
_41 = Field::<i128>(Variant(_42, 0), 0) as usize;
_23 = core::ptr::addr_of_mut!(_38);
_22 = _8;
_20 = [Field::<i128>(Variant(_42, 0), 0),_1,Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0)];
_13 = _14;
_5 = _13 > _14;
_13 = !_14;
match _31 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211355 => bb14,
_ => bb13
}
}
bb23 = {
_22 = [_5,_10,_3,_5];
_21 = [0_usize,17146943875892131076_usize,14598356711750476267_usize,7_usize,7014906648356244344_usize,263798758305875403_usize,5_usize,3_usize];
_2 = _6;
_10 = !_12;
Goto(bb4)
}
bb24 = {
_22 = [_5,_5,_3,_12];
_24.0 = _28.0 * _26;
_25 = [(-126986362_i32),984962019_i32,(-1400401692_i32)];
_30 = [_1,_1,_1,_1,_1,_1,_1];
_20 = _30;
_3 = _12;
Goto(bb7)
}
bb25 = {
_13 = _7 << _36;
_16 = _25;
_28.0 = _24.0 + _11;
_42 = Adt60::Variant0 { fld0: _1 };
_11 = _26;
_43 = core::ptr::addr_of!(_49);
_46 = 529804700_i32 - 715432477_i32;
_11 = 11130_i16 as f64;
place!(Field::<i128>(Variant(_42, 0), 0)) = _1 * _1;
_48 = core::ptr::addr_of!(_28.1);
_26 = -_28.0;
_15 = [_5,_12,_12,_3];
_39.1 = [5782149837216666125_i64];
_44 = [91354215120028162247675964905861507169_u128,3553524466208473287159177118331408597_u128,332342822179008268116064785603013868834_u128,340226837585303200046181454079580107260_u128,239127804543156622440699858464459044573_u128,137783047531167464626343982018815752817_u128,40416323881517683914542038821772316122_u128];
_20 = [Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0)];
_15 = [_3,_5,_34,_12];
_9 = [_14];
_30 = [Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),_1,_1,Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0)];
_14 = !_13;
_45 = !10647133793499589520_u64;
_20 = [Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),Field::<i128>(Variant(_42, 0), 0),_1];
_29 = -_32;
Goto(bb26)
}
bb26 = {
_23 = core::ptr::addr_of_mut!((*_23));
_50 = -_28.0;
_25 = [_46,_46,_46];
_48 = core::ptr::addr_of!(_28.1);
SetDiscriminant(_42, 1);
_45 = !5168872142044100078_u64;
_51 = _39;
_48 = core::ptr::addr_of!((*_48));
_35 = -_50;
_5 = !_12;
_37 = -_29;
_51 = (_39.0, _39.1);
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_42, 1), 0)).1 = -_35;
_49 = 7689_i16 | (-29750_i16);
_15 = [_5,_10,_3,_10];
_31 = -_38;
_3 = _50 != Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_42, 1), 0).1;
_10 = _12;
_23 = core::ptr::addr_of_mut!((*_23));
_51.0 = [38785_u16,22979_u16,7926_u16,16194_u16];
_24 = (_50,);
match (*_23) {
0 => bb6,
340282366920938463463374607431768211355 => bb27,
_ => bb11
}
}
bb27 = {
_51.1 = [(-5851090312275704715_i64)];
_15 = [_34,_10,_10,_3];
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_42, 1), 0)).0 = [_12,_3,_3,_12];
_28.0 = _49 as f64;
_6 = _2;
_24 = (_35,);
_4 = _13 << _13;
_55 = Adt60::Variant0 { fld0: _1 };
_23 = core::ptr::addr_of_mut!(_38);
_16 = [_46,_46,_46];
_31 = !_38;
SetDiscriminant(_55, 0);
Call(RET = fn11(_4, _8, _50, _26, _22, _6, _6, _26, _24.0, _13, _36), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
_11 = 18109_u16 as f64;
Goto(bb29)
}
bb29 = {
Call(_58 = dump_var(8_usize, 16_usize, Move(_16), 49_usize, Move(_49), 25_usize, Move(_25), 21_usize, Move(_21)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_58 = dump_var(8_usize, 15_usize, Move(_15), 36_usize, Move(_36), 45_usize, Move(_45), 31_usize, Move(_31)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_58 = dump_var(8_usize, 30_usize, Move(_30), 7_usize, Move(_7), 3_usize, Move(_3), 51_usize, Move(_51)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_58 = dump_var(8_usize, 27_usize, Move(_27), 41_usize, Move(_41), 12_usize, Move(_12), 10_usize, Move(_10)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: isize,mut _3: [isize; 6],mut _4: [isize; 6],mut _5: isize,mut _6: bool,mut _7: isize) -> [isize; 1] {
mir! {
type RET = [isize; 1];
let _8: i64;
let _9: Adt56;
let _10: [u128; 7];
let _11: [u64; 5];
let _12: ();
let _13: ();
{
_2 = _5;
_2 = _1 >> _1;
_5 = _1 >> _7;
_5 = _7 | _1;
_5 = !_1;
_2 = _5 * _7;
_3 = [_7,_7,_5,_7,_7,_5];
_4 = [_2,_7,_7,_2,_2,_5];
_3 = [_1,_7,_2,_5,_1,_2];
_2 = !_5;
_3 = _4;
RET = [_7];
_1 = !_2;
_9.fld2 = [_6,_6,_6,_6];
_8 = (-9106969171197480671_i64) ^ 3314605140446351861_i64;
_6 = !false;
RET = [_5];
_2 = !_5;
_5 = _1 & _7;
_9.fld4 = 12278_u16 as i128;
_8 = 3744505704493023859_i64;
_1 = _2;
_10 = [61408626618171994497923890875599166586_u128,323163179511459872996968373023123192512_u128,308592401724186106823268563699789213658_u128,153799290746137038143155339893083709939_u128,302400421577093113406117246271163766985_u128,286381193119867397820410821613224112588_u128,51867665056369613875489920345347639728_u128];
_7 = _1;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(9_usize, 3_usize, Move(_3), 7_usize, Move(_7), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: isize,mut _2: isize,mut _3: [isize; 1],mut _4: [isize; 6],mut _5: isize,mut _6: bool,mut _7: [isize; 6],mut _8: [bool; 6],mut _9: bool,mut _10: bool,mut _11: [isize; 6],mut _12: isize,mut _13: isize) -> isize {
mir! {
type RET = isize;
let _14: u32;
let _15: isize;
let _16: [i128; 7];
let _17: char;
let _18: [bool; 4];
let _19: (u64, *mut u128, u8, i32);
let _20: ();
let _21: ();
{
_12 = _2 | _1;
_9 = _10;
_9 = _12 < _12;
RET = -_2;
_6 = _10 | _10;
_9 = !_6;
_14 = 17160136109119262335_usize as u32;
_12 = 5321417404227519999_u64 as isize;
_8 = [_6,_9,_6,_10,_6,_9];
_6 = !_9;
_3 = [RET];
_3 = [_13];
_9 = _6;
_3 = [_1];
_10 = !_9;
_2 = 0_u8 as isize;
_17 = '\u{852d4}';
_1 = _13 - _5;
_6 = !_10;
_19.0 = (-48282071269698264336442727668296060501_i128) as u64;
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(10_usize, 4_usize, Move(_4), 7_usize, Move(_7), 6_usize, Move(_6), 12_usize, Move(_12)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(10_usize, 8_usize, Move(_8), 10_usize, Move(_10), 2_usize, Move(_2), 21_usize, _21), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: [bool; 4],mut _3: f64,mut _4: f64,mut _5: [bool; 4],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: f64,mut _9: f64,mut _10: isize,mut _11: u8) -> Adt55 {
mir! {
type RET = Adt55;
let _12: [bool; 4];
let _13: [i32; 3];
let _14: Adt54;
let _15: *mut bool;
let _16: *mut bool;
let _17: Adt50;
let _18: f64;
let _19: bool;
let _20: char;
let _21: i32;
let _22: Adt59;
let _23: f64;
let _24: [isize; 6];
let _25: *const &'static ([isize; 6],);
let _26: u16;
let _27: u32;
let _28: [i128; 7];
let _29: [i32; 3];
let _30: u32;
let _31: *mut u128;
let _32: Adt57;
let _33: isize;
let _34: [i64; 1];
let _35: Adt58;
let _36: *const ([isize; 6],);
let _37: ([u64; 5], [i128; 7]);
let _38: u32;
let _39: f64;
let _40: Adt53;
let _41: u128;
let _42: i16;
let _43: Adt54;
let _44: ([u16; 4], [i64; 1]);
let _45: usize;
let _46: isize;
let _47: &'static ([isize; 6],);
let _48: *const i16;
let _49: usize;
let _50: Adt51;
let _51: f32;
let _52: i128;
let _53: (f64, &'static ([isize; 6],));
let _54: Adt45;
let _55: bool;
let _56: char;
let _57: [u16; 4];
let _58: [u8; 8];
let _59: u128;
let _60: u16;
let _61: Adt54;
let _62: f64;
let _63: isize;
let _64: Adt47;
let _65: Adt58;
let _66: Adt59;
let _67: Adt56;
let _68: [usize; 1];
let _69: f64;
let _70: isize;
let _71: [bool; 4];
let _72: (f64, &'static ([isize; 6],));
let _73: Adt59;
let _74: i128;
let _75: [i128; 7];
let _76: f32;
let _77: f64;
let _78: Adt61;
let _79: usize;
let _80: Adt58;
let _81: isize;
let _82: u8;
let _83: isize;
let _84: i16;
let _85: Adt58;
let _86: u64;
let _87: Adt56;
let _88: i128;
let _89: u8;
let _90: [i32; 3];
let _91: u16;
let _92: bool;
let _93: char;
let _94: f32;
let _95: u16;
let _96: Adt53;
let _97: *const &'static ([isize; 6],);
let _98: usize;
let _99: [usize; 1];
let _100: ([u16; 4], [i64; 1]);
let _101: (f64,);
let _102: bool;
let _103: Adt49;
let _104: [isize; 6];
let _105: ();
let _106: ();
{
_8 = _3 - _9;
_6 = [_10,_10,_10,_10,_1,_1];
_3 = 8_i8 as f64;
_2 = [true,false,true,true];
_4 = 58177258671034613711688582844121216675_u128 as f64;
_12 = _5;
_9 = -_8;
_1 = _11 as isize;
_10 = 31338_i16 as isize;
_10 = _1 ^ _1;
_9 = _8 - _8;
_1 = _10;
_6 = _7;
_6 = _7;
_5 = _12;
_11 = 18374169001587193896_u64 as u8;
_13 = [(-32135274_i32),(-228924165_i32),(-789678103_i32)];
_5 = [true,false,true,false];
_3 = _9 + _9;
_12 = [false,true,true,true];
_6 = _7;
_7 = [_1,_10,_10,_10,_10,_1];
_4 = _3;
_13 = [1331635604_i32,1398648600_i32,(-1508464571_i32)];
_11 = !186_u8;
Goto(bb1)
}
bb1 = {
_5 = [true,false,true,false];
_6 = _7;
_7 = [_1,_1,_10,_1,_1,_1];
_4 = 7391390560950110739_i64 as f64;
_13 = [635465014_i32,(-1909999579_i32),(-802858780_i32)];
_4 = -_3;
_10 = !_1;
_10 = true as isize;
_12 = [true,true,false,true];
_15 = core::ptr::addr_of_mut!(_19);
_9 = -_8;
_2 = [true,true,true,true];
_1 = _10;
Goto(bb2)
}
bb2 = {
_11 = !157_u8;
Call(_11 = fn12(_7, _7, _7), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_19 = _8 <= _3;
_2 = _12;
_7 = _6;
_2 = _5;
_19 = _9 > _8;
_18 = -_3;
_1 = 35763037315253194080460992291337812454_i128 as isize;
_3 = 4171298070_u32 as f64;
_3 = _11 as f64;
_11 = !110_u8;
Goto(bb4)
}
bb4 = {
_11 = 234_u8 & 84_u8;
_16 = _15;
_6 = _7;
Goto(bb5)
}
bb5 = {
_9 = 5327_i16 as f64;
_21 = (-1996235645_i32) >> _11;
_23 = 65019_u16 as f64;
_7 = _6;
_12 = _2;
_15 = core::ptr::addr_of_mut!((*_15));
_11 = !174_u8;
_3 = _21 as f64;
_18 = _8 - _8;
_2 = [(*_15),(*_15),(*_15),(*_15)];
_4 = _11 as f64;
_7 = _6;
_2 = [_19,_19,(*_15),(*_15)];
_10 = _11 as isize;
Goto(bb6)
}
bb6 = {
_24 = [_1,_10,_10,_1,_1,_10];
_13 = [_21,_21,_21];
_2 = [_19,_19,(*_15),_19];
_8 = _18 - _18;
_3 = _8 + _18;
Goto(bb7)
}
bb7 = {
_21 = 1263127839_i32 >> _1;
_15 = _16;
_12 = [_19,_19,_19,_19];
_6 = [_1,_1,_10,_1,_1,_10];
_10 = -_1;
_1 = 66_i8 as isize;
_19 = !false;
_7 = _6;
_15 = _16;
_3 = _21 as f64;
_29 = [_21,_21,_21];
_1 = _10;
_20 = '\u{d351b}';
_28 = [(-34398373366163975282691102479536611449_i128),(-100641798192756447950430825203199116713_i128),(-22263851445728535643758764751103773983_i128),(-133474049435463722961617569785955003512_i128),(-42529542789325491196323964403559886843_i128),(-93966391190458460253120740080836680968_i128),(-60808528464772475191734763303643176453_i128)];
_11 = !175_u8;
_8 = _3;
_29 = _13;
_24 = [_10,_1,_10,_1,_10,_10];
_30 = 361387429_u32 & 2454855056_u32;
_30 = !3422428930_u32;
_27 = _30;
Goto(bb8)
}
bb8 = {
_21 = (-1774005157_i32) >> _1;
_4 = -_18;
_9 = 12854826976303854536_u64 as f64;
_21 = (-450278324_i32) >> _10;
_7 = [_1,_1,_1,_10,_10,_10];
_26 = _11 as u16;
_29 = [_21,_21,_21];
_27 = _30 & _30;
_7 = [_10,_1,_10,_1,_10,_1];
_5 = [_19,_19,_19,_19];
Call(_10 = core::intrinsics::transmute(_1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_33 = _1 | _1;
_6 = [_10,_33,_10,_10,_10,_10];
_19 = _18 > _18;
_29 = [_21,_21,_21];
_30 = !_27;
_9 = _18 + _18;
_6 = [_33,_10,_1,_10,_10,_1];
_15 = core::ptr::addr_of_mut!(_19);
_10 = _33 & _33;
_9 = _18 - _4;
_21 = (*_15) as i32;
_4 = 2870543779456492854_u64 as f64;
_12 = [(*_15),(*_15),_19,(*_15)];
_21 = 1150039675_i32 ^ 960922125_i32;
_20 = '\u{c4809}';
_10 = _11 as isize;
_30 = !_27;
Goto(bb10)
}
bb10 = {
_24 = [_10,_10,_1,_33,_10,_33];
_6 = _7;
_33 = _1;
_7 = [_33,_1,_10,_1,_1,_1];
_2 = [_19,(*_15),_19,_19];
_11 = !131_u8;
_6 = [_1,_1,_10,_1,_33,_10];
_11 = !185_u8;
_28 = [115384154242053134190735256369789045114_i128,(-20607045692388971175005253543609923203_i128),164621762176872279643227921347827110141_i128,(-95091095792842909266189019156859933183_i128),83225550318738209322706952033356385292_i128,43278250035699280448466181492280916777_i128,164026370620974876290646879069004346476_i128];
_34 = [62773386241305361_i64];
_15 = _16;
Goto(bb11)
}
bb11 = {
_28 = [57445426257356335085680809945822603832_i128,(-114449047123051643594281756170290256850_i128),81388201619528763652034774279760307303_i128,28309670481152550606992960169290461548_i128,(-32126533636939072589289994966417868944_i128),(-130219471207257047548838487260203892227_i128),(-125252162174226141333823002233207796670_i128)];
_30 = 98_i8 as u32;
_39 = _18 - _18;
_29 = _13;
_2 = _12;
_2 = [_19,_19,_19,_19];
_30 = _27;
_10 = _1;
_2 = [_19,_19,_19,_19];
_33 = _10 << _27;
_15 = core::ptr::addr_of_mut!(_19);
_33 = _1;
_19 = _9 < _9;
_7 = [_10,_1,_33,_10,_10,_10];
_34 = [(-1362967168894391810_i64)];
_9 = _18;
_10 = _1 >> _21;
_33 = _1 ^ _1;
_33 = !_1;
_26 = 48780_u16 * 38059_u16;
_39 = -_3;
_37.0 = [3133150774314623753_u64,15929706636854427737_u64,8614738349962309205_u64,13208950311168319939_u64,18071718813459531841_u64];
_34 = [5506934727025901510_i64];
_6 = [_10,_10,_10,_10,_10,_10];
_1 = _21 as isize;
_13 = [_21,_21,_21];
Goto(bb12)
}
bb12 = {
_12 = _2;
_5 = [(*_15),(*_15),(*_15),(*_15)];
_11 = !37_u8;
_38 = _27;
_37.1 = [(-110800088978430377445651372481481687289_i128),(-15497952943100258428873130711224700562_i128),1189003469177301333219378636679572684_i128,(-67740655079552741003779779708402258449_i128),40756056146013995869157849059617419123_i128,44106222196959424108262035009592996010_i128,134514075226590280738322989998262035588_i128];
_30 = _1 as u32;
_26 = (-102429982395904323336356248528883165407_i128) as u16;
_9 = _18 - _18;
_38 = _30;
_7 = _6;
_38 = !_27;
_31 = core::ptr::addr_of_mut!(_41);
_38 = _27 | _30;
_41 = 31716012162452095450325272419558155294_u128;
_4 = -_18;
_3 = _4;
_19 = true;
_31 = core::ptr::addr_of_mut!(_41);
_3 = _11 as f64;
_11 = 87_u8 & 107_u8;
_27 = _38;
_13 = [_21,_21,_21];
_27 = _30 >> _33;
_37.0 = [12629053923158053038_u64,13123263086877708544_u64,12358725168418559779_u64,16415319241156590032_u64,4440031338342265036_u64];
_7 = _24;
_37.1 = [(-36620490358200961644153294581629699784_i128),(-89129222635325795013468107933004937183_i128),112790391765648026501235524642979063035_i128,79349759971836189771065641912227488093_i128,(-17525149479490479216108540860680838762_i128),161942316560665188761715183114509572606_i128,146336493630379805291600200177683084444_i128];
_42 = (-27375_i16);
match (*_31) {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb10,
31716012162452095450325272419558155294 => bb14,
_ => bb13
}
}
bb13 = {
_9 = 5327_i16 as f64;
_21 = (-1996235645_i32) >> _11;
_23 = 65019_u16 as f64;
_7 = _6;
_12 = _2;
_15 = core::ptr::addr_of_mut!((*_15));
_11 = !174_u8;
_3 = _21 as f64;
_18 = _8 - _8;
_2 = [(*_15),(*_15),(*_15),(*_15)];
_4 = _11 as f64;
_7 = _6;
_2 = [_19,_19,(*_15),(*_15)];
_10 = _11 as isize;
Goto(bb6)
}
bb14 = {
_30 = !_38;
_15 = core::ptr::addr_of_mut!((*_15));
_13 = [_21,_21,_21];
_31 = core::ptr::addr_of_mut!(_41);
_37.0 = [2340541782098213195_u64,12084615258968556660_u64,5628204290838089795_u64,15987420090525516484_u64,1734613269043929531_u64];
_21 = 2138046166_i32;
Goto(bb15)
}
bb15 = {
_44.0 = [_26,_26,_26,_26];
_18 = _9 - _8;
_44.1 = [8501259823849631187_i64];
_19 = false;
_37.1 = [(-62993961741227603994064480144486218465_i128),49358122248441933170821061117988727832_i128,(-44325021322530272979819082564138944143_i128),(-82557202341287666566763557187102433247_i128),(-113652241119739275129692282509193411413_i128),66535796700490040257657294083037889568_i128,74829501255731324955542458790099406130_i128];
_2 = [_19,(*_15),_19,(*_15)];
_12 = _5;
_11 = _21 as u8;
_3 = -_18;
_37.1 = _28;
_15 = _16;
_49 = 15968975756716571820_u64 as usize;
_44.1 = _34;
_44.0 = [_26,_26,_26,_26];
_10 = _1 | _1;
_34 = _44.1;
_25 = core::ptr::addr_of!(_47);
_2 = _12;
_45 = _49;
_38 = _27;
_51 = _33 as f32;
Goto(bb16)
}
bb16 = {
_46 = _1;
_30 = _27;
match _21 {
0 => bb3,
2138046166 => bb18,
_ => bb17
}
}
bb17 = {
_19 = _8 <= _3;
_2 = _12;
_7 = _6;
_2 = _5;
_19 = _9 > _8;
_18 = -_3;
_1 = 35763037315253194080460992291337812454_i128 as isize;
_3 = 4171298070_u32 as f64;
_3 = _11 as f64;
_11 = !110_u8;
Goto(bb4)
}
bb18 = {
_16 = _15;
_48 = core::ptr::addr_of!(_42);
_24 = [_46,_33,_10,_1,_10,_10];
_6 = _24;
_25 = core::ptr::addr_of!((*_25));
_1 = 72046524389931693358387878225319363526_i128 as isize;
_37.1 = [(-123201831631606291009513520255801930730_i128),(-112063502106073276981294641046930231522_i128),(-63782313537060042379377981154066493425_i128),(-115177638644935261670737821503161725172_i128),(-146072579772439980477135863874333056166_i128),42472474250693990518335387321049896997_i128,73623197409320873902200525241978478678_i128];
_53.0 = _9;
_46 = _1 | _10;
_19 = _53.0 != _9;
_48 = core::ptr::addr_of!((*_48));
_15 = _16;
_19 = true;
_50 = Adt51::Variant0 { fld0: _46 };
_18 = -_9;
_56 = _20;
_55 = _19 | _19;
_9 = -_3;
_48 = core::ptr::addr_of!((*_48));
_31 = core::ptr::addr_of_mut!((*_31));
_1 = Field::<isize>(Variant(_50, 0), 0) ^ _33;
_55 = _9 > _9;
_23 = _3 - _9;
_37.0 = [11550295512830794010_u64,16650804433610314027_u64,6433184903859858579_u64,5573513449443519080_u64,2481731004174915942_u64];
_30 = _38;
_38 = (-41569852526529592_i64) as u32;
_28 = [(-154728152478957690379928758443287742752_i128),(-56070915262038684948046371134330907689_i128),162957685194378642651182438956338990768_i128,121121422138015210431308971461443216500_i128,(-128728992782251471446942039500121016216_i128),114927849164460127930955075642809698568_i128,(-89386213080762230090895320504253288865_i128)];
Goto(bb19)
}
bb19 = {
_6 = [_1,_1,_10,_46,Field::<isize>(Variant(_50, 0), 0),Field::<isize>(Variant(_50, 0), 0)];
_6 = _24;
_31 = core::ptr::addr_of_mut!((*_31));
_39 = _9;
_57 = [_26,_26,_26,_26];
_3 = -_23;
match _42 {
0 => bb7,
1 => bb2,
2 => bb11,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb20,
340282366920938463463374607431768184081 => bb22,
_ => bb21
}
}
bb20 = {
_33 = _1 | _1;
_6 = [_10,_33,_10,_10,_10,_10];
_19 = _18 > _18;
_29 = [_21,_21,_21];
_30 = !_27;
_9 = _18 + _18;
_6 = [_33,_10,_1,_10,_10,_1];
_15 = core::ptr::addr_of_mut!(_19);
_10 = _33 & _33;
_9 = _18 - _4;
_21 = (*_15) as i32;
_4 = 2870543779456492854_u64 as f64;
_12 = [(*_15),(*_15),_19,(*_15)];
_21 = 1150039675_i32 ^ 960922125_i32;
_20 = '\u{c4809}';
_10 = _11 as isize;
_30 = !_27;
Goto(bb10)
}
bb21 = {
_11 = !157_u8;
Call(_11 = fn12(_7, _7, _7), ReturnTo(bb3), UnwindUnreachable())
}
bb22 = {
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)).0 = [_10,_46,_1,_1,_10,_10];
place!(Field::<[usize; 8]>(Variant(_50, 2), 4)) = [_45,_45,_49,_49,_45,_49,_45,_49];
_11 = _26 as u8;
_53.0 = (-77_i8) as f64;
_7 = [_46,_1,_1,_10,_1,_1];
_24 = [_33,_1,_46,_1,_10,_46];
_18 = _4 + _39;
_44.1 = [3088411001520149033_i64];
match (*_31) {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb15,
4 => bb13,
31716012162452095450325272419558155294 => bb24,
_ => bb23
}
}
bb23 = {
_12 = _2;
_5 = [(*_15),(*_15),(*_15),(*_15)];
_11 = !37_u8;
_38 = _27;
_37.1 = [(-110800088978430377445651372481481687289_i128),(-15497952943100258428873130711224700562_i128),1189003469177301333219378636679572684_i128,(-67740655079552741003779779708402258449_i128),40756056146013995869157849059617419123_i128,44106222196959424108262035009592996010_i128,134514075226590280738322989998262035588_i128];
_30 = _1 as u32;
_26 = (-102429982395904323336356248528883165407_i128) as u16;
_9 = _18 - _18;
_38 = _30;
_7 = _6;
_38 = !_27;
_31 = core::ptr::addr_of_mut!(_41);
_38 = _27 | _30;
_41 = 31716012162452095450325272419558155294_u128;
_4 = -_18;
_3 = _4;
_19 = true;
_31 = core::ptr::addr_of_mut!(_41);
_3 = _11 as f64;
_11 = 87_u8 & 107_u8;
_27 = _38;
_13 = [_21,_21,_21];
_27 = _30 >> _33;
_37.0 = [12629053923158053038_u64,13123263086877708544_u64,12358725168418559779_u64,16415319241156590032_u64,4440031338342265036_u64];
_7 = _24;
_37.1 = [(-36620490358200961644153294581629699784_i128),(-89129222635325795013468107933004937183_i128),112790391765648026501235524642979063035_i128,79349759971836189771065641912227488093_i128,(-17525149479490479216108540860680838762_i128),161942316560665188761715183114509572606_i128,146336493630379805291600200177683084444_i128];
_42 = (-27375_i16);
match (*_31) {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb10,
31716012162452095450325272419558155294 => bb14,
_ => bb13
}
}
bb24 = {
_42 = -(-29715_i16);
_47 = &place!(Field::<([isize; 6],)>(Variant(_50, 2), 5));
_44.1 = [(-103931221292064790_i64)];
_1 = !_46;
place!(Field::<[bool; 4]>(Variant(_50, 2), 7)) = [_55,_55,_55,_55];
_19 = !_55;
_30 = (*_31) as u32;
_11 = 33_u8 & 189_u8;
_3 = _21 as f64;
_28 = [(-5139311087782643624442562289220128664_i128),73090050019220628596980817178876269962_i128,(-88184067749772162919682474900187581742_i128),(-9513881719895624339082515676021359376_i128),68057743726755269050569132057269673995_i128,(-128612444969818674252257305539941329110_i128),(-60521726118232470603304840334040376395_i128)];
_30 = _38;
place!(Field::<[u8; 8]>(Variant(_50, 2), 1)) = [_11,_11,_11,_11,_11,_11,_11,_11];
_44 = (_57, _34);
_6 = (*_47).0;
_3 = _9 + _23;
_21 = (-1991319111_i32) * 1884746079_i32;
_21 = -401735954_i32;
_25 = core::ptr::addr_of!((*_25));
_13 = [_21,_21,_21];
_37.0 = [11250953825558855753_u64,595024091294381221_u64,12147796652146647113_u64,12162925640733717797_u64,9661261383505625661_u64];
_12 = [_55,_55,_55,_55];
_49 = !_45;
_58 = Field::<[u8; 8]>(Variant(_50, 2), 1);
_12 = [_55,_55,_19,_55];
_6 = [_1,_1,_33,_1,_10,_1];
Goto(bb25)
}
bb25 = {
_27 = (-135728538078801595750975894872460276108_i128) as u32;
_57 = [_26,_26,_26,_26];
_12 = [_19,_19,_19,_19];
_53 = (_23, Move(_47));
_4 = -_53.0;
_62 = _18 + _23;
_1 = _46 - _46;
_36 = core::ptr::addr_of!(place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)));
_1 = -_10;
_29 = [_21,_21,_21];
_36 = core::ptr::addr_of!((*_36));
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)).0 = _7;
Goto(bb26)
}
bb26 = {
_52 = (-59098484659827848872139708691875684310_i128) - 36641902348699991697546775431244329193_i128;
place!(Field::<Adt49>(Variant(_50, 2), 6)) = Adt49::Variant0 { fld0: _44.1,fld1: _18,fld2: _46 };
_18 = _23;
_27 = 119_i8 as u32;
_48 = core::ptr::addr_of!((*_48));
_44.1 = [7315639593595629401_i64];
_27 = _51 as u32;
_43 = Adt54::Variant0 { fld0: Move(Field::<Adt49>(Variant(_50, 2), 6)),fld1: _6,fld2: _44.0,fld3: _11,fld4: _42 };
place!(Field::<[u16; 4]>(Variant(_43, 0), 2)) = _44.0;
Goto(bb27)
}
bb27 = {
_27 = !_30;
_3 = _9;
place!(Field::<u128>(Variant(_50, 2), 3)) = _41;
place!(Field::<[i64; 1]>(Variant(place!(Field::<Adt49>(Variant(_43, 0), 0)), 0), 0)) = [6373745443666786331_i64];
place!(Field::<u8>(Variant(_43, 0), 3)) = _26 as u8;
_12 = [_55,_55,_19,_19];
_47 = &place!(Field::<([isize; 6],)>(Variant(_50, 2), 5));
_50 = Adt51::Variant0 { fld0: _46 };
place!(Field::<f64>(Variant(place!(Field::<Adt49>(Variant(_43, 0), 0)), 0), 1)) = 9738035066909321470_u64 as f64;
_20 = _56;
_14 = Adt54::Variant3 { fld0: Field::<u8>(Variant(_43, 0), 3),fld1: (*_31),fld2: _37.0,fld3: _51,fld4: Field::<i16>(Variant(_43, 0), 4),fld5: _28,fld6: _15,fld7: _36 };
_14 = Move(_43);
place!(Field::<[isize; 6]>(Variant(_14, 0), 1)) = _6;
_12 = [_55,_19,_55,_55];
_59 = Field::<isize>(Variant(_50, 0), 0) as u128;
place!(Field::<isize>(Variant(_50, 0), 0)) = !_10;
_34 = [(-3480730559663963124_i64)];
place!(Field::<[isize; 6]>(Variant(_14, 0), 1)) = _6;
_11 = !Field::<u8>(Variant(_14, 0), 3);
_67.fld4 = _52;
_63 = _10 | Field::<isize>(Variant(_50, 0), 0);
match (*_31) {
0 => bb8,
1 => bb26,
31716012162452095450325272419558155294 => bb28,
_ => bb23
}
}
bb28 = {
SetDiscriminant(_50, 0);
_31 = core::ptr::addr_of_mut!((*_31));
_19 = _23 <= _4;
_61 = Adt54::Variant3 { fld0: _11,fld1: _59,fld2: _37.0,fld3: _51,fld4: Field::<i16>(Variant(_14, 0), 4),fld5: _28,fld6: _15,fld7: _36 };
_43 = Move(_14);
_2 = [_55,_55,_19,_55];
_50 = Adt51::Variant0 { fld0: _46 };
_56 = _20;
_57 = [_26,_26,_26,_26];
_52 = _19 as i128;
place!(Field::<[isize; 6]>(Variant(_43, 0), 1)) = [_63,Field::<isize>(Variant(_50, 0), 0),_46,_1,_63,_1];
_75 = [_52,_52,_52,_52,_52,_52,_52];
_77 = -_9;
_67.fld3 = Move(_61);
_28 = [_52,_52,_52,_52,_52,_52,_52];
_78.fld0 = (9787167792225246200_u64, _31, Field::<u8>(Variant(_43, 0), 3), _21);
_78.fld0.0 = 12308646284706448064_u64;
SetDiscriminant(Field::<Adt49>(Variant(_43, 0), 0), 0);
match _41 {
31716012162452095450325272419558155294 => bb29,
_ => bb6
}
}
bb29 = {
SetDiscriminant(_67.fld3, 3);
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)) = (_6,);
_19 = _53.0 < _9;
place!(Field::<u8>(Variant(_43, 0), 3)) = _21 as u8;
Goto(bb30)
}
bb30 = {
_5 = _2;
_72.0 = _18 * _77;
_68 = [_45];
_37.0 = [_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0];
_33 = -_46;
_47 = &place!(Field::<([isize; 6],)>(Variant(_50, 2), 5));
_64 = Adt47::Variant3 { fld0: _45,fld1: _15,fld2: _31,fld3: Field::<i16>(Variant(_43, 0), 4) };
_72.1 = &place!(Field::<([isize; 6],)>(Variant(_50, 2), 5));
_8 = 2369742120456772497_i64 as f64;
place!(Field::<usize>(Variant(_64, 3), 0)) = !_45;
_32 = Adt57::Variant3 { fld0: _51 };
place!(Field::<bool>(Variant(_50, 2), 0)) = !_55;
place!(Field::<*const ([isize; 6],)>(Variant(_67.fld3, 3), 7)) = _36;
_32 = Adt57::Variant0 { fld0: _64,fld1: _44,fld2: _78.fld0.1 };
place!(Field::<*mut bool>(Variant(_67.fld3, 3), 6)) = core::ptr::addr_of_mut!(_55);
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)) = (Field::<[isize; 6]>(Variant(_43, 0), 1),);
_69 = _52 as f64;
place!(Field::<[usize; 8]>(Variant(_50, 2), 4)) = [_49,_49,Field::<usize>(Variant(_64, 3), 0),Field::<usize>(Variant(_64, 3), 0),_49,_45,_45,_45];
_37.0 = [_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0];
_37.0 = [_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0];
place!(Field::<usize>(Variant(place!(Field::<Adt47>(Variant(_32, 0), 0)), 3), 0)) = Field::<usize>(Variant(_64, 3), 0) >> (*_48);
_12 = [_19,_19,Field::<bool>(Variant(_50, 2), 0),Field::<bool>(Variant(_50, 2), 0)];
_55 = Field::<bool>(Variant(_50, 2), 0) | Field::<bool>(Variant(_50, 2), 0);
Goto(bb31)
}
bb31 = {
_47 = &place!(Field::<([isize; 6],)>(Variant(_50, 2), 5));
place!(Field::<[bool; 4]>(Variant(_50, 2), 7)) = [_19,_19,_19,Field::<bool>(Variant(_50, 2), 0)];
place!(Field::<*mut bool>(Variant(_64, 3), 1)) = core::ptr::addr_of_mut!(_55);
_74 = _52;
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)).0 = Field::<[isize; 6]>(Variant(_43, 0), 1);
_78.fld0 = (7615002037744926964_u64, _31, Field::<u8>(Variant(_43, 0), 3), _21);
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld0 = Field::<bool>(Variant(_50, 2), 0);
place!(Field::<i16>(Variant(_43, 0), 4)) = _42;
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld4 = _78.fld0.0 as u16;
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld6 = !(*_31);
_55 = Field::<bool>(Variant(_50, 2), 0);
_71 = [Field::<bool>(Variant(_50, 2), 0),_55,Field::<bool>(Variant(_50, 2), 0),Field::<bool>(Variant(_50, 2), 0)];
place!(Field::<([isize; 6],)>(Variant(_32, 2), 2)).0 = [_33,_1,_63,_1,_63,_63];
_88 = -_74;
_1 = _33 | _46;
place!(Field::<*const ([isize; 6],)>(Variant(_67.fld3, 3), 7)) = _36;
_10 = -_33;
place!(Field::<u8>(Variant(_67.fld3, 3), 0)) = Field::<u8>(Variant(_43, 0), 3) & _78.fld0.2;
_82 = _49 as u8;
_87.fld0 = Adt51::Variant0 { fld0: _33 };
_44.0 = [Field::<Adt46>(Variant(_32, 2), 3).fld4,_26,Field::<Adt46>(Variant(_32, 2), 3).fld4,_26];
_54 = Adt45::Variant0 { fld0: _68 };
place!(Field::<bool>(Variant(_50, 2), 0)) = _53.0 != _3;
Goto(bb32)
}
bb32 = {
place!(Field::<i16>(Variant(_67.fld3, 3), 4)) = Field::<i16>(Variant(_64, 3), 3) | (*_48);
place!(Field::<u128>(Variant(_50, 2), 3)) = _74 as u128;
_59 = _78.fld0.2 as u128;
_7 = [Field::<isize>(Variant(_87.fld0, 0), 0),_1,_1,_10,_10,_46];
_33 = (-6730682284397226186_i64) as isize;
_44.1 = [(-5253033347833836074_i64)];
Call(_4 = core::intrinsics::fmaf64(_3, _72.0, _72.0), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld5 = [_19,Field::<bool>(Variant(_50, 2), 0),Field::<Adt46>(Variant(_32, 2), 3).fld0,Field::<Adt46>(Variant(_32, 2), 3).fld0];
_67.fld0 = Adt51::Variant0 { fld0: _1 };
_84 = Field::<i16>(Variant(_67.fld3, 3), 4);
_44.1 = [(-3303145524483925454_i64)];
_47 = &place!(Field::<([isize; 6],)>(Variant(_32, 2), 2));
place!(Field::<Adt49>(Variant(_50, 2), 6)) = Adt49::Variant1 { fld0: _57,fld1: _74,fld2: _58 };
place!(Field::<*mut bool>(Variant(_64, 3), 1)) = Field::<*mut bool>(Variant(_67.fld3, 3), 6);
place!(Field::<[i128; 7]>(Variant(_67.fld3, 3), 5)) = [_74,_74,Field::<i128>(Variant(Field::<Adt49>(Variant(_50, 2), 6), 1), 1),_52,_88,_74,_88];
_16 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_50, 2), 0)));
_8 = _23;
_46 = _1;
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld0 = _88 == Field::<i128>(Variant(Field::<Adt49>(Variant(_50, 2), 6), 1), 1);
_84 = (*_48);
_8 = _78.fld0.2 as f64;
_53 = (_39, Move((*_25)));
place!(Field::<*mut u128>(Variant(_64, 3), 2)) = core::ptr::addr_of_mut!(place!(Field::<Adt46>(Variant(_32, 2), 3)).fld6);
place!(Field::<[bool; 4]>(Variant(_32, 2), 4)) = [(*_16),(*_16),Field::<Adt46>(Variant(_32, 2), 3).fld0,Field::<Adt46>(Variant(_32, 2), 3).fld0];
_33 = Field::<isize>(Variant(_67.fld0, 0), 0);
_16 = Field::<*mut bool>(Variant(_64, 3), 1);
_56 = _20;
place!(Field::<usize>(Variant(_64, 3), 0)) = _49;
_94 = _51 * _51;
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)) = Field::<([isize; 6],)>(Variant(_32, 2), 2);
_13 = _29;
Goto(bb34)
}
bb34 = {
_15 = Field::<*mut bool>(Variant(_67.fld3, 3), 6);
_94 = -_51;
_86 = _78.fld0.3 as u64;
_37.1 = [_88,_52,_52,_88,_52,_88,_88];
place!(Field::<[isize; 6]>(Variant(_43, 0), 1)) = _24;
place!(Field::<f64>(Variant(place!(Field::<Adt49>(Variant(_43, 0), 0)), 0), 1)) = _62;
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld1 = _3 as u8;
place!(Field::<Adt46>(Variant(_32, 2), 3)).fld0 = !_55;
_12 = Field::<[bool; 4]>(Variant(_32, 2), 4);
place!(Field::<u128>(Variant(_50, 2), 3)) = (*_31);
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)).0 = [_46,_46,_1,_33,_33,Field::<isize>(Variant(_87.fld0, 0), 0)];
_1 = -_33;
_10 = !Field::<isize>(Variant(_67.fld0, 0), 0);
_87.fld2 = _12;
_67.fld2 = _5;
place!(Field::<([isize; 6],)>(Variant(_50, 2), 5)).0 = _6;
place!(Field::<[bool; 4]>(Variant(_32, 2), 4)) = [Field::<Adt46>(Variant(_32, 2), 3).fld0,_19,_19,_19];
place!(Field::<[u64; 5]>(Variant(_67.fld3, 3), 2)) = [_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0,_78.fld0.0];
place!(Field::<i16>(Variant(_67.fld3, 3), 4)) = !_84;
_78.fld0.0 = !_86;
place!(Field::<Adt49>(Variant(_43, 0), 0)) = Move(Field::<Adt49>(Variant(_50, 2), 6));
place!(Field::<[u16; 4]>(Variant(_43, 0), 2)) = Field::<[u16; 4]>(Variant(Field::<Adt49>(Variant(_43, 0), 0), 1), 0);
_95 = _94 as u16;
_14 = Move(_43);
_61 = Move(_14);
_67.fld1 = Adt55::Variant0 { fld0: Field::<i128>(Variant(Field::<Adt49>(Variant(_61, 0), 0), 1), 1),fld1: _37.0,fld2: _68,fld3: _13,fld4: Field::<[bool; 4]>(Variant(_32, 2), 4) };
match _41 {
0 => bb12,
31716012162452095450325272419558155294 => bb35,
_ => bb27
}
}
bb35 = {
_76 = -_94;
place!(Field::<[bool; 4]>(Variant(_50, 2), 7)) = Field::<Adt46>(Variant(_32, 2), 3).fld5;
_24 = [_33,Field::<isize>(Variant(_67.fld0, 0), 0),Field::<isize>(Variant(_87.fld0, 0), 0),_10,_33,_63];
place!(Field::<u128>(Variant(_67.fld3, 3), 1)) = (*_31) / _41;
_21 = !_78.fld0.3;
_100.1 = [6337415365242145562_i64];
_50 = Adt51::Variant0 { fld0: _33 };
place!(Field::<([isize; 6],)>(Variant(_32, 2), 2)) = (Field::<[isize; 6]>(Variant(_61, 0), 1),);
_101.0 = Field::<Adt46>(Variant(_32, 2), 3).fld4 as f64;
_79 = Field::<usize>(Variant(_64, 3), 0);
_87.fld4 = Field::<i128>(Variant(Field::<Adt49>(Variant(_61, 0), 0), 1), 1) ^ _52;
place!(Field::<isize>(Variant(_87.fld0, 0), 0)) = (-3952192720271661977_i64) as isize;
place!(Field::<isize>(Variant(_50, 0), 0)) = -_10;
_36 = Field::<*const ([isize; 6],)>(Variant(_67.fld3, 3), 7);
place!(Field::<i16>(Variant(_67.fld3, 3), 4)) = Field::<i16>(Variant(_64, 3), 3) | (*_48);
_87.fld0 = Adt51::Variant3 { fld0: _101,fld1: _76,fld2: _38,fld3: _78.fld0 };
_55 = _56 <= _20;
_99 = [_79];
_88 = (*_31) as i128;
place!(Field::<u128>(Variant(_67.fld3, 3), 1)) = !(*_31);
_83 = _63;
place!(Field::<f32>(Variant(_67.fld3, 3), 3)) = -_51;
_91 = Field::<Adt46>(Variant(_32, 2), 3).fld4;
_87.fld4 = -Field::<i128>(Variant(_67.fld1, 0), 0);
RET = Move(_67.fld1);
_37.1 = [Field::<i128>(Variant(Field::<Adt49>(Variant(_61, 0), 0), 1), 1),_52,Field::<i128>(Variant(Field::<Adt49>(Variant(_61, 0), 0), 1), 1),Field::<i128>(Variant(RET, 0), 0),Field::<i128>(Variant(RET, 0), 0),_87.fld4,_52];
Goto(bb36)
}
bb36 = {
Call(_105 = dump_var(11_usize, 46_usize, Move(_46), 75_usize, Move(_75), 91_usize, Move(_91), 38_usize, Move(_38)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Call(_105 = dump_var(11_usize, 24_usize, Move(_24), 20_usize, Move(_20), 42_usize, Move(_42), 95_usize, Move(_95)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_105 = dump_var(11_usize, 44_usize, Move(_44), 41_usize, Move(_41), 82_usize, Move(_82), 2_usize, Move(_2)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_105 = dump_var(11_usize, 21_usize, Move(_21), 29_usize, Move(_29), 99_usize, Move(_99), 79_usize, Move(_79)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_105 = dump_var(11_usize, 86_usize, Move(_86), 56_usize, Move(_56), 63_usize, Move(_63), 52_usize, Move(_52)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_105 = dump_var(11_usize, 27_usize, Move(_27), 83_usize, Move(_83), 28_usize, Move(_28), 58_usize, Move(_58)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6]) -> u8 {
mir! {
type RET = u8;
let _4: u64;
let _5: [i128; 7];
let _6: (isize, i16, u128, i8);
let _7: [u8; 8];
let _8: [u8; 8];
let _9: Adt57;
let _10: [i128; 7];
let _11: u32;
let _12: [u8; 8];
let _13: (isize, i16, u128, i8);
let _14: i64;
let _15: isize;
let _16: *const &'static ([isize; 6],);
let _17: (f64,);
let _18: char;
let _19: isize;
let _20: Adt46;
let _21: [bool; 4];
let _22: ();
let _23: ();
{
RET = 451700466_u32 as u8;
_4 = 11577673898553534604_u64 * 15454597313795304199_u64;
RET = 134_u8;
RET = !119_u8;
_3 = _2;
RET = !87_u8;
Call(_1 = fn13(_3, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _2;
_1 = [(-97_isize),9223372036854775807_isize,9223372036854775807_isize,(-29_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = 17586107104748258091_u64;
RET = 1_usize as u8;
_4 = !598192532906195282_u64;
_5 = [52746432369919584969979886301271841103_i128,32252838272558595873723893263657918309_i128,(-115045556266936891494375237672845364195_i128),80070533170242054900748268594600401696_i128,63320668064711926719075539181584073229_i128,53536057848447550709313350223094398718_i128,38154668970920586683774259967228859157_i128];
_3 = [(-9223372036854775808_isize),(-111_isize),(-9223372036854775808_isize),(-94_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_5 = [(-48447666223748227546123908466714796550_i128),98112873818817632418229831668194988915_i128,(-39037383459535506994443735122807718880_i128),(-26773021530290550767612943689297616071_i128),16180471289026123214949920414582361870_i128,25343447032392826030546717048389928324_i128,(-27809396072532564218296874861797869939_i128)];
_1 = [(-9223372036854775808_isize),(-121_isize),112_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [44_isize,6_isize,(-9223372036854775808_isize),(-7_isize),(-112_isize),9223372036854775807_isize];
_2 = [9223372036854775807_isize,(-97_isize),(-49_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6.3 = (-10_i8);
_6.2 = false as u128;
RET = !226_u8;
_5 = [157822241222476433344680921416401523333_i128,13317407414109954322509515704219622966_i128,(-111595169158762314792843146714093209782_i128),118921827828995540972238655749707398895_i128,(-70578238370212222592817298317206118691_i128),(-99613760250521950939186810022379076486_i128),59496455270154558781300511842199265886_i128];
RET = !205_u8;
match _6.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431768211446 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = ((-9223372036854775808_isize), (-26679_i16), 287386771305710911357034081145258559437_u128, (-77_i8));
_2 = _1;
_6.2 = 38824706973742653484813863076251962436_u128 >> _6.0;
RET = 167_u8;
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_8 = [RET,RET,RET,RET,RET,RET,RET,RET];
_6.2 = 172318285885922516860701265543710292835_u128;
_6.2 = !205101388195781238114437411862600405201_u128;
_6.0 = 9223372036854775807_isize;
_2 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
RET = 48951_u16 as u8;
_5 = [152737408669474375906443197359905078022_i128,(-116904487387900659959774510780870828848_i128),(-142111369708068162110521360342009302626_i128),161397205839512761784814445814006682761_i128,66773305462082768789998316232088691287_i128,56606506868774547598205188211806382331_i128,95269241723032630378364538259631410696_i128];
_6.3 = -(-113_i8);
RET = !72_u8;
_6.1 = RET as i16;
_5 = [153980107594128743621016441717253355605_i128,(-95499510857862514266709451099006080622_i128),129525008600466035821270068947627383105_i128,(-40703624407392158699996119373862374440_i128),24287686705093691730766349792468746295_i128,(-91803369695861755088825697104116887682_i128),52675725179402359511451978703127645082_i128];
_10 = [(-63086371468791376013734231551938460322_i128),(-60883397759585139434013036049959700791_i128),15864433706583870313738498680036806104_i128,(-13882629968388082974361314584388707070_i128),145667542362183533119283671413333398375_i128,(-135536415086286440542577882606630833772_i128),39521939730233342013379819981015817761_i128];
_6.3 = _4 as i8;
_8 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.3 = 4_i8;
_11 = 2028915452_u32 ^ 2940516692_u32;
match _6.0 {
0 => bb2,
9223372036854775807 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_2 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_4 = 571705901463750725_u64;
_10 = [(-61636212705163335643932200643648030167_i128),16309974054066445798815496022799583705_i128,(-161260041697162255828608228882790722637_i128),26113853356661864101106872474907911505_i128,116190698055688984749668501374337955093_i128,34333435703849087639508561555969994311_i128,64581277441507662219505807163730601417_i128];
RET = 114_u8 - 238_u8;
_7 = [RET,RET,RET,RET,RET,RET,RET,RET];
_8 = _7;
_6 = ((-9223372036854775808_isize), (-18129_i16), 242584376131013318704771105362929057471_u128, (-109_i8));
_6.0 = 9223372036854775807_isize;
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.2 = !179667537433433758558421163425919552003_u128;
_11 = 3110445471_u32;
_1 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.1 = (-4251_i16);
_13.2 = _6.2;
_10 = _5;
_12 = [RET,RET,RET,RET,RET,RET,RET,RET];
_6 = ((-95_isize), (-6515_i16), _13.2, (-41_i8));
_2 = _3;
RET = 39_u8;
_12 = _7;
_6.3 = _6.1 as i8;
_13.0 = _6.0 << _6.3;
_14 = (-2549920886868043289_i64) | 4359075373255829865_i64;
_13.1 = -_6.1;
Goto(bb12)
}
bb12 = {
_13.3 = !_6.3;
_6.3 = -_13.3;
_13.0 = -_6.0;
_4 = !14734021187427624469_u64;
_5 = _10;
_6.0 = RET as isize;
_1 = [_13.0,_13.0,_13.0,_13.0,_13.0,_13.0];
RET = !60_u8;
RET = 118_u8;
_6.1 = _13.1 | _13.1;
_6.2 = _13.2 & _13.2;
_6 = (_13.0, _13.1, _13.2, _13.3);
_10 = [7526555539602339287904180745755497518_i128,(-29267495462087655268812692048065019683_i128),(-152916464242965141009233470385965368478_i128),60599149793821470358571563115461743833_i128,(-39099329035823385498302157722462843054_i128),106528812150551796789381789492968871196_i128,32358695409474983008760568489049355008_i128];
_7 = _8;
_11 = 355313686_u32 + 2854664454_u32;
RET = 248_u8 * 48_u8;
_6.0 = _13.0;
_15 = 4_usize as isize;
Goto(bb13)
}
bb13 = {
RET = 111_u8 - 15_u8;
_15 = _6.0;
RET = !67_u8;
_13 = (_15, _6.1, _6.2, _6.3);
_13 = (_15, _6.1, _6.2, _6.3);
_15 = 8650640202734657415_usize as isize;
_13.1 = _6.1;
_8 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = !78_u8;
_15 = !_6.0;
_13.1 = _6.1 * _6.1;
_10 = [153695611144916201521003225624208570392_i128,(-91458803370628997669876198349913378183_i128),149892364618345084673775878997625360937_i128,(-39610115113956526236978477304128649164_i128),3194132423457470439084752008280012775_i128,39132542858995444206014810255152828121_i128,(-110521664636177308260305687745021049063_i128)];
_3 = [_6.0,_15,_15,_13.0,_15,_15];
_13.2 = _6.2;
Call(_6.3 = core::intrinsics::bswap(_13.3), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_13.0 = -_15;
_6.2 = _13.2 & _13.2;
_17.0 = 4_usize as f64;
_6.2 = !_13.2;
_13.0 = _6.0 & _15;
_8 = [RET,RET,RET,RET,RET,RET,RET,RET];
_20.fld0 = !false;
_20.fld6 = _6.2;
_5 = [161221702699989550771210843016453951532_i128,30381902130805090645823394958060408282_i128,(-140919946400204833614342760863220590685_i128),23779980925676298876292480489873301054_i128,146433621300374109235162374767649401073_i128,165495461359623207028357626424946254604_i128,(-71900910211320403548507658105483565742_i128)];
_6.0 = _13.3 as isize;
_20.fld1 = RET >> _4;
_15 = -_6.0;
_4 = _20.fld6 as u64;
_6.1 = _13.1 | _13.1;
_20.fld4 = !47783_u16;
_13.1 = _6.1 | _6.1;
_14 = (-1838690392950115198_i64) | (-1429423589861992516_i64);
_7 = _12;
_20.fld6 = _20.fld4 as u128;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(12_usize, 12_usize, Move(_12), 15_usize, Move(_15), 10_usize, Move(_10), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(12_usize, 6_usize, Move(_6), 1_usize, Move(_1), 8_usize, Move(_8), 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [isize; 6],mut _2: [isize; 6]) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _3: Adt53;
let _4: [i64; 1];
let _5: f64;
let _6: u16;
let _7: [bool; 4];
let _8: i16;
let _9: Adt60;
let _10: ([u64; 5], [i128; 7]);
let _11: [u16; 4];
let _12: ([bool; 4], f64, char, [bool; 4]);
let _13: Adt58;
let _14: isize;
let _15: Adt60;
let _16: f32;
let _17: f32;
let _18: isize;
let _19: Adt58;
let _20: ();
let _21: ();
{
_2 = _1;
Call(RET = fn14(_2, _1, _1, _2, _1, _2, _1, _1, _2, _1, _1, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,95_isize,(-58_isize),9223372036854775807_isize];
_2 = [(-22_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = [(-9223372036854775808_isize),(-41_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-91_isize)];
RET = [32_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-45_isize),(-9223372036854775808_isize)];
Goto(bb2)
}
bb2 = {
RET = _2;
_2 = [(-9223372036854775808_isize),(-85_isize),9223372036854775807_isize,9223372036854775807_isize,42_isize,9223372036854775807_isize];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-36_isize),9223372036854775807_isize,(-100_isize),49_isize];
Goto(bb3)
}
bb3 = {
_2 = [(-9223372036854775808_isize),(-34_isize),63_isize,76_isize,9223372036854775807_isize,(-45_isize)];
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),25_isize];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-117_isize),(-100_isize),6_isize,109_isize];
_4 = [(-1101727647896159537_i64)];
_4 = [2374896551181015308_i64];
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-79_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-121_isize),(-9223372036854775808_isize),(-119_isize),9223372036854775807_isize];
_5 = 13398055790858454412_u64 as f64;
_6 = 26296_u16;
_5 = 30115_i16 as f64;
_4 = [(-1224161466308149217_i64)];
_6 = 28309_u16;
RET = [(-9223372036854775808_isize),9223372036854775807_isize,(-99_isize),22_isize,(-9223372036854775808_isize),80_isize];
_7 = [false,false,false,true];
_8 = 13695_i16 | (-4713_i16);
_7 = [false,true,false,true];
_2 = [(-19_isize),(-19_isize),(-9223372036854775808_isize),34_isize,86_isize,11_isize];
_10.1 = [(-117535817550300102287393942170592492399_i128),(-114781162224294742044232649856166161756_i128),67278741551557610491136191129226463137_i128,148848713408530148440666442156503391462_i128,(-37701668124186785203786717169035207599_i128),149565595575949198876161020637425103407_i128,47653829012159648693059241194083466456_i128];
_7 = [true,true,true,true];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-48_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_10.0 = [6654047474196924065_u64,5281927919133497171_u64,17166569591178653905_u64,18263484918724698365_u64,8053326601480833349_u64];
_7 = [true,false,true,false];
Goto(bb4)
}
bb4 = {
_11 = [_6,_6,_6,_6];
_5 = 0_usize as f64;
_7 = [true,false,false,false];
RET = _1;
RET = _2;
_9 = Adt60::Variant0 { fld0: 37041750922958957870518549995037104746_i128 };
place!(Field::<i128>(Variant(_9, 0), 0)) = -(-100805495980022377200507574845509172037_i128);
RET = [(-46_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-71_isize),(-9223372036854775808_isize)];
_11 = [_6,_6,_6,_6];
_9 = Adt60::Variant0 { fld0: 64970021546181205287778391260192290749_i128 };
place!(Field::<i128>(Variant(_9, 0), 0)) = 77279728813307400115117388658771778735_i128;
_11 = [_6,_6,_6,_6];
_4 = [(-4039078737118497298_i64)];
_5 = 167_u8 as f64;
RET = [(-9223372036854775808_isize),(-20_isize),9223372036854775807_isize,(-88_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = [9223372036854775807_isize,9223372036854775807_isize,48_isize,(-61_isize),30_isize,(-70_isize)];
RET = _2;
RET = _2;
_10.1 = [Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0)];
_11 = [_6,_6,_6,_6];
_5 = 194_u8 as f64;
_10.1 = [Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0)];
RET = _1;
_7 = [false,false,true,true];
_12.3 = [true,true,false,false];
SetDiscriminant(_9, 1);
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_9, 1), 0)).2 = '\u{dc8f2}';
_9 = Adt60::Variant0 { fld0: 254470111669634219828430412352507997_i128 };
_12.2 = '\u{20c6f}';
match _6 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
28309 => bb11,
_ => bb10
}
}
bb5 = {
_2 = [(-9223372036854775808_isize),(-34_isize),63_isize,76_isize,9223372036854775807_isize,(-45_isize)];
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),25_isize];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-117_isize),(-100_isize),6_isize,109_isize];
_4 = [(-1101727647896159537_i64)];
_4 = [2374896551181015308_i64];
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-79_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-121_isize),(-9223372036854775808_isize),(-119_isize),9223372036854775807_isize];
_5 = 13398055790858454412_u64 as f64;
_6 = 26296_u16;
_5 = 30115_i16 as f64;
_4 = [(-1224161466308149217_i64)];
_6 = 28309_u16;
RET = [(-9223372036854775808_isize),9223372036854775807_isize,(-99_isize),22_isize,(-9223372036854775808_isize),80_isize];
_7 = [false,false,false,true];
_8 = 13695_i16 | (-4713_i16);
_7 = [false,true,false,true];
_2 = [(-19_isize),(-19_isize),(-9223372036854775808_isize),34_isize,86_isize,11_isize];
_10.1 = [(-117535817550300102287393942170592492399_i128),(-114781162224294742044232649856166161756_i128),67278741551557610491136191129226463137_i128,148848713408530148440666442156503391462_i128,(-37701668124186785203786717169035207599_i128),149565595575949198876161020637425103407_i128,47653829012159648693059241194083466456_i128];
_7 = [true,true,true,true];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-48_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_10.0 = [6654047474196924065_u64,5281927919133497171_u64,17166569591178653905_u64,18263484918724698365_u64,8053326601480833349_u64];
_7 = [true,false,true,false];
Goto(bb4)
}
bb6 = {
RET = _2;
_2 = [(-9223372036854775808_isize),(-85_isize),9223372036854775807_isize,9223372036854775807_isize,42_isize,9223372036854775807_isize];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-36_isize),9223372036854775807_isize,(-100_isize),49_isize];
Goto(bb3)
}
bb7 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,95_isize,(-58_isize),9223372036854775807_isize];
_2 = [(-22_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = [(-9223372036854775808_isize),(-41_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-91_isize)];
RET = [32_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-45_isize),(-9223372036854775808_isize)];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_12 = (_7, _5, '\u{6b6e7}', _7);
_10.1 = [(-72626629653077444357691730489127437631_i128),62337003876269585967376548444486850606_i128,(-11109247060450242975766401558131126452_i128),63244753956313964662225635534351869371_i128,(-66141879123831119736977967945756660046_i128),149375896726021282557453006629765028699_i128,(-112512123447198071513569043791179776227_i128)];
_12.2 = '\u{25c72}';
_12.0 = [false,true,false,false];
_8 = (-739254756831505278_i64) as i16;
RET = _1;
_10.0 = [3809479495936239527_u64,9965052463216721307_u64,2611385965726502193_u64,5230142518948813614_u64,11560107511059648325_u64];
_9 = Adt60::Variant0 { fld0: (-107469637733690410473545139955812371521_i128) };
_12.1 = -_5;
match _6 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb6,
28309 => bb12,
_ => bb7
}
}
bb12 = {
_12.3 = [false,false,false,false];
_14 = 9223372036854775807_isize >> _6;
_12.0 = _7;
_6 = !620_u16;
Goto(bb13)
}
bb13 = {
_15 = Adt60::Variant0 { fld0: 15142792508517486815002756821266219186_i128 };
RET = [_14,_14,_14,_14,_14,_14];
_8 = (-10536_i16);
place!(Field::<i128>(Variant(_15, 0), 0)) = (-140047238670017669358159156866440133615_i128) << _14;
_2 = [_14,_14,_14,_14,_14,_14];
_5 = -_12.1;
_17 = 129388755488946825374419932891041623571_u128 as f32;
place!(Field::<i128>(Variant(_9, 0), 0)) = Field::<i128>(Variant(_15, 0), 0);
_12.2 = '\u{1ee8d}';
_14 = -9223372036854775807_isize;
_12.2 = '\u{2e1a2}';
_10.1 = [Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_15, 0), 0),Field::<i128>(Variant(_15, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_15, 0), 0),Field::<i128>(Variant(_9, 0), 0),Field::<i128>(Variant(_9, 0), 0)];
RET = _1;
_12.0 = [true,true,false,true];
_15 = Adt60::Variant1 { fld0: _12 };
_8 = 3778593450_u32 as i16;
Goto(bb14)
}
bb14 = {
_12.3 = [true,false,false,false];
_11 = [_6,_6,_6,_6];
_12.2 = Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_15, 1), 0).2;
_4 = [(-7120317907087209230_i64)];
place!(Field::<([bool; 4], f64, char, [bool; 4])>(Variant(_15, 1), 0)).1 = _5 * _5;
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(13_usize, 10_usize, Move(_10), 8_usize, Move(_8), 7_usize, Move(_7), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [isize; 6],mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: [isize; 6]) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _14: bool;
let _15: [bool; 6];
let _16: Adt49;
let _17: bool;
let _18: [usize; 8];
let _19: [i128; 7];
let _20: f64;
let _21: [u64; 5];
let _22: [i64; 1];
let _23: i8;
let _24: ([u64; 5], [i128; 7]);
let _25: f32;
let _26: usize;
let _27: [u16; 4];
let _28: f32;
let _29: u32;
let _30: Adt58;
let _31: Adt60;
let _32: Adt51;
let _33: i16;
let _34: char;
let _35: u32;
let _36: u8;
let _37: char;
let _38: *const i16;
let _39: Adt53;
let _40: [u64; 5];
let _41: ([u16; 4], [i64; 1]);
let _42: ();
let _43: ();
{
RET = _11;
_12 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),104_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_10 = _8;
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-32_isize),9223372036854775807_isize];
_8 = _4;
_10 = [(-67_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),60_isize,9223372036854775807_isize,9223372036854775807_isize];
_10 = _9;
_12 = _4;
_14 = false & false;
_4 = _10;
_11 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,119_isize,(-67_isize)];
_5 = [9_isize,(-21_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_11 = [(-9223372036854775808_isize),(-104_isize),18_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-83_isize)];
_4 = _6;
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-48_isize)];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-14_isize),(-9223372036854775808_isize)];
_12 = [9223372036854775807_isize,(-9223372036854775808_isize),(-90_isize),97_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_10 = [(-59_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,10_isize,(-24_isize)];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),77_isize,(-112_isize)];
_15 = [_14,_14,_14,_14,_14,_14];
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-98_isize),(-9223372036854775808_isize),(-2_isize)];
Goto(bb1)
}
bb1 = {
_10 = [(-23_isize),(-102_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [(-9223372036854775808_isize),(-89_isize),9223372036854775807_isize,(-116_isize),(-9223372036854775808_isize),51_isize];
_12 = [(-122_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_17 = _14 >= _14;
_6 = _2;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_11 = [(-9223372036854775808_isize),123_isize,(-95_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_6 = [(-9223372036854775808_isize),43_isize,9223372036854775807_isize,(-106_isize),9223372036854775807_isize,9223372036854775807_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,50_isize,9223372036854775807_isize];
Call(RET = fn15(_7, _8, _8, _8, _13, _2, _2, _13, _3, _8, _8, _9, _7, _7, _8, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = _8;
RET = [53_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-31_isize),9223372036854775807_isize];
_4 = _9;
RET = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_8 = [(-9223372036854775808_isize),(-11_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = [9223372036854775807_isize,9223372036854775807_isize,(-107_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_1 = [55_isize,52_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-107_isize)];
_14 = _17;
_12 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,17_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [111_isize,9223372036854775807_isize,(-9223372036854775808_isize),67_isize,(-16_isize),(-96_isize)];
_20 = 7_usize as f64;
_21 = [12932180027495968025_u64,10804036900430216771_u64,17948923578964210686_u64,17228199444715521619_u64,5759736306615228841_u64];
_9 = [(-9223372036854775808_isize),(-9223372036854775808_isize),113_isize,(-2_isize),112_isize,16_isize];
_4 = _3;
_7 = [(-9223372036854775808_isize),12_isize,(-86_isize),(-9223372036854775808_isize),(-120_isize),(-9223372036854775808_isize)];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),40_isize,(-38_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_12 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = [(-33_isize),117_isize,(-9223372036854775808_isize),(-118_isize),4_isize,(-42_isize)];
_22 = [4243560470041600234_i64];
_13 = [9223372036854775807_isize,109_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9_isize)];
_10 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
Goto(bb3)
}
bb3 = {
_12 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,94_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_15 = [_14,_17,_14,_17,_14,_14];
_24.0 = _21;
_17 = _14;
_18 = [5_usize,2_usize,0_usize,3159724621321136363_usize,7207100509730746746_usize,1_usize,4628712172684903937_usize,8893817460059705949_usize];
_19 = [(-123654024794154537231270017222633860686_i128),32098265797366355922332914274000562588_i128,(-29085566470776902774824985147912198324_i128),(-83938077704970178524266783905090031901_i128),(-7359647084874426531505816530536407601_i128),(-34344418257855138081922155364506602925_i128),(-36940877500067008852964013793627420097_i128)];
_20 = 3314862661_u32 as f64;
_18 = [6_usize,4766730342058647235_usize,3_usize,9857653147798707732_usize,3_usize,0_usize,17965186834980118677_usize,2_usize];
RET = [(-54_isize),9223372036854775807_isize,(-69_isize),(-98_isize),9223372036854775807_isize,(-13_isize)];
_11 = [(-116_isize),(-72_isize),(-106_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5 = [9223372036854775807_isize,(-51_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_2 = _4;
_13 = _4;
_24 = (_21, _19);
_13 = _2;
_25 = 50107_u16 as f32;
_13 = [21_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-39_isize),5_isize];
_24 = (_21, _19);
Call(_26 = fn16(RET, _4, _4, _4, _4, _2, _4, _9, _3, _3, _4, _12, _2, _4, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_23 = (-83_i8);
_26 = 1_usize - 10943329972053013792_usize;
_26 = '\u{7523b}' as usize;
_11 = _2;
_7 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),45_isize,(-9223372036854775808_isize)];
_17 = !_14;
Goto(bb5)
}
bb5 = {
_13 = [9223372036854775807_isize,9223372036854775807_isize,(-23_isize),9223372036854775807_isize,(-9223372036854775808_isize),112_isize];
_24 = (_21, _19);
_3 = RET;
_17 = !_14;
_27 = [34212_u16,17849_u16,6138_u16,28279_u16];
_13 = [9223372036854775807_isize,35_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),27_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,67_isize,9223372036854775807_isize];
_13 = _2;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_21 = [266777571182409731_u64,4535059361620385797_u64,14809772376532751775_u64,8784856184371239474_u64,7629314066272494880_u64];
_12 = _4;
_8 = _4;
_7 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = Adt49::Variant0 { fld0: _22,fld1: _20,fld2: (-9223372036854775808_isize) };
Goto(bb6)
}
bb6 = {
_18 = [_26,_26,_26,_26,_26,_26,_26,_26];
_10 = [(-67_isize),9223372036854775807_isize,(-78_isize),43_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_10 = [71_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-94_isize),9223372036854775807_isize];
_30 = Adt58::Variant1 { fld0: 190_u8,fld1: _15,fld2: _26 };
_17 = _25 < _25;
_3 = _11;
_7 = [(-9223372036854775808_isize),55_isize,9223372036854775807_isize,9223372036854775807_isize,(-127_isize),(-102_isize)];
_3 = _4;
_23 = !(-40_i8);
_26 = Field::<usize>(Variant(_30, 1), 2) + Field::<usize>(Variant(_30, 1), 2);
_11 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),4_isize];
Goto(bb7)
}
bb7 = {
place!(Field::<[bool; 6]>(Variant(_30, 1), 1)) = [_14,_17,_14,_17,_17,_17];
place!(Field::<[bool; 6]>(Variant(_30, 1), 1)) = [_17,_14,_14,_14,_14,_14];
_26 = Field::<usize>(Variant(_30, 1), 2) >> Field::<usize>(Variant(_30, 1), 2);
_16 = Adt49::Variant0 { fld0: _22,fld1: _20,fld2: (-9223372036854775808_isize) };
RET = [(-1_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_34 = '\u{3ac68}';
_28 = _25;
_15 = [_14,_14,_14,_14,_14,_14];
_34 = '\u{d7b4}';
place!(Field::<u8>(Variant(_30, 1), 0)) = 54_u8;
_32 = Adt51::Variant0 { fld0: 9223372036854775807_isize };
place!(Field::<isize>(Variant(_32, 0), 0)) = (-41_isize) - (-9223372036854775808_isize);
place!(Field::<[i64; 1]>(Variant(_16, 0), 0)) = [(-3084672282242834693_i64)];
_29 = 543872854_u32 ^ 1857016815_u32;
_31 = Adt60::Variant0 { fld0: 86645693306774684863569579968717419604_i128 };
place!(Field::<isize>(Variant(_32, 0), 0)) = -(-80_isize);
_4 = [Field::<isize>(Variant(_32, 0), 0),Field::<isize>(Variant(_32, 0), 0),Field::<isize>(Variant(_32, 0), 0),Field::<isize>(Variant(_32, 0), 0),Field::<isize>(Variant(_32, 0), 0),Field::<isize>(Variant(_32, 0), 0)];
_24 = (_21, _19);
_20 = -Field::<f64>(Variant(_16, 0), 1);
place!(Field::<[i64; 1]>(Variant(_16, 0), 0)) = [152494319499236580_i64];
_19 = [36448079698270639209783685831253043670_i128,39206752725831973925109203692031802033_i128,(-76967892766379993541986252281256126020_i128),143573720976243106909232786219161255562_i128,(-93214154618530629223365240611261452754_i128),69435278040278627016612604586796717996_i128,(-92092971106103017507185262467845681640_i128)];
_35 = !_29;
_12 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-33_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_21 = [9000849744959438589_u64,5119331244212421300_u64,16942612349663860483_u64,5792129027055386488_u64,15773003301423559728_u64];
place!(Field::<i128>(Variant(_31, 0), 0)) = (-12304273709762534163614505125299992471_i128);
match Field::<i128>(Variant(_31, 0), 0) {
0 => bb6,
1 => bb3,
327978093211175929299760102306468218985 => bb9,
_ => bb8
}
}
bb8 = {
_23 = (-83_i8);
_26 = 1_usize - 10943329972053013792_usize;
_26 = '\u{7523b}' as usize;
_11 = _2;
_7 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),45_isize,(-9223372036854775808_isize)];
_17 = !_14;
Goto(bb5)
}
bb9 = {
place!(Field::<([isize; 6],)>(Variant(_32, 2), 5)) = (_13,);
_36 = Field::<u8>(Variant(_30, 1), 0) / Field::<u8>(Variant(_30, 1), 0);
_16 = Adt49::Variant0 { fld0: _22,fld1: _20,fld2: 115_isize };
_25 = _28 - _28;
place!(Field::<[i64; 1]>(Variant(_16, 0), 0)) = _22;
_19 = [Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0)];
_15 = Field::<[bool; 6]>(Variant(_30, 1), 1);
_17 = _14 & _14;
place!(Field::<[u8; 8]>(Variant(_32, 2), 1)) = [_36,Field::<u8>(Variant(_30, 1), 0),Field::<u8>(Variant(_30, 1), 0),_36,Field::<u8>(Variant(_30, 1), 0),_36,Field::<u8>(Variant(_30, 1), 0),_36];
_24.0 = [11266110807802475461_u64,4418646255139080831_u64,2447763723305973534_u64,17161832102427205555_u64,13104753666288117983_u64];
place!(Field::<[usize; 8]>(Variant(_32, 2), 4)) = [_26,_26,Field::<usize>(Variant(_30, 1), 2),_26,_26,_26,Field::<usize>(Variant(_30, 1), 2),_26];
_23 = (-18_i8) ^ (-31_i8);
_28 = -_25;
_35 = _29;
_24.1 = [Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0),Field::<i128>(Variant(_31, 0), 0)];
place!(Field::<Adt49>(Variant(_32, 2), 6)) = Adt49::Variant1 { fld0: _27,fld1: Field::<i128>(Variant(_31, 0), 0),fld2: Field::<[u8; 8]>(Variant(_32, 2), 1) };
place!(Field::<i128>(Variant(place!(Field::<Adt49>(Variant(_32, 2), 6)), 1), 1)) = -Field::<i128>(Variant(_31, 0), 0);
_24 = (_21, _19);
_14 = !_17;
_20 = _29 as f64;
_37 = _34;
_24.1 = _19;
place!(Field::<isize>(Variant(_16, 0), 2)) = 9223372036854775807_isize ^ 9223372036854775807_isize;
match Field::<i128>(Variant(_31, 0), 0) {
0 => bb10,
327978093211175929299760102306468218985 => bb12,
_ => bb11
}
}
bb10 = {
_3 = _8;
RET = [53_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-31_isize),9223372036854775807_isize];
_4 = _9;
RET = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_8 = [(-9223372036854775808_isize),(-11_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = [9223372036854775807_isize,9223372036854775807_isize,(-107_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_1 = [55_isize,52_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-107_isize)];
_14 = _17;
_12 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,17_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = [111_isize,9223372036854775807_isize,(-9223372036854775808_isize),67_isize,(-16_isize),(-96_isize)];
_20 = 7_usize as f64;
_21 = [12932180027495968025_u64,10804036900430216771_u64,17948923578964210686_u64,17228199444715521619_u64,5759736306615228841_u64];
_9 = [(-9223372036854775808_isize),(-9223372036854775808_isize),113_isize,(-2_isize),112_isize,16_isize];
_4 = _3;
_7 = [(-9223372036854775808_isize),12_isize,(-86_isize),(-9223372036854775808_isize),(-120_isize),(-9223372036854775808_isize)];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),40_isize,(-38_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_12 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = [(-33_isize),117_isize,(-9223372036854775808_isize),(-118_isize),4_isize,(-42_isize)];
_22 = [4243560470041600234_i64];
_13 = [9223372036854775807_isize,109_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9_isize)];
_10 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
Goto(bb3)
}
bb11 = {
_10 = [(-23_isize),(-102_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [(-9223372036854775808_isize),(-89_isize),9223372036854775807_isize,(-116_isize),(-9223372036854775808_isize),51_isize];
_12 = [(-122_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_17 = _14 >= _14;
_6 = _2;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_11 = [(-9223372036854775808_isize),123_isize,(-95_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_6 = [(-9223372036854775808_isize),43_isize,9223372036854775807_isize,(-106_isize),9223372036854775807_isize,9223372036854775807_isize];
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,50_isize,9223372036854775807_isize];
Call(RET = fn15(_7, _8, _8, _8, _13, _2, _2, _13, _3, _8, _8, _9, _7, _7, _8, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_2 = [Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2)];
_20 = Field::<f64>(Variant(_16, 0), 1) + Field::<f64>(Variant(_16, 0), 1);
RET = [Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2)];
place!(Field::<[u8; 8]>(Variant(place!(Field::<Adt49>(Variant(_32, 2), 6)), 1), 2)) = Field::<[u8; 8]>(Variant(_32, 2), 1);
_20 = Field::<f64>(Variant(_16, 0), 1) * Field::<f64>(Variant(_16, 0), 1);
Goto(bb13)
}
bb13 = {
RET = [Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2),Field::<isize>(Variant(_16, 0), 2)];
_25 = _28 * _28;
RET = _13;
SetDiscriminant(Field::<Adt49>(Variant(_32, 2), 6), 1);
place!(Field::<[i64; 1]>(Variant(_16, 0), 0)) = [4058050463542408307_i64];
SetDiscriminant(_16, 0);
_29 = (-191_i16) as u32;
_21 = _24.0;
place!(Field::<[u8; 8]>(Variant(place!(Field::<Adt49>(Variant(_32, 2), 6)), 1), 2)) = Field::<[u8; 8]>(Variant(_32, 2), 1);
place!(Field::<[usize; 8]>(Variant(_32, 2), 4)) = [Field::<usize>(Variant(_30, 1), 2),_26,_26,Field::<usize>(Variant(_30, 1), 2),_26,_26,Field::<usize>(Variant(_30, 1), 2),_26];
_28 = -_25;
_29 = 9223372036854775807_isize as u32;
place!(Field::<[u16; 4]>(Variant(place!(Field::<Adt49>(Variant(_32, 2), 6)), 1), 0)) = [9551_u16,50009_u16,60841_u16,25658_u16];
Goto(bb14)
}
bb14 = {
Call(_42 = dump_var(14_usize, 36_usize, Move(_36), 26_usize, Move(_26), 13_usize, Move(_13), 18_usize, Move(_18)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_42 = dump_var(14_usize, 34_usize, Move(_34), 35_usize, Move(_35), 2_usize, Move(_2), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(14_usize, 12_usize, Move(_12), 6_usize, Move(_6), 14_usize, Move(_14), 37_usize, Move(_37)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(14_usize, 29_usize, Move(_29), 10_usize, Move(_10), 43_usize, _43, 43_usize, _43), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [isize; 6],mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: [isize; 6],mut _14: [isize; 6],mut _15: [isize; 6],mut _16: [isize; 6]) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _17: [u128; 7];
let _18: u16;
let _19: Adt58;
let _20: [usize; 1];
let _21: [usize; 1];
let _22: Adt55;
let _23: [i64; 1];
let _24: isize;
let _25: u32;
let _26: ();
let _27: ();
{
_11 = _10;
_6 = _5;
_17 = [176203560601874873005241033665469061324_u128,83195897223977885233260794936700686205_u128,87212584245221472889365904084562149746_u128,178823270942397234592805465258672973021_u128,109214256988080652752749798835070415746_u128,109632267289377122574129038658124586925_u128,136659181461656008801874507017585357380_u128];
_16 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,65_isize];
_5 = [118_isize,(-48_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-38_isize)];
_21 = [0_usize];
Goto(bb1)
}
bb1 = {
_15 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_20 = [4_usize];
_17 = [142721061645778414770254602867223727791_u128,134732499824292699195759613108777535093_u128,191364378318106741544886889768860796601_u128,177789757847652353465604180281762279323_u128,30142619112443166838298868422295418714_u128,256989967504071324761136085776009578901_u128,175788247156912400525526492295547846914_u128];
RET = [83_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-29_isize),57_isize,18_isize];
_20 = [1_usize];
_1 = _7;
_2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),101_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_18 = 43436_u16;
RET = [35_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-108_isize),(-115_isize),9223372036854775807_isize];
_18 = 25067_u16 | 49171_u16;
_5 = _7;
_14 = _9;
_10 = _6;
_17 = [217318530858032582674621482510260177763_u128,20860084209919692117161300751070401494_u128,67350193612101028540420207146667445512_u128,61195419625197737004136630375569023633_u128,145299961175807451403105392483675463454_u128,21672771102928971909510704765676258189_u128,182827883809584442132066133096684759368_u128];
_15 = [(-118_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = [9223372036854775807_isize,19_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),80_isize];
_20 = _21;
RET = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),89_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_16 = _14;
_1 = [126_isize,9223372036854775807_isize,(-44_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),16_isize];
_9 = [(-81_isize),(-9223372036854775808_isize),(-38_isize),9223372036854775807_isize,(-93_isize),9223372036854775807_isize];
_16 = [74_isize,(-9223372036854775808_isize),(-46_isize),(-99_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_4 = [104_isize,(-9223372036854775808_isize),(-84_isize),(-99_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_8 = _3;
_23 = [844540893321921833_i64];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),56_isize,9223372036854775807_isize,9223372036854775807_isize];
Goto(bb2)
}
bb2 = {
RET = [(-128_isize),9223372036854775807_isize,8_isize,(-9223372036854775808_isize),(-80_isize),(-9223372036854775808_isize)];
_16 = [(-53_isize),64_isize,(-9223372036854775808_isize),(-50_isize),44_isize,9223372036854775807_isize];
_25 = 2271122734_u32;
_15 = [(-9223372036854775808_isize),90_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-61_isize)];
_10 = _8;
_20 = [992990071737935960_usize];
_21 = [4_usize];
_1 = _13;
_4 = [9223372036854775807_isize,9223372036854775807_isize,90_isize,(-46_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_21 = _20;
RET = _11;
_1 = [(-116_isize),11_isize,31_isize,9223372036854775807_isize,(-47_isize),(-9223372036854775808_isize)];
_2 = _8;
Goto(bb3)
}
bb3 = {
Call(_26 = dump_var(15_usize, 3_usize, Move(_3), 9_usize, Move(_9), 2_usize, Move(_2), 20_usize, Move(_20)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_26 = dump_var(15_usize, 18_usize, Move(_18), 1_usize, Move(_1), 17_usize, Move(_17), 7_usize, Move(_7)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_26 = dump_var(15_usize, 12_usize, Move(_12), 10_usize, Move(_10), 25_usize, Move(_25), 27_usize, _27), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [isize; 6],mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: [isize; 6],mut _14: [isize; 6],mut _15: [isize; 6]) -> usize {
mir! {
type RET = usize;
let _16: [bool; 6];
let _17: [u128; 7];
let _18: u128;
let _19: i128;
let _20: f64;
let _21: *mut bool;
let _22: u16;
let _23: u16;
let _24: isize;
let _25: i64;
let _26: Adt45;
let _27: char;
let _28: [u128; 7];
let _29: isize;
let _30: Adt55;
let _31: ([isize; 6],);
let _32: Adt58;
let _33: f32;
let _34: Adt49;
let _35: [u8; 8];
let _36: Adt46;
let _37: i16;
let _38: [i64; 1];
let _39: [u16; 4];
let _40: Adt58;
let _41: bool;
let _42: isize;
let _43: isize;
let _44: [bool; 4];
let _45: [u64; 5];
let _46: [u16; 4];
let _47: u16;
let _48: Adt52;
let _49: [isize; 1];
let _50: f64;
let _51: char;
let _52: Adt53;
let _53: *const i16;
let _54: isize;
let _55: bool;
let _56: Adt53;
let _57: ();
let _58: ();
{
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,40_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_10 = _9;
_9 = _15;
RET = (-19875_i16) as usize;
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [76_isize,(-9223372036854775808_isize),12_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_9 = [(-127_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-126_isize),110_isize];
RET = 83820558536585237277787789357757500180_i128 as usize;
_2 = [(-89_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),122_isize];
_14 = [(-9223372036854775808_isize),(-87_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),56_isize,86_isize];
_11 = _13;
_9 = [9223372036854775807_isize,111_isize,9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [9223372036854775807_isize,117_isize,10_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
Goto(bb1)
}
bb1 = {
_3 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,48_isize,(-9223372036854775808_isize)];
_19 = -(-52170582907353075911989464079502904427_i128);
_7 = _13;
_18 = 9223372036854775807_isize as u128;
_2 = [98_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb2)
}
bb2 = {
_20 = _19 as f64;
_6 = [9223372036854775807_isize,(-43_isize),(-91_isize),(-9223372036854775808_isize),9223372036854775807_isize,29_isize];
RET = 1989713933_i32 as usize;
_14 = [54_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-2_isize)];
_23 = !46622_u16;
_7 = [(-65_isize),(-9223372036854775808_isize),(-97_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_20 = _19 as f64;
_22 = _20 as u16;
Goto(bb3)
}
bb3 = {
_25 = 29703_i16 as i64;
_23 = !_22;
Call(_23 = fn17(_13, _11, _11, _13, _11, _7, _11, _4, _5, _13, _11, _1, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Goto(bb5)
}
bb5 = {
_23 = _22 ^ _22;
Goto(bb6)
}
bb6 = {
_4 = _11;
RET = false as usize;
_7 = [9223372036854775807_isize,(-46_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_3 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
RET = 7366380422043550738_usize;
_13 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-106_isize)];
_7 = [39_isize,9223372036854775807_isize,81_isize,(-52_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_27 = '\u{c864e}';
_29 = !(-9223372036854775808_isize);
_1 = [_29,_29,_29,_29,_29,_29];
_24 = _29 >> RET;
_16 = [true,true,true,false,true,true];
_24 = _25 as isize;
_9 = _4;
_20 = 104_u8 as f64;
_20 = 2005370117_i32 as f64;
_12 = [_29,_29,_24,_29,_24,_29];
_31 = (_5,);
Goto(bb7)
}
bb7 = {
RET = 1809803052_i32 as usize;
_15 = [_29,_29,_24,_24,_24,_24];
_27 = '\u{1e058}';
_17 = [_18,_18,_18,_18,_18,_18,_18];
_7 = [_29,_29,_29,_29,_24,_29];
_3 = [_24,_24,_24,_29,_29,_29];
_19 = (-80961009847569819339993454591518658149_i128) * (-83604566159357391159880495825584495466_i128);
RET = _18 as usize;
_27 = '\u{8210a}';
_21 = core::ptr::addr_of_mut!(_36.fld0);
_2 = [_24,_29,_24,_24,_24,_24];
_29 = _24 | _24;
_18 = 190545987808684149567612928280235654732_u128 << _25;
_6 = [_24,_24,_29,_29,_29,_24];
_11 = [_29,_29,_29,_24,_24,_24];
_36.fld5 = [true,false,false,false];
_15 = [_24,_29,_29,_29,_29,_24];
_25 = (-7949602226742969991_i64);
_5 = [_29,_29,_24,_29,_24,_29];
_37 = 24248_i16;
_5 = _4;
RET = 210_u8 as usize;
_20 = _29 as f64;
_36.fld6 = _18;
match _25 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb5,
340282366920938463455425005205025241465 => bb9,
_ => bb8
}
}
bb8 = {
_3 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,48_isize,(-9223372036854775808_isize)];
_19 = -(-52170582907353075911989464079502904427_i128);
_7 = _13;
_18 = 9223372036854775807_isize as u128;
_2 = [98_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb2)
}
bb9 = {
_22 = _23;
_22 = _23;
_19 = 69205258_i32 as i128;
_40 = Adt58::Variant1 { fld0: 25_u8,fld1: _16,fld2: RET };
_36.fld1 = (-553981021_i32) as u8;
_3 = [_24,_24,_29,_29,_24,_24];
_18 = _20 as u128;
place!(Field::<u8>(Variant(_40, 1), 0)) = _36.fld1;
Goto(bb10)
}
bb10 = {
_36.fld6 = _18 + _18;
_39 = [_23,_23,_22,_23];
_14 = _4;
_15 = [_29,_24,_29,_29,_24,_29];
_36.fld4 = _22 >> _22;
_43 = _24 >> _36.fld6;
_36.fld1 = RET as u8;
_43 = Field::<usize>(Variant(_40, 1), 2) as isize;
_5 = _4;
_29 = !_43;
_36.fld6 = !_18;
_13 = _5;
_1 = _14;
_31.0 = [_29,_43,_43,_43,_43,_24];
_44 = [true,true,false,false];
place!(Field::<[bool; 6]>(Variant(_40, 1), 1)) = [true,false,true,false,false,false];
_40 = Adt58::Variant1 { fld0: _36.fld1,fld1: _16,fld2: RET };
_32 = Adt58::Variant1 { fld0: Field::<u8>(Variant(_40, 1), 0),fld1: Field::<[bool; 6]>(Variant(_40, 1), 1),fld2: RET };
_3 = [_29,_24,_29,_43,_29,_24];
Goto(bb11)
}
bb11 = {
_28 = [_36.fld6,_36.fld6,_36.fld6,_18,_18,_36.fld6,_18];
match _25 {
340282366920938463455425005205025241465 => bb13,
_ => bb12
}
}
bb12 = {
_22 = _23;
_22 = _23;
_19 = 69205258_i32 as i128;
_40 = Adt58::Variant1 { fld0: 25_u8,fld1: _16,fld2: RET };
_36.fld1 = (-553981021_i32) as u8;
_3 = [_24,_24,_29,_29,_24,_24];
_18 = _20 as u128;
place!(Field::<u8>(Variant(_40, 1), 0)) = _36.fld1;
Goto(bb10)
}
bb13 = {
_42 = _43;
_23 = _22 & _36.fld4;
_8 = [_42,_43,_24,_24,_24,_29];
_18 = _36.fld6 | _36.fld6;
_39 = [_23,_23,_23,_22];
_26 = Adt45::Variant1 { fld0: _23 };
_49 = [_43];
_43 = _27 as isize;
_13 = [_42,_24,_43,_24,_43,_43];
_46 = _39;
_6 = [_42,_29,_42,_42,_29,_42];
_25 = -(-7239080081943299872_i64);
_17 = [_18,_18,_36.fld6,_36.fld6,_18,_18,_18];
_41 = true & true;
_1 = [_29,_42,_43,_24,_42,_24];
_22 = _36.fld4;
place!(Field::<usize>(Variant(_40, 1), 2)) = RET;
_22 = _23;
Goto(bb14)
}
bb14 = {
_51 = _27;
_4 = [_43,_24,_42,_42,_29,_29];
_29 = !_24;
_12 = [_42,_24,_24,_43,_43,_43];
SetDiscriminant(_32, 1);
_13 = [_43,_24,_24,_29,_42,_43];
_19 = 99735480492765348575958542640941644921_i128 << _18;
_46 = [_22,_36.fld4,_22,_36.fld4];
_23 = !Field::<u16>(Variant(_26, 1), 0);
Goto(bb15)
}
bb15 = {
Call(_57 = dump_var(16_usize, 31_usize, Move(_31), 10_usize, Move(_10), 6_usize, Move(_6), 24_usize, Move(_24)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_57 = dump_var(16_usize, 51_usize, Move(_51), 3_usize, Move(_3), 13_usize, Move(_13), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_57 = dump_var(16_usize, 2_usize, Move(_2), 12_usize, Move(_12), 37_usize, Move(_37), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_57 = dump_var(16_usize, 23_usize, Move(_23), 17_usize, Move(_17), 9_usize, Move(_9), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_57 = dump_var(16_usize, 27_usize, Move(_27), 22_usize, Move(_22), 58_usize, _58, 58_usize, _58), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [isize; 6],mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [isize; 6],mut _12: [isize; 6],mut _13: [isize; 6]) -> u16 {
mir! {
type RET = u16;
let _14: Adt61;
let _15: [u8; 8];
let _16: Adt46;
let _17: Adt56;
let _18: i64;
let _19: (f64, &'static ([isize; 6],));
let _20: f32;
let _21: isize;
let _22: isize;
let _23: u64;
let _24: i128;
let _25: ([isize; 6],);
let _26: char;
let _27: isize;
let _28: isize;
let _29: Adt50;
let _30: i64;
let _31: Adt46;
let _32: char;
let _33: i8;
let _34: isize;
let _35: isize;
let _36: Adt61;
let _37: Adt60;
let _38: isize;
let _39: i8;
let _40: [isize; 6];
let _41: (u64, *mut u128, u8, i32);
let _42: bool;
let _43: bool;
let _44: isize;
let _45: ([isize; 6],);
let _46: [isize; 6];
let _47: i32;
let _48: [u16; 4];
let _49: ();
let _50: ();
{
_1 = [49_isize,56_isize,(-9223372036854775808_isize),9223372036854775807_isize,4_isize,(-127_isize)];
_10 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-67_isize)];
_9 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-47_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_14.fld0.3 = (-144685967476896190_i64) as i32;
_12 = _7;
Goto(bb1)
}
bb1 = {
_4 = [(-9223372036854775808_isize),97_isize,15_isize,9223372036854775807_isize,(-101_isize),9223372036854775807_isize];
_16.fld5 = [false,false,true,true];
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-113_isize),44_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_15 = [144_u8,0_u8,12_u8,54_u8,190_u8,207_u8,69_u8,39_u8];
_16.fld5 = [true,true,true,true];
_14.fld0.0 = !1963362662544785750_u64;
_11 = [59_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,61_isize,9223372036854775807_isize];
_16.fld6 = (-151080913060791624007747348812538396721_i128) as u128;
_11 = _8;
_6 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-112_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_14.fld0.0 = !5548461857305885807_u64;
_17.fld4 = -(-165934220177458903649211961834171296264_i128);
_17.fld2 = [false,false,false,false];
_16.fld3 = [7_usize];
_9 = _12;
_16.fld1 = 59_u8 ^ 77_u8;
_19.0 = _17.fld4 as f64;
_14.fld0.0 = 9796697316533522640_u64;
_16.fld4 = 48361_u16;
_16.fld5 = [true,false,true,true];
_18 = 6077023528730881784_i64 ^ (-3838688289320980036_i64);
_15 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1,_16.fld1];
_16.fld5 = _17.fld2;
_22 = 9223372036854775807_isize & (-16_isize);
_14.fld0.2 = _17.fld4 as u8;
Goto(bb2)
}
bb2 = {
RET = !_16.fld4;
_16.fld4 = !RET;
_17.fld4 = _14.fld0.0 as i128;
_16.fld0 = _18 == _18;
RET = _14.fld0.0 as u16;
_19.1 = &_25;
_21 = _22 >> _22;
RET = _16.fld6 as u16;
_23 = _14.fld0.3 as u64;
_16.fld4 = 27_i8 as u16;
_14.fld0.0 = 76_i8 as u64;
_21 = !_22;
_25.0 = [_21,_21,_21,_21,_22,_21];
_17.fld2 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_16.fld1 = _14.fld0.2;
_11 = [_21,_22,_22,_21,_22,_22];
_19.1 = &_25;
_14.fld0.1 = core::ptr::addr_of_mut!(_16.fld6);
_9 = [_21,_21,_22,_21,_21,_21];
_17.fld2 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_17.fld0 = Adt51::Variant0 { fld0: _22 };
_1 = [_21,_22,Field::<isize>(Variant(_17.fld0, 0), 0),_21,_22,_22];
_16.fld4 = (-109_i8) as u16;
Goto(bb3)
}
bb3 = {
_16.fld3 = [0_usize];
_3 = _7;
_20 = _14.fld0.3 as f32;
RET = _16.fld4;
SetDiscriminant(_17.fld0, 1);
_15 = [_16.fld1,_14.fld0.2,_16.fld1,_16.fld1,_14.fld0.2,_16.fld1,_16.fld1,_16.fld1];
_21 = !_22;
_17.fld0 = Adt51::Variant0 { fld0: _22 };
_4 = [_22,_22,_21,_21,_21,Field::<isize>(Variant(_17.fld0, 0), 0)];
_19.1 = &_25;
_16.fld0 = !false;
_7 = [_21,Field::<isize>(Variant(_17.fld0, 0), 0),_22,Field::<isize>(Variant(_17.fld0, 0), 0),_22,Field::<isize>(Variant(_17.fld0, 0), 0)];
_30 = _16.fld1 as i64;
_26 = '\u{4694a}';
_14.fld0.2 = _16.fld1;
_19.1 = &_25;
_7 = [Field::<isize>(Variant(_17.fld0, 0), 0),_22,_22,_22,Field::<isize>(Variant(_17.fld0, 0), 0),_21];
_6 = [_22,Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0),_21,_22];
Goto(bb4)
}
bb4 = {
_14.fld0.2 = 2211517294_u32 as u8;
_16.fld1 = _18 as u8;
_31.fld1 = _16.fld1 & _16.fld1;
_31.fld4 = _21 as u16;
_16.fld1 = _31.fld1;
_31.fld4 = RET ^ RET;
Call(_6 = core::intrinsics::transmute(_3), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_31.fld1 = _16.fld1;
_17.fld0 = Adt51::Variant0 { fld0: _22 };
_16.fld3 = [5518649749591445968_usize];
_21 = !_22;
_16.fld6 = 146953549646770028779213923577480141878_u128;
SetDiscriminant(_17.fld0, 0);
_16.fld3 = [2104391012980755198_usize];
_23 = !_14.fld0.0;
place!(Field::<isize>(Variant(_17.fld0, 0), 0)) = _21;
_17.fld0 = Adt51::Variant0 { fld0: _22 };
RET = _31.fld1 as u16;
_10 = [Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0),_22,Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0)];
_31.fld0 = _16.fld0 ^ _16.fld0;
_25 = (_12,);
_31.fld5 = _17.fld2;
_31.fld3 = [0_usize];
_28 = _20 as isize;
_11 = _5;
_13 = _11;
_24 = _17.fld4 & _17.fld4;
_9 = [_22,Field::<isize>(Variant(_17.fld0, 0), 0),_28,_22,Field::<isize>(Variant(_17.fld0, 0), 0),_28];
_12 = _11;
_7 = [_21,Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0),_22,_22,Field::<isize>(Variant(_17.fld0, 0), 0)];
Goto(bb6)
}
bb6 = {
_7 = [_21,_28,_28,_22,_22,Field::<isize>(Variant(_17.fld0, 0), 0)];
_6 = _13;
_16.fld4 = RET;
_33 = _16.fld6 as i8;
Goto(bb7)
}
bb7 = {
_36.fld0.2 = _16.fld1;
_17.fld4 = !_24;
_15 = [_16.fld1,_31.fld1,_36.fld0.2,_16.fld1,_36.fld0.2,_36.fld0.2,_36.fld0.2,_14.fld0.2];
_32 = _26;
_28 = _16.fld6 as isize;
_16.fld2 = core::ptr::addr_of_mut!(_39);
_31.fld3 = [3402938910417875350_usize];
match _16.fld6 {
0 => bb2,
146953549646770028779213923577480141878 => bb9,
_ => bb8
}
}
bb8 = {
RET = !_16.fld4;
_16.fld4 = !RET;
_17.fld4 = _14.fld0.0 as i128;
_16.fld0 = _18 == _18;
RET = _14.fld0.0 as u16;
_19.1 = &_25;
_21 = _22 >> _22;
RET = _16.fld6 as u16;
_23 = _14.fld0.3 as u64;
_16.fld4 = 27_i8 as u16;
_14.fld0.0 = 76_i8 as u64;
_21 = !_22;
_25.0 = [_21,_21,_21,_21,_22,_21];
_17.fld2 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_16.fld1 = _14.fld0.2;
_11 = [_21,_22,_22,_21,_22,_22];
_19.1 = &_25;
_14.fld0.1 = core::ptr::addr_of_mut!(_16.fld6);
_9 = [_21,_21,_22,_21,_21,_21];
_17.fld2 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_17.fld0 = Adt51::Variant0 { fld0: _22 };
_1 = [_21,_22,Field::<isize>(Variant(_17.fld0, 0), 0),_21,_22,_22];
_16.fld4 = (-109_i8) as u16;
Goto(bb3)
}
bb9 = {
_31.fld2 = core::ptr::addr_of_mut!(_33);
_16.fld4 = !RET;
_29 = Adt50::Variant0 { fld0: _16 };
SetDiscriminant(_29, 0);
_20 = _23 as f32;
_31.fld5 = _16.fld5;
_33 = 119_i8 ^ (-36_i8);
_29 = Adt50::Variant0 { fld0: _16 };
_19.0 = Field::<Adt46>(Variant(_29, 0), 0).fld6 as f64;
place!(Field::<Adt46>(Variant(_29, 0), 0)).fld6 = _16.fld6 >> _14.fld0.3;
_31.fld0 = _32 != _26;
_10 = _6;
_31.fld4 = Field::<Adt46>(Variant(_29, 0), 0).fld4;
_31.fld1 = 14330695210816900149_usize as u8;
_38 = -_22;
_16 = Adt46 { fld0: Field::<Adt46>(Variant(_29, 0), 0).fld0,fld1: Field::<Adt46>(Variant(_29, 0), 0).fld1,fld2: _31.fld2,fld3: _31.fld3,fld4: Field::<Adt46>(Variant(_29, 0), 0).fld4,fld5: Field::<Adt46>(Variant(_29, 0), 0).fld5,fld6: Field::<Adt46>(Variant(_29, 0), 0).fld6 };
Goto(bb10)
}
bb10 = {
_23 = _14.fld0.0 * _14.fld0.0;
RET = _16.fld4 ^ _16.fld4;
_36.fld0.1 = _14.fld0.1;
place!(Field::<Adt46>(Variant(_29, 0), 0)).fld4 = !RET;
_23 = !_14.fld0.0;
_26 = _32;
_41 = (_14.fld0.0, _36.fld0.1, _14.fld0.2, _14.fld0.3);
_2 = [_22,Field::<isize>(Variant(_17.fld0, 0), 0),_22,_22,_28,_38];
_5 = _6;
_28 = _18 as isize;
_41 = _14.fld0;
_41.0 = !_23;
_39 = !_33;
_36 = Adt61 { fld0: _41 };
_22 = _38;
_15 = [Field::<Adt46>(Variant(_29, 0), 0).fld1,_36.fld0.2,_36.fld0.2,_16.fld1,_36.fld0.2,_16.fld1,_16.fld1,_41.2];
_16.fld6 = Field::<Adt46>(Variant(_29, 0), 0).fld6 << _16.fld4;
_41.2 = 10188818296827729269_usize as u8;
_14.fld0.3 = _41.3 << _39;
_14.fld0.3 = _41.3;
_28 = _21 | _38;
_31.fld2 = _16.fld2;
_20 = _39 as f32;
_40 = [_21,_28,_28,_28,_22,_21];
_23 = _41.0;
RET = !Field::<Adt46>(Variant(_29, 0), 0).fld4;
_18 = _30;
_23 = _41.0;
Call(_41.3 = fn18(_6, _11, _3, _6, _11, _3, _11, _6, _13, _25, _6, _36.fld0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_31.fld0 = !_16.fld0;
_43 = _31.fld0 ^ _16.fld0;
_33 = _39 >> _16.fld6;
_31.fld6 = _38 as u128;
_13 = [Field::<isize>(Variant(_17.fld0, 0), 0),_38,_21,_22,_22,_28];
_16.fld3 = [3_usize];
_9 = _25.0;
_46 = [_28,_21,_38,_22,_28,Field::<isize>(Variant(_17.fld0, 0), 0)];
_45 = (_9,);
Goto(bb12)
}
bb12 = {
_41 = (_14.fld0.0, _36.fld0.1, _16.fld1, _36.fld0.3);
_7 = [Field::<isize>(Variant(_17.fld0, 0), 0),Field::<isize>(Variant(_17.fld0, 0), 0),_28,Field::<isize>(Variant(_17.fld0, 0), 0),_21,_21];
_19.1 = &_45;
_38 = _18 as isize;
place!(Field::<Adt46>(Variant(_29, 0), 0)).fld3 = [0_usize];
_31.fld5 = Field::<Adt46>(Variant(_29, 0), 0).fld5;
_16.fld2 = _31.fld2;
_17.fld2 = _31.fld5;
_16.fld0 = _43 & _31.fld0;
_45 = _25;
_30 = _18;
SetDiscriminant(_29, 0);
Call(place!(Field::<Adt46>(Variant(_29, 0), 0)).fld5 = fn19(_45.0, _3, _25), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
SetDiscriminant(_17.fld0, 3);
_18 = _33 as i64;
place!(Field::<Adt46>(Variant(_29, 0), 0)) = Adt46 { fld0: _31.fld0,fld1: _41.2,fld2: _16.fld2,fld3: _31.fld3,fld4: RET,fld5: _17.fld2,fld6: _31.fld6 };
_11 = _25.0;
_31.fld2 = _16.fld2;
_46 = [_28,_21,_28,_22,_28,_22];
place!(Field::<(f64,)>(Variant(_17.fld0, 3), 0)) = (_19.0,);
_5 = [_28,_21,_22,_38,_28,_38];
place!(Field::<(u64, *mut u128, u8, i32)>(Variant(_17.fld0, 3), 3)).2 = _41.2;
_37 = Adt60::Variant0 { fld0: _17.fld4 };
Goto(bb14)
}
bb14 = {
_17.fld2 = _31.fld5;
_3 = [_28,_28,_22,_21,_21,_38];
_23 = _14.fld0.0 - _14.fld0.0;
place!(Field::<f32>(Variant(_17.fld0, 3), 1)) = _20;
_23 = _41.0;
_11 = _12;
_45.0 = _25.0;
place!(Field::<Adt46>(Variant(_29, 0), 0)).fld6 = _19.0 as u128;
_19.1 = &_45;
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(17_usize, 5_usize, Move(_5), 38_usize, Move(_38), 13_usize, Move(_13), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(17_usize, 33_usize, Move(_33), 26_usize, Move(_26), 12_usize, Move(_12), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(17_usize, 46_usize, Move(_46), 21_usize, Move(_21), 39_usize, Move(_39), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(17_usize, 6_usize, Move(_6), 43_usize, Move(_43), 10_usize, Move(_10), 50_usize, _50), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: [isize; 6],mut _4: [isize; 6],mut _5: [isize; 6],mut _6: [isize; 6],mut _7: [isize; 6],mut _8: [isize; 6],mut _9: [isize; 6],mut _10: ([isize; 6],),mut _11: [isize; 6],mut _12: (u64, *mut u128, u8, i32)) -> i32 {
mir! {
type RET = i32;
let _13: Adt51;
let _14: (isize, i16, u128, i8);
let _15: Adt52;
let _16: [bool; 4];
let _17: isize;
let _18: [bool; 6];
let _19: [isize; 1];
let _20: [bool; 4];
let _21: [i32; 3];
let _22: i32;
let _23: isize;
let _24: [u64; 5];
let _25: Adt60;
let _26: i8;
let _27: ([u64; 5], [i128; 7]);
let _28: i32;
let _29: isize;
let _30: f32;
let _31: *mut u128;
let _32: i16;
let _33: Adt49;
let _34: (isize, i16, u128, i8);
let _35: ();
let _36: ();
{
_11 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,60_isize];
_3 = _8;
_3 = [9223372036854775807_isize,9223372036854775807_isize,60_isize,49_isize,(-9223372036854775808_isize),(-84_isize)];
RET = -_12.3;
_9 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),94_isize,57_isize];
_14.0 = !9223372036854775807_isize;
_10 = (_2,);
_14.3 = false as i8;
_14 = (9223372036854775807_isize, (-719_i16), 72047032431931223002594225527075633825_u128, 126_i8);
_12.2 = 223_u8;
_12.0 = 3248095684556924571_u64 + 8572359516428679416_u64;
_12.3 = -RET;
_14.3 = _14.2 as i8;
_10.0 = _2;
_12.1 = core::ptr::addr_of_mut!(_14.2);
_16 = [true,true,true,false];
_10.0 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_11 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
RET = '\u{ed403}' as i32;
_12.1 = core::ptr::addr_of_mut!(_14.2);
match _14.1 {
0 => bb1,
340282366920938463463374607431768210737 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_14 = (9223372036854775807_isize, 13969_i16, 332598726517811849797327801844796070702_u128, (-105_i8));
_17 = !_14.0;
_11 = _5;
_11 = [_14.0,_14.0,_14.0,_17,_17,_14.0];
_9 = [_17,_17,_14.0,_14.0,_14.0,_14.0];
_20 = [false,false,true,true];
_12.1 = core::ptr::addr_of_mut!(_14.2);
_14 = (_17, 2086_i16, 311789045804500710975405308051686998168_u128, 121_i8);
_16 = [false,false,true,true];
_8 = [_14.0,_14.0,_17,_17,_14.0,_17];
_22 = _12.3;
_7 = [_14.0,_17,_14.0,_14.0,_17,_14.0];
_2 = [_14.0,_14.0,_14.0,_17,_17,_17];
_5 = _4;
_19 = [_14.0];
_12.1 = core::ptr::addr_of_mut!(_14.2);
_18 = [false,true,false,true,true,false];
Goto(bb4)
}
bb4 = {
_14.2 = 97746391202863050040294562381799427169_u128 >> _22;
_14.1 = _12.0 as i16;
_22 = _12.3;
Goto(bb5)
}
bb5 = {
_24 = [_12.0,_12.0,_12.0,_12.0,_12.0];
_6 = [_17,_17,_17,_14.0,_14.0,_17];
_16 = _20;
_10 = (_4,);
_25 = Adt60::Variant0 { fld0: (-1926614214245768790345896417264727485_i128) };
Call(_8 = core::intrinsics::transmute(_6), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = _4;
_16 = [true,true,true,false];
_5 = _1;
_22 = _12.3;
_10.0 = [_17,_14.0,_17,_14.0,_14.0,_14.0];
place!(Field::<i128>(Variant(_25, 0), 0)) = _14.1 as i128;
place!(Field::<i128>(Variant(_25, 0), 0)) = _14.3 as i128;
_28 = 15382864607929164398_usize as i32;
Goto(bb7)
}
bb7 = {
_12.3 = RET;
_12.3 = _28;
_28 = RET;
_3 = [_14.0,_14.0,_17,_14.0,_14.0,_17];
_4 = _1;
SetDiscriminant(_25, 0);
match _14.3 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
121 => bb13,
_ => bb12
}
}
bb8 = {
_8 = _4;
_16 = [true,true,true,false];
_5 = _1;
_22 = _12.3;
_10.0 = [_17,_14.0,_17,_14.0,_14.0,_14.0];
place!(Field::<i128>(Variant(_25, 0), 0)) = _14.1 as i128;
place!(Field::<i128>(Variant(_25, 0), 0)) = _14.3 as i128;
_28 = 15382864607929164398_usize as i32;
Goto(bb7)
}
bb9 = {
_24 = [_12.0,_12.0,_12.0,_12.0,_12.0];
_6 = [_17,_17,_17,_14.0,_14.0,_17];
_16 = _20;
_10 = (_4,);
_25 = Adt60::Variant0 { fld0: (-1926614214245768790345896417264727485_i128) };
Call(_8 = core::intrinsics::transmute(_6), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_14.2 = 97746391202863050040294562381799427169_u128 >> _22;
_14.1 = _12.0 as i16;
_22 = _12.3;
Goto(bb5)
}
bb11 = {
_14 = (9223372036854775807_isize, 13969_i16, 332598726517811849797327801844796070702_u128, (-105_i8));
_17 = !_14.0;
_11 = _5;
_11 = [_14.0,_14.0,_14.0,_17,_17,_14.0];
_9 = [_17,_17,_14.0,_14.0,_14.0,_14.0];
_20 = [false,false,true,true];
_12.1 = core::ptr::addr_of_mut!(_14.2);
_14 = (_17, 2086_i16, 311789045804500710975405308051686998168_u128, 121_i8);
_16 = [false,false,true,true];
_8 = [_14.0,_14.0,_17,_17,_14.0,_17];
_22 = _12.3;
_7 = [_14.0,_17,_14.0,_14.0,_17,_14.0];
_2 = [_14.0,_14.0,_14.0,_17,_17,_17];
_5 = _4;
_19 = [_14.0];
_12.1 = core::ptr::addr_of_mut!(_14.2);
_18 = [false,true,false,true,true,false];
Goto(bb4)
}
bb12 = {
Return()
}
bb13 = {
_14.2 = 19488535661730472617443134644772773928_u128 + 177742005984965044559655894037796568432_u128;
_14 = (_17, 29606_i16, 269532420790296225546693077157926953556_u128, (-44_i8));
_19 = [_17];
_23 = !_17;
_14.0 = _23;
match _14.2 {
269532420790296225546693077157926953556 => bb15,
_ => bb14
}
}
bb14 = {
_14.2 = 97746391202863050040294562381799427169_u128 >> _22;
_14.1 = _12.0 as i16;
_22 = _12.3;
Goto(bb5)
}
bb15 = {
_13 = Adt51::Variant0 { fld0: _23 };
_12.1 = core::ptr::addr_of_mut!(_14.2);
_31 = _12.1;
_27.1 = [10170269348026482804045535827400802291_i128,(-66248598404413316238419617842313918615_i128),90324875678653191272091485751950499482_i128,(-67791888735958039479576412577058833496_i128),(-40562085278839877125340583736429387191_i128),(-140965264182588725520749205169327231884_i128),256682477994384975394015317224078721_i128];
_27.0 = [_12.0,_12.0,_12.0,_12.0,_12.0];
_3 = [_23,_23,_23,Field::<isize>(Variant(_13, 0), 0),_17,_17];
place!(Field::<i128>(Variant(_25, 0), 0)) = 167526182368800177084362105519754989909_i128;
_16 = [true,false,false,true];
_26 = _14.3;
_22 = false as i32;
_24 = _27.0;
Goto(bb16)
}
bb16 = {
Call(_35 = dump_var(18_usize, 10_usize, Move(_10), 16_usize, Move(_16), 20_usize, Move(_20), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(18_usize, 27_usize, Move(_27), 8_usize, Move(_8), 4_usize, Move(_4), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(18_usize, 5_usize, Move(_5), 19_usize, Move(_19), 28_usize, Move(_28), 36_usize, _36), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: ([isize; 6],)) -> [bool; 4] {
mir! {
type RET = [bool; 4];
let _4: f32;
let _5: (f64,);
let _6: char;
let _7: i64;
let _8: isize;
let _9: [bool; 4];
let _10: u64;
let _11: [i32; 3];
let _12: *mut bool;
let _13: Adt50;
let _14: Adt54;
let _15: i16;
let _16: Adt55;
let _17: Adt45;
let _18: isize;
let _19: f32;
let _20: isize;
let _21: Adt49;
let _22: i64;
let _23: [i128; 7];
let _24: [usize; 8];
let _25: [u8; 8];
let _26: u16;
let _27: isize;
let _28: f64;
let _29: u128;
let _30: ([bool; 4], f64, char, [bool; 4]);
let _31: bool;
let _32: bool;
let _33: ([isize; 6],);
let _34: char;
let _35: usize;
let _36: *mut u128;
let _37: char;
let _38: bool;
let _39: ([u16; 4], [i64; 1]);
let _40: Adt47;
let _41: [i128; 7];
let _42: Adt48;
let _43: u128;
let _44: *mut i8;
let _45: char;
let _46: i64;
let _47: f32;
let _48: ();
let _49: ();
{
_1 = [121_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_3.0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-67_isize),9223372036854775807_isize,(-9223372036854775808_isize),73_isize];
_1 = [(-105_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-91_isize),9223372036854775807_isize];
_3.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-19_isize),(-9223372036854775808_isize)];
_3.0 = _2;
_3 = (_2,);
RET = [true,false,false,false];
_4 = 110223420304536863506067485162918005304_u128 as f32;
RET = [true,true,false,true];
_4 = 1107132293620742549_i64 as f32;
_5.0 = 9223372036854775807_isize as f64;
RET = [false,true,false,true];
RET = [true,true,true,false];
RET = [false,false,false,true];
_5.0 = 3_usize as f64;
_6 = '\u{9b326}';
_5.0 = 173537426_u32 as f64;
_3.0 = _2;
_3.0 = [114_isize,(-9223372036854775808_isize),51_isize,(-9223372036854775808_isize),(-77_isize),11_isize];
_6 = '\u{9d32b}';
_5.0 = 1758293092_u32 as f64;
_4 = (-196666436_i32) as f32;
RET = [false,true,false,false];
_3.0 = [115_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),64_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6 = '\u{11207}';
_3 = (_1,);
_2 = _1;
Goto(bb1)
}
bb1 = {
_5.0 = 230_u8 as f64;
RET = [false,false,false,false];
_7 = -2174678863097367007_i64;
_3.0 = _2;
_8 = (-74_i8) as isize;
_8 = (-9223372036854775808_isize);
_2 = [_8,_8,_8,_8,_8,_8];
_6 = '\u{ffdcd}';
_8 = 9223372036854775807_isize ^ (-18_isize);
RET = [true,false,false,true];
RET = [false,false,true,true];
_6 = '\u{f3e}';
RET = [true,false,false,true];
RET = [false,true,true,true];
_6 = '\u{be932}';
_4 = (-28689_i16) as f32;
RET = [false,true,false,true];
_5.0 = 78731745904968541806668807807255194769_u128 as f64;
_3.0 = [_8,_8,_8,_8,_8,_8];
_3 = (_1,);
_9 = [true,true,false,true];
_5.0 = 336693730675557469499304034291046176227_u128 as f64;
_7 = (-6369371411956138957_i64);
_3.0 = [_8,_8,_8,_8,_8,_8];
Goto(bb2)
}
bb2 = {
_9 = [false,false,false,true];
RET = [false,true,true,true];
_3 = (_1,);
_4 = _7 as f32;
_1 = _3.0;
_3.0 = [_8,_8,_8,_8,_8,_8];
_4 = (-98349182565477079745298215414019146234_i128) as f32;
_7 = 998711557_i32 as i64;
_4 = 179_u8 as f32;
RET = [true,true,true,true];
RET = _9;
_9 = RET;
_3 = (_2,);
_11 = [1516406518_i32,21046174_i32,1059657097_i32];
RET = _9;
_2 = _1;
_10 = 327394302018781068248659636647125810642_u128 as u64;
_7 = 29812_u16 as i64;
_1 = [_8,_8,_8,_8,_8,_8];
_8 = !76_isize;
RET = _9;
_5.0 = 51150_u16 as f64;
_9 = [false,true,true,false];
_3 = (_2,);
Goto(bb3)
}
bb3 = {
_6 = '\u{78968}';
_3.0 = [_8,_8,_8,_8,_8,_8];
Goto(bb4)
}
bb4 = {
_11 = [(-1999844796_i32),(-88461160_i32),(-1109166444_i32)];
_7 = _6 as i64;
_9 = [false,false,true,true];
_5.0 = 7_usize as f64;
Goto(bb5)
}
bb5 = {
_3 = (_2,);
_3.0 = [_8,_8,_8,_8,_8,_8];
_2 = _3.0;
_11 = [(-2064196139_i32),2096193970_i32,(-2102193020_i32)];
_3.0 = _1;
_11 = [1526530951_i32,(-1425426555_i32),(-254990710_i32)];
_15 = (-5444_i16) + (-27954_i16);
_4 = 2952829776_u32 as f32;
_15 = !(-1247_i16);
_18 = !_8;
_10 = _5.0 as u64;
Goto(bb6)
}
bb6 = {
_9 = [true,true,true,false];
_1 = _3.0;
_11 = [616652746_i32,99871198_i32,1977290386_i32];
_1 = [_8,_8,_18,_8,_18,_18];
RET = [false,false,false,true];
_9 = [true,true,false,true];
_19 = _4 * _4;
_5.0 = (-5_i8) as f64;
_10 = !11283602177614728264_u64;
_22 = _7 + _7;
_19 = _4 + _4;
_3 = (_2,);
_7 = _22 >> _10;
_19 = -_4;
_5.0 = (-2131527971_i32) as f64;
_9 = [false,false,true,true];
_20 = _22 as isize;
RET = [true,false,false,false];
_19 = _4 + _4;
Call(_7 = core::intrinsics::bswap(_22), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_22 = -_7;
_2 = [_8,_8,_8,_18,_20,_20];
_19 = _10 as f32;
_22 = 14254321014839654036_usize as i64;
_2 = _1;
_8 = (-67796936928153784405313583225631707811_i128) as isize;
_7 = _22;
_22 = !_7;
_4 = _19;
_17 = Adt45::Variant1 { fld0: 65467_u16 };
place!(Field::<u16>(Variant(_17, 1), 0)) = 42762_u16;
_8 = _22 as isize;
_8 = _20;
_3 = (_2,);
_23 = [64956858119538618058453775633002636649_i128,(-154496079805193975074349560607160904813_i128),128519852859173965451793696908708983920_i128,80989455608192776706324732416593420204_i128,69222420265848984891681315530397049486_i128,(-16673886245127470175726970623880854226_i128),(-60871905347420685705121200096968868470_i128)];
_7 = _6 as i64;
RET = [false,true,false,false];
_22 = Field::<u16>(Variant(_17, 1), 0) as i64;
_5.0 = _10 as f64;
_27 = 15692996082414616539_usize as isize;
_26 = Field::<u16>(Variant(_17, 1), 0);
_26 = Field::<u16>(Variant(_17, 1), 0);
RET = _9;
RET = _9;
_26 = 356154099_u32 as u16;
_27 = _4 as isize;
Goto(bb8)
}
bb8 = {
_18 = -_8;
_25 = [60_u8,236_u8,61_u8,109_u8,202_u8,161_u8,70_u8,132_u8];
_23 = [(-39282367614386877960503843977925575773_i128),(-125148743083555304405372844329988361227_i128),17622584255379563722140560899930799871_i128,(-1166485423174109339453077932896906709_i128),108196519040994237396347328379368625671_i128,148177454453277081912337828607870922867_i128,10001219511246157142157894422748403753_i128];
_25 = [64_u8,37_u8,162_u8,253_u8,126_u8,58_u8,227_u8,118_u8];
_9 = [false,false,false,false];
_6 = '\u{7769}';
_8 = _18 & _18;
_15 = 121332499315666715956931040855388940435_i128 as i16;
_23 = [(-135555488096348709942537397357350582610_i128),(-133531006875838028181788752586763145665_i128),102732896182496328722056083954621836141_i128,(-139537412820193868465421239031584323493_i128),148274955153725574465199454015854473691_i128,(-10912734842208487711523495008534330050_i128),33371482500341728831937076159116985337_i128];
_27 = _8;
_10 = 14831367932434603041_u64 & 2676583360622973503_u64;
_11 = [1157505448_i32,(-843299420_i32),1025750858_i32];
_1 = [_20,_20,_8,_18,_8,_27];
_27 = -_8;
_22 = _7 + _7;
match Field::<u16>(Variant(_17, 1), 0) {
0 => bb1,
1 => bb2,
42762 => bb9,
_ => bb4
}
}
bb9 = {
_24 = [0_usize,18405601399352489543_usize,3_usize,12437420836227407663_usize,0_usize,11954932493514486582_usize,2_usize,2014182623037332292_usize];
_8 = 283698494446347865337218786492057303680_u128 as isize;
_9 = RET;
place!(Field::<u16>(Variant(_17, 1), 0)) = _6 as u16;
Goto(bb10)
}
bb10 = {
_19 = -_4;
_1 = [_27,_27,_27,_18,_27,_27];
_20 = 58_i8 as isize;
_24 = [6_usize,2_usize,14741489417684120950_usize,6017343759126020279_usize,4_usize,2_usize,6_usize,15208603691096910247_usize];
_3 = (_1,);
_23 = [17034533756216422117757423023239870966_i128,(-163532235586861889130864501490480688218_i128),(-155957024120654818247202386749460395261_i128),21640993072035342519619386100479406728_i128,48414220943577093699677324915416233552_i128,159600075849341609375663898855731774096_i128,152797267259570876502523514292263164048_i128];
_28 = 3208997830_u32 as f64;
_4 = -_19;
_3.0 = [_8,_27,_27,_27,_20,_27];
_7 = _22;
_2 = _3.0;
_11 = [1419451239_i32,606803933_i32,1599492599_i32];
_18 = _15 as isize;
_3.0 = [_20,_18,_27,_27,_8,_27];
_30.3 = [true,true,false,true];
_30.1 = _28;
_2 = _3.0;
SetDiscriminant(_17, 0);
_15 = 24633_i16 & (-29502_i16);
_15 = 88319684_i32 as i16;
_18 = _27 & _27;
Goto(bb11)
}
bb11 = {
_23 = [(-53233035991531464712791790311173470079_i128),103869459185412105124697615838077431507_i128,37174942661181043666016923271943091349_i128,(-88814402859168853982241243293323813961_i128),51082379531050027654934035576341644025_i128,109568767071189043621271581346680477372_i128,(-106603725819047186322720747821154443257_i128)];
_24 = [6168077758280142652_usize,14467338307447666449_usize,3_usize,7_usize,6782213596921026063_usize,9374283968022178036_usize,11344077141236684022_usize,7_usize];
_30.2 = _6;
_18 = _20 - _20;
_3.0 = [_8,_27,_18,_18,_27,_27];
_30.0 = [false,true,false,false];
_30 = (RET, _5.0, _6, RET);
_7 = !_22;
_12 = core::ptr::addr_of_mut!(_32);
_8 = _27;
_2 = _1;
_29 = !12743906707344268248409902876641199363_u128;
_5 = (_30.1,);
_33 = (_3.0,);
_33.0 = _3.0;
_12 = core::ptr::addr_of_mut!(_31);
RET = [false,false,false,false];
_34 = _30.2;
_5.0 = _26 as f64;
_5.0 = _28;
_18 = _8 * _8;
RET = [true,false,true,false];
Goto(bb12)
}
bb12 = {
_31 = _28 >= _5.0;
_15 = (-13895_i16);
_28 = _5.0;
_26 = 28753_u16 - 33503_u16;
_2 = [_8,_27,_18,_8,_18,_27];
_30.1 = _26 as f64;
_20 = _27;
_29 = !125107558150956173794641063781027117750_u128;
_26 = 56797_u16 & 44296_u16;
_9 = [_31,(*_12),(*_12),(*_12)];
place!(Field::<[usize; 1]>(Variant(_17, 0), 0)) = [9584376677012826280_usize];
_3.0 = [_18,_27,_18,_20,_8,_27];
_36 = core::ptr::addr_of_mut!(_29);
_37 = _30.2;
_19 = -_4;
_36 = core::ptr::addr_of_mut!(_29);
SetDiscriminant(_17, 0);
_5.0 = _20 as f64;
_24 = [3_usize,2_usize,7_usize,2168501892718115504_usize,12402941745465573272_usize,12813453124665050542_usize,5027092106220366275_usize,7257127501905673852_usize];
_6 = _34;
_19 = _4 + _4;
_41 = [(-81910230422939346195381250289053199919_i128),(-162088606484010815439976956215251051579_i128),70703690784480410159307502334852949685_i128,(-44277937913650453638017321806320384565_i128),155991162770603892142748557324732696217_i128,52567454577181126758426582099410315540_i128,107675573917428391541439998032151783829_i128];
Goto(bb13)
}
bb13 = {
_9 = [(*_12),(*_12),(*_12),_31];
_27 = _20;
match _15 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
340282366920938463463374607431768197561 => bb20,
_ => bb19
}
}
bb14 = {
_31 = _28 >= _5.0;
_15 = (-13895_i16);
_28 = _5.0;
_26 = 28753_u16 - 33503_u16;
_2 = [_8,_27,_18,_8,_18,_27];
_30.1 = _26 as f64;
_20 = _27;
_29 = !125107558150956173794641063781027117750_u128;
_26 = 56797_u16 & 44296_u16;
_9 = [_31,(*_12),(*_12),(*_12)];
place!(Field::<[usize; 1]>(Variant(_17, 0), 0)) = [9584376677012826280_usize];
_3.0 = [_18,_27,_18,_20,_8,_27];
_36 = core::ptr::addr_of_mut!(_29);
_37 = _30.2;
_19 = -_4;
_36 = core::ptr::addr_of_mut!(_29);
SetDiscriminant(_17, 0);
_5.0 = _20 as f64;
_24 = [3_usize,2_usize,7_usize,2168501892718115504_usize,12402941745465573272_usize,12813453124665050542_usize,5027092106220366275_usize,7257127501905673852_usize];
_6 = _34;
_19 = _4 + _4;
_41 = [(-81910230422939346195381250289053199919_i128),(-162088606484010815439976956215251051579_i128),70703690784480410159307502334852949685_i128,(-44277937913650453638017321806320384565_i128),155991162770603892142748557324732696217_i128,52567454577181126758426582099410315540_i128,107675573917428391541439998032151783829_i128];
Goto(bb13)
}
bb15 = {
_23 = [(-53233035991531464712791790311173470079_i128),103869459185412105124697615838077431507_i128,37174942661181043666016923271943091349_i128,(-88814402859168853982241243293323813961_i128),51082379531050027654934035576341644025_i128,109568767071189043621271581346680477372_i128,(-106603725819047186322720747821154443257_i128)];
_24 = [6168077758280142652_usize,14467338307447666449_usize,3_usize,7_usize,6782213596921026063_usize,9374283968022178036_usize,11344077141236684022_usize,7_usize];
_30.2 = _6;
_18 = _20 - _20;
_3.0 = [_8,_27,_18,_18,_27,_27];
_30.0 = [false,true,false,false];
_30 = (RET, _5.0, _6, RET);
_7 = !_22;
_12 = core::ptr::addr_of_mut!(_32);
_8 = _27;
_2 = _1;
_29 = !12743906707344268248409902876641199363_u128;
_5 = (_30.1,);
_33 = (_3.0,);
_33.0 = _3.0;
_12 = core::ptr::addr_of_mut!(_31);
RET = [false,false,false,false];
_34 = _30.2;
_5.0 = _26 as f64;
_5.0 = _28;
_18 = _8 * _8;
RET = [true,false,true,false];
Goto(bb12)
}
bb16 = {
_6 = '\u{78968}';
_3.0 = [_8,_8,_8,_8,_8,_8];
Goto(bb4)
}
bb17 = {
_24 = [0_usize,18405601399352489543_usize,3_usize,12437420836227407663_usize,0_usize,11954932493514486582_usize,2_usize,2014182623037332292_usize];
_8 = 283698494446347865337218786492057303680_u128 as isize;
_9 = RET;
place!(Field::<u16>(Variant(_17, 1), 0)) = _6 as u16;
Goto(bb10)
}
bb18 = {
_18 = -_8;
_25 = [60_u8,236_u8,61_u8,109_u8,202_u8,161_u8,70_u8,132_u8];
_23 = [(-39282367614386877960503843977925575773_i128),(-125148743083555304405372844329988361227_i128),17622584255379563722140560899930799871_i128,(-1166485423174109339453077932896906709_i128),108196519040994237396347328379368625671_i128,148177454453277081912337828607870922867_i128,10001219511246157142157894422748403753_i128];
_25 = [64_u8,37_u8,162_u8,253_u8,126_u8,58_u8,227_u8,118_u8];
_9 = [false,false,false,false];
_6 = '\u{7769}';
_8 = _18 & _18;
_15 = 121332499315666715956931040855388940435_i128 as i16;
_23 = [(-135555488096348709942537397357350582610_i128),(-133531006875838028181788752586763145665_i128),102732896182496328722056083954621836141_i128,(-139537412820193868465421239031584323493_i128),148274955153725574465199454015854473691_i128,(-10912734842208487711523495008534330050_i128),33371482500341728831937076159116985337_i128];
_27 = _8;
_10 = 14831367932434603041_u64 & 2676583360622973503_u64;
_11 = [1157505448_i32,(-843299420_i32),1025750858_i32];
_1 = [_20,_20,_8,_18,_8,_27];
_27 = -_8;
_22 = _7 + _7;
match Field::<u16>(Variant(_17, 1), 0) {
0 => bb1,
1 => bb2,
42762 => bb9,
_ => bb4
}
}
bb19 = {
_22 = -_7;
_2 = [_8,_8,_8,_18,_20,_20];
_19 = _10 as f32;
_22 = 14254321014839654036_usize as i64;
_2 = _1;
_8 = (-67796936928153784405313583225631707811_i128) as isize;
_7 = _22;
_22 = !_7;
_4 = _19;
_17 = Adt45::Variant1 { fld0: 65467_u16 };
place!(Field::<u16>(Variant(_17, 1), 0)) = 42762_u16;
_8 = _22 as isize;
_8 = _20;
_3 = (_2,);
_23 = [64956858119538618058453775633002636649_i128,(-154496079805193975074349560607160904813_i128),128519852859173965451793696908708983920_i128,80989455608192776706324732416593420204_i128,69222420265848984891681315530397049486_i128,(-16673886245127470175726970623880854226_i128),(-60871905347420685705121200096968868470_i128)];
_7 = _6 as i64;
RET = [false,true,false,false];
_22 = Field::<u16>(Variant(_17, 1), 0) as i64;
_5.0 = _10 as f64;
_27 = 15692996082414616539_usize as isize;
_26 = Field::<u16>(Variant(_17, 1), 0);
_26 = Field::<u16>(Variant(_17, 1), 0);
RET = _9;
RET = _9;
_26 = 356154099_u32 as u16;
_27 = _4 as isize;
Goto(bb8)
}
bb20 = {
_1 = _33.0;
place!(Field::<[usize; 1]>(Variant(_17, 0), 0)) = [7817914697271731149_usize];
_39.1 = [_22];
_39.1 = [_22];
_9 = RET;
_38 = _31;
_21 = Adt49::Variant0 { fld0: _39.1,fld1: _5.0,fld2: _18 };
_43 = !_29;
_30.1 = -_5.0;
_18 = _8 >> Field::<isize>(Variant(_21, 0), 2);
place!(Field::<[i64; 1]>(Variant(_21, 0), 0)) = [_7];
SetDiscriminant(_17, 2);
_10 = 3864800989235787643_u64 >> _18;
_6 = _30.2;
_17 = Adt45::Variant2 { fld0: _24,fld1: _10,fld2: _5,fld3: _30.3 };
_27 = _18 << Field::<isize>(Variant(_21, 0), 2);
_46 = !_7;
_46 = _22;
_19 = 4148811802_u32 as f32;
_33 = _3;
_32 = !_38;
_30.3 = [(*_12),_32,(*_12),(*_12)];
_24 = [5_usize,6_usize,15262068626236982280_usize,3_usize,3367493643329552425_usize,7400747202614962857_usize,2_usize,3510828033145228461_usize];
Goto(bb21)
}
bb21 = {
Call(_48 = dump_var(19_usize, 37_usize, Move(_37), 38_usize, Move(_38), 41_usize, Move(_41), 18_usize, Move(_18)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_48 = dump_var(19_usize, 22_usize, Move(_22), 27_usize, Move(_27), 29_usize, Move(_29), 31_usize, Move(_31)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_48 = dump_var(19_usize, 6_usize, Move(_6), 1_usize, Move(_1), 24_usize, Move(_24), 26_usize, Move(_26)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_48 = dump_var(19_usize, 15_usize, Move(_15), 43_usize, Move(_43), 49_usize, _49, 49_usize, _49), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(2124336076_u32), std::hint::black_box(2612575948926020932_i64), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(29761_u16), std::hint::black_box(27988861030457805006645304589141642223_i128));
                
            }
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: [usize; 1],

},
Variant1{
fld0: u16,

},
Variant2{
fld0: [usize; 8],
fld1: u64,
fld2: (f64,),
fld3: [bool; 4],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt46 {
fld0: bool,
fld1: u8,
fld2: *mut i8,
fld3: [usize; 1],
fld4: u16,
fld5: [bool; 4],
fld6: u128,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt47 {
Variant0{
fld0: ([u16; 4], [i64; 1]),
fld1: (f64,),
fld2: [i128; 7],
fld3: (isize, i16, u128, i8),
fld4: i128,
fld5: u128,

},
Variant1{
fld0: ([u64; 5], [i128; 7]),
fld1: char,
fld2: u32,
fld3: u8,
fld4: ([bool; 4], f64, char, [bool; 4]),
fld5: *mut i8,
fld6: [isize; 6],
fld7: *mut u128,

},
Variant2{
fld0: [bool; 4],
fld1: ([u16; 4], [i64; 1]),
fld2: isize,
fld3: (isize, i16, u128, i8),

},
Variant3{
fld0: usize,
fld1: *mut bool,
fld2: *mut u128,
fld3: i16,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt47,
fld1: ([u16; 4], [i64; 1]),
fld2: [usize; 8],

},
Variant1{
fld0: *mut i8,
fld1: [u16; 4],
fld2: u32,
fld3: [usize; 8],
fld4: [usize; 1],
fld5: Adt45,
fld6: i64,
fld7: ([bool; 4], f64, char, [bool; 4]),

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [i64; 1],
fld1: f64,
fld2: isize,

},
Variant1{
fld0: [u16; 4],
fld1: i128,
fld2: [u8; 8],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt50 {
Variant0{
fld0: Adt46,

},
Variant1{
fld0: *mut bool,
fld1: i16,
fld2: (isize, i16, u128, i8),

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: isize,

},
Variant1{
fld0: [i128; 7],
fld1: [u8; 8],
fld2: [bool; 6],
fld3: ([isize; 6],),
fld4: u64,

},
Variant2{
fld0: bool,
fld1: [u8; 8],
fld2: *mut i8,
fld3: u128,
fld4: [usize; 8],
fld5: ([isize; 6],),
fld6: Adt49,
fld7: [bool; 4],

},
Variant3{
fld0: (f64,),
fld1: f32,
fld2: u32,
fld3: (u64, *mut u128, u8, i32),

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt46,
fld1: char,
fld2: u16,
fld3: u128,

},
Variant1{
fld0: u8,
fld1: [u128; 7],
fld2: i64,
fld3: [bool; 4],
fld4: Adt50,

},
Variant2{
fld0: f32,
fld1: char,
fld2: i64,
fld3: ([u16; 4], [i64; 1]),
fld4: ([bool; 4], f64, char, [bool; 4]),
fld5: Adt46,

},
Variant3{
fld0: ([u16; 4], [i64; 1]),
fld1: char,
fld2: (u64, *mut u128, u8, i32),
fld3: f64,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: i128,
fld1: [bool; 6],
fld2: Adt50,
fld3: *mut bool,

},
Variant1{
fld0: Adt47,
fld1: i128,
fld2: u128,
fld3: [isize; 6],
fld4: i64,
fld5: u8,

},
Variant2{
fld0: [u64; 5],
fld1: Adt52,
fld2: Adt49,
fld3: Adt45,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt49,
fld1: [isize; 6],
fld2: [u16; 4],
fld3: u8,
fld4: i16,

},
Variant1{
fld0: [usize; 8],
fld1: u8,
fld2: [i64; 1],
fld3: f32,
fld4: Adt50,
fld5: f64,
fld6: i64,

},
Variant2{
fld0: Adt50,
fld1: Adt52,
fld2: [i128; 7],
fld3: [i64; 1],
fld4: [usize; 8],

},
Variant3{
fld0: u8,
fld1: u128,
fld2: [u64; 5],
fld3: f32,
fld4: i16,
fld5: [i128; 7],
fld6: *mut bool,
fld7: *const ([isize; 6],),

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: i128,
fld1: [u64; 5],
fld2: [usize; 1],
fld3: [i32; 3],
fld4: [bool; 4],

},
Variant1{
fld0: Adt45,
fld1: [i32; 3],
fld2: Adt50,
fld3: Adt53,
fld4: *mut u128,
fld5: [u8; 8],
fld6: Adt49,
fld7: f64,

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt51,
fld1: Adt55,
fld2: [bool; 4],
fld3: Adt54,
fld4: i128,
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt47,
fld1: ([u16; 4], [i64; 1]),
fld2: *mut u128,

},
Variant1{
fld0: *mut u128,
fld1: (u64, *mut u128, u8, i32),
fld2: ([isize; 6],),
fld3: i8,

},
Variant2{
fld0: Adt53,
fld1: Adt48,
fld2: ([isize; 6],),
fld3: Adt46,
fld4: [bool; 4],
fld5: Adt52,
fld6: Adt51,

},
Variant3{
fld0: f32,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: [isize; 6],
fld1: [i64; 1],
fld2: [isize; 1],

},
Variant1{
fld0: u8,
fld1: [bool; 6],
fld2: usize,

},
Variant2{
fld0: u64,
fld1: (f64,),
fld2: [u8; 8],
fld3: [usize; 1],
fld4: ([bool; 4], f64, char, [bool; 4]),

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: Adt52,
fld1: [usize; 1],

},
Variant1{
fld0: Adt53,
fld1: u128,
fld2: f32,
fld3: Adt45,
fld4: Adt49,
fld5: i32,
fld6: i64,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: i128,

},
Variant1{
fld0: ([bool; 4], f64, char, [bool; 4]),

}}
#[derive(Debug)]
pub struct Adt61 {
fld0: (u64, *mut u128, u8, i32),
}

