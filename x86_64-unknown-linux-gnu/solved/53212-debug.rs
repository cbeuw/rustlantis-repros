#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u128) -> bool {
mir! {
type RET = bool;
let _3: f64;
let _4: i16;
let _5: u64;
let _6: f64;
let _7: [i16; 4];
let _8: Adt52;
let _9: i128;
let _10: char;
let _11: Adt54;
let _12: usize;
let _13: i64;
let _14: *mut u64;
let _15: ([i64; 8], [i64; 4], (u64,));
let _16: [u32; 4];
let _17: u16;
let _18: bool;
let _19: i64;
let _20: f32;
let _21: i8;
let _22: Adt51;
let _23: (i128, [i64; 4], i128);
let _24: ();
let _25: ();
{
_1 = !true;
RET = _1;
_3 = (-1918349181_i32) as f64;
_2 = 6722499169988249741_u64 as u128;
RET = !_1;
RET = _3 < _3;
_4 = 25404_i16;
_2 = 192335577971445192940896902079574629776_u128 >> _4;
_4 = 16863_i16;
_1 = !RET;
_4 = 3667124263_u32 as i16;
_4 = 3572_i16;
_2 = 42416947990530164529316776302114349163_u128;
match _4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
3572 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = _1;
_2 = 52640682203793163630007364264808634606_u128 ^ 197254993019508125307511632917513680423_u128;
_4 = (-106_i8) as i16;
_2 = 152_u8 as u128;
_2 = !319779045611183840244426223919807930923_u128;
_1 = RET > RET;
RET = _1 | _1;
RET = _1;
_3 = 1444410399_u32 as f64;
_5 = !3119754408516756107_u64;
_3 = 61374_u16 as f64;
_7 = [_4,_4,_4,_4];
RET = !_1;
_2 = 4272404073836217714587242876392226978_u128;
_3 = 12861970_u32 as f64;
_7 = [_4,_4,_4,_4];
RET = !_1;
_6 = _3 - _3;
_4 = -23893_i16;
RET = _6 != _3;
_5 = 133437707760906098753435158313218388971_i128 as u64;
Goto(bb9)
}
bb9 = {
_8.fld1 = '\u{bb0e4}';
_6 = 4252048936094683735_usize as f64;
_7 = [_4,_4,_4,_4];
_8.fld0.0 = core::ptr::addr_of_mut!(_5);
_1 = RET & RET;
_4 = 128981254507529988171739602819053163773_i128 as i16;
_8.fld0.0 = core::ptr::addr_of_mut!(_5);
_10 = _8.fld1;
_8.fld2 = [31103_u16,63543_u16,9325_u16,51168_u16,50425_u16];
_11.fld7 = (-82407487429560709708467750688444207309_i128) ^ (-164207052484713032454198836688777496098_i128);
_8.fld2 = [47674_u16,61746_u16,30060_u16,38404_u16,12589_u16];
_11.fld4 = [3037430951_u32,4113505803_u32,3649180118_u32,3854527387_u32];
_11.fld0.0 = (-2131129590_i32) >> _5;
_11.fld3 = (91_i8,);
_11.fld3.0 = !(-29_i8);
_11.fld7 = 59535313780749682674831656098197034964_i128;
_11.fld6 = core::ptr::addr_of!(_2);
_12 = !481937269133738823_usize;
_12 = 5409547373872266780_usize >> _5;
_11.fld2 = core::ptr::addr_of_mut!(_5);
_5 = !12923117542410623897_u64;
_8.fld2 = [17510_u16,33194_u16,22721_u16,30307_u16,63790_u16];
_7 = [_4,_4,_4,_4];
_8.fld0.0 = core::ptr::addr_of_mut!(_5);
Goto(bb10)
}
bb10 = {
_2 = 122174207365174224307348632766262401877_u128;
_8.fld2 = [10463_u16,33535_u16,46828_u16,32714_u16,55890_u16];
_13 = !8605620857567819805_i64;
_13 = (-5335266015554344971_i64) * (-1072581675893942769_i64);
_8.fld0.0 = _11.fld2;
_11.fld1 = _8.fld1;
_15.2 = (_5,);
_7 = [_4,_4,_4,_4];
_11.fld0.1 = [_1];
_5 = _15.2.0 >> _13;
_15.2.0 = !_5;
_1 = RET;
_6 = _2 as f64;
_11.fld1 = _8.fld1;
_11.fld0.0 = !452851219_i32;
_1 = RET;
_4 = 22981_u16 as i16;
_6 = -_3;
_15.0 = [_13,_13,_13,_13,_13,_13,_13,_13];
_2 = 303066918901548618367945374375121761042_u128;
_17 = 34752_u16 + 29323_u16;
match _2 {
0 => bb8,
1 => bb9,
2 => bb3,
3 => bb11,
303066918901548618367945374375121761042 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_18 = _11.fld1 < _8.fld1;
_11.fld6 = core::ptr::addr_of!(_2);
_11.fld6 = core::ptr::addr_of!(_2);
_16 = [1930385014_u32,1788747836_u32,2105836841_u32,482004393_u32];
_15.2.0 = _5;
RET = _1 >= _1;
_15.1 = [_13,_13,_13,_13];
_15.2 = (_5,);
_16 = [1313871754_u32,2696262486_u32,3060651171_u32,1255641633_u32];
_13 = _12 as i64;
_19 = _11.fld3.0 as i64;
_3 = _13 as f64;
_5 = _15.2.0 >> _17;
_4 = _11.fld1 as i16;
_11.fld6 = core::ptr::addr_of!(_2);
_2 = 208890140754016652845338450041928885139_u128 + 238068575526097791777484817593389825655_u128;
_11.fld4 = [1277939473_u32,3683620592_u32,978615636_u32,2757651433_u32];
_9 = _11.fld7;
RET = _18;
Call(_11.fld5 = fn1(_1, _11.fld2, _2, _8.fld1, _18, _11.fld2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_21 = _11.fld3.0 >> Field::<(u128, u16)>(Variant(_11.fld5, 1), 0).0;
_11.fld2 = core::ptr::addr_of_mut!(_15.2.0);
place!(Field::<*const u128>(Variant(_11.fld5, 1), 1)) = _11.fld6;
SetDiscriminant(_11.fld5, 1);
_11.fld2 = core::ptr::addr_of_mut!(_5);
_20 = 2279076194_u32 as f32;
_3 = _6 * _6;
SetDiscriminant(_11.fld5, 0);
_11.fld1 = _8.fld1;
_13 = _11.fld0.0 as i64;
_5 = _15.2.0 << _21;
_23 = (_9, _15.1, _9);
_3 = _6;
place!(Field::<(*mut u64, *mut u16)>(Variant(_11.fld5, 0), 0)).1 = core::ptr::addr_of_mut!(_17);
_8.fld0 = (_11.fld2, Field::<(*mut u64, *mut u16)>(Variant(_11.fld5, 0), 0).1);
_11.fld5 = Adt53::Variant0 { fld0: _8.fld0,fld1: _11.fld0.1 };
RET = !_1;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(0_usize, 1_usize, Move(_1), 4_usize, Move(_4), 15_usize, Move(_15), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(0_usize, 7_usize, Move(_7), 12_usize, Move(_12), 2_usize, Move(_2), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: bool,mut _2: *mut u64,mut _3: u128,mut _4: char,mut _5: bool,mut _6: *mut u64) -> Adt53 {
mir! {
type RET = Adt53;
let _7: f64;
let _8: isize;
let _9: Adt52;
let _10: char;
let _11: ([i64; 8], [i64; 4], (u64,));
let _12: i32;
let _13: i8;
let _14: (*mut u64, *mut u16);
let _15: Adt50;
let _16: i32;
let _17: (i128, [i64; 4], i128);
let _18: (i128, i64, [u32; 5]);
let _19: i64;
let _20: [char; 8];
let _21: (char, (i128,), *const bool);
let _22: (i128, i64, [u32; 5]);
let _23: f64;
let _24: [u32; 4];
let _25: isize;
let _26: char;
let _27: (u16,);
let _28: isize;
let _29: bool;
let _30: [u32; 4];
let _31: *const bool;
let _32: *mut u16;
let _33: char;
let _34: char;
let _35: Adt48;
let _36: u8;
let _37: Adt61;
let _38: Adt49;
let _39: ([i64; 8], [i64; 4], (u64,));
let _40: ([i64; 8], [i64; 4], (u64,));
let _41: isize;
let _42: (i128, [i64; 4], i128);
let _43: isize;
let _44: Adt59;
let _45: i8;
let _46: (char, (i128,), *const bool);
let _47: i32;
let _48: f64;
let _49: (u64,);
let _50: [i64; 4];
let _51: f32;
let _52: *mut i16;
let _53: f64;
let _54: char;
let _55: bool;
let _56: f64;
let _57: (i128,);
let _58: Adt52;
let _59: isize;
let _60: Adt47;
let _61: (i8,);
let _62: Adt55;
let _63: isize;
let _64: Adt51;
let _65: Adt50;
let _66: u128;
let _67: i16;
let _68: char;
let _69: Adt48;
let _70: u128;
let _71: (u128, u16);
let _72: Adt49;
let _73: isize;
let _74: char;
let _75: bool;
let _76: f64;
let _77: isize;
let _78: Adt48;
let _79: f32;
let _80: f64;
let _81: u128;
let _82: f64;
let _83: Adt53;
let _84: isize;
let _85: Adt50;
let _86: (u16,);
let _87: u32;
let _88: [i128; 7];
let _89: (i32, [bool; 1]);
let _90: [i128; 7];
let _91: (u128, u16);
let _92: i8;
let _93: [u16; 5];
let _94: char;
let _95: (i8,);
let _96: isize;
let _97: (i32, [bool; 1]);
let _98: [i128; 7];
let _99: isize;
let _100: u16;
let _101: bool;
let _102: i16;
let _103: [u32; 5];
let _104: [i64; 4];
let _105: char;
let _106: Adt50;
let _107: isize;
let _108: u32;
let _109: (i128, i64, [u32; 5]);
let _110: (i8,);
let _111: ((i128,), *const bool);
let _112: char;
let _113: (i8,);
let _114: u128;
let _115: i32;
let _116: isize;
let _117: [i128; 7];
let _118: (u128, u16);
let _119: [i64; 4];
let _120: u16;
let _121: (i8,);
let _122: isize;
let _123: u64;
let _124: (i8,);
let _125: *mut u64;
let _126: (i8,);
let _127: (i128, i64, [u32; 5]);
let _128: (*mut u64, *mut u16);
let _129: char;
let _130: u32;
let _131: isize;
let _132: (u16,);
let _133: f64;
let _134: bool;
let _135: [bool; 1];
let _136: char;
let _137: u128;
let _138: [u16; 5];
let _139: Adt59;
let _140: isize;
let _141: bool;
let _142: [u16; 5];
let _143: f32;
let _144: i32;
let _145: f64;
let _146: [u8; 3];
let _147: Adt61;
let _148: ([i64; 8], [i64; 4], (u64,));
let _149: (u128, u16);
let _150: [i64; 5];
let _151: *mut i16;
let _152: isize;
let _153: *const bool;
let _154: [i128; 7];
let _155: [i64; 4];
let _156: isize;
let _157: *const bool;
let _158: f64;
let _159: Adt50;
let _160: u128;
let _161: isize;
let _162: f32;
let _163: (u128, u16);
let _164: f64;
let _165: f32;
let _166: Adt62;
let _167: [i16; 4];
let _168: Adt49;
let _169: Adt56;
let _170: [u32; 3];
let _171: [u32; 3];
let _172: i128;
let _173: char;
let _174: i64;
let _175: Adt63;
let _176: Adt51;
let _177: f64;
let _178: f32;
let _179: Adt62;
let _180: [char; 8];
let _181: [u16; 5];
let _182: isize;
let _183: (i128, i64, [u32; 5]);
let _184: [u8; 3];
let _185: (u64,);
let _186: [bool; 1];
let _187: (u128, u16);
let _188: Adt55;
let _189: (i128, [i64; 4], i128);
let _190: i8;
let _191: Adt57;
let _192: (i128, [i64; 4], i128);
let _193: i8;
let _194: u16;
let _195: isize;
let _196: ([i64; 8], [i64; 4], (u64,));
let _197: u32;
let _198: char;
let _199: ();
let _200: ();
{
_6 = _2;
_2 = core::ptr::addr_of_mut!((*_6));
_5 = !_1;
_7 = _3 as f64;
(*_2) = !6594465612639925078_u64;
_1 = !_5;
(*_2) = 8208292043868557392_u64;
_7 = 47075_u16 as f64;
(*_2) = 4267594644_u32 as u64;
_8 = 51_isize - (-9223372036854775808_isize);
(*_2) = !1787776163324059908_u64;
_4 = '\u{5b846}';
_3 = 19226263611671337137854934492991409776_u128 ^ 287682771986801314600947663225055164877_u128;
Goto(bb1)
}
bb1 = {
_10 = _4;
(*_6) = (-6918_i16) as u64;
_7 = (-146953173209205079520776539552885133746_i128) as f64;
(*_6) = 10135956726922945651_u64 << _8;
_9.fld2 = [31474_u16,46279_u16,38234_u16,29165_u16,51738_u16];
_2 = core::ptr::addr_of_mut!((*_2));
(*_6) = 224_u8 as u64;
(*_6) = 10660320477474840978_u64;
_9.fld1 = _10;
_4 = _9.fld1;
_9.fld2 = [1611_u16,6415_u16,41941_u16,12834_u16,39076_u16];
_12 = 1058563034_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = -(-67_i8);
_11.2.0 = !(*_6);
_11.2.0 = (*_6) ^ (*_2);
_3 = 180590336612351780103527393770589346407_u128;
_10 = _9.fld1;
_12 = 457028668_i32;
_5 = _1 == _1;
_8 = !(-9223372036854775808_isize);
_4 = _10;
Call(_15.fld0.0.0 = fn2(_11.2.0, _2, _2, (*_2), _10, _6, _11.2.0, (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb3 = {
_15.fld5 = 939463769424606327_i64 ^ 6802335427629101186_i64;
_1 = !_5;
_11.1 = _15.fld4;
_17.2 = _15.fld0.0.0;
_17.1 = _15.fld4;
(*_6) = _11.2.0 ^ _11.2.0;
Goto(bb4)
}
bb4 = {
_8 = 9223372036854775807_isize;
_17 = (_15.fld0.0.0, _15.fld4, _15.fld0.0.0);
_15.fld2 = [14_u8,220_u8,217_u8];
_11.2 = ((*_2),);
_15.fld1 = [34095_u16,44925_u16,55869_u16,19950_u16,26068_u16];
_9.fld2 = _15.fld1;
_11.0 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
(*_6) = !_11.2.0;
_17.1 = _11.1;
_18.1 = _15.fld5 & _15.fld5;
_10 = _9.fld1;
match _12 {
0 => bb5,
1 => bb6,
2 => bb7,
457028668 => bb9,
_ => bb8
}
}
bb5 = {
_15.fld5 = 939463769424606327_i64 ^ 6802335427629101186_i64;
_1 = !_5;
_11.1 = _15.fld4;
_17.2 = _15.fld0.0.0;
_17.1 = _15.fld4;
(*_6) = _11.2.0 ^ _11.2.0;
Goto(bb4)
}
bb6 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb7 = {
_10 = _4;
(*_6) = (-6918_i16) as u64;
_7 = (-146953173209205079520776539552885133746_i128) as f64;
(*_6) = 10135956726922945651_u64 << _8;
_9.fld2 = [31474_u16,46279_u16,38234_u16,29165_u16,51738_u16];
_2 = core::ptr::addr_of_mut!((*_2));
(*_6) = 224_u8 as u64;
(*_6) = 10660320477474840978_u64;
_9.fld1 = _10;
_4 = _9.fld1;
_9.fld2 = [1611_u16,6415_u16,41941_u16,12834_u16,39076_u16];
_12 = 1058563034_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = -(-67_i8);
_11.2.0 = !(*_6);
_11.2.0 = (*_6) ^ (*_2);
_3 = 180590336612351780103527393770589346407_u128;
_10 = _9.fld1;
_12 = 457028668_i32;
_5 = _1 == _1;
_8 = !(-9223372036854775808_isize);
_4 = _10;
Call(_15.fld0.0.0 = fn2(_11.2.0, _2, _2, (*_2), _10, _6, _11.2.0, (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb10 = {
_17.0 = _15.fld0.0.0;
_15.fld0.1 = core::ptr::addr_of!(_5);
_15.fld0.0 = (_21.1.0,);
_13 = !115_i8;
_23 = _13 as f64;
_22.0 = _17.2;
(*_2) = !(*_6);
_21.1 = (_17.2,);
_14.0 = _6;
_18.1 = -_15.fld5;
_18.0 = 31283_u16 as i128;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_27.0 = 14965_u16 + 4847_u16;
_18 = (_21.1.0, _19, _22.2);
_18.2 = [2810863852_u32,2339574428_u32,2888492300_u32,1659754375_u32,1462338650_u32];
_15.fld0.0 = _21.1;
_6 = _2;
_12 = !_16;
_21.0 = _10;
_14.1 = core::ptr::addr_of_mut!(_27.0);
_22 = _18;
_14.1 = core::ptr::addr_of_mut!(_27.0);
Goto(bb11)
}
bb11 = {
_14.1 = core::ptr::addr_of_mut!(_27.0);
_31 = core::ptr::addr_of!(_29);
_9 = Adt52 { fld0: _14,fld1: _10,fld2: _15.fld1 };
_22.2 = _18.2;
_9.fld2 = [_27.0,_27.0,_27.0,_27.0,_27.0];
_32 = _14.1;
_15.fld2 = [144_u8,39_u8,80_u8];
_32 = _14.1;
_15.fld0.0 = _21.1;
_29 = (*_6) < (*_6);
_17.2 = (*_2) as i128;
_11.0 = [_15.fld5,_19,_15.fld5,_19,_15.fld5,_15.fld5,_22.1,_18.1];
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_18 = (_17.2, _15.fld5, _22.2);
_26 = _21.0;
_20 = [_10,_21.0,_4,_4,_10,_26,_4,_26];
_36 = 203_u8 >> _18.1;
_15.fld4 = _17.1;
_31 = core::ptr::addr_of!((*_31));
_9.fld0.1 = _32;
Goto(bb12)
}
bb12 = {
_34 = _21.0;
_9.fld1 = _34;
_17.1 = _15.fld4;
_17.2 = -_22.0;
_25 = _8;
_34 = _26;
_15.fld5 = !_22.1;
_33 = _9.fld1;
_21.1 = _15.fld0.0;
_27 = (45271_u16,);
_14.1 = _32;
_14.0 = _6;
_15.fld2 = [_36,_36,_36];
match _25 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
9223372036854775807 => bb19,
_ => bb18
}
}
bb13 = {
_14.1 = core::ptr::addr_of_mut!(_27.0);
_31 = core::ptr::addr_of!(_29);
_9 = Adt52 { fld0: _14,fld1: _10,fld2: _15.fld1 };
_22.2 = _18.2;
_9.fld2 = [_27.0,_27.0,_27.0,_27.0,_27.0];
_32 = _14.1;
_15.fld2 = [144_u8,39_u8,80_u8];
_32 = _14.1;
_15.fld0.0 = _21.1;
_29 = (*_6) < (*_6);
_17.2 = (*_2) as i128;
_11.0 = [_15.fld5,_19,_15.fld5,_19,_15.fld5,_15.fld5,_22.1,_18.1];
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_18 = (_17.2, _15.fld5, _22.2);
_26 = _21.0;
_20 = [_10,_21.0,_4,_4,_10,_26,_4,_26];
_36 = 203_u8 >> _18.1;
_15.fld4 = _17.1;
_31 = core::ptr::addr_of!((*_31));
_9.fld0.1 = _32;
Goto(bb12)
}
bb14 = {
_15.fld5 = 939463769424606327_i64 ^ 6802335427629101186_i64;
_1 = !_5;
_11.1 = _15.fld4;
_17.2 = _15.fld0.0.0;
_17.1 = _15.fld4;
(*_6) = _11.2.0 ^ _11.2.0;
Goto(bb4)
}
bb15 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb16 = {
_10 = _4;
(*_6) = (-6918_i16) as u64;
_7 = (-146953173209205079520776539552885133746_i128) as f64;
(*_6) = 10135956726922945651_u64 << _8;
_9.fld2 = [31474_u16,46279_u16,38234_u16,29165_u16,51738_u16];
_2 = core::ptr::addr_of_mut!((*_2));
(*_6) = 224_u8 as u64;
(*_6) = 10660320477474840978_u64;
_9.fld1 = _10;
_4 = _9.fld1;
_9.fld2 = [1611_u16,6415_u16,41941_u16,12834_u16,39076_u16];
_12 = 1058563034_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = -(-67_i8);
_11.2.0 = !(*_6);
_11.2.0 = (*_6) ^ (*_2);
_3 = 180590336612351780103527393770589346407_u128;
_10 = _9.fld1;
_12 = 457028668_i32;
_5 = _1 == _1;
_8 = !(-9223372036854775808_isize);
_4 = _10;
Call(_15.fld0.0.0 = fn2(_11.2.0, _2, _2, (*_2), _10, _6, _11.2.0, (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb17 = {
_10 = _4;
(*_6) = (-6918_i16) as u64;
_7 = (-146953173209205079520776539552885133746_i128) as f64;
(*_6) = 10135956726922945651_u64 << _8;
_9.fld2 = [31474_u16,46279_u16,38234_u16,29165_u16,51738_u16];
_2 = core::ptr::addr_of_mut!((*_2));
(*_6) = 224_u8 as u64;
(*_6) = 10660320477474840978_u64;
_9.fld1 = _10;
_4 = _9.fld1;
_9.fld2 = [1611_u16,6415_u16,41941_u16,12834_u16,39076_u16];
_12 = 1058563034_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = -(-67_i8);
_11.2.0 = !(*_6);
_11.2.0 = (*_6) ^ (*_2);
_3 = 180590336612351780103527393770589346407_u128;
_10 = _9.fld1;
_12 = 457028668_i32;
_5 = _1 == _1;
_8 = !(-9223372036854775808_isize);
_4 = _10;
Call(_15.fld0.0.0 = fn2(_11.2.0, _2, _2, (*_2), _10, _6, _11.2.0, (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb19 = {
(*_31) = _5;
_26 = _33;
_18 = (_15.fld0.0.0, _19, _22.2);
_19 = _22.1;
_40.0 = _11.0;
(*_31) = !_5;
_28 = -_8;
_18.0 = 15906469632260580394_usize as i128;
_28 = -_8;
(*_6) = !_11.2.0;
_1 = !_5;
_14.0 = core::ptr::addr_of_mut!((*_2));
_40.0 = _11.0;
_21 = (_4, _15.fld0.0, _15.fld0.1);
_42.2 = !_15.fld0.0.0;
_40 = (_11.0, _17.1, _11.2);
_13 = 3_i8 - (-100_i8);
_18 = _22;
match _27.0 {
0 => bb16,
1 => bb20,
45271 => bb22,
_ => bb21
}
}
bb20 = {
_15.fld5 = 939463769424606327_i64 ^ 6802335427629101186_i64;
_1 = !_5;
_11.1 = _15.fld4;
_17.2 = _15.fld0.0.0;
_17.1 = _15.fld4;
(*_6) = _11.2.0 ^ _11.2.0;
Goto(bb4)
}
bb21 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb22 = {
_40.2.0 = _28 as u64;
_39.0 = [_22.1,_18.1,_19,_15.fld5,_18.1,_18.1,_18.1,_18.1];
_44.fld2 = [4293299830_u32,717080054_u32,2001377936_u32,3382057083_u32];
_39.2 = ((*_2),);
_44.fld3 = Adt49::Variant0 { fld0: _18.2,fld1: _9.fld1,fld2: _21.1.0,fld3: _15.fld3,fld4: (-24895_i16),fld5: _23 };
_16 = _13 as i32;
_32 = core::ptr::addr_of_mut!(_27.0);
_16 = _22.0 as i32;
_9.fld0.0 = core::ptr::addr_of_mut!((*_6));
SetDiscriminant(_44.fld3, 3);
_36 = 155_u8 * 172_u8;
_22.0 = 14292552410524236349_usize as i128;
_18.1 = 4702549872027946161_usize as i64;
_21 = (_10, _15.fld0.0, _15.fld0.1);
_19 = _34 as i64;
_22.2 = _18.2;
(*_31) = _1 | _5;
_45 = _13;
_21.2 = _31;
place!(Field::<[i16; 4]>(Variant(_44.fld3, 3), 5)) = [27129_i16,(-26707_i16),(-26234_i16),21929_i16];
_47 = _12;
_46.0 = _4;
_30 = [1361715121_u32,972719891_u32,1966622895_u32,2370276609_u32];
_49 = ((*_6),);
match _8 {
0 => bb23,
1 => bb24,
2 => bb25,
3 => bb26,
9223372036854775807 => bb28,
_ => bb27
}
}
bb23 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb24 = {
Return()
}
bb25 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb26 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb27 = {
_10 = _4;
(*_6) = (-6918_i16) as u64;
_7 = (-146953173209205079520776539552885133746_i128) as f64;
(*_6) = 10135956726922945651_u64 << _8;
_9.fld2 = [31474_u16,46279_u16,38234_u16,29165_u16,51738_u16];
_2 = core::ptr::addr_of_mut!((*_2));
(*_6) = 224_u8 as u64;
(*_6) = 10660320477474840978_u64;
_9.fld1 = _10;
_4 = _9.fld1;
_9.fld2 = [1611_u16,6415_u16,41941_u16,12834_u16,39076_u16];
_12 = 1058563034_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = -(-67_i8);
_11.2.0 = !(*_6);
_11.2.0 = (*_6) ^ (*_2);
_3 = 180590336612351780103527393770589346407_u128;
_10 = _9.fld1;
_12 = 457028668_i32;
_5 = _1 == _1;
_8 = !(-9223372036854775808_isize);
_4 = _10;
Call(_15.fld0.0.0 = fn2(_11.2.0, _2, _2, (*_2), _10, _6, _11.2.0, (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb28 = {
_42 = (_18.0, _15.fld4, _17.0);
_21.1 = (_18.0,);
_40.0 = [_15.fld5,_22.1,_18.1,_22.1,_22.1,_22.1,_15.fld5,_19];
_39 = (_40.0, _11.1, _49);
_18 = _22;
_40.2 = ((*_2),);
_33 = _26;
_35 = Adt48::Variant1 { fld0: _49 };
_22.0 = _42.0;
_22.0 = _17.2;
_44.fld0 = (Field::<(u64,)>(Variant(_35, 1), 0).0,);
_51 = _42.0 as f32;
_22.1 = _40.2.0 as i64;
_22.0 = _21.1.0;
_41 = _42.0 as isize;
_28 = _41 + _25;
_15.fld0 = (_21.1, _21.2);
_47 = _12 ^ _16;
(*_32) = _7 as u16;
_15.fld4 = [_15.fld5,_15.fld5,_19,_22.1];
_12 = _16;
match _25 {
0 => bb11,
1 => bb22,
2 => bb18,
3 => bb26,
4 => bb15,
5 => bb24,
9223372036854775807 => bb29,
_ => bb25
}
}
bb29 = {
_48 = _23;
place!(Field::<[i64; 4]>(Variant(_44.fld3, 3), 3)) = [_18.1,_22.1,_18.1,_15.fld5];
_14 = (_6, _32);
_44.fld4 = _22.1 as i16;
_42.2 = _22.0 & _17.2;
SetDiscriminant(_35, 2);
_41 = _8 - _28;
_16 = -_47;
_11 = (_40.0, _15.fld4, _40.2);
place!(Field::<u8>(Variant(_35, 2), 5)) = _36 >> (*_2);
_48 = -_23;
_31 = core::ptr::addr_of!((*_31));
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)).1 = [(*_31)];
place!(Field::<i8>(Variant(_35, 2), 3)) = _3 as i8;
(*_6) = _4 as u64;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)) = (_42.2, _42.1, _17.2);
Goto(bb30)
}
bb30 = {
_53 = _7 + _7;
(*_31) = _5;
place!(Field::<[i128; 7]>(Variant(_44.fld3, 3), 4)) = [Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0,_42.2,_21.1.0,_17.2,_18.0,_22.0];
_42 = (_22.0, Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).1, Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0);
_42.1 = _15.fld4;
_44.fld1 = [2863598633_u32,1580938628_u32,3524092723_u32];
_46.2 = core::ptr::addr_of!(_1);
_27.0 = _1 as u16;
_31 = core::ptr::addr_of!(_29);
_56 = _23;
_41 = _28 + _25;
_39.0 = [_22.1,_22.1,_18.1,_18.1,_22.1,_15.fld5,_18.1,_22.1];
place!(Field::<(i128,)>(Variant(_35, 2), 0)).0 = Field::<u8>(Variant(_35, 2), 5) as i128;
_55 = (*_31) ^ _5;
_17.1 = [_18.1,_15.fld5,_22.1,_18.1];
_40 = (_39.0, _15.fld4, _11.2);
_44.fld0.0 = (*_2) | _11.2.0;
place!(Field::<(i128,)>(Variant(_35, 2), 0)) = _21.1;
_40.0 = [_18.1,_15.fld5,_15.fld5,_19,_22.1,_18.1,_19,_15.fld5];
_24 = _44.fld2;
place!(Field::<[u32; 5]>(Variant(_35, 2), 2)) = [4086012099_u32,2386716231_u32,1341784095_u32,3877029645_u32,1084695852_u32];
Call(_17 = fn18(_21.2, _39.2.0), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
_21.1.0 = _47 as i128;
_19 = _3 as i64;
_15.fld0.1 = _21.2;
_52 = core::ptr::addr_of_mut!(_44.fld4);
_26 = _46.0;
_30 = [563518891_u32,72978407_u32,3784569814_u32,3023927288_u32];
(*_32) = 35230_u16 - 31717_u16;
(*_2) = _39.2.0;
_32 = _9.fld0.1;
_39 = (_40.0, _15.fld4, _40.2);
_42.2 = _22.1 as i128;
_30 = [1695225563_u32,3627594715_u32,2686143216_u32,3584750506_u32];
_46.1 = Field::<(i128,)>(Variant(_35, 2), 0);
_11.2 = (_40.2.0,);
_19 = _22.1 - _22.1;
_45 = -_13;
_58.fld2 = [(*_32),(*_32),_27.0,(*_32),(*_32)];
_10 = _4;
_36 = _42.2 as u8;
_65.fld0.1 = core::ptr::addr_of!((*_31));
_65.fld0.0 = (_22.0,);
_61 = (Field::<i8>(Variant(_35, 2), 3),);
_15.fld3 = [_17.0,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2,_46.1.0,_17.2,_22.0,_22.0,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2];
_40.1 = _17.1;
match _25 {
0 => bb21,
1 => bb32,
9223372036854775807 => bb34,
_ => bb33
}
}
bb32 = {
_53 = _7 + _7;
(*_31) = _5;
place!(Field::<[i128; 7]>(Variant(_44.fld3, 3), 4)) = [Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0,_42.2,_21.1.0,_17.2,_18.0,_22.0];
_42 = (_22.0, Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).1, Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0);
_42.1 = _15.fld4;
_44.fld1 = [2863598633_u32,1580938628_u32,3524092723_u32];
_46.2 = core::ptr::addr_of!(_1);
_27.0 = _1 as u16;
_31 = core::ptr::addr_of!(_29);
_56 = _23;
_41 = _28 + _25;
_39.0 = [_22.1,_22.1,_18.1,_18.1,_22.1,_15.fld5,_18.1,_22.1];
place!(Field::<(i128,)>(Variant(_35, 2), 0)).0 = Field::<u8>(Variant(_35, 2), 5) as i128;
_55 = (*_31) ^ _5;
_17.1 = [_18.1,_15.fld5,_22.1,_18.1];
_40 = (_39.0, _15.fld4, _11.2);
_44.fld0.0 = (*_2) | _11.2.0;
place!(Field::<(i128,)>(Variant(_35, 2), 0)) = _21.1;
_40.0 = [_18.1,_15.fld5,_15.fld5,_19,_22.1,_18.1,_19,_15.fld5];
_24 = _44.fld2;
place!(Field::<[u32; 5]>(Variant(_35, 2), 2)) = [4086012099_u32,2386716231_u32,1341784095_u32,3877029645_u32,1084695852_u32];
Call(_17 = fn18(_21.2, _39.2.0), ReturnTo(bb31), UnwindUnreachable())
}
bb33 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb34 = {
_42.1 = _15.fld4;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)) = (_42.0, _42.1, _22.0);
_18.2 = [3950897012_u32,1288743094_u32,883984363_u32,3752093359_u32,326089022_u32];
place!(Field::<i16>(Variant(_35, 2), 4)) = (*_52) * (*_52);
_9.fld0.1 = core::ptr::addr_of_mut!((*_32));
(*_31) = _55 | _55;
_65.fld0 = _15.fld0;
_21 = (_46.0, _15.fld0.0, _31);
_60 = Adt47::Variant1 { fld0: _20,fld1: _15.fld1 };
_65.fld3 = [Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2,_42.0,_15.fld0.0.0,_46.1.0,_18.0,_15.fld0.0.0,Field::<(i128,)>(Variant(_35, 2), 0).0];
_15.fld1 = _58.fld2;
_65.fld1 = [(*_32),(*_32),_27.0,_27.0,_27.0];
_46.2 = core::ptr::addr_of!(_1);
_42 = (Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0, _40.1, _17.0);
_23 = _7;
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)).0 = -_47;
_14.1 = core::ptr::addr_of_mut!(_27.0);
_11.2.0 = _49.0;
_58.fld1 = _26;
_61 = (_13,);
_65.fld0.0 = (Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0,);
_12 = !_16;
_4 = _26;
_44.fld2 = [3481334193_u32,98758589_u32,1302752395_u32,128298240_u32];
_9.fld2 = [(*_32),_27.0,_27.0,(*_32),_27.0];
_9 = Adt52 { fld0: _14,fld1: _33,fld2: Field::<[u16; 5]>(Variant(_60, 1), 1) };
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)).2 = _21.1.0;
_40.1 = _39.1;
_7 = _48;
match _25 {
0 => bb21,
1 => bb30,
2 => bb4,
9223372036854775807 => bb36,
_ => bb35
}
}
bb35 = {
_53 = _7 + _7;
(*_31) = _5;
place!(Field::<[i128; 7]>(Variant(_44.fld3, 3), 4)) = [Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0,_42.2,_21.1.0,_17.2,_18.0,_22.0];
_42 = (_22.0, Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).1, Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0);
_42.1 = _15.fld4;
_44.fld1 = [2863598633_u32,1580938628_u32,3524092723_u32];
_46.2 = core::ptr::addr_of!(_1);
_27.0 = _1 as u16;
_31 = core::ptr::addr_of!(_29);
_56 = _23;
_41 = _28 + _25;
_39.0 = [_22.1,_22.1,_18.1,_18.1,_22.1,_15.fld5,_18.1,_22.1];
place!(Field::<(i128,)>(Variant(_35, 2), 0)).0 = Field::<u8>(Variant(_35, 2), 5) as i128;
_55 = (*_31) ^ _5;
_17.1 = [_18.1,_15.fld5,_22.1,_18.1];
_40 = (_39.0, _15.fld4, _11.2);
_44.fld0.0 = (*_2) | _11.2.0;
place!(Field::<(i128,)>(Variant(_35, 2), 0)) = _21.1;
_40.0 = [_18.1,_15.fld5,_15.fld5,_19,_22.1,_18.1,_19,_15.fld5];
_24 = _44.fld2;
place!(Field::<[u32; 5]>(Variant(_35, 2), 2)) = [4086012099_u32,2386716231_u32,1341784095_u32,3877029645_u32,1084695852_u32];
Call(_17 = fn18(_21.2, _39.2.0), ReturnTo(bb31), UnwindUnreachable())
}
bb36 = {
_52 = core::ptr::addr_of_mut!((*_52));
_54 = _21.0;
_14.1 = core::ptr::addr_of_mut!((*_32));
_46.0 = _58.fld1;
_37 = Adt61::Variant1 { fld0: _22,fld1: _9.fld0.1 };
_9.fld0.1 = core::ptr::addr_of_mut!((*_32));
_18.0 = _21.1.0;
_65.fld3 = [_46.1.0,_21.1.0,_21.1.0,_18.0,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).0,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).0,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2];
_69 = Adt48::Variant1 { fld0: _40.2 };
match _25 {
0 => bb10,
9223372036854775807 => bb38,
_ => bb37
}
}
bb37 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb38 = {
_44.fld3 = Adt49::Variant0 { fld0: Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).2,fld1: _33,fld2: _22.0,fld3: _65.fld3,fld4: _44.fld4,fld5: _7 };
_65.fld3 = [_17.2,_42.0,Field::<(i128,)>(Variant(_35, 2), 0).0,_17.2,Field::<(i128,)>(Variant(_35, 2), 0).0,_46.1.0,_42.0];
_9 = Adt52 { fld0: _14,fld1: _26,fld2: Field::<[u16; 5]>(Variant(_60, 1), 1) };
_66 = _3 * _3;
(*_6) = _44.fld0.0 & _44.fld0.0;
_65.fld0.0.0 = _51 as i128;
_65.fld1 = [(*_32),_27.0,_27.0,(*_32),(*_32)];
_34 = _10;
match _25 {
0 => bb7,
1 => bb37,
2 => bb34,
3 => bb15,
9223372036854775807 => bb39,
_ => bb21
}
}
bb39 = {
_53 = Field::<f64>(Variant(_44.fld3, 0), 5);
_12 = -_47;
_46 = _21;
(*_52) = Field::<i16>(Variant(_35, 2), 4) << _18.1;
_20 = [_33,Field::<char>(Variant(_44.fld3, 0), 1),_10,_10,_58.fld1,_46.0,_34,_21.0];
_53 = _17.0 as f64;
_22.2 = [4034792181_u32,3456866936_u32,3306836723_u32,1464873799_u32,717941763_u32];
_22.1 = _18.1;
_51 = (*_2) as f32;
_9.fld2 = Field::<[u16; 5]>(Variant(_60, 1), 1);
_11.2.0 = (*_6);
_33 = _34;
place!(Field::<[u32; 5]>(Variant(_44.fld3, 0), 0)) = [3818230001_u32,1509909758_u32,2972395028_u32,4068626792_u32,3671231531_u32];
_32 = core::ptr::addr_of_mut!((*_32));
_46.1.0 = _17.2 - _42.2;
place!(Field::<char>(Variant(_44.fld3, 0), 1)) = _4;
_57 = (_46.1.0,);
_47 = Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).0 - Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).0;
(*_32) = 10137_u16;
_40.2.0 = 1798137400_u32 as u64;
_16 = _47 ^ _47;
_65.fld2 = [_36,Field::<u8>(Variant(_35, 2), 5),_36];
_30 = [4093443007_u32,1188981029_u32,2929785874_u32,3221457504_u32];
_58.fld1 = _54;
_40.1 = _17.1;
_8 = -_41;
_50 = [_19,_19,_19,_18.1];
_38 = Adt49::Variant1 { fld0: (*_52),fld1: _46,fld2: _52 };
place!(Field::<i128>(Variant(_44.fld3, 0), 2)) = -_57.0;
place!(Field::<i16>(Variant(_35, 2), 4)) = (*_52);
Goto(bb40)
}
bb40 = {
_58.fld0 = (_6, _14.1);
_45 = _61.0;
_65.fld0.1 = _21.2;
_76 = _7;
_65.fld0.1 = core::ptr::addr_of!(_1);
(*_32) = 44630_u16;
_40.2.0 = _49.0;
_42.2 = !_57.0;
(*_52) = _61.0 as i16;
_28 = _8 ^ _8;
place!(Field::<[u32; 5]>(Variant(_44.fld3, 0), 0)) = [3068963883_u32,2653760708_u32,262211748_u32,493751504_u32,4063727371_u32];
_65.fld3 = [_57.0,_42.2,_21.1.0,_42.2,Field::<(char, (i128,), *const bool)>(Variant(_38, 1), 1).1.0,_42.0,_17.2];
_58.fld0 = _9.fld0;
_65.fld3 = [_42.2,_18.0,Field::<i128>(Variant(_44.fld3, 0), 2),Field::<(char, (i128,), *const bool)>(Variant(_38, 1), 1).1.0,_42.2,_46.1.0,Field::<(char, (i128,), *const bool)>(Variant(_38, 1), 1).1.0];
place!(Field::<u128>(Variant(_35, 2), 6)) = !_66;
_51 = _44.fld0.0 as f32;
(*_2) = _11.2.0 ^ Field::<(u64,)>(Variant(_69, 1), 0).0;
_27.0 = !986_u16;
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld3 = Field::<[i128; 7]>(Variant(_44.fld3, 0), 3);
_9 = Adt52 { fld0: _14,fld1: Field::<(char, (i128,), *const bool)>(Variant(_38, 1), 1).0,fld2: _15.fld1 };
_67 = !Field::<i16>(Variant(_38, 1), 0);
match _25 {
0 => bb19,
1 => bb27,
2 => bb3,
3 => bb30,
4 => bb41,
9223372036854775807 => bb43,
_ => bb42
}
}
bb41 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb42 = {
_10 = _4;
(*_6) = (-6918_i16) as u64;
_7 = (-146953173209205079520776539552885133746_i128) as f64;
(*_6) = 10135956726922945651_u64 << _8;
_9.fld2 = [31474_u16,46279_u16,38234_u16,29165_u16,51738_u16];
_2 = core::ptr::addr_of_mut!((*_2));
(*_6) = 224_u8 as u64;
(*_6) = 10660320477474840978_u64;
_9.fld1 = _10;
_4 = _9.fld1;
_9.fld2 = [1611_u16,6415_u16,41941_u16,12834_u16,39076_u16];
_12 = 1058563034_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = -(-67_i8);
_11.2.0 = !(*_6);
_11.2.0 = (*_6) ^ (*_2);
_3 = 180590336612351780103527393770589346407_u128;
_10 = _9.fld1;
_12 = 457028668_i32;
_5 = _1 == _1;
_8 = !(-9223372036854775808_isize);
_4 = _10;
Call(_15.fld0.0.0 = fn2(_11.2.0, _2, _2, (*_2), _10, _6, _11.2.0, (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb43 = {
_15.fld0.1 = core::ptr::addr_of!((*_31));
_75 = _1;
Goto(bb44)
}
bb44 = {
_53 = _48;
_63 = _45 as isize;
_15.fld0.1 = core::ptr::addr_of!((*_31));
place!(Field::<f64>(Variant(_44.fld3, 0), 5)) = _76 * _48;
_22.2 = [215384111_u32,1164888741_u32,3150044461_u32,3913309458_u32,1393930383_u32];
_22.0 = (*_32) as i128;
_71.0 = !_66;
_28 = _8;
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)).1 = [(*_31)];
match _25 {
0 => bb1,
1 => bb9,
2 => bb45,
3 => bb46,
4 => bb47,
9223372036854775807 => bb49,
_ => bb48
}
}
bb45 = {
_15.fld0.1 = core::ptr::addr_of!((*_31));
_75 = _1;
Goto(bb44)
}
bb46 = {
_40.2.0 = _28 as u64;
_39.0 = [_22.1,_18.1,_19,_15.fld5,_18.1,_18.1,_18.1,_18.1];
_44.fld2 = [4293299830_u32,717080054_u32,2001377936_u32,3382057083_u32];
_39.2 = ((*_2),);
_44.fld3 = Adt49::Variant0 { fld0: _18.2,fld1: _9.fld1,fld2: _21.1.0,fld3: _15.fld3,fld4: (-24895_i16),fld5: _23 };
_16 = _13 as i32;
_32 = core::ptr::addr_of_mut!(_27.0);
_16 = _22.0 as i32;
_9.fld0.0 = core::ptr::addr_of_mut!((*_6));
SetDiscriminant(_44.fld3, 3);
_36 = 155_u8 * 172_u8;
_22.0 = 14292552410524236349_usize as i128;
_18.1 = 4702549872027946161_usize as i64;
_21 = (_10, _15.fld0.0, _15.fld0.1);
_19 = _34 as i64;
_22.2 = _18.2;
(*_31) = _1 | _5;
_45 = _13;
_21.2 = _31;
place!(Field::<[i16; 4]>(Variant(_44.fld3, 3), 5)) = [27129_i16,(-26707_i16),(-26234_i16),21929_i16];
_47 = _12;
_46.0 = _4;
_30 = [1361715121_u32,972719891_u32,1966622895_u32,2370276609_u32];
_49 = ((*_6),);
match _8 {
0 => bb23,
1 => bb24,
2 => bb25,
3 => bb26,
9223372036854775807 => bb28,
_ => bb27
}
}
bb47 = {
_3 = (*_6) as u128;
_6 = core::ptr::addr_of_mut!(_11.2.0);
_13 = (*_2) as i8;
_18.2 = [1402419552_u32,954813431_u32,2015479431_u32,3524140932_u32,976204326_u32];
_15.fld3 = [_17.2,_15.fld0.0.0,_15.fld0.0.0,_17.0,_17.0,_15.fld0.0.0,_17.2];
_15.fld5 = _18.1;
_15.fld1 = [27736_u16,14389_u16,52364_u16,49448_u16,61913_u16];
_18.2 = [2713325255_u32,2527523688_u32,288451320_u32,1863948106_u32,2798922759_u32];
_19 = !_18.1;
_17 = (_15.fld0.0.0, _11.1, _15.fld0.0.0);
_21.2 = _15.fld0.1;
_21.1 = (_15.fld0.0.0,);
(*_6) = (*_2) << _21.1.0;
_22 = (_17.0, _15.fld5, _18.2);
_9.fld1 = _10;
Goto(bb10)
}
bb48 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb49 = {
_72 = _38;
place!(Field::<f64>(Variant(_44.fld3, 0), 5)) = _76;
_74 = _54;
_51 = Field::<(char, (i128,), *const bool)>(Variant(_38, 1), 1).1.0 as f32;
_27 = (14918_u16,);
_6 = _2;
_75 = (*_31);
_71 = (Field::<u128>(Variant(_35, 2), 6), (*_32));
_44.fld4 = !Field::<i16>(Variant(_38, 1), 0);
_29 = _75 & _55;
_36 = !Field::<u8>(Variant(_35, 2), 5);
_57.0 = _42.2 ^ _17.2;
place!(Field::<i128>(Variant(_44.fld3, 0), 2)) = _17.0 | Field::<(char, (i128,), *const bool)>(Variant(_72, 1), 1).1.0;
Goto(bb50)
}
bb50 = {
SetDiscriminant(_44.fld3, 1);
_24 = [1517421730_u32,1213170967_u32,2185149948_u32,4261101202_u32];
place!(Field::<i16>(Variant(_72, 1), 0)) = _67 | Field::<i16>(Variant(_38, 1), 0);
_85.fld0.1 = core::ptr::addr_of!(_1);
_42.1 = [_19,_15.fld5,_19,_15.fld5];
SetDiscriminant(_38, 0);
(*_52) = _66 as i16;
_56 = -_53;
place!(Field::<i16>(Variant(_38, 0), 4)) = _67 & (*_52);
SetDiscriminant(_60, 2);
_17.1 = _39.1;
place!(Field::<(char, (i128,), *const bool)>(Variant(_72, 1), 1)).0 = _54;
place!(Field::<i128>(Variant(_38, 0), 2)) = Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).0 + _46.1.0;
_14 = _9.fld0;
_82 = _56;
_68 = _74;
_40.1 = [_19,_15.fld5,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).1,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).1];
_59 = _28;
Call(_71.1 = core::intrinsics::bswap((*_32)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
place!(Field::<(char, (i128,), *const bool)>(Variant(_72, 1), 1)) = (_33, _57, _46.2);
_27 = (_71.1,);
place!(Field::<i8>(Variant(_60, 2), 3)) = !_61.0;
place!(Field::<(char, (i128,), *const bool)>(Variant(_72, 1), 1)).1.0 = Field::<i16>(Variant(_72, 1), 0) as i128;
place!(Field::<(u64,)>(Variant(_69, 1), 0)) = _49;
place!(Field::<*mut i16>(Variant(_72, 1), 2)) = _52;
_15.fld1 = _58.fld2;
_28 = _53 as isize;
Goto(bb52)
}
bb52 = {
_85.fld4 = [_22.1,_19,_19,_18.1];
match _25 {
0 => bb53,
1 => bb54,
9223372036854775807 => bb56,
_ => bb55
}
}
bb53 = {
_40.2.0 = _28 as u64;
_39.0 = [_22.1,_18.1,_19,_15.fld5,_18.1,_18.1,_18.1,_18.1];
_44.fld2 = [4293299830_u32,717080054_u32,2001377936_u32,3382057083_u32];
_39.2 = ((*_2),);
_44.fld3 = Adt49::Variant0 { fld0: _18.2,fld1: _9.fld1,fld2: _21.1.0,fld3: _15.fld3,fld4: (-24895_i16),fld5: _23 };
_16 = _13 as i32;
_32 = core::ptr::addr_of_mut!(_27.0);
_16 = _22.0 as i32;
_9.fld0.0 = core::ptr::addr_of_mut!((*_6));
SetDiscriminant(_44.fld3, 3);
_36 = 155_u8 * 172_u8;
_22.0 = 14292552410524236349_usize as i128;
_18.1 = 4702549872027946161_usize as i64;
_21 = (_10, _15.fld0.0, _15.fld0.1);
_19 = _34 as i64;
_22.2 = _18.2;
(*_31) = _1 | _5;
_45 = _13;
_21.2 = _31;
place!(Field::<[i16; 4]>(Variant(_44.fld3, 3), 5)) = [27129_i16,(-26707_i16),(-26234_i16),21929_i16];
_47 = _12;
_46.0 = _4;
_30 = [1361715121_u32,972719891_u32,1966622895_u32,2370276609_u32];
_49 = ((*_6),);
match _8 {
0 => bb23,
1 => bb24,
2 => bb25,
3 => bb26,
9223372036854775807 => bb28,
_ => bb27
}
}
bb54 = {
SetDiscriminant(_44.fld3, 1);
_24 = [1517421730_u32,1213170967_u32,2185149948_u32,4261101202_u32];
place!(Field::<i16>(Variant(_72, 1), 0)) = _67 | Field::<i16>(Variant(_38, 1), 0);
_85.fld0.1 = core::ptr::addr_of!(_1);
_42.1 = [_19,_15.fld5,_19,_15.fld5];
SetDiscriminant(_38, 0);
(*_52) = _66 as i16;
_56 = -_53;
place!(Field::<i16>(Variant(_38, 0), 4)) = _67 & (*_52);
SetDiscriminant(_60, 2);
_17.1 = _39.1;
place!(Field::<(char, (i128,), *const bool)>(Variant(_72, 1), 1)).0 = _54;
place!(Field::<i128>(Variant(_38, 0), 2)) = Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).0 + _46.1.0;
_14 = _9.fld0;
_82 = _56;
_68 = _74;
_40.1 = [_19,_15.fld5,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).1,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).1];
_59 = _28;
Call(_71.1 = core::intrinsics::bswap((*_32)), ReturnTo(bb51), UnwindUnreachable())
}
bb55 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb56 = {
_65.fld5 = _19;
_89.1 = Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).1;
_16 = _47 + _12;
_46.0 = _34;
place!(Field::<(u64,)>(Variant(_69, 1), 0)).0 = (*_6);
(*_2) = _44.fld0.0 - _11.2.0;
place!(Field::<isize>(Variant(_60, 2), 2)) = _3 as isize;
SetDiscriminant(_72, 0);
place!(Field::<i16>(Variant(_38, 0), 4)) = _51 as i16;
_14 = (_58.fld0.0, _32);
Goto(bb57)
}
bb57 = {
_15.fld3 = [_57.0,_57.0,_18.0,_46.1.0,_17.2,Field::<(i128,)>(Variant(_35, 2), 0).0,_46.1.0];
_40.1 = [_15.fld5,_19,_65.fld5,_65.fld5];
_71.0 = Field::<u128>(Variant(_35, 2), 6) | _66;
place!(Field::<[u16; 5]>(Variant(_60, 2), 4)) = _58.fld2;
(*_32) = Field::<i16>(Variant(_35, 2), 4) as u16;
(*_31) = !_75;
(*_31) = _1 & _5;
place!(Field::<u8>(Variant(_69, 0), 3)) = 1_usize as u8;
_21.2 = core::ptr::addr_of!(_5);
_23 = _48;
_43 = _8;
Goto(bb58)
}
bb58 = {
place!(Field::<((i128,), *const bool)>(Variant(_69, 0), 4)).1 = core::ptr::addr_of!(_55);
_9.fld0 = (_14.0, _14.1);
_85.fld5 = _65.fld5;
_15 = Adt50 { fld0: _65.fld0,fld1: Field::<[u16; 5]>(Variant(_60, 2), 4),fld2: _65.fld2,fld3: _65.fld3,fld4: _42.1,fld5: _85.fld5 };
_28 = _59;
place!(Field::<((i128,), *const bool)>(Variant(_69, 0), 4)).0.0 = _42.0 & Field::<(i128,)>(Variant(_35, 2), 0).0;
_87 = !3112725785_u32;
place!(Field::<[i64; 4]>(Variant(_60, 2), 1)) = [_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_15.fld4 = _11.1;
_21.0 = _58.fld1;
_39.0 = [_15.fld5,_65.fld5,_22.1,_15.fld5,_85.fld5,_85.fld5,_65.fld5,_19];
_60 = Adt47::Variant0 { fld0: _11,fld1: _20,fld2: _46,fld3: Field::<i8>(Variant(_35, 2), 3) };
_70 = (*_2) as u128;
place!(Field::<[char; 8]>(Variant(_60, 0), 1)) = [_74,_26,_26,_33,_74,_21.0,_26,_34];
_32 = _58.fld0.1;
_44.fld3 = Adt49::Variant2 { fld0: _42.1,fld1: _61,fld2: _56,fld3: _27.0,fld4: Field::<(i32, [bool; 1])>(Variant(_35, 2), 1),fld5: _12,fld6: _57 };
Goto(bb59)
}
bb59 = {
_22.2 = [_87,_87,_87,_87,_87];
_85.fld0.0.0 = _49.0 as i128;
match _25 {
0 => bb60,
1 => bb61,
2 => bb62,
3 => bb63,
9223372036854775807 => bb65,
_ => bb64
}
}
bb60 = {
place!(Field::<((i128,), *const bool)>(Variant(_69, 0), 4)).1 = core::ptr::addr_of!(_55);
_9.fld0 = (_14.0, _14.1);
_85.fld5 = _65.fld5;
_15 = Adt50 { fld0: _65.fld0,fld1: Field::<[u16; 5]>(Variant(_60, 2), 4),fld2: _65.fld2,fld3: _65.fld3,fld4: _42.1,fld5: _85.fld5 };
_28 = _59;
place!(Field::<((i128,), *const bool)>(Variant(_69, 0), 4)).0.0 = _42.0 & Field::<(i128,)>(Variant(_35, 2), 0).0;
_87 = !3112725785_u32;
place!(Field::<[i64; 4]>(Variant(_60, 2), 1)) = [_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_15.fld4 = _11.1;
_21.0 = _58.fld1;
SetDiscriminant(_37, 0);
_39.0 = [_15.fld5,_65.fld5,_22.1,_15.fld5,_85.fld5,_85.fld5,_65.fld5,_19];
_60 = Adt47::Variant0 { fld0: _11,fld1: _20,fld2: _46,fld3: Field::<i8>(Variant(_35, 2), 3) };
_70 = (*_2) as u128;
place!(Field::<[char; 8]>(Variant(_60, 0), 1)) = [_74,_26,_26,_33,_74,_21.0,_26,_34];
_32 = _58.fld0.1;
_44.fld3 = Adt49::Variant2 { fld0: _42.1,fld1: _61,fld2: _56,fld3: _27.0,fld4: Field::<(i32, [bool; 1])>(Variant(_35, 2), 1),fld5: _12,fld6: _57 };
Goto(bb59)
}
bb61 = {
_48 = _23;
place!(Field::<[i64; 4]>(Variant(_44.fld3, 3), 3)) = [_18.1,_22.1,_18.1,_15.fld5];
_14 = (_6, _32);
_44.fld4 = _22.1 as i16;
_42.2 = _22.0 & _17.2;
SetDiscriminant(_35, 2);
_41 = _8 - _28;
_16 = -_47;
_11 = (_40.0, _15.fld4, _40.2);
place!(Field::<u8>(Variant(_35, 2), 5)) = _36 >> (*_2);
_48 = -_23;
_31 = core::ptr::addr_of!((*_31));
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)).1 = [(*_31)];
place!(Field::<i8>(Variant(_35, 2), 3)) = _3 as i8;
(*_6) = _4 as u64;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)) = (_42.2, _42.1, _17.2);
Goto(bb30)
}
bb62 = {
_15.fld0.1 = core::ptr::addr_of!((*_31));
_75 = _1;
Goto(bb44)
}
bb63 = {
(*_6) = !_11.2.0;
_16 = -_12;
_15.fld2 = [26_u8,77_u8,128_u8];
_7 = _13 as f64;
_4 = _9.fld1;
_9.fld0.0 = core::ptr::addr_of_mut!((*_2));
_13 = -27_i8;
(*_6) = !_11.2.0;
(*_2) = (-32082_i16) as u64;
_11.2 = ((*_2),);
_14.0 = core::ptr::addr_of_mut!((*_6));
_15.fld4 = [(-2750780951172561024_i64),(-2516155559953649701_i64),2204756649331179098_i64,6931374554582236770_i64];
_15.fld2 = [98_u8,109_u8,159_u8];
_15.fld4 = [8337522823701758763_i64,(-4367159079470199335_i64),(-3617832503105558593_i64),(-7625843333139188401_i64)];
_7 = 4_usize as f64;
_7 = _3 as f64;
_15.fld2 = [69_u8,238_u8,108_u8];
(*_2) = !_11.2.0;
_15.fld0.1 = core::ptr::addr_of!(_1);
_17.0 = _15.fld0.0.0 - _15.fld0.0.0;
(*_6) = 82_u8 as u64;
_10 = _4;
_2 = _9.fld0.0;
_17.2 = _15.fld0.0.0;
_11.2.0 = 8872579429638049940_i64 as u64;
Goto(bb3)
}
bb64 = {
Return()
}
bb65 = {
_22.0 = _42.2;
_34 = _68;
_85.fld4 = [_15.fld5,_19,_65.fld5,_19];
SetDiscriminant(_60, 2);
_65.fld0.1 = core::ptr::addr_of!((*_31));
_82 = Field::<f64>(Variant(_44.fld3, 2), 2);
_65 = Move(_15);
_2 = _9.fld0.0;
_89.1 = [_75];
_55 = _59 < _28;
_55 = _5;
_86.0 = (*_32) << (*_6);
(*_52) = Field::<i16>(Variant(_38, 0), 4);
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)).1 = Field::<(i32, [bool; 1])>(Variant(_44.fld3, 2), 4).1;
_69 = Adt48::Variant1 { fld0: _11.2 };
place!(Field::<[i128; 7]>(Variant(_38, 0), 3)) = [Field::<(i128,)>(Variant(_44.fld3, 2), 6).0,Field::<(i128,)>(Variant(_44.fld3, 2), 6).0,_46.1.0,Field::<i128>(Variant(_38, 0), 2),_18.0,_22.0,_42.0];
_72 = Adt49::Variant2 { fld0: _50,fld1: _61,fld2: _53,fld3: (*_32),fld4: Field::<(i32, [bool; 1])>(Variant(_35, 2), 1),fld5: _47,fld6: Field::<(i128,)>(Variant(_44.fld3, 2), 6) };
_97 = (Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).0, _89.1);
_78 = Move(_69);
Goto(bb66)
}
bb66 = {
_42.0 = Field::<(i128,)>(Variant(_72, 2), 6).0;
_21 = (_54, _57, _46.2);
_73 = _43 & _28;
_9.fld0.1 = core::ptr::addr_of_mut!((*_32));
_71.0 = !_3;
SetDiscriminant(_44.fld3, 2);
place!(Field::<i32>(Variant(_72, 2), 5)) = !_12;
_21.1 = (_57.0,);
place!(Field::<Adt48>(Variant(_37, 0), 0)) = Move(_78);
place!(Field::<f64>(Variant(_38, 0), 5)) = Field::<(i128,)>(Variant(_44.fld3, 2), 6).0 as f64;
_21.1 = (_42.2,);
_39.2.0 = _10 as u64;
SetDiscriminant(_72, 3);
place!(Field::<u32>(Variant(_60, 2), 0)) = _87 & _87;
_71 = (_70, _86.0);
_11.2 = ((*_6),);
place!(Field::<i8>(Variant(_60, 2), 3)) = Field::<i16>(Variant(_35, 2), 4) as i8;
place!(Field::<u8>(Variant(_35, 2), 5)) = !_36;
_78 = Move(Field::<Adt48>(Variant(_37, 0), 0));
_25 = -_8;
SetDiscriminant(_44.fld3, 3);
Goto(bb67)
}
bb67 = {
place!(Field::<i128>(Variant(_38, 0), 2)) = _42.2;
_58 = Adt52 { fld0: _9.fld0,fld1: _34,fld2: _65.fld1 };
place!(Field::<[u8; 3]>(Variant(_60, 2), 6)) = [Field::<u8>(Variant(_35, 2), 5),_36,_36];
place!(Field::<[u16; 5]>(Variant(_35, 2), 7)) = [_71.1,_71.1,_71.1,_86.0,_86.0];
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)) = (_42.2, _40.1, _42.0);
_6 = core::ptr::addr_of_mut!(_44.fld0.0);
_45 = Field::<i8>(Variant(_60, 2), 3);
SetDiscriminant(_78, 1);
_85 = Move(_65);
_106.fld0 = (_21.1, _31);
place!(Field::<Adt48>(Variant(_37, 0), 0)) = Move(_78);
_10 = _74;
_80 = _71.0 as f64;
_32 = core::ptr::addr_of_mut!((*_32));
_35 = Adt48::Variant1 { fld0: _40.2 };
_15 = Adt50 { fld0: _106.fld0,fld1: _85.fld1,fld2: _85.fld2,fld3: Field::<[i128; 7]>(Variant(_38, 0), 3),fld4: _42.1,fld5: _85.fld5 };
place!(Field::<(u64,)>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 1), 0)) = _44.fld0;
_65 = Adt50 { fld0: _106.fld0,fld1: _15.fld1,fld2: Field::<[u8; 3]>(Variant(_60, 2), 6),fld3: _15.fld3,fld4: _17.1,fld5: _18.1 };
_16 = _47 ^ _47;
_86.0 = _71.1 - _71.1;
Goto(bb68)
}
bb68 = {
_101 = !_1;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).1 = _50;
_87 = Field::<u32>(Variant(_60, 2), 0);
_15.fld0.0.0 = !Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2;
_28 = _65.fld5 as isize;
_65 = Move(_15);
_69 = Move(Field::<Adt48>(Variant(_37, 0), 0));
SetDiscriminant(_35, 2);
place!(Field::<u32>(Variant(_60, 2), 0)) = _87;
place!(Field::<char>(Variant(_38, 0), 1)) = _4;
_103 = [_87,_87,Field::<u32>(Variant(_60, 2), 0),_87,Field::<u32>(Variant(_60, 2), 0)];
_106.fld4 = _50;
place!(Field::<[u8; 3]>(Variant(_60, 2), 6)) = [_36,_36,_36];
Goto(bb69)
}
bb69 = {
_39.1 = [_85.fld5,_22.1,_18.1,_65.fld5];
_106.fld5 = _85.fld5 - _19;
_78 = Adt48::Variant1 { fld0: _11.2 };
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)).1 = [_85.fld5,_106.fld5,_19,_22.1];
place!(Field::<[u16; 5]>(Variant(_37, 0), 2)) = [_27.0,_71.1,_86.0,_86.0,_86.0];
_5 = Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2 < _42.2;
place!(Field::<Adt48>(Variant(_37, 0), 0)) = Adt48::Variant2 { fld0: _57,fld1: _97,fld2: _103,fld3: _45,fld4: (*_52),fld5: _36,fld6: _70,fld7: Field::<[u16; 5]>(Variant(_37, 0), 2) };
_27.0 = !_71.1;
_103 = Field::<[u32; 5]>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 2);
_12 = !_47;
_65.fld5 = _85.fld5;
_21.2 = _31;
_57 = Field::<(i128,)>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 0);
_58.fld1 = _46.0;
place!(Field::<(u64,)>(Variant(_78, 1), 0)) = (_11.2.0,);
_80 = -Field::<f64>(Variant(_38, 0), 5);
Goto(bb70)
}
bb70 = {
place!(Field::<[u16; 5]>(Variant(_35, 2), 7)) = [_27.0,_86.0,_71.1,_86.0,_71.1];
place!(Field::<Adt47>(Variant(_69, 0), 7)) = Adt47::Variant1 { fld0: _20,fld1: Field::<[u16; 5]>(Variant(_37, 0), 2) };
Goto(bb71)
}
bb71 = {
_88 = [Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2,_42.2,_42.0,_42.0,_106.fld0.0.0,_46.1.0,_22.0];
_74 = Field::<char>(Variant(_38, 0), 1);
_11.0 = [_18.1,_65.fld5,_65.fld5,_65.fld5,_22.1,_22.1,_85.fld5,_65.fld5];
_79 = _51;
place!(Field::<f64>(Variant(_38, 0), 5)) = _80;
_18.1 = _85.fld5 << _47;
Goto(bb72)
}
bb72 = {
_65 = Adt50 { fld0: _106.fld0,fld1: Field::<[u16; 5]>(Variant(_37, 0), 2),fld2: Field::<[u8; 3]>(Variant(_60, 2), 6),fld3: _88,fld4: _17.1,fld5: _19 };
_15.fld2 = Field::<[u8; 3]>(Variant(_60, 2), 6);
_11.2.0 = _44.fld0.0 - _49.0;
_40.2 = _11.2;
_44.fld0.0 = _40.2.0;
_70 = _71.0 & Field::<u128>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 6);
_99 = -_41;
_105 = _74;
_52 = core::ptr::addr_of_mut!(_102);
place!(Field::<[u16; 5]>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 7)) = [_86.0,_86.0,(*_32),_86.0,(*_32)];
_106.fld1 = Field::<[u16; 5]>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 7);
Goto(bb73)
}
bb73 = {
_11.0 = _39.0;
_111.0 = _21.1;
place!(Field::<u8>(Variant(_35, 2), 5)) = !_36;
_44.fld0 = (_49.0,);
_86 = ((*_32),);
_91.1 = !(*_32);
_97 = (_12, Field::<(i32, [bool; 1])>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 1).1);
_58.fld0.0 = _9.fld0.0;
_77 = _59;
_1 = (*_31);
place!(Field::<(i128,)>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 0)) = _21.1;
_17 = (_46.1.0, _50, _42.0);
_70 = !_66;
_84 = !_28;
_85.fld0 = _106.fld0;
place!(Field::<*const u128>(Variant(_72, 3), 1)) = core::ptr::addr_of!(_66);
_65.fld3 = [_21.1.0,_106.fld0.0.0,_57.0,_17.2,_42.2,Field::<(i128,)>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 0).0,Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).0];
_73 = Field::<u128>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 6) as isize;
_102 = -Field::<i16>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 4);
_53 = -_80;
_103 = Field::<[u32; 5]>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 2);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)) = (_22.0, Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).1, Field::<i128>(Variant(_38, 0), 2));
place!(Field::<[u8; 3]>(Variant(_69, 0), 6)) = [_36,Field::<u8>(Variant(_35, 2), 5),Field::<u8>(Variant(_35, 2), 5)];
_40.2.0 = _11.2.0 << Field::<i8>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 3);
_48 = _80;
_108 = Field::<u32>(Variant(_60, 2), 0);
_15 = Adt50 { fld0: _65.fld0,fld1: Field::<[u16; 5]>(Variant(Field::<Adt47>(Variant(_69, 0), 7), 1), 1),fld2: _65.fld2,fld3: _65.fld3,fld4: _85.fld4,fld5: _22.1 };
_104 = [_85.fld5,_15.fld5,_85.fld5,_19];
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 3)) = _45;
Goto(bb74)
}
bb74 = {
_74 = _9.fld1;
place!(Field::<i16>(Variant(_35, 2), 4)) = _45 as i16;
_11.0 = [_106.fld5,_106.fld5,_18.1,_65.fld5,_106.fld5,_106.fld5,_65.fld5,_106.fld5];
Goto(bb75)
}
bb75 = {
_106 = Adt50 { fld0: _15.fld0,fld1: Field::<[u16; 5]>(Variant(Field::<Adt47>(Variant(_69, 0), 7), 1), 1),fld2: _65.fld2,fld3: _15.fld3,fld4: _65.fld4,fld5: _15.fld5 };
SetDiscriminant(Field::<Adt47>(Variant(_69, 0), 7), 1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).1 = Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).1;
_6 = core::ptr::addr_of_mut!((*_6));
place!(Field::<[u32; 4]>(Variant(_37, 0), 1)) = [_87,_108,_87,_87];
_13 = 0_usize as i8;
_15.fld0.0.0 = Field::<u32>(Variant(_60, 2), 0) as i128;
_71.1 = _86.0 - (*_32);
Goto(bb76)
}
bb76 = {
_12 = !_16;
place!(Field::<i16>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 4)) = (*_52) >> Field::<(u64,)>(Variant(_78, 1), 0).0;
_85.fld5 = _18.1;
place!(Field::<f64>(Variant(_69, 0), 1)) = -_48;
_21.0 = _33;
place!(Field::<*const bool>(Variant(_69, 0), 5)) = core::ptr::addr_of!(_1);
Goto(bb77)
}
bb77 = {
_106.fld2 = _85.fld2;
_39.1 = [_18.1,_85.fld5,_18.1,_65.fld5];
_91 = _71;
_106 = Adt50 { fld0: _65.fld0,fld1: _15.fld1,fld2: _85.fld2,fld3: Field::<[i128; 7]>(Variant(_38, 0), 3),fld4: _39.1,fld5: _18.1 };
_40.0 = _39.0;
_54 = _21.0;
_46.0 = _58.fld1;
_11.2 = ((*_2),);
_22.2 = [_87,Field::<u32>(Variant(_60, 2), 0),_108,_87,_87];
_58.fld2 = [_71.1,_71.1,_27.0,_91.1,_86.0];
_10 = _68;
_112 = _10;
_70 = _71.0 & Field::<u128>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 6);
_83 = Adt53::Variant0 { fld0: _58.fld0,fld1: _89.1 };
_40 = (_11.0, _42.1, _11.2);
_89 = Field::<(i32, [bool; 1])>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 1);
_64 = Adt51::Variant0 { fld0: _42 };
_67 = _44.fld4;
_54 = _9.fld1;
place!(Field::<(i128,)>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 0)).0 = _42.0;
_91 = (_70, _71.1);
place!(Field::<[i128; 7]>(Variant(_72, 3), 4)) = _85.fld3;
place!(Field::<f64>(Variant(_38, 0), 5)) = -_53;
place!(Field::<((i128,), *const bool)>(Variant(_69, 0), 4)).0.0 = Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2 << Field::<i16>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 4);
Goto(bb78)
}
bb78 = {
_102 = Field::<i16>(Variant(_35, 2), 4);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)) = (Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0, _17.1, _57.0);
_85.fld0.1 = core::ptr::addr_of!(_101);
_9 = Adt52 { fld0: _14,fld1: _54,fld2: _106.fld1 };
place!(Field::<[u16; 5]>(Variant(_60, 2), 4)) = [_91.1,_91.1,(*_32),_27.0,_91.1];
_59 = _28 >> _71.1;
_13 = 3_usize as i8;
place!(Field::<[u8; 3]>(Variant(_60, 2), 6)) = Field::<[u8; 3]>(Variant(_69, 0), 6);
_112 = _9.fld1;
place!(Field::<[u8; 3]>(Variant(_60, 2), 6)) = [_36,_36,Field::<u8>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 5)];
_115 = Field::<(i32, [bool; 1])>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 1).0;
_91 = _71;
_62 = Adt55::Variant3 { fld0: _22.1,fld1: _45 };
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)) = (_89.0, _89.1);
_108 = _87 | _87;
_100 = _112 as u16;
_7 = _48;
Goto(bb79)
}
bb79 = {
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)) = (_16, Field::<[bool; 1]>(Variant(_83, 0), 1));
place!(Field::<[i16; 4]>(Variant(_72, 3), 5)) = [_44.fld4,_67,Field::<i16>(Variant(_35, 2), 4),_102];
_113 = _61;
_124.0 = Field::<i8>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 3);
_59 = _99;
_116 = _63 * _43;
place!(Field::<[bool; 1]>(Variant(_69, 0), 2)) = [_1];
_7 = _80;
_25 = _116 + _73;
SetDiscriminant(_83, 1);
_15.fld0.0.0 = Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2 * _85.fld0.0.0;
_40.2 = (_11.2.0,);
place!(Field::<*const u128>(Variant(_72, 3), 1)) = core::ptr::addr_of!(_71.0);
place!(Field::<i64>(Variant(_62, 3), 0)) = -_106.fld5;
_8 = !_25;
_15 = Move(_65);
_82 = -Field::<f64>(Variant(_38, 0), 5);
place!(Field::<[u32; 5]>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 2)) = [_108,_108,_108,Field::<u32>(Variant(_60, 2), 0),_87];
_99 = -_73;
_6 = _58.fld0.0;
_95.0 = _45;
_106.fld0.1 = core::ptr::addr_of!(_5);
_65 = Move(_85);
Goto(bb80)
}
bb80 = {
_39.2.0 = Field::<u8>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 5) as u64;
_4 = _58.fld1;
_15.fld0 = (_57, _31);
place!(Field::<u64>(Variant(_60, 2), 5)) = _40.2.0;
_85.fld0.0 = (Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0,);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).1 = [_106.fld5,_65.fld5,_65.fld5,_65.fld5];
_58.fld2 = Field::<[u16; 5]>(Variant(Field::<Adt47>(Variant(_69, 0), 7), 1), 1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).0 = _15.fld0.0.0 + _42.2;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)) = (_85.fld0.0.0, Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).1, Field::<(i128,)>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 0).0);
_127.1 = -_19;
place!(Field::<i8>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 3)) = _61.0;
_22 = (Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0, _65.fld5, Field::<[u32; 5]>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 2), 2));
SetDiscriminant(Field::<Adt47>(Variant(_69, 0), 7), 1);
_124 = _95;
_33 = _26;
_126.0 = _95.0;
_71.1 = Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0 as u16;
place!(Field::<(i32, [bool; 1])>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 2), 1)).1 = _97.1;
_9.fld0 = (_2, _58.fld0.1);
_24 = [_108,Field::<u32>(Variant(_60, 2), 0),_87,Field::<u32>(Variant(_60, 2), 0)];
_28 = _99;
_127.0 = !Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2).2;
_64 = Adt51::Variant1 { fld0: (*_2),fld1: Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2),fld2: Field::<[i16; 4]>(Variant(_72, 3), 5),fld3: _21,fld4: _15.fld3,fld5: _6,fld6: Field::<[u8; 3]>(Variant(_60, 2), 6) };
_44.fld3 = Adt49::Variant1 { fld0: _102,fld1: _21,fld2: _52 };
_114 = _70;
_85 = Adt50 { fld0: _106.fld0,fld1: Field::<[u16; 5]>(Variant(Field::<Adt47>(Variant(_69, 0), 7), 1), 1),fld2: _106.fld2,fld3: _88,fld4: _42.1,fld5: _18.1 };
_24 = [_108,_108,_87,_108];
Goto(bb81)
}
bb81 = {
_106.fld2 = [Field::<u8>(Variant(_35, 2), 5),Field::<u8>(Variant(_35, 2), 5),_36];
_21.1.0 = _42.0;
place!(Field::<*const bool>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 0), 5)) = core::ptr::addr_of!(_101);
_15.fld0.0.0 = _42.2;
SetDiscriminant(Field::<Adt47>(Variant(_69, 0), 7), 2);
_129 = _105;
place!(Field::<[u8; 3]>(Variant(_37, 0), 5)) = [_36,Field::<u8>(Variant(_35, 2), 5),_36];
place!(Field::<[bool; 1]>(Variant(_69, 0), 2)) = [(*_31)];
_127 = (Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0, Field::<i64>(Variant(_62, 3), 0), _22.2);
place!(Field::<f64>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 0), 1)) = Field::<f64>(Variant(_38, 0), 5);
SetDiscriminant(_44.fld3, 3);
_44.fld0.0 = !_40.2.0;
_118.1 = !_86.0;
_31 = core::ptr::addr_of!(_29);
place!(Field::<[i128; 7]>(Variant(_38, 0), 3)) = _85.fld3;
SetDiscriminant(_64, 0);
_46.2 = _85.fld0.1;
Goto(bb82)
}
bb82 = {
place!(Field::<((i128,), *const bool)>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 0), 4)).0.0 = -_57.0;
_17.0 = !Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0;
_11.2.0 = (*_2) << Field::<(u64,)>(Variant(_78, 1), 0).0;
place!(Field::<[u8; 3]>(Variant(_60, 2), 6)) = [_36,Field::<u8>(Variant(_35, 2), 5),Field::<u8>(Variant(_35, 2), 5)];
_15.fld5 = _114 as i64;
_44.fld4 = 11155570427196564256_usize as i16;
place!(Field::<u64>(Variant(place!(Field::<Adt47>(Variant(_69, 0), 7)), 2), 5)) = Field::<(u64,)>(Variant(_78, 1), 0).0;
_18.1 = (*_2) as i64;
_81 = _114;
_111 = (Field::<((i128,), *const bool)>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 0), 4).0, _106.fld0.1);
place!(Field::<(u128, u16)>(Variant(_83, 1), 0)) = (_81, _91.1);
_136 = _33;
_71.1 = _118.1;
_15.fld4 = [_15.fld5,_127.1,_18.1,_19];
place!(Field::<i8>(Variant(place!(Field::<Adt47>(Variant(_69, 0), 7)), 2), 3)) = _45;
_85.fld2 = Field::<[u8; 3]>(Variant(_37, 0), 5);
_84 = !_25;
_39 = (_40.0, Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).1, _11.2);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_44.fld3, 3), 2)).1 = _11.1;
SetDiscriminant(_78, 2);
_127 = (Field::<i128>(Variant(_38, 0), 2), _106.fld5, _22.2);
Goto(bb83)
}
bb83 = {
_15.fld0.1 = core::ptr::addr_of!((*_31));
_44.fld3 = Adt49::Variant2 { fld0: _15.fld4,fld1: _95,fld2: Field::<f64>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 0), 1),fld3: Field::<(u128, u16)>(Variant(_83, 1), 0).1,fld4: Field::<(i32, [bool; 1])>(Variant(_35, 2), 1),fld5: Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).0,fld6: _57 };
_1 = !_75;
SetDiscriminant(_44.fld3, 0);
_146 = [Field::<u8>(Variant(_35, 2), 5),_36,Field::<u8>(Variant(_35, 2), 5)];
_58 = Adt52 { fld0: _9.fld0,fld1: _68,fld2: Field::<[u16; 5]>(Variant(_35, 2), 7) };
_46.1 = (Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2,);
_142 = [_86.0,(*_32),_91.1,_86.0,_71.1];
Goto(bb84)
}
bb84 = {
_96 = !_99;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0)).2 = Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0;
SetDiscriminant(_62, 1);
Goto(bb85)
}
bb85 = {
_14.1 = _9.fld0.1;
_98 = [_17.2,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,_42.0,Field::<((i128,), *const bool)>(Variant(Field::<Adt48>(Variant(_37, 0), 0), 0), 4).0.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,_42.0];
_96 = _73 << _124.0;
_15.fld0.0.0 = !Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2;
_106 = Adt50 { fld0: _15.fld0,fld1: Field::<[u16; 5]>(Variant(_35, 2), 7),fld2: Field::<[u8; 3]>(Variant(_69, 0), 6),fld3: _65.fld3,fld4: _85.fld4,fld5: _65.fld5 };
place!(Field::<[u32; 5]>(Variant(_78, 2), 2)) = [Field::<u32>(Variant(_60, 2), 0),_108,_108,Field::<u32>(Variant(_60, 2), 0),_108];
_94 = _112;
_85 = Move(_65);
_107 = _41;
place!(Field::<[i64; 4]>(Variant(_69, 0), 0)) = [_127.1,_22.1,_15.fld5,_106.fld5];
place!(Field::<[u16; 5]>(Variant(place!(Field::<Adt47>(Variant(_69, 0), 7)), 2), 4)) = [Field::<(u128, u16)>(Variant(_83, 1), 0).1,Field::<(u128, u16)>(Variant(_83, 1), 0).1,_71.1,_86.0,_71.1];
_85.fld0 = _111;
place!(Field::<[i64; 4]>(Variant(place!(Field::<Adt48>(Variant(_37, 0), 0)), 0), 0)) = _15.fld4;
place!(Field::<(i32, [bool; 1])>(Variant(_78, 2), 1)) = (_115, Field::<[bool; 1]>(Variant(_69, 0), 2));
_124.0 = Field::<i8>(Variant(_60, 2), 3);
_131 = -_73;
_37 = Adt61::Variant1 { fld0: _127,fld1: _9.fld0.1 };
_136 = Field::<char>(Variant(_38, 0), 1);
place!(Field::<bool>(Variant(_62, 1), 0)) = _91.1 == (*_32);
_15 = Adt50 { fld0: _85.fld0,fld1: _142,fld2: _106.fld2,fld3: _106.fld3,fld4: Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).1,fld5: _106.fld5 };
_65.fld1 = [_71.1,_71.1,Field::<(u128, u16)>(Variant(_83, 1), 0).1,_86.0,Field::<(u128, u16)>(Variant(_83, 1), 0).1];
_11.2 = _39.2;
_97 = _89;
Goto(bb86)
}
bb86 = {
_93 = [_27.0,_118.1,_91.1,(*_32),_71.1];
_11.2 = _44.fld0;
place!(Field::<bool>(Variant(_62, 1), 0)) = !_29;
Call(_68 = fn19(_89.1, Field::<[i64; 4]>(Variant(_69, 0), 0), _17.2, Move(_106), _39.2, _8, _46.1, Move(_58), _70, _93, _70, _39.2), ReturnTo(bb87), UnwindUnreachable())
}
bb87 = {
_95 = _124;
_82 = Field::<f64>(Variant(_38, 0), 5);
place!(Field::<(u128, u16)>(Variant(_83, 1), 0)) = (_70, (*_32));
_106.fld0.1 = core::ptr::addr_of!(_29);
_88 = [_15.fld0.0.0,_85.fld0.0.0,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0,_21.1.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,_22.0,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0];
_18 = (Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2, _127.1, _127.2);
place!(Field::<isize>(Variant(place!(Field::<Adt47>(Variant(_69, 0), 7)), 2), 2)) = _36 as isize;
_85.fld3 = [Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,_22.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2];
_118 = _91;
place!(Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0)).0 = Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2;
place!(Field::<(i32, [bool; 1])>(Variant(_78, 2), 1)).0 = Field::<u8>(Variant(_35, 2), 5) as i32;
_12 = !Field::<(i32, [bool; 1])>(Variant(_78, 2), 1).0;
SetDiscriminant(_37, 1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).1 = [_22.1,_127.1,_22.1,_18.1];
_139.fld2 = [_108,Field::<u32>(Variant(_60, 2), 0),_108,Field::<u32>(Variant(_60, 2), 0)];
_21.1.0 = -_15.fld0.0.0;
_9.fld0.1 = core::ptr::addr_of_mut!(_149.1);
Goto(bb88)
}
bb88 = {
_140 = _96 ^ _84;
_159.fld5 = _18.1;
_85.fld2 = Field::<[u8; 3]>(Variant(_60, 2), 6);
_2 = _6;
place!(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1)).0 = _16;
place!(Field::<u128>(Variant(_35, 2), 6)) = _95.0 as u128;
Goto(bb89)
}
bb89 = {
_65 = Move(_15);
_109.1 = _159.fld5 ^ _127.1;
_85.fld0.0.0 = Field::<i8>(Variant(Field::<Adt47>(Variant(_69, 0), 7), 2), 3) as i128;
_103 = [_108,_87,Field::<u32>(Variant(_60, 2), 0),_87,_108];
_95 = (_45,);
_15.fld0 = _65.fld0;
_12 = _47 & _16;
_85.fld4 = _65.fld4;
_148.1 = [_159.fld5,_109.1,Field::<(i128, i64, [u32; 5])>(Variant(_37, 1), 0).1,_65.fld5];
_9.fld0.0 = _6;
_106 = Move(_85);
_97 = Field::<(i32, [bool; 1])>(Variant(_35, 2), 1);
_146 = [Field::<u8>(Variant(_35, 2), 5),Field::<u8>(Variant(_35, 2), 5),_36];
place!(Field::<*mut u64>(Variant(_62, 1), 1)) = core::ptr::addr_of_mut!(_49.0);
_85.fld3 = _106.fld3;
place!(Field::<i8>(Variant(_78, 2), 3)) = Field::<i8>(Variant(_60, 2), 3) * _45;
Goto(bb90)
}
bb90 = {
_144 = _12;
_1 = !_29;
_96 = _99;
_46 = (_136, _21.1, _111.1);
_127.2 = [_87,_87,_108,_108,Field::<u32>(Variant(_60, 2), 0)];
_30 = _139.fld2;
Call(place!(Field::<(i32, [bool; 1])>(Variant(_78, 2), 1)).0 = core::intrinsics::transmute(Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).0), ReturnTo(bb91), UnwindUnreachable())
}
bb91 = {
_67 = (*_52) * Field::<i16>(Variant(_38, 0), 4);
place!(Field::<i16>(Variant(_78, 2), 4)) = (*_52);
_98 = [_106.fld0.0.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,_106.fld0.0.0,_42.2,_22.0];
_65.fld1 = [Field::<(u128, u16)>(Variant(_83, 1), 0).1,_118.1,_118.1,_86.0,(*_32)];
_85.fld0.0 = (_46.1.0,);
place!(Field::<[u16; 5]>(Variant(_35, 2), 7)) = [_71.1,(*_32),_91.1,Field::<(u128, u16)>(Variant(_83, 1), 0).1,_118.1];
_67 = !Field::<i16>(Variant(_38, 0), 4);
Goto(bb92)
}
bb92 = {
place!(Field::<[u16; 5]>(Variant(_60, 2), 4)) = _106.fld1;
_106.fld0 = (_57, _111.1);
_148.1 = _106.fld4;
_5 = !_55;
_127 = (_46.1.0, _109.1, Field::<[u32; 5]>(Variant(_78, 2), 2));
_147 = Move(_37);
_127.2 = [Field::<u32>(Variant(_60, 2), 0),_108,_87,_87,_87];
_149.1 = !_71.1;
_57.0 = -_46.1.0;
place!(Field::<[bool; 1]>(Variant(_69, 0), 2)) = Field::<(i32, [bool; 1])>(Variant(_35, 2), 1).1;
_24 = [_87,_108,_108,Field::<u32>(Variant(_60, 2), 0)];
_106.fld3 = [_21.1.0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,_15.fld0.0.0,Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0).0,_17.0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0];
Goto(bb93)
}
bb93 = {
_122 = _25 >> _44.fld0.0;
Goto(bb94)
}
bb94 = {
_94 = _74;
place!(Field::<(i32, [bool; 1])>(Variant(_78, 2), 1)).1 = [(*_31)];
_42.0 = Field::<i128>(Variant(_38, 0), 2);
_85.fld5 = !_65.fld5;
Call(_15.fld3 = core::intrinsics::transmute(_106.fld3), ReturnTo(bb95), UnwindUnreachable())
}
bb95 = {
_85.fld0.0.0 = Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2;
place!(Field::<[u32; 5]>(Variant(_35, 2), 2)) = [_87,Field::<u32>(Variant(_60, 2), 0),_87,Field::<u32>(Variant(_60, 2), 0),_108];
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).2 = !Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2;
place!(Field::<u128>(Variant(_78, 2), 6)) = !Field::<(u128, u16)>(Variant(_83, 1), 0).0;
_67 = _12 as i16;
_85.fld3 = [_85.fld0.0.0,_85.fld0.0.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,_65.fld0.0.0,_17.0,_22.0,_42.0];
_96 = _140 + _28;
_52 = core::ptr::addr_of_mut!((*_52));
place!(Field::<u128>(Variant(_35, 2), 6)) = _81 * Field::<(u128, u16)>(Variant(_83, 1), 0).0;
_142 = [(*_32),_71.1,(*_32),_149.1,_118.1];
_139.fld4 = (*_52);
_109.2 = [_108,_108,Field::<u32>(Variant(_60, 2), 0),_108,_108];
Goto(bb96)
}
bb96 = {
place!(Field::<[u16; 5]>(Variant(_78, 2), 7)) = [_118.1,_71.1,_71.1,_91.1,_71.1];
_22.2 = _103;
place!(Field::<i16>(Variant(_35, 2), 4)) = 17174206026475577090_usize as i16;
_102 = Field::<u128>(Variant(_35, 2), 6) as i16;
place!(Field::<u8>(Variant(_78, 2), 5)) = _36;
_38 = Adt49::Variant2 { fld0: _40.1,fld1: _124,fld2: _53,fld3: _86.0,fld4: Field::<(i32, [bool; 1])>(Variant(_35, 2), 1),fld5: _144,fld6: _106.fld0.0 };
_97.0 = _144;
_15.fld0.0.0 = -_42.2;
_46.2 = core::ptr::addr_of!(_134);
_15.fld2 = [_36,_36,Field::<u8>(Variant(_35, 2), 5)];
_46.1.0 = _12 as i128;
_159.fld0.0.0 = _85.fld0.0.0 * _127.0;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0)) = (Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).0, _42.1, _159.fld0.0.0);
place!(Field::<[bool; 1]>(Variant(_69, 0), 2)) = [Field::<bool>(Variant(_62, 1), 0)];
Goto(bb97)
}
bb97 = {
_76 = Field::<(i8,)>(Variant(_38, 2), 1).0 as f64;
_149.1 = !Field::<u16>(Variant(_38, 2), 3);
_106.fld4 = [_22.1,Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0).1,_127.1,_109.1];
place!(Field::<[i64; 4]>(Variant(_72, 3), 3)) = _11.1;
_57.0 = _65.fld0.0.0 << Field::<u128>(Variant(_35, 2), 6);
_71 = (Field::<u128>(Variant(_35, 2), 6), Field::<u16>(Variant(_38, 2), 3));
_137 = _51 as u128;
place!(Field::<f64>(Variant(_44.fld3, 0), 5)) = _22.1 as f64;
SetDiscriminant(_147, 1);
place!(Field::<i32>(Variant(_38, 2), 5)) = -_97.0;
_139.fld4 = (*_52) - (*_52);
place!(Field::<Adt47>(Variant(_69, 0), 7)) = Adt47::Variant2 { fld0: _108,fld1: _148.1,fld2: _8,fld3: Field::<i8>(Variant(_78, 2), 3),fld4: _65.fld1,fld5: Field::<u64>(Variant(_60, 2), 5),fld6: _146 };
_11 = (_39.0, Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).1, _40.2);
_148.2 = _39.2;
_94 = _34;
_11 = _40;
_151 = _52;
_34 = _21.0;
_181 = _65.fld1;
_90 = [_85.fld0.0.0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,_127.0,Field::<(i128, [i64; 4], i128)>(Variant(_64, 0), 0).2,_17.0,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2,_127.0];
place!(Field::<Adt47>(Variant(_69, 0), 7)) = Adt47::Variant1 { fld0: _20,fld1: _9.fld2 };
_64 = Adt51::Variant1 { fld0: _49.0,fld1: Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2),fld2: Field::<[i16; 4]>(Variant(_72, 3), 5),fld3: _21,fld4: _98,fld5: _6,fld6: _15.fld2 };
_97.1 = [_1];
place!(Field::<(i128, [i64; 4], i128)>(Variant(_64, 1), 1)).2 = _47 as i128;
Goto(bb98)
}
bb98 = {
_39.0 = [_109.1,_22.1,_22.1,_22.1,_65.fld5,_22.1,_106.fld5,_18.1];
_109 = (_21.1.0, _127.1, _18.2);
_82 = Field::<f64>(Variant(_69, 0), 1);
_92 = !_124.0;
_35 = Adt48::Variant2 { fld0: _57,fld1: _89,fld2: _127.2,fld3: Field::<i8>(Variant(_78, 2), 3),fld4: _139.fld4,fld5: Field::<u8>(Variant(_78, 2), 5),fld6: _137,fld7: _142 };
_65.fld0 = (_57, Field::<*const bool>(Variant(_69, 0), 5));
_106.fld0 = _15.fld0;
place!(Field::<u32>(Variant(_60, 2), 0)) = _108 ^ _108;
_156 = _77 - _84;
_88 = _85.fld3;
_18.2 = [Field::<u32>(Variant(_60, 2), 0),Field::<u32>(Variant(_60, 2), 0),Field::<u32>(Variant(_60, 2), 0),Field::<u32>(Variant(_60, 2), 0),Field::<u32>(Variant(_60, 2), 0)];
Goto(bb99)
}
bb99 = {
_5 = _80 == _82;
_171 = [_87,Field::<u32>(Variant(_60, 2), 0),_87];
_185.0 = _39.2.0;
_85.fld1 = Field::<[u16; 5]>(Variant(_35, 2), 7);
place!(Field::<u64>(Variant(_60, 2), 5)) = Field::<(i32, [bool; 1])>(Variant(_38, 2), 4).0 as u64;
Goto(bb100)
}
bb100 = {
_27 = (_71.1,);
place!(Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0)) = (_106.fld0.0.0, _85.fld5, _18.2);
_183.0 = -_159.fld0.0.0;
_86 = (_71.1,);
_85.fld1 = [Field::<u16>(Variant(_38, 2), 3),(*_32),_27.0,_149.1,_91.1];
_139.fld4 = Field::<i16>(Variant(_35, 2), 4);
_109.2 = [_108,Field::<u32>(Variant(_60, 2), 0),_87,Field::<u32>(Variant(_60, 2), 0),_87];
_117 = [_65.fld0.0.0,_127.0,_183.0,_17.0,_65.fld0.0.0,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0,_65.fld0.0.0];
_76 = Field::<(i8,)>(Variant(_38, 2), 1).0 as f64;
place!(Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0)).0 = _57.0 | _15.fld0.0.0;
SetDiscriminant(_35, 1);
_143 = -_79;
_85.fld2 = _15.fld2;
_163 = (_71.0, _100);
SetDiscriminant(_147, 1);
_182 = _73 - _28;
Goto(bb101)
}
bb101 = {
_158 = _53;
_31 = core::ptr::addr_of!(_5);
_126.0 = Field::<u8>(Variant(_78, 2), 5) as i8;
_159.fld5 = _143 as i64;
_6 = _9.fld0.0;
_17 = (_65.fld0.0.0, _40.1, _46.1.0);
_189.1 = [_106.fld5,_19,_127.1,_85.fld5];
_71.0 = Field::<u128>(Variant(_78, 2), 6) | _91.0;
_6 = Field::<*mut u64>(Variant(_64, 1), 5);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2)).2 = Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0).0;
_148.0 = [_22.1,_159.fld5,_85.fld5,_127.1,_85.fld5,_18.1,_159.fld5,_65.fld5];
_189 = (Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2, _148.1, _17.0);
_154 = [_17.2,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2,Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0).0,_189.0,Field::<(i128, [i64; 4], i128)>(Variant(_72, 3), 2).2,_189.2,Field::<((i128,), *const bool)>(Variant(_69, 0), 4).0.0];
_152 = _99 & _116;
_28 = _143 as isize;
_150 = [_109.1,_109.1,_109.1,_19,_159.fld5];
_127.2 = [_108,Field::<u32>(Variant(_60, 2), 0),_108,_87,Field::<u32>(Variant(_60, 2), 0)];
_159.fld5 = !_109.1;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_64, 1), 1)) = (Field::<(char, (i128,), *const bool)>(Variant(_64, 1), 3).1.0, _189.1, _65.fld0.0.0);
_24 = [Field::<u32>(Variant(_60, 2), 0),Field::<u32>(Variant(_60, 2), 0),_108,Field::<u32>(Variant(_60, 2), 0)];
_110.0 = Field::<(i32, [bool; 1])>(Variant(_78, 2), 1).0 as i8;
_139.fld0.0 = _44.fld0.0;
_181 = [_27.0,(*_32),_91.1,Field::<(u128, u16)>(Variant(_83, 1), 0).1,Field::<u16>(Variant(_38, 2), 3)];
_22.2 = [Field::<u32>(Variant(_60, 2), 0),_87,_108,_108,Field::<u32>(Variant(_60, 2), 0)];
Goto(bb102)
}
bb102 = {
_26 = _54;
_128.1 = core::ptr::addr_of_mut!(_91.1);
_23 = Field::<(u128, u16)>(Variant(_83, 1), 0).1 as f64;
_14.0 = _2;
_17.1 = [Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0).1,_85.fld5,_106.fld5,_109.1];
_196 = (_39.0, _50, _44.fld0);
place!(Field::<(i128, i64, [u32; 5])>(Variant(_147, 1), 0)).1 = _106.fld5;
SetDiscriminant(_64, 0);
_151 = _52;
_9.fld1 = _34;
RET = Adt53::Variant1 { fld0: Field::<(u128, u16)>(Variant(_83, 1), 0),fld1: Field::<*const u128>(Variant(_72, 3), 1) };
_185.0 = Field::<u32>(Variant(_60, 2), 0) as u64;
_178 = _51 - _51;
Goto(bb103)
}
bb103 = {
Call(_199 = dump_var(1_usize, 96_usize, Move(_96), 24_usize, Move(_24), 54_usize, Move(_54), 99_usize, Move(_99)), ReturnTo(bb104), UnwindUnreachable())
}
bb104 = {
Call(_199 = dump_var(1_usize, 33_usize, Move(_33), 118_usize, Move(_118), 93_usize, Move(_93), 127_usize, Move(_127)), ReturnTo(bb105), UnwindUnreachable())
}
bb105 = {
Call(_199 = dump_var(1_usize, 112_usize, Move(_112), 92_usize, Move(_92), 8_usize, Move(_8), 22_usize, Move(_22)), ReturnTo(bb106), UnwindUnreachable())
}
bb106 = {
Call(_199 = dump_var(1_usize, 73_usize, Move(_73), 116_usize, Move(_116), 71_usize, Move(_71), 50_usize, Move(_50)), ReturnTo(bb107), UnwindUnreachable())
}
bb107 = {
Call(_199 = dump_var(1_usize, 84_usize, Move(_84), 47_usize, Move(_47), 45_usize, Move(_45), 49_usize, Move(_49)), ReturnTo(bb108), UnwindUnreachable())
}
bb108 = {
Call(_199 = dump_var(1_usize, 18_usize, Move(_18), 29_usize, Move(_29), 114_usize, Move(_114), 113_usize, Move(_113)), ReturnTo(bb109), UnwindUnreachable())
}
bb109 = {
Call(_199 = dump_var(1_usize, 28_usize, Move(_28), 154_usize, Move(_154), 1_usize, Move(_1), 122_usize, Move(_122)), ReturnTo(bb110), UnwindUnreachable())
}
bb110 = {
Call(_199 = dump_var(1_usize, 39_usize, Move(_39), 42_usize, Move(_42), 12_usize, Move(_12), 115_usize, Move(_115)), ReturnTo(bb111), UnwindUnreachable())
}
bb111 = {
Call(_199 = dump_var(1_usize, 140_usize, Move(_140), 40_usize, Move(_40), 181_usize, Move(_181), 30_usize, Move(_30)), ReturnTo(bb112), UnwindUnreachable())
}
bb112 = {
Call(_199 = dump_var(1_usize, 63_usize, Move(_63), 146_usize, Move(_146), 100_usize, Move(_100), 11_usize, Move(_11)), ReturnTo(bb113), UnwindUnreachable())
}
bb113 = {
Call(_199 = dump_var(1_usize, 43_usize, Move(_43), 89_usize, Move(_89), 90_usize, Move(_90), 74_usize, Move(_74)), ReturnTo(bb114), UnwindUnreachable())
}
bb114 = {
Call(_199 = dump_var(1_usize, 156_usize, Move(_156), 59_usize, Move(_59), 4_usize, Move(_4), 189_usize, Move(_189)), ReturnTo(bb115), UnwindUnreachable())
}
bb115 = {
Call(_199 = dump_var(1_usize, 91_usize, Move(_91), 13_usize, Move(_13), 67_usize, Move(_67), 5_usize, Move(_5)), ReturnTo(bb116), UnwindUnreachable())
}
bb116 = {
Call(_199 = dump_var(1_usize, 95_usize, Move(_95), 200_usize, _200, 200_usize, _200, 200_usize, _200), ReturnTo(bb117), UnwindUnreachable())
}
bb117 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u64,mut _2: *mut u64,mut _3: *mut u64,mut _4: u64,mut _5: char,mut _6: *mut u64,mut _7: u64,mut _8: u64) -> i128 {
mir! {
type RET = i128;
let _9: usize;
let _10: (u128, u16);
let _11: *mut u16;
let _12: [i64; 4];
let _13: isize;
let _14: [i16; 4];
let _15: i64;
let _16: u8;
let _17: (*mut u64, *mut u16);
let _18: isize;
let _19: [u32; 3];
let _20: Adt61;
let _21: char;
let _22: [u32; 4];
let _23: ([i64; 8], [i64; 4], (u64,));
let _24: isize;
let _25: i32;
let _26: [i128; 7];
let _27: Adt60;
let _28: [i64; 4];
let _29: Adt53;
let _30: i32;
let _31: f64;
let _32: Adt55;
let _33: u128;
let _34: Adt59;
let _35: [char; 8];
let _36: char;
let _37: bool;
let _38: [i16; 4];
let _39: i16;
let _40: (i128,);
let _41: Adt61;
let _42: i32;
let _43: ();
let _44: ();
{
_9 = !4_usize;
_6 = core::ptr::addr_of_mut!(_4);
(*_6) = !_8;
RET = _9 as i128;
_7 = !(*_3);
RET = 128162887566095564609376674196022347474_i128;
_6 = _2;
_8 = !(*_2);
_9 = 13080824071607251566_usize << _4;
_3 = core::ptr::addr_of_mut!(_8);
_2 = core::ptr::addr_of_mut!(_4);
(*_3) = 101_isize as u64;
_10.1 = !38470_u16;
(*_6) = _7;
_10 = (336370925769894804997093512694934056842_u128, 22854_u16);
_1 = 6269_i16 as u64;
_12 = [2370504606574980310_i64,(-3281532374450253532_i64),(-9116979908683722025_i64),6797945139323325686_i64];
_11 = core::ptr::addr_of_mut!(_10.1);
_3 = core::ptr::addr_of_mut!((*_3));
(*_6) = !(*_2);
_5 = '\u{84fe}';
match (*_11) {
0 => bb1,
1 => bb2,
2 => bb3,
22854 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_13 = (-9223372036854775808_isize);
_10.0 = 18111_i16 as u128;
(*_11) = 716615330_i32 as u16;
(*_11) = 31432_u16 + 39543_u16;
_10.1 = (-87_i8) as u16;
_11 = core::ptr::addr_of_mut!(_10.1);
_14 = [12672_i16,(-9856_i16),7056_i16,30825_i16];
(*_11) = 26585_u16;
_2 = _6;
_13 = 126_isize;
_13 = false as isize;
_6 = _2;
(*_2) = !(*_3);
(*_2) = (*_3);
_5 = '\u{402ff}';
(*_3) = _4 & _4;
_14 = [(-8935_i16),(-4644_i16),28287_i16,(-9244_i16)];
(*_6) = 246_u8 as u64;
_1 = !(*_3);
_4 = true as u64;
(*_11) = !58866_u16;
RET = 166603316142430460002698260340710718910_i128 << _4;
_8 = _7 >> RET;
_13 = 9223372036854775807_isize - 78_isize;
_8 = _4 | (*_6);
(*_2) = (*_11) as u64;
Call(_15 = fn3((*_11), _11, _1, _12, _10.1, _3, (*_11), _14, _2, (*_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_3 = _6;
_10 = (233816035731994836721034311324799260111_u128, 57298_u16);
_3 = _2;
_10.1 = 34671_u16;
_10 = (90569959515949060016427561210013382859_u128, 33178_u16);
_10 = (147741101673429938864665501025850720464_u128, 22019_u16);
_5 = '\u{423f2}';
(*_3) = !_8;
(*_6) = _8;
_8 = (*_6) - (*_3);
_11 = core::ptr::addr_of_mut!((*_11));
_13 = _5 as isize;
_1 = 1053991472_u32 as u64;
(*_6) = _8 >> RET;
match (*_11) {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb4,
22019 => bb8,
_ => bb7
}
}
bb7 = {
_13 = (-9223372036854775808_isize);
_10.0 = 18111_i16 as u128;
(*_11) = 716615330_i32 as u16;
(*_11) = 31432_u16 + 39543_u16;
_10.1 = (-87_i8) as u16;
_11 = core::ptr::addr_of_mut!(_10.1);
_14 = [12672_i16,(-9856_i16),7056_i16,30825_i16];
(*_11) = 26585_u16;
_2 = _6;
_13 = 126_isize;
_13 = false as isize;
_6 = _2;
(*_2) = !(*_3);
(*_2) = (*_3);
_5 = '\u{402ff}';
(*_3) = _4 & _4;
_14 = [(-8935_i16),(-4644_i16),28287_i16,(-9244_i16)];
(*_6) = 246_u8 as u64;
_1 = !(*_3);
_4 = true as u64;
(*_11) = !58866_u16;
RET = 166603316142430460002698260340710718910_i128 << _4;
_8 = _7 >> RET;
_13 = 9223372036854775807_isize - 78_isize;
_8 = _4 | (*_6);
(*_2) = (*_11) as u64;
Call(_15 = fn3((*_11), _11, _1, _12, _10.1, _3, (*_11), _14, _2, (*_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_7 = _9 as u64;
(*_2) = _4 & _4;
_3 = core::ptr::addr_of_mut!(_4);
_10.0 = 195886465326269344465170733965300189463_u128 - 159409473149566759651765414507524265192_u128;
_16 = !161_u8;
_9 = 1273023009531255062_usize;
(*_2) = _15 as u64;
(*_11) = !53034_u16;
_12 = [_15,_15,_15,_15];
_18 = 1212788091_i32 as isize;
(*_11) = (-22474_i16) as u16;
_6 = core::ptr::addr_of_mut!((*_2));
_11 = core::ptr::addr_of_mut!((*_11));
Goto(bb9)
}
bb9 = {
_15 = _10.0 as i64;
_17.1 = _11;
(*_6) = (*_3) | _8;
_17 = (_2, _11);
(*_2) = _7 - (*_3);
_14 = [19028_i16,(-9351_i16),(-6036_i16),(-8209_i16)];
(*_6) = (*_3);
_14 = [(-27052_i16),(-30684_i16),(-32566_i16),(-25037_i16)];
(*_6) = (*_3) - _4;
_17.0 = core::ptr::addr_of_mut!((*_3));
_23.1 = [_15,_15,_15,_15];
_24 = _18;
_16 = 175_u8;
_11 = _17.1;
_23.2.0 = _7;
_17.1 = core::ptr::addr_of_mut!((*_11));
_23.1 = [_15,_15,_15,_15];
(*_6) = _7;
Call(_13 = core::intrinsics::transmute((*_2)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
(*_3) = _15 as u64;
_14 = [(-32093_i16),19247_i16,30477_i16,(-5764_i16)];
_17.0 = _2;
RET = -(-78097475466179262930144400840619062495_i128);
_8 = !_23.2.0;
_9 = _16 as usize;
_24 = _18 + _13;
(*_6) = !(*_3);
_23.0 = [_15,_15,_15,_15,_15,_15,_15,_15];
_17.1 = core::ptr::addr_of_mut!((*_11));
_26 = [RET,RET,RET,RET,RET,RET,RET];
_27.fld2.0 = _13 as u64;
_26 = [RET,RET,RET,RET,RET,RET,RET];
_10 = (17939246738707744396163934181767770836_u128, 42761_u16);
_21 = _5;
_4 = _23.2.0 * (*_2);
_25 = (-1804648062_i32) << _18;
_27.fld2 = _23.2;
(*_6) = !(*_3);
_14 = [(-20754_i16),(-28792_i16),(-749_i16),(-5642_i16)];
_17 = (_2, _11);
_5 = _21;
Call((*_2) = core::intrinsics::bswap(_4), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_17 = (_6, _11);
(*_6) = _4;
_7 = (*_2);
_11 = core::ptr::addr_of_mut!(_27.fld1);
_17.0 = _6;
(*_11) = _10.1 / _10.1;
_25 = -(-524770947_i32);
Call(_14 = core::intrinsics::transmute((*_6)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4 = (*_2) * _23.2.0;
(*_2) = _4;
_21 = _5;
_18 = _13 | _13;
_35 = [_5,_5,_21,_21,_5,_21,_5,_21];
_24 = -_18;
_9 = 0_usize;
RET = _26[_9] | _26[_9];
_22 = [466205626_u32,3459486835_u32,1088650529_u32,2859570714_u32];
_28 = _23.1;
_27.fld2.0 = !(*_2);
_35[_9] = _21;
RET = _22[_9] as i128;
_23.2 = ((*_6),);
(*_3) = _16 as u64;
_10.0 = !221198270352707806473920649347444916024_u128;
_37 = (*_6) != (*_2);
_34.fld2 = _22;
_37 = _28[_9] < _28[_9];
match _22[_9] {
0 => bb8,
1 => bb10,
2 => bb13,
3 => bb14,
4 => bb15,
466205626 => bb17,
_ => bb16
}
}
bb13 = {
_13 = (-9223372036854775808_isize);
_10.0 = 18111_i16 as u128;
(*_11) = 716615330_i32 as u16;
(*_11) = 31432_u16 + 39543_u16;
_10.1 = (-87_i8) as u16;
_11 = core::ptr::addr_of_mut!(_10.1);
_14 = [12672_i16,(-9856_i16),7056_i16,30825_i16];
(*_11) = 26585_u16;
_2 = _6;
_13 = 126_isize;
_13 = false as isize;
_6 = _2;
(*_2) = !(*_3);
(*_2) = (*_3);
_5 = '\u{402ff}';
(*_3) = _4 & _4;
_14 = [(-8935_i16),(-4644_i16),28287_i16,(-9244_i16)];
(*_6) = 246_u8 as u64;
_1 = !(*_3);
_4 = true as u64;
(*_11) = !58866_u16;
RET = 166603316142430460002698260340710718910_i128 << _4;
_8 = _7 >> RET;
_13 = 9223372036854775807_isize - 78_isize;
_8 = _4 | (*_6);
(*_2) = (*_11) as u64;
Call(_15 = fn3((*_11), _11, _1, _12, _10.1, _3, (*_11), _14, _2, (*_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb14 = {
(*_3) = _15 as u64;
_14 = [(-32093_i16),19247_i16,30477_i16,(-5764_i16)];
_17.0 = _2;
RET = -(-78097475466179262930144400840619062495_i128);
_8 = !_23.2.0;
_9 = _16 as usize;
_24 = _18 + _13;
(*_6) = !(*_3);
_23.0 = [_15,_15,_15,_15,_15,_15,_15,_15];
_17.1 = core::ptr::addr_of_mut!((*_11));
_26 = [RET,RET,RET,RET,RET,RET,RET];
_27.fld2.0 = _13 as u64;
_26 = [RET,RET,RET,RET,RET,RET,RET];
_10 = (17939246738707744396163934181767770836_u128, 42761_u16);
_21 = _5;
_4 = _23.2.0 * (*_2);
_25 = (-1804648062_i32) << _18;
_27.fld2 = _23.2;
(*_6) = !(*_3);
_14 = [(-20754_i16),(-28792_i16),(-749_i16),(-5642_i16)];
_17 = (_2, _11);
_5 = _21;
Call((*_2) = core::intrinsics::bswap(_4), ReturnTo(bb11), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
_3 = _6;
_10 = (233816035731994836721034311324799260111_u128, 57298_u16);
_3 = _2;
_10.1 = 34671_u16;
_10 = (90569959515949060016427561210013382859_u128, 33178_u16);
_10 = (147741101673429938864665501025850720464_u128, 22019_u16);
_5 = '\u{423f2}';
(*_3) = !_8;
(*_6) = _8;
_8 = (*_6) - (*_3);
_11 = core::ptr::addr_of_mut!((*_11));
_13 = _5 as isize;
_1 = 1053991472_u32 as u64;
(*_6) = _8 >> RET;
match (*_11) {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb4,
22019 => bb8,
_ => bb7
}
}
bb17 = {
_34.fld1 = [_34.fld2[_9],_22[_9],_22[_9]];
_34.fld4 = _24 as i16;
_17.1 = core::ptr::addr_of_mut!(_27.fld1);
_30 = RET as i32;
(*_2) = !_8;
_5 = _21;
_14 = [_34.fld4,_34.fld4,_34.fld4,_34.fld4];
_12 = [_23.0[_9],_15,_15,_23.1[_9]];
_4 = _12[_9] as u64;
_30 = _35[_9] as i32;
(*_2) = _15 as u64;
_22 = [_34.fld2[_9],_34.fld1[_9],_34.fld1[_9],_34.fld2[_9]];
_40.0 = !_26[_9];
_36 = _35[_9];
_32 = Adt55::Variant3 { fld0: _15,fld1: (-31_i8) };
_34.fld1[_9] = !_22[_9];
_11 = core::ptr::addr_of_mut!((*_11));
_27.fld0 = _22[_9] as f32;
_19 = [_34.fld1[_9],_34.fld1[_9],_34.fld1[_9]];
_34.fld2 = [_34.fld1[_9],_19[_9],_34.fld1[_9],_22[_9]];
_3 = core::ptr::addr_of_mut!((*_6));
_24 = -_13;
Goto(bb18)
}
bb18 = {
Call(_43 = dump_var(2_usize, 15_usize, Move(_15), 40_usize, Move(_40), 22_usize, Move(_22), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_43 = dump_var(2_usize, 23_usize, Move(_23), 10_usize, Move(_10), 1_usize, Move(_1), 35_usize, Move(_35)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_43 = dump_var(2_usize, 13_usize, Move(_13), 8_usize, Move(_8), 14_usize, Move(_14), 21_usize, Move(_21)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_43 = dump_var(2_usize, 36_usize, Move(_36), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u16,mut _2: *mut u16,mut _3: u64,mut _4: [i64; 4],mut _5: u16,mut _6: *mut u64,mut _7: u16,mut _8: [i16; 4],mut _9: *mut u64,mut _10: u64) -> i64 {
mir! {
type RET = i64;
let _11: char;
let _12: (u128, u16);
let _13: [u32; 4];
let _14: [u16; 5];
let _15: [u16; 5];
let _16: f32;
let _17: f64;
let _18: isize;
let _19: Adt56;
let _20: (i128,);
let _21: f64;
let _22: i16;
let _23: bool;
let _24: isize;
let _25: i16;
let _26: f32;
let _27: (u128, u16);
let _28: (i128, [i64; 4], i128);
let _29: i64;
let _30: ();
let _31: ();
{
(*_6) = 123_i8 as u64;
_8 = [30108_i16,29479_i16,(-24983_i16),27891_i16];
_11 = '\u{6260b}';
RET = (-7243809200542769795_i64);
_6 = _9;
(*_9) = !_10;
_2 = core::ptr::addr_of_mut!((*_2));
(*_9) = _10;
(*_6) = !_3;
_7 = (*_2) | (*_2);
_9 = core::ptr::addr_of_mut!((*_6));
_2 = core::ptr::addr_of_mut!(_7);
_11 = '\u{128ef}';
_12.0 = !247531463717514309231041987790232114227_u128;
_12.1 = _7;
_10 = !_3;
_10 = !(*_9);
Goto(bb1)
}
bb1 = {
RET = -6005417786368331499_i64;
_12 = (301136793891244721461294051226082871588_u128, _1);
_9 = _6;
_11 = '\u{ff2fb}';
(*_6) = 9223372036854775807_isize as u64;
_14 = [(*_2),_7,(*_2),_7,_1];
_9 = core::ptr::addr_of_mut!(_3);
(*_2) = RET as u16;
_13 = [2462370005_u32,3870885938_u32,2440046616_u32,3116802078_u32];
_12.0 = !93704744529720346177416474744082084446_u128;
Call((*_6) = fn4(_12.0, _14, (*_9), _8, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12.1 = !(*_2);
_9 = _6;
(*_2) = !_12.1;
_15 = [_12.1,(*_2),_5,_5,_7];
(*_6) = _3;
_13 = [3582264618_u32,3894061437_u32,1754201518_u32,345945493_u32];
_12.0 = 27149391560107205110727128239744965536_u128 | 329414628090791665298269259784148767172_u128;
Goto(bb3)
}
bb3 = {
_11 = '\u{2f00a}';
_4 = [RET,RET,RET,RET];
_8 = [1355_i16,27727_i16,26140_i16,19555_i16];
_11 = '\u{c509e}';
_12 = (325142400789858920643878521100157801387_u128, _1);
_15 = [_12.1,_7,_12.1,_12.1,(*_2)];
(*_6) = !_3;
(*_9) = !_3;
RET = 3084648672_u32 as i64;
_8 = [10262_i16,11053_i16,(-11388_i16),(-20907_i16)];
_12.1 = !_7;
_18 = 9223372036854775807_isize - (-9223372036854775808_isize);
Call((*_6) = core::intrinsics::bswap(_3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
(*_6) = _3;
_16 = _18 as f32;
_5 = !_12.1;
_9 = core::ptr::addr_of_mut!(_10);
RET = 2055778441463934152_i64;
(*_6) = !(*_9);
_12.1 = _18 as u16;
_12 = (151151467736177492162784416239759810356_u128, (*_2));
match _12.0 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
151151467736177492162784416239759810356 => bb11,
_ => bb10
}
}
bb5 = {
_11 = '\u{2f00a}';
_4 = [RET,RET,RET,RET];
_8 = [1355_i16,27727_i16,26140_i16,19555_i16];
_11 = '\u{c509e}';
_12 = (325142400789858920643878521100157801387_u128, _1);
_15 = [_12.1,_7,_12.1,_12.1,(*_2)];
(*_6) = !_3;
(*_9) = !_3;
RET = 3084648672_u32 as i64;
_8 = [10262_i16,11053_i16,(-11388_i16),(-20907_i16)];
_12.1 = !_7;
_18 = 9223372036854775807_isize - (-9223372036854775808_isize);
Call((*_6) = core::intrinsics::bswap(_3), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_12.1 = !(*_2);
_9 = _6;
(*_2) = !_12.1;
_15 = [_12.1,(*_2),_5,_5,_7];
(*_6) = _3;
_13 = [3582264618_u32,3894061437_u32,1754201518_u32,345945493_u32];
_12.0 = 27149391560107205110727128239744965536_u128 | 329414628090791665298269259784148767172_u128;
Goto(bb3)
}
bb7 = {
RET = -6005417786368331499_i64;
_12 = (301136793891244721461294051226082871588_u128, _1);
_9 = _6;
_11 = '\u{ff2fb}';
(*_6) = 9223372036854775807_isize as u64;
_14 = [(*_2),_7,(*_2),_7,_1];
_9 = core::ptr::addr_of_mut!(_3);
(*_2) = RET as u16;
_13 = [2462370005_u32,3870885938_u32,2440046616_u32,3116802078_u32];
_12.0 = !93704744529720346177416474744082084446_u128;
Call((*_6) = fn4(_12.0, _14, (*_9), _8, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
RET = (-8499055546685664981_i64) & (-4244468601939888079_i64);
_14 = _15;
_17 = 5_i8 as f64;
_4 = [RET,RET,RET,RET];
_12 = (248115717149344172079172118645914596562_u128, _7);
_20 = (54594387053994001569576192512604267086_i128,);
_15 = [_1,(*_2),_12.1,_7,_7];
_10 = _3 + (*_6);
_12 = (67608356784292592929761387184935674317_u128, _7);
_20 = ((-166977794717462139808395734657799764012_i128),);
_13 = [3904766119_u32,4085908625_u32,3118433089_u32,3951352287_u32];
RET = 1601799551602986104_i64;
(*_9) = (*_6) << _20.0;
_8 = [(-23967_i16),23770_i16,3819_i16,25107_i16];
_10 = 57_i8 as u64;
_8 = [(-25525_i16),(-12117_i16),16298_i16,9653_i16];
RET = (-239756286521953073_i64);
_2 = core::ptr::addr_of_mut!(_1);
_23 = _3 != _3;
_3 = (*_6);
Goto(bb12)
}
bb12 = {
_14 = [_5,(*_2),_7,(*_2),(*_2)];
_24 = _18;
_18 = _23 as isize;
_20.0 = !99017627452148545261622076660350211348_i128;
_20 = ((-80611331410752879839324042581748095466_i128),);
_4 = [RET,RET,RET,RET];
_20 = ((-21173580966054044984865780223738726591_i128),);
(*_6) = (*_9) * _3;
_12.1 = _17 as u16;
_12 = (71423423268603259086567428975462581879_u128, (*_2));
_7 = _5 << _12.1;
_27.0 = !_12.0;
_2 = core::ptr::addr_of_mut!((*_2));
match _20.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
319108785954884418478508827208029484865 => bb19,
_ => bb18
}
}
bb13 = {
_11 = '\u{2f00a}';
_4 = [RET,RET,RET,RET];
_8 = [1355_i16,27727_i16,26140_i16,19555_i16];
_11 = '\u{c509e}';
_12 = (325142400789858920643878521100157801387_u128, _1);
_15 = [_12.1,_7,_12.1,_12.1,(*_2)];
(*_6) = !_3;
(*_9) = !_3;
RET = 3084648672_u32 as i64;
_8 = [10262_i16,11053_i16,(-11388_i16),(-20907_i16)];
_12.1 = !_7;
_18 = 9223372036854775807_isize - (-9223372036854775808_isize);
Call((*_6) = core::intrinsics::bswap(_3), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
RET = -6005417786368331499_i64;
_12 = (301136793891244721461294051226082871588_u128, _1);
_9 = _6;
_11 = '\u{ff2fb}';
(*_6) = 9223372036854775807_isize as u64;
_14 = [(*_2),_7,(*_2),_7,_1];
_9 = core::ptr::addr_of_mut!(_3);
(*_2) = RET as u16;
_13 = [2462370005_u32,3870885938_u32,2440046616_u32,3116802078_u32];
_12.0 = !93704744529720346177416474744082084446_u128;
Call((*_6) = fn4(_12.0, _14, (*_9), _8, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
RET = -6005417786368331499_i64;
_12 = (301136793891244721461294051226082871588_u128, _1);
_9 = _6;
_11 = '\u{ff2fb}';
(*_6) = 9223372036854775807_isize as u64;
_14 = [(*_2),_7,(*_2),_7,_1];
_9 = core::ptr::addr_of_mut!(_3);
(*_2) = RET as u16;
_13 = [2462370005_u32,3870885938_u32,2440046616_u32,3116802078_u32];
_12.0 = !93704744529720346177416474744082084446_u128;
Call((*_6) = fn4(_12.0, _14, (*_9), _8, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_12.1 = !(*_2);
_9 = _6;
(*_2) = !_12.1;
_15 = [_12.1,(*_2),_5,_5,_7];
(*_6) = _3;
_13 = [3582264618_u32,3894061437_u32,1754201518_u32,345945493_u32];
_12.0 = 27149391560107205110727128239744965536_u128 | 329414628090791665298269259784148767172_u128;
Goto(bb3)
}
bb19 = {
_12.0 = _27.0;
_26 = _16 - _16;
_14 = [_12.1,_5,_7,_1,_1];
_25 = (-94_i8) as i16;
_28.1 = [RET,RET,RET,RET];
RET = 1340413115945736206_i64;
_22 = _23 as i16;
Goto(bb20)
}
bb20 = {
Call(_30 = dump_var(3_usize, 10_usize, Move(_10), 7_usize, Move(_7), 13_usize, Move(_13), 14_usize, Move(_14)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_30 = dump_var(3_usize, 3_usize, Move(_3), 12_usize, Move(_12), 5_usize, Move(_5), 8_usize, Move(_8)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_30 = dump_var(3_usize, 1_usize, Move(_1), 31_usize, _31, 31_usize, _31, 31_usize, _31), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: u128,mut _2: [u16; 5],mut _3: u64,mut _4: [i16; 4],mut _5: *mut u64) -> u64 {
mir! {
type RET = u64;
let _6: (u128, u16);
let _7: u128;
let _8: char;
let _9: u8;
let _10: i32;
let _11: [u32; 4];
let _12: i32;
let _13: f64;
let _14: char;
let _15: f64;
let _16: Adt63;
let _17: u16;
let _18: isize;
let _19: bool;
let _20: [i64; 8];
let _21: Adt55;
let _22: isize;
let _23: Adt55;
let _24: usize;
let _25: (u16,);
let _26: i8;
let _27: [bool; 1];
let _28: i128;
let _29: Adt54;
let _30: isize;
let _31: u64;
let _32: ();
let _33: ();
{
_4 = [(-17114_i16),(-10249_i16),23386_i16,23667_i16];
_1 = 33218_u16 as u128;
_2 = [7289_u16,51641_u16,7622_u16,51343_u16,6943_u16];
_6 = (_1, 4937_u16);
RET = (*_5);
_3 = (-9223372036854775808_isize) as u64;
RET = (*_5);
Goto(bb1)
}
bb1 = {
(*_5) = !RET;
_6.1 = 10834_i16 as u16;
_6.0 = _1 + _1;
_3 = !(*_5);
_5 = core::ptr::addr_of_mut!((*_5));
_7 = !_6.0;
Goto(bb2)
}
bb2 = {
_9 = !205_u8;
_3 = (*_5);
_6.1 = 9223372036854775807_isize as u16;
_6 = (_1, 53726_u16);
_8 = '\u{1b16}';
_4 = [26555_i16,(-45_i16),2282_i16,11430_i16];
_4 = [(-21313_i16),(-3736_i16),(-6473_i16),(-26229_i16)];
_11 = [3736579622_u32,969273281_u32,932204756_u32,3729959124_u32];
RET = 27_isize as u64;
_10 = -(-1213509298_i32);
_9 = 194_u8;
RET = !(*_5);
_9 = 73_u8;
_7 = _1 ^ _6.0;
_12 = _10;
_2 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_12 = 60817290641015450112875579377443475029_i128 as i32;
_8 = '\u{478ce}';
_4 = [25902_i16,(-5990_i16),(-17337_i16),14009_i16];
_13 = 29883_i16 as f64;
Call(RET = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_14 = _8;
_4 = [16360_i16,20737_i16,(-25600_i16),(-14428_i16)];
_11 = [3071088284_u32,1984762375_u32,1580210612_u32,3317601964_u32];
_6 = (_7, 45355_u16);
_13 = (*_5) as f64;
_6 = (_7, 34490_u16);
_4 = [24963_i16,(-5301_i16),(-13732_i16),30453_i16];
_14 = _8;
(*_5) = _3;
RET = (*_5);
_12 = _10;
_6.0 = !_1;
_11 = [3120353193_u32,1230162588_u32,411470624_u32,801709305_u32];
_1 = _7;
_8 = _14;
_8 = _14;
_7 = 15985_i16 as u128;
_6 = (_7, 40338_u16);
_6 = (_1, 5415_u16);
_3 = (-39552292092718429367999819881082411427_i128) as u64;
_15 = (-9223372036854775808_isize) as f64;
_15 = (-17_i8) as f64;
(*_5) = !RET;
_7 = !_1;
_6.1 = !62168_u16;
Goto(bb4)
}
bb4 = {
_2 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_7 = !_1;
_15 = _13;
_17 = _6.1 >> (*_5);
_15 = -_13;
_15 = _10 as f64;
_3 = (*_5) >> _12;
match _9 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
73 => bb10,
_ => bb9
}
}
bb5 = {
_14 = _8;
_4 = [16360_i16,20737_i16,(-25600_i16),(-14428_i16)];
_11 = [3071088284_u32,1984762375_u32,1580210612_u32,3317601964_u32];
_6 = (_7, 45355_u16);
_13 = (*_5) as f64;
_6 = (_7, 34490_u16);
_4 = [24963_i16,(-5301_i16),(-13732_i16),30453_i16];
_14 = _8;
(*_5) = _3;
RET = (*_5);
_12 = _10;
_6.0 = !_1;
_11 = [3120353193_u32,1230162588_u32,411470624_u32,801709305_u32];
_1 = _7;
_8 = _14;
_8 = _14;
_7 = 15985_i16 as u128;
_6 = (_7, 40338_u16);
_6 = (_1, 5415_u16);
_3 = (-39552292092718429367999819881082411427_i128) as u64;
_15 = (-9223372036854775808_isize) as f64;
_15 = (-17_i8) as f64;
(*_5) = !RET;
_7 = !_1;
_6.1 = !62168_u16;
Goto(bb4)
}
bb6 = {
_9 = !205_u8;
_3 = (*_5);
_6.1 = 9223372036854775807_isize as u16;
_6 = (_1, 53726_u16);
_8 = '\u{1b16}';
_4 = [26555_i16,(-45_i16),2282_i16,11430_i16];
_4 = [(-21313_i16),(-3736_i16),(-6473_i16),(-26229_i16)];
_11 = [3736579622_u32,969273281_u32,932204756_u32,3729959124_u32];
RET = 27_isize as u64;
_10 = -(-1213509298_i32);
_9 = 194_u8;
RET = !(*_5);
_9 = 73_u8;
_7 = _1 ^ _6.0;
_12 = _10;
_2 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_12 = 60817290641015450112875579377443475029_i128 as i32;
_8 = '\u{478ce}';
_4 = [25902_i16,(-5990_i16),(-17337_i16),14009_i16];
_13 = 29883_i16 as f64;
Call(RET = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
(*_5) = !RET;
_6.1 = 10834_i16 as u16;
_6.0 = _1 + _1;
_3 = !(*_5);
_5 = core::ptr::addr_of_mut!((*_5));
_7 = !_6.0;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6.1 = _17;
(*_5) = _3;
_3 = (*_5) ^ (*_5);
(*_5) = _3 + _3;
_18 = (-9223372036854775808_isize);
_19 = false;
_17 = _6.1;
_2 = [_6.1,_17,_17,_17,_17];
_19 = true;
_9 = 112_u8 ^ 234_u8;
_8 = _14;
_15 = _13 * _13;
_10 = _12;
_2 = [_17,_17,_6.1,_6.1,_17];
_13 = -_15;
_9 = 148_u8;
_6.0 = _8 as u128;
_19 = false;
match _18 {
0 => bb5,
1 => bb8,
2 => bb9,
3 => bb4,
340282366920938463454151235394913435648 => bb12,
_ => bb11
}
}
bb11 = {
_9 = !205_u8;
_3 = (*_5);
_6.1 = 9223372036854775807_isize as u16;
_6 = (_1, 53726_u16);
_8 = '\u{1b16}';
_4 = [26555_i16,(-45_i16),2282_i16,11430_i16];
_4 = [(-21313_i16),(-3736_i16),(-6473_i16),(-26229_i16)];
_11 = [3736579622_u32,969273281_u32,932204756_u32,3729959124_u32];
RET = 27_isize as u64;
_10 = -(-1213509298_i32);
_9 = 194_u8;
RET = !(*_5);
_9 = 73_u8;
_7 = _1 ^ _6.0;
_12 = _10;
_2 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_12 = 60817290641015450112875579377443475029_i128 as i32;
_8 = '\u{478ce}';
_4 = [25902_i16,(-5990_i16),(-17337_i16),14009_i16];
_13 = 29883_i16 as f64;
Call(RET = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
RET = 0_usize as u64;
Call(_21 = fn5(_14, _5, (*_5), _10, _5, (*_5)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_7 = _6.0 * _1;
_22 = _18 << (*_5);
_23 = _21;
_8 = _14;
place!(Field::<i64>(Variant(_21, 3), 0)) = Field::<i64>(Variant(_23, 3), 0) ^ Field::<i64>(Variant(_23, 3), 0);
_25.0 = !_6.1;
_23 = Adt55::Variant3 { fld0: Field::<i64>(Variant(_21, 3), 0),fld1: Field::<i8>(Variant(_21, 3), 1) };
_11 = [724704552_u32,2417848395_u32,1277907308_u32,3169945733_u32];
_19 = !false;
SetDiscriminant(_23, 0);
_25 = (_6.1,);
place!(Field::<Adt54>(Variant(_23, 0), 0)).fld3 = (Field::<i8>(Variant(_21, 3), 1),);
SetDiscriminant(_21, 1);
_25.0 = 2355399359_u32 as u16;
_27 = [_19];
_9 = _8 as u8;
place!(Field::<Adt54>(Variant(_23, 0), 0)).fld3.0 = (-14_i8);
place!(Field::<*mut u64>(Variant(_21, 1), 1)) = core::ptr::addr_of_mut!(_3);
place!(Field::<Adt54>(Variant(_23, 0), 0)).fld7 = _9 as i128;
_13 = _15;
_25.0 = !_17;
place!(Field::<Adt54>(Variant(_23, 0), 0)).fld2 = core::ptr::addr_of_mut!(RET);
match _18 {
340282366920938463454151235394913435648 => bb14,
_ => bb9
}
}
bb14 = {
(*_5) = _3 * _3;
_25.0 = _17 >> _22;
_29.fld4 = [156973188_u32,3724448959_u32,2525727835_u32,1938880273_u32];
_29.fld3 = Field::<Adt54>(Variant(_23, 0), 0).fld3;
_29.fld0.0 = _12 | _12;
_29.fld3 = (Field::<Adt54>(Variant(_23, 0), 0).fld3.0,);
_28 = Field::<Adt54>(Variant(_23, 0), 0).fld7 ^ Field::<Adt54>(Variant(_23, 0), 0).fld7;
place!(Field::<[u32; 5]>(Variant(_21, 1), 3)) = [2269352226_u32,2003111116_u32,882781381_u32,615682241_u32,2740602193_u32];
place!(Field::<bool>(Variant(_21, 1), 0)) = _19;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(4_usize, 12_usize, Move(_12), 25_usize, Move(_25), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(4_usize, 10_usize, Move(_10), 9_usize, Move(_9), 19_usize, Move(_19), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(4_usize, 11_usize, Move(_11), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: char,mut _2: *mut u64,mut _3: u64,mut _4: i32,mut _5: *mut u64,mut _6: u64) -> Adt55 {
mir! {
type RET = Adt55;
let _7: Adt53;
let _8: [i16; 4];
let _9: (*mut u64, *mut u16);
let _10: (u128, u16);
let _11: bool;
let _12: u8;
let _13: [u32; 4];
let _14: *mut u64;
let _15: u128;
let _16: u8;
let _17: ();
let _18: ();
{
(*_2) = !_6;
_6 = !(*_2);
_5 = _2;
_5 = _2;
_8 = [16562_i16,(-16404_i16),6001_i16,19028_i16];
_2 = core::ptr::addr_of_mut!(_3);
_8 = [22352_i16,(-23356_i16),(-8115_i16),19157_i16];
(*_5) = (*_2) * (*_2);
Call(_5 = fn6(_6, (*_5), (*_5), (*_5), (*_5), (*_5), _2, (*_2), _2, _2, _2, (*_5), _2, (*_5)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = -(-1527019870_i32);
(*_2) = !_6;
Call(RET = fn7((*_2), _2, (*_2), _3, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = '\u{f4282}';
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<i8>(Variant(RET, 3), 1)) = (-3_i8);
_8 = [(-19208_i16),26654_i16,(-18512_i16),(-29011_i16)];
_4 = -(-1763144968_i32);
_4 = !(-1653715796_i32);
_5 = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!(_3);
_2 = core::ptr::addr_of_mut!((*_5));
(*_5) = _6;
_9.0 = core::ptr::addr_of_mut!(_3);
(*_2) = _6 ^ _6;
_1 = '\u{105250}';
_1 = '\u{9543b}';
SetDiscriminant(RET, 2);
_5 = core::ptr::addr_of_mut!(_6);
_3 = _6 >> _6;
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).0 = _1;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld4 = [3185114689_u32,3367472337_u32,964909031_u32,1393778083_u32];
_5 = core::ptr::addr_of_mut!((*_2));
(*_5) = _6 | _6;
(*_2) = !_6;
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).0 = _2;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld3 = (2_i8,);
Goto(bb3)
}
bb3 = {
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).1.0 = -(-19226081747693187435313949884302969727_i128);
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).1 = core::ptr::addr_of_mut!(_10.1);
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).1 = core::ptr::addr_of_mut!(_10.1);
_8 = [29357_i16,31357_i16,(-26969_i16),30218_i16];
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld7 = Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).1.0 - Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).1.0;
(*_5) = Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).0 as u64;
_11 = false;
_1 = Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).0;
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).1 = (Field::<Adt54>(Variant(RET, 2), 1).fld7,);
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).1.0 = Field::<Adt54>(Variant(RET, 2), 1).fld7 & Field::<Adt54>(Variant(RET, 2), 1).fld7;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld2 = core::ptr::addr_of_mut!((*_2));
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).0 = core::ptr::addr_of_mut!(_6);
(*_2) = (-9223372036854775808_isize) as u64;
_3 = !_6;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld2 = core::ptr::addr_of_mut!((*_2));
match Field::<Adt54>(Variant(RET, 2), 1).fld3.0 {
0 => bb4,
2 => bb6,
_ => bb5
}
}
bb4 = {
_1 = '\u{f4282}';
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<i8>(Variant(RET, 3), 1)) = (-3_i8);
_8 = [(-19208_i16),26654_i16,(-18512_i16),(-29011_i16)];
_4 = -(-1763144968_i32);
_4 = !(-1653715796_i32);
_5 = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!(_3);
_2 = core::ptr::addr_of_mut!((*_5));
(*_5) = _6;
_9.0 = core::ptr::addr_of_mut!(_3);
(*_2) = _6 ^ _6;
_1 = '\u{105250}';
_1 = '\u{9543b}';
SetDiscriminant(RET, 2);
_5 = core::ptr::addr_of_mut!(_6);
_3 = _6 >> _6;
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).0 = _1;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld4 = [3185114689_u32,3367472337_u32,964909031_u32,1393778083_u32];
_5 = core::ptr::addr_of_mut!((*_2));
(*_5) = _6 | _6;
(*_2) = !_6;
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).0 = _2;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld3 = (2_i8,);
Goto(bb3)
}
bb5 = {
_4 = -(-1527019870_i32);
(*_2) = !_6;
Call(RET = fn7((*_2), _2, (*_2), _3, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).2 = core::ptr::addr_of!(_11);
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).2 = core::ptr::addr_of!(_11);
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld0.1 = [_11];
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld6 = core::ptr::addr_of!(_10.0);
_4 = 297677197_i32 ^ 1327462730_i32;
_9.1 = core::ptr::addr_of_mut!(_10.1);
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).0 = _1;
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)) = _9;
_10.0 = 41579824372552237116178523045200566665_u128;
_5 = core::ptr::addr_of_mut!(_3);
_7 = Adt53::Variant0 { fld0: _9,fld1: Field::<Adt54>(Variant(RET, 2), 1).fld0.1 };
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld6 = core::ptr::addr_of!(_10.0);
Call(RET = fn16(_9.0, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0, _7, (*_2), _7, _7, _9, _2, _9.0, _6, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0, (*_5), _7, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_13 = [2733806689_u32,3434505721_u32,2481757934_u32,1484426060_u32];
place!(Field::<i64>(Variant(RET, 3), 0)) = -(-8664134868669665333_i64);
_10.0 = 238776757684950125339390687978391289261_u128 ^ 73285375010647648315082281142614562024_u128;
_10.1 = 42495_u16;
_12 = 8_u8;
place!(Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0)).0 = core::ptr::addr_of_mut!((*_5));
_3 = _6 - _6;
_8 = [(-22818_i16),27932_i16,(-9259_i16),19827_i16];
place!(Field::<[bool; 1]>(Variant(_7, 0), 1)) = [_11];
_6 = (*_5);
place!(Field::<[bool; 1]>(Variant(_7, 0), 1)) = [_11];
(*_5) = _6;
place!(Field::<i8>(Variant(RET, 3), 1)) = 32_i8 * (-81_i8);
(*_2) = !_6;
Goto(bb8)
}
bb8 = {
_1 = '\u{e0ff7}';
place!(Field::<i8>(Variant(RET, 3), 1)) = (-3591522409505912285917338700928666824_i128) as i8;
place!(Field::<i64>(Variant(RET, 3), 0)) = -3014479692267268116_i64;
(*_2) = _6;
_15 = !_10.0;
(*_5) = _11 as u64;
match _10.1 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
42495 => bb14,
_ => bb13
}
}
bb9 = {
_13 = [2733806689_u32,3434505721_u32,2481757934_u32,1484426060_u32];
place!(Field::<i64>(Variant(RET, 3), 0)) = -(-8664134868669665333_i64);
_10.0 = 238776757684950125339390687978391289261_u128 ^ 73285375010647648315082281142614562024_u128;
_10.1 = 42495_u16;
_12 = 8_u8;
place!(Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0)).0 = core::ptr::addr_of_mut!((*_5));
_3 = _6 - _6;
_8 = [(-22818_i16),27932_i16,(-9259_i16),19827_i16];
place!(Field::<[bool; 1]>(Variant(_7, 0), 1)) = [_11];
_6 = (*_5);
place!(Field::<[bool; 1]>(Variant(_7, 0), 1)) = [_11];
(*_5) = _6;
place!(Field::<i8>(Variant(RET, 3), 1)) = 32_i8 * (-81_i8);
(*_2) = !_6;
Goto(bb8)
}
bb10 = {
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).2 = core::ptr::addr_of!(_11);
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).2 = core::ptr::addr_of!(_11);
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld0.1 = [_11];
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld6 = core::ptr::addr_of!(_10.0);
_4 = 297677197_i32 ^ 1327462730_i32;
_9.1 = core::ptr::addr_of_mut!(_10.1);
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).0 = _1;
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)) = _9;
_10.0 = 41579824372552237116178523045200566665_u128;
_5 = core::ptr::addr_of_mut!(_3);
_7 = Adt53::Variant0 { fld0: _9,fld1: Field::<Adt54>(Variant(RET, 2), 1).fld0.1 };
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld6 = core::ptr::addr_of!(_10.0);
Call(RET = fn16(_9.0, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0, _7, (*_2), _7, _7, _9, _2, _9.0, _6, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0, (*_5), _7, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0, Field::<(*mut u64, *mut u16)>(Variant(_7, 0), 0).0), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_1 = '\u{f4282}';
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<i8>(Variant(RET, 3), 1)) = (-3_i8);
_8 = [(-19208_i16),26654_i16,(-18512_i16),(-29011_i16)];
_4 = -(-1763144968_i32);
_4 = !(-1653715796_i32);
_5 = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!(_3);
_2 = core::ptr::addr_of_mut!((*_5));
(*_5) = _6;
_9.0 = core::ptr::addr_of_mut!(_3);
(*_2) = _6 ^ _6;
_1 = '\u{105250}';
_1 = '\u{9543b}';
SetDiscriminant(RET, 2);
_5 = core::ptr::addr_of_mut!(_6);
_3 = _6 >> _6;
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).0 = _1;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld4 = [3185114689_u32,3367472337_u32,964909031_u32,1393778083_u32];
_5 = core::ptr::addr_of_mut!((*_2));
(*_5) = _6 | _6;
(*_2) = !_6;
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).0 = _2;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld3 = (2_i8,);
Goto(bb3)
}
bb12 = {
_4 = -(-1527019870_i32);
(*_2) = !_6;
Call(RET = fn7((*_2), _2, (*_2), _3, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).1.0 = -(-19226081747693187435313949884302969727_i128);
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).1 = core::ptr::addr_of_mut!(_10.1);
_5 = core::ptr::addr_of_mut!((*_5));
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).1 = core::ptr::addr_of_mut!(_10.1);
_8 = [29357_i16,31357_i16,(-26969_i16),30218_i16];
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld7 = Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).1.0 - Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).1.0;
(*_5) = Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).0 as u64;
_11 = false;
_1 = Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2).0;
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).1 = (Field::<Adt54>(Variant(RET, 2), 1).fld7,);
place!(Field::<(char, (i128,), *const bool)>(Variant(RET, 2), 2)).1.0 = Field::<Adt54>(Variant(RET, 2), 1).fld7 & Field::<Adt54>(Variant(RET, 2), 1).fld7;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld2 = core::ptr::addr_of_mut!((*_2));
place!(Field::<(*mut u64, *mut u16)>(Variant(RET, 2), 0)).0 = core::ptr::addr_of_mut!(_6);
(*_2) = (-9223372036854775808_isize) as u64;
_3 = !_6;
place!(Field::<Adt54>(Variant(RET, 2), 1)).fld2 = core::ptr::addr_of_mut!((*_2));
match Field::<Adt54>(Variant(RET, 2), 1).fld3.0 {
0 => bb4,
2 => bb6,
_ => bb5
}
}
bb14 = {
place!(Field::<i64>(Variant(RET, 3), 0)) = 30_isize as i64;
_10 = (_15, 13227_u16);
place!(Field::<i8>(Variant(RET, 3), 1)) = _11 as i8;
_4 = (-1450495568_i32) - (-185260749_i32);
(*_5) = _6;
_3 = !_6;
Goto(bb15)
}
bb15 = {
Call(_17 = dump_var(5_usize, 15_usize, Move(_15), 6_usize, Move(_6), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_17 = dump_var(5_usize, 13_usize, Move(_13), 18_usize, _18, 18_usize, _18, 18_usize, _18), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: u64,mut _5: u64,mut _6: u64,mut _7: *mut u64,mut _8: u64,mut _9: *mut u64,mut _10: *mut u64,mut _11: *mut u64,mut _12: u64,mut _13: *mut u64,mut _14: u64) -> *mut u64 {
mir! {
type RET = *mut u64;
let _15: f64;
let _16: [i16; 4];
let _17: char;
let _18: f32;
let _19: ();
let _20: ();
{
_8 = _14 * _14;
RET = core::ptr::addr_of_mut!((*_11));
_11 = _7;
(*_13) = _4 ^ _12;
(*_7) = (-3991_i16) as u64;
(*RET) = _3;
(*_7) = !_2;
_10 = core::ptr::addr_of_mut!((*_11));
_13 = _11;
(*_10) = _6 ^ _8;
(*_7) = !_4;
_14 = !_6;
_16 = [(-11652_i16),(-29109_i16),3774_i16,174_i16];
(*_11) = !_8;
(*_13) = 235979606100034245302481564239354716758_u128 as u64;
_2 = _8 * _8;
_3 = 202_u8 as u64;
Goto(bb1)
}
bb1 = {
Call(_19 = dump_var(6_usize, 5_usize, Move(_5), 3_usize, Move(_3), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_19 = dump_var(6_usize, 12_usize, Move(_12), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: u64,mut _2: *mut u64,mut _3: u64,mut _4: u64,mut _5: *mut u64) -> Adt55 {
mir! {
type RET = Adt55;
let _6: [i64; 8];
let _7: f64;
let _8: f64;
let _9: u32;
let _10: i8;
let _11: u64;
let _12: *mut u16;
let _13: isize;
let _14: isize;
let _15: [i128; 7];
let _16: [bool; 1];
let _17: f64;
let _18: i32;
let _19: u128;
let _20: bool;
let _21: (u128, u16);
let _22: isize;
let _23: Adt55;
let _24: bool;
let _25: Adt58;
let _26: (i8,);
let _27: [u32; 5];
let _28: i16;
let _29: *const bool;
let _30: [i64; 8];
let _31: [i64; 8];
let _32: i8;
let _33: *const [i64; 5];
let _34: Adt48;
let _35: bool;
let _36: usize;
let _37: i64;
let _38: (u128, u16);
let _39: (u128, u16);
let _40: (i128, i64, [u32; 5]);
let _41: ();
let _42: ();
{
_2 = core::ptr::addr_of_mut!(_3);
(*_5) = 2042104680_i32 as u64;
_1 = _3 * _3;
(*_2) = _1 * _1;
_2 = _5;
(*_2) = _1 - _3;
(*_2) = _3;
_8 = (-8453971197303238841_i64) as f64;
(*_5) = 3037079627547426983_i64 as u64;
(*_5) = _4;
Goto(bb1)
}
bb1 = {
(*_2) = _3 * _1;
_7 = _8 + _8;
_3 = 17298818764079445922_usize as u64;
(*_2) = _4;
_8 = _7 - _7;
(*_2) = _1;
_1 = (*_5) + (*_5);
_6 = [3785018401606778259_i64,(-853675033257218186_i64),(-5867931210888125511_i64),8226902843410741709_i64,7816380235437635285_i64,3539873426081722980_i64,3557321070007180593_i64,(-8598603983571498602_i64)];
(*_5) = !_1;
_2 = core::ptr::addr_of_mut!(_1);
_3 = !_1;
_4 = 34155255832135306851128342792060941851_i128 as u64;
_8 = 319549572249184132900061960312425423591_u128 as f64;
_3 = _1 | (*_2);
(*_2) = !(*_5);
_8 = _7;
Goto(bb2)
}
bb2 = {
_4 = true as u64;
_10 = !51_i8;
_9 = 1166563785_u32 << _1;
_10 = !(-111_i8);
_7 = _8;
_9 = _8 as u32;
_11 = _3;
RET = Adt55::Variant3 { fld0: (-1672218330338537186_i64),fld1: _10 };
_4 = _3 * _11;
_1 = !(*_5);
_3 = (*_5) >> _4;
_13 = 9223372036854775807_isize << _1;
_6 = [Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0)];
(*_2) = 96983156042048107844575440823118722593_i128 as u64;
(*_5) = _11 << _4;
_14 = !_13;
place!(Field::<i64>(Variant(RET, 3), 0)) = -(-4340112122203451611_i64);
_1 = _3;
_9 = !3214234551_u32;
_11 = (*_5);
Call(_15 = fn8((*_2), _11, _4, _14, _1, _4, _11, (*_2), (*_5), _14, _2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
SetDiscriminant(RET, 1);
_9 = 3074275752_u32;
Goto(bb4)
}
bb4 = {
place!(Field::<*const u128>(Variant(RET, 1), 2)) = core::ptr::addr_of!(_19);
_19 = 261012610474469160418849418996663786335_u128 | 247865524985895607013374149454069767366_u128;
_16 = [false];
place!(Field::<bool>(Variant(RET, 1), 0)) = !false;
place!(Field::<[u32; 5]>(Variant(RET, 1), 3)) = [_9,_9,_9,_9,_9];
place!(Field::<*mut u64>(Variant(RET, 1), 1)) = core::ptr::addr_of_mut!(_1);
_21.0 = 73689958588611484931960104571724658168_i128 as u128;
place!(Field::<*const u128>(Variant(RET, 1), 2)) = core::ptr::addr_of!(_21.0);
_4 = 2067250762_i32 as u64;
_7 = -_8;
_18 = (-35428335_i32);
_22 = _19 as isize;
_8 = _7 + _7;
_12 = core::ptr::addr_of_mut!(_21.1);
place!(Field::<*const u128>(Variant(RET, 1), 2)) = core::ptr::addr_of!(_21.0);
_10 = (-8_i8);
_17 = -_8;
Goto(bb5)
}
bb5 = {
_20 = !Field::<bool>(Variant(RET, 1), 0);
_6 = [(-3652930718944474824_i64),(-122200251433930_i64),6260154408914110130_i64,(-372658679060875877_i64),676682851084706228_i64,(-4150995474253461893_i64),4687256489672978976_i64,4816577815997698483_i64];
_1 = _3;
(*_12) = !40845_u16;
_20 = _7 >= _17;
_20 = Field::<bool>(Variant(RET, 1), 0);
_9 = !349470421_u32;
_15 = [(-97548830841407043865997485110340635152_i128),29481214144114129396214515355763288860_i128,56932533676427885565963276767882982397_i128,(-119038889594468274526781817238003621099_i128),(-97185177862272490071295565115951291624_i128),(-16485336875261394296498926167671319728_i128),33492403060601162683472298340344643394_i128];
match _18 {
0 => bb3,
1 => bb2,
340282366920938463463374607431732783121 => bb7,
_ => bb6
}
}
bb6 = {
SetDiscriminant(RET, 1);
_9 = 3074275752_u32;
Goto(bb4)
}
bb7 = {
_14 = !_13;
_9 = !2787569932_u32;
_1 = _10 as u64;
Goto(bb8)
}
bb8 = {
(*_12) = 13006_u16;
(*_2) = _3 * _11;
place!(Field::<*mut u64>(Variant(RET, 1), 1)) = core::ptr::addr_of_mut!((*_5));
_5 = core::ptr::addr_of_mut!(_11);
place!(Field::<bool>(Variant(RET, 1), 0)) = _20;
place!(Field::<*const u128>(Variant(RET, 1), 2)) = core::ptr::addr_of!(_21.0);
place!(Field::<bool>(Variant(RET, 1), 0)) = _20 ^ _20;
_26 = (_10,);
(*_12) = _19 as u16;
(*_12) = 194_u8 as u16;
_9 = 140101779_u32 - 970401523_u32;
_19 = _21.0 >> _13;
_24 = !Field::<bool>(Variant(RET, 1), 0);
_6 = [8316026588964586031_i64,3523865177099906683_i64,3062978268412476884_i64,(-7196104932456168191_i64),5635545296951411952_i64,(-6839033791627609653_i64),5189628097851054100_i64,6544672922045966524_i64];
_17 = _7 * _8;
place!(Field::<[u32; 5]>(Variant(RET, 1), 3)) = [_9,_9,_9,_9,_9];
RET = Adt55::Variant3 { fld0: (-5143821567113094384_i64),fld1: _26.0 };
_10 = Field::<i8>(Variant(RET, 3), 1) | _26.0;
_28 = (-17737_i16);
_19 = '\u{9ae2c}' as u128;
(*_2) = !(*_5);
_10 = Field::<i8>(Variant(RET, 3), 1) >> (*_2);
_8 = -_17;
_9 = '\u{e0a9a}' as u32;
place!(Field::<i64>(Variant(RET, 3), 0)) = 8338349481445910133_i64 * 8286944659926104356_i64;
SetDiscriminant(RET, 0);
match _26.0 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb9,
340282366920938463463374607431768211448 => bb11,
_ => bb10
}
}
bb9 = {
SetDiscriminant(RET, 1);
_9 = 3074275752_u32;
Goto(bb4)
}
bb10 = {
_4 = true as u64;
_10 = !51_i8;
_9 = 1166563785_u32 << _1;
_10 = !(-111_i8);
_7 = _8;
_9 = _8 as u32;
_11 = _3;
RET = Adt55::Variant3 { fld0: (-1672218330338537186_i64),fld1: _10 };
_4 = _3 * _11;
_1 = !(*_5);
_3 = (*_5) >> _4;
_13 = 9223372036854775807_isize << _1;
_6 = [Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0),Field::<i64>(Variant(RET, 3), 0)];
(*_2) = 96983156042048107844575440823118722593_i128 as u64;
(*_5) = _11 << _4;
_14 = !_13;
place!(Field::<i64>(Variant(RET, 3), 0)) = -(-4340112122203451611_i64);
_1 = _3;
_9 = !3214234551_u32;
_11 = (*_5);
Call(_15 = fn8((*_2), _11, _4, _14, _1, _4, _11, (*_2), (*_5), _14, _2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_12 = core::ptr::addr_of_mut!((*_12));
(*_12) = !19342_u16;
_16 = [_20];
_26 = (_10,);
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld3 = (_10,);
Goto(bb12)
}
bb12 = {
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld0.1 = [_24];
Call(_28 = fn9(_26.0, _3, _5, _5, _2, _3, _11, Field::<Adt54>(Variant(RET, 0), 0).fld3, (*_2), _3, _26.0, _2, _2, _5, _11), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
place!(Field::<[char; 8]>(Variant(RET, 0), 1)) = ['\u{250b}','\u{9acb6}','\u{d7a26}','\u{396dc}','\u{58787}','\u{c4203}','\u{77e1a}','\u{9fb51}'];
_31 = _6;
_27 = [_9,_9,_9,_9,_9];
(*_2) = !_3;
_17 = _8;
_4 = !_1;
Call(_34 = fn12(_14, _26.0, _1, _3, _4, _1, _2, _26.0, _26, _2, _13, _2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
(*_12) = !29576_u16;
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld1 = '\u{f44c1}';
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld1 = '\u{62138}';
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld6 = core::ptr::addr_of!(_19);
_7 = -_17;
_32 = -_26.0;
Goto(bb15)
}
bb15 = {
_32 = !Field::<Adt54>(Variant(RET, 0), 0).fld3.0;
_26 = Field::<Adt54>(Variant(RET, 0), 0).fld3;
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld6 = core::ptr::addr_of!(_19);
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld0.1 = _16;
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld4 = [_9,_9,_9,_9];
_16 = [_24];
_29 = core::ptr::addr_of!(_20);
_2 = core::ptr::addr_of_mut!(_11);
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld0.0 = _18 >> _4;
_4 = _13 as u64;
_30 = [4725638233522673642_i64,(-442889678719581427_i64),(-1128421071532299204_i64),3950995742682171066_i64,9004096426344879881_i64,4562214079264628750_i64,395599001606974737_i64,9158796297457227154_i64];
(*_5) = !Field::<(u64,)>(Variant(_34, 1), 0).0;
_35 = _24;
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld1 = '\u{c7dd6}';
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld0.0 = 5_usize as i32;
_20 = _35;
_13 = _14 & _22;
_20 = _35;
_36 = 2038885112457021819_usize;
SetDiscriminant(_34, 1);
_31 = [1864181562943143090_i64,(-7100443019064527260_i64),(-1623739873663694110_i64),(-5643469137902617751_i64),6867329490053818990_i64,(-3703309889357828986_i64),(-7571954196230776968_i64),(-1426179349973933164_i64)];
Goto(bb16)
}
bb16 = {
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld7 = (-8185136150243982994469154578988238631_i128) & (-79028680723586951174696861748494676495_i128);
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld2 = _2;
_21 = (_19, 63974_u16);
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld3.0 = -_26.0;
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld6 = core::ptr::addr_of!(_39.0);
_14 = _13 * _13;
place!(Field::<Adt54>(Variant(RET, 0), 0)).fld6 = core::ptr::addr_of!(_19);
_26 = (_10,);
_19 = _21.0 & _21.0;
RET = Adt55::Variant3 { fld0: (-3203308399684566975_i64),fld1: _26.0 };
place!(Field::<i64>(Variant(RET, 3), 0)) = _9 as i64;
_26 = (_32,);
_39.1 = _21.1 >> Field::<(u64,)>(Variant(_34, 1), 0).0;
place!(Field::<i8>(Variant(RET, 3), 1)) = _17 as i8;
Goto(bb17)
}
bb17 = {
Call(_41 = dump_var(7_usize, 31_usize, Move(_31), 30_usize, Move(_30), 3_usize, Move(_3), 18_usize, Move(_18)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(7_usize, 28_usize, Move(_28), 24_usize, Move(_24), 14_usize, Move(_14), 21_usize, Move(_21)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(7_usize, 9_usize, Move(_9), 4_usize, Move(_4), 15_usize, Move(_15), 32_usize, Move(_32)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: isize,mut _5: u64,mut _6: u64,mut _7: u64,mut _8: u64,mut _9: u64,mut _10: isize,mut _11: *mut u64,mut _12: *mut u64) -> [i128; 7] {
mir! {
type RET = [i128; 7];
let _13: (*mut u64, *mut u16);
let _14: (i32, [bool; 1]);
let _15: f64;
let _16: f32;
let _17: char;
let _18: i16;
let _19: ([i64; 8], [i64; 4], (u64,));
let _20: Adt61;
let _21: Adt52;
let _22: bool;
let _23: isize;
let _24: bool;
let _25: isize;
let _26: u32;
let _27: ();
let _28: ();
{
RET = [147059762680880542901705285308965271560_i128,77200617470165224100562563151478184548_i128,(-149544610176046929331101225735907339846_i128),137744161560476724394253166184364508599_i128,(-15010180240382896031286523335305109170_i128),22818692013014589312967582046061752685_i128,(-94339161905253170063211855438463829780_i128)];
(*_12) = !_6;
(*_12) = _3 & _3;
_9 = _5;
_8 = !(*_12);
_2 = _1 >> _5;
_8 = !_2;
_6 = 5497220442192107376_usize as u64;
(*_12) = (-111_i8) as u64;
_12 = _11;
RET = [104549139468491607995686816495078470053_i128,147450211277336962142649553901620953846_i128,106948995700322380836522502044072834485_i128,123371886828683866707930088628295669756_i128,57134961265597002877890209946855704155_i128,96107672385055867724052874476711551928_i128,(-53699857860973772798691578840937658463_i128)];
_13.0 = _12;
_5 = '\u{2b16e}' as u64;
_14.1 = [false];
Call(_3 = core::intrinsics::transmute(_9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_13.0 = core::ptr::addr_of_mut!((*_12));
_14.0 = -(-1194144886_i32);
_14.0 = !(-397214115_i32);
_1 = (*_12) ^ (*_12);
_8 = _3;
_5 = _7 ^ (*_11);
_13.0 = core::ptr::addr_of_mut!(_7);
(*_11) = _5;
RET = [125636434998465819239297136975340104233_i128,(-140602824979305927198712504237294300023_i128),39342678517253841600316426501505724087_i128,(-42706406150021717106277418436492578662_i128),(-12583231194793083371881602305828007040_i128),167185237088637845351429034624740768760_i128,134583736612034525938894408851401133974_i128];
_4 = 26571_u16 as isize;
_12 = core::ptr::addr_of_mut!((*_12));
_1 = (*_11) - _7;
_3 = _9;
_10 = 0_usize as isize;
_15 = (-36_i8) as f64;
RET = [20235207466061742031517433958956790030_i128,105881728621709930674147532885218836258_i128,133270306486274399549927653443448235241_i128,13609827895963692061617109972839689131_i128,(-49534141355695552656708933977511325149_i128),157389696729351559843316369835870577170_i128,166399050913061122715552906478279960453_i128];
_10 = _4 >> _3;
_16 = 1679_i16 as f32;
_5 = !_8;
_12 = core::ptr::addr_of_mut!(_2);
_13.0 = _12;
(*_12) = _9 * _8;
(*_11) = 3_usize as u64;
_13.0 = core::ptr::addr_of_mut!((*_11));
_5 = (*_12);
_1 = true as u64;
Call(_18 = core::intrinsics::bswap(9387_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_12) = !_8;
_4 = -_10;
_16 = 205_u8 as f32;
_10 = _4 & _4;
_4 = _10;
(*_11) = 147_u8 as u64;
RET = [115111308261705676074632180292650915928_i128,(-67511540217270408201850360085348870846_i128),151315938012310511888343184138472216445_i128,103272375486185061443595955497809614413_i128,(-108113227947076409225206478826060034603_i128),68144054537574614915915607602619223684_i128,24090888622402473494741199218129011718_i128];
_11 = core::ptr::addr_of_mut!(_5);
_15 = (-4997_i16) as f64;
RET = [114297999131820858399146460901831067021_i128,113628914026978532826606583503860057701_i128,2040742569133376255468468626539985181_i128,96299813309365126394885638582846032633_i128,145223131838581693920495386449985720351_i128,137224191700076428812821785477304093243_i128,(-132502434699021196958552607814669781134_i128)];
_12 = _11;
RET = [(-39984042397048353996099785475056384116_i128),33382042307192472862167923714387343560_i128,(-74323398597680208997694047542031362001_i128),136485093805352165930134664132636840209_i128,15698153989441906296694307082491237841_i128,(-29352117130849972137077880302395526653_i128),(-145382003943731829143855421356670910423_i128)];
_5 = _8 << _3;
_7 = _8;
_8 = _3;
_6 = (*_11) >> _8;
_19.1 = [(-2668596183297569902_i64),(-4280445129910509844_i64),(-6450609313164460920_i64),9206903317871984825_i64];
_4 = _14.0 as isize;
_9 = !_7;
Goto(bb3)
}
bb3 = {
(*_11) = !_9;
_4 = _10;
(*_11) = 22074_i16 as u64;
_16 = (-44_i8) as f32;
_9 = (-116_i8) as u64;
_4 = -_10;
RET = [163402234172316783535109868224304158314_i128,(-127114455248045085482881787867108283805_i128),69769757015956227847472720153869410755_i128,(-28024928148225621640558911947961180960_i128),(-32858829507706983166197361095404464745_i128),(-150352054945382075140144860320228789987_i128),(-61557922819566649919689980548727634002_i128)];
_11 = core::ptr::addr_of_mut!(_2);
_14.0 = (-1831784453_i32);
_21.fld2 = [13158_u16,1743_u16,34662_u16,56382_u16,593_u16];
_16 = 193_u8 as f32;
(*_11) = 108763216545409063143624828218214892506_i128 as u64;
match _14.0 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463463374607429936427003 => bb11,
_ => bb10
}
}
bb4 = {
(*_12) = !_8;
_4 = -_10;
_16 = 205_u8 as f32;
_10 = _4 & _4;
_4 = _10;
(*_11) = 147_u8 as u64;
RET = [115111308261705676074632180292650915928_i128,(-67511540217270408201850360085348870846_i128),151315938012310511888343184138472216445_i128,103272375486185061443595955497809614413_i128,(-108113227947076409225206478826060034603_i128),68144054537574614915915607602619223684_i128,24090888622402473494741199218129011718_i128];
_11 = core::ptr::addr_of_mut!(_5);
_15 = (-4997_i16) as f64;
RET = [114297999131820858399146460901831067021_i128,113628914026978532826606583503860057701_i128,2040742569133376255468468626539985181_i128,96299813309365126394885638582846032633_i128,145223131838581693920495386449985720351_i128,137224191700076428812821785477304093243_i128,(-132502434699021196958552607814669781134_i128)];
_12 = _11;
RET = [(-39984042397048353996099785475056384116_i128),33382042307192472862167923714387343560_i128,(-74323398597680208997694047542031362001_i128),136485093805352165930134664132636840209_i128,15698153989441906296694307082491237841_i128,(-29352117130849972137077880302395526653_i128),(-145382003943731829143855421356670910423_i128)];
_5 = _8 << _3;
_7 = _8;
_8 = _3;
_6 = (*_11) >> _8;
_19.1 = [(-2668596183297569902_i64),(-4280445129910509844_i64),(-6450609313164460920_i64),9206903317871984825_i64];
_4 = _14.0 as isize;
_9 = !_7;
Goto(bb3)
}
bb5 = {
_13.0 = core::ptr::addr_of_mut!((*_12));
_14.0 = -(-1194144886_i32);
_14.0 = !(-397214115_i32);
_1 = (*_12) ^ (*_12);
_8 = _3;
_5 = _7 ^ (*_11);
_13.0 = core::ptr::addr_of_mut!(_7);
(*_11) = _5;
RET = [125636434998465819239297136975340104233_i128,(-140602824979305927198712504237294300023_i128),39342678517253841600316426501505724087_i128,(-42706406150021717106277418436492578662_i128),(-12583231194793083371881602305828007040_i128),167185237088637845351429034624740768760_i128,134583736612034525938894408851401133974_i128];
_4 = 26571_u16 as isize;
_12 = core::ptr::addr_of_mut!((*_12));
_1 = (*_11) - _7;
_3 = _9;
_10 = 0_usize as isize;
_15 = (-36_i8) as f64;
RET = [20235207466061742031517433958956790030_i128,105881728621709930674147532885218836258_i128,133270306486274399549927653443448235241_i128,13609827895963692061617109972839689131_i128,(-49534141355695552656708933977511325149_i128),157389696729351559843316369835870577170_i128,166399050913061122715552906478279960453_i128];
_10 = _4 >> _3;
_16 = 1679_i16 as f32;
_5 = !_8;
_12 = core::ptr::addr_of_mut!(_2);
_13.0 = _12;
(*_12) = _9 * _8;
(*_11) = 3_usize as u64;
_13.0 = core::ptr::addr_of_mut!((*_11));
_5 = (*_12);
_1 = true as u64;
Call(_18 = core::intrinsics::bswap(9387_i16), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = _3;
_19.2.0 = _6;
_14.1 = [false];
_19.2.0 = (-4904135103079607956_i64) as u64;
_13.0 = _11;
_17 = '\u{59209}';
_22 = !false;
RET = [(-91122430566683984574214776222873416344_i128),(-80301725009980970750240948122809313892_i128),62347702204870153747026642544689842738_i128,53303379058085126279723596123287956248_i128,127535388665145834058418998168555360561_i128,100927818953205586767106350233233480753_i128,33544254242339590008464679805659431796_i128];
_9 = !_8;
_12 = core::ptr::addr_of_mut!(_19.2.0);
Goto(bb12)
}
bb12 = {
_5 = _14.0 as u64;
_4 = _10 - _10;
RET = [(-22415362575665452405729545953269796165_i128),164685732197347667448832570389478442380_i128,147961339769037717454851488954986500730_i128,(-29616799269559071080631260244573944370_i128),108130376539153860672889012025453898592_i128,(-142898291053602636367395092943433977119_i128),120789744930144083763637909050820478071_i128];
(*_12) = _7;
_23 = 1028790308_u32 as isize;
_19.1 = [5447048841008560695_i64,(-757851636314341737_i64),2066878161246890797_i64,(-6885287949185562894_i64)];
_13.0 = _12;
RET = [83441091152660588429238337132751552135_i128,(-43196445114337252216700021806408923151_i128),20841291667787247094927238631575694766_i128,131155139033908391611343555228769578050_i128,164827209617592583515124232396351594881_i128,151485767075677251690258585035928093802_i128,(-89208651895322378813280563307561527090_i128)];
_13.0 = core::ptr::addr_of_mut!((*_12));
(*_11) = !(*_12);
_15 = _2 as f64;
_12 = core::ptr::addr_of_mut!(_2);
_17 = '\u{4d46d}';
(*_12) = 192_u8 as u64;
_13.0 = core::ptr::addr_of_mut!(_2);
_8 = _7 << _7;
match _14.0 {
0 => bb13,
340282366920938463463374607429936427003 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
(*_12) = !_8;
_4 = -_10;
_16 = 205_u8 as f32;
_10 = _4 & _4;
_4 = _10;
(*_11) = 147_u8 as u64;
RET = [115111308261705676074632180292650915928_i128,(-67511540217270408201850360085348870846_i128),151315938012310511888343184138472216445_i128,103272375486185061443595955497809614413_i128,(-108113227947076409225206478826060034603_i128),68144054537574614915915607602619223684_i128,24090888622402473494741199218129011718_i128];
_11 = core::ptr::addr_of_mut!(_5);
_15 = (-4997_i16) as f64;
RET = [114297999131820858399146460901831067021_i128,113628914026978532826606583503860057701_i128,2040742569133376255468468626539985181_i128,96299813309365126394885638582846032633_i128,145223131838581693920495386449985720351_i128,137224191700076428812821785477304093243_i128,(-132502434699021196958552607814669781134_i128)];
_12 = _11;
RET = [(-39984042397048353996099785475056384116_i128),33382042307192472862167923714387343560_i128,(-74323398597680208997694047542031362001_i128),136485093805352165930134664132636840209_i128,15698153989441906296694307082491237841_i128,(-29352117130849972137077880302395526653_i128),(-145382003943731829143855421356670910423_i128)];
_5 = _8 << _3;
_7 = _8;
_8 = _3;
_6 = (*_11) >> _8;
_19.1 = [(-2668596183297569902_i64),(-4280445129910509844_i64),(-6450609313164460920_i64),9206903317871984825_i64];
_4 = _14.0 as isize;
_9 = !_7;
Goto(bb3)
}
bb15 = {
_22 = false;
_16 = _15 as f32;
_21.fld0.0 = core::ptr::addr_of_mut!(_8);
(*_11) = _6;
_19.1 = [8237385341711929734_i64,(-4223167294933072456_i64),(-6497375272492446672_i64),(-1605733753340075066_i64)];
_21.fld0.0 = core::ptr::addr_of_mut!(_6);
(*_12) = _7;
_1 = !(*_11);
_25 = 303120977889161628065026032971273896697_u128 as isize;
_18 = (-10747_i16);
_9 = 51_i8 as u64;
_7 = _3 * (*_12);
Goto(bb16)
}
bb16 = {
Call(_27 = dump_var(8_usize, 14_usize, Move(_14), 25_usize, Move(_25), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_27 = dump_var(8_usize, 18_usize, Move(_18), 17_usize, Move(_17), 3_usize, Move(_3), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: i8,mut _2: u64,mut _3: *mut u64,mut _4: *mut u64,mut _5: *mut u64,mut _6: u64,mut _7: u64,mut _8: (i8,),mut _9: u64,mut _10: u64,mut _11: i8,mut _12: *mut u64,mut _13: *mut u64,mut _14: *mut u64,mut _15: u64) -> i16 {
mir! {
type RET = i16;
let _16: Adt50;
let _17: i128;
let _18: usize;
let _19: char;
let _20: *mut u16;
let _21: i8;
let _22: Adt59;
let _23: [i64; 8];
let _24: bool;
let _25: (char, (i128,), *const bool);
let _26: [u32; 5];
let _27: [i64; 8];
let _28: isize;
let _29: *mut i16;
let _30: (i32, [bool; 1]);
let _31: *mut u16;
let _32: Adt56;
let _33: isize;
let _34: (i128,);
let _35: [i64; 8];
let _36: char;
let _37: f32;
let _38: [i16; 4];
let _39: [u32; 4];
let _40: bool;
let _41: isize;
let _42: (i128, [i64; 4], i128);
let _43: bool;
let _44: i8;
let _45: [i128; 7];
let _46: [i128; 7];
let _47: isize;
let _48: Adt58;
let _49: [i64; 5];
let _50: Adt56;
let _51: ([i64; 8], [i64; 4], (u64,));
let _52: [i64; 4];
let _53: [i64; 4];
let _54: f64;
let _55: bool;
let _56: u32;
let _57: *const u128;
let _58: isize;
let _59: isize;
let _60: usize;
let _61: [bool; 1];
let _62: f32;
let _63: Adt53;
let _64: isize;
let _65: ();
let _66: ();
{
(*_5) = (*_3);
(*_3) = (*_13) << _7;
(*_13) = 1341055976_i32 as u64;
_13 = _3;
(*_5) = !_7;
_16.fld3 = [(-134073507674022469931020391325010906979_i128),(-91987006342088013676357888191346690218_i128),21882227920483358886169305493506045151_i128,(-49684202514448830729606532724279356572_i128),55663292257939811947575934819970558021_i128,(-40415024910232250699880345027728609407_i128),81149024254017767996146539139557601397_i128];
RET = (*_3) as i16;
_12 = _3;
(*_5) = !(*_13);
_16.fld2 = [229_u8,40_u8,79_u8];
(*_3) = _15 << _9;
RET = 16472_i16;
_4 = core::ptr::addr_of_mut!((*_4));
_11 = -_1;
_18 = 10407505784665174605_usize & 4_usize;
_16.fld4 = [6578597694373819769_i64,(-8271414164975507695_i64),5369636410931863615_i64,1098457585912629752_i64];
_21 = -_11;
(*_12) = !_2;
RET = 46581_u16 as i16;
(*_12) = false as u64;
(*_14) = _10 >> _15;
Call(_18 = core::intrinsics::bswap(4_usize), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = _9;
_16.fld5 = (-9223372036854775808_isize) as i64;
_7 = 11951_u16 as u64;
_5 = core::ptr::addr_of_mut!((*_13));
_4 = _3;
RET = !(-432_i16);
(*_14) = !_9;
_16.fld2 = [191_u8,62_u8,62_u8];
(*_12) = _10;
_18 = 6_usize;
(*_5) = _6 - _6;
_12 = _3;
_16.fld2 = [48_u8,167_u8,230_u8];
_17 = _16.fld3[_18] >> (*_14);
_16.fld4 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_16.fld0.0 = (_17,);
Goto(bb2)
}
bb2 = {
(*_12) = (-1752817332_i32) as u64;
(*_4) = !_2;
_22.fld4 = !RET;
_3 = _13;
_23[_18] = _16.fld5;
_21 = _8.0 >> (*_13);
_22.fld2 = [1755223570_u32,915656067_u32,31945324_u32,4032053532_u32];
RET = _22.fld4 + _22.fld4;
_11 = _21 * _21;
_19 = '\u{90d36}';
_10 = (*_5) + (*_12);
_25.1.0 = _16.fld0.0.0 + _16.fld0.0.0;
Call((*_4) = core::intrinsics::bswap(_10), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = _11 as u64;
_15 = !(*_12);
_22.fld0.0 = !(*_14);
_22.fld0 = (_9,);
_25.2 = core::ptr::addr_of!(_24);
_13 = core::ptr::addr_of_mut!(_10);
_22.fld2 = [1761782105_u32,2414930803_u32,3926542095_u32,4046455494_u32];
_8 = (_21,);
_16.fld3 = [_16.fld0.0.0,_17,_17,_16.fld0.0.0,_17,_17,_25.1.0];
_22.fld4 = RET;
RET = _22.fld4;
_27[_18] = _11 as i64;
Goto(bb4)
}
bb4 = {
_30.0 = 1374322642_i32 << _25.1.0;
(*_4) = _30.0 as u64;
_22.fld2 = [2066943408_u32,2644231785_u32,1098471943_u32,5785476_u32];
_13 = core::ptr::addr_of_mut!(_22.fld0.0);
_8.0 = _11;
_5 = core::ptr::addr_of_mut!(_10);
Goto(bb5)
}
bb5 = {
_30.1 = [false];
_22.fld1 = [2426861357_u32,3498618597_u32,24915335_u32];
_1 = _21;
RET = 117177286332210236049080231557026983460_u128 as i16;
_34.0 = _16.fld0.0.0 + _16.fld0.0.0;
_16.fld5 = _27[_18];
(*_14) = 19_u8 as u64;
_16.fld5 = _18 as i64;
_34 = (_17,);
_22.fld0 = (_15,);
_9 = !_15;
_5 = core::ptr::addr_of_mut!(_22.fld0.0);
(*_5) = 9223372036854775807_isize as u64;
_37 = _30.0 as f32;
Call(_39 = fn10(_30.0, _16.fld0.0.0, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_16.fld0.1 = core::ptr::addr_of!(_24);
_42.2 = !_25.1.0;
_7 = _15;
(*_12) = _30.0 as u64;
_23 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_14 = core::ptr::addr_of_mut!((*_4));
_19 = '\u{d8ec0}';
_40 = false;
_14 = core::ptr::addr_of_mut!((*_5));
_40 = true;
_24 = _40;
_29 = core::ptr::addr_of_mut!(_22.fld4);
_25.0 = _19;
_27 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_33 = _19 as isize;
_22.fld0 = ((*_3),);
_44 = _8.0 + _1;
_16.fld1 = [58510_u16,47879_u16,27750_u16,40070_u16,38600_u16];
_4 = core::ptr::addr_of_mut!((*_4));
RET = _16.fld5 as i16;
_22.fld3 = Adt49::Variant1 { fld0: (*_29),fld1: _25,fld2: _29 };
_11 = -_1;
_14 = core::ptr::addr_of_mut!(_2);
place!(Field::<i16>(Variant(_22.fld3, 1), 0)) = -(*_29);
_43 = _24;
_24 = _43;
_21 = _44 + _8.0;
(*_3) = _33 as u64;
Goto(bb7)
}
bb7 = {
_16.fld5 = (-1864577286856993159_i64) | (-2505420017584987766_i64);
SetDiscriminant(_22.fld3, 2);
Call(_34 = fn11(_16.fld0.0.0, (*_14), _25, _13, _5, _25.1, (*_14), (*_14), _16.fld0.0.0, _16.fld3, _16.fld3, _9), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_15 = !_10;
Goto(bb9)
}
bb9 = {
_2 = _10 & _6;
_22.fld0.0 = _9;
_16.fld0 = (_25.1, _25.2);
Goto(bb10)
}
bb10 = {
_32 = Adt56::Variant3 { fld0: _22.fld2,fld1: _8 };
place!(Field::<f64>(Variant(_22.fld3, 2), 2)) = _18 as f64;
_5 = core::ptr::addr_of_mut!(_2);
_31 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_22.fld3, 2), 3)));
place!(Field::<i32>(Variant(_22.fld3, 2), 5)) = Field::<f64>(Variant(_22.fld3, 2), 2) as i32;
(*_4) = (*_13);
_5 = _12;
place!(Field::<(i128,)>(Variant(_22.fld3, 2), 6)).0 = !_17;
(*_31) = !64754_u16;
_26 = [1065228596_u32,4005198438_u32,1850714809_u32,605974713_u32,4202099955_u32];
Goto(bb11)
}
bb11 = {
place!(Field::<f64>(Variant(_22.fld3, 2), 2)) = _16.fld5 as f64;
_28 = -_33;
_1 = _8.0 - _8.0;
_23 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_1 = _44;
_47 = _28 << Field::<(i8,)>(Variant(_32, 3), 1).0;
_16.fld0 = (_34, _25.2);
_16.fld4 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5];
SetDiscriminant(_32, 0);
place!(Field::<(i8,)>(Variant(_22.fld3, 2), 1)) = (_1,);
_6 = (*_5);
_20 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_22.fld3, 2), 3)));
_22.fld1 = [776042865_u32,2895164845_u32,2837903329_u32];
_16.fld0.0 = (_17,);
place!(Field::<i32>(Variant(_32, 0), 0)) = _30.0 & _30.0;
_52 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5];
place!(Field::<i32>(Variant(_32, 0), 0)) = _30.0;
_22.fld4 = (*_31) as i16;
_51.2.0 = (*_4) - (*_14);
_9 = _7;
Goto(bb12)
}
bb12 = {
_37 = _18 as f32;
_46 = _16.fld3;
_50 = Adt56::Variant3 { fld0: _22.fld2,fld1: _8 };
_42.2 = _47 as i128;
(*_5) = _22.fld4 as u64;
(*_20) = 64398_u16 | 16264_u16;
place!(Field::<(char, (i128,), *const bool)>(Variant(_32, 2), 3)).1 = _16.fld0.0;
place!(Field::<*mut u64>(Variant(_32, 2), 0)) = _13;
_51.0 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_22.fld1 = [1404864206_u32,1045601692_u32,1360101271_u32];
_42 = (_34.0, _16.fld4, Field::<(i128,)>(Variant(_22.fld3, 2), 6).0);
_42.1 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_51.2.0 = _30.0 as u64;
_51.0 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
place!(Field::<(i8,)>(Variant(_22.fld3, 2), 1)).0 = !Field::<(i8,)>(Variant(_50, 3), 1).0;
_42.2 = _25.0 as i128;
(*_13) = _10 << Field::<(char, (i128,), *const bool)>(Variant(_32, 2), 3).1.0;
_48 = Adt58::Variant2 { fld0: _16.fld1 };
_49 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
place!(Field::<(i32, [bool; 1])>(Variant(_22.fld3, 2), 4)).1 = [_40];
Goto(bb13)
}
bb13 = {
(*_20) = 38093_u16;
place!(Field::<(char, (i128,), *const bool)>(Variant(_32, 2), 3)) = (_19, _16.fld0.0, _16.fld0.1);
_50 = Adt56::Variant1 { fld0: _26 };
place!(Field::<[i64; 8]>(Variant(_32, 2), 4)) = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
(*_29) = -RET;
(*_29) = !RET;
_51.2.0 = (*_31) as u64;
(*_31) = 23766_u16 << (*_13);
_32 = Adt56::Variant2 { fld0: _13,fld1: _18,fld2: _29,fld3: _25,fld4: _23 };
(*_14) = _18 as u64;
place!(Field::<[u32; 5]>(Variant(_50, 1), 0)) = [3395615297_u32,3037761134_u32,3976144414_u32,3842184731_u32,2411748391_u32];
match _18 {
6 => bb14,
_ => bb2
}
}
bb14 = {
_53 = _52;
RET = _24 as i16;
(*_31) = !19031_u16;
place!(Field::<(char, (i128,), *const bool)>(Variant(_32, 2), 3)).1 = _34;
_10 = !_7;
place!(Field::<(char, (i128,), *const bool)>(Variant(_32, 2), 3)) = (_19, _16.fld0.0, _25.2);
SetDiscriminant(_32, 0);
_34 = (_17,);
_59 = _47 | _47;
_53 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5];
Goto(bb15)
}
bb15 = {
Call(_65 = dump_var(9_usize, 49_usize, Move(_49), 24_usize, Move(_24), 18_usize, Move(_18), 34_usize, Move(_34)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_65 = dump_var(9_usize, 10_usize, Move(_10), 44_usize, Move(_44), 40_usize, Move(_40), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_65 = dump_var(9_usize, 39_usize, Move(_39), 11_usize, Move(_11), 21_usize, Move(_21), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_65 = dump_var(9_usize, 30_usize, Move(_30), 47_usize, Move(_47), 17_usize, Move(_17), 53_usize, Move(_53)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: i32,mut _2: i128,mut _3: u64) -> [u32; 4] {
mir! {
type RET = [u32; 4];
let _4: (u128, u16);
let _5: i64;
let _6: isize;
let _7: (u64,);
let _8: [u16; 5];
let _9: ([i64; 8], [i64; 4], (u64,));
let _10: f32;
let _11: *const [i64; 5];
let _12: *const u128;
let _13: ((i128,), *const bool);
let _14: isize;
let _15: char;
let _16: [u32; 4];
let _17: Adt56;
let _18: bool;
let _19: *mut i16;
let _20: isize;
let _21: f32;
let _22: [i64; 8];
let _23: (u64,);
let _24: (*mut u64, *mut u16);
let _25: isize;
let _26: (*mut u64, *mut u16);
let _27: *mut i16;
let _28: (i128, [i64; 4], i128);
let _29: isize;
let _30: bool;
let _31: char;
let _32: (i8,);
let _33: [i16; 4];
let _34: (u128, u16);
let _35: f64;
let _36: ();
let _37: ();
{
_1 = !(-1805115747_i32);
RET = [38401822_u32,4191437725_u32,4117630076_u32,2350350284_u32];
RET = [1923637574_u32,2891902727_u32,1636277126_u32,2173285071_u32];
_1 = (-2_isize) as i32;
_2 = (-71266244576687443971216170326223156029_i128) + (-24654682808100799266682310718162737040_i128);
_4.1 = !42914_u16;
_4.0 = 469917580_u32 as u128;
RET = [1538221676_u32,697246006_u32,3049033373_u32,2951700820_u32];
_6 = (-9223372036854775808_isize);
_4 = (187536230475763884773580672492898095990_u128, 57839_u16);
_4.1 = 76588884_u32 as u16;
_1 = !79272966_i32;
RET = [730367658_u32,4114563943_u32,3732847269_u32,157947230_u32];
_3 = 17791076245582925554_u64 * 4042650843070003833_u64;
RET = [941827376_u32,981008126_u32,2090242765_u32,3695113026_u32];
_4 = (143527934719594175893899657172486469375_u128, 19760_u16);
RET = [2708390384_u32,2299470466_u32,711018909_u32,2820520451_u32];
_4.1 = 425041712_u32 as u16;
_4 = (284271477812311527368521516981908584947_u128, 12048_u16);
_2 = _3 as i128;
RET = [749954822_u32,217055688_u32,659113295_u32,263238599_u32];
_5 = -3846829015857548193_i64;
_4.0 = 14463671134617020805_usize as u128;
match _4.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
12048 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_1 = _2 as i32;
_7.0 = !_3;
_2 = -55243030895170536119983588078331434762_i128;
_4.0 = _6 as u128;
_2 = -121241290202845280971349251725516427267_i128;
RET = [2302677137_u32,2434041150_u32,854172587_u32,2514583510_u32];
_4 = (65515523770446414313953112768938423515_u128, 49968_u16);
_4 = (265636690309172235315833403090505068236_u128, 60364_u16);
_7.0 = _5 as u64;
_2 = _6 as i128;
_4.1 = _5 as u16;
RET = [3863403136_u32,950605367_u32,2152460768_u32,4107713588_u32];
_2 = (-96013142881936093661460179620231041274_i128);
_9.0 = [_5,_5,_5,_5,_5,_5,_5,_5];
_6 = 9223372036854775807_isize;
_9.0 = [_5,_5,_5,_5,_5,_5,_5,_5];
Goto(bb8)
}
bb8 = {
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_9.1 = [_5,_5,_5,_5];
_9.1 = [_5,_5,_5,_5];
_10 = _3 as f32;
_9.2 = (_3,);
_1 = 1431210782_i32;
_3 = !_9.2.0;
_4 = (245623857107205385251662104796089946757_u128, 14405_u16);
_7.0 = _3 + _3;
_1 = 1689837855_i32 - 611775507_i32;
RET = [1981362567_u32,828256163_u32,1712060418_u32,2020375564_u32];
_9.2 = (_7.0,);
_4 = (102197844995675458065283490879201427074_u128, 28377_u16);
_13.0 = (_2,);
_12 = core::ptr::addr_of!(_4.0);
_5 = (-5582950842938269255_i64);
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_4.0 = !119370962193045560056916975424366277142_u128;
_9.1 = [_5,_5,_5,_5];
_9.1 = [_5,_5,_5,_5];
_7 = (_9.2.0,);
_14 = _6;
_13.0 = (_2,);
Goto(bb9)
}
bb9 = {
_18 = _5 <= _5;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_7.0 = _3;
_9.1 = [_5,_5,_5,_5];
_9.2 = _7;
_7 = (_3,);
_16 = [382635990_u32,1279359738_u32,4174972487_u32,1521150489_u32];
_13.1 = core::ptr::addr_of!(_18);
_9.0 = [_5,_5,_5,_5,_5,_5,_5,_5];
_1 = (-1613747503_i32);
_6 = _14 ^ _14;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_12 = core::ptr::addr_of!((*_12));
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_18 = !false;
_7.0 = !_3;
(*_12) = !208759146524014844837178114075509219584_u128;
_1 = -(-1934997854_i32);
_14 = !_6;
_6 = _14 & _14;
Call(RET = core::intrinsics::transmute(_2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_21 = (-31913_i16) as f32;
_4.1 = !43723_u16;
_14 = 8180_i16 as isize;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
RET = _16;
_4.0 = 23049_i16 as u128;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
RET = _16;
_13.0 = (_2,);
_21 = _10;
_14 = _6;
_6 = _14;
_5 = 16402129157380798494_usize as i64;
_3 = !_7.0;
_15 = '\u{5fdf1}';
_24.0 = core::ptr::addr_of_mut!(_3);
_17 = Adt56::Variant0 { fld0: _1 };
_21 = _14 as f32;
_28.2 = _4.0 as i128;
_29 = -_6;
_23.0 = _9.2.0;
(*_12) = _15 as u128;
_24.1 = core::ptr::addr_of_mut!(_4.1);
_1 = Field::<i32>(Variant(_17, 0), 0);
match _2 {
0 => bb7,
1 => bb2,
2 => bb3,
244269224039002369801914427811537170182 => bb11,
_ => bb8
}
}
bb11 = {
_14 = -_6;
_22 = _9.0;
_6 = _14 ^ _14;
SetDiscriminant(_17, 3);
_20 = (-23286_i16) as isize;
_30 = !_18;
place!(Field::<(i8,)>(Variant(_17, 3), 1)) = ((-33_i8),);
_23 = (_3,);
_4 = (220100808779938368312644571835133980103_u128, 35063_u16);
_7.0 = _3 & _23.0;
place!(Field::<[u32; 4]>(Variant(_17, 3), 0)) = _16;
_32 = Field::<(i8,)>(Variant(_17, 3), 1);
_34 = _4;
_9.1 = [_5,_5,_5,_5];
_24.0 = core::ptr::addr_of_mut!(_9.2.0);
_25 = _6 & _6;
_34.1 = Field::<(i8,)>(Variant(_17, 3), 1).0 as u16;
SetDiscriminant(_17, 0);
match _34.0 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
220100808779938368312644571835133980103 => bb19,
_ => bb18
}
}
bb12 = {
_21 = (-31913_i16) as f32;
_4.1 = !43723_u16;
_14 = 8180_i16 as isize;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
RET = _16;
_4.0 = 23049_i16 as u128;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
RET = _16;
_13.0 = (_2,);
_21 = _10;
_14 = _6;
_6 = _14;
_5 = 16402129157380798494_usize as i64;
_3 = !_7.0;
_15 = '\u{5fdf1}';
_24.0 = core::ptr::addr_of_mut!(_3);
_17 = Adt56::Variant0 { fld0: _1 };
_21 = _14 as f32;
_28.2 = _4.0 as i128;
_29 = -_6;
_23.0 = _9.2.0;
(*_12) = _15 as u128;
_24.1 = core::ptr::addr_of_mut!(_4.1);
_1 = Field::<i32>(Variant(_17, 0), 0);
match _2 {
0 => bb7,
1 => bb2,
2 => bb3,
244269224039002369801914427811537170182 => bb11,
_ => bb8
}
}
bb13 = {
_18 = _5 <= _5;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_7.0 = _3;
_9.1 = [_5,_5,_5,_5];
_9.2 = _7;
_7 = (_3,);
_16 = [382635990_u32,1279359738_u32,4174972487_u32,1521150489_u32];
_13.1 = core::ptr::addr_of!(_18);
_9.0 = [_5,_5,_5,_5,_5,_5,_5,_5];
_1 = (-1613747503_i32);
_6 = _14 ^ _14;
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_12 = core::ptr::addr_of!((*_12));
_8 = [_4.1,_4.1,_4.1,_4.1,_4.1];
_18 = !false;
_7.0 = !_3;
(*_12) = !208759146524014844837178114075509219584_u128;
_1 = -(-1934997854_i32);
_14 = !_6;
_6 = _14 & _14;
Call(RET = core::intrinsics::transmute(_2), ReturnTo(bb10), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
place!(Field::<i32>(Variant(_17, 0), 0)) = _1 | _1;
_16 = RET;
_34.0 = !(*_12);
_30 = _18;
_34 = (_4.0, _4.1);
_25 = _6 ^ _6;
Goto(bb20)
}
bb20 = {
Call(_36 = dump_var(10_usize, 34_usize, Move(_34), 9_usize, Move(_9), 23_usize, Move(_23), 2_usize, Move(_2)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_36 = dump_var(10_usize, 30_usize, Move(_30), 4_usize, Move(_4), 3_usize, Move(_3), 20_usize, Move(_20)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_36 = dump_var(10_usize, 5_usize, Move(_5), 1_usize, Move(_1), 37_usize, _37, 37_usize, _37), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: i128,mut _2: u64,mut _3: (char, (i128,), *const bool),mut _4: *mut u64,mut _5: *mut u64,mut _6: (i128,),mut _7: u64,mut _8: u64,mut _9: i128,mut _10: [i128; 7],mut _11: [i128; 7],mut _12: u64) -> (i128,) {
mir! {
type RET = (i128,);
let _13: Adt48;
let _14: ();
let _15: ();
{
Call(_12 = core::intrinsics::bswap((*_4)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.0 = _6.0 | _6.0;
(*_5) = true as u64;
Goto(bb2)
}
bb2 = {
Call(_14 = dump_var(11_usize, 9_usize, Move(_9), 1_usize, Move(_1), 8_usize, Move(_8), 6_usize, Move(_6)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: isize,mut _2: i8,mut _3: u64,mut _4: u64,mut _5: u64,mut _6: u64,mut _7: *mut u64,mut _8: i8,mut _9: (i8,),mut _10: *mut u64,mut _11: isize,mut _12: *mut u64) -> Adt48 {
mir! {
type RET = Adt48;
let _13: isize;
let _14: i8;
let _15: isize;
let _16: [u16; 5];
let _17: bool;
let _18: isize;
let _19: char;
let _20: [u32; 4];
let _21: f64;
let _22: isize;
let _23: Adt61;
let _24: isize;
let _25: Adt55;
let _26: *mut i16;
let _27: char;
let _28: u8;
let _29: (i8,);
let _30: u16;
let _31: [u32; 4];
let _32: u16;
let _33: usize;
let _34: u16;
let _35: (u64,);
let _36: (u128, u16);
let _37: (u16,);
let _38: (u16,);
let _39: Adt54;
let _40: i128;
let _41: isize;
let _42: [char; 8];
let _43: i32;
let _44: u128;
let _45: char;
let _46: i128;
let _47: bool;
let _48: (i32, [bool; 1]);
let _49: Adt52;
let _50: isize;
let _51: ();
let _52: ();
{
_4 = !_6;
(*_7) = _6 ^ _3;
_14 = _8;
(*_12) = _4;
(*_7) = _6 + _6;
(*_12) = 1094312534_u32 as u64;
_11 = 4_usize as isize;
(*_7) = _3;
_13 = _1 - _1;
_9.0 = !_8;
(*_10) = _3;
(*_12) = _9.0 as u64;
_17 = !true;
(*_10) = 9101504572779057026_usize as u64;
Goto(bb1)
}
bb1 = {
_12 = _10;
_15 = _13 + _13;
_17 = !false;
(*_10) = !_6;
_5 = _4 - (*_7);
_12 = _7;
(*_7) = _5;
(*_10) = _4 & _6;
_11 = _13;
(*_7) = !_4;
_11 = 58_u8 as isize;
_16 = [64769_u16,2326_u16,14191_u16,59182_u16,9808_u16];
_8 = _14 * _2;
_7 = _10;
_18 = _13;
_6 = (*_10) + _5;
_18 = (*_10) as isize;
_11 = _18;
_18 = 4_usize as isize;
(*_12) = _3;
(*_12) = _6;
_9.0 = _8 ^ _8;
(*_7) = _6;
_10 = core::ptr::addr_of_mut!(_3);
_9.0 = -_8;
Goto(bb2)
}
bb2 = {
_6 = !(*_7);
(*_12) = 312440079119645844374845528898683315912_u128 as u64;
_11 = _17 as isize;
_9.0 = !_14;
_19 = '\u{9cddd}';
_16 = [23479_u16,44095_u16,34862_u16,10013_u16,40359_u16];
_14 = (-858937873_i32) as i8;
(*_7) = (*_10);
_9 = (_2,);
_15 = _1;
(*_12) = _2 as u64;
(*_10) = _9.0 as u64;
_11 = _13 - _13;
_14 = _2 + _9.0;
Call(_11 = fn13(_14, _8, _10, _12, (*_10), _13, _12, _5, _10, _9.0, (*_12), (*_7), (*_7), _7), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_12) = _5;
_1 = _13 >> _4;
(*_12) = 9040607783983567593_usize as u64;
_5 = 177060552423679504834082263704860671787_u128 as u64;
_7 = core::ptr::addr_of_mut!(_4);
(*_12) = _3;
_5 = (*_12) | _6;
_9.0 = !_2;
_20 = [31101134_u32,3084918745_u32,2996001886_u32,3915882724_u32];
(*_10) = (*_7);
_21 = 52028_u16 as f64;
(*_7) = (*_10);
Call(_9.0 = core::intrinsics::transmute(_14), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_1 = _13 + _15;
_24 = _15;
_22 = -_24;
(*_10) = (*_12);
_8 = -_2;
_5 = _3;
(*_10) = _6 & _5;
_10 = _12;
(*_12) = _5;
Call(_25 = fn15((*_10), (*_7), (*_7), _14, (*_7), (*_7), (*_10), _10, _7, _8, _22, _14, _24, (*_12), _8, (*_12)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
(*_12) = (-16859_i16) as u64;
_20 = [3068354386_u32,1376226784_u32,3273417574_u32,3828735581_u32];
_29 = _9;
place!(Field::<i64>(Variant(_25, 3), 0)) = _17 as i64;
_19 = '\u{8d58a}';
(*_10) = _4;
(*_10) = (*_7);
_19 = '\u{55aa}';
place!(Field::<i8>(Variant(_25, 3), 1)) = !_9.0;
(*_10) = _3 ^ (*_7);
_27 = _19;
_32 = 7_usize as u16;
_13 = _1 + _22;
_12 = _10;
_30 = _32 ^ _32;
_1 = 22635_i16 as isize;
_28 = 77_u8 << _3;
_1 = !_13;
(*_10) = _4;
_9.0 = _14;
_31 = _20;
_29 = (_9.0,);
_3 = !_6;
Goto(bb6)
}
bb6 = {
_7 = _10;
place!(Field::<i64>(Variant(_25, 3), 0)) = _17 as i64;
SetDiscriminant(_25, 3);
SetDiscriminant(_25, 0);
place!(Field::<[char; 8]>(Variant(_25, 0), 1)) = [_19,_19,_27,_19,_19,_19,_19,_27];
_35 = ((*_12),);
_16 = [_30,_32,_30,_30,_32];
(*_12) = !_4;
_33 = !5_usize;
_34 = (-23577_i16) as u16;
_19 = _27;
_35.0 = (-4614232946711366512_i64) as u64;
_8 = !_14;
_3 = _33 as u64;
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld0.0 = !250039253_i32;
_14 = Field::<Adt54>(Variant(_25, 0), 0).fld0.0 as i8;
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld3.0 = _9.0 | _2;
_35.0 = _5;
Goto(bb7)
}
bb7 = {
_31 = [4285446830_u32,177052590_u32,4030847458_u32,3140723797_u32];
_36.0 = 130999282027379204734612869860980409854_u128;
_21 = 6800146283190433441875066545163611136_i128 as f64;
Goto(bb8)
}
bb8 = {
_16 = [_34,_32,_32,_30,_30];
_7 = core::ptr::addr_of_mut!((*_7));
_21 = _15 as f64;
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld0.0 = !(-582658240_i32);
_38.0 = _30 << _28;
_33 = !1647442066924108171_usize;
(*_10) = _5 * _35.0;
_34 = _38.0;
(*_7) = _35.0 >> _2;
_7 = _12;
_37.0 = _38.0;
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld6 = core::ptr::addr_of!(_36.0);
_25 = Adt55::Variant3 { fld0: 2811704407103219955_i64,fld1: _29.0 };
_31 = [921660919_u32,1132991907_u32,1599675774_u32,478748736_u32];
_22 = _24 ^ _15;
_35 = ((*_12),);
_29 = (_9.0,);
_37.0 = _38.0;
RET = Adt48::Variant1 { fld0: _35 };
Goto(bb9)
}
bb9 = {
_4 = (*_12);
_13 = _22 * _1;
place!(Field::<u8>(Variant(RET, 0), 3)) = _28 | _28;
place!(Field::<i64>(Variant(_25, 3), 0)) = 117194507486332445032041086066913685130_i128 as i64;
_37 = _38;
place!(Field::<[u8; 3]>(Variant(RET, 0), 6)) = [_28,Field::<u8>(Variant(RET, 0), 3),_28];
_39.fld3 = _29;
_37.0 = _34;
_28 = Field::<i64>(Variant(_25, 3), 0) as u8;
(*_7) = _35.0;
(*_10) = !_4;
place!(Field::<[u8; 3]>(Variant(RET, 0), 6)) = [Field::<u8>(Variant(RET, 0), 3),Field::<u8>(Variant(RET, 0), 3),Field::<u8>(Variant(RET, 0), 3)];
_34 = _37.0;
_39.fld6 = core::ptr::addr_of!(_36.0);
_11 = (-968_i16) as isize;
Goto(bb10)
}
bb10 = {
_36 = (247210308286883020382838641434001535221_u128, _34);
_5 = (*_7);
_31 = _20;
place!(Field::<((i128,), *const bool)>(Variant(RET, 0), 4)).0 = ((-125744621003236688545844694352686766218_i128),);
place!(Field::<*const bool>(Variant(RET, 0), 5)) = core::ptr::addr_of!(_17);
place!(Field::<[i64; 4]>(Variant(RET, 0), 0)) = [Field::<i64>(Variant(_25, 3), 0),Field::<i64>(Variant(_25, 3), 0),Field::<i64>(Variant(_25, 3), 0),Field::<i64>(Variant(_25, 3), 0)];
_36 = (321058943849127701829833543578516336143_u128, _38.0);
place!(Field::<((i128,), *const bool)>(Variant(RET, 0), 4)).1 = core::ptr::addr_of!(_17);
Goto(bb11)
}
bb11 = {
(*_12) = _6;
_17 = false;
_12 = _10;
place!(Field::<[bool; 1]>(Variant(RET, 0), 2)) = [_17];
place!(Field::<f64>(Variant(RET, 0), 1)) = 264557405_u32 as f64;
_21 = Field::<f64>(Variant(RET, 0), 1) * Field::<f64>(Variant(RET, 0), 1);
place!(Field::<((i128,), *const bool)>(Variant(RET, 0), 4)).0.0 = _13 as i128;
place!(Field::<i64>(Variant(_25, 3), 0)) = 6078808806066668151_i64;
_4 = (*_7);
SetDiscriminant(_25, 0);
place!(Field::<[i64; 4]>(Variant(RET, 0), 0)) = [(-3694272526884859981_i64),(-8009263893273805125_i64),2529917157553377067_i64,(-7179061705410365053_i64)];
_41 = -_1;
RET = Adt48::Variant1 { fld0: _35 };
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld3.0 = -_39.fld3.0;
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld1 = _19;
place!(Field::<Adt54>(Variant(_25, 0), 0)).fld5 = Adt53::Variant1 { fld0: _36,fld1: _39.fld6 };
_39.fld5 = Field::<Adt54>(Variant(_25, 0), 0).fld5;
_36 = Field::<(u128, u16)>(Variant(Field::<Adt54>(Variant(_25, 0), 0).fld5, 1), 0);
_39.fld4 = _20;
Goto(bb12)
}
bb12 = {
Call(_51 = dump_var(12_usize, 6_usize, Move(_6), 36_usize, Move(_36), 14_usize, Move(_14), 38_usize, Move(_38)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_51 = dump_var(12_usize, 37_usize, Move(_37), 15_usize, Move(_15), 30_usize, Move(_30), 17_usize, Move(_17)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_51 = dump_var(12_usize, 16_usize, Move(_16), 33_usize, Move(_33), 31_usize, Move(_31), 28_usize, Move(_28)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_51 = dump_var(12_usize, 18_usize, Move(_18), 8_usize, Move(_8), 22_usize, Move(_22), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: i8,mut _2: i8,mut _3: *mut u64,mut _4: *mut u64,mut _5: u64,mut _6: isize,mut _7: *mut u64,mut _8: u64,mut _9: *mut u64,mut _10: i8,mut _11: u64,mut _12: u64,mut _13: u64,mut _14: *mut u64) -> isize {
mir! {
type RET = isize;
let _15: bool;
let _16: u64;
let _17: [i64; 8];
let _18: f32;
let _19: u32;
let _20: [char; 8];
let _21: i16;
let _22: i32;
let _23: (char, (i128,), *const bool);
let _24: (i32, [bool; 1]);
let _25: Adt57;
let _26: f64;
let _27: Adt47;
let _28: [u32; 4];
let _29: char;
let _30: bool;
let _31: Adt63;
let _32: f64;
let _33: isize;
let _34: (u64,);
let _35: usize;
let _36: f32;
let _37: i64;
let _38: Adt63;
let _39: i64;
let _40: ();
let _41: ();
{
_6 = (-9223372036854775808_isize);
_8 = !(*_14);
_3 = core::ptr::addr_of_mut!((*_3));
_1 = _2;
_12 = !(*_14);
_14 = core::ptr::addr_of_mut!((*_9));
_6 = 9223372036854775807_isize;
(*_3) = 1905657639_i32 as u64;
_18 = _6 as f32;
_9 = core::ptr::addr_of_mut!((*_3));
(*_9) = (*_7) * (*_4);
(*_3) = !(*_7);
_15 = true;
_16 = !(*_3);
(*_3) = !_13;
(*_14) = !_8;
_19 = 19046_u16 as u32;
_8 = !(*_7);
_1 = _2 ^ _10;
_12 = _16 - (*_4);
_6 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_9 = core::ptr::addr_of_mut!((*_9));
_17 = [(-108081286819516426_i64),2957824385159633464_i64,(-177730499692378321_i64),2813861280404079251_i64,(-2130976923523690392_i64),(-6473390400568635661_i64),(-3914565303958475319_i64),(-5793360172782797223_i64)];
RET = 292459423027465279020782177657233429269_u128 as isize;
(*_9) = (*_7) + (*_4);
Goto(bb1)
}
bb1 = {
_17 = [(-8232247567882135379_i64),1240646213356336922_i64,700105227012637673_i64,6077110200587590069_i64,2134106055401466324_i64,8647114176189130341_i64,5145789267250870237_i64,6405174079099658160_i64];
(*_3) = 6_usize as u64;
RET = -_6;
_21 = 49359684725137898313253564121364198458_u128 as i16;
_14 = core::ptr::addr_of_mut!((*_14));
_5 = !_8;
_20 = ['\u{ca15c}','\u{10c25}','\u{514cc}','\u{100703}','\u{9496}','\u{1a899}','\u{989a7}','\u{479e7}'];
_2 = _1;
(*_9) = !_12;
_16 = !(*_7);
(*_14) = _11 ^ _16;
(*_3) = 236_u8 as u64;
Goto(bb2)
}
bb2 = {
(*_9) = !(*_7);
_7 = _9;
(*_4) = _13;
_13 = _19 as u64;
(*_3) = _12 - _11;
_19 = 498090136_u32;
_22 = 279052586781755872920524910982884186635_u128 as i32;
_23.2 = core::ptr::addr_of!(_15);
(*_14) = _12;
_24.1 = [_15];
(*_9) = _5 ^ (*_4);
_23.1.0 = 0_usize as i128;
(*_7) = _5 & (*_4);
_23.1.0 = (-155633558990860835312877106137301637182_i128);
_16 = 57436_u16 as u64;
(*_14) = _8;
(*_3) = _5 + _12;
_12 = _21 as u64;
(*_4) = (*_3);
(*_7) = (*_4) >> _11;
_15 = !false;
Goto(bb3)
}
bb3 = {
_3 = core::ptr::addr_of_mut!((*_4));
_3 = core::ptr::addr_of_mut!((*_7));
_4 = core::ptr::addr_of_mut!(_11);
_28 = [_19,_19,_19,_19];
_1 = _10;
(*_14) = _5 - (*_4);
_14 = _9;
_16 = RET as u64;
_12 = !_8;
match _23.1.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
184648807930077628150497501294466574274 => bb11,
_ => bb10
}
}
bb4 = {
(*_9) = !(*_7);
_7 = _9;
(*_4) = _13;
_13 = _19 as u64;
(*_3) = _12 - _11;
_19 = 498090136_u32;
_22 = 279052586781755872920524910982884186635_u128 as i32;
_23.2 = core::ptr::addr_of!(_15);
(*_14) = _12;
_24.1 = [_15];
(*_9) = _5 ^ (*_4);
_23.1.0 = 0_usize as i128;
(*_7) = _5 & (*_4);
_23.1.0 = (-155633558990860835312877106137301637182_i128);
_16 = 57436_u16 as u64;
(*_14) = _8;
(*_3) = _5 + _12;
_12 = _21 as u64;
(*_4) = (*_3);
(*_7) = (*_4) >> _11;
_15 = !false;
Goto(bb3)
}
bb5 = {
_17 = [(-8232247567882135379_i64),1240646213356336922_i64,700105227012637673_i64,6077110200587590069_i64,2134106055401466324_i64,8647114176189130341_i64,5145789267250870237_i64,6405174079099658160_i64];
(*_3) = 6_usize as u64;
RET = -_6;
_21 = 49359684725137898313253564121364198458_u128 as i16;
_14 = core::ptr::addr_of_mut!((*_14));
_5 = !_8;
_20 = ['\u{ca15c}','\u{10c25}','\u{514cc}','\u{100703}','\u{9496}','\u{1a899}','\u{989a7}','\u{479e7}'];
_2 = _1;
(*_9) = !_12;
_16 = !(*_7);
(*_14) = _11 ^ _16;
(*_3) = 236_u8 as u64;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_26 = 4798596473994432014_i64 as f64;
(*_3) = (*_4) - _11;
_23.0 = '\u{7681d}';
_18 = _21 as f32;
_24.0 = _18 as i32;
_26 = _23.1.0 as f64;
RET = _6;
_30 = _15;
(*_3) = !_12;
_5 = _11 >> _10;
_18 = _5 as f32;
_17 = [(-7464884043539091048_i64),(-3973680237664677141_i64),5931183933148070413_i64,5874300032410533463_i64,(-6501779970276568028_i64),(-904337991637826693_i64),1715648256668611406_i64,(-7736786153191087108_i64)];
_34.0 = _5;
Call(_3 = fn14(_1, (*_7), (*_7), _12, _34, _4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_37 = (-8223993572380312590_i64);
_7 = core::ptr::addr_of_mut!((*_14));
_2 = _22 as i8;
(*_3) = _10 as u64;
_29 = _23.0;
Goto(bb13)
}
bb13 = {
_8 = (*_14) + (*_14);
_13 = 96_u8 as u64;
_16 = (*_7) << (*_7);
Goto(bb14)
}
bb14 = {
_33 = _10 as isize;
_17 = [_37,_37,_37,_37,_37,_37,_37,_37];
(*_9) = _21 as u64;
_2 = 30_u8 as i8;
_23.0 = _29;
_23.0 = _29;
(*_7) = (*_4);
(*_4) = (*_9);
(*_9) = _11 * _5;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(13_usize, 37_usize, Move(_37), 22_usize, Move(_22), 6_usize, Move(_6), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(13_usize, 34_usize, Move(_34), 10_usize, Move(_10), 5_usize, Move(_5), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(13_usize, 12_usize, Move(_12), 13_usize, Move(_13), 1_usize, Move(_1), 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: i8,mut _2: u64,mut _3: u64,mut _4: u64,mut _5: (u64,),mut _6: *mut u64) -> *mut u64 {
mir! {
type RET = *mut u64;
let _7: [u32; 4];
let _8: u64;
let _9: ();
let _10: ();
{
_5.0 = _3;
_3 = _4;
(*_6) = _3;
_3 = (*_6) | _5.0;
RET = _6;
_4 = (*RET);
RET = core::ptr::addr_of_mut!((*RET));
_5.0 = !(*RET);
_8 = _5.0 << _2;
_6 = RET;
(*_6) = !_2;
_6 = core::ptr::addr_of_mut!(_8);
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(14_usize, 1_usize, Move(_1), 3_usize, Move(_3), 4_usize, Move(_4), 10_usize, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: i8,mut _5: u64,mut _6: u64,mut _7: u64,mut _8: *mut u64,mut _9: *mut u64,mut _10: i8,mut _11: isize,mut _12: i8,mut _13: isize,mut _14: u64,mut _15: i8,mut _16: u64) -> Adt55 {
mir! {
type RET = Adt55;
let _17: ([i64; 8], [i64; 4], (u64,));
let _18: [u8; 3];
let _19: f32;
let _20: i16;
let _21: ();
let _22: ();
{
_9 = core::ptr::addr_of_mut!(_14);
Goto(bb1)
}
bb1 = {
(*_9) = _1 | (*_8);
RET = Adt55::Variant3 { fld0: 6716168291316225010_i64,fld1: _12 };
_4 = _10 << _15;
(*_8) = !_3;
_12 = Field::<i8>(Variant(RET, 3), 1);
_17.2 = (_5,);
_12 = _10 + _4;
_2 = !(*_9);
_11 = _13;
_5 = false as u64;
_2 = _14 * _1;
_4 = 6_usize as i8;
(*_9) = (-701650090_i32) as u64;
_6 = _1;
_16 = !(*_8);
_18 = [233_u8,68_u8,194_u8];
place!(Field::<i64>(Variant(RET, 3), 0)) = 15416_u16 as i64;
Goto(bb2)
}
bb2 = {
Call(_21 = dump_var(15_usize, 10_usize, Move(_10), 3_usize, Move(_3), 7_usize, Move(_7), 12_usize, Move(_12)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_21 = dump_var(15_usize, 5_usize, Move(_5), 2_usize, Move(_2), 6_usize, Move(_6), 22_usize, _22), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: *mut u64,mut _2: *mut u64,mut _3: Adt53,mut _4: u64,mut _5: Adt53,mut _6: Adt53,mut _7: (*mut u64, *mut u16),mut _8: *mut u64,mut _9: *mut u64,mut _10: u64,mut _11: *mut u64,mut _12: u64,mut _13: Adt53,mut _14: *mut u64,mut _15: *mut u64) -> Adt55 {
mir! {
type RET = Adt55;
let _16: (u16,);
let _17: Adt50;
let _18: [i128; 7];
let _19: Adt56;
let _20: [u8; 3];
let _21: isize;
let _22: f64;
let _23: (u16,);
let _24: *const bool;
let _25: i32;
let _26: Adt58;
let _27: i16;
let _28: isize;
let _29: u128;
let _30: [i64; 4];
let _31: (*mut u64, *mut u16);
let _32: Adt58;
let _33: (i128, i64, [u32; 5]);
let _34: i32;
let _35: isize;
let _36: [u32; 3];
let _37: i16;
let _38: u128;
let _39: ();
let _40: ();
{
_9 = core::ptr::addr_of_mut!((*_9));
_11 = core::ptr::addr_of_mut!((*_2));
place!(Field::<[bool; 1]>(Variant(_3, 0), 1)) = [true];
place!(Field::<[bool; 1]>(Variant(_3, 0), 1)) = Field::<[bool; 1]>(Variant(_5, 0), 1);
(*_15) = 150237611667701121916972158935959301989_i128 as u64;
place!(Field::<[bool; 1]>(Variant(_5, 0), 1)) = [true];
place!(Field::<[bool; 1]>(Variant(_13, 0), 1)) = [true];
(*_8) = _4;
place!(Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0)) = _7;
_12 = !_4;
_16 = (44519_u16,);
(*_9) = 246569968567065493458413676093316451638_u128 as u64;
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)) = Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0);
_10 = 45_u8 as u64;
_1 = core::ptr::addr_of_mut!((*_15));
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).1 = core::ptr::addr_of_mut!(_16.0);
_1 = core::ptr::addr_of_mut!((*_1));
(*_15) = _12;
place!(Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0)) = Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0);
(*_1) = _4;
_9 = core::ptr::addr_of_mut!((*_1));
(*_9) = (-1233967746257604762_i64) as u64;
_5 = _3;
place!(Field::<[bool; 1]>(Variant(_6, 0), 1)) = Field::<[bool; 1]>(Variant(_13, 0), 1);
place!(Field::<[bool; 1]>(Variant(_3, 0), 1)) = [false];
_17.fld5 = !(-3006347228885803989_i64);
_17.fld2 = [177_u8,115_u8,58_u8];
Goto(bb1)
}
bb1 = {
_17.fld3 = [(-136271272778193847406211975150126067899_i128),99091927269504391200298546593637431329_i128,158832728528348876761301539030463965401_i128,(-56375556157233913244210772358652675410_i128),46354416069317601683679382148934914973_i128,162073644174083824770897168359688817163_i128,(-125278089241558243604325296793261956981_i128)];
place!(Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0)) = (Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0).0, Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0).1);
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).0 = _1;
match _16.0 {
0 => bb2,
1 => bb3,
2 => bb4,
44519 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_1 = core::ptr::addr_of_mut!((*_8));
(*_14) = _12 | _4;
(*_8) = _12;
_17.fld0.0 = ((-93249039377618467251021533272424443781_i128),);
Goto(bb7)
}
bb7 = {
_6 = _5;
(*_11) = _12 & _12;
_17.fld5 = !4261151226811800866_i64;
_17.fld2 = [1_u8,176_u8,151_u8];
place!(Field::<[bool; 1]>(Variant(_13, 0), 1)) = [true];
(*_2) = _17.fld5 as u64;
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).1 = Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0).1;
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).0 = _14;
_8 = core::ptr::addr_of_mut!((*_2));
SetDiscriminant(_13, 1);
_10 = !_12;
place!(Field::<(*mut u64, *mut u16)>(Variant(_5, 0), 0)).1 = Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0).1;
(*_11) = !_4;
match _16.0 {
44519 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).1 = Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0).1;
(*_11) = _12;
RET = Adt55::Variant3 { fld0: _17.fld5,fld1: 122_i8 };
place!(Field::<(*mut u64, *mut u16)>(Variant(_5, 0), 0)).1 = core::ptr::addr_of_mut!(place!(Field::<(u128, u16)>(Variant(_13, 1), 0)).1);
(*_14) = _4 + _4;
Call(place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).1 = fn17(_14, _14, _14, _14, (*_9), Field::<(*mut u64, *mut u16)>(Variant(_5, 0), 0).0, _15, Field::<(*mut u64, *mut u16)>(Variant(_5, 0), 0), _15), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
(*_11) = !_4;
_13 = _5;
(*_9) = 225146767001593693028625752110058147105_u128 as u64;
_10 = 4_usize as u64;
_1 = core::ptr::addr_of_mut!((*_14));
(*_1) = 17979122174457387760_usize as u64;
place!(Field::<i8>(Variant(RET, 3), 1)) = (-106_i8) & 100_i8;
_13 = Adt53::Variant0 { fld0: _7,fld1: Field::<[bool; 1]>(Variant(_5, 0), 1) };
_13 = _3;
(*_2) = _12;
place!(Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0)) = _7;
_21 = -9223372036854775807_isize;
_7 = Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0);
_3 = _6;
_13 = _6;
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)) = Field::<(*mut u64, *mut u16)>(Variant(_5, 0), 0);
(*_2) = _12;
_17.fld0.0 = ((-33819101514910991946907631746940473041_i128),);
place!(Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0)) = (_9, Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0).1);
place!(Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0)) = (_1, Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0).1);
place!(Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0)).0 = core::ptr::addr_of_mut!((*_1));
Goto(bb11)
}
bb11 = {
place!(Field::<i64>(Variant(RET, 3), 0)) = -_17.fld5;
SetDiscriminant(_5, 1);
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).1 = Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0).1;
_18 = [_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0];
match _17.fld0.0.0 {
306463265406027471516466975684827738415 => bb12,
_ => bb2
}
}
bb12 = {
_5 = Adt53::Variant0 { fld0: Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0),fld1: Field::<[bool; 1]>(Variant(_6, 0), 1) };
(*_1) = _21 as u64;
_1 = _9;
(*_8) = !_4;
place!(Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0)).0 = Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0).0;
_22 = (-37823112_i32) as f64;
_28 = _21;
_5 = Adt53::Variant0 { fld0: Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0),fld1: Field::<[bool; 1]>(Variant(_3, 0), 1) };
_25 = 639384483_i32 | 38135265_i32;
SetDiscriminant(_5, 1);
_8 = core::ptr::addr_of_mut!((*_8));
_3 = _13;
Call(_27 = core::intrinsics::bswap(22430_i16), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
(*_14) = !_12;
_1 = core::ptr::addr_of_mut!((*_14));
_20 = _17.fld2;
place!(Field::<[bool; 1]>(Variant(_6, 0), 1)) = [false];
_5 = _6;
(*_11) = _10;
(*_8) = _4 | _10;
(*_1) = !_10;
_17.fld3 = [_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0,_17.fld0.0.0];
_31 = (_8, Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0).1);
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)).1 = core::ptr::addr_of_mut!(_16.0);
_31 = Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0);
_30 = [_17.fld5,Field::<i64>(Variant(RET, 3), 0),_17.fld5,_17.fld5];
_9 = core::ptr::addr_of_mut!((*_11));
place!(Field::<i64>(Variant(RET, 3), 0)) = _17.fld5 * _17.fld5;
_17.fld0.0 = ((-73762292669733094896881735262767080301_i128),);
place!(Field::<(*mut u64, *mut u16)>(Variant(_13, 0), 0)).1 = core::ptr::addr_of_mut!(_23.0);
SetDiscriminant(_3, 1);
_4 = _22 as u64;
place!(Field::<(*mut u64, *mut u16)>(Variant(_5, 0), 0)) = _7;
place!(Field::<i8>(Variant(RET, 3), 1)) = (-59_i8) * (-54_i8);
Goto(bb14)
}
bb14 = {
_22 = _10 as f64;
(*_2) = '\u{74c5}' as u64;
_3 = _5;
_16.0 = 23500_u16;
place!(Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0)) = Field::<(*mut u64, *mut u16)>(Variant(_6, 0), 0);
_18 = _17.fld3;
_7 = Field::<(*mut u64, *mut u16)>(Variant(_3, 0), 0);
_33.2 = [4024332417_u32,2021156982_u32,4219900797_u32,398139354_u32,594959990_u32];
_17.fld5 = Field::<i64>(Variant(RET, 3), 0) >> _12;
(*_11) = !_12;
_35 = _28 >> (*_9);
place!(Field::<[bool; 1]>(Variant(_3, 0), 1)) = [false];
(*_1) = _12;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(16_usize, 21_usize, Move(_21), 27_usize, Move(_27), 20_usize, Move(_20), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(16_usize, 30_usize, Move(_30), 4_usize, Move(_4), 40_usize, _40, 40_usize, _40), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: *mut u64,mut _2: *mut u64,mut _3: *mut u64,mut _4: *mut u64,mut _5: u64,mut _6: *mut u64,mut _7: *mut u64,mut _8: (*mut u64, *mut u16),mut _9: *mut u64) -> *mut u16 {
mir! {
type RET = *mut u16;
let _10: f64;
let _11: [i64; 4];
let _12: Adt61;
let _13: ();
let _14: ();
{
(*_6) = 5148941527239312806_i64 as u64;
(*_9) = (-9223372036854775808_isize) as u64;
RET = _8.1;
_10 = 4018979545780786214_i64 as f64;
(*_3) = _5;
(*_1) = _5;
_2 = core::ptr::addr_of_mut!((*_6));
_7 = core::ptr::addr_of_mut!((*_9));
_8.1 = core::ptr::addr_of_mut!((*RET));
(*_7) = !_5;
Goto(bb1)
}
bb1 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: *const bool,mut _2: u64) -> (i128, [i64; 4], i128) {
mir! {
type RET = (i128, [i64; 4], i128);
let _3: (u64,);
let _4: bool;
let _5: [u16; 5];
let _6: Adt60;
let _7: *const [i64; 5];
let _8: char;
let _9: isize;
let _10: bool;
let _11: [i64; 5];
let _12: isize;
let _13: [u32; 3];
let _14: char;
let _15: (u128, u16);
let _16: [i64; 8];
let _17: ([i64; 8], [i64; 4], (u64,));
let _18: i16;
let _19: (i128, [i64; 4], i128);
let _20: ((i128,), *const bool);
let _21: u64;
let _22: Adt54;
let _23: i64;
let _24: u16;
let _25: [i64; 4];
let _26: (i128, [i64; 4], i128);
let _27: i16;
let _28: Adt63;
let _29: u8;
let _30: f32;
let _31: (i8,);
let _32: [u32; 4];
let _33: [bool; 1];
let _34: ();
let _35: ();
{
RET.0 = -(-53066623040148617729785427514426282018_i128);
RET.1 = [4587311424246329449_i64,(-1258184027336575957_i64),(-2418398738517617892_i64),(-4484992004534171797_i64)];
RET.2 = RET.0 & RET.0;
RET.0 = RET.2;
RET.0 = RET.2;
RET.0 = -RET.2;
RET.0 = RET.2;
RET.0 = !RET.2;
RET.0 = RET.2 + RET.2;
_4 = !(*_1);
_3 = (_2,);
_1 = core::ptr::addr_of!((*_1));
_3.0 = 22244_i16 as u64;
RET.2 = RET.0 >> _2;
RET.1 = [3699898602096493046_i64,4677823368007173330_i64,6479490803925858640_i64,(-7514317850251056658_i64)];
(*_1) = _4;
_2 = 31290_i16 as u64;
RET.2 = RET.0 & RET.0;
(*_1) = !_4;
Goto(bb1)
}
bb1 = {
_6.fld1 = !63560_u16;
_6.fld0 = (-9223372036854775808_isize) as f32;
_6.fld0 = 5_i8 as f32;
RET.2 = !RET.0;
RET.2 = RET.0;
_3.0 = _2 | _2;
RET.1 = [(-6801029334855210223_i64),1771732461689521654_i64,2313677341397968720_i64,(-3221540192086116699_i64)];
RET.2 = !RET.0;
_5 = [_6.fld1,_6.fld1,_6.fld1,_6.fld1,_6.fld1];
RET.0 = RET.2 << _6.fld1;
_6.fld2.0 = _3.0;
_8 = '\u{c7697}';
_2 = _3.0 >> RET.0;
_1 = core::ptr::addr_of!((*_1));
_1 = core::ptr::addr_of!((*_1));
_4 = !(*_1);
_6.fld2 = (_3.0,);
RET.2 = 1404765059_u32 as i128;
Goto(bb2)
}
bb2 = {
_3 = _6.fld2;
_6.fld2.0 = _2 - _2;
_10 = RET.0 != RET.0;
_6.fld0 = 1948281368_i32 as f32;
(*_1) = _10 <= _10;
RET.2 = !RET.0;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _4;
_6.fld3 = Adt51::Variant0 { fld0: RET };
_4 = (*_1);
_6.fld2 = (_2,);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = [(-2862213493698422372_i64),(-4805786584416964781_i64),7887885077684182093_i64,300692930115779676_i64];
Goto(bb3)
}
bb3 = {
_3.0 = _6.fld2.0;
RET.1 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1;
_9 = !(-7_isize);
SetDiscriminant(_6.fld3, 0);
_4 = (*_1) < (*_1);
_7 = core::ptr::addr_of!(_11);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).0 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2;
_10 = (*_1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = RET.1;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
_6.fld2 = (_2,);
Goto(bb4)
}
bb4 = {
(*_7) = [(-7495008960555937061_i64),8790875756341322831_i64,6202067744581753905_i64,4618958665120186409_i64,1525305024978108094_i64];
_4 = !(*_1);
RET.2 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0;
_10 = _4;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
_6.fld2.0 = _2 + _3.0;
_11 = [2152420003335213296_i64,(-8478438981026969760_i64),(-3180928530903024146_i64),6548456321061944274_i64,(-7749111984523986805_i64)];
RET.2 = !RET.0;
_2 = !_6.fld2.0;
_6.fld3 = Adt51::Variant0 { fld0: RET };
(*_7) = [5144634270332157607_i64,3502506655932884294_i64,(-5040741582225099099_i64),(-3665275900214829951_i64),(-5024522934689195517_i64)];
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).2 = _6.fld0 as i128;
(*_1) = !_4;
_6.fld1 = 23329_u16;
_8 = '\u{40d9b}';
(*_7) = [7238167944401356605_i64,6851862561094912260_i64,4652635535084359294_i64,2041377555382127699_i64,(-2108317833523270841_i64)];
_11 = [(-5132378155580706918_i64),(-3206729999489281429_i64),5496499584932057659_i64,(-1313240999927942586_i64),(-85803231936962284_i64)];
(*_7) = [6497319401644904785_i64,(-7458462843701907739_i64),2653696174238096667_i64,(-7266180317600873977_i64),1218622752647470568_i64];
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)) = (RET.2, RET.1, RET.2);
_16 = [(-3100002431238785276_i64),6739425728243930674_i64,3800337150501383651_i64,(-2494657768754401341_i64),2163268775106632891_i64,697694526452101802_i64,(-381365236729591661_i64),6940153785404533459_i64];
(*_1) = _4;
RET.0 = -Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2);
_7 = core::ptr::addr_of!((*_7));
_7 = core::ptr::addr_of!((*_7));
Goto(bb5)
}
bb5 = {
(*_7) = [(-5488661529506861523_i64),7572364180472002830_i64,6998394647366798545_i64,8433929629817494834_i64,470619900443701843_i64];
_7 = core::ptr::addr_of!((*_7));
_12 = _9;
place!(Field::<u64>(Variant(_6.fld3, 1), 0)) = _6.fld2.0 << _2;
(*_1) = !_4;
(*_1) = _10;
_15.1 = !_6.fld1;
(*_1) = Field::<u64>(Variant(_6.fld3, 1), 0) <= _3.0;
place!(Field::<*mut u64>(Variant(_6.fld3, 1), 5)) = core::ptr::addr_of_mut!(_2);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1)).1 = [1144568938607889595_i64,8092558779439988026_i64,8900374824139914252_i64,5227641331439397204_i64];
match _6.fld1 {
0 => bb3,
1 => bb4,
23329 => bb7,
_ => bb6
}
}
bb6 = {
_3.0 = _6.fld2.0;
RET.1 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1;
_9 = !(-7_isize);
SetDiscriminant(_6.fld3, 0);
_4 = (*_1) < (*_1);
_7 = core::ptr::addr_of!(_11);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).0 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2;
_10 = (*_1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = RET.1;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
_6.fld2 = (_2,);
Goto(bb4)
}
bb7 = {
place!(Field::<[u8; 3]>(Variant(_6.fld3, 1), 6)) = [14_u8,193_u8,112_u8];
(*_1) = _10;
_3.0 = 3173344580_u32 as u64;
_17.1 = RET.1;
_9 = -_12;
RET.1 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).1;
_17.0 = [9079607207883378075_i64,(-7937397268790337947_i64),(-8741546133981485549_i64),4354537893859748319_i64,1561942968137638918_i64,2062425383729563646_i64,8121296388207419706_i64,1268280260995655013_i64];
_13 = [4151239735_u32,895859239_u32,561408635_u32];
RET = (155802525189473627772750952639362326451_i128, _17.1, (-55614283774971092396944304902915333781_i128));
place!(Field::<[u8; 3]>(Variant(_6.fld3, 1), 6)) = [39_u8,171_u8,181_u8];
place!(Field::<[u8; 3]>(Variant(_6.fld3, 1), 6)) = [208_u8,71_u8,43_u8];
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1)) = (RET.0, _17.1, RET.2);
RET.0 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).0;
_5 = [_15.1,_15.1,_15.1,_15.1,_6.fld1];
(*_1) = !_10;
_19 = (RET.2, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).1, RET.2);
_16 = [(-3793842536314225280_i64),4268613685928271807_i64,(-5611222648535233040_i64),940776412672584114_i64,6823223557341869556_i64,462184748304688155_i64,1062336739936969271_i64,1147565825187865006_i64];
place!(Field::<[i16; 4]>(Variant(_6.fld3, 1), 2)) = [12317_i16,8119_i16,(-12826_i16),(-12966_i16)];
_8 = '\u{2b64a}';
_11 = [(-2420201058145532560_i64),8845098947766923571_i64,8323872208714843198_i64,(-8006869168630360407_i64),(-534852396236347556_i64)];
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1)) = (RET.2, RET.1, _19.2);
match RET.2 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
284668083145967371066430302528852877675 => bb10,
_ => bb9
}
}
bb8 = {
_3 = _6.fld2;
_6.fld2.0 = _2 - _2;
_10 = RET.0 != RET.0;
_6.fld0 = 1948281368_i32 as f32;
(*_1) = _10 <= _10;
RET.2 = !RET.0;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _4;
_6.fld3 = Adt51::Variant0 { fld0: RET };
_4 = (*_1);
_6.fld2 = (_2,);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = [(-2862213493698422372_i64),(-4805786584416964781_i64),7887885077684182093_i64,300692930115779676_i64];
Goto(bb3)
}
bb9 = {
_3.0 = _6.fld2.0;
RET.1 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1;
_9 = !(-7_isize);
SetDiscriminant(_6.fld3, 0);
_4 = (*_1) < (*_1);
_7 = core::ptr::addr_of!(_11);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).0 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2;
_10 = (*_1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = RET.1;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
_6.fld2 = (_2,);
Goto(bb4)
}
bb10 = {
_18 = (-20465_i16) + (-23964_i16);
_4 = !(*_1);
_7 = core::ptr::addr_of!(_11);
_19 = (RET.2, RET.1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).0);
_19.0 = 2189072231_u32 as i128;
_6.fld1 = 266850081343123499168832522521142271192_u128 as u16;
_7 = core::ptr::addr_of!((*_7));
RET.2 = -Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).2;
_4 = _9 < _12;
(*_7) = [193954795466131627_i64,4567565061802345862_i64,(-8102089616405740312_i64),3752395628913920052_i64,1999810816518889382_i64];
place!(Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3)).1.0 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).0 + Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).2;
_5 = [_15.1,_15.1,_15.1,_15.1,_6.fld1];
_6.fld1 = !_15.1;
place!(Field::<[i128; 7]>(Variant(_6.fld3, 1), 4)) = [Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3).1.0,Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3).1.0,Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).2,Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).0,Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3).1.0,Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).0,Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).2];
Goto(bb11)
}
bb11 = {
_17.2 = _6.fld2;
_15.0 = 226808821557216675893388456889688921719_u128;
_19.0 = _18 as i128;
_17.2 = (Field::<u64>(Variant(_6.fld3, 1), 0),);
_5 = [_6.fld1,_6.fld1,_15.1,_6.fld1,_15.1];
_13 = [3078585846_u32,2854683331_u32,3878418244_u32];
_22.fld0.0 = (-1408948356_i32) + 567741129_i32;
_22.fld6 = core::ptr::addr_of!(_15.0);
_15.0 = 261228102836332183108705981605660245212_u128 >> _17.2.0;
Call(_15.1 = core::intrinsics::transmute(_6.fld1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_22.fld3 = (93_i8,);
_14 = _8;
_19.0 = _19.2;
_22.fld7 = 198_u8 as i128;
_24 = _6.fld1 & _15.1;
place!(Field::<[u8; 3]>(Variant(_6.fld3, 1), 6)) = [164_u8,69_u8,239_u8];
_6.fld2.0 = _17.2.0;
_6.fld2 = (Field::<u64>(Variant(_6.fld3, 1), 0),);
_14 = _8;
_21 = _6.fld1 as u64;
_22.fld0.1 = [(*_1)];
_25 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1).1;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1)).0 = !_22.fld7;
Goto(bb13)
}
bb13 = {
place!(Field::<[u8; 3]>(Variant(_6.fld3, 1), 6)) = [121_u8,73_u8,204_u8];
_22.fld0.1 = [(*_1)];
_15.0 = 3835647948_u32 as u128;
(*_7) = [6263537336751213305_i64,7692300153617106068_i64,(-2182621771338803811_i64),1159985947895495903_i64,(-4607720815334694280_i64)];
_27 = 9185103908219481931_i64 as i16;
_15.1 = _22.fld3.0 as u16;
_20 = (Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3).1, _1);
place!(Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3)).2 = core::ptr::addr_of!((*_1));
place!(Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3)).0 = _14;
_22.fld3 = ((-32_i8),);
match _19.0 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
284668083145967371066430302528852877675 => bb19,
_ => bb18
}
}
bb14 = {
_3.0 = _6.fld2.0;
RET.1 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1;
_9 = !(-7_isize);
SetDiscriminant(_6.fld3, 0);
_4 = (*_1) < (*_1);
_7 = core::ptr::addr_of!(_11);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).0 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2;
_10 = (*_1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = RET.1;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
_6.fld2 = (_2,);
Goto(bb4)
}
bb15 = {
_17.2 = _6.fld2;
_15.0 = 226808821557216675893388456889688921719_u128;
_19.0 = _18 as i128;
_17.2 = (Field::<u64>(Variant(_6.fld3, 1), 0),);
_5 = [_6.fld1,_6.fld1,_15.1,_6.fld1,_15.1];
_13 = [3078585846_u32,2854683331_u32,3878418244_u32];
_22.fld0.0 = (-1408948356_i32) + 567741129_i32;
_22.fld6 = core::ptr::addr_of!(_15.0);
_15.0 = 261228102836332183108705981605660245212_u128 >> _17.2.0;
Call(_15.1 = core::intrinsics::transmute(_6.fld1), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
(*_7) = [(-5488661529506861523_i64),7572364180472002830_i64,6998394647366798545_i64,8433929629817494834_i64,470619900443701843_i64];
_7 = core::ptr::addr_of!((*_7));
SetDiscriminant(_6.fld3, 1);
_12 = _9;
place!(Field::<u64>(Variant(_6.fld3, 1), 0)) = _6.fld2.0 << _2;
(*_1) = !_4;
(*_1) = _10;
_15.1 = !_6.fld1;
(*_1) = Field::<u64>(Variant(_6.fld3, 1), 0) <= _3.0;
place!(Field::<*mut u64>(Variant(_6.fld3, 1), 5)) = core::ptr::addr_of_mut!(_2);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1)).1 = [1144568938607889595_i64,8092558779439988026_i64,8900374824139914252_i64,5227641331439397204_i64];
match _6.fld1 {
0 => bb3,
1 => bb4,
23329 => bb7,
_ => bb6
}
}
bb17 = {
_3.0 = _6.fld2.0;
RET.1 = Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1;
_9 = !(-7_isize);
SetDiscriminant(_6.fld3, 0);
_4 = (*_1) < (*_1);
_7 = core::ptr::addr_of!(_11);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).0 = !Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2;
_10 = (*_1);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = RET.1;
RET = (Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).2, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).1, Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0).0);
_6.fld2 = (_2,);
Goto(bb4)
}
bb18 = {
_3 = _6.fld2;
_6.fld2.0 = _2 - _2;
_10 = RET.0 != RET.0;
_6.fld0 = 1948281368_i32 as f32;
(*_1) = _10 <= _10;
RET.2 = !RET.0;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _4;
_6.fld3 = Adt51::Variant0 { fld0: RET };
_4 = (*_1);
_6.fld2 = (_2,);
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).1 = [(-2862213493698422372_i64),(-4805786584416964781_i64),7887885077684182093_i64,300692930115779676_i64];
Goto(bb3)
}
bb19 = {
RET.1 = [(-1249655164522605269_i64),(-2919697515156880407_i64),(-1831580546043164159_i64),(-7889040605102105920_i64)];
_31.0 = -_22.fld3.0;
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 1), 1)) = (Field::<(char, (i128,), *const bool)>(Variant(_6.fld3, 1), 3).1.0, RET.1, _19.2);
_6.fld3 = Adt51::Variant0 { fld0: RET };
place!(Field::<(i128, [i64; 4], i128)>(Variant(_6.fld3, 0), 0)).0 = -RET.0;
Goto(bb20)
}
bb20 = {
Call(_34 = dump_var(18_usize, 18_usize, Move(_18), 24_usize, Move(_24), 4_usize, Move(_4), 9_usize, Move(_9)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_34 = dump_var(18_usize, 2_usize, Move(_2), 27_usize, Move(_27), 11_usize, Move(_11), 25_usize, Move(_25)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_34 = dump_var(18_usize, 13_usize, Move(_13), 10_usize, Move(_10), 35_usize, _35, 35_usize, _35), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [bool; 1],mut _2: [i64; 4],mut _3: i128,mut _4: Adt50,mut _5: (u64,),mut _6: isize,mut _7: (i128,),mut _8: Adt52,mut _9: u128,mut _10: [u16; 5],mut _11: u128,mut _12: (u64,)) -> char {
mir! {
type RET = char;
let _13: [i64; 5];
let _14: i16;
let _15: isize;
let _16: (i128, [i64; 4], i128);
let _17: u16;
let _18: u8;
let _19: [u32; 4];
let _20: [u8; 3];
let _21: i16;
let _22: i16;
let _23: [i64; 8];
let _24: [i128; 7];
let _25: i32;
let _26: bool;
let _27: char;
let _28: Adt63;
let _29: bool;
let _30: (i8,);
let _31: ();
let _32: ();
{
RET = _8.fld1;
_9 = !_11;
_7.0 = !_3;
_6 = (-128_i8) as isize;
_7.0 = -_4.fld0.0.0;
_7 = (_3,);
_10 = [55558_u16,15548_u16,14223_u16,57253_u16,61598_u16];
_13 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_4.fld5 = (-2573682734746240092_i64);
_9 = _11;
Goto(bb1)
}
bb1 = {
_4.fld0.0.0 = 15262_i16 as i128;
_10 = [49737_u16,27071_u16,43011_u16,18589_u16,23994_u16];
_2 = _4.fld4;
_10 = _4.fld1;
_9 = false as u128;
_8.fld2 = [39191_u16,30025_u16,61619_u16,38909_u16,60419_u16];
RET = _8.fld1;
_7.0 = -_3;
_4.fld3 = [_7.0,_7.0,_7.0,_3,_7.0,_7.0,_3];
_4.fld5 = 3544338469952634531_i64;
_6 = !(-9223372036854775808_isize);
_16.1 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_4.fld0.0.0 = _7.0;
_16 = (_7.0, _2, _4.fld0.0.0);
RET = _8.fld1;
_8.fld1 = RET;
_1 = [false];
_15 = -_6;
_1 = [false];
_7 = (_16.0,);
Goto(bb2)
}
bb2 = {
_14 = (-25449_i16);
_11 = !_9;
_7.0 = !_16.0;
_3 = -_7.0;
_4.fld1 = _10;
_18 = _6 as u8;
_6 = _15;
RET = _8.fld1;
_4.fld1 = [1937_u16,28582_u16,43038_u16,40347_u16,3072_u16];
_7.0 = _16.0;
_8.fld0.1 = core::ptr::addr_of_mut!(_17);
_18 = !8_u8;
_14 = (-30300_i16);
_4.fld4 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_17 = 49266_u16;
_15 = _6;
_4.fld1 = [_17,_17,_17,_17,_17];
_15 = _6 >> _16.2;
_4.fld5 = _14 as i64;
_21 = _12.0 as i16;
_4.fld0.0 = (_16.2,);
_7.0 = _16.2 & _3;
_18 = _17 as u8;
_16.2 = !_4.fld0.0.0;
match _14 {
0 => bb1,
340282366920938463463374607431768181156 => bb4,
_ => bb3
}
}
bb3 = {
_4.fld0.0.0 = 15262_i16 as i128;
_10 = [49737_u16,27071_u16,43011_u16,18589_u16,23994_u16];
_2 = _4.fld4;
_10 = _4.fld1;
_9 = false as u128;
_8.fld2 = [39191_u16,30025_u16,61619_u16,38909_u16,60419_u16];
RET = _8.fld1;
_7.0 = -_3;
_4.fld3 = [_7.0,_7.0,_7.0,_3,_7.0,_7.0,_3];
_4.fld5 = 3544338469952634531_i64;
_6 = !(-9223372036854775808_isize);
_16.1 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_4.fld0.0.0 = _7.0;
_16 = (_7.0, _2, _4.fld0.0.0);
RET = _8.fld1;
_8.fld1 = RET;
_1 = [false];
_15 = -_6;
_1 = [false];
_7 = (_16.0,);
Goto(bb2)
}
bb4 = {
_14 = -_21;
_5.0 = _12.0 >> _12.0;
_16 = (_7.0, _2, _7.0);
_3 = _7.0;
_5 = _12;
Goto(bb5)
}
bb5 = {
_19 = [132586514_u32,1383011726_u32,2761952925_u32,4215944788_u32];
RET = _8.fld1;
_23 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5,_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_8.fld0.0 = core::ptr::addr_of_mut!(_5.0);
_3 = _17 as i128;
_12 = _5;
_2 = _16.1;
_20 = [_18,_18,_18];
match _17 {
0 => bb3,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
49266 => bb12,
_ => bb11
}
}
bb6 = {
_14 = -_21;
_5.0 = _12.0 >> _12.0;
_16 = (_7.0, _2, _7.0);
_3 = _7.0;
_5 = _12;
Goto(bb5)
}
bb7 = {
_4.fld0.0.0 = 15262_i16 as i128;
_10 = [49737_u16,27071_u16,43011_u16,18589_u16,23994_u16];
_2 = _4.fld4;
_10 = _4.fld1;
_9 = false as u128;
_8.fld2 = [39191_u16,30025_u16,61619_u16,38909_u16,60419_u16];
RET = _8.fld1;
_7.0 = -_3;
_4.fld3 = [_7.0,_7.0,_7.0,_3,_7.0,_7.0,_3];
_4.fld5 = 3544338469952634531_i64;
_6 = !(-9223372036854775808_isize);
_16.1 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_4.fld0.0.0 = _7.0;
_16 = (_7.0, _2, _4.fld0.0.0);
RET = _8.fld1;
_8.fld1 = RET;
_1 = [false];
_15 = -_6;
_1 = [false];
_7 = (_16.0,);
Goto(bb2)
}
bb8 = {
_14 = (-25449_i16);
_11 = !_9;
_7.0 = !_16.0;
_3 = -_7.0;
_4.fld1 = _10;
_18 = _6 as u8;
_6 = _15;
RET = _8.fld1;
_4.fld1 = [1937_u16,28582_u16,43038_u16,40347_u16,3072_u16];
_7.0 = _16.0;
_8.fld0.1 = core::ptr::addr_of_mut!(_17);
_18 = !8_u8;
_14 = (-30300_i16);
_4.fld4 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_17 = 49266_u16;
_15 = _6;
_4.fld1 = [_17,_17,_17,_17,_17];
_15 = _6 >> _16.2;
_4.fld5 = _14 as i64;
_21 = _12.0 as i16;
_4.fld0.0 = (_16.2,);
_7.0 = _16.2 & _3;
_18 = _17 as u8;
_16.2 = !_4.fld0.0.0;
match _14 {
0 => bb1,
340282366920938463463374607431768181156 => bb4,
_ => bb3
}
}
bb9 = {
_4.fld0.0.0 = 15262_i16 as i128;
_10 = [49737_u16,27071_u16,43011_u16,18589_u16,23994_u16];
_2 = _4.fld4;
_10 = _4.fld1;
_9 = false as u128;
_8.fld2 = [39191_u16,30025_u16,61619_u16,38909_u16,60419_u16];
RET = _8.fld1;
_7.0 = -_3;
_4.fld3 = [_7.0,_7.0,_7.0,_3,_7.0,_7.0,_3];
_4.fld5 = 3544338469952634531_i64;
_6 = !(-9223372036854775808_isize);
_16.1 = [_4.fld5,_4.fld5,_4.fld5,_4.fld5];
_4.fld0.0.0 = _7.0;
_16 = (_7.0, _2, _4.fld0.0.0);
RET = _8.fld1;
_8.fld1 = RET;
_1 = [false];
_15 = -_6;
_1 = [false];
_7 = (_16.0,);
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_6 = _15;
_4.fld3 = [_4.fld0.0.0,_16.2,_16.0,_7.0,_4.fld0.0.0,_4.fld0.0.0,_16.2];
_15 = _6 + _6;
_1 = [false];
_22 = _21;
_8.fld1 = RET;
_16.0 = !_16.2;
_20 = [_18,_18,_18];
_22 = (-1533640439_i32) as i16;
_16.2 = (-102_i8) as i128;
_11 = _18 as u128;
_10 = [_17,_17,_17,_17,_17];
RET = _8.fld1;
_5 = _12;
_4.fld1 = _8.fld2;
_5.0 = _12.0;
_19 = [3201050456_u32,506219409_u32,2430372904_u32,2123856752_u32];
_1 = [false];
RET = _8.fld1;
RET = _8.fld1;
_17 = 10810_u16 - 18870_u16;
_7.0 = _16.0 & _16.0;
Goto(bb13)
}
bb13 = {
RET = _8.fld1;
_4.fld1 = _8.fld2;
_16.0 = _17 as i128;
_3 = _7.0 >> _6;
_5.0 = _12.0;
_27 = RET;
_20 = [_18,_18,_18];
_8.fld1 = RET;
_6 = _15;
_14 = _21;
_21 = _14 * _14;
_20 = _4.fld2;
_15 = !_6;
_25 = !391900073_i32;
Goto(bb14)
}
bb14 = {
_25 = (-478500304_i32) ^ 882894146_i32;
_18 = _7.0 as u8;
_28 = Adt63::Variant2 { fld0: _10,fld1: _5.0 };
_8.fld0.1 = core::ptr::addr_of_mut!(_17);
_8.fld0.0 = core::ptr::addr_of_mut!(_12.0);
_24 = _4.fld3;
_15 = _21 as isize;
_26 = _7.0 > _7.0;
_27 = _8.fld1;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(19_usize, 21_usize, Move(_21), 17_usize, Move(_17), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(19_usize, 26_usize, Move(_26), 24_usize, Move(_24), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(19_usize, 13_usize, Move(_13), 5_usize, Move(_5), 25_usize, Move(_25), 22_usize, Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(318866731431929788418796740340072538753_u128));
                
            }
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: ([i64; 8], [i64; 4], (u64,)),
fld1: [char; 8],
fld2: (char, (i128,), *const bool),
fld3: i8,

},
Variant1{
fld0: [char; 8],
fld1: [u16; 5],

},
Variant2{
fld0: u32,
fld1: [i64; 4],
fld2: isize,
fld3: i8,
fld4: [u16; 5],
fld5: u64,
fld6: [u8; 3],

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: [i64; 4],
fld1: f64,
fld2: [bool; 1],
fld3: u8,
fld4: ((i128,), *const bool),
fld5: *const bool,
fld6: [u8; 3],
fld7: Adt47,

},
Variant1{
fld0: (u64,),

},
Variant2{
fld0: (i128,),
fld1: (i32, [bool; 1]),
fld2: [u32; 5],
fld3: i8,
fld4: i16,
fld5: u8,
fld6: u128,
fld7: [u16; 5],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: [u32; 5],
fld1: char,
fld2: i128,
fld3: [i128; 7],
fld4: i16,
fld5: f64,

},
Variant1{
fld0: i16,
fld1: (char, (i128,), *const bool),
fld2: *mut i16,

},
Variant2{
fld0: [i64; 4],
fld1: (i8,),
fld2: f64,
fld3: u16,
fld4: (i32, [bool; 1]),
fld5: i32,
fld6: (i128,),

},
Variant3{
fld0: *const [i64; 5],
fld1: *const u128,
fld2: (i128, [i64; 4], i128),
fld3: [i64; 4],
fld4: [i128; 7],
fld5: [i16; 4],

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: ((i128,), *const bool),
fld1: [u16; 5],
fld2: [u8; 3],
fld3: [i128; 7],
fld4: [i64; 4],
fld5: i64,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: (i128, [i64; 4], i128),

},
Variant1{
fld0: u64,
fld1: (i128, [i64; 4], i128),
fld2: [i16; 4],
fld3: (char, (i128,), *const bool),
fld4: [i128; 7],
fld5: *mut u64,
fld6: [u8; 3],

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: (*mut u64, *mut u16),
fld1: char,
fld2: [u16; 5],
}
#[derive(Debug,Copy,Clone)]
pub enum Adt53 {
Variant0{
fld0: (*mut u64, *mut u16),
fld1: [bool; 1],

},
Variant1{
fld0: (u128, u16),
fld1: *const u128,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: (i32, [bool; 1]),
fld1: char,
fld2: *mut u64,
fld3: (i8,),
fld4: [u32; 4],
fld5: Adt53,
fld6: *const u128,
fld7: i128,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt55 {
Variant0{
fld0: Adt54,
fld1: [char; 8],

},
Variant1{
fld0: bool,
fld1: *mut u64,
fld2: *const u128,
fld3: [u32; 5],

},
Variant2{
fld0: (*mut u64, *mut u16),
fld1: Adt54,
fld2: (char, (i128,), *const bool),

},
Variant3{
fld0: i64,
fld1: i8,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt56 {
Variant0{
fld0: i32,

},
Variant1{
fld0: [u32; 5],

},
Variant2{
fld0: *mut u64,
fld1: usize,
fld2: *mut i16,
fld3: (char, (i128,), *const bool),
fld4: [i64; 8],

},
Variant3{
fld0: [u32; 4],
fld1: (i8,),

}}
#[derive(Debug)]
pub struct Adt57 {
fld0: Adt51,
fld1: *const u128,
}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: [bool; 1],
fld1: *mut u64,
fld2: Adt54,
fld3: usize,

},
Variant1{
fld0: (u128, u16),

},
Variant2{
fld0: [u16; 5],

},
Variant3{
fld0: i32,
fld1: [char; 8],
fld2: [u32; 5],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: (u64,),
fld1: [u32; 3],
fld2: [u32; 4],
fld3: Adt49,
fld4: i16,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: f32,
fld1: u16,
fld2: (u64,),
fld3: Adt51,
}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: Adt48,
fld1: [u32; 4],
fld2: [u16; 5],
fld3: [i64; 4],
fld4: u32,
fld5: [u8; 3],

},
Variant1{
fld0: (i128, i64, [u32; 5]),
fld1: *mut u16,

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: (u16,),
fld1: char,
fld2: [i64; 8],
fld3: Adt51,
fld4: [i64; 5],
fld5: ([i64; 8], [i64; 4], (u64,)),

},
Variant1{
fld0: [i64; 4],
fld1: *const [i64; 5],
fld2: [char; 8],
fld3: i8,
fld4: (i128, [i64; 4], i128),
fld5: *const bool,

},
Variant2{
fld0: u128,
fld1: u64,
fld2: *const u128,
fld3: ((i128,), *const bool),
fld4: u16,
fld5: i128,
fld6: Adt49,

},
Variant3{
fld0: (i32, [bool; 1]),
fld1: isize,

}}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: Adt58,
fld1: (i32, [bool; 1]),
fld2: u8,

},
Variant1{
fld0: [u32; 5],
fld1: Adt61,
fld2: Adt60,
fld3: [char; 8],

},
Variant2{
fld0: [u16; 5],
fld1: u64,

},
Variant3{
fld0: i16,
fld1: [i64; 5],
fld2: (i8,),
fld3: Adt47,

}}

