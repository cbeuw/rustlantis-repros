#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u16) -> u32 {
mir! {
type RET = u32;
let _3: Adt52;
let _4: Adt61;
let _5: [u32; 5];
let _6: i64;
let _7: i64;
let _8: char;
let _9: u8;
let _10: f64;
let _11: Adt61;
let _12: f64;
let _13: [u32; 5];
let _14: [i32; 5];
let _15: [u32; 7];
let _16: char;
let _17: [u8; 6];
let _18: Adt63;
let _19: Adt60;
let _20: (i8, u16, i64);
let _21: isize;
let _22: Adt63;
let _23: [u128; 7];
let _24: ();
let _25: ();
{
_2 = 28284_u16;
RET = 2837658280_u32;
_1 = !true;
RET = !2086429597_u32;
RET = !39804701_u32;
RET = 2296765484_u32 + 3000192070_u32;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
28284 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = 182588674044516375828917115828103740948_u128 as u32;
RET = 29_i8 as u32;
_2 = !12431_u16;
RET = !3218539281_u32;
_1 = true;
_2 = !38728_u16;
_1 = _2 >= _2;
_1 = _2 == _2;
_2 = !48758_u16;
_2 = !42424_u16;
_2 = !42919_u16;
RET = (-4235084366862780928_i64) as u32;
RET = !1558470552_u32;
RET = (-6712_i16) as u32;
_2 = 1974712185_i32 as u16;
_2 = 41795_u16;
RET = '\u{7706b}' as u32;
RET = (-161304686358563737675523476762573814974_i128) as u32;
RET = 137455296_i32 as u32;
_2 = 36503_u16 / 36151_u16;
_2 = !3577_u16;
RET = _1 as u32;
RET = 599522648_u32 % 99991909_u32;
RET = _2 as u32;
RET = !1003851588_u32;
_1 = false;
_3.fld4.4 = 11570_i16 as u8;
Goto(bb9)
}
bb9 = {
_3.fld4.0 = (48_i8, _2, 6860389507571427386_i64);
_3.fld0 = [207745265155076081008804931703250724766_u128,210537770935983193520343722232575599945_u128,272543422279277701260315742135278456474_u128];
_3.fld4.0.1 = _2;
_3.fld4.0.2 = 6575104388960078918_i64 >> _2;
_4.fld5.1 = _1;
_4.fld1 = [63363650613121109434788148985136298263_u128,35626903075145047813719348499383613253_u128,140951384883515470378268029569648337222_u128,50320916969330687152774854665381432973_u128,257953718450456968176241056894803382096_u128,281968183477568303425638792621898414933_u128,78905145171130262488924754155710290144_u128];
_3.fld4.1 = 339533313320708125552838029933157321547_u128 as u64;
_3.fld4.2 = 68392248975344801490400064032747582400_u128 ^ 21987175311110974461274165210623496033_u128;
_3.fld2 = 146091675774969250700535717887768768699_i128 as isize;
Call(_3.fld5.0 = fn1(_3.fld4.0.0, _3.fld4.2, _3.fld4.2, _3.fld4.1, _4.fld1, _4.fld1, _3.fld4.0.0, _3.fld4.1), bb10, UnwindUnreachable())
}
bb10 = {
_3.fld5.0 = 3486531674_u32 - 3138648754_u32;
_3.fld5.0 = 2612008894_u32 ^ 1963837130_u32;
_3.fld4.4 = 99_u8;
_3.fld4.0.1 = !_2;
_6 = _3.fld4.1 as i64;
_9 = 1874363835_i32 as u8;
_4.fld1 = [_3.fld4.2,_3.fld4.2,_3.fld4.2,_3.fld4.2,_3.fld4.2,_3.fld4.2,_3.fld4.2];
_3.fld5.0 = !3941097354_u32;
_3.fld1.1 = _3.fld4.0.0 as f64;
_8 = '\u{b194f}';
_3.fld2 = 9223372036854775807_isize << _9;
_3.fld4.4 = _9 | _9;
_11.fld5.1 = !_1;
_3.fld5 = (1334738901_u32,);
RET = _3.fld5.0;
_2 = _3.fld4.0.1;
_2 = _4.fld5.1 as u16;
_3.fld4.3 = _8;
_7 = _3.fld4.1 as i64;
match _3.fld4.0.0 {
48 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_7 = -_3.fld4.0.2;
_3.fld4.4 = !_9;
_12 = _3.fld1.1;
_10 = _3.fld1.1 + _3.fld1.1;
_3.fld1.2 = !_4.fld5.1;
_3.fld4.0.2 = _7;
_11.fld5.0 = _9 as f32;
_3.fld6 = !9770623746463007201_usize;
_3.fld1.2 = !_4.fld5.1;
_3.fld1.1 = (-21601_i16) as f64;
_3.fld3 = _3.fld4.2 % 25397673547305780457587420562073454438_u128;
_6 = !_7;
_3.fld1.1 = _12;
_4.fld5.0 = -_11.fld5.0;
_4.fld5.1 = _1 & _1;
_4.fld5.0 = -_11.fld5.0;
Goto(bb13)
}
bb13 = {
_3.fld4.1 = !10275626075521618234_u64;
_4.fld0 = core::ptr::addr_of_mut!(_9);
_3.fld1.1 = -_12;
Goto(bb14)
}
bb14 = {
_3.fld5 = (2158388123_u32,);
_4.fld0 = core::ptr::addr_of_mut!(_3.fld4.4);
_18.fld0.fld0.fld3.fld2.0 = _8 as i8;
_18.fld2.1.1 = !_2;
_15 = [_3.fld5.0,_3.fld5.0,_3.fld5.0,_3.fld5.0,_3.fld5.0,_3.fld5.0,_3.fld5.0];
_18.fld0.fld1 = !_3.fld3;
_11.fld3 = [_3.fld3,_18.fld0.fld1,_3.fld4.2];
_18.fld0.fld0.fld4.fld0 = _4.fld5.1;
_12 = (-136262450814240778746776861258700845484_i128) as f64;
_11.fld5.1 = !_1;
_18.fld2.0 = 16952_i16 >> _3.fld4.0.0;
_19.fld0.2 = _3.fld5.0 as i128;
_18.fld0.fld0.fld3.fld2.1 = _3.fld4.0.1;
_18.fld0.fld0.fld3.fld2 = (_3.fld4.0.0, _3.fld4.0.1, _3.fld4.0.2);
_20.2 = !_6;
_20.2 = _18.fld0.fld0.fld3.fld2.2 + _7;
_18.fld0.fld0.fld4.fld3 = [_3.fld5.0,_3.fld5.0,_3.fld5.0,_3.fld5.0,_3.fld5.0];
_20 = (_3.fld4.0.0, _2, _6);
_3.fld1.0 = _3.fld6;
_22.fld0.fld0.fld6 = [_3.fld4.0.0,_18.fld0.fld0.fld3.fld2.0,_18.fld0.fld0.fld3.fld2.0,_18.fld0.fld0.fld3.fld2.0,_20.0,_20.0];
_3.fld1.2 = _11.fld5.1;
_22.fld2.0 = _4.fld5.0 as i16;
_22.fld3.fld0.0.0 = -_4.fld5.0;
_18.fld0.fld0.fld4.fld0 = !_1;
_22.fld3.fld1 = _3.fld1;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(0_usize, 20_usize, Move(_20), 15_usize, Move(_15), 7_usize, Move(_7), 8_usize, Move(_8)), bb16, UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i8,mut _2: u128,mut _3: u128,mut _4: u64,mut _5: [u128; 7],mut _6: [u128; 7],mut _7: i8,mut _8: u64) -> u32 {
mir! {
type RET = u32;
let _9: usize;
let _10: u16;
let _11: *mut u8;
let _12: [u128; 3];
let _13: i16;
let _14: Adt65;
let _15: [u8; 6];
let _16: f64;
let _17: f64;
let _18: usize;
let _19: [i32; 5];
let _20: ((f32, bool),);
let _21: *const f32;
let _22: ((i8, u16, i64), u64, u128, char, u8);
let _23: [i128; 2];
let _24: isize;
let _25: Adt61;
let _26: Adt58;
let _27: bool;
let _28: bool;
let _29: Adt53;
let _30: f64;
let _31: i128;
let _32: ();
let _33: ();
{
_1 = _7 << _8;
_7 = true as i8;
_4 = _8 ^ _8;
_9 = !3353919109515622780_usize;
_7 = '\u{ff792}' as i8;
_9 = 0_usize;
_4 = 254_u8 as u64;
_5[_9] = !_6[_9];
Call(_9 = fn2(_7, _6, _5[_9], _6, _4, _8), bb1, UnwindUnreachable())
}
bb1 = {
_3 = !_2;
_9 = 4_usize ^ 4_usize;
_1 = -_7;
_6 = [_3,_2,_3,_2,_3,_2,_3];
_8 = _4;
_1 = !_7;
_6 = [_3,_2,_2,_3,_2,_2,_2];
_12 = [_3,_3,_3];
_4 = _8;
RET = !3986711212_u32;
RET = 3601303470_u32 ^ 2308883645_u32;
_10 = 1797140956_u32 as u16;
_10 = 5943579720674896220905328971786997769_i128 as u16;
Goto(bb2)
}
bb2 = {
_13 = !28479_i16;
_5 = [_2,_2,_2,_3,_2,_2,_3];
_3 = _2;
_14.fld5 = Adt55 { fld0: _10 };
_6 = [_2,_2,_3,_3,_3,_3,_3];
_14.fld6 = 1239875278_u32 as u64;
_13 = _4 as i16;
_14.fld3 = [173150419_i32,(-1046400336_i32),179895397_i32,(-1745851523_i32),(-2013124937_i32)];
_14.fld6 = _4;
_14.fld0 = [_7,_1,_7,_7,_1,_7,_7];
_14.fld6 = _8 | _4;
_14.fld3 = [1167802728_i32,(-605724013_i32),(-905200003_i32),840161596_i32,1627056276_i32];
_10 = _14.fld5.fld0;
RET = true as u32;
_15 = [42_u8,96_u8,88_u8,224_u8,22_u8,76_u8];
Goto(bb3)
}
bb3 = {
_14.fld2 = [_3,_2,_2,_2,_2,_3,_2];
_14.fld5 = Adt55 { fld0: _10 };
_5 = [_3,_2,_2,_3,_2,_3,_2];
_14.fld5 = Adt55 { fld0: _10 };
_17 = 164_u8 as f64;
_15 = [250_u8,186_u8,115_u8,182_u8,69_u8,122_u8];
_14.fld4 = [1678173254_u32,408063399_u32,2827155047_u32,300006340_u32,890128297_u32,3007919565_u32,1964764986_u32];
_14.fld3 = [1294930944_i32,(-2089160792_i32),(-731720913_i32),711486462_i32,792426730_i32];
RET = 935689286_u32;
_13 = (-14554_i16);
_7 = -_1;
_16 = _17 * _17;
_4 = !_14.fld6;
match _13 {
0 => bb4,
1 => bb5,
2 => bb6,
340282366920938463463374607431768196902 => bb8,
_ => bb7
}
}
bb4 = {
_13 = !28479_i16;
_5 = [_2,_2,_2,_3,_2,_2,_3];
_3 = _2;
_14.fld5 = Adt55 { fld0: _10 };
_6 = [_2,_2,_3,_3,_3,_3,_3];
_14.fld6 = 1239875278_u32 as u64;
_13 = _4 as i16;
_14.fld3 = [173150419_i32,(-1046400336_i32),179895397_i32,(-1745851523_i32),(-2013124937_i32)];
_14.fld6 = _4;
_14.fld0 = [_7,_1,_7,_7,_1,_7,_7];
_14.fld6 = _8 | _4;
_14.fld3 = [1167802728_i32,(-605724013_i32),(-905200003_i32),840161596_i32,1627056276_i32];
_10 = _14.fld5.fld0;
RET = true as u32;
_15 = [42_u8,96_u8,88_u8,224_u8,22_u8,76_u8];
Goto(bb3)
}
bb5 = {
_3 = !_2;
_9 = 4_usize ^ 4_usize;
_1 = -_7;
_6 = [_3,_2,_3,_2,_3,_2,_3];
_8 = _4;
_1 = !_7;
_6 = [_3,_2,_2,_3,_2,_2,_2];
_12 = [_3,_3,_3];
_4 = _8;
RET = !3986711212_u32;
RET = 3601303470_u32 ^ 2308883645_u32;
_10 = 1797140956_u32 as u16;
_10 = 5943579720674896220905328971786997769_i128 as u16;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_13 = !(-31375_i16);
Goto(bb9)
}
bb9 = {
_7 = _8 as i8;
_17 = _16;
_10 = !_14.fld5.fld0;
_12 = [_3,_3,_3];
Call(_14.fld3 = fn15(_2, _16, _15, _10, _14.fld2, _2, _10, _14.fld5.fld0, _9, _9, _5, _17, _4, _14.fld6), bb10, UnwindUnreachable())
}
bb10 = {
_10 = _14.fld5.fld0;
_20.0.0 = 674803559_i32 as f32;
_16 = _17;
_4 = _16 as u64;
_14.fld6 = _2 as u64;
_21 = core::ptr::addr_of!(_20.0.0);
_17 = _16 + _16;
_19 = [(-948955493_i32),(-1898036234_i32),(-1552454698_i32),1013013189_i32,396655296_i32];
_20.0.1 = !false;
_14.fld5.fld0 = _10;
_6 = [_2,_2,_3,_2,_2,_2,_2];
_14.fld1 = !45_u8;
_17 = -_16;
_14.fld5 = Adt55 { fld0: _10 };
_5 = [_3,_3,_2,_3,_3,_3,_2];
_8 = _14.fld6;
_14.fld5.fld0 = _10;
_15 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1,_14.fld1,_14.fld1];
_2 = '\u{b3946}' as u128;
_22.1 = !_8;
(*_21) = _16 as f32;
(*_21) = _16 as f32;
Goto(bb11)
}
bb11 = {
_20.0.1 = _16 == _16;
_21 = core::ptr::addr_of!(_20.0.0);
_14.fld2 = [_2,_3,_3,_3,_2,_3,_2];
_22.2 = !_3;
RET = 2349390850_u32;
_11 = core::ptr::addr_of_mut!(_22.4);
_18 = _9;
_22.4 = _14.fld1;
_11 = core::ptr::addr_of_mut!((*_11));
_14.fld4 = [3304178609_u32,3413836570_u32,845741743_u32,234276416_u32,2311568062_u32,579878322_u32,2911071398_u32];
(*_11) = _14.fld1 ^ _14.fld1;
_22.0.2 = (-6066010388179821423_i64);
_22.0 = (_1, _14.fld5.fld0, 6041746969795099715_i64);
_25.fld5.0 = -_20.0.0;
_25.fld0 = _11;
_26.fld0.fld3.fld2.0 = _1 * _22.0.0;
_19 = [894324418_i32,347268697_i32,570190919_i32,1659562135_i32,1924856493_i32];
_2 = _3 - _3;
_26.fld0.fld6 = [_26.fld0.fld3.fld2.0,_1,_7,_7,_26.fld0.fld3.fld2.0,_7];
_26.fld0.fld3.fld2.0 = _22.0.0 ^ _7;
_26.fld0.fld2 = 9223372036854775807_isize;
_14.fld3 = [(-2047127067_i32),(-741205138_i32),849941531_i32,(-98742100_i32),(-1308919520_i32)];
_26.fld0.fld3 = Adt50 { fld0: _20.0.1,fld1: _5,fld2: _22.0 };
Call(_13 = core::intrinsics::bswap((-27174_i16)), bb12, UnwindUnreachable())
}
bb12 = {
_22.3 = '\u{5d39f}';
_23 = [(-84030139272614383542825228676583937950_i128),(-4818069528403235866019430916192645165_i128)];
_14.fld5.fld0 = _22.0.1 / 33936_u16;
_14.fld3 = [1898232645_i32,1464024820_i32,(-1481912474_i32),(-953692635_i32),573647714_i32];
_26.fld0.fld4.fld0 = !_26.fld0.fld3.fld0;
_26.fld0.fld3.fld2 = (_22.0.0, _10, _22.0.2);
_25.fld3 = [_3,_2,_3];
_14.fld2 = [_2,_2,_22.2,_2,_2,_3,_2];
_25.fld5 = ((*_21), _26.fld0.fld3.fld0);
_1 = _26.fld0.fld3.fld2.0;
_5 = _14.fld2;
(*_21) = _25.fld5.0;
Call(_25.fld0 = fn17(_22.2, _26.fld0.fld6, _26.fld0.fld3.fld2.2, _14.fld0, _26.fld0.fld3.fld0, _25.fld5.1, _14.fld0, _22.3, _21, (*_11), _10), bb13, UnwindUnreachable())
}
bb13 = {
(*_11) = _14.fld1 << _7;
_25.fld1 = [_3,_3,_3,_2,_2,_2,_2];
_26.fld0.fld4.fld2 = _21;
_29.fld3 = [2582553146_u32,3291908621_u32,4258730262_u32,1054997889_u32,1051202802_u32];
_29.fld0 = !_25.fld5.1;
_14.fld3 = _19;
_22 = (_26.fld0.fld3.fld2, _14.fld6, _2, '\u{c7f7}', _14.fld1);
_26.fld0.fld4.fld1 = [_22.4,_22.4,(*_11),(*_11),(*_11),(*_11)];
_30 = -_16;
_20.0.1 = _22.2 != _22.2;
_20.0 = (_25.fld5.0, _29.fld0);
_9 = !_18;
match _26.fld0.fld3.fld2.2 {
0 => bb1,
1 => bb2,
2 => bb14,
3 => bb15,
6041746969795099715 => bb17,
_ => bb16
}
}
bb14 = {
_3 = !_2;
_9 = 4_usize ^ 4_usize;
_1 = -_7;
_6 = [_3,_2,_3,_2,_3,_2,_3];
_8 = _4;
_1 = !_7;
_6 = [_3,_2,_2,_3,_2,_2,_2];
_12 = [_3,_3,_3];
_4 = _8;
RET = !3986711212_u32;
RET = 3601303470_u32 ^ 2308883645_u32;
_10 = 1797140956_u32 as u16;
_10 = 5943579720674896220905328971786997769_i128 as u16;
Goto(bb2)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_29.fld2 = core::ptr::addr_of!(_20.0.0);
_18 = _9 - _9;
_7 = -_22.0.0;
_18 = _9;
_24 = _26.fld0.fld2 & _26.fld0.fld2;
_27 = _26.fld0.fld3.fld0;
(*_11) = _14.fld1 ^ _14.fld1;
_26.fld0.fld1 = _25.fld3;
_14.fld0 = [_1,_1,_22.0.0,_7,_26.fld0.fld3.fld2.0,_26.fld0.fld3.fld2.0,_7];
(*_11) = _26.fld0.fld3.fld2.1 as u8;
_13 = (-20602_i16) & 27783_i16;
_28 = !_20.0.1;
_3 = _22.2;
_18 = _9;
_22.4 = _18 as u8;
Goto(bb18)
}
bb18 = {
Call(_32 = dump_var(1_usize, 22_usize, Move(_22), 5_usize, Move(_5), 3_usize, Move(_3), 18_usize, Move(_18)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(1_usize, 13_usize, Move(_13), 9_usize, Move(_9), 24_usize, Move(_24), 4_usize, Move(_4)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_32 = dump_var(1_usize, 7_usize, Move(_7), 28_usize, Move(_28), 33_usize, _33, 33_usize, _33), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: i8,mut _2: [u128; 7],mut _3: u128,mut _4: [u128; 7],mut _5: u64,mut _6: u64) -> usize {
mir! {
type RET = usize;
let _7: u128;
let _8: u16;
let _9: (*const i128, u16, *const usize);
let _10: (i32, i128);
let _11: u8;
let _12: (bool,);
let _13: (f32, bool);
let _14: (u32,);
let _15: Adt57;
let _16: *mut u8;
let _17: *const i128;
let _18: [i32; 2];
let _19: isize;
let _20: char;
let _21: f32;
let _22: isize;
let _23: i16;
let _24: [u32; 7];
let _25: *const i8;
let _26: f64;
let _27: bool;
let _28: *const [bool; 3];
let _29: Adt50;
let _30: [i128; 2];
let _31: *const f32;
let _32: ();
let _33: ();
{
_2 = [_3,_3,_3,_3,_3,_3,_3];
RET = 7_usize;
_4 = [_3,_3,_3,_3,_3,_3,_3];
RET = !4_usize;
_6 = !_5;
_2 = [_3,_3,_3,_3,_3,_3,_3];
_6 = _5 - _5;
_1 = (-74_i8) ^ (-71_i8);
_3 = !224054144218709232188718087602611427723_u128;
RET = 19459_u16 as usize;
_6 = _1 as u64;
RET = 2_usize + 13457077620633277410_usize;
_3 = (-720718343_i32) as u128;
_7 = !_3;
_1 = 56576_u16 as i8;
_9.1 = 131_u8 as u16;
_3 = _7 + _7;
Call(_9.1 = fn3(_5, _5, _1, _4, _6, _6, _6, _4, _5, _6, _7, _3, _7, _3), bb1, UnwindUnreachable())
}
bb1 = {
RET = _9.1 as usize;
_5 = _9.1 as u64;
_4 = _2;
_7 = 7_usize as u128;
_10.0 = (-237599239_i32) * (-244617994_i32);
_10.0 = '\u{c715b}' as i32;
_5 = _6;
_5 = _9.1 as u64;
_2 = [_3,_3,_7,_7,_3,_3,_7];
_3 = '\u{490b}' as u128;
Goto(bb2)
}
bb2 = {
_5 = _6;
RET = (-23335_i16) as usize;
_10 = ((-1432899168_i32), (-126044095851686148448038944168586848908_i128));
_11 = 236_u8;
RET = 5_usize;
_10.1 = 103757505971996730131244231775935102139_i128 ^ (-110924650121635836957715434372190550539_i128);
_10.1 = !(-44205030028571983561877159808215297819_i128);
_9.1 = !49708_u16;
_10.0 = 1614647288_i32;
_4 = _2;
_10.0 = 1545337935_i32;
_9.1 = !29023_u16;
RET = 7_usize + 743665947961941225_usize;
_3 = !_7;
Goto(bb3)
}
bb3 = {
_12 = (true,);
_10.1 = (-104084433032253592899685459288746809856_i128) ^ 164119210899175029302851903993497006753_i128;
_11 = !142_u8;
_10.1 = (-8935367664273284825119946908669119624_i128) >> _11;
_9.1 = 3411_u16 << _11;
_12 = (false,);
_5 = _6 + _6;
_10 = ((-469387217_i32), 8678393238373504346658491587549710801_i128);
_3 = _7;
_10.0 = _6 as i32;
_4 = _2;
_13.1 = _12.0;
_3 = _7;
_1 = 30_i8;
_10.1 = (-73_isize) as i128;
_7 = !_3;
_5 = _9.1 as u64;
_13.0 = _3 as f32;
RET = !9328411218210141951_usize;
_4 = [_3,_3,_3,_3,_3,_3,_3];
Goto(bb4)
}
bb4 = {
_14.0 = 2534251300_u32 | 1768239127_u32;
_14.0 = 2330947464_u32;
_15.fld7 = !_11;
_9.0 = core::ptr::addr_of!(_15.fld6.1);
_2 = [_7,_7,_7,_7,_7,_7,_7];
_15.fld0.2 = 2_usize as i128;
_10.0 = (-179082941_i32) ^ (-1774354058_i32);
_15.fld6 = _10;
_15.fld1.2 = _13.0 as u128;
_15.fld5.1 = (-9223372036854775808_isize) as f64;
_5 = !_6;
_15.fld0.1.0.1 = _12.0;
_13.0 = _15.fld5.1 as f32;
_8 = !_9.1;
_15.fld1.3 = '\u{900ca}';
_8 = !_9.1;
_15.fld4 = [_15.fld6.0,_15.fld6.0,_15.fld6.0,_10.0,_10.0];
RET = 5587865943252810150_usize;
_15.fld0.0 = _15.fld5.1 != _15.fld5.1;
_15.fld1.0.1 = _9.1 + _9.1;
_4 = [_3,_15.fld1.2,_7,_15.fld1.2,_3,_15.fld1.2,_7];
_12 = (_13.1,);
_13.1 = !_15.fld0.0;
Goto(bb5)
}
bb5 = {
_15.fld1.1 = _6;
RET = 13078028618100813061_usize + 7_usize;
_16 = core::ptr::addr_of_mut!(_15.fld1.4);
_15.fld5.0 = 5_usize ^ 4038711822549860441_usize;
_10 = (_15.fld6.0, _15.fld6.1);
_15.fld1.3 = '\u{dadb8}';
_15.fld1.0 = (_1, _9.1, 1973895225181494332_i64);
_13.0 = _15.fld5.0 as f32;
_15.fld1.1 = !_5;
_15.fld0.1.0 = (_13.0, _12.0);
(*_16) = !_15.fld7;
_15.fld3 = _1 << _15.fld6.1;
_15.fld3 = _15.fld5.1 as i8;
_19 = _10.0 as isize;
_10 = (_15.fld6.0, _15.fld0.2);
RET = !_15.fld5.0;
_18 = [_10.0,_10.0];
Goto(bb6)
}
bb6 = {
_9.1 = _15.fld1.0.1 >> _6;
_12 = (_15.fld0.1.0.1,);
_15.fld1.0.1 = !_9.1;
_15.fld5.0 = _15.fld0.1.0.0 as usize;
_11 = _15.fld1.4;
_15.fld2 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_12.0 = _15.fld0.0;
_12 = (_15.fld0.1.0.1,);
match _15.fld1.0.2 {
1973895225181494332 => bb8,
_ => bb7
}
}
bb7 = {
_15.fld1.1 = _6;
RET = 13078028618100813061_usize + 7_usize;
_16 = core::ptr::addr_of_mut!(_15.fld1.4);
_15.fld5.0 = 5_usize ^ 4038711822549860441_usize;
_10 = (_15.fld6.0, _15.fld6.1);
_15.fld1.3 = '\u{dadb8}';
_15.fld1.0 = (_1, _9.1, 1973895225181494332_i64);
_13.0 = _15.fld5.0 as f32;
_15.fld1.1 = !_5;
_15.fld0.1.0 = (_13.0, _12.0);
(*_16) = !_15.fld7;
_15.fld3 = _1 << _15.fld6.1;
_15.fld3 = _15.fld5.1 as i8;
_19 = _10.0 as isize;
_10 = (_15.fld6.0, _15.fld0.2);
RET = !_15.fld5.0;
_18 = [_10.0,_10.0];
Goto(bb6)
}
bb8 = {
_12.0 = _13.1;
_15.fld0.2 = -_10.1;
_16 = core::ptr::addr_of_mut!(_15.fld1.4);
_12.0 = _15.fld1.4 <= (*_16);
_19 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_20 = _15.fld1.3;
_15.fld1.0.0 = _15.fld3 | _15.fld3;
_15.fld0.1.0 = (_13.0, _13.1);
_21 = _15.fld0.1.0.0;
_23 = (-15247_i16);
_1 = _15.fld1.0.0;
_10.0 = -_15.fld6.0;
_15.fld1.1 = !_6;
_11 = !_15.fld1.4;
Goto(bb9)
}
bb9 = {
(*_16) = _11 / 212_u8;
_6 = _5;
_13 = (_21, _15.fld0.1.0.1);
_15.fld4 = [_10.0,_15.fld6.0,_15.fld6.0,_10.0,_10.0];
_10.0 = !_15.fld6.0;
_15.fld1.0 = (_1, _8, (-8864478396814321569_i64));
_9.1 = _15.fld1.0.1 | _15.fld1.0.1;
_15.fld6.0 = _10.0 * _10.0;
_23 = 7787_i16;
(*_16) = !_11;
_15.fld1.0.0 = _1 - _1;
_6 = _15.fld1.1 / 12296626368333226886_u64;
_15.fld6.0 = -_10.0;
_15.fld1.3 = _20;
_26 = _15.fld5.1 * _15.fld5.1;
_12 = (_15.fld0.1.0.1,);
_15.fld0.1.0 = _13;
match _14.0 {
0 => bb5,
1 => bb7,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
2330947464 => bb15,
_ => bb14
}
}
bb10 = {
_5 = _6;
RET = (-23335_i16) as usize;
_10 = ((-1432899168_i32), (-126044095851686148448038944168586848908_i128));
_11 = 236_u8;
RET = 5_usize;
_10.1 = 103757505971996730131244231775935102139_i128 ^ (-110924650121635836957715434372190550539_i128);
_10.1 = !(-44205030028571983561877159808215297819_i128);
_9.1 = !49708_u16;
_10.0 = 1614647288_i32;
_4 = _2;
_10.0 = 1545337935_i32;
_9.1 = !29023_u16;
RET = 7_usize + 743665947961941225_usize;
_3 = !_7;
Goto(bb3)
}
bb11 = {
_15.fld1.1 = _6;
RET = 13078028618100813061_usize + 7_usize;
_16 = core::ptr::addr_of_mut!(_15.fld1.4);
_15.fld5.0 = 5_usize ^ 4038711822549860441_usize;
_10 = (_15.fld6.0, _15.fld6.1);
_15.fld1.3 = '\u{dadb8}';
_15.fld1.0 = (_1, _9.1, 1973895225181494332_i64);
_13.0 = _15.fld5.0 as f32;
_15.fld1.1 = !_5;
_15.fld0.1.0 = (_13.0, _12.0);
(*_16) = !_15.fld7;
_15.fld3 = _1 << _15.fld6.1;
_15.fld3 = _15.fld5.1 as i8;
_19 = _10.0 as isize;
_10 = (_15.fld6.0, _15.fld0.2);
RET = !_15.fld5.0;
_18 = [_10.0,_10.0];
Goto(bb6)
}
bb12 = {
RET = _9.1 as usize;
_5 = _9.1 as u64;
_4 = _2;
_7 = 7_usize as u128;
_10.0 = (-237599239_i32) * (-244617994_i32);
_10.0 = '\u{c715b}' as i32;
_5 = _6;
_5 = _9.1 as u64;
_2 = [_3,_3,_7,_7,_3,_3,_7];
_3 = '\u{490b}' as u128;
Goto(bb2)
}
bb13 = {
_15.fld1.1 = _6;
RET = 13078028618100813061_usize + 7_usize;
_16 = core::ptr::addr_of_mut!(_15.fld1.4);
_15.fld5.0 = 5_usize ^ 4038711822549860441_usize;
_10 = (_15.fld6.0, _15.fld6.1);
_15.fld1.3 = '\u{dadb8}';
_15.fld1.0 = (_1, _9.1, 1973895225181494332_i64);
_13.0 = _15.fld5.0 as f32;
_15.fld1.1 = !_5;
_15.fld0.1.0 = (_13.0, _12.0);
(*_16) = !_15.fld7;
_15.fld3 = _1 << _15.fld6.1;
_15.fld3 = _15.fld5.1 as i8;
_19 = _10.0 as isize;
_10 = (_15.fld6.0, _15.fld0.2);
RET = !_15.fld5.0;
_18 = [_10.0,_10.0];
Goto(bb6)
}
bb14 = {
_14.0 = 2534251300_u32 | 1768239127_u32;
_14.0 = 2330947464_u32;
_15.fld7 = !_11;
_9.0 = core::ptr::addr_of!(_15.fld6.1);
_2 = [_7,_7,_7,_7,_7,_7,_7];
_15.fld0.2 = 2_usize as i128;
_10.0 = (-179082941_i32) ^ (-1774354058_i32);
_15.fld6 = _10;
_15.fld1.2 = _13.0 as u128;
_15.fld5.1 = (-9223372036854775808_isize) as f64;
_5 = !_6;
_15.fld0.1.0.1 = _12.0;
_13.0 = _15.fld5.1 as f32;
_8 = !_9.1;
_15.fld1.3 = '\u{900ca}';
_8 = !_9.1;
_15.fld4 = [_15.fld6.0,_15.fld6.0,_15.fld6.0,_10.0,_10.0];
RET = 5587865943252810150_usize;
_15.fld0.0 = _15.fld5.1 != _15.fld5.1;
_15.fld1.0.1 = _9.1 + _9.1;
_4 = [_3,_15.fld1.2,_7,_15.fld1.2,_3,_15.fld1.2,_7];
_12 = (_13.1,);
_13.1 = !_15.fld0.0;
Goto(bb5)
}
bb15 = {
_12 = (_13.1,);
_11 = (*_16);
_26 = -_15.fld5.1;
_25 = core::ptr::addr_of!(_1);
_29.fld2 = (_1, _15.fld1.0.1, _15.fld1.0.2);
_15.fld5.0 = !3126178132027634854_usize;
_12 = (_15.fld0.1.0.1,);
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(2_usize, 5_usize, Move(_5), 2_usize, Move(_2), 4_usize, Move(_4), 20_usize, Move(_20)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(2_usize, 6_usize, Move(_6), 18_usize, Move(_18), 14_usize, Move(_14), 23_usize, Move(_23)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u64,mut _2: u64,mut _3: i8,mut _4: [u128; 7],mut _5: u64,mut _6: u64,mut _7: u64,mut _8: [u128; 7],mut _9: u64,mut _10: u64,mut _11: u128,mut _12: u128,mut _13: u128,mut _14: u128) -> u16 {
mir! {
type RET = u16;
let _15: bool;
let _16: Adt53;
let _17: f64;
let _18: [bool; 3];
let _19: Adt51;
let _20: [i8; 6];
let _21: (*const i128, u16, *const usize);
let _22: isize;
let _23: isize;
let _24: *const f32;
let _25: i128;
let _26: u32;
let _27: u32;
let _28: Adt54;
let _29: (i8, u16, i64);
let _30: *const i128;
let _31: bool;
let _32: char;
let _33: [i128; 2];
let _34: i64;
let _35: f64;
let _36: (i16, (*const i128, u16, *const usize), i8);
let _37: u32;
let _38: Adt57;
let _39: Adt63;
let _40: u16;
let _41: *const [bool; 3];
let _42: [i32; 2];
let _43: [u128; 3];
let _44: *const i128;
let _45: isize;
let _46: Adt63;
let _47: Adt50;
let _48: *mut u8;
let _49: (i32, i128);
let _50: [i8; 6];
let _51: Adt61;
let _52: Adt65;
let _53: usize;
let _54: *const [bool; 3];
let _55: ();
let _56: ();
{
RET = (-12633_i16) as u16;
_9 = _10 - _7;
_6 = 1601918020_i32 as u64;
_1 = _10 & _2;
_4 = [_13,_12,_14,_13,_14,_14,_13];
_10 = _5;
_13 = _12;
RET = 21808_u16 >> _12;
_16.fld0 = _9 > _5;
_16.fld1 = [60_u8,28_u8,234_u8,47_u8,170_u8,203_u8];
_19.fld1.2 = _16.fld0;
_16.fld3 = [3179681703_u32,1032268864_u32,2235038592_u32,1132919691_u32,2681569280_u32];
_14 = _12;
_6 = 221_u8 as u64;
Goto(bb1)
}
bb1 = {
_19.fld1.0 = 5772419551845880588_usize * 4483367061955363889_usize;
_18 = [_19.fld1.2,_16.fld0,_19.fld1.2];
_16.fld2 = core::ptr::addr_of!(_19.fld0.0.0);
_6 = _19.fld1.0 as u64;
_19.fld2 = (_14,);
_19.fld1.2 = _1 > _9;
_23 = (-85_isize);
_9 = _1 * _6;
_12 = (-163163885326977307451287282425999945421_i128) as u128;
_21.2 = core::ptr::addr_of!(_19.fld1.0);
_16.fld1 = [75_u8,201_u8,117_u8,110_u8,123_u8,229_u8];
_21.2 = core::ptr::addr_of!(_19.fld1.0);
_23 = !34_isize;
_19.fld1.2 = !_16.fld0;
_10 = (-18444_i16) as u64;
_24 = core::ptr::addr_of!(_19.fld0.0.0);
_16.fld3 = [3736274093_u32,4026852144_u32,2136522735_u32,3735514991_u32,3228555551_u32];
_22 = _23 ^ _23;
_10 = _5 % 2169754492890426233_u64;
Goto(bb2)
}
bb2 = {
_16.fld1 = [141_u8,31_u8,59_u8,26_u8,243_u8,82_u8];
_9 = !_10;
_23 = (-735483905_i32) as isize;
_19.fld0.0.0 = 49080_u16 as f32;
_19.fld1.2 = (*_24) >= (*_24);
_21.1 = _22 as u16;
_25 = 93784437163364671867939923905279199134_i128 & (-71728105469872517719883290122462600336_i128);
_7 = _1;
_26 = '\u{47394}' as u32;
_20 = [_3,_3,_3,_3,_3,_3];
_19.fld0.0.1 = !_16.fld0;
_19.fld1.1 = (*_24) as f64;
Goto(bb3)
}
bb3 = {
_21.2 = core::ptr::addr_of!(_19.fld1.0);
_26 = !2608056549_u32;
_11 = !_14;
_15 = _19.fld0.0.1;
_29 = (_3, _21.1, (-2890264860787342121_i64));
_16.fld2 = core::ptr::addr_of!(_19.fld0.0.0);
_28.fld4.fld2 = _16.fld2;
_28.fld4.fld0 = _15;
_26 = !3345353376_u32;
RET = !_29.1;
_19.fld1.1 = 76_u8 as f64;
_25 = -64791928276308711289442410663989314342_i128;
_4 = _8;
_15 = _25 < _25;
_17 = -_19.fld1.1;
_14 = '\u{982ac}' as u128;
_29 = (_3, _21.1, 6535393929057206321_i64);
_21.0 = core::ptr::addr_of!(_25);
_28.fld0 = core::ptr::addr_of!(_18);
_28.fld3 = Adt50 { fld0: _19.fld0.0.1,fld1: _4,fld2: _29 };
RET = _28.fld3.fld2.1;
_19.fld1 = (3_usize, _17, _19.fld0.0.1);
Call(_6 = fn4(_28.fld4.fld2, _17, _8, _16.fld0, _19.fld0.0.0, _19.fld2, _21.2, _16.fld0, _20), bb4, UnwindUnreachable())
}
bb4 = {
_15 = _19.fld1.2;
_22 = _26 as isize;
_28.fld0 = core::ptr::addr_of!(_18);
_19.fld2 = (_13,);
_35 = (-1167758180_i32) as f64;
_9 = _6;
_36 = (25996_i16, _21, _3);
_28.fld0 = core::ptr::addr_of!(_18);
_3 = _29.0 * _29.0;
_5 = _9 | _6;
_38.fld2 = [_26,_26,_26,_26,_26,_26,_26];
_28.fld3.fld0 = _19.fld0.0.1;
_38.fld0.1.0.1 = _16.fld0;
_38.fld0.1.0 = ((*_24), _15);
_39.fld3.fld0.0.1 = !_38.fld0.1.0.1;
_39.fld0.fld0.fld3.fld2.1 = _36.1.1 | _21.1;
_31 = _28.fld3.fld2.1 != _29.1;
_39.fld2.1.1 = !_21.1;
_38.fld0.1.0.1 = !_31;
_39.fld0.fld1 = _25 as u128;
Goto(bb5)
}
bb5 = {
_39.fld3.fld3 = core::ptr::addr_of!(_38.fld6.1);
_28.fld2 = -_22;
_20 = [_3,_3,_36.2,_28.fld3.fld2.0,_3,_29.0];
_28.fld3.fld1 = [_14,_13,_19.fld2.0,_13,_19.fld2.0,_13,_11];
_38.fld5.0 = _19.fld1.0 * _19.fld1.0;
_39.fld0.fld1 = !_19.fld2.0;
_39.fld0.fld0.fld5 = _26;
_38.fld5.1 = -_19.fld1.1;
_39.fld0.fld0.fld3 = Adt50 { fld0: _38.fld0.1.0.1,fld1: _4,fld2: _29 };
_39.fld0.fld0.fld2 = _23 | _22;
_38.fld0.1.0 = ((*_24), _39.fld3.fld0.0.1);
_38.fld6.0 = 1810387946_i32;
Call(_38.fld1.0.0 = fn7(_28.fld3.fld2.2, _28.fld3.fld2.2, _36.1.0, _29.2, _36.1.0, _16.fld2, _39.fld0.fld0.fld2, (*_24), _28.fld4.fld0, _36.1, _2, _19.fld0.0, _29.2, _39.fld0.fld0.fld3.fld1, _28.fld4.fld0), bb6, UnwindUnreachable())
}
bb6 = {
_38.fld7 = 220_u8 - 252_u8;
_30 = _21.0;
_38.fld0.1.0.1 = _16.fld0;
_39.fld0.fld0.fld3.fld1 = [_19.fld2.0,_39.fld0.fld1,_14,_39.fld0.fld1,_39.fld0.fld1,_13,_13];
_25 = !(-150965472327849524814182006963909598789_i128);
_38.fld4 = [_38.fld6.0,_38.fld6.0,_38.fld6.0,_38.fld6.0,_38.fld6.0];
_19.fld3 = core::ptr::addr_of!(_38.fld6.1);
_39.fld1 = ((*_24), _39.fld3.fld0.0.1);
match _28.fld3.fld2.2 {
6535393929057206321 => bb7,
_ => bb3
}
}
bb7 = {
_38.fld5 = (_19.fld1.0, _17, _28.fld4.fld0);
_28.fld1 = [_11,_39.fld0.fld1,_14];
_4 = [_14,_14,_14,_11,_19.fld2.0,_11,_12];
_28.fld5 = !_26;
_39.fld3.fld2.0 = _36.0 as u128;
_19.fld0 = _38.fld0.1;
_38.fld6.1 = (*_30);
_36.1.1 = _39.fld1.1 as u16;
_46.fld2 = (_36.0, _36.1, _39.fld0.fld0.fld3.fld2.0);
_46.fld3.fld1.2 = _39.fld0.fld0.fld3.fld0;
_39.fld3.fld0.0.0 = _39.fld1.0 + _39.fld1.0;
_46.fld2.1 = (_30, _29.1, _36.1.2);
_33 = [(*_30),_25];
_39.fld3 = _19;
_11 = _39.fld0.fld1 << _5;
_46.fld3.fld1.0 = _38.fld5.0;
_21.0 = core::ptr::addr_of!(_38.fld6.1);
_12 = !_11;
_46.fld1.0 = _38.fld6.0 as f32;
_46.fld3.fld0 = _38.fld0.1;
match _29.2 {
0 => bb5,
1 => bb4,
2 => bb8,
6535393929057206321 => bb10,
_ => bb9
}
}
bb8 = {
_19.fld1.0 = 5772419551845880588_usize * 4483367061955363889_usize;
_18 = [_19.fld1.2,_16.fld0,_19.fld1.2];
_16.fld2 = core::ptr::addr_of!(_19.fld0.0.0);
_6 = _19.fld1.0 as u64;
_19.fld2 = (_14,);
_19.fld1.2 = _1 > _9;
_23 = (-85_isize);
_9 = _1 * _6;
_12 = (-163163885326977307451287282425999945421_i128) as u128;
_21.2 = core::ptr::addr_of!(_19.fld1.0);
_16.fld1 = [75_u8,201_u8,117_u8,110_u8,123_u8,229_u8];
_21.2 = core::ptr::addr_of!(_19.fld1.0);
_23 = !34_isize;
_19.fld1.2 = !_16.fld0;
_10 = (-18444_i16) as u64;
_24 = core::ptr::addr_of!(_19.fld0.0.0);
_16.fld3 = [3736274093_u32,4026852144_u32,2136522735_u32,3735514991_u32,3228555551_u32];
_22 = _23 ^ _23;
_10 = _5 % 2169754492890426233_u64;
Goto(bb2)
}
bb9 = {
_16.fld1 = [141_u8,31_u8,59_u8,26_u8,243_u8,82_u8];
_9 = !_10;
_23 = (-735483905_i32) as isize;
_19.fld0.0.0 = 49080_u16 as f32;
_19.fld1.2 = (*_24) >= (*_24);
_21.1 = _22 as u16;
_25 = 93784437163364671867939923905279199134_i128 & (-71728105469872517719883290122462600336_i128);
_7 = _1;
_26 = '\u{47394}' as u32;
_20 = [_3,_3,_3,_3,_3,_3];
_19.fld0.0.1 = !_16.fld0;
_19.fld1.1 = (*_24) as f64;
Goto(bb3)
}
bb10 = {
_46.fld2.2 = _39.fld0.fld0.fld3.fld2.0;
_46.fld2.1 = (_19.fld3, _36.1.1, _21.2);
_19.fld1.1 = _35;
_39.fld0.fld0.fld5 = _28.fld5 << _10;
_46.fld1 = (_19.fld0.0.0, _19.fld0.0.1);
_49.0 = _38.fld6.0 * _38.fld6.0;
_47.fld0 = _5 < _9;
RET = !_36.1.1;
_43 = [_39.fld0.fld1,_11,_11];
_44 = core::ptr::addr_of!((*_30));
(*_30) = _49.0 as i128;
_21.2 = core::ptr::addr_of!(_19.fld1.0);
_46.fld0.fld0.fld0 = core::ptr::addr_of!(_18);
_39.fld1.0 = (*_24);
_49.0 = -_38.fld6.0;
_21 = (_39.fld3.fld3, _46.fld2.1.1, _36.1.2);
(*_44) = _15 as i128;
_47.fld2.2 = _5 as i64;
_47.fld2.1 = _39.fld2.1.1 + _29.1;
_46.fld2 = (_36.0, _36.1, _3);
match _36.0 {
0 => bb1,
1 => bb3,
25996 => bb12,
_ => bb11
}
}
bb11 = {
_38.fld7 = 220_u8 - 252_u8;
_30 = _21.0;
_38.fld0.1.0.1 = _16.fld0;
_39.fld0.fld0.fld3.fld1 = [_19.fld2.0,_39.fld0.fld1,_14,_39.fld0.fld1,_39.fld0.fld1,_13,_13];
_25 = !(-150965472327849524814182006963909598789_i128);
_38.fld4 = [_38.fld6.0,_38.fld6.0,_38.fld6.0,_38.fld6.0,_38.fld6.0];
_19.fld3 = core::ptr::addr_of!(_38.fld6.1);
_39.fld1 = ((*_24), _39.fld3.fld0.0.1);
match _28.fld3.fld2.2 {
6535393929057206321 => bb7,
_ => bb3
}
}
bb12 = {
_39.fld3 = Adt51 { fld0: _46.fld3.fld0,fld1: _19.fld1,fld2: _19.fld2,fld3: _36.1.0 };
_41 = _46.fld0.fld0.fld0;
_39.fld0.fld0.fld6 = _20;
_46.fld3.fld0.0.0 = _38.fld0.1.0.0;
_23 = _39.fld0.fld0.fld5 as isize;
_36 = _46.fld2;
_39.fld3.fld0 = (_39.fld1,);
_51.fld0 = core::ptr::addr_of_mut!(_38.fld1.4);
_39.fld0.fld0.fld3.fld2.2 = _9 as i64;
_39.fld3.fld0.0.0 = -(*_24);
_48 = core::ptr::addr_of_mut!(_38.fld7);
_51.fld2 = _39.fld0.fld0.fld5 as isize;
_39.fld0.fld0.fld4 = _16;
_51.fld1 = [_12,_12,_12,_12,_11,_11,_12];
_13 = _11 >> _11;
_51.fld5 = ((*_24), _39.fld1.1);
_46.fld0.fld0.fld4.fld1 = _39.fld0.fld0.fld4.fld1;
_47.fld2.0 = _38.fld7 as i8;
_28 = Adt54 { fld0: _41,fld1: _43,fld2: _23,fld3: Move(_39.fld0.fld0.fld3),fld4: _39.fld0.fld0.fld4,fld5: _26,fld6: _20 };
_39.fld2.1.0 = core::ptr::addr_of!((*_44));
Goto(bb13)
}
bb13 = {
_32 = '\u{c8639}';
_54 = _28.fld0;
_19.fld2.0 = !_13;
Goto(bb14)
}
bb14 = {
_38.fld1.2 = _19.fld2.0;
_46.fld3 = Adt51 { fld0: _39.fld3.fld0,fld1: _39.fld3.fld1,fld2: _19.fld2,fld3: _39.fld3.fld3 };
_38.fld1.4 = _19.fld1.0 as u8;
_28.fld1 = [_38.fld1.2,_11,_13];
_46.fld0.fld0 = Adt54 { fld0: _28.fld0,fld1: _28.fld1,fld2: _28.fld2,fld3: Move(_28.fld3),fld4: _16,fld5: _28.fld5,fld6: _28.fld6 };
_38.fld1.0.2 = _38.fld1.2 as i64;
Goto(bb15)
}
bb15 = {
Call(_55 = dump_var(3_usize, 10_usize, Move(_10), 1_usize, Move(_1), 32_usize, Move(_32), 3_usize, Move(_3)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_55 = dump_var(3_usize, 29_usize, Move(_29), 11_usize, Move(_11), 8_usize, Move(_8), 23_usize, Move(_23)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_55 = dump_var(3_usize, 33_usize, Move(_33), 6_usize, Move(_6), 25_usize, Move(_25), 31_usize, Move(_31)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_55 = dump_var(3_usize, 15_usize, Move(_15), 56_usize, _56, 56_usize, _56, 56_usize, _56), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: *const f32,mut _2: f64,mut _3: [u128; 7],mut _4: bool,mut _5: f32,mut _6: (u128,),mut _7: *const usize,mut _8: bool,mut _9: [i8; 6]) -> u64 {
mir! {
type RET = u64;
let _10: bool;
let _11: f64;
let _12: f32;
let _13: (u128,);
let _14: i16;
let _15: [i8; 6];
let _16: [u8; 6];
let _17: usize;
let _18: i16;
let _19: ();
let _20: ();
{
(*_7) = '\u{c4b6a}' as usize;
_7 = core::ptr::addr_of!((*_7));
RET = !16175805085157509956_u64;
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_9 = [(-67_i8),(-12_i8),48_i8,(-89_i8),55_i8,10_i8];
_9 = [(-52_i8),63_i8,74_i8,(-16_i8),(-122_i8),79_i8];
(*_7) = (*_1) as usize;
(*_7) = 9223372036854775807_isize as usize;
_6 = (264025593130365850195925761989397108698_u128,);
(*_1) = -_5;
_7 = core::ptr::addr_of!((*_7));
_6 = (234844962949914722736378918373063384265_u128,);
_10 = !_8;
Call((*_7) = core::intrinsics::bswap(0_usize), bb1, UnwindUnreachable())
}
bb1 = {
_8 = _4;
_11 = _2 / f64::NAN;
_8 = _4;
RET = (-1471606227_i32) as u64;
_12 = (*_1);
_12 = _5;
RET = _6.0 as u64;
_1 = core::ptr::addr_of!((*_1));
_1 = core::ptr::addr_of!(_12);
_1 = core::ptr::addr_of!(_12);
(*_1) = -_5;
RET = 7005362779489628676_u64;
RET = !15835128090634590786_u64;
_10 = !_4;
_12 = _5 * _5;
_8 = _4 & _10;
_13 = (_6.0,);
_12 = _5 - _5;
_11 = 9223372036854775807_isize as f64;
_9 = [(-34_i8),(-59_i8),(-103_i8),91_i8,(-32_i8),54_i8];
_2 = _11;
_6.0 = 16622682023639599414_u64 as u128;
_14 = 23390_i16;
Call((*_1) = fn5(_7, _6, _11, _1, _13.0, _13.0, _5, _3), bb2, UnwindUnreachable())
}
bb2 = {
_13 = (_6.0,);
_5 = -_12;
_10 = _8;
RET = (-76_i8) as u64;
_7 = core::ptr::addr_of!((*_7));
_7 = core::ptr::addr_of!((*_7));
_12 = _5 * _5;
RET = !17021985314413168904_u64;
_9 = [115_i8,37_i8,0_i8,(-51_i8),27_i8,22_i8];
_6 = (_13.0,);
_1 = core::ptr::addr_of!((*_1));
_5 = (*_1) * (*_1);
_10 = !_4;
(*_7) = 4462356930706008867_usize % 4_usize;
RET = (*_1) as u64;
_17 = _12 as usize;
_17 = (*_7) << _6.0;
(*_7) = 8290243227548684624_u64 as usize;
_3 = [_13.0,_6.0,_13.0,_13.0,_13.0,_13.0,_13.0];
Goto(bb3)
}
bb3 = {
Call(_19 = dump_var(4_usize, 10_usize, Move(_10), 14_usize, Move(_14), 4_usize, Move(_4), 9_usize, Move(_9)), bb4, UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: *const usize,mut _2: (u128,),mut _3: f64,mut _4: *const f32,mut _5: u128,mut _6: u128,mut _7: f32,mut _8: [u128; 7]) -> f32 {
mir! {
type RET = f32;
let _9: Adt64;
let _10: isize;
let _11: Adt51;
let _12: isize;
let _13: *const i128;
let _14: isize;
let _15: *const i128;
let _16: (i8, u16, i64);
let _17: Adt62;
let _18: bool;
let _19: u128;
let _20: f64;
let _21: ([u32; 5], i8, i8);
let _22: Adt59;
let _23: (i16, (*const i128, u16, *const usize), i8);
let _24: f64;
let _25: f32;
let _26: u64;
let _27: u8;
let _28: (i16, (*const i128, u16, *const usize), i8);
let _29: *const usize;
let _30: i16;
let _31: isize;
let _32: (char,);
let _33: bool;
let _34: ();
let _35: ();
{
_8 = [_5,_6,_5,_5,_2.0,_2.0,_2.0];
Goto(bb1)
}
bb1 = {
_8 = [_2.0,_6,_2.0,_6,_5,_2.0,_2.0];
_2 = (_6,);
RET = 20_u8 as f32;
_6 = _5;
_1 = core::ptr::addr_of!((*_1));
_2.0 = (*_1) as u128;
_9.fld0.fld6.1 = (-28356423491517770912551808312053498239_i128) ^ 116714321979615044224708530410404097122_i128;
_6 = !_5;
_11.fld1.1 = _3;
_9.fld0.fld1.4 = !221_u8;
match _5 {
0 => bb2,
234844962949914722736378918373063384265 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_1 = core::ptr::addr_of!((*_1));
_9.fld0.fld0.1.0 = (_7, true);
_9.fld0.fld5.2 = _3 != _11.fld1.1;
_12 = 57_isize * 9223372036854775807_isize;
_9.fld1 = [_9.fld0.fld5.2,_9.fld0.fld5.2,_9.fld0.fld0.1.0.1];
_9.fld0.fld2 = [2101866196_u32,2125987158_u32,3866764854_u32,2922536802_u32,1739763381_u32,3727537744_u32,3144282926_u32];
_9.fld0.fld5.2 = _11.fld1.1 <= _11.fld1.1;
_6 = !_5;
_9.fld0.fld1.0.2 = 8562860296204144321_i64 | (-8839853247186835488_i64);
Goto(bb5)
}
bb5 = {
_9.fld0.fld7 = 38111_u16 as u8;
_9.fld0.fld1.3 = '\u{fcc0e}';
_11.fld0 = (_9.fld0.fld0.1.0,);
_9.fld0.fld0.1.0.0 = _11.fld0.0.0;
_9.fld0.fld6.0 = 2035222665_i32 | (-599086058_i32);
_10 = _9.fld0.fld6.0 as isize;
_9.fld0.fld1.4 = _9.fld0.fld7;
_11.fld1.1 = _3 + _3;
_9.fld0.fld0 = (_9.fld0.fld5.2, _11.fld0, _9.fld0.fld6.1);
_9.fld0.fld1.1 = !18109349101385748974_u64;
_16 = ((-79_i8), 1832_u16, _9.fld0.fld1.0.2);
_14 = -_12;
_11.fld1 = ((*_1), _3, _9.fld0.fld5.2);
_9.fld0.fld1.0.0 = _16.0 + _16.0;
Goto(bb6)
}
bb6 = {
_10 = _2.0 as isize;
_9.fld0.fld0.1.0.0 = _11.fld1.0 as f32;
_11.fld2.0 = (*_1) as u128;
_9.fld0.fld1.0.1 = _16.1 - _16.1;
Goto(bb7)
}
bb7 = {
_10 = _9.fld0.fld1.3 as isize;
_17.fld2.2 = !_9.fld0.fld1.0.0;
_9.fld0.fld6.0 = _9.fld0.fld1.3 as i32;
_9.fld0.fld0.1.0.0 = -_11.fld0.0.0;
_9.fld0.fld3 = _9.fld0.fld1.0.0 | _9.fld0.fld1.0.0;
_18 = _9.fld0.fld0.1.0.1;
_22.fld2.fld0.0 = _9.fld0.fld1.1 as u128;
_9.fld0.fld1 = (_16, 16063706049232279939_u64, _11.fld2.0, '\u{8b9b7}', _9.fld0.fld7);
_9.fld0.fld0.1.0.1 = !_9.fld0.fld0.0;
_21.1 = -_9.fld0.fld3;
_11.fld0 = _9.fld0.fld0.1;
_22.fld2.fld1 = [_9.fld0.fld3,_9.fld0.fld3,_21.1,_21.1,_16.0,_9.fld0.fld1.0.0];
_15 = core::ptr::addr_of!(_9.fld0.fld0.2);
match _9.fld0.fld1.1 {
16063706049232279939 => bb9,
_ => bb8
}
}
bb8 = {
_1 = core::ptr::addr_of!((*_1));
_9.fld0.fld0.1.0 = (_7, true);
_9.fld0.fld5.2 = _3 != _11.fld1.1;
_12 = 57_isize * 9223372036854775807_isize;
_9.fld1 = [_9.fld0.fld5.2,_9.fld0.fld5.2,_9.fld0.fld0.1.0.1];
_9.fld0.fld2 = [2101866196_u32,2125987158_u32,3866764854_u32,2922536802_u32,1739763381_u32,3727537744_u32,3144282926_u32];
_9.fld0.fld5.2 = _11.fld1.1 <= _11.fld1.1;
_6 = !_5;
_9.fld0.fld1.0.2 = 8562860296204144321_i64 | (-8839853247186835488_i64);
Goto(bb5)
}
bb9 = {
_22.fld3.1 = _12 as u16;
_23.1.2 = core::ptr::addr_of!(_11.fld1.0);
(*_1) = !_11.fld1.0;
_9.fld0.fld3 = -_21.1;
_15 = core::ptr::addr_of!((*_15));
_22.fld3.0 = _9.fld0.fld3;
_9.fld0.fld1.4 = _9.fld0.fld7 - _9.fld0.fld7;
_23.1.2 = core::ptr::addr_of!((*_1));
_9.fld0.fld5.0 = (*_1);
_9.fld0.fld0.1 = (_11.fld0.0,);
_10 = _9.fld0.fld6.0 as isize;
_14 = _10 ^ _12;
_3 = _11.fld1.1 / f64::NAN;
_22.fld3 = _9.fld0.fld1.0;
_9.fld0.fld7 = !_9.fld0.fld1.4;
_9.fld1 = [_9.fld0.fld0.1.0.1,_9.fld0.fld5.2,_9.fld0.fld0.0];
_22.fld3 = (_17.fld2.2, _9.fld0.fld1.0.1, _16.2);
_16.1 = _22.fld3.1 | _22.fld3.1;
_17.fld0 = core::ptr::addr_of!(_9.fld0.fld0.2);
_9.fld0.fld4 = [_9.fld0.fld6.0,_9.fld0.fld6.0,_9.fld0.fld6.0,_9.fld0.fld6.0,_9.fld0.fld6.0];
_25 = _9.fld0.fld1.0.1 as f32;
match _9.fld0.fld1.1 {
16063706049232279939 => bb10,
_ => bb3
}
}
bb10 = {
_21.0 = [3772882493_u32,325308156_u32,3814952096_u32,1583341141_u32,1527596344_u32];
_5 = !_2.0;
_17.fld4 = 23113_i16;
_9.fld0.fld1.4 = _9.fld0.fld7 / 73_u8;
(*_15) = -_9.fld0.fld6.1;
_11.fld0.0.0 = _11.fld2.0 as f32;
RET = _25 * _25;
match _16.0 {
0 => bb4,
1 => bb8,
2 => bb11,
340282366920938463463374607431768211377 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_17.fld2.1 = -_22.fld3.0;
_2 = _22.fld2.fld0;
_9.fld0.fld1.0 = (_22.fld3.0, _16.1, _16.2);
_11.fld0.0 = (_25, _9.fld0.fld0.1.0.1);
_22.fld0 = !_9.fld0.fld1.0.1;
_9.fld0.fld5 = ((*_1), _3, _11.fld0.0.1);
_23.1.1 = _16.1 | _16.1;
(*_1) = _11.fld1.0 << _9.fld0.fld1.4;
_9.fld1 = [_9.fld0.fld5.2,_9.fld0.fld0.1.0.1,_9.fld0.fld0.0];
Call(_11.fld0.0.1 = fn6(_11.fld0.0.0, _9.fld0.fld0.1.0.1, _9.fld0.fld1.2, _18, _9.fld0.fld0.2, _23.1.2, _9.fld0.fld2, _4, _17.fld2.1, _2.0), bb14, UnwindUnreachable())
}
bb14 = {
_9.fld0.fld2 = [619443609_u32,2297650079_u32,3656164058_u32,1772046224_u32,4200128813_u32,2311258390_u32,2580942191_u32];
_9.fld0.fld1.0.0 = _17.fld2.1 << _22.fld0;
_15 = core::ptr::addr_of!((*_15));
_9.fld0.fld3 = _9.fld0.fld1.0.0 << (*_15);
_9.fld0.fld3 = -_17.fld2.2;
_23.2 = !_9.fld0.fld3;
_22.fld3.0 = _21.1 + _17.fld2.2;
_28.1 = (_17.fld0, _22.fld3.1, _1);
_5 = _14 as u128;
_31 = _10 * _14;
_9.fld0.fld1 = (_22.fld3, 16361644984587803320_u64, _5, '\u{feff5}', _9.fld0.fld7);
_8 = [_9.fld0.fld1.2,_5,_5,_9.fld0.fld1.2,_11.fld2.0,_5,_5];
_22.fld3 = (_21.1, _23.1.1, _16.2);
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(5_usize, 5_usize, Move(_5), 14_usize, Move(_14), 16_usize, Move(_16), 2_usize, Move(_2)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(5_usize, 8_usize, Move(_8), 35_usize, _35, 35_usize, _35, 35_usize, _35), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: f32,mut _2: bool,mut _3: u128,mut _4: bool,mut _5: i128,mut _6: *const usize,mut _7: [u32; 7],mut _8: *const f32,mut _9: i8,mut _10: u128) -> bool {
mir! {
type RET = bool;
let _11: (f32, bool);
let _12: Adt65;
let _13: [u128; 7];
let _14: isize;
let _15: ((i8, u16, i64), u64, u128, char, u8);
let _16: char;
let _17: f32;
let _18: Adt65;
let _19: [bool; 3];
let _20: Adt52;
let _21: isize;
let _22: Adt52;
let _23: isize;
let _24: i16;
let _25: (f32, bool);
let _26: bool;
let _27: i8;
let _28: usize;
let _29: isize;
let _30: Adt61;
let _31: i16;
let _32: char;
let _33: u64;
let _34: (*const i128, u16, *const usize);
let _35: *const i8;
let _36: Adt56;
let _37: f32;
let _38: u8;
let _39: *const i8;
let _40: char;
let _41: f32;
let _42: Adt64;
let _43: ();
let _44: ();
{
RET = _9 >= _9;
_1 = (*_6) as f32;
_7 = [2058804513_u32,640136114_u32,630560329_u32,2332759191_u32,4217376761_u32,3275484192_u32,682250379_u32];
RET = !_4;
_1 = _9 as f32;
(*_6) = !0_usize;
_5 = _2 as i128;
_7 = [2660615131_u32,138951037_u32,1149438245_u32,1554580017_u32,3669828927_u32,778576888_u32,805800284_u32];
_9 = (-93_i8);
(*_6) = 2_usize;
_1 = 1422_u16 as f32;
(*_6) = 11332319326616578723_usize;
_9 = 122_i8 - 111_i8;
_8 = core::ptr::addr_of!(_11.0);
match (*_6) {
0 => bb1,
11332319326616578723 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_11.1 = _4 ^ _4;
_12.fld0 = [_9,_9,_9,_9,_9,_9,_9];
_12.fld5.fld0 = !9279_u16;
_6 = core::ptr::addr_of!((*_6));
_12.fld6 = !4899405430138069884_u64;
_2 = !_4;
_9 = 109_i8;
_14 = _12.fld6 as isize;
_15.3 = '\u{ad5b1}';
_11 = (_1, _4);
_14 = (-26007_i16) as isize;
_16 = _15.3;
_13 = [_10,_10,_10,_10,_10,_10,_10];
_12.fld4 = _7;
(*_8) = -_1;
_7 = [1973060127_u32,3049046115_u32,627493091_u32,3211737673_u32,1738494913_u32,2497450504_u32,2544713794_u32];
_12.fld2 = _13;
_12.fld0 = [_9,_9,_9,_9,_9,_9,_9];
_11 = (_1, _2);
_18.fld6 = (-1958636985_i32) as u64;
_2 = _9 > _9;
(*_8) = _1;
Call((*_8) = core::intrinsics::transmute(_16), bb4, UnwindUnreachable())
}
bb4 = {
_12.fld5 = Adt55 { fld0: 53996_u16 };
_12.fld1 = 18_u8 - 144_u8;
_8 = core::ptr::addr_of!((*_8));
_3 = _10 + _10;
_15.1 = _12.fld6;
_15.2 = !_3;
(*_8) = _1;
(*_6) = _14 as usize;
_1 = (*_8);
_18.fld1 = _12.fld1 + _12.fld1;
_4 = _12.fld5.fld0 >= _12.fld5.fld0;
_18.fld0 = _12.fld0;
_18.fld3 = [1322543837_i32,958733372_i32,795387659_i32,(-1502594064_i32),152920473_i32];
_15.3 = _16;
_20.fld4.0.0 = _9 & _9;
_20.fld6 = _18.fld1 as usize;
_20.fld2 = -_14;
_15.4 = !_18.fld1;
_20.fld1.0 = (-31173_i16) as usize;
Goto(bb5)
}
bb5 = {
_20.fld1.2 = !_4;
_18.fld2 = _13;
_19 = [_20.fld1.2,_2,_4];
_22.fld4.1 = !_18.fld6;
_20.fld3 = _14 as u128;
_7 = [3462172615_u32,498455515_u32,1433257005_u32,3132248679_u32,934860633_u32,2421550801_u32,2871640911_u32];
RET = !_20.fld1.2;
_4 = !_2;
_18.fld5 = Adt55 { fld0: _12.fld5.fld0 };
_22.fld5 = (1755043452_u32,);
_10 = _20.fld4.0.0 as u128;
_18.fld5.fld0 = _12.fld5.fld0 + _12.fld5.fld0;
_15.3 = _16;
_20.fld4.0.2 = 5033372374474846481_i64;
_22.fld4.3 = _15.3;
(*_8) = _1;
_3 = !_10;
RET = !_2;
_8 = core::ptr::addr_of!(_17);
_20.fld1.2 = _4;
_20.fld5 = _22.fld5;
match _12.fld5.fld0 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
53996 => bb10,
_ => bb9
}
}
bb6 = {
_12.fld5 = Adt55 { fld0: 53996_u16 };
_12.fld1 = 18_u8 - 144_u8;
_8 = core::ptr::addr_of!((*_8));
_3 = _10 + _10;
_15.1 = _12.fld6;
_15.2 = !_3;
(*_8) = _1;
(*_6) = _14 as usize;
_1 = (*_8);
_18.fld1 = _12.fld1 + _12.fld1;
_4 = _12.fld5.fld0 >= _12.fld5.fld0;
_18.fld0 = _12.fld0;
_18.fld3 = [1322543837_i32,958733372_i32,795387659_i32,(-1502594064_i32),152920473_i32];
_15.3 = _16;
_20.fld4.0.0 = _9 & _9;
_20.fld6 = _18.fld1 as usize;
_20.fld2 = -_14;
_15.4 = !_18.fld1;
_20.fld1.0 = (-31173_i16) as usize;
Goto(bb5)
}
bb7 = {
_11.1 = _4 ^ _4;
_12.fld0 = [_9,_9,_9,_9,_9,_9,_9];
_12.fld5.fld0 = !9279_u16;
_6 = core::ptr::addr_of!((*_6));
_12.fld6 = !4899405430138069884_u64;
_2 = !_4;
_9 = 109_i8;
_14 = _12.fld6 as isize;
_15.3 = '\u{ad5b1}';
_11 = (_1, _4);
_14 = (-26007_i16) as isize;
_16 = _15.3;
_13 = [_10,_10,_10,_10,_10,_10,_10];
_12.fld4 = _7;
(*_8) = -_1;
_7 = [1973060127_u32,3049046115_u32,627493091_u32,3211737673_u32,1738494913_u32,2497450504_u32,2544713794_u32];
_12.fld2 = _13;
_12.fld0 = [_9,_9,_9,_9,_9,_9,_9];
_11 = (_1, _2);
_18.fld6 = (-1958636985_i32) as u64;
_2 = _9 > _9;
(*_8) = _1;
Call((*_8) = core::intrinsics::transmute(_16), bb4, UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_18.fld5 = Move(_12.fld5);
_15.0.2 = _20.fld4.0.2;
_20.fld4.0.1 = _18.fld5.fld0;
_22.fld6 = _18.fld5.fld0 as usize;
_22.fld4.0.0 = _20.fld4.0.0;
_3 = _15.2;
_15.1 = !_12.fld6;
_12 = Adt65 { fld0: _18.fld0,fld1: _18.fld1,fld2: _18.fld2,fld3: _18.fld3,fld4: _7,fld5: Move(_18.fld5),fld6: _15.1 };
_23 = _14 | _14;
_20.fld4.0.2 = _15.0.2 | _15.0.2;
_20.fld2 = _16 as isize;
Goto(bb11)
}
bb11 = {
_7 = [_22.fld5.0,_22.fld5.0,_22.fld5.0,_20.fld5.0,_20.fld5.0,_22.fld5.0,_22.fld5.0];
_15.0.1 = !_20.fld4.0.1;
_22.fld3 = !_20.fld3;
_12.fld3 = [(-1307967655_i32),(-1152134766_i32),1183098860_i32,41868571_i32,(-762348025_i32)];
_10 = _15.2;
_18.fld1 = _14 as u8;
_27 = _22.fld4.0.0 ^ _22.fld4.0.0;
_20.fld4.2 = _15.2;
_22.fld4.0.2 = !_20.fld4.0.2;
_15.0.1 = !_20.fld4.0.1;
_22.fld4 = (_20.fld4.0, _12.fld6, _20.fld3, _16, _15.4);
Goto(bb12)
}
bb12 = {
_18.fld1 = _11.0 as u8;
_22.fld5.0 = _20.fld5.0;
_20.fld1.0 = !(*_6);
_22.fld1.2 = _20.fld1.2 | _20.fld1.2;
_15.0.1 = _22.fld4.0.1;
_15.0 = (_22.fld4.0.0, _20.fld4.0.1, _20.fld4.0.2);
_29 = _23;
_18 = Move(_12);
_22.fld0 = [_22.fld3,_20.fld4.2,_3];
_25 = (_1, _11.1);
_30.fld0 = core::ptr::addr_of_mut!(_20.fld4.4);
_18.fld2 = [_20.fld4.2,_15.2,_15.2,_10,_22.fld4.2,_10,_3];
_26 = !_25.1;
_20.fld4.0.1 = _5 as u16;
_30.fld5.1 = _25.1 & _2;
_17 = _20.fld1.0 as f32;
_26 = !_2;
_18.fld2 = [_3,_10,_15.2,_22.fld3,_15.2,_10,_20.fld3];
_15.1 = _22.fld4.1 - _18.fld6;
_24 = _15.1 as i16;
_3 = _20.fld4.2;
_30.fld5.1 = _18.fld1 < _18.fld1;
_20.fld2 = _20.fld4.0.2 as isize;
Goto(bb13)
}
bb13 = {
_22.fld4.0.1 = _15.0.1 | _20.fld4.0.1;
_28 = (*_6);
_15.4 = !_18.fld1;
_20.fld1.2 = _25.1 | _26;
_22.fld4.0.0 = !_20.fld4.0.0;
_14 = _20.fld2;
_30.fld1 = _18.fld2;
_34.2 = core::ptr::addr_of!(_22.fld6);
_20.fld4.4 = _22.fld4.4 % 10_u8;
_21 = -_23;
_22.fld1.1 = _5 as f64;
_31 = -_24;
_28 = _22.fld1.2 as usize;
_34.0 = core::ptr::addr_of!(_5);
_22.fld4.0 = (_27, _20.fld4.0.1, _20.fld4.0.2);
_20.fld1.2 = _30.fld5.1 | _22.fld1.2;
_22.fld2 = _20.fld6 as isize;
_5 = (-112063172797326139230432866031750474203_i128) >> _27;
_30.fld3 = [_3,_20.fld4.2,_15.2];
_15.4 = _22.fld4.4 >> _22.fld4.0.1;
_15.0.1 = !_20.fld4.0.1;
_36.fld0.0 = _10 - _20.fld4.2;
_25.0 = (*_8);
_4 = !_20.fld1.2;
Goto(bb14)
}
bb14 = {
_22.fld1.1 = _15.1 as f64;
_15.0.0 = _22.fld4.0.0 << _20.fld4.4;
_24 = _22.fld2 as i16;
_18.fld0 = [_27,_22.fld4.0.0,_15.0.0,_27,_27,_20.fld4.0.0,_15.0.0];
_20.fld1 = (_28, _22.fld1.1, _4);
_37 = -(*_8);
_13 = [_36.fld0.0,_36.fld0.0,_22.fld4.2,_20.fld4.2,_10,_36.fld0.0,_36.fld0.0];
_23 = _22.fld2;
_18.fld4 = [_22.fld5.0,_22.fld5.0,_22.fld5.0,_22.fld5.0,_22.fld5.0,_22.fld5.0,_22.fld5.0];
_30.fld1 = _13;
_22.fld1 = (_20.fld6, _20.fld1.1, _20.fld1.2);
_32 = _15.3;
_40 = _32;
_13 = _30.fld1;
_2 = !_22.fld1.2;
_20.fld0 = _22.fld0;
_18.fld0 = [_15.0.0,_15.0.0,_22.fld4.0.0,_9,_27,_15.0.0,_27];
_20.fld1 = _22.fld1;
_15.3 = _16;
_20.fld1.1 = -_22.fld1.1;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(6_usize, 14_usize, Move(_14), 5_usize, Move(_5), 40_usize, Move(_40), 24_usize, Move(_24)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(6_usize, 16_usize, Move(_16), 9_usize, Move(_9), 23_usize, Move(_23), 19_usize, Move(_19)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(6_usize, 7_usize, Move(_7), 31_usize, Move(_31), 21_usize, Move(_21), 44_usize, _44), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: i64,mut _2: i64,mut _3: *const i128,mut _4: i64,mut _5: *const i128,mut _6: *const f32,mut _7: isize,mut _8: f32,mut _9: bool,mut _10: (*const i128, u16, *const usize),mut _11: u64,mut _12: (f32, bool),mut _13: i64,mut _14: [u128; 7],mut _15: bool) -> i8 {
mir! {
type RET = i8;
let _16: [u8; 6];
let _17: Adt66;
let _18: *const bool;
let _19: u64;
let _20: ([i32; 2], *const i8, u8, (*const i128, u16, *const usize), (*const i128, u16, *const usize));
let _21: isize;
let _22: (i32, i128);
let _23: Adt55;
let _24: char;
let _25: [i32; 5];
let _26: isize;
let _27: [u32; 7];
let _28: usize;
let _29: [u32; 5];
let _30: f32;
let _31: f64;
let _32: [u8; 6];
let _33: isize;
let _34: bool;
let _35: *const i8;
let _36: i128;
let _37: (i8, u16, i64);
let _38: *const usize;
let _39: (f32, bool);
let _40: [i32; 2];
let _41: i64;
let _42: u64;
let _43: *const i8;
let _44: isize;
let _45: bool;
let _46: isize;
let _47: ();
let _48: ();
{
_7 = (-9223372036854775808_isize) + (-18_isize);
_15 = !_12.1;
_11 = 4779786079301949139_u64 / 17392736267140035140_u64;
_13 = _4;
_5 = core::ptr::addr_of!((*_3));
_17.fld3.fld0.fld1.2 = 435314650_u32 as u128;
_17.fld2 = [143_u8,56_u8,59_u8,75_u8,75_u8,85_u8];
_4 = -_2;
_16 = _17.fld2;
_17.fld3.fld0.fld5.2 = _9;
_17.fld3.fld0.fld1.0.1 = !_10.1;
_20.3.2 = core::ptr::addr_of!(_17.fld3.fld0.fld5.0);
_17.fld3.fld0.fld5.1 = (*_3) as f64;
_17.fld3.fld0.fld5.0 = 3_usize | 7_usize;
_20.4.2 = core::ptr::addr_of!(_17.fld3.fld0.fld5.0);
(*_5) = (-1968802058_i32) as i128;
_22.1 = (*_3);
_10.2 = _20.3.2;
_20.4.0 = _3;
Goto(bb1)
}
bb1 = {
(*_3) = _22.1 << _2;
_17.fld1 = '\u{4d034}';
_17.fld3.fld0.fld0.1.0.0 = (*_6);
_17.fld3.fld0.fld6.0 = (-17455890_i32);
_17.fld3.fld0.fld4 = [_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0];
_20.3.0 = core::ptr::addr_of!(_17.fld3.fld0.fld6.1);
_20.2 = !228_u8;
_12.1 = _15;
_20.3.0 = core::ptr::addr_of!((*_3));
_20.3.0 = core::ptr::addr_of!((*_3));
_20.4.2 = core::ptr::addr_of!(_17.fld3.fld0.fld5.0);
Call(_17.fld3.fld0.fld0.2 = core::intrinsics::transmute((*_3)), bb2, UnwindUnreachable())
}
bb2 = {
_20.3.2 = core::ptr::addr_of!(_17.fld3.fld0.fld5.0);
_17.fld3.fld0.fld1.0.2 = _13;
_20.1 = core::ptr::addr_of!(_17.fld3.fld0.fld1.0.0);
Goto(bb3)
}
bb3 = {
_11 = 10184403549683061908_u64;
_17.fld3.fld0.fld0.1.0.1 = (*_5) != (*_3);
RET = (-36_i8) << _2;
_1 = -_13;
_14 = [_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2];
_17.fld3.fld0.fld6 = (501334934_i32, (*_5));
_17.fld3.fld0.fld0.1 = (_12,);
_15 = _12.1;
_12.0 = -_8;
_17.fld3.fld0.fld1.0.0 = -77_i8;
_25 = _17.fld3.fld0.fld4;
(*_5) = _17.fld3.fld0.fld6.1;
(*_6) = _12.0;
_23.fld0 = _10.1 - _10.1;
_20.3 = _10;
_17.fld3.fld0.fld7 = _17.fld3.fld0.fld6.1 as u8;
_17.fld3.fld0.fld3 = _17.fld3.fld0.fld1.0.0;
_20.4 = (_10.0, _20.3.1, _20.3.2);
_20.4.1 = _20.3.1 | _20.3.1;
Call(_17.fld3.fld0.fld1.1 = core::intrinsics::bswap(_11), bb4, UnwindUnreachable())
}
bb4 = {
_20.3 = (_5, _23.fld0, _10.2);
_24 = _17.fld1;
_17.fld3.fld0.fld1.1 = (-4970_i16) as u64;
_17.fld0 = [1085022313_u32,3979170355_u32,3517645895_u32,811725216_u32,800618583_u32,403179298_u32,3002131947_u32];
_10.0 = _5;
_17.fld3.fld0.fld0.1.0.1 = !_12.1;
_19 = _17.fld3.fld0.fld1.1 * _17.fld3.fld0.fld1.1;
_17.fld3.fld0.fld0.1.0.1 = (*_5) != (*_3);
_16 = [_17.fld3.fld0.fld7,_17.fld3.fld0.fld7,_17.fld3.fld0.fld7,_17.fld3.fld0.fld7,_17.fld3.fld0.fld7,_20.2];
_10 = (_20.4.0, _20.3.1, _20.4.2);
_20.1 = core::ptr::addr_of!(_17.fld3.fld0.fld3);
_17.fld3.fld0.fld5.2 = _9 ^ _9;
_20.4.2 = core::ptr::addr_of!(_28);
_17.fld3.fld0.fld1.4 = _17.fld3.fld0.fld5.1 as u8;
_8 = (*_6) * (*_6);
RET = _17.fld3.fld0.fld1.0.0;
_20.2 = _17.fld3.fld0.fld7 - _17.fld3.fld0.fld7;
Goto(bb5)
}
bb5 = {
_17.fld3.fld1 = [_17.fld3.fld0.fld0.1.0.1,_17.fld3.fld0.fld5.2,_17.fld3.fld0.fld0.1.0.1];
_29 = [682370262_u32,160357411_u32,3444663604_u32,335582757_u32,89384521_u32];
_23.fld0 = _20.4.1;
_17.fld3.fld0.fld4 = [_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0];
(*_5) = _17.fld3.fld0.fld6.1 & _17.fld3.fld0.fld6.1;
_17.fld3.fld0.fld0.1 = (_12,);
_24 = _17.fld1;
_10.0 = _5;
(*_5) = _7 as i128;
_18 = core::ptr::addr_of!(_15);
_17.fld3.fld0.fld5.0 = 4749265144984872160_usize + 1479541379680946955_usize;
Call(_20.3.2 = fn8(_10.0, _18, _19, _17.fld3.fld0.fld1.0.0, _10.2, _17.fld3.fld0.fld1.0.1, _12.0, _5, _7, (*_5), (*_18), (*_6), _17.fld0, _15), bb6, UnwindUnreachable())
}
bb6 = {
_22 = _17.fld3.fld0.fld6;
_17.fld3.fld0.fld2 = [2477060610_u32,3318860106_u32,3149977687_u32,3900805895_u32,4278886013_u32,610103403_u32,1184929695_u32];
_8 = _12.0;
(*_18) = _17.fld3.fld0.fld0.1.0.1 ^ _17.fld3.fld0.fld5.2;
_20.3 = _10;
_14 = [_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2];
_31 = _17.fld3.fld0.fld5.1;
_17.fld3.fld0.fld0.1 = (_12,);
_12 = ((*_6), _15);
_17.fld2 = [_20.2,_17.fld3.fld0.fld7,_20.2,_20.2,_20.2,_20.2];
_26 = _7 << _7;
_28 = _22.0 as usize;
_23.fld0 = _20.3.1;
_17.fld3.fld0.fld1.2 = 66134943601654491992459228525954607998_u128 * 147418198267358740725529218840330264242_u128;
Goto(bb7)
}
bb7 = {
_17.fld3.fld0.fld3 = _17.fld3.fld0.fld1.0.0;
_33 = _26 - _7;
_7 = _33;
_17.fld3.fld0.fld6.0 = _22.0 ^ _22.0;
_20.0 = [_22.0,_22.0];
_20.2 = _17.fld3.fld0.fld7 / 7_u8;
(*_3) = _33 as i128;
_17.fld3.fld0.fld5 = (_28, _31, (*_18));
_37 = (_17.fld3.fld0.fld1.0.0, _23.fld0, _17.fld3.fld0.fld1.0.2);
_2 = (*_6) as i64;
_17.fld3.fld0.fld6.1 = (*_5);
_35 = core::ptr::addr_of!(_17.fld3.fld0.fld3);
_39.1 = (*_18);
_39 = _12;
_39.0 = _8;
_20.4.0 = core::ptr::addr_of!(_17.fld3.fld0.fld0.2);
_17.fld3.fld0.fld6.0 = !_22.0;
match _13 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb8,
6535393929057206321 => bb10,
_ => bb9
}
}
bb8 = {
_22 = _17.fld3.fld0.fld6;
_17.fld3.fld0.fld2 = [2477060610_u32,3318860106_u32,3149977687_u32,3900805895_u32,4278886013_u32,610103403_u32,1184929695_u32];
_8 = _12.0;
(*_18) = _17.fld3.fld0.fld0.1.0.1 ^ _17.fld3.fld0.fld5.2;
_20.3 = _10;
_14 = [_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2,_17.fld3.fld0.fld1.2];
_31 = _17.fld3.fld0.fld5.1;
_17.fld3.fld0.fld0.1 = (_12,);
_12 = ((*_6), _15);
_17.fld2 = [_20.2,_17.fld3.fld0.fld7,_20.2,_20.2,_20.2,_20.2];
_26 = _7 << _7;
_28 = _22.0 as usize;
_23.fld0 = _20.3.1;
_17.fld3.fld0.fld1.2 = 66134943601654491992459228525954607998_u128 * 147418198267358740725529218840330264242_u128;
Goto(bb7)
}
bb9 = {
_17.fld3.fld1 = [_17.fld3.fld0.fld0.1.0.1,_17.fld3.fld0.fld5.2,_17.fld3.fld0.fld0.1.0.1];
_29 = [682370262_u32,160357411_u32,3444663604_u32,335582757_u32,89384521_u32];
_23.fld0 = _20.4.1;
_17.fld3.fld0.fld4 = [_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0];
(*_5) = _17.fld3.fld0.fld6.1 & _17.fld3.fld0.fld6.1;
_17.fld3.fld0.fld0.1 = (_12,);
_24 = _17.fld1;
_10.0 = _5;
(*_5) = _7 as i128;
_18 = core::ptr::addr_of!(_15);
_17.fld3.fld0.fld5.0 = 4749265144984872160_usize + 1479541379680946955_usize;
Call(_20.3.2 = fn8(_10.0, _18, _19, _17.fld3.fld0.fld1.0.0, _10.2, _17.fld3.fld0.fld1.0.1, _12.0, _5, _7, (*_5), (*_18), (*_6), _17.fld0, _15), bb6, UnwindUnreachable())
}
bb10 = {
_17.fld3.fld0.fld5.0 = _28 - _28;
_17.fld3.fld0.fld0.1 = (_12,);
_8 = (*_6) - (*_6);
_39.1 = (*_18);
_17.fld1 = _24;
_17.fld2 = _16;
_17.fld3.fld0.fld6 = (_22.0, (*_3));
_10.2 = core::ptr::addr_of!(_28);
_22 = (_17.fld3.fld0.fld6.0, _17.fld3.fld0.fld6.1);
_20.4.1 = _23.fld0 << _28;
_37 = ((*_35), _20.4.1, _17.fld3.fld0.fld1.0.2);
_12.0 = _8;
_39 = (_8, _17.fld3.fld0.fld0.1.0.1);
_37 = (_17.fld3.fld0.fld1.0.0, _20.4.1, _4);
_41 = -_17.fld3.fld0.fld1.0.2;
(*_6) = _20.4.1 as f32;
_32 = [_20.2,_17.fld3.fld0.fld7,_17.fld3.fld0.fld7,_20.2,_20.2,_20.2];
_17.fld3.fld0.fld1 = (_37, _11, 316748772764333496772910916014856226490_u128, _17.fld1, _17.fld3.fld0.fld7);
match _17.fld3.fld0.fld1.2 {
0 => bb3,
316748772764333496772910916014856226490 => bb12,
_ => bb11
}
}
bb11 = {
_20.3.2 = core::ptr::addr_of!(_17.fld3.fld0.fld5.0);
_17.fld3.fld0.fld1.0.2 = _13;
_20.1 = core::ptr::addr_of!(_17.fld3.fld0.fld1.0.0);
Goto(bb3)
}
bb12 = {
(*_35) = _11 as i8;
_20.4 = (_3, _17.fld3.fld0.fld1.0.1, _20.3.2);
_2 = _17.fld3.fld0.fld5.0 as i64;
_30 = (*_6) + (*_6);
_35 = _20.1;
_22 = (_17.fld3.fld0.fld6.0, _17.fld3.fld0.fld0.2);
_21 = _7 + _7;
_17.fld3.fld0.fld1.0.2 = 29681_i16 as i64;
_20.4.1 = _10.1 & _37.1;
_34 = !_39.1;
_33 = _7;
match _17.fld3.fld0.fld6.0 {
0 => bb9,
501334934 => bb14,
_ => bb13
}
}
bb13 = {
_17.fld3.fld1 = [_17.fld3.fld0.fld0.1.0.1,_17.fld3.fld0.fld5.2,_17.fld3.fld0.fld0.1.0.1];
_29 = [682370262_u32,160357411_u32,3444663604_u32,335582757_u32,89384521_u32];
_23.fld0 = _20.4.1;
_17.fld3.fld0.fld4 = [_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0,_17.fld3.fld0.fld6.0];
(*_5) = _17.fld3.fld0.fld6.1 & _17.fld3.fld0.fld6.1;
_17.fld3.fld0.fld0.1 = (_12,);
_24 = _17.fld1;
_10.0 = _5;
(*_5) = _7 as i128;
_18 = core::ptr::addr_of!(_15);
_17.fld3.fld0.fld5.0 = 4749265144984872160_usize + 1479541379680946955_usize;
Call(_20.3.2 = fn8(_10.0, _18, _19, _17.fld3.fld0.fld1.0.0, _10.2, _17.fld3.fld0.fld1.0.1, _12.0, _5, _7, (*_5), (*_18), (*_6), _17.fld0, _15), bb6, UnwindUnreachable())
}
bb14 = {
_17.fld3.fld0.fld1 = (_37, _11, 238140076239150877330573660763979871265_u128, _17.fld1, _20.2);
_17.fld3.fld0.fld6 = (_22.0, (*_5));
_26 = _33 & _33;
_17.fld3.fld0.fld1.2 = 44694904679525322205962754501356269417_u128;
_43 = core::ptr::addr_of!(_17.fld3.fld0.fld3);
_20.0 = [_22.0,_22.0];
_17.fld3.fld0.fld1.0.2 = _13 | _4;
_37.1 = _20.4.1;
_39 = _17.fld3.fld0.fld0.1.0;
_12.1 = _39.1;
_12 = _39;
_12.1 = (*_18) ^ _17.fld3.fld0.fld0.1.0.1;
_33 = _21;
_37.1 = _20.4.1 * _20.3.1;
_3 = _10.0;
_44 = _21;
(*_35) = _17.fld3.fld0.fld1.2 as i8;
_17.fld3.fld0.fld7 = (*_5) as u8;
_37.2 = _17.fld3.fld0.fld1.1 as i64;
_16 = [_17.fld3.fld0.fld1.4,_17.fld3.fld0.fld7,_17.fld3.fld0.fld7,_20.2,_20.2,_17.fld3.fld0.fld7];
_17.fld3.fld0.fld0.1.0.1 = _33 != _44;
(*_3) = _17.fld3.fld0.fld0.2 | _17.fld3.fld0.fld6.1;
(*_35) = -_37.0;
_22.0 = (*_3) as i32;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(7_usize, 37_usize, Move(_37), 33_usize, Move(_33), 14_usize, Move(_14), 9_usize, Move(_9)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(7_usize, 7_usize, Move(_7), 44_usize, Move(_44), 16_usize, Move(_16), 24_usize, Move(_24)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(7_usize, 19_usize, Move(_19), 41_usize, Move(_41), 1_usize, Move(_1), 29_usize, Move(_29)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: *const i128,mut _2: *const bool,mut _3: u64,mut _4: i8,mut _5: *const usize,mut _6: u16,mut _7: f32,mut _8: *const i128,mut _9: isize,mut _10: i128,mut _11: bool,mut _12: f32,mut _13: [u32; 7],mut _14: bool) -> *const usize {
mir! {
type RET = *const usize;
let _15: [i8; 6];
let _16: i128;
let _17: u32;
let _18: isize;
let _19: *const i8;
let _20: f32;
let _21: isize;
let _22: Adt59;
let _23: i8;
let _24: isize;
let _25: u64;
let _26: f64;
let _27: i32;
let _28: [u32; 7];
let _29: i32;
let _30: char;
let _31: [u32; 7];
let _32: Adt66;
let _33: (f32, bool);
let _34: usize;
let _35: f32;
let _36: char;
let _37: [u32; 5];
let _38: bool;
let _39: *const bool;
let _40: ();
let _41: ();
{
RET = _5;
(*_8) = _10;
_8 = _1;
(*RET) = 1_usize & 9164452300711206606_usize;
(*_1) = _10;
_6 = 10083_u16;
_11 = !_14;
(*_1) = _7 as i128;
(*_5) = 16172572160945038327_usize;
_1 = _8;
_2 = core::ptr::addr_of!((*_2));
_1 = core::ptr::addr_of!(_10);
_14 = _11;
(*RET) = 6_usize;
_6 = 3538305817_u32 as u16;
(*_1) = _4 as i128;
_9 = (-118_isize) ^ (-9223372036854775808_isize);
RET = _5;
Call(_8 = fn9(_12, (*_2), (*_1), _3, (*_2), _4), bb1, UnwindUnreachable())
}
bb1 = {
_15 = [_4,_4,_4,_4,_4,_4];
_9 = 9223372036854775807_isize << _6;
_10 = 19172569111094374448886092718676974164_i128;
(*_2) = !_11;
_1 = _8;
(*RET) = !5212972230443247726_usize;
_5 = core::ptr::addr_of!((*_5));
_17 = 2605429634_u32 / 1979958644_u32;
_16 = -_10;
(*_5) = '\u{101c2}' as usize;
(*RET) = 5_usize;
(*RET) = 16767861534153499952_usize | 3_usize;
_9 = _17 as isize;
(*_2) = _14;
(*RET) = 1_usize;
_10 = _16;
_15 = [_4,_4,_4,_4,_4,_4];
_10 = _9 as i128;
(*RET) = _9 as usize;
_3 = 9203934676658198240_u64 ^ 9754981754298242442_u64;
(*RET) = 8391403532175001197_usize;
Call(_18 = core::intrinsics::transmute((*_5)), bb2, UnwindUnreachable())
}
bb2 = {
(*_2) = _14;
RET = core::ptr::addr_of!((*RET));
_17 = _3 as u32;
(*RET) = (-21009_i16) as usize;
_19 = core::ptr::addr_of!(_4);
_11 = (*_2);
_19 = core::ptr::addr_of!((*_19));
_19 = core::ptr::addr_of!((*_19));
(*_5) = 4_usize;
Goto(bb3)
}
bb3 = {
_16 = _10 * _10;
_22.fld2.fld0.0 = (-14856_i16) as u128;
_4 = 124_i8;
_21 = '\u{fa24e}' as isize;
_23 = !(*_19);
_1 = core::ptr::addr_of!(_10);
Goto(bb4)
}
bb4 = {
_7 = -_12;
_22.fld3.1 = _6;
_22.fld2.fld0 = (190642162119768333067382597935846885511_u128,);
_22.fld2.fld0.0 = 222652222880636579137622254833271846241_u128 >> (*_1);
(*_1) = _16;
_22.fld1 = (*_19) as f64;
_22.fld2.fld0 = (16641995709274403774437151136681287068_u128,);
_22.fld2.fld0 = (183397891908488527444786304786743798594_u128,);
match (*_5) {
0 => bb3,
1 => bb2,
2 => bb5,
4 => bb7,
_ => bb6
}
}
bb5 = {
_16 = _10 * _10;
_22.fld2.fld0.0 = (-14856_i16) as u128;
_4 = 124_i8;
_21 = '\u{fa24e}' as isize;
_23 = !(*_19);
_1 = core::ptr::addr_of!(_10);
Goto(bb4)
}
bb6 = {
_15 = [_4,_4,_4,_4,_4,_4];
_9 = 9223372036854775807_isize << _6;
_10 = 19172569111094374448886092718676974164_i128;
(*_2) = !_11;
_1 = _8;
(*RET) = !5212972230443247726_usize;
_5 = core::ptr::addr_of!((*_5));
_17 = 2605429634_u32 / 1979958644_u32;
_16 = -_10;
(*_5) = '\u{101c2}' as usize;
(*RET) = 5_usize;
(*RET) = 16767861534153499952_usize | 3_usize;
_9 = _17 as isize;
(*_2) = _14;
(*RET) = 1_usize;
_10 = _16;
_15 = [_4,_4,_4,_4,_4,_4];
_10 = _9 as i128;
(*RET) = _9 as usize;
_3 = 9203934676658198240_u64 ^ 9754981754298242442_u64;
(*RET) = 8391403532175001197_usize;
Call(_18 = core::intrinsics::transmute((*_5)), bb2, UnwindUnreachable())
}
bb7 = {
_22.fld3 = (_4, _6, 8656668624242691600_i64);
_23 = '\u{e6fbc}' as i8;
(*_19) = !_22.fld3.0;
(*_1) = _16;
_18 = -_9;
_11 = !(*_2);
_26 = 12748_i16 as f64;
_11 = (*_5) != (*RET);
_12 = _7 * _7;
(*_2) = _14 ^ _14;
_22.fld3 = ((*_19), _6, 1233431955365917946_i64);
_22.fld3 = (_4, _6, (-2228276073548528878_i64));
(*_19) = _23 ^ _23;
_11 = !_14;
(*RET) = !2_usize;
(*_2) = !_11;
_22.fld2.fld1 = [(*_19),_23,(*_19),(*_19),(*_19),(*_19)];
Goto(bb8)
}
bb8 = {
(*_1) = -_16;
_26 = _22.fld1 - _22.fld1;
(*_2) = !_14;
_20 = -_7;
_3 = 152_u8 as u64;
_25 = _3;
Call((*_5) = core::intrinsics::bswap(6638229083754433427_usize), bb9, UnwindUnreachable())
}
bb9 = {
RET = core::ptr::addr_of!((*RET));
_6 = (-1008383381_i32) as u16;
_12 = _7;
(*RET) = 9485857814963726998_usize << _17;
_9 = _18 * _18;
_32.fld3.fld0.fld0.1.0.0 = _12;
_22.fld2.fld0 = (340270428343959766626387979619188291272_u128,);
_22.fld2.fld1 = [(*_19),(*_19),_4,_22.fld3.0,_22.fld3.0,_22.fld3.0];
_32.fld3.fld0.fld5 = ((*_5), _26, (*_2));
_32.fld3.fld0.fld0.1.0.1 = !(*_2);
_8 = _1;
_3 = !_25;
Goto(bb10)
}
bb10 = {
_29 = (*_8) as i32;
_27 = _29;
_32.fld3.fld0.fld6 = (_27, (*_8));
_4 = _22.fld3.0;
(*RET) = _32.fld3.fld0.fld5.0;
_32.fld3.fld0.fld3 = -_22.fld3.0;
_17 = 241260443_u32;
_22.fld3 = ((*_19), _6, (-2189356641620249529_i64));
_6 = !_22.fld3.1;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _32.fld3.fld0.fld5.0 / 3_usize;
_3 = (*_8) as u64;
(*_19) = _32.fld3.fld0.fld3;
_32.fld3.fld0.fld1.4 = 241_u8;
match _22.fld2.fld0.0 {
0 => bb11,
340270428343959766626387979619188291272 => bb13,
_ => bb12
}
}
bb11 = {
RET = core::ptr::addr_of!((*RET));
_6 = (-1008383381_i32) as u16;
_12 = _7;
(*RET) = 9485857814963726998_usize << _17;
_9 = _18 * _18;
_32.fld3.fld0.fld0.1.0.0 = _12;
_22.fld2.fld0 = (340270428343959766626387979619188291272_u128,);
_22.fld2.fld1 = [(*_19),(*_19),_4,_22.fld3.0,_22.fld3.0,_22.fld3.0];
_32.fld3.fld0.fld5 = ((*_5), _26, (*_2));
_32.fld3.fld0.fld0.1.0.1 = !(*_2);
_8 = _1;
_3 = !_25;
Goto(bb10)
}
bb12 = {
_7 = -_12;
_22.fld3.1 = _6;
_22.fld2.fld0 = (190642162119768333067382597935846885511_u128,);
_22.fld2.fld0.0 = 222652222880636579137622254833271846241_u128 >> (*_1);
(*_1) = _16;
_22.fld1 = (*_19) as f64;
_22.fld2.fld0 = (16641995709274403774437151136681287068_u128,);
_22.fld2.fld0 = (183397891908488527444786304786743798594_u128,);
match (*_5) {
0 => bb3,
1 => bb2,
2 => bb5,
4 => bb7,
_ => bb6
}
}
bb13 = {
_33.1 = _27 < _32.fld3.fld0.fld6.0;
_23 = -_32.fld3.fld0.fld3;
(*_5) = !_32.fld3.fld0.fld5.0;
(*_2) = (*_1) <= (*_1);
match _22.fld3.2 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
340282366920938463461185250790147961927 => bb21,
_ => bb20
}
}
bb14 = {
_16 = _10 * _10;
_22.fld2.fld0.0 = (-14856_i16) as u128;
_4 = 124_i8;
_21 = '\u{fa24e}' as isize;
_23 = !(*_19);
_1 = core::ptr::addr_of!(_10);
Goto(bb4)
}
bb15 = {
RET = core::ptr::addr_of!((*RET));
_6 = (-1008383381_i32) as u16;
_12 = _7;
(*RET) = 9485857814963726998_usize << _17;
_9 = _18 * _18;
_32.fld3.fld0.fld0.1.0.0 = _12;
_22.fld2.fld0 = (340270428343959766626387979619188291272_u128,);
_22.fld2.fld1 = [(*_19),(*_19),_4,_22.fld3.0,_22.fld3.0,_22.fld3.0];
_32.fld3.fld0.fld5 = ((*_5), _26, (*_2));
_32.fld3.fld0.fld0.1.0.1 = !(*_2);
_8 = _1;
_3 = !_25;
Goto(bb10)
}
bb16 = {
_29 = (*_8) as i32;
_27 = _29;
_32.fld3.fld0.fld6 = (_27, (*_8));
_4 = _22.fld3.0;
(*RET) = _32.fld3.fld0.fld5.0;
_32.fld3.fld0.fld3 = -_22.fld3.0;
_17 = 241260443_u32;
_22.fld3 = ((*_19), _6, (-2189356641620249529_i64));
_6 = !_22.fld3.1;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _32.fld3.fld0.fld5.0 / 3_usize;
_3 = (*_8) as u64;
(*_19) = _32.fld3.fld0.fld3;
_32.fld3.fld0.fld1.4 = 241_u8;
match _22.fld2.fld0.0 {
0 => bb11,
340270428343959766626387979619188291272 => bb13,
_ => bb12
}
}
bb17 = {
RET = core::ptr::addr_of!((*RET));
_6 = (-1008383381_i32) as u16;
_12 = _7;
(*RET) = 9485857814963726998_usize << _17;
_9 = _18 * _18;
_32.fld3.fld0.fld0.1.0.0 = _12;
_22.fld2.fld0 = (340270428343959766626387979619188291272_u128,);
_22.fld2.fld1 = [(*_19),(*_19),_4,_22.fld3.0,_22.fld3.0,_22.fld3.0];
_32.fld3.fld0.fld5 = ((*_5), _26, (*_2));
_32.fld3.fld0.fld0.1.0.1 = !(*_2);
_8 = _1;
_3 = !_25;
Goto(bb10)
}
bb18 = {
_7 = -_12;
_22.fld3.1 = _6;
_22.fld2.fld0 = (190642162119768333067382597935846885511_u128,);
_22.fld2.fld0.0 = 222652222880636579137622254833271846241_u128 >> (*_1);
(*_1) = _16;
_22.fld1 = (*_19) as f64;
_22.fld2.fld0 = (16641995709274403774437151136681287068_u128,);
_22.fld2.fld0 = (183397891908488527444786304786743798594_u128,);
match (*_5) {
0 => bb3,
1 => bb2,
2 => bb5,
4 => bb7,
_ => bb6
}
}
bb19 = {
_22.fld3 = (_4, _6, 8656668624242691600_i64);
_23 = '\u{e6fbc}' as i8;
(*_19) = !_22.fld3.0;
(*_1) = _16;
_18 = -_9;
_11 = !(*_2);
_26 = 12748_i16 as f64;
_11 = (*_5) != (*RET);
_12 = _7 * _7;
(*_2) = _14 ^ _14;
_22.fld3 = ((*_19), _6, 1233431955365917946_i64);
_22.fld3 = (_4, _6, (-2228276073548528878_i64));
(*_19) = _23 ^ _23;
_11 = !_14;
(*RET) = !2_usize;
(*_2) = !_11;
_22.fld2.fld1 = [(*_19),_23,(*_19),(*_19),(*_19),(*_19)];
Goto(bb8)
}
bb20 = {
(*_2) = _14;
RET = core::ptr::addr_of!((*RET));
_17 = _3 as u32;
(*RET) = (-21009_i16) as usize;
_19 = core::ptr::addr_of!(_4);
_11 = (*_2);
_19 = core::ptr::addr_of!((*_19));
_19 = core::ptr::addr_of!((*_19));
(*_5) = 4_usize;
Goto(bb3)
}
bb21 = {
_32.fld3.fld0.fld1 = (_22.fld3, _25, _22.fld2.fld0.0, '\u{85d96}', 237_u8);
_3 = (*_19) as u64;
_18 = _9;
_8 = core::ptr::addr_of!(_32.fld3.fld0.fld0.2);
_28 = _13;
_32.fld3.fld0.fld1.0.1 = !_22.fld3.1;
_32.fld3.fld0.fld1.0 = ((*_19), _22.fld3.1, _22.fld3.2);
_19 = core::ptr::addr_of!(_32.fld3.fld0.fld1.0.0);
_32.fld3.fld0.fld0.1.0 = (_20, _32.fld3.fld0.fld5.2);
_32.fld1 = _32.fld3.fld0.fld1.3;
_32.fld1 = _32.fld3.fld0.fld1.3;
_18 = -_21;
(*_2) = _14;
Goto(bb22)
}
bb22 = {
Call(_40 = dump_var(8_usize, 3_usize, Move(_3), 14_usize, Move(_14), 10_usize, Move(_10), 6_usize, Move(_6)), bb23, UnwindUnreachable())
}
bb23 = {
Call(_40 = dump_var(8_usize, 27_usize, Move(_27), 29_usize, Move(_29), 9_usize, Move(_9), 15_usize, Move(_15)), bb24, UnwindUnreachable())
}
bb24 = {
Call(_40 = dump_var(8_usize, 28_usize, Move(_28), 41_usize, _41, 41_usize, _41, 41_usize, _41), bb25, UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: f32,mut _2: bool,mut _3: i128,mut _4: u64,mut _5: bool,mut _6: i8) -> *const i128 {
mir! {
type RET = *const i128;
let _7: isize;
let _8: *const [bool; 3];
let _9: (i32, i128);
let _10: u128;
let _11: f32;
let _12: isize;
let _13: u16;
let _14: Adt50;
let _15: Adt59;
let _16: [u128; 7];
let _17: bool;
let _18: Adt60;
let _19: Adt51;
let _20: f32;
let _21: [bool; 3];
let _22: Adt60;
let _23: (u32,);
let _24: Adt57;
let _25: char;
let _26: Adt52;
let _27: *const f32;
let _28: u16;
let _29: u8;
let _30: u64;
let _31: u64;
let _32: u16;
let _33: u128;
let _34: bool;
let _35: [i8; 7];
let _36: (u128,);
let _37: [u128; 3];
let _38: char;
let _39: bool;
let _40: char;
let _41: f64;
let _42: [u128; 3];
let _43: ((i8, u16, i64), u64, u128, char, u8);
let _44: bool;
let _45: ();
let _46: ();
{
RET = core::ptr::addr_of!(_3);
(*RET) = !(-72362931773365967299237787516720636016_i128);
_2 = _5;
(*RET) = 42537312052979767886891815740705803386_i128 + (-114407954974801583830294982158389561998_i128);
_1 = 2298169790_u32 as f32;
(*RET) = 35264214863828093639791747805034714855_i128 ^ (-62642218101652308105960096754196441743_i128);
(*RET) = 47075603530082141850655481054690791349_i128;
RET = core::ptr::addr_of!(_3);
_3 = 50076513577409445968808495625471009968_i128 >> _4;
_3 = -43378754964800410256576366733761419468_i128;
(*RET) = -23488847647639303323097098937093721382_i128;
(*RET) = (-76965079402342624137252239611691804925_i128) + (-40737164312266516820193331118860706111_i128);
RET = core::ptr::addr_of!((*RET));
RET = core::ptr::addr_of!((*RET));
_6 = !105_i8;
_1 = 5779868685772468127_usize as f32;
_2 = _5;
_7 = (-9223372036854775808_isize);
_3 = 14549869540754448908767200473629552911_i128 >> _4;
_1 = 118514890_u32 as f32;
_9 = (227894416_i32, _3);
Call((*RET) = fn10(_7, _7, _9.0, _7, _7, _7, _9, _9.0, _9.0, _2, _7), bb1, UnwindUnreachable())
}
bb1 = {
_4 = 16756871459235072555_u64;
(*RET) = -_9.1;
_9.0 = -30027280_i32;
_12 = -_7;
_5 = _2 & _2;
_12 = _7 ^ _7;
_10 = _9.0 as u128;
_13 = 44293_u16;
_4 = !10545290072646146112_u64;
_1 = 12251089402203616407_usize as f32;
_12 = _7;
_9 = ((-1268529256_i32), (*RET));
(*RET) = _9.1 & _9.1;
_14.fld2.2 = !(-1634349091126890448_i64);
(*RET) = 2205965612_u32 as i128;
_3 = _9.1;
_15.fld3.0 = _6;
(*RET) = 3951654399_u32 as i128;
RET = core::ptr::addr_of!((*RET));
_14.fld1 = [_10,_10,_10,_10,_10,_10,_10];
_4 = 48_u8 as u64;
_15.fld3.2 = _14.fld2.2;
_15.fld3.1 = _13 * _13;
Call(_14 = fn11(_12, _7, _7, _7, _9, _9.0, _9.1, _9, _2, _7, _7), bb2, UnwindUnreachable())
}
bb2 = {
_14.fld2.1 = _13 + _15.fld3.1;
_14.fld2.2 = _15.fld3.2;
_9.0 = 211_u8 as i32;
_3 = _9.1;
_16 = [_10,_10,_10,_10,_10,_10,_10];
_1 = _14.fld2.1 as f32;
_10 = !313647022770046250664466485921715073908_u128;
_15.fld0 = _15.fld3.1;
RET = core::ptr::addr_of!(_9.1);
match _7 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb3 = {
_4 = 16756871459235072555_u64;
(*RET) = -_9.1;
_9.0 = -30027280_i32;
_12 = -_7;
_5 = _2 & _2;
_12 = _7 ^ _7;
_10 = _9.0 as u128;
_13 = 44293_u16;
_4 = !10545290072646146112_u64;
_1 = 12251089402203616407_usize as f32;
_12 = _7;
_9 = ((-1268529256_i32), (*RET));
(*RET) = _9.1 & _9.1;
_14.fld2.2 = !(-1634349091126890448_i64);
(*RET) = 2205965612_u32 as i128;
_3 = _9.1;
_15.fld3.0 = _6;
(*RET) = 3951654399_u32 as i128;
RET = core::ptr::addr_of!((*RET));
_14.fld1 = [_10,_10,_10,_10,_10,_10,_10];
_4 = 48_u8 as u64;
_15.fld3.2 = _14.fld2.2;
_15.fld3.1 = _13 * _13;
Call(_14 = fn11(_12, _7, _7, _7, _9, _9.0, _9.1, _9, _2, _7, _7), bb2, UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
(*RET) = _3;
_14 = Adt50 { fld0: _5,fld1: _16,fld2: _15.fld3 };
_19.fld2.0 = _7 as u128;
_22.fld0.1.0 = (_1, _5);
_19.fld1.2 = !_14.fld0;
_20 = 4_usize as f32;
_19.fld0 = _22.fld0.1;
_23 = (3299167386_u32,);
_14.fld2 = (_15.fld3.0, _13, _15.fld3.2);
RET = core::ptr::addr_of!(_24.fld6.1);
_19.fld3 = core::ptr::addr_of!(_22.fld0.2);
_19.fld2 = (_10,);
_22.fld0.1 = _19.fld0;
_24.fld7 = 18_u8 | 84_u8;
_26.fld4.0.1 = _14.fld2.1 + _15.fld3.1;
_24.fld5.0 = 2_usize / 2_usize;
_26.fld4.0 = (_15.fld3.0, _15.fld0, _14.fld2.2);
_18.fld1.0 = _23.0;
_18.fld0.1 = (_22.fld0.1.0,);
_24.fld1.0 = (_14.fld2.0, _14.fld2.1, _14.fld2.2);
_22.fld0.1.0.1 = _14.fld0;
RET = core::ptr::addr_of!(_3);
_24.fld4 = [_9.0,_9.0,_9.0,_9.0,_9.0];
Goto(bb9)
}
bb9 = {
_19.fld0.0.1 = _5 | _19.fld1.2;
_24.fld2 = [_18.fld1.0,_23.0,_18.fld1.0,_23.0,_23.0,_23.0,_23.0];
_24.fld0.1.0.0 = _22.fld0.1.0.0 + _1;
_26.fld5.0 = _23.0;
_24.fld1.2 = _9.0 as u128;
_22.fld0.1.0.0 = _19.fld0.0.0;
_24.fld1.3 = '\u{b3834}';
_15.fld2.fld0 = (_19.fld2.0,);
Call(_14.fld2.2 = core::intrinsics::bswap(_24.fld1.0.2), bb10, UnwindUnreachable())
}
bb10 = {
_26.fld1.0 = !_24.fld5.0;
_24.fld1.3 = '\u{967ea}';
_22.fld0 = (_19.fld0.0.1, _19.fld0, _3);
_14.fld2 = (_24.fld1.0.0, _15.fld0, _15.fld3.2);
_14.fld0 = _18.fld0.1.0.1 | _22.fld0.0;
_26.fld1.1 = _26.fld4.0.2 as f64;
_26.fld1.2 = _19.fld0.0.1;
_19.fld1.0 = _26.fld1.0 >> _22.fld0.2;
_26.fld4.1 = _4;
_7 = -_12;
_15.fld3 = (_24.fld1.0.0, _13, _26.fld4.0.2);
_24.fld1 = (_14.fld2, _4, _15.fld2.fld0.0, '\u{b1016}', _24.fld7);
_26.fld1.1 = _10 as f64;
_18.fld0.1.0.0 = -_19.fld0.0.0;
_18.fld1 = _23;
_26.fld4.0.2 = _15.fld3.2 + _14.fld2.2;
_26.fld1.0 = _24.fld5.0 % 8836647251213555939_usize;
_9 = ((-1120499500_i32), _22.fld0.2);
_22.fld0.1.0.1 = !_5;
_24.fld6.0 = _9.0;
_18.fld0 = _22.fld0;
Goto(bb11)
}
bb11 = {
_19.fld2 = _15.fld2.fld0;
_36.0 = _19.fld2.0 | _19.fld2.0;
_24.fld5.2 = !_22.fld0.1.0.1;
_6 = _14.fld2.2 as i8;
_29 = !_24.fld7;
_24.fld0 = _18.fld0;
_24.fld1.0.2 = !_26.fld4.0.2;
_24.fld1.2 = !_36.0;
_22.fld0 = _24.fld0;
_26.fld4 = _24.fld1;
_19.fld1.0 = !_26.fld1.0;
_15.fld2.fld1 = [_6,_24.fld1.0.0,_6,_26.fld4.0.0,_14.fld2.0,_26.fld4.0.0];
_31 = _9.0 as u64;
_26.fld0 = [_19.fld2.0,_36.0,_36.0];
_38 = _24.fld1.3;
_2 = !_24.fld0.1.0.1;
_22.fld1 = (_18.fld1.0,);
_22.fld1.0 = _12 as u32;
_24.fld0.1.0.1 = _19.fld1.2 & _18.fld0.0;
_14.fld2.2 = _24.fld1.0.2;
_26.fld4.3 = _24.fld1.3;
_32 = _15.fld0 << _3;
_20 = -_24.fld0.1.0.0;
_34 = _26.fld4.0.2 >= _14.fld2.2;
_26.fld4.4 = _29 / 169_u8;
match _24.fld6.0 {
0 => bb4,
1 => bb12,
340282366920938463463374607430647711956 => bb14,
_ => bb13
}
}
bb12 = {
(*RET) = _3;
_14 = Adt50 { fld0: _5,fld1: _16,fld2: _15.fld3 };
_19.fld2.0 = _7 as u128;
_22.fld0.1.0 = (_1, _5);
_19.fld1.2 = !_14.fld0;
_20 = 4_usize as f32;
_19.fld0 = _22.fld0.1;
_23 = (3299167386_u32,);
_14.fld2 = (_15.fld3.0, _13, _15.fld3.2);
RET = core::ptr::addr_of!(_24.fld6.1);
_19.fld3 = core::ptr::addr_of!(_22.fld0.2);
_19.fld2 = (_10,);
_22.fld0.1 = _19.fld0;
_24.fld7 = 18_u8 | 84_u8;
_26.fld4.0.1 = _14.fld2.1 + _15.fld3.1;
_24.fld5.0 = 2_usize / 2_usize;
_26.fld4.0 = (_15.fld3.0, _15.fld0, _14.fld2.2);
_18.fld1.0 = _23.0;
_18.fld0.1 = (_22.fld0.1.0,);
_24.fld1.0 = (_14.fld2.0, _14.fld2.1, _14.fld2.2);
_22.fld0.1.0.1 = _14.fld0;
RET = core::ptr::addr_of!(_3);
_24.fld4 = [_9.0,_9.0,_9.0,_9.0,_9.0];
Goto(bb9)
}
bb13 = {
Return()
}
bb14 = {
_35 = [_15.fld3.0,_14.fld2.0,_6,_15.fld3.0,_26.fld4.0.0,_24.fld1.0.0,_6];
_40 = _38;
_19.fld2 = _36;
RET = core::ptr::addr_of!((*RET));
_26.fld2 = !_7;
_43.4 = _19.fld1.2 as u8;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(9_usize, 34_usize, Move(_34), 5_usize, Move(_5), 32_usize, Move(_32), 36_usize, Move(_36)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(9_usize, 7_usize, Move(_7), 4_usize, Move(_4), 40_usize, Move(_40), 29_usize, Move(_29)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(9_usize, 31_usize, Move(_31), 3_usize, Move(_3), 46_usize, _46, 46_usize, _46), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: isize,mut _3: i32,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: (i32, i128),mut _8: i32,mut _9: i32,mut _10: bool,mut _11: isize) -> i128 {
mir! {
type RET = i128;
let _12: isize;
let _13: [i32; 5];
let _14: [i128; 2];
let _15: i64;
let _16: Adt62;
let _17: char;
let _18: Adt60;
let _19: *const i8;
let _20: f32;
let _21: isize;
let _22: (f32, bool);
let _23: (u32,);
let _24: Adt54;
let _25: f64;
let _26: ();
let _27: ();
{
_4 = '\u{12fb6}' as isize;
_12 = _3 as isize;
_7.1 = -(-15166291515827444046473467210098500376_i128);
RET = _7.1;
_7.1 = 3782877697806600554548119798145015077_i128 >> _8;
_11 = _1 << _12;
_6 = _11;
_11 = _12;
_7 = (_3, (-157572503844388485579418150656453279373_i128));
_16.fld2.0 = [2455223655_u32,561328008_u32,1930715189_u32,1626122318_u32,3031336391_u32];
_1 = _12 * _5;
_2 = _1;
_16.fld2.2 = 54_i8;
_16.fld1 = [_9,_3,_9,_3,_7.0];
_10 = !true;
_16.fld0 = core::ptr::addr_of!(_7.1);
match _8 {
227894416 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_18.fld1.0 = 1955115448_u32 | 2245490218_u32;
_16.fld0 = core::ptr::addr_of!(_7.1);
_17 = '\u{95072}';
_12 = 300853273701624585326108123473319599423_u128 as isize;
_5 = _2 ^ _11;
_16.fld1 = [_9,_9,_3,_3,_9];
RET = _7.1;
_18.fld1.0 = 151_u8 as u32;
_13 = _16.fld1;
_16.fld0 = core::ptr::addr_of!(_7.1);
_18.fld0.2 = !_7.1;
match _7.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
227894416 => bb10,
_ => bb9
}
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_12 = _5 << _2;
_11 = _2;
_8 = _16.fld2.2 as i32;
_16.fld4 = (-6430685821628968083_i64) as i16;
_4 = _18.fld0.2 as isize;
_8 = -_7.0;
_15 = _17 as i64;
_15 = (-7427992736049098188_i64);
_18.fld0.0 = !_10;
_18.fld1.0 = 1760264140_u32;
_7.1 = !_18.fld0.2;
_18.fld0.1.0.1 = _18.fld0.0 ^ _18.fld0.0;
_5 = !_2;
_16.fld3 = core::ptr::addr_of!(_18.fld0.1.0.1);
_24.fld3.fld1 = [132963540244223833057140862191718767370_u128,159409514496111939792202750505757821728_u128,42163075625714295469618266146261882845_u128,26901732042866062176836088991564294889_u128,30447166516416986522246956092402219115_u128,34010611496540616979487713911875727131_u128,115589527394529377020040841550581732347_u128];
_24.fld3.fld2.2 = 14599_u16 as i64;
match _3 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
227894416 => bb17,
_ => bb16
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
RET = _7.1 - _7.1;
_24.fld1 = [5375288527743714377366509159453005652_u128,296226249651272666533490216532226106129_u128,94188739742344581064370585987159891742_u128];
_8 = _9;
_16.fld2.0 = [_18.fld1.0,_18.fld1.0,_18.fld1.0,_18.fld1.0,_18.fld1.0];
_16.fld2.1 = _16.fld2.2;
_21 = _7.1 as isize;
_10 = !_18.fld0.0;
_22.0 = _16.fld2.2 as f32;
_16.fld3 = core::ptr::addr_of!(_10);
_18.fld0.1.0.1 = _18.fld0.0;
_9 = _3 * _3;
_24.fld4.fld1 = [4_u8,177_u8,85_u8,176_u8,225_u8,211_u8];
_21 = _18.fld0.2 as isize;
_14 = [_18.fld0.2,_7.1];
Goto(bb18)
}
bb18 = {
Call(_26 = dump_var(10_usize, 12_usize, Move(_12), 3_usize, Move(_3), 2_usize, Move(_2), 17_usize, Move(_17)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_26 = dump_var(10_usize, 7_usize, Move(_7), 10_usize, Move(_10), 11_usize, Move(_11), 13_usize, Move(_13)), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: (i32, i128),mut _6: i32,mut _7: i128,mut _8: (i32, i128),mut _9: bool,mut _10: isize,mut _11: isize) -> Adt50 {
mir! {
type RET = Adt50;
let _12: (u128,);
let _13: Adt50;
let _14: i32;
let _15: char;
let _16: Adt66;
let _17: [u128; 3];
let _18: Adt54;
let _19: u16;
let _20: f64;
let _21: Adt62;
let _22: (bool, ((f32, bool),), i128);
let _23: u128;
let _24: Adt51;
let _25: char;
let _26: Adt64;
let _27: Adt52;
let _28: (i8, u16, i64);
let _29: i16;
let _30: f64;
let _31: f64;
let _32: (*const i128, u16, *const usize);
let _33: Adt65;
let _34: f32;
let _35: ();
let _36: ();
{
_5.1 = 60912681247704267056364836130858915947_u128 as i128;
RET.fld2 = ((-33_i8), 38661_u16, (-5353879108781557092_i64));
RET.fld0 = _9 < _9;
RET.fld0 = !_9;
RET.fld2.0 = 116_i8;
_5.1 = 0_usize as i128;
RET.fld2.0 = _8.1 as i8;
RET.fld0 = _9;
RET.fld2 = (86_i8, 17622_u16, 7820266997720890401_i64);
_10 = !_1;
_5 = _8;
_11 = 7_usize as isize;
_13.fld2 = ((-54_i8), 6261_u16, 2511602898659482242_i64);
RET.fld2 = _13.fld2;
_13.fld1 = [323780646599070835770539546077803276641_u128,272905917627531341319796519197740127269_u128,185759508824832438430896060225322485673_u128,257598456493270041592766012259757740486_u128,309129019273217845742273131617358203099_u128,279196331487865441177198705710628497228_u128,190491593724233728145949547141902414166_u128];
RET.fld1 = _13.fld1;
_14 = -_6;
_7 = -_5.1;
_6 = -_14;
_8.1 = -_7;
Goto(bb1)
}
bb1 = {
_15 = '\u{e889d}';
_16.fld3.fld0.fld5.1 = _13.fld2.0 as f64;
_16.fld2 = [94_u8,198_u8,62_u8,181_u8,190_u8,194_u8];
_16.fld0 = [2730440835_u32,1153510566_u32,4232503664_u32,2120573286_u32,2640454450_u32,4059092119_u32,1922081896_u32];
_16.fld3.fld0.fld6.1 = _7 & _7;
_16.fld3.fld0.fld1.0.1 = _16.fld3.fld0.fld5.1 as u16;
_16.fld3.fld0.fld6.0 = -_5.0;
_18.fld6 = [_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0];
RET = Adt50 { fld0: _9,fld1: _13.fld1,fld2: _13.fld2 };
_19 = _16.fld3.fld0.fld1.0.1 << _8.1;
_17 = [228096582468541105281398868776989788705_u128,153971741465484104931505539926827030004_u128,229882089187317460803023304250873487273_u128];
match _4 {
0 => bb2,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_18.fld6 = [_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0];
_18.fld3.fld2.1 = _16.fld3.fld0.fld1.0.1;
_16.fld3.fld0.fld5.0 = _16.fld3.fld0.fld5.1 as usize;
RET.fld2 = (_13.fld2.0, _13.fld2.1, _13.fld2.2);
_16.fld3.fld0.fld0.2 = _10 as i128;
_16.fld3.fld0.fld5.0 = 1_usize & 1_usize;
_16.fld1 = _15;
_16.fld2 = [251_u8,102_u8,23_u8,200_u8,214_u8,4_u8];
_18.fld5 = !3390192036_u32;
_16.fld3.fld0.fld1.0 = (_13.fld2.0, _13.fld2.1, _13.fld2.2);
_8 = (_16.fld3.fld0.fld6.0, _16.fld3.fld0.fld6.1);
_16.fld3.fld0.fld0.1.0.1 = _9;
_16.fld3.fld0.fld1.4 = _3 as u8;
RET.fld2.0 = _16.fld3.fld0.fld1.4 as i8;
_11 = _13.fld2.2 as isize;
RET.fld0 = _9;
RET.fld2.0 = -_13.fld2.0;
_21.fld3 = core::ptr::addr_of!(_16.fld3.fld0.fld5.2);
_16.fld3.fld0.fld1.4 = !83_u8;
_18.fld2 = _2;
Call(_19 = fn12(_13.fld2.0, _10), bb5, UnwindUnreachable())
}
bb5 = {
_22.0 = !_9;
_16.fld3.fld0.fld0.0 = _9;
_22.1.0.1 = _16.fld3.fld0.fld0.1.0.1;
_22.1.0.1 = !_16.fld3.fld0.fld0.0;
_17 = [244581177438633225530369325542550425334_u128,131259170772079160991653519168932584960_u128,311026546793208855120049820004236904886_u128];
RET.fld2.1 = _18.fld3.fld2.1;
_18.fld3.fld0 = _6 == _5.0;
_5.0 = _14 | _16.fld3.fld0.fld6.0;
_21.fld2.2 = -_13.fld2.0;
_13.fld2.1 = _19;
_21.fld3 = core::ptr::addr_of!(_24.fld1.2);
_16.fld3.fld0.fld5.0 = 1_usize;
_24.fld1.2 = _9 == _18.fld3.fld0;
_16.fld3.fld0.fld1.2 = !310734483115092642231657002581712488183_u128;
_16.fld3.fld0.fld1.4 = 42_u8 % 121_u8;
_5.0 = _8.0;
_18.fld2 = _16.fld3.fld0.fld5.0 as isize;
Call(_16.fld3.fld0.fld1.1 = core::intrinsics::transmute(_2), bb6, UnwindUnreachable())
}
bb6 = {
_2 = _1 << _19;
_16.fld3.fld0.fld2 = _16.fld0;
_24.fld3 = core::ptr::addr_of!(_8.1);
_18.fld4.fld3 = [_18.fld5,_18.fld5,_18.fld5,_18.fld5,_18.fld5];
_16.fld3.fld0.fld0.1.0.0 = _16.fld3.fld0.fld1.1 as f32;
_24.fld0.0 = (_16.fld3.fld0.fld0.1.0.0, _24.fld1.2);
_16.fld3.fld0.fld4 = [_16.fld3.fld0.fld6.0,_8.0,_14,_14,_6];
_26.fld0.fld0.1 = (_24.fld0.0,);
match _16.fld3.fld0.fld1.0.1 {
0 => bb4,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
6261 => bb10,
_ => bb9
}
}
bb7 = {
_22.0 = !_9;
_16.fld3.fld0.fld0.0 = _9;
_22.1.0.1 = _16.fld3.fld0.fld0.1.0.1;
_22.1.0.1 = !_16.fld3.fld0.fld0.0;
_17 = [244581177438633225530369325542550425334_u128,131259170772079160991653519168932584960_u128,311026546793208855120049820004236904886_u128];
RET.fld2.1 = _18.fld3.fld2.1;
_18.fld3.fld0 = _6 == _5.0;
_5.0 = _14 | _16.fld3.fld0.fld6.0;
_21.fld2.2 = -_13.fld2.0;
_13.fld2.1 = _19;
_21.fld3 = core::ptr::addr_of!(_24.fld1.2);
_16.fld3.fld0.fld5.0 = 1_usize;
_24.fld1.2 = _9 == _18.fld3.fld0;
_16.fld3.fld0.fld1.2 = !310734483115092642231657002581712488183_u128;
_16.fld3.fld0.fld1.4 = 42_u8 % 121_u8;
_5.0 = _8.0;
_18.fld2 = _16.fld3.fld0.fld5.0 as isize;
Call(_16.fld3.fld0.fld1.1 = core::intrinsics::transmute(_2), bb6, UnwindUnreachable())
}
bb8 = {
_15 = '\u{e889d}';
_16.fld3.fld0.fld5.1 = _13.fld2.0 as f64;
_16.fld2 = [94_u8,198_u8,62_u8,181_u8,190_u8,194_u8];
_16.fld0 = [2730440835_u32,1153510566_u32,4232503664_u32,2120573286_u32,2640454450_u32,4059092119_u32,1922081896_u32];
_16.fld3.fld0.fld6.1 = _7 & _7;
_16.fld3.fld0.fld1.0.1 = _16.fld3.fld0.fld5.1 as u16;
_16.fld3.fld0.fld6.0 = -_5.0;
_18.fld6 = [_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0,_13.fld2.0];
RET = Adt50 { fld0: _9,fld1: _13.fld1,fld2: _13.fld2 };
_19 = _16.fld3.fld0.fld1.0.1 << _8.1;
_17 = [228096582468541105281398868776989788705_u128,153971741465484104931505539926827030004_u128,229882089187317460803023304250873487273_u128];
match _4 {
0 => bb2,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb9 = {
Return()
}
bb10 = {
_18.fld3.fld2.0 = _13.fld2.0 >> _7;
Goto(bb11)
}
bb11 = {
_24.fld1 = (_16.fld3.fld0.fld5.0, _16.fld3.fld0.fld5.1, _26.fld0.fld0.1.0.1);
_26.fld0.fld4 = [_16.fld3.fld0.fld6.0,_16.fld3.fld0.fld6.0,_6,_6,_16.fld3.fld0.fld6.0];
_18.fld4.fld0 = _18.fld3.fld0;
_7 = _16.fld3.fld0.fld6.1;
_27.fld1.0 = !_16.fld3.fld0.fld5.0;
_27.fld4.0.0 = _24.fld1.0 as i8;
_18.fld3.fld0 = _18.fld4.fld0 ^ _24.fld1.2;
_26.fld0.fld5.1 = -_16.fld3.fld0.fld5.1;
_12.0 = _26.fld0.fld5.1 as u128;
_26.fld0.fld1.0.0 = _13.fld2.0;
_25 = _16.fld1;
_5 = (_8.0, _16.fld3.fld0.fld6.1);
_16.fld3.fld1 = [_18.fld3.fld0,_26.fld0.fld0.1.0.1,_9];
_18.fld3.fld2 = (_13.fld2.0, _13.fld2.1, _13.fld2.2);
_8.1 = _5.1 << _8.0;
_21.fld4 = !(-15024_i16);
_26.fld0.fld7 = _26.fld0.fld5.1 as u8;
_16.fld3.fld1 = [_18.fld4.fld0,_24.fld0.0.1,_18.fld3.fld0];
_22.1 = _26.fld0.fld0.1;
_21.fld2.0 = [_18.fld5,_18.fld5,_18.fld5,_18.fld5,_18.fld5];
_27.fld2 = _11;
_5 = (_16.fld3.fld0.fld6.0, _8.1);
_16.fld3.fld0.fld3 = !_16.fld3.fld0.fld1.0.0;
_26.fld0.fld0.2 = _22.1.0.0 as i128;
_13.fld0 = !_24.fld0.0.1;
_26.fld0.fld1.0.1 = _13.fld2.1;
_9 = !_22.1.0.1;
_16.fld3.fld0.fld1.0.2 = -_13.fld2.2;
_27.fld5 = (_18.fld5,);
Goto(bb12)
}
bb12 = {
_27.fld4.0.1 = _16.fld3.fld0.fld1.1 as u16;
_21.fld2.1 = !_21.fld2.2;
_18.fld6 = [_21.fld2.1,_21.fld2.2,_13.fld2.0,_26.fld0.fld1.0.0,_16.fld3.fld0.fld1.0.0,_16.fld3.fld0.fld3];
_27.fld1 = (_16.fld3.fld0.fld5.0, _24.fld1.1, _24.fld0.0.1);
Call(_26.fld0.fld1.1 = fn14(_27.fld5, _11, _16.fld3.fld0.fld2, _16.fld3.fld0.fld1.2, _26.fld0.fld0.2, _18.fld3.fld2.0, _4, _26.fld0.fld4, _26.fld0.fld7, _3, _7, _16.fld3.fld0.fld5.0, _11, _26.fld0.fld7, _26.fld0.fld1.0.0), bb13, UnwindUnreachable())
}
bb13 = {
_18.fld4.fld0 = _26.fld0.fld0.1.0.1;
_33.fld5 = Adt55 { fld0: _16.fld3.fld0.fld1.0.1 };
_16.fld3.fld0.fld1.0.2 = _13.fld2.2;
_26.fld0.fld2 = [_18.fld5,_27.fld5.0,_18.fld5,_18.fld5,_27.fld5.0,_18.fld5,_18.fld5];
_26.fld0.fld1.3 = _25;
RET.fld0 = _9;
_27.fld4.1 = _26.fld0.fld1.0.1 as u64;
_28.0 = !_27.fld4.0.0;
_21.fld4 = 31175_i16 | 6917_i16;
_16.fld3.fld0.fld5.1 = _24.fld1.1;
_34 = _16.fld3.fld0.fld1.2 as f32;
_16.fld0 = _16.fld3.fld0.fld2;
_16.fld3.fld0.fld0.2 = _5.1 & _5.1;
_24.fld2 = (_12.0,);
RET.fld2.0 = -_13.fld2.0;
_27.fld6 = _16.fld3.fld0.fld5.0 + _16.fld3.fld0.fld5.0;
_28 = _18.fld3.fld2;
_22.2 = !_7;
_16.fld3.fld0.fld0.2 = !_7;
_16.fld2 = [_26.fld0.fld7,_26.fld0.fld7,_16.fld3.fld0.fld1.4,_16.fld3.fld0.fld1.4,_16.fld3.fld0.fld1.4,_16.fld3.fld0.fld1.4];
_16.fld3.fld0.fld6.1 = _7;
_18.fld3 = Adt50 { fld0: _22.1.0.1,fld1: _13.fld1,fld2: _13.fld2 };
_16.fld3.fld0.fld0 = _22;
_32.1 = _19 - _28.1;
_13.fld0 = !_18.fld3.fld0;
Goto(bb14)
}
bb14 = {
Call(_35 = dump_var(11_usize, 3_usize, Move(_3), 15_usize, Move(_15), 25_usize, Move(_25), 28_usize, Move(_28)), bb15, UnwindUnreachable())
}
bb15 = {
Call(_35 = dump_var(11_usize, 14_usize, Move(_14), 1_usize, Move(_1), 12_usize, Move(_12), 17_usize, Move(_17)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(11_usize, 10_usize, Move(_10), 36_usize, _36, 36_usize, _36, 36_usize, _36), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: i8,mut _2: isize) -> u16 {
mir! {
type RET = u16;
let _3: ((i8, u16, i64), u64, u128, char, u8);
let _4: *const i8;
let _5: Adt59;
let _6: Adt55;
let _7: (u128,);
let _8: u16;
let _9: *const usize;
let _10: *mut u8;
let _11: (char,);
let _12: u128;
let _13: [i8; 6];
let _14: bool;
let _15: Adt65;
let _16: [i32; 5];
let _17: *const f32;
let _18: u64;
let _19: Adt66;
let _20: [u32; 5];
let _21: char;
let _22: f64;
let _23: *const bool;
let _24: isize;
let _25: isize;
let _26: i8;
let _27: ();
let _28: ();
{
RET = 221772119358764682118442301755447742034_u128 as u16;
_1 = true as i8;
_2 = !(-9223372036854775808_isize);
RET = 16947_u16 / 29750_u16;
_1 = 111_i8;
_1 = -(-44_i8);
RET = !11655_u16;
_1 = !(-92_i8);
_2 = !9223372036854775807_isize;
_1 = -43_i8;
_3.0.0 = _1 ^ _1;
Goto(bb1)
}
bb1 = {
_5.fld2.fld0.0 = 239936477720386331076009598084747584886_u128;
_3.3 = '\u{5e970}';
_5.fld3.1 = 40224_u16;
_4 = core::ptr::addr_of!(_1);
Call(_3 = fn13(_5.fld3.1, _2, (*_4), _4, _5.fld2.fld0, _4, _4, _5.fld3.1, _5.fld2.fld0), bb2, UnwindUnreachable())
}
bb2 = {
(*_4) = 3625227390_u32 as i8;
_5.fld3.2 = _3.0.2;
_3.4 = _3.0.2 as u8;
_6 = Adt55 { fld0: _3.0.1 };
_2 = 9223372036854775807_isize;
match _5.fld3.1 {
0 => bb1,
1 => bb3,
2 => bb4,
40224 => bb6,
_ => bb5
}
}
bb3 = {
_5.fld2.fld0.0 = 239936477720386331076009598084747584886_u128;
_3.3 = '\u{5e970}';
_5.fld3.1 = 40224_u16;
_4 = core::ptr::addr_of!(_1);
Call(_3 = fn13(_5.fld3.1, _2, (*_4), _4, _5.fld2.fld0, _4, _4, _5.fld3.1, _5.fld2.fld0), bb2, UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
(*_4) = _3.0.0 ^ _3.0.0;
_3.0.1 = _1 as u16;
_3.4 = 1632986395_i32 as u8;
_5.fld3.2 = _3.4 as i64;
_2 = !(-9223372036854775808_isize);
_5.fld3 = _3.0;
_5.fld0 = _3.0.1 ^ _5.fld3.1;
_6 = Adt55 { fld0: _5.fld0 };
_5.fld1 = 15936_i16 as f64;
_3.0.2 = _5.fld3.2 >> _5.fld0;
(*_4) = (-1411476264_i32) as i8;
_5.fld1 = _2 as f64;
RET = !_6.fld0;
_3.0.2 = _3.1 as i64;
_5.fld2.fld0 = (_3.2,);
_5.fld1 = _3.0.0 as f64;
match _5.fld3.2 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
6280297562689982007 => bb8,
_ => bb7
}
}
bb7 = {
_5.fld2.fld0.0 = 239936477720386331076009598084747584886_u128;
_3.3 = '\u{5e970}';
_5.fld3.1 = 40224_u16;
_4 = core::ptr::addr_of!(_1);
Call(_3 = fn13(_5.fld3.1, _2, (*_4), _4, _5.fld2.fld0, _4, _4, _5.fld3.1, _5.fld2.fld0), bb2, UnwindUnreachable())
}
bb8 = {
_5.fld3.1 = !_3.0.1;
_7.0 = _5.fld2.fld0.0;
_3 = (_5.fld3, 5679270880314105095_u64, _7.0, '\u{39665}', 218_u8);
RET = !_5.fld0;
_3.0.2 = 1810755921_i32 as i64;
RET = _6.fld0 % 48448_u16;
_10 = core::ptr::addr_of_mut!(_3.4);
_3.4 = _6.fld0 as u8;
_5.fld3.1 = _5.fld0;
_3.1 = 11380602630497728655_u64;
_3.0.2 = _5.fld3.2 - _5.fld3.2;
_3.4 = 85_u8;
_3.4 = 6_u8 | 153_u8;
_3.0.2 = (-1837958062_i32) as i64;
_3.0 = ((*_4), _5.fld0, _5.fld3.2);
(*_10) = 181_u8;
_5.fld2.fld0 = (_7.0,);
RET = _5.fld3.1;
_1 = -_5.fld3.0;
_2 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_11.0 = _3.3;
_5.fld0 = _3.0.2 as u16;
Goto(bb9)
}
bb9 = {
_8 = !_5.fld0;
_7 = _5.fld2.fld0;
_5.fld2.fld1 = [_3.0.0,_3.0.0,_1,_5.fld3.0,_5.fld3.0,_1];
_5.fld3.0 = (*_4);
_5.fld2.fld0.0 = 2914783893_u32 as u128;
_4 = core::ptr::addr_of!(_3.0.0);
_2 = (-105_isize) * 15_isize;
_5.fld3.0 = false as i8;
(*_4) = _5.fld3.0;
_15.fld0 = [(*_4),_5.fld3.0,_5.fld3.0,_3.0.0,_5.fld3.0,_1,_1];
_5.fld3 = _3.0;
_15.fld2 = [_7.0,_3.2,_7.0,_7.0,_7.0,_7.0,_7.0];
_15.fld1 = (*_10);
_5.fld0 = _5.fld3.1 - _3.0.1;
_15.fld2 = [_3.2,_5.fld2.fld0.0,_7.0,_3.2,_3.2,_7.0,_3.2];
_19.fld3.fld0.fld3 = 168347459659796644900165762837917514862_i128 as i8;
_3.0.2 = _5.fld3.2 ^ _5.fld3.2;
_19.fld3.fld0.fld5.2 = !true;
_19.fld0 = [3073395838_u32,262899082_u32,2457076019_u32,1928357640_u32,146648348_u32,2039896356_u32,629057374_u32];
_19.fld3.fld0.fld1.2 = _19.fld3.fld0.fld3 as u128;
_21 = _3.3;
_4 = core::ptr::addr_of!((*_4));
_19.fld3.fld0.fld1.0.2 = _6.fld0 as i64;
match _3.1 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
11380602630497728655 => bb18,
_ => bb17
}
}
bb10 = {
_5.fld3.1 = !_3.0.1;
_7.0 = _5.fld2.fld0.0;
_3 = (_5.fld3, 5679270880314105095_u64, _7.0, '\u{39665}', 218_u8);
RET = !_5.fld0;
_3.0.2 = 1810755921_i32 as i64;
RET = _6.fld0 % 48448_u16;
_10 = core::ptr::addr_of_mut!(_3.4);
_3.4 = _6.fld0 as u8;
_5.fld3.1 = _5.fld0;
_3.1 = 11380602630497728655_u64;
_3.0.2 = _5.fld3.2 - _5.fld3.2;
_3.4 = 85_u8;
_3.4 = 6_u8 | 153_u8;
_3.0.2 = (-1837958062_i32) as i64;
_3.0 = ((*_4), _5.fld0, _5.fld3.2);
(*_10) = 181_u8;
_5.fld2.fld0 = (_7.0,);
RET = _5.fld3.1;
_1 = -_5.fld3.0;
_2 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_11.0 = _3.3;
_5.fld0 = _3.0.2 as u16;
Goto(bb9)
}
bb11 = {
_5.fld2.fld0.0 = 239936477720386331076009598084747584886_u128;
_3.3 = '\u{5e970}';
_5.fld3.1 = 40224_u16;
_4 = core::ptr::addr_of!(_1);
Call(_3 = fn13(_5.fld3.1, _2, (*_4), _4, _5.fld2.fld0, _4, _4, _5.fld3.1, _5.fld2.fld0), bb2, UnwindUnreachable())
}
bb12 = {
(*_4) = _3.0.0 ^ _3.0.0;
_3.0.1 = _1 as u16;
_3.4 = 1632986395_i32 as u8;
_5.fld3.2 = _3.4 as i64;
_2 = !(-9223372036854775808_isize);
_5.fld3 = _3.0;
_5.fld0 = _3.0.1 ^ _5.fld3.1;
_6 = Adt55 { fld0: _5.fld0 };
_5.fld1 = 15936_i16 as f64;
_3.0.2 = _5.fld3.2 >> _5.fld0;
(*_4) = (-1411476264_i32) as i8;
_5.fld1 = _2 as f64;
RET = !_6.fld0;
_3.0.2 = _3.1 as i64;
_5.fld2.fld0 = (_3.2,);
_5.fld1 = _3.0.0 as f64;
match _5.fld3.2 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
6280297562689982007 => bb8,
_ => bb7
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_5.fld2.fld0.0 = 239936477720386331076009598084747584886_u128;
_3.3 = '\u{5e970}';
_5.fld3.1 = 40224_u16;
_4 = core::ptr::addr_of!(_1);
Call(_3 = fn13(_5.fld3.1, _2, (*_4), _4, _5.fld2.fld0, _4, _4, _5.fld3.1, _5.fld2.fld0), bb2, UnwindUnreachable())
}
bb16 = {
(*_4) = 3625227390_u32 as i8;
_5.fld3.2 = _3.0.2;
_3.4 = _3.0.2 as u8;
_6 = Adt55 { fld0: _3.0.1 };
_2 = 9223372036854775807_isize;
match _5.fld3.1 {
0 => bb1,
1 => bb3,
2 => bb4,
40224 => bb6,
_ => bb5
}
}
bb17 = {
_5.fld2.fld0.0 = 239936477720386331076009598084747584886_u128;
_3.3 = '\u{5e970}';
_5.fld3.1 = 40224_u16;
_4 = core::ptr::addr_of!(_1);
Call(_3 = fn13(_5.fld3.1, _2, (*_4), _4, _5.fld2.fld0, _4, _4, _5.fld3.1, _5.fld2.fld0), bb2, UnwindUnreachable())
}
bb18 = {
_19.fld3.fld0.fld1.4 = (*_10);
_20 = [972767400_u32,1217620339_u32,2080224304_u32,2632715598_u32,1589798512_u32];
_19.fld3.fld0.fld2 = [3685579408_u32,4095610079_u32,399278279_u32,4021772891_u32,2747012209_u32,4132006472_u32,3241782315_u32];
_16 = [1526675976_i32,(-1012086176_i32),(-1759202394_i32),68550849_i32,1733241360_i32];
_19.fld3.fld0.fld3 = !(*_4);
_19.fld3.fld1 = [_19.fld3.fld0.fld5.2,_19.fld3.fld0.fld5.2,_19.fld3.fld0.fld5.2];
Goto(bb19)
}
bb19 = {
Call(_27 = dump_var(12_usize, 21_usize, Move(_21), 3_usize, Move(_3), 8_usize, Move(_8), 16_usize, Move(_16)), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: u16,mut _2: isize,mut _3: i8,mut _4: *const i8,mut _5: (u128,),mut _6: *const i8,mut _7: *const i8,mut _8: u16,mut _9: (u128,)) -> ((i8, u16, i64), u64, u128, char, u8) {
mir! {
type RET = ((i8, u16, i64), u64, u128, char, u8);
let _10: *const [bool; 3];
let _11: Adt62;
let _12: u64;
let _13: Adt64;
let _14: f64;
let _15: bool;
let _16: i16;
let _17: i32;
let _18: f32;
let _19: isize;
let _20: Adt57;
let _21: u128;
let _22: char;
let _23: Adt57;
let _24: *const i8;
let _25: f32;
let _26: ();
let _27: ();
{
RET.1 = 13079987811800129908_u64 & 18381616965113230949_u64;
_6 = core::ptr::addr_of!((*_6));
_4 = core::ptr::addr_of!((*_6));
RET.3 = '\u{59694}';
RET.0 = ((*_6), _8, (-1475153443544759268_i64));
RET.0.0 = (*_6);
RET.0 = ((*_6), _8, 467983598552042481_i64);
_7 = core::ptr::addr_of!((*_7));
(*_7) = _3;
(*_4) = _3 >> _3;
RET.0.0 = -(*_7);
(*_6) = true as i8;
_11.fld2.2 = (*_4);
RET.4 = !86_u8;
_11.fld4 = 23231_i16;
(*_7) = -_3;
_11.fld3 = core::ptr::addr_of!(_13.fld0.fld0.0);
_13.fld0.fld5.0 = !5_usize;
_5 = _9;
_13.fld0.fld1.4 = !185_u8;
Call((*_7) = core::intrinsics::bswap(_3), bb1, UnwindUnreachable())
}
bb1 = {
(*_6) = _13.fld0.fld1.4 as i8;
_13.fld0.fld5.2 = _2 < _2;
_11.fld2.2 = (*_6);
_10 = core::ptr::addr_of!(_13.fld1);
_9 = (_5.0,);
RET.0.2 = (-6932879695765008901_i64);
match _11.fld4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
23231 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11.fld1 = [(-570336441_i32),352570333_i32,(-1275147511_i32),1936440232_i32,405692197_i32];
_11.fld2.1 = !(*_4);
_13.fld0.fld1.1 = 1316840875180444949_u64 + 673057079247369933_u64;
Goto(bb11)
}
bb11 = {
_13.fld0.fld1.0 = ((*_7), _1, 6280297562689982007_i64);
(*_7) = _9.0 as i8;
_8 = _1 ^ _1;
_13.fld0.fld1.4 = 214_u8;
_13.fld0.fld1.2 = _9.0;
_9.0 = _5.0 - _5.0;
_13.fld0.fld6.0 = (-652787625_i32) << _13.fld0.fld1.2;
_11.fld0 = core::ptr::addr_of!(_13.fld0.fld6.1);
RET.0.1 = _8 % 43977_u16;
(*_10) = [_13.fld0.fld5.2,_13.fld0.fld5.2,_13.fld0.fld5.2];
_17 = _13.fld0.fld6.0;
_6 = core::ptr::addr_of!((*_7));
RET.0.2 = _13.fld0.fld1.0.2 * _13.fld0.fld1.0.2;
_16 = _13.fld0.fld1.4 as i16;
_20.fld1.0.1 = _1 << _8;
_13.fld0.fld1.0.1 = _1;
_20.fld0.0 = !_13.fld0.fld5.2;
_3 = !_11.fld2.2;
_13.fld0.fld1.0.0 = _13.fld0.fld1.1 as i8;
match _13.fld0.fld1.0.2 {
0 => bb12,
1 => bb13,
2 => bb14,
6280297562689982007 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET.3 = '\u{ba74c}';
_21 = _13.fld0.fld1.0.0 as u128;
_20.fld1.0.0 = (*_6);
_17 = _13.fld0.fld6.0;
match _5.0 {
0 => bb17,
1 => bb18,
2 => bb19,
3 => bb20,
4 => bb21,
239936477720386331076009598084747584886 => bb23,
_ => bb22
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
(*_6) = _13.fld0.fld1.4 as i8;
_13.fld0.fld5.2 = _2 < _2;
_11.fld2.2 = (*_6);
_10 = core::ptr::addr_of!(_13.fld1);
_9 = (_5.0,);
RET.0.2 = (-6932879695765008901_i64);
match _11.fld4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
23231 => bb10,
_ => bb9
}
}
bb22 = {
Return()
}
bb23 = {
(*_6) = _13.fld0.fld1.0.0 & _20.fld1.0.0;
_20.fld2 = [3915880634_u32,3172603486_u32,2771460662_u32,48786197_u32,2188710891_u32,4135039718_u32,888043240_u32];
RET.0.1 = _20.fld1.0.1;
_13.fld0.fld7 = !_13.fld0.fld1.4;
_20.fld1 = (_13.fld0.fld1.0, _13.fld0.fld1.1, _21, '\u{71f7d}', _13.fld0.fld1.4);
_14 = _13.fld0.fld7 as f64;
_13.fld0.fld5.1 = _8 as f64;
RET.3 = _20.fld1.3;
_13.fld0.fld1.2 = _21 % 243531732313925419950596026660044806277_u128;
RET.2 = _21 & _20.fld1.2;
_10 = core::ptr::addr_of!((*_10));
_10 = core::ptr::addr_of!((*_10));
_20.fld5 = (_13.fld0.fld5.0, _13.fld0.fld5.1, _20.fld0.0);
_13.fld0.fld2 = [2839884451_u32,462636503_u32,4267610483_u32,1746722313_u32,1500891848_u32,3885474303_u32,237547338_u32];
_20.fld1.0.2 = _16 as i64;
_13.fld0.fld1.3 = _20.fld1.3;
RET.3 = _20.fld1.3;
_19 = _2;
RET = _13.fld0.fld1;
RET.0.1 = _13.fld0.fld5.0 as u16;
_5 = (_20.fld1.2,);
_12 = _20.fld1.3 as u64;
_20.fld5 = (_13.fld0.fld5.0, _13.fld0.fld5.1, _20.fld0.0);
(*_10) = [_20.fld5.2,_13.fld0.fld5.2,_20.fld0.0];
_23.fld5.0 = !_13.fld0.fld5.0;
_18 = (-144377594287219888395861032298995128270_i128) as f32;
Goto(bb24)
}
bb24 = {
Call(_26 = dump_var(13_usize, 12_usize, Move(_12), 9_usize, Move(_9), 3_usize, Move(_3), 19_usize, Move(_19)), bb25, UnwindUnreachable())
}
bb25 = {
Call(_26 = dump_var(13_usize, 16_usize, Move(_16), 27_usize, _27, 27_usize, _27, 27_usize, _27), bb26, UnwindUnreachable())
}
bb26 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: (u32,),mut _2: isize,mut _3: [u32; 7],mut _4: u128,mut _5: i128,mut _6: i8,mut _7: isize,mut _8: [i32; 5],mut _9: u8,mut _10: isize,mut _11: i128,mut _12: usize,mut _13: isize,mut _14: u8,mut _15: i8) -> u64 {
mir! {
type RET = u64;
let _16: isize;
let _17: isize;
let _18: f64;
let _19: [u128; 7];
let _20: isize;
let _21: f32;
let _22: *const f32;
let _23: Adt55;
let _24: (i16, (*const i128, u16, *const usize), i8);
let _25: isize;
let _26: (i16, (*const i128, u16, *const usize), i8);
let _27: ([i32; 2], *const i8, u8, (*const i128, u16, *const usize), (*const i128, u16, *const usize));
let _28: isize;
let _29: (u32,);
let _30: bool;
let _31: *const i8;
let _32: *mut u8;
let _33: f32;
let _34: ();
let _35: ();
{
RET = !7632194788325173951_u64;
Goto(bb1)
}
bb1 = {
_2 = _8[_12] as isize;
_5 = _11;
_12 = 2_usize - 4503140617031543218_usize;
_9 = !_14;
_9 = _14;
_4 = !146681057755508362831544821571501268469_u128;
_8 = [(-1390732147_i32),404757483_i32,(-658125717_i32),(-1878931289_i32),(-408437530_i32)];
_2 = 356175638720155470_u64 as isize;
_15 = _6 & _6;
_2 = true as isize;
_6 = -_15;
_6 = 20931_i16 as i8;
RET = 16551398257586844956_u64;
_17 = -_7;
_14 = _9;
_9 = _14 + _14;
_9 = !_14;
_8 = [(-970722954_i32),(-280691058_i32),(-637618084_i32),1904682387_i32,(-727964801_i32)];
_5 = !_11;
_4 = 60582185353047704539948352177314654096_u128 - 9005776274913932288559546740050804777_u128;
_10 = _13 + _13;
_8 = [131078904_i32,(-1161524203_i32),360144051_i32,(-656411218_i32),1989796512_i32];
_19 = [_4,_4,_4,_4,_4,_4,_4];
_13 = false as isize;
_11 = !_5;
_18 = _5 as f64;
match _7 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = !7584283230094229558_u64;
Goto(bb11)
}
bb11 = {
_8 = [(-1310332661_i32),(-892229096_i32),2072108739_i32,(-1199543322_i32),1372067662_i32];
_6 = true as i8;
_6 = -_15;
_17 = _13;
RET = !3013257885433803163_u64;
_11 = 18637_u16 as i128;
_10 = _7;
_12 = 7063383991606896629_usize;
_4 = !258172225411092943044031438455524553175_u128;
_24.1.0 = core::ptr::addr_of!(_11);
_15 = _12 as i8;
_1.0 = 2017473197_u32;
_6 = _15 - _15;
_18 = _5 as f64;
_10 = _7 ^ _17;
_27.3.2 = core::ptr::addr_of!(_12);
_22 = core::ptr::addr_of!(_21);
_24.2 = _15 | _6;
_26.1.1 = 40092_u16 + 43269_u16;
_21 = _12 as f32;
_24.0 = (-21421_i16);
match _12 {
0 => bb6,
1 => bb10,
7063383991606896629 => bb12,
_ => bb8
}
}
bb12 = {
_28 = (-1342985255_i32) as isize;
_25 = _7;
_1.0 = _4 as u32;
_26.2 = _1.0 as i8;
_4 = 182340925954878442332414282198962955388_u128;
_1.0 = 2313468759_u32;
_27.0 = [879459713_i32,776116265_i32];
_18 = _5 as f64;
_26.1.1 = 39983_u16;
_24.1.1 = _26.1.1 % 18852_u16;
_7 = _25 * _25;
_27.3.2 = core::ptr::addr_of!(_12);
_24.0 = 23929_i16 << _9;
_10 = _13 << _9;
_27.1 = core::ptr::addr_of!(_26.2);
_29 = (_1.0,);
match _25 {
340282366920938463454151235394913435648 => bb14,
_ => bb13
}
}
bb13 = {
RET = !7584283230094229558_u64;
Goto(bb11)
}
bb14 = {
_8 = [1404389987_i32,1772286235_i32,1468097806_i32,(-1796304686_i32),(-114079083_i32)];
_28 = -_10;
_17 = -_13;
_16 = (*_22) as isize;
_30 = _25 < _16;
_13 = _25 + _25;
_15 = _26.2 * _26.2;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(14_usize, 19_usize, Move(_19), 4_usize, Move(_4), 30_usize, Move(_30), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(14_usize, 3_usize, Move(_3), 2_usize, Move(_2), 6_usize, Move(_6), 8_usize, Move(_8)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(14_usize, 12_usize, Move(_12), 10_usize, Move(_10), 15_usize, Move(_15), 35_usize, _35), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: u128,mut _2: f64,mut _3: [u8; 6],mut _4: u16,mut _5: [u128; 7],mut _6: u128,mut _7: u16,mut _8: u16,mut _9: usize,mut _10: usize,mut _11: [u128; 7],mut _12: f64,mut _13: u64,mut _14: u64) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _15: u64;
let _16: isize;
let _17: f32;
let _18: ((f32, bool),);
let _19: Adt60;
let _20: bool;
let _21: *const usize;
let _22: u128;
let _23: ([i32; 2], *const i8, u8, (*const i128, u16, *const usize), (*const i128, u16, *const usize));
let _24: ((i8, u16, i64), u64, u128, char, u8);
let _25: isize;
let _26: *const f32;
let _27: *const i8;
let _28: *const i128;
let _29: isize;
let _30: *const i128;
let _31: [i128; 2];
let _32: u128;
let _33: ();
let _34: ();
{
_6 = !_1;
RET = [384533771_i32,782468437_i32,(-567581901_i32),481558861_i32,(-28442255_i32)];
_6 = _4 as u128;
_5 = [_1,_1,_1,_1,_6,_6,_6];
_15 = _14;
_16 = !(-9223372036854775808_isize);
_13 = 12760513086303110606728569884687565790_i128 as u64;
_9 = _10 - _10;
_7 = !_4;
_4 = _8 ^ _8;
Call(_1 = fn16(_7, _12), bb1, UnwindUnreachable())
}
bb1 = {
RET = [2053935042_i32,1840235599_i32,48201081_i32,(-1345217378_i32),48984346_i32];
_16 = 9223372036854775807_isize | (-9223372036854775808_isize);
RET = [2024419528_i32,1948464522_i32,1768173603_i32,(-2054323522_i32),(-968492817_i32)];
_4 = !_8;
_15 = _13;
_18.0.0 = _6 as f32;
RET = [(-2130535953_i32),(-1142818555_i32),682830093_i32,731223687_i32,79136495_i32];
_10 = _9 >> _8;
_19.fld0.2 = (-77665073164054865515118117716546706043_i128);
_19.fld0.1.0.0 = _18.0.0 * _18.0.0;
_19.fld1 = (2990475579_u32,);
_18.0.0 = -_19.fld0.1.0.0;
_18.0.1 = true ^ false;
_19.fld0.2 = -8625162943564932011633035170575874685_i128;
Goto(bb2)
}
bb2 = {
RET = [610231853_i32,1238131836_i32,(-673731747_i32),(-1296804351_i32),545467217_i32];
_3 = [151_u8,255_u8,170_u8,233_u8,148_u8,231_u8];
_19.fld0.0 = _12 != _2;
_19.fld0.2 = !97416960502467939026176600760100669513_i128;
match _19.fld1.0 {
0 => bb3,
1 => bb4,
2 => bb5,
2990475579 => bb7,
_ => bb6
}
}
bb3 = {
RET = [2053935042_i32,1840235599_i32,48201081_i32,(-1345217378_i32),48984346_i32];
_16 = 9223372036854775807_isize | (-9223372036854775808_isize);
RET = [2024419528_i32,1948464522_i32,1768173603_i32,(-2054323522_i32),(-968492817_i32)];
_4 = !_8;
_15 = _13;
_18.0.0 = _6 as f32;
RET = [(-2130535953_i32),(-1142818555_i32),682830093_i32,731223687_i32,79136495_i32];
_10 = _9 >> _8;
_19.fld0.2 = (-77665073164054865515118117716546706043_i128);
_19.fld0.1.0.0 = _18.0.0 * _18.0.0;
_19.fld1 = (2990475579_u32,);
_18.0.0 = -_19.fld0.1.0.0;
_18.0.1 = true ^ false;
_19.fld0.2 = -8625162943564932011633035170575874685_i128;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_12 = -_2;
_11 = [_1,_1,_6,_1,_1,_1,_6];
_19.fld0.1.0.0 = _14 as f32;
_11 = _5;
_3 = [165_u8,78_u8,178_u8,217_u8,213_u8,31_u8];
_16 = 104_isize;
_16 = (-78_isize) + (-124_isize);
_1 = _6 & _6;
_17 = _18.0.0;
RET = [(-1784689361_i32),1012537346_i32,1029456746_i32,(-1651460297_i32),1744247970_i32];
_24.3 = '\u{107153}';
_5 = _11;
_24.0 = ((-44_i8), _4, 3733414516473134289_i64);
_14 = _13 % 4807532925044857681_u64;
_24.2 = _6;
_3 = [61_u8,100_u8,217_u8,228_u8,37_u8,192_u8];
_24.1 = _14 >> _14;
_24.0 = (106_i8, _8, 2062735525182898624_i64);
_21 = core::ptr::addr_of!(_9);
_24.3 = '\u{c55dc}';
_24.4 = 94_u8;
Goto(bb8)
}
bb8 = {
_22 = _1;
_23.3.1 = _16 as u16;
_30 = core::ptr::addr_of!(_19.fld0.2);
_10 = !(*_21);
_23.1 = core::ptr::addr_of!(_24.0.0);
_8 = (*_30) as u16;
_9 = !_10;
_15 = !_24.1;
_23.4.1 = _7 >> (*_30);
_23.3 = (_30, _23.4.1, _21);
Goto(bb9)
}
bb9 = {
_19.fld0.2 = -90828449225979571424000415638281383173_i128;
_6 = _22;
_12 = _2 - _2;
_23.4.1 = _8 << (*_21);
_15 = !_24.1;
_23.2 = _24.4 << _4;
_19.fld0.1.0.0 = -_18.0.0;
_19.fld0.1.0.0 = _12 as f32;
match _24.0.0 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb10,
106 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
RET = [2053935042_i32,1840235599_i32,48201081_i32,(-1345217378_i32),48984346_i32];
_16 = 9223372036854775807_isize | (-9223372036854775808_isize);
RET = [2024419528_i32,1948464522_i32,1768173603_i32,(-2054323522_i32),(-968492817_i32)];
_4 = !_8;
_15 = _13;
_18.0.0 = _6 as f32;
RET = [(-2130535953_i32),(-1142818555_i32),682830093_i32,731223687_i32,79136495_i32];
_10 = _9 >> _8;
_19.fld0.2 = (-77665073164054865515118117716546706043_i128);
_19.fld0.1.0.0 = _18.0.0 * _18.0.0;
_19.fld1 = (2990475579_u32,);
_18.0.0 = -_19.fld0.1.0.0;
_18.0.1 = true ^ false;
_19.fld0.2 = -8625162943564932011633035170575874685_i128;
Goto(bb2)
}
bb12 = {
_1 = _6 ^ _6;
_30 = _23.3.0;
_19.fld0.1.0.1 = _22 <= _1;
_19.fld0.2 = 22554193490830156111300486575830253345_i128;
_23.4.0 = core::ptr::addr_of!((*_30));
_14 = 29466_i16 as u64;
_18.0.1 = !_19.fld0.1.0.1;
_24.0.2 = -1081486895885816700_i64;
_23.4 = (_23.3.0, _4, _23.3.2);
(*_21) = _18.0.1 as usize;
_23.3 = (_30, _24.0.1, _23.4.2);
_18.0.0 = -_19.fld0.1.0.0;
_23.4.2 = core::ptr::addr_of!((*_21));
_13 = _24.1 >> _9;
_12 = _2;
_28 = core::ptr::addr_of!((*_30));
_6 = _1;
_24.0.0 = !47_i8;
_26 = core::ptr::addr_of!(_19.fld0.1.0.0);
match _19.fld0.2 {
0 => bb1,
1 => bb8,
22554193490830156111300486575830253345 => bb14,
_ => bb13
}
}
bb13 = {
_12 = -_2;
_11 = [_1,_1,_6,_1,_1,_1,_6];
_19.fld0.1.0.0 = _14 as f32;
_11 = _5;
_3 = [165_u8,78_u8,178_u8,217_u8,213_u8,31_u8];
_16 = 104_isize;
_16 = (-78_isize) + (-124_isize);
_1 = _6 & _6;
_17 = _18.0.0;
RET = [(-1784689361_i32),1012537346_i32,1029456746_i32,(-1651460297_i32),1744247970_i32];
_24.3 = '\u{107153}';
_5 = _11;
_24.0 = ((-44_i8), _4, 3733414516473134289_i64);
_14 = _13 % 4807532925044857681_u64;
_24.2 = _6;
_3 = [61_u8,100_u8,217_u8,228_u8,37_u8,192_u8];
_24.1 = _14 >> _14;
_24.0 = (106_i8, _8, 2062735525182898624_i64);
_21 = core::ptr::addr_of!(_9);
_24.3 = '\u{c55dc}';
_24.4 = 94_u8;
Goto(bb8)
}
bb14 = {
_7 = !_23.3.1;
_1 = _6 << _6;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(15_usize, 15_usize, Move(_15), 14_usize, Move(_14), 6_usize, Move(_6), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(15_usize, 7_usize, Move(_7), 13_usize, Move(_13), 11_usize, Move(_11), 24_usize, Move(_24)), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: u16,mut _2: f64) -> u128 {
mir! {
type RET = u128;
let _3: ((i8, u16, i64), u64, u128, char, u8);
let _4: (char,);
let _5: Adt59;
let _6: f32;
let _7: (char,);
let _8: [i8; 7];
let _9: i8;
let _10: i32;
let _11: Adt57;
let _12: (u128,);
let _13: f32;
let _14: Adt66;
let _15: i16;
let _16: char;
let _17: f64;
let _18: [i8; 7];
let _19: (usize, f64, bool);
let _20: i128;
let _21: u128;
let _22: ((f32, bool),);
let _23: isize;
let _24: Adt53;
let _25: [u32; 5];
let _26: [i32; 2];
let _27: i128;
let _28: char;
let _29: bool;
let _30: Adt55;
let _31: Adt58;
let _32: Adt54;
let _33: (bool,);
let _34: u128;
let _35: *const usize;
let _36: (i16, (*const i128, u16, *const usize), i8);
let _37: isize;
let _38: f64;
let _39: ();
let _40: ();
{
_3.4 = 28_u8;
_3.3 = '\u{c8d96}';
_3.0.2 = 3431938475593627243_i64;
_3.0 = ((-15_i8), _1, (-4515929267426727602_i64));
_4.0 = _3.3;
_5.fld3 = (_3.0.0, _1, _3.0.2);
_6 = _3.4 as f32;
_5.fld2.fld0.0 = (-9223372036854775808_isize) as u128;
_3.1 = !15000854190210483534_u64;
_5.fld2.fld1 = [_3.0.0,_3.0.0,_5.fld3.0,_5.fld3.0,_5.fld3.0,_3.0.0];
_3.2 = !_5.fld2.fld0.0;
_5.fld3 = (_3.0.0, _3.0.1, _3.0.2);
_3.0 = (_5.fld3.0, _1, _5.fld3.2);
_5.fld3 = _3.0;
_3.4 = 100_u8;
_5.fld3 = _3.0;
RET = _1 as u128;
_5.fld3.2 = !_3.0.2;
_7 = (_4.0,);
_8 = [_5.fld3.0,_3.0.0,_5.fld3.0,_3.0.0,_5.fld3.0,_5.fld3.0,_5.fld3.0];
_3.4 = _3.0.0 as u8;
match _5.fld3.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431768211441 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_5.fld0 = _1 << _3.1;
_6 = _3.4 as f32;
_8 = [_5.fld3.0,_3.0.0,_3.0.0,_5.fld3.0,_5.fld3.0,_3.0.0,_3.0.0];
_4.0 = _3.3;
_4 = (_7.0,);
_5.fld3 = (_3.0.0, _1, _3.0.2);
_4.0 = _3.3;
_7.0 = _3.3;
_5.fld3.0 = 9223372036854775807_isize as i8;
_3.0.1 = _3.2 as u16;
_7.0 = _3.3;
_9 = -_3.0.0;
_3.3 = _7.0;
_8 = [_9,_3.0.0,_9,_9,_5.fld3.0,_9,_9];
_3.1 = 9223372036854775807_isize as u64;
_11.fld7 = _3.4;
_11.fld0.0 = _6 <= _6;
_11.fld1.2 = _5.fld2.fld0.0;
_4.0 = _3.3;
_11.fld1.0.2 = -_5.fld3.2;
_11.fld6.1 = 157528889258660912207446117743971720670_i128;
_5.fld1 = _2 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017767996222935765_f64);
_7.0 = _4.0;
_11.fld5.0 = !10157403100559605729_usize;
match _3.0.2 {
340282366920938463458858678164341483854 => bb9,
_ => bb1
}
}
bb9 = {
_11.fld1 = (_3.0, _3.1, _5.fld2.fld0.0, _7.0, _11.fld7);
_14.fld3.fld0.fld5.0 = _11.fld5.0 - _11.fld5.0;
_14.fld3.fld0.fld4 = [(-2022717290_i32),675441188_i32,1758204525_i32,(-255946746_i32),(-310317164_i32)];
_14.fld1 = _7.0;
_11.fld1.0.1 = _5.fld3.1 >> _14.fld3.fld0.fld5.0;
_13 = -_6;
_11.fld5 = (_14.fld3.fld0.fld5.0, _5.fld1, _11.fld0.0);
_11.fld0.1.0.1 = !_11.fld0.0;
_14.fld3.fld0.fld5.1 = _5.fld1;
_5.fld2.fld0.0 = _3.2 ^ _3.2;
_11.fld5.2 = _11.fld0.1.0.1 ^ _11.fld0.0;
_14.fld3.fld0.fld2 = [145322160_u32,3376184002_u32,778794170_u32,3223002552_u32,4206581859_u32,2813178644_u32,3109730470_u32];
_14.fld3.fld0.fld0.1.0.1 = _11.fld0.0;
_11.fld6 = (1880421412_i32, (-22200902894183282991490277183975506182_i128));
_14.fld0 = _14.fld3.fld0.fld2;
_3.2 = _5.fld3.1 as u128;
_4 = (_14.fld1,);
_11.fld1.0 = (_3.0.0, _5.fld0, _5.fld3.2);
_12.0 = _11.fld1.0.1 as u128;
_14.fld3.fld0.fld6.0 = _11.fld6.0;
_18 = _8;
_18 = _8;
_5.fld3.2 = !_11.fld1.0.2;
_11.fld0.2 = (-4427_i16) as i128;
Goto(bb10)
}
bb10 = {
_5.fld0 = _1 << _5.fld3.2;
_19.0 = _14.fld3.fld0.fld5.0;
_3.1 = (-9223372036854775808_isize) as u64;
_3.4 = _3.0.2 as u8;
_14.fld3.fld0.fld0.0 = !_11.fld0.1.0.1;
_11.fld1 = (_3.0, _3.1, _3.2, _4.0, _11.fld7);
_11.fld0.2 = (-12632_i16) as i128;
Goto(bb11)
}
bb11 = {
_14.fld3.fld0.fld0.1.0.1 = _11.fld0.0 ^ _14.fld3.fld0.fld0.0;
_22.0.0 = _6;
_11.fld1.1 = _11.fld0.1.0.1 as u64;
_5.fld3.2 = _11.fld1.0.2;
_3.0.1 = !_5.fld3.1;
_14.fld3.fld1 = [_11.fld5.2,_11.fld0.0,_11.fld0.0];
_15 = 10158_i16 >> _5.fld3.2;
_14.fld3.fld0.fld4 = [_14.fld3.fld0.fld6.0,_11.fld6.0,_14.fld3.fld0.fld6.0,_14.fld3.fld0.fld6.0,_11.fld6.0];
_14.fld3.fld0.fld1.4 = _11.fld1.4 | _11.fld1.4;
_14.fld3.fld0.fld3 = !_11.fld1.0.0;
_17 = 697609200_u32 as f64;
_11.fld6.0 = _14.fld3.fld0.fld6.0;
_11.fld1.0.0 = -_9;
_14.fld3.fld0.fld1.3 = _11.fld1.3;
_5.fld1 = _11.fld1.0.2 as f64;
_10 = _5.fld0 as i32;
_11.fld0.1.0.0 = -_6;
_14.fld3.fld1 = [_14.fld3.fld0.fld0.0,_14.fld3.fld0.fld0.1.0.1,_14.fld3.fld0.fld0.0];
_19.1 = _11.fld5.1;
_11.fld0.1.0.1 = !_14.fld3.fld0.fld0.1.0.1;
_14.fld3.fld0.fld1.0.1 = _11.fld1.0.1;
_19.2 = !_11.fld5.2;
_24.fld3 = [3697354670_u32,2964976086_u32,1909868048_u32,2508868946_u32,3291361488_u32];
_19.1 = _11.fld5.1 + _5.fld1;
_6 = _11.fld0.1.0.0;
_19.0 = _11.fld5.0;
_17 = _11.fld7 as f64;
match _5.fld3.2 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb9,
4 => bb5,
340282366920938463458858678164341483854 => bb12,
_ => bb6
}
}
bb12 = {
_14.fld3.fld0.fld0.2 = 9223372036854775807_isize as i128;
_14.fld3.fld0.fld5 = (_19.0, _5.fld1, _11.fld0.1.0.1);
_14.fld3.fld0.fld1.1 = _11.fld1.1;
_29 = _6 > _13;
_14.fld3.fld0.fld1.4 = _11.fld1.4;
_14.fld3.fld0.fld1.1 = _11.fld1.1 >> _15;
_14.fld3.fld0.fld1.0 = (_14.fld3.fld0.fld3, _5.fld3.1, _11.fld1.0.2);
_5.fld2.fld0 = _12;
_14.fld3.fld0.fld6.0 = 32_isize as i32;
_14.fld3.fld0.fld6 = (_10, _14.fld3.fld0.fld0.2);
_8 = [_9,_14.fld3.fld0.fld1.0.0,_9,_11.fld1.0.0,_14.fld3.fld0.fld3,_9,_3.0.0];
_24.fld1 = [_14.fld3.fld0.fld1.4,_3.4,_11.fld1.4,_11.fld7,_11.fld1.4,_11.fld7];
_30.fld0 = _5.fld0;
_11.fld1.4 = _14.fld3.fld0.fld1.4;
_31.fld0.fld3.fld2 = (_14.fld3.fld0.fld3, _11.fld1.0.1, _11.fld1.0.2);
_31.fld1 = _11.fld1.2 >> _14.fld3.fld0.fld1.4;
_11.fld1.0 = (_14.fld3.fld0.fld1.0.0, _5.fld0, _3.0.2);
_31.fld0.fld3.fld0 = _14.fld3.fld0.fld0.1.0.1 <= _14.fld3.fld0.fld5.2;
_14.fld3.fld0.fld6.1 = _11.fld6.1;
_22.0.1 = _14.fld3.fld0.fld0.1.0.1;
_3.0 = (_14.fld3.fld0.fld3, _1, _5.fld3.2);
_32.fld3.fld2 = _11.fld1.0;
_24.fld1 = [_11.fld7,_14.fld3.fld0.fld1.4,_14.fld3.fld0.fld1.4,_14.fld3.fld0.fld1.4,_3.4,_3.4];
match _14.fld3.fld0.fld6.1 {
0 => bb9,
1 => bb2,
2 => bb5,
3 => bb7,
318081464026755180471884330247792705274 => bb14,
_ => bb13
}
}
bb13 = {
_11.fld1 = (_3.0, _3.1, _5.fld2.fld0.0, _7.0, _11.fld7);
_14.fld3.fld0.fld5.0 = _11.fld5.0 - _11.fld5.0;
_14.fld3.fld0.fld4 = [(-2022717290_i32),675441188_i32,1758204525_i32,(-255946746_i32),(-310317164_i32)];
_14.fld1 = _7.0;
_11.fld1.0.1 = _5.fld3.1 >> _14.fld3.fld0.fld5.0;
_13 = -_6;
_11.fld5 = (_14.fld3.fld0.fld5.0, _5.fld1, _11.fld0.0);
_11.fld0.1.0.1 = !_11.fld0.0;
_14.fld3.fld0.fld5.1 = _5.fld1;
_5.fld2.fld0.0 = _3.2 ^ _3.2;
_11.fld5.2 = _11.fld0.1.0.1 ^ _11.fld0.0;
_14.fld3.fld0.fld2 = [145322160_u32,3376184002_u32,778794170_u32,3223002552_u32,4206581859_u32,2813178644_u32,3109730470_u32];
_14.fld3.fld0.fld0.1.0.1 = _11.fld0.0;
_11.fld6 = (1880421412_i32, (-22200902894183282991490277183975506182_i128));
_14.fld0 = _14.fld3.fld0.fld2;
_3.2 = _5.fld3.1 as u128;
_4 = (_14.fld1,);
_11.fld1.0 = (_3.0.0, _5.fld0, _5.fld3.2);
_12.0 = _11.fld1.0.1 as u128;
_14.fld3.fld0.fld6.0 = _11.fld6.0;
_18 = _8;
_18 = _8;
_5.fld3.2 = !_11.fld1.0.2;
_11.fld0.2 = (-4427_i16) as i128;
Goto(bb10)
}
bb14 = {
_11.fld1.3 = _3.3;
_11.fld0.1.0.0 = _22.0.0;
_33.0 = _29;
_11.fld2 = _14.fld3.fld0.fld2;
_14.fld3.fld0.fld0.1.0.0 = _13;
_32.fld4.fld3 = [2864595002_u32,1272480392_u32,4022776826_u32,3156771618_u32,2387385529_u32];
_32.fld4.fld0 = _11.fld0.0 == _29;
_11.fld6.0 = _14.fld3.fld0.fld6.0;
_11.fld3 = !_32.fld3.fld2.0;
_14.fld3.fld0.fld6.1 = _11.fld0.2;
_36.2 = -_11.fld1.0.0;
_14.fld3.fld0.fld1.2 = !_12.0;
_33 = (_11.fld0.1.0.1,);
_32.fld0 = core::ptr::addr_of!(_14.fld3.fld1);
_11.fld1.4 = _11.fld1.0.1 as u8;
_6 = _9 as f32;
_32.fld4.fld2 = core::ptr::addr_of!(_22.0.0);
_11.fld1.3 = _3.3;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(16_usize, 29_usize, Move(_29), 4_usize, Move(_4), 10_usize, Move(_10), 7_usize, Move(_7)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(16_usize, 33_usize, Move(_33), 8_usize, Move(_8), 40_usize, _40, 40_usize, _40), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: u128,mut _2: [i8; 6],mut _3: i64,mut _4: [i8; 7],mut _5: bool,mut _6: bool,mut _7: [i8; 7],mut _8: char,mut _9: *const f32,mut _10: u8,mut _11: u16) -> *mut u8 {
mir! {
type RET = *mut u8;
let _12: *const bool;
let _13: u8;
let _14: isize;
let _15: [u32; 5];
let _16: (i16, (*const i128, u16, *const usize), i8);
let _17: bool;
let _18: i16;
let _19: (i32, i128);
let _20: [u128; 3];
let _21: (i16, (*const i128, u16, *const usize), i8);
let _22: (f32, bool);
let _23: i32;
let _24: f64;
let _25: Adt56;
let _26: Adt57;
let _27: ();
let _28: ();
{
_7 = _4;
_1 = 114963960340320869254571736477181062519_u128;
RET = core::ptr::addr_of_mut!(_10);
_11 = 13651_u16;
RET = core::ptr::addr_of_mut!((*RET));
_4 = [(-41_i8),33_i8,24_i8,87_i8,(-110_i8),(-72_i8),32_i8];
_10 = _3 as u8;
(*RET) = 14761647333893356522_u64 as u8;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
6041746969795099715 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_8 = '\u{cc8a7}';
(*RET) = !26_u8;
(*RET) = 8_u8;
(*RET) = 1149463201_i32 as u8;
_6 = _5;
(*RET) = 255_u8;
(*RET) = _8 as u8;
_11 = !30393_u16;
_7 = [113_i8,(-31_i8),(-98_i8),90_i8,(-90_i8),105_i8,(-114_i8)];
(*_9) = 4152827302_u32 as f32;
_1 = !250229320816619867470329774801779101173_u128;
(*_9) = 3503446694_u32 as f32;
_10 = 50_u8;
_7 = _4;
_4 = [(-2_i8),(-53_i8),63_i8,(-8_i8),46_i8,(-89_i8),(-42_i8)];
_14 = 9223372036854775807_isize;
_2 = [(-37_i8),39_i8,(-91_i8),69_i8,115_i8,(-117_i8)];
_14 = -105_isize;
Goto(bb8)
}
bb8 = {
_2 = [(-17_i8),94_i8,15_i8,40_i8,3_i8,105_i8];
(*RET) = 255_u8;
_7 = [19_i8,98_i8,101_i8,97_i8,9_i8,(-106_i8),91_i8];
_13 = (*RET) + (*RET);
_12 = core::ptr::addr_of!(_5);
_6 = (*_12) ^ _5;
(*RET) = 816809999_u32 as u8;
match _3 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb9,
6041746969795099715 => bb11,
_ => bb10
}
}
bb9 = {
_8 = '\u{cc8a7}';
(*RET) = !26_u8;
(*RET) = 8_u8;
(*RET) = 1149463201_i32 as u8;
_6 = _5;
(*RET) = 255_u8;
(*RET) = _8 as u8;
_11 = !30393_u16;
_7 = [113_i8,(-31_i8),(-98_i8),90_i8,(-90_i8),105_i8,(-114_i8)];
(*_9) = 4152827302_u32 as f32;
_1 = !250229320816619867470329774801779101173_u128;
(*_9) = 3503446694_u32 as f32;
_10 = 50_u8;
_7 = _4;
_4 = [(-2_i8),(-53_i8),63_i8,(-8_i8),46_i8,(-89_i8),(-42_i8)];
_14 = 9223372036854775807_isize;
_2 = [(-37_i8),39_i8,(-91_i8),69_i8,115_i8,(-117_i8)];
_14 = -105_isize;
Goto(bb8)
}
bb10 = {
Return()
}
bb11 = {
(*_12) = !_6;
(*_12) = _6 > _6;
(*RET) = 2512178531_u32 as u8;
_3 = 1880999663700703210_u64 as i64;
_7 = _4;
_3 = (-1341682409666993230_i64);
match _3 {
0 => bb9,
1 => bb12,
2 => bb13,
3 => bb14,
340282366920938463462032925022101218226 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_2 = [(-17_i8),94_i8,15_i8,40_i8,3_i8,105_i8];
(*RET) = 255_u8;
_7 = [19_i8,98_i8,101_i8,97_i8,9_i8,(-106_i8),91_i8];
_13 = (*RET) + (*RET);
_12 = core::ptr::addr_of!(_5);
_6 = (*_12) ^ _5;
(*RET) = 816809999_u32 as u8;
match _3 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb9,
6041746969795099715 => bb11,
_ => bb10
}
}
bb15 = {
Return()
}
bb16 = {
(*_9) = 1427313557603473754_usize as f32;
_16.0 = 10551_i16 | 3339_i16;
_16.1.0 = core::ptr::addr_of!(_19.1);
RET = core::ptr::addr_of_mut!(_13);
_1 = 260263364039912810768710637845333599383_u128;
(*_12) = _6;
_14 = 5_isize - (-119_isize);
_21.1.1 = _11 & _11;
_19 = (965588920_i32, 128395922500393615159051014621906809471_i128);
_14 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_16.1.0 = core::ptr::addr_of!(_19.1);
_15 = [1607848312_u32,271340573_u32,2801824983_u32,363090386_u32,987689117_u32];
_21.1.0 = core::ptr::addr_of!(_19.1);
(*RET) = _10;
_10 = !(*RET);
_16.2 = 110_i8 << _14;
_26.fld4 = [_19.0,_19.0,_19.0,_19.0,_19.0];
_26.fld1.0.2 = _19.1 as i64;
_16.1.0 = core::ptr::addr_of!(_26.fld0.2);
_19.1 = -(-134113386619219927597211935596419479539_i128);
_26.fld5.1 = (*RET) as f64;
Goto(bb17)
}
bb17 = {
Call(_27 = dump_var(17_usize, 7_usize, Move(_7), 6_usize, Move(_6), 14_usize, Move(_14), 19_usize, Move(_19)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_27 = dump_var(17_usize, 2_usize, Move(_2), 4_usize, Move(_4), 13_usize, Move(_13), 28_usize, _28), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box(53708_u16));
                
            }
#[derive(Debug)]
pub struct Adt50 {
fld0: bool,
fld1: [u128; 7],
fld2: (i8, u16, i64),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: ((f32, bool),),
fld1: (usize, f64, bool),
fld2: (u128,),
fld3: *const i128,
}
#[derive(Debug)]
pub struct Adt52 {
fld0: [u128; 3],
fld1: (usize, f64, bool),
fld2: isize,
fld3: u128,
fld4: ((i8, u16, i64), u64, u128, char, u8),
fld5: (u32,),
fld6: usize,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: bool,
fld1: [u8; 6],
fld2: *const f32,
fld3: [u32; 5],
}
#[derive(Debug)]
pub struct Adt54 {
fld0: *const [bool; 3],
fld1: [u128; 3],
fld2: isize,
fld3: Adt50,
fld4: Adt53,
fld5: u32,
fld6: [i8; 6],
}
#[derive(Debug)]
pub struct Adt55 {
fld0: u16,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: (u128,),
fld1: [i8; 6],
}
#[derive(Debug)]
pub struct Adt57 {
fld0: (bool, ((f32, bool),), i128),
fld1: ((i8, u16, i64), u64, u128, char, u8),
fld2: [u32; 7],
fld3: i8,
fld4: [i32; 5],
fld5: (usize, f64, bool),
fld6: (i32, i128),
fld7: u8,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: Adt54,
fld1: u128,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: u16,
fld1: f64,
fld2: Adt56,
fld3: (i8, u16, i64),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt60 {
fld0: (bool, ((f32, bool),), i128),
fld1: (u32,),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: *mut u8,
fld1: [u128; 7],
fld2: isize,
fld3: [u128; 3],
fld4: *const [bool; 3],
fld5: (f32, bool),
}
#[derive(Debug)]
pub struct Adt62 {
fld0: *const i128,
fld1: [i32; 5],
fld2: ([u32; 5], i8, i8),
fld3: *const bool,
fld4: i16,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: Adt58,
fld1: (f32, bool),
fld2: (i16, (*const i128, u16, *const usize), i8),
fld3: Adt51,
}
#[derive(Debug)]
pub struct Adt64 {
fld0: Adt57,
fld1: [bool; 3],
}
#[derive(Debug)]
pub struct Adt65 {
fld0: [i8; 7],
fld1: u8,
fld2: [u128; 7],
fld3: [i32; 5],
fld4: [u32; 7],
fld5: Adt55,
fld6: u64,
}
#[derive(Debug)]
pub struct Adt66 {
fld0: [u32; 7],
fld1: char,
fld2: [u8; 6],
fld3: Adt64,
}

