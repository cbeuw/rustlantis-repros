#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: u32,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16) -> Adt48 {
mir! {
type RET = Adt48;
let _12: bool;
let _13: char;
let _14: f64;
let _15: u16;
let _16: u32;
let _17: i128;
let _18: isize;
let _19: [i64; 7];
let _20: i128;
let _21: f64;
let _22: i64;
let _23: (i8,);
let _24: char;
let _25: ([i64; 7],);
let _26: Adt50;
let _27: [i128; 5];
let _28: i128;
let _29: (i128,);
let _30: ();
let _31: ();
{
_11 = !31296_u16;
Goto(bb1)
}
bb1 = {
_10 = !23_u8;
_3 = 9223372036854775807_isize;
_1 = false & false;
_4 = 1099758268_u32;
_1 = false | false;
RET = Adt48::Variant0 { fld0: 12_i8 };
_5 = _1 as i16;
_6 = (-1424983366_i32);
_7 = (-4897208867533731328_i64) & 3942842213454337309_i64;
_6 = (-225386933_i32);
RET = Adt48::Variant0 { fld0: 62_i8 };
_7 = !8989483073300681923_i64;
_4 = 3544554114_u32 - 1982929158_u32;
RET = Adt48::Variant1 { fld0: _3 };
_14 = 60_i8 as f64;
_4 = !2639762229_u32;
_9 = !2_usize;
_11 = 20732_u16 ^ 18326_u16;
place!(Field::<isize>(Variant(RET, 1), 0)) = _3;
_10 = !247_u8;
_13 = '\u{6b453}';
match _3 {
0 => bb2,
1 => bb3,
9223372036854775807 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_2 = _13;
_5 = (-15261_i16);
RET = Adt48::Variant1 { fld0: _3 };
SetDiscriminant(RET, 0);
_5 = 24588_i16 << _3;
_6 = _14 as i32;
_1 = true | false;
place!(Field::<i8>(Variant(RET, 0), 0)) = -(-3_i8);
_16 = _4;
_17 = !19475831322996081015817208364455454076_i128;
_18 = !_3;
SetDiscriminant(RET, 1);
RET = Adt48::Variant0 { fld0: (-62_i8) };
_7 = !1881109559418850089_i64;
_13 = _2;
place!(Field::<i8>(Variant(RET, 0), 0)) = (-111_i8) & (-82_i8);
_6 = (-64545333_i32);
_12 = _1;
_1 = _12 | _12;
_5 = -(-28154_i16);
_4 = _16;
_1 = _12;
_6 = (-298838005_i32) + (-291320756_i32);
_15 = !_11;
_1 = !_12;
Goto(bb6)
}
bb6 = {
_12 = _1;
_8 = _16 as i128;
_14 = _4 as f64;
_16 = _4;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb7 = {
_10 = !23_u8;
_3 = 9223372036854775807_isize;
_1 = false & false;
_4 = 1099758268_u32;
_1 = false | false;
RET = Adt48::Variant0 { fld0: 12_i8 };
_5 = _1 as i16;
_6 = (-1424983366_i32);
_7 = (-4897208867533731328_i64) & 3942842213454337309_i64;
_6 = (-225386933_i32);
RET = Adt48::Variant0 { fld0: 62_i8 };
_7 = !8989483073300681923_i64;
_4 = 3544554114_u32 - 1982929158_u32;
RET = Adt48::Variant1 { fld0: _3 };
_14 = 60_i8 as f64;
_4 = !2639762229_u32;
_9 = !2_usize;
_11 = 20732_u16 ^ 18326_u16;
place!(Field::<isize>(Variant(RET, 1), 0)) = _3;
_10 = !247_u8;
_13 = '\u{6b453}';
match _3 {
0 => bb2,
1 => bb3,
9223372036854775807 => bb5,
_ => bb4
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_1 = _12;
_10 = 32_u8 & 208_u8;
_5 = 247890289410085092471224776419177841608_u128 as i16;
RET = Adt48::Variant0 { fld0: 47_i8 };
_13 = _2;
Goto(bb11)
}
bb11 = {
_5 = 22467_i16;
_20 = _17;
_14 = (-105_i8) as f64;
RET = Adt48::Variant1 { fld0: _3 };
RET = Adt48::Variant1 { fld0: _18 };
_22 = _7;
_15 = _11 ^ _11;
RET = Adt48::Variant1 { fld0: _3 };
SetDiscriminant(RET, 0);
_23.0 = !(-7_i8);
Call(_17 = fn1(_12, _5, _5, _1, _6, _12, _7), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_22 = !_7;
_15 = !_11;
_18 = _3;
_3 = _9 as isize;
place!(Field::<i8>(Variant(RET, 0), 0)) = _23.0;
_17 = !_20;
_4 = _16;
_20 = _8 >> _23.0;
RET = Adt48::Variant0 { fld0: _23.0 };
_5 = -30045_i16;
RET = Adt48::Variant1 { fld0: _3 };
RET = Adt48::Variant1 { fld0: _18 };
place!(Field::<isize>(Variant(RET, 1), 0)) = !_18;
_15 = !_11;
_20 = _17;
Goto(bb13)
}
bb13 = {
_18 = _3;
_20 = !_17;
_25.0 = [_22,_7,_22,_22,_7,_22,_22];
_21 = _14;
_16 = _4 - _4;
place!(Field::<isize>(Variant(RET, 1), 0)) = !_18;
_7 = _15 as i64;
_8 = _6 as i128;
_8 = 340088365357485088775155944548554098344_u128 as i128;
_6 = (-172671921_i32) ^ (-781993703_i32);
Goto(bb14)
}
bb14 = {
_10 = 163_u8;
_24 = _2;
_27 = [_20,_20,_17,_17,_8];
_16 = _4 * _4;
_1 = _12;
_19 = [_7,_22,_7,_22,_22,_22,_7];
_29 = (_20,);
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(0_usize, 5_usize, Move(_5), 13_usize, Move(_13), 22_usize, Move(_22), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(0_usize, 7_usize, Move(_7), 19_usize, Move(_19), 10_usize, Move(_10), 29_usize, Move(_29)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(0_usize, 3_usize, Move(_3), 17_usize, Move(_17), 11_usize, Move(_11), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: bool,mut _2: i16,mut _3: i16,mut _4: bool,mut _5: i32,mut _6: bool,mut _7: i64) -> i128 {
mir! {
type RET = i128;
let _8: isize;
let _9: ([i64; 7],);
let _10: [char; 1];
let _11: Adt46;
let _12: isize;
let _13: *mut usize;
let _14: *mut i8;
let _15: (i128, (([i64; 7],), u128, i16));
let _16: isize;
let _17: Adt46;
let _18: [u8; 1];
let _19: [i128; 5];
let _20: Adt48;
let _21: [u32; 1];
let _22: f32;
let _23: u8;
let _24: i32;
let _25: (u128, i8, i8);
let _26: ([i64; 7],);
let _27: i32;
let _28: *mut bool;
let _29: i8;
let _30: isize;
let _31: [u32; 7];
let _32: [u16; 3];
let _33: (i8,);
let _34: Adt49;
let _35: [u32; 7];
let _36: isize;
let _37: Adt47;
let _38: [u16; 3];
let _39: ();
let _40: ();
{
_5 = -1135565327_i32;
_6 = _1 & _4;
RET = -(-104573100857201169755118130583078686447_i128);
_5 = -1581209347_i32;
_1 = !_6;
RET = 168698179775879233425887618503167793310_i128;
_7 = (-4700596595897403744_i64);
_9.0 = [_7,_7,_7,_7,_7,_7,_7];
_2 = 177_u8 as i16;
_8 = (-9223372036854775808_isize) >> _3;
_6 = !_1;
_5 = (-763125395_i32) >> _3;
_9.0 = [_7,_7,_7,_7,_7,_7,_7];
_9.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = (-30582610693971764650729859410233386082_i128);
Call(RET = fn2(_8, _1, _4, _6, _9.0, _8, _5, _4, _9.0, _8, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _2;
_1 = _6 & _4;
_7 = _5 as i64;
_10 = ['\u{a1841}'];
_10 = ['\u{3aad}'];
RET = 65304020842045989075255529798951405201_i128;
_5 = (-1737314940_i32) | 346132173_i32;
_4 = !_1;
_2 = _3 - _3;
_7 = 8243770382340229556_i64 | (-1392892693603205021_i64);
_12 = _3 as isize;
_12 = _8;
_8 = 268814540640973546282097802396281070604_u128 as isize;
_1 = !_6;
_5 = (-1706872795_i32);
_6 = _1;
_10 = ['\u{aab74}'];
_8 = _12 & _12;
_4 = !_1;
_7 = -2191082855470386631_i64;
_5 = 1924719372_i32;
_2 = -_3;
_12 = !_8;
_1 = _6;
_10 = ['\u{bc606}'];
Call(_2 = core::intrinsics::transmute(_3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_15.1.0.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = _2 as i128;
_1 = _6;
_4 = _1;
_9.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = !(-162216221234159399267054186637256544496_i128);
_15.1.2 = _3;
_9 = (_15.1.0.0,);
Goto(bb3)
}
bb3 = {
_16 = _8;
_15.1 = (_9, 234791227300200261739884546573792085240_u128, _3);
_3 = _15.1.2 | _15.1.2;
RET = (-127452024087444135783831966912151563503_i128);
_9 = (_15.1.0.0,);
_10 = ['\u{3bc69}'];
_5 = -1939754917_i32;
_15.0 = 43_i8 as i128;
_9.0 = _15.1.0.0;
_15.1.0 = _9;
_12 = 8449533662036568582_usize as isize;
_15.1.0 = (_9.0,);
Call(_15.1 = fn19(_8, _16, RET), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_4 = _15.1.2 != _3;
_15.1.0.0 = [_7,_7,_7,_7,_7,_7,_7];
_9 = (_15.1.0.0,);
_3 = _2;
_10 = ['\u{f0d20}'];
_5 = 654316520_i32;
_15.1.0 = (_9.0,);
_8 = _16 | _12;
_4 = !_1;
_15.1.0 = (_9.0,);
_18 = [105_u8];
_19 = [_15.0,_15.0,RET,RET,_15.0];
_3 = _2 + _2;
_2 = -_3;
_20 = Adt48::Variant0 { fld0: 71_i8 };
_6 = _4;
_25 = (_15.1.1, (-75_i8), (-40_i8));
_25.2 = _25.1 & _25.1;
match _25.1 {
340282366920938463463374607431768211381 => bb5,
_ => bb1
}
}
bb5 = {
_25.0 = _15.1.1 - _15.1.1;
_22 = _7 as f32;
match RET {
212830342833494327679542640519616647953 => bb7,
_ => bb6
}
}
bb6 = {
_3 = _2;
_1 = _6 & _4;
_7 = _5 as i64;
_10 = ['\u{a1841}'];
_10 = ['\u{3aad}'];
RET = 65304020842045989075255529798951405201_i128;
_5 = (-1737314940_i32) | 346132173_i32;
_4 = !_1;
_2 = _3 - _3;
_7 = 8243770382340229556_i64 | (-1392892693603205021_i64);
_12 = _3 as isize;
_12 = _8;
_8 = 268814540640973546282097802396281070604_u128 as isize;
_1 = !_6;
_5 = (-1706872795_i32);
_6 = _1;
_10 = ['\u{aab74}'];
_8 = _12 & _12;
_4 = !_1;
_7 = -2191082855470386631_i64;
_5 = 1924719372_i32;
_2 = -_3;
_12 = !_8;
_1 = _6;
_10 = ['\u{bc606}'];
Call(_2 = core::intrinsics::transmute(_3), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
_8 = _16 >> _25.2;
_15.0 = RET;
_8 = _16;
_12 = -_16;
_14 = core::ptr::addr_of_mut!(_25.2);
_9 = _15.1.0;
RET = 157_u8 as i128;
_21 = [1011125893_u32];
_26 = (_9.0,);
place!(Field::<i8>(Variant(_20, 0), 0)) = 137_u8 as i8;
_25.1 = -(*_14);
_29 = _25.2 | _25.1;
_28 = core::ptr::addr_of_mut!(_4);
_15.1.0 = (_26.0,);
_32 = [2912_u16,22790_u16,57305_u16];
_8 = _12;
_25 = (_15.1.1, Field::<i8>(Variant(_20, 0), 0), _29);
match _5 {
0 => bb6,
1 => bb8,
2 => bb9,
654316520 => bb11,
_ => bb10
}
}
bb8 = {
_16 = _8;
_15.1 = (_9, 234791227300200261739884546573792085240_u128, _3);
_3 = _15.1.2 | _15.1.2;
RET = (-127452024087444135783831966912151563503_i128);
_9 = (_15.1.0.0,);
_10 = ['\u{3bc69}'];
_5 = -1939754917_i32;
_15.0 = 43_i8 as i128;
_9.0 = _15.1.0.0;
_15.1.0 = _9;
_12 = 8449533662036568582_usize as isize;
_15.1.0 = (_9.0,);
Call(_15.1 = fn19(_8, _16, RET), ReturnTo(bb4), UnwindUnreachable())
}
bb9 = {
_25.0 = _15.1.1 - _15.1.1;
_22 = _7 as f32;
match RET {
212830342833494327679542640519616647953 => bb7,
_ => bb6
}
}
bb10 = {
_15.1.0.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = _2 as i128;
_1 = _6;
_4 = _1;
_9.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = !(-162216221234159399267054186637256544496_i128);
_15.1.2 = _3;
_9 = (_15.1.0.0,);
Goto(bb3)
}
bb11 = {
SetDiscriminant(_20, 0);
_31 = [108910998_u32,2248726678_u32,17501066_u32,3201726694_u32,1386601296_u32,1630589996_u32,2861721625_u32];
_24 = !_5;
_4 = (*_14) < _29;
place!(Field::<i8>(Variant(_20, 0), 0)) = _15.1.2 as i8;
_14 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_20, 0), 0)));
_25.1 = _15.0 as i8;
_30 = _16;
_25 = (_15.1.1, _29, _29);
_25.1 = _29 * _29;
_31 = [3763432337_u32,1674800130_u32,1302871941_u32,3005827505_u32,3004859115_u32,1857150763_u32,1513788852_u32];
_28 = core::ptr::addr_of_mut!((*_28));
_10 = ['\u{66e6c}'];
_12 = _8;
_23 = 173_u8;
_24 = _5;
RET = _15.0 - _15.0;
match _23 {
0 => bb12,
173 => bb14,
_ => bb13
}
}
bb12 = {
_15.1.0.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = _2 as i128;
_1 = _6;
_4 = _1;
_9.0 = [_7,_7,_7,_7,_7,_7,_7];
RET = !(-162216221234159399267054186637256544496_i128);
_15.1.2 = _3;
_9 = (_15.1.0.0,);
Goto(bb3)
}
bb13 = {
_3 = _2;
_1 = _6 & _4;
_7 = _5 as i64;
_10 = ['\u{a1841}'];
_10 = ['\u{3aad}'];
RET = 65304020842045989075255529798951405201_i128;
_5 = (-1737314940_i32) | 346132173_i32;
_4 = !_1;
_2 = _3 - _3;
_7 = 8243770382340229556_i64 | (-1392892693603205021_i64);
_12 = _3 as isize;
_12 = _8;
_8 = 268814540640973546282097802396281070604_u128 as isize;
_1 = !_6;
_5 = (-1706872795_i32);
_6 = _1;
_10 = ['\u{aab74}'];
_8 = _12 & _12;
_4 = !_1;
_7 = -2191082855470386631_i64;
_5 = 1924719372_i32;
_2 = -_3;
_12 = !_8;
_1 = _6;
_10 = ['\u{bc606}'];
Call(_2 = core::intrinsics::transmute(_3), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
place!(Field::<i8>(Variant(_20, 0), 0)) = !_25.2;
_1 = !(*_28);
_1 = (*_28);
_30 = _8 & _12;
_2 = -_15.1.2;
_5 = _24;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(1_usize, 31_usize, Move(_31), 10_usize, Move(_10), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(1_usize, 29_usize, Move(_29), 18_usize, Move(_18), 9_usize, Move(_9), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(1_usize, 7_usize, Move(_7), 16_usize, Move(_16), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: isize,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: [i64; 7],mut _6: isize,mut _7: i32,mut _8: bool,mut _9: [i64; 7],mut _10: isize,mut _11: ([i64; 7],)) -> i128 {
mir! {
type RET = i128;
let _12: u128;
let _13: char;
let _14: usize;
let _15: u32;
let _16: u64;
let _17: bool;
let _18: *mut usize;
let _19: (u32, [i128; 5]);
let _20: [i128; 5];
let _21: u16;
let _22: isize;
let _23: *mut i8;
let _24: u32;
let _25: [i64; 7];
let _26: char;
let _27: *mut f32;
let _28: i8;
let _29: u64;
let _30: bool;
let _31: [u32; 7];
let _32: [u8; 1];
let _33: isize;
let _34: *mut f32;
let _35: *const u32;
let _36: u64;
let _37: Adt48;
let _38: (i8, (u128, i8, i8));
let _39: [u32; 7];
let _40: i16;
let _41: i128;
let _42: isize;
let _43: [char; 1];
let _44: ();
let _45: ();
{
_7 = 231787348470236330377193736699328066867_u128 as i32;
_7 = -445987269_i32;
_5 = _9;
_7 = (-1951946180_i32);
_7 = !(-434860900_i32);
_3 = !_2;
_3 = _8;
_11 = (_5,);
RET = 142244324281207625220094574274740238652_i128 & 57553018145236387602680352829734023838_i128;
_10 = !_6;
_3 = _8;
_5 = _11.0;
Call(_1 = fn3(_5, _11, _6, _10, _6, _2, _8, _6, _4, RET, _11.0, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _10 & _6;
_3 = !_2;
_11.0 = [296250182992880250_i64,3709941197288588799_i64,(-1904289616920008024_i64),3465541870602774305_i64,(-3118093173681344393_i64),(-5403755768766994868_i64),1460576934492556171_i64];
_2 = _3 >= _3;
_3 = !_2;
_10 = 8438335982121954522_usize as isize;
_8 = _2;
RET = 112397510037394734823892597923001994208_u128 as i128;
_8 = _3;
_11 = (_5,);
_13 = '\u{1c09e}';
_11 = (_9,);
_14 = 10538793162525213980_usize ^ 4433788577358476904_usize;
_8 = !_3;
_4 = _3;
_1 = _6 - _6;
_5 = [(-7491146188778359519_i64),361925808725403966_i64,(-7931964264361552815_i64),8602849298023532777_i64,7784810398182004887_i64,(-1378456678779937015_i64),(-860075794135866069_i64)];
_2 = _1 >= _1;
_10 = _3 as isize;
Call(_1 = core::intrinsics::bswap(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = (_5,);
_12 = 321909424100410282899413050648545381723_u128;
_1 = _10 << _6;
_6 = _1;
_6 = !_1;
_12 = (-15718_i16) as u128;
_11 = (_5,);
_11 = (_5,);
_15 = 2459365197_u32 + 2707172190_u32;
_15 = 92015118_u32 + 1264254058_u32;
_8 = _4;
_16 = 6997564175260600843_u64;
_11 = (_5,);
_17 = _8;
_1 = _10 & _6;
_3 = _2;
_7 = -43542807_i32;
_16 = _12 as u64;
_4 = _17 ^ _8;
_19.1 = [RET,RET,RET,RET,RET];
_8 = _4 >= _3;
RET = -(-102012238504488068905432815015984193614_i128);
_14 = 6_usize;
_13 = '\u{da2ca}';
_19.0 = _15 + _15;
_10 = _6 ^ _1;
_11.0 = [_5[_14],_9[_14],_5[_14],_5[_14],_5[_14],_5[_14],_5[_14]];
match _5[_14] {
0 => bb1,
340282366920938463462514531637632345387 => bb4,
_ => bb3
}
}
bb3 = {
_1 = _10 & _6;
_3 = !_2;
_11.0 = [296250182992880250_i64,3709941197288588799_i64,(-1904289616920008024_i64),3465541870602774305_i64,(-3118093173681344393_i64),(-5403755768766994868_i64),1460576934492556171_i64];
_2 = _3 >= _3;
_3 = !_2;
_10 = 8438335982121954522_usize as isize;
_8 = _2;
RET = 112397510037394734823892597923001994208_u128 as i128;
_8 = _3;
_11 = (_5,);
_13 = '\u{1c09e}';
_11 = (_9,);
_14 = 10538793162525213980_usize ^ 4433788577358476904_usize;
_8 = !_3;
_4 = _3;
_1 = _6 - _6;
_5 = [(-7491146188778359519_i64),361925808725403966_i64,(-7931964264361552815_i64),8602849298023532777_i64,7784810398182004887_i64,(-1378456678779937015_i64),(-860075794135866069_i64)];
_2 = _1 >= _1;
_10 = _3 as isize;
Call(_1 = core::intrinsics::bswap(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_1 = _6 | _6;
_12 = 69237636756527101320935843542042683444_u128 & 327218625371327167851595200737960449493_u128;
_6 = _10 - _10;
_17 = _4;
_16 = !17013594329438131591_u64;
_15 = _19.0 & _19.0;
_9 = [_11.0[_14],_5[_14],_11.0[_14],_5[_14],_5[_14],_11.0[_14],_11.0[_14]];
_2 = _12 == _12;
_1 = !_6;
_14 = 2161826602805237461_usize ^ 1_usize;
_1 = _6;
_8 = _4;
_2 = _4 | _17;
_20 = [RET,RET,RET,RET,RET];
RET = (-77230944143024525729330653282410661678_i128);
_14 = 16402329962064016864_usize >> _1;
_7 = !1018316369_i32;
_16 = _7 as u64;
Goto(bb5)
}
bb5 = {
_19.1 = _20;
_20 = [RET,RET,RET,RET,RET];
_12 = !78852092906025945888738648710547703895_u128;
_26 = _13;
_10 = _1 ^ _1;
_1 = _6 ^ _10;
RET = (-96715806569295534191664707068820246063_i128);
_22 = _10;
_8 = !_17;
_13 = _26;
_11 = (_9,);
_21 = !50445_u16;
_25 = [4182118590010125208_i64,(-4880068000653988910_i64),(-1106816843257053870_i64),(-9042577010452007679_i64),(-1302882680577930343_i64),7659953001191401528_i64,2451765895959415169_i64];
_15 = _19.0;
_2 = !_3;
_19 = (_15, _20);
_12 = !66025269507918214437468874868509634079_u128;
_29 = _16 | _16;
_21 = 43049_u16;
_3 = _10 >= _22;
_21 = 5676_u16;
_14 = 0_usize;
_16 = (-1506_i16) as u64;
match _11.0[_14] {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463462514531637632345387 => bb7,
_ => bb6
}
}
bb6 = {
_1 = _10 & _6;
_3 = !_2;
_11.0 = [296250182992880250_i64,3709941197288588799_i64,(-1904289616920008024_i64),3465541870602774305_i64,(-3118093173681344393_i64),(-5403755768766994868_i64),1460576934492556171_i64];
_2 = _3 >= _3;
_3 = !_2;
_10 = 8438335982121954522_usize as isize;
_8 = _2;
RET = 112397510037394734823892597923001994208_u128 as i128;
_8 = _3;
_11 = (_5,);
_13 = '\u{1c09e}';
_11 = (_9,);
_14 = 10538793162525213980_usize ^ 4433788577358476904_usize;
_8 = !_3;
_4 = _3;
_1 = _6 - _6;
_5 = [(-7491146188778359519_i64),361925808725403966_i64,(-7931964264361552815_i64),8602849298023532777_i64,7784810398182004887_i64,(-1378456678779937015_i64),(-860075794135866069_i64)];
_2 = _1 >= _1;
_10 = _3 as isize;
Call(_1 = core::intrinsics::bswap(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
_28 = (-118_i8) << _6;
_30 = _3;
_11.0[_14] = _21 as i64;
_19.1 = [_20[_14],RET,RET,RET,RET];
RET = -_19.1[_14];
_12 = 90287053949390409886127867090823866437_u128;
_19.0 = _13 as u32;
_18 = core::ptr::addr_of_mut!(_14);
_11.0 = [_25[_14],_5[_14],_5[_14],_25[_14],_25[_14],_5[_14],_5[_14]];
_30 = _3;
_29 = !_16;
_24 = _15 * _15;
_19.1[_14] = _20[_14];
_20 = [RET,_19.1[_14],_19.1[_14],RET,_19.1[_14]];
_31 = [_24,_24,_15,_24,_15,_15,_19.0];
_1 = !_10;
_30 = _22 == _10;
_13 = _26;
_28 = (-103_i8);
_26 = _13;
_32 = [191_u8];
_2 = _3;
match _14 {
0 => bb9,
_ => bb8
}
}
bb8 = {
_1 = _10 & _6;
_3 = !_2;
_11.0 = [296250182992880250_i64,3709941197288588799_i64,(-1904289616920008024_i64),3465541870602774305_i64,(-3118093173681344393_i64),(-5403755768766994868_i64),1460576934492556171_i64];
_2 = _3 >= _3;
_3 = !_2;
_10 = 8438335982121954522_usize as isize;
_8 = _2;
RET = 112397510037394734823892597923001994208_u128 as i128;
_8 = _3;
_11 = (_5,);
_13 = '\u{1c09e}';
_11 = (_9,);
_14 = 10538793162525213980_usize ^ 4433788577358476904_usize;
_8 = !_3;
_4 = _3;
_1 = _6 - _6;
_5 = [(-7491146188778359519_i64),361925808725403966_i64,(-7931964264361552815_i64),8602849298023532777_i64,7784810398182004887_i64,(-1378456678779937015_i64),(-860075794135866069_i64)];
_2 = _1 >= _1;
_10 = _3 as isize;
Call(_1 = core::intrinsics::bswap(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_10 = -_1;
_30 = _3;
_16 = _21 as u64;
_20[_14] = RET - _19.1[_14];
RET = !_20[_14];
_25 = _11.0;
RET = _20[_14];
match _25[_14] {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb10,
5 => bb11,
6 => bb12,
4182118590010125208 => bb14,
_ => bb13
}
}
bb10 = {
_1 = _10 & _6;
_3 = !_2;
_11.0 = [296250182992880250_i64,3709941197288588799_i64,(-1904289616920008024_i64),3465541870602774305_i64,(-3118093173681344393_i64),(-5403755768766994868_i64),1460576934492556171_i64];
_2 = _3 >= _3;
_3 = !_2;
_10 = 8438335982121954522_usize as isize;
_8 = _2;
RET = 112397510037394734823892597923001994208_u128 as i128;
_8 = _3;
_11 = (_5,);
_13 = '\u{1c09e}';
_11 = (_9,);
_14 = 10538793162525213980_usize ^ 4433788577358476904_usize;
_8 = !_3;
_4 = _3;
_1 = _6 - _6;
_5 = [(-7491146188778359519_i64),361925808725403966_i64,(-7931964264361552815_i64),8602849298023532777_i64,7784810398182004887_i64,(-1378456678779937015_i64),(-860075794135866069_i64)];
_2 = _1 >= _1;
_10 = _3 as isize;
Call(_1 = core::intrinsics::bswap(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_28 = (-118_i8) << _6;
_30 = _3;
_11.0[_14] = _21 as i64;
_19.1 = [_20[_14],RET,RET,RET,RET];
RET = -_19.1[_14];
_12 = 90287053949390409886127867090823866437_u128;
_19.0 = _13 as u32;
_18 = core::ptr::addr_of_mut!(_14);
_11.0 = [_25[_14],_5[_14],_5[_14],_25[_14],_25[_14],_5[_14],_5[_14]];
_30 = _3;
_29 = !_16;
_24 = _15 * _15;
_19.1[_14] = _20[_14];
_20 = [RET,_19.1[_14],_19.1[_14],RET,_19.1[_14]];
_31 = [_24,_24,_15,_24,_15,_15,_19.0];
_1 = !_10;
_30 = _22 == _10;
_13 = _26;
_28 = (-103_i8);
_26 = _13;
_32 = [191_u8];
_2 = _3;
match _14 {
0 => bb9,
_ => bb8
}
}
bb12 = {
_1 = _6 | _6;
_12 = 69237636756527101320935843542042683444_u128 & 327218625371327167851595200737960449493_u128;
_6 = _10 - _10;
_17 = _4;
_16 = !17013594329438131591_u64;
_15 = _19.0 & _19.0;
_9 = [_11.0[_14],_5[_14],_11.0[_14],_5[_14],_5[_14],_11.0[_14],_11.0[_14]];
_2 = _12 == _12;
_1 = !_6;
_14 = 2161826602805237461_usize ^ 1_usize;
_1 = _6;
_8 = _4;
_2 = _4 | _17;
_20 = [RET,RET,RET,RET,RET];
RET = (-77230944143024525729330653282410661678_i128);
_14 = 16402329962064016864_usize >> _1;
_7 = !1018316369_i32;
_16 = _7 as u64;
Goto(bb5)
}
bb13 = {
_19.1 = _20;
_20 = [RET,RET,RET,RET,RET];
_12 = !78852092906025945888738648710547703895_u128;
_26 = _13;
_10 = _1 ^ _1;
_1 = _6 ^ _10;
RET = (-96715806569295534191664707068820246063_i128);
_22 = _10;
_8 = !_17;
_13 = _26;
_11 = (_9,);
_21 = !50445_u16;
_25 = [4182118590010125208_i64,(-4880068000653988910_i64),(-1106816843257053870_i64),(-9042577010452007679_i64),(-1302882680577930343_i64),7659953001191401528_i64,2451765895959415169_i64];
_15 = _19.0;
_2 = !_3;
_19 = (_15, _20);
_12 = !66025269507918214437468874868509634079_u128;
_29 = _16 | _16;
_21 = 43049_u16;
_3 = _10 >= _22;
_21 = 5676_u16;
_14 = 0_usize;
_16 = (-1506_i16) as u64;
match _11.0[_14] {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463462514531637632345387 => bb7,
_ => bb6
}
}
bb14 = {
_20[_14] = _5[_14] as i128;
_19.1[_14] = !_20[_14];
_2 = !_3;
_36 = (*_18) as u64;
_38.1.0 = !_12;
_6 = _10 & _1;
_18 = core::ptr::addr_of_mut!(_14);
_20 = _19.1;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(2_usize, 32_usize, Move(_32), 11_usize, Move(_11), 3_usize, Move(_3), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(2_usize, 19_usize, Move(_19), 9_usize, Move(_9), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(2_usize, 26_usize, Move(_26), 12_usize, Move(_12), 30_usize, Move(_30), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(2_usize, 15_usize, Move(_15), 21_usize, Move(_21), 36_usize, Move(_36), 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i64; 7],mut _2: ([i64; 7],),mut _3: isize,mut _4: isize,mut _5: isize,mut _6: bool,mut _7: bool,mut _8: isize,mut _9: bool,mut _10: i128,mut _11: [i64; 7],mut _12: bool) -> isize {
mir! {
type RET = isize;
let _13: i16;
let _14: char;
let _15: isize;
let _16: f64;
let _17: u128;
let _18: [u32; 7];
let _19: isize;
let _20: u32;
let _21: isize;
let _22: [u8; 1];
let _23: u8;
let _24: u128;
let _25: Adt58;
let _26: *mut i8;
let _27: usize;
let _28: *const (u128, i8, i8);
let _29: isize;
let _30: u64;
let _31: *const i64;
let _32: Adt47;
let _33: Adt42;
let _34: isize;
let _35: *mut i8;
let _36: [i128; 5];
let _37: Adt50;
let _38: f64;
let _39: ();
let _40: ();
{
_1 = _2.0;
_2 = (_1,);
_7 = !_6;
RET = _4;
_2 = (_1,);
_1 = _11;
_4 = _8;
RET = !_4;
_11 = _2.0;
_4 = !_8;
_11 = [(-8100958411057529696_i64),(-152973918889167200_i64),3408764764365030050_i64,6995859342977663280_i64,(-6067833026188392377_i64),(-6943662020816618109_i64),(-2164719517046307692_i64)];
_11 = [(-1821460822702763548_i64),(-6358258274430800570_i64),(-4540946485658368784_i64),8509395771868860775_i64,8839814694819152826_i64,8730032952399311238_i64,(-1255475199001090001_i64)];
RET = _4;
_1 = [(-6013202849622996570_i64),2584627035316145817_i64,762101682418037056_i64,4738614912493034230_i64,(-3492448805061631979_i64),(-8118614167293515739_i64),(-5783548538676079171_i64)];
RET = -_8;
_10 = _7 as i128;
RET = 5064200478922415085_u64 as isize;
RET = -_4;
_12 = _9;
_13 = (-24552_i16) >> _4;
_10 = -(-150196111638482220251089356706348381673_i128);
Goto(bb1)
}
bb1 = {
_5 = _4;
_13 = 13114_u16 as i16;
_11 = _1;
_2 = (_1,);
_2 = (_11,);
_14 = '\u{2d93d}';
_2.0 = [8090640657219180471_i64,(-7843040058807788662_i64),(-2096262820071984918_i64),(-5658968388990690111_i64),4699799866631574971_i64,550976742892158255_i64,7795549671488186612_i64];
_7 = !_6;
_6 = _9;
_3 = _12 as isize;
_8 = _10 as isize;
_6 = !_12;
_5 = RET - _3;
_7 = !_6;
_8 = !_3;
_9 = _12;
_1 = [(-1577526816688317078_i64),(-680505151025673070_i64),742015209734057730_i64,22504727943382317_i64,473957328160957590_i64,1438436257471118319_i64,7631322360725696484_i64];
_15 = 2070375792_u32 as isize;
Goto(bb2)
}
bb2 = {
RET = _10 as isize;
_16 = RET as f64;
RET = (-113_i8) as isize;
_13 = 5561_i16;
RET = _16 as isize;
_16 = _10 as f64;
_11 = [(-1211900195455395556_i64),251759108511100305_i64,2935409683403034272_i64,(-3098688106043268880_i64),1320939853776849361_i64,(-1465197810868860187_i64),1219603115941391201_i64];
Call(_15 = core::intrinsics::bswap(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2.0 = _1;
_5 = !_15;
_5 = _8;
RET = _14 as isize;
_3 = _8;
_5 = 481265190_i32 as isize;
match _13 {
0 => bb1,
5561 => bb5,
_ => bb4
}
}
bb4 = {
RET = _10 as isize;
_16 = RET as f64;
RET = (-113_i8) as isize;
_13 = 5561_i16;
RET = _16 as isize;
_16 = _10 as f64;
_11 = [(-1211900195455395556_i64),251759108511100305_i64,2935409683403034272_i64,(-3098688106043268880_i64),1320939853776849361_i64,(-1465197810868860187_i64),1219603115941391201_i64];
Call(_15 = core::intrinsics::bswap(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET = !_8;
Call(_9 = fn4(_1, _2.0, _8, _2.0, _8, _3, RET, _10, _2, _2.0, _6, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_3 = RET * RET;
_2.0 = _1;
_13 = -14502_i16;
_9 = _6;
_11 = [7126104700415710024_i64,7109486097001511098_i64,5026414151185594497_i64,7587933325285307743_i64,6112972471701434141_i64,3966615205146391359_i64,(-5760133019610062505_i64)];
_5 = RET * _15;
_13 = _10 as i16;
_6 = !_12;
_7 = _9;
_9 = _6;
_5 = _4;
_14 = '\u{d47f2}';
Goto(bb7)
}
bb7 = {
RET = 16622312761871328908_u64 as isize;
_12 = _3 <= _3;
_15 = !_4;
_13 = !448_i16;
_8 = (-1326066178_i32) as isize;
_3 = _5;
_4 = !_8;
_6 = _12;
_2.0 = [(-5157317213705804137_i64),822054215445495096_i64,(-7256053670808629741_i64),4432831050490969038_i64,6170382026705826845_i64,(-7739226169957934187_i64),(-6725647185392355139_i64)];
_9 = _12 < _6;
_16 = 2595355585_u32 as f64;
_7 = _9 ^ _12;
_2 = (_1,);
_17 = !264820043963132515508352042052394846154_u128;
_15 = _5;
_18 = [23082123_u32,3223933423_u32,1843472358_u32,1819757320_u32,3618278899_u32,2544966421_u32,3141781132_u32];
_10 = (-125465594424928015171527987556624154178_i128);
_14 = '\u{ad3cc}';
_4 = _5;
_16 = 8895735352103039183_i64 as f64;
_20 = 3565568498_u32;
_15 = _5 << _17;
_19 = _4 | _3;
match _20 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb9,
3565568498 => bb11,
_ => bb10
}
}
bb8 = {
_5 = _4;
_13 = 13114_u16 as i16;
_11 = _1;
_2 = (_1,);
_2 = (_11,);
_14 = '\u{2d93d}';
_2.0 = [8090640657219180471_i64,(-7843040058807788662_i64),(-2096262820071984918_i64),(-5658968388990690111_i64),4699799866631574971_i64,550976742892158255_i64,7795549671488186612_i64];
_7 = !_6;
_6 = _9;
_3 = _12 as isize;
_8 = _10 as isize;
_6 = !_12;
_5 = RET - _3;
_7 = !_6;
_8 = !_3;
_9 = _12;
_1 = [(-1577526816688317078_i64),(-680505151025673070_i64),742015209734057730_i64,22504727943382317_i64,473957328160957590_i64,1438436257471118319_i64,7631322360725696484_i64];
_15 = 2070375792_u32 as isize;
Goto(bb2)
}
bb9 = {
RET = _10 as isize;
_16 = RET as f64;
RET = (-113_i8) as isize;
_13 = 5561_i16;
RET = _16 as isize;
_16 = _10 as f64;
_11 = [(-1211900195455395556_i64),251759108511100305_i64,2935409683403034272_i64,(-3098688106043268880_i64),1320939853776849361_i64,(-1465197810868860187_i64),1219603115941391201_i64];
Call(_15 = core::intrinsics::bswap(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
RET = _10 as isize;
_16 = RET as f64;
RET = (-113_i8) as isize;
_13 = 5561_i16;
RET = _16 as isize;
_16 = _10 as f64;
_11 = [(-1211900195455395556_i64),251759108511100305_i64,2935409683403034272_i64,(-3098688106043268880_i64),1320939853776849361_i64,(-1465197810868860187_i64),1219603115941391201_i64];
Call(_15 = core::intrinsics::bswap(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_4 = _20 as isize;
_23 = 248_u8 | 9_u8;
_21 = _23 as isize;
_16 = 33063_u16 as f64;
_3 = !_21;
_21 = _3 & _5;
_3 = !_15;
_11 = [(-6849069759239716702_i64),49733671489325163_i64,(-2762323770143477776_i64),(-3438066480206391435_i64),1897477301562839204_i64,(-4962067130170927081_i64),(-7701725329275901086_i64)];
_24 = !_17;
_22 = [_23];
_12 = _7 | _6;
_11 = [(-332507284999117171_i64),(-6578612925753054778_i64),6274085316783121249_i64,7234778352357460524_i64,(-4210574729295978243_i64),(-1790396887890563489_i64),3259243625965895356_i64];
_9 = _7 | _7;
RET = !_21;
_17 = _15 as u128;
_7 = !_12;
_14 = '\u{cc6c0}';
Call(_22 = core::intrinsics::transmute(_9), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_6 = !_9;
_6 = _9;
_16 = _13 as f64;
Goto(bb13)
}
bb13 = {
_13 = 15262_i16 * 8089_i16;
_27 = 2484662450210094418_i64 as usize;
_2 = (_11,);
_29 = _12 as isize;
_13 = 3364_i16;
_17 = _24 * _24;
_15 = _10 as isize;
_14 = '\u{3e2e}';
_24 = _17;
_29 = !RET;
_3 = _29 ^ _29;
_24 = !_17;
_11 = [(-1006468893354491041_i64),(-6580456368125676223_i64),8201086625499804997_i64,(-2607591630017416505_i64),6811184279311517744_i64,954641555950672825_i64,6528502830740597236_i64];
_21 = _23 as isize;
_16 = _20 as f64;
_4 = !_15;
_2 = (_1,);
_13 = (-1637_i16);
_30 = 14187287298010199434_u64 << _21;
RET = -_19;
_18 = [_20,_20,_20,_20,_20,_20,_20];
_6 = !_12;
_24 = _17 * _17;
_5 = RET ^ _3;
_18 = [_20,_20,_20,_20,_20,_20,_20];
_23 = 186_u8 ^ 207_u8;
_18 = [_20,_20,_20,_20,_20,_20,_20];
RET = _27 as isize;
_27 = !4_usize;
match _13 {
340282366920938463463374607431768209819 => bb14,
_ => bb10
}
}
bb14 = {
_4 = _15 * _3;
_5 = !_4;
_23 = 199_u8;
_14 = '\u{5378}';
_3 = _13 as isize;
_21 = !_5;
_1 = _2.0;
_1 = _11;
_2.0 = [4321875081266200396_i64,4186094409589730833_i64,6060033446743166135_i64,4381577734941944893_i64,(-7494522152530022196_i64),1756926648430905659_i64,(-1329419243835740269_i64)];
RET = _21 + _21;
_20 = 679662570_u32 | 868951233_u32;
_14 = '\u{c2931}';
_9 = _12;
_34 = _12 as isize;
_20 = !630360417_u32;
_16 = _27 as f64;
_6 = _12;
_29 = !_34;
_18 = [_20,_20,_20,_20,_20,_20,_20];
_36 = [_10,_10,_10,_10,_10];
_16 = _23 as f64;
_5 = _34;
_10 = 102077167617892580612336002095427664699_i128 & (-136861356773716520900535555390306536610_i128);
_10 = 37013158094633964620633235775483324640_i128 ^ (-153359355090957911033868769095644538901_i128);
_34 = !RET;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(3_usize, 23_usize, Move(_23), 34_usize, Move(_34), 10_usize, Move(_10), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(3_usize, 18_usize, Move(_18), 21_usize, Move(_21), 5_usize, Move(_5), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(3_usize, 2_usize, Move(_2), 4_usize, Move(_4), 11_usize, Move(_11), 30_usize, Move(_30)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(3_usize, 6_usize, Move(_6), 13_usize, Move(_13), 40_usize, _40, 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [i64; 7],mut _2: [i64; 7],mut _3: isize,mut _4: [i64; 7],mut _5: isize,mut _6: isize,mut _7: isize,mut _8: i128,mut _9: ([i64; 7],),mut _10: [i64; 7],mut _11: bool,mut _12: ([i64; 7],)) -> bool {
mir! {
type RET = bool;
let _13: [i128; 5];
let _14: (i128, (([i64; 7],), u128, i16));
let _15: &'static usize;
let _16: f64;
let _17: ([i128; 5], [u32; 7], f32);
let _18: char;
let _19: ();
let _20: ();
{
_2 = [(-8570784858186228571_i64),1102296640686812011_i64,(-6683579818036905477_i64),7575168526219751099_i64,(-5737655240786061548_i64),(-3556305094805318521_i64),(-2080220498778419291_i64)];
_12.0 = [(-2891079961271431315_i64),(-7400432283263793355_i64),4637704446157907852_i64,7401295522848172664_i64,(-6787864806884127602_i64),1745760488793295801_i64,(-6027627838126622933_i64)];
_12 = (_10,);
_13 = [_8,_8,_8,_8,_8];
_11 = !true;
_14.0 = -_8;
RET = !_11;
_14.1 = (_12, 271831747901603993338071088709491316212_u128, (-12190_i16));
Call(_10 = fn5(_14.1.1, _9, _14.1.2, _14.1, _3, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12.0 = [(-1724156999199847488_i64),(-2221304794371773081_i64),6326394617229719536_i64,2266359769521480167_i64,7071982720783493001_i64,8404188202980767802_i64,5797541015920999437_i64];
_9.0 = _12.0;
_1 = [(-2603223752712666411_i64),2072772146208309395_i64,8938218120590145257_i64,8944049245718761504_i64,(-6313726630358728633_i64),9025480556666094551_i64,5857172086596018178_i64];
_4 = [(-8744316982653480820_i64),8179170863471560956_i64,8451446687379083302_i64,2403082092570658375_i64,(-5637574799353605225_i64),7070315544063700007_i64,5571773999494024705_i64];
RET = _14.1.2 > _14.1.2;
_16 = (-493959768_i32) as f64;
_9 = (_12.0,);
_6 = _5 << _14.1.2;
_14.1.0.0 = _1;
_14.1 = (_9, 39924617957811022718017390981713126658_u128, (-8845_i16));
_17.2 = 6_usize as f32;
_7 = _6 * _3;
_5 = _7;
_8 = !_14.0;
_2 = [(-2784169100646125737_i64),(-6499334488347136494_i64),6043309603540092324_i64,3846748569534721148_i64,5907185481183705099_i64,(-2630228217152699605_i64),(-3128614827267070775_i64)];
_17.1 = [3528766135_u32,3277210374_u32,415885422_u32,339118623_u32,3220902847_u32,2299747627_u32,4202899638_u32];
_4 = [7106505564550402910_i64,8255871842822563836_i64,(-7959590936710251939_i64),8436782607725114363_i64,(-3124099923830222417_i64),(-1039595928662961408_i64),5387911380180365560_i64];
_10 = [4909385830811655324_i64,(-6299481179915032135_i64),(-8578058376785324481_i64),(-8150242166658172184_i64),5300682498366118040_i64,6083234989928425416_i64,(-393610056392029880_i64)];
_12 = (_10,);
_12 = (_10,);
_9.0 = [(-151760315488301751_i64),(-6941965540267293509_i64),8642468072534855020_i64,(-6590223540891795299_i64),(-6118618778795484874_i64),(-2159905112046489574_i64),7121827609917352340_i64];
Goto(bb2)
}
bb2 = {
Call(_19 = dump_var(4_usize, 2_usize, Move(_2), 9_usize, Move(_9), 11_usize, Move(_11), 12_usize, Move(_12)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_19 = dump_var(4_usize, 6_usize, Move(_6), 8_usize, Move(_8), 13_usize, Move(_13), 20_usize, _20), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u128,mut _2: ([i64; 7],),mut _3: i16,mut _4: (([i64; 7],), u128, i16),mut _5: isize,mut _6: isize) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _7: i128;
let _8: [u8; 1];
let _9: isize;
let _10: i8;
let _11: Adt44;
let _12: isize;
let _13: isize;
let _14: ([i128; 5], [u32; 7], f32);
let _15: [u16; 3];
let _16: Adt52;
let _17: i32;
let _18: char;
let _19: (i128, (([i64; 7],), u128, i16));
let _20: [i64; 7];
let _21: isize;
let _22: i64;
let _23: ([i128; 5], [u32; 7], f32);
let _24: (([i64; 7],), u128, i16);
let _25: (i128, (([i64; 7],), u128, i16));
let _26: bool;
let _27: [u8; 1];
let _28: (i128, (([i64; 7],), u128, i16));
let _29: char;
let _30: (u128, i8, i8);
let _31: [i64; 7];
let _32: isize;
let _33: *mut bool;
let _34: bool;
let _35: ([i128; 5], [u32; 7], f32);
let _36: f32;
let _37: i128;
let _38: (i128, (([i64; 7],), u128, i16));
let _39: char;
let _40: usize;
let _41: u16;
let _42: u64;
let _43: i16;
let _44: f32;
let _45: (u32, [i128; 5]);
let _46: *mut i8;
let _47: isize;
let _48: usize;
let _49: [u32; 7];
let _50: [i128; 5];
let _51: Adt53;
let _52: u8;
let _53: i16;
let _54: (i8,);
let _55: f32;
let _56: isize;
let _57: char;
let _58: char;
let _59: ();
let _60: ();
{
_5 = -_6;
_4.1 = _1;
_3 = _4.2 + _4.2;
_7 = true as i128;
_4.2 = _3 + _3;
_2 = (_4.0.0,);
_3 = _4.2 - _4.2;
RET = [(-9209028513288862893_i64),(-503251547086377980_i64),7261344741506724082_i64,(-1356489266117005412_i64),5223125242072559564_i64,(-3899813476015857594_i64),5383148689728111020_i64];
_3 = !_4.2;
RET = [3886002673049453642_i64,(-266472070141479778_i64),(-8533614270826495227_i64),(-5257905721880577346_i64),8728942262234172783_i64,3780310334475140974_i64,957072557938634287_i64];
_4.0.0 = _2.0;
_5 = _6;
_2.0 = [7289858930626924_i64,7041573271690493777_i64,(-3965544020442572421_i64),(-7975741631124454016_i64),2025026778129691323_i64,1284185965375886264_i64,(-2029258249968093655_i64)];
_2.0 = [(-8577778603437419998_i64),(-612935116383113405_i64),(-6916473764866274765_i64),(-65058975763172194_i64),5415969619469419653_i64,6925240372364152981_i64,(-8275918240784285173_i64)];
RET = _2.0;
_6 = _5;
_6 = _5;
_6 = -_5;
_8 = [150_u8];
_4.2 = _3;
RET = [(-5553796602449209210_i64),9184638954036899766_i64,1356278813086881821_i64,396812357559394292_i64,2044638146536671848_i64,(-7602843037702658718_i64),(-1174355856551034667_i64)];
_9 = _5;
_9 = -_6;
_9 = 146926014_i32 as isize;
_7 = (-20628419447469369601838129151591954768_i128);
_7 = -(-96768403828901959275060073441218594502_i128);
_2.0 = [3153029943164616977_i64,(-7733866637911377088_i64),(-615056735288991271_i64),8631445318158091895_i64,(-1837908441882498941_i64),(-1141399865782395072_i64),7110930455906014730_i64];
Goto(bb1)
}
bb1 = {
_4.0.0 = _2.0;
_8 = [38_u8];
_2 = _4.0;
_4.0 = (_2.0,);
_4.0.0 = [7171740328123728428_i64,3592107731541810326_i64,(-2229811110679670458_i64),(-3866701024689715082_i64),(-9048321442564421628_i64),2606985808522181310_i64,2334601111338351787_i64];
_4.1 = 1546290150_u32 as u128;
_4 = (_2, _1, _3);
RET = [3557538479536184910_i64,(-3002926524868811317_i64),8911021017651861108_i64,6582232384458309484_i64,8783878599659037616_i64,8647043010461355456_i64,(-3308269642685363574_i64)];
_10 = '\u{ad6c2}' as i8;
Call(_12 = core::intrinsics::bswap(_6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = [77_u8];
_4.0 = _2;
_2.0 = [6012623558670138572_i64,(-151092847155251452_i64),216413387068719062_i64,(-9125491851461786218_i64),8273643530910710645_i64,(-2549444971453914666_i64),(-241370506593930888_i64)];
_2.0 = [200438562155098594_i64,9106451641299579769_i64,6778090028207693121_i64,3992813528562106819_i64,(-4834763342066124999_i64),(-8976973567518802118_i64),5943084529364806049_i64];
RET = _4.0.0;
_9 = -_5;
_4.0.0 = RET;
_4.1 = _1 % _1;
_8 = [175_u8];
_14.1 = [1848806435_u32,755113590_u32,963581323_u32,3413745735_u32,2330775356_u32,2962595196_u32,3992376647_u32];
_2 = _4.0;
_14.1 = [3517183652_u32,517557027_u32,3605924459_u32,2241926684_u32,4060647865_u32,901856880_u32,898599969_u32];
_12 = _5 & _5;
_6 = !_12;
_5 = _1 as isize;
Call(_9 = fn6(_6, _1, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_19.1.0.0 = [(-5523148593302694425_i64),(-5244928116110688689_i64),6442012372607839278_i64,(-7468084254223746990_i64),(-7665362038012308555_i64),(-1398656236685894011_i64),(-6381289799275007839_i64)];
Goto(bb4)
}
bb4 = {
_4.2 = _3;
_19.1.1 = _4.1 / _1;
_4.0.0 = [(-117207332532391303_i64),7282912424858910914_i64,(-7090564863396675967_i64),(-3114501661245318224_i64),(-7996058970559695150_i64),(-2078919001030512983_i64),7245578911460906414_i64];
_13 = -_9;
_12 = _13;
_14.0 = [_7,_7,_7,_7,_7];
_6 = _4.2 as isize;
_17 = (-1820658730_i32) >> _6;
_14.0 = [_7,_7,_7,_7,_7];
_23.1 = [3785698022_u32,394633858_u32,1867700168_u32,4186844401_u32,2427291515_u32,4094740734_u32,3886942735_u32];
_14.0 = [_7,_7,_7,_7,_7];
_23.0 = [_7,_7,_7,_7,_7];
_19.1 = (_4.0, _4.1, _4.2);
_1 = 53713_u16 as u128;
_24.2 = -_19.1.2;
_25.1.0.0 = [(-8087974194178128019_i64),1387947906976081284_i64,1051490831912418678_i64,(-673890880835366727_i64),(-673109321256648963_i64),(-5415727982381201853_i64),6262147790994339791_i64];
_22 = true as i64;
_2 = _19.1.0;
_24.0 = _2;
Goto(bb5)
}
bb5 = {
_4.0.0 = _19.1.0.0;
_19.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_19.0 = _7 + _7;
_4.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_24 = (_2, _4.1, _19.1.2);
_24.2 = !_4.2;
_21 = 3956505903_u32 as isize;
_27 = _8;
_23.1 = _14.1;
_24 = (_25.1.0, _4.1, _3);
_12 = -_6;
RET = [_22,_22,_22,_22,_22,_22,_22];
_25.0 = -_19.0;
_26 = true;
_25 = (_19.0, _19.1);
_28 = (_19.0, _4);
_18 = '\u{4c014}';
_28 = _19;
_19.0 = !_25.0;
_2.0 = [_22,_22,_22,_22,_22,_22,_22];
RET = _4.0.0;
_19.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_14.0 = [_25.0,_7,_28.0,_25.0,_7];
_28 = _19;
_19.1.1 = _4.1;
_20 = _2.0;
_21 = !_6;
_28.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
Goto(bb6)
}
bb6 = {
_15 = [47298_u16,38338_u16,53918_u16];
_23.1 = [3217463257_u32,2800070600_u32,2207362922_u32,3138674026_u32,1291785803_u32,1178881145_u32,2894636042_u32];
Call(_25.1.0.0 = fn7(_4, _19, _19.1.1, _6, _25.1.1, _19.1.1, _13, _9), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_14.1 = [2423778470_u32,2335065283_u32,272489546_u32,2079789726_u32,3781828310_u32,2609866602_u32,186067005_u32];
_30 = (_24.1, _10, _10);
_28.1.0 = _25.1.0;
_22 = 7863295544058934438_i64 - (-9113935209613422728_i64);
RET = [_22,_22,_22,_22,_22,_22,_22];
_14.2 = _17 as f32;
_28.1 = (_24.0, _25.1.1, _25.1.2);
Goto(bb8)
}
bb8 = {
_28.1.0.0 = _24.0.0;
_25.1.1 = _4.1 ^ _4.1;
_7 = _28.0 * _28.0;
_13 = -_12;
_28.1.2 = 11442635114784746712_u64 as i16;
_25.1.1 = !_28.1.1;
_33 = core::ptr::addr_of_mut!(_26);
_24.2 = -_25.1.2;
_14.1 = [3524253479_u32,3440909632_u32,708178584_u32,512767741_u32,3238971092_u32,662616037_u32,1617391461_u32];
_3 = _10 as i16;
Goto(bb9)
}
bb9 = {
_30.0 = !_19.1.1;
_28.1.2 = !_24.2;
_20 = [_22,_22,_22,_22,_22,_22,_22];
_30.0 = !_19.1.1;
_25.1.1 = _22 as u128;
_23.2 = _14.2;
_4.0 = _28.1.0;
_1 = _24.1;
_23 = (_14.0, _14.1, _14.2);
_28.1.0 = (_25.1.0.0,);
_31 = [_22,_22,_22,_22,_22,_22,_22];
_23 = (_14.0, _14.1, _14.2);
_1 = _28.1.1 * _4.1;
_4.1 = _28.1.1 * _30.0;
_1 = _17 as u128;
_21 = _12;
_24 = (_28.1.0, _30.0, _28.1.2);
_26 = true;
_28.1.2 = (*_33) as i16;
_3 = _4.2;
_19.1.2 = _4.2 ^ _24.2;
_31 = [_22,_22,_22,_22,_22,_22,_22];
Goto(bb10)
}
bb10 = {
_35 = (_23.0, _14.1, _23.2);
_21 = _12 - _12;
_24.1 = _1 | _1;
_28.1.2 = _19.1.2;
_23.0 = _14.0;
_19.1.2 = _24.2;
_28.1.1 = !_1;
_3 = _35.2 as i16;
_35.0 = [_25.0,_7,_7,_19.0,_7];
_38 = (_25.0, _19.1);
_25.0 = 11794152020508834456_u64 as i128;
_4.1 = !_38.1.1;
_38.1 = (_28.1.0, _24.1, _25.1.2);
_4.0 = _25.1.0;
_23.2 = _35.2 * _35.2;
_4.1 = _24.1;
_28.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_28.1 = (_24.0, _4.1, _19.1.2);
_23.0 = [_7,_7,_19.0,_28.0,_28.0];
_25.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_19.1.1 = _6 as u128;
_30.0 = 2_usize as u128;
_39 = _18;
Call(_25.0 = core::intrinsics::transmute(_28.1.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_25.1.2 = _19.1.2;
_23 = _14;
_28.1.0 = (_24.0.0,);
_33 = core::ptr::addr_of_mut!(_26);
_25.1.0 = _4.0;
_38.1 = (_24.0, _28.1.1, _19.1.2);
_27 = [146_u8];
_45.0 = !2715342474_u32;
_19.1.2 = _25.1.2;
_45.0 = 45_u8 as u32;
_26 = false;
Goto(bb12)
}
bb12 = {
_28.1.2 = !_19.1.2;
_39 = _18;
_23.0 = [_25.0,_25.0,_25.0,_25.0,_25.0];
_42 = _17 as u64;
_44 = _14.2;
_23.0 = [_25.0,_25.0,_25.0,_25.0,_19.0];
_38.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_47 = _21;
_24 = (_19.1.0, _38.1.1, _3);
_38.1.1 = !_24.1;
_45.1 = [_25.0,_25.0,_25.0,_25.0,_25.0];
_41 = 61344_u16 | 35729_u16;
_21 = !_47;
_1 = _38.1.1 ^ _4.1;
Goto(bb13)
}
bb13 = {
_37 = _25.0;
_25.1.0 = _24.0;
_25.0 = _30.1 as i128;
_38.1.0 = _28.1.0;
_1 = _28.1.1 & _28.1.1;
_12 = _47 >> _24.1;
_19.1.0 = (_28.1.0.0,);
_19.1.0.0 = _38.1.0.0;
_25.1.2 = _28.1.2;
_23 = (_45.1, _14.1, _14.2);
_25.1 = (_38.1.0, _28.1.1, _38.1.2);
_24.2 = _4.2 + _25.1.2;
_36 = _4.1 as f32;
_42 = 36_u8 as u64;
_30 = (_24.1, _10, _10);
Goto(bb14)
}
bb14 = {
_14.0 = _45.1;
_38.1.0 = _28.1.0;
_7 = _28.0 * _37;
_19.1.0 = (_24.0.0,);
_4.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_53 = -_28.1.2;
_38.1.2 = _24.2;
_38 = (_37, _25.1);
_28.1.0 = _2;
_19.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_34 = _28.1.1 != _19.1.1;
_30 = (_24.1, _10, _10);
_25.1.2 = _36 as i16;
_49 = [_45.0,_45.0,_45.0,_45.0,_45.0,_45.0,_45.0];
_27 = _8;
_24.0 = (_28.1.0.0,);
_26 = _36 < _35.2;
_45 = (4101071224_u32, _23.0);
RET = _25.1.0.0;
_52 = _34 as u8;
_4.1 = !_1;
_31 = [_22,_22,_22,_22,_22,_22,_22];
_46 = core::ptr::addr_of_mut!(_30.1);
_19.1.0.0 = [_22,_22,_22,_22,_22,_22,_22];
_51.fld1 = (*_46) as i16;
_25.1.2 = _4.2 | _24.2;
Goto(bb15)
}
bb15 = {
Call(_59 = dump_var(5_usize, 8_usize, Move(_8), 6_usize, Move(_6), 18_usize, Move(_18), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_59 = dump_var(5_usize, 52_usize, Move(_52), 19_usize, Move(_19), 38_usize, Move(_38), 53_usize, Move(_53)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_59 = dump_var(5_usize, 37_usize, Move(_37), 45_usize, Move(_45), 30_usize, Move(_30), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_59 = dump_var(5_usize, 31_usize, Move(_31), 9_usize, Move(_9), 49_usize, Move(_49), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_59 = dump_var(5_usize, 41_usize, Move(_41), 17_usize, Move(_17), 60_usize, _60, 60_usize, _60), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: u128,mut _3: i16) -> isize {
mir! {
type RET = isize;
let _4: [i128; 5];
let _5: ();
let _6: ();
{
RET = _1 ^ _1;
_1 = RET;
_3 = !11866_i16;
Goto(bb1)
}
bb1 = {
Call(_5 = dump_var(6_usize, 1_usize, Move(_1), 6_usize, _6, 6_usize, _6, 6_usize, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: (([i64; 7],), u128, i16),mut _2: (i128, (([i64; 7],), u128, i16)),mut _3: u128,mut _4: isize,mut _5: u128,mut _6: u128,mut _7: isize,mut _8: isize) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _9: f32;
let _10: i16;
let _11: f64;
let _12: isize;
let _13: isize;
let _14: (([i64; 7],), u128, i16);
let _15: (i8, (u128, i8, i8));
let _16: i16;
let _17: Adt51;
let _18: Adt45;
let _19: [u16; 3];
let _20: isize;
let _21: (i128, (([i64; 7],), u128, i16));
let _22: f64;
let _23: (i8, (u128, i8, i8));
let _24: [u8; 1];
let _25: (i8, (u128, i8, i8));
let _26: [char; 1];
let _27: [i64; 7];
let _28: f64;
let _29: char;
let _30: [char; 1];
let _31: bool;
let _32: (i128, (([i64; 7],), u128, i16));
let _33: [u32; 7];
let _34: [u32; 1];
let _35: char;
let _36: u64;
let _37: (([i64; 7],), u128, i16);
let _38: [u32; 7];
let _39: bool;
let _40: Adt53;
let _41: isize;
let _42: char;
let _43: [i128; 5];
let _44: [u16; 3];
let _45: [i128; 5];
let _46: isize;
let _47: u32;
let _48: f64;
let _49: isize;
let _50: u64;
let _51: (([i64; 7],), u128, i16);
let _52: [char; 1];
let _53: [i64; 7];
let _54: bool;
let _55: isize;
let _56: bool;
let _57: ();
let _58: ();
{
_2.1.1 = _6;
_6 = (-99_i8) as u128;
_2.1.1 = 2053379802_i32 as u128;
RET = [767240998741962023_i64,(-2025483110623307467_i64),2846778426510265957_i64,(-305371630727119289_i64),(-3337036273584701754_i64),7710571627854546596_i64,(-8447045362807469593_i64)];
_12 = !_4;
_3 = _1.1;
_11 = (-5903493148034828387_i64) as f64;
_14 = (_1.0, _1.1, _2.1.2);
_2.0 = 87427752050868638035665755522106007852_i128 << _14.1;
_15.1.0 = _1.1 << _5;
_15.1.2 = true as i8;
_12 = _15.1.2 as isize;
_2.1 = (_1.0, _14.1, _14.2);
_2.1.0.0 = RET;
_1.1 = _11 as u128;
Call(_15.1 = fn8(_8, _4, RET, _14.2, _1.2, _2.1, _14.1, _14.2, _2.1.2, _8, _1, _4, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_15.1.1 = !_15.1.2;
_16 = -_2.1.2;
_15.1.2 = -_15.1.1;
_8 = 3_usize as isize;
RET = _1.0.0;
_14.2 = _2.1.2 | _1.2;
Call(_2.1.0 = fn9(_14.2, _4, _1.2, _14, _3, _2.1.2, _1, _14, _2.1.1, _15.1.0, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = 51071_u16 as f32;
_14.2 = _1.2;
_13 = _4;
_2.1.0.0 = [85804721049354265_i64,(-784876046468974213_i64),(-4795898406578172293_i64),(-4635638076479703822_i64),(-888504938619471033_i64),(-9189862218123706539_i64),231339969629714069_i64];
_2.1.1 = _4 as u128;
_3 = !_5;
_2.0 = -47118332036769537850889243973888145564_i128;
_6 = !_14.1;
_1 = _14;
_15.0 = 48288_u16 as i8;
RET = _14.0.0;
_1 = (_2.1.0, _2.1.1, _14.2);
Goto(bb3)
}
bb3 = {
_21 = (_2.0, _1);
_21.1.0 = (_2.1.0.0,);
_17.fld3 = [(-1640244914431648917_i64),(-4029733378937851270_i64),(-6674023471527779933_i64),2858821941200045820_i64,1621938090737749884_i64,4554494346981155916_i64,3307335780209855073_i64];
_17.fld3 = [6614346043597009912_i64,(-8248113428086525412_i64),(-2521448044450829453_i64),(-5305977914410663758_i64),(-66335083666705083_i64),4865205315682920976_i64,7487718098158512954_i64];
_17.fld0 = false;
_17.fld2.0 = _9 as i8;
_2 = (_21.0, _1);
_22 = _11;
_2.0 = _21.0 - _21.0;
_9 = _21.0 as f32;
_2 = _21;
_5 = !_2.1.1;
_10 = 59567_u16 as i16;
_21.1.2 = _2.1.1 as i16;
_12 = 8509264872022348948_u64 as isize;
_10 = _1.1 as i16;
_14.0 = (_17.fld3,);
_7 = 17695512057459156026_usize as isize;
Call(_5 = core::intrinsics::transmute(_14.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_17.fld1 = ['\u{4ea5c}'];
_15.0 = _15.1.1 * _15.1.1;
_2.1.2 = -_21.1.2;
_13 = _4;
_23.1.2 = _15.1.1 * _15.1.1;
_1.0 = (_2.1.0.0,);
_25.0 = -_23.1.2;
_5 = 2053710269_u32 as u128;
_21.1.1 = _15.1.0;
RET = [(-9089607940581058435_i64),1985996910726480952_i64,4915517691632173688_i64,(-4796991922901411696_i64),(-299619432153289343_i64),4857143123532092494_i64,2846810648583602670_i64];
_2.1.1 = _1.1;
_15.1 = (_21.1.1, _15.0, _23.1.2);
_20 = _4 | _4;
_23.1.0 = _1.1;
_21 = _2;
_2.1.1 = _22 as u128;
_25.1 = (_21.1.1, _25.0, _23.1.2);
Call(_22 = core::intrinsics::fmaf64(_11, _11, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET = _2.1.0.0;
_29 = '\u{da0c4}';
_30 = [_29];
_21.1.0 = _14.0;
_2.1.2 = !_16;
_12 = _4 + _4;
_17.fld2.0 = _22 as i8;
_22 = _11 * _11;
_7 = !_4;
_25.1.2 = 0_usize as i8;
_21.1 = (_1.0, _1.1, _16);
_15 = (_25.1.1, _25.1);
_21.1.2 = _1.2;
_30 = [_29];
_15.0 = !_25.0;
_6 = _25.1.0;
_14.0.0 = [(-2829288904696048145_i64),4291391016772022106_i64,(-8324316697904225771_i64),(-7609145545956443291_i64),1133594009851806434_i64,8259196016119573629_i64,6275090579679032914_i64];
_19 = [58833_u16,9625_u16,5765_u16];
_17.fld3 = [(-4051956530512596252_i64),8967657799490679164_i64,(-6007156645249538336_i64),4762884822748291420_i64,3397906895132973544_i64,(-2431044246543715301_i64),(-6749029481971782797_i64)];
_4 = !_7;
_23.1 = _15.1;
_25.0 = _15.1.1 << _1.2;
_32.1.0.0 = [(-1990941522796264871_i64),(-2170538314357075846_i64),(-8235544163985087951_i64),1784669731167366832_i64,5180050154209027609_i64,9177568462134346051_i64,(-6080577281019970534_i64)];
Goto(bb6)
}
bb6 = {
_21.1.2 = -_10;
_26 = [_29];
_17.fld0 = true;
_32.1.2 = _1.2;
_34 = [1874719264_u32];
_25.1.2 = _25.0;
_23.1.2 = _25.0;
_17.fld3 = [(-896637951117786962_i64),(-2505617579880241333_i64),2079413132752992394_i64,5296416442321221769_i64,(-6599774594019627083_i64),7180489249038767138_i64,(-5988513401523265216_i64)];
_23.0 = _23.1.2 >> _32.1.2;
_14 = _2.1;
_2.0 = !_21.0;
_31 = !_17.fld0;
_25.1.1 = -_25.1.2;
_23.1.0 = _21.1.1;
_24 = [246_u8];
Call(_37.0 = fn13(_2.1.0, _20, _23.1.2, _13, _25.1.2, _25.1.1, _12, _4, _20, _23.1.1, _23.0, _23.1, _21, _15.0, _2.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_16 = _2.1.2;
_34 = [1080894118_u32];
_32.1.1 = !_23.1.0;
_15 = (_23.0, _25.1);
_19 = [6966_u16,56992_u16,5183_u16];
_9 = 109_u8 as f32;
_32.1.1 = _15.1.0;
_17.fld1 = [_29];
_29 = '\u{6ffbf}';
_2.1.0.0 = _14.0.0;
_1 = (_14.0, _25.1.0, _21.1.2);
_2.0 = !_21.0;
_32.1.0 = (_17.fld3,);
_11 = _22;
_32.1.1 = _6 ^ _3;
_36 = !7250579669323926362_u64;
_37.0.0 = [(-3880108827040113200_i64),(-5660209494802415983_i64),7269016490034603603_i64,(-6377613342164493447_i64),6911172579053406336_i64,(-4147795124785486586_i64),4308330499295273065_i64];
_32 = (_2.0, _14);
_2.1.0.0 = [(-5261390889271925482_i64),(-907818086829915532_i64),7912169604755868713_i64,4697661583677867130_i64,(-4415711909080545007_i64),4856541526528079656_i64,9103621665924566542_i64];
_37.2 = -_10;
_15.0 = _25.0 << _21.1.2;
_25.1.0 = _36 as u128;
_15 = _25;
Goto(bb8)
}
bb8 = {
_3 = _1.1;
_17.fld3 = [3019046333576673977_i64,5967025863256633476_i64,6242484720180741510_i64,1544250370772812975_i64,8240146496973618642_i64,(-7785281777750369764_i64),4560141960325396191_i64];
_17.fld2.0 = !_23.1.2;
_37 = (_32.1.0, _5, _2.1.2);
_25.1.0 = !_21.1.1;
_35 = _29;
_23.1 = _15.1;
_32.1 = _1;
_32.1.1 = _1.1 >> _20;
_32.1.0.0 = [4694259253568955713_i64,(-7565489483823038306_i64),6312729540578078289_i64,(-7789126274203824993_i64),(-2925462642565941673_i64),(-8622870084831669017_i64),(-1438824298292272858_i64)];
RET = _1.0.0;
_38 = [289693230_u32,1096477065_u32,1346060225_u32,2064933868_u32,2547852803_u32,1506811814_u32,205309524_u32];
_2.1.2 = _11 as i16;
_14.1 = _9 as u128;
_1.0.0 = [(-8708563736616465362_i64),(-6453615517714311625_i64),29461196108169456_i64,7523244450386123434_i64,(-6915523195453915562_i64),(-9156464751627776037_i64),(-8672972789065626800_i64)];
Goto(bb9)
}
bb9 = {
_33 = [844009243_u32,2555152318_u32,472734996_u32,3829846840_u32,3993605063_u32,3236707814_u32,719314260_u32];
_25.1 = _15.1;
_43 = [_32.0,_32.0,_2.0,_21.0,_2.0];
_37.2 = _14.2;
_32.1.1 = !_1.1;
_4 = !_20;
_2.0 = _21.0;
_41 = _21.1.1 as isize;
_36 = !610746931748851605_u64;
_1.0 = (_17.fld3,);
_2.1.0 = (_14.0.0,);
_32 = (_21.0, _1);
_43 = [_21.0,_32.0,_32.0,_2.0,_32.0];
_21.1.0.0 = RET;
Goto(bb10)
}
bb10 = {
_21.0 = !_32.0;
RET = _32.1.0.0;
_40.fld1 = _1.1 as i16;
_17.fld2.0 = _15.1.1 >> _23.0;
_21.1 = (_2.1.0, _3, _37.2);
_49 = _4;
_1 = (_21.1.0, _6, _10);
_15.0 = _15.1.2;
_25.1.1 = _23.0 | _25.0;
Goto(bb11)
}
bb11 = {
_15.1.0 = _3 | _6;
_1.2 = _10 | _40.fld1;
_17.fld1 = [_35];
_2.1 = (_1.0, _32.1.1, _40.fld1);
_11 = _22;
_49 = _4;
_16 = _36 as i16;
_27 = _32.1.0.0;
_48 = -_22;
_29 = _35;
_14.0.0 = RET;
_2.1.0.0 = _1.0.0;
_21.1.1 = _17.fld2.0 as u128;
_47 = 1581957332_u32;
match _47 {
1581957332 => bb13,
_ => bb12
}
}
bb12 = {
_21 = (_2.0, _1);
_21.1.0 = (_2.1.0.0,);
_17.fld3 = [(-1640244914431648917_i64),(-4029733378937851270_i64),(-6674023471527779933_i64),2858821941200045820_i64,1621938090737749884_i64,4554494346981155916_i64,3307335780209855073_i64];
_17.fld3 = [6614346043597009912_i64,(-8248113428086525412_i64),(-2521448044450829453_i64),(-5305977914410663758_i64),(-66335083666705083_i64),4865205315682920976_i64,7487718098158512954_i64];
_17.fld0 = false;
_17.fld2.0 = _9 as i8;
_2 = (_21.0, _1);
_22 = _11;
_2.0 = _21.0 - _21.0;
_9 = _21.0 as f32;
_2 = _21;
_5 = !_2.1.1;
_10 = 59567_u16 as i16;
_21.1.2 = _2.1.1 as i16;
_12 = 8509264872022348948_u64 as isize;
_10 = _1.1 as i16;
_14.0 = (_17.fld3,);
_7 = 17695512057459156026_usize as isize;
Call(_5 = core::intrinsics::transmute(_14.1), ReturnTo(bb4), UnwindUnreachable())
}
bb13 = {
_2.1.2 = 1748539633_i32 as i16;
_21.0 = _2.0 * _2.0;
_14.0.0 = [5065426549747706933_i64,(-4451117427407790561_i64),7917100033087656800_i64,921933213750955339_i64,(-2458309628740366115_i64),6528174953945158495_i64,(-5928120207318781030_i64)];
_17.fld0 = _21.1.1 < _2.1.1;
_27 = [2594771958471643990_i64,2539753233318381279_i64,(-7008226374018936093_i64),2973222737702111931_i64,(-6607041592159369974_i64),(-3171688780849379437_i64),(-4696022128617314219_i64)];
_2 = _21;
_17.fld4 = Adt46::Variant2 { fld0: _25,fld1: _19,fld2: _21.1.0,fld3: _23.1.2,fld4: _1.2 };
SetDiscriminant(_17.fld4, 0);
_1.0.0 = [(-2084398319125446702_i64),7844731794531126714_i64,4594578089801668873_i64,(-438886237042359609_i64),7322575716816904740_i64,(-3221001245936386314_i64),(-4040529230005790348_i64)];
_46 = _12 | _20;
_49 = _46;
place!(Field::<(([i64; 7],), u128, i16)>(Variant(_17.fld4, 0), 5)) = _32.1;
_9 = 79_u8 as f32;
_20 = _4 ^ _4;
_32.1.0 = (_27,);
place!(Field::<(([i64; 7],), u128, i16)>(Variant(_17.fld4, 0), 5)).0.0 = [1911699163018548975_i64,(-3516018540126201844_i64),(-1644746512555553576_i64),(-5126102343829692981_i64),(-7777090214832236638_i64),5782048380631451258_i64,285488373756306748_i64];
_11 = _22;
_24 = [254_u8];
Goto(bb14)
}
bb14 = {
_23.1.2 = _15.1.1;
_32.0 = !_2.0;
place!(Field::<*const u32>(Variant(_17.fld4, 0), 4)) = core::ptr::addr_of!(_47);
_25.1.2 = !_23.1.2;
_48 = _11;
_37.2 = _1.2 >> _25.0;
_32.1 = (Field::<(([i64; 7],), u128, i16)>(Variant(_17.fld4, 0), 5).0, _2.1.1, _2.1.2);
_37.0.0 = [(-691428476822543626_i64),(-1285031811408786363_i64),2723741598359989959_i64,3615043979843050004_i64,3694627695821501275_i64,(-2157869389620273593_i64),(-8256163250478972042_i64)];
_1.0 = (_2.1.0.0,);
_32.1.0.0 = [6130214577797128655_i64,4125274846516477194_i64,3192557679672884003_i64,(-7923619979155504358_i64),(-395271275702160622_i64),1425303021804376881_i64,7380070449859346472_i64];
RET = Field::<(([i64; 7],), u128, i16)>(Variant(_17.fld4, 0), 5).0.0;
place!(Field::<(([i64; 7],), u128, i16)>(Variant(_17.fld4, 0), 5)).2 = _40.fld1 ^ _37.2;
place!(Field::<(i128,)>(Variant(_17.fld4, 0), 1)) = (_21.0,);
_32.1.0.0 = RET;
_17.fld2.0 = !_25.1.1;
_45 = [_32.0,_2.0,Field::<(i128,)>(Variant(_17.fld4, 0), 1).0,Field::<(i128,)>(Variant(_17.fld4, 0), 1).0,_21.0];
_7 = _49 - _46;
_38 = [_47,_47,_47,_47,_47,_47,_47];
_29 = _35;
RET = _14.0.0;
_1.1 = 32_u8 as u128;
_25.0 = -_15.1.2;
_42 = _29;
_51.2 = !_10;
_37.0 = _2.1.0;
_23.0 = _15.0 ^ _25.1.1;
_15.0 = !_25.0;
Goto(bb15)
}
bb15 = {
Call(_57 = dump_var(7_usize, 15_usize, Move(_15), 3_usize, Move(_3), 10_usize, Move(_10), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_57 = dump_var(7_usize, 29_usize, Move(_29), 5_usize, Move(_5), 1_usize, Move(_1), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_57 = dump_var(7_usize, 36_usize, Move(_36), 21_usize, Move(_21), 46_usize, Move(_46), 45_usize, Move(_45)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_57 = dump_var(7_usize, 47_usize, Move(_47), 42_usize, Move(_42), 8_usize, Move(_8), 27_usize, Move(_27)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_57 = dump_var(7_usize, 33_usize, Move(_33), 19_usize, Move(_19), 20_usize, Move(_20), 58_usize, _58), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: isize,mut _3: [i64; 7],mut _4: i16,mut _5: i16,mut _6: (([i64; 7],), u128, i16),mut _7: u128,mut _8: i16,mut _9: i16,mut _10: isize,mut _11: (([i64; 7],), u128, i16),mut _12: isize,mut _13: isize) -> (u128, i8, i8) {
mir! {
type RET = (u128, i8, i8);
let _14: f64;
let _15: isize;
let _16: i32;
let _17: Adt52;
let _18: ();
let _19: ();
{
RET.0 = (-65_i8) as u128;
Goto(bb1)
}
bb1 = {
RET = (_6.1, 74_i8, 17_i8);
_5 = (-119771027193909928128679910602256471082_i128) as i16;
_11.0 = _6.0;
_6.0.0 = _3;
RET.0 = _6.1 ^ _7;
RET.0 = !_6.1;
_13 = 166_u8 as isize;
_6.2 = _9;
Goto(bb2)
}
bb2 = {
Call(_18 = dump_var(8_usize, 13_usize, Move(_13), 2_usize, Move(_2), 7_usize, Move(_7), 3_usize, Move(_3)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_18 = dump_var(8_usize, 9_usize, Move(_9), 10_usize, Move(_10), 19_usize, _19, 19_usize, _19), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: i16,mut _2: isize,mut _3: i16,mut _4: (([i64; 7],), u128, i16),mut _5: u128,mut _6: i16,mut _7: (([i64; 7],), u128, i16),mut _8: (([i64; 7],), u128, i16),mut _9: u128,mut _10: u128,mut _11: u128) -> ([i64; 7],) {
mir! {
type RET = ([i64; 7],);
let _12: i32;
let _13: f32;
let _14: (u32, [i128; 5]);
let _15: (u32, [i128; 5]);
let _16: isize;
let _17: isize;
let _18: (u32, [i128; 5]);
let _19: isize;
let _20: [u16; 3];
let _21: (u128, i8, i8);
let _22: [u8; 1];
let _23: (u128, i8, i8);
let _24: (i128,);
let _25: u32;
let _26: ([i128; 5], [u32; 7], f32);
let _27: Adt55;
let _28: *mut usize;
let _29: ([i128; 5], [u32; 7], f32);
let _30: Adt51;
let _31: f64;
let _32: [i128; 5];
let _33: *mut usize;
let _34: ([i64; 7],);
let _35: bool;
let _36: (u16, [u16; 3]);
let _37: ();
let _38: ();
{
RET = (_7.0.0,);
_4 = (RET, _9, _8.2);
_9 = !_10;
RET = (_8.0.0,);
Call(_4.2 = core::intrinsics::transmute(_7.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.0 = [(-7489930081302467414_i64),(-6102685842330092976_i64),3284209474965553799_i64,(-1350793115218455628_i64),7702211040703691802_i64,(-1562545014480749146_i64),(-7111614547804325816_i64)];
_11 = _4.1;
_11 = (-2105393794624762222_i64) as u128;
_4.2 = 63802_u16 as i16;
RET = (_4.0.0,);
_4.1 = _5 & _8.1;
_8 = (_7.0, _4.1, _3);
_7.0.0 = [(-927964674965677767_i64),2908706247461050971_i64,(-5220540861422217895_i64),7038719029532628875_i64,(-2706581200144508501_i64),9054673030064119392_i64,2850437381087109804_i64];
_4.1 = (-6203944892083237671_i64) as u128;
_1 = !_8.2;
_4.0.0 = _7.0.0;
_7 = _4;
_15.1 = [(-28411479099744223417609662136929219459_i128),(-73155980291483730423978746940391612978_i128),(-77745806410540524888506456099885167787_i128),(-60271857843499831276655479806072517177_i128),(-10978213391862381412380465162329738902_i128)];
_14.1 = [52359762196034092797300222095581065771_i128,(-125413243671182564725605140569864517521_i128),71319055823641744426129737278306691777_i128,(-100815310561317460736971429870644426469_i128),(-38509227634492665807714688560514452781_i128)];
_8 = (_4.0, _10, _1);
RET = _4.0;
_8.1 = 933838927_u32 as u128;
_8 = (_4.0, _9, _1);
_14.0 = 2912392686_u32;
match _14.0 {
0 => bb2,
1 => bb3,
2 => bb4,
2912392686 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_8.0.0 = [(-3121600645972925985_i64),(-381718366243742682_i64),(-8576536362192641672_i64),(-6315254826902609359_i64),2480845342614207508_i64,4002611660340590179_i64,(-4273545780230634206_i64)];
_6 = !_8.2;
_5 = _2 as u128;
_1 = -_3;
_14.0 = 1096722246_u32;
_4.1 = _7.1 & _10;
match _14.0 {
1096722246 => bb7,
_ => bb5
}
}
bb7 = {
_12 = '\u{7dfd5}' as i32;
_4.2 = -_3;
_7.0.0 = [3289004718089303555_i64,7535945960781912617_i64,(-2977124823073078897_i64),3463583562880945297_i64,(-5018954025750530949_i64),8732417374698235628_i64,6774071291707267613_i64];
_13 = _2 as f32;
_19 = _2 - _2;
_18 = (_14.0, _15.1);
_17 = _19 << _6;
_13 = _4.1 as f32;
_18 = (_14.0, _14.1);
_11 = _10;
_4.2 = _3;
_4.0 = _8.0;
_8.0.0 = [6406477799940937608_i64,(-2951114806021476519_i64),(-6555362407908658209_i64),4859166947072425532_i64,(-6386986159056140260_i64),(-7498861963763342079_i64),(-4461905064739218318_i64)];
_21.2 = (-126_i8);
_18.1 = [3016762086695635389973393432830002518_i128,87067937405322352318207881939822368331_i128,(-60881699787971445065966653459737865907_i128),(-169909598924771054319394345097926429493_i128),(-130319001535958120816884889023979476209_i128)];
_15.1 = [(-38806407235434014368712360283955853742_i128),(-121545663916738458870681401618391744836_i128),125726316604224713025436122573664195298_i128,(-168288077820190158188631434348912438684_i128),(-78937003406086297228727268747877807290_i128)];
RET.0 = [3378126066837032519_i64,(-6818081506705459132_i64),2442970078296772294_i64,7439134613306895067_i64,(-3685648572655688246_i64),5664173788582815418_i64,8661087503366428423_i64];
_20 = [33111_u16,27932_u16,14374_u16];
_13 = 203669245793927770_i64 as f32;
RET = (_8.0.0,);
_23.0 = _11;
_4.0.0 = [(-8912285664993657640_i64),4610125897823479926_i64,1549569257210922617_i64,(-2249747207825664361_i64),(-132824368638665611_i64),(-700845405670244589_i64),1401611735554400058_i64];
_4.1 = '\u{f07dc}' as u128;
_23 = (_11, _21.2, _21.2);
Goto(bb8)
}
bb8 = {
_8.0 = (RET.0,);
_18.1 = _14.1;
_7.0.0 = _8.0.0;
_21 = (_9, _23.1, _23.2);
_22 = [139_u8];
_18 = _14;
_6 = _1;
_16 = _19 << _1;
match _21.1 {
0 => bb6,
340282366920938463463374607431768211330 => bb9,
_ => bb2
}
}
bb9 = {
_4.2 = _12 as i16;
RET.0 = _4.0.0;
_26.0 = [(-15701170797225868557380327521302348980_i128),93350665527100684096739767496574296686_i128,55277778406258683813120735408317417914_i128,135848007515641469869382956347725688583_i128,(-98447901559521778091663968986756780014_i128)];
_24.0 = !92315536267768188382164189062864305391_i128;
RET.0 = [(-7144799866398248725_i64),(-2721885623562527477_i64),(-6600040072442063869_i64),(-5150993357140850520_i64),(-4578387753073808839_i64),(-493397061802437190_i64),5847510726809421346_i64];
_16 = '\u{cf415}' as isize;
_3 = _6;
Goto(bb10)
}
bb10 = {
_23.0 = _5 ^ _11;
_6 = _8.2;
_26.0 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_4.0 = _7.0;
_4.1 = _24.0 as u128;
_19 = 128_u8 as isize;
_15 = (_18.0, _18.1);
_8.2 = !_3;
_30.fld2 = (_23.1,);
_30.fld0 = _23.0 == _8.1;
Call(_23.1 = fn10(_8, _1, _17, _13, _14.0, _2, _8.2, _18.1, _2, _2, _17, _30.fld0, _17, _2, _3, _6), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_4.0 = (RET.0,);
_23 = (_11, _21.2, _21.1);
_30.fld3 = _4.0.0;
_30.fld3 = _4.0.0;
_4 = (_7.0, _5, _6);
_4.2 = _24.0 as i16;
_29.0 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_4.0.0 = [(-3435547240314059836_i64),(-4192152173158031010_i64),6198343191448767896_i64,9070349964691344103_i64,(-8952260663742383977_i64),(-2356140866331081787_i64),4463511995654483879_i64];
_31 = 39262_u16 as f64;
_7.2 = _8.2;
_15.0 = !_18.0;
_11 = _23.0 * _8.1;
_4 = (_7.0, _5, _6);
Goto(bb12)
}
bb12 = {
_22 = [131_u8];
RET = _4.0;
_23 = (_10, _21.2, _21.1);
_15 = _18;
_13 = 28468_u16 as f32;
_23.1 = _23.2;
_4 = _8;
_20 = [42993_u16,15140_u16,15777_u16];
_8 = (_4.0, _11, _1);
_4 = _7;
_17 = '\u{338d4}' as isize;
_17 = _2 | _2;
Call(_4 = fn12(_5, _18.1, _2, _2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_21.0 = 8805897944064233587_usize as u128;
_4.0.0 = [4225226016073865532_i64,3427096197304574315_i64,(-3738070209765958015_i64),4774076596972765132_i64,3501161271096208290_i64,(-1045892663731298235_i64),(-3718838119570499983_i64)];
_26.1 = [_18.0,_18.0,_15.0,_15.0,_14.0,_15.0,_14.0];
_24.0 = -9856985978621184178148758809766868047_i128;
_34 = (_30.fld3,);
_19 = !_17;
_8.2 = -_7.2;
_34.0 = _8.0.0;
_22 = [231_u8];
_6 = _7.2 * _1;
_18.0 = !_14.0;
_34 = _7.0;
_11 = !_8.1;
_4.1 = _24.0 as u128;
_14.0 = !_15.0;
_13 = 6948550779927890507_usize as f32;
_18 = (_15.0, _15.1);
Goto(bb14)
}
bb14 = {
_24.0 = -113700931949557926234741623198151486660_i128;
_34 = RET;
_34.0 = [4304320462307621456_i64,5588482925446824186_i64,3568683158707763081_i64,(-5918197347063393971_i64),(-988038111366260691_i64),1263671417421522094_i64,1249732173867009406_i64];
_11 = _5 - _10;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(9_usize, 22_usize, Move(_22), 15_usize, Move(_15), 17_usize, Move(_17), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(9_usize, 16_usize, Move(_16), 12_usize, Move(_12), 14_usize, Move(_14), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(9_usize, 4_usize, Move(_4), 24_usize, Move(_24), 5_usize, Move(_5), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: (([i64; 7],), u128, i16),mut _2: i16,mut _3: isize,mut _4: f32,mut _5: u32,mut _6: isize,mut _7: i16,mut _8: [i128; 5],mut _9: isize,mut _10: isize,mut _11: isize,mut _12: bool,mut _13: isize,mut _14: isize,mut _15: i16,mut _16: i16) -> i8 {
mir! {
type RET = i8;
let _17: isize;
let _18: bool;
let _19: i32;
let _20: [u8; 1];
let _21: (i128, (([i64; 7],), u128, i16));
let _22: Adt43;
let _23: char;
let _24: f32;
let _25: [i64; 7];
let _26: [u16; 3];
let _27: u16;
let _28: Adt49;
let _29: [i128; 5];
let _30: [u8; 1];
let _31: i64;
let _32: i8;
let _33: Adt48;
let _34: char;
let _35: ([i128; 5], [u32; 7], f32);
let _36: Adt42;
let _37: i16;
let _38: Adt48;
let _39: *const (u128, i8, i8);
let _40: Adt42;
let _41: [i64; 7];
let _42: isize;
let _43: (u32, [i128; 5]);
let _44: i128;
let _45: ();
let _46: ();
{
_17 = _3;
_7 = _1.2;
RET = 44_i8 - (-4_i8);
_13 = !_11;
_11 = -_14;
_14 = _13;
_15 = -_2;
_5 = !729725457_u32;
_3 = _14 << _6;
_6 = -_10;
_3 = 116985608_i32 as isize;
_18 = _12 ^ _12;
_20 = [176_u8];
_15 = _16 + _2;
_8 = [(-78770537646970538537050289799714028010_i128),(-82165880423150123201413111637126538418_i128),(-152227085069954112479321724912120563239_i128),(-38251404816467201855526627868916053407_i128),91754811107308531482445799810148738566_i128];
_19 = (-132346699951416545341455551510941654979_i128) as i32;
_21 = ((-76213677407665184454890939010592875027_i128), _1);
_10 = !_17;
_3 = 39_u8 as isize;
Goto(bb1)
}
bb1 = {
_1.0.0 = [3247447565097368426_i64,(-8984302230463405778_i64),5259528726324982441_i64,(-5404579087544739067_i64),3545918073688289955_i64,(-884146634449435549_i64),(-8941373020959762282_i64)];
_16 = _1.2;
_21.1.1 = _1.1;
_19 = -(-1321094394_i32);
_2 = _7 ^ _7;
_1.1 = _21.1.1;
_15 = _1.2;
_1 = (_21.1.0, _21.1.1, _16);
_21 = ((-88353419428547358591631751373159600654_i128), _1);
_5 = 1860505808_u32 ^ 1495314746_u32;
_15 = _1.2;
_21 = (51349577685314565997180237002351574612_i128, _1);
_1.0 = (_21.1.0.0,);
_8 = [_21.0,_21.0,_21.0,_21.0,_21.0];
_14 = _11 + _13;
_14 = _5 as isize;
_3 = _6 * _17;
_21.1.0 = _1.0;
_14 = _13 ^ _10;
Goto(bb2)
}
bb2 = {
RET = 34732_u16 as i8;
_1.0 = _21.1.0;
_25 = [(-7450644186223465396_i64),9087730456084875424_i64,(-5319511079937061673_i64),(-464628924457255685_i64),(-7539359782439310115_i64),(-6115813249155343431_i64),7879580854897238988_i64];
_1.0 = (_21.1.0.0,);
_12 = _18;
_27 = 33315_u16 - 48659_u16;
_20 = [52_u8];
_24 = _1.1 as f32;
_27 = 13138_u16 ^ 35713_u16;
_27 = !61455_u16;
_6 = _10;
_29 = _8;
_7 = !_21.1.2;
_23 = '\u{bcfb1}';
_21.1 = _1;
_15 = _18 as i16;
_3 = _10 << _14;
_1.0.0 = [3554167593405680969_i64,(-6703895811046241937_i64),3258651128810894995_i64,2028982054640353759_i64,(-9009181337442862248_i64),5556052951423702456_i64,(-655778598893110375_i64)];
_19 = (-1897862632_i32) + 56436151_i32;
_21.0 = -68596497667758700606114571184067222573_i128;
_8 = _29;
_1 = _21.1;
_6 = _1.1 as isize;
_15 = _7;
Call(_1.0.0 = fn11(_10, _17), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_31 = !1240266979773299235_i64;
_30 = [135_u8];
_21.1.0 = _1.0;
_22 = Adt43::Variant0 { fld0: _8 };
_24 = -_4;
_10 = _3 | _3;
_7 = _1.2 & _16;
_21.1 = _1;
_24 = _4;
place!(Field::<[i128; 5]>(Variant(_22, 0), 0)) = [_21.0,_21.0,_21.0,_21.0,_21.0];
RET = 46_i8;
_27 = 34399_u16;
_16 = _2 ^ _7;
place!(Field::<[i128; 5]>(Variant(_22, 0), 0)) = [_21.0,_21.0,_21.0,_21.0,_21.0];
_21.1.0.0 = _25;
place!(Field::<[i128; 5]>(Variant(_22, 0), 0)) = _29;
_35.1 = [_5,_5,_5,_5,_5,_5,_5];
_16 = _5 as i16;
_21 = ((-2326119728502399431614337838305305704_i128), _1);
_13 = _31 as isize;
_32 = !RET;
_24 = _4 + _4;
_18 = _3 > _10;
match _21.0 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
337956247192436064031760269593462905752 => bb9,
_ => bb8
}
}
bb4 = {
RET = 34732_u16 as i8;
_1.0 = _21.1.0;
_25 = [(-7450644186223465396_i64),9087730456084875424_i64,(-5319511079937061673_i64),(-464628924457255685_i64),(-7539359782439310115_i64),(-6115813249155343431_i64),7879580854897238988_i64];
_1.0 = (_21.1.0.0,);
_12 = _18;
_27 = 33315_u16 - 48659_u16;
_20 = [52_u8];
_24 = _1.1 as f32;
_27 = 13138_u16 ^ 35713_u16;
_27 = !61455_u16;
_6 = _10;
_29 = _8;
_7 = !_21.1.2;
_23 = '\u{bcfb1}';
_21.1 = _1;
_15 = _18 as i16;
_3 = _10 << _14;
_1.0.0 = [3554167593405680969_i64,(-6703895811046241937_i64),3258651128810894995_i64,2028982054640353759_i64,(-9009181337442862248_i64),5556052951423702456_i64,(-655778598893110375_i64)];
_19 = (-1897862632_i32) + 56436151_i32;
_21.0 = -68596497667758700606114571184067222573_i128;
_8 = _29;
_1 = _21.1;
_6 = _1.1 as isize;
_15 = _7;
Call(_1.0.0 = fn11(_10, _17), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_1.0.0 = [3247447565097368426_i64,(-8984302230463405778_i64),5259528726324982441_i64,(-5404579087544739067_i64),3545918073688289955_i64,(-884146634449435549_i64),(-8941373020959762282_i64)];
_16 = _1.2;
_21.1.1 = _1.1;
_19 = -(-1321094394_i32);
_2 = _7 ^ _7;
_1.1 = _21.1.1;
_15 = _1.2;
_1 = (_21.1.0, _21.1.1, _16);
_21 = ((-88353419428547358591631751373159600654_i128), _1);
_5 = 1860505808_u32 ^ 1495314746_u32;
_15 = _1.2;
_21 = (51349577685314565997180237002351574612_i128, _1);
_1.0 = (_21.1.0.0,);
_8 = [_21.0,_21.0,_21.0,_21.0,_21.0];
_14 = _11 + _13;
_14 = _5 as isize;
_3 = _6 * _17;
_21.1.0 = _1.0;
_14 = _13 ^ _10;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_35.2 = _21.1.1 as f32;
_26 = [_27,_27,_27];
SetDiscriminant(_22, 2);
_25 = _1.0.0;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1)).1 = (_1.1, _32, _32);
_15 = -_1.2;
_36.fld0 = core::ptr::addr_of_mut!(place!(Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1)).1.1);
RET = Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1).1.1;
_18 = _17 >= _10;
_31 = Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1).1.1 as i64;
_21.1.2 = Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1).1.2 as i16;
_39 = core::ptr::addr_of!(place!(Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1)).1);
_34 = _23;
_21 = (7381841877712606183809901722187341599_i128, _1);
_26 = [_27,_27,_27];
_1.1 = _21.0 as u128;
Call(place!(Field::<i32>(Variant(_22, 2), 2)) = core::intrinsics::transmute(_23), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
place!(Field::<Adt42>(Variant(_22, 2), 0)).fld0 = _36.fld0;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1)).0 = -Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1).1.2;
Goto(bb11)
}
bb11 = {
_22 = Adt43::Variant1 { fld0: _18,fld1: _34,fld2: _21.1,fld3: _26,fld4: _7,fld5: _21.1.0 };
_21 = ((-36110600673323555573493254815706264774_i128), _1);
RET = -_32;
match _27 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb10,
4 => bb12,
34399 => bb14,
_ => bb13
}
}
bb12 = {
place!(Field::<Adt42>(Variant(_22, 2), 0)).fld0 = _36.fld0;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1)).0 = -Field::<(i8, (u128, i8, i8))>(Variant(_22, 2), 1).1.2;
Goto(bb11)
}
bb13 = {
Return()
}
bb14 = {
_18 = _12;
_36.fld0 = core::ptr::addr_of_mut!(_32);
_9 = _14 | _17;
RET = _32 ^ _32;
_40.fld0 = _36.fld0;
_17 = _21.0 as isize;
_14 = _10 << _21.0;
_37 = _10 as i16;
_23 = Field::<char>(Variant(_22, 1), 1);
_44 = _21.0;
_23 = Field::<char>(Variant(_22, 1), 1);
_34 = _23;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(10_usize, 11_usize, Move(_11), 32_usize, Move(_32), 7_usize, Move(_7), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(10_usize, 27_usize, Move(_27), 12_usize, Move(_12), 23_usize, Move(_23), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(10_usize, 37_usize, Move(_37), 17_usize, Move(_17), 30_usize, Move(_30), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(10_usize, 31_usize, Move(_31), 13_usize, Move(_13), 9_usize, Move(_9), 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: isize) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _3: f64;
let _4: u16;
let _5: i32;
let _6: (u128, i8, i8);
let _7: f32;
let _8: i32;
let _9: (u32, [i128; 5]);
let _10: char;
let _11: u32;
let _12: isize;
let _13: usize;
let _14: Adt43;
let _15: *mut bool;
let _16: i16;
let _17: f64;
let _18: u8;
let _19: isize;
let _20: i32;
let _21: (i8,);
let _22: u128;
let _23: (i8,);
let _24: [i64; 7];
let _25: ();
let _26: ();
{
RET = [(-5053413168628146238_i64),(-2927937702620677106_i64),8807885988017616614_i64,(-7304597291769553436_i64),(-7792157168802333717_i64),(-6444999168588608503_i64),3489350852665111004_i64];
RET = [2584291905601909218_i64,3489715327231127028_i64,6285318663139404541_i64,628426054448568394_i64,5838293229754697257_i64,5714822161070083860_i64,969494016995273089_i64];
_3 = 34818_u16 as f64;
_4 = false as u16;
_2 = _1;
RET = [1720951370682459871_i64,(-4306968123499315375_i64),(-6036147582983736924_i64),8982739845379701800_i64,(-9001044108559462848_i64),(-2497586411741202883_i64),2808453407285360339_i64];
_4 = 1053_u16;
match _4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
1053 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6.2 = !112_i8;
_6 = (272957891269522485495174782066625143369_u128, (-98_i8), 2_i8);
_4 = _6.1 as u16;
_6.2 = _6.1 * _6.1;
_1 = !_2;
_6.0 = !113855619954324911584291788326709519274_u128;
_6 = (57185770658775194510734225118510481138_u128, (-122_i8), (-82_i8));
_6.1 = _6.2 << _2;
_2 = 3775727739_u32 as isize;
_3 = 667543529_i32 as f64;
_6.0 = _3 as u128;
RET = [(-7617270172081181149_i64),(-3892135508555252423_i64),6685017735064094115_i64,6578324946487244396_i64,324333091314876066_i64,(-2993393531614598967_i64),7211910659052980877_i64];
_3 = 1_usize as f64;
_5 = (-1250159209_i32);
_4 = !18918_u16;
Goto(bb8)
}
bb8 = {
RET = [(-7707752406220244186_i64),(-4014895597721220546_i64),7447879584547709132_i64,5798273267205862871_i64,1567911531824105487_i64,(-315835069050216589_i64),7478301344519242162_i64];
_1 = !_2;
_3 = _2 as f64;
_6.2 = _6.1 - _6.1;
_6.0 = 522486105920371609029741535986586306_u128 << _6.2;
_5 = 1982293681_i32;
_2 = _1 * _1;
_2 = _1;
_6 = (245346281890763123816935995942911730255_u128, (-67_i8), (-125_i8));
_2 = _1;
_2 = _3 as isize;
Goto(bb9)
}
bb9 = {
_1 = (-22756_i16) as isize;
RET = [(-106421262987992759_i64),8109211171461590765_i64,(-6081562695841959834_i64),3834975442564625256_i64,(-3705402079941547879_i64),(-3064411813676411725_i64),(-5563534706151881972_i64)];
_6.1 = _6.2;
_6.1 = _6.2 ^ _6.2;
_6.1 = (-161695809821165969576702490993327751692_i128) as i8;
_6.0 = 154273925431243280967623484191091388169_u128 | 103723220845965186596193994894063644540_u128;
_1 = -_2;
_8 = -_5;
_4 = !47766_u16;
_8 = 14407311061187411915_u64 as i32;
_6.0 = 177728080751888560257395645302881931362_u128;
_6 = (301349122117368152878091071652605183187_u128, (-100_i8), (-112_i8));
_8 = _5 * _5;
_7 = 10693172266722659697_u64 as f32;
_7 = _8 as f32;
_5 = _8 - _8;
RET = [(-2831719677590814292_i64),2866266638711509959_i64,298499130592574075_i64,1111597827253470150_i64,(-8278888404456382271_i64),(-391534181880257771_i64),(-9072894883474716847_i64)];
_6.0 = !298133701804963160585950549559533971873_u128;
_6.1 = _6.2;
_9.1 = [(-2441736011729477144862912339101991115_i128),(-72523795587159913689878036773339259655_i128),63449756587482919815208916397170353154_i128,131259733573501213525660918883038778398_i128,92145864572532499631991292000323397497_i128];
_6.2 = (-158647219085266620514028738096545043322_i128) as i8;
_6.1 = -_6.2;
Goto(bb10)
}
bb10 = {
RET = [(-6172089563412066738_i64),2838910920478769300_i64,6889632617777045784_i64,(-4484479727764792521_i64),(-3049384965752724923_i64),(-2744920365954009518_i64),5908782291138322183_i64];
RET = [6407862307042806190_i64,7370846455728686671_i64,9108850709157830250_i64,(-616188691455005920_i64),(-3751418232893379236_i64),(-3255921482236280795_i64),7722047136934156024_i64];
_2 = _1 + _1;
_6 = (319542885558666955997773096275217405831_u128, 53_i8, 10_i8);
RET = [4578297364340529445_i64,(-1556607751390797167_i64),8567372441338418701_i64,(-5624256708246278522_i64),(-591955185269027347_i64),105582509297914160_i64,8352100373846715735_i64];
_9.1 = [33217857930544645305874556734221760463_i128,(-89337514043493527866925598651579067433_i128),(-68863380341917859374926926317297643647_i128),(-92070598830753262997167441848765084819_i128),(-69954478369283287320948804238312491489_i128)];
_6.2 = 2183592204_u32 as i8;
_1 = _2 << _5;
_7 = 9808131080763000903_usize as f32;
_6.2 = _6.1 ^ _6.1;
_5 = _8;
_9.0 = 3842176742_u32 * 3192977160_u32;
_6.1 = -_6.2;
RET = [(-851345864306944025_i64),(-492788182649560562_i64),227839417300004496_i64,7259962504920863177_i64,9173973545671726424_i64,(-5626307434864023648_i64),4377036882314288225_i64];
_1 = _2;
_6 = (27710843771277430310819472901953342941_u128, (-56_i8), (-37_i8));
_9.1 = [(-64417160989682450750667978635508601470_i128),160378790149504124654786568726182399944_i128,32828465814213022005137851962849818325_i128,(-129045477496983931401314813576084802184_i128),(-56848176014201762467533867129980526775_i128)];
_3 = _6.1 as f64;
_10 = '\u{44fe3}';
Goto(bb11)
}
bb11 = {
_2 = _1;
_8 = _5;
_6.0 = 6562963309282911123_u64 as u128;
_9.1 = [57286524990050174753519124135022656229_i128,(-7947330249707705974022055609967148486_i128),(-120556210716491333411268974419455444948_i128),(-160206485407854572344273674306181014653_i128),123070165112427997242926702414786614441_i128];
_7 = 8332868521975174840_u64 as f32;
RET = [(-4533402871665066401_i64),3812758159840932578_i64,3538597894669111495_i64,1155924455434098501_i64,4244111351779068469_i64,6218298640290599671_i64,5989167744891315438_i64];
RET = [3302323771941260835_i64,(-2385571839080439266_i64),(-6288610598235487572_i64),3764237107826917787_i64,4199649583284817429_i64,1514652218466607659_i64,(-432087983635397337_i64)];
_10 = '\u{2cd26}';
_2 = -_1;
_5 = _8 - _8;
_9.1 = [(-152824914825713841959273072696077413272_i128),114061917248825570976815628542797675038_i128,113716656514175240052747073529664651542_i128,39275778063678462632181317214117310991_i128,(-63194035250387743188619768810497559013_i128)];
_1 = _2 << _5;
_6.0 = !159827103619898600132220285566847036062_u128;
_6.2 = _6.1 << _1;
_11 = _9.0 >> _5;
_12 = -_1;
_9.1 = [104659581877084275770848759650196884393_i128,114346280033361573191217492478240479771_i128,1459500043771684117421387669625037246_i128,(-55940909297208042620320348824886526192_i128),(-7462366822208544732124781969439056411_i128)];
_6.2 = _6.1 & _6.1;
_8 = _5 | _5;
_6.0 = 260196576615076114178506694965683488981_u128;
Goto(bb12)
}
bb12 = {
_6.2 = _6.1;
_11 = _9.0 << _5;
_9.1 = [29467902631745071748308380603074709084_i128,67880380890496449696259180596934104295_i128,(-22393216837914221409623778764516108198_i128),90818467076792836376886349350156015819_i128,(-36754102351186937529127948154331268647_i128)];
RET = [(-2589900178443477822_i64),4106134052590410374_i64,(-2052211411677427348_i64),2399725940425921982_i64,4174100933018816208_i64,50288608497596942_i64,6985339552225411773_i64];
_6.1 = _11 as i8;
_1 = _10 as isize;
_16 = 7254789630696106036_i64 as i16;
_7 = _4 as f32;
RET = [(-6855058751915067707_i64),4245495905556563675_i64,4403095258073463486_i64,5979506736904249723_i64,(-6542946976463465801_i64),(-7253441843484609686_i64),(-1838108671427267411_i64)];
_10 = '\u{2256a}';
_21.0 = _6.1 - _6.1;
_19 = !_12;
_5 = _8;
_16 = !6204_i16;
_6.1 = !_21.0;
_10 = '\u{65743}';
Goto(bb13)
}
bb13 = {
_22 = 12469920477974553424_u64 as u128;
_18 = 136_u8;
_21.0 = !_6.1;
_4 = 13840_u16 | 63045_u16;
_9.1 = [(-88902924418206856213277884107681151476_i128),(-51086762638897605223528612306146476389_i128),14019532210242600707315127944149715630_i128,10717463327102924282438282612097744882_i128,99336204346075004575939021942953116476_i128];
_6.2 = _6.1;
_3 = 14637442588739487506_usize as f64;
_1 = _19;
RET = [(-4505718598634041671_i64),4352823278462202057_i64,2425649341038123791_i64,140215418399943310_i64,(-7348557888870851873_i64),(-3185023660043559721_i64),(-8083048100755674209_i64)];
Goto(bb14)
}
bb14 = {
_21.0 = _6.2;
_13 = 2243488702245360715_i64 as usize;
_5 = _10 as i32;
_21.0 = _6.1 >> _11;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(11_usize, 22_usize, Move(_22), 4_usize, Move(_4), 13_usize, Move(_13), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(11_usize, 8_usize, Move(_8), 2_usize, Move(_2), 16_usize, Move(_16), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: u128,mut _2: [i128; 5],mut _3: isize,mut _4: isize) -> (([i64; 7],), u128, i16) {
mir! {
type RET = (([i64; 7],), u128, i16);
let _5: f32;
let _6: (u128, i8, i8);
let _7: ();
let _8: ();
{
_3 = 684245627_i32 as isize;
_2 = [61658509687141130455190150218206731772_i128,72706456201252713946908466042492950559_i128,(-95554550235286958339596407780409478477_i128),130899643265718617234639732826547560994_i128,155731472834843929360390300035541551849_i128];
_4 = 12207_i16 as isize;
Goto(bb1)
}
bb1 = {
_4 = 10923132348838159369_usize as isize;
_6.1 = 111_i8;
RET.2 = -(-171_i16);
_5 = 8925655509681664632_i64 as f32;
RET.0.0 = [(-9134766685734738500_i64),7155333145578446568_i64,2871619549832827253_i64,1239324402631026755_i64,(-5008123981662238940_i64),(-3930005115783529056_i64),7276334351640089317_i64];
_3 = _1 as isize;
_5 = 56166_u16 as f32;
_2 = [93044098956935593366046370273602793151_i128,36187538521503605009300412332995631203_i128,(-26824802697162628516002045581941317688_i128),166144672802717322626086340176709160785_i128,105696090061517978817869810082301867753_i128];
_3 = !_4;
_6.2 = _6.1 + _6.1;
RET.1 = !_1;
RET.1 = _1 | _1;
_6.0 = 8141155199615484926_i64 as u128;
_6.2 = _6.1;
RET.0.0 = [(-680305377108661227_i64),(-6349371774473996940_i64),3510407704402380899_i64,29414536471899279_i64,862162009655772332_i64,(-5703314299375928884_i64),(-6471293234505349519_i64)];
RET.1 = _1;
_1 = 3135459584_u32 as u128;
Goto(bb2)
}
bb2 = {
Call(_7 = dump_var(12_usize, 3_usize, Move(_3), 2_usize, Move(_2), 8_usize, _8, 8_usize, _8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: ([i64; 7],),mut _2: isize,mut _3: i8,mut _4: isize,mut _5: i8,mut _6: i8,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: i8,mut _11: i8,mut _12: (u128, i8, i8),mut _13: (i128, (([i64; 7],), u128, i16)),mut _14: i8,mut _15: (([i64; 7],), u128, i16)) -> ([i64; 7],) {
mir! {
type RET = ([i64; 7],);
let _16: Adt45;
let _17: (i128, (([i64; 7],), u128, i16));
let _18: isize;
let _19: Adt44;
let _20: Adt48;
let _21: isize;
let _22: [i64; 7];
let _23: Adt48;
let _24: ([i64; 7],);
let _25: &'static usize;
let _26: (u16, [u16; 3]);
let _27: [u16; 3];
let _28: (u16, [u16; 3]);
let _29: Adt52;
let _30: f32;
let _31: Adt54;
let _32: Adt46;
let _33: i128;
let _34: [char; 1];
let _35: (i8, (u128, i8, i8));
let _36: Adt53;
let _37: ([i64; 7],);
let _38: (i8,);
let _39: i32;
let _40: ();
let _41: ();
{
_5 = !_12.2;
_12 = (_13.1.1, _11, _6);
RET = _15.0;
_7 = !_8;
_13.1.0.0 = [4402892748731679522_i64,8633216805197342226_i64,(-3058505651268386008_i64),(-5530440201463146060_i64),(-8052386721402086197_i64),7374582092046699201_i64,(-5769056637606419466_i64)];
_13 = (161318627697176683624024485081628376904_i128, _15);
Call(_13.1.2 = core::intrinsics::bswap(_15.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = (_13.1.1, _6, _3);
_13.1.0.0 = _15.0.0;
_13.1.1 = '\u{8718}' as u128;
_2 = !_9;
_13.1.0.0 = [(-794891019387345859_i64),(-5485005692453531221_i64),3221093857968874041_i64,8602835848753556208_i64,7553638352161472633_i64,4493376060265937324_i64,2836933094827639626_i64];
Goto(bb2)
}
bb2 = {
_5 = -_12.1;
_13.1.0.0 = [5331047990876906293_i64,(-454954984252487351_i64),(-2583816104550182572_i64),(-311400516563711004_i64),(-5634685583108524635_i64),(-3327546665082047489_i64),(-3208603631779623484_i64)];
RET.0 = [3506863815121572326_i64,7255496159587308276_i64,8313478433265504056_i64,8604601805371530919_i64,(-8369188927106408635_i64),(-2578230651665226899_i64),(-6042627390813919976_i64)];
_11 = _5;
_9 = _8;
_5 = !_6;
_5 = (-527453693_i32) as i8;
_12.0 = _13.1.1 & _15.1;
_15 = (_1, _12.0, _13.1.2);
_4 = !_7;
_2 = 758710495_u32 as isize;
_15 = (RET, _12.0, _13.1.2);
_17.1.1 = _11 as u128;
_17.1.2 = 1_usize as i16;
_13.1.0 = (RET.0,);
_17 = _13;
_18 = _9 | _8;
_1 = _17.1.0;
_2 = !_18;
_15.1 = _12.0 << _12.2;
_2 = _8 & _4;
Call(_17.1.0.0 = fn14(_18, _7, _8, _11), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_17.1.0 = RET;
Call(_13.1.1 = core::intrinsics::bswap(_15.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
RET = _13.1.0;
_12.1 = _3 ^ _14;
_7 = _2;
_13.1 = _17.1;
_20 = Adt48::Variant1 { fld0: _7 };
_18 = -_7;
_1.0 = [4486335463512284362_i64,(-4014411198280012579_i64),4167616536110712540_i64,8205975529138873706_i64,(-91316114172931519_i64),6002382560242506190_i64,124325999589660741_i64];
_2 = !_18;
_17 = (_13.0, _15);
_21 = -_2;
_9 = 9318103613627460139_u64 as isize;
_21 = !_18;
place!(Field::<isize>(Variant(_20, 1), 0)) = _2 >> _15.1;
_12.0 = (-1674058055_i32) as u128;
_12.0 = _15.1;
_15.1 = (-810942458_i32) as u128;
_12.0 = 233_u8 as u128;
_15.0.0 = [(-6385042305702846650_i64),3882348386733112119_i64,4883477962821045703_i64,874992968200280916_i64,4347532078656922897_i64,(-929157154745298204_i64),(-2878556872358026932_i64)];
_9 = _11 as isize;
_13.1.0.0 = [8553057675368234944_i64,5560436434641647700_i64,6164072385190647173_i64,(-7134619201446502670_i64),8770158494781562985_i64,8923203194198465050_i64,5711762682825842004_i64];
_12.0 = _17.1.1;
_15.2 = -_13.1.2;
_15.2 = -_13.1.2;
_8 = 8294_u16 as isize;
_17.1.1 = !_12.0;
_3 = !_11;
_11 = _13.1.2 as i8;
match _17.0 {
0 => bb1,
1 => bb2,
2 => bb3,
161318627697176683624024485081628376904 => bb6,
_ => bb5
}
}
bb5 = {
_12 = (_13.1.1, _6, _3);
_13.1.0.0 = _15.0.0;
_13.1.1 = '\u{8718}' as u128;
_2 = !_9;
_13.1.0.0 = [(-794891019387345859_i64),(-5485005692453531221_i64),3221093857968874041_i64,8602835848753556208_i64,7553638352161472633_i64,4493376060265937324_i64,2836933094827639626_i64];
Goto(bb2)
}
bb6 = {
_12.2 = _12.1;
_2 = (-1666065276_i32) as isize;
Goto(bb7)
}
bb7 = {
_9 = _21;
_22 = [6074964602413882908_i64,5557679903329991699_i64,(-3958640546323010076_i64),(-7022725803016868778_i64),(-1416258162876923228_i64),(-2354648139939767205_i64),4097716213840539832_i64];
match _17.0 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb6,
161318627697176683624024485081628376904 => bb9,
_ => bb8
}
}
bb8 = {
_5 = -_12.1;
_13.1.0.0 = [5331047990876906293_i64,(-454954984252487351_i64),(-2583816104550182572_i64),(-311400516563711004_i64),(-5634685583108524635_i64),(-3327546665082047489_i64),(-3208603631779623484_i64)];
RET.0 = [3506863815121572326_i64,7255496159587308276_i64,8313478433265504056_i64,8604601805371530919_i64,(-8369188927106408635_i64),(-2578230651665226899_i64),(-6042627390813919976_i64)];
_11 = _5;
_9 = _8;
_5 = !_6;
_5 = (-527453693_i32) as i8;
_12.0 = _13.1.1 & _15.1;
_15 = (_1, _12.0, _13.1.2);
_4 = !_7;
_2 = 758710495_u32 as isize;
_15 = (RET, _12.0, _13.1.2);
_17.1.1 = _11 as u128;
_17.1.2 = 1_usize as i16;
_13.1.0 = (RET.0,);
_17 = _13;
_18 = _9 | _8;
_1 = _17.1.0;
_2 = !_18;
_15.1 = _12.0 << _12.2;
_2 = _8 & _4;
Call(_17.1.0.0 = fn14(_18, _7, _8, _11), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_15 = _17.1;
_10 = _13.1.2 as i8;
_12.2 = _12.1;
Goto(bb10)
}
bb10 = {
_24 = (_22,);
_13 = _17;
_24 = _15.0;
SetDiscriminant(_20, 0);
_21 = _15.2 as isize;
_18 = -_7;
_13.1.0 = _24;
Goto(bb11)
}
bb11 = {
_13.1.0.0 = [1401768072305660856_i64,(-1278191907470947638_i64),4246834892675513607_i64,3994265379245689316_i64,6438113989501383193_i64,(-1906712551332999732_i64),6074585601104216691_i64];
_22 = [(-4009600004815267819_i64),(-3929634880743687924_i64),(-819141996668730978_i64),6735451532170184131_i64,(-4760088276530743250_i64),2331055055422300962_i64,(-1585909933785511875_i64)];
RET = (_1.0,);
place!(Field::<i8>(Variant(_20, 0), 0)) = _12.2 - _12.1;
RET = _13.1.0;
RET.0 = [(-273959084359193341_i64),(-2158431590682149527_i64),(-1633695812805247292_i64),6288804027076365491_i64,3030638070539432681_i64,2956562684060443455_i64,3594617883981123402_i64];
_12.0 = _17.1.1 + _13.1.1;
_13.1.0 = (_17.1.0.0,);
SetDiscriminant(_20, 1);
place!(Field::<isize>(Variant(_20, 1), 0)) = !_9;
_3 = _13.0 as i8;
_26.1 = [29549_u16,40555_u16,51864_u16];
_14 = !_11;
_12.1 = !_10;
_5 = _12.1;
_22 = _1.0;
_22 = _1.0;
_18 = -_21;
_17 = (_13.0, _15);
_9 = Field::<isize>(Variant(_20, 1), 0);
_15.2 = _13.1.2 * _17.1.2;
_24.0 = [(-3350837411343262000_i64),(-4294180442822125829_i64),7021939346911633008_i64,9044557391832264490_i64,(-8957444552102183819_i64),1346709825243831194_i64,(-3815539690932238946_i64)];
_12 = (_17.1.1, _14, _3);
_12.2 = _15.2 as i8;
_12.2 = _13.1.1 as i8;
_1 = _24;
_6 = 3767693675551942431_u64 as i8;
_6 = _5;
Call(_12.0 = core::intrinsics::bswap(_15.1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_9 = !_18;
_28 = (18878_u16, _26.1);
_13.0 = -_17.0;
_13.1.0 = RET;
_22 = [3561542660538964354_i64,8902481521323106553_i64,8219973979595522872_i64,3869722010402358940_i64,(-4181108690688415709_i64),(-9113529335770238744_i64),(-7389474043652269005_i64)];
_17.1.0 = (_24.0,);
_20 = Adt48::Variant0 { fld0: _12.2 };
_4 = -_21;
_13.0 = _17.0;
_13.1 = (_1, _17.1.1, _15.2);
_17.1 = (RET, _15.1, _13.1.2);
_15.1 = _13.1.1;
SetDiscriminant(_20, 1);
_26 = (_28.0, _28.1);
_21 = !_9;
_15.2 = -_17.1.2;
_10 = -_14;
_14 = _11 << _13.0;
_3 = -_12.1;
match _13.0 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb8,
161318627697176683624024485081628376904 => bb13,
_ => bb5
}
}
bb13 = {
_17.1.0 = _13.1.0;
_26.1 = [_26.0,_26.0,_28.0];
RET = _1;
_31.fld2 = !_2;
_35 = (_12.1, _12);
_15 = _17.1;
_17.1.2 = _13.1.2;
_4 = _21 & _7;
_7 = _4 & _4;
_28 = (_26.0, _26.1);
_30 = (-1445720025_i32) as f32;
Call(_12.2 = core::intrinsics::transmute(_35.1.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_14 = -_5;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(13_usize, 4_usize, Move(_4), 2_usize, Move(_2), 18_usize, Move(_18), 28_usize, Move(_28)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(13_usize, 10_usize, Move(_10), 17_usize, Move(_17), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(13_usize, 13_usize, Move(_13), 3_usize, Move(_3), 1_usize, Move(_1), 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: i8) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _5: u64;
let _6: char;
let _7: u16;
let _8: Adt52;
let _9: Adt51;
let _10: Adt56;
let _11: i64;
let _12: *mut f32;
let _13: [u16; 3];
let _14: isize;
let _15: ([i128; 5], [u32; 7], f32);
let _16: ([i64; 7],);
let _17: isize;
let _18: i128;
let _19: (u16, [u16; 3]);
let _20: Adt53;
let _21: (i128,);
let _22: *mut bool;
let _23: ([i64; 7],);
let _24: (i128, (([i64; 7],), u128, i16));
let _25: f64;
let _26: isize;
let _27: isize;
let _28: [char; 1];
let _29: Adt46;
let _30: u64;
let _31: ();
let _32: ();
{
RET = [(-4110323123650379632_i64),(-2043289234193248416_i64),1472430226170067592_i64,(-5718887685990810606_i64),7486896830509588681_i64,(-8136025690465279731_i64),(-6842700259150722094_i64)];
_4 = _2 as i8;
_5 = !18038232002579092470_u64;
_5 = !13490764508191713667_u64;
_2 = -_1;
_2 = -_1;
_5 = 49467_u16 as u64;
_6 = '\u{108ddd}';
RET = [7561862063173235356_i64,(-2995296533094952478_i64),(-6477698111764976468_i64),4154723296631662599_i64,(-8654239895525112717_i64),2362245126874270149_i64,1704373828901107778_i64];
RET = [1112255451656492120_i64,(-5376674992588545588_i64),7003603449794679647_i64,(-4857464080521152213_i64),5537090238726782938_i64,3835439307668235460_i64,(-6290125673596818548_i64)];
_6 = '\u{546cc}';
_4 = 12944928806721180977_usize as i8;
RET = [7498724715624413134_i64,5713313754773789429_i64,(-185538631624284585_i64),5675716533835148848_i64,8985835522594938076_i64,(-6091705614503225688_i64),8114413808499083150_i64];
_3 = -_2;
RET = [24577914095322135_i64,(-6323473706610642352_i64),(-1688627241406090537_i64),(-8585911517291932423_i64),2324331062461406456_i64,5512843419511151483_i64,(-4956839690152699081_i64)];
_3 = !_2;
RET = [651747208048536237_i64,(-3880687382209615628_i64),(-6415078934133379722_i64),(-7211515723631657920_i64),(-5602248844427430505_i64),294353532994717714_i64,(-7762603384340433199_i64)];
_3 = !_1;
_5 = !2153176350295381962_u64;
_4 = (-3987001578198624237_i64) as i8;
_7 = 49230_u16 + 45204_u16;
Goto(bb1)
}
bb1 = {
_5 = !7281180758768825625_u64;
RET = [(-8055711080162035518_i64),6243707522243110237_i64,(-6557523801985212791_i64),(-581380453845595601_i64),6033742692163892584_i64,6661384083174314131_i64,3979787814835033015_i64];
_2 = _1 | _3;
_6 = '\u{b9fbd}';
Goto(bb2)
}
bb2 = {
_9.fld0 = !true;
_9.fld2.0 = _4 | _4;
RET = [3450429733474142781_i64,(-1319254962578672345_i64),548166112854919420_i64,2170633903607537214_i64,3231928176286060567_i64,5561852477167638463_i64,5800106335258211168_i64];
RET = [8863738840354006920_i64,2408307606526516118_i64,124959033639032688_i64,(-3926527673816583311_i64),7663314785464841377_i64,(-1702072553119823160_i64),4376729014828471771_i64];
_6 = '\u{5ac5e}';
_4 = (-1842193867_i32) as i8;
_4 = _6 as i8;
_9.fld3 = [2489619587929556237_i64,6006506945399169067_i64,(-1170386830140369526_i64),(-1068845135706629660_i64),8902604496311260735_i64,2588261937608952236_i64,4135301735148412332_i64];
_9.fld2 = (_4,);
_1 = _3;
_9.fld1 = [_6];
_1 = (-4815521876204795344_i64) as isize;
_9.fld0 = _2 < _3;
_5 = _2 as u64;
_4 = -_9.fld2.0;
_9.fld2 = (_4,);
_9.fld1 = [_6];
_7 = _6 as u16;
_5 = 151178857666769603667488316984531669288_i128 as u64;
_14 = _2 << _3;
_7 = _5 as u16;
_11 = 5170115220400343337_i64 * (-8227075226734280192_i64);
_6 = '\u{99c84}';
RET = [_11,_11,_11,_11,_11,_11,_11];
_3 = _2 * _14;
RET = [_11,_11,_11,_11,_11,_11,_11];
Call(_3 = core::intrinsics::transmute(_14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = '\u{5be10}';
_3 = _14 & _14;
_3 = _14;
_4 = _14 as i8;
_9.fld0 = true | false;
_7 = 16961_u16;
RET = _9.fld3;
_5 = 6722839336774685799_u64;
_9.fld1 = [_6];
_5 = 993065597412077732_u64 + 3403630873815511042_u64;
_9.fld2.0 = _4 & _4;
_15.2 = _5 as f32;
_15.0 = [107629707234617304500751322436306380493_i128,(-56760832897217487683458327574647514989_i128),(-134054842123115007028984481602204608272_i128),(-59123052322832034154874112351008069823_i128),(-87339527641150160441852794511516928065_i128)];
_9.fld0 = false | false;
_15.2 = _2 as f32;
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
16961 => bb8,
_ => bb7
}
}
bb4 = {
_9.fld0 = !true;
_9.fld2.0 = _4 | _4;
RET = [3450429733474142781_i64,(-1319254962578672345_i64),548166112854919420_i64,2170633903607537214_i64,3231928176286060567_i64,5561852477167638463_i64,5800106335258211168_i64];
RET = [8863738840354006920_i64,2408307606526516118_i64,124959033639032688_i64,(-3926527673816583311_i64),7663314785464841377_i64,(-1702072553119823160_i64),4376729014828471771_i64];
_6 = '\u{5ac5e}';
_4 = (-1842193867_i32) as i8;
_4 = _6 as i8;
_9.fld3 = [2489619587929556237_i64,6006506945399169067_i64,(-1170386830140369526_i64),(-1068845135706629660_i64),8902604496311260735_i64,2588261937608952236_i64,4135301735148412332_i64];
_9.fld2 = (_4,);
_1 = _3;
_9.fld1 = [_6];
_1 = (-4815521876204795344_i64) as isize;
_9.fld0 = _2 < _3;
_5 = _2 as u64;
_4 = -_9.fld2.0;
_9.fld2 = (_4,);
_9.fld1 = [_6];
_7 = _6 as u16;
_5 = 151178857666769603667488316984531669288_i128 as u64;
_14 = _2 << _3;
_7 = _5 as u16;
_11 = 5170115220400343337_i64 * (-8227075226734280192_i64);
_6 = '\u{99c84}';
RET = [_11,_11,_11,_11,_11,_11,_11];
_3 = _2 * _14;
RET = [_11,_11,_11,_11,_11,_11,_11];
Call(_3 = core::intrinsics::transmute(_14), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_5 = !7281180758768825625_u64;
RET = [(-8055711080162035518_i64),6243707522243110237_i64,(-6557523801985212791_i64),(-581380453845595601_i64),6033742692163892584_i64,6661384083174314131_i64,3979787814835033015_i64];
_2 = _1 | _3;
_6 = '\u{b9fbd}';
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = [_11,_11,_11,_11,_11,_11,_11];
_6 = '\u{f656d}';
_17 = _14;
_9.fld0 = false;
_9.fld0 = true;
_15.1 = [472287538_u32,1560441842_u32,1583533499_u32,522226143_u32,216637180_u32,838586057_u32,2863685917_u32];
_14 = !_17;
_4 = _9.fld2.0;
_13 = [_7,_7,_7];
_9.fld1 = [_6];
_15.1 = [804734991_u32,3993724383_u32,713177634_u32,3340458879_u32,439172049_u32,3739293490_u32,2565229958_u32];
Call(_16.0 = fn15(_15, _17, _14), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_6 = '\u{28f08}';
_5 = 6981982471170383158_u64 - 125451663855774748_u64;
_20.fld1 = 24726_i16;
_5 = !15793617269580157349_u64;
_19.1 = [_7,_7,_7];
_4 = -_9.fld2.0;
_19.0 = _7 / _7;
_9.fld3 = [_11,_11,_11,_11,_11,_11,_11];
_14 = !_3;
_9.fld0 = !false;
_1 = _17;
_9.fld0 = false ^ false;
_2 = -_14;
RET = [_11,_11,_11,_11,_11,_11,_11];
_15.2 = (-35559161862826448405934970175019304017_i128) as f32;
Goto(bb10)
}
bb10 = {
_15.2 = 7829403545301850711595028632402397354_i128 as f32;
_19 = (_7, _13);
_9.fld3 = _16.0;
_12 = core::ptr::addr_of_mut!(_15.2);
_9.fld0 = !false;
_9.fld2.0 = _5 as i8;
_15.2 = _4 as f32;
_3 = _2;
_9.fld2.0 = _4;
_9.fld0 = false;
_18 = _17 as i128;
_1 = -_14;
_22 = core::ptr::addr_of_mut!(_9.fld0);
_23.0 = [_11,_11,_11,_11,_11,_11,_11];
_9.fld2.0 = -_4;
_4 = _9.fld2.0 ^ _9.fld2.0;
Goto(bb11)
}
bb11 = {
_24.1.0.0 = [_11,_11,_11,_11,_11,_11,_11];
_25 = _3 as f64;
_11 = (-3936412905490599826_i64) >> _14;
RET = [_11,_11,_11,_11,_11,_11,_11];
_6 = '\u{117c}';
_22 = core::ptr::addr_of_mut!(_9.fld0);
_19.1 = _13;
_2 = _17 ^ _1;
_24.1.1 = 276008730857599587930643100132134716282_u128;
_21.0 = _9.fld2.0 as i128;
_25 = (*_12) as f64;
_19 = (_7, _13);
_3 = _17;
_9.fld1 = [_6];
Goto(bb12)
}
bb12 = {
Call(_31 = dump_var(14_usize, 16_usize, Move(_16), 3_usize, Move(_3), 4_usize, Move(_4), 23_usize, Move(_23)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_31 = dump_var(14_usize, 13_usize, Move(_13), 17_usize, Move(_17), 14_usize, Move(_14), 11_usize, Move(_11)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: ([i128; 5], [u32; 7], f32),mut _2: isize,mut _3: isize) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _4: i8;
let _5: i8;
let _6: Adt44;
let _7: char;
let _8: char;
let _9: ([i128; 5], [u32; 7], f32);
let _10: f32;
let _11: u8;
let _12: char;
let _13: isize;
let _14: (u32, [i128; 5]);
let _15: Adt53;
let _16: i32;
let _17: char;
let _18: i32;
let _19: u16;
let _20: f64;
let _21: Adt51;
let _22: f32;
let _23: Adt57;
let _24: [i128; 5];
let _25: char;
let _26: *mut f32;
let _27: isize;
let _28: (i128,);
let _29: i128;
let _30: i8;
let _31: f32;
let _32: (u32, [i128; 5]);
let _33: [i128; 5];
let _34: f32;
let _35: ([i64; 7],);
let _36: u64;
let _37: (u128, i8, i8);
let _38: [char; 1];
let _39: i64;
let _40: (([i64; 7],), u128, i16);
let _41: [i128; 5];
let _42: [u16; 3];
let _43: [i64; 7];
let _44: ();
let _45: ();
{
_1.0 = [49586843476533212788624815107054333522_i128,139284478851909277333241916104784760433_i128,100122344984098708307873803398797021920_i128,(-118181361722321574364263655342745087556_i128),(-20677782612109489029260192522250770902_i128)];
Goto(bb1)
}
bb1 = {
_4 = 23_i8 + 96_i8;
RET = [1623326989258188254_i64,(-946481712542060503_i64),8960243574870862530_i64,(-6921411733880060583_i64),7807788212482774697_i64,6813921204108165166_i64,504543905401636409_i64];
_3 = (-647237931_i32) as isize;
_3 = _2;
_2 = _3;
_4 = -89_i8;
_5 = !_4;
_4 = _5 + _5;
RET = [8159871294751441207_i64,(-2605631682148088279_i64),(-5450494508993630109_i64),(-7779304765243131689_i64),(-8878741911867748630_i64),3100378106541223649_i64,3839213240286802269_i64];
_5 = _4;
_2 = _3;
_3 = -_2;
_1.1 = [992640984_u32,3498257154_u32,1062780527_u32,2644073019_u32,1873071557_u32,1261336195_u32,3813550106_u32];
_2 = _3;
_5 = _4 - _4;
_1.2 = 4662229418872544938_i64 as f32;
Call(RET = fn16(_3, _3, _3, _3, _2, _3, _2, _3, _3, _3, _3, _2, _2, _2, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = _2;
_2 = _3 ^ _3;
RET = [(-5948906910741795642_i64),1973030823564662569_i64,(-5465329607779892275_i64),(-2601584699887327392_i64),(-593262155632447752_i64),(-7959696904262683730_i64),7440178068613975743_i64];
_1.0 = [(-134764188032109390048527539370920085285_i128),(-82067125536499688253342405032860442369_i128),27991051991435850715715507453738581097_i128,(-131678053375916641632772139060776391792_i128),25481479508592212746848876841653489539_i128];
_5 = _4;
RET = [3584925031929887524_i64,7129589363676564660_i64,(-1583688871749006603_i64),(-776931238362940357_i64),(-6775041601254616042_i64),3995155244553631145_i64,(-7309389856525294455_i64)];
_2 = _3;
_1.0 = [106627822203573582300923905814406494851_i128,161452131452772690631713245842503145945_i128,(-108702152418802157108004682624880672693_i128),(-8591055650002986752212132952462213638_i128),(-3999030911658550107204504511038373966_i128)];
_4 = _5 - _5;
_1.0 = [(-40761391275324663977236629151765453020_i128),(-31191563241025287450476153676767074366_i128),(-126063593887819562723326059426639408927_i128),93654970275950139385023693892670528158_i128,56955681095815380113822890739263430424_i128];
_1.2 = 581394009346835514941240185416936573_i128 as f32;
_5 = _4;
RET = [705018925687757299_i64,2981955073347031340_i64,(-5718140852625304177_i64),(-8633120853469183974_i64),(-2373205692601705522_i64),(-927634089524635315_i64),(-8020062622132478979_i64)];
_7 = '\u{9daeb}';
_3 = _2;
_4 = _5;
RET = [(-3050195000076063933_i64),(-1742815082960446898_i64),1663825849501652562_i64,(-1096421285722217886_i64),5661881166068533946_i64,4424849137240315930_i64,5764145258842646619_i64];
_4 = _5 - _5;
_8 = _7;
RET = [8636810323738706524_i64,4364815087373634442_i64,229926510515768754_i64,97457171673310153_i64,(-8772962128274964532_i64),(-7485391796083212222_i64),(-8576163288107151106_i64)];
RET = [8730773684745842982_i64,6471783632014390222_i64,7664204984964530298_i64,(-6114101633059398661_i64),7637520889261892445_i64,(-1244607992635103888_i64),(-3582439404355108713_i64)];
_1.1 = [2836082992_u32,398601454_u32,680915058_u32,3380845597_u32,2236648400_u32,2170020942_u32,3930836534_u32];
RET = [395293396450251887_i64,506145722558617355_i64,3273731407066121095_i64,(-7142777206596042061_i64),9066810130689432162_i64,7959304200049743369_i64,1719626375894217830_i64];
Goto(bb3)
}
bb3 = {
_9.2 = 1_usize as f32;
_9.0 = _1.0;
_9 = (_1.0, _1.1, _1.2);
_1 = (_9.0, _9.1, _9.2);
_5 = -_4;
_3 = _2;
_4 = 26366279620681375130283201031589584272_u128 as i8;
RET = [2426299090888609071_i64,(-1624392091699658293_i64),5425411623666515562_i64,(-3219604580672200588_i64),7178046669928394355_i64,8065406327346897853_i64,(-599448416747094566_i64)];
_1 = _9;
RET = [4685814942372625235_i64,2830580312671932021_i64,8673844476300085672_i64,(-6961846028721369975_i64),(-5188555434962144540_i64),(-3599048599291455418_i64),(-203377645064662708_i64)];
_9 = (_1.0, _1.1, _1.2);
_5 = _4;
_7 = _8;
RET = [(-8101892380405808904_i64),(-8573901153890497820_i64),(-756171831099655698_i64),4912213869920990431_i64,(-5699036870697769050_i64),(-7370473156908155582_i64),441176959779964944_i64];
_11 = !194_u8;
_7 = _8;
_9.1 = _1.1;
Goto(bb4)
}
bb4 = {
_7 = _8;
_9 = (_1.0, _1.1, _1.2);
_1.0 = [(-70229427081300042522746670777721371823_i128),144144545981120804155869940673902640945_i128,47771319478137342159884926978056806887_i128,62271283417412703765580903005453669845_i128,132466445172669373264932432124413948455_i128];
_7 = _8;
_1.1 = [3769814526_u32,2270347200_u32,2516316975_u32,1949573945_u32,3180438153_u32,634612922_u32,3230761006_u32];
_3 = _2;
_11 = 196_u8 & 60_u8;
_3 = !_2;
Goto(bb5)
}
bb5 = {
_14 = (3846608723_u32, _1.0);
_13 = _3;
_9.2 = -_1.2;
_14 = (48455395_u32, _9.0);
_16 = (-1189887613_i32) + 1566783714_i32;
_5 = _16 as i8;
_1 = (_9.0, _9.1, _9.2);
_19 = _11 as u16;
_10 = _19 as f32;
_14.1 = _9.0;
_20 = _9.2 as f64;
_4 = _5 | _5;
_3 = _13 + _13;
_15.fld0 = Adt44::Variant2 { fld0: _14.0,fld1: _20,fld2: (-126680335371914932495830107203133012110_i128) };
place!(Field::<u32>(Variant(_15.fld0, 2), 0)) = _14.0 >> _13;
_14.1 = _9.0;
match _14.0 {
0 => bb1,
1 => bb2,
2 => bb3,
48455395 => bb7,
_ => bb6
}
}
bb6 = {
_9.2 = 1_usize as f32;
_9.0 = _1.0;
_9 = (_1.0, _1.1, _1.2);
_1 = (_9.0, _9.1, _9.2);
_5 = -_4;
_3 = _2;
_4 = 26366279620681375130283201031589584272_u128 as i8;
RET = [2426299090888609071_i64,(-1624392091699658293_i64),5425411623666515562_i64,(-3219604580672200588_i64),7178046669928394355_i64,8065406327346897853_i64,(-599448416747094566_i64)];
_1 = _9;
RET = [4685814942372625235_i64,2830580312671932021_i64,8673844476300085672_i64,(-6961846028721369975_i64),(-5188555434962144540_i64),(-3599048599291455418_i64),(-203377645064662708_i64)];
_9 = (_1.0, _1.1, _1.2);
_5 = _4;
_7 = _8;
RET = [(-8101892380405808904_i64),(-8573901153890497820_i64),(-756171831099655698_i64),4912213869920990431_i64,(-5699036870697769050_i64),(-7370473156908155582_i64),441176959779964944_i64];
_11 = !194_u8;
_7 = _8;
_9.1 = _1.1;
Goto(bb4)
}
bb7 = {
_18 = -_16;
_14 = (Field::<u32>(Variant(_15.fld0, 2), 0), _9.0);
_21.fld2.0 = _4;
_18 = _16;
_9.0 = [163496788858380231707250355617032973264_i128,107914316051550696783462944949651319250_i128,(-6793573632692405448230454154959749323_i128),(-117832006350100266151520401642131266257_i128),(-92817738283506489174303227758528316348_i128)];
_1.0 = [34374329198110691610431336851173894692_i128,101566505699572570250598984299940511190_i128,(-79696499865150366654167649467283678353_i128),136378678173745800498174060679181603757_i128,(-49042945152876375675163550874733710651_i128)];
_20 = -Field::<f64>(Variant(_15.fld0, 2), 1);
_7 = _8;
_11 = _3 as u8;
_1 = _9;
_11 = 31440_i16 as u8;
place!(Field::<f64>(Variant(_15.fld0, 2), 1)) = _20;
_21.fld2 = (_5,);
RET = [(-2593551501754340017_i64),(-3785644941584694452_i64),(-5227968374202185422_i64),(-3872342889218087315_i64),5864711533276605283_i64,400589281928656063_i64,(-8507655549716245842_i64)];
_9.2 = _19 as f32;
place!(Field::<f64>(Variant(_15.fld0, 2), 1)) = _20;
_4 = -_21.fld2.0;
_2 = -_3;
_21.fld0 = true;
_22 = _1.2 * _9.2;
_20 = Field::<f64>(Variant(_15.fld0, 2), 1) + Field::<f64>(Variant(_15.fld0, 2), 1);
_1.0 = [(-164592308301355465982124452935865455595_i128),(-151115893580632391510486632881440363860_i128),(-97714036435612745063072485302334900619_i128),137674635781570591584275385702963025902_i128,(-71458010404144492630591352426861671178_i128)];
_24 = [(-124330210388311703556011116755276740941_i128),(-64585735301691421920118572084462657832_i128),151612151939469239455456168688808267400_i128,160079924011257639649580778712269301776_i128,(-60802976227551371987359577380697056646_i128)];
_7 = _8;
_1.2 = _10 * _22;
Goto(bb8)
}
bb8 = {
_11 = 120_u8;
_11 = 124_u8;
_15.fld0 = Adt44::Variant2 { fld0: _14.0,fld1: _20,fld2: (-51790297943388139555243967367922061000_i128) };
_24 = [(-12815451526782412877939023866980859066_i128),153529088578856182768331867799805343239_i128,(-71220249234757919824042900387189281489_i128),(-50092527665917070475172986435134557394_i128),14755837601353879431040990630594519624_i128];
_22 = _11 as f32;
RET = [(-6506543230597454440_i64),3753046930289776931_i64,(-2333111983608911902_i64),(-6052652884174329882_i64),(-8562130763692802509_i64),(-4493231664667575539_i64),5203752258092523830_i64];
_2 = _14.0 as isize;
match _11 {
124 => bb10,
_ => bb9
}
}
bb9 = {
_7 = _8;
_9 = (_1.0, _1.1, _1.2);
_1.0 = [(-70229427081300042522746670777721371823_i128),144144545981120804155869940673902640945_i128,47771319478137342159884926978056806887_i128,62271283417412703765580903005453669845_i128,132466445172669373264932432124413948455_i128];
_7 = _8;
_1.1 = [3769814526_u32,2270347200_u32,2516316975_u32,1949573945_u32,3180438153_u32,634612922_u32,3230761006_u32];
_3 = _2;
_11 = 196_u8 & 60_u8;
_3 = !_2;
Goto(bb5)
}
bb10 = {
_14.0 = !Field::<u32>(Variant(_15.fld0, 2), 0);
_21.fld1 = [_7];
_8 = _7;
_21.fld0 = true;
place!(Field::<i128>(Variant(_15.fld0, 2), 2)) = (-139472396397051229223977278324788317858_i128);
_21.fld1 = [_7];
_9.2 = _1.2;
_15.fld1 = 17633_i16;
_9.1 = [Field::<u32>(Variant(_15.fld0, 2), 0),Field::<u32>(Variant(_15.fld0, 2), 0),Field::<u32>(Variant(_15.fld0, 2), 0),Field::<u32>(Variant(_15.fld0, 2), 0),Field::<u32>(Variant(_15.fld0, 2), 0),Field::<u32>(Variant(_15.fld0, 2), 0),Field::<u32>(Variant(_15.fld0, 2), 0)];
_21.fld3 = RET;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).1.2 = _5;
place!(Field::<u8>(Variant(_15.fld0, 0), 4)) = _11 ^ _11;
_16 = Field::<u8>(Variant(_15.fld0, 0), 4) as i32;
_17 = _8;
place!(Field::<(i128,)>(Variant(_15.fld0, 0), 5)).0 = (-127976961643961994563818575211016443611_i128);
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).1.1 = _4 & Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).1.2;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).0 = Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).1.1;
place!(Field::<u8>(Variant(_15.fld0, 0), 4)) = _11;
match Field::<u8>(Variant(_15.fld0, 0), 4) {
0 => bb6,
124 => bb11,
_ => bb9
}
}
bb11 = {
place!(Field::<bool>(Variant(_15.fld0, 0), 0)) = _21.fld0;
_15.fld1 = 163928064268340463682050310465716724108_u128 as i16;
_21.fld1 = [_17];
_14.0 = 1177216049_u32;
_27 = _3;
_25 = _17;
_4 = -_21.fld2.0;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).1 = (158642075190710706603618280605621591564_u128, _21.fld2.0, Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).0);
_9.0 = _1.0;
_21.fld2 = (_4,);
_12 = _25;
place!(Field::<bool>(Variant(_15.fld0, 0), 0)) = _21.fld0 | _21.fld0;
place!(Field::<Adt43>(Variant(_15.fld0, 0), 6)) = Adt43::Variant0 { fld0: _24 };
_22 = _9.2 - _9.2;
_32 = (_14.0, _24);
Goto(bb12)
}
bb12 = {
_35.0 = _21.fld3;
_11 = !Field::<u8>(Variant(_15.fld0, 0), 4);
SetDiscriminant(Field::<Adt43>(Variant(_15.fld0, 0), 6), 2);
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).1.1 = _5 ^ Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).1.2;
place!(Field::<Adt43>(Variant(_15.fld0, 0), 6)) = Adt43::Variant3 { fld0: _9.1,fld1: _16,fld2: 1196950821839396303_u64 };
_14.1 = [Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0];
_24 = [Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0];
place!(Field::<(i128,)>(Variant(_15.fld0, 0), 5)) = ((-87441261887562513755813864715734159111_i128),);
_13 = !_3;
_7 = _25;
place!(Field::<*mut bool>(Variant(_15.fld0, 0), 1)) = core::ptr::addr_of_mut!(_21.fld0);
_21.fld3 = _35.0;
_1.2 = -_22;
_36 = !13730815285796552176_u64;
_8 = _17;
place!(Field::<i32>(Variant(place!(Field::<Adt43>(Variant(_15.fld0, 0), 6)), 3), 1)) = !_18;
_36 = Field::<(i128,)>(Variant(_15.fld0, 0), 5).0 as u64;
_21.fld2.0 = _18 as i8;
_8 = _17;
_1.0 = [Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,Field::<(i128,)>(Variant(_15.fld0, 0), 5).0];
_28 = (Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,);
_30 = _21.fld2.0 >> _3;
_34 = _1.2 + _22;
_4 = -Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).0;
_37 = (Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).1.0, _30, _30);
place!(Field::<i32>(Variant(place!(Field::<Adt43>(Variant(_15.fld0, 0), 6)), 3), 1)) = _18;
_1 = _9;
match _37.0 {
158642075190710706603618280605621591564 => bb13,
_ => bb11
}
}
bb13 = {
_11 = Field::<u8>(Variant(_15.fld0, 0), 4);
place!(Field::<isize>(Variant(_15.fld0, 0), 2)) = Field::<u8>(Variant(_15.fld0, 0), 4) as isize;
_39 = 5379589954464077632_i64;
_9.1 = Field::<[u32; 7]>(Variant(Field::<Adt43>(Variant(_15.fld0, 0), 6), 3), 0);
_28 = (Field::<(i128,)>(Variant(_15.fld0, 0), 5).0,);
_13 = !_3;
_1 = (_9.0, _9.1, _34);
_14 = _32;
place!(Field::<isize>(Variant(_15.fld0, 0), 2)) = _28.0 as isize;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).1.1 = _1.2 as i8;
_21.fld3 = RET;
_1 = _9;
_13 = !_3;
_9.1 = [_14.0,_32.0,_32.0,_32.0,_32.0,_32.0,_32.0];
_12 = _17;
Goto(bb14)
}
bb14 = {
_34 = _9.2;
_21.fld2 = (Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).0,);
_29 = _2 as i128;
_37.1 = !_37.2;
place!(Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3)).1.0 = _37.0;
_37 = Field::<(i8, (u128, i8, i8))>(Variant(_15.fld0, 0), 3).1;
_17 = _8;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(15_usize, 28_usize, Move(_28), 2_usize, Move(_2), 36_usize, Move(_36), 25_usize, Move(_25)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(15_usize, 30_usize, Move(_30), 14_usize, Move(_14), 39_usize, Move(_39), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(15_usize, 11_usize, Move(_11), 24_usize, Move(_24), 16_usize, Move(_16), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: isize,mut _13: isize,mut _14: isize,mut _15: isize) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _16: (i8,);
let _17: (i128, (([i64; 7],), u128, i16));
let _18: Adt42;
let _19: u32;
let _20: ([i64; 7],);
let _21: isize;
let _22: (i128,);
let _23: f32;
let _24: Adt50;
let _25: [i128; 5];
let _26: f32;
let _27: [char; 1];
let _28: ();
let _29: ();
{
RET = [(-8979272501266133148_i64),7178329412080064500_i64,4514313318066524837_i64,(-406033741295808154_i64),2386928381794209183_i64,(-4290847145449684143_i64),(-4233295753254760595_i64)];
_5 = '\u{324e9}' as isize;
_3 = _14 >> _1;
_5 = !_14;
_17.1.0 = (RET,);
_11 = _1;
_2 = -_5;
_16 = (110_i8,);
_17.1.0 = (RET,);
RET = [6709276746576842390_i64,4823284238616439153_i64,6999038677234054408_i64,(-7411559446842778527_i64),2979846066838506195_i64,(-7452171213060015084_i64),1183683155088181545_i64];
_2 = _10 - _13;
_12 = _3 ^ _8;
_16.0 = 26_i8;
_17.1.2 = !30230_i16;
_16.0 = 60_i8 ^ 25_i8;
_16 = (66_i8,);
_16.0 = (-55_i8);
_13 = 1_usize as isize;
_17.1.2 = (-21024_i16);
_13 = _1;
_17.0 = 32920240675325678766816350453565989992_i128 >> _10;
_17.1.1 = (-1538954786_i32) as u128;
_17.1.0 = (RET,);
match _16.0 {
0 => bb1,
340282366920938463463374607431768211401 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_17.1.0 = (RET,);
_17.1.1 = 0_usize as u128;
_16.0 = 14_i8;
_4 = !_11;
_11 = _4;
_3 = _9;
_17.1.0 = (RET,);
_10 = !_4;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_17.1.0.0 = RET;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_1 = _17.1.1 as isize;
match _17.1.2 {
0 => bb1,
340282366920938463463374607431768190432 => bb4,
_ => bb2
}
}
bb4 = {
_10 = _15 + _7;
_17.1.1 = 200052979264985247310721944318718261007_u128;
_17.1.2 = !(-1022_i16);
Call(RET = fn17(_7, _13, _5), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_9 = true as isize;
_10 = _3 ^ _7;
_17.0 = 59072387032631932282001656287500518401_i128 ^ 100551147853634678600058538748941246883_i128;
_16 = ((-25_i8),);
_17.1.0 = (RET,);
_8 = _2 | _3;
_20 = (RET,);
_21 = _8 + _4;
_22 = (_17.0,);
_5 = _7;
_7 = _17.1.1 as isize;
_1 = !_4;
_20.0 = [164712293161234895_i64,(-6760180747751916159_i64),7016843147425016973_i64,(-3065762661517274381_i64),2626825569733813559_i64,2877950254079181315_i64,7300451242956175124_i64];
_20.0 = _17.1.0.0;
match _17.1.1 {
0 => bb2,
1 => bb6,
200052979264985247310721944318718261007 => bb8,
_ => bb7
}
}
bb6 = {
Return()
}
bb7 = {
_17.1.0 = (RET,);
_17.1.1 = 0_usize as u128;
_16.0 = 14_i8;
_4 = !_11;
_11 = _4;
_3 = _9;
_17.1.0 = (RET,);
_10 = !_4;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_17.1.0.0 = RET;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_1 = _17.1.1 as isize;
match _17.1.2 {
0 => bb1,
340282366920938463463374607431768190432 => bb4,
_ => bb2
}
}
bb8 = {
RET = _20.0;
_19 = 371792417_u32;
_8 = _16.0 as isize;
_8 = _19 as isize;
_4 = _15;
_13 = _10;
_17.1.0 = (_20.0,);
_6 = _5;
_20.0 = _17.1.0.0;
_17.1.0 = (_20.0,);
_9 = _16.0 as isize;
_11 = _21;
_20.0 = [(-5780283552195781368_i64),6070651584686942748_i64,4729893623983109957_i64,3825575557672074569_i64,3319559335577464652_i64,(-6370170776336681079_i64),(-5884389159200295454_i64)];
_19 = _4 as u32;
_12 = _2 - _21;
_12 = -_10;
_2 = _5 ^ _15;
match _17.1.1 {
0 => bb2,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
200052979264985247310721944318718261007 => bb15,
_ => bb14
}
}
bb9 = {
_17.1.0 = (RET,);
_17.1.1 = 0_usize as u128;
_16.0 = 14_i8;
_4 = !_11;
_11 = _4;
_3 = _9;
_17.1.0 = (RET,);
_10 = !_4;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_17.1.0.0 = RET;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_1 = _17.1.1 as isize;
match _17.1.2 {
0 => bb1,
340282366920938463463374607431768190432 => bb4,
_ => bb2
}
}
bb10 = {
Return()
}
bb11 = {
_9 = true as isize;
_10 = _3 ^ _7;
_17.0 = 59072387032631932282001656287500518401_i128 ^ 100551147853634678600058538748941246883_i128;
_16 = ((-25_i8),);
_17.1.0 = (RET,);
_8 = _2 | _3;
_20 = (RET,);
_21 = _8 + _4;
_22 = (_17.0,);
_5 = _7;
_7 = _17.1.1 as isize;
_1 = !_4;
_20.0 = [164712293161234895_i64,(-6760180747751916159_i64),7016843147425016973_i64,(-3065762661517274381_i64),2626825569733813559_i64,2877950254079181315_i64,7300451242956175124_i64];
_20.0 = _17.1.0.0;
match _17.1.1 {
0 => bb2,
1 => bb6,
200052979264985247310721944318718261007 => bb8,
_ => bb7
}
}
bb12 = {
Return()
}
bb13 = {
_17.1.0 = (RET,);
_17.1.1 = 0_usize as u128;
_16.0 = 14_i8;
_4 = !_11;
_11 = _4;
_3 = _9;
_17.1.0 = (RET,);
_10 = !_4;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_17.1.0.0 = RET;
_18.fld0 = core::ptr::addr_of_mut!(_16.0);
_1 = _17.1.1 as isize;
match _17.1.2 {
0 => bb1,
340282366920938463463374607431768190432 => bb4,
_ => bb2
}
}
bb14 = {
Return()
}
bb15 = {
_9 = _15;
_6 = -_13;
_21 = -_14;
_14 = !_9;
_17.1.2 = 17822_i16;
_20 = (_17.1.0.0,);
RET = [(-4105571430248367531_i64),8841137418353705594_i64,5754092011033446712_i64,525716761422869557_i64,8025930904193692699_i64,7161432071174276867_i64,(-6043666318016269808_i64)];
Goto(bb16)
}
bb16 = {
Call(_28 = dump_var(16_usize, 8_usize, Move(_8), 10_usize, Move(_10), 5_usize, Move(_5), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(16_usize, 16_usize, Move(_16), 20_usize, Move(_20), 21_usize, Move(_21), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_28 = dump_var(16_usize, 2_usize, Move(_2), 9_usize, Move(_9), 29_usize, _29, 29_usize, _29), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: isize,mut _2: isize,mut _3: isize) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _4: isize;
let _5: Adt52;
let _6: char;
let _7: i128;
let _8: i16;
let _9: f32;
let _10: (i8, (u128, i8, i8));
let _11: f64;
let _12: Adt42;
let _13: ([i128; 5], [u32; 7], f32);
let _14: *mut bool;
let _15: [u32; 1];
let _16: isize;
let _17: f64;
let _18: *mut i8;
let _19: [i64; 7];
let _20: ();
let _21: ();
{
RET = [745472836531745850_i64,7755340920393587570_i64,(-7400953672079352555_i64),3705968658195717407_i64,388203873926655140_i64,7260945319031239750_i64,2745986909883588918_i64];
RET = [8892770268094837864_i64,(-1361829399783683438_i64),5845147045615982440_i64,(-1187776732193888076_i64),710208194110564071_i64,9007270606239144389_i64,(-7393618651623773496_i64)];
_3 = -_1;
RET = [(-9211474866022937694_i64),(-9139101618868596447_i64),(-9101255334141925308_i64),(-8785215672785086214_i64),2618535862165435687_i64,945677151407592574_i64,(-8667433354267804045_i64)];
_2 = false as isize;
RET = [1575607433437668447_i64,984162343690519724_i64,6116104453793044112_i64,8840905185003745943_i64,(-787225101254222148_i64),(-1359189571336538339_i64),4350995859952018647_i64];
_1 = _3;
RET = [(-1118043816259602454_i64),(-1771873900311561011_i64),(-4076870640123609908_i64),1296320677816802071_i64,274809640491113326_i64,5955944448952565707_i64,5264970141297848115_i64];
_2 = !_1;
_2 = 74955098629126647636747667336974805688_u128 as isize;
Call(_3 = fn18(_1, _1, _1, _1, _1, _1, _1, _1, _2, _1, _1, _1, _1, _1, RET, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 26832_i16 as isize;
RET = [3980994217644441821_i64,(-991136113557989602_i64),1218192237768789839_i64,(-8626444485527025270_i64),5725756725011115459_i64,8708308568385798266_i64,(-6165314354885015756_i64)];
RET = [(-8907736511248750452_i64),5150458033152064123_i64,(-7156063017287388692_i64),(-5674285283512390730_i64),2835172160092588299_i64,(-1949196625934745100_i64),2862040913416319940_i64];
RET = [5172940295640183391_i64,3909443002849866366_i64,6659132043631494046_i64,(-703462978225469180_i64),(-5209257698899614947_i64),(-7400493828562065577_i64),(-9213920910725920429_i64)];
RET = [(-5238619715537028698_i64),9005497553857621115_i64,6518903767280825683_i64,2199689926324237566_i64,8619688453960838317_i64,(-5989336255355154179_i64),(-6604880268911547285_i64)];
RET = [73110331713169288_i64,5921744038710271022_i64,1728728751875300291_i64,1182562161807426651_i64,757844367755707441_i64,8075281723135015743_i64,952941591927555687_i64];
_2 = _1;
_1 = 15051671071025458418_usize as isize;
RET = [(-9207805205971415016_i64),8720036509646228530_i64,(-6666406146193650872_i64),(-5407730937194133933_i64),6350634090840869501_i64,(-3979764648569172397_i64),(-7410541565262177673_i64)];
RET = [(-4889086996588777756_i64),5325717208951381532_i64,6135840274889368604_i64,(-5682136916204497351_i64),9124135490866987323_i64,(-7794720504291039052_i64),(-6080550474612437446_i64)];
_1 = -_2;
_1 = _3 | _3;
_4 = 17697242117293206407_u64 as isize;
_1 = _3;
RET = [6915149381564796233_i64,2945559023793322483_i64,923180998986334262_i64,449491210399658941_i64,7649455869017780485_i64,(-7341232269048752426_i64),8241261913420192328_i64];
_4 = _1;
_4 = (-4776404271099470757_i64) as isize;
RET = [(-8549411969143564261_i64),3153678066947616365_i64,1990616609957668936_i64,4585492761508236126_i64,2501189647992830996_i64,(-9106547964035243757_i64),(-3676744929831846701_i64)];
_2 = _1 | _3;
_4 = _3 * _3;
_4 = _1;
RET = [4567205862862288176_i64,2474753973953483144_i64,5277463372144110064_i64,(-6685944241227967338_i64),(-7660080676545481213_i64),(-3571050686489615196_i64),5719870659490090093_i64];
_4 = _1;
RET = [6647747370300777840_i64,(-2821880415496317739_i64),8688919110601469512_i64,(-354873467426031274_i64),(-6725556509642965333_i64),7475533689356980484_i64,7082041832536766941_i64];
_3 = _1;
RET = [(-2351477996043082009_i64),(-2879951120815873109_i64),(-5436629608988647511_i64),(-7943534690807041095_i64),(-6176129137290706039_i64),1461022409570198865_i64,(-767706957476891393_i64)];
RET = [(-6080612115619744011_i64),(-2160775000947028612_i64),(-6086919118618741166_i64),(-7591899713419259992_i64),6430794308170100363_i64,(-4763957598461547375_i64),14109224710452172_i64];
Goto(bb2)
}
bb2 = {
_1 = -_3;
_3 = _2 & _4;
_1 = (-8434940712971649400_i64) as isize;
_6 = '\u{7281c}';
_4 = _3 + _3;
RET = [8663879669520327388_i64,6374098799596472454_i64,8491598187074468959_i64,5876703805304952587_i64,(-2692503548265618883_i64),(-4557339847561964426_i64),(-2957357004104264410_i64)];
_3 = _4 | _4;
_6 = '\u{d5a5e}';
_4 = 184_u8 as isize;
_6 = '\u{489a2}';
_6 = '\u{d66d6}';
_1 = 9508650165300253021_u64 as isize;
Call(_4 = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = [(-2243519025337899475_i64),6789865640485825286_i64,(-7659268489510169807_i64),8658404969567368492_i64,(-8454531245549836767_i64),2827254220594794689_i64,(-2244923094250289661_i64)];
_10.1.1 = (-47_i8);
_7 = (-6238_i16) as i128;
RET = [(-3307518927492386565_i64),(-2594946767848513422_i64),10958338448334453_i64,8748948179248824368_i64,(-5930786619502797052_i64),(-5450907110967345786_i64),3729106717980071137_i64];
_10.1 = (139501966419598434942926039079460358393_u128, (-10_i8), 40_i8);
_6 = '\u{cb1d}';
_6 = '\u{e322}';
_2 = _3 * _3;
Call(_8 = core::intrinsics::bswap(29497_i16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = '\u{450e9}';
_4 = !_3;
RET = [(-2016699634824587073_i64),(-4357646985158056411_i64),(-1025810815257164741_i64),3140418893542565236_i64,(-1082332146979430190_i64),(-7787259668600047335_i64),(-921453520959863454_i64)];
RET = [(-4717514480579785083_i64),528159361675513639_i64,(-7635433863684701195_i64),(-5496529177763805893_i64),(-6333437972262913535_i64),4809886514995136646_i64,(-6952532171923990252_i64)];
_12.fld0 = core::ptr::addr_of_mut!(_10.0);
_10.1.0 = 143938800716705113849367164922347328290_u128 - 178983270102600980576631848299436661327_u128;
_10.1 = (213893999838878265473770623211798828399_u128, (-4_i8), 5_i8);
_10.1.1 = _10.1.2;
_4 = _2 & _2;
_2 = !_3;
_10.1.0 = 87311066135077996434866887582767640620_u128 & 335911428297738934662086616639935667581_u128;
_10.1.1 = (-14021_i16) as i8;
_2 = _3 + _3;
_11 = 4281410782_u32 as f64;
_10.0 = 1418_i16 as i8;
_11 = 177_u8 as f64;
_9 = 81_u8 as f32;
Goto(bb5)
}
bb5 = {
_10.1 = (175264802304343636815725188426644016711_u128, _10.0, _10.0);
_13.0 = [_7,_7,_7,_7,_7];
RET = [(-2755728335341286842_i64),(-596970152666027988_i64),8311172288142766953_i64,4992843644342980942_i64,1963167463371012777_i64,6063498742749679307_i64,(-6158365641579053248_i64)];
_4 = 150_u8 as isize;
_13.2 = -_9;
_3 = -_2;
_7 = !(-124375265199082122900441603289650159669_i128);
_12.fld0 = core::ptr::addr_of_mut!(_10.1.2);
_13.1 = [1820966080_u32,866375606_u32,2084956682_u32,1113077308_u32,790447217_u32,1445266701_u32,3917746351_u32];
_7 = (-116224838410223783014985269201308648828_i128);
_10.1 = (86972190422491612534597608319506175175_u128, _10.0, _10.0);
_4 = -_3;
match _10.1.0 {
0 => bb6,
86972190422491612534597608319506175175 => bb8,
_ => bb7
}
}
bb6 = {
_1 = -_3;
_3 = _2 & _4;
_1 = (-8434940712971649400_i64) as isize;
_6 = '\u{7281c}';
_4 = _3 + _3;
RET = [8663879669520327388_i64,6374098799596472454_i64,8491598187074468959_i64,5876703805304952587_i64,(-2692503548265618883_i64),(-4557339847561964426_i64),(-2957357004104264410_i64)];
_3 = _4 | _4;
_6 = '\u{d5a5e}';
_4 = 184_u8 as isize;
_6 = '\u{489a2}';
_6 = '\u{d66d6}';
_1 = 9508650165300253021_u64 as isize;
Call(_4 = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
RET = [(-2243519025337899475_i64),6789865640485825286_i64,(-7659268489510169807_i64),8658404969567368492_i64,(-8454531245549836767_i64),2827254220594794689_i64,(-2244923094250289661_i64)];
_10.1.1 = (-47_i8);
_7 = (-6238_i16) as i128;
RET = [(-3307518927492386565_i64),(-2594946767848513422_i64),10958338448334453_i64,8748948179248824368_i64,(-5930786619502797052_i64),(-5450907110967345786_i64),3729106717980071137_i64];
_10.1 = (139501966419598434942926039079460358393_u128, (-10_i8), 40_i8);
_6 = '\u{cb1d}';
_6 = '\u{e322}';
_2 = _3 * _3;
Call(_8 = core::intrinsics::bswap(29497_i16), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_13.2 = -_9;
_10.1.2 = _10.0;
_7 = 53567120176555010470027386732367956469_i128;
_6 = '\u{5af22}';
RET = [(-1579256355728271961_i64),8763843983801196581_i64,(-491118277789153832_i64),844207607242347740_i64,4232579659215575438_i64,(-8871574319204452258_i64),(-2894645732730302390_i64)];
_4 = _2;
_12.fld0 = core::ptr::addr_of_mut!(_10.1.1);
_12.fld0 = core::ptr::addr_of_mut!(_10.1.2);
_10.0 = _10.1.1;
_4 = _11 as isize;
_13.2 = _9;
_7 = (-126141861236241042912823240907849905984_i128) - 44764916462316832992521166892192829577_i128;
_13.1 = [3535923898_u32,163890821_u32,2029498899_u32,17218689_u32,3191608592_u32,2282764114_u32,729088684_u32];
_6 = '\u{a0e5a}';
_2 = (-2350855297652821417_i64) as isize;
_15 = [3112243502_u32];
match _10.1.0 {
0 => bb1,
1 => bb7,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
86972190422491612534597608319506175175 => bb15,
_ => bb14
}
}
bb9 = {
RET = [(-2243519025337899475_i64),6789865640485825286_i64,(-7659268489510169807_i64),8658404969567368492_i64,(-8454531245549836767_i64),2827254220594794689_i64,(-2244923094250289661_i64)];
_10.1.1 = (-47_i8);
_7 = (-6238_i16) as i128;
RET = [(-3307518927492386565_i64),(-2594946767848513422_i64),10958338448334453_i64,8748948179248824368_i64,(-5930786619502797052_i64),(-5450907110967345786_i64),3729106717980071137_i64];
_10.1 = (139501966419598434942926039079460358393_u128, (-10_i8), 40_i8);
_6 = '\u{cb1d}';
_6 = '\u{e322}';
_2 = _3 * _3;
Call(_8 = core::intrinsics::bswap(29497_i16), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_1 = -_3;
_3 = _2 & _4;
_1 = (-8434940712971649400_i64) as isize;
_6 = '\u{7281c}';
_4 = _3 + _3;
RET = [8663879669520327388_i64,6374098799596472454_i64,8491598187074468959_i64,5876703805304952587_i64,(-2692503548265618883_i64),(-4557339847561964426_i64),(-2957357004104264410_i64)];
_3 = _4 | _4;
_6 = '\u{d5a5e}';
_4 = 184_u8 as isize;
_6 = '\u{489a2}';
_6 = '\u{d66d6}';
_1 = 9508650165300253021_u64 as isize;
Call(_4 = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_10.1 = (175264802304343636815725188426644016711_u128, _10.0, _10.0);
_13.0 = [_7,_7,_7,_7,_7];
RET = [(-2755728335341286842_i64),(-596970152666027988_i64),8311172288142766953_i64,4992843644342980942_i64,1963167463371012777_i64,6063498742749679307_i64,(-6158365641579053248_i64)];
_4 = 150_u8 as isize;
_13.2 = -_9;
_3 = -_2;
_7 = !(-124375265199082122900441603289650159669_i128);
_12.fld0 = core::ptr::addr_of_mut!(_10.1.2);
_13.1 = [1820966080_u32,866375606_u32,2084956682_u32,1113077308_u32,790447217_u32,1445266701_u32,3917746351_u32];
_7 = (-116224838410223783014985269201308648828_i128);
_10.1 = (86972190422491612534597608319506175175_u128, _10.0, _10.0);
_4 = -_3;
match _10.1.0 {
0 => bb6,
86972190422491612534597608319506175175 => bb8,
_ => bb7
}
}
bb12 = {
_6 = '\u{450e9}';
_4 = !_3;
RET = [(-2016699634824587073_i64),(-4357646985158056411_i64),(-1025810815257164741_i64),3140418893542565236_i64,(-1082332146979430190_i64),(-7787259668600047335_i64),(-921453520959863454_i64)];
RET = [(-4717514480579785083_i64),528159361675513639_i64,(-7635433863684701195_i64),(-5496529177763805893_i64),(-6333437972262913535_i64),4809886514995136646_i64,(-6952532171923990252_i64)];
_12.fld0 = core::ptr::addr_of_mut!(_10.0);
_10.1.0 = 143938800716705113849367164922347328290_u128 - 178983270102600980576631848299436661327_u128;
_10.1 = (213893999838878265473770623211798828399_u128, (-4_i8), 5_i8);
_10.1.1 = _10.1.2;
_4 = _2 & _2;
_2 = !_3;
_10.1.0 = 87311066135077996434866887582767640620_u128 & 335911428297738934662086616639935667581_u128;
_10.1.1 = (-14021_i16) as i8;
_2 = _3 + _3;
_11 = 4281410782_u32 as f64;
_10.0 = 1418_i16 as i8;
_11 = 177_u8 as f64;
_9 = 81_u8 as f32;
Goto(bb5)
}
bb13 = {
_2 = 26832_i16 as isize;
RET = [3980994217644441821_i64,(-991136113557989602_i64),1218192237768789839_i64,(-8626444485527025270_i64),5725756725011115459_i64,8708308568385798266_i64,(-6165314354885015756_i64)];
RET = [(-8907736511248750452_i64),5150458033152064123_i64,(-7156063017287388692_i64),(-5674285283512390730_i64),2835172160092588299_i64,(-1949196625934745100_i64),2862040913416319940_i64];
RET = [5172940295640183391_i64,3909443002849866366_i64,6659132043631494046_i64,(-703462978225469180_i64),(-5209257698899614947_i64),(-7400493828562065577_i64),(-9213920910725920429_i64)];
RET = [(-5238619715537028698_i64),9005497553857621115_i64,6518903767280825683_i64,2199689926324237566_i64,8619688453960838317_i64,(-5989336255355154179_i64),(-6604880268911547285_i64)];
RET = [73110331713169288_i64,5921744038710271022_i64,1728728751875300291_i64,1182562161807426651_i64,757844367755707441_i64,8075281723135015743_i64,952941591927555687_i64];
_2 = _1;
_1 = 15051671071025458418_usize as isize;
RET = [(-9207805205971415016_i64),8720036509646228530_i64,(-6666406146193650872_i64),(-5407730937194133933_i64),6350634090840869501_i64,(-3979764648569172397_i64),(-7410541565262177673_i64)];
RET = [(-4889086996588777756_i64),5325717208951381532_i64,6135840274889368604_i64,(-5682136916204497351_i64),9124135490866987323_i64,(-7794720504291039052_i64),(-6080550474612437446_i64)];
_1 = -_2;
_1 = _3 | _3;
_4 = 17697242117293206407_u64 as isize;
_1 = _3;
RET = [6915149381564796233_i64,2945559023793322483_i64,923180998986334262_i64,449491210399658941_i64,7649455869017780485_i64,(-7341232269048752426_i64),8241261913420192328_i64];
_4 = _1;
_4 = (-4776404271099470757_i64) as isize;
RET = [(-8549411969143564261_i64),3153678066947616365_i64,1990616609957668936_i64,4585492761508236126_i64,2501189647992830996_i64,(-9106547964035243757_i64),(-3676744929831846701_i64)];
_2 = _1 | _3;
_4 = _3 * _3;
_4 = _1;
RET = [4567205862862288176_i64,2474753973953483144_i64,5277463372144110064_i64,(-6685944241227967338_i64),(-7660080676545481213_i64),(-3571050686489615196_i64),5719870659490090093_i64];
_4 = _1;
RET = [6647747370300777840_i64,(-2821880415496317739_i64),8688919110601469512_i64,(-354873467426031274_i64),(-6725556509642965333_i64),7475533689356980484_i64,7082041832536766941_i64];
_3 = _1;
RET = [(-2351477996043082009_i64),(-2879951120815873109_i64),(-5436629608988647511_i64),(-7943534690807041095_i64),(-6176129137290706039_i64),1461022409570198865_i64,(-767706957476891393_i64)];
RET = [(-6080612115619744011_i64),(-2160775000947028612_i64),(-6086919118618741166_i64),(-7591899713419259992_i64),6430794308170100363_i64,(-4763957598461547375_i64),14109224710452172_i64];
Goto(bb2)
}
bb14 = {
_1 = -_3;
_3 = _2 & _4;
_1 = (-8434940712971649400_i64) as isize;
_6 = '\u{7281c}';
_4 = _3 + _3;
RET = [8663879669520327388_i64,6374098799596472454_i64,8491598187074468959_i64,5876703805304952587_i64,(-2692503548265618883_i64),(-4557339847561964426_i64),(-2957357004104264410_i64)];
_3 = _4 | _4;
_6 = '\u{d5a5e}';
_4 = 184_u8 as isize;
_6 = '\u{489a2}';
_6 = '\u{d66d6}';
_1 = 9508650165300253021_u64 as isize;
Call(_4 = core::intrinsics::bswap(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_6 = '\u{cc5f3}';
_16 = _7 as isize;
_1 = _3 | _3;
_8 = (-7637_i16);
_12.fld0 = core::ptr::addr_of_mut!(_10.1.1);
_6 = '\u{dfacc}';
_15 = [3112459333_u32];
_13.1 = [2426204480_u32,784882368_u32,3347166988_u32,1902009843_u32,2342794018_u32,3173216176_u32,489648883_u32];
_13.2 = _10.1.1 as f32;
_13.2 = _9;
_10.1.2 = _6 as i8;
_6 = '\u{8d99d}';
Goto(bb16)
}
bb16 = {
Call(_20 = dump_var(17_usize, 6_usize, Move(_6), 10_usize, Move(_10), 7_usize, Move(_7), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_20 = dump_var(17_usize, 8_usize, Move(_8), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: isize,mut _13: isize,mut _14: isize,mut _15: [i64; 7],mut _16: isize) -> isize {
mir! {
type RET = isize;
let _17: f32;
let _18: Adt48;
let _19: (i128, (([i64; 7],), u128, i16));
let _20: Adt50;
let _21: ();
let _22: ();
{
_8 = _4;
_5 = !_6;
_7 = _11;
_5 = _4;
_10 = _14 * _7;
_4 = 36003_u16 as isize;
Call(_8 = core::intrinsics::transmute(_1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _6;
RET = !_2;
_18 = Adt48::Variant1 { fld0: _11 };
_1 = _2;
Goto(bb2)
}
bb2 = {
Call(_21 = dump_var(18_usize, 14_usize, Move(_14), 6_usize, Move(_6), 5_usize, Move(_5), 10_usize, Move(_10)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_21 = dump_var(18_usize, 1_usize, Move(_1), 11_usize, Move(_11), 16_usize, Move(_16), 2_usize, Move(_2)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: isize,mut _2: isize,mut _3: i128) -> (([i64; 7],), u128, i16) {
mir! {
type RET = (([i64; 7],), u128, i16);
let _4: f32;
let _5: Adt55;
let _6: [u32; 1];
let _7: (i128,);
let _8: ([i128; 5], [u32; 7], f32);
let _9: [u32; 1];
let _10: f32;
let _11: char;
let _12: u32;
let _13: (u128, i8, i8);
let _14: (u16, [u16; 3]);
let _15: char;
let _16: f64;
let _17: [i64; 7];
let _18: [u32; 7];
let _19: i16;
let _20: i128;
let _21: isize;
let _22: f64;
let _23: *mut f32;
let _24: *mut usize;
let _25: char;
let _26: ();
let _27: ();
{
RET.0.0 = [4006927142830421153_i64,(-2101077229711758655_i64),388126251583278512_i64,2871723445272668168_i64,9061117618082964020_i64,5706868505367212523_i64,4850330289867961553_i64];
_6 = [4223290525_u32];
RET.0.0 = [(-7446952294394282485_i64),(-3316485084124263831_i64),(-5448510389967543628_i64),(-2739942301795287429_i64),7851982827347755368_i64,(-4379392774119406696_i64),(-3356690420724834743_i64)];
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
212830342833494327679542640519616647953 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = [3061166286_u32];
_8.2 = 2178892314_u32 as f32;
_1 = _2 << _2;
RET.1 = !48130647730125230796291792714153240096_u128;
Goto(bb8)
}
bb8 = {
RET.2 = _3 as i16;
_7 = (_3,);
_4 = -_8.2;
_8.0 = [_7.0,_3,_3,_3,_7.0];
match _3 {
0 => bb1,
1 => bb9,
212830342833494327679542640519616647953 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_8.1 = [521291102_u32,1946988828_u32,3967869836_u32,3492431804_u32,1929960486_u32,2425145975_u32,1074383808_u32];
_11 = '\u{a2cc}';
_7 = (_3,);
_9 = _6;
RET.0.0 = [(-6200965723678679548_i64),5083885137570246502_i64,7849327560375906046_i64,(-3333840372154050439_i64),(-6108209356397733326_i64),(-7038347444434966794_i64),5154311030885063519_i64];
_4 = -_8.2;
_8.0 = [_3,_3,_3,_7.0,_7.0];
_3 = _7.0 & _7.0;
_13 = (RET.1, (-50_i8), 43_i8);
_9 = [2097900258_u32];
_8.0 = [_3,_3,_3,_3,_3];
RET.2 = !11580_i16;
_4 = _8.2 * _8.2;
Call(_7.0 = core::intrinsics::bswap(_3), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
RET.0.0 = [(-7162817571102287629_i64),(-8561350465883066113_i64),6314730942647716493_i64,7147694130681729856_i64,9204344553832271513_i64,8724440757750877432_i64,6243899931085158459_i64];
_8.1 = [535211146_u32,3053331805_u32,2006442697_u32,1050484233_u32,2585767427_u32,1886427136_u32,1002108781_u32];
_12 = 50996_u16 as u32;
_14.0 = !8304_u16;
_13 = (RET.1, (-125_i8), 74_i8);
RET.2 = !(-5371_i16);
_14.1 = [_14.0,_14.0,_14.0];
_4 = -_8.2;
RET.2 = (-30072_i16) * (-12831_i16);
RET.2 = -15551_i16;
RET.2 = _12 as i16;
match _13.2 {
74 => bb13,
_ => bb9
}
}
bb13 = {
RET.0.0 = [6743019516831263762_i64,(-5405385088638313063_i64),3037856648093625977_i64,8513381525778783158_i64,712515698896233145_i64,(-247771475278845473_i64),3785097548926757522_i64];
RET.1 = _13.0 & _13.0;
_8.0 = [_7.0,_7.0,_7.0,_3,_7.0];
_8.0 = [_3,_3,_7.0,_3,_3];
_3 = RET.2 as i128;
_2 = 6_usize as isize;
_4 = _8.2 * _8.2;
_8.2 = _4;
_14.1 = [_14.0,_14.0,_14.0];
_11 = '\u{2ed03}';
_7.0 = _3 ^ _3;
RET.2 = (-14643_i16) & 720_i16;
_8.2 = _12 as f32;
_1 = _2 ^ _2;
_13 = (RET.1, (-52_i8), 36_i8);
_18 = [_12,_12,_12,_12,_12,_12,_12];
_6 = _9;
_11 = '\u{8836c}';
_4 = _8.2;
_18 = _8.1;
_17 = [6346098650189519868_i64,(-8656921831046122029_i64),3814513928651240902_i64,(-2630325220984023253_i64),3485781060374126113_i64,(-138839650618816170_i64),(-8258931785890700224_i64)];
Call(_6 = core::intrinsics::transmute(_11), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_3 = _7.0;
_19 = RET.2 - RET.2;
_15 = _11;
_17 = RET.0.0;
_4 = _14.0 as f32;
RET.0.0 = _17;
_13.1 = _13.2 | _13.2;
_14.1 = [_14.0,_14.0,_14.0];
_6 = [_12];
RET.2 = !_19;
RET.2 = _12 as i16;
_22 = 180_u8 as f64;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(19_usize, 19_usize, Move(_19), 14_usize, Move(_14), 9_usize, Move(_9), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(19_usize, 2_usize, Move(_2), 13_usize, Move(_13), 11_usize, Move(_11), 27_usize, _27), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{469a6}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(3564367350_u32), std::hint::black_box(4604_i16), std::hint::black_box((-1094279053_i32)), std::hint::black_box((-924594174717823529_i64)), std::hint::black_box(33380972245311223545614007580505557894_i128), std::hint::black_box(7_usize), std::hint::black_box(146_u8), std::hint::black_box(50233_u16));
                
            }
#[derive(Debug)]
pub struct Adt42 {
fld0: *mut i8,
}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: [i128; 5],

},
Variant1{
fld0: bool,
fld1: char,
fld2: (([i64; 7],), u128, i16),
fld3: [u16; 3],
fld4: i16,
fld5: ([i64; 7],),

},
Variant2{
fld0: Adt42,
fld1: (i8, (u128, i8, i8)),
fld2: i32,
fld3: [i64; 7],

},
Variant3{
fld0: [u32; 7],
fld1: i32,
fld2: u64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: bool,
fld1: *mut bool,
fld2: isize,
fld3: (i8, (u128, i8, i8)),
fld4: u8,
fld5: (i128,),
fld6: Adt43,

},
Variant1{
fld0: (i8,),
fld1: *const (u128, i8, i8),
fld2: [u32; 1],
fld3: i128,

},
Variant2{
fld0: u32,
fld1: f64,
fld2: i128,

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: (u16, [u16; 3]),
fld1: char,
fld2: (u128, i8, i8),
fld3: i8,
fld4: *mut bool,

},
Variant1{
fld0: (u32, [i128; 5]),
fld1: char,
fld2: (u16, [u16; 3]),
fld3: i128,
fld4: ([i64; 7],),

},
Variant2{
fld0: (u32, [i128; 5]),
fld1: ([i64; 7],),

},
Variant3{
fld0: *mut f32,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: *mut bool,
fld1: (i128,),
fld2: u32,
fld3: i8,
fld4: *const u32,
fld5: (([i64; 7],), u128, i16),

},
Variant1{
fld0: Adt44,
fld1: char,
fld2: isize,
fld3: i128,
fld4: *mut f32,
fld5: *const i64,

},
Variant2{
fld0: (i8, (u128, i8, i8)),
fld1: [u16; 3],
fld2: ([i64; 7],),
fld3: i8,
fld4: i16,

},
Variant3{
fld0: bool,
fld1: *const i64,
fld2: u64,
fld3: *const (u128, i8, i8),
fld4: u32,
fld5: (i8, (u128, i8, i8)),
fld6: [i128; 5],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: bool,
fld1: *mut bool,
fld2: (i8, (u128, i8, i8)),
fld3: (i128,),
fld4: i128,
fld5: ([i64; 7],),

},
Variant1{
fld0: (i128, (([i64; 7],), u128, i16)),

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: i8,

},
Variant1{
fld0: isize,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: u128,
fld1: [u32; 7],
fld2: u16,
fld3: f32,
fld4: *mut bool,
fld5: [u8; 1],
fld6: i64,
fld7: Adt47,

},
Variant1{
fld0: (i128,),
fld1: [char; 1],
fld2: [i64; 7],
fld3: Adt42,
fld4: Adt46,
fld5: Adt48,
fld6: (i8, (u128, i8, i8)),
fld7: *const (u128, i8, i8),

},
Variant2{
fld0: [u32; 1],

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: [u32; 7],
fld1: *const (u128, i8, i8),
fld2: [u16; 3],
fld3: u16,
fld4: i16,
fld5: i32,
fld6: i64,

},
Variant1{
fld0: Adt43,
fld1: char,
fld2: usize,
fld3: Adt45,
fld4: i16,
fld5: u32,
fld6: Adt47,
fld7: *const u32,

}}
#[derive(Debug)]
pub struct Adt51 {
fld0: bool,
fld1: [char; 1],
fld2: (i8,),
fld3: [i64; 7],
fld4: Adt46,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: u128,
fld1: f64,
fld2: (i8, (u128, i8, i8)),
fld3: i8,
fld4: Adt43,
fld5: i32,
fld6: *const u32,

},
Variant1{
fld0: bool,
fld1: f64,
fld2: Adt45,
fld3: (u32, [i128; 5]),

}}
#[derive(Debug)]
pub struct Adt53 {
fld0: Adt44,
fld1: i16,
}
#[derive(Debug)]
pub struct Adt54 {
fld0: *mut usize,
fld1: usize,
fld2: isize,
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: ([i64; 7],),
fld1: Adt43,
fld2: Adt48,
fld3: [u32; 1],

},
Variant1{
fld0: *mut usize,
fld1: u32,

},
Variant2{
fld0: bool,
fld1: [char; 1],
fld2: i128,
fld3: (i128, (([i64; 7],), u128, i16)),
fld4: *mut usize,
fld5: (u128, i8, i8),
fld6: Adt47,

},
Variant3{
fld0: *mut i8,
fld1: (i8,),
fld2: *const i64,
fld3: (u128, i8, i8),
fld4: *mut usize,
fld5: Adt47,
fld6: u32,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: u64,
fld1: (i128, (([i64; 7],), u128, i16)),
fld2: *const u32,
fld3: *const (u128, i8, i8),
fld4: *mut f32,

},
Variant1{
fld0: *mut bool,
fld1: f64,
fld2: isize,
fld3: Adt55,
fld4: (i8,),
fld5: ([i64; 7],),
fld6: (u16, [u16; 3]),
fld7: *mut usize,

},
Variant2{
fld0: bool,
fld1: [u16; 3],
fld2: *const (u128, i8, i8),
fld3: (u32, [i128; 5]),
fld4: (i128,),
fld5: i32,
fld6: *const u32,

},
Variant3{
fld0: *mut i8,
fld1: u64,
fld2: Adt51,
fld3: (u128, i8, i8),

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt55,
fld1: char,
fld2: u8,
fld3: Adt43,
fld4: (i8, (u128, i8, i8)),
fld5: (u16, [u16; 3]),
fld6: f32,
fld7: Adt50,

},
Variant1{
fld0: *const (u128, i8, i8),
fld1: (i128,),
fld2: Adt48,

},
Variant2{
fld0: u64,
fld1: (u128, i8, i8),
fld2: u128,
fld3: Adt46,
fld4: i128,
fld5: i32,
fld6: Adt56,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: (u128, i8, i8),
fld1: char,
fld2: *const i64,
fld3: Adt57,
fld4: Adt49,
fld5: Adt43,
fld6: Adt52,

},
Variant1{
fld0: [u8; 1],
fld1: char,
fld2: u16,
fld3: (i8,),
fld4: [u32; 7],
fld5: i128,

},
Variant2{
fld0: Adt54,
fld1: [char; 1],
fld2: (i8, (u128, i8, i8)),

}}

