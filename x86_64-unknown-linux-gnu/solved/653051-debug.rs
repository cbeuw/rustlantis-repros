#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u64,mut _3: i32,mut _4: i64,mut _5: i16) -> i8 {
mir! {
type RET = i8;
let _6: bool;
let _7: Adt57;
let _8: [i32; 4];
let _9: (char, ([i16; 5], isize, i128, f64), isize);
let _10: [i16; 5];
let _11: u128;
let _12: u64;
let _13: f32;
let _14: ([i32; 4],);
let _15: char;
let _16: ([i32; 4],);
let _17: Adt52;
let _18: bool;
let _19: [i128; 4];
let _20: i64;
let _21: f64;
let _22: [u32; 3];
let _23: i32;
let _24: isize;
let _25: *const f32;
let _26: f32;
let _27: usize;
let _28: u32;
let _29: Adt55;
let _30: (char,);
let _31: isize;
let _32: Adt49;
let _33: Adt49;
let _34: bool;
let _35: (f32,);
let _36: ();
let _37: ();
{
_5 = 20438_i16;
RET = 297632958702438788994719562631170733760_u128 as i8;
_2 = !4548477360085689622_u64;
RET = 165775249295860880399983570830915926928_u128 as i8;
_8 = [(-596893566_i32),1105575797_i32,(-418870075_i32),1174585065_i32];
_1 = !true;
_4 = (-4327127016162397163_i64);
_9.0 = '\u{9a776}';
_1 = _2 > _2;
_4 = 3969985158048789493_i64 & 7546524263914105782_i64;
Goto(bb1)
}
bb1 = {
RET = (-78_i8);
_9.1.0 = [_5,_5,_5,_5,_5];
_3 = (-342053291_i32) << _5;
_6 = _1 ^ _1;
_9.1.0 = [_5,_5,_5,_5,_5];
Goto(bb2)
}
bb2 = {
_6 = _1 >= _1;
_12 = _2 - _2;
_12 = _2 * _2;
_9.1.2 = !(-6549209593472895857907764003260031905_i128);
_2 = !_12;
_15 = _9.0;
_9.2 = _5 as isize;
_14 = (_8,);
RET = (-26_i8);
_10 = [_5,_5,_5,_5,_5];
_16 = (_8,);
_14 = _16;
_2 = _3 as u64;
_13 = _12 as f32;
_9.1.3 = RET as f64;
_2 = _12 ^ _12;
_8 = [_3,_3,_3,_3];
_6 = !_1;
_17.fld1.2 = _9.1.2 + _9.1.2;
Call(RET = fn1(_12, _14.0, _2, _2, _3, _14.0, _14, _16.0, _14.0, _12, _4, _9.2, _9.1.2, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_16.0 = _14.0;
_9.1.2 = _6 as i128;
_11 = 79573305641729863779862303735763617421_u128 << _9.2;
_4 = (-2496905935507300079_i64) | (-6980051748271943868_i64);
_6 = _1 > _1;
_9.2 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_12 = _2 >> _4;
_17.fld1.3 = _2 as f64;
_16 = (_14.0,);
_17.fld1.3 = _5 as f64;
Goto(bb4)
}
bb4 = {
_17.fld1.3 = _3 as f64;
_17.fld1.1 = RET as isize;
_2 = _12;
_14 = (_16.0,);
_10 = [_5,_5,_5,_5,_5];
_9.1.3 = -_17.fld1.3;
_3 = 565569332_i32;
_17.fld0 = 152_u8;
_5 = 30446_i16;
_9.1.0 = [_5,_5,_5,_5,_5];
_4 = _12 as i64;
RET = _11 as i8;
_17.fld1.3 = _9.1.3;
_12 = _2;
_9.2 = _4 as isize;
_1 = !_6;
_15 = _9.0;
RET = _9.0 as i8;
_13 = _5 as f32;
_12 = _1 as u64;
_12 = _2 - _2;
_5 = 28811_i16;
Goto(bb5)
}
bb5 = {
_15 = _9.0;
RET = (-90_i8);
_1 = !_6;
_17.fld1.1 = _9.2 + _9.2;
_9.1.1 = _9.1.2 as isize;
_9.1 = (_10, _17.fld1.1, _17.fld1.2, _17.fld1.3);
_16 = (_8,);
_17.fld1 = (_9.1.0, _9.1.1, _9.1.2, _9.1.3);
_5 = -25617_i16;
_9.1.2 = 10607980219068966939_usize as i128;
_18 = _1;
_23 = 2236574456_u32 as i32;
_9 = (_15, _17.fld1, _17.fld1.1);
Goto(bb6)
}
bb6 = {
_2 = !_12;
match _17.fld0 {
0 => bb1,
1 => bb4,
152 => bb7,
_ => bb3
}
}
bb7 = {
_20 = _4 - _4;
_22 = [595791427_u32,4037798071_u32,2852450748_u32];
_2 = _1 as u64;
_28 = 1083546801_u32;
_15 = _9.0;
_8 = [_23,_3,_23,_3];
_15 = _9.0;
_11 = 118251023781586657092035658354404335110_u128;
_14.0 = _16.0;
_1 = _20 >= _20;
_17.fld1.3 = _28 as f64;
_12 = _20 as u64;
_17.fld2 = core::ptr::addr_of!(_27);
_17.fld1 = (_9.1.0, _9.1.1, _9.1.2, _9.1.3);
_9.1.3 = -_17.fld1.3;
match _11 {
118251023781586657092035658354404335110 => bb9,
_ => bb8
}
}
bb8 = {
_17.fld1.3 = _3 as f64;
_17.fld1.1 = RET as isize;
_2 = _12;
_14 = (_16.0,);
_10 = [_5,_5,_5,_5,_5];
_9.1.3 = -_17.fld1.3;
_3 = 565569332_i32;
_17.fld0 = 152_u8;
_5 = 30446_i16;
_9.1.0 = [_5,_5,_5,_5,_5];
_4 = _12 as i64;
RET = _11 as i8;
_17.fld1.3 = _9.1.3;
_12 = _2;
_9.2 = _4 as isize;
_1 = !_6;
_15 = _9.0;
RET = _9.0 as i8;
_13 = _5 as f32;
_12 = _1 as u64;
_12 = _2 - _2;
_5 = 28811_i16;
Goto(bb5)
}
bb9 = {
_16.0 = [_3,_3,_3,_3];
_30 = (_9.0,);
_19 = [_9.1.2,_9.1.2,_17.fld1.2,_17.fld1.2];
_1 = _9.1.3 > _17.fld1.3;
_9.2 = _23 as isize;
_9.1.2 = _17.fld1.2;
RET = 77_i8 * (-116_i8);
_8 = [_3,_3,_23,_3];
_30.0 = _9.0;
_24 = _17.fld1.1;
_17.fld1.2 = 1_usize as i128;
_27 = 48627_u16 as usize;
_21 = _13 as f64;
_2 = _20 as u64;
_1 = _6;
_25 = core::ptr::addr_of!(_26);
_9.2 = _17.fld1.1;
_9.1 = (_17.fld1.0, _17.fld1.1, _17.fld1.2, _17.fld1.3);
_25 = core::ptr::addr_of!(_26);
_17.fld1.0 = _9.1.0;
_31 = _11 as isize;
_18 = _6 & _6;
_9.1.2 = _23 as i128;
_14 = _16;
_17.fld1 = (_9.1.0, _9.1.1, _9.1.2, _21);
_9.0 = _15;
_30.0 = _15;
_17.fld1.3 = RET as f64;
_21 = 52087_u16 as f64;
_19 = [_9.1.2,_9.1.2,_9.1.2,_9.1.2];
_27 = _17.fld1.2 as usize;
Goto(bb10)
}
bb10 = {
_9.1 = _17.fld1;
_33.fld0 = _16;
_15 = _9.0;
_30 = (_15,);
_28 = 3947666267_u32;
Goto(bb11)
}
bb11 = {
_9.1 = _17.fld1;
_15 = _9.0;
_32.fld0 = _16;
_17.fld1.3 = _9.1.3;
_16.0 = [_23,_23,_3,_23];
_34 = _1;
_26 = -_13;
Goto(bb12)
}
bb12 = {
_9.1 = (_10, _24, _17.fld1.2, _21);
Call(_9.1.2 = core::intrinsics::bswap(_17.fld1.2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_16.0 = [_23,_3,_23,_3];
_17.fld1.0 = [_5,_5,_5,_5,_5];
RET = _28 as i8;
_3 = !_23;
match _11 {
118251023781586657092035658354404335110 => bb14,
_ => bb6
}
}
bb14 = {
_17.fld1 = (_9.1.0, _9.2, _9.1.2, _9.1.3);
_35.0 = _3 as f32;
_5 = !(-2128_i16);
_17.fld0 = 231_u8;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(0_usize, 18_usize, Move(_18), 1_usize, Move(_1), 11_usize, Move(_11), 28_usize, Move(_28)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(0_usize, 5_usize, Move(_5), 24_usize, Move(_24), 2_usize, Move(_2), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(0_usize, 23_usize, Move(_23), 27_usize, Move(_27), 6_usize, Move(_6), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u64,mut _2: [i32; 4],mut _3: u64,mut _4: u64,mut _5: i32,mut _6: [i32; 4],mut _7: ([i32; 4],),mut _8: [i32; 4],mut _9: [i32; 4],mut _10: u64,mut _11: i64,mut _12: isize,mut _13: i128,mut _14: u64) -> i8 {
mir! {
type RET = i8;
let _15: *mut bool;
let _16: Adt46;
let _17: [u32; 3];
let _18: Adt56;
let _19: f32;
let _20: f64;
let _21: ([i16; 5], isize, i128, f64);
let _22: [u32; 3];
let _23: f64;
let _24: [i32; 4];
let _25: [u32; 3];
let _26: i128;
let _27: [i128; 4];
let _28: i32;
let _29: [i16; 5];
let _30: (f32, bool, f32);
let _31: char;
let _32: ([i32; 4],);
let _33: Adt50;
let _34: f64;
let _35: [u32; 3];
let _36: i32;
let _37: Adt48;
let _38: u16;
let _39: ();
let _40: ();
{
_5 = 20519_i16 as i32;
_7.0 = _8;
_16.fld3 = (_10,);
_7.0 = [_5,_5,_5,_5];
_16.fld4 = core::ptr::addr_of_mut!(RET);
_9 = _8;
_2 = [_5,_5,_5,_5];
_16.fld2 = [false,false];
_3 = !_10;
_16.fld7 = [(-30853_i16),26370_i16,(-12332_i16),14872_i16,(-23427_i16)];
_17 = [2382401210_u32,2470979367_u32,1167606635_u32];
Goto(bb1)
}
bb1 = {
RET = 51_i8;
_7 = (_8,);
_16.fld1 = core::ptr::addr_of_mut!(_16.fld0);
_9 = _6;
_7 = (_8,);
_7 = (_2,);
_3 = _4 * _4;
_16.fld0 = !true;
_16.fld6 = core::ptr::addr_of!(RET);
_21.0 = _16.fld7;
_17 = [2879589058_u32,74036188_u32,3150290601_u32];
_14 = _4;
RET = 1_i8 | 32_i8;
_10 = 5395104429507106328_usize as u64;
_11 = (-5936631472010336737_i64);
_10 = _11 as u64;
_21.0 = [(-27774_i16),(-2934_i16),3420_i16,(-25999_i16),9798_i16];
_21.3 = _3 as f64;
_21.0 = [13798_i16,26411_i16,28742_i16,(-26373_i16),(-27312_i16)];
_13 = !146331476869454892587436152502852847042_i128;
_4 = _16.fld0 as u64;
RET = _5 as i8;
_16.fld6 = core::ptr::addr_of!(RET);
_11 = (-5673070546522828336_i64);
match _11 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463457701536885245383120 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_16.fld7 = _21.0;
Call(_19 = fn2(_4, _4, _3, _16.fld3.0, _11, _21.0, _6, _3), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_7.0 = [_5,_5,_5,_5];
Goto(bb8)
}
bb8 = {
_14 = _3;
_21.0 = [(-4410_i16),27724_i16,(-26733_i16),(-7024_i16),25844_i16];
_5 = _16.fld0 as i32;
_21.1 = _12 >> _3;
_16.fld1 = core::ptr::addr_of_mut!(_16.fld0);
_21.2 = _13;
_21.3 = 4278_u16 as f64;
_7.0 = [_5,_5,_5,_5];
_21.3 = _3 as f64;
_13 = _21.2;
RET = 112_i8 - (-49_i8);
_23 = _21.3 - _21.3;
_9 = [_5,_5,_5,_5];
_5 = -1722183246_i32;
_11 = !7227899852654242187_i64;
_13 = _21.2 - _21.2;
_16.fld6 = core::ptr::addr_of!(RET);
_16.fld6 = core::ptr::addr_of!(RET);
Goto(bb9)
}
bb9 = {
_12 = _21.1 ^ _21.1;
_10 = !_14;
_23 = -_21.3;
_16.fld3.0 = _19 as u64;
_16.fld7 = _21.0;
_21.1 = -_12;
_16.fld4 = core::ptr::addr_of_mut!(RET);
Goto(bb10)
}
bb10 = {
_25 = [1729367353_u32,1101839011_u32,1896423442_u32];
_15 = _16.fld1;
_19 = _5 as f32;
_28 = _5 >> _14;
_19 = _13 as f32;
_25 = [3988359068_u32,196652179_u32,2670690132_u32];
_14 = _21.1 as u64;
_21.0 = [(-2922_i16),(-32094_i16),4834_i16,(-1823_i16),15437_i16];
_20 = -_21.3;
_2 = [_5,_28,_28,_28];
_27 = [_13,_21.2,_21.2,_13];
_3 = _14;
_19 = 1805841015_u32 as f32;
_16.fld3.0 = _10;
_7 = (_2,);
_24 = _7.0;
_10 = 55082_u16 as u64;
RET = 3_i8 >> _28;
_16.fld4 = core::ptr::addr_of_mut!(RET);
_9 = [_28,_28,_28,_28];
_28 = (-16759_i16) as i32;
_7.0 = _24;
_10 = _14;
_26 = _13;
_16.fld3.0 = _10;
Goto(bb11)
}
bb11 = {
_21.3 = _23;
RET = 27_i8 | 66_i8;
_10 = _14;
Goto(bb12)
}
bb12 = {
_30.0 = _19;
_1 = _10 + _14;
_22 = _25;
_30.2 = _19;
_30 = (_19, _16.fld0, _19);
_5 = _28 << _1;
_25 = _17;
_2 = _9;
_8 = _9;
_32.0 = _7.0;
_21 = (_16.fld7, _12, _13, _23);
_29 = _16.fld7;
Goto(bb13)
}
bb13 = {
_24 = [_5,_5,_5,_5];
_21.3 = -_23;
_17 = _25;
_11 = (-8014036204069895760_i64) ^ (-6264509040120852239_i64);
_10 = _14;
_33 = Adt50 { fld0: _16.fld1 };
_3 = !_1;
_27 = [_21.2,_26,_26,_26];
_9 = [_5,_5,_5,_5];
_5 = _28;
_21 = (_29, _12, _26, _23);
Goto(bb14)
}
bb14 = {
_30.0 = _30.2 + _30.2;
_11 = (-2384286983717257264_i64) & 4751896018242761830_i64;
_28 = -_5;
_6 = [_28,_28,_5,_5];
_6 = _32.0;
_34 = _23;
_24 = [_28,_28,_5,_5];
_13 = 23611_u16 as i128;
_30.2 = _19;
_33 = Adt50 { fld0: _15 };
_16.fld2 = [_16.fld0,_30.1];
_21.1 = _12 | _12;
_26 = _16.fld0 as i128;
_16.fld7 = _29;
_3 = _28 as u64;
_30.2 = 10094738971628698062_usize as f32;
_4 = _1 ^ _1;
_16.fld7 = [(-4132_i16),(-20512_i16),2971_i16,(-12996_i16),(-28337_i16)];
_36 = _28;
_21.0 = [(-17259_i16),(-8905_i16),(-786_i16),30809_i16,30930_i16];
_27 = [_26,_21.2,_21.2,_26];
_2 = [_5,_28,_28,_28];
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(1_usize, 1_usize, Move(_1), 26_usize, Move(_26), 8_usize, Move(_8), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(1_usize, 13_usize, Move(_13), 6_usize, Move(_6), 27_usize, Move(_27), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(1_usize, 29_usize, Move(_29), 32_usize, Move(_32), 25_usize, Move(_25), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: u64,mut _5: i64,mut _6: [i16; 5],mut _7: [i32; 4],mut _8: u64) -> f32 {
mir! {
type RET = f32;
let _9: Adt45;
let _10: bool;
let _11: f32;
let _12: Adt50;
let _13: Adt49;
let _14: [i128; 4];
let _15: [bool; 2];
let _16: usize;
let _17: f64;
let _18: (u64,);
let _19: (f64, u64, &'static u128);
let _20: bool;
let _21: isize;
let _22: isize;
let _23: (f32,);
let _24: bool;
let _25: Adt52;
let _26: f64;
let _27: (u64,);
let _28: ([i16; 5], isize, i128, f64);
let _29: f64;
let _30: [bool; 2];
let _31: f64;
let _32: Adt46;
let _33: u64;
let _34: char;
let _35: isize;
let _36: usize;
let _37: isize;
let _38: (f64, u64, &'static u128);
let _39: ([i16; 5], isize, i128, f64);
let _40: i64;
let _41: isize;
let _42: i64;
let _43: u64;
let _44: (f32,);
let _45: [i16; 5];
let _46: ();
let _47: ();
{
RET = _5 as f32;
_7 = [(-1005944356_i32),1313028767_i32,1905355789_i32,(-281167186_i32)];
RET = 811419265_i32 as f32;
_3 = !_8;
RET = 51980_u16 as f32;
_7 = [803665511_i32,530481914_i32,(-1854946012_i32),116644100_i32];
RET = _5 as f32;
_8 = _3;
_6 = [6317_i16,20463_i16,6440_i16,(-10382_i16),(-16209_i16)];
_2 = !_8;
_5 = 77695948201891293277529343294421241467_i128 as i64;
_6 = [17720_i16,(-8851_i16),(-18740_i16),3255_i16,(-10243_i16)];
_4 = _3 * _2;
_6 = [8686_i16,(-4764_i16),(-6893_i16),6994_i16,18545_i16];
Call(_2 = core::intrinsics::transmute(_8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = !_2;
RET = 281075572873522040073328078541273121365_u128 as f32;
RET = 49_u8 as f32;
_10 = !false;
_3 = _1 * _4;
_5 = 1444036077691466004_i64 | 7632026567137221182_i64;
_10 = !false;
_11 = RET;
_1 = _8 - _8;
Call(_11 = fn3(_1, _4, _4, _1, _4, _3, _3, _1, _3, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = 139625171_u32 as f32;
_6 = [(-11788_i16),(-7368_i16),(-23001_i16),27874_i16,(-25843_i16)];
_10 = false;
_10 = !false;
_1 = _2;
_5 = -886001830348130045_i64;
Goto(bb3)
}
bb3 = {
RET = _11;
RET = 3315446714_u32 as f32;
_15 = [_10,_10];
_8 = _4;
_12.fld0 = core::ptr::addr_of_mut!(_10);
_3 = 0_usize as u64;
_3 = !_4;
_12.fld0 = core::ptr::addr_of_mut!(_10);
RET = _11 + _11;
_14 = [(-150089043357481891513470810486943603155_i128),(-154955096832283602444918318162018592439_i128),(-55730720949375615081992131144622588896_i128),34515547222633965864778034160560936079_i128];
_12.fld0 = core::ptr::addr_of_mut!(_10);
Goto(bb4)
}
bb4 = {
_2 = _4 << _4;
_3 = !_2;
_8 = _2 ^ _4;
_1 = _8;
_7 = [(-102837328_i32),1161702026_i32,(-1463178768_i32),(-1015231367_i32)];
_15 = [_10,_10];
_15 = [_10,_10];
Goto(bb5)
}
bb5 = {
_13.fld0 = (_7,);
_5 = (-7132161946930388095_i64) >> _2;
_2 = _8 ^ _4;
_10 = _3 == _3;
RET = _11;
_5 = !(-8538923610541473423_i64);
_16 = 6664667691654556431_usize + 11965932431234885491_usize;
_13.fld0 = (_7,);
Goto(bb6)
}
bb6 = {
_7 = [726192536_i32,(-622326927_i32),1263317267_i32,(-2129808179_i32)];
_11 = RET - RET;
_17 = 66_i8 as f64;
_12.fld0 = core::ptr::addr_of_mut!(_10);
_14 = [166797021793771107909600981757151481981_i128,(-110818133636477273113070916631748745254_i128),40469173740394140379846430355800945112_i128,149680559882396127274449449731324986241_i128];
_2 = 1406538668_i32 as u64;
_13.fld0.0 = [(-845621965_i32),(-155121588_i32),303479183_i32,942439931_i32];
RET = _11;
_16 = !2_usize;
Goto(bb7)
}
bb7 = {
_12.fld0 = core::ptr::addr_of_mut!(_10);
_16 = !7_usize;
_4 = _8 & _8;
Goto(bb8)
}
bb8 = {
_13.fld0.0 = [1626189285_i32,(-1951349826_i32),2035733031_i32,(-479648111_i32)];
_2 = _1;
_3 = _4;
_19.1 = _17 as u64;
_18 = (_4,);
_5 = -5576740008144525833_i64;
_14 = [(-33577801582331261390923362733714923900_i128),(-130185700510489616426081285735406025093_i128),(-67330292832079059932664361368213986736_i128),162573085907149886385282974347160229116_i128];
_10 = false;
_3 = _2 << _1;
_13.fld0.0 = _7;
_21 = 9223372036854775807_isize * (-9223372036854775808_isize);
_1 = !_8;
_19.1 = _1 + _3;
_18.0 = 24_u8 as u64;
_15 = [_10,_10];
_7 = _13.fld0.0;
_9 = Adt45::Variant0 { fld0: _2 };
_12.fld0 = core::ptr::addr_of_mut!(_20);
SetDiscriminant(_9, 0);
_22 = !_21;
_11 = RET;
_11 = RET;
_1 = !_19.1;
_13.fld0 = (_7,);
_20 = _10;
_15 = [_20,_20];
_23 = (_11,);
Goto(bb9)
}
bb9 = {
_4 = !_19.1;
RET = -_23.0;
_17 = (-78137191145493711130040533792367839437_i128) as f64;
_21 = _22 + _22;
_19.1 = _10 as u64;
place!(Field::<u64>(Variant(_9, 0), 0)) = _1 + _4;
_21 = _20 as isize;
_8 = !_2;
_2 = !Field::<u64>(Variant(_9, 0), 0);
_13.fld0 = (_7,);
_26 = 54446_u16 as f64;
_19.0 = 314979608_u32 as f64;
_7 = [1750782981_i32,(-1752665162_i32),(-259765742_i32),(-23466346_i32)];
Call(_18.0 = core::intrinsics::bswap(_2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_25.fld2 = core::ptr::addr_of!(_16);
_25.fld1 = (_6, _22, 72015802385064774191113498864305353036_i128, _19.0);
_28 = (_25.fld1.0, _21, _25.fld1.2, _17);
_19.1 = _4 & _2;
_27 = (_19.1,);
_18.0 = _3 >> _27.0;
_28.3 = -_26;
SetDiscriminant(_9, 2);
_11 = -_23.0;
place!(Field::<(*const u128, *const usize, i8)>(Variant(_9, 2), 0)).1 = core::ptr::addr_of!(_16);
_9 = Adt45::Variant0 { fld0: _2 };
_3 = _19.1 | _2;
_17 = -_26;
_22 = _28.1 >> _1;
_23.0 = _11;
_15 = [_10,_20];
RET = _23.0;
_5 = (-40_i8) as i64;
_5 = !2731285970169302118_i64;
_17 = _19.0;
_25.fld1 = (_6, _22, _28.2, _17);
_7 = [1348886246_i32,1540311254_i32,451261627_i32,1443510132_i32];
_18.0 = (-49_i8) as u64;
_30 = [_20,_10];
_32.fld7 = _25.fld1.0;
_25.fld0 = !241_u8;
_32.fld3 = (_3,);
Goto(bb11)
}
bb11 = {
_17 = _26 * _25.fld1.3;
_14 = [_28.2,_28.2,_25.fld1.2,_25.fld1.2];
_13.fld0.0 = [1460331758_i32,(-1137876703_i32),(-1377001484_i32),(-668017063_i32)];
_32.fld2 = [_10,_10];
SetDiscriminant(_9, 1);
place!(Field::<(*const char, f64, u128)>(Variant(_9, 1), 0)).1 = _25.fld0 as f64;
RET = -_23.0;
_25.fld1 = (_6, _22, _28.2, _28.3);
place!(Field::<(*const char, f64, u128)>(Variant(_9, 1), 0)).0 = core::ptr::addr_of!(_34);
Goto(bb12)
}
bb12 = {
_34 = '\u{85e15}';
_34 = '\u{5b073}';
_32.fld1 = core::ptr::addr_of_mut!(_24);
_30 = _15;
_25.fld1.0 = [14690_i16,(-10774_i16),(-3363_i16),(-15844_i16),(-7709_i16)];
_7 = [1410362282_i32,(-25712045_i32),(-447575878_i32),(-866531661_i32)];
_31 = _28.3 * Field::<(*const char, f64, u128)>(Variant(_9, 1), 0).1;
_28.1 = _16 as isize;
_32.fld3 = (_3,);
place!(Field::<(*const char, f64, u128)>(Variant(_9, 1), 0)).2 = 75673644255681808503439351343395152023_u128 | 164156746865542970929597860506335560584_u128;
_23 = (_11,);
_38.2 = &place!(Field::<(*const char, f64, u128)>(Variant(_9, 1), 0)).2;
_10 = _32.fld3.0 > _2;
_34 = '\u{2eaad}';
_39.2 = !_25.fld1.2;
_39.0 = [(-10006_i16),16454_i16,29502_i16,(-3770_i16),22026_i16];
_18.0 = !_4;
_1 = _18.0;
_24 = _10;
match _25.fld1.2 {
0 => bb7,
1 => bb10,
2 => bb13,
72015802385064774191113498864305353036 => bb15,
_ => bb14
}
}
bb13 = {
_13.fld0.0 = [1626189285_i32,(-1951349826_i32),2035733031_i32,(-479648111_i32)];
_2 = _1;
_3 = _4;
_19.1 = _17 as u64;
_18 = (_4,);
_5 = -5576740008144525833_i64;
_14 = [(-33577801582331261390923362733714923900_i128),(-130185700510489616426081285735406025093_i128),(-67330292832079059932664361368213986736_i128),162573085907149886385282974347160229116_i128];
_10 = false;
_3 = _2 << _1;
_13.fld0.0 = _7;
_21 = 9223372036854775807_isize * (-9223372036854775808_isize);
_1 = !_8;
_19.1 = _1 + _3;
_18.0 = 24_u8 as u64;
_15 = [_10,_10];
_7 = _13.fld0.0;
_9 = Adt45::Variant0 { fld0: _2 };
_12.fld0 = core::ptr::addr_of_mut!(_20);
SetDiscriminant(_9, 0);
_22 = !_21;
_11 = RET;
_11 = RET;
_1 = !_19.1;
_13.fld0 = (_7,);
_20 = _10;
_15 = [_20,_20];
_23 = (_11,);
Goto(bb9)
}
bb14 = {
_13.fld0 = (_7,);
_5 = (-7132161946930388095_i64) >> _2;
_2 = _8 ^ _4;
_10 = _3 == _3;
RET = _11;
_5 = !(-8538923610541473423_i64);
_16 = 6664667691654556431_usize + 11965932431234885491_usize;
_13.fld0 = (_7,);
Goto(bb6)
}
bb15 = {
_36 = (-16585_i16) as usize;
RET = -_23.0;
_39 = (_28.0, _25.fld1.1, _28.2, _19.0);
_25.fld0 = 119_u8 >> _2;
_33 = (-668311666_i32) as u64;
_25.fld1 = (_32.fld7, _22, _28.2, _17);
_28.3 = -_17;
_33 = _5 as u64;
_31 = -_19.0;
_20 = _24;
_8 = _1;
_33 = 75591986_i32 as u64;
_44 = (_11,);
_25.fld1.2 = -_28.2;
_13.fld0 = (_7,);
_38.1 = _36 as u64;
Goto(bb16)
}
bb16 = {
Call(_46 = dump_var(2_usize, 7_usize, Move(_7), 24_usize, Move(_24), 21_usize, Move(_21), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(2_usize, 20_usize, Move(_20), 30_usize, Move(_30), 36_usize, Move(_36), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(2_usize, 14_usize, Move(_14), 3_usize, Move(_3), 10_usize, Move(_10), 47_usize, _47), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: u64,mut _5: u64,mut _6: u64,mut _7: u64,mut _8: u64,mut _9: u64,mut _10: u64) -> f32 {
mir! {
type RET = f32;
let _11: isize;
let _12: char;
let _13: isize;
let _14: (char,);
let _15: f32;
let _16: i128;
let _17: Adt58;
let _18: [bool; 2];
let _19: [i32; 4];
let _20: char;
let _21: (f32,);
let _22: isize;
let _23: bool;
let _24: (f32,);
let _25: (f32, bool, f32);
let _26: Adt52;
let _27: ([i32; 4],);
let _28: u16;
let _29: Adt52;
let _30: (char, ([i16; 5], isize, i128, f64), isize);
let _31: f32;
let _32: ();
let _33: ();
{
_6 = _2;
RET = (-2016270891_i32) as f32;
_10 = 21940_u16 as u64;
_8 = !_7;
RET = 10725551157469057476_usize as f32;
_3 = _8;
_10 = !_8;
_5 = !_10;
_6 = '\u{22a07}' as u64;
_7 = _10;
_10 = _8 & _4;
Call(_6 = fn4(_8, _9, _4, _3, _9, _10, _8, _3, _9, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _9 | _6;
_5 = !_3;
_9 = !_6;
_9 = _6;
RET = _10 as f32;
_11 = !9223372036854775807_isize;
_4 = _5;
_5 = _9 | _9;
RET = 22724_i16 as f32;
_5 = _4;
RET = 1_usize as f32;
_9 = _6 << _3;
RET = 1931149133_u32 as f32;
RET = 28908_i16 as f32;
_12 = '\u{764bf}';
_10 = 2398546483119559405_usize as u64;
_10 = !_5;
_12 = '\u{103ab3}';
_10 = _4 ^ _9;
_1 = !_10;
Goto(bb2)
}
bb2 = {
_18 = [true,false];
_11 = 9223372036854775807_isize;
_13 = !_11;
_17.fld0 = _9 <= _9;
_17.fld2 = [_17.fld0,_17.fld0];
Call(_16 = fn5(_17.fld2, _17.fld0, _1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_17.fld2 = _18;
_16 = (-44467617914419827937064366165258981809_i128);
_12 = '\u{9e079}';
_14 = (_12,);
_21 = (RET,);
_20 = _12;
_1 = 45217_u16 as u64;
_19 = [424076593_i32,1028478518_i32,276138111_i32,1312391124_i32];
_19 = [186083593_i32,1277088145_i32,408882152_i32,(-1756934047_i32)];
_10 = !_9;
_19 = [363524382_i32,214580297_i32,(-1818510088_i32),(-1797142206_i32)];
RET = _21.0;
_17.fld2 = [_17.fld0,_17.fld0];
match _11 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
9223372036854775807 => bb11,
_ => bb10
}
}
bb4 = {
_18 = [true,false];
_11 = 9223372036854775807_isize;
_13 = !_11;
_17.fld0 = _9 <= _9;
_17.fld2 = [_17.fld0,_17.fld0];
Call(_16 = fn5(_17.fld2, _17.fld0, _1), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_3 = _9 | _6;
_5 = !_3;
_9 = !_6;
_9 = _6;
RET = _10 as f32;
_11 = !9223372036854775807_isize;
_4 = _5;
_5 = _9 | _9;
RET = 22724_i16 as f32;
_5 = _4;
RET = 1_usize as f32;
_9 = _6 << _3;
RET = 1931149133_u32 as f32;
RET = 28908_i16 as f32;
_12 = '\u{764bf}';
_10 = 2398546483119559405_usize as u64;
_10 = !_5;
_12 = '\u{103ab3}';
_10 = _4 ^ _9;
_1 = !_10;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_21.0 = RET * RET;
_12 = _20;
_7 = _9 | _9;
_19 = [507309339_i32,611384761_i32,1713297872_i32,90945059_i32];
_17.fld1 = Adt45::Variant0 { fld0: _7 };
_9 = !_7;
_13 = _11 - _11;
SetDiscriminant(_17.fld1, 1);
_17.fld0 = false;
_15 = _21.0;
_1 = _3 >> _7;
_14.0 = _12;
_7 = _13 as u64;
_23 = _17.fld0 ^ _17.fld0;
place!(Field::<*const char>(Variant(_17.fld1, 1), 1)) = core::ptr::addr_of!(_20);
_4 = !_5;
_24.0 = RET;
_17.fld0 = _23 | _23;
place!(Field::<(*const char, f64, u128)>(Variant(_17.fld1, 1), 0)).2 = !121115871265980867252336198836286923287_u128;
_9 = 9_u8 as u64;
match _16 {
0 => bb7,
1 => bb12,
295814749006518635526310241266509229647 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
_3 = _9 | _6;
_5 = !_3;
_9 = !_6;
_9 = _6;
RET = _10 as f32;
_11 = !9223372036854775807_isize;
_4 = _5;
_5 = _9 | _9;
RET = 22724_i16 as f32;
_5 = _4;
RET = 1_usize as f32;
_9 = _6 << _3;
RET = 1931149133_u32 as f32;
RET = 28908_i16 as f32;
_12 = '\u{764bf}';
_10 = 2398546483119559405_usize as u64;
_10 = !_5;
_12 = '\u{103ab3}';
_10 = _4 ^ _9;
_1 = !_10;
Goto(bb2)
}
bb14 = {
_11 = 1_usize as isize;
_4 = _5;
_26.fld1.1 = !_13;
_24 = _21;
_6 = _1 | _8;
_14 = (_20,);
_28 = !46785_u16;
_25 = (RET, _17.fld0, RET);
_5 = _6;
_18 = _17.fld2;
_2 = !_3;
_26.fld1.0 = [4569_i16,(-7496_i16),8085_i16,26150_i16,32167_i16];
_13 = Field::<(*const char, f64, u128)>(Variant(_17.fld1, 1), 0).2 as isize;
place!(Field::<(*const char, f64, u128)>(Variant(_17.fld1, 1), 0)).1 = 4_i8 as f64;
_26.fld0 = !186_u8;
_18 = [_25.1,_23];
_15 = _25.0;
_5 = !_1;
_11 = _24.0 as isize;
_12 = _20;
_18 = [_23,_17.fld0];
_29.fld1.1 = _28 as isize;
_25.0 = _25.2 + _24.0;
_4 = _26.fld0 as u64;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(3_usize, 13_usize, Move(_13), 1_usize, Move(_1), 5_usize, Move(_5), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(3_usize, 14_usize, Move(_14), 9_usize, Move(_9), 10_usize, Move(_10), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(3_usize, 4_usize, Move(_4), 23_usize, Move(_23), 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: u64,mut _5: u64,mut _6: u64,mut _7: u64,mut _8: u64,mut _9: u64,mut _10: u64) -> u64 {
mir! {
type RET = u64;
let _11: (f32,);
let _12: i128;
let _13: ([i32; 4],);
let _14: (char,);
let _15: *mut (f64, u64, &'static u128);
let _16: i128;
let _17: isize;
let _18: ();
let _19: ();
{
_10 = _9 << _7;
_6 = _4;
_13.0 = [(-259234047_i32),(-1182041681_i32),(-1911588558_i32),2135734479_i32];
_9 = _5 << _3;
_1 = _3;
_12 = (-624142676281277756860105612643233645_i128);
RET = (-6496486111094259171_i64) as u64;
_1 = !_10;
_13.0 = [(-67238627_i32),1225054004_i32,(-1928445244_i32),(-163950203_i32)];
RET = _9;
_1 = (-1262989758_i32) as u64;
_11.0 = 7_u8 as f32;
_3 = '\u{6f113}' as u64;
_5 = RET;
_6 = _10 & _8;
_14 = ('\u{27b82}',);
_14 = ('\u{91085}',);
_14 = ('\u{9cd19}',);
_2 = (-9223372036854775808_isize) as u64;
_16 = _12 - _12;
_17 = true as isize;
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(4_usize, 16_usize, Move(_16), 6_usize, Move(_6), 7_usize, Move(_7), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_18 = dump_var(4_usize, 3_usize, Move(_3), 17_usize, Move(_17), 4_usize, Move(_4), 19_usize, _19), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: [bool; 2],mut _2: bool,mut _3: u64) -> i128 {
mir! {
type RET = i128;
let _4: *mut (f64, u64, &'static u128);
let _5: u64;
let _6: f64;
let _7: [i16; 5];
let _8: f32;
let _9: i128;
let _10: i64;
let _11: isize;
let _12: Adt54;
let _13: bool;
let _14: f64;
let _15: char;
let _16: i8;
let _17: Adt42;
let _18: f32;
let _19: Adt45;
let _20: isize;
let _21: f64;
let _22: isize;
let _23: i16;
let _24: isize;
let _25: (char, ([i16; 5], isize, i128, f64), isize);
let _26: u8;
let _27: isize;
let _28: i32;
let _29: ([i16; 5], isize, i128, f64);
let _30: i128;
let _31: i32;
let _32: ();
let _33: ();
{
RET = 31097244533529630500336136852405485099_i128;
RET = 164343630564344538894035449098626458467_i128;
_3 = !16133159189737990438_u64;
RET = 102_i8 as i128;
RET = _2 as i128;
RET = 3842684346_u32 as i128;
_2 = true;
Call(_4 = fn6(_1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = 977301869095678900_u64;
_1 = [_2,_2];
RET = -891667783521896269960543272146691019_i128;
RET = 5090312495580906662_i64 as i128;
RET = -(-164752116972807651119270867929424543144_i128);
RET = 18492_u16 as i128;
_2 = RET >= RET;
_3 = 11712371944062532621_u64 << RET;
_5 = (-1214656179_i32) as u64;
_5 = _3;
_1 = [_2,_2];
_3 = !_5;
Goto(bb2)
}
bb2 = {
RET = 0_usize as i128;
_1 = [_2,_2];
_6 = (-100_i8) as f64;
Goto(bb3)
}
bb3 = {
_2 = RET > RET;
_7 = [16329_i16,14587_i16,13999_i16,4872_i16,17138_i16];
_1 = [_2,_2];
_7 = [23971_i16,22896_i16,18886_i16,(-18477_i16),15568_i16];
_2 = !true;
_2 = !true;
_7 = [(-22734_i16),19648_i16,(-9985_i16),26136_i16,9974_i16];
RET = (-147576016564214575419746737523239912013_i128) << _5;
RET = (-120568736405346942132587150261784112300_i128) & (-98694243234903042568230966067857891214_i128);
RET = _5 as i128;
_9 = -RET;
Goto(bb4)
}
bb4 = {
_8 = _9 as f32;
_7 = [16888_i16,14062_i16,17320_i16,(-26028_i16),(-10576_i16)];
_9 = (-92_i8) as i128;
_2 = false;
RET = _9;
_10 = 1417010313322248405_i64;
_5 = !_3;
_8 = _3 as f32;
_8 = (-64_i8) as f32;
_8 = RET as f32;
Goto(bb5)
}
bb5 = {
_10 = 6764603288897789136_i64 & (-4443500744870760859_i64);
_7 = [(-6679_i16),7446_i16,(-17428_i16),(-18386_i16),347_i16];
RET = _9 + _9;
Goto(bb6)
}
bb6 = {
_1 = [_2,_2];
Goto(bb7)
}
bb7 = {
_5 = _3;
RET = _9 - _9;
_11 = !(-9223372036854775808_isize);
RET = 2_usize as i128;
_6 = _5 as f64;
_2 = false;
_2 = false;
RET = _9 * _9;
RET = _9 | _9;
_6 = 1_usize as f64;
_1 = [_2,_2];
Goto(bb8)
}
bb8 = {
_2 = !false;
_7 = [1912_i16,21254_i16,(-1266_i16),(-20371_i16),32077_i16];
_11 = -(-9223372036854775808_isize);
RET = _9 - _9;
_14 = 0_usize as f64;
_9 = !RET;
_15 = '\u{7194a}';
_1 = [_2,_2];
_2 = false & true;
_1 = [_2,_2];
_18 = -_8;
_11 = 9223372036854775807_isize & 39_isize;
_11 = 9223372036854775807_isize;
_10 = 1512512361638584145_usize as i64;
_1 = [_2,_2];
_14 = _6 + _6;
_10 = (-10588_i16) as i64;
_18 = 57494_u16 as f32;
_13 = !_2;
_15 = '\u{369d6}';
_10 = 5872402212747570114_i64;
Goto(bb9)
}
bb9 = {
RET = _9;
_3 = _5;
_16 = _14 as i8;
_10 = (-6812935484758164997_i64);
RET = !_9;
_7 = [(-22571_i16),3724_i16,19543_i16,(-5157_i16),15003_i16];
_3 = _10 as u64;
_18 = _8;
_21 = _6 + _14;
_3 = _5 << _9;
_5 = _13 as u64;
_15 = '\u{7a7a8}';
_24 = _11;
_10 = 4070281089210467509_i64;
_6 = -_21;
_6 = _21;
_10 = -3858894908034212588_i64;
_22 = -_24;
match _11 {
9223372036854775807 => bb11,
_ => bb10
}
}
bb10 = {
_5 = _3;
RET = _9 - _9;
_11 = !(-9223372036854775808_isize);
RET = 2_usize as i128;
_6 = _5 as f64;
_2 = false;
_2 = false;
RET = _9 * _9;
RET = _9 | _9;
_6 = 1_usize as f64;
_1 = [_2,_2];
Goto(bb8)
}
bb11 = {
_13 = !_2;
_6 = _21;
RET = 322669718411663279922978004482568413630_u128 as i128;
_7 = [10600_i16,17669_i16,4537_i16,20839_i16,21947_i16];
_25.1 = (_7, _11, RET, _6);
_25.2 = _24;
_5 = 173_u8 as u64;
_25.1 = (_7, _22, _9, _14);
_25.1.2 = !RET;
_25.1 = (_7, _24, RET, _14);
_26 = !18_u8;
_25.1 = (_7, _24, RET, _21);
_15 = '\u{f3ef5}';
_26 = 53_u8;
_27 = _11 + _24;
_18 = _8;
_27 = 2125710524_i32 as isize;
_13 = _2;
_25.1.2 = _9 ^ _9;
_14 = -_21;
_25.1 = (_7, _27, _9, _21);
_26 = _11 as u8;
_10 = 5400301097123409927_i64;
_20 = -_25.2;
_18 = _8 + _8;
_18 = _8 - _8;
_10 = (-3862925481899249764_i64);
_28 = _10 as i32;
match _10 {
0 => bb7,
1 => bb12,
340282366920938463459511681949868961692 => bb14,
_ => bb13
}
}
bb12 = {
_5 = _3;
RET = _9 - _9;
_11 = !(-9223372036854775808_isize);
RET = 2_usize as i128;
_6 = _5 as f64;
_2 = false;
_2 = false;
RET = _9 * _9;
RET = _9 | _9;
_6 = 1_usize as f64;
_1 = [_2,_2];
Goto(bb8)
}
bb13 = {
RET = 0_usize as i128;
_1 = [_2,_2];
_6 = (-100_i8) as f64;
Goto(bb3)
}
bb14 = {
_25.0 = _15;
_23 = 5188_i16 ^ (-26019_i16);
_6 = -_21;
_1 = [_13,_13];
_25.0 = _15;
_19 = Adt45::Variant0 { fld0: _3 };
_29.1 = _25.1.1 | _20;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(5_usize, 23_usize, Move(_23), 3_usize, Move(_3), 24_usize, Move(_24), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(5_usize, 20_usize, Move(_20), 15_usize, Move(_15), 16_usize, Move(_16), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(5_usize, 1_usize, Move(_1), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: [bool; 2],mut _5: [bool; 2],mut _6: [bool; 2],mut _7: [bool; 2],mut _8: [bool; 2],mut _9: [bool; 2],mut _10: [bool; 2],mut _11: [bool; 2],mut _12: [bool; 2]) -> *mut (f64, u64, &'static u128) {
mir! {
type RET = *mut (f64, u64, &'static u128);
let _13: (char,);
let _14: [i16; 5];
let _15: f64;
let _16: [i128; 4];
let _17: *const u128;
let _18: usize;
let _19: Adt53;
let _20: (f32,);
let _21: (u64,);
let _22: (f32, bool, f32);
let _23: *mut bool;
let _24: u8;
let _25: *const [i128; 4];
let _26: u8;
let _27: Adt51;
let _28: i16;
let _29: (f32, bool, f32);
let _30: u16;
let _31: i64;
let _32: &'static u128;
let _33: i128;
let _34: i16;
let _35: [i16; 5];
let _36: bool;
let _37: [bool; 2];
let _38: Adt48;
let _39: Adt57;
let _40: *mut (f64, u64, &'static u128);
let _41: isize;
let _42: bool;
let _43: f64;
let _44: u128;
let _45: (char,);
let _46: i64;
let _47: i8;
let _48: i16;
let _49: f64;
let _50: char;
let _51: Adt53;
let _52: u64;
let _53: Adt49;
let _54: isize;
let _55: i64;
let _56: u64;
let _57: char;
let _58: i32;
let _59: (f32, bool, f32);
let _60: (u64,);
let _61: f64;
let _62: (f32,);
let _63: isize;
let _64: Adt54;
let _65: ([i16; 5], isize, i128, f64);
let _66: f64;
let _67: *mut i8;
let _68: u32;
let _69: isize;
let _70: (*const char, f64, u128);
let _71: *const u128;
let _72: (f32, bool, f32);
let _73: f32;
let _74: (f64, u64, &'static u128);
let _75: f64;
let _76: [u32; 3];
let _77: (f32,);
let _78: ();
let _79: ();
{
_3 = [false,true];
_1 = [false,false];
_13 = ('\u{994d6}',);
_12 = _5;
_2 = _8;
_6 = _7;
_2 = [false,false];
_12 = _6;
Goto(bb1)
}
bb1 = {
_11 = _10;
_14 = [23000_i16,(-9946_i16),(-5046_i16),(-4262_i16),20166_i16];
_3 = [false,false];
_13 = ('\u{3a984}',);
_13 = ('\u{b0a0e}',);
_4 = [false,false];
_12 = [false,false];
_3 = [false,true];
_11 = [true,true];
_14 = [18591_i16,(-31704_i16),(-18682_i16),(-1270_i16),7457_i16];
_13.0 = '\u{38887}';
Call(_9 = fn7(_10, _8, _3, _7, _10, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = [true,false];
_3 = _7;
_18 = _13.0 as usize;
_21.0 = 3714994891153092260_u64;
_10 = _7;
_12 = [false,true];
_1 = [true,true];
_11 = [true,true];
_9 = [true,false];
_16 = [(-158653769096693613550896219429566847419_i128),(-69922000814568215102770535786354236765_i128),90954490739511189560979224520864642416_i128,169862327343228541878445745348122382636_i128];
_5 = [true,false];
_21 = (16603883809711999682_u64,);
Goto(bb3)
}
bb3 = {
_14 = [4167_i16,14221_i16,31571_i16,(-27416_i16),6398_i16];
_22.2 = _21.0 as f32;
_21 = (13622942474128354082_u64,);
_6 = [true,false];
_12 = [false,true];
_2 = [false,true];
_20 = (_22.2,);
Goto(bb4)
}
bb4 = {
_22.0 = _22.2;
_20.0 = _22.0 * _22.2;
_15 = _18 as f64;
Goto(bb5)
}
bb5 = {
_1 = [false,false];
_22 = (_20.0, false, _20.0);
_22.0 = _18 as f32;
_22.1 = true | false;
_20 = (_22.2,);
_23 = core::ptr::addr_of_mut!(_22.1);
_4 = [_22.1,(*_23)];
_23 = core::ptr::addr_of_mut!((*_23));
_9 = [(*_23),_22.1];
_10 = [(*_23),(*_23)];
_21 = (9396272206802738415_u64,);
_22.1 = _22.2 < _20.0;
_14 = [24749_i16,798_i16,(-11703_i16),(-23609_i16),(-4299_i16)];
_15 = 1893699747462514138911979851737504614_i128 as f64;
_18 = 3_usize << _21.0;
_25 = core::ptr::addr_of!(_16);
_5 = [_22.1,_22.1];
Call(_17 = fn19(_7, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_13 = ('\u{6e525}',);
_13.0 = '\u{3425c}';
_15 = 226388129_u32 as f64;
_22.2 = _22.0;
_21 = (15581556690541682721_u64,);
_4 = [(*_23),(*_23)];
_20 = (_22.2,);
_10 = [(*_23),(*_23)];
_12 = [(*_23),(*_23)];
_23 = core::ptr::addr_of_mut!(_22.1);
_28 = (-5231_i16);
_22.2 = (-103311034416025701575677029737748406865_i128) as f32;
_5 = [(*_23),_22.1];
_25 = core::ptr::addr_of!((*_25));
_23 = core::ptr::addr_of_mut!(_22.1);
_22.1 = _21.0 <= _21.0;
_13 = ('\u{97296}',);
_9 = [(*_23),(*_23)];
_29.0 = -_22.2;
_15 = 376397314_i32 as f64;
_7 = [(*_23),_22.1];
Goto(bb7)
}
bb7 = {
_20.0 = _22.0 * _29.0;
_8 = [(*_23),_22.1];
_16 = [129863927089758504726789240565050670574_i128,62479456720431306414804859194449896491_i128,27242278976564048942370837193145426446_i128,(-53948954991999058425234426926896584786_i128)];
_10 = [_22.1,(*_23)];
_29.1 = !_22.1;
_16 = [70111911314180467764952358161598590193_i128,(-140491118228437679336441078100846199599_i128),(-91207213541222796181646796492086103634_i128),28269317819110801345087816970457952921_i128];
_22.0 = _20.0;
_6 = [_29.1,_29.1];
_21 = (16119186810794222520_u64,);
_8 = [(*_23),_22.1];
_13.0 = '\u{8bc06}';
_1 = _3;
_24 = !160_u8;
_18 = 2_usize;
_29.1 = _21.0 >= _21.0;
_14[_18] = _28 ^ _28;
_24 = 7_u8 & 149_u8;
_31 = (-5677210075374715437_i64);
_3 = [(*_23),_29.1];
_14[_18] = _28 | _28;
_20.0 = _22.2 - _29.0;
_26 = _22.0 as u8;
_20 = (_22.2,);
_6 = _11;
_22.1 = _24 <= _26;
_6 = _1;
_18 = !16777972022566295934_usize;
_22.0 = (-14_isize) as f32;
Goto(bb8)
}
bb8 = {
_5 = _1;
_33 = (-44115508057432648061502998730163897237_i128) + (-166302132714397355959615516270063904440_i128);
_6 = [(*_23),(*_23)];
_29 = (_22.0, _22.1, _22.2);
_25 = core::ptr::addr_of!((*_25));
_11 = [(*_23),_22.1];
_30 = 10212_u16;
_22.2 = -_22.0;
match _31 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
340282366920938463457697397356393496019 => bb15,
_ => bb14
}
}
bb9 = {
_20.0 = _22.0 * _29.0;
_8 = [(*_23),_22.1];
_16 = [129863927089758504726789240565050670574_i128,62479456720431306414804859194449896491_i128,27242278976564048942370837193145426446_i128,(-53948954991999058425234426926896584786_i128)];
_10 = [_22.1,(*_23)];
_29.1 = !_22.1;
_16 = [70111911314180467764952358161598590193_i128,(-140491118228437679336441078100846199599_i128),(-91207213541222796181646796492086103634_i128),28269317819110801345087816970457952921_i128];
_22.0 = _20.0;
_6 = [_29.1,_29.1];
_21 = (16119186810794222520_u64,);
_8 = [(*_23),_22.1];
_13.0 = '\u{8bc06}';
_1 = _3;
_24 = !160_u8;
_18 = 2_usize;
_29.1 = _21.0 >= _21.0;
_14[_18] = _28 ^ _28;
_24 = 7_u8 & 149_u8;
_31 = (-5677210075374715437_i64);
_3 = [(*_23),_29.1];
_14[_18] = _28 | _28;
_20.0 = _22.2 - _29.0;
_26 = _22.0 as u8;
_20 = (_22.2,);
_6 = _11;
_22.1 = _24 <= _26;
_6 = _1;
_18 = !16777972022566295934_usize;
_22.0 = (-14_isize) as f32;
Goto(bb8)
}
bb10 = {
_13 = ('\u{6e525}',);
_13.0 = '\u{3425c}';
_15 = 226388129_u32 as f64;
_22.2 = _22.0;
_21 = (15581556690541682721_u64,);
_4 = [(*_23),(*_23)];
_20 = (_22.2,);
_10 = [(*_23),(*_23)];
_12 = [(*_23),(*_23)];
_23 = core::ptr::addr_of_mut!(_22.1);
_28 = (-5231_i16);
_22.2 = (-103311034416025701575677029737748406865_i128) as f32;
_5 = [(*_23),_22.1];
_25 = core::ptr::addr_of!((*_25));
_23 = core::ptr::addr_of_mut!(_22.1);
_22.1 = _21.0 <= _21.0;
_13 = ('\u{97296}',);
_9 = [(*_23),(*_23)];
_29.0 = -_22.2;
_15 = 376397314_i32 as f64;
_7 = [(*_23),_22.1];
Goto(bb7)
}
bb11 = {
_1 = [false,false];
_22 = (_20.0, false, _20.0);
_22.0 = _18 as f32;
_22.1 = true | false;
_20 = (_22.2,);
_23 = core::ptr::addr_of_mut!(_22.1);
_4 = [_22.1,(*_23)];
_23 = core::ptr::addr_of_mut!((*_23));
_9 = [(*_23),_22.1];
_10 = [(*_23),(*_23)];
_21 = (9396272206802738415_u64,);
_22.1 = _22.2 < _20.0;
_14 = [24749_i16,798_i16,(-11703_i16),(-23609_i16),(-4299_i16)];
_15 = 1893699747462514138911979851737504614_i128 as f64;
_18 = 3_usize << _21.0;
_25 = core::ptr::addr_of!(_16);
_5 = [_22.1,_22.1];
Call(_17 = fn19(_7, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb12 = {
_22.0 = _22.2;
_20.0 = _22.0 * _22.2;
_15 = _18 as f64;
Goto(bb5)
}
bb13 = {
_14 = [4167_i16,14221_i16,31571_i16,(-27416_i16),6398_i16];
_22.2 = _21.0 as f32;
_21 = (13622942474128354082_u64,);
_6 = [true,false];
_12 = [false,true];
_2 = [false,true];
_20 = (_22.2,);
Goto(bb4)
}
bb14 = {
_11 = _10;
_14 = [23000_i16,(-9946_i16),(-5046_i16),(-4262_i16),20166_i16];
_3 = [false,false];
_13 = ('\u{3a984}',);
_13 = ('\u{b0a0e}',);
_4 = [false,false];
_12 = [false,false];
_3 = [false,true];
_11 = [true,true];
_14 = [18591_i16,(-31704_i16),(-18682_i16),(-1270_i16),7457_i16];
_13.0 = '\u{38887}';
Call(_9 = fn7(_10, _8, _3, _7, _10, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_25 = core::ptr::addr_of!(_16);
_13.0 = '\u{2095e}';
_18 = 4_usize;
_22.0 = _24 as f32;
_29.0 = _22.2 - _22.0;
_8 = [_22.1,_22.1];
_21 = (15279963922489799278_u64,);
_5 = [(*_23),(*_23)];
_12 = _1;
_26 = _24 >> _24;
_21.0 = 5393642939267124035_u64 - 1451880583107582532_u64;
_33 = _14[_18] as i128;
_14 = [_28,_28,_28,_28,_28];
_29 = (_22.0, (*_23), _20.0);
_28 = 3591968354_u32 as i16;
_15 = _31 as f64;
_18 = (-32_i8) as usize;
_30 = 20787_u16;
_22 = _29;
_26 = _24 ^ _24;
_11 = _12;
_29.0 = _22.2;
_10 = [_22.1,(*_23)];
_30 = 50200_u16 - 27823_u16;
_13 = ('\u{1342}',);
_29.2 = -_29.0;
_14 = [_28,_28,_28,_28,_28];
Call(_20.0 = core::intrinsics::transmute(_13.0), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_33 = 140626800894867199064847553151649643142_i128 ^ 97800426698604492482581441191364469780_i128;
_2 = [(*_23),_22.1];
_16 = [_33,_33,_33,_33];
_2 = _8;
_10 = [_29.1,(*_23)];
_6 = _12;
_16 = [_33,_33,_33,_33];
_21.0 = 17503063579317240833_u64 | 9362610608945054365_u64;
_24 = _26;
Goto(bb17)
}
bb17 = {
_20 = (_29.0,);
_3 = [(*_23),_22.1];
_6 = [(*_23),(*_23)];
_8 = _1;
_29 = (_22.0, (*_23), _22.0);
_29.1 = !(*_23);
_4 = [_22.1,(*_23)];
_1 = [(*_23),_29.1];
_22 = _29;
_4 = [_22.1,(*_23)];
_36 = (*_23) | (*_23);
_37 = [_36,(*_23)];
_29 = (_22.2, _22.1, _22.0);
_24 = !_26;
_29.2 = -_29.0;
_29.0 = -_22.0;
_29 = (_22.0, _36, _22.0);
_41 = (-9223372036854775808_isize) + (-9223372036854775808_isize);
_43 = _31 as f64;
_42 = !_22.1;
_29.0 = _21.0 as f32;
_21.0 = !10378562430037412195_u64;
_22.2 = _33 as f32;
Goto(bb18)
}
bb18 = {
_42 = _29.1;
_34 = _28;
Goto(bb19)
}
bb19 = {
_6 = _12;
_11 = _6;
_13 = ('\u{cda8}',);
_15 = _43;
_5 = _11;
_35 = _14;
_44 = !193292388845155206351338036918223125929_u128;
_33 = _44 as i128;
_24 = _26;
_32 = &_44;
_29.1 = _36;
_24 = _26;
_8 = _6;
_18 = _15 as usize;
_22 = _29;
_34 = _13.0 as i16;
_16 = [_33,_33,_33,_33];
_46 = _31;
_29.1 = !_36;
_4 = [_42,(*_23)];
_32 = &(*_32);
_26 = !_24;
_45 = _13;
_16 = [_33,_33,_33,_33];
_5 = [_22.1,(*_23)];
match _46 {
0 => bb16,
1 => bb20,
2 => bb21,
3 => bb22,
4 => bb23,
340282366920938463457697397356393496019 => bb25,
_ => bb24
}
}
bb20 = {
_20.0 = _22.0 * _29.0;
_8 = [(*_23),_22.1];
_16 = [129863927089758504726789240565050670574_i128,62479456720431306414804859194449896491_i128,27242278976564048942370837193145426446_i128,(-53948954991999058425234426926896584786_i128)];
_10 = [_22.1,(*_23)];
_29.1 = !_22.1;
_16 = [70111911314180467764952358161598590193_i128,(-140491118228437679336441078100846199599_i128),(-91207213541222796181646796492086103634_i128),28269317819110801345087816970457952921_i128];
_22.0 = _20.0;
_6 = [_29.1,_29.1];
_21 = (16119186810794222520_u64,);
_8 = [(*_23),_22.1];
_13.0 = '\u{8bc06}';
_1 = _3;
_24 = !160_u8;
_18 = 2_usize;
_29.1 = _21.0 >= _21.0;
_14[_18] = _28 ^ _28;
_24 = 7_u8 & 149_u8;
_31 = (-5677210075374715437_i64);
_3 = [(*_23),_29.1];
_14[_18] = _28 | _28;
_20.0 = _22.2 - _29.0;
_26 = _22.0 as u8;
_20 = (_22.2,);
_6 = _11;
_22.1 = _24 <= _26;
_6 = _1;
_18 = !16777972022566295934_usize;
_22.0 = (-14_isize) as f32;
Goto(bb8)
}
bb21 = {
_3 = [true,false];
_3 = _7;
_18 = _13.0 as usize;
_21.0 = 3714994891153092260_u64;
_10 = _7;
_12 = [false,true];
_1 = [true,true];
_11 = [true,true];
_9 = [true,false];
_16 = [(-158653769096693613550896219429566847419_i128),(-69922000814568215102770535786354236765_i128),90954490739511189560979224520864642416_i128,169862327343228541878445745348122382636_i128];
_5 = [true,false];
_21 = (16603883809711999682_u64,);
Goto(bb3)
}
bb22 = {
_22.0 = _22.2;
_20.0 = _22.0 * _22.2;
_15 = _18 as f64;
Goto(bb5)
}
bb23 = {
_14 = [4167_i16,14221_i16,31571_i16,(-27416_i16),6398_i16];
_22.2 = _21.0 as f32;
_21 = (13622942474128354082_u64,);
_6 = [true,false];
_12 = [false,true];
_2 = [false,true];
_20 = (_22.2,);
Goto(bb4)
}
bb24 = {
_1 = [false,false];
_22 = (_20.0, false, _20.0);
_22.0 = _18 as f32;
_22.1 = true | false;
_20 = (_22.2,);
_23 = core::ptr::addr_of_mut!(_22.1);
_4 = [_22.1,(*_23)];
_23 = core::ptr::addr_of_mut!((*_23));
_9 = [(*_23),_22.1];
_10 = [(*_23),(*_23)];
_21 = (9396272206802738415_u64,);
_22.1 = _22.2 < _20.0;
_14 = [24749_i16,798_i16,(-11703_i16),(-23609_i16),(-4299_i16)];
_15 = 1893699747462514138911979851737504614_i128 as f64;
_18 = 3_usize << _21.0;
_25 = core::ptr::addr_of!(_16);
_5 = [_22.1,_22.1];
Call(_17 = fn19(_7, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb25 = {
_25 = core::ptr::addr_of!((*_25));
_33 = _21.0 as i128;
_41 = !86_isize;
_21 = (5781965793831217863_u64,);
_28 = _34;
_12 = _8;
_29.2 = -_20.0;
_43 = _15 + _15;
_32 = &(*_32);
_42 = !_29.1;
_26 = _24 - _24;
_14 = [_28,_28,_28,_28,_34];
_17 = core::ptr::addr_of!((*_32));
_32 = &_44;
_50 = _13.0;
match _31 {
0 => bb18,
1 => bb2,
2 => bb3,
340282366920938463457697397356393496019 => bb27,
_ => bb26
}
}
bb26 = {
_22.0 = _22.2;
_20.0 = _22.0 * _22.2;
_15 = _18 as f64;
Goto(bb5)
}
bb27 = {
_17 = core::ptr::addr_of!(_44);
_46 = -_31;
_44 = 232439071899494543221509473357544402763_u128;
_48 = _28;
_45.0 = _50;
_43 = _15 - _15;
_54 = _21.0 as isize;
_22.1 = !_36;
_45.0 = _50;
match _31 {
0 => bb28,
340282366920938463457697397356393496019 => bb30,
_ => bb29
}
}
bb28 = {
_3 = [true,false];
_3 = _7;
_18 = _13.0 as usize;
_21.0 = 3714994891153092260_u64;
_10 = _7;
_12 = [false,true];
_1 = [true,true];
_11 = [true,true];
_9 = [true,false];
_16 = [(-158653769096693613550896219429566847419_i128),(-69922000814568215102770535786354236765_i128),90954490739511189560979224520864642416_i128,169862327343228541878445745348122382636_i128];
_5 = [true,false];
_21 = (16603883809711999682_u64,);
Goto(bb3)
}
bb29 = {
_1 = [false,false];
_22 = (_20.0, false, _20.0);
_22.0 = _18 as f32;
_22.1 = true | false;
_20 = (_22.2,);
_23 = core::ptr::addr_of_mut!(_22.1);
_4 = [_22.1,(*_23)];
_23 = core::ptr::addr_of_mut!((*_23));
_9 = [(*_23),_22.1];
_10 = [(*_23),(*_23)];
_21 = (9396272206802738415_u64,);
_22.1 = _22.2 < _20.0;
_14 = [24749_i16,798_i16,(-11703_i16),(-23609_i16),(-4299_i16)];
_15 = 1893699747462514138911979851737504614_i128 as f64;
_18 = 3_usize << _21.0;
_25 = core::ptr::addr_of!(_16);
_5 = [_22.1,_22.1];
Call(_17 = fn19(_7, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb30 = {
_23 = core::ptr::addr_of_mut!(_36);
_45.0 = _50;
_55 = _46;
_34 = _48;
_28 = _41 as i16;
_2 = [_22.1,_42];
_7 = _2;
_16 = [_33,_33,_33,_33];
_32 = &_44;
_2 = _11;
_15 = -_43;
_18 = 0_usize << _26;
_13.0 = _50;
_14 = [_48,_28,_48,_34,_48];
_47 = 91_i8 * (-83_i8);
_5 = [_22.1,_42];
Goto(bb31)
}
bb31 = {
_43 = -_15;
_48 = _41 as i16;
_22.0 = _44 as f32;
_10 = [(*_23),(*_23)];
_13 = (_45.0,);
_4 = [_42,_22.1];
_21 = (3399252274898801742_u64,);
_49 = _15;
_17 = core::ptr::addr_of!(_44);
_23 = core::ptr::addr_of_mut!((*_23));
_29.2 = _29.0;
_16 = [_33,_33,_33,_33];
_45 = (_50,);
_52 = _21.0;
_1 = [_36,_36];
_28 = _34;
match _31 {
0 => bb22,
1 => bb32,
340282366920938463457697397356393496019 => bb34,
_ => bb33
}
}
bb32 = {
_3 = [true,false];
_3 = _7;
_18 = _13.0 as usize;
_21.0 = 3714994891153092260_u64;
_10 = _7;
_12 = [false,true];
_1 = [true,true];
_11 = [true,true];
_9 = [true,false];
_16 = [(-158653769096693613550896219429566847419_i128),(-69922000814568215102770535786354236765_i128),90954490739511189560979224520864642416_i128,169862327343228541878445745348122382636_i128];
_5 = [true,false];
_21 = (16603883809711999682_u64,);
Goto(bb3)
}
bb33 = {
_20.0 = _22.0 * _29.0;
_8 = [(*_23),_22.1];
_16 = [129863927089758504726789240565050670574_i128,62479456720431306414804859194449896491_i128,27242278976564048942370837193145426446_i128,(-53948954991999058425234426926896584786_i128)];
_10 = [_22.1,(*_23)];
_29.1 = !_22.1;
_16 = [70111911314180467764952358161598590193_i128,(-140491118228437679336441078100846199599_i128),(-91207213541222796181646796492086103634_i128),28269317819110801345087816970457952921_i128];
_22.0 = _20.0;
_6 = [_29.1,_29.1];
_21 = (16119186810794222520_u64,);
_8 = [(*_23),_22.1];
_13.0 = '\u{8bc06}';
_1 = _3;
_24 = !160_u8;
_18 = 2_usize;
_29.1 = _21.0 >= _21.0;
_14[_18] = _28 ^ _28;
_24 = 7_u8 & 149_u8;
_31 = (-5677210075374715437_i64);
_3 = [(*_23),_29.1];
_14[_18] = _28 | _28;
_20.0 = _22.2 - _29.0;
_26 = _22.0 as u8;
_20 = (_22.2,);
_6 = _11;
_22.1 = _24 <= _26;
_6 = _1;
_18 = !16777972022566295934_usize;
_22.0 = (-14_isize) as f32;
Goto(bb8)
}
bb34 = {
_21.0 = _52 >> _26;
_29.2 = -_22.2;
_21.0 = _52 >> _18;
_35 = [_48,_28,_34,_34,_48];
_56 = !_21.0;
_41 = _21.0 as isize;
_21 = (_56,);
_53.fld0.0 = [(-1964366715_i32),549809942_i32,(-1357767231_i32),(-597290647_i32)];
_22 = _29;
_3 = [_42,(*_23)];
_45.0 = _50;
_11 = _6;
match (*_32) {
0 => bb18,
1 => bb19,
2 => bb31,
3 => bb21,
4 => bb16,
232439071899494543221509473357544402763 => bb35,
_ => bb8
}
}
bb35 = {
_31 = _55 * _55;
_26 = !_24;
_9 = [(*_23),(*_23)];
_53.fld0.0 = [(-1790609457_i32),894383138_i32,(-1546733081_i32),(-416516434_i32)];
_62.0 = _28 as f32;
_25 = core::ptr::addr_of!((*_25));
_65 = (_14, _41, _33, _49);
_59 = _22;
_35 = [_34,_34,_34,_34,_34];
_33 = !_65.2;
_20.0 = _59.0;
_1 = [_22.1,_42];
_44 = 96377123628954717280343182461323911019_u128;
_59.1 = _22.1;
_22.0 = _59.2 + _59.2;
_37 = [_59.1,(*_23)];
_22.0 = -_29.0;
Goto(bb36)
}
bb36 = {
_67 = core::ptr::addr_of_mut!(_47);
_33 = -_65.2;
_8 = [_36,_29.1];
_48 = _46 as i16;
_12 = [_36,_59.1];
_22.1 = _43 > _65.3;
_65.0 = [_28,_28,_28,_28,_48];
_57 = _50;
_54 = -_41;
_20 = (_22.2,);
_26 = !_24;
_55 = -_46;
_45.0 = _57;
_61 = _15 + _65.3;
_43 = _15 - _15;
_9 = [(*_23),(*_23)];
_4 = [_36,_42];
_42 = _54 < _54;
_22.2 = _20.0 * _20.0;
_70.2 = _44 * _44;
_68 = !2753742342_u32;
_3 = _8;
_44 = _70.2 * _70.2;
_20 = (_22.2,);
_20 = (_22.0,);
_72.2 = _62.0 + _22.0;
_35 = [_48,_48,_34,_48,_48];
match _52 {
0 => bb8,
1 => bb6,
2 => bb37,
3 => bb38,
4 => bb39,
3399252274898801742 => bb41,
_ => bb40
}
}
bb37 = {
_1 = [false,false];
_22 = (_20.0, false, _20.0);
_22.0 = _18 as f32;
_22.1 = true | false;
_20 = (_22.2,);
_23 = core::ptr::addr_of_mut!(_22.1);
_4 = [_22.1,(*_23)];
_23 = core::ptr::addr_of_mut!((*_23));
_9 = [(*_23),_22.1];
_10 = [(*_23),(*_23)];
_21 = (9396272206802738415_u64,);
_22.1 = _22.2 < _20.0;
_14 = [24749_i16,798_i16,(-11703_i16),(-23609_i16),(-4299_i16)];
_15 = 1893699747462514138911979851737504614_i128 as f64;
_18 = 3_usize << _21.0;
_25 = core::ptr::addr_of!(_16);
_5 = [_22.1,_22.1];
Call(_17 = fn19(_7, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb38 = {
_14 = [4167_i16,14221_i16,31571_i16,(-27416_i16),6398_i16];
_22.2 = _21.0 as f32;
_21 = (13622942474128354082_u64,);
_6 = [true,false];
_12 = [false,true];
_2 = [false,true];
_20 = (_22.2,);
Goto(bb4)
}
bb39 = {
_20 = (_29.0,);
_3 = [(*_23),_22.1];
_6 = [(*_23),(*_23)];
_8 = _1;
_29 = (_22.0, (*_23), _22.0);
_29.1 = !(*_23);
_4 = [_22.1,(*_23)];
_1 = [(*_23),_29.1];
_22 = _29;
_4 = [_22.1,(*_23)];
_36 = (*_23) | (*_23);
_37 = [_36,(*_23)];
_29 = (_22.2, _22.1, _22.0);
_24 = !_26;
_29.2 = -_29.0;
_29.0 = -_22.0;
_29 = (_22.0, _36, _22.0);
_41 = (-9223372036854775808_isize) + (-9223372036854775808_isize);
_43 = _31 as f64;
_42 = !_22.1;
_29.0 = _21.0 as f32;
_21.0 = !10378562430037412195_u64;
_22.2 = _33 as f32;
Goto(bb18)
}
bb40 = {
_3 = [true,false];
_3 = _7;
_18 = _13.0 as usize;
_21.0 = 3714994891153092260_u64;
_10 = _7;
_12 = [false,true];
_1 = [true,true];
_11 = [true,true];
_9 = [true,false];
_16 = [(-158653769096693613550896219429566847419_i128),(-69922000814568215102770535786354236765_i128),90954490739511189560979224520864642416_i128,169862327343228541878445745348122382636_i128];
_5 = [true,false];
_21 = (16603883809711999682_u64,);
Goto(bb3)
}
bb41 = {
_72.0 = _47 as f32;
_68 = !638785238_u32;
_58 = (-688191209_i32);
_53.fld0.0 = [_58,_58,_58,_58];
_34 = !_28;
_11 = [(*_23),_59.1];
_23 = core::ptr::addr_of_mut!(_29.1);
_20.0 = -_22.2;
_10 = _8;
_13 = (_50,);
_72.2 = _22.2;
_70.2 = !_44;
_76 = [_68,_68,_68];
_69 = _41;
_65.1 = _54;
RET = core::ptr::addr_of_mut!(_74);
_44 = _70.2;
_29.1 = _36;
Goto(bb42)
}
bb42 = {
Call(_78 = dump_var(6_usize, 37_usize, Move(_37), 6_usize, Move(_6), 11_usize, Move(_11), 24_usize, Move(_24)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Call(_78 = dump_var(6_usize, 1_usize, Move(_1), 8_usize, Move(_8), 7_usize, Move(_7), 34_usize, Move(_34)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_78 = dump_var(6_usize, 41_usize, Move(_41), 14_usize, Move(_14), 45_usize, Move(_45), 4_usize, Move(_4)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_78 = dump_var(6_usize, 58_usize, Move(_58), 5_usize, Move(_5), 33_usize, Move(_33), 46_usize, Move(_46)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_78 = dump_var(6_usize, 18_usize, Move(_18), 3_usize, Move(_3), 35_usize, Move(_35), 12_usize, Move(_12)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_78 = dump_var(6_usize, 9_usize, Move(_9), 56_usize, Move(_56), 79_usize, _79, 79_usize, _79), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: [bool; 2],mut _5: [bool; 2],mut _6: [bool; 2]) -> [bool; 2] {
mir! {
type RET = [bool; 2];
let _7: [bool; 2];
let _8: Adt46;
let _9: (f32,);
let _10: f32;
let _11: Adt48;
let _12: [i16; 5];
let _13: i16;
let _14: (f32, bool, f32);
let _15: bool;
let _16: char;
let _17: char;
let _18: (char,);
let _19: ();
let _20: ();
{
RET = _6;
_4 = _1;
_1 = [false,false];
RET = [false,false];
_5 = [true,true];
_4 = [false,true];
RET = _2;
_7 = _2;
RET = [true,false];
_7 = [true,true];
_8.fld3 = (3809081733521794803_u64,);
_8.fld0 = _8.fld3.0 == _8.fld3.0;
RET = [_8.fld0,_8.fld0];
_8.fld1 = core::ptr::addr_of_mut!(_8.fld0);
_8.fld2 = [_8.fld0,_8.fld0];
_8.fld0 = true;
_1 = _2;
match _8.fld3.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
3809081733521794803 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = [_8.fld0,_8.fld0];
_8.fld7 = [8591_i16,(-17619_i16),26585_i16,(-30855_i16),(-17706_i16)];
_6 = [_8.fld0,_8.fld0];
_4 = [_8.fld0,_8.fld0];
_8.fld5 = Adt45::Variant0 { fld0: _8.fld3.0 };
Call(_10 = fn8(_1, _1, _1, _3, _1, _2, _2, _1, _1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = _2;
_7 = [_8.fld0,_8.fld0];
_7 = [_8.fld0,_8.fld0];
RET = [_8.fld0,_8.fld0];
_4 = _1;
_3 = _1;
match _8.fld3.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
3809081733521794803 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_8.fld3.0 = Field::<u64>(Variant(_8.fld5, 0), 0);
_13 = (-9223372036854775808_isize) as i16;
SetDiscriminant(_8.fld5, 2);
_8.fld7 = [_13,_13,_13,_13,_13];
_9 = (_10,);
_9 = (_10,);
_13 = (-95_isize) as i16;
_2 = [_8.fld0,_8.fld0];
_8.fld7 = [_13,_13,_13,_13,_13];
RET = [_8.fld0,_8.fld0];
_12 = _8.fld7;
place!(Field::<(*const u128, *const usize, i8)>(Variant(_8.fld5, 2), 0)).2 = _13 as i8;
place!(Field::<(*const u128, *const usize, i8)>(Variant(_8.fld5, 2), 0)).2 = -(-51_i8);
_1 = _4;
_8.fld5 = Adt45::Variant0 { fld0: _8.fld3.0 };
_8.fld7 = [_13,_13,_13,_13,_13];
_8.fld5 = Adt45::Variant0 { fld0: _8.fld3.0 };
RET = [_8.fld0,_8.fld0];
_14.0 = _9.0 + _10;
Goto(bb12)
}
bb12 = {
_4 = [_8.fld0,_8.fld0];
_1 = [_8.fld0,_8.fld0];
_8.fld3 = (Field::<u64>(Variant(_8.fld5, 0), 0),);
RET = _3;
RET = [_8.fld0,_8.fld0];
_16 = '\u{f096}';
_14.2 = _8.fld3.0 as f32;
_18 = (_16,);
_2 = [_8.fld0,_8.fld0];
RET = _3;
_1 = [_8.fld0,_8.fld0];
_12 = [_13,_13,_13,_13,_13];
place!(Field::<u64>(Variant(_8.fld5, 0), 0)) = !_8.fld3.0;
_4 = _3;
_15 = !_8.fld0;
RET = _3;
_14.0 = _10;
_9.0 = -_10;
RET = _3;
Goto(bb13)
}
bb13 = {
Call(_19 = dump_var(7_usize, 6_usize, Move(_6), 1_usize, Move(_1), 18_usize, Move(_18), 4_usize, Move(_4)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_19 = dump_var(7_usize, 5_usize, Move(_5), 3_usize, Move(_3), 20_usize, _20, 20_usize, _20), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: [bool; 2],mut _5: [bool; 2],mut _6: [bool; 2],mut _7: [bool; 2],mut _8: [bool; 2],mut _9: [bool; 2]) -> f32 {
mir! {
type RET = f32;
let _10: f32;
let _11: i8;
let _12: (u64,);
let _13: isize;
let _14: u64;
let _15: ([i32; 4],);
let _16: usize;
let _17: Adt57;
let _18: Adt46;
let _19: ([i16; 5], isize, i128, f64);
let _20: f32;
let _21: bool;
let _22: Adt56;
let _23: *mut (f64, u64, &'static u128);
let _24: Adt43;
let _25: f32;
let _26: Adt48;
let _27: (f32, bool, f32);
let _28: bool;
let _29: *const f32;
let _30: ();
let _31: ();
{
RET = (-40_i8) as f32;
RET = 1076738689_u32 as f32;
_3 = [true,false];
_7 = [false,false];
_9 = _5;
_9 = [true,false];
_8 = [true,true];
Call(_3 = fn9(_5, _6, _5, _2, _2, _5, _2, _2, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = (-2158634283183319678_i64) as f32;
_5 = [false,false];
_4 = _6;
RET = (-72_i8) as f32;
_6 = [true,false];
RET = (-1718937889_i32) as f32;
_10 = 1232668488052173376_i64 as f32;
RET = 73_i8 as f32;
RET = _10;
_5 = [false,false];
_8 = _2;
RET = -_10;
Goto(bb2)
}
bb2 = {
_4 = [true,true];
_6 = [true,false];
_12.0 = 9451283872011495826_u64 ^ 16633222401085233128_u64;
_9 = _8;
_9 = [false,false];
_7 = [true,true];
_9 = [true,true];
_4 = [true,true];
RET = -_10;
_2 = [false,true];
_7 = [false,true];
_5 = _8;
_9 = [true,false];
_10 = RET;
_9 = _8;
_3 = [false,true];
_13 = 9223372036854775807_isize;
_2 = [true,true];
_7 = [false,true];
RET = -_10;
Goto(bb3)
}
bb3 = {
Call(_8 = fn10(_5, _9, _5, _5, _1, _9, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_3 = [true,false];
_11 = (-50_i8);
_9 = _8;
_10 = -RET;
_14 = _12.0;
RET = _10 - _10;
_6 = [true,true];
_4 = [false,true];
_9 = _1;
_13 = (-9223372036854775808_isize) * (-43_isize);
_6 = [false,true];
_9 = _8;
_11 = 139627658734903275988170795164249860306_u128 as i8;
_5 = [false,true];
_10 = _14 as f32;
_12.0 = _14 * _14;
_2 = _9;
_7 = [true,false];
_16 = 5_usize;
_9 = _8;
Goto(bb5)
}
bb5 = {
_16 = !17841356500366815075_usize;
_15.0 = [2143257400_i32,(-1509966409_i32),(-333613507_i32),1003880309_i32];
_13 = 92_isize;
_13 = (-47_isize) << _12.0;
RET = _10;
_8 = [false,true];
_5 = _2;
_8 = _5;
_18.fld3 = _12;
_5 = [false,true];
_18.fld2 = [true,true];
_19.0 = [20296_i16,12013_i16,32216_i16,7853_i16,6463_i16];
_18.fld3.0 = !_14;
_18.fld2 = [false,true];
_5 = [true,false];
_18.fld3 = _12;
_8 = [false,false];
RET = _10;
_19.3 = 69_u8 as f64;
_19.2 = (-124864056762924654164834703177091432627_i128);
_6 = _2;
_19.1 = _13;
RET = -_10;
match _19.2 {
0 => bb1,
1 => bb4,
2 => bb6,
215418310158013809298539904254676778829 => bb8,
_ => bb7
}
}
bb6 = {
_3 = [true,false];
_11 = (-50_i8);
_9 = _8;
_10 = -RET;
_14 = _12.0;
RET = _10 - _10;
_6 = [true,true];
_4 = [false,true];
_9 = _1;
_13 = (-9223372036854775808_isize) * (-43_isize);
_6 = [false,true];
_9 = _8;
_11 = 139627658734903275988170795164249860306_u128 as i8;
_5 = [false,true];
_10 = _14 as f32;
_12.0 = _14 * _14;
_2 = _9;
_7 = [true,false];
_16 = 5_usize;
_9 = _8;
Goto(bb5)
}
bb7 = {
_4 = [true,true];
_6 = [true,false];
_12.0 = 9451283872011495826_u64 ^ 16633222401085233128_u64;
_9 = _8;
_9 = [false,false];
_7 = [true,true];
_9 = [true,true];
_4 = [true,true];
RET = -_10;
_2 = [false,true];
_7 = [false,true];
_5 = _8;
_9 = [true,false];
_10 = RET;
_9 = _8;
_3 = [false,true];
_13 = 9223372036854775807_isize;
_2 = [true,true];
_7 = [false,true];
RET = -_10;
Goto(bb3)
}
bb8 = {
_18.fld4 = core::ptr::addr_of_mut!(_11);
_10 = (-2076131613_i32) as f32;
_13 = _19.1 >> _19.2;
_18.fld1 = core::ptr::addr_of_mut!(_21);
_9 = [true,false];
_4 = [true,true];
_18.fld3.0 = _12.0;
_19.1 = _19.3 as isize;
_10 = RET - RET;
_18.fld2 = [false,false];
_21 = !false;
_5 = [_21,_21];
_19.3 = _12.0 as f64;
_20 = -RET;
_4 = _1;
_18.fld6 = core::ptr::addr_of!(_11);
_18.fld7 = [(-12931_i16),811_i16,16543_i16,(-17692_i16),(-26445_i16)];
_2 = _1;
_18.fld4 = core::ptr::addr_of_mut!(_11);
_4 = _6;
_1 = [_21,_21];
Goto(bb9)
}
bb9 = {
_18.fld1 = core::ptr::addr_of_mut!(_18.fld0);
_15.0 = [(-376877852_i32),(-1605362455_i32),(-1681341425_i32),1911809750_i32];
_19.2 = (-32690123446878850474603415909126938853_i128) - (-827403694529035515649941785401967275_i128);
RET = _10;
Call(_21 = fn11(_20, _18.fld3.0, _2, _19.0, _2, _2, _4, _4, _2, _2, _6, _4, _4, _12, _2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_6 = _2;
_9 = [_21,_21];
_18.fld7 = _19.0;
RET = 1648333082_u32 as f32;
_19.0 = [30651_i16,(-16362_i16),22940_i16,23034_i16,727_i16];
_18.fld6 = core::ptr::addr_of!(_11);
_18.fld1 = core::ptr::addr_of_mut!(_21);
_18.fld1 = core::ptr::addr_of_mut!(_18.fld0);
_19.1 = _21 as isize;
_12.0 = _18.fld3.0 * _18.fld3.0;
_16 = !6_usize;
_5 = [_21,_21];
_18.fld3.0 = _19.1 as u64;
_21 = !false;
Goto(bb11)
}
bb11 = {
_7 = [_21,_21];
_18.fld6 = core::ptr::addr_of!(_11);
_18.fld0 = _21 | _21;
_25 = _20 + _10;
_25 = _10;
_18.fld4 = core::ptr::addr_of_mut!(_11);
_7 = _6;
_6 = [_18.fld0,_18.fld0];
_12.0 = _18.fld3.0;
_19.2 = 70488290310960746167341502029300307512_i128;
_4 = [_21,_18.fld0];
RET = _25 * _25;
match _19.2 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
70488290310960746167341502029300307512 => bb17,
_ => bb16
}
}
bb12 = {
_16 = !17841356500366815075_usize;
_15.0 = [2143257400_i32,(-1509966409_i32),(-333613507_i32),1003880309_i32];
_13 = 92_isize;
_13 = (-47_isize) << _12.0;
RET = _10;
_8 = [false,true];
_5 = _2;
_8 = _5;
_18.fld3 = _12;
_5 = [false,true];
_18.fld2 = [true,true];
_19.0 = [20296_i16,12013_i16,32216_i16,7853_i16,6463_i16];
_18.fld3.0 = !_14;
_18.fld2 = [false,true];
_5 = [true,false];
_18.fld3 = _12;
_8 = [false,false];
RET = _10;
_19.3 = 69_u8 as f64;
_19.2 = (-124864056762924654164834703177091432627_i128);
_6 = _2;
_19.1 = _13;
RET = -_10;
match _19.2 {
0 => bb1,
1 => bb4,
2 => bb6,
215418310158013809298539904254676778829 => bb8,
_ => bb7
}
}
bb13 = {
Call(_8 = fn10(_5, _9, _5, _5, _1, _9, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_18.fld4 = core::ptr::addr_of_mut!(_11);
_10 = (-2076131613_i32) as f32;
_13 = _19.1 >> _19.2;
_18.fld1 = core::ptr::addr_of_mut!(_21);
_9 = [true,false];
_4 = [true,true];
_18.fld3.0 = _12.0;
_19.1 = _19.3 as isize;
_10 = RET - RET;
_18.fld2 = [false,false];
_21 = !false;
_5 = [_21,_21];
_19.3 = _12.0 as f64;
_20 = -RET;
_4 = _1;
_18.fld6 = core::ptr::addr_of!(_11);
_18.fld7 = [(-12931_i16),811_i16,16543_i16,(-17692_i16),(-26445_i16)];
_2 = _1;
_18.fld4 = core::ptr::addr_of_mut!(_11);
_4 = _6;
_1 = [_21,_21];
Goto(bb9)
}
bb15 = {
_3 = [true,false];
_11 = (-50_i8);
_9 = _8;
_10 = -RET;
_14 = _12.0;
RET = _10 - _10;
_6 = [true,true];
_4 = [false,true];
_9 = _1;
_13 = (-9223372036854775808_isize) * (-43_isize);
_6 = [false,true];
_9 = _8;
_11 = 139627658734903275988170795164249860306_u128 as i8;
_5 = [false,true];
_10 = _14 as f32;
_12.0 = _14 * _14;
_2 = _9;
_7 = [true,false];
_16 = 5_usize;
_9 = _8;
Goto(bb5)
}
bb16 = {
_3 = [true,false];
_11 = (-50_i8);
_9 = _8;
_10 = -RET;
_14 = _12.0;
RET = _10 - _10;
_6 = [true,true];
_4 = [false,true];
_9 = _1;
_13 = (-9223372036854775808_isize) * (-43_isize);
_6 = [false,true];
_9 = _8;
_11 = 139627658734903275988170795164249860306_u128 as i8;
_5 = [false,true];
_10 = _14 as f32;
_12.0 = _14 * _14;
_2 = _9;
_7 = [true,false];
_16 = 5_usize;
_9 = _8;
Goto(bb5)
}
bb17 = {
_27.0 = -_25;
_6 = [_18.fld0,_18.fld0];
_27.2 = _11 as f32;
_25 = RET;
_18.fld3 = (_12.0,);
_7 = _2;
_4 = [_18.fld0,_18.fld0];
_25 = RET - RET;
_18.fld4 = core::ptr::addr_of_mut!(_11);
Goto(bb18)
}
bb18 = {
Call(_30 = dump_var(8_usize, 13_usize, Move(_13), 5_usize, Move(_5), 2_usize, Move(_2), 15_usize, Move(_15)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_30 = dump_var(8_usize, 8_usize, Move(_8), 9_usize, Move(_9), 21_usize, Move(_21), 11_usize, Move(_11)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: [bool; 2],mut _5: [bool; 2],mut _6: [bool; 2],mut _7: [bool; 2],mut _8: [bool; 2],mut _9: [bool; 2]) -> [bool; 2] {
mir! {
type RET = [bool; 2];
let _10: [i128; 4];
let _11: i64;
let _12: isize;
let _13: u32;
let _14: Adt53;
let _15: isize;
let _16: Adt49;
let _17: Adt57;
let _18: ();
let _19: ();
{
_1 = [true,true];
_1 = [false,false];
Goto(bb1)
}
bb1 = {
_4 = [false,false];
_8 = [true,false];
_5 = [true,true];
_7 = _2;
RET = [false,true];
_7 = [true,true];
_8 = [true,false];
RET = [true,false];
_2 = _6;
_1 = [true,true];
_1 = _9;
_8 = _3;
_3 = [true,true];
_6 = [false,true];
_6 = _1;
RET = [false,false];
_8 = [false,false];
_4 = [true,true];
_10 = [26957795968249004693285793920310333581_i128,(-31000070913463358662157918742015035528_i128),(-27670599946224893998028491320118271341_i128),84417638903784419937620189087129517180_i128];
_6 = _9;
_7 = _9;
_10 = [(-32793214253189548740792954911546593650_i128),82925294334568062184817824611471283653_i128,(-108267734853678720766653040383218865231_i128),(-57641732548732001695733936681252142336_i128)];
_11 = 5939941667509438021_i64;
_12 = 127_isize ^ 59_isize;
_5 = [false,false];
_5 = _7;
_5 = [true,false];
Goto(bb2)
}
bb2 = {
_4 = [false,false];
_6 = [true,true];
_5 = RET;
_12 = (-1057424162_i32) as isize;
_7 = [true,true];
_4 = [true,true];
_13 = !2546128461_u32;
_8 = [true,true];
_7 = [false,true];
_8 = [true,true];
RET = [true,false];
RET = _2;
_3 = [true,true];
_7 = [false,false];
Goto(bb3)
}
bb3 = {
Call(_18 = dump_var(9_usize, 4_usize, Move(_4), 11_usize, Move(_11), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_18 = dump_var(9_usize, 7_usize, Move(_7), 1_usize, Move(_1), 19_usize, _19, 19_usize, _19), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: [bool; 2],mut _5: [bool; 2],mut _6: [bool; 2],mut _7: [bool; 2]) -> [bool; 2] {
mir! {
type RET = [bool; 2];
let _8: f32;
let _9: Adt53;
let _10: bool;
let _11: (f32,);
let _12: ();
let _13: ();
{
RET = _4;
_6 = _5;
_4 = [true,true];
_1 = [true,true];
_4 = [false,false];
_6 = [false,false];
_10 = 9223372036854775807_isize < (-9223372036854775808_isize);
RET = _3;
_4 = [_10,_10];
_8 = (-565902007_i32) as f32;
RET = _2;
_5 = RET;
_1 = [_10,_10];
_8 = 6_usize as f32;
_2 = RET;
_4 = _2;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(10_usize, 3_usize, Move(_3), 5_usize, Move(_5), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: f32,mut _2: u64,mut _3: [bool; 2],mut _4: [i16; 5],mut _5: [bool; 2],mut _6: [bool; 2],mut _7: [bool; 2],mut _8: [bool; 2],mut _9: [bool; 2],mut _10: [bool; 2],mut _11: [bool; 2],mut _12: [bool; 2],mut _13: [bool; 2],mut _14: (u64,),mut _15: [bool; 2]) -> bool {
mir! {
type RET = bool;
let _16: f32;
let _17: bool;
let _18: isize;
let _19: (char, ([i16; 5], isize, i128, f64), isize);
let _20: isize;
let _21: isize;
let _22: Adt52;
let _23: i64;
let _24: *mut bool;
let _25: *const [i128; 4];
let _26: bool;
let _27: [bool; 2];
let _28: ();
let _29: ();
{
_8 = _3;
_10 = [false,true];
_15 = [true,true];
RET = true;
_4 = [(-9567_i16),3925_i16,31730_i16,23527_i16,(-22149_i16)];
_8 = [RET,RET];
_14.0 = !_2;
Goto(bb1)
}
bb1 = {
_14 = (_2,);
_3 = _11;
_15 = [RET,RET];
_11 = _5;
_4 = [21940_i16,(-20361_i16),32568_i16,1966_i16,(-2478_i16)];
_14.0 = !_2;
_10 = [RET,RET];
_15 = [RET,RET];
_1 = 127187077108643503870969817863077525290_i128 as f32;
_17 = RET | RET;
RET = !_17;
_16 = _1;
_12 = [_17,RET];
_14 = (_2,);
RET = _17;
_20 = 4622419599915321099_i64 as isize;
_19.1.2 = _14.0 as i128;
Call(_19.1.1 = fn12(_13, _7, _6, _19.1.2, _11, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_19.1.2 = (-107742986405379549093045771594811474129_i128) << _14.0;
_3 = [_17,RET];
_18 = _19.1.1 - _19.1.1;
_19.1.3 = (-43_i8) as f64;
_19.0 = '\u{103f09}';
Goto(bb3)
}
bb3 = {
_22.fld1.2 = _19.1.2;
_19.1.3 = 115_i8 as f64;
_16 = _1;
_3 = [RET,_17];
_14.0 = 193_u8 as u64;
_1 = _16;
_22.fld1.1 = _19.1.2 as isize;
_2 = _14.0 >> _19.1.2;
_18 = _22.fld1.1;
_19.1.0 = _4;
_22.fld1.3 = -_19.1.3;
_3 = [RET,_17];
_19.1.2 = _22.fld1.2 ^ _22.fld1.2;
_22.fld0 = !34_u8;
RET = _17;
_22.fld1.0 = [4520_i16,(-250_i16),(-13217_i16),(-24661_i16),(-22419_i16)];
_22.fld1.2 = _19.1.2 - _19.1.2;
_2 = _14.0 ^ _14.0;
_22.fld0 = _19.0 as u8;
_14 = (_2,);
_20 = _19.1.1 ^ _18;
Goto(bb4)
}
bb4 = {
_22.fld1.1 = (-7752245750768394415_i64) as isize;
_21 = _18 << _18;
_22.fld1.1 = _21;
_1 = _19.1.2 as f32;
_2 = _14.0;
_6 = [RET,RET];
_18 = _21;
_8 = [_17,RET];
RET = _22.fld1.1 != _21;
_19.0 = '\u{7c390}';
_22.fld1.1 = _18;
RET = _17 == _17;
_19 = ('\u{bc9a3}', _22.fld1, _22.fld1.1);
_16 = _1;
_22.fld1.0 = _19.1.0;
_15 = _5;
_22.fld1 = (_4, _19.2, _19.1.2, _19.1.3);
Goto(bb5)
}
bb5 = {
_1 = _16;
_22.fld1.2 = (-93_i8) as i128;
_5 = _15;
_4 = [(-6789_i16),(-25996_i16),16442_i16,(-23597_i16),13071_i16];
_2 = _14.0 | _14.0;
_15 = [RET,_17];
_19.1.3 = _22.fld1.3;
RET = _19.0 >= _19.0;
_22.fld1.0 = [2144_i16,17425_i16,(-15783_i16),20587_i16,2828_i16];
_8 = [RET,RET];
_23 = 62_i8 as i64;
_9 = [RET,RET];
Goto(bb6)
}
bb6 = {
Call(_28 = dump_var(11_usize, 8_usize, Move(_8), 10_usize, Move(_10), 15_usize, Move(_15), 9_usize, Move(_9)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_28 = dump_var(11_usize, 23_usize, Move(_23), 5_usize, Move(_5), 2_usize, Move(_2), 21_usize, Move(_21)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_28 = dump_var(11_usize, 3_usize, Move(_3), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: i128,mut _5: [bool; 2],mut _6: [bool; 2]) -> isize {
mir! {
type RET = isize;
let _7: bool;
let _8: Adt52;
let _9: u16;
let _10: (u64,);
let _11: f32;
let _12: [i32; 4];
let _13: isize;
let _14: char;
let _15: (f32,);
let _16: Adt45;
let _17: Adt52;
let _18: i16;
let _19: usize;
let _20: (u64,);
let _21: [u32; 3];
let _22: f32;
let _23: i16;
let _24: (f64, u64, &'static u128);
let _25: i8;
let _26: f64;
let _27: ([i16; 5], isize, i128, f64);
let _28: [u32; 3];
let _29: [u32; 3];
let _30: (char,);
let _31: char;
let _32: ([i16; 5], isize, i128, f64);
let _33: *mut (f64, u64, &'static u128);
let _34: i128;
let _35: [u32; 3];
let _36: isize;
let _37: [bool; 2];
let _38: char;
let _39: u8;
let _40: f32;
let _41: i128;
let _42: usize;
let _43: Adt52;
let _44: f32;
let _45: (char, ([i16; 5], isize, i128, f64), isize);
let _46: ([i32; 4],);
let _47: Adt48;
let _48: Adt43;
let _49: i16;
let _50: ([i32; 4],);
let _51: ();
let _52: ();
{
_2 = _3;
_4 = -(-36993665336413404818873649145378528060_i128);
_6 = [true,true];
_4 = (-29_i8) as i128;
RET = 9223372036854775807_isize;
_7 = true;
_6 = _1;
RET = 316795763695280331557900126801544678819_u128 as isize;
_3 = [_7,_7];
_2 = [_7,_7];
_9 = !5915_u16;
_8.fld0 = (-5744039407488872108_i64) as u8;
_10.0 = 16837491618087160730_u64 + 12101135503424371954_u64;
_8.fld1.0 = [13831_i16,(-22012_i16),12860_i16,12581_i16,27670_i16];
_3 = _1;
_8.fld0 = 149_u8 << _4;
RET = 1893127694_u32 as isize;
_11 = 293108404671400492320299872628025415128_u128 as f32;
_10.0 = 9353207284526560522_u64 & 8084955051083966559_u64;
_8.fld1.0 = [23140_i16,15601_i16,14517_i16,(-11611_i16),32725_i16];
_10.0 = !13978032274653850815_u64;
RET = -9223372036854775807_isize;
_5 = _3;
_2 = [_7,_7];
_2 = _1;
Goto(bb1)
}
bb1 = {
_8.fld1.0 = [17055_i16,(-29299_i16),20887_i16,6020_i16,(-31704_i16)];
Call(_3 = fn13(_6, _1, _6, _2, _5, _5, _6, _2, _6, _2, _2, _5, _6, _6, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = [_7,_7];
_8.fld1.2 = _8.fld0 as i128;
_8.fld1.1 = RET << _8.fld1.2;
_2 = _3;
_6 = [_7,_7];
_8.fld1.2 = 31210_i16 as i128;
_2 = [_7,_7];
_8.fld1.3 = 2642748960_u32 as f64;
_10.0 = _4 as u64;
RET = _8.fld1.1;
_11 = _9 as f32;
_9 = _8.fld1.3 as u16;
RET = _8.fld1.1;
_12 = [30147223_i32,1000925546_i32,1397124553_i32,419379398_i32];
_8.fld1.0 = [(-16866_i16),(-15330_i16),(-31828_i16),19479_i16,(-27768_i16)];
_10 = (14514285689490223034_u64,);
RET = (-13048_i16) as isize;
_8.fld1.2 = _4 & _4;
_8.fld1.3 = 13381327422816618597_usize as f64;
_10.0 = !16938048152427617011_u64;
_8.fld1.3 = 2147085018_i32 as f64;
RET = -_8.fld1.1;
_8.fld0 = (-8010_i16) as u8;
_5 = [_7,_7];
_8.fld0 = !141_u8;
RET = 5804007450943783274_usize as isize;
Goto(bb3)
}
bb3 = {
_4 = _8.fld1.2 + _8.fld1.2;
_12 = [(-965865217_i32),915969812_i32,(-814287348_i32),(-1405415818_i32)];
_12 = [894898732_i32,(-1795579233_i32),(-1778107539_i32),155551603_i32];
_8.fld1.2 = _4 - _4;
_8.fld1.3 = _8.fld1.2 as f64;
_15.0 = 8411772464666815728_usize as f32;
_15.0 = -_11;
_9 = 60402_u16 & 6846_u16;
_10.0 = 12073437765019819969_u64;
_6 = [_7,_7];
_13 = !_8.fld1.1;
_17.fld1.1 = _10.0 as isize;
_17.fld1 = (_8.fld1.0, _8.fld1.1, _4, _8.fld1.3);
_10.0 = 13752199523276258084_u64 | 948487614098550277_u64;
_3 = [_7,_7];
_12 = [(-611355634_i32),80465261_i32,896924680_i32,(-1988356661_i32)];
_17.fld0 = _7 as u8;
_15 = (_11,);
_8.fld1.1 = -RET;
Call(_17.fld1 = fn14(_1, _1, _8.fld1.3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_15 = (_11,);
_1 = [_7,_7];
_8.fld1.3 = (-7658394501137545068_i64) as f64;
_17.fld1.3 = _8.fld1.3 + _8.fld1.3;
_15.0 = 21262827888612409252568279905209426903_u128 as f32;
_3 = [_7,_7];
_1 = _3;
_19 = !10364780453209022731_usize;
_14 = '\u{4269a}';
_17.fld1 = _8.fld1;
_8.fld2 = core::ptr::addr_of!(_19);
_3 = _5;
_1 = [_7,_7];
_8.fld2 = core::ptr::addr_of!(_19);
_20 = (_10.0,);
_17.fld1.3 = _8.fld1.3;
_8.fld1 = (_17.fld1.0, _13, _17.fld1.2, _17.fld1.3);
_13 = -RET;
_15.0 = _11 + _11;
_17.fld0 = _10.0 as u8;
_2 = [_7,_7];
_17.fld1 = _8.fld1;
_11 = _15.0 - _15.0;
_8.fld2 = core::ptr::addr_of!(_19);
_18 = !(-16385_i16);
_21 = [1234583824_u32,3675053799_u32,3894657109_u32];
Call(_8.fld1.1 = fn17(_17.fld0, _17.fld1.3, _7, _17.fld1, _10.0, _12, _17.fld1.2, _17.fld1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_1 = [_7,_7];
_11 = -_15.0;
_20 = (_10.0,);
_10.0 = !_20.0;
_8.fld1.1 = _19 as isize;
_17.fld0 = !_8.fld0;
_17.fld1 = (_8.fld1.0, _8.fld1.1, _4, _8.fld1.3);
_17.fld2 = core::ptr::addr_of!(_19);
_22 = _15.0 - _11;
_11 = _22 * _22;
_1 = [_7,_7];
_2 = [_7,_7];
_17.fld2 = _8.fld2;
_17.fld0 = !_8.fld0;
_8.fld1.1 = _18 as isize;
RET = _20.0 as isize;
_8.fld0 = _17.fld0;
_23 = !_18;
_8.fld1.1 = !RET;
_2 = [_7,_7];
_17.fld1.3 = -_8.fld1.3;
_4 = !_8.fld1.2;
_5 = _1;
_15.0 = -_22;
Goto(bb6)
}
bb6 = {
_8.fld1.0 = [_23,_18,_18,_23,_23];
_17.fld1.0 = _8.fld1.0;
_23 = !_18;
_10 = _20;
_27.1 = RET;
RET = -_8.fld1.1;
_27.3 = -_17.fld1.3;
_24.0 = _8.fld1.3 - _17.fld1.3;
_17.fld2 = core::ptr::addr_of!(_19);
_16 = Adt45::Variant0 { fld0: _10.0 };
_19 = !9118280913957422739_usize;
_8 = Adt52 { fld0: _17.fld0,fld1: _17.fld1,fld2: _17.fld2 };
_11 = -_15.0;
_10.0 = Field::<u64>(Variant(_16, 0), 0);
_15.0 = 176528987150974685704317301312981296797_u128 as f32;
_27 = (_17.fld1.0, _13, _17.fld1.2, _8.fld1.3);
_20 = _10;
_8.fld1.0 = [_23,_23,_18,_23,_18];
SetDiscriminant(_16, 2);
_25 = -5_i8;
_8.fld1.0 = [_18,_18,_23,_18,_23];
_24.1 = _7 as u64;
_14 = '\u{ca663}';
Call(_17.fld1.3 = fn18(_15.0, _8, _8.fld1.2), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_8.fld2 = core::ptr::addr_of!(_19);
_1 = [_7,_7];
place!(Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0)).1 = core::ptr::addr_of!(_19);
_26 = _22 as f64;
_8.fld1.2 = -_4;
_8.fld1.2 = _8.fld0 as i128;
_17.fld0 = _22 as u8;
place!(Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0)).2 = _25;
_23 = _7 as i16;
_8.fld1.3 = _26;
Goto(bb8)
}
bb8 = {
_6 = [_7,_7];
_13 = _8.fld1.1 | _27.1;
_31 = _14;
_17.fld1.3 = -_26;
_8.fld1.1 = RET + RET;
_30.0 = _14;
_10.0 = Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0).2 as u64;
_35 = _21;
_27.2 = _17.fld1.2;
_17.fld1.0 = [_18,_18,_18,_18,_18];
_27.3 = _26;
_36 = -_8.fld1.1;
_13 = _36 << _4;
_13 = _17.fld1.1;
place!(Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0)).1 = _8.fld2;
_29 = [1791131828_u32,653442477_u32,2665275202_u32];
_15.0 = _9 as f32;
_34 = _4 >> _17.fld0;
_17.fld1.1 = (-616199993_i32) as isize;
Goto(bb9)
}
bb9 = {
_33 = core::ptr::addr_of_mut!(_24);
_32.1 = !RET;
RET = _7 as isize;
_20.0 = !(*_33).1;
_5 = [_7,_7];
_15 = (_22,);
_24.0 = _8.fld1.3 * _27.3;
Goto(bb10)
}
bb10 = {
_7 = true | false;
_17.fld1 = _27;
_17.fld0 = _8.fld0 ^ _8.fld0;
_8.fld1.3 = (*_33).0;
_27.2 = Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0).2 as i128;
_8.fld1 = _17.fld1;
_6 = [_7,_7];
_17.fld1.2 = -_4;
Goto(bb11)
}
bb11 = {
_38 = _31;
Goto(bb12)
}
bb12 = {
_27.0 = _17.fld1.0;
_13 = _30.0 as isize;
_17.fld1.1 = _19 as isize;
_8.fld1.3 = _24.0 - _24.0;
_30 = (_14,);
_40 = _19 as f32;
_31 = _38;
_2 = _1;
_8.fld1.2 = -_34;
_24.1 = _10.0;
_8.fld1.2 = _34;
_13 = _36 & _32.1;
_9 = 63636_u16 - 29290_u16;
_2 = _5;
Goto(bb13)
}
bb13 = {
_43.fld1.1 = _32.1;
_43.fld1 = _17.fld1;
place!(Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0)).2 = -_25;
_11 = -_15.0;
_32.0 = [_23,_18,_18,_18,_18];
_24.0 = _8.fld1.3 * _17.fld1.3;
_43.fld1.1 = _36;
_32 = (_43.fld1.0, _36, _17.fld1.2, _24.0);
_34 = !_32.2;
_27.0 = [_18,_23,_23,_18,_23];
_27.3 = -_8.fld1.3;
_43.fld2 = _8.fld2;
_27.0 = [_18,_23,_18,_23,_23];
_43.fld1.1 = _13;
_10.0 = (*_33).1;
_29 = [2404674462_u32,83240595_u32,3114571247_u32];
_6 = _2;
_13 = _27.1;
_15 = (_22,);
Goto(bb14)
}
bb14 = {
_19 = 6_usize;
_31 = _30.0;
_45.1 = _27;
_30 = (_31,);
_41 = -_43.fld1.2;
_8.fld1 = _45.1;
_46.0 = [(-2123389535_i32),1847413777_i32,1353039133_i32,1532146549_i32];
_8.fld1 = (_27.0, _36, _43.fld1.2, _17.fld1.3);
_12 = _46.0;
_46 = (_12,);
_32.1 = _7 as isize;
_17.fld2 = core::ptr::addr_of!(_19);
_45.1.0 = [_23,_23,_18,_23,_18];
_1 = _6;
_36 = Field::<(*const u128, *const usize, i8)>(Variant(_16, 2), 0).2 as isize;
_8.fld1 = _32;
Goto(bb15)
}
bb15 = {
Call(_51 = dump_var(12_usize, 34_usize, Move(_34), 1_usize, Move(_1), 13_usize, Move(_13), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_51 = dump_var(12_usize, 18_usize, Move(_18), 38_usize, Move(_38), 2_usize, Move(_2), 41_usize, Move(_41)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(12_usize, 23_usize, Move(_23), 10_usize, Move(_10), 35_usize, Move(_35), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_51 = dump_var(12_usize, 31_usize, Move(_31), 52_usize, _52, 52_usize, _52, 52_usize, _52), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: [bool; 2],mut _4: [bool; 2],mut _5: [bool; 2],mut _6: [bool; 2],mut _7: [bool; 2],mut _8: [bool; 2],mut _9: [bool; 2],mut _10: [bool; 2],mut _11: [bool; 2],mut _12: [bool; 2],mut _13: [bool; 2],mut _14: [bool; 2],mut _15: [bool; 2]) -> [bool; 2] {
mir! {
type RET = [bool; 2];
let _16: i8;
let _17: f32;
let _18: *const usize;
let _19: u16;
let _20: Adt56;
let _21: char;
let _22: ();
let _23: ();
{
_7 = [false,true];
_5 = _1;
_15 = _12;
_17 = 18_u8 as f32;
_1 = [false,false];
_3 = [false,true];
_5 = [false,true];
_12 = _15;
_15 = [true,true];
_5 = [true,false];
_2 = _12;
_10 = _3;
_5 = _6;
_5 = [false,false];
_12 = [true,true];
Goto(bb1)
}
bb1 = {
_8 = [false,false];
_12 = _14;
RET = _13;
_5 = [true,true];
RET = [true,true];
_2 = [true,false];
RET = _9;
_16 = -53_i8;
_7 = _6;
_19 = 10983_u16 - 23105_u16;
_4 = _13;
_14 = _4;
_19 = 33502_u16 - 31605_u16;
Goto(bb2)
}
bb2 = {
Call(_22 = dump_var(13_usize, 9_usize, Move(_9), 4_usize, Move(_4), 7_usize, Move(_7), 5_usize, Move(_5)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_22 = dump_var(13_usize, 14_usize, Move(_14), 1_usize, Move(_1), 16_usize, Move(_16), 6_usize, Move(_6)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: [bool; 2],mut _2: [bool; 2],mut _3: f64) -> ([i16; 5], isize, i128, f64) {
mir! {
type RET = ([i16; 5], isize, i128, f64);
let _4: usize;
let _5: Adt57;
let _6: isize;
let _7: ([i16; 5], isize, i128, f64);
let _8: f32;
let _9: [i128; 4];
let _10: Adt51;
let _11: *const f32;
let _12: (f32, bool, f32);
let _13: (f32, bool, f32);
let _14: Adt53;
let _15: Adt46;
let _16: ();
let _17: ();
{
RET.1 = 111_isize >> 9223372036854775807_isize;
RET.0 = [(-30815_i16),(-28789_i16),(-2790_i16),(-31030_i16),7991_i16];
Goto(bb1)
}
bb1 = {
_1 = [true,false];
RET.3 = _3;
RET.0 = [(-28199_i16),17917_i16,14233_i16,8543_i16,5088_i16];
RET.1 = -(-9223372036854775808_isize);
RET.0 = [9563_i16,133_i16,23134_i16,(-16925_i16),24882_i16];
RET.0 = [(-27636_i16),(-6468_i16),11482_i16,14270_i16,(-25004_i16)];
RET.1 = -9223372036854775807_isize;
RET.2 = !164798139374654738247554078486833512831_i128;
RET.0 = [(-10391_i16),(-16297_i16),(-16779_i16),(-23566_i16),(-24481_i16)];
_2 = [false,true];
RET.0 = [(-8142_i16),13993_i16,(-16409_i16),(-27211_i16),32757_i16];
RET.1 = 17498437036804515147_usize as isize;
RET.2 = 5467696351193732552845219416348916850_i128 ^ (-28574984775365510533176654024002186635_i128);
RET.0 = [27704_i16,13822_i16,11902_i16,28974_i16,(-32437_i16)];
_4 = 25102_u16 as usize;
RET.0 = [(-2433_i16),(-11649_i16),20695_i16,(-9971_i16),6139_i16];
Call(_6 = core::intrinsics::bswap(RET.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Goto(bb3)
}
bb3 = {
RET.1 = false as isize;
_7.3 = -RET.3;
RET.1 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_7.3 = -RET.3;
RET.1 = 9223372036854775807_isize;
_7.1 = !RET.1;
_1 = [true,true];
_7.2 = RET.2 | RET.2;
_6 = true as isize;
RET.0 = [21419_i16,(-24600_i16),10420_i16,25699_i16,31880_i16];
_7.3 = _7.2 as f64;
_3 = _7.3;
_7.0 = RET.0;
_7 = (RET.0, RET.1, RET.2, RET.3);
_7.1 = _6;
RET.3 = 66_i8 as f64;
_8 = 1295748154_i32 as f32;
RET.3 = 237_u8 as f64;
RET.1 = _7.1;
_7.0 = [6782_i16,(-5400_i16),12675_i16,(-2734_i16),29311_i16];
_8 = 1328212778_u32 as f32;
RET = (_7.0, _7.1, _7.2, _7.3);
Call(_6 = fn15(_7, RET.1, RET, _7, RET.3, _3, RET, RET.1, _7, RET.3, RET.3, RET.0, _7.0, RET.3, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_11 = core::ptr::addr_of!(_8);
_2 = [true,false];
_7.0 = [21613_i16,(-16917_i16),(-30318_i16),19421_i16,8190_i16];
RET.1 = _6 * _6;
RET.2 = !_7.2;
_11 = core::ptr::addr_of!(_12.2);
_12.2 = -_8;
RET.1 = 262948842310321722822688544150429462900_u128 as isize;
_4 = (-1318103574_i32) as usize;
_12.1 = _6 != _6;
_12.0 = 1088591128_i32 as f32;
_3 = _7.3 * RET.3;
_6 = -_7.1;
_12.0 = -_8;
RET.3 = 534969326_u32 as f64;
_7.1 = 176_u8 as isize;
_7 = (RET.0, RET.1, RET.2, _3);
_13.1 = _12.1 & _12.1;
_15.fld2 = [_12.1,_13.1];
RET.0 = _7.0;
RET.0 = [7863_i16,(-24780_i16),350_i16,(-4296_i16),7690_i16];
_12.0 = _4 as f32;
RET.0 = _7.0;
RET = (_7.0, _7.1, _7.2, _7.3);
_13 = _12;
_11 = core::ptr::addr_of!(_12.0);
Goto(bb5)
}
bb5 = {
Call(_16 = dump_var(14_usize, 4_usize, Move(_4), 1_usize, Move(_1), 17_usize, _17, 17_usize, _17), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: ([i16; 5], isize, i128, f64),mut _2: isize,mut _3: ([i16; 5], isize, i128, f64),mut _4: ([i16; 5], isize, i128, f64),mut _5: f64,mut _6: f64,mut _7: ([i16; 5], isize, i128, f64),mut _8: isize,mut _9: ([i16; 5], isize, i128, f64),mut _10: f64,mut _11: f64,mut _12: [i16; 5],mut _13: [i16; 5],mut _14: f64,mut _15: ([i16; 5], isize, i128, f64)) -> isize {
mir! {
type RET = isize;
let _16: (f64, u64, &'static u128);
let _17: isize;
let _18: i16;
let _19: Adt42;
let _20: f32;
let _21: [i32; 4];
let _22: *mut bool;
let _23: Adt51;
let _24: Adt56;
let _25: char;
let _26: (u64,);
let _27: [i16; 5];
let _28: ([i32; 4],);
let _29: char;
let _30: [u32; 3];
let _31: u128;
let _32: u64;
let _33: [bool; 2];
let _34: i128;
let _35: ();
let _36: ();
{
_15.2 = _4.2;
_1.2 = -_9.2;
_4.1 = _3.1;
_1.3 = -_5;
_8 = _4.1 - _7.1;
_15.0 = [(-23501_i16),(-11633_i16),30988_i16,(-12359_i16),(-24203_i16)];
_15.3 = 15469570075690442885_u64 as f64;
_4.0 = _9.0;
_4.3 = -_1.3;
_4.3 = _11 * _5;
_7.0 = [2920_i16,(-30438_i16),(-28261_i16),(-17711_i16),30019_i16];
RET = _8 << _7.2;
_3 = (_9.0, _9.1, _15.2, _4.3);
_2 = _9.1;
_3.2 = _8 as i128;
_3 = (_4.0, RET, _1.2, _1.3);
_10 = -_4.3;
_17 = _1.1 >> RET;
_3.0 = _4.0;
Goto(bb1)
}
bb1 = {
_3.0 = _9.0;
_6 = 6609400852609554945_i64 as f64;
_16.0 = 485170163_i32 as f64;
_4.3 = _14;
_20 = 221972755937060772553710940694171733579_u128 as f32;
_15.1 = _9.1;
_17 = 1022329942_u32 as isize;
_16.1 = '\u{b6e6}' as u64;
_15.0 = _3.0;
_18 = 21986_i16;
_13 = [_18,_18,_18,_18,_18];
Goto(bb2)
}
bb2 = {
_9.1 = _2 * _15.1;
_7.1 = _15.1 << _1.2;
_11 = _14;
_1 = (_15.0, _3.1, _7.2, _3.3);
_1.1 = 38576_u16 as isize;
_9.3 = _3.3;
_3.2 = _1.2;
_1.2 = _15.2;
_1.0 = [_18,_18,_18,_18,_18];
_3.2 = (-109_i8) as i128;
_17 = 336765920_u32 as isize;
RET = _15.1 << _1.2;
_3.0 = [_18,_18,_18,_18,_18];
_13 = _9.0;
_18 = 194262136155285810329118180846289728184_u128 as i16;
RET = false as isize;
_3.3 = _20 as f64;
_8 = 3370674632_u32 as isize;
_9.0 = [_18,_18,_18,_18,_18];
Goto(bb3)
}
bb3 = {
_8 = _3.1;
_15.2 = _4.2;
_9.0 = [_18,_18,_18,_18,_18];
_18 = 19785_i16;
_3 = (_13, _9.1, _7.2, _5);
_20 = 1463856974_u32 as f32;
_3 = (_7.0, _7.1, _9.2, _4.3);
_7.3 = -_4.3;
_10 = _1.3 + _1.3;
match _18 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
19785 => bb9,
_ => bb8
}
}
bb4 = {
_9.1 = _2 * _15.1;
_7.1 = _15.1 << _1.2;
_11 = _14;
_1 = (_15.0, _3.1, _7.2, _3.3);
_1.1 = 38576_u16 as isize;
_9.3 = _3.3;
_3.2 = _1.2;
_1.2 = _15.2;
_1.0 = [_18,_18,_18,_18,_18];
_3.2 = (-109_i8) as i128;
_17 = 336765920_u32 as isize;
RET = _15.1 << _1.2;
_3.0 = [_18,_18,_18,_18,_18];
_13 = _9.0;
_18 = 194262136155285810329118180846289728184_u128 as i16;
RET = false as isize;
_3.3 = _20 as f64;
_8 = 3370674632_u32 as isize;
_9.0 = [_18,_18,_18,_18,_18];
Goto(bb3)
}
bb5 = {
_3.0 = _9.0;
_6 = 6609400852609554945_i64 as f64;
_16.0 = 485170163_i32 as f64;
_4.3 = _14;
_20 = 221972755937060772553710940694171733579_u128 as f32;
_15.1 = _9.1;
_17 = 1022329942_u32 as isize;
_16.1 = '\u{b6e6}' as u64;
_15.0 = _3.0;
_18 = 21986_i16;
_13 = [_18,_18,_18,_18,_18];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_12 = [_18,_18,_18,_18,_18];
_1.0 = [_18,_18,_18,_18,_18];
_7 = (_15.0, _3.1, _15.2, _3.3);
_21 = [(-57524514_i32),1224498255_i32,(-1602085364_i32),(-887704053_i32)];
Call(_18 = core::intrinsics::bswap(7502_i16), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_15.0 = [_18,_18,_18,_18,_18];
_1 = (_3.0, _9.1, _15.2, _5);
_7.1 = _20 as isize;
RET = !_17;
_15.1 = _1.1 - _1.1;
_1 = (_9.0, _8, _4.2, _9.3);
_7 = (_4.0, _3.1, _4.2, _14);
_8 = _9.1;
_3 = (_7.0, _15.1, _1.2, _14);
_9.2 = _16.1 as i128;
_2 = _15.1 * _9.1;
_15.3 = 227691179351615116_usize as f64;
_15 = (_4.0, _2, _4.2, _5);
_8 = !_1.1;
Goto(bb11)
}
bb11 = {
_1.1 = _4.1;
_19 = Adt42::Variant3 { fld0: _21,fld1: (-1772148545_i32),fld2: _2 };
_4 = (_1.0, _2, _1.2, _14);
_5 = _1.3 * _6;
_7.2 = 5387656982709718588_usize as i128;
_4.0 = _7.0;
_9.1 = !_8;
Call(_7.0 = fn16(_9, _1, _2, _9, _9.1, _4.3, _15.1, _14, _4, _3, _10), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_7.2 = _4.2;
_17 = 4751351614364861378_usize as isize;
_21 = Field::<[i32; 4]>(Variant(_19, 3), 0);
_3.2 = !_9.2;
_5 = _4.3 + _14;
_15.1 = _1.3 as isize;
_6 = 167_u8 as f64;
_15.1 = Field::<isize>(Variant(_19, 3), 2);
Goto(bb13)
}
bb13 = {
_1.2 = _15.2 & _3.2;
_3.0 = [_18,_18,_18,_18,_18];
_4.3 = 282979402352702528586953674287412832196_u128 as f64;
_4.2 = _15.2;
_12 = [_18,_18,_18,_18,_18];
RET = _8 << Field::<isize>(Variant(_19, 3), 2);
_26.0 = _16.1 * _16.1;
_11 = _26.0 as f64;
_1 = _4;
_13 = [_18,_18,_18,_18,_18];
_15.0 = [_18,_18,_18,_18,_18];
_7 = (_1.0, Field::<isize>(Variant(_19, 3), 2), _15.2, _15.3);
_27 = _1.0;
_27 = [_18,_18,_18,_18,_18];
_7.1 = _17;
_15.3 = -_5;
_28 = (Field::<[i32; 4]>(Variant(_19, 3), 0),);
_9.3 = _10;
_6 = 7156352661616964909_usize as f64;
_4.1 = _1.1;
_14 = 21496_u16 as f64;
RET = _2 + _8;
_16.1 = _26.0;
_29 = '\u{54e80}';
Goto(bb14)
}
bb14 = {
_16.2 = &_31;
_10 = _15.3 - _11;
_9.1 = _20 as isize;
_16.0 = _7.3;
_30 = [1543488183_u32,1467032376_u32,2348092487_u32];
_31 = _26.0 as u128;
_32 = (-3461321300941780211_i64) as u64;
_32 = _16.1 ^ _26.0;
_9.3 = -_5;
_15.1 = !_1.1;
_15.1 = -_17;
_26 = (_16.1,);
_7.1 = _2;
_28.0 = [(-1090477355_i32),991057245_i32,(-1822640412_i32),389164065_i32];
_7.3 = _15.3;
_20 = (-4175363326928935610_i64) as f32;
_1.1 = !_8;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(15_usize, 2_usize, Move(_2), 18_usize, Move(_18), 26_usize, Move(_26), 30_usize, Move(_30)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(15_usize, 27_usize, Move(_27), 28_usize, Move(_28), 31_usize, Move(_31), 36_usize, _36), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: ([i16; 5], isize, i128, f64),mut _2: ([i16; 5], isize, i128, f64),mut _3: isize,mut _4: ([i16; 5], isize, i128, f64),mut _5: isize,mut _6: f64,mut _7: isize,mut _8: f64,mut _9: ([i16; 5], isize, i128, f64),mut _10: ([i16; 5], isize, i128, f64),mut _11: f64) -> [i16; 5] {
mir! {
type RET = [i16; 5];
let _12: i32;
let _13: (u64,);
let _14: char;
let _15: (char,);
let _16: u32;
let _17: Adt49;
let _18: u8;
let _19: Adt58;
let _20: isize;
let _21: i8;
let _22: (u64,);
let _23: Adt58;
let _24: isize;
let _25: (*const u128, *const usize, i8);
let _26: Adt55;
let _27: [i32; 4];
let _28: (char,);
let _29: f64;
let _30: isize;
let _31: ([i16; 5], isize, i128, f64);
let _32: u128;
let _33: [bool; 2];
let _34: [i32; 4];
let _35: u128;
let _36: *mut bool;
let _37: f64;
let _38: (*const u128, *const usize, i8);
let _39: bool;
let _40: isize;
let _41: bool;
let _42: (char,);
let _43: *const [i128; 4];
let _44: u128;
let _45: u32;
let _46: u128;
let _47: ();
let _48: ();
{
RET = _4.0;
_9.0 = [15700_i16,(-19687_i16),(-2830_i16),26232_i16,(-9153_i16)];
_4.2 = -_9.2;
_1.3 = _4.3 + _11;
_10 = _1;
RET = [(-11886_i16),22391_i16,(-26242_i16),12840_i16,19517_i16];
_4 = (RET, _3, _9.2, _8);
_2 = (_9.0, _3, _9.2, _10.3);
Goto(bb1)
}
bb1 = {
_10.1 = false as isize;
_1 = (_9.0, _2.1, _10.2, _11);
_9.0 = [17046_i16,(-11295_i16),11438_i16,(-25282_i16),(-29395_i16)];
_13.0 = 5601989126035483049_u64;
_4.3 = -_6;
_9.3 = _2.3;
_9.0 = [(-15461_i16),(-18305_i16),26612_i16,(-6837_i16),368_i16];
_12 = 1435390736_i32 * 444512451_i32;
_13.0 = !15133459588273878066_u64;
_10.2 = _9.2;
_2.1 = !_3;
_1.0 = [(-16183_i16),1494_i16,6654_i16,(-2002_i16),(-19773_i16)];
_9.1 = _1.2 as isize;
_10.3 = _4.3 + _9.3;
_5 = false as isize;
_9.2 = _2.2;
RET = _9.0;
_14 = '\u{1f8d9}';
_4.3 = _10.3 + _11;
_9.3 = _4.3;
_13.0 = 19309_i16 as u64;
_9.2 = _2.2;
_4 = (RET, _10.1, _9.2, _6);
_9 = (RET, _1.1, _1.2, _1.3);
Goto(bb2)
}
bb2 = {
_5 = _7 + _9.1;
_1.1 = 727773026_u32 as isize;
_5 = (-1565_i16) as isize;
_15.0 = _14;
_3 = _14 as isize;
_8 = _11 - _9.3;
_1.0 = [2113_i16,7778_i16,(-16598_i16),(-31654_i16),(-23331_i16)];
_1.3 = _12 as f64;
_2.1 = _9.1 * _7;
_13.0 = 12774341221884796364_u64;
_4.2 = _2.2 << _2.1;
_6 = -_8;
_5 = _2.1;
_5 = !_9.1;
_4 = (_9.0, _9.1, _1.2, _10.3);
Goto(bb3)
}
bb3 = {
RET = [7229_i16,(-7409_i16),(-3775_i16),(-15411_i16),(-16213_i16)];
_2.0 = [(-18165_i16),(-25586_i16),(-1451_i16),(-4125_i16),16060_i16];
_21 = (-10_i8);
_16 = 3054828375_u32 * 2172039521_u32;
_24 = -_7;
_15 = (_14,);
_2.2 = _9.2 & _9.2;
_1.2 = _2.2;
_23.fld2 = [false,true];
_5 = _9.3 as isize;
_19.fld2 = [false,false];
_9.3 = _8 * _6;
_1.3 = _2.3;
_4.2 = _2.2;
_10.2 = _16 as i128;
_9.3 = -_11;
_1.1 = _24 + _5;
_13 = (2557129368870254860_u64,);
_10.0 = [21935_i16,(-17935_i16),10451_i16,13095_i16,(-16632_i16)];
_22.0 = _21 as u64;
match _21 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
340282366920938463463374607431768211446 => bb8,
_ => bb7
}
}
bb4 = {
_5 = _7 + _9.1;
_1.1 = 727773026_u32 as isize;
_5 = (-1565_i16) as isize;
_15.0 = _14;
_3 = _14 as isize;
_8 = _11 - _9.3;
_1.0 = [2113_i16,7778_i16,(-16598_i16),(-31654_i16),(-23331_i16)];
_1.3 = _12 as f64;
_2.1 = _9.1 * _7;
_13.0 = 12774341221884796364_u64;
_4.2 = _2.2 << _2.1;
_6 = -_8;
_5 = _2.1;
_5 = !_9.1;
_4 = (_9.0, _9.1, _1.2, _10.3);
Goto(bb3)
}
bb5 = {
_10.1 = false as isize;
_1 = (_9.0, _2.1, _10.2, _11);
_9.0 = [17046_i16,(-11295_i16),11438_i16,(-25282_i16),(-29395_i16)];
_13.0 = 5601989126035483049_u64;
_4.3 = -_6;
_9.3 = _2.3;
_9.0 = [(-15461_i16),(-18305_i16),26612_i16,(-6837_i16),368_i16];
_12 = 1435390736_i32 * 444512451_i32;
_13.0 = !15133459588273878066_u64;
_10.2 = _9.2;
_2.1 = !_3;
_1.0 = [(-16183_i16),1494_i16,6654_i16,(-2002_i16),(-19773_i16)];
_9.1 = _1.2 as isize;
_10.3 = _4.3 + _9.3;
_5 = false as isize;
_9.2 = _2.2;
RET = _9.0;
_14 = '\u{1f8d9}';
_4.3 = _10.3 + _11;
_9.3 = _4.3;
_13.0 = 19309_i16 as u64;
_9.2 = _2.2;
_4 = (RET, _10.1, _9.2, _6);
_9 = (RET, _1.1, _1.2, _1.3);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Goto(bb9)
}
bb9 = {
_27 = [_12,_12,_12,_12];
_2.0 = RET;
_9.1 = !_5;
_28.0 = _15.0;
_13.0 = _22.0 << _2.1;
_24 = -_1.1;
_4.1 = -_24;
_4.2 = _24 as i128;
_17.fld0.0 = _27;
_20 = _16 as isize;
_19.fld0 = false;
_2.2 = _4.2;
_28 = (_15.0,);
_16 = _1.2 as u32;
_29 = -_11;
_31.0 = RET;
_10 = _2;
_4.3 = (-7866_i16) as f64;
_31.3 = _29;
_21 = 55_i8;
_31.2 = !_10.2;
_22.0 = 156553470782375968635403713709582130885_u128 as u64;
_2 = (_1.0, _24, _10.2, _8);
match _21 {
0 => bb8,
1 => bb3,
55 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_11 = _2.3 + _10.3;
_30 = _2.1 * _24;
_29 = _13.0 as f64;
_19.fld0 = true;
RET = [(-6126_i16),(-24335_i16),18805_i16,14105_i16,(-5761_i16)];
_10.2 = _2.2;
_39 = !_19.fld0;
_22.0 = _13.0 + _13.0;
_23.fld0 = !_39;
_19.fld0 = _39 ^ _39;
_10.3 = 120_u8 as f64;
_25.2 = -_21;
_4.0 = _1.0;
_31.2 = 7747362938157781477_i64 as i128;
_22.0 = 9856_i16 as u64;
_23.fld1 = Adt45::Variant0 { fld0: _13.0 };
_14 = _15.0;
_15.0 = _28.0;
_31.1 = _4.1 * _4.1;
Goto(bb12)
}
bb12 = {
_31.1 = !_10.1;
_40 = Field::<u64>(Variant(_23.fld1, 0), 0) as isize;
_10 = (_9.0, _30, _4.2, _6);
_4.3 = -_2.3;
_7 = !_31.1;
_15 = _28;
_13.0 = !Field::<u64>(Variant(_23.fld1, 0), 0);
_4 = _10;
_11 = _8;
_18 = 2_u8 | 158_u8;
_41 = _19.fld0;
RET = [(-887_i16),(-16206_i16),6262_i16,14646_i16,(-1084_i16)];
SetDiscriminant(_23.fld1, 0);
_34 = [_12,_12,_12,_12];
_9.3 = _12 as f64;
_9.1 = _30 + _10.1;
_8 = _2.3;
_23.fld2 = [_41,_23.fld0];
_21 = _25.2;
_2.2 = _10.2 - _10.2;
_31 = _9;
place!(Field::<u64>(Variant(_23.fld1, 0), 0)) = _13.0;
_16 = _31.1 as u32;
_24 = _30 | _30;
Goto(bb13)
}
bb13 = {
_42 = (_14,);
SetDiscriminant(_23.fld1, 0);
_24 = _4.1;
_33 = _23.fld2;
_38.2 = _21 ^ _25.2;
place!(Field::<u64>(Variant(_23.fld1, 0), 0)) = _22.0 ^ _13.0;
_1 = (_10.0, _9.1, _2.2, _8);
_27 = [_12,_12,_12,_12];
_23.fld2 = _19.fld2;
_9.3 = 24083_u16 as f64;
_31.1 = _12 as isize;
_1.3 = _6;
_23.fld0 = _41 & _41;
_20 = _12 as isize;
_36 = core::ptr::addr_of_mut!(_41);
SetDiscriminant(_23.fld1, 0);
Call(_2.1 = core::intrinsics::bswap(_1.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_1 = _4;
_28 = _15;
_41 = _23.fld0;
_31.3 = -_11;
_1.2 = _4.2 | _10.2;
_44 = 66044634268374214736891094581379098047_u128 ^ 277748160497758930023473392529483567332_u128;
_3 = _30 - _4.1;
_4.2 = _13.0 as i128;
_1 = (_31.0, _3, _2.2, _6);
_2 = (_1.0, _9.1, _1.2, _10.3);
_24 = _10.1;
_21 = _25.2 + _38.2;
_42.0 = _14;
RET = [13546_i16,(-3307_i16),(-18985_i16),(-23209_i16),(-7717_i16)];
_10.3 = _4.3;
_45 = _16 >> _24;
place!(Field::<u64>(Variant(_23.fld1, 0), 0)) = !_13.0;
_38.0 = core::ptr::addr_of!(_44);
_4 = (_31.0, _3, _10.2, _10.3);
_3 = _9.1;
_10.2 = !_4.2;
_18 = 17748_u16 as u8;
_18 = 179_u8 >> _1.1;
_31.2 = _4.2;
_15.0 = _28.0;
_12 = (-2130186688_i32) - 1331121910_i32;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(16_usize, 41_usize, Move(_41), 30_usize, Move(_30), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(16_usize, 44_usize, Move(_44), 27_usize, Move(_27), 28_usize, Move(_28), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(16_usize, 40_usize, Move(_40), 18_usize, Move(_18), 13_usize, Move(_13), 22_usize, Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: u8,mut _2: f64,mut _3: bool,mut _4: ([i16; 5], isize, i128, f64),mut _5: u64,mut _6: [i32; 4],mut _7: i128,mut _8: ([i16; 5], isize, i128, f64)) -> isize {
mir! {
type RET = isize;
let _9: f32;
let _10: f64;
let _11: u128;
let _12: u32;
let _13: [i128; 4];
let _14: *const i8;
let _15: *mut (f64, u64, &'static u128);
let _16: Adt44;
let _17: [i16; 5];
let _18: [u32; 3];
let _19: char;
let _20: Adt56;
let _21: Adt49;
let _22: f64;
let _23: (char,);
let _24: Adt52;
let _25: ([i16; 5], isize, i128, f64);
let _26: [bool; 2];
let _27: i64;
let _28: f64;
let _29: char;
let _30: isize;
let _31: Adt56;
let _32: ();
let _33: ();
{
_8 = (_4.0, _4.1, _4.2, _4.3);
_4 = _8;
_3 = false;
_8.1 = 3411812088_u32 as isize;
_8.3 = _4.3;
_6 = [167319974_i32,(-1895325078_i32),1196738983_i32,(-1968645463_i32)];
_3 = true | true;
_8.0 = [22403_i16,23074_i16,25658_i16,(-31269_i16),(-25998_i16)];
RET = _4.1;
RET = 2276210055_u32 as isize;
_4.3 = (-3540681697757570334_i64) as f64;
_6 = [(-89040552_i32),(-700142839_i32),1527159129_i32,687856694_i32];
_4.0 = [(-4894_i16),13530_i16,(-14123_i16),(-21266_i16),(-24240_i16)];
_4.1 = 7740592085404347110_i64 as isize;
Goto(bb1)
}
bb1 = {
_10 = _2;
RET = -_4.1;
_4.2 = !_7;
_4 = (_8.0, _8.1, _7, _10);
_1 = 19675_i16 as u8;
_4.2 = _7;
_1 = 208_u8;
_4.0 = [19801_i16,(-24964_i16),(-12831_i16),(-19817_i16),(-19212_i16)];
_11 = !137716107478894280514512380361761483082_u128;
_10 = -_4.3;
_7 = -_8.2;
_9 = (-26083458_i32) as f32;
_9 = _10 as f32;
_12 = _3 as u32;
RET = -_8.1;
RET = -_8.1;
_5 = _9 as u64;
_12 = !3180108831_u32;
_10 = -_8.3;
_13 = [_8.2,_7,_7,_4.2];
_4.1 = -_8.1;
_4.0 = [(-16881_i16),(-30759_i16),13737_i16,(-26101_i16),(-12600_i16)];
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
208 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_7 = _8.2 | _4.2;
_12 = 37061254_u32;
_8.2 = _7;
_8.0 = [(-15117_i16),(-530_i16),(-6599_i16),(-13212_i16),26478_i16];
_4.3 = -_10;
Goto(bb9)
}
bb9 = {
_4.2 = !_7;
_1 = 23262_u16 as u8;
_7 = _4.1 as i128;
_8.0 = [(-28381_i16),20502_i16,11314_i16,16482_i16,(-11650_i16)];
Goto(bb10)
}
bb10 = {
_10 = -_4.3;
_4.1 = RET + RET;
_17 = _4.0;
_17 = _4.0;
RET = _11 as isize;
_6 = [(-1649966183_i32),1879189109_i32,(-1406020998_i32),1771744977_i32];
_18 = [_12,_12,_12];
_8 = (_17, RET, _4.2, _4.3);
_12 = 309906670_u32;
_8.1 = _4.1;
_8.2 = _4.2;
_13 = [_8.2,_8.2,_4.2,_4.2];
_13 = [_8.2,_8.2,_8.2,_4.2];
_10 = -_4.3;
RET = _8.1;
_9 = _5 as f32;
_9 = 26811_u16 as f32;
_18 = [_12,_12,_12];
_3 = false;
_19 = '\u{509f2}';
_7 = _4.2;
_8.2 = _5 as i128;
match _12 {
309906670 => bb12,
_ => bb11
}
}
bb11 = {
_7 = _8.2 | _4.2;
_12 = 37061254_u32;
_8.2 = _7;
_8.0 = [(-15117_i16),(-530_i16),(-6599_i16),(-13212_i16),26478_i16];
_4.3 = -_10;
Goto(bb9)
}
bb12 = {
RET = _1 as isize;
Call(_8.3 = core::intrinsics::fmaf64(_10, _2, _2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_11 = !184917027566452818679917272602231570771_u128;
_8.1 = _4.1;
_1 = 98_u8 - 115_u8;
_2 = -_10;
_11 = !163030997232147997593085066976117958168_u128;
_12 = 747417406_u32 + 3160906826_u32;
_4.0 = [28433_i16,(-18950_i16),28156_i16,17441_i16,(-17631_i16)];
_24.fld1 = (_8.0, _8.1, _7, _8.3);
_18 = [_12,_12,_12];
_21.fld0 = (_6,);
_24.fld1.1 = _8.1 ^ _4.1;
_4.3 = -_10;
_19 = '\u{1bff5}';
_25.0 = [(-26305_i16),(-9590_i16),17124_i16,(-1878_i16),14305_i16];
RET = _4.1;
_17 = [28190_i16,26820_i16,(-15167_i16),(-19509_i16),(-13468_i16)];
_25.0 = _17;
_24.fld1 = (_25.0, _8.1, _7, _10);
_23.0 = _19;
_10 = -_4.3;
RET = !_4.1;
_25.3 = _8.3 * _8.3;
_27 = (-15987_i16) as i64;
_13 = [_7,_24.fld1.2,_4.2,_7];
_19 = _23.0;
Goto(bb14)
}
bb14 = {
_27 = (-1427034419711277651_i64) * 5584352341463817543_i64;
_8.3 = _2 - _24.fld1.3;
_12 = 2372990147_u32;
_26 = [_3,_3];
_3 = !false;
_4.2 = _1 as i128;
_8 = _24.fld1;
_8 = (_4.0, _24.fld1.1, _7, _4.3);
_25.1 = _12 as isize;
_11 = !126269130226457913018499284679574968483_u128;
_5 = !6416649573580556980_u64;
_22 = -_24.fld1.3;
_10 = _25.3;
RET = -_4.1;
_30 = _4.1;
_30 = _8.1 << _24.fld1.2;
_1 = 73_u8;
_18 = [_12,_12,_12];
_18 = [_12,_12,_12];
_4.0 = [4822_i16,(-5071_i16),8028_i16,(-18153_i16),(-23496_i16)];
_25.3 = -_8.3;
_25.0 = [14407_i16,2596_i16,(-28224_i16),10472_i16,8567_i16];
_21.fld0.0 = [(-52396146_i32),1564995875_i32,764062289_i32,1295452745_i32];
_24.fld1.2 = _7;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(17_usize, 12_usize, Move(_12), 23_usize, Move(_23), 19_usize, Move(_19), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(17_usize, 5_usize, Move(_5), 18_usize, Move(_18), 7_usize, Move(_7), 33_usize, _33), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: f32,mut _2: Adt52,mut _3: i128) -> f64 {
mir! {
type RET = f64;
let _4: Adt49;
let _5: (f32,);
let _6: char;
let _7: (u64,);
let _8: i64;
let _9: (*const u128, *const usize, i8);
let _10: char;
let _11: ([i16; 5], isize, i128, f64);
let _12: (f32, bool, f32);
let _13: ([i16; 5], isize, i128, f64);
let _14: char;
let _15: ([i16; 5], isize, i128, f64);
let _16: [u32; 3];
let _17: Adt54;
let _18: usize;
let _19: [i128; 4];
let _20: *const [i128; 4];
let _21: &'static u128;
let _22: ();
let _23: ();
{
_2.fld0 = 65_u8;
_1 = _2.fld0 as f32;
RET = _2.fld1.3;
_2.fld1.2 = _3;
Goto(bb1)
}
bb1 = {
_1 = 15717_i16 as f32;
_1 = 9874_i16 as f32;
_2.fld1.0 = [(-12011_i16),(-26146_i16),1797_i16,5592_i16,4977_i16];
_2.fld1.1 = -109_isize;
match _2.fld0 {
0 => bb2,
1 => bb3,
65 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5 = (_1,);
_2.fld1.1 = 18_isize & (-9223372036854775808_isize);
_1 = _5.0 + _5.0;
_2.fld1.3 = RET + RET;
_1 = _5.0 * _5.0;
RET = -_2.fld1.3;
_2.fld0 = 164_u8 ^ 180_u8;
_2.fld0 = 239_u8;
RET = _2.fld1.3 + _2.fld1.3;
_5 = (_1,);
_2.fld1.0 = [(-17434_i16),10256_i16,17184_i16,28435_i16,(-26897_i16)];
Goto(bb6)
}
bb6 = {
_2.fld1.3 = RET * RET;
_4.fld0.0 = [(-1979366426_i32),1343125840_i32,437094233_i32,252118041_i32];
_5.0 = _1 * _1;
_5 = (_1,);
_1 = _5.0 - _5.0;
_2.fld0 = 141_u8 ^ 158_u8;
_5 = (_1,);
_4.fld0.0 = [(-355536447_i32),2014574142_i32,697455094_i32,1559881816_i32];
_7.0 = 17868942910000682065_u64;
_3 = !_2.fld1.2;
_4.fld0.0 = [1558711025_i32,(-1799917819_i32),1165455124_i32,8904259_i32];
_3 = _2.fld1.2;
_3 = _2.fld1.2 ^ _2.fld1.2;
match _7.0 {
0 => bb5,
1 => bb4,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
17868942910000682065 => bb12,
_ => bb11
}
}
bb7 = {
_5 = (_1,);
_2.fld1.1 = 18_isize & (-9223372036854775808_isize);
_1 = _5.0 + _5.0;
_2.fld1.3 = RET + RET;
_1 = _5.0 * _5.0;
RET = -_2.fld1.3;
_2.fld0 = 164_u8 ^ 180_u8;
_2.fld0 = 239_u8;
RET = _2.fld1.3 + _2.fld1.3;
_5 = (_1,);
_2.fld1.0 = [(-17434_i16),10256_i16,17184_i16,28435_i16,(-26897_i16)];
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = 15717_i16 as f32;
_1 = 9874_i16 as f32;
_2.fld1.0 = [(-12011_i16),(-26146_i16),1797_i16,5592_i16,4977_i16];
_2.fld1.1 = -109_isize;
match _2.fld0 {
0 => bb2,
1 => bb3,
65 => bb5,
_ => bb4
}
}
bb12 = {
_2.fld1.0 = [(-9189_i16),25450_i16,(-24689_i16),4366_i16,30635_i16];
_5 = (_1,);
_7 = (7206680864852073458_u64,);
_7 = (18435153514173113621_u64,);
RET = _2.fld1.3;
_6 = '\u{22707}';
_2.fld0 = 126_u8 * 192_u8;
RET = -_2.fld1.3;
_2.fld0 = 152_u8;
_8 = -7295190941776751358_i64;
_2.fld1.3 = 62_i8 as f64;
_2.fld1.1 = !9223372036854775807_isize;
_2.fld1.3 = _7.0 as f64;
_2.fld1.1 = -(-9223372036854775808_isize);
_8 = (-1815003569553145136_i64);
_6 = '\u{be1a0}';
_7 = (9197515745357305083_u64,);
_2.fld1.0 = [19381_i16,(-17937_i16),6040_i16,(-1214_i16),11664_i16];
_1 = 3098601474_u32 as f32;
_9.1 = _2.fld2;
_2.fld0 = 250_u8;
_2.fld1.2 = 225535883480866805198278160103851426980_u128 as i128;
_10 = _6;
Goto(bb13)
}
bb13 = {
_11 = _2.fld1;
RET = _11.3;
_2.fld1.3 = RET - RET;
_11.0 = [(-14276_i16),(-8766_i16),(-294_i16),3210_i16,(-14669_i16)];
_11.3 = RET;
_2 = Adt52 { fld0: 0_u8,fld1: _11,fld2: _9.1 };
_2.fld1.0 = [29876_i16,29572_i16,20634_i16,(-19687_i16),15089_i16];
_2.fld1.1 = -_11.1;
RET = _2.fld1.3;
_13.1 = _2.fld1.1;
_2.fld1.3 = 314394227424649622257591736466571161884_u128 as f64;
_2.fld0 = 127_u8;
_13 = (_2.fld1.0, _11.1, _3, _11.3);
_11 = (_2.fld1.0, _13.1, _13.2, _13.3);
_9.1 = _2.fld2;
_12.2 = _8 as f32;
_12 = (_5.0, false, _5.0);
_12 = (_1, true, _5.0);
RET = (-50_i8) as f64;
_11 = (_2.fld1.0, _2.fld1.1, _3, _2.fld1.3);
_8 = 2308012541526107082_i64 - 5933918287724533384_i64;
_8 = 3729926042551308432_i64 >> _2.fld1.2;
_13.1 = _2.fld1.1;
Goto(bb14)
}
bb14 = {
_14 = _10;
_15.3 = _13.3;
_14 = _6;
_7.0 = 8604811575621866085_u64;
_11.2 = (-1025385759_i32) as i128;
_16 = [1024905081_u32,3653930348_u32,2333644634_u32];
_5.0 = -_12.0;
_12.1 = true;
_14 = _10;
_15.3 = _7.0 as f64;
_2.fld2 = _9.1;
_12.1 = false & true;
_7.0 = 14195500783442765034_u64 >> _3;
_19 = [_3,_13.2,_3,_13.2];
_12 = (_1, false, _5.0);
_12 = (_5.0, true, _5.0);
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(18_usize, 6_usize, Move(_6), 16_usize, Move(_16), 10_usize, Move(_10), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [bool; 2],mut _2: [bool; 2]) -> *const u128 {
mir! {
type RET = *const u128;
let _3: u32;
let _4: u16;
let _5: i8;
let _6: Adt46;
let _7: [u32; 3];
let _8: f32;
let _9: ([i16; 5], isize, i128, f64);
let _10: i32;
let _11: char;
let _12: Adt48;
let _13: f64;
let _14: isize;
let _15: [i128; 4];
let _16: (*const char, f64, u128);
let _17: [i32; 4];
let _18: bool;
let _19: Adt48;
let _20: *mut bool;
let _21: bool;
let _22: (f32, bool, f32);
let _23: Adt49;
let _24: u32;
let _25: (char, ([i16; 5], isize, i128, f64), isize);
let _26: Adt53;
let _27: char;
let _28: ();
let _29: ();
{
_2 = [true,false];
_1 = _2;
_2 = [true,false];
_2 = _1;
_2 = [false,true];
_2 = [false,false];
_2 = _1;
_1 = _2;
_4 = 16585_u16 + 41307_u16;
_3 = 3773444359_u32 >> _4;
_2 = [true,true];
_1 = [true,true];
_1 = [true,false];
_2 = [true,false];
_3 = (-902961497_i32) as u32;
Goto(bb1)
}
bb1 = {
_1 = [true,true];
_5 = 15_i8;
_6.fld0 = _4 > _4;
_5 = 118372393851366865652107091278267454996_u128 as i8;
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld0 = !false;
_6.fld2 = [_6.fld0,_6.fld0];
_6.fld0 = !true;
_7 = [_3,_3,_3];
_9.3 = (-5756734614719914585_i64) as f64;
_1 = [_6.fld0,_6.fld0];
_6.fld3 = (157378516337095861_u64,);
_8 = 320249077977525548601837097193263196757_u128 as f32;
Goto(bb2)
}
bb2 = {
_6.fld1 = core::ptr::addr_of_mut!(_6.fld0);
_6.fld7 = [(-12398_i16),(-23813_i16),(-20854_i16),10780_i16,(-18854_i16)];
_7 = [_3,_3,_3];
_5 = 3_i8 & 43_i8;
_10 = !513610283_i32;
_5 = -(-78_i8);
_6.fld0 = !true;
_6.fld2 = [_6.fld0,_6.fld0];
_9.0 = _6.fld7;
_7 = [_3,_3,_3];
_11 = '\u{3e774}';
_3 = 4080768131_u32 - 3410369928_u32;
_9.2 = (-24832860804100542908763292899300824415_i128);
_5 = !(-20_i8);
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld4 = core::ptr::addr_of_mut!(_5);
_5 = -(-46_i8);
_11 = '\u{244a8}';
_9.1 = (-9223372036854775808_isize);
_6.fld7 = _9.0;
_6.fld4 = core::ptr::addr_of_mut!(_5);
_7 = [_3,_3,_3];
_11 = '\u{7ca79}';
_8 = 152_u8 as f32;
_6.fld7 = [4313_i16,(-23647_i16),(-20982_i16),(-7564_i16),(-22113_i16)];
match _9.1 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb3 = {
_1 = [true,true];
_5 = 15_i8;
_6.fld0 = _4 > _4;
_5 = 118372393851366865652107091278267454996_u128 as i8;
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld0 = !false;
_6.fld2 = [_6.fld0,_6.fld0];
_6.fld0 = !true;
_7 = [_3,_3,_3];
_9.3 = (-5756734614719914585_i64) as f64;
_1 = [_6.fld0,_6.fld0];
_6.fld3 = (157378516337095861_u64,);
_8 = 320249077977525548601837097193263196757_u128 as f32;
Goto(bb2)
}
bb4 = {
_6.fld4 = core::ptr::addr_of_mut!(_5);
_14 = _9.1;
_6.fld3.0 = 17319932641072995166_u64 * 6025667037218850652_u64;
_13 = _9.3 - _9.3;
_11 = '\u{abfae}';
_16.1 = -_13;
_7 = [_3,_3,_3];
_9 = (_6.fld7, _14, 152788535267893423027817089390661800271_i128, _13);
_5 = !42_i8;
_16.2 = 102821596708974751942699426652198389835_u128;
_6.fld7 = [14066_i16,5719_i16,(-24495_i16),11315_i16,(-16111_i16)];
_6.fld0 = _16.1 > _9.3;
_5 = -53_i8;
_16.1 = (-2207522692074633984_i64) as f64;
match _9.2 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
152788535267893423027817089390661800271 => bb10,
_ => bb9
}
}
bb5 = {
_1 = [true,true];
_5 = 15_i8;
_6.fld0 = _4 > _4;
_5 = 118372393851366865652107091278267454996_u128 as i8;
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld0 = !false;
_6.fld2 = [_6.fld0,_6.fld0];
_6.fld0 = !true;
_7 = [_3,_3,_3];
_9.3 = (-5756734614719914585_i64) as f64;
_1 = [_6.fld0,_6.fld0];
_6.fld3 = (157378516337095861_u64,);
_8 = 320249077977525548601837097193263196757_u128 as f32;
Goto(bb2)
}
bb6 = {
_6.fld1 = core::ptr::addr_of_mut!(_6.fld0);
_6.fld7 = [(-12398_i16),(-23813_i16),(-20854_i16),10780_i16,(-18854_i16)];
_7 = [_3,_3,_3];
_5 = 3_i8 & 43_i8;
_10 = !513610283_i32;
_5 = -(-78_i8);
_6.fld0 = !true;
_6.fld2 = [_6.fld0,_6.fld0];
_9.0 = _6.fld7;
_7 = [_3,_3,_3];
_11 = '\u{3e774}';
_3 = 4080768131_u32 - 3410369928_u32;
_9.2 = (-24832860804100542908763292899300824415_i128);
_5 = !(-20_i8);
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld4 = core::ptr::addr_of_mut!(_5);
_5 = -(-46_i8);
_11 = '\u{244a8}';
_9.1 = (-9223372036854775808_isize);
_6.fld7 = _9.0;
_6.fld4 = core::ptr::addr_of_mut!(_5);
_7 = [_3,_3,_3];
_11 = '\u{7ca79}';
_8 = 152_u8 as f32;
_6.fld7 = [4313_i16,(-23647_i16),(-20982_i16),(-7564_i16),(-22113_i16)];
match _9.1 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb7 = {
_1 = [true,true];
_5 = 15_i8;
_6.fld0 = _4 > _4;
_5 = 118372393851366865652107091278267454996_u128 as i8;
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld0 = !false;
_6.fld2 = [_6.fld0,_6.fld0];
_6.fld0 = !true;
_7 = [_3,_3,_3];
_9.3 = (-5756734614719914585_i64) as f64;
_1 = [_6.fld0,_6.fld0];
_6.fld3 = (157378516337095861_u64,);
_8 = 320249077977525548601837097193263196757_u128 as f32;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6.fld3 = (4448664428197033675_u64,);
_7 = [_3,_3,_3];
_9.3 = _13;
_6.fld3.0 = (-24910_i16) as u64;
_6.fld0 = false;
_11 = '\u{395b9}';
_11 = '\u{4501b}';
_9.1 = !_14;
_16.0 = core::ptr::addr_of!(_11);
_16.2 = !127129913261040901773377766864989611403_u128;
_6.fld7 = [(-4279_i16),(-13515_i16),8106_i16,31502_i16,(-24416_i16)];
RET = core::ptr::addr_of!(_16.2);
_9.2 = 88154281483781426543329235291749549128_i128;
_2 = [_6.fld0,_6.fld0];
_16.0 = core::ptr::addr_of!(_11);
_4 = 48481_u16;
_6.fld2 = _1;
_9 = (_6.fld7, _14, (-146486073127925922339433657347777904091_i128), _13);
match _9.2 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb11,
6 => bb12,
193796293793012541123940950083990307365 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
_6.fld1 = core::ptr::addr_of_mut!(_6.fld0);
_6.fld7 = [(-12398_i16),(-23813_i16),(-20854_i16),10780_i16,(-18854_i16)];
_7 = [_3,_3,_3];
_5 = 3_i8 & 43_i8;
_10 = !513610283_i32;
_5 = -(-78_i8);
_6.fld0 = !true;
_6.fld2 = [_6.fld0,_6.fld0];
_9.0 = _6.fld7;
_7 = [_3,_3,_3];
_11 = '\u{3e774}';
_3 = 4080768131_u32 - 3410369928_u32;
_9.2 = (-24832860804100542908763292899300824415_i128);
_5 = !(-20_i8);
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld4 = core::ptr::addr_of_mut!(_5);
_5 = -(-46_i8);
_11 = '\u{244a8}';
_9.1 = (-9223372036854775808_isize);
_6.fld7 = _9.0;
_6.fld4 = core::ptr::addr_of_mut!(_5);
_7 = [_3,_3,_3];
_11 = '\u{7ca79}';
_8 = 152_u8 as f32;
_6.fld7 = [4313_i16,(-23647_i16),(-20982_i16),(-7564_i16),(-22113_i16)];
match _9.1 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb13 = {
_1 = [true,true];
_5 = 15_i8;
_6.fld0 = _4 > _4;
_5 = 118372393851366865652107091278267454996_u128 as i8;
_6.fld6 = core::ptr::addr_of!(_5);
_6.fld0 = !false;
_6.fld2 = [_6.fld0,_6.fld0];
_6.fld0 = !true;
_7 = [_3,_3,_3];
_9.3 = (-5756734614719914585_i64) as f64;
_1 = [_6.fld0,_6.fld0];
_6.fld3 = (157378516337095861_u64,);
_8 = 320249077977525548601837097193263196757_u128 as f32;
Goto(bb2)
}
bb14 = {
_7 = [_3,_3,_3];
_20 = _6.fld1;
_9.3 = -_13;
_2 = [_6.fld0,_6.fld0];
_22.0 = -_8;
_4 = 47946_u16;
_2 = _6.fld2;
_6.fld4 = core::ptr::addr_of_mut!(_5);
_21 = _6.fld0 | _6.fld0;
_22 = (_8, _21, _8);
_16.2 = !263315592103752066320332498408375661591_u128;
_16.0 = core::ptr::addr_of!(_25.0);
_25.1.3 = _5 as f64;
_6.fld0 = !_21;
_11 = '\u{e7b69}';
_6.fld0 = _22.1;
_22.0 = 5981940723939282078_i64 as f32;
_25.1.0 = [(-16353_i16),26327_i16,22356_i16,(-11841_i16),24272_i16];
_25.0 = _11;
_3 = 2187979504_u32;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(19_usize, 14_usize, Move(_14), 21_usize, Move(_21), 2_usize, Move(_2), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(19_usize, 4_usize, Move(_4), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box(4793311335687953181_u64), std::hint::black_box(903872627_i32), std::hint::black_box(9205721823229477788_i64), std::hint::black_box((-29433_i16)));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: [i32; 4],
fld1: *const f32,
fld2: (*const char, f64, u128),

},
Variant1{
fld0: (*const u128, *const usize, i8),
fld1: (u64,),
fld2: usize,

},
Variant2{
fld0: bool,
fld1: u128,
fld2: isize,
fld3: f64,
fld4: u8,
fld5: *const char,
fld6: [i32; 4],

},
Variant3{
fld0: [i32; 4],
fld1: i32,
fld2: isize,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: i128,
fld1: Adt42,
fld2: (u64,),
fld3: *mut bool,

},
Variant1{
fld0: [i16; 5],
fld1: (f32,),
fld2: u128,

},
Variant2{
fld0: ([i32; 4],),
fld1: *const [i128; 4],
fld2: *const usize,
fld3: Adt42,
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: (char, ([i16; 5], isize, i128, f64), isize),
fld1: (char,),
fld2: (*const char, f64, u128),
fld3: Adt43,
fld4: u32,
fld5: u128,

},
Variant1{
fld0: i128,
fld1: *const [i128; 4],

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: u64,

},
Variant1{
fld0: (*const char, f64, u128),
fld1: *const char,

},
Variant2{
fld0: (*const u128, *const usize, i8),

}}
#[derive(Debug)]
pub struct Adt46 {
fld0: bool,
fld1: *mut bool,
fld2: [bool; 2],
fld3: (u64,),
fld4: *mut i8,
fld5: Adt45,
fld6: *const i8,
fld7: [i16; 5],
}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: ([i16; 5], isize, i128, f64),

},
Variant1{
fld0: *mut i8,
fld1: i32,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: [i32; 4],
fld1: char,
fld2: *const [i128; 4],
fld3: *const usize,
fld4: u128,
fld5: ([i16; 5], isize, i128, f64),
fld6: usize,

},
Variant1{
fld0: [u32; 3],
fld1: Adt47,

},
Variant2{
fld0: (f32, bool, f32),
fld1: Adt46,
fld2: u64,

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: ([i32; 4],),
}
#[derive(Debug)]
pub struct Adt50 {
fld0: *mut bool,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt43,
fld1: *const f32,
fld2: i128,

},
Variant1{
fld0: ([i16; 5], isize, i128, f64),
fld1: ([i32; 4],),

},
Variant2{
fld0: *const char,
fld1: *const usize,
fld2: (f32, bool, f32),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: u8,
fld1: ([i16; 5], isize, i128, f64),
fld2: *const usize,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: bool,
fld1: *const u128,
fld2: *const i8,
fld3: (char,),
fld4: (u64,),
fld5: Adt48,

},
Variant1{
fld0: *const [i128; 4],
fld1: *const f32,
fld2: *const char,
fld3: Adt51,
fld4: (*const u128, *const usize, i8),
fld5: [i16; 5],
fld6: Adt49,
fld7: i128,

},
Variant2{
fld0: *mut bool,
fld1: Adt50,
fld2: (f32,),
fld3: u16,
fld4: Adt42,
fld5: (char, ([i16; 5], isize, i128, f64), isize),
fld6: u128,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: u32,
fld1: [u32; 3],
fld2: Adt52,
fld3: [i128; 4],
fld4: f64,

},
Variant1{
fld0: (f32, bool, f32),
fld1: (char, ([i16; 5], isize, i128, f64), isize),
fld2: *const u128,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: isize,
fld1: (*const u128, *const usize, i8),

},
Variant1{
fld0: (f32,),
fld1: u32,
fld2: (char,),
fld3: u8,
fld4: [bool; 2],
fld5: [u32; 3],
fld6: u64,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: Adt45,
fld1: Adt54,
fld2: Adt50,
fld3: ([i32; 4],),
fld4: (u64,),
fld5: (char, ([i16; 5], isize, i128, f64), isize),
fld6: *const usize,

},
Variant1{
fld0: ([i16; 5], isize, i128, f64),
fld1: Adt55,
fld2: (char,),
fld3: i8,
fld4: (f32,),

},
Variant2{
fld0: [bool; 2],
fld1: f64,
fld2: Adt48,
fld3: Adt49,
fld4: i16,
fld5: Adt53,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt53,
fld1: Adt44,
fld2: *const char,
fld3: *const f32,
fld4: Adt43,

},
Variant1{
fld0: Adt54,
fld1: *const char,
fld2: usize,
fld3: (*const u128, *const usize, i8),
fld4: Adt44,

},
Variant2{
fld0: bool,
fld1: ([i32; 4],),
fld2: Adt54,
fld3: *const i8,
fld4: *const u128,
fld5: i32,
fld6: Adt47,
fld7: Adt50,

}}
#[derive(Debug)]
pub struct Adt58 {
fld0: bool,
fld1: Adt45,
fld2: [bool; 2],
}

