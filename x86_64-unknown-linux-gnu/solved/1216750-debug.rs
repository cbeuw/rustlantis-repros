#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u8,mut _2: usize,mut _3: u32) -> char {
mir! {
type RET = char;
let _4: char;
let _5: Adt45;
let _6: [usize; 8];
let _7: u64;
let _8: u64;
let _9: isize;
let _10: u64;
let _11: Adt43;
let _12: [usize; 8];
let _13: f64;
let _14: f64;
let _15: f32;
let _16: [i64; 3];
let _17: Adt44;
let _18: char;
let _19: *const [usize; 8];
let _20: isize;
let _21: usize;
let _22: [i64; 2];
let _23: usize;
let _24: ([usize; 8],);
let _25: [i64; 3];
let _26: [usize; 8];
let _27: Adt52;
let _28: isize;
let _29: i16;
let _30: &'static i8;
let _31: isize;
let _32: f32;
let _33: bool;
let _34: Adt44;
let _35: i16;
let _36: ([usize; 8],);
let _37: u64;
let _38: isize;
let _39: char;
let _40: u16;
let _41: Adt45;
let _42: (u16, f64, u16);
let _43: (u16, f64, u16);
let _44: [char; 3];
let _45: char;
let _46: f64;
let _47: [i128; 1];
let _48: [i64; 2];
let _49: ();
let _50: ();
{
_3 = 7270811445841921030_u64 as u32;
RET = '\u{5d4f3}';
_1 = !194_u8;
_2 = _1 as usize;
_1 = !232_u8;
_2 = 8355358030249998958_usize + 3_usize;
RET = '\u{1054c2}';
RET = '\u{1c1e8}';
_4 = RET;
RET = _4;
_7 = 5002796461385136282_u64;
RET = _4;
Goto(bb1)
}
bb1 = {
_7 = (-1996212575_i32) as u64;
RET = _4;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_8 = _7;
RET = _4;
RET = _4;
_9 = !(-44_isize);
_3 = 618805415_u32;
_7 = !_8;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = _4;
_3 = !1287870909_u32;
_9 = !9223372036854775807_isize;
RET = _4;
_4 = RET;
Call(RET = fn1(_1, _2, _9, _8, _4, _4, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = _3 as isize;
_4 = RET;
_10 = _9 as u64;
_7 = !_10;
_3 = !867569919_u32;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_7 = 1161_i16 as u64;
_9 = -9223372036854775807_isize;
_8 = _10 + _10;
_2 = 3_usize;
_12[_2] = _6[_2] * _2;
_3 = 1887912529_u32;
_6 = [_12[_2],_12[_2],_12[_2],_12[_2],_12[_2],_12[_2],_12[_2],_2];
_9 = (-9223372036854775808_isize) << _6[_2];
_12 = [_6[_2],_6[_2],_2,_6[_2],_2,_6[_2],_6[_2],_6[_2]];
Goto(bb3)
}
bb3 = {
_14 = (-15_i8) as f64;
_9 = 9223372036854775807_isize | (-17_isize);
_7 = _8 | _10;
_2 = 22274_u16 as usize;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_13 = _14 * _14;
RET = _4;
_15 = _1 as f32;
_4 = RET;
_3 = !1399931108_u32;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_3 = _1 as u32;
_15 = 597173081529158582_i64 as f32;
_4 = RET;
_9 = _3 as isize;
_8 = !_7;
_4 = RET;
_1 = 227_u8 >> _7;
_1 = 55348_u16 as u8;
_15 = 54080_u16 as f32;
_9 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_2 = 1_usize ^ 8624209431365850217_usize;
_13 = (-139786293316298901529722806162366614511_i128) as f64;
_4 = RET;
Goto(bb4)
}
bb4 = {
_13 = _14;
_18 = RET;
_1 = !49_u8;
_15 = 36591_u16 as f32;
RET = _4;
_1 = _15 as u8;
_19 = core::ptr::addr_of!(_6);
_16 = [948126069381339539_i64,3950635117456752287_i64,8030409432004850743_i64];
_3 = 2116022950_i32 as u32;
Goto(bb5)
}
bb5 = {
_1 = _2 as u8;
_13 = _14 * _14;
_4 = RET;
_7 = _8;
_8 = _7 * _7;
_4 = RET;
_1 = 8_u8;
RET = _18;
RET = _18;
_19 = core::ptr::addr_of!((*_19));
_23 = !_2;
_6 = [_23,_2,_23,_23,_23,_23,_23,_23];
_24.0 = [_23,_2,_23,_2,_2,_2,_2,_2];
_12 = [_23,_2,_23,_23,_2,_2,_23,_2];
RET = _18;
_1 = 254_u8;
_25 = _16;
_4 = _18;
_12 = [_23,_23,_2,_2,_23,_2,_2,_2];
_15 = (-1381104362_i32) as f32;
RET = _18;
_19 = core::ptr::addr_of!((*_19));
Call(_1 = fn3(_6, _25, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_1 = !155_u8;
RET = _18;
_22 = [8360539102837539628_i64,(-2741042390361782010_i64)];
_24.0 = _12;
_15 = (-29642_i16) as f32;
_6 = [_23,_23,_23,_23,_23,_2,_23,_23];
_2 = _23;
_7 = _8 | _8;
_10 = !_7;
_25 = _16;
_26 = [_23,_2,_23,_23,_23,_23,_2,_2];
_6 = [_23,_23,_23,_2,_2,_23,_23,_23];
_1 = 178_u8 | 0_u8;
_21 = _23 * _23;
_24.0 = [_2,_23,_21,_21,_2,_2,_2,_21];
_20 = _9;
_9 = -_20;
_27.fld2 = core::ptr::addr_of!(_24.0);
_27.fld4 = (-7471_i16);
_25 = [(-2992985439127043505_i64),6628251096277017211_i64,2716560086499935222_i64];
_27.fld3 = !_1;
RET = _18;
_19 = core::ptr::addr_of!(_24.0);
_1 = _3 as u8;
Goto(bb7)
}
bb7 = {
_24.0 = _6;
_29 = _21 as i16;
_12 = [_23,_2,_21,_2,_2,_2,_2,_21];
_24 = (_12,);
_27.fld4 = _29 ^ _29;
_2 = _9 as usize;
_27.fld3 = _1;
RET = _4;
_21 = _3 as usize;
_27.fld6 = core::ptr::addr_of_mut!(_13);
_10 = !_7;
_27.fld3 = _13 as u8;
_7 = _10;
_27.fld3 = _29 as u8;
_1 = _27.fld3 + _27.fld3;
_32 = _15;
_23 = _27.fld4 as usize;
_31 = true as isize;
_27.fld3 = _20 as u8;
_29 = _27.fld4 - _27.fld4;
_24 = (_12,);
_6 = [_2,_23,_23,_2,_23,_23,_23,_23];
_23 = _2 - _2;
_13 = _29 as f64;
Goto(bb8)
}
bb8 = {
_10 = 1229986253_i32 as u64;
_14 = _13 * _13;
_29 = _27.fld4 ^ _27.fld4;
_27.fld2 = _19;
_6 = [_23,_21,_23,_2,_2,_2,_23,_23];
_27.fld0 = _14 > _13;
_26 = _6;
RET = _4;
_25 = [(-1078832502640950332_i64),(-4669169572106990508_i64),1149568746201390240_i64];
_1 = _27.fld3;
_26 = _12;
_22 = [6173701183299506372_i64,4457420290253733320_i64];
_19 = core::ptr::addr_of!((*_19));
RET = _18;
_12 = [_23,_2,_23,_21,_23,_2,_21,_23];
_27.fld3 = _1;
_24 = (_12,);
_26 = [_23,_2,_23,_21,_23,_2,_2,_23];
Goto(bb9)
}
bb9 = {
_18 = RET;
_28 = _31 - _20;
_2 = _27.fld3 as usize;
_33 = _27.fld0 ^ _27.fld0;
_36 = (_24.0,);
_23 = _29 as usize;
_14 = 26_i8 as f64;
_12 = [_23,_2,_23,_23,_23,_23,_23,_2];
_27.fld0 = !_33;
RET = _18;
_6 = _24.0;
Goto(bb10)
}
bb10 = {
_19 = _27.fld2;
_21 = _18 as usize;
Call(_33 = fn16(_27.fld0, _29, _23, _9, _27.fld0, _24, _13), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_21 = !_23;
RET = _18;
_36.0 = _24.0;
_27.fld0 = _33 & _33;
_12 = [_23,_23,_21,_21,_21,_2,_23,_21];
_8 = _7;
_42.2 = (-8992271584877680881_i64) as u16;
_38 = -_31;
_29 = 65353939317592116777235285867889716587_u128 as i16;
_42 = (43055_u16, _13, 14380_u16);
_36 = (_26,);
_40 = !_42.0;
_42.1 = _13;
_27.fld3 = !_1;
_36 = (_26,);
_10 = _7 - _7;
_19 = _27.fld2;
_24 = _36;
_43 = (_40, _13, _42.2);
match _43.2 {
0 => bb4,
1 => bb5,
14380 => bb13,
_ => bb12
}
}
bb12 = {
_1 = _2 as u8;
_13 = _14 * _14;
_4 = RET;
_7 = _8;
_8 = _7 * _7;
_4 = RET;
_1 = 8_u8;
RET = _18;
RET = _18;
_19 = core::ptr::addr_of!((*_19));
_23 = !_2;
_6 = [_23,_2,_23,_23,_23,_23,_23,_23];
_24.0 = [_23,_2,_23,_2,_2,_2,_2,_2];
_12 = [_23,_2,_23,_23,_2,_2,_23,_2];
RET = _18;
_1 = 254_u8;
_25 = _16;
_4 = _18;
_12 = [_23,_23,_2,_2,_23,_2,_2,_2];
_15 = (-1381104362_i32) as f32;
RET = _18;
_19 = core::ptr::addr_of!((*_19));
Call(_1 = fn3(_6, _25, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb13 = {
_24.0 = _12;
_24 = (_12,);
_13 = _43.1;
_35 = -_27.fld4;
_27.fld4 = _35 + _35;
_21 = _3 as usize;
_27.fld3 = _1;
_15 = _42.0 as f32;
_45 = _18;
match _42.2 {
0 => bb11,
1 => bb3,
2 => bb14,
14380 => bb16,
_ => bb15
}
}
bb14 = {
_1 = _2 as u8;
_13 = _14 * _14;
_4 = RET;
_7 = _8;
_8 = _7 * _7;
_4 = RET;
_1 = 8_u8;
RET = _18;
RET = _18;
_19 = core::ptr::addr_of!((*_19));
_23 = !_2;
_6 = [_23,_2,_23,_23,_23,_23,_23,_23];
_24.0 = [_23,_2,_23,_2,_2,_2,_2,_2];
_12 = [_23,_2,_23,_23,_2,_2,_23,_2];
RET = _18;
_1 = 254_u8;
_25 = _16;
_4 = _18;
_12 = [_23,_23,_2,_2,_23,_2,_2,_2];
_15 = (-1381104362_i32) as f32;
RET = _18;
_19 = core::ptr::addr_of!((*_19));
Call(_1 = fn3(_6, _25, _7), ReturnTo(bb6), UnwindUnreachable())
}
bb15 = {
_7 = (-1996212575_i32) as u64;
RET = _4;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
_8 = _7;
RET = _4;
RET = _4;
_9 = !(-44_isize);
_3 = 618805415_u32;
_7 = !_8;
_6 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = _4;
_3 = !1287870909_u32;
_9 = !9223372036854775807_isize;
RET = _4;
_4 = RET;
Call(RET = fn1(_1, _2, _9, _8, _4, _4, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_18 = _4;
_1 = _27.fld3 - _27.fld3;
_24 = _36;
_39 = RET;
_46 = _13;
_19 = core::ptr::addr_of!(_26);
_31 = _28;
Goto(bb17)
}
bb17 = {
Call(_49 = dump_var(0_usize, 21_usize, Move(_21), 38_usize, Move(_38), 45_usize, Move(_45), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(0_usize, 18_usize, Move(_18), 33_usize, Move(_33), 12_usize, Move(_12), 35_usize, Move(_35)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_49 = dump_var(0_usize, 26_usize, Move(_26), 10_usize, Move(_10), 22_usize, Move(_22), 28_usize, Move(_28)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_49 = dump_var(0_usize, 8_usize, Move(_8), 16_usize, Move(_16), 50_usize, _50, 50_usize, _50), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u8,mut _2: usize,mut _3: isize,mut _4: u64,mut _5: char,mut _6: char,mut _7: char) -> char {
mir! {
type RET = char;
let _8: ([usize; 8],);
let _9: isize;
let _10: isize;
let _11: [usize; 8];
let _12: i128;
let _13: *const u16;
let _14: Adt40;
let _15: u64;
let _16: f32;
let _17: Adt43;
let _18: ([usize; 8],);
let _19: isize;
let _20: isize;
let _21: f32;
let _22: *const [usize; 8];
let _23: Adt44;
let _24: i128;
let _25: (i128,);
let _26: (u16, f64, u16);
let _27: *mut f64;
let _28: [u128; 1];
let _29: Adt52;
let _30: u16;
let _31: isize;
let _32: f64;
let _33: usize;
let _34: Adt46;
let _35: ([usize; 8],);
let _36: bool;
let _37: (i64, isize, i8, i32);
let _38: [u128; 1];
let _39: [char; 3];
let _40: *mut i8;
let _41: char;
let _42: i128;
let _43: u64;
let _44: i128;
let _45: ();
let _46: ();
{
_7 = _5;
RET = _5;
_8.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_5 = _6;
RET = _6;
_8.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_10 = !_3;
_10 = _4 as isize;
RET = _5;
_2 = 4_usize;
_6 = _5;
RET = _5;
_8.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_9 = _10;
_3 = _9 | _9;
_10 = !_9;
_11 = _8.0;
_8 = (_11,);
match _8.0[_2] {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_18.0[_2] = _11[_2] + _11[_2];
_2 = _18.0[_2];
_11 = _8.0;
_8 = (_11,);
_6 = _7;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_9 = _10;
_1 = !1_u8;
_19 = -_3;
_5 = RET;
_8.0 = _11;
_12 = (-148219607558020097597855916241357819968_i128) >> _2;
Goto(bb7)
}
bb7 = {
_7 = _5;
_18 = _8;
_2 = 1_usize - 2_usize;
_8.0 = _11;
_12 = (-108358248243787059937898619483741871182_i128);
Goto(bb8)
}
bb8 = {
_5 = _7;
_4 = !683121387688841169_u64;
_20 = _19;
_20 = !_3;
_7 = RET;
_9 = _20;
_15 = _4 & _4;
_1 = !122_u8;
_7 = _5;
_21 = _15 as f32;
_7 = RET;
_8.0 = _11;
_15 = _4;
_9 = _20;
_16 = -_21;
_27 = core::ptr::addr_of_mut!(_26.1);
_18.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_26.2 = 5668_u16;
_26.1 = 1736124305_u32 as f64;
Goto(bb9)
}
bb9 = {
_26.2 = 13983_u16;
_29.fld2 = core::ptr::addr_of!(_18.0);
_24 = _12;
RET = _7;
_19 = 3320103012_u32 as isize;
_22 = core::ptr::addr_of!(_18.0);
_24 = _26.2 as i128;
_19 = (-4728444862125360278_i64) as isize;
_13 = core::ptr::addr_of!(_30);
_3 = _20 + _20;
_28 = [186318158295977082571106132051931585891_u128];
_25 = (_24,);
_26.2 = true as u16;
RET = _6;
_18 = _8;
_15 = !_4;
_29.fld3 = _1 - _1;
_8.0 = _11;
_22 = _29.fld2;
match _12 {
0 => bb4,
231924118677151403525475987948026340274 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_9 = _29.fld3 as isize;
_18.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_27 = core::ptr::addr_of_mut!(_26.1);
_10 = _19 + _3;
_20 = !_10;
_5 = _7;
_30 = _5 as u16;
_18 = (_11,);
_29.fld6 = core::ptr::addr_of_mut!((*_27));
_25.0 = -_12;
_6 = _7;
_26.0 = _26.2;
Goto(bb12)
}
bb12 = {
_10 = _16 as isize;
_21 = _16 + _16;
Call(_15 = core::intrinsics::transmute(_4), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_26.1 = 1234398715403724597_i64 as f64;
_25 = (_12,);
_33 = false as usize;
_26.1 = (-1193083702_i32) as f64;
_29.fld0 = !true;
_8.0 = [_2,_2,_2,_2,_33,_2,_2,_2];
_10 = -_3;
_18 = _8;
_12 = _24;
_8.0 = [_2,_33,_2,_33,_2,_33,_2,_33];
_29.fld0 = true;
_11 = [_2,_33,_33,_2,_33,_33,_33,_2];
_10 = _20;
_36 = !_29.fld0;
_8.0 = _11;
_22 = core::ptr::addr_of!(_35.0);
_29.fld4 = _16 as i16;
_36 = _29.fld0;
_20 = !_19;
_25 = (_12,);
_6 = _7;
_4 = _15;
RET = _7;
_35.0 = [_33,_33,_33,_2,_2,_2,_2,_2];
Call(_31 = fn2((*_27), _8, _10, (*_22), _21, _10, _2, _10, _16), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_19 = _21 as isize;
_37.0 = 512145356284207871_i64;
_18 = _8;
_15 = !_4;
_32 = _29.fld3 as f64;
_32 = _2 as f64;
_37.2 = (-105_i8);
_2 = _33;
_11 = [_33,_2,_2,_33,_33,_33,_2,_33];
RET = _6;
_37 = (2837384976155284553_i64, _19, (-91_i8), 1872185342_i32);
_14 = Adt40::Variant1 { fld0: _29.fld2,fld1: _5,fld2: _20,fld3: _1,fld4: _8.0 };
_29.fld2 = core::ptr::addr_of!((*_22));
_24 = !_12;
_37.1 = _29.fld0 as isize;
_39 = [Field::<char>(Variant(_14, 1), 1),_7,Field::<char>(Variant(_14, 1), 1)];
place!(Field::<[usize; 8]>(Variant(_14, 1), 4)) = (*_22);
_16 = _21 * _21;
_37.1 = _26.1 as isize;
_43 = !_15;
_26.0 = !_26.2;
_37.0 = !(-6118471803138653894_i64);
RET = Field::<char>(Variant(_14, 1), 1);
_24 = _43 as i128;
SetDiscriminant(_14, 0);
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(1_usize, 18_usize, Move(_18), 30_usize, Move(_30), 4_usize, Move(_4), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(1_usize, 15_usize, Move(_15), 8_usize, Move(_8), 31_usize, Move(_31), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(1_usize, 11_usize, Move(_11), 33_usize, Move(_33), 39_usize, Move(_39), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(1_usize, 3_usize, Move(_3), 46_usize, _46, 46_usize, _46, 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: f64,mut _2: ([usize; 8],),mut _3: isize,mut _4: [usize; 8],mut _5: f32,mut _6: isize,mut _7: usize,mut _8: isize,mut _9: f32) -> isize {
mir! {
type RET = isize;
let _10: *mut [u128; 1];
let _11: *mut f64;
let _12: u32;
let _13: [usize; 8];
let _14: i32;
let _15: bool;
let _16: i128;
let _17: Adt42;
let _18: ();
let _19: ();
{
_1 = (-161863500402404612063474674835286970546_i128) as f64;
RET = _3;
Goto(bb1)
}
bb1 = {
_2 = (_4,);
_7 = !6249152035236131222_usize;
_12 = 851708991_u32;
_2 = (_4,);
_8 = 18213673256773543734_u64 as isize;
_3 = _6 - RET;
_2 = (_4,);
_2.0 = [_7,_7,_7,_7,_7,_7,_7,_7];
_12 = !3760119754_u32;
RET = _3 - _3;
_11 = core::ptr::addr_of_mut!(_1);
_13 = [_7,_7,_7,_7,_7,_7,_7,_7];
_14 = (-1651863535_i32) << RET;
_16 = -(-51220992479070739095415823960325656448_i128);
_2.0 = _4;
_9 = -_5;
_3 = -_6;
_15 = true;
Goto(bb2)
}
bb2 = {
Call(_18 = dump_var(2_usize, 12_usize, Move(_12), 2_usize, Move(_2), 16_usize, Move(_16), 15_usize, Move(_15)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_18 = dump_var(2_usize, 3_usize, Move(_3), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [usize; 8],mut _2: [i64; 3],mut _3: u64) -> u8 {
mir! {
type RET = u8;
let _4: char;
let _5: u32;
let _6: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]);
let _7: i128;
let _8: Adt51;
let _9: [u128; 1];
let _10: (i128,);
let _11: Adt48;
let _12: Adt48;
let _13: [usize; 8];
let _14: [u128; 1];
let _15: bool;
let _16: Adt51;
let _17: i32;
let _18: f64;
let _19: u128;
let _20: isize;
let _21: [i128; 1];
let _22: Adt38;
let _23: i32;
let _24: u8;
let _25: (u16, f64, u16);
let _26: Adt38;
let _27: bool;
let _28: u16;
let _29: [usize; 8];
let _30: ([usize; 8], [char; 3]);
let _31: u64;
let _32: u8;
let _33: i16;
let _34: f32;
let _35: [char; 3];
let _36: [i64; 3];
let _37: Adt45;
let _38: (i64, isize, i8, i32);
let _39: *const u16;
let _40: i32;
let _41: i128;
let _42: (u16, f64, u16);
let _43: [char; 3];
let _44: Adt42;
let _45: f64;
let _46: (i128,);
let _47: [i64; 3];
let _48: u8;
let _49: (u16, f64, u16);
let _50: u16;
let _51: Adt50;
let _52: [i64; 3];
let _53: (u16, f64, u16);
let _54: i8;
let _55: f32;
let _56: (i64, isize, i8, i32);
let _57: [i64; 2];
let _58: i64;
let _59: ();
let _60: ();
{
_1 = [1468147798075873930_usize,4_usize,0_usize,7_usize,2_usize,12461921852212089666_usize,17344096486984645919_usize,2_usize];
_1 = [9771333898281734536_usize,2_usize,5_usize,5_usize,0_usize,905625301732253590_usize,7_usize,3_usize];
_5 = 130_u8 as u32;
_3 = false as u64;
_4 = '\u{90eae}';
RET = 55_u8 << _3;
_6.0 = core::ptr::addr_of_mut!(_9);
_2 = [3300158339183874070_i64,8307594184186412488_i64,3783304703275218801_i64];
_6.1 = core::ptr::addr_of_mut!(_9);
RET = !46_u8;
Call(_5 = fn4(_2, _1, _1, _1, _2, _1, _4, _2, RET, _2, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = '\u{10b44}';
_10 = (152639689979220187233208548572296678881_i128,);
_7 = _10.0;
_7 = _10.0 + _10.0;
_13 = _1;
RET = 58_u8;
_6.1 = core::ptr::addr_of_mut!(_9);
_14 = [211497307102393115742141136132038165686_u128];
_1 = [6_usize,4_usize,6806495027279437098_usize,1_usize,5_usize,6297974782069566158_usize,12862624095528476807_usize,2_usize];
_6.1 = core::ptr::addr_of_mut!(_9);
_13 = _1;
_9 = _14;
_3 = 11601147422111326749_u64 << _10.0;
_6.2 = _6.0;
_12 = Adt48::Variant2 { fld0: _3,fld1: _2,fld2: _5,fld3: RET,fld4: 19793_i16 };
place!(Field::<u32>(Variant(_12, 2), 2)) = _5 & _5;
place!(Field::<i16>(Variant(_12, 2), 4)) = !(-20517_i16);
_10.0 = -_7;
Call(_15 = fn7(Move(_12), _13, _10.0, _6.1, _6.1, _14, _13, _13, _6.1, _1, _6.0, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13 = [3252056802929559068_usize,9953914816481009589_usize,13527031779491652341_usize,1144056297466746147_usize,2_usize,3_usize,10496797054744049243_usize,1246952296996629760_usize];
_18 = 9223372036854775807_isize as f64;
_14 = [225257675710123615737200196545422429203_u128];
_6.1 = core::ptr::addr_of_mut!(_9);
_15 = true;
_15 = false;
Call(_13 = fn10(_10.0, _10, _6.1, _10, _6.0, _3, _4, _15, _15, _3, _6, _15, _6.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18 = _5 as f64;
_2 = [(-4806504352904685009_i64),4735504973816679260_i64,2811201360234160010_i64];
_5 = _18 as u32;
_4 = '\u{5c66e}';
_9 = [320749228373613902966874634419525029302_u128];
_18 = 119482338_i32 as f64;
_7 = _10.0 + _10.0;
Goto(bb4)
}
bb4 = {
_14 = [266499517744729368861580851014379252812_u128];
_6.0 = _6.2;
_10 = (_7,);
RET = !218_u8;
_22.fld0 = (_1,);
_17 = 437761072_i32 - 701041438_i32;
_22.fld0.0 = _1;
_15 = _10.0 >= _10.0;
_20 = _5 as isize;
_23 = !_17;
_6.0 = _6.1;
RET = 249_u8;
_25.0 = 60491_u16;
_9 = [45539886334530606118799680078401504594_u128];
_2 = [7563056297183571637_i64,2695648640013838448_i64,(-2753712965419865644_i64)];
RET = !168_u8;
_18 = (-7131562095182857990_i64) as f64;
_25.2 = !_25.0;
_4 = '\u{87a54}';
_5 = 2541061183_u32;
match _25.0 {
0 => bb1,
1 => bb5,
60491 => bb7,
_ => bb6
}
}
bb5 = {
_18 = _5 as f64;
_2 = [(-4806504352904685009_i64),4735504973816679260_i64,2811201360234160010_i64];
_5 = _18 as u32;
_4 = '\u{5c66e}';
_9 = [320749228373613902966874634419525029302_u128];
_18 = 119482338_i32 as f64;
_7 = _10.0 + _10.0;
Goto(bb4)
}
bb6 = {
_4 = '\u{10b44}';
_10 = (152639689979220187233208548572296678881_i128,);
_7 = _10.0;
_7 = _10.0 + _10.0;
_13 = _1;
RET = 58_u8;
_6.1 = core::ptr::addr_of_mut!(_9);
_14 = [211497307102393115742141136132038165686_u128];
_1 = [6_usize,4_usize,6806495027279437098_usize,1_usize,5_usize,6297974782069566158_usize,12862624095528476807_usize,2_usize];
_6.1 = core::ptr::addr_of_mut!(_9);
_13 = _1;
_9 = _14;
_3 = 11601147422111326749_u64 << _10.0;
_6.2 = _6.0;
_12 = Adt48::Variant2 { fld0: _3,fld1: _2,fld2: _5,fld3: RET,fld4: 19793_i16 };
place!(Field::<u32>(Variant(_12, 2), 2)) = _5 & _5;
place!(Field::<i16>(Variant(_12, 2), 4)) = !(-20517_i16);
_10.0 = -_7;
Call(_15 = fn7(Move(_12), _13, _10.0, _6.1, _6.1, _14, _13, _13, _6.1, _1, _6.0, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
_25 = (23450_u16, _18, 9897_u16);
_24 = !RET;
_21 = [_7];
_4 = '\u{bdf52}';
_3 = _4 as u64;
Call(_6.1 = fn12(_13, _1, _25.2, _20, _15, _7, _13, _6.0, _25, _1, _5, _25.0, _10, _1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6.0 = core::ptr::addr_of_mut!(_14);
_13 = [3_usize,16091491290712976506_usize,7_usize,0_usize,6613859035302604867_usize,1910091137005672790_usize,511999227721889590_usize,2575758858089137662_usize];
_2 = [(-4675452308682089559_i64),(-1249261448123950718_i64),(-130487894815099062_i64)];
_26.fld0 = _22.fld0;
_9 = [177370974250747864541322113384598549800_u128];
_20 = (-87_isize);
_19 = 199253676470247203802735519283199908567_u128 | 136515524955180329729531211304284057317_u128;
_2 = [(-8694629904201527946_i64),2515284042711269411_i64,6072739712471289406_i64];
_9 = _14;
_22 = Adt38 { fld0: _26.fld0 };
_15 = !true;
_25 = (47196_u16, _18, 14291_u16);
_10.0 = _7;
_24 = !RET;
_4 = '\u{8c692}';
_5 = 246014441_u32 ^ 2174535622_u32;
_25 = (16060_u16, _18, 30613_u16);
match _20 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
340282366920938463463374607431768211369 => bb9,
_ => bb6
}
}
bb9 = {
_6.0 = _6.1;
_29 = _1;
_30.0 = _26.fld0.0;
_10.0 = _7 - _7;
_10.0 = -_7;
_30.1 = [_4,_4,_4];
_3 = 7637817803866082646_u64 | 7600850736073192285_u64;
_6.0 = _6.1;
_21 = [_10.0];
_22.fld0 = (_26.fld0.0,);
_28 = 99_i8 as u16;
_20 = (-9223372036854775808_isize);
_7 = -_10.0;
_9 = [_19];
_29 = [7_usize,2_usize,3481354131611133852_usize,5_usize,5_usize,2_usize,7800801280734399881_usize,13390744635589311219_usize];
_32 = _24 * _24;
match _25.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb10,
6 => bb11,
30613 => bb13,
_ => bb12
}
}
bb10 = {
_6.0 = core::ptr::addr_of_mut!(_14);
_13 = [3_usize,16091491290712976506_usize,7_usize,0_usize,6613859035302604867_usize,1910091137005672790_usize,511999227721889590_usize,2575758858089137662_usize];
_2 = [(-4675452308682089559_i64),(-1249261448123950718_i64),(-130487894815099062_i64)];
_26.fld0 = _22.fld0;
_9 = [177370974250747864541322113384598549800_u128];
_20 = (-87_isize);
_19 = 199253676470247203802735519283199908567_u128 | 136515524955180329729531211304284057317_u128;
_2 = [(-8694629904201527946_i64),2515284042711269411_i64,6072739712471289406_i64];
_9 = _14;
_22 = Adt38 { fld0: _26.fld0 };
_15 = !true;
_25 = (47196_u16, _18, 14291_u16);
_10.0 = _7;
_24 = !RET;
_4 = '\u{8c692}';
_5 = 246014441_u32 ^ 2174535622_u32;
_25 = (16060_u16, _18, 30613_u16);
match _20 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
340282366920938463463374607431768211369 => bb9,
_ => bb6
}
}
bb11 = {
_14 = [266499517744729368861580851014379252812_u128];
_6.0 = _6.2;
_10 = (_7,);
RET = !218_u8;
_22.fld0 = (_1,);
_17 = 437761072_i32 - 701041438_i32;
_22.fld0.0 = _1;
_15 = _10.0 >= _10.0;
_20 = _5 as isize;
_23 = !_17;
_6.0 = _6.1;
RET = 249_u8;
_25.0 = 60491_u16;
_9 = [45539886334530606118799680078401504594_u128];
_2 = [7563056297183571637_i64,2695648640013838448_i64,(-2753712965419865644_i64)];
RET = !168_u8;
_18 = (-7131562095182857990_i64) as f64;
_25.2 = !_25.0;
_4 = '\u{87a54}';
_5 = 2541061183_u32;
match _25.0 {
0 => bb1,
1 => bb5,
60491 => bb7,
_ => bb6
}
}
bb12 = {
_13 = [3252056802929559068_usize,9953914816481009589_usize,13527031779491652341_usize,1144056297466746147_usize,2_usize,3_usize,10496797054744049243_usize,1246952296996629760_usize];
_18 = 9223372036854775807_isize as f64;
_14 = [225257675710123615737200196545422429203_u128];
_6.1 = core::ptr::addr_of_mut!(_9);
_15 = true;
_15 = false;
Call(_13 = fn10(_10.0, _10, _6.1, _10, _6.0, _3, _4, _15, _15, _3, _6, _15, _6.0), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_6.1 = core::ptr::addr_of_mut!(_14);
_30.0 = _29;
RET = _32 >> _7;
_18 = 12952192670755571698_usize as f64;
_24 = _7 as u8;
_22.fld0 = _26.fld0;
_38.2 = 0_usize as i8;
_3 = 5853696631447997863_u64;
_25.2 = !_28;
_38.0 = _7 as i64;
_24 = _32 * RET;
_38.2 = !3_i8;
_29 = [10976488380250907451_usize,13224881002572775285_usize,7_usize,5458277427899368706_usize,2_usize,17767381101104746012_usize,7_usize,2_usize];
_15 = true;
_40 = _4 as i32;
_43 = [_4,_4,_4];
_20 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
Goto(bb14)
}
bb14 = {
_34 = _20 as f32;
_38 = (6920002332661444863_i64, _20, 25_i8, _40);
_15 = true;
_6.1 = _6.0;
_5 = 3883010299_u32 + 4134301638_u32;
_49.0 = !_25.2;
_56.2 = _38.2 | _38.2;
_25 = (_28, _18, _49.0);
_52 = [_38.0,_38.0,_38.0];
_49 = (_25.2, _18, _25.2);
Goto(bb15)
}
bb15 = {
Call(_59 = dump_var(3_usize, 20_usize, Move(_20), 38_usize, Move(_38), 23_usize, Move(_23), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_59 = dump_var(3_usize, 13_usize, Move(_13), 43_usize, Move(_43), 21_usize, Move(_21), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_59 = dump_var(3_usize, 29_usize, Move(_29), 3_usize, Move(_3), 7_usize, Move(_7), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [i64; 3],mut _2: [usize; 8],mut _3: [usize; 8],mut _4: [usize; 8],mut _5: [i64; 3],mut _6: [usize; 8],mut _7: char,mut _8: [i64; 3],mut _9: u8,mut _10: [i64; 3],mut _11: u8) -> u32 {
mir! {
type RET = u32;
let _12: i8;
let _13: Adt38;
let _14: i8;
let _15: (i64, isize, i8, i32);
let _16: usize;
let _17: char;
let _18: f32;
let _19: Adt36;
let _20: f32;
let _21: (i64, isize, i8, i32);
let _22: u128;
let _23: i64;
let _24: [i64; 3];
let _25: (i64, isize, i8, i32);
let _26: [i64; 3];
let _27: Adt38;
let _28: Adt41;
let _29: i16;
let _30: i16;
let _31: bool;
let _32: ([usize; 8], [char; 3]);
let _33: Adt52;
let _34: bool;
let _35: char;
let _36: [u128; 1];
let _37: ([usize; 8],);
let _38: ();
let _39: ();
{
_1 = [3464055463037587331_i64,2357590238777384480_i64,9101729886884977430_i64];
RET = 2152920872_u32 & 3234495317_u32;
_4 = _3;
_8 = _5;
_4 = _3;
_2 = _6;
_7 = '\u{41d3b}';
_9 = 16279112463901322328_u64 as u8;
RET = 9223372036854775807_isize as u32;
_10 = _1;
_3 = _4;
_12 = _9 as i8;
_3 = _4;
_9 = 25642_i16 as u8;
_6 = _3;
_10 = _8;
_9 = _11 ^ _11;
Call(_4 = core::intrinsics::transmute(_2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_13.fld0.0 = [4_usize,9366156966072062489_usize,2904334308226492263_usize,2936854769817321243_usize,1587495824924893774_usize,310113446048319419_usize,3021305421324607744_usize,4966738689068046262_usize];
Call(_13.fld0 = fn5(_2, _1, _2, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = (-34695968789566511694951804783240775719_i128) as u8;
_1 = [(-452067684223057101_i64),2823375481021945521_i64,(-3796324121299256319_i64)];
_3 = [4468596722933955493_usize,5_usize,6_usize,6_usize,10073382623610881140_usize,1035201326747003402_usize,827543504074102741_usize,3_usize];
_13.fld0.0 = _2;
_13.fld0.0 = [7_usize,16621689843283889073_usize,1_usize,1_usize,5_usize,2661396691084497656_usize,5_usize,2_usize];
_2 = [2_usize,7_usize,6093909717132669458_usize,1483674714421725557_usize,16607742207315843518_usize,0_usize,13158154828478167234_usize,6_usize];
_16 = 9083544732865525053_usize;
_15.2 = _12;
_15.0 = false as i64;
_17 = _7;
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
match _16 {
0 => bb1,
1 => bb3,
9083544732865525053 => bb5,
_ => bb4
}
}
bb3 = {
_13.fld0.0 = [4_usize,9366156966072062489_usize,2904334308226492263_usize,2936854769817321243_usize,1587495824924893774_usize,310113446048319419_usize,3021305421324607744_usize,4966738689068046262_usize];
Call(_13.fld0 = fn5(_2, _1, _2, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_16 = 1182222785522139644_u64 as usize;
RET = 9223372036854775807_isize as u32;
_15.1 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_14 = 6521070236037297687_u64 as i8;
_9 = _11;
_1 = [_15.0,_15.0,_15.0];
_15.2 = !_14;
_15.1 = -9223372036854775807_isize;
_1 = [_15.0,_15.0,_15.0];
RET = !919706196_u32;
Goto(bb6)
}
bb6 = {
_8 = _10;
_7 = _17;
_5 = _8;
_15 = (2222113272613593074_i64, (-9223372036854775808_isize), _12, 1735016605_i32);
_15.2 = -_14;
match _15.3 {
0 => bb1,
1735016605 => bb7,
_ => bb4
}
}
bb7 = {
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_15.1 = _12 as isize;
_15 = (6028484057865315218_i64, (-9223372036854775808_isize), _12, (-2068973857_i32));
_6 = [_16,_16,_16,_16,_16,_16,_16,_16];
RET = _16 as u32;
_15.3 = (-1956873125_i32);
_12 = _15.2 << _15.0;
_17 = _7;
_4 = [_16,_16,_16,_16,_16,_16,_16,_16];
_15.1 = RET as isize;
_16 = 5_usize ^ 5_usize;
_15.1 = !9223372036854775807_isize;
_20 = 169327357537308373307573882348264907834_u128 as f32;
_13.fld0.0 = [_16,_16,_16,_16,_16,_16,_16,_16];
_18 = _20 - _20;
_1 = [_15.0,_15.0,_15.0];
_3 = _2;
_7 = _17;
_21.3 = _15.3 ^ _15.3;
_13.fld0.0 = _3;
_21.2 = _12 | _12;
_7 = _17;
_11 = !_9;
_16 = !979690052100561389_usize;
_13.fld0 = (_2,);
Goto(bb8)
}
bb8 = {
_23 = _15.0 - _15.0;
_7 = _17;
_21 = (_15.0, _15.1, _12, _15.3);
_12 = _21.2;
_21 = _15;
_13.fld0 = (_3,);
_15.0 = _23;
_25 = (_21.0, _21.1, _12, _21.3);
_21.1 = 288163289651511781393091671976214498224_u128 as isize;
_21.1 = !_25.1;
_29 = (-6734_i16) - 20060_i16;
_7 = _17;
_10 = [_15.0,_23,_15.0];
_15 = (_23, _21.1, _25.2, _25.3);
_23 = _15.0;
_25.2 = _15.2;
RET = !1796605197_u32;
_29 = _23 as i16;
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_36 = [177775316535440098924753047176250919462_u128];
_25.1 = 54726_u16 as isize;
Goto(bb9)
}
bb9 = {
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_15.0 = _21.0 | _21.0;
_33.fld0 = true;
_37 = _13.fld0;
_15.0 = _23 & _23;
_23 = _25.0;
_34 = _33.fld0;
_37 = (_4,);
_27.fld0.0 = [_16,_16,_16,_16,_16,_16,_16,_16];
_4 = [_16,_16,_16,_16,_16,_16,_16,_16];
_21.2 = _12 * _15.2;
_35 = _17;
_26 = [_25.0,_15.0,_15.0];
_25.0 = _21.0 - _15.0;
_15 = _21;
_13.fld0 = _37;
_33.fld0 = _34;
_22 = !149510977086574060568309795765769149775_u128;
_4 = [_16,_16,_16,_16,_16,_16,_16,_16];
RET = _22 as u32;
_28 = Adt41::Variant1 { fld0: _2 };
_13.fld0 = (Field::<[usize; 8]>(Variant(_28, 1), 0),);
_27.fld0.0 = [_16,_16,_16,_16,_16,_16,_16,_16];
_24 = [_23,_23,_15.0];
SetDiscriminant(_28, 3);
_13.fld0.0 = [_16,_16,_16,_16,_16,_16,_16,_16];
_33.fld3 = _11 >> _21.2;
_33.fld4 = _29 ^ _29;
match _21.0 {
0 => bb4,
1 => bb2,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6028484057865315218 => bb15,
_ => bb14
}
}
bb10 = {
_9 = (-34695968789566511694951804783240775719_i128) as u8;
_1 = [(-452067684223057101_i64),2823375481021945521_i64,(-3796324121299256319_i64)];
_3 = [4468596722933955493_usize,5_usize,6_usize,6_usize,10073382623610881140_usize,1035201326747003402_usize,827543504074102741_usize,3_usize];
_13.fld0.0 = _2;
_13.fld0.0 = [7_usize,16621689843283889073_usize,1_usize,1_usize,5_usize,2661396691084497656_usize,5_usize,2_usize];
_2 = [2_usize,7_usize,6093909717132669458_usize,1483674714421725557_usize,16607742207315843518_usize,0_usize,13158154828478167234_usize,6_usize];
_16 = 9083544732865525053_usize;
_15.2 = _12;
_15.0 = false as i64;
_17 = _7;
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
match _16 {
0 => bb1,
1 => bb3,
9083544732865525053 => bb5,
_ => bb4
}
}
bb11 = {
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_15.1 = _12 as isize;
_15 = (6028484057865315218_i64, (-9223372036854775808_isize), _12, (-2068973857_i32));
_6 = [_16,_16,_16,_16,_16,_16,_16,_16];
RET = _16 as u32;
_15.3 = (-1956873125_i32);
_12 = _15.2 << _15.0;
_17 = _7;
_4 = [_16,_16,_16,_16,_16,_16,_16,_16];
_15.1 = RET as isize;
_16 = 5_usize ^ 5_usize;
_15.1 = !9223372036854775807_isize;
_20 = 169327357537308373307573882348264907834_u128 as f32;
_13.fld0.0 = [_16,_16,_16,_16,_16,_16,_16,_16];
_18 = _20 - _20;
_1 = [_15.0,_15.0,_15.0];
_3 = _2;
_7 = _17;
_21.3 = _15.3 ^ _15.3;
_13.fld0.0 = _3;
_21.2 = _12 | _12;
_7 = _17;
_11 = !_9;
_16 = !979690052100561389_usize;
_13.fld0 = (_2,);
Goto(bb8)
}
bb12 = {
_8 = _10;
_7 = _17;
_5 = _8;
_15 = (2222113272613593074_i64, (-9223372036854775808_isize), _12, 1735016605_i32);
_15.2 = -_14;
match _15.3 {
0 => bb1,
1735016605 => bb7,
_ => bb4
}
}
bb13 = {
_13.fld0.0 = [4_usize,9366156966072062489_usize,2904334308226492263_usize,2936854769817321243_usize,1587495824924893774_usize,310113446048319419_usize,3021305421324607744_usize,4966738689068046262_usize];
Call(_13.fld0 = fn5(_2, _1, _2, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_13.fld0.0 = [4_usize,9366156966072062489_usize,2904334308226492263_usize,2936854769817321243_usize,1587495824924893774_usize,310113446048319419_usize,3021305421324607744_usize,4966738689068046262_usize];
Call(_13.fld0 = fn5(_2, _1, _2, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_17 = _7;
RET = 1074805059_u32 * 1074204241_u32;
_26 = [_25.0,_21.0,_25.0];
_25.1 = _18 as isize;
_37.0 = _2;
_21.2 = _12;
_33.fld2 = core::ptr::addr_of!(_3);
Goto(bb16)
}
bb16 = {
Call(_38 = dump_var(4_usize, 17_usize, Move(_17), 4_usize, Move(_4), 10_usize, Move(_10), 37_usize, Move(_37)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(4_usize, 35_usize, Move(_35), 36_usize, Move(_36), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(4_usize, 23_usize, Move(_23), 34_usize, Move(_34), 8_usize, Move(_8), 2_usize, Move(_2)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_38 = dump_var(4_usize, 6_usize, Move(_6), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: [usize; 8],mut _2: [i64; 3],mut _3: [usize; 8],mut _4: [usize; 8],mut _5: [i64; 3]) -> ([usize; 8],) {
mir! {
type RET = ([usize; 8],);
let _6: *mut f64;
let _7: [usize; 8];
let _8: Adt38;
let _9: [i64; 3];
let _10: &'static i8;
let _11: usize;
let _12: Adt48;
let _13: [char; 3];
let _14: f32;
let _15: usize;
let _16: (i128,);
let _17: i8;
let _18: Adt44;
let _19: f64;
let _20: ();
let _21: ();
{
RET = (_3,);
_4 = [5_usize,6_usize,15837162723739417742_usize,4_usize,17421872396778616667_usize,6_usize,12734495217157319383_usize,0_usize];
RET.0 = [15914136484030700202_usize,5431817549159969255_usize,1953293433097520766_usize,7698650646309384781_usize,1_usize,17713242723070450391_usize,6104547633694468780_usize,5_usize];
RET = (_3,);
_1 = [17370689285648606845_usize,3_usize,0_usize,8109657074031978800_usize,5_usize,9038758465570960059_usize,4_usize,10472457595914471553_usize];
_5 = [(-4322667471485814013_i64),(-5317364535172399993_i64),7433866046847394015_i64];
_4 = [13096861794163568228_usize,6_usize,18100383545762533138_usize,5_usize,15325503145310303549_usize,12989725993222510571_usize,2457155833371371722_usize,1_usize];
RET = (_3,);
_3 = [1343918706747212556_usize,6_usize,3514470483615742164_usize,1714269801414145091_usize,2_usize,6_usize,5495767283455246671_usize,15689946741367434290_usize];
_1 = [2387570158370535998_usize,1_usize,6_usize,4081827883954637889_usize,3872458990625223857_usize,1_usize,608552279353141869_usize,1454547743484816536_usize];
_3 = [1_usize,7_usize,13139992695345043553_usize,1_usize,12288142727588971545_usize,6_usize,6110360612661896996_usize,2_usize];
_1 = [16480654766468510698_usize,8673841401438435690_usize,6_usize,9564731763405742932_usize,6694411399669701830_usize,4_usize,5_usize,15068703785388840077_usize];
RET = (_1,);
RET = (_4,);
RET.0 = [3_usize,3660220123383774795_usize,3_usize,6763939789396296599_usize,3_usize,2_usize,11362451652821795478_usize,1_usize];
Goto(bb1)
}
bb1 = {
_7 = [2096587007015102215_usize,1568427211394023325_usize,7_usize,688171295121116843_usize,9594024159809144535_usize,0_usize,942480419885311348_usize,4752979589318068572_usize];
_8.fld0.0 = RET.0;
_9 = _5;
_9 = [2047182905408717420_i64,(-7257718016363711522_i64),(-156956505443601545_i64)];
_5 = [8648422260782932451_i64,6803680496594004441_i64,(-7825196183380222765_i64)];
_3 = _1;
_8.fld0 = (RET.0,);
_5 = [8116016654110474578_i64,1070286720560789429_i64,6200759219846537085_i64];
_7 = [6567277154275350944_usize,11119533692238436051_usize,14042841690111672334_usize,15491591628724770402_usize,0_usize,2658949883703913370_usize,17659127143396329916_usize,18268120891740668294_usize];
_8.fld0 = (_3,);
_11 = 4171206989310214892_usize;
_11 = 6_usize;
RET = _8.fld0;
_8 = Adt38 { fld0: RET };
_9 = _5;
Goto(bb2)
}
bb2 = {
RET = (_3,);
_7 = _1;
RET = (_1,);
_3 = [_7[_11],RET.0[_11],_7[_11],_8.fld0.0[_11],_7[_11],_7[_11],_8.fld0.0[_11],RET.0[_11]];
_12 = Adt48::Variant2 { fld0: 818339332901858714_u64,fld1: _5,fld2: 2315673362_u32,fld3: 26_u8,fld4: 8416_i16 };
_9 = Field::<[i64; 3]>(Variant(_12, 2), 1);
place!(Field::<u64>(Variant(_12, 2), 0)) = 8722419727064976785_u64;
RET = _8.fld0;
Call(_1 = fn6(_8.fld0.0, _11, RET.0[_11], _7[_11], _4[_11], _7[_11], _8.fld0, RET.0[_11], Field::<u64>(Variant(_12, 2), 0), _3[_11], _4[_11], _4[_11]), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
place!(Field::<u8>(Variant(_12, 2), 3)) = 154_u8;
_5 = [8252873176197086333_i64,(-4750932416846967824_i64),(-7715243658030263225_i64)];
place!(Field::<u32>(Variant(_12, 2), 2)) = !4227969414_u32;
_7 = _1;
RET.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
place!(Field::<i16>(Variant(_12, 2), 4)) = 2025910081_i32 as i16;
_11 = 7_usize - 2_usize;
_14 = (-147397376145721488312942136502518724582_i128) as f32;
_8.fld0 = RET;
place!(Field::<u8>(Variant(_12, 2), 3)) = 143_u8;
place!(Field::<u8>(Variant(_12, 2), 3)) = Field::<u64>(Variant(_12, 2), 0) as u8;
_7 = _1;
_17 = 102200549705746058367719690613593535118_u128 as i8;
_10 = &_17;
_17 = Field::<u8>(Variant(_12, 2), 3) as i8;
place!(Field::<u32>(Variant(_12, 2), 2)) = 1868447570_u32;
_9 = [4955187403185999932_i64,(-217239049313388814_i64),(-981657456430488457_i64)];
match Field::<u64>(Variant(_12, 2), 0) {
0 => bb2,
1 => bb4,
8722419727064976785 => bb6,
_ => bb5
}
}
bb4 = {
RET = (_3,);
_7 = _1;
RET = (_1,);
_3 = [_7[_11],RET.0[_11],_7[_11],_8.fld0.0[_11],_7[_11],_7[_11],_8.fld0.0[_11],RET.0[_11]];
_12 = Adt48::Variant2 { fld0: 818339332901858714_u64,fld1: _5,fld2: 2315673362_u32,fld3: 26_u8,fld4: 8416_i16 };
_9 = Field::<[i64; 3]>(Variant(_12, 2), 1);
place!(Field::<u64>(Variant(_12, 2), 0)) = 8722419727064976785_u64;
RET = _8.fld0;
Call(_1 = fn6(_8.fld0.0, _11, RET.0[_11], _7[_11], _4[_11], _7[_11], _8.fld0, RET.0[_11], Field::<u64>(Variant(_12, 2), 0), _3[_11], _4[_11], _4[_11]), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_7 = [2096587007015102215_usize,1568427211394023325_usize,7_usize,688171295121116843_usize,9594024159809144535_usize,0_usize,942480419885311348_usize,4752979589318068572_usize];
_8.fld0.0 = RET.0;
_9 = _5;
_9 = [2047182905408717420_i64,(-7257718016363711522_i64),(-156956505443601545_i64)];
_5 = [8648422260782932451_i64,6803680496594004441_i64,(-7825196183380222765_i64)];
_3 = _1;
_8.fld0 = (RET.0,);
_5 = [8116016654110474578_i64,1070286720560789429_i64,6200759219846537085_i64];
_7 = [6567277154275350944_usize,11119533692238436051_usize,14042841690111672334_usize,15491591628724770402_usize,0_usize,2658949883703913370_usize,17659127143396329916_usize,18268120891740668294_usize];
_8.fld0 = (_3,);
_11 = 4171206989310214892_usize;
_11 = 6_usize;
RET = _8.fld0;
_8 = Adt38 { fld0: RET };
_9 = _5;
Goto(bb2)
}
bb6 = {
_16 = ((-57373520589457820544308988437473760896_i128),);
_15 = _11;
_13 = ['\u{608b6}','\u{787f}','\u{d96b5}'];
RET = (_4,);
_8.fld0.0 = [_15,_15,_11,_15,_11,_15,_11,_11];
_8.fld0 = (_4,);
_8.fld0.0 = [_11,_15,_11,_15,_15,_15,_15,_15];
place!(Field::<u64>(Variant(_12, 2), 0)) = 5024259713595033022_u64 | 15382617648408668939_u64;
place!(Field::<[i64; 3]>(Variant(_12, 2), 1)) = [(-3295137556279802316_i64),8553026250510202169_i64,(-5929032778659674636_i64)];
_11 = _15 * _15;
_10 = &_17;
_9 = [3167487464040817259_i64,(-1072903278363725628_i64),(-2795242948623528132_i64)];
_16.0 = !116812614167497767202570498009578024059_i128;
RET = (_1,);
Goto(bb7)
}
bb7 = {
Call(_20 = dump_var(5_usize, 9_usize, Move(_9), 11_usize, Move(_11), 13_usize, Move(_13), 3_usize, Move(_3)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_20 = dump_var(5_usize, 15_usize, Move(_15), 7_usize, Move(_7), 21_usize, _21, 21_usize, _21), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [usize; 8],mut _2: usize,mut _3: usize,mut _4: usize,mut _5: usize,mut _6: usize,mut _7: ([usize; 8],),mut _8: usize,mut _9: u64,mut _10: usize,mut _11: usize,mut _12: usize) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _13: [i64; 3];
let _14: Adt46;
let _15: [char; 3];
let _16: u32;
let _17: ();
let _18: ();
{
_6 = !_5;
_6 = !_1[_3];
_7.0[_2] = !_3;
RET[_3] = 24690_i16 as usize;
_7.0 = _1;
_6 = _7.0[_3] | _5;
RET[_2] = '\u{2ef99}' as usize;
RET = _7.0;
_12 = RET[_3];
RET = [_1[_2],_1[_3],_3,_5,_3,_7.0[_3],_6,_4];
_15 = ['\u{f3348}','\u{6ad1c}','\u{10b4eb}'];
_9 = 2140718174_u32 as u64;
_7.0[_2] = _5 * _12;
_7.0 = _1;
_12 = _6;
_13 = [3609813682958786468_i64,2197079867003761803_i64,(-1499165652763210619_i64)];
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(6_usize, 6_usize, Move(_6), 3_usize, Move(_3), 11_usize, Move(_11), 7_usize, Move(_7)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(6_usize, 1_usize, Move(_1), 5_usize, Move(_5), 2_usize, Move(_2), 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: Adt48,mut _2: [usize; 8],mut _3: i128,mut _4: *mut [u128; 1],mut _5: *mut [u128; 1],mut _6: [u128; 1],mut _7: [usize; 8],mut _8: [usize; 8],mut _9: *mut [u128; 1],mut _10: [usize; 8],mut _11: *mut [u128; 1],mut _12: u64) -> bool {
mir! {
type RET = bool;
let _13: (i128,);
let _14: f64;
let _15: [char; 3];
let _16: Adt37;
let _17: usize;
let _18: Adt46;
let _19: isize;
let _20: i8;
let _21: f64;
let _22: isize;
let _23: ([usize; 8],);
let _24: [i64; 2];
let _25: isize;
let _26: u8;
let _27: char;
let _28: u8;
let _29: bool;
let _30: (u16, f64, u16);
let _31: usize;
let _32: [char; 3];
let _33: i16;
let _34: ();
let _35: ();
{
_3 = -(-152715966191314697988126039593395725118_i128);
_6 = [335042807131867578410250998298789364545_u128];
place!(Field::<i16>(Variant(_1, 2), 4)) = -21113_i16;
place!(Field::<i16>(Variant(_1, 2), 4)) = (-2624_i16) + (-27125_i16);
place!(Field::<[i64; 3]>(Variant(_1, 2), 1)) = [3652331014959912573_i64,(-5622769907393841433_i64),5965890574637963707_i64];
_9 = core::ptr::addr_of_mut!(_6);
_6 = [284421477442751957643303333107985475657_u128];
Call(_7 = core::intrinsics::transmute(_8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = _9;
_5 = _11;
place!(Field::<[i64; 3]>(Variant(_1, 2), 1)) = [5723553303344584778_i64,(-8344444099288095916_i64),(-5718426516658738130_i64)];
_6 = [135931619614021824167977342322622658744_u128];
_4 = _11;
place!(Field::<u64>(Variant(_1, 2), 0)) = _12;
_7 = [1859268312087022564_usize,1_usize,7_usize,7_usize,2_usize,7385137199092724342_usize,3733916529711175648_usize,14496561397475749720_usize];
place!(Field::<i16>(Variant(_1, 2), 4)) = (-11029_i16) >> Field::<u64>(Variant(_1, 2), 0);
_2 = _10;
_7 = [4113268206957863221_usize,16105246545103448564_usize,2_usize,0_usize,6_usize,17359955273395617801_usize,18244465148589176602_usize,12543265600884329898_usize];
_13 = (_3,);
RET = false;
_10 = [3_usize,10518217945467692236_usize,5_usize,14157460849450475390_usize,14133281395825301676_usize,5016358406203882750_usize,14773197605761458598_usize,1_usize];
_12 = Field::<u64>(Variant(_1, 2), 0);
place!(Field::<[i64; 3]>(Variant(_1, 2), 1)) = [6414437339298481590_i64,(-7167474323415712822_i64),(-3416612059284515564_i64)];
place!(Field::<i16>(Variant(_1, 2), 4)) = -1751_i16;
_2 = [6_usize,5_usize,5140902059242449766_usize,10607796904154966370_usize,4_usize,7_usize,13620490314233941014_usize,4546481662703901383_usize];
place!(Field::<u8>(Variant(_1, 2), 3)) = (-4361654060373083806_i64) as u8;
_4 = core::ptr::addr_of_mut!(_6);
_12 = Field::<u64>(Variant(_1, 2), 0) >> _3;
_6 = [148535301906112392753895878781531132972_u128];
SetDiscriminant(_1, 1);
_3 = _13.0;
_7 = [1_usize,6905816137432020555_usize,3_usize,13472521368295235130_usize,3918787588825121234_usize,8652094538756963764_usize,17603532462819602540_usize,1010065389845705295_usize];
_3 = -_13.0;
Goto(bb2)
}
bb2 = {
RET = !false;
_12 = _3 as u64;
_8 = [9968586910708722239_usize,6_usize,3_usize,16562418745471040450_usize,8342531031881527821_usize,7400077232410654883_usize,10460561984400356222_usize,3749373991741808729_usize];
_12 = !6226097623764159275_u64;
place!(Field::<*mut bool>(Variant(_1, 1), 1)) = core::ptr::addr_of_mut!(RET);
_4 = core::ptr::addr_of_mut!(_6);
place!(Field::<isize>(Variant(_1, 1), 2)) = 26_isize;
_13 = (_3,);
_8 = _7;
_7 = [0_usize,10192307269987495619_usize,2_usize,13107711284167395097_usize,14370339597138703191_usize,3_usize,280641502393517182_usize,13742349916969994420_usize];
_13.0 = _3;
_14 = 34279_u16 as f64;
_8 = [6399244272890894708_usize,3_usize,2_usize,1479701691394664057_usize,6_usize,18338252389817022534_usize,18117082346312671888_usize,6534471086085282634_usize];
place!(Field::<[char; 3]>(Variant(_1, 1), 0)) = ['\u{7d88d}','\u{74957}','\u{83b2c}'];
_12 = 7402173694164502013_u64;
_9 = _5;
_13 = (_3,);
_4 = _5;
_15 = Field::<[char; 3]>(Variant(_1, 1), 0);
_11 = _9;
match Field::<isize>(Variant(_1, 1), 2) {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
26 => bb10,
_ => bb9
}
}
bb3 = {
_5 = _9;
_5 = _11;
place!(Field::<[i64; 3]>(Variant(_1, 2), 1)) = [5723553303344584778_i64,(-8344444099288095916_i64),(-5718426516658738130_i64)];
_6 = [135931619614021824167977342322622658744_u128];
_4 = _11;
place!(Field::<u64>(Variant(_1, 2), 0)) = _12;
_7 = [1859268312087022564_usize,1_usize,7_usize,7_usize,2_usize,7385137199092724342_usize,3733916529711175648_usize,14496561397475749720_usize];
place!(Field::<i16>(Variant(_1, 2), 4)) = (-11029_i16) >> Field::<u64>(Variant(_1, 2), 0);
_2 = _10;
_7 = [4113268206957863221_usize,16105246545103448564_usize,2_usize,0_usize,6_usize,17359955273395617801_usize,18244465148589176602_usize,12543265600884329898_usize];
_13 = (_3,);
RET = false;
_10 = [3_usize,10518217945467692236_usize,5_usize,14157460849450475390_usize,14133281395825301676_usize,5016358406203882750_usize,14773197605761458598_usize,1_usize];
_12 = Field::<u64>(Variant(_1, 2), 0);
place!(Field::<[i64; 3]>(Variant(_1, 2), 1)) = [6414437339298481590_i64,(-7167474323415712822_i64),(-3416612059284515564_i64)];
place!(Field::<i16>(Variant(_1, 2), 4)) = -1751_i16;
_2 = [6_usize,5_usize,5140902059242449766_usize,10607796904154966370_usize,4_usize,7_usize,13620490314233941014_usize,4546481662703901383_usize];
place!(Field::<u8>(Variant(_1, 2), 3)) = (-4361654060373083806_i64) as u8;
_4 = core::ptr::addr_of_mut!(_6);
_12 = Field::<u64>(Variant(_1, 2), 0) >> _3;
_6 = [148535301906112392753895878781531132972_u128];
SetDiscriminant(_1, 1);
_3 = _13.0;
_7 = [1_usize,6905816137432020555_usize,3_usize,13472521368295235130_usize,3918787588825121234_usize,8652094538756963764_usize,17603532462819602540_usize,1010065389845705295_usize];
_3 = -_13.0;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = core::ptr::addr_of_mut!(_6);
_17 = 5399418785499199315_usize & 12561576677640749283_usize;
_20 = !(-83_i8);
_13.0 = _3;
_3 = _13.0;
_5 = _9;
place!(Field::<[char; 3]>(Variant(_1, 1), 0)) = ['\u{7db7e}','\u{21ba3}','\u{ffc6b}'];
_12 = !13894734529614309940_u64;
_9 = _11;
_19 = 2124004329_i32 as isize;
_22 = _17 as isize;
_21 = 3624463038_u32 as f64;
Call(_2 = fn8(Move(_1), _10, _9, _8, _5, _10, _21, _22, _15, _11), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_13.0 = _3;
_13.0 = !_3;
_23.0 = [_17,_17,_17,_17,_17,_17,_17,_17];
_13 = (_3,);
_12 = 6436341664952790948_u64 & 5147597362148583764_u64;
_9 = _11;
_4 = _9;
_13.0 = !_3;
_13 = (_3,);
_10 = _2;
_11 = _9;
_19 = -_22;
Goto(bb12)
}
bb12 = {
_2 = _10;
_14 = _21 + _21;
_14 = _21;
_4 = core::ptr::addr_of_mut!(_6);
_9 = _11;
_21 = _14 * _14;
_25 = !_22;
_26 = !54_u8;
_27 = '\u{a490c}';
_11 = _4;
_13.0 = -_3;
_24 = [(-2154633521926991286_i64),4225064575853830369_i64];
_19 = _13.0 as isize;
_21 = -_14;
_9 = core::ptr::addr_of_mut!((*_4));
_24 = [7555342576185846692_i64,(-7516733157547039553_i64)];
_25 = _22;
_12 = !12410873425817398727_u64;
_12 = 18100310509081637775_u64;
Goto(bb13)
}
bb13 = {
_15 = [_27,_27,_27];
_28 = (-1157692151_i32) as u8;
_12 = !3227351042245120357_u64;
Call(_25 = core::intrinsics::transmute(_19), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_27 = '\u{e5853}';
_7 = _8;
_30.2 = 64154_u16 * 36974_u16;
_14 = _3 as f64;
_29 = _28 >= _26;
RET = _20 != _20;
_30.2 = !9947_u16;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(7_usize, 13_usize, Move(_13), 8_usize, Move(_8), 2_usize, Move(_2), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(7_usize, 23_usize, Move(_23), 29_usize, Move(_29), 17_usize, Move(_17), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(7_usize, 27_usize, Move(_27), 20_usize, Move(_20), 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: Adt48,mut _2: [usize; 8],mut _3: *mut [u128; 1],mut _4: [usize; 8],mut _5: *mut [u128; 1],mut _6: [usize; 8],mut _7: f64,mut _8: isize,mut _9: [char; 3],mut _10: *mut [u128; 1]) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _11: f32;
let _12: (i64, isize, i8, i32);
let _13: isize;
let _14: i128;
let _15: Adt41;
let _16: isize;
let _17: ([usize; 8], [char; 3]);
let _18: Adt37;
let _19: [char; 3];
let _20: bool;
let _21: f64;
let _22: Adt38;
let _23: ();
let _24: ();
{
_2 = [2_usize,14053656815244659275_usize,13013998552255462186_usize,2_usize,13681107919776108356_usize,5_usize,2_usize,0_usize];
RET = [6022265348924071021_usize,4468550449841787722_usize,4_usize,1_usize,12074923789276325637_usize,8724354788794002095_usize,16929370342966668333_usize,4_usize];
_10 = _3;
_5 = _10;
_10 = _5;
_3 = _10;
SetDiscriminant(_1, 3);
RET = _6;
place!(Field::<i32>(Variant(_1, 3), 0)) = !(-1604084446_i32);
_9 = ['\u{2e68d}','\u{9dbf4}','\u{c9d6a}'];
_12.0 = 5570497416117063770_i64 & (-3099459845501468232_i64);
RET = [6_usize,5_usize,5_usize,2351505895051117107_usize,2_usize,5_usize,1698902640937354253_usize,6_usize];
_12 = ((-4088430985977447030_i64), _8, (-124_i8), Field::<i32>(Variant(_1, 3), 0));
_4 = [6280699855631242809_usize,413996880253214821_usize,9246315663837797089_usize,4904289584231253119_usize,18258409812057502423_usize,9790258263888581465_usize,6_usize,7_usize];
_8 = 2098988197_u32 as isize;
_12 = ((-6626388590572751740_i64), _8, 15_i8, Field::<i32>(Variant(_1, 3), 0));
_12 = (7442335485849809996_i64, _8, 36_i8, Field::<i32>(Variant(_1, 3), 0));
_12.3 = _12.1 as i32;
match _12.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
7442335485849809996 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_8 = -_12.1;
place!(Field::<u32>(Variant(_1, 3), 1)) = 1279253352_u32 * 778182427_u32;
_11 = _8 as f32;
_12 = ((-8919724885658086455_i64), _8, 4_i8, Field::<i32>(Variant(_1, 3), 0));
_10 = _5;
RET = [9340137835315667950_usize,14308549364531339580_usize,3985416294245050003_usize,1_usize,6_usize,2_usize,2_usize,703535649998900694_usize];
_12.2 = (-36_i8);
_7 = Field::<u32>(Variant(_1, 3), 1) as f64;
_9 = ['\u{8dfc0}','\u{5ac28}','\u{f3837}'];
_12.0 = 5118509419561952045_i64 >> _12.2;
RET = [17010800367236590339_usize,12404472998751103619_usize,7_usize,10957177034735673038_usize,14966580587339638794_usize,6705219127662650855_usize,3655956267866719954_usize,15159668144314946050_usize];
_9 = ['\u{10b1e4}','\u{fab48}','\u{108084}'];
_2 = [17699056154194827406_usize,16106001597934029313_usize,5_usize,5_usize,3_usize,7_usize,6_usize,3286242557863044971_usize];
_12.3 = Field::<i32>(Variant(_1, 3), 0);
_12.2 = !(-110_i8);
_12.1 = 16738809637734737465_u64 as isize;
_7 = 31155_u16 as f64;
place!(Field::<i32>(Variant(_1, 3), 0)) = _12.3 * _12.3;
_7 = 202_u8 as f64;
_3 = _5;
Call(_3 = fn9(_4, RET, _2, RET, Field::<i32>(Variant(_1, 3), 0), _4, _2, _6), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_2 = [4438276754358954743_usize,11738349367105835193_usize,9590731930875455996_usize,13111896225449654825_usize,507675960300335948_usize,0_usize,1_usize,16576764564964130161_usize];
_12 = ((-1560147809883735848_i64), _8, (-16_i8), Field::<i32>(Variant(_1, 3), 0));
_11 = Field::<u32>(Variant(_1, 3), 1) as f32;
_5 = _3;
_13 = -_12.1;
_13 = _8;
_14 = 2644191594616471309_u64 as i128;
_4 = [17063656086808773454_usize,3_usize,11227935642229077197_usize,6_usize,0_usize,0_usize,13084016606125416377_usize,5771828949336382156_usize];
_9 = ['\u{45b0f}','\u{e0ae9}','\u{e3cbd}'];
_13 = _12.1;
_4 = [2_usize,0_usize,1485735543291919786_usize,4_usize,6825922976031701624_usize,4_usize,3082954568549388673_usize,3264334770114218818_usize];
_12 = (4538952610462156860_i64, _8, 100_i8, Field::<i32>(Variant(_1, 3), 0));
_16 = Field::<u32>(Variant(_1, 3), 1) as isize;
_10 = _5;
match _12.2 {
0 => bb2,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
100 => bb17,
_ => bb16
}
}
bb10 = {
_8 = -_12.1;
place!(Field::<u32>(Variant(_1, 3), 1)) = 1279253352_u32 * 778182427_u32;
_11 = _8 as f32;
_12 = ((-8919724885658086455_i64), _8, 4_i8, Field::<i32>(Variant(_1, 3), 0));
_10 = _5;
RET = [9340137835315667950_usize,14308549364531339580_usize,3985416294245050003_usize,1_usize,6_usize,2_usize,2_usize,703535649998900694_usize];
_12.2 = (-36_i8);
_7 = Field::<u32>(Variant(_1, 3), 1) as f64;
_9 = ['\u{8dfc0}','\u{5ac28}','\u{f3837}'];
_12.0 = 5118509419561952045_i64 >> _12.2;
RET = [17010800367236590339_usize,12404472998751103619_usize,7_usize,10957177034735673038_usize,14966580587339638794_usize,6705219127662650855_usize,3655956267866719954_usize,15159668144314946050_usize];
_9 = ['\u{10b1e4}','\u{fab48}','\u{108084}'];
_2 = [17699056154194827406_usize,16106001597934029313_usize,5_usize,5_usize,3_usize,7_usize,6_usize,3286242557863044971_usize];
_12.3 = Field::<i32>(Variant(_1, 3), 0);
_12.2 = !(-110_i8);
_12.1 = 16738809637734737465_u64 as isize;
_7 = 31155_u16 as f64;
place!(Field::<i32>(Variant(_1, 3), 0)) = _12.3 * _12.3;
_7 = 202_u8 as f64;
_3 = _5;
Call(_3 = fn9(_4, RET, _2, RET, Field::<i32>(Variant(_1, 3), 0), _4, _2, _6), ReturnTo(bb9), UnwindUnreachable())
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_10 = _5;
_7 = 5010_i16 as f64;
_2 = [4814928179705677564_usize,5_usize,4_usize,4_usize,6_usize,9694634271210974748_usize,632086972449125341_usize,8784050151813893026_usize];
Goto(bb18)
}
bb18 = {
Call(_23 = dump_var(8_usize, 8_usize, Move(_8), 4_usize, Move(_4), 13_usize, Move(_13), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [usize; 8],mut _2: [usize; 8],mut _3: [usize; 8],mut _4: [usize; 8],mut _5: i32,mut _6: [usize; 8],mut _7: [usize; 8],mut _8: [usize; 8]) -> *mut [u128; 1] {
mir! {
type RET = *mut [u128; 1];
let _9: ([usize; 8],);
let _10: Adt41;
let _11: (i64, isize, i8, i32);
let _12: f64;
let _13: u16;
let _14: isize;
let _15: u8;
let _16: *mut bool;
let _17: ([usize; 8], [char; 3]);
let _18: f64;
let _19: ([usize; 8],);
let _20: ([usize; 8],);
let _21: [i64; 3];
let _22: [i128; 1];
let _23: ([usize; 8], [char; 3]);
let _24: ([usize; 8], [char; 3]);
let _25: ();
let _26: ();
{
_4 = [12526469175044442004_usize,12272272678176220692_usize,4_usize,11832889306686988913_usize,9917829141269875814_usize,1_usize,5_usize,16566362021862794498_usize];
_1 = _2;
_6 = _8;
_5 = (-1291493523_i32);
_10 = Adt41::Variant1 { fld0: _1 };
_9.0 = _2;
_11.0 = true as i64;
place!(Field::<[usize; 8]>(Variant(_10, 1), 0)) = _6;
_4 = [4_usize,7201705931478541012_usize,6_usize,5_usize,3_usize,3_usize,6_usize,5922379882968336304_usize];
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463463374607430476717933 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5 = 3671859807170700122_usize as i32;
_4 = [16946825146122365292_usize,7658005808089554634_usize,5_usize,15125475875891164346_usize,10677600390188993808_usize,7333121212752655794_usize,1_usize,3_usize];
_11 = (3130839840012028830_i64, 118_isize, 105_i8, _5);
_11.2 = 115_i8 | 107_i8;
SetDiscriminant(_10, 3);
_9 = (_3,);
_2 = [2_usize,4_usize,9084316550392472475_usize,613374718922443046_usize,10715226744693757175_usize,8336239439646845610_usize,6794993779076557638_usize,16431893289901228376_usize];
_3 = [4_usize,7_usize,7_usize,1_usize,16037122627418172359_usize,6_usize,6463090573573285480_usize,15543679826348906132_usize];
_11.3 = _5;
place!(Field::<*mut i8>(Variant(_10, 3), 1)) = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_10, 3), 3)));
_1 = _3;
_6 = [1729082041921344967_usize,16086129735545190072_usize,9903526377441720831_usize,5_usize,5_usize,0_usize,1_usize,2842999245652194288_usize];
place!(Field::<[char; 3]>(Variant(_10, 3), 2)) = ['\u{4b8ef}','\u{159e2}','\u{c419c}'];
_11.1 = !12_isize;
place!(Field::<*mut i8>(Variant(_10, 3), 1)) = core::ptr::addr_of_mut!(_11.2);
place!(Field::<[i64; 3]>(Variant(_10, 3), 4)) = [_11.0,_11.0,_11.0];
_8 = [3496257627149234281_usize,13015707911223060443_usize,5_usize,1718894042798538634_usize,11916690739616553096_usize,1_usize,5966153603569432804_usize,8113306037134886778_usize];
_11.1 = 57_isize;
_13 = !12637_u16;
_12 = (-22069_i16) as f64;
Goto(bb6)
}
bb6 = {
_11.0 = (-8611608459770902006_i64) ^ (-7507543274145580788_i64);
_8 = _4;
_9.0 = _6;
place!(Field::<[u128; 1]>(Variant(_10, 3), 0)) = [77788467888820946107406728268203134091_u128];
_9.0 = [2_usize,16470685297278748606_usize,1_usize,5416167123730852615_usize,6_usize,2_usize,1_usize,1_usize];
_11.2 = -(-114_i8);
place!(Field::<i8>(Variant(_10, 3), 3)) = -_11.2;
RET = core::ptr::addr_of_mut!(place!(Field::<[u128; 1]>(Variant(_10, 3), 0)));
SetDiscriminant(_10, 1);
_11.1 = -90_isize;
_5 = _11.3;
_6 = [12904523776894340368_usize,7_usize,2_usize,9710212244438491804_usize,7347175465135843080_usize,5_usize,6910261755181801384_usize,6_usize];
place!(Field::<[usize; 8]>(Variant(_10, 1), 0)) = _3;
_6 = [5_usize,5_usize,3943013393137052292_usize,410131957894114057_usize,7_usize,11543516089054320038_usize,17486998143040734286_usize,3_usize];
_1 = _8;
_1 = [2_usize,14852090167300510431_usize,0_usize,3783585183680020210_usize,4_usize,6_usize,7_usize,14118334274836500695_usize];
_11.1 = -63_isize;
_5 = _11.3 ^ _11.3;
_11.0 = -7570052399426021165_i64;
_11 = ((-1115836447879089160_i64), 113_isize, (-21_i8), _5);
_14 = _11.1 | _11.1;
_8 = [8114800260030168581_usize,4_usize,11117951372588165503_usize,16342627187192843802_usize,4_usize,15100233740716874764_usize,7500785202194255764_usize,10135472736411781210_usize];
_2 = [6_usize,11263380297449496744_usize,3_usize,4_usize,15328315425865501048_usize,0_usize,17213991493917817341_usize,5_usize];
_11.1 = _11.0 as isize;
_15 = 1568089119_u32 as u8;
_1 = _3;
Goto(bb7)
}
bb7 = {
_13 = 8110_u16;
_9.0 = _2;
_9 = (_1,);
_14 = _11.1 << _11.2;
_2 = _3;
_14 = _11.1;
_12 = _5 as f64;
_3 = _6;
_14 = '\u{cbd49}' as isize;
_8 = [6_usize,2241104199613737658_usize,1_usize,15808030877464461160_usize,7669869635490398419_usize,5_usize,7_usize,5437998640491009533_usize];
_9 = (Field::<[usize; 8]>(Variant(_10, 1), 0),);
_11 = ((-2237256057558184193_i64), _14, (-41_i8), _5);
_1 = _2;
_15 = !67_u8;
_9.0 = [6287715964290570315_usize,1_usize,16095683834005429009_usize,4_usize,18262625761244917341_usize,15478119731626396899_usize,1144171173489676583_usize,3_usize];
_5 = _13 as i32;
_9 = (Field::<[usize; 8]>(Variant(_10, 1), 0),);
_12 = _13 as f64;
_1 = _3;
_11.1 = 4273823690_u32 as isize;
_11.2 = 20994_i16 as i8;
_9.0 = _6;
_11.0 = _12 as i64;
_1 = [5_usize,0_usize,2_usize,17263110906912249840_usize,5_usize,5874143074937075512_usize,3_usize,12936912655965020837_usize];
_6 = _8;
_11.0 = -(-5151343980090036449_i64);
_11.2 = 101_i8;
match _11.2 {
0 => bb8,
1 => bb9,
101 => bb11,
_ => bb10
}
}
bb8 = {
_11.0 = (-8611608459770902006_i64) ^ (-7507543274145580788_i64);
_8 = _4;
_9.0 = _6;
place!(Field::<[u128; 1]>(Variant(_10, 3), 0)) = [77788467888820946107406728268203134091_u128];
_9.0 = [2_usize,16470685297278748606_usize,1_usize,5416167123730852615_usize,6_usize,2_usize,1_usize,1_usize];
_11.2 = -(-114_i8);
place!(Field::<i8>(Variant(_10, 3), 3)) = -_11.2;
RET = core::ptr::addr_of_mut!(place!(Field::<[u128; 1]>(Variant(_10, 3), 0)));
SetDiscriminant(_10, 1);
_11.1 = -90_isize;
_5 = _11.3;
_6 = [12904523776894340368_usize,7_usize,2_usize,9710212244438491804_usize,7347175465135843080_usize,5_usize,6910261755181801384_usize,6_usize];
place!(Field::<[usize; 8]>(Variant(_10, 1), 0)) = _3;
_6 = [5_usize,5_usize,3943013393137052292_usize,410131957894114057_usize,7_usize,11543516089054320038_usize,17486998143040734286_usize,3_usize];
_1 = _8;
_1 = [2_usize,14852090167300510431_usize,0_usize,3783585183680020210_usize,4_usize,6_usize,7_usize,14118334274836500695_usize];
_11.1 = -63_isize;
_5 = _11.3 ^ _11.3;
_11.0 = -7570052399426021165_i64;
_11 = ((-1115836447879089160_i64), 113_isize, (-21_i8), _5);
_14 = _11.1 | _11.1;
_8 = [8114800260030168581_usize,4_usize,11117951372588165503_usize,16342627187192843802_usize,4_usize,15100233740716874764_usize,7500785202194255764_usize,10135472736411781210_usize];
_2 = [6_usize,11263380297449496744_usize,3_usize,4_usize,15328315425865501048_usize,0_usize,17213991493917817341_usize,5_usize];
_11.1 = _11.0 as isize;
_15 = 1568089119_u32 as u8;
_1 = _3;
Goto(bb7)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_2 = [3484754252103561280_usize,10746513013833971426_usize,0_usize,8818535687001509474_usize,490817709264254802_usize,2_usize,4_usize,4_usize];
_11 = (7998746183980746932_i64, _14, 19_i8, _5);
_2 = [6_usize,4525784733963585935_usize,3115229720571400679_usize,2_usize,2_usize,6_usize,0_usize,12624305764204835627_usize];
_4 = [12695742052565259312_usize,8620139284240109707_usize,16062043719812340820_usize,7_usize,9885669137026351362_usize,2_usize,11290690065152699987_usize,15843341463433631019_usize];
_15 = 214_u8 >> _11.0;
_7 = _2;
_14 = _11.1 << _11.0;
_15 = 11_u8 - 185_u8;
_11.2 = !18_i8;
_6 = [16439093403640543603_usize,3_usize,3_usize,17400183819036418466_usize,5_usize,0_usize,530235485199846067_usize,3_usize];
_11.3 = !_5;
_11.1 = -_14;
_9.0 = _1;
_17.0 = [0_usize,9735304954798397860_usize,13330062864005874002_usize,7_usize,13222782064404550732_usize,4_usize,4_usize,6_usize];
_18 = -_12;
_8 = [3858783236984500310_usize,3344219865631140446_usize,14733728610289044240_usize,2750772529786491481_usize,115219571945668434_usize,8931486939997150408_usize,2_usize,5_usize];
_12 = _18;
_1 = [6_usize,11925885365437057492_usize,5_usize,2_usize,0_usize,15105287012495352954_usize,7_usize,340567208746525500_usize];
_8 = _9.0;
_7 = _4;
_7 = [4_usize,4_usize,8185905450624219704_usize,2_usize,1075711312124709413_usize,4_usize,4302805159261308794_usize,17669107505305654268_usize];
_2 = [5_usize,7_usize,6_usize,14728555861935082390_usize,3_usize,4_usize,0_usize,0_usize];
_4 = [7_usize,7_usize,3_usize,9259321031792567782_usize,17574018368702447227_usize,6_usize,4_usize,1_usize];
_1 = _6;
_9 = (_1,);
_7 = _4;
_11.3 = !_5;
_11.0 = !3983860355111937068_i64;
Goto(bb12)
}
bb12 = {
_14 = _11.1 & _11.1;
_13 = !5335_u16;
_6 = Field::<[usize; 8]>(Variant(_10, 1), 0);
_18 = _12;
_9 = (_3,);
_6 = _1;
_1 = _8;
place!(Field::<[usize; 8]>(Variant(_10, 1), 0)) = [0_usize,9210753952761375095_usize,5_usize,5_usize,3_usize,13534403806965961858_usize,2_usize,11266385035183768053_usize];
SetDiscriminant(_10, 3);
_15 = _11.0 as u8;
_15 = 234040015022594969855562736447299828602_u128 as u8;
_11.1 = _14 ^ _14;
_20.0 = [16179382694256069405_usize,12481331997018179823_usize,11764346706601328706_usize,1915317579971863957_usize,1078895037301996912_usize,7643616690583773205_usize,4025083458753699908_usize,3185828801159017665_usize];
place!(Field::<[i64; 3]>(Variant(_10, 3), 4)) = [_11.0,_11.0,_11.0];
_5 = -_11.3;
Goto(bb13)
}
bb13 = {
_6 = [5_usize,5_usize,1_usize,7531089015716555824_usize,9779857621605559723_usize,2_usize,2_usize,8195090880392392274_usize];
place!(Field::<*mut i8>(Variant(_10, 3), 1)) = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_10, 3), 3)));
_4 = _3;
place!(Field::<i8>(Variant(_10, 3), 3)) = _11.2;
_8 = _17.0;
_13 = (-11567_i16) as u16;
_18 = _12 * _12;
_19 = (_2,);
_11.0 = -(-8635788745277729078_i64);
_15 = 140_u8;
_11.0 = _14 as i64;
_11.1 = _14 >> _14;
_9 = (_1,);
_19.0 = _2;
_11.0 = 7603506221306802894_i64 + 7027140511152689653_i64;
place!(Field::<[char; 3]>(Variant(_10, 3), 2)) = ['\u{10c749}','\u{2a428}','\u{462d}'];
_22 = [158450343697320401382831020314617026257_i128];
_12 = -_18;
Goto(bb14)
}
bb14 = {
_23 = (_6, Field::<[char; 3]>(Variant(_10, 3), 2));
_21 = [_11.0,_11.0,_11.0];
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(9_usize, 8_usize, Move(_8), 13_usize, Move(_13), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(9_usize, 2_usize, Move(_2), 21_usize, Move(_21), 20_usize, Move(_20), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_25 = dump_var(9_usize, 6_usize, Move(_6), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: i128,mut _2: (i128,),mut _3: *mut [u128; 1],mut _4: (i128,),mut _5: *mut [u128; 1],mut _6: u64,mut _7: char,mut _8: bool,mut _9: bool,mut _10: u64,mut _11: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),mut _12: bool,mut _13: *mut [u128; 1]) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _14: [i64; 2];
let _15: i128;
let _16: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]);
let _17: [i64; 2];
let _18: u8;
let _19: f64;
let _20: bool;
let _21: (u16, f64, u16);
let _22: isize;
let _23: [usize; 8];
let _24: (i64, isize, i8, i32);
let _25: f32;
let _26: Adt50;
let _27: i64;
let _28: char;
let _29: Adt38;
let _30: i64;
let _31: u16;
let _32: u32;
let _33: Adt41;
let _34: u8;
let _35: (u16, f64, u16);
let _36: char;
let _37: ();
let _38: ();
{
RET = [4_usize,17195548650208726542_usize,6452786396228508152_usize,4287512398773986073_usize,6952093189652289433_usize,14270265442120090985_usize,2484362907609365533_usize,5_usize];
_10 = _6 << _4.0;
_10 = _6;
_7 = '\u{c99f8}';
_6 = _10 ^ _10;
RET = [15688575477771552159_usize,7_usize,15300352237205848752_usize,14040721317237025646_usize,2_usize,7_usize,9947022643423461316_usize,3_usize];
_2 = (_1,);
RET = [4_usize,12635333011394367215_usize,6_usize,1459890105903133119_usize,2_usize,1_usize,7_usize,2_usize];
_2 = _4;
RET = [17190368175431489001_usize,17940480062478932580_usize,16743633838856484193_usize,5_usize,13472606679991374021_usize,7_usize,11265747996646443775_usize,6_usize];
_4 = (_2.0,);
_1 = !_4.0;
_13 = _11.2;
_10 = _6 << _6;
_12 = _8;
_9 = !_12;
RET = [7_usize,14138890411393567316_usize,2_usize,1_usize,4_usize,617993051544474406_usize,1843307953119769193_usize,3_usize];
_14 = [8239265351785142119_i64,6464276012641617673_i64];
_11.2 = _11.1;
_11.0 = _11.1;
RET = [5_usize,2_usize,13195749473404018328_usize,5_usize,3745353365812203957_usize,1_usize,13081702318951736701_usize,7_usize];
_4 = (_1,);
_12 = !_9;
_11.2 = _11.0;
_2 = _4;
_1 = _2.0;
_1 = 2252294006749442129_usize as i128;
_15 = _4.0;
_11.0 = _11.2;
Call(_15 = core::intrinsics::bswap(_2.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14 = [369076316701692339_i64,(-9083820367732392947_i64)];
_10 = 31843966938976592022843076403241870160_u128 as u64;
_7 = '\u{13dca}';
_7 = '\u{94685}';
_2 = (_4.0,);
Goto(bb2)
}
bb2 = {
_1 = _15 >> _10;
_12 = _9;
_2.0 = -_4.0;
_15 = (-429806856_i32) as i128;
_16.1 = _5;
_1 = -_4.0;
_16.2 = _16.1;
_11.2 = _16.2;
RET = [0_usize,0_usize,7_usize,3967934595382431094_usize,0_usize,612997399464718204_usize,7_usize,1_usize];
_4 = (_2.0,);
_11.1 = _13;
_17 = _14;
_1 = 749714656_i32 as i128;
_3 = _11.2;
_4 = (_15,);
_11.1 = _16.2;
Goto(bb3)
}
bb3 = {
_16.0 = _3;
_16.1 = _11.2;
_12 = !_9;
_9 = _6 > _6;
_16.0 = _5;
Goto(bb4)
}
bb4 = {
_18 = 190_u8;
_4 = (_15,);
_18 = 212957853056433580162501794517349132167_u128 as u8;
_11.2 = _5;
_12 = !_9;
_16.2 = _13;
_16 = (_13, _11.1, _3);
_15 = !_4.0;
_10 = !_6;
_4 = (_2.0,);
_3 = _11.2;
_16.0 = _11.0;
RET = [6_usize,15186198621966232945_usize,4_usize,15066309347817633725_usize,7_usize,1_usize,5_usize,17029590666349864553_usize];
_8 = !_9;
_21.0 = 65460_u16 + 46251_u16;
_9 = !_12;
_21.0 = 7200_u16 | 30286_u16;
_9 = !_8;
_13 = _5;
_21.1 = _10 as f64;
_21.2 = 1252340897_i32 as u16;
_3 = _11.2;
RET = [10532688500466352039_usize,8594319173454952433_usize,5_usize,7_usize,14678873763867984449_usize,8910157433311199621_usize,10326130185925273856_usize,5_usize];
_15 = _2.0;
Call(_9 = fn11(_3, _21, _12, _6, _8, RET, _12, _8, _3, _12, _12, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_16 = (_11.2, _11.2, _13);
_19 = -_21.1;
_13 = _11.0;
_7 = '\u{9ec94}';
_9 = _21.1 == _19;
_18 = 210_u8;
_21 = (32714_u16, _19, 47369_u16);
_16.2 = _16.0;
_23 = RET;
_23 = [2_usize,1_usize,7377348170036426973_usize,1104941407294432796_usize,10907743086080279993_usize,4130703309191912142_usize,5_usize,2_usize];
_21.0 = _21.2 / _21.2;
RET = [5106942639457293686_usize,3_usize,1644146544298901944_usize,7_usize,5484017850148230746_usize,5_usize,1_usize,21693585246018707_usize];
_27 = !(-2176999164978015215_i64);
_15 = _1 - _4.0;
_21.2 = _21.0;
_25 = _21.1 as f32;
_24.2 = 73_i8 | 12_i8;
_23 = RET;
_29.fld0.0 = [6_usize,3_usize,11414210991441924825_usize,7_usize,2497265617036078316_usize,7_usize,8060480579068568815_usize,2_usize];
_20 = _8;
_15 = !_2.0;
_4 = _2;
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
210 => bb8,
_ => bb7
}
}
bb6 = {
_14 = [369076316701692339_i64,(-9083820367732392947_i64)];
_10 = 31843966938976592022843076403241870160_u128 as u64;
_7 = '\u{13dca}';
_7 = '\u{94685}';
_2 = (_4.0,);
Goto(bb2)
}
bb7 = {
_16.0 = _3;
_16.1 = _11.2;
_12 = !_9;
_9 = _6 > _6;
_16.0 = _5;
Goto(bb4)
}
bb8 = {
RET = _29.fld0.0;
_16 = (_13, _3, _11.0);
_4.0 = -_2.0;
_24 = (_27, (-9223372036854775808_isize), 52_i8, 13882780_i32);
_29.fld0.0 = [3_usize,7900106876623530163_usize,5_usize,1918856968716121713_usize,12356678613805316472_usize,12452257119833291929_usize,9890247811369328664_usize,3_usize];
_31 = _20 as u16;
_2 = _4;
_17 = [_27,_24.0];
_11.0 = _5;
_3 = _11.2;
_16.2 = _13;
_22 = -_24.1;
_2.0 = 5_usize as i128;
_16.2 = _5;
_4.0 = (-29375_i16) as i128;
RET = [0_usize,2_usize,14715144730913414080_usize,7_usize,17537390692070022251_usize,9258000640929384979_usize,3269936567706915288_usize,262641771996224409_usize];
_31 = !_21.0;
match _24.2 {
0 => bb6,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
52 => bb16,
_ => bb15
}
}
bb9 = {
_16.0 = _3;
_16.1 = _11.2;
_12 = !_9;
_9 = _6 > _6;
_16.0 = _5;
Goto(bb4)
}
bb10 = {
_14 = [369076316701692339_i64,(-9083820367732392947_i64)];
_10 = 31843966938976592022843076403241870160_u128 as u64;
_7 = '\u{13dca}';
_7 = '\u{94685}';
_2 = (_4.0,);
Goto(bb2)
}
bb11 = {
_16 = (_11.2, _11.2, _13);
_19 = -_21.1;
_13 = _11.0;
_7 = '\u{9ec94}';
_9 = _21.1 == _19;
_18 = 210_u8;
_21 = (32714_u16, _19, 47369_u16);
_16.2 = _16.0;
_23 = RET;
_23 = [2_usize,1_usize,7377348170036426973_usize,1104941407294432796_usize,10907743086080279993_usize,4130703309191912142_usize,5_usize,2_usize];
_21.0 = _21.2 / _21.2;
RET = [5106942639457293686_usize,3_usize,1644146544298901944_usize,7_usize,5484017850148230746_usize,5_usize,1_usize,21693585246018707_usize];
_27 = !(-2176999164978015215_i64);
_15 = _1 - _4.0;
_21.2 = _21.0;
_25 = _21.1 as f32;
_24.2 = 73_i8 | 12_i8;
_23 = RET;
_29.fld0.0 = [6_usize,3_usize,11414210991441924825_usize,7_usize,2497265617036078316_usize,7_usize,8060480579068568815_usize,2_usize];
_20 = _8;
_15 = !_2.0;
_4 = _2;
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
210 => bb8,
_ => bb7
}
}
bb12 = {
_18 = 190_u8;
_4 = (_15,);
_18 = 212957853056433580162501794517349132167_u128 as u8;
_11.2 = _5;
_12 = !_9;
_16.2 = _13;
_16 = (_13, _11.1, _3);
_15 = !_4.0;
_10 = !_6;
_4 = (_2.0,);
_3 = _11.2;
_16.0 = _11.0;
RET = [6_usize,15186198621966232945_usize,4_usize,15066309347817633725_usize,7_usize,1_usize,5_usize,17029590666349864553_usize];
_8 = !_9;
_21.0 = 65460_u16 + 46251_u16;
_9 = !_12;
_21.0 = 7200_u16 | 30286_u16;
_9 = !_8;
_13 = _5;
_21.1 = _10 as f64;
_21.2 = 1252340897_i32 as u16;
_3 = _11.2;
RET = [10532688500466352039_usize,8594319173454952433_usize,5_usize,7_usize,14678873763867984449_usize,8910157433311199621_usize,10326130185925273856_usize,5_usize];
_15 = _2.0;
Call(_9 = fn11(_3, _21, _12, _6, _8, RET, _12, _8, _3, _12, _12, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_16.0 = _3;
_16.1 = _11.2;
_12 = !_9;
_9 = _6 > _6;
_16.0 = _5;
Goto(bb4)
}
bb14 = {
_1 = _15 >> _10;
_12 = _9;
_2.0 = -_4.0;
_15 = (-429806856_i32) as i128;
_16.1 = _5;
_1 = -_4.0;
_16.2 = _16.1;
_11.2 = _16.2;
RET = [0_usize,0_usize,7_usize,3967934595382431094_usize,0_usize,612997399464718204_usize,7_usize,1_usize];
_4 = (_2.0,);
_11.1 = _13;
_17 = _14;
_1 = 749714656_i32 as i128;
_3 = _11.2;
_4 = (_15,);
_11.1 = _16.2;
Goto(bb3)
}
bb15 = {
_14 = [369076316701692339_i64,(-9083820367732392947_i64)];
_10 = 31843966938976592022843076403241870160_u128 as u64;
_7 = '\u{13dca}';
_7 = '\u{94685}';
_2 = (_4.0,);
Goto(bb2)
}
bb16 = {
_14 = _17;
_16.2 = _13;
_2.0 = _15;
_16 = (_13, _13, _11.2);
_16 = _11;
RET = [1_usize,8159777528410991569_usize,881886823741499985_usize,6_usize,0_usize,12157217158630052853_usize,329361483217809120_usize,10455624751658297775_usize];
_18 = 62_u8;
_29.fld0 = (RET,);
_9 = !_12;
_6 = _10;
_16.1 = _16.2;
_16.0 = _3;
_35 = (_31, _19, _31);
_3 = _11.2;
_8 = _12 ^ _12;
_2.0 = _24.2 as i128;
_35.1 = _22 as f64;
_4 = _2;
_21.2 = _31 << _21.0;
_21.0 = !_35.0;
_8 = _20;
_21.0 = _21.2 << _21.2;
_29.fld0 = (RET,);
_35.2 = !_35.0;
_16.2 = _13;
_24.2 = _24.1 as i8;
_13 = _11.2;
_34 = !_18;
_15 = _2.0;
_21.1 = _6 as f64;
Goto(bb17)
}
bb17 = {
Call(_37 = dump_var(10_usize, 24_usize, Move(_24), 1_usize, Move(_1), 12_usize, Move(_12), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(10_usize, 17_usize, Move(_17), 6_usize, Move(_6), 23_usize, Move(_23), 15_usize, Move(_15)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_37 = dump_var(10_usize, 18_usize, Move(_18), 7_usize, Move(_7), 38_usize, _38, 38_usize, _38), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: *mut [u128; 1],mut _2: (u16, f64, u16),mut _3: bool,mut _4: u64,mut _5: bool,mut _6: [usize; 8],mut _7: bool,mut _8: bool,mut _9: *mut [u128; 1],mut _10: bool,mut _11: bool,mut _12: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1])) -> bool {
mir! {
type RET = bool;
let _13: f32;
let _14: Adt47;
let _15: Adt49;
let _16: ();
let _17: ();
{
_6 = [2_usize,9258621384773321544_usize,5_usize,3_usize,18105609058479109121_usize,17000486593090668778_usize,18252748236665672713_usize,1_usize];
Goto(bb1)
}
bb1 = {
_1 = _9;
RET = _10 > _7;
_13 = 71_i8 as f32;
_2.0 = _8 as u16;
_12 = (_9, _9, _9);
_12 = (_1, _9, _9);
_12 = (_1, _1, _9);
_12.1 = _1;
_2.1 = 188393461726606468361248607500205857669_u128 as f64;
_4 = 16854740464121828425_u64 << _2.0;
_12 = (_9, _1, _1);
_11 = !RET;
_3 = _10 & _8;
Goto(bb2)
}
bb2 = {
Call(_16 = dump_var(11_usize, 7_usize, Move(_7), 11_usize, Move(_11), 10_usize, Move(_10), 4_usize, Move(_4)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [usize; 8],mut _2: [usize; 8],mut _3: u16,mut _4: isize,mut _5: bool,mut _6: i128,mut _7: [usize; 8],mut _8: *mut [u128; 1],mut _9: (u16, f64, u16),mut _10: [usize; 8],mut _11: u32,mut _12: u16,mut _13: (i128,),mut _14: [usize; 8]) -> *mut [u128; 1] {
mir! {
type RET = *mut [u128; 1];
let _15: u16;
let _16: isize;
let _17: [i64; 2];
let _18: [i64; 2];
let _19: ([usize; 8], [char; 3]);
let _20: Adt50;
let _21: char;
let _22: *mut bool;
let _23: f64;
let _24: *mut f64;
let _25: char;
let _26: [usize; 8];
let _27: *mut [u128; 1];
let _28: ([usize; 8],);
let _29: isize;
let _30: isize;
let _31: Adt38;
let _32: f32;
let _33: Adt38;
let _34: isize;
let _35: f32;
let _36: u128;
let _37: [u128; 1];
let _38: [i64; 2];
let _39: ([usize; 8],);
let _40: i64;
let _41: Adt44;
let _42: Adt51;
let _43: i128;
let _44: Adt50;
let _45: Adt43;
let _46: *mut i8;
let _47: ();
let _48: ();
{
_13 = (_6,);
_2 = [2897433835931589108_usize,6_usize,1946651689328692540_usize,16900906982744368536_usize,6_usize,5662134750569099564_usize,0_usize,4_usize];
_15 = !_9.2;
_9.1 = (-14333_i16) as f64;
RET = _8;
_9.2 = 46_u8 as u16;
_9.0 = _12 / _12;
_7 = [4_usize,17454066886834773578_usize,18021044796660533882_usize,16916739390566293159_usize,7_usize,11575652561681742421_usize,16240631263974931483_usize,11616284560611291404_usize];
_9.2 = _3 % _3;
_11 = !389379822_u32;
_9.1 = 336458033_i32 as f64;
_19.1 = ['\u{d1040}','\u{f2561}','\u{987e9}'];
_3 = !_9.0;
_12 = 46_u8 as u16;
_6 = _13.0 + _13.0;
_2 = [3_usize,0_usize,6_usize,1_usize,10033913939878041210_usize,2784368527425325231_usize,1_usize,0_usize];
_17 = [7892421629039969011_i64,(-2923147473658946862_i64)];
_14 = _1;
_10 = [3056014295114286902_usize,3_usize,4_usize,13462222916937753036_usize,4_usize,13396886788842008997_usize,9153910926693969442_usize,9194074074467147719_usize];
_11 = !3586978742_u32;
_6 = !_13.0;
_19.0 = _2;
_16 = !_4;
Goto(bb1)
}
bb1 = {
_18 = [7505084874760703860_i64,2137237059356577192_i64];
_12 = _3 * _9.2;
RET = _8;
_11 = !1722070120_u32;
_10 = _7;
_22 = core::ptr::addr_of_mut!(_5);
_9.0 = (-29_i8) as u16;
_7 = [5_usize,1_usize,9142278113839111987_usize,7_usize,6901405306582137561_usize,10329206659242706375_usize,13367201522843241388_usize,6_usize];
_24 = core::ptr::addr_of_mut!(_9.1);
_5 = false;
_7 = [17863581913009948519_usize,2_usize,4_usize,5_usize,1_usize,5_usize,4885774260670002084_usize,6_usize];
_16 = -_4;
_19.1 = ['\u{1020f}','\u{10facb}','\u{898ea}'];
_22 = core::ptr::addr_of_mut!((*_22));
_25 = '\u{6e78e}';
Call(_9.2 = core::intrinsics::bswap(_12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12 = !_3;
_27 = RET;
_21 = _25;
_18 = _17;
_1 = _10;
_3 = _12;
_4 = _25 as isize;
_19.1 = [_21,_25,_21];
_4 = _11 as isize;
_24 = core::ptr::addr_of_mut!((*_24));
_12 = _3 - _9.2;
RET = _27;
_28.0 = [8795042066623313512_usize,1_usize,1_usize,9255349019236303732_usize,17436690324387837171_usize,7_usize,2_usize,7_usize];
_21 = _25;
_23 = (*_24);
Goto(bb3)
}
bb3 = {
_22 = core::ptr::addr_of_mut!((*_22));
_9.0 = !_3;
Goto(bb4)
}
bb4 = {
_30 = -_4;
_22 = core::ptr::addr_of_mut!((*_22));
_18 = [8784764454309538629_i64,4647357839499079211_i64];
RET = _8;
_29 = _16 * _16;
_15 = _12 - _12;
_12 = !_3;
_26 = [5_usize,11516325220378637228_usize,6_usize,6_usize,1_usize,9952120457488017311_usize,1982265073291922086_usize,17704224188360463809_usize];
_11 = 62_u8 as u32;
_24 = core::ptr::addr_of_mut!(_9.1);
_28 = (_1,);
Goto(bb5)
}
bb5 = {
RET = _8;
_18 = [(-815404447954027745_i64),(-7754494394985623408_i64)];
_32 = 92_i8 as f32;
Goto(bb6)
}
bb6 = {
_31.fld0.0 = [7_usize,16038777354774143401_usize,5_usize,2_usize,6_usize,7_usize,3656476389303737939_usize,7_usize];
_33 = _31;
_30 = _29 & _29;
_28 = _33.fld0;
RET = _8;
_14 = [7_usize,4_usize,1_usize,17218526351088659949_usize,0_usize,4_usize,0_usize,6_usize];
_22 = core::ptr::addr_of_mut!(_5);
_30 = _15 as isize;
_9.1 = _11 as f64;
Call(_10 = fn13(_19, _30, _14, _7, _15, _26, _33, _30, _15, _7, _33.fld0.0, _31, _30, _15), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_32 = (-4959825355216022264_i64) as f32;
_5 = true;
_33.fld0.0 = _28.0;
_7 = [4_usize,5_usize,87925665331686535_usize,14490372756953531886_usize,4_usize,3_usize,3_usize,1_usize];
_1 = [1_usize,6_usize,9432167107234804815_usize,6143479197102330247_usize,5_usize,6524951358529428710_usize,6_usize,13844149145996192102_usize];
_19.0 = [13384357095640474302_usize,18089055799597537450_usize,7_usize,4_usize,3_usize,16919682345025380962_usize,16647517331273315753_usize,2_usize];
_11 = 3799656511_u32;
match _11 {
0 => bb3,
1 => bb8,
3799656511 => bb10,
_ => bb9
}
}
bb8 = {
_12 = !_3;
_27 = RET;
_21 = _25;
_18 = _17;
_1 = _10;
_3 = _12;
_4 = _25 as isize;
_19.1 = [_21,_25,_21];
_4 = _11 as isize;
_24 = core::ptr::addr_of_mut!((*_24));
_12 = _3 - _9.2;
RET = _27;
_28.0 = [8795042066623313512_usize,1_usize,1_usize,9255349019236303732_usize,17436690324387837171_usize,7_usize,2_usize,7_usize];
_21 = _25;
_23 = (*_24);
Goto(bb3)
}
bb9 = {
_18 = [7505084874760703860_i64,2137237059356577192_i64];
_12 = _3 * _9.2;
RET = _8;
_11 = !1722070120_u32;
_10 = _7;
_22 = core::ptr::addr_of_mut!(_5);
_9.0 = (-29_i8) as u16;
_7 = [5_usize,1_usize,9142278113839111987_usize,7_usize,6901405306582137561_usize,10329206659242706375_usize,13367201522843241388_usize,6_usize];
_24 = core::ptr::addr_of_mut!(_9.1);
_5 = false;
_7 = [17863581913009948519_usize,2_usize,4_usize,5_usize,1_usize,5_usize,4885774260670002084_usize,6_usize];
_16 = -_4;
_19.1 = ['\u{1020f}','\u{10facb}','\u{898ea}'];
_22 = core::ptr::addr_of_mut!((*_22));
_25 = '\u{6e78e}';
Call(_9.2 = core::intrinsics::bswap(_12), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_27 = RET;
_19.1 = [_25,_21,_25];
_1 = _2;
RET = _27;
_4 = _29 & _30;
Goto(bb11)
}
bb11 = {
_5 = !false;
_24 = core::ptr::addr_of_mut!((*_24));
_6 = !_13.0;
_6 = _13.0;
_8 = RET;
_3 = _32 as u16;
_7 = [2_usize,7_usize,10547049819405505557_usize,6_usize,6_usize,7_usize,9474468765502193773_usize,5579896028306468287_usize];
_3 = !_15;
_31.fld0 = _33.fld0;
_15 = _23 as u16;
_9.0 = !_3;
_4 = _30;
_12 = !_9.0;
_19.0 = [9725282078344901734_usize,13852806289289294569_usize,16148096910058156866_usize,6_usize,14050142167726943388_usize,1371983207189668221_usize,1463736722572587740_usize,14162640847741312725_usize];
_13.0 = 50_i8 as i128;
_24 = core::ptr::addr_of_mut!(_9.1);
_34 = _21 as isize;
_25 = _21;
_18 = _17;
_30 = !_4;
Goto(bb12)
}
bb12 = {
_23 = (-945275199_i32) as f64;
_33.fld0 = _28;
_9 = (_3, _23, _3);
_29 = _30 | _30;
_3 = (-8665881153511615908_i64) as u16;
_4 = _29 ^ _30;
_9.2 = (-1531830283326621763_i64) as u16;
_36 = 1859789476_i32 as u128;
_36 = 9733450176974448817402781081135018934_u128;
_13 = (_6,);
_10 = _31.fld0.0;
_9.0 = _15;
_36 = _5 as u128;
_19.1 = [_25,_25,_21];
_19.0 = _1;
_18 = _17;
_38 = [6735776033433607934_i64,(-4868505991715792933_i64)];
_14 = _26;
_29 = _4;
_3 = !_12;
_15 = !_3;
_17 = [3400913400360243001_i64,(-1272335311869289060_i64)];
_11 = !1476927524_u32;
Goto(bb13)
}
bb13 = {
_34 = _30;
_31 = Adt38 { fld0: _33.fld0 };
_33.fld0.0 = [4_usize,1_usize,6774639663132209925_usize,8145104218336218548_usize,17978581419311918462_usize,13786710751794004352_usize,5_usize,4058003299344636292_usize];
_24 = core::ptr::addr_of_mut!(_9.1);
_10 = [6_usize,5_usize,3931518105321811152_usize,2_usize,7997986543484687017_usize,1_usize,6_usize,18333379775892163053_usize];
_2 = _33.fld0.0;
_17 = _38;
_5 = !true;
_30 = !_4;
_9.2 = _12 << _4;
Goto(bb14)
}
bb14 = {
_39.0 = [0_usize,5452466656327414393_usize,3_usize,6222529112777930029_usize,6_usize,1_usize,15550606292477689876_usize,3_usize];
_39 = (_14,);
_19.1 = [_25,_25,_21];
_23 = (*_24) + (*_24);
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(12_usize, 3_usize, Move(_3), 17_usize, Move(_17), 1_usize, Move(_1), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(12_usize, 28_usize, Move(_28), 10_usize, Move(_10), 30_usize, Move(_30), 39_usize, Move(_39)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(12_usize, 5_usize, Move(_5), 14_usize, Move(_14), 13_usize, Move(_13), 34_usize, Move(_34)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(12_usize, 18_usize, Move(_18), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: ([usize; 8], [char; 3]),mut _2: isize,mut _3: [usize; 8],mut _4: [usize; 8],mut _5: u16,mut _6: [usize; 8],mut _7: Adt38,mut _8: isize,mut _9: u16,mut _10: [usize; 8],mut _11: [usize; 8],mut _12: Adt38,mut _13: isize,mut _14: u16) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _15: i8;
let _16: Adt38;
let _17: Adt39;
let _18: ([usize; 8], [char; 3]);
let _19: f64;
let _20: i32;
let _21: (i64, isize, i8, i32);
let _22: isize;
let _23: i8;
let _24: char;
let _25: (i64, isize, i8, i32);
let _26: u32;
let _27: Adt40;
let _28: (i128,);
let _29: *mut f64;
let _30: Adt50;
let _31: Adt38;
let _32: ([usize; 8], [char; 3]);
let _33: i128;
let _34: isize;
let _35: Adt38;
let _36: isize;
let _37: bool;
let _38: Adt52;
let _39: f32;
let _40: i16;
let _41: usize;
let _42: i32;
let _43: (i128,);
let _44: Adt36;
let _45: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]);
let _46: Adt39;
let _47: Adt38;
let _48: char;
let _49: char;
let _50: ([usize; 8],);
let _51: [usize; 8];
let _52: [usize; 8];
let _53: Adt49;
let _54: ();
let _55: ();
{
_15 = (-2055251024_i32) as i8;
_15 = -84_i8;
_12.fld0 = _7.fld0;
_12 = Adt38 { fld0: _7.fld0 };
_6 = [10241707730029914749_usize,16295229334696901241_usize,7_usize,7_usize,5_usize,6_usize,14749081440827536219_usize,6_usize];
Goto(bb1)
}
bb1 = {
RET = [8385358846314721917_usize,3_usize,5520573308250863172_usize,7897021624974625674_usize,1_usize,2_usize,12187385864318082731_usize,5_usize];
_3 = [10022603757106872423_usize,7_usize,13751301259382204170_usize,7_usize,11563342175391494529_usize,10789533301869261769_usize,13014409304581987813_usize,7_usize];
_12.fld0.0 = [3_usize,6382438214298825705_usize,6761355869092318952_usize,8631235489475272362_usize,4_usize,4_usize,16431110273109171680_usize,4256915614795327397_usize];
_7.fld0.0 = _4;
_10 = [2_usize,3_usize,6_usize,4_usize,8493044479686428379_usize,1674694225104959913_usize,1725854653978981240_usize,4_usize];
_14 = _9;
_16.fld0.0 = _12.fld0.0;
_16.fld0.0 = RET;
_16 = Adt38 { fld0: _7.fld0 };
_1.1 = ['\u{9c0ef}','\u{97cd6}','\u{11f92}'];
_16.fld0.0 = [3_usize,1_usize,9952464268142323187_usize,6843928560244113215_usize,1_usize,0_usize,6_usize,2_usize];
_11 = [5_usize,5_usize,6_usize,4_usize,0_usize,3739804520486641318_usize,3_usize,6_usize];
_16.fld0 = (_12.fld0.0,);
RET = [3_usize,4_usize,7_usize,16171702110103241645_usize,5_usize,11057782802840449633_usize,6_usize,12891909220744623816_usize];
_11 = [12658031166387902964_usize,3172423323329953984_usize,14266188816068867863_usize,7096387515430727947_usize,281577325180206269_usize,10095722925320734825_usize,2_usize,1_usize];
_6 = _3;
_7.fld0 = (_6,);
_7.fld0.0 = _12.fld0.0;
_3 = _7.fld0.0;
Goto(bb2)
}
bb2 = {
_5 = _14 << _9;
_12.fld0 = _16.fld0;
_18.0 = _7.fld0.0;
_7.fld0.0 = [10128396790194597602_usize,603610913605001236_usize,6_usize,14198579682700771646_usize,1_usize,14358267539855287468_usize,7338245759765410574_usize,13227586516472212603_usize];
RET = [6_usize,5_usize,17978410212549823960_usize,12381335545801920861_usize,15953310813307849952_usize,12734208912535175512_usize,12885240851304680813_usize,5384159899323232902_usize];
_18 = (_16.fld0.0, _1.1);
RET = [6991459912063643728_usize,4_usize,7229298047985642017_usize,1369982855010442895_usize,2_usize,13388131068591797077_usize,6_usize,12786789903393955569_usize];
RET = [2_usize,5_usize,1592774100168388071_usize,12424788351209598750_usize,2_usize,12878395921033765002_usize,1_usize,18220806240046107846_usize];
_19 = (-20108_i16) as f64;
_1 = (_18.0, _18.1);
_2 = true as isize;
_14 = !_9;
_16 = _7;
RET = _1.0;
_16.fld0 = (_6,);
_7.fld0 = (_6,);
RET = _1.0;
_11 = _4;
RET = [3_usize,18416386534921565671_usize,18040512458341433713_usize,0_usize,3_usize,12766848279554175687_usize,6496974408030689277_usize,10549878809131357504_usize];
_11 = _3;
RET = _16.fld0.0;
_2 = _13 * _13;
_12.fld0 = (_18.0,);
_21.2 = !_15;
_20 = _21.2 as i32;
_11 = [4_usize,10708559290517973273_usize,9712252582485343391_usize,6321522740373593505_usize,15474780741765374929_usize,3344221385707052574_usize,15653647360634278151_usize,18213342831027738887_usize];
Call(_21 = fn14(_16, _18.0, _14, _5, _2, _18.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7.fld0.0 = _12.fld0.0;
_6 = [4_usize,9961320686391565335_usize,0_usize,13214182062055506115_usize,5_usize,12846833590131400581_usize,7_usize,15693157615074467950_usize];
_19 = _21.0 as f64;
_12 = Adt38 { fld0: _7.fld0 };
_1.1 = _18.1;
Goto(bb4)
}
bb4 = {
_20 = _21.3;
_21.2 = 17980643236241406382_usize as i8;
_22 = _2;
_1.1 = ['\u{3e3a3}','\u{2733b}','\u{52979}'];
Goto(bb5)
}
bb5 = {
_21.3 = _20;
_2 = 13908097542006481481_u64 as isize;
_11 = [0_usize,7_usize,11584264752656800520_usize,14407253077003234939_usize,2_usize,3_usize,6816775883622659624_usize,13772330377487873005_usize];
_25.1 = _15 as isize;
_21.1 = _22 >> _8;
_16.fld0.0 = _7.fld0.0;
Goto(bb6)
}
bb6 = {
_3 = [14224169784829575044_usize,0_usize,253161631443716462_usize,1749066296157303663_usize,7_usize,5282038307512782389_usize,6090586652023216805_usize,2_usize];
_2 = _22;
_25.0 = -_21.0;
_25.1 = _2;
_7 = _12;
_25 = (_21.0, _2, _15, _21.3);
_12 = _16;
_25 = (_21.0, _21.1, _15, _20);
_6 = [1011642660047851545_usize,1_usize,715481478599368149_usize,13913414243590720127_usize,12166972805020027742_usize,7_usize,7_usize,4532032437611707006_usize];
_16.fld0.0 = [5_usize,15541688595659469323_usize,3_usize,7553401326914408376_usize,15427919790712823725_usize,7_usize,6_usize,5_usize];
_1.0 = [5044957634864785633_usize,0_usize,10388871095963963299_usize,12090486134918922555_usize,6_usize,6_usize,16505509985677282620_usize,7_usize];
_16.fld0.0 = _10;
_12.fld0.0 = [8162018172760092797_usize,12025628593141925820_usize,1860131714050107087_usize,4_usize,5189623324177845273_usize,4813277022120015473_usize,7_usize,3_usize];
_15 = -_21.2;
_2 = _22;
_11 = [5780126868738197396_usize,5_usize,2_usize,6_usize,9542784214982370359_usize,6_usize,7_usize,1468639992652307673_usize];
Goto(bb7)
}
bb7 = {
_8 = _21.1 | _21.1;
_29 = core::ptr::addr_of_mut!(_19);
_21.1 = _25.1 | _2;
_24 = '\u{32078}';
_25.1 = _21.1 >> _8;
_26 = !1594002968_u32;
_14 = 37467251843686297145864859146096519567_u128 as u16;
_5 = !_9;
_6 = [7_usize,1_usize,4_usize,8662240649380255288_usize,1_usize,0_usize,10677003959655036128_usize,9310076884204135265_usize];
_16 = Adt38 { fld0: _7.fld0 };
_1 = (_10, _18.1);
_12 = Adt38 { fld0: _16.fld0 };
_7.fld0.0 = _11;
_18 = _1;
_10 = [7_usize,7_usize,9706437354924458610_usize,13447351398413747465_usize,3_usize,0_usize,5205276092543523250_usize,9908466893328965749_usize];
_1.0 = [4_usize,10095050598298037867_usize,4_usize,9641444267832164757_usize,8161288361802988163_usize,433226976394501012_usize,5812821920520032206_usize,11220044929668374667_usize];
_18.1 = _1.1;
_1 = _18;
Goto(bb8)
}
bb8 = {
_21.3 = -_25.3;
_25.3 = _21.3 - _21.3;
_4 = [6_usize,13887562700290769726_usize,5806157747404700913_usize,9706345093890803973_usize,7_usize,4_usize,1_usize,1_usize];
_23 = 872014187566578627_u64 as i8;
_16.fld0.0 = [7_usize,2_usize,17244459845329313815_usize,10577279217904643498_usize,7390601865721803929_usize,14117657420926925091_usize,2_usize,10364755188196984666_usize];
_16.fld0.0 = [16871014207394400864_usize,6_usize,4958467868275782940_usize,6_usize,0_usize,5957711381637140578_usize,6_usize,2608809853639454662_usize];
Goto(bb9)
}
bb9 = {
_9 = _5 | _5;
_9 = !_5;
_24 = '\u{ed89f}';
_32.0 = _16.fld0.0;
_16 = Adt38 { fld0: _7.fld0 };
_7.fld0.0 = [9584221755177576386_usize,5_usize,7330407597855076931_usize,2755658141509238319_usize,5_usize,14664298592717906868_usize,1_usize,2_usize];
_26 = 3508367587_u32;
_25.2 = _15 + _21.2;
_18.1 = [_24,_24,_24];
_18.0 = RET;
_4 = [12576891897314058031_usize,7_usize,12258492664862412620_usize,11552162379101530800_usize,5447627473296172968_usize,3_usize,7_usize,18409422175409009469_usize];
_21.3 = _25.3;
_32.0 = [5_usize,1_usize,10797401587429894150_usize,6_usize,10514905351429660389_usize,8418673329541636632_usize,5_usize,3_usize];
_12.fld0.0 = [10771880386323353642_usize,14806864437477602702_usize,3_usize,13995700336726119367_usize,6_usize,13774741973587876006_usize,4_usize,3_usize];
_29 = core::ptr::addr_of_mut!(_19);
_33 = 57691694172140934616616775936041527630_i128;
_11 = _6;
_32.1 = _18.1;
_7.fld0.0 = _12.fld0.0;
_26 = 1109013705_u32 & 1430152796_u32;
_18 = _32;
_12 = _16;
_28 = (_33,);
_18 = (_7.fld0.0, _1.1);
_23 = (*_29) as i8;
_2 = 30772_i16 as isize;
_24 = '\u{1a4cd}';
match _33 {
57691694172140934616616775936041527630 => bb11,
_ => bb10
}
}
bb10 = {
RET = [8385358846314721917_usize,3_usize,5520573308250863172_usize,7897021624974625674_usize,1_usize,2_usize,12187385864318082731_usize,5_usize];
_3 = [10022603757106872423_usize,7_usize,13751301259382204170_usize,7_usize,11563342175391494529_usize,10789533301869261769_usize,13014409304581987813_usize,7_usize];
_12.fld0.0 = [3_usize,6382438214298825705_usize,6761355869092318952_usize,8631235489475272362_usize,4_usize,4_usize,16431110273109171680_usize,4256915614795327397_usize];
_7.fld0.0 = _4;
_10 = [2_usize,3_usize,6_usize,4_usize,8493044479686428379_usize,1674694225104959913_usize,1725854653978981240_usize,4_usize];
_14 = _9;
_16.fld0.0 = _12.fld0.0;
_16.fld0.0 = RET;
_16 = Adt38 { fld0: _7.fld0 };
_1.1 = ['\u{9c0ef}','\u{97cd6}','\u{11f92}'];
_16.fld0.0 = [3_usize,1_usize,9952464268142323187_usize,6843928560244113215_usize,1_usize,0_usize,6_usize,2_usize];
_11 = [5_usize,5_usize,6_usize,4_usize,0_usize,3739804520486641318_usize,3_usize,6_usize];
_16.fld0 = (_12.fld0.0,);
RET = [3_usize,4_usize,7_usize,16171702110103241645_usize,5_usize,11057782802840449633_usize,6_usize,12891909220744623816_usize];
_11 = [12658031166387902964_usize,3172423323329953984_usize,14266188816068867863_usize,7096387515430727947_usize,281577325180206269_usize,10095722925320734825_usize,2_usize,1_usize];
_6 = _3;
_7.fld0 = (_6,);
_7.fld0.0 = _12.fld0.0;
_3 = _7.fld0.0;
Goto(bb2)
}
bb11 = {
_31 = _12;
_25.3 = _21.3 - _21.3;
_18 = (_6, _32.1);
_1.0 = [6_usize,6_usize,6_usize,1_usize,7_usize,2_usize,3_usize,2410453746695935149_usize];
_36 = -_25.1;
_16.fld0.0 = _4;
_14 = !_5;
_14 = _5 - _5;
_16.fld0.0 = [16765661490001868693_usize,2232472252672997120_usize,3790294490498932986_usize,2_usize,3_usize,18081672094782782047_usize,5_usize,5_usize];
_16.fld0.0 = [15737598996593821683_usize,3_usize,1_usize,1_usize,5_usize,2544336426590189036_usize,12210080788866478759_usize,1_usize];
_35 = Adt38 { fld0: _31.fld0 };
_12.fld0 = (_7.fld0.0,);
_34 = !_36;
_18.1 = [_24,_24,_24];
_15 = -_21.2;
_1.0 = [11990843744374549215_usize,7694682191696537970_usize,2_usize,1918457113478675845_usize,10731489639662545747_usize,12745752059061889416_usize,4_usize,5_usize];
_39 = _34 as f32;
_33 = (-15698_i16) as i128;
_35.fld0 = (_18.0,);
_31.fld0.0 = _16.fld0.0;
_20 = _25.3 ^ _21.3;
_38.fld6 = core::ptr::addr_of_mut!(_19);
Goto(bb12)
}
bb12 = {
_25.1 = _26 as isize;
_19 = _20 as f64;
_40 = 23328_i16 * 32218_i16;
_25.2 = _23 + _23;
_21.0 = _19 as i64;
RET = _12.fld0.0;
_22 = _8;
_38.fld3 = !204_u8;
_21.3 = _40 as i32;
_41 = 3515367941393287205_usize >> _21.1;
_26 = !364687009_u32;
_31 = Adt38 { fld0: _35.fld0 };
_6 = _4;
_43 = (_28.0,);
_8 = _21.1;
_38.fld0 = !true;
_2 = _21.1 >> _8;
_12 = Adt38 { fld0: _31.fld0 };
_38.fld6 = _29;
_43.0 = _28.0 + _28.0;
_38.fld6 = _29;
_25.1 = _40 as isize;
_1.1 = _18.1;
Call(_41 = core::intrinsics::transmute(_36), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_42 = _20;
_11 = [_41,_41,_41,_41,_41,_41,_41,_41];
_35.fld0 = _12.fld0;
_18.0 = _11;
_16 = _7;
_19 = _43.0 as f64;
_31.fld0 = _7.fld0;
_1.0 = [_41,_41,_41,_41,_41,_41,_41,_41];
_25.0 = 11649201467460517709_u64 as i64;
_4 = [_41,_41,_41,_41,_41,_41,_41,_41];
_12.fld0.0 = [_41,_41,_41,_41,_41,_41,_41,_41];
_18.0 = [_41,_41,_41,_41,_41,_41,_41,_41];
_9 = _25.2 as u16;
_9 = !_14;
_5 = _9;
_43.0 = !_28.0;
_1.0 = _12.fld0.0;
_41 = _9 as usize;
_28.0 = -_33;
_25.3 = -_20;
_38.fld2 = core::ptr::addr_of!(_32.0);
_21.2 = _15;
_4 = _11;
_6 = _12.fld0.0;
Goto(bb14)
}
bb14 = {
_16.fld0.0 = [_41,_41,_41,_41,_41,_41,_41,_41];
_5 = _14 ^ _9;
_26 = _40 as u32;
_47.fld0 = (_4,);
_37 = _5 >= _5;
_37 = _36 <= _36;
_23 = !_25.2;
_32 = (_12.fld0.0, _1.1);
_12.fld0 = (_11,);
_28.0 = -_33;
_12.fld0.0 = [_41,_41,_41,_41,_41,_41,_41,_41];
_35 = Adt38 { fld0: _12.fld0 };
_39 = _26 as f32;
_32 = _18;
RET = _35.fld0.0;
_48 = _24;
_21.3 = !_20;
_24 = _48;
_13 = _26 as isize;
_50 = (_12.fld0.0,);
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(13_usize, 25_usize, Move(_25), 48_usize, Move(_48), 21_usize, Move(_21), 40_usize, Move(_40)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(13_usize, 18_usize, Move(_18), 20_usize, Move(_20), 2_usize, Move(_2), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(13_usize, 10_usize, Move(_10), 11_usize, Move(_11), 15_usize, Move(_15), 36_usize, Move(_36)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(13_usize, 42_usize, Move(_42), 9_usize, Move(_9), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: Adt38,mut _2: [usize; 8],mut _3: u16,mut _4: u16,mut _5: isize,mut _6: [char; 3]) -> (i64, isize, i8, i32) {
mir! {
type RET = (i64, isize, i8, i32);
let _7: Adt45;
let _8: char;
let _9: bool;
let _10: f64;
let _11: Adt39;
let _12: bool;
let _13: u128;
let _14: Adt38;
let _15: u64;
let _16: (i64, isize, i8, i32);
let _17: f32;
let _18: i16;
let _19: Adt37;
let _20: Adt45;
let _21: char;
let _22: f32;
let _23: f64;
let _24: [i128; 1];
let _25: isize;
let _26: *mut [u128; 1];
let _27: u64;
let _28: [i64; 2];
let _29: ([usize; 8],);
let _30: ([usize; 8],);
let _31: [i64; 2];
let _32: ([usize; 8],);
let _33: u8;
let _34: char;
let _35: isize;
let _36: *mut f64;
let _37: f64;
let _38: [char; 3];
let _39: *mut i8;
let _40: isize;
let _41: ();
let _42: ();
{
RET.2 = -5_i8;
_5 = 9223372036854775807_isize;
RET = (9115603367924789441_i64, _5, 53_i8, (-132829729_i32));
_1.fld0 = (_2,);
_1.fld0 = (_2,);
RET.3 = RET.2 as i32;
_2 = [12358773542800016350_usize,2464322697794419037_usize,1_usize,7_usize,45187420741678089_usize,12793498731544826677_usize,5_usize,3_usize];
_5 = -RET.1;
RET.2 = !(-69_i8);
_6 = ['\u{e509}','\u{f97d}','\u{ccf1e}'];
RET.1 = -_5;
_1.fld0.0 = _2;
_5 = '\u{edafe}' as isize;
_9 = !false;
_8 = '\u{2cba2}';
_3 = _4;
_5 = 172_u8 as isize;
RET.1 = _5 & _5;
_1.fld0.0 = _2;
_8 = '\u{103d2a}';
Call(_12 = fn15(_3, _3, _3, _3, RET.0, _1.fld0, RET, RET.1, _3, _3, _2, _4, _4, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [1474775812756833736_usize,1_usize,5_usize,10030745603801454499_usize,3497910593498318086_usize,2666319811864297215_usize,6657779520753940265_usize,5_usize];
_13 = !128423060346574130832521357207923403170_u128;
_15 = !7279738187353389526_u64;
_8 = '\u{82eac}';
RET.3 = (-36525908432979976658121952069890928051_i128) as i32;
RET = (5603717653299278506_i64, _5, (-92_i8), (-48349641_i32));
_14.fld0 = _1.fld0;
_10 = 4_usize as f64;
RET.0 = -(-296669133828205834_i64);
RET = ((-4062742364130194734_i64), _5, (-2_i8), 1578203146_i32);
_1 = Adt38 { fld0: _14.fld0 };
_14 = _1;
_1.fld0 = (_14.fld0.0,);
_16 = (RET.0, RET.1, RET.2, RET.3);
_1.fld0 = (_2,);
_16.2 = -RET.2;
_3 = _4;
Goto(bb2)
}
bb2 = {
_2 = _1.fld0.0;
_1 = Adt38 { fld0: _14.fld0 };
RET.0 = _16.0;
RET.2 = (-19_i16) as i8;
_3 = !_4;
_4 = !_3;
_13 = !123512311265317991180540690555991877849_u128;
_10 = _15 as f64;
_17 = _16.0 as f32;
_14.fld0.0 = [5_usize,4939761909498344702_usize,5_usize,1_usize,5_usize,2224085514179257584_usize,12176733540474257776_usize,6_usize];
_17 = _16.3 as f32;
_16.3 = 2_usize as i32;
_15 = !13023336834023077062_u64;
RET.1 = _16.1 * _16.1;
_16.1 = RET.1 + RET.1;
_16.1 = -_5;
RET.3 = !_16.3;
RET.2 = _16.2 << _13;
_16 = RET;
RET.2 = !_16.2;
match RET.0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463459311865067638016722 => bb9,
_ => bb8
}
}
bb3 = {
_2 = [1474775812756833736_usize,1_usize,5_usize,10030745603801454499_usize,3497910593498318086_usize,2666319811864297215_usize,6657779520753940265_usize,5_usize];
_13 = !128423060346574130832521357207923403170_u128;
_15 = !7279738187353389526_u64;
_8 = '\u{82eac}';
RET.3 = (-36525908432979976658121952069890928051_i128) as i32;
RET = (5603717653299278506_i64, _5, (-92_i8), (-48349641_i32));
_14.fld0 = _1.fld0;
_10 = 4_usize as f64;
RET.0 = -(-296669133828205834_i64);
RET = ((-4062742364130194734_i64), _5, (-2_i8), 1578203146_i32);
_1 = Adt38 { fld0: _14.fld0 };
_14 = _1;
_1.fld0 = (_14.fld0.0,);
_16 = (RET.0, RET.1, RET.2, RET.3);
_1.fld0 = (_2,);
_16.2 = -RET.2;
_3 = _4;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14.fld0 = (_1.fld0.0,);
_18 = (-32700_i16);
_3 = _4;
RET = (_16.0, _16.1, _16.2, _16.3);
_13 = 130969412813442958483711390308401111416_u128 - 94672982243651401949924985782810724192_u128;
_1.fld0.0 = [11742619577147200316_usize,5_usize,3_usize,480602672012728025_usize,4423070853653746357_usize,14101310619157169088_usize,0_usize,2705116018436095639_usize];
_1.fld0.0 = [7_usize,5710924010833729227_usize,7_usize,2879609718024774480_usize,2_usize,9842952460911876236_usize,10295763592283404197_usize,869483068851328918_usize];
_16.1 = -_5;
_13 = _3 as u128;
_14.fld0.0 = _1.fld0.0;
_1.fld0 = _14.fld0;
_5 = !RET.1;
_14.fld0.0 = [15363688717658872560_usize,1_usize,3606364347917150746_usize,4_usize,3241347467192824293_usize,11579077794960991046_usize,3_usize,15664711504045967098_usize];
_8 = '\u{75754}';
_1 = Adt38 { fld0: _14.fld0 };
RET.2 = -_16.2;
_16 = RET;
RET.2 = _16.2;
_14.fld0.0 = [5_usize,1668722779668658799_usize,3_usize,18397860833005034277_usize,12130332881834233395_usize,12083158252243053719_usize,5634711425476356808_usize,5_usize];
_21 = _8;
_1.fld0 = (_2,);
_18 = !(-31662_i16);
Goto(bb10)
}
bb10 = {
_1.fld0 = (_14.fld0.0,);
_22 = _16.2 as f32;
RET.1 = _16.1 >> _13;
_1.fld0.0 = [13209710338348258628_usize,7_usize,14510840352303538868_usize,5_usize,11105405760170272301_usize,3_usize,5_usize,7_usize];
_22 = RET.0 as f32;
RET = _16;
_15 = _18 as u64;
_24 = [81232145340277788100012464862634995762_i128];
_5 = -_16.1;
RET.1 = _5 | _5;
_24 = [(-67446049166384453644690205614446709361_i128)];
_16.2 = -RET.2;
_1.fld0 = (_2,);
_24 = [(-20869198946364574449883747954468894446_i128)];
RET = (_16.0, _5, _16.2, _16.3);
RET.0 = _16.0;
Goto(bb11)
}
bb11 = {
RET.0 = -_16.0;
_24 = [106712035240039905705904752911214846410_i128];
_24 = [94126150179144139844657716750060416442_i128];
_4 = _3 + _3;
_21 = _8;
_6 = [_8,_21,_21];
_16.0 = _10 as i64;
_2 = _1.fld0.0;
_5 = _10 as isize;
_15 = !9734117165450253269_u64;
_12 = !_9;
RET.3 = _17 as i32;
_5 = _16.1;
RET.0 = _16.0 * _16.0;
_23 = 186_u8 as f64;
_16.2 = -RET.2;
RET.1 = 39331466190858061826561910484487268339_i128 as isize;
_15 = 748012854_u32 as u64;
RET.3 = _16.3;
_29.0 = _2;
Goto(bb12)
}
bb12 = {
_16.2 = -RET.2;
_1 = Adt38 { fld0: _29 };
_16.1 = _5;
_10 = _23 - _23;
_1 = _14;
_4 = 138768176732459284605649055184986268056_i128 as u16;
_14 = Adt38 { fld0: _1.fld0 };
_25 = !_16.1;
_2 = [5_usize,15624316516547086538_usize,7409371106417526314_usize,5695819926139014053_usize,3_usize,12865419299268319361_usize,6_usize,6_usize];
_17 = _22;
_23 = _10 - _10;
_28 = [_16.0,_16.0];
_4 = _3 - _3;
_16.0 = RET.0 * RET.0;
RET = _16;
_30 = (_29.0,);
Goto(bb13)
}
bb13 = {
_14.fld0 = (_2,);
_28 = [RET.0,_16.0];
RET.3 = !_16.3;
_32.0 = [3_usize,5_usize,0_usize,4_usize,8245929758773745_usize,15022145854839650456_usize,2270257031487217041_usize,7_usize];
_28 = [RET.0,RET.0];
_29 = (_30.0,);
_27 = _15;
_16 = RET;
RET.2 = _16.2 & _16.2;
RET.1 = _25;
RET = (_16.0, _25, _16.2, _16.3);
RET.1 = !_16.1;
_32.0 = _14.fld0.0;
Goto(bb14)
}
bb14 = {
_21 = _8;
RET.2 = _16.2 + _16.2;
_29.0 = [6_usize,3_usize,3_usize,0_usize,2746248582651913520_usize,2_usize,7_usize,9479825136143142567_usize];
_30.0 = _32.0;
_30.0 = [11506618151103061838_usize,7_usize,719189877079903735_usize,6_usize,7369703370131415994_usize,16618833902969853963_usize,17638425349857204194_usize,8753891106760290656_usize];
_1 = _14;
_3 = _4 * _4;
_5 = !_16.1;
_3 = _4;
_36 = core::ptr::addr_of_mut!(_23);
_5 = _25;
RET.1 = _25;
_30.0 = [10357851365554650570_usize,7_usize,911031709196419742_usize,4413210285750571680_usize,17937258390199697927_usize,8789020169613487903_usize,7_usize,1376999456780441502_usize];
_10 = -_23;
_30.0 = [4444418078154917312_usize,6963867079800455727_usize,0_usize,4_usize,10995359391349904118_usize,13116263822788368234_usize,7_usize,470561817634776237_usize];
_9 = !_12;
RET.1 = _5 - _16.1;
_3 = _4 << _4;
_9 = _13 <= _13;
_12 = _9;
RET.3 = 3278869157506890286_usize as i32;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(14_usize, 21_usize, Move(_21), 5_usize, Move(_5), 29_usize, Move(_29), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(14_usize, 6_usize, Move(_6), 3_usize, Move(_3), 27_usize, Move(_27), 30_usize, Move(_30)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(14_usize, 13_usize, Move(_13), 15_usize, Move(_15), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: u16,mut _2: u16,mut _3: u16,mut _4: u16,mut _5: i64,mut _6: ([usize; 8],),mut _7: (i64, isize, i8, i32),mut _8: isize,mut _9: u16,mut _10: u16,mut _11: [usize; 8],mut _12: u16,mut _13: u16,mut _14: (i64, isize, i8, i32)) -> bool {
mir! {
type RET = bool;
let _15: [i64; 2];
let _16: ([usize; 8], [char; 3]);
let _17: isize;
let _18: Adt46;
let _19: i128;
let _20: i8;
let _21: i16;
let _22: (u16, f64, u16);
let _23: ([usize; 8],);
let _24: *mut bool;
let _25: isize;
let _26: [i64; 2];
let _27: [u128; 1];
let _28: ();
let _29: ();
{
_4 = !_1;
_7.1 = _14.1 << _10;
RET = !true;
_15 = [_14.0,_14.0];
RET = false;
_11 = [6468002069786504342_usize,3_usize,0_usize,5_usize,6443446214913163349_usize,0_usize,13971441681800727588_usize,7_usize];
_6.0 = [7456209676140193975_usize,11317392248879428610_usize,6128190574725294468_usize,17220048209186124826_usize,4_usize,6_usize,6_usize,1412371392852028218_usize];
_14.0 = _5 | _5;
_8 = 15135184159552452200_u64 as isize;
_7.1 = !_14.1;
RET = true;
_16.0 = [16052712586437275464_usize,2_usize,2925486483160364114_usize,4_usize,7930423511876279603_usize,0_usize,4_usize,2599369096845340506_usize];
_2 = _4 << _3;
_14.2 = 91408513075999728692858923565987794150_u128 as i8;
_4 = _3 ^ _10;
_8 = _14.1 & _14.1;
_19 = 242305584_u32 as i128;
_6.0 = _16.0;
_4 = _14.2 as u16;
_11 = [5_usize,7103981333936980512_usize,16371292117912309777_usize,9140702874596566589_usize,5_usize,4_usize,1_usize,1189983135130545028_usize];
_7 = (_5, _14.1, _14.2, _14.3);
_16.0 = [110479665186176910_usize,18238829880564522996_usize,2961503981360096768_usize,6195028097111803061_usize,0_usize,2_usize,5070912551743569970_usize,6_usize];
Goto(bb1)
}
bb1 = {
RET = !true;
_13 = !_10;
_11 = [0_usize,15086084069743814014_usize,1_usize,14552187660475005857_usize,13063117243725289002_usize,4_usize,16561884492663682836_usize,7299862591061053367_usize];
_7 = _14;
_15 = [_14.0,_7.0];
_7.1 = _8;
match _5 {
9115603367924789441 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_3 = _12;
_2 = _14.0 as u16;
_17 = _8;
_20 = 246251668240977681449529107020240624535_u128 as i8;
_7.0 = _14.0 + _5;
_17 = !_8;
_22.0 = _13 << _7.0;
match _5 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
9115603367924789441 => bb10,
_ => bb9
}
}
bb4 = {
Return()
}
bb5 = {
RET = !true;
_13 = !_10;
_11 = [0_usize,15086084069743814014_usize,1_usize,14552187660475005857_usize,13063117243725289002_usize,4_usize,16561884492663682836_usize,7299862591061053367_usize];
_7 = _14;
_15 = [_14.0,_7.0];
_7.1 = _8;
match _5 {
9115603367924789441 => bb3,
_ => bb2
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_15 = [_14.0,_14.0];
RET = false;
Goto(bb11)
}
bb11 = {
_10 = !_22.0;
_13 = _19 as u16;
_13 = _22.0;
_22.2 = _19 as u16;
RET = true;
_21 = 32456_i16 * (-23073_i16);
_22.1 = _7.0 as f64;
_7.0 = _17 as i64;
_6.0 = [1_usize,0_usize,0_usize,588413448534376057_usize,6_usize,4_usize,2828098477159633675_usize,0_usize];
_15 = [_5,_14.0];
_19 = 118791843234137804922395205746059775175_i128 >> _3;
_6 = (_11,);
_7.2 = _14.2;
_23 = (_16.0,);
_14.0 = _7.0;
_6.0 = [1_usize,4124940649721885550_usize,6889077559628000763_usize,13610513222279768939_usize,4244072576984967664_usize,3_usize,4_usize,6_usize];
_23.0 = [7_usize,12066919030342449159_usize,7_usize,17523625685577510155_usize,957681533076966829_usize,2_usize,7_usize,10893865247150423051_usize];
_23 = (_11,);
_19 = -167658334260969460299958199448124073998_i128;
_7.1 = _14.1;
match _5 {
0 => bb12,
1 => bb13,
2 => bb14,
9115603367924789441 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
RET = !true;
_13 = !_10;
_11 = [0_usize,15086084069743814014_usize,1_usize,14552187660475005857_usize,13063117243725289002_usize,4_usize,16561884492663682836_usize,7299862591061053367_usize];
_7 = _14;
_15 = [_14.0,_7.0];
_7.1 = _8;
match _5 {
9115603367924789441 => bb3,
_ => bb2
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_25 = !_17;
_13 = _12;
_16.1 = ['\u{cae30}','\u{8226b}','\u{76039}'];
_14.3 = !_7.3;
_4 = _22.0;
_15 = [_7.0,_7.0];
_2 = !_13;
_16.1 = ['\u{3d5ba}','\u{94f5f}','\u{a067}'];
_13 = _1 >> _3;
_9 = _2;
_21 = -(-12264_i16);
_22.1 = _7.1 as f64;
_22.0 = _2 >> _25;
_23 = _6;
_13 = _22.1 as u16;
_6 = (_23.0,);
_13 = _4;
Goto(bb17)
}
bb17 = {
Call(_28 = dump_var(15_usize, 9_usize, Move(_9), 3_usize, Move(_3), 12_usize, Move(_12), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_28 = dump_var(15_usize, 20_usize, Move(_20), 19_usize, Move(_19), 13_usize, Move(_13), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_28 = dump_var(15_usize, 21_usize, Move(_21), 8_usize, Move(_8), 23_usize, Move(_23), 29_usize, _29), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: bool,mut _2: i16,mut _3: usize,mut _4: isize,mut _5: bool,mut _6: ([usize; 8],),mut _7: f64) -> bool {
mir! {
type RET = bool;
let _8: ([usize; 8], [char; 3]);
let _9: isize;
let _10: Adt51;
let _11: [i64; 3];
let _12: [i128; 1];
let _13: [i128; 1];
let _14: ();
let _15: ();
{
_1 = !_5;
_5 = _3 <= _3;
RET = _1 == _1;
_1 = !_5;
_4 = 9223372036854775807_isize - 38_isize;
RET = _2 != _2;
RET = _3 <= _3;
_8.1 = ['\u{f49e7}','\u{3138b}','\u{4763c}'];
_1 = _3 < _3;
_9 = -_4;
_7 = 130930348945855552344193227186496439764_i128 as f64;
_6.0 = [_3,_3,_3,_3,_3,_3,_3,_3];
_9 = _4 ^ _4;
_3 = 179_u8 as usize;
_8.0 = [_3,_3,_3,_3,_3,_3,_3,_3];
_1 = _5 & RET;
RET = _1;
_3 = 18322522988790206035_usize + 6_usize;
_11 = [2306124859261659345_i64,520040912039497059_i64,(-8671103604445919641_i64)];
_7 = 29641045509894023213190650811858584336_i128 as f64;
_3 = !17410681980117553340_usize;
_12 = [(-162812553320175472963312728621870680311_i128)];
_5 = !RET;
_13 = [(-152268941693030598319455783661971633737_i128)];
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(16_usize, 1_usize, Move(_1), 9_usize, Move(_9), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_14 = dump_var(16_usize, 11_usize, Move(_11), 15_usize, _15, 15_usize, _15, 15_usize, _15), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(212_u8), std::hint::black_box(7_usize), std::hint::black_box(1692751117_u32));
                
            }
#[derive(Debug)]
pub enum Adt36 {
Variant0{
fld0: bool,
fld1: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),

},
Variant1{
fld0: bool,
fld1: u128,
fld2: [u128; 1],
fld3: *mut bool,
fld4: i16,
fld5: [usize; 8],
fld6: *const u16,

},
Variant2{
fld0: (u16, f64, u16),
fld1: *mut [u128; 1],
fld2: u32,
fld3: ([usize; 8], [char; 3]),
fld4: [u128; 1],
fld5: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld6: i64,
fld7: f64,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt37 {
Variant0{
fld0: *mut [u128; 1],
fld1: char,
fld2: f64,
fld3: (u16, f64, u16),
fld4: i16,
fld5: [i64; 3],

},
Variant1{
fld0: (i64, isize, i8, i32),
fld1: *mut bool,
fld2: isize,
fld3: *const u16,
fld4: [i64; 3],
fld5: f32,

},
Variant2{
fld0: *const u16,
fld1: *mut [u128; 1],
fld2: f64,
fld3: i8,
fld4: [i64; 2],

},
Variant3{
fld0: bool,
fld1: [char; 3],
fld2: u128,
fld3: *const u16,
fld4: i64,
fld5: (i128,),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt38 {
fld0: ([usize; 8],),
}
#[derive(Debug,Copy,Clone)]
pub enum Adt39 {
Variant0{
fld0: u32,
fld1: u128,
fld2: [i128; 1],
fld3: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld4: u16,

},
Variant1{
fld0: (u16, f64, u16),
fld1: [char; 3],
fld2: *mut bool,
fld3: u32,
fld4: usize,
fld5: u128,
fld6: i64,
fld7: i128,

},
Variant2{
fld0: u64,
fld1: *const u16,
fld2: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt40 {
Variant0{
fld0: *mut [u128; 1],

},
Variant1{
fld0: *const [usize; 8],
fld1: char,
fld2: isize,
fld3: u8,
fld4: [usize; 8],

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: *mut bool,
fld1: u128,
fld2: Adt36,
fld3: (i128,),
fld4: [usize; 8],

},
Variant1{
fld0: [usize; 8],

},
Variant2{
fld0: bool,
fld1: (u16, f64, u16),
fld2: *mut i8,
fld3: (i64, isize, i8, i32),
fld4: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld5: i32,
fld6: i64,
fld7: Adt37,

},
Variant3{
fld0: [u128; 1],
fld1: *mut i8,
fld2: [char; 3],
fld3: i8,
fld4: [i64; 3],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: *mut bool,
fld1: *mut [u128; 1],
fld2: u64,
fld3: f32,
fld4: Adt38,
fld5: u16,

},
Variant1{
fld0: Adt39,
fld1: *mut i8,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld1: u8,
fld2: *const u16,
fld3: i8,

},
Variant1{
fld0: bool,
fld1: [usize; 8],
fld2: Adt42,
fld3: ([usize; 8], [char; 3]),
fld4: u64,
fld5: *const [usize; 8],
fld6: Adt38,
fld7: *mut bool,

},
Variant2{
fld0: Adt41,
fld1: f32,
fld2: isize,
fld3: *mut [u128; 1],
fld4: *mut bool,
fld5: *mut f64,
fld6: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld7: (i64, isize, i8, i32),

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: [u128; 1],
fld1: Adt40,
fld2: i64,
fld3: u32,
fld4: i16,
fld5: ([usize; 8], [char; 3]),

},
Variant1{
fld0: (u16, f64, u16),
fld1: u64,
fld2: [char; 3],
fld3: *mut f64,
fld4: Adt36,

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: (u16, f64, u16),
fld1: Adt40,
fld2: u128,
fld3: Adt39,
fld4: i16,
fld5: i32,
fld6: [char; 3],
fld7: (i128,),

},
Variant1{
fld0: bool,
fld1: *const [usize; 8],
fld2: u32,
fld3: f64,
fld4: u64,
fld5: Adt41,
fld6: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld7: Adt38,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: (i64, isize, i8, i32),
fld1: usize,
fld2: Adt43,
fld3: i128,
fld4: *const u16,
fld5: Adt36,
fld6: Adt42,

},
Variant1{
fld0: u32,
fld1: *mut f64,
fld2: Adt39,

},
Variant2{
fld0: Adt45,
fld1: [i64; 2],
fld2: Adt40,
fld3: usize,
fld4: [i64; 3],
fld5: u32,
fld6: Adt43,
fld7: i128,

},
Variant3{
fld0: Adt44,
fld1: *mut f64,
fld2: Adt41,
fld3: Adt36,
fld4: Adt37,
fld5: *mut bool,
fld6: Adt40,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: [u128; 1],

},
Variant1{
fld0: u128,
fld1: *const [usize; 8],

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: [i128; 1],
fld1: Adt45,

},
Variant1{
fld0: [char; 3],
fld1: *mut bool,
fld2: isize,

},
Variant2{
fld0: u64,
fld1: [i64; 3],
fld2: u32,
fld3: u8,
fld4: i16,

},
Variant3{
fld0: i32,
fld1: u32,
fld2: *mut bool,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: *mut bool,

},
Variant1{
fld0: Adt39,

},
Variant2{
fld0: (u16, f64, u16),
fld1: *mut [u128; 1],
fld2: u64,
fld3: i8,
fld4: i16,
fld5: i32,
fld6: *const [usize; 8],
fld7: Adt44,

},
Variant3{
fld0: u32,
fld1: *const [usize; 8],
fld2: Adt43,
fld3: (*mut [u128; 1], *mut [u128; 1], *mut [u128; 1]),
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: Adt44,
fld1: *mut bool,

},
Variant1{
fld0: [u128; 1],
fld1: Adt48,
fld2: Adt47,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt37,
fld1: (i64, isize, i8, i32),

},
Variant1{
fld0: bool,
fld1: [i64; 2],
fld2: u64,
fld3: Adt45,
fld4: Adt46,

},
Variant2{
fld0: [char; 3],
fld1: Adt36,
fld2: *mut f64,
fld3: i8,
fld4: i16,
fld5: usize,
fld6: (u16, f64, u16),

},
Variant3{
fld0: Adt41,
fld1: *const u16,
fld2: i128,

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: bool,
fld1: Adt36,
fld2: *const [usize; 8],
fld3: u8,
fld4: i16,
fld5: Adt43,
fld6: *mut f64,
fld7: Adt50,
}

