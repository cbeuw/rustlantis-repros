#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i16,mut _2: u64,mut _3: i64) -> bool {
mir! {
type RET = bool;
let _4: i64;
let _5: f32;
let _6: [u8; 3];
let _7: [u8; 3];
let _8: bool;
let _9: [i64; 7];
let _10: u16;
let _11: u64;
let _12: u32;
let _13: [i128; 7];
let _14: f64;
let _15: [u32; 7];
let _16: *const u16;
let _17: Adt59;
let _18: (i32, u128, [u32; 7]);
let _19: Adt55;
let _20: f32;
let _21: [i32; 3];
let _22: char;
let _23: i32;
let _24: (i8, u32);
let _25: *const [u32; 7];
let _26: char;
let _27: Adt53;
let _28: f32;
let _29: [u16; 8];
let _30: Adt48;
let _31: isize;
let _32: (u16,);
let _33: Adt64;
let _34: ();
let _35: ();
{
_1 = (-10235_i16) ^ 7992_i16;
RET = !false;
_4 = !2318977843242538433_i64;
_3 = !_4;
_1 = 29387_i16;
_4 = _3;
RET = _4 < _4;
_7 = [19_u8,143_u8,209_u8];
_5 = (-105682036616436025447801316715071962561_i128) as f32;
_7 = [207_u8,133_u8,244_u8];
_4 = _3 * _3;
_2 = !14880628120505369351_u64;
RET = !true;
_3 = _4 << _2;
Call(_4 = fn1(_5, _5, _1, _1, _1, _3, _1, _2, _3, _7, _5, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = [_4,_4,_4,_4,_4,_4,_4];
_5 = 309542591298464609491789166739689216366_u128 as f32;
_8 = _2 >= _2;
_2 = _1 as u64;
RET = !_8;
_8 = true;
_9 = [_4,_4,_4,_4,_4,_4,_4];
_10 = 22201_u16 / 2517_u16;
_12 = (-35_isize) as u32;
RET = _8;
_12 = !2933134980_u32;
_2 = 810429309927962767_u64 & 5049407446186894133_u64;
_8 = !true;
_7 = [98_u8,45_u8,8_u8];
RET = _4 != _4;
_2 = !13156798203824022822_u64;
_5 = 4_usize as f32;
RET = _8;
_4 = -_3;
_5 = (-6_isize) as f32;
_11 = !_2;
Call(_6 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = [191_u8,27_u8,224_u8];
_9 = [_4,_3,_3,_4,_4,_3,_3];
_13 = [141976645231975220515030133982110145928_i128,(-13253420911380684087579409369386493584_i128),(-14291577747533135428148466036818246644_i128),(-146114363175181898810847117222544096382_i128),140927362086412922265551827470131918910_i128,141556738628321235734947663688088821142_i128,84689215148830509743150766338172041417_i128];
_4 = _3;
_8 = _10 != _10;
_8 = true ^ true;
_9 = [_4,_3,_3,_3,_3,_3,_4];
_12 = !2317058534_u32;
_7 = [74_u8,233_u8,201_u8];
_7 = [89_u8,89_u8,197_u8];
_14 = (-9223372036854775808_isize) as f64;
_10 = 65076_u16 | 27553_u16;
_14 = _12 as f64;
_7 = _6;
_5 = _10 as f32;
_2 = _11 & _11;
_10 = 41919_u16;
_3 = '\u{14588}' as i64;
_7 = [42_u8,172_u8,57_u8];
_7 = _6;
_14 = (-9223372036854775808_isize) as f64;
_17.fld1.fld0.2 = [_12,_12,_12,_12,_12,_12,_12];
RET = !_8;
_17.fld1.fld2 = (_10,);
_1 = !(-20016_i16);
match _10 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
41919 => bb7,
_ => bb6
}
}
bb3 = {
_9 = [_4,_4,_4,_4,_4,_4,_4];
_5 = 309542591298464609491789166739689216366_u128 as f32;
_8 = _2 >= _2;
_2 = _1 as u64;
RET = !_8;
_8 = true;
_9 = [_4,_4,_4,_4,_4,_4,_4];
_10 = 22201_u16 / 2517_u16;
_12 = (-35_isize) as u32;
RET = _8;
_12 = !2933134980_u32;
_2 = 810429309927962767_u64 & 5049407446186894133_u64;
_8 = !true;
_7 = [98_u8,45_u8,8_u8];
RET = _4 != _4;
_2 = !13156798203824022822_u64;
_5 = 4_usize as f32;
RET = _8;
_4 = -_3;
_5 = (-6_isize) as f32;
_11 = !_2;
Call(_6 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_17.fld0 = _5;
_9 = [_4,_4,_4,_4,_4,_4,_4];
_18 = (1251693100_i32, 284609729292864233083727368381374471854_u128, _17.fld1.fld0.2);
_19.fld1 = _12 ^ _12;
_19.fld4 = (99_i8, _12);
Call(_15 = fn4(_18.1, _9, _19.fld4, _10, _10, _10), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_14 = _2 as f64;
_17.fld0 = _18.1 as f32;
_18.2 = [_19.fld4.1,_12,_19.fld1,_19.fld1,_19.fld1,_19.fld4.1,_12];
_19.fld2.0.0 = _18.1;
_7 = [211_u8,54_u8,144_u8];
_19.fld0 = core::ptr::addr_of_mut!(_17.fld1.fld1);
Goto(bb9)
}
bb9 = {
_17.fld1.fld2.0 = _10;
_19.fld5 = -_3;
_17.fld1.fld0.1 = _18.1 << _4;
_17.fld1.fld0 = (_18.0, _18.1, _15);
_10 = _17.fld0 as u16;
_17.fld0 = _5 * _5;
_17.fld1.fld0.1 = _18.1;
_13 = [10884716266969910911206813593425997668_i128,(-3242107266241985611047644368872501485_i128),(-29558811620957089362891593038241534772_i128),(-97632827390543550526629838585368344709_i128),(-74613234426276306660182586825531713655_i128),(-43802426788743993967567416227212333088_i128),55757268198949303887032313926321358241_i128];
_15 = _18.2;
_19.fld2.0.1 = 121_u8 | 114_u8;
_10 = _17.fld1.fld2.0;
_17.fld1.fld0.0 = _18.0 + _18.0;
_8 = !true;
_9 = [_19.fld5,_3,_4,_4,_4,_4,_4];
_17.fld0 = -_5;
_19.fld2.0 = (_18.1, 65_u8);
_18 = _17.fld1.fld0;
_10 = _19.fld2.0.1 as u16;
_23 = _8 as i32;
_18.1 = _17.fld1.fld0.1;
_8 = !false;
_19.fld2.0.1 = !28_u8;
match _19.fld2.0.0 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb5,
5 => bb6,
284609729292864233083727368381374471854 => bb11,
_ => bb10
}
}
bb10 = {
_9 = [_4,_4,_4,_4,_4,_4,_4];
_5 = 309542591298464609491789166739689216366_u128 as f32;
_8 = _2 >= _2;
_2 = _1 as u64;
RET = !_8;
_8 = true;
_9 = [_4,_4,_4,_4,_4,_4,_4];
_10 = 22201_u16 / 2517_u16;
_12 = (-35_isize) as u32;
RET = _8;
_12 = !2933134980_u32;
_2 = 810429309927962767_u64 & 5049407446186894133_u64;
_8 = !true;
_7 = [98_u8,45_u8,8_u8];
RET = _4 != _4;
_2 = !13156798203824022822_u64;
_5 = 4_usize as f32;
RET = _8;
_4 = -_3;
_5 = (-6_isize) as f32;
_11 = !_2;
Call(_6 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_20 = -_17.fld0;
_24.0 = !_19.fld4.0;
_18 = (_17.fld1.fld0.0, _19.fld2.0.0, _15);
_25 = core::ptr::addr_of!(_15);
_9 = [_3,_19.fld5,_19.fld5,_4,_3,_19.fld5,_19.fld5];
_17.fld1.fld1 = (-119608737941126452125381668995441516433_i128);
_17.fld1.fld0.2 = (*_25);
(*_25) = [_19.fld4.1,_19.fld1,_19.fld1,_19.fld1,_19.fld1,_12,_19.fld1];
_7 = [_19.fld2.0.1,_19.fld2.0.1,_19.fld2.0.1];
_24 = (_19.fld4.0, _19.fld1);
RET = !_8;
_17.fld0 = _14 as f32;
_1 = -14820_i16;
_27.fld2 = core::ptr::addr_of_mut!(_17.fld0);
_14 = 14091222494670748285_usize as f64;
_30.fld3 = (_19.fld2.0.0, _19.fld2.0.1);
_21 = [_17.fld1.fld0.0,_18.0,_18.0];
_19.fld4.0 = _1 as i8;
_8 = true;
_30.fld4 = _30.fld3.0 ^ _19.fld2.0.0;
_14 = _1 as f64;
_29 = [_10,_10,_10,_10,_10,_10,_10,_17.fld1.fld2.0];
_27.fld3.0 = _10 ^ _10;
Call(_17.fld1.fld0.2 = core::intrinsics::transmute(_18.2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20 = _5 / 0.00000000000000000000000000000000000000875656136203317_f32;
_30.fld2 = [_30.fld3.1,_19.fld2.0.1,_30.fld3.1];
_19.fld5 = _4;
_30.fld1 = [_19.fld1,_24.1,_19.fld1,_24.1,_24.1,_24.1,_24.1];
Goto(bb13)
}
bb13 = {
_30.fld6 = _25;
_22 = '\u{88a42}';
Goto(bb14)
}
bb14 = {
_30.fld4 = _17.fld1.fld0.1 - _17.fld1.fld0.1;
_19.fld0 = core::ptr::addr_of_mut!(_17.fld1.fld1);
_33.fld3.3 = _30.fld1;
_21 = [_17.fld1.fld0.0,_17.fld1.fld0.0,_17.fld1.fld0.0];
_14 = _2 as f64;
_27.fld4 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1,_19.fld4.1,_19.fld1];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(0_usize, 29_usize, Move(_29), 21_usize, Move(_21), 8_usize, Move(_8), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(0_usize, 6_usize, Move(_6), 1_usize, Move(_1), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(0_usize, 2_usize, Move(_2), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: f32,mut _2: f32,mut _3: i16,mut _4: i16,mut _5: i16,mut _6: i64,mut _7: i16,mut _8: u64,mut _9: i64,mut _10: [u8; 3],mut _11: f32,mut _12: i16) -> i64 {
mir! {
type RET = i64;
let _13: (u16, i64, i16);
let _14: (u16,);
let _15: f64;
let _16: bool;
let _17: [u32; 7];
let _18: Adt50;
let _19: [u16; 8];
let _20: ();
let _21: ();
{
_11 = 5_usize as f32;
RET = 116_isize as i64;
_3 = !_5;
_2 = _1;
_9 = _6 + _6;
_1 = _11 * _2;
_3 = _5;
_8 = 1811711892186647144_u64 >> _6;
_4 = _3 * _3;
_11 = _9 as f32;
_7 = _3 + _12;
_11 = _1;
_5 = _4 + _12;
_3 = _5;
_7 = -_3;
_1 = _3 as f32;
_4 = _3 >> _5;
_7 = -_4;
_9 = _2 as i64;
_1 = _11 * _11;
_2 = _1;
_4 = _7 * _5;
_13 = (59024_u16, _6, _5);
_8 = 12067461598927068055_u64;
_12 = _3 * _4;
_14.0 = _13.0;
_2 = -_11;
_8 = 2_usize as u64;
match _14.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
59024 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11 = 12_u8 as f32;
_1 = -_2;
_7 = 133445034_i32 as i16;
_13.1 = _14.0 as i64;
_6 = -_13.1;
_5 = _12 >> _3;
_14 = (_13.0,);
_6 = _13.1 | _13.1;
_9 = 32363547504281934133275893553114476982_u128 as i64;
_7 = !_12;
RET = _13.1;
Call(_8 = fn2(_2, _5, _13.1, _14.0, _7, _14.0, _9, _6, _7, _6, _14.0), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_14 = (_13.0,);
_17 = [1315098663_u32,3399381411_u32,3755713565_u32,218974112_u32,2770107311_u32,2986131631_u32,1788371978_u32];
RET = _6 ^ _6;
_7 = _12 ^ _5;
_18.fld0 = ((-353909470_i32), 37217304896619245966231929520109730428_u128, _17);
_18.fld2.0 = !_14.0;
_11 = _1;
_5 = _7 << _18.fld0.1;
_15 = _1 as f64;
_18.fld0.0 = (-844432256_i32);
_10 = [18_u8,31_u8,121_u8];
_10 = [216_u8,165_u8,214_u8];
_18.fld1 = '\u{eed6c}' as i128;
_3 = !_5;
_5 = !_4;
_18.fld0 = (682144885_i32, 5015169074889714835867780398720130918_u128, _17);
Goto(bb9)
}
bb9 = {
Call(_20 = dump_var(1_usize, 9_usize, Move(_9), 10_usize, Move(_10), 13_usize, Move(_13), 7_usize, Move(_7)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_20 = dump_var(1_usize, 8_usize, Move(_8), 17_usize, Move(_17), 21_usize, _21, 21_usize, _21), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: f32,mut _2: i16,mut _3: i64,mut _4: u16,mut _5: i16,mut _6: u16,mut _7: i64,mut _8: i64,mut _9: i16,mut _10: i64,mut _11: u16) -> u64 {
mir! {
type RET = u64;
let _12: [u32; 7];
let _13: Adt50;
let _14: ();
let _15: ();
{
_9 = !_5;
Call(_3 = fn3(_4, _10, _11, _8, _4, _2, _6, _6, _4, _4, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = 1279301810_i32 as i64;
_12 = [3242063892_u32,2591278219_u32,196172778_u32,1676115858_u32,1849126582_u32,96512458_u32,3552359631_u32];
RET = 2349738405567419900_u64 >> _3;
_1 = 132498621295650192374974892450809034432_i128 as f32;
Goto(bb2)
}
bb2 = {
Call(_14 = dump_var(2_usize, 2_usize, Move(_2), 7_usize, Move(_7), 11_usize, Move(_11), 10_usize, Move(_10)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_14 = dump_var(2_usize, 9_usize, Move(_9), 15_usize, _15, 15_usize, _15, 15_usize, _15), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: u16,mut _2: i64,mut _3: u16,mut _4: i64,mut _5: u16,mut _6: i16,mut _7: u16,mut _8: u16,mut _9: u16,mut _10: u16,mut _11: i16) -> i64 {
mir! {
type RET = i64;
let _12: [u32; 7];
let _13: [u16; 3];
let _14: Adt51;
let _15: u32;
let _16: u128;
let _17: f32;
let _18: Adt50;
let _19: ();
let _20: ();
{
RET = _4 << _6;
_9 = _10 + _10;
RET = _2;
_10 = _3;
_12 = [1826132111_u32,3288619789_u32,3469895247_u32,3554673971_u32,2877842291_u32,928396802_u32,2352138266_u32];
_13 = [_7,_3,_9];
_3 = '\u{dc884}' as u16;
RET = _2;
RET = _2 | _4;
_4 = _2 << _11;
_14.fld3 = (_9, _4, _11);
_11 = -_14.fld3.2;
_18.fld2.0 = !_9;
Goto(bb1)
}
bb1 = {
Call(_19 = dump_var(3_usize, 6_usize, Move(_6), 2_usize, Move(_2), 13_usize, Move(_13), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_19 = dump_var(3_usize, 10_usize, Move(_10), 11_usize, Move(_11), 20_usize, _20, 20_usize, _20), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: u128,mut _2: [i64; 7],mut _3: (i8, u32),mut _4: u16,mut _5: u16,mut _6: u16) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _7: bool;
let _8: u64;
let _9: Adt59;
let _10: Adt59;
let _11: [i64; 7];
let _12: f32;
let _13: isize;
let _14: [i128; 7];
let _15: i16;
let _16: u128;
let _17: [u32; 7];
let _18: (u16, i64, i16);
let _19: [u32; 7];
let _20: Adt59;
let _21: Adt48;
let _22: Adt58;
let _23: *mut f32;
let _24: isize;
let _25: char;
let _26: Adt53;
let _27: Adt48;
let _28: ((u128, u8),);
let _29: usize;
let _30: u64;
let _31: bool;
let _32: ();
let _33: ();
{
_3.1 = 3327673791_u32 / 2213870409_u32;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_3.1 = 2653712732_u32;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_1 = !307944147568349134168719280725913047937_u128;
_3.0 = 47_i8 + (-44_i8);
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_3.0 = -(-35_i8);
_3.0 = (-103_i8) << _3.1;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_8 = (-25134_i16) as u64;
_7 = true ^ true;
_5 = !_4;
Goto(bb1)
}
bb1 = {
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_1 = 321530808322811528691553084118740115668_u128;
_9.fld1.fld0.1 = _1 - _1;
_9.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9.fld0 = _3.1 as f32;
_9.fld1.fld2.0 = _3.0 as u16;
_5 = (-19142_i16) as u16;
_3.0 = (-10_i8);
_10.fld1.fld0.0 = (-903867164_i32);
_10.fld0 = _9.fld0 / (-0.0000000000000000000000000000000000000052981161144240565_f32);
_9.fld0 = _10.fld0;
_6 = _10.fld0 as u16;
_10.fld1.fld0.1 = !_9.fld1.fld0.1;
_10.fld1.fld0 = (47618437_i32, _9.fld1.fld0.1, _9.fld1.fld0.2);
_9.fld1.fld1 = 112509633366488587333857981373816583734_i128;
_3.0 = -(-73_i8);
_10.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9.fld1.fld0.0 = _5 as i32;
_10.fld1.fld2.0 = !_5;
_8 = !4931358517892962746_u64;
_10.fld1.fld1 = _9.fld1.fld1;
_10.fld1.fld0.0 = _9.fld1.fld0.0 - _9.fld1.fld0.0;
_3.1 = _9.fld1.fld1 as u32;
_10.fld1.fld2 = (_9.fld1.fld2.0,);
_10.fld1.fld2.0 = _3.0 as u16;
Goto(bb2)
}
bb2 = {
_2 = [7563149729616001509_i64,5605777448247817436_i64,(-6764012801112599629_i64),6952346085387432862_i64,(-1876210954423092069_i64),(-3364138174005789498_i64),(-609201035374133374_i64)];
_3.0 = -67_i8;
_9.fld1.fld0 = _10.fld1.fld0;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_10.fld1.fld0.1 = _9.fld1.fld0.1 * _9.fld1.fld0.1;
_11 = _2;
_14 = [_10.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1,_10.fld1.fld1,_10.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1];
_3.1 = 2043478053_u32;
_9.fld0 = _10.fld0 + _10.fld0;
_9.fld1.fld0 = (_10.fld1.fld0.0, _10.fld1.fld0.1, _10.fld1.fld0.2);
_15 = 123_u8 as i16;
_10.fld1.fld2 = _9.fld1.fld2;
_2 = [4928887894978613828_i64,993239168043567436_i64,7189890162193452231_i64,2646411957925274138_i64,9203271249614393104_i64,(-8854977442076171392_i64),6370773969053451842_i64];
_14 = [_9.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1,_10.fld1.fld1,_10.fld1.fld1];
_3.1 = _10.fld1.fld2.0 as u32;
_1 = !_9.fld1.fld0.1;
_16 = _10.fld1.fld0.1 & _10.fld1.fld0.1;
_15 = _9.fld0 as i16;
_9.fld1.fld0.0 = _10.fld1.fld2.0 as i32;
_5 = !_9.fld1.fld2.0;
_10.fld1.fld0.1 = _9.fld1.fld0.1;
_11 = [5076100506853040943_i64,6289288611536042289_i64,5714679259500592032_i64,4987371161893952774_i64,2403460983534377715_i64,6274010994640949371_i64,(-4759242520464355620_i64)];
_9.fld1.fld0.1 = _1;
_6 = _9.fld1.fld0.1 as u16;
_8 = 14801727200451699908_u64 >> _6;
_10.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _9.fld1.fld1,fld2: _9.fld1.fld2 };
_10.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _9.fld1.fld1,fld2: _9.fld1.fld2 };
_9.fld1.fld0.1 = _16;
Call(_10.fld1.fld0 = fn5(_7, _3.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_9.fld1.fld1 = _10.fld1.fld1 * _10.fld1.fld1;
_10.fld1.fld2.0 = _9.fld1.fld2.0;
_18.2 = _7 as i16;
_10.fld1 = _9.fld1;
_9 = Adt59 { fld0: _10.fld0,fld1: _10.fld1 };
_10.fld1.fld0.0 = _9.fld1.fld0.0;
_20.fld1.fld2.0 = _5;
_20.fld1 = _10.fld1;
_20.fld0 = _8 as f32;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_21.fld4 = 224_u8 as u128;
_18.0 = '\u{cf2af}' as u16;
_10.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_21.fld3.0 = _20.fld1.fld0.1;
_20.fld1.fld1 = _8 as i128;
_20.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _10.fld1.fld1,fld2: _9.fld1.fld2 };
_18.0 = _9.fld1.fld2.0 ^ _6;
Goto(bb4)
}
bb4 = {
_22.fld4.0 = _10.fld1.fld0.0;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_10.fld1.fld0.1 = _1;
_21.fld6 = core::ptr::addr_of!(_9.fld1.fld0.2);
RET = _10.fld1.fld0.2;
_22.fld4 = _9.fld1.fld0;
_3 = ((-26_i8), 2675652184_u32);
_5 = _20.fld1.fld2.0;
Goto(bb5)
}
bb5 = {
_9 = Adt59 { fld0: _10.fld0,fld1: _20.fld1 };
_21.fld2 = [121_u8,7_u8,247_u8];
_20.fld1.fld2 = (_6,);
_2 = [6979427182507528142_i64,5047827334136375401_i64,(-6282632905369355531_i64),(-3549371565192105902_i64),(-4444477820573131639_i64),(-7928945537592607986_i64),(-5999210357078560850_i64)];
_22.fld0.1 = core::ptr::addr_of!(_18);
_22.fld3 = core::ptr::addr_of!(_21.fld1);
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_10.fld1.fld0.1 = _22.fld4.1 & _16;
_22.fld0.2 = [_20.fld1.fld0.0,_9.fld1.fld0.0,_20.fld1.fld0.0];
_20 = Adt59 { fld0: _10.fld0,fld1: _10.fld1 };
_10.fld1.fld0.1 = _21.fld3.0;
_15 = 148_u8 as i16;
_9.fld1.fld2 = (_6,);
_21.fld3.0 = !_22.fld4.1;
_20.fld1.fld2 = (_6,);
_9.fld1.fld0.2 = _20.fld1.fld0.2;
_15 = _18.2;
_22.fld1.fld3 = _3.0;
_10.fld1.fld0.1 = _20.fld1.fld1 as u128;
_22.fld0.4 = -_9.fld0;
_26.fld1 = !_8;
_26.fld3.1 = 7104699020918360576_i64;
_9.fld0 = _10.fld0;
_21.fld4 = _20.fld1.fld0.1 + _16;
Goto(bb6)
}
bb6 = {
_22.fld1.fld1 = core::ptr::addr_of_mut!(_7);
_18 = (_9.fld1.fld2.0, _26.fld3.1, _15);
_26.fld0 = core::ptr::addr_of_mut!(_7);
match _3.1 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb8,
5 => bb9,
2675652184 => bb11,
_ => bb10
}
}
bb7 = {
_9 = Adt59 { fld0: _10.fld0,fld1: _20.fld1 };
_21.fld2 = [121_u8,7_u8,247_u8];
_20.fld1.fld2 = (_6,);
_2 = [6979427182507528142_i64,5047827334136375401_i64,(-6282632905369355531_i64),(-3549371565192105902_i64),(-4444477820573131639_i64),(-7928945537592607986_i64),(-5999210357078560850_i64)];
_22.fld0.1 = core::ptr::addr_of!(_18);
_22.fld3 = core::ptr::addr_of!(_21.fld1);
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_10.fld1.fld0.1 = _22.fld4.1 & _16;
_22.fld0.2 = [_20.fld1.fld0.0,_9.fld1.fld0.0,_20.fld1.fld0.0];
_20 = Adt59 { fld0: _10.fld0,fld1: _10.fld1 };
_10.fld1.fld0.1 = _21.fld3.0;
_15 = 148_u8 as i16;
_9.fld1.fld2 = (_6,);
_21.fld3.0 = !_22.fld4.1;
_20.fld1.fld2 = (_6,);
_9.fld1.fld0.2 = _20.fld1.fld0.2;
_15 = _18.2;
_22.fld1.fld3 = _3.0;
_10.fld1.fld0.1 = _20.fld1.fld1 as u128;
_22.fld0.4 = -_9.fld0;
_26.fld1 = !_8;
_26.fld3.1 = 7104699020918360576_i64;
_9.fld0 = _10.fld0;
_21.fld4 = _20.fld1.fld0.1 + _16;
Goto(bb6)
}
bb8 = {
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_1 = 321530808322811528691553084118740115668_u128;
_9.fld1.fld0.1 = _1 - _1;
_9.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9.fld0 = _3.1 as f32;
_9.fld1.fld2.0 = _3.0 as u16;
_5 = (-19142_i16) as u16;
_3.0 = (-10_i8);
_10.fld1.fld0.0 = (-903867164_i32);
_10.fld0 = _9.fld0 / (-0.0000000000000000000000000000000000000052981161144240565_f32);
_9.fld0 = _10.fld0;
_6 = _10.fld0 as u16;
_10.fld1.fld0.1 = !_9.fld1.fld0.1;
_10.fld1.fld0 = (47618437_i32, _9.fld1.fld0.1, _9.fld1.fld0.2);
_9.fld1.fld1 = 112509633366488587333857981373816583734_i128;
_3.0 = -(-73_i8);
_10.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9.fld1.fld0.0 = _5 as i32;
_10.fld1.fld2.0 = !_5;
_8 = !4931358517892962746_u64;
_10.fld1.fld1 = _9.fld1.fld1;
_10.fld1.fld0.0 = _9.fld1.fld0.0 - _9.fld1.fld0.0;
_3.1 = _9.fld1.fld1 as u32;
_10.fld1.fld2 = (_9.fld1.fld2.0,);
_10.fld1.fld2.0 = _3.0 as u16;
Goto(bb2)
}
bb9 = {
_9.fld1.fld1 = _10.fld1.fld1 * _10.fld1.fld1;
_10.fld1.fld2.0 = _9.fld1.fld2.0;
_18.2 = _7 as i16;
_10.fld1 = _9.fld1;
_9 = Adt59 { fld0: _10.fld0,fld1: _10.fld1 };
_10.fld1.fld0.0 = _9.fld1.fld0.0;
_20.fld1.fld2.0 = _5;
_20.fld1 = _10.fld1;
_20.fld0 = _8 as f32;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_21.fld4 = 224_u8 as u128;
_18.0 = '\u{cf2af}' as u16;
_10.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_21.fld3.0 = _20.fld1.fld0.1;
_20.fld1.fld1 = _8 as i128;
_20.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _10.fld1.fld1,fld2: _9.fld1.fld2 };
_18.0 = _9.fld1.fld2.0 ^ _6;
Goto(bb4)
}
bb10 = {
_2 = [7563149729616001509_i64,5605777448247817436_i64,(-6764012801112599629_i64),6952346085387432862_i64,(-1876210954423092069_i64),(-3364138174005789498_i64),(-609201035374133374_i64)];
_3.0 = -67_i8;
_9.fld1.fld0 = _10.fld1.fld0;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_10.fld1.fld0.1 = _9.fld1.fld0.1 * _9.fld1.fld0.1;
_11 = _2;
_14 = [_10.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1,_10.fld1.fld1,_10.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1];
_3.1 = 2043478053_u32;
_9.fld0 = _10.fld0 + _10.fld0;
_9.fld1.fld0 = (_10.fld1.fld0.0, _10.fld1.fld0.1, _10.fld1.fld0.2);
_15 = 123_u8 as i16;
_10.fld1.fld2 = _9.fld1.fld2;
_2 = [4928887894978613828_i64,993239168043567436_i64,7189890162193452231_i64,2646411957925274138_i64,9203271249614393104_i64,(-8854977442076171392_i64),6370773969053451842_i64];
_14 = [_9.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1,_10.fld1.fld1,_9.fld1.fld1,_10.fld1.fld1,_10.fld1.fld1];
_3.1 = _10.fld1.fld2.0 as u32;
_1 = !_9.fld1.fld0.1;
_16 = _10.fld1.fld0.1 & _10.fld1.fld0.1;
_15 = _9.fld0 as i16;
_9.fld1.fld0.0 = _10.fld1.fld2.0 as i32;
_5 = !_9.fld1.fld2.0;
_10.fld1.fld0.1 = _9.fld1.fld0.1;
_11 = [5076100506853040943_i64,6289288611536042289_i64,5714679259500592032_i64,4987371161893952774_i64,2403460983534377715_i64,6274010994640949371_i64,(-4759242520464355620_i64)];
_9.fld1.fld0.1 = _1;
_6 = _9.fld1.fld0.1 as u16;
_8 = 14801727200451699908_u64 >> _6;
_10.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _9.fld1.fld1,fld2: _9.fld1.fld2 };
_10.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _9.fld1.fld1,fld2: _9.fld1.fld2 };
_9.fld1.fld0.1 = _16;
Call(_10.fld1.fld0 = fn5(_7, _3.0), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_22.fld3 = core::ptr::addr_of!(_27.fld1);
_2 = [_18.1,_18.1,_26.fld3.1,_26.fld3.1,_26.fld3.1,_18.1,_26.fld3.1];
_22.fld4.0 = -_10.fld1.fld0.0;
_20.fld1.fld1 = -_10.fld1.fld1;
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9 = Adt59 { fld0: _20.fld0,fld1: _20.fld1 };
_20.fld1.fld1 = _9.fld1.fld1;
_17 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_2 = _11;
_18.0 = _9.fld1.fld2.0 ^ _6;
_26.fld3.2 = !_18.2;
_26.fld3 = _18;
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_20.fld0 = _9.fld0 + _9.fld0;
_27.fld0 = core::ptr::addr_of!(_18.1);
_22.fld4.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_31 = !_7;
_30 = _26.fld1;
_28.0.0 = !_9.fld1.fld0.1;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9.fld1 = Adt50 { fld0: _10.fld1.fld0,fld1: _20.fld1.fld1,fld2: _20.fld1.fld2 };
_18.2 = _26.fld3.2;
_22.fld4.1 = _22.fld0.4 as u128;
_20.fld1.fld0.1 = _16 % 310582575509359358715455348572981919016_u128;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_6 = _26.fld3.2 as u16;
_18 = (_26.fld3.0, _26.fld3.1, _15);
_10.fld1.fld0 = (_22.fld4.0, _16, _19);
Goto(bb12)
}
bb12 = {
_20.fld1.fld0 = _10.fld1.fld0;
match _4 {
0 => bb8,
1 => bb7,
2 => bb6,
3 => bb4,
4 => bb5,
5 => bb13,
6 => bb14,
41919 => bb16,
_ => bb15
}
}
bb13 = {
_22.fld3 = core::ptr::addr_of!(_27.fld1);
_2 = [_18.1,_18.1,_26.fld3.1,_26.fld3.1,_26.fld3.1,_18.1,_26.fld3.1];
_22.fld4.0 = -_10.fld1.fld0.0;
_20.fld1.fld1 = -_10.fld1.fld1;
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9 = Adt59 { fld0: _20.fld0,fld1: _20.fld1 };
_20.fld1.fld1 = _9.fld1.fld1;
_17 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_2 = _11;
_18.0 = _9.fld1.fld2.0 ^ _6;
_26.fld3.2 = !_18.2;
_26.fld3 = _18;
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_20.fld0 = _9.fld0 + _9.fld0;
_27.fld0 = core::ptr::addr_of!(_18.1);
_22.fld4.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_31 = !_7;
_30 = _26.fld1;
_28.0.0 = !_9.fld1.fld0.1;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_9.fld1 = Adt50 { fld0: _10.fld1.fld0,fld1: _20.fld1.fld1,fld2: _20.fld1.fld2 };
_18.2 = _26.fld3.2;
_22.fld4.1 = _22.fld0.4 as u128;
_20.fld1.fld0.1 = _16 % 310582575509359358715455348572981919016_u128;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_6 = _26.fld3.2 as u16;
_18 = (_26.fld3.0, _26.fld3.1, _15);
_10.fld1.fld0 = (_22.fld4.0, _16, _19);
Goto(bb12)
}
bb14 = {
_9 = Adt59 { fld0: _10.fld0,fld1: _20.fld1 };
_21.fld2 = [121_u8,7_u8,247_u8];
_20.fld1.fld2 = (_6,);
_2 = [6979427182507528142_i64,5047827334136375401_i64,(-6282632905369355531_i64),(-3549371565192105902_i64),(-4444477820573131639_i64),(-7928945537592607986_i64),(-5999210357078560850_i64)];
_22.fld0.1 = core::ptr::addr_of!(_18);
_22.fld3 = core::ptr::addr_of!(_21.fld1);
_19 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_10.fld1.fld0.1 = _22.fld4.1 & _16;
_22.fld0.2 = [_20.fld1.fld0.0,_9.fld1.fld0.0,_20.fld1.fld0.0];
_20 = Adt59 { fld0: _10.fld0,fld1: _10.fld1 };
_10.fld1.fld0.1 = _21.fld3.0;
_15 = 148_u8 as i16;
_9.fld1.fld2 = (_6,);
_21.fld3.0 = !_22.fld4.1;
_20.fld1.fld2 = (_6,);
_9.fld1.fld0.2 = _20.fld1.fld0.2;
_15 = _18.2;
_22.fld1.fld3 = _3.0;
_10.fld1.fld0.1 = _20.fld1.fld1 as u128;
_22.fld0.4 = -_9.fld0;
_26.fld1 = !_8;
_26.fld3.1 = 7104699020918360576_i64;
_9.fld0 = _10.fld0;
_21.fld4 = _20.fld1.fld0.1 + _16;
Goto(bb6)
}
bb15 = {
_9.fld1.fld1 = _10.fld1.fld1 * _10.fld1.fld1;
_10.fld1.fld2.0 = _9.fld1.fld2.0;
_18.2 = _7 as i16;
_10.fld1 = _9.fld1;
_9 = Adt59 { fld0: _10.fld0,fld1: _10.fld1 };
_10.fld1.fld0.0 = _9.fld1.fld0.0;
_20.fld1.fld2.0 = _5;
_20.fld1 = _10.fld1;
_20.fld0 = _8 as f32;
RET = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_21.fld4 = 224_u8 as u128;
_18.0 = '\u{cf2af}' as u16;
_10.fld1.fld0.2 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_21.fld3.0 = _20.fld1.fld0.1;
_20.fld1.fld1 = _8 as i128;
_20.fld1 = Adt50 { fld0: _9.fld1.fld0,fld1: _10.fld1.fld1,fld2: _9.fld1.fld2 };
_18.0 = _9.fld1.fld2.0 ^ _6;
Goto(bb4)
}
bb16 = {
_18 = (_26.fld3.0, _26.fld3.1, _26.fld3.2);
_21.fld6 = core::ptr::addr_of!(_19);
Goto(bb17)
}
bb17 = {
Call(_32 = dump_var(4_usize, 19_usize, Move(_19), 14_usize, Move(_14), 18_usize, Move(_18), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_32 = dump_var(4_usize, 2_usize, Move(_2), 30_usize, Move(_30), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: bool,mut _2: i8) -> (i32, u128, [u32; 7]) {
mir! {
type RET = (i32, u128, [u32; 7]);
let _3: [i32; 3];
let _4: [u32; 8];
let _5: f32;
let _6: bool;
let _7: u8;
let _8: bool;
let _9: ((*const i64, i16), *const i32);
let _10: *const i64;
let _11: i64;
let _12: f32;
let _13: f64;
let _14: u128;
let _15: Adt61;
let _16: [i32; 3];
let _17: *const [u32; 7];
let _18: [i32; 3];
let _19: i16;
let _20: isize;
let _21: Adt52;
let _22: Adt58;
let _23: isize;
let _24: Adt50;
let _25: i64;
let _26: char;
let _27: f32;
let _28: isize;
let _29: Adt57;
let _30: u8;
let _31: (i8, u32);
let _32: f32;
let _33: f64;
let _34: f64;
let _35: Adt50;
let _36: f32;
let _37: u64;
let _38: u32;
let _39: u128;
let _40: f32;
let _41: char;
let _42: f64;
let _43: i128;
let _44: ();
let _45: ();
{
RET.0 = (-981485257_i32) | (-1267156745_i32);
Call(RET.0 = core::intrinsics::bswap(754279687_i32), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.1 = 257430455872794823387494356477849727470_u128;
RET.2 = [3128452534_u32,42043267_u32,1472626234_u32,1719568372_u32,3115554929_u32,3123728801_u32,4180068274_u32];
_2 = !68_i8;
RET.2 = [3732610298_u32,2846888415_u32,830986801_u32,1262784909_u32,444190037_u32,2997981161_u32,225364020_u32];
_4 = [3118471414_u32,1173901424_u32,2632073321_u32,2110622460_u32,1139772859_u32,1490996216_u32,2754972441_u32,265678965_u32];
_3 = [209906211_i32,149073770_i32,(-499908501_i32)];
_3 = [(-1314870867_i32),(-961711085_i32),(-2031066045_i32)];
_3 = [397223111_i32,(-1454774512_i32),1435575983_i32];
_1 = _2 < _2;
_4 = [789399438_u32,3737571839_u32,2191258909_u32,938816459_u32,2172356405_u32,3013244130_u32,2336757086_u32,2637467109_u32];
_1 = _2 < _2;
RET.2 = [2359664116_u32,2152016016_u32,4071609909_u32,1577025938_u32,257534915_u32,3515183453_u32,166742191_u32];
_4 = [1600026537_u32,477667559_u32,1861263059_u32,1967258771_u32,3070792223_u32,1211729641_u32,781345382_u32,3996235948_u32];
_4 = [1631220466_u32,208659124_u32,4185719617_u32,75331451_u32,2089524375_u32,3044490710_u32,1620431401_u32,4156175920_u32];
RET.2 = [1126268410_u32,4273690331_u32,290234569_u32,3134840020_u32,3055212317_u32,208025559_u32,832710960_u32];
RET.1 = _1 as u128;
_5 = (-15320_i16) as f32;
_2 = 83_i8 >> 141_u8;
Goto(bb2)
}
bb2 = {
_3 = [1018394298_i32,(-1787003669_i32),(-1489761133_i32)];
RET.2 = [2060328280_u32,4022102574_u32,1162772621_u32,1040416630_u32,3800159654_u32,3248081849_u32,2282777164_u32];
_3 = [(-1044598739_i32),(-426062498_i32),971439570_i32];
RET.0 = 30709_i16 as i32;
_3 = [832532032_i32,736819053_i32,1892215318_i32];
_1 = false & false;
Call(RET.0 = fn6(_2, _3, _3, _3, _2, _1, _2, _3, _2, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = 47_u8 & 21_u8;
RET.0 = 8964166865249880980_u64 as i32;
RET.0 = -(-122946795_i32);
RET.0 = (-37_isize) as i32;
_8 = _1;
RET.2 = [1229183577_u32,3972408978_u32,838403837_u32,2999412733_u32,3327021923_u32,2754833286_u32,2643361274_u32];
_2 = 66_i8;
_6 = !_8;
_11 = _6 as i64;
_12 = -_5;
_9.0.1 = (-7089_i16) & 7409_i16;
RET.1 = (-1399576001_i32) as u128;
Call(_10 = fn7(_9.0.1, _7, _7, _1, _9.0.1, _9.0.1, _6, _11, _1, _1, _2, _8, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9.0.0 = _10;
_9.0.0 = core::ptr::addr_of!(_11);
RET.2 = [605926256_u32,401506008_u32,1691669613_u32,683199186_u32,3292607798_u32,3928597127_u32,1465437313_u32];
_16 = [1866234397_i32,1833399646_i32,295399724_i32];
Call(_9 = fn8(_1, _16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_16 = [1430861741_i32,(-1077741673_i32),1885393878_i32];
_6 = _8 ^ _8;
_8 = _6;
_4 = [3617708078_u32,2766711758_u32,24378173_u32,952577404_u32,164138722_u32,3581869194_u32,8947560_u32,1442516432_u32];
_11 = (-5678666489512010670_i64);
_13 = 9223372036854775807_isize as f64;
_5 = -_12;
_5 = -_12;
_20 = 65_isize;
_1 = _7 >= _7;
_3 = [(-1469084119_i32),1758970548_i32,255315889_i32];
_13 = 418773560_u32 as f64;
_18 = [(-1715690165_i32),1178481022_i32,(-1481661812_i32)];
_9.0.0 = core::ptr::addr_of!(_11);
RET.1 = 11439376706222738774_u64 as u128;
_6 = !_1;
match _2 {
0 => bb4,
1 => bb2,
2 => bb3,
66 => bb7,
_ => bb6
}
}
bb6 = {
_9.0.0 = _10;
_9.0.0 = core::ptr::addr_of!(_11);
RET.2 = [605926256_u32,401506008_u32,1691669613_u32,683199186_u32,3292607798_u32,3928597127_u32,1465437313_u32];
_16 = [1866234397_i32,1833399646_i32,295399724_i32];
Call(_9 = fn8(_1, _16), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
RET.2 = [2435201510_u32,2476266079_u32,1922079701_u32,675647329_u32,268653329_u32,308051988_u32,1931993232_u32];
_21.fld0.fld3.1 = _11;
_22.fld1.fld2 = core::ptr::addr_of!(_24.fld0.2);
_22.fld0.4 = _5 * _5;
_21.fld2 = core::ptr::addr_of!(_24.fld2.0);
_11 = !_21.fld0.fld3.1;
_22.fld0.2 = [(-38828087_i32),168309823_i32,1824076945_i32];
_21.fld0.fld0 = core::ptr::addr_of!(_13);
Call(_15.fld0 = fn10(_22.fld1.fld2, _9, _21.fld0.fld0, _10, _6, _21.fld0.fld3.1, _22.fld0.4, _9.0.1, _13, _22.fld1.fld2, _11, _20, _6), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET.0 = (-45396330278470817656975432948264192977_i128) as i32;
_19 = _9.0.1;
_23 = _21.fld0.fld3.1 as isize;
_21.fld7 = _5;
RET.1 = 139314920781889248877091399234637102715_i128 as u128;
_24.fld0.0 = (-488665625_i32) + (-1217655437_i32);
Goto(bb9)
}
bb9 = {
_29.fld6 = 2_usize as i64;
_21.fld7 = _22.fld0.4 / (-0.000000000000000000000000000000000000002005356193341316_f32);
_22.fld1.fld0 = core::ptr::addr_of_mut!(_21.fld0.fld0);
_22.fld4.1 = 32793896665679944263523691832861930100_u128 ^ 149639541657593356017031692791392658192_u128;
_22.fld0.2 = _3;
_24.fld2 = (45656_u16,);
_29.fld1 = '\u{9d593}';
_30 = _7;
_22.fld0.0 = 3423798770_u32;
_29.fld2.0 = [_24.fld2.0,_24.fld2.0,_24.fld2.0];
_15 = Adt61 { fld0: _9.1 };
_22.fld2 = core::ptr::addr_of_mut!(_21.fld0.fld0);
_31.1 = _22.fld4.1 as u32;
RET.2 = _24.fld0.2;
_35.fld0.2 = [_22.fld0.0,_31.1,_31.1,_31.1,_22.fld0.0,_31.1,_31.1];
_21.fld5 = _24.fld0.0;
_21.fld6 = _11;
_24.fld0 = (_21.fld5, _22.fld4.1, _35.fld0.2);
_29.fld6 = _11 + _21.fld0.fld3.1;
_37 = !10184292650706109889_u64;
Call(_21.fld0.fld3 = fn11(_30, _23, _24.fld0, _24.fld0.2, _22.fld4.1, _22.fld1.fld2, _7, _15.fld0, _15.fld0, _16, _7, _9.1, _15, _9.1, _8, _37), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_35.fld0.0 = 8813618052727128866_usize as i32;
_9.0 = (_10, _21.fld0.fld3.2);
_29.fld3 = _2;
Goto(bb11)
}
bb11 = {
_37 = 12625478613353102690_u64;
_35.fld0.1 = _24.fld0.1;
_26 = _29.fld1;
_29.fld6 = _21.fld6 & _21.fld0.fld3.1;
_21.fld1 = !_37;
_32 = -_22.fld0.4;
_31.0 = _2;
_22.fld1.fld3 = 133289720611993157466388242907673774878_i128 as i8;
_20 = !_23;
_29.fld0 = _29.fld6 as u128;
_24.fld0.2 = _35.fld0.2;
_29.fld4 = !_37;
_22.fld4 = (_24.fld0.0, _35.fld0.1, _24.fld0.2);
_22.fld4 = (_24.fld0.0, _35.fld0.1, _24.fld0.2);
_22.fld1.fld1 = core::ptr::addr_of_mut!(_1);
match _21.fld0.fld3.2 {
0 => bb1,
1 => bb8,
2 => bb5,
3 => bb10,
4 => bb12,
4942 => bb14,
_ => bb13
}
}
bb12 = {
_35.fld0.0 = 8813618052727128866_usize as i32;
_9.0 = (_10, _21.fld0.fld3.2);
_29.fld3 = _2;
Goto(bb11)
}
bb13 = {
RET.1 = 257430455872794823387494356477849727470_u128;
RET.2 = [3128452534_u32,42043267_u32,1472626234_u32,1719568372_u32,3115554929_u32,3123728801_u32,4180068274_u32];
_2 = !68_i8;
RET.2 = [3732610298_u32,2846888415_u32,830986801_u32,1262784909_u32,444190037_u32,2997981161_u32,225364020_u32];
_4 = [3118471414_u32,1173901424_u32,2632073321_u32,2110622460_u32,1139772859_u32,1490996216_u32,2754972441_u32,265678965_u32];
_3 = [209906211_i32,149073770_i32,(-499908501_i32)];
_3 = [(-1314870867_i32),(-961711085_i32),(-2031066045_i32)];
_3 = [397223111_i32,(-1454774512_i32),1435575983_i32];
_1 = _2 < _2;
_4 = [789399438_u32,3737571839_u32,2191258909_u32,938816459_u32,2172356405_u32,3013244130_u32,2336757086_u32,2637467109_u32];
_1 = _2 < _2;
RET.2 = [2359664116_u32,2152016016_u32,4071609909_u32,1577025938_u32,257534915_u32,3515183453_u32,166742191_u32];
_4 = [1600026537_u32,477667559_u32,1861263059_u32,1967258771_u32,3070792223_u32,1211729641_u32,781345382_u32,3996235948_u32];
_4 = [1631220466_u32,208659124_u32,4185719617_u32,75331451_u32,2089524375_u32,3044490710_u32,1620431401_u32,4156175920_u32];
RET.2 = [1126268410_u32,4273690331_u32,290234569_u32,3134840020_u32,3055212317_u32,208025559_u32,832710960_u32];
RET.1 = _1 as u128;
_5 = (-15320_i16) as f32;
_2 = 83_i8 >> 141_u8;
Goto(bb2)
}
bb14 = {
_35 = Adt50 { fld0: _22.fld4,fld1: (-80881509933085352986673014291824175662_i128),fld2: _24.fld2 };
_17 = core::ptr::addr_of!(_35.fld0.2);
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(5_usize, 4_usize, Move(_4), 6_usize, Move(_6), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(5_usize, 2_usize, Move(_2), 1_usize, Move(_1), 7_usize, Move(_7), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: i8,mut _2: [i32; 3],mut _3: [i32; 3],mut _4: [i32; 3],mut _5: i8,mut _6: bool,mut _7: i8,mut _8: [i32; 3],mut _9: i8,mut _10: i8) -> i32 {
mir! {
type RET = i32;
let _11: char;
let _12: bool;
let _13: bool;
let _14: u32;
let _15: *mut *const f64;
let _16: f32;
let _17: Adt52;
let _18: Adt61;
let _19: isize;
let _20: u32;
let _21: isize;
let _22: (u16,);
let _23: u128;
let _24: i32;
let _25: [u32; 8];
let _26: isize;
let _27: Adt54;
let _28: ();
let _29: ();
{
_9 = (-892250021_i32) as i8;
RET = !552914510_i32;
_7 = (-3692_i16) as i8;
_9 = _10 - _7;
_5 = !_9;
_8 = [(-251978512_i32),58465693_i32,(-1873016994_i32)];
_1 = '\u{1ba05}' as i8;
_1 = _5 - _5;
_9 = 2882774795363855399_u64 as i8;
RET = 398723787_i32 ^ 1700719762_i32;
RET = 2113859203_i32 << _1;
_9 = _1;
RET = !(-1130365470_i32);
_4 = [1503481437_i32,(-1911369254_i32),(-1093069085_i32)];
_2 = _8;
_7 = _5;
_1 = (-9223372036854775808_isize) as i8;
_8 = [(-961638557_i32),(-800583927_i32),(-289040188_i32)];
_5 = (-933423825_i32) as i8;
_8 = [(-925921773_i32),521230359_i32,(-716190351_i32)];
_10 = _9;
Goto(bb1)
}
bb1 = {
RET = 113675842698584669957371530461179645843_i128 as i32;
_4 = [1077861817_i32,1408375564_i32,160222900_i32];
_11 = '\u{2b313}';
RET = (-152335475057763057470402035758227005778_i128) as i32;
_3 = _4;
_13 = !_6;
_3 = [829657358_i32,(-1383066883_i32),596576271_i32];
_14 = 1336299339_u32;
_1 = _7 | _10;
_1 = !_7;
_11 = '\u{2ebe2}';
_17.fld7 = (-85_isize) as f32;
_17.fld3 = [37114_u16,40120_u16,3410_u16];
_8 = _4;
_17.fld3 = [62024_u16,32865_u16,28732_u16];
Goto(bb2)
}
bb2 = {
_17.fld4 = !29887_i16;
_17.fld5 = (-2088265438_i32);
_17.fld1 = 13909982555870360107_u64;
_17.fld0.fld3.1 = !1874575731065551508_i64;
_13 = _6;
_17.fld5 = _13 as i32;
_6 = !_13;
_12 = !_13;
_17.fld2 = core::ptr::addr_of!(_17.fld0.fld1);
_3 = [_17.fld5,_17.fld5,_17.fld5];
_10 = _1 >> _1;
_8 = _3;
_9 = _11 as i8;
_17.fld0.fld3 = (25860_u16, (-4937288591299044611_i64), _17.fld4);
_8 = _3;
_17.fld6 = 124_u8 as i64;
_16 = _17.fld1 as f32;
_6 = _12 & _13;
_17.fld4 = _17.fld0.fld3.2;
_18.fld0 = core::ptr::addr_of!(_17.fld5);
match _17.fld1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
13909982555870360107 => bb11,
_ => bb10
}
}
bb3 = {
RET = 113675842698584669957371530461179645843_i128 as i32;
_4 = [1077861817_i32,1408375564_i32,160222900_i32];
_11 = '\u{2b313}';
RET = (-152335475057763057470402035758227005778_i128) as i32;
_3 = _4;
_13 = !_6;
_3 = [829657358_i32,(-1383066883_i32),596576271_i32];
_14 = 1336299339_u32;
_1 = _7 | _10;
_1 = !_7;
_11 = '\u{2ebe2}';
_17.fld7 = (-85_isize) as f32;
_17.fld3 = [37114_u16,40120_u16,3410_u16];
_8 = _4;
_17.fld3 = [62024_u16,32865_u16,28732_u16];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_17.fld0.fld1 = _17.fld0.fld3.0 % 27119_u16;
_3 = [_17.fld5,_17.fld5,_17.fld5];
_18.fld0 = core::ptr::addr_of!(_17.fld5);
_17.fld0.fld3 = (_17.fld0.fld1, _17.fld6, _17.fld4);
_7 = -_10;
_20 = !_14;
_9 = !_7;
_19 = 9223372036854775807_isize >> _1;
_17.fld3 = [_17.fld0.fld3.0,_17.fld0.fld1,_17.fld0.fld3.0];
_5 = _10;
_17.fld6 = _17.fld0.fld3.1;
_3 = [_17.fld5,_17.fld5,_17.fld5];
_17.fld0.fld1 = _7 as u16;
_17.fld0.fld3.0 = !_17.fld0.fld1;
_17.fld0.fld3.1 = _17.fld6 + _17.fld6;
match _14 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb4,
4 => bb12,
1336299339 => bb14,
_ => bb13
}
}
bb12 = {
_17.fld4 = !29887_i16;
_17.fld5 = (-2088265438_i32);
_17.fld1 = 13909982555870360107_u64;
_17.fld0.fld3.1 = !1874575731065551508_i64;
_13 = _6;
_17.fld5 = _13 as i32;
_6 = !_13;
_12 = !_13;
_17.fld2 = core::ptr::addr_of!(_17.fld0.fld1);
_3 = [_17.fld5,_17.fld5,_17.fld5];
_10 = _1 >> _1;
_8 = _3;
_9 = _11 as i8;
_17.fld0.fld3 = (25860_u16, (-4937288591299044611_i64), _17.fld4);
_8 = _3;
_17.fld6 = 124_u8 as i64;
_16 = _17.fld1 as f32;
_6 = _12 & _13;
_17.fld4 = _17.fld0.fld3.2;
_18.fld0 = core::ptr::addr_of!(_17.fld5);
match _17.fld1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
13909982555870360107 => bb11,
_ => bb10
}
}
bb13 = {
RET = 113675842698584669957371530461179645843_i128 as i32;
_4 = [1077861817_i32,1408375564_i32,160222900_i32];
_11 = '\u{2b313}';
RET = (-152335475057763057470402035758227005778_i128) as i32;
_3 = _4;
_13 = !_6;
_3 = [829657358_i32,(-1383066883_i32),596576271_i32];
_14 = 1336299339_u32;
_1 = _7 | _10;
_1 = !_7;
_11 = '\u{2ebe2}';
_17.fld7 = (-85_isize) as f32;
_17.fld3 = [37114_u16,40120_u16,3410_u16];
_8 = _4;
_17.fld3 = [62024_u16,32865_u16,28732_u16];
Goto(bb2)
}
bb14 = {
_21 = _19 + _19;
_15 = core::ptr::addr_of_mut!(_17.fld0.fld0);
_19 = 142_u8 as isize;
_16 = _10 as f32;
_17.fld0.fld3 = (_17.fld0.fld1, _17.fld6, _17.fld4);
_22.0 = _17.fld0.fld3.0 - _17.fld0.fld3.0;
_6 = !_13;
_20 = _14;
_17.fld0.fld3.1 = !_17.fld6;
RET = -_17.fld5;
_1 = _5 + _5;
_17.fld3 = [_17.fld0.fld1,_22.0,_22.0];
_1 = _7;
_19 = _21;
_27.fld3 = _10;
RET = _17.fld5 ^ _17.fld5;
_16 = _17.fld0.fld3.1 as f32;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(6_usize, 9_usize, Move(_9), 12_usize, Move(_12), 2_usize, Move(_2), 20_usize, Move(_20)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(6_usize, 11_usize, Move(_11), 22_usize, Move(_22), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(6_usize, 8_usize, Move(_8), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: i16,mut _2: u8,mut _3: u8,mut _4: bool,mut _5: i16,mut _6: i16,mut _7: bool,mut _8: i64,mut _9: bool,mut _10: bool,mut _11: i8,mut _12: bool,mut _13: u8) -> *const i64 {
mir! {
type RET = *const i64;
let _14: u64;
let _15: Adt53;
let _16: Adt48;
let _17: isize;
let _18: u8;
let _19: f64;
let _20: [i128; 7];
let _21: isize;
let _22: ((u128, u8),);
let _23: Adt57;
let _24: ((u128, u8),);
let _25: ();
let _26: ();
{
_1 = -_6;
RET = core::ptr::addr_of!(_8);
RET = core::ptr::addr_of!(_8);
_7 = !_4;
_10 = !_7;
_4 = !_7;
(*RET) = (-4751087062301957777_i64) + (-1809751797778005118_i64);
_2 = !_13;
_15.fld4 = [3653085583_u32,1383504274_u32,802619159_u32,978751224_u32,1250387997_u32,136321848_u32,2811455826_u32,1273161168_u32];
_15.fld1 = 171505879308531616023213388523254503810_u128 as u64;
_14 = _15.fld1;
_15.fld1 = _6 as u64;
_16.fld3 = (40344978700963294198991302915040924746_u128, _3);
(*RET) = 13746007928408834994_usize as i64;
_16.fld3.0 = 230997385063887987411979366015385052208_u128 / 173354855688750709631927104997354602528_u128;
_6 = _5;
_16.fld0 = core::ptr::addr_of!(_8);
_16.fld3.0 = _4 as u128;
(*RET) = -7005364662923668316_i64;
_16.fld4 = _11 as u128;
_14 = _15.fld1;
Goto(bb1)
}
bb1 = {
_15.fld3.2 = (-103_isize) as i16;
_16.fld2 = [_16.fld3.1,_16.fld3.1,_13];
RET = _16.fld0;
_9 = !_4;
_11 = (-50_i8) & 87_i8;
_15.fld0 = core::ptr::addr_of_mut!(_7);
_15.fld3.1 = -(*RET);
RET = core::ptr::addr_of!((*RET));
_15.fld3 = (6753_u16, _8, _6);
_1 = _6 >> _14;
_15.fld3.2 = (*RET) as i16;
(*RET) = _15.fld3.1 >> _16.fld3.1;
_12 = _6 <= _5;
(*RET) = _15.fld3.1 << _15.fld3.0;
_14 = _15.fld1 % 14232925037387366907_u64;
match _15.fld3.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6753 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_16.fld1 = [2135733036_u32,3041189935_u32,2505335526_u32,3511391319_u32,2865960531_u32,1239402746_u32,1128444011_u32];
_2 = !_3;
(*RET) = _15.fld3.1;
_10 = !_12;
_15.fld0 = core::ptr::addr_of_mut!(_10);
(*RET) = _15.fld3.1;
(*RET) = _15.fld3.1;
_16.fld3.0 = !_16.fld4;
_16.fld0 = core::ptr::addr_of!(_15.fld3.1);
_14 = _15.fld1;
_9 = _4 | _10;
(*RET) = _15.fld3.1;
(*RET) = !_15.fld3.1;
_15.fld3.1 = (*RET) + _8;
_4 = !_10;
_16.fld1 = [1880556944_u32,3954311844_u32,2501008562_u32,1734706901_u32,2159123387_u32,3884399629_u32,3073600679_u32];
_4 = _12;
(*RET) = (-9223372036854775808_isize) as i64;
_9 = _11 <= _11;
_16.fld0 = core::ptr::addr_of!(_15.fld3.1);
_9 = _16.fld4 >= _16.fld3.0;
_15.fld0 = core::ptr::addr_of_mut!(_4);
_8 = _15.fld3.1 >> _16.fld3.0;
match _15.fld3.0 {
0 => bb2,
1 => bb10,
2 => bb11,
6753 => bb13,
_ => bb12
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_5 = 2139138615_u32 as i16;
_16.fld3 = (_16.fld4, _2);
(*RET) = !_15.fld3.1;
_16.fld3.1 = '\u{f10b2}' as u8;
_17 = !9223372036854775807_isize;
_11 = !(-22_i8);
_17 = (-15_isize);
_9 = _10;
_16.fld4 = _16.fld3.0 & _16.fld3.0;
_19 = (-57112689_i32) as f64;
_6 = _1 & _1;
(*RET) = !_15.fld3.1;
match _17 {
340282366920938463463374607431768211441 => bb14,
_ => bb3
}
}
bb14 = {
_15.fld3 = (34782_u16, (*RET), _6);
_16.fld6 = core::ptr::addr_of!(_16.fld1);
_6 = _15.fld3.2;
_11 = 2004055051_u32 as i8;
_15.fld4 = [3389536925_u32,1949807617_u32,3382424222_u32,2311662288_u32,2398662255_u32,2102444761_u32,2530169435_u32,385180943_u32];
_15.fld3 = (32848_u16, (*RET), _1);
_5 = _6;
(*RET) = _15.fld3.1 << _5;
_4 = !_7;
_23.fld4 = _15.fld3.0 as u64;
(*RET) = _15.fld3.1 + _15.fld3.1;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(7_usize, 12_usize, Move(_12), 8_usize, Move(_8), 5_usize, Move(_5), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(7_usize, 2_usize, Move(_2), 1_usize, Move(_1), 11_usize, Move(_11), 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: bool,mut _2: [i32; 3]) -> ((*const i64, i16), *const i32) {
mir! {
type RET = ((*const i64, i16), *const i32);
let _3: (u16, i64, i16);
let _4: u16;
let _5: (i8, u32);
let _6: char;
let _7: i16;
let _8: f64;
let _9: *const u16;
let _10: [u32; 8];
let _11: ((u128, u8),);
let _12: Adt61;
let _13: (u128, u8);
let _14: isize;
let _15: bool;
let _16: Adt57;
let _17: (u16,);
let _18: Adt64;
let _19: (i8, u32);
let _20: Adt62;
let _21: f32;
let _22: (i8, u32);
let _23: (i32, u128, [u32; 7]);
let _24: [i32; 3];
let _25: isize;
let _26: isize;
let _27: [u16; 8];
let _28: [u8; 3];
let _29: i8;
let _30: f64;
let _31: isize;
let _32: usize;
let _33: [i64; 7];
let _34: f32;
let _35: ();
let _36: ();
{
RET.0.1 = (-4053_i16) + (-18836_i16);
_1 = false;
_1 = true < false;
_1 = !false;
_3.1 = !5623669428199394561_i64;
_3.0 = 29669_u16;
_3.2 = (-5073_i16);
_2 = [1673691675_i32,(-1349452238_i32),2042925383_i32];
_3.0 = _3.1 as u16;
RET.0.0 = core::ptr::addr_of!(_3.1);
RET.0.1 = _3.2;
RET.0.0 = core::ptr::addr_of!(_3.1);
RET.0.1 = _3.2 & _3.2;
Call(_3.2 = core::intrinsics::bswap((-6974_i16)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _3.0 % 29294_u16;
_5.0 = (-30_i8);
_2 = [(-1397393907_i32),261195297_i32,52690398_i32];
RET.0.0 = core::ptr::addr_of!(_3.1);
_7 = !_3.2;
_5.0 = '\u{827b9}' as i8;
_3 = (_4, 5205661743037831581_i64, _7);
_5 = ((-101_i8), 4030357243_u32);
_6 = '\u{103945}';
_2 = [877300818_i32,1052406132_i32,(-809531740_i32)];
RET.0.1 = _3.2;
_3.1 = 1995882412651348807_i64;
_3.1 = _7 as i64;
Goto(bb2)
}
bb2 = {
RET.0.0 = core::ptr::addr_of!(_3.1);
_3.0 = !_4;
RET.0.0 = core::ptr::addr_of!(_3.1);
_10 = [_5.1,_5.1,_5.1,_5.1,_5.1,_5.1,_5.1,_5.1];
RET.0.0 = core::ptr::addr_of!(_3.1);
_5 = (3_i8, 301475767_u32);
_3.2 = _7;
RET.0.0 = core::ptr::addr_of!(_3.1);
_8 = 8390303438633333221_usize as f64;
_11.0 = (289533284984215026414919910749572677676_u128, 111_u8);
_3.0 = _4;
_5 = (105_i8, 1257610892_u32);
RET.0.1 = -_3.2;
_4 = !_3.0;
_13.0 = _11.0.0 | _11.0.0;
_15 = _5.1 == _5.1;
_16.fld0 = _11.0.0;
_16.fld2.0 = [_4,_3.0,_3.0];
_3.0 = _4;
Goto(bb3)
}
bb3 = {
_11.0.1 = 121_u8;
_4 = _3.0 / 47632_u16;
_3.0 = _1 as u16;
_18.fld0.fld4 = (_5.0, _5.1);
_3.2 = !_7;
_16.fld5.0 = _7 as u16;
_18.fld2 = [55516586786571687500743947552387398935_i128,25701442591666142982060425673655579320_i128,(-123719105647123285636607402690194608415_i128),77997617128225105186256104413282202548_i128,(-162759066221648167766702267390198665193_i128),(-74074772035360812481233881267737027264_i128),8607471139668227380848741697355704495_i128];
_16.fld5.1 = _3.1 >> _13.0;
_18.fld3.3 = [_18.fld0.fld4.1,_18.fld0.fld4.1,_5.1,_5.1,_5.1,_5.1,_5.1];
_18.fld3.0.0 = _4 << _3.2;
_13.1 = !_11.0.1;
_16.fld5.1 = -_3.1;
_19.0 = _18.fld0.fld4.0 | _5.0;
_16.fld2.1 = [_3.1,_3.1,_3.1,_16.fld5.1,_3.1,_16.fld5.1,_16.fld5.1];
_20.fld4.fld1.0 = (_16.fld0, _13.1);
_10 = [_18.fld0.fld4.1,_5.1,_5.1,_18.fld0.fld4.1,_5.1,_5.1,_5.1,_5.1];
_17 = (_18.fld3.0.0,);
_20.fld3.fld2 = core::ptr::addr_of!(_20.fld5.2);
_2 = [841202957_i32,1519824125_i32,860657559_i32];
match _11.0.0 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
289533284984215026414919910749572677676 => bb10,
_ => bb9
}
}
bb4 = {
RET.0.0 = core::ptr::addr_of!(_3.1);
_3.0 = !_4;
RET.0.0 = core::ptr::addr_of!(_3.1);
_10 = [_5.1,_5.1,_5.1,_5.1,_5.1,_5.1,_5.1,_5.1];
RET.0.0 = core::ptr::addr_of!(_3.1);
_5 = (3_i8, 301475767_u32);
_3.2 = _7;
RET.0.0 = core::ptr::addr_of!(_3.1);
_8 = 8390303438633333221_usize as f64;
_11.0 = (289533284984215026414919910749572677676_u128, 111_u8);
_3.0 = _4;
_5 = (105_i8, 1257610892_u32);
RET.0.1 = -_3.2;
_4 = !_3.0;
_13.0 = _11.0.0 | _11.0.0;
_15 = _5.1 == _5.1;
_16.fld0 = _11.0.0;
_16.fld2.0 = [_4,_3.0,_3.0];
_3.0 = _4;
Goto(bb3)
}
bb5 = {
_4 = _3.0 % 29294_u16;
_5.0 = (-30_i8);
_2 = [(-1397393907_i32),261195297_i32,52690398_i32];
RET.0.0 = core::ptr::addr_of!(_3.1);
_7 = !_3.2;
_5.0 = '\u{827b9}' as i8;
_3 = (_4, 5205661743037831581_i64, _7);
_5 = ((-101_i8), 4030357243_u32);
_6 = '\u{103945}';
_2 = [877300818_i32,1052406132_i32,(-809531740_i32)];
RET.0.1 = _3.2;
_3.1 = 1995882412651348807_i64;
_3.1 = _7 as i64;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_18.fld0.fld0 = core::ptr::addr_of_mut!(_20.fld4.fld0);
_20.fld4.fld0 = 75974512878635097334424244903956375676_i128 ^ 46136709550693498804333615751446169734_i128;
_16.fld3 = _5.0 * _5.0;
_20.fld1.fld5.2 = _3.2;
_20.fld5 = (380659961_i32, _20.fld4.fld1.0.0, _18.fld3.3);
_19.0 = _16.fld3;
_17 = (_18.fld3.0.0,);
_9 = core::ptr::addr_of!(_17.0);
Call(_18.fld0.fld3 = fn9(_20.fld5.0, _20.fld4.fld1, _16.fld5.0, _16.fld2.1, _18.fld3.0.0, _5, _20.fld4.fld1.0, _16.fld2, _18.fld3.3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_16.fld5.0 = _4 - _18.fld3.0.0;
_20.fld1.fld5.0 = _16.fld5.0;
_20.fld5.2 = [_18.fld0.fld4.1,_5.1,_5.1,_5.1,_5.1,_5.1,_18.fld0.fld4.1];
_3.0 = !_20.fld1.fld5.0;
_22 = _5;
_20.fld3.fld1 = _16.fld5.0;
_24 = [_20.fld5.0,_20.fld5.0,_20.fld5.0];
_23 = (_20.fld5.0, _20.fld5.1, _20.fld5.2);
_20.fld3.fld3.0 = _8 as u16;
_15 = _1;
_18.fld0.fld2 = _11;
_20.fld3.fld0 = core::ptr::addr_of!(_8);
_20.fld3.fld3.2 = _20.fld1.fld5.2;
Goto(bb12)
}
bb12 = {
_20.fld4.fld3 = (*_9);
_20.fld4.fld3 = (*_9);
_20.fld1.fld5.0 = !_4;
_20.fld1.fld5.1 = _8 as i64;
_20.fld1.fld7 = [_16.fld5.1,_20.fld1.fld5.1,_16.fld5.1,_20.fld1.fld5.1,_3.1,_16.fld5.1,_20.fld1.fld5.1];
_16.fld1 = _6;
_10 = [_18.fld0.fld4.1,_18.fld0.fld4.1,_18.fld0.fld4.1,_22.1,_22.1,_22.1,_5.1,_5.1];
_20.fld1.fld1 = _6;
RET.0.1 = !_7;
_18.fld3.1 = core::ptr::addr_of!(_23.0);
RET.0.1 = !_20.fld1.fld5.2;
_4 = _23.0 as u16;
_19.0 = !_16.fld3;
_16.fld0 = _18.fld0.fld2.0.0 / 232631943296597242174048518356691293029_u128;
_20.fld1.fld4 = 12124808103177438917_u64;
_20.fld1.fld1 = _16.fld1;
_20.fld6 = core::ptr::addr_of!(_3);
_20.fld4.fld6 = [_16.fld5.1,_3.1,_3.1,_3.1,_3.1,_16.fld5.1,_3.1];
Goto(bb13)
}
bb13 = {
_20.fld3.fld2 = core::ptr::addr_of!(_18.fld3.3);
_19 = (_16.fld3, _22.1);
_13 = _11.0;
_20.fld0 = _18.fld3.3;
_24 = [_20.fld5.0,_20.fld5.0,_23.0];
_18.fld3.3 = [_18.fld0.fld4.1,_5.1,_22.1,_22.1,_19.1,_5.1,_18.fld0.fld4.1];
_12.fld0 = core::ptr::addr_of!(_20.fld5.0);
_18.fld3.0.2 = -_20.fld3.fld3.2;
_16.fld4 = !_20.fld1.fld4;
Goto(bb14)
}
bb14 = {
_16.fld5.2 = _20.fld3.fld3.2 * _3.2;
_23.0 = _20.fld5.0;
match _5.1 {
0 => bb5,
1 => bb2,
2 => bb7,
3 => bb4,
1257610892 => bb16,
_ => bb15
}
}
bb15 = {
Return()
}
bb16 = {
_5.0 = _15 as i8;
_18.fld3.1 = core::ptr::addr_of!(_20.fld5.0);
match _18.fld0.fld4.1 {
1257610892 => bb18,
_ => bb17
}
}
bb17 = {
_16.fld5.2 = _20.fld3.fld3.2 * _3.2;
_23.0 = _20.fld5.0;
match _5.1 {
0 => bb5,
1 => bb2,
2 => bb7,
3 => bb4,
1257610892 => bb16,
_ => bb15
}
}
bb18 = {
_20.fld3.fld3 = _16.fld5;
_22 = (_16.fld3, _5.1);
_18.fld3.0.1 = _3.1 << _20.fld3.fld1;
_13 = (_18.fld0.fld2.0.0, _11.0.1);
_26 = (-37_isize);
_16.fld7 = [_20.fld3.fld3.1,_20.fld1.fld5.1,_20.fld3.fld3.1,_3.1,_16.fld5.1,_18.fld3.0.1,_18.fld3.0.1];
_20.fld3.fld3 = (_16.fld5.0, _18.fld3.0.1, _18.fld3.0.2);
_18.fld0.fld5 = _18.fld3.0.1;
_18.fld0.fld1 = _18.fld0.fld4.1;
RET.1 = core::ptr::addr_of!(_23.0);
_13 = (_16.fld0, _20.fld4.fld1.0.1);
_16.fld6 = _16.fld5.1;
_13.0 = _16.fld0 * _16.fld0;
_20.fld4.fld1.0.1 = !_11.0.1;
_20.fld1.fld4 = _19.0 as u64;
_20.fld4.fld4 = _20.fld4.fld1.0.0 as i16;
_13 = (_11.0.0, _18.fld0.fld2.0.1);
_10 = [_19.1,_19.1,_19.1,_5.1,_18.fld0.fld1,_19.1,_22.1,_19.1];
_18.fld3.3 = _20.fld0;
_18.fld3.0.2 = _22.0 as i16;
_20.fld1.fld2 = _16.fld2;
_11 = (_20.fld4.fld1.0,);
_18.fld0.fld3 = core::ptr::addr_of_mut!(_21);
Goto(bb19)
}
bb19 = {
Call(_35 = dump_var(8_usize, 19_usize, Move(_19), 24_usize, Move(_24), 4_usize, Move(_4), 22_usize, Move(_22)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_35 = dump_var(8_usize, 6_usize, Move(_6), 5_usize, Move(_5), 15_usize, Move(_15), 3_usize, Move(_3)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: i32,mut _2: ((u128, u8),),mut _3: u16,mut _4: [i64; 7],mut _5: u16,mut _6: (i8, u32),mut _7: (u128, u8),mut _8: ([u16; 3], [i64; 7]),mut _9: [u32; 7]) -> *mut f32 {
mir! {
type RET = *mut f32;
let _10: Adt56;
let _11: isize;
let _12: u32;
let _13: isize;
let _14: Adt59;
let _15: u64;
let _16: i64;
let _17: ((u128, u8),);
let _18: [u16; 8];
let _19: f64;
let _20: *const u16;
let _21: [u32; 7];
let _22: *const u16;
let _23: isize;
let _24: [u16; 8];
let _25: i16;
let _26: [i32; 3];
let _27: Adt48;
let _28: isize;
let _29: char;
let _30: ((u128, u8),);
let _31: ();
let _32: ();
{
_3 = _5 + _5;
_6 = (66_i8, 890669005_u32);
_4 = [4747493227932089309_i64,5957491926073402423_i64,4502816062276106015_i64,6501587092784906332_i64,3351641150409742942_i64,3231454208841503970_i64,(-1962256966309041063_i64)];
_2.0.1 = _7.1;
_8.0 = [_5,_3,_3];
_5 = _3;
_10.fld6.4 = 9471471894516222753_u64 as u16;
_10.fld7.fld3 = (_7.0, _2.0.1);
_10.fld4 = _3;
_4 = [(-580992992702403080_i64),(-286314534155776430_i64),5016154191326868627_i64,(-8616437499589054712_i64),7971573510944159439_i64,(-48458052679911239_i64),(-4183418803482009257_i64)];
_4 = _8.1;
_10.fld7.fld1 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_10.fld3 = _6.0 * _6.0;
_10.fld2 = (_10.fld4,);
_8.1 = _4;
_6.0 = _10.fld3 - _10.fld3;
_10.fld6.1 = '\u{b0443}';
Goto(bb1)
}
bb1 = {
_10.fld7.fld3.0 = (-123656276760580607946007554747358264519_i128) as u128;
_10.fld7.fld1 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_11 = false as isize;
_10.fld7.fld3 = (_7.0, _7.1);
_9 = _10.fld7.fld1;
_10.fld2.0 = _11 as u16;
_11 = (-9223372036854775808_isize);
_10.fld2 = (_10.fld4,);
_9 = _10.fld7.fld1;
_9 = _10.fld7.fld1;
_10.fld7.fld1 = _9;
_15 = !1917186677244859777_u64;
_10.fld7.fld6 = core::ptr::addr_of!(_14.fld1.fld0.2);
_10.fld5 = false as i32;
_14.fld1.fld0.2 = _10.fld7.fld1;
_14.fld1.fld0.2 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_2.0.1 = _7.1 >> _10.fld4;
_14.fld1.fld2 = (_5,);
match _2.0.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
289533284984215026414919910749572677676 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_10.fld7.fld4 = _10.fld7.fld3.0;
RET = core::ptr::addr_of_mut!(_14.fld0);
_15 = (-18016_i16) as u64;
_10.fld7.fld2 = [_2.0.1,_2.0.1,_2.0.1];
_8.0 = [_3,_3,_5];
_14.fld0 = _2.0.1 as f32;
_10.fld7.fld3.0 = _2.0.0 - _10.fld7.fld4;
_12 = _6.1;
_2.0 = _7;
_6.0 = 8489379775617126289_usize as i8;
_13 = _11;
_4 = _8.1;
_10.fld7.fld2 = [_7.1,_10.fld7.fld3.1,_7.1];
_10.fld7.fld3 = (_7.0, _2.0.1);
_10.fld2 = (_5,);
_16 = -(-6252880446063794271_i64);
_2 = (_10.fld7.fld3,);
_2.0.1 = _14.fld0 as u8;
_14.fld0 = _13 as f32;
(*RET) = 15717_i16 as f32;
match _7.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
289533284984215026414919910749572677676 => bb9,
_ => bb5
}
}
bb9 = {
_14.fld1.fld0.0 = false as i32;
_13 = _10.fld3 as isize;
_14.fld1.fld0 = (_1, _10.fld7.fld4, _9);
_18 = [_14.fld1.fld2.0,_14.fld1.fld2.0,_5,_5,_3,_10.fld4,_3,_10.fld4];
_14.fld1.fld2 = (_10.fld6.4,);
_14.fld0 = _16 as f32;
_10.fld6.2 = [_16,_16,_16,_16,_16,_16,_16];
_10.fld6.0 = core::ptr::addr_of!(_16);
_10.fld6.4 = _3 * _10.fld2.0;
_6.0 = _10.fld3;
_10.fld7.fld0 = core::ptr::addr_of!(_16);
_10.fld6.4 = _10.fld2.0;
_6 = (_10.fld3, _12);
_6 = (_10.fld3, _12);
_7.0 = _10.fld7.fld3.0 | _2.0.0;
_19 = _3 as f64;
_2.0.1 = !_10.fld7.fld3.1;
_10.fld7.fld3.0 = !_7.0;
_6.1 = _12 / 2876858473_u32;
match _2.0.0 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
289533284984215026414919910749572677676 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_17.0 = (_2.0.0, _2.0.1);
_17.0.0 = _14.fld1.fld0.1 ^ _10.fld7.fld4;
_10.fld7.fld0 = _10.fld6.0;
_14.fld1.fld1 = (-107363433522804157058265034231989407295_i128);
_10.fld2 = _14.fld1.fld2;
_14.fld0 = _16 as f32;
_17.0 = _10.fld7.fld3;
_2.0.1 = _7.1;
_10.fld6.1 = '\u{d3c72}';
_4 = [_16,_16,_16,_16,_16,_16,_16];
_17 = (_7,);
_1 = _10.fld5 ^ _14.fld1.fld0.0;
_14.fld0 = 6_usize as f32;
_6.1 = _12 >> _3;
_6 = (_10.fld3, _12);
_13 = _11 & _11;
_3 = !_10.fld6.4;
_10.fld2.0 = _10.fld6.4;
_22 = core::ptr::addr_of!(_10.fld2.0);
match _14.fld1.fld0.0 {
0 => bb1,
380659961 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_23 = _13 * _11;
_2.0.0 = 1_usize as u128;
_19 = _14.fld0 as f64;
_10.fld7.fld6 = core::ptr::addr_of!(_9);
_6.1 = _12;
_1 = _10.fld5 - _14.fld1.fld0.0;
_14.fld1.fld0.0 = _17.0.0 as i32;
(*RET) = _16 as f32;
_9 = _14.fld1.fld0.2;
_6.0 = _10.fld3;
_7.1 = _10.fld7.fld3.1 - _10.fld7.fld3.1;
_20 = _22;
_17.0.0 = _7.0;
_17.0.0 = !_10.fld7.fld3.0;
_10.fld6.3 = core::ptr::addr_of!(_1);
Goto(bb14)
}
bb14 = {
_10.fld7.fld3.0 = !_7.0;
_27.fld6 = core::ptr::addr_of!(_21);
_10.fld3 = _6.0;
_4 = [_16,_16,_16,_16,_16,_16,_16];
_25 = 5838_i16 & (-10145_i16);
_24 = [(*_22),_5,_5,(*_22),(*_20),(*_20),_10.fld4,_10.fld4];
_17.0 = _10.fld7.fld3;
_14.fld1.fld0 = (_1, _2.0.0, _10.fld7.fld1);
_14.fld1.fld0.2 = [_6.1,_6.1,_6.1,_12,_6.1,_12,_6.1];
_17.0.0 = _10.fld6.4 as u128;
(*RET) = _12 as f32;
_27.fld3 = _17.0;
_14.fld1.fld0 = (_1, _7.0, _10.fld7.fld1);
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(9_usize, 13_usize, Move(_13), 9_usize, Move(_9), 25_usize, Move(_25), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(9_usize, 17_usize, Move(_17), 15_usize, Move(_15), 24_usize, Move(_24), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(9_usize, 8_usize, Move(_8), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: *const [u32; 7],mut _2: ((*const i64, i16), *const i32),mut _3: *const f64,mut _4: *const i64,mut _5: bool,mut _6: i64,mut _7: f32,mut _8: i16,mut _9: f64,mut _10: *const [u32; 7],mut _11: i64,mut _12: isize,mut _13: bool) -> *const i32 {
mir! {
type RET = *const i32;
let _14: f64;
let _15: Adt50;
let _16: i64;
let _17: i128;
let _18: isize;
let _19: [u16; 3];
let _20: [u32; 7];
let _21: bool;
let _22: *const f64;
let _23: Adt62;
let _24: f64;
let _25: ();
let _26: ();
{
(*_3) = -_9;
_2.0.1 = _8 | _8;
RET = _2.1;
_7 = (-2053017909_i32) as f32;
_5 = !_13;
_2.0.0 = _4;
_3 = core::ptr::addr_of!(_14);
_6 = _9 as i64;
(*_1) = [1086865868_u32,2756918917_u32,3051327988_u32,594637904_u32,1162802200_u32,1254645995_u32,3535800323_u32];
(*_3) = _12 as f64;
_9 = (*_3);
_15.fld1 = 211_u8 as i128;
_11 = _6;
(*_3) = (-1467080878_i32) as f64;
_2.0.1 = -_8;
_15.fld2 = (63031_u16,);
RET = _2.1;
_15.fld0.1 = _15.fld1 as u128;
_15.fld0.2 = [3443436891_u32,336482833_u32,1532097085_u32,1871156048_u32,2368053146_u32,2641574099_u32,4004483339_u32];
_9 = -(*_3);
_15.fld0 = (187552627_i32, 164813863289354309119681337605335462034_u128, (*_1));
_17 = !_15.fld1;
match _15.fld0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
164813863289354309119681337605335462034 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_5 = _13;
(*_3) = -_9;
RET = core::ptr::addr_of!(_15.fld0.0);
match _15.fld0.1 {
0 => bb7,
1 => bb2,
2 => bb5,
3 => bb6,
164813863289354309119681337605335462034 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_2.0.0 = _4;
_15.fld0.1 = 231957283041809869977214746041845418490_u128;
RET = core::ptr::addr_of!((*RET));
_2.0.0 = core::ptr::addr_of!(_16);
_15.fld0.0 = 1966596540_i32;
_15.fld2 = (13797_u16,);
_4 = core::ptr::addr_of!(_16);
_18 = _12 ^ _12;
_8 = '\u{76a27}' as i16;
(*_4) = _6 >> _8;
_15.fld2 = (53752_u16,);
_15.fld0 = ((-279796254_i32), 245211177565850608770404502581359030298_u128, (*_1));
_2.1 = core::ptr::addr_of!((*RET));
(*_10) = [335543745_u32,3612324436_u32,3526301859_u32,4040138713_u32,3659000818_u32,2601763399_u32,2888511924_u32];
_19 = [_15.fld2.0,_15.fld2.0,_15.fld2.0];
_17 = !_15.fld1;
_15.fld1 = _17;
RET = core::ptr::addr_of!((*RET));
_15.fld2 = (6769_u16,);
match _15.fld0.0 {
0 => bb9,
1 => bb6,
2 => bb3,
3 => bb5,
340282366920938463463374607431488415202 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
RET = core::ptr::addr_of!(_15.fld0.0);
(*_3) = _9 + _9;
_15.fld0.2 = [1211843072_u32,4114588591_u32,3534457208_u32,2312261952_u32,3849779118_u32,2813345103_u32,2619918715_u32];
_7 = 147_u8 as f32;
(*_3) = _9 - _9;
(*RET) = -1913573849_i32;
_15.fld0.2 = (*_10);
_2.0.0 = _4;
_2.0.1 = 6_usize as i16;
_4 = core::ptr::addr_of!(_16);
_15.fld0 = (8256361_i32, 149348280038401816519117553436342940643_u128, (*_1));
_12 = _18 | _18;
_15.fld0 = ((-1378563686_i32), 339081153410932699514550225336531163044_u128, (*_1));
(*RET) = -(-1548516084_i32);
(*_10) = [2724804679_u32,1783684853_u32,4292228790_u32,230905552_u32,244855637_u32,3968374538_u32,3974249791_u32];
(*RET) = (-65839973_i32);
(*_4) = _8 as i64;
_13 = !_5;
_15.fld2.0 = !53402_u16;
_15.fld2 = (27710_u16,);
_15.fld0.1 = 95_u8 as u128;
RET = core::ptr::addr_of!((*RET));
(*_4) = !_6;
_19 = [_15.fld2.0,_15.fld2.0,_15.fld2.0];
(*_3) = 3672825104_u32 as f64;
_5 = _2.0.1 == _8;
_23.fld3.fld3.2 = -_2.0.1;
Goto(bb14)
}
bb14 = {
(*_4) = _11 + _11;
_22 = core::ptr::addr_of!((*_3));
_21 = _13;
_23.fld1.fld3 = (-5_i8);
_23.fld0 = (*_10);
(*_4) = _6 >> _12;
_23.fld5 = ((*RET), _15.fld0.1, (*_10));
_23.fld1.fld2.0 = [_15.fld2.0,_15.fld2.0,_15.fld2.0];
_23.fld1.fld7 = [_16,(*_4),_16,_16,(*_4),_16,_16];
_23.fld1.fld2.1 = [_16,(*_4),(*_4),(*_4),_16,(*_4),(*_4)];
_23.fld3.fld3 = (_15.fld2.0, (*_4), _2.0.1);
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(10_usize, 16_usize, Move(_16), 6_usize, Move(_6), 13_usize, Move(_13), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(10_usize, 19_usize, Move(_19), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: u8,mut _2: isize,mut _3: (i32, u128, [u32; 7]),mut _4: [u32; 7],mut _5: u128,mut _6: *const [u32; 7],mut _7: u8,mut _8: *const i32,mut _9: *const i32,mut _10: [i32; 3],mut _11: u8,mut _12: *const i32,mut _13: Adt61,mut _14: *const i32,mut _15: bool,mut _16: u64) -> (u16, i64, i16) {
mir! {
type RET = (u16, i64, i16);
let _17: u32;
let _18: Adt48;
let _19: isize;
let _20: isize;
let _21: Adt50;
let _22: f32;
let _23: Adt48;
let _24: (u128, u8);
let _25: usize;
let _26: [u8; 3];
let _27: ([u16; 3], [i64; 7]);
let _28: char;
let _29: u64;
let _30: [i128; 7];
let _31: ((*const i64, i16), *const i32);
let _32: u64;
let _33: f64;
let _34: f32;
let _35: [i128; 7];
let _36: f32;
let _37: Adt55;
let _38: Adt61;
let _39: ();
let _40: ();
{
RET.0 = 32704_u16 << _11;
_12 = core::ptr::addr_of!(_3.0);
_8 = _14;
_13.fld0 = core::ptr::addr_of!(_3.0);
(*_12) = (-1471655262_i32) << _7;
_14 = core::ptr::addr_of!(_3.0);
RET.1 = _16 as i64;
_1 = 516508361_u32 as u8;
_16 = 9405217101384144578_u64 | 530785349338346157_u64;
_7 = 5_usize as u8;
_8 = core::ptr::addr_of!((*_14));
_1 = 3990193621_u32 as u8;
_2 = -98_isize;
RET = (11318_u16, 1284334005103366889_i64, 28579_i16);
(*_12) = (-1342988144_i32) * 796043853_i32;
RET.0 = !28589_u16;
(*_6) = [408234215_u32,3066246327_u32,4199400858_u32,3042107759_u32,1972873468_u32,2724344395_u32,283676977_u32];
_13 = Adt61 { fld0: _8 };
RET.0 = 36111_u16;
RET.0 = 24280_u16;
RET.0 = (-18_i8) as u16;
_11 = !_7;
RET.1 = -3111884713044051439_i64;
_13.fld0 = core::ptr::addr_of!((*_8));
_18.fld2 = [_1,_11,_1];
_14 = _12;
RET.1 = (-7830583660711053064_i64) | (-1563636247909087695_i64);
Goto(bb1)
}
bb1 = {
(*_14) = (-360979132_i32) << _11;
_20 = _2;
_21.fld0.2 = [648750185_u32,2354701255_u32,699798207_u32,1687076260_u32,4235117797_u32,4118614656_u32,702547897_u32];
_21.fld2.0 = 1006216245435645381_usize as u16;
_18.fld4 = (*_14) as u128;
(*_14) = 299908556_i32;
_13 = Adt61 { fld0: _8 };
RET.1 = (-3890_i16) as i64;
_2 = _20 << _21.fld2.0;
(*_12) = 5329650651593221930_i64 as i32;
_21.fld1 = (-94634423239553975982762027488989735336_i128) - (-29644618117332643370773124442889531350_i128);
(*_6) = [24023057_u32,334102713_u32,179707107_u32,205915907_u32,4237444926_u32,753633228_u32,2911319839_u32];
_21.fld2 = (8262_u16,);
RET.1 = !(-8311164865349092016_i64);
_21.fld0 = _3;
_21.fld2 = (41297_u16,);
_19 = !_2;
RET.2 = 9387_i16 | (-19330_i16);
match _21.fld2.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
41297 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_7 = _11 * _1;
(*_8) = _21.fld0.0 - _21.fld0.0;
_12 = _9;
_3.0 = 18040882611752292509_usize as i32;
(*_14) = _21.fld0.0;
_9 = core::ptr::addr_of!((*_8));
_23.fld6 = core::ptr::addr_of!(_23.fld1);
_17 = !731282751_u32;
_18.fld6 = core::ptr::addr_of!(_4);
RET.2 = (-4174_i16) + (-14311_i16);
_26 = [_11,_7,_1];
_12 = _9;
_22 = (-26830_i16) as f32;
_24 = (_5, _1);
_18.fld3 = (_18.fld4, _24.1);
_18.fld1 = (*_6);
RET.2 = 10942_i16 << _18.fld4;
match _21.fld2.0 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb6,
41297 => bb11,
_ => bb5
}
}
bb11 = {
RET.2 = 6139_i16 << (*_14);
_18.fld3.1 = _11 % 61_u8;
_29 = !_16;
_2 = _22 as isize;
_23.fld1 = (*_6);
_20 = _19;
_10 = [(*_8),(*_12),_3.0];
_23.fld3.0 = _24.0;
_24 = (_23.fld3.0, _18.fld3.1);
_26 = [_18.fld3.1,_7,_1];
_23.fld3.0 = _18.fld4 % 265812282942922504944512863188533507591_u128;
_23.fld4 = _17 as u128;
_18.fld4 = _24.0;
_18.fld4 = !_24.0;
_14 = core::ptr::addr_of!((*_9));
match _21.fld2.0 {
0 => bb4,
41297 => bb12,
_ => bb7
}
}
bb12 = {
_24 = (_5, _1);
(*_14) = _21.fld0.0 + _21.fld0.0;
_18.fld3.0 = _18.fld4;
_23.fld6 = _6;
_29 = _16;
_27.1 = [7725663748296155575_i64,(-2975668022803413085_i64),8748374719604008794_i64,(-5223431264376851899_i64),4277474532000398703_i64,(-5707001596901421402_i64),(-4244856340940580362_i64)];
_23.fld3 = (_3.1, _7);
RET.0 = _21.fld2.0 / 5028_u16;
RET.1 = -(-810800040536851531_i64);
_27.0 = [_21.fld2.0,_21.fld2.0,_21.fld2.0];
_13.fld0 = _14;
RET.2 = -24779_i16;
_24.0 = _18.fld3.0 << _5;
_21.fld0.0 = 8222881724754314458_usize as i32;
_23.fld2 = [_7,_1,_7];
_23.fld1 = [_17,_17,_17,_17,_17,_17,_17];
_21.fld1 = 3_usize as i128;
_27.1 = [(-3267612867773524634_i64),(-2398977213938042343_i64),5368121517759544665_i64,3739031326205833199_i64,(-4333581161494103228_i64),7239247307688808144_i64,3954116065090452198_i64];
_20 = '\u{bcf40}' as isize;
Goto(bb13)
}
bb13 = {
_17 = 2099675178_u32;
_3.2 = [_17,_17,_17,_17,_17,_17,_17];
Call(_23.fld3 = fn12(_13, _2, _19, _10, _19, _12, _18.fld6, (*_12), _20, _11, _3.2, (*_6), _21, _3.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_3.2 = _21.fld0.2;
_3.1 = _17 as u128;
_13 = Adt61 { fld0: _8 };
(*_6) = [_17,_17,_17,_17,_17,_17,_17];
_24 = (_18.fld4, _23.fld3.1);
_21.fld2.0 = !22511_u16;
_31.1 = _12;
_18.fld3 = (_24.0, _23.fld3.1);
_32 = _16;
_16 = 8205752361851841532_i64 as u64;
_9 = _14;
_17 = 14825473236300502178_usize as u32;
_27.0 = [_21.fld2.0,_21.fld2.0,_21.fld2.0];
(*_9) = _21.fld0.0 >> _19;
(*_9) = !_21.fld0.0;
(*_14) = _21.fld0.0 | _21.fld0.0;
RET = (_21.fld2.0, 7869640075479067357_i64, 4942_i16);
_11 = _15 as u8;
_31.0.1 = 9251_i16 * 17403_i16;
RET.1 = (-8538234961731603446_i64);
_32 = _16;
_33 = _19 as f64;
(*_14) = _21.fld0.0 | _21.fld0.0;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(11_usize, 29_usize, Move(_29), 24_usize, Move(_24), 20_usize, Move(_20), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(11_usize, 4_usize, Move(_4), 32_usize, Move(_32), 15_usize, Move(_15), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(11_usize, 5_usize, Move(_5), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: Adt61,mut _2: isize,mut _3: isize,mut _4: [i32; 3],mut _5: isize,mut _6: *const i32,mut _7: *const [u32; 7],mut _8: i32,mut _9: isize,mut _10: u8,mut _11: [u32; 7],mut _12: [u32; 7],mut _13: Adt50,mut _14: i32) -> (u128, u8) {
mir! {
type RET = (u128, u8);
let _15: isize;
let _16: (i8, u32);
let _17: char;
let _18: u64;
let _19: [u32; 8];
let _20: ([u16; 3], [i64; 7]);
let _21: char;
let _22: (u16, i64, i16);
let _23: u32;
let _24: f64;
let _25: bool;
let _26: *const bool;
let _27: f64;
let _28: ();
let _29: ();
{
(*_6) = _14;
_15 = _10 as isize;
_6 = core::ptr::addr_of!(_8);
_12 = [56191600_u32,314088041_u32,3564387786_u32,1695155411_u32,2633782047_u32,3571893712_u32,3015445867_u32];
RET.1 = _10 & _10;
_15 = _3;
_7 = core::ptr::addr_of!((*_7));
RET.0 = !_13.fld0.1;
RET.1 = !_10;
_12 = [342076089_u32,2766299061_u32,2080702372_u32,370831390_u32,3276891664_u32,1371273168_u32,99495059_u32];
_3 = _2;
RET.0 = !_13.fld0.1;
Call(_2 = core::intrinsics::bswap(_3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = Adt61 { fld0: _6 };
_13.fld1 = 98_i8 as i128;
RET.0 = !_13.fld0.1;
_8 = (-4306794772912216881_i64) as i32;
_1.fld0 = core::ptr::addr_of!((*_6));
_4 = [_8,_13.fld0.0,(*_6)];
_2 = _5 - _5;
(*_7) = _13.fld0.2;
_7 = core::ptr::addr_of!((*_7));
_16.0 = !(-91_i8);
_5 = -_3;
_13.fld0 = (_8, 19221338259294094184505417610515759769_u128, _12);
_12 = _13.fld0.2;
_6 = _1.fld0;
Call(_1.fld0 = fn13(_5, _13.fld2, (*_6), (*_7), _11), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = [(*_6),_8,(*_6)];
_11 = [1024821747_u32,81100366_u32,3301883435_u32,2126563733_u32,1610789204_u32,3075129590_u32,2837228847_u32];
RET.0 = !_13.fld0.1;
_2 = false as isize;
_13.fld2 = (36277_u16,);
_13.fld0.1 = 236058332580103226486049067789764348427_u128;
RET = (_13.fld0.1, _10);
Call(RET.0 = core::intrinsics::transmute(_13.fld0.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = -_9;
_3 = _15;
RET = (_13.fld0.1, _10);
_11 = [25604267_u32,1856544644_u32,341900142_u32,2389215120_u32,979796685_u32,1093878884_u32,2321873302_u32];
_6 = core::ptr::addr_of!((*_6));
_16 = ((-124_i8), 799539172_u32);
_10 = !198_u8;
match _16.0 {
340282366920938463463374607431768211332 => bb5,
_ => bb4
}
}
bb4 = {
_1 = Adt61 { fld0: _6 };
_13.fld1 = 98_i8 as i128;
RET.0 = !_13.fld0.1;
_8 = (-4306794772912216881_i64) as i32;
_1.fld0 = core::ptr::addr_of!((*_6));
_4 = [_8,_13.fld0.0,(*_6)];
_2 = _5 - _5;
(*_7) = _13.fld0.2;
_7 = core::ptr::addr_of!((*_7));
_16.0 = !(-91_i8);
_5 = -_3;
_13.fld0 = (_8, 19221338259294094184505417610515759769_u128, _12);
_12 = _13.fld0.2;
_6 = _1.fld0;
Call(_1.fld0 = fn13(_5, _13.fld2, (*_6), (*_7), _11), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
_14 = (*_6) & (*_6);
_2 = _9 ^ _3;
_4 = [_14,(*_6),(*_6)];
_9 = _2 + _2;
_16.0 = -(-86_i8);
_17 = '\u{780a3}';
RET = (_13.fld0.1, _10);
_18 = _17 as u64;
_16 = ((-95_i8), 1377674417_u32);
_13.fld0 = (_14, 318105352877304555708930167324086745485_u128, _11);
RET.0 = _13.fld0.1 / 27447292390714063052213602950202413475_u128;
(*_6) = -_14;
_8 = _13.fld0.0;
_13.fld0.0 = -(*_6);
RET.0 = _13.fld0.1;
_1.fld0 = _6;
_12 = [_16.1,_16.1,_16.1,_16.1,_16.1,_16.1,_16.1];
_4 = [_13.fld0.0,(*_6),_14];
(*_6) = -_13.fld0.0;
_10 = 177_u8;
_13.fld0 = ((*_6), 72264486409466181284576193338269612263_u128, _11);
_13.fld0 = (_8, 253611813080847798325562587289650941859_u128, _11);
_13.fld1 = !17435013688429269983356136281427926128_i128;
_16.0 = 25_i8;
_6 = core::ptr::addr_of!(_13.fld0.0);
Goto(bb6)
}
bb6 = {
_19 = [_16.1,_16.1,_16.1,_16.1,_16.1,_16.1,_16.1,_16.1];
_16 = (52_i8, 3445728965_u32);
_18 = 3628535393577170810_u64;
RET.0 = _13.fld0.1 - _13.fld0.1;
_6 = core::ptr::addr_of!(_13.fld0.0);
_18 = !12989729965274846693_u64;
_13.fld0.0 = _8 | _14;
_15 = _9 ^ _9;
_20.1 = [(-5204301710291155727_i64),(-361330712541103220_i64),(-6130760002114288746_i64),3423985622826132160_i64,2377074210644064990_i64,(-6739913588435815671_i64),(-8311662071607931283_i64)];
_3 = _18 as isize;
RET.0 = _17 as u128;
_16 = ((-29_i8), 2270065832_u32);
_13.fld2 = (15901_u16,);
match _13.fld0.1 {
0 => bb1,
253611813080847798325562587289650941859 => bb8,
_ => bb7
}
}
bb7 = {
_1 = Adt61 { fld0: _6 };
_13.fld1 = 98_i8 as i128;
RET.0 = !_13.fld0.1;
_8 = (-4306794772912216881_i64) as i32;
_1.fld0 = core::ptr::addr_of!((*_6));
_4 = [_8,_13.fld0.0,(*_6)];
_2 = _5 - _5;
(*_7) = _13.fld0.2;
_7 = core::ptr::addr_of!((*_7));
_16.0 = !(-91_i8);
_5 = -_3;
_13.fld0 = (_8, 19221338259294094184505417610515759769_u128, _12);
_12 = _13.fld0.2;
_6 = _1.fld0;
Call(_1.fld0 = fn13(_5, _13.fld2, (*_6), (*_7), _11), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
_10 = 148_u8 / 214_u8;
_22.2 = 29476_i16 | 1489_i16;
_22.1 = 1122842816428038991_i64;
_23 = _13.fld2.0 as u32;
_22.0 = !_13.fld2.0;
_24 = _10 as f64;
_4 = [(*_6),_13.fld0.0,_13.fld0.0];
_13.fld0 = (_8, 131190095632839175128500886370718254677_u128, _12);
RET.0 = false as u128;
match _13.fld0.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb10,
131190095632839175128500886370718254677 => bb12,
_ => bb11
}
}
bb9 = {
_1 = Adt61 { fld0: _6 };
_13.fld1 = 98_i8 as i128;
RET.0 = !_13.fld0.1;
_8 = (-4306794772912216881_i64) as i32;
_1.fld0 = core::ptr::addr_of!((*_6));
_4 = [_8,_13.fld0.0,(*_6)];
_2 = _5 - _5;
(*_7) = _13.fld0.2;
_7 = core::ptr::addr_of!((*_7));
_16.0 = !(-91_i8);
_5 = -_3;
_13.fld0 = (_8, 19221338259294094184505417610515759769_u128, _12);
_12 = _13.fld0.2;
_6 = _1.fld0;
Call(_1.fld0 = fn13(_5, _13.fld2, (*_6), (*_7), _11), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_1 = Adt61 { fld0: _6 };
_13.fld1 = 98_i8 as i128;
RET.0 = !_13.fld0.1;
_8 = (-4306794772912216881_i64) as i32;
_1.fld0 = core::ptr::addr_of!((*_6));
_4 = [_8,_13.fld0.0,(*_6)];
_2 = _5 - _5;
(*_7) = _13.fld0.2;
_7 = core::ptr::addr_of!((*_7));
_16.0 = !(-91_i8);
_5 = -_3;
_13.fld0 = (_8, 19221338259294094184505417610515759769_u128, _12);
_12 = _13.fld0.2;
_6 = _1.fld0;
Call(_1.fld0 = fn13(_5, _13.fld2, (*_6), (*_7), _11), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_14 = (*_6) & (*_6);
_2 = _9 ^ _3;
_4 = [_14,(*_6),(*_6)];
_9 = _2 + _2;
_16.0 = -(-86_i8);
_17 = '\u{780a3}';
RET = (_13.fld0.1, _10);
_18 = _17 as u64;
_16 = ((-95_i8), 1377674417_u32);
_13.fld0 = (_14, 318105352877304555708930167324086745485_u128, _11);
RET.0 = _13.fld0.1 / 27447292390714063052213602950202413475_u128;
(*_6) = -_14;
_8 = _13.fld0.0;
_13.fld0.0 = -(*_6);
RET.0 = _13.fld0.1;
_1.fld0 = _6;
_12 = [_16.1,_16.1,_16.1,_16.1,_16.1,_16.1,_16.1];
_4 = [_13.fld0.0,(*_6),_14];
(*_6) = -_13.fld0.0;
_10 = 177_u8;
_13.fld0 = ((*_6), 72264486409466181284576193338269612263_u128, _11);
_13.fld0 = (_8, 253611813080847798325562587289650941859_u128, _11);
_13.fld1 = !17435013688429269983356136281427926128_i128;
_16.0 = 25_i8;
_6 = core::ptr::addr_of!(_13.fld0.0);
Goto(bb6)
}
bb12 = {
RET.0 = _13.fld0.1 + _13.fld0.1;
_16.1 = _23;
RET = (_13.fld0.1, _10);
RET.0 = _13.fld0.0 as u128;
_5 = _9;
_1 = Adt61 { fld0: _6 };
match _13.fld0.1 {
0 => bb9,
1 => bb5,
2 => bb13,
3 => bb14,
131190095632839175128500886370718254677 => bb16,
_ => bb15
}
}
bb13 = {
_14 = (*_6) & (*_6);
_2 = _9 ^ _3;
_4 = [_14,(*_6),(*_6)];
_9 = _2 + _2;
_16.0 = -(-86_i8);
_17 = '\u{780a3}';
RET = (_13.fld0.1, _10);
_18 = _17 as u64;
_16 = ((-95_i8), 1377674417_u32);
_13.fld0 = (_14, 318105352877304555708930167324086745485_u128, _11);
RET.0 = _13.fld0.1 / 27447292390714063052213602950202413475_u128;
(*_6) = -_14;
_8 = _13.fld0.0;
_13.fld0.0 = -(*_6);
RET.0 = _13.fld0.1;
_1.fld0 = _6;
_12 = [_16.1,_16.1,_16.1,_16.1,_16.1,_16.1,_16.1];
_4 = [_13.fld0.0,(*_6),_14];
(*_6) = -_13.fld0.0;
_10 = 177_u8;
_13.fld0 = ((*_6), 72264486409466181284576193338269612263_u128, _11);
_13.fld0 = (_8, 253611813080847798325562587289650941859_u128, _11);
_13.fld1 = !17435013688429269983356136281427926128_i128;
_16.0 = 25_i8;
_6 = core::ptr::addr_of!(_13.fld0.0);
Goto(bb6)
}
bb14 = {
_1 = Adt61 { fld0: _6 };
_13.fld1 = 98_i8 as i128;
RET.0 = !_13.fld0.1;
_8 = (-4306794772912216881_i64) as i32;
_1.fld0 = core::ptr::addr_of!((*_6));
_4 = [_8,_13.fld0.0,(*_6)];
_2 = _5 - _5;
(*_7) = _13.fld0.2;
_7 = core::ptr::addr_of!((*_7));
_16.0 = !(-91_i8);
_5 = -_3;
_13.fld0 = (_8, 19221338259294094184505417610515759769_u128, _12);
_12 = _13.fld0.2;
_6 = _1.fld0;
Call(_1.fld0 = fn13(_5, _13.fld2, (*_6), (*_7), _11), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_14 = (*_6) & (*_6);
_2 = _9 ^ _3;
_4 = [_14,(*_6),(*_6)];
_9 = _2 + _2;
_16.0 = -(-86_i8);
_17 = '\u{780a3}';
RET = (_13.fld0.1, _10);
_18 = _17 as u64;
_16 = ((-95_i8), 1377674417_u32);
_13.fld0 = (_14, 318105352877304555708930167324086745485_u128, _11);
RET.0 = _13.fld0.1 / 27447292390714063052213602950202413475_u128;
(*_6) = -_14;
_8 = _13.fld0.0;
_13.fld0.0 = -(*_6);
RET.0 = _13.fld0.1;
_1.fld0 = _6;
_12 = [_16.1,_16.1,_16.1,_16.1,_16.1,_16.1,_16.1];
_4 = [_13.fld0.0,(*_6),_14];
(*_6) = -_13.fld0.0;
_10 = 177_u8;
_13.fld0 = ((*_6), 72264486409466181284576193338269612263_u128, _11);
_13.fld0 = (_8, 253611813080847798325562587289650941859_u128, _11);
_13.fld1 = !17435013688429269983356136281427926128_i128;
_16.0 = 25_i8;
_6 = core::ptr::addr_of!(_13.fld0.0);
Goto(bb6)
}
bb16 = {
_13.fld0.1 = 321023312317556849323516598641245404489_u128 / 227788817841419543354147041889997456343_u128;
Goto(bb17)
}
bb17 = {
Call(_28 = dump_var(12_usize, 15_usize, Move(_15), 17_usize, Move(_17), 9_usize, Move(_9), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_28 = dump_var(12_usize, 12_usize, Move(_12), 2_usize, Move(_2), 10_usize, Move(_10), 5_usize, Move(_5)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: isize,mut _2: (u16,),mut _3: i32,mut _4: [u32; 7],mut _5: [u32; 7]) -> *const i32 {
mir! {
type RET = *const i32;
let _6: [u16; 3];
let _7: char;
let _8: Adt48;
let _9: bool;
let _10: bool;
let _11: ((u128, u8),);
let _12: u16;
let _13: Adt50;
let _14: (u16, i64, i16);
let _15: Adt52;
let _16: isize;
let _17: Adt51;
let _18: [i64; 7];
let _19: [u16; 3];
let _20: Adt51;
let _21: char;
let _22: f32;
let _23: ();
let _24: ();
{
_1 = (-9223372036854775808_isize);
_5 = [3119814233_u32,1256817699_u32,1974704150_u32,1935168289_u32,2974282106_u32,2428349689_u32,2634254347_u32];
_5 = [350986931_u32,3618791248_u32,3050823987_u32,4050995414_u32,1455105573_u32,3931229024_u32,1334801909_u32];
_3 = (-742732223_i32);
RET = core::ptr::addr_of!(_3);
(*RET) = (-1725282221_i32);
RET = core::ptr::addr_of!((*RET));
_3 = (-856927688_i32);
_5 = _4;
_1 = 522119332960837135_i64 as isize;
(*RET) = (-27532300694445453801692276814818207816_i128) as i32;
RET = core::ptr::addr_of!((*RET));
(*RET) = 766011523_i32 * (-1512778759_i32);
_2 = (53909_u16,);
_3 = !(-1247583950_i32);
_4 = [3670614777_u32,2151692280_u32,3542727871_u32,2283894858_u32,3432268357_u32,3527077851_u32,712469398_u32];
_6 = [_2.0,_2.0,_2.0];
_2 = (47630_u16,);
_1 = !9223372036854775807_isize;
_6 = [_2.0,_2.0,_2.0];
_11.0.1 = 33_u8;
_2 = (27799_u16,);
_12 = _2.0 | _2.0;
match _2.0 {
27799 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_13.fld0.1 = 16896256360349808972_usize as u128;
_8.fld3.0 = _13.fld0.1 & _13.fld0.1;
_2 = (_12,);
_7 = '\u{b0a11}';
(*RET) = -(-186441837_i32);
_8.fld1 = _4;
_11.0.1 = 239_u8;
(*RET) = 1014896217_i32;
(*RET) = 2105270013_i32;
_8.fld4 = true as u128;
_8.fld2 = [_11.0.1,_11.0.1,_11.0.1];
_11.0.1 = 40_u8;
_4 = [3420756989_u32,1329868423_u32,3517929400_u32,3712118994_u32,2798029154_u32,1099061347_u32,1450589810_u32];
_9 = true ^ true;
_9 = !false;
_11.0.0 = _13.fld0.1 * _8.fld3.0;
_8.fld3 = (_13.fld0.1, _11.0.1);
_11.0 = _8.fld3;
Call(_15.fld0 = fn14(_8.fld3, _4, _8.fld3, (*RET), _5, _12, _9), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_13.fld2 = _2;
_4 = _8.fld1;
_15.fld3 = [_15.fld0.fld3.0,_15.fld0.fld3.0,_15.fld0.fld3.0];
_2.0 = (-35_i8) as u16;
_8.fld3 = (_13.fld0.1, _11.0.1);
match _11.0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
40 => bb9,
_ => bb8
}
}
bb4 = {
_13.fld0.1 = 16896256360349808972_usize as u128;
_8.fld3.0 = _13.fld0.1 & _13.fld0.1;
_2 = (_12,);
_7 = '\u{b0a11}';
(*RET) = -(-186441837_i32);
_8.fld1 = _4;
_11.0.1 = 239_u8;
(*RET) = 1014896217_i32;
(*RET) = 2105270013_i32;
_8.fld4 = true as u128;
_8.fld2 = [_11.0.1,_11.0.1,_11.0.1];
_11.0.1 = 40_u8;
_4 = [3420756989_u32,1329868423_u32,3517929400_u32,3712118994_u32,2798029154_u32,1099061347_u32,1450589810_u32];
_9 = true ^ true;
_9 = !false;
_11.0.0 = _13.fld0.1 * _8.fld3.0;
_8.fld3 = (_13.fld0.1, _11.0.1);
_11.0 = _8.fld3;
Call(_15.fld0 = fn14(_8.fld3, _4, _8.fld3, (*RET), _5, _12, _9), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_13.fld2 = (_15.fld0.fld3.0,);
(*RET) = -1992114531_i32;
_8.fld3.1 = !_11.0.1;
_15.fld0.fld2 = core::ptr::addr_of!(_4);
_15.fld5 = -_3;
_8.fld6 = _15.fld0.fld2;
_8.fld0 = core::ptr::addr_of!(_17.fld3.1);
_11.0.0 = !_8.fld3.0;
_14.1 = -_15.fld0.fld3.1;
_13.fld0.2 = _4;
Goto(bb10)
}
bb10 = {
_2 = (_12,);
_14.0 = _3 as u16;
_14.1 = (-9_i8) as i64;
_17.fld3 = _15.fld0.fld3;
_13.fld0.0 = 17_i8 as i32;
match _11.0.1 {
0 => bb11,
1 => bb12,
40 => bb14,
_ => bb13
}
}
bb11 = {
_13.fld0.1 = 16896256360349808972_usize as u128;
_8.fld3.0 = _13.fld0.1 & _13.fld0.1;
_2 = (_12,);
_7 = '\u{b0a11}';
(*RET) = -(-186441837_i32);
_8.fld1 = _4;
_11.0.1 = 239_u8;
(*RET) = 1014896217_i32;
(*RET) = 2105270013_i32;
_8.fld4 = true as u128;
_8.fld2 = [_11.0.1,_11.0.1,_11.0.1];
_11.0.1 = 40_u8;
_4 = [3420756989_u32,1329868423_u32,3517929400_u32,3712118994_u32,2798029154_u32,1099061347_u32,1450589810_u32];
_9 = true ^ true;
_9 = !false;
_11.0.0 = _13.fld0.1 * _8.fld3.0;
_8.fld3 = (_13.fld0.1, _11.0.1);
_11.0 = _8.fld3;
Call(_15.fld0 = fn14(_8.fld3, _4, _8.fld3, (*RET), _5, _12, _9), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
_13.fld2 = _2;
_4 = _8.fld1;
_15.fld3 = [_15.fld0.fld3.0,_15.fld0.fld3.0,_15.fld0.fld3.0];
_2.0 = (-35_i8) as u16;
_8.fld3 = (_13.fld0.1, _11.0.1);
match _11.0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
40 => bb9,
_ => bb8
}
}
bb14 = {
_15.fld0.fld3.0 = !_14.0;
_15.fld0.fld1 = !_2.0;
_17.fld0 = _15.fld0.fld0;
_16 = _1 << _11.0.0;
RET = core::ptr::addr_of!(_15.fld5);
_11.0 = (_8.fld3.0, _8.fld3.1);
(*RET) = _13.fld0.0;
RET = core::ptr::addr_of!(_15.fld5);
_4 = [3834006888_u32,51692188_u32,332561960_u32,3811775259_u32,3636593032_u32,1075458505_u32,3380899602_u32];
_14 = (_15.fld0.fld3.0, _15.fld0.fld3.1, _15.fld0.fld3.2);
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(13_usize, 4_usize, Move(_4), 16_usize, Move(_16), 14_usize, Move(_14), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(13_usize, 3_usize, Move(_3), 12_usize, Move(_12), 24_usize, _24, 24_usize, _24), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: (u128, u8),mut _2: [u32; 7],mut _3: (u128, u8),mut _4: i32,mut _5: [u32; 7],mut _6: u16,mut _7: bool) -> Adt51 {
mir! {
type RET = Adt51;
let _8: *mut *const f64;
let _9: [i128; 7];
let _10: [i64; 7];
let _11: i8;
let _12: [u8; 3];
let _13: Adt51;
let _14: u32;
let _15: (u128, u8);
let _16: ([u16; 3], [i64; 7]);
let _17: Adt56;
let _18: (u128, u8);
let _19: (i32, u128, [u32; 7]);
let _20: i8;
let _21: f64;
let _22: u128;
let _23: char;
let _24: f32;
let _25: isize;
let _26: *const f64;
let _27: char;
let _28: [u8; 3];
let _29: Adt54;
let _30: [i32; 3];
let _31: (u16,);
let _32: char;
let _33: char;
let _34: i16;
let _35: Adt57;
let _36: (u16, i64, i16);
let _37: u32;
let _38: ();
let _39: ();
{
RET.fld3.1 = 931018663624804789_i64 & (-2314782320038070378_i64);
RET.fld3.2 = (-22581_i16) << _3.0;
_4 = -1539316499_i32;
RET.fld3 = (_6, 6511132590400797058_i64, 19449_i16);
_3.0 = _7 as u128;
RET.fld2 = core::ptr::addr_of!(_2);
_1.0 = !_3.0;
Goto(bb1)
}
bb1 = {
RET.fld3.1 = 225072737503971702_i64;
_2 = [1916696230_u32,1938523516_u32,612828397_u32,1377658340_u32,1577676999_u32,202639997_u32,729450385_u32];
RET.fld1 = _6;
RET.fld3.2 = (-7357_i16);
_11 = 29_i8;
RET.fld3.2 = (-11917_i16) & 17067_i16;
RET.fld2 = core::ptr::addr_of!(_5);
RET.fld3.2 = (-8808_i16) + 7317_i16;
_10 = [8675063065746794377_i64,(-3414316991815263282_i64),5431331281416627983_i64,(-6589828450856899636_i64),(-9219034980789576209_i64),(-1669256585459450838_i64),5506348229211433993_i64];
_6 = _1.1 as u16;
_6 = 36961_u16 >> _3.0;
_9 = [121079819391058171771232371168266572148_i128,(-20380660924484943734699611527237856076_i128),96786694661411003478979048236349363439_i128,(-133373756936332022285616246053408909690_i128),(-83818067160684995963844703965903949997_i128),29358996825521001119665684166732231120_i128,113434075418951632901938734091401924913_i128];
_7 = false;
_5 = [956791987_u32,76153619_u32,3900593656_u32,2971179373_u32,4008298038_u32,3878638256_u32,2015692501_u32];
_3.0 = 4805536149665748799_u64 as u128;
_10 = [(-666388813938530865_i64),(-2759660548604423122_i64),(-2492287858836958352_i64),7634378053849348588_i64,(-1678404071698973811_i64),(-6554272609289212811_i64),3456286477626356856_i64];
Call(RET.fld1 = fn15(_9, _11, _9, _1.1, _1.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1.0 = !_3.0;
_3.0 = _1.0;
RET.fld3.2 = (-12777_i16);
_7 = _11 != _11;
_13.fld3.1 = 6382954237632303014_i64 + (-2408117726005278288_i64);
_13.fld3.1 = !(-8296754372870902986_i64);
_8 = core::ptr::addr_of_mut!(_13.fld0);
_5 = _2;
_1.1 = !_3.1;
_13.fld1 = _6;
_13.fld3.2 = _13.fld3.1 as i16;
RET.fld3.0 = _13.fld1;
_3.1 = _1.1;
RET.fld1 = _6;
RET.fld3.1 = _13.fld3.1 & _13.fld3.1;
RET.fld3.1 = -_13.fld3.1;
_13.fld3.0 = _6 - _6;
RET.fld1 = _13.fld1 >> _13.fld3.2;
_1.1 = _3.1;
_5 = [153067572_u32,160471610_u32,725884803_u32,98692416_u32,2532332889_u32,466833315_u32,706207929_u32];
_1.1 = !_3.1;
Call(RET.fld3.0 = fn16(_7, _13.fld3.1, _9, _9, _7, _11, _13.fld3.1, _11, _4, _8, _13.fld1, _5, _4, _1.1, _2, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET.fld3.0 = _13.fld3.0;
RET.fld2 = core::ptr::addr_of!(_2);
_13.fld3 = (_13.fld1, (-3034658651521988285_i64), (-5034_i16));
_1.0 = _3.0;
_13.fld1 = _6;
_3.1 = !_1.1;
_1 = (_3.0, _3.1);
_7 = _13.fld3.2 == _13.fld3.2;
RET.fld0 = _13.fld0;
_10 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
RET.fld1 = _13.fld1 / 22955_u16;
_6 = _11 as u16;
_1 = _3;
RET.fld1 = _13.fld1;
Goto(bb4)
}
bb4 = {
RET.fld3.1 = _13.fld3.1;
_15 = _1;
_3.0 = _13.fld3.1 as u128;
RET.fld3 = _13.fld3;
_13.fld1 = !_13.fld3.0;
RET.fld0 = (*_8);
_13.fld2 = core::ptr::addr_of!(_5);
_17.fld6.2 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
_14 = 1273481878_u32 << _6;
Goto(bb5)
}
bb5 = {
_17.fld2 = (_13.fld3.0,);
_16.0 = [_13.fld3.0,_13.fld1,_13.fld1];
RET = Adt51 { fld0: (*_8),fld1: _17.fld2.0,fld2: _13.fld2,fld3: _13.fld3 };
_17.fld6.0 = core::ptr::addr_of!(_13.fld3.1);
_17.fld3 = _11 | _11;
_2 = [_14,_14,_14,_14,_14,_14,_14];
_17.fld6.4 = _13.fld3.0 ^ _17.fld2.0;
_15.0 = !_1.0;
_17.fld7.fld3 = _15;
_16.1 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
RET.fld2 = core::ptr::addr_of!(_17.fld7.fld1);
_17.fld6.1 = '\u{d4fcb}';
match _13.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463460339948780246223171 => bb6,
_ => bb4
}
}
bb6 = {
_20 = _17.fld3 * _11;
_17.fld6.0 = core::ptr::addr_of!(_13.fld3.1);
_16.1 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
_17.fld6.3 = core::ptr::addr_of!(_4);
_17.fld0 = _8;
(*_8) = core::ptr::addr_of!(_21);
_17.fld1 = core::ptr::addr_of_mut!(_7);
Call(_1.1 = fn17(_13.fld3.2, _17.fld6.2, _8, _17.fld1, _17.fld6.3, _16.1, _10, _13, _17.fld0, _17.fld1, _4, _17.fld0, _20, (*_8), _3.0, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_19 = (_4, _17.fld7.fld3.0, _5);
Goto(bb8)
}
bb8 = {
_24 = _13.fld1 as f32;
_17.fld6.4 = _3.0 as u16;
_25 = -109_isize;
RET.fld3.2 = _13.fld3.2;
_23 = _17.fld6.1;
RET = Adt51 { fld0: _13.fld0,fld1: _17.fld6.4,fld2: _13.fld2,fld3: _13.fld3 };
_9 = [(-74095947704471603961729452983718835153_i128),143362839601646292317487085685439420477_i128,74941308810849995675697256726301542463_i128,(-35094596288042455080514487231963932107_i128),(-30423829624039044094630551236112749048_i128),26668429409307404987574563933174506773_i128,(-149986838631381346229453266257111148249_i128)];
_24 = _14 as f32;
_1 = (_3.0, _3.1);
_12 = [_1.1,_17.fld7.fld3.1,_1.1];
RET = Adt51 { fld0: (*_8),fld1: _17.fld6.4,fld2: _13.fld2,fld3: _13.fld3 };
_17.fld7.fld6 = _13.fld2;
RET.fld1 = _13.fld1 ^ _6;
_22 = !_19.1;
_13.fld0 = core::ptr::addr_of!(_21);
_17.fld7.fld0 = core::ptr::addr_of!(_13.fld3.1);
_7 = false;
_18 = (_3.0, _3.1);
_9 = [108209798009669162130938504794490090544_i128,127092398539071016102811789396359188609_i128,160414226098254160518510256387760784409_i128,(-32321768222768509596345960241134903290_i128),6335454428096622596785709714997489719_i128,(-50582474393991441306533335034309449170_i128),22874288493810308067855115078323325961_i128];
match _13.fld3.1 {
0 => bb9,
1 => bb10,
2 => bb11,
340282366920938463460339948780246223171 => bb13,
_ => bb12
}
}
bb9 = {
_19 = (_4, _17.fld7.fld3.0, _5);
Goto(bb8)
}
bb10 = {
_20 = _17.fld3 * _11;
_17.fld6.0 = core::ptr::addr_of!(_13.fld3.1);
_16.1 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
_17.fld6.3 = core::ptr::addr_of!(_4);
_17.fld0 = _8;
(*_8) = core::ptr::addr_of!(_21);
_17.fld1 = core::ptr::addr_of_mut!(_7);
Call(_1.1 = fn17(_13.fld3.2, _17.fld6.2, _8, _17.fld1, _17.fld6.3, _16.1, _10, _13, _17.fld0, _17.fld1, _4, _17.fld0, _20, (*_8), _3.0, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_1.0 = !_3.0;
_3.0 = _1.0;
RET.fld3.2 = (-12777_i16);
_7 = _11 != _11;
_13.fld3.1 = 6382954237632303014_i64 + (-2408117726005278288_i64);
_13.fld3.1 = !(-8296754372870902986_i64);
_8 = core::ptr::addr_of_mut!(_13.fld0);
_5 = _2;
_1.1 = !_3.1;
_13.fld1 = _6;
_13.fld3.2 = _13.fld3.1 as i16;
RET.fld3.0 = _13.fld1;
_3.1 = _1.1;
RET.fld1 = _6;
RET.fld3.1 = _13.fld3.1 & _13.fld3.1;
RET.fld3.1 = -_13.fld3.1;
_13.fld3.0 = _6 - _6;
RET.fld1 = _13.fld1 >> _13.fld3.2;
_1.1 = _3.1;
_5 = [153067572_u32,160471610_u32,725884803_u32,98692416_u32,2532332889_u32,466833315_u32,706207929_u32];
_1.1 = !_3.1;
Call(RET.fld3.0 = fn16(_7, _13.fld3.1, _9, _9, _7, _11, _13.fld3.1, _11, _4, _8, _13.fld1, _5, _4, _1.1, _2, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
RET.fld3.0 = _13.fld3.0;
RET.fld2 = core::ptr::addr_of!(_2);
_13.fld3 = (_13.fld1, (-3034658651521988285_i64), (-5034_i16));
_1.0 = _3.0;
_13.fld1 = _6;
_3.1 = !_1.1;
_1 = (_3.0, _3.1);
_7 = _13.fld3.2 == _13.fld3.2;
RET.fld0 = _13.fld0;
_10 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
RET.fld1 = _13.fld1 / 22955_u16;
_6 = _11 as u16;
_1 = _3;
RET.fld1 = _13.fld1;
Goto(bb4)
}
bb13 = {
_17.fld7.fld5 = core::ptr::addr_of_mut!(_13.fld0);
RET.fld3.2 = _13.fld3.2;
_25 = (-13388836319110936415911347345253347636_i128) as isize;
_13.fld1 = _17.fld6.4;
_17.fld6.5 = core::ptr::addr_of!(_13.fld3.1);
_9 = [24603287362641220009135726609220823255_i128,(-50184055101975858927654741088715784112_i128),64101733966510641114689614133961125143_i128,29709438603908344734252232757777148654_i128,30872141686454795058970946085527166310_i128,95989688512347981542690174779558972663_i128,(-99922573184228333247304312021819711426_i128)];
_29.fld0 = _8;
_21 = _14 as f64;
_17.fld7.fld4 = !_3.0;
_17.fld6.2 = [_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
_22 = _3.0 | _18.0;
_1 = (_22, _17.fld7.fld3.1);
_29.fld3 = _7 as i8;
RET.fld3.0 = _13.fld1;
_29.fld3 = -_20;
_17.fld7 = Adt48 { fld0: _17.fld6.5,fld1: _5,fld2: _12,fld3: _1,fld4: _1.0,fld5: _8,fld6: _13.fld2 };
_17.fld7.fld6 = _13.fld2;
_15 = (_22, _1.1);
_10 = _16.1;
_17.fld4 = _24 as u16;
RET.fld2 = core::ptr::addr_of!(_2);
_29.fld3 = _17.fld3 + _20;
_29.fld1 = core::ptr::addr_of_mut!(_7);
_27 = _17.fld6.1;
_27 = _23;
_14 = 13375540999302151132_usize as u32;
match _13.fld3.1 {
340282366920938463460339948780246223171 => bb14,
_ => bb8
}
}
bb14 = {
RET.fld1 = !_13.fld1;
RET.fld2 = _13.fld2;
RET.fld2 = _13.fld2;
RET.fld3.2 = -_13.fld3.2;
RET.fld3.2 = _13.fld3.2 ^ _13.fld3.2;
_32 = _17.fld6.1;
_16.1 = _17.fld6.2;
RET.fld3.2 = -_13.fld3.2;
_6 = 15030605609043442052_u64 as u16;
_3.0 = _1.0 + _15.0;
_2 = [_14,_14,_14,_14,_14,_14,_14];
_15.1 = !_17.fld7.fld3.1;
_28 = [_3.1,_1.1,_1.1];
_9 = [153674767308738249868503466177386168422_i128,(-112232151303314754185915400672893965583_i128),46864514297399453030543261458756686506_i128,(-154085633846398904191542955979460223451_i128),11210348648055755188601750811582358733_i128,95948656288223658534867984789075714490_i128,(-128530972944681830008395627271115611645_i128)];
_36 = (_17.fld2.0, _13.fld3.1, _13.fld3.2);
RET.fld2 = core::ptr::addr_of!(_2);
_10 = [_36.1,_13.fld3.1,_36.1,_36.1,_13.fld3.1,_13.fld3.1,_13.fld3.1];
_36 = _13.fld3;
RET.fld3.2 = !_13.fld3.2;
_26 = core::ptr::addr_of!(_21);
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(14_usize, 27_usize, Move(_27), 12_usize, Move(_12), 15_usize, Move(_15), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(14_usize, 1_usize, Move(_1), 19_usize, Move(_19), 3_usize, Move(_3), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(14_usize, 9_usize, Move(_9), 32_usize, Move(_32), 14_usize, Move(_14), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [i128; 7],mut _2: i8,mut _3: [i128; 7],mut _4: u8,mut _5: u128) -> u16 {
mir! {
type RET = u16;
let _6: u128;
let _7: char;
let _8: u16;
let _9: (i8, u32);
let _10: f64;
let _11: *const i32;
let _12: bool;
let _13: f32;
let _14: f64;
let _15: bool;
let _16: Adt57;
let _17: Adt53;
let _18: u128;
let _19: u64;
let _20: (u128, u8);
let _21: ();
let _22: ();
{
RET = 1695138050_i32 as u16;
_6 = !_5;
_3 = _1;
_3 = [167841603242112051988595961474858988767_i128,(-64922861392450527055441497383104028473_i128),(-56544370041848200824742047255166206859_i128),(-101786982228164024992931443620980157976_i128),82371748059367368847924045212946828659_i128,107780255740650531535896446839797565990_i128,112430266439777771401380790601829498599_i128];
_1 = _3;
_1 = [68939261706527202865520444398508494803_i128,153826367692610229137911265668990763553_i128,62353095105067388824452286029555595029_i128,(-110966777463891529571600056864398701343_i128),108024322816834556055503678293573819577_i128,(-123372170112051534987968568327768404061_i128),153504691841912828058507290439439053414_i128];
_1 = [42805431001987449485924843584855804238_i128,(-139461573656325579913808856698430258784_i128),64566927719976085680697990149949504579_i128,156691337069632860234288814102125982203_i128,86301208944535276231180752599427903307_i128,53541275542441300946540812053878060249_i128,(-85631677489256656067893169574402359265_i128)];
_7 = '\u{36d72}';
RET = 32529_u16;
_4 = 157_u8 ^ 135_u8;
_6 = _5 - _5;
_2 = !(-74_i8);
_9.1 = !1448855275_u32;
_1 = _3;
_9.0 = (-853737013_i32) as i8;
RET = _4 as u16;
_6 = _5;
_4 = 8_u8 & 15_u8;
_9.1 = 4253794984_u32;
_9.0 = _5 as i8;
_10 = 4237998437818635649_i64 as f64;
_10 = _9.1 as f64;
Call(_9.0 = core::intrinsics::transmute(_4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = 45930_u16;
_8 = 7831_u16 << _9.1;
_3 = _1;
RET = _8;
_9 = (_2, 2709340076_u32);
RET = !_8;
_9.1 = !3926661798_u32;
_9 = (_2, 2560479043_u32);
_9 = (_2, 831853556_u32);
_1 = [(-81093706573731078766528386284533911074_i128),145095560864288268901615684943189464200_i128,(-163320493161807296930391014601568152342_i128),(-139757702018744846285379306733138414144_i128),(-161999433144879220166004400865904656471_i128),129729731446990997705721121471710531389_i128,119992757391709059110176715588939756937_i128];
_10 = _5 as f64;
_9 = (_2, 413848813_u32);
_2 = _9.1 as i8;
_3 = [(-104525695664251248816685972826778840457_i128),27953713792747990311010556965521537360_i128,38337862696783414060637639457427102062_i128,11066505798672970866358728688974967818_i128,153670637213565159971210278308236700924_i128,(-106864036637172528532356369918498538148_i128),126444773042929890007439229854003161554_i128];
_1 = _3;
_1 = [(-129215546300171874046751874460454048435_i128),130845692839840231845561441931110486639_i128,150379188333077694335168867161284666767_i128,112367613818129026557565969001586686703_i128,90686597347496834666546712008627966001_i128,2666262382535056278439671740598998793_i128,(-25945821389598428778373920693539823884_i128)];
_9.1 = !435660035_u32;
_10 = _4 as f64;
_13 = _6 as f32;
_12 = false;
_6 = !_5;
_9.1 = _12 as u32;
_10 = (-8298194036430713844_i64) as f64;
RET = !_8;
Goto(bb2)
}
bb2 = {
_6 = _5 >> _2;
_13 = _4 as f32;
_9 = (_2, 1477832678_u32);
_9 = (_2, 2625792409_u32);
_16.fld5 = (_8, (-4808445792888813550_i64), (-8702_i16));
_16.fld2.0 = [_16.fld5.0,_16.fld5.0,_16.fld5.0];
_16.fld1 = _7;
_9.0 = !_2;
_3 = [(-165180580885283597030425841118342488780_i128),(-20959091670088932397965068475867813965_i128),36684863456498015912362772315215531797_i128,(-35249721858414909611362302826976201636_i128),(-76013002339256364868276266849137629006_i128),12573759101317922452480900622040899284_i128,(-162835465262270675990727236396089719202_i128)];
_14 = _10 - _10;
_17.fld3 = (_8, _16.fld5.1, _16.fld5.2);
_12 = !true;
_16.fld4 = 10651794612315486003_u64 * 1714796202747440539_u64;
_1 = _3;
_16.fld6 = _17.fld3.1;
match _9.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
2625792409 => bb11,
_ => bb10
}
}
bb3 = {
_8 = 45930_u16;
_8 = 7831_u16 << _9.1;
_3 = _1;
RET = _8;
_9 = (_2, 2709340076_u32);
RET = !_8;
_9.1 = !3926661798_u32;
_9 = (_2, 2560479043_u32);
_9 = (_2, 831853556_u32);
_1 = [(-81093706573731078766528386284533911074_i128),145095560864288268901615684943189464200_i128,(-163320493161807296930391014601568152342_i128),(-139757702018744846285379306733138414144_i128),(-161999433144879220166004400865904656471_i128),129729731446990997705721121471710531389_i128,119992757391709059110176715588939756937_i128];
_10 = _5 as f64;
_9 = (_2, 413848813_u32);
_2 = _9.1 as i8;
_3 = [(-104525695664251248816685972826778840457_i128),27953713792747990311010556965521537360_i128,38337862696783414060637639457427102062_i128,11066505798672970866358728688974967818_i128,153670637213565159971210278308236700924_i128,(-106864036637172528532356369918498538148_i128),126444773042929890007439229854003161554_i128];
_1 = _3;
_1 = [(-129215546300171874046751874460454048435_i128),130845692839840231845561441931110486639_i128,150379188333077694335168867161284666767_i128,112367613818129026557565969001586686703_i128,90686597347496834666546712008627966001_i128,2666262382535056278439671740598998793_i128,(-25945821389598428778373920693539823884_i128)];
_9.1 = !435660035_u32;
_10 = _4 as f64;
_13 = _6 as f32;
_12 = false;
_6 = !_5;
_9.1 = _12 as u32;
_10 = (-8298194036430713844_i64) as f64;
RET = !_8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_9 = (_2, 4159892511_u32);
_9 = (_2, 3811581394_u32);
_17.fld1 = (-1824182306_i32) as u64;
_9.0 = _2 & _2;
_17.fld0 = core::ptr::addr_of_mut!(_15);
_16.fld6 = _16.fld5.1 << _16.fld4;
match _9.1 {
0 => bb12,
1 => bb13,
3811581394 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
_8 = 45930_u16;
_8 = 7831_u16 << _9.1;
_3 = _1;
RET = _8;
_9 = (_2, 2709340076_u32);
RET = !_8;
_9.1 = !3926661798_u32;
_9 = (_2, 2560479043_u32);
_9 = (_2, 831853556_u32);
_1 = [(-81093706573731078766528386284533911074_i128),145095560864288268901615684943189464200_i128,(-163320493161807296930391014601568152342_i128),(-139757702018744846285379306733138414144_i128),(-161999433144879220166004400865904656471_i128),129729731446990997705721121471710531389_i128,119992757391709059110176715588939756937_i128];
_10 = _5 as f64;
_9 = (_2, 413848813_u32);
_2 = _9.1 as i8;
_3 = [(-104525695664251248816685972826778840457_i128),27953713792747990311010556965521537360_i128,38337862696783414060637639457427102062_i128,11066505798672970866358728688974967818_i128,153670637213565159971210278308236700924_i128,(-106864036637172528532356369918498538148_i128),126444773042929890007439229854003161554_i128];
_1 = _3;
_1 = [(-129215546300171874046751874460454048435_i128),130845692839840231845561441931110486639_i128,150379188333077694335168867161284666767_i128,112367613818129026557565969001586686703_i128,90686597347496834666546712008627966001_i128,2666262382535056278439671740598998793_i128,(-25945821389598428778373920693539823884_i128)];
_9.1 = !435660035_u32;
_10 = _4 as f64;
_13 = _6 as f32;
_12 = false;
_6 = !_5;
_9.1 = _12 as u32;
_10 = (-8298194036430713844_i64) as f64;
RET = !_8;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
_16.fld6 = _12 as i64;
_6 = !_5;
_5 = (-9223372036854775808_isize) as u128;
_16.fld3 = _9.0;
_16.fld5.1 = _9.0 as i64;
_18 = !_6;
_18 = _5 + _6;
_16.fld0 = _18;
_7 = _16.fld1;
_10 = -_14;
Goto(bb16)
}
bb16 = {
Call(_21 = dump_var(15_usize, 3_usize, Move(_3), 2_usize, Move(_2), 1_usize, Move(_1), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_21 = dump_var(15_usize, 12_usize, Move(_12), 22_usize, _22, 22_usize, _22, 22_usize, _22), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: bool,mut _2: i64,mut _3: [i128; 7],mut _4: [i128; 7],mut _5: bool,mut _6: i8,mut _7: i64,mut _8: i8,mut _9: i32,mut _10: *mut *const f64,mut _11: u16,mut _12: [u32; 7],mut _13: i32,mut _14: u8,mut _15: [u32; 7],mut _16: i32) -> u16 {
mir! {
type RET = u16;
let _17: isize;
let _18: Adt62;
let _19: u8;
let _20: (u16,);
let _21: char;
let _22: isize;
let _23: f64;
let _24: (u16,);
let _25: ((u16, i64, i16), *const i32, [i64; 7], [u32; 7]);
let _26: i8;
let _27: Adt64;
let _28: [u32; 7];
let _29: char;
let _30: Adt60;
let _31: [u16; 8];
let _32: *const i32;
let _33: f32;
let _34: Adt62;
let _35: ();
let _36: ();
{
_10 = core::ptr::addr_of_mut!((*_10));
_11 = !14509_u16;
_8 = _6;
_16 = -_13;
_1 = _5 ^ _5;
Call(_12 = core::intrinsics::transmute(_15), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_16 = _13;
_4 = [24417510485448723573668905602620385370_i128,168745223898780021816556126187852965784_i128,(-39525231288169589708512482113660081179_i128),(-143564967123040070240113922508943956535_i128),(-93850175449189297150781061716071171347_i128),68307776799579758414042175062129677956_i128,(-163808298501900118469839395459430408002_i128)];
_18.fld5.2 = _12;
_18.fld3.fld3 = (_11, _7, (-18256_i16));
_2 = _7 | _18.fld3.fld3.1;
RET = _11 >> _18.fld3.fld3.1;
_18.fld4.fld2 = _14 as f64;
_14 = 3237105925_u32 as u8;
_18.fld1.fld2.0 = [_18.fld3.fld3.0,_18.fld3.fld3.0,_18.fld3.fld3.0];
(*_10) = core::ptr::addr_of!(_18.fld4.fld2);
_12 = [3084562107_u32,4035114025_u32,2442439888_u32,325409303_u32,1809616697_u32,3457454775_u32,3155722986_u32];
Goto(bb2)
}
bb2 = {
_18.fld5.1 = 84668102624326291486841023588420149152_u128 * 185054085998567894208457027739431297346_u128;
_4 = [(-63473565630748046624827877606126550628_i128),(-157199740951962986693081126495711084131_i128),(-68218316859817032596418564638215188784_i128),(-17763736022026433615120473519736794715_i128),(-148988191013572787505533268553870666410_i128),(-60931916166459334038254971874049512963_i128),(-31579859506962970380533006374444693232_i128)];
_18.fld1.fld2.1 = [_2,_2,_18.fld3.fld3.1,_7,_2,_2,_18.fld3.fld3.1];
_18.fld3.fld3.2 = -(-18962_i16);
_18.fld5.0 = !_9;
_18.fld4.fld6 = _18.fld1.fld2.1;
_18.fld3.fld3.2 = (-17421_i16);
_18.fld4.fld1.0 = (_18.fld5.1, _14);
Call(_18.fld1.fld4 = core::intrinsics::transmute(_7), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
match _6 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
29 => bb8,
_ => bb7
}
}
bb4 = {
_18.fld5.1 = 84668102624326291486841023588420149152_u128 * 185054085998567894208457027739431297346_u128;
_4 = [(-63473565630748046624827877606126550628_i128),(-157199740951962986693081126495711084131_i128),(-68218316859817032596418564638215188784_i128),(-17763736022026433615120473519736794715_i128),(-148988191013572787505533268553870666410_i128),(-60931916166459334038254971874049512963_i128),(-31579859506962970380533006374444693232_i128)];
_18.fld1.fld2.1 = [_2,_2,_18.fld3.fld3.1,_7,_2,_2,_18.fld3.fld3.1];
_18.fld3.fld3.2 = -(-18962_i16);
_18.fld5.0 = !_9;
_18.fld4.fld6 = _18.fld1.fld2.1;
_18.fld3.fld3.2 = (-17421_i16);
_18.fld4.fld1.0 = (_18.fld5.1, _14);
Call(_18.fld1.fld4 = core::intrinsics::transmute(_7), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_16 = _13;
_4 = [24417510485448723573668905602620385370_i128,168745223898780021816556126187852965784_i128,(-39525231288169589708512482113660081179_i128),(-143564967123040070240113922508943956535_i128),(-93850175449189297150781061716071171347_i128),68307776799579758414042175062129677956_i128,(-163808298501900118469839395459430408002_i128)];
_18.fld5.2 = _12;
_18.fld3.fld3 = (_11, _7, (-18256_i16));
_2 = _7 | _18.fld3.fld3.1;
RET = _11 >> _18.fld3.fld3.1;
_18.fld4.fld2 = _14 as f64;
_14 = 3237105925_u32 as u8;
_18.fld1.fld2.0 = [_18.fld3.fld3.0,_18.fld3.fld3.0,_18.fld3.fld3.0];
(*_10) = core::ptr::addr_of!(_18.fld4.fld2);
_12 = [3084562107_u32,4035114025_u32,2442439888_u32,325409303_u32,1809616697_u32,3457454775_u32,3155722986_u32];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_25.2 = [_18.fld3.fld3.1,_2,_2,_2,_7,_18.fld3.fld3.1,_7];
_19 = !_14;
_18.fld4.fld0 = (-22236086578188660212853894059061806959_i128);
_22 = (-47_isize) & (-9223372036854775808_isize);
_18.fld1.fld6 = _2 + _18.fld3.fld3.1;
_18.fld1.fld7 = _18.fld4.fld6;
RET = _18.fld3.fld3.0 - _11;
_25.2 = _18.fld4.fld6;
_14 = _19 & _19;
_16 = _13 & _18.fld5.0;
_18.fld1.fld1 = '\u{6be80}';
_27.fld0.fld2.0.1 = _14;
_25.0.2 = !_18.fld3.fld3.2;
_27.fld3.0 = (_18.fld3.fld3.0, _18.fld1.fld6, _25.0.2);
_18.fld1.fld5.0 = _18.fld3.fld3.0 | _11;
_28 = _15;
_18.fld1.fld5.2 = _9 as i16;
_18.fld3.fld1 = !_11;
_27.fld4 = core::ptr::addr_of_mut!(_18.fld3.fld0);
_2 = _1 as i64;
match _8 {
0 => bb5,
1 => bb4,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
29 => bb15,
_ => bb14
}
}
bb9 = {
Return()
}
bb10 = {
_16 = _13;
_4 = [24417510485448723573668905602620385370_i128,168745223898780021816556126187852965784_i128,(-39525231288169589708512482113660081179_i128),(-143564967123040070240113922508943956535_i128),(-93850175449189297150781061716071171347_i128),68307776799579758414042175062129677956_i128,(-163808298501900118469839395459430408002_i128)];
_18.fld5.2 = _12;
_18.fld3.fld3 = (_11, _7, (-18256_i16));
_2 = _7 | _18.fld3.fld3.1;
RET = _11 >> _18.fld3.fld3.1;
_18.fld4.fld2 = _14 as f64;
_14 = 3237105925_u32 as u8;
_18.fld1.fld2.0 = [_18.fld3.fld3.0,_18.fld3.fld3.0,_18.fld3.fld3.0];
(*_10) = core::ptr::addr_of!(_18.fld4.fld2);
_12 = [3084562107_u32,4035114025_u32,2442439888_u32,325409303_u32,1809616697_u32,3457454775_u32,3155722986_u32];
Goto(bb2)
}
bb11 = {
_16 = _13;
_4 = [24417510485448723573668905602620385370_i128,168745223898780021816556126187852965784_i128,(-39525231288169589708512482113660081179_i128),(-143564967123040070240113922508943956535_i128),(-93850175449189297150781061716071171347_i128),68307776799579758414042175062129677956_i128,(-163808298501900118469839395459430408002_i128)];
_18.fld5.2 = _12;
_18.fld3.fld3 = (_11, _7, (-18256_i16));
_2 = _7 | _18.fld3.fld3.1;
RET = _11 >> _18.fld3.fld3.1;
_18.fld4.fld2 = _14 as f64;
_14 = 3237105925_u32 as u8;
_18.fld1.fld2.0 = [_18.fld3.fld3.0,_18.fld3.fld3.0,_18.fld3.fld3.0];
(*_10) = core::ptr::addr_of!(_18.fld4.fld2);
_12 = [3084562107_u32,4035114025_u32,2442439888_u32,325409303_u32,1809616697_u32,3457454775_u32,3155722986_u32];
Goto(bb2)
}
bb12 = {
_18.fld5.1 = 84668102624326291486841023588420149152_u128 * 185054085998567894208457027739431297346_u128;
_4 = [(-63473565630748046624827877606126550628_i128),(-157199740951962986693081126495711084131_i128),(-68218316859817032596418564638215188784_i128),(-17763736022026433615120473519736794715_i128),(-148988191013572787505533268553870666410_i128),(-60931916166459334038254971874049512963_i128),(-31579859506962970380533006374444693232_i128)];
_18.fld1.fld2.1 = [_2,_2,_18.fld3.fld3.1,_7,_2,_2,_18.fld3.fld3.1];
_18.fld3.fld3.2 = -(-18962_i16);
_18.fld5.0 = !_9;
_18.fld4.fld6 = _18.fld1.fld2.1;
_18.fld3.fld3.2 = (-17421_i16);
_18.fld4.fld1.0 = (_18.fld5.1, _14);
Call(_18.fld1.fld4 = core::intrinsics::transmute(_7), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
match _6 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
29 => bb8,
_ => bb7
}
}
bb14 = {
_18.fld5.1 = 84668102624326291486841023588420149152_u128 * 185054085998567894208457027739431297346_u128;
_4 = [(-63473565630748046624827877606126550628_i128),(-157199740951962986693081126495711084131_i128),(-68218316859817032596418564638215188784_i128),(-17763736022026433615120473519736794715_i128),(-148988191013572787505533268553870666410_i128),(-60931916166459334038254971874049512963_i128),(-31579859506962970380533006374444693232_i128)];
_18.fld1.fld2.1 = [_2,_2,_18.fld3.fld3.1,_7,_2,_2,_18.fld3.fld3.1];
_18.fld3.fld3.2 = -(-18962_i16);
_18.fld5.0 = !_9;
_18.fld4.fld6 = _18.fld1.fld2.1;
_18.fld3.fld3.2 = (-17421_i16);
_18.fld4.fld1.0 = (_18.fld5.1, _14);
Call(_18.fld1.fld4 = core::intrinsics::transmute(_7), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_18.fld6 = core::ptr::addr_of!(_18.fld3.fld3);
_6 = !_8;
(*_10) = core::ptr::addr_of!(_23);
_30.fld2.fld4.1 = !2621593918_u32;
_27.fld0.fld2.0.1 = _14 | _18.fld4.fld1.0.1;
RET = _18.fld3.fld1;
_18.fld2 = !0_usize;
_18.fld4.fld6 = [_27.fld3.0.1,_18.fld1.fld6,_27.fld3.0.1,_18.fld1.fld6,_18.fld1.fld6,_2,_2];
_20.0 = !_18.fld1.fld5.0;
_18.fld1.fld3 = _8 >> _18.fld3.fld3.1;
_18.fld4.fld4 = _18.fld1.fld4 as i16;
_30.fld2.fld2 = (_18.fld4.fld1.0,);
_30.fld2.fld4 = (_18.fld1.fld3, 2029373658_u32);
_30.fld0.fld1 = _18.fld4.fld4 as u16;
_23 = _18.fld4.fld2 + _18.fld4.fld2;
_31 = [_11,_11,_18.fld3.fld3.0,_20.0,_27.fld3.0.0,_30.fld0.fld1,_20.0,_30.fld0.fld1];
_27.fld0.fld2.0.0 = _30.fld2.fld2.0.0;
_30.fld0.fld3.1 = _27.fld3.0.1 - _27.fld3.0.1;
_27.fld3.2 = [_7,_7,_30.fld0.fld3.1,_2,_2,_30.fld0.fld3.1,_27.fld3.0.1];
_30.fld0.fld3.2 = _27.fld3.0.2;
Goto(bb16)
}
bb16 = {
Call(_35 = dump_var(16_usize, 1_usize, Move(_1), 6_usize, Move(_6), 28_usize, Move(_28), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(16_usize, 13_usize, Move(_13), 31_usize, Move(_31), 16_usize, Move(_16), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(16_usize, 20_usize, Move(_20), 4_usize, Move(_4), 36_usize, _36, 36_usize, _36), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i16,mut _2: [i64; 7],mut _3: *mut *const f64,mut _4: *mut bool,mut _5: *const i32,mut _6: [i64; 7],mut _7: [i64; 7],mut _8: Adt51,mut _9: *mut *const f64,mut _10: *mut bool,mut _11: i32,mut _12: *mut *const f64,mut _13: i8,mut _14: *const f64,mut _15: u128,mut _16: u16) -> u8 {
mir! {
type RET = u8;
let _17: char;
let _18: f64;
let _19: Adt57;
let _20: [u32; 7];
let _21: isize;
let _22: isize;
let _23: [u32; 8];
let _24: *mut i128;
let _25: f32;
let _26: isize;
let _27: u16;
let _28: f64;
let _29: [i128; 7];
let _30: f64;
let _31: i128;
let _32: u16;
let _33: Adt53;
let _34: Adt64;
let _35: ((u128, u8),);
let _36: ();
let _37: ();
{
(*_5) = _11;
(*_3) = core::ptr::addr_of!((*_14));
_9 = core::ptr::addr_of_mut!(_8.fld0);
(*_14) = (-112_isize) as f64;
_18 = (*_14);
_19.fld1 = '\u{20ead}';
_19.fld2.0 = [_8.fld1,_8.fld1,_8.fld3.0];
_19.fld5.1 = !_8.fld3.1;
_6 = _7;
_6 = [_19.fld5.1,_19.fld5.1,_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_19.fld5.1];
_13 = 64_u8 as i8;
_22 = 3231415544906874691_u64 as isize;
RET = 183_u8;
_8.fld3.0 = !_8.fld1;
Goto(bb1)
}
bb1 = {
_19.fld7 = [_19.fld5.1,_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_8.fld3.1,_19.fld5.1];
_19.fld2.0 = [_8.fld1,_16,_8.fld1];
_20 = [109973476_u32,2924158162_u32,434575192_u32,871616381_u32,386899256_u32,501223541_u32,286899836_u32];
_19.fld4 = 571693746407146672_u64 << _16;
_18 = _8.fld1 as f64;
_19.fld5.2 = _8.fld3.2;
_19.fld5.1 = -_8.fld3.1;
_17 = _19.fld1;
_19.fld0 = _19.fld5.1 as u128;
(*_12) = core::ptr::addr_of!((*_14));
_12 = _3;
_13 = (-30_i8) ^ 15_i8;
(*_12) = (*_9);
_8.fld2 = core::ptr::addr_of!(_20);
_19.fld7 = _6;
(*_10) = false;
_8.fld1 = !_16;
(*_12) = core::ptr::addr_of!(_18);
_20 = [3642662202_u32,2422898019_u32,2432016494_u32,105904698_u32,4043201472_u32,3888492804_u32,953116179_u32];
_23 = [1012338545_u32,2955470286_u32,2657231629_u32,5336010_u32,2362287145_u32,2931923980_u32,658416295_u32,1848665987_u32];
_8.fld3 = (_16, _19.fld5.1, _1);
match _8.fld3.2 {
340282366920938463463374607431768206422 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
(*_12) = core::ptr::addr_of!(_18);
_15 = !_19.fld0;
_19.fld5.2 = (*_5) as i16;
(*_12) = core::ptr::addr_of!((*_14));
RET = 44_u8;
_8.fld3.1 = 127_u8 as i64;
_19.fld0 = _15;
_8.fld3.1 = _19.fld5.1;
_8.fld3 = (_8.fld1, _19.fld5.1, _1);
_19.fld5.0 = _8.fld1;
_2 = [_8.fld3.1,_19.fld5.1,_8.fld3.1,_8.fld3.1,_8.fld3.1,_8.fld3.1,_19.fld5.1];
_19.fld7 = [_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_19.fld5.1,_19.fld5.1,_19.fld5.1];
_8.fld2 = core::ptr::addr_of!(_20);
_19.fld3 = _13 + _13;
match _1 {
0 => bb1,
1 => bb2,
2 => bb4,
340282366920938463463374607431768206422 => bb6,
_ => bb5
}
}
bb4 = {
Return()
}
bb5 = {
_19.fld7 = [_19.fld5.1,_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_8.fld3.1,_19.fld5.1];
_19.fld2.0 = [_8.fld1,_16,_8.fld1];
_20 = [109973476_u32,2924158162_u32,434575192_u32,871616381_u32,386899256_u32,501223541_u32,286899836_u32];
_19.fld4 = 571693746407146672_u64 << _16;
_18 = _8.fld1 as f64;
_19.fld5.2 = _8.fld3.2;
_19.fld5.1 = -_8.fld3.1;
_17 = _19.fld1;
_19.fld0 = _19.fld5.1 as u128;
(*_12) = core::ptr::addr_of!((*_14));
_12 = _3;
_13 = (-30_i8) ^ 15_i8;
(*_12) = (*_9);
_8.fld2 = core::ptr::addr_of!(_20);
_19.fld7 = _6;
(*_10) = false;
_8.fld1 = !_16;
(*_12) = core::ptr::addr_of!(_18);
_20 = [3642662202_u32,2422898019_u32,2432016494_u32,105904698_u32,4043201472_u32,3888492804_u32,953116179_u32];
_23 = [1012338545_u32,2955470286_u32,2657231629_u32,5336010_u32,2362287145_u32,2931923980_u32,658416295_u32,1848665987_u32];
_8.fld3 = (_16, _19.fld5.1, _1);
match _8.fld3.2 {
340282366920938463463374607431768206422 => bb3,
_ => bb2
}
}
bb6 = {
_19.fld6 = _19.fld5.1 | _8.fld3.1;
Goto(bb7)
}
bb7 = {
(*_4) = false;
_10 = core::ptr::addr_of_mut!((*_4));
_22 = 108_isize - 95_isize;
_19.fld3 = _13 | _13;
(*_10) = true;
_19.fld5.1 = _19.fld3 as i64;
_26 = _22;
_8.fld3.0 = _16 - _16;
_18 = _13 as f64;
_19.fld5.0 = _17 as u16;
_16 = _8.fld3.0 | _19.fld5.0;
(*_12) = (*_9);
_25 = 2_usize as f32;
_19.fld2.1 = _6;
(*_3) = core::ptr::addr_of!((*_14));
match _8.fld3.2 {
0 => bb5,
1 => bb4,
340282366920938463463374607431768206422 => bb9,
_ => bb8
}
}
bb8 = {
_19.fld7 = [_19.fld5.1,_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_8.fld3.1,_19.fld5.1];
_19.fld2.0 = [_8.fld1,_16,_8.fld1];
_20 = [109973476_u32,2924158162_u32,434575192_u32,871616381_u32,386899256_u32,501223541_u32,286899836_u32];
_19.fld4 = 571693746407146672_u64 << _16;
_18 = _8.fld1 as f64;
_19.fld5.2 = _8.fld3.2;
_19.fld5.1 = -_8.fld3.1;
_17 = _19.fld1;
_19.fld0 = _19.fld5.1 as u128;
(*_12) = core::ptr::addr_of!((*_14));
_12 = _3;
_13 = (-30_i8) ^ 15_i8;
(*_12) = (*_9);
_8.fld2 = core::ptr::addr_of!(_20);
_19.fld7 = _6;
(*_10) = false;
_8.fld1 = !_16;
(*_12) = core::ptr::addr_of!(_18);
_20 = [3642662202_u32,2422898019_u32,2432016494_u32,105904698_u32,4043201472_u32,3888492804_u32,953116179_u32];
_23 = [1012338545_u32,2955470286_u32,2657231629_u32,5336010_u32,2362287145_u32,2931923980_u32,658416295_u32,1848665987_u32];
_8.fld3 = (_16, _19.fld5.1, _1);
match _8.fld3.2 {
340282366920938463463374607431768206422 => bb3,
_ => bb2
}
}
bb9 = {
_15 = _19.fld1 as u128;
match _1 {
0 => bb8,
1 => bb2,
2 => bb3,
340282366920938463463374607431768206422 => bb10,
_ => bb5
}
}
bb10 = {
_1 = _19.fld5.2 | _8.fld3.2;
_27 = (*_10) as u16;
_14 = core::ptr::addr_of!((*_14));
(*_14) = _18 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000912271819311554_f64);
(*_4) = false ^ true;
_28 = (*_5) as f64;
(*_5) = _11;
_31 = 144616015117969301913141021788660671525_i128;
_19.fld7 = [_19.fld6,_19.fld6,_8.fld3.1,_8.fld3.1,_19.fld6,_8.fld3.1,_19.fld6];
(*_9) = core::ptr::addr_of!((*_14));
_20 = [2319795177_u32,3035544136_u32,3406555619_u32,3760099146_u32,1528400677_u32,1334982408_u32,3214566033_u32];
_17 = _19.fld1;
match _8.fld3.2 {
0 => bb1,
1 => bb8,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb11,
6 => bb12,
340282366920938463463374607431768206422 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
_19.fld7 = [_19.fld5.1,_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_8.fld3.1,_19.fld5.1];
_19.fld2.0 = [_8.fld1,_16,_8.fld1];
_20 = [109973476_u32,2924158162_u32,434575192_u32,871616381_u32,386899256_u32,501223541_u32,286899836_u32];
_19.fld4 = 571693746407146672_u64 << _16;
_18 = _8.fld1 as f64;
_19.fld5.2 = _8.fld3.2;
_19.fld5.1 = -_8.fld3.1;
_17 = _19.fld1;
_19.fld0 = _19.fld5.1 as u128;
(*_12) = core::ptr::addr_of!((*_14));
_12 = _3;
_13 = (-30_i8) ^ 15_i8;
(*_12) = (*_9);
_8.fld2 = core::ptr::addr_of!(_20);
_19.fld7 = _6;
(*_10) = false;
_8.fld1 = !_16;
(*_12) = core::ptr::addr_of!(_18);
_20 = [3642662202_u32,2422898019_u32,2432016494_u32,105904698_u32,4043201472_u32,3888492804_u32,953116179_u32];
_23 = [1012338545_u32,2955470286_u32,2657231629_u32,5336010_u32,2362287145_u32,2931923980_u32,658416295_u32,1848665987_u32];
_8.fld3 = (_16, _19.fld5.1, _1);
match _8.fld3.2 {
340282366920938463463374607431768206422 => bb3,
_ => bb2
}
}
bb13 = {
(*_12) = core::ptr::addr_of!(_18);
_15 = !_19.fld0;
_19.fld5.2 = (*_5) as i16;
(*_12) = core::ptr::addr_of!((*_14));
RET = 44_u8;
_8.fld3.1 = 127_u8 as i64;
_19.fld0 = _15;
_8.fld3.1 = _19.fld5.1;
_8.fld3 = (_8.fld1, _19.fld5.1, _1);
_19.fld5.0 = _8.fld1;
_2 = [_8.fld3.1,_19.fld5.1,_8.fld3.1,_8.fld3.1,_8.fld3.1,_8.fld3.1,_19.fld5.1];
_19.fld7 = [_19.fld5.1,_19.fld5.1,_8.fld3.1,_19.fld5.1,_19.fld5.1,_19.fld5.1,_19.fld5.1];
_8.fld2 = core::ptr::addr_of!(_20);
_19.fld3 = _13 + _13;
match _1 {
0 => bb1,
1 => bb2,
2 => bb4,
340282366920938463463374607431768206422 => bb6,
_ => bb5
}
}
bb14 = {
_32 = _13 as u16;
_27 = _31 as u16;
(*_5) = !_11;
_34.fld0.fld3 = core::ptr::addr_of_mut!(_25);
_8.fld3.2 = _1;
_33.fld3.0 = _32 + _27;
_33 = Adt53 { fld0: _4,fld1: _19.fld4,fld2: _34.fld0.fld3,fld3: _19.fld5,fld4: _23 };
_8.fld3 = (_16, _19.fld5.1, _19.fld5.2);
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(17_usize, 16_usize, Move(_16), 7_usize, Move(_7), 2_usize, Move(_2), 27_usize, Move(_27)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(17_usize, 6_usize, Move(_6), 17_usize, Move(_17), 20_usize, Move(_20), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(9753_i16), std::hint::black_box(8780114292656809220_u64), std::hint::black_box(7265105044072974985_i64)));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt48 {
fld0: *const i64,
fld1: [u32; 7],
fld2: [u8; 3],
fld3: (u128, u8),
fld4: u128,
fld5: *mut *const f64,
fld6: *const [u32; 7],
}
#[derive(Debug)]
pub struct Adt49 {
fld0: i128,
fld1: ((u128, u8),),
fld2: f64,
fld3: u16,
fld4: i16,
fld5: *const (u16, i64, i16),
fld6: [i64; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: (i32, u128, [u32; 7]),
fld1: i128,
fld2: (u16,),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: *const f64,
fld1: u16,
fld2: *const [u32; 7],
fld3: (u16, i64, i16),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: Adt51,
fld1: u64,
fld2: *const u16,
fld3: [u16; 3],
fld4: i16,
fld5: i32,
fld6: i64,
fld7: f32,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: *mut bool,
fld1: u64,
fld2: *mut f32,
fld3: (u16, i64, i16),
fld4: [u32; 8],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: *mut *const f64,
fld1: *mut bool,
fld2: *const [u32; 7],
fld3: i8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: *mut i128,
fld1: u32,
fld2: ((u128, u8),),
fld3: *mut f32,
fld4: (i8, u32),
fld5: i64,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: *mut *const f64,
fld1: *mut bool,
fld2: (u16,),
fld3: i8,
fld4: u16,
fld5: i32,
fld6: (*const i64, char, [i64; 7], *const i32, u16, *const i64),
fld7: Adt48,
}
#[derive(Debug)]
pub struct Adt57 {
fld0: u128,
fld1: char,
fld2: ([u16; 3], [i64; 7]),
fld3: i8,
fld4: u64,
fld5: (u16, i64, i16),
fld6: i64,
fld7: [i64; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt58 {
fld0: (u32, *const (u16, i64, i16), [i32; 3], i32, f32),
fld1: Adt54,
fld2: *mut *const f64,
fld3: *const [u32; 7],
fld4: (i32, u128, [u32; 7]),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: f32,
fld1: Adt50,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt60 {
fld0: Adt51,
fld1: *const bool,
fld2: Adt55,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: *const i32,
}
#[derive(Debug)]
pub struct Adt62 {
fld0: [u32; 7],
fld1: Adt57,
fld2: usize,
fld3: Adt51,
fld4: Adt49,
fld5: (i32, u128, [u32; 7]),
fld6: *const (u16, i64, i16),
}
#[derive(Debug)]
pub struct Adt63 {
fld0: *const f64,
fld1: usize,
fld2: Adt50,
fld3: (u16,),
fld4: [u16; 8],
fld5: (i8, u32),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt64 {
fld0: Adt55,
fld1: [u32; 7],
fld2: [i128; 7],
fld3: ((u16, i64, i16), *const i32, [i64; 7], [u32; 7]),
fld4: *mut *const f64,
}

