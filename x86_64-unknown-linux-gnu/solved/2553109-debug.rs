#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: usize,mut _2: u32,mut _3: u16,mut _4: i8,mut _5: i16,mut _6: u64) -> Adt44 {
mir! {
type RET = Adt44;
let _7: Adt48;
let _8: char;
let _9: bool;
let _10: [i32; 7];
let _11: *mut isize;
let _12: f32;
let _13: bool;
let _14: [isize; 2];
let _15: *mut u8;
let _16: [i8; 7];
let _17: f64;
let _18: isize;
let _19: Adt51;
let _20: isize;
let _21: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]);
let _22: u32;
let _23: *mut i64;
let _24: [u128; 6];
let _25: i16;
let _26: i16;
let _27: [i8; 7];
let _28: Adt51;
let _29: u64;
let _30: f64;
let _31: bool;
let _32: (i128, [i32; 7], i16, u64);
let _33: (i16,);
let _34: *mut i64;
let _35: Adt53;
let _36: f64;
let _37: [isize; 2];
let _38: f64;
let _39: usize;
let _40: (i8,);
let _41: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool);
let _42: isize;
let _43: char;
let _44: (i128, [i32; 7], i16, u64);
let _45: i8;
let _46: [isize; 2];
let _47: (i8,);
let _48: u128;
let _49: (i16,);
let _50: [u32; 3];
let _51: [u128; 6];
let _52: Adt45;
let _53: i32;
let _54: Adt45;
let _55: Adt57;
let _56: *mut u8;
let _57: ();
let _58: ();
{
_2 = '\u{3daf6}' as u32;
_6 = 4593603596547418226_u64 + 9333853971802643419_u64;
_1 = 6_usize * 3_usize;
_1 = 1_usize ^ 6189429754597509534_usize;
_5 = (-12901_i16) & 19892_i16;
_8 = '\u{b2b36}';
_4 = -124_i8;
_9 = true ^ true;
_9 = !false;
Goto(bb1)
}
bb1 = {
_3 = !43945_u16;
_10 = [(-164708628_i32),240145966_i32,2002717591_i32,1097155572_i32,(-403143676_i32),(-552958599_i32),1957129640_i32];
_1 = _3 as usize;
_1 = 1536398771008575421_usize;
_10 = [676399851_i32,(-101040560_i32),(-642347737_i32),2040476039_i32,1029028296_i32,(-1687471925_i32),2140716064_i32];
_12 = _4 as f32;
_2 = _1 as u32;
_5 = 24029_i16 + 30605_i16;
_9 = false;
_8 = '\u{692bc}';
_12 = (-737033347_i32) as f32;
_8 = '\u{f4706}';
_1 = _8 as usize;
_3 = 22387_u16;
_4 = 9223372036854775807_isize as i8;
_1 = (-92_isize) as usize;
_10 = [(-235979465_i32),(-463377048_i32),844234978_i32,(-855919860_i32),1811754278_i32,(-834566428_i32),(-867323290_i32)];
_10 = [(-301892919_i32),244847908_i32,(-2101972915_i32),185084566_i32,(-720567634_i32),1245250069_i32,(-846374405_i32)];
_10 = [(-541644883_i32),(-1761447068_i32),(-785977715_i32),(-1025028665_i32),755875200_i32,(-307134166_i32),1782392423_i32];
_14 = [(-65_isize),55_isize];
_17 = 41519572777722270662971815925636424614_u128 as f64;
_12 = 9223372036854775807_isize as f32;
_13 = _9;
_17 = _5 as f64;
_13 = !_9;
_12 = 146478558042216486623075721195846346763_i128 as f32;
Call(_8 = fn1(_17, _14, _10, _10, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = 203971534357718114960533480578489944404_u128 as usize;
_16 = [_4,_4,_4,_4,_4,_4,_4];
_12 = (-84522825306883639249725072384929944768_i128) as f32;
_4 = !30_i8;
_6 = 6038066114935629602_u64;
_9 = !_13;
_9 = !_13;
_17 = 9223372036854775807_isize as f64;
_3 = 5021_u16 ^ 46329_u16;
_9 = !_13;
_9 = _13 | _13;
_3 = 59479_u16;
_6 = !5366958400732638823_u64;
_14 = [66_isize,(-118_isize)];
_18 = (-9223372036854775808_isize);
_11 = core::ptr::addr_of_mut!(_18);
_3 = 37992_u16 + 29425_u16;
_18 = _4 as isize;
_19.fld2 = _8 as u128;
_18 = !(-97_isize);
_19.fld1.1 = !_6;
_19.fld1.0.0 = _4 * _4;
_17 = 583478591_i32 as f64;
_19.fld1.1 = _3 as u64;
_3 = 63592_u16;
match _3 {
0 => bb1,
63592 => bb4,
_ => bb3
}
}
bb3 = {
_3 = !43945_u16;
_10 = [(-164708628_i32),240145966_i32,2002717591_i32,1097155572_i32,(-403143676_i32),(-552958599_i32),1957129640_i32];
_1 = _3 as usize;
_1 = 1536398771008575421_usize;
_10 = [676399851_i32,(-101040560_i32),(-642347737_i32),2040476039_i32,1029028296_i32,(-1687471925_i32),2140716064_i32];
_12 = _4 as f32;
_2 = _1 as u32;
_5 = 24029_i16 + 30605_i16;
_9 = false;
_8 = '\u{692bc}';
_12 = (-737033347_i32) as f32;
_8 = '\u{f4706}';
_1 = _8 as usize;
_3 = 22387_u16;
_4 = 9223372036854775807_isize as i8;
_1 = (-92_isize) as usize;
_10 = [(-235979465_i32),(-463377048_i32),844234978_i32,(-855919860_i32),1811754278_i32,(-834566428_i32),(-867323290_i32)];
_10 = [(-301892919_i32),244847908_i32,(-2101972915_i32),185084566_i32,(-720567634_i32),1245250069_i32,(-846374405_i32)];
_10 = [(-541644883_i32),(-1761447068_i32),(-785977715_i32),(-1025028665_i32),755875200_i32,(-307134166_i32),1782392423_i32];
_14 = [(-65_isize),55_isize];
_17 = 41519572777722270662971815925636424614_u128 as f64;
_12 = 9223372036854775807_isize as f32;
_13 = _9;
_17 = _5 as f64;
_13 = !_9;
_12 = 146478558042216486623075721195846346763_i128 as f32;
Call(_8 = fn1(_17, _14, _10, _10, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_21.0.4 = -_17;
_21.1 = (_19.fld1.0, _19.fld1.1);
_21.2 = core::ptr::addr_of_mut!(_10);
_19.fld0 = _3 << _5;
_21.1.1 = _19.fld1.1 * _6;
match _3 {
0 => bb2,
1 => bb5,
2 => bb6,
63592 => bb8,
_ => bb7
}
}
bb5 = {
_3 = !43945_u16;
_10 = [(-164708628_i32),240145966_i32,2002717591_i32,1097155572_i32,(-403143676_i32),(-552958599_i32),1957129640_i32];
_1 = _3 as usize;
_1 = 1536398771008575421_usize;
_10 = [676399851_i32,(-101040560_i32),(-642347737_i32),2040476039_i32,1029028296_i32,(-1687471925_i32),2140716064_i32];
_12 = _4 as f32;
_2 = _1 as u32;
_5 = 24029_i16 + 30605_i16;
_9 = false;
_8 = '\u{692bc}';
_12 = (-737033347_i32) as f32;
_8 = '\u{f4706}';
_1 = _8 as usize;
_3 = 22387_u16;
_4 = 9223372036854775807_isize as i8;
_1 = (-92_isize) as usize;
_10 = [(-235979465_i32),(-463377048_i32),844234978_i32,(-855919860_i32),1811754278_i32,(-834566428_i32),(-867323290_i32)];
_10 = [(-301892919_i32),244847908_i32,(-2101972915_i32),185084566_i32,(-720567634_i32),1245250069_i32,(-846374405_i32)];
_10 = [(-541644883_i32),(-1761447068_i32),(-785977715_i32),(-1025028665_i32),755875200_i32,(-307134166_i32),1782392423_i32];
_14 = [(-65_isize),55_isize];
_17 = 41519572777722270662971815925636424614_u128 as f64;
_12 = 9223372036854775807_isize as f32;
_13 = _9;
_17 = _5 as f64;
_13 = !_9;
_12 = 146478558042216486623075721195846346763_i128 as f32;
Call(_8 = fn1(_17, _14, _10, _10, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
_1 = 203971534357718114960533480578489944404_u128 as usize;
_16 = [_4,_4,_4,_4,_4,_4,_4];
_12 = (-84522825306883639249725072384929944768_i128) as f32;
_4 = !30_i8;
_6 = 6038066114935629602_u64;
_9 = !_13;
_9 = !_13;
_17 = 9223372036854775807_isize as f64;
_3 = 5021_u16 ^ 46329_u16;
_9 = !_13;
_9 = _13 | _13;
_3 = 59479_u16;
_6 = !5366958400732638823_u64;
_14 = [66_isize,(-118_isize)];
_18 = (-9223372036854775808_isize);
_11 = core::ptr::addr_of_mut!(_18);
_3 = 37992_u16 + 29425_u16;
_18 = _4 as isize;
_19.fld2 = _8 as u128;
_18 = !(-97_isize);
_19.fld1.1 = !_6;
_19.fld1.0.0 = _4 * _4;
_17 = 583478591_i32 as f64;
_19.fld1.1 = _3 as u64;
_3 = 63592_u16;
match _3 {
0 => bb1,
63592 => bb4,
_ => bb3
}
}
bb7 = {
_3 = !43945_u16;
_10 = [(-164708628_i32),240145966_i32,2002717591_i32,1097155572_i32,(-403143676_i32),(-552958599_i32),1957129640_i32];
_1 = _3 as usize;
_1 = 1536398771008575421_usize;
_10 = [676399851_i32,(-101040560_i32),(-642347737_i32),2040476039_i32,1029028296_i32,(-1687471925_i32),2140716064_i32];
_12 = _4 as f32;
_2 = _1 as u32;
_5 = 24029_i16 + 30605_i16;
_9 = false;
_8 = '\u{692bc}';
_12 = (-737033347_i32) as f32;
_8 = '\u{f4706}';
_1 = _8 as usize;
_3 = 22387_u16;
_4 = 9223372036854775807_isize as i8;
_1 = (-92_isize) as usize;
_10 = [(-235979465_i32),(-463377048_i32),844234978_i32,(-855919860_i32),1811754278_i32,(-834566428_i32),(-867323290_i32)];
_10 = [(-301892919_i32),244847908_i32,(-2101972915_i32),185084566_i32,(-720567634_i32),1245250069_i32,(-846374405_i32)];
_10 = [(-541644883_i32),(-1761447068_i32),(-785977715_i32),(-1025028665_i32),755875200_i32,(-307134166_i32),1782392423_i32];
_14 = [(-65_isize),55_isize];
_17 = 41519572777722270662971815925636424614_u128 as f64;
_12 = 9223372036854775807_isize as f32;
_13 = _9;
_17 = _5 as f64;
_13 = !_9;
_12 = 146478558042216486623075721195846346763_i128 as f32;
Call(_8 = fn1(_17, _14, _10, _10, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
_5 = (-5337_i16);
_8 = '\u{a329}';
_14 = [(*_11),(*_11)];
_21.1.1 = !_19.fld1.1;
_17 = _21.0.4;
_19 = Adt51 { fld0: _3,fld1: _21.1,fld2: 158449743165526093232187383941014423388_u128 };
Goto(bb9)
}
bb9 = {
_21.0.0 = _14;
_12 = (-821199625_i32) as f32;
_19.fld2 = 25026557277078388326109358055071596993_u128 >> _5;
_19.fld1 = (_21.1.0, _21.1.1);
_20 = -(*_11);
_19.fld1.0 = _21.1.0;
_28.fld1.0.0 = -_19.fld1.0.0;
_19.fld1.0.0 = _28.fld1.0.0;
_21.1 = _19.fld1;
_28.fld1 = _21.1;
_18 = _8 as isize;
_24 = [_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2];
_26 = _5 + _5;
_28.fld1.1 = _21.1.1 | _21.1.1;
_21.0.2 = _13 as u16;
_25 = _26;
_9 = _6 != _19.fld1.1;
_28.fld1 = (_19.fld1.0, _21.1.1);
_21.2 = core::ptr::addr_of_mut!(_10);
_24 = [_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2];
_1 = 2_usize * 9396845811264499610_usize;
_10 = [(-1150679205_i32),1763560146_i32,447132345_i32,476036876_i32,(-767014145_i32),(-2055230294_i32),(-2085134620_i32)];
_27 = [_28.fld1.0.0,_21.1.0.0,_19.fld1.0.0,_4,_19.fld1.0.0,_21.1.0.0,_21.1.0.0];
_28.fld1.0.0 = -_21.1.0.0;
_27 = _16;
Goto(bb10)
}
bb10 = {
_29 = _28.fld1.1;
_21.0.1 = _12;
_9 = !_13;
_9 = !_13;
_19.fld1.0.0 = _19.fld2 as i8;
_1 = !4_usize;
_19.fld1.1 = _21.1.1;
_21.2 = core::ptr::addr_of_mut!(_10);
_21.1 = _28.fld1;
_2 = 132969250_u32 - 2948303444_u32;
_28.fld1.0 = (_21.1.0.0,);
_17 = _21.0.4 + _21.0.4;
_8 = '\u{fa0b0}';
_29 = _28.fld1.1;
_8 = '\u{58ee7}';
_28 = Adt51 { fld0: _19.fld0,fld1: _19.fld1,fld2: _19.fld2 };
_10 = [795457220_i32,569015508_i32,(-279294551_i32),1351196755_i32,(-861033183_i32),(-1410840255_i32),462867099_i32];
_17 = -_21.0.4;
_28.fld1 = (_21.1.0, _19.fld1.1);
_31 = _9;
_1 = 1_usize >> _2;
_29 = _28.fld1.1;
_1 = 6_usize << _28.fld1.0.0;
_31 = !_13;
_19.fld1.0.0 = _21.1.0.0 >> _1;
match _19.fld0 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
63592 => bb11,
_ => bb6
}
}
bb11 = {
_19.fld1.1 = 217_u8 as u64;
_13 = _26 != _25;
_35.fld0.2.0.3 = _20 as u64;
_31 = !_9;
_32.0 = 156965990976514235381944452603320429000_i128;
_19 = Move(_28);
_35.fld0.2.0 = (_32.0, _10, _25, _29);
_6 = _35.fld0.2.0.3;
_19.fld1.0.0 = _21.1.0.0;
_32 = (_35.fld0.2.0.0, _10, _35.fld0.2.0.2, _21.1.1);
_2 = _32.0 as u32;
_35.fld0.1 = (*_11);
_2 = !300162315_u32;
_17 = _21.0.4;
_23 = core::ptr::addr_of_mut!(_35.fld0.2.2);
_22 = _2 - _2;
_28 = Adt51 { fld0: _3,fld1: _21.1,fld2: _19.fld2 };
Goto(bb12)
}
bb12 = {
_21.2 = core::ptr::addr_of_mut!(_32.1);
_21.0.2 = _28.fld0;
_19.fld2 = !_28.fld2;
_1 = _32.0 as usize;
_18 = _19.fld1.0.0 as isize;
_5 = -_35.fld0.2.0.2;
_35.fld1 = [_19.fld1.0.0,_21.1.0.0,_19.fld1.0.0,_4,_21.1.0.0,_4,_21.1.0.0];
_21.0.3 = core::ptr::addr_of!((*_23));
_34 = core::ptr::addr_of_mut!(_35.fld0.2.2);
_28.fld1.1 = _19.fld1.1;
_38 = _21.0.4;
_28.fld1 = _21.1;
_32.1 = _35.fld0.2.0.1;
_35.fld0.2.0.1 = [1462775310_i32,(-1145286822_i32),1075785654_i32,993238504_i32,147380610_i32,1168018607_i32,(-479952571_i32)];
_36 = -_17;
_32.1 = [235631450_i32,1675278708_i32,1550135447_i32,1562493424_i32,(-1905773431_i32),(-1414490081_i32),2039604551_i32];
_37 = [(*_11),(*_11)];
_36 = _21.0.4 + _17;
_5 = _32.2;
_35.fld1 = [_21.1.0.0,_19.fld1.0.0,_21.1.0.0,_19.fld1.0.0,_21.1.0.0,_4,_4];
_21.1.0.0 = _19.fld1.0.0 - _19.fld1.0.0;
_35.fld0.0 = _21.0.1;
match _28.fld0 {
0 => bb7,
63592 => bb14,
_ => bb13
}
}
bb13 = {
_3 = !43945_u16;
_10 = [(-164708628_i32),240145966_i32,2002717591_i32,1097155572_i32,(-403143676_i32),(-552958599_i32),1957129640_i32];
_1 = _3 as usize;
_1 = 1536398771008575421_usize;
_10 = [676399851_i32,(-101040560_i32),(-642347737_i32),2040476039_i32,1029028296_i32,(-1687471925_i32),2140716064_i32];
_12 = _4 as f32;
_2 = _1 as u32;
_5 = 24029_i16 + 30605_i16;
_9 = false;
_8 = '\u{692bc}';
_12 = (-737033347_i32) as f32;
_8 = '\u{f4706}';
_1 = _8 as usize;
_3 = 22387_u16;
_4 = 9223372036854775807_isize as i8;
_1 = (-92_isize) as usize;
_10 = [(-235979465_i32),(-463377048_i32),844234978_i32,(-855919860_i32),1811754278_i32,(-834566428_i32),(-867323290_i32)];
_10 = [(-301892919_i32),244847908_i32,(-2101972915_i32),185084566_i32,(-720567634_i32),1245250069_i32,(-846374405_i32)];
_10 = [(-541644883_i32),(-1761447068_i32),(-785977715_i32),(-1025028665_i32),755875200_i32,(-307134166_i32),1782392423_i32];
_14 = [(-65_isize),55_isize];
_17 = 41519572777722270662971815925636424614_u128 as f64;
_12 = 9223372036854775807_isize as f32;
_13 = _9;
_17 = _5 as f64;
_13 = !_9;
_12 = 146478558042216486623075721195846346763_i128 as f32;
Call(_8 = fn1(_17, _14, _10, _10, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_19.fld1.0 = (_21.1.0.0,);
_10 = [1003866347_i32,(-268775013_i32),1736436334_i32,1896078289_i32,1180604630_i32,1374946156_i32,15543730_i32];
_40.0 = _35.fld0.2.0.0 as i8;
_32.1 = [(-707654451_i32),804455725_i32,(-1773232498_i32),872148381_i32,512889214_i32,(-1527074212_i32),700095311_i32];
_22 = _2;
_39 = _1;
_30 = -_17;
_41.2.0.3 = _19.fld1.1;
_41.2.0.1 = [(-869862512_i32),(-1491918689_i32),665603187_i32,2034721053_i32,(-1513241776_i32),1229342868_i32,398671148_i32];
_8 = '\u{94438}';
_41.2.0 = (_35.fld0.2.0.0, _35.fld0.2.0.1, _25, _28.fld1.1);
_19.fld1 = _21.1;
_43 = _8;
match _21.0.2 {
0 => bb1,
1 => bb12,
2 => bb8,
3 => bb7,
4 => bb5,
5 => bb15,
6 => bb16,
63592 => bb18,
_ => bb17
}
}
bb15 = {
_5 = (-5337_i16);
_8 = '\u{a329}';
_14 = [(*_11),(*_11)];
_21.1.1 = !_19.fld1.1;
_17 = _21.0.4;
_19 = Adt51 { fld0: _3,fld1: _21.1,fld2: 158449743165526093232187383941014423388_u128 };
Goto(bb9)
}
bb16 = {
_21.0.0 = _14;
_12 = (-821199625_i32) as f32;
_19.fld2 = 25026557277078388326109358055071596993_u128 >> _5;
_19.fld1 = (_21.1.0, _21.1.1);
_20 = -(*_11);
_19.fld1.0 = _21.1.0;
_28.fld1.0.0 = -_19.fld1.0.0;
_19.fld1.0.0 = _28.fld1.0.0;
_21.1 = _19.fld1;
_28.fld1 = _21.1;
_18 = _8 as isize;
_24 = [_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2];
_26 = _5 + _5;
_28.fld1.1 = _21.1.1 | _21.1.1;
_21.0.2 = _13 as u16;
_25 = _26;
_9 = _6 != _19.fld1.1;
_28.fld1 = (_19.fld1.0, _21.1.1);
_21.2 = core::ptr::addr_of_mut!(_10);
_24 = [_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2,_19.fld2];
_1 = 2_usize * 9396845811264499610_usize;
_10 = [(-1150679205_i32),1763560146_i32,447132345_i32,476036876_i32,(-767014145_i32),(-2055230294_i32),(-2085134620_i32)];
_27 = [_28.fld1.0.0,_21.1.0.0,_19.fld1.0.0,_4,_19.fld1.0.0,_21.1.0.0,_21.1.0.0];
_28.fld1.0.0 = -_21.1.0.0;
_27 = _16;
Goto(bb10)
}
bb17 = {
_1 = 203971534357718114960533480578489944404_u128 as usize;
_16 = [_4,_4,_4,_4,_4,_4,_4];
_12 = (-84522825306883639249725072384929944768_i128) as f32;
_4 = !30_i8;
_6 = 6038066114935629602_u64;
_9 = !_13;
_9 = !_13;
_17 = 9223372036854775807_isize as f64;
_3 = 5021_u16 ^ 46329_u16;
_9 = !_13;
_9 = _13 | _13;
_3 = 59479_u16;
_6 = !5366958400732638823_u64;
_14 = [66_isize,(-118_isize)];
_18 = (-9223372036854775808_isize);
_11 = core::ptr::addr_of_mut!(_18);
_3 = 37992_u16 + 29425_u16;
_18 = _4 as isize;
_19.fld2 = _8 as u128;
_18 = !(-97_isize);
_19.fld1.1 = !_6;
_19.fld1.0.0 = _4 * _4;
_17 = 583478591_i32 as f64;
_19.fld1.1 = _3 as u64;
_3 = 63592_u16;
match _3 {
0 => bb1,
63592 => bb4,
_ => bb3
}
}
bb18 = {
_43 = _8;
_40.0 = _21.1.0.0 << _19.fld1.0.0;
_11 = core::ptr::addr_of_mut!((*_11));
_21.0.2 = _28.fld0;
_35.fld0.2.0.2 = -_25;
_13 = _31;
_33.0 = !_41.2.0.2;
_34 = core::ptr::addr_of_mut!((*_34));
_44.1 = [1414475509_i32,1924461205_i32,446330379_i32,(-1783609368_i32),(-1634139886_i32),12472172_i32,(-639571987_i32)];
_42 = _18 >> _21.1.0.0;
_41.2.2 = !1029411363690651322_i64;
_21.0.2 = _3 + _28.fld0;
_21.0.3 = core::ptr::addr_of!(_35.fld0.2.2);
_6 = _19.fld1.1;
_37 = [(*_11),(*_11)];
match _32.0 {
0 => bb11,
1 => bb14,
2 => bb3,
3 => bb13,
4 => bb9,
5 => bb17,
6 => bb12,
156965990976514235381944452603320429000 => bb20,
_ => bb19
}
}
bb19 = {
_1 = 203971534357718114960533480578489944404_u128 as usize;
_16 = [_4,_4,_4,_4,_4,_4,_4];
_12 = (-84522825306883639249725072384929944768_i128) as f32;
_4 = !30_i8;
_6 = 6038066114935629602_u64;
_9 = !_13;
_9 = !_13;
_17 = 9223372036854775807_isize as f64;
_3 = 5021_u16 ^ 46329_u16;
_9 = !_13;
_9 = _13 | _13;
_3 = 59479_u16;
_6 = !5366958400732638823_u64;
_14 = [66_isize,(-118_isize)];
_18 = (-9223372036854775808_isize);
_11 = core::ptr::addr_of_mut!(_18);
_3 = 37992_u16 + 29425_u16;
_18 = _4 as isize;
_19.fld2 = _8 as u128;
_18 = !(-97_isize);
_19.fld1.1 = !_6;
_19.fld1.0.0 = _4 * _4;
_17 = 583478591_i32 as f64;
_19.fld1.1 = _3 as u64;
_3 = 63592_u16;
match _3 {
0 => bb1,
63592 => bb4,
_ => bb3
}
}
bb20 = {
_29 = _35.fld0.2.0.3 + _28.fld1.1;
_41.0 = 51_u8 as f32;
_45 = _40.0;
_21.2 = core::ptr::addr_of_mut!(_10);
_21.1.1 = _29;
_19.fld1.0.0 = _40.0;
_41.2.0.1 = _35.fld0.2.0.1;
_41.2.2 = _12 as i64;
_41.2.0.0 = _28.fld1.0.0 as i128;
_4 = _40.0;
_32.1 = [(-1399037984_i32),2032077790_i32,(-1969821706_i32),(-380678516_i32),1935121384_i32,(-270256490_i32),(-1479225714_i32)];
_26 = _41.2.0.2 >> _4;
_40 = _19.fld1.0;
_28 = Adt51 { fld0: _3,fld1: _19.fld1,fld2: _19.fld2 };
_41.1 = (*_11) + _42;
_32 = _41.2.0;
_35.fld0.2.2 = _41.2.2;
_42 = 145_u8 as isize;
_43 = _8;
_35.fld0.2.0.1 = [(-964003211_i32),(-587434020_i32),(-1128429887_i32),(-253084589_i32),(-539320400_i32),(-1973251509_i32),(-388713228_i32)];
_43 = _8;
Goto(bb21)
}
bb21 = {
_41.2 = (_32, _35.fld1, (*_34));
_21.0.1 = -_12;
_41.2.0.3 = !_32.3;
_13 = _31;
_21.1.1 = _28.fld1.1 >> _26;
_41.2.1 = [_4,_45,_45,_21.1.0.0,_4,_4,_21.1.0.0];
_51 = [_28.fld2,_19.fld2,_28.fld2,_28.fld2,_19.fld2,_28.fld2];
_35.fld0.0 = _41.0 - _12;
_35.fld0.2.0.0 = _28.fld2 as i128;
_46 = _14;
_41.2.2 = _22 as i64;
_43 = _8;
_37 = _14;
Goto(bb22)
}
bb22 = {
_8 = _43;
_49 = _33;
_26 = _41.2.0.2;
_21.0.2 = 5023234_i32 as u16;
_49 = _33;
_10 = _35.fld0.2.0.1;
_5 = _49.0 * _32.2;
_28.fld1.0.0 = _19.fld1.0.0 >> _35.fld0.2.0.0;
_40 = (_21.1.0.0,);
_18 = !_41.1;
RET = Adt44::Variant0 { fld0: _32,fld1: _35.fld1 };
place!(Field::<(i128, [i32; 7], i16, u64)>(Variant(RET, 0), 0)) = (_35.fld0.2.0.0, _10, _25, _21.1.1);
place!(Field::<(i128, [i32; 7], i16, u64)>(Variant(RET, 0), 0)) = _32;
_55.fld4 = core::ptr::addr_of_mut!(_35.fld0.2.2);
_12 = _22 as f32;
_41.2.2 = (*_23);
_35.fld0 = (_12, _18, _41.2, _31);
_35.fld0.2.0.2 = _49.0 | _25;
_55.fld5 = (_22, _14);
_28.fld0 = _19.fld0 | _21.0.2;
Goto(bb23)
}
bb23 = {
Call(_57 = dump_var(0_usize, 37_usize, Move(_37), 14_usize, Move(_14), 9_usize, Move(_9), 27_usize, Move(_27)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_57 = dump_var(0_usize, 10_usize, Move(_10), 4_usize, Move(_4), 29_usize, Move(_29), 6_usize, Move(_6)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_57 = dump_var(0_usize, 22_usize, Move(_22), 3_usize, Move(_3), 5_usize, Move(_5), 33_usize, Move(_33)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_57 = dump_var(0_usize, 20_usize, Move(_20), 2_usize, Move(_2), 51_usize, Move(_51), 46_usize, Move(_46)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: f64,mut _2: [isize; 2],mut _3: [i32; 7],mut _4: [i32; 7],mut _5: bool) -> char {
mir! {
type RET = char;
let _6: i16;
let _7: [u32; 3];
let _8: [isize; 2];
let _9: isize;
let _10: (i16,);
let _11: i64;
let _12: Adt51;
let _13: &'static char;
let _14: Adt52;
let _15: f64;
let _16: char;
let _17: [u32; 3];
let _18: bool;
let _19: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _20: (u64,);
let _21: *const *mut [i32; 7];
let _22: Adt59;
let _23: (u32, [isize; 2]);
let _24: i128;
let _25: i64;
let _26: ([i32; 7], i128, *mut u8);
let _27: char;
let _28: f32;
let _29: i64;
let _30: ((i8,), u64);
let _31: [isize; 2];
let _32: [u128; 6];
let _33: &'static char;
let _34: Adt49;
let _35: ();
let _36: ();
{
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize)];
RET = '\u{fef87}';
_2 = [96_isize,(-9223372036854775808_isize)];
Call(_1 = fn2(_2, _4, RET, _4, _4, _4, _4, _3, _4, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = [881759067_i32,943976157_i32,1623658789_i32,55594853_i32,318840691_i32,1464332335_i32,1706572387_i32];
_1 = 193193921488437968610675556862022004455_u128 as f64;
_1 = 20610_i16 as f64;
_4 = _3;
_6 = 6211_i16 << 3_usize;
RET = '\u{97922}';
_3 = _4;
_1 = 328225704_u32 as f64;
_6 = (-4374_i16);
RET = '\u{3c2c6}';
RET = '\u{4da43}';
RET = '\u{86ad1}';
_6 = !(-8634_i16);
_5 = !false;
_6 = !(-15131_i16);
_6 = 19249_i16;
_4 = [(-1489206500_i32),(-1954355258_i32),(-454177246_i32),(-560583774_i32),671677121_i32,(-262575210_i32),1761593453_i32];
_5 = !true;
_4 = [487640371_i32,1905595820_i32,(-1306918853_i32),1338102595_i32,1092247643_i32,(-1284663119_i32),(-2098286142_i32)];
_3 = [1712002264_i32,1715809996_i32,291070161_i32,799228509_i32,(-2050487778_i32),2086350342_i32,717134511_i32];
_6 = !22246_i16;
RET = '\u{108816}';
Goto(bb2)
}
bb2 = {
RET = '\u{5054f}';
_6 = -1638_i16;
_4 = [1274594682_i32,715778712_i32,(-1067556172_i32),1713141943_i32,(-6980041_i32),832337828_i32,(-2091189550_i32)];
_4 = _3;
_8 = [9223372036854775807_isize,(-7_isize)];
_7 = [1373877386_u32,1643982078_u32,885342468_u32];
_7 = [337707_u32,4141645524_u32,3434916593_u32];
_5 = true;
_7 = [4130661099_u32,3541468255_u32,1416020775_u32];
_9 = 7_usize as isize;
_7 = [4093771456_u32,293900485_u32,236225322_u32];
_2 = _8;
RET = '\u{eb6d6}';
_7 = [1747269311_u32,3959539342_u32,4080096131_u32];
_10 = (_6,);
_6 = _10.0 + _10.0;
_9 = 3773321521_u32 as isize;
_9 = 9223372036854775807_isize;
_3 = [(-1029818001_i32),(-645601948_i32),1948384838_i32,756308261_i32,(-289191696_i32),(-364140808_i32),580775644_i32];
_2 = [_9,_9];
match _9 {
9223372036854775807 => bb4,
_ => bb3
}
}
bb3 = {
_3 = [881759067_i32,943976157_i32,1623658789_i32,55594853_i32,318840691_i32,1464332335_i32,1706572387_i32];
_1 = 193193921488437968610675556862022004455_u128 as f64;
_1 = 20610_i16 as f64;
_4 = _3;
_6 = 6211_i16 << 3_usize;
RET = '\u{97922}';
_3 = _4;
_1 = 328225704_u32 as f64;
_6 = (-4374_i16);
RET = '\u{3c2c6}';
RET = '\u{4da43}';
RET = '\u{86ad1}';
_6 = !(-8634_i16);
_5 = !false;
_6 = !(-15131_i16);
_6 = 19249_i16;
_4 = [(-1489206500_i32),(-1954355258_i32),(-454177246_i32),(-560583774_i32),671677121_i32,(-262575210_i32),1761593453_i32];
_5 = !true;
_4 = [487640371_i32,1905595820_i32,(-1306918853_i32),1338102595_i32,1092247643_i32,(-1284663119_i32),(-2098286142_i32)];
_3 = [1712002264_i32,1715809996_i32,291070161_i32,799228509_i32,(-2050487778_i32),2086350342_i32,717134511_i32];
_6 = !22246_i16;
RET = '\u{108816}';
Goto(bb2)
}
bb4 = {
_1 = 122_u8 as f64;
_7 = [3766133280_u32,4222121418_u32,437335509_u32];
_11 = (-579020726089126637_i64);
_11 = 40_u8 as i64;
_6 = _10.0;
_8 = [_9,_9];
_8 = [_9,_9];
_10.0 = !_6;
_13 = &RET;
_4 = _3;
_12.fld0 = 2271151143_u32 as u16;
_2 = [_9,_9];
_12.fld1.0 = ((-65_i8),);
_4 = [1409967009_i32,(-339808519_i32),444666267_i32,2081843451_i32,923714940_i32,(-283120456_i32),(-201905659_i32)];
_12.fld1.1 = !4354649615800374858_u64;
_4 = [(-2143351588_i32),(-119555_i32),(-2101682485_i32),1648577722_i32,1855059125_i32,2019161675_i32,1722714755_i32];
_11 = (-6874814185943887558_i64) + (-549147064836082576_i64);
_12.fld2 = 339568477782995695282705933902631797049_u128 & 71249369513388383005931281241954381602_u128;
_6 = -_10.0;
_4 = [(-1427713487_i32),(-634486861_i32),(-688689472_i32),564056951_i32,886491433_i32,(-1029852113_i32),(-234733301_i32)];
RET = '\u{f5e89}';
_1 = 1555716414_i32 as f64;
_2 = [_9,_9];
_12.fld1.0 = ((-114_i8),);
RET = '\u{3d110}';
_5 = true;
match _12.fld1.0.0 {
340282366920938463463374607431768211342 => bb6,
_ => bb5
}
}
bb5 = {
_3 = [881759067_i32,943976157_i32,1623658789_i32,55594853_i32,318840691_i32,1464332335_i32,1706572387_i32];
_1 = 193193921488437968610675556862022004455_u128 as f64;
_1 = 20610_i16 as f64;
_4 = _3;
_6 = 6211_i16 << 3_usize;
RET = '\u{97922}';
_3 = _4;
_1 = 328225704_u32 as f64;
_6 = (-4374_i16);
RET = '\u{3c2c6}';
RET = '\u{4da43}';
RET = '\u{86ad1}';
_6 = !(-8634_i16);
_5 = !false;
_6 = !(-15131_i16);
_6 = 19249_i16;
_4 = [(-1489206500_i32),(-1954355258_i32),(-454177246_i32),(-560583774_i32),671677121_i32,(-262575210_i32),1761593453_i32];
_5 = !true;
_4 = [487640371_i32,1905595820_i32,(-1306918853_i32),1338102595_i32,1092247643_i32,(-1284663119_i32),(-2098286142_i32)];
_3 = [1712002264_i32,1715809996_i32,291070161_i32,799228509_i32,(-2050487778_i32),2086350342_i32,717134511_i32];
_6 = !22246_i16;
RET = '\u{108816}';
Goto(bb2)
}
bb6 = {
_4 = [(-530420654_i32),704371976_i32,228156582_i32,(-1477063068_i32),91917165_i32,997339625_i32,(-1924443898_i32)];
_15 = _1 + _1;
_10 = (_6,);
match _9 {
0 => bb3,
9223372036854775807 => bb7,
_ => bb2
}
}
bb7 = {
_1 = _15;
RET = '\u{4c9b0}';
_10.0 = _6 - _6;
_8 = _2;
_1 = _15 + _15;
_12.fld0 = 60303_u16 ^ 2671_u16;
_18 = !_5;
_20.0 = (-3671435114000931459504146960308304387_i128) as u64;
Goto(bb8)
}
bb8 = {
_6 = _11 as i16;
_9 = !(-51_isize);
_19.0.2 = _1 as i16;
_18 = _5;
_1 = -_15;
_12.fld1.0.0 = RET as i8;
_12.fld2 = 232647478908738503886316190625853288930_u128;
_19.0.1 = [(-1303694795_i32),26849878_i32,1685586816_i32,1430643684_i32,(-1039648847_i32),395425799_i32,(-1447902090_i32)];
_20.0 = _12.fld1.1;
_19.2 = -_11;
_19.0.0 = !(-138462811040159733337223534138142432570_i128);
_12.fld1.0.0 = (-55_i8) >> _10.0;
_19.0.3 = _20.0;
_1 = -_15;
_20 = (_19.0.3,);
_12.fld0 = RET as u16;
_17 = [3073369365_u32,3433279340_u32,693001007_u32];
_2 = [_9,_9];
_10 = (_19.0.2,);
_12.fld1.0.0 = 78_i8 - 37_i8;
_19.0.1 = _3;
_23 = (510398642_u32, _2);
match _23.0 {
0 => bb5,
1 => bb4,
2 => bb9,
510398642 => bb11,
_ => bb10
}
}
bb9 = {
_1 = _15;
RET = '\u{4c9b0}';
_10.0 = _6 - _6;
_8 = _2;
_1 = _15 + _15;
_12.fld0 = 60303_u16 ^ 2671_u16;
_18 = !_5;
_20.0 = (-3671435114000931459504146960308304387_i128) as u64;
Goto(bb8)
}
bb10 = {
_3 = [881759067_i32,943976157_i32,1623658789_i32,55594853_i32,318840691_i32,1464332335_i32,1706572387_i32];
_1 = 193193921488437968610675556862022004455_u128 as f64;
_1 = 20610_i16 as f64;
_4 = _3;
_6 = 6211_i16 << 3_usize;
RET = '\u{97922}';
_3 = _4;
_1 = 328225704_u32 as f64;
_6 = (-4374_i16);
RET = '\u{3c2c6}';
RET = '\u{4da43}';
RET = '\u{86ad1}';
_6 = !(-8634_i16);
_5 = !false;
_6 = !(-15131_i16);
_6 = 19249_i16;
_4 = [(-1489206500_i32),(-1954355258_i32),(-454177246_i32),(-560583774_i32),671677121_i32,(-262575210_i32),1761593453_i32];
_5 = !true;
_4 = [487640371_i32,1905595820_i32,(-1306918853_i32),1338102595_i32,1092247643_i32,(-1284663119_i32),(-2098286142_i32)];
_3 = [1712002264_i32,1715809996_i32,291070161_i32,799228509_i32,(-2050487778_i32),2086350342_i32,717134511_i32];
_6 = !22246_i16;
RET = '\u{108816}';
Goto(bb2)
}
bb11 = {
_25 = -_19.2;
_26.1 = !_19.0.0;
_27 = RET;
_19.1 = [_12.fld1.0.0,_12.fld1.0.0,_12.fld1.0.0,_12.fld1.0.0,_12.fld1.0.0,_12.fld1.0.0,_12.fld1.0.0];
_12.fld1.0.0 = 31_i8;
_30.1 = _12.fld1.1;
RET = _27;
_11 = _19.2 >> _9;
Goto(bb12)
}
bb12 = {
_12.fld1.1 = _19.0.3 * _30.1;
_28 = _9 as f32;
_29 = _18 as i64;
match _23.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb5,
5 => bb9,
6 => bb7,
510398642 => bb14,
_ => bb13
}
}
bb13 = {
RET = '\u{5054f}';
_6 = -1638_i16;
_4 = [1274594682_i32,715778712_i32,(-1067556172_i32),1713141943_i32,(-6980041_i32),832337828_i32,(-2091189550_i32)];
_4 = _3;
_8 = [9223372036854775807_isize,(-7_isize)];
_7 = [1373877386_u32,1643982078_u32,885342468_u32];
_7 = [337707_u32,4141645524_u32,3434916593_u32];
_5 = true;
_7 = [4130661099_u32,3541468255_u32,1416020775_u32];
_9 = 7_usize as isize;
_7 = [4093771456_u32,293900485_u32,236225322_u32];
_2 = _8;
RET = '\u{eb6d6}';
_7 = [1747269311_u32,3959539342_u32,4080096131_u32];
_10 = (_6,);
_6 = _10.0 + _10.0;
_9 = 3773321521_u32 as isize;
_9 = 9223372036854775807_isize;
_3 = [(-1029818001_i32),(-645601948_i32),1948384838_i32,756308261_i32,(-289191696_i32),(-364140808_i32),580775644_i32];
_2 = [_9,_9];
match _9 {
9223372036854775807 => bb4,
_ => bb3
}
}
bb14 = {
_12.fld2 = !326543884169699703046544165938363795373_u128;
_30.0.0 = _12.fld1.0.0;
_17 = _7;
_19.1 = [_30.0.0,_12.fld1.0.0,_12.fld1.0.0,_30.0.0,_12.fld1.0.0,_12.fld1.0.0,_12.fld1.0.0];
_13 = &RET;
RET = _27;
_13 = &_27;
_34.fld2.0 = -_19.0.0;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(1_usize, 3_usize, Move(_3), 2_usize, Move(_2), 19_usize, Move(_19), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(1_usize, 30_usize, Move(_30), 6_usize, Move(_6), 18_usize, Move(_18), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(1_usize, 25_usize, Move(_25), 36_usize, _36, 36_usize, _36, 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [isize; 2],mut _2: [i32; 7],mut _3: char,mut _4: [i32; 7],mut _5: [i32; 7],mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [i32; 7],mut _9: [i32; 7],mut _10: [i32; 7]) -> f64 {
mir! {
type RET = f64;
let _11: Adt51;
let _12: ((i8,), u64);
let _13: Adt59;
let _14: isize;
let _15: *mut *const *mut [i32; 7];
let _16: (i16,);
let _17: *mut [i32; 7];
let _18: *const *mut [i32; 7];
let _19: (u64,);
let _20: f64;
let _21: *const *mut [i32; 7];
let _22: u16;
let _23: *mut u8;
let _24: Adt53;
let _25: i32;
let _26: (u16, [isize; 2], u16);
let _27: ();
let _28: ();
{
_4 = [(-788522141_i32),(-1037183965_i32),108179316_i32,977230639_i32,1323724505_i32,(-230072644_i32),(-785028193_i32)];
_9 = [(-1759770314_i32),(-119952874_i32),(-1478721818_i32),85551430_i32,1206618133_i32,1559320165_i32,(-1355714485_i32)];
_5 = [(-2028619520_i32),411962423_i32,79999587_i32,1476124816_i32,954814548_i32,1585493793_i32,(-1207970695_i32)];
_9 = [1912914044_i32,1267308995_i32,(-1765785371_i32),(-66669331_i32),(-820579440_i32),(-313943809_i32),(-733072359_i32)];
_6 = [569667917_i32,(-1104317696_i32),(-171594995_i32),(-665506814_i32),(-2105109955_i32),914298080_i32,(-279112536_i32)];
_11.fld1.1 = 3702203561961998930_u64;
_3 = '\u{2b987}';
RET = 67890607635392238702688849617047903054_u128 as f64;
match _11.fld1.1 {
0 => bb1,
3702203561961998930 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_11.fld2 = 298213700504619331795967969475176913646_u128 - 214562476260623872761438487155992679210_u128;
_8 = _5;
_11.fld1.0 = ((-81_i8),);
_2 = _8;
_11.fld2 = 163307744710759280864037353363917688057_u128;
_11.fld1.0.0 = (-12_i8);
_8 = [1229449854_i32,(-209327000_i32),480873902_i32,2128959477_i32,(-350392293_i32),(-1279632446_i32),(-1051624046_i32)];
_1 = [9223372036854775807_isize,9223372036854775807_isize];
_11.fld1.1 = false as u64;
_12.0 = _11.fld1.0;
_11.fld1.1 = 4861366180482410549_u64 << _12.0.0;
_2 = [899849032_i32,270312389_i32,1709105456_i32,(-495195150_i32),(-614803346_i32),353122156_i32,1768329498_i32];
_1 = [(-9223372036854775808_isize),3_isize];
_11.fld1.1 = 13406972099752972199_u64;
_11.fld1 = (_12.0, 16006486837336629473_u64);
_8 = _9;
_8 = _4;
_12.0 = _11.fld1.0;
_3 = '\u{ef9c5}';
_5 = [1808850205_i32,(-1837015795_i32),(-756151795_i32),720075439_i32,917043407_i32,307855_i32,1301238110_i32];
_9 = [(-1871571757_i32),(-1042912800_i32),591870969_i32,2010948580_i32,(-1018223014_i32),1993965373_i32,(-1722199332_i32)];
Call(_12 = fn3(_7, _7, _1, _11.fld1.1, _11.fld1.1, _9, _4, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = [(-704826695_i32),(-1075658598_i32),1520517867_i32,583198630_i32,749493866_i32,2050292527_i32,1224713051_i32];
_1 = [119_isize,9223372036854775807_isize];
_8 = [(-500876922_i32),(-1495468785_i32),1147356322_i32,(-143481991_i32),1888768781_i32,(-1442107874_i32),(-1701256624_i32)];
_11.fld1 = _12;
RET = _12.0.0 as f64;
RET = 61233_u16 as f64;
_5 = [1686419417_i32,(-550347210_i32),1890307642_i32,1870323272_i32,(-978095037_i32),2044803675_i32,(-1451500332_i32)];
_10 = _5;
RET = (-7589906538143903245_i64) as f64;
_11 = Adt51 { fld0: 19588_u16,fld1: _12,fld2: 42832970705558343007432509688247768010_u128 };
_12.1 = !_11.fld1.1;
_11.fld0 = 798003002_i32 as u16;
RET = _11.fld2 as f64;
_11.fld1.0.0 = _12.0.0 & _12.0.0;
_10 = [1564775788_i32,1881114200_i32,(-1716977084_i32),(-1046791889_i32),(-1686698935_i32),964811812_i32,2073371973_i32];
_14 = 3_usize as isize;
_11.fld1.1 = _12.1 - _12.1;
_18 = core::ptr::addr_of!(_17);
_10 = [1156128290_i32,1840635580_i32,(-2088025611_i32),(-1643691616_i32),(-1935832287_i32),(-1026451254_i32),(-43188692_i32)];
_10 = [892529605_i32,1870364178_i32,(-43443792_i32),1089718279_i32,(-852419255_i32),(-1339543548_i32),(-108247097_i32)];
_3 = '\u{de406}';
_4 = [(-1506042204_i32),(-642033839_i32),(-377405080_i32),1839347803_i32,(-1938073073_i32),(-1784395599_i32),863276606_i32];
_11.fld1.0.0 = _12.0.0;
_16.0 = !17795_i16;
_11.fld1.0.0 = !_12.0.0;
_18 = core::ptr::addr_of!(_17);
Goto(bb5)
}
bb5 = {
_8 = [1951022741_i32,127853514_i32,(-1190703884_i32),175344067_i32,843839306_i32,163745801_i32,(-312484486_i32)];
_17 = core::ptr::addr_of_mut!(_10);
_19 = (_12.1,);
_14 = _16.0 as isize;
_12.0 = (_11.fld1.0.0,);
RET = _14 as f64;
_2 = [(-2089633367_i32),(-315279421_i32),735559835_i32,2012461951_i32,(-618697851_i32),(-577929384_i32),(-323504442_i32)];
_1 = [_14,_14];
_11.fld2 = 81793576665431844646673589773812220649_u128;
_12.1 = _11.fld1.1 & _19.0;
_12.1 = !_11.fld1.1;
_12.0.0 = _11.fld1.0.0;
_16 = (22955_i16,);
_12.0 = (_11.fld1.0.0,);
_11.fld1.0.0 = _12.0.0 - _12.0.0;
_19 = (_11.fld1.1,);
_11.fld1.0.0 = _12.0.0 >> _11.fld2;
_12 = (_11.fld1.0, _19.0);
_8 = [(-877929929_i32),1454808181_i32,(-2012089994_i32),1177079768_i32,(-995370534_i32),(-1215579903_i32),(-1567251677_i32)];
_7 = _4;
_8 = [(-2119072530_i32),(-1103671873_i32),744200288_i32,(-1263082891_i32),(-161551277_i32),(-1882895852_i32),(-339640505_i32)];
_17 = core::ptr::addr_of_mut!(_8);
_7 = (*_17);
_20 = -RET;
Call(RET = core::intrinsics::fmaf64(_20, _20, _20), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_21 = core::ptr::addr_of!((*_18));
_6 = _10;
_14 = 22_u8 as isize;
_11.fld2 = !34318380416035987607819901862253699459_u128;
match _16.0 {
0 => bb4,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
22955 => bb14,
_ => bb13
}
}
bb7 = {
_8 = [1951022741_i32,127853514_i32,(-1190703884_i32),175344067_i32,843839306_i32,163745801_i32,(-312484486_i32)];
_17 = core::ptr::addr_of_mut!(_10);
_19 = (_12.1,);
_14 = _16.0 as isize;
_12.0 = (_11.fld1.0.0,);
RET = _14 as f64;
_2 = [(-2089633367_i32),(-315279421_i32),735559835_i32,2012461951_i32,(-618697851_i32),(-577929384_i32),(-323504442_i32)];
_1 = [_14,_14];
_11.fld2 = 81793576665431844646673589773812220649_u128;
_12.1 = _11.fld1.1 & _19.0;
_12.1 = !_11.fld1.1;
_12.0.0 = _11.fld1.0.0;
_16 = (22955_i16,);
_12.0 = (_11.fld1.0.0,);
_11.fld1.0.0 = _12.0.0 - _12.0.0;
_19 = (_11.fld1.1,);
_11.fld1.0.0 = _12.0.0 >> _11.fld2;
_12 = (_11.fld1.0, _19.0);
_8 = [(-877929929_i32),1454808181_i32,(-2012089994_i32),1177079768_i32,(-995370534_i32),(-1215579903_i32),(-1567251677_i32)];
_7 = _4;
_8 = [(-2119072530_i32),(-1103671873_i32),744200288_i32,(-1263082891_i32),(-161551277_i32),(-1882895852_i32),(-339640505_i32)];
_17 = core::ptr::addr_of_mut!(_8);
_7 = (*_17);
_20 = -RET;
Call(RET = core::intrinsics::fmaf64(_20, _20, _20), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_9 = [(-704826695_i32),(-1075658598_i32),1520517867_i32,583198630_i32,749493866_i32,2050292527_i32,1224713051_i32];
_1 = [119_isize,9223372036854775807_isize];
_8 = [(-500876922_i32),(-1495468785_i32),1147356322_i32,(-143481991_i32),1888768781_i32,(-1442107874_i32),(-1701256624_i32)];
_11.fld1 = _12;
RET = _12.0.0 as f64;
RET = 61233_u16 as f64;
_5 = [1686419417_i32,(-550347210_i32),1890307642_i32,1870323272_i32,(-978095037_i32),2044803675_i32,(-1451500332_i32)];
_10 = _5;
RET = (-7589906538143903245_i64) as f64;
_11 = Adt51 { fld0: 19588_u16,fld1: _12,fld2: 42832970705558343007432509688247768010_u128 };
_12.1 = !_11.fld1.1;
_11.fld0 = 798003002_i32 as u16;
RET = _11.fld2 as f64;
_11.fld1.0.0 = _12.0.0 & _12.0.0;
_10 = [1564775788_i32,1881114200_i32,(-1716977084_i32),(-1046791889_i32),(-1686698935_i32),964811812_i32,2073371973_i32];
_14 = 3_usize as isize;
_11.fld1.1 = _12.1 - _12.1;
_18 = core::ptr::addr_of!(_17);
_10 = [1156128290_i32,1840635580_i32,(-2088025611_i32),(-1643691616_i32),(-1935832287_i32),(-1026451254_i32),(-43188692_i32)];
_10 = [892529605_i32,1870364178_i32,(-43443792_i32),1089718279_i32,(-852419255_i32),(-1339543548_i32),(-108247097_i32)];
_3 = '\u{de406}';
_4 = [(-1506042204_i32),(-642033839_i32),(-377405080_i32),1839347803_i32,(-1938073073_i32),(-1784395599_i32),863276606_i32];
_11.fld1.0.0 = _12.0.0;
_16.0 = !17795_i16;
_11.fld1.0.0 = !_12.0.0;
_18 = core::ptr::addr_of!(_17);
Goto(bb5)
}
bb9 = {
_11.fld2 = 298213700504619331795967969475176913646_u128 - 214562476260623872761438487155992679210_u128;
_8 = _5;
_11.fld1.0 = ((-81_i8),);
_2 = _8;
_11.fld2 = 163307744710759280864037353363917688057_u128;
_11.fld1.0.0 = (-12_i8);
_8 = [1229449854_i32,(-209327000_i32),480873902_i32,2128959477_i32,(-350392293_i32),(-1279632446_i32),(-1051624046_i32)];
_1 = [9223372036854775807_isize,9223372036854775807_isize];
_11.fld1.1 = false as u64;
_12.0 = _11.fld1.0;
_11.fld1.1 = 4861366180482410549_u64 << _12.0.0;
_2 = [899849032_i32,270312389_i32,1709105456_i32,(-495195150_i32),(-614803346_i32),353122156_i32,1768329498_i32];
_1 = [(-9223372036854775808_isize),3_isize];
_11.fld1.1 = 13406972099752972199_u64;
_11.fld1 = (_12.0, 16006486837336629473_u64);
_8 = _9;
_8 = _4;
_12.0 = _11.fld1.0;
_3 = '\u{ef9c5}';
_5 = [1808850205_i32,(-1837015795_i32),(-756151795_i32),720075439_i32,917043407_i32,307855_i32,1301238110_i32];
_9 = [(-1871571757_i32),(-1042912800_i32),591870969_i32,2010948580_i32,(-1018223014_i32),1993965373_i32,(-1722199332_i32)];
Call(_12 = fn3(_7, _7, _1, _11.fld1.1, _11.fld1.1, _9, _4, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_16 = ((-11011_i16),);
_15 = core::ptr::addr_of_mut!(_18);
_2 = [(-1880614816_i32),1802032924_i32,(-331680566_i32),(-700988276_i32),(-291453065_i32),671710383_i32,1413853185_i32];
_6 = [(-1043183947_i32),1535590011_i32,(-2107096143_i32),2007936541_i32,1117080115_i32,(-230415083_i32),(-1559570313_i32)];
_10 = [180211412_i32,1464233906_i32,1594738581_i32,1881211218_i32,(-1998025835_i32),297309689_i32,(-485400037_i32)];
_17 = core::ptr::addr_of_mut!(_9);
_11.fld1.0.0 = _14 as i8;
_21 = core::ptr::addr_of!(_17);
_3 = '\u{95076}';
_12.0 = (_11.fld1.0.0,);
_9 = [(-1724756432_i32),1348904550_i32,1746703260_i32,(-199535054_i32),(-90260673_i32),(-772412399_i32),(-1653015252_i32)];
_17 = core::ptr::addr_of_mut!(_5);
_11.fld1.1 = _19.0;
_12.0.0 = _11.fld1.0.0;
_11.fld1 = _12;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(2_usize, 2_usize, Move(_2), 7_usize, Move(_7), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(2_usize, 16_usize, Move(_16), 4_usize, Move(_4), 1_usize, Move(_1), 28_usize, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i32; 7],mut _2: [i32; 7],mut _3: [isize; 2],mut _4: u64,mut _5: u64,mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [i32; 7]) -> ((i8,), u64) {
mir! {
type RET = ((i8,), u64);
let _9: (i128, [i32; 7], i16, u64);
let _10: i32;
let _11: [isize; 2];
let _12: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]);
let _13: Adt56;
let _14: isize;
let _15: bool;
let _16: (i16,);
let _17: (i8,);
let _18: [isize; 2];
let _19: f32;
let _20: [isize; 2];
let _21: [u32; 3];
let _22: Adt45;
let _23: Adt59;
let _24: [i8; 7];
let _25: Adt53;
let _26: ();
let _27: ();
{
RET.0.0 = (-100_i8) >> _5;
_1 = _7;
_8 = [(-79324097_i32),(-1521833273_i32),1260807949_i32,780409412_i32,(-856361862_i32),(-600928151_i32),(-1605635248_i32)];
RET.1 = 34_isize as u64;
_7 = [966057729_i32,(-1521431490_i32),(-966019967_i32),1456183998_i32,172388264_i32,1767893653_i32,(-2033398348_i32)];
_3 = [(-86_isize),(-75_isize)];
_3 = [(-9223372036854775808_isize),(-75_isize)];
_4 = !_5;
_2 = [(-560398580_i32),263641640_i32,(-360710760_i32),521091573_i32,(-1119574878_i32),(-45883869_i32),28003363_i32];
_5 = _4;
_5 = !RET.1;
_6 = _7;
Goto(bb1)
}
bb1 = {
_4 = RET.1;
_7 = _6;
_9.1 = _8;
RET.0 = ((-10_i8),);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_9.0 = 100431794693866242822858222832309401253_i128 | (-51135110092853467013569272718859015499_i128);
RET.0 = ((-21_i8),);
_7 = _6;
Call(_8 = fn4(_2, _7, _9.1, _6, _1, RET, _5, _7, RET.1, RET.1, _9.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9.2 = !(-4337_i16);
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET.0.0 = (-67_i8) * 62_i8;
RET.0 = (18_i8,);
RET.0 = (4_i8,);
_6 = [(-448490655_i32),(-2092563944_i32),(-949756065_i32),2063337740_i32,(-234669943_i32),1907500323_i32,(-163160325_i32)];
_9.3 = _4 * RET.1;
_7 = _8;
match RET.0.0 {
0 => bb1,
1 => bb3,
4 => bb5,
_ => bb4
}
}
bb3 = {
_4 = RET.1;
_7 = _6;
_9.1 = _8;
RET.0 = ((-10_i8),);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_9.0 = 100431794693866242822858222832309401253_i128 | (-51135110092853467013569272718859015499_i128);
RET.0 = ((-21_i8),);
_7 = _6;
Call(_8 = fn4(_2, _7, _9.1, _6, _1, RET, _5, _7, RET.1, RET.1, _9.1), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_2 = _8;
_2 = [1341738864_i32,(-891451925_i32),1455217764_i32,958557687_i32,1506241804_i32,(-1736300062_i32),317513772_i32];
_7 = [437064838_i32,(-2027022090_i32),(-2141660080_i32),(-1905568948_i32),(-1831502314_i32),259114210_i32,(-2050855110_i32)];
_2 = [730659415_i32,(-939324425_i32),(-954772894_i32),(-142030281_i32),1845539667_i32,289326962_i32,(-899932484_i32)];
_6 = [(-17719512_i32),536236802_i32,818486603_i32,(-1446614120_i32),(-217430390_i32),(-282219285_i32),1081476636_i32];
_9 = ((-154352661518486206833734250846098157035_i128), _8, 29404_i16, _5);
_1 = [1723614833_i32,(-453820864_i32),1992238533_i32,(-1040727714_i32),(-1601644625_i32),(-54597968_i32),(-2091245919_i32)];
_11 = [(-9223372036854775808_isize),9223372036854775807_isize];
_9.1 = [1341453204_i32,(-1569656993_i32),1356323982_i32,643571688_i32,1071884122_i32,(-170761758_i32),(-43696109_i32)];
_4 = RET.0.0 as u64;
_10 = (-1553118407_i32);
_8 = [_10,_10,_10,_10,_10,_10,_10];
_8 = [_10,_10,_10,_10,_10,_10,_10];
match _9.2 {
0 => bb1,
1 => bb2,
2 => bb3,
29404 => bb7,
_ => bb6
}
}
bb6 = {
_4 = RET.1;
_7 = _6;
_9.1 = _8;
RET.0 = ((-10_i8),);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_9.0 = 100431794693866242822858222832309401253_i128 | (-51135110092853467013569272718859015499_i128);
RET.0 = ((-21_i8),);
_7 = _6;
Call(_8 = fn4(_2, _7, _9.1, _6, _1, RET, _5, _7, RET.1, RET.1, _9.1), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
RET.0 = (106_i8,);
_9.3 = _5;
_12.1.0.0 = RET.0.0 ^ RET.0.0;
_5 = RET.1;
RET = (_12.1.0, _9.3);
_9 = (101486228943981444151529254299596594682_i128, _2, 6673_i16, RET.1);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = [(-9223372036854775808_isize),9223372036854775807_isize];
_3 = _11;
match _9.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
5 => bb8,
6673 => bb10,
_ => bb9
}
}
bb8 = {
_4 = RET.1;
_7 = _6;
_9.1 = _8;
RET.0 = ((-10_i8),);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_9.0 = 100431794693866242822858222832309401253_i128 | (-51135110092853467013569272718859015499_i128);
RET.0 = ((-21_i8),);
_7 = _6;
Call(_8 = fn4(_2, _7, _9.1, _6, _1, RET, _5, _7, RET.1, RET.1, _9.1), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_9.2 = !(-4337_i16);
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET.0.0 = (-67_i8) * 62_i8;
RET.0 = (18_i8,);
RET.0 = (4_i8,);
_6 = [(-448490655_i32),(-2092563944_i32),(-949756065_i32),2063337740_i32,(-234669943_i32),1907500323_i32,(-163160325_i32)];
_9.3 = _4 * RET.1;
_7 = _8;
match RET.0.0 {
0 => bb1,
1 => bb3,
4 => bb5,
_ => bb4
}
}
bb10 = {
_9 = (149298649723718856726501390879207786321_i128, _7, 22450_i16, RET.1);
_1 = _7;
_11 = _3;
_11 = [9223372036854775807_isize,(-46_isize)];
_9 = (64026021476188228479003233883584432520_i128, _2, (-27298_i16), RET.1);
_7 = _2;
_9.0 = 4135561238466778022_i64 as i128;
_3 = [21_isize,(-9223372036854775808_isize)];
_14 = 9223372036854775807_isize << _9.2;
_17 = (RET.0.0,);
_12.0.0 = [_14,_14];
_15 = false;
match _9.2 {
0 => bb8,
340282366920938463463374607431768184158 => bb12,
_ => bb11
}
}
bb11 = {
_4 = RET.1;
_7 = _6;
_9.1 = _8;
RET.0 = ((-10_i8),);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_9.0 = 100431794693866242822858222832309401253_i128 | (-51135110092853467013569272718859015499_i128);
RET.0 = ((-21_i8),);
_7 = _6;
Call(_8 = fn4(_2, _7, _9.1, _6, _1, RET, _5, _7, RET.1, RET.1, _9.1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_12.0.4 = 105_u8 as f64;
RET.0.0 = _17.0 ^ _17.0;
_9 = (118701775193943433205950818307228465479_i128, _6, 20131_i16, _4);
Goto(bb13)
}
bb13 = {
RET.0.0 = _17.0 - _12.1.0.0;
_1 = _2;
_8 = [_10,_10,_10,_10,_10,_10,_10];
RET.1 = _15 as u64;
RET = (_17, _9.3);
Goto(bb14)
}
bb14 = {
_20 = _12.0.0;
_21 = [348323305_u32,2154498377_u32,2312506954_u32];
_6 = [_10,_10,_10,_10,_10,_10,_10];
_12.2 = core::ptr::addr_of_mut!(_2);
_15 = _9.0 == _9.0;
_11 = [_14,_14];
_12.0.4 = _9.0 as f64;
_12.0.2 = 3113094586_u32 as u16;
_11 = [_14,_14];
_12.1.1 = _15 as u64;
_2 = [_10,_10,_10,_10,_10,_10,_10];
RET.0.0 = _12.0.2 as i8;
_18 = [_14,_14];
_25.fld0.1 = _14;
_25.fld0.2.0.3 = _12.1.1 * _12.1.1;
_17 = RET.0;
_9.1 = _1;
_25.fld0.2.0.0 = -_9.0;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(3_usize, 3_usize, Move(_3), 17_usize, Move(_17), 15_usize, Move(_15), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(3_usize, 6_usize, Move(_6), 18_usize, Move(_18), 21_usize, Move(_21), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [i32; 7],mut _2: [i32; 7],mut _3: [i32; 7],mut _4: [i32; 7],mut _5: [i32; 7],mut _6: ((i8,), u64),mut _7: u64,mut _8: [i32; 7],mut _9: u64,mut _10: u64,mut _11: [i32; 7]) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _12: u64;
let _13: f32;
let _14: (i128, [i32; 7], i16, u64);
let _15: f32;
let _16: i64;
let _17: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _18: f64;
let _19: f32;
let _20: Adt49;
let _21: (u16, [isize; 2], u16);
let _22: u64;
let _23: Adt43;
let _24: (i16,);
let _25: (i16,);
let _26: *const *mut [i32; 7];
let _27: Adt59;
let _28: [isize; 2];
let _29: Adt58;
let _30: (u16, [isize; 2], u16);
let _31: f64;
let _32: bool;
let _33: Adt58;
let _34: char;
let _35: usize;
let _36: (u32, [isize; 2]);
let _37: [u32; 3];
let _38: [isize; 2];
let _39: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _40: [isize; 2];
let _41: ((i8,), u64);
let _42: *mut isize;
let _43: i32;
let _44: isize;
let _45: isize;
let _46: Adt49;
let _47: i32;
let _48: bool;
let _49: (u64,);
let _50: ([isize; 2], f32, u16, *const i64, f64);
let _51: [i8; 7];
let _52: (i128, [i32; 7], i16, u64);
let _53: Adt51;
let _54: i32;
let _55: (i16,);
let _56: bool;
let _57: ();
let _58: ();
{
_6.0.0 = 95_i8;
_8 = _4;
_2 = [708804026_i32,(-1085970088_i32),(-1355004586_i32),1994737546_i32,(-1638011954_i32),386726161_i32,81557222_i32];
_11 = [(-1448639784_i32),999424480_i32,(-1548036477_i32),(-980248367_i32),1056105929_i32,(-714576876_i32),997541115_i32];
_9 = !_10;
RET = [(-1648835384_i32),(-1573920651_i32),752909045_i32,998081216_i32,1938430083_i32,(-1174234887_i32),(-667035161_i32)];
_6.0 = (100_i8,);
_8 = [1418474303_i32,(-583831021_i32),(-1458990368_i32),602731563_i32,(-516660947_i32),694466039_i32,263418206_i32];
Call(_7 = fn5(_2, _2, _3, _11, _4, _2, RET, _1, _3, _11, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = _1;
_8 = [(-2131726478_i32),2094873118_i32,(-1591374885_i32),(-1916561442_i32),671914119_i32,175257877_i32,(-1208147898_i32)];
_13 = _6.0.0 as f32;
_12 = _9 >> _7;
_6.1 = _12;
_13 = 1839618117_i32 as f32;
_11 = [(-1031295316_i32),(-588606471_i32),1261434624_i32,972261283_i32,1325059099_i32,(-1879944867_i32),1242239981_i32];
RET = [(-1242095509_i32),(-1833560156_i32),1700608775_i32,161439768_i32,(-397518889_i32),599652403_i32,1142861737_i32];
_4 = _1;
_14 = (53338323401293659470836927660555362304_i128, _11, 873_i16, _7);
_13 = 3278118615197443734_usize as f32;
_12 = _14.3 - _7;
_14.3 = !_12;
_9 = _14.3;
_9 = !_14.3;
_9 = _14.3;
_15 = -_13;
_4 = _3;
_3 = [(-1118723958_i32),(-1238566897_i32),(-346650875_i32),(-611179895_i32),(-1410143266_i32),151667750_i32,(-549910670_i32)];
_14.1 = [1797532418_i32,(-55341331_i32),(-1096145203_i32),1204845754_i32,(-1868303734_i32),1058614378_i32,(-803500824_i32)];
_1 = _5;
_1 = [(-790531492_i32),(-11619434_i32),(-1388756085_i32),1514363178_i32,670117747_i32,1238643299_i32,(-2030580452_i32)];
_9 = _7;
_2 = [(-237145042_i32),(-766462119_i32),(-1421008599_i32),421656642_i32,1824360600_i32,1845249548_i32,(-794735864_i32)];
_6.0 = (92_i8,);
_3 = RET;
Goto(bb2)
}
bb2 = {
_17.2 = true as i64;
_17.1 = [_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0];
_18 = _14.2 as f64;
_10 = !_14.3;
_2 = _5;
_2 = [(-429394025_i32),(-149432820_i32),(-1243360382_i32),(-13818353_i32),(-1086418888_i32),(-800730247_i32),42595218_i32];
_17.0 = _14;
_8 = [1674626711_i32,247791221_i32,(-139693797_i32),(-903314290_i32),193904910_i32,293574004_i32,(-117154143_i32)];
_6.0 = ((-53_i8),);
RET = _4;
_20.fld2 = (_17.0.0, _3, _17.0.2, _9);
_21.1 = [(-9223372036854775808_isize),51_isize];
_14 = _17.0;
_20.fld2 = _14;
_17.0 = _20.fld2;
_20.fld1 = (-307686882_i32);
_1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_14.1 = _8;
_16 = _17.2 * _17.2;
Goto(bb3)
}
bb3 = {
_17.0.0 = 36610_u16 as i128;
_11 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_7 = !_14.3;
_6.0.0 = 127_i8;
_17.0.2 = _20.fld2.2 ^ _14.2;
_3 = _8;
_15 = _18 as f32;
_14.0 = _17.0.0 - _20.fld2.0;
_22 = !_12;
_8 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_2 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_4 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_19 = -_15;
_4 = _14.1;
_8 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_20.fld2.3 = _14.3 * _10;
_24.0 = !_17.0.2;
Goto(bb4)
}
bb4 = {
_6.1 = 29538898114563652718328532835396188980_u128 as u64;
_21.2 = 30285_u16;
_7 = _16 as u64;
_6.0.0 = 86_i8;
_23.fld0 = _6.0;
_17.0.0 = _20.fld2.0 & _20.fld2.0;
RET = _20.fld2.1;
_4 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_11 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_21.1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_17.0.2 = _20.fld2.3 as i16;
_6.0 = _23.fld0;
_14.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_24 = (_17.0.2,);
_20.fld2.0 = _17.0.0 - _17.0.0;
_6 = (_23.fld0, _20.fld2.3);
_14.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_15 = _19 * _19;
_25.0 = _24.0 >> _17.0.3;
_23.fld0 = (_6.0.0,);
_17.0 = (_20.fld2.0, _20.fld2.1, _25.0, _12);
_14.2 = _24.0;
_20.fld2.3 = _16 as u64;
_12 = !_20.fld2.3;
_20.fld2.2 = _17.0.2;
_17.1 = [_6.0.0,_23.fld0.0,_6.0.0,_6.0.0,_23.fld0.0,_6.0.0,_23.fld0.0];
Goto(bb5)
}
bb5 = {
_4 = _20.fld2.1;
_3 = RET;
_21.0 = _23.fld0.0 as u16;
_21.2 = _21.0 - _21.0;
_3 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_12 = _17.0.3 >> _14.2;
_20.fld2.1 = _4;
_20.fld2.2 = _21.2 as i16;
_17.0.3 = _10;
_30.2 = _21.0 | _21.2;
_20.fld3 = 3237595553_u32 as i128;
Goto(bb6)
}
bb6 = {
_14.2 = -_17.0.2;
Goto(bb7)
}
bb7 = {
_5 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_38 = [9223372036854775807_isize,85_isize];
_33 = Adt58::Variant1 { fld0: 7359270546741423655_usize,fld1: _21 };
_13 = _17.0.0 as f32;
_37 = [3227361625_u32,2035595925_u32,2989999083_u32];
RET = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_36.1 = [(-112_isize),9223372036854775807_isize];
_34 = '\u{75b6b}';
_6 = (_23.fld0, _22);
_20.fld2.0 = _17.0.0 * _14.0;
_18 = _16 as f64;
_5 = _20.fld2.1;
_24.0 = !_14.2;
_32 = true;
_20.fld2.0 = _17.0.0 >> _17.0.0;
_20.fld2.2 = 9223372036854775807_isize as i16;
_14.3 = !_17.0.3;
match _6.0.0 {
0 => bb8,
86 => bb10,
_ => bb9
}
}
bb8 = {
_6.1 = 29538898114563652718328532835396188980_u128 as u64;
_21.2 = 30285_u16;
_7 = _16 as u64;
_6.0.0 = 86_i8;
_23.fld0 = _6.0;
_17.0.0 = _20.fld2.0 & _20.fld2.0;
RET = _20.fld2.1;
_4 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_11 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_21.1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_17.0.2 = _20.fld2.3 as i16;
_6.0 = _23.fld0;
_14.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_24 = (_17.0.2,);
_20.fld2.0 = _17.0.0 - _17.0.0;
_6 = (_23.fld0, _20.fld2.3);
_14.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_15 = _19 * _19;
_25.0 = _24.0 >> _17.0.3;
_23.fld0 = (_6.0.0,);
_17.0 = (_20.fld2.0, _20.fld2.1, _25.0, _12);
_14.2 = _24.0;
_20.fld2.3 = _16 as u64;
_12 = !_20.fld2.3;
_20.fld2.2 = _17.0.2;
_17.1 = [_6.0.0,_23.fld0.0,_6.0.0,_6.0.0,_23.fld0.0,_6.0.0,_23.fld0.0];
Goto(bb5)
}
bb9 = {
_17.2 = true as i64;
_17.1 = [_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0];
_18 = _14.2 as f64;
_10 = !_14.3;
_2 = _5;
_2 = [(-429394025_i32),(-149432820_i32),(-1243360382_i32),(-13818353_i32),(-1086418888_i32),(-800730247_i32),42595218_i32];
_17.0 = _14;
_8 = [1674626711_i32,247791221_i32,(-139693797_i32),(-903314290_i32),193904910_i32,293574004_i32,(-117154143_i32)];
_6.0 = ((-53_i8),);
RET = _4;
_20.fld2 = (_17.0.0, _3, _17.0.2, _9);
_21.1 = [(-9223372036854775808_isize),51_isize];
_14 = _17.0;
_20.fld2 = _14;
_17.0 = _20.fld2;
_20.fld1 = (-307686882_i32);
_1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_14.1 = _8;
_16 = _17.2 * _17.2;
Goto(bb3)
}
bb10 = {
place!(Field::<usize>(Variant(_33, 1), 0)) = _32 as usize;
_21.0 = !_21.2;
_39 = (_20.fld2, _17.1, _17.2);
place!(Field::<(u16, [isize; 2], u16)>(Variant(_33, 1), 1)).2 = Field::<(u16, [isize; 2], u16)>(Variant(_33, 1), 1).0;
_28 = Field::<(u16, [isize; 2], u16)>(Variant(_33, 1), 1).1;
_24 = (_25.0,);
_36 = (2091450514_u32, _28);
_17.0.3 = !_22;
_18 = _16 as f64;
_17.2 = -_16;
place!(Field::<(u16, [isize; 2], u16)>(Variant(_33, 1), 1)).0 = _30.2;
_41.0 = (_23.fld0.0,);
_30 = (_21.2, _21.1, Field::<(u16, [isize; 2], u16)>(Variant(_33, 1), 1).0);
_19 = _13 * _13;
_14.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_38 = [(-9223372036854775808_isize),9223372036854775807_isize];
_21.0 = _30.0 | _30.0;
_18 = _14.2 as f64;
_39.0 = _14;
match _36.0 {
0 => bb1,
1 => bb8,
2091450514 => bb11,
_ => bb5
}
}
bb11 = {
_39.0.0 = _20.fld2.0;
_40 = [(-9223372036854775808_isize),(-37_isize)];
place!(Field::<(u16, [isize; 2], u16)>(Variant(_33, 1), 1)).2 = _30.0;
_22 = !_12;
_28 = [9223372036854775807_isize,33_isize];
_29 = Move(_33);
_39.0.0 = _20.fld2.0;
_39.1 = [_23.fld0.0,_6.0.0,_6.0.0,_41.0.0,_6.0.0,_41.0.0,_6.0.0];
_20.fld2.3 = _17.0.3;
_7 = _10;
SetDiscriminant(_29, 1);
_39.0.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_20.fld2.2 = _14.2 & _17.0.2;
_35 = 7580904153336798926_usize >> _24.0;
_14.2 = _19 as i16;
_21.0 = _30.2;
_43 = -_20.fld1;
place!(Field::<usize>(Variant(_29, 1), 0)) = !_35;
_6.1 = _17.0.3 & _14.3;
_25.0 = !_17.0.2;
_17.0.2 = _20.fld2.2;
_12 = _10 | _10;
_38 = [10_isize,77_isize];
_40 = [(-64_isize),(-9223372036854775808_isize)];
_14.0 = _17.0.0 << _17.0.2;
_20.fld2 = _39.0;
Goto(bb12)
}
bb12 = {
_15 = _13;
_12 = _22;
_15 = -_19;
_46.fld2 = (_20.fld2.0, _5, _24.0, _12);
_21.0 = _21.2 ^ _30.2;
_14.0 = _46.fld2.0 >> _17.0.0;
_1 = [_43,_43,_20.fld1,_20.fld1,_20.fld1,_43,_43];
match _36.0 {
0 => bb11,
1 => bb2,
2 => bb10,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
2091450514 => bb13,
_ => bb8
}
}
bb13 = {
_14 = (_46.fld2.0, _46.fld2.1, _39.0.2, _12);
place!(Field::<(u16, [isize; 2], u16)>(Variant(_29, 1), 1)) = _30;
_40 = _36.1;
_6.0 = (_23.fld0.0,);
SetDiscriminant(_29, 0);
_41.0.0 = _32 as i8;
place!(Field::<*mut *const *mut [i32; 7]>(Variant(_29, 0), 4)) = core::ptr::addr_of_mut!(_26);
_29 = Adt58::Variant1 { fld0: _35,fld1: _21 };
_2 = [_20.fld1,_43,_20.fld1,_20.fld1,_43,_20.fld1,_43];
_23.fld1 = core::ptr::addr_of_mut!(_44);
_14.1 = [_20.fld1,_43,_43,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
SetDiscriminant(_29, 0);
_46.fld2.3 = _20.fld1 as u64;
_1 = [_20.fld1,_20.fld1,_20.fld1,_43,_20.fld1,_43,_43];
_10 = _20.fld1 as u64;
_30.2 = _21.2;
_21 = (_30.0, _38, _30.2);
_23.fld0 = (_41.0.0,);
_46.fld3 = _20.fld2.0 >> _46.fld2.0;
_17.0.0 = _46.fld3;
place!(Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7)).2.0 = (_17.0.0, _5, _24.0, _9);
place!(Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7)).1 = !9223372036854775807_isize;
_46.fld1 = -_20.fld1;
_25 = (_24.0,);
_39.0.0 = _46.fld2.0;
_20.fld1 = _46.fld1 >> _46.fld3;
Goto(bb14)
}
bb14 = {
_46.fld3 = _18 as i128;
_30.1 = [Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7).1,Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7).1];
_35 = !5_usize;
_14.1 = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_51 = _39.1;
_6.0 = (_41.0.0,);
place!(Field::<isize>(Variant(_29, 0), 2)) = Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7).1 - Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7).1;
_50.0 = _28;
_17.0 = (_20.fld2.0, _14.1, _24.0, _14.3);
place!(Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7)).2.0 = _14;
RET = [_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_14.3 = _17.0.2 as u64;
_53 = Adt51 { fld0: _21.0,fld1: _6,fld2: 5479574442572268925439861724952404214_u128 };
_21.2 = !_53.fld0;
_46.fld2 = (_39.0.0, _17.0.1, _24.0, Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7).2.0.3);
_52.0 = _43 as i128;
place!(Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7)).0 = _35 as f32;
place!(Field::<u128>(Variant(_29, 0), 3)) = _53.fld2;
_46.fld3 = !Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7).2.0.0;
_53.fld0 = _30.2 & _21.0;
place!(Field::<(f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool)>(Variant(_29, 0), 7)).3 = !_32;
place!(Field::<*mut i64>(Variant(_29, 0), 0)) = core::ptr::addr_of_mut!(_17.2);
_45 = Field::<isize>(Variant(_29, 0), 2);
_25 = (_20.fld2.2,);
Goto(bb15)
}
bb15 = {
Call(_57 = dump_var(4_usize, 39_usize, Move(_39), 32_usize, Move(_32), 6_usize, Move(_6), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_57 = dump_var(4_usize, 11_usize, Move(_11), 12_usize, Move(_12), 37_usize, Move(_37), 36_usize, Move(_36)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_57 = dump_var(4_usize, 22_usize, Move(_22), 4_usize, Move(_4), 43_usize, Move(_43), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_57 = dump_var(4_usize, 38_usize, Move(_38), 8_usize, Move(_8), 30_usize, Move(_30), 51_usize, Move(_51)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: [i32; 7],mut _2: [i32; 7],mut _3: [i32; 7],mut _4: [i32; 7],mut _5: [i32; 7],mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [i32; 7],mut _9: [i32; 7],mut _10: [i32; 7],mut _11: [i32; 7]) -> u64 {
mir! {
type RET = u64;
let _12: *mut [i32; 7];
let _13: [u32; 3];
let _14: bool;
let _15: char;
let _16: (u64,);
let _17: [i32; 7];
let _18: Adt55;
let _19: ([isize; 2], f32, u16, *const i64, f64);
let _20: f32;
let _21: f32;
let _22: ([i32; 7], i128, *mut u8);
let _23: (u32, [isize; 2]);
let _24: Adt55;
let _25: (u32, [isize; 2]);
let _26: [isize; 2];
let _27: &'static char;
let _28: (u16, [isize; 2], u16);
let _29: f32;
let _30: (i16,);
let _31: i32;
let _32: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool);
let _33: ();
let _34: ();
{
_6 = [(-1817611681_i32),1833821954_i32,1204697705_i32,(-1851974342_i32),618124809_i32,(-2059555333_i32),675847883_i32];
_13 = [1436232831_u32,3360647274_u32,1717674368_u32];
_10 = _8;
_2 = [535406005_i32,1671456252_i32,(-258356479_i32),956733513_i32,1025314556_i32,1819213377_i32,1988163676_i32];
_10 = _11;
RET = 13474705409834205128_u64 & 5433527543031852202_u64;
_5 = [1607396356_i32,(-444237441_i32),(-431316432_i32),(-1077177254_i32),2093780323_i32,1518645811_i32,(-153328516_i32)];
_1 = [(-1542494502_i32),1944392004_i32,1530913931_i32,35654454_i32,(-471765894_i32),(-1122557546_i32),1832426930_i32];
_5 = [1983511106_i32,166424136_i32,(-1644642924_i32),513106627_i32,(-1806739984_i32),(-536753767_i32),(-339497692_i32)];
_1 = _2;
_8 = _11;
_7 = _6;
_8 = _10;
_5 = [1173959174_i32,(-673404367_i32),(-1974740959_i32),(-963671243_i32),(-278691410_i32),422438673_i32,(-233863675_i32)];
Goto(bb1)
}
bb1 = {
_12 = core::ptr::addr_of_mut!(_7);
_4 = [1635308664_i32,1281143467_i32,288439137_i32,1616783784_i32,719645261_i32,1771982_i32,(-1189064614_i32)];
RET = 17921755425604025563_u64;
_13 = [72205308_u32,3834699383_u32,3983779073_u32];
Goto(bb2)
}
bb2 = {
_1 = [(-469037438_i32),(-1026258003_i32),1991659819_i32,(-1215501086_i32),(-60349861_i32),1690632487_i32,59410799_i32];
_1 = [(-1662852543_i32),(-2109935116_i32),89001470_i32,1545221243_i32,(-987871253_i32),205851508_i32,(-1480924090_i32)];
_14 = !true;
_11 = _8;
_15 = '\u{a966b}';
Goto(bb3)
}
bb3 = {
RET = 2039462523573019749_u64 >> 13510515110445196184166744189235329196_i128;
_15 = '\u{65239}';
_8 = _10;
_5 = _11;
_16 = (RET,);
_9 = [138380585_i32,1755160962_i32,142030766_i32,704983401_i32,398970489_i32,(-869992331_i32),(-976485102_i32)];
_1 = _7;
_16.0 = RET << RET;
_16 = (RET,);
RET = _16.0 << _16.0;
_16 = (RET,);
_8 = _11;
_3 = _4;
_2 = _1;
RET = !_16.0;
RET = _16.0;
_11 = [(-479441471_i32),1644473253_i32,(-827807312_i32),1386385041_i32,967887961_i32,1373206296_i32,(-824949456_i32)];
_9 = [281011873_i32,(-140438378_i32),1708109630_i32,430529440_i32,(-1792611151_i32),1944588176_i32,(-1291339743_i32)];
_6 = [(-781163600_i32),1631246095_i32,(-1536857487_i32),2126618842_i32,577401866_i32,(-1452207084_i32),(-176994697_i32)];
_8 = _6;
_12 = core::ptr::addr_of_mut!(_8);
_9 = [1129839686_i32,(-2038233529_i32),(-1328345276_i32),(-59602522_i32),(-965905474_i32),(-1741989968_i32),(-1021809570_i32)];
Call(_5 = fn6(_6, _9, _12, _12, _4, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = [(-85690220_i32),(-8271616_i32),(-444278056_i32),774806619_i32,836966810_i32,(-897414974_i32),(-1489243091_i32)];
_5 = [625784967_i32,79538221_i32,(-1826125355_i32),(-973078856_i32),1712361303_i32,(-1855215581_i32),1152383261_i32];
_10 = _5;
_7 = [(-1947087862_i32),(-1819248586_i32),(-1304644374_i32),1935591208_i32,589957040_i32,1228424877_i32,2057512006_i32];
Goto(bb5)
}
bb5 = {
_3 = [(-676347971_i32),834816778_i32,1971105802_i32,(-614399927_i32),(-1810788213_i32),(-356197777_i32),2087310318_i32];
_19.2 = 56668_u16;
_10 = _7;
RET = _16.0;
_16.0 = RET;
_16 = (RET,);
RET = _16.0 - _16.0;
_20 = 4432107498833400809_i64 as f32;
_6 = (*_12);
_19.0 = [(-9223372036854775808_isize),9223372036854775807_isize];
_19.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17 = [1965718791_i32,(-1794667513_i32),(-2074170904_i32),546067001_i32,(-150993991_i32),197096233_i32,943646382_i32];
_23.1 = [79_isize,9223372036854775807_isize];
_16 = (RET,);
_19.4 = (-161221944_i32) as f64;
_21 = _20 * _20;
_8 = _3;
_7 = [(-756553539_i32),844101223_i32,1124228393_i32,823827963_i32,(-2020652807_i32),2066456943_i32,808401652_i32];
_22.0 = [1966955659_i32,(-1213838616_i32),(-1378151094_i32),1018404721_i32,(-163882230_i32),1129881244_i32,(-477894574_i32)];
_22.1 = 20561782598647696892384439714504101050_i128;
_4 = [(-243100916_i32),(-281842920_i32),1266192387_i32,880921287_i32,(-2035933750_i32),1548985794_i32,(-700657917_i32)];
match _22.1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
20561782598647696892384439714504101050 => bb12,
_ => bb11
}
}
bb6 = {
_8 = [(-85690220_i32),(-8271616_i32),(-444278056_i32),774806619_i32,836966810_i32,(-897414974_i32),(-1489243091_i32)];
_5 = [625784967_i32,79538221_i32,(-1826125355_i32),(-973078856_i32),1712361303_i32,(-1855215581_i32),1152383261_i32];
_10 = _5;
_7 = [(-1947087862_i32),(-1819248586_i32),(-1304644374_i32),1935591208_i32,589957040_i32,1228424877_i32,2057512006_i32];
Goto(bb5)
}
bb7 = {
RET = 2039462523573019749_u64 >> 13510515110445196184166744189235329196_i128;
_15 = '\u{65239}';
_8 = _10;
_5 = _11;
_16 = (RET,);
_9 = [138380585_i32,1755160962_i32,142030766_i32,704983401_i32,398970489_i32,(-869992331_i32),(-976485102_i32)];
_1 = _7;
_16.0 = RET << RET;
_16 = (RET,);
RET = _16.0 << _16.0;
_16 = (RET,);
_8 = _11;
_3 = _4;
_2 = _1;
RET = !_16.0;
RET = _16.0;
_11 = [(-479441471_i32),1644473253_i32,(-827807312_i32),1386385041_i32,967887961_i32,1373206296_i32,(-824949456_i32)];
_9 = [281011873_i32,(-140438378_i32),1708109630_i32,430529440_i32,(-1792611151_i32),1944588176_i32,(-1291339743_i32)];
_6 = [(-781163600_i32),1631246095_i32,(-1536857487_i32),2126618842_i32,577401866_i32,(-1452207084_i32),(-176994697_i32)];
_8 = _6;
_12 = core::ptr::addr_of_mut!(_8);
_9 = [1129839686_i32,(-2038233529_i32),(-1328345276_i32),(-59602522_i32),(-965905474_i32),(-1741989968_i32),(-1021809570_i32)];
Call(_5 = fn6(_6, _9, _12, _12, _4, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_1 = [(-469037438_i32),(-1026258003_i32),1991659819_i32,(-1215501086_i32),(-60349861_i32),1690632487_i32,59410799_i32];
_1 = [(-1662852543_i32),(-2109935116_i32),89001470_i32,1545221243_i32,(-987871253_i32),205851508_i32,(-1480924090_i32)];
_14 = !true;
_11 = _8;
_15 = '\u{a966b}';
Goto(bb3)
}
bb9 = {
_12 = core::ptr::addr_of_mut!(_7);
_4 = [1635308664_i32,1281143467_i32,288439137_i32,1616783784_i32,719645261_i32,1771982_i32,(-1189064614_i32)];
RET = 17921755425604025563_u64;
_13 = [72205308_u32,3834699383_u32,3983779073_u32];
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_19.2 = 62455_u16;
_2 = [989682795_i32,1745046135_i32,(-2058387926_i32),(-2013285338_i32),734415223_i32,1388668867_i32,1112441849_i32];
_14 = !false;
RET = !_16.0;
_1 = [185233810_i32,1546293049_i32,756374872_i32,792814776_i32,741397990_i32,(-1948281648_i32),960686542_i32];
_17 = _2;
_9 = [(-685425735_i32),(-835294469_i32),1175212351_i32,(-197992344_i32),(-1086441894_i32),(-1177396266_i32),2030795593_i32];
_7 = [1620840308_i32,1705536496_i32,(-303350289_i32),(-211554417_i32),1212809252_i32,(-1899743874_i32),382729958_i32];
_16.0 = RET;
_11 = _2;
match _19.2 {
0 => bb11,
62455 => bb13,
_ => bb3
}
}
bb13 = {
_25.0 = 5363099958160437947_i64 as u32;
_4 = [2109432070_i32,(-991317555_i32),1318337374_i32,(-2108517635_i32),(-438777412_i32),(-2107637494_i32),1961004354_i32];
_10 = [(-740168603_i32),(-788147900_i32),1772070134_i32,357436013_i32,709807163_i32,(-809789574_i32),(-1021713933_i32)];
_25.1 = [9223372036854775807_isize,9223372036854775807_isize];
_11 = _6;
_23 = _25;
_5 = [(-760468529_i32),912610649_i32,(-901092094_i32),(-1395451471_i32),55326577_i32,(-797766025_i32),(-939729106_i32)];
_27 = &_15;
_13 = [_23.0,_25.0,_25.0];
_19.1 = -_21;
_23.1 = [(-9223372036854775808_isize),(-127_isize)];
_2 = [(-1910844244_i32),554781585_i32,552294794_i32,(-35563548_i32),97175632_i32,(-599480052_i32),613050676_i32];
_2 = [1069743653_i32,118742811_i32,(-647387560_i32),(-199192897_i32),(-1263570848_i32),1100050210_i32,1440313900_i32];
_28.1 = _19.0;
_26 = [9223372036854775807_isize,9223372036854775807_isize];
_25.1 = [(-9223372036854775808_isize),(-6_isize)];
_27 = &_15;
_9 = [2022218450_i32,801867858_i32,970520603_i32,312654241_i32,814846709_i32,430307349_i32,1449214015_i32];
_30.0 = (-30672_i16) ^ (-20637_i16);
_2 = [(-742203741_i32),73213215_i32,(-956826267_i32),2043329925_i32,(-1669512606_i32),(-181559291_i32),855742299_i32];
_26 = [9223372036854775807_isize,(-9223372036854775808_isize)];
RET = _16.0;
match _22.1 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
20561782598647696892384439714504101050 => bb20,
_ => bb19
}
}
bb14 = {
_19.2 = 62455_u16;
_2 = [989682795_i32,1745046135_i32,(-2058387926_i32),(-2013285338_i32),734415223_i32,1388668867_i32,1112441849_i32];
_14 = !false;
RET = !_16.0;
_1 = [185233810_i32,1546293049_i32,756374872_i32,792814776_i32,741397990_i32,(-1948281648_i32),960686542_i32];
_17 = _2;
_9 = [(-685425735_i32),(-835294469_i32),1175212351_i32,(-197992344_i32),(-1086441894_i32),(-1177396266_i32),2030795593_i32];
_7 = [1620840308_i32,1705536496_i32,(-303350289_i32),(-211554417_i32),1212809252_i32,(-1899743874_i32),382729958_i32];
_16.0 = RET;
_11 = _2;
match _19.2 {
0 => bb11,
62455 => bb13,
_ => bb3
}
}
bb15 = {
Return()
}
bb16 = {
RET = 2039462523573019749_u64 >> 13510515110445196184166744189235329196_i128;
_15 = '\u{65239}';
_8 = _10;
_5 = _11;
_16 = (RET,);
_9 = [138380585_i32,1755160962_i32,142030766_i32,704983401_i32,398970489_i32,(-869992331_i32),(-976485102_i32)];
_1 = _7;
_16.0 = RET << RET;
_16 = (RET,);
RET = _16.0 << _16.0;
_16 = (RET,);
_8 = _11;
_3 = _4;
_2 = _1;
RET = !_16.0;
RET = _16.0;
_11 = [(-479441471_i32),1644473253_i32,(-827807312_i32),1386385041_i32,967887961_i32,1373206296_i32,(-824949456_i32)];
_9 = [281011873_i32,(-140438378_i32),1708109630_i32,430529440_i32,(-1792611151_i32),1944588176_i32,(-1291339743_i32)];
_6 = [(-781163600_i32),1631246095_i32,(-1536857487_i32),2126618842_i32,577401866_i32,(-1452207084_i32),(-176994697_i32)];
_8 = _6;
_12 = core::ptr::addr_of_mut!(_8);
_9 = [1129839686_i32,(-2038233529_i32),(-1328345276_i32),(-59602522_i32),(-965905474_i32),(-1741989968_i32),(-1021809570_i32)];
Call(_5 = fn6(_6, _9, _12, _12, _4, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb17 = {
_12 = core::ptr::addr_of_mut!(_7);
_4 = [1635308664_i32,1281143467_i32,288439137_i32,1616783784_i32,719645261_i32,1771982_i32,(-1189064614_i32)];
RET = 17921755425604025563_u64;
_13 = [72205308_u32,3834699383_u32,3983779073_u32];
Goto(bb2)
}
bb18 = {
_1 = [(-469037438_i32),(-1026258003_i32),1991659819_i32,(-1215501086_i32),(-60349861_i32),1690632487_i32,59410799_i32];
_1 = [(-1662852543_i32),(-2109935116_i32),89001470_i32,1545221243_i32,(-987871253_i32),205851508_i32,(-1480924090_i32)];
_14 = !true;
_11 = _8;
_15 = '\u{a966b}';
Goto(bb3)
}
bb19 = {
RET = 2039462523573019749_u64 >> 13510515110445196184166744189235329196_i128;
_15 = '\u{65239}';
_8 = _10;
_5 = _11;
_16 = (RET,);
_9 = [138380585_i32,1755160962_i32,142030766_i32,704983401_i32,398970489_i32,(-869992331_i32),(-976485102_i32)];
_1 = _7;
_16.0 = RET << RET;
_16 = (RET,);
RET = _16.0 << _16.0;
_16 = (RET,);
_8 = _11;
_3 = _4;
_2 = _1;
RET = !_16.0;
RET = _16.0;
_11 = [(-479441471_i32),1644473253_i32,(-827807312_i32),1386385041_i32,967887961_i32,1373206296_i32,(-824949456_i32)];
_9 = [281011873_i32,(-140438378_i32),1708109630_i32,430529440_i32,(-1792611151_i32),1944588176_i32,(-1291339743_i32)];
_6 = [(-781163600_i32),1631246095_i32,(-1536857487_i32),2126618842_i32,577401866_i32,(-1452207084_i32),(-176994697_i32)];
_8 = _6;
_12 = core::ptr::addr_of_mut!(_8);
_9 = [1129839686_i32,(-2038233529_i32),(-1328345276_i32),(-59602522_i32),(-965905474_i32),(-1741989968_i32),(-1021809570_i32)];
Call(_5 = fn6(_6, _9, _12, _12, _4, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb20 = {
_7 = _3;
_23 = (_25.0, _26);
_28 = (_19.2, _25.1, _19.2);
_27 = &(*_27);
_26 = _23.1;
_28 = (_19.2, _23.1, _19.2);
_20 = _21;
Goto(bb21)
}
bb21 = {
Call(_33 = dump_var(5_usize, 5_usize, Move(_5), 4_usize, Move(_4), 23_usize, Move(_23), 13_usize, Move(_13)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_33 = dump_var(5_usize, 15_usize, Move(_15), 14_usize, Move(_14), 3_usize, Move(_3), 9_usize, Move(_9)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_33 = dump_var(5_usize, 10_usize, Move(_10), 6_usize, Move(_6), 34_usize, _34, 34_usize, _34), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [i32; 7],mut _2: [i32; 7],mut _3: *mut [i32; 7],mut _4: *mut [i32; 7],mut _5: [i32; 7],mut _6: [i32; 7]) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _7: bool;
let _8: u16;
let _9: [u32; 3];
let _10: i64;
let _11: i32;
let _12: (u32, [isize; 2]);
let _13: Adt51;
let _14: ([isize; 2], f32, u16, *const i64, f64);
let _15: (u16, [isize; 2], u16);
let _16: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool);
let _17: *mut isize;
let _18: f32;
let _19: i128;
let _20: [i32; 7];
let _21: f64;
let _22: Adt54;
let _23: char;
let _24: f64;
let _25: Adt57;
let _26: usize;
let _27: isize;
let _28: Adt49;
let _29: bool;
let _30: u16;
let _31: (i16,);
let _32: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]);
let _33: isize;
let _34: [i8; 7];
let _35: [u128; 6];
let _36: isize;
let _37: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _38: [i32; 7];
let _39: ();
let _40: ();
{
_2 = _5;
RET = [1695898749_i32,623385031_i32,(-972176284_i32),2000074972_i32,(-469460286_i32),(-1928843351_i32),1149678898_i32];
_4 = _3;
_3 = _4;
_3 = core::ptr::addr_of_mut!(_6);
_3 = core::ptr::addr_of_mut!((*_3));
Goto(bb1)
}
bb1 = {
_7 = 404282909_i32 >= 1093991294_i32;
_7 = !false;
RET = [448408247_i32,940494869_i32,1849584885_i32,(-1450517864_i32),1760484184_i32,(-1877894198_i32),(-576042975_i32)];
_3 = core::ptr::addr_of_mut!(RET);
_3 = core::ptr::addr_of_mut!((*_3));
_8 = 28129_u16;
_3 = _4;
_6 = _5;
_9 = [356800476_u32,2084575828_u32,2212929309_u32];
RET = _6;
_2 = _5;
_6 = [1555257735_i32,1018439546_i32,1153339997_i32,851379638_i32,(-2122327222_i32),1277460264_i32,(-973733376_i32)];
_6 = [(-1134895319_i32),1406574674_i32,(-1415091400_i32),1111874227_i32,1409787500_i32,(-984997690_i32),(-924141508_i32)];
_10 = 601194336767974138_i64 | 405173689610652900_i64;
RET = [728886351_i32,(-417194558_i32),958298097_i32,(-1791206695_i32),1850205995_i32,(-355878693_i32),(-2130641048_i32)];
_5 = [2091949722_i32,(-1918947874_i32),2059144002_i32,282174998_i32,413401137_i32,(-650206819_i32),(-1029606340_i32)];
_7 = _10 > _10;
RET = _6;
RET = [1893629954_i32,1395868875_i32,(-132859581_i32),(-1800394737_i32),1469407635_i32,(-469488718_i32),(-968792490_i32)];
_11 = 451856527_i32 ^ 774968154_i32;
RET = [_11,_11,_11,_11,_11,_11,_11];
_2 = _5;
RET = _1;
_9 = [1073463716_u32,532548525_u32,3796020415_u32];
Call(_12.0 = fn7(_2, _1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = 60784_u16;
RET = [_11,_11,_11,_11,_11,_11,_11];
_13.fld1.1 = 4831966930687737026_u64 >> _10;
_13.fld1.0.0 = (-10330744315489023959266160954746568167_i128) as i8;
_13.fld0 = _8 / _8;
RET = [_11,_11,_11,_11,_11,_11,_11];
_6 = [_11,_11,_11,_11,_11,_11,_11];
_3 = core::ptr::addr_of_mut!(_2);
_11 = !410717928_i32;
_5 = (*_3);
_8 = _13.fld0 << _10;
_14.0 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_16.1 = -(-70_isize);
_16.2.1 = [_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0];
_16.2.0.0 = -162108833179785012446346466804061723918_i128;
Call(_16.0 = fn10(_2, _9, RET, _2, _3, _1, (*_3), _16.2.1, _14.0, _5, _3, _3, _16.1, _3, _8, _16.2.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15.2 = _8;
_4 = core::ptr::addr_of_mut!(_16.2.0.1);
_15.0 = 216_u8 as u16;
_13.fld1.0.0 = -108_i8;
_15.1 = [_16.1,_16.1];
_16.2.0 = ((-140737063294279887044519112948358127748_i128), _2, 1923_i16, _13.fld1.1);
_12.1 = _14.0;
_9 = [_12.0,_12.0,_12.0];
_16.2.2 = 196697973464927878113104321143922277981_u128 as i64;
_1 = (*_4);
_13.fld1.0.0 = 247586436641636159041013936009935417165_u128 as i8;
_15.1 = [_16.1,_16.1];
_12.1 = _14.0;
_16.2.0.1 = [_11,_11,_11,_11,_11,_11,_11];
_17 = core::ptr::addr_of_mut!(_16.1);
_14.2 = !_15.0;
_14.4 = _16.2.0.3 as f64;
_17 = core::ptr::addr_of_mut!((*_17));
_9 = [_12.0,_12.0,_12.0];
_15 = (_13.fld0, _12.1, _8);
_14.4 = _11 as f64;
_14.4 = _15.2 as f64;
_12.1 = [_16.1,(*_17)];
_16.2.0.1 = (*_3);
_16.2.0.2 = (-4653_i16);
_9 = [_12.0,_12.0,_12.0];
match _16.2.0.0 {
0 => bb1,
199545303626658576418855494483410083708 => bb5,
_ => bb4
}
}
bb4 = {
_7 = 404282909_i32 >= 1093991294_i32;
_7 = !false;
RET = [448408247_i32,940494869_i32,1849584885_i32,(-1450517864_i32),1760484184_i32,(-1877894198_i32),(-576042975_i32)];
_3 = core::ptr::addr_of_mut!(RET);
_3 = core::ptr::addr_of_mut!((*_3));
_8 = 28129_u16;
_3 = _4;
_6 = _5;
_9 = [356800476_u32,2084575828_u32,2212929309_u32];
RET = _6;
_2 = _5;
_6 = [1555257735_i32,1018439546_i32,1153339997_i32,851379638_i32,(-2122327222_i32),1277460264_i32,(-973733376_i32)];
_6 = [(-1134895319_i32),1406574674_i32,(-1415091400_i32),1111874227_i32,1409787500_i32,(-984997690_i32),(-924141508_i32)];
_10 = 601194336767974138_i64 | 405173689610652900_i64;
RET = [728886351_i32,(-417194558_i32),958298097_i32,(-1791206695_i32),1850205995_i32,(-355878693_i32),(-2130641048_i32)];
_5 = [2091949722_i32,(-1918947874_i32),2059144002_i32,282174998_i32,413401137_i32,(-650206819_i32),(-1029606340_i32)];
_7 = _10 > _10;
RET = _6;
RET = [1893629954_i32,1395868875_i32,(-132859581_i32),(-1800394737_i32),1469407635_i32,(-469488718_i32),(-968792490_i32)];
_11 = 451856527_i32 ^ 774968154_i32;
RET = [_11,_11,_11,_11,_11,_11,_11];
_2 = _5;
RET = _1;
_9 = [1073463716_u32,532548525_u32,3796020415_u32];
Call(_12.0 = fn7(_2, _1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
_15.2 = _16.0 as u16;
_9 = [_12.0,_12.0,_12.0];
_25.fld6.2 = _16.2.0.2 as u16;
_25.fld6.2 = _7 as u16;
_19 = '\u{57426}' as i128;
_16.2.1 = [_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0];
_23 = '\u{7fa11}';
_25.fld6.1 = _15.1;
_14.3 = core::ptr::addr_of!(_16.2.2);
_21 = _14.4;
_16.2.0.2 = (-31461_i16) << _13.fld1.1;
_12.0 = 13997244446351292684_usize as u32;
_14.3 = core::ptr::addr_of!(_10);
_16.2.0.0 = _13.fld1.1 as i128;
_14.3 = core::ptr::addr_of!(_10);
_27 = -_16.1;
_8 = _13.fld0;
_23 = '\u{2e520}';
_16.3 = _7;
_12 = (312008235_u32, _15.1);
_18 = 308437968922945459262957209006248451368_u128 as f32;
match _12.0 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
312008235 => bb11,
_ => bb10
}
}
bb6 = {
_7 = 404282909_i32 >= 1093991294_i32;
_7 = !false;
RET = [448408247_i32,940494869_i32,1849584885_i32,(-1450517864_i32),1760484184_i32,(-1877894198_i32),(-576042975_i32)];
_3 = core::ptr::addr_of_mut!(RET);
_3 = core::ptr::addr_of_mut!((*_3));
_8 = 28129_u16;
_3 = _4;
_6 = _5;
_9 = [356800476_u32,2084575828_u32,2212929309_u32];
RET = _6;
_2 = _5;
_6 = [1555257735_i32,1018439546_i32,1153339997_i32,851379638_i32,(-2122327222_i32),1277460264_i32,(-973733376_i32)];
_6 = [(-1134895319_i32),1406574674_i32,(-1415091400_i32),1111874227_i32,1409787500_i32,(-984997690_i32),(-924141508_i32)];
_10 = 601194336767974138_i64 | 405173689610652900_i64;
RET = [728886351_i32,(-417194558_i32),958298097_i32,(-1791206695_i32),1850205995_i32,(-355878693_i32),(-2130641048_i32)];
_5 = [2091949722_i32,(-1918947874_i32),2059144002_i32,282174998_i32,413401137_i32,(-650206819_i32),(-1029606340_i32)];
_7 = _10 > _10;
RET = _6;
RET = [1893629954_i32,1395868875_i32,(-132859581_i32),(-1800394737_i32),1469407635_i32,(-469488718_i32),(-968792490_i32)];
_11 = 451856527_i32 ^ 774968154_i32;
RET = [_11,_11,_11,_11,_11,_11,_11];
_2 = _5;
RET = _1;
_9 = [1073463716_u32,532548525_u32,3796020415_u32];
Call(_12.0 = fn7(_2, _1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
_15.2 = _8;
_4 = core::ptr::addr_of_mut!(_16.2.0.1);
_15.0 = 216_u8 as u16;
_13.fld1.0.0 = -108_i8;
_15.1 = [_16.1,_16.1];
_16.2.0 = ((-140737063294279887044519112948358127748_i128), _2, 1923_i16, _13.fld1.1);
_12.1 = _14.0;
_9 = [_12.0,_12.0,_12.0];
_16.2.2 = 196697973464927878113104321143922277981_u128 as i64;
_1 = (*_4);
_13.fld1.0.0 = 247586436641636159041013936009935417165_u128 as i8;
_15.1 = [_16.1,_16.1];
_12.1 = _14.0;
_16.2.0.1 = [_11,_11,_11,_11,_11,_11,_11];
_17 = core::ptr::addr_of_mut!(_16.1);
_14.2 = !_15.0;
_14.4 = _16.2.0.3 as f64;
_17 = core::ptr::addr_of_mut!((*_17));
_9 = [_12.0,_12.0,_12.0];
_15 = (_13.fld0, _12.1, _8);
_14.4 = _11 as f64;
_14.4 = _15.2 as f64;
_12.1 = [_16.1,(*_17)];
_16.2.0.1 = (*_3);
_16.2.0.2 = (-4653_i16);
_9 = [_12.0,_12.0,_12.0];
match _16.2.0.0 {
0 => bb1,
199545303626658576418855494483410083708 => bb5,
_ => bb4
}
}
bb8 = {
_8 = 60784_u16;
RET = [_11,_11,_11,_11,_11,_11,_11];
_13.fld1.1 = 4831966930687737026_u64 >> _10;
_13.fld1.0.0 = (-10330744315489023959266160954746568167_i128) as i8;
_13.fld0 = _8 / _8;
RET = [_11,_11,_11,_11,_11,_11,_11];
_6 = [_11,_11,_11,_11,_11,_11,_11];
_3 = core::ptr::addr_of_mut!(_2);
_11 = !410717928_i32;
_5 = (*_3);
_8 = _13.fld0 << _10;
_14.0 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_16.1 = -(-70_isize);
_16.2.1 = [_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0];
_16.2.0.0 = -162108833179785012446346466804061723918_i128;
Call(_16.0 = fn10(_2, _9, RET, _2, _3, _1, (*_3), _16.2.1, _14.0, _5, _3, _3, _16.1, _3, _8, _16.2.1), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_7 = 404282909_i32 >= 1093991294_i32;
_7 = !false;
RET = [448408247_i32,940494869_i32,1849584885_i32,(-1450517864_i32),1760484184_i32,(-1877894198_i32),(-576042975_i32)];
_3 = core::ptr::addr_of_mut!(RET);
_3 = core::ptr::addr_of_mut!((*_3));
_8 = 28129_u16;
_3 = _4;
_6 = _5;
_9 = [356800476_u32,2084575828_u32,2212929309_u32];
RET = _6;
_2 = _5;
_6 = [1555257735_i32,1018439546_i32,1153339997_i32,851379638_i32,(-2122327222_i32),1277460264_i32,(-973733376_i32)];
_6 = [(-1134895319_i32),1406574674_i32,(-1415091400_i32),1111874227_i32,1409787500_i32,(-984997690_i32),(-924141508_i32)];
_10 = 601194336767974138_i64 | 405173689610652900_i64;
RET = [728886351_i32,(-417194558_i32),958298097_i32,(-1791206695_i32),1850205995_i32,(-355878693_i32),(-2130641048_i32)];
_5 = [2091949722_i32,(-1918947874_i32),2059144002_i32,282174998_i32,413401137_i32,(-650206819_i32),(-1029606340_i32)];
_7 = _10 > _10;
RET = _6;
RET = [1893629954_i32,1395868875_i32,(-132859581_i32),(-1800394737_i32),1469407635_i32,(-469488718_i32),(-968792490_i32)];
_11 = 451856527_i32 ^ 774968154_i32;
RET = [_11,_11,_11,_11,_11,_11,_11];
_2 = _5;
RET = _1;
_9 = [1073463716_u32,532548525_u32,3796020415_u32];
Call(_12.0 = fn7(_2, _1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_16.3 = !_7;
_25.fld6 = (_15.0, _12.1, _13.fld0);
_25.fld1 = [282641997677524441955746993145053302363_u128,325231396689008318390063673821855079598_u128,142874246436809810231785683522583810580_u128,331700422725585912507647786281013279897_u128,244602049509030646783326431669672305365_u128,77697586517265842168075500509132910607_u128];
_1 = [_11,_11,_11,_11,_11,_11,_11];
_16.2.0.3 = !_13.fld1.1;
_25.fld1 = [168413934581857410516488204668191854493_u128,183799237067343375541776473894027403621_u128,54468765515383520328006368023430080055_u128,138683471900168325952512279230422304211_u128,183225129615500055239183723871392340447_u128,83885192577096545947583639424064746581_u128];
_16.2.1 = [_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0];
_28.fld3 = _19 >> _16.2.0.3;
_28.fld2.2 = -_16.2.0.2;
_13.fld2 = 18654372368504260719601600134137228901_u128;
_25.fld1 = [_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2];
_28.fld2.1 = [_11,_11,_11,_11,_11,_11,_11];
RET = [_11,_11,_11,_11,_11,_11,_11];
_13.fld1.1 = !_16.2.0.3;
_14.4 = -_21;
_14.4 = -_21;
_14.0 = [(*_17),(*_17)];
Call(_28.fld1 = fn16(_16, _13.fld1, (*_4), _16.2.0, _16.1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_25.fld2 = _16.0;
_25.fld5.1 = _25.fld6.1;
_4 = core::ptr::addr_of_mut!(_1);
_23 = '\u{6d3b2}';
_13.fld1.0 = (112_i8,);
_30 = _25.fld6.0;
_32.0.0 = [(*_17),_16.1];
_31.0 = _28.fld2.2 * _28.fld2.2;
_32.0.3 = core::ptr::addr_of!(_10);
_25.fld4 = core::ptr::addr_of_mut!(_10);
_4 = _3;
_16.0 = _28.fld1 as f32;
RET = (*_3);
_25.fld3 = _8;
_27 = (*_17) & (*_17);
_12.1 = [(*_17),_27];
_28.fld2.0 = _16.2.0.0;
_32.0.4 = _21 - _14.4;
_14 = (_25.fld5.1, _16.0, _15.0, _32.0.3, _21);
_25.fld5.0 = _12.0 * _12.0;
_17 = core::ptr::addr_of_mut!(_27);
_31 = (_16.2.0.2,);
_14 = (_15.1, _16.0, _25.fld3, _32.0.3, _32.0.4);
_35 = [_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2];
_29 = !_7;
_16.2.2 = !_10;
_32.1.0 = (_13.fld1.0.0,);
_25.fld5.0 = _12.0 ^ _12.0;
match _32.1.0.0 {
0 => bb6,
1 => bb9,
2 => bb3,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
112 => bb18,
_ => bb17
}
}
bb13 = {
_15.2 = _8;
_4 = core::ptr::addr_of_mut!(_16.2.0.1);
_15.0 = 216_u8 as u16;
_13.fld1.0.0 = -108_i8;
_15.1 = [_16.1,_16.1];
_16.2.0 = ((-140737063294279887044519112948358127748_i128), _2, 1923_i16, _13.fld1.1);
_12.1 = _14.0;
_9 = [_12.0,_12.0,_12.0];
_16.2.2 = 196697973464927878113104321143922277981_u128 as i64;
_1 = (*_4);
_13.fld1.0.0 = 247586436641636159041013936009935417165_u128 as i8;
_15.1 = [_16.1,_16.1];
_12.1 = _14.0;
_16.2.0.1 = [_11,_11,_11,_11,_11,_11,_11];
_17 = core::ptr::addr_of_mut!(_16.1);
_14.2 = !_15.0;
_14.4 = _16.2.0.3 as f64;
_17 = core::ptr::addr_of_mut!((*_17));
_9 = [_12.0,_12.0,_12.0];
_15 = (_13.fld0, _12.1, _8);
_14.4 = _11 as f64;
_14.4 = _15.2 as f64;
_12.1 = [_16.1,(*_17)];
_16.2.0.1 = (*_3);
_16.2.0.2 = (-4653_i16);
_9 = [_12.0,_12.0,_12.0];
match _16.2.0.0 {
0 => bb1,
199545303626658576418855494483410083708 => bb5,
_ => bb4
}
}
bb14 = {
Return()
}
bb15 = {
_7 = 404282909_i32 >= 1093991294_i32;
_7 = !false;
RET = [448408247_i32,940494869_i32,1849584885_i32,(-1450517864_i32),1760484184_i32,(-1877894198_i32),(-576042975_i32)];
_3 = core::ptr::addr_of_mut!(RET);
_3 = core::ptr::addr_of_mut!((*_3));
_8 = 28129_u16;
_3 = _4;
_6 = _5;
_9 = [356800476_u32,2084575828_u32,2212929309_u32];
RET = _6;
_2 = _5;
_6 = [1555257735_i32,1018439546_i32,1153339997_i32,851379638_i32,(-2122327222_i32),1277460264_i32,(-973733376_i32)];
_6 = [(-1134895319_i32),1406574674_i32,(-1415091400_i32),1111874227_i32,1409787500_i32,(-984997690_i32),(-924141508_i32)];
_10 = 601194336767974138_i64 | 405173689610652900_i64;
RET = [728886351_i32,(-417194558_i32),958298097_i32,(-1791206695_i32),1850205995_i32,(-355878693_i32),(-2130641048_i32)];
_5 = [2091949722_i32,(-1918947874_i32),2059144002_i32,282174998_i32,413401137_i32,(-650206819_i32),(-1029606340_i32)];
_7 = _10 > _10;
RET = _6;
RET = [1893629954_i32,1395868875_i32,(-132859581_i32),(-1800394737_i32),1469407635_i32,(-469488718_i32),(-968792490_i32)];
_11 = 451856527_i32 ^ 774968154_i32;
RET = [_11,_11,_11,_11,_11,_11,_11];
_2 = _5;
RET = _1;
_9 = [1073463716_u32,532548525_u32,3796020415_u32];
Call(_12.0 = fn7(_2, _1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_8 = 60784_u16;
RET = [_11,_11,_11,_11,_11,_11,_11];
_13.fld1.1 = 4831966930687737026_u64 >> _10;
_13.fld1.0.0 = (-10330744315489023959266160954746568167_i128) as i8;
_13.fld0 = _8 / _8;
RET = [_11,_11,_11,_11,_11,_11,_11];
_6 = [_11,_11,_11,_11,_11,_11,_11];
_3 = core::ptr::addr_of_mut!(_2);
_11 = !410717928_i32;
_5 = (*_3);
_8 = _13.fld0 << _10;
_14.0 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_16.1 = -(-70_isize);
_16.2.1 = [_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0];
_16.2.0.0 = -162108833179785012446346466804061723918_i128;
Call(_16.0 = fn10(_2, _9, RET, _2, _3, _1, (*_3), _16.2.1, _14.0, _5, _3, _3, _16.1, _3, _8, _16.2.1), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_15.2 = _16.0 as u16;
_9 = [_12.0,_12.0,_12.0];
_25.fld6.2 = _16.2.0.2 as u16;
_25.fld6.2 = _7 as u16;
_19 = '\u{57426}' as i128;
_16.2.1 = [_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.0];
_23 = '\u{7fa11}';
_25.fld6.1 = _15.1;
_14.3 = core::ptr::addr_of!(_16.2.2);
_21 = _14.4;
_16.2.0.2 = (-31461_i16) << _13.fld1.1;
_12.0 = 13997244446351292684_usize as u32;
_14.3 = core::ptr::addr_of!(_10);
_16.2.0.0 = _13.fld1.1 as i128;
_14.3 = core::ptr::addr_of!(_10);
_27 = -_16.1;
_8 = _13.fld0;
_23 = '\u{2e520}';
_16.3 = _7;
_12 = (312008235_u32, _15.1);
_18 = 308437968922945459262957209006248451368_u128 as f32;
match _12.0 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
312008235 => bb11,
_ => bb10
}
}
bb18 = {
_25.fld5.0 = _12.0;
_25.fld5.0 = _12.0;
_20 = [_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1];
_16.3 = _7 & _29;
_25.fld5.1 = _14.0;
_32.0.2 = _13.fld0;
_31 = (_16.2.0.2,);
_16.2.2 = _10 * _10;
_3 = _4;
_18 = _16.0 * _14.1;
_13.fld0 = _8;
_25.fld1 = [_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2];
_25.fld4 = core::ptr::addr_of_mut!(_10);
_25.fld5.0 = !_12.0;
_31 = (_28.fld2.2,);
_24 = 123_u8 as f64;
_18 = _14.1 * _14.1;
Goto(bb19)
}
bb19 = {
Call(_39 = dump_var(6_usize, 8_usize, Move(_8), 7_usize, Move(_7), 12_usize, Move(_12), 9_usize, Move(_9)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_39 = dump_var(6_usize, 5_usize, Move(_5), 1_usize, Move(_1), 6_usize, Move(_6), 19_usize, Move(_19)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_39 = dump_var(6_usize, 20_usize, Move(_20), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [i32; 7],mut _2: [i32; 7],mut _3: *mut [i32; 7]) -> u32 {
mir! {
type RET = u32;
let _4: char;
let _5: ((i8,), u64);
let _6: ((i8,), u64);
let _7: Adt50;
let _8: [u128; 6];
let _9: [u32; 3];
let _10: f64;
let _11: Adt55;
let _12: isize;
let _13: i64;
let _14: u16;
let _15: (u64,);
let _16: [i8; 7];
let _17: *mut [i32; 7];
let _18: [i8; 7];
let _19: u16;
let _20: u8;
let _21: Adt56;
let _22: Adt59;
let _23: (i8,);
let _24: [i32; 7];
let _25: i8;
let _26: [u32; 3];
let _27: Adt49;
let _28: ((i8,), u64);
let _29: (u16, [isize; 2], u16);
let _30: isize;
let _31: i16;
let _32: Adt48;
let _33: (u32, [isize; 2]);
let _34: u32;
let _35: isize;
let _36: Adt52;
let _37: f32;
let _38: char;
let _39: Adt43;
let _40: ([i32; 7], i128, *mut u8);
let _41: ();
let _42: ();
{
RET = 1497411026_u32;
_3 = core::ptr::addr_of_mut!(_2);
_2 = [237263632_i32,1225237872_i32,(-1527616736_i32),(-1669548445_i32),(-1042139641_i32),(-1448526199_i32),(-1113486098_i32)];
_4 = '\u{5dc92}';
_5.1 = 14789373912772789391_u64 ^ 6410932918428569608_u64;
_6.1 = _5.1;
RET = 3934738781_u32 * 3281582819_u32;
Call(_6.0 = fn8(_3, _4, RET, _3, _6.1, (*_3), (*_3), _2, _5.1, (*_3)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5.0.0 = _6.0.0;
_6.1 = _5.1;
_5.0 = _6.0;
_5 = (_6.0, _6.1);
Goto(bb2)
}
bb2 = {
_6.0 = _5.0;
_6.1 = _5.1;
_2 = _1;
_6.0.0 = (-1685521736_i32) as i8;
_5 = (_6.0, _6.1);
_3 = core::ptr::addr_of_mut!(_2);
_6.0.0 = -_5.0.0;
_4 = '\u{dd763}';
RET = !2141830569_u32;
_3 = core::ptr::addr_of_mut!((*_3));
_5.1 = _6.1;
_8 = [48383813142973584822502675931121487462_u128,233704197455717193749569262175969367949_u128,164281541939515835070082860664970425484_u128,74977409476590465386262463411890570115_u128,194031396159479125676393723672434452325_u128,54321971064288083375636621289041329030_u128];
_10 = (-29526_i16) as f64;
_8 = [52646797540589291342759278688591283661_u128,320030005721798469682866043918090387544_u128,237753304174652333471347622650914740234_u128,156081177959212539936710038375573665102_u128,196896215709410415698416863556257698309_u128,262198332593191890464624926004973798693_u128];
_5.0.0 = _6.0.0 | _6.0.0;
_9 = [RET,RET,RET];
Goto(bb3)
}
bb3 = {
RET = 9223372036854775807_isize as u32;
Call(_6.1 = core::intrinsics::bswap(_5.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6.0 = (_5.0.0,);
_9 = [RET,RET,RET];
_5.0 = (_6.0.0,);
_5.0.0 = _6.0.0;
RET = 386832708_u32;
_4 = '\u{b5f41}';
_1 = [396818052_i32,(-759688884_i32),(-2062018038_i32),1757259204_i32,836802481_i32,(-2128869370_i32),(-1532323327_i32)];
match RET {
386832708 => bb5,
_ => bb1
}
}
bb5 = {
_6 = (_5.0, _5.1);
_4 = '\u{1f699}';
RET = 2098103010_u32;
_5.0.0 = _6.0.0 & _6.0.0;
RET = !3277057806_u32;
_3 = core::ptr::addr_of_mut!((*_3));
_4 = '\u{15281}';
_13 = 7_usize as i64;
_10 = (-15639_i16) as f64;
_6.1 = 12232938865645534769_usize as u64;
Goto(bb6)
}
bb6 = {
_13 = -1393512662845788695_i64;
RET = !195467987_u32;
_10 = _5.1 as f64;
_5.0.0 = (-756196867_i32) as i8;
_6 = (_5.0, _5.1);
_6.0 = (_5.0.0,);
RET = 52320_u16 as u32;
_16 = [_5.0.0,_5.0.0,_5.0.0,_5.0.0,_6.0.0,_6.0.0,_5.0.0];
_6.0.0 = _5.0.0;
_12 = -(-9223372036854775808_isize);
_4 = '\u{c3a99}';
_17 = _3;
_6.1 = 9136611617172300881_usize as u64;
_5.0.0 = _6.0.0;
_5.0 = (_6.0.0,);
Goto(bb7)
}
bb7 = {
_16 = [_6.0.0,_6.0.0,_5.0.0,_5.0.0,_5.0.0,_5.0.0,_6.0.0];
_14 = (-24704_i16) as u16;
_18 = [_5.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0,_6.0.0,_5.0.0];
_8 = [114958721814010491313921221873069232179_u128,80828973640762113848555646203111312583_u128,228485738076722414747704123962639522638_u128,103437659212554014481762510454367216625_u128,115989697943083295316524481178597957590_u128,181919205680130766617964572638236297169_u128];
Goto(bb8)
}
bb8 = {
_12 = -(-9_isize);
_15.0 = !_5.1;
_17 = _3;
RET = 3108482723_u32 << _15.0;
RET = !3839996300_u32;
_15 = (_6.1,);
_6 = _5;
_5.0 = (_6.0.0,);
_2 = [1402744261_i32,(-1828352773_i32),256934696_i32,(-174120816_i32),(-786065769_i32),1368728595_i32,(-1624508337_i32)];
_19 = (-72722981977076579659530128741150075079_i128) as u16;
_1 = (*_3);
_6.1 = _6.0.0 as u64;
Goto(bb9)
}
bb9 = {
_19 = _14 >> _14;
_6 = _5;
_6.0.0 = _5.0.0;
RET = _13 as u32;
_2 = _1;
_2 = [(-885416020_i32),1289156893_i32,(-1904034384_i32),(-503149591_i32),(-488593891_i32),952210514_i32,(-135336740_i32)];
_6.0.0 = _5.0.0;
_11 = Adt55::Variant1 { fld0: (*_3) };
_25 = -_5.0.0;
SetDiscriminant(_11, 2);
Goto(bb10)
}
bb10 = {
_23 = (_25,);
_23 = (_5.0.0,);
_25 = _5.0.0 ^ _23.0;
_6.0.0 = !_5.0.0;
_10 = _19 as f64;
_8 = [137209389550650262947631070491966824784_u128,82144149236446419379762906293099117351_u128,157052434819515337477298796281369613210_u128,300821380094816909172410772031151707809_u128,323510285813156438484416398758872540593_u128,277830323503693350605069078551509787696_u128];
_5 = (_6.0, _6.1);
Goto(bb11)
}
bb11 = {
_27.fld2.0 = 2110296530_i32 as i128;
_16 = [_25,_25,_23.0,_25,_23.0,_5.0.0,_23.0];
_5.1 = _6.1;
_4 = '\u{88a3}';
_28.0.0 = (-226552728_i32) as i8;
_28.1 = _15.0 + _5.1;
_1 = [(-1054965820_i32),(-596540452_i32),1506804478_i32,(-270324510_i32),360483960_i32,(-500388035_i32),(-35118986_i32)];
_29.2 = _14 & _14;
_3 = core::ptr::addr_of_mut!(_2);
_23.0 = _25 & _6.0.0;
_27.fld2.1 = [160124075_i32,1295300163_i32,(-976439473_i32),(-598436925_i32),(-943145688_i32),(-192634872_i32),1949248272_i32];
_6.0.0 = _23.0;
_15.0 = _28.1;
_18 = [_6.0.0,_6.0.0,_23.0,_23.0,_5.0.0,_23.0,_6.0.0];
_28 = (_5.0, _6.1);
_19 = 3_usize as u16;
_29.1 = [_12,_12];
_27.fld1 = 161_u8 as i32;
Goto(bb12)
}
bb12 = {
_5.1 = _28.1 >> _28.1;
_9 = [RET,RET,RET];
_27.fld2 = (106340569321247698561946335162166612795_i128, _1, (-24614_i16), _5.1);
_5.0.0 = _12 as i8;
_27.fld3 = _27.fld2.0 << _28.1;
_3 = _17;
_27.fld2.0 = true as i128;
_14 = _29.2;
Goto(bb13)
}
bb13 = {
_24 = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
_23 = (_6.0.0,);
_6 = (_23, _28.1);
_4 = '\u{2e2a9}';
_33.0 = !RET;
_5.0.0 = _13 as i8;
_28.0 = _6.0;
_5.0 = (_6.0.0,);
_12 = -66_isize;
_13 = -(-5834478627715120343_i64);
_5 = _28;
_3 = _17;
_27.fld2.3 = 3_usize as u64;
_8 = [2205885727466940077342715405888393543_u128,3892198160452411686244841109609343562_u128,160455611205319359698158136415716166089_u128,223411785187613258233487494570048221836_u128,301978527301023301695219706697330925750_u128,275373663180316503976797791315528124063_u128];
_26 = _9;
_6.1 = !_15.0;
_20 = _27.fld3 as u8;
_6.1 = _27.fld2.3 ^ _5.1;
_20 = 132_u8;
Call(_27.fld3 = core::intrinsics::bswap(_27.fld2.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_37 = _10 as f32;
place!(Field::<Adt44>(Variant(_11, 2), 0)) = Adt44::Variant0 { fld0: _27.fld2,fld1: _16 };
RET = _33.0;
_7 = Adt50 { fld0: Field::<Adt44>(Variant(_11, 2), 0) };
_27.fld2.3 = Field::<(i128, [i32; 7], i16, u64)>(Variant(Field::<Adt44>(Variant(_11, 2), 0), 0), 0).3;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(7_usize, 19_usize, Move(_19), 20_usize, Move(_20), 4_usize, Move(_4), 24_usize, Move(_24)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(7_usize, 25_usize, Move(_25), 26_usize, Move(_26), 28_usize, Move(_28), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(7_usize, 6_usize, Move(_6), 14_usize, Move(_14), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: *mut [i32; 7],mut _2: char,mut _3: u32,mut _4: *mut [i32; 7],mut _5: u64,mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [i32; 7],mut _9: u64,mut _10: [i32; 7]) -> (i8,) {
mir! {
type RET = (i8,);
let _11: [i8; 7];
let _12: ((i8,), u64);
let _13: (u32, [isize; 2]);
let _14: u32;
let _15: Adt55;
let _16: u32;
let _17: isize;
let _18: isize;
let _19: u16;
let _20: isize;
let _21: (i16,);
let _22: f32;
let _23: char;
let _24: [i8; 7];
let _25: &'static char;
let _26: f32;
let _27: u64;
let _28: u32;
let _29: *mut u8;
let _30: (i128, [i32; 7], i16, u64);
let _31: (i128, [i32; 7], i16, u64);
let _32: Adt54;
let _33: Adt43;
let _34: isize;
let _35: f32;
let _36: bool;
let _37: ();
let _38: ();
{
_12.0.0 = (-72_i8) << _5;
_12.0.0 = !54_i8;
_11 = [_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0];
_13.1 = [9223372036854775807_isize,9223372036854775807_isize];
_2 = '\u{ebef2}';
_9 = _5 ^ _5;
Goto(bb1)
}
bb1 = {
_13.0 = _3 | _3;
_11 = [_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0];
_2 = '\u{738a3}';
_13.0 = !_3;
_1 = _4;
_9 = 237_u8 as u64;
_12.1 = _5 << _9;
_4 = core::ptr::addr_of_mut!(_6);
_3 = !_13.0;
RET = (_12.0.0,);
_12.1 = !_9;
_17 = 9348_i16 as isize;
_18 = _17 | _17;
_13.1 = [_17,_18];
_19 = 30997_u16 - 15015_u16;
_21 = ((-30191_i16),);
_13.0 = _3;
_12.0 = (RET.0,);
_21 = (21286_i16,);
_17 = _18;
_4 = core::ptr::addr_of_mut!(_7);
match _21.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
21286 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_10 = (*_4);
_20 = 2051925366_i32 as isize;
RET = (_12.0.0,);
_5 = !_12.1;
RET.0 = -_12.0.0;
_13.1 = [_18,_18];
_9 = _5;
_13.1 = [_18,_20];
match _21.0 {
0 => bb6,
1 => bb5,
2 => bb3,
3 => bb8,
21286 => bb10,
_ => bb9
}
}
bb8 = {
Return()
}
bb9 = {
_13.0 = _3 | _3;
_11 = [_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0];
_2 = '\u{738a3}';
_13.0 = !_3;
_1 = _4;
_9 = 237_u8 as u64;
_12.1 = _5 << _9;
_4 = core::ptr::addr_of_mut!(_6);
_3 = !_13.0;
RET = (_12.0.0,);
_12.1 = !_9;
_17 = 9348_i16 as isize;
_18 = _17 | _17;
_13.1 = [_17,_18];
_19 = 30997_u16 - 15015_u16;
_21 = ((-30191_i16),);
_13.0 = _3;
_12.0 = (RET.0,);
_21 = (21286_i16,);
_17 = _18;
_4 = core::ptr::addr_of_mut!(_7);
match _21.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
21286 => bb7,
_ => bb6
}
}
bb10 = {
_12.1 = _17 as u64;
_21.0 = -19402_i16;
_12.0.0 = RET.0 | RET.0;
_13.1 = [_18,_17];
_14 = _2 as u32;
_21.0 = !(-7507_i16);
_21 = (30026_i16,);
_23 = _2;
_13.0 = !_3;
_12.1 = !_9;
_17 = 91892664783073458929721323971766438128_u128 as isize;
_22 = _19 as f32;
RET = _12.0;
_22 = (-1426752538_i32) as f32;
_23 = _2;
_12.1 = _9 & _9;
_13.1 = [_17,_20];
_15 = Adt55::Variant0 { fld0: _21 };
_1 = core::ptr::addr_of_mut!(_6);
_6 = [(-2089501861_i32),(-411423616_i32),176036005_i32,1305077871_i32,(-1505653380_i32),(-561215193_i32),(-98412793_i32)];
_8 = (*_1);
match _21.0 {
30026 => bb11,
_ => bb9
}
}
bb11 = {
SetDiscriminant(_15, 0);
_15 = Adt55::Variant0 { fld0: _21 };
_2 = _23;
SetDiscriminant(_15, 1);
_8 = (*_1);
_12.0.0 = RET.0;
_4 = _1;
_21 = ((-16874_i16),);
_10 = [(-1092379376_i32),2105279443_i32,(-696138151_i32),930673655_i32,794475536_i32,1545289372_i32,(-508338217_i32)];
_12.0 = (RET.0,);
_16 = _3 - _13.0;
_25 = &_23;
_13.0 = _23 as u32;
_13.0 = _16 & _16;
_12.0.0 = !RET.0;
_26 = _19 as f32;
_3 = !_13.0;
_2 = (*_25);
_7 = [(-344953213_i32),(-1303392946_i32),(-2056691571_i32),2007510398_i32,(-1143818413_i32),(-1454711357_i32),(-950007102_i32)];
RET = _12.0;
_28 = 64_u8 as u32;
_15 = Adt55::Variant0 { fld0: _21 };
_10 = [(-1979072951_i32),865181563_i32,1876201027_i32,(-278043744_i32),(-2079059349_i32),(-239318317_i32),719846086_i32];
place!(Field::<(i16,)>(Variant(_15, 0), 0)) = (_21.0,);
_30.0 = 4382697151798606629849648760281594998_i128 ^ (-93256797539768306670555164023107317130_i128);
RET = (_12.0.0,);
_18 = -_20;
_9 = _5 | _12.1;
Call(_17 = fn9(_4, (*_25), _16, _2, _3, _4, _13, _13), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_30 = (165706299317532735945812798672273899168_i128, _7, Field::<(i16,)>(Variant(_15, 0), 0).0, _9);
_10 = (*_1);
_22 = -_26;
_21 = (_30.2,);
_4 = _1;
Goto(bb13)
}
bb13 = {
SetDiscriminant(_15, 3);
_30.0 = _13.0 as i128;
RET.0 = !_12.0.0;
RET = _12.0;
_33.fld0.0 = -RET.0;
match _30.2 {
0 => bb4,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
340282366920938463463374607431768194582 => bb21,
_ => bb20
}
}
bb14 = {
_30 = (165706299317532735945812798672273899168_i128, _7, Field::<(i16,)>(Variant(_15, 0), 0).0, _9);
_10 = (*_1);
_22 = -_26;
_21 = (_30.2,);
_4 = _1;
Goto(bb13)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_13.0 = _3 | _3;
_11 = [_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0];
_2 = '\u{738a3}';
_13.0 = !_3;
_1 = _4;
_9 = 237_u8 as u64;
_12.1 = _5 << _9;
_4 = core::ptr::addr_of_mut!(_6);
_3 = !_13.0;
RET = (_12.0.0,);
_12.1 = !_9;
_17 = 9348_i16 as isize;
_18 = _17 | _17;
_13.1 = [_17,_18];
_19 = 30997_u16 - 15015_u16;
_21 = ((-30191_i16),);
_13.0 = _3;
_12.0 = (RET.0,);
_21 = (21286_i16,);
_17 = _18;
_4 = core::ptr::addr_of_mut!(_7);
match _21.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
21286 => bb7,
_ => bb6
}
}
bb18 = {
Return()
}
bb19 = {
_10 = (*_4);
_20 = 2051925366_i32 as isize;
RET = (_12.0.0,);
_5 = !_12.1;
RET.0 = -_12.0.0;
_13.1 = [_18,_18];
_9 = _5;
_13.1 = [_18,_20];
match _21.0 {
0 => bb6,
1 => bb5,
2 => bb3,
3 => bb8,
21286 => bb10,
_ => bb9
}
}
bb20 = {
_13.0 = _3 | _3;
_11 = [_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0,_12.0.0];
_2 = '\u{738a3}';
_13.0 = !_3;
_1 = _4;
_9 = 237_u8 as u64;
_12.1 = _5 << _9;
_4 = core::ptr::addr_of_mut!(_6);
_3 = !_13.0;
RET = (_12.0.0,);
_12.1 = !_9;
_17 = 9348_i16 as isize;
_18 = _17 | _17;
_13.1 = [_17,_18];
_19 = 30997_u16 - 15015_u16;
_21 = ((-30191_i16),);
_13.0 = _3;
_12.0 = (RET.0,);
_21 = (21286_i16,);
_17 = _18;
_4 = core::ptr::addr_of_mut!(_7);
match _21.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
21286 => bb7,
_ => bb6
}
}
bb21 = {
_21 = (_30.2,);
_5 = _30.3 ^ _12.1;
_4 = _1;
_12 = (RET, _5);
Goto(bb22)
}
bb22 = {
Call(_37 = dump_var(8_usize, 16_usize, Move(_16), 12_usize, Move(_12), 23_usize, Move(_23), 11_usize, Move(_11)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_37 = dump_var(8_usize, 5_usize, Move(_5), 19_usize, Move(_19), 8_usize, Move(_8), 10_usize, Move(_10)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_37 = dump_var(8_usize, 2_usize, Move(_2), 21_usize, Move(_21), 38_usize, _38, 38_usize, _38), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: *mut [i32; 7],mut _2: char,mut _3: u32,mut _4: char,mut _5: u32,mut _6: *mut [i32; 7],mut _7: (u32, [isize; 2]),mut _8: (u32, [isize; 2])) -> isize {
mir! {
type RET = isize;
let _9: u32;
let _10: isize;
let _11: [u32; 3];
let _12: Adt49;
let _13: Adt50;
let _14: ((i8,), u64);
let _15: isize;
let _16: char;
let _17: f32;
let _18: [u128; 6];
let _19: Adt45;
let _20: char;
let _21: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _22: Adt50;
let _23: [u32; 3];
let _24: *const u8;
let _25: ([i32; 7], i128, *mut u8);
let _26: ();
let _27: ();
{
_4 = _2;
_8.0 = !_5;
RET = 9223372036854775807_isize;
_8 = _7;
_2 = _4;
_6 = _1;
_4 = _2;
_5 = true as u32;
_5 = _7.0 * _3;
_6 = _1;
_8.0 = !_7.0;
RET = (-9223372036854775808_isize);
_7.0 = !_3;
_7 = (_3, _8.1);
RET = 193530597806611593512706737067154255186_u128 as isize;
_1 = _6;
_4 = _2;
RET = !(-95_isize);
RET = !9223372036854775807_isize;
_9 = _8.0 >> _3;
_6 = _1;
_7 = _8;
_7.0 = _8.0;
_12.fld1 = 2076141517_i32;
_12.fld2.3 = !13807705932377371959_u64;
Goto(bb1)
}
bb1 = {
_7 = (_5, _8.1);
_7.0 = _5 * _9;
_1 = core::ptr::addr_of_mut!(_12.fld2.1);
_12.fld2.1 = [_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1];
_14.0 = ((-77_i8),);
_12.fld2.0 = 7409183252381634302689013400948652607_i128;
_10 = RET + RET;
_8.1 = [_10,_10];
RET = _10;
_4 = _2;
_12.fld2.2 = (-29343_i16);
_14.0 = (19_i8,);
_14.1 = 152787667894933921048290766721261299872_u128 as u64;
_1 = core::ptr::addr_of_mut!((*_1));
_15 = RET + RET;
_7.1 = _8.1;
_11 = [_8.0,_7.0,_5];
_14.0.0 = -31_i8;
Goto(bb2)
}
bb2 = {
_9 = _7.0;
_15 = -_10;
_9 = _7.0;
_17 = _12.fld2.3 as f32;
_12.fld2.2 = !(-12578_i16);
_7.1 = [_10,RET];
_6 = _1;
_8.1 = [RET,_15];
_9 = (-1775314106211039876_i64) as u32;
_7.0 = !_8.0;
Goto(bb3)
}
bb3 = {
_8.0 = _5;
_11 = [_5,_5,_8.0];
_16 = _4;
_14.1 = _8.0 as u64;
_16 = _4;
_7.0 = 27564924775567149277512685783077265240_u128 as u32;
_6 = _1;
RET = _10 << _3;
_15 = -RET;
_12.fld1 = _14.1 as i32;
_18 = [278662304729143685839354784374597834504_u128,259312956355211928533178579814038857193_u128,218958679493940646118267088532510302640_u128,292035997527781697505188802132583084360_u128,230626704678442641660087244731751056300_u128,135758667801634483499901313736325618841_u128];
_21.2 = 7837712965994290912_i64 ^ (-5676585369574486122_i64);
_21.0.1 = [_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1];
_12.fld2.0 = _17 as i128;
_12.fld3 = _12.fld2.0 * _12.fld2.0;
Goto(bb4)
}
bb4 = {
_21.0.1 = _12.fld2.1;
_21.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_4 = _16;
_21.0 = _12.fld2;
Goto(bb5)
}
bb5 = {
_21.0.2 = _12.fld2.2 * _12.fld2.2;
_12.fld3 = _12.fld2.2 as i128;
_12.fld2.0 = !_21.0.0;
_14.0 = ((-22_i8),);
_12.fld2 = (_21.0.0, _21.0.1, _21.0.2, _14.1);
_21.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_21.0 = (_12.fld3, (*_1), _12.fld2.2, _14.1);
_7.1 = [_15,RET];
_20 = _16;
_7.1 = _8.1;
_11 = [_5,_5,_5];
_16 = _4;
_23 = [_7.0,_8.0,_8.0];
_25.1 = _21.0.0;
_21.0 = (_25.1, (*_1), _12.fld2.2, _12.fld2.3);
_17 = 2_usize as f32;
_25.0 = [_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1,_12.fld1];
_12.fld2 = _21.0;
_8 = (_3, _7.1);
_14.0 = (74_i8,);
RET = _15 * _15;
Goto(bb6)
}
bb6 = {
Call(_26 = dump_var(9_usize, 9_usize, Move(_9), 7_usize, Move(_7), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_26 = dump_var(9_usize, 14_usize, Move(_14), 20_usize, Move(_20), 15_usize, Move(_15), 8_usize, Move(_8)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [i32; 7],mut _2: [u32; 3],mut _3: [i32; 7],mut _4: [i32; 7],mut _5: *mut [i32; 7],mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [i8; 7],mut _9: [isize; 2],mut _10: [i32; 7],mut _11: *mut [i32; 7],mut _12: *mut [i32; 7],mut _13: isize,mut _14: *mut [i32; 7],mut _15: u16,mut _16: [i8; 7]) -> f32 {
mir! {
type RET = f32;
let _17: char;
let _18: Adt56;
let _19: ((i8,), u64);
let _20: Adt45;
let _21: isize;
let _22: (i16,);
let _23: usize;
let _24: char;
let _25: (i16,);
let _26: f32;
let _27: (i8,);
let _28: char;
let _29: Adt52;
let _30: (u32, [isize; 2]);
let _31: isize;
let _32: i64;
let _33: Adt50;
let _34: Adt47;
let _35: usize;
let _36: u32;
let _37: u16;
let _38: Adt51;
let _39: f32;
let _40: u8;
let _41: Adt51;
let _42: *mut u8;
let _43: u128;
let _44: [isize; 2];
let _45: (i16,);
let _46: &'static char;
let _47: Adt43;
let _48: ();
let _49: ();
{
_15 = 39444_u16;
_17 = '\u{346a3}';
_2 = [189717569_u32,1245754194_u32,521621357_u32];
RET = _13 as f32;
_19.1 = 5936857084446754066_u64 | 6741519455082451986_u64;
_9 = [_13,_13];
_7 = [(-764850943_i32),(-1092093220_i32),(-353377962_i32),(-1770183349_i32),1839799276_i32,(-1102907900_i32),(-657700352_i32)];
_5 = core::ptr::addr_of_mut!(_3);
_7 = [(-990824772_i32),(-1767891074_i32),1056092975_i32,2025186587_i32,(-1644344754_i32),(-1715648020_i32),(-1292054490_i32)];
_1 = [652199907_i32,(-1672625062_i32),2126470123_i32,2032416358_i32,980527197_i32,(-384121340_i32),(-1613624907_i32)];
_5 = _12;
_8 = _16;
_4 = [(-1910670896_i32),(-260941928_i32),422016848_i32,352282058_i32,(-1083962966_i32),(-1233863130_i32),(-10587407_i32)];
Goto(bb1)
}
bb1 = {
RET = 259997818104357518488562191170771312823_u128 as f32;
_15 = 17438_u16 >> _19.1;
_17 = '\u{656b1}';
RET = (-4982182978173526678_i64) as f32;
_21 = _13;
_9 = [_21,_13];
RET = (-75497496135448586872668852133599703917_i128) as f32;
_19.0.0 = _13 as i8;
_15 = 7534160205614335718_i64 as u16;
RET = (-16244_i16) as f32;
_15 = 32336_u16;
_17 = '\u{e3e57}';
_17 = '\u{6e4c5}';
_19.0.0 = !103_i8;
_10 = [597602846_i32,(-350902618_i32),(-1472858543_i32),(-45306655_i32),(-710601065_i32),428510250_i32,867762081_i32];
_11 = core::ptr::addr_of_mut!(_7);
_22 = (26756_i16,);
_23 = 13576423921502712817_usize | 0_usize;
_22.0 = (-19408_i16);
_11 = _12;
_22.0 = (-14419_i16);
_14 = core::ptr::addr_of_mut!(_10);
RET = _19.1 as f32;
_21 = _13;
match _15 {
32336 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_19.0.0 = !(-27_i8);
_14 = core::ptr::addr_of_mut!((*_14));
RET = _15 as f32;
_19.0.0 = _23 as i8;
Call(_4 = fn11(_3, _19.0.0, _5, _16, _6, _22.0, (*_14), _12, _1, _19.0, _7, _19.0.0, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = [_13,_21];
_22.0 = (-29995_i16);
_4 = [1493525964_i32,213109931_i32,123786915_i32,2040591253_i32,2000370103_i32,390661941_i32,(-1824773135_i32)];
_19.1 = (-1010624309_i32) as u64;
Goto(bb5)
}
bb5 = {
_21 = -_13;
_5 = _11;
_5 = core::ptr::addr_of_mut!(_10);
_12 = _11;
_2 = [2759927402_u32,1527002647_u32,675401647_u32];
_23 = 4_usize + 1_usize;
_10 = [(-2076627292_i32),1460975203_i32,1571162948_i32,(-45176749_i32),344096936_i32,(-289211000_i32),(-1475372589_i32)];
_3 = [401271984_i32,(-683067251_i32),(-1847524634_i32),(-269483594_i32),(-473136677_i32),829245469_i32,(-267570075_i32)];
_9 = [_21,_13];
_11 = core::ptr::addr_of_mut!(_3);
_15 = 36580_u16;
Goto(bb6)
}
bb6 = {
_5 = core::ptr::addr_of_mut!((*_14));
_27 = (_19.0.0,);
_4 = (*_11);
_19.0 = (_27.0,);
_26 = RET + RET;
RET = 97063937942509355546835549545484552399_i128 as f32;
_14 = _5;
_26 = -RET;
_12 = core::ptr::addr_of_mut!(_7);
_19.0 = (_27.0,);
_13 = 1034088125_i32 as isize;
_30.1 = [_21,_21];
_32 = -(-1774413392471980283_i64);
_9 = [_21,_21];
_26 = -RET;
_17 = '\u{96156}';
Call(_4 = fn14(_12, (*_5), _30.1, _10, _12, (*_5)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_15 = !6244_u16;
_19.0.0 = (-2122347321_i32) as i8;
_27.0 = -_19.0.0;
_30.0 = 3145277089_u32 * 2657690817_u32;
_25.0 = !_22.0;
_9 = _30.1;
_19.1 = 15495879541026214660_u64;
_19.0.0 = 147_u8 as i8;
Goto(bb8)
}
bb8 = {
_15 = _30.0 as u16;
_22.0 = -_25.0;
_9 = [_13,_21];
_22.0 = _25.0;
_38.fld1 = (_19.0, _19.1);
_16 = [_27.0,_38.fld1.0.0,_27.0,_19.0.0,_19.0.0,_27.0,_27.0];
_27.0 = _19.0.0;
Goto(bb9)
}
bb9 = {
_8 = [_38.fld1.0.0,_27.0,_27.0,_27.0,_27.0,_38.fld1.0.0,_19.0.0];
match _38.fld1.1 {
0 => bb1,
1 => bb10,
15495879541026214660 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
_5 = core::ptr::addr_of_mut!((*_14));
_27 = (_19.0.0,);
_4 = (*_11);
_19.0 = (_27.0,);
_26 = RET + RET;
RET = 97063937942509355546835549545484552399_i128 as f32;
_14 = _5;
_26 = -RET;
_12 = core::ptr::addr_of_mut!(_7);
_19.0 = (_27.0,);
_13 = 1034088125_i32 as isize;
_30.1 = [_21,_21];
_32 = -(-1774413392471980283_i64);
_9 = [_21,_21];
_26 = -RET;
_17 = '\u{96156}';
Call(_4 = fn14(_12, (*_5), _30.1, _10, _12, (*_5)), ReturnTo(bb7), UnwindUnreachable())
}
bb12 = {
_5 = _11;
_17 = '\u{8ba68}';
_14 = core::ptr::addr_of_mut!(_7);
_17 = '\u{c10b0}';
Goto(bb13)
}
bb13 = {
_3 = _7;
_27 = _38.fld1.0;
_15 = 145960781446556362184191723874739011513_u128 as u16;
_19 = (_38.fld1.0, _38.fld1.1);
_11 = core::ptr::addr_of_mut!(_3);
_38.fld1.0 = (_19.0.0,);
_38.fld1.0.0 = -_19.0.0;
_14 = core::ptr::addr_of_mut!((*_11));
_22 = (_25.0,);
_3 = [150404920_i32,1540156106_i32,1599279452_i32,769788272_i32,2100055423_i32,(-344196484_i32),(-514058126_i32)];
_42 = core::ptr::addr_of_mut!(_40);
_42 = core::ptr::addr_of_mut!(_40);
_38.fld1 = (_19.0, _19.1);
_37 = _15 & _15;
_27 = _19.0;
_17 = '\u{99374}';
_26 = RET;
_3 = _4;
match _38.fld1.1 {
15495879541026214660 => bb15,
_ => bb14
}
}
bb14 = {
_8 = [_38.fld1.0.0,_27.0,_27.0,_27.0,_27.0,_38.fld1.0.0,_19.0.0];
match _38.fld1.1 {
0 => bb1,
1 => bb10,
15495879541026214660 => bb12,
_ => bb11
}
}
bb15 = {
_38.fld1.0 = (_27.0,);
_25.0 = (-64131318329226137208862421353552361714_i128) as i16;
Goto(bb16)
}
bb16 = {
Call(_48 = dump_var(10_usize, 23_usize, Move(_23), 30_usize, Move(_30), 19_usize, Move(_19), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(10_usize, 3_usize, Move(_3), 4_usize, Move(_4), 2_usize, Move(_2), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(10_usize, 21_usize, Move(_21), 25_usize, Move(_25), 17_usize, Move(_17), 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [i32; 7],mut _2: i8,mut _3: *mut [i32; 7],mut _4: [i8; 7],mut _5: [i32; 7],mut _6: i16,mut _7: [i32; 7],mut _8: *mut [i32; 7],mut _9: [i32; 7],mut _10: (i8,),mut _11: [i32; 7],mut _12: i8,mut _13: [u32; 3]) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _14: f32;
let _15: (i16,);
let _16: *mut i64;
let _17: bool;
let _18: (u16, [isize; 2], u16);
let _19: &'static char;
let _20: f64;
let _21: Adt56;
let _22: i128;
let _23: ([i32; 7], i128, *mut u8);
let _24: *mut isize;
let _25: (u32, [isize; 2]);
let _26: ([i32; 7], i128, *mut u8);
let _27: Adt49;
let _28: (u64,);
let _29: Adt45;
let _30: f32;
let _31: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _32: *mut isize;
let _33: i16;
let _34: f32;
let _35: Adt45;
let _36: f32;
let _37: isize;
let _38: isize;
let _39: char;
let _40: ();
let _41: ();
{
_15.0 = 2270549629_u32 as i16;
_13 = [2290728638_u32,3649808273_u32,478752598_u32];
_15 = (_6,);
_3 = _8;
_13 = [2315090237_u32,2577812659_u32,3291060743_u32];
RET = [1922485894_i32,(-1241764711_i32),(-138688633_i32),1086761306_i32,(-148664060_i32),(-1314419130_i32),(-2053199429_i32)];
_3 = core::ptr::addr_of_mut!(_9);
_7 = _9;
_13 = [3328245924_u32,2129396883_u32,3689956311_u32];
_4 = [_10.0,_12,_2,_10.0,_2,_2,_12];
_15.0 = !_6;
Goto(bb1)
}
bb1 = {
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_15 = (_6,);
_18.2 = 34475_u16;
RET = _7;
_10.0 = -_2;
_18.0 = _18.2;
_6 = -_15.0;
_4 = [_10.0,_12,_2,_10.0,_12,_10.0,_12];
_1 = [(-657513674_i32),(-1204934861_i32),(-1023815616_i32),14879301_i32,935213984_i32,(-1074450776_i32),725994688_i32];
_13 = [3977641053_u32,417723593_u32,4101122342_u32];
_18.2 = _18.0;
_6 = _15.0 * _15.0;
_17 = _2 <= _10.0;
_15 = (_6,);
_11 = [828906959_i32,2063673465_i32,174062948_i32,(-42899486_i32),(-568581724_i32),(-249125325_i32),(-877533866_i32)];
_18.1 = [9223372036854775807_isize,(-35_isize)];
_9 = RET;
_8 = _3;
_6 = -_15.0;
_14 = _6 as f32;
_18.0 = _18.2 / _18.2;
_3 = core::ptr::addr_of_mut!(_11);
_2 = _12;
_15.0 = _6 ^ _6;
_11 = _9;
_11 = _1;
_11 = [1255743401_i32,958752011_i32,163402000_i32,(-2074563910_i32),610020596_i32,(-288908294_i32),(-907405928_i32)];
Goto(bb2)
}
bb2 = {
_10.0 = !_2;
_5 = (*_3);
_18.2 = _6 as u16;
Goto(bb3)
}
bb3 = {
_14 = 353038020_u32 as f32;
RET = [2026143245_i32,355831545_i32,(-534212780_i32),(-1413991592_i32),1470877089_i32,112417111_i32,(-1727057379_i32)];
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = _3;
_10 = (_2,);
_12 = _2 - _2;
_3 = _8;
_15 = (_6,);
_15.0 = _6;
Call(_9 = fn12(_18.1, _1, _5, _8, _7, _7, _18.2, _12, _7, _10.0, _15.0, _18, _15.0, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_5 = [(-68587265_i32),883836057_i32,(-522942568_i32),(-1181561436_i32),(-350986984_i32),2100173754_i32,562755093_i32];
_13 = [976013769_u32,1972054065_u32,905955009_u32];
RET = [943080366_i32,1127962618_i32,(-210271484_i32),2125003759_i32,(-1770133479_i32),(-1139885560_i32),1773880677_i32];
_4 = [_12,_2,_12,_2,_12,_12,_12];
_20 = 6176749062782017900_usize as f64;
_10 = (_12,);
_14 = 9758822753462520782_u64 as f32;
Goto(bb5)
}
bb5 = {
_8 = _3;
_20 = _6 as f64;
_10.0 = _12;
_11 = [1759827563_i32,715203545_i32,(-227655733_i32),(-1234871356_i32),1316068274_i32,(-826568813_i32),1177792695_i32];
_10 = (_2,);
_17 = false ^ false;
_8 = core::ptr::addr_of_mut!(_11);
_2 = _17 as i8;
_1 = [1779031_i32,(-1500505783_i32),(-360643433_i32),448406668_i32,(-223036982_i32),926998186_i32,(-2063749964_i32)];
_18.1 = [9223372036854775807_isize,(-94_isize)];
_18.0 = _18.2;
_23.0 = [1550705309_i32,1188480769_i32,(-813971342_i32),(-1211754077_i32),(-1487961750_i32),1224944474_i32,1149834099_i32];
_2 = _12 - _12;
RET = [1673372247_i32,(-1184403985_i32),(-1752803508_i32),1949446189_i32,148930631_i32,958854854_i32,(-2018110800_i32)];
_18.1 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET = [969296711_i32,1630615433_i32,202693536_i32,(-431171854_i32),(-1495683647_i32),1783567099_i32,(-345843094_i32)];
_4 = [_12,_12,_2,_2,_12,_2,_2];
_25 = (189929031_u32, _18.1);
_25 = (1270859332_u32, _18.1);
_22 = 29740104998460377266684686631705050259_i128 >> _2;
_18.2 = _15.0 as u16;
_26.1 = !_22;
_15 = (_6,);
_4 = [_2,_10.0,_12,_2,_2,_10.0,_2];
_27.fld3 = _26.1 ^ _22;
match _25.0 {
0 => bb4,
1 => bb2,
1270859332 => bb7,
_ => bb6
}
}
bb6 = {
_14 = 353038020_u32 as f32;
RET = [2026143245_i32,355831545_i32,(-534212780_i32),(-1413991592_i32),1470877089_i32,112417111_i32,(-1727057379_i32)];
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = _3;
_10 = (_2,);
_12 = _2 - _2;
_3 = _8;
_15 = (_6,);
_15.0 = _6;
Call(_9 = fn12(_18.1, _1, _5, _8, _7, _7, _18.2, _12, _7, _10.0, _15.0, _18, _15.0, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb7 = {
_1 = [(-1348834511_i32),(-1016754212_i32),1173508740_i32,(-1215296256_i32),(-1439726496_i32),1638835263_i32,1396183273_i32];
_27.fld2.1 = [(-606154941_i32),1803358525_i32,167275539_i32,(-1918580078_i32),(-990203512_i32),(-1004794023_i32),(-852607459_i32)];
_18.2 = _18.0 << _27.fld3;
_25.0 = 3788488028_u32 - 3750525530_u32;
_28.0 = 12751047155748213784_u64;
_12 = _14 as i8;
_13 = [_25.0,_25.0,_25.0];
_27.fld2.3 = _18.2 as u64;
_27.fld2.0 = _15.0 as i128;
_25 = (3506591491_u32, _18.1);
_4 = [_2,_2,_2,_10.0,_2,_2,_2];
_27.fld1 = _14 as i32;
_27.fld2.2 = _6 + _15.0;
_10.0 = _2 + _2;
_4 = [_2,_10.0,_2,_10.0,_2,_10.0,_10.0];
_17 = true ^ true;
_13 = [_25.0,_25.0,_25.0];
_31.0.2 = _27.fld2.3 as i16;
_25.1 = [9223372036854775807_isize,9223372036854775807_isize];
_20 = 322788026432760940701245319503893029458_u128 as f64;
_27.fld2.1 = _11;
_28 = (_27.fld2.3,);
_18.2 = _18.0 << _26.1;
match _25.0 {
0 => bb8,
1 => bb9,
2 => bb10,
3506591491 => bb12,
_ => bb11
}
}
bb8 = {
_10.0 = !_2;
_5 = (*_3);
_18.2 = _6 as u16;
Goto(bb3)
}
bb9 = {
_8 = _3;
_20 = _6 as f64;
_10.0 = _12;
_11 = [1759827563_i32,715203545_i32,(-227655733_i32),(-1234871356_i32),1316068274_i32,(-826568813_i32),1177792695_i32];
_10 = (_2,);
_17 = false ^ false;
_8 = core::ptr::addr_of_mut!(_11);
_2 = _17 as i8;
_1 = [1779031_i32,(-1500505783_i32),(-360643433_i32),448406668_i32,(-223036982_i32),926998186_i32,(-2063749964_i32)];
_18.1 = [9223372036854775807_isize,(-94_isize)];
_18.0 = _18.2;
_23.0 = [1550705309_i32,1188480769_i32,(-813971342_i32),(-1211754077_i32),(-1487961750_i32),1224944474_i32,1149834099_i32];
_2 = _12 - _12;
RET = [1673372247_i32,(-1184403985_i32),(-1752803508_i32),1949446189_i32,148930631_i32,958854854_i32,(-2018110800_i32)];
_18.1 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET = [969296711_i32,1630615433_i32,202693536_i32,(-431171854_i32),(-1495683647_i32),1783567099_i32,(-345843094_i32)];
_4 = [_12,_12,_2,_2,_12,_2,_2];
_25 = (189929031_u32, _18.1);
_25 = (1270859332_u32, _18.1);
_22 = 29740104998460377266684686631705050259_i128 >> _2;
_18.2 = _15.0 as u16;
_26.1 = !_22;
_15 = (_6,);
_4 = [_2,_10.0,_12,_2,_2,_10.0,_2];
_27.fld3 = _26.1 ^ _22;
match _25.0 {
0 => bb4,
1 => bb2,
1270859332 => bb7,
_ => bb6
}
}
bb10 = {
_5 = [(-68587265_i32),883836057_i32,(-522942568_i32),(-1181561436_i32),(-350986984_i32),2100173754_i32,562755093_i32];
_13 = [976013769_u32,1972054065_u32,905955009_u32];
RET = [943080366_i32,1127962618_i32,(-210271484_i32),2125003759_i32,(-1770133479_i32),(-1139885560_i32),1773880677_i32];
_4 = [_12,_2,_12,_2,_12,_12,_12];
_20 = 6176749062782017900_usize as f64;
_10 = (_12,);
_14 = 9758822753462520782_u64 as f32;
Goto(bb5)
}
bb11 = {
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_15 = (_6,);
_18.2 = 34475_u16;
RET = _7;
_10.0 = -_2;
_18.0 = _18.2;
_6 = -_15.0;
_4 = [_10.0,_12,_2,_10.0,_12,_10.0,_12];
_1 = [(-657513674_i32),(-1204934861_i32),(-1023815616_i32),14879301_i32,935213984_i32,(-1074450776_i32),725994688_i32];
_13 = [3977641053_u32,417723593_u32,4101122342_u32];
_18.2 = _18.0;
_6 = _15.0 * _15.0;
_17 = _2 <= _10.0;
_15 = (_6,);
_11 = [828906959_i32,2063673465_i32,174062948_i32,(-42899486_i32),(-568581724_i32),(-249125325_i32),(-877533866_i32)];
_18.1 = [9223372036854775807_isize,(-35_isize)];
_9 = RET;
_8 = _3;
_6 = -_15.0;
_14 = _6 as f32;
_18.0 = _18.2 / _18.2;
_3 = core::ptr::addr_of_mut!(_11);
_2 = _12;
_15.0 = _6 ^ _6;
_11 = _9;
_11 = _1;
_11 = [1255743401_i32,958752011_i32,163402000_i32,(-2074563910_i32),610020596_i32,(-288908294_i32),(-907405928_i32)];
Goto(bb2)
}
bb12 = {
_8 = core::ptr::addr_of_mut!(_23.0);
_28 = (_27.fld2.3,);
_2 = !_10.0;
_1 = (*_8);
_12 = _14 as i8;
_6 = _31.0.2;
_31.0.1 = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
_5 = (*_8);
_25 = (961687499_u32, _18.1);
_30 = _14;
Goto(bb13)
}
bb13 = {
_27.fld2.0 = _17 as i128;
_11 = _7;
_28.0 = _27.fld2.3 << _22;
_31.0.2 = _6 | _27.fld2.2;
_30 = _31.0.2 as f32;
_1 = _5;
_27.fld3 = -_22;
_25.1 = _18.1;
RET = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
_31 = (_27.fld2, _4, 9057530831591630209_i64);
_25.0 = 2346163042_u32 << _31.0.3;
_30 = _14 - _14;
_14 = _30 * _30;
_18.1 = [9223372036854775807_isize,(-43_isize)];
_27.fld3 = _18.2 as i128;
_31.0.2 = _30 as i16;
_25.0 = 2978742535_u32;
_14 = _2 as f32;
_27.fld2.0 = _22 ^ _27.fld3;
_13 = [_25.0,_25.0,_25.0];
_11 = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
_31.0.3 = _27.fld2.0 as u64;
match _31.2 {
0 => bb9,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
9057530831591630209 => bb20,
_ => bb19
}
}
bb14 = {
_14 = 353038020_u32 as f32;
RET = [2026143245_i32,355831545_i32,(-534212780_i32),(-1413991592_i32),1470877089_i32,112417111_i32,(-1727057379_i32)];
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = _3;
_10 = (_2,);
_12 = _2 - _2;
_3 = _8;
_15 = (_6,);
_15.0 = _6;
Call(_9 = fn12(_18.1, _1, _5, _8, _7, _7, _18.2, _12, _7, _10.0, _15.0, _18, _15.0, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_10.0 = !_2;
_5 = (*_3);
_18.2 = _6 as u16;
Goto(bb3)
}
bb16 = {
_5 = [(-68587265_i32),883836057_i32,(-522942568_i32),(-1181561436_i32),(-350986984_i32),2100173754_i32,562755093_i32];
_13 = [976013769_u32,1972054065_u32,905955009_u32];
RET = [943080366_i32,1127962618_i32,(-210271484_i32),2125003759_i32,(-1770133479_i32),(-1139885560_i32),1773880677_i32];
_4 = [_12,_2,_12,_2,_12,_12,_12];
_20 = 6176749062782017900_usize as f64;
_10 = (_12,);
_14 = 9758822753462520782_u64 as f32;
Goto(bb5)
}
bb17 = {
_8 = _3;
_20 = _6 as f64;
_10.0 = _12;
_11 = [1759827563_i32,715203545_i32,(-227655733_i32),(-1234871356_i32),1316068274_i32,(-826568813_i32),1177792695_i32];
_10 = (_2,);
_17 = false ^ false;
_8 = core::ptr::addr_of_mut!(_11);
_2 = _17 as i8;
_1 = [1779031_i32,(-1500505783_i32),(-360643433_i32),448406668_i32,(-223036982_i32),926998186_i32,(-2063749964_i32)];
_18.1 = [9223372036854775807_isize,(-94_isize)];
_18.0 = _18.2;
_23.0 = [1550705309_i32,1188480769_i32,(-813971342_i32),(-1211754077_i32),(-1487961750_i32),1224944474_i32,1149834099_i32];
_2 = _12 - _12;
RET = [1673372247_i32,(-1184403985_i32),(-1752803508_i32),1949446189_i32,148930631_i32,958854854_i32,(-2018110800_i32)];
_18.1 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET = [969296711_i32,1630615433_i32,202693536_i32,(-431171854_i32),(-1495683647_i32),1783567099_i32,(-345843094_i32)];
_4 = [_12,_12,_2,_2,_12,_2,_2];
_25 = (189929031_u32, _18.1);
_25 = (1270859332_u32, _18.1);
_22 = 29740104998460377266684686631705050259_i128 >> _2;
_18.2 = _15.0 as u16;
_26.1 = !_22;
_15 = (_6,);
_4 = [_2,_10.0,_12,_2,_2,_10.0,_2];
_27.fld3 = _26.1 ^ _22;
match _25.0 {
0 => bb4,
1 => bb2,
1270859332 => bb7,
_ => bb6
}
}
bb18 = {
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_15 = (_6,);
_18.2 = 34475_u16;
RET = _7;
_10.0 = -_2;
_18.0 = _18.2;
_6 = -_15.0;
_4 = [_10.0,_12,_2,_10.0,_12,_10.0,_12];
_1 = [(-657513674_i32),(-1204934861_i32),(-1023815616_i32),14879301_i32,935213984_i32,(-1074450776_i32),725994688_i32];
_13 = [3977641053_u32,417723593_u32,4101122342_u32];
_18.2 = _18.0;
_6 = _15.0 * _15.0;
_17 = _2 <= _10.0;
_15 = (_6,);
_11 = [828906959_i32,2063673465_i32,174062948_i32,(-42899486_i32),(-568581724_i32),(-249125325_i32),(-877533866_i32)];
_18.1 = [9223372036854775807_isize,(-35_isize)];
_9 = RET;
_8 = _3;
_6 = -_15.0;
_14 = _6 as f32;
_18.0 = _18.2 / _18.2;
_3 = core::ptr::addr_of_mut!(_11);
_2 = _12;
_15.0 = _6 ^ _6;
_11 = _9;
_11 = _1;
_11 = [1255743401_i32,958752011_i32,163402000_i32,(-2074563910_i32),610020596_i32,(-288908294_i32),(-907405928_i32)];
Goto(bb2)
}
bb19 = {
_14 = 353038020_u32 as f32;
RET = [2026143245_i32,355831545_i32,(-534212780_i32),(-1413991592_i32),1470877089_i32,112417111_i32,(-1727057379_i32)];
_18.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = _3;
_10 = (_2,);
_12 = _2 - _2;
_3 = _8;
_15 = (_6,);
_15.0 = _6;
Call(_9 = fn12(_18.1, _1, _5, _8, _7, _7, _18.2, _12, _7, _10.0, _15.0, _18, _15.0, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb20 = {
_7 = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
_18.2 = _18.0;
_23.1 = _27.fld1 as i128;
_27.fld2.1 = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
_27.fld3 = _25.0 as i128;
RET = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
Goto(bb21)
}
bb21 = {
Call(_40 = dump_var(11_usize, 12_usize, Move(_12), 5_usize, Move(_5), 18_usize, Move(_18), 10_usize, Move(_10)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_40 = dump_var(11_usize, 15_usize, Move(_15), 22_usize, Move(_22), 25_usize, Move(_25), 2_usize, Move(_2)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_40 = dump_var(11_usize, 17_usize, Move(_17), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [isize; 2],mut _2: [i32; 7],mut _3: [i32; 7],mut _4: *mut [i32; 7],mut _5: [i32; 7],mut _6: [i32; 7],mut _7: u16,mut _8: i8,mut _9: [i32; 7],mut _10: i8,mut _11: i16,mut _12: (u16, [isize; 2], u16),mut _13: i16,mut _14: *mut [i32; 7]) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _15: i8;
let _16: Adt53;
let _17: (i8,);
let _18: isize;
let _19: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]);
let _20: i8;
let _21: Adt56;
let _22: f64;
let _23: Adt58;
let _24: [u32; 3];
let _25: u64;
let _26: (u16, [isize; 2], u16);
let _27: bool;
let _28: u128;
let _29: Adt47;
let _30: Adt46;
let _31: char;
let _32: isize;
let _33: (u32, [isize; 2]);
let _34: bool;
let _35: f32;
let _36: i8;
let _37: i8;
let _38: u64;
let _39: ();
let _40: ();
{
_12.2 = !_7;
RET = [1349023487_i32,104313221_i32,(-1882789407_i32),1004598760_i32,(-2105295941_i32),(-23265546_i32),(-144427594_i32)];
_8 = _10 | _10;
_9 = [95185057_i32,(-1059816016_i32),2012649040_i32,(-431714960_i32),11452198_i32,614608814_i32,(-306554626_i32)];
_7 = !_12.0;
_12 = (_7, _1, _7);
RET = [1129195115_i32,(-1200294183_i32),(-1555079088_i32),676649858_i32,714052063_i32,(-1780777734_i32),(-1091977997_i32)];
_10 = !_8;
_15 = _10;
_12.0 = _7;
_10 = 3_usize as i8;
_3 = _9;
_12 = (_7, _1, _7);
_12.1 = [27_isize,(-100_isize)];
Goto(bb1)
}
bb1 = {
_9 = [1133763220_i32,(-602771387_i32),(-18758469_i32),(-242877071_i32),344815123_i32,(-2146627836_i32),2103106805_i32];
_19.1.1 = 1403129695694717757_u64;
_19.0.1 = 181_u8 as f32;
_19.1.0 = (_8,);
_19.0.0 = _1;
_12.2 = _12.0 ^ _7;
_12.0 = _12.2;
_17.0 = _19.1.0.0 + _19.1.0.0;
_16.fld0.2.2 = _10 as i64;
_6 = [(-1386013665_i32),(-981487705_i32),992874219_i32,114952295_i32,(-807385615_i32),(-1734362920_i32),546575_i32];
_12 = (_7, _1, _7);
_16.fld0.0 = _19.0.1;
RET = [1576353739_i32,(-562487960_i32),1794142214_i32,178047990_i32,560705356_i32,(-2121847201_i32),(-1847781608_i32)];
_16.fld0.2.0.1 = [1277680880_i32,432891225_i32,(-1016086791_i32),(-2110075661_i32),1198043823_i32,957276513_i32,1516469523_i32];
_19.1.1 = !14332350324928636647_u64;
_12.2 = _12.0;
_8 = 1588545627_i32 as i8;
_15 = 251_u8 as i8;
_2 = [858707306_i32,868962099_i32,25750247_i32,(-1793696491_i32),1104070445_i32,(-78968591_i32),(-729700561_i32)];
_12 = (_7, _1, _7);
_19.2 = _14;
_19.0.3 = core::ptr::addr_of!(_16.fld0.2.2);
_19.0.4 = 1823106525_i32 as f64;
_16.fld0.2.1 = [_17.0,_19.1.0.0,_17.0,_19.1.0.0,_17.0,_17.0,_8];
_3 = _2;
_1 = _19.0.0;
_16.fld0.2.2 = _19.0.4 as i64;
_16.fld0.2.0.1 = [(-1629113778_i32),(-361188472_i32),(-1690388322_i32),(-380972875_i32),172479063_i32,(-1171763755_i32),424551197_i32];
Goto(bb2)
}
bb2 = {
_20 = _17.0;
_12 = (_7, _19.0.0, _7);
_16.fld0.2.2 = -(-1965961414345194102_i64);
_19.0.2 = !_12.2;
_16.fld1 = _16.fld0.2.1;
_18 = (-77_isize);
match _18 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768211379 => bb10,
_ => bb9
}
}
bb3 = {
_9 = [1133763220_i32,(-602771387_i32),(-18758469_i32),(-242877071_i32),344815123_i32,(-2146627836_i32),2103106805_i32];
_19.1.1 = 1403129695694717757_u64;
_19.0.1 = 181_u8 as f32;
_19.1.0 = (_8,);
_19.0.0 = _1;
_12.2 = _12.0 ^ _7;
_12.0 = _12.2;
_17.0 = _19.1.0.0 + _19.1.0.0;
_16.fld0.2.2 = _10 as i64;
_6 = [(-1386013665_i32),(-981487705_i32),992874219_i32,114952295_i32,(-807385615_i32),(-1734362920_i32),546575_i32];
_12 = (_7, _1, _7);
_16.fld0.0 = _19.0.1;
RET = [1576353739_i32,(-562487960_i32),1794142214_i32,178047990_i32,560705356_i32,(-2121847201_i32),(-1847781608_i32)];
_16.fld0.2.0.1 = [1277680880_i32,432891225_i32,(-1016086791_i32),(-2110075661_i32),1198043823_i32,957276513_i32,1516469523_i32];
_19.1.1 = !14332350324928636647_u64;
_12.2 = _12.0;
_8 = 1588545627_i32 as i8;
_15 = 251_u8 as i8;
_2 = [858707306_i32,868962099_i32,25750247_i32,(-1793696491_i32),1104070445_i32,(-78968591_i32),(-729700561_i32)];
_12 = (_7, _1, _7);
_19.2 = _14;
_19.0.3 = core::ptr::addr_of!(_16.fld0.2.2);
_19.0.4 = 1823106525_i32 as f64;
_16.fld0.2.1 = [_17.0,_19.1.0.0,_17.0,_19.1.0.0,_17.0,_17.0,_8];
_3 = _2;
_1 = _19.0.0;
_16.fld0.2.2 = _19.0.4 as i64;
_16.fld0.2.0.1 = [(-1629113778_i32),(-361188472_i32),(-1690388322_i32),(-380972875_i32),172479063_i32,(-1171763755_i32),424551197_i32];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6 = [1022544960_i32,156728163_i32,(-1070241222_i32),1364446503_i32,766385908_i32,(-1609401275_i32),(-795441651_i32)];
_16.fld0.2.0 = ((-80023454860436766447935287722976556498_i128), _9, _11, _19.1.1);
_12.0 = 0_usize as u16;
_14 = core::ptr::addr_of_mut!(_6);
_11 = _13 >> _7;
_16.fld0.0 = -_19.0.1;
_12.1 = [_18,_18];
_19.0.2 = _12.0 * _7;
_20 = _17.0 << _12.2;
_17 = (_20,);
_12.1 = _1;
_13 = _11 ^ _11;
_26.0 = _19.0.2 >> _16.fld0.2.0.2;
_15 = _20 >> _7;
_2 = [(-1928400330_i32),(-1535953791_i32),(-1426255409_i32),137612023_i32,1781413077_i32,194572764_i32,1274786783_i32];
RET = [(-1015445714_i32),(-70850057_i32),(-1773057785_i32),(-1094855266_i32),1765915705_i32,(-1920401668_i32),(-1851843824_i32)];
_20 = _15;
_16.fld0.2.0.2 = !_13;
_27 = true ^ true;
match _16.fld0.2.0.0 {
260258912060501697015439319708791654958 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_26.1 = [_18,_18];
Call(_22 = core::intrinsics::transmute(_18), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_19.1.1 = _16.fld0.2.0.3 & _16.fld0.2.0.3;
_8 = -_20;
_26 = _12;
_15 = _19.0.2 as i8;
_31 = '\u{94ab5}';
_3 = [(-1910075735_i32),(-915018621_i32),1384460195_i32,(-1716287839_i32),1995716149_i32,(-1400946833_i32),(-1986722136_i32)];
_8 = _15 + _20;
_27 = !true;
_26 = (_12.2, _12.1, _7);
_19.0.1 = _19.1.1 as f32;
_17 = (_20,);
_25 = _16.fld0.2.0.3 ^ _19.1.1;
_28 = 184444118552912975701967371805651101950_u128;
_19.1 = (_17, _25);
_23 = Adt58::Variant1 { fld0: 3_usize,fld1: _26 };
_19.0.3 = core::ptr::addr_of!(_16.fld0.2.2);
_1 = [_18,_18];
_13 = _16.fld0.2.0.2 - _16.fld0.2.0.2;
_16.fld1 = _16.fld0.2.1;
Call(_15 = fn13(_19.1.0, _19.1, _16.fld1, _26.1, _16.fld0.2, RET, _2, Field::<(u16, [isize; 2], u16)>(Variant(_23, 1), 1).1, _20, _11, _19, _20, Field::<(u16, [isize; 2], u16)>(Variant(_23, 1), 1)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_30 = Adt46::Variant0 { fld0: _7,fld1: _16.fld0.2,fld2: _16.fld0.2.2 };
_26.1 = [_18,_18];
_16.fld0.1 = _18 >> _19.1.0.0;
_19.0.2 = !_12.2;
_26.1 = [_16.fld0.1,_18];
_7 = _27 as u16;
_32 = Field::<((i128, [i32; 7], i16, u64), [i8; 7], i64)>(Variant(_30, 0), 1).0.3 as isize;
_16.fld0.3 = _27;
_18 = -_32;
_2 = [(-2043611936_i32),1236927166_i32,1015207815_i32,1647518022_i32,(-1243416277_i32),1050767630_i32,(-2065934420_i32)];
_16.fld0.2 = (Field::<((i128, [i32; 7], i16, u64), [i8; 7], i64)>(Variant(_30, 0), 1).0, _16.fld1, Field::<((i128, [i32; 7], i16, u64), [i8; 7], i64)>(Variant(_30, 0), 1).2);
place!(Field::<usize>(Variant(_23, 1), 0)) = 6058179548061291226_usize | 2904663183072716642_usize;
place!(Field::<(u16, [isize; 2], u16)>(Variant(_23, 1), 1)).1 = [_16.fld0.1,_16.fld0.1];
_26.0 = 105995886_i32 as u16;
_3 = (*_14);
_14 = core::ptr::addr_of_mut!((*_14));
_16.fld0.1 = -_32;
_16.fld0 = (_19.0.1, _18, Field::<((i128, [i32; 7], i16, u64), [i8; 7], i64)>(Variant(_30, 0), 1), _27);
_23 = Adt58::Variant1 { fld0: 14868500285797281247_usize,fld1: _26 };
_16.fld0.2.2 = Field::<((i128, [i32; 7], i16, u64), [i8; 7], i64)>(Variant(_30, 0), 1).2;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(12_usize, 6_usize, Move(_6), 27_usize, Move(_27), 3_usize, Move(_3), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(12_usize, 20_usize, Move(_20), 25_usize, Move(_25), 17_usize, Move(_17), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(12_usize, 10_usize, Move(_10), 1_usize, Move(_1), 12_usize, Move(_12), 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: (i8,),mut _2: ((i8,), u64),mut _3: [i8; 7],mut _4: [isize; 2],mut _5: ((i128, [i32; 7], i16, u64), [i8; 7], i64),mut _6: [i32; 7],mut _7: [i32; 7],mut _8: [isize; 2],mut _9: i8,mut _10: i16,mut _11: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]),mut _12: i8,mut _13: (u16, [isize; 2], u16)) -> i8 {
mir! {
type RET = i8;
let _14: f32;
let _15: [isize; 2];
let _16: [i8; 7];
let _17: ();
let _18: ();
{
_2 = _11.1;
RET = _9 << _2.0.0;
_11.0.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_8 = _11.0.0;
_1.0 = true as i8;
_8 = [44_isize,9223372036854775807_isize];
_13 = (_11.0.2, _4, _11.0.2);
_2.0.0 = _11.1.0.0 ^ _12;
_11.0.3 = core::ptr::addr_of!(_5.2);
RET = _2.0.0 ^ _2.0.0;
_13.1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_5.1 = _3;
_11.0.0 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_5.0.0 = (-99289720746337418908624512050566447681_i128);
_11.0.1 = _5.2 as f32;
_11.1.1 = !_5.0.3;
_5.0 = (58444781536290539394467332898401213469_i128, _6, _10, _2.1);
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(13_usize, 13_usize, Move(_13), 2_usize, Move(_2), 4_usize, Move(_4), 12_usize, Move(_12)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(13_usize, 1_usize, Move(_1), 5_usize, Move(_5), 18_usize, _18, 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: *mut [i32; 7],mut _2: [i32; 7],mut _3: [isize; 2],mut _4: [i32; 7],mut _5: *mut [i32; 7],mut _6: [i32; 7]) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _7: Adt57;
let _8: isize;
let _9: [i32; 7];
let _10: Adt58;
let _11: (i16,);
let _12: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool);
let _13: (u16, [isize; 2], u16);
let _14: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _15: [u32; 3];
let _16: u128;
let _17: isize;
let _18: isize;
let _19: u8;
let _20: Adt46;
let _21: (u64,);
let _22: i8;
let _23: [u32; 3];
let _24: bool;
let _25: isize;
let _26: i32;
let _27: f32;
let _28: char;
let _29: ();
let _30: ();
{
_5 = _1;
_6 = [1906996171_i32,(-1274637408_i32),1137952842_i32,(-2114334252_i32),1279684254_i32,(-2032818820_i32),(-901595410_i32)];
_3 = [(-42_isize),(-9223372036854775808_isize)];
_2 = [(-435923118_i32),435204203_i32,(-850821118_i32),787299552_i32,(-244605434_i32),(-636381787_i32),375329827_i32];
_3 = [(-52_isize),9223372036854775807_isize];
RET = [1027256106_i32,449565206_i32,483445784_i32,(-1010323277_i32),(-1365553150_i32),(-1881391920_i32),1512167616_i32];
_6 = [(-2053981362_i32),(-931199777_i32),(-1165860499_i32),(-129007049_i32),1601881582_i32,(-1106803980_i32),(-683840224_i32)];
_6 = [(-2000936040_i32),2033676640_i32,1328735453_i32,(-535897626_i32),(-1960640187_i32),(-63825413_i32),(-1824115995_i32)];
_1 = core::ptr::addr_of_mut!(_4);
_4 = [1285837613_i32,(-1047425882_i32),(-58835968_i32),(-578122501_i32),372023260_i32,109947338_i32,(-168476980_i32)];
_3 = [(-9223372036854775808_isize),125_isize];
RET = [(-1580301125_i32),624290324_i32,374298666_i32,(-1504637225_i32),(-160463318_i32),(-436245218_i32),1327301215_i32];
RET = _6;
_4 = [(-1028303216_i32),(-209551465_i32),644119006_i32,580033847_i32,1532244435_i32,(-949954165_i32),1596241276_i32];
_2 = _6;
RET = [329347765_i32,(-1190737417_i32),65406550_i32,759230279_i32,(-2065294864_i32),1521499836_i32,(-638995052_i32)];
Goto(bb1)
}
bb1 = {
_1 = _5;
_5 = core::ptr::addr_of_mut!(RET);
_3 = [9223372036854775807_isize,(-115_isize)];
_6 = [592270847_i32,(-1311600822_i32),(-1985900051_i32),(-1199291087_i32),(-734912851_i32),229138643_i32,787547911_i32];
RET = [(-228917125_i32),679088728_i32,342256168_i32,1353362682_i32,(-290079610_i32),(-2113246275_i32),(-920611784_i32)];
RET = [(-986587461_i32),1815777571_i32,(-1152235_i32),1140641912_i32,1879529708_i32,(-568495971_i32),827939692_i32];
_5 = core::ptr::addr_of_mut!(_4);
_2 = (*_5);
RET = [420870378_i32,1512353757_i32,2026183102_i32,(-98786987_i32),(-1524638940_i32),1698813096_i32,(-96333054_i32)];
_2 = [(-1094850708_i32),(-998322440_i32),1383618764_i32,336094610_i32,(-1665240254_i32),(-101067618_i32),381803072_i32];
_7.fld6 = (42179_u16, _3, 64239_u16);
_7.fld5.0 = 3285428955_u32 + 1780359049_u32;
_7.fld2 = (-9760918_i32) as f32;
_7.fld1 = [198532486702112145183948398810727946064_u128,278779565031336081988804717753132827386_u128,176043774500224765589909274865457033133_u128,75087643403649274707776833078229243407_u128,45044296150496934844380679239217439462_u128,262238738373948936269872300821517070200_u128];
_7.fld5 = (3809013864_u32, _3);
RET = [(-672182897_i32),(-767505176_i32),(-425665860_i32),(-131701468_i32),1601054159_i32,(-1380661159_i32),685327941_i32];
_7.fld6.1 = [9223372036854775807_isize,8_isize];
_7.fld5.0 = 16530820520370535198_u64 as u32;
RET = [230066404_i32,430454271_i32,281484994_i32,2082985817_i32,1339651605_i32,1132734091_i32,(-802351787_i32)];
_5 = _1;
_2 = _6;
_7.fld5.0 = 1798033844_u32;
_6 = [(-1377591471_i32),(-678189608_i32),894245063_i32,7392420_i32,1168013642_i32,809181964_i32,1422476831_i32];
_2 = RET;
_7.fld6.2 = !_7.fld6.0;
_8 = 9223372036854775807_isize;
_1 = core::ptr::addr_of_mut!(RET);
_7.fld5.1 = [_8,_8];
match _7.fld6.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
42179 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_7.fld6 = (26461_u16, _3, 34214_u16);
_3 = [_8,_8];
RET = [1606526808_i32,(-1440411294_i32),867092159_i32,614914140_i32,(-61360416_i32),(-1790712089_i32),(-2005527389_i32)];
_7.fld5.1 = _7.fld6.1;
_7.fld1 = [49389944947214121729860535805849209957_u128,169999050856945620250268131630552684003_u128,95727773664279218675796135335802374747_u128,328815086665707965891365112060274992325_u128,182334708791589739101287231691835745046_u128,211730478605205519166324211768330121436_u128];
_11.0 = -(-7960_i16);
_12.1 = _11.0 as isize;
_7.fld4 = core::ptr::addr_of_mut!(_12.2.2);
_9 = _6;
_13.1 = [_12.1,_8];
_7.fld3 = _7.fld6.2;
_5 = core::ptr::addr_of_mut!(_4);
_7.fld1 = [81664447588110663975675336037692704700_u128,44056818806479180081063204978946199097_u128,250141811085431860935100423832609896097_u128,288541255081373447353052107380913741542_u128,110433332727381294260825993291513200795_u128,318363323151412252890398797026740732073_u128];
_9 = [1108993550_i32,2031031110_i32,(-409385622_i32),(-1676618462_i32),(-740819987_i32),692465882_i32,240569157_i32];
_7.fld6.1 = [_8,_8];
_13.2 = _7.fld3 & _7.fld6.0;
_7.fld5.0 = 716500962_u32;
_14.0.2 = _12.1 as i16;
_14.0.1 = [1154666463_i32,(-1071745255_i32),(-754222437_i32),1537823181_i32,(-1386863736_i32),(-1779780883_i32),(-399937885_i32)];
_13.2 = !_7.fld6.0;
_12.0 = _7.fld2 + _7.fld2;
_1 = _5;
match _7.fld3 {
0 => bb8,
34214 => bb10,
_ => bb9
}
}
bb8 = {
Return()
}
bb9 = {
_1 = _5;
_5 = core::ptr::addr_of_mut!(RET);
_3 = [9223372036854775807_isize,(-115_isize)];
_6 = [592270847_i32,(-1311600822_i32),(-1985900051_i32),(-1199291087_i32),(-734912851_i32),229138643_i32,787547911_i32];
RET = [(-228917125_i32),679088728_i32,342256168_i32,1353362682_i32,(-290079610_i32),(-2113246275_i32),(-920611784_i32)];
RET = [(-986587461_i32),1815777571_i32,(-1152235_i32),1140641912_i32,1879529708_i32,(-568495971_i32),827939692_i32];
_5 = core::ptr::addr_of_mut!(_4);
_2 = (*_5);
RET = [420870378_i32,1512353757_i32,2026183102_i32,(-98786987_i32),(-1524638940_i32),1698813096_i32,(-96333054_i32)];
_2 = [(-1094850708_i32),(-998322440_i32),1383618764_i32,336094610_i32,(-1665240254_i32),(-101067618_i32),381803072_i32];
_7.fld6 = (42179_u16, _3, 64239_u16);
_7.fld5.0 = 3285428955_u32 + 1780359049_u32;
_7.fld2 = (-9760918_i32) as f32;
_7.fld1 = [198532486702112145183948398810727946064_u128,278779565031336081988804717753132827386_u128,176043774500224765589909274865457033133_u128,75087643403649274707776833078229243407_u128,45044296150496934844380679239217439462_u128,262238738373948936269872300821517070200_u128];
_7.fld5 = (3809013864_u32, _3);
RET = [(-672182897_i32),(-767505176_i32),(-425665860_i32),(-131701468_i32),1601054159_i32,(-1380661159_i32),685327941_i32];
_7.fld6.1 = [9223372036854775807_isize,8_isize];
_7.fld5.0 = 16530820520370535198_u64 as u32;
RET = [230066404_i32,430454271_i32,281484994_i32,2082985817_i32,1339651605_i32,1132734091_i32,(-802351787_i32)];
_5 = _1;
_2 = _6;
_7.fld5.0 = 1798033844_u32;
_6 = [(-1377591471_i32),(-678189608_i32),894245063_i32,7392420_i32,1168013642_i32,809181964_i32,1422476831_i32];
_2 = RET;
_7.fld6.2 = !_7.fld6.0;
_8 = 9223372036854775807_isize;
_1 = core::ptr::addr_of_mut!(RET);
_7.fld5.1 = [_8,_8];
match _7.fld6.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
42179 => bb7,
_ => bb6
}
}
bb10 = {
_7.fld3 = 200191885547711705302143128567615644280_u128 as u16;
_3 = [_8,_12.1];
RET = [(-202080795_i32),802067704_i32,(-900196329_i32),1187212718_i32,(-632172128_i32),(-1277190823_i32),(-1372474467_i32)];
_7.fld6.0 = !_13.2;
_12.1 = !_8;
_14.0.0 = true as i128;
_12.2.0.3 = 17303306162215866872_u64 ^ 7493814445495283626_u64;
_14.0.3 = true as u64;
_13.1 = [_8,_12.1];
_7.fld5.1 = [_8,_12.1];
_13.2 = !_7.fld6.0;
_12.1 = 15_i8 as isize;
Goto(bb11)
}
bb11 = {
_4 = _2;
_7.fld6.1 = [_12.1,_8];
_7.fld5.1 = _7.fld6.1;
match _7.fld6.2 {
34214 => bb12,
_ => bb9
}
}
bb12 = {
_12.2.0.2 = _11.0;
_12.2.0 = (_14.0.0, (*_5), _14.0.2, _14.0.3);
_13 = _7.fld6;
_16 = 22950619425432503439678443977508061288_u128;
_3 = [_12.1,_8];
_10 = Adt58::Variant1 { fld0: 3_usize,fld1: _13 };
_15 = [_7.fld5.0,_7.fld5.0,_7.fld5.0];
_7.fld6.1 = _3;
_7.fld6.0 = _13.2 & _7.fld6.2;
_2 = [1495176582_i32,2054605951_i32,(-1470893184_i32),(-1646267325_i32),(-1389712831_i32),(-1702991603_i32),(-1096871787_i32)];
_19 = !250_u8;
_6 = [(-1142197719_i32),(-993801262_i32),(-578715958_i32),852254440_i32,1168925937_i32,(-775542889_i32),(-595212020_i32)];
_12.2.2 = 6830848223888898300_i64;
_12.2.0 = _14.0;
_4 = [(-1578262053_i32),(-404389489_i32),423026052_i32,(-1479365166_i32),1283593262_i32,(-879392202_i32),788145474_i32];
_17 = -_12.1;
_14.0.1 = [(-943751796_i32),152936013_i32,(-1840127802_i32),(-4352010_i32),1851907058_i32,463162351_i32,(-1190101923_i32)];
_11.0 = -_12.2.0.2;
_14.2 = -_12.2.2;
place!(Field::<(u16, [isize; 2], u16)>(Variant(_10, 1), 1)).0 = (-43_i8) as u16;
_5 = core::ptr::addr_of_mut!(_14.0.1);
_13.0 = !_7.fld6.0;
_12.2.1 = [(-53_i8),9_i8,(-90_i8),(-24_i8),(-65_i8),(-112_i8),(-46_i8)];
place!(Field::<usize>(Variant(_10, 1), 0)) = 0_usize ^ 5_usize;
Call(_23 = fn15(_12.2.0.1, _7.fld6, _7.fld4, _7.fld6, _12.2.0, _7.fld5.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_18 = !_17;
_5 = _1;
_12.1 = _8;
_12.2.0.2 = _14.0.0 as i16;
_12.2.0.0 = _14.0.0;
_12.0 = _7.fld2 + _7.fld2;
_7.fld5 = (1101257693_u32, _3);
_14.1 = [4_i8,(-125_i8),113_i8,(-24_i8),(-111_i8),(-111_i8),(-127_i8)];
_15 = [_7.fld5.0,_7.fld5.0,_7.fld5.0];
_14.0.3 = !_12.2.0.3;
_8 = -_18;
place!(Field::<(u16, [isize; 2], u16)>(Variant(_10, 1), 1)).1 = _3;
match _13.2 {
0 => bb12,
1 => bb2,
2 => bb7,
3 => bb5,
4 => bb14,
5 => bb15,
6 => bb16,
34214 => bb18,
_ => bb17
}
}
bb14 = {
Return()
}
bb15 = {
_4 = _2;
_7.fld6.1 = [_12.1,_8];
_7.fld5.1 = _7.fld6.1;
match _7.fld6.2 {
34214 => bb12,
_ => bb9
}
}
bb16 = {
Return()
}
bb17 = {
_1 = _5;
_5 = core::ptr::addr_of_mut!(RET);
_3 = [9223372036854775807_isize,(-115_isize)];
_6 = [592270847_i32,(-1311600822_i32),(-1985900051_i32),(-1199291087_i32),(-734912851_i32),229138643_i32,787547911_i32];
RET = [(-228917125_i32),679088728_i32,342256168_i32,1353362682_i32,(-290079610_i32),(-2113246275_i32),(-920611784_i32)];
RET = [(-986587461_i32),1815777571_i32,(-1152235_i32),1140641912_i32,1879529708_i32,(-568495971_i32),827939692_i32];
_5 = core::ptr::addr_of_mut!(_4);
_2 = (*_5);
RET = [420870378_i32,1512353757_i32,2026183102_i32,(-98786987_i32),(-1524638940_i32),1698813096_i32,(-96333054_i32)];
_2 = [(-1094850708_i32),(-998322440_i32),1383618764_i32,336094610_i32,(-1665240254_i32),(-101067618_i32),381803072_i32];
_7.fld6 = (42179_u16, _3, 64239_u16);
_7.fld5.0 = 3285428955_u32 + 1780359049_u32;
_7.fld2 = (-9760918_i32) as f32;
_7.fld1 = [198532486702112145183948398810727946064_u128,278779565031336081988804717753132827386_u128,176043774500224765589909274865457033133_u128,75087643403649274707776833078229243407_u128,45044296150496934844380679239217439462_u128,262238738373948936269872300821517070200_u128];
_7.fld5 = (3809013864_u32, _3);
RET = [(-672182897_i32),(-767505176_i32),(-425665860_i32),(-131701468_i32),1601054159_i32,(-1380661159_i32),685327941_i32];
_7.fld6.1 = [9223372036854775807_isize,8_isize];
_7.fld5.0 = 16530820520370535198_u64 as u32;
RET = [230066404_i32,430454271_i32,281484994_i32,2082985817_i32,1339651605_i32,1132734091_i32,(-802351787_i32)];
_5 = _1;
_2 = _6;
_7.fld5.0 = 1798033844_u32;
_6 = [(-1377591471_i32),(-678189608_i32),894245063_i32,7392420_i32,1168013642_i32,809181964_i32,1422476831_i32];
_2 = RET;
_7.fld6.2 = !_7.fld6.0;
_8 = 9223372036854775807_isize;
_1 = core::ptr::addr_of_mut!(RET);
_7.fld5.1 = [_8,_8];
match _7.fld6.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
42179 => bb7,
_ => bb6
}
}
bb18 = {
_15 = _23;
_12.3 = true;
RET = [(-1599099667_i32),(-1075028744_i32),(-965084406_i32),1402059697_i32,1583052342_i32,798969310_i32,2115492337_i32];
_14.0.3 = _12.2.0.0 as u64;
_26 = -(-86222475_i32);
_7.fld5 = (930623331_u32, _7.fld6.1);
Goto(bb19)
}
bb19 = {
Call(_29 = dump_var(14_usize, 17_usize, Move(_17), 2_usize, Move(_2), 6_usize, Move(_6), 19_usize, Move(_19)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_29 = dump_var(14_usize, 9_usize, Move(_9), 18_usize, Move(_18), 15_usize, Move(_15), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [i32; 7],mut _2: (u16, [isize; 2], u16),mut _3: *mut i64,mut _4: (u16, [isize; 2], u16),mut _5: (i128, [i32; 7], i16, u64),mut _6: [isize; 2]) -> [u32; 3] {
mir! {
type RET = [u32; 3];
let _7: isize;
let _8: isize;
let _9: bool;
let _10: Adt49;
let _11: u16;
let _12: i16;
let _13: f32;
let _14: i8;
let _15: Adt49;
let _16: Adt56;
let _17: Adt55;
let _18: u128;
let _19: (u64,);
let _20: [u128; 6];
let _21: u64;
let _22: Adt52;
let _23: i32;
let _24: f32;
let _25: Adt53;
let _26: Adt59;
let _27: (u16, [isize; 2], u16);
let _28: f32;
let _29: isize;
let _30: Adt51;
let _31: ([isize; 2], f32, u16, *const i64, f64);
let _32: Adt45;
let _33: ((i128, [i32; 7], i16, u64), [i8; 7], i64);
let _34: [i32; 7];
let _35: ();
let _36: ();
{
_4.2 = _2.0 % _2.2;
_5 = (132115864864181438910076238406902615196_i128, _1, 21250_i16, 3164386407882392996_u64);
_6 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_4.0 = !_2.0;
RET = [3888838891_u32,1880026043_u32,3902719044_u32];
_1 = [1845315964_i32,1493928116_i32,(-985587253_i32),337226279_i32,409599039_i32,(-1497010140_i32),956305522_i32];
_2.1 = _6;
Goto(bb1)
}
bb1 = {
_5.0 = 106365569374588615560178722936710801818_i128 * (-33072752448861031654811202321040159680_i128);
_2.0 = _4.2;
_4.2 = '\u{4d1d6}' as u16;
_7 = (-111_isize) | (-62_isize);
RET = [1095273016_u32,2520047887_u32,1248004184_u32];
_6 = [_7,_7];
_5.2 = (-30317_i16);
_5.0 = -(-101934314856359116345485284003747444562_i128);
_5.1 = [(-876567868_i32),2054124019_i32,1967745520_i32,(-35322862_i32),1359555281_i32,(-1356335965_i32),(-1784924857_i32)];
_5.3 = _2.0 as u64;
RET = [40437833_u32,3091221981_u32,4137584265_u32];
_5.2 = 28683_i16;
_2.1 = _4.1;
_5 = ((-14478422756844221823739404341896828386_i128), _1, (-30934_i16), 3701625784559214264_u64);
_6 = [_7,_7];
_10.fld1 = 9120687063805778363_usize as i32;
_8 = !_7;
_9 = true;
Goto(bb2)
}
bb2 = {
_10.fld2.1 = _1;
Goto(bb3)
}
bb3 = {
RET = [2916638677_u32,4281244301_u32,4276505686_u32];
_11 = _4.0 / _2.2;
_5 = ((-138384534587134290432956102120362305174_i128), _1, 10735_i16, 11417800456674708072_u64);
_10.fld2.0 = _5.0 + _5.0;
_10.fld2.1 = _1;
_10.fld2.3 = !_5.3;
_5.0 = _10.fld2.0 + _10.fld2.0;
_2 = (_11, _4.1, _4.0);
_5 = (_10.fld2.0, _10.fld2.1, 24230_i16, _10.fld2.3);
_2.1 = _6;
_7 = _8;
_4.2 = _11 >> _11;
_12 = (-3027014278244512678_i64) as i16;
_9 = true;
_10.fld2.2 = _5.2 | _5.2;
_13 = (-33_i8) as f32;
_5 = (_10.fld2.0, _10.fld2.1, _10.fld2.2, _10.fld2.3);
_4.2 = !_4.0;
_1 = _10.fld2.1;
_10.fld1 = 1028165449_i32 | (-569458238_i32);
Goto(bb4)
}
bb4 = {
_10.fld3 = _5.0 & _5.0;
_10.fld3 = !_5.0;
_10.fld3 = -_10.fld2.0;
_7 = !_8;
_10.fld2.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
_2.2 = !_4.2;
_8 = _7 & _7;
_7 = -_8;
_10.fld2 = _5;
_4.0 = _11;
_5.2 = _10.fld2.2;
_12 = _7 as i16;
RET = [2088123441_u32,3052831109_u32,1868637887_u32];
_10.fld2.0 = _10.fld3 ^ _5.0;
_4.2 = !_2.0;
_2 = (_4.2, _6, _4.0);
_2.2 = _5.3 as u16;
RET = [1366705549_u32,1117457685_u32,3692295447_u32];
_5.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
_4.2 = _11 + _2.2;
_8 = -_7;
_6 = _2.1;
_11 = _10.fld1 as u16;
_8 = _7 - _7;
_7 = _8 << _5.2;
_10.fld2.1 = _5.1;
_11 = _7 as u16;
_5 = _10.fld2;
_15.fld2.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
Call(_15.fld2.2 = core::intrinsics::bswap(_5.2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_15.fld2.0 = _10.fld2.0 - _10.fld3;
_10.fld2.0 = !_10.fld3;
_15.fld2.0 = !_5.0;
_15.fld2 = (_5.0, _10.fld2.1, _10.fld2.2, _10.fld2.3);
_4 = (_11, _2.1, _2.2);
_15.fld2 = _5;
_2.0 = _11;
_5 = (_10.fld2.0, _1, _15.fld2.2, _10.fld2.3);
_15.fld3 = _15.fld2.0;
_15.fld2.3 = _10.fld2.3;
_10.fld2.2 = -_15.fld2.2;
_2.2 = (-9168238545682862700_i64) as u16;
Goto(bb6)
}
bb6 = {
_4.0 = !_11;
_4.1 = _2.1;
_4 = _2;
_10.fld2.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
_6 = _2.1;
_10.fld2 = (_15.fld2.0, _1, _5.2, _5.3);
_5.2 = -_15.fld2.2;
_4.1 = [_7,_8];
_15.fld3 = '\u{fb7de}' as i128;
_5.3 = '\u{cff48}' as u64;
_2.0 = (-22_i8) as u16;
_11 = _4.0 * _4.0;
_10.fld2.3 = !_15.fld2.3;
_10.fld3 = _10.fld2.0;
_13 = _10.fld2.3 as f32;
_5 = _10.fld2;
_10.fld2.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
Goto(bb7)
}
bb7 = {
_15.fld3 = _10.fld2.0 | _10.fld3;
_25.fld0.2.0.1 = _5.1;
_25.fld0.3 = !_9;
_17 = Adt55::Variant1 { fld0: _5.1 };
_5.2 = _15.fld2.2;
SetDiscriminant(_17, 3);
_15.fld1 = -_10.fld1;
_18 = 64609282785571934585735169688676777153_u128;
Goto(bb8)
}
bb8 = {
place!(Field::<f64>(Variant(_17, 3), 4)) = _18 as f64;
_25.fld0.3 = _9;
_27.2 = _25.fld0.3 as u16;
_10.fld2.2 = _15.fld2.2;
_25.fld0.2.0 = (_10.fld2.0, _1, _15.fld2.2, _10.fld2.3);
place!(Field::<(u64,)>(Variant(_17, 3), 1)) = (_5.3,);
match _18 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
64609282785571934585735169688676777153 => bb9,
_ => bb6
}
}
bb9 = {
_27.0 = _11;
_25.fld0.0 = -_13;
_25.fld0.0 = -_13;
_25.fld0.2.0.0 = !_15.fld3;
place!(Field::<[i32; 7]>(Variant(_17, 3), 2)) = _1;
place!(Field::<u128>(Variant(_17, 3), 7)) = _18;
_10.fld2.2 = _15.fld2.2;
_21 = _9 as u64;
_25.fld1 = [9_i8,104_i8,104_i8,(-38_i8),(-47_i8),(-61_i8),36_i8];
_25.fld0.2.0.3 = _15.fld2.3;
_4.1 = [_7,_7];
_25.fld0.2 = (_15.fld2, _25.fld1, (-8382817351653857536_i64));
_4 = (_11, _6, _27.0);
_13 = 4_usize as f32;
_10.fld1 = _15.fld1 + _15.fld1;
_10.fld2.2 = _9 as i16;
_24 = _15.fld2.3 as f32;
_15.fld2.0 = _25.fld0.2.2 as i128;
_24 = 0_usize as f32;
_27.0 = _25.fld0.0 as u16;
_2.2 = _4.2;
_23 = _15.fld3 as i32;
_19 = (_15.fld2.3,);
_13 = _25.fld0.0 + _25.fld0.0;
match _25.fld0.2.2 {
0 => bb3,
1 => bb2,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
340282366920938463454991790080114353920 => bb16,
_ => bb15
}
}
bb10 = {
_5.0 = 106365569374588615560178722936710801818_i128 * (-33072752448861031654811202321040159680_i128);
_2.0 = _4.2;
_4.2 = '\u{4d1d6}' as u16;
_7 = (-111_isize) | (-62_isize);
RET = [1095273016_u32,2520047887_u32,1248004184_u32];
_6 = [_7,_7];
_5.2 = (-30317_i16);
_5.0 = -(-101934314856359116345485284003747444562_i128);
_5.1 = [(-876567868_i32),2054124019_i32,1967745520_i32,(-35322862_i32),1359555281_i32,(-1356335965_i32),(-1784924857_i32)];
_5.3 = _2.0 as u64;
RET = [40437833_u32,3091221981_u32,4137584265_u32];
_5.2 = 28683_i16;
_2.1 = _4.1;
_5 = ((-14478422756844221823739404341896828386_i128), _1, (-30934_i16), 3701625784559214264_u64);
_6 = [_7,_7];
_10.fld1 = 9120687063805778363_usize as i32;
_8 = !_7;
_9 = true;
Goto(bb2)
}
bb11 = {
_15.fld3 = _10.fld2.0 | _10.fld3;
_25.fld0.2.0.1 = _5.1;
_25.fld0.3 = !_9;
_17 = Adt55::Variant1 { fld0: _5.1 };
_5.2 = _15.fld2.2;
SetDiscriminant(_17, 3);
_15.fld1 = -_10.fld1;
_18 = 64609282785571934585735169688676777153_u128;
Goto(bb8)
}
bb12 = {
_4.0 = !_11;
_4.1 = _2.1;
_4 = _2;
_10.fld2.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
_6 = _2.1;
_10.fld2 = (_15.fld2.0, _1, _5.2, _5.3);
_5.2 = -_15.fld2.2;
_4.1 = [_7,_8];
_15.fld3 = '\u{fb7de}' as i128;
_5.3 = '\u{cff48}' as u64;
_2.0 = (-22_i8) as u16;
_11 = _4.0 * _4.0;
_10.fld2.3 = !_15.fld2.3;
_10.fld3 = _10.fld2.0;
_13 = _10.fld2.3 as f32;
_5 = _10.fld2;
_10.fld2.1 = [_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1,_10.fld1];
Goto(bb7)
}
bb13 = {
_15.fld2.0 = _10.fld2.0 - _10.fld3;
_10.fld2.0 = !_10.fld3;
_15.fld2.0 = !_5.0;
_15.fld2 = (_5.0, _10.fld2.1, _10.fld2.2, _10.fld2.3);
_4 = (_11, _2.1, _2.2);
_15.fld2 = _5;
_2.0 = _11;
_5 = (_10.fld2.0, _1, _15.fld2.2, _10.fld2.3);
_15.fld3 = _15.fld2.0;
_15.fld2.3 = _10.fld2.3;
_10.fld2.2 = -_15.fld2.2;
_2.2 = (-9168238545682862700_i64) as u16;
Goto(bb6)
}
bb14 = {
_10.fld2.1 = _1;
Goto(bb3)
}
bb15 = {
RET = [2916638677_u32,4281244301_u32,4276505686_u32];
_11 = _4.0 / _2.2;
_5 = ((-138384534587134290432956102120362305174_i128), _1, 10735_i16, 11417800456674708072_u64);
_10.fld2.0 = _5.0 + _5.0;
_10.fld2.1 = _1;
_10.fld2.3 = !_5.3;
_5.0 = _10.fld2.0 + _10.fld2.0;
_2 = (_11, _4.1, _4.0);
_5 = (_10.fld2.0, _10.fld2.1, 24230_i16, _10.fld2.3);
_2.1 = _6;
_7 = _8;
_4.2 = _11 >> _11;
_12 = (-3027014278244512678_i64) as i16;
_9 = true;
_10.fld2.2 = _5.2 | _5.2;
_13 = (-33_i8) as f32;
_5 = (_10.fld2.0, _10.fld2.1, _10.fld2.2, _10.fld2.3);
_4.2 = !_4.0;
_1 = _10.fld2.1;
_10.fld1 = 1028165449_i32 | (-569458238_i32);
Goto(bb4)
}
bb16 = {
_25.fld0.1 = _7;
_14 = !13_i8;
place!(Field::<i8>(Variant(_17, 3), 3)) = _14;
_27.2 = _4.2 & _11;
_5 = (_15.fld2.0, _25.fld0.2.0.1, _15.fld2.2, _10.fld2.3);
_29 = _25.fld0.1 | _25.fld0.1;
_30.fld0 = _2.2;
_10.fld2.0 = _9 as i128;
_23 = _10.fld1 & _10.fld1;
_25.fld0.3 = !_9;
_31.3 = core::ptr::addr_of!(_25.fld0.2.2);
_30.fld1.0.0 = _15.fld2.2 as i8;
_2 = (_30.fld0, _6, _4.0);
_18 = Field::<u128>(Variant(_17, 3), 7) - Field::<u128>(Variant(_17, 3), 7);
Goto(bb17)
}
bb17 = {
Call(_35 = dump_var(15_usize, 29_usize, Move(_29), 19_usize, Move(_19), 23_usize, Move(_23), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(15_usize, 9_usize, Move(_9), 2_usize, Move(_2), 11_usize, Move(_11), 18_usize, Move(_18)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool),mut _2: ((i8,), u64),mut _3: [i32; 7],mut _4: (i128, [i32; 7], i16, u64),mut _5: isize) -> i32 {
mir! {
type RET = i32;
let _6: u128;
let _7: char;
let _8: isize;
let _9: isize;
let _10: Adt43;
let _11: [i32; 7];
let _12: isize;
let _13: char;
let _14: isize;
let _15: isize;
let _16: isize;
let _17: isize;
let _18: u128;
let _19: char;
let _20: i8;
let _21: (i128, [i32; 7], i16, u64);
let _22: ((i8,), u64);
let _23: *mut *const *mut [i32; 7];
let _24: *const u8;
let _25: ();
let _26: ();
{
RET = !650107757_i32;
_4 = _1.2.0;
_8 = !_5;
_2.1 = !_1.2.0.3;
_4.0 = 218705536779629970538318258144843380154_u128 as i128;
_1.2.0 = _4;
_4 = (_1.2.0.0, _1.2.0.1, _1.2.0.2, _2.1);
_10.fld0 = (_2.0.0,);
_1.2.0.2 = _4.2;
Goto(bb1)
}
bb1 = {
_1.2.2 = -(-3700336503205933718_i64);
_10.fld1 = core::ptr::addr_of_mut!(_1.1);
_5 = _1.0 as isize;
_10.fld0.0 = _1.3 as i8;
_9 = !_1.1;
_1.2.0.2 = _4.2 | _4.2;
_1.1 = _1.2.2 as isize;
_4.3 = _2.1 * _2.1;
_3 = _4.1;
_11 = [RET,RET,RET,RET,RET,RET,RET];
RET = 1725124346_i32;
_4.0 = _1.2.0.0;
_4.0 = _1.2.0.0 + _1.2.0.0;
_1.1 = _5 + _5;
_1.2.0.2 = 38294_u16 as i16;
_4.3 = _4.2 as u64;
_5 = _9;
_12 = _1.3 as isize;
_4.1 = [RET,RET,RET,RET,RET,RET,RET];
_2.0.0 = _10.fld0.0;
_2.0.0 = -_10.fld0.0;
_7 = '\u{badcb}';
Goto(bb2)
}
bb2 = {
_6 = 117192708510893797685639193350262583439_u128;
_1.2.0 = (_4.0, _11, _4.2, _4.3);
_13 = _7;
_4.0 = -_1.2.0.0;
_1.2.0.2 = _4.2 ^ _4.2;
_1.2.0.0 = -_4.0;
_10.fld0.0 = RET as i8;
_2.0 = _10.fld0;
_10.fld0.0 = _2.0.0 * _2.0.0;
_4 = (_1.2.0.0, _1.2.0.1, _1.2.0.2, _1.2.0.3);
_4.2 = _1.2.0.2 | _1.2.0.2;
_1.2.1 = [_2.0.0,_2.0.0,_10.fld0.0,_10.fld0.0,_10.fld0.0,_10.fld0.0,_10.fld0.0];
_13 = _7;
RET = !(-1297230735_i32);
_1.2.0 = (_4.0, _3, _4.2, _4.3);
_20 = _10.fld0.0 ^ _10.fld0.0;
_8 = _12 * _1.1;
_4.3 = _2.1;
_1.2.0.3 = 3937782321_u32 as u64;
match _6 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
117192708510893797685639193350262583439 => bb9,
_ => bb8
}
}
bb3 = {
_1.2.2 = -(-3700336503205933718_i64);
_10.fld1 = core::ptr::addr_of_mut!(_1.1);
_5 = _1.0 as isize;
_10.fld0.0 = _1.3 as i8;
_9 = !_1.1;
_1.2.0.2 = _4.2 | _4.2;
_1.1 = _1.2.2 as isize;
_4.3 = _2.1 * _2.1;
_3 = _4.1;
_11 = [RET,RET,RET,RET,RET,RET,RET];
RET = 1725124346_i32;
_4.0 = _1.2.0.0;
_4.0 = _1.2.0.0 + _1.2.0.0;
_1.1 = _5 + _5;
_1.2.0.2 = 38294_u16 as i16;
_4.3 = _4.2 as u64;
_5 = _9;
_12 = _1.3 as isize;
_4.1 = [RET,RET,RET,RET,RET,RET,RET];
_2.0.0 = _10.fld0.0;
_2.0.0 = -_10.fld0.0;
_7 = '\u{badcb}';
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_18 = _6;
_19 = _7;
_13 = _19;
RET = _1.2.0.2 as i32;
_12 = _7 as isize;
_2.1 = _20 as u64;
_21 = (_1.2.0.0, _3, _4.2, _2.1);
_22.0.0 = !_20;
_14 = _1.1;
_22.0 = (_20,);
_6 = _18;
_1.3 = !false;
_1.0 = RET as f32;
_22.0 = (_10.fld0.0,);
_1.3 = false | true;
_3 = _1.2.0.1;
_21.0 = _1.2.0.0;
_1.2.0.2 = 8692_u16 as i16;
Goto(bb10)
}
bb10 = {
Call(_25 = dump_var(16_usize, 3_usize, Move(_3), 11_usize, Move(_11), 18_usize, Move(_18), 9_usize, Move(_9)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_25 = dump_var(16_usize, 12_usize, Move(_12), 2_usize, Move(_2), 20_usize, Move(_20), 4_usize, Move(_4)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(4094135790539416564_usize), std::hint::black_box(1933388159_u32), std::hint::black_box(48282_u16), std::hint::black_box((-36_i8)), std::hint::black_box(5260_i16), std::hint::black_box(11562028990559029743_u64));
                
            }
#[derive(Debug)]
pub struct Adt43 {
fld0: (i8,),
fld1: *mut isize,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt44 {
Variant0{
fld0: (i128, [i32; 7], i16, u64),
fld1: [i8; 7],

},
Variant1{
fld0: bool,
fld1: (i8,),
fld2: *const i64,
fld3: *const u8,
fld4: (u16, [isize; 2], u16),

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: bool,
fld1: Adt44,
fld2: [i32; 7],
fld3: i8,
fld4: [u32; 3],

},
Variant1{
fld0: Adt43,
fld1: u16,
fld2: ((i128, [i32; 7], i16, u64), [i8; 7], i64),
fld3: i8,
fld4: ([i32; 7], i128, *mut u8),

},
Variant2{
fld0: bool,
fld1: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]),
fld2: isize,
fld3: (i8,),
fld4: u16,
fld5: *const u8,
fld6: ((i128, [i32; 7], i16, u64), [i8; 7], i64),
fld7: *const *mut [i32; 7],

},
Variant3{
fld0: [u128; 6],
fld1: [i32; 7],
fld2: u64,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: u16,
fld1: ((i128, [i32; 7], i16, u64), [i8; 7], i64),
fld2: i64,

},
Variant1{
fld0: [isize; 2],
fld1: u64,
fld2: isize,
fld3: *mut *const *mut [i32; 7],
fld4: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]),
fld5: (u32, [isize; 2]),
fld6: [u128; 6],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (i8,),
fld1: char,
fld2: *const i64,

},
Variant1{
fld0: (u32, [isize; 2]),
fld1: char,
fld2: i64,

},
Variant2{
fld0: (u16, [isize; 2], u16),
fld1: *mut *const *mut [i32; 7],
fld2: u64,
fld3: [i32; 7],
fld4: ((i128, [i32; 7], i16, u64), [i8; 7], i64),
fld5: i32,
fld6: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]),

},
Variant3{
fld0: ([i32; 7], i128, *mut u8),
fld1: f64,
fld2: [i32; 7],
fld3: i8,
fld4: Adt45,
fld5: *const i64,
fld6: u64,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: *mut [i32; 7],
fld1: u32,
fld2: *mut isize,
fld3: *mut i64,
fld4: u16,
fld5: i32,
fld6: [i32; 7],
fld7: *mut u8,

},
Variant1{
fld0: *mut *const *mut [i32; 7],

},
Variant2{
fld0: u32,
fld1: ([isize; 2], f32, u16, *const i64, f64),
fld2: (u16, [isize; 2], u16),
fld3: (u64,),
fld4: [u32; 3],
fld5: f64,

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: Adt48,
fld1: i32,
fld2: (i128, [i32; 7], i16, u64),
fld3: i128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: Adt44,
}
#[derive(Debug)]
pub struct Adt51 {
fld0: u16,
fld1: ((i8,), u64),
fld2: u128,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: f64,
fld1: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool),
fld2: Adt44,
fld3: Adt49,
fld4: [i8; 7],

},
Variant1{
fld0: u32,
fld1: Adt50,
fld2: *mut [i32; 7],
fld3: f32,
fld4: [i32; 7],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool),
fld1: [i8; 7],
fld2: *mut u8,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt54 {
Variant0{
fld0: usize,
fld1: [i8; 7],
fld2: *const u8,
fld3: i16,

},
Variant1{
fld0: *mut i64,
fld1: *mut u8,
fld2: ((i128, [i32; 7], i16, u64), [i8; 7], i64),

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: (i16,),

},
Variant1{
fld0: [i32; 7],

},
Variant2{
fld0: Adt44,
fld1: usize,

},
Variant3{
fld0: *const *mut [i32; 7],
fld1: (u64,),
fld2: [i32; 7],
fld3: i8,
fld4: f64,
fld5: Adt47,
fld6: [i8; 7],
fld7: u128,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: [u32; 3],
fld1: f32,
fld2: Adt43,

},
Variant1{
fld0: *mut *const *mut [i32; 7],
fld1: Adt47,
fld2: (u16, [isize; 2], u16),
fld3: [isize; 2],
fld4: (i16,),
fld5: Adt43,
fld6: ([isize; 2], f32, u16, *const i64, f64),

},
Variant2{
fld0: Adt51,
fld1: Adt53,
fld2: u64,
fld3: (u32, [isize; 2]),
fld4: [u128; 6],
fld5: Adt46,

}}
#[derive(Debug)]
pub struct Adt57 {
fld0: Adt56,
fld1: [u128; 6],
fld2: f32,
fld3: u16,
fld4: *mut i64,
fld5: (u32, [isize; 2]),
fld6: (u16, [isize; 2], u16),
}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: *mut i64,
fld1: char,
fld2: isize,
fld3: u128,
fld4: *mut *const *mut [i32; 7],
fld5: Adt47,
fld6: ([i32; 7], i128, *mut u8),
fld7: (f32, isize, ((i128, [i32; 7], i16, u64), [i8; 7], i64), bool),

},
Variant1{
fld0: usize,
fld1: (u16, [isize; 2], u16),

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: ((i128, [i32; 7], i16, u64), [i8; 7], i64),
fld1: ([i32; 7], i128, *mut u8),
fld2: f64,
fld3: i8,
fld4: [i8; 7],
fld5: Adt54,

},
Variant1{
fld0: *mut [i32; 7],
fld1: [u128; 6],
fld2: usize,
fld3: (u16, [isize; 2], u16),
fld4: ((i128, [i32; 7], i16, u64), [i8; 7], i64),
fld5: *const u8,

},
Variant2{
fld0: (([isize; 2], f32, u16, *const i64, f64), ((i8,), u64), *mut [i32; 7]),
fld1: char,
fld2: ([i32; 7], i128, *mut u8),
fld3: ([isize; 2], f32, u16, *const i64, f64),
fld4: Adt53,

}}

