#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> Adt48 {
mir! {
type RET = Adt48;
let _15: [u64; 4];
let _16: &'static f64;
let _17: Adt52;
let _18: u32;
let _19: isize;
let _20: bool;
let _21: i16;
let _22: Adt53;
let _23: [bool; 3];
let _24: isize;
let _25: i128;
let _26: u64;
let _27: i32;
let _28: isize;
let _29: [u64; 4];
let _30: f64;
let _31: f32;
let _32: (f32, u8, u16, isize);
let _33: &'static f64;
let _34: isize;
let _35: *const u128;
let _36: f64;
let _37: [usize; 4];
let _38: [u64; 4];
let _39: Adt56;
let _40: (f32, u8, u16, isize);
let _41: u8;
let _42: i16;
let _43: f64;
let _44: *const i8;
let _45: [i128; 8];
let _46: *const bool;
let _47: Adt47;
let _48: [u64; 4];
let _49: ();
let _50: ();
{
_10 = !78_u8;
_14 = !238065466693092822140061934970647172948_u128;
_3 = !(-9223372036854775808_isize);
_13 = 14187168087274289551_u64 * 6122848072643794272_u64;
_1 = !false;
_15 = [_13,_13,_13,_13];
_5 = (-19702_i16);
_6 = 3766716306141440840_i64 as i32;
_8 = 4_usize as i128;
_15 = [_13,_13,_13,_13];
_13 = 1164088644265892872_u64 | 13401114095541591157_u64;
_14 = !329443928270170498762695252649219312100_u128;
_7 = !5268894120412147782_i64;
_8 = _7 as i128;
_1 = _13 < _13;
_18 = 1396594996_u32 | 3030889832_u32;
_9 = 1_usize;
_4 = 81_i8;
Call(_4 = fn1(_15[_9], _13, _5, _13, _13, _8, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb2 = {
_20 = !_1;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
16421 => bb10,
_ => bb9
}
}
bb3 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_7 = 4941844710699856592_i64 >> _4;
_20 = _4 != _4;
_7 = _9 as i64;
_5 = 5356_i16;
_5 = 7753_i16 << _14;
Goto(bb11)
}
bb11 = {
_19 = !_3;
_12 = _18;
_11 = 64505_u16 << _3;
_1 = _20 | _20;
_2 = '\u{ccccd}';
_7 = 7191946904193355534_i64 * 294324417758087121_i64;
_11 = _10 as u16;
_15 = [_13,_13,_13,_13];
_14 = 235661362591355688386841653757765971391_u128;
_7 = (-3001771505899959526_i64) << _9;
_6 = 1370005097_i32 >> _8;
_12 = _13 as u32;
_1 = _20;
_20 = !_1;
_12 = !_18;
_21 = _19 as i16;
_6 = (-1202795623_i32) >> _5;
match _9 {
0 => bb1,
2 => bb4,
3 => bb12,
1 => bb14,
_ => bb13
}
}
bb12 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb13 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb14 = {
_8 = (-106427878650464313212410226525572715884_i128) >> _5;
Goto(bb15)
}
bb15 = {
_23 = [_1,_20,_20];
_13 = 3071311054577784207_u64;
match _14 {
235661362591355688386841653757765971391 => bb17,
_ => bb16
}
}
bb16 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb17 = {
_23 = [_20,_20,_1];
_10 = _5 as u8;
_17 = Adt52::Variant1 { fld0: _6 };
_19 = !_3;
_1 = _20;
_17 = Adt52::Variant1 { fld0: _6 };
_2 = '\u{f3d82}';
_23 = [_1,_20,_1];
SetDiscriminant(_17, 0);
_2 = '\u{b5ae6}';
_5 = -_21;
_19 = _4 as isize;
_4 = (-10_i8);
_5 = -_21;
_24 = _3 << _10;
_17 = Adt52::Variant1 { fld0: _6 };
_4 = _14 as i8;
Goto(bb18)
}
bb18 = {
_3 = _24 * _24;
SetDiscriminant(_17, 0);
_21 = _5 | _5;
_23 = [_20,_20,_1];
match _14 {
0 => bb14,
1 => bb6,
2 => bb3,
3 => bb19,
4 => bb20,
5 => bb21,
235661362591355688386841653757765971391 => bb23,
_ => bb22
}
}
bb19 = {
Return()
}
bb20 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb21 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb22 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb23 = {
_17 = Adt52::Variant1 { fld0: _6 };
_12 = _18;
_14 = _10 as u128;
_27 = _6 << Field::<i32>(Variant(_17, 1), 0);
_1 = _2 == _2;
_11 = !45012_u16;
_7 = (-5689412592750508985_i64);
_25 = _14 as i128;
_28 = _14 as isize;
_19 = _3;
_25 = _8 * _8;
_6 = _27 << _3;
_2 = '\u{ec9a}';
_18 = _12 % _12;
_14 = 130235209753777612377648469326614264544_u128;
Goto(bb24)
}
bb24 = {
_26 = _13;
_23 = [_20,_20,_20];
_20 = _1 ^ _1;
_19 = _3 & _3;
_17 = Adt52::Variant1 { fld0: _6 };
_28 = _3;
_31 = _21 as f32;
_29 = [_26,_26,_26,_13];
_23 = [_20,_20,_20];
_32 = (_31, _10, _11, _3);
SetDiscriminant(_17, 1);
_1 = !_20;
_26 = _7 as u64;
_6 = _27;
_19 = _28;
place!(Field::<i32>(Variant(_17, 1), 0)) = _27 + _6;
_1 = _6 >= _27;
SetDiscriminant(_17, 1);
_30 = _8 as f64;
place!(Field::<i32>(Variant(_17, 1), 0)) = _6 | _6;
Goto(bb25)
}
bb25 = {
place!(Field::<i32>(Variant(_17, 1), 0)) = _9 as i32;
_32 = (_31, _10, _11, _19);
_35 = core::ptr::addr_of!(_14);
_2 = '\u{8bd26}';
SetDiscriminant(_17, 1);
_16 = &_36;
_17 = Adt52::Variant1 { fld0: _27 };
_21 = _5;
match _9 {
1 => bb27,
_ => bb26
}
}
bb26 = {
_23 = [_1,_20,_20];
_13 = 3071311054577784207_u64;
match _14 {
235661362591355688386841653757765971391 => bb17,
_ => bb16
}
}
bb27 = {
_9 = 634107289897838162_usize ^ 2568385453043410332_usize;
_36 = _30 - _30;
_16 = &_30;
_18 = _12;
_16 = &_36;
_33 = &(*_16);
_16 = Move(_33);
Goto(bb28)
}
bb28 = {
_32 = (_31, _10, _11, _3);
_38 = [_13,_13,_13,_13];
_26 = !_13;
_6 = Field::<i32>(Variant(_17, 1), 0) - _27;
SetDiscriminant(_17, 1);
_24 = _28 - _28;
_18 = _32.2 as u32;
Call(_6 = core::intrinsics::transmute(_2), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_14 = !123220989705122111960317940213572631205_u128;
_31 = _4 as f32;
_18 = !_12;
_39.fld2.fld0.4.1 = core::ptr::addr_of!(_39.fld0.fld3);
_40 = (_32.0, _10, _32.2, _32.3);
_39.fld0.fld5 = core::ptr::addr_of!(_31);
_34 = !_28;
_17 = Adt52::Variant1 { fld0: _27 };
_39.fld2.fld0.4.1 = core::ptr::addr_of!(_39.fld0.fld3);
_37 = [_9,_9,_9,_9];
_16 = &_36;
_1 = !_20;
_39.fld6 = (_35, _24);
_16 = &_30;
_39.fld2.fld4 = _23;
_41 = (*_35) as u8;
_31 = _40.0 + _32.0;
_39.fld0.fld0 = core::ptr::addr_of!(_37);
_35 = core::ptr::addr_of!((*_35));
SetDiscriminant(_17, 0);
_33 = &_30;
_23 = [_1,_1,_20];
_40.2 = !_11;
_39.fld2.fld5 = _36 as i64;
_43 = _18 as f64;
Goto(bb30)
}
bb30 = {
_8 = _25;
_34 = !_3;
_17 = Adt52::Variant1 { fld0: _27 };
_40.1 = _10 + _41;
_39.fld2.fld0.4.2 = core::ptr::addr_of!(_20);
_42 = -_5;
_39.fld3 = _14 | _14;
_39.fld2.fld0.4.2 = core::ptr::addr_of!(_20);
_39.fld2.fld0.3 = core::ptr::addr_of!((*_35));
_39.fld0.fld3 = _4 * _4;
_8 = _26 as i128;
_32.2 = _30 as u16;
match _12 {
0 => bb20,
1 => bb21,
2 => bb14,
3 => bb23,
1191548815 => bb32,
_ => bb31
}
}
bb31 = {
_10 = 156_u8;
_4 = -23_i8;
_7 = -289562133512563107_i64;
_19 = _3 + _3;
_8 = (-43312353095230756720202731643719392531_i128);
_11 = 16421_u16;
_2 = '\u{7cbc9}';
_6 = 707034379_i32 >> _19;
_18 = 1191548815_u32;
Goto(bb2)
}
bb32 = {
_40.3 = _39.fld6.1 * _3;
_4 = -_39.fld0.fld3;
_19 = _3;
_39.fld0.fld1 = core::ptr::addr_of_mut!(_32.2);
_39.fld2.fld0.5 = _39.fld0.fld1;
_8 = _39.fld0.fld3 as i128;
_22 = Adt53::Variant0 { fld0: _2 };
_33 = &(*_16);
_9 = 5_usize;
_39.fld0.fld1 = core::ptr::addr_of_mut!(_40.2);
_39.fld2.fld0.0 = _13 as u128;
_13 = _10 as u64;
RET = Adt48::Variant1 { fld0: _39.fld0.fld0 };
_39.fld0.fld1 = _39.fld2.fld0.5;
_37 = [_9,_9,_9,_9];
_39.fld0.fld1 = _39.fld2.fld0.5;
_39.fld2.fld1 = _24 as u8;
_39.fld2.fld0.1 = _31 as u8;
_39.fld3 = _11 as u128;
_17 = Adt52::Variant1 { fld0: _27 };
_3 = _34;
_6 = -_27;
_39.fld4 = _25;
_24 = _32.2 as isize;
_29 = [_13,_13,_26,_13];
Goto(bb33)
}
bb33 = {
Call(_49 = dump_var(0_usize, 9_usize, Move(_9), 3_usize, Move(_3), 21_usize, Move(_21), 28_usize, Move(_28)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_49 = dump_var(0_usize, 38_usize, Move(_38), 12_usize, Move(_12), 13_usize, Move(_13), 2_usize, Move(_2)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Call(_49 = dump_var(0_usize, 41_usize, Move(_41), 34_usize, Move(_34), 4_usize, Move(_4), 23_usize, Move(_23)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_49 = dump_var(0_usize, 8_usize, Move(_8), 15_usize, Move(_15), 7_usize, Move(_7), 50_usize, _50), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u64,mut _2: u64,mut _3: i16,mut _4: u64,mut _5: u64,mut _6: i128,mut _7: usize) -> i8 {
mir! {
type RET = i8;
let _8: Adt52;
let _9: (char,);
let _10: (*const u128, isize);
let _11: [bool; 3];
let _12: usize;
let _13: char;
let _14: char;
let _15: (char,);
let _16: f64;
let _17: f64;
let _18: char;
let _19: *const i32;
let _20: f64;
let _21: [i128; 8];
let _22: ();
let _23: ();
{
RET = 24301_u16 as i8;
_3 = !29953_i16;
RET = '\u{841bc}' as i8;
RET = 123_i8 + 77_i8;
_8 = Adt52::Variant1 { fld0: (-437828854_i32) };
_9.0 = '\u{cafe2}';
RET = -(-113_i8);
Call(_9 = fn2(_1, RET, _1, _7, _2, _7, _1, _1, _1, _1, _4, _6, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = 2479370614327047329_usize;
_5 = !_2;
_7 = !0_usize;
RET = !61_i8;
RET = 114_i8 >> _3;
_4 = _1 * _5;
_13 = _9.0;
_11 = [true,false,false];
_5 = !_2;
RET = _13 as i8;
_10.1 = 121_isize ^ (-77_isize);
_15.0 = _13;
_14 = _15.0;
_15 = (_14,);
_12 = _7;
_2 = _4 >> _1;
RET = -44_i8;
RET = !22_i8;
_5 = 34_u8 as u64;
_5 = _4;
Call(_5 = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = (-3716_i16) + (-32125_i16);
place!(Field::<i32>(Variant(_8, 1), 0)) = (-2069572268_i32) ^ 996076951_i32;
_1 = _5;
_9 = _15;
RET = (-98_i8) + (-41_i8);
SetDiscriminant(_8, 1);
place!(Field::<i32>(Variant(_8, 1), 0)) = -935698050_i32;
RET = 125_i8;
_10.1 = (-109_isize);
_6 = -137458025053895164823291346254666093375_i128;
RET = !(-88_i8);
Goto(bb3)
}
bb3 = {
_13 = _9.0;
_4 = _2;
_14 = _13;
match _10.1 {
0 => bb1,
340282366920938463463374607431768211347 => bb4,
_ => bb2
}
}
bb4 = {
_4 = !_5;
place!(Field::<i32>(Variant(_8, 1), 0)) = (-995362965_i32);
SetDiscriminant(_8, 0);
_8 = Adt52::Variant1 { fld0: (-1732218079_i32) };
_4 = _2;
_1 = _2 | _2;
_15 = (_13,);
RET = (-17_i8);
place!(Field::<i32>(Variant(_8, 1), 0)) = !(-743507073_i32);
_1 = _5 & _2;
_15 = (_14,);
_1 = (-2395680196231561246_i64) as u64;
_17 = Field::<i32>(Variant(_8, 1), 0) as f64;
_11 = [true,true,true];
_13 = _9.0;
_12 = 3679845294_u32 as usize;
_11 = [true,true,false];
_13 = _9.0;
place!(Field::<i32>(Variant(_8, 1), 0)) = !(-217087723_i32);
_18 = _13;
_14 = _9.0;
SetDiscriminant(_8, 0);
_2 = _4;
_17 = _3 as f64;
match RET {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
340282366920938463463374607431768211439 => bb13,
_ => bb12
}
}
bb5 = {
_13 = _9.0;
_4 = _2;
_14 = _13;
match _10.1 {
0 => bb1,
340282366920938463463374607431768211347 => bb4,
_ => bb2
}
}
bb6 = {
_3 = (-3716_i16) + (-32125_i16);
place!(Field::<i32>(Variant(_8, 1), 0)) = (-2069572268_i32) ^ 996076951_i32;
_1 = _5;
_9 = _15;
RET = (-98_i8) + (-41_i8);
SetDiscriminant(_8, 1);
place!(Field::<i32>(Variant(_8, 1), 0)) = -935698050_i32;
RET = 125_i8;
_10.1 = (-109_isize);
_6 = -137458025053895164823291346254666093375_i128;
RET = !(-88_i8);
Goto(bb3)
}
bb7 = {
_7 = 2479370614327047329_usize;
_5 = !_2;
_7 = !0_usize;
RET = !61_i8;
RET = 114_i8 >> _3;
_4 = _1 * _5;
_13 = _9.0;
_11 = [true,false,false];
_5 = !_2;
RET = _13 as i8;
_10.1 = 121_isize ^ (-77_isize);
_15.0 = _13;
_14 = _15.0;
_15 = (_14,);
_12 = _7;
_2 = _4 >> _1;
RET = -44_i8;
RET = !22_i8;
_5 = 34_u8 as u64;
_5 = _4;
Call(_5 = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_9 = (_18,);
_13 = _18;
_3 = (-15810_i16) + 211_i16;
_8 = Adt52::Variant1 { fld0: 1707468828_i32 };
match _10.1 {
340282366920938463463374607431768211347 => bb14,
_ => bb12
}
}
bb14 = {
_18 = _14;
_6 = (-148237708295693231634052510256845932130_i128) * 102865899730606327168532638557322984171_i128;
_7 = _12;
_17 = _6 as f64;
_11 = [false,true,true];
_15 = _9;
place!(Field::<i32>(Variant(_8, 1), 0)) = -1972761091_i32;
_7 = _12 | _12;
_9 = _15;
_4 = _2 & _5;
SetDiscriminant(_8, 0);
_9 = (_14,);
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(1_usize, 18_usize, Move(_18), 7_usize, Move(_7), 11_usize, Move(_11), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(1_usize, 2_usize, Move(_2), 1_usize, Move(_1), 6_usize, Move(_6), 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: u64,mut _2: i8,mut _3: u64,mut _4: usize,mut _5: u64,mut _6: usize,mut _7: u64,mut _8: u64,mut _9: u64,mut _10: u64,mut _11: u64,mut _12: i128,mut _13: i128) -> (char,) {
mir! {
type RET = (char,);
let _14: [i8; 3];
let _15: Adt52;
let _16: Adt52;
let _17: (char,);
let _18: i8;
let _19: Adt48;
let _20: *mut isize;
let _21: f32;
let _22: isize;
let _23: i16;
let _24: Adt43;
let _25: f64;
let _26: char;
let _27: [bool; 3];
let _28: char;
let _29: [usize; 4];
let _30: i64;
let _31: *const (u32, *const i8, *const bool);
let _32: u32;
let _33: Adt54;
let _34: (f32, u8, u16, isize);
let _35: i128;
let _36: *mut isize;
let _37: ();
let _38: ();
{
RET = ('\u{67507}',);
_2 = 54_i8 - 59_i8;
RET.0 = '\u{23fcf}';
_2 = _12 as i8;
_4 = !_6;
_2 = 9223372036854775807_isize as i8;
RET.0 = '\u{b67fb}';
_7 = _11;
_13 = !_12;
_2 = (-41_i8) * (-21_i8);
RET = ('\u{ac41d}',);
RET.0 = '\u{4bb4c}';
RET = ('\u{7ba87}',);
_13 = _12;
_5 = _3 * _9;
_11 = _9 - _5;
_13 = !_12;
Goto(bb1)
}
bb1 = {
_10 = !_11;
_14[_6] = 31969_i16 as i8;
_13 = !_12;
_8 = !_1;
RET = ('\u{de5e2}',);
RET.0 = '\u{fceb3}';
_8 = _10 ^ _10;
_9 = _8 >> _2;
_11 = !_9;
RET.0 = '\u{389f8}';
RET = ('\u{7f0c8}',);
_17 = (RET.0,);
RET = _17;
RET = (_17.0,);
_13 = _12 << _9;
_18 = (-12066_i16) as i8;
_18 = -_14[_6];
match _6 {
0 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
1 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = _6;
_13 = -_12;
_11 = _5;
_12 = -_13;
_14 = [_18,_2,_2];
_13 = -_12;
_3 = _5;
_16 = Adt52::Variant1 { fld0: 1011433875_i32 };
_20 = core::ptr::addr_of_mut!(_22);
_11 = _10 | _3;
_4 = 162_u8 as usize;
_11 = _2 as u64;
_16 = Adt52::Variant1 { fld0: (-1636357335_i32) };
place!(Field::<i32>(Variant(_16, 1), 0)) = (-1935373971_i32);
_16 = Adt52::Variant1 { fld0: (-1754915320_i32) };
_14 = [_18,_18,_2];
_16 = Adt52::Variant1 { fld0: 1300939578_i32 };
_16 = Adt52::Variant1 { fld0: (-849931165_i32) };
_16 = Adt52::Variant1 { fld0: 374738253_i32 };
_4 = _9 as usize;
_18 = 181_u8 as i8;
_13 = _12 | _12;
match _6 {
1 => bb11,
_ => bb8
}
}
bb11 = {
_23 = 14110_i16;
RET = (_17.0,);
_22 = 3875621398299290419_i64 as isize;
_1 = 11567_u16 as u64;
_25 = _13 as f64;
_21 = 3989483389_u32 as f32;
Goto(bb12)
}
bb12 = {
_25 = 247569222457546010861217100114901672545_u128 as f64;
_26 = _17.0;
RET = (_26,);
_3 = _9;
_20 = core::ptr::addr_of_mut!(_22);
RET = (_26,);
_22 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_3 = 1503759570_i32 as u64;
_7 = _5 & _5;
_27[_6] = _9 > _8;
_20 = core::ptr::addr_of_mut!((*_20));
_29[_6] = _4;
_18 = _2 + _2;
_30 = (-8843181475944652148_i64);
RET = _17;
_23 = -2154_i16;
match _30 {
0 => bb4,
340282366920938463454531425955823559308 => bb13,
_ => bb3
}
}
bb13 = {
_14 = [_18,_18,_18];
_30 = 3314632153_u32 as i64;
_29 = [_4,_4,_4,_4];
_16 = Adt52::Variant0 { fld0: _29 };
RET = (_17.0,);
RET = _17;
_2 = _14[_6];
_6 = _4;
RET = _17;
_30 = !(-622203641386837347_i64);
_3 = _21 as u64;
_15 = _16;
Call(RET = fn3(Field::<[usize; 4]>(Variant(_16, 0), 0), Field::<[usize; 4]>(Variant(_16, 0), 0), _15, _29, Field::<[usize; 4]>(Variant(_15, 0), 0), _17.0, _6, Field::<[usize; 4]>(Variant(_15, 0), 0), Field::<[usize; 4]>(Variant(_15, 0), 0), _7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_29 = Field::<[usize; 4]>(Variant(_15, 0), 0);
_27 = [true,false,true];
_22 = 42946697598557302857446987103823740763_u128 as isize;
_20 = core::ptr::addr_of_mut!((*_20));
_22 = -(-115_isize);
_10 = _18 as u64;
_7 = 50777_u16 as u64;
_5 = (*_20) as u64;
_4 = _6;
_17.0 = RET.0;
_25 = _22 as f64;
_1 = _30 as u64;
_13 = _12;
_28 = _17.0;
_32 = (-631575335_i32) as u32;
RET = (_26,);
_34.2 = 64187_u16 | 32555_u16;
RET.0 = _28;
_6 = _4;
_16 = Adt52::Variant1 { fld0: 957266516_i32 };
place!(Field::<i32>(Variant(_16, 1), 0)) = _30 as i32;
_1 = _21 as u64;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(2_usize, 8_usize, Move(_8), 14_usize, Move(_14), 27_usize, Move(_27), 32_usize, Move(_32)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(2_usize, 29_usize, Move(_29), 17_usize, Move(_17), 10_usize, Move(_10), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(2_usize, 13_usize, Move(_13), 9_usize, Move(_9), 3_usize, Move(_3), 22_usize, Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [usize; 4],mut _2: [usize; 4],mut _3: Adt52,mut _4: [usize; 4],mut _5: [usize; 4],mut _6: char,mut _7: usize,mut _8: [usize; 4],mut _9: [usize; 4],mut _10: u64) -> (char,) {
mir! {
type RET = (char,);
let _11: [u64; 4];
let _12: Adt47;
let _13: [i128; 8];
let _14: [bool; 3];
let _15: (isize, *mut [i128; 8], (f32, u8, u16, isize), [i8; 3]);
let _16: Adt57;
let _17: i8;
let _18: (char,);
let _19: isize;
let _20: i128;
let _21: [bool; 3];
let _22: isize;
let _23: usize;
let _24: isize;
let _25: f32;
let _26: ();
let _27: ();
{
SetDiscriminant(_3, 0);
_6 = '\u{fda59}';
RET = (_6,);
_2 = [_7,_7,_7,_7];
RET.0 = _6;
RET.0 = _6;
_4 = _8;
_10 = 14716822178061005447_u64 & 9664918065458749164_u64;
_7 = 1856910826337163383_usize;
_10 = 6547247054715511025_u64;
_6 = RET.0;
_4 = [_7,_7,_7,_7];
_7 = 16660324084864709761_usize >> _10;
_11 = [_10,_10,_10,_10];
_8 = [_7,_7,_7,_7];
RET.0 = _6;
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
_1 = [_7,_7,_7,_7];
SetDiscriminant(_3, 0);
_8 = [_7,_7,_7,_7];
_2 = _5;
_2 = [_7,_7,_7,_7];
_11 = [_10,_10,_10,_10];
_6 = RET.0;
_5 = _9;
match _10 {
6547247054715511025 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_14 = [false,true,false];
_4 = [_7,_7,_7,_7];
_10 = 4709632906264170126_u64 << _7;
RET = (_6,);
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
_8 = [_7,_7,_7,_7];
Goto(bb3)
}
bb3 = {
_6 = RET.0;
_6 = RET.0;
_14 = [true,true,true];
_9 = [_7,_7,_7,_7];
_11 = [_10,_10,_10,_10];
_8 = [_7,_7,_7,_7];
RET.0 = _6;
_7 = !11480467109673115524_usize;
_13 = [169283983311357664220171877273071296889_i128,(-131844514789388785718406666428341314187_i128),141531272667367877725635599692722362806_i128,54042281704593094970827084168564374640_i128,122020933381789374426150400193974531626_i128,8601539417072553235850063397767334499_i128,(-134400935892950025046594226512960501439_i128),(-71660469048728178690349486108198634083_i128)];
_10 = 13875887623480923021_u64 - 9548557707966720861_u64;
_15.3 = [(-23_i8),(-124_i8),(-96_i8)];
_8 = [_7,_7,_7,_7];
_15.1 = core::ptr::addr_of_mut!(_13);
Call(_7 = fn4(_5, _15.1, RET, _15.1, _5, _5, _15.3, _1, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_10 = 11876654319299234828_u64 + 13281589172956974919_u64;
SetDiscriminant(_3, 0);
_2 = [_7,_7,_7,_7];
_6 = RET.0;
_15.2.3 = -(-9223372036854775808_isize);
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
RET = (_6,);
_13 = [(-61805134229333293276346254863646846931_i128),(-10133522690817301086868632419768725364_i128),68205445572414977697873041882935267485_i128,21654631654126578754516950250370444681_i128,(-80445076931003830794153301282765260664_i128),20620755382865931878040396969935768386_i128,(-116231818503714897917759403181326620032_i128),28985574759801853628392176380273565211_i128];
_15.2.0 = 88993974096667889558843488739135669958_u128 as f32;
Goto(bb5)
}
bb5 = {
_15.1 = core::ptr::addr_of_mut!(_13);
_15.2.0 = _7 as f32;
_15.2.2 = 56269_u16 << _10;
_16 = Adt57::Variant1 { fld0: 1995366354_u32 };
Goto(bb6)
}
bb6 = {
_15.3 = [52_i8,(-94_i8),1_i8];
_16 = Adt57::Variant1 { fld0: 2270297390_u32 };
_13 = [(-13708959970028863200317624335430988092_i128),(-112472949680002476281701921121112789735_i128),26554706382481720369607250968786684649_i128,65940836302071938381843683227487204983_i128,(-39967385837002900694373000777863206069_i128),92125308057860308130389833716348997802_i128,126469031075992095133644079794253308868_i128,(-122716596987332072891320553844720323672_i128)];
_4 = [_7,_7,_7,_7];
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
Goto(bb7)
}
bb7 = {
_18.0 = _6;
_4 = [_7,_7,_7,_7];
_13 = [(-112550793692640819663177266732512246152_i128),147435255878616903727158455635978689270_i128,117727848182170163994633702858176008043_i128,9217597068164230926562999872371301016_i128,(-165395921535312010399324263588366757528_i128),(-79037062511248717214744555213069742947_i128),13920542403133208946479492190747475459_i128,(-148809620921354976450396332936532603353_i128)];
_18 = (RET.0,);
_18.0 = _6;
_8 = _1;
SetDiscriminant(_3, 1);
_15.0 = _15.2.3;
RET = (_6,);
_15.2.1 = !115_u8;
_15.2.3 = _15.0 << _10;
_3 = Adt52::Variant0 { fld0: _8 };
RET.0 = _18.0;
RET.0 = _6;
RET = (_18.0,);
place!(Field::<u32>(Variant(_16, 1), 0)) = !2049682386_u32;
_15.2.2 = !63951_u16;
_19 = _15.2.3 | _15.2.3;
_1 = [_7,_7,_7,_7];
_16 = Adt57::Variant1 { fld0: 3121346637_u32 };
Goto(bb8)
}
bb8 = {
SetDiscriminant(_3, 1);
_3 = Adt52::Variant0 { fld0: _1 };
_8 = _9;
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
_18.0 = RET.0;
SetDiscriminant(_3, 0);
_11 = [_10,_10,_10,_10];
_15.0 = (-1188095678_i32) as isize;
_18.0 = _6;
_2 = _1;
_2 = [_7,_7,_7,_7];
_17 = _15.2.3 as i8;
RET.0 = _18.0;
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
_15.2.1 = 176_u8;
_1 = [_7,_7,_7,_7];
_7 = 6_usize >> _15.2.3;
_20 = (-51566712972632856407140992531163605067_i128) ^ 109845352424170986125949804813792929169_i128;
Goto(bb9)
}
bb9 = {
_7 = 2_usize + 7834251947166258739_usize;
place!(Field::<u32>(Variant(_16, 1), 0)) = 2725112380_u32 | 636387052_u32;
_13 = [_20,_20,_20,_20,_20,_20,_20,_20];
_18.0 = RET.0;
_23 = _7;
_15.1 = core::ptr::addr_of_mut!(_13);
_9 = [_23,_23,_23,_7];
_25 = _15.2.0;
_25 = -_15.2.0;
match _15.2.1 {
0 => bb3,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
176 => bb16,
_ => bb15
}
}
bb10 = {
SetDiscriminant(_3, 1);
_3 = Adt52::Variant0 { fld0: _1 };
_8 = _9;
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
_18.0 = RET.0;
SetDiscriminant(_3, 0);
_11 = [_10,_10,_10,_10];
_15.0 = (-1188095678_i32) as isize;
_18.0 = _6;
_2 = _1;
_2 = [_7,_7,_7,_7];
_17 = _15.2.3 as i8;
RET.0 = _18.0;
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
_15.2.1 = 176_u8;
_1 = [_7,_7,_7,_7];
_7 = 6_usize >> _15.2.3;
_20 = (-51566712972632856407140992531163605067_i128) ^ 109845352424170986125949804813792929169_i128;
Goto(bb9)
}
bb11 = {
_18.0 = _6;
_4 = [_7,_7,_7,_7];
_13 = [(-112550793692640819663177266732512246152_i128),147435255878616903727158455635978689270_i128,117727848182170163994633702858176008043_i128,9217597068164230926562999872371301016_i128,(-165395921535312010399324263588366757528_i128),(-79037062511248717214744555213069742947_i128),13920542403133208946479492190747475459_i128,(-148809620921354976450396332936532603353_i128)];
_18 = (RET.0,);
_18.0 = _6;
_8 = _1;
SetDiscriminant(_3, 1);
_15.0 = _15.2.3;
RET = (_6,);
_15.2.1 = !115_u8;
_15.2.3 = _15.0 << _10;
_3 = Adt52::Variant0 { fld0: _8 };
RET.0 = _18.0;
RET.0 = _6;
RET = (_18.0,);
place!(Field::<u32>(Variant(_16, 1), 0)) = !2049682386_u32;
_15.2.2 = !63951_u16;
_19 = _15.2.3 | _15.2.3;
_1 = [_7,_7,_7,_7];
_16 = Adt57::Variant1 { fld0: 3121346637_u32 };
Goto(bb8)
}
bb12 = {
_15.3 = [52_i8,(-94_i8),1_i8];
_16 = Adt57::Variant1 { fld0: 2270297390_u32 };
_13 = [(-13708959970028863200317624335430988092_i128),(-112472949680002476281701921121112789735_i128),26554706382481720369607250968786684649_i128,65940836302071938381843683227487204983_i128,(-39967385837002900694373000777863206069_i128),92125308057860308130389833716348997802_i128,126469031075992095133644079794253308868_i128,(-122716596987332072891320553844720323672_i128)];
_4 = [_7,_7,_7,_7];
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
Goto(bb7)
}
bb13 = {
Return()
}
bb14 = {
_10 = 11876654319299234828_u64 + 13281589172956974919_u64;
SetDiscriminant(_3, 0);
_2 = [_7,_7,_7,_7];
_6 = RET.0;
_15.2.3 = -(-9223372036854775808_isize);
place!(Field::<[usize; 4]>(Variant(_3, 0), 0)) = [_7,_7,_7,_7];
RET = (_6,);
_13 = [(-61805134229333293276346254863646846931_i128),(-10133522690817301086868632419768725364_i128),68205445572414977697873041882935267485_i128,21654631654126578754516950250370444681_i128,(-80445076931003830794153301282765260664_i128),20620755382865931878040396969935768386_i128,(-116231818503714897917759403181326620032_i128),28985574759801853628392176380273565211_i128];
_15.2.0 = 88993974096667889558843488739135669958_u128 as f32;
Goto(bb5)
}
bb15 = {
_6 = RET.0;
_6 = RET.0;
_14 = [true,true,true];
_9 = [_7,_7,_7,_7];
_11 = [_10,_10,_10,_10];
_8 = [_7,_7,_7,_7];
RET.0 = _6;
_7 = !11480467109673115524_usize;
_13 = [169283983311357664220171877273071296889_i128,(-131844514789388785718406666428341314187_i128),141531272667367877725635599692722362806_i128,54042281704593094970827084168564374640_i128,122020933381789374426150400193974531626_i128,8601539417072553235850063397767334499_i128,(-134400935892950025046594226512960501439_i128),(-71660469048728178690349486108198634083_i128)];
_10 = 13875887623480923021_u64 - 9548557707966720861_u64;
_15.3 = [(-23_i8),(-124_i8),(-96_i8)];
_8 = [_7,_7,_7,_7];
_15.1 = core::ptr::addr_of_mut!(_13);
Call(_7 = fn4(_5, _15.1, RET, _15.1, _5, _5, _15.3, _1, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb16 = {
_15.1 = core::ptr::addr_of_mut!(_13);
Goto(bb17)
}
bb17 = {
Call(_26 = dump_var(3_usize, 7_usize, Move(_7), 8_usize, Move(_8), 13_usize, Move(_13), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_26 = dump_var(3_usize, 9_usize, Move(_9), 20_usize, Move(_20), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [usize; 4],mut _2: *mut [i128; 8],mut _3: (char,),mut _4: *mut [i128; 8],mut _5: [usize; 4],mut _6: [usize; 4],mut _7: [i8; 3],mut _8: [usize; 4],mut _9: [usize; 4]) -> usize {
mir! {
type RET = usize;
let _10: f32;
let _11: (f32, u8, u16, isize);
let _12: usize;
let _13: [bool; 3];
let _14: f64;
let _15: *const u128;
let _16: i16;
let _17: isize;
let _18: [u64; 4];
let _19: (char,);
let _20: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16);
let _21: char;
let _22: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16);
let _23: f64;
let _24: [bool; 3];
let _25: u64;
let _26: [i8; 3];
let _27: f32;
let _28: f64;
let _29: char;
let _30: (char,);
let _31: *const i8;
let _32: isize;
let _33: [bool; 3];
let _34: *const f32;
let _35: [bool; 3];
let _36: u16;
let _37: (char,);
let _38: [i8; 3];
let _39: isize;
let _40: bool;
let _41: i32;
let _42: f64;
let _43: ();
let _44: ();
{
_7 = [(-31_i8),(-27_i8),(-23_i8)];
_10 = (-46_isize) as f32;
RET = _10 as usize;
_2 = _4;
_11.0 = (-7663_i16) as f32;
_11.3 = false as isize;
_11.3 = 9223372036854775807_isize & 9223372036854775807_isize;
_11.3 = (-105_isize);
_11 = (_10, 120_u8, 17919_u16, (-9223372036854775808_isize));
_11.1 = 109_u8;
_12 = !RET;
_11.3 = 2405802334_u32 as isize;
_5 = _9;
_13 = [true,false,true];
_11.2 = (-146749825650383868950143046699594911403_i128) as u16;
Goto(bb1)
}
bb1 = {
_9 = [RET,_12,RET,_12];
_3 = ('\u{c08d2}',);
_2 = _4;
_11.3 = 9223372036854775807_isize & (-9223372036854775808_isize);
_2 = _4;
_9 = [RET,RET,RET,RET];
Call(_11 = fn5(_1, _7, _1, _6, _1, _6, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = _12 + _12;
_9 = [RET,_12,_12,RET];
RET = !_12;
_1 = [RET,RET,_12,RET];
_13 = [true,false,false];
_2 = _4;
Call(_19.0 = fn19(_5, _3, _4, _6, _2, _6, _13, _6, _2, _2, _6, _3, _6, _7, _11.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18 = [14835984197996693048_u64,13218517725495474777_u64,3023673153817621663_u64,12284034418916967083_u64];
_2 = _4;
_20.0 = 194888267094655631597706954340447046083_u128;
match _11.1 {
0 => bb1,
89 => bb4,
_ => bb2
}
}
bb4 = {
_20.4.0 = 2795779053_u32;
_18 = [2473069299989811983_u64,11683543773048229905_u64,4830593437273641794_u64,6272896009542163624_u64];
Call(_20.1 = core::intrinsics::transmute(_11.1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_19 = (_3.0,);
_11 = (_10, _20.1, 47632_u16, (-9223372036854775808_isize));
_16 = (-25495_i16) ^ (-16382_i16);
_9 = [_12,_12,_12,RET];
_8 = [RET,RET,_12,RET];
_18 = [687296783621330077_u64,691173953312044323_u64,2066371753523363984_u64,14266710619911977079_u64];
_22.1 = _20.1 ^ _20.1;
_13 = [false,false,true];
_6 = [RET,_12,_12,_12];
Goto(bb6)
}
bb6 = {
_20.3 = core::ptr::addr_of!(_22.0);
_3 = (_19.0,);
_21 = _3.0;
_13 = [true,false,false];
_22.3 = core::ptr::addr_of!(_22.0);
_5 = [RET,_12,_12,RET];
_18 = [5793285570876260324_u64,10656180188228937664_u64,6619006610035250375_u64,12530176930294368627_u64];
_3.0 = _21;
_22.5 = core::ptr::addr_of_mut!(_11.2);
RET = true as usize;
_19 = (_21,);
_20.5 = _22.5;
_3.0 = _21;
_2 = _4;
_13 = [false,false,false];
_14 = _11.0 as f64;
Goto(bb7)
}
bb7 = {
_22.4.0 = !_20.4.0;
_17 = -_11.3;
_15 = core::ptr::addr_of!(_20.0);
_22.0 = !_20.0;
_3.0 = _19.0;
_17 = _11.3 ^ _11.3;
_1 = _8;
_3.0 = _19.0;
_20.5 = _22.5;
_10 = -_11.0;
_20.4.0 = !_22.4.0;
_12 = RET;
_8 = [RET,_12,_12,_12];
_4 = _2;
_19 = (_21,);
_11 = (_10, _20.1, 20554_u16, _17);
_11.0 = -_10;
_20.5 = core::ptr::addr_of_mut!(_11.2);
RET = _21 as usize;
_5 = _8;
_19 = (_21,);
_20.5 = core::ptr::addr_of_mut!(_11.2);
_22.3 = core::ptr::addr_of!((*_15));
_20.5 = _22.5;
Goto(bb8)
}
bb8 = {
_10 = -_11.0;
_8 = [RET,_12,_12,_12];
_27 = 8679316548029305960_i64 as f32;
_22.2 = core::ptr::addr_of_mut!(_17);
_12 = _22.4.0 as usize;
_20.2 = core::ptr::addr_of_mut!(_17);
_20.4.0 = !_22.4.0;
_4 = _2;
_18 = [2520972176777948398_u64,3330255533281148171_u64,1492204906006077611_u64,7223456560720643506_u64];
_18 = [10411325765875258452_u64,5138067098610011836_u64,12884977459339162806_u64,11917712131824112922_u64];
Goto(bb9)
}
bb9 = {
RET = _12 - _12;
_5 = _8;
_26 = [35_i8,(-49_i8),(-45_i8)];
_20.2 = core::ptr::addr_of_mut!(_17);
_28 = _17 as f64;
RET = _12 >> _11.3;
RET = _20.0 as usize;
_3 = (_19.0,);
_20.3 = core::ptr::addr_of!(_22.0);
_2 = _4;
RET = !_12;
_10 = _27;
_30 = (_19.0,);
Goto(bb10)
}
bb10 = {
_18 = [1623837553103426742_u64,6811163577087404429_u64,15492251851562227519_u64,14458245417635859131_u64];
_15 = _20.3;
_7 = _26;
_11.1 = _22.1;
_11.3 = _17;
_1 = [RET,_12,RET,_12];
_11.2 = 53080_u16 | 27543_u16;
_24 = [true,true,false];
_18 = [598891318812156828_u64,1165751111986416117_u64,13325460202468822432_u64,8407409598732972377_u64];
_30 = (_19.0,);
_32 = -_17;
_30 = (_3.0,);
_32 = 740350509_i32 as isize;
_22.2 = core::ptr::addr_of_mut!(_11.3);
_13 = _24;
_33 = [true,true,false];
_22.4.0 = 9670973272320658204_u64 as u32;
match _20.0 {
0 => bb4,
194888267094655631597706954340447046083 => bb12,
_ => bb11
}
}
bb11 = {
_19 = (_3.0,);
_11 = (_10, _20.1, 47632_u16, (-9223372036854775808_isize));
_16 = (-25495_i16) ^ (-16382_i16);
_9 = [_12,_12,_12,RET];
_8 = [RET,RET,_12,RET];
_18 = [687296783621330077_u64,691173953312044323_u64,2066371753523363984_u64,14266710619911977079_u64];
_22.1 = _20.1 ^ _20.1;
_13 = [false,false,true];
_6 = [RET,_12,_12,_12];
Goto(bb6)
}
bb12 = {
_34 = core::ptr::addr_of!(_10);
_4 = _2;
_35 = [false,false,true];
_26 = [55_i8,90_i8,(-126_i8)];
_30 = (_21,);
_20.2 = _22.2;
RET = _16 as usize;
_11.1 = _16 as u8;
_10 = -_11.0;
_8 = [RET,_12,RET,RET];
_10 = _11.0;
_21 = _3.0;
_20.2 = core::ptr::addr_of_mut!(_32);
_7 = [38_i8,(-50_i8),2_i8];
_17 = !_11.3;
Goto(bb13)
}
bb13 = {
_22.0 = _20.0 | _20.0;
_14 = _28 + _28;
_29 = _19.0;
_7 = [(-19_i8),(-66_i8),(-69_i8)];
_35 = [false,true,true];
_34 = core::ptr::addr_of!(_11.0);
_23 = -_28;
_37.0 = _21;
_6 = [RET,RET,RET,RET];
_7 = [(-109_i8),4_i8,43_i8];
_22.5 = core::ptr::addr_of_mut!(_11.2);
_4 = _2;
_6 = _5;
_13 = [false,true,false];
_20.1 = (*_34) as u8;
_6 = [_12,RET,RET,RET];
_28 = _11.1 as f64;
_30.0 = _3.0;
_22.1 = _11.1;
_33 = [false,false,true];
_11.3 = 1722344219_i32 as isize;
_32 = _21 as isize;
_4 = _2;
_38 = _26;
_14 = _28;
_11 = (_27, _22.1, 58286_u16, _17);
Goto(bb14)
}
bb14 = {
_16 = (-11547_i16);
_11 = (_10, _22.1, 32050_u16, _17);
_3 = (_30.0,);
_11.3 = _17 >> _17;
_20.5 = core::ptr::addr_of_mut!(_11.2);
_19 = _3;
_20.1 = !_22.1;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(4_usize, 35_usize, Move(_35), 16_usize, Move(_16), 1_usize, Move(_1), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(4_usize, 5_usize, Move(_5), 33_usize, Move(_33), 7_usize, Move(_7), 32_usize, Move(_32)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(4_usize, 29_usize, Move(_29), 6_usize, Move(_6), 26_usize, Move(_26), 44_usize, _44), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [usize; 4],mut _2: [i8; 3],mut _3: [usize; 4],mut _4: [usize; 4],mut _5: [usize; 4],mut _6: [usize; 4],mut _7: [usize; 4]) -> (f32, u8, u16, isize) {
mir! {
type RET = (f32, u8, u16, isize);
let _8: isize;
let _9: f64;
let _10: &'static f64;
let _11: isize;
let _12: [i128; 8];
let _13: Adt49;
let _14: [i8; 3];
let _15: [usize; 4];
let _16: i128;
let _17: char;
let _18: char;
let _19: bool;
let _20: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16);
let _21: char;
let _22: isize;
let _23: f64;
let _24: ();
let _25: ();
{
RET.3 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
RET.2 = !46026_u16;
RET.1 = !140_u8;
RET.1 = !237_u8;
_7 = _3;
_6 = [2_usize,8065917753404247013_usize,8222185334264996664_usize,16589083214949901225_usize];
_4 = [0_usize,3588175237856821965_usize,2282170042933699625_usize,4_usize];
RET.3 = (-9223372036854775808_isize);
_5 = [0_usize,16312055077343377353_usize,4585340042533268076_usize,16632000808029913248_usize];
_8 = 3936420814_u32 as isize;
RET.0 = 151276354734875659627159924722508414458_i128 as f32;
RET.3 = _8 * _8;
RET.0 = (-1559_i16) as f32;
RET.3 = _8 | _8;
_10 = &_9;
RET.0 = 2595785149354586007_u64 as f32;
RET.1 = 16712351852615658078_u64 as u8;
RET.1 = 17996826395349214852_u64 as u8;
_4 = [6_usize,4902484223744186343_usize,6523636437055727285_usize,0_usize];
RET.2 = 15063_u16;
_4 = _3;
RET.1 = 202_u8;
match RET.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
15063 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4 = [18072531304351439486_usize,9469415598876930100_usize,7_usize,3_usize];
_7 = [2900629974355616029_usize,1601318152131359635_usize,7_usize,3_usize];
_11 = '\u{ce7fd}' as isize;
_4 = [1_usize,4611871816445068271_usize,2953661511634089154_usize,6_usize];
_12 = [(-44483084891695579030196537393612077963_i128),39071714048703766129072399292776141502_i128,47201048903990013886101197633555286401_i128,(-132430055702505240853832775751873552340_i128),136226521881169449881756016353388233254_i128,142735888536342816133641783227346193741_i128,(-117485498213377513475619923515780020544_i128),(-149596463842015745491419284383655723891_i128)];
_15 = [7_usize,6_usize,6250281403078477419_usize,655416831671664388_usize];
_4 = [7_usize,6120540605663572356_usize,15659277845107182451_usize,7125717444362614586_usize];
_3 = _5;
_16 = 129003088172796758242261428516847997851_i128 * 135392220178381521417154487751325952022_i128;
_15 = [1_usize,2_usize,0_usize,8454152367796735668_usize];
_12 = [_16,_16,_16,_16,_16,_16,_16,_16];
_10 = &_9;
_17 = '\u{c9d7d}';
_8 = RET.3;
RET.3 = !_8;
RET.3 = !_8;
_16 = 80569336207664288315312465087941269549_i128;
_9 = 690687_i32 as f64;
RET.0 = 107_i8 as f32;
RET.3 = RET.0 as isize;
_1 = [11989283137351855663_usize,13745563141127974829_usize,4_usize,11312349642341560420_usize];
_5 = _3;
_2 = [(-87_i8),(-35_i8),(-104_i8)];
_19 = !false;
Call(RET.2 = fn6(RET.3, _7, _3, _8, _5), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5 = [10792237185964410073_usize,8890459335470872839_usize,7_usize,1_usize];
RET.3 = -_11;
RET.3 = _11;
RET.2 = 42904_u16;
_5 = [18050700643323986875_usize,9749007671886718211_usize,5_usize,5711160665409874507_usize];
_18 = _17;
_12 = [_16,_16,_16,_16,_16,_16,_16,_16];
RET.2 = !43562_u16;
RET.1 = !232_u8;
RET.2 = 46970_u16 * 17684_u16;
_14 = [68_i8,101_i8,(-74_i8)];
_6 = _3;
_4 = [0_usize,0_usize,8572240855842074922_usize,5_usize];
_20.4.2 = core::ptr::addr_of!(_19);
_20.5 = core::ptr::addr_of_mut!(RET.2);
RET.1 = !156_u8;
_8 = _16 as isize;
match _16 {
0 => bb4,
1 => bb11,
2 => bb12,
3 => bb13,
80569336207664288315312465087941269549 => bb15,
_ => bb14
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_15 = [16575579559480398691_usize,3390155350823105160_usize,5_usize,0_usize];
RET.2 = 0_usize as u16;
_14 = [40_i8,(-25_i8),(-127_i8)];
RET.3 = _11;
RET.1 = 89_u8;
_8 = -_11;
_2 = [(-85_i8),95_i8,(-120_i8)];
_8 = RET.3;
_20.0 = 300593696426549072256572923821118396150_u128 - 45234682966167937688243754203501464814_u128;
_20.4.2 = core::ptr::addr_of!(_19);
_18 = _17;
_2 = [77_i8,65_i8,119_i8];
RET.3 = !_8;
_6 = [5_usize,3_usize,0_usize,7152723928059087325_usize];
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(5_usize, 6_usize, Move(_6), 8_usize, Move(_8), 1_usize, Move(_1), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(5_usize, 7_usize, Move(_7), 18_usize, Move(_18), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: isize,mut _2: [usize; 4],mut _3: [usize; 4],mut _4: isize,mut _5: [usize; 4]) -> u16 {
mir! {
type RET = u16;
let _6: [i128; 8];
let _7: bool;
let _8: [usize; 4];
let _9: isize;
let _10: [u64; 4];
let _11: [u64; 4];
let _12: [bool; 3];
let _13: *const i8;
let _14: i128;
let _15: i8;
let _16: f64;
let _17: *mut isize;
let _18: *mut u16;
let _19: (f32, u8, u16, isize);
let _20: bool;
let _21: [u64; 4];
let _22: char;
let _23: isize;
let _24: u128;
let _25: f64;
let _26: *const i32;
let _27: [usize; 4];
let _28: usize;
let _29: Adt52;
let _30: ();
let _31: ();
{
RET = 33116_u16;
_2 = [9441583629786025612_usize,7_usize,11994191167828877711_usize,9117193041898784656_usize];
_3 = _2;
_4 = _1 & _1;
RET = !20032_u16;
_4 = !_1;
_2 = [3707925777143743727_usize,4_usize,0_usize,2_usize];
RET = !46961_u16;
RET = 37428_u16;
RET = !32814_u16;
Goto(bb1)
}
bb1 = {
_5 = [7_usize,7_usize,4890010869903208848_usize,4955078058326055667_usize];
_3 = _2;
_3 = [12689484056336584598_usize,5_usize,15289379524733710771_usize,13868228753707924582_usize];
_4 = _1;
_7 = false;
_6 = [(-55839062593536950607014146760789730182_i128),104532588498331597876849681858388363669_i128,55535561176151510903424988785261588217_i128,(-90362588568634855035274479633459424455_i128),(-95370586708286840960478096495817927010_i128),17352436725991293967372121849955791178_i128,(-36492322518057246538465676470189618092_i128),33009155777082386402945126846505025397_i128];
_3 = _5;
_3 = [14133875351025791128_usize,7_usize,15842443504958817750_usize,1_usize];
_7 = false;
RET = 17493_u16 | 62936_u16;
_5 = [12511013026308292560_usize,7221042890115274842_usize,3_usize,0_usize];
_2 = _3;
_8 = _2;
RET = !7101_u16;
_11 = [12505320962144744837_u64,7541036225549443340_u64,1435470005759490132_u64,3651621627462827039_u64];
Call(RET = fn7(_6, _6, _3, _11, _8, _5, _11, _6, _1, _5, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12 = [_7,_7,_7];
RET = 5340223228622185753_i64 as u16;
_9 = _1 ^ _1;
_10 = [17700314749733063082_u64,14896209199716531086_u64,17345506158510979085_u64,12883755819882349224_u64];
_13 = core::ptr::addr_of!(_15);
_14 = _9 as i128;
_12 = [_7,_7,_7];
RET = 15322_i16 as u16;
_8 = [0_usize,4618032918904571916_usize,5_usize,6_usize];
_15 = -91_i8;
RET = 12575745828499542218_usize as u16;
_11 = _10;
_12 = [_7,_7,_7];
_5 = [13656473068760203650_usize,6973122980846074866_usize,16033858416083775671_usize,9192051540919194165_usize];
_5 = [1_usize,16206907408928040957_usize,4_usize,6_usize];
_9 = _1 + _1;
_14 = (-52570520079254600243105597032158480026_i128);
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10 = _11;
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
Goto(bb3)
}
bb3 = {
_8 = _5;
_17 = core::ptr::addr_of_mut!(_4);
_1 = (*_17) << (*_17);
_4 = 6472477606731729387_u64 as isize;
_15 = -(-85_i8);
_3 = _8;
_9 = _14 as isize;
_4 = _9 ^ _9;
_17 = core::ptr::addr_of_mut!((*_17));
_16 = RET as f64;
match _14 {
0 => bb4,
1 => bb5,
2 => bb6,
287711846841683863220269010399609731430 => bb8,
_ => bb7
}
}
bb4 = {
_12 = [_7,_7,_7];
RET = 5340223228622185753_i64 as u16;
_9 = _1 ^ _1;
_10 = [17700314749733063082_u64,14896209199716531086_u64,17345506158510979085_u64,12883755819882349224_u64];
_13 = core::ptr::addr_of!(_15);
_14 = _9 as i128;
_12 = [_7,_7,_7];
RET = 15322_i16 as u16;
_8 = [0_usize,4618032918904571916_usize,5_usize,6_usize];
_15 = -91_i8;
RET = 12575745828499542218_usize as u16;
_11 = _10;
_12 = [_7,_7,_7];
_5 = [13656473068760203650_usize,6973122980846074866_usize,16033858416083775671_usize,9192051540919194165_usize];
_5 = [1_usize,16206907408928040957_usize,4_usize,6_usize];
_9 = _1 + _1;
_14 = (-52570520079254600243105597032158480026_i128);
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10 = _11;
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
Goto(bb3)
}
bb5 = {
_5 = [7_usize,7_usize,4890010869903208848_usize,4955078058326055667_usize];
_3 = _2;
_3 = [12689484056336584598_usize,5_usize,15289379524733710771_usize,13868228753707924582_usize];
_4 = _1;
_7 = false;
_6 = [(-55839062593536950607014146760789730182_i128),104532588498331597876849681858388363669_i128,55535561176151510903424988785261588217_i128,(-90362588568634855035274479633459424455_i128),(-95370586708286840960478096495817927010_i128),17352436725991293967372121849955791178_i128,(-36492322518057246538465676470189618092_i128),33009155777082386402945126846505025397_i128];
_3 = _5;
_3 = [14133875351025791128_usize,7_usize,15842443504958817750_usize,1_usize];
_7 = false;
RET = 17493_u16 | 62936_u16;
_5 = [12511013026308292560_usize,7221042890115274842_usize,3_usize,0_usize];
_2 = _3;
_8 = _2;
RET = !7101_u16;
_11 = [12505320962144744837_u64,7541036225549443340_u64,1435470005759490132_u64,3651621627462827039_u64];
Call(RET = fn7(_6, _6, _3, _11, _8, _5, _11, _6, _1, _5, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_18 = core::ptr::addr_of_mut!(RET);
_15 = !(-54_i8);
_11 = [2575279208334180106_u64,10200233786914195890_u64,11124026612006787832_u64,9914121611979981899_u64];
_2 = _8;
_19.2 = 100954148_u32 as u16;
_19.2 = RET - (*_18);
_19.1 = 10676175200810193055_u64 as u8;
_7 = _1 != _4;
_10 = [4881802663672423049_u64,16020660273929305166_u64,7616860379096785395_u64,9430876187937670238_u64];
match _14 {
0 => bb7,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb5,
287711846841683863220269010399609731430 => bb10,
_ => bb9
}
}
bb9 = {
_12 = [_7,_7,_7];
RET = 5340223228622185753_i64 as u16;
_9 = _1 ^ _1;
_10 = [17700314749733063082_u64,14896209199716531086_u64,17345506158510979085_u64,12883755819882349224_u64];
_13 = core::ptr::addr_of!(_15);
_14 = _9 as i128;
_12 = [_7,_7,_7];
RET = 15322_i16 as u16;
_8 = [0_usize,4618032918904571916_usize,5_usize,6_usize];
_15 = -91_i8;
RET = 12575745828499542218_usize as u16;
_11 = _10;
_12 = [_7,_7,_7];
_5 = [13656473068760203650_usize,6973122980846074866_usize,16033858416083775671_usize,9192051540919194165_usize];
_5 = [1_usize,16206907408928040957_usize,4_usize,6_usize];
_9 = _1 + _1;
_14 = (-52570520079254600243105597032158480026_i128);
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10 = _11;
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
Goto(bb3)
}
bb10 = {
_18 = core::ptr::addr_of_mut!((*_18));
RET = !_19.2;
_15 = '\u{10820c}' as i8;
_23 = _1 >> _15;
_2 = [2_usize,5255165311215540366_usize,6_usize,7_usize];
_19.0 = _19.1 as f32;
_21 = [14489449103273790914_u64,11127824716880146851_u64,13213741567754788738_u64,3697263481986196221_u64];
_18 = core::ptr::addr_of_mut!(_19.2);
_12 = [_7,_7,_7];
_21 = [4079505103241804201_u64,13613013887773043355_u64,15647890878259988964_u64,11261233768507181961_u64];
_19.3 = (*_17);
RET = (*_18);
match _14 {
0 => bb11,
1 => bb12,
287711846841683863220269010399609731430 => bb14,
_ => bb13
}
}
bb11 = {
_5 = [7_usize,7_usize,4890010869903208848_usize,4955078058326055667_usize];
_3 = _2;
_3 = [12689484056336584598_usize,5_usize,15289379524733710771_usize,13868228753707924582_usize];
_4 = _1;
_7 = false;
_6 = [(-55839062593536950607014146760789730182_i128),104532588498331597876849681858388363669_i128,55535561176151510903424988785261588217_i128,(-90362588568634855035274479633459424455_i128),(-95370586708286840960478096495817927010_i128),17352436725991293967372121849955791178_i128,(-36492322518057246538465676470189618092_i128),33009155777082386402945126846505025397_i128];
_3 = _5;
_3 = [14133875351025791128_usize,7_usize,15842443504958817750_usize,1_usize];
_7 = false;
RET = 17493_u16 | 62936_u16;
_5 = [12511013026308292560_usize,7221042890115274842_usize,3_usize,0_usize];
_2 = _3;
_8 = _2;
RET = !7101_u16;
_11 = [12505320962144744837_u64,7541036225549443340_u64,1435470005759490132_u64,3651621627462827039_u64];
Call(RET = fn7(_6, _6, _3, _11, _8, _5, _11, _6, _1, _5, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_8 = _5;
_17 = core::ptr::addr_of_mut!(_4);
_1 = (*_17) << (*_17);
_4 = 6472477606731729387_u64 as isize;
_15 = -(-85_i8);
_3 = _8;
_9 = _14 as isize;
_4 = _9 ^ _9;
_17 = core::ptr::addr_of_mut!((*_17));
_16 = RET as f64;
match _14 {
0 => bb4,
1 => bb5,
2 => bb6,
287711846841683863220269010399609731430 => bb8,
_ => bb7
}
}
bb13 = {
_12 = [_7,_7,_7];
RET = 5340223228622185753_i64 as u16;
_9 = _1 ^ _1;
_10 = [17700314749733063082_u64,14896209199716531086_u64,17345506158510979085_u64,12883755819882349224_u64];
_13 = core::ptr::addr_of!(_15);
_14 = _9 as i128;
_12 = [_7,_7,_7];
RET = 15322_i16 as u16;
_8 = [0_usize,4618032918904571916_usize,5_usize,6_usize];
_15 = -91_i8;
RET = 12575745828499542218_usize as u16;
_11 = _10;
_12 = [_7,_7,_7];
_5 = [13656473068760203650_usize,6973122980846074866_usize,16033858416083775671_usize,9192051540919194165_usize];
_5 = [1_usize,16206907408928040957_usize,4_usize,6_usize];
_9 = _1 + _1;
_14 = (-52570520079254600243105597032158480026_i128);
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10 = _11;
_6 = [_14,_14,_14,_14,_14,_14,_14,_14];
Goto(bb3)
}
bb14 = {
_27 = _5;
_18 = core::ptr::addr_of_mut!(_19.2);
_22 = '\u{c4c17}';
_5 = [4_usize,6331468113182639508_usize,7_usize,8529910888583016775_usize];
_20 = _7;
_21 = _11;
_19.3 = (*_17) >> (*_18);
_20 = RET < (*_18);
_24 = _20 as u128;
_3 = _5;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(6_usize, 20_usize, Move(_20), 15_usize, Move(_15), 7_usize, Move(_7), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(6_usize, 23_usize, Move(_23), 22_usize, Move(_22), 8_usize, Move(_8), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(6_usize, 11_usize, Move(_11), 5_usize, Move(_5), 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [i128; 8],mut _2: [i128; 8],mut _3: [usize; 4],mut _4: [u64; 4],mut _5: [usize; 4],mut _6: [usize; 4],mut _7: [u64; 4],mut _8: [i128; 8],mut _9: isize,mut _10: [usize; 4],mut _11: isize) -> u16 {
mir! {
type RET = u16;
let _12: isize;
let _13: char;
let _14: Adt52;
let _15: *const i16;
let _16: char;
let _17: i16;
let _18: [u64; 4];
let _19: i8;
let _20: i8;
let _21: i128;
let _22: bool;
let _23: Adt52;
let _24: [u64; 4];
let _25: char;
let _26: Adt41;
let _27: isize;
let _28: char;
let _29: char;
let _30: i16;
let _31: f64;
let _32: u8;
let _33: isize;
let _34: [u64; 4];
let _35: [bool; 3];
let _36: *const (u32, *const i8, *const bool);
let _37: usize;
let _38: *const i16;
let _39: f64;
let _40: u64;
let _41: (u32, *const i8, *const bool);
let _42: (char,);
let _43: [usize; 4];
let _44: Adt42;
let _45: i64;
let _46: isize;
let _47: ();
let _48: ();
{
_11 = 45905_u16 as isize;
RET = 37547_u16 & 29574_u16;
_3 = [7_usize,2_usize,6402273199332693493_usize,2997917128432433358_usize];
RET = 1400326439_i32 as u16;
_3 = [14874060461931665374_usize,14542976976628292131_usize,6_usize,0_usize];
_10 = [0_usize,17487312742007769563_usize,7898337735188699288_usize,6_usize];
_14 = Adt52::Variant0 { fld0: _5 };
SetDiscriminant(_14, 0);
_3 = _6;
_4 = [13208054337316773706_u64,16879753223377451620_u64,16722334977719916323_u64,9834759941354605282_u64];
_12 = _11 >> _9;
_4 = _7;
Goto(bb1)
}
bb1 = {
RET = 5782_u16 * 46933_u16;
_9 = -_12;
_4 = [13346232059693018290_u64,12548186549283261558_u64,15085615017832870523_u64,2147736027417386583_u64];
_14 = Adt52::Variant0 { fld0: _5 };
_9 = _12;
_2 = [1885997924319514773127709730923241857_i128,(-12462768966927795030119928087021527004_i128),27854735475524563264832483168904940983_i128,85840903270137128773123118366770116466_i128,(-55666550431623983980086106288591259402_i128),167086145003294201752688749739265993564_i128,(-111658692196464784315229721840546530122_i128),(-85063843320670320852372223592361504187_i128)];
RET = 3802_u16;
_9 = _11 & _11;
_3 = _5;
RET = 27452_u16;
Call(_13 = fn8(_1, _6, _8, _8, _8, _2, _1, _9, _8, _11, _10, _7, _8, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13 = '\u{f5d2e}';
_10 = _5;
_1 = [(-9122338290779546412391957310241000250_i128),166329486975873363542443776157728582889_i128,(-157318895891118700016324917480208862816_i128),(-59534288399481516749412177154465421566_i128),95540155676178297521298158186887584219_i128,30986905638100242863384680910653858677_i128,29144873450081649858213412192276160070_i128,121159650407151864239103105713551822830_i128];
_12 = -_9;
_13 = '\u{ae870}';
_16 = _13;
RET = !63525_u16;
_7 = [343290302160931457_u64,13251949543293808553_u64,1544422563433091590_u64,1283695166118667235_u64];
RET = 13578_u16;
_19 = (-47_i8);
_20 = (-1617510734_i32) as i8;
_17 = (-22348_i16) ^ 11552_i16;
_7 = [14006102044370867621_u64,615886442324211051_u64,14186805574798786164_u64,10518560383398134586_u64];
_17 = -(-4995_i16);
_14 = Adt52::Variant0 { fld0: _5 };
_19 = false as i8;
SetDiscriminant(_14, 1);
_20 = _19 >> _17;
_21 = 126775766914721039943316652177059509526_i128;
_14 = Adt52::Variant0 { fld0: _10 };
Call(_7 = core::intrinsics::transmute(_6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_17 = -4510_i16;
_10 = _6;
place!(Field::<[usize; 4]>(Variant(_14, 0), 0)) = _10;
_5 = [2590095101060805766_usize,2_usize,13402803583027448122_usize,2201177690754407776_usize];
place!(Field::<[usize; 4]>(Variant(_14, 0), 0)) = [7_usize,17928333369183747684_usize,0_usize,0_usize];
_8 = _2;
_25 = _16;
_19 = 111657463000960013369624009253668641494_u128 as i8;
_25 = _13;
_27 = _21 as isize;
_12 = _9 - _27;
_22 = _9 >= _9;
_28 = _13;
_24 = [11669341825561502931_u64,12127273552751082400_u64,5798219080660439031_u64,9091428224557522759_u64];
_31 = 4145437893_u32 as f64;
_5 = _6;
match _21 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
126775766914721039943316652177059509526 => bb10,
_ => bb9
}
}
bb4 = {
_13 = '\u{f5d2e}';
_10 = _5;
_1 = [(-9122338290779546412391957310241000250_i128),166329486975873363542443776157728582889_i128,(-157318895891118700016324917480208862816_i128),(-59534288399481516749412177154465421566_i128),95540155676178297521298158186887584219_i128,30986905638100242863384680910653858677_i128,29144873450081649858213412192276160070_i128,121159650407151864239103105713551822830_i128];
_12 = -_9;
_13 = '\u{ae870}';
_16 = _13;
RET = !63525_u16;
_7 = [343290302160931457_u64,13251949543293808553_u64,1544422563433091590_u64,1283695166118667235_u64];
RET = 13578_u16;
_19 = (-47_i8);
_20 = (-1617510734_i32) as i8;
_17 = (-22348_i16) ^ 11552_i16;
_7 = [14006102044370867621_u64,615886442324211051_u64,14186805574798786164_u64,10518560383398134586_u64];
_17 = -(-4995_i16);
_14 = Adt52::Variant0 { fld0: _5 };
_19 = false as i8;
SetDiscriminant(_14, 1);
_20 = _19 >> _17;
_21 = 126775766914721039943316652177059509526_i128;
_14 = Adt52::Variant0 { fld0: _10 };
Call(_7 = core::intrinsics::transmute(_6), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET = 5782_u16 * 46933_u16;
_9 = -_12;
_4 = [13346232059693018290_u64,12548186549283261558_u64,15085615017832870523_u64,2147736027417386583_u64];
_14 = Adt52::Variant0 { fld0: _5 };
_9 = _12;
_2 = [1885997924319514773127709730923241857_i128,(-12462768966927795030119928087021527004_i128),27854735475524563264832483168904940983_i128,85840903270137128773123118366770116466_i128,(-55666550431623983980086106288591259402_i128),167086145003294201752688749739265993564_i128,(-111658692196464784315229721840546530122_i128),(-85063843320670320852372223592361504187_i128)];
RET = 3802_u16;
_9 = _11 & _11;
_3 = _5;
RET = 27452_u16;
Call(_13 = fn8(_1, _6, _8, _8, _8, _2, _1, _9, _8, _11, _10, _7, _8, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_23 = Adt52::Variant0 { fld0: _3 };
_30 = -_17;
_24 = [17581866450496120808_u64,8932525754363912530_u64,11899865517632938016_u64,5230339340476445004_u64];
_15 = core::ptr::addr_of!(_17);
_9 = -_11;
_9 = 1041625265589246562_usize as isize;
_31 = _30 as f64;
_14 = Adt52::Variant1 { fld0: 1866646327_i32 };
_6 = [2_usize,5_usize,1916729648066936483_usize,3_usize];
_5 = [10021341860563280814_usize,1_usize,5_usize,4_usize];
_33 = 1725894034835806028_i64 as isize;
_20 = -_19;
_15 = core::ptr::addr_of!((*_15));
_6 = Field::<[usize; 4]>(Variant(_23, 0), 0);
place!(Field::<i32>(Variant(_14, 1), 0)) = (-339864675_i32) + (-1398031981_i32);
_1 = [_21,_21,_21,_21,_21,_21,_21,_21];
_15 = core::ptr::addr_of!(_30);
_23 = Adt52::Variant0 { fld0: _5 };
_21 = (-59793590703907539145765942730897197475_i128) & (-142425961201236657529666097214685499860_i128);
_33 = _12 | _27;
SetDiscriminant(_23, 1);
_16 = _13;
_17 = _30;
_12 = _27 | _27;
Goto(bb11)
}
bb11 = {
RET = 58201_u16;
_5 = _6;
_37 = 4_usize & 7_usize;
_8 = [_21,_21,_21,_21,_21,_21,_21,_21];
_14 = Adt52::Variant1 { fld0: (-147073903_i32) };
_2 = _8;
_7 = _24;
_9 = _33;
RET = 8911_u16;
_39 = _31 + _31;
_33 = _27;
_6 = [_37,_37,_37,_37];
_7 = [6108206325379548525_u64,10471017027452462859_u64,4599712991168371874_u64,3793392663987621943_u64];
_20 = _19;
_34 = _4;
_31 = 1224667281_i32 as f64;
_18 = [16420400402976039983_u64,1662596384168536400_u64,2131076233178433126_u64,2824159411730277974_u64];
_13 = _16;
_29 = _16;
Goto(bb12)
}
bb12 = {
_26 = Adt41::Variant3 { fld0: 3905240567_u32,fld1: _21,fld2: _2 };
_37 = 15989822970729278588_usize << (*_15);
_27 = _12 << _9;
_29 = _25;
_38 = _15;
_32 = !153_u8;
RET = 5595_u16 + 20208_u16;
Goto(bb13)
}
bb13 = {
_41.0 = !4182462759_u32;
_14 = Adt52::Variant1 { fld0: (-158751129_i32) };
_2 = [Field::<i128>(Variant(_26, 3), 1),Field::<i128>(Variant(_26, 3), 1),Field::<i128>(Variant(_26, 3), 1),_21,Field::<i128>(Variant(_26, 3), 1),_21,_21,Field::<i128>(Variant(_26, 3), 1)];
_28 = _13;
_41.2 = core::ptr::addr_of!(_22);
_25 = _13;
place!(Field::<i32>(Variant(_14, 1), 0)) = (-1827276754_i32) >> _9;
place!(Field::<i32>(Variant(_14, 1), 0)) = (-1877164219_i32) & 617668840_i32;
_37 = _19 as usize;
Goto(bb14)
}
bb14 = {
_8 = [_21,_21,_21,Field::<i128>(Variant(_26, 3), 1),Field::<i128>(Variant(_26, 3), 1),_21,Field::<i128>(Variant(_26, 3), 1),Field::<i128>(Variant(_26, 3), 1)];
_35 = [_22,_22,_22];
place!(Field::<i32>(Variant(_23, 1), 0)) = !Field::<i32>(Variant(_14, 1), 0);
_43 = [_37,_37,_37,_37];
_42.0 = _28;
_10 = [_37,_37,_37,_37];
_30 = _17;
_10 = [_37,_37,_37,_37];
RET = !29827_u16;
_30 = _17 >> _19;
_16 = _25;
_7 = [5950014939549311469_u64,5716421689383433247_u64,8808467964217383567_u64,15716293485011091383_u64];
_27 = !_12;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(7_usize, 20_usize, Move(_20), 8_usize, Move(_8), 25_usize, Move(_25), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(7_usize, 37_usize, Move(_37), 18_usize, Move(_18), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(7_usize, 28_usize, Move(_28), 5_usize, Move(_5), 33_usize, Move(_33), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(7_usize, 17_usize, Move(_17), 9_usize, Move(_9), 42_usize, Move(_42), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [i128; 8],mut _2: [usize; 4],mut _3: [i128; 8],mut _4: [i128; 8],mut _5: [i128; 8],mut _6: [i128; 8],mut _7: [i128; 8],mut _8: isize,mut _9: [i128; 8],mut _10: isize,mut _11: [usize; 4],mut _12: [u64; 4],mut _13: [i128; 8],mut _14: [usize; 4]) -> char {
mir! {
type RET = char;
let _15: char;
let _16: *const i8;
let _17: bool;
let _18: (f32, u8, u16, isize);
let _19: [usize; 4];
let _20: f32;
let _21: (f32, u8, u16, isize);
let _22: u8;
let _23: i128;
let _24: [u64; 4];
let _25: f64;
let _26: *const f32;
let _27: i16;
let _28: [i8; 3];
let _29: [usize; 4];
let _30: i16;
let _31: u32;
let _32: Adt44;
let _33: [i8; 3];
let _34: [i128; 8];
let _35: [i128; 8];
let _36: *const u128;
let _37: [i8; 3];
let _38: (char,);
let _39: *mut isize;
let _40: [u64; 4];
let _41: [u64; 4];
let _42: [i8; 3];
let _43: i16;
let _44: usize;
let _45: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16);
let _46: bool;
let _47: (f32, u8, u16, isize);
let _48: f32;
let _49: bool;
let _50: f64;
let _51: bool;
let _52: i32;
let _53: [usize; 4];
let _54: u128;
let _55: Adt52;
let _56: Adt44;
let _57: ();
let _58: ();
{
_9 = [91759793533537554380361646671898757486_i128,105541688648382695495174222852428833307_i128,128062702377978612198778982581068917616_i128,36226618050214136318649425293472974123_i128,(-98228031766063728609853696599411683599_i128),153384732293308151952213193152934078964_i128,115841103066413024018656042729483862444_i128,116869096106402773278422911087303311155_i128];
_7 = [(-17798649201403181635026720699081945613_i128),77060793779382263532761629759482210387_i128,155339370399878819136054681645331568099_i128,82004576990507913930926617527780215237_i128,3305117804828716636001174196359995475_i128,(-132831711290524120445905798467039490182_i128),(-72820292278711021964729964071552338480_i128),(-90101352120216918401592795342892373010_i128)];
_2 = [7676387078182075742_usize,1_usize,793533874726735379_usize,7136980895341818918_usize];
RET = '\u{11292}';
RET = '\u{2f620}';
_6 = _4;
RET = '\u{10fc83}';
Goto(bb1)
}
bb1 = {
_4 = [(-2997345873231556852527549365694051506_i128),66626918700681025028002895289175566314_i128,(-145298805627194875329239311412020851479_i128),121573017355420825694074787173058341249_i128,143773196877118047784906610214280545488_i128,49948626181122920427527212591331010403_i128,167967846871361373367802686260359878095_i128,32233535235650471259409512266257033173_i128];
_1 = _3;
_9 = [(-104008760662479880086681387961387214163_i128),(-65223673892691672300057576580162327879_i128),36459224363551094578582211656555995448_i128,164491236010931364397175598072898909040_i128,(-54844012404396325461521108552741223417_i128),155123958336717180642554062805642379601_i128,(-33587206670907834022438685741563374876_i128),(-151964258657453058599119340618606572292_i128)];
_4 = [59545231546768760483179815453169260221_i128,54337491100569428278930704480359628901_i128,(-85560495792590402785953035130892689113_i128),106705774326568566916672861169127973106_i128,49542540217975711550093331525604134043_i128,(-96602117729859913818097406110617742241_i128),(-68840078509262859019108586025470351245_i128),(-80805585575789063045181894143260666699_i128)];
_4 = [130017504254239330029423279941310201548_i128,(-116796042965591507731931355901138799759_i128),(-39387911234697119438566417046313420960_i128),(-106151906649272041597377399732737102038_i128),(-16754220744049423115217106619645423349_i128),(-670374740445841263316437165715269293_i128),(-40003060434997498037225007216122161759_i128),(-5203932402752885522169792762705152859_i128)];
_3 = _5;
RET = '\u{373f4}';
_9 = _3;
_3 = [(-68209945752867195303590423758209929914_i128),75493141209172838740898768453534860596_i128,73934166641103939219487971774145597005_i128,(-151669861859727869300495588587968716566_i128),38147388545074787283993318002827861369_i128,(-168274294127990085301147388727473636885_i128),(-116065879001944291431834909237633836467_i128),21140061036953613672009428545370974284_i128];
_2 = [1_usize,3104580733026611773_usize,9835321594841060092_usize,2_usize];
_14 = [4_usize,0_usize,1_usize,2_usize];
_2 = [2_usize,6_usize,1_usize,9856258027198860300_usize];
_12 = [2588998616781092454_u64,6935148063103561707_u64,15901280350033981629_u64,900415092285818549_u64];
_14 = [1_usize,6295599314878618825_usize,5_usize,4_usize];
RET = '\u{21421}';
_6 = [27140423552896807890760624192184865132_i128,5256210196098217231241665303422147084_i128,(-129560176357692824759885719917973331437_i128),70279865202049378136606533379509381368_i128,(-130527415707865347661777734479828922333_i128),(-2137210201978727894131448627743922988_i128),(-114612327086171351527995286375987309212_i128),25283540354083572923367428674384691834_i128];
_18.3 = _10 - _8;
_12 = [137470232010279686_u64,9356048102871119084_u64,10460142513156006620_u64,1136408530480848749_u64];
_5 = [86094227124030996088549853346792170708_i128,152023376872312862933848197367664066001_i128,43695108805382902119565983172935319735_i128,(-154056335625160766900025918024131852807_i128),(-42337155612032637837919300800976791114_i128),(-42764153091302212388464188819716362738_i128),(-2836346899061645399871368291132000816_i128),(-139435054891122177900704886943933995219_i128)];
_3 = _4;
_19 = _14;
_13 = [129533377997598948943578703519992103842_i128,136849032979333407581399416180842615316_i128,(-162477252430898339761301760705348367024_i128),(-95337620211212669331852393709974722641_i128),(-150284563289552098334152326664471549327_i128),(-127416924739426218817296884740914215849_i128),19616499943627776823301099289873533704_i128,27980515711018689717903340469342999572_i128];
_18.3 = -_8;
_15 = RET;
_18.0 = 36651275688979058005632322168590651754_i128 as f32;
Goto(bb2)
}
bb2 = {
_18.2 = !21960_u16;
_17 = !false;
_5 = [(-133853664992749501502294673213794567231_i128),136648195654119715468756033351744686693_i128,105766285348699877770481842358384302626_i128,130427279678790457306509192029341830599_i128,143523606951274732488399198312030245814_i128,(-67855923780150936078143439279644071792_i128),20947038795056686585456790231162572997_i128,61765316147564603479985980037476939279_i128];
RET = _15;
_14 = [17070874093211463883_usize,0_usize,8121574302905880390_usize,7_usize];
_19 = _2;
_4 = _7;
Call(_16 = fn9(_18.0, RET, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18.0 = 1109398696_u32 as f32;
_14 = _19;
_13 = _4;
Goto(bb4)
}
bb4 = {
_21.2 = _18.2;
_4 = _5;
_18.0 = 324850169702478802698935507849316831459_u128 as f32;
_24 = [18158032590170108139_u64,15110432395723019564_u64,13283781390769727700_u64,5950270098585488496_u64];
_8 = (-92656588353357089368789607110667587744_i128) as isize;
_21.1 = !230_u8;
_6 = [(-82334188576105819978165093778983221645_i128),165175191464360751227463589055417633990_i128,145017638033034321745084588581860879045_i128,74076364742278601914322853888004397623_i128,(-34935958246125814546209004354154291100_i128),(-29444320888284611718638897822731029408_i128),(-33078734477433073415989647637720005876_i128),(-34970941798786283855773011953997275302_i128)];
_18.3 = _15 as isize;
_21 = (_18.0, 145_u8, _18.2, _18.3);
_18.1 = !_21.1;
Goto(bb5)
}
bb5 = {
_18.3 = _8;
_21.1 = _18.1;
_4 = [(-118355863672322921357045200691856486667_i128),(-23895978526744904316219321600787853633_i128),59574743268228382924102887946941142349_i128,136376352389613840057578943908696719344_i128,163209122052057731629707026630673535196_i128,102529123942205595805024237307968508976_i128,5880729369544858543410743405889220485_i128,93791532768559424316371343714102835164_i128];
_20 = _10 as f32;
_14 = _19;
_18.2 = _21.2 << _18.1;
_14 = [1_usize,2821453858908922946_usize,3_usize,5451067423116538714_usize];
_18.3 = _10;
_21.3 = -_8;
_31 = !1170323288_u32;
_30 = -20374_i16;
_30 = !1570_i16;
_24 = [15870628082809312562_u64,6625211792191487738_u64,2734513324129253745_u64,10900028072117287815_u64];
_19 = [7_usize,0_usize,396274777609726884_usize,1_usize];
_4 = [(-65740531031870104166623181036103431305_i128),145354585210506052667201603454697135305_i128,(-123232985449256418908014311682807173536_i128),34802633952544160824997253885204839186_i128,32606754791141091042367733776637844559_i128,116041770283076981344350696292346868963_i128,(-64003116959740498352908483895169446418_i128),56271516618305417996248227294232486382_i128];
_5 = [(-91073139379047844624845315143993425910_i128),(-63175457735454462922133233801802603627_i128),88846865871991137575796720434880382461_i128,98010938494294770485608479015279145451_i128,7514139164709248520793888051353756763_i128,53627727956777554948270138865373964470_i128,40023512783271768119181464554921669492_i128,(-125985794184059225764993839886035171356_i128)];
RET = _15;
RET = _15;
Call(_27 = fn15(_30, _6, _21, _13, _6, _18.1, _19, _18, _21.1, _18, _18.2, _21.1, _21.0, _18.2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
RET = _15;
_14 = _19;
_14 = [3418030671841266812_usize,6018170857459056551_usize,7_usize,5_usize];
_23 = !(-20573706607992240572279649959311030090_i128);
Goto(bb7)
}
bb7 = {
_21.2 = !_18.2;
_1 = [_23,_23,_23,_23,_23,_23,_23,_23];
_5 = _13;
_28 = [(-98_i8),107_i8,115_i8];
Call(_33 = core::intrinsics::transmute(_28), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_18.1 = _21.1;
_34 = [_23,_23,_23,_23,_23,_23,_23,_23];
_27 = _30 & _30;
_34 = [_23,_23,_23,_23,_23,_23,_23,_23];
_13 = _7;
_22 = !_18.1;
_34 = [_23,_23,_23,_23,_23,_23,_23,_23];
_21.1 = _18.1 * _22;
_28 = [(-102_i8),100_i8,23_i8];
_21.3 = _8;
_21.3 = _10 | _10;
_13 = [_23,_23,_23,_23,_23,_23,_23,_23];
_18.3 = -_10;
_4 = _13;
_8 = !_21.3;
_35 = _34;
_25 = 3553732500212004856_u64 as f64;
_37 = _28;
_37 = [116_i8,13_i8,62_i8];
_29 = _2;
Goto(bb9)
}
bb9 = {
_6 = [_23,_23,_23,_23,_23,_23,_23,_23];
_7 = _3;
_29 = [1_usize,4_usize,9018551892456888163_usize,5_usize];
_18.2 = _21.2;
RET = _15;
_18.2 = _21.2 >> _21.1;
Goto(bb10)
}
bb10 = {
_5 = _3;
_18.1 = _18.2 as u8;
_22 = _18.1 & _18.1;
_27 = !_30;
_11 = [2_usize,4_usize,8616237205611581716_usize,7_usize];
RET = _15;
_21.0 = _18.0 - _20;
_6 = [_23,_23,_23,_23,_23,_23,_23,_23];
_45.3 = core::ptr::addr_of!(_45.0);
_12 = _24;
_38 = (RET,);
_45.4.1 = _16;
RET = _38.0;
Goto(bb11)
}
bb11 = {
_47 = _18;
_44 = !532798341964464064_usize;
_26 = core::ptr::addr_of!(_18.0);
_20 = _47.0;
_23 = 141573034500246815423371400023829439471_i128;
_20 = -_21.0;
_45.4.0 = !_31;
_41 = _12;
_19 = _2;
_48 = _20 - _21.0;
_40 = _12;
_21.3 = _18.2 as isize;
_21.1 = !_18.1;
_47.3 = !_21.3;
_39 = core::ptr::addr_of_mut!(_10);
_35 = _9;
_21.3 = _47.3 * _47.3;
_51 = _21.3 >= _21.3;
_45.5 = core::ptr::addr_of_mut!(_21.2);
_47.3 = _21.3 >> _21.1;
Goto(bb12)
}
bb12 = {
_53 = _14;
_18.2 = _21.2;
_54 = 183744783124634898284542127823800316278_u128;
_49 = _51 ^ _51;
_35 = _7;
_18.2 = !_47.2;
_9 = [_23,_23,_23,_23,_23,_23,_23,_23];
_7 = [_23,_23,_23,_23,_23,_23,_23,_23];
_52 = 25072973_i32;
_18.3 = _47.3;
_45.3 = core::ptr::addr_of!(_54);
_43 = _27;
_45.2 = _39;
match _54 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
183744783124634898284542127823800316278 => bb20,
_ => bb19
}
}
bb13 = {
_47 = _18;
_44 = !532798341964464064_usize;
_26 = core::ptr::addr_of!(_18.0);
_20 = _47.0;
_23 = 141573034500246815423371400023829439471_i128;
_20 = -_21.0;
_45.4.0 = !_31;
_41 = _12;
_19 = _2;
_48 = _20 - _21.0;
_40 = _12;
_21.3 = _18.2 as isize;
_21.1 = !_18.1;
_47.3 = !_21.3;
_39 = core::ptr::addr_of_mut!(_10);
_35 = _9;
_21.3 = _47.3 * _47.3;
_51 = _21.3 >= _21.3;
_45.5 = core::ptr::addr_of_mut!(_21.2);
_47.3 = _21.3 >> _21.1;
Goto(bb12)
}
bb14 = {
_18.2 = !21960_u16;
_17 = !false;
_5 = [(-133853664992749501502294673213794567231_i128),136648195654119715468756033351744686693_i128,105766285348699877770481842358384302626_i128,130427279678790457306509192029341830599_i128,143523606951274732488399198312030245814_i128,(-67855923780150936078143439279644071792_i128),20947038795056686585456790231162572997_i128,61765316147564603479985980037476939279_i128];
RET = _15;
_14 = [17070874093211463883_usize,0_usize,8121574302905880390_usize,7_usize];
_19 = _2;
_4 = _7;
Call(_16 = fn9(_18.0, RET, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_4 = [(-2997345873231556852527549365694051506_i128),66626918700681025028002895289175566314_i128,(-145298805627194875329239311412020851479_i128),121573017355420825694074787173058341249_i128,143773196877118047784906610214280545488_i128,49948626181122920427527212591331010403_i128,167967846871361373367802686260359878095_i128,32233535235650471259409512266257033173_i128];
_1 = _3;
_9 = [(-104008760662479880086681387961387214163_i128),(-65223673892691672300057576580162327879_i128),36459224363551094578582211656555995448_i128,164491236010931364397175598072898909040_i128,(-54844012404396325461521108552741223417_i128),155123958336717180642554062805642379601_i128,(-33587206670907834022438685741563374876_i128),(-151964258657453058599119340618606572292_i128)];
_4 = [59545231546768760483179815453169260221_i128,54337491100569428278930704480359628901_i128,(-85560495792590402785953035130892689113_i128),106705774326568566916672861169127973106_i128,49542540217975711550093331525604134043_i128,(-96602117729859913818097406110617742241_i128),(-68840078509262859019108586025470351245_i128),(-80805585575789063045181894143260666699_i128)];
_4 = [130017504254239330029423279941310201548_i128,(-116796042965591507731931355901138799759_i128),(-39387911234697119438566417046313420960_i128),(-106151906649272041597377399732737102038_i128),(-16754220744049423115217106619645423349_i128),(-670374740445841263316437165715269293_i128),(-40003060434997498037225007216122161759_i128),(-5203932402752885522169792762705152859_i128)];
_3 = _5;
RET = '\u{373f4}';
_9 = _3;
_3 = [(-68209945752867195303590423758209929914_i128),75493141209172838740898768453534860596_i128,73934166641103939219487971774145597005_i128,(-151669861859727869300495588587968716566_i128),38147388545074787283993318002827861369_i128,(-168274294127990085301147388727473636885_i128),(-116065879001944291431834909237633836467_i128),21140061036953613672009428545370974284_i128];
_2 = [1_usize,3104580733026611773_usize,9835321594841060092_usize,2_usize];
_14 = [4_usize,0_usize,1_usize,2_usize];
_2 = [2_usize,6_usize,1_usize,9856258027198860300_usize];
_12 = [2588998616781092454_u64,6935148063103561707_u64,15901280350033981629_u64,900415092285818549_u64];
_14 = [1_usize,6295599314878618825_usize,5_usize,4_usize];
RET = '\u{21421}';
_6 = [27140423552896807890760624192184865132_i128,5256210196098217231241665303422147084_i128,(-129560176357692824759885719917973331437_i128),70279865202049378136606533379509381368_i128,(-130527415707865347661777734479828922333_i128),(-2137210201978727894131448627743922988_i128),(-114612327086171351527995286375987309212_i128),25283540354083572923367428674384691834_i128];
_18.3 = _10 - _8;
_12 = [137470232010279686_u64,9356048102871119084_u64,10460142513156006620_u64,1136408530480848749_u64];
_5 = [86094227124030996088549853346792170708_i128,152023376872312862933848197367664066001_i128,43695108805382902119565983172935319735_i128,(-154056335625160766900025918024131852807_i128),(-42337155612032637837919300800976791114_i128),(-42764153091302212388464188819716362738_i128),(-2836346899061645399871368291132000816_i128),(-139435054891122177900704886943933995219_i128)];
_3 = _4;
_19 = _14;
_13 = [129533377997598948943578703519992103842_i128,136849032979333407581399416180842615316_i128,(-162477252430898339761301760705348367024_i128),(-95337620211212669331852393709974722641_i128),(-150284563289552098334152326664471549327_i128),(-127416924739426218817296884740914215849_i128),19616499943627776823301099289873533704_i128,27980515711018689717903340469342999572_i128];
_18.3 = -_8;
_15 = RET;
_18.0 = 36651275688979058005632322168590651754_i128 as f32;
Goto(bb2)
}
bb16 = {
_21.2 = _18.2;
_4 = _5;
_18.0 = 324850169702478802698935507849316831459_u128 as f32;
_24 = [18158032590170108139_u64,15110432395723019564_u64,13283781390769727700_u64,5950270098585488496_u64];
_8 = (-92656588353357089368789607110667587744_i128) as isize;
_21.1 = !230_u8;
_6 = [(-82334188576105819978165093778983221645_i128),165175191464360751227463589055417633990_i128,145017638033034321745084588581860879045_i128,74076364742278601914322853888004397623_i128,(-34935958246125814546209004354154291100_i128),(-29444320888284611718638897822731029408_i128),(-33078734477433073415989647637720005876_i128),(-34970941798786283855773011953997275302_i128)];
_18.3 = _15 as isize;
_21 = (_18.0, 145_u8, _18.2, _18.3);
_18.1 = !_21.1;
Goto(bb5)
}
bb17 = {
_21.2 = !_18.2;
_1 = [_23,_23,_23,_23,_23,_23,_23,_23];
_5 = _13;
_28 = [(-98_i8),107_i8,115_i8];
Call(_33 = core::intrinsics::transmute(_28), ReturnTo(bb8), UnwindUnreachable())
}
bb18 = {
RET = _15;
_14 = _19;
_14 = [3418030671841266812_usize,6018170857459056551_usize,7_usize,5_usize];
_23 = !(-20573706607992240572279649959311030090_i128);
Goto(bb7)
}
bb19 = {
_18.3 = _8;
_21.1 = _18.1;
_4 = [(-118355863672322921357045200691856486667_i128),(-23895978526744904316219321600787853633_i128),59574743268228382924102887946941142349_i128,136376352389613840057578943908696719344_i128,163209122052057731629707026630673535196_i128,102529123942205595805024237307968508976_i128,5880729369544858543410743405889220485_i128,93791532768559424316371343714102835164_i128];
_20 = _10 as f32;
_14 = _19;
_18.2 = _21.2 << _18.1;
_14 = [1_usize,2821453858908922946_usize,3_usize,5451067423116538714_usize];
_18.3 = _10;
_21.3 = -_8;
_31 = !1170323288_u32;
_30 = -20374_i16;
_30 = !1570_i16;
_24 = [15870628082809312562_u64,6625211792191487738_u64,2734513324129253745_u64,10900028072117287815_u64];
_19 = [7_usize,0_usize,396274777609726884_usize,1_usize];
_4 = [(-65740531031870104166623181036103431305_i128),145354585210506052667201603454697135305_i128,(-123232985449256418908014311682807173536_i128),34802633952544160824997253885204839186_i128,32606754791141091042367733776637844559_i128,116041770283076981344350696292346868963_i128,(-64003116959740498352908483895169446418_i128),56271516618305417996248227294232486382_i128];
_5 = [(-91073139379047844624845315143993425910_i128),(-63175457735454462922133233801802603627_i128),88846865871991137575796720434880382461_i128,98010938494294770485608479015279145451_i128,7514139164709248520793888051353756763_i128,53627727956777554948270138865373964470_i128,40023512783271768119181464554921669492_i128,(-125985794184059225764993839886035171356_i128)];
RET = _15;
RET = _15;
Call(_27 = fn15(_30, _6, _21, _13, _6, _18.1, _19, _18, _21.1, _18, _18.2, _21.1, _21.0, _18.2), ReturnTo(bb6), UnwindUnreachable())
}
bb20 = {
Goto(bb21)
}
bb21 = {
Call(_57 = dump_var(8_usize, 23_usize, Move(_23), 31_usize, Move(_31), 40_usize, Move(_40), 1_usize, Move(_1)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_57 = dump_var(8_usize, 7_usize, Move(_7), 35_usize, Move(_35), 54_usize, Move(_54), 49_usize, Move(_49)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_57 = dump_var(8_usize, 51_usize, Move(_51), 14_usize, Move(_14), 10_usize, Move(_10), 9_usize, Move(_9)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_57 = dump_var(8_usize, 13_usize, Move(_13), 22_usize, Move(_22), 5_usize, Move(_5), 34_usize, Move(_34)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_57 = dump_var(8_usize, 19_usize, Move(_19), 41_usize, Move(_41), 33_usize, Move(_33), 58_usize, _58), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: f32,mut _2: char,mut _3: [i128; 8]) -> *const i8 {
mir! {
type RET = *const i8;
let _4: (u32, *const i8, *const bool);
let _5: usize;
let _6: [bool; 3];
let _7: isize;
let _8: *mut u16;
let _9: (char,);
let _10: *mut u16;
let _11: [i128; 8];
let _12: char;
let _13: i16;
let _14: isize;
let _15: *const u128;
let _16: bool;
let _17: f32;
let _18: (char,);
let _19: Adt44;
let _20: [i128; 8];
let _21: (f32, u8, u16, isize);
let _22: Adt42;
let _23: [usize; 4];
let _24: Adt57;
let _25: i64;
let _26: [usize; 4];
let _27: Adt46;
let _28: u16;
let _29: [i8; 3];
let _30: Adt47;
let _31: [usize; 4];
let _32: u8;
let _33: f64;
let _34: ();
let _35: ();
{
_3 = [68991823239257770079338901796763669875_i128,(-111763197135572847552875634788215213152_i128),86133234155111059318258339440432932939_i128,(-142859198118563908148473666216510520780_i128),27333039636378211530889883670330084251_i128,99655676675629898851940941595170246566_i128,149244108858150844298826335135672123191_i128,(-15582470615773397775779038153187122616_i128)];
_2 = '\u{3ddbe}';
_4.0 = 87284446481034912820975771769034291668_u128 as u32;
_5 = 0_usize & 3341582523279478933_usize;
_3 = [37764469650718225633958182741272375439_i128,(-32199280924643863582748519981265338794_i128),6600650801720669312904905132147769601_i128,(-152510383859183160394563534589287287156_i128),130167184726933382725741772860614909018_i128,(-106004566407880864121497105372611744178_i128),(-38886513435332751444292004114333465627_i128),(-71944214571366670121746807383767249605_i128)];
_5 = 3_usize << _4.0;
_4.0 = (-1231456590_i32) as u32;
_1 = _5 as f32;
_1 = 8713657540714313506_i64 as f32;
_3 = [3317497012459279805401777316635654555_i128,100211883520443213172974390794553480723_i128,(-85204538579837807640782200332694221245_i128),64772563878199119108842948191001533386_i128,(-74657971284752356132076848083357917836_i128),(-87091572450385100372145527475490949810_i128),92978047295933933336423864463128967927_i128,(-21136930298152248182515310921323541829_i128)];
_3 = [45829336015427253776062851362434694090_i128,47036050375441207064680517383346329186_i128,86211848025861099610725207429257582516_i128,49755861687683111615651682491924306135_i128,119017359984396574783167170283393381475_i128,(-168626269289243607450306910683987853157_i128),(-110998185665530860180412649645571083859_i128),163055913118768234894061125332939455748_i128];
_5 = 3_usize;
_6 = [false,true,true];
_4.0 = 548477955_u32;
_6 = [false,false,false];
_6 = [false,true,false];
Call(_4.0 = fn10(_3, _3[_5], _3[_5], _3, _3, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4.0 = 1047966797_u32 << _5;
_5 = 5_usize;
_5 = 3844296406692581712_usize;
_2 = '\u{ed54b}';
_7 = _1 as isize;
Goto(bb2)
}
bb2 = {
_1 = 105435612686946146_u64 as f32;
_4.0 = 1156455836_u32 | 1723724157_u32;
_3 = [8706947335272896480553717245566370226_i128,(-83554678601322017065819294045435233192_i128),21466455989042304253951731243993856352_i128,(-21181378364236965840262661370721839584_i128),75982446545015033989546202253495344583_i128,135295666613906834301966073284179617942_i128,(-120122402065122301983819395102702545696_i128),70762516232754514412568840259163284076_i128];
match _5 {
0 => bb1,
1 => bb3,
2 => bb4,
3844296406692581712 => bb6,
_ => bb5
}
}
bb3 = {
_4.0 = 1047966797_u32 << _5;
_5 = 5_usize;
_5 = 3844296406692581712_usize;
_2 = '\u{ed54b}';
_7 = _1 as isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_9 = (_2,);
_1 = (-1955098007_i32) as f32;
_3 = [98143802956199294435953554591124932201_i128,(-96409326846566530062552136085911580307_i128),(-100284725391774956096607479542383603065_i128),(-16219944913809628771352986646835838711_i128),150184185530155077777278227578337824856_i128,(-121931696721709735747706169684459340918_i128),117823430472943347709703762437364205701_i128,(-131767934854208532296925166185955626542_i128)];
_6 = [true,true,false];
_2 = _9.0;
_4.0 = !4024421441_u32;
_5 = (-21399_i16) as usize;
_5 = 5_usize;
_11[_5] = _3[_5] ^ _3[_5];
_11 = [_3[_5],_3[_5],_3[_5],_3[_5],_3[_5],_3[_5],_3[_5],_3[_5]];
_9 = (_2,);
_5 = 2857754780837600485_usize;
_7 = -(-114_isize);
_1 = _5 as f32;
_9 = (_2,);
_12 = _9.0;
Goto(bb7)
}
bb7 = {
_2 = _9.0;
_11 = [71587425802394021716985833294910024271_i128,16481605780482957274952438013985008089_i128,122001271137270103830110471581142914832_i128,(-19342638991417715335614649128416255772_i128),54760131385139371040394524599674822838_i128,(-107234621622796841866431522811213640883_i128),(-95204710232943757760603084155192404328_i128),(-138356395891950645632845473197043162280_i128)];
_12 = _9.0;
_2 = _12;
_14 = 45_i8 as isize;
_13 = !(-5963_i16);
_14 = _7;
_4.2 = core::ptr::addr_of!(_16);
_7 = _14 - _14;
_2 = _9.0;
_13 = false as i16;
_16 = _4.0 > _4.0;
_7 = _14;
_6 = [_16,_16,_16];
Goto(bb8)
}
bb8 = {
_13 = 20351_i16;
_1 = 46220155573462567250361408877241892537_i128 as f32;
_17 = _1 - _1;
_9 = (_12,);
_18 = _9;
_1 = _13 as f32;
_12 = _2;
_18.0 = _12;
match _13 {
0 => bb1,
1 => bb2,
20351 => bb9,
_ => bb5
}
}
bb9 = {
_6 = [_16,_16,_16];
_6 = [_16,_16,_16];
_5 = !17977794617350880056_usize;
_4.2 = core::ptr::addr_of!(_16);
_1 = -_17;
_9 = (_2,);
_5 = 14400657230387964276_usize;
_3 = _11;
_9.0 = _18.0;
_21 = (_1, 119_u8, 25937_u16, _7);
_13 = (-16224_i16);
_20 = [37232712838679820135029567733398636130_i128,(-155659002789385384849270252383160030481_i128),(-74843510977867473562808181986061718874_i128),161318233392136307969984291493145212522_i128,(-93835486825598296843801579329049948939_i128),106105819931712297826309397951391116996_i128,(-98236016717544838233054279324359710345_i128),146525118010851876133170246203644645197_i128];
_21.0 = -_1;
_4.0 = !1225914454_u32;
_21.0 = _21.2 as f32;
_14 = -_21.3;
_20 = [(-130847927605134841161683661194822821663_i128),132227730617599434177228829451806565586_i128,(-11430061743623050059464650872795778955_i128),31227748687935257257815249065832229985_i128,(-120384672745051956321488217431454340818_i128),(-136321810745324119036661520988797847450_i128),58768415020609817965497647311743822863_i128,66676708327293549514051925913024615817_i128];
_1 = _21.0;
_10 = core::ptr::addr_of_mut!(_21.2);
_7 = !_21.3;
_1 = _17;
_21.3 = _14 >> (*_10);
Goto(bb10)
}
bb10 = {
_9 = (_18.0,);
_8 = _10;
_12 = _18.0;
_1 = -_21.0;
Call(_17 = fn14(_21.1, _10, (*_10), _21.1, (*_10), _11, _4.2, _1, _4.2, _8, _21.0, _21.1, _10), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_14 = _21.3;
_6 = [_16,_16,_16];
_21 = (_1, 5_u8, 64461_u16, _14);
_27.fld6 = (-1662078220_i32) as i64;
_25 = !_27.fld6;
_27.fld5 = core::ptr::addr_of!(_21.0);
_4.2 = core::ptr::addr_of!(_16);
_27.fld0 = core::ptr::addr_of!(_26);
_27.fld3 = (-69_i8) | 125_i8;
_10 = _8;
RET = core::ptr::addr_of!(_27.fld3);
_6 = [_16,_16,_16];
_4.1 = RET;
_16 = false;
_25 = _27.fld6 * _27.fld6;
_26 = [_5,_5,_5,_5];
_28 = _21.2 % _21.2;
_10 = core::ptr::addr_of_mut!(_21.2);
_27.fld5 = core::ptr::addr_of!(_21.0);
match (*_10) {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
64461 => bb17,
_ => bb16
}
}
bb12 = {
_9 = (_18.0,);
_8 = _10;
_12 = _18.0;
_1 = -_21.0;
Call(_17 = fn14(_21.1, _10, (*_10), _21.1, (*_10), _11, _4.2, _1, _4.2, _8, _21.0, _21.1, _10), ReturnTo(bb11), UnwindUnreachable())
}
bb13 = {
_1 = 105435612686946146_u64 as f32;
_4.0 = 1156455836_u32 | 1723724157_u32;
_3 = [8706947335272896480553717245566370226_i128,(-83554678601322017065819294045435233192_i128),21466455989042304253951731243993856352_i128,(-21181378364236965840262661370721839584_i128),75982446545015033989546202253495344583_i128,135295666613906834301966073284179617942_i128,(-120122402065122301983819395102702545696_i128),70762516232754514412568840259163284076_i128];
match _5 {
0 => bb1,
1 => bb3,
2 => bb4,
3844296406692581712 => bb6,
_ => bb5
}
}
bb14 = {
_13 = 20351_i16;
_1 = 46220155573462567250361408877241892537_i128 as f32;
_17 = _1 - _1;
_9 = (_12,);
_18 = _9;
_1 = _13 as f32;
_12 = _2;
_18.0 = _12;
match _13 {
0 => bb1,
1 => bb2,
20351 => bb9,
_ => bb5
}
}
bb15 = {
_2 = _9.0;
_11 = [71587425802394021716985833294910024271_i128,16481605780482957274952438013985008089_i128,122001271137270103830110471581142914832_i128,(-19342638991417715335614649128416255772_i128),54760131385139371040394524599674822838_i128,(-107234621622796841866431522811213640883_i128),(-95204710232943757760603084155192404328_i128),(-138356395891950645632845473197043162280_i128)];
_12 = _9.0;
_2 = _12;
_14 = 45_i8 as isize;
_13 = !(-5963_i16);
_14 = _7;
_4.2 = core::ptr::addr_of!(_16);
_7 = _14 - _14;
_2 = _9.0;
_13 = false as i16;
_16 = _4.0 > _4.0;
_7 = _14;
_6 = [_16,_16,_16];
Goto(bb8)
}
bb16 = {
Return()
}
bb17 = {
_27.fld0 = core::ptr::addr_of!(_26);
_27.fld3 = (-38_i8);
_27.fld6 = _25;
_21.3 = -_14;
_14 = _21.3 >> _21.2;
_27.fld1 = _10;
_29 = [_27.fld3,(*RET),(*RET)];
_14 = _16 as isize;
_3 = _11;
_23 = _26;
_27.fld2 = _27.fld3 as usize;
_13 = -27675_i16;
_31 = [_5,_27.fld2,_27.fld2,_5];
_32 = _21.1 & _21.1;
_21.1 = _13 as u8;
_4.1 = RET;
_9.0 = _12;
_18.0 = _12;
_13 = _21.0 as i16;
_23 = [_5,_27.fld2,_27.fld2,_27.fld2];
_21.1 = _32;
Goto(bb18)
}
bb18 = {
Call(_34 = dump_var(9_usize, 32_usize, Move(_32), 6_usize, Move(_6), 12_usize, Move(_12), 18_usize, Move(_18)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_34 = dump_var(9_usize, 13_usize, Move(_13), 11_usize, Move(_11), 9_usize, Move(_9), 23_usize, Move(_23)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_34 = dump_var(9_usize, 25_usize, Move(_25), 3_usize, Move(_3), 35_usize, _35, 35_usize, _35), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [i128; 8],mut _2: i128,mut _3: i128,mut _4: [i128; 8],mut _5: [i128; 8],mut _6: [bool; 3]) -> u32 {
mir! {
type RET = u32;
let _7: Adt42;
let _8: Adt45;
let _9: Adt48;
let _10: Adt49;
let _11: Adt52;
let _12: [usize; 4];
let _13: i8;
let _14: i32;
let _15: [usize; 4];
let _16: [bool; 3];
let _17: char;
let _18: f64;
let _19: f32;
let _20: f32;
let _21: [u64; 4];
let _22: isize;
let _23: [u64; 4];
let _24: [usize; 4];
let _25: (f32, u8, u16, isize);
let _26: bool;
let _27: bool;
let _28: Adt42;
let _29: isize;
let _30: [i128; 8];
let _31: u64;
let _32: Adt46;
let _33: [i128; 8];
let _34: usize;
let _35: [i8; 3];
let _36: isize;
let _37: ();
let _38: ();
{
_3 = 14687037240196788609_usize as i128;
_5 = [_2,_2,_2,_3,_2,_2,_2,_2];
_6 = [false,true,false];
_5 = _1;
_3 = _2 & _2;
RET = 2249197761_u32 & 529765862_u32;
_1 = _4;
_1 = [_2,_2,_3,_2,_3,_3,_2,_3];
RET = 2579829885816373918_u64 as u32;
_2 = !_3;
_6 = [false,false,false];
RET = 2130413803_u32;
RET = !2937639887_u32;
_4 = [_2,_2,_2,_3,_2,_3,_3,_2];
RET = 210824183_u32;
_1 = [_3,_2,_3,_2,_2,_2,_2,_2];
_3 = _2 << RET;
_5 = [_3,_2,_3,_2,_2,_2,_2,_3];
RET = !2572188653_u32;
Call(_5 = fn11(_2, _1, _3, _4, _1, _3, _1, _2, _4, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [false,false,true];
_5 = [_2,_3,_3,_2,_2,_3,_2,_3];
RET = 1929499580_u32 * 3720768600_u32;
_5 = [_3,_3,_2,_3,_3,_2,_2,_3];
_3 = -_2;
_4 = _1;
RET = !3145301504_u32;
_6 = [false,true,false];
_3 = _2;
RET = !674231643_u32;
_6 = [false,true,true];
RET = (-827850529581443860_i64) as u32;
_3 = -_2;
RET = 2146264013_u32;
_2 = -_3;
_4 = _5;
_1 = [_2,_3,_2,_3,_3,_3,_3,_2];
_11 = Adt52::Variant1 { fld0: (-1211394970_i32) };
_5 = _1;
_5 = [_3,_2,_2,_3,_3,_3,_3,_3];
RET = 231144078_i32 as u32;
_5 = [_3,_2,_2,_2,_2,_3,_2,_3];
_3 = !_2;
_4 = [_2,_3,_2,_2,_2,_3,_2,_3];
place!(Field::<i32>(Variant(_11, 1), 0)) = !810344624_i32;
Goto(bb2)
}
bb2 = {
_1 = _4;
_4 = [_2,_2,_2,_3,_3,_3,_3,_3];
RET = 6_usize as u32;
Goto(bb3)
}
bb3 = {
RET = false as u32;
_5 = _1;
RET = Field::<i32>(Variant(_11, 1), 0) as u32;
_1 = _4;
_3 = _2 | _2;
_5 = [_3,_2,_3,_3,_3,_2,_2,_3];
_6 = [false,false,true];
RET = 1800876692_u32;
_4 = _1;
_3 = !_2;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-944332258_i32);
_11 = Adt52::Variant1 { fld0: (-882042673_i32) };
RET = !2907554097_u32;
_4 = [_3,_2,_3,_3,_3,_3,_3,_3];
_2 = (-13300_i16) as i128;
_1 = _5;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-92855292_i32);
_6 = [false,false,true];
_12 = [7_usize,7_usize,6_usize,3034686635515032706_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = false as i32;
RET = 1138980532_u32 | 944440109_u32;
SetDiscriminant(_11, 1);
_11 = Adt52::Variant1 { fld0: (-398347541_i32) };
_11 = Adt52::Variant0 { fld0: _12 };
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [14323297029970655822_usize,6_usize,5_usize,1_usize];
RET = 290159035_u32;
_6 = [false,false,true];
Call(_2 = fn13(_5, _4, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_3 = _2 | _2;
_5 = [_3,_3,_3,_3,_3,_3,_2,_3];
_4 = [_3,_2,_2,_3,_2,_3,_3,_2];
_13 = (-114_i8) & 10_i8;
_2 = _3;
_13 = (-72_i8) | 13_i8;
_13 = !(-5_i8);
_3 = _2;
RET = 2079089685_u32;
SetDiscriminant(_11, 0);
RET = 2520562421_u32;
_11 = Adt52::Variant0 { fld0: _12 };
_5 = [_2,_2,_3,_2,_3,_3,_3,_3];
_6 = [true,true,true];
_2 = _13 as i128;
_5 = _1;
_11 = Adt52::Variant0 { fld0: _12 };
_4 = _5;
_14 = 1193283495_i32;
RET = !2550442995_u32;
_3 = !_2;
_5 = [_3,_2,_3,_3,_2,_2,_3,_3];
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [8540522971131561125_usize,6_usize,8481498541957362611_usize,5_usize];
_4 = [_3,_3,_3,_2,_3,_3,_2,_2];
match _14 {
0 => bb1,
1193283495 => bb5,
_ => bb3
}
}
bb5 = {
_5 = _1;
SetDiscriminant(_11, 1);
RET = 8725096619054934216_u64 as u32;
_11 = Adt52::Variant1 { fld0: _14 };
_13 = 9_i8;
_1 = _5;
_16 = [false,false,true];
_12 = [1_usize,1260797603142373714_usize,3_usize,7_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = _14 << _3;
SetDiscriminant(_11, 1);
_1 = [_3,_3,_2,_2,_2,_2,_3,_2];
_6 = [false,false,false];
_2 = -_3;
_15 = _12;
_6 = _16;
_17 = '\u{b5c48}';
_17 = '\u{ebf7}';
_3 = 9821_i16 as i128;
_15 = [2_usize,6_usize,1_usize,3_usize];
Goto(bb6)
}
bb6 = {
_17 = '\u{430c}';
_6 = [false,false,true];
_5 = _1;
_2 = 59619_u16 as i128;
place!(Field::<i32>(Variant(_11, 1), 0)) = 297347145553719326438548855945556743687_u128 as i32;
_15 = [6007433913314229323_usize,7_usize,12352343225325420788_usize,3855480023414773055_usize];
_22 = 9223372036854775807_isize;
_16 = [true,false,false];
_12 = [5_usize,0_usize,10579849798090560034_usize,17802196259879269222_usize];
_1 = [_2,_2,_2,_2,_3,_3,_2,_3];
Goto(bb7)
}
bb7 = {
place!(Field::<i32>(Variant(_11, 1), 0)) = _14;
_13 = -61_i8;
_16 = [false,true,true];
RET = !193497108_u32;
_6 = [false,true,false];
_13 = 99_i8;
_3 = _2;
_20 = 321668661595839105699882801399561311842_u128 as f32;
_19 = _20 + _20;
_21 = [12661380698677879105_u64,5073789861994855246_u64,18411724404174606350_u64,9745943019784431499_u64];
_23 = [6014296370737472446_u64,15598117849128250231_u64,18445502413606478606_u64,11689380781056082575_u64];
_14 = !Field::<i32>(Variant(_11, 1), 0);
match Field::<i32>(Variant(_11, 1), 0) {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb9,
1193283495 => bb11,
_ => bb10
}
}
bb8 = {
RET = false as u32;
_5 = _1;
RET = Field::<i32>(Variant(_11, 1), 0) as u32;
_1 = _4;
_3 = _2 | _2;
_5 = [_3,_2,_3,_3,_3,_2,_2,_3];
_6 = [false,false,true];
RET = 1800876692_u32;
_4 = _1;
_3 = !_2;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-944332258_i32);
_11 = Adt52::Variant1 { fld0: (-882042673_i32) };
RET = !2907554097_u32;
_4 = [_3,_2,_3,_3,_3,_3,_3,_3];
_2 = (-13300_i16) as i128;
_1 = _5;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-92855292_i32);
_6 = [false,false,true];
_12 = [7_usize,7_usize,6_usize,3034686635515032706_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = false as i32;
RET = 1138980532_u32 | 944440109_u32;
SetDiscriminant(_11, 1);
_11 = Adt52::Variant1 { fld0: (-398347541_i32) };
_11 = Adt52::Variant0 { fld0: _12 };
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [14323297029970655822_usize,6_usize,5_usize,1_usize];
RET = 290159035_u32;
_6 = [false,false,true];
Call(_2 = fn13(_5, _4, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb9 = {
_5 = _1;
SetDiscriminant(_11, 1);
RET = 8725096619054934216_u64 as u32;
_11 = Adt52::Variant1 { fld0: _14 };
_13 = 9_i8;
_1 = _5;
_16 = [false,false,true];
_12 = [1_usize,1260797603142373714_usize,3_usize,7_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = _14 << _3;
SetDiscriminant(_11, 1);
_1 = [_3,_3,_2,_2,_2,_2,_3,_2];
_6 = [false,false,false];
_2 = -_3;
_15 = _12;
_6 = _16;
_17 = '\u{b5c48}';
_17 = '\u{ebf7}';
_3 = 9821_i16 as i128;
_15 = [2_usize,6_usize,1_usize,3_usize];
Goto(bb6)
}
bb10 = {
_3 = _2 | _2;
_5 = [_3,_3,_3,_3,_3,_3,_2,_3];
_4 = [_3,_2,_2,_3,_2,_3,_3,_2];
_13 = (-114_i8) & 10_i8;
_2 = _3;
_13 = (-72_i8) | 13_i8;
_13 = !(-5_i8);
_3 = _2;
RET = 2079089685_u32;
SetDiscriminant(_11, 0);
RET = 2520562421_u32;
_11 = Adt52::Variant0 { fld0: _12 };
_5 = [_2,_2,_3,_2,_3,_3,_3,_3];
_6 = [true,true,true];
_2 = _13 as i128;
_5 = _1;
_11 = Adt52::Variant0 { fld0: _12 };
_4 = _5;
_14 = 1193283495_i32;
RET = !2550442995_u32;
_3 = !_2;
_5 = [_3,_2,_3,_3,_2,_2,_3,_3];
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [8540522971131561125_usize,6_usize,8481498541957362611_usize,5_usize];
_4 = [_3,_3,_3,_2,_3,_3,_2,_2];
match _14 {
0 => bb1,
1193283495 => bb5,
_ => bb3
}
}
bb11 = {
_24 = _15;
_25.1 = 60_u8;
_18 = _25.1 as f64;
_25.3 = _22;
_25.0 = _14 as f32;
_25 = (_20, 148_u8, 57390_u16, _22);
_26 = true;
_25 = (_19, 209_u8, 36852_u16, _22);
_18 = 4_usize as f64;
_25.1 = _25.2 as u8;
_2 = -_3;
_6 = _16;
_21 = [2748186489925184547_u64,3895761582442254849_u64,17581944123495974050_u64,1480825284965301759_u64];
_25.0 = _19;
_2 = _3;
_30 = [_2,_2,_2,_2,_3,_2,_3,_3];
RET = 4015783214_u32 & 1308399893_u32;
_31 = _17 as u64;
match _13 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
99 => bb20,
_ => bb19
}
}
bb12 = {
_3 = _2 | _2;
_5 = [_3,_3,_3,_3,_3,_3,_2,_3];
_4 = [_3,_2,_2,_3,_2,_3,_3,_2];
_13 = (-114_i8) & 10_i8;
_2 = _3;
_13 = (-72_i8) | 13_i8;
_13 = !(-5_i8);
_3 = _2;
RET = 2079089685_u32;
SetDiscriminant(_11, 0);
RET = 2520562421_u32;
_11 = Adt52::Variant0 { fld0: _12 };
_5 = [_2,_2,_3,_2,_3,_3,_3,_3];
_6 = [true,true,true];
_2 = _13 as i128;
_5 = _1;
_11 = Adt52::Variant0 { fld0: _12 };
_4 = _5;
_14 = 1193283495_i32;
RET = !2550442995_u32;
_3 = !_2;
_5 = [_3,_2,_3,_3,_2,_2,_3,_3];
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [8540522971131561125_usize,6_usize,8481498541957362611_usize,5_usize];
_4 = [_3,_3,_3,_2,_3,_3,_2,_2];
match _14 {
0 => bb1,
1193283495 => bb5,
_ => bb3
}
}
bb13 = {
_5 = _1;
SetDiscriminant(_11, 1);
RET = 8725096619054934216_u64 as u32;
_11 = Adt52::Variant1 { fld0: _14 };
_13 = 9_i8;
_1 = _5;
_16 = [false,false,true];
_12 = [1_usize,1260797603142373714_usize,3_usize,7_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = _14 << _3;
SetDiscriminant(_11, 1);
_1 = [_3,_3,_2,_2,_2,_2,_3,_2];
_6 = [false,false,false];
_2 = -_3;
_15 = _12;
_6 = _16;
_17 = '\u{b5c48}';
_17 = '\u{ebf7}';
_3 = 9821_i16 as i128;
_15 = [2_usize,6_usize,1_usize,3_usize];
Goto(bb6)
}
bb14 = {
RET = false as u32;
_5 = _1;
RET = Field::<i32>(Variant(_11, 1), 0) as u32;
_1 = _4;
_3 = _2 | _2;
_5 = [_3,_2,_3,_3,_3,_2,_2,_3];
_6 = [false,false,true];
RET = 1800876692_u32;
_4 = _1;
_3 = !_2;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-944332258_i32);
_11 = Adt52::Variant1 { fld0: (-882042673_i32) };
RET = !2907554097_u32;
_4 = [_3,_2,_3,_3,_3,_3,_3,_3];
_2 = (-13300_i16) as i128;
_1 = _5;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-92855292_i32);
_6 = [false,false,true];
_12 = [7_usize,7_usize,6_usize,3034686635515032706_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = false as i32;
RET = 1138980532_u32 | 944440109_u32;
SetDiscriminant(_11, 1);
_11 = Adt52::Variant1 { fld0: (-398347541_i32) };
_11 = Adt52::Variant0 { fld0: _12 };
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [14323297029970655822_usize,6_usize,5_usize,1_usize];
RET = 290159035_u32;
_6 = [false,false,true];
Call(_2 = fn13(_5, _4, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
place!(Field::<i32>(Variant(_11, 1), 0)) = _14;
_13 = -61_i8;
_16 = [false,true,true];
RET = !193497108_u32;
_6 = [false,true,false];
_13 = 99_i8;
_3 = _2;
_20 = 321668661595839105699882801399561311842_u128 as f32;
_19 = _20 + _20;
_21 = [12661380698677879105_u64,5073789861994855246_u64,18411724404174606350_u64,9745943019784431499_u64];
_23 = [6014296370737472446_u64,15598117849128250231_u64,18445502413606478606_u64,11689380781056082575_u64];
_14 = !Field::<i32>(Variant(_11, 1), 0);
match Field::<i32>(Variant(_11, 1), 0) {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb9,
1193283495 => bb11,
_ => bb10
}
}
bb16 = {
_1 = _4;
_4 = [_2,_2,_2,_3,_3,_3,_3,_3];
RET = 6_usize as u32;
Goto(bb3)
}
bb17 = {
_5 = _1;
SetDiscriminant(_11, 1);
RET = 8725096619054934216_u64 as u32;
_11 = Adt52::Variant1 { fld0: _14 };
_13 = 9_i8;
_1 = _5;
_16 = [false,false,true];
_12 = [1_usize,1260797603142373714_usize,3_usize,7_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = _14 << _3;
SetDiscriminant(_11, 1);
_1 = [_3,_3,_2,_2,_2,_2,_3,_2];
_6 = [false,false,false];
_2 = -_3;
_15 = _12;
_6 = _16;
_17 = '\u{b5c48}';
_17 = '\u{ebf7}';
_3 = 9821_i16 as i128;
_15 = [2_usize,6_usize,1_usize,3_usize];
Goto(bb6)
}
bb18 = {
_3 = _2 | _2;
_5 = [_3,_3,_3,_3,_3,_3,_2,_3];
_4 = [_3,_2,_2,_3,_2,_3,_3,_2];
_13 = (-114_i8) & 10_i8;
_2 = _3;
_13 = (-72_i8) | 13_i8;
_13 = !(-5_i8);
_3 = _2;
RET = 2079089685_u32;
SetDiscriminant(_11, 0);
RET = 2520562421_u32;
_11 = Adt52::Variant0 { fld0: _12 };
_5 = [_2,_2,_3,_2,_3,_3,_3,_3];
_6 = [true,true,true];
_2 = _13 as i128;
_5 = _1;
_11 = Adt52::Variant0 { fld0: _12 };
_4 = _5;
_14 = 1193283495_i32;
RET = !2550442995_u32;
_3 = !_2;
_5 = [_3,_2,_3,_3,_2,_2,_3,_3];
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [8540522971131561125_usize,6_usize,8481498541957362611_usize,5_usize];
_4 = [_3,_3,_3,_2,_3,_3,_2,_2];
match _14 {
0 => bb1,
1193283495 => bb5,
_ => bb3
}
}
bb19 = {
RET = false as u32;
_5 = _1;
RET = Field::<i32>(Variant(_11, 1), 0) as u32;
_1 = _4;
_3 = _2 | _2;
_5 = [_3,_2,_3,_3,_3,_2,_2,_3];
_6 = [false,false,true];
RET = 1800876692_u32;
_4 = _1;
_3 = !_2;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-944332258_i32);
_11 = Adt52::Variant1 { fld0: (-882042673_i32) };
RET = !2907554097_u32;
_4 = [_3,_2,_3,_3,_3,_3,_3,_3];
_2 = (-13300_i16) as i128;
_1 = _5;
place!(Field::<i32>(Variant(_11, 1), 0)) = (-92855292_i32);
_6 = [false,false,true];
_12 = [7_usize,7_usize,6_usize,3034686635515032706_usize];
place!(Field::<i32>(Variant(_11, 1), 0)) = false as i32;
RET = 1138980532_u32 | 944440109_u32;
SetDiscriminant(_11, 1);
_11 = Adt52::Variant1 { fld0: (-398347541_i32) };
_11 = Adt52::Variant0 { fld0: _12 };
place!(Field::<[usize; 4]>(Variant(_11, 0), 0)) = [14323297029970655822_usize,6_usize,5_usize,1_usize];
RET = 290159035_u32;
_6 = [false,false,true];
Call(_2 = fn13(_5, _4, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb20 = {
_32.fld1 = core::ptr::addr_of_mut!(_25.2);
_20 = -_19;
_25 = (_19, 23_u8, 48687_u16, _22);
_27 = !_26;
_32.fld6 = _27 as i64;
_4 = [_3,_3,_2,_3,_2,_3,_3,_3];
_32.fld4 = 2272_i16 - 24805_i16;
_16 = [_26,_27,_26];
_32.fld1 = core::ptr::addr_of_mut!(_25.2);
_21 = [_31,_31,_31,_31];
_20 = -_25.0;
_30 = [_2,_2,_2,_3,_3,_3,_3,_3];
_25.3 = _22;
_5 = _30;
Goto(bb21)
}
bb21 = {
Call(_37 = dump_var(10_usize, 31_usize, Move(_31), 30_usize, Move(_30), 24_usize, Move(_24), 17_usize, Move(_17)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_37 = dump_var(10_usize, 2_usize, Move(_2), 12_usize, Move(_12), 16_usize, Move(_16), 6_usize, Move(_6)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_37 = dump_var(10_usize, 5_usize, Move(_5), 1_usize, Move(_1), 38_usize, _38, 38_usize, _38), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: i128,mut _2: [i128; 8],mut _3: i128,mut _4: [i128; 8],mut _5: [i128; 8],mut _6: i128,mut _7: [i128; 8],mut _8: i128,mut _9: [i128; 8],mut _10: i128) -> [i128; 8] {
mir! {
type RET = [i128; 8];
let _11: char;
let _12: [usize; 4];
let _13: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16);
let _14: Adt45;
let _15: f64;
let _16: ();
let _17: ();
{
_2 = _7;
_6 = !_10;
Call(_11 = fn12(_4, _3, _6, _5, _9, _7, _7, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = [_3,_3,_1,_10,_10,_8,_8,_8];
_6 = -_1;
_12 = [3_usize,0_usize,17305852373807046591_usize,7629056359379526203_usize];
RET = _4;
RET = [_1,_3,_1,_10,_8,_10,_10,_6];
_8 = _1;
_6 = _1 << _8;
RET = _4;
_13.3 = core::ptr::addr_of!(_13.0);
RET = _9;
_15 = 2_usize as f64;
_7 = [_8,_6,_6,_1,_1,_6,_10,_10];
_13.3 = core::ptr::addr_of!(_13.0);
_13.1 = _15 as u8;
Goto(bb2)
}
bb2 = {
Call(_16 = dump_var(11_usize, 7_usize, Move(_7), 11_usize, Move(_11), 12_usize, Move(_12), 3_usize, Move(_3)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_16 = dump_var(11_usize, 4_usize, Move(_4), 10_usize, Move(_10), 17_usize, _17, 17_usize, _17), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [i128; 8],mut _2: i128,mut _3: i128,mut _4: [i128; 8],mut _5: [i128; 8],mut _6: [i128; 8],mut _7: [i128; 8],mut _8: i128) -> char {
mir! {
type RET = char;
let _9: bool;
let _10: [bool; 3];
let _11: f32;
let _12: i32;
let _13: f32;
let _14: char;
let _15: Adt48;
let _16: (f32, u8, u16, isize);
let _17: [u64; 4];
let _18: u128;
let _19: f64;
let _20: (f32, u8, u16, isize);
let _21: [usize; 4];
let _22: u16;
let _23: Adt46;
let _24: [i128; 8];
let _25: u32;
let _26: [usize; 4];
let _27: char;
let _28: bool;
let _29: char;
let _30: ();
let _31: ();
{
_7 = _4;
_6 = [_2,_2,_3,_2,_8,_2,_2,_8];
RET = '\u{f499b}';
RET = '\u{b39}';
_2 = (-419198367_i32) as i128;
_9 = !true;
_3 = _9 as i128;
_5 = [_8,_8,_8,_8,_8,_8,_8,_8];
_9 = !false;
_4 = [_8,_8,_8,_8,_8,_8,_8,_8];
_8 = 12762_i16 as i128;
Goto(bb1)
}
bb1 = {
_5 = [_3,_2,_3,_8,_8,_8,_2,_2];
_1 = [_8,_3,_8,_3,_2,_8,_3,_3];
_10 = [_9,_9,_9];
_3 = -_2;
_8 = _2;
_2 = -_3;
_8 = _3 * _3;
_10 = [_9,_9,_9];
_5 = _4;
_8 = _3 | _2;
_4 = [_8,_8,_3,_3,_8,_2,_2,_3];
_4 = [_2,_2,_8,_8,_8,_8,_2,_3];
RET = '\u{78285}';
_13 = _8 as f32;
_10 = [_9,_9,_9];
_2 = !_8;
_3 = _2 ^ _2;
_5 = [_8,_3,_3,_2,_2,_8,_3,_3];
Call(_2 = core::intrinsics::bswap(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = _6;
_1 = [_8,_8,_8,_8,_3,_8,_3,_2];
_6 = [_3,_8,_2,_8,_3,_3,_3,_3];
_16.3 = (-20_isize);
_8 = -_3;
_16 = (_13, 146_u8, 45249_u16, 9223372036854775807_isize);
_16.1 = 197_u8;
_8 = _2 ^ _3;
_5 = [_8,_8,_8,_3,_8,_8,_8,_3];
_16.0 = _13 - _13;
_18 = 251802433865828328643836067069465718570_u128;
match _16.3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
9223372036854775807 => bb8,
_ => bb7
}
}
bb3 = {
_5 = [_3,_2,_3,_8,_8,_8,_2,_2];
_1 = [_8,_3,_8,_3,_2,_8,_3,_3];
_10 = [_9,_9,_9];
_3 = -_2;
_8 = _2;
_2 = -_3;
_8 = _3 * _3;
_10 = [_9,_9,_9];
_5 = _4;
_8 = _3 | _2;
_4 = [_8,_8,_3,_3,_8,_2,_2,_3];
_4 = [_2,_2,_8,_8,_8,_8,_2,_3];
RET = '\u{78285}';
_13 = _8 as f32;
_10 = [_9,_9,_9];
_2 = !_8;
_3 = _2 ^ _2;
_5 = [_8,_3,_3,_2,_2,_8,_3,_3];
Call(_2 = core::intrinsics::bswap(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = _3 as i32;
_16.2 = 60386_u16;
_16.2 = !2882_u16;
_16 = (_13, 233_u8, 12692_u16, (-56_isize));
_16 = (_13, 143_u8, 62120_u16, 9223372036854775807_isize);
_4 = [_8,_2,_8,_3,_8,_8,_3,_8];
RET = '\u{8ca24}';
_20.0 = (-33_i8) as f32;
Goto(bb9)
}
bb9 = {
_10 = [_9,_9,_9];
_16.1 = 5_usize as u8;
_20 = (_16.0, _16.1, _16.2, _16.3);
_21 = [1_usize,3_usize,16942829262848915097_usize,0_usize];
_7 = _6;
Goto(bb10)
}
bb10 = {
_23.fld0 = core::ptr::addr_of!(_21);
_23.fld1 = core::ptr::addr_of_mut!(_20.2);
_20.2 = _16.2 << _2;
_9 = true;
_5 = _6;
_15 = Adt48::Variant1 { fld0: _23.fld0 };
_11 = -_13;
_23.fld4 = _16.2 as i16;
_21 = [8486951670221133435_usize,4_usize,6_usize,1_usize];
_20 = (_11, _16.1, _16.2, _16.3);
_16.0 = _11;
_22 = _16.1 as u16;
_23.fld4 = 27327_i16;
_23.fld3 = -102_i8;
_19 = 7972855894551101015_u64 as f64;
_20.3 = !_16.3;
_23.fld5 = core::ptr::addr_of!(_16.0);
_23.fld2 = 4253659249614272341_i64 as usize;
_20.2 = _22 * _22;
_23.fld3 = 114_i8;
Goto(bb11)
}
bb11 = {
_24 = [_8,_3,_2,_2,_3,_8,_3,_3];
place!(Field::<(u32, *const i8, *const bool)>(Variant(_15, 3), 3)).0 = _12 as u32;
place!(Field::<usize>(Variant(_15, 3), 0)) = _22 as usize;
match _23.fld4 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
27327 => bb17,
_ => bb16
}
}
bb12 = {
Return()
}
bb13 = {
_10 = [_9,_9,_9];
_16.1 = 5_usize as u8;
_20 = (_16.0, _16.1, _16.2, _16.3);
_21 = [1_usize,3_usize,16942829262848915097_usize,0_usize];
_7 = _6;
Goto(bb10)
}
bb14 = {
_12 = _3 as i32;
_16.2 = 60386_u16;
_16.2 = !2882_u16;
_16 = (_13, 233_u8, 12692_u16, (-56_isize));
_16 = (_13, 143_u8, 62120_u16, 9223372036854775807_isize);
_4 = [_8,_2,_8,_3,_8,_8,_3,_8];
RET = '\u{8ca24}';
_20.0 = (-33_i8) as f32;
Goto(bb9)
}
bb15 = {
_5 = [_3,_2,_3,_8,_8,_8,_2,_2];
_1 = [_8,_3,_8,_3,_2,_8,_3,_3];
_10 = [_9,_9,_9];
_3 = -_2;
_8 = _2;
_2 = -_3;
_8 = _3 * _3;
_10 = [_9,_9,_9];
_5 = _4;
_8 = _3 | _2;
_4 = [_8,_8,_3,_3,_8,_2,_2,_3];
_4 = [_2,_2,_8,_8,_8,_8,_2,_3];
RET = '\u{78285}';
_13 = _8 as f32;
_10 = [_9,_9,_9];
_2 = !_8;
_3 = _2 ^ _2;
_5 = [_8,_3,_3,_2,_2,_8,_3,_3];
Call(_2 = core::intrinsics::bswap(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_7 = _6;
_1 = [_8,_8,_8,_8,_3,_8,_3,_2];
_6 = [_3,_8,_2,_8,_3,_3,_3,_3];
_16.3 = (-20_isize);
_8 = -_3;
_16 = (_13, 146_u8, 45249_u16, 9223372036854775807_isize);
_16.1 = 197_u8;
_8 = _2 ^ _3;
_5 = [_8,_8,_8,_3,_8,_8,_8,_3];
_16.0 = _13 - _13;
_18 = 251802433865828328643836067069465718570_u128;
match _16.3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
9223372036854775807 => bb8,
_ => bb7
}
}
bb17 = {
_21 = [_23.fld2,_23.fld2,Field::<usize>(Variant(_15, 3), 0),_23.fld2];
place!(Field::<(*const u128, isize)>(Variant(_15, 3), 7)).0 = core::ptr::addr_of!(_18);
_26 = [_23.fld2,_23.fld2,_23.fld2,_23.fld2];
_8 = _2 >> _16.2;
RET = '\u{d4cd5}';
place!(Field::<char>(Variant(_15, 3), 1)) = RET;
_23.fld3 = !(-117_i8);
_25 = Field::<(u32, *const i8, *const bool)>(Variant(_15, 3), 3).0;
_23.fld6 = !(-9144721837639101417_i64);
_17 = [18243066738682683439_u64,11210992915405274917_u64,8304365487036227790_u64,7040872293671601511_u64];
_10 = [_9,_9,_9];
_16.2 = _20.2;
_16.0 = _11 + _13;
RET = Field::<char>(Variant(_15, 3), 1);
_23.fld1 = core::ptr::addr_of_mut!(_20.2);
_23.fld0 = core::ptr::addr_of!(_21);
place!(Field::<char>(Variant(_15, 3), 1)) = RET;
_20 = (_16.0, _16.1, _16.2, _16.3);
place!(Field::<(u32, *const i8, *const bool)>(Variant(_15, 3), 3)).0 = _2 as u32;
_16.3 = _3 as isize;
_23.fld4 = !16151_i16;
place!(Field::<(*const u128, isize)>(Variant(_15, 3), 7)).1 = _16.3;
Goto(bb18)
}
bb18 = {
Call(_30 = dump_var(12_usize, 24_usize, Move(_24), 7_usize, Move(_7), 12_usize, Move(_12), 26_usize, Move(_26)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_30 = dump_var(12_usize, 6_usize, Move(_6), 8_usize, Move(_8), 21_usize, Move(_21), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_30 = dump_var(12_usize, 17_usize, Move(_17), 31_usize, _31, 31_usize, _31, 31_usize, _31), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [i128; 8],mut _2: [i128; 8],mut _3: [i128; 8]) -> i128 {
mir! {
type RET = i128;
let _4: (f32, u8, u16, isize);
let _5: Adt52;
let _6: i8;
let _7: u128;
let _8: [bool; 3];
let _9: bool;
let _10: i32;
let _11: *const u128;
let _12: [i8; 3];
let _13: u8;
let _14: (*const u128, isize);
let _15: (f32, u8, u16, isize);
let _16: bool;
let _17: [usize; 4];
let _18: char;
let _19: char;
let _20: (char,);
let _21: [u64; 4];
let _22: (f32, u8, u16, isize);
let _23: f32;
let _24: Adt52;
let _25: u128;
let _26: Adt57;
let _27: f32;
let _28: (f32, u8, u16, isize);
let _29: Adt44;
let _30: [i8; 3];
let _31: Adt55;
let _32: char;
let _33: u128;
let _34: bool;
let _35: f64;
let _36: ();
let _37: ();
{
RET = (-163166221251176873417330464503161337626_i128);
RET = 128359691875699983546833116498413338274_u128 as i128;
RET = (-141327484215838438513513105819740245602_i128) - 77591052721901840852028180357328093892_i128;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = _3;
RET = -166770253216543079163851219587947025496_i128;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = _2;
_2 = _3;
_2 = [RET,RET,RET,RET,RET,RET,RET,RET];
Call(RET = core::intrinsics::bswap(93531773642662855431646411851796034257_i128), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4.2 = 27869_u16 & 60588_u16;
_4.1 = !70_u8;
_4.2 = !15626_u16;
_4.3 = (-9223372036854775808_isize);
RET = 35754759440129559325004944068859475283_i128 >> _4.2;
_2 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4.0 = 2685456191637775548_i64 as f32;
_2 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4.1 = !154_u8;
RET = (-131260748766335439659723490450221708953_i128) << _4.1;
_3 = _1;
_5 = Adt52::Variant1 { fld0: 1530855004_i32 };
place!(Field::<i32>(Variant(_5, 1), 0)) = 1917253103_i32 + (-1512085615_i32);
place!(Field::<i32>(Variant(_5, 1), 0)) = -(-1683967650_i32);
_7 = 16391_i16 as u128;
_6 = !(-92_i8);
SetDiscriminant(_5, 0);
_4.1 = 228_u8 + 149_u8;
match _4.3 {
0 => bb2,
1 => bb3,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1 = _3;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_14.0 = core::ptr::addr_of!(_7);
_12 = [_6,_6,_6];
_10 = 1931175810_i32 - 1336812162_i32;
_7 = 24044618061252427673873871174016379982_u128 & 83867106010541084412668932421953988660_u128;
Goto(bb6)
}
bb6 = {
_16 = true & false;
_3 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = _2;
_17 = [5_usize,1_usize,16770284387014064986_usize,17979891699274260312_usize];
Call(_2 = core::intrinsics::transmute(_3), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_20.0 = '\u{103586}';
_2 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4.1 = !114_u8;
_4.0 = (-4971_i16) as f32;
_4.1 = 131_u8;
_13 = _4.1;
_14.1 = _4.3 << RET;
RET = !57555691663976735991850305395307702001_i128;
_2 = [RET,RET,RET,RET,RET,RET,RET,RET];
place!(Field::<[usize; 4]>(Variant(_5, 0), 0)) = _17;
_18 = _20.0;
Goto(bb8)
}
bb8 = {
_12 = [_6,_6,_6];
_4.2 = 28416_u16 | 49957_u16;
_16 = !false;
_21 = [16609284748925755779_u64,11098377179134190996_u64,3235368740534328110_u64,2535117254885129401_u64];
_10 = (-1069978868_i32) ^ (-1109569484_i32);
_10 = _6 as i32;
_20.0 = _18;
_16 = _6 < _6;
_22 = (_4.0, _4.1, _4.2, _14.1);
_10 = _6 as i32;
_15.2 = _22.2;
_15.0 = _22.0;
_11 = _14.0;
place!(Field::<[usize; 4]>(Variant(_5, 0), 0)) = [4_usize,16338342172777837388_usize,5_usize,7_usize];
_18 = _20.0;
_8 = [_16,_16,_16];
match _4.3 {
0 => bb6,
1 => bb7,
2 => bb3,
340282366920938463454151235394913435648 => bb9,
_ => bb4
}
}
bb9 = {
_22 = (_4.0, _4.1, _15.2, _14.1);
_9 = !_16;
_20.0 = _18;
_11 = core::ptr::addr_of!(_7);
_22 = (_4.0, _13, _4.2, _14.1);
_4.3 = _14.1 + _14.1;
_8 = [_16,_16,_16];
_23 = _4.0;
_19 = _18;
_20.0 = _19;
_16 = !_9;
_2 = _1;
_4 = (_22.0, _13, _22.2, _14.1);
match _22.1 {
0 => bb5,
1 => bb2,
131 => bb10,
_ => bb3
}
}
bb10 = {
_14.1 = _6 as isize;
_11 = core::ptr::addr_of!((*_11));
_22.0 = _4.0 * _23;
_15.1 = _13;
_4 = (_23, _15.1, _15.2, _22.3);
_15 = _4;
_6 = (-45_i8);
_4 = (_15.0, _15.1, _15.2, _22.3);
_22.0 = -_15.0;
_15.1 = !_4.1;
_17 = [7_usize,7_usize,2_usize,15557550468553747345_usize];
_15.1 = _22.1;
_25 = _4.0 as u128;
_23 = _22.0 + _15.0;
SetDiscriminant(_5, 0);
_10 = _4.0 as i32;
_22 = (_15.0, _15.1, _4.2, _15.3);
_22.0 = -_4.0;
_7 = _25;
_5 = Adt52::Variant1 { fld0: _10 };
_23 = -_22.0;
_15.2 = !_22.2;
_25 = !(*_11);
_15.3 = -_22.3;
_21 = [10674461035076721355_u64,11568672228524724224_u64,5719949051479758311_u64,11453804594665065337_u64];
_15.0 = _4.0 + _4.0;
_6 = 16_i8 >> RET;
RET = (-18900469226288310543799993124289238072_i128) * (-123904077177553800596761984965920257807_i128);
Goto(bb11)
}
bb11 = {
_22 = (_23, _13, _4.2, _4.3);
SetDiscriminant(_5, 1);
_13 = !_4.1;
_23 = 826933537_u32 as f32;
_22.0 = _15.0;
_8 = [_9,_16,_16];
place!(Field::<i32>(Variant(_5, 1), 0)) = _10;
_4 = (_22.0, _15.1, _22.2, _22.3);
_12 = [_6,_6,_6];
_19 = _18;
_10 = Field::<i32>(Variant(_5, 1), 0);
place!(Field::<i32>(Variant(_5, 1), 0)) = _10;
_4.0 = _15.0 + _15.0;
_20.0 = _18;
Goto(bb12)
}
bb12 = {
SetDiscriminant(_5, 0);
_27 = (-6674109368335550586_i64) as f32;
place!(Field::<[usize; 4]>(Variant(_5, 0), 0)) = [5_usize,7_usize,1_usize,2883138072683166474_usize];
_16 = !_9;
_28.3 = _4.3 * _4.3;
_17 = [7899093292909117746_usize,8858638951951845024_usize,2600137855715042498_usize,13330363336597510918_usize];
_11 = _14.0;
_28 = (_23, _22.1, _15.2, _14.1);
_14 = (_11, _22.3);
_22.1 = _28.1;
_28.1 = _13 % _4.1;
_28.2 = _4.2;
_17 = Field::<[usize; 4]>(Variant(_5, 0), 0);
_24 = Adt52::Variant1 { fld0: _10 };
_20.0 = _19;
SetDiscriminant(_24, 0);
_7 = _27 as u128;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_20 = (_19,);
_27 = _10 as f32;
Goto(bb13)
}
bb13 = {
SetDiscriminant(_5, 1);
_23 = _4.0 - _27;
_30 = _12;
_4.2 = _15.2 >> _22.3;
_12 = _30;
_17 = [0_usize,1_usize,8255244168499838352_usize,9631400664186703177_usize];
_20 = (_19,);
place!(Field::<[usize; 4]>(Variant(_24, 0), 0)) = _17;
_22.2 = !_28.2;
RET = 105168262568455083743155657425902205956_i128;
Goto(bb14)
}
bb14 = {
_31.fld2.1 = _4.3;
_11 = core::ptr::addr_of!(_33);
_31.fld2 = (_14.0, _14.1);
_4.0 = -_15.0;
_28.1 = !_15.1;
_22 = _15;
_31.fld2.1 = !_22.3;
_28 = (_23, _4.1, _4.2, _4.3);
_5 = _24;
_14.0 = _31.fld2.0;
_11 = core::ptr::addr_of!((*_11));
_20.0 = _18;
_28.1 = !_15.1;
_32 = _19;
_4 = (_27, _15.1, _15.2, _31.fld2.1);
_22.2 = _15.2;
_33 = _7;
_22 = (_23, _13, _28.2, _14.1);
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(13_usize, 25_usize, Move(_25), 2_usize, Move(_2), 20_usize, Move(_20), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(13_usize, 7_usize, Move(_7), 30_usize, Move(_30), 21_usize, Move(_21), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(13_usize, 8_usize, Move(_8), 9_usize, Move(_9), 37_usize, _37, 37_usize, _37), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: u8,mut _2: *mut u16,mut _3: u16,mut _4: u8,mut _5: u16,mut _6: [i128; 8],mut _7: *const bool,mut _8: f32,mut _9: *const bool,mut _10: *mut u16,mut _11: f32,mut _12: u8,mut _13: *mut u16) -> f32 {
mir! {
type RET = f32;
let _14: f64;
let _15: Adt42;
let _16: char;
let _17: isize;
let _18: [usize; 4];
let _19: [usize; 4];
let _20: isize;
let _21: i32;
let _22: f32;
let _23: bool;
let _24: [i8; 3];
let _25: f64;
let _26: char;
let _27: (char,);
let _28: *mut isize;
let _29: bool;
let _30: *mut [i128; 8];
let _31: isize;
let _32: ();
let _33: ();
{
_8 = _11 - _11;
_1 = _4;
_1 = !_12;
_6 = [(-92579149747726995554381007063335269832_i128),58984375355148994302079535011367813971_i128,117703744391426548059435393057883799122_i128,10172899198159576307296112571152744168_i128,127445219715970327498089520809527415826_i128,(-78982450664554661183557624045752431985_i128),112382179500688810109899184075071250142_i128,(-16638910453079174786619170933210674229_i128)];
_9 = _7;
RET = _5 as f32;
_14 = 11_isize as f64;
_8 = _5 as f32;
RET = -_11;
_14 = (-176409571_i32) as f64;
_16 = '\u{ccf06}';
_7 = _9;
Goto(bb1)
}
bb1 = {
_11 = _3 as f32;
_17 = _12 as isize;
RET = _11;
_10 = _2;
RET = 51162459973848876508433853618535613566_i128 as f32;
RET = -_8;
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
25937 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_5 = false as u16;
RET = 1943277454648848789_usize as f32;
_2 = _10;
_19 = [7_usize,6_usize,13398827999251835663_usize,7_usize];
_20 = _17;
_9 = _7;
_9 = _7;
_14 = _8 as f64;
_19 = [2_usize,4_usize,17230814587664255841_usize,2_usize];
_2 = core::ptr::addr_of_mut!(_3);
_12 = 327009409121534518501803579888649439459_u128 as u8;
_21 = (-1493754409_i32);
_14 = 69266686982114770138726681394858136559_u128 as f64;
_18 = [1_usize,1_usize,7713549199259256693_usize,11989097543954081381_usize];
_1 = 7_usize as u8;
RET = -_8;
_6 = [124989247315186095016543696937472519160_i128,91947286197033378838797067167423595963_i128,40621778033598449027682289330730949253_i128,(-4113196975998177176204746511089259633_i128),(-96267625132874377385081825773316024655_i128),15836642408147680347176880002987733171_i128,(-89927233261714652657467126361358728252_i128),(-58550164688395323954729151257616053470_i128)];
_4 = !_1;
match (*_2) {
0 => bb6,
25937 => bb9,
_ => bb2
}
}
bb9 = {
_7 = _9;
_3 = _5;
_11 = -RET;
_6 = [101928749042564927698848660571115260853_i128,140856675300615337179778557765468257362_i128,(-14454358896280414683120816932357988575_i128),158013136352720071756773993611630011516_i128,(-1380289363177868436036874279997952848_i128),93446474027603302202654638353124366926_i128,38313641852202118087239860646541684477_i128,135699071502650866164819863675540318347_i128];
_12 = _4 - _1;
_7 = _9;
RET = _11 - _11;
_13 = _10;
_24 = [(-112_i8),85_i8,29_i8];
_12 = _4 << _17;
_1 = 87131800953077596360649616585578618826_u128 as u8;
_22 = RET + RET;
_16 = '\u{9cebf}';
_24 = [(-64_i8),52_i8,(-120_i8)];
_9 = _7;
_12 = _1;
_10 = core::ptr::addr_of_mut!(_3);
Goto(bb10)
}
bb10 = {
_25 = -_14;
RET = 140459166121323602056315123446739977093_i128 as f32;
_7 = core::ptr::addr_of!(_23);
_2 = _13;
_9 = core::ptr::addr_of!((*_7));
Call(_17 = core::intrinsics::bswap(_20), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_9 = core::ptr::addr_of!((*_7));
_23 = true & false;
_11 = _22 - _22;
_24 = [(-102_i8),27_i8,(-72_i8)];
_18 = [8905957499265596483_usize,0_usize,6_usize,4648165964358298045_usize];
_26 = _16;
RET = _22;
_6 = [63018467463069700970602545199845214005_i128,(-79340874108552520810994145330246377045_i128),(-157549258519565035249606368911153503373_i128),(-27960776479627371507565625300181813532_i128),(-57671746588257266060968121400583829798_i128),(-37682459220674219828168266268724290190_i128),(-115520098370137606323402985954465530683_i128),(-163475430025527383669912819303549420805_i128)];
_9 = _7;
_23 = !false;
_6 = [(-101526360828159934315525089969961798201_i128),(-116086271864253698609450193360550189314_i128),(-140775239625098273917846028105792844720_i128),163523823800800121152090926712421075831_i128,83723729327290624007392704165878583251_i128,(-7652653672468528371139645318083895261_i128),(-54043211329282588189719948929833905071_i128),(-158492205568032940462668737718799900677_i128)];
_7 = _9;
_17 = _20 - _20;
_28 = core::ptr::addr_of_mut!(_20);
_6 = [(-40703945365929240723574479339541464863_i128),(-162339896543971500113801315043022004358_i128),(-29155602018350404398105359124213881809_i128),(-11348417466537335281286772401620648170_i128),(-135323347590582141020595931471236133183_i128),(-3206370480426739858300833644133694393_i128),21851827728492094192269365531641787439_i128,(-5226390817705000775934057485345561067_i128)];
_16 = _26;
_20 = _23 as isize;
_2 = core::ptr::addr_of_mut!((*_10));
_8 = _11;
_28 = core::ptr::addr_of_mut!((*_28));
_27 = (_26,);
RET = _8;
RET = _21 as f32;
Call(_12 = core::intrinsics::transmute(_1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_9 = core::ptr::addr_of!(_23);
_20 = _17 >> _17;
_18 = [3_usize,0_usize,7514248903405656058_usize,0_usize];
_27 = (_16,);
Goto(bb13)
}
bb13 = {
_23 = !false;
_14 = 1130267647940928907128127425846619630_u128 as f64;
_12 = _4;
_21 = !(-1336398360_i32);
_20 = _16 as isize;
Call(_3 = core::intrinsics::transmute(_5), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_7 = core::ptr::addr_of!((*_9));
_9 = _7;
_23 = true;
_5 = (*_2);
_6 = [(-72454814439826965930869001134285153870_i128),(-23307310468044838210163348802718169649_i128),54993005679442912581604346227288125429_i128,(-57708551770304256742556901258373099761_i128),87045509555806374285897380262090626377_i128,(-94913723908137265250561872237091751628_i128),(-130482472487153586028838173909137985082_i128),114230306782331196779092634746606982523_i128];
_5 = _23 as u16;
_9 = _7;
_12 = _1 ^ _4;
_3 = _22 as u16;
_20 = _26 as isize;
_30 = core::ptr::addr_of_mut!(_6);
_19 = [6489066558877737500_usize,7_usize,6795147391378170153_usize,3_usize];
_5 = (*_10);
_2 = _13;
_27 = (_16,);
_24 = [(-83_i8),15_i8,(-123_i8)];
_20 = _17;
_26 = _27.0;
_2 = _10;
_14 = 2493943516411048108_usize as f64;
_13 = core::ptr::addr_of_mut!(_5);
_31 = (*_28);
_22 = _8;
_22 = _11 + _11;
_6 = [(-78690072376117739337804229522043137188_i128),(-27516390974647219371137406939630864768_i128),(-56971406037396308888606043968132422916_i128),(-41043364275684507564297509402052952164_i128),162563094482223486852846104970956938976_i128,(-145098594398999739899432917943139574384_i128),29277545658136642315575259767938252108_i128,(-128040703254931408199332369787299334190_i128)];
_7 = core::ptr::addr_of!(_23);
_13 = core::ptr::addr_of_mut!((*_13));
_9 = core::ptr::addr_of!((*_7));
_29 = _12 != _4;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(14_usize, 26_usize, Move(_26), 24_usize, Move(_24), 12_usize, Move(_12), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(14_usize, 6_usize, Move(_6), 19_usize, Move(_19), 3_usize, Move(_3), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(14_usize, 21_usize, Move(_21), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: i16,mut _2: [i128; 8],mut _3: (f32, u8, u16, isize),mut _4: [i128; 8],mut _5: [i128; 8],mut _6: u8,mut _7: [usize; 4],mut _8: (f32, u8, u16, isize),mut _9: u8,mut _10: (f32, u8, u16, isize),mut _11: u16,mut _12: u8,mut _13: f32,mut _14: u16) -> i16 {
mir! {
type RET = i16;
let _15: [usize; 4];
let _16: Adt52;
let _17: Adt53;
let _18: Adt52;
let _19: bool;
let _20: *mut isize;
let _21: (isize, *mut [i128; 8], (f32, u8, u16, isize), [i8; 3]);
let _22: (f32, u8, u16, isize);
let _23: f32;
let _24: Adt41;
let _25: i32;
let _26: i16;
let _27: isize;
let _28: [usize; 4];
let _29: isize;
let _30: f32;
let _31: [usize; 4];
let _32: *const f32;
let _33: i128;
let _34: [i128; 8];
let _35: [i8; 3];
let _36: [usize; 4];
let _37: f32;
let _38: f64;
let _39: f32;
let _40: u32;
let _41: f32;
let _42: isize;
let _43: [usize; 4];
let _44: ();
let _45: ();
{
_15 = [4209686609951721927_usize,1_usize,3316186061902058493_usize,0_usize];
_8.1 = (-85932580711916065708527018944602476612_i128) as u8;
_14 = !_8.2;
_14 = _10.2;
_3.0 = -_13;
_10.0 = -_8.0;
_12 = _10.1 + _9;
_12 = _10.1;
_5 = _2;
_3 = _10;
_2 = [137799781877416427250884326114382427218_i128,(-145035115761825695156196361615171730444_i128),(-38151104004929998492033771675000529386_i128),(-71082346892331407003970301503558156986_i128),(-83815445219976698381584684601632928708_i128),102553581732672940679226371728850179727_i128,136502804642792920883127664083669912124_i128,(-53042883888425238175026541966586073668_i128)];
_13 = (-52572460532614272641912753284821041870_i128) as f32;
_18 = Adt52::Variant0 { fld0: _15 };
_8.3 = 1908115248_u32 as isize;
place!(Field::<[usize; 4]>(Variant(_18, 0), 0)) = [17455319512911601278_usize,11023337103198775512_usize,4_usize,1_usize];
Call(_3.3 = core::intrinsics::transmute(_8.3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_18 = Adt52::Variant1 { fld0: (-1216041270_i32) };
_16 = Adt52::Variant1 { fld0: 1496739587_i32 };
_3.0 = _13 + _8.0;
_3.2 = _14 >> _8.2;
_1 = '\u{aaef2}' as i16;
place!(Field::<i32>(Variant(_18, 1), 0)) = 797321586_i32 * (-632975447_i32);
_1 = 20478_i16;
_11 = _3.2 << _3.1;
_10 = (_13, _12, _11, _3.3);
_3.1 = _8.1 | _9;
_16 = Adt52::Variant1 { fld0: Field::<i32>(Variant(_18, 1), 0) };
_10.1 = _12;
_19 = false;
_8.0 = 8448432994276417507444126720085639011_i128 as f32;
_1 = 12903_i16;
_10.1 = !_12;
_3.3 = _8.3;
_21.1 = core::ptr::addr_of_mut!(_5);
_8.2 = !_3.2;
_8.1 = _3.1 + _12;
SetDiscriminant(_18, 1);
match _1 {
0 => bb2,
1 => bb3,
12903 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_21.2.1 = _3.1 | _8.1;
_22.3 = !_10.3;
_22.0 = _8.0 - _3.0;
_12 = _10.1;
RET = !_1;
_6 = _8.1 & _10.1;
SetDiscriminant(_16, 0);
place!(Field::<[usize; 4]>(Variant(_16, 0), 0)) = [6805183686495638655_usize,0_usize,3_usize,3_usize];
match _1 {
0 => bb6,
1 => bb7,
12903 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
_18 = Adt52::Variant1 { fld0: (-1216041270_i32) };
_16 = Adt52::Variant1 { fld0: 1496739587_i32 };
_3.0 = _13 + _8.0;
_3.2 = _14 >> _8.2;
_1 = '\u{aaef2}' as i16;
place!(Field::<i32>(Variant(_18, 1), 0)) = 797321586_i32 * (-632975447_i32);
_1 = 20478_i16;
_11 = _3.2 << _3.1;
_10 = (_13, _12, _11, _3.3);
_3.1 = _8.1 | _9;
_16 = Adt52::Variant1 { fld0: Field::<i32>(Variant(_18, 1), 0) };
_10.1 = _12;
_19 = false;
_8.0 = 8448432994276417507444126720085639011_i128 as f32;
_1 = 12903_i16;
_10.1 = !_12;
_3.3 = _8.3;
_21.1 = core::ptr::addr_of_mut!(_5);
_8.2 = !_3.2;
_8.1 = _3.1 + _12;
SetDiscriminant(_18, 1);
match _1 {
0 => bb2,
1 => bb3,
12903 => bb5,
_ => bb4
}
}
bb8 = {
Return()
}
bb9 = {
_3.2 = _10.2 + _10.2;
_8 = (_3.0, _9, _3.2, _3.3);
_22.2 = _10.2 & _11;
_22.0 = -_3.0;
_1 = RET - RET;
place!(Field::<[usize; 4]>(Variant(_16, 0), 0)) = _15;
_22.1 = _10.1 + _6;
place!(Field::<[usize; 4]>(Variant(_16, 0), 0)) = [1_usize,10557052994539399781_usize,6_usize,4_usize];
_10.3 = 572973138_i32 as isize;
_10.1 = _22.1;
_26 = _1;
_10.0 = (-129058062646157496888256491640433884386_i128) as f32;
_22.0 = _26 as f32;
_4 = [138012565105278296063435406943925044268_i128,(-135890014619831356912216628094375675256_i128),(-40051402459840464412228397808141270947_i128),(-123851381314769050800514413183394136840_i128),50943585567134281666538422936922037575_i128,71084857485179291210935847438400075065_i128,66472092803119226947439173316929957414_i128,25978151789261890421367202953599439566_i128];
_8.1 = !_10.1;
_8 = _22;
_27 = _22.3;
place!(Field::<i32>(Variant(_18, 1), 0)) = -(-1587642113_i32);
_3.2 = !_8.2;
_8.0 = _13;
_18 = Adt52::Variant0 { fld0: _15 };
_18 = Adt52::Variant0 { fld0: _15 };
_8.2 = 17_i8 as u16;
Call(_10.0 = fn16(_8.1, _7, _21.2.1, _22.2, _8, _15, _10.1, _8.1, _3, _10.1, Field::<[usize; 4]>(Variant(_16, 0), 0)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5 = [150978175232605858318578098659908435137_i128,(-40862832901295730820556601692679569119_i128),(-82377915070431912821677593812268092660_i128),121630412469193451131936645212099983672_i128,(-53936878663374648468324287435829143736_i128),(-35727285293142100383623217878663155750_i128),92761134733498036115947624722655959826_i128,83428944229317978014089194467249080573_i128];
_24 = Adt41::Variant2 { fld0: 47822004661324325155818761379007070624_i128,fld1: '\u{d94b7}',fld2: _21.2.1 };
RET = _26 - _1;
_16 = Adt52::Variant1 { fld0: (-2142608093_i32) };
_25 = (-1866509149_i32) + 1840277135_i32;
_21.3 = [17_i8,(-11_i8),(-83_i8)];
RET = -_26;
_22.0 = _10.0;
place!(Field::<i32>(Variant(_16, 1), 0)) = _22.0 as i32;
SetDiscriminant(_18, 0);
_3.3 = _3.2 as isize;
_21.2.3 = _3.3;
_14 = _1 as u16;
Call(_21.2.0 = core::intrinsics::transmute(Field::<i32>(Variant(_16, 1), 0)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_6 = _21.2.1 & _21.2.1;
_22.3 = (-5215426622870158472_i64) as isize;
_3.0 = _10.0 - _22.0;
_1 = -RET;
place!(Field::<i128>(Variant(_24, 2), 0)) = (-83290096619749418125556089498666198408_i128) << _11;
_33 = -Field::<i128>(Variant(_24, 2), 0);
_22 = _8;
_22.1 = _6;
_3.1 = _21.2.1 * _22.1;
_10.2 = _3.2;
_31 = _15;
_7 = _31;
_22 = (_3.0, _3.1, _3.2, _27);
_27 = RET as isize;
_21.2.3 = 11476806774686770115_u64 as isize;
_3.0 = _22.0 + _10.0;
place!(Field::<i32>(Variant(_16, 1), 0)) = _25 * _25;
_7 = [7921747542617925686_usize,5_usize,4779178871426227573_usize,7_usize];
_21.1 = core::ptr::addr_of_mut!(_2);
_25 = 8481721741440354898_i64 as i32;
_33 = Field::<i128>(Variant(_24, 2), 0) >> _10.1;
_17 = Adt53::Variant0 { fld0: '\u{81dee}' };
_22.1 = !_9;
place!(Field::<char>(Variant(_17, 0), 0)) = '\u{e1f08}';
_26 = _1;
Goto(bb12)
}
bb12 = {
_18 = _16;
_2 = _5;
_3.0 = _21.2.0 - _10.0;
_36 = _7;
_21.2.2 = _3.2;
_8.0 = _22.0;
place!(Field::<char>(Variant(_17, 0), 0)) = '\u{60d}';
_23 = _3.0;
_38 = 11925573033668976442_usize as f64;
_32 = core::ptr::addr_of!(_10.0);
_7 = [2_usize,17491797517935040641_usize,15857024681213971277_usize,10725401155797845854_usize];
_26 = !RET;
_9 = _10.1 + Field::<u8>(Variant(_24, 2), 2);
Goto(bb13)
}
bb13 = {
_22.2 = !_10.2;
_18 = Adt52::Variant1 { fld0: Field::<i32>(Variant(_16, 1), 0) };
place!(Field::<char>(Variant(_24, 2), 1)) = Field::<char>(Variant(_17, 0), 0);
_14 = Field::<char>(Variant(_24, 2), 1) as u16;
_12 = _3.1;
_18 = Adt52::Variant0 { fld0: _15 };
_35 = [123_i8,39_i8,111_i8];
_8.3 = -_22.3;
_30 = -(*_32);
_4 = [Field::<i128>(Variant(_24, 2), 0),_33,_33,_33,Field::<i128>(Variant(_24, 2), 0),_33,Field::<i128>(Variant(_24, 2), 0),_33];
_19 = _9 == _9;
Call(_12 = core::intrinsics::bswap(_8.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_21.3 = [8_i8,93_i8,67_i8];
_21.3 = [4_i8,40_i8,(-49_i8)];
_10.1 = _6;
_43 = [0_usize,18068789546569941369_usize,1172582460484576837_usize,13347980886026345298_usize];
_37 = (-22_i8) as f32;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(15_usize, 6_usize, Move(_6), 43_usize, Move(_43), 31_usize, Move(_31), 25_usize, Move(_25)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(15_usize, 33_usize, Move(_33), 1_usize, Move(_1), 19_usize, Move(_19), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(15_usize, 2_usize, Move(_2), 26_usize, Move(_26), 45_usize, _45, 45_usize, _45), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: u8,mut _2: [usize; 4],mut _3: u8,mut _4: u16,mut _5: (f32, u8, u16, isize),mut _6: [usize; 4],mut _7: u8,mut _8: u8,mut _9: (f32, u8, u16, isize),mut _10: u8,mut _11: [usize; 4]) -> f32 {
mir! {
type RET = f32;
let _12: [i8; 3];
let _13: (f32, u8, u16, isize);
let _14: u128;
let _15: f64;
let _16: u32;
let _17: u32;
let _18: [usize; 4];
let _19: (*const u128, isize);
let _20: Adt55;
let _21: i16;
let _22: (char,);
let _23: Adt54;
let _24: f32;
let _25: u64;
let _26: i16;
let _27: [usize; 4];
let _28: [i8; 3];
let _29: isize;
let _30: (f32, u8, u16, isize);
let _31: *const bool;
let _32: [u64; 4];
let _33: [usize; 4];
let _34: [i8; 3];
let _35: i8;
let _36: [bool; 3];
let _37: [bool; 3];
let _38: [bool; 3];
let _39: isize;
let _40: (char,);
let _41: bool;
let _42: u64;
let _43: i64;
let _44: (char,);
let _45: ();
let _46: ();
{
_9.1 = _1;
_9.3 = !_5.3;
_5.3 = _9.3 >> _10;
_13.3 = _5.3;
_13.0 = -_9.0;
_5.1 = _3 + _10;
_4 = !_9.2;
_13 = (_9.0, _1, _9.2, _5.3);
_12 = [23_i8,(-11_i8),(-41_i8)];
_14 = true as u128;
RET = -_9.0;
_8 = _7 * _10;
Goto(bb1)
}
bb1 = {
_19.0 = core::ptr::addr_of!(_14);
_17 = 2797764889_u32;
_13.3 = _5.3 ^ _5.3;
_3 = 9056741112991248586236972069824063135_i128 as u8;
_16 = (-722931169_i32) as u32;
_19.1 = _14 as isize;
_22.0 = '\u{8af4c}';
RET = _13.0 * _9.0;
_22.0 = '\u{1f62c}';
_22 = ('\u{cdabf}',);
_18 = _6;
_13 = _5;
_7 = _13.1 | _5.1;
_5.2 = false as u16;
_9.2 = _4 ^ _4;
_24 = 0_i8 as f32;
_13.0 = -RET;
_22 = ('\u{98d9}',);
_7 = _5.1 * _5.1;
_26 = -9875_i16;
_21 = 1_usize as i16;
_20.fld1 = -_21;
Call(_19.1 = fn17(_9.2, _5.3, _9, _9.2, _8, _9, _9.2, _13, _9, _5.3, _13.3, _13.3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = _8;
_9.1 = !_13.1;
_11 = [1460418850771373918_usize,4_usize,2660647205441255597_usize,14835692263250544078_usize];
Call(_7 = fn18(_22.0, _9.1, _9.2, _19, _19.1, _8, _18, _10, _19, _5.3, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_20.fld2.1 = -_13.3;
_8 = _9.1 - _10;
_25 = 8332342757602500543_u64 & 5194563410381732752_u64;
_17 = _16;
_29 = (-34225819018781169827324016229599849217_i128) as isize;
_28 = [(-46_i8),83_i8,110_i8];
_25 = _8 as u64;
_9.1 = _5.1;
_25 = 2339138597799456395_u64 + 2370331245572948804_u64;
_3 = _7;
_28 = [(-44_i8),39_i8,(-16_i8)];
_8 = _5.1 + _13.1;
_27 = [5_usize,3_usize,1289983178792037916_usize,5021700196075848865_usize];
_19.1 = _5.3 - _20.fld2.1;
_30.3 = _22.0 as isize;
_20.fld1 = _5.1 as i16;
_1 = !_7;
_27 = _6;
_5 = (_24, _8, _4, _19.1);
_9.3 = _5.3 * _13.3;
_20.fld2 = _19;
_25 = 1972006546139611003_u64 * 7430451910956580594_u64;
_9.0 = -_24;
Call(_1 = core::intrinsics::bswap(_3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = (_13.0, _8, _5.2, _20.fld2.1);
RET = _9.0;
_30.0 = _9.0 - _9.0;
_21 = _20.fld1 | _20.fld1;
_30.2 = !_4;
_13.1 = _5.1;
_17 = _13.0 as u32;
_22 = ('\u{389f4}',);
_2 = [3774330204201133717_usize,3240426135563548124_usize,3_usize,10313401204806397251_usize];
_33 = _27;
_27 = [8556554154425862811_usize,4_usize,10957038831188815250_usize,11881527882915516336_usize];
_13.3 = _5.3 ^ _5.3;
_24 = RET - _13.0;
_22.0 = '\u{5c3bb}';
_22 = ('\u{582cc}',);
_13.3 = _5.3;
_9.3 = _20.fld2.1;
_20.fld2.1 = 2349245002610172281_i64 as isize;
Goto(bb5)
}
bb5 = {
_5.0 = -_24;
_13.3 = _19.1;
_19 = (_20.fld2.0, _5.3);
_9.1 = !_10;
Goto(bb6)
}
bb6 = {
_2 = _11;
Goto(bb7)
}
bb7 = {
_9.1 = _8 - _5.1;
_11 = _33;
_30 = (_24, _7, _5.2, _5.3);
_36 = [true,false,false];
_8 = _13.1 >> _4;
_4 = _30.2 + _30.2;
_13.3 = !_9.3;
_30.1 = _5.1 + _7;
_13.3 = _9.3;
_4 = !_5.2;
_32 = [_25,_25,_25,_25];
_9 = (_24, _30.1, _4, _5.3);
_15 = _25 as f64;
_12 = [19_i8,(-110_i8),94_i8];
_9.1 = _8 & _30.1;
_9.0 = -_5.0;
_37 = [false,true,false];
_6 = _18;
_10 = !_30.1;
_5.0 = -_9.0;
_24 = 7503340941079814912_usize as f32;
_8 = _25 as u8;
_20.fld2.0 = core::ptr::addr_of!(_14);
_34 = [(-48_i8),(-26_i8),(-97_i8)];
_16 = _17 * _17;
_38 = [true,false,false];
_28 = [65_i8,72_i8,(-21_i8)];
Goto(bb8)
}
bb8 = {
_40.0 = _22.0;
_39 = _19.1;
RET = _30.0 + _30.0;
_31 = core::ptr::addr_of!(_41);
_38 = [true,false,false];
_9 = (_30.0, _5.1, _30.2, _13.3);
_20.fld1 = (-21532165924499133590002935874153473532_i128) as i16;
_22.0 = _40.0;
_26 = true as i16;
_19.1 = _21 as isize;
_4 = !_30.2;
_20.fld2 = _19;
_35 = (-89_i8) - 31_i8;
_19 = (_20.fld2.0, _30.3);
_9.1 = !_1;
_44.0 = _22.0;
_24 = _13.0 * _5.0;
_5.1 = _13.1 * _13.1;
_31 = core::ptr::addr_of!(_41);
_38 = [false,false,false];
_38 = [false,false,false];
_41 = true;
_17 = _16;
_24 = _9.0;
_14 = 65030386158316687477067345920293475496_i128 as u128;
_7 = _3 * _9.1;
Goto(bb9)
}
bb9 = {
Call(_45 = dump_var(16_usize, 1_usize, Move(_1), 7_usize, Move(_7), 8_usize, Move(_8), 32_usize, Move(_32)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_45 = dump_var(16_usize, 21_usize, Move(_21), 6_usize, Move(_6), 3_usize, Move(_3), 10_usize, Move(_10)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_45 = dump_var(16_usize, 36_usize, Move(_36), 41_usize, Move(_41), 38_usize, Move(_38), 34_usize, Move(_34)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_45 = dump_var(16_usize, 25_usize, Move(_25), 37_usize, Move(_37), 2_usize, Move(_2), 35_usize, Move(_35)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: u16,mut _2: isize,mut _3: (f32, u8, u16, isize),mut _4: u16,mut _5: u8,mut _6: (f32, u8, u16, isize),mut _7: u16,mut _8: (f32, u8, u16, isize),mut _9: (f32, u8, u16, isize),mut _10: isize,mut _11: isize,mut _12: isize) -> isize {
mir! {
type RET = isize;
let _13: i64;
let _14: ();
let _15: ();
{
_4 = _1;
_3.3 = _12 & _2;
_7 = _1;
_3 = (_8.0, _5, _9.2, _2);
_8.1 = _6.1;
_3.2 = _8.0 as u16;
_8.3 = !_12;
_3.1 = 8898803655878567927_i64 as u8;
_8.0 = _3.0;
_3.3 = !_12;
_9.1 = 2759733892562594024_i64 as u8;
_3.3 = -_8.3;
_6 = (_3.0, _5, _1, _10);
RET = -_6.3;
_6 = _9;
_12 = !_11;
_9.3 = RET & _2;
_9.3 = _10;
RET = !_2;
RET = -_8.3;
_3.0 = -_8.0;
_9 = (_3.0, _8.1, _7, _3.3);
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(17_usize, 2_usize, Move(_2), 4_usize, Move(_4), 11_usize, Move(_11), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: char,mut _2: u8,mut _3: u16,mut _4: (*const u128, isize),mut _5: isize,mut _6: u8,mut _7: [usize; 4],mut _8: u8,mut _9: (*const u128, isize),mut _10: isize,mut _11: u16) -> u8 {
mir! {
type RET = u8;
let _12: *const i32;
let _13: ();
let _14: ();
{
RET = _8 | _8;
_2 = RET & _6;
_4.1 = _10 << RET;
_9 = (_4.0, _4.1);
_4 = (_9.0, _9.1);
_6 = 935185565_u32 as u8;
_11 = _3 | _3;
_1 = '\u{36206}';
_2 = RET - RET;
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(18_usize, 11_usize, Move(_11), 6_usize, Move(_6), 7_usize, Move(_7), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [usize; 4],mut _2: (char,),mut _3: *mut [i128; 8],mut _4: [usize; 4],mut _5: *mut [i128; 8],mut _6: [usize; 4],mut _7: [bool; 3],mut _8: [usize; 4],mut _9: *mut [i128; 8],mut _10: *mut [i128; 8],mut _11: [usize; 4],mut _12: (char,),mut _13: [usize; 4],mut _14: [i8; 3],mut _15: u8) -> char {
mir! {
type RET = char;
let _16: [u64; 4];
let _17: isize;
let _18: *const f32;
let _19: isize;
let _20: Adt50;
let _21: [bool; 3];
let _22: Adt43;
let _23: (char,);
let _24: (f32, u8, u16, isize);
let _25: i64;
let _26: isize;
let _27: Adt52;
let _28: isize;
let _29: *const i16;
let _30: isize;
let _31: f64;
let _32: bool;
let _33: Adt52;
let _34: [bool; 3];
let _35: f64;
let _36: i8;
let _37: bool;
let _38: [bool; 3];
let _39: isize;
let _40: ();
let _41: ();
{
_3 = _10;
RET = _2.0;
_2 = (_12.0,);
_3 = _10;
_4 = _8;
_15 = 14042_u16 as u8;
_2 = (_12.0,);
RET = _12.0;
_14 = [(-101_i8),(-84_i8),81_i8];
_15 = 82_u8;
_11 = [7_usize,5339779007565692911_usize,2048467019069936803_usize,1386367567874702150_usize];
_12.0 = _2.0;
_10 = _5;
RET = _2.0;
_3 = _10;
_17 = _2.0 as isize;
RET = _12.0;
_2 = (_12.0,);
_6 = [0_usize,13791619163831344871_usize,8182466212495740520_usize,13503716033353760394_usize];
_1 = _13;
_4 = [2_usize,6_usize,3_usize,15900596858176233802_usize];
_3 = _10;
_6 = [11354529675436289856_usize,6_usize,6_usize,6_usize];
_12.0 = RET;
_3 = _5;
_19 = !_17;
_13 = [18100050966949009178_usize,7691093482319281067_usize,2_usize,3899646828683025831_usize];
Goto(bb1)
}
bb1 = {
_14 = [47_i8,(-91_i8),0_i8];
RET = _12.0;
_10 = _9;
_12 = (_2.0,);
_14 = [2_i8,96_i8,38_i8];
_15 = !192_u8;
_20.fld0.2 = core::ptr::addr_of_mut!(_20.fld2);
_20.fld0.0 = 70647581401492692537536652116235393276_i128 as u128;
_20.fld1 = !_15;
_20.fld0.4.0 = (-61_i8) as u32;
_2 = _12;
_20.fld0.1 = !_15;
_2.0 = _12.0;
_20.fld0.5 = core::ptr::addr_of_mut!(_24.2);
_23 = (_2.0,);
_23.0 = _12.0;
_7 = [true,true,false];
_24.0 = _20.fld0.0 as f32;
_24.0 = 31063_u16 as f32;
Call(_25 = core::intrinsics::bswap(3084964556326708579_i64), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2.0 = RET;
_23 = (_2.0,);
_20.fld1 = _15;
_16 = [14636850333723178605_u64,13998094348631734149_u64,12464239388237875637_u64,8043392907541423569_u64];
_15 = 105_i8 as u8;
_21 = _7;
_2 = (_23.0,);
_27 = Adt52::Variant1 { fld0: 653839518_i32 };
_20.fld0.4.1 = core::ptr::addr_of!(_20.fld3);
_24.0 = (-126_i8) as f32;
_2.0 = _23.0;
_20.fld0.2 = core::ptr::addr_of_mut!(_20.fld2);
_25 = 4028579693260281078_i64;
_20.fld0.4.1 = core::ptr::addr_of!(_20.fld3);
_28 = _17 ^ _19;
_27 = Adt52::Variant1 { fld0: (-1571359211_i32) };
_24.2 = 24833_u16;
_2 = (_12.0,);
_25 = 3788793816220488884_i64;
_20.fld0.3 = core::ptr::addr_of!(_20.fld0.0);
_20.fld2 = -_19;
_15 = _20.fld0.1;
_6 = [3399044840005603363_usize,714015922023980708_usize,4_usize,2_usize];
_26 = !_28;
_18 = core::ptr::addr_of!(_24.0);
_17 = !_28;
_17 = (-1315349533_i32) as isize;
_19 = _20.fld0.1 as isize;
match _25 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
3788793816220488884 => bb9,
_ => bb8
}
}
bb3 = {
_14 = [47_i8,(-91_i8),0_i8];
RET = _12.0;
_10 = _9;
_12 = (_2.0,);
_14 = [2_i8,96_i8,38_i8];
_15 = !192_u8;
_20.fld0.2 = core::ptr::addr_of_mut!(_20.fld2);
_20.fld0.0 = 70647581401492692537536652116235393276_i128 as u128;
_20.fld1 = !_15;
_20.fld0.4.0 = (-61_i8) as u32;
_2 = _12;
_20.fld0.1 = !_15;
_2.0 = _12.0;
_20.fld0.5 = core::ptr::addr_of_mut!(_24.2);
_23 = (_2.0,);
_23.0 = _12.0;
_7 = [true,true,false];
_24.0 = _20.fld0.0 as f32;
_24.0 = 31063_u16 as f32;
Call(_25 = core::intrinsics::bswap(3084964556326708579_i64), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_23 = (RET,);
_14 = [(-18_i8),2_i8,(-126_i8)];
_28 = _26 | _19;
match _24.2 {
0 => bb7,
1 => bb2,
2 => bb8,
3 => bb10,
24833 => bb12,
_ => bb11
}
}
bb10 = {
_14 = [47_i8,(-91_i8),0_i8];
RET = _12.0;
_10 = _9;
_12 = (_2.0,);
_14 = [2_i8,96_i8,38_i8];
_15 = !192_u8;
_20.fld0.2 = core::ptr::addr_of_mut!(_20.fld2);
_20.fld0.0 = 70647581401492692537536652116235393276_i128 as u128;
_20.fld1 = !_15;
_20.fld0.4.0 = (-61_i8) as u32;
_2 = _12;
_20.fld0.1 = !_15;
_2.0 = _12.0;
_20.fld0.5 = core::ptr::addr_of_mut!(_24.2);
_23 = (_2.0,);
_23.0 = _12.0;
_7 = [true,true,false];
_24.0 = _20.fld0.0 as f32;
_24.0 = 31063_u16 as f32;
Call(_25 = core::intrinsics::bswap(3084964556326708579_i64), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
Return()
}
bb12 = {
_15 = !_20.fld1;
_1 = _8;
_21 = [true,false,false];
_2 = (_12.0,);
_20.fld0.5 = core::ptr::addr_of_mut!(_24.2);
_27 = Adt52::Variant0 { fld0: _11 };
_10 = _3;
Goto(bb13)
}
bb13 = {
_15 = !_20.fld0.1;
_20.fld2 = !_26;
RET = _12.0;
_28 = _20.fld2;
_21 = [true,true,true];
_24.1 = !_20.fld0.1;
_33 = Adt52::Variant1 { fld0: 869290238_i32 };
_11 = [5045704096820732204_usize,12860772574236978284_usize,16005112747069913482_usize,6_usize];
_33 = Adt52::Variant0 { fld0: _1 };
_17 = !_20.fld2;
_20.fld3 = 98_i8;
_23.0 = _2.0;
_32 = false;
_20.fld5 = _25;
_35 = _20.fld3 as f64;
_24.1 = _20.fld0.1;
_2 = _12;
_1 = [2_usize,10912969158840384897_usize,1_usize,1_usize];
_24.2 = 63301_u16;
_36 = !_20.fld3;
_13 = Field::<[usize; 4]>(Variant(_27, 0), 0);
_20.fld4 = _7;
_5 = _9;
_19 = _24.0 as isize;
match _25 {
0 => bb1,
1 => bb11,
2 => bb3,
3 => bb14,
4 => bb15,
3788793816220488884 => bb17,
_ => bb16
}
}
bb14 = {
_2.0 = RET;
_23 = (_2.0,);
_20.fld1 = _15;
_16 = [14636850333723178605_u64,13998094348631734149_u64,12464239388237875637_u64,8043392907541423569_u64];
_15 = 105_i8 as u8;
_21 = _7;
_2 = (_23.0,);
_27 = Adt52::Variant1 { fld0: 653839518_i32 };
_20.fld0.4.1 = core::ptr::addr_of!(_20.fld3);
_24.0 = (-126_i8) as f32;
_2.0 = _23.0;
_20.fld0.2 = core::ptr::addr_of_mut!(_20.fld2);
_25 = 4028579693260281078_i64;
_20.fld0.4.1 = core::ptr::addr_of!(_20.fld3);
_28 = _17 ^ _19;
_27 = Adt52::Variant1 { fld0: (-1571359211_i32) };
_24.2 = 24833_u16;
_2 = (_12.0,);
_25 = 3788793816220488884_i64;
_20.fld0.3 = core::ptr::addr_of!(_20.fld0.0);
_20.fld2 = -_19;
_15 = _20.fld0.1;
_6 = [3399044840005603363_usize,714015922023980708_usize,4_usize,2_usize];
_26 = !_28;
_18 = core::ptr::addr_of!(_24.0);
_17 = !_28;
_17 = (-1315349533_i32) as isize;
_19 = _20.fld0.1 as isize;
match _25 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
3788793816220488884 => bb9,
_ => bb8
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_28 = 24691_i16 as isize;
_39 = _26 - _17;
Goto(bb18)
}
bb18 = {
Call(_40 = dump_var(19_usize, 4_usize, Move(_4), 13_usize, Move(_13), 12_usize, Move(_12), 23_usize, Move(_23)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_40 = dump_var(19_usize, 16_usize, Move(_16), 25_usize, Move(_25), 8_usize, Move(_8), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_40 = dump_var(19_usize, 2_usize, Move(_2), 11_usize, Move(_11), 39_usize, Move(_39), 41_usize, _41), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{e0490}'), std::hint::black_box((-108_isize)), std::hint::black_box((-65_i8)), std::hint::black_box((-17938_i16)), std::hint::black_box(1713996274_i32), std::hint::black_box((-6133403501775928821_i64)), std::hint::black_box((-52161293003974955794608955234965783145_i128)), std::hint::black_box(2_usize), std::hint::black_box(93_u8), std::hint::black_box(37072_u16), std::hint::black_box(1388290355_u32), std::hint::black_box(10780309064050443656_u64), std::hint::black_box(91719885768156677693152171883187556656_u128));
                
            }
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16),
fld1: *const i16,
fld2: isize,
fld3: *mut isize,
fld4: i16,
fld5: *const i32,
fld6: *const f32,

},
Variant1{
fld0: *const (u32, *const i8, *const bool),
fld1: *const [usize; 4],
fld2: *const i32,
fld3: f32,
fld4: usize,
fld5: i32,
fld6: i64,
fld7: *mut isize,

},
Variant2{
fld0: i128,
fld1: char,
fld2: u8,

},
Variant3{
fld0: u32,
fld1: i128,
fld2: [i128; 8],

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: [i128; 8],
fld1: (char,),
fld2: *mut u16,
fld3: ((f32, u8, u16, isize), i128, (u32, *const i8, *const bool), (*const u128, isize), (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16), i64, u32, u8, (*const u128, isize)),

},
Variant1{
fld0: bool,
fld1: *mut u16,
fld2: [usize; 4],
fld3: u128,
fld4: i16,
fld5: u64,
fld6: Adt41,
fld7: (isize, *mut [i128; 8], (f32, u8, u16, isize), [i8; 3]),

},
Variant2{
fld0: usize,
fld1: i128,
fld2: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16),
fld3: *const bool,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: u8,
fld1: *const i32,
fld2: (*const u128, isize),
fld3: i8,
fld4: ((f32, u8, u16, isize), i128, (u32, *const i8, *const bool), (*const u128, isize), (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16), i64, u32, u8, (*const u128, isize)),
fld5: *mut isize,

},
Variant1{
fld0: bool,
fld1: f32,
fld2: Adt42,
fld3: (isize, *mut [i128; 8], (f32, u8, u16, isize), [i8; 3]),
fld4: *mut u16,

},
Variant2{
fld0: u128,
fld1: (*const u128, isize),
fld2: Adt41,
fld3: i8,
fld4: i16,
fld5: i32,
fld6: *const [usize; 4],

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: f64,
fld1: char,
fld2: *const (u32, *const i8, *const bool),
fld3: (char,),

},
Variant1{
fld0: bool,
fld1: ((f32, u8, u16, isize), i128, (u32, *const i8, *const bool), (*const u128, isize), (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16), i64, u32, u8, (*const u128, isize)),
fld2: isize,
fld3: i8,
fld4: *const i32,
fld5: *const (u32, *const i8, *const bool),
fld6: *mut [i128; 8],
fld7: [i8; 3],

},
Variant2{
fld0: (char,),
fld1: char,
fld2: Adt43,
fld3: [i8; 3],
fld4: (*const u128, isize),

},
Variant3{
fld0: i16,
fld1: char,
fld2: Adt42,
fld3: ((f32, u8, u16, isize), i128, (u32, *const i8, *const bool), (*const u128, isize), (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16), i64, u32, u8, (*const u128, isize)),

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: [usize; 4],
fld1: usize,
fld2: Adt42,
fld3: f32,

},
Variant1{
fld0: (isize, *mut [i128; 8], (f32, u8, u16, isize), [i8; 3]),
fld1: [u64; 4],
fld2: (u32, *const i8, *const bool),

},
Variant2{
fld0: u16,
fld1: *const [usize; 4],
fld2: isize,
fld3: *const i16,
fld4: Adt41,

},
Variant3{
fld0: [bool; 3],
fld1: *const bool,
fld2: (f32, u8, u16, isize),
fld3: [u64; 4],
fld4: (isize, *mut [i128; 8], (f32, u8, u16, isize), [i8; 3]),
fld5: *const i8,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt46 {
fld0: *const [usize; 4],
fld1: *mut u16,
fld2: usize,
fld3: i8,
fld4: i16,
fld5: *const f32,
fld6: i64,
}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: Adt44,
fld1: Adt46,
fld2: u16,
fld3: *mut isize,
fld4: i16,
fld5: u32,
fld6: u128,

},
Variant1{
fld0: bool,
fld1: Adt45,
fld2: *const f32,

},
Variant2{
fld0: i32,
fld1: char,
fld2: *mut u16,
fld3: (f32, u8, u16, isize),

},
Variant3{
fld0: Adt42,
fld1: u32,
fld2: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16),

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: [i8; 3],
fld1: char,
fld2: Adt41,
fld3: u8,
fld4: Adt46,

},
Variant1{
fld0: *const [usize; 4],

},
Variant2{
fld0: *const i8,
fld1: u16,
fld2: *const f32,
fld3: Adt45,

},
Variant3{
fld0: usize,
fld1: char,
fld2: *const (u32, *const i8, *const bool),
fld3: (u32, *const i8, *const bool),
fld4: Adt43,
fld5: *const i8,
fld6: Adt47,
fld7: (*const u128, isize),

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [i8; 3],
fld1: char,
fld2: f64,
fld3: [usize; 4],
fld4: *const bool,
fld5: *const i32,
fld6: i64,
fld7: i128,

},
Variant1{
fld0: bool,
fld1: *const i8,
fld2: Adt46,
fld3: u64,
fld4: Adt42,
fld5: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16),

},
Variant2{
fld0: (u32, *const i8, *const bool),
fld1: *mut isize,
fld2: i8,

},
Variant3{
fld0: *const i8,
fld1: Adt46,
fld2: [bool; 3],
fld3: *const bool,
fld4: usize,
fld5: [i128; 8],
fld6: f64,
fld7: Adt43,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: (u128, u8, *mut isize, *const u128, (u32, *const i8, *const bool), *mut u16),
fld1: u8,
fld2: isize,
fld3: i8,
fld4: [bool; 3],
fld5: i64,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt43,
fld1: u128,

},
Variant1{
fld0: Adt48,
fld1: [i128; 8],
fld2: Adt41,
fld3: [i8; 3],
fld4: Adt45,
fld5: [u64; 4],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt52 {
Variant0{
fld0: [usize; 4],

},
Variant1{
fld0: i32,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: char,

},
Variant1{
fld0: Adt46,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: u32,
fld1: *const bool,
fld2: *mut isize,

},
Variant1{
fld0: *const i16,
fld1: usize,
fld2: Adt50,
fld3: i8,
fld4: Adt51,
fld5: (char,),

},
Variant2{
fld0: Adt50,
fld1: Adt51,
fld2: usize,
fld3: u128,
fld4: [i8; 3],
fld5: i128,
fld6: f32,

}}
#[derive(Debug)]
pub struct Adt55 {
fld0: Adt44,
fld1: i16,
fld2: (*const u128, isize),
}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt46,
fld1: Adt43,
fld2: Adt50,
fld3: u128,
fld4: i128,
fld5: f32,
fld6: (*const u128, isize),
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt49,
fld1: *const i32,
fld2: *const u128,

},
Variant1{
fld0: u32,

}}

