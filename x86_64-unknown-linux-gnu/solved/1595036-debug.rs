#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u16,mut _2: char,mut _3: u8,mut _4: i128,mut _5: usize) -> ([u32; 4],) {
mir! {
type RET = ([u32; 4],);
let _6: Adt54;
let _7: bool;
let _8: i64;
let _9: i16;
let _10: [char; 4];
let _11: [u8; 6];
let _12: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64));
let _13: [u64; 5];
let _14: *mut i128;
let _15: [char; 4];
let _16: [u8; 6];
let _17: isize;
let _18: u16;
let _19: u8;
let _20: ();
let _21: ();
{
_3 = 123_u8;
Goto(bb1)
}
bb1 = {
_5 = 3_usize;
RET.0[_5] = !2300069131_u32;
RET.0 = [2150900120_u32,190636840_u32,1129486609_u32,2162829369_u32];
RET.0[_5] = 1701913093_u32;
_1 = !52482_u16;
_4 = 8419356051433023348_u64 as i128;
_2 = '\u{646f7}';
RET.0 = [842268382_u32,71917298_u32,787706916_u32,1212163105_u32];
_2 = '\u{dba14}';
_3 = 242_u8 & 67_u8;
Goto(bb2)
}
bb2 = {
_1 = 17121_u16 | 14001_u16;
RET.0 = [3945634599_u32,2695885764_u32,3546233769_u32,3012030251_u32];
_3 = 37_u8 + 63_u8;
_2 = '\u{2ab75}';
_3 = 44_u8;
_1 = _3 as u16;
_1 = 58371_u16 >> _3;
RET.0[_5] = !3569674014_u32;
_4 = RET.0[_5] as i128;
Goto(bb3)
}
bb3 = {
RET.0 = [2263980086_u32,1172203618_u32,250832400_u32,1372526448_u32];
_4 = (-36045905020291246071528535999958131013_i128);
Goto(bb4)
}
bb4 = {
RET.0[_5] = 2801841395_u32;
_9 = 25069_i16 | 19517_i16;
_4 = 78559981988579336204239566724849829478_i128;
RET.0[_5] = 804282722_u32 + 3868584975_u32;
RET.0 = [2790546691_u32,2142868678_u32,3316953384_u32,1402080459_u32];
_9 = -(-17688_i16);
_8 = 116_i8 as i64;
_2 = '\u{fd191}';
RET.0 = [4239738397_u32,1908028825_u32,3799458720_u32,3233539264_u32];
_4 = 52651809773418727261315176080423208866_i128 & (-52594480793435118622347240912204980033_i128);
_7 = true;
_1 = 34378_u16 >> RET.0[_5];
_8 = -2714669887791738394_i64;
RET.0[_5] = 3917326293_u32;
_4 = RET.0[_5] as i128;
_7 = true;
RET.0 = [3982834795_u32,2125617156_u32,4215804864_u32,3291219623_u32];
_1 = !42118_u16;
Goto(bb5)
}
bb5 = {
_10[_5] = _2;
_10 = [_2,_2,_2,_2];
RET.0[_5] = 1772278431_u32 + 2398476157_u32;
_8 = 8218083696516320127_i64;
_2 = _10[_5];
_11 = [_3,_3,_3,_3,_3,_3];
_11[_5] = _9 as u8;
RET.0[_5] = _5 as u32;
_10 = [_2,_2,_2,_2];
_10 = [_2,_2,_2,_2];
_3 = _11[_5];
_4 = 93806828725153735416448193857314584316_i128;
Goto(bb6)
}
bb6 = {
RET.0 = [2733653741_u32,2713588177_u32,2118400446_u32,2474587850_u32];
_12.0 = _5;
Call(_11[_5] = fn1(RET.0[_5], RET, RET.0[_5], _10, RET.0[_5], RET, _9), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_12.5 = ((-50_i8), 1460973760572373394_u64);
Goto(bb8)
}
bb8 = {
_12.3.0 = core::ptr::addr_of!(_9);
_4 = (-41541533519828896704054562763755712784_i128) >> _12.5.0;
_12.1.1 = _12.5.1;
RET.0 = [3068609315_u32,913388345_u32,2330782188_u32,2641330997_u32];
_2 = '\u{8966c}';
_9 = 4241_i16 | 31918_i16;
_12.5.1 = _12.1.1;
_2 = '\u{1478b}';
_12.3.1 = _12.0 as f64;
_12.1.1 = _12.5.1;
_12.1 = _12.5;
_12.5 = (_12.1.0, _12.1.1);
_12.4 = !_1;
RET.0 = [3054852329_u32,1113516176_u32,3618151123_u32,2857851719_u32];
_12.3.2 = -_12.3.1;
_12.2 = 9223372036854775807_isize;
_4 = !54854442499084764417909116673443862509_i128;
_10 = [_2,_2,_2,_2];
_12.5.1 = _12.1.1 + _12.1.1;
_13 = [_12.5.1,_12.5.1,_12.5.1,_12.5.1,_12.1.1];
_5 = _9 as usize;
_7 = !false;
_12.1.1 = _12.5.1 & _12.5.1;
_14 = core::ptr::addr_of_mut!(_4);
RET.0 = [2806430280_u32,2125519014_u32,217438587_u32,2331788265_u32];
RET.0 = [1245881174_u32,1554937117_u32,1284543944_u32,2048196110_u32];
Goto(bb9)
}
bb9 = {
_7 = false;
_3 = 316619830109233598894786683656947890943_u128 as u8;
_10 = [_2,_2,_2,_2];
_12.0 = _5;
_10 = [_2,_2,_2,_2];
_1 = _12.4;
match _12.1.0 {
0 => bb1,
1 => bb4,
340282366920938463463374607431768211406 => bb10,
_ => bb8
}
}
bb10 = {
_4 = (-89599494547456866781424868059416465655_i128) | 51136219319094824586968451182564925345_i128;
_12.3.1 = _12.3.2 + _12.3.2;
Call(RET.0 = core::intrinsics::transmute(_4), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_1 = _12.5.0 as u16;
_13 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_1 = _12.4;
_10 = [_2,_2,_2,_2];
_8 = !1133764630401671444_i64;
Goto(bb12)
}
bb12 = {
_1 = _12.4 ^ _12.4;
_8 = 770392452_i32 as i64;
_2 = '\u{898e6}';
_13 = [_12.1.1,_12.5.1,_12.1.1,_12.5.1,_12.1.1];
_5 = _12.0 * _12.0;
_16 = [_3,_3,_3,_3,_3,_3];
_8 = (-5218153378949437317_i64);
_2 = '\u{8fcb6}';
_9 = (-13502_i16) << _3;
_12.1 = _12.5;
_15 = [_2,_2,_2,_2];
_9 = 8866_i16 & (-14826_i16);
_3 = !199_u8;
_1 = _12.4;
_12.2 = !9223372036854775807_isize;
_12.0 = _9 as usize;
_12.3.2 = _12.3.1 - _12.3.1;
_17 = _12.2 >> _12.0;
_3 = !149_u8;
_16 = [_3,_3,_3,_3,_3,_3];
_9 = -22669_i16;
_12.2 = _17;
_12.3.1 = _12.3.2 * _12.3.2;
_12.4 = _7 as u16;
_19 = _9 as u8;
_11 = _16;
match _12.5.0 {
0 => bb13,
1 => bb14,
340282366920938463463374607431768211406 => bb16,
_ => bb15
}
}
bb13 = {
_1 = _12.5.0 as u16;
_13 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_1 = _12.4;
_10 = [_2,_2,_2,_2];
_8 = !1133764630401671444_i64;
Goto(bb12)
}
bb14 = {
RET.0[_5] = 2801841395_u32;
_9 = 25069_i16 | 19517_i16;
_4 = 78559981988579336204239566724849829478_i128;
RET.0[_5] = 804282722_u32 + 3868584975_u32;
RET.0 = [2790546691_u32,2142868678_u32,3316953384_u32,1402080459_u32];
_9 = -(-17688_i16);
_8 = 116_i8 as i64;
_2 = '\u{fd191}';
RET.0 = [4239738397_u32,1908028825_u32,3799458720_u32,3233539264_u32];
_4 = 52651809773418727261315176080423208866_i128 & (-52594480793435118622347240912204980033_i128);
_7 = true;
_1 = 34378_u16 >> RET.0[_5];
_8 = -2714669887791738394_i64;
RET.0[_5] = 3917326293_u32;
_4 = RET.0[_5] as i128;
_7 = true;
RET.0 = [3982834795_u32,2125617156_u32,4215804864_u32,3291219623_u32];
_1 = !42118_u16;
Goto(bb5)
}
bb15 = {
_12.5 = ((-50_i8), 1460973760572373394_u64);
Goto(bb8)
}
bb16 = {
_12.1 = (_12.5.0, _12.5.1);
_10 = [_2,_2,_2,_2];
_12.5 = _12.1;
_12.1.0 = -_12.5.0;
Goto(bb17)
}
bb17 = {
Call(_20 = dump_var(0_usize, 13_usize, Move(_13), 3_usize, Move(_3), 11_usize, Move(_11), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_20 = dump_var(0_usize, 2_usize, Move(_2), 16_usize, Move(_16), 4_usize, Move(_4), 21_usize, _21), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u32,mut _2: ([u32; 4],),mut _3: u32,mut _4: [char; 4],mut _5: u32,mut _6: ([u32; 4],),mut _7: i16) -> u8 {
mir! {
type RET = u8;
let _8: i64;
let _9: (u32,);
let _10: (isize,);
let _11: char;
let _12: bool;
let _13: ([u32; 4],);
let _14: *const u128;
let _15: [char; 4];
let _16: [u64; 5];
let _17: [u32; 4];
let _18: ();
let _19: ();
{
_6 = (_2.0,);
RET = 123_u8;
_1 = !_3;
RET = (-15_i8) as u8;
RET = 19_u8 & 58_u8;
_2 = (_6.0,);
RET = !170_u8;
_7 = !11545_i16;
_9.0 = _3;
RET = 6751404760917694685_u64 as u8;
RET = !189_u8;
_2 = _6;
_9.0 = _1;
_9 = (_5,);
_7 = (-1297_i16) >> _5;
_9 = (_5,);
_3 = _5 * _5;
_6.0 = _2.0;
Call(RET = fn2(_1, _2, _3, _5, _1, _5, _5, _9.0, _2.0, _6, _9.0, _9, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = _6;
_3 = _9.0;
_7 = !(-28674_i16);
_2 = (_6.0,);
_8 = 2646641705226729616_i64 | (-8022253260864589050_i64);
_2 = (_6.0,);
_3 = _9.0 / _5;
_9.0 = _1 << _7;
Call(_9.0 = fn4(_1, _1, _5, _6.0, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = (9223372036854775807_isize,);
_6 = (_2.0,);
_6.0 = [_1,_9.0,_9.0,_9.0];
_5 = _1 | _9.0;
_8 = 307095164121742100010082004849571133129_u128 as i64;
_6.0 = [_3,_9.0,_9.0,_5];
_10 = ((-9223372036854775808_isize),);
_9 = (_5,);
_6 = (_2.0,);
_9.0 = _5 * _5;
_4 = ['\u{56a59}','\u{da199}','\u{19537}','\u{f0fa3}'];
RET = !13_u8;
_4 = ['\u{10857a}','\u{481e3}','\u{35c52}','\u{d5337}'];
RET = 214_u8 ^ 210_u8;
Goto(bb3)
}
bb3 = {
_8 = _7 as i64;
_4 = ['\u{d61a4}','\u{3dfd1}','\u{5d80d}','\u{a1931}'];
_11 = '\u{155d6}';
_2 = _6;
_12 = !false;
_10.0 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_12 = _9.0 == _9.0;
_6 = _2;
_9 = (_3,);
_1 = _9.0;
_2.0 = [_3,_9.0,_5,_5];
Goto(bb4)
}
bb4 = {
_9 = (_5,);
_4 = [_11,_11,_11,_11];
RET = _7 as u8;
_4 = [_11,_11,_11,_11];
_6 = _2;
_6 = (_2.0,);
Goto(bb5)
}
bb5 = {
_9 = (_5,);
RET = !77_u8;
_4 = [_11,_11,_11,_11];
_10.0 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_6 = (_2.0,);
_4 = [_11,_11,_11,_11];
RET = !18_u8;
_11 = '\u{2d2c8}';
_2 = (_6.0,);
_8 = !(-4907896134049690125_i64);
_6.0 = [_9.0,_5,_5,_9.0];
_3 = !_9.0;
_9.0 = !_3;
_7 = 12745_i16;
_4 = [_11,_11,_11,_11];
match _7 {
0 => bb4,
1 => bb6,
12745 => bb8,
_ => bb7
}
}
bb6 = {
_9 = (_5,);
_4 = [_11,_11,_11,_11];
RET = _7 as u8;
_4 = [_11,_11,_11,_11];
_6 = _2;
_6 = (_2.0,);
Goto(bb5)
}
bb7 = {
_2 = _6;
_3 = _9.0;
_7 = !(-28674_i16);
_2 = (_6.0,);
_8 = 2646641705226729616_i64 | (-8022253260864589050_i64);
_2 = (_6.0,);
_3 = _9.0 / _5;
_9.0 = _1 << _7;
Call(_9.0 = fn4(_1, _1, _5, _6.0, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
_7 = (-2166_i16);
_10.0 = !(-25_isize);
_13.0 = _6.0;
_10 = ((-63_isize),);
_2.0 = _13.0;
_6 = (_13.0,);
_6.0 = [_3,_9.0,_9.0,_9.0];
_9.0 = _7 as u32;
_15 = _4;
_16 = [16024527998430860402_u64,7046768203584481641_u64,6444816620267288129_u64,8517454965993101831_u64,11111462980820111769_u64];
_3 = _1;
_11 = '\u{56f84}';
_13.0 = [_5,_5,_5,_5];
_9.0 = !_1;
_9.0 = _5 + _3;
RET = 184_u8 ^ 7_u8;
_10 = ((-92_isize),);
_9 = (_3,);
_2.0 = [_5,_5,_5,_5];
_6 = (_13.0,);
_9 = (_1,);
_9 = (_5,);
_8 = 9114539319833354232_i64;
_17 = [_1,_5,_5,_9.0];
_15 = [_11,_11,_11,_11];
RET = _12 as u8;
_16 = [16007668514925995549_u64,11027488290243417732_u64,5369005959271598073_u64,4614077431184812512_u64,9256611172018819108_u64];
_9.0 = _5 & _5;
_5 = _9.0;
Goto(bb9)
}
bb9 = {
Call(_18 = dump_var(1_usize, 1_usize, Move(_1), 6_usize, Move(_6), 15_usize, Move(_15), 13_usize, Move(_13)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_18 = dump_var(1_usize, 7_usize, Move(_7), 2_usize, Move(_2), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u32,mut _2: ([u32; 4],),mut _3: u32,mut _4: u32,mut _5: u32,mut _6: u32,mut _7: u32,mut _8: u32,mut _9: [u32; 4],mut _10: ([u32; 4],),mut _11: u32,mut _12: (u32,),mut _13: u32) -> u8 {
mir! {
type RET = u8;
let _14: f64;
let _15: isize;
let _16: (i8, u64);
let _17: f64;
let _18: Adt52;
let _19: bool;
let _20: *mut i16;
let _21: Adt52;
let _22: u64;
let _23: i128;
let _24: ([u32; 4],);
let _25: *mut i128;
let _26: [char; 4];
let _27: bool;
let _28: (i8, u64);
let _29: i64;
let _30: [u64; 5];
let _31: isize;
let _32: Adt48;
let _33: [u8; 6];
let _34: f32;
let _35: char;
let _36: Adt55;
let _37: [i32; 1];
let _38: char;
let _39: ();
let _40: ();
{
Goto(bb1)
}
bb1 = {
_12.0 = _7;
_6 = _7;
_14 = 18754_u16 as f64;
_13 = 17157090026192043719_usize as u32;
_14 = 49049_u16 as f64;
_6 = !_1;
_12 = (_4,);
_9 = [_5,_6,_3,_1];
_3 = !_12.0;
_15 = (-9223372036854775808_isize);
_13 = !_1;
RET = 252_u8;
_12.0 = _8 | _13;
_16 = ((-46_i8), 11698539145551107742_u64);
match RET {
0 => bb2,
1 => bb3,
252 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5 = RET as u32;
_16.1 = 15308204528390843173_u64 + 8221033505099203018_u64;
_17 = _14;
_4 = _12.0;
_16.1 = !18071957329632096572_u64;
_10 = _2;
_12 = (_4,);
_16 = ((-56_i8), 13513642964978001606_u64);
match _15 {
0 => bb3,
1 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_14 = (-36493319851932864007058540404271329305_i128) as f64;
RET = (-1013676716081016447_i64) as u8;
_13 = _7;
_10.0 = [_12.0,_13,_4,_4];
_7 = _4;
RET = 206_u8;
_12 = (_11,);
RET = _15 as u8;
_2.0 = [_7,_7,_4,_1];
Goto(bb9)
}
bb9 = {
_10.0 = [_3,_4,_12.0,_8];
_7 = !_4;
_5 = _6 - _1;
_8 = _5;
_11 = _15 as u32;
_2.0 = _9;
_16.1 = 7342689243893437099_u64;
_11 = !_5;
_5 = _11 + _4;
_10.0 = _9;
_15 = (-74_isize) * 9223372036854775807_isize;
_2.0 = [_4,_3,_11,_1];
_16 = ((-67_i8), 3346104988025351882_u64);
_5 = !_12.0;
_7 = !_11;
_10 = (_2.0,);
_7 = 40625_u16 as u32;
_16.0 = -54_i8;
_5 = _11 >> _4;
_2.0 = [_13,_3,_7,_5];
_22 = !_16.1;
_10 = (_9,);
_2 = (_9,);
_15 = (-127_isize) << _6;
_2 = _10;
RET = 77_u8;
_23 = (-47376721005093894411318561348333296503_i128);
match _13 {
2474587850 => bb10,
_ => bb5
}
}
bb10 = {
_9 = [_5,_11,_6,_12.0];
_2.0 = [_4,_6,_5,_11];
_9 = [_5,_13,_11,_13];
_2 = _10;
_22 = _15 as u64;
_10.0 = [_3,_5,_8,_5];
_10 = _2;
Call(_5 = fn3(_8, _2, _2, _3, _2, _8, _12, _13, _4), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_26 = ['\u{36d78}','\u{3cdb0}','\u{6d007}','\u{49285}'];
_11 = _1;
_9 = [_3,_7,_5,_8];
_8 = 105554596105909531242716464778360658806_u128 as u32;
_19 = false;
_12.0 = _6;
_7 = !_5;
_22 = !_16.1;
_24 = (_2.0,);
_2.0 = _9;
_27 = !_19;
RET = 144_u8 - 69_u8;
_27 = _4 < _11;
_29 = !3614062536189098230_i64;
_25 = core::ptr::addr_of_mut!(_23);
_30 = [_16.1,_22,_22,_16.1,_16.1];
_11 = _7 / _13;
_28.0 = -_16.0;
_2 = _10;
_8 = _5;
_28.1 = !_22;
_30 = [_28.1,_22,_28.1,_16.1,_28.1];
_24.0 = [_11,_11,_7,_13];
_3 = (*_25) as u32;
_13 = '\u{6baa2}' as u32;
Goto(bb12)
}
bb12 = {
_24.0 = _10.0;
RET = 225_u8 + 19_u8;
_24 = (_9,);
_4 = _7 * _8;
_13 = !_6;
_11 = !_4;
_17 = _14;
_27 = _19;
_22 = _16.1;
_16.1 = _28.1 ^ _28.1;
_28.1 = _19 as u64;
_5 = _11;
_34 = (-9957_i16) as f32;
_28 = (_16.0, _16.1);
_1 = !_4;
_10.0 = _9;
_7 = '\u{162f8}' as u32;
Goto(bb13)
}
bb13 = {
_25 = core::ptr::addr_of_mut!(_23);
_30 = [_16.1,_28.1,_16.1,_16.1,_28.1];
_26 = ['\u{606f7}','\u{3b6c5}','\u{2bfb5}','\u{c3105}'];
_12.0 = _5;
match (*_25) {
0 => bb12,
1 => bb2,
292905645915844569052056046083434914953 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_31 = -_15;
RET = 119_u8;
_4 = !_8;
_13 = _12.0;
_22 = _16.1 - _28.1;
_10 = (_2.0,);
_36.fld3 = [459035895_i32];
_11 = 128220775663778052304233619628907957192_u128 as u32;
_2 = (_24.0,);
_36.fld2 = _25;
_12 = (_5,);
_12.0 = _19 as u32;
_35 = '\u{10f686}';
_24 = (_10.0,);
_23 = 147863153979560620473201861541463259444_i128;
_38 = _35;
_5 = _13 ^ _6;
_34 = _28.0 as f32;
_3 = _13 ^ _5;
RET = 159_u8 ^ 253_u8;
_38 = _35;
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(2_usize, 19_usize, Move(_19), 31_usize, Move(_31), 15_usize, Move(_15), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(2_usize, 8_usize, Move(_8), 4_usize, Move(_4), 3_usize, Move(_3), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(2_usize, 5_usize, Move(_5), 30_usize, Move(_30), 13_usize, Move(_13), 35_usize, Move(_35)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_39 = dump_var(2_usize, 2_usize, Move(_2), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: u32,mut _2: ([u32; 4],),mut _3: ([u32; 4],),mut _4: u32,mut _5: ([u32; 4],),mut _6: u32,mut _7: (u32,),mut _8: u32,mut _9: u32) -> u32 {
mir! {
type RET = u32;
let _10: ();
let _11: ();
{
_2 = (_3.0,);
RET = _9;
_1 = _9 - _8;
_8 = _7.0 * _1;
RET = _8 & _6;
RET = _9 % _7.0;
_9 = RET;
_2.0 = _3.0;
_1 = _9 / _7.0;
RET = !_1;
_7.0 = 52_i8 as u32;
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(3_usize, 8_usize, Move(_8), 7_usize, Move(_7), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: u32,mut _2: u32,mut _3: u32,mut _4: [u32; 4],mut _5: u32) -> u32 {
mir! {
type RET = u32;
let _6: f32;
let _7: (u32,);
let _8: i32;
let _9: (isize,);
let _10: [u32; 4];
let _11: i64;
let _12: isize;
let _13: [u32; 4];
let _14: ([u32; 4],);
let _15: i128;
let _16: bool;
let _17: ();
let _18: ();
{
RET = _5 % _5;
RET = !_5;
_4 = [RET,_1,_5,_5];
_7 = (_3,);
_5 = 171335589884280820052745004194535982450_u128 as u32;
_6 = RET as f32;
_7.0 = !_3;
_6 = 189_u8 as f32;
_8 = !(-1937305616_i32);
_9 = (9223372036854775807_isize,);
_3 = 120_u8 as u32;
_5 = _3;
_8 = 1060485087_i32;
_4 = [_7.0,_2,_7.0,RET];
RET = _5;
_11 = 4867470972586320039_i64 ^ 1058210098382389187_i64;
_8 = -(-933979590_i32);
RET = _6 as u32;
_3 = _1 << _5;
_9 = (9223372036854775807_isize,);
_2 = _1 - _7.0;
_7.0 = _3 ^ _2;
_12 = !_9.0;
Call(_11 = fn5(_12, _7.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = (_12,);
_10 = [_1,_7.0,_7.0,_2];
_14 = (_4,);
RET = _7.0 << _7.0;
_9 = (_12,);
_8 = 78686034_i32;
_14 = (_4,);
_5 = _7.0 & RET;
_1 = _2 ^ _5;
_9 = (_12,);
_1 = RET << _11;
_1 = _5;
_1 = _2;
_3 = _5 & RET;
_1 = _5;
_11 = !(-3869424201245259740_i64);
_2 = _1;
_14.0 = [_2,_1,_1,_1];
_8 = -1339055665_i32;
_7 = (_1,);
Goto(bb2)
}
bb2 = {
Call(_17 = dump_var(4_usize, 9_usize, Move(_9), 11_usize, Move(_11), 12_usize, Move(_12), 8_usize, Move(_8)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_17 = dump_var(4_usize, 5_usize, Move(_5), 7_usize, Move(_7), 18_usize, _18, 18_usize, _18), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: u32) -> i64 {
mir! {
type RET = i64;
let _3: Adt49;
let _4: u16;
let _5: &'static i8;
let _6: isize;
let _7: f32;
let _8: Adt41;
let _9: u64;
let _10: Adt48;
let _11: u16;
let _12: isize;
let _13: Adt54;
let _14: f32;
let _15: [i32; 1];
let _16: bool;
let _17: [u32; 4];
let _18: [char; 4];
let _19: [i32; 1];
let _20: *mut i128;
let _21: char;
let _22: *mut *mut char;
let _23: [char; 4];
let _24: i16;
let _25: [u64; 5];
let _26: bool;
let _27: ([u32; 4],);
let _28: u8;
let _29: f64;
let _30: f64;
let _31: ([u32; 4],);
let _32: [u32; 4];
let _33: [char; 4];
let _34: Adt47;
let _35: Adt46;
let _36: bool;
let _37: Adt47;
let _38: [u64; 5];
let _39: Adt40;
let _40: ();
let _41: ();
{
RET = 3561409341025199111_i64;
_4 = 260127171562751989724060829339149872810_u128 as u16;
_1 = (-9223372036854775808_isize);
_2 = 2935086607_u32 | 2318789478_u32;
_2 = !3671572517_u32;
_6 = -_1;
_1 = -_6;
_6 = _1;
RET = -(-673357197745724777_i64);
_2 = !559386249_u32;
_4 = 20_u16;
RET = -(-8811945373512462552_i64);
_4 = !51141_u16;
_1 = -_6;
_6 = (-41_i8) as isize;
RET = 412623994691481567_i64;
Goto(bb1)
}
bb1 = {
RET = (-7909438112488241344_i64) << _6;
_4 = 26477_i16 as u16;
_7 = 7213_i16 as f32;
RET = 1760327335578068424_i64 - (-7522113846738974934_i64);
Goto(bb2)
}
bb2 = {
_11 = _4;
_9 = _7 as u64;
_2 = 2226456808_u32 * 1833826420_u32;
_11 = 1_usize as u16;
_6 = _1 ^ _1;
_11 = _4 - _4;
_12 = _6;
_12 = !_6;
_12 = _6 * _1;
RET = (-8765425796508184550_i64) * 6698910955795803408_i64;
_6 = _1;
RET = 17558448311475594_i64 << _9;
RET = 197_u8 as i64;
_15 = [672041010_i32];
Call(_11 = core::intrinsics::bswap(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = _11;
_1 = -_12;
_14 = _7 * _7;
_17 = [_2,_2,_2,_2];
_15 = [(-1146603733_i32)];
RET = (-2453581266617361146_i64);
_2 = 1811561773_u32;
_16 = _1 <= _12;
RET = 4862_i16 as i64;
RET = -(-44152816484955018_i64);
_11 = _4;
_15 = [(-141490090_i32)];
RET = 4601676195316697769_i64 >> _11;
_11 = _4;
RET = 3987202633203910453_i64;
_14 = -_7;
_16 = true ^ true;
_4 = _11;
_18 = ['\u{a705f}','\u{ef5af}','\u{101784}','\u{b1331}'];
Call(_3 = fn6(_2, _1, _17, _1, _15, _1, _18, _1, _18, RET, _6, _12, _12, _18, _9, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_11 = _4;
RET = 5516587440262148059_i64 << _1;
_18 = ['\u{850a7}','\u{37f3f}','\u{9ede7}','\u{ba6c9}'];
_19 = [17530979_i32];
_14 = _7;
_19 = [(-1882853194_i32)];
_1 = -_12;
SetDiscriminant(_3, 0);
_16 = true;
_7 = -_14;
_1 = _12;
_7 = 125_u8 as f32;
_1 = _6;
_7 = _14;
_17 = [_2,_2,_2,_2];
_15 = [608448930_i32];
_14 = -_7;
_15 = [1890951053_i32];
_17 = [_2,_2,_2,_2];
place!(Field::<f32>(Variant(_3, 0), 2)) = _14;
Goto(bb5)
}
bb5 = {
_4 = _11;
_11 = _4;
Goto(bb6)
}
bb6 = {
_16 = RET > RET;
_7 = 231713232316163578095069215597373678488_u128 as f32;
place!(Field::<f32>(Variant(_3, 0), 2)) = -_14;
place!(Field::<Adt43>(Variant(_3, 0), 1)) = Adt43::Variant0 { fld0: _9 };
RET = (-708653452978037020_i64) >> _2;
_12 = RET as isize;
_6 = _12;
_21 = '\u{94ebf}';
_14 = _7 * _7;
_21 = '\u{21911}';
_11 = _4 >> _6;
place!(Field::<u64>(Variant(place!(Field::<Adt43>(Variant(_3, 0), 1)), 0), 0)) = !_9;
_19 = [(-1229478353_i32)];
_9 = Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0) << _11;
place!(Field::<*const bool>(Variant(_3, 0), 0)) = core::ptr::addr_of!(_16);
place!(Field::<*const bool>(Variant(_3, 0), 0)) = core::ptr::addr_of!(_16);
match _2 {
0 => bb1,
1 => bb7,
2 => bb8,
1811561773 => bb10,
_ => bb9
}
}
bb7 = {
_4 = _11;
_11 = _4;
Goto(bb6)
}
bb8 = {
_11 = _4;
RET = 5516587440262148059_i64 << _1;
_18 = ['\u{850a7}','\u{37f3f}','\u{9ede7}','\u{ba6c9}'];
_19 = [17530979_i32];
_14 = _7;
_19 = [(-1882853194_i32)];
_1 = -_12;
SetDiscriminant(_3, 0);
_16 = true;
_7 = -_14;
_1 = _12;
_7 = 125_u8 as f32;
_1 = _6;
_7 = _14;
_17 = [_2,_2,_2,_2];
_15 = [608448930_i32];
_14 = -_7;
_15 = [1890951053_i32];
_17 = [_2,_2,_2,_2];
place!(Field::<f32>(Variant(_3, 0), 2)) = _14;
Goto(bb5)
}
bb9 = {
_11 = _4;
_9 = _7 as u64;
_2 = 2226456808_u32 * 1833826420_u32;
_11 = 1_usize as u16;
_6 = _1 ^ _1;
_11 = _4 - _4;
_12 = _6;
_12 = !_6;
_12 = _6 * _1;
RET = (-8765425796508184550_i64) * 6698910955795803408_i64;
_6 = _1;
RET = 17558448311475594_i64 << _9;
RET = 197_u8 as i64;
_15 = [672041010_i32];
Call(_11 = core::intrinsics::bswap(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
_23 = _18;
_16 = true;
_8 = Adt41::Variant3 { fld0: Field::<*const bool>(Variant(_3, 0), 0),fld1: _9,fld2: _6 };
_6 = (-36_i8) as isize;
_14 = -_7;
match _2 {
0 => bb9,
1 => bb2,
2 => bb8,
3 => bb5,
1811561773 => bb12,
_ => bb11
}
}
bb11 = {
RET = (-7909438112488241344_i64) << _6;
_4 = 26477_i16 as u16;
_7 = 7213_i16 as f32;
RET = 1760327335578068424_i64 - (-7522113846738974934_i64);
Goto(bb2)
}
bb12 = {
_4 = _11 ^ _11;
place!(Field::<Adt43>(Variant(_3, 0), 1)) = Adt43::Variant0 { fld0: _9 };
_14 = _7 * _7;
place!(Field::<*const bool>(Variant(_3, 0), 0)) = core::ptr::addr_of!(_26);
_26 = _4 > _4;
_25 = [Field::<u64>(Variant(_8, 3), 1),Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0),Field::<u64>(Variant(_8, 3), 1),_9,Field::<u64>(Variant(_8, 3), 1)];
_23 = _18;
RET = (-322770238820453241_i64);
place!(Field::<*const bool>(Variant(_3, 0), 0)) = Field::<*const bool>(Variant(_8, 3), 0);
place!(Field::<*const bool>(Variant(_3, 0), 0)) = Field::<*const bool>(Variant(_8, 3), 0);
_13 = Adt54::Variant2 { fld0: _8,fld1: _21,fld2: _7 };
_24 = !24786_i16;
_19 = _15;
place!(Field::<u64>(Variant(_8, 3), 1)) = Field::<u64>(Variant(Field::<Adt41>(Variant(_13, 2), 0), 3), 1) + Field::<u64>(Variant(Field::<Adt41>(Variant(_13, 2), 0), 3), 1);
_14 = _7;
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = RET as u64;
Goto(bb13)
}
bb13 = {
place!(Field::<Adt41>(Variant(_13, 2), 0)) = _8;
_13 = Adt54::Variant2 { fld0: _8,fld1: _21,fld2: _7 };
_12 = _1 << Field::<isize>(Variant(Field::<Adt41>(Variant(_13, 2), 0), 3), 2);
place!(Field::<u64>(Variant(_8, 3), 1)) = _9;
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = _24 as u64;
_29 = Field::<u64>(Variant(_8, 3), 1) as f64;
_25 = [_9,Field::<u64>(Variant(_8, 3), 1),Field::<u64>(Variant(_8, 3), 1),Field::<u64>(Variant(_8, 3), 1),Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0)];
RET = 4922357584225624875_i64;
_27 = (_17,);
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = Field::<isize>(Variant(Field::<Adt41>(Variant(_13, 2), 0), 3), 2) as u64;
_2 = _24 as u32;
_8 = Adt41::Variant2 { fld0: (-58_i8),fld1: Field::<*const bool>(Variant(_3, 0), 0) };
_27 = (_17,);
place!(Field::<char>(Variant(_13, 2), 1)) = _21;
_11 = _9 as u16;
_8 = Field::<Adt41>(Variant(_13, 2), 0);
_8 = Field::<Adt41>(Variant(_13, 2), 0);
_25 = [_9,Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0),Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0),Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0),Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0)];
_11 = _4 + _4;
_2 = 0_usize as u32;
_14 = Field::<f32>(Variant(_13, 2), 2) * Field::<f32>(Variant(_3, 0), 2);
_28 = 247_u8;
_28 = _26 as u8;
place!(Field::<u64>(Variant(_8, 3), 1)) = _9 * _9;
_32 = [_2,_2,_2,_2];
Goto(bb14)
}
bb14 = {
_16 = !_26;
_33 = [_21,Field::<char>(Variant(_13, 2), 1),Field::<char>(Variant(_13, 2), 1),Field::<char>(Variant(_13, 2), 1)];
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = Field::<u64>(Variant(_8, 3), 1);
place!(Field::<*const bool>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 0)) = core::ptr::addr_of!(_26);
_35.fld3 = core::ptr::addr_of!(_31.0);
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = Field::<u64>(Variant(Field::<Adt43>(Variant(_3, 0), 1), 0), 0) & Field::<u64>(Variant(_8, 3), 1);
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = 49074389755146104515151884785264227923_i128 as u64;
place!(Field::<isize>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 2)) = Field::<isize>(Variant(_8, 3), 2) + _6;
_27.0 = [_2,_2,_2,_2];
_24 = -19830_i16;
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = 1938681113_i32 as u64;
place!(Field::<u64>(Variant(place!(Field::<Adt41>(Variant(_13, 2), 0)), 3), 1)) = 9733658197295847762_usize as u64;
_35.fld5 = _19;
_6 = Field::<isize>(Variant(_8, 3), 2) & Field::<isize>(Variant(Field::<Adt41>(Variant(_13, 2), 0), 3), 2);
_35.fld0.1 = _29;
place!(Field::<*const bool>(Variant(_3, 0), 0)) = Field::<*const bool>(Variant(Field::<Adt41>(Variant(_13, 2), 0), 3), 0);
_1 = _6;
_17 = _32;
_15 = [(-1270929090_i32)];
_36 = !_26;
_8 = Field::<Adt41>(Variant(_13, 2), 0);
place!(Field::<u64>(Variant(_8, 3), 1)) = _36 as u64;
_1 = Field::<isize>(Variant(_8, 3), 2) & _12;
SetDiscriminant(_8, 1);
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(5_usize, 21_usize, Move(_21), 6_usize, Move(_6), 19_usize, Move(_19), 32_usize, Move(_32)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(5_usize, 23_usize, Move(_23), 27_usize, Move(_27), 36_usize, Move(_36), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(5_usize, 2_usize, Move(_2), 4_usize, Move(_4), 28_usize, Move(_28), 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: u32,mut _2: isize,mut _3: [u32; 4],mut _4: isize,mut _5: [i32; 1],mut _6: isize,mut _7: [char; 4],mut _8: isize,mut _9: [char; 4],mut _10: i64,mut _11: isize,mut _12: isize,mut _13: isize,mut _14: [char; 4],mut _15: u64,mut _16: bool) -> Adt49 {
mir! {
type RET = Adt49;
let _17: f32;
let _18: isize;
let _19: *mut i128;
let _20: i8;
let _21: Adt55;
let _22: Adt40;
let _23: i64;
let _24: char;
let _25: Adt54;
let _26: ([u32; 4],);
let _27: (u32,);
let _28: f64;
let _29: i16;
let _30: Adt55;
let _31: bool;
let _32: ();
let _33: ();
{
_7 = ['\u{f2a54}','\u{496fe}','\u{d0a7b}','\u{bccd8}'];
_1 = !1551984931_u32;
_3 = [_1,_1,_1,_1];
_1 = 3685581173_u32;
Call(_13 = core::intrinsics::transmute(_2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = !855566279_u32;
_2 = !_13;
_15 = 14491671776753477353_u64;
_13 = -_2;
_11 = _8 & _13;
_20 = !(-103_i8);
_13 = 138_u8 as isize;
_8 = _11 | _11;
_20 = 112_i8 >> _8;
Goto(bb2)
}
bb2 = {
_6 = _8;
_10 = 6954671518682116627_i64;
_7 = _9;
_12 = _6;
_12 = _11 * _8;
_17 = _10 as f32;
_4 = _12;
_10 = (-6541600282406841980_i64);
_20 = 40_i8;
_4 = _11 & _8;
_18 = -_4;
_10 = -(-5898759827178018655_i64);
_17 = _8 as f32;
_21.fld3 = [765866181_i32];
_3 = [_1,_1,_1,_1];
_9 = ['\u{1904d}','\u{58a20}','\u{a6289}','\u{66e78}'];
_4 = _12 | _12;
_2 = _20 as isize;
_13 = -_2;
_10 = -5484943877908907572_i64;
_22 = Adt40 { fld0: _20 };
_5 = _21.fld3;
_12 = _4;
match _22.fld0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
40 => bb8,
_ => bb7
}
}
bb3 = {
_1 = !855566279_u32;
_2 = !_13;
_15 = 14491671776753477353_u64;
_13 = -_2;
_11 = _8 & _13;
_20 = !(-103_i8);
_13 = 138_u8 as isize;
_8 = _11 | _11;
_20 = 112_i8 >> _8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_24 = '\u{8928f}';
_24 = '\u{71d09}';
_15 = _1 as u64;
_15 = !12200440580716474637_u64;
_24 = '\u{10c00f}';
_21.fld3 = [(-1716369843_i32)];
_7 = _14;
_4 = (-2049075705_i32) as isize;
_8 = (-12073_i16) as isize;
_17 = 56_u8 as f32;
_23 = _10;
_23 = _10 * _10;
_9 = _7;
Goto(bb9)
}
bb9 = {
_10 = _1 as i64;
_6 = _12;
_23 = !_10;
_3 = [_1,_1,_1,_1];
_16 = !false;
_7 = [_24,_24,_24,_24];
_15 = 130464306775650464399046634222053537383_i128 as u64;
_7 = _14;
_7 = [_24,_24,_24,_24];
_22 = Adt40 { fld0: _20 };
_24 = '\u{c46a4}';
_22 = Adt40 { fld0: _20 };
_22 = Adt40 { fld0: _20 };
_16 = false & false;
_24 = '\u{bb173}';
_20 = 225_u8 as i8;
_4 = _12;
_18 = _12;
_6 = 6313_i16 as isize;
_3 = [_1,_1,_1,_1];
_18 = (-430561982_i32) as isize;
_6 = -_12;
_3 = [_1,_1,_1,_1];
_15 = !4698219969507184383_u64;
_23 = _15 as i64;
_21.fld3 = _5;
_23 = !_10;
_5 = [(-1699377521_i32)];
Call(RET = fn7(_6, _4, _6, _4, _6, _6, _16, _14, _11, _12, _6, _14, _12), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_26 = (_3,);
_21.fld0 = Adt51::Variant1 { fld0: Move(_22) };
_28 = 211_u8 as f64;
_22 = Adt40 { fld0: Field::<Adt40>(Variant(_21.fld0, 1), 0).fld0 };
_28 = _10 as f64;
_21.fld3 = [701120138_i32];
_24 = '\u{6f001}';
_27 = (_1,);
_22.fld0 = Field::<Adt40>(Variant(_21.fld0, 1), 0).fld0 << _12;
_12 = _4 ^ _6;
_29 = (-13993_i16);
Goto(bb11)
}
bb11 = {
Call(_32 = dump_var(6_usize, 11_usize, Move(_11), 15_usize, Move(_15), 6_usize, Move(_6), 16_usize, Move(_16)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_32 = dump_var(6_usize, 3_usize, Move(_3), 13_usize, Move(_13), 2_usize, Move(_2), 9_usize, Move(_9)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_32 = dump_var(6_usize, 18_usize, Move(_18), 8_usize, Move(_8), 29_usize, Move(_29), 33_usize, _33), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: bool,mut _8: [char; 4],mut _9: isize,mut _10: isize,mut _11: isize,mut _12: [char; 4],mut _13: isize) -> Adt49 {
mir! {
type RET = Adt49;
let _14: isize;
let _15: (u32,);
let _16: i32;
let _17: ([u32; 4],);
let _18: u128;
let _19: (i8, u64);
let _20: isize;
let _21: ([u32; 4],);
let _22: f32;
let _23: [u64; 5];
let _24: i8;
let _25: [u32; 4];
let _26: Adt42;
let _27: (*const i16, f64, f64);
let _28: Adt52;
let _29: (i8, u64);
let _30: *const i16;
let _31: (*const i16, f64, f64);
let _32: f32;
let _33: bool;
let _34: char;
let _35: usize;
let _36: f32;
let _37: ([u32; 4],);
let _38: u32;
let _39: (u32,);
let _40: i8;
let _41: f32;
let _42: bool;
let _43: u128;
let _44: *const i16;
let _45: i128;
let _46: isize;
let _47: isize;
let _48: Adt48;
let _49: *mut char;
let _50: f32;
let _51: Adt54;
let _52: Adt41;
let _53: Adt53;
let _54: (u32,);
let _55: f32;
let _56: isize;
let _57: ([u32; 4],);
let _58: i64;
let _59: u64;
let _60: Adt51;
let _61: [i32; 1];
let _62: [char; 4];
let _63: f64;
let _64: ();
let _65: ();
{
_13 = _3;
_9 = _7 as isize;
_1 = _13 + _6;
_2 = -_4;
_2 = _3;
_11 = !_4;
_3 = (-32956657117508131686852127697914908275_i128) as isize;
_8 = _12;
_12 = ['\u{aa92f}','\u{c33a4}','\u{b37b4}','\u{c4778}'];
_3 = _13;
_11 = _1;
_15 = (3726758882_u32,);
_15.0 = 2812115728_u32 ^ 300231747_u32;
_12 = ['\u{e8f21}','\u{ff902}','\u{a2e99}','\u{33f2d}'];
_14 = 404534588269939369_usize as isize;
_15.0 = (-6133_i16) as u32;
_6 = _2;
_15.0 = 1080621723_u32 & 468867332_u32;
_13 = _7 as isize;
_15.0 = 33786_u16 as u32;
_11 = _10 * _10;
_2 = _3 ^ _11;
_12 = ['\u{a64c7}','\u{982c0}','\u{dda2c}','\u{f6400}'];
_7 = _3 >= _1;
_16 = (-1980973943_i32) | 1042921004_i32;
_15 = (646915798_u32,);
_9 = _15.0 as isize;
_1 = _11;
_1 = _4 + _3;
Goto(bb1)
}
bb1 = {
_11 = -_3;
_15 = (3163368544_u32,);
_16 = '\u{6f19}' as i32;
_15.0 = 2629113463_u32;
_4 = _11;
_6 = _4;
_6 = _2;
_9 = _5;
_2 = _10 & _1;
_2 = _1 * _3;
_14 = _1 & _5;
_3 = _16 as isize;
_11 = !_6;
_3 = _4;
_18 = 265437292017634086328950260316245864543_u128;
_13 = -_2;
_16 = (-44_i8) as i32;
_19 = (66_i8, 15441814851539300019_u64);
_17.0 = [_15.0,_15.0,_15.0,_15.0];
_15 = (1049048890_u32,);
_2 = _6 << _1;
_4 = !_6;
match _18 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
265437292017634086328950260316245864543 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_4 = 4782_i16 as isize;
_21 = _17;
_17 = (_21.0,);
_22 = _18 as f32;
_4 = 0_usize as isize;
_2 = _1 & _13;
_15.0 = 3601885230_u32;
_4 = 76828352137196769270168903422770861868_i128 as isize;
_27.1 = _18 as f64;
_5 = 1695926868970725137_usize as isize;
_24 = _7 as i8;
_19.1 = !13641232234726867919_u64;
_19 = (_24, 184110479364749706_u64);
_14 = _6;
Goto(bb8)
}
bb8 = {
_17.0 = [_15.0,_15.0,_15.0,_15.0];
Call(RET = fn8(_1, _6, _10, _24, _10, _11, _6, _2, _7, _2, _7), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
SetDiscriminant(RET, 3);
_1 = _14 ^ _14;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).3 = !_7;
place!(Field::<*const u128>(Variant(RET, 3), 0)) = core::ptr::addr_of!(_18);
place!(Field::<u32>(Variant(RET, 3), 2)) = !_15.0;
_31.2 = 20616292254631056941618704812983502190_i128 as f64;
_16 = 824225147_i32;
Call(_20 = core::intrinsics::transmute(_13), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_29.0 = _19.0;
_17 = _21;
_4 = _1 | _13;
_3 = !_14;
_15.0 = !Field::<u32>(Variant(RET, 3), 2);
_32 = _22;
_27.1 = _31.2 + _31.2;
_11 = !_20;
_34 = '\u{1717a}';
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).1 = _18 & _18;
_19.1 = 8422678271744963742_u64 >> _11;
_3 = _1;
_27.1 = -_31.2;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).0 = core::ptr::addr_of_mut!(_34);
_2 = _3 | _13;
_18 = !Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1).1;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).0 = core::ptr::addr_of_mut!(_34);
_31.2 = _27.1 * _27.1;
_6 = _11 * _13;
_31.1 = _31.2;
_35 = 247_u8 as usize;
_17.0 = [_15.0,Field::<u32>(Variant(RET, 3), 2),Field::<u32>(Variant(RET, 3), 2),_15.0];
place!(Field::<*const u128>(Variant(RET, 3), 0)) = core::ptr::addr_of!(_18);
_13 = _10;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).3 = _19.0 == _19.0;
Goto(bb11)
}
bb11 = {
_9 = _19.1 as isize;
_27.2 = _31.2 * _31.1;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).2 = [174_u8,210_u8,186_u8,84_u8,37_u8,185_u8];
_13 = _11;
place!(Field::<u32>(Variant(RET, 3), 2)) = _15.0 << _1;
place!(Field::<*const u128>(Variant(RET, 3), 0)) = core::ptr::addr_of!(place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(RET, 3), 1)).1);
_29 = (_24, _19.1);
_25 = [Field::<u32>(Variant(RET, 3), 2),Field::<u32>(Variant(RET, 3), 2),Field::<u32>(Variant(RET, 3), 2),Field::<u32>(Variant(RET, 3), 2)];
_29.0 = _19.0;
SetDiscriminant(RET, 1);
_19.1 = _29.1 >> _14;
_2 = _14;
_27.2 = -_27.1;
_3 = !_14;
_18 = 24947671584225851558041636221541043850_u128;
_31.2 = _27.2 + _27.2;
_8 = [_34,_34,_34,_34];
_35 = 77607951944028550_usize;
_32 = -_22;
_17 = (_25,);
_16 = 1719834455_i32 - 1131672369_i32;
_5 = -_4;
Goto(bb12)
}
bb12 = {
_12 = [_34,_34,_34,_34];
_3 = 116_u8 as isize;
_36 = _22;
_31.2 = -_27.1;
_4 = _19.1 as isize;
_31.1 = 177_u8 as f64;
match _35 {
0 => bb13,
77607951944028550 => bb15,
_ => bb14
}
}
bb13 = {
_17.0 = [_15.0,_15.0,_15.0,_15.0];
Call(RET = fn8(_1, _6, _10, _24, _10, _11, _6, _2, _7, _2, _7), ReturnTo(bb9), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
_39 = (_15.0,);
_21.0 = _17.0;
_37.0 = [_15.0,_39.0,_39.0,_39.0];
_22 = _36 + _36;
_33 = _7;
_42 = _33 == _33;
_35 = !16688746424758996036_usize;
_41 = -_22;
_2 = _39.0 as isize;
_5 = _13;
_20 = _11 >> _19.0;
_25 = [_39.0,_39.0,_39.0,_15.0];
_15.0 = _39.0 & _39.0;
Goto(bb16)
}
bb16 = {
_38 = !_15.0;
_39 = (_38,);
_31.2 = _27.2;
_31.1 = _27.1 * _27.2;
_10 = (-15024_i16) as isize;
_40 = !_29.0;
_22 = _32;
_29 = (_24, _19.1);
_27.2 = _27.1 * _31.1;
_42 = _11 < _5;
_8 = _12;
_21 = _17;
_14 = _9;
_39.0 = !_15.0;
_15.0 = (-13364281019804983282276594885523628979_i128) as u32;
_2 = _27.1 as isize;
_19 = (_40, _29.1);
_25 = [_38,_39.0,_38,_38];
_21 = (_17.0,);
_43 = _18 / _18;
_32 = -_36;
_39 = (_38,);
match _18 {
0 => bb17,
1 => bb18,
2 => bb19,
24947671584225851558041636221541043850 => bb21,
_ => bb20
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_17.0 = [_15.0,_15.0,_15.0,_15.0];
Call(RET = fn8(_1, _6, _10, _24, _10, _11, _6, _2, _7, _2, _7), ReturnTo(bb9), UnwindUnreachable())
}
bb20 = {
_12 = [_34,_34,_34,_34];
_3 = 116_u8 as isize;
_36 = _22;
_31.2 = -_27.1;
_4 = _19.1 as isize;
_31.1 = 177_u8 as f64;
match _35 {
0 => bb13,
77607951944028550 => bb15,
_ => bb14
}
}
bb21 = {
_37 = (_17.0,);
_41 = _36;
_16 = 245_u8 as i32;
_27.2 = _27.1 + _31.1;
_37 = _17;
_36 = -_22;
_36 = -_41;
_29 = (_40, _19.1);
_15.0 = _38;
_10 = _13;
_19 = _29;
_49 = core::ptr::addr_of_mut!(_34);
_22 = _36 * _41;
_42 = !_33;
_34 = '\u{35fe8}';
_22 = _9 as f32;
_18 = _43 & _43;
_11 = _13;
_2 = _13 << _10;
_15.0 = _39.0 + _39.0;
_45 = 71749834988822771341873022944729970449_i128;
_19 = (_40, _29.1);
_50 = -_22;
Goto(bb22)
}
bb22 = {
_33 = _42 ^ _42;
_5 = _10;
_27.2 = _9 as f64;
_8 = _12;
_15 = _39;
_31.1 = _27.2 - _27.2;
_46 = _10 | _20;
_35 = !0_usize;
_47 = _16 as isize;
_41 = (-13264_i16) as f32;
_7 = _33;
_31.2 = _29.0 as f64;
_9 = _6;
_27.2 = -_31.2;
_23 = [_19.1,_19.1,_19.1,_29.1,_29.1];
_10 = _18 as isize;
_6 = _13;
Call(_44 = fn15(_7, _17.0, _23, _2, _42, _29.1, _27.2, _23, _37, _31.1, _29, _20), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_27.0 = _44;
_13 = -_6;
_24 = _45 as i8;
Goto(bb24)
}
bb24 = {
_17.0 = [_39.0,_38,_38,_39.0];
_27.1 = _31.1 * _27.2;
_21 = (_37.0,);
_19.0 = _29.0 & _29.0;
_29.1 = _19.1 >> _46;
_15.0 = _39.0;
_27.0 = _44;
_29.0 = (*_49) as i8;
_23 = [_29.1,_29.1,_19.1,_29.1,_29.1];
_29.0 = _40;
_19.0 = _40 + _40;
_47 = _13 << _14;
_59 = _19.1 << _20;
_43 = _18 * _18;
Goto(bb25)
}
bb25 = {
_10 = _50 as isize;
_34 = '\u{60e06}';
_18 = _43;
_27.0 = _44;
_61 = [_16];
_19 = (_40, _59);
_17 = (_21.0,);
_25 = [_39.0,_39.0,_15.0,_38];
_36 = _50 - _22;
place!(Field::<*mut *mut char>(Variant(RET, 1), 0)) = core::ptr::addr_of_mut!(_49);
Goto(bb26)
}
bb26 = {
Call(_64 = dump_var(7_usize, 25_usize, Move(_25), 1_usize, Move(_1), 43_usize, Move(_43), 14_usize, Move(_14)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_64 = dump_var(7_usize, 20_usize, Move(_20), 19_usize, Move(_19), 59_usize, Move(_59), 46_usize, Move(_46)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_64 = dump_var(7_usize, 35_usize, Move(_35), 42_usize, Move(_42), 9_usize, Move(_9), 10_usize, Move(_10)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_64 = dump_var(7_usize, 13_usize, Move(_13), 11_usize, Move(_11), 23_usize, Move(_23), 24_usize, Move(_24)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_64 = dump_var(7_usize, 4_usize, Move(_4), 38_usize, Move(_38), 37_usize, Move(_37), 65_usize, _65), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: i8,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: bool,mut _10: isize,mut _11: bool) -> Adt49 {
mir! {
type RET = Adt49;
let _12: char;
let _13: f32;
let _14: (u32,);
let _15: ([u32; 4],);
let _16: f64;
let _17: Adt43;
let _18: ([u32; 4],);
let _19: (u32,);
let _20: char;
let _21: (i8, u64);
let _22: [u8; 6];
let _23: char;
let _24: *mut char;
let _25: (u32,);
let _26: i32;
let _27: isize;
let _28: Adt40;
let _29: f32;
let _30: i8;
let _31: f32;
let _32: bool;
let _33: u16;
let _34: f64;
let _35: isize;
let _36: *mut *mut char;
let _37: *mut *mut char;
let _38: (u32,);
let _39: Adt40;
let _40: *const bool;
let _41: Adt40;
let _42: Adt40;
let _43: (u32,);
let _44: ();
let _45: ();
{
_10 = _6 * _8;
Goto(bb1)
}
bb1 = {
_7 = -_5;
_9 = _11;
_13 = _3 as f32;
_5 = '\u{41aef}' as isize;
_6 = -_8;
_14 = (865148186_u32,);
_6 = _8 + _10;
_10 = _6 + _2;
_12 = '\u{30c02}';
_13 = (-8567207289987833992_i64) as f32;
_7 = !_6;
_12 = '\u{f59c2}';
_4 = -6_i8;
_11 = _2 > _2;
_13 = _7 as f32;
_2 = _11 as isize;
_16 = 1129741153241019124_u64 as f64;
_10 = _6;
match _14.0 {
0 => bb2,
865148186 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_2 = _6 - _3;
_11 = _9;
_7 = 32095891263194386232657851960835852894_u128 as isize;
_10 = 4598_u16 as isize;
_15.0 = [_14.0,_14.0,_14.0,_14.0];
_12 = '\u{5aa27}';
_16 = 26122_u16 as f64;
_6 = _12 as isize;
_14 = (178457211_u32,);
_8 = _16 as isize;
_3 = _1;
_14.0 = 2794914569_u32 >> _2;
_3 = _14.0 as isize;
_10 = _16 as isize;
_18.0 = [_14.0,_14.0,_14.0,_14.0];
_15.0 = [_14.0,_14.0,_14.0,_14.0];
_12 = '\u{da6a7}';
_15.0 = [_14.0,_14.0,_14.0,_14.0];
_7 = _1;
_3 = _2 << _1;
Call(_14.0 = fn9(_3, _18, _7, _15.0, _2, _7, _7, _18.0, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_3 = _1;
_21 = (_4, 16804763719359286375_u64);
_19 = (_14.0,);
_8 = _3;
_22 = [74_u8,225_u8,8_u8,253_u8,94_u8,19_u8];
_10 = -_1;
_2 = _10 ^ _8;
_9 = !_11;
_3 = !_10;
_9 = _2 == _7;
_21.1 = 1650154013321750598_u64 + 9910127387355238059_u64;
_23 = _12;
_1 = !_10;
_6 = -_2;
_2 = _10;
_5 = !_3;
_25 = _19;
_24 = core::ptr::addr_of_mut!(_23);
_13 = _21.1 as f32;
_9 = _11;
_27 = 680984844813543006_usize as isize;
_19.0 = _25.0;
_10 = _13 as isize;
Call(_16 = fn10(_18, _14.0, _25, _2, _18, _15.0, _8, _14), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_21.1 = _12 as u64;
_21.0 = _4 + _4;
_25 = _19;
_11 = _9 <= _9;
_23 = _12;
_1 = _3 + _2;
_5 = _1 >> _19.0;
_16 = (-4847690604262920333647122547502702943_i128) as f64;
_6 = _8;
_19 = (_14.0,);
_7 = _5;
_3 = !_7;
_28 = Adt40 { fld0: _21.0 };
_19.0 = _25.0 ^ _14.0;
_26 = _21.1 as i32;
_18.0 = _15.0;
_17 = Adt43::Variant0 { fld0: _21.1 };
Goto(bb7)
}
bb7 = {
_28 = Adt40 { fld0: _4 };
_24 = core::ptr::addr_of_mut!((*_24));
_9 = _19.0 <= _14.0;
_22 = [179_u8,52_u8,94_u8,82_u8,79_u8,118_u8];
_8 = -_7;
_21 = (_28.fld0, Field::<u64>(Variant(_17, 0), 0));
Goto(bb8)
}
bb8 = {
_5 = _1;
_11 = _9;
_24 = core::ptr::addr_of_mut!((*_24));
_9 = !_11;
_23 = _12;
_13 = _28.fld0 as f32;
_26 = 5_usize as i32;
Goto(bb9)
}
bb9 = {
_22 = [209_u8,184_u8,6_u8,175_u8,247_u8,52_u8];
_24 = core::ptr::addr_of_mut!(_20);
_11 = !_9;
Goto(bb10)
}
bb10 = {
_27 = _5;
_14.0 = _19.0 * _25.0;
_21.0 = _19.0 as i8;
_31 = _13;
_4 = _21.0 - _21.0;
_28.fld0 = -_4;
Call(_5 = fn13(_19, _4, _2, _1, _2, _19, _21), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_11 = _9;
_31 = _13 - _13;
_2 = _3 * _7;
_28.fld0 = _5 as i8;
Call(_6 = core::intrinsics::transmute(_7), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_29 = -_31;
place!(Field::<[char; 4]>(Variant(_17, 1), 2)) = [_12,_23,_12,_23];
Goto(bb13)
}
bb13 = {
_23 = _12;
_13 = _31 + _31;
_19.0 = !_25.0;
Goto(bb14)
}
bb14 = {
_14.0 = !_19.0;
_11 = !_9;
_15.0 = [_14.0,_19.0,_14.0,_25.0];
_15.0 = _18.0;
_32 = !_11;
place!(Field::<usize>(Variant(_17, 1), 4)) = !16049590117482947675_usize;
_8 = _3;
_3 = _7;
_20 = _23;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3)) = (_24, 86392510199206728128232630908506373296_u128, _22, _11);
_5 = !_3;
_19 = (_25.0,);
_27 = -_3;
_16 = _1 as f64;
_15 = (_18.0,);
_14 = (_19.0,);
Call(place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3)).1 = fn14(_2, _3, _16, _5, _2, _18.0, _6, Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3).3, Move(_28), _9), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_28.fld0 = _21.0;
_27 = _8;
_29 = _13;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3)).0 = core::ptr::addr_of_mut!((*_24));
_30 = -_4;
place!(Field::<u128>(Variant(_17, 1), 0)) = !Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3).1;
Call(_25.0 = core::intrinsics::transmute(_19.0), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3)).0 = core::ptr::addr_of_mut!(_20);
place!(Field::<u128>(Variant(_17, 1), 0)) = Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3).1 & Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3).1;
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3)).3 = !_32;
_23 = _20;
place!(Field::<u128>(Variant(_17, 1), 0)) = 63_u8 as u128;
_1 = _12 as isize;
_31 = _13 + _13;
_14 = (_25.0,);
_19 = (_14.0,);
_8 = _5 ^ _6;
_15.0 = [_25.0,_19.0,_25.0,_25.0];
place!(Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3)).2 = [157_u8,104_u8,167_u8,225_u8,32_u8,51_u8];
_31 = _29;
place!(Field::<u128>(Variant(_17, 1), 0)) = !Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3).1;
_30 = _4;
place!(Field::<usize>(Variant(_17, 1), 4)) = 3270869406017115405_usize;
_21 = (_30, 16744921547158968465_u64);
_24 = Field::<(*mut char, u128, [u8; 6], bool)>(Variant(_17, 1), 3).0;
_17 = Adt43::Variant0 { fld0: _21.1 };
_17 = Adt43::Variant0 { fld0: _21.1 };
SetDiscriminant(_17, 0);
_13 = _31;
_5 = 11674_i16 as isize;
Goto(bb17)
}
bb17 = {
_34 = _16;
_37 = core::ptr::addr_of_mut!(_24);
_30 = !_21.0;
_13 = _31 - _31;
_13 = _29 + _29;
match _21.1 {
0 => bb14,
1 => bb16,
2 => bb18,
16744921547158968465 => bb20,
_ => bb19
}
}
bb18 = {
_29 = -_31;
place!(Field::<[char; 4]>(Variant(_17, 1), 2)) = [_12,_23,_12,_23];
Goto(bb13)
}
bb19 = {
_27 = _5;
_14.0 = _19.0 * _25.0;
_21.0 = _19.0 as i8;
_31 = _13;
_4 = _21.0 - _21.0;
_28.fld0 = -_4;
Call(_5 = fn13(_19, _4, _2, _1, _2, _19, _21), ReturnTo(bb11), UnwindUnreachable())
}
bb20 = {
_28 = Adt40 { fld0: _4 };
_21 = (_30, 17498435855806834772_u64);
_25 = _19;
_25 = _14;
_15.0 = _18.0;
_14 = (_25.0,);
_29 = _25.0 as f32;
_19.0 = _14.0 >> _3;
_21.1 = !14129509200975908959_u64;
_23 = _20;
_5 = _7;
_40 = core::ptr::addr_of!(_32);
_3 = _8 | _6;
RET = Adt49::Variant1 { fld0: _37 };
_10 = _7 * _8;
_37 = core::ptr::addr_of_mut!((*_37));
_38.0 = _29 as u32;
_37 = Field::<*mut *mut char>(Variant(RET, 1), 0);
_38.0 = _3 as u32;
_21.1 = 8280900895987453501_u64 - 14562608765908246401_u64;
Goto(bb21)
}
bb21 = {
Call(_44 = dump_var(8_usize, 38_usize, Move(_38), 14_usize, Move(_14), 7_usize, Move(_7), 22_usize, Move(_22)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_44 = dump_var(8_usize, 30_usize, Move(_30), 19_usize, Move(_19), 25_usize, Move(_25), 20_usize, Move(_20)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_44 = dump_var(8_usize, 9_usize, Move(_9), 10_usize, Move(_10), 23_usize, Move(_23), 15_usize, Move(_15)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_44 = dump_var(8_usize, 6_usize, Move(_6), 45_usize, _45, 45_usize, _45, 45_usize, _45), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: ([u32; 4],),mut _3: isize,mut _4: [u32; 4],mut _5: isize,mut _6: isize,mut _7: isize,mut _8: [u32; 4],mut _9: bool) -> u32 {
mir! {
type RET = u32;
let _10: char;
let _11: isize;
let _12: char;
let _13: isize;
let _14: f32;
let _15: (u32,);
let _16: f32;
let _17: ();
let _18: ();
{
_5 = !_6;
RET = 1135315830_u32;
_4 = [RET,RET,RET,RET];
RET = 1534945885_u32;
RET = !1824834155_u32;
_2 = (_8,);
_6 = _7 - _3;
_5 = _1 << _6;
RET = 3129266007_u32 ^ 1230473990_u32;
_5 = _7;
_10 = '\u{7e832}';
RET = 4272784927_u32 + 1740522164_u32;
_2.0 = [RET,RET,RET,RET];
_5 = _7;
_8 = [RET,RET,RET,RET];
_2 = (_4,);
_12 = _10;
_3 = 9119806019501908784_i64 as isize;
_5 = !_1;
Goto(bb1)
}
bb1 = {
_11 = _1;
_8 = [RET,RET,RET,RET];
_5 = -_11;
_2.0 = [RET,RET,RET,RET];
_1 = _7 | _5;
_7 = _11 ^ _5;
_7 = _6 + _11;
_2.0 = [RET,RET,RET,RET];
_9 = _12 != _12;
_13 = _7;
_14 = 11259940059580176764_usize as f32;
_15.0 = RET << _5;
_10 = _12;
_7 = _5;
_8 = [_15.0,_15.0,_15.0,_15.0];
_8 = [_15.0,_15.0,_15.0,RET];
_1 = _6 ^ _7;
_3 = _1;
_12 = _10;
RET = !_15.0;
_2.0 = _8;
_1 = 13382343762584111398_u64 as isize;
_10 = _12;
_15.0 = _14 as u32;
_4 = [RET,RET,RET,RET];
_2.0 = [RET,RET,RET,RET];
Goto(bb2)
}
bb2 = {
Call(_17 = dump_var(9_usize, 9_usize, Move(_9), 6_usize, Move(_6), 12_usize, Move(_12), 8_usize, Move(_8)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_17 = dump_var(9_usize, 13_usize, Move(_13), 11_usize, Move(_11), 3_usize, Move(_3), 18_usize, _18), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: ([u32; 4],),mut _2: u32,mut _3: (u32,),mut _4: isize,mut _5: ([u32; 4],),mut _6: [u32; 4],mut _7: isize,mut _8: (u32,)) -> f64 {
mir! {
type RET = f64;
let _9: (i8, u64);
let _10: bool;
let _11: u64;
let _12: bool;
let _13: u32;
let _14: ([u32; 4],);
let _15: [u64; 5];
let _16: f64;
let _17: i128;
let _18: isize;
let _19: (i8, u64);
let _20: u16;
let _21: ();
let _22: ();
{
_3 = _8;
_4 = (-4969418561994262208_i64) as isize;
_4 = 6829025711248461438_usize as isize;
RET = (-9004383339203426581_i64) as f64;
_8 = (_3.0,);
_6 = [_2,_3.0,_8.0,_2];
_1 = (_6,);
_9.1 = 3_usize as u64;
_2 = !_8.0;
RET = (-2279155952188597763_i64) as f64;
_9.1 = 208209994379709257017645503982859055352_u128 as u64;
Call(_9.0 = fn11(_5.0, _8, _8.0, _3, _6, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8.0 = _3.0;
_12 = false;
_11 = _9.1;
_2 = !_3.0;
_10 = _8.0 != _2;
_11 = _9.1 + _9.1;
_9.0 = (-1_i8) - (-9_i8);
_9 = ((-113_i8), _11);
RET = _9.0 as f64;
_1.0 = [_8.0,_3.0,_2,_3.0];
_5 = (_6,);
_1 = (_5.0,);
RET = 5078382112428561784_i64 as f64;
_3 = (_2,);
_4 = 28137_i16 as isize;
_3 = (_8.0,);
_9 = ((-61_i8), _11);
_14 = _5;
_12 = _2 > _3.0;
_7 = _4;
_3.0 = '\u{d2347}' as u32;
_7 = _4 - _4;
match _9.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607431768211395 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_4 = _7 * _7;
RET = _11 as f64;
_5.0 = [_8.0,_8.0,_2,_2];
_2 = _8.0 | _8.0;
_14 = _5;
_16 = -RET;
_17 = 4297290049924223702_i64 as i128;
_9.1 = _11 + _11;
_2 = _8.0 & _8.0;
_3 = _8;
_5.0 = _1.0;
_5.0 = [_8.0,_2,_2,_8.0];
_5.0 = _6;
match _9.0 {
0 => bb5,
1 => bb6,
340282366920938463463374607431768211395 => bb8,
_ => bb3
}
}
bb8 = {
_5.0 = [_8.0,_3.0,_2,_2];
RET = -_16;
RET = -_16;
_7 = 682439619131275747_i64 as isize;
RET = _3.0 as f64;
_9 = ((-23_i8), _11);
_18 = 1_usize as isize;
_3.0 = _2;
_11 = _9.1 << _2;
_16 = RET + RET;
RET = _16;
Goto(bb9)
}
bb9 = {
Call(_21 = dump_var(10_usize, 10_usize, Move(_10), 6_usize, Move(_6), 9_usize, Move(_9), 7_usize, Move(_7)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_21 = dump_var(10_usize, 2_usize, Move(_2), 18_usize, Move(_18), 12_usize, Move(_12), 22_usize, _22), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [u32; 4],mut _2: (u32,),mut _3: u32,mut _4: (u32,),mut _5: [u32; 4],mut _6: isize) -> i8 {
mir! {
type RET = i8;
let _7: [i32; 1];
let _8: Adt52;
let _9: bool;
let _10: ([u32; 4],);
let _11: f32;
let _12: f64;
let _13: f32;
let _14: [u8; 6];
let _15: isize;
let _16: char;
let _17: u8;
let _18: u16;
let _19: Adt46;
let _20: [u64; 5];
let _21: f64;
let _22: f32;
let _23: char;
let _24: [char; 4];
let _25: i8;
let _26: char;
let _27: i16;
let _28: ();
let _29: ();
{
RET = (-20_i8);
_2.0 = _3;
_6 = (-1641028947226564066_i64) as isize;
_4.0 = _2.0 | _2.0;
_2 = (_3,);
_4 = (_2.0,);
RET = 16340629428619476760_u64 as i8;
_4.0 = 22552_u16 as u32;
RET = 67503445285620952754289229331744294942_u128 as i8;
_3 = _2.0 * _2.0;
_5 = _1;
_2 = (_3,);
RET = 7709227291796246712_usize as i8;
_7 = [839625406_i32];
_1 = _5;
_5 = [_3,_3,_3,_3];
_6 = (-57501036057708550888307860904721677950_i128) as isize;
_4.0 = _3 << _3;
_5 = _1;
_2.0 = _6 as u32;
_7 = [(-170490072_i32)];
_2 = (_3,);
_6 = '\u{dc092}' as isize;
_10.0 = _5;
_3 = _2.0 ^ _4.0;
Goto(bb1)
}
bb1 = {
_6 = !9223372036854775807_isize;
_5 = [_2.0,_4.0,_3,_3];
_9 = _4.0 < _3;
_2 = (_4.0,);
_3 = _2.0;
_7 = [1179247125_i32];
_4 = _2;
_10 = (_5,);
_5 = [_4.0,_3,_3,_3];
_2 = _4;
_9 = _3 < _2.0;
_12 = 13277727804660387465_u64 as f64;
_9 = true;
RET = -58_i8;
_10.0 = _5;
_13 = _3 as f32;
_8 = Adt52::Variant3 { fld0: 81_u8 };
_7 = [904375486_i32];
_6 = RET as isize;
place!(Field::<u8>(Variant(_8, 3), 0)) = !77_u8;
place!(Field::<u8>(Variant(_8, 3), 0)) = !187_u8;
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
RET = (-96_i8) * (-24_i8);
_11 = _13;
_6 = -9223372036854775807_isize;
_3 = _2.0 >> _2.0;
_4 = (_3,);
Call(_1 = fn12(_10, _13, _13, _4, _3, _2, _4.0, _10, _5, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
_11 = _13;
_2.0 = _4.0;
_15 = 10118895800861389802_u64 as isize;
RET = _9 as i8;
_10.0 = [_4.0,_2.0,_4.0,_2.0];
_10.0 = _1;
_13 = -_11;
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
_10.0 = [_3,_3,_4.0,_4.0];
RET = 3_usize as i8;
_3 = _4.0 - _2.0;
_10.0 = [_4.0,_4.0,_3,_2.0];
_3 = !_2.0;
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
Goto(bb3)
}
bb3 = {
_1 = [_2.0,_3,_4.0,_2.0];
RET = (-1_i8) ^ 17_i8;
RET = 3856714564685162372_i64 as i8;
_18 = 64624_u16 + 31708_u16;
_7 = [383051995_i32];
RET = -7_i8;
RET = (-102_i8);
_16 = '\u{277c9}';
_2 = (_4.0,);
_2 = (_4.0,);
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
_10 = (_5,);
_6 = -_15;
_1 = [_2.0,_4.0,_3,_2.0];
match RET {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768211354 => bb8,
_ => bb7
}
}
bb4 = {
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
_11 = _13;
_2.0 = _4.0;
_15 = 10118895800861389802_u64 as isize;
RET = _9 as i8;
_10.0 = [_4.0,_2.0,_4.0,_2.0];
_10.0 = _1;
_13 = -_11;
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
_10.0 = [_3,_3,_4.0,_4.0];
RET = 3_usize as i8;
_3 = _4.0 - _2.0;
_10.0 = [_4.0,_4.0,_3,_2.0];
_3 = !_2.0;
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
Goto(bb3)
}
bb5 = {
_6 = !9223372036854775807_isize;
_5 = [_2.0,_4.0,_3,_3];
_9 = _4.0 < _3;
_2 = (_4.0,);
_3 = _2.0;
_7 = [1179247125_i32];
_4 = _2;
_10 = (_5,);
_5 = [_4.0,_3,_3,_3];
_2 = _4;
_9 = _3 < _2.0;
_12 = 13277727804660387465_u64 as f64;
_9 = true;
RET = -58_i8;
_10.0 = _5;
_13 = _3 as f32;
_8 = Adt52::Variant3 { fld0: 81_u8 };
_7 = [904375486_i32];
_6 = RET as isize;
place!(Field::<u8>(Variant(_8, 3), 0)) = !77_u8;
place!(Field::<u8>(Variant(_8, 3), 0)) = !187_u8;
_14 = [Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0),Field::<u8>(Variant(_8, 3), 0)];
RET = (-96_i8) * (-24_i8);
_11 = _13;
_6 = -9223372036854775807_isize;
_3 = _2.0 >> _2.0;
_4 = (_3,);
Call(_1 = fn12(_10, _13, _13, _4, _3, _2, _4.0, _10, _5, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
place!(Field::<u8>(Variant(_8, 3), 0)) = 182_u8;
_4.0 = 224093778768294695090170496711446980366_u128 as u32;
SetDiscriminant(_8, 3);
Goto(bb9)
}
bb9 = {
place!(Field::<u8>(Variant(_8, 3), 0)) = 134_u8 >> _3;
_19.fld1.0 = _16 as i8;
_4.0 = _3 * _3;
_21 = -_12;
_19.fld5 = _7;
_7 = [(-138816041_i32)];
Goto(bb10)
}
bb10 = {
place!(Field::<u8>(Variant(_8, 3), 0)) = 1895827043657574421_i64 as u8;
_19.fld1 = (RET, 15329112473501942838_u64);
RET = _19.fld1.0 - _19.fld1.0;
_19.fld2 = _11 as f64;
_4 = (_3,);
_6 = !_15;
_12 = _19.fld2;
_8 = Adt52::Variant3 { fld0: 144_u8 };
_13 = -_11;
_24 = [_16,_16,_16,_16];
_19.fld1.1 = 111909565932052864504449770756381377680_i128 as u64;
_19.fld1.1 = !13018303295796668197_u64;
_2 = (_3,);
_20 = [_19.fld1.1,_19.fld1.1,_19.fld1.1,_19.fld1.1,_19.fld1.1];
_19.fld1.0 = -RET;
_19.fld3 = core::ptr::addr_of!(_5);
_2.0 = _4.0;
_19.fld0.2 = -_12;
_24 = [_16,_16,_16,_16];
_4 = (_2.0,);
RET = -_19.fld1.0;
_5 = [_4.0,_2.0,_4.0,_2.0];
_24 = [_16,_16,_16,_16];
Goto(bb11)
}
bb11 = {
_1 = [_2.0,_2.0,_4.0,_4.0];
_17 = _18 as u8;
_10 = (_1,);
_19.fld2 = _3 as f64;
_9 = !true;
_19.fld1.1 = 14256901719856403700_u64 - 9481097373127972416_u64;
_6 = _15 * _15;
_7 = _19.fld5;
_10.0 = [_4.0,_4.0,_4.0,_4.0];
_14 = [_17,_17,_17,_17,_17,_17];
_2 = _4;
_24 = [_16,_16,_16,_16];
_2 = _4;
_22 = (-2629175923912431579_i64) as f32;
_2 = _4;
_11 = _13;
_19.fld1.0 = RET >> _4.0;
Goto(bb12)
}
bb12 = {
_19.fld2 = _18 as f64;
_23 = _16;
_15 = _6;
_19.fld0.2 = _12;
_13 = _3 as f32;
RET = -_19.fld1.0;
_14 = [_17,_17,_17,_17,_17,_17];
_2.0 = _4.0;
_26 = _16;
Goto(bb13)
}
bb13 = {
Call(_28 = dump_var(11_usize, 16_usize, Move(_16), 15_usize, Move(_15), 24_usize, Move(_24), 7_usize, Move(_7)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_28 = dump_var(11_usize, 17_usize, Move(_17), 10_usize, Move(_10), 4_usize, Move(_4), 9_usize, Move(_9)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_28 = dump_var(11_usize, 5_usize, Move(_5), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: ([u32; 4],),mut _2: f32,mut _3: f32,mut _4: (u32,),mut _5: u32,mut _6: (u32,),mut _7: u32,mut _8: ([u32; 4],),mut _9: [u32; 4],mut _10: (u32,)) -> [u32; 4] {
mir! {
type RET = [u32; 4];
let _11: u32;
let _12: char;
let _13: *mut char;
let _14: Adt56;
let _15: [u64; 5];
let _16: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64));
let _17: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64));
let _18: u64;
let _19: u128;
let _20: char;
let _21: Adt50;
let _22: ();
let _23: ();
{
_1 = _8;
_6 = _10;
_8 = _1;
_3 = _2;
Goto(bb1)
}
bb1 = {
_1 = (_9,);
_10.0 = _5;
_8.0 = _1.0;
_10.0 = _6.0 + _6.0;
_9 = [_4.0,_5,_10.0,_7];
_3 = _2 - _2;
_6 = (_5,);
_10 = (_5,);
_2 = (-2055963936367628986_i64) as f32;
_6 = (_7,);
_4.0 = _10.0;
_13 = core::ptr::addr_of_mut!(_12);
_9 = _8.0;
_12 = '\u{22e7e}';
_6.0 = (-41_isize) as u32;
_12 = '\u{3671d}';
Goto(bb2)
}
bb2 = {
_13 = core::ptr::addr_of_mut!((*_13));
_16.5.0 = (-23_i8) << _10.0;
_16.2 = !(-9223372036854775808_isize);
_17.2 = 0_usize as isize;
_16.1 = (_16.5.0, 12138922640245000705_u64);
_11 = _10.0 | _5;
_16.3.2 = _16.2 as f64;
_17.1.0 = !_16.1.0;
_6 = (_5,);
_8.0 = [_4.0,_6.0,_11,_10.0];
_16.3.1 = 3441751388616285440_i64 as f64;
_16.5 = _16.1;
_8 = _1;
_5 = _6.0;
_1 = (_9,);
_16.0 = 3_usize ^ 6_usize;
_17.1 = (_16.1.0, _16.1.1);
_8 = _1;
RET = _8.0;
_16.5.1 = _17.1.1;
_9 = [_6.0,_10.0,_4.0,_4.0];
RET = [_11,_7,_7,_10.0];
_17.3.0 = core::ptr::addr_of!(_21.fld4);
_18 = _16.1.1;
_16.5.1 = _17.1.1 ^ _16.1.1;
Goto(bb3)
}
bb3 = {
Call(_22 = dump_var(12_usize, 6_usize, Move(_6), 8_usize, Move(_8), 10_usize, Move(_10), 9_usize, Move(_9)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_22 = dump_var(12_usize, 18_usize, Move(_18), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: (u32,),mut _2: i8,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: (u32,),mut _7: (i8, u64)) -> isize {
mir! {
type RET = isize;
let _8: u8;
let _9: Adt42;
let _10: Adt48;
let _11: (i8, u64);
let _12: ();
let _13: ();
{
RET = -_5;
_6 = (_1.0,);
RET = _4 >> _3;
_3 = RET;
_7.1 = 3341528291017720428_u64;
_1 = (_6.0,);
_7 = (_2, 242360074015564757_u64);
_8 = 228_u8;
_6 = _1;
_11.1 = (-1462758620_i32) as u64;
_1.0 = _6.0;
_11 = (_2, _7.1);
RET = !_4;
_4 = _8 as isize;
_11 = (_2, _7.1);
_7.1 = _11.1 | _11.1;
_11.1 = !_7.1;
_2 = _11.0 ^ _7.0;
RET = _3 - _5;
_6 = _1;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(13_usize, 1_usize, Move(_1), 3_usize, Move(_3), 5_usize, Move(_5), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: isize,mut _3: f64,mut _4: isize,mut _5: isize,mut _6: [u32; 4],mut _7: isize,mut _8: bool,mut _9: Adt40,mut _10: bool) -> u128 {
mir! {
type RET = u128;
let _11: Adt48;
let _12: isize;
let _13: Adt40;
let _14: i128;
let _15: f64;
let _16: (u32,);
let _17: Adt54;
let _18: *mut i128;
let _19: ();
let _20: ();
{
_10 = _8;
_9 = Adt40 { fld0: 40_i8 };
RET = 26611122033471180006486560206413516348_u128;
_5 = _2;
_3 = 11023360992228511243_usize as f64;
_5 = _1;
_1 = RET as isize;
_2 = _7;
_9 = Adt40 { fld0: (-77_i8) };
_9 = Adt40 { fld0: (-124_i8) };
_7 = 5_usize as isize;
_6 = [3359954535_u32,1976923543_u32,432649302_u32,4071552733_u32];
_4 = _5;
_5 = _4;
match _9.fld0 {
340282366920938463463374607431768211332 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_12 = _4;
_3 = 8615731927632764892_u64 as f64;
_7 = _2 * _4;
_9 = Adt40 { fld0: 49_i8 };
_1 = !_2;
_14 = (-68142857440130601773714810823808274931_i128) - (-135094074383261879976193920190722184346_i128);
_3 = 17274_i16 as f64;
_4 = !_2;
match _9.fld0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
49 => bb11,
_ => bb10
}
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_13 = Move(_9);
_14 = !(-116839113440352504850777476296933882210_i128);
_9 = Adt40 { fld0: _13.fld0 };
_14 = -(-62856175333513494587276005320902778986_i128);
_9 = Adt40 { fld0: _13.fld0 };
_3 = 28369_u16 as f64;
_3 = _14 as f64;
_12 = _2;
_15 = _3;
_13.fld0 = !_9.fld0;
_12 = !_2;
_15 = _3;
_9.fld0 = _13.fld0;
_6 = [4197995434_u32,2589458126_u32,225143960_u32,3875219487_u32];
RET = 235709176945847466233585557373323902272_u128 + 270664887063505981153197319843178816156_u128;
_2 = -_7;
_10 = !_8;
_5 = _7;
_16 = (52722303_u32,);
_4 = _7;
_7 = RET as isize;
_15 = _3;
_12 = _2;
_5 = _12 | _4;
RET = 134752226079333634537343222202475161353_u128;
Goto(bb12)
}
bb12 = {
_16 = (3223275480_u32,);
RET = 311282181355431632761461235216336496022_u128 & 39872653322325318347156248096547354205_u128;
match _16.0 {
0 => bb9,
1 => bb13,
3223275480 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Goto(bb16)
}
bb16 = {
Call(_19 = dump_var(14_usize, 16_usize, Move(_16), 14_usize, Move(_14), 10_usize, Move(_10), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_19 = dump_var(14_usize, 2_usize, Move(_2), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: [u32; 4],mut _3: [u64; 5],mut _4: isize,mut _5: bool,mut _6: u64,mut _7: f64,mut _8: [u64; 5],mut _9: ([u32; 4],),mut _10: f64,mut _11: (i8, u64),mut _12: isize) -> *const i16 {
mir! {
type RET = *const i16;
let _13: u8;
let _14: i8;
let _15: [u32; 4];
let _16: (isize,);
let _17: f64;
let _18: Adt41;
let _19: Adt50;
let _20: Adt53;
let _21: [char; 4];
let _22: f64;
let _23: isize;
let _24: ([u32; 4],);
let _25: f32;
let _26: isize;
let _27: bool;
let _28: (*mut char, u128, [u8; 6], bool);
let _29: (*const i16, f64, f64);
let _30: i32;
let _31: [u64; 5];
let _32: usize;
let _33: f64;
let _34: [u64; 5];
let _35: bool;
let _36: f32;
let _37: isize;
let _38: f32;
let _39: bool;
let _40: i32;
let _41: isize;
let _42: Adt40;
let _43: Adt56;
let _44: isize;
let _45: (isize,);
let _46: ();
let _47: ();
{
_11.1 = _6;
_9 = (_2,);
_12 = _4;
_6 = _11.1;
_6 = !_11.1;
_7 = _10;
_3 = [_6,_11.1,_6,_6,_11.1];
_11 = (93_i8, _6);
_1 = !_5;
_11.0 = !(-100_i8);
_14 = _11.0 | _11.0;
Goto(bb1)
}
bb1 = {
_3 = [_6,_11.1,_11.1,_11.1,_6];
_10 = _7;
_5 = _7 < _10;
_9.0 = [1635994473_u32,2180767698_u32,2549946534_u32,3041101496_u32];
_12 = !_4;
_11 = (_14, _6);
_15 = [3799165537_u32,4054987001_u32,4230045038_u32,1212313757_u32];
_16 = (_12,);
_5 = !_1;
Goto(bb2)
}
bb2 = {
_7 = _10 * _10;
_11 = (_14, _6);
_11.1 = 6_usize as u64;
_7 = _10 - _10;
_11.0 = _16.0 as i8;
_16.0 = _4 >> _11.0;
_17 = _10;
_2 = _9.0;
_12 = !_4;
_2 = [1824671563_u32,216922786_u32,3356289834_u32,3358573371_u32];
_7 = _10;
_4 = -_16.0;
_7 = _10;
_13 = !157_u8;
_6 = _11.1 - _11.1;
_14 = _11.0;
_6 = _11.1 * _11.1;
_11.1 = _6 * _6;
_10 = -_7;
_14 = _13 as i8;
_4 = -_16.0;
_12 = _4;
_11 = (_14, _6);
_14 = -_11.0;
_15 = [1946292647_u32,1048123667_u32,1140598487_u32,2901535552_u32];
_4 = !_12;
_13 = !38_u8;
_5 = _1;
_9 = (_2,);
Goto(bb3)
}
bb3 = {
_8 = _3;
_19.fld4 = (-13124_i16) ^ 15561_i16;
_6 = _11.1 * _11.1;
_19.fld3 = [1094347225_u32,3775314343_u32,1211305681_u32,358923359_u32];
_19.fld2 = core::ptr::addr_of!(_19.fld3);
_1 = !_5;
_14 = !_11.0;
_17 = _19.fld4 as f64;
_21 = ['\u{6f924}','\u{4af36}','\u{1c7a2}','\u{2a796}'];
RET = core::ptr::addr_of!(_19.fld4);
_14 = _11.0 * _11.0;
_3 = [_11.1,_6,_6,_6,_6];
RET = core::ptr::addr_of!(_19.fld4);
RET = core::ptr::addr_of!((*RET));
RET = core::ptr::addr_of!((*RET));
_23 = _16.0 * _12;
_19.fld0 = [(-262800644_i32)];
_11.0 = _14;
_2 = _9.0;
_12 = _23 << _16.0;
_21 = ['\u{4d132}','\u{369d2}','\u{10cc1d}','\u{b8816}'];
_4 = _16.0 & _16.0;
_10 = _7;
_23 = _12 >> _6;
Call(_1 = fn16(_8, _12, _16.0, _5, _12, _16, _16.0, _8, _16, _5, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_12 = _4;
_19.fld2 = core::ptr::addr_of!(_9.0);
_17 = _10 + _10;
_13 = 164_u8 & 193_u8;
_3 = [_6,_6,_6,_11.1,_11.1];
_19.fld2 = core::ptr::addr_of!(_15);
RET = core::ptr::addr_of!((*RET));
_1 = _5;
_22 = -_17;
_2 = [2563334937_u32,1068985891_u32,1668309582_u32,650753108_u32];
_21 = ['\u{1be7f}','\u{7a232}','\u{192f1}','\u{10d670}'];
_19.fld3 = [1374607070_u32,3569906574_u32,1150249061_u32,2331094366_u32];
_13 = 163_u8 ^ 164_u8;
_10 = _17;
_19.fld0 = [(-921819597_i32)];
_12 = _23 & _4;
_19.fld0 = [1430613606_i32];
_6 = 34042056603242155002529839219612956898_u128 as u64;
_19.fld0 = [780903742_i32];
_9 = (_19.fld3,);
_5 = !_1;
_8 = _3;
_22 = _7 - _17;
_19.fld0 = [(-1506941515_i32)];
_12 = 8132773051890631955_usize as isize;
_24 = (_19.fld3,);
_3 = _8;
_10 = _17;
_12 = !_16.0;
Goto(bb5)
}
bb5 = {
_9.0 = [537836842_u32,1695519976_u32,1105141693_u32,3082679361_u32];
_15 = _9.0;
_14 = _11.0 ^ _11.0;
Call(_9 = fn17(_16.0, _4, _16.0, _16.0, _7, _16, _12, _23, _16, _23, _1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_22 = -_7;
_5 = _16.0 < _4;
_25 = 73023763608650389415286050874226988552_u128 as f32;
_2 = [2604625926_u32,1578567800_u32,3036414168_u32,2848319914_u32];
_25 = 92332836418046594858605657600862211386_u128 as f32;
RET = core::ptr::addr_of!((*RET));
_19.fld2 = core::ptr::addr_of!(_15);
RET = core::ptr::addr_of!(_19.fld4);
_19.fld4 = -(-18566_i16);
_9.0 = _15;
_25 = _17 as f32;
_10 = _22;
_11.1 = _6;
_16.0 = (-1095250475_i32) as isize;
_11 = (_14, _6);
_29 = (RET, _17, _7);
_29.0 = RET;
_3 = [_11.1,_6,_11.1,_11.1,_6];
_14 = _11.0;
Goto(bb7)
}
bb7 = {
_8 = _3;
_16 = (_23,);
_28.3 = !_1;
_9.0 = _15;
_34 = [_11.1,_6,_11.1,_11.1,_11.1];
_33 = -_29.1;
_31 = [_6,_11.1,_11.1,_11.1,_6];
_5 = _28.3;
_19.fld4 = -17456_i16;
_9.0 = _19.fld3;
_19.fld3 = _9.0;
_29.2 = _7 * _7;
_5 = !_1;
_28.3 = _5;
_28.3 = !_1;
_24 = (_9.0,);
_31 = [_6,_6,_11.1,_11.1,_6];
_11.0 = _14;
_25 = 44708910020977073101328442396178642331_u128 as f32;
_17 = _13 as f64;
_32 = 1_usize;
_9.0 = [_2[_32],_24.0[_32],_2[_32],_19.fld3[_32]];
_9.0 = [_19.fld3[_32],_19.fld3[_32],_2[_32],_15[_32]];
_14 = -_11.0;
_25 = 118187017034921720312951870767234084209_i128 as f32;
_29.1 = _11.0 as f64;
_28.2[_32] = _2[_32] as u8;
match _9.0[_32] {
0 => bb1,
1 => bb5,
2 => bb8,
3 => bb9,
3569906574 => bb11,
_ => bb10
}
}
bb8 = {
_7 = _10 * _10;
_11 = (_14, _6);
_11.1 = 6_usize as u64;
_7 = _10 - _10;
_11.0 = _16.0 as i8;
_16.0 = _4 >> _11.0;
_17 = _10;
_2 = _9.0;
_12 = !_4;
_2 = [1824671563_u32,216922786_u32,3356289834_u32,3358573371_u32];
_7 = _10;
_4 = -_16.0;
_7 = _10;
_13 = !157_u8;
_6 = _11.1 - _11.1;
_14 = _11.0;
_6 = _11.1 * _11.1;
_11.1 = _6 * _6;
_10 = -_7;
_14 = _13 as i8;
_4 = -_16.0;
_12 = _4;
_11 = (_14, _6);
_14 = -_11.0;
_15 = [1946292647_u32,1048123667_u32,1140598487_u32,2901535552_u32];
_4 = !_12;
_13 = !38_u8;
_5 = _1;
_9 = (_2,);
Goto(bb3)
}
bb9 = {
_3 = [_6,_11.1,_11.1,_11.1,_6];
_10 = _7;
_5 = _7 < _10;
_9.0 = [1635994473_u32,2180767698_u32,2549946534_u32,3041101496_u32];
_12 = !_4;
_11 = (_14, _6);
_15 = [3799165537_u32,4054987001_u32,4230045038_u32,1212313757_u32];
_16 = (_12,);
_5 = !_1;
Goto(bb2)
}
bb10 = {
_12 = _4;
_19.fld2 = core::ptr::addr_of!(_9.0);
_17 = _10 + _10;
_13 = 164_u8 & 193_u8;
_3 = [_6,_6,_6,_11.1,_11.1];
_19.fld2 = core::ptr::addr_of!(_15);
RET = core::ptr::addr_of!((*RET));
_1 = _5;
_22 = -_17;
_2 = [2563334937_u32,1068985891_u32,1668309582_u32,650753108_u32];
_21 = ['\u{1be7f}','\u{7a232}','\u{192f1}','\u{10d670}'];
_19.fld3 = [1374607070_u32,3569906574_u32,1150249061_u32,2331094366_u32];
_13 = 163_u8 ^ 164_u8;
_10 = _17;
_19.fld0 = [(-921819597_i32)];
_12 = _23 & _4;
_19.fld0 = [1430613606_i32];
_6 = 34042056603242155002529839219612956898_u128 as u64;
_19.fld0 = [780903742_i32];
_9 = (_19.fld3,);
_5 = !_1;
_8 = _3;
_22 = _7 - _17;
_19.fld0 = [(-1506941515_i32)];
_12 = 8132773051890631955_usize as isize;
_24 = (_19.fld3,);
_3 = _8;
_10 = _17;
_12 = !_16.0;
Goto(bb5)
}
bb11 = {
_29.2 = _33;
_21[_32] = '\u{7dfa7}';
_28.2 = [_13,_13,_13,_13,_13,_13];
_10 = _2[_32] as f64;
_13 = !_28.2[_32];
RET = _29.0;
_26 = !_4;
_19.fld0 = [521147851_i32];
Goto(bb12)
}
bb12 = {
_21 = ['\u{6864d}','\u{2eefd}','\u{ce751}','\u{c11d8}'];
_8[_32] = _11.1;
_31 = _34;
_35 = _28.3;
_31[_32] = !_11.1;
_4 = _23;
_22 = 16655863790903290866254408101818714995_i128 as f64;
_28.1 = !161493463755892996156303794852118190065_u128;
_4 = -_12;
_11 = (_14, _31[_32]);
_27 = _35;
_19.fld4 = 9157_i16;
_27 = _35 == _35;
_36 = _25 + _25;
_30 = !(-850944653_i32);
match _19.fld3[_32] {
0 => bb8,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
3569906574 => bb19,
_ => bb18
}
}
bb13 = {
_7 = _10 * _10;
_11 = (_14, _6);
_11.1 = 6_usize as u64;
_7 = _10 - _10;
_11.0 = _16.0 as i8;
_16.0 = _4 >> _11.0;
_17 = _10;
_2 = _9.0;
_12 = !_4;
_2 = [1824671563_u32,216922786_u32,3356289834_u32,3358573371_u32];
_7 = _10;
_4 = -_16.0;
_7 = _10;
_13 = !157_u8;
_6 = _11.1 - _11.1;
_14 = _11.0;
_6 = _11.1 * _11.1;
_11.1 = _6 * _6;
_10 = -_7;
_14 = _13 as i8;
_4 = -_16.0;
_12 = _4;
_11 = (_14, _6);
_14 = -_11.0;
_15 = [1946292647_u32,1048123667_u32,1140598487_u32,2901535552_u32];
_4 = !_12;
_13 = !38_u8;
_5 = _1;
_9 = (_2,);
Goto(bb3)
}
bb14 = {
_8 = _3;
_19.fld4 = (-13124_i16) ^ 15561_i16;
_6 = _11.1 * _11.1;
_19.fld3 = [1094347225_u32,3775314343_u32,1211305681_u32,358923359_u32];
_19.fld2 = core::ptr::addr_of!(_19.fld3);
_1 = !_5;
_14 = !_11.0;
_17 = _19.fld4 as f64;
_21 = ['\u{6f924}','\u{4af36}','\u{1c7a2}','\u{2a796}'];
RET = core::ptr::addr_of!(_19.fld4);
_14 = _11.0 * _11.0;
_3 = [_11.1,_6,_6,_6,_6];
RET = core::ptr::addr_of!(_19.fld4);
RET = core::ptr::addr_of!((*RET));
RET = core::ptr::addr_of!((*RET));
_23 = _16.0 * _12;
_19.fld0 = [(-262800644_i32)];
_11.0 = _14;
_2 = _9.0;
_12 = _23 << _16.0;
_21 = ['\u{4d132}','\u{369d2}','\u{10cc1d}','\u{b8816}'];
_4 = _16.0 & _16.0;
_10 = _7;
_23 = _12 >> _6;
Call(_1 = fn16(_8, _12, _16.0, _5, _12, _16, _16.0, _8, _16, _5, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_3 = [_6,_11.1,_11.1,_11.1,_6];
_10 = _7;
_5 = _7 < _10;
_9.0 = [1635994473_u32,2180767698_u32,2549946534_u32,3041101496_u32];
_12 = !_4;
_11 = (_14, _6);
_15 = [3799165537_u32,4054987001_u32,4230045038_u32,1212313757_u32];
_16 = (_12,);
_5 = !_1;
Goto(bb2)
}
bb16 = {
_7 = _10 * _10;
_11 = (_14, _6);
_11.1 = 6_usize as u64;
_7 = _10 - _10;
_11.0 = _16.0 as i8;
_16.0 = _4 >> _11.0;
_17 = _10;
_2 = _9.0;
_12 = !_4;
_2 = [1824671563_u32,216922786_u32,3356289834_u32,3358573371_u32];
_7 = _10;
_4 = -_16.0;
_7 = _10;
_13 = !157_u8;
_6 = _11.1 - _11.1;
_14 = _11.0;
_6 = _11.1 * _11.1;
_11.1 = _6 * _6;
_10 = -_7;
_14 = _13 as i8;
_4 = -_16.0;
_12 = _4;
_11 = (_14, _6);
_14 = -_11.0;
_15 = [1946292647_u32,1048123667_u32,1140598487_u32,2901535552_u32];
_4 = !_12;
_13 = !38_u8;
_5 = _1;
_9 = (_2,);
Goto(bb3)
}
bb17 = {
_8 = _3;
_16 = (_23,);
_28.3 = !_1;
_9.0 = _15;
_34 = [_11.1,_6,_11.1,_11.1,_11.1];
_33 = -_29.1;
_31 = [_6,_11.1,_11.1,_11.1,_6];
_5 = _28.3;
_19.fld4 = -17456_i16;
_9.0 = _19.fld3;
_19.fld3 = _9.0;
_29.2 = _7 * _7;
_5 = !_1;
_28.3 = _5;
_28.3 = !_1;
_24 = (_9.0,);
_31 = [_6,_6,_11.1,_11.1,_6];
_11.0 = _14;
_25 = 44708910020977073101328442396178642331_u128 as f32;
_17 = _13 as f64;
_32 = 1_usize;
_9.0 = [_2[_32],_24.0[_32],_2[_32],_19.fld3[_32]];
_9.0 = [_19.fld3[_32],_19.fld3[_32],_2[_32],_15[_32]];
_14 = -_11.0;
_25 = 118187017034921720312951870767234084209_i128 as f32;
_29.1 = _11.0 as f64;
_28.2[_32] = _2[_32] as u8;
match _9.0[_32] {
0 => bb1,
1 => bb5,
2 => bb8,
3 => bb9,
3569906574 => bb11,
_ => bb10
}
}
bb18 = {
_22 = -_7;
_5 = _16.0 < _4;
_25 = 73023763608650389415286050874226988552_u128 as f32;
_2 = [2604625926_u32,1578567800_u32,3036414168_u32,2848319914_u32];
_25 = 92332836418046594858605657600862211386_u128 as f32;
RET = core::ptr::addr_of!((*RET));
_19.fld2 = core::ptr::addr_of!(_15);
RET = core::ptr::addr_of!(_19.fld4);
_19.fld4 = -(-18566_i16);
_9.0 = _15;
_25 = _17 as f32;
_10 = _22;
_11.1 = _6;
_16.0 = (-1095250475_i32) as isize;
_11 = (_14, _6);
_29 = (RET, _17, _7);
_29.0 = RET;
_3 = [_11.1,_6,_11.1,_11.1,_6];
_14 = _11.0;
Goto(bb7)
}
bb19 = {
_19.fld3 = [_24.0[_32],_9.0[_32],_15[_32],_24.0[_32]];
_29 = (RET, _7, _33);
_19.fld3 = [_2[_32],_15[_32],_15[_32],_2[_32]];
_17 = -_29.2;
_29.2 = _33;
_31 = [_11.1,_34[_32],_34[_32],_3[_32],_6];
_30 = 4238885948447438766835370787344920480_i128 as i32;
_10 = -_29.2;
RET = _29.0;
_28.0 = core::ptr::addr_of_mut!(_21[_32]);
_27 = _1 == _28.3;
_19.fld3 = [_24.0[_32],_2[_32],_9.0[_32],_24.0[_32]];
_11 = (_14, _3[_32]);
_14 = _11.0 + _11.0;
_15[_32] = 30075_u16 as u32;
_30 = (-360574321_i32);
_4 = -_26;
_40 = -_30;
Goto(bb20)
}
bb20 = {
Call(_46 = dump_var(15_usize, 30_usize, Move(_30), 40_usize, Move(_40), 16_usize, Move(_16), 5_usize, Move(_5)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_46 = dump_var(15_usize, 27_usize, Move(_27), 3_usize, Move(_3), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_46 = dump_var(15_usize, 23_usize, Move(_23), 11_usize, Move(_11), 14_usize, Move(_14), 1_usize, Move(_1)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [u64; 5],mut _2: isize,mut _3: isize,mut _4: bool,mut _5: isize,mut _6: (isize,),mut _7: isize,mut _8: [u64; 5],mut _9: (isize,),mut _10: bool,mut _11: [u64; 5]) -> bool {
mir! {
type RET = bool;
let _12: [u8; 6];
let _13: ();
let _14: ();
{
_9 = (_7,);
_2 = 2137405219_i32 as isize;
RET = _10;
_2 = -_7;
_7 = _5 >> _9.0;
RET = !_4;
_9 = _6;
_6.0 = 4887427656767964975_usize as isize;
_2 = '\u{5f2b0}' as isize;
_9.0 = -_3;
_2 = !_7;
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(16_usize, 7_usize, Move(_7), 2_usize, Move(_2), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_13 = dump_var(16_usize, 11_usize, Move(_11), 14_usize, _14, 14_usize, _14, 14_usize, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: f64,mut _6: (isize,),mut _7: isize,mut _8: isize,mut _9: (isize,),mut _10: isize,mut _11: bool) -> ([u32; 4],) {
mir! {
type RET = ([u32; 4],);
let _12: u16;
let _13: isize;
let _14: [u64; 5];
let _15: Adt45;
let _16: usize;
let _17: f32;
let _18: (i8, u64);
let _19: Adt40;
let _20: *mut i16;
let _21: Adt41;
let _22: i8;
let _23: i64;
let _24: (i8, u64);
let _25: isize;
let _26: u16;
let _27: [u32; 4];
let _28: ([u32; 4],);
let _29: Adt52;
let _30: i8;
let _31: usize;
let _32: u8;
let _33: char;
let _34: char;
let _35: Adt50;
let _36: isize;
let _37: [char; 4];
let _38: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64));
let _39: *const bool;
let _40: *mut char;
let _41: [u64; 5];
let _42: ([u32; 4],);
let _43: (i8, u64);
let _44: [char; 4];
let _45: u128;
let _46: f64;
let _47: f64;
let _48: u128;
let _49: isize;
let _50: Adt55;
let _51: Adt55;
let _52: i16;
let _53: char;
let _54: ();
let _55: ();
{
_7 = _8;
_6.0 = _10;
_3 = _7;
_10 = _1 * _2;
RET.0 = [3597145109_u32,3739621394_u32,3953573449_u32,2685956063_u32];
RET.0 = [1565359431_u32,1849515462_u32,3176865985_u32,1644907454_u32];
_8 = !_7;
_3 = _6.0 - _1;
_12 = 959_u16 ^ 49686_u16;
_12 = !53378_u16;
_3 = _7;
_1 = 4_usize as isize;
_12 = !25906_u16;
_9 = (_2,);
_4 = 4810158318351906343_i64 as isize;
_16 = !6428904799259468776_usize;
Goto(bb1)
}
bb1 = {
_9 = (_6.0,);
_1 = 145_u8 as isize;
_9 = _6;
RET.0 = [2244426344_u32,380864727_u32,3427041338_u32,2440053008_u32];
_16 = !17166770327854185625_usize;
_17 = 46998115450449629173719070168979296319_i128 as f32;
RET.0 = [621332671_u32,2116671701_u32,1570654080_u32,1489775086_u32];
_18.1 = 4557037626747032616_u64;
_6.0 = _18.1 as isize;
_4 = _9.0 * _10;
_6 = _9;
_18.0 = (-2_i8) - (-82_i8);
_9.0 = _7;
_17 = (-1721_i16) as f32;
_13 = !_3;
_12 = 17050_u16 - 57165_u16;
_11 = true;
_12 = !58021_u16;
_8 = _7 << _3;
_17 = _18.0 as f32;
_8 = !_13;
Goto(bb2)
}
bb2 = {
_13 = _17 as isize;
_4 = 118090597854234580112299703893788309842_i128 as isize;
_13 = _6.0 - _9.0;
_2 = _6.0 - _7;
RET.0 = [4252228139_u32,3588117038_u32,3197322635_u32,1162266335_u32];
_5 = 126450925419334685177416046052066994752_u128 as f64;
_6.0 = _9.0;
_19 = Adt40 { fld0: _18.0 };
_18 = (_19.fld0, 14972221159571932556_u64);
_7 = !_13;
_14 = [_18.1,_18.1,_18.1,_18.1,_18.1];
Goto(bb3)
}
bb3 = {
_17 = 1445620480_u32 as f32;
_4 = _10 + _8;
_9.0 = (-1798980363_i32) as isize;
_9.0 = _8 << _6.0;
_17 = (-7857517399153678022_i64) as f32;
_23 = 4685029437595216240_i64;
Goto(bb4)
}
bb4 = {
_18.0 = -_19.fld0;
_12 = 14151_u16;
_11 = _8 >= _7;
_25 = _3;
_18 = (_19.fld0, 8572963193790067284_u64);
_23 = 680214355057156504_i64;
_18.1 = 5943791286122571621_u64;
_14 = [_18.1,_18.1,_18.1,_18.1,_18.1];
_24 = _18;
_22 = 172_u8 as i8;
_12 = 14391_u16;
_9.0 = _4;
_26 = _12;
_19 = Adt40 { fld0: _24.0 };
_22 = '\u{187a3}' as i8;
_6.0 = !_2;
_24.1 = !_18.1;
_24.1 = !_18.1;
_10 = _16 as isize;
_19 = Adt40 { fld0: _24.0 };
_23 = 3022353599799641293_i64;
match _23 {
0 => bb5,
1 => bb6,
3022353599799641293 => bb8,
_ => bb7
}
}
bb5 = {
_17 = 1445620480_u32 as f32;
_4 = _10 + _8;
_9.0 = (-1798980363_i32) as isize;
_9.0 = _8 << _6.0;
_17 = (-7857517399153678022_i64) as f32;
_23 = 4685029437595216240_i64;
Goto(bb4)
}
bb6 = {
_13 = _17 as isize;
_4 = 118090597854234580112299703893788309842_i128 as isize;
_13 = _6.0 - _9.0;
_2 = _6.0 - _7;
RET.0 = [4252228139_u32,3588117038_u32,3197322635_u32,1162266335_u32];
_5 = 126450925419334685177416046052066994752_u128 as f64;
_6.0 = _9.0;
_19 = Adt40 { fld0: _18.0 };
_18 = (_19.fld0, 14972221159571932556_u64);
_7 = !_13;
_14 = [_18.1,_18.1,_18.1,_18.1,_18.1];
Goto(bb3)
}
bb7 = {
_9 = (_6.0,);
_1 = 145_u8 as isize;
_9 = _6;
RET.0 = [2244426344_u32,380864727_u32,3427041338_u32,2440053008_u32];
_16 = !17166770327854185625_usize;
_17 = 46998115450449629173719070168979296319_i128 as f32;
RET.0 = [621332671_u32,2116671701_u32,1570654080_u32,1489775086_u32];
_18.1 = 4557037626747032616_u64;
_6.0 = _18.1 as isize;
_4 = _9.0 * _10;
_6 = _9;
_18.0 = (-2_i8) - (-82_i8);
_9.0 = _7;
_17 = (-1721_i16) as f32;
_13 = !_3;
_12 = 17050_u16 - 57165_u16;
_11 = true;
_12 = !58021_u16;
_8 = _7 << _3;
_17 = _18.0 as f32;
_8 = !_13;
Goto(bb2)
}
bb8 = {
RET.0 = [2181968883_u32,274015966_u32,35661961_u32,2581404019_u32];
_19 = Adt40 { fld0: _24.0 };
_9.0 = -_4;
_11 = !true;
_18.0 = _22;
_19.fld0 = -_18.0;
_22 = '\u{526aa}' as i8;
_6 = (_7,);
_1 = !_8;
_18.1 = _24.1;
_14 = [_18.1,_24.1,_24.1,_18.1,_18.1];
_25 = _3;
_9.0 = -_13;
_19 = Adt40 { fld0: _24.0 };
_26 = _12;
_9.0 = _6.0 * _8;
_9.0 = _26 as isize;
_17 = (-38785107586929398018751499907334368501_i128) as f32;
_27 = RET.0;
_12 = _26;
_28.0 = [168143104_u32,3433829761_u32,1054560912_u32,1389477363_u32];
_25 = _2;
_18 = (_19.fld0, _24.1);
_9 = _6;
RET.0 = [3709931855_u32,21306900_u32,2226513197_u32,770628368_u32];
_8 = !_7;
match _26 {
0 => bb1,
1 => bb2,
2 => bb5,
14391 => bb10,
_ => bb9
}
}
bb9 = {
_17 = 1445620480_u32 as f32;
_4 = _10 + _8;
_9.0 = (-1798980363_i32) as isize;
_9.0 = _8 << _6.0;
_17 = (-7857517399153678022_i64) as f32;
_23 = 4685029437595216240_i64;
Goto(bb4)
}
bb10 = {
RET.0 = _28.0;
_18.1 = _24.1 ^ _24.1;
_24.0 = _19.fld0;
_3 = _18.0 as isize;
_24 = (_22, _18.1);
_23 = -(-7834876144265863468_i64);
_30 = !_18.0;
_6 = _9;
_2 = _9.0 ^ _4;
_25 = _1 - _13;
_8 = !_25;
_2 = -_7;
_18 = (_19.fld0, _24.1);
RET = (_27,);
_6 = _9;
RET.0 = [2345556623_u32,1464248720_u32,4264434553_u32,3689457864_u32];
_24 = _18;
_10 = _1;
_22 = _18.0 ^ _24.0;
_9 = (_25,);
_31 = 26540_i16 as usize;
Call(_4 = core::intrinsics::bswap(_6.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_24 = (_30, _18.1);
_28 = (RET.0,);
RET = (_28.0,);
_32 = _11 as u8;
_16 = (-154349973912472254462011106685252531523_i128) as usize;
_16 = !_31;
_13 = _4 - _6.0;
_24 = _18;
_19.fld0 = _22;
_35.fld4 = 4297_i16 | 2445_i16;
_9 = _6;
RET = (_27,);
_24.0 = _11 as i8;
_35.fld2 = core::ptr::addr_of!(RET.0);
_19.fld0 = _30 * _30;
_35.fld2 = core::ptr::addr_of!(_35.fld3);
Call(_35.fld4 = core::intrinsics::transmute(_26), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_9 = (_4,);
_33 = '\u{332}';
_34 = _33;
_35.fld2 = core::ptr::addr_of!(_28.0);
_34 = _33;
_12 = _26;
_38.3.2 = _31 as f64;
_35.fld0 = [(-1093052334_i32)];
_28 = RET;
_1 = (-237896046_i32) as isize;
_38.5.0 = _22;
_38.0 = _18.1 as usize;
_24.1 = _18.1;
RET.0 = [159501804_u32,3105422549_u32,1076416422_u32,3288397693_u32];
_16 = 1660809045_i32 as usize;
_24.1 = !_18.1;
_36 = _5 as isize;
_38.0 = _16;
_3 = _13 & _13;
_38.0 = !_16;
_8 = !_9.0;
_25 = _7 + _9.0;
_5 = _38.3.2 * _38.3.2;
_40 = core::ptr::addr_of_mut!(_33);
_6.0 = _10 + _10;
_31 = _16;
Goto(bb13)
}
bb13 = {
_38.3.2 = _5;
_10 = _7 - _4;
_32 = 84_u8 >> _9.0;
_3 = -_9.0;
_37 = [_33,_34,_34,_34];
_38.3.0 = core::ptr::addr_of!(_35.fld4);
_26 = !_12;
_22 = _19.fld0;
_39 = core::ptr::addr_of!(_11);
_24 = (_22, _18.1);
_38.1 = (_19.fld0, _18.1);
_35.fld2 = core::ptr::addr_of!(_42.0);
_19.fld0 = _38.1.0;
_28 = RET;
_9.0 = _12 as isize;
_4 = !_6.0;
_4 = _13 ^ _3;
_38.4 = _26 % _12;
_6 = _9;
_38.3.0 = core::ptr::addr_of!(_35.fld4);
RET = _28;
_24.0 = _19.fld0;
_38.2 = !_8;
match _12 {
0 => bb11,
1 => bb14,
2 => bb15,
14391 => bb17,
_ => bb16
}
}
bb14 = {
_13 = _17 as isize;
_4 = 118090597854234580112299703893788309842_i128 as isize;
_13 = _6.0 - _9.0;
_2 = _6.0 - _7;
RET.0 = [4252228139_u32,3588117038_u32,3197322635_u32,1162266335_u32];
_5 = 126450925419334685177416046052066994752_u128 as f64;
_6.0 = _9.0;
_19 = Adt40 { fld0: _18.0 };
_18 = (_19.fld0, 14972221159571932556_u64);
_7 = !_13;
_14 = [_18.1,_18.1,_18.1,_18.1,_18.1];
Goto(bb3)
}
bb15 = {
_13 = _17 as isize;
_4 = 118090597854234580112299703893788309842_i128 as isize;
_13 = _6.0 - _9.0;
_2 = _6.0 - _7;
RET.0 = [4252228139_u32,3588117038_u32,3197322635_u32,1162266335_u32];
_5 = 126450925419334685177416046052066994752_u128 as f64;
_6.0 = _9.0;
_19 = Adt40 { fld0: _18.0 };
_18 = (_19.fld0, 14972221159571932556_u64);
_7 = !_13;
_14 = [_18.1,_18.1,_18.1,_18.1,_18.1];
Goto(bb3)
}
bb16 = {
RET.0 = _28.0;
_18.1 = _24.1 ^ _24.1;
_24.0 = _19.fld0;
_3 = _18.0 as isize;
_24 = (_22, _18.1);
_23 = -(-7834876144265863468_i64);
_30 = !_18.0;
_6 = _9;
_2 = _9.0 ^ _4;
_25 = _1 - _13;
_8 = !_25;
_2 = -_7;
_18 = (_19.fld0, _24.1);
RET = (_27,);
_6 = _9;
RET.0 = [2345556623_u32,1464248720_u32,4264434553_u32,3689457864_u32];
_24 = _18;
_10 = _1;
_22 = _18.0 ^ _24.0;
_9 = (_25,);
_31 = 26540_i16 as usize;
Call(_4 = core::intrinsics::bswap(_6.0), ReturnTo(bb11), UnwindUnreachable())
}
bb17 = {
_38.0 = _31;
_42 = (_28.0,);
_38.1 = (_19.fld0, _24.1);
_48 = !317565730871742109220777261126476994295_u128;
_27 = [2226527594_u32,2398210173_u32,4253413969_u32,3588599941_u32];
_2 = _4;
_10 = _38.2 + _2;
_48 = 83886626489631705197742419637347203870_u128;
RET = (_28.0,);
_50.fld3 = _35.fld0;
_51.fld3 = _35.fld0;
_45 = _48;
_38.5.1 = !_24.1;
_28.0 = RET.0;
_35.fld3 = [3830839465_u32,540798086_u32,4072614735_u32,669284178_u32];
_46 = -_38.3.2;
_38.1.0 = -_24.0;
_34 = _33;
_24.0 = _38.5.0;
_24.1 = 2641609877_u32 as u64;
_50.fld1 = core::ptr::addr_of!(_48);
_30 = _22 >> _3;
_24.1 = 2517822703_u32 as u64;
_36 = _25 >> _10;
_41 = [_38.1.1,_38.5.1,_38.1.1,_24.1,_18.1];
_6 = (_2,);
_36 = -_38.2;
Goto(bb18)
}
bb18 = {
Call(_54 = dump_var(17_usize, 26_usize, Move(_26), 13_usize, Move(_13), 23_usize, Move(_23), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_54 = dump_var(17_usize, 32_usize, Move(_32), 48_usize, Move(_48), 45_usize, Move(_45), 8_usize, Move(_8)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_54 = dump_var(17_usize, 22_usize, Move(_22), 10_usize, Move(_10), 31_usize, Move(_31), 12_usize, Move(_12)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_54 = dump_var(17_usize, 34_usize, Move(_34), 36_usize, Move(_36), 37_usize, Move(_37), 4_usize, Move(_4)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(1272_u16), std::hint::black_box('\u{dd13c}'), std::hint::black_box(14_u8), std::hint::black_box((-167732437076245613851970110493933495329_i128)), std::hint::black_box(18358456845793969414_usize));
                
            }
#[derive(Debug)]
pub struct Adt40 {
fld0: i8,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt41 {
Variant0{
fld0: bool,
fld1: [u32; 4],
fld2: (u32,),
fld3: [i32; 1],
fld4: *const u128,
fld5: i128,

},
Variant1{
fld0: bool,
fld1: (i8, u64),
fld2: isize,
fld3: *mut *mut char,
fld4: *mut i16,
fld5: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64)),
fld6: u8,
fld7: u16,

},
Variant2{
fld0: i8,
fld1: *const bool,

},
Variant3{
fld0: *const bool,
fld1: u64,
fld2: isize,

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: u32,
fld1: char,
fld2: *mut *mut char,
fld3: i8,
fld4: (*const bool,),
fld5: *mut i16,

},
Variant1{
fld0: *mut i16,
fld1: i32,
fld2: f32,
fld3: Adt41,

},
Variant2{
fld0: f32,
fld1: u32,
fld2: (*mut char, u128, [u8; 6], bool),
fld3: i8,
fld4: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64)),
fld5: (i8, u64),
fld6: *const bool,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: u64,

},
Variant1{
fld0: u128,
fld1: Adt41,
fld2: [char; 4],
fld3: (*mut char, u128, [u8; 6], bool),
fld4: usize,

},
Variant2{
fld0: bool,
fld1: u16,
fld2: [i32; 1],
fld3: Adt41,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: bool,
fld1: (*const i16, f64, f64),
fld2: (i8, u64),
fld3: u32,
fld4: i16,
fld5: i32,
fld6: u8,
fld7: *const bool,

},
Variant1{
fld0: u16,
fld1: *const i16,

},
Variant2{
fld0: *const u128,
fld1: f64,
fld2: i64,
fld3: f32,

},
Variant3{
fld0: f32,
fld1: [u64; 5],
fld2: isize,
fld3: *mut i16,
fld4: Adt43,
fld5: *const i16,
fld6: (isize,),

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: [i32; 1],
fld1: (isize,),
fld2: *mut i16,
fld3: i64,

},
Variant1{
fld0: [char; 4],
fld1: i64,
fld2: i128,
fld3: f32,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt46 {
fld0: (*const i16, f64, f64),
fld1: (i8, u64),
fld2: f64,
fld3: *const [u32; 4],
fld4: Adt43,
fld5: [i32; 1],
}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: Adt42,
fld1: u8,
fld2: [u8; 6],
fld3: Adt41,
fld4: Adt43,
fld5: [u32; 4],

},
Variant1{
fld0: *const i16,
fld1: char,
fld2: *mut char,
fld3: usize,
fld4: Adt40,
fld5: u128,

},
Variant2{
fld0: [u8; 6],
fld1: Adt40,
fld2: Adt44,
fld3: *mut *mut char,
fld4: *const i16,
fld5: Adt46,
fld6: f64,

},
Variant3{
fld0: Adt43,
fld1: (u32,),
fld2: isize,
fld3: Adt41,
fld4: i16,
fld5: (isize,),
fld6: Adt44,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt44,

},
Variant1{
fld0: *mut char,
fld1: i64,
fld2: *const u128,
fld3: u64,
fld4: (*const i16, f64, f64),
fld5: i32,

},
Variant2{
fld0: u32,
fld1: char,
fld2: Adt41,
fld3: u128,
fld4: [char; 4],
fld5: (u32,),
fld6: Adt42,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: *const bool,
fld1: Adt43,
fld2: f32,

},
Variant1{
fld0: *mut *mut char,

},
Variant2{
fld0: Adt43,
fld1: [u8; 6],
fld2: Adt44,

},
Variant3{
fld0: *const u128,
fld1: (*mut char, u128, [u8; 6], bool),
fld2: u32,

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: [i32; 1],
fld1: Adt47,
fld2: *const [u32; 4],
fld3: [u32; 4],
fld4: i16,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: u64,
fld1: (*mut char, u128, [u8; 6], bool),
fld2: isize,
fld3: *mut *mut char,
fld4: usize,
fld5: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64)),
fld6: (i8, u64),

},
Variant1{
fld0: Adt40,

},
Variant2{
fld0: bool,
fld1: f64,
fld2: i128,
fld3: *const bool,
fld4: Adt46,
fld5: Adt50,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt42,
fld1: f32,
fld2: [char; 4],
fld3: i8,

},
Variant1{
fld0: u8,
fld1: *mut char,
fld2: Adt50,
fld3: [u8; 6],
fld4: *const [u32; 4],
fld5: [char; 4],
fld6: i64,

},
Variant2{
fld0: *const [u32; 4],

},
Variant3{
fld0: u8,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u128,
fld1: [u8; 6],
fld2: Adt45,
fld3: Adt40,
fld4: u8,
fld5: u32,
fld6: (*const i16, f64, f64),
fld7: Adt41,

},
Variant1{
fld0: *const u128,
fld1: f64,
fld2: u32,
fld3: (isize,),
fld4: [i32; 1],

},
Variant2{
fld0: *mut char,
fld1: (*const bool,),
fld2: [u32; 4],
fld3: Adt47,
fld4: u16,
fld5: Adt49,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: u16,
fld1: (u32,),
fld2: (i8, u64),
fld3: (isize,),
fld4: *const i16,
fld5: *mut i16,

},
Variant1{
fld0: Adt52,
fld1: (*mut char, u128, [u8; 6], bool),
fld2: *const i16,

},
Variant2{
fld0: Adt41,
fld1: char,
fld2: f32,

}}
#[derive(Debug)]
pub struct Adt55 {
fld0: Adt51,
fld1: *const u128,
fld2: *mut i128,
fld3: [i32; 1],
fld4: *mut i16,
fld5: Adt53,
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: (usize, (i8, u64), isize, (*const i16, f64, f64), u16, (i8, u64)),
fld1: isize,

},
Variant1{
fld0: u8,
fld1: [i32; 1],
fld2: *const [u32; 4],
fld3: u64,

},
Variant2{
fld0: f64,
fld1: f32,
fld2: isize,

}}

