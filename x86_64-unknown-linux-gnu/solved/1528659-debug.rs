#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: u64,mut _7: u32,mut _8: i128,mut _9: usize,mut _10: u8) -> *mut i64 {
mir! {
type RET = *mut i64;
let _11: u8;
let _12: u64;
let _13: (usize, i16);
let _14: i128;
let _15: (f32, u32, char);
let _16: [i16; 5];
let _17: ((f32, u32, char), f32);
let _18: Adt58;
let _19: [usize; 5];
let _20: isize;
let _21: bool;
let _22: *mut ([u64; 6],);
let _23: char;
let _24: f64;
let _25: f32;
let _26: Adt52;
let _27: Adt51;
let _28: isize;
let _29: Adt60;
let _30: f32;
let _31: Adt56;
let _32: Adt60;
let _33: u128;
let _34: [i16; 5];
let _35: ();
let _36: ();
{
_8 = (-2237300716963240621962553791454963785_i128);
Call(_2 = fn1(_8, _8, _8, _8, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = !18275677523916543069_u64;
_11 = (-87_i8) as u8;
Call(_13.0 = core::intrinsics::transmute(_12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = !_11;
_6 = _12;
_5 = !29579_i16;
_9 = _13.0;
_1 = !false;
_3 = !91_isize;
_13 = (_9, _5);
_9 = _13.0 | _13.0;
_13.1 = _5;
_6 = _12 * _12;
_9 = 124227428853119881536642909747519213694_u128 as usize;
_3 = (-9223372036854775808_isize);
_1 = true | false;
_10 = !_11;
_11 = _8 as u8;
_2 = '\u{2cd0f}';
_10 = _11;
_15.1 = !545469134_u32;
_9 = _13.0 - _13.0;
_15.1 = 3901731583_u32 >> _6;
_13.0 = _5 as usize;
_14 = _8 << _13.1;
_7 = _15.1 >> _15.1;
match _3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463454151235394913435648 => bb9,
_ => bb8
}
}
bb3 = {
_12 = !18275677523916543069_u64;
_11 = (-87_i8) as u8;
Call(_13.0 = core::intrinsics::transmute(_12), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = false & true;
_7 = _3 as u32;
_17.0.0 = _15.1 as f32;
_17.1 = _17.0.0;
_17.0 = (_17.1, _15.1, _2);
_14 = _8 | _8;
_17.0.2 = _2;
_7 = _11 as u32;
_19 = [_9,_9,_9,_9,_13.0];
_17.0 = (_17.1, _7, _2);
_17.0.0 = _17.1;
_15.2 = _17.0.2;
_14 = _8 - _8;
_19 = [_9,_9,_9,_13.0,_9];
_17.0.0 = -_17.1;
_15.0 = _17.0.0;
_9 = _13.0 * _13.0;
_17.0.0 = _13.0 as f32;
_2 = _17.0.2;
_17.0.0 = _15.0 * _17.1;
_4 = 64_i8;
_15.1 = _11 as u32;
_15.2 = _2;
_14 = -_8;
_19 = [_13.0,_9,_13.0,_9,_9];
_2 = _15.2;
_13.1 = _5 ^ _5;
_20 = _3 - _3;
_17.0.1 = _1 as u32;
_13 = (_9, _5);
Call(_9 = core::intrinsics::bswap(_13.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5 = _11 as i16;
_21 = _12 != _6;
_16 = [_13.1,_5,_5,_5,_5];
_12 = _6 ^ _6;
_15.2 = _2;
_23 = _15.2;
Goto(bb11)
}
bb11 = {
_11 = _10;
_6 = !_12;
_23 = _17.0.2;
_19 = [_9,_13.0,_9,_13.0,_9];
_2 = _17.0.2;
_4 = !13_i8;
_13 = (_9, _5);
_3 = _20;
_25 = _17.1 + _17.1;
_13 = (_9, _5);
_15.1 = 8695_u16 as u32;
_15 = (_17.1, _17.0.1, _2);
_26.fld1.2.0 = 1798098524766442631_i64;
RET = core::ptr::addr_of_mut!(_26.fld2.0);
_26.fld1.1.0 = _26.fld1.2.0 | _26.fld1.2.0;
_26.fld2.0 = _26.fld1.1.0;
_17.0.0 = _4 as f32;
_23 = _17.0.2;
_17.0.0 = -_25;
_26.fld3 = [_12,_12,_12,_12,_6,_12];
_13 = (_9, _5);
_15.1 = _7;
_26.fld1.1.1 = 245393897002889439203495023433813518149_u128 as u16;
_26.fld1.1.0 = (*RET) + (*RET);
_21 = !_1;
Goto(bb12)
}
bb12 = {
_26.fld1.0 = _8 as isize;
(*RET) = _4 as i64;
_15.2 = _17.0.2;
_17 = (_15, _25);
_13.1 = _5;
match _26.fld1.2.0 {
0 => bb2,
1798098524766442631 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
(*RET) = _21 as i64;
_26.fld1.2 = ((*RET),);
(*RET) = _26.fld1.1.0;
_28 = -_3;
_17.1 = -_25;
_9 = _17.0.1 as usize;
_31 = Adt56::Variant0 { fld0: _12,fld1: _13.1 };
_25 = _26.fld1.1.1 as f32;
_26.fld2 = _26.fld1.2;
_20 = _3 | _3;
_28 = -_20;
_12 = _8 as u64;
_11 = _10 - _10;
_2 = _17.0.2;
_26.fld1.2 = _26.fld2;
_21 = _1;
_13.0 = !_9;
_2 = _17.0.2;
_4 = (-104_i8);
_33 = 123304812505284247682988167424433606410_u128;
_30 = _15.0 * _17.1;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(0_usize, 9_usize, Move(_9), 2_usize, Move(_2), 5_usize, Move(_5), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(0_usize, 1_usize, Move(_1), 28_usize, Move(_28), 20_usize, Move(_20), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(0_usize, 7_usize, Move(_7), 10_usize, Move(_10), 36_usize, _36, 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i128,mut _2: i128,mut _3: i128,mut _4: i128,mut _5: i128) -> char {
mir! {
type RET = char;
let _6: [u64; 6];
let _7: u16;
let _8: ([u64; 6],);
let _9: i128;
let _10: isize;
let _11: [usize; 8];
let _12: [i16; 5];
let _13: char;
let _14: i16;
let _15: Adt57;
let _16: Adt57;
let _17: (char, u8);
let _18: Adt51;
let _19: f64;
let _20: usize;
let _21: *mut ([u64; 6],);
let _22: [usize; 7];
let _23: (f32, u32, char);
let _24: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64);
let _25: [i32; 6];
let _26: [u16; 4];
let _27: (char, u8);
let _28: Adt58;
let _29: *const *mut [i16; 3];
let _30: *const char;
let _31: ();
let _32: ();
{
_2 = 2659_u16 as i128;
RET = '\u{c0f9a}';
RET = '\u{c33db}';
_3 = _1 * _4;
_4 = _3;
_4 = -_2;
_4 = _5;
_7 = 6512092290842444806_u64 as u16;
Goto(bb1)
}
bb1 = {
_3 = _1 * _5;
_2 = _3;
_3 = 111_isize as i128;
RET = '\u{7501c}';
RET = '\u{f33de}';
RET = '\u{f0a51}';
_8.0 = [13325609432810844295_u64,10273568308186076073_u64,2449851450117060629_u64,5830171814325996299_u64,7395103052742883542_u64,18283004267793664354_u64];
_4 = _1;
RET = '\u{2a90b}';
Goto(bb2)
}
bb2 = {
_6 = [14011535653040686450_u64,319108662564629051_u64,11660251644748506790_u64,17164186135111527682_u64,17152260791616987486_u64,13709650793122651176_u64];
_6 = _8.0;
_9 = (-1493578204_i32) as i128;
RET = '\u{c0b36}';
RET = '\u{68435}';
_8 = (_6,);
_5 = _9;
_7 = 45193_u16 | 46939_u16;
_9 = _1;
_3 = !_2;
_10 = (-9223372036854775808_isize);
_4 = !_2;
_9 = !_4;
_8 = (_6,);
RET = '\u{8bd14}';
_2 = true as i128;
Goto(bb3)
}
bb3 = {
_2 = _9 & _1;
_1 = !_2;
_1 = RET as i128;
_13 = RET;
RET = _13;
_17.0 = RET;
_12 = [(-5814_i16),(-20292_i16),(-14297_i16),(-7277_i16),8942_i16];
_4 = 179202946486680278121734136765964945980_u128 as i128;
_6 = [2171869591868410006_u64,6841948188957324481_u64,5580349318226090999_u64,776765995928401034_u64,2231750588827794014_u64,9845647455615645141_u64];
_11 = [5124007573716897315_usize,5_usize,17307310696469874869_usize,6_usize,16197404608908203184_usize,9651963278073617425_usize,8758474310314466957_usize,14161261132972794954_usize];
_9 = -_2;
_17.1 = !89_u8;
_14 = !(-1134_i16);
_6 = [13884495799033424102_u64,10221521086914351307_u64,10538903057794040068_u64,17665425898508825577_u64,14171623243681260334_u64,547277398284663160_u64];
_3 = -_2;
Call(_15 = fn2(_12, _8.0, _11, _1, _17.0, _10, _2, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
place!(Field::<(i64,)>(Variant(_15, 0), 1)) = (4353356457615698217_i64,);
place!(Field::<(char, u8)>(Variant(_15, 0), 3)).0 = _17.0;
place!(Field::<(char, u8)>(Variant(_15, 0), 3)).1 = Field::<u64>(Variant(_15, 0), 6) as u8;
place!(Field::<u64>(Variant(_15, 0), 6)) = 8905274274771276333_u64;
_10 = true as isize;
place!(Field::<(char, u8)>(Variant(_15, 0), 3)).0 = _13;
_10 = Field::<u64>(Variant(_15, 0), 6) as isize;
_9 = Field::<u64>(Variant(_15, 0), 6) as i128;
_8.0 = [Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6)];
RET = _17.0;
_10 = 54_isize;
_11 = [4042759365971790960_usize,15379270162355644852_usize,195449732172771858_usize,4_usize,18262759416959086083_usize,4213836574057239884_usize,9972872089067034879_usize,1_usize];
place!(Field::<[u32; 4]>(Variant(place!(Field::<Adt54>(Variant(_15, 0), 5)), 1), 0)) = [963898609_u32,4044462613_u32,532900444_u32,2577875973_u32];
place!(Field::<u64>(Variant(_15, 0), 6)) = 8513097042683721363_u64 << Field::<i16>(Variant(_15, 0), 4);
SetDiscriminant(_15, 0);
place!(Field::<[i8; 3]>(Variant(_15, 0), 2)) = [87_i8,9_i8,(-72_i8)];
_17 = (RET, 191_u8);
place!(Field::<(char, u8)>(Variant(_15, 0), 3)) = _17;
_3 = _4;
place!(Field::<(i64,)>(Variant(_15, 0), 1)) = (8623147381709844624_i64,);
_1 = !_3;
match _10 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
54 => bb9,
_ => bb8
}
}
bb5 = {
_2 = _9 & _1;
_1 = !_2;
_1 = RET as i128;
_13 = RET;
RET = _13;
_17.0 = RET;
_12 = [(-5814_i16),(-20292_i16),(-14297_i16),(-7277_i16),8942_i16];
_4 = 179202946486680278121734136765964945980_u128 as i128;
_6 = [2171869591868410006_u64,6841948188957324481_u64,5580349318226090999_u64,776765995928401034_u64,2231750588827794014_u64,9845647455615645141_u64];
_11 = [5124007573716897315_usize,5_usize,17307310696469874869_usize,6_usize,16197404608908203184_usize,9651963278073617425_usize,8758474310314466957_usize,14161261132972794954_usize];
_9 = -_2;
_17.1 = !89_u8;
_14 = !(-1134_i16);
_6 = [13884495799033424102_u64,10221521086914351307_u64,10538903057794040068_u64,17665425898508825577_u64,14171623243681260334_u64,547277398284663160_u64];
_3 = -_2;
Call(_15 = fn2(_12, _8.0, _11, _1, _17.0, _10, _2, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_6 = [14011535653040686450_u64,319108662564629051_u64,11660251644748506790_u64,17164186135111527682_u64,17152260791616987486_u64,13709650793122651176_u64];
_6 = _8.0;
_9 = (-1493578204_i32) as i128;
RET = '\u{c0b36}';
RET = '\u{68435}';
_8 = (_6,);
_5 = _9;
_7 = 45193_u16 | 46939_u16;
_9 = _1;
_3 = !_2;
_10 = (-9223372036854775808_isize);
_4 = !_2;
_9 = !_4;
_8 = (_6,);
RET = '\u{8bd14}';
_2 = true as i128;
Goto(bb3)
}
bb7 = {
_3 = _1 * _5;
_2 = _3;
_3 = 111_isize as i128;
RET = '\u{7501c}';
RET = '\u{f33de}';
RET = '\u{f0a51}';
_8.0 = [13325609432810844295_u64,10273568308186076073_u64,2449851450117060629_u64,5830171814325996299_u64,7395103052742883542_u64,18283004267793664354_u64];
_4 = _1;
RET = '\u{2a90b}';
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_20 = 14476532059657905833_usize + 8616605003473916265_usize;
place!(Field::<[i8; 3]>(Variant(_15, 0), 2)) = [81_i8,(-62_i8),40_i8];
_4 = true as i128;
place!(Field::<(char, u8)>(Variant(_15, 0), 3)).0 = _13;
place!(Field::<u16>(Variant(_15, 0), 0)) = !_7;
place!(Field::<i16>(Variant(_15, 0), 4)) = _14 + _14;
_2 = 3294851823_u32 as i128;
place!(Field::<u16>(Variant(_15, 0), 0)) = _7 ^ _7;
_21 = core::ptr::addr_of_mut!(_8);
_7 = !Field::<u16>(Variant(_15, 0), 0);
_17.0 = RET;
place!(Field::<u16>(Variant(_15, 0), 0)) = _7;
_8.0 = [13175187574472419022_u64,17405726589196157248_u64,16520225804006661946_u64,16792536784033868816_u64,16054121915997794020_u64,10071873571316187019_u64];
_22 = [_20,_20,_20,_20,_20,_20,_20];
place!(Field::<u64>(Variant(_15, 0), 6)) = !13688528288667929638_u64;
_17 = (_13, Field::<(char, u8)>(Variant(_15, 0), 3).1);
place!(Field::<u64>(Variant(_15, 0), 6)) = 11203798913705779448_u64 << _9;
_23.1 = Field::<(char, u8)>(Variant(_15, 0), 3).1 as u32;
_11 = [_20,_20,_20,_20,_20,_20,_20,_20];
_23.1 = 1086245511_u32;
match Field::<(char, u8)>(Variant(_15, 0), 3).1 {
191 => bb10,
_ => bb3
}
}
bb10 = {
_1 = _2 & _2;
_17 = Field::<(char, u8)>(Variant(_15, 0), 3);
_24.1 = [_20,_20,_20,_20,_20,_20,_20,_20];
place!(Field::<(char, u8)>(Variant(_15, 0), 3)) = _17;
_12 = [_14,Field::<i16>(Variant(_15, 0), 4),Field::<i16>(Variant(_15, 0), 4),_14,Field::<i16>(Variant(_15, 0), 4)];
_4 = _9;
_24.0.0.1 = (-5_i8) as i64;
_24.4 = [30_i8,(-36_i8),(-66_i8)];
_24.0.0.2 = Field::<(char, u8)>(Variant(_15, 0), 3).1 != Field::<(char, u8)>(Variant(_15, 0), 3).1;
match Field::<(char, u8)>(Variant(_15, 0), 3).1 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
191 => bb16,
_ => bb15
}
}
bb11 = {
_20 = 14476532059657905833_usize + 8616605003473916265_usize;
place!(Field::<[i8; 3]>(Variant(_15, 0), 2)) = [81_i8,(-62_i8),40_i8];
_4 = true as i128;
place!(Field::<(char, u8)>(Variant(_15, 0), 3)).0 = _13;
place!(Field::<u16>(Variant(_15, 0), 0)) = !_7;
place!(Field::<i16>(Variant(_15, 0), 4)) = _14 + _14;
_2 = 3294851823_u32 as i128;
place!(Field::<u16>(Variant(_15, 0), 0)) = _7 ^ _7;
_21 = core::ptr::addr_of_mut!(_8);
_7 = !Field::<u16>(Variant(_15, 0), 0);
_17.0 = RET;
place!(Field::<u16>(Variant(_15, 0), 0)) = _7;
_8.0 = [13175187574472419022_u64,17405726589196157248_u64,16520225804006661946_u64,16792536784033868816_u64,16054121915997794020_u64,10071873571316187019_u64];
_22 = [_20,_20,_20,_20,_20,_20,_20];
place!(Field::<u64>(Variant(_15, 0), 6)) = !13688528288667929638_u64;
_17 = (_13, Field::<(char, u8)>(Variant(_15, 0), 3).1);
place!(Field::<u64>(Variant(_15, 0), 6)) = 11203798913705779448_u64 << _9;
_23.1 = Field::<(char, u8)>(Variant(_15, 0), 3).1 as u32;
_11 = [_20,_20,_20,_20,_20,_20,_20,_20];
_23.1 = 1086245511_u32;
match Field::<(char, u8)>(Variant(_15, 0), 3).1 {
191 => bb10,
_ => bb3
}
}
bb12 = {
_6 = [14011535653040686450_u64,319108662564629051_u64,11660251644748506790_u64,17164186135111527682_u64,17152260791616987486_u64,13709650793122651176_u64];
_6 = _8.0;
_9 = (-1493578204_i32) as i128;
RET = '\u{c0b36}';
RET = '\u{68435}';
_8 = (_6,);
_5 = _9;
_7 = 45193_u16 | 46939_u16;
_9 = _1;
_3 = !_2;
_10 = (-9223372036854775808_isize);
_4 = !_2;
_9 = !_4;
_8 = (_6,);
RET = '\u{8bd14}';
_2 = true as i128;
Goto(bb3)
}
bb13 = {
_3 = _1 * _5;
_2 = _3;
_3 = 111_isize as i128;
RET = '\u{7501c}';
RET = '\u{f33de}';
RET = '\u{f0a51}';
_8.0 = [13325609432810844295_u64,10273568308186076073_u64,2449851450117060629_u64,5830171814325996299_u64,7395103052742883542_u64,18283004267793664354_u64];
_4 = _1;
RET = '\u{2a90b}';
Goto(bb2)
}
bb14 = {
_6 = [14011535653040686450_u64,319108662564629051_u64,11660251644748506790_u64,17164186135111527682_u64,17152260791616987486_u64,13709650793122651176_u64];
_6 = _8.0;
_9 = (-1493578204_i32) as i128;
RET = '\u{c0b36}';
RET = '\u{68435}';
_8 = (_6,);
_5 = _9;
_7 = 45193_u16 | 46939_u16;
_9 = _1;
_3 = !_2;
_10 = (-9223372036854775808_isize);
_4 = !_2;
_9 = !_4;
_8 = (_6,);
RET = '\u{8bd14}';
_2 = true as i128;
Goto(bb3)
}
bb15 = {
_2 = _9 & _1;
_1 = !_2;
_1 = RET as i128;
_13 = RET;
RET = _13;
_17.0 = RET;
_12 = [(-5814_i16),(-20292_i16),(-14297_i16),(-7277_i16),8942_i16];
_4 = 179202946486680278121734136765964945980_u128 as i128;
_6 = [2171869591868410006_u64,6841948188957324481_u64,5580349318226090999_u64,776765995928401034_u64,2231750588827794014_u64,9845647455615645141_u64];
_11 = [5124007573716897315_usize,5_usize,17307310696469874869_usize,6_usize,16197404608908203184_usize,9651963278073617425_usize,8758474310314466957_usize,14161261132972794954_usize];
_9 = -_2;
_17.1 = !89_u8;
_14 = !(-1134_i16);
_6 = [13884495799033424102_u64,10221521086914351307_u64,10538903057794040068_u64,17665425898508825577_u64,14171623243681260334_u64,547277398284663160_u64];
_3 = -_2;
Call(_15 = fn2(_12, _8.0, _11, _1, _17.0, _10, _2, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb16 = {
_1 = !_4;
place!(Field::<(char, u8)>(Variant(_15, 0), 3)).1 = _17.1;
_24.0.0.0 = _10 as f64;
_14 = Field::<i16>(Variant(_15, 0), 4);
_27 = (_13, Field::<(char, u8)>(Variant(_15, 0), 3).1);
_23.0 = 195018294670051403860829086977774630925_u128 as f32;
_27 = _17;
_26 = [_7,Field::<u16>(Variant(_15, 0), 0),Field::<u16>(Variant(_15, 0), 0),Field::<u16>(Variant(_15, 0), 0)];
_6 = (*_21).0;
_8 = (_6,);
_11 = _24.1;
(*_21).0 = [Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6),Field::<u64>(Variant(_15, 0), 6)];
_23.2 = _17.0;
place!(Field::<(i64,)>(Variant(_15, 0), 1)) = (_24.0.0.1,);
place!(Field::<[i8; 3]>(Variant(_15, 0), 2)) = [62_i8,44_i8,(-112_i8)];
_24.5 = Field::<(i64,)>(Variant(_15, 0), 1).0 << _14;
_17 = _27;
_19 = _24.0.0.0 - _24.0.0.0;
_14 = !Field::<i16>(Variant(_15, 0), 4);
_24.3 = 22524840603267905453211591358506800356_u128;
_23.2 = _27.0;
place!(Field::<(char, u8)>(Variant(_15, 0), 3)) = (_27.0, _17.1);
place!(Field::<(i64,)>(Variant(_15, 0), 1)) = (_24.0.0.1,);
(*_21) = (_6,);
_24.1 = [_20,_20,_20,_20,_20,_20,_20,_20];
Goto(bb17)
}
bb17 = {
Call(_31 = dump_var(1_usize, 20_usize, Move(_20), 2_usize, Move(_2), 14_usize, Move(_14), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_31 = dump_var(1_usize, 22_usize, Move(_22), 10_usize, Move(_10), 17_usize, Move(_17), 8_usize, Move(_8)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(1_usize, 6_usize, Move(_6), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [i16; 5],mut _2: [u64; 6],mut _3: [usize; 8],mut _4: i128,mut _5: char,mut _6: isize,mut _7: i128,mut _8: ([u64; 6],)) -> Adt57 {
mir! {
type RET = Adt57;
let _9: Adt56;
let _10: (f32, u32, char);
let _11: f64;
let _12: f64;
let _13: i16;
let _14: isize;
let _15: *mut char;
let _16: Adt62;
let _17: f32;
let _18: f64;
let _19: (char, u8);
let _20: f32;
let _21: char;
let _22: [u16; 6];
let _23: f64;
let _24: bool;
let _25: u32;
let _26: char;
let _27: ((f64, i64, bool),);
let _28: u32;
let _29: f32;
let _30: Adt58;
let _31: Adt62;
let _32: i128;
let _33: bool;
let _34: Adt59;
let _35: Adt49;
let _36: *mut ([u64; 6],);
let _37: *const char;
let _38: Adt57;
let _39: *mut ([u64; 6],);
let _40: char;
let _41: Adt54;
let _42: bool;
let _43: Adt59;
let _44: [i128; 2];
let _45: usize;
let _46: usize;
let _47: (usize, i16);
let _48: f64;
let _49: (char, u8);
let _50: u8;
let _51: usize;
let _52: ((f32, u32, char), f32);
let _53: u8;
let _54: i128;
let _55: Adt60;
let _56: Adt55;
let _57: f32;
let _58: isize;
let _59: bool;
let _60: i32;
let _61: *mut ([u64; 6],);
let _62: (isize, (i64, u16, *mut [i16; 3]), (i64,));
let _63: (i64, u16, *mut [i16; 3]);
let _64: isize;
let _65: isize;
let _66: char;
let _67: f32;
let _68: i8;
let _69: i64;
let _70: usize;
let _71: f32;
let _72: i128;
let _73: f64;
let _74: [i16; 3];
let _75: (i64, u16, *mut [i16; 3]);
let _76: [u64; 6];
let _77: Adt55;
let _78: u32;
let _79: [i32; 6];
let _80: isize;
let _81: u16;
let _82: bool;
let _83: isize;
let _84: Adt60;
let _85: [u64; 6];
let _86: bool;
let _87: (char, u8);
let _88: bool;
let _89: *mut ([u64; 6],);
let _90: f64;
let _91: [i32; 6];
let _92: isize;
let _93: (i64, i128, [i8; 3], *const *mut [i16; 3], i128);
let _94: f64;
let _95: i128;
let _96: isize;
let _97: i8;
let _98: isize;
let _99: i128;
let _100: [usize; 8];
let _101: [i128; 2];
let _102: u32;
let _103: ([u64; 6],);
let _104: char;
let _105: bool;
let _106: bool;
let _107: u64;
let _108: isize;
let _109: ((f64, i64, bool),);
let _110: f32;
let _111: f32;
let _112: isize;
let _113: u64;
let _114: Adt50;
let _115: isize;
let _116: char;
let _117: ((f32, u32, char), f32);
let _118: [u16; 6];
let _119: i64;
let _120: f64;
let _121: *const *const *mut [i16; 3];
let _122: [i128; 2];
let _123: u64;
let _124: *mut ([u64; 6],);
let _125: f32;
let _126: f64;
let _127: u128;
let _128: i16;
let _129: ([u64; 6],);
let _130: char;
let _131: [u16; 6];
let _132: isize;
let _133: ((f64, i64, bool),);
let _134: (f32, u32, char);
let _135: ((f32, u32, char), f32);
let _136: u128;
let _137: u64;
let _138: (usize, i16);
let _139: isize;
let _140: (f32, u32, char);
let _141: ([u64; 6],);
let _142: [i128; 2];
let _143: u8;
let _144: (i64,);
let _145: f32;
let _146: char;
let _147: [i16; 5];
let _148: isize;
let _149: Adt56;
let _150: bool;
let _151: f32;
let _152: (f64, i64, bool);
let _153: f64;
let _154: Adt55;
let _155: i8;
let _156: u8;
let _157: u128;
let _158: [i8; 3];
let _159: [i16; 3];
let _160: i8;
let _161: isize;
let _162: u32;
let _163: ((f64, i64, bool),);
let _164: [i32; 6];
let _165: Adt57;
let _166: isize;
let _167: f64;
let _168: char;
let _169: i32;
let _170: isize;
let _171: i8;
let _172: [i32; 6];
let _173: *mut ([u64; 6],);
let _174: f32;
let _175: Adt63;
let _176: [i128; 2];
let _177: isize;
let _178: u128;
let _179: i8;
let _180: ();
let _181: ();
{
_8 = (_2,);
_8 = (_2,);
_4 = -_7;
_8.0 = [4446167660715380007_u64,2070358135681275493_u64,3939755687008112359_u64,8508882271252506754_u64,174071038431160891_u64,16914276266339411943_u64];
_3 = [17624849398534655608_usize,0_usize,93630492456481234_usize,18360535452073376540_usize,12721844304965401850_usize,15265485263476307767_usize,2673725118227929442_usize,5_usize];
_5 = '\u{17d8d}';
_8.0 = [1385778372321051065_u64,7264038790190525598_u64,993808890826066532_u64,5039022243246784440_u64,18295037872313947421_u64,3401898216890007203_u64];
_7 = _4 | _4;
_3 = [4_usize,13547762370396454411_usize,5_usize,7_usize,6938566793843548713_usize,7906953726412932702_usize,2033056722021822832_usize,2820952983922114147_usize];
_8.0 = _2;
_7 = 165061692177711098863022262007186770948_u128 as i128;
_1 = [21241_i16,(-25274_i16),6425_i16,(-8987_i16),(-28082_i16)];
_7 = !_4;
_5 = '\u{453a6}';
_3 = [1_usize,0_usize,14306764412934957409_usize,3_usize,11223955378276618149_usize,12555301220950021042_usize,13394475612629940091_usize,7_usize];
_4 = _7 << _7;
_3 = [14472875266332153549_usize,6_usize,2_usize,4955524248958265113_usize,14725713245577400413_usize,6526450973575642655_usize,3_usize,2_usize];
_2 = [16730054590312448863_u64,10981418689454443905_u64,2255689407418633969_u64,2395932949955340062_u64,3332601119681682822_u64,2646901709778232809_u64];
_10.1 = 2345272813_u32 << _7;
_3 = [9807954054203097377_usize,3_usize,14831306682413375488_usize,1_usize,10845094460217771003_usize,2_usize,6_usize,4_usize];
Call(_9 = fn3(_1, _5, _8, _2, _8, _2, _8.0, _8, _2, _8.0, _8.0, _7, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb2 = {
_4 = _7 | _7;
_3 = [12779002378879938865_usize,3412910163863521598_usize,7_usize,4114180175700608222_usize,3_usize,5461078600558670796_usize,1_usize,1_usize];
_19 = (_5, 193_u8);
_3 = [3_usize,3_usize,5_usize,0_usize,10567186384726732119_usize,12752757307162901446_usize,0_usize,0_usize];
match _10.1 {
0 => bb1,
1120250189 => bb4,
_ => bb3
}
}
bb3 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb4 = {
_17 = _10.0 + _10.0;
match _10.1 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
1120250189 => bb8,
_ => bb7
}
}
bb5 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb6 = {
_4 = _7 | _7;
_3 = [12779002378879938865_usize,3412910163863521598_usize,7_usize,4114180175700608222_usize,3_usize,5461078600558670796_usize,1_usize,1_usize];
_19 = (_5, 193_u8);
_3 = [3_usize,3_usize,5_usize,0_usize,10567186384726732119_usize,12752757307162901446_usize,0_usize,0_usize];
match _10.1 {
0 => bb1,
1120250189 => bb4,
_ => bb3
}
}
bb7 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb8 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb9 = {
_19.0 = _21;
_13 = -Field::<i16>(Variant(_9, 0), 1);
_10.2 = _19.0;
_10 = (_17, 1072619084_u32, _21);
_19.1 = !130_u8;
(*_15) = _5;
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_10.2 = (*_15);
SetDiscriminant(_9, 0);
_9 = Adt56::Variant0 { fld0: 1224913410254290551_u64,fld1: _13 };
(*_15) = _21;
_13 = Field::<i16>(Variant(_9, 0), 1) + Field::<i16>(Variant(_9, 0), 1);
_16 = Adt62::Variant1 { fld0: 3_usize,fld1: _10,fld2: _14 };
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _19.1 as u32;
Call(_1 = fn18(_14, (*_15), _10, _10.2, _20, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_1 = [_13,_13,Field::<i16>(Variant(_9, 0), 1),_13,_13];
_22 = [21949_u16,63859_u16,45591_u16,29612_u16,33293_u16,13214_u16];
(*_15) = _21;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _10.1 % _10.1;
_5 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).2;
_19 = (_5, 156_u8);
_25 = 2118559759_i32 as u32;
_26 = _5;
_19.0 = _26;
_7 = (-543471864_i32) as i128;
_24 = false;
place!(Field::<usize>(Variant(_16, 1), 0)) = 10546010803931479136_usize;
_8.0 = [7430987636552448290_u64,4241489629613796765_u64,4520748590509626037_u64,16351689237270096796_u64,16337200425972349301_u64,2217808064050058491_u64];
_18 = _11 - _11;
_16 = Adt62::Variant1 { fld0: 4_usize,fld1: _10,fld2: _14 };
place!(Field::<u64>(Variant(_9, 0), 0)) = _13 as u64;
_21 = _5;
_3 = [1_usize,3862645511315902620_usize,1_usize,4_usize,3330091395526260377_usize,15927942204347462543_usize,4_usize,7_usize];
Goto(bb11)
}
bb11 = {
_10.2 = (*_15);
place!(Field::<usize>(Variant(_16, 1), 0)) = !6047964197069198832_usize;
_10.0 = -_20;
_10.1 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1;
_10.2 = _21;
_16 = Adt62::Variant1 { fld0: 7_usize,fld1: _10,fld2: _14 };
_23 = _11 - _12;
_27.0.0 = (-5488240441542931289_i64) as f64;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = 28986_u16 as f32;
match _19.1 {
0 => bb8,
1 => bb2,
2 => bb10,
3 => bb12,
4 => bb13,
5 => bb14,
156 => bb16,
_ => bb15
}
}
bb12 = {
_1 = [_13,_13,Field::<i16>(Variant(_9, 0), 1),_13,_13];
_22 = [21949_u16,63859_u16,45591_u16,29612_u16,33293_u16,13214_u16];
(*_15) = _21;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _10.1 % _10.1;
_5 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).2;
_19 = (_5, 156_u8);
_25 = 2118559759_i32 as u32;
_26 = _5;
_19.0 = _26;
_7 = (-543471864_i32) as i128;
_24 = false;
place!(Field::<usize>(Variant(_16, 1), 0)) = 10546010803931479136_usize;
_8.0 = [7430987636552448290_u64,4241489629613796765_u64,4520748590509626037_u64,16351689237270096796_u64,16337200425972349301_u64,2217808064050058491_u64];
_18 = _11 - _11;
_16 = Adt62::Variant1 { fld0: 4_usize,fld1: _10,fld2: _14 };
place!(Field::<u64>(Variant(_9, 0), 0)) = _13 as u64;
_21 = _5;
_3 = [1_usize,3862645511315902620_usize,1_usize,4_usize,3330091395526260377_usize,15927942204347462543_usize,4_usize,7_usize];
Goto(bb11)
}
bb13 = {
_19.0 = _21;
_13 = -Field::<i16>(Variant(_9, 0), 1);
_10.2 = _19.0;
_10 = (_17, 1072619084_u32, _21);
_19.1 = !130_u8;
(*_15) = _5;
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_10.2 = (*_15);
SetDiscriminant(_9, 0);
_9 = Adt56::Variant0 { fld0: 1224913410254290551_u64,fld1: _13 };
(*_15) = _21;
_13 = Field::<i16>(Variant(_9, 0), 1) + Field::<i16>(Variant(_9, 0), 1);
_16 = Adt62::Variant1 { fld0: 3_usize,fld1: _10,fld2: _14 };
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _19.1 as u32;
Call(_1 = fn18(_14, (*_15), _10, _10.2, _20, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb10), UnwindUnreachable())
}
bb14 = {
_4 = _7 | _7;
_3 = [12779002378879938865_usize,3412910163863521598_usize,7_usize,4114180175700608222_usize,3_usize,5461078600558670796_usize,1_usize,1_usize];
_19 = (_5, 193_u8);
_3 = [3_usize,3_usize,5_usize,0_usize,10567186384726732119_usize,12752757307162901446_usize,0_usize,0_usize];
match _10.1 {
0 => bb1,
1120250189 => bb4,
_ => bb3
}
}
bb15 = {
_17 = _10.0 + _10.0;
match _10.1 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
1120250189 => bb8,
_ => bb7
}
}
bb16 = {
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
SetDiscriminant(_9, 0);
place!(Field::<isize>(Variant(_16, 1), 2)) = -_14;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _10.2;
_10.1 = 51665_u16 as u32;
_13 = (-2028_i16);
Goto(bb17)
}
bb17 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb18 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb19 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb20 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb21 = {
_19.0 = _21;
_13 = -Field::<i16>(Variant(_9, 0), 1);
_10.2 = _19.0;
_10 = (_17, 1072619084_u32, _21);
_19.1 = !130_u8;
(*_15) = _5;
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_10.2 = (*_15);
SetDiscriminant(_9, 0);
_9 = Adt56::Variant0 { fld0: 1224913410254290551_u64,fld1: _13 };
(*_15) = _21;
_13 = Field::<i16>(Variant(_9, 0), 1) + Field::<i16>(Variant(_9, 0), 1);
_16 = Adt62::Variant1 { fld0: 3_usize,fld1: _10,fld2: _14 };
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _19.1 as u32;
Call(_1 = fn18(_14, (*_15), _10, _10.2, _20, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb10), UnwindUnreachable())
}
bb22 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb23 = {
_12 = _11;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = _11 as f32;
_25 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 * _10.1;
_29 = -_10.0;
_11 = -_27.0.0;
_11 = _27.0.0 * _27.0.0;
_25 = (-35823592_i32) as u32;
_18 = _27.0.0;
_1 = [_13,_13,_13,_13,_13];
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)) = (_17, _25, _26);
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = Field::<isize>(Variant(_16, 1), 2) as f32;
_19 = (_5, 213_u8);
_8.0 = [17681198529007162378_u64,9420557840755684257_u64,17235460720549155329_u64,12691073298461222742_u64,10046934130103838362_u64,13737056342525202811_u64];
_17 = -_20;
_14 = Field::<isize>(Variant(_16, 1), 2) * _6;
_8.0 = [17612573685983606197_u64,17194653337671072452_u64,7754365487833030724_u64,12679368592528784525_u64,17596947419063590678_u64,2311862861618562682_u64];
_10.2 = (*_15);
_23 = -_11;
_13 = 10927_i16 ^ 21323_i16;
Goto(bb24)
}
bb24 = {
_8 = (_2,);
match _27.0.1 {
0 => bb6,
1 => bb25,
2 => bb26,
3 => bb27,
4 => bb28,
5 => bb29,
340282366920938463462496196977373050184 => bb31,
_ => bb30
}
}
bb25 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb26 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb27 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb28 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb29 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb30 = {
_19.0 = _21;
_13 = -Field::<i16>(Variant(_9, 0), 1);
_10.2 = _19.0;
_10 = (_17, 1072619084_u32, _21);
_19.1 = !130_u8;
(*_15) = _5;
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_10.2 = (*_15);
SetDiscriminant(_9, 0);
_9 = Adt56::Variant0 { fld0: 1224913410254290551_u64,fld1: _13 };
(*_15) = _21;
_13 = Field::<i16>(Variant(_9, 0), 1) + Field::<i16>(Variant(_9, 0), 1);
_16 = Adt62::Variant1 { fld0: 3_usize,fld1: _10,fld2: _14 };
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _19.1 as u32;
Call(_1 = fn18(_14, (*_15), _10, _10.2, _20, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb10), UnwindUnreachable())
}
bb31 = {
_11 = -_23;
_37 = core::ptr::addr_of!(place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2);
_19.1 = !56_u8;
match _27.0.1 {
0 => bb32,
1 => bb33,
2 => bb34,
340282366920938463462496196977373050184 => bb36,
_ => bb35
}
}
bb32 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb33 = {
_12 = _11;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = _11 as f32;
_25 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 * _10.1;
_29 = -_10.0;
_11 = -_27.0.0;
_11 = _27.0.0 * _27.0.0;
_25 = (-35823592_i32) as u32;
_18 = _27.0.0;
_1 = [_13,_13,_13,_13,_13];
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)) = (_17, _25, _26);
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = Field::<isize>(Variant(_16, 1), 2) as f32;
_19 = (_5, 213_u8);
_8.0 = [17681198529007162378_u64,9420557840755684257_u64,17235460720549155329_u64,12691073298461222742_u64,10046934130103838362_u64,13737056342525202811_u64];
_17 = -_20;
_14 = Field::<isize>(Variant(_16, 1), 2) * _6;
_8.0 = [17612573685983606197_u64,17194653337671072452_u64,7754365487833030724_u64,12679368592528784525_u64,17596947419063590678_u64,2311862861618562682_u64];
_10.2 = (*_15);
_23 = -_11;
_13 = 10927_i16 ^ 21323_i16;
Goto(bb24)
}
bb34 = {
_19.0 = _21;
_13 = -Field::<i16>(Variant(_9, 0), 1);
_10.2 = _19.0;
_10 = (_17, 1072619084_u32, _21);
_19.1 = !130_u8;
(*_15) = _5;
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_10.2 = (*_15);
SetDiscriminant(_9, 0);
_9 = Adt56::Variant0 { fld0: 1224913410254290551_u64,fld1: _13 };
(*_15) = _21;
_13 = Field::<i16>(Variant(_9, 0), 1) + Field::<i16>(Variant(_9, 0), 1);
_16 = Adt62::Variant1 { fld0: 3_usize,fld1: _10,fld2: _14 };
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _19.1 as u32;
Call(_1 = fn18(_14, (*_15), _10, _10.2, _20, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb10), UnwindUnreachable())
}
bb35 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb36 = {
_6 = !_14;
_10.2 = _21;
_36 = core::ptr::addr_of_mut!(_8);
_12 = _27.0.1 as f64;
_27.0.2 = _24;
place!(Field::<usize>(Variant(_16, 1), 0)) = _24 as usize;
place!(Field::<u64>(Variant(_9, 0), 0)) = 5191386782340633336_u64;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _21;
_18 = -_23;
_19.1 = 90_u8;
_24 = _27.0.2;
_24 = _27.0.2;
_10 = (_29, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1, (*_37));
_13 = (-739_i16);
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = _20;
_11 = _12 + _12;
_15 = core::ptr::addr_of_mut!(_5);
_11 = _12 - _23;
place!(Field::<usize>(Variant(_16, 1), 0)) = 3_usize;
(*_37) = (*_15);
(*_15) = (*_37);
_7 = -_4;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25;
_28 = Field::<usize>(Variant(_16, 1), 0) as u32;
Goto(bb37)
}
bb37 = {
(*_37) = _19.0;
_10.0 = _17;
_7 = _4 + _4;
_3 = [Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0)];
_27.0.0 = _27.0.1 as f64;
_27.0 = (_11, (-2912223130136839676_i64), _24);
place!(Field::<u64>(Variant(_9, 0), 0)) = 14119461635175133727_u64 + 15508027217515520072_u64;
_19.0 = _10.2;
_21 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).2;
_42 = _27.0.1 <= _27.0.1;
(*_36).0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
(*_36).0 = _2;
match _27.0.1 {
0 => bb25,
1 => bb30,
2 => bb23,
3 => bb13,
340282366920938463460462384301631371780 => bb39,
_ => bb38
}
}
bb38 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb39 = {
_15 = core::ptr::addr_of_mut!((*_37));
_35 = Adt49::Variant0 { fld0: _3 };
place!(Field::<i16>(Variant(_9, 0), 1)) = _13;
place!(Field::<usize>(Variant(_16, 1), 0)) = !8399382915218765271_usize;
(*_36) = (_2,);
_19 = ((*_37), 236_u8);
(*_37) = _26;
_4 = _7;
_3 = Field::<[usize; 8]>(Variant(_35, 0), 0);
_28 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _5;
_27.0.1 = Field::<usize>(Variant(_16, 1), 0) as i64;
_14 = _6;
match Field::<i16>(Variant(_9, 0), 1) {
0 => bb38,
1 => bb17,
2 => bb24,
3 => bb4,
340282366920938463463374607431768210717 => bb41,
_ => bb40
}
}
bb40 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb41 = {
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = _28 as f32;
_19.0 = (*_15);
_33 = _42;
_28 = !_10.1;
_32 = _19.1 as i128;
_19 = (_10.2, 216_u8);
_27.0 = (_11, (-4693012068225137506_i64), _33);
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)) = _10;
_4 = _7 - _7;
_25 = _28 >> _27.0.1;
_29 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).0 - _10.0;
_42 = _23 <= _11;
match _27.0.1 {
0 => bb13,
1 => bb28,
2 => bb31,
3 => bb26,
4 => bb5,
5 => bb42,
6 => bb43,
340282366920938463458681595363543073950 => bb45,
_ => bb44
}
}
bb42 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb43 = {
_8 = (_2,);
match _27.0.1 {
0 => bb6,
1 => bb25,
2 => bb26,
3 => bb27,
4 => bb28,
5 => bb29,
340282366920938463462496196977373050184 => bb31,
_ => bb30
}
}
bb44 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb45 = {
_1 = [_13,_13,Field::<i16>(Variant(_9, 0), 1),Field::<i16>(Variant(_9, 0), 1),Field::<i16>(Variant(_9, 0), 1)];
_5 = _21;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,Field::<i16>(Variant(_9, 0), 1),_13];
(*_36) = (_2,);
SetDiscriminant(_16, 1);
_47.0 = 1_usize << _25;
place!(Field::<i16>(Variant(_9, 0), 1)) = _13;
_3 = [_47.0,_47.0,_47.0,_47.0,_47.0,_47.0,_47.0,_47.0];
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = !_25;
_8 = (_2,);
_27.0.0 = 21117_u16 as f64;
_10 = (_29, _25, _26);
_7 = _4;
_40 = _21;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = _10.0;
_46 = _47.0;
_15 = core::ptr::addr_of_mut!(_21);
_23 = -_18;
_39 = core::ptr::addr_of_mut!((*_36));
_17 = _10.0;
match _27.0.1 {
0 => bb24,
1 => bb32,
2 => bb39,
3 => bb21,
4 => bb5,
5 => bb28,
6 => bb37,
340282366920938463458681595363543073950 => bb46,
_ => bb9
}
}
bb46 = {
Goto(bb47)
}
bb47 = {
_47.1 = _13 & Field::<i16>(Variant(_9, 0), 1);
_27.0.1 = (-1573019687_i32) as i64;
_28 = !Field::<(f32, u32, char)>(Variant(_16, 1), 1).1;
SetDiscriminant(_9, 0);
_31 = Adt62::Variant1 { fld0: _46,fld1: _10,fld2: _6 };
_27.0.2 = _42;
_45 = Field::<usize>(Variant(_31, 1), 0) - Field::<usize>(Variant(_31, 1), 0);
SetDiscriminant(_31, 3);
_31 = Adt62::Variant1 { fld0: _46,fld1: _10,fld2: _14 };
_44 = [_4,_4];
_28 = _27.0.1 as u32;
_48 = _23 * _18;
_47.0 = _45;
_6 = -Field::<isize>(Variant(_31, 1), 2);
_48 = -_11;
_21 = _40;
place!(Field::<usize>(Variant(_16, 1), 0)) = _47.0;
(*_39).0 = [10192513690698490791_u64,12417527855485103738_u64,4145997451948920446_u64,6743323710766361102_u64,14830836244873346964_u64,5530413322761775691_u64];
SetDiscriminant(_31, 2);
_4 = _7 << _47.0;
SetDiscriminant(_35, 1);
_10.1 = (-90_i8) as u32;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).1 = [_46,_45,_46,_46,Field::<usize>(Variant(_16, 1), 0),Field::<usize>(Variant(_16, 1), 0),_47.0,_46];
Goto(bb48)
}
bb48 = {
place!(Field::<[i8; 3]>(Variant(_31, 2), 0)) = [123_i8,73_i8,(-128_i8)];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).4 = [19_i8,37_i8,(-77_i8)];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).2 = -_17;
place!(Field::<(f32, u32, char)>(Variant(_35, 1), 1)) = (Field::<(f32, u32, char)>(Variant(_16, 1), 1).0, Field::<(f32, u32, char)>(Variant(_16, 1), 1).1, _19.0);
place!(Field::<i128>(Variant(_31, 2), 5)) = _4 - _4;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).5 = _19.1 as i64;
_52.0 = (_17, _25, Field::<(f32, u32, char)>(Variant(_35, 1), 1).2);
_9 = Adt56::Variant0 { fld0: 1630697814424609700_u64,fld1: _47.1 };
_8.0 = [9951261197078881591_u64,878294107069686626_u64,2175380103860879796_u64,14478127595561450840_u64,16099548178382877399_u64,782242064206003363_u64];
_47.1 = _10.2 as i16;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0.1 = _27.0.1 >> _25;
place!(Field::<u64>(Variant(_9, 0), 0)) = 18290879125701193828_u64 ^ 9430503015174184451_u64;
_10 = _52.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).1;
_1 = [_47.1,_47.1,Field::<i16>(Variant(_9, 0), 1),_13,Field::<i16>(Variant(_9, 0), 1)];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0 = (_27.0,);
_10.2 = _21;
_17 = -_52.0.0;
match _13 {
0 => bb14,
1 => bb49,
2 => bb50,
3 => bb51,
340282366920938463463374607431768210717 => bb53,
_ => bb52
}
}
bb49 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb50 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb51 = {
_15 = core::ptr::addr_of_mut!((*_37));
_35 = Adt49::Variant0 { fld0: _3 };
place!(Field::<i16>(Variant(_9, 0), 1)) = _13;
place!(Field::<usize>(Variant(_16, 1), 0)) = !8399382915218765271_usize;
(*_36) = (_2,);
_19 = ((*_37), 236_u8);
(*_37) = _26;
_4 = _7;
_3 = Field::<[usize; 8]>(Variant(_35, 0), 0);
_28 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _5;
_27.0.1 = Field::<usize>(Variant(_16, 1), 0) as i64;
_14 = _6;
match Field::<i16>(Variant(_9, 0), 1) {
0 => bb38,
1 => bb17,
2 => bb24,
3 => bb4,
340282366920938463463374607431768210717 => bb41,
_ => bb40
}
}
bb52 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb53 = {
_52.0.1 = !_10.1;
_4 = -Field::<i128>(Variant(_31, 2), 5);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).4 = [21_i8,105_i8,36_i8];
place!(Field::<[i32; 2]>(Variant(_35, 1), 3)) = [(-1825772419_i32),1149060719_i32];
_29 = 213663626421935701310686912624975665955_u128 as f32;
_24 = _33;
_22 = [19641_u16,26561_u16,29871_u16,63623_u16,41687_u16,1412_u16];
_7 = -Field::<i128>(Variant(_31, 2), 5);
_10 = _52.0;
_56.fld0 = [1_i8,43_i8,(-36_i8)];
_21 = _5;
(*_15) = _40;
_16 = Adt62::Variant1 { fld0: _45,fld1: _10,fld2: _6 };
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0.1 = -Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).5;
_39 = _36;
Goto(bb54)
}
bb54 = {
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)) = (_27, _3, Field::<(f32, u32, char)>(Variant(_16, 1), 1).0, 209685493323303358863555322712904676310_u128, Field::<[i8; 3]>(Variant(_31, 2), 0), Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.1);
Call(_29 = core::intrinsics::transmute(Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).3 = core::ptr::addr_of!(_62.1.2);
_60 = !499506809_i32;
_27.0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).0.0;
_57 = -Field::<(f32, u32, char)>(Variant(_16, 1), 1).0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).3 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3 * Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3;
_46 = _47.0;
_52.1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).3 as f32;
_39 = core::ptr::addr_of_mut!((*_36));
_56.fld1 = ((*_39).0,);
SetDiscriminant(_16, 2);
_54 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).0.0.2 as i128;
place!(Field::<[u32; 4]>(Variant(_16, 2), 3)) = [_10.1,_10.1,_52.0.1,Field::<(f32, u32, char)>(Variant(_35, 1), 1).1];
_52.0.2 = Field::<(f32, u32, char)>(Variant(_35, 1), 1).2;
_21 = _26;
_28 = _10.1 >> _47.0;
_62.2 = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.1,);
_37 = core::ptr::addr_of!(_52.0.2);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0.2 = _24;
place!(Field::<i16>(Variant(_16, 2), 4)) = _47.1;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0 = (_27.0,);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).4 = [(-22_i8),(-16_i8),(-57_i8)];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).1 = [_47.0,_47.0,_47.0,_45,_45,_46,_47.0,_46];
_57 = _52.1 - _52.1;
_19.1 = 221_u8;
Goto(bb56)
}
bb56 = {
place!(Field::<i128>(Variant(_16, 2), 5)) = Field::<u64>(Variant(_9, 0), 0) as i128;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).3 = _57 as u128;
(*_39) = _56.fld1;
_45 = !_46;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0.0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).0.0.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)) = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).1, _52.1, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).4, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.1);
_49.0 = (*_15);
_60 = (-490196634_i32) * (-821698940_i32);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).0 = Field::<i128>(Variant(_31, 2), 5) as i64;
_8 = (_56.fld1.0,);
_19 = ((*_15), 23_u8);
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
match Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).3 {
209685493323303358863555322712904676310 => bb58,
_ => bb57
}
}
bb57 = {
_29 = _10.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).2 = _19.0;
_18 = -_11;
_13 = 7522858263237238357_u64 as i16;
_11 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 as f64;
_27.0 = (_23, (-878410454395161272_i64), _24);
_19.1 = _24 as u8;
_23 = _18;
_12 = _27.0.0;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _25 * _25;
match _27.0.1 {
0 => bb8,
1 => bb4,
2 => bb14,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
340282366920938463462496196977373050184 => bb23,
_ => bb22
}
}
bb58 = {
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0.2 = !_27.0.2;
_49.0 = _5;
(*_37) = _21;
_17 = _57 - Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).2;
_1 = [_13,Field::<i16>(Variant(_16, 2), 4),Field::<i16>(Variant(_9, 0), 1),Field::<i16>(Variant(_16, 2), 4),Field::<i16>(Variant(_9, 0), 1)];
_23 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4).0 as f64;
_54 = !_4;
_26 = (*_15);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).1 = [_45,_47.0,_47.0,_47.0,_45,_45,_46,_47.0];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).3 = _62.2.0 as u128;
(*_15) = _10.2;
_40 = (*_15);
(*_36).0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_63.0 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4).0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).2 = _52.0.0;
_27.0.2 = !_24;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0.2 = !_33;
SetDiscriminant(_9, 1);
_64 = _19.1 as isize;
_37 = core::ptr::addr_of!(_26);
_68 = (-2_i8) | (-38_i8);
(*_36) = (_2,);
_67 = -_52.1;
Goto(bb59)
}
bb59 = {
_69 = _68 as i64;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).4 = _54;
_62.1.0 = _63.0;
place!(Field::<u128>(Variant(_16, 2), 6)) = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3 | Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3;
(*_36) = _56.fld1;
_52.1 = _60 as f32;
_27.0.1 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4).0;
_1 = [_47.1,_47.1,Field::<i16>(Variant(_16, 2), 4),Field::<i16>(Variant(_16, 2), 4),_13];
_57 = _20 + _29;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0 = (_23, _62.1.0, _33);
_27.0.0 = _12 * Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.0;
_50 = _14 as u8;
_6 = -_64;
_75.2 = core::ptr::addr_of_mut!(_74);
Goto(bb60)
}
bb60 = {
_56.fld0 = [_68,_68,_68];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).1 = _7;
place!(Field::<(f32, u32, char)>(Variant(_35, 1), 1)).0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).2;
place!(Field::<(f32, u32, char)>(Variant(_35, 1), 1)).2 = (*_37);
(*_36) = (_2,);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).0 = _63.0 + Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4).0;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).3 = core::ptr::addr_of!(_63.2);
_52.0 = (_17, _28, _40);
_72 = Field::<i128>(Variant(_31, 2), 5) - _54;
_27.0.0 = _48;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.0 = -Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).3 = _17 as u128;
Goto(bb61)
}
bb61 = {
_56.fld1.0 = [17807213240591295787_u64,4402248991001997557_u64,3981937364988898413_u64,593499510669768085_u64,18189798779554432031_u64,10520648238838747286_u64];
place!(Field::<u128>(Variant(_16, 2), 6)) = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3;
_29 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).2;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).4 = Field::<[i8; 3]>(Variant(_31, 2), 0);
_62.2 = (Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2).0,);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0.0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.0 * Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0;
(*_37) = _5;
place!(Field::<bool>(Variant(_35, 1), 0)) = _24 & Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2;
_63.1 = !48711_u16;
_73 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0;
_18 = _73 - _73;
_46 = _27.0.2 as usize;
_66 = _52.0.2;
_50 = _47.0 as u8;
_47.1 = _13;
_51 = _50 as usize;
place!(Field::<i16>(Variant(_9, 1), 4)) = !_13;
_62.2 = (_27.0.1,);
place!(Field::<i16>(Variant(_31, 2), 4)) = _13 | Field::<i16>(Variant(_16, 2), 4);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0 = (_27.0,);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).4 = _56.fld0;
_22 = [_63.1,_63.1,_63.1,_63.1,_63.1,_63.1];
place!(Field::<i16>(Variant(_31, 2), 4)) = _14 as i16;
match _47.1 {
0 => bb8,
1 => bb21,
2 => bb45,
3 => bb7,
4 => bb31,
5 => bb62,
340282366920938463463374607431768210717 => bb64,
_ => bb63
}
}
bb62 = {
_56.fld0 = [_68,_68,_68];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).1 = _7;
place!(Field::<(f32, u32, char)>(Variant(_35, 1), 1)).0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).2;
place!(Field::<(f32, u32, char)>(Variant(_35, 1), 1)).2 = (*_37);
(*_36) = (_2,);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).0 = _63.0 + Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4).0;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).3 = core::ptr::addr_of!(_63.2);
_52.0 = (_17, _28, _40);
_72 = Field::<i128>(Variant(_31, 2), 5) - _54;
_27.0.0 = _48;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.0 = -Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).3 = _17 as u128;
Goto(bb61)
}
bb63 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb64 = {
_73 = _18 - Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).0.0.0;
(*_15) = _19.0;
_64 = !_14;
_14 = _6 ^ _64;
_62.1.2 = core::ptr::addr_of_mut!(_74);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).3 = core::ptr::addr_of!(_75.2);
_62.1.1 = !_63.1;
_36 = core::ptr::addr_of_mut!((*_36));
(*_39).0 = [13741267977913465325_u64,4113231599024426446_u64,306084865218090114_u64,12242241164514273462_u64,1708968277516327221_u64,9757871316103572794_u64];
_2 = [4805711217049509755_u64,8364729190500263376_u64,14418255949958290673_u64,12878011938314374390_u64,1306900091120829740_u64,8417128626954651883_u64];
_65 = _6;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).0 = -_62.2.0;
_47.1 = !Field::<i16>(Variant(_16, 2), 4);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).1 = [_45,_45,_46,_45,_45,_45,_51,_45];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0.1 = _62.1.1 as i64;
Goto(bb65)
}
bb65 = {
_49.1 = !_50;
_49 = _19;
_56 = Adt55 { fld0: Field::<[i8; 3]>(Variant(_31, 2), 0),fld1: (*_39),fld2: _65 };
Goto(bb66)
}
bb66 = {
_56 = Adt55 { fld0: Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).4,fld1: (*_36),fld2: _6 };
_20 = -Field::<(f32, u32, char)>(Variant(_35, 1), 1).0;
_76 = [14197180894262625893_u64,5517457491652760722_u64,17389566158186550301_u64,17114927301966945711_u64,6417420359212440006_u64,15945682785604117008_u64];
_62.0 = !_14;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).2 = [_68,_68,_68];
_47.0 = !_46;
place!(Field::<[u32; 4]>(Variant(_16, 2), 3)) = [_28,_10.1,_28,_52.0.1];
place!(Field::<i128>(Variant(_31, 2), 5)) = _4 & _7;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)) = (_27, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).1, _17, Field::<u128>(Variant(_16, 2), 6), Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).4, _62.1.0);
_36 = core::ptr::addr_of_mut!((*_39));
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0.1 = -Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).5;
_63.1 = _27.0.2 as u16;
_58 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0 as isize;
(*_15) = _49.0;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).2 = [_68,_68,_68];
_49.1 = _19.1 & _50;
_79 = [_60,_60,_60,_60,_60,_60];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).4 = _4 + _72;
_83 = _58 + _58;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)) = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4);
_59 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.2;
(*_39) = (_2,);
_75.0 = _49.1 as i64;
Goto(bb67)
}
bb67 = {
_72 = _54;
_62.2 = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).5,);
(*_15) = _26;
place!(Field::<[i32; 2]>(Variant(_35, 1), 3)) = [_60,_60];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).0.0.1 ^ _62.1.0;
_11 = _23;
_47.0 = _46;
_81 = _18 as u16;
_14 = _83;
_75.1 = _60 as u16;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.0 = _11;
Goto(bb68)
}
bb68 = {
_78 = Field::<(f32, u32, char)>(Variant(_35, 1), 1).1;
_25 = !_52.0.1;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0 = _27.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)).0.0 = _27.0;
_50 = _49.1 * _49.1;
_87.0 = _5;
_60 = (-1204505139_i32) ^ (-2062204402_i32);
_71 = _67;
_52 = (_10, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).2);
place!(Field::<Adt51>(Variant(_9, 1), 1)) = Adt51::Variant0 { fld0: _49,fld1: Field::<u128>(Variant(_16, 2), 6),fld2: _22,fld3: _35 };
SetDiscriminant(_35, 2);
_53 = _49.1;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0 = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0,);
place!(Field::<(char, u8)>(Variant(place!(Field::<Adt51>(Variant(_9, 1), 1)), 0), 0)).0 = (*_37);
match _19.1 {
0 => bb35,
1 => bb55,
2 => bb31,
3 => bb69,
4 => bb70,
5 => bb71,
6 => bb72,
23 => bb74,
_ => bb73
}
}
bb69 = {
_72 = _54;
_62.2 = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).5,);
(*_15) = _26;
place!(Field::<[i32; 2]>(Variant(_35, 1), 3)) = [_60,_60];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4)).0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).0.0.1 ^ _62.1.0;
_11 = _23;
_47.0 = _46;
_81 = _18 as u16;
_14 = _83;
_75.1 = _60 as u16;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.0 = _11;
Goto(bb68)
}
bb70 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb71 = {
_1 = [_13,_13,Field::<i16>(Variant(_9, 0), 1),_13,_13];
_22 = [21949_u16,63859_u16,45591_u16,29612_u16,33293_u16,13214_u16];
(*_15) = _21;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).1 = _10.1 % _10.1;
_5 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).2;
_19 = (_5, 156_u8);
_25 = 2118559759_i32 as u32;
_26 = _5;
_19.0 = _26;
_7 = (-543471864_i32) as i128;
_24 = false;
place!(Field::<usize>(Variant(_16, 1), 0)) = 10546010803931479136_usize;
_8.0 = [7430987636552448290_u64,4241489629613796765_u64,4520748590509626037_u64,16351689237270096796_u64,16337200425972349301_u64,2217808064050058491_u64];
_18 = _11 - _11;
_16 = Adt62::Variant1 { fld0: 4_usize,fld1: _10,fld2: _14 };
place!(Field::<u64>(Variant(_9, 0), 0)) = _13 as u64;
_21 = _5;
_3 = [1_usize,3862645511315902620_usize,1_usize,4_usize,3330091395526260377_usize,15927942204347462543_usize,4_usize,7_usize];
Goto(bb11)
}
bb72 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb73 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !16480073916007876058_u64;
_10.0 = 3_usize as f32;
_8.0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = Field::<i16>(Variant(_9, 0), 1) as f64;
_10.1 = 832355573_u32 + 4126550438_u32;
_10.1 = 1120250189_u32;
_3 = [8906742759184008462_usize,17740978668236171577_usize,16605721179835531584_usize,6_usize,8500009211511133179_usize,4_usize,9978728905484587595_usize,4_usize];
_8 = (_2,);
_6 = -(-9223372036854775808_isize);
place!(Field::<i16>(Variant(_9, 0), 1)) = (-18179_i16) + 31841_i16;
_13 = Field::<i16>(Variant(_9, 0), 1) ^ Field::<i16>(Variant(_9, 0), 1);
SetDiscriminant(_9, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = !_4;
_10.2 = _5;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [(-423677090_i32),1164606760_i32,(-299902462_i32),1502500308_i32,(-473851215_i32),(-1008964304_i32)];
_9 = Adt56::Variant0 { fld0: 7482077941628470042_u64,fld1: _13 };
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = _10.2 as u64;
_13 = !Field::<i16>(Variant(_9, 0), 1);
_12 = -_11;
place!(Field::<u64>(Variant(_9, 0), 0)) = !12270913569146346568_u64;
_10.2 = _5;
place!(Field::<i16>(Variant(_9, 0), 1)) = _6 as i16;
_14 = _6 | _6;
_10.0 = 44054_u16 as f32;
Goto(bb2)
}
bb74 = {
_75 = _62.1;
_33 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2 | _27.0.2;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).4 = [_68,_68,_68];
_56.fld1 = (*_36);
SetDiscriminant(Field::<Adt51>(Variant(_9, 1), 1), 1);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).5 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).3 as i64;
_63.1 = _81;
_92 = -_83;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0 = _27;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).2 = [_68,_68,_68];
_59 = !_33;
_87.0 = _21;
_2 = [8927138643188161139_u64,11613408129996251866_u64,13675186507677455423_u64,15039311682423404742_u64,3032665262174885739_u64,12676808219251349981_u64];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).4 = _45 as i128;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [_60,_60,_60,_60,_60,_60];
_10.0 = _67;
_95 = _75.0 as i128;
place!(Field::<char>(Variant(_35, 2), 1)) = _87.0;
match _19.1 {
0 => bb31,
1 => bb16,
2 => bb37,
23 => bb75,
_ => bb4
}
}
bb75 = {
(*_15) = (*_37);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0.1 = _69;
_40 = _26;
_76 = [16153852466126511315_u64,5212533604917109457_u64,7788437071414534401_u64,10156852079794499893_u64,18345779678972375791_u64,227429142307220746_u64];
_92 = !_83;
_41 = Adt54::Variant1 { fld0: Field::<[u32; 4]>(Variant(_16, 2), 3) };
_79 = [_60,_60,_60,_60,_60,_60];
_77.fld2 = _62.2.0 as isize;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).1 = -_54;
_63.1 = _81 + _81;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).4 = _10.0 as i128;
_63.2 = core::ptr::addr_of_mut!(_74);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).4 = _72 << _45;
place!(Field::<i16>(Variant(_9, 1), 4)) = Field::<i16>(Variant(_31, 2), 4) * _47.1;
_49.1 = _53;
place!(Field::<*const *mut [i16; 3]>(Variant(_9, 1), 3)) = core::ptr::addr_of!(_75.2);
_23 = _62.1.0 as f64;
Goto(bb76)
}
bb76 = {
place!(Field::<[i8; 3]>(Variant(_16, 2), 0)) = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).2;
_20 = _10.0;
_93.2 = [_68,_68,_68];
place!(Field::<[i8; 3]>(Variant(_16, 2), 0)) = [_68,_68,_68];
RET = Adt57::Variant0 { fld0: _63.1,fld1: _62.2,fld2: Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).4,fld3: _49,fld4: Field::<i16>(Variant(_9, 1), 4),fld5: Move(_41),fld6: 15865494585499716089_u64 };
_52.1 = _57;
place!(Field::<[u32; 4]>(Variant(_35, 2), 0)) = [_25,_28,_28,_52.0.1];
_12 = _11 + _11;
_81 = _63.1;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).2 = -_67;
_38 = Adt57::Variant0 { fld0: _63.1,fld1: Field::<(i64,)>(Variant(RET, 0), 1),fld2: Field::<[i8; 3]>(Variant(RET, 0), 2),fld3: Field::<(char, u8)>(Variant(RET, 0), 3),fld4: Field::<i16>(Variant(_9, 1), 4),fld5: Move(Field::<Adt54>(Variant(RET, 0), 5)),fld6: 16948979849132863054_u64 };
place!(Field::<[u32; 4]>(Variant(_31, 2), 3)) = Field::<[u32; 4]>(Variant(_35, 2), 0);
_40 = (*_37);
place!(Field::<*const char>(Variant(_35, 2), 5)) = core::ptr::addr_of!(_87.0);
_78 = _52.0.1;
(*_39) = (_76,);
_9 = Adt56::Variant0 { fld0: 14829736761584826154_u64,fld1: _13 };
_15 = core::ptr::addr_of_mut!(_87.0);
_61 = core::ptr::addr_of_mut!((*_36));
_5 = (*_15);
_104 = Field::<(char, u8)>(Variant(RET, 0), 3).0;
_78 = _25 ^ _25;
_52.0.1 = _47.0 as u32;
_76 = [13989774579497982968_u64,7519367666661498708_u64,13968580005542376634_u64,6544237201555602482_u64,1268014443946654474_u64,7561803004330498900_u64];
Goto(bb77)
}
bb77 = {
_52.0.1 = !_28;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).2 = [_68,_68,_68];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.1 = _27.0.1 ^ _62.2.0;
_32 = _60 as i128;
_75.0 = Field::<(i64,)>(Variant(_38, 0), 1).0 ^ _63.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)) = (_27, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).1, _17, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).3, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).4, _75.0);
_23 = _18 * _12;
place!(Field::<[i8; 3]>(Variant(RET, 0), 2)) = _93.2;
_94 = _12 * Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).1 = [_46,_45,_45,_46,_45,_45,_51,_45];
place!(Field::<i16>(Variant(_38, 0), 4)) = Field::<i16>(Variant(RET, 0), 4) | Field::<i16>(Variant(RET, 0), 4);
_62 = (_14, _75, Field::<(i64,)>(Variant(RET, 0), 1));
SetDiscriminant(Field::<Adt54>(Variant(_38, 0), 5), 1);
_102 = _25 - _25;
_77.fld2 = Field::<u16>(Variant(RET, 0), 0) as isize;
_77.fld2 = -_92;
place!(Field::<u64>(Variant(RET, 0), 6)) = _68 as u64;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.2 = _59;
_105 = _24;
_89 = _61;
_92 = _77.fld2;
_100 = [_46,_46,_51,_47.0,_46,_45,_51,_51];
Goto(bb78)
}
bb78 = {
_96 = _83;
(*_39) = (_56.fld1.0,);
_109.0.1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).5 * Field::<(i64,)>(Variant(_38, 0), 1).0;
_82 = _42;
_93.0 = -_109.0.1;
_102 = _28;
_59 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.2;
_80 = Field::<i16>(Variant(_38, 0), 4) as isize;
place!(Field::<(char, u8)>(Variant(_38, 0), 3)).1 = !_49.1;
place!(Field::<u128>(Variant(_31, 2), 6)) = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).3;
Goto(bb79)
}
bb79 = {
_77.fld1.0 = [Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6)];
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).0.0.0 = -_11;
place!(Field::<(char, u8)>(Variant(_38, 0), 3)).0 = _52.0.2;
_110 = -_57;
_56.fld0 = [_68,_68,_68];
(*_61) = (_76,);
_86 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2;
_26 = _52.0.2;
(*_37) = _66;
_8.0 = [Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6)];
_83 = _92 * _92;
place!(Field::<[i128; 2]>(Variant(_35, 2), 2)) = _44;
_108 = _96 + _14;
(*_89).0 = [Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6)];
place!(Field::<[u32; 4]>(Variant(place!(Field::<Adt54>(Variant(_38, 0), 5)), 1), 0)) = [_28,_10.1,_52.0.1,_102];
_65 = _77.fld2 + _58;
_10.1 = !_52.0.1;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)) = (_27, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).1, _110, Field::<u128>(Variant(_16, 2), 6), Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).4, _62.1.0);
_51 = !_46;
place!(Field::<u16>(Variant(_38, 0), 0)) = _14 as u16;
_25 = !_102;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).5 = _62.1.0;
_52.0.1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0 as u32;
Call((*_61).0 = core::intrinsics::transmute(_76), ReturnTo(bb80), UnwindUnreachable())
}
bb80 = {
_103 = ((*_61).0,);
_116 = _40;
place!(Field::<i128>(Variant(_31, 2), 5)) = _54 << _62.0;
_60 = (-721665376_i32);
RET = Adt57::Variant0 { fld0: _63.1,fld1: _62.2,fld2: Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).2,fld3: _49,fld4: Field::<i16>(Variant(_38, 0), 4),fld5: Move(Field::<Adt54>(Variant(_38, 0), 5)),fld6: 7873769953860443660_u64 };
place!(Field::<u64>(Variant(_9, 0), 0)) = 2131635357660846312_u64 | 9460464986075750007_u64;
_64 = !_62.0;
_72 = -_95;
_85 = (*_36).0;
_10.2 = _52.0.2;
_110 = _29 * _57;
place!(Field::<u64>(Variant(RET, 0), 6)) = Field::<u64>(Variant(_9, 0), 0) << _54;
place!(Field::<(char, u8)>(Variant(_38, 0), 3)).1 = !_50;
_27.0.2 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2;
_27.0.0 = _23;
_15 = core::ptr::addr_of_mut!(_104);
_109.0 = (_27.0.0, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.1, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2);
_75.0 = _62.1.0 | _93.0;
(*_89).0 = [Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6)];
_5 = (*_37);
place!(Field::<(char, u8)>(Variant(_38, 0), 3)) = _49;
_68 = 96_i8 & (-51_i8);
SetDiscriminant(Field::<Adt54>(Variant(RET, 0), 5), 2);
_115 = _58 * _77.fld2;
SetDiscriminant(_9, 0);
_102 = !_78;
_62 = (_83, _63, Field::<(i64,)>(Variant(RET, 0), 1));
Goto(bb81)
}
bb81 = {
place!(Field::<u64>(Variant(_38, 0), 6)) = Field::<u64>(Variant(RET, 0), 6);
place!(Field::<*mut [i16; 3]>(Variant(_35, 2), 4)) = core::ptr::addr_of_mut!(_74);
_48 = -_109.0.0;
_62.1.1 = !Field::<u16>(Variant(_38, 0), 0);
_26 = _40;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.1 >> _108;
_52.1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0 as f32;
_112 = _27.0.0 as isize;
_117.0.2 = Field::<char>(Variant(_35, 2), 1);
_18 = _75.0 as f64;
_52.0 = (_20, _25, _49.0);
_29 = _67;
place!(Field::<Adt54>(Variant(_38, 0), 5)) = Adt54::Variant1 { fld0: Field::<[u32; 4]>(Variant(_16, 2), 3) };
SetDiscriminant(_38, 1);
_108 = _60 as isize;
place!(Field::<u16>(Variant(RET, 0), 0)) = !_81;
_119 = Field::<(i64,)>(Variant(RET, 0), 1).0 >> _92;
_71 = _57 + Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).2;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6)).4 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).4;
place!(Field::<[usize; 5]>(Variant(_31, 2), 2)) = [_46,_45,_45,_45,_47.0];
_62.1 = _75;
(*_61).0 = [Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6)];
Call(place!(Field::<i16>(Variant(_9, 0), 1)) = core::intrinsics::transmute(_63.1), ReturnTo(bb82), UnwindUnreachable())
}
bb82 = {
place!(Field::<i16>(Variant(_31, 2), 4)) = Field::<i16>(Variant(_9, 0), 1);
place!(Field::<[i128; 2]>(Variant(place!(Field::<Adt54>(Variant(RET, 0), 5)), 2), 0)) = _44;
_125 = _57 + _29;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2)).2 = [_68,_68,_68];
_87 = (_5, Field::<(char, u8)>(Variant(RET, 0), 3).1);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6)).0.0.0 = _27.0.0 * _27.0.0;
_117.0.0 = -_110;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2)).1 = _54 ^ _4;
_10.0 = -_67;
place!(Field::<u64>(Variant(_9, 0), 0)) = _68 as u64;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0.2 = !_33;
SetDiscriminant(RET, 0);
_56 = Adt55 { fld0: Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).4,fld1: (*_39),fld2: _64 };
_63 = _75;
_49 = ((*_15), _50);
_126 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.0 - _11;
_74 = [Field::<i16>(Variant(_9, 0), 1),Field::<i16>(Variant(_9, 0), 1),Field::<i16>(Variant(_9, 0), 1)];
_127 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).3 + Field::<u128>(Variant(_31, 2), 6);
_10.2 = _66;
place!(Field::<Adt54>(Variant(RET, 0), 5)) = Adt54::Variant2 { fld0: Field::<[i128; 2]>(Variant(_35, 2), 2) };
_73 = _60 as f64;
Goto(bb83)
}
bb83 = {
_2 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
_11 = -_12;
_8 = _56.fld1;
_117.1 = _67 * _52.1;
_3 = [_45,_47.0,_45,_45,_46,_47.0,_47.0,_45];
place!(Field::<i16>(Variant(_9, 0), 1)) = _48 as i16;
(*_39).0 = [Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0),Field::<u64>(Variant(_9, 0), 0)];
place!(Field::<[i128; 2]>(Variant(place!(Field::<Adt54>(Variant(RET, 0), 5)), 2), 0)) = [Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).4,Field::<i128>(Variant(_31, 2), 5)];
_19.0 = _66;
SetDiscriminant(_31, 1);
match _19.1 {
0 => bb13,
1 => bb60,
2 => bb37,
3 => bb41,
23 => bb84,
_ => bb7
}
}
bb84 = {
place!(Field::<(char, u8)>(Variant(RET, 0), 3)).1 = _49.1;
_105 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2;
place!(Field::<(char, u8)>(Variant(RET, 0), 3)) = (_40, _50);
SetDiscriminant(_9, 1);
_75.2 = core::ptr::addr_of_mut!(_74);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6)) = (_109, _100, _67, Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).3, Field::<[i8; 3]>(Variant(_16, 2), 0), _63.0);
_134.0 = -_71;
place!(Field::<(f32, u32, char)>(Variant(_31, 1), 1)).1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).3 as u32;
place!(Field::<*const char>(Variant(_35, 2), 5)) = _37;
_34 = Adt59::Variant1 { fld0: _74,fld1: _49.1,fld2: _62,fld3: _68,fld4: _60 };
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).0 = _52.0;
_19 = (_87.0, _49.1);
_130 = Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3).0.2;
(*_39).0 = [5176846502515253597_u64,17954374918058651500_u64,13468251944313981387_u64,4043055917941115506_u64,10425684915042534404_u64,15636127236798604584_u64];
_3 = [_51,_51,_45,_45,_47.0,_45,_45,_46];
_27 = (_109.0,);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6)).3 = Field::<u128>(Variant(_16, 2), 6);
_33 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).0.0.2;
_87.0 = Field::<(char, u8)>(Variant(RET, 0), 3).0;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).4 = _54;
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0 = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).0.0.0, _62.2.0, _105);
_103 = _56.fld1;
place!(Field::<(f32, u32, char)>(Variant(_38, 1), 1)) = (_110, _10.1, _40);
place!(Field::<(f32, u32, char)>(Variant(_31, 1), 1)).0 = _87.1 as f32;
place!(Field::<(i64,)>(Variant(RET, 0), 1)) = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).5,);
_106 = !_82;
SetDiscriminant(_34, 0);
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).0.2 = _117.0.2;
_67 = -_17;
_56.fld1.0 = [12770076105310653093_u64,7513910875462296265_u64,13022648625903744229_u64,10061283932209155428_u64,11825085673040681845_u64,15408714024966713325_u64];
place!(Field::<i16>(Variant(_9, 1), 4)) = _7 as i16;
Call(_112 = core::intrinsics::bswap(_64), ReturnTo(bb85), UnwindUnreachable())
}
bb85 = {
_122 = [_7,_54];
_52.1 = _45 as f32;
_86 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2)).0 = _62.2.0;
_129.0 = [8896173142994951485_u64,3110485635157268575_u64,17748479480387255495_u64,1043805066794883572_u64,9954139564444791406_u64,13962475524657987704_u64];
SetDiscriminant(Field::<Adt54>(Variant(RET, 0), 5), 0);
_62.1.1 = _68 as u16;
_77 = Adt55 { fld0: Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).2,fld1: _103,fld2: _65 };
_27.0.2 = !Field::<((f64, i64, bool),)>(Variant(_38, 1), 5).0.2;
_112 = _115;
Goto(bb86)
}
bb86 = {
place!(Field::<(f32, u32, char)>(Variant(_31, 1), 1)).0 = _81 as f32;
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)) = _52;
_77 = Adt55 { fld0: Field::<[i8; 3]>(Variant(_16, 2), 0),fld1: (*_36),fld2: _64 };
place!(Field::<Adt54>(Variant(RET, 0), 5)) = Adt54::Variant1 { fld0: Field::<[u32; 4]>(Variant(_16, 2), 3) };
_131 = _22;
place!(Field::<[i32; 6]>(Variant(_9, 1), 0)) = [_60,_60,_60,_60,_60,_60];
place!(Field::<(f32, u32, char)>(Variant(_31, 1), 1)).2 = _5;
_135.0.0 = -_52.1;
_52.1 = _29;
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).1 = _119 as f32;
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0.2 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).0.0.2;
_97 = _68 * _68;
place!(Field::<u16>(Variant(RET, 0), 0)) = !_81;
SetDiscriminant(Field::<Adt54>(Variant(RET, 0), 5), 2);
_134.1 = !_28;
_116 = _21;
Goto(bb87)
}
bb87 = {
_69 = _49.1 as i64;
place!(Field::<Adt54>(Variant(RET, 0), 5)) = Adt54::Variant1 { fld0: Field::<[u32; 4]>(Variant(_35, 2), 0) };
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).4 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).4;
_135.1 = -Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3).1;
_1 = [Field::<i16>(Variant(_9, 1), 4),_13,Field::<i16>(Variant(_9, 1), 4),Field::<i16>(Variant(_9, 1), 4),Field::<i16>(Variant(_9, 1), 4)];
_135.0.1 = _134.1;
_47 = (_46, Field::<i16>(Variant(_9, 1), 4));
_9 = Adt56::Variant0 { fld0: 4058423830869198373_u64,fld1: _47.1 };
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0.2 = _105;
_56.fld0 = [_97,_97,_97];
_120 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2).1 as f64;
_19.1 = !_87.1;
_113 = 5715611971278057104_u64;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).1 = _53 as i128;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2)).1 = _95 * _4;
_20 = _57;
_109 = (_27.0,);
_135.0 = (_117.0.0, _10.1, Field::<char>(Variant(_35, 2), 1));
_24 = _33;
_5 = _19.0;
Goto(bb88)
}
bb88 = {
_45 = _47.0 >> _52.0.1;
_117.0.1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1).3 as u32;
_140.1 = Field::<i16>(Variant(_9, 0), 1) as u32;
place!(Field::<*const *const *mut [i16; 3]>(Variant(_38, 1), 4)) = core::ptr::addr_of!(_93.3);
_24 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).0 < _69;
match _60 {
0 => bb15,
1 => bb3,
2 => bb89,
340282366920938463463374607431046546080 => bb91,
_ => bb90
}
}
bb89 = {
_15 = core::ptr::addr_of_mut!(_19.0);
place!(Field::<u64>(Variant(_9, 0), 0)) = !3979924568718632517_u64;
_19 = (_10.2, 114_u8);
_11 = _4 as f64;
_18 = 65_i8 as f64;
_10.2 = _5;
_20 = -_17;
_1 = [_13,Field::<i16>(Variant(_9, 0), 1),_13,_13,_13];
_8 = (_2,);
_21 = _19.0;
place!(Field::<u64>(Variant(_9, 0), 0)) = 15290780519067933448_u64 | 13490293262053320814_u64;
(*_15) = _21;
_10.2 = _21;
_20 = _17 - _17;
(*_15) = _10.2;
Goto(bb9)
}
bb90 = {
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2)) = (_27, _3, Field::<(f32, u32, char)>(Variant(_16, 1), 1).0, 209685493323303358863555322712904676310_u128, Field::<[i8; 3]>(Variant(_31, 2), 0), Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.1);
Call(_29 = core::intrinsics::transmute(Field::<(f32, u32, char)>(Variant(_16, 1), 1).1), ReturnTo(bb55), UnwindUnreachable())
}
bb91 = {
_77.fld0 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).4;
SetDiscriminant(Field::<Adt54>(Variant(RET, 0), 5), 1);
place!(Field::<[i128; 2]>(Variant(_35, 2), 2)) = _122;
_77.fld1 = ((*_89).0,);
(*_89).0 = [_113,_113,_113,_113,_113,_113];
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).0.2 = (*_15);
_104 = _66;
_140.2 = (*_37);
_49.1 = _19.1;
_99 = -Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2).1;
_128 = Field::<i16>(Variant(_9, 0), 1) + _47.1;
place!(Field::<[usize; 5]>(Variant(_38, 1), 0)) = [_46,_47.0,_46,_45,_45];
_97 = -_68;
_75.0 = _47.1 as i64;
_52.0.0 = _47.1 as f32;
_144 = _62.2;
_133 = Field::<((f64, i64, bool),)>(Variant(_38, 1), 5);
match _60 {
0 => bb59,
1 => bb27,
2 => bb29,
3 => bb10,
4 => bb5,
5 => bb78,
6 => bb92,
340282366920938463463374607431046546080 => bb94,
_ => bb93
}
}
bb92 = {
_69 = _68 as i64;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_9, 1), 2)).4 = _54;
_62.1.0 = _63.0;
place!(Field::<u128>(Variant(_16, 2), 6)) = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3 | Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_35, 1), 2).3;
(*_36) = _56.fld1;
_52.1 = _60 as f32;
_27.0.1 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 1), 4).0;
_1 = [_47.1,_47.1,Field::<i16>(Variant(_16, 2), 4),Field::<i16>(Variant(_16, 2), 4),_13];
_57 = _20 + _29;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1)).0.0 = (_23, _62.1.0, _33);
_27.0.0 = _12 * Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_31, 2), 1).0.0.0;
_50 = _14 as u8;
_6 = -_64;
_75.2 = core::ptr::addr_of_mut!(_74);
Goto(bb60)
}
bb93 = {
_12 = _11;
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = _11 as f32;
_25 = Field::<(f32, u32, char)>(Variant(_16, 1), 1).1 * _10.1;
_29 = -_10.0;
_11 = -_27.0.0;
_11 = _27.0.0 * _27.0.0;
_25 = (-35823592_i32) as u32;
_18 = _27.0.0;
_1 = [_13,_13,_13,_13,_13];
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)) = (_17, _25, _26);
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)).0 = Field::<isize>(Variant(_16, 1), 2) as f32;
_19 = (_5, 213_u8);
_8.0 = [17681198529007162378_u64,9420557840755684257_u64,17235460720549155329_u64,12691073298461222742_u64,10046934130103838362_u64,13737056342525202811_u64];
_17 = -_20;
_14 = Field::<isize>(Variant(_16, 1), 2) * _6;
_8.0 = [17612573685983606197_u64,17194653337671072452_u64,7754365487833030724_u64,12679368592528784525_u64,17596947419063590678_u64,2311862861618562682_u64];
_10.2 = (*_15);
_23 = -_11;
_13 = 10927_i16 ^ 21323_i16;
Goto(bb24)
}
bb94 = {
_19.0 = _21;
_45 = _60 as usize;
place!(Field::<u64>(Variant(RET, 0), 6)) = _113 >> _4;
_113 = Field::<u64>(Variant(RET, 0), 6);
place!(Field::<[usize; 5]>(Variant(_16, 2), 2)) = [_51,_46,_51,_46,_47.0];
_136 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).3 >> _78;
SetDiscriminant(_16, 1);
_27.0.1 = Field::<(i64,)>(Variant(RET, 0), 1).0 - _133.0.1;
_62.0 = _14;
_64 = _115;
_103 = (_129.0,);
place!(Field::<*mut [i16; 3]>(Variant(_35, 2), 4)) = core::ptr::addr_of_mut!(_74);
_62.1 = (_93.0, _81, Field::<*mut [i16; 3]>(Variant(_35, 2), 4));
(*_36) = _77.fld1;
_70 = !_46;
_42 = _59 | _27.0.2;
place!(Field::<char>(Variant(_35, 2), 1)) = Field::<(f32, u32, char)>(Variant(_38, 1), 1).2;
_24 = _105 & _109.0.2;
_145 = _62.1.1 as f32;
_103.0 = [_113,Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(RET, 0), 6),_113];
place!(Field::<(f32, u32, char)>(Variant(_38, 1), 1)).0 = -_57;
_109.0.2 = _105;
place!(Field::<(f32, u32, char)>(Variant(_31, 1), 1)) = _117.0;
place!(Field::<isize>(Variant(_16, 1), 2)) = !_112;
place!(Field::<i16>(Variant(RET, 0), 4)) = _47.1 - _47.1;
_56.fld2 = _62.0;
match _13 {
340282366920938463463374607431768210717 => bb95,
_ => bb8
}
}
bb95 = {
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2)).1 = !Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).4;
_109.0.2 = _119 < _62.1.0;
_73 = _10.1 as f64;
place!(Field::<u16>(Variant(RET, 0), 0)) = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).3 as u16;
_87 = _19;
_62.1.2 = Field::<*mut [i16; 3]>(Variant(_35, 2), 4);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).4 = _54 << _119;
_27.0.0 = Field::<i16>(Variant(_9, 0), 1) as f64;
(*_89) = (_103.0,);
_25 = _102 ^ Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3).0.1;
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)) = _117;
place!(Field::<usize>(Variant(_16, 1), 0)) = _70;
_111 = -_67;
_112 = !_92;
_135.0.0 = _127 as f32;
_48 = _109.0.0;
_60 = Field::<u16>(Variant(RET, 0), 0) as i32;
_109.0.1 = _81 as i64;
(*_37) = Field::<(f32, u32, char)>(Variant(_38, 1), 1).2;
_122 = [_7,_99];
_104 = _40;
place!(Field::<i16>(Variant(_9, 0), 1)) = _128 + Field::<i16>(Variant(RET, 0), 4);
_111 = _135.0.0;
_94 = Field::<((f64, i64, bool),)>(Variant(_38, 1), 5).0.0;
_63.1 = _81 | Field::<u16>(Variant(RET, 0), 0);
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).1 = _50 as f32;
Goto(bb96)
}
bb96 = {
_29 = _67;
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0.1 = -_62.2.0;
_146 = _21;
_146 = _140.2;
place!(Field::<i16>(Variant(RET, 0), 4)) = _51 as i16;
_121 = core::ptr::addr_of!(place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).3);
(*_61) = _103;
_102 = _78 << _140.1;
place!(Field::<Adt54>(Variant(_34, 0), 1)) = Adt54::Variant2 { fld0: Field::<[i128; 2]>(Variant(_35, 2), 2) };
_53 = _86 as u8;
Goto(bb97)
}
bb97 = {
place!(Field::<u16>(Variant(RET, 0), 0)) = Field::<(char, u8)>(Variant(RET, 0), 3).0 as u16;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).3 = core::ptr::addr_of!(_62.1.2);
_24 = !_42;
_23 = _92 as f64;
(*_36) = (_129.0,);
_144 = _62.2;
_101 = [_72,_72];
(*_37) = _5;
_87 = (_10.2, Field::<(char, u8)>(Variant(RET, 0), 3).1);
_22 = [_81,_81,_81,_81,_81,_81];
_90 = _126;
(*_37) = _116;
_133.0.2 = Field::<((f64, i64, bool),)>(Variant(_38, 1), 5).0.2;
_93.2 = [_68,_97,_68];
_42 = _59;
_43 = Adt59::Variant1 { fld0: _74,fld1: _49.1,fld2: _62,fld3: _68,fld4: _60 };
_19 = (_87.0, Field::<(char, u8)>(Variant(RET, 0), 3).1);
_46 = _47.0 << _19.1;
Goto(bb98)
}
bb98 = {
place!(Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_43, 1), 2)).0 = _77.fld2;
_68 = _63.1 as i8;
place!(Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_43, 1), 2)).1 = (Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).0.0.1, _62.1.1, _63.2);
SetDiscriminant(_35, 2);
_132 = _96 << _70;
place!(Field::<(i64,)>(Variant(RET, 0), 1)) = (Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_43, 1), 2).2.0,);
_40 = _49.0;
_101 = [_72,Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2).1];
_95 = _117.0.2 as i128;
_138.1 = _47.1 >> Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).3;
_137 = Field::<i16>(Variant(RET, 0), 4) as u64;
match _13 {
0 => bb22,
1 => bb43,
2 => bb81,
340282366920938463463374607431768210717 => bb99,
_ => bb56
}
}
bb99 = {
_62.1 = _75;
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).1 = _29 * _117.1;
_155 = !_68;
_133.0.1 = -Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).5;
_34 = Adt59::Variant2 { fld0: _81,fld1: _1,fld2: Field::<u64>(Variant(RET, 0), 6),fld3: _52.0.1,fld4: Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2).0,fld5: Field::<[usize; 5]>(Variant(_38, 1), 0) };
_149 = Adt56::Variant0 { fld0: _137,fld1: Field::<i16>(Variant(RET, 0), 4) };
_54 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).3 as i128;
_148 = _133.0.0 as isize;
_95 = _24 as i128;
place!(Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3)).0.2 = _140.2;
_33 = _49.1 < Field::<u8>(Variant(_43, 1), 1);
_62.1.1 = Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_43, 1), 2).1.1;
place!(Field::<(i64,)>(Variant(RET, 0), 1)) = Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_43, 1), 2).2;
_115 = -_56.fld2;
match _13 {
0 => bb42,
340282366920938463463374607431768210717 => bb101,
_ => bb100
}
}
bb100 = {
_17 = _10.0 + _10.0;
match _10.1 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
1120250189 => bb8,
_ => bb7
}
}
bb101 = {
place!(Field::<u64>(Variant(_9, 0), 0)) = !_113;
_152.0 = _117.0.0 as f64;
place!(Field::<(char, u8)>(Variant(RET, 0), 3)).1 = !_49.1;
_60 = !Field::<i32>(Variant(_43, 1), 4);
_28 = _25 | Field::<u32>(Variant(_34, 2), 3);
_82 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).0.0.2 ^ _59;
SetDiscriminant(_34, 1);
place!(Field::<i8>(Variant(_34, 1), 3)) = _42 as i8;
_143 = !Field::<(char, u8)>(Variant(RET, 0), 3).1;
_34 = Move(_43);
(*_39) = _56.fld1;
_100 = [_70,_46,_47.0,_51,_46,_70,_47.0,_46];
_129.0 = [Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(_149, 0), 0),_137,Field::<u64>(Variant(RET, 0), 6),Field::<u64>(Variant(_149, 0), 0),_137];
_139 = _47.0 as isize;
place!(Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_34, 1), 2)).2.0 = _119 >> _112;
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0.2 = !_24;
place!(Field::<(char, u8)>(Variant(RET, 0), 3)).1 = Field::<u8>(Variant(_34, 1), 1) ^ _19.1;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6)).5 = _133.0.1 * _109.0.1;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).2 = [_155,_155,_155];
_117.1 = _60 as f32;
_98 = _62.0 | Field::<isize>(Variant(_16, 1), 2);
Goto(bb102)
}
bb102 = {
_75 = Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_34, 1), 2).1;
_12 = _73;
_77.fld1.0 = (*_39).0;
_109.0 = (_126, _63.0, _133.0.2);
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0.2 = _92 > Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_34, 1), 2).0;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6)).1 = [_70,Field::<usize>(Variant(_16, 1), 0),_51,_46,_51,_46,Field::<usize>(Variant(_16, 1), 0),_51];
_135.0 = _117.0;
_152.2 = _109.0.2;
_108 = -_115;
_126 = -_11;
(*_39) = (_129.0,);
place!(Field::<(f32, u32, char)>(Variant(_16, 1), 1)) = (_134.0, Field::<(f32, u32, char)>(Variant(_31, 1), 1).1, _52.0.2);
_122 = [_99,_4];
_129 = (*_61);
_63.1 = !_81;
SetDiscriminant(_16, 2);
_52.1 = _134.0;
_93.1 = _72 ^ _4;
(*_61) = _103;
_123 = Field::<u64>(Variant(RET, 0), 6);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).3 = core::ptr::addr_of!(_75.2);
place!(Field::<[i8; 3]>(Variant(RET, 0), 2)) = [_68,_155,_68];
_91 = [_60,_60,Field::<i32>(Variant(_34, 1), 4),Field::<i32>(Variant(_34, 1), 4),_60,Field::<i32>(Variant(_34, 1), 4)];
_63 = (Field::<((f64, i64, bool),)>(Variant(_38, 1), 5).0.1, _75.1, _62.1.2);
_110 = _67;
Goto(bb103)
}
bb103 = {
place!(Field::<((f64, i64, bool),)>(Variant(_38, 1), 5)).0.1 = Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).0.0.1;
_133.0.1 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_38, 1), 6).0.0.1;
place!(Field::<*mut [i16; 3]>(Variant(_35, 2), 4)) = core::ptr::addr_of_mut!(_74);
_1 = [Field::<i16>(Variant(RET, 0), 4),_47.1,_47.1,_138.1,Field::<i16>(Variant(RET, 0), 4)];
place!(Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_34, 1), 2)).2 = Field::<(i64,)>(Variant(RET, 0), 1);
_161 = _83;
_69 = Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_34, 1), 2).2.0 << _127;
(*_15) = Field::<(f32, u32, char)>(Variant(_31, 1), 1).2;
_51 = _47.0 >> _112;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)) = (_109, _100, _17, _127, Field::<[i8; 3]>(Variant(RET, 0), 2), Field::<(isize, (i64, u16, *mut [i16; 3]), (i64,))>(Variant(_34, 1), 2).1.0);
_169 = Field::<i32>(Variant(_34, 1), 4);
SetDiscriminant(_34, 3);
_104 = _40;
place!(Field::<(char, u8)>(Variant(RET, 0), 3)) = ((*_15), _19.1);
SetDiscriminant(_149, 0);
place!(Field::<*const char>(Variant(_35, 2), 5)) = core::ptr::addr_of!(_21);
_4 = _99;
_4 = _7;
_140.1 = _117.0.1 + _135.0.1;
place!(Field::<[u32; 4]>(Variant(_34, 3), 4)) = [_135.0.1,Field::<(f32, u32, char)>(Variant(_31, 1), 1).1,_134.1,_140.1];
_1 = [_47.1,Field::<i16>(Variant(RET, 0), 4),_138.1,_47.1,_128];
(*_39) = (_103.0,);
SetDiscriminant(_9, 1);
_56 = _77;
_168 = Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3).0.2;
_56.fld0 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3).2;
Goto(bb104)
}
bb104 = {
_157 = _136 & _127;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2)).4 = _99;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_35, 2), 3)).3 = core::ptr::addr_of!(_62.1.2);
_77.fld1 = ((*_89).0,);
_134.2 = _135.0.2;
_140.2 = _130;
_117.0.0 = _145;
_125 = _57;
_150 = Field::<(i64,)>(Variant(RET, 0), 1).0 <= _27.0.1;
_18 = _23;
place!(Field::<[u32; 4]>(Variant(_16, 2), 3)) = [_25,_28,_25,_10.1];
_117.0.0 = -_57;
place!(Field::<[u32; 4]>(Variant(place!(Field::<Adt54>(Variant(RET, 0), 5)), 1), 0)) = Field::<[u32; 4]>(Variant(_16, 2), 3);
_163.0.1 = _42 as i64;
_18 = _152.0;
_93.4 = _7 >> Field::<((f32, u32, char), f32)>(Variant(_38, 1), 3).0.1;
_52.0.0 = Field::<u64>(Variant(RET, 0), 6) as f32;
place!(Field::<[u32; 4]>(Variant(_16, 2), 3)) = Field::<[u32; 4]>(Variant(Field::<Adt54>(Variant(RET, 0), 5), 1), 0);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_16, 2), 1)).2 = _133.0.0 as f32;
_133.0.0 = _93.4 as f64;
place!(Field::<[usize; 5]>(Variant(_16, 2), 2)) = [_70,_70,_47.0,_47.0,_51];
_122 = [_95,Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_38, 1), 2).4];
Goto(bb105)
}
bb105 = {
Call(_180 = dump_var(2_usize, 64_usize, Move(_64), 26_usize, Move(_26), 13_usize, Move(_13), 4_usize, Move(_4)), ReturnTo(bb106), UnwindUnreachable())
}
bb106 = {
Call(_180 = dump_var(2_usize, 146_usize, Move(_146), 98_usize, Move(_98), 28_usize, Move(_28), 108_usize, Move(_108)), ReturnTo(bb107), UnwindUnreachable())
}
bb107 = {
Call(_180 = dump_var(2_usize, 19_usize, Move(_19), 105_usize, Move(_105), 6_usize, Move(_6), 5_usize, Move(_5)), ReturnTo(bb108), UnwindUnreachable())
}
bb108 = {
Call(_180 = dump_var(2_usize, 85_usize, Move(_85), 24_usize, Move(_24), 45_usize, Move(_45), 116_usize, Move(_116)), ReturnTo(bb109), UnwindUnreachable())
}
bb109 = {
Call(_180 = dump_var(2_usize, 78_usize, Move(_78), 99_usize, Move(_99), 65_usize, Move(_65), 74_usize, Move(_74)), ReturnTo(bb110), UnwindUnreachable())
}
bb110 = {
Call(_180 = dump_var(2_usize, 104_usize, Move(_104), 72_usize, Move(_72), 66_usize, Move(_66), 32_usize, Move(_32)), ReturnTo(bb111), UnwindUnreachable())
}
bb111 = {
Call(_180 = dump_var(2_usize, 7_usize, Move(_7), 46_usize, Move(_46), 136_usize, Move(_136), 50_usize, Move(_50)), ReturnTo(bb112), UnwindUnreachable())
}
bb112 = {
Call(_180 = dump_var(2_usize, 86_usize, Move(_86), 92_usize, Move(_92), 60_usize, Move(_60), 59_usize, Move(_59)), ReturnTo(bb113), UnwindUnreachable())
}
bb113 = {
Call(_180 = dump_var(2_usize, 101_usize, Move(_101), 80_usize, Move(_80), 44_usize, Move(_44), 169_usize, Move(_169)), ReturnTo(bb114), UnwindUnreachable())
}
bb114 = {
Call(_180 = dump_var(2_usize, 54_usize, Move(_54), 113_usize, Move(_113), 130_usize, Move(_130), 21_usize, Move(_21)), ReturnTo(bb115), UnwindUnreachable())
}
bb115 = {
Call(_180 = dump_var(2_usize, 102_usize, Move(_102), 22_usize, Move(_22), 129_usize, Move(_129), 115_usize, Move(_115)), ReturnTo(bb116), UnwindUnreachable())
}
bb116 = {
Call(_180 = dump_var(2_usize, 47_usize, Move(_47), 42_usize, Move(_42), 181_usize, _181, 181_usize, _181), ReturnTo(bb117), UnwindUnreachable())
}
bb117 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i16; 5],mut _2: char,mut _3: ([u64; 6],),mut _4: [u64; 6],mut _5: ([u64; 6],),mut _6: [u64; 6],mut _7: [u64; 6],mut _8: ([u64; 6],),mut _9: [u64; 6],mut _10: [u64; 6],mut _11: [u64; 6],mut _12: i128,mut _13: [usize; 8]) -> Adt56 {
mir! {
type RET = Adt56;
let _14: [u32; 4];
let _15: i64;
let _16: ([u64; 6],);
let _17: *mut i64;
let _18: f32;
let _19: Adt51;
let _20: [u32; 4];
let _21: char;
let _22: f32;
let _23: ();
let _24: ();
{
_8 = (_10,);
_3.0 = [13613605560138447072_u64,15939303021320787015_u64,10722937578786956797_u64,12373658543035713264_u64,15488252083482621222_u64,11384190512373215431_u64];
_11 = _3.0;
RET = Adt56::Variant0 { fld0: 14679088207144107906_u64,fld1: (-18658_i16) };
place!(Field::<u64>(Variant(RET, 0), 0)) = 710189254908078689_u64;
_5 = (_6,);
place!(Field::<i16>(Variant(RET, 0), 1)) = 9223372036854775807_isize as i16;
place!(Field::<i16>(Variant(RET, 0), 1)) = (-17816_i16);
_13 = [2949660459382115025_usize,0_usize,9070020012423277541_usize,6793081851184981303_usize,2_usize,9218532511846294386_usize,4_usize,3_usize];
SetDiscriminant(RET, 1);
_9 = _7;
_5 = (_3.0,);
RET = Adt56::Variant0 { fld0: 17965780227982603673_u64,fld1: 28082_i16 };
_4 = [6383269140565717108_u64,11581847935508549168_u64,7477447393008115259_u64,994047798541554668_u64,12592906754827953_u64,542987813717935084_u64];
_3.0 = _7;
_5.0 = [15892040228667563951_u64,10075193683370271890_u64,384820786812417927_u64,4270867489016541123_u64,8088455362536294377_u64,16800197512467557462_u64];
_3 = (_11,);
_5 = (_7,);
RET = Adt56::Variant0 { fld0: 6073552888963628358_u64,fld1: 20656_i16 };
place!(Field::<u64>(Variant(RET, 0), 0)) = 8655414736119242788_u64;
_16.0 = [Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0)];
_16.0 = [Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0)];
_11 = [Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0)];
place!(Field::<i16>(Variant(RET, 0), 1)) = (-25226_i16);
_15 = 65_i8 as i64;
SetDiscriminant(RET, 0);
_14 = [1980346119_u32,2336345144_u32,2147591216_u32,1391303361_u32];
Call(_4 = fn4(_13, _8.0, _7, _3.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [8181807756233987104_u64,1845283203493207738_u64,8566624080353154314_u64,906163192667617311_u64,1318262877284161605_u64,649779404760803532_u64];
_13 = [5046465128107595339_usize,7_usize,3950547974699058548_usize,2288541847869061131_usize,2755475235089583900_usize,6306997594703094516_usize,9871207530941325422_usize,614684349243880764_usize];
_1 = [(-18767_i16),(-24864_i16),16909_i16,(-11331_i16),20290_i16];
place!(Field::<i16>(Variant(RET, 0), 1)) = (-12778_i16);
_4 = _16.0;
place!(Field::<u64>(Variant(RET, 0), 0)) = 391093359294219596_u64 + 7527594733535004153_u64;
SetDiscriminant(RET, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).4 = !_12;
place!(Field::<i16>(Variant(RET, 1), 4)) = 12537_i16;
_6 = _10;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).1 = !Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).4;
_15 = (-519626609688602496_i64);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).2 = [58_i8,(-126_i8),21_i8];
_3 = (_9,);
place!(Field::<i16>(Variant(RET, 1), 4)) = 9501_i16 << Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).1;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).1 = 1_usize as i128;
_3.0 = _7;
_3 = (_9,);
place!(Field::<[i32; 6]>(Variant(RET, 1), 0)) = [(-1071625586_i32),484522272_i32,764427213_i32,1904181648_i32,(-258833469_i32),1079041717_i32];
_1 = [Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4)];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).1 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).4 * Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).4;
RET = Adt56::Variant0 { fld0: 5967016416806429131_u64,fld1: (-32090_i16) };
place!(Field::<i16>(Variant(RET, 0), 1)) = 11228_i16;
match _15 {
0 => bb2,
1 => bb3,
340282366920938463462854980822079608960 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_8 = _3;
_12 = !(-123250096532106598166108077285642709128_i128);
_20 = _14;
place!(Field::<i16>(Variant(RET, 0), 1)) = !(-15827_i16);
_1 = [Field::<i16>(Variant(RET, 0), 1),Field::<i16>(Variant(RET, 0), 1),Field::<i16>(Variant(RET, 0), 1),Field::<i16>(Variant(RET, 0), 1),Field::<i16>(Variant(RET, 0), 1)];
_5 = _8;
place!(Field::<u64>(Variant(RET, 0), 0)) = (-1128856069_i32) as u64;
match _15 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463462854980822079608960 => bb10,
_ => bb9
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = [8181807756233987104_u64,1845283203493207738_u64,8566624080353154314_u64,906163192667617311_u64,1318262877284161605_u64,649779404760803532_u64];
_13 = [5046465128107595339_usize,7_usize,3950547974699058548_usize,2288541847869061131_usize,2755475235089583900_usize,6306997594703094516_usize,9871207530941325422_usize,614684349243880764_usize];
_1 = [(-18767_i16),(-24864_i16),16909_i16,(-11331_i16),20290_i16];
place!(Field::<i16>(Variant(RET, 0), 1)) = (-12778_i16);
_4 = _16.0;
place!(Field::<u64>(Variant(RET, 0), 0)) = 391093359294219596_u64 + 7527594733535004153_u64;
SetDiscriminant(RET, 1);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).4 = !_12;
place!(Field::<i16>(Variant(RET, 1), 4)) = 12537_i16;
_6 = _10;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).1 = !Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).4;
_15 = (-519626609688602496_i64);
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).2 = [58_i8,(-126_i8),21_i8];
_3 = (_9,);
place!(Field::<i16>(Variant(RET, 1), 4)) = 9501_i16 << Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).1;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).1 = 1_usize as i128;
_3.0 = _7;
_3 = (_9,);
place!(Field::<[i32; 6]>(Variant(RET, 1), 0)) = [(-1071625586_i32),484522272_i32,764427213_i32,1904181648_i32,(-258833469_i32),1079041717_i32];
_1 = [Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4),Field::<i16>(Variant(RET, 1), 4)];
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2)).1 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).4 * Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(RET, 1), 2).4;
RET = Adt56::Variant0 { fld0: 5967016416806429131_u64,fld1: (-32090_i16) };
place!(Field::<i16>(Variant(RET, 0), 1)) = 11228_i16;
match _15 {
0 => bb2,
1 => bb3,
340282366920938463462854980822079608960 => bb5,
_ => bb4
}
}
bb10 = {
_5 = (_3.0,);
_13 = [245110133380451407_usize,2_usize,0_usize,4870504500975379400_usize,7_usize,7_usize,5_usize,1974231058144218831_usize];
Goto(bb11)
}
bb11 = {
_11 = [Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0)];
match _15 {
0 => bb5,
1 => bb12,
340282366920938463462854980822079608960 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_16.0 = _8.0;
_7 = [Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0),Field::<u64>(Variant(RET, 0), 0)];
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(3_usize, 8_usize, Move(_8), 3_usize, Move(_3), 6_usize, Move(_6), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(3_usize, 5_usize, Move(_5), 7_usize, Move(_7), 14_usize, Move(_14), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [usize; 8],mut _2: [u64; 6],mut _3: [u64; 6],mut _4: [u64; 6]) -> [u64; 6] {
mir! {
type RET = [u64; 6];
let _5: [u32; 4];
let _6: f32;
let _7: f64;
let _8: u32;
let _9: [u32; 4];
let _10: f64;
let _11: u128;
let _12: u16;
let _13: [usize; 7];
let _14: (f64, i64, bool);
let _15: Adt53;
let _16: f64;
let _17: ((f64, i64, bool),);
let _18: char;
let _19: Adt59;
let _20: isize;
let _21: [u16; 6];
let _22: *const *const *mut [i16; 3];
let _23: u64;
let _24: isize;
let _25: i64;
let _26: [u16; 6];
let _27: ([u64; 6],);
let _28: ();
let _29: ();
{
RET = [18317034429142055615_u64,11405130037027195753_u64,7956212912666335075_u64,5627688057382955757_u64,12540133987444217368_u64,2590677279785607229_u64];
RET = _4;
_3 = RET;
_4 = [13503897944768117471_u64,8471968944895321083_u64,11561341915818433184_u64,5034875371627114924_u64,7582181536791129390_u64,5072051439091190568_u64];
_3 = RET;
RET = [6776056041512937117_u64,1345664608803124711_u64,2291813901536396084_u64,7305861695226825257_u64,6156935421083197104_u64,17470125115073095731_u64];
_1 = [0_usize,2798590519653095583_usize,4_usize,13068966206114481957_usize,4_usize,1_usize,11082890660293800828_usize,1458830346910385994_usize];
_2 = [17904378303299636981_u64,5117394352209683911_u64,3235828440016457253_u64,16675996908546265223_u64,6237478246454460082_u64,17460944257075571613_u64];
RET = [2888347709027636573_u64,4768692005832367098_u64,15889216280190239344_u64,5264012948515919211_u64,17483841678115050491_u64,2841232523547136118_u64];
RET = _2;
_4 = [5962958404293405226_u64,17513898027437442030_u64,17380383786814345374_u64,5131492118003273576_u64,13055587601723165069_u64,7418206421406058023_u64];
RET = _4;
RET = _4;
_1 = [3_usize,2_usize,12700264599799237801_usize,1_usize,3_usize,6_usize,18316748849521772991_usize,7_usize];
_4 = _2;
_3 = [5014167171921521818_u64,11651489028308929587_u64,15425236063814339311_u64,10449695833468499348_u64,10624893788391604163_u64,2968242372591158749_u64];
Call(_5 = fn5(_2, _2, _4, RET, _1, _1, _1, _2, _3, _1, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = _3;
_4 = RET;
RET = [17794579995179758981_u64,5927184430872970150_u64,6089499180944738188_u64,6224127885775470366_u64,17301642471053107415_u64,8214588125611843911_u64];
_4 = [8392757489891335087_u64,4425217008773373711_u64,1686655121612726048_u64,2617990917121533039_u64,9912524458299928566_u64,18274103459926863064_u64];
_1 = [0_usize,1_usize,17851207248716456754_usize,65623607298458537_usize,3_usize,6572309913873574453_usize,10423729110537263383_usize,16431396215063511931_usize];
RET = [17954657820481657511_u64,8835551301583385084_u64,16250827871786329538_u64,10144722048453818025_u64,1927126267440660405_u64,3289465050184849408_u64];
RET = _4;
_1 = [1_usize,5306961399075649086_usize,1076731614140864269_usize,3_usize,4341144726984843227_usize,6172975162972221336_usize,13792788155014625741_usize,4430449875551046639_usize];
RET = [7243448441769000616_u64,17139575409118855754_u64,15338718662778581447_u64,3841409087001000059_u64,9087554358852566651_u64,4754719155222556454_u64];
_9 = _5;
_4 = RET;
_7 = 5425923091080934653_u64 as f64;
_6 = 6974_i16 as f32;
_2 = RET;
_5 = _9;
_8 = 2057609296_u32 * 2167994893_u32;
_2 = [2447547447056527386_u64,16554471154940454527_u64,11565511682944709584_u64,9861019732300724149_u64,15288162161600796997_u64,5199485284334747336_u64];
_7 = 6748632626690416821_u64 as f64;
Goto(bb2)
}
bb2 = {
_8 = !2742285616_u32;
RET = [1644528614083801024_u64,17957210434752227323_u64,4415424765358389275_u64,11629792263439437890_u64,7327745072115255338_u64,10685791487104854496_u64];
_7 = (-47_i8) as f64;
_5 = [_8,_8,_8,_8];
_8 = 1950907426_u32 & 1866748923_u32;
_8 = 1557005468_u32 >> (-64_i8);
_6 = _8 as f32;
_3 = [16463331226604417132_u64,15595770731008071154_u64,15399052704540034574_u64,8252821144564629987_u64,12133307030985546611_u64,16485128781622583362_u64];
_2 = _4;
_8 = !2913091683_u32;
_10 = _7 + _7;
_1 = [7_usize,4_usize,3_usize,5_usize,14526054224294186196_usize,3380698923089917404_usize,2619064632258234354_usize,2_usize];
_3 = [15929021897522569573_u64,9513370821574298916_u64,9142966240246135506_u64,8431639339937361889_u64,11667743297375171340_u64,4922497091435592381_u64];
_7 = (-136624886505818215859757587209194234397_i128) as f64;
_2 = _4;
_8 = 16085613455338422275_usize as u32;
RET = _3;
_9 = [_8,_8,_8,_8];
Goto(bb3)
}
bb3 = {
RET = _2;
_6 = 414461471_i32 as f32;
_11 = 197495489325144525310009449107060691319_u128 ^ 26437358903907029631238848402352129894_u128;
_12 = 17832_u16 - 950_u16;
_14 = (_7, (-5606070158521770544_i64), true);
_14.0 = (-9223372036854775808_isize) as f64;
_14.1 = _11 as i64;
_13 = [10824035175727987609_usize,17212563268559183066_usize,1009306813739995932_usize,5_usize,6_usize,17670102586768657758_usize,2_usize];
_14.0 = -_10;
_8 = !1619987184_u32;
_17.0 = (_14.0, _14.1, _14.2);
_10 = _17.0.0;
_13 = [5_usize,15607557106859820278_usize,15343661917833225207_usize,1_usize,5057196862055839823_usize,12824564087346370290_usize,7_usize];
RET = [10865507484752368580_u64,16873354978890044309_u64,2266287084618141982_u64,5177981384149891646_u64,3163990185689231246_u64,5388327832003503373_u64];
_4 = [16871486932618553032_u64,5328733081007304208_u64,17237277607369099339_u64,11428627506774337856_u64,350680279176820784_u64,1359052790795875428_u64];
_14.0 = _17.0.0;
_14.0 = -_10;
_16 = -_14.0;
Call(RET = core::intrinsics::transmute(_2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_17.0.0 = -_14.0;
_1 = [6988059050410981094_usize,7_usize,5415476666641792395_usize,4_usize,14594379134228070465_usize,1125562776418462575_usize,0_usize,2_usize];
_10 = _17.0.0 - _17.0.0;
_17.0.2 = _14.2;
_14.1 = _17.0.1;
_14.0 = (-2249020578967069020448282001940006172_i128) as f64;
_17.0.2 = _14.2;
Goto(bb5)
}
bb5 = {
_17.0.1 = -_14.1;
_17.0 = (_10, _14.1, _14.2);
_18 = '\u{ad36b}';
_7 = _17.0.0 + _10;
_20 = (-71_isize);
_17 = (_14,);
_13 = [10602906409811613733_usize,13401028123982417197_usize,7_usize,3_usize,5_usize,10472975443207038995_usize,14251715042754149390_usize];
_11 = !92339333964455055803116599328709269871_u128;
_17.0.2 = _7 < _16;
_1 = [0_usize,1_usize,7_usize,4_usize,1279800742571248945_usize,0_usize,10941926421282511352_usize,3_usize];
_10 = _17.0.0 - _7;
_8 = 1971163498_u32 >> _12;
_17 = (_14,);
_8 = 1512801022_u32 | 1783710375_u32;
_10 = _7;
_6 = (-23855_i16) as f32;
_14.2 = !_17.0.2;
match _20 {
0 => bb1,
1 => bb2,
2 => bb6,
340282366920938463463374607431768211385 => bb8,
_ => bb7
}
}
bb6 = {
_17.0.0 = -_14.0;
_1 = [6988059050410981094_usize,7_usize,5415476666641792395_usize,4_usize,14594379134228070465_usize,1125562776418462575_usize,0_usize,2_usize];
_10 = _17.0.0 - _17.0.0;
_17.0.2 = _14.2;
_14.1 = _17.0.1;
_14.0 = (-2249020578967069020448282001940006172_i128) as f64;
_17.0.2 = _14.2;
Goto(bb5)
}
bb7 = {
RET = _2;
_6 = 414461471_i32 as f32;
_11 = 197495489325144525310009449107060691319_u128 ^ 26437358903907029631238848402352129894_u128;
_12 = 17832_u16 - 950_u16;
_14 = (_7, (-5606070158521770544_i64), true);
_14.0 = (-9223372036854775808_isize) as f64;
_14.1 = _11 as i64;
_13 = [10824035175727987609_usize,17212563268559183066_usize,1009306813739995932_usize,5_usize,6_usize,17670102586768657758_usize,2_usize];
_14.0 = -_10;
_8 = !1619987184_u32;
_17.0 = (_14.0, _14.1, _14.2);
_10 = _17.0.0;
_13 = [5_usize,15607557106859820278_usize,15343661917833225207_usize,1_usize,5057196862055839823_usize,12824564087346370290_usize,7_usize];
RET = [10865507484752368580_u64,16873354978890044309_u64,2266287084618141982_u64,5177981384149891646_u64,3163990185689231246_u64,5388327832003503373_u64];
_4 = [16871486932618553032_u64,5328733081007304208_u64,17237277607369099339_u64,11428627506774337856_u64,350680279176820784_u64,1359052790795875428_u64];
_14.0 = _17.0.0;
_14.0 = -_10;
_16 = -_14.0;
Call(RET = core::intrinsics::transmute(_2), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_11 = (-5369_i16) as u128;
_9 = _5;
_17.0.0 = -_7;
RET = [1251872097960291091_u64,7641143680397810181_u64,2948912743033583953_u64,14350724799877710798_u64,7545275288450710606_u64,16715784437309195720_u64];
_17.0 = (_10, _14.1, _14.2);
match _20 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463463374607431768211385 => bb13,
_ => bb12
}
}
bb9 = {
RET = _2;
_6 = 414461471_i32 as f32;
_11 = 197495489325144525310009449107060691319_u128 ^ 26437358903907029631238848402352129894_u128;
_12 = 17832_u16 - 950_u16;
_14 = (_7, (-5606070158521770544_i64), true);
_14.0 = (-9223372036854775808_isize) as f64;
_14.1 = _11 as i64;
_13 = [10824035175727987609_usize,17212563268559183066_usize,1009306813739995932_usize,5_usize,6_usize,17670102586768657758_usize,2_usize];
_14.0 = -_10;
_8 = !1619987184_u32;
_17.0 = (_14.0, _14.1, _14.2);
_10 = _17.0.0;
_13 = [5_usize,15607557106859820278_usize,15343661917833225207_usize,1_usize,5057196862055839823_usize,12824564087346370290_usize,7_usize];
RET = [10865507484752368580_u64,16873354978890044309_u64,2266287084618141982_u64,5177981384149891646_u64,3163990185689231246_u64,5388327832003503373_u64];
_4 = [16871486932618553032_u64,5328733081007304208_u64,17237277607369099339_u64,11428627506774337856_u64,350680279176820784_u64,1359052790795875428_u64];
_14.0 = _17.0.0;
_14.0 = -_10;
_16 = -_14.0;
Call(RET = core::intrinsics::transmute(_2), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_8 = !2742285616_u32;
RET = [1644528614083801024_u64,17957210434752227323_u64,4415424765358389275_u64,11629792263439437890_u64,7327745072115255338_u64,10685791487104854496_u64];
_7 = (-47_i8) as f64;
_5 = [_8,_8,_8,_8];
_8 = 1950907426_u32 & 1866748923_u32;
_8 = 1557005468_u32 >> (-64_i8);
_6 = _8 as f32;
_3 = [16463331226604417132_u64,15595770731008071154_u64,15399052704540034574_u64,8252821144564629987_u64,12133307030985546611_u64,16485128781622583362_u64];
_2 = _4;
_8 = !2913091683_u32;
_10 = _7 + _7;
_1 = [7_usize,4_usize,3_usize,5_usize,14526054224294186196_usize,3380698923089917404_usize,2619064632258234354_usize,2_usize];
_3 = [15929021897522569573_u64,9513370821574298916_u64,9142966240246135506_u64,8431639339937361889_u64,11667743297375171340_u64,4922497091435592381_u64];
_7 = (-136624886505818215859757587209194234397_i128) as f64;
_2 = _4;
_8 = 16085613455338422275_usize as u32;
RET = _3;
_9 = [_8,_8,_8,_8];
Goto(bb3)
}
bb11 = {
_17.0.1 = -_14.1;
_17.0 = (_10, _14.1, _14.2);
_18 = '\u{ad36b}';
_7 = _17.0.0 + _10;
_20 = (-71_isize);
_17 = (_14,);
_13 = [10602906409811613733_usize,13401028123982417197_usize,7_usize,3_usize,5_usize,10472975443207038995_usize,14251715042754149390_usize];
_11 = !92339333964455055803116599328709269871_u128;
_17.0.2 = _7 < _16;
_1 = [0_usize,1_usize,7_usize,4_usize,1279800742571248945_usize,0_usize,10941926421282511352_usize,3_usize];
_10 = _17.0.0 - _7;
_8 = 1971163498_u32 >> _12;
_17 = (_14,);
_8 = 1512801022_u32 | 1783710375_u32;
_10 = _7;
_6 = (-23855_i16) as f32;
_14.2 = !_17.0.2;
match _20 {
0 => bb1,
1 => bb2,
2 => bb6,
340282366920938463463374607431768211385 => bb8,
_ => bb7
}
}
bb12 = {
RET = _2;
_6 = 414461471_i32 as f32;
_11 = 197495489325144525310009449107060691319_u128 ^ 26437358903907029631238848402352129894_u128;
_12 = 17832_u16 - 950_u16;
_14 = (_7, (-5606070158521770544_i64), true);
_14.0 = (-9223372036854775808_isize) as f64;
_14.1 = _11 as i64;
_13 = [10824035175727987609_usize,17212563268559183066_usize,1009306813739995932_usize,5_usize,6_usize,17670102586768657758_usize,2_usize];
_14.0 = -_10;
_8 = !1619987184_u32;
_17.0 = (_14.0, _14.1, _14.2);
_10 = _17.0.0;
_13 = [5_usize,15607557106859820278_usize,15343661917833225207_usize,1_usize,5057196862055839823_usize,12824564087346370290_usize,7_usize];
RET = [10865507484752368580_u64,16873354978890044309_u64,2266287084618141982_u64,5177981384149891646_u64,3163990185689231246_u64,5388327832003503373_u64];
_4 = [16871486932618553032_u64,5328733081007304208_u64,17237277607369099339_u64,11428627506774337856_u64,350680279176820784_u64,1359052790795875428_u64];
_14.0 = _17.0.0;
_14.0 = -_10;
_16 = -_14.0;
Call(RET = core::intrinsics::transmute(_2), ReturnTo(bb4), UnwindUnreachable())
}
bb13 = {
_21 = [_12,_12,_12,_12,_12,_12];
_4 = _2;
_17.0.1 = 39895754924223036219929050233354944034_i128 as i64;
_1 = [3_usize,1_usize,1_usize,9950006456284875960_usize,5819713213055927235_usize,1_usize,4_usize,7_usize];
_17.0.0 = _10 - _7;
_17.0.0 = 6_usize as f64;
_9 = _5;
_2 = [15993516562838679414_u64,17019651394432052576_u64,3341437986486422_u64,14136450330245359104_u64,14068097796113552902_u64,15438222704879150094_u64];
_14.0 = _7;
_26 = _21;
_18 = '\u{898e1}';
_24 = _20 ^ _20;
_6 = _14.1 as f32;
_3 = [5506611994173834289_u64,576569268296342015_u64,15875419857031933497_u64,2198564774677901548_u64,7640729946483819047_u64,6689134086056267459_u64];
_14 = (_7, _17.0.1, _17.0.2);
Call(_24 = core::intrinsics::bswap(_20), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_24 = _6 as isize;
_18 = '\u{2a4dd}';
_14.1 = !_17.0.1;
_25 = -_14.1;
_16 = -_14.0;
_4 = [7970371861219055896_u64,3798891456386190547_u64,1927511984402668066_u64,7053322851218114847_u64,10392740635481720898_u64,12028219614777417580_u64];
_13 = [6_usize,2598064766921443361_usize,3_usize,4_usize,7_usize,0_usize,2_usize];
_27 = (_3,);
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(4_usize, 1_usize, Move(_1), 12_usize, Move(_12), 8_usize, Move(_8), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(4_usize, 11_usize, Move(_11), 5_usize, Move(_5), 20_usize, Move(_20), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [u64; 6],mut _2: [u64; 6],mut _3: [u64; 6],mut _4: [u64; 6],mut _5: [usize; 8],mut _6: [usize; 8],mut _7: [usize; 8],mut _8: [u64; 6],mut _9: [u64; 6],mut _10: [usize; 8],mut _11: [u64; 6]) -> [u32; 4] {
mir! {
type RET = [u32; 4];
let _12: f32;
let _13: [i32; 2];
let _14: (f32, u32, char);
let _15: [i128; 2];
let _16: u128;
let _17: [i16; 3];
let _18: f32;
let _19: [i32; 2];
let _20: (f64, i64, bool);
let _21: char;
let _22: [i16; 3];
let _23: [i16; 3];
let _24: ([u64; 6],);
let _25: u8;
let _26: isize;
let _27: (usize, i16);
let _28: bool;
let _29: [i8; 3];
let _30: i128;
let _31: (f32, u32, char);
let _32: isize;
let _33: isize;
let _34: [i16; 5];
let _35: Adt63;
let _36: [i128; 2];
let _37: isize;
let _38: Adt65;
let _39: f32;
let _40: i128;
let _41: [u32; 4];
let _42: isize;
let _43: isize;
let _44: bool;
let _45: *const *const *mut [i16; 3];
let _46: f64;
let _47: ();
let _48: ();
{
_8 = [2983819625639198239_u64,17152634270257460607_u64,7689519729616599753_u64,7651000741805953470_u64,8362801870215539857_u64,4257388148083780929_u64];
_7 = [1_usize,14159329801644759184_usize,18040100159216413166_usize,5_usize,0_usize,1_usize,4490836424234259941_usize,3_usize];
_1 = [12845559362217573955_u64,7249793587761044127_u64,1456198540570510275_u64,18388750997414840795_u64,6511566029826132454_u64,16795671056515902501_u64];
RET = [2021964257_u32,1070020280_u32,2429170401_u32,2743135466_u32];
_1 = _9;
_10 = [5160138316679814124_usize,2383936249958585534_usize,3441626611818737344_usize,15793593943775556626_usize,0_usize,5_usize,12486380448227692389_usize,1_usize];
_4 = [17309667848207325271_u64,6721487676101658630_u64,14955080953385936732_u64,8092382673769721903_u64,14844301607665417403_u64,5908396404899510890_u64];
_2 = _3;
_13 = [1637578832_i32,675333031_i32];
_8 = _9;
_3 = [881608242603185746_u64,1271689314345541653_u64,7225984472597626183_u64,584603899828093529_u64,14332546565803806329_u64,7864322752615132676_u64];
_5 = [3188812236416480151_usize,5340836137319798528_usize,3502213500779143493_usize,3407051945898069596_usize,0_usize,3_usize,1_usize,2_usize];
RET = [1054380890_u32,3480759563_u32,461697520_u32,2754594990_u32];
_11 = _3;
_5 = [1_usize,7_usize,1001942254710487427_usize,3_usize,17819497972630282200_usize,10523138234082751848_usize,3_usize,1555692701568943918_usize];
_13 = [446407009_i32,1980180902_i32];
_14.1 = 3247171721_u32 - 240632362_u32;
_14.2 = '\u{b3928}';
_4 = [7184330349963977527_u64,8576705255823630174_u64,7202027310108657971_u64,336521973069882121_u64,17038609600626815677_u64,18142206708012918812_u64];
_11 = [17533571350674955206_u64,5830386498173218501_u64,12669314237350825475_u64,4709844678151685091_u64,2127810343984464187_u64,4030426078558153616_u64];
Call(_13 = fn6(_5, _10, RET, _5, _14.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_15 = [105499325881709904291628238768000923432_i128,34572438748408536350089245564757649892_i128];
_8 = [13678748710250446315_u64,2876797675083885616_u64,1005269100773000422_u64,13936864125584680653_u64,12102602515446393175_u64,10288048860879451755_u64];
_5 = _6;
_12 = 1099237756981533515_usize as f32;
_9 = _8;
_7 = [11038719382360165601_usize,3_usize,9465818043988308893_usize,419324374400744344_usize,6_usize,4210794019722486755_usize,17161759160357487613_usize,17533260243300958548_usize];
_9 = [16159823135644757816_u64,14944514416352614873_u64,11095670778614003603_u64,12139060861540898274_u64,13324564446728697971_u64,871426737881480074_u64];
_14.2 = '\u{d01fd}';
Call(_11 = core::intrinsics::transmute(_3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14.2 = '\u{f3213}';
_8 = [7263264130975817460_u64,4467735296098191028_u64,13188237386805407053_u64,6746925641244660079_u64,1828846967731139019_u64,9875895177091650286_u64];
RET = [_14.1,_14.1,_14.1,_14.1];
_6 = [2092831700658308631_usize,13923538737979242781_usize,4413322879522707782_usize,3_usize,8080379451947794826_usize,1500116753829698036_usize,3_usize,5_usize];
_14 = (_12, 250689530_u32, '\u{c283e}');
RET = [_14.1,_14.1,_14.1,_14.1];
_8 = _9;
RET = [_14.1,_14.1,_14.1,_14.1];
_14.1 = 44_i8 as u32;
RET = [_14.1,_14.1,_14.1,_14.1];
_5 = [10857454857624476997_usize,2_usize,3_usize,1_usize,2_usize,3_usize,11504665335579796669_usize,12636744057513546993_usize];
_14.0 = -_12;
RET = [_14.1,_14.1,_14.1,_14.1];
_17 = [(-18100_i16),(-31380_i16),4897_i16];
_6 = [347203005837263087_usize,9513958605060924851_usize,6_usize,6846389352687613714_usize,1_usize,4_usize,7_usize,6_usize];
_19 = _13;
_12 = 149741098062717159276596686903655639901_u128 as f32;
_6 = _5;
_8 = [13370235032443366371_u64,2147859037567269094_u64,14419486667634754084_u64,10386865904091393754_u64,13402301775753954489_u64,12738104599819120851_u64];
_16 = (-17723_i16) as u128;
_5 = [10360579759435258087_usize,3_usize,1_usize,18052438700457189399_usize,2_usize,0_usize,7_usize,15241522440493163030_usize];
_9 = [14202638714423337889_u64,1064832046332066966_u64,1610358269159256640_u64,15783337531161221219_u64,3022009063006266058_u64,15511605227944871277_u64];
_3 = [6050080548860137014_u64,956564946968619617_u64,10664947766855553370_u64,5097760023411560764_u64,13906887374900296719_u64,9098109474792342539_u64];
_6 = _10;
_5 = [11001713851784403720_usize,2533832440630145019_usize,3_usize,6_usize,5885162768047670667_usize,1076271299045332048_usize,17044025098801884439_usize,7_usize];
Goto(bb3)
}
bb3 = {
_18 = _12 * _14.0;
_7 = [83852232770657380_usize,5_usize,12225941981238597662_usize,12607793784705103925_usize,2_usize,16023074011049849956_usize,5_usize,2_usize];
_7 = _10;
_4 = [4588592127917056982_u64,11025865333126642243_u64,1458236420672497214_u64,17746391722319250461_u64,7878764473301893106_u64,6978750017136334057_u64];
_1 = [11313443187252312536_u64,3156999901846369707_u64,11755627814598923329_u64,17523950199913316590_u64,11715850857546918152_u64,3198694781346511534_u64];
RET = [_14.1,_14.1,_14.1,_14.1];
_20.0 = 19_i8 as f64;
_20.2 = false;
_21 = _14.2;
_6 = _10;
_3 = _9;
_23 = _17;
_5 = [3_usize,15347582025014555123_usize,6_usize,18085674800541849667_usize,6_usize,2_usize,9042630385360632617_usize,3_usize];
_14.2 = _21;
_10 = [15785630924653053056_usize,3917807180013757234_usize,5687071965321512711_usize,6_usize,3_usize,6271310314585785272_usize,9840831719446644775_usize,2_usize];
_14.0 = _12;
_13 = [891963263_i32,1363334928_i32];
_22 = [(-22715_i16),(-28276_i16),4079_i16];
_14 = (_12, 1912740913_u32, _21);
_20.1 = (-6626714109380130217_i64) | 2820966956335564006_i64;
_14.2 = _21;
_14.0 = 141_u8 as f32;
_5 = [3_usize,6_usize,15093188775552419857_usize,15153459003486825396_usize,6771674390399993033_usize,748454648446830283_usize,3_usize,7286987277782680694_usize];
_15 = [(-162556213171713938910440689134066363851_i128),(-79830053811062298756754331672969583359_i128)];
_20.0 = 58731554408533322500412318246696425143_i128 as f64;
Call(_3 = core::intrinsics::transmute(_11), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = _7;
_24 = (_9,);
_21 = _14.2;
_24.0 = [10290010906198383857_u64,18074400037878506988_u64,11410183824014741040_u64,13043486281258884310_u64,9844651186589520812_u64,13067572763774184835_u64];
_20.0 = 97082464_i32 as f64;
_20.1 = (-2874070459673510570_i64);
_12 = _18 - _18;
_14 = (_18, 1200340525_u32, _21);
_23 = _22;
_4 = _3;
Goto(bb5)
}
bb5 = {
_27 = (5_usize, 24749_i16);
_12 = _18 - _14.0;
_27.0 = _14.1 as usize;
_27.1 = 42189_u16 as i16;
_9 = [17234933068643731201_u64,9247013426046692335_u64,9391187792487451421_u64,3657346655556319162_u64,16832943832948360617_u64,7265733966828408103_u64];
_11 = [6554808726293993012_u64,5247948574849678766_u64,10531812624310613853_u64,10788712858598877873_u64,4326015465397865665_u64,17339027199461429306_u64];
_17 = [_27.1,_27.1,_27.1];
_14.2 = _21;
_4 = [10793437883334085563_u64,2541105282548695004_u64,10000556214598447358_u64,9468203223854109429_u64,16267728641831153632_u64,6187384170474355207_u64];
_21 = _14.2;
_9 = _11;
_16 = 84826104346111718993723546910355329435_u128 + 138472796182752349946950305454824009989_u128;
_28 = _14.1 == _14.1;
_28 = _14.1 != _14.1;
_1 = [4262748518443311188_u64,6758427497511411648_u64,16313125839804772035_u64,9692769336183817022_u64,8336095294259319380_u64,14294237893317964857_u64];
_20.0 = 9223372036854775807_isize as f64;
_31.1 = !_14.1;
_31.0 = 61721973793809034868142493649172110102_i128 as f32;
_15 = [(-78367505868492414091445531670011261566_i128),44223654582052390927506001900761812885_i128];
_30 = !(-94434236676507816793790404945022286839_i128);
_23 = [_27.1,_27.1,_27.1];
match _14.1 {
0 => bb4,
1200340525 => bb7,
_ => bb6
}
}
bb6 = {
_14.2 = '\u{f3213}';
_8 = [7263264130975817460_u64,4467735296098191028_u64,13188237386805407053_u64,6746925641244660079_u64,1828846967731139019_u64,9875895177091650286_u64];
RET = [_14.1,_14.1,_14.1,_14.1];
_6 = [2092831700658308631_usize,13923538737979242781_usize,4413322879522707782_usize,3_usize,8080379451947794826_usize,1500116753829698036_usize,3_usize,5_usize];
_14 = (_12, 250689530_u32, '\u{c283e}');
RET = [_14.1,_14.1,_14.1,_14.1];
_8 = _9;
RET = [_14.1,_14.1,_14.1,_14.1];
_14.1 = 44_i8 as u32;
RET = [_14.1,_14.1,_14.1,_14.1];
_5 = [10857454857624476997_usize,2_usize,3_usize,1_usize,2_usize,3_usize,11504665335579796669_usize,12636744057513546993_usize];
_14.0 = -_12;
RET = [_14.1,_14.1,_14.1,_14.1];
_17 = [(-18100_i16),(-31380_i16),4897_i16];
_6 = [347203005837263087_usize,9513958605060924851_usize,6_usize,6846389352687613714_usize,1_usize,4_usize,7_usize,6_usize];
_19 = _13;
_12 = 149741098062717159276596686903655639901_u128 as f32;
_6 = _5;
_8 = [13370235032443366371_u64,2147859037567269094_u64,14419486667634754084_u64,10386865904091393754_u64,13402301775753954489_u64,12738104599819120851_u64];
_16 = (-17723_i16) as u128;
_5 = [10360579759435258087_usize,3_usize,1_usize,18052438700457189399_usize,2_usize,0_usize,7_usize,15241522440493163030_usize];
_9 = [14202638714423337889_u64,1064832046332066966_u64,1610358269159256640_u64,15783337531161221219_u64,3022009063006266058_u64,15511605227944871277_u64];
_3 = [6050080548860137014_u64,956564946968619617_u64,10664947766855553370_u64,5097760023411560764_u64,13906887374900296719_u64,9098109474792342539_u64];
_6 = _10;
_5 = [11001713851784403720_usize,2533832440630145019_usize,3_usize,6_usize,5885162768047670667_usize,1076271299045332048_usize,17044025098801884439_usize,7_usize];
Goto(bb3)
}
bb7 = {
_15 = [_30,_30];
_32 = _28 as isize;
_32 = (-62_isize);
_24 = (_2,);
_26 = !_32;
_20.0 = _27.1 as f64;
_23 = [_27.1,_27.1,_27.1];
_3 = [13710372499152688013_u64,9841136291305481036_u64,8642010790586277637_u64,15373694832323881562_u64,2808594179586001022_u64,14856221917183667286_u64];
_4 = [16280793352456136553_u64,14188153759270723194_u64,14021998169822612894_u64,15811429492131523805_u64,16530841403433879228_u64,8629205874186540283_u64];
_20.2 = _28 & _28;
_14 = (_12, _31.1, _21);
match _32 {
0 => bb6,
1 => bb8,
2 => bb9,
340282366920938463463374607431768211394 => bb11,
_ => bb10
}
}
bb8 = {
_15 = [105499325881709904291628238768000923432_i128,34572438748408536350089245564757649892_i128];
_8 = [13678748710250446315_u64,2876797675083885616_u64,1005269100773000422_u64,13936864125584680653_u64,12102602515446393175_u64,10288048860879451755_u64];
_5 = _6;
_12 = 1099237756981533515_usize as f32;
_9 = _8;
_7 = [11038719382360165601_usize,3_usize,9465818043988308893_usize,419324374400744344_usize,6_usize,4210794019722486755_usize,17161759160357487613_usize,17533260243300958548_usize];
_9 = [16159823135644757816_u64,14944514416352614873_u64,11095670778614003603_u64,12139060861540898274_u64,13324564446728697971_u64,871426737881480074_u64];
_14.2 = '\u{d01fd}';
Call(_11 = core::intrinsics::transmute(_3), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_27 = (5_usize, 24749_i16);
_12 = _18 - _14.0;
_27.0 = _14.1 as usize;
_27.1 = 42189_u16 as i16;
_9 = [17234933068643731201_u64,9247013426046692335_u64,9391187792487451421_u64,3657346655556319162_u64,16832943832948360617_u64,7265733966828408103_u64];
_11 = [6554808726293993012_u64,5247948574849678766_u64,10531812624310613853_u64,10788712858598877873_u64,4326015465397865665_u64,17339027199461429306_u64];
_17 = [_27.1,_27.1,_27.1];
_14.2 = _21;
_4 = [10793437883334085563_u64,2541105282548695004_u64,10000556214598447358_u64,9468203223854109429_u64,16267728641831153632_u64,6187384170474355207_u64];
_21 = _14.2;
_9 = _11;
_16 = 84826104346111718993723546910355329435_u128 + 138472796182752349946950305454824009989_u128;
_28 = _14.1 == _14.1;
_28 = _14.1 != _14.1;
_1 = [4262748518443311188_u64,6758427497511411648_u64,16313125839804772035_u64,9692769336183817022_u64,8336095294259319380_u64,14294237893317964857_u64];
_20.0 = 9223372036854775807_isize as f64;
_31.1 = !_14.1;
_31.0 = 61721973793809034868142493649172110102_i128 as f32;
_15 = [(-78367505868492414091445531670011261566_i128),44223654582052390927506001900761812885_i128];
_30 = !(-94434236676507816793790404945022286839_i128);
_23 = [_27.1,_27.1,_27.1];
match _14.1 {
0 => bb4,
1200340525 => bb7,
_ => bb6
}
}
bb10 = {
_6 = _7;
_24 = (_9,);
_21 = _14.2;
_24.0 = [10290010906198383857_u64,18074400037878506988_u64,11410183824014741040_u64,13043486281258884310_u64,9844651186589520812_u64,13067572763774184835_u64];
_20.0 = 97082464_i32 as f64;
_20.1 = (-2874070459673510570_i64);
_12 = _18 - _18;
_14 = (_18, 1200340525_u32, _21);
_23 = _22;
_4 = _3;
Goto(bb5)
}
bb11 = {
_29 = [9_i8,(-40_i8),124_i8];
_31 = _14;
_34 = [_27.1,_27.1,_27.1,_27.1,_27.1];
_33 = _26;
_14.1 = _31.1;
_21 = _31.2;
_32 = _33;
_27 = (7286574588750574296_usize, 21585_i16);
_11 = [2275613842402841027_u64,12074114572152541978_u64,14031422464443450047_u64,16077499708731027114_u64,11550974307539388148_u64,13658044016548069325_u64];
_13 = [(-1843387850_i32),1178175810_i32];
_34 = [_27.1,_27.1,_27.1,_27.1,_27.1];
_14 = (_31.0, _31.1, _31.2);
_19 = [1139814479_i32,1705558354_i32];
_36 = [_30,_30];
_19 = [(-1906804141_i32),(-1426917450_i32)];
_20.0 = 5993878468969102289_u64 as f64;
_19 = [(-1304926616_i32),1836902444_i32];
_31.0 = _18;
_20.1 = (-8919346825922781027_i64);
_3 = [9308756219310521791_u64,7548542180976819588_u64,9576751214796017687_u64,6742632328251503731_u64,11846375386928959586_u64,16612387055883002442_u64];
_31.1 = _14.1 | _14.1;
_7 = [_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0];
_27.1 = _21 as i16;
_31.0 = _12 + _12;
_4 = [1973065269631931161_u64,647170936308135405_u64,1034347798234130394_u64,2010503115829821492_u64,7725164674709884849_u64,3560392630779717981_u64];
_27.0 = 1176030648036514554_usize << _31.1;
_38.fld3 = Adt49::Variant0 { fld0: _6 };
_38.fld4 = [_31.1,_31.1,_31.1,_31.1];
match _20.1 {
0 => bb7,
1 => bb6,
340282366920938463454455260605845430429 => bb13,
_ => bb12
}
}
bb12 = {
_15 = [_30,_30];
_32 = _28 as isize;
_32 = (-62_isize);
_24 = (_2,);
_26 = !_32;
_20.0 = _27.1 as f64;
_23 = [_27.1,_27.1,_27.1];
_3 = [13710372499152688013_u64,9841136291305481036_u64,8642010790586277637_u64,15373694832323881562_u64,2808594179586001022_u64,14856221917183667286_u64];
_4 = [16280793352456136553_u64,14188153759270723194_u64,14021998169822612894_u64,15811429492131523805_u64,16530841403433879228_u64,8629205874186540283_u64];
_20.2 = _28 & _28;
_14 = (_12, _31.1, _21);
match _32 {
0 => bb6,
1 => bb8,
2 => bb9,
340282366920938463463374607431768211394 => bb11,
_ => bb10
}
}
bb13 = {
_31.0 = -_14.0;
_10 = [_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0];
_27.1 = (-1227_i16) + 31572_i16;
_31.1 = !_14.1;
_37 = _33;
_31 = _14;
_25 = 63217_u16 as u8;
_2 = _9;
_14 = _31;
_38.fld2 = Adt56::Variant0 { fld0: 13268321988854951834_u64,fld1: _27.1 };
_14 = _31;
RET = [_14.1,_14.1,_14.1,_14.1];
_13 = _19;
_2 = [12820684227561708464_u64,14946687006053939336_u64,16327927847990197884_u64,5112810501789286615_u64,3579377029427858688_u64,3141576248753329827_u64];
_3 = _8;
_1 = [12608805442228943875_u64,10905374950762013633_u64,224125388940729159_u64,1365810043689820405_u64,5628229878352015846_u64,8821053474451241770_u64];
_40 = _30;
_37 = _20.1 as isize;
_14.1 = !_31.1;
_19 = [497510240_i32,(-1788624680_i32)];
_16 = _25 as u128;
_24 = (_9,);
_16 = !291521921983519388247321996332961085442_u128;
_12 = _20.1 as f32;
_10 = [_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0,_27.0];
Call(_38.fld1 = core::intrinsics::transmute(_27.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_24.0 = [18234378202074916992_u64,8613209093446616942_u64,3155576590373555057_u64,6167263653354848359_u64,12856537004564005706_u64,7078659117230338489_u64];
_25 = 186_u8 << _31.1;
_17 = _22;
RET = _38.fld4;
_44 = _20.2 > _20.2;
_31.2 = _21;
_37 = _20.1 as isize;
_27.0 = 36811_u16 as usize;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(5_usize, 6_usize, Move(_6), 13_usize, Move(_13), 44_usize, Move(_44), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(5_usize, 29_usize, Move(_29), 1_usize, Move(_1), 28_usize, Move(_28), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(5_usize, 17_usize, Move(_17), 16_usize, Move(_16), 40_usize, Move(_40), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(5_usize, 19_usize, Move(_19), 21_usize, Move(_21), 9_usize, Move(_9), 30_usize, Move(_30)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [usize; 8],mut _2: [usize; 8],mut _3: [u32; 4],mut _4: [usize; 8],mut _5: u32) -> [i32; 2] {
mir! {
type RET = [i32; 2];
let _6: u32;
let _7: u128;
let _8: u8;
let _9: isize;
let _10: i64;
let _11: (i64, u16, *mut [i16; 3]);
let _12: i64;
let _13: isize;
let _14: (char, u8);
let _15: bool;
let _16: Adt52;
let _17: bool;
let _18: [usize; 5];
let _19: [i32; 6];
let _20: [u16; 6];
let _21: i8;
let _22: f64;
let _23: i8;
let _24: (i64,);
let _25: *const *mut [i16; 3];
let _26: [u64; 6];
let _27: Adt58;
let _28: [i128; 2];
let _29: f64;
let _30: i16;
let _31: i128;
let _32: ();
let _33: ();
{
_2 = [5329703965334997836_usize,17620678727742160633_usize,6_usize,3_usize,14155738670583327521_usize,1_usize,7_usize,1_usize];
RET = [(-180856094_i32),1314466079_i32];
_2 = _1;
_7 = 253439429782599061835861370324346659369_u128 & 320677292002826545868546896210197508676_u128;
RET = [553289788_i32,2100234205_i32];
_6 = (-361710393_i32) as u32;
RET = [(-445099207_i32),965285497_i32];
_7 = 7387_u16 as u128;
_5 = _6 >> _6;
_6 = !_5;
_9 = 9223372036854775807_isize * (-9223372036854775808_isize);
_8 = 254_u8 * 213_u8;
_1 = _2;
_2 = [3_usize,4728896328217036207_usize,14481055962941479617_usize,5_usize,7_usize,5_usize,15909769330075809273_usize,1688548584974545348_usize];
RET = [92546380_i32,360857182_i32];
RET = [(-104401046_i32),(-788269445_i32)];
_4 = [0_usize,4_usize,7283405527045236878_usize,3_usize,13148740379327831594_usize,16296132403579730411_usize,4371103960393324584_usize,7_usize];
Call(_4 = fn7(_8, _7, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = !(-2069219430533885290_i64);
_2 = _1;
_10 = !(-9110828064222149301_i64);
Goto(bb2)
}
bb2 = {
_3 = [_6,_5,_6,_5];
_8 = 942556872778242625252470630572709400_i128 as u8;
_1 = [0_usize,13981050997292631029_usize,4_usize,7_usize,16328209908047766276_usize,5_usize,7638440106920293613_usize,8893012186111500457_usize];
_3 = [_6,_5,_6,_6];
RET = [(-1191339333_i32),671718776_i32];
RET = [300375751_i32,332006940_i32];
RET = [(-1669959964_i32),1760561285_i32];
_2 = [7_usize,4_usize,5988264945769818408_usize,7_usize,10027813373615695877_usize,4_usize,5_usize,0_usize];
_9 = (-9223372036854775808_isize);
_1 = [4_usize,6255338405975290014_usize,4_usize,204525668902898256_usize,1_usize,11016823942391209629_usize,5864525166184137476_usize,9921808482692673265_usize];
_4 = [2609456989214596506_usize,4_usize,4_usize,15403497835582447735_usize,0_usize,5320681502649850354_usize,10132180072932756761_usize,2_usize];
_12 = !_10;
_11.1 = !44663_u16;
_11.0 = _9 as i64;
_12 = -_11.0;
_7 = !422565525231640178738490421566233794_u128;
_12 = _11.0 >> _5;
_11.1 = 38679_u16;
RET = [(-1293932705_i32),1589039921_i32];
_8 = 176_u8 >> _5;
_12 = _11.0;
Call(_12 = fn8(_6, _9, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_14 = ('\u{d7015}', _8);
_5 = _6 << _11.0;
_13 = !_9;
_16.fld0 = [6127953106827965106_usize,2124403611318170978_usize,2_usize,8865617392120709376_usize,6371994807768813822_usize];
_16.fld1.1.0 = _12 << _8;
RET = [(-1412035540_i32),1291555900_i32];
_12 = _16.fld1.1.0 * _16.fld1.1.0;
_9 = _13 + _13;
_16.fld2.0 = _16.fld1.1.0;
_3 = [_6,_5,_5,_5];
_4 = [6_usize,7_usize,12278076126450838126_usize,15656613235903274033_usize,5_usize,1_usize,3_usize,1_usize];
_11.0 = _16.fld2.0;
RET = [(-374477332_i32),(-390926136_i32)];
RET = [437694785_i32,(-1493844295_i32)];
_16.fld3 = [12715685376602457322_u64,8571413480418525089_u64,12897955034651403722_u64,10371924388343201586_u64,17959756175965404266_u64,5335608190371686891_u64];
_16.fld0 = [877571969807597241_usize,3748293456335442589_usize,6_usize,10365277803379844254_usize,11179025464910408052_usize];
_16.fld1.0 = _9;
Goto(bb4)
}
bb4 = {
_16.fld1.2.0 = _12 - _11.0;
_14.1 = !_8;
_16.fld1.0 = -_13;
_16.fld1.2 = (_16.fld1.1.0,);
_10 = _12;
_10 = _12;
_19 = [(-378254215_i32),(-1668927406_i32),1914491787_i32,65052230_i32,670525151_i32,(-1289173399_i32)];
_17 = false;
_21 = (-108_i8);
_16.fld2 = _16.fld1.2;
_8 = _14.1 - _14.1;
_21 = (-92_i8);
Call(_13 = fn9(_1, _4, _4, _6, _14.1, _16.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_18 = _16.fld0;
_14.0 = '\u{e4e25}';
_20 = [_11.1,_11.1,_11.1,_11.1,_11.1,_11.1];
_13 = -_9;
_16.fld3 = [4077346446195168268_u64,6025901972819919936_u64,10960841506188797952_u64,13878880359476621597_u64,1750352712791039236_u64,17443174391296721255_u64];
Goto(bb6)
}
bb6 = {
_13 = _17 as isize;
RET = [(-1507766928_i32),(-1291560020_i32)];
_6 = _5;
_22 = _16.fld1.2.0 as f64;
Goto(bb7)
}
bb7 = {
_4 = [9186031070146737846_usize,1_usize,11512890022563472223_usize,1_usize,15390342415583529308_usize,7101565114384137881_usize,3_usize,8749276386719173779_usize];
_16.fld1.1.1 = _10 as u16;
_10 = _16.fld2.0 & _16.fld2.0;
_15 = !_17;
_17 = _10 <= _16.fld1.1.0;
_22 = _5 as f64;
_8 = _22 as u8;
_22 = 13635358996004067538_usize as f64;
RET = [867121058_i32,(-1472448180_i32)];
_16.fld0 = [6436440197018322742_usize,2827515740967424204_usize,0_usize,0_usize,15546237260217384344_usize];
_11.1 = _16.fld1.1.1 + _16.fld1.1.1;
_15 = _14.1 >= _14.1;
_2 = [3_usize,5_usize,7_usize,12170738083384427936_usize,15403903188924330998_usize,0_usize,1461308989848624338_usize,4_usize];
RET = [1945253484_i32,1330781667_i32];
_23 = _21;
RET = [253115582_i32,193498562_i32];
RET = [1361400992_i32,(-1608155839_i32)];
_24 = (_16.fld1.1.0,);
_1 = [1_usize,7927377414142036148_usize,17504498075296184427_usize,17925728653395562224_usize,5064987350494193897_usize,10339211318538430064_usize,12638294955266381143_usize,7_usize];
_3 = [_5,_6,_5,_5];
_16.fld2 = (_10,);
_5 = _6 | _6;
RET = [(-917943951_i32),1713486769_i32];
_19 = [1383079742_i32,1394544638_i32,(-2021927988_i32),276775480_i32,539551501_i32,1638253786_i32];
_10 = !_16.fld2.0;
Call(_4 = fn11(_16.fld1.2, _15, _16.fld1.2, _11.1, _19, _24, _12, _16.fld1.2.0, _16.fld1.1.1, _16.fld1.0, _14.1, _19, _13, _11.1, _16.fld1.2.0), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_13 = !_16.fld1.0;
_16.fld1.2.0 = _14.0 as i64;
_13 = _16.fld1.0;
_16.fld2.0 = -_10;
_28 = [102565270604501851983161293717338217443_i128,(-102386087330759473881395711328351209907_i128)];
_16.fld0 = [15527983727134168922_usize,1295802925287937406_usize,4_usize,10654940367547167406_usize,11485970465334270491_usize];
_16.fld2 = (_10,);
_21 = _23 | _23;
_16.fld1.0 = _9 * _13;
_16.fld1.1.1 = _21 as u16;
_3 = [_6,_6,_5,_6];
_22 = 6569380128840751241_u64 as f64;
_15 = _17 ^ _17;
_25 = core::ptr::addr_of!(_16.fld1.1.2);
_28 = [94895939150384167512977912518093822995_i128,(-31240862361170424837628080845830147451_i128)];
_3 = [_6,_5,_5,_6];
_16.fld1.1.1 = _11.1;
_24 = (_12,);
_10 = _15 as i64;
match _23 {
0 => bb5,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
340282366920938463463374607431768211364 => bb14,
_ => bb13
}
}
bb9 = {
_3 = [_6,_5,_6,_5];
_8 = 942556872778242625252470630572709400_i128 as u8;
_1 = [0_usize,13981050997292631029_usize,4_usize,7_usize,16328209908047766276_usize,5_usize,7638440106920293613_usize,8893012186111500457_usize];
_3 = [_6,_5,_6,_6];
RET = [(-1191339333_i32),671718776_i32];
RET = [300375751_i32,332006940_i32];
RET = [(-1669959964_i32),1760561285_i32];
_2 = [7_usize,4_usize,5988264945769818408_usize,7_usize,10027813373615695877_usize,4_usize,5_usize,0_usize];
_9 = (-9223372036854775808_isize);
_1 = [4_usize,6255338405975290014_usize,4_usize,204525668902898256_usize,1_usize,11016823942391209629_usize,5864525166184137476_usize,9921808482692673265_usize];
_4 = [2609456989214596506_usize,4_usize,4_usize,15403497835582447735_usize,0_usize,5320681502649850354_usize,10132180072932756761_usize,2_usize];
_12 = !_10;
_11.1 = !44663_u16;
_11.0 = _9 as i64;
_12 = -_11.0;
_7 = !422565525231640178738490421566233794_u128;
_12 = _11.0 >> _5;
_11.1 = 38679_u16;
RET = [(-1293932705_i32),1589039921_i32];
_8 = 176_u8 >> _5;
_12 = _11.0;
Call(_12 = fn8(_6, _9, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
_13 = _17 as isize;
RET = [(-1507766928_i32),(-1291560020_i32)];
_6 = _5;
_22 = _16.fld1.2.0 as f64;
Goto(bb7)
}
bb11 = {
_18 = _16.fld0;
_14.0 = '\u{e4e25}';
_20 = [_11.1,_11.1,_11.1,_11.1,_11.1,_11.1];
_13 = -_9;
_16.fld3 = [4077346446195168268_u64,6025901972819919936_u64,10960841506188797952_u64,13878880359476621597_u64,1750352712791039236_u64,17443174391296721255_u64];
Goto(bb6)
}
bb12 = {
_16.fld1.2.0 = _12 - _11.0;
_14.1 = !_8;
_16.fld1.0 = -_13;
_16.fld1.2 = (_16.fld1.1.0,);
_10 = _12;
_10 = _12;
_19 = [(-378254215_i32),(-1668927406_i32),1914491787_i32,65052230_i32,670525151_i32,(-1289173399_i32)];
_17 = false;
_21 = (-108_i8);
_16.fld2 = _16.fld1.2;
_8 = _14.1 - _14.1;
_21 = (-92_i8);
Call(_13 = fn9(_1, _4, _4, _6, _14.1, _16.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_10 = !(-2069219430533885290_i64);
_2 = _1;
_10 = !(-9110828064222149301_i64);
Goto(bb2)
}
bb14 = {
_24 = (_10,);
_25 = core::ptr::addr_of!((*_25));
_9 = _16.fld1.0 >> _21;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(6_usize, 17_usize, Move(_17), 20_usize, Move(_20), 8_usize, Move(_8), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(6_usize, 15_usize, Move(_15), 24_usize, Move(_24), 3_usize, Move(_3), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(6_usize, 21_usize, Move(_21), 4_usize, Move(_4), 18_usize, Move(_18), 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: u8,mut _2: u128,mut _3: [usize; 8],mut _4: [usize; 8]) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _5: u8;
let _6: (usize, i16);
let _7: isize;
let _8: f64;
let _9: i128;
let _10: (f64, i64, bool);
let _11: f64;
let _12: u16;
let _13: Adt54;
let _14: char;
let _15: u32;
let _16: (isize, (i64, u16, *mut [i16; 3]), (i64,));
let _17: Adt58;
let _18: f32;
let _19: i32;
let _20: Adt62;
let _21: [i16; 5];
let _22: i16;
let _23: Adt63;
let _24: Adt59;
let _25: f64;
let _26: char;
let _27: *mut i64;
let _28: [i128; 2];
let _29: i8;
let _30: ((f32, u32, char), f32);
let _31: u128;
let _32: u32;
let _33: (f32, u32, char);
let _34: bool;
let _35: u32;
let _36: u128;
let _37: f64;
let _38: i8;
let _39: char;
let _40: i64;
let _41: (f32, u32, char);
let _42: f64;
let _43: [u64; 6];
let _44: *mut i64;
let _45: ();
let _46: ();
{
_3 = _4;
_3 = _4;
_3 = _4;
_1 = !125_u8;
_3 = _4;
RET = [4_usize,10376502313342858425_usize,448199982987216818_usize,2608399550042030781_usize,245010799707983133_usize,15980815116908843395_usize,2647170372818217094_usize,2_usize];
Goto(bb1)
}
bb1 = {
_3 = [3_usize,12304488685450300071_usize,5_usize,18062411102163560270_usize,7_usize,4773087523496046460_usize,3076315599169336725_usize,4970612378400180660_usize];
_6.0 = 2806747678437277494_usize;
_2 = 313853284115948483505978540463793272626_u128;
_6.1 = 32686_i16 + (-24561_i16);
_6.1 = (-450120800_i32) as i16;
_6.1 = !13229_i16;
_4 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
Goto(bb2)
}
bb2 = {
RET = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_1 = 133_u8 | 41_u8;
_6 = (1887113871160764680_usize, 18631_i16);
_5 = _6.1 as u8;
_2 = !85062391483144916108145052249124310060_u128;
_10.2 = _6.1 != _6.1;
_11 = 9223372036854775807_isize as f64;
_9 = (-73936792763279177805419160941646202410_i128);
_10.2 = !true;
_7 = !30_isize;
_6 = (4408791557514741528_usize, (-9725_i16));
_11 = 1869050331_u32 as f64;
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.1 = (-2816_i16);
_12 = _10.2 as u16;
_10.1 = _6.1 as i64;
_7 = 9223372036854775807_isize;
_6 = (15867662951570126783_usize, 8250_i16);
match _9 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
266345574157659285657955446490122009046 => bb7,
_ => bb6
}
}
bb3 = {
_3 = [3_usize,12304488685450300071_usize,5_usize,18062411102163560270_usize,7_usize,4773087523496046460_usize,3076315599169336725_usize,4970612378400180660_usize];
_6.0 = 2806747678437277494_usize;
_2 = 313853284115948483505978540463793272626_u128;
_6.1 = 32686_i16 + (-24561_i16);
_6.1 = (-450120800_i32) as i16;
_6.1 = !13229_i16;
_4 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5 = _12 as u8;
_10.1 = '\u{fb9b0}' as i64;
_2 = 69971764127103636538765946040058435781_u128 & 170956085992621858547029934737905610361_u128;
RET = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.0 = !5_usize;
_1 = _5;
_10 = (_11, (-6290705796277062006_i64), true);
_7 = _10.2 as isize;
_5 = !_1;
_6 = (2_usize, 29457_i16);
_9 = '\u{52d5b}' as i128;
_10.2 = true;
_10.1 = !(-4254016792450898789_i64);
Goto(bb8)
}
bb8 = {
_6 = (2_usize, 22471_i16);
_6.0 = 5771615479694225692_usize;
_10.0 = _12 as f64;
_3 = RET;
RET = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_7 = (-118_isize) * 94_isize;
_10 = (_11, (-4765701505341118877_i64), true);
_5 = _1;
_10.2 = false | false;
_12 = 50360_u16;
_12 = 9400_u16 + 28434_u16;
match _10.1 {
0 => bb7,
340282366920938463458608905926427092579 => bb9,
_ => bb5
}
}
bb9 = {
_2 = _10.2 as u128;
_7 = 9223372036854775807_isize;
_6 = (5571682715342546360_usize, 10643_i16);
_12 = 55404_u16 >> _10.1;
_6.1 = (-14628_i16);
_15 = 2137405950_u32 ^ 1499428453_u32;
_1 = (-64_i8) as u8;
_16.1.1 = _12 & _12;
_10.0 = _11 + _11;
_1 = !_5;
_5 = _1;
_8 = _10.0;
_16.0 = !_7;
_19 = _2 as i32;
_16.2.0 = _10.1;
_16.1.0 = _8 as i64;
_10.0 = _8;
Goto(bb10)
}
bb10 = {
_10.2 = !false;
_14 = '\u{10e858}';
_6.1 = !16317_i16;
_14 = '\u{807b1}';
_4 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_16.0 = !_7;
_22 = _6.1 >> _16.1.1;
RET = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_22 = _6.1;
_21 = [_22,_22,_22,_22,_22];
_18 = _10.0 as f32;
_16.0 = _7 & _7;
_16.1.0 = _6.0 as i64;
_8 = _11 * _10.0;
_16.2.0 = _10.1;
_10 = (_8, _16.1.0, false);
_19 = !(-1965815678_i32);
_12 = !_16.1.1;
_22 = _9 as i16;
RET = _4;
_16.0 = _7 * _7;
_16.2 = (_10.1,);
_10.1 = _16.2.0;
_25 = -_8;
_12 = _16.1.1;
Goto(bb11)
}
bb11 = {
_2 = !291761967282153028812855982688583029158_u128;
_6 = (1_usize, _22);
_27 = core::ptr::addr_of_mut!(_16.2.0);
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.0 = !14675349008631494194_usize;
_16.1.1 = !_12;
_6.0 = _8 as usize;
_11 = _8;
_10.1 = -(*_27);
_16.1.1 = _12;
_9 = 10720782591444162368491752643869614501_i128 | 164399452210816541106258248358414518676_i128;
_16.2 = (_16.1.0,);
_1 = _18 as u8;
_30.0.1 = _15 & _15;
_6.0 = 11977987172620149376_usize;
_10.2 = true;
_30.0.0 = _18;
_26 = _14;
_11 = _10.0 * _8;
_9 = (-96186593609017453330055102338050627664_i128) | (-120802621805582914549941644055550015760_i128);
_26 = _14;
_18 = _30.0.0;
_29 = -(-76_i8);
_16.1.0 = -_16.2.0;
_32 = _30.0.1 << _30.0.1;
match _7 {
0 => bb1,
9223372036854775807 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_9 = _1 as i128;
_3 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_5 = _7 as u8;
_32 = _26 as u32;
_30.0.2 = _26;
(*_27) = !_16.1.0;
_15 = _30.0.1;
_33.2 = _26;
_14 = _33.2;
_19 = 1843598242_i32;
_33.1 = _30.0.1;
_34 = _10.2;
_30.1 = _6.0 as f32;
_28 = [_9,_9];
_37 = _29 as f64;
_16.2 = (_16.1.0,);
Goto(bb14)
}
bb14 = {
_26 = _14;
_14 = _26;
_32 = _33.1 & _30.0.1;
_33.1 = _30.0.1;
_12 = _16.1.1;
_26 = _14;
_9 = 2133022070514956596939078681608958_i128 | 68778134063443814755930970234350678761_i128;
_10 = (_25, (*_27), _34);
_33.0 = _1 as f32;
_33.2 = _14;
_33.1 = !_32;
_32 = _33.1 << _2;
_16.1.0 = (*_27);
_41 = (_30.1, _15, _14);
_40 = !_16.2.0;
_16.1.1 = _12 - _12;
_22 = _6.1 << _16.1.1;
_12 = !_16.1.1;
_15 = !_30.0.1;
_4 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_3 = _4;
_2 = _19 as u128;
_30.0 = (_33.0, _33.1, _26);
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(7_usize, 6_usize, Move(_6), 2_usize, Move(_2), 4_usize, Move(_4), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(7_usize, 32_usize, Move(_32), 7_usize, Move(_7), 12_usize, Move(_12), 34_usize, Move(_34)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(7_usize, 22_usize, Move(_22), 9_usize, Move(_9), 46_usize, _46, 46_usize, _46), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: u32,mut _2: isize,mut _3: [usize; 8]) -> i64 {
mir! {
type RET = i64;
let _4: i8;
let _5: [u16; 6];
let _6: u64;
let _7: (i64, i128, [i8; 3], *const *mut [i16; 3], i128);
let _8: f64;
let _9: char;
let _10: (usize, i16);
let _11: isize;
let _12: ();
let _13: ();
{
_1 = 2428967690_u32 | 2001010561_u32;
RET = (-6081495749272292393_i64) * 3174933648736761814_i64;
_2 = 15676766438857734575_u64 as isize;
_2 = -9223372036854775807_isize;
Call(_1 = core::intrinsics::bswap(351975790_u32), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = [4_usize,13205545014051311856_usize,4_usize,10325620824745910015_usize,6949145070930650856_usize,1_usize,4375774035028759874_usize,5_usize];
_2 = 9223372036854775807_isize * (-9223372036854775808_isize);
RET = -(-8886347626333335472_i64);
_2 = 9223372036854775807_isize;
_2 = (-9223372036854775808_isize) ^ 58_isize;
_3 = [4_usize,4_usize,4_usize,2_usize,5942596755506227924_usize,3456777152238973099_usize,8874479964641632750_usize,7_usize];
_4 = (-11_i8);
_1 = !3933166157_u32;
_5 = [25036_u16,38085_u16,41227_u16,13431_u16,54891_u16,9325_u16];
RET = '\u{10cb7f}' as i64;
_5 = [48059_u16,13595_u16,32268_u16,54125_u16,34260_u16,26586_u16];
_2 = 51435_u16 as isize;
_7.0 = RET ^ RET;
_3 = [4_usize,12346004907370601479_usize,1_usize,2_usize,4472006152531068096_usize,6596479266016763406_usize,0_usize,6_usize];
_7.1 = 166058314699509843958290665744763600513_i128 ^ (-110280843050797167725631534998575273924_i128);
_7.4 = _7.1;
Goto(bb2)
}
bb2 = {
_6 = !865540672096118365_u64;
_7.2 = [_4,_4,_4];
match _4 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463463374607431768211445 => bb11,
_ => bb10
}
}
bb3 = {
_3 = [4_usize,13205545014051311856_usize,4_usize,10325620824745910015_usize,6949145070930650856_usize,1_usize,4375774035028759874_usize,5_usize];
_2 = 9223372036854775807_isize * (-9223372036854775808_isize);
RET = -(-8886347626333335472_i64);
_2 = 9223372036854775807_isize;
_2 = (-9223372036854775808_isize) ^ 58_isize;
_3 = [4_usize,4_usize,4_usize,2_usize,5942596755506227924_usize,3456777152238973099_usize,8874479964641632750_usize,7_usize];
_4 = (-11_i8);
_1 = !3933166157_u32;
_5 = [25036_u16,38085_u16,41227_u16,13431_u16,54891_u16,9325_u16];
RET = '\u{10cb7f}' as i64;
_5 = [48059_u16,13595_u16,32268_u16,54125_u16,34260_u16,26586_u16];
_2 = 51435_u16 as isize;
_7.0 = RET ^ RET;
_3 = [4_usize,12346004907370601479_usize,1_usize,2_usize,4472006152531068096_usize,6596479266016763406_usize,0_usize,6_usize];
_7.1 = 166058314699509843958290665744763600513_i128 ^ (-110280843050797167725631534998575273924_i128);
_7.4 = _7.1;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_7.0 = 25566_i16 as i64;
_7.2 = [_4,_4,_4];
_2 = _1 as isize;
_7.1 = _7.4 * _7.4;
RET = _7.0 - _7.0;
RET = !_7.0;
RET = !_7.0;
Goto(bb12)
}
bb12 = {
_3 = [3_usize,398791512069020907_usize,10117040448678493286_usize,8607441641414784792_usize,5_usize,8437907604361828819_usize,4_usize,5_usize];
_7.2 = [_4,_4,_4];
_1 = 2199921022_u32 ^ 2252225358_u32;
_3 = [1_usize,4_usize,4_usize,14083923608715020149_usize,2_usize,18135669414552679225_usize,5_usize,4354679916947602357_usize];
RET = _7.0;
_3 = [3_usize,13186497292873609810_usize,5253731571999499967_usize,2195840292125983122_usize,15738075474435725734_usize,0_usize,2_usize,1_usize];
_7.2 = [_4,_4,_4];
_5 = [43335_u16,42784_u16,16966_u16,31310_u16,61642_u16,58729_u16];
_7.0 = RET * RET;
RET = _7.0 << _7.4;
_6 = 1747828724826441523_u64;
_8 = _7.1 as f64;
_4 = (-78_i8);
_7.0 = 1131676420_i32 as i64;
RET = true as i64;
match _4 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb10,
340282366920938463463374607431768211378 => bb13,
_ => bb7
}
}
bb13 = {
_4 = 58_i8 - 105_i8;
RET = -_7.0;
_8 = _7.1 as f64;
RET = 33041790_i32 as i64;
_7.4 = _2 as i128;
_4 = (-32_i8) ^ 97_i8;
match _6 {
0 => bb14,
1747828724826441523 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_2 = 122_isize >> _7.4;
_6 = 8813914811461185271_u64 | 14937437822527456607_u64;
_7.4 = _1 as i128;
_9 = '\u{e3ba1}';
RET = (-29937_i16) as i64;
_5 = [6372_u16,40001_u16,44612_u16,50565_u16,47911_u16,48966_u16];
_5 = [315_u16,47185_u16,7616_u16,3157_u16,39625_u16,24543_u16];
_5 = [541_u16,748_u16,42732_u16,51157_u16,16038_u16,125_u16];
_9 = '\u{105b21}';
_2 = (-9223372036854775808_isize);
_6 = 3505967086822646153_u64 + 9521408379872458619_u64;
_10 = (9978929708970159989_usize, 29720_i16);
_8 = RET as f64;
_7.4 = _7.1 & _7.1;
_2 = !(-9223372036854775808_isize);
_10.0 = 11407487546579209388_usize >> _7.4;
_10.0 = !3_usize;
_8 = _4 as f64;
RET = _10.1 as i64;
_11 = 247342623743883955476958573004769148604_u128 as isize;
_7.2 = [_4,_4,_4];
_7.0 = RET * RET;
_10.1 = (-10557_i16);
_9 = '\u{5a26d}';
_10.1 = 32440_i16;
Goto(bb17)
}
bb17 = {
Call(_12 = dump_var(8_usize, 3_usize, Move(_3), 5_usize, Move(_5), 11_usize, Move(_11), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [usize; 8],mut _2: [usize; 8],mut _3: [usize; 8],mut _4: u32,mut _5: u8,mut _6: [usize; 5]) -> isize {
mir! {
type RET = isize;
let _7: isize;
let _8: (f32, u32, char);
let _9: (i64,);
let _10: [i16; 3];
let _11: u128;
let _12: [usize; 8];
let _13: f64;
let _14: f32;
let _15: u32;
let _16: f32;
let _17: Adt58;
let _18: isize;
let _19: u16;
let _20: u64;
let _21: [i8; 3];
let _22: *const char;
let _23: isize;
let _24: u128;
let _25: f64;
let _26: *mut i64;
let _27: [i8; 3];
let _28: *const *const *mut [i16; 3];
let _29: (i64, u16, *mut [i16; 3]);
let _30: isize;
let _31: char;
let _32: u32;
let _33: *mut char;
let _34: f64;
let _35: Adt50;
let _36: [i16; 3];
let _37: isize;
let _38: ();
let _39: ();
{
_2 = [7_usize,6788759869710571223_usize,12431283824022567802_usize,1_usize,4_usize,2_usize,7_usize,7_usize];
_4 = (-150128934834415343117107641079962587797_i128) as u32;
_5 = 39437_u16 as u8;
_7 = 114_isize & (-9223372036854775808_isize);
RET = 15256469957530002581_u64 as isize;
_5 = !67_u8;
_7 = -RET;
RET = !_7;
_2 = [2_usize,8766510865124007766_usize,7_usize,13265271887639761196_usize,2122012871972450821_usize,1_usize,1687926350217264443_usize,4_usize];
_1 = [4_usize,15716390171038047562_usize,4480364351696574708_usize,11672029979797689696_usize,9563773497824812724_usize,0_usize,16758357625570489849_usize,4733158958890570106_usize];
_5 = 51641_u16 as u8;
_9.0 = (-7457456229967043775_i64) >> _7;
_2 = [6_usize,2_usize,7331105261627118915_usize,4_usize,14820914479906422503_usize,6_usize,0_usize,2246357311948498023_usize];
_9 = (5668002885822023036_i64,);
_10 = [17124_i16,(-4435_i16),(-15071_i16)];
_8.2 = '\u{55b3b}';
RET = 1413562067_i32 as isize;
RET = _7 >> _4;
_5 = !224_u8;
RET = -_7;
_9.0 = 1205321224671904953_i64;
_8.1 = _4;
_1 = _3;
_3 = _1;
_8.0 = (-62_i8) as f32;
RET = 89790136886005498250088273628704376477_i128 as isize;
_9 = (7567459271395889151_i64,);
_8.0 = 27562_i16 as f32;
Goto(bb1)
}
bb1 = {
RET = _7;
_10 = [(-25478_i16),(-9729_i16),(-21174_i16)];
_9.0 = (-8142976340711042493_i64);
_4 = _8.1 << _8.1;
_9.0 = -1385980696961565390_i64;
_8.1 = _4;
_10 = [(-10034_i16),(-7531_i16),8633_i16];
RET = (-2972_i16) as isize;
_8.2 = '\u{fcb9b}';
_1 = _2;
_9.0 = (-6063021147740873707_i64);
RET = _7 + _7;
RET = _7 ^ _7;
RET = _7 >> _8.1;
_11 = 37049095192265790067189137036997708666_u128 & 12295302982034524633895498386922830787_u128;
_6 = [0_usize,0_usize,15561655363580397575_usize,0_usize,7_usize];
_9 = (9079807490039844574_i64,);
_11 = 297470945792545225374880821687674596532_u128;
_15 = _4 | _4;
_3 = _1;
_4 = _15 * _15;
_5 = !88_u8;
_4 = !_15;
match _11 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
297470945792545225374880821687674596532 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = [12045245773649740684_usize,7208833160527543064_usize,2_usize,5513601485753976438_usize,16202707524942180928_usize,1_usize,9956315332544853957_usize,0_usize];
_11 = false as u128;
_1 = _2;
_8.0 = 1380635364428874831_usize as f32;
_12 = [2_usize,10738906870289149931_usize,6_usize,1_usize,2987570148938473342_usize,4_usize,14110407567799078865_usize,8723036411353291308_usize];
_12 = _3;
_13 = 119257505780703615251443120963278713370_i128 as f64;
_4 = !_15;
_16 = _8.0 + _8.0;
_19 = 61622_u16 & 61202_u16;
_15 = _4 + _4;
_14 = -_16;
_2 = [3_usize,6_usize,6_usize,9970930931368072142_usize,6_usize,133851045543822887_usize,7643695566182299307_usize,4_usize];
_21 = [110_i8,112_i8,(-32_i8)];
_15 = _8.1;
_5 = 70_u8;
_9.0 = -(-8714966170948034040_i64);
Call(_18 = fn10(_2, _19, RET, _3, _2, _2, _16, RET, _8.1, _21, _2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_8.1 = _4;
_9 = (4381924018352776639_i64,);
_9 = ((-7119589153473030475_i64),);
_3 = [16635537256866634498_usize,1_usize,14915921570174340944_usize,3_usize,5_usize,5_usize,12428426893994815925_usize,3180368149046654977_usize];
_10 = [(-22204_i16),(-16807_i16),(-13312_i16)];
_14 = _8.0;
_24 = !_11;
_20 = 16072511201516289316_u64 ^ 9058500219883813556_u64;
_24 = !_11;
_22 = core::ptr::addr_of!(_8.2);
_6 = [7_usize,0_usize,4_usize,6410041968996693099_usize,1407580228944592869_usize];
_8.2 = '\u{5096f}';
_4 = !_8.1;
_14 = -_16;
_15 = _4 | _4;
_16 = _14;
match _9.0 {
0 => bb5,
340282366920938463456255018278295180981 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
(*_22) = '\u{10183a}';
_12 = [5_usize,2174202912875753919_usize,6_usize,113959114856289769_usize,4_usize,1_usize,1_usize,5280025142380109386_usize];
_13 = (-25759674220762936319428456869309914204_i128) as f64;
_14 = -_8.0;
_23 = false as isize;
(*_22) = '\u{cbbb9}';
_25 = -_13;
_11 = RET as u128;
_8 = (_16, _15, '\u{bf668}');
_2 = _3;
_3 = [1_usize,7422807080986466893_usize,12918862016751325204_usize,8617642523641062533_usize,9477023589720752962_usize,997253829465050156_usize,7_usize,0_usize];
_14 = _8.0 - _16;
_8.1 = _15;
_8 = (_14, _15, '\u{f0782}');
_24 = !_11;
(*_22) = '\u{7bcd1}';
_30 = _23;
_13 = 98976017803610401096206465382878357171_i128 as f64;
(*_22) = '\u{234f1}';
_4 = _8.1;
match _9.0 {
340282366920938463456255018278295180981 => bb13,
_ => bb7
}
}
bb13 = {
_4 = _8.1 - _15;
_10 = [(-26820_i16),22720_i16,(-13332_i16)];
_9.0 = (-3123372729562646862_i64) - 4350786838197776199_i64;
(*_22) = '\u{1decf}';
_8.1 = false as u32;
_23 = -_18;
_24 = _11 ^ _11;
_3 = _2;
_8 = (_14, _4, '\u{ea818}');
_15 = !_8.1;
_10 = [19793_i16,26911_i16,(-14202_i16)];
_10 = [5672_i16,(-489_i16),(-21908_i16)];
_18 = _8.1 as isize;
_18 = _30;
_27 = [(-93_i8),95_i8,(-98_i8)];
_29.0 = _9.0 << _15;
_14 = -_8.0;
_12 = [4_usize,5394590765888868564_usize,1_usize,5_usize,3_usize,5_usize,3_usize,8690550083011014078_usize];
_32 = !_4;
_22 = core::ptr::addr_of!((*_22));
match _5 {
70 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_34 = _19 as f64;
RET = _23;
_33 = core::ptr::addr_of_mut!((*_22));
_31 = (*_33);
_29.2 = core::ptr::addr_of_mut!(_36);
_33 = core::ptr::addr_of_mut!(_8.2);
RET = _23 >> _8.1;
_26 = core::ptr::addr_of_mut!(_29.0);
_34 = _20 as f64;
(*_22) = _31;
Goto(bb16)
}
bb16 = {
Call(_38 = dump_var(9_usize, 20_usize, Move(_20), 23_usize, Move(_23), 27_usize, Move(_27), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(9_usize, 19_usize, Move(_19), 24_usize, Move(_24), 9_usize, Move(_9), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(9_usize, 5_usize, Move(_5), 10_usize, Move(_10), 6_usize, Move(_6), 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [usize; 8],mut _2: u16,mut _3: isize,mut _4: [usize; 8],mut _5: [usize; 8],mut _6: [usize; 8],mut _7: f32,mut _8: isize,mut _9: u32,mut _10: [i8; 3],mut _11: [usize; 8]) -> isize {
mir! {
type RET = isize;
let _12: u8;
let _13: f64;
let _14: isize;
let _15: bool;
let _16: f32;
let _17: ();
let _18: ();
{
_10 = [(-34_i8),(-57_i8),97_i8];
_4 = _5;
RET = _3 - _3;
_2 = 2144793438_i32 as u16;
RET = !_3;
Goto(bb1)
}
bb1 = {
_5 = [14803437964604768401_usize,1_usize,3_usize,16389512391226705515_usize,5_usize,9767078130004579065_usize,9714717877811825730_usize,2_usize];
_7 = (-6824_i16) as f32;
_4 = [7348427584899667498_usize,11303291472027357124_usize,7907072613375618082_usize,2529110783597220111_usize,3293185438324370006_usize,3_usize,3_usize,3_usize];
_5 = [9904391344199156428_usize,12658563534053991226_usize,7157509005039400754_usize,12067805446729793139_usize,17909199020708715078_usize,4603920765977498209_usize,6_usize,2_usize];
_1 = [4579446349989441053_usize,18018016874521108572_usize,2_usize,7_usize,0_usize,9523595888105419355_usize,3_usize,1_usize];
_12 = 96_u8 | 133_u8;
_8 = RET;
_2 = _9 as u16;
_3 = _8 ^ RET;
_8 = 6703211839752168581_usize as isize;
_1 = [9642111753171254610_usize,3_usize,4833826355959937166_usize,0_usize,6658937877426867767_usize,0_usize,6_usize,10161829043984631795_usize];
_4 = _5;
_11 = [4_usize,11310212751906840920_usize,3205659123288909140_usize,5_usize,4481950380189201879_usize,9640949235683286989_usize,6_usize,5_usize];
_3 = RET + RET;
_6 = _11;
_9 = (-32923204332420986_i64) as u32;
_13 = 102048802987294129265030256180805123315_u128 as f64;
_8 = _3;
Goto(bb2)
}
bb2 = {
_13 = (-1305901690_i32) as f64;
_6 = [6_usize,5_usize,5896030705298162810_usize,8554250936526339577_usize,2_usize,3_usize,18292377245613571084_usize,6_usize];
_1 = [2_usize,15502178148503077440_usize,7_usize,13765505765060441217_usize,1_usize,6_usize,7235662593329576080_usize,3308905486773603631_usize];
_14 = _8 - _8;
_11 = [3817835107258875115_usize,1_usize,4_usize,2_usize,3_usize,2_usize,8081908907634447223_usize,5_usize];
RET = (-29231_i16) as isize;
_12 = 231_u8 >> _14;
RET = _14 ^ _3;
_7 = (-16514_i16) as f32;
_14 = RET - RET;
_14 = 5083787682418485329_i64 as isize;
_5 = _4;
Goto(bb3)
}
bb3 = {
Call(_17 = dump_var(10_usize, 10_usize, Move(_10), 4_usize, Move(_4), 5_usize, Move(_5), 8_usize, Move(_8)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_17 = dump_var(10_usize, 12_usize, Move(_12), 14_usize, Move(_14), 18_usize, _18, 18_usize, _18), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: (i64,),mut _2: bool,mut _3: (i64,),mut _4: u16,mut _5: [i32; 6],mut _6: (i64,),mut _7: i64,mut _8: i64,mut _9: u16,mut _10: isize,mut _11: u8,mut _12: [i32; 6],mut _13: isize,mut _14: u16,mut _15: i64) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _16: bool;
let _17: f32;
let _18: [u16; 6];
let _19: char;
let _20: f64;
let _21: usize;
let _22: [i32; 6];
let _23: isize;
let _24: char;
let _25: [usize; 8];
let _26: [i16; 3];
let _27: (i64,);
let _28: (i64,);
let _29: (usize, i16);
let _30: bool;
let _31: f32;
let _32: f32;
let _33: isize;
let _34: f64;
let _35: char;
let _36: char;
let _37: i32;
let _38: u8;
let _39: [usize; 8];
let _40: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64);
let _41: ();
let _42: ();
{
_5 = _12;
_12 = [(-1422968760_i32),1897594304_i32,(-239788531_i32),(-811060057_i32),(-487260554_i32),878288808_i32];
_1.0 = _15;
_6.0 = -_3.0;
_16 = _2 & _2;
_7 = 5495528538053638940_usize as i64;
RET = [3_usize,11683951562290278638_usize,5_usize,4691976501804583758_usize,15876060749002707597_usize,7_usize,2581216497062339609_usize,2_usize];
_13 = _10;
_3 = (_15,);
_16 = _1.0 >= _3.0;
_10 = _13 + _13;
_5 = _12;
_6 = (_3.0,);
_18 = [_9,_4,_14,_4,_14,_4];
_4 = _14;
_6 = (_1.0,);
_2 = _16;
Call(_6 = fn12(_14, _14), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = !_16;
_16 = _2;
_15 = _8 ^ _6.0;
_20 = 14736158045882079705_usize as f64;
_3.0 = 30573_i16 as i64;
_4 = _9 - _14;
_18 = [_4,_4,_14,_4,_4,_9];
_18 = [_4,_14,_14,_14,_4,_4];
_19 = '\u{2d8fc}';
_3.0 = _8;
_17 = _20 as f32;
_1.0 = _6.0 + _6.0;
_9 = _4;
_4 = _14 * _9;
_11 = _17 as u8;
_8 = _6.0;
_8 = _7;
Goto(bb2)
}
bb2 = {
_2 = !_16;
_4 = _9 | _14;
_10 = !_13;
_10 = _13;
_11 = 206_u8 + 127_u8;
RET = [5_usize,14303929704881239329_usize,12530610365414007132_usize,2_usize,2_usize,5_usize,13642873964344047597_usize,5_usize];
_1.0 = _3.0 & _15;
_17 = 102_i8 as f32;
_21 = 5_usize << _15;
_9 = !_4;
_4 = 332153460876611313281733279609797629212_u128 as u16;
_21 = 5823824961993829119_usize;
_11 = 45_u8 ^ 108_u8;
_1.0 = _15;
_21 = (-115_i8) as usize;
_23 = _13;
_20 = 409268029_u32 as f64;
_24 = _19;
_21 = !1_usize;
_2 = !_16;
_21 = 3540070914_u32 as usize;
_1 = _3;
_2 = _16;
_2 = _9 > _9;
_25 = RET;
Goto(bb3)
}
bb3 = {
_25 = [_21,_21,_21,_21,_21,_21,_21,_21];
_3 = (_7,);
_18 = [_4,_9,_9,_14,_9,_9];
_21 = 0_usize;
_18[_21] = _20 as u16;
_22[_21] = !_12[_21];
_18[_21] = RET[_21] as u16;
_12[_21] = !_5[_21];
_29.1 = _16 as i16;
_29.0 = !RET[_21];
_19 = _24;
_22[_21] = !_5[_21];
_18[_21] = _9;
_12 = [_22[_21],_5[_21],_5[_21],_5[_21],_22[_21],_22[_21]];
_16 = _2 ^ _2;
_12 = [_5[_21],_5[_21],_22[_21],_22[_21],_22[_21],_22[_21]];
_28 = (_6.0,);
_1.0 = !_15;
RET = [_29.0,_29.0,_29.0,_29.0,_29.0,_29.0,_29.0,_29.0];
_27.0 = -_15;
_11 = _20 as u8;
_5[_21] = _22[_21];
match _12[_21] {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
340282366920938463463374607430345242696 => bb10,
_ => bb9
}
}
bb4 = {
_2 = !_16;
_4 = _9 | _14;
_10 = !_13;
_10 = _13;
_11 = 206_u8 + 127_u8;
RET = [5_usize,14303929704881239329_usize,12530610365414007132_usize,2_usize,2_usize,5_usize,13642873964344047597_usize,5_usize];
_1.0 = _3.0 & _15;
_17 = 102_i8 as f32;
_21 = 5_usize << _15;
_9 = !_4;
_4 = 332153460876611313281733279609797629212_u128 as u16;
_21 = 5823824961993829119_usize;
_11 = 45_u8 ^ 108_u8;
_1.0 = _15;
_21 = (-115_i8) as usize;
_23 = _13;
_20 = 409268029_u32 as f64;
_24 = _19;
_21 = !1_usize;
_2 = !_16;
_21 = 3540070914_u32 as usize;
_1 = _3;
_2 = _16;
_2 = _9 > _9;
_25 = RET;
Goto(bb3)
}
bb5 = {
_2 = !_16;
_16 = _2;
_15 = _8 ^ _6.0;
_20 = 14736158045882079705_usize as f64;
_3.0 = 30573_i16 as i64;
_4 = _9 - _14;
_18 = [_4,_4,_14,_4,_4,_9];
_18 = [_4,_14,_14,_14,_4,_4];
_19 = '\u{2d8fc}';
_3.0 = _8;
_17 = _20 as f32;
_1.0 = _6.0 + _6.0;
_9 = _4;
_4 = _14 * _9;
_11 = _17 as u8;
_8 = _6.0;
_8 = _7;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_18 = [_14,_9,_9,_9,_14,_9];
_5[_21] = (-156285631268502424659103532646129672247_i128) as i32;
_18 = [_9,_9,_9,_9,_9,_9];
_18[_21] = !_9;
_31 = _17 + _17;
_26[_21] = -_29.1;
_3 = (_28.0,);
_22[_21] = _12[_21];
_35 = _19;
_22 = _12;
_35 = _19;
_25 = [_29.0,_21,_29.0,RET[_21],_21,_21,RET[_21],_29.0];
_28 = (_8,);
_29.0 = _25[_21] << _22[_21];
_14 = _18[_21];
_17 = _31;
match _22[_21] {
0 => bb11,
340282366920938463463374607430345242696 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_2 = !_16;
_16 = _2;
_15 = _8 ^ _6.0;
_20 = 14736158045882079705_usize as f64;
_3.0 = 30573_i16 as i64;
_4 = _9 - _14;
_18 = [_4,_4,_14,_4,_4,_9];
_18 = [_4,_14,_14,_14,_4,_4];
_19 = '\u{2d8fc}';
_3.0 = _8;
_17 = _20 as f32;
_1.0 = _6.0 + _6.0;
_9 = _4;
_4 = _14 * _9;
_11 = _17 as u8;
_8 = _6.0;
_8 = _7;
Goto(bb2)
}
bb13 = {
_6.0 = RET[_21] as i64;
_3 = (_6.0,);
_3 = (_15,);
_12 = _5;
_25 = [RET[_21],_29.0,_29.0,_29.0,_29.0,RET[_21],_29.0,_29.0];
_25[_21] = !_29.0;
_40.1 = [_25[_21],RET[_21],_29.0,_29.0,_29.0,_29.0,RET[_21],_25[_21]];
_1 = (_28.0,);
_34 = _20 - _20;
_39[_21] = _34 as usize;
Goto(bb14)
}
bb14 = {
_26 = [_29.1,_29.1,_29.1];
_1 = (_27.0,);
_40.1 = [RET[_21],_29.0,RET[_21],RET[_21],_21,_25[_21],_29.0,_29.0];
_40.5 = _1.0 ^ _6.0;
_36 = _19;
RET = [_25[_21],_29.0,_29.0,_29.0,_25[_21],_40.1[_21],_25[_21],_40.1[_21]];
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(11_usize, 10_usize, Move(_10), 29_usize, Move(_29), 15_usize, Move(_15), 36_usize, Move(_36)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(11_usize, 1_usize, Move(_1), 6_usize, Move(_6), 27_usize, Move(_27), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(11_usize, 13_usize, Move(_13), 7_usize, Move(_7), 3_usize, Move(_3), 28_usize, Move(_28)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(11_usize, 26_usize, Move(_26), 9_usize, Move(_9), 42_usize, _42, 42_usize, _42), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: u16,mut _2: u16) -> (i64,) {
mir! {
type RET = (i64,);
let _3: i8;
let _4: [i8; 3];
let _5: isize;
let _6: *const *mut [i16; 3];
let _7: Adt54;
let _8: *mut [i16; 3];
let _9: u128;
let _10: [usize; 7];
let _11: *mut char;
let _12: [i16; 5];
let _13: ((f64, i64, bool),);
let _14: [i128; 2];
let _15: [i32; 6];
let _16: ([u64; 6],);
let _17: ((f32, u32, char), f32);
let _18: Adt63;
let _19: i16;
let _20: isize;
let _21: isize;
let _22: bool;
let _23: isize;
let _24: [u16; 4];
let _25: bool;
let _26: *const char;
let _27: char;
let _28: [u64; 6];
let _29: f32;
let _30: f32;
let _31: Adt53;
let _32: i8;
let _33: Adt51;
let _34: Adt64;
let _35: ();
let _36: ();
{
RET.0 = !8323235969176349754_i64;
RET = (170500056310201586_i64,);
RET = ((-3960660862062814690_i64),);
RET.0 = -6492103423557173819_i64;
_3 = !(-68_i8);
RET.0 = !(-7079264049072473701_i64);
RET.0 = !(-5468058377479943854_i64);
RET = (8835172916697966222_i64,);
RET = ((-601324546939338622_i64),);
_3 = 62797033340521673479270278169224851307_u128 as i8;
RET = (3626356861238021257_i64,);
RET.0 = 834631434476014028_i64 >> _2;
RET = ((-9212772835628752741_i64),);
RET.0 = (-9072261628574488609_i64) - (-8431642785613150966_i64);
RET = (8052036734502338333_i64,);
_4 = [_3,_3,_3];
RET = (5680250721356054464_i64,);
RET = (5588825406748999697_i64,);
Goto(bb1)
}
bb1 = {
_3 = !103_i8;
_1 = !_2;
_5 = _3 as isize;
_3 = !15_i8;
RET.0 = _5 as i64;
_5 = (-4_isize);
RET.0 = 3493085162822394433_i64;
RET.0 = -6663599696483475381_i64;
_1 = _2;
RET.0 = !(-949971208244773982_i64);
_2 = !_1;
RET = (632283765723328338_i64,);
RET = ((-4540202519557483999_i64),);
RET = (5450919539165116700_i64,);
_2 = !_1;
_2 = !_1;
_3 = 69_i8;
_5 = 9223372036854775807_isize >> _2;
_5 = !(-9223372036854775808_isize);
Goto(bb2)
}
bb2 = {
_3 = -73_i8;
RET.0 = -4117829408252033792_i64;
_2 = _1 & _1;
RET = ((-280125871259274365_i64),);
_3 = 90_i8 >> _2;
_2 = !_1;
_5 = 248701159116943755395669367302172838218_u128 as isize;
_2 = !_1;
_10 = [1_usize,12328398761719671696_usize,4347933481964753392_usize,13217502996330003876_usize,3_usize,4_usize,4_usize];
RET.0 = 773205886300350406_i64;
_9 = !305554854474753854251791654656942368014_u128;
_2 = 14491305191510398008_u64 as u16;
_4 = [_3,_3,_3];
RET = ((-3281740483930252335_i64),);
_3 = !(-117_i8);
_4 = [_3,_3,_3];
_6 = core::ptr::addr_of!(_8);
_3 = 144263564563497659536938864187297652777_i128 as i8;
RET.0 = 4632401688640196730_i64;
RET.0 = (-1779440664033220713_i64);
_4 = [_3,_3,_3];
RET = (5787844966765399747_i64,);
Goto(bb3)
}
bb3 = {
_3 = (-13001_i16) as i8;
_4 = [_3,_3,_3];
_6 = core::ptr::addr_of!((*_6));
RET.0 = (-6888262222462510691_i64);
_2 = _1 * _1;
_13.0.0 = RET.0 as f64;
_13.0.2 = false ^ false;
RET = (3191815683007233983_i64,);
RET = ((-4086294652116175331_i64),);
_13.0.1 = !RET.0;
_12 = [10980_i16,2409_i16,2320_i16,(-25046_i16),(-23577_i16)];
RET.0 = _13.0.1 + _13.0.1;
_13.0.2 = !true;
_2 = !_1;
RET.0 = _13.0.1;
_3 = 3_i8 << _2;
RET = (_13.0.1,);
_10 = [1906627787580877658_usize,11839512754194506705_usize,3_usize,7_usize,15127242657741424364_usize,9015634658311869614_usize,6_usize];
RET = (_13.0.1,);
_15 = [1484932952_i32,1339545018_i32,(-1584128569_i32),(-286197844_i32),(-1537496580_i32),988294949_i32];
_14 = [145062257855317891139988486725127084939_i128,(-169708111195729306710439084068597274485_i128)];
RET = (_13.0.1,);
_10 = [12656067373752130385_usize,11013659268817116653_usize,5_usize,5_usize,2396076781609607697_usize,8377106996046574210_usize,3_usize];
RET.0 = _13.0.1 + _13.0.1;
_12 = [(-2696_i16),(-19013_i16),(-17148_i16),(-26396_i16),26808_i16];
_17.0.2 = '\u{765a9}';
Call(_1 = core::intrinsics::transmute(_2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_17.1 = 77_u8 as f32;
Goto(bb5)
}
bb5 = {
_17.0 = (_17.1, 1799316155_u32, '\u{4eb48}');
_17.0.2 = '\u{9f542}';
_2 = !_1;
_6 = core::ptr::addr_of!((*_6));
_16.0 = [3758473013903631561_u64,127538010391517408_u64,8086698787629619680_u64,13710580943171732150_u64,476137381192518837_u64,3720341593000594742_u64];
_9 = !23554505917139307902659846496460983500_u128;
_2 = _1;
_5 = !9223372036854775807_isize;
_4 = [_3,_3,_3];
_17.1 = _17.0.0 + _17.0.0;
RET = (_13.0.1,);
_17.1 = -_17.0.0;
_9 = 320212315872598521695658021960912359387_u128;
RET = (_13.0.1,);
_4 = [_3,_3,_3];
_17.0 = (_17.1, 1790351594_u32, '\u{52efb}');
Call((*_6) = fn13(_10, _2, _9, _4, _1, _4, _3, _10, _16.0, _16.0, _9), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17.0.1 = 1_usize as u32;
_13.0.0 = _17.0.0 as f64;
_9 = !220619785329273366500514863314032721431_u128;
_15 = [343123378_i32,(-1354223167_i32),(-1323321783_i32),(-394115443_i32),(-1283688427_i32),(-1860271099_i32)];
_11 = core::ptr::addr_of_mut!(_17.0.2);
_4 = [_3,_3,_3];
RET = (_13.0.1,);
_17.0.1 = (*_11) as u32;
RET = (_13.0.1,);
_17.0 = (_17.1, 1372125347_u32, '\u{653c5}');
_9 = 56687932574603577243336610213883536130_u128 + 247764911406439004996871082984029021678_u128;
_17.0.0 = -_17.1;
_4 = [_3,_3,_3];
_16.0 = [14094505315167053825_u64,5195144132644035342_u64,1118544076213569431_u64,3820479066303571556_u64,16015028430972133418_u64,17102751224101624040_u64];
_2 = 0_usize as u16;
_13.0.1 = !RET.0;
_6 = core::ptr::addr_of!(_8);
_1 = _17.1 as u16;
Goto(bb7)
}
bb7 = {
_11 = core::ptr::addr_of_mut!(_17.0.2);
_12 = [11561_i16,(-17122_i16),17767_i16,(-21311_i16),(-9279_i16)];
_21 = !_5;
_11 = core::ptr::addr_of_mut!((*_11));
_2 = !_1;
_17.0 = (_17.1, 3625448197_u32, '\u{13772}');
_16.0 = [4165585218114037679_u64,1689552303920083927_u64,7762979874336150380_u64,2740119050270626866_u64,16625179142379086963_u64,1614979171312721269_u64];
_17.0.0 = 1_usize as f32;
(*_11) = '\u{3bfc4}';
_17.0 = (_17.1, 1371010299_u32, '\u{651c1}');
RET = (_13.0.1,);
_17.0.1 = !3645384367_u32;
Goto(bb8)
}
bb8 = {
_20 = _21 + _21;
_13.0.0 = _17.1 as f64;
_17.0 = (_17.1, 3801420268_u32, '\u{e155a}');
_15 = [(-1547695885_i32),1825812396_i32,(-1012522638_i32),(-688153805_i32),(-220763924_i32),(-267058569_i32)];
_2 = 5564121185466776356_u64 as u16;
_7 = Adt54::Variant2 { fld0: _14 };
_6 = core::ptr::addr_of!((*_6));
_17.0.2 = '\u{4509a}';
_27 = (*_11);
_17.0.1 = _13.0.2 as u32;
_11 = core::ptr::addr_of_mut!((*_11));
_28 = [15525904567387743551_u64,6332002843552967024_u64,18070813493190300143_u64,12458475213992795883_u64,4721711822674283219_u64,3668748105055138542_u64];
_23 = _13.0.0 as isize;
_17.1 = _17.0.0;
Goto(bb9)
}
bb9 = {
_23 = -_21;
_13.0.2 = !true;
_13.0.1 = RET.0 + RET.0;
_19 = (-26748_i16);
RET.0 = _13.0.1 * _13.0.1;
_27 = (*_11);
_22 = _13.0.2;
_24 = [_2,_1,_2,_2];
_4 = [_3,_3,_3];
match _19 {
0 => bb2,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
340282366920938463463374607431768184708 => bb17,
_ => bb16
}
}
bb10 = {
_20 = _21 + _21;
_13.0.0 = _17.1 as f64;
_17.0 = (_17.1, 3801420268_u32, '\u{e155a}');
_15 = [(-1547695885_i32),1825812396_i32,(-1012522638_i32),(-688153805_i32),(-220763924_i32),(-267058569_i32)];
_2 = 5564121185466776356_u64 as u16;
_7 = Adt54::Variant2 { fld0: _14 };
_6 = core::ptr::addr_of!((*_6));
_17.0.2 = '\u{4509a}';
_27 = (*_11);
_17.0.1 = _13.0.2 as u32;
_11 = core::ptr::addr_of_mut!((*_11));
_28 = [15525904567387743551_u64,6332002843552967024_u64,18070813493190300143_u64,12458475213992795883_u64,4721711822674283219_u64,3668748105055138542_u64];
_23 = _13.0.0 as isize;
_17.1 = _17.0.0;
Goto(bb9)
}
bb11 = {
_11 = core::ptr::addr_of_mut!(_17.0.2);
_12 = [11561_i16,(-17122_i16),17767_i16,(-21311_i16),(-9279_i16)];
_21 = !_5;
_11 = core::ptr::addr_of_mut!((*_11));
_2 = !_1;
_17.0 = (_17.1, 3625448197_u32, '\u{13772}');
_16.0 = [4165585218114037679_u64,1689552303920083927_u64,7762979874336150380_u64,2740119050270626866_u64,16625179142379086963_u64,1614979171312721269_u64];
_17.0.0 = 1_usize as f32;
(*_11) = '\u{3bfc4}';
_17.0 = (_17.1, 1371010299_u32, '\u{651c1}');
RET = (_13.0.1,);
_17.0.1 = !3645384367_u32;
Goto(bb8)
}
bb12 = {
_3 = !103_i8;
_1 = !_2;
_5 = _3 as isize;
_3 = !15_i8;
RET.0 = _5 as i64;
_5 = (-4_isize);
RET.0 = 3493085162822394433_i64;
RET.0 = -6663599696483475381_i64;
_1 = _2;
RET.0 = !(-949971208244773982_i64);
_2 = !_1;
RET = (632283765723328338_i64,);
RET = ((-4540202519557483999_i64),);
RET = (5450919539165116700_i64,);
_2 = !_1;
_2 = !_1;
_3 = 69_i8;
_5 = 9223372036854775807_isize >> _2;
_5 = !(-9223372036854775808_isize);
Goto(bb2)
}
bb13 = {
_17.0 = (_17.1, 1799316155_u32, '\u{4eb48}');
_17.0.2 = '\u{9f542}';
_2 = !_1;
_6 = core::ptr::addr_of!((*_6));
_16.0 = [3758473013903631561_u64,127538010391517408_u64,8086698787629619680_u64,13710580943171732150_u64,476137381192518837_u64,3720341593000594742_u64];
_9 = !23554505917139307902659846496460983500_u128;
_2 = _1;
_5 = !9223372036854775807_isize;
_4 = [_3,_3,_3];
_17.1 = _17.0.0 + _17.0.0;
RET = (_13.0.1,);
_17.1 = -_17.0.0;
_9 = 320212315872598521695658021960912359387_u128;
RET = (_13.0.1,);
_4 = [_3,_3,_3];
_17.0 = (_17.1, 1790351594_u32, '\u{52efb}');
Call((*_6) = fn13(_10, _2, _9, _4, _1, _4, _3, _10, _16.0, _16.0, _9), ReturnTo(bb6), UnwindUnreachable())
}
bb14 = {
_17.1 = 77_u8 as f32;
Goto(bb5)
}
bb15 = {
_3 = (-13001_i16) as i8;
_4 = [_3,_3,_3];
_6 = core::ptr::addr_of!((*_6));
RET.0 = (-6888262222462510691_i64);
_2 = _1 * _1;
_13.0.0 = RET.0 as f64;
_13.0.2 = false ^ false;
RET = (3191815683007233983_i64,);
RET = ((-4086294652116175331_i64),);
_13.0.1 = !RET.0;
_12 = [10980_i16,2409_i16,2320_i16,(-25046_i16),(-23577_i16)];
RET.0 = _13.0.1 + _13.0.1;
_13.0.2 = !true;
_2 = !_1;
RET.0 = _13.0.1;
_3 = 3_i8 << _2;
RET = (_13.0.1,);
_10 = [1906627787580877658_usize,11839512754194506705_usize,3_usize,7_usize,15127242657741424364_usize,9015634658311869614_usize,6_usize];
RET = (_13.0.1,);
_15 = [1484932952_i32,1339545018_i32,(-1584128569_i32),(-286197844_i32),(-1537496580_i32),988294949_i32];
_14 = [145062257855317891139988486725127084939_i128,(-169708111195729306710439084068597274485_i128)];
RET = (_13.0.1,);
_10 = [12656067373752130385_usize,11013659268817116653_usize,5_usize,5_usize,2396076781609607697_usize,8377106996046574210_usize,3_usize];
RET.0 = _13.0.1 + _13.0.1;
_12 = [(-2696_i16),(-19013_i16),(-17148_i16),(-26396_i16),26808_i16];
_17.0.2 = '\u{765a9}';
Call(_1 = core::intrinsics::transmute(_2), ReturnTo(bb4), UnwindUnreachable())
}
bb16 = {
_3 = -73_i8;
RET.0 = -4117829408252033792_i64;
_2 = _1 & _1;
RET = ((-280125871259274365_i64),);
_3 = 90_i8 >> _2;
_2 = !_1;
_5 = 248701159116943755395669367302172838218_u128 as isize;
_2 = !_1;
_10 = [1_usize,12328398761719671696_usize,4347933481964753392_usize,13217502996330003876_usize,3_usize,4_usize,4_usize];
RET.0 = 773205886300350406_i64;
_9 = !305554854474753854251791654656942368014_u128;
_2 = 14491305191510398008_u64 as u16;
_4 = [_3,_3,_3];
RET = ((-3281740483930252335_i64),);
_3 = !(-117_i8);
_4 = [_3,_3,_3];
_6 = core::ptr::addr_of!(_8);
_3 = 144263564563497659536938864187297652777_i128 as i8;
RET.0 = 4632401688640196730_i64;
RET.0 = (-1779440664033220713_i64);
_4 = [_3,_3,_3];
RET = (5787844966765399747_i64,);
Goto(bb3)
}
bb17 = {
_4 = [_3,_3,_3];
_13.0.2 = !_22;
_11 = core::ptr::addr_of_mut!((*_11));
_25 = _13.0.2 > _13.0.2;
_29 = _17.1;
RET.0 = _13.0.1 >> _2;
_18 = Adt63::Variant0 { fld0: (-67642220949889614504004561103277522712_i128),fld1: _24,fld2: _5 };
_6 = core::ptr::addr_of!(_8);
RET.0 = _13.0.1;
_13.0.1 = RET.0 & RET.0;
_22 = _3 == _3;
_22 = !_25;
_26 = core::ptr::addr_of!((*_11));
RET.0 = !_13.0.1;
_24 = [_1,_1,_2,_1];
Goto(bb18)
}
bb18 = {
Call(_35 = dump_var(12_usize, 20_usize, Move(_20), 1_usize, Move(_1), 25_usize, Move(_25), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_35 = dump_var(12_usize, 5_usize, Move(_5), 15_usize, Move(_15), 24_usize, Move(_24), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_35 = dump_var(12_usize, 22_usize, Move(_22), 21_usize, Move(_21), 36_usize, _36, 36_usize, _36), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [usize; 7],mut _2: u16,mut _3: u128,mut _4: [i8; 3],mut _5: u16,mut _6: [i8; 3],mut _7: i8,mut _8: [usize; 7],mut _9: [u64; 6],mut _10: [u64; 6],mut _11: u128) -> *mut [i16; 3] {
mir! {
type RET = *mut [i16; 3];
let _12: isize;
let _13: Adt57;
let _14: bool;
let _15: [u64; 6];
let _16: bool;
let _17: [i16; 3];
let _18: [u32; 4];
let _19: Adt57;
let _20: isize;
let _21: isize;
let _22: *mut [i16; 3];
let _23: i16;
let _24: f32;
let _25: *mut [i16; 3];
let _26: char;
let _27: i32;
let _28: Adt57;
let _29: char;
let _30: ((f64, i64, bool),);
let _31: (f32, u32, char);
let _32: f32;
let _33: f32;
let _34: [u16; 6];
let _35: f64;
let _36: [i32; 2];
let _37: i64;
let _38: [u64; 6];
let _39: Adt51;
let _40: [i32; 6];
let _41: usize;
let _42: u16;
let _43: ();
let _44: ();
{
_10 = [15568986608658425311_u64,7761775920540192380_u64,2178248646332639984_u64,12927336324631356808_u64,2447758658037319124_u64,7075317102369755471_u64];
_10 = [4057029081484792379_u64,4864548742560765887_u64,16318224427642877124_u64,13214243772351162691_u64,3256798685275167505_u64,13754986177184560516_u64];
_11 = _5 as u128;
_7 = -(-8_i8);
_1 = [5256189063726830409_usize,3228852090621165281_usize,2970593517015329717_usize,0_usize,0_usize,1_usize,15635475651612612016_usize];
_2 = _5;
_9 = _10;
Call(_11 = fn14(_5, _1, _4, _6, _6, _6, _9, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [_7,_7,_7];
_11 = _3;
_6 = _4;
_2 = _5 - _5;
_8 = _1;
Goto(bb2)
}
bb2 = {
_11 = _7 as u128;
_8 = _1;
_4 = [_7,_7,_7];
_8 = [18144368811706252593_usize,2_usize,4623745668282848737_usize,7_usize,12465028936527926231_usize,2_usize,2359823064959574024_usize];
_9 = _10;
_8 = _1;
_2 = true as u16;
_12 = 21_isize;
_8 = _1;
Goto(bb3)
}
bb3 = {
_6 = [_7,_7,_7];
_6 = _4;
_10 = [15174002540171810221_u64,1265706393986936845_u64,15512488685910284051_u64,6927179054856555050_u64,10747816181693269573_u64,9862406199906161428_u64];
_10 = [1887399987317546976_u64,333021359839564099_u64,11067587919688117095_u64,17799035695937030015_u64,6471922869917430926_u64,1394307881919373484_u64];
_8 = [1_usize,0_usize,3049531910384315618_usize,3_usize,7870603632355707373_usize,29569810249291175_usize,4_usize];
_14 = true;
_3 = _11 * _11;
_9 = _10;
Goto(bb4)
}
bb4 = {
_8 = _1;
_9 = _10;
_10 = [17278934753812530493_u64,8808869626669949655_u64,15878249841903277050_u64,9639087333080238033_u64,8652548868308817091_u64,15194541673678206902_u64];
_3 = _11 ^ _11;
_9 = [6439320357201615525_u64,17101467726251306143_u64,2217141900440387142_u64,4094305704476023196_u64,8157055685580050904_u64,4558603687272537728_u64];
_5 = _2;
_14 = true;
_3 = !_11;
_4 = [_7,_7,_7];
_14 = true;
_7 = (-52_i8);
_4 = [_7,_7,_7];
_10 = [13773324271834465147_u64,8990717439759957939_u64,13723651813385160638_u64,14036637438384230604_u64,2896148231614530289_u64,4161036448223014189_u64];
Call(_3 = fn15(_14, _12, _4, _9, _14, _1, _8, _8, _11, _1, _10, _8, _8, _7), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_15 = _9;
_3 = !_11;
_8 = [6_usize,6_usize,9552194207191042056_usize,2_usize,0_usize,5_usize,2_usize];
_12 = '\u{4001}' as isize;
_7 = (-6_i8);
_16 = _14;
_9 = [3140811410019828620_u64,17241690784908842325_u64,6453770799960306442_u64,5096180544965702497_u64,4347390660615255769_u64,17277624467465090442_u64];
_12 = !9223372036854775807_isize;
_6 = [_7,_7,_7];
_6 = _4;
_7 = 71_i8 - (-121_i8);
_17 = [(-7419_i16),(-17553_i16),22243_i16];
_6 = _4;
_15 = _9;
_3 = _11;
RET = core::ptr::addr_of_mut!(_17);
_12 = -9223372036854775807_isize;
_14 = !_16;
(*RET) = [(-4142_i16),(-13538_i16),(-24442_i16)];
_12 = 816787630_i32 as isize;
_14 = _16;
_16 = _14;
_7 = -54_i8;
_15 = [388133799670000903_u64,6787949024877654574_u64,1268981251732804795_u64,16078861402598483393_u64,14233846566142234936_u64,15327404095726170707_u64];
(*RET) = [15980_i16,8728_i16,(-10908_i16)];
_1 = _8;
_14 = _16;
Goto(bb6)
}
bb6 = {
_16 = _14;
_4 = [_7,_7,_7];
_14 = !_16;
_1 = [0_usize,5_usize,3_usize,2_usize,0_usize,16712218757232871683_usize,0_usize];
_17 = [(-29331_i16),(-10037_i16),10524_i16];
_18 = [2072238320_u32,4106466473_u32,3333967125_u32,520575802_u32];
_14 = !_16;
_16 = !_14;
_9 = [9725255682571994349_u64,4308116745275733884_u64,9654940795714965235_u64,2918411451031956900_u64,17425843473465922802_u64,9130243858956607344_u64];
_20 = !_12;
_6 = _4;
_4 = [_7,_7,_7];
_16 = _14 ^ _14;
_12 = -_20;
(*RET) = [30638_i16,21728_i16,(-32469_i16)];
_2 = !_5;
_16 = _11 >= _11;
_4 = [_7,_7,_7];
_8 = [6_usize,7772484138506016289_usize,4_usize,11894934410241384098_usize,4_usize,4389975647908827858_usize,4_usize];
_1 = [2_usize,1_usize,6_usize,5_usize,4331005038333324288_usize,4_usize,14128866396985000722_usize];
_2 = _20 as u16;
(*RET) = [20395_i16,(-16639_i16),12784_i16];
Call(_4 = core::intrinsics::transmute(_6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_1 = [3158789263818436080_usize,12954362382020662984_usize,0_usize,2_usize,6_usize,15266191459210151020_usize,17899672162666269692_usize];
_17 = [(-27967_i16),(-21151_i16),1136_i16];
_3 = !_11;
_2 = _5;
_6 = [_7,_7,_7];
_17 = [24807_i16,18942_i16,20491_i16];
(*RET) = [28651_i16,18929_i16,(-21825_i16)];
_12 = !_20;
_11 = _3 ^ _3;
_6 = [_7,_7,_7];
_12 = _20;
_17 = [27802_i16,(-17057_i16),25087_i16];
_23 = -28260_i16;
_9 = [7262242331128210916_u64,18407000836633066694_u64,3379961584542327611_u64,12716365177029025034_u64,8245542704821806518_u64,7899209785706979683_u64];
Goto(bb8)
}
bb8 = {
_1 = [2_usize,8739230504619793214_usize,8083606531013351440_usize,17249250215997813824_usize,3_usize,0_usize,7_usize];
Goto(bb9)
}
bb9 = {
_24 = (-1734871193_i32) as f32;
_24 = 3750561869_u32 as f32;
_8 = _1;
_25 = core::ptr::addr_of_mut!((*RET));
(*_25) = [_23,_23,_23];
(*RET) = [_23,_23,_23];
_17 = [_23,_23,_23];
_22 = core::ptr::addr_of_mut!((*_25));
(*RET) = [_23,_23,_23];
_11 = _5 as u128;
_18 = [267772258_u32,3241383984_u32,430370398_u32,3879424803_u32];
RET = core::ptr::addr_of_mut!((*RET));
_23 = 151087401975185962184174167213708674243_i128 as i16;
(*_22) = [_23,_23,_23];
RET = _22;
_27 = !1692043887_i32;
RET = _25;
_2 = _5;
_30.0.0 = _7 as f64;
(*_25) = [_23,_23,_23];
_10 = [1113596612049541545_u64,16581080081131647826_u64,18249168696782257100_u64,10727297082549173542_u64,10534287765804094545_u64,5059190886725064934_u64];
_27 = 1300946122_i32 * (-1258099390_i32);
_31.0 = 7_u8 as f32;
_26 = '\u{b2c88}';
_3 = _16 as u128;
_30.0.0 = (-109402749825873750632224252480183915026_i128) as f64;
_1 = [4_usize,2_usize,5_usize,4172513084312996233_usize,16370579073615082570_usize,6_usize,8691067775066207594_usize];
Goto(bb10)
}
bb10 = {
(*RET) = [_23,_23,_23];
_30.0.2 = _16;
_30.0.1 = 7662446044695985369_i64 * 7542556163457295122_i64;
_6 = _4;
_6 = _4;
_4 = [_7,_7,_7];
_21 = _20 ^ _20;
_31.1 = 3499641061_u32 ^ 3826253799_u32;
_16 = !_30.0.2;
_22 = core::ptr::addr_of_mut!(_17);
(*RET) = [_23,_23,_23];
_20 = _30.0.1 as isize;
_31.2 = _26;
Goto(bb11)
}
bb11 = {
_24 = _31.0;
_29 = _31.2;
_31.0 = _27 as f32;
_30.0.0 = _31.1 as f64;
_21 = !_20;
_33 = _31.0;
_20 = _12 + _21;
(*RET) = [_23,_23,_23];
(*_25) = [_23,_23,_23];
_11 = _3;
_33 = _24 + _31.0;
_24 = -_33;
_17 = [_23,_23,_23];
_24 = 4785869857003479375_u64 as f32;
_18 = [_31.1,_31.1,_31.1,_31.1];
_7 = 123_i8;
(*_22) = [_23,_23,_23];
_31.2 = _26;
_35 = _30.0.0;
_32 = 0_usize as f32;
_16 = _33 <= _33;
match _7 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
123 => bb12,
_ => bb5
}
}
bb12 = {
_24 = _32;
_31 = (_33, 1405966231_u32, _29);
_6 = [_7,_7,_7];
_36 = [_27,_27];
match _7 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
123 => bb20,
_ => bb19
}
}
bb13 = {
_24 = _31.0;
_29 = _31.2;
_31.0 = _27 as f32;
_30.0.0 = _31.1 as f64;
_21 = !_20;
_33 = _31.0;
_20 = _12 + _21;
(*RET) = [_23,_23,_23];
(*_25) = [_23,_23,_23];
_11 = _3;
_33 = _24 + _31.0;
_24 = -_33;
_17 = [_23,_23,_23];
_24 = 4785869857003479375_u64 as f32;
_18 = [_31.1,_31.1,_31.1,_31.1];
_7 = 123_i8;
(*_22) = [_23,_23,_23];
_31.2 = _26;
_35 = _30.0.0;
_32 = 0_usize as f32;
_16 = _33 <= _33;
match _7 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
123 => bb12,
_ => bb5
}
}
bb14 = {
(*RET) = [_23,_23,_23];
_30.0.2 = _16;
_30.0.1 = 7662446044695985369_i64 * 7542556163457295122_i64;
_6 = _4;
_6 = _4;
_4 = [_7,_7,_7];
_21 = _20 ^ _20;
_31.1 = 3499641061_u32 ^ 3826253799_u32;
_16 = !_30.0.2;
_22 = core::ptr::addr_of_mut!(_17);
(*RET) = [_23,_23,_23];
_20 = _30.0.1 as isize;
_31.2 = _26;
Goto(bb11)
}
bb15 = {
_24 = (-1734871193_i32) as f32;
_24 = 3750561869_u32 as f32;
_8 = _1;
_25 = core::ptr::addr_of_mut!((*RET));
(*_25) = [_23,_23,_23];
(*RET) = [_23,_23,_23];
_17 = [_23,_23,_23];
_22 = core::ptr::addr_of_mut!((*_25));
(*RET) = [_23,_23,_23];
_11 = _5 as u128;
_18 = [267772258_u32,3241383984_u32,430370398_u32,3879424803_u32];
RET = core::ptr::addr_of_mut!((*RET));
_23 = 151087401975185962184174167213708674243_i128 as i16;
(*_22) = [_23,_23,_23];
RET = _22;
_27 = !1692043887_i32;
RET = _25;
_2 = _5;
_30.0.0 = _7 as f64;
(*_25) = [_23,_23,_23];
_10 = [1113596612049541545_u64,16581080081131647826_u64,18249168696782257100_u64,10727297082549173542_u64,10534287765804094545_u64,5059190886725064934_u64];
_27 = 1300946122_i32 * (-1258099390_i32);
_31.0 = 7_u8 as f32;
_26 = '\u{b2c88}';
_3 = _16 as u128;
_30.0.0 = (-109402749825873750632224252480183915026_i128) as f64;
_1 = [4_usize,2_usize,5_usize,4172513084312996233_usize,16370579073615082570_usize,6_usize,8691067775066207594_usize];
Goto(bb10)
}
bb16 = {
_6 = [_7,_7,_7];
_11 = _3;
_6 = _4;
_2 = _5 - _5;
_8 = _1;
Goto(bb2)
}
bb17 = {
_1 = [3158789263818436080_usize,12954362382020662984_usize,0_usize,2_usize,6_usize,15266191459210151020_usize,17899672162666269692_usize];
_17 = [(-27967_i16),(-21151_i16),1136_i16];
_3 = !_11;
_2 = _5;
_6 = [_7,_7,_7];
_17 = [24807_i16,18942_i16,20491_i16];
(*RET) = [28651_i16,18929_i16,(-21825_i16)];
_12 = !_20;
_11 = _3 ^ _3;
_6 = [_7,_7,_7];
_12 = _20;
_17 = [27802_i16,(-17057_i16),25087_i16];
_23 = -28260_i16;
_9 = [7262242331128210916_u64,18407000836633066694_u64,3379961584542327611_u64,12716365177029025034_u64,8245542704821806518_u64,7899209785706979683_u64];
Goto(bb8)
}
bb18 = {
_16 = _14;
_4 = [_7,_7,_7];
_14 = !_16;
_1 = [0_usize,5_usize,3_usize,2_usize,0_usize,16712218757232871683_usize,0_usize];
_17 = [(-29331_i16),(-10037_i16),10524_i16];
_18 = [2072238320_u32,4106466473_u32,3333967125_u32,520575802_u32];
_14 = !_16;
_16 = !_14;
_9 = [9725255682571994349_u64,4308116745275733884_u64,9654940795714965235_u64,2918411451031956900_u64,17425843473465922802_u64,9130243858956607344_u64];
_20 = !_12;
_6 = _4;
_4 = [_7,_7,_7];
_16 = _14 ^ _14;
_12 = -_20;
(*RET) = [30638_i16,21728_i16,(-32469_i16)];
_2 = !_5;
_16 = _11 >= _11;
_4 = [_7,_7,_7];
_8 = [6_usize,7772484138506016289_usize,4_usize,11894934410241384098_usize,4_usize,4389975647908827858_usize,4_usize];
_1 = [2_usize,1_usize,6_usize,5_usize,4331005038333324288_usize,4_usize,14128866396985000722_usize];
_2 = _20 as u16;
(*RET) = [20395_i16,(-16639_i16),12784_i16];
Call(_4 = core::intrinsics::transmute(_6), ReturnTo(bb7), UnwindUnreachable())
}
bb19 = {
_15 = _9;
_3 = !_11;
_8 = [6_usize,6_usize,9552194207191042056_usize,2_usize,0_usize,5_usize,2_usize];
_12 = '\u{4001}' as isize;
_7 = (-6_i8);
_16 = _14;
_9 = [3140811410019828620_u64,17241690784908842325_u64,6453770799960306442_u64,5096180544965702497_u64,4347390660615255769_u64,17277624467465090442_u64];
_12 = !9223372036854775807_isize;
_6 = [_7,_7,_7];
_6 = _4;
_7 = 71_i8 - (-121_i8);
_17 = [(-7419_i16),(-17553_i16),22243_i16];
_6 = _4;
_15 = _9;
_3 = _11;
RET = core::ptr::addr_of_mut!(_17);
_12 = -9223372036854775807_isize;
_14 = !_16;
(*RET) = [(-4142_i16),(-13538_i16),(-24442_i16)];
_12 = 816787630_i32 as isize;
_14 = _16;
_16 = _14;
_7 = -54_i8;
_15 = [388133799670000903_u64,6787949024877654574_u64,1268981251732804795_u64,16078861402598483393_u64,14233846566142234936_u64,15327404095726170707_u64];
(*RET) = [15980_i16,8728_i16,(-10908_i16)];
_1 = _8;
_14 = _16;
Goto(bb6)
}
bb20 = {
_15 = _10;
_2 = _5 * _5;
_8 = [16906256740235579950_usize,3_usize,14766639812643755962_usize,16536130037760269008_usize,14476307794429859352_usize,11537361629473712203_usize,261376212279913541_usize];
(*_25) = [_23,_23,_23];
_14 = _16;
_12 = _20;
_40 = [_27,_27,_27,_27,_27,_27];
_17 = [_23,_23,_23];
_6 = [_7,_7,_7];
_17 = [_23,_23,_23];
_11 = _3 * _3;
_34 = [_5,_2,_2,_2,_5,_2];
_8 = [7_usize,6428740443615825068_usize,14106900311123761802_usize,4_usize,1_usize,3271521730709960777_usize,3_usize];
(*_22) = [_23,_23,_23];
_9 = [3754171520549502338_u64,10592592349356471924_u64,5585020553106060945_u64,15822056356171112688_u64,15070961189292990942_u64,1530351977732986715_u64];
_5 = _2;
_6 = [_7,_7,_7];
_3 = !_11;
_6 = [_7,_7,_7];
_27 = _12 as i32;
_42 = _5 * _2;
Goto(bb21)
}
bb21 = {
Call(_43 = dump_var(13_usize, 29_usize, Move(_29), 12_usize, Move(_12), 17_usize, Move(_17), 34_usize, Move(_34)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_43 = dump_var(13_usize, 2_usize, Move(_2), 3_usize, Move(_3), 26_usize, Move(_26), 27_usize, Move(_27)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_43 = dump_var(13_usize, 23_usize, Move(_23), 40_usize, Move(_40), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_43 = dump_var(13_usize, 36_usize, Move(_36), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: u16,mut _2: [usize; 7],mut _3: [i8; 3],mut _4: [i8; 3],mut _5: [i8; 3],mut _6: [i8; 3],mut _7: [u64; 6],mut _8: [u64; 6]) -> u128 {
mir! {
type RET = u128;
let _9: [usize; 5];
let _10: Adt55;
let _11: bool;
let _12: i16;
let _13: bool;
let _14: [i32; 6];
let _15: *const *const *mut [i16; 3];
let _16: *mut char;
let _17: (f32, u32, char);
let _18: (usize, i16);
let _19: f32;
let _20: char;
let _21: char;
let _22: ();
let _23: ();
{
RET = 24992880791842769680351326924775376426_u128 >> _1;
RET = true as u128;
_4 = [70_i8,35_i8,20_i8];
RET = 230667382175286567437813512599121530425_u128;
_4 = [42_i8,120_i8,109_i8];
_6 = [(-5_i8),(-69_i8),(-91_i8)];
_5 = [(-118_i8),102_i8,(-24_i8)];
_8 = _7;
_5 = _3;
Goto(bb1)
}
bb1 = {
_10.fld1 = (_7,);
_3 = [29_i8,(-70_i8),6_i8];
Goto(bb2)
}
bb2 = {
_11 = !false;
_5 = _3;
_12 = 21674_i16;
_11 = !true;
match RET {
0 => bb1,
230667382175286567437813512599121530425 => bb4,
_ => bb3
}
}
bb3 = {
_10.fld1 = (_7,);
_3 = [29_i8,(-70_i8),6_i8];
Goto(bb2)
}
bb4 = {
_6 = [(-11_i8),44_i8,(-11_i8)];
_10.fld2 = 9223372036854775807_isize << _1;
_9 = [0_usize,2_usize,5766475391340926070_usize,5_usize,3160490901387077953_usize];
RET = !248533993204049899784454970649908703556_u128;
_11 = _1 <= _1;
_9 = [3_usize,7_usize,4_usize,13867787946644026346_usize,3_usize];
_10.fld1 = (_8,);
_10.fld0 = _4;
RET = 5774264570056255986_i64 as u128;
_13 = _11;
_10.fld1 = (_8,);
RET = 97078302589689055036915974363302834659_u128;
_10.fld1 = (_7,);
Goto(bb5)
}
bb5 = {
_12 = -(-24321_i16);
_7 = _8;
_10.fld2 = (-33_isize) | (-9223372036854775808_isize);
_4 = [(-62_i8),(-62_i8),38_i8];
_10.fld2 = (-49_isize) << _1;
_9 = [5_usize,8338774426936326941_usize,5_usize,3092391910232565690_usize,2429047936078507054_usize];
RET = !199037322234062735724599438789771557300_u128;
_13 = !_11;
_9 = [7_usize,7300725792262902262_usize,2_usize,14748721458916231767_usize,6_usize];
_7 = _10.fld1.0;
_13 = _10.fld2 >= _10.fld2;
_11 = !_13;
_9 = [521885077173885884_usize,13247025452275716385_usize,3782952291081576355_usize,9213206097158261598_usize,0_usize];
_12 = _11 as i16;
_10.fld1 = (_7,);
_6 = _5;
_10.fld0 = _3;
Goto(bb6)
}
bb6 = {
RET = 1678290340053544447506520724048226440_u128;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
6 => bb8,
1678290340053544447506520724048226440 => bb10,
_ => bb9
}
}
bb7 = {
_12 = -(-24321_i16);
_7 = _8;
_10.fld2 = (-33_isize) | (-9223372036854775808_isize);
_4 = [(-62_i8),(-62_i8),38_i8];
_10.fld2 = (-49_isize) << _1;
_9 = [5_usize,8338774426936326941_usize,5_usize,3092391910232565690_usize,2429047936078507054_usize];
RET = !199037322234062735724599438789771557300_u128;
_13 = !_11;
_9 = [7_usize,7300725792262902262_usize,2_usize,14748721458916231767_usize,6_usize];
_7 = _10.fld1.0;
_13 = _10.fld2 >= _10.fld2;
_11 = !_13;
_9 = [521885077173885884_usize,13247025452275716385_usize,3782952291081576355_usize,9213206097158261598_usize,0_usize];
_12 = _11 as i16;
_10.fld1 = (_7,);
_6 = _5;
_10.fld0 = _3;
Goto(bb6)
}
bb8 = {
_6 = [(-11_i8),44_i8,(-11_i8)];
_10.fld2 = 9223372036854775807_isize << _1;
_9 = [0_usize,2_usize,5766475391340926070_usize,5_usize,3160490901387077953_usize];
RET = !248533993204049899784454970649908703556_u128;
_11 = _1 <= _1;
_9 = [3_usize,7_usize,4_usize,13867787946644026346_usize,3_usize];
_10.fld1 = (_8,);
_10.fld0 = _4;
RET = 5774264570056255986_i64 as u128;
_13 = _11;
_10.fld1 = (_8,);
RET = 97078302589689055036915974363302834659_u128;
_10.fld1 = (_7,);
Goto(bb5)
}
bb9 = {
_10.fld1 = (_7,);
_3 = [29_i8,(-70_i8),6_i8];
Goto(bb2)
}
bb10 = {
_10.fld1.0 = [5783248291578478953_u64,10501864487614982199_u64,68114675702441206_u64,5675367702370775097_u64,7208804706209048838_u64,5959198393026914949_u64];
_6 = _5;
_7 = [11809946377425622870_u64,17065576521654485356_u64,6285966078394204195_u64,4602941549133959097_u64,13192920761146040933_u64,9553059995414611388_u64];
match RET {
0 => bb1,
1 => bb8,
2 => bb5,
3 => bb11,
4 => bb12,
1678290340053544447506520724048226440 => bb14,
_ => bb13
}
}
bb11 = {
_10.fld1 = (_7,);
_3 = [29_i8,(-70_i8),6_i8];
Goto(bb2)
}
bb12 = {
_6 = [(-11_i8),44_i8,(-11_i8)];
_10.fld2 = 9223372036854775807_isize << _1;
_9 = [0_usize,2_usize,5766475391340926070_usize,5_usize,3160490901387077953_usize];
RET = !248533993204049899784454970649908703556_u128;
_11 = _1 <= _1;
_9 = [3_usize,7_usize,4_usize,13867787946644026346_usize,3_usize];
_10.fld1 = (_8,);
_10.fld0 = _4;
RET = 5774264570056255986_i64 as u128;
_13 = _11;
_10.fld1 = (_8,);
RET = 97078302589689055036915974363302834659_u128;
_10.fld1 = (_7,);
Goto(bb5)
}
bb13 = {
_6 = [(-11_i8),44_i8,(-11_i8)];
_10.fld2 = 9223372036854775807_isize << _1;
_9 = [0_usize,2_usize,5766475391340926070_usize,5_usize,3160490901387077953_usize];
RET = !248533993204049899784454970649908703556_u128;
_11 = _1 <= _1;
_9 = [3_usize,7_usize,4_usize,13867787946644026346_usize,3_usize];
_10.fld1 = (_8,);
_10.fld0 = _4;
RET = 5774264570056255986_i64 as u128;
_13 = _11;
_10.fld1 = (_8,);
RET = 97078302589689055036915974363302834659_u128;
_10.fld1 = (_7,);
Goto(bb5)
}
bb14 = {
_13 = !_11;
_10.fld1 = (_7,);
_3 = [(-120_i8),(-77_i8),45_i8];
RET = 129_u8 as u128;
_14 = [1181544861_i32,1066905632_i32,814881171_i32,(-668413192_i32),1467329752_i32,1457215024_i32];
_1 = 49942_u16 - 60116_u16;
_13 = !_11;
_17.0 = 60_i8 as f32;
_4 = _5;
_12 = 7895_i16;
_3 = [(-127_i8),(-42_i8),84_i8];
_18.1 = _12 & _12;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(14_usize, 7_usize, Move(_7), 14_usize, Move(_14), 3_usize, Move(_3), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(14_usize, 2_usize, Move(_2), 12_usize, Move(_12), 23_usize, _23, 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: bool,mut _2: isize,mut _3: [i8; 3],mut _4: [u64; 6],mut _5: bool,mut _6: [usize; 7],mut _7: [usize; 7],mut _8: [usize; 7],mut _9: u128,mut _10: [usize; 7],mut _11: [u64; 6],mut _12: [usize; 7],mut _13: [usize; 7],mut _14: i8) -> u128 {
mir! {
type RET = u128;
let _15: f32;
let _16: Adt55;
let _17: Adt58;
let _18: [i128; 2];
let _19: [u32; 4];
let _20: [usize; 5];
let _21: Adt50;
let _22: f64;
let _23: ((f32, u32, char), f32);
let _24: f64;
let _25: Adt57;
let _26: ();
let _27: ();
{
RET = !_9;
_7 = _6;
_6 = _8;
RET = _9 - _9;
_10 = [1_usize,5_usize,17045568149685198300_usize,12497652430479318627_usize,11816694364242012837_usize,13376964940456982677_usize,1_usize];
RET = !_9;
_6 = _7;
_16.fld0 = [_14,_14,_14];
_6 = [13914823574359451461_usize,5_usize,0_usize,17276809093288372095_usize,15899981984701291565_usize,16445589666223845768_usize,2_usize];
_1 = !_5;
_16.fld2 = _2 + _2;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
21 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_14 = 39104_u16 as i8;
_16.fld1 = (_11,);
RET = (-14212_i16) as u128;
_7 = [7154549705049869694_usize,5_usize,7104052104614274838_usize,11871528272309583464_usize,7_usize,0_usize,6477026037292998081_usize];
_7 = _8;
_2 = -_16.fld2;
_9 = _5 as u128;
_8 = [2_usize,3_usize,4099613563458372417_usize,3821403877723618970_usize,5_usize,6484546285928592302_usize,0_usize];
_15 = 16093248644385486457_u64 as f32;
RET = _9 & _9;
_5 = !_1;
_2 = _16.fld2;
_11 = _4;
_1 = _9 != _9;
_16.fld0 = _3;
_7 = [5_usize,13582409237922933899_usize,9632835272351838505_usize,474034582876013632_usize,6_usize,9055608908158934955_usize,7959504498262012833_usize];
_11 = [8907643858856288693_u64,498922049825984212_u64,16118585785322795747_u64,5464980583572717662_u64,5141718779535512116_u64,10894501492086716745_u64];
_11 = _16.fld1.0;
_19 = [1908310957_u32,835450578_u32,3836934946_u32,19173953_u32];
_3 = [_14,_14,_14];
_16.fld2 = !_2;
RET = !_9;
_23.0.0 = _15 + _15;
Goto(bb8)
}
bb8 = {
_20 = [2010304347868720426_usize,9777847771008390849_usize,4040647921777484996_usize,10582498672735597875_usize,16137201016685492436_usize];
_18 = [103273363618737973162024914853475504631_i128,114684339172446125107868795021912552548_i128];
_16.fld1.0 = [18373253828629545519_u64,4215369098546720148_u64,530740994416210917_u64,7217385514318820886_u64,4776134175537064749_u64,12182516364989841447_u64];
RET = !_9;
Goto(bb9)
}
bb9 = {
_23.0 = (_15, 382468445_u32, '\u{334fb}');
Call(_18 = fn16(_20, _16, _23.0.1, _16.fld1, _16.fld1.0, _8, _23.0.1, _19), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_15 = _23.0.0 * _23.0.0;
_23.1 = -_15;
_12 = _13;
_10 = [15756537196320223810_usize,6_usize,11301528071380040027_usize,10005700996552727939_usize,0_usize,2_usize,1_usize];
_5 = !_1;
_4 = _11;
_15 = -_23.0.0;
RET = _9 & _9;
_11 = [4837284345191126185_u64,6625809789901003369_u64,86498907036436675_u64,10292351223766055533_u64,7214756753525527945_u64,4347494718688664678_u64];
_5 = !_1;
_14 = 65_i8 | (-82_i8);
match _23.0.1 {
0 => bb8,
1 => bb11,
2 => bb12,
3 => bb13,
382468445 => bb15,
_ => bb14
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_22 = RET as f64;
_13 = [7_usize,9720117840468152215_usize,2575107409572460439_usize,10588906752253856494_usize,4_usize,413580923797116712_usize,15927078174334268273_usize];
_24 = 6032566448279813394_i64 as f64;
_6 = [6468057833531138147_usize,9930799300281359173_usize,4_usize,1858305851677875343_usize,12610175705286338565_usize,2_usize,2_usize];
_23.1 = -_23.0.0;
_23.0 = (_23.1, 2030636073_u32, '\u{ce6d7}');
_1 = _5;
Goto(bb16)
}
bb16 = {
Call(_26 = dump_var(15_usize, 11_usize, Move(_11), 8_usize, Move(_8), 9_usize, Move(_9), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(15_usize, 13_usize, Move(_13), 2_usize, Move(_2), 3_usize, Move(_3), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [usize; 5],mut _2: Adt55,mut _3: u32,mut _4: ([u64; 6],),mut _5: [u64; 6],mut _6: [usize; 7],mut _7: u32,mut _8: [u32; 4]) -> [i128; 2] {
mir! {
type RET = [i128; 2];
let _9: usize;
let _10: f32;
let _11: f32;
let _12: u32;
let _13: char;
let _14: u8;
let _15: Adt55;
let _16: *const *mut [i16; 3];
let _17: [i16; 5];
let _18: char;
let _19: [u32; 4];
let _20: ((f32, u32, char), f32);
let _21: ((f32, u32, char), f32);
let _22: [i16; 5];
let _23: u128;
let _24: [u32; 4];
let _25: ((f32, u32, char), f32);
let _26: u8;
let _27: Adt58;
let _28: f32;
let _29: isize;
let _30: Adt57;
let _31: f32;
let _32: f32;
let _33: char;
let _34: char;
let _35: char;
let _36: *const *const *mut [i16; 3];
let _37: [i8; 3];
let _38: bool;
let _39: [u64; 6];
let _40: u8;
let _41: ();
let _42: ();
{
_7 = _3 % _3;
_5 = _4.0;
RET = [(-45787013585238354675251643554203189204_i128),150744472966425911189991186813790556334_i128];
_2.fld2 = (-38_isize);
RET = [(-108999498479038926073670904216497467789_i128),(-49040823541762087832640086892492006837_i128)];
_5 = _2.fld1.0;
_5 = [74763744342485519_u64,18033688935154804456_u64,4919251479746304314_u64,6560274008328572745_u64,11583594790576126191_u64,9575935799345248341_u64];
RET = [(-57272727180214604527971503675938395581_i128),135352074124078030562058416774464401411_i128];
RET = [(-159529189213833605702975187223267032144_i128),(-83237430275139174200552525213648768201_i128)];
_1 = [6_usize,1_usize,6402094076840016974_usize,17264319032234840124_usize,630049104802776982_usize];
_9 = _2.fld2 as usize;
_10 = _3 as f32;
_6 = [_9,_9,_9,_9,_9,_9,_9];
_6 = [_9,_9,_9,_9,_9,_9,_9];
_4.0 = [8824022611381571714_u64,16847530578306194947_u64,13079835283825423824_u64,9410698150020831422_u64,11622848010929486325_u64,2170203284241651693_u64];
_2.fld2 = (-9223372036854775808_isize);
_2.fld0 = [(-47_i8),59_i8,(-20_i8)];
_2.fld0 = [(-102_i8),(-70_i8),9_i8];
_10 = (-9863_i16) as f32;
_2.fld0 = [94_i8,(-114_i8),(-7_i8)];
_1 = [_9,_9,_9,_9,_9];
_5 = [487440566776342990_u64,13306135267490554566_u64,33207995566275716_u64,8628131784739779432_u64,11439923473331603971_u64,14701224836166783227_u64];
Call(_5 = fn17(_10, _2.fld1.0, _3, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = [_9,_9,_9,_9,_9];
_9 = _10 as usize;
_2.fld1.0 = _4.0;
_9 = !1231543025701511704_usize;
RET = [119209376133096410262260595650392190208_i128,(-164300651941872282446360776172539701910_i128)];
_12 = !_7;
_3 = _7 * _12;
_13 = '\u{d4d0c}';
_2.fld1.0 = [8955617361654122104_u64,14234531765120842820_u64,8684702204206374353_u64,2245654058892801764_u64,12709697325068787344_u64,5265820694830693123_u64];
_5 = _2.fld1.0;
_4 = _2.fld1;
_15 = Adt55 { fld0: _2.fld0,fld1: _4,fld2: _2.fld2 };
_4 = (_5,);
_15.fld2 = 15012714968377207621_u64 as isize;
_17 = [4418_i16,(-12763_i16),22796_i16,12120_i16,10954_i16];
_4 = (_5,);
Goto(bb2)
}
bb2 = {
_2 = Adt55 { fld0: _15.fld0,fld1: _15.fld1,fld2: _15.fld2 };
_10 = 103137927098681181799895608255402657530_u128 as f32;
_2 = _15;
_13 = '\u{7fede}';
_8 = [_3,_3,_12,_7];
_3 = _12;
_5 = [5736722242287146852_u64,5101302555997452538_u64,2703741740449493093_u64,13101601992893430149_u64,6692801824860978757_u64,1655186995797748651_u64];
_2.fld1 = (_4.0,);
_14 = !13_u8;
_2.fld1 = (_4.0,);
_15.fld1.0 = _2.fld1.0;
_3 = _12 - _7;
_2.fld1.0 = _4.0;
_17 = [(-18126_i16),28757_i16,(-20927_i16),16057_i16,(-27764_i16)];
_13 = '\u{bc3ae}';
_15.fld2 = _10 as isize;
_15.fld1 = (_4.0,);
_9 = 3_usize;
_3 = !_7;
_2.fld1.0[_9] = _4.0[_9];
Goto(bb3)
}
bb3 = {
_13 = '\u{eb495}';
Goto(bb4)
}
bb4 = {
_20.0.1 = !_3;
_18 = _13;
_12 = 74_i8 as u32;
_12 = 313232731995845154038604926854206762907_u128 as u32;
_15.fld2 = _2.fld2 & _2.fld2;
_8 = [_7,_7,_7,_7];
_12 = _7;
_2 = _15;
_5[_9] = _2.fld1.0[_9] << _2.fld2;
_17[_9] = (-87_i8) as i16;
_19 = [_8[_9],_8[_9],_12,_20.0.1];
_8 = _19;
_21.0.2 = _18;
_21.0.0 = 234114694565181100031619231039483338017_u128 as f32;
_19[_9] = !_8[_9];
_2.fld1.0[_9] = _15.fld1.0[_9];
_21.0 = (_10, _7, _13);
RET = [(-74840223892852682313644621637888067363_i128),(-3635330046909035813181063369256770438_i128)];
Goto(bb5)
}
bb5 = {
_2.fld2 = 561277612_i32 as isize;
match _15.fld1.0[_9] {
0 => bb6,
1 => bb7,
2 => bb8,
2245654058892801764 => bb10,
_ => bb9
}
}
bb6 = {
_20.0.1 = !_3;
_18 = _13;
_12 = 74_i8 as u32;
_12 = 313232731995845154038604926854206762907_u128 as u32;
_15.fld2 = _2.fld2 & _2.fld2;
_8 = [_7,_7,_7,_7];
_12 = _7;
_2 = _15;
_5[_9] = _2.fld1.0[_9] << _2.fld2;
_17[_9] = (-87_i8) as i16;
_19 = [_8[_9],_8[_9],_12,_20.0.1];
_8 = _19;
_21.0.2 = _18;
_21.0.0 = 234114694565181100031619231039483338017_u128 as f32;
_19[_9] = !_8[_9];
_2.fld1.0[_9] = _15.fld1.0[_9];
_21.0 = (_10, _7, _13);
RET = [(-74840223892852682313644621637888067363_i128),(-3635330046909035813181063369256770438_i128)];
Goto(bb5)
}
bb7 = {
_13 = '\u{eb495}';
Goto(bb4)
}
bb8 = {
_2 = Adt55 { fld0: _15.fld0,fld1: _15.fld1,fld2: _15.fld2 };
_10 = 103137927098681181799895608255402657530_u128 as f32;
_2 = _15;
_13 = '\u{7fede}';
_8 = [_3,_3,_12,_7];
_3 = _12;
_5 = [5736722242287146852_u64,5101302555997452538_u64,2703741740449493093_u64,13101601992893430149_u64,6692801824860978757_u64,1655186995797748651_u64];
_2.fld1 = (_4.0,);
_14 = !13_u8;
_2.fld1 = (_4.0,);
_15.fld1.0 = _2.fld1.0;
_3 = _12 - _7;
_2.fld1.0 = _4.0;
_17 = [(-18126_i16),28757_i16,(-20927_i16),16057_i16,(-27764_i16)];
_13 = '\u{bc3ae}';
_15.fld2 = _10 as isize;
_15.fld1 = (_4.0,);
_9 = 3_usize;
_3 = !_7;
_2.fld1.0[_9] = _4.0[_9];
Goto(bb3)
}
bb9 = {
_1 = [_9,_9,_9,_9,_9];
_9 = _10 as usize;
_2.fld1.0 = _4.0;
_9 = !1231543025701511704_usize;
RET = [119209376133096410262260595650392190208_i128,(-164300651941872282446360776172539701910_i128)];
_12 = !_7;
_3 = _7 * _12;
_13 = '\u{d4d0c}';
_2.fld1.0 = [8955617361654122104_u64,14234531765120842820_u64,8684702204206374353_u64,2245654058892801764_u64,12709697325068787344_u64,5265820694830693123_u64];
_5 = _2.fld1.0;
_4 = _2.fld1;
_15 = Adt55 { fld0: _2.fld0,fld1: _4,fld2: _2.fld2 };
_4 = (_5,);
_15.fld2 = 15012714968377207621_u64 as isize;
_17 = [4418_i16,(-12763_i16),22796_i16,12120_i16,10954_i16];
_4 = (_5,);
Goto(bb2)
}
bb10 = {
_4.0 = [_15.fld1.0[_9],_15.fld1.0[_9],_5[_9],_5[_9],_2.fld1.0[_9],_5[_9]];
_9 = _1[_9] - _6[_9];
_21.0 = (_10, _12, _13);
_9 = !4_usize;
_25 = (_21.0, _10);
_20 = (_21.0, _21.0.0);
_8 = [_7,_21.0.1,_21.0.1,_12];
_11 = (-17493_i16) as f32;
_2.fld1.0 = [2307849375225979022_u64,6876040168133204349_u64,5620529626137542105_u64,8396666524186416907_u64,3574223648902956015_u64,10969550437708913929_u64];
_15 = _2;
_21 = (_25.0, _25.0.0);
_25.0 = (_25.1, _7, _20.0.2);
_2.fld2 = -_15.fld2;
_8 = _19;
_28 = _14 as f32;
_20.1 = -_21.0.0;
_21.0.0 = _21.1;
_15.fld1 = (_5,);
_11 = _20.1 - _21.0.0;
_17 = [9871_i16,21755_i16,(-29883_i16),26009_i16,(-2181_i16)];
RET = [(-48501004071547696093329639969658088311_i128),66671837747702436086362241532251603446_i128];
_25 = (_21.0, _21.0.0);
_25.0.0 = _21.1 + _21.0.0;
_13 = _21.0.2;
_20.0.2 = _21.0.2;
_21.1 = _10;
Goto(bb11)
}
bb11 = {
_25.0 = (_10, _3, _21.0.2);
_6 = [_9,_9,_9,_9,_9,_9,_9];
_7 = !_20.0.1;
_21.1 = _11 * _20.0.0;
_29 = _15.fld2 << _12;
_12 = _3;
_21.0.2 = _13;
_3 = 5974819580627609973_u64 as u32;
_2.fld2 = -_15.fld2;
RET = [66584284221043062036822846225842159792_i128,147879247655631051250352305304560916759_i128];
_20.0 = (_21.1, _21.0.1, _21.0.2);
_28 = 6750599034361912596_u64 as f32;
_2.fld1.0 = [9945836585480904056_u64,11886941787450088739_u64,14787102378934291150_u64,5657303363033295590_u64,4207083672721532750_u64,9881260896918965772_u64];
_2 = Adt55 { fld0: _15.fld0,fld1: _4,fld2: _29 };
_22 = [(-2973_i16),(-18036_i16),(-1354_i16),18168_i16,(-24808_i16)];
_28 = _11 * _21.0.0;
_15.fld0 = [(-43_i8),(-126_i8),(-105_i8)];
_2 = _15;
_24 = [_12,_21.0.1,_20.0.1,_25.0.1];
Goto(bb12)
}
bb12 = {
_15.fld2 = _29 - _29;
_9 = 511534776430284018_i64 as usize;
_33 = _20.0.2;
_21.0.2 = _13;
_31 = _11;
_17 = [31551_i16,23168_i16,(-5767_i16),(-13370_i16),(-18600_i16)];
_21.0.1 = _20.0.1 & _20.0.1;
_25.0.1 = !_21.0.1;
_12 = !_25.0.1;
_25 = (_20.0, _21.1);
_2.fld1.0 = _4.0;
_24 = [_21.0.1,_25.0.1,_21.0.1,_12];
_2 = Adt55 { fld0: _15.fld0,fld1: _15.fld1,fld2: _15.fld2 };
_15.fld2 = _2.fld2 ^ _2.fld2;
_36 = core::ptr::addr_of!(_16);
Goto(bb13)
}
bb13 = {
_21 = (_20.0, _25.1);
_25.0.2 = _33;
_2.fld1.0 = [12622059028672436238_u64,13099195201327862763_u64,5560214976493036670_u64,8090678612803119277_u64,1096362554367791819_u64,2424254323675882582_u64];
_15.fld1 = _4;
_32 = _31;
_15 = Adt55 { fld0: _2.fld0,fld1: _4,fld2: _2.fld2 };
_2.fld0 = _15.fld0;
_34 = _13;
_32 = _28;
_17 = [16184_i16,(-19565_i16),(-14034_i16),3369_i16,24546_i16];
_2.fld2 = _14 as isize;
Goto(bb14)
}
bb14 = {
_26 = _14;
_36 = core::ptr::addr_of!((*_36));
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(16_usize, 3_usize, Move(_3), 14_usize, Move(_14), 19_usize, Move(_19), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(16_usize, 13_usize, Move(_13), 9_usize, Move(_9), 5_usize, Move(_5), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(16_usize, 22_usize, Move(_22), 12_usize, Move(_12), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: f32,mut _2: [u64; 6],mut _3: u32,mut _4: f32) -> [u64; 6] {
mir! {
type RET = [u64; 6];
let _5: char;
let _6: f64;
let _7: [u64; 6];
let _8: Adt63;
let _9: u16;
let _10: char;
let _11: f64;
let _12: (f64, i64, bool);
let _13: i8;
let _14: Adt50;
let _15: Adt60;
let _16: isize;
let _17: f32;
let _18: [usize; 8];
let _19: isize;
let _20: *mut char;
let _21: isize;
let _22: *mut ([u64; 6],);
let _23: u128;
let _24: i16;
let _25: [usize; 7];
let _26: i64;
let _27: ();
let _28: ();
{
RET = [14392417538934909294_u64,12409930871456335264_u64,1659357210672608692_u64,15414933449718088986_u64,15306884754636321672_u64,14283957176840870009_u64];
_4 = _1;
_3 = !2662663308_u32;
RET = [10145096705957665259_u64,16788981349357255079_u64,183440710545235738_u64,1724236921807669579_u64,4383882515260333632_u64,2142240663454161694_u64];
RET = [5854358811081853479_u64,12136719515679231351_u64,5211710126853504023_u64,3214800505891139260_u64,8997525172309814862_u64,17839141508290768569_u64];
Call(_4 = core::intrinsics::transmute(_3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _4 - _4;
RET = _2;
_2 = RET;
_1 = -_4;
_6 = 3983053165631093903_i64 as f64;
_3 = 2175428628783132452_i64 as u32;
_5 = '\u{ecf29}';
Goto(bb2)
}
bb2 = {
_5 = '\u{caab5}';
_7 = _2;
_3 = (-102_i8) as u32;
_3 = 2579355416_u32;
_2 = [16286342044832967807_u64,5198737443830345094_u64,9720162894042125485_u64,1768591945314075198_u64,12801303842849496455_u64,254517651265148141_u64];
_3 = !2381863935_u32;
Goto(bb3)
}
bb3 = {
_7 = _2;
_3 = 3168368373_u32 & 1298883129_u32;
_2 = _7;
_5 = '\u{ea7c7}';
_6 = (-2125913490_i32) as f64;
_4 = _1 + _1;
_3 = 2622212348_u32 ^ 2078127947_u32;
Goto(bb4)
}
bb4 = {
_2 = [13098214217516840359_u64,15957016865700417582_u64,18013185969786939169_u64,9084379897690498930_u64,7797234397515733424_u64,15940084160672351360_u64];
_1 = (-72559921757262214914513909674513102779_i128) as f32;
RET = _7;
RET = [7352939158782936251_u64,64416481477831768_u64,14391562484198025753_u64,16710115247332263107_u64,3926109487154422555_u64,12346473375382703036_u64];
_4 = 7_usize as f32;
_5 = '\u{1029f9}';
_5 = '\u{c352}';
RET = [17139152076050872033_u64,14914182908962997105_u64,8201931341065000867_u64,16353078384371649454_u64,12605198600614339930_u64,14289313819454903454_u64];
_5 = '\u{4ff85}';
RET = _2;
_9 = 303720388551825570859902869934926675831_u128 as u16;
RET = _2;
Goto(bb5)
}
bb5 = {
_4 = -_1;
_6 = (-578951764692485032_i64) as f64;
_9 = 62507_u16;
RET = [911850124891823891_u64,10980499941477067735_u64,15541820647908629096_u64,4640701931272178645_u64,1635928887842686937_u64,4028305518239767449_u64];
match _9 {
0 => bb1,
1 => bb2,
62507 => bb6,
_ => bb3
}
}
bb6 = {
_6 = (-8346838763574730187_i64) as f64;
_2 = _7;
_12.0 = _4 as f64;
_12.1 = !(-5992285327724137920_i64);
_11 = _12.1 as f64;
_6 = _11;
_5 = '\u{d93ea}';
RET = _7;
match _9 {
0 => bb7,
1 => bb8,
62507 => bb10,
_ => bb9
}
}
bb7 = {
_1 = _4 - _4;
RET = _2;
_2 = RET;
_1 = -_4;
_6 = 3983053165631093903_i64 as f64;
_3 = 2175428628783132452_i64 as u32;
_5 = '\u{ecf29}';
Goto(bb2)
}
bb8 = {
_2 = [13098214217516840359_u64,15957016865700417582_u64,18013185969786939169_u64,9084379897690498930_u64,7797234397515733424_u64,15940084160672351360_u64];
_1 = (-72559921757262214914513909674513102779_i128) as f32;
RET = _7;
RET = [7352939158782936251_u64,64416481477831768_u64,14391562484198025753_u64,16710115247332263107_u64,3926109487154422555_u64,12346473375382703036_u64];
_4 = 7_usize as f32;
_5 = '\u{1029f9}';
_5 = '\u{c352}';
RET = [17139152076050872033_u64,14914182908962997105_u64,8201931341065000867_u64,16353078384371649454_u64,12605198600614339930_u64,14289313819454903454_u64];
_5 = '\u{4ff85}';
RET = _2;
_9 = 303720388551825570859902869934926675831_u128 as u16;
RET = _2;
Goto(bb5)
}
bb9 = {
_7 = _2;
_3 = 3168368373_u32 & 1298883129_u32;
_2 = _7;
_5 = '\u{ea7c7}';
_6 = (-2125913490_i32) as f64;
_4 = _1 + _1;
_3 = 2622212348_u32 ^ 2078127947_u32;
Goto(bb4)
}
bb10 = {
_12.1 = -(-9046099209104471738_i64);
_6 = _11 + _11;
_7 = RET;
_12 = (_11, (-174609089072421524_i64), true);
Goto(bb11)
}
bb11 = {
_16 = !(-9223372036854775808_isize);
_9 = _3 as u16;
_1 = -_4;
_12.1 = !883502776200700622_i64;
RET = [7417185473468088926_u64,11520150459348564604_u64,3970748619739290503_u64,17322935975926504677_u64,17544877372180365852_u64,17435385957561444105_u64];
_7 = RET;
_9 = 57697_u16 >> _16;
_1 = _4 * _4;
_20 = core::ptr::addr_of_mut!(_10);
(*_20) = _5;
_17 = _1 + _1;
_19 = !_16;
_13 = 48_i8;
_5 = _10;
_11 = _12.0;
Goto(bb12)
}
bb12 = {
_12.1 = !(-5539898413682471824_i64);
_21 = _12.2 as isize;
RET = _7;
_6 = _12.0 - _12.0;
match _13 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb4,
48 => bb14,
_ => bb13
}
}
bb13 = {
_12.1 = -(-9046099209104471738_i64);
_6 = _11 + _11;
_7 = RET;
_12 = (_11, (-174609089072421524_i64), true);
Goto(bb11)
}
bb14 = {
(*_20) = _5;
_12.2 = !false;
_18 = [8131560853347984416_usize,6_usize,15123898380737024060_usize,4_usize,0_usize,6_usize,4_usize,6048756433417775667_usize];
_2 = RET;
RET = [10727699026351232404_u64,11012695614177709409_u64,9068107244240706211_u64,15916246153994562182_u64,4936026572434560481_u64,17408549170194907262_u64];
_23 = !142010242630566250414592991361760681511_u128;
_19 = !_21;
_12.1 = _23 as i64;
_18 = [10921978930718145766_usize,7_usize,16918404394362477434_usize,0_usize,17905165346096418841_usize,14652145573795312927_usize,7_usize,6_usize];
_20 = core::ptr::addr_of_mut!((*_20));
_12.1 = (-6834501419301987206_i64) - 6961129159374914755_i64;
RET = _7;
_17 = _1 * _4;
_7 = [805765277901858032_u64,8818437493815465524_u64,15354218128690976392_u64,11581935938207983583_u64,15502384631648679961_u64,16474138730889688934_u64];
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(17_usize, 9_usize, Move(_9), 13_usize, Move(_13), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(17_usize, 16_usize, Move(_16), 3_usize, Move(_3), 28_usize, _28, 28_usize, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: isize,mut _2: char,mut _3: (f32, u32, char),mut _4: char,mut _5: f32,mut _6: u32) -> [i16; 5] {
mir! {
type RET = [i16; 5];
let _7: char;
let _8: isize;
let _9: *mut [i16; 3];
let _10: (i64, i128, [i8; 3], *const *mut [i16; 3], i128);
let _11: i32;
let _12: Adt65;
let _13: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64);
let _14: (i64,);
let _15: u16;
let _16: Adt59;
let _17: *mut [i16; 3];
let _18: [i32; 2];
let _19: isize;
let _20: i32;
let _21: [u16; 6];
let _22: [i32; 2];
let _23: [u32; 4];
let _24: bool;
let _25: ((f32, u32, char), f32);
let _26: Adt49;
let _27: ((f32, u32, char), f32);
let _28: (char, u8);
let _29: Adt49;
let _30: [usize; 7];
let _31: f64;
let _32: isize;
let _33: isize;
let _34: ();
let _35: ();
{
_1 = 45570_u16 as isize;
_1 = 9223372036854775807_isize >> _3.1;
Goto(bb1)
}
bb1 = {
_1 = !9223372036854775807_isize;
_3 = (_5, _6, _4);
_5 = _3.0 - _3.0;
_6 = !_3.1;
_3 = (_5, _6, _2);
RET = [(-11275_i16),25608_i16,7925_i16,(-31633_i16),(-7728_i16)];
_1 = 258667013136138423110288895439244604992_u128 as isize;
_3.1 = _6 + _6;
_5 = _3.0 - _3.0;
_3.0 = -_5;
_6 = _3.1 * _3.1;
_8 = (-29754360158281464548246714779349985614_i128) as isize;
_3.1 = _6;
_7 = _2;
_2 = _7;
_1 = _6 as isize;
_2 = _3.2;
_3.0 = _5;
RET = [(-28184_i16),8692_i16,(-21205_i16),(-20784_i16),(-24030_i16)];
RET = [(-32541_i16),(-7768_i16),(-11812_i16),(-18493_i16),27655_i16];
_5 = 1280659491_i32 as f32;
_3.2 = _4;
_6 = 5_usize as u32;
_3.0 = _5 + _5;
_10.4 = 2362609486427979202_i64 as i128;
_3.2 = _7;
_7 = _3.2;
RET = [22035_i16,1126_i16,7046_i16,(-26754_i16),20464_i16];
Goto(bb2)
}
bb2 = {
RET = [(-22836_i16),(-2751_i16),31926_i16,14706_i16,23428_i16];
_2 = _7;
_11 = 2120186419_i32 >> _3.1;
Goto(bb3)
}
bb3 = {
_10.2 = [55_i8,(-45_i8),(-40_i8)];
_13.2 = _3.0 + _3.0;
_3 = (_13.2, _6, _2);
_12.fld1 = [65113_u16,49312_u16,32723_u16,29938_u16];
_2 = _4;
_13.4 = [(-65_i8),98_i8,29_i8];
_13.5 = 81_u8 as i64;
_12.fld1 = [44341_u16,28232_u16,57370_u16,5366_u16];
_13.0.0.0 = 6024504471803174162_u64 as f64;
_13.4 = [69_i8,86_i8,125_i8];
Goto(bb4)
}
bb4 = {
_10.4 = _13.5 as i128;
_13.2 = _3.0 + _5;
_12.fld2 = Adt56::Variant0 { fld0: 12985407253510300829_u64,fld1: 618_i16 };
_10.1 = _10.4;
Goto(bb5)
}
bb5 = {
_7 = _4;
_10.3 = core::ptr::addr_of!(_9);
_14.0 = -_13.5;
_3.1 = _6;
place!(Field::<u64>(Variant(_12.fld2, 0), 0)) = !17466899134708944891_u64;
place!(Field::<u64>(Variant(_12.fld2, 0), 0)) = !11089327975055502668_u64;
_13.2 = (-19572_i16) as f32;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = _3.0 as i16;
_13.3 = 279236207908511150232576894821609493154_u128 ^ 254352909954436691567112812150564852557_u128;
_10.0 = _13.5 & _13.5;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = 26622_i16 + (-25771_i16);
_10.3 = core::ptr::addr_of!(_9);
_3.2 = _2;
_13.2 = _3.0;
_1 = _8 | _8;
_4 = _2;
RET = [Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1)];
SetDiscriminant(_12.fld2, 0);
_15 = 64913_u16;
_13.0.0.1 = -_14.0;
Call(_17 = fn19(_15, _10.0, _14.0, _12.fld1, RET, _13.3, _12.fld1, _3.0, _7, _10.0, _14, _14, _10.0, _10, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
RET = [5872_i16,(-2644_i16),28352_i16,4627_i16,(-13415_i16)];
_13.3 = 215697613007748786193778381168810676849_u128 << _11;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = !25906_i16;
_10.0 = !_13.5;
_13.1 = [13697112850246723027_usize,4_usize,1_usize,1810532902755655432_usize,18176695473900298930_usize,12962569648359859262_usize,1_usize,13482955242590408441_usize];
_10.2 = _13.4;
_10.2 = [47_i8,(-107_i8),14_i8];
_18 = [_11,_11];
_10.0 = _14.0 & _13.5;
_13.0.0.1 = _5 as i64;
_3.1 = _13.3 as u32;
_19 = _1 - _8;
_13.0.0.0 = _13.3 as f64;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = (-11330_i16);
_12.fld1 = [_15,_15,_15,_15];
_3 = (_13.2, _6, _4);
_13.0.0.0 = _13.3 as f64;
_12.fld4 = [_3.1,_6,_3.1,_3.1];
_18 = [_11,_11];
_13.3 = 199979771311949843692102792168255572301_u128 & 20040483649173057852400053270919525841_u128;
RET = [Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1)];
_13.3 = 215578757554193717558735844994791333367_u128 * 103344947722298537037182698268650960482_u128;
_20 = Field::<i16>(Variant(_12.fld2, 0), 1) as i32;
_3.2 = _7;
_12.fld4 = [_3.1,_6,_3.1,_6];
Goto(bb7)
}
bb7 = {
_16 = Adt59::Variant3 { fld0: _20,fld1: _3.0,fld2: 2_usize,fld3: _12.fld1,fld4: _12.fld4 };
place!(Field::<u64>(Variant(_12.fld2, 0), 0)) = !13224249932752938109_u64;
_12.fld4 = [_3.1,_3.1,_3.1,_3.1];
_21 = [_15,_15,_15,_15,_15,_15];
_22 = [_11,_11];
_13.1 = [10829196816256506303_usize,8814478999370789659_usize,1_usize,1_usize,4987598791355397577_usize,3884289896353588989_usize,17171619078259494042_usize,5_usize];
match Field::<i16>(Variant(_12.fld2, 0), 1) {
0 => bb3,
1 => bb8,
2 => bb9,
340282366920938463463374607431768200126 => bb11,
_ => bb10
}
}
bb8 = {
_1 = !9223372036854775807_isize;
_3 = (_5, _6, _4);
_5 = _3.0 - _3.0;
_6 = !_3.1;
_3 = (_5, _6, _2);
RET = [(-11275_i16),25608_i16,7925_i16,(-31633_i16),(-7728_i16)];
_1 = 258667013136138423110288895439244604992_u128 as isize;
_3.1 = _6 + _6;
_5 = _3.0 - _3.0;
_3.0 = -_5;
_6 = _3.1 * _3.1;
_8 = (-29754360158281464548246714779349985614_i128) as isize;
_3.1 = _6;
_7 = _2;
_2 = _7;
_1 = _6 as isize;
_2 = _3.2;
_3.0 = _5;
RET = [(-28184_i16),8692_i16,(-21205_i16),(-20784_i16),(-24030_i16)];
RET = [(-32541_i16),(-7768_i16),(-11812_i16),(-18493_i16),27655_i16];
_5 = 1280659491_i32 as f32;
_3.2 = _4;
_6 = 5_usize as u32;
_3.0 = _5 + _5;
_10.4 = 2362609486427979202_i64 as i128;
_3.2 = _7;
_7 = _3.2;
RET = [22035_i16,1126_i16,7046_i16,(-26754_i16),20464_i16];
Goto(bb2)
}
bb9 = {
_7 = _4;
_10.3 = core::ptr::addr_of!(_9);
_14.0 = -_13.5;
_3.1 = _6;
place!(Field::<u64>(Variant(_12.fld2, 0), 0)) = !17466899134708944891_u64;
place!(Field::<u64>(Variant(_12.fld2, 0), 0)) = !11089327975055502668_u64;
_13.2 = (-19572_i16) as f32;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = _3.0 as i16;
_13.3 = 279236207908511150232576894821609493154_u128 ^ 254352909954436691567112812150564852557_u128;
_10.0 = _13.5 & _13.5;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = 26622_i16 + (-25771_i16);
_10.3 = core::ptr::addr_of!(_9);
_3.2 = _2;
_13.2 = _3.0;
_1 = _8 | _8;
_4 = _2;
RET = [Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1)];
SetDiscriminant(_12.fld2, 0);
_15 = 64913_u16;
_13.0.0.1 = -_14.0;
Call(_17 = fn19(_15, _10.0, _14.0, _12.fld1, RET, _13.3, _12.fld1, _3.0, _7, _10.0, _14, _14, _10.0, _10, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
RET = [(-22836_i16),(-2751_i16),31926_i16,14706_i16,23428_i16];
_2 = _7;
_11 = 2120186419_i32 >> _3.1;
Goto(bb3)
}
bb11 = {
_18 = [_11,_11];
_10.2 = _13.4;
_13.0.0.2 = !false;
_3.1 = !_6;
_13.3 = 99229467396825891310507369973444054974_u128 ^ 193858993576292974086613551841992250922_u128;
_9 = _17;
_19 = _1;
place!(Field::<usize>(Variant(_16, 3), 2)) = 14215830685897634917_usize;
RET = [Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1)];
place!(Field::<f32>(Variant(_16, 3), 1)) = _13.2;
_3.0 = Field::<usize>(Variant(_16, 3), 2) as f32;
_10.2 = [(-10_i8),(-86_i8),(-63_i8)];
_14.0 = 34_u8 as i64;
_23 = [_6,_6,_3.1,_6];
_13.5 = _13.0.0.1;
_14 = (_10.0,);
_5 = _19 as f32;
_3.2 = _7;
_13.3 = 251864589883580554465330130430616411294_u128;
_12.fld2 = Adt56::Variant0 { fld0: 7055866654103883249_u64,fld1: 29284_i16 };
Goto(bb12)
}
bb12 = {
_25.0 = (Field::<f32>(Variant(_16, 3), 1), _6, _2);
place!(Field::<f32>(Variant(_16, 3), 1)) = _13.2;
Goto(bb13)
}
bb13 = {
_26 = Adt49::Variant1 { fld0: _13.0.0.2,fld1: _3,fld2: _13,fld3: _18,fld4: _10 };
_21 = [_15,_15,_15,_15,_15,_15];
_3 = (_5, _25.0.1, Field::<(f32, u32, char)>(Variant(_26, 1), 1).2);
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_26, 1), 2)).0.0.0 = -_13.0.0.0;
_13.0.0.0 = _15 as f64;
_29 = _26;
place!(Field::<[u32; 4]>(Variant(_16, 3), 4)) = [Field::<(f32, u32, char)>(Variant(_26, 1), 1).1,Field::<(f32, u32, char)>(Variant(_29, 1), 1).1,_6,Field::<(f32, u32, char)>(Variant(_29, 1), 1).1];
_28 = (_4, 36_u8);
_13.1 = [Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2),Field::<usize>(Variant(_16, 3), 2)];
_27.0.0 = -Field::<(f32, u32, char)>(Variant(_29, 1), 1).0;
SetDiscriminant(_29, 1);
_28 = (_4, 130_u8);
SetDiscriminant(_26, 0);
_13.5 = _14.0 * _13.0.0.1;
place!(Field::<bool>(Variant(_29, 1), 0)) = _13.0.0.2;
_13.2 = _3.0;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_29, 1), 4)).0 = _13.5 & _14.0;
_11 = Field::<i32>(Variant(_16, 3), 0);
_25.0 = _3;
_27.0.0 = 3179903318518133586_u64 as f32;
_27.0.0 = Field::<f32>(Variant(_16, 3), 1);
_19 = _3.1 as isize;
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_29, 1), 2)).5 = 13603225274462454244_u64 as i64;
place!(Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_29, 1), 4)) = (_10.0, _10.4, _10.2, _10.3, _10.4);
_13.0.0.2 = Field::<bool>(Variant(_29, 1), 0);
_3 = (_27.0.0, _25.0.1, _7);
_10.0 = Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_29, 1), 4).0 >> _28.1;
match Field::<usize>(Variant(_16, 3), 2) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb6,
6 => bb14,
14215830685897634917 => bb16,
_ => bb15
}
}
bb14 = {
_10.2 = [55_i8,(-45_i8),(-40_i8)];
_13.2 = _3.0 + _3.0;
_3 = (_13.2, _6, _2);
_12.fld1 = [65113_u16,49312_u16,32723_u16,29938_u16];
_2 = _4;
_13.4 = [(-65_i8),98_i8,29_i8];
_13.5 = 81_u8 as i64;
_12.fld1 = [44341_u16,28232_u16,57370_u16,5366_u16];
_13.0.0.0 = 6024504471803174162_u64 as f64;
_13.4 = [69_i8,86_i8,125_i8];
Goto(bb4)
}
bb15 = {
RET = [5872_i16,(-2644_i16),28352_i16,4627_i16,(-13415_i16)];
_13.3 = 215697613007748786193778381168810676849_u128 << _11;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = !25906_i16;
_10.0 = !_13.5;
_13.1 = [13697112850246723027_usize,4_usize,1_usize,1810532902755655432_usize,18176695473900298930_usize,12962569648359859262_usize,1_usize,13482955242590408441_usize];
_10.2 = _13.4;
_10.2 = [47_i8,(-107_i8),14_i8];
_18 = [_11,_11];
_10.0 = _14.0 & _13.5;
_13.0.0.1 = _5 as i64;
_3.1 = _13.3 as u32;
_19 = _1 - _8;
_13.0.0.0 = _13.3 as f64;
place!(Field::<i16>(Variant(_12.fld2, 0), 1)) = (-11330_i16);
_12.fld1 = [_15,_15,_15,_15];
_3 = (_13.2, _6, _4);
_13.0.0.0 = _13.3 as f64;
_12.fld4 = [_3.1,_6,_3.1,_3.1];
_18 = [_11,_11];
_13.3 = 199979771311949843692102792168255572301_u128 & 20040483649173057852400053270919525841_u128;
RET = [Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1),Field::<i16>(Variant(_12.fld2, 0), 1)];
_13.3 = 215578757554193717558735844994791333367_u128 * 103344947722298537037182698268650960482_u128;
_20 = Field::<i16>(Variant(_12.fld2, 0), 1) as i32;
_3.2 = _7;
_12.fld4 = [_3.1,_6,_3.1,_6];
Goto(bb7)
}
bb16 = {
_26 = Adt49::Variant1 { fld0: _13.0.0.2,fld1: _3,fld2: _13,fld3: _22,fld4: Field::<(i64, i128, [i8; 3], *const *mut [i16; 3], i128)>(Variant(_29, 1), 4) };
place!(Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_29, 1), 2)).3 = !Field::<(((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64)>(Variant(_26, 1), 2).3;
Goto(bb17)
}
bb17 = {
Call(_34 = dump_var(18_usize, 28_usize, Move(_28), 15_usize, Move(_15), 21_usize, Move(_21), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_34 = dump_var(18_usize, 6_usize, Move(_6), 22_usize, Move(_22), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: u16,mut _2: i64,mut _3: i64,mut _4: [u16; 4],mut _5: [i16; 5],mut _6: u128,mut _7: [u16; 4],mut _8: f32,mut _9: char,mut _10: i64,mut _11: (i64,),mut _12: (i64,),mut _13: i64,mut _14: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),mut _15: (i64, i128, [i8; 3], *const *mut [i16; 3], i128)) -> *mut [i16; 3] {
mir! {
type RET = *mut [i16; 3];
let _16: (f64, i64, bool);
let _17: isize;
let _18: (char, u8);
let _19: Adt57;
let _20: i8;
let _21: char;
let _22: Adt51;
let _23: i16;
let _24: char;
let _25: Adt57;
let _26: [usize; 7];
let _27: i16;
let _28: isize;
let _29: f32;
let _30: (i64, i128, [i8; 3], *const *mut [i16; 3], i128);
let _31: i8;
let _32: f64;
let _33: bool;
let _34: u16;
let _35: [i16; 3];
let _36: f64;
let _37: char;
let _38: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64);
let _39: ();
let _40: ();
{
_14 = _15;
_2 = !_15.0;
_15 = _14;
_15.4 = -_14.1;
_18.0 = _9;
_1 = 9911_u16 + 18336_u16;
_1 = 50442_u16;
_14.4 = _15.1 * _15.1;
_7 = _4;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
50442 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_12 = (_11.0,);
_5 = [28800_i16,26727_i16,29823_i16,(-10644_i16),(-18010_i16)];
_12 = (_2,);
_21 = _18.0;
_18 = (_9, 240_u8);
_14.2 = _15.2;
_11.0 = _2;
_16.2 = _18.0 != _21;
match _18.1 {
0 => bb5,
240 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_23 = _18.1 as i16;
_16.1 = !_10;
_1 = !31294_u16;
_17 = (-9223372036854775808_isize);
_18.0 = _21;
_14 = _15;
_17 = (-9223372036854775808_isize);
_17 = -87_isize;
_18.1 = 2_usize as u8;
_6 = _23 as u128;
_1 = 7508_u16;
_8 = (-1019474583_i32) as f32;
_10 = _1 as i64;
_14.2 = [39_i8,(-45_i8),(-54_i8)];
_16.0 = _8 as f64;
_14.4 = _14.1;
_16.0 = _18.1 as f64;
_14.4 = _14.1;
Goto(bb12)
}
bb12 = {
_15 = _14;
_15.3 = core::ptr::addr_of!(RET);
_18 = (_9, 74_u8);
_10 = _12.0 - _14.0;
_31 = -(-44_i8);
_17 = (-75_isize);
_15.3 = core::ptr::addr_of!(RET);
_30.0 = _12.0;
_14.1 = -_15.1;
_17 = 9223372036854775807_isize + 9223372036854775807_isize;
_9 = _18.0;
_30.4 = _14.1;
_23 = 20395_i16;
_16.0 = _31 as f64;
_8 = _23 as f32;
_24 = _18.0;
_23 = (-5736_i16);
_30.0 = !_10;
_15.3 = core::ptr::addr_of!(RET);
_30.4 = _17 as i128;
_3 = _15.0;
_1 = _17 as u16;
_20 = 11654531232920587161_u64 as i8;
_16.0 = 3159583847_u32 as f64;
Call(_15.0 = core::intrinsics::transmute(_30.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_16.2 = _9 != _21;
_14.1 = -_15.1;
_29 = -_8;
_16.2 = _15.0 >= _13;
match _18.1 {
0 => bb8,
1 => bb14,
2 => bb15,
3 => bb16,
74 => bb18,
_ => bb17
}
}
bb14 = {
_15 = _14;
_15.3 = core::ptr::addr_of!(RET);
_18 = (_9, 74_u8);
_10 = _12.0 - _14.0;
_31 = -(-44_i8);
_17 = (-75_isize);
_15.3 = core::ptr::addr_of!(RET);
_30.0 = _12.0;
_14.1 = -_15.1;
_17 = 9223372036854775807_isize + 9223372036854775807_isize;
_9 = _18.0;
_30.4 = _14.1;
_23 = 20395_i16;
_16.0 = _31 as f64;
_8 = _23 as f32;
_24 = _18.0;
_23 = (-5736_i16);
_30.0 = !_10;
_15.3 = core::ptr::addr_of!(RET);
_30.4 = _17 as i128;
_3 = _15.0;
_1 = _17 as u16;
_20 = 11654531232920587161_u64 as i8;
_16.0 = 3159583847_u32 as f64;
Call(_15.0 = core::intrinsics::transmute(_30.0), ReturnTo(bb13), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_24 = _21;
_35 = [_23,_23,_23];
_30.2 = [_20,_31,_20];
_27 = _23;
_30.4 = _16.0 as i128;
_30.2 = _14.2;
_11 = (_30.0,);
_38.0.0.2 = !_16.2;
RET = core::ptr::addr_of_mut!(_35);
Goto(bb19)
}
bb19 = {
Call(_39 = dump_var(19_usize, 21_usize, Move(_21), 12_usize, Move(_12), 3_usize, Move(_3), 17_usize, Move(_17)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_39 = dump_var(19_usize, 10_usize, Move(_10), 5_usize, Move(_5), 20_usize, Move(_20), 6_usize, Move(_6)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_39 = dump_var(19_usize, 18_usize, Move(_18), 1_usize, Move(_1), 40_usize, _40, 40_usize, _40), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{9aadb}'), std::hint::black_box(9223372036854775807_isize), std::hint::black_box((-126_i8)), std::hint::black_box((-10919_i16)), std::hint::black_box(13153390908297730373_u64), std::hint::black_box(1976234402_u32), std::hint::black_box(10484399493388963305616812674638856749_i128), std::hint::black_box(7_usize), std::hint::black_box(40_u8));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: [usize; 8],

},
Variant1{
fld0: bool,
fld1: (f32, u32, char),
fld2: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64),
fld3: [i32; 2],
fld4: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),

},
Variant2{
fld0: [u32; 4],
fld1: char,
fld2: [i128; 2],
fld3: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),
fld4: *mut [i16; 3],
fld5: *const char,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt50 {
Variant0{
fld0: [u32; 4],
fld1: [usize; 5],
fld2: [i128; 2],
fld3: i8,
fld4: [u16; 4],
fld5: [i16; 3],
fld6: [i8; 3],
fld7: usize,

},
Variant1{
fld0: [u16; 6],
fld1: ((f64, i64, bool),),
fld2: [u32; 4],
fld3: [usize; 7],
fld4: i64,
fld5: (usize, i16),

},
Variant2{
fld0: *mut [i16; 3],
fld1: u8,
fld2: u128,
fld3: *mut i64,
fld4: Adt49,
fld5: [i32; 2],
fld6: u32,
fld7: (char, u8),

},
Variant3{
fld0: i8,
fld1: u32,
fld2: (f64, i64, bool),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt51 {
Variant0{
fld0: (char, u8),
fld1: u128,
fld2: [u16; 6],
fld3: Adt49,

},
Variant1{
fld0: *const *const *mut [i16; 3],

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: [usize; 5],
fld1: (isize, (i64, u16, *mut [i16; 3]), (i64,)),
fld2: (i64,),
fld3: [u64; 6],
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u128,
fld1: *mut [i16; 3],

},
Variant1{
fld0: [i16; 5],
fld1: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64),
fld2: u16,
fld3: u8,
fld4: *const *mut [i16; 3],
fld5: i32,

},
Variant2{
fld0: bool,
fld1: Adt50,
fld2: (char, u8),
fld3: *mut char,
fld4: *const char,
fld5: i32,

},
Variant3{
fld0: Adt49,
fld1: ((f32, u32, char), f32),
fld2: [i8; 3],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: *const *mut [i16; 3],
fld1: (char, u8),
fld2: [i16; 3],

},
Variant1{
fld0: [u32; 4],

},
Variant2{
fld0: [i128; 2],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: [i8; 3],
fld1: ([u64; 6],),
fld2: isize,
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: u64,
fld1: i16,

},
Variant1{
fld0: [i32; 6],
fld1: Adt51,
fld2: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),
fld3: *const *mut [i16; 3],
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: u16,
fld1: (i64,),
fld2: [i8; 3],
fld3: (char, u8),
fld4: i16,
fld5: Adt54,
fld6: u64,

},
Variant1{
fld0: [usize; 5],
fld1: (f32, u32, char),
fld2: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),
fld3: ((f32, u32, char), f32),
fld4: *const *const *mut [i16; 3],
fld5: ((f64, i64, bool),),
fld6: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64),

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: ([u64; 6],),
fld1: f32,
fld2: isize,
fld3: Adt56,
fld4: Adt55,
fld5: u32,

},
Variant1{
fld0: (i64,),
fld1: *const *const *mut [i16; 3],
fld2: isize,
fld3: Adt50,
fld4: Adt49,
fld5: u8,

},
Variant2{
fld0: (f64, i64, bool),
fld1: i64,
fld2: [usize; 7],
fld3: f64,

},
Variant3{
fld0: f64,
fld1: [i128; 2],
fld2: Adt54,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: i32,
fld1: Adt54,

},
Variant1{
fld0: [i16; 3],
fld1: u8,
fld2: (isize, (i64, u16, *mut [i16; 3]), (i64,)),
fld3: i8,
fld4: i32,

},
Variant2{
fld0: u16,
fld1: [i16; 5],
fld2: u64,
fld3: u32,
fld4: i64,
fld5: [usize; 5],

},
Variant3{
fld0: i32,
fld1: f32,
fld2: usize,
fld3: [u16; 4],
fld4: [u32; 4],

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: bool,
fld1: Adt51,
fld2: [i8; 3],
fld3: [usize; 5],
fld4: Adt53,

},
Variant1{
fld0: (isize, (i64, u16, *mut [i16; 3]), (i64,)),
fld1: Adt52,
fld2: Adt55,
fld3: i32,

},
Variant2{
fld0: Adt49,
fld1: *mut char,
fld2: ((f64, i64, bool),),
fld3: Adt59,

}}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: i128,
fld1: i32,
fld2: u16,

},
Variant1{
fld0: bool,
fld1: [i128; 2],
fld2: Adt59,
fld3: i128,
fld4: u64,
fld5: Adt55,
fld6: [u32; 4],

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: [usize; 8],
fld1: *mut ([u64; 6],),
fld2: Adt57,
fld3: (f64, i64, bool),
fld4: *mut i64,
fld5: ((f64, i64, bool),),
fld6: i64,
fld7: [i32; 2],

},
Variant1{
fld0: usize,
fld1: (f32, u32, char),
fld2: isize,

},
Variant2{
fld0: [i8; 3],
fld1: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64),
fld2: [usize; 5],
fld3: [u32; 4],
fld4: i16,
fld5: i128,
fld6: u128,

},
Variant3{
fld0: Adt57,
fld1: (i64,),
fld2: isize,
fld3: f32,
fld4: *const *const *mut [i16; 3],

}}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: i128,
fld1: [u16; 4],
fld2: isize,

},
Variant1{
fld0: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),
fld1: [i128; 2],

},
Variant2{
fld0: [i16; 3],
fld1: ([u64; 6],),
fld2: ((f64, i64, bool),),
fld3: u128,
fld4: u64,

},
Variant3{
fld0: Adt49,

}}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: bool,
fld1: ([u64; 6],),
fld2: isize,
fld3: [usize; 7],
fld4: Adt53,
fld5: u8,
fld6: i128,

},
Variant1{
fld0: *mut ([u64; 6],),
fld1: Adt54,
fld2: [i128; 2],
fld3: Adt63,
fld4: (((f64, i64, bool),), [usize; 8], f32, u128, [i8; 3], i64),
fld5: Adt62,
fld6: (i64, i128, [i8; 3], *const *mut [i16; 3], i128),
fld7: Adt59,

}}
#[derive(Debug)]
pub struct Adt65 {
fld0: Adt58,
fld1: [u16; 4],
fld2: Adt56,
fld3: Adt49,
fld4: [u32; 4],
}

