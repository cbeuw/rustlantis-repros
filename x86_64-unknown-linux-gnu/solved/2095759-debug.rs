#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: usize,mut _2: char,mut _3: u128,mut _4: u16,mut _5: i16,mut _6: i32,mut _7: i128) -> Adt54 {
mir! {
type RET = Adt54;
let _8: isize;
let _9: [usize; 3];
let _10: (u64, [usize; 7]);
let _11: [usize; 7];
let _12: (u16, u8, i32);
let _13: i128;
let _14: Adt46;
let _15: i32;
let _16: Adt44;
let _17: isize;
let _18: [isize; 4];
let _19: Adt58;
let _20: *const [usize; 3];
let _21: Adt57;
let _22: (u64,);
let _23: [usize; 3];
let _24: *const [usize; 3];
let _25: isize;
let _26: ();
let _27: ();
{
_1 = 7805397431659074498_usize << 173076091219626086137811186732926539753_u128;
Call(RET = fn1(_1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = !26937_u16;
_5 = 3667_i16;
_3 = 196142936781838304500211150330777170309_u128;
_8 = 13327943300452359019_u64 as isize;
_6 = -70224072_i32;
_1 = !7_usize;
_9 = [_1,_1,_1];
RET.fld0 = core::ptr::addr_of!(_9);
_8 = 67_isize ^ (-29_isize);
_3 = 3392995910_u32 as u128;
RET.fld0 = core::ptr::addr_of!(_9);
_7 = (-24825234837819698846988206995051705208_i128) ^ (-3076425714630314718839943733309650322_i128);
_2 = '\u{1bb99}';
_6 = -(-1361027901_i32);
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
3667 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET.fld0 = core::ptr::addr_of!(_9);
_3 = !55235113177781284270835412885557430135_u128;
RET.fld0 = core::ptr::addr_of!(_9);
_3 = 336380610486728083657061539703946696582_u128 & 46817254846542482437291278860701776856_u128;
_2 = '\u{3b476}';
Goto(bb9)
}
bb9 = {
_6 = 181359011_i32;
_5 = 23_u8 as i16;
_7 = !(-12602499907691390081519807300676081073_i128);
_10.0 = _2 as u64;
_10.0 = _6 as u64;
_12.2 = _6 & _6;
_4 = 57045_u16 * 55496_u16;
_8 = !(-9223372036854775808_isize);
_1 = _6 as usize;
_11 = [_1,_1,_1,_1,_1,_1,_1];
_10.0 = 5777229145962515343_u64 * 2592732253361355779_u64;
_7 = -124631560113257618550661405483713680941_i128;
_7 = (-117_i8) as i128;
_10.0 = 3533026586194445408_u64;
_12 = (_4, 37_u8, _6);
_9 = [_1,_1,_1];
_13 = (-390870873037466650_i64) as i128;
_3 = _12.0 as u128;
match _6 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
181359011 => bb10,
_ => bb6
}
}
bb10 = {
_8 = -9223372036854775807_isize;
_7 = _13;
_11 = [_1,_1,_1,_1,_1,_1,_1];
_4 = _10.0 as u16;
_7 = !_13;
_11 = [_1,_1,_1,_1,_1,_1,_1];
Goto(bb11)
}
bb11 = {
_10 = (12770909904133979497_u64, _11);
_16 = Adt44::Variant0 { fld0: _4,fld1: _11,fld2: _10.0 };
_10 = (Field::<u64>(Variant(_16, 0), 2), _11);
_8 = !(-9223372036854775808_isize);
_12.1 = !15_u8;
_12 = (_4, 92_u8, _6);
_9 = [_1,_1,_1];
_12.0 = Field::<u16>(Variant(_16, 0), 0);
_17 = _8;
_16 = Adt44::Variant0 { fld0: _4,fld1: _10.1,fld2: _10.0 };
Goto(bb12)
}
bb12 = {
_13 = _7 | _7;
_1 = !13619668374971310410_usize;
_17 = -_8;
place!(Field::<u64>(Variant(_16, 0), 2)) = _10.0;
place!(Field::<[usize; 7]>(Variant(_16, 0), 1)) = [_1,_1,_1,_1,_1,_1,_1];
match _12.1 {
0 => bb4,
1 => bb11,
2 => bb5,
3 => bb13,
92 => bb15,
_ => bb14
}
}
bb13 = {
RET.fld0 = core::ptr::addr_of!(_9);
_3 = !55235113177781284270835412885557430135_u128;
RET.fld0 = core::ptr::addr_of!(_9);
_3 = 336380610486728083657061539703946696582_u128 & 46817254846542482437291278860701776856_u128;
_2 = '\u{3b476}';
Goto(bb9)
}
bb14 = {
Return()
}
bb15 = {
_10.0 = Field::<u64>(Variant(_16, 0), 2) ^ Field::<u64>(Variant(_16, 0), 2);
_18 = [_17,_17,_8,_8];
RET.fld0 = core::ptr::addr_of!(_9);
_12.1 = !169_u8;
_22 = (_10.0,);
RET.fld0 = core::ptr::addr_of!(_9);
_12.0 = Field::<u16>(Variant(_16, 0), 0) << _22.0;
_1 = 2_usize;
_12.1 = !164_u8;
_24 = core::ptr::addr_of!(_9);
Goto(bb16)
}
bb16 = {
Call(_26 = dump_var(0_usize, 17_usize, Move(_17), 1_usize, Move(_1), 6_usize, Move(_6), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(0_usize, 12_usize, Move(_12), 4_usize, Move(_4), 13_usize, Move(_13), 11_usize, Move(_11)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: usize,mut _2: usize,mut _3: usize,mut _4: usize,mut _5: usize,mut _6: usize,mut _7: usize,mut _8: usize,mut _9: usize,mut _10: usize,mut _11: usize,mut _12: usize,mut _13: usize,mut _14: usize,mut _15: usize,mut _16: usize) -> Adt54 {
mir! {
type RET = Adt54;
let _17: Adt58;
let _18: *mut bool;
let _19: f32;
let _20: u32;
let _21: u16;
let _22: Adt52;
let _23: i32;
let _24: isize;
let _25: &'static f32;
let _26: [i128; 6];
let _27: usize;
let _28: isize;
let _29: [bool; 2];
let _30: Adt47;
let _31: f64;
let _32: *mut [u16; 3];
let _33: *const [usize; 3];
let _34: f32;
let _35: [bool; 2];
let _36: [usize; 7];
let _37: *mut [u16; 3];
let _38: [i64; 1];
let _39: Adt53;
let _40: Adt44;
let _41: u32;
let _42: isize;
let _43: Adt47;
let _44: Adt48;
let _45: f64;
let _46: *mut u16;
let _47: Adt50;
let _48: Adt45;
let _49: *mut i32;
let _50: i16;
let _51: (u64,);
let _52: Adt42;
let _53: (u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32));
let _54: u32;
let _55: u32;
let _56: ();
let _57: ();
{
_1 = _16 + _16;
_11 = _7 ^ _10;
Goto(bb1)
}
bb1 = {
_12 = _8 * _11;
_12 = (-11168_i16) as usize;
Goto(bb2)
}
bb2 = {
_15 = 61626292708641752927049438604517323095_i128 as usize;
_15 = !_7;
_14 = !_3;
_16 = _5 - _4;
_10 = _8 + _5;
_2 = !_1;
_5 = 11225_u16 as usize;
_15 = 9223372036854775807_isize as usize;
_1 = _6 | _10;
_3 = _8;
_4 = _7;
_19 = (-53235421259030382199776903638784290857_i128) as f32;
_21 = 32456_u16 | 6743_u16;
_4 = !_10;
_11 = _6 - _10;
_10 = _1;
_4 = _5 - _10;
Call(_2 = fn2(_19, _4, _4, _13, _21, _10, _19, _9, _6, _4, _4, _4, _4, _21, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = (-31375159451799002586895782167158191123_i128) as usize;
_13 = _10 + _4;
_5 = !_2;
_14 = _13;
_12 = _13;
_14 = 162141804_i32 as usize;
_5 = _1;
_15 = !_9;
_15 = 4244987522_u32 as usize;
_1 = (-1995_i16) as usize;
_3 = _12 | _2;
_2 = _13;
_16 = _12 ^ _3;
_10 = _16;
_12 = 3106206394_u32 as usize;
_24 = !9223372036854775807_isize;
_12 = _3 + _13;
_13 = !_12;
_24 = (-9_isize) - 9223372036854775807_isize;
_15 = _2;
_24 = 9223372036854775807_isize;
_24 = _21 as isize;
_8 = _16;
_20 = 819597499_u32;
Goto(bb4)
}
bb4 = {
_3 = _10 >> _13;
_10 = _24 as usize;
_3 = 2734598934558493932_i64 as usize;
match _20 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
819597499 => bb9,
_ => bb8
}
}
bb5 = {
_3 = (-31375159451799002586895782167158191123_i128) as usize;
_13 = _10 + _4;
_5 = !_2;
_14 = _13;
_12 = _13;
_14 = 162141804_i32 as usize;
_5 = _1;
_15 = !_9;
_15 = 4244987522_u32 as usize;
_1 = (-1995_i16) as usize;
_3 = _12 | _2;
_2 = _13;
_16 = _12 ^ _3;
_10 = _16;
_12 = 3106206394_u32 as usize;
_24 = !9223372036854775807_isize;
_12 = _3 + _13;
_13 = !_12;
_24 = (-9_isize) - 9223372036854775807_isize;
_15 = _2;
_24 = 9223372036854775807_isize;
_24 = _21 as isize;
_8 = _16;
_20 = 819597499_u32;
Goto(bb4)
}
bb6 = {
_15 = 61626292708641752927049438604517323095_i128 as usize;
_15 = !_7;
_14 = !_3;
_16 = _5 - _4;
_10 = _8 + _5;
_2 = !_1;
_5 = 11225_u16 as usize;
_15 = 9223372036854775807_isize as usize;
_1 = _6 | _10;
_3 = _8;
_4 = _7;
_19 = (-53235421259030382199776903638784290857_i128) as f32;
_21 = 32456_u16 | 6743_u16;
_4 = !_10;
_11 = _6 - _10;
_10 = _1;
_4 = _5 - _10;
Call(_2 = fn2(_19, _4, _4, _13, _21, _10, _19, _9, _6, _4, _4, _4, _4, _21, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_12 = _8 * _11;
_12 = (-11168_i16) as usize;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_11 = (-3099005425361644794_i64) as usize;
_24 = -(-9223372036854775808_isize);
_1 = !_10;
_13 = _12 - _12;
_19 = 395440278_i32 as f32;
_20 = _24 as u32;
_9 = !_12;
_13 = !_9;
_1 = (-20941_i16) as usize;
_13 = !_8;
_26 = [161893630608500884161570910456172947910_i128,14668615903673901616580308457196206251_i128,(-134570346300483099315349383587579401427_i128),78828416590723475022172600748232412359_i128,(-156915138661194681203482001498648861299_i128),(-101757500541897608385932762846023633296_i128)];
_8 = _11;
_24 = 9223372036854775807_isize | (-108_isize);
Goto(bb10)
}
bb10 = {
_5 = _9;
_23 = 1073469687_i32;
_8 = _5;
_24 = !9223372036854775807_isize;
_25 = &_19;
_20 = 38560854812741077501842987026244624223_i128 as u32;
_19 = 255_u8 as f32;
_3 = !_9;
_14 = !_7;
_11 = _3;
_16 = _21 as usize;
_26 = [104746396982934491331480602017168410393_i128,(-55221006451053135562338443945387814076_i128),96049278327688527416341201708497210629_i128,87614192484603790559663100619500967522_i128,57873906234568232676481747257648608023_i128,89296841231129630821515969109550682849_i128];
_1 = !_3;
_25 = &_19;
_29 = [false,true];
_28 = false as isize;
_30.fld0.1 = [_9,_9,_3,_12,_12,_3,_9];
_30.fld4 = (-15557_i16);
Goto(bb11)
}
bb11 = {
_16 = _1;
_5 = 229_u8 as usize;
_30.fld2.1.1.1 = _30.fld0.1;
_30.fld2.0 = core::ptr::addr_of_mut!(_23);
_30.fld2.1.1.0 = !14196730522651089838_u64;
_30.fld5.0 = _28 as f64;
_20 = 3584438070_u32 - 3140085348_u32;
_6 = !_11;
_5 = _9;
_24 = _21 as isize;
_30.fld0.0 = _30.fld2.1.1.0 ^ _30.fld2.1.1.0;
_30.fld1 = !_21;
match _23 {
0 => bb1,
1 => bb8,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb10,
6 => bb7,
1073469687 => bb13,
_ => bb12
}
}
bb12 = {
_12 = _8 * _11;
_12 = (-11168_i16) as usize;
Goto(bb2)
}
bb13 = {
_1 = _16;
_30.fld5.0 = _30.fld1 as f64;
_30.fld2.1.2 = _20;
_30.fld0.0 = 8438029841716526913_i64 as u64;
_2 = _13;
_19 = _30.fld4 as f32;
_23 = -(-1751014018_i32);
_1 = _16 & _11;
_13 = (-18985534703301982533148174762055130411_i128) as usize;
_30.fld5.2 = _30.fld4;
_5 = (-154477104072423264798316254344951451035_i128) as usize;
_30.fld0.0 = _30.fld2.1.1.0;
_23 = _30.fld0.0 as i32;
_30.fld2.1.2 = _23 as u32;
_23 = (-171518593_i32);
_30.fld5.2 = _30.fld4;
Goto(bb14)
}
bb14 = {
_30.fld2.1.1.1 = [_9,_2,_1,_6,_2,_12,_16];
_25 = &_34;
_30.fld2.1.1.1 = [_6,_8,_12,_11,_8,_9,_1];
_30.fld2.1.1.1 = [_8,_9,_9,_11,_1,_8,_16];
_24 = _28 ^ _28;
_7 = true as usize;
_30.fld0.0 = _30.fld2.1.1.0 - _30.fld2.1.1.0;
_29 = [true,false];
_30.fld5.1 = [_12,_9,_8,_6,_9,_8,_2];
_27 = _30.fld5.0 as usize;
_38 = [5252866275058032627_i64];
_30.fld5.3 = [(-23085609872763462293957161555889015316_i128),159675773401621739882754667574376939434_i128,79525187170070173197110501131491259086_i128,(-43121169361480024387277477150383454084_i128),(-120717869449808725704840197772985286755_i128),(-82215017873719726265776102703268390650_i128)];
_36 = [_6,_11,_1,_6,_6,_15,_1];
_30.fld0.1 = _30.fld2.1.1.1;
_30.fld5.3 = _26;
_30.fld5.3 = [(-11578284539491558242362780724437035435_i128),(-147812988657286036693628025282033080593_i128),47372670243160977443008917508719381413_i128,(-48954414479286580974064313435687003025_i128),71957361856382022641953262153033632583_i128,(-8936694827963944826370898860432544501_i128)];
_30.fld5.3 = [105748364088217134744225296312155851892_i128,(-33159837244468452685100288981127708837_i128),53139180890339620316931294262514416930_i128,(-71874939116286870344777222456857520650_i128),47875890737595009027942929915377536376_i128,156431210510995853473466865903721592225_i128];
_30.fld5.3 = [(-101182503181245917928082076366581731018_i128),(-55705115109351762247393568216066483138_i128),(-72784174086991170894351097132157381245_i128),(-159537827800280079610577060205881600646_i128),(-66139423169940726114869772983277473372_i128),47497659330018820119146392588398587118_i128];
_21 = !_30.fld1;
_2 = (-19879114490815652204930468529454619823_i128) as usize;
_30.fld2.1.1 = (_30.fld0.0, _30.fld5.1);
_20 = !_30.fld2.1.2;
_30.fld5.1 = [_12,_6,_15,_16,_12,_6,_1];
_30.fld5.2 = !_30.fld4;
Goto(bb15)
}
bb15 = {
_41 = !_20;
_43.fld2.1.1 = (_30.fld2.1.1.0, _30.fld5.1);
_23 = (-1929461084_i32);
_30.fld1 = _21 & _21;
match _23 {
0 => bb9,
1 => bb10,
2 => bb7,
3 => bb4,
4 => bb5,
340282366920938463463374607429838750372 => bb16,
_ => bb6
}
}
bb16 = {
_47.fld0.fld0.1 = _43.fld2.1.1;
_28 = -_24;
_47.fld3 = (_21, 102_u8, _23);
Call(_30.fld5.2 = fn3(_47.fld0.fld0.1.1, _43.fld2.1.1.1, _43.fld2.1.1.1, _30.fld5.1, _1, _47.fld0.fld0.1.1, _36, _47.fld0.fld0.1.1, _30.fld0.1, _47.fld0.fld0.1, _47.fld0.fld0.1.1, _43.fld2.1.1, _43.fld2.1.1, _6, _16, _1), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_45 = _21 as f64;
_43.fld1 = _30.fld1 * _47.fld3.0;
_35 = [false,false];
_24 = _28;
_26 = [(-12351444463626824525935530326940256775_i128),(-105759137112752991217795223613955974076_i128),68775523205568680435803283962091773201_i128,153325537807474747838045977782586204596_i128,44553912600129541539653905796025104892_i128,122599308343575989335114217729333363522_i128];
_41 = !_30.fld2.1.2;
_38 = [5187046972455029132_i64];
_3 = _1 * _10;
_43.fld2.1.1.1 = _30.fld5.1;
_26 = _30.fld5.3;
_40 = Adt44::Variant0 { fld0: _43.fld1,fld1: _36,fld2: _30.fld2.1.1.0 };
_43.fld0.0 = 126434296999468242194957325352841086364_u128 as u64;
_30.fld5.0 = _45;
_43.fld5.2 = !_30.fld4;
_13 = _8 - _4;
_43.fld5.2 = -_30.fld4;
place!(Field::<u16>(Variant(_40, 0), 0)) = !_47.fld3.0;
match _30.fld4 {
0 => bb18,
1 => bb19,
2 => bb20,
340282366920938463463374607431768195899 => bb22,
_ => bb21
}
}
bb18 = {
_5 = _9;
_23 = 1073469687_i32;
_8 = _5;
_24 = !9223372036854775807_isize;
_25 = &_19;
_20 = 38560854812741077501842987026244624223_i128 as u32;
_19 = 255_u8 as f32;
_3 = !_9;
_14 = !_7;
_11 = _3;
_16 = _21 as usize;
_26 = [104746396982934491331480602017168410393_i128,(-55221006451053135562338443945387814076_i128),96049278327688527416341201708497210629_i128,87614192484603790559663100619500967522_i128,57873906234568232676481747257648608023_i128,89296841231129630821515969109550682849_i128];
_1 = !_3;
_25 = &_19;
_29 = [false,true];
_28 = false as isize;
_30.fld0.1 = [_9,_9,_3,_12,_12,_3,_9];
_30.fld4 = (-15557_i16);
Goto(bb11)
}
bb19 = {
Return()
}
bb20 = {
_30.fld2.1.1.1 = [_9,_2,_1,_6,_2,_12,_16];
_25 = &_34;
_30.fld2.1.1.1 = [_6,_8,_12,_11,_8,_9,_1];
_30.fld2.1.1.1 = [_8,_9,_9,_11,_1,_8,_16];
_24 = _28 ^ _28;
_7 = true as usize;
_30.fld0.0 = _30.fld2.1.1.0 - _30.fld2.1.1.0;
_29 = [true,false];
_30.fld5.1 = [_12,_9,_8,_6,_9,_8,_2];
_27 = _30.fld5.0 as usize;
_38 = [5252866275058032627_i64];
_30.fld5.3 = [(-23085609872763462293957161555889015316_i128),159675773401621739882754667574376939434_i128,79525187170070173197110501131491259086_i128,(-43121169361480024387277477150383454084_i128),(-120717869449808725704840197772985286755_i128),(-82215017873719726265776102703268390650_i128)];
_36 = [_6,_11,_1,_6,_6,_15,_1];
_30.fld0.1 = _30.fld2.1.1.1;
_30.fld5.3 = _26;
_30.fld5.3 = [(-11578284539491558242362780724437035435_i128),(-147812988657286036693628025282033080593_i128),47372670243160977443008917508719381413_i128,(-48954414479286580974064313435687003025_i128),71957361856382022641953262153033632583_i128,(-8936694827963944826370898860432544501_i128)];
_30.fld5.3 = [105748364088217134744225296312155851892_i128,(-33159837244468452685100288981127708837_i128),53139180890339620316931294262514416930_i128,(-71874939116286870344777222456857520650_i128),47875890737595009027942929915377536376_i128,156431210510995853473466865903721592225_i128];
_30.fld5.3 = [(-101182503181245917928082076366581731018_i128),(-55705115109351762247393568216066483138_i128),(-72784174086991170894351097132157381245_i128),(-159537827800280079610577060205881600646_i128),(-66139423169940726114869772983277473372_i128),47497659330018820119146392588398587118_i128];
_21 = !_30.fld1;
_2 = (-19879114490815652204930468529454619823_i128) as usize;
_30.fld2.1.1 = (_30.fld0.0, _30.fld5.1);
_20 = !_30.fld2.1.2;
_30.fld5.1 = [_12,_6,_15,_16,_12,_6,_1];
_30.fld5.2 = !_30.fld4;
Goto(bb15)
}
bb21 = {
_11 = (-3099005425361644794_i64) as usize;
_24 = -(-9223372036854775808_isize);
_1 = !_10;
_13 = _12 - _12;
_19 = 395440278_i32 as f32;
_20 = _24 as u32;
_9 = !_12;
_13 = !_9;
_1 = (-20941_i16) as usize;
_13 = !_8;
_26 = [161893630608500884161570910456172947910_i128,14668615903673901616580308457196206251_i128,(-134570346300483099315349383587579401427_i128),78828416590723475022172600748232412359_i128,(-156915138661194681203482001498648861299_i128),(-101757500541897608385932762846023633296_i128)];
_8 = _11;
_24 = 9223372036854775807_isize | (-108_isize);
Goto(bb10)
}
bb22 = {
_44.fld1 = [_5,_16,_8,_9,_9,_1,_12];
_43.fld5 = (_45, _36, _30.fld4, _26);
_47.fld6.0 = core::ptr::addr_of_mut!(_23);
_43.fld4 = _43.fld5.2 - _43.fld5.2;
_47.fld6.0 = _30.fld2.0;
_42 = _24 * _28;
_46 = core::ptr::addr_of_mut!(_30.fld1);
_29 = [true,true];
_6 = _8;
_30.fld2.1.1.1 = _44.fld1;
_7 = _43.fld4 as usize;
_44.fld0.1.1 = [_8,_9,_11,_6,_13,_3,_16];
_7 = (-54_i8) as usize;
_16 = !_9;
_30.fld2.1.1.1 = [_16,_11,_3,_1,_15,_1,_9];
_43.fld2.1.1 = _30.fld2.1.1;
_34 = _19 * _19;
_21 = (*_46) >> _16;
SetDiscriminant(_40, 1);
Goto(bb23)
}
bb23 = {
_24 = _42 - _42;
_30.fld4 = _30.fld5.2 >> _1;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_40, 1), 5)).0 = _21;
_51 = (_30.fld0.0,);
_30.fld5 = (_45, _47.fld0.fld0.1.1, _30.fld4, _43.fld5.3);
_44.fld0.2 = _20;
_43.fld2.1.1.1 = _43.fld5.1;
RET.fld0 = core::ptr::addr_of!(place!(Field::<[usize; 3]>(Variant(_40, 1), 6)));
_1 = _12;
_49 = core::ptr::addr_of_mut!(_23);
_44.fld1 = _36;
_19 = _34 * _34;
_47.fld6.1.1.0 = !_47.fld0.fld0.1.0;
_28 = (-16321378239594159_i64) as isize;
_30.fld2.1.2 = _44.fld0.2 >> _13;
_44.fld1 = [_8,_9,_16,_16,_1,_3,_6];
_43.fld5.1 = _47.fld0.fld0.1.1;
_47.fld0.fld1 = [_11,_1,_9,_8,_8,_13,_16];
_30.fld1 = !_21;
place!(Field::<[u16; 3]>(Variant(_40, 1), 0)) = [(*_46),_30.fld1,(*_46)];
_54 = _30.fld2.1.2;
_40 = Adt44::Variant0 { fld0: (*_46),fld1: _36,fld2: _51.0 };
_43.fld2.1.1.0 = 2904492686816605332476504681669467462_i128 as u64;
Goto(bb24)
}
bb24 = {
Call(_56 = dump_var(1_usize, 24_usize, Move(_24), 21_usize, Move(_21), 7_usize, Move(_7), 42_usize, Move(_42)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_56 = dump_var(1_usize, 9_usize, Move(_9), 11_usize, Move(_11), 54_usize, Move(_54), 14_usize, Move(_14)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_56 = dump_var(1_usize, 15_usize, Move(_15), 16_usize, Move(_16), 51_usize, Move(_51), 20_usize, Move(_20)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_56 = dump_var(1_usize, 10_usize, Move(_10), 6_usize, Move(_6), 5_usize, Move(_5), 57_usize, _57), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: f32,mut _2: usize,mut _3: usize,mut _4: usize,mut _5: u16,mut _6: usize,mut _7: f32,mut _8: usize,mut _9: usize,mut _10: usize,mut _11: usize,mut _12: usize,mut _13: usize,mut _14: u16,mut _15: usize) -> usize {
mir! {
type RET = usize;
let _16: [u16; 4];
let _17: [u16; 3];
let _18: (u64,);
let _19: (u16, u8, i32);
let _20: [i16; 5];
let _21: [isize; 4];
let _22: (f64, [usize; 7], i16, [i128; 6]);
let _23: [i16; 5];
let _24: ();
let _25: ();
{
RET = 894442066_i32 as usize;
_13 = (-93_i8) as usize;
_7 = -_1;
_15 = _5 as usize;
_16 = [_14,_14,_5,_14];
_16 = [_5,_5,_5,_5];
_4 = _10;
_13 = _9;
Goto(bb1)
}
bb1 = {
_6 = _9;
_10 = '\u{e9d80}' as usize;
_19.1 = 102_u8 | 150_u8;
RET = _12 & _2;
_2 = !RET;
_4 = _11 | _9;
_19.0 = _5 & _14;
_19.0 = _14 >> _2;
_1 = _19.1 as f32;
_21 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_14 = !_19.0;
_18.0 = 16843866809545257748_u64;
_2 = !_11;
RET = _4 + _12;
_13 = _3 & _4;
_19 = (_14, 196_u8, 2140560255_i32);
_2 = _11 - _11;
_16 = [_19.0,_14,_14,_5];
_18 = (13611210045589388601_u64,);
_23 = [(-4443_i16),(-8870_i16),(-3923_i16),8539_i16,(-16963_i16)];
Goto(bb2)
}
bb2 = {
Call(_24 = dump_var(2_usize, 19_usize, Move(_19), 9_usize, Move(_9), 12_usize, Move(_12), 4_usize, Move(_4)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_24 = dump_var(2_usize, 8_usize, Move(_8), 6_usize, Move(_6), 14_usize, Move(_14), 18_usize, Move(_18)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_24 = dump_var(2_usize, 3_usize, Move(_3), 25_usize, _25, 25_usize, _25, 25_usize, _25), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [usize; 7],mut _2: [usize; 7],mut _3: [usize; 7],mut _4: [usize; 7],mut _5: usize,mut _6: [usize; 7],mut _7: [usize; 7],mut _8: [usize; 7],mut _9: [usize; 7],mut _10: (u64, [usize; 7]),mut _11: [usize; 7],mut _12: (u64, [usize; 7]),mut _13: (u64, [usize; 7]),mut _14: usize,mut _15: usize,mut _16: usize) -> i16 {
mir! {
type RET = i16;
let _17: bool;
let _18: Adt44;
let _19: [bool; 2];
let _20: [bool; 2];
let _21: isize;
let _22: f64;
let _23: u64;
let _24: [i64; 1];
let _25: Adt43;
let _26: *const f32;
let _27: *const f32;
let _28: *mut u16;
let _29: isize;
let _30: [bool; 2];
let _31: Adt53;
let _32: isize;
let _33: Adt49;
let _34: isize;
let _35: f32;
let _36: i128;
let _37: u64;
let _38: f32;
let _39: bool;
let _40: *const [usize; 3];
let _41: ();
let _42: ();
{
_6 = [_5,_16,_14,_16,_5,_5,_14];
_13 = (_10.0, _2);
_13 = (_10.0, _9);
_13.1 = [_5,_16,_15,_16,_5,_5,_14];
_10.0 = 16_u8 as u64;
_12 = (_13.0, _9);
_12 = (_13.0, _6);
RET = -(-14330_i16);
RET = (-6587_i16) & 17301_i16;
_13.1 = [_5,_14,_14,_14,_5,_14,_16];
_5 = '\u{c9244}' as usize;
_13 = (_10.0, _6);
_9 = [_16,_16,_16,_15,_14,_14,_16];
_13.1 = _11;
_9 = [_15,_15,_16,_16,_15,_15,_14];
_14 = (-56911552082926281928849071391523754182_i128) as usize;
Goto(bb1)
}
bb1 = {
_8 = [_16,_16,_16,_16,_16,_16,_15];
_9 = [_16,_16,_16,_16,_15,_15,_15];
RET = (-30088_i16) & 26430_i16;
RET = !14152_i16;
_10 = (_12.0, _4);
_19 = [false,true];
RET = 15635_i16 ^ (-3992_i16);
_13.1 = _7;
_14 = _16;
_2 = [_14,_5,_16,_14,_14,_15,_16];
_5 = !_14;
_13 = (_10.0, _7);
_12.1 = [_5,_14,_14,_14,_5,_15,_16];
_3 = [_5,_15,_14,_5,_5,_15,_16];
_21 = 186125642988170546038058909772245705617_u128 as isize;
_12.0 = _13.0;
_16 = !_14;
_10 = _13;
_13.1 = [_15,_16,_16,_16,_5,_14,_5];
Call(_21 = fn4(_12, _9, _4, _5, _9, _8, _13.1, _1, _12, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12.0 = !_13.0;
_17 = true;
RET = (-15045_i16) & 11125_i16;
_20 = [_17,_17];
_10.0 = _13.0;
_7 = [_16,_5,_14,_16,_14,_16,_16];
_21 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_13.0 = _14 as u64;
_2 = _11;
_7 = _9;
_12.0 = _13.0 & _13.0;
_14 = !_15;
_20 = [_17,_17];
_11 = [_14,_16,_5,_5,_16,_5,_15];
_14 = !_16;
_19 = _20;
_15 = _16;
_14 = _5;
_23 = !_13.0;
_22 = 47_i8 as f64;
_11 = _12.1;
_6 = [_16,_16,_15,_14,_16,_16,_16];
_23 = _13.0 - _13.0;
_18 = Adt44::Variant0 { fld0: 41475_u16,fld1: _1,fld2: _13.0 };
_10.0 = Field::<u64>(Variant(_18, 0), 2) + _23;
Call(_10.1 = fn13(_13.1, _2, _7, _10.0, _12.0, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_20 = [_17,_17];
place!(Field::<u64>(Variant(_18, 0), 2)) = !_23;
RET = (-14673_i16);
_4 = [_15,_15,_15,_16,_15,_14,_15];
_10.1 = [_16,_5,_16,_14,_16,_16,_16];
_13.0 = 1720734103_i32 as u64;
_8 = [_16,_5,_15,_5,_16,_14,_16];
_8 = [_16,_14,_15,_14,_5,_16,_14];
place!(Field::<u64>(Variant(_18, 0), 2)) = _23;
_4 = [_5,_14,_15,_15,_5,_15,_15];
_13.1 = _8;
_1 = _8;
_10.1 = [_14,_14,_15,_16,_14,_15,_5];
_16 = _15 - _5;
_14 = _16 >> _5;
_1 = [_15,_16,_16,_16,_14,_5,_14];
_21 = 9223372036854775807_isize << _12.0;
_10.0 = !Field::<u64>(Variant(_18, 0), 2);
_11 = [_15,_5,_16,_14,_5,_14,_5];
_15 = _14 + _5;
Goto(bb4)
}
bb4 = {
place!(Field::<u16>(Variant(_18, 0), 0)) = 23420_u16 | 5377_u16;
_14 = _5 >> _16;
RET = Field::<u16>(Variant(_18, 0), 0) as i16;
_21 = 42_isize & (-69_isize);
_24 = [1052206300083578465_i64];
_1 = [_5,_5,_15,_15,_5,_5,_16];
_17 = false;
_28 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_18, 0), 0)));
SetDiscriminant(_18, 1);
_13.0 = !_12.0;
RET = 12795_i16;
Goto(bb5)
}
bb5 = {
_16 = _15;
place!(Field::<[u16; 3]>(Variant(_18, 1), 0)) = [51445_u16,57882_u16,51046_u16];
_19 = [_17,_17];
_12 = _13;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).0 = 35984_u16;
_22 = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0 as f64;
place!(Field::<[usize; 3]>(Variant(_18, 1), 6)) = [_5,_14,_14];
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.0 = core::ptr::addr_of_mut!(_17);
_1 = [_5,_15,_14,_16,_15,_16,_16];
place!(Field::<[u16; 4]>(Variant(_18, 1), 4)) = [Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0,Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0,Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0,Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0];
_10.1 = _12.1;
_22 = 329530773801121280896207897772531006998_u128 as f64;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.2 = 53_u8 as u32;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.1.0 = _13.0 >> _23;
_13.0 = 6485836190960782649_i64 as u64;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).1 = core::ptr::addr_of!(place!(Field::<[usize; 3]>(Variant(_18, 1), 6)));
place!(Field::<*mut bool>(Variant(_18, 1), 2)) = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).2.0;
_17 = false & false;
_20 = _19;
Goto(bb6)
}
bb6 = {
_16 = !_15;
_11 = _7;
_20 = [_17,_17];
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).0 = 18848_u16 << _23;
_32 = _21;
_19 = [_17,_17];
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.1.0 = _12.0;
_8 = _6;
_13 = (Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).2.1.0, _4);
_13.0 = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).2.1.0;
_13 = (Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).2.1.0, _3);
_19 = [_17,_17];
_14 = 229_u8 as usize;
match RET {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
12795 => bb12,
_ => bb11
}
}
bb7 = {
_16 = _15;
place!(Field::<[u16; 3]>(Variant(_18, 1), 0)) = [51445_u16,57882_u16,51046_u16];
_19 = [_17,_17];
_12 = _13;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).0 = 35984_u16;
_22 = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0 as f64;
place!(Field::<[usize; 3]>(Variant(_18, 1), 6)) = [_5,_14,_14];
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.0 = core::ptr::addr_of_mut!(_17);
_1 = [_5,_15,_14,_16,_15,_16,_16];
place!(Field::<[u16; 4]>(Variant(_18, 1), 4)) = [Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0,Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0,Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0,Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).0];
_10.1 = _12.1;
_22 = 329530773801121280896207897772531006998_u128 as f64;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.2 = 53_u8 as u32;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.1.0 = _13.0 >> _23;
_13.0 = 6485836190960782649_i64 as u64;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).1 = core::ptr::addr_of!(place!(Field::<[usize; 3]>(Variant(_18, 1), 6)));
place!(Field::<*mut bool>(Variant(_18, 1), 2)) = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).2.0;
_17 = false & false;
_20 = _19;
Goto(bb6)
}
bb8 = {
place!(Field::<u16>(Variant(_18, 0), 0)) = 23420_u16 | 5377_u16;
_14 = _5 >> _16;
RET = Field::<u16>(Variant(_18, 0), 0) as i16;
_21 = 42_isize & (-69_isize);
_24 = [1052206300083578465_i64];
_1 = [_5,_5,_15,_15,_5,_5,_16];
_17 = false;
_28 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_18, 0), 0)));
SetDiscriminant(_18, 1);
_13.0 = !_12.0;
RET = 12795_i16;
Goto(bb5)
}
bb9 = {
_20 = [_17,_17];
place!(Field::<u64>(Variant(_18, 0), 2)) = !_23;
RET = (-14673_i16);
_4 = [_15,_15,_15,_16,_15,_14,_15];
_10.1 = [_16,_5,_16,_14,_16,_16,_16];
_13.0 = 1720734103_i32 as u64;
_8 = [_16,_5,_15,_5,_16,_14,_16];
_8 = [_16,_14,_15,_14,_5,_16,_14];
place!(Field::<u64>(Variant(_18, 0), 2)) = _23;
_4 = [_5,_14,_15,_15,_5,_15,_15];
_13.1 = _8;
_1 = _8;
_10.1 = [_14,_14,_15,_16,_14,_15,_5];
_16 = _15 - _5;
_14 = _16 >> _5;
_1 = [_15,_16,_16,_16,_14,_5,_14];
_21 = 9223372036854775807_isize << _12.0;
_10.0 = !Field::<u64>(Variant(_18, 0), 2);
_11 = [_15,_5,_16,_14,_5,_14,_5];
_15 = _14 + _5;
Goto(bb4)
}
bb10 = {
_12.0 = !_13.0;
_17 = true;
RET = (-15045_i16) & 11125_i16;
_20 = [_17,_17];
_10.0 = _13.0;
_7 = [_16,_5,_14,_16,_14,_16,_16];
_21 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_13.0 = _14 as u64;
_2 = _11;
_7 = _9;
_12.0 = _13.0 & _13.0;
_14 = !_15;
_20 = [_17,_17];
_11 = [_14,_16,_5,_5,_16,_5,_15];
_14 = !_16;
_19 = _20;
_15 = _16;
_14 = _5;
_23 = !_13.0;
_22 = 47_i8 as f64;
_11 = _12.1;
_6 = [_16,_16,_15,_14,_16,_16,_16];
_23 = _13.0 - _13.0;
_18 = Adt44::Variant0 { fld0: 41475_u16,fld1: _1,fld2: _13.0 };
_10.0 = Field::<u64>(Variant(_18, 0), 2) + _23;
Call(_10.1 = fn13(_13.1, _2, _7, _10.0, _12.0, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_8 = [_16,_16,_16,_16,_16,_16,_15];
_9 = [_16,_16,_16,_16,_15,_15,_15];
RET = (-30088_i16) & 26430_i16;
RET = !14152_i16;
_10 = (_12.0, _4);
_19 = [false,true];
RET = 15635_i16 ^ (-3992_i16);
_13.1 = _7;
_14 = _16;
_2 = [_14,_5,_16,_14,_14,_15,_16];
_5 = !_14;
_13 = (_10.0, _7);
_12.1 = [_5,_14,_14,_14,_5,_15,_16];
_3 = [_5,_15,_14,_5,_5,_15,_16];
_21 = 186125642988170546038058909772245705617_u128 as isize;
_12.0 = _13.0;
_16 = !_14;
_10 = _13;
_13.1 = [_15,_16,_16,_16,_5,_14,_5];
Call(_21 = fn4(_12, _9, _4, _5, _9, _8, _13.1, _1, _12, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_17 = !true;
_26 = core::ptr::addr_of!(_35);
_13.1 = _1;
Goto(bb13)
}
bb13 = {
_8 = [_15,_15,_15,_16,_16,_16,_16];
_25 = Adt43::Variant0 { fld0: _10.1,fld1: _13.0,fld2: _21,fld3: RET };
_30 = [_17,_17];
place!(Field::<*const [usize; 3]>(Variant(_18, 1), 3)) = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).1;
_19 = _20;
_14 = _15;
_12 = (_10.0, _11);
_10.1 = _6;
_29 = _32 * Field::<isize>(Variant(_25, 0), 2);
place!(Field::<*mut [usize; 3]>(Variant(_18, 1), 1)) = core::ptr::addr_of_mut!(place!(Field::<[usize; 3]>(Variant(_18, 1), 6)));
_28 = core::ptr::addr_of_mut!(place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).0);
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.1.1 = [_5,_16,_5,_14,_16,_15,_16];
_12 = (_10.0, _7);
_34 = _29;
_36 = _17 as i128;
place!(Field::<isize>(Variant(_25, 0), 2)) = (-1091769373_i32) as isize;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.2 = 1798373211_u32;
place!(Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5)).2.1.1 = [_5,_15,_14,_5,_14,_14,_5];
_35 = Field::<(u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32))>(Variant(_18, 1), 5).2.2 as f32;
place!(Field::<[usize; 7]>(Variant(_25, 0), 0)) = _4;
_11 = [_16,_16,_16,_15,_5,_14,_15];
Goto(bb14)
}
bb14 = {
_17 = _12.0 != Field::<u64>(Variant(_25, 0), 1);
_26 = core::ptr::addr_of!(_35);
_40 = core::ptr::addr_of!(place!(Field::<[usize; 3]>(Variant(_18, 1), 6)));
_26 = core::ptr::addr_of!(_35);
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(3_usize, 8_usize, Move(_8), 21_usize, Move(_21), 12_usize, Move(_12), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(3_usize, 3_usize, Move(_3), 23_usize, Move(_23), 17_usize, Move(_17), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(3_usize, 34_usize, Move(_34), 30_usize, Move(_30), 19_usize, Move(_19), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(3_usize, 14_usize, Move(_14), 42_usize, _42, 42_usize, _42, 42_usize, _42), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: (u64, [usize; 7]),mut _2: [usize; 7],mut _3: [usize; 7],mut _4: usize,mut _5: [usize; 7],mut _6: [usize; 7],mut _7: [usize; 7],mut _8: [usize; 7],mut _9: (u64, [usize; 7]),mut _10: (u64, [usize; 7])) -> isize {
mir! {
type RET = isize;
let _11: [u16; 4];
let _12: f64;
let _13: [usize; 3];
let _14: isize;
let _15: [isize; 4];
let _16: isize;
let _17: u16;
let _18: f64;
let _19: i128;
let _20: Adt52;
let _21: char;
let _22: u32;
let _23: Adt50;
let _24: f32;
let _25: bool;
let _26: Adt51;
let _27: [usize; 7];
let _28: *mut bool;
let _29: char;
let _30: [i16; 5];
let _31: [u16; 3];
let _32: isize;
let _33: [i16; 5];
let _34: i32;
let _35: u64;
let _36: f32;
let _37: (*mut i32, (*mut bool, (u64, [usize; 7]), u32));
let _38: bool;
let _39: f64;
let _40: (u16, u8, i32);
let _41: Adt42;
let _42: f64;
let _43: (f64, [usize; 7], i16, [i128; 6]);
let _44: f32;
let _45: Adt55;
let _46: ();
let _47: ();
{
_7 = _10.1;
_10.1 = [_4,_4,_4,_4,_4,_4,_4];
_7 = [_4,_4,_4,_4,_4,_4,_4];
_9.1 = [_4,_4,_4,_4,_4,_4,_4];
_4 = !2_usize;
_8 = _6;
Call(_5 = fn5(_9, _6, _8, _8, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = (_10.0, _10.1);
_2 = [_4,_4,_4,_4,_4,_4,_4];
_6 = _10.1;
_2 = _8;
RET = (-9223372036854775808_isize) << _9.0;
_9 = (_10.0, _3);
_10 = (_9.0, _1.1);
_10.0 = !_1.0;
_9.1 = [_4,_4,_4,_4,_4,_4,_4];
_11 = [13077_u16,28436_u16,52163_u16,2103_u16];
Call(_10 = fn8(_6, _8, _1.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10.0 = _1.0 + _1.0;
_10.1 = [_4,_4,_4,_4,_4,_4,_4];
_5 = [_4,_4,_4,_4,_4,_4,_4];
_10.0 = _1.0 << RET;
_1 = (_10.0, _6);
_1.0 = !_9.0;
_5 = [_4,_4,_4,_4,_4,_4,_4];
_8 = [_4,_4,_4,_4,_4,_4,_4];
_1.0 = _10.0 << _10.0;
_9.0 = _1.0;
_1 = (_9.0, _6);
_1 = (_10.0, _7);
_5 = _1.1;
Call(_12 = fn10(_9.0, _1, _7, _1, _2, _5, _3, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_1.0 = !_10.0;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_1.1 = _6;
_9 = (_10.0, _6);
_13 = [_4,_4,_4];
_14 = 30686246150888802093262211429685386327_i128 as isize;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_13 = [_4,_4,_4];
_3 = [_4,_4,_4,_4,_4,_4,_4];
_14 = RET * RET;
_5 = [_4,_4,_4,_4,_4,_4,_4];
_10 = _9;
_1.0 = !_10.0;
_10 = (_1.0, _7);
_5 = _6;
Goto(bb4)
}
bb4 = {
_2 = [_4,_4,_4,_4,_4,_4,_4];
_13 = [_4,_4,_4];
_2 = [_4,_4,_4,_4,_4,_4,_4];
_1.0 = (-167365746668335546322748794515287167146_i128) as u64;
_10 = _9;
_13 = [_4,_4,_4];
_10.1 = [_4,_4,_4,_4,_4,_4,_4];
_14 = -RET;
_11 = [52238_u16,49611_u16,11346_u16,15840_u16];
RET = 6506828418478390272_i64 as isize;
_3 = _9.1;
_5 = [_4,_4,_4,_4,_4,_4,_4];
_7 = [_4,_4,_4,_4,_4,_4,_4];
_2 = _6;
_8 = [_4,_4,_4,_4,_4,_4,_4];
_1.1 = _6;
_9 = (_10.0, _6);
_10.1 = [_4,_4,_4,_4,_4,_4,_4];
_9.1 = [_4,_4,_4,_4,_4,_4,_4];
_9.1 = [_4,_4,_4,_4,_4,_4,_4];
_13 = [_4,_4,_4];
_1 = (_10.0, _5);
_9.1 = _3;
_12 = 2195818120_u32 as f64;
Call(_11 = fn11(_9.1, _9, _3, _2, _3, _3, _9.1, _10, _2, _2, _9.1, _9, _9), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_6 = [_4,_4,_4,_4,_4,_4,_4];
_16 = RET;
_7 = [_4,_4,_4,_4,_4,_4,_4];
_1.0 = _12 as u64;
_14 = _16;
_1 = (_10.0, _3);
_9 = (_10.0, _2);
RET = !_14;
_8 = [_4,_4,_4,_4,_4,_4,_4];
_5 = [_4,_4,_4,_4,_4,_4,_4];
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
Goto(bb6)
}
bb6 = {
_1.0 = (-128_i8) as u64;
_7 = [_4,_4,_4,_4,_4,_4,_4];
_10.1 = [_4,_4,_4,_4,_4,_4,_4];
_13 = [_4,_4,_4];
_2 = _3;
RET = (-24069_i16) as isize;
_14 = RET;
_12 = (-208542728_i32) as f64;
_3 = [_4,_4,_4,_4,_4,_4,_4];
_9 = (_10.0, _2);
_11 = [10454_u16,59441_u16,10081_u16,9726_u16];
_11 = [27493_u16,10630_u16,8031_u16,63752_u16];
_21 = '\u{10a141}';
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_23.fld3.2 = (-1646354168_i32);
_23.fld5 = core::ptr::addr_of!(_24);
_21 = '\u{fd37a}';
_14 = _23.fld3.2 as isize;
_23.fld6.1.1 = (_10.0, _2);
Goto(bb7)
}
bb7 = {
_23.fld6.1.0 = core::ptr::addr_of_mut!(_25);
_23.fld1 = _13;
_13 = [_4,_4,_4];
_23.fld4 = -(-3618_i16);
_23.fld0.fld0.0 = core::ptr::addr_of_mut!(_25);
_10.1 = _23.fld6.1.1.1;
_4 = !4_usize;
_22 = !2660361449_u32;
_23.fld6.0 = core::ptr::addr_of_mut!(_23.fld3.2);
_9.0 = _23.fld6.1.1.0;
_18 = _12 * _12;
_23.fld1 = [_4,_4,_4];
_23.fld3.1 = 36167_u16 as u8;
_25 = !false;
_26.fld6.fld0.1 = [_4,_4,_4,_4,_4,_4,_4];
_6 = [_4,_4,_4,_4,_4,_4,_4];
RET = _16 * _16;
_26.fld6.fld2.1 = (_23.fld0.fld0.0, _10, _22);
_23.fld0.fld1 = [_4,_4,_4,_4,_4,_4,_4];
_23.fld6.1.1.0 = 93_i8 as u64;
_15 = [RET,_16,_16,RET];
_26.fld6.fld1 = 13262_u16;
_23.fld0.fld0.2 = !_22;
_26.fld6.fld2.0 = core::ptr::addr_of_mut!(_23.fld3.2);
_23.fld4 = 20007_i16 - (-6518_i16);
_26.fld6.fld0.0 = _23.fld4 as u64;
Goto(bb8)
}
bb8 = {
_9.1 = [_4,_4,_4,_4,_4,_4,_4];
_23.fld0.fld2 = 119170261406183136442429588795798722039_u128 >> _9.0;
_28 = _23.fld0.fld0.0;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_26.fld6.fld2.1.0 = core::ptr::addr_of_mut!(_25);
RET = _4 as isize;
_29 = _21;
_23.fld0.fld0.1.1 = [_4,_4,_4,_4,_4,_4,_4];
_33 = [_23.fld4,_23.fld4,_23.fld4,_23.fld4,_23.fld4];
_26.fld6.fld5.0 = -_18;
_23.fld3.1 = 82_u8 ^ 65_u8;
_2 = [_4,_4,_4,_4,_4,_4,_4];
_4 = !6_usize;
_23.fld6.1.1.1 = [_4,_4,_4,_4,_4,_4,_4];
_23.fld6.0 = _26.fld6.fld2.0;
Goto(bb9)
}
bb9 = {
_26.fld5.1 = _23.fld3.1;
_26.fld6.fld0 = _10;
_26.fld6.fld5.2 = _18 as i16;
_26.fld6.fld2.1.2 = !_22;
_13 = [_4,_4,_4];
RET = _26.fld5.1 as isize;
_1 = (_26.fld6.fld2.1.1.0, _10.1);
_23.fld3 = (_26.fld6.fld1, _26.fld5.1, (-1426045959_i32));
_21 = _29;
_26.fld6.fld2.1.0 = _23.fld6.1.0;
_1 = _26.fld6.fld2.1.1;
_1.0 = _9.0;
_5 = [_4,_4,_4,_4,_4,_4,_4];
_26.fld5.2 = -_23.fld3.2;
_1 = (_26.fld6.fld2.1.1.0, _10.1);
_24 = _9.0 as f32;
_23.fld5 = core::ptr::addr_of!(_24);
_31 = [_23.fld3.0,_23.fld3.0,_23.fld3.0];
_26.fld6.fld5.1 = _1.1;
_26.fld5.1 = (-1732027164602074841_i64) as u8;
_35 = _22 as u64;
_15 = [_14,RET,RET,_16];
_4 = !6413810608936455812_usize;
match _23.fld3.2 {
340282366920938463463374607430342165497 => bb11,
_ => bb10
}
}
bb10 = {
_1.0 = !_10.0;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_1.1 = _6;
_9 = (_10.0, _6);
_13 = [_4,_4,_4];
_14 = 30686246150888802093262211429685386327_i128 as isize;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_13 = [_4,_4,_4];
_3 = [_4,_4,_4,_4,_4,_4,_4];
_14 = RET * RET;
_5 = [_4,_4,_4,_4,_4,_4,_4];
_10 = _9;
_1.0 = !_10.0;
_10 = (_1.0, _7);
_5 = _6;
Goto(bb4)
}
bb11 = {
_26.fld6.fld2.0 = core::ptr::addr_of_mut!(_34);
_26.fld3 = [_25,_25];
_37.1.1.0 = !_26.fld6.fld2.1.1.0;
_4 = _25 as usize;
_26.fld6.fld2.1.1.1 = [_4,_4,_4,_4,_4,_4,_4];
_26.fld6.fld2.1.1.1 = [_4,_4,_4,_4,_4,_4,_4];
_26.fld5.0 = _25 as u16;
_26.fld6.fld3 = core::ptr::addr_of_mut!(_23.fld1);
_26.fld6.fld0.1 = [_4,_4,_4,_4,_4,_4,_4];
_17 = _4 as u16;
_9 = (_26.fld6.fld2.1.1.0, _1.1);
_34 = _23.fld3.2 ^ _23.fld3.2;
_17 = _26.fld6.fld1 << _37.1.1.0;
_11 = [_17,_17,_26.fld5.0,_23.fld3.0];
_37.1.1 = (_35, _10.1);
_23.fld4 = _26.fld6.fld5.2;
_26.fld6.fld2.1.1.1 = [_4,_4,_4,_4,_4,_4,_4];
match _23.fld3.0 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb9,
13262 => bb13,
_ => bb12
}
}
bb12 = {
_1.0 = !_10.0;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_1.1 = _6;
_9 = (_10.0, _6);
_13 = [_4,_4,_4];
_14 = 30686246150888802093262211429685386327_i128 as isize;
_1.1 = [_4,_4,_4,_4,_4,_4,_4];
_13 = [_4,_4,_4];
_3 = [_4,_4,_4,_4,_4,_4,_4];
_14 = RET * RET;
_5 = [_4,_4,_4,_4,_4,_4,_4];
_10 = _9;
_1.0 = !_10.0;
_10 = (_1.0, _7);
_5 = _6;
Goto(bb4)
}
bb13 = {
_23.fld0.fld2 = !250694885526728091778520761565957833984_u128;
RET = -_16;
_26.fld6.fld2.1.1.0 = _26.fld6.fld0.0 - _1.0;
_23.fld0.fld1 = [_4,_4,_4,_4,_4,_4,_4];
_37 = (_26.fld6.fld2.0, _26.fld6.fld2.1);
_14 = _16 | _16;
_23.fld6.1.2 = _23.fld0.fld0.2 ^ _23.fld0.fld0.2;
_40.2 = !_23.fld3.2;
_26.fld6.fld0.1 = _26.fld6.fld5.1;
_43.3 = [56020327805867062928769072895821204089_i128,(-43973025298020822337786446868780338517_i128),(-67517785920300773477499355666510506268_i128),(-77591554378857588122796753061192683047_i128),(-141674929988763189147356168060309094328_i128),(-85194377537705644304015330497191461727_i128)];
Call(_23.fld3.0 = core::intrinsics::bswap(_17), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23.fld5 = core::ptr::addr_of!(_24);
_43.2 = (-5222821191633400414_i64) as i16;
_9 = (_26.fld6.fld2.1.1.0, _10.1);
_38 = _25 & _25;
_26.fld5 = _23.fld3;
_26.fld2 = _33;
_39 = -_26.fld6.fld5.0;
_37.0 = core::ptr::addr_of_mut!(_26.fld5.2);
_26.fld5.1 = !_23.fld3.1;
_43.0 = _16 as f64;
_23.fld0.fld2 = _16 as u128;
_33 = _26.fld2;
_43.0 = _18;
_23.fld6.1.1.1 = [_4,_4,_4,_4,_4,_4,_4];
_22 = !_37.1.2;
_10.1 = [_4,_4,_4,_4,_4,_4,_4];
_37.1.1.0 = 2_i8 as u64;
_42 = -_26.fld6.fld5.0;
_4 = !4423381348123670756_usize;
_37.0 = core::ptr::addr_of_mut!(_34);
_23.fld1 = _13;
RET = _23.fld0.fld2 as isize;
_22 = _23.fld0.fld0.2;
_1.0 = !_10.0;
_43.0 = _42 * _18;
_21 = _29;
_5 = _26.fld6.fld5.1;
_9 = (_26.fld6.fld2.1.1.0, _26.fld6.fld0.1);
_40.0 = !_17;
_37.1.0 = core::ptr::addr_of_mut!(_25);
_26.fld6.fld5.3 = [44686274663474823841338102015444966668_i128,34844891005749212389062528651572398757_i128,(-77818066184620455207038926949284070321_i128),(-980746267988222591806450892890643425_i128),91860838412949722211834768694472166766_i128,140330544266949810001074119042827725171_i128];
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(4_usize, 35_usize, Move(_35), 33_usize, Move(_33), 15_usize, Move(_15), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(4_usize, 14_usize, Move(_14), 13_usize, Move(_13), 4_usize, Move(_4), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(4_usize, 2_usize, Move(_2), 25_usize, Move(_25), 38_usize, Move(_38), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: (u64, [usize; 7]),mut _2: [usize; 7],mut _3: [usize; 7],mut _4: [usize; 7],mut _5: [usize; 7]) -> [usize; 7] {
mir! {
type RET = [usize; 7];
let _6: char;
let _7: [u16; 4];
let _8: (u16, u8, i32);
let _9: Adt58;
let _10: bool;
let _11: (u128, u64, [usize; 7], &'static f32);
let _12: (u64,);
let _13: isize;
let _14: (u64,);
let _15: bool;
let _16: Adt52;
let _17: isize;
let _18: isize;
let _19: u16;
let _20: f32;
let _21: i16;
let _22: (f64, [usize; 7], i16, [i128; 6]);
let _23: ();
let _24: ();
{
_1.1 = [1_usize,15252959396181330961_usize,7_usize,11009781608149728952_usize,11480248327246936699_usize,11026481029411034613_usize,2442539012483078691_usize];
_6 = '\u{c03fa}';
RET = [6345663057332741159_usize,5_usize,11346277259010402355_usize,787198767886923025_usize,9405954570187460606_usize,6_usize,14606466918031299358_usize];
_1.0 = 15375872445475717420_u64 << 0_usize;
RET = _3;
RET = [9503662649190207177_usize,7_usize,0_usize,7140612101339660609_usize,15349126148097662023_usize,2_usize,5_usize];
_1.0 = false as u64;
_4 = [5_usize,0_usize,4124179276775912188_usize,199651135598256117_usize,1453955007457121407_usize,5262849876691290912_usize,6577430812874783267_usize];
_1.1 = [4930785406916041374_usize,4624047643818236085_usize,561347602042608850_usize,10004836856087244389_usize,7240939777686646527_usize,11273186077616513445_usize,0_usize];
RET = [3257105794912354392_usize,18136409946397833643_usize,1681083961564468851_usize,4_usize,11036005846795865567_usize,9205104659438104541_usize,17828824158331670446_usize];
RET = _5;
_1.0 = !8648741752748370656_u64;
_1.0 = 10908297332596582991_u64 ^ 11450687133610564531_u64;
RET = [7_usize,5744302307209988278_usize,6856524805072223095_usize,2_usize,4_usize,7_usize,7_usize];
_6 = '\u{21fbb}';
_1.0 = !17396240628700436949_u64;
_5 = [15768574210593558765_usize,3412278186232222234_usize,7_usize,2188927283785306424_usize,6_usize,2195230242038528247_usize,5_usize];
_5 = [6601457889276859913_usize,4_usize,9364681847712343261_usize,12767816927664611419_usize,13879146810225844389_usize,3_usize,3847157518757024656_usize];
_5 = _2;
_1 = (13832891125835039274_u64, _3);
_1.1 = [6_usize,2_usize,3_usize,10910119551777606038_usize,2871750188852981956_usize,5411251785173057134_usize,6_usize];
RET = [15810051082833588242_usize,16686865983102781085_usize,155897382394616706_usize,0_usize,7303146588104201908_usize,1_usize,15898593043322589298_usize];
_4 = [13250618654622046208_usize,7_usize,4_usize,2867209360197090969_usize,6_usize,6_usize,4_usize];
_4 = [4_usize,7_usize,0_usize,7303881353556760283_usize,2_usize,14061170559252515244_usize,2413581553713952636_usize];
_5 = [12412408662784083429_usize,2_usize,6926772779983562159_usize,1_usize,16240103257708866178_usize,3_usize,18404185939116549168_usize];
RET = [3_usize,1681447546841489369_usize,3566280215888238131_usize,9287104978676977351_usize,5_usize,15805314599750820856_usize,3_usize];
_10 = _1.0 != _1.0;
match _1.0 {
0 => bb1,
13832891125835039274 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_1.0 = !17374200851918664264_u64;
_7 = [38757_u16,1498_u16,9203_u16,36158_u16];
_7 = [40721_u16,34440_u16,50897_u16,56168_u16];
_1 = (1540005540250734428_u64, _2);
_4 = _2;
_8.0 = 10267_u16 >> _1.0;
_5 = [5_usize,6325929889633117760_usize,15481772257287704522_usize,2667082478774610492_usize,16758864543905427364_usize,4_usize,6_usize];
_8.2 = _10 as i32;
_11.1 = 183750579769906751868907189860546343845_u128 as u64;
_8.2 = 1485931153_i32 << _8.0;
_5 = [7253101038664406615_usize,17953117424998948824_usize,17282133461018724211_usize,1125707707125715951_usize,15906903331109896414_usize,11169163194853438037_usize,11912893543869420597_usize];
_12.0 = _1.0 & _1.0;
Call(_12.0 = fn6(_3, _1.0, _10, _1, _8.0, _1, _1.1, _3, _1.1, _1.1, _8.2, _10, _1, _3, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8.0 = !15735_u16;
_1 = (_11.1, _4);
_8.1 = !107_u8;
_2 = _1.1;
_4 = [6727848643817669689_usize,6995682801935991875_usize,7_usize,714085106279361030_usize,8119715053530166000_usize,4_usize,7_usize];
_13 = (-9223372036854775808_isize);
match _13 {
340282366920938463454151235394913435648 => bb5,
_ => bb2
}
}
bb5 = {
_5 = [13348625818639553015_usize,6_usize,13306319967324152636_usize,16235367689650152816_usize,6998743211241006475_usize,3848944225556542521_usize,3_usize];
_11.2 = _2;
_1.0 = _12.0;
_13 = 9223372036854775807_isize + 77_isize;
_11.0 = 267274791064226914401621214469745343479_u128;
_1.1 = [6_usize,0_usize,2_usize,3_usize,4535403139291111604_usize,879645790959157833_usize,6_usize];
_11.0 = 14536926854473768779060193365405021529_u128 >> _12.0;
_1.0 = 74_i8 as u64;
_12 = (_11.1,);
_3 = _2;
_13 = _8.1 as isize;
_11.1 = !_12.0;
_12.0 = 26_i8 as u64;
_1.0 = !_12.0;
_11.2 = [7_usize,4_usize,3_usize,6_usize,16838170300902638125_usize,3_usize,1989508731789229969_usize];
_1 = (_12.0, _3);
_11.0 = 242494940075245245591885528745526059542_u128;
_1 = (_12.0, _2);
match _11.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
242494940075245245591885528745526059542 => bb9,
_ => bb8
}
}
bb6 = {
_8.0 = !15735_u16;
_1 = (_11.1, _4);
_8.1 = !107_u8;
_2 = _1.1;
_4 = [6727848643817669689_usize,6995682801935991875_usize,7_usize,714085106279361030_usize,8119715053530166000_usize,4_usize,7_usize];
_13 = (-9223372036854775808_isize);
match _13 {
340282366920938463454151235394913435648 => bb5,
_ => bb2
}
}
bb7 = {
_1.0 = !17374200851918664264_u64;
_7 = [38757_u16,1498_u16,9203_u16,36158_u16];
_7 = [40721_u16,34440_u16,50897_u16,56168_u16];
_1 = (1540005540250734428_u64, _2);
_4 = _2;
_8.0 = 10267_u16 >> _1.0;
_5 = [5_usize,6325929889633117760_usize,15481772257287704522_usize,2667082478774610492_usize,16758864543905427364_usize,4_usize,6_usize];
_8.2 = _10 as i32;
_11.1 = 183750579769906751868907189860546343845_u128 as u64;
_8.2 = 1485931153_i32 << _8.0;
_5 = [7253101038664406615_usize,17953117424998948824_usize,17282133461018724211_usize,1125707707125715951_usize,15906903331109896414_usize,11169163194853438037_usize,11912893543869420597_usize];
_12.0 = _1.0 & _1.0;
Call(_12.0 = fn6(_3, _1.0, _10, _1, _8.0, _1, _1.1, _3, _1.1, _1.1, _8.2, _10, _1, _3, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_8.0 = 46049_u16 >> _8.2;
_1.0 = _12.0 >> _8.0;
_12.0 = !_1.0;
_8 = (3221_u16, 98_u8, (-530443742_i32));
_2 = [2920154693553560172_usize,2857525250933139553_usize,2_usize,15178086681774712758_usize,390828602758669434_usize,1637645796523380015_usize,7_usize];
_2 = _1.1;
_11.2 = [16459552703648835175_usize,4_usize,5933157105479268183_usize,3_usize,1_usize,4_usize,3_usize];
_3 = [1_usize,3_usize,7_usize,7_usize,4_usize,4_usize,1_usize];
_2 = [11377764007689448225_usize,17159813943966255239_usize,12025731070667617043_usize,6_usize,17671682600697222552_usize,4_usize,0_usize];
_12.0 = _1.0 << _1.0;
_11.1 = _12.0 >> _12.0;
RET = [10553787073695638645_usize,12060547709166632907_usize,3_usize,0_usize,0_usize,6_usize,7_usize];
_14.0 = _8.0 as u64;
_7 = [_8.0,_8.0,_8.0,_8.0];
_2 = [11138054514586193085_usize,12588042562250611823_usize,0_usize,2663561660821299726_usize,762568916547226462_usize,15634559556171019163_usize,11398025586163635582_usize];
Goto(bb10)
}
bb10 = {
_4 = [6_usize,5_usize,2634926911610467505_usize,8395908009271092662_usize,11937200665261745162_usize,3_usize,11803988153841570509_usize];
_12 = _14;
_8.2 = (-50835576257497035776242648628176549697_i128) as i32;
_4 = [16175668351627101640_usize,4_usize,7_usize,18362229749729820982_usize,1_usize,5_usize,3_usize];
_12.0 = _11.1 | _11.1;
_4 = RET;
_1 = (_12.0, RET);
_1.1 = [7_usize,3658692718392048103_usize,5704150794099919096_usize,6_usize,1_usize,1_usize,6_usize];
_4 = [1_usize,1_usize,5749167653954981864_usize,5145408872430872571_usize,14560991571654693228_usize,13164428136756035308_usize,0_usize];
_4 = [11537902991189245633_usize,7_usize,0_usize,7_usize,1_usize,2137489558844302456_usize,17664275934722610193_usize];
_4 = _2;
_10 = _12.0 != _1.0;
RET = _4;
_18 = _8.1 as isize;
_15 = _10;
_3 = [2253284860617432441_usize,7_usize,2541807357872093953_usize,4836063674492654377_usize,3_usize,6_usize,7_usize];
_13 = _18;
_10 = _15;
RET = [6276946805542105998_usize,7_usize,1_usize,5_usize,6_usize,3_usize,8113333152739864847_usize];
_5 = _11.2;
_13 = _8.0 as isize;
_8.0 = 3377818300322775663_usize as u16;
_7 = [_8.0,_8.0,_8.0,_8.0];
_11.1 = _1.0 * _12.0;
_1 = (_11.1, _2);
_17 = _13;
match _11.0 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
242494940075245245591885528745526059542 => bb17,
_ => bb16
}
}
bb11 = {
_1.0 = !17374200851918664264_u64;
_7 = [38757_u16,1498_u16,9203_u16,36158_u16];
_7 = [40721_u16,34440_u16,50897_u16,56168_u16];
_1 = (1540005540250734428_u64, _2);
_4 = _2;
_8.0 = 10267_u16 >> _1.0;
_5 = [5_usize,6325929889633117760_usize,15481772257287704522_usize,2667082478774610492_usize,16758864543905427364_usize,4_usize,6_usize];
_8.2 = _10 as i32;
_11.1 = 183750579769906751868907189860546343845_u128 as u64;
_8.2 = 1485931153_i32 << _8.0;
_5 = [7253101038664406615_usize,17953117424998948824_usize,17282133461018724211_usize,1125707707125715951_usize,15906903331109896414_usize,11169163194853438037_usize,11912893543869420597_usize];
_12.0 = _1.0 & _1.0;
Call(_12.0 = fn6(_3, _1.0, _10, _1, _8.0, _1, _1.1, _3, _1.1, _1.1, _8.2, _10, _1, _3, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
_1.0 = !17374200851918664264_u64;
_7 = [38757_u16,1498_u16,9203_u16,36158_u16];
_7 = [40721_u16,34440_u16,50897_u16,56168_u16];
_1 = (1540005540250734428_u64, _2);
_4 = _2;
_8.0 = 10267_u16 >> _1.0;
_5 = [5_usize,6325929889633117760_usize,15481772257287704522_usize,2667082478774610492_usize,16758864543905427364_usize,4_usize,6_usize];
_8.2 = _10 as i32;
_11.1 = 183750579769906751868907189860546343845_u128 as u64;
_8.2 = 1485931153_i32 << _8.0;
_5 = [7253101038664406615_usize,17953117424998948824_usize,17282133461018724211_usize,1125707707125715951_usize,15906903331109896414_usize,11169163194853438037_usize,11912893543869420597_usize];
_12.0 = _1.0 & _1.0;
Call(_12.0 = fn6(_3, _1.0, _10, _1, _8.0, _1, _1.1, _3, _1.1, _1.1, _8.2, _10, _1, _3, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_8.0 = !15735_u16;
_1 = (_11.1, _4);
_8.1 = !107_u8;
_2 = _1.1;
_4 = [6727848643817669689_usize,6995682801935991875_usize,7_usize,714085106279361030_usize,8119715053530166000_usize,4_usize,7_usize];
_13 = (-9223372036854775808_isize);
match _13 {
340282366920938463454151235394913435648 => bb5,
_ => bb2
}
}
bb15 = {
_5 = [13348625818639553015_usize,6_usize,13306319967324152636_usize,16235367689650152816_usize,6998743211241006475_usize,3848944225556542521_usize,3_usize];
_11.2 = _2;
_1.0 = _12.0;
_13 = 9223372036854775807_isize + 77_isize;
_11.0 = 267274791064226914401621214469745343479_u128;
_1.1 = [6_usize,0_usize,2_usize,3_usize,4535403139291111604_usize,879645790959157833_usize,6_usize];
_11.0 = 14536926854473768779060193365405021529_u128 >> _12.0;
_1.0 = 74_i8 as u64;
_12 = (_11.1,);
_3 = _2;
_13 = _8.1 as isize;
_11.1 = !_12.0;
_12.0 = 26_i8 as u64;
_1.0 = !_12.0;
_11.2 = [7_usize,4_usize,3_usize,6_usize,16838170300902638125_usize,3_usize,1989508731789229969_usize];
_1 = (_12.0, _3);
_11.0 = 242494940075245245591885528745526059542_u128;
_1 = (_12.0, _2);
match _11.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
242494940075245245591885528745526059542 => bb9,
_ => bb8
}
}
bb16 = {
_8.0 = !15735_u16;
_1 = (_11.1, _4);
_8.1 = !107_u8;
_2 = _1.1;
_4 = [6727848643817669689_usize,6995682801935991875_usize,7_usize,714085106279361030_usize,8119715053530166000_usize,4_usize,7_usize];
_13 = (-9223372036854775808_isize);
match _13 {
340282366920938463454151235394913435648 => bb5,
_ => bb2
}
}
bb17 = {
_1.0 = _15 as u64;
_1.1 = [8097023872724900626_usize,6_usize,16162124685957070610_usize,2821191092628173991_usize,13840000807327456_usize,15668848947360239609_usize,16839561546473701802_usize];
_8.2 = 1989278761_i32 << _1.0;
_17 = _18;
_11.2 = [4_usize,7_usize,17748025984562238530_usize,5_usize,0_usize,3_usize,4_usize];
_8.1 = 15_u8;
_8 = (46864_u16, 82_u8, (-2028953976_i32));
_11.0 = !93532369416676055253163508492348939377_u128;
_21 = 4_usize as i16;
_19 = _8.0 ^ _8.0;
_20 = _11.0 as f32;
RET = _5;
_5 = _1.1;
_7 = [_19,_19,_19,_8.0];
_1.0 = _12.0;
_11.1 = _6 as u64;
_18 = -_17;
_11.0 = 202313445913472745362695311764034515358_u128 - 169483202209733187693557433509757687748_u128;
_22.2 = _21 - _21;
Goto(bb18)
}
bb18 = {
Call(_23 = dump_var(5_usize, 6_usize, Move(_6), 2_usize, Move(_2), 19_usize, Move(_19), 13_usize, Move(_13)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_23 = dump_var(5_usize, 10_usize, Move(_10), 8_usize, Move(_8), 15_usize, Move(_15), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [usize; 7],mut _2: u64,mut _3: bool,mut _4: (u64, [usize; 7]),mut _5: u16,mut _6: (u64, [usize; 7]),mut _7: [usize; 7],mut _8: [usize; 7],mut _9: [usize; 7],mut _10: [usize; 7],mut _11: i32,mut _12: bool,mut _13: (u64, [usize; 7]),mut _14: [usize; 7],mut _15: bool) -> u64 {
mir! {
type RET = u64;
let _16: u8;
let _17: isize;
let _18: f32;
let _19: [u16; 3];
let _20: bool;
let _21: *mut bool;
let _22: (u64, [usize; 7]);
let _23: ();
let _24: ();
{
RET = _13.0;
_16 = !253_u8;
RET = 70982751050539327473234989520403054147_i128 as u64;
_17 = (-9223372036854775808_isize);
_6.1 = [515480873826301631_usize,9028556388802836290_usize,5_usize,0_usize,7_usize,15213174243928310602_usize,4178651894447055876_usize];
_14 = [2_usize,15649636644385777043_usize,7_usize,18422145571461410561_usize,5_usize,6_usize,7_usize];
_8 = _4.1;
_4.0 = _6.0 >> _13.0;
_7 = [2_usize,7_usize,3289221425095888652_usize,6655331279860415396_usize,10274157661227639506_usize,5332429925590124681_usize,5702261552966483513_usize];
_11 = 563063863_i32;
_9 = [7_usize,912155614792679852_usize,15521586696291117415_usize,2043946254838021446_usize,4_usize,8263023368122160458_usize,7017785776515171856_usize];
_6.1 = _13.1;
_5 = !1504_u16;
Call(_3 = fn7(_13.1, _10, _6.0, _6.0, _6.1, _13.0, _4, _6.0, _12, _13.0, _6.0, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = _13.1;
_21 = core::ptr::addr_of_mut!(_15);
RET = _4.0;
_22 = _6;
_13 = (RET, _22.1);
_13 = (_22.0, _22.1);
_19 = [_5,_5,_5];
_4.0 = RET;
Goto(bb2)
}
bb2 = {
Call(_23 = dump_var(6_usize, 3_usize, Move(_3), 12_usize, Move(_12), 13_usize, Move(_13), 14_usize, Move(_14)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_23 = dump_var(6_usize, 4_usize, Move(_4), 7_usize, Move(_7), 19_usize, Move(_19), 1_usize, Move(_1)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_23 = dump_var(6_usize, 11_usize, Move(_11), 24_usize, _24, 24_usize, _24, 24_usize, _24), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [usize; 7],mut _2: [usize; 7],mut _3: u64,mut _4: u64,mut _5: [usize; 7],mut _6: u64,mut _7: (u64, [usize; 7]),mut _8: u64,mut _9: bool,mut _10: u64,mut _11: u64,mut _12: (u64, [usize; 7])) -> bool {
mir! {
type RET = bool;
let _13: (u128, u64, [usize; 7], &'static f32);
let _14: ();
let _15: ();
{
_12 = _7;
_12.0 = 335818325_u32 as u64;
_4 = '\u{ffa5d}' as u64;
_7.1 = [17596257819039223898_usize,1617464443501895889_usize,6_usize,7_usize,1_usize,5_usize,7_usize];
_2 = _1;
_1 = [1026748512876140158_usize,4881975032823433226_usize,7_usize,1_usize,9561053704949018927_usize,201113074729895673_usize,9539618345120569278_usize];
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
1540005540250734428 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
RET = !_9;
RET = _9;
_9 = !RET;
_1 = [5_usize,17980209471378443937_usize,7_usize,1799482422580203600_usize,3_usize,8537136995906422060_usize,11324729090475916694_usize];
_11 = !_7.0;
_12 = _7;
_10 = !_7.0;
_4 = _6 % _6;
_12.0 = _7.0 - _4;
_2 = [3_usize,9516546538072787767_usize,16914282929721006373_usize,3_usize,6638525062043651104_usize,15701090808263473978_usize,3031542536318570625_usize];
_13.1 = !_11;
_12.0 = (-120135089250769164132035546768897515653_i128) as u64;
RET = !_9;
_13.2 = [7_usize,13339870542199811400_usize,6_usize,16645429725187788605_usize,3893213996681495937_usize,5971073318212870312_usize,11333322604373707571_usize];
_7.1 = [5_usize,7714463175733103499_usize,17246930523276242617_usize,1_usize,5_usize,11425626321095707439_usize,0_usize];
RET = !_9;
_13.1 = _11;
_7 = (_3, _1);
_8 = !_6;
_8 = _10 ^ _3;
_8 = _4 << _10;
Goto(bb7)
}
bb7 = {
Call(_14 = dump_var(7_usize, 11_usize, Move(_11), 10_usize, Move(_10), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_14 = dump_var(7_usize, 8_usize, Move(_8), 1_usize, Move(_1), 15_usize, _15, 15_usize, _15), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [usize; 7],mut _2: [usize; 7],mut _3: [usize; 7]) -> (u64, [usize; 7]) {
mir! {
type RET = (u64, [usize; 7]);
let _4: usize;
let _5: isize;
let _6: Adt58;
let _7: [isize; 4];
let _8: [u16; 4];
let _9: f64;
let _10: ();
let _11: ();
{
RET.1 = [1_usize,2_usize,3_usize,5_usize,4426259349150120027_usize,6183250309258540369_usize,15729432826136738403_usize];
RET = (8499060851790861049_u64, _2);
_1 = RET.1;
RET.0 = 12752780118765773101_u64 & 7821703147589625177_u64;
_3 = [0_usize,17957108393846289539_usize,14700358863423777321_usize,16974293404290014654_usize,8239038362634530383_usize,5_usize,6144884324440767636_usize];
_3 = [11715807068025418188_usize,3_usize,4_usize,5_usize,1_usize,5_usize,0_usize];
RET.1 = [5163913965795220070_usize,3_usize,1_usize,6_usize,5708578780527208169_usize,5974232310123065849_usize,3_usize];
RET.1 = _2;
RET.0 = 14518219212144871045_u64;
_1 = [661331352101726830_usize,0_usize,18405492243763520930_usize,13740869001187944175_usize,3_usize,3_usize,0_usize];
RET.1 = [2842526783231171200_usize,2_usize,9754153854414400946_usize,3_usize,6_usize,16594886180628836598_usize,2600320315948226838_usize];
_1 = _2;
RET.0 = (-3620348705557610790_i64) as u64;
_3 = _1;
Goto(bb1)
}
bb1 = {
_4 = !6000502961431946364_usize;
_1 = [_4,_4,_4,_4,_4,_4,_4];
_4 = (-57_isize) as usize;
RET = (15805848318677556042_u64, _2);
_3 = _2;
RET.1 = [_4,_4,_4,_4,_4,_4,_4];
RET.0 = !5092262215275718501_u64;
_1 = [_4,_4,_4,_4,_4,_4,_4];
Call(RET = fn9(_3, _2, _2, _2, _2, _3, _3, _2, _2, _3, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = (12506741105190687550_u64, _3);
_5 = -45_isize;
_4 = 5_usize >> RET.0;
_4 = !16844072588452584021_usize;
_2 = [_4,_4,_4,_4,_4,_4,_4];
RET.1 = [_4,_4,_4,_4,_4,_4,_4];
RET.0 = !11275477811571766646_u64;
RET = (18107714379314465199_u64, _3);
_2 = [_4,_4,_4,_4,_4,_4,_4];
_1 = [_4,_4,_4,_4,_4,_4,_4];
RET.0 = 5715846555422116135_u64 >> _4;
RET.0 = !18033521944480659523_u64;
_5 = (-9223372036854775808_isize);
_9 = 37920538490974819460626934208955773676_i128 as f64;
RET = (13648366823365104549_u64, _3);
_7 = [_5,_5,_5,_5];
Goto(bb3)
}
bb3 = {
Call(_10 = dump_var(8_usize, 3_usize, Move(_3), 2_usize, Move(_2), 4_usize, Move(_4), 11_usize, _11), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [usize; 7],mut _2: [usize; 7],mut _3: [usize; 7],mut _4: [usize; 7],mut _5: [usize; 7],mut _6: [usize; 7],mut _7: [usize; 7],mut _8: [usize; 7],mut _9: [usize; 7],mut _10: [usize; 7],mut _11: [usize; 7],mut _12: [usize; 7]) -> (u64, [usize; 7]) {
mir! {
type RET = (u64, [usize; 7]);
let _13: [u16; 3];
let _14: Adt44;
let _15: Adt47;
let _16: ();
let _17: ();
{
_3 = _5;
_8 = [5_usize,14996052592490217403_usize,7955840127503857083_usize,6_usize,6228861657576794777_usize,14016881081488644976_usize,4_usize];
RET = (17282630545079142583_u64, _2);
_3 = RET.1;
RET = (5076276104711259979_u64, _12);
_5 = _2;
_4 = _2;
_11 = [7_usize,8792501090388132848_usize,2_usize,0_usize,6_usize,10678407056198913609_usize,0_usize];
_7 = [1_usize,14638241770066426858_usize,0_usize,4702649282568323305_usize,15201409810276716932_usize,1014248199789691197_usize,3_usize];
RET = (3941361796736705692_u64, _8);
_11 = [1_usize,5_usize,11898674745612287776_usize,0_usize,0_usize,13171201286253502183_usize,5_usize];
RET.1 = [7_usize,3_usize,1095377084902929061_usize,4_usize,4338308453120707247_usize,6_usize,4_usize];
RET = (15618130833864622312_u64, _10);
Goto(bb1)
}
bb1 = {
Call(_16 = dump_var(9_usize, 3_usize, Move(_3), 8_usize, Move(_8), 9_usize, Move(_9), 12_usize, Move(_12)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_16 = dump_var(9_usize, 1_usize, Move(_1), 11_usize, Move(_11), 17_usize, _17, 17_usize, _17), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: u64,mut _2: (u64, [usize; 7]),mut _3: [usize; 7],mut _4: (u64, [usize; 7]),mut _5: [usize; 7],mut _6: [usize; 7],mut _7: [usize; 7],mut _8: [usize; 7],mut _9: [usize; 7]) -> f64 {
mir! {
type RET = f64;
let _10: char;
let _11: isize;
let _12: [u16; 3];
let _13: Adt57;
let _14: usize;
let _15: [i16; 5];
let _16: Adt53;
let _17: [u16; 4];
let _18: Adt49;
let _19: u64;
let _20: f64;
let _21: [i64; 1];
let _22: u8;
let _23: [isize; 4];
let _24: *mut [u16; 3];
let _25: [isize; 4];
let _26: f32;
let _27: isize;
let _28: isize;
let _29: Adt54;
let _30: Adt51;
let _31: [u16; 4];
let _32: f32;
let _33: i8;
let _34: i32;
let _35: [isize; 4];
let _36: [i64; 1];
let _37: char;
let _38: char;
let _39: char;
let _40: *mut u16;
let _41: *mut [u16; 3];
let _42: Adt50;
let _43: (u64, [usize; 7]);
let _44: isize;
let _45: ();
let _46: ();
{
_3 = [3_usize,1_usize,15340068989212142571_usize,11632093660956314211_usize,2_usize,14256794402697240306_usize,7_usize];
_4.1 = [3_usize,0_usize,5330999863916304836_usize,5603710246947670919_usize,2_usize,0_usize,5_usize];
_7 = _6;
Goto(bb1)
}
bb1 = {
RET = 138179305386792111095999992394094656146_u128 as f64;
_7 = [6_usize,7_usize,17692537608485015904_usize,3_usize,2_usize,2988246829420245982_usize,7_usize];
RET = 1085039613_u32 as f64;
_10 = '\u{2f721}';
_4.1 = [5_usize,12898681437393277153_usize,4_usize,4_usize,7_usize,0_usize,4_usize];
_11 = !(-9223372036854775808_isize);
RET = 59403_u16 as f64;
_10 = '\u{2d30c}';
RET = 201199109839147658024228931621711300607_u128 as f64;
_10 = '\u{f03f4}';
Call(_3 = core::intrinsics::transmute(_2.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = !(-107_isize);
_11 = (-9223372036854775808_isize);
_7 = [873994151670338975_usize,2_usize,13259738374547819394_usize,4231679068639484058_usize,7_usize,4_usize,2_usize];
_5 = [5_usize,6_usize,15530042966890892936_usize,5_usize,4_usize,5_usize,17403230235953228311_usize];
_1 = _2.0 << _2.0;
_11 = (-836221632_i32) as isize;
_5 = _8;
RET = 705301151_i32 as f64;
_3 = [6_usize,3_usize,1_usize,16993545992024631219_usize,8103225341549980174_usize,7_usize,3_usize];
RET = 1741099781_i32 as f64;
_9 = [13514560863193097172_usize,2_usize,4_usize,7_usize,3_usize,7948685198384046357_usize,14080932876247661921_usize];
_10 = '\u{e11a3}';
_1 = 33_i8 as u64;
_11 = 3242996779_u32 as isize;
_2.0 = !_4.0;
_14 = 6558032833723432594_usize;
_10 = '\u{7a12}';
_4.1 = [_14,_14,_14,_14,_14,_14,_14];
_11 = -9223372036854775807_isize;
_3 = [_14,_14,_14,_14,_14,_14,_14];
_8 = [_14,_14,_14,_14,_14,_14,_14];
Goto(bb3)
}
bb3 = {
RET = 2616805965_u32 as f64;
_10 = '\u{10961d}';
_4.0 = _2.0;
_3 = [_14,_14,_14,_14,_14,_14,_14];
RET = 121_i8 as f64;
RET = (-116_i8) as f64;
_7 = [_14,_14,_14,_14,_14,_14,_14];
_7 = [_14,_14,_14,_14,_14,_14,_14];
_17 = [33228_u16,60141_u16,25084_u16,53368_u16];
_12 = [58142_u16,32428_u16,25960_u16];
_14 = 7_usize | 5_usize;
_4.0 = !_2.0;
_20 = (-42_i8) as f64;
_6 = [_14,_14,_14,_14,_14,_14,_14];
_7 = _5;
_8 = _5;
Goto(bb4)
}
bb4 = {
_2.1 = [_14,_14,_14,_14,_14,_14,_14];
_15 = [(-28563_i16),(-8881_i16),20890_i16,11859_i16,(-32269_i16)];
RET = (-974961626_i32) as f64;
_24 = core::ptr::addr_of_mut!(_12);
_25 = [_11,_11,_11,_11];
_15 = [17100_i16,(-27021_i16),(-30564_i16),29847_i16,23505_i16];
_15 = [30134_i16,(-10998_i16),13577_i16,12043_i16,21704_i16];
_2.1 = [_14,_14,_14,_14,_14,_14,_14];
_5 = [_14,_14,_14,_14,_14,_14,_14];
_12 = [50639_u16,35702_u16,23682_u16];
_23 = [_11,_11,_11,_11];
_27 = _11 - _11;
_1 = !_2.0;
_30.fld6.fld4 = -(-3490_i16);
_5 = _7;
_30.fld5.0 = 831_u16;
_30.fld5.1 = !64_u8;
_30.fld6.fld2.1.1.0 = _2.0;
_22 = _30.fld5.1 >> _30.fld6.fld2.1.1.0;
_27 = -_11;
_21 = [2384047991254617242_i64];
_30.fld0 = (-544478355_i32) as u64;
_30.fld6.fld5.0 = RET;
Goto(bb5)
}
bb5 = {
_30.fld2 = [_30.fld6.fld4,_30.fld6.fld4,_30.fld6.fld4,_30.fld6.fld4,_30.fld6.fld4];
_7 = [_14,_14,_14,_14,_14,_14,_14];
_30.fld3 = [true,false];
_28 = _27 << _4.0;
_8 = [_14,_14,_14,_14,_14,_14,_14];
RET = _30.fld6.fld5.0 - _30.fld6.fld5.0;
RET = _30.fld6.fld5.0 * _20;
_19 = !_2.0;
_22 = !_30.fld5.1;
_2.1 = [_14,_14,_14,_14,_14,_14,_14];
_2.0 = _1 >> _19;
_30.fld6.fld0.1 = _5;
_4 = (_30.fld6.fld2.1.1.0, _5);
_19 = _1;
_21 = [6062676487710301445_i64];
RET = -_30.fld6.fld5.0;
RET = _30.fld6.fld4 as f64;
_7 = [_14,_14,_14,_14,_14,_14,_14];
_2 = (_30.fld6.fld2.1.1.0, _5);
match _30.fld5.0 {
0 => bb3,
1 => bb4,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
831 => bb12,
_ => bb11
}
}
bb6 = {
_2.1 = [_14,_14,_14,_14,_14,_14,_14];
_15 = [(-28563_i16),(-8881_i16),20890_i16,11859_i16,(-32269_i16)];
RET = (-974961626_i32) as f64;
_24 = core::ptr::addr_of_mut!(_12);
_25 = [_11,_11,_11,_11];
_15 = [17100_i16,(-27021_i16),(-30564_i16),29847_i16,23505_i16];
_15 = [30134_i16,(-10998_i16),13577_i16,12043_i16,21704_i16];
_2.1 = [_14,_14,_14,_14,_14,_14,_14];
_5 = [_14,_14,_14,_14,_14,_14,_14];
_12 = [50639_u16,35702_u16,23682_u16];
_23 = [_11,_11,_11,_11];
_27 = _11 - _11;
_1 = !_2.0;
_30.fld6.fld4 = -(-3490_i16);
_5 = _7;
_30.fld5.0 = 831_u16;
_30.fld5.1 = !64_u8;
_30.fld6.fld2.1.1.0 = _2.0;
_22 = _30.fld5.1 >> _30.fld6.fld2.1.1.0;
_27 = -_11;
_21 = [2384047991254617242_i64];
_30.fld0 = (-544478355_i32) as u64;
_30.fld6.fld5.0 = RET;
Goto(bb5)
}
bb7 = {
RET = 2616805965_u32 as f64;
_10 = '\u{10961d}';
_4.0 = _2.0;
_3 = [_14,_14,_14,_14,_14,_14,_14];
RET = 121_i8 as f64;
RET = (-116_i8) as f64;
_7 = [_14,_14,_14,_14,_14,_14,_14];
_7 = [_14,_14,_14,_14,_14,_14,_14];
_17 = [33228_u16,60141_u16,25084_u16,53368_u16];
_12 = [58142_u16,32428_u16,25960_u16];
_14 = 7_usize | 5_usize;
_4.0 = !_2.0;
_20 = (-42_i8) as f64;
_6 = [_14,_14,_14,_14,_14,_14,_14];
_7 = _5;
_8 = _5;
Goto(bb4)
}
bb8 = {
_11 = !(-107_isize);
_11 = (-9223372036854775808_isize);
_7 = [873994151670338975_usize,2_usize,13259738374547819394_usize,4231679068639484058_usize,7_usize,4_usize,2_usize];
_5 = [5_usize,6_usize,15530042966890892936_usize,5_usize,4_usize,5_usize,17403230235953228311_usize];
_1 = _2.0 << _2.0;
_11 = (-836221632_i32) as isize;
_5 = _8;
RET = 705301151_i32 as f64;
_3 = [6_usize,3_usize,1_usize,16993545992024631219_usize,8103225341549980174_usize,7_usize,3_usize];
RET = 1741099781_i32 as f64;
_9 = [13514560863193097172_usize,2_usize,4_usize,7_usize,3_usize,7948685198384046357_usize,14080932876247661921_usize];
_10 = '\u{e11a3}';
_1 = 33_i8 as u64;
_11 = 3242996779_u32 as isize;
_2.0 = !_4.0;
_14 = 6558032833723432594_usize;
_10 = '\u{7a12}';
_4.1 = [_14,_14,_14,_14,_14,_14,_14];
_11 = -9223372036854775807_isize;
_3 = [_14,_14,_14,_14,_14,_14,_14];
_8 = [_14,_14,_14,_14,_14,_14,_14];
Goto(bb3)
}
bb9 = {
RET = 138179305386792111095999992394094656146_u128 as f64;
_7 = [6_usize,7_usize,17692537608485015904_usize,3_usize,2_usize,2988246829420245982_usize,7_usize];
RET = 1085039613_u32 as f64;
_10 = '\u{2f721}';
_4.1 = [5_usize,12898681437393277153_usize,4_usize,4_usize,7_usize,0_usize,4_usize];
_11 = !(-9223372036854775808_isize);
RET = 59403_u16 as f64;
_10 = '\u{2d30c}';
RET = 201199109839147658024228931621711300607_u128 as f64;
_10 = '\u{f03f4}';
Call(_3 = core::intrinsics::transmute(_2.1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_31 = [_30.fld5.0,_30.fld5.0,_30.fld5.0,_30.fld5.0];
_30.fld6.fld0.0 = !_30.fld6.fld2.1.1.0;
_30.fld6.fld2.1.1 = (_1, _30.fld6.fld0.1);
RET = _20;
_10 = '\u{ad533}';
_2 = (_30.fld6.fld2.1.1.0, _30.fld6.fld2.1.1.1);
_2.1 = [_14,_14,_14,_14,_14,_14,_14];
match _30.fld5.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
831 => bb13,
_ => bb11
}
}
bb13 = {
_2.0 = _1 << _28;
_30.fld0 = _14 as u64;
_30.fld6.fld2.1.1 = (_19, _5);
_30.fld6.fld2.0 = core::ptr::addr_of_mut!(_34);
_24 = core::ptr::addr_of_mut!((*_24));
_30.fld6.fld2.1.2 = 1967182219_u32 & 2327093096_u32;
_2.1 = _5;
_2.1 = _5;
_26 = _30.fld6.fld2.1.2 as f32;
_30.fld6.fld5.1 = [_14,_14,_14,_14,_14,_14,_14];
_27 = (-96902784419029118043217057517783254918_i128) as isize;
_15 = [_30.fld6.fld4,_30.fld6.fld4,_30.fld6.fld4,_30.fld6.fld4,_30.fld6.fld4];
_7 = [_14,_14,_14,_14,_14,_14,_14];
_7 = [_14,_14,_14,_14,_14,_14,_14];
_38 = _10;
match _30.fld5.0 {
831 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_30.fld6.fld1 = _30.fld5.0 ^ _30.fld5.0;
_32 = _26 - _26;
_30.fld2 = _15;
_33 = (-975830797_i32) as i8;
_5 = [_14,_14,_14,_14,_14,_14,_14];
_30.fld6.fld5.3 = [688617890516555176762294211702666880_i128,(-65561099515062654571117848917509828423_i128),(-162089862983160346020847196286196844174_i128),93901280242687057728454113916886177181_i128,147406391771950823510672963951151631157_i128,19618563215269041542559939706679396704_i128];
_30.fld6.fld5.3 = [17182088000457018397109962959719480458_i128,46256236523500343252366941041182512657_i128,159895779158759315947094247914183508450_i128,(-68105457599056736446591251312729905166_i128),88859206803562219285608561631734311050_i128,(-159656257506241097656015327867205890483_i128)];
_42.fld0.fld0.1.1 = _30.fld6.fld2.1.1.1;
_4.1 = _30.fld6.fld0.1;
_1 = !_30.fld6.fld2.1.1.0;
_42.fld3.0 = true as u16;
_42.fld3 = (_30.fld5.0, _30.fld5.1, 1708971732_i32);
_42.fld0.fld2 = 45172513578973575897275617219778339383_u128 | 183099427757851954817867051063473275042_u128;
_30.fld6.fld1 = _30.fld5.0 & _42.fld3.0;
_30.fld6.fld5.2 = _30.fld6.fld5.0 as i16;
_42.fld6.1.1 = _30.fld6.fld0;
Goto(bb16)
}
bb16 = {
Call(_45 = dump_var(10_usize, 8_usize, Move(_8), 27_usize, Move(_27), 25_usize, Move(_25), 38_usize, Move(_38)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(10_usize, 33_usize, Move(_33), 6_usize, Move(_6), 21_usize, Move(_21), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(10_usize, 28_usize, Move(_28), 9_usize, Move(_9), 4_usize, Move(_4), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [usize; 7],mut _2: (u64, [usize; 7]),mut _3: [usize; 7],mut _4: [usize; 7],mut _5: [usize; 7],mut _6: [usize; 7],mut _7: [usize; 7],mut _8: (u64, [usize; 7]),mut _9: [usize; 7],mut _10: [usize; 7],mut _11: [usize; 7],mut _12: (u64, [usize; 7]),mut _13: (u64, [usize; 7])) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _14: [i128; 6];
let _15: *mut i32;
let _16: (u64,);
let _17: [u16; 4];
let _18: i16;
let _19: Adt42;
let _20: bool;
let _21: (u16, u8, i32);
let _22: *mut [usize; 3];
let _23: i64;
let _24: i32;
let _25: [u16; 3];
let _26: Adt47;
let _27: isize;
let _28: char;
let _29: f64;
let _30: (u64, [usize; 7]);
let _31: isize;
let _32: [i16; 5];
let _33: isize;
let _34: f64;
let _35: f64;
let _36: (*mut i32, (*mut bool, (u64, [usize; 7]), u32));
let _37: (u16, u8, i32);
let _38: Adt52;
let _39: f64;
let _40: [u16; 3];
let _41: char;
let _42: char;
let _43: usize;
let _44: [u16; 3];
let _45: isize;
let _46: [isize; 4];
let _47: Adt51;
let _48: f64;
let _49: (f64, [usize; 7], i16, [i128; 6]);
let _50: i8;
let _51: bool;
let _52: [i16; 5];
let _53: [isize; 4];
let _54: f64;
let _55: [i128; 6];
let _56: f32;
let _57: ();
let _58: ();
{
_2.0 = _8.0;
_9 = _10;
_10 = _13.1;
_3 = [7_usize,5_usize,4282083767660247637_usize,5_usize,4_usize,508041139669421323_usize,6_usize];
RET = [52341_u16,28231_u16,30596_u16,47671_u16];
_8 = (_12.0, _4);
_6 = _13.1;
_13 = (_2.0, _5);
_8.0 = (-6019_i16) as u64;
_13.1 = [13284286155482892067_usize,10791000277349765458_usize,4_usize,15978245055006691160_usize,3_usize,2954014499697753013_usize,2825876079611066321_usize];
_13.1 = [6_usize,7_usize,7_usize,6_usize,8529964577462210836_usize,3302111758668108508_usize,4906387871110206162_usize];
_12.1 = [3_usize,8675945954630838425_usize,6_usize,11836245736130616075_usize,1_usize,10230307075277362772_usize,5_usize];
_6 = [15768349462127973116_usize,4105762713132533896_usize,0_usize,1_usize,17094167790421393994_usize,16227550223612972448_usize,430685789687821660_usize];
_14 = [61096532619556067025013660522670361505_i128,128204535023751579592636575479626041562_i128,(-40571994420686767209238136566606721071_i128),(-56502822348450970517615163919870940217_i128),(-99717821548482176593828995035113732419_i128),(-80323478150455841722942471475780200699_i128)];
_2.0 = _13.0;
_2 = _8;
_3 = [6_usize,2_usize,6_usize,7_usize,5565364874617668873_usize,0_usize,13524926084930414819_usize];
_2.0 = _12.0 | _12.0;
_12.1 = [0_usize,12168658988448077018_usize,6_usize,7664716531038013085_usize,11603228633607485809_usize,12162977690622871519_usize,2_usize];
_12 = _2;
_2.0 = _13.0 * _12.0;
_12.0 = _2.0;
RET = [12889_u16,17756_u16,24457_u16,40397_u16];
_12.1 = [12609713557215706992_usize,9874775182753391670_usize,7249972629810295216_usize,2126711716313151761_usize,9646764561909413604_usize,6_usize,13806946377021369261_usize];
_10 = [4_usize,14355764228578281278_usize,2_usize,717344487091099115_usize,3191410828704696895_usize,16156413048511079676_usize,6803348275805870219_usize];
_16.0 = 968033643_u32 as u64;
Goto(bb1)
}
bb1 = {
_13.0 = _16.0 + _12.0;
_5 = [12561683307101066982_usize,18306156312728984278_usize,4_usize,2_usize,12773039142708411614_usize,4_usize,5_usize];
_13.0 = !_2.0;
_2 = (_13.0, _4);
_3 = _11;
_9 = [5_usize,6_usize,4_usize,1_usize,14708845312207819655_usize,13725620084137167034_usize,14748737271475944820_usize];
_5 = [5_usize,3_usize,1_usize,5_usize,4_usize,5_usize,12448568597546713562_usize];
Goto(bb2)
}
bb2 = {
_16 = (_2.0,);
_11 = _4;
_14 = [(-116023068401211434120684109702659042390_i128),(-158873720183787018567151993409385564578_i128),(-111296849684703593658658311112882598410_i128),112785881677037102427410792691095612608_i128,102618724648758429368862869009537361368_i128,(-106099511378384941735435864145886296102_i128)];
_14 = [(-147387498457820849433135886369543963541_i128),36925173612192295203049904841273148968_i128,93632740060147361993760808106837849383_i128,(-29080192535116154682430648897044618164_i128),(-65745155172211067616213033347274901733_i128),(-155449050695677062311490575256739876127_i128)];
_3 = [12006028319511608785_usize,16554529897700190220_usize,7_usize,6534489100520968284_usize,5_usize,3_usize,13945661148999342353_usize];
RET = [55761_u16,64538_u16,3159_u16,61397_u16];
_18 = 0_usize as i16;
_16 = (_12.0,);
_13 = (_2.0, _4);
_24 = _18 as i32;
_5 = [1_usize,3669490385105380079_usize,3_usize,7_usize,2_usize,3068620457813494384_usize,4_usize];
_5 = _2.1;
_8.1 = [3_usize,14900408905418014297_usize,8283868206585131342_usize,3_usize,6_usize,13752352444716409079_usize,6699029406904610553_usize];
_20 = _2.0 < _12.0;
Call(_11 = fn12(_7, _13, _2, _16.0, _1, _2.1, _13.1, _2, _2.1, _13.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8 = (_2.0, _4);
_17 = [43452_u16,61546_u16,7062_u16,65410_u16];
_2.1 = _4;
_8 = (_12.0, _4);
_1 = _8.1;
_1 = _2.1;
_21 = (40124_u16, 27_u8, _24);
_21.2 = _24 | _24;
RET = [_21.0,_21.0,_21.0,_21.0];
_8.0 = _12.0;
_26.fld2.1.2 = 3902669483_u32 << _21.0;
_26.fld0 = _8;
_18 = -(-5659_i16);
_2 = (_26.fld0.0, _7);
_8 = (_26.fld0.0, _11);
_26.fld2.1.0 = core::ptr::addr_of_mut!(_20);
_12 = (_16.0, _4);
_25 = [_21.0,_21.0,_21.0];
_16.0 = !_8.0;
_23 = -3704662332932426989_i64;
_29 = _12.0 as f64;
_8.1 = [4_usize,5019592609267611048_usize,3_usize,5_usize,4101275491682790286_usize,1_usize,4598132394113498628_usize];
_26.fld0.0 = _16.0 & _8.0;
_4 = _6;
_26.fld2.0 = core::ptr::addr_of_mut!(_21.2);
_26.fld2.1.1 = _12;
match _21.0 {
0 => bb1,
1 => bb2,
40124 => bb5,
_ => bb4
}
}
bb4 = {
_16 = (_2.0,);
_11 = _4;
_14 = [(-116023068401211434120684109702659042390_i128),(-158873720183787018567151993409385564578_i128),(-111296849684703593658658311112882598410_i128),112785881677037102427410792691095612608_i128,102618724648758429368862869009537361368_i128,(-106099511378384941735435864145886296102_i128)];
_14 = [(-147387498457820849433135886369543963541_i128),36925173612192295203049904841273148968_i128,93632740060147361993760808106837849383_i128,(-29080192535116154682430648897044618164_i128),(-65745155172211067616213033347274901733_i128),(-155449050695677062311490575256739876127_i128)];
_3 = [12006028319511608785_usize,16554529897700190220_usize,7_usize,6534489100520968284_usize,5_usize,3_usize,13945661148999342353_usize];
RET = [55761_u16,64538_u16,3159_u16,61397_u16];
_18 = 0_usize as i16;
_16 = (_12.0,);
_13 = (_2.0, _4);
_24 = _18 as i32;
_5 = [1_usize,3669490385105380079_usize,3_usize,7_usize,2_usize,3068620457813494384_usize,4_usize];
_5 = _2.1;
_8.1 = [3_usize,14900408905418014297_usize,8283868206585131342_usize,3_usize,6_usize,13752352444716409079_usize,6699029406904610553_usize];
_20 = _2.0 < _12.0;
Call(_11 = fn12(_7, _13, _2, _16.0, _1, _2.1, _13.1, _2, _2.1, _13.1), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_26.fld5.3 = [(-75026049820079721228216436380197376996_i128),(-37513518340742475339842615807978922420_i128),(-95787611192624745059464609954920508424_i128),102020384009861771813959977632747657928_i128,23006547567107997708735143338420697586_i128,96105085706968176731633864659894785271_i128];
_8.0 = _26.fld0.0;
_28 = '\u{83d63}';
_21 = (59713_u16, 138_u8, _24);
_26.fld4 = (-120_isize) as i16;
_26.fld2.1.0 = core::ptr::addr_of_mut!(_20);
_30 = (_8.0, _5);
_10 = _13.1;
_26.fld4 = !_18;
_26.fld1 = _28 as u16;
Goto(bb6)
}
bb6 = {
_8 = (_26.fld0.0, _13.1);
_26.fld5.2 = -_26.fld4;
_26.fld5.3 = [(-75293974637771825611796710776047159260_i128),28697215651350923618742519545469007224_i128,88889429686161482035185330119562562550_i128,153594260557071252834676395568015495490_i128,45100977136796304495070329076695463921_i128,(-37171808786746303470297042443932802213_i128)];
_5 = [3_usize,2_usize,17071422718763142071_usize,0_usize,4345396940152230514_usize,10081939105205004082_usize,2_usize];
RET = [_21.0,_21.0,_26.fld1,_26.fld1];
_26.fld5.2 = !_18;
_29 = 30_i8 as f64;
_15 = core::ptr::addr_of_mut!(_24);
_26.fld2.1.2 = 2790888353_u32 + 1316824646_u32;
_20 = _30.0 != _26.fld2.1.1.0;
_11 = [7_usize,2648405356077354567_usize,9560254402885410966_usize,12607581103097954053_usize,643078339246749513_usize,7_usize,0_usize];
_26.fld5 = (_29, _26.fld2.1.1.1, _18, _14);
_27 = (-4_isize);
_15 = core::ptr::addr_of_mut!((*_15));
_28 = '\u{95553}';
_26.fld1 = _23 as u16;
_3 = [4_usize,4_usize,1237808173737604964_usize,7188177298368251509_usize,6_usize,9315788269670738838_usize,2_usize];
_30.0 = !_8.0;
_13 = _30;
_8.0 = !_26.fld0.0;
_30.1 = [7_usize,13020137292346359873_usize,12980457781138030297_usize,4_usize,9301902158407383168_usize,7_usize,6_usize];
_26.fld2.1.0 = core::ptr::addr_of_mut!(_20);
_16 = (_8.0,);
_12 = (_13.0, _8.1);
Goto(bb7)
}
bb7 = {
_32 = [_18,_26.fld5.2,_26.fld4,_26.fld4,_26.fld4];
_21.2 = (*_15) | (*_15);
_35 = _26.fld5.0;
_26.fld4 = _21.1 as i16;
_21 = (_26.fld1, 250_u8, (*_15));
_26.fld2.0 = _15;
_36.1.1.1 = [17019603350763381016_usize,17891925785789926619_usize,7_usize,144541919741613854_usize,2_usize,0_usize,7_usize];
_26.fld5.3 = [127526987563112076127733327818404048231_i128,(-126844552006448345247746643341399344552_i128),6596932464903044345979395353037939891_i128,19421099098202203631571240575121535510_i128,164490215902055683601288207718082314073_i128,106899153960608884972609550376234658627_i128];
_31 = _27 + _27;
_37 = (_26.fld1, _21.1, _21.2);
_13.0 = _26.fld1 as u64;
_23 = 86_i8 as i64;
_26.fld1 = _37.0;
_26.fld0 = (_12.0, _12.1);
_36.1.2 = _26.fld2.1.2 * _26.fld2.1.2;
_2.0 = _28 as u64;
_12.0 = _16.0 >> _26.fld2.1.1.0;
_35 = _29 - _26.fld5.0;
_23 = !5548756178017018860_i64;
_34 = -_35;
_35 = _29;
_39 = -_34;
_26.fld5.3 = [156634111739207633382604958467628323940_i128,(-90035801709041723089987607650332775381_i128),(-125528957827551480910740538393584841149_i128),(-79661227155637428739892969423327689006_i128),64035623682338293165648163639233317579_i128,167071350989464095330399317123668835338_i128];
_12.1 = _7;
_1 = [7_usize,3552023970706139803_usize,5_usize,6_usize,0_usize,2285377425014993236_usize,3_usize];
match _37.1 {
0 => bb3,
250 => bb8,
_ => bb4
}
}
bb8 = {
_3 = [16451615736911059161_usize,17569877763694620030_usize,2_usize,9126064592043393437_usize,0_usize,7_usize,13603082770446740807_usize];
_21.1 = _37.1;
_13.0 = _34 as u64;
_6 = [10379946976861724596_usize,4_usize,1_usize,4_usize,2_usize,0_usize,353981161961739373_usize];
_41 = _28;
_37.2 = (*_15);
_20 = !true;
_26.fld5.2 = _26.fld4;
RET = [_21.0,_26.fld1,_37.0,_26.fld1];
_36.1.2 = _26.fld2.1.2;
_2.1 = [4817346791572406690_usize,10759663513274024205_usize,7_usize,2_usize,7_usize,11783879745673444728_usize,3_usize];
_28 = _41;
_21.0 = _37.0;
_11 = [1246733457742487439_usize,3_usize,15598818421865925137_usize,9322715308594436552_usize,9718718037959152004_usize,6_usize,3_usize];
_7 = [17610889472391183379_usize,7662743946606986296_usize,6_usize,2_usize,2_usize,17672624807897759609_usize,1_usize];
_26.fld2.1.1.1 = [6_usize,7_usize,3_usize,0_usize,9560052084346854972_usize,4_usize,3_usize];
_17 = [_37.0,_26.fld1,_21.0,_21.0];
_36 = (_26.fld2.0, _26.fld2.1);
_11 = _12.1;
Goto(bb9)
}
bb9 = {
_36.0 = _15;
_18 = _26.fld5.2;
_31 = 105231147657427826980791794819992455956_u128 as isize;
_36.1.0 = _26.fld2.1.0;
_2.1 = [7_usize,14988958656246847629_usize,5078775401303109213_usize,10910003513478489112_usize,1_usize,9748212509226282758_usize,3_usize];
_39 = _34;
_47.fld0 = _27 as u64;
_37.1 = _21.1 / _21.1;
_42 = _28;
_26.fld4 = _18;
match _27 {
0 => bb8,
1 => bb2,
2 => bb7,
3 => bb10,
340282366920938463463374607431768211452 => bb12,
_ => bb11
}
}
bb10 = {
_13.0 = _16.0 + _12.0;
_5 = [12561683307101066982_usize,18306156312728984278_usize,4_usize,2_usize,12773039142708411614_usize,4_usize,5_usize];
_13.0 = !_2.0;
_2 = (_13.0, _4);
_3 = _11;
_9 = [5_usize,6_usize,4_usize,1_usize,14708845312207819655_usize,13725620084137167034_usize,14748737271475944820_usize];
_5 = [5_usize,3_usize,1_usize,5_usize,4_usize,5_usize,12448568597546713562_usize];
Goto(bb2)
}
bb11 = {
_26.fld5.3 = [(-75026049820079721228216436380197376996_i128),(-37513518340742475339842615807978922420_i128),(-95787611192624745059464609954920508424_i128),102020384009861771813959977632747657928_i128,23006547567107997708735143338420697586_i128,96105085706968176731633864659894785271_i128];
_8.0 = _26.fld0.0;
_28 = '\u{83d63}';
_21 = (59713_u16, 138_u8, _24);
_26.fld4 = (-120_isize) as i16;
_26.fld2.1.0 = core::ptr::addr_of_mut!(_20);
_30 = (_8.0, _5);
_10 = _13.1;
_26.fld4 = !_18;
_26.fld1 = _28 as u16;
Goto(bb6)
}
bb12 = {
_26.fld2.1.1.1 = [6_usize,4_usize,17744392107102862865_usize,8904309107649336009_usize,7_usize,1_usize,3749832535551924929_usize];
_47.fld6.fld0 = (_12.0, _12.1);
_1 = [4_usize,6_usize,210559933788362556_usize,3_usize,8109553610023520882_usize,13526287438389768496_usize,3_usize];
_31 = _23 as isize;
_44 = [_37.0,_37.0,_21.0];
_47.fld6.fld5.1 = [1_usize,12421509286369333569_usize,8311022381682470311_usize,12299706807449693891_usize,5_usize,2_usize,0_usize];
_3 = [15859137952759457056_usize,4411944059721323783_usize,3_usize,3_usize,9388364772551792790_usize,3_usize,2_usize];
_47.fld6.fld2.1.1.0 = 11952385499960653370_usize as u64;
_26.fld5.3 = [(-164413197219135511394877448621425004917_i128),159196877439269344717278157786590974084_i128,(-64711616331928145327893436568038182060_i128),111330450030846623952618859427791862151_i128,(-88454861358667481161409587846838422220_i128),(-90170990982219573457992343397081578050_i128)];
_20 = false ^ false;
_1 = _26.fld0.1;
_36 = _26.fld2;
_47.fld5.1 = !_21.1;
_21.1 = _47.fld5.1;
_47.fld6.fld2.1.2 = _26.fld2.1.2;
Goto(bb13)
}
bb13 = {
_37.0 = _28 as u16;
_26.fld5.0 = _34;
_26.fld0.0 = 215636501288156664421181890669202537898_u128 as u64;
_47.fld2 = _32;
_21.0 = _26.fld1;
_26.fld4 = _26.fld5.2;
_8.1 = [8465799298199759303_usize,9636230968892935059_usize,16052664782209990306_usize,6_usize,2218585019025228431_usize,2148045376366830197_usize,2_usize];
_47.fld5.0 = _36.1.2 as u16;
_26.fld2.1.1 = (_16.0, _26.fld5.1);
_16.0 = _26.fld2.1.1.0 >> _37.1;
_47.fld6.fld1 = _21.0 * _47.fld5.0;
_21.0 = _47.fld5.0;
match _27 {
340282366920938463463374607431768211452 => bb14,
_ => bb7
}
}
bb14 = {
RET = _17;
_40 = [_26.fld1,_47.fld6.fld1,_47.fld5.0];
_47.fld5.2 = (*_15) ^ (*_15);
_40 = [_21.0,_21.0,_47.fld6.fld1];
_56 = _23 as f32;
_47.fld6.fld5 = (_26.fld5.0, _47.fld6.fld0.1, _18, _14);
Goto(bb15)
}
bb15 = {
Call(_57 = dump_var(11_usize, 32_usize, Move(_32), 21_usize, Move(_21), 25_usize, Move(_25), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_57 = dump_var(11_usize, 30_usize, Move(_30), 28_usize, Move(_28), 40_usize, Move(_40), 31_usize, Move(_31)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_57 = dump_var(11_usize, 20_usize, Move(_20), 13_usize, Move(_13), 16_usize, Move(_16), 18_usize, Move(_18)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_57 = dump_var(11_usize, 6_usize, Move(_6), 41_usize, Move(_41), 27_usize, Move(_27), 37_usize, Move(_37)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [usize; 7],mut _2: (u64, [usize; 7]),mut _3: (u64, [usize; 7]),mut _4: u64,mut _5: [usize; 7],mut _6: [usize; 7],mut _7: [usize; 7],mut _8: (u64, [usize; 7]),mut _9: [usize; 7],mut _10: [usize; 7]) -> [usize; 7] {
mir! {
type RET = [usize; 7];
let _11: [isize; 4];
let _12: Adt57;
let _13: [usize; 7];
let _14: isize;
let _15: f32;
let _16: (u64,);
let _17: (u64,);
let _18: isize;
let _19: isize;
let _20: Adt55;
let _21: *mut [u16; 3];
let _22: Adt45;
let _23: u64;
let _24: ();
let _25: ();
{
_3.0 = _2.0 - _4;
_9 = [0_usize,5_usize,12648353785106502461_usize,4_usize,0_usize,14360129499376128886_usize,5801564148824797597_usize];
_9 = [2343088317822835347_usize,0_usize,3_usize,6268822981601080504_usize,1229165643889351460_usize,7982322986228166332_usize,11016988086114353497_usize];
_3.1 = [7_usize,13457375578439803565_usize,6_usize,12414870470286379830_usize,4637594677860710372_usize,3_usize,8268624034442448334_usize];
_2.0 = !_3.0;
_11 = [9223372036854775807_isize,14_isize,9223372036854775807_isize,88_isize];
_2.1 = _8.1;
_8 = (_4, _7);
Goto(bb1)
}
bb1 = {
_8 = (_3.0, _10);
_11 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [14948042652275713563_usize,7_usize,2_usize,4_usize,1_usize,6320307395191043557_usize,9143905803562525509_usize];
_8.1 = _6;
_13 = [3615907136968923511_usize,3_usize,0_usize,13332654037330345637_usize,4782199916374000462_usize,7_usize,3_usize];
_8.0 = 70_i8 as u64;
_6 = [1_usize,9248278471905131342_usize,11561726553904829926_usize,2_usize,5_usize,2_usize,2_usize];
_11 = [127_isize,(-9223372036854775808_isize),(-72_isize),9223372036854775807_isize];
_10 = _7;
_3.0 = false as u64;
_8.1 = [6972539479678272414_usize,3_usize,2_usize,4_usize,5_usize,7554685114807227732_usize,2_usize];
_8.1 = _1;
_2.1 = [14815678297659994986_usize,6_usize,2715269368294578581_usize,2547075375962835949_usize,1347907768262097372_usize,5623318186050138361_usize,1918357208403588900_usize];
_8.0 = false as u64;
_3 = (_4, _10);
_3.1 = [17366474853961705195_usize,4284162974659766440_usize,5378143067715721878_usize,3_usize,0_usize,5176304065578218163_usize,6_usize];
_2.1 = _8.1;
_3.0 = _2.0 >> _2.0;
Goto(bb2)
}
bb2 = {
_14 = (-9223372036854775808_isize);
_3 = (_2.0, _2.1);
RET = [1_usize,2_usize,3_usize,9691150159605809664_usize,4_usize,4041687013035634779_usize,10094967342039578122_usize];
_8.0 = _3.0;
_6 = [6067806649842398572_usize,5_usize,7313903496746455826_usize,17880462742513267240_usize,266402919862506707_usize,2_usize,4_usize];
_17.0 = _8.0;
match _14 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb3 = {
_8 = (_3.0, _10);
_11 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [14948042652275713563_usize,7_usize,2_usize,4_usize,1_usize,6320307395191043557_usize,9143905803562525509_usize];
_8.1 = _6;
_13 = [3615907136968923511_usize,3_usize,0_usize,13332654037330345637_usize,4782199916374000462_usize,7_usize,3_usize];
_8.0 = 70_i8 as u64;
_6 = [1_usize,9248278471905131342_usize,11561726553904829926_usize,2_usize,5_usize,2_usize,2_usize];
_11 = [127_isize,(-9223372036854775808_isize),(-72_isize),9223372036854775807_isize];
_10 = _7;
_3.0 = false as u64;
_8.1 = [6972539479678272414_usize,3_usize,2_usize,4_usize,5_usize,7554685114807227732_usize,2_usize];
_8.1 = _1;
_2.1 = [14815678297659994986_usize,6_usize,2715269368294578581_usize,2547075375962835949_usize,1347907768262097372_usize,5623318186050138361_usize,1918357208403588900_usize];
_8.0 = false as u64;
_3 = (_4, _10);
_3.1 = [17366474853961705195_usize,4284162974659766440_usize,5378143067715721878_usize,3_usize,0_usize,5176304065578218163_usize,6_usize];
_2.1 = _8.1;
_3.0 = _2.0 >> _2.0;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_3 = (_17.0, _5);
_2.0 = _17.0 * _4;
_5 = _10;
_15 = (-1123306864_i32) as f32;
_6 = [3474160848323207252_usize,2_usize,17466123092533223281_usize,15933928718136876965_usize,5_usize,1_usize,8038618562276864362_usize];
_2.1 = [905512397270337611_usize,7_usize,17507012787821420910_usize,0_usize,6_usize,1_usize,1_usize];
_3.1 = [0_usize,0_usize,17556400509538231739_usize,6662216042967189994_usize,12946166231356249359_usize,2_usize,16230765347938811635_usize];
RET = _7;
_16 = (_2.0,);
_2 = _8;
_19 = !_14;
_8 = (_17.0, _2.1);
Goto(bb12)
}
bb12 = {
Call(_24 = dump_var(12_usize, 17_usize, Move(_17), 6_usize, Move(_6), 1_usize, Move(_1), 7_usize, Move(_7)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_24 = dump_var(12_usize, 2_usize, Move(_2), 4_usize, Move(_4), 14_usize, Move(_14), 11_usize, Move(_11)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [usize; 7],mut _2: [usize; 7],mut _3: [usize; 7],mut _4: u64,mut _5: u64,mut _6: usize) -> [usize; 7] {
mir! {
type RET = [usize; 7];
let _7: f64;
let _8: isize;
let _9: u32;
let _10: ();
let _11: ();
{
RET = [_6,_6,_6,_6,_6,_6,_6];
_5 = _4;
_1 = [_6,_6,_6,_6,_6,_6,_6];
_3 = [_6,_6,_6,_6,_6,_6,_6];
_1 = [_6,_6,_6,_6,_6,_6,_6];
_7 = _6 as f64;
_1 = [_6,_6,_6,_6,_6,_6,_6];
RET = [_6,_6,_6,_6,_6,_6,_6];
RET = _2;
_3 = [_6,_6,_6,_6,_6,_6,_6];
_5 = (-132778166_i32) as u64;
RET = [_6,_6,_6,_6,_6,_6,_6];
_6 = 120_u8 as usize;
_5 = !_4;
_1 = [_6,_6,_6,_6,_6,_6,_6];
RET = [_6,_6,_6,_6,_6,_6,_6];
_5 = _4;
_8 = !9223372036854775807_isize;
_2 = [_6,_6,_6,_6,_6,_6,_6];
RET = [_6,_6,_6,_6,_6,_6,_6];
_4 = _5;
RET = _3;
_7 = 302305708951438779573236573850773178119_u128 as f64;
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(13_usize, 3_usize, Move(_3), 2_usize, Move(_2), 8_usize, Move(_8), 11_usize, _11), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(6_usize), std::hint::black_box('\u{1065ab}'), std::hint::black_box(276796206338551361080002665275270545768_u128), std::hint::black_box(22419_u16), std::hint::black_box(14762_i16), std::hint::black_box((-1538374410_i32)), std::hint::black_box(129094479710148425670425651162717882321_i128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: *mut [usize; 3],
fld1: *mut u16,
fld2: *mut [u16; 3],
fld3: *mut bool,
fld4: *const [usize; 3],
fld5: i32,
fld6: u32,

},
Variant1{
fld0: [bool; 2],
fld1: (u64,),
fld2: isize,
fld3: *const [usize; 3],
fld4: u64,
fld5: (*mut bool, (u64, [usize; 7]), u32),
fld6: u8,

},
Variant2{
fld0: (u64, [usize; 7]),
fld1: [usize; 3],
fld2: *mut u16,
fld3: [i16; 5],
fld4: [u16; 4],
fld5: *mut i32,
fld6: *mut [usize; 3],
fld7: u32,

},
Variant3{
fld0: [i64; 1],
fld1: u64,
fld2: u32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: [usize; 7],
fld1: u64,
fld2: isize,
fld3: i16,

},
Variant1{
fld0: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld1: [i16; 5],
fld2: Adt42,
fld3: [u16; 4],
fld4: *mut i32,
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: u16,
fld1: [usize; 7],
fld2: u64,

},
Variant1{
fld0: [u16; 3],
fld1: *mut [usize; 3],
fld2: *mut bool,
fld3: *const [usize; 3],
fld4: [u16; 4],
fld5: (u16, *const [usize; 3], (*mut bool, (u64, [usize; 7]), u32)),
fld6: [usize; 3],

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: usize,
fld1: *mut [usize; 3],
fld2: *mut i32,

},
Variant1{
fld0: bool,
fld1: *const [usize; 3],
fld2: usize,
fld3: u64,
fld4: f64,
fld5: Adt44,
fld6: f32,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: [i16; 5],
fld1: Adt45,
fld2: u64,
fld3: f64,

},
Variant1{
fld0: *const f32,
fld1: Adt44,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt47 {
fld0: (u64, [usize; 7]),
fld1: u16,
fld2: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld3: *mut [usize; 3],
fld4: i16,
fld5: (f64, [usize; 7], i16, [i128; 6]),
}
#[derive(Debug)]
pub struct Adt48 {
fld0: (*mut bool, (u64, [usize; 7]), u32),
fld1: [usize; 7],
fld2: u128,
fld3: Adt46,
}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld1: (u64,),

},
Variant1{
fld0: Adt48,
fld1: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld2: Adt45,
fld3: i8,
fld4: *mut [u16; 3],

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: Adt48,
fld1: [usize; 3],
fld2: Adt49,
fld3: (u16, u8, i32),
fld4: i16,
fld5: *const f32,
fld6: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: u64,
fld1: [i128; 6],
fld2: [i16; 5],
fld3: [bool; 2],
fld4: Adt42,
fld5: (u16, u8, i32),
fld6: Adt47,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: Adt50,
fld2: Adt46,

},
Variant1{
fld0: bool,
fld1: u8,
fld2: u16,
fld3: *mut u16,

},
Variant2{
fld0: bool,
fld1: char,
fld2: Adt43,
fld3: (f64, [usize; 7], i16, [i128; 6]),
fld4: *mut u16,
fld5: *mut bool,
fld6: i128,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u128,
fld1: *mut [u16; 3],
fld2: isize,
fld3: u64,
fld4: i16,
fld5: Adt45,

},
Variant1{
fld0: (u16, u8, i32),
fld1: (u64, [usize; 7]),
fld2: Adt46,
fld3: i8,

},
Variant2{
fld0: f32,
fld1: Adt51,
fld2: Adt48,
fld3: u64,
fld4: *mut u16,

},
Variant3{
fld0: *mut i32,
fld1: Adt43,
fld2: Adt50,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: *const [usize; 3],
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt46,
fld1: *mut [u16; 3],
fld2: (u16, u8, i32),
fld3: u128,
fld4: Adt48,
fld5: *const [usize; 3],
fld6: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld7: Adt45,

},
Variant1{
fld0: u64,
fld1: (f64, [usize; 7], i16, [i128; 6]),
fld2: Adt51,
fld3: [i64; 1],
fld4: (u16, u8, i32),

},
Variant2{
fld0: [usize; 7],
fld1: *const [usize; 3],
fld2: Adt51,
fld3: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld4: Adt43,
fld5: i32,
fld6: (*mut bool, (u64, [usize; 7]), u32),
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: i8,
fld1: u64,
fld2: f32,

},
Variant1{
fld0: u32,
fld1: Adt46,
fld2: isize,
fld3: i8,
fld4: [usize; 3],
fld5: (u64,),
fld6: Adt42,
fld7: *const [usize; 3],

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt44,
fld1: u16,
fld2: u64,

},
Variant1{
fld0: (*mut i32, (*mut bool, (u64, [usize; 7]), u32)),
fld1: (*mut bool, (u64, [usize; 7]), u32),

},
Variant2{
fld0: (f64, [usize; 7], i16, [i128; 6]),

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: u64,
fld1: [isize; 4],
fld2: u32,
fld3: Adt52,
fld4: Adt44,

},
Variant1{
fld0: Adt43,
fld1: Adt51,
fld2: Adt49,
fld3: i8,

},
Variant2{
fld0: i128,
fld1: *mut bool,

}}

