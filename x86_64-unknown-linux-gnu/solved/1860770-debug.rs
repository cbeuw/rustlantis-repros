#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: u64,mut _6: i32,mut _7: u32,mut _8: u8,mut _9: usize) -> f64 {
mir! {
type RET = f64;
let _10: u64;
let _11: [u16; 6];
let _12: [i8; 2];
let _13: [i8; 2];
let _14: u16;
let _15: isize;
let _16: bool;
let _17: [i8; 2];
let _18: ((*mut bool, *mut u128),);
let _19: i8;
let _20: bool;
let _21: [u64; 3];
let _22: (*mut bool, *mut u128);
let _23: usize;
let _24: [u64; 3];
let _25: u8;
let _26: Adt57;
let _27: (u32, *const u8, u64, f64);
let _28: isize;
let _29: [u16; 6];
let _30: ();
let _31: ();
{
_7 = !2173807085_u32;
RET = 9223372036854775807_isize as f64;
RET = _7 as f64;
_7 = 2821254267_u32;
_10 = 18367332061274322799_u64;
_9 = 270148130082876487237387669968712468733_u128 as usize;
_4 = !4_i8;
_7 = !1145900008_u32;
_2 = '\u{2b55}';
_7 = (-166714714521142768675071967857301964354_i128) as u32;
_8 = _9 as u8;
_3 = !(-9223372036854775808_isize);
RET = 242852357711536300643450444196981726721_u128 as f64;
_6 = 812230358_i32 * (-807394522_i32);
RET = (-139126424155608160121584132731928245173_i128) as f64;
_2 = '\u{e49d9}';
_5 = !_10;
_11 = [34298_u16,59324_u16,1360_u16,36937_u16,34740_u16,63787_u16];
RET = _4 as f64;
_9 = !5_usize;
_11 = [8654_u16,56242_u16,24471_u16,26672_u16,23585_u16,17379_u16];
_9 = 5_usize & 1_usize;
_5 = _10;
_12 = [_4,_4];
_1 = !true;
_5 = _10;
_9 = !2_usize;
match _5 {
0 => bb1,
18367332061274322799 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_4 = -120_i8;
_13 = [_4,_4];
RET = 26651_i16 as f64;
_11 = [47818_u16,64584_u16,31067_u16,24054_u16,44641_u16,47388_u16];
_4 = 39_i8;
_13 = _12;
_2 = '\u{a130f}';
_13 = _12;
_13 = [_4,_4];
_8 = 113_u8 & 102_u8;
_5 = _10 % _10;
_14 = _1 as u16;
_7 = !2281484560_u32;
_3 = RET as isize;
_15 = !_3;
_13 = [_4,_4];
_9 = 5_usize;
_16 = !_1;
_10 = _9 as u64;
_5 = _10;
_11[_9] = _14 * _14;
_3 = !_15;
_13 = _12;
_13 = [_4,_4];
Goto(bb4)
}
bb4 = {
RET = _6 as f64;
_3 = _10 as isize;
_9 = !3_usize;
RET = 53525592052293676561137639223807677539_i128 as f64;
_17 = [_4,_4];
_5 = 155491915016228480422654008372009355320_u128 as u64;
_18.0.0 = core::ptr::addr_of_mut!(_16);
_9 = !3_usize;
_15 = _3 + _3;
_13 = [_4,_4];
_14 = !20723_u16;
_18.0.0 = core::ptr::addr_of_mut!(_16);
_19 = RET as i8;
Call(_14 = core::intrinsics::transmute(_17), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_21 = [_10,_5,_5];
_20 = !_1;
_16 = !_20;
_17 = [_4,_19];
_15 = _3 << _4;
_1 = _20 >= _20;
_21 = [_10,_5,_10];
_1 = _16;
_1 = !_20;
_10 = 107146828876831551556064522746588188939_u128 as u64;
RET = 201519996828949358476711584747956264474_u128 as f64;
_4 = 199031941153524746744785262720985836318_u128 as i8;
_1 = _20;
_10 = _5;
_2 = '\u{df44d}';
_1 = _20;
_7 = 2290650343_u32 + 1393647034_u32;
_27.2 = _5;
_4 = -_19;
_25 = !_8;
_27.3 = _15 as f64;
_2 = '\u{2e7fe}';
Call(_22 = fn1(_25, _25, _11), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_5 = !_27.2;
_18.0 = (_22.0, _22.1);
RET = _15 as f64;
_21 = [_27.2,_27.2,_5];
_1 = _16;
_22 = _18.0;
_15 = _1 as isize;
Goto(bb7)
}
bb7 = {
_11 = [_14,_14,_14,_14,_14,_14];
_27.0 = _7;
_22.0 = _18.0.0;
_22 = (_18.0.0, _18.0.1);
_20 = _16;
_1 = _16;
_27.2 = _5 - _5;
_10 = !_27.2;
_23 = _9 ^ _9;
_14 = 15323_u16;
_7 = 107855415385700693999696833861151406438_u128 as u32;
_11 = [_14,_14,_14,_14,_14,_14];
_18 = (_22,);
_4 = -_19;
_22 = _18.0;
match _14 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
15323 => bb14,
_ => bb13
}
}
bb8 = {
_5 = !_27.2;
_18.0 = (_22.0, _22.1);
RET = _15 as f64;
_21 = [_27.2,_27.2,_5];
_1 = _16;
_22 = _18.0;
_15 = _1 as isize;
Goto(bb7)
}
bb9 = {
_21 = [_10,_5,_5];
_20 = !_1;
_16 = !_20;
_17 = [_4,_19];
_15 = _3 << _4;
_1 = _20 >= _20;
_21 = [_10,_5,_10];
_1 = _16;
_1 = !_20;
_10 = 107146828876831551556064522746588188939_u128 as u64;
RET = 201519996828949358476711584747956264474_u128 as f64;
_4 = 199031941153524746744785262720985836318_u128 as i8;
_1 = _20;
_10 = _5;
_2 = '\u{df44d}';
_1 = _20;
_7 = 2290650343_u32 + 1393647034_u32;
_27.2 = _5;
_4 = -_19;
_25 = !_8;
_27.3 = _15 as f64;
_2 = '\u{2e7fe}';
Call(_22 = fn1(_25, _25, _11), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
RET = _6 as f64;
_3 = _10 as isize;
_9 = !3_usize;
RET = 53525592052293676561137639223807677539_i128 as f64;
_17 = [_4,_4];
_5 = 155491915016228480422654008372009355320_u128 as u64;
_18.0.0 = core::ptr::addr_of_mut!(_16);
_9 = !3_usize;
_15 = _3 + _3;
_13 = [_4,_4];
_14 = !20723_u16;
_18.0.0 = core::ptr::addr_of_mut!(_16);
_19 = RET as i8;
Call(_14 = core::intrinsics::transmute(_17), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_4 = -120_i8;
_13 = [_4,_4];
RET = 26651_i16 as f64;
_11 = [47818_u16,64584_u16,31067_u16,24054_u16,44641_u16,47388_u16];
_4 = 39_i8;
_13 = _12;
_2 = '\u{a130f}';
_13 = _12;
_13 = [_4,_4];
_8 = 113_u8 & 102_u8;
_5 = _10 % _10;
_14 = _1 as u16;
_7 = !2281484560_u32;
_3 = RET as isize;
_15 = !_3;
_13 = [_4,_4];
_9 = 5_usize;
_16 = !_1;
_10 = _9 as u64;
_5 = _10;
_11[_9] = _14 * _14;
_3 = !_15;
_13 = _12;
_13 = [_4,_4];
Goto(bb4)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_27.3 = -RET;
_18.0.1 = _22.1;
_27.1 = core::ptr::addr_of!(_8);
_16 = _25 > _25;
_19 = _3 as i8;
_14 = !54681_u16;
_22.0 = _18.0.0;
RET = _27.3 * _27.3;
_12 = [_19,_19];
_16 = RET >= RET;
_27.0 = _19 as u32;
_23 = _9 ^ _9;
_18.0.0 = _22.0;
_28 = !_3;
_18.0 = (_22.0, _22.1);
_22.0 = core::ptr::addr_of_mut!(_1);
_19 = -_4;
_18 = (_22,);
_29 = [_14,_14,_14,_14,_14,_14];
_27.0 = !_7;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(0_usize, 7_usize, Move(_7), 11_usize, Move(_11), 19_usize, Move(_19), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(0_usize, 2_usize, Move(_2), 29_usize, Move(_29), 6_usize, Move(_6), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(0_usize, 10_usize, Move(_10), 23_usize, Move(_23), 3_usize, Move(_3), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u8,mut _2: u8,mut _3: [u16; 6]) -> (*mut bool, *mut u128) {
mir! {
type RET = (*mut bool, *mut u128);
let _4: Adt49;
let _5: f32;
let _6: [u64; 3];
let _7: *const isize;
let _8: i8;
let _9: [u32; 4];
let _10: i64;
let _11: (i8, *mut bool);
let _12: u32;
let _13: *mut i64;
let _14: [u16; 6];
let _15: [u64; 3];
let _16: Adt62;
let _17: char;
let _18: i32;
let _19: Adt56;
let _20: i8;
let _21: bool;
let _22: bool;
let _23: (f32, f64);
let _24: isize;
let _25: (f32, f64);
let _26: [u16; 6];
let _27: Adt46;
let _28: i32;
let _29: (f32, f64);
let _30: u64;
let _31: isize;
let _32: ([u16; 6],);
let _33: isize;
let _34: (u32, *const u8, u64, f64);
let _35: [i8; 2];
let _36: f32;
let _37: [u32; 4];
let _38: ([u16; 6],);
let _39: ((i128, i32, u8, &'static i128), (char, *mut u128, *mut i64, *mut u16, f64, i128), *mut i64, (*mut bool, *mut u128), isize);
let _40: u8;
let _41: ();
let _42: ();
{
_1 = _2;
_2 = _1;
_2 = _1 - _1;
_1 = _2;
_2 = _1;
_2 = _1;
_2 = !_1;
_2 = !_1;
_3 = [50437_u16,34760_u16,47468_u16,62107_u16,30914_u16,49596_u16];
_5 = 137449385879489533321596020639988148162_i128 as f32;
_2 = !_1;
_3 = [8960_u16,14804_u16,16471_u16,24679_u16,29376_u16,32683_u16];
_5 = 1729111609_i32 as f32;
_3 = [26390_u16,45306_u16,52631_u16,12614_u16,56827_u16,65380_u16];
_6 = [7137103334764070342_u64,15125898825774376141_u64,7532375037857727915_u64];
_6 = [2806340377815963701_u64,1558860342152099766_u64,12917687498870779285_u64];
_5 = 97286702402404348372170672993291168898_i128 as f32;
Call(RET.1 = fn2(_3, _5, _3, _6, _2, _3, _3, _6, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = _1 & _1;
_4 = Adt49::Variant2 { fld0: RET.1 };
place!(Field::<*mut u128>(Variant(_4, 2), 0)) = RET.1;
_5 = 10154801427637199039_u64 as f32;
Call(_3 = fn3(_2, _5, Field::<*mut u128>(Variant(_4, 2), 0), Move(_4), _1, _6, _2, RET.1, _6, RET.1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5 = (-814561693_i32) as f32;
_3 = [37976_u16,15177_u16,15401_u16,29898_u16,61043_u16,17979_u16];
_2 = !_1;
_3 = [25212_u16,55575_u16,36921_u16,44799_u16,49086_u16,43499_u16];
_3 = [38166_u16,48325_u16,50191_u16,19850_u16,4023_u16,52550_u16];
_8 = 4974165502869856496_u64 as i8;
_6 = [14754388491049963366_u64,10874415984482946430_u64,6568380266444638661_u64];
_1 = !_2;
_2 = 3349987419193443068_i64 as u8;
_8 = !(-71_i8);
_5 = 2392983379_u32 as f32;
_3 = [26663_u16,7882_u16,29887_u16,31930_u16,39781_u16,61363_u16];
_5 = 63097683105320580401583333352799568346_u128 as f32;
_8 = !(-19_i8);
_1 = _2;
_10 = 2063367789424600489_i64;
_2 = 25471100921854191380406116001496262370_u128 as u8;
match _10 {
2063367789424600489 => bb3,
_ => bb1
}
}
bb3 = {
_12 = 1285256160_u32 + 1405925752_u32;
_5 = _12 as f32;
_11.0 = _8 + _8;
_15 = [14591685489192907798_u64,13521542262947359485_u64,12819023471829731100_u64];
_11.0 = !_8;
_6 = [7686584716330827494_u64,11308502567191903135_u64,8908455248411237408_u64];
_1 = _2;
_3 = [58794_u16,50340_u16,44303_u16,34372_u16,60737_u16,51344_u16];
_14 = [41459_u16,14389_u16,15583_u16,47893_u16,22768_u16,59462_u16];
_12 = 1326334509_u32 | 2000426767_u32;
_15 = _6;
_14 = [10506_u16,28741_u16,35762_u16,32904_u16,39722_u16,51402_u16];
_12 = 3761227273_u32 * 1688014998_u32;
_1 = !_2;
_3 = _14;
_6 = [8578646481867703278_u64,11843237501200126556_u64,2610601924167024368_u64];
_9 = [_12,_12,_12,_12];
_8 = _11.0;
_6 = _15;
_11.0 = _2 as i8;
_17 = '\u{c3f02}';
_11.0 = _8 & _8;
_11.0 = _8 ^ _8;
_17 = '\u{cf7ee}';
Goto(bb4)
}
bb4 = {
_1 = _2;
_11.0 = _8 | _8;
_12 = 2569058244_u32;
_13 = core::ptr::addr_of_mut!(_10);
_1 = _2;
_9 = [_12,_12,_12,_12];
RET.0 = core::ptr::addr_of_mut!(_22);
_6 = [14428177432318889450_u64,16186324141698594391_u64,11302683706628847372_u64];
_9 = [_12,_12,_12,_12];
_15 = _6;
_18 = (-519149356_i32);
_17 = '\u{7ebba}';
_21 = !false;
RET.0 = core::ptr::addr_of_mut!(_22);
_11.1 = core::ptr::addr_of_mut!(_22);
_23.0 = _5;
_11.1 = core::ptr::addr_of_mut!(_21);
Goto(bb5)
}
bb5 = {
_13 = core::ptr::addr_of_mut!(_10);
_17 = '\u{c1586}';
_22 = _21;
_4 = Adt49::Variant2 { fld0: RET.1 };
_5 = -_23.0;
_9 = [_12,_12,_12,_12];
_3 = [41884_u16,430_u16,58332_u16,46051_u16,297_u16,50200_u16];
RET.0 = core::ptr::addr_of_mut!(_22);
SetDiscriminant(_4, 2);
_13 = core::ptr::addr_of_mut!((*_13));
_21 = _22;
_9 = [_12,_12,_12,_12];
_22 = !_21;
_21 = !_22;
_7 = core::ptr::addr_of!(_24);
_22 = _21 ^ _21;
_11 = (_8, RET.0);
_18 = 1361944730_i32;
match _18 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
1361944730 => bb11,
_ => bb10
}
}
bb6 = {
_1 = _2;
_11.0 = _8 | _8;
_12 = 2569058244_u32;
_13 = core::ptr::addr_of_mut!(_10);
_1 = _2;
_9 = [_12,_12,_12,_12];
RET.0 = core::ptr::addr_of_mut!(_22);
_6 = [14428177432318889450_u64,16186324141698594391_u64,11302683706628847372_u64];
_9 = [_12,_12,_12,_12];
_15 = _6;
_18 = (-519149356_i32);
_17 = '\u{7ebba}';
_21 = !false;
RET.0 = core::ptr::addr_of_mut!(_22);
_11.1 = core::ptr::addr_of_mut!(_22);
_23.0 = _5;
_11.1 = core::ptr::addr_of_mut!(_21);
Goto(bb5)
}
bb7 = {
_12 = 1285256160_u32 + 1405925752_u32;
_5 = _12 as f32;
_11.0 = _8 + _8;
_15 = [14591685489192907798_u64,13521542262947359485_u64,12819023471829731100_u64];
_11.0 = !_8;
_6 = [7686584716330827494_u64,11308502567191903135_u64,8908455248411237408_u64];
_1 = _2;
_3 = [58794_u16,50340_u16,44303_u16,34372_u16,60737_u16,51344_u16];
_14 = [41459_u16,14389_u16,15583_u16,47893_u16,22768_u16,59462_u16];
_12 = 1326334509_u32 | 2000426767_u32;
_15 = _6;
_14 = [10506_u16,28741_u16,35762_u16,32904_u16,39722_u16,51402_u16];
_12 = 3761227273_u32 * 1688014998_u32;
_1 = !_2;
_3 = _14;
_6 = [8578646481867703278_u64,11843237501200126556_u64,2610601924167024368_u64];
_9 = [_12,_12,_12,_12];
_8 = _11.0;
_6 = _15;
_11.0 = _2 as i8;
_17 = '\u{c3f02}';
_11.0 = _8 & _8;
_11.0 = _8 ^ _8;
_17 = '\u{cf7ee}';
Goto(bb4)
}
bb8 = {
_5 = (-814561693_i32) as f32;
_3 = [37976_u16,15177_u16,15401_u16,29898_u16,61043_u16,17979_u16];
_2 = !_1;
_3 = [25212_u16,55575_u16,36921_u16,44799_u16,49086_u16,43499_u16];
_3 = [38166_u16,48325_u16,50191_u16,19850_u16,4023_u16,52550_u16];
_8 = 4974165502869856496_u64 as i8;
_6 = [14754388491049963366_u64,10874415984482946430_u64,6568380266444638661_u64];
_1 = !_2;
_2 = 3349987419193443068_i64 as u8;
_8 = !(-71_i8);
_5 = 2392983379_u32 as f32;
_3 = [26663_u16,7882_u16,29887_u16,31930_u16,39781_u16,61363_u16];
_5 = 63097683105320580401583333352799568346_u128 as f32;
_8 = !(-19_i8);
_1 = _2;
_10 = 2063367789424600489_i64;
_2 = 25471100921854191380406116001496262370_u128 as u8;
match _10 {
2063367789424600489 => bb3,
_ => bb1
}
}
bb9 = {
_2 = _1 & _1;
_4 = Adt49::Variant2 { fld0: RET.1 };
place!(Field::<*mut u128>(Variant(_4, 2), 0)) = RET.1;
_5 = 10154801427637199039_u64 as f32;
Call(_3 = fn3(_2, _5, Field::<*mut u128>(Variant(_4, 2), 0), Move(_4), _1, _6, _2, RET.1, _6, RET.1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
RET.0 = core::ptr::addr_of_mut!(_21);
_25.0 = _23.0 + _5;
_23.1 = _10 as f64;
_20 = !_8;
_24 = (-9223372036854775808_isize);
_26 = [54488_u16,9842_u16,8883_u16,42619_u16,12127_u16,51919_u16];
_23.1 = 12649008833476111959_usize as f64;
_26 = [16672_u16,10893_u16,41120_u16,47891_u16,45758_u16,56382_u16];
_29.0 = _23.0 * _23.0;
_25 = (_23.0, _23.1);
_11.1 = RET.0;
_20 = _8 & _8;
_10 = (-900428402838453400_i64) | 524872418217363272_i64;
_29.1 = _25.1;
_23.0 = -_25.0;
RET.0 = _11.1;
_29 = (_25.0, _23.1);
_5 = _12 as f32;
_9 = [_12,_12,_12,_12];
_29.0 = _25.0;
_6 = [2617196147291802201_u64,1313636626944616579_u64,8715690223252884250_u64];
_23.0 = _29.0 + _29.0;
_28 = -_18;
_8 = _11.0 * _20;
place!(Field::<*mut u128>(Variant(_4, 2), 0)) = RET.1;
match (*_7) {
0 => bb4,
1 => bb6,
2 => bb8,
340282366920938463454151235394913435648 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_32.0 = [58095_u16,44897_u16,29314_u16,34540_u16,42722_u16,42728_u16];
place!(Field::<*mut u128>(Variant(_4, 2), 0)) = RET.1;
_23.0 = -_29.0;
_29.1 = _10 as f64;
_34.2 = 8381937932445702087_u64;
_7 = core::ptr::addr_of!((*_7));
_3 = [21527_u16,21813_u16,38218_u16,24005_u16,41356_u16,17599_u16];
_30 = _34.2 << _8;
_9 = [_12,_12,_12,_12];
RET = (_11.1, Field::<*mut u128>(Variant(_4, 2), 0));
RET.0 = core::ptr::addr_of_mut!(_21);
_15 = _6;
_20 = _11.0;
_18 = _28;
_12 = 4242021973_u32;
_14 = [28693_u16,11795_u16,36823_u16,26748_u16,39306_u16,12211_u16];
RET.0 = core::ptr::addr_of_mut!(_21);
_23 = (_29.0, _29.1);
_40 = _1 * _2;
_24 = 9223372036854775807_isize;
Goto(bb14)
}
bb14 = {
_39.3.0 = core::ptr::addr_of_mut!(_22);
_31 = (*_7);
SetDiscriminant(_4, 2);
_7 = core::ptr::addr_of!(_33);
_29.1 = _23.1 * _23.1;
_39.4 = _11.0 as isize;
_26 = [54080_u16,37836_u16,17509_u16,26179_u16,18649_u16,1898_u16];
RET.0 = _39.3.0;
_14 = [61041_u16,16607_u16,35140_u16,52052_u16,32309_u16,16100_u16];
_34.0 = 30025_u16 as u32;
_13 = core::ptr::addr_of_mut!((*_13));
_39.1.1 = RET.1;
_28 = _18;
RET.0 = _39.3.0;
_38 = (_32.0,);
RET.0 = _39.3.0;
_38.0 = [11321_u16,51839_u16,17783_u16,27366_u16,23827_u16,63929_u16];
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(1_usize, 18_usize, Move(_18), 9_usize, Move(_9), 12_usize, Move(_12), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(1_usize, 22_usize, Move(_22), 40_usize, Move(_40), 10_usize, Move(_10), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(1_usize, 17_usize, Move(_17), 15_usize, Move(_15), 24_usize, Move(_24), 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [u16; 6],mut _2: f32,mut _3: [u16; 6],mut _4: [u64; 3],mut _5: u8,mut _6: [u16; 6],mut _7: [u16; 6],mut _8: [u64; 3],mut _9: u8,mut _10: u8) -> *mut u128 {
mir! {
type RET = *mut u128;
let _11: [u32; 4];
let _12: i32;
let _13: f64;
let _14: Adt58;
let _15: ([u16; 6],);
let _16: Adt62;
let _17: isize;
let _18: u64;
let _19: ([u16; 6],);
let _20: [u64; 3];
let _21: ([u16; 6],);
let _22: isize;
let _23: [i8; 2];
let _24: Adt58;
let _25: bool;
let _26: isize;
let _27: f64;
let _28: f32;
let _29: char;
let _30: (f32, f64);
let _31: (f32, f64);
let _32: isize;
let _33: char;
let _34: (f32, f64);
let _35: isize;
let _36: u128;
let _37: i128;
let _38: [u64; 3];
let _39: (f32, f64);
let _40: *const [u64; 3];
let _41: bool;
let _42: Adt53;
let _43: [u32; 4];
let _44: [i8; 2];
let _45: (*mut bool, *mut u128);
let _46: ();
let _47: ();
{
_9 = true as u8;
_10 = !_5;
_1 = [64984_u16,63364_u16,56837_u16,17041_u16,39696_u16,42866_u16];
_2 = 156853462306322105119600048103553261293_u128 as f32;
_2 = (-9193_i16) as f32;
_8 = _4;
_2 = 42_i8 as f32;
_7 = [8775_u16,41584_u16,1355_u16,2105_u16,62407_u16,31183_u16];
_9 = !_5;
_4 = _8;
_3 = _6;
_3 = [47869_u16,37220_u16,35725_u16,26337_u16,63402_u16,25967_u16];
Goto(bb1)
}
bb1 = {
_5 = !_9;
_6 = _3;
_6 = _1;
_13 = _2 as f64;
_9 = _10;
Call(_3 = core::intrinsics::transmute(_6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13 = _5 as f64;
_15.0 = _7;
_8 = [1677837612061314103_u64,18050634287532934378_u64,10006235354752399477_u64];
_8 = [2273453222331650236_u64,1018821617055193242_u64,14750135629038308448_u64];
_15.0 = [20395_u16,24904_u16,44254_u16,45547_u16,25036_u16,19837_u16];
_15 = (_3,);
_1 = [47377_u16,27179_u16,33343_u16,41784_u16,9182_u16,19108_u16];
_9 = !_10;
_9 = _10;
Call(_1 = core::intrinsics::transmute(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = !_9;
_4 = [2100452782373614589_u64,7008427326425348171_u64,4158277628515159533_u64];
_4 = _8;
_18 = !4830188565756461478_u64;
_5 = !_10;
_17 = (-5_isize) >> _5;
_12 = 2034227386_i32;
_7 = [53058_u16,58897_u16,43698_u16,19536_u16,20928_u16,24340_u16];
_11 = [1688566461_u32,3945847653_u32,3228905083_u32,3717456477_u32];
_18 = 11770771145118442885_u64;
_17 = (-9223372036854775808_isize);
_17 = -(-9223372036854775808_isize);
_19.0 = [26367_u16,11577_u16,25611_u16,17894_u16,13478_u16,35797_u16];
_4 = _8;
_18 = !472859924076839870_u64;
_13 = 5_usize as f64;
_18 = 24760_u16 as u64;
_23 = [(-63_i8),54_i8];
_12 = (-683391858_i32) << _10;
_22 = _17 >> _10;
_2 = _5 as f32;
_12 = 85_i8 as i32;
_7 = [29930_u16,56052_u16,49349_u16,33877_u16,12428_u16,40150_u16];
_2 = (-51143377140479334870613731901447282917_i128) as f32;
Goto(bb4)
}
bb4 = {
_4 = [_18,_18,_18];
_21.0 = _6;
_19 = (_1,);
_9 = _10;
_6 = [26547_u16,53107_u16,24910_u16,48588_u16,53716_u16,64768_u16];
_9 = 1_usize as u8;
_19.0 = [7923_u16,62351_u16,62579_u16,19743_u16,4427_u16,52248_u16];
_23 = [(-32_i8),99_i8];
_18 = 58357_u16 as u64;
_15 = (_21.0,);
_4 = [_18,_18,_18];
_12 = (-21394986_i32);
_21 = _15;
_23 = [9_i8,94_i8];
_3 = [29492_u16,15882_u16,47186_u16,8926_u16,7117_u16,35673_u16];
_9 = !_10;
_15 = _21;
_6 = [25496_u16,18303_u16,51855_u16,44958_u16,47673_u16,20840_u16];
_27 = -_13;
Call(_27 = core::intrinsics::fmaf64(_13, _13, _13), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_21.0 = _7;
_19.0 = _7;
_10 = _9 * _5;
_21 = (_1,);
_20 = [_18,_18,_18];
_5 = !_9;
_13 = -_27;
_27 = 3_usize as f64;
_4 = [_18,_18,_18];
_21 = _15;
_10 = !_9;
_26 = 5_usize as isize;
_19 = (_21.0,);
_17 = -_26;
_13 = -_27;
_17 = _22 << _22;
_3 = [43382_u16,45576_u16,34478_u16,37250_u16,38811_u16,27035_u16];
_17 = !_22;
_17 = _22 >> _5;
_9 = !_10;
_19 = _15;
_21.0 = [18822_u16,33957_u16,20004_u16,62468_u16,63915_u16,17020_u16];
_19 = _15;
_11 = [684692617_u32,3695837781_u32,1875728444_u32,390911235_u32];
_21.0 = _19.0;
_7 = [10616_u16,21005_u16,10205_u16,15447_u16,17721_u16,19069_u16];
Goto(bb6)
}
bb6 = {
_20 = [_18,_18,_18];
_17 = _22;
_30.0 = _2;
_5 = _9;
_23 = [(-10_i8),(-44_i8)];
_30.0 = _2;
_31 = (_30.0, _27);
_11 = [1890602178_u32,3102667966_u32,3043148811_u32,2529006674_u32];
_31.1 = 52033_u16 as f64;
_8 = [_18,_18,_18];
_28 = _31.0;
_30.1 = _27;
_25 = false;
_29 = '\u{173b6}';
_4 = [_18,_18,_18];
_15.0 = _7;
_20 = _8;
_2 = _30.0;
_15.0 = [22547_u16,61390_u16,983_u16,62742_u16,28287_u16,29799_u16];
_3 = [47166_u16,20508_u16,29918_u16,40393_u16,56140_u16,11172_u16];
_9 = _10;
_33 = _29;
_25 = false;
_31.0 = _28 + _28;
_33 = _29;
_30.0 = -_28;
_1 = _6;
_25 = false;
Goto(bb7)
}
bb7 = {
_15 = _21;
_28 = _2 * _31.0;
_34.0 = _28 - _2;
_21 = _15;
_30.1 = -_13;
_34.0 = _30.0 + _31.0;
_10 = _9 + _5;
_27 = 3307727070_u32 as f64;
_5 = _9 * _10;
_34.1 = _13 - _13;
_31 = (_2, _27);
_25 = true;
_13 = _34.1;
_22 = _25 as isize;
_1 = [42382_u16,40394_u16,28652_u16,30261_u16,46909_u16,64839_u16];
Goto(bb8)
}
bb8 = {
_9 = _33 as u8;
_23 = [(-110_i8),(-28_i8)];
_20 = _4;
_34.0 = _31.0;
_4 = [_18,_18,_18];
_23 = [95_i8,110_i8];
_8 = [_18,_18,_18];
_31.1 = -_13;
_21.0 = [198_u16,32741_u16,56105_u16,28933_u16,30932_u16,17632_u16];
_35 = !_26;
_34.0 = -_30.0;
_36 = 168822873103367162299386754607803175173_u128 + 169385596716706171125515927340879415578_u128;
_22 = _34.1 as isize;
RET = core::ptr::addr_of_mut!(_36);
match _12 {
0 => bb6,
1 => bb7,
340282366920938463463374607431746816470 => bb10,
_ => bb9
}
}
bb9 = {
_21.0 = _7;
_19.0 = _7;
_10 = _9 * _5;
_21 = (_1,);
_20 = [_18,_18,_18];
_5 = !_9;
_13 = -_27;
_27 = 3_usize as f64;
_4 = [_18,_18,_18];
_21 = _15;
_10 = !_9;
_26 = 5_usize as isize;
_19 = (_21.0,);
_17 = -_26;
_13 = -_27;
_17 = _22 << _22;
_3 = [43382_u16,45576_u16,34478_u16,37250_u16,38811_u16,27035_u16];
_17 = !_22;
_17 = _22 >> _5;
_9 = !_10;
_19 = _15;
_21.0 = [18822_u16,33957_u16,20004_u16,62468_u16,63915_u16,17020_u16];
_19 = _15;
_11 = [684692617_u32,3695837781_u32,1875728444_u32,390911235_u32];
_21.0 = _19.0;
_7 = [10616_u16,21005_u16,10205_u16,15447_u16,17721_u16,19069_u16];
Goto(bb6)
}
bb10 = {
_21.0 = _19.0;
_11 = [3943779607_u32,3936066008_u32,609602192_u32,3502717406_u32];
_32 = _17 - _17;
RET = core::ptr::addr_of_mut!(_36);
_11 = [3157508368_u32,1010923974_u32,458909712_u32,221557498_u32];
_21.0 = _19.0;
match _12 {
0 => bb11,
340282366920938463463374607431746816470 => bb13,
_ => bb12
}
}
bb11 = {
_20 = [_18,_18,_18];
_17 = _22;
_30.0 = _2;
_5 = _9;
_23 = [(-10_i8),(-44_i8)];
_30.0 = _2;
_31 = (_30.0, _27);
_11 = [1890602178_u32,3102667966_u32,3043148811_u32,2529006674_u32];
_31.1 = 52033_u16 as f64;
_8 = [_18,_18,_18];
_28 = _31.0;
_30.1 = _27;
_25 = false;
_29 = '\u{173b6}';
_4 = [_18,_18,_18];
_15.0 = _7;
_20 = _8;
_2 = _30.0;
_15.0 = [22547_u16,61390_u16,983_u16,62742_u16,28287_u16,29799_u16];
_3 = [47166_u16,20508_u16,29918_u16,40393_u16,56140_u16,11172_u16];
_9 = _10;
_33 = _29;
_25 = false;
_31.0 = _28 + _28;
_33 = _29;
_30.0 = -_28;
_1 = _6;
_25 = false;
Goto(bb7)
}
bb12 = {
_21.0 = _7;
_19.0 = _7;
_10 = _9 * _5;
_21 = (_1,);
_20 = [_18,_18,_18];
_5 = !_9;
_13 = -_27;
_27 = 3_usize as f64;
_4 = [_18,_18,_18];
_21 = _15;
_10 = !_9;
_26 = 5_usize as isize;
_19 = (_21.0,);
_17 = -_26;
_13 = -_27;
_17 = _22 << _22;
_3 = [43382_u16,45576_u16,34478_u16,37250_u16,38811_u16,27035_u16];
_17 = !_22;
_17 = _22 >> _5;
_9 = !_10;
_19 = _15;
_21.0 = [18822_u16,33957_u16,20004_u16,62468_u16,63915_u16,17020_u16];
_19 = _15;
_11 = [684692617_u32,3695837781_u32,1875728444_u32,390911235_u32];
_21.0 = _19.0;
_7 = [10616_u16,21005_u16,10205_u16,15447_u16,17721_u16,19069_u16];
Goto(bb6)
}
bb13 = {
_39.1 = _13;
_19 = _15;
_39.0 = _28 + _34.0;
_18 = 9228068942628200892_u64 & 17411803374024958755_u64;
_8 = _4;
_17 = -_32;
_21.0 = [40382_u16,37245_u16,9192_u16,6875_u16,30486_u16,24059_u16];
_4 = [_18,_18,_18];
_4 = _8;
_37 = (-45399762909844911968351319034139780536_i128) << _5;
_3 = _6;
RET = core::ptr::addr_of_mut!(_36);
_23 = [(-65_i8),48_i8];
_11 = [38861093_u32,1166197407_u32,1597022845_u32,621497691_u32];
_31 = _34;
_22 = 3645026650_u32 as isize;
_41 = !_25;
_2 = 12162609682518181216_usize as f32;
RET = core::ptr::addr_of_mut!(_36);
_10 = _5;
_13 = _31.1 * _39.1;
_37 = 162353385043772077452696952325047801079_i128 ^ (-13369987512034422726866744547131678934_i128);
_7 = [24955_u16,62439_u16,4483_u16,32540_u16,58769_u16,5925_u16];
_36 = 180664873516733301796674138216319622040_u128 * 324055277961118477119273082353666041456_u128;
_35 = 5848407264543254274_i64 as isize;
_4 = _8;
_37 = _41 as i128;
_41 = _25;
_44 = _23;
Goto(bb14)
}
bb14 = {
_34 = (_28, _13);
_43 = [1042244812_u32,2594415057_u32,184554205_u32,2292668754_u32];
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(2_usize, 1_usize, Move(_1), 29_usize, Move(_29), 15_usize, Move(_15), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(2_usize, 3_usize, Move(_3), 6_usize, Move(_6), 9_usize, Move(_9), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(2_usize, 5_usize, Move(_5), 41_usize, Move(_41), 35_usize, Move(_35), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(2_usize, 4_usize, Move(_4), 25_usize, Move(_25), 19_usize, Move(_19), 47_usize, _47), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: u8,mut _2: f32,mut _3: *mut u128,mut _4: Adt49,mut _5: u8,mut _6: [u64; 3],mut _7: u8,mut _8: *mut u128,mut _9: [u64; 3],mut _10: *mut u128,mut _11: u8,mut _12: u8) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _13: char;
let _14: f64;
let _15: ([u16; 6],);
let _16: f32;
let _17: [u32; 4];
let _18: Adt56;
let _19: i128;
let _20: *mut i64;
let _21: ([u16; 6],);
let _22: Adt49;
let _23: Adt46;
let _24: bool;
let _25: *const &'static i128;
let _26: *const isize;
let _27: Adt47;
let _28: [u64; 3];
let _29: Adt56;
let _30: i16;
let _31: bool;
let _32: [i8; 2];
let _33: char;
let _34: isize;
let _35: bool;
let _36: i128;
let _37: ([u16; 6],);
let _38: [u32; 4];
let _39: ([u16; 6],);
let _40: f64;
let _41: Adt47;
let _42: Adt62;
let _43: (i8, *mut bool);
let _44: *const *mut u128;
let _45: ([u16; 6],);
let _46: Adt55;
let _47: [u32; 4];
let _48: i8;
let _49: f64;
let _50: Adt60;
let _51: [u32; 4];
let _52: i64;
let _53: (f32, f64);
let _54: [u32; 4];
let _55: (*mut bool, *mut u128);
let _56: *mut bool;
let _57: ();
let _58: ();
{
_2 = 0_usize as f32;
RET = [242_u16,44035_u16,27087_u16,50704_u16,15124_u16,52166_u16];
_5 = !_11;
_6 = [16473860471352282882_u64,2046331401226237834_u64,8805687249114688601_u64];
_14 = (-4862062450597423209_i64) as f64;
_5 = 119_i8 as u8;
_1 = 290914826682273430516618928923867030113_u128 as u8;
_15 = (RET,);
_2 = 25638555940374125656734685716418258244_i128 as f32;
_15.0 = [34257_u16,51034_u16,58397_u16,46015_u16,630_u16,60666_u16];
_3 = Field::<*mut u128>(Variant(_4, 2), 0);
_15 = (RET,);
RET = [19301_u16,31101_u16,51903_u16,15496_u16,56176_u16,14768_u16];
_6 = [1192961204657862791_u64,15450127463433172693_u64,18289019132441165892_u64];
_11 = _7 << _7;
_16 = -_2;
_12 = _11 | _1;
place!(Field::<*mut u128>(Variant(_4, 2), 0)) = _3;
Goto(bb1)
}
bb1 = {
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = _15.0;
_1 = 1_usize as u8;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).4 = 794815570_u32 as f64;
place!(Field::<f64>(Variant(_4, 1), 1)) = -_14;
_15.0 = [55404_u16,36895_u16,7723_u16,11027_u16,5685_u16,55773_u16];
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).0 = '\u{7c085}';
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _10;
_11 = !_12;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _3;
_1 = !_12;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.1 = _10;
_15 = (Field::<[u16; 6]>(Variant(_4, 1), 4),);
_15.0 = [7996_u16,3107_u16,10607_u16,61662_u16,28111_u16,5772_u16];
_10 = Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0).0.1;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _3;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0).0.1;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).4 = 6249391279126670320_u64 as f64;
_3 = _8;
_2 = _16;
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = [62720_u16,29091_u16,39317_u16,62688_u16,27425_u16,5475_u16];
_19 = 224495224922773749721016113917602289765_u128 as i128;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.0 = core::ptr::addr_of_mut!(_24);
_6 = _9;
_9 = _6;
Call(_21.0 = fn4(_7, _15.0, RET, Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0), Field::<[u16; 6]>(Variant(_4, 1), 4), _7, _12, _8, _2, _11, _15, _12, _12, _11, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14 = -Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2).4;
_2 = _16;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).5 = 32090199720915006753411944652933203796_u128 as i128;
_9 = [12924285059025631273_u64,15162036237738289590_u64,405937361012606141_u64];
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.1 = Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2).1;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.0 = core::ptr::addr_of_mut!(_24);
_1 = _11 >> _11;
_24 = !true;
Goto(bb3)
}
bb3 = {
_21.0 = [9953_u16,32535_u16,61169_u16,10140_u16,29864_u16,38708_u16];
_21.0 = [47988_u16,39891_u16,2786_u16,13476_u16,27231_u16,15130_u16];
_6 = [10842990627618063386_u64,8622949427847843753_u64,18071264898311672743_u64];
_17 = [2685717990_u32,2022872673_u32,1479680769_u32,1193139545_u32];
_9 = [8626311647938093472_u64,1975788956382166085_u64,12060353895635360364_u64];
_1 = _11;
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = RET;
_6 = [3713992966968716387_u64,8849851887446345903_u64,8859220811630003732_u64];
_2 = (-97_i8) as f32;
_12 = _5 << _11;
_24 = true;
_8 = _3;
_4 = Adt49::Variant2 { fld0: _8 };
_8 = Field::<*mut u128>(Variant(_4, 2), 0);
_15.0 = [56193_u16,46067_u16,61867_u16,32193_u16,10922_u16,20312_u16];
_21.0 = [62743_u16,36277_u16,32968_u16,63889_u16,51919_u16,35800_u16];
_27.fld0 = 82511064588774393963032813635581464546_u128 | 121941459535513642927039970358977227703_u128;
_14 = (-1249480236_i32) as f64;
_27.fld5.0.0 = core::ptr::addr_of_mut!(_24);
_13 = '\u{8deb2}';
Goto(bb4)
}
bb4 = {
_12 = _1 ^ _7;
_27.fld1 = _13 as u8;
_27.fld2 = core::ptr::addr_of!(_11);
_17 = [62985738_u32,233522639_u32,1170962588_u32,1061169891_u32];
_28 = _6;
_24 = _12 <= _1;
_13 = '\u{e7fd4}';
_3 = _10;
_30 = -(-14343_i16);
RET = _15.0;
_19 = !(-89533617687466634107635713665940190747_i128);
_15.0 = [14350_u16,24684_u16,41081_u16,38542_u16,32774_u16,59507_u16];
_27.fld6 = core::ptr::addr_of!(_9);
Goto(bb5)
}
bb5 = {
_21.0 = _15.0;
_16 = -_2;
_15.0 = [60722_u16,60699_u16,14421_u16,40020_u16,61578_u16,55947_u16];
_3 = core::ptr::addr_of_mut!(_27.fld0);
RET = _15.0;
_27.fld6 = core::ptr::addr_of!(_9);
_1 = !_11;
_27.fld3 = _28;
_22 = Move(_4);
_28 = [18095677068614875820_u64,15149069267871621873_u64,13276442453581163529_u64];
_27.fld3 = [15017982111588773879_u64,12444801886575621761_u64,14743235170700397031_u64];
_27.fld5.0.1 = _8;
_31 = !_24;
_34 = (-9223372036854775808_isize);
_8 = core::ptr::addr_of_mut!((*_3));
Goto(bb6)
}
bb6 = {
_27.fld2 = core::ptr::addr_of!(_7);
_11 = 12560986929865703950_u64 as u8;
_12 = _34 as u8;
_35 = _1 != _27.fld1;
_33 = _13;
_9 = [10538605883933007375_u64,16675826471067560075_u64,15348808037548617521_u64];
_19 = _34 as i128;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_22, 1), 2)).1 = _3;
_21.0 = [41071_u16,16244_u16,47491_u16,58731_u16,3990_u16,22592_u16];
RET = _15.0;
_41.fld2 = _27.fld2;
_33 = _13;
_4 = Adt49::Variant2 { fld0: _3 };
_38 = _17;
_44 = core::ptr::addr_of!(place!(Field::<((*mut bool, *mut u128),)>(Variant(_22, 1), 0)).0.1);
match _34 {
0 => bb7,
1 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb7 = {
_14 = -Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2).4;
_2 = _16;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).5 = 32090199720915006753411944652933203796_u128 as i128;
_9 = [12924285059025631273_u64,15162036237738289590_u64,405937361012606141_u64];
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.1 = Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2).1;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.0 = core::ptr::addr_of_mut!(_24);
_1 = _11 >> _11;
_24 = !true;
Goto(bb3)
}
bb8 = {
_12 = _1 ^ _7;
_27.fld1 = _13 as u8;
_27.fld2 = core::ptr::addr_of!(_11);
_17 = [62985738_u32,233522639_u32,1170962588_u32,1061169891_u32];
_28 = _6;
_24 = _12 <= _1;
_13 = '\u{e7fd4}';
_3 = _10;
_30 = -(-14343_i16);
RET = _15.0;
_19 = !(-89533617687466634107635713665940190747_i128);
_15.0 = [14350_u16,24684_u16,41081_u16,38542_u16,32774_u16,59507_u16];
_27.fld6 = core::ptr::addr_of!(_9);
Goto(bb5)
}
bb9 = {
SetDiscriminant(_4, 1);
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = _15.0;
_1 = 1_usize as u8;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).4 = 794815570_u32 as f64;
place!(Field::<f64>(Variant(_4, 1), 1)) = -_14;
_15.0 = [55404_u16,36895_u16,7723_u16,11027_u16,5685_u16,55773_u16];
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).0 = '\u{7c085}';
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _10;
_11 = !_12;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _3;
_1 = !_12;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.1 = _10;
_15 = (Field::<[u16; 6]>(Variant(_4, 1), 4),);
_15.0 = [7996_u16,3107_u16,10607_u16,61662_u16,28111_u16,5772_u16];
_10 = Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0).0.1;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _3;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0).0.1;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).4 = 6249391279126670320_u64 as f64;
_3 = _8;
_2 = _16;
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = [62720_u16,29091_u16,39317_u16,62688_u16,27425_u16,5475_u16];
_19 = 224495224922773749721016113917602289765_u128 as i128;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.0 = core::ptr::addr_of_mut!(_24);
_6 = _9;
_9 = _6;
Call(_21.0 = fn4(_7, _15.0, RET, Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0), Field::<[u16; 6]>(Variant(_4, 1), 4), _7, _12, _8, _2, _11, _15, _12, _12, _11, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_31 = _24 <= _24;
_43.0 = -117_i8;
_27.fld6 = core::ptr::addr_of!(_41.fld3);
_27.fld3 = [12442482141103595767_u64,16757279968066843061_u64,9392167907925190198_u64];
_27.fld0 = 1129026283359819333_i64 as u128;
_26 = core::ptr::addr_of!(_34);
_41.fld3 = _27.fld3;
_15 = (_21.0,);
_39 = _15;
_16 = -_2;
_15.0 = RET;
_27.fld1 = _7;
Goto(bb11)
}
bb11 = {
_40 = _14 - _14;
_41.fld5.0.0 = _27.fld5.0.0;
_27.fld1 = _1 << _1;
_32 = [_43.0,_43.0];
SetDiscriminant(_4, 0);
_27.fld4 = core::ptr::addr_of_mut!(_52);
_43.1 = core::ptr::addr_of_mut!(_24);
match (*_26) {
0 => bb12,
340282366920938463454151235394913435648 => bb14,
_ => bb13
}
}
bb12 = {
_27.fld2 = core::ptr::addr_of!(_7);
_11 = 12560986929865703950_u64 as u8;
_12 = _34 as u8;
_35 = _1 != _27.fld1;
_33 = _13;
_9 = [10538605883933007375_u64,16675826471067560075_u64,15348808037548617521_u64];
SetDiscriminant(_22, 1);
_19 = _34 as i128;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_22, 1), 2)).1 = _3;
_21.0 = [41071_u16,16244_u16,47491_u16,58731_u16,3990_u16,22592_u16];
RET = _15.0;
_41.fld2 = _27.fld2;
_33 = _13;
_4 = Adt49::Variant2 { fld0: _3 };
_38 = _17;
_44 = core::ptr::addr_of!(place!(Field::<((*mut bool, *mut u128),)>(Variant(_22, 1), 0)).0.1);
match _34 {
0 => bb7,
1 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb13 = {
SetDiscriminant(_4, 1);
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = _15.0;
_1 = 1_usize as u8;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).4 = 794815570_u32 as f64;
place!(Field::<f64>(Variant(_4, 1), 1)) = -_14;
_15.0 = [55404_u16,36895_u16,7723_u16,11027_u16,5685_u16,55773_u16];
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).0 = '\u{7c085}';
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _10;
_11 = !_12;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _3;
_1 = !_12;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.1 = _10;
_15 = (Field::<[u16; 6]>(Variant(_4, 1), 4),);
_15.0 = [7996_u16,3107_u16,10607_u16,61662_u16,28111_u16,5772_u16];
_10 = Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0).0.1;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = _3;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).1 = Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0).0.1;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_4, 1), 2)).4 = 6249391279126670320_u64 as f64;
_3 = _8;
_2 = _16;
place!(Field::<[u16; 6]>(Variant(_4, 1), 4)) = [62720_u16,29091_u16,39317_u16,62688_u16,27425_u16,5475_u16];
_19 = 224495224922773749721016113917602289765_u128 as i128;
place!(Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0)).0.0 = core::ptr::addr_of_mut!(_24);
_6 = _9;
_9 = _6;
Call(_21.0 = fn4(_7, _15.0, RET, Field::<((*mut bool, *mut u128),)>(Variant(_4, 1), 0), Field::<[u16; 6]>(Variant(_4, 1), 4), _7, _12, _8, _2, _11, _15, _12, _12, _11, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
place!(Field::<(i8, *mut bool)>(Variant(_4, 0), 0)).0 = !_43.0;
_32 = [_43.0,_43.0];
RET = [20489_u16,48168_u16,57734_u16,63920_u16,41351_u16,10462_u16];
_36 = _19;
_41.fld6 = _27.fld6;
_47 = [1176848047_u32,2211265127_u32,3360471163_u32,242149726_u32];
_17 = [611752179_u32,2745274266_u32,3196583389_u32,1315116041_u32];
_27.fld2 = _41.fld2;
_31 = _35 > _24;
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_22, 1), 2)).0 = _33;
_10 = _27.fld5.0.1;
_8 = core::ptr::addr_of_mut!((*_8));
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_22, 1), 2)).5 = _36 * _36;
place!(Field::<Adt47>(Variant(_4, 0), 3)).fld5.0 = (_27.fld5.0.0, _10);
place!(Field::<Adt47>(Variant(_4, 0), 3)).fld1 = _31 as u8;
_15.0 = [28334_u16,12727_u16,40326_u16,12590_u16,64804_u16,4617_u16];
place!(Field::<(char, *mut u128, *mut i64, *mut u16, f64, i128)>(Variant(_22, 1), 2)).4 = _14 + _40;
_45 = (RET,);
_27.fld5.0.1 = core::ptr::addr_of_mut!(_41.fld0);
_20 = core::ptr::addr_of_mut!(_52);
_54 = [2811537101_u32,2698165091_u32,1814641582_u32,2854095935_u32];
_15 = (_45.0,);
RET = [9011_u16,59975_u16,35280_u16,28129_u16,52498_u16,12503_u16];
_40 = 26005_u16 as f64;
Goto(bb15)
}
bb15 = {
Call(_57 = dump_var(3_usize, 24_usize, Move(_24), 30_usize, Move(_30), 39_usize, Move(_39), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_57 = dump_var(3_usize, 36_usize, Move(_36), 45_usize, Move(_45), 6_usize, Move(_6), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_57 = dump_var(3_usize, 17_usize, Move(_17), 19_usize, Move(_19), 35_usize, Move(_35), 28_usize, Move(_28)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_57 = dump_var(3_usize, 33_usize, Move(_33), 58_usize, _58, 58_usize, _58, 58_usize, _58), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: u8,mut _2: [u16; 6],mut _3: [u16; 6],mut _4: ((*mut bool, *mut u128),),mut _5: [u16; 6],mut _6: u8,mut _7: u8,mut _8: *mut u128,mut _9: f32,mut _10: u8,mut _11: ([u16; 6],),mut _12: u8,mut _13: u8,mut _14: u8,mut _15: u8) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _16: i128;
let _17: ([u16; 6],);
let _18: (f32, f64);
let _19: isize;
let _20: [u64; 3];
let _21: [u16; 6];
let _22: [u32; 4];
let _23: u16;
let _24: (f32, f64);
let _25: [i8; 2];
let _26: f32;
let _27: isize;
let _28: f64;
let _29: isize;
let _30: (f32, f64);
let _31: ();
let _32: ();
{
_7 = _15 - _6;
Goto(bb1)
}
bb1 = {
_7 = !_13;
_5 = [28103_u16,63974_u16,19499_u16,52305_u16,11739_u16,62055_u16];
_9 = _12 as f32;
_3 = _11.0;
_5 = [24699_u16,29865_u16,61775_u16,11430_u16,25996_u16,45315_u16];
_7 = (-1611307661_i32) as u8;
_12 = !_13;
RET = _11.0;
_9 = 93003571461254637444141641923093203370_u128 as f32;
_5 = [23288_u16,10085_u16,55116_u16,53758_u16,53111_u16,55326_u16];
_11.0 = _3;
_13 = _15 * _15;
_8 = _4.0.1;
Call(_5 = fn5(_13, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = _6;
_11.0 = [49128_u16,47234_u16,26072_u16,58187_u16,36826_u16,51448_u16];
_16 = (-102_isize) as i128;
_16 = 10055308622166158223282724132747196387_i128 ^ (-48387028080915798901893818487384032858_i128);
RET = [45870_u16,53534_u16,43873_u16,58584_u16,41718_u16,30374_u16];
_11 = (_2,);
_8 = _4.0.1;
_5 = [13800_u16,46860_u16,8196_u16,17233_u16,54754_u16,58494_u16];
_8 = _4.0.1;
Call(_6 = core::intrinsics::bswap(_15), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _2;
_10 = _13;
_17 = (_11.0,);
RET = [26008_u16,42325_u16,9990_u16,60009_u16,22882_u16,1643_u16];
_17.0 = [40516_u16,55291_u16,38152_u16,36956_u16,41760_u16,25999_u16];
_16 = !(-126837688541946507243173400912524745039_i128);
_15 = _13 + _14;
_17.0 = [62023_u16,57274_u16,21776_u16,59132_u16,52522_u16,46208_u16];
_5 = _3;
Goto(bb4)
}
bb4 = {
_17 = (RET,);
_1 = _10 << _12;
_5 = [42836_u16,15486_u16,41381_u16,58540_u16,36561_u16,59295_u16];
RET = [41597_u16,54281_u16,11023_u16,45026_u16,47920_u16,64133_u16];
_14 = _12 ^ _12;
_12 = _14 + _1;
_4.0.1 = _8;
_3 = [65199_u16,44417_u16,56776_u16,60277_u16,14634_u16,16775_u16];
RET = _17.0;
RET = _2;
_18.1 = _16 as f64;
_4.0.1 = _8;
_9 = _18.1 as f32;
_1 = !_12;
_8 = _4.0.1;
Goto(bb5)
}
bb5 = {
_19 = (-9223372036854775808_isize);
_14 = _12 - _13;
_4.0.1 = _8;
_2 = RET;
_6 = !_15;
_21 = [2187_u16,56200_u16,60933_u16,24099_u16,40870_u16,21443_u16];
_20 = [4949247378523564842_u64,16301105952294885805_u64,17163477403913724632_u64];
_18.0 = _9;
_18.1 = 43497422099629877612473746790994898003_u128 as f64;
_24.0 = _18.1 as f32;
_13 = !_14;
_24 = (_18.0, _18.1);
_20 = [12949115180467848478_u64,9722535854973609539_u64,3673385118802901175_u64];
_15 = _13;
_5 = RET;
_20 = [5839914788404743922_u64,6773907848852795581_u64,7914704468513537931_u64];
_24.0 = -_9;
_18.0 = _24.1 as f32;
_10 = _6 - _14;
_24.0 = -_9;
_26 = _24.0;
_17.0 = [37381_u16,1144_u16,28043_u16,10235_u16,799_u16,3920_u16];
match _19 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb6 = {
_17 = (RET,);
_1 = _10 << _12;
_5 = [42836_u16,15486_u16,41381_u16,58540_u16,36561_u16,59295_u16];
RET = [41597_u16,54281_u16,11023_u16,45026_u16,47920_u16,64133_u16];
_14 = _12 ^ _12;
_12 = _14 + _1;
_4.0.1 = _8;
_3 = [65199_u16,44417_u16,56776_u16,60277_u16,14634_u16,16775_u16];
RET = _17.0;
RET = _2;
_18.1 = _16 as f64;
_4.0.1 = _8;
_9 = _18.1 as f32;
_1 = !_12;
_8 = _4.0.1;
Goto(bb5)
}
bb7 = {
RET = _2;
_10 = _13;
_17 = (_11.0,);
RET = [26008_u16,42325_u16,9990_u16,60009_u16,22882_u16,1643_u16];
_17.0 = [40516_u16,55291_u16,38152_u16,36956_u16,41760_u16,25999_u16];
_16 = !(-126837688541946507243173400912524745039_i128);
_15 = _13 + _14;
_17.0 = [62023_u16,57274_u16,21776_u16,59132_u16,52522_u16,46208_u16];
_5 = _3;
Goto(bb4)
}
bb8 = {
_10 = _6;
_11.0 = [49128_u16,47234_u16,26072_u16,58187_u16,36826_u16,51448_u16];
_16 = (-102_isize) as i128;
_16 = 10055308622166158223282724132747196387_i128 ^ (-48387028080915798901893818487384032858_i128);
RET = [45870_u16,53534_u16,43873_u16,58584_u16,41718_u16,30374_u16];
_11 = (_2,);
_8 = _4.0.1;
_5 = [13800_u16,46860_u16,8196_u16,17233_u16,54754_u16,58494_u16];
_8 = _4.0.1;
Call(_6 = core::intrinsics::bswap(_15), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_7 = !_13;
_5 = [28103_u16,63974_u16,19499_u16,52305_u16,11739_u16,62055_u16];
_9 = _12 as f32;
_3 = _11.0;
_5 = [24699_u16,29865_u16,61775_u16,11430_u16,25996_u16,45315_u16];
_7 = (-1611307661_i32) as u8;
_12 = !_13;
RET = _11.0;
_9 = 93003571461254637444141641923093203370_u128 as f32;
_5 = [23288_u16,10085_u16,55116_u16,53758_u16,53111_u16,55326_u16];
_11.0 = _3;
_13 = _15 * _15;
_8 = _4.0.1;
Call(_5 = fn5(_13, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_15 = _14;
RET = [4724_u16,62956_u16,21356_u16,60255_u16,9018_u16,55541_u16];
_26 = 12204585925278317835_usize as f32;
match _19 {
0 => bb7,
1 => bb6,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
340282366920938463454151235394913435648 => bb16,
_ => bb15
}
}
bb11 = {
_7 = !_13;
_5 = [28103_u16,63974_u16,19499_u16,52305_u16,11739_u16,62055_u16];
_9 = _12 as f32;
_3 = _11.0;
_5 = [24699_u16,29865_u16,61775_u16,11430_u16,25996_u16,45315_u16];
_7 = (-1611307661_i32) as u8;
_12 = !_13;
RET = _11.0;
_9 = 93003571461254637444141641923093203370_u128 as f32;
_5 = [23288_u16,10085_u16,55116_u16,53758_u16,53111_u16,55326_u16];
_11.0 = _3;
_13 = _15 * _15;
_8 = _4.0.1;
Call(_5 = fn5(_13, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_10 = _6;
_11.0 = [49128_u16,47234_u16,26072_u16,58187_u16,36826_u16,51448_u16];
_16 = (-102_isize) as i128;
_16 = 10055308622166158223282724132747196387_i128 ^ (-48387028080915798901893818487384032858_i128);
RET = [45870_u16,53534_u16,43873_u16,58584_u16,41718_u16,30374_u16];
_11 = (_2,);
_8 = _4.0.1;
_5 = [13800_u16,46860_u16,8196_u16,17233_u16,54754_u16,58494_u16];
_8 = _4.0.1;
Call(_6 = core::intrinsics::bswap(_15), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_10 = _6;
_11.0 = [49128_u16,47234_u16,26072_u16,58187_u16,36826_u16,51448_u16];
_16 = (-102_isize) as i128;
_16 = 10055308622166158223282724132747196387_i128 ^ (-48387028080915798901893818487384032858_i128);
RET = [45870_u16,53534_u16,43873_u16,58584_u16,41718_u16,30374_u16];
_11 = (_2,);
_8 = _4.0.1;
_5 = [13800_u16,46860_u16,8196_u16,17233_u16,54754_u16,58494_u16];
_8 = _4.0.1;
Call(_6 = core::intrinsics::bswap(_15), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
_17 = (RET,);
_1 = _10 << _12;
_5 = [42836_u16,15486_u16,41381_u16,58540_u16,36561_u16,59295_u16];
RET = [41597_u16,54281_u16,11023_u16,45026_u16,47920_u16,64133_u16];
_14 = _12 ^ _12;
_12 = _14 + _1;
_4.0.1 = _8;
_3 = [65199_u16,44417_u16,56776_u16,60277_u16,14634_u16,16775_u16];
RET = _17.0;
RET = _2;
_18.1 = _16 as f64;
_4.0.1 = _8;
_9 = _18.1 as f32;
_1 = !_12;
_8 = _4.0.1;
Goto(bb5)
}
bb15 = {
_19 = (-9223372036854775808_isize);
_14 = _12 - _13;
_4.0.1 = _8;
_2 = RET;
_6 = !_15;
_21 = [2187_u16,56200_u16,60933_u16,24099_u16,40870_u16,21443_u16];
_20 = [4949247378523564842_u64,16301105952294885805_u64,17163477403913724632_u64];
_18.0 = _9;
_18.1 = 43497422099629877612473746790994898003_u128 as f64;
_24.0 = _18.1 as f32;
_13 = !_14;
_24 = (_18.0, _18.1);
_20 = [12949115180467848478_u64,9722535854973609539_u64,3673385118802901175_u64];
_15 = _13;
_5 = RET;
_20 = [5839914788404743922_u64,6773907848852795581_u64,7914704468513537931_u64];
_24.0 = -_9;
_18.0 = _24.1 as f32;
_10 = _6 - _14;
_24.0 = -_9;
_26 = _24.0;
_17.0 = [37381_u16,1144_u16,28043_u16,10235_u16,799_u16,3920_u16];
match _19 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb16 = {
_18 = (_9, _24.1);
_11 = (_21,);
_22 = [1604436969_u32,1039547311_u32,1921271132_u32,1287537854_u32];
_23 = !4612_u16;
_24.1 = -_18.1;
_25 = [(-97_i8),42_i8];
Goto(bb17)
}
bb17 = {
Call(_31 = dump_var(4_usize, 12_usize, Move(_12), 22_usize, Move(_22), 7_usize, Move(_7), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_31 = dump_var(4_usize, 2_usize, Move(_2), 16_usize, Move(_16), 23_usize, Move(_23), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(4_usize, 15_usize, Move(_15), 13_usize, Move(_13), 32_usize, _32, 32_usize, _32), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u8,mut _2: u8) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _3: Adt61;
let _4: u8;
let _5: Adt55;
let _6: [u64; 3];
let _7: isize;
let _8: usize;
let _9: bool;
let _10: *mut u128;
let _11: [i8; 2];
let _12: isize;
let _13: (f32, f64);
let _14: isize;
let _15: f64;
let _16: isize;
let _17: u16;
let _18: bool;
let _19: ([u16; 6],);
let _20: [u64; 3];
let _21: Adt56;
let _22: i32;
let _23: i128;
let _24: f32;
let _25: [u64; 3];
let _26: u128;
let _27: bool;
let _28: i128;
let _29: ();
let _30: ();
{
RET = [10852_u16,299_u16,61552_u16,62683_u16,15422_u16,1290_u16];
RET = [57027_u16,11533_u16,5074_u16,26925_u16,45627_u16,27639_u16];
_2 = (-8257978829507444185_i64) as u8;
RET = [12874_u16,30792_u16,57063_u16,1876_u16,65514_u16,37537_u16];
RET = [53674_u16,5781_u16,41387_u16,47773_u16,25083_u16,52072_u16];
_1 = !_2;
RET = [14434_u16,30056_u16,46875_u16,61580_u16,22796_u16,53109_u16];
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [51874_u16,6721_u16,64250_u16,51178_u16,51500_u16,45914_u16];
_4 = _2;
_4 = !_2;
_4 = !_1;
place!(Field::<u32>(Variant(_3, 2), 3)) = !3823090820_u32;
_4 = _1 - _2;
place!(Field::<u32>(Variant(_3, 2), 3)) = (-21410_i16) as u32;
_2 = _1;
_1 = _4 * _2;
_1 = _4 << _4;
_2 = _1 & _1;
RET = [18520_u16,1159_u16,47623_u16,35365_u16,60096_u16,5469_u16];
RET = [63454_u16,8839_u16,19471_u16,62496_u16,15244_u16,28480_u16];
RET = [40812_u16,5624_u16,29767_u16,40847_u16,56478_u16,60576_u16];
_6 = [7960699889451404696_u64,6862084440941495538_u64,13853250568475439528_u64];
RET = [2022_u16,52135_u16,32020_u16,14079_u16,34076_u16,64007_u16];
_2 = true as u8;
Call(_3 = fn6(_4, _2, RET, _2, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = (-88_isize);
place!(Field::<*const [u64; 3]>(Variant(_3, 2), 0)) = core::ptr::addr_of!(_6);
place!(Field::<(*mut u16, i64)>(Variant(_3, 2), 4)).1 = (-5210945117786255615_i64) | 4239366587814462785_i64;
place!(Field::<(*mut u16, i64)>(Variant(_3, 2), 4)).1 = 7809093089701218163_i64 * 3225406213619155876_i64;
_1 = _2 * _4;
_7 = (-39_isize) - 32_isize;
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [55360_u16,42312_u16,50845_u16,61559_u16,40668_u16,26801_u16];
_3 = Adt61::Variant0 { fld0: RET };
_2 = _4;
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [27908_u16,41072_u16,15109_u16,55602_u16,11770_u16,5180_u16];
RET = Field::<[u16; 6]>(Variant(_3, 0), 0);
Goto(bb2)
}
bb2 = {
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = RET;
RET = [27286_u16,14947_u16,30749_u16,64266_u16,39120_u16,54951_u16];
_2 = _4;
_6 = [6800487379007451642_u64,5955045265472522386_u64,1327129510004218996_u64];
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = RET;
RET = [22290_u16,63303_u16,41478_u16,7104_u16,25898_u16,23151_u16];
_4 = _2;
_8 = 7302338242207754967_usize ^ 11701864506572274871_usize;
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [46838_u16,3068_u16,17895_u16,50864_u16,24862_u16,64167_u16];
_8 = 5637515675818589697_u64 as usize;
_1 = _4;
_4 = _2 + _1;
_7 = (-9223372036854775808_isize);
RET = [501_u16,22620_u16,38852_u16,43528_u16,21986_u16,14081_u16];
Goto(bb3)
}
bb3 = {
_6 = [11902627490745328070_u64,4775669156846696865_u64,4249513909188277949_u64];
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = RET;
RET = [48884_u16,25313_u16,63042_u16,639_u16,10984_u16,1693_u16];
_7 = (-9223372036854775808_isize);
match _7 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb4 = {
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = RET;
RET = [27286_u16,14947_u16,30749_u16,64266_u16,39120_u16,54951_u16];
_2 = _4;
_6 = [6800487379007451642_u64,5955045265472522386_u64,1327129510004218996_u64];
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = RET;
RET = [22290_u16,63303_u16,41478_u16,7104_u16,25898_u16,23151_u16];
_4 = _2;
_8 = 7302338242207754967_usize ^ 11701864506572274871_usize;
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [46838_u16,3068_u16,17895_u16,50864_u16,24862_u16,64167_u16];
_8 = 5637515675818589697_u64 as usize;
_1 = _4;
_4 = _2 + _1;
_7 = (-9223372036854775808_isize);
RET = [501_u16,22620_u16,38852_u16,43528_u16,21986_u16,14081_u16];
Goto(bb3)
}
bb5 = {
_7 = (-88_isize);
SetDiscriminant(_3, 2);
place!(Field::<*const [u64; 3]>(Variant(_3, 2), 0)) = core::ptr::addr_of!(_6);
place!(Field::<(*mut u16, i64)>(Variant(_3, 2), 4)).1 = (-5210945117786255615_i64) | 4239366587814462785_i64;
place!(Field::<(*mut u16, i64)>(Variant(_3, 2), 4)).1 = 7809093089701218163_i64 * 3225406213619155876_i64;
_1 = _2 * _4;
_7 = (-39_isize) - 32_isize;
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [55360_u16,42312_u16,50845_u16,61559_u16,40668_u16,26801_u16];
_3 = Adt61::Variant0 { fld0: RET };
_2 = _4;
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [27908_u16,41072_u16,15109_u16,55602_u16,11770_u16,5180_u16];
RET = Field::<[u16; 6]>(Variant(_3, 0), 0);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_9 = !true;
_6 = [16450357223565127860_u64,11879678897837361962_u64,7871783942366405914_u64];
_8 = 13384730720705348115_usize | 2_usize;
_9 = false;
_7 = 9223372036854775807_isize;
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = RET;
_6 = [13364504859880217856_u64,1861164620770938155_u64,1736360198579896917_u64];
_8 = !3_usize;
_2 = !_4;
Goto(bb12)
}
bb12 = {
_4 = '\u{55cc7}' as u8;
_7 = 9223372036854775807_isize >> _1;
_8 = _7 as usize;
_4 = _1;
_9 = _8 > _8;
_12 = 25575_u16 as isize;
_6 = [8235618200901756505_u64,373765511883433140_u64,14296410593642707962_u64];
_13.0 = _2 as f32;
_13.1 = (-12159_i16) as f64;
RET = [64520_u16,60490_u16,55292_u16,61795_u16,23240_u16,4845_u16];
_15 = _13.1;
_12 = _7 * _7;
_13.1 = _15;
place!(Field::<*const [u64; 3]>(Variant(_3, 2), 0)) = core::ptr::addr_of!(_6);
_16 = _12 ^ _7;
_14 = _16 >> _16;
place!(Field::<u32>(Variant(_3, 2), 3)) = !3947752163_u32;
Goto(bb13)
}
bb13 = {
_3 = Adt61::Variant0 { fld0: RET };
place!(Field::<[u16; 6]>(Variant(_3, 0), 0)) = [50384_u16,54072_u16,28768_u16,29505_u16,13853_u16,54391_u16];
_11 = [44_i8,(-94_i8)];
_9 = false;
_20 = _6;
RET = Field::<[u16; 6]>(Variant(_3, 0), 0);
_13.1 = _15 * _15;
_19.0 = [58905_u16,61471_u16,24586_u16,51000_u16,61698_u16,44774_u16];
_1 = !_2;
RET = _19.0;
Goto(bb14)
}
bb14 = {
_23 = (-25189003392189678829767593842158056319_i128);
_2 = _4;
_11 = [(-45_i8),(-61_i8)];
_4 = _1 | _2;
_22 = _16 as i32;
SetDiscriminant(_3, 0);
_7 = _14;
_26 = _15 as u128;
_23 = (-62474858207176236781706796316291038237_i128);
_19.0 = [27541_u16,64063_u16,22213_u16,44379_u16,31017_u16,725_u16];
_9 = _7 != _14;
_10 = core::ptr::addr_of_mut!(_26);
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(5_usize, 14_usize, Move(_14), 23_usize, Move(_23), 1_usize, Move(_1), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(5_usize, 26_usize, Move(_26), 9_usize, Move(_9), 7_usize, Move(_7), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: u8,mut _2: u8,mut _3: [u16; 6],mut _4: u8,mut _5: [u64; 3]) -> Adt61 {
mir! {
type RET = Adt61;
let _6: ([u16; 6],);
let _7: Adt46;
let _8: [u16; 6];
let _9: char;
let _10: *mut [u32; 4];
let _11: isize;
let _12: [u16; 6];
let _13: char;
let _14: [u16; 6];
let _15: (f32, f64);
let _16: isize;
let _17: [u64; 3];
let _18: [u16; 6];
let _19: [u64; 3];
let _20: i8;
let _21: f64;
let _22: i64;
let _23: (u32, *const u8, u64, f64);
let _24: [u16; 6];
let _25: [u32; 4];
let _26: u8;
let _27: [u32; 4];
let _28: char;
let _29: Adt54;
let _30: f32;
let _31: [u32; 4];
let _32: [u64; 3];
let _33: *const [u64; 3];
let _34: [u16; 6];
let _35: u8;
let _36: ([u16; 6],);
let _37: bool;
let _38: [i8; 2];
let _39: i32;
let _40: [u32; 4];
let _41: *mut char;
let _42: [i8; 2];
let _43: isize;
let _44: isize;
let _45: isize;
let _46: (f32, f64);
let _47: u32;
let _48: Adt56;
let _49: f64;
let _50: u64;
let _51: ([u16; 6],);
let _52: [u32; 4];
let _53: f64;
let _54: bool;
let _55: isize;
let _56: Adt54;
let _57: [u64; 3];
let _58: ();
let _59: ();
{
_5 = [10608191850530737117_u64,5246159313496885443_u64,18241269007613952078_u64];
_2 = !_1;
_3 = [26903_u16,4257_u16,56473_u16,37248_u16,7761_u16,41082_u16];
_4 = 1767352308_u32 as u8;
_2 = !_4;
_5 = [14703750137137799572_u64,5839554937556138385_u64,7042821863895041051_u64];
_2 = _4;
_2 = _1;
_6.0 = [21557_u16,4728_u16,22553_u16,36679_u16,6619_u16,34067_u16];
RET = Adt61::Variant0 { fld0: _3 };
place!(Field::<u32>(Variant(RET, 2), 3)) = 1367238613_i32 as u32;
_2 = 6323802941389792339_u64 as u8;
_3 = [42649_u16,43271_u16,17342_u16,32296_u16,59774_u16,55148_u16];
place!(Field::<(*mut u16, i64)>(Variant(RET, 2), 4)).1 = !8079024746678705423_i64;
_6 = (_3,);
place!(Field::<*const [u64; 3]>(Variant(RET, 2), 0)) = core::ptr::addr_of!(_5);
_3 = _6.0;
Goto(bb1)
}
bb1 = {
_1 = !_4;
_6 = (_3,);
place!(Field::<*const [u64; 3]>(Variant(RET, 2), 0)) = core::ptr::addr_of!(_5);
place!(Field::<*const [u64; 3]>(Variant(RET, 2), 0)) = core::ptr::addr_of!(_5);
_4 = _1;
_9 = '\u{7dda9}';
_8 = _6.0;
_6.0 = [20357_u16,26232_u16,57086_u16,4287_u16,50050_u16,59193_u16];
_2 = _4 & _4;
place!(Field::<(*mut u16, i64)>(Variant(RET, 2), 4)).1 = -5034567574389177734_i64;
_6 = (_3,);
_11 = (-54_isize);
place!(Field::<u32>(Variant(RET, 2), 3)) = !1690459066_u32;
match _11 {
0 => bb2,
340282366920938463463374607431768211402 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_4 = !_2;
_12 = [44882_u16,13169_u16,10570_u16,46501_u16,4292_u16,29699_u16];
_6 = (_8,);
_12 = [4744_u16,42011_u16,57829_u16,65471_u16,10356_u16,60434_u16];
_6 = (_8,);
Call(_2 = fn7(_12, _9, _8, _9, _6.0, _6.0, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_15.1 = _11 as f64;
_6 = (_8,);
_4 = true as u8;
_6.0 = [52301_u16,36309_u16,54185_u16,47647_u16,25537_u16,25586_u16];
_4 = _2 ^ _2;
RET = Adt61::Variant0 { fld0: _6.0 };
_14 = [50213_u16,64896_u16,55610_u16,57672_u16,39528_u16,60297_u16];
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = _12;
_15.1 = 3885947803984272495_u64 as f64;
_15.0 = 30639_i16 as f32;
_11 = 9223372036854775807_isize - 99_isize;
_8 = [25390_u16,57032_u16,1108_u16,4339_u16,8339_u16,20035_u16];
_3 = [29868_u16,56075_u16,13199_u16,33932_u16,28538_u16,43643_u16];
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = _14;
_14 = [44538_u16,22064_u16,38791_u16,52345_u16,35169_u16,23127_u16];
_16 = !_11;
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = [58449_u16,26871_u16,28604_u16,13503_u16,3669_u16,64200_u16];
_17 = [7193654498583034626_u64,10368266359161161164_u64,6480881936989983837_u64];
_4 = _2 << _16;
_17 = _5;
_6.0 = _3;
_13 = _9;
_2 = !_4;
_14 = [65079_u16,12324_u16,61242_u16,51537_u16,19464_u16,29471_u16];
_8 = [6392_u16,1558_u16,30944_u16,27947_u16,17723_u16,54254_u16];
_15.1 = 361302758_i32 as f64;
Call(_2 = fn8(_15.0, _6.0, _8, _4, _8), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_5 = _17;
SetDiscriminant(RET, 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = 1910098390_u32 >> _16;
_19 = [4727090822045392279_u64,1109503289418482105_u64,1187896044419744056_u64];
_15.1 = 51259067832346988_i64 as f64;
_12 = [53028_u16,37397_u16,63293_u16,60115_u16,13583_u16,62647_u16];
_3 = _8;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = !3381071371022781020_u64;
_6 = (_3,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = _15.1;
_19 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_6 = (_14,);
_6 = (_3,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_4);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_4);
_18 = [32142_u16,50252_u16,55914_u16,54293_u16,27393_u16,62741_u16];
_15.0 = (-11379_i16) as f32;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = 11731979783107023727_usize as u64;
_14 = [3952_u16,17406_u16,1860_u16,57700_u16,45405_u16,30694_u16];
_18 = _3;
_11 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0 as isize;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _2 as u32;
_11 = _16 & _16;
RET = Adt61::Variant0 { fld0: _6.0 };
Goto(bb7)
}
bb7 = {
_20 = -70_i8;
SetDiscriminant(RET, 0);
_8 = [3957_u16,7785_u16,63253_u16,58177_u16,65360_u16,16950_u16];
_17 = [5765372900750455257_u64,9333573639069992178_u64,4176684949691417573_u64];
_6.0 = [34069_u16,46509_u16,60663_u16,14578_u16,33023_u16,1624_u16];
_11 = !_16;
_16 = -_11;
RET = Adt61::Variant0 { fld0: _14 };
SetDiscriminant(RET, 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
_6.0 = [19911_u16,4308_u16,58737_u16,59732_u16,45986_u16,35922_u16];
Goto(bb8)
}
bb8 = {
_8 = [62630_u16,55556_u16,30782_u16,54367_u16,4698_u16,25695_u16];
_21 = _15.1 + _15.1;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = 1294874113_u32 >> _16;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = _15.1 - _21;
_5 = _17;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = _4 as u64;
_14 = _6.0;
_12 = [20901_u16,6267_u16,27207_u16,33314_u16,30306_u16,29231_u16];
_1 = _4 | _2;
_4 = _2 & _1;
_5 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = _15.1 - _21;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = 8784907266409559303_u64;
_5 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_14 = _12;
_22 = -6184864546518302469_i64;
match Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2 {
0 => bb9,
1 => bb10,
2 => bb11,
8784907266409559303 => bb13,
_ => bb12
}
}
bb9 = {
_20 = -70_i8;
SetDiscriminant(RET, 0);
_8 = [3957_u16,7785_u16,63253_u16,58177_u16,65360_u16,16950_u16];
_17 = [5765372900750455257_u64,9333573639069992178_u64,4176684949691417573_u64];
_6.0 = [34069_u16,46509_u16,60663_u16,14578_u16,33023_u16,1624_u16];
_11 = !_16;
_16 = -_11;
RET = Adt61::Variant0 { fld0: _14 };
SetDiscriminant(RET, 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
_6.0 = [19911_u16,4308_u16,58737_u16,59732_u16,45986_u16,35922_u16];
Goto(bb8)
}
bb10 = {
_5 = _17;
SetDiscriminant(RET, 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = 1910098390_u32 >> _16;
_19 = [4727090822045392279_u64,1109503289418482105_u64,1187896044419744056_u64];
_15.1 = 51259067832346988_i64 as f64;
_12 = [53028_u16,37397_u16,63293_u16,60115_u16,13583_u16,62647_u16];
_3 = _8;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = !3381071371022781020_u64;
_6 = (_3,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = _15.1;
_19 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_6 = (_14,);
_6 = (_3,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_4);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_4);
_18 = [32142_u16,50252_u16,55914_u16,54293_u16,27393_u16,62741_u16];
_15.0 = (-11379_i16) as f32;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = 11731979783107023727_usize as u64;
_14 = [3952_u16,17406_u16,1860_u16,57700_u16,45405_u16,30694_u16];
_18 = _3;
_11 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0 as isize;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _2 as u32;
_11 = _16 & _16;
RET = Adt61::Variant0 { fld0: _6.0 };
Goto(bb7)
}
bb11 = {
Return()
}
bb12 = {
_4 = !_2;
_12 = [44882_u16,13169_u16,10570_u16,46501_u16,4292_u16,29699_u16];
_6 = (_8,);
_12 = [4744_u16,42011_u16,57829_u16,65471_u16,10356_u16,60434_u16];
_6 = (_8,);
Call(_2 = fn7(_12, _9, _8, _9, _6.0, _6.0, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_18 = [12549_u16,15062_u16,46122_u16,5842_u16,10804_u16,18781_u16];
RET = Adt61::Variant0 { fld0: _18 };
_23.2 = 4763371059274591918_u64 << _1;
_23.0 = 407944648_u32 + 3941257797_u32;
_3 = [26071_u16,55695_u16,36326_u16,30591_u16,14183_u16,63185_u16];
_10 = core::ptr::addr_of_mut!(_25);
_11 = _16;
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = [3412_u16,21566_u16,40679_u16,26732_u16,23761_u16,15298_u16];
_19 = _17;
_13 = _9;
_4 = _1;
_25 = [_23.0,_23.0,_23.0,_23.0];
_16 = _11;
_23.0 = 674759941_u32;
Call(_15.0 = core::intrinsics::transmute(_13), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_14 = [43606_u16,19128_u16,29545_u16,58469_u16,21118_u16,57461_u16];
_23.3 = _21 + _21;
_26 = _1 + _4;
_24 = [25722_u16,63654_u16,8080_u16,47600_u16,29045_u16,63207_u16];
_12 = [39441_u16,62465_u16,61211_u16,38711_u16,37481_u16,47276_u16];
_23.1 = core::ptr::addr_of!(_1);
SetDiscriminant(RET, 1);
_23.3 = _21 * _15.1;
Goto(bb15)
}
bb15 = {
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_26);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = (_23.0, _23.1, _23.2, _23.3);
_23.3 = _15.1 + Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).3;
_15.1 = -_21;
_17 = [_23.2,_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_16 = _11 * _11;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = (_23.0, _23.1, _23.2, _23.3);
_2 = !_26;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = _20 as u64;
_15.1 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).3;
match Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0 {
0 => bb16,
1 => bb17,
2 => bb18,
674759941 => bb20,
_ => bb19
}
}
bb16 = {
_15.1 = _11 as f64;
_6 = (_8,);
_4 = true as u8;
_6.0 = [52301_u16,36309_u16,54185_u16,47647_u16,25537_u16,25586_u16];
_4 = _2 ^ _2;
RET = Adt61::Variant0 { fld0: _6.0 };
_14 = [50213_u16,64896_u16,55610_u16,57672_u16,39528_u16,60297_u16];
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = _12;
_15.1 = 3885947803984272495_u64 as f64;
_15.0 = 30639_i16 as f32;
_11 = 9223372036854775807_isize - 99_isize;
_8 = [25390_u16,57032_u16,1108_u16,4339_u16,8339_u16,20035_u16];
_3 = [29868_u16,56075_u16,13199_u16,33932_u16,28538_u16,43643_u16];
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = _14;
_14 = [44538_u16,22064_u16,38791_u16,52345_u16,35169_u16,23127_u16];
_16 = !_11;
place!(Field::<[u16; 6]>(Variant(RET, 0), 0)) = [58449_u16,26871_u16,28604_u16,13503_u16,3669_u16,64200_u16];
_17 = [7193654498583034626_u64,10368266359161161164_u64,6480881936989983837_u64];
_4 = _2 << _16;
_17 = _5;
_6.0 = _3;
_13 = _9;
_2 = !_4;
_14 = [65079_u16,12324_u16,61242_u16,51537_u16,19464_u16,29471_u16];
_8 = [6392_u16,1558_u16,30944_u16,27947_u16,17723_u16,54254_u16];
_15.1 = 361302758_i32 as f64;
Call(_2 = fn8(_15.0, _6.0, _8, _4, _8), ReturnTo(bb6), UnwindUnreachable())
}
bb17 = {
_20 = -70_i8;
SetDiscriminant(RET, 0);
_8 = [3957_u16,7785_u16,63253_u16,58177_u16,65360_u16,16950_u16];
_17 = [5765372900750455257_u64,9333573639069992178_u64,4176684949691417573_u64];
_6.0 = [34069_u16,46509_u16,60663_u16,14578_u16,33023_u16,1624_u16];
_11 = !_16;
_16 = -_11;
RET = Adt61::Variant0 { fld0: _14 };
SetDiscriminant(RET, 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
_6.0 = [19911_u16,4308_u16,58737_u16,59732_u16,45986_u16,35922_u16];
Goto(bb8)
}
bb18 = {
_5 = _17;
SetDiscriminant(RET, 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = 1910098390_u32 >> _16;
_19 = [4727090822045392279_u64,1109503289418482105_u64,1187896044419744056_u64];
_15.1 = 51259067832346988_i64 as f64;
_12 = [53028_u16,37397_u16,63293_u16,60115_u16,13583_u16,62647_u16];
_3 = _8;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = !3381071371022781020_u64;
_6 = (_3,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = _15.1;
_19 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_6 = (_14,);
_6 = (_3,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_4);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_4);
_18 = [32142_u16,50252_u16,55914_u16,54293_u16,27393_u16,62741_u16];
_15.0 = (-11379_i16) as f32;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = 11731979783107023727_usize as u64;
_14 = [3952_u16,17406_u16,1860_u16,57700_u16,45405_u16,30694_u16];
_18 = _3;
_11 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0 as isize;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _2 as u32;
_11 = _16 & _16;
RET = Adt61::Variant0 { fld0: _6.0 };
Goto(bb7)
}
bb19 = {
Return()
}
bb20 = {
_19 = _17;
_28 = _13;
_23 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = _23.1;
_1 = _23.0 as u8;
_14 = [12886_u16,57014_u16,35085_u16,39479_u16,29807_u16,64552_u16];
_23 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = !_23.0;
_10 = core::ptr::addr_of_mut!(_25);
_11 = _16;
_18 = [42079_u16,8180_u16,11054_u16,64071_u16,15478_u16,31360_u16];
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = (_23.0, _23.1, _23.2, _21);
_19 = [_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = _23;
_27 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0,_23.0,_23.0];
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = (_23.0, _23.1, _23.2, _21);
_26 = !_4;
_30 = -_15.0;
_23.1 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).1;
_18 = _3;
_23.3 = _15.1;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = _22 as u64;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _23.0 - _23.0;
_23.1 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).1;
_30 = _15.0;
Call(place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = core::intrinsics::fmaf64(_21, _15.1, _23.3), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = _23.3;
_6 = (_14,);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _22 as u32;
_17 = [_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = -_21;
_27 = (*_10);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_26);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = _23.1;
_23 = (Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0, Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).1, Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2, _15.1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = -_21;
_31 = [_23.0,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0,_23.0,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0];
_4 = _2;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = !_23.0;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _23.0;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = _23.1;
_5 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,_23.2];
_8 = [19082_u16,24023_u16,51920_u16,6663_u16,59224_u16,8529_u16];
_17 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_8 = _3;
_15.0 = _23.0 as f32;
Goto(bb22)
}
bb22 = {
_19 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,_23.2];
_4 = !_2;
_34 = _12;
_32 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,_23.2,_23.2];
_4 = _13 as u8;
_26 = 96423845386502013298051590401150188204_i128 as u8;
_23.1 = core::ptr::addr_of!(_2);
_36.0 = [6816_u16,16966_u16,16270_u16,63367_u16,61131_u16,16884_u16];
_10 = core::ptr::addr_of_mut!((*_10));
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_2);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = 48288_u16 as u32;
_5 = [_23.2,_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_37 = _1 != _2;
Goto(bb23)
}
bb23 = {
_13 = _28;
_13 = _9;
_17 = _5;
_6.0 = [17816_u16,8993_u16,58757_u16,12126_u16,45927_u16,64228_u16];
_30 = -_15.0;
_19 = [_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,_23.2];
_30 = _15.0;
_21 = -_15.1;
_42 = [_20,_20];
_41 = core::ptr::addr_of_mut!(_28);
_5 = [_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,_23.2];
_32 = [_23.2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
Goto(bb24)
}
bb24 = {
_46 = (_15.0, _21);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = _23.2;
_45 = _11 * _11;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = !_23.2;
_41 = core::ptr::addr_of_mut!(_28);
_17 = _32;
_18 = [25715_u16,27403_u16,14094_u16,54492_u16,51512_u16,10383_u16];
_33 = core::ptr::addr_of!(_19);
_28 = _13;
_41 = core::ptr::addr_of_mut!((*_41));
_41 = core::ptr::addr_of_mut!(_28);
_9 = (*_41);
_30 = _46.0 - _15.0;
_46.0 = _30;
_44 = _26 as isize;
_23.2 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).2 = _9 as u64;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = _23.1;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).3 = -_15.1;
_37 = true;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = (_23.0, _23.1, _23.2, _21);
Goto(bb25)
}
bb25 = {
_31 = (*_10);
_23.1 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).1;
_6.0 = [37360_u16,55513_u16,41513_u16,32851_u16,50340_u16,17010_u16];
_23 = (Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0, Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).1, Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2, _46.1);
_35 = _22 as u8;
_11 = _45 * _45;
_28 = _13;
_44 = 30716112434527668319771775181218389075_i128 as isize;
_13 = _28;
_12 = _18;
_26 = _9 as u8;
_23.3 = 63898_u16 as f64;
_19 = _17;
_35 = _23.2 as u8;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)) = (_23.0, _23.1, _23.2, _46.1);
Goto(bb26)
}
bb26 = {
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).1 = core::ptr::addr_of!(_1);
_25 = _27;
_33 = core::ptr::addr_of!(_17);
_46 = (_15.0, _21);
_43 = _11;
_11 = (*_41) as isize;
Goto(bb27)
}
bb27 = {
_12 = [46750_u16,10948_u16,14584_u16,17821_u16,5215_u16,21198_u16];
place!(Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1)).0 = _23.0 * _23.0;
_17 = [Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2,Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).2];
_14 = [15053_u16,45253_u16,44148_u16,23437_u16,8853_u16,55583_u16];
_51 = (_14,);
_38 = [_20,_20];
_15 = (_30, _46.1);
_23.1 = core::ptr::addr_of!(_35);
_47 = Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0 - Field::<(u32, *const u8, u64, f64)>(Variant(RET, 1), 1).0;
_36.0 = [11231_u16,30864_u16,4922_u16,48167_u16,65185_u16,28601_u16];
RET = Adt61::Variant0 { fld0: _18 };
Goto(bb28)
}
bb28 = {
Call(_58 = dump_var(6_usize, 31_usize, Move(_31), 42_usize, Move(_42), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_58 = dump_var(6_usize, 51_usize, Move(_51), 12_usize, Move(_12), 22_usize, Move(_22), 43_usize, Move(_43)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_58 = dump_var(6_usize, 28_usize, Move(_28), 44_usize, Move(_44), 5_usize, Move(_5), 1_usize, Move(_1)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_58 = dump_var(6_usize, 11_usize, Move(_11), 2_usize, Move(_2), 18_usize, Move(_18), 20_usize, Move(_20)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_58 = dump_var(6_usize, 32_usize, Move(_32), 9_usize, Move(_9), 59_usize, _59, 59_usize, _59), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [u16; 6],mut _2: char,mut _3: [u16; 6],mut _4: char,mut _5: [u16; 6],mut _6: [u16; 6],mut _7: u8) -> u8 {
mir! {
type RET = u8;
let _8: f32;
let _9: (f32, f64);
let _10: char;
let _11: [u64; 3];
let _12: &'static i128;
let _13: *mut u16;
let _14: *const *mut u128;
let _15: i16;
let _16: Adt46;
let _17: [u16; 6];
let _18: [u32; 4];
let _19: Adt60;
let _20: u32;
let _21: (f32, f64);
let _22: [u64; 3];
let _23: i8;
let _24: u64;
let _25: Adt57;
let _26: [i8; 2];
let _27: (u32, *const u8, u64, f64);
let _28: isize;
let _29: *mut bool;
let _30: (i128, i32, u8, &'static i128);
let _31: [u16; 6];
let _32: u8;
let _33: *const isize;
let _34: [i8; 2];
let _35: usize;
let _36: isize;
let _37: isize;
let _38: ((i128, i32, u8, &'static i128), (char, *mut u128, *mut i64, *mut u16, f64, i128), *mut i64, (*mut bool, *mut u128), isize);
let _39: f64;
let _40: Adt54;
let _41: f32;
let _42: isize;
let _43: Adt61;
let _44: [u64; 3];
let _45: [u16; 6];
let _46: f32;
let _47: bool;
let _48: (f32, f64);
let _49: Adt62;
let _50: ([u16; 6],);
let _51: (f32, f64);
let _52: u64;
let _53: Adt59;
let _54: &'static i128;
let _55: Adt53;
let _56: bool;
let _57: isize;
let _58: ();
let _59: ();
{
_4 = _2;
_8 = 1387379792852845946_i64 as f32;
_9.1 = 79_isize as f64;
_8 = 136925703997272556574823444442349772751_u128 as f32;
RET = !_7;
_5 = [42102_u16,8876_u16,43683_u16,64293_u16,37024_u16,49178_u16];
_2 = _4;
_3 = [25983_u16,48484_u16,31952_u16,48010_u16,289_u16,17930_u16];
_2 = _4;
_9.0 = _8;
_6 = [42063_u16,40545_u16,62774_u16,49846_u16,12631_u16,19183_u16];
_10 = _2;
_9.0 = _8;
_4 = _10;
_9.1 = _7 as f64;
RET = (-101_i8) as u8;
_4 = _2;
_11 = [11006199448351079333_u64,16000332034381911099_u64,14977613142109801024_u64];
_8 = -_9.0;
Goto(bb1)
}
bb1 = {
_10 = _2;
_9.1 = 5174229069875668279_i64 as f64;
_10 = _2;
RET = 1415847845488080683552049433727979468_u128 as u8;
_1 = [6968_u16,17463_u16,38637_u16,16118_u16,15372_u16,9855_u16];
_2 = _10;
_9.0 = _8 + _8;
_8 = _9.0 - _9.0;
_8 = _9.0;
_15 = !(-4503_i16);
_3 = [59639_u16,57363_u16,3230_u16,11258_u16,35165_u16,6676_u16];
_2 = _4;
_4 = _2;
RET = _7;
_10 = _2;
_7 = !RET;
_9.0 = -_8;
_6 = _1;
_18 = [2752880753_u32,218346894_u32,1825993582_u32,2551090929_u32];
_6 = [58680_u16,9311_u16,41967_u16,57510_u16,52051_u16,7359_u16];
_18 = [2294778339_u32,3484969699_u32,1636627443_u32,1482539405_u32];
Goto(bb2)
}
bb2 = {
_17 = [37127_u16,51742_u16,27116_u16,21095_u16,30666_u16,42007_u16];
RET = _7 - _7;
_5 = [6091_u16,21795_u16,51895_u16,33612_u16,37629_u16,52346_u16];
_9.1 = _8 as f64;
_1 = [12345_u16,2387_u16,45616_u16,62914_u16,27743_u16,28881_u16];
Goto(bb3)
}
bb3 = {
_17 = [53554_u16,56027_u16,19124_u16,10424_u16,64924_u16,38798_u16];
RET = _7 ^ _7;
_15 = (-24502_i16);
_15 = 10931_i16 ^ (-19916_i16);
_17 = [13098_u16,56798_u16,62916_u16,5453_u16,4697_u16,36301_u16];
_11 = [12057837271116646718_u64,8080004008757204009_u64,4669881773185516259_u64];
_20 = 1700536895_u32 + 1992070153_u32;
_10 = _2;
_21 = _9;
_1 = [59639_u16,28884_u16,52654_u16,4599_u16,4530_u16,11735_u16];
_3 = [1177_u16,14858_u16,24986_u16,43008_u16,21220_u16,2376_u16];
_22 = [3707492751385643743_u64,4233462186067429391_u64,1549242478435781935_u64];
_1 = [3212_u16,52308_u16,1179_u16,51437_u16,32576_u16,18319_u16];
Goto(bb4)
}
bb4 = {
_5 = _6;
_17 = _6;
_1 = [46705_u16,12565_u16,29440_u16,1399_u16,20744_u16,54236_u16];
_1 = [90_u16,46556_u16,8854_u16,53052_u16,26423_u16,19256_u16];
_24 = _4 as u64;
RET = _7 ^ _7;
_21.1 = _9.1 * _9.1;
_5 = [29077_u16,23450_u16,34537_u16,24964_u16,54959_u16,9185_u16];
_21 = (_8, _9.1);
_10 = _4;
_24 = 14081435624754576216_u64 & 5583059670601446511_u64;
RET = !_7;
_11 = [_24,_24,_24];
_1 = _6;
_21.1 = _9.1;
_7 = !RET;
_4 = _2;
_18 = [_20,_20,_20,_20];
_22 = [_24,_24,_24];
RET = _7;
_21.1 = _9.1;
_1 = [3930_u16,33692_u16,18188_u16,11423_u16,49606_u16,65266_u16];
_22 = [_24,_24,_24];
Goto(bb5)
}
bb5 = {
_24 = !12446542370535063882_u64;
_4 = _2;
_27.3 = 24037_u16 as f64;
_26 = [29_i8,(-28_i8)];
_21.1 = -_9.1;
_11 = [_24,_24,_24];
_9.1 = _27.3 - _27.3;
_9.1 = _21.1 + _27.3;
_21.1 = -_27.3;
RET = false as u8;
RET = _15 as u8;
_1 = _17;
_27.3 = _9.0 as f64;
_21.1 = -_9.1;
_21 = (_9.0, _9.1);
Goto(bb6)
}
bb6 = {
_15 = !(-5451_i16);
_7 = !RET;
RET = !_7;
_33 = core::ptr::addr_of!(_28);
_4 = _10;
_17 = [49824_u16,11357_u16,14623_u16,29711_u16,36581_u16,65519_u16];
_30.0 = !153449375964729644206453314300471770322_i128;
_24 = 18015987020785131507_u64 + 16752816263802708585_u64;
_34 = [(-57_i8),(-17_i8)];
_11 = [_24,_24,_24];
_7 = RET;
_32 = RET + RET;
_33 = core::ptr::addr_of!((*_33));
_15 = -(-32038_i16);
Goto(bb7)
}
bb7 = {
_30.0 = (-105765274458215349779762131205416173809_i128) << _32;
_38.1.0 = _4;
_38.0.0 = 6122270215328219447_i64 as i128;
_15 = 88805465174576763094424255135004695797_u128 as i16;
_27.1 = core::ptr::addr_of!(_7);
_21.1 = 2_usize as f64;
_21.0 = _8 - _9.0;
RET = 9223372036854775807_isize as u8;
Goto(bb8)
}
bb8 = {
_5 = [53104_u16,27996_u16,43997_u16,47191_u16,53505_u16,40767_u16];
_21 = (_8, _9.1);
_38.1.5 = _30.0 * _30.0;
_9 = (_8, _21.1);
_11 = _22;
_27.3 = _9.1;
RET = _32;
_12 = &_38.0.0;
_37 = (-124_isize);
_30 = (_38.1.5, (-692221054_i32), _7, Move(_12));
_5 = [5466_u16,27812_u16,54702_u16,54798_u16,47035_u16,4861_u16];
_30.3 = &_38.1.5;
_38.0 = (_38.1.5, _30.1, _30.2, Move(_30.3));
_14 = core::ptr::addr_of!(_38.1.1);
_7 = !RET;
_27.0 = _20;
_11 = _22;
Goto(bb9)
}
bb9 = {
_4 = _38.1.0;
_3 = [18076_u16,11263_u16,498_u16,56050_u16,12138_u16,16714_u16];
_5 = [64390_u16,55320_u16,15852_u16,6025_u16,27672_u16,62359_u16];
_38.0.0 = !_38.1.5;
_34 = [125_i8,29_i8];
_18 = [_27.0,_20,_27.0,_27.0];
_27.0 = _20;
_38.0.3 = &_38.1.5;
_38.1.0 = _4;
_9.0 = -_8;
_35 = !5_usize;
_31 = [22566_u16,34500_u16,25976_u16,7450_u16,28162_u16,48270_u16];
_21 = _9;
_15 = 24326_i16 | (-8703_i16);
_21.0 = -_9.0;
_33 = core::ptr::addr_of!((*_33));
_38.0.1 = _30.1;
_38.4 = _37;
Goto(bb10)
}
bb10 = {
_44 = _22;
_26 = _34;
_30 = (_38.0.0, _38.0.1, RET, Move(_38.0.3));
_27.0 = !_20;
_30.1 = _38.0.1;
_38.0.0 = _30.0 ^ _30.0;
_38.1.4 = _21.1 * _21.1;
_27.0 = _20;
_41 = -_8;
_21.1 = -_38.1.4;
_30.1 = -_38.0.1;
_33 = core::ptr::addr_of!(_28);
_27.0 = _20 - _20;
_6 = [7020_u16,27169_u16,51854_u16,16788_u16,17648_u16,42687_u16];
_1 = [18038_u16,65361_u16,20217_u16,26154_u16,54876_u16,16684_u16];
_1 = _31;
_48 = _21;
Goto(bb11)
}
bb11 = {
_35 = 2_usize & 3562008091515754791_usize;
_33 = core::ptr::addr_of!((*_33));
_14 = core::ptr::addr_of!(_38.1.1);
_24 = _48.0 as u64;
_47 = _38.0.0 <= _38.0.0;
_27.2 = !_24;
_38.3.0 = core::ptr::addr_of_mut!(_47);
_29 = core::ptr::addr_of_mut!(_47);
_15 = -15472_i16;
_17 = [21677_u16,45706_u16,27735_u16,50959_u16,12781_u16,23221_u16];
_31 = [55095_u16,31022_u16,64945_u16,18366_u16,32986_u16,56214_u16];
_27.2 = !_24;
_42 = !_37;
Goto(bb12)
}
bb12 = {
_8 = _42 as f32;
_30.0 = -_38.0.0;
_23 = 11_i8 << _20;
_38.4 = _37 | _37;
_21.1 = _9.1;
_4 = _2;
_38.0.1 = (-4412862152704842769_i64) as i32;
_6 = _31;
_32 = _30.2;
_51.1 = 54309150858227848159973433970657191366_u128 as f64;
_38.0.1 = _30.1;
_48.0 = _21.0;
_38.0.2 = _30.2;
_27.1 = core::ptr::addr_of!(_38.0.2);
_51 = (_9.0, _48.1);
_30.0 = _38.1.5;
_38.0.1 = !_30.1;
_38.0.3 = &_30.0;
_38.4 = _37;
_22 = _44;
_27.1 = core::ptr::addr_of!(_32);
_33 = core::ptr::addr_of!((*_33));
_29 = _38.3.0;
Goto(bb13)
}
bb13 = {
_38.1.5 = !_38.0.0;
Call(_20 = core::intrinsics::bswap(_27.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_35 = !5_usize;
_38.4 = _42 | _37;
_7 = _30.2 >> _38.1.5;
_51 = (_41, _27.3);
_38.1.5 = _38.0.0;
_45 = [7502_u16,51376_u16,39003_u16,32992_u16,39499_u16,7242_u16];
_12 = Move(_38.0.3);
_38.1.0 = _4;
_50 = (_17,);
_52 = _38.0.1 as u64;
_14 = core::ptr::addr_of!(_38.3.1);
Goto(bb15)
}
bb15 = {
Call(_58 = dump_var(7_usize, 10_usize, Move(_10), 42_usize, Move(_42), 47_usize, Move(_47), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_58 = dump_var(7_usize, 17_usize, Move(_17), 35_usize, Move(_35), 15_usize, Move(_15), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_58 = dump_var(7_usize, 23_usize, Move(_23), 18_usize, Move(_18), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_58 = dump_var(7_usize, 31_usize, Move(_31), 26_usize, Move(_26), 59_usize, _59, 59_usize, _59), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: f32,mut _2: [u16; 6],mut _3: [u16; 6],mut _4: u8,mut _5: [u16; 6]) -> u8 {
mir! {
type RET = u8;
let _6: f64;
let _7: bool;
let _8: [u64; 3];
let _9: [i8; 2];
let _10: f64;
let _11: isize;
let _12: (f32, f64);
let _13: usize;
let _14: bool;
let _15: *const *mut u128;
let _16: (f32, f64);
let _17: isize;
let _18: isize;
let _19: f64;
let _20: usize;
let _21: i8;
let _22: *const i32;
let _23: Adt59;
let _24: [i8; 2];
let _25: Adt46;
let _26: *mut u128;
let _27: i8;
let _28: *mut bool;
let _29: ((*mut bool, *mut u128),);
let _30: isize;
let _31: [i8; 2];
let _32: [u16; 6];
let _33: u16;
let _34: ();
let _35: ();
{
_4 = 54_u8;
_1 = 13097967942485444682_usize as f32;
_5 = [34158_u16,39878_u16,12099_u16,48133_u16,9161_u16,3168_u16];
RET = !_4;
_6 = 3852093081_u32 as f64;
_2 = [5513_u16,45202_u16,42119_u16,47939_u16,23582_u16,6143_u16];
_2 = [32418_u16,47621_u16,6806_u16,48036_u16,59531_u16,30527_u16];
_5 = _3;
RET = _4;
_7 = !true;
_3 = [58154_u16,32276_u16,36880_u16,53249_u16,35545_u16,53162_u16];
Call(_8 = fn9(_7, _5, _3, _3, _1, RET, _2, _2, _3, _3, _2, _4, _2, _2, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = [(-24_i8),76_i8];
_4 = _6 as u8;
_9 = [(-60_i8),(-61_i8)];
RET = 117_i8 as u8;
_4 = (-118_i8) as u8;
_5 = [42760_u16,52997_u16,60747_u16,21871_u16,16552_u16,32093_u16];
_4 = RET;
_2 = [19942_u16,21531_u16,11304_u16,50874_u16,14613_u16,10123_u16];
RET = _4 ^ _4;
_10 = _6;
_8 = [897838534770329931_u64,5558142939302398539_u64,9355024161446187156_u64];
_3 = [14750_u16,23604_u16,64434_u16,17290_u16,20847_u16,4537_u16];
_12.0 = -_1;
_12.1 = -_10;
_14 = !_7;
_13 = !2_usize;
_8 = [1990589288902637397_u64,11374764305607499605_u64,5326773330167945681_u64];
_12 = (_1, _10);
_12 = (_1, _10);
_13 = (-3989762261612243128_i64) as usize;
_12.1 = _6;
Goto(bb2)
}
bb2 = {
_3 = [65430_u16,65506_u16,17954_u16,23537_u16,29634_u16,30665_u16];
RET = _4 - _4;
_2 = [10045_u16,59919_u16,47237_u16,29225_u16,24168_u16,1803_u16];
_2 = _3;
_2 = [57959_u16,59122_u16,2897_u16,52211_u16,35541_u16,44175_u16];
_13 = 5_usize;
_2[_13] = 3711325038_u32 as u16;
Goto(bb3)
}
bb3 = {
_8 = [6758609745496938765_u64,14241197307689333668_u64,900544636146240039_u64];
_4 = RET;
_8 = [18068238423661298217_u64,5288487525634287990_u64,11316243413155045692_u64];
_2[_13] = _5[_13] >> _4;
_14 = _7 & _7;
_8 = [3416949458129349547_u64,17265110233666828834_u64,3774351506949822364_u64];
_11 = !(-9223372036854775808_isize);
_8 = [14707834138527143441_u64,8576282103835122352_u64,15056853331151209326_u64];
_2[_13] = _5[_13] * _5[_13];
_16 = (_12.0, _12.1);
_12.0 = (-139840237425298881933294337573241733560_i128) as f32;
Goto(bb4)
}
bb4 = {
_10 = _16.1 + _16.1;
RET = _4 & _4;
_16.0 = _12.0 * _12.0;
Goto(bb5)
}
bb5 = {
_12 = _16;
_6 = 150171210210809783848905121775225213291_i128 as f64;
_8 = [15887784490289933760_u64,7527676164849374034_u64,15626200701584533231_u64];
_5 = [_3[_13],_3[_13],_2[_13],_3[_13],_3[_13],_2[_13]];
_9 = [(-119_i8),(-28_i8)];
_17 = _11;
_19 = -_16.1;
_9 = [11_i8,(-103_i8)];
_9 = [(-16_i8),40_i8];
Goto(bb6)
}
bb6 = {
_1 = 1638653195_i32 as f32;
_3[_13] = !_2[_13];
RET = _4;
RET = _4 - _4;
_8 = [16810871995056618262_u64,16767239233298519483_u64,5496870329271551772_u64];
_12.0 = -_1;
_8 = [11742317162683137242_u64,5231749296805519058_u64,12358165944386810725_u64];
RET = _4 * _4;
_21 = 56_i8;
_3 = [_2[_13],_2[_13],_2[_13],_5[_13],_2[_13],_5[_13]];
_13 = 14779897106249083543_usize;
_5 = [55467_u16,8449_u16,1144_u16,49780_u16,55653_u16,33680_u16];
_17 = _11;
_21 = !(-39_i8);
_11 = -_17;
_20 = _13 ^ _13;
_12.1 = _4 as f64;
_18 = 113187622_u32 as isize;
_12.1 = 25714_u16 as f64;
match _13 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
14779897106249083543 => bb8,
_ => bb7
}
}
bb7 = {
_3 = [65430_u16,65506_u16,17954_u16,23537_u16,29634_u16,30665_u16];
RET = _4 - _4;
_2 = [10045_u16,59919_u16,47237_u16,29225_u16,24168_u16,1803_u16];
_2 = _3;
_2 = [57959_u16,59122_u16,2897_u16,52211_u16,35541_u16,44175_u16];
_13 = 5_usize;
_2[_13] = 3711325038_u32 as u16;
Goto(bb3)
}
bb8 = {
_21 = 106_i8;
_5 = [30008_u16,4757_u16,44520_u16,55105_u16,22420_u16,27911_u16];
_8 = [5684558494320322303_u64,10976632871033744056_u64,15017914588603658299_u64];
RET = _4;
_12.1 = _19 - _19;
_6 = _16.1 - _16.1;
_24 = [_21,_21];
_16 = (_1, _10);
_6 = -_12.1;
_11 = _18 | _17;
_8 = [3144278070907913286_u64,11107457628312072106_u64,10594150860423610325_u64];
RET = !_4;
_6 = 1842682032_u32 as f64;
_5 = [52540_u16,6879_u16,38655_u16,15156_u16,50272_u16,2948_u16];
_12 = (_1, _16.1);
_10 = 855127330_u32 as f64;
_24 = [_21,_21];
RET = _4 * _4;
_18 = _17;
match _21 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
106 => bb10,
_ => bb9
}
}
bb9 = {
_1 = 1638653195_i32 as f32;
_3[_13] = !_2[_13];
RET = _4;
RET = _4 - _4;
_8 = [16810871995056618262_u64,16767239233298519483_u64,5496870329271551772_u64];
_12.0 = -_1;
_8 = [11742317162683137242_u64,5231749296805519058_u64,12358165944386810725_u64];
RET = _4 * _4;
_21 = 56_i8;
_3 = [_2[_13],_2[_13],_2[_13],_5[_13],_2[_13],_5[_13]];
_13 = 14779897106249083543_usize;
_5 = [55467_u16,8449_u16,1144_u16,49780_u16,55653_u16,33680_u16];
_17 = _11;
_21 = !(-39_i8);
_11 = -_17;
_20 = _13 ^ _13;
_12.1 = _4 as f64;
_18 = 113187622_u32 as isize;
_12.1 = 25714_u16 as f64;
match _13 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
14779897106249083543 => bb8,
_ => bb7
}
}
bb10 = {
_21 = RET as i8;
_16.1 = _13 as f64;
_16 = (_12.0, _19);
_12.1 = -_16.1;
_9 = [_21,_21];
_19 = -_12.1;
_8 = [12489051415577437848_u64,5117223816549261958_u64,6866818233332471574_u64];
_16.1 = _19 - _19;
_9 = [_21,_21];
RET = _11 as u8;
_15 = core::ptr::addr_of!(_26);
_16 = _12;
_24 = _9;
_17 = !_18;
_18 = -_17;
RET = _4 | _4;
_21 = 28_i8;
_1 = 197444938271763376462848869877577103816_u128 as f32;
_2 = [32944_u16,19024_u16,26863_u16,37551_u16,50851_u16,30739_u16];
_12.0 = _20 as f32;
_24 = _9;
_10 = _16.1 + _16.1;
Goto(bb11)
}
bb11 = {
_18 = _17;
_18 = _20 as isize;
_21 = 41_i8;
_4 = !RET;
_9 = [_21,_21];
RET = 9828740776649149850_u64 as u8;
_11 = _18;
_3 = [14682_u16,15763_u16,63876_u16,37323_u16,42850_u16,60351_u16];
_14 = !_7;
_3 = [14394_u16,3362_u16,42765_u16,28871_u16,6239_u16,64714_u16];
_2 = _5;
_27 = !_21;
_12 = (_16.0, _10);
_4 = _11 as u8;
_6 = (-8984_i16) as f64;
Goto(bb12)
}
bb12 = {
_13 = _21 as usize;
_8 = [11713953685998160665_u64,10676593876453154722_u64,9953835279251645826_u64];
_9 = [_21,_27];
RET = _4;
match _21 {
0 => bb1,
1 => bb2,
2 => bb9,
41 => bb13,
_ => bb4
}
}
bb13 = {
_24 = [_21,_27];
_9 = [_27,_21];
_19 = _10;
_16.1 = _6 - _19;
_1 = _12.0;
_3 = [1814_u16,44393_u16,12406_u16,38595_u16,64408_u16,21568_u16];
_15 = core::ptr::addr_of!(_29.0.1);
_4 = !RET;
_17 = _11 + _18;
Goto(bb14)
}
bb14 = {
_10 = 74194827074485216920806265360422918829_u128 as f64;
_32 = [38766_u16,521_u16,4964_u16,25604_u16,24967_u16,4413_u16];
_13 = _20;
_10 = 27234_i16 as f64;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(8_usize, 21_usize, Move(_21), 3_usize, Move(_3), 24_usize, Move(_24), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(8_usize, 8_usize, Move(_8), 32_usize, Move(_32), 4_usize, Move(_4), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: bool,mut _2: [u16; 6],mut _3: [u16; 6],mut _4: [u16; 6],mut _5: f32,mut _6: u8,mut _7: [u16; 6],mut _8: [u16; 6],mut _9: [u16; 6],mut _10: [u16; 6],mut _11: [u16; 6],mut _12: u8,mut _13: [u16; 6],mut _14: [u16; 6],mut _15: u8) -> [u64; 3] {
mir! {
type RET = [u64; 3];
let _16: u8;
let _17: bool;
let _18: *mut char;
let _19: [i8; 2];
let _20: [u64; 3];
let _21: ([u16; 6],);
let _22: [u64; 3];
let _23: u32;
let _24: u8;
let _25: u128;
let _26: f64;
let _27: [u16; 6];
let _28: (*mut u16, i64);
let _29: [u32; 4];
let _30: (f32, f64);
let _31: ([u16; 6],);
let _32: u8;
let _33: [u64; 3];
let _34: char;
let _35: *mut u16;
let _36: bool;
let _37: [u32; 4];
let _38: [u16; 6];
let _39: ([u16; 6],);
let _40: u64;
let _41: (u32, *const u8, u64, f64);
let _42: Adt49;
let _43: i64;
let _44: isize;
let _45: (f32, f64);
let _46: u32;
let _47: i64;
let _48: [u32; 4];
let _49: isize;
let _50: [u64; 3];
let _51: [u32; 4];
let _52: ();
let _53: ();
{
RET = [12387082723188137322_u64,14319587528145033778_u64,10452111351521961427_u64];
_10 = _7;
_11 = _9;
_3 = _14;
_10 = _7;
_9 = [17306_u16,55491_u16,62427_u16,23354_u16,16171_u16,48494_u16];
_11 = [22157_u16,21958_u16,18465_u16,60710_u16,62607_u16,34513_u16];
_16 = _5 as u8;
_2 = [60614_u16,15903_u16,13893_u16,1015_u16,47339_u16,60230_u16];
_13 = [18673_u16,38973_u16,22281_u16,17886_u16,12116_u16,8148_u16];
Goto(bb1)
}
bb1 = {
_9 = [11958_u16,51089_u16,42756_u16,56034_u16,49245_u16,11568_u16];
_19 = [(-73_i8),(-7_i8)];
_16 = !_6;
_12 = 189990395667739011120999919339577472167_u128 as u8;
_5 = (-74057771121014517713427020613590202215_i128) as f32;
_17 = _1 | _1;
_2 = _14;
_1 = !_17;
_7 = _14;
RET = [16552899197600599491_u64,8281274128785918751_u64,1270733317559294_u64];
_20 = [2783474604561658038_u64,634237817449908998_u64,2465372882190771998_u64];
_17 = _15 >= _6;
_20 = [13626100227127450160_u64,695206269387151781_u64,3978248573366149284_u64];
_7 = [60318_u16,21613_u16,62322_u16,1850_u16,27958_u16,34958_u16];
_14 = [8598_u16,49049_u16,18052_u16,17405_u16,34073_u16,26767_u16];
_2 = [14733_u16,35459_u16,23009_u16,38041_u16,15636_u16,21297_u16];
Goto(bb2)
}
bb2 = {
_8 = _10;
_17 = _1 | _1;
_15 = !_16;
_21 = (_3,);
_21 = (_3,);
_9 = [62060_u16,58935_u16,48492_u16,43769_u16,39496_u16,33659_u16];
_20 = [9003269102629396366_u64,13022936757735628101_u64,11428703100759199730_u64];
RET = [3941004783402314750_u64,10536137735494733825_u64,11844721607589438848_u64];
_17 = _1;
_12 = _15;
_17 = !_1;
Call(RET = core::intrinsics::transmute(_20), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_9 = [11501_u16,52035_u16,32317_u16,46482_u16,31973_u16,12400_u16];
_22 = RET;
_21.0 = [21297_u16,62698_u16,44680_u16,35159_u16,12151_u16,41592_u16];
_2 = [16771_u16,29172_u16,64178_u16,59058_u16,58065_u16,48322_u16];
_20 = [8850488585929791713_u64,8998113634273289761_u64,8436285848680816504_u64];
_17 = _1 ^ _1;
_3 = [10244_u16,16787_u16,56155_u16,48132_u16,5280_u16,34644_u16];
_5 = 44293_u16 as f32;
_9 = [7803_u16,44225_u16,20582_u16,57010_u16,13817_u16,31724_u16];
_28.1 = (-2417546202866564437_i64);
_19 = [(-7_i8),(-40_i8)];
_14 = _4;
_27 = _11;
RET = [16192706130547140096_u64,11234184380380264631_u64,7499196109136808600_u64];
_14 = [60831_u16,51553_u16,38587_u16,26307_u16,54994_u16,33156_u16];
_25 = !129549048565379148021964367521342721926_u128;
_10 = [29995_u16,24984_u16,8306_u16,41554_u16,53508_u16,12601_u16];
RET = _22;
_14 = _3;
match _6 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
54 => bb7,
_ => bb6
}
}
bb4 = {
_8 = _10;
_17 = _1 | _1;
_15 = !_16;
_21 = (_3,);
_21 = (_3,);
_9 = [62060_u16,58935_u16,48492_u16,43769_u16,39496_u16,33659_u16];
_20 = [9003269102629396366_u64,13022936757735628101_u64,11428703100759199730_u64];
RET = [3941004783402314750_u64,10536137735494733825_u64,11844721607589438848_u64];
_17 = _1;
_12 = _15;
_17 = !_1;
Call(RET = core::intrinsics::transmute(_20), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_9 = [11958_u16,51089_u16,42756_u16,56034_u16,49245_u16,11568_u16];
_19 = [(-73_i8),(-7_i8)];
_16 = !_6;
_12 = 189990395667739011120999919339577472167_u128 as u8;
_5 = (-74057771121014517713427020613590202215_i128) as f32;
_17 = _1 | _1;
_2 = _14;
_1 = !_17;
_7 = _14;
RET = [16552899197600599491_u64,8281274128785918751_u64,1270733317559294_u64];
_20 = [2783474604561658038_u64,634237817449908998_u64,2465372882190771998_u64];
_17 = _15 >= _6;
_20 = [13626100227127450160_u64,695206269387151781_u64,3978248573366149284_u64];
_7 = [60318_u16,21613_u16,62322_u16,1850_u16,27958_u16,34958_u16];
_14 = [8598_u16,49049_u16,18052_u16,17405_u16,34073_u16,26767_u16];
_2 = [14733_u16,35459_u16,23009_u16,38041_u16,15636_u16,21297_u16];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
RET = _22;
_19 = [(-110_i8),(-110_i8)];
_23 = _25 as u32;
_27 = [14251_u16,44926_u16,12869_u16,19936_u16,22353_u16,35460_u16];
_23 = 115777978_u32 - 262436811_u32;
_8 = _3;
_7 = [28150_u16,8664_u16,52122_u16,62480_u16,16752_u16,54051_u16];
_7 = _11;
_22 = [2686090873733090186_u64,4607027071965892020_u64,2051700816417786002_u64];
_17 = !_1;
_11 = [10652_u16,61646_u16,58078_u16,24798_u16,17151_u16,27778_u16];
_16 = !_12;
_21 = (_10,);
_16 = !_12;
_22 = [18162999351471723347_u64,11886044165049686433_u64,8730803903702998152_u64];
_30.1 = _12 as f64;
_31 = (_3,);
_7 = _4;
Goto(bb8)
}
bb8 = {
_8 = [19222_u16,34218_u16,60976_u16,21856_u16,22747_u16,56673_u16];
_23 = !4148832128_u32;
_20 = [15821016879136044411_u64,8668530201605980211_u64,16278523850427173796_u64];
_20 = [5527505246030084527_u64,12269625847594896921_u64,4398026519681631923_u64];
_30.1 = _23 as f64;
_22 = RET;
_24 = !_16;
_23 = 765751319_u32 + 1959903802_u32;
_20 = [8152786779094456992_u64,16423354483715530049_u64,6540996328275570704_u64];
_6 = !_16;
_23 = !863910198_u32;
_14 = _2;
_9 = _31.0;
_27 = _13;
_29 = [_23,_23,_23,_23];
_28.1 = -(-1721177189841578866_i64);
_27 = _9;
_10 = [56415_u16,7523_u16,28549_u16,5290_u16,17097_u16,16641_u16];
_12 = 3_usize as u8;
_32 = 16239059350456989967_usize as u8;
_3 = [11930_u16,44156_u16,21568_u16,5171_u16,10242_u16,41285_u16];
RET = _22;
_14 = [4875_u16,5767_u16,57700_u16,49435_u16,56680_u16,61542_u16];
_24 = 30268891057786466615460292138688370789_i128 as u8;
_2 = [51460_u16,52064_u16,29316_u16,22640_u16,26531_u16,35531_u16];
Goto(bb9)
}
bb9 = {
_22 = [17625065685512315186_u64,17552375062231273063_u64,12602954221666170041_u64];
_31.0 = [11405_u16,35993_u16,17554_u16,57820_u16,51991_u16,59448_u16];
_3 = [46218_u16,25007_u16,44482_u16,50051_u16,62455_u16,21754_u16];
_21.0 = _4;
_20 = [3981610699376540749_u64,2660929822797986006_u64,16651305110903879916_u64];
_26 = _30.1 - _30.1;
_27 = [7711_u16,21325_u16,11977_u16,54972_u16,54913_u16,45794_u16];
_39.0 = [8466_u16,54438_u16,35068_u16,23126_u16,3691_u16,19014_u16];
_29 = [_23,_23,_23,_23];
_15 = _12 >> _12;
_37 = [_23,_23,_23,_23];
_15 = _16 << _24;
_22 = [9831313219280286751_u64,16222599775273536156_u64,18307586552964899763_u64];
_32 = _24 << _6;
_31.0 = [62936_u16,19478_u16,10619_u16,14061_u16,64443_u16,48833_u16];
_4 = [3274_u16,43509_u16,33017_u16,59058_u16,36828_u16,46684_u16];
Goto(bb10)
}
bb10 = {
RET = [8791077215611790610_u64,7701120563007791060_u64,4476356922560348882_u64];
_38 = _4;
_13 = _7;
_23 = 1242783284_u32 ^ 3301290336_u32;
_11 = [8049_u16,12044_u16,12948_u16,26228_u16,41730_u16,9610_u16];
_30.0 = _5;
_15 = _6;
_20 = RET;
_37 = _29;
_21 = (_7,);
_6 = _28.1 as u8;
_18 = core::ptr::addr_of_mut!(_34);
Call(_33 = fn10(_1, _39.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_19 = [103_i8,100_i8];
_41.0 = !_23;
_29 = _37;
_16 = _32;
_25 = !237315299324065130100021726129906214817_u128;
_12 = _32;
_41.1 = core::ptr::addr_of!(_24);
_12 = _25 as u8;
_10 = [28585_u16,13676_u16,20953_u16,15729_u16,51253_u16,13189_u16];
_45.1 = -_30.1;
_34 = '\u{b2184}';
_18 = core::ptr::addr_of_mut!(_34);
_10 = _11;
_4 = [51397_u16,43538_u16,40073_u16,60020_u16,20000_u16,3619_u16];
_39 = _21;
Goto(bb12)
}
bb12 = {
_40 = !5826641328539119657_u64;
_41.3 = _45.1;
_32 = _24 + _24;
_23 = _41.0;
_2 = [23471_u16,4639_u16,44199_u16,50367_u16,51942_u16,59993_u16];
_13 = [16051_u16,62216_u16,43672_u16,51189_u16,40167_u16,56825_u16];
_37 = [_23,_41.0,_23,_41.0];
_41.1 = core::ptr::addr_of!(_32);
_45 = (_30.0, _26);
_23 = !_41.0;
_23 = _41.0 & _41.0;
_32 = _6 | _15;
Goto(bb13)
}
bb13 = {
_45.1 = -_30.1;
_3 = [50522_u16,40746_u16,43632_u16,14350_u16,41304_u16,31694_u16];
_45.0 = _30.0 * _5;
_14 = [32493_u16,1568_u16,8190_u16,11158_u16,12533_u16,33648_u16];
_12 = 154821747181306481251234160405239042535_i128 as u8;
_28.1 = !(-2951114256931540418_i64);
_3 = [33154_u16,42804_u16,52735_u16,20327_u16,54909_u16,49834_u16];
_49 = (-9223372036854775808_isize);
_39.0 = [36164_u16,37446_u16,33020_u16,32280_u16,40554_u16,14342_u16];
_21.0 = [31730_u16,62632_u16,37017_u16,7789_u16,22744_u16,43346_u16];
_41.2 = _40 + _40;
_44 = _30.0 as isize;
RET = [_40,_40,_40];
_50 = [_41.2,_40,_41.2];
_45.1 = 61765672329516214069220185679137632785_i128 as f64;
_47 = _28.1;
_49 = !_44;
_15 = _16;
Goto(bb14)
}
bb14 = {
_16 = _41.2 as u8;
_41.2 = _40 + _40;
_21.0 = [34958_u16,37277_u16,20266_u16,49447_u16,1568_u16,18659_u16];
_2 = [13590_u16,8983_u16,60894_u16,57626_u16,26424_u16,62015_u16];
_46 = !_23;
Goto(bb15)
}
bb15 = {
Call(_52 = dump_var(9_usize, 20_usize, Move(_20), 44_usize, Move(_44), 3_usize, Move(_3), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_52 = dump_var(9_usize, 34_usize, Move(_34), 17_usize, Move(_17), 40_usize, Move(_40), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_52 = dump_var(9_usize, 9_usize, Move(_9), 32_usize, Move(_32), 39_usize, Move(_39), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_52 = dump_var(9_usize, 15_usize, Move(_15), 46_usize, Move(_46), 49_usize, Move(_49), 27_usize, Move(_27)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_52 = dump_var(9_usize, 10_usize, Move(_10), 12_usize, Move(_12), 29_usize, Move(_29), 53_usize, _53), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: [u16; 6]) -> [u64; 3] {
mir! {
type RET = [u64; 3];
let _3: &'static i128;
let _4: [u64; 3];
let _5: isize;
let _6: ([u16; 6],);
let _7: (f32, f64);
let _8: [u16; 6];
let _9: f32;
let _10: isize;
let _11: isize;
let _12: [i8; 2];
let _13: [i8; 2];
let _14: i32;
let _15: isize;
let _16: [i8; 2];
let _17: isize;
let _18: i128;
let _19: u16;
let _20: ([u16; 6],);
let _21: *const *mut u128;
let _22: i16;
let _23: bool;
let _24: i16;
let _25: ();
let _26: ();
{
RET = [7573767221978200177_u64,9116229755329790001_u64,6843824033385354019_u64];
_1 = 17297684400354703249_u64 == 16907419848049251730_u64;
_1 = !false;
_1 = 830705848_i32 >= 2032770686_i32;
RET = [5355391007893248684_u64,952364507439322935_u64,15192634434255960802_u64];
RET = [6321046649135555461_u64,1203458436900350823_u64,9240961632896761082_u64];
_1 = true;
_2 = [2994_u16,52645_u16,37483_u16,33285_u16,61204_u16,27492_u16];
_2 = [38053_u16,47337_u16,11153_u16,28796_u16,28587_u16,49320_u16];
_1 = (-80141298_i32) <= 447232029_i32;
_1 = !true;
RET = [17706870684587710031_u64,17048165162857100798_u64,9796120150968848045_u64];
_1 = !true;
RET = [12378745369381669655_u64,12228582121944810064_u64,17625900439420113777_u64];
RET = [13730322953991502407_u64,4527283765428363371_u64,309773166483521944_u64];
RET = [3046238738700597281_u64,17549078322883992900_u64,522984011168863762_u64];
RET = [7116233812087854424_u64,16598898911840163035_u64,8570545946882492101_u64];
_2 = [14802_u16,18508_u16,7497_u16,53728_u16,23807_u16,48210_u16];
_1 = !true;
_4 = RET;
_5 = 9223372036854775807_isize;
_6 = (_2,);
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
9223372036854775807 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = [2580449976114143186_u64,4552532100781405546_u64,431264438154643930_u64];
_5 = 9223372036854775807_isize;
RET = _4;
_2 = [57668_u16,27943_u16,35785_u16,30693_u16,28027_u16,55794_u16];
_1 = _5 != _5;
_1 = true;
_6.0 = _2;
_6 = (_2,);
RET = _4;
_6.0 = [31744_u16,58811_u16,21944_u16,61019_u16,50478_u16,20867_u16];
_1 = _5 == _5;
_7.0 = 26829_u16 as f32;
_6 = (_2,);
RET = [5179945415205413449_u64,13122510048515432761_u64,12206632942140146659_u64];
_2 = _6.0;
_5 = -9223372036854775807_isize;
_5 = 35_i8 as isize;
Goto(bb8)
}
bb8 = {
_6 = (_2,);
_4 = RET;
_4 = [14522403505720641362_u64,4970399614964680048_u64,10643586897295326643_u64];
_2 = [29182_u16,19234_u16,59256_u16,1436_u16,18728_u16,1369_u16];
_8 = _6.0;
RET = [8190085131105985051_u64,5359926618799189212_u64,32176042404556996_u64];
_1 = !true;
_8 = [31318_u16,47564_u16,51111_u16,18458_u16,27540_u16,16383_u16];
_1 = true;
_6.0 = [65338_u16,16812_u16,47401_u16,4855_u16,8507_u16,23187_u16];
_1 = !true;
_6.0 = _2;
_10 = 2_usize as isize;
RET = [7023309501795852349_u64,15851534851345747900_u64,2351301850176912391_u64];
_5 = _10 - _10;
_7.1 = _10 as f64;
RET = [3492052358385775857_u64,1992736875240477148_u64,12070333019005944173_u64];
_10 = _5;
_9 = _7.0 * _7.0;
_4 = RET;
RET = [10417974110931048461_u64,1471392278908853096_u64,15453298911396096916_u64];
RET = [5895404208099379158_u64,16957312380894857492_u64,10499416358064088597_u64];
_6.0 = _8;
RET = [13794241886516107740_u64,41752447689940477_u64,12627437992873406636_u64];
RET = [8386517710460585995_u64,4085206089811043983_u64,6752038278829212560_u64];
_1 = false & true;
Call(_7.0 = fn11(_6.0, _4, _5, _6.0, _10, _6, _1, _6, _9), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_7.1 = 4_usize as f64;
_1 = false;
_9 = -_7.0;
RET = [2348900334756673793_u64,10815426921987082647_u64,12579707694622644544_u64];
_4 = RET;
_4 = [17388453099554310333_u64,14284549385623078761_u64,13679359121585797621_u64];
_10 = _5;
_5 = _10 + _10;
_10 = !_5;
_2 = _6.0;
_7.0 = _9 * _9;
_6 = (_8,);
_6 = (_2,);
_5 = _10 | _10;
_9 = _7.0;
_8 = _2;
_8 = _2;
_11 = _10;
_8 = [15100_u16,46109_u16,64092_u16,14841_u16,53337_u16,31769_u16];
_4 = RET;
_9 = _7.0;
_9 = -_7.0;
_13 = [90_i8,119_i8];
RET = _4;
Goto(bb10)
}
bb10 = {
_6.0 = _2;
_2 = [40533_u16,43499_u16,34262_u16,45785_u16,43423_u16,235_u16];
_10 = _5;
_16 = [65_i8,56_i8];
_7.0 = _9 + _9;
_14 = (-1624174602_i32);
_2 = _8;
_18 = -31645420154070398634006763921818330358_i128;
_16 = [98_i8,(-128_i8)];
_17 = 9647241075416905043_u64 as isize;
_13 = [76_i8,79_i8];
_15 = !_10;
_7.1 = _18 as f64;
_13 = [70_i8,(-53_i8)];
_8 = _2;
_1 = false;
_8 = [9773_u16,61879_u16,34532_u16,36185_u16,25754_u16,6128_u16];
_3 = &_18;
_9 = -_7.0;
Goto(bb11)
}
bb11 = {
_20.0 = _8;
_7.0 = -_9;
_14 = (-443878818_i32);
_2 = [23848_u16,58135_u16,4940_u16,58615_u16,23252_u16,47912_u16];
_13 = [(-16_i8),(-104_i8)];
_7.0 = 141410115125880495978138125409030580015_u128 as f32;
_6.0 = [9038_u16,37331_u16,30557_u16,48210_u16,42546_u16,60604_u16];
_4 = RET;
_17 = 42_i8 as isize;
_1 = !false;
_12 = [(-48_i8),23_i8];
RET = [9082120078344471947_u64,8096367183896705653_u64,7719784190686797397_u64];
_15 = _5 << _5;
_19 = 5457_u16;
_1 = false | true;
_12 = [(-120_i8),(-80_i8)];
_11 = !_5;
RET = _4;
_14 = _18 as i32;
_12 = [(-9_i8),7_i8];
_20 = _6;
_12 = _13;
_20.0 = [_19,_19,_19,_19,_19,_19];
_20.0 = [_19,_19,_19,_19,_19,_19];
_17 = !_10;
_11 = _10;
_3 = &(*_3);
_5 = 12231392315130264322_usize as isize;
_20.0 = _2;
Call(_16 = core::intrinsics::transmute(_19), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_9 = -_7.0;
_6.0 = _8;
_13 = _16;
_2 = [_19,_19,_19,_19,_19,_19];
_6.0 = [_19,_19,_19,_19,_19,_19];
_8 = [_19,_19,_19,_19,_19,_19];
_9 = _7.0 + _7.0;
_9 = 19_i8 as f32;
_4 = RET;
_6.0 = _20.0;
_9 = _7.0 + _7.0;
_1 = _17 <= _15;
_3 = &(*_3);
match _19 {
0 => bb8,
1 => bb4,
2 => bb11,
3 => bb13,
4 => bb14,
5457 => bb16,
_ => bb15
}
}
bb13 = {
_20.0 = _8;
_7.0 = -_9;
_14 = (-443878818_i32);
_2 = [23848_u16,58135_u16,4940_u16,58615_u16,23252_u16,47912_u16];
_13 = [(-16_i8),(-104_i8)];
_7.0 = 141410115125880495978138125409030580015_u128 as f32;
_6.0 = [9038_u16,37331_u16,30557_u16,48210_u16,42546_u16,60604_u16];
_4 = RET;
_17 = 42_i8 as isize;
_1 = !false;
_12 = [(-48_i8),23_i8];
RET = [9082120078344471947_u64,8096367183896705653_u64,7719784190686797397_u64];
_15 = _5 << _5;
_19 = 5457_u16;
_1 = false | true;
_12 = [(-120_i8),(-80_i8)];
_11 = !_5;
RET = _4;
_14 = _18 as i32;
_12 = [(-9_i8),7_i8];
_20 = _6;
_12 = _13;
_20.0 = [_19,_19,_19,_19,_19,_19];
_20.0 = [_19,_19,_19,_19,_19,_19];
_17 = !_10;
_11 = _10;
_3 = &(*_3);
_5 = 12231392315130264322_usize as isize;
_20.0 = _2;
Call(_16 = core::intrinsics::transmute(_19), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
_7.1 = 4_usize as f64;
_1 = false;
_9 = -_7.0;
RET = [2348900334756673793_u64,10815426921987082647_u64,12579707694622644544_u64];
_4 = RET;
_4 = [17388453099554310333_u64,14284549385623078761_u64,13679359121585797621_u64];
_10 = _5;
_5 = _10 + _10;
_10 = !_5;
_2 = _6.0;
_7.0 = _9 * _9;
_6 = (_8,);
_6 = (_2,);
_5 = _10 | _10;
_9 = _7.0;
_8 = _2;
_8 = _2;
_11 = _10;
_8 = [15100_u16,46109_u16,64092_u16,14841_u16,53337_u16,31769_u16];
_4 = RET;
_9 = _7.0;
_9 = -_7.0;
_13 = [90_i8,119_i8];
RET = _4;
Goto(bb10)
}
bb16 = {
_14 = 59_i8 as i32;
_9 = _7.0 * _7.0;
_10 = 2548099429967298868_usize as isize;
_4 = RET;
_10 = !_15;
_24 = 276_i16;
RET = _4;
_4 = [10637145091746874136_u64,3662001486241846716_u64,7801411636983843687_u64];
_1 = !true;
_5 = _10 | _10;
RET = [1129558275247788668_u64,16562630223231815106_u64,8552681148698154357_u64];
_5 = _11;
_20 = (_8,);
_5 = _11;
_23 = !_1;
_4 = [2785841099523919667_u64,12316470324414013517_u64,3849522394079223598_u64];
Goto(bb17)
}
bb17 = {
Call(_25 = dump_var(10_usize, 5_usize, Move(_5), 1_usize, Move(_1), 10_usize, Move(_10), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_25 = dump_var(10_usize, 2_usize, Move(_2), 24_usize, Move(_24), 14_usize, Move(_14), 12_usize, Move(_12)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_25 = dump_var(10_usize, 6_usize, Move(_6), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [u16; 6],mut _2: [u64; 3],mut _3: isize,mut _4: [u16; 6],mut _5: isize,mut _6: ([u16; 6],),mut _7: bool,mut _8: ([u16; 6],),mut _9: f32) -> f32 {
mir! {
type RET = f32;
let _10: f64;
let _11: u32;
let _12: [u16; 6];
let _13: f64;
let _14: (*mut bool, *mut u128);
let _15: i64;
let _16: [u16; 6];
let _17: ([u16; 6],);
let _18: (f32, f64);
let _19: (f32, f64);
let _20: Adt61;
let _21: [u32; 4];
let _22: [u32; 4];
let _23: ([u16; 6],);
let _24: [i8; 2];
let _25: i32;
let _26: [u32; 4];
let _27: isize;
let _28: [i8; 2];
let _29: [u64; 3];
let _30: [u32; 4];
let _31: Adt55;
let _32: [u32; 4];
let _33: Adt62;
let _34: bool;
let _35: f64;
let _36: *mut [u32; 4];
let _37: [i8; 2];
let _38: f64;
let _39: [u64; 3];
let _40: (f32, f64);
let _41: ();
let _42: ();
{
_8 = (_6.0,);
RET = -_9;
_6.0 = [20240_u16,10022_u16,62493_u16,49207_u16,8549_u16,56093_u16];
_1 = [9247_u16,16181_u16,25749_u16,52323_u16,14222_u16,25314_u16];
_2 = [9265785695581009037_u64,6684669597382839192_u64,8277440661635945824_u64];
_9 = -RET;
RET = _9;
_9 = -RET;
RET = _9 - _9;
_11 = 132116073638913751103741137839097725984_u128 as u32;
Goto(bb1)
}
bb1 = {
_5 = !_3;
_7 = true;
_10 = 14302461248033122315_usize as f64;
_8.0 = [47860_u16,49088_u16,41427_u16,20582_u16,49680_u16,24815_u16];
_12 = [57634_u16,30256_u16,7323_u16,18349_u16,57584_u16,7751_u16];
_2 = [9855799831704887368_u64,10984546005090884523_u64,21514531898550837_u64];
_3 = -_5;
Goto(bb2)
}
bb2 = {
_10 = 82_i8 as f64;
_11 = !3108494788_u32;
_13 = 16_u8 as f64;
_2 = [7412470142681464493_u64,9003576344027720215_u64,14441628795066236839_u64];
_5 = _3;
_4 = _8.0;
_9 = RET - RET;
RET = _10 as f32;
Call(_6.0 = fn12(_2, _4, _4, _12, _12, _8.0, _12, _8, _9, _7, _4, _8.0, _12, _1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = _6.0;
_11 = !1945039662_u32;
_2 = [5931948644501853649_u64,9539903785337722691_u64,310416337128673291_u64];
_4 = [19075_u16,26794_u16,42398_u16,64227_u16,12452_u16,58710_u16];
_17 = (_12,);
_5 = _3 | _3;
_14.0 = core::ptr::addr_of_mut!(_7);
_5 = _3 ^ _3;
_16 = [43284_u16,53782_u16,1268_u16,50073_u16,22850_u16,49109_u16];
_15 = 2739768089459649141_i64 & (-2370230544128616208_i64);
_1 = _17.0;
_10 = _9 as f64;
_2 = [14852485008440390414_u64,11160531509127943677_u64,10870001476054233852_u64];
RET = -_9;
_12 = [23029_u16,25142_u16,15019_u16,18160_u16,36915_u16,59701_u16];
RET = _9;
_18.1 = -_10;
RET = _9;
_6 = (_8.0,);
RET = -_9;
_9 = RET;
_3 = _5;
Goto(bb4)
}
bb4 = {
_19 = (RET, _13);
_17.0 = [58_u16,57460_u16,22770_u16,21074_u16,15637_u16,58544_u16];
_12 = _4;
RET = _9;
_6 = (_12,);
_18 = (_9, _10);
Goto(bb5)
}
bb5 = {
_19 = _18;
_8 = (_16,);
_16 = [53024_u16,47532_u16,54182_u16,17967_u16,50889_u16,41812_u16];
RET = _18.0;
_8.0 = [62777_u16,39354_u16,11559_u16,31822_u16,54861_u16,19966_u16];
_14.0 = core::ptr::addr_of_mut!(_7);
_10 = _19.1 + _18.1;
Goto(bb6)
}
bb6 = {
_8 = (_6.0,);
_13 = _18.1;
_18.0 = _10 as f32;
_7 = _18.0 == _18.0;
_17 = (_16,);
_23.0 = _6.0;
_4 = [50133_u16,42997_u16,38633_u16,39757_u16,41078_u16,51011_u16];
_4 = _6.0;
_21 = [_11,_11,_11,_11];
_19.1 = 30240_u16 as f64;
Goto(bb7)
}
bb7 = {
_19 = (RET, _18.1);
_6.0 = _17.0;
_27 = _3;
_29 = _2;
_7 = _18.0 == _18.0;
_26 = [_11,_11,_11,_11];
RET = 16246079715599317628592784446428894011_i128 as f32;
_17 = _8;
_10 = 8245752903086535662_u64 as f64;
Goto(bb8)
}
bb8 = {
_12 = _8.0;
_6 = _17;
Goto(bb9)
}
bb9 = {
_24 = [112_i8,(-69_i8)];
_10 = _13;
_23.0 = [37008_u16,1457_u16,38994_u16,29333_u16,62405_u16,64164_u16];
_32 = [_11,_11,_11,_11];
_23.0 = _16;
_6 = _8;
_34 = _5 < _3;
_30 = [_11,_11,_11,_11];
_23 = _8;
_19.0 = _18.0;
_19.1 = _13;
_6 = (_4,);
_28 = [65_i8,(-7_i8)];
_10 = _3 as f64;
_6.0 = [31944_u16,14710_u16,13529_u16,9301_u16,64291_u16,42316_u16];
_15 = 92738175366456676530411618082476826264_i128 as i64;
_13 = _10 + _18.1;
_9 = -_19.0;
_22 = _21;
_23.0 = _6.0;
_23 = (_4,);
_32 = [_11,_11,_11,_11];
_5 = _3;
_23 = (_16,);
_11 = 610605614_u32 | 4289134589_u32;
_15 = 126_i8 as i64;
_22 = [_11,_11,_11,_11];
Goto(bb10)
}
bb10 = {
_11 = !2196978082_u32;
_13 = _18.1 + _19.1;
_18.0 = _19.0 * _9;
_19 = (_9, _13);
_10 = _11 as f64;
_8.0 = [15312_u16,57344_u16,53693_u16,39354_u16,28271_u16,35417_u16];
_27 = !_3;
_36 = core::ptr::addr_of_mut!(_26);
_22 = (*_36);
_4 = _6.0;
_5 = _7 as isize;
_11 = !1847135278_u32;
_12 = _8.0;
_24 = [(-112_i8),(-112_i8)];
_21 = _22;
_2 = [4764586138227174994_u64,16682344858600010113_u64,17323767996398157512_u64];
_27 = !_5;
RET = _19.0 + _18.0;
_18 = (_19.0, _19.1);
RET = _18.0 - _9;
_11 = !1371533106_u32;
_26 = [_11,_11,_11,_11];
_19 = _18;
_6 = (_8.0,);
Goto(bb11)
}
bb11 = {
Call(_41 = dump_var(11_usize, 29_usize, Move(_29), 1_usize, Move(_1), 32_usize, Move(_32), 11_usize, Move(_11)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_41 = dump_var(11_usize, 34_usize, Move(_34), 4_usize, Move(_4), 24_usize, Move(_24), 30_usize, Move(_30)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_41 = dump_var(11_usize, 21_usize, Move(_21), 26_usize, Move(_26), 27_usize, Move(_27), 2_usize, Move(_2)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [u64; 3],mut _2: [u16; 6],mut _3: [u16; 6],mut _4: [u16; 6],mut _5: [u16; 6],mut _6: [u16; 6],mut _7: [u16; 6],mut _8: ([u16; 6],),mut _9: f32,mut _10: bool,mut _11: [u16; 6],mut _12: [u16; 6],mut _13: [u16; 6],mut _14: [u16; 6]) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _15: *const i32;
let _16: f64;
let _17: Adt49;
let _18: [u16; 6];
let _19: (f32, f64);
let _20: isize;
let _21: &'static i128;
let _22: [i8; 2];
let _23: bool;
let _24: [u64; 3];
let _25: Adt54;
let _26: [u16; 6];
let _27: i32;
let _28: f64;
let _29: isize;
let _30: [u64; 3];
let _31: *const &'static i128;
let _32: *mut [u32; 4];
let _33: [i8; 2];
let _34: Adt47;
let _35: bool;
let _36: [i8; 2];
let _37: [i8; 2];
let _38: f32;
let _39: usize;
let _40: u16;
let _41: [i8; 2];
let _42: f32;
let _43: (f32, f64);
let _44: isize;
let _45: i128;
let _46: bool;
let _47: [u64; 3];
let _48: (*mut u16, i64);
let _49: char;
let _50: u32;
let _51: (u32, *const u8, u64, f64);
let _52: usize;
let _53: ([u16; 6],);
let _54: isize;
let _55: u16;
let _56: [u64; 3];
let _57: (*mut u16, i64);
let _58: ();
let _59: ();
{
_10 = !true;
_8 = (_13,);
_4 = _6;
_14 = _2;
_12 = _2;
_3 = [17568_u16,16614_u16,34608_u16,16978_u16,62385_u16,18220_u16];
RET = [39607_u16,26370_u16,36117_u16,13614_u16,44174_u16,32098_u16];
_1 = [12830602817641532818_u64,15424434877929028239_u64,5711133971468249730_u64];
Call(_5 = core::intrinsics::transmute(RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_13 = RET;
_11 = [42136_u16,42384_u16,47163_u16,53567_u16,62963_u16,6731_u16];
_7 = [21722_u16,19550_u16,58083_u16,3579_u16,28643_u16,29418_u16];
RET = _6;
_10 = true;
_9 = 13635_u16 as f32;
Goto(bb2)
}
bb2 = {
_18 = [46229_u16,36346_u16,37903_u16,27582_u16,40623_u16,32076_u16];
_16 = 2_usize as f64;
_1 = [15491487760676671043_u64,1098409551562539171_u64,14066676573025792566_u64];
_8.0 = [11731_u16,33042_u16,19071_u16,55951_u16,7226_u16,44088_u16];
_8 = (_13,);
_19.1 = _16 * _16;
_8.0 = _3;
_10 = false;
_3 = [34905_u16,8735_u16,28263_u16,32999_u16,65218_u16,51370_u16];
_19 = (_9, _16);
RET = [52630_u16,1679_u16,538_u16,63829_u16,4323_u16,8460_u16];
RET = [42840_u16,62770_u16,53154_u16,37022_u16,16322_u16,7236_u16];
_3 = _5;
_16 = -_19.1;
_11 = [47917_u16,36843_u16,40261_u16,2199_u16,59399_u16,48602_u16];
Goto(bb3)
}
bb3 = {
_7 = _2;
_18 = _7;
RET = [4204_u16,35007_u16,26563_u16,42134_u16,61768_u16,17983_u16];
_19.1 = _16;
_9 = _19.0 * _19.0;
_9 = _19.0 - _19.0;
_5 = [40238_u16,5559_u16,57811_u16,39585_u16,27639_u16,23382_u16];
_19 = (_9, _16);
_8 = (_3,);
_9 = _19.0;
_14 = [26310_u16,42190_u16,2387_u16,65051_u16,27626_u16,17558_u16];
_16 = _19.1;
_22 = [123_i8,76_i8];
_9 = _19.0;
_19.1 = -_16;
_13 = _3;
_6 = [55821_u16,7853_u16,20696_u16,4952_u16,24810_u16,9214_u16];
_10 = _9 >= _19.0;
_9 = _19.0 * _19.0;
_18 = _11;
_14 = _13;
_4 = [2141_u16,10057_u16,18603_u16,43145_u16,61171_u16,32310_u16];
Goto(bb4)
}
bb4 = {
_16 = _19.1;
RET = [28328_u16,52518_u16,62741_u16,20593_u16,61107_u16,38249_u16];
_14 = [51817_u16,12177_u16,44485_u16,64091_u16,61254_u16,33073_u16];
_19.0 = _9;
_9 = _19.0 - _19.0;
RET = [38629_u16,4503_u16,59506_u16,20968_u16,63159_u16,45482_u16];
_20 = -9_isize;
_3 = _7;
RET = _4;
_26 = _5;
_3 = _4;
_7 = _12;
_19.1 = -_16;
_7 = _12;
_2 = [23660_u16,37506_u16,28991_u16,13566_u16,23177_u16,47594_u16];
_22 = [(-29_i8),60_i8];
_5 = _8.0;
_5 = [18071_u16,62095_u16,40923_u16,37811_u16,11693_u16,22547_u16];
_14 = RET;
_1 = [3061009674049996347_u64,7881930071781824535_u64,1073821849270612967_u64];
Goto(bb5)
}
bb5 = {
_7 = [13741_u16,14362_u16,11420_u16,37240_u16,45491_u16,30689_u16];
RET = _18;
_26 = [46256_u16,29062_u16,43905_u16,20692_u16,5467_u16,27884_u16];
_1 = [11304942497563384999_u64,9334068666896266252_u64,929072987932473488_u64];
_23 = !_10;
_26 = _14;
Goto(bb6)
}
bb6 = {
RET = _4;
_12 = RET;
_19 = (_9, _16);
_8 = (_6,);
_28 = _19.1 - _16;
_10 = _23;
_31 = core::ptr::addr_of!(_21);
Call(_15 = fn13(_2, _6, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_1 = [14152847006180780016_u64,3952445341588665375_u64,4792280384505314312_u64];
RET = _4;
_35 = _10 | _23;
_30 = [12079664042147430186_u64,8955879880997832395_u64,4788526322500946489_u64];
_36 = [(-8_i8),2_i8];
_14 = [11798_u16,54837_u16,63851_u16,47722_u16,25350_u16,27989_u16];
_34.fld0 = !305056385884691266600077266146203589178_u128;
_27 = !226023949_i32;
_37 = [2_i8,(-117_i8)];
_28 = -_19.1;
_34.fld3 = [17029169768628854415_u64,14653537515994155676_u64,4132708563397838932_u64];
_34.fld5.0.0 = core::ptr::addr_of_mut!(_35);
_29 = _20 ^ _20;
_23 = _10 ^ _10;
_31 = core::ptr::addr_of!((*_31));
_31 = core::ptr::addr_of!((*_31));
_22 = [(-59_i8),83_i8];
_11 = [15798_u16,46939_u16,20425_u16,21622_u16,36971_u16,62323_u16];
_39 = 7_usize;
_8.0 = _6;
Goto(bb8)
}
bb8 = {
_14 = RET;
_39 = !7821165725270157817_usize;
_7 = _12;
_33 = [(-66_i8),31_i8];
_40 = !44378_u16;
_3 = [_40,_40,_40,_40,_40,_40];
_34.fld5.0.1 = core::ptr::addr_of_mut!(_34.fld0);
_1 = _34.fld3;
_34.fld2 = core::ptr::addr_of!(_34.fld1);
_34.fld6 = core::ptr::addr_of!(_24);
_38 = _9;
_8 = (_2,);
Goto(bb9)
}
bb9 = {
_19.1 = 365633995611988840_i64 as f64;
_19.0 = _38 - _38;
_30 = _1;
_24 = [11618672366512977235_u64,7990997910844997042_u64,16964500212140429431_u64];
_30 = [11659157730363203626_u64,10165405535047875134_u64,6617623008748225820_u64];
Goto(bb10)
}
bb10 = {
_14 = [_40,_40,_40,_40,_40,_40];
_9 = -_19.0;
Call(_1 = core::intrinsics::transmute(_34.fld3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_44 = '\u{3d560}' as isize;
_41 = _36;
_22 = _36;
_34.fld1 = 247_u8;
_41 = [25_i8,(-20_i8)];
_43.0 = _19.0;
_22 = _41;
_26 = [_40,_40,_40,_40,_40,_40];
_27 = _39 as i32;
_45 = _29 as i128;
_11 = _18;
_10 = _19.1 != _28;
_34.fld3 = _24;
_20 = !_29;
_34.fld5.0.1 = core::ptr::addr_of_mut!(_34.fld0);
Goto(bb12)
}
bb12 = {
_28 = 16821_i16 as f64;
Goto(bb13)
}
bb13 = {
_51.0 = !4002067989_u32;
_51.2 = 10674777579672475940_u64 - 2427817467459090097_u64;
_34.fld6 = core::ptr::addr_of!(_30);
RET = [_40,_40,_40,_40,_40,_40];
_48.0 = core::ptr::addr_of_mut!(_40);
match _34.fld1 {
0 => bb5,
247 => bb15,
_ => bb14
}
}
bb14 = {
_44 = '\u{3d560}' as isize;
_41 = _36;
_22 = _36;
_34.fld1 = 247_u8;
_41 = [25_i8,(-20_i8)];
_43.0 = _19.0;
_22 = _41;
_26 = [_40,_40,_40,_40,_40,_40];
_27 = _39 as i32;
_45 = _29 as i128;
_11 = _18;
_10 = _19.1 != _28;
_34.fld3 = _24;
_20 = !_29;
_34.fld5.0.1 = core::ptr::addr_of_mut!(_34.fld0);
Goto(bb12)
}
bb15 = {
_51.3 = _19.1 * _19.1;
_33 = [110_i8,92_i8];
_45 = !(-83353413012005993700423517621715674339_i128);
_6 = [_40,_40,_40,_40,_40,_40];
_24 = [_51.2,_51.2,_51.2];
_51.1 = core::ptr::addr_of!(_34.fld1);
_34.fld5.0.1 = core::ptr::addr_of_mut!(_34.fld0);
_48.0 = core::ptr::addr_of_mut!(_55);
_31 = core::ptr::addr_of!((*_31));
_51.1 = _34.fld2;
_54 = !_20;
_51.1 = core::ptr::addr_of!(_34.fld1);
_57.0 = core::ptr::addr_of_mut!(_40);
_20 = !_54;
_36 = _33;
_55 = _51.0 as u16;
Goto(bb16)
}
bb16 = {
Call(_58 = dump_var(12_usize, 5_usize, Move(_5), 18_usize, Move(_18), 24_usize, Move(_24), 39_usize, Move(_39)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_58 = dump_var(12_usize, 4_usize, Move(_4), 2_usize, Move(_2), 7_usize, Move(_7), 55_usize, Move(_55)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_58 = dump_var(12_usize, 37_usize, Move(_37), 23_usize, Move(_23), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_58 = dump_var(12_usize, 12_usize, Move(_12), 8_usize, Move(_8), 20_usize, Move(_20), 41_usize, Move(_41)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [u16; 6],mut _2: [u16; 6],mut _3: [u16; 6]) -> *const i32 {
mir! {
type RET = *const i32;
let _4: u128;
let _5: i64;
let _6: Adt51;
let _7: [u16; 6];
let _8: f32;
let _9: [i8; 2];
let _10: (char, *mut u128, *mut i64, *mut u16, f64, i128);
let _11: *const isize;
let _12: bool;
let _13: i64;
let _14: (f32, f64);
let _15: bool;
let _16: ([u64; 3], *mut i64, *mut [u32; 4]);
let _17: i16;
let _18: Adt59;
let _19: [u16; 6];
let _20: [u32; 4];
let _21: char;
let _22: ();
let _23: ();
{
_1 = _3;
_2 = [19453_u16,59324_u16,6393_u16,5661_u16,49281_u16,4424_u16];
_1 = _2;
_1 = _3;
_2 = [9173_u16,55897_u16,55624_u16,58969_u16,32462_u16,1412_u16];
_3 = _2;
_2 = [50889_u16,25842_u16,25401_u16,26553_u16,24880_u16,60833_u16];
_1 = [10825_u16,52019_u16,33642_u16,44070_u16,10703_u16,33240_u16];
_2 = [9014_u16,17403_u16,62412_u16,121_u16,56573_u16,47111_u16];
_2 = _1;
_1 = _3;
_4 = 116_i8 as u128;
_5 = 227734716381683194_i64;
Goto(bb1)
}
bb1 = {
_3 = [60006_u16,41424_u16,51288_u16,59291_u16,3358_u16,61886_u16];
_3 = _2;
_1 = [19684_u16,43409_u16,25994_u16,12807_u16,63524_u16,56619_u16];
_5 = !(-7732838340155908836_i64);
_5 = (-2593347094859985621_i64);
_3 = _2;
_3 = _2;
_4 = 312098909918865277675439264826186959861_u128;
_1 = [29081_u16,37181_u16,13514_u16,9610_u16,29642_u16,21755_u16];
_8 = 17476_i16 as f32;
_1 = [47985_u16,33467_u16,4613_u16,43036_u16,49459_u16,44485_u16];
_10.2 = core::ptr::addr_of_mut!(_5);
_10.2 = core::ptr::addr_of_mut!(_5);
_4 = 267970978081931784010468970930100846172_u128 << _5;
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463460781260336908225835 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_4 = !263834751691279797721143874438214539146_u128;
_10.5 = !(-19423799809543965932433577497346327845_i128);
_10.4 = _8 as f64;
_10.1 = core::ptr::addr_of_mut!(_4);
_10.4 = 96_u8 as f64;
_10.2 = core::ptr::addr_of_mut!(_5);
_8 = _5 as f32;
_5 = 5496553820431091301_i64;
match _5 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb9,
5496553820431091301 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_3 = [60006_u16,41424_u16,51288_u16,59291_u16,3358_u16,61886_u16];
_3 = _2;
_1 = [19684_u16,43409_u16,25994_u16,12807_u16,63524_u16,56619_u16];
_5 = !(-7732838340155908836_i64);
_5 = (-2593347094859985621_i64);
_3 = _2;
_3 = _2;
_4 = 312098909918865277675439264826186959861_u128;
_1 = [29081_u16,37181_u16,13514_u16,9610_u16,29642_u16,21755_u16];
_8 = 17476_i16 as f32;
_1 = [47985_u16,33467_u16,4613_u16,43036_u16,49459_u16,44485_u16];
_10.2 = core::ptr::addr_of_mut!(_5);
_10.2 = core::ptr::addr_of_mut!(_5);
_4 = 267970978081931784010468970930100846172_u128 << _5;
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463460781260336908225835 => bb7,
_ => bb6
}
}
bb11 = {
_4 = (-2105081700_i32) as u128;
_8 = 9223372036854775807_isize as f32;
_5 = !3815098446650902884_i64;
_7 = [26152_u16,30835_u16,14856_u16,56810_u16,5556_u16,13557_u16];
_9 = [(-51_i8),(-85_i8)];
_10.1 = core::ptr::addr_of_mut!(_4);
_10.5 = (-141468555471745194571001152378537255710_i128) ^ (-121057169471141318496934379759082152103_i128);
_10.5 = 15440795138212132948_usize as i128;
_4 = 2599926355_u32 as u128;
_10.4 = _10.5 as f64;
_8 = (-9223372036854775808_isize) as f32;
_7 = _1;
_10.4 = 1671193963_u32 as f64;
_10.0 = '\u{5268c}';
_10.0 = '\u{262c2}';
_3 = [27886_u16,35635_u16,56309_u16,26673_u16,31822_u16,46944_u16];
_8 = _5 as f32;
_2 = _3;
_10.2 = core::ptr::addr_of_mut!(_5);
_2 = _1;
_1 = [2091_u16,39612_u16,38264_u16,9271_u16,11080_u16,37027_u16];
Goto(bb12)
}
bb12 = {
_1 = _2;
_10.2 = core::ptr::addr_of_mut!(_5);
_1 = [39670_u16,32400_u16,49235_u16,21526_u16,6243_u16,41626_u16];
_10.4 = (-804464986_i32) as f64;
_1 = [37171_u16,52525_u16,55771_u16,29295_u16,60484_u16,30238_u16];
_10.2 = core::ptr::addr_of_mut!(_5);
_10.2 = core::ptr::addr_of_mut!(_5);
_10.5 = 99716418007546295546579558761628481980_i128;
Goto(bb13)
}
bb13 = {
_2 = [19679_u16,33771_u16,16245_u16,38159_u16,2160_u16,3935_u16];
_12 = !true;
Goto(bb14)
}
bb14 = {
_2 = [27375_u16,18706_u16,15278_u16,1742_u16,22937_u16,16693_u16];
_10.4 = 1514524300861094444_u64 as f64;
_13 = 20567_u16 as i64;
_9 = [63_i8,99_i8];
_12 = false ^ true;
_10.0 = '\u{842fe}';
_12 = true | false;
_10.2 = core::ptr::addr_of_mut!(_13);
_10.5 = (-156925386186914619436117908221420164897_i128) * (-163059446114151672782585990061843540422_i128);
_12 = false;
_14.1 = -_10.4;
_2 = [22933_u16,40058_u16,35885_u16,36662_u16,30622_u16,31057_u16];
Call(_6 = fn14(_3, _10.0, _1), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_14.0 = 14361_i16 as f32;
_12 = false & false;
_16.0 = [12452550356829534555_u64,13364946678575445631_u64,845982031439623535_u64];
_7 = [54520_u16,64254_u16,56897_u16,49742_u16,37830_u16,46830_u16];
_15 = _12;
_10.1 = core::ptr::addr_of_mut!(_4);
_12 = _15 <= _15;
_3 = [10678_u16,27544_u16,40589_u16,55744_u16,55334_u16,59656_u16];
_17 = 44231_u16 as i16;
_10.1 = core::ptr::addr_of_mut!(_4);
_1 = _7;
_15 = _12 ^ _12;
_7 = _1;
_15 = _12 ^ _12;
_16.0 = [8928760740814815914_u64,2492940398586693133_u64,7702855097016472267_u64];
_15 = !_12;
_19 = [55974_u16,49415_u16,31008_u16,55938_u16,3842_u16,37469_u16];
_15 = !_12;
Call(_13 = core::intrinsics::bswap(_5), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_10.0 = Field::<char>(Variant(_6, 0), 1);
_10.0 = Field::<char>(Variant(_6, 0), 1);
_14.0 = _8 * _8;
_1 = _3;
_16.1 = core::ptr::addr_of_mut!(_5);
RET = Field::<*const i32>(Variant(_6, 0), 0);
_3 = [23478_u16,35291_u16,41476_u16,16952_u16,39433_u16,55138_u16];
place!(Field::<char>(Variant(_6, 0), 1)) = _10.0;
_7 = [20490_u16,27839_u16,20145_u16,59581_u16,62502_u16,38007_u16];
_12 = _14.0 > _14.0;
_2 = [51926_u16,41122_u16,31568_u16,47051_u16,17948_u16,51207_u16];
_9 = [28_i8,118_i8];
_15 = _12;
place!(Field::<*const i32>(Variant(_6, 0), 0)) = RET;
_10.0 = Field::<char>(Variant(_6, 0), 1);
_10.5 = 81976008064063045907639397305763256345_i128 | 131309712787855666724094278331406542906_i128;
_16.1 = _10.2;
_14 = (_8, _10.4);
_13 = _5 * _5;
_14 = (_8, _10.4);
_16.0 = [2011896494877240174_u64,3138439319182768357_u64,10986593431141584795_u64];
_10.0 = Field::<char>(Variant(_6, 0), 1);
_10.1 = core::ptr::addr_of_mut!(_4);
_2 = [18481_u16,26923_u16,6935_u16,58315_u16,49951_u16,33994_u16];
_1 = [58335_u16,7784_u16,22075_u16,41291_u16,29005_u16,1131_u16];
_16.0 = [17245264345887022685_u64,16699538984019760702_u64,15056257542356683171_u64];
_4 = !101656435621675805975767659007523168830_u128;
Goto(bb17)
}
bb17 = {
Call(_22 = dump_var(13_usize, 15_usize, Move(_15), 7_usize, Move(_7), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_22 = dump_var(13_usize, 5_usize, Move(_5), 2_usize, Move(_2), 23_usize, _23, 23_usize, _23), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [u16; 6],mut _2: char,mut _3: [u16; 6]) -> Adt51 {
mir! {
type RET = Adt51;
let _4: [u64; 3];
let _5: u16;
let _6: u64;
let _7: i64;
let _8: char;
let _9: f32;
let _10: u16;
let _11: u32;
let _12: [u16; 6];
let _13: ([u16; 6],);
let _14: [i8; 2];
let _15: [u16; 6];
let _16: [i8; 2];
let _17: f64;
let _18: Adt53;
let _19: [u32; 4];
let _20: ([u16; 6],);
let _21: [u16; 6];
let _22: f64;
let _23: f32;
let _24: isize;
let _25: (f32, f64);
let _26: Adt50;
let _27: [i8; 2];
let _28: char;
let _29: i128;
let _30: [i8; 2];
let _31: isize;
let _32: [u16; 6];
let _33: Adt57;
let _34: [i8; 2];
let _35: isize;
let _36: i128;
let _37: *mut i64;
let _38: isize;
let _39: Adt61;
let _40: [i8; 2];
let _41: ([u16; 6],);
let _42: i128;
let _43: i16;
let _44: (f32, f64);
let _45: [u16; 6];
let _46: *const u8;
let _47: [u16; 6];
let _48: i32;
let _49: i32;
let _50: f64;
let _51: Adt48;
let _52: [i8; 2];
let _53: isize;
let _54: Adt47;
let _55: [u64; 3];
let _56: [u32; 4];
let _57: [u64; 3];
let _58: usize;
let _59: *const *mut u128;
let _60: char;
let _61: isize;
let _62: (f32, f64);
let _63: Adt50;
let _64: ([u16; 6],);
let _65: char;
let _66: f64;
let _67: (f32, f64);
let _68: isize;
let _69: [i8; 2];
let _70: [u16; 6];
let _71: f64;
let _72: [u32; 4];
let _73: isize;
let _74: f32;
let _75: [u32; 4];
let _76: *const [u64; 3];
let _77: [i8; 2];
let _78: *const [u64; 3];
let _79: u16;
let _80: [u16; 6];
let _81: Adt46;
let _82: isize;
let _83: [u16; 6];
let _84: u64;
let _85: f64;
let _86: *mut bool;
let _87: Adt50;
let _88: char;
let _89: f32;
let _90: [u64; 3];
let _91: isize;
let _92: isize;
let _93: *const i32;
let _94: isize;
let _95: *const i32;
let _96: isize;
let _97: [u16; 6];
let _98: (f32, f64);
let _99: u32;
let _100: ();
let _101: ();
{
_4 = [15011284707194633068_u64,17162638655153722834_u64,11897802435999163981_u64];
_2 = '\u{e2993}';
_4 = [4225022270015875549_u64,9012687553078392226_u64,10136976482228591313_u64];
_1 = [55643_u16,30432_u16,429_u16,10781_u16,15598_u16,45340_u16];
_3 = _1;
_4 = [2937483862845539890_u64,13354777667512792968_u64,13359269783771510607_u64];
_8 = _2;
_7 = 5412917117157088097_i64 - 6950596654283339094_i64;
_3 = [41332_u16,5002_u16,48859_u16,20325_u16,29120_u16,56272_u16];
_2 = _8;
_11 = 1553608292221214795_usize as u32;
_11 = _8 as u32;
_3 = [38328_u16,42993_u16,15687_u16,5685_u16,54574_u16,31547_u16];
_2 = _8;
_1 = [17128_u16,46480_u16,17838_u16,54010_u16,30156_u16,16390_u16];
_11 = 66770083_i32 as u32;
_3 = [18941_u16,32127_u16,36247_u16,30822_u16,48432_u16,34255_u16];
_5 = 39089_u16 - 51831_u16;
_12 = _1;
_1 = [_5,_5,_5,_5,_5,_5];
Goto(bb1)
}
bb1 = {
_4 = [3339979467108400320_u64,9983000534663215951_u64,15202848224212152712_u64];
_8 = _2;
_9 = (-51904612973762232877857266409925189994_i128) as f32;
_10 = _5;
_8 = _2;
_7 = 2605921407578494412_usize as i64;
_4 = [1670778847967734083_u64,8907842699144487593_u64,4086507252536470252_u64];
_7 = 5748363722818050098_u64 as i64;
_5 = _10 ^ _10;
_11 = _8 as u32;
_10 = (-134474954228365641154183978831145088118_i128) as u16;
_11 = 4135713993_u32 ^ 2274545610_u32;
_13 = (_12,);
_6 = 13724580854293543868_u64 ^ 4634073405951956722_u64;
_2 = _8;
_2 = _8;
Goto(bb2)
}
bb2 = {
_10 = 109693830160207602188162500512946222972_u128 as u16;
Goto(bb3)
}
bb3 = {
_4 = [_6,_6,_6];
_6 = 484189150503676996_u64 + 394390029825443423_u64;
_5 = _10 >> _6;
_4 = [_6,_6,_6];
_3 = [_5,_5,_10,_5,_5,_10];
_6 = 14888927909361767070_u64 << _11;
_9 = (-102265403365285341520067265135636584791_i128) as f32;
_5 = _10 * _10;
_10 = !_5;
_1 = _12;
_4 = [_6,_6,_6];
_13.0 = [_5,_10,_5,_5,_10,_5];
_8 = _2;
_5 = _10 + _10;
_11 = 1716999189_u32;
_9 = (-577167352_i32) as f32;
_1 = [_10,_5,_5,_5,_5,_5];
Call(_13 = fn15(_4, _4, _4, _12, _2, _11, _6, _3, _6, _8, _2, _1, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_4 = [_6,_6,_6];
_12 = [_10,_5,_5,_5,_10,_10];
Goto(bb5)
}
bb5 = {
_1 = [_5,_10,_10,_5,_5,_10];
_14 = [15_i8,(-4_i8)];
_13.0 = [_10,_5,_5,_10,_5,_5];
_6 = 247846774604581205322827732221445207078_u128 as u64;
_2 = _8;
_6 = !15433144734708892726_u64;
_10 = _5 >> _5;
_3 = [_10,_10,_10,_10,_10,_5];
_13.0 = [_10,_10,_10,_10,_10,_5];
_7 = _9 as i64;
_4 = [_6,_6,_6];
_13 = (_1,);
_15 = _3;
_14 = [(-25_i8),95_i8];
_15 = [_5,_10,_5,_5,_10,_5];
_14 = [14_i8,(-104_i8)];
_13 = (_1,);
_14 = [5_i8,53_i8];
_10 = 50_isize as u16;
_2 = _8;
_11 = 1100199705_u32;
_1 = _15;
_16 = _14;
_17 = 1632045282_i32 as f64;
match _11 {
0 => bb1,
1100199705 => bb6,
_ => bb4
}
}
bb6 = {
_2 = _8;
_2 = _8;
_7 = -4488345661843754215_i64;
_13 = (_15,);
_6 = 6314968161912369745_u64;
_9 = _6 as f32;
_2 = _8;
_17 = _5 as f64;
_16 = [124_i8,2_i8];
_15 = [_5,_10,_10,_5,_5,_5];
_9 = _7 as f32;
_20 = _13;
_22 = 119_u8 as f64;
_20 = _13;
match _6 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6314968161912369745 => bb14,
_ => bb13
}
}
bb7 = {
_1 = [_5,_10,_10,_5,_5,_10];
_14 = [15_i8,(-4_i8)];
_13.0 = [_10,_5,_5,_10,_5,_5];
_6 = 247846774604581205322827732221445207078_u128 as u64;
_2 = _8;
_6 = !15433144734708892726_u64;
_10 = _5 >> _5;
_3 = [_10,_10,_10,_10,_10,_5];
_13.0 = [_10,_10,_10,_10,_10,_5];
_7 = _9 as i64;
_4 = [_6,_6,_6];
_13 = (_1,);
_15 = _3;
_14 = [(-25_i8),95_i8];
_15 = [_5,_10,_5,_5,_10,_5];
_14 = [14_i8,(-104_i8)];
_13 = (_1,);
_14 = [5_i8,53_i8];
_10 = 50_isize as u16;
_2 = _8;
_11 = 1100199705_u32;
_1 = _15;
_16 = _14;
_17 = 1632045282_i32 as f64;
match _11 {
0 => bb1,
1100199705 => bb6,
_ => bb4
}
}
bb8 = {
_4 = [_6,_6,_6];
_12 = [_10,_5,_5,_5,_10,_10];
Goto(bb5)
}
bb9 = {
_4 = [_6,_6,_6];
_6 = 484189150503676996_u64 + 394390029825443423_u64;
_5 = _10 >> _6;
_4 = [_6,_6,_6];
_3 = [_5,_5,_10,_5,_5,_10];
_6 = 14888927909361767070_u64 << _11;
_9 = (-102265403365285341520067265135636584791_i128) as f32;
_5 = _10 * _10;
_10 = !_5;
_1 = _12;
_4 = [_6,_6,_6];
_13.0 = [_5,_10,_5,_5,_10,_5];
_8 = _2;
_5 = _10 + _10;
_11 = 1716999189_u32;
_9 = (-577167352_i32) as f32;
_1 = [_10,_5,_5,_5,_5,_5];
Call(_13 = fn15(_4, _4, _4, _12, _2, _11, _6, _3, _6, _8, _2, _1, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_10 = 109693830160207602188162500512946222972_u128 as u16;
Goto(bb3)
}
bb11 = {
_4 = [3339979467108400320_u64,9983000534663215951_u64,15202848224212152712_u64];
_8 = _2;
_9 = (-51904612973762232877857266409925189994_i128) as f32;
_10 = _5;
_8 = _2;
_7 = 2605921407578494412_usize as i64;
_4 = [1670778847967734083_u64,8907842699144487593_u64,4086507252536470252_u64];
_7 = 5748363722818050098_u64 as i64;
_5 = _10 ^ _10;
_11 = _8 as u32;
_10 = (-134474954228365641154183978831145088118_i128) as u16;
_11 = 4135713993_u32 ^ 2274545610_u32;
_13 = (_12,);
_6 = 13724580854293543868_u64 ^ 4634073405951956722_u64;
_2 = _8;
_2 = _8;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_19 = [_11,_11,_11,_11];
_19 = [_11,_11,_11,_11];
_16 = _14;
_2 = _8;
_17 = _22;
_13.0 = [_5,_10,_5,_5,_5,_5];
_22 = _17 * _17;
match _6 {
0 => bb1,
1 => bb6,
6314968161912369745 => bb15,
_ => bb12
}
}
bb15 = {
_1 = [_5,_5,_10,_5,_5,_10];
_12 = [_10,_5,_5,_5,_5,_10];
_19 = [_11,_11,_11,_11];
_8 = _2;
_14 = _16;
_13 = _20;
_3 = _20.0;
_25.0 = 313149250969984951002072742058870053451_u128 as f32;
_13 = (_15,);
_20.0 = _12;
_25.0 = _9;
_25.1 = -_22;
_1 = [_5,_5,_5,_5,_5,_5];
_19 = [_11,_11,_11,_11];
_27 = [(-67_i8),5_i8];
Goto(bb16)
}
bb16 = {
_25.0 = (-1008964195_i32) as f32;
_12 = [_5,_5,_5,_10,_5,_5];
_21 = _13.0;
_28 = _8;
_8 = _2;
_6 = !17972533310543543487_u64;
_9 = -_25.0;
_25.0 = _9;
_20.0 = _1;
_9 = -_25.0;
_5 = 300338660904742027729050384656230756604_u128 as u16;
_25 = (_9, _17);
_20 = _13;
match _11 {
0 => bb17,
1 => bb18,
2 => bb19,
3 => bb20,
4 => bb21,
5 => bb22,
1100199705 => bb24,
_ => bb23
}
}
bb17 = {
_1 = [_5,_5,_10,_5,_5,_10];
_12 = [_10,_5,_5,_5,_5,_10];
_19 = [_11,_11,_11,_11];
_8 = _2;
_14 = _16;
_13 = _20;
_3 = _20.0;
_25.0 = 313149250969984951002072742058870053451_u128 as f32;
_13 = (_15,);
_20.0 = _12;
_25.0 = _9;
_25.1 = -_22;
_1 = [_5,_5,_5,_5,_5,_5];
_19 = [_11,_11,_11,_11];
_27 = [(-67_i8),5_i8];
Goto(bb16)
}
bb18 = {
_19 = [_11,_11,_11,_11];
_19 = [_11,_11,_11,_11];
_16 = _14;
_2 = _8;
_17 = _22;
_13.0 = [_5,_10,_5,_5,_5,_5];
_22 = _17 * _17;
match _6 {
0 => bb1,
1 => bb6,
6314968161912369745 => bb15,
_ => bb12
}
}
bb19 = {
_10 = 109693830160207602188162500512946222972_u128 as u16;
Goto(bb3)
}
bb20 = {
_1 = [_5,_10,_10,_5,_5,_10];
_14 = [15_i8,(-4_i8)];
_13.0 = [_10,_5,_5,_10,_5,_5];
_6 = 247846774604581205322827732221445207078_u128 as u64;
_2 = _8;
_6 = !15433144734708892726_u64;
_10 = _5 >> _5;
_3 = [_10,_10,_10,_10,_10,_5];
_13.0 = [_10,_10,_10,_10,_10,_5];
_7 = _9 as i64;
_4 = [_6,_6,_6];
_13 = (_1,);
_15 = _3;
_14 = [(-25_i8),95_i8];
_15 = [_5,_10,_5,_5,_10,_5];
_14 = [14_i8,(-104_i8)];
_13 = (_1,);
_14 = [5_i8,53_i8];
_10 = 50_isize as u16;
_2 = _8;
_11 = 1100199705_u32;
_1 = _15;
_16 = _14;
_17 = 1632045282_i32 as f64;
match _11 {
0 => bb1,
1100199705 => bb6,
_ => bb4
}
}
bb21 = {
_1 = [_5,_10,_10,_5,_5,_10];
_14 = [15_i8,(-4_i8)];
_13.0 = [_10,_5,_5,_10,_5,_5];
_6 = 247846774604581205322827732221445207078_u128 as u64;
_2 = _8;
_6 = !15433144734708892726_u64;
_10 = _5 >> _5;
_3 = [_10,_10,_10,_10,_10,_5];
_13.0 = [_10,_10,_10,_10,_10,_5];
_7 = _9 as i64;
_4 = [_6,_6,_6];
_13 = (_1,);
_15 = _3;
_14 = [(-25_i8),95_i8];
_15 = [_5,_10,_5,_5,_10,_5];
_14 = [14_i8,(-104_i8)];
_13 = (_1,);
_14 = [5_i8,53_i8];
_10 = 50_isize as u16;
_2 = _8;
_11 = 1100199705_u32;
_1 = _15;
_16 = _14;
_17 = 1632045282_i32 as f64;
match _11 {
0 => bb1,
1100199705 => bb6,
_ => bb4
}
}
bb22 = {
_10 = 109693830160207602188162500512946222972_u128 as u16;
Goto(bb3)
}
bb23 = {
_4 = [_6,_6,_6];
_6 = 484189150503676996_u64 + 394390029825443423_u64;
_5 = _10 >> _6;
_4 = [_6,_6,_6];
_3 = [_5,_5,_10,_5,_5,_10];
_6 = 14888927909361767070_u64 << _11;
_9 = (-102265403365285341520067265135636584791_i128) as f32;
_5 = _10 * _10;
_10 = !_5;
_1 = _12;
_4 = [_6,_6,_6];
_13.0 = [_5,_10,_5,_5,_10,_5];
_8 = _2;
_5 = _10 + _10;
_11 = 1716999189_u32;
_9 = (-577167352_i32) as f32;
_1 = [_10,_5,_5,_5,_5,_5];
Call(_13 = fn15(_4, _4, _4, _12, _2, _11, _6, _3, _6, _8, _2, _1, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb24 = {
_14 = [(-94_i8),(-97_i8)];
_30 = [9_i8,49_i8];
_11 = !2945134135_u32;
_2 = _28;
_28 = _8;
_2 = _28;
_19 = [_11,_11,_11,_11];
_20 = (_13.0,);
_14 = [97_i8,93_i8];
_11 = !2062099826_u32;
_6 = 11221938661741704774_u64;
_6 = 4539244461629156866_u64;
_11 = 381714051_u32;
_4 = [_6,_6,_6];
_17 = _22 - _22;
_27 = [115_i8,30_i8];
_24 = (-9223372036854775808_isize) * 9223372036854775807_isize;
match _11 {
381714051 => bb26,
_ => bb25
}
}
bb25 = {
_2 = _8;
_2 = _8;
_7 = -4488345661843754215_i64;
_13 = (_15,);
_6 = 6314968161912369745_u64;
_9 = _6 as f32;
_2 = _8;
_17 = _5 as f64;
_16 = [124_i8,2_i8];
_15 = [_5,_10,_10,_5,_5,_5];
_9 = _7 as f32;
_20 = _13;
_22 = 119_u8 as f64;
_20 = _13;
match _6 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6314968161912369745 => bb14,
_ => bb13
}
}
bb26 = {
_31 = _24;
_32 = _15;
_9 = -_25.0;
_25.1 = _17;
_24 = _31 << _11;
_15 = _21;
_6 = !12897137169783282481_u64;
_15 = [_5,_5,_10,_10,_5,_10];
_23 = -_25.0;
_35 = -_31;
_29 = (-139867328074819404163622981806242218920_i128) << _31;
_11 = _6 as u32;
_19 = [_11,_11,_11,_11];
_23 = _6 as f32;
_21 = [_5,_5,_5,_5,_10,_5];
_28 = _2;
Goto(bb27)
}
bb27 = {
_34 = [(-54_i8),88_i8];
_7 = (-25141_i16) as i64;
_25 = (_9, _17);
_38 = _35 + _31;
_32 = [_5,_5,_5,_5,_10,_10];
_2 = _8;
_16 = [(-18_i8),120_i8];
_20 = (_1,);
_8 = _28;
_37 = core::ptr::addr_of_mut!(_7);
_1 = [_5,_5,_10,_10,_10,_10];
_20 = (_3,);
_25 = (_9, _17);
_6 = !15986395606341238066_u64;
_12 = [_5,_10,_10,_10,_10,_10];
_31 = _38 * _24;
_16 = [(-14_i8),(-3_i8)];
Call(_36 = core::intrinsics::bswap(_29), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
_7 = (-3211835159348532250_i64) - 5379281147026967425_i64;
_7 = 193_u8 as i64;
_25.1 = (-4319_i16) as f64;
_35 = _24 << _10;
_13 = (_20.0,);
_41 = (_13.0,);
_42 = -_29;
_3 = [_5,_5,_10,_5,_10,_5];
_30 = _27;
_30 = [7_i8,(-123_i8)];
_36 = !_29;
_1 = [_10,_10,_10,_5,_5,_5];
_6 = 16634010365696047178_u64 * 9271612671589475983_u64;
_41.0 = [_10,_10,_5,_10,_5,_5];
_7 = 4_usize as i64;
_30 = [(-41_i8),89_i8];
_6 = !9494423526396704263_u64;
_15 = [_5,_5,_5,_5,_5,_5];
_25.1 = _22;
_25.1 = 214_u8 as f64;
_13.0 = [_10,_5,_10,_5,_10,_5];
_14 = [(-128_i8),49_i8];
_28 = _2;
Goto(bb29)
}
bb29 = {
_11 = 1947685227_u32 ^ 3178343472_u32;
_10 = !_5;
_2 = _8;
_2 = _8;
_3 = [_10,_10,_10,_5,_5,_5];
_41.0 = [_10,_10,_10,_10,_5,_5];
_37 = core::ptr::addr_of_mut!(_7);
_41.0 = _13.0;
_38 = _35 & _35;
_32 = [_10,_5,_5,_5,_5,_5];
_31 = -_24;
_36 = _29 >> _10;
_36 = _42 & _42;
_3 = [_5,_5,_5,_5,_5,_10];
_6 = 8760140675863258428_u64;
_36 = _29 * _42;
_40 = _14;
_16 = [(-69_i8),(-96_i8)];
_31 = (-6655_i16) as isize;
_35 = _38 << _36;
_23 = 48_u8 as f32;
_43 = -25567_i16;
_6 = !3959245426786748731_u64;
_20.0 = [_10,_10,_5,_10,_10,_5];
_44.1 = _22;
Goto(bb30)
}
bb30 = {
_20.0 = [_10,_10,_5,_5,_5,_10];
_23 = _25.0;
_25.1 = _22;
_13 = (_3,);
_45 = [_10,_5,_5,_10,_10,_5];
_23 = _43 as f32;
_13 = (_20.0,);
_42 = _43 as i128;
_35 = _6 as isize;
_44.1 = _25.1;
_15 = [_5,_10,_5,_5,_10,_10];
_29 = _36;
_6 = 4224481015941913212_u64;
_24 = _38 * _35;
Goto(bb31)
}
bb31 = {
_24 = _38;
_48 = 811877583_i32 ^ 154308990_i32;
_4 = [_6,_6,_6];
_32 = _41.0;
_6 = 10688719731760688954_u64 & 11820776145552139696_u64;
_54.fld4 = core::ptr::addr_of_mut!((*_37));
_41.0 = [_5,_5,_10,_10,_10,_10];
_54.fld5.0.1 = core::ptr::addr_of_mut!(_54.fld0);
_38 = _24;
_54.fld0 = _48 as u128;
_13 = (_32,);
_49 = !_48;
_25.0 = _38 as f32;
_16 = [77_i8,(-80_i8)];
_22 = _25.1 - _44.1;
_54.fld6 = core::ptr::addr_of!(_54.fld3);
_15 = _3;
_44.1 = _22 - _17;
_52 = _40;
_17 = _44.1;
Goto(bb32)
}
bb32 = {
_37 = core::ptr::addr_of_mut!((*_37));
_54.fld1 = _38 as u8;
_12 = [_10,_10,_10,_10,_5,_10];
_8 = _2;
_8 = _2;
_50 = _11 as f64;
_54.fld3 = [_6,_6,_6];
Call(_51 = fn16(_24, _29, _24, _38), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_46 = core::ptr::addr_of!(_54.fld1);
_45 = Field::<[u16; 6]>(Variant(_51, 0), 2);
_20.0 = [_10,_10,_10,_10,_10,_10];
_56 = [_11,_11,_11,_11];
_48 = !_49;
_25 = (_9, Field::<f64>(Variant(_51, 0), 1));
_47 = [_5,_5,_5,_5,_10,_10];
_54.fld1 = _36 as u8;
Call(_54.fld0 = core::intrinsics::transmute(_36), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
SetDiscriminant(_51, 0);
place!(Field::<*const i32>(Variant(_51, 0), 7)) = core::ptr::addr_of!(_49);
_7 = !782857402812048992_i64;
_41 = _13;
_4 = [_6,_6,_6];
_17 = -_25.1;
_17 = _38 as f64;
_54.fld6 = core::ptr::addr_of!(_55);
_59 = core::ptr::addr_of!(_54.fld5.0.1);
_19 = [_11,_11,_11,_11];
place!(Field::<u64>(Variant(_51, 0), 5)) = _6 | _6;
_55 = [Field::<u64>(Variant(_51, 0), 5),Field::<u64>(Variant(_51, 0), 5),Field::<u64>(Variant(_51, 0), 5)];
_54.fld0 = !60499006149587262237515826030058785815_u128;
_55 = _54.fld3;
Goto(bb35)
}
bb35 = {
place!(Field::<u8>(Variant(_51, 0), 0)) = (*_46) | _54.fld1;
Goto(bb36)
}
bb36 = {
_1 = [_10,_10,_10,_10,_5,_10];
_17 = _11 as f64;
_54.fld2 = _46;
place!(Field::<[u16; 6]>(Variant(_51, 0), 2)) = _45;
place!(Field::<[u16; 6]>(Variant(_51, 0), 2)) = [_10,_10,_5,_5,_5,_5];
_57 = [Field::<u64>(Variant(_51, 0), 5),Field::<u64>(Variant(_51, 0), 5),Field::<u64>(Variant(_51, 0), 5)];
_17 = _25.1;
_12 = [_10,_10,_5,_5,_5,_5];
place!(Field::<i64>(Variant(_51, 0), 6)) = _2 as i64;
_38 = -_31;
_54.fld6 = core::ptr::addr_of!(_54.fld3);
_65 = _28;
_28 = _8;
_29 = 29_i8 as i128;
_25.0 = _9;
_20 = (_15,);
_17 = _25.1 + _25.1;
Goto(bb37)
}
bb37 = {
_55 = [Field::<u64>(Variant(_51, 0), 5),_6,Field::<u64>(Variant(_51, 0), 5)];
_50 = _48 as f64;
_60 = _8;
_67.1 = _43 as f64;
_14 = _30;
_64 = (_15,);
_5 = _10;
_54.fld5.0.1 = core::ptr::addr_of_mut!(_54.fld0);
_55 = [_6,_6,Field::<u64>(Variant(_51, 0), 5)];
_67 = _25;
_57 = _55;
_22 = _17 * _67.1;
_44 = (_9, _17);
_21 = _15;
_62.1 = _22;
Goto(bb38)
}
bb38 = {
_44.0 = -_67.0;
place!(Field::<i64>(Variant(_51, 0), 6)) = (*_37);
_44.1 = _17 - _62.1;
_64.0 = [_5,_10,_10,_10,_5,_10];
_30 = _34;
_25.1 = -_44.1;
_28 = _8;
_46 = core::ptr::addr_of!(_54.fld1);
_6 = Field::<u64>(Variant(_51, 0), 5) - Field::<u64>(Variant(_51, 0), 5);
_67.0 = _44.0 + _44.0;
_34 = [(-97_i8),(-19_i8)];
_57 = [_6,_6,_6];
_13 = (_12,);
_62.0 = _48 as f32;
_16 = _52;
place!(Field::<i64>(Variant(_51, 0), 6)) = _7;
_66 = -_22;
_67.1 = -_62.1;
_54.fld6 = core::ptr::addr_of!(_54.fld3);
_53 = _36 as isize;
place!(Field::<f64>(Variant(_51, 0), 1)) = _17 - _67.1;
_54.fld1 = Field::<u8>(Variant(_51, 0), 0);
_34 = _14;
place!(Field::<[u32; 4]>(Variant(_51, 0), 4)) = [_11,_11,_11,_11];
_66 = _25.1 - Field::<f64>(Variant(_51, 0), 1);
_52 = _16;
Goto(bb39)
}
bb39 = {
_68 = true as isize;
_19 = [_11,_11,_11,_11];
_71 = _62.1;
place!(Field::<*mut char>(Variant(_51, 0), 3)) = core::ptr::addr_of_mut!(_28);
_39 = Adt61::Variant0 { fld0: _47 };
place!(Field::<u64>(Variant(_51, 0), 5)) = !_6;
_36 = _29 << _24;
_62.1 = _25.1 + _66;
place!(Field::<*mut char>(Variant(_51, 0), 3)) = core::ptr::addr_of_mut!(_65);
_7 = Field::<i64>(Variant(_51, 0), 6) & Field::<i64>(Variant(_51, 0), 6);
_65 = _28;
_24 = _48 as isize;
_54.fld1 = Field::<u8>(Variant(_51, 0), 0) - Field::<u8>(Variant(_51, 0), 0);
_32 = [_5,_5,_5,_10,_5,_10];
_64.0 = _15;
place!(Field::<*const i32>(Variant(_51, 0), 7)) = core::ptr::addr_of!(_48);
_54.fld1 = !Field::<u8>(Variant(_51, 0), 0);
_20.0 = [_5,_5,_5,_5,_5,_5];
_58 = _49 as usize;
_41.0 = [_5,_10,_10,_10,_5,_10];
place!(Field::<[u16; 6]>(Variant(_51, 0), 2)) = [_10,_5,_10,_5,_5,_10];
_66 = _62.1 * _62.1;
_32 = [_5,_10,_5,_5,_10,_10];
_50 = _22 - Field::<f64>(Variant(_51, 0), 1);
_72 = [_11,_11,_11,_11];
_21 = [_10,_5,_5,_5,_5,_10];
_62.0 = _25.0;
Goto(bb40)
}
bb40 = {
_5 = _10 ^ _10;
_31 = _53;
_25 = (_67.0, _66);
_48 = !_49;
_17 = -_25.1;
_8 = _2;
_4 = [_6,Field::<u64>(Variant(_51, 0), 5),Field::<u64>(Variant(_51, 0), 5)];
_20.0 = [_10,_5,_5,_5,_5,_5];
_13.0 = _32;
_52 = [78_i8,92_i8];
SetDiscriminant(_39, 0);
Goto(bb41)
}
bb41 = {
_15 = [_5,_10,_10,_5,_5,_5];
_46 = core::ptr::addr_of!((*_46));
_77 = [(-100_i8),(-109_i8)];
_3 = [_5,_5,_10,_5,_5,_5];
_32 = _15;
_44 = (_9, _62.1);
_25 = _44;
_54.fld6 = core::ptr::addr_of!(_55);
_41 = (_15,);
_31 = _48 as isize;
_47 = [_5,_5,_5,_5,_5,_5];
place!(Field::<u8>(Variant(_51, 0), 0)) = (*_46) << _53;
_25 = (_62.0, _44.1);
Goto(bb42)
}
bb42 = {
_39 = Adt61::Variant0 { fld0: _45 };
_21 = [_10,_5,_10,_5,_5,_10];
_65 = _60;
_71 = _66 + _22;
_50 = _44.1;
_80 = [_5,_5,_5,_5,_5,_5];
_54.fld6 = core::ptr::addr_of!(_57);
_61 = _53;
_44.0 = _31 as f32;
_44.1 = _62.1 - _66;
_16 = [(-99_i8),96_i8];
_68 = -_53;
SetDiscriminant(_39, 1);
_26 = Adt50::Variant2 { fld0: Field::<*mut char>(Variant(_51, 0), 3),fld1: _46 };
_84 = _6;
_79 = _5;
_42 = !_29;
place!(Field::<f64>(Variant(_51, 0), 1)) = _79 as f64;
_33 = Adt57::Variant1 { fld0: _22,fld1: _20,fld2: _15,fld3: (*_46),fld4: _26 };
_17 = _53 as f64;
_13 = Field::<([u16; 6],)>(Variant(_33, 1), 1);
place!(Field::<(u32, *const u8, u64, f64)>(Variant(_39, 1), 1)).3 = _71 + _67.1;
Goto(bb43)
}
bb43 = {
_68 = (*_37) as isize;
_70 = [_5,_79,_79,_5,_79,_79];
_25.0 = Field::<f64>(Variant(_33, 1), 0) as f32;
place!(Field::<([u16; 6],)>(Variant(_33, 1), 1)).0 = [_79,_10,_10,_10,_5,_79];
_29 = !_36;
_67.1 = _66;
_3 = Field::<([u16; 6],)>(Variant(_33, 1), 1).0;
SetDiscriminant(_33, 1);
_54.fld3 = [Field::<u64>(Variant(_51, 0), 5),_6,Field::<u64>(Variant(_51, 0), 5)];
Goto(bb44)
}
bb44 = {
_27 = _14;
_54.fld6 = core::ptr::addr_of!(_4);
_72 = [_11,_11,_11,_11];
_74 = _25.0 - _25.0;
Call(_70 = core::intrinsics::transmute(_21), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
_67.0 = _74;
place!(Field::<f64>(Variant(_33, 1), 0)) = (*_46) as f64;
_68 = _24 ^ _31;
_58 = _79 as usize;
_45 = [_5,_79,_79,_79,_10,_10];
_57 = [_6,_6,Field::<u64>(Variant(_51, 0), 5)];
_49 = _48 - _48;
_2 = _65;
_79 = _10 * _5;
Goto(bb46)
}
bb46 = {
place!(Field::<[u16; 6]>(Variant(_51, 0), 2)) = _47;
_89 = _25.0;
Call(_16 = core::intrinsics::transmute(_77), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
_75 = _19;
Goto(bb48)
}
bb48 = {
place!(Field::<([u16; 6],)>(Variant(_33, 1), 1)).0 = _80;
_94 = -_61;
Goto(bb49)
}
bb49 = {
_69 = _40;
_54.fld6 = core::ptr::addr_of!(_4);
_27 = [(-66_i8),(-122_i8)];
_10 = _5 & _5;
_36 = _29 >> Field::<u8>(Variant(_51, 0), 0);
_90 = [_6,_6,_84];
place!(Field::<*const i32>(Variant(_51, 0), 7)) = core::ptr::addr_of!(_48);
_69 = _30;
_85 = _44.1;
_68 = !_94;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(_39, 1), 1)).0 = _11;
_32 = [_10,_5,_10,_10,_79,_79];
_61 = -_53;
place!(Field::<(u32, *const u8, u64, f64)>(Variant(_39, 1), 1)).1 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_33, 1), 3)));
_95 = Field::<*const i32>(Variant(_51, 0), 7);
RET = Adt51::Variant0 { fld0: Field::<*const i32>(Variant(_51, 0), 7),fld1: _2 };
Goto(bb50)
}
bb50 = {
Call(_100 = dump_var(14_usize, 41_usize, Move(_41), 58_usize, Move(_58), 32_usize, Move(_32), 8_usize, Move(_8)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_100 = dump_var(14_usize, 13_usize, Move(_13), 40_usize, Move(_40), 43_usize, Move(_43), 21_usize, Move(_21)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_100 = dump_var(14_usize, 15_usize, Move(_15), 72_usize, Move(_72), 28_usize, Move(_28), 52_usize, Move(_52)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_100 = dump_var(14_usize, 35_usize, Move(_35), 29_usize, Move(_29), 36_usize, Move(_36), 11_usize, Move(_11)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_100 = dump_var(14_usize, 47_usize, Move(_47), 38_usize, Move(_38), 1_usize, Move(_1), 90_usize, Move(_90)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_100 = dump_var(14_usize, 55_usize, Move(_55), 61_usize, Move(_61), 45_usize, Move(_45), 42_usize, Move(_42)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_100 = dump_var(14_usize, 49_usize, Move(_49), 80_usize, Move(_80), 69_usize, Move(_69), 12_usize, Move(_12)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_100 = dump_var(14_usize, 3_usize, Move(_3), 101_usize, _101, 101_usize, _101, 101_usize, _101), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [u64; 3],mut _2: [u64; 3],mut _3: [u64; 3],mut _4: [u16; 6],mut _5: char,mut _6: u32,mut _7: u64,mut _8: [u16; 6],mut _9: u64,mut _10: char,mut _11: char,mut _12: [u16; 6],mut _13: f32) -> ([u16; 6],) {
mir! {
type RET = ([u16; 6],);
let _14: f64;
let _15: [i8; 2];
let _16: *const u8;
let _17: isize;
let _18: ([u16; 6],);
let _19: bool;
let _20: u16;
let _21: *mut bool;
let _22: char;
let _23: [u64; 3];
let _24: *const u8;
let _25: i8;
let _26: u8;
let _27: (f32, f64);
let _28: [u32; 4];
let _29: f32;
let _30: [u64; 3];
let _31: isize;
let _32: [u32; 4];
let _33: f32;
let _34: u16;
let _35: Adt49;
let _36: ();
let _37: ();
{
_12 = [1101_u16,44989_u16,22757_u16,27303_u16,29017_u16,26684_u16];
_1 = _3;
RET = (_4,);
_10 = _11;
_7 = _9 & _9;
_11 = _10;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
1716999189 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_7 = _9 ^ _9;
_5 = _10;
Goto(bb9)
}
bb9 = {
RET = (_4,);
_13 = _7 as f32;
_14 = _13 as f64;
_8 = [40994_u16,48741_u16,26858_u16,20995_u16,28092_u16,19173_u16];
_17 = _6 as isize;
_9 = (-117_i8) as u64;
_3 = [_7,_7,_7];
_3 = [_9,_7,_9];
RET.0 = [58091_u16,39593_u16,44442_u16,50687_u16,38596_u16,52626_u16];
_18.0 = [626_u16,38379_u16,10666_u16,49795_u16,63034_u16,13747_u16];
_6 = 2746922876_u32 - 3703496709_u32;
_18 = (RET.0,);
_18 = RET;
_19 = _14 < _14;
_12 = [31781_u16,64340_u16,40147_u16,61576_u16,64548_u16,19804_u16];
_18 = (RET.0,);
_14 = 15_u8 as f64;
_18.0 = _8;
_5 = _11;
RET = (_8,);
_18.0 = [23679_u16,64494_u16,57075_u16,2052_u16,26258_u16,18653_u16];
_6 = !345627114_u32;
_15 = [(-109_i8),(-115_i8)];
_2 = _3;
_23 = [_7,_7,_7];
Goto(bb10)
}
bb10 = {
_23 = [_7,_7,_9];
_20 = !47569_u16;
_6 = !3923094929_u32;
_25 = 117_i8;
_13 = _17 as f32;
_21 = core::ptr::addr_of_mut!(_19);
_15 = [_25,_25];
_18 = (_12,);
_22 = _10;
RET.0 = [_20,_20,_20,_20,_20,_20];
_16 = core::ptr::addr_of!(_26);
RET.0 = _8;
_24 = core::ptr::addr_of!(_26);
_15 = [_25,_25];
_4 = _12;
_28 = [_6,_6,_6,_6];
_6 = _25 as u32;
_24 = core::ptr::addr_of!((*_24));
_22 = _5;
_10 = _11;
_18 = (_12,);
_29 = -_13;
_12 = [_20,_20,_20,_20,_20,_20];
_19 = true ^ false;
Goto(bb11)
}
bb11 = {
_25 = 124_i8;
_19 = false;
_14 = (-1806872975_i32) as f64;
_19 = true;
_15 = [_25,_25];
_9 = _7 + _7;
_9 = _19 as u64;
_23 = [_7,_7,_7];
_20 = 59205_u16;
RET.0 = _18.0;
_21 = core::ptr::addr_of_mut!((*_21));
match _20 {
0 => bb12,
1 => bb13,
2 => bb14,
59205 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_7 = _9 ^ _9;
_5 = _10;
Goto(bb9)
}
bb15 = {
Return()
}
bb16 = {
_22 = _5;
_27 = (_13, _14);
_20 = 58821_u16 + 61263_u16;
_16 = core::ptr::addr_of!((*_24));
_28 = [_6,_6,_6,_6];
_24 = core::ptr::addr_of!(_26);
Goto(bb17)
}
bb17 = {
Call(_36 = dump_var(15_usize, 6_usize, Move(_6), 8_usize, Move(_8), 7_usize, Move(_7), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(15_usize, 12_usize, Move(_12), 2_usize, Move(_2), 9_usize, Move(_9), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_36 = dump_var(15_usize, 25_usize, Move(_25), 10_usize, Move(_10), 37_usize, _37, 37_usize, _37), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: isize,mut _2: i128,mut _3: isize,mut _4: isize) -> Adt48 {
mir! {
type RET = Adt48;
let _5: [u16; 6];
let _6: (i128, i32, u8, &'static i128);
let _7: usize;
let _8: Adt52;
let _9: char;
let _10: Adt58;
let _11: ([u16; 6],);
let _12: i16;
let _13: bool;
let _14: bool;
let _15: *mut u128;
let _16: isize;
let _17: u128;
let _18: u64;
let _19: isize;
let _20: u32;
let _21: ([u16; 6],);
let _22: (f32, f64);
let _23: bool;
let _24: f64;
let _25: isize;
let _26: [u16; 6];
let _27: *const *const u8;
let _28: char;
let _29: u16;
let _30: ();
let _31: ();
{
_2 = 58816012401888372896091663268000440029_i128;
_3 = !_1;
_4 = _1 | _1;
_3 = 47_i8 as isize;
_3 = 7449065088982932498_i64 as isize;
_3 = _1;
_1 = _4 * _4;
_2 = (-120667690483716974121603809101501327158_i128);
_6.3 = &_2;
_6.2 = 103_u8;
_7 = 5444329938613833952_usize;
_6.0 = _2;
_2 = _6.0 + _6.0;
_3 = _4 & _1;
_3 = !_4;
_1 = _4 >> _3;
_2 = (-99_i8) as i128;
_6.3 = &_2;
_8.fld2 = 23847_i16 as u64;
_8.fld1.5 = _6.0;
_8.fld2 = 12095873655674212141_u64;
_8.fld2 = 39998_u16 as u64;
_5 = [55660_u16,10068_u16,64427_u16,62224_u16,56665_u16,23663_u16];
_8.fld3 = _8.fld2 as i8;
_6.2 = 130_u8 ^ 9_u8;
match _6.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
219614676437221489341770798330266884298 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_8.fld1.0 = '\u{61e40}';
_6.3 = &_8.fld1.5;
_9 = _8.fld1.0;
_8.fld1.0 = _9;
match _6.0 {
0 => bb3,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
219614676437221489341770798330266884298 => bb13,
_ => bb12
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_8.fld0 = _3 > _3;
_4 = _1;
_8.fld1.4 = 28700_u16 as f64;
_8.fld5.0 = _8.fld0 as i8;
_8.fld0 = _4 != _3;
_6.2 = _8.fld0 as u8;
_8.fld5.1 = core::ptr::addr_of_mut!(_8.fld0);
_6.3 = &_6.0;
_6.3 = &_6.0;
_11 = (_5,);
_8.fld1.5 = _2;
_8.fld0 = false;
_8.fld1.0 = _9;
_8.fld1.5 = _2;
_11 = (_5,);
_6.1 = _8.fld0 as i32;
_8.fld1.5 = -_2;
_4 = -_1;
_8.fld1.5 = _6.1 as i128;
Goto(bb14)
}
bb14 = {
_12 = _8.fld1.0 as i16;
_8.fld1.0 = _9;
_8.fld0 = !false;
_5 = [54064_u16,13114_u16,21900_u16,56736_u16,35078_u16,7502_u16];
_16 = _4;
_8.fld1.5 = !_2;
_6.2 = !100_u8;
_8.fld3 = _9 as i8;
_16 = _4 + _1;
Goto(bb15)
}
bb15 = {
_3 = _8.fld1.4 as isize;
Goto(bb16)
}
bb16 = {
_6.3 = &_8.fld1.5;
_5 = [47330_u16,59515_u16,54771_u16,45619_u16,9785_u16,31671_u16];
_7 = !6_usize;
_6.3 = &_2;
_5 = [26113_u16,27435_u16,28505_u16,46110_u16,59190_u16,11779_u16];
_14 = !_8.fld0;
_8.fld0 = _14;
_8.fld1.0 = _9;
_4 = -_3;
_5 = [57143_u16,39853_u16,64099_u16,26092_u16,24124_u16,43527_u16];
_8.fld1.1 = core::ptr::addr_of_mut!(_17);
_15 = core::ptr::addr_of_mut!(_17);
match _6.0 {
0 => bb1,
1 => bb17,
2 => bb18,
3 => bb19,
219614676437221489341770798330266884298 => bb21,
_ => bb20
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
_8.fld1.0 = '\u{61e40}';
_6.3 = &_8.fld1.5;
_9 = _8.fld1.0;
_8.fld1.0 = _9;
match _6.0 {
0 => bb3,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
219614676437221489341770798330266884298 => bb13,
_ => bb12
}
}
bb21 = {
_16 = -_1;
_8.fld2 = !3149265555119401575_u64;
_16 = _1 * _1;
_8.fld1.0 = _9;
_1 = _16 >> _8.fld1.5;
_7 = !1_usize;
_18 = !_8.fld2;
_13 = _8.fld0;
_8.fld5.0 = _8.fld3 - _8.fld3;
_6.1 = (-1283366151_i32);
_8.fld2 = _18 * _18;
_6.1 = _6.2 as i32;
_8.fld1.0 = _9;
_12 = (-251_i16);
_17 = !261096092487643196455561582089373027890_u128;
_11 = (_5,);
_6.0 = _8.fld1.5 * _8.fld1.5;
_21.0 = _11.0;
Goto(bb22)
}
bb22 = {
_5 = [47215_u16,23159_u16,44115_u16,26901_u16,24300_u16,59203_u16];
_3 = _8.fld1.0 as isize;
_8.fld1.0 = _9;
_22.0 = (*_15) as f32;
_8.fld3 = _8.fld5.0 | _8.fld5.0;
_1 = _8.fld3 as isize;
_6.2 = 7619_u16 as u8;
_6.3 = &_8.fld1.5;
_8.fld5.1 = core::ptr::addr_of_mut!(_13);
_8.fld1.4 = _18 as f64;
_3 = _6.2 as isize;
_16 = -_1;
_6.1 = !(-675687140_i32);
_6.3 = &_2;
_1 = _4;
_8.fld3 = !_8.fld5.0;
_8.fld2 = _18 >> (*_15);
_21 = _11;
_6.3 = &_8.fld1.5;
_20 = !837185183_u32;
_14 = _16 < _4;
_23 = !_13;
_16 = -_3;
_22.1 = _22.0 as f64;
_26 = _21.0;
_8.fld1.4 = -_22.1;
_8.fld2 = !_18;
match _12 {
0 => bb18,
1 => bb15,
2 => bb23,
3 => bb24,
340282366920938463463374607431768211205 => bb26,
_ => bb25
}
}
bb23 = {
_6.3 = &_8.fld1.5;
_5 = [47330_u16,59515_u16,54771_u16,45619_u16,9785_u16,31671_u16];
_7 = !6_usize;
_6.3 = &_2;
_5 = [26113_u16,27435_u16,28505_u16,46110_u16,59190_u16,11779_u16];
_14 = !_8.fld0;
_8.fld0 = _14;
_8.fld1.0 = _9;
_4 = -_3;
_5 = [57143_u16,39853_u16,64099_u16,26092_u16,24124_u16,43527_u16];
_8.fld1.1 = core::ptr::addr_of_mut!(_17);
_15 = core::ptr::addr_of_mut!(_17);
match _6.0 {
0 => bb1,
1 => bb17,
2 => bb18,
3 => bb19,
219614676437221489341770798330266884298 => bb21,
_ => bb20
}
}
bb24 = {
_8.fld1.0 = '\u{61e40}';
_6.3 = &_8.fld1.5;
_9 = _8.fld1.0;
_8.fld1.0 = _9;
match _6.0 {
0 => bb3,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
219614676437221489341770798330266884298 => bb13,
_ => bb12
}
}
bb25 = {
Return()
}
bb26 = {
_1 = !_4;
match _12 {
0 => bb12,
1 => bb13,
2 => bb3,
3 => bb18,
4 => bb19,
5 => bb11,
340282366920938463463374607431768211205 => bb28,
_ => bb27
}
}
bb27 = {
_8.fld0 = _3 > _3;
_4 = _1;
_8.fld1.4 = 28700_u16 as f64;
_8.fld5.0 = _8.fld0 as i8;
_8.fld0 = _4 != _3;
_6.2 = _8.fld0 as u8;
_8.fld5.1 = core::ptr::addr_of_mut!(_8.fld0);
_6.3 = &_6.0;
_6.3 = &_6.0;
_11 = (_5,);
_8.fld1.5 = _2;
_8.fld0 = false;
_8.fld1.0 = _9;
_8.fld1.5 = _2;
_11 = (_5,);
_6.1 = _8.fld0 as i32;
_8.fld1.5 = -_2;
_4 = -_1;
_8.fld1.5 = _6.1 as i128;
Goto(bb14)
}
bb28 = {
_8.fld1.1 = _15;
_14 = _13;
_18 = _16 as u64;
Call(RET = fn17(_8.fld3, _8.fld5, _5, _8.fld5.1, _5, _16, _11.0, _9, _8.fld3, _6.0, _16, _5, _21, _1, _6.0, _21.0), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_6.0 = -_8.fld1.5;
_8.fld1.4 = -Field::<f64>(Variant(RET, 0), 1);
_6.1 = -(-520743884_i32);
place!(Field::<f64>(Variant(RET, 0), 1)) = -_8.fld1.4;
_8.fld3 = _8.fld5.0 ^ _8.fld5.0;
_26 = Field::<[u16; 6]>(Variant(RET, 0), 2);
_22.1 = Field::<f64>(Variant(RET, 0), 1);
_23 = _9 < _9;
place!(Field::<[u16; 6]>(Variant(RET, 0), 2)) = [745_u16,33435_u16,38440_u16,18199_u16,57724_u16,10686_u16];
_6.3 = &_6.0;
_17 = !185852678462654514948785011348160342653_u128;
_25 = !_16;
place!(Field::<[u16; 6]>(Variant(RET, 0), 2)) = [30702_u16,46316_u16,1830_u16,29617_u16,17012_u16,6051_u16];
_19 = _4;
_11 = _21;
Goto(bb30)
}
bb30 = {
Call(_30 = dump_var(16_usize, 25_usize, Move(_25), 14_usize, Move(_14), 18_usize, Move(_18), 21_usize, Move(_21)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_30 = dump_var(16_usize, 19_usize, Move(_19), 13_usize, Move(_13), 20_usize, Move(_20), 2_usize, Move(_2)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_30 = dump_var(16_usize, 5_usize, Move(_5), 9_usize, Move(_9), 31_usize, _31, 31_usize, _31), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i8,mut _2: (i8, *mut bool),mut _3: [u16; 6],mut _4: *mut bool,mut _5: [u16; 6],mut _6: isize,mut _7: [u16; 6],mut _8: char,mut _9: i8,mut _10: i128,mut _11: isize,mut _12: [u16; 6],mut _13: ([u16; 6],),mut _14: isize,mut _15: i128,mut _16: [u16; 6]) -> Adt48 {
mir! {
type RET = Adt48;
let _17: bool;
let _18: Adt49;
let _19: *const *mut u128;
let _20: f32;
let _21: isize;
let _22: [u64; 3];
let _23: [u64; 3];
let _24: bool;
let _25: *const &'static i128;
let _26: ([u16; 6],);
let _27: isize;
let _28: bool;
let _29: u16;
let _30: [u16; 6];
let _31: u16;
let _32: bool;
let _33: char;
let _34: i8;
let _35: [u64; 3];
let _36: [u32; 4];
let _37: *const i32;
let _38: char;
let _39: [u32; 4];
let _40: char;
let _41: [u64; 3];
let _42: u128;
let _43: char;
let _44: f32;
let _45: (u32, *const u8, u64, f64);
let _46: isize;
let _47: [i8; 2];
let _48: f32;
let _49: f32;
let _50: f32;
let _51: (f32, f64);
let _52: (i128, i32, u8, &'static i128);
let _53: Adt53;
let _54: char;
let _55: isize;
let _56: char;
let _57: f64;
let _58: f64;
let _59: (f32, f64);
let _60: bool;
let _61: char;
let _62: [u32; 4];
let _63: char;
let _64: u16;
let _65: ([u16; 6],);
let _66: u16;
let _67: [u32; 4];
let _68: f32;
let _69: char;
let _70: *const i32;
let _71: Adt58;
let _72: u64;
let _73: u128;
let _74: *mut char;
let _75: i128;
let _76: bool;
let _77: i8;
let _78: [i8; 2];
let _79: [u32; 4];
let _80: ([u16; 6],);
let _81: isize;
let _82: i16;
let _83: [i8; 2];
let _84: u128;
let _85: char;
let _86: [u64; 3];
let _87: [u32; 4];
let _88: [u16; 6];
let _89: Adt52;
let _90: ();
let _91: ();
{
_7 = _16;
_2.0 = 1157382584_i32 as i8;
Goto(bb1)
}
bb1 = {
_17 = false;
_2.1 = _4;
Call(_10 = core::intrinsics::transmute(_15), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_17 = !true;
_20 = 8070_i16 as f32;
_1 = _9;
_8 = '\u{9a806}';
Goto(bb3)
}
bb3 = {
_13.0 = [63140_u16,36181_u16,19822_u16,29464_u16,33680_u16,53569_u16];
_2.0 = -_1;
_16 = _3;
_8 = '\u{cbd54}';
_2.1 = core::ptr::addr_of_mut!(_17);
_2.0 = 2752879507_u32 as i8;
_1 = 19500_u16 as i8;
_5 = [35892_u16,24572_u16,51796_u16,1151_u16,37687_u16,59584_u16];
_17 = true | true;
_3 = _13.0;
_9 = _2.0 - _2.0;
_8 = '\u{cd506}';
_16 = _13.0;
_2.0 = _9;
_7 = [18959_u16,48849_u16,35021_u16,8293_u16,4370_u16,28014_u16];
_20 = 1077008436987732951_u64 as f32;
_17 = !false;
_7 = [30558_u16,32700_u16,10104_u16,20893_u16,54448_u16,45442_u16];
_3 = [22168_u16,14032_u16,43339_u16,19124_u16,30054_u16,59647_u16];
Goto(bb4)
}
bb4 = {
_22 = [5248599793389292430_u64,6068967465767909393_u64,10487567829595323378_u64];
_21 = _6;
_20 = (-32748_i16) as f32;
_7 = [47847_u16,20872_u16,19679_u16,25593_u16,12920_u16,7652_u16];
_4 = _2.1;
_23 = _22;
_4 = core::ptr::addr_of_mut!(_17);
Goto(bb5)
}
bb5 = {
_3 = [7706_u16,18366_u16,27032_u16,49198_u16,46362_u16,34461_u16];
_15 = _10 ^ _10;
_23 = [9182335576430210266_u64,5687293935378960430_u64,11450423837269652412_u64];
_16 = _3;
_10 = (-4472991250995773739_i64) as i128;
_21 = 41829_u16 as isize;
_23 = [12493166051668194154_u64,762300648379224898_u64,7715409598362371104_u64];
_5 = [59997_u16,45094_u16,60505_u16,470_u16,26985_u16,19931_u16];
_24 = _17 | _17;
_10 = _15;
_21 = _11;
_15 = _10;
_5 = [13774_u16,3781_u16,55510_u16,24251_u16,37516_u16,11741_u16];
_26 = (_3,);
_7 = [25002_u16,49978_u16,27387_u16,9238_u16,20809_u16,35951_u16];
_8 = '\u{1053bc}';
_28 = _15 < _15;
_14 = 4_usize as isize;
_11 = _10 as isize;
_28 = _24;
_6 = _11 & _11;
_13 = (_12,);
_8 = '\u{e33f5}';
_2.0 = _9 * _9;
_27 = 57124138389710955872991863917352129749_u128 as isize;
_2 = (_9, _4);
_30 = [57791_u16,17204_u16,38904_u16,38618_u16,52194_u16,56420_u16];
Goto(bb6)
}
bb6 = {
_9 = 987592343_u32 as i8;
_14 = -_6;
_13.0 = [51764_u16,56904_u16,35476_u16,44791_u16,57292_u16,6579_u16];
_17 = _28 ^ _24;
_15 = _10 ^ _10;
_29 = !40628_u16;
_11 = _14 + _14;
_26 = (_12,);
_6 = _14 ^ _14;
_4 = _2.1;
_31 = !_29;
_33 = _8;
_31 = _29 + _29;
_29 = _31 - _31;
_33 = _8;
_10 = _15;
Goto(bb7)
}
bb7 = {
_2.1 = _4;
_5 = _12;
_35 = _22;
_10 = -_15;
_4 = _2.1;
_34 = -_2.0;
_27 = 237005879533101778796038913946258722107_u128 as isize;
_20 = 242060357592159984_u64 as f32;
_35 = _22;
_14 = !_6;
_30 = _13.0;
_21 = 325715505713635715440159435955460939120_u128 as isize;
_1 = -_34;
_2.0 = _1 << _10;
_2 = (_1, _4);
Goto(bb8)
}
bb8 = {
_12 = _26.0;
_32 = _28 > _24;
_17 = _15 < _15;
_31 = _29 - _29;
_28 = _17;
_38 = _8;
_26.0 = [_29,_31,_31,_29,_31,_31];
_2.0 = _34 & _1;
_32 = _28;
_11 = !_6;
_20 = _15 as f32;
_9 = _1 & _2.0;
_22 = _35;
_13.0 = [_29,_29,_31,_31,_29,_31];
_38 = _8;
Goto(bb9)
}
bb9 = {
_2.0 = _9;
_23 = _35;
Goto(bb10)
}
bb10 = {
_14 = _11;
Goto(bb11)
}
bb11 = {
_27 = -_6;
_2.1 = _4;
_35 = _23;
_13 = (_26.0,);
_24 = _28;
_39 = [3129211842_u32,3666364561_u32,3933067643_u32,2743619132_u32];
Goto(bb12)
}
bb12 = {
_13 = _26;
_28 = _24;
Goto(bb13)
}
bb13 = {
_28 = !_32;
_11 = _6 >> _2.0;
_11 = _9 as isize;
_1 = _31 as i8;
_40 = _33;
_28 = !_32;
_31 = _29 * _29;
_4 = core::ptr::addr_of_mut!(_24);
_24 = !_28;
_9 = _1;
_32 = !_17;
_36 = [3293083002_u32,4075432362_u32,3651440476_u32,2416082285_u32];
_8 = _38;
_30 = [_31,_31,_31,_31,_29,_31];
_14 = _24 as isize;
_26.0 = [_29,_31,_29,_31,_29,_29];
_11 = 117_u8 as isize;
_44 = -_20;
_45.2 = 719264790478518947_u64 & 16770317108576000258_u64;
_45.0 = 32211_i16 as u32;
_7 = [_31,_31,_31,_29,_31,_29];
_22 = [_45.2,_45.2,_45.2];
Call(_9 = core::intrinsics::transmute(_24), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_13 = (_3,);
_20 = _44;
_26.0 = [_31,_31,_31,_31,_29,_29];
_46 = !_27;
_38 = _33;
_43 = _33;
_47 = [_1,_1];
_3 = [_29,_31,_29,_31,_31,_31];
_2.0 = -_1;
_37 = core::ptr::addr_of!(_52.1);
_52.1 = -(-3077680_i32);
_6 = _27 - _27;
_38 = _33;
_32 = (*_4) & _24;
_21 = _27 >> _27;
_41 = [_45.2,_45.2,_45.2];
Goto(bb15)
}
bb15 = {
_40 = _43;
_47 = [_2.0,_9];
_33 = _8;
_25 = core::ptr::addr_of!(_52.3);
_45.1 = core::ptr::addr_of!(_52.2);
_14 = _6;
_3 = _7;
_27 = -_46;
_7 = _3;
_30 = _16;
_49 = _20;
_11 = _6 >> _14;
_37 = core::ptr::addr_of!((*_37));
_43 = _33;
_3 = _7;
_41 = _23;
_20 = _44;
_51.0 = _20;
_50 = _45.2 as f32;
_52.2 = 108_u8 * 154_u8;
_27 = _14;
_52.0 = _15;
_51.1 = 193456114523433638142624664961710009392_u128 as f64;
Goto(bb16)
}
bb16 = {
_45.1 = core::ptr::addr_of!(_52.2);
_27 = _14;
_7 = [_31,_31,_31,_31,_29,_31];
_30 = [_31,_31,_29,_29,_29,_29];
_41 = _23;
_42 = 212842520060747350652185109517710905304_u128;
_15 = _32 as i128;
_38 = _8;
_31 = !_29;
_38 = _33;
_46 = -_21;
_9 = _38 as i8;
_16 = _12;
_41 = _35;
_26 = _13;
match _42 {
0 => bb13,
1 => bb5,
2 => bb3,
3 => bb17,
212842520060747350652185109517710905304 => bb19,
_ => bb18
}
}
bb17 = {
_22 = [5248599793389292430_u64,6068967465767909393_u64,10487567829595323378_u64];
_21 = _6;
_20 = (-32748_i16) as f32;
_7 = [47847_u16,20872_u16,19679_u16,25593_u16,12920_u16,7652_u16];
_4 = _2.1;
_23 = _22;
_4 = core::ptr::addr_of_mut!(_17);
Goto(bb5)
}
bb18 = {
_28 = !_32;
_11 = _6 >> _2.0;
_11 = _9 as isize;
_1 = _31 as i8;
_40 = _33;
_28 = !_32;
_31 = _29 * _29;
_4 = core::ptr::addr_of_mut!(_24);
_24 = !_28;
_9 = _1;
_32 = !_17;
_36 = [3293083002_u32,4075432362_u32,3651440476_u32,2416082285_u32];
_8 = _38;
_30 = [_31,_31,_31,_31,_29,_31];
_14 = _24 as isize;
_26.0 = [_29,_31,_29,_31,_29,_29];
_11 = 117_u8 as isize;
_44 = -_20;
_45.2 = 719264790478518947_u64 & 16770317108576000258_u64;
_45.0 = 32211_i16 as u32;
_7 = [_31,_31,_31,_29,_31,_29];
_22 = [_45.2,_45.2,_45.2];
Call(_9 = core::intrinsics::transmute(_24), ReturnTo(bb14), UnwindUnreachable())
}
bb19 = {
_25 = core::ptr::addr_of!((*_25));
Goto(bb20)
}
bb20 = {
_36 = _39;
_44 = _20 - _49;
_2.0 = _1 << _6;
_50 = _6 as f32;
_12 = _16;
_35 = _23;
_3 = [_31,_31,_29,_31,_31,_29];
_28 = _32 ^ _24;
_45.2 = _51.1 as u64;
_13 = _26;
_44 = _50;
_59.1 = -_51.1;
_51 = (_20, _59.1);
_8 = _38;
_56 = _38;
_17 = _32 & _28;
_59.0 = _51.0 * _50;
_25 = core::ptr::addr_of!(_52.3);
_33 = _38;
_51 = (_44, _59.1);
_54 = _8;
_61 = _54;
_63 = _40;
_13 = _26;
_45.2 = !16298075219724976936_u64;
Goto(bb21)
}
bb21 = {
_44 = _59.1 as f32;
_59 = _51;
_33 = _38;
_34 = -_2.0;
_21 = _11;
_15 = -_52.0;
_12 = [_31,_31,_31,_31,_29,_29];
_51.1 = _59.1;
_28 = _59.0 >= _20;
_62 = [_45.0,_45.0,_45.0,_45.0];
_64 = !_29;
_56 = _63;
_35 = [_45.2,_45.2,_45.2];
_45.2 = !6447630999253928956_u64;
_5 = [_29,_64,_64,_64,_64,_31];
_16 = [_64,_64,_31,_29,_64,_31];
_54 = _43;
_8 = _61;
_27 = _11 << _21;
_51.0 = _59.0 * _50;
_35 = [_45.2,_45.2,_45.2];
_27 = !_11;
_13 = (_26.0,);
_50 = -_51.0;
_47 = [_34,_34];
_28 = !_17;
_10 = _45.2 as i128;
_44 = -_50;
_45.0 = !937110091_u32;
Call(_29 = core::intrinsics::transmute(_47), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
_5 = [_29,_29,_29,_29,_64,_29];
_33 = _63;
_45.1 = core::ptr::addr_of!(_52.2);
_24 = _50 != _20;
_41 = [_45.2,_45.2,_45.2];
_39 = [_45.0,_45.0,_45.0,_45.0];
_24 = _59.0 < _44;
_29 = _64 - _64;
_60 = !(*_4);
_58 = -_59.1;
_15 = _21 as i128;
_2 = (_34, _4);
_24 = _60;
_27 = _64 as isize;
_59 = (_44, _58);
_45.0 = _51.1 as u32;
_26.0 = _12;
_46 = _21 * _14;
_45.0 = 7445078778570305760_usize as u32;
_52.3 = &_10;
_45.2 = 17594922779121835304_u64 * 7916567356493940912_u64;
_2.0 = _1;
_3 = _5;
_50 = -_51.0;
_52.0 = _15;
_15 = _52.0;
_33 = _56;
_64 = _45.0 as u16;
_42 = !338221631596830054603182159730182899690_u128;
Goto(bb23)
}
bb23 = {
_42 = 111966964082083993790212605803085933065_u128;
_42 = !127898696769198531747605550281681352894_u128;
_60 = (*_4);
_57 = _58;
_70 = core::ptr::addr_of!((*_37));
_35 = _23;
_45.1 = core::ptr::addr_of!(_52.2);
_48 = _50;
_65.0 = _5;
_7 = [_29,_29,_31,_29,_29,_31];
_45.1 = core::ptr::addr_of!(_52.2);
_45.2 = 10097384098663453216_u64;
Goto(bb24)
}
bb24 = {
_7 = _5;
_2 = (_34, _4);
_26.0 = [_29,_29,_29,_31,_29,_64];
_2.1 = core::ptr::addr_of_mut!((*_4));
_3 = _5;
_4 = core::ptr::addr_of_mut!(_28);
_40 = _54;
_6 = _34 as isize;
_77 = _34 & _34;
_67 = [_45.0,_45.0,_45.0,_45.0];
_52.1 = 189018317_i32;
_73 = _42 ^ _42;
_48 = _50;
Call(_1 = fn18(_11, _4, _44), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_64 = _48 as u16;
_57 = _59.1 + _59.1;
_55 = _59.1 as isize;
_66 = _6 as u16;
_65 = (_5,);
_42 = _45.2 as u128;
Goto(bb26)
}
bb26 = {
_11 = -_21;
_24 = _32;
match (*_70) {
0 => bb19,
1 => bb3,
2 => bb27,
3 => bb28,
189018317 => bb30,
_ => bb29
}
}
bb27 = {
_22 = [5248599793389292430_u64,6068967465767909393_u64,10487567829595323378_u64];
_21 = _6;
_20 = (-32748_i16) as f32;
_7 = [47847_u16,20872_u16,19679_u16,25593_u16,12920_u16,7652_u16];
_4 = _2.1;
_23 = _22;
_4 = core::ptr::addr_of_mut!(_17);
Goto(bb5)
}
bb28 = {
_2.1 = _4;
_5 = _12;
_35 = _22;
_10 = -_15;
_4 = _2.1;
_34 = -_2.0;
_27 = 237005879533101778796038913946258722107_u128 as isize;
_20 = 242060357592159984_u64 as f32;
_35 = _22;
_14 = !_6;
_30 = _13.0;
_21 = 325715505713635715440159435955460939120_u128 as isize;
_1 = -_34;
_2.0 = _1 << _10;
_2 = (_1, _4);
Goto(bb8)
}
bb29 = {
_13 = _26;
_28 = _24;
Goto(bb13)
}
bb30 = {
_2.1 = core::ptr::addr_of_mut!(_24);
_52.2 = _38 as u8;
_8 = _33;
_59.0 = -_48;
Goto(bb31)
}
bb31 = {
_46 = _21 >> _66;
_33 = _8;
_2.0 = _77;
_60 = _28;
_74 = core::ptr::addr_of_mut!(_33);
_45.2 = _52.2 as u64;
_20 = _57 as f32;
_57 = _66 as f64;
_51 = (_50, _57);
_24 = (*_4) > _28;
_42 = _73;
_31 = _64;
_5 = [_66,_66,_31,_64,_66,_64];
_55 = _46;
_46 = _55;
_45.3 = _57;
_50 = _44 + _59.0;
_75 = _52.0;
_52.2 = 234_u8;
_28 = !_17;
_46 = _52.0 as isize;
_66 = _31 | _31;
Goto(bb32)
}
bb32 = {
_3 = [_66,_31,_66,_64,_31,_66];
_45.0 = 1422342476_u32 ^ 4182181233_u32;
_42 = _73;
_59.0 = _34 as f32;
_35 = _23;
_45.1 = core::ptr::addr_of!(_52.2);
_49 = -_48;
_52.2 = _38 as u8;
_2.0 = _77 | _77;
_54 = (*_74);
_80.0 = [_66,_66,_31,_64,_66,_31];
_45.0 = 3390696920_u32 ^ 2580239959_u32;
Call(_52.1 = core::intrinsics::bswap((-776102859_i32)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_8 = _54;
_34 = !_2.0;
_50 = 7948_i16 as f32;
_8 = _61;
_52.1 = (-472222649494424116_i64) as i32;
_52.2 = !182_u8;
Goto(bb34)
}
bb34 = {
_34 = _6 as i8;
_46 = (*_4) as isize;
_69 = _61;
_65 = (_7,);
_44 = _49 + _48;
_75 = !_52.0;
Goto(bb35)
}
bb35 = {
_33 = _40;
RET = Adt48::Variant0 { fld0: _52.2,fld1: _57,fld2: _80.0,fld3: _74,fld4: _36,fld5: _45.2,fld6: (-7506314955296983025_i64),fld7: _37 };
_45.1 = core::ptr::addr_of!(_52.2);
RET = Adt48::Variant0 { fld0: _52.2,fld1: _57,fld2: _3,fld3: _74,fld4: _36,fld5: _45.2,fld6: (-7226494573744452358_i64),fld7: _70 };
_52.2 = !Field::<u8>(Variant(RET, 0), 0);
place!(Field::<[u32; 4]>(Variant(RET, 0), 4)) = _36;
_62 = [_45.0,_45.0,_45.0,_45.0];
_45.2 = Field::<u64>(Variant(RET, 0), 5);
_41 = [_45.2,Field::<u64>(Variant(RET, 0), 5),Field::<u64>(Variant(RET, 0), 5)];
_23 = [_45.2,Field::<u64>(Variant(RET, 0), 5),_45.2];
_1 = -_2.0;
_60 = _44 > _49;
_2.1 = core::ptr::addr_of_mut!(_24);
_10 = (*_37) as i128;
_26 = (_65.0,);
_21 = _46 & _6;
place!(Field::<*const i32>(Variant(RET, 0), 7)) = _37;
place!(Field::<i64>(Variant(RET, 0), 6)) = !7873187837957276316_i64;
_8 = _63;
_16 = _80.0;
_76 = !_32;
_56 = (*_74);
RET = Adt48::Variant0 { fld0: _52.2,fld1: _57,fld2: _7,fld3: _74,fld4: _36,fld5: _45.2,fld6: 6365116690163698632_i64,fld7: _37 };
place!(Field::<f64>(Variant(RET, 0), 1)) = _64 as f64;
_68 = _48 + _49;
place!(Field::<[u32; 4]>(Variant(RET, 0), 4)) = _62;
Goto(bb36)
}
bb36 = {
_27 = _14;
_35 = [Field::<u64>(Variant(RET, 0), 5),_45.2,_45.2];
_80 = _13;
_8 = _33;
_89.fld4 = Adt48::Variant0 { fld0: Field::<u8>(Variant(RET, 0), 0),fld1: _45.3,fld2: _3,fld3: Field::<*mut char>(Variant(RET, 0), 3),fld4: _67,fld5: _45.2,fld6: (-4189948100061746230_i64),fld7: _37 };
_89.fld5.1 = _4;
_89.fld3 = !_77;
_4 = _89.fld5.1;
_89.fld1.2 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(RET, 0), 6)));
place!(Field::<[u16; 6]>(Variant(RET, 0), 2)) = [_64,_64,_66,_31,_31,_31];
_87 = Field::<[u32; 4]>(Variant(RET, 0), 4);
place!(Field::<i64>(Variant(RET, 0), 6)) = !(-3706346712952066385_i64);
_48 = _68 - _49;
Goto(bb37)
}
bb37 = {
Call(_90 = dump_var(17_usize, 35_usize, Move(_35), 41_usize, Move(_41), 30_usize, Move(_30), 36_usize, Move(_36)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_90 = dump_var(17_usize, 26_usize, Move(_26), 87_usize, Move(_87), 14_usize, Move(_14), 3_usize, Move(_3)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_90 = dump_var(17_usize, 42_usize, Move(_42), 46_usize, Move(_46), 67_usize, Move(_67), 54_usize, Move(_54)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_90 = dump_var(17_usize, 80_usize, Move(_80), 34_usize, Move(_34), 21_usize, Move(_21), 29_usize, Move(_29)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_90 = dump_var(17_usize, 77_usize, Move(_77), 16_usize, Move(_16), 23_usize, Move(_23), 6_usize, Move(_6)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Call(_90 = dump_var(17_usize, 75_usize, Move(_75), 17_usize, Move(_17), 65_usize, Move(_65), 64_usize, Move(_64)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Call(_90 = dump_var(17_usize, 62_usize, Move(_62), 32_usize, Move(_32), 27_usize, Move(_27), 13_usize, Move(_13)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: isize,mut _2: *mut bool,mut _3: f32) -> i8 {
mir! {
type RET = i8;
let _4: ((*mut bool, *mut u128),);
let _5: Adt57;
let _6: u8;
let _7: *const &'static i128;
let _8: ([u16; 6],);
let _9: i32;
let _10: bool;
let _11: [u32; 4];
let _12: u8;
let _13: char;
let _14: char;
let _15: [u32; 4];
let _16: f64;
let _17: i16;
let _18: i8;
let _19: [u32; 4];
let _20: i64;
let _21: ([u16; 6],);
let _22: u64;
let _23: f64;
let _24: *mut [u32; 4];
let _25: bool;
let _26: [i8; 2];
let _27: isize;
let _28: u16;
let _29: u128;
let _30: ((i128, i32, u8, &'static i128), (char, *mut u128, *mut i64, *mut u16, f64, i128), *mut i64, (*mut bool, *mut u128), isize);
let _31: isize;
let _32: i128;
let _33: isize;
let _34: ();
let _35: ();
{
_1 = (-9223372036854775808_isize);
RET = !(-15_i8);
_1 = 16618322186029844913_u64 as isize;
RET = 27_i8;
RET = 23627_i16 as i8;
_1 = (-9223372036854775808_isize);
RET = !29_i8;
RET = (-121_i8);
_4.0.0 = _2;
_4.0.0 = _2;
RET = (-85270940688204128345152604541461057413_i128) as i8;
_4.0.0 = _2;
RET = -83_i8;
_3 = 909946695436931666_u64 as f32;
_3 = 52046_u16 as f32;
_1 = !(-9223372036854775808_isize);
Goto(bb1)
}
bb1 = {
_2 = _4.0.0;
RET = 118_i8;
_6 = !233_u8;
RET = -23_i8;
_3 = (-2088585413_i32) as f32;
_2 = _4.0.0;
_8.0 = [30912_u16,33392_u16,51041_u16,25307_u16,4122_u16,38317_u16];
_1 = (-9223372036854775808_isize) & 9223372036854775807_isize;
Goto(bb2)
}
bb2 = {
_2 = _4.0.0;
_6 = 74_u8;
_3 = 3644110856027054738_u64 as f32;
RET = (-13_i8) - (-128_i8);
_8.0 = [34740_u16,2428_u16,49641_u16,11446_u16,53681_u16,50476_u16];
RET = (-70_i8) * (-41_i8);
_2 = _4.0.0;
_4.0.0 = _2;
_6 = 147107077667778159465811589960064419470_i128 as u8;
_9 = 4083603587_u32 as i32;
_9 = !(-652159613_i32);
_3 = _6 as f32;
_8.0 = [52458_u16,27238_u16,39163_u16,62870_u16,44650_u16,36820_u16];
RET = -(-67_i8);
Goto(bb3)
}
bb3 = {
_6 = 103_u8;
RET = true as i8;
_8.0 = [11548_u16,48742_u16,65334_u16,50214_u16,7351_u16,55276_u16];
_3 = 10320083853093400479_usize as f32;
_11 = [1545856041_u32,1321760202_u32,2490545933_u32,437565051_u32];
_14 = '\u{a679d}';
_8.0 = [15841_u16,53116_u16,49249_u16,48362_u16,21708_u16,3043_u16];
_6 = _3 as u8;
_13 = _14;
_13 = _14;
_4.0.0 = core::ptr::addr_of_mut!(_10);
Goto(bb4)
}
bb4 = {
_1 = 101_isize | 9223372036854775807_isize;
_10 = !true;
_8.0 = [26597_u16,52576_u16,55673_u16,22696_u16,28783_u16,29305_u16];
_9 = !1537000588_i32;
_8.0 = [18497_u16,10996_u16,31458_u16,29075_u16,49736_u16,21994_u16];
_6 = 195_u8 * 190_u8;
_4.0.0 = _2;
_14 = _13;
_13 = _14;
_8.0 = [9517_u16,39124_u16,19315_u16,23822_u16,37011_u16,57218_u16];
_10 = _13 <= _13;
_12 = _6;
_11 = [3579641493_u32,909445723_u32,1791989628_u32,339972810_u32];
_10 = false;
_17 = 543276061628564707_u64 as i16;
_16 = RET as f64;
_9 = 302298603_i32;
_17 = (-22031_i16);
_2 = core::ptr::addr_of_mut!(_10);
_17 = 4998_i16 ^ (-10186_i16);
_12 = !_6;
_9 = (-836782854_i32);
_15 = [3975794562_u32,1183837350_u32,4016200109_u32,52719900_u32];
_14 = _13;
_6 = _12 + _12;
_6 = _12 | _12;
RET = 106_i8;
_11 = [3261588350_u32,2729002627_u32,2244984533_u32,1334732373_u32];
_8.0 = [57237_u16,26121_u16,7555_u16,37147_u16,56823_u16,50927_u16];
match RET {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
106 => bb11,
_ => bb10
}
}
bb5 = {
_6 = 103_u8;
RET = true as i8;
_8.0 = [11548_u16,48742_u16,65334_u16,50214_u16,7351_u16,55276_u16];
_3 = 10320083853093400479_usize as f32;
_11 = [1545856041_u32,1321760202_u32,2490545933_u32,437565051_u32];
_14 = '\u{a679d}';
_8.0 = [15841_u16,53116_u16,49249_u16,48362_u16,21708_u16,3043_u16];
_6 = _3 as u8;
_13 = _14;
_13 = _14;
_4.0.0 = core::ptr::addr_of_mut!(_10);
Goto(bb4)
}
bb6 = {
_2 = _4.0.0;
_6 = 74_u8;
_3 = 3644110856027054738_u64 as f32;
RET = (-13_i8) - (-128_i8);
_8.0 = [34740_u16,2428_u16,49641_u16,11446_u16,53681_u16,50476_u16];
RET = (-70_i8) * (-41_i8);
_2 = _4.0.0;
_4.0.0 = _2;
_6 = 147107077667778159465811589960064419470_i128 as u8;
_9 = 4083603587_u32 as i32;
_9 = !(-652159613_i32);
_3 = _6 as f32;
_8.0 = [52458_u16,27238_u16,39163_u16,62870_u16,44650_u16,36820_u16];
RET = -(-67_i8);
Goto(bb3)
}
bb7 = {
_2 = _4.0.0;
RET = 118_i8;
_6 = !233_u8;
RET = -23_i8;
_3 = (-2088585413_i32) as f32;
_2 = _4.0.0;
_8.0 = [30912_u16,33392_u16,51041_u16,25307_u16,4122_u16,38317_u16];
_1 = (-9223372036854775808_isize) & 9223372036854775807_isize;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_11 = _15;
_4.0.0 = _2;
_4.0.0 = core::ptr::addr_of_mut!((*_2));
_14 = _13;
RET = 24_i8;
_8.0 = [34146_u16,17456_u16,45901_u16,6494_u16,2890_u16,47568_u16];
_1 = (-9223372036854775808_isize) >> _6;
_4.0.0 = core::ptr::addr_of_mut!(_10);
Goto(bb12)
}
bb12 = {
_9 = 1409938389_i32;
_3 = _1 as f32;
_17 = 2397117349_u32 as i16;
RET = -81_i8;
RET = (-14_i8);
RET = (*_2) as i8;
_16 = 309020419615942199230792450972309057829_u128 as f64;
_10 = true ^ false;
_11 = [892373855_u32,452328680_u32,1620355664_u32,3555925752_u32];
_11 = [2358855213_u32,2406537005_u32,1243630164_u32,252929104_u32];
RET = 15132929981013085202_usize as i8;
_13 = _14;
_16 = 32657_u16 as f64;
_18 = -RET;
_16 = (-2656872651673925525_i64) as f64;
_19 = [2907069480_u32,3658443854_u32,1865502197_u32,2071283279_u32];
_10 = !false;
_19 = [1613833639_u32,1414973917_u32,2040156974_u32,1498125347_u32];
_9 = -1603344773_i32;
_2 = core::ptr::addr_of_mut!(_10);
_6 = !_12;
RET = _18 & _18;
_4.0.0 = core::ptr::addr_of_mut!((*_2));
_1 = -3_isize;
_16 = 2393944797_u32 as f64;
_18 = !RET;
_12 = _6;
_6 = _12;
_13 = _14;
_13 = _14;
Goto(bb13)
}
bb13 = {
_6 = _12;
RET = 3724850339_u32 as i8;
RET = _16 as i8;
_12 = _3 as u8;
_10 = false;
_16 = _9 as f64;
_4.0.0 = _2;
_21 = (_8.0,);
_11 = _19;
_8.0 = [61042_u16,1521_u16,55362_u16,63503_u16,62017_u16,31573_u16];
_9 = -606586293_i32;
_1 = 4_usize as isize;
RET = _18;
_4.0.0 = _2;
_16 = 2343168399538491060_u64 as f64;
_15 = [85846099_u32,778046515_u32,4251356631_u32,2618795737_u32];
_8.0 = _21.0;
RET = _18;
_2 = _4.0.0;
_15 = _11;
_21 = (_8.0,);
_17 = (-5486_i16) - 23192_i16;
_6 = 11393139120420105785_u64 as u8;
_17 = RET as i16;
_23 = _16;
Goto(bb14)
}
bb14 = {
_15 = [2797183891_u32,1925463017_u32,527722921_u32,335387130_u32];
_2 = core::ptr::addr_of_mut!(_25);
_21.0 = _8.0;
_18 = RET << _9;
_14 = _13;
_19 = [2897851723_u32,3398364801_u32,2390303413_u32,1834456430_u32];
_30.0.1 = _1 as i32;
_13 = _14;
_30.3.1 = core::ptr::addr_of_mut!(_29);
_30.4 = _1 * _1;
_30.1.5 = 155244818712561388050623735623876096337_i128;
_7 = core::ptr::addr_of!(_30.0.3);
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(18_usize, 15_usize, Move(_15), 18_usize, Move(_18), 19_usize, Move(_19), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(18_usize, 13_usize, Move(_13), 10_usize, Move(_10), 6_usize, Move(_6), 35_usize, _35), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{88a5b}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(64_i8), std::hint::black_box(2777150313860080460_u64), std::hint::black_box((-678046653_i32)), std::hint::black_box(1280648869_u32), std::hint::black_box(143_u8), std::hint::black_box(9940221843670480833_usize));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt46 {
Variant0{
fld0: *const *mut u128,
fld1: *const isize,
fld2: u64,

},
Variant1{
fld0: (*mut u16, i64),
fld1: ([u16; 6],),
fld2: i128,
fld3: i8,
fld4: *mut u16,
fld5: *const i32,
fld6: i64,

},
Variant2{
fld0: i8,
fld1: *mut [u32; 4],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt47 {
fld0: u128,
fld1: u8,
fld2: *const u8,
fld3: [u64; 3],
fld4: *mut i64,
fld5: ((*mut bool, *mut u128),),
fld6: *const [u64; 3],
}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: u8,
fld1: f64,
fld2: [u16; 6],
fld3: *mut char,
fld4: [u32; 4],
fld5: u64,
fld6: i64,
fld7: *const i32,

},
Variant1{
fld0: Adt46,
fld1: [u64; 3],
fld2: isize,
fld3: *mut [u32; 4],
fld4: u64,
fld5: *const i32,
fld6: usize,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: (i8, *mut bool),
fld1: u32,
fld2: u128,
fld3: Adt47,
fld4: *const i32,
fld5: u8,

},
Variant1{
fld0: ((*mut bool, *mut u128),),
fld1: f64,
fld2: (char, *mut u128, *mut i64, *mut u16, f64, i128),
fld3: Adt48,
fld4: [u16; 6],

},
Variant2{
fld0: *mut u128,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt50 {
Variant0{
fld0: u32,
fld1: u128,
fld2: Adt47,

},
Variant1{
fld0: (*mut u16, i64),
fld1: *mut bool,

},
Variant2{
fld0: *mut char,
fld1: *const u8,

},
Variant3{
fld0: *const isize,
fld1: *mut char,
fld2: u32,
fld3: ([u64; 3], *mut i64, *mut [u32; 4]),
fld4: (u32, *const u8, u64, f64),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt51 {
Variant0{
fld0: *const i32,
fld1: char,

},
Variant1{
fld0: u8,
fld1: char,
fld2: ((*mut bool, *mut u128),),
fld3: usize,
fld4: i128,
fld5: i32,

},
Variant2{
fld0: (u32, *const u8, u64, f64),
fld1: *mut u16,
fld2: isize,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: bool,
fld1: (char, *mut u128, *mut i64, *mut u16, f64, i128),
fld2: u64,
fld3: i8,
fld4: Adt48,
fld5: (i8, *mut bool),
fld6: Adt46,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt53 {
Variant0{
fld0: Adt52,
fld1: char,
fld2: (*mut bool, *mut u128),

},
Variant1{
fld0: (f32, f64),
fld1: *const *const u8,
fld2: Adt46,
fld3: *mut char,
fld4: *const [u64; 3],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: (*mut bool, *mut u128),
fld1: (char, *mut u128, *mut i64, *mut u16, f64, i128),
fld2: u64,
fld3: (u32, *const u8, u64, f64),
fld4: *const u8,
fld5: usize,
fld6: (i8, *mut bool),

},
Variant1{
fld0: *const *const u8,
fld1: u64,
fld2: *const u8,

},
Variant2{
fld0: *const u8,
fld1: i32,
fld2: (*mut u16, i64),
fld3: *mut bool,
fld4: i16,

},
Variant3{
fld0: *mut i64,
fld1: (u32, *const u8, u64, f64),
fld2: Adt53,
fld3: (*mut bool, *mut u128),
fld4: u8,
fld5: (i8, *mut bool),

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: bool,
fld1: u16,
fld2: *mut char,
fld3: *const *const u8,
fld4: *mut u16,
fld5: Adt48,

},
Variant1{
fld0: f64,
fld1: (char, *mut u128, *mut i64, *mut u16, f64, i128),
fld2: *mut u128,
fld3: *mut bool,
fld4: Adt50,
fld5: Adt53,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: [u32; 4],
fld1: Adt46,
fld2: u32,

},
Variant1{
fld0: (f32, f64),
fld1: *mut char,
fld2: *const u8,
fld3: (*mut bool, *mut u128),
fld4: ((*mut bool, *mut u128),),
fld5: i32,
fld6: Adt49,

},
Variant2{
fld0: Adt54,
fld1: (*mut u16, i64),
fld2: *mut u128,
fld3: ([u64; 3], *mut i64, *mut [u32; 4]),

},
Variant3{
fld0: [i8; 2],
fld1: ((*mut bool, *mut u128),),
fld2: *mut bool,
fld3: *const *const u8,
fld4: i16,
fld5: (f32, f64),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt57 {
Variant0{
fld0: *const u8,
fld1: *const *mut u128,
fld2: *mut [u32; 4],
fld3: Adt50,
fld4: *const i32,
fld5: (*mut bool, *mut u128),
fld6: i64,

},
Variant1{
fld0: f64,
fld1: ([u16; 6],),
fld2: [u16; 6],
fld3: u8,
fld4: Adt50,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: *mut u128,
fld1: *mut [u32; 4],
fld2: (*mut u16, i64),
fld3: (u32, *const u8, u64, f64),
fld4: Adt50,

},
Variant1{
fld0: Adt54,
fld1: (i8, *mut bool),

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: ([u64; 3], *mut i64, *mut [u32; 4]),

},
Variant1{
fld0: *const isize,
fld1: i32,

},
Variant2{
fld0: isize,
fld1: [u32; 4],

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: bool,
fld1: usize,
fld2: [u16; 6],
fld3: i128,
fld4: (char, *mut u128, *mut i64, *mut u16, f64, i128),

},
Variant1{
fld0: Adt49,
fld1: i8,
fld2: u32,

}}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: [u16; 6],

},
Variant1{
fld0: *const *mut u128,
fld1: (u32, *const u8, u64, f64),

},
Variant2{
fld0: *const [u64; 3],
fld1: Adt49,
fld2: Adt46,
fld3: u32,
fld4: (*mut u16, i64),

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: u64,
fld1: (char, *mut u128, *mut i64, *mut u16, f64, i128),
fld2: Adt47,
fld3: *mut char,
fld4: (f32, f64),

},
Variant1{
fld0: Adt49,
fld1: Adt58,
fld2: u128,

},
Variant2{
fld0: (u32, *const u8, u64, f64),
fld1: u16,
fld2: *mut i64,
fld3: u32,
fld4: ([u64; 3], *mut i64, *mut [u32; 4]),

}}

