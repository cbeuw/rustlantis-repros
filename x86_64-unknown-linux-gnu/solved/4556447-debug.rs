#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u16,mut _2: char,mut _3: isize,mut _4: i8,mut _5: u32,mut _6: u128) -> u32 {
mir! {
type RET = u32;
let _7: i32;
let _8: isize;
let _9: [isize; 4];
let _10: ([i64; 1], ([i128; 3],));
let _11: u32;
let _12: Adt41;
let _13: [u32; 5];
let _14: u64;
let _15: isize;
let _16: (usize, isize);
let _17: i16;
let _18: Adt38;
let _19: *mut *const u32;
let _20: isize;
let _21: isize;
let _22: Adt49;
let _23: char;
let _24: u128;
let _25: f64;
let _26: isize;
let _27: ([i128; 1], [i128; 1]);
let _28: bool;
let _29: (isize, [i64; 1]);
let _30: (u64, isize, [i128; 1]);
let _31: Adt49;
let _32: [u32; 5];
let _33: *mut f32;
let _34: isize;
let _35: ([i64; 1], ([i128; 3],));
let _36: Adt36;
let _37: Adt38;
let _38: ();
let _39: ();
{
_5 = 3802052279_u32;
_4 = 22_i8 ^ 77_i8;
RET = !_5;
_4 = 58_i8;
_6 = 336567379077623296685211098717321881957_u128 & 304687628748372840739082690251237947343_u128;
_2 = '\u{addd8}';
_3 = !9223372036854775807_isize;
RET = _3 as u32;
RET = 47_u8 as u32;
RET = _2 as u32;
_1 = 53290_u16;
_7 = !(-350079705_i32);
_5 = !RET;
_7 = 1690107157_i32 << _1;
_1 = 43018_u16;
_5 = (-159059499909456543304745970191179656000_i128) as u32;
_4 = 30_i8 & (-87_i8);
_9 = [_3,_3,_3,_3];
_3 = _7 as isize;
_7 = 18063007970466322651_usize as i32;
RET = 96489551346972733220509586275067353219_i128 as u32;
_8 = _7 as isize;
_3 = _4 as isize;
_5 = RET;
_5 = true as u32;
_1 = !32386_u16;
Call(RET = fn1(_4, _4, _6, _2, _6, _8, _8, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = false as u32;
_2 = '\u{c9220}';
RET = _5;
_2 = '\u{23162}';
_8 = _4 as isize;
_7 = 1565502706_i32;
_4 = 10393380544647524603_u64 as i8;
Goto(bb2)
}
bb2 = {
_6 = !39710424446992108689742489958264863117_u128;
RET = _5 * _5;
_11 = !_5;
_11 = 229_u8 as u32;
_10.1.0 = [(-157333692257905686532675521187995861194_i128),142351199281034654376261077341389800021_i128,(-17636247255834399349101592478101267107_i128)];
_5 = !_11;
_10.0 = [(-8777538322991809828_i64)];
_10.1.0 = [146500843254369532706571900126842429473_i128,18026963885664752872779504477353625024_i128,30686756306196704774055380815147391952_i128];
_10.1.0 = [135944156997810850238594294613419618987_i128,118548979192556311128158555449605789887_i128,168787270416063406575726808321246157878_i128];
_1 = _4 as u16;
RET = _11;
_10.0 = [(-2238118226221187684_i64)];
_6 = (-6927503582736165074_i64) as u128;
_1 = 71897243710416044609249511579990225791_i128 as u16;
_3 = _1 as isize;
Call(_10.0 = fn19(_4, _9, _9, _10.1, _8, _7, _8, _8, _2, _2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10.1.0 = [(-1972416462466427045788277082576390950_i128),(-54358497467313007079611963656950793215_i128),(-106102233598367824613944259509470513093_i128)];
_4 = (-103_i8) * 38_i8;
RET = _11;
_10.0 = [1246093893642390726_i64];
_9 = [_3,_8,_8,_8];
RET = _7 as u32;
_8 = 4_usize as isize;
_9 = [_3,_3,_8,_3];
_10.1.0 = [(-46234781657482381255736548978182403955_i128),165063707912648621281751778806371575221_i128,139712132204893928396286572002534679527_i128];
_5 = !_11;
RET = !_11;
_5 = RET;
_7 = 1854929195_i32;
_13 = [_5,RET,_11,_5,RET];
_7 = _6 as i32;
_13 = [_5,_5,_11,_5,RET];
_5 = !RET;
_5 = RET;
_10.1.0 = [(-38618240685504706837914716063274478236_i128),5340333608725818128254335253405499874_i128,73607093144686301666520195948961710590_i128];
_14 = 16083473342648671856_u64 * 11107030864544778165_u64;
_6 = 177301210155281213729918738848242647739_u128;
RET = !_5;
_10.0 = [7501535249746933860_i64];
_6 = !181679288617262232548647700261819625362_u128;
_4 = -42_i8;
_9 = [_8,_8,_3,_3];
RET = !_5;
_7 = (-1730542426_i32) ^ (-136878671_i32);
Goto(bb4)
}
bb4 = {
_4 = !117_i8;
_16 = (6_usize, _3);
_16.0 = _2 as usize;
_17 = _6 as i16;
_16.1 = -_3;
_17 = -15409_i16;
Goto(bb5)
}
bb5 = {
_6 = !331568218662331644717793485271927990902_u128;
_8 = _16.1;
_11 = _5 << _17;
_10.0 = [(-206900591408324144_i64)];
_5 = !_11;
_14 = !15751423613918980501_u64;
_11 = (-154490355144807628506069061283051960171_i128) as u32;
_9 = [_16.1,_3,_3,_8];
_16.1 = _8;
_9 = [_3,_8,_16.1,_8];
_7 = (-1000875901_i32);
_20 = _8;
_21 = _7 as isize;
_11 = !_5;
Goto(bb6)
}
bb6 = {
_7 = (-1996732451_i32);
_21 = _8;
_6 = 126_u8 as u128;
RET = !_11;
_3 = _1 as isize;
_13 = [RET,RET,_5,_11,_5];
_15 = _20;
Call(_24 = core::intrinsics::bswap(_6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_1 = _16.0 as u16;
_21 = !_3;
_21 = -_15;
_24 = _6;
_11 = _5 + _5;
_8 = _16.1;
_25 = (-126102599904869073485604491845627290745_i128) as f64;
_2 = '\u{6063c}';
_7 = _14 as i32;
_5 = _11;
_16.0 = !5_usize;
_3 = -_15;
RET = _11;
_2 = '\u{3296c}';
_27.1 = [123062881649729670011205855021994920680_i128];
_21 = _8 * _3;
_14 = _8 as u64;
_24 = _6;
_14 = _17 as u64;
_11 = RET;
Call(_27.0 = core::intrinsics::transmute(_24), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_28 = RET >= _11;
_30.0 = 123_u8 as u64;
RET = !_11;
_2 = '\u{d7d74}';
_25 = 84008449765982547476213547528085767479_i128 as f64;
_4 = (-10_i8);
_30.2 = _27.0;
_23 = _2;
_29.1 = [(-3054839028365482140_i64)];
_26 = _20;
_5 = _7 as u32;
_2 = _23;
_23 = _2;
_24 = _2 as u128;
_9 = [_3,_8,_26,_21];
_30.0 = _14;
_16.0 = _2 as usize;
_30 = (_14, _8, _27.1);
_29.0 = _20;
_26 = _30.1 * _21;
_3 = _30.0 as isize;
_25 = _17 as f64;
_26 = !_29.0;
_30.1 = _20;
Call(_21 = core::intrinsics::bswap(_16.1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_27 = (_30.2, _30.2);
_32 = _13;
_29.0 = -_15;
Goto(bb10)
}
bb10 = {
_7 = 1296881845_i32;
_35.1.0 = [3912961209659972300592790256892282688_i128,(-113395333016929043811023554230374168720_i128),(-66189830835331306488112415408653772792_i128)];
_30.2 = _27.1;
_35.1.0 = [(-43249320559908425799566669217850903214_i128),31348348158643697954536994483129997994_i128,75176116105176675684433044701189170876_i128];
_5 = RET | _11;
_25 = _16.0 as f64;
_27.1 = _30.2;
_30.1 = _3;
_16.1 = _16.0 as isize;
_5 = _11;
_5 = RET;
_27 = (_30.2, _30.2);
_29.0 = _30.1 * _21;
_18 = Adt38::Variant0 { fld0: 3_u8,fld1: _27.1,fld2: _10.1,fld3: (-7900196538902736312_i64),fld4: _17 };
match _7 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb11,
1296881845 => bb13,
_ => bb12
}
}
bb11 = {
_6 = !39710424446992108689742489958264863117_u128;
RET = _5 * _5;
_11 = !_5;
_11 = 229_u8 as u32;
_10.1.0 = [(-157333692257905686532675521187995861194_i128),142351199281034654376261077341389800021_i128,(-17636247255834399349101592478101267107_i128)];
_5 = !_11;
_10.0 = [(-8777538322991809828_i64)];
_10.1.0 = [146500843254369532706571900126842429473_i128,18026963885664752872779504477353625024_i128,30686756306196704774055380815147391952_i128];
_10.1.0 = [135944156997810850238594294613419618987_i128,118548979192556311128158555449605789887_i128,168787270416063406575726808321246157878_i128];
_1 = _4 as u16;
RET = _11;
_10.0 = [(-2238118226221187684_i64)];
_6 = (-6927503582736165074_i64) as u128;
_1 = 71897243710416044609249511579990225791_i128 as u16;
_3 = _1 as isize;
Call(_10.0 = fn19(_4, _9, _9, _10.1, _8, _7, _8, _8, _2, _2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
RET = false as u32;
_2 = '\u{c9220}';
RET = _5;
_2 = '\u{23162}';
_8 = _4 as isize;
_7 = 1565502706_i32;
_4 = 10393380544647524603_u64 as i8;
Goto(bb2)
}
bb13 = {
_35 = _10;
_17 = Field::<i16>(Variant(_18, 0), 4) ^ Field::<i16>(Variant(_18, 0), 4);
_16 = (1_usize, _3);
_7 = !(-1939964141_i32);
_30.1 = _21 * _3;
_27.1 = [(-12706282879758468584226820212902502818_i128)];
_25 = _26 as f64;
_6 = _7 as u128;
place!(Field::<([i128; 3],)>(Variant(_18, 0), 2)).0 = [(-106446961380439094925180957826967332104_i128),(-23632729962051869460978758133625379524_i128),121544225137863773335867623192910430908_i128];
RET = _11;
_27.1 = _30.2;
Goto(bb14)
}
bb14 = {
RET = !_5;
RET = _11;
_7 = 35745559_i32;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(0_usize, 30_usize, Move(_30), 26_usize, Move(_26), 27_usize, Move(_27), 32_usize, Move(_32)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(0_usize, 5_usize, Move(_5), 29_usize, Move(_29), 28_usize, Move(_28), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(0_usize, 7_usize, Move(_7), 8_usize, Move(_8), 3_usize, Move(_3), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(0_usize, 13_usize, Move(_13), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i8,mut _2: i8,mut _3: u128,mut _4: char,mut _5: u128,mut _6: isize,mut _7: isize,mut _8: i8) -> u32 {
mir! {
type RET = u32;
let _9: usize;
let _10: [i64; 1];
let _11: usize;
let _12: [isize; 4];
let _13: [i128; 1];
let _14: [u32; 5];
let _15: Adt48;
let _16: i8;
let _17: char;
let _18: Adt48;
let _19: Adt50;
let _20: u128;
let _21: i8;
let _22: f64;
let _23: f32;
let _24: i128;
let _25: (u64, isize, [i128; 1]);
let _26: bool;
let _27: [i64; 1];
let _28: i32;
let _29: Adt37;
let _30: Adt39;
let _31: Adt46;
let _32: f64;
let _33: i32;
let _34: *const [i128; 1];
let _35: ([i128; 1], [i128; 1]);
let _36: Adt42;
let _37: u32;
let _38: isize;
let _39: Adt36;
let _40: u16;
let _41: Adt46;
let _42: [i128; 3];
let _43: bool;
let _44: bool;
let _45: Adt39;
let _46: [i64; 1];
let _47: u128;
let _48: ();
let _49: ();
{
_6 = _7 >> _1;
_4 = '\u{b3a74}';
_3 = _5 & _5;
_6 = _7 | _7;
_1 = _2 ^ _2;
_10 = [(-1425090839072824182_i64)];
_4 = '\u{10f83f}';
_2 = _1 ^ _1;
_4 = '\u{6f65d}';
_1 = 18_u8 as i8;
_9 = _2 as usize;
RET = 3915562121238939531_i64 as u32;
_7 = 3137178708602792120_i64 as isize;
_9 = 5955373668868955547_usize;
_3 = !_5;
RET = false as u32;
RET = !3460570755_u32;
Goto(bb1)
}
bb1 = {
_12 = [_6,_7,_6,_6];
_11 = !_9;
_5 = 255_u8 as u128;
_7 = _5 as isize;
_9 = _11;
_5 = 39852_u16 as u128;
_4 = '\u{d72ab}';
_2 = -_1;
RET = !341627184_u32;
_3 = _5 >> _6;
_4 = '\u{167a3}';
_1 = _8;
_5 = !_3;
RET = 1938826761_u32 - 3110235002_u32;
RET = _11 as u32;
_9 = !_11;
_6 = false as isize;
_11 = _9;
Call(_6 = fn2(_4, _10, _3, _10, _9, _9, _8, _12, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = '\u{27ab1}';
_13 = [48412538408590214344708649819003174802_i128];
_9 = !_11;
RET = 785983920_u32 - 2490039964_u32;
Goto(bb3)
}
bb3 = {
_14 = [RET,RET,RET,RET,RET];
_10 = [(-5425235230259336612_i64)];
_11 = !_9;
_3 = 10136_i16 as u128;
_5 = _3;
RET = _1 as u32;
_1 = !_8;
_16 = _8 + _8;
_12 = [_6,_7,_6,_6];
_6 = _7;
_16 = _8;
_2 = 24531_i16 as i8;
_8 = _2 * _1;
_7 = (-2032787191_i32) as isize;
Call(_9 = core::intrinsics::bswap(_11), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = _16;
_22 = 8806027586644060984_u64 as f64;
_20 = _3;
_12 = [_7,_6,_6,_7];
_2 = 2936413214073498628_i64 as i8;
_14 = [RET,RET,RET,RET,RET];
RET = !1726099002_u32;
_5 = _3 + _3;
_6 = _7;
_8 = false as i8;
_25 = (18096007019801980687_u64, _7, _13);
_12 = [_25.1,_25.1,_25.1,_7];
_4 = '\u{98c08}';
match _25.0 {
18096007019801980687 => bb5,
_ => bb3
}
}
bb5 = {
_24 = (-57356899002308771312877779369318349029_i128);
_3 = _5 | _20;
_14 = [RET,RET,RET,RET,RET];
_17 = _4;
_7 = _25.1;
_12 = [_7,_7,_6,_25.1];
_9 = _11 - _11;
_13 = _25.2;
_8 = _2;
_7 = _25.1 << _1;
Goto(bb6)
}
bb6 = {
RET = 19141548_u32 * 1029612207_u32;
_25.1 = _6;
_25 = (4508154232441317088_u64, _7, _13);
_8 = (-7464_i16) as i8;
_14 = [RET,RET,RET,RET,RET];
_8 = -_16;
RET = 2042435946_u32;
_21 = _16 & _8;
_26 = !false;
_9 = !_11;
Call(_1 = core::intrinsics::bswap(_8), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_28 = (-1284160753_i32) ^ 1619908719_i32;
_2 = -_21;
_6 = _25.1 | _25.1;
_5 = _3 ^ _3;
_24 = 101112515375251322733841419127698908523_i128 << _3;
_8 = _16 - _16;
_13 = [_24];
RET = 3941995766_u32 | 1905011992_u32;
_17 = _4;
_14 = [RET,RET,RET,RET,RET];
_2 = _9 as i8;
_32 = _22;
RET = 517887705_u32;
_25.2 = _13;
_12 = [_7,_6,_7,_6];
match _25.0 {
4508154232441317088 => bb8,
_ => bb2
}
}
bb8 = {
_17 = _4;
_29 = Adt37::Variant2 { fld0: 180_u8,fld1: _13,fld2: _28 };
_25.0 = !16380313376230075400_u64;
_4 = _17;
_24 = 166751089355014228700139274136657630121_i128 >> _8;
_26 = _28 >= Field::<i32>(Variant(_29, 2), 2);
_4 = _17;
_11 = 281_i16 as usize;
_2 = _21 >> _24;
_33 = _28 + _28;
_37 = !RET;
_30.fld1 = core::ptr::addr_of_mut!(_23);
_29 = Adt37::Variant2 { fld0: 110_u8,fld1: _25.2,fld2: _28 };
_32 = _22;
_5 = _3;
_22 = _32;
_28 = !Field::<i32>(Variant(_29, 2), 2);
_35.1 = [_24];
_22 = -_32;
_1 = _2 << _2;
_35 = (_25.2, _13);
_5 = _32 as u128;
Goto(bb9)
}
bb9 = {
place!(Field::<i32>(Variant(_29, 2), 2)) = _28 | _28;
_37 = RET;
_35.0 = [_24];
_33 = _28 ^ Field::<i32>(Variant(_29, 2), 2);
_11 = _9;
place!(Field::<[i128; 1]>(Variant(_29, 2), 1)) = [_24];
_19 = Adt50::Variant0 { fld0: 23_u8 };
_30.fld0 = [_24,_24,_24];
_29 = Adt37::Variant2 { fld0: 195_u8,fld1: _13,fld2: _33 };
_27 = [9046463340644484800_i64];
_28 = Field::<i32>(Variant(_29, 2), 2) >> _25.1;
_17 = _4;
_13 = [_24];
_28 = _7 as i32;
_35.0 = [_24];
_3 = !_5;
_1 = _8 >> Field::<i32>(Variant(_29, 2), 2);
_12 = [_6,_6,_7,_25.1];
_28 = _33;
_38 = !_25.1;
_2 = _21;
_34 = core::ptr::addr_of!(_35.1);
place!(Field::<u8>(Variant(_29, 2), 0)) = _20 as u8;
match _37 {
0 => bb10,
517887705 => bb12,
_ => bb11
}
}
bb10 = {
_17 = _4;
_29 = Adt37::Variant2 { fld0: 180_u8,fld1: _13,fld2: _28 };
_25.0 = !16380313376230075400_u64;
_4 = _17;
_24 = 166751089355014228700139274136657630121_i128 >> _8;
_26 = _28 >= Field::<i32>(Variant(_29, 2), 2);
_4 = _17;
_11 = 281_i16 as usize;
_2 = _21 >> _24;
_33 = _28 + _28;
_37 = !RET;
_30.fld1 = core::ptr::addr_of_mut!(_23);
_29 = Adt37::Variant2 { fld0: 110_u8,fld1: _25.2,fld2: _28 };
_32 = _22;
_5 = _3;
_22 = _32;
_28 = !Field::<i32>(Variant(_29, 2), 2);
_35.1 = [_24];
_22 = -_32;
_1 = _2 << _2;
_35 = (_25.2, _13);
_5 = _32 as u128;
Goto(bb9)
}
bb11 = {
_12 = [_6,_7,_6,_6];
_11 = !_9;
_5 = 255_u8 as u128;
_7 = _5 as isize;
_9 = _11;
_5 = 39852_u16 as u128;
_4 = '\u{d72ab}';
_2 = -_1;
RET = !341627184_u32;
_3 = _5 >> _6;
_4 = '\u{167a3}';
_1 = _8;
_5 = !_3;
RET = 1938826761_u32 - 3110235002_u32;
RET = _11 as u32;
_9 = !_11;
_6 = false as isize;
_11 = _9;
Call(_6 = fn2(_4, _10, _3, _10, _9, _9, _8, _12, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
SetDiscriminant(_29, 2);
_22 = -_32;
_9 = !_11;
_21 = -_16;
_4 = _17;
_17 = _4;
_42 = [_24,_24,_24];
_19 = Adt50::Variant0 { fld0: 187_u8 };
_24 = (-148670184596139981786184205416255472972_i128) << _2;
_7 = !_38;
place!(Field::<u8>(Variant(_19, 0), 0)) = !66_u8;
_32 = _25.0 as f64;
_1 = _8 ^ _8;
_27 = _10;
place!(Field::<i32>(Variant(_29, 2), 2)) = _28;
_25.0 = !10160700668994657484_u64;
_6 = -_25.1;
place!(Field::<u8>(Variant(_29, 2), 0)) = Field::<u8>(Variant(_19, 0), 0);
_13 = (*_34);
_38 = _6 & _7;
_21 = _16 - _1;
_34 = core::ptr::addr_of!((*_34));
_4 = _17;
match RET {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb13,
517887705 => bb15,
_ => bb14
}
}
bb13 = {
_14 = [RET,RET,RET,RET,RET];
_10 = [(-5425235230259336612_i64)];
_11 = !_9;
_3 = 10136_i16 as u128;
_5 = _3;
RET = _1 as u32;
_1 = !_8;
_16 = _8 + _8;
_12 = [_6,_7,_6,_6];
_6 = _7;
_16 = _8;
_2 = 24531_i16 as i8;
_8 = _2 * _1;
_7 = (-2032787191_i32) as isize;
Call(_9 = core::intrinsics::bswap(_11), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
RET = 19141548_u32 * 1029612207_u32;
_25.1 = _6;
_25 = (4508154232441317088_u64, _7, _13);
_8 = (-7464_i16) as i8;
_14 = [RET,RET,RET,RET,RET];
_8 = -_16;
RET = 2042435946_u32;
_21 = _16 & _8;
_26 = !false;
_9 = !_11;
Call(_1 = core::intrinsics::bswap(_8), ReturnTo(bb7), UnwindUnreachable())
}
bb15 = {
RET = _37;
_35.0 = _13;
Goto(bb16)
}
bb16 = {
Call(_48 = dump_var(1_usize, 33_usize, Move(_33), 1_usize, Move(_1), 11_usize, Move(_11), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(1_usize, 27_usize, Move(_27), 7_usize, Move(_7), 5_usize, Move(_5), 28_usize, Move(_28)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(1_usize, 2_usize, Move(_2), 10_usize, Move(_10), 4_usize, Move(_4), 38_usize, Move(_38)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_48 = dump_var(1_usize, 20_usize, Move(_20), 17_usize, Move(_17), 49_usize, _49, 49_usize, _49), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: char,mut _2: [i64; 1],mut _3: u128,mut _4: [i64; 1],mut _5: usize,mut _6: usize,mut _7: i8,mut _8: [isize; 4],mut _9: [isize; 4]) -> isize {
mir! {
type RET = isize;
let _10: [i128; 1];
let _11: bool;
let _12: u64;
let _13: [u32; 5];
let _14: Adt43;
let _15: (usize, isize);
let _16: (u64, isize, [i128; 1]);
let _17: isize;
let _18: i16;
let _19: Adt41;
let _20: f32;
let _21: [i128; 3];
let _22: isize;
let _23: (isize, [i64; 1]);
let _24: isize;
let _25: f64;
let _26: i32;
let _27: ();
let _28: ();
{
RET = !(-9223372036854775808_isize);
_7 = 116_i8;
RET = 1391_u16 as isize;
_2 = [(-1388144308799239488_i64)];
RET = 2311287605_u32 as isize;
_2 = [(-1174660475972440191_i64)];
Goto(bb1)
}
bb1 = {
_9 = [RET,RET,RET,RET];
_10 = [109814546663430056763234644239740000028_i128];
_2 = _4;
_11 = _5 <= _6;
_11 = _3 <= _3;
_11 = false;
_2 = _4;
_6 = _5;
_4 = [8838044993209268001_i64];
_11 = false;
match _7 {
0 => bb2,
1 => bb3,
116 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5 = (-8151565901315429478_i64) as usize;
_8 = [RET,RET,RET,RET];
_11 = true;
_11 = !true;
_7 = 11840814123730401364_u64 as i8;
_3 = !54078677067849223298785308196659329555_u128;
_9 = _8;
_12 = _5 as u64;
_12 = 53_u8 as u64;
Call(_8 = core::intrinsics::transmute(_9), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = [RET,RET,RET,RET];
_1 = '\u{d4136}';
_14.fld0 = _11;
_13 = [3017961349_u32,3800959723_u32,2530112327_u32,2712718732_u32,2482011957_u32];
_12 = _5 as u64;
_14.fld1.0 = _1 as usize;
_14.fld1 = (_5, RET);
_4 = [983837631440729237_i64];
_14.fld3 = _5 + _5;
_14.fld1 = (_14.fld3, RET);
Call(_14.fld5 = fn3(_14.fld1.0, _13, _8, _4, _9), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_14.fld6 = core::ptr::addr_of!(_14.fld4);
Call(RET = fn4(_14.fld3, _14.fld1.1, _14.fld5.fld0, _14.fld5.fld0, _4, _3, _8, _4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = _12 as isize;
_14.fld4 = !3064293266_u32;
_2 = _4;
_14.fld1 = (_6, RET);
_14.fld3 = !_5;
_8 = [_14.fld1.1,_14.fld1.1,RET,RET];
_9 = _8;
_14.fld2 = [11954578528889415489144974335415980389_i128,(-21238763787959850187338302466560344312_i128),(-41035052610046558794108693102372030694_i128)];
Call(_14.fld5 = fn17(_7, _11, _10, _10, _13, _10, _13, _10, _14.fld3, _1, _14.fld1.1, _13), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_15 = (_14.fld1.0, _14.fld1.1);
_14.fld6 = core::ptr::addr_of!(_14.fld4);
_16.2 = [(-162193680910119725134523816069208167876_i128)];
_14.fld3 = 226_u8 as usize;
_14.fld6 = core::ptr::addr_of!(_14.fld4);
_14.fld5.fld0 = [(-79015533342856836119629271311402096273_i128),(-69729252209498417428407204739037823300_i128),(-53659307651481167018183903504554300232_i128)];
_11 = _3 <= _3;
_16.0 = !_12;
_11 = !_14.fld0;
_16 = (_12, RET, _10);
_14.fld1.1 = _16.1 | RET;
_12 = _16.0 | _16.0;
_4 = _2;
_7 = 95_i8;
_16.1 = -RET;
_14.fld1.1 = 151451523705182939584897568774641072378_i128 as isize;
_12 = !_16.0;
_14.fld2 = _14.fld5.fld0;
_12 = _16.0 ^ _16.0;
Goto(bb10)
}
bb10 = {
_14.fld5.fld1 = core::ptr::addr_of_mut!(_20);
_2 = [3654367460390238738_i64];
_4 = _2;
_14.fld5.fld0 = [154114970597171948480987192094245627460_i128,(-53711203143382272341230089440785014369_i128),88185384701697510887107162980949352137_i128];
_3 = 19959847013420463347681778648239333469_u128;
_16.1 = 11898_u16 as isize;
_12 = _16.0 | _16.0;
_14.fld5.fld0 = _14.fld2;
_11 = _15.1 != RET;
_4 = _2;
_14.fld1.1 = _14.fld1.0 as isize;
_14.fld0 = !_11;
_6 = !_14.fld1.0;
_2 = [4300877125284971820_i64];
match _3 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb7,
4 => bb11,
5 => bb12,
19959847013420463347681778648239333469 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
RET = _12 as isize;
_14.fld4 = !3064293266_u32;
_2 = _4;
_14.fld1 = (_6, RET);
_14.fld3 = !_5;
_8 = [_14.fld1.1,_14.fld1.1,RET,RET];
_9 = _8;
_14.fld2 = [11954578528889415489144974335415980389_i128,(-21238763787959850187338302466560344312_i128),(-41035052610046558794108693102372030694_i128)];
Call(_14.fld5 = fn17(_7, _11, _10, _10, _13, _10, _13, _10, _14.fld3, _1, _14.fld1.1, _13), ReturnTo(bb9), UnwindUnreachable())
}
bb13 = {
Return()
}
bb14 = {
_3 = 295165929327028300799700046118946611122_u128;
_3 = !104856920098248075367907481565561166906_u128;
_9 = [_15.1,_14.fld1.1,RET,_15.1];
_14.fld1 = (_14.fld3, RET);
_18 = 15188_i16;
_17 = _16.1 - _16.1;
_12 = _16.0 << _16.1;
_9 = _8;
_17 = _14.fld1.1;
_18 = 15_u8 as i16;
_4 = [3119492075259839721_i64];
_7 = 90_i8 & (-116_i8);
_14.fld1.0 = _1 as usize;
_14.fld1.1 = _1 as isize;
_14.fld1.0 = _18 as usize;
_1 = '\u{464b6}';
_17 = _15.1;
_23.1 = _2;
_21 = [(-139421874671953492832332880247096120033_i128),(-31871652910996289035858652512736777603_i128),(-170109804394721823017300676871464393352_i128)];
_25 = (-1886380242_i32) as f64;
_18 = (-28650_i16);
_3 = (-3757689537586644642643185415560590525_i128) as u128;
_15.1 = RET ^ _14.fld1.1;
_14.fld5.fld1 = core::ptr::addr_of_mut!(_20);
_16.1 = !_14.fld1.1;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(2_usize, 18_usize, Move(_18), 17_usize, Move(_17), 8_usize, Move(_8), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(2_usize, 4_usize, Move(_4), 11_usize, Move(_11), 9_usize, Move(_9), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_27 = dump_var(2_usize, 10_usize, Move(_10), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: usize,mut _2: [u32; 5],mut _3: [isize; 4],mut _4: [i64; 1],mut _5: [isize; 4]) -> Adt39 {
mir! {
type RET = Adt39;
let _6: ([i64; 1], ([i128; 3],));
let _7: [isize; 4];
let _8: char;
let _9: isize;
let _10: u32;
let _11: bool;
let _12: i32;
let _13: (isize, [i64; 1]);
let _14: *const [i128; 1];
let _15: bool;
let _16: ([i128; 3],);
let _17: Adt51;
let _18: bool;
let _19: [i128; 1];
let _20: *const u128;
let _21: usize;
let _22: u8;
let _23: f32;
let _24: [isize; 4];
let _25: f64;
let _26: isize;
let _27: f32;
let _28: isize;
let _29: ();
let _30: ();
{
_3 = [(-77_isize),(-99_isize),9223372036854775807_isize,9223372036854775807_isize];
_5 = _3;
_6.0 = [(-8286228134430450955_i64)];
RET.fld0 = [(-12487110357488549466875151731757277020_i128),156951005590752307634170038813390264665_i128,61990764574157432023980174116721110497_i128];
Goto(bb1)
}
bb1 = {
RET.fld0 = [(-86526371956076302382055933877354711055_i128),28891641301035097578953825681140693192_i128,9907549555249322902789974646622263027_i128];
_6.1 = (RET.fld0,);
_6.1.0 = [107361462927986676811858133392857204910_i128,(-29104386758560343456654680096011114786_i128),(-56748945014754927322142500247875916103_i128)];
_4 = [8569142598015624235_i64];
_6.0 = [5292974995024219559_i64];
RET.fld0 = [(-152268772904577481252646367671159797019_i128),125998777351846122529862861474861557773_i128,43260937314123776287990997380187764453_i128];
_10 = 3026136128_u32;
RET.fld0 = [46243640693721006265864473476200730269_i128,98670420250021697399873426598453033719_i128,(-14881272508033226439173253250254583198_i128)];
_4 = [1584738294683505453_i64];
_8 = '\u{1b3b4}';
_9 = 9223372036854775807_isize;
_4 = _6.0;
_2 = [_10,_10,_10,_10,_10];
_8 = '\u{2d047}';
RET.fld0 = _6.1.0;
Goto(bb2)
}
bb2 = {
_11 = _1 > _1;
_6.1.0 = [132684227598655688106992100885364886160_i128,122157447014682158699264772041225798541_i128,3213566348546547265008880407976442117_i128];
_10 = 3171198099_u32 * 2102530204_u32;
_5 = [_9,_9,_9,_9];
_1 = 6_usize * 0_usize;
_10 = 2646092699_u32;
RET.fld0 = _6.1.0;
_3 = [_9,_9,_9,_9];
_13.1 = [4632198169569589847_i64];
_3 = [_9,_9,_9,_9];
_6.1 = (RET.fld0,);
_11 = !false;
_8 = '\u{1089d6}';
_2 = [_10,_10,_10,_10,_10];
Call(_13.1 = core::intrinsics::transmute(_9), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_13.0 = _1 as isize;
_11 = !false;
_3 = [_9,_13.0,_13.0,_13.0];
_12 = _1 as i32;
RET.fld0 = [116084035296641576271013822153475307912_i128,63390653207483439411434963755116633356_i128,(-67632153293818303273207812122856788460_i128)];
_16 = _6.1;
_5 = _3;
_6.0 = [2604972022800995170_i64];
RET.fld0 = _16.0;
_18 = _11;
_9 = _13.0 * _13.0;
_7 = _5;
_12 = 389946822_i32 & 395834062_i32;
_9 = _13.0;
_1 = 16317_u16 as usize;
match _10 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
2646092699 => bb10,
_ => bb9
}
}
bb4 = {
_11 = _1 > _1;
_6.1.0 = [132684227598655688106992100885364886160_i128,122157447014682158699264772041225798541_i128,3213566348546547265008880407976442117_i128];
_10 = 3171198099_u32 * 2102530204_u32;
_5 = [_9,_9,_9,_9];
_1 = 6_usize * 0_usize;
_10 = 2646092699_u32;
RET.fld0 = _6.1.0;
_3 = [_9,_9,_9,_9];
_13.1 = [4632198169569589847_i64];
_3 = [_9,_9,_9,_9];
_6.1 = (RET.fld0,);
_11 = !false;
_8 = '\u{1089d6}';
_2 = [_10,_10,_10,_10,_10];
Call(_13.1 = core::intrinsics::transmute(_9), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET.fld0 = [(-86526371956076302382055933877354711055_i128),28891641301035097578953825681140693192_i128,9907549555249322902789974646622263027_i128];
_6.1 = (RET.fld0,);
_6.1.0 = [107361462927986676811858133392857204910_i128,(-29104386758560343456654680096011114786_i128),(-56748945014754927322142500247875916103_i128)];
_4 = [8569142598015624235_i64];
_6.0 = [5292974995024219559_i64];
RET.fld0 = [(-152268772904577481252646367671159797019_i128),125998777351846122529862861474861557773_i128,43260937314123776287990997380187764453_i128];
_10 = 3026136128_u32;
RET.fld0 = [46243640693721006265864473476200730269_i128,98670420250021697399873426598453033719_i128,(-14881272508033226439173253250254583198_i128)];
_4 = [1584738294683505453_i64];
_8 = '\u{1b3b4}';
_9 = 9223372036854775807_isize;
_4 = _6.0;
_2 = [_10,_10,_10,_10,_10];
_8 = '\u{2d047}';
RET.fld0 = _6.1.0;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8 = '\u{d7f45}';
_12 = 938120652_i32;
_16 = (RET.fld0,);
_9 = _13.0;
_9 = _13.0 * _13.0;
_11 = !_18;
_13.1 = _6.0;
_19 = [117638562971731671744542916710555821417_i128];
_15 = _18;
_19 = [93998491817537568747905177953321072986_i128];
_6.0 = _4;
_10 = 2559937216_u32 ^ 147936506_u32;
_13 = (_9, _6.0);
match _12 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb11,
4 => bb12,
938120652 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
RET.fld0 = [(-86526371956076302382055933877354711055_i128),28891641301035097578953825681140693192_i128,9907549555249322902789974646622263027_i128];
_6.1 = (RET.fld0,);
_6.1.0 = [107361462927986676811858133392857204910_i128,(-29104386758560343456654680096011114786_i128),(-56748945014754927322142500247875916103_i128)];
_4 = [8569142598015624235_i64];
_6.0 = [5292974995024219559_i64];
RET.fld0 = [(-152268772904577481252646367671159797019_i128),125998777351846122529862861474861557773_i128,43260937314123776287990997380187764453_i128];
_10 = 3026136128_u32;
RET.fld0 = [46243640693721006265864473476200730269_i128,98670420250021697399873426598453033719_i128,(-14881272508033226439173253250254583198_i128)];
_4 = [1584738294683505453_i64];
_8 = '\u{1b3b4}';
_9 = 9223372036854775807_isize;
_4 = _6.0;
_2 = [_10,_10,_10,_10,_10];
_8 = '\u{2d047}';
RET.fld0 = _6.1.0;
Goto(bb2)
}
bb13 = {
_11 = _1 > _1;
_6.1.0 = [132684227598655688106992100885364886160_i128,122157447014682158699264772041225798541_i128,3213566348546547265008880407976442117_i128];
_10 = 3171198099_u32 * 2102530204_u32;
_5 = [_9,_9,_9,_9];
_1 = 6_usize * 0_usize;
_10 = 2646092699_u32;
RET.fld0 = _6.1.0;
_3 = [_9,_9,_9,_9];
_13.1 = [4632198169569589847_i64];
_3 = [_9,_9,_9,_9];
_6.1 = (RET.fld0,);
_11 = !false;
_8 = '\u{1089d6}';
_2 = [_10,_10,_10,_10,_10];
Call(_13.1 = core::intrinsics::transmute(_9), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
_15 = !_11;
_16 = (RET.fld0,);
RET.fld1 = core::ptr::addr_of_mut!(_23);
_22 = !145_u8;
_13 = (_9, _6.0);
_26 = _18 as isize;
_14 = core::ptr::addr_of!(_19);
_2 = [_10,_10,_10,_10,_10];
_2 = [_10,_10,_10,_10,_10];
_26 = -_9;
_18 = _11;
_6.1 = _16;
_5 = [_13.0,_26,_9,_26];
_21 = _1;
_13.1 = [(-9215467119735838006_i64)];
RET.fld1 = core::ptr::addr_of_mut!(_27);
_9 = _26 >> _26;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(3_usize, 21_usize, Move(_21), 10_usize, Move(_10), 5_usize, Move(_5), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(3_usize, 8_usize, Move(_8), 9_usize, Move(_9), 1_usize, Move(_1), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(3_usize, 26_usize, Move(_26), 4_usize, Move(_4), 30_usize, _30, 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: usize,mut _2: isize,mut _3: [i128; 3],mut _4: [i128; 3],mut _5: [i64; 1],mut _6: u128,mut _7: [isize; 4],mut _8: [i64; 1]) -> isize {
mir! {
type RET = isize;
let _9: i8;
let _10: i64;
let _11: u16;
let _12: bool;
let _13: (u64, isize, [i128; 1]);
let _14: (u64, isize, [i128; 1]);
let _15: f32;
let _16: u128;
let _17: f32;
let _18: (usize, isize);
let _19: *const f32;
let _20: (u64, isize, [i128; 1]);
let _21: ([i128; 1], [i128; 1]);
let _22: u16;
let _23: isize;
let _24: ([i64; 1], ([i128; 3],));
let _25: *const i16;
let _26: f64;
let _27: Adt44;
let _28: *const f32;
let _29: ([i128; 1], [i128; 1]);
let _30: f64;
let _31: Adt42;
let _32: isize;
let _33: (isize, [i64; 1]);
let _34: Adt51;
let _35: isize;
let _36: Adt44;
let _37: ();
let _38: ();
{
_4 = _3;
RET = 51_u8 as isize;
_4 = _3;
_7 = [RET,_2,_2,_2];
_3 = [40411845924824193376407183396050470862_i128,162424259908724293314128171779054280893_i128,14399042341383027656436547359071266398_i128];
_6 = 1849247618_u32 as u128;
_9 = 13_i8 | 6_i8;
_2 = RET >> _9;
_8 = _5;
_1 = !6_usize;
_5 = [(-4110272677249813210_i64)];
_2 = RET;
_7 = [RET,_2,_2,RET];
RET = 20213_u16 as isize;
_1 = 1459569731891423676_usize;
_5 = _8;
_6 = 148125414057437324577253790012999746307_u128 | 157605667750887096282730167973677314516_u128;
RET = _2 | _2;
RET = !_2;
RET = !_2;
_10 = 5231763013199449230_i64;
Call(_10 = core::intrinsics::bswap((-7963802233221330696_i64)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = 327787402352875066771853692925336259002_u128;
_2 = RET;
_6 = 235658784528286499997775454207055711621_u128 >> RET;
_8 = [_10];
RET = -_2;
_5 = _8;
_4 = _3;
_9 = 3014952810_u32 as i8;
_10 = _9 as i64;
_7 = [_2,RET,RET,RET];
_5 = [_10];
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
1459569731891423676 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_1 = 1240633847328010091_usize >> _10;
RET = _2 | _2;
_1 = RET as usize;
_12 = !true;
_13.2 = [(-114125600553295868204338591672747231435_i128)];
_13.1 = RET - _2;
_11 = 4640_u16;
_11 = 29472_u16;
RET = -_13.1;
_13.1 = (-245793973_i32) as isize;
RET = _13.1 << _2;
_4 = _3;
_3 = _4;
_12 = !true;
RET = _6 as isize;
RET = _13.1;
_11 = 2524111712_u32 as u16;
Goto(bb9)
}
bb9 = {
_13.1 = _2;
RET = _13.1;
_13.0 = 11992895447126321041_u64 ^ 9646171865658064465_u64;
_16 = _6;
_11 = !10680_u16;
_14.0 = _13.0 >> _10;
_12 = true;
_12 = _1 >= _1;
_10 = !(-2241593408298596498_i64);
_17 = _9 as f32;
_12 = !true;
_8 = [_10];
_14.0 = _16 as u64;
_19 = core::ptr::addr_of!(_15);
_18.1 = _2 * _2;
_2 = !RET;
_17 = 77_u8 as f32;
_14.1 = _13.1 | RET;
_5 = [_10];
RET = _14.1 * _13.1;
Goto(bb10)
}
bb10 = {
RET = _13.1;
_2 = _18.1;
_21 = (_13.2, _13.2);
RET = 139068341340718790654899634179476612438_i128 as isize;
_9 = (-56_i8) << _2;
_14 = (_13.0, _18.1, _21.1);
_5 = [_10];
_20.0 = _14.0 >> _14.0;
_22 = !_11;
_20.2 = [(-146666903495840645501841909897764346523_i128)];
_18.0 = _1 * _1;
_21.1 = [(-38213646062878815271393923484622370959_i128)];
_20.2 = [(-74858362892606510742526381652233306429_i128)];
_22 = !_11;
_13.0 = _12 as u64;
_13.1 = _14.1 >> _9;
_15 = 18993_i16 as f32;
_6 = _16;
_11 = _9 as u16;
_3 = [(-152968647297631522577838442629364175400_i128),(-20697033731925464731957661473199469121_i128),82871497620490745440563246844748380198_i128];
_11 = _12 as u16;
_13.0 = _20.0 >> _16;
RET = !_2;
_21.0 = [(-135142259773096771606496135008799437729_i128)];
_13 = _14;
RET = _14.1;
_23 = _14.1 << _20.0;
_11 = !_22;
Call(_24.1.0 = fn5(_18.1, _21.1, _18), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_13.0 = _10 as u64;
_11 = _9 as u16;
_7 = [_23,_13.1,_18.1,_23];
_4 = [(-58892326970878224100244953733835411364_i128),123731151382009833531227518159546719400_i128,92998145013500757726852732949015920640_i128];
_17 = -(*_19);
_13 = (_20.0, RET, _14.2);
_10 = !(-6441124350574085364_i64);
_19 = core::ptr::addr_of!(_15);
_20 = _13;
_2 = _14.1 + _18.1;
_18.0 = _1 << _23;
_10 = (-23363_i16) as i64;
_7 = [_14.1,_23,_20.1,_13.1];
_13.1 = 4644_i16 as isize;
_24.1 = (_4,);
_27.fld3 = _18;
_28 = _19;
_18.0 = !_1;
_23 = 28076_i16 as isize;
Goto(bb12)
}
bb12 = {
_24.1 = (_4,);
_26 = 654420488_u32 as f64;
_11 = _22;
_2 = _26 as isize;
_2 = _18.1;
_30 = _26;
_8 = _5;
_21.0 = _21.1;
_23 = RET << _13.0;
_29.0 = [28449428598306703606696306300667465728_i128];
_29.1 = [(-86193135196458209460889701317618592567_i128)];
_18.1 = -_13.1;
_7 = [RET,_27.fld3.1,_27.fld3.1,_20.1];
_20.2 = [(-3059338527470723943963367748989578476_i128)];
Goto(bb13)
}
bb13 = {
_10 = _14.1 as i64;
_13.0 = _20.0 + _14.0;
_7 = [_23,_14.1,_23,_27.fld3.1];
_27.fld3.1 = _14.1;
_20.1 = 5096202396630600986363905511768334253_i128 as isize;
_24.0 = _8;
_24.1.0 = [81843500702076147445257258999131181281_i128,(-31843452092005423912903872185937658000_i128),154702290526049842025842447011402726872_i128];
_29 = (_14.2, _13.2);
_18.0 = !_27.fld3.0;
_27.fld0 = _13.0 as u16;
_14.0 = _10 as u64;
_10 = -(-5949181981976639010_i64);
_28 = core::ptr::addr_of!((*_19));
_13.2 = _29.0;
_13 = _20;
_32 = -_2;
_19 = core::ptr::addr_of!((*_19));
_27.fld2 = core::ptr::addr_of_mut!((*_19));
_2 = _32;
_33.0 = (*_19) as isize;
_9 = '\u{56771}' as i8;
_19 = _28;
_6 = _16;
_24.0 = [_10];
_13.0 = 1640552844_i32 as u64;
_36.fld1 = !_10;
Goto(bb14)
}
bb14 = {
RET = _23 - _23;
_27.fld1 = _27.fld3.0 as i64;
_14.2 = [(-168928698135454262977902985359489681575_i128)];
_13.2 = [(-108643849781423412618640251602552788852_i128)];
_20.1 = RET >> _9;
_6 = _15 as u128;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(4_usize, 7_usize, Move(_7), 18_usize, Move(_18), 10_usize, Move(_10), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(4_usize, 22_usize, Move(_22), 11_usize, Move(_11), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(4_usize, 12_usize, Move(_12), 14_usize, Move(_14), 20_usize, Move(_20), 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: [i128; 1],mut _3: (usize, isize)) -> [i128; 3] {
mir! {
type RET = [i128; 3];
let _4: isize;
let _5: Adt47;
let _6: [isize; 4];
let _7: u128;
let _8: Adt44;
let _9: (isize, [i64; 1]);
let _10: bool;
let _11: i64;
let _12: ([i64; 1], ([i128; 3],));
let _13: u16;
let _14: f64;
let _15: ([i128; 3],);
let _16: f64;
let _17: bool;
let _18: ([i64; 1], ([i128; 3],));
let _19: i128;
let _20: ();
let _21: ();
{
_1 = (-2219_i16) as isize;
_1 = 11163525088423927126_u64 as isize;
RET = [99176900089014440149465398789310912352_i128,110770548842845572940235256684612534891_i128,150343383518810353269474101599948288172_i128];
_3.1 = _1 ^ _1;
_2 = [83890967711014234156699320869431309704_i128];
RET = [(-40120386682794544847495926721038554982_i128),82444640963500372205871149819948418117_i128,73305187800922514256288343735089260244_i128];
Goto(bb1)
}
bb1 = {
_1 = _3.1;
RET = [14498178733472758053187470695896499791_i128,129474276837236290163404013719049935169_i128,(-127211558702116457649063328895734194305_i128)];
RET = [(-28321157618062680298443173630142696488_i128),(-139018265476285201661701692462820453922_i128),7422257339082208950404644156770565164_i128];
_4 = _1;
_3.1 = _4;
_5.fld0 = true | true;
_5.fld2.1 = _3.1;
_5.fld4 = 75575921821250100428501522979311170245_i128 as u8;
_5.fld6.fld1 = core::ptr::addr_of_mut!(_5.fld3);
_5.fld0 = true | true;
_5.fld4 = !86_u8;
_1 = _4 * _5.fld2.1;
_1 = _4;
_5.fld2.0 = !1811955310686141235_u64;
_6 = [_1,_4,_3.1,_3.1];
_5.fld2.0 = 76_i8 as u64;
Goto(bb2)
}
bb2 = {
RET = [(-65505931114988758173571771804434319266_i128),(-4636379595327598986517790567114825553_i128),(-21753020389664895628281849676129894915_i128)];
_3 = (2341855824707106283_usize, _5.fld2.1);
_5.fld2.0 = 17842173515196459539_u64;
_1 = 1420931603_u32 as isize;
RET = [63993405015576661131654668584630824214_i128,(-13466550477821800491143014285459159484_i128),155682298219281665219203897347509311619_i128];
_5.fld4 = !76_u8;
_8.fld1 = !9192788728962650156_i64;
_8.fld3 = (_3.0, _4);
_5.fld2 = (7576144574629062875_u64, _1, _2);
_9.1 = [_8.fld1];
_4 = '\u{533ad}' as isize;
_8.fld1 = (-3456919240275856285_i64);
_3.1 = 35_i8 as isize;
_10 = _5.fld0;
_5.fld6.fld1 = core::ptr::addr_of_mut!(_5.fld3);
_9.1 = [_8.fld1];
_8.fld0 = !37228_u16;
match _5.fld2.0 {
0 => bb1,
1 => bb3,
2 => bb4,
7576144574629062875 => bb6,
_ => bb5
}
}
bb3 = {
_1 = _3.1;
RET = [14498178733472758053187470695896499791_i128,129474276837236290163404013719049935169_i128,(-127211558702116457649063328895734194305_i128)];
RET = [(-28321157618062680298443173630142696488_i128),(-139018265476285201661701692462820453922_i128),7422257339082208950404644156770565164_i128];
_4 = _1;
_3.1 = _4;
_5.fld0 = true | true;
_5.fld2.1 = _3.1;
_5.fld4 = 75575921821250100428501522979311170245_i128 as u8;
_5.fld6.fld1 = core::ptr::addr_of_mut!(_5.fld3);
_5.fld0 = true | true;
_5.fld4 = !86_u8;
_1 = _4 * _5.fld2.1;
_1 = _4;
_5.fld2.0 = !1811955310686141235_u64;
_6 = [_1,_4,_3.1,_3.1];
_5.fld2.0 = 76_i8 as u64;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_5.fld3 = 3519720513_u32 as f32;
_4 = _1;
_4 = _5.fld2.1 | _8.fld3.1;
_3.0 = !_8.fld3.0;
_5.fld3 = 123_i8 as f32;
_1 = _8.fld3.0 as isize;
_3.1 = _8.fld3.1;
_8.fld3.0 = !_3.0;
_1 = '\u{9cf02}' as isize;
_8.fld2 = _5.fld6.fld1;
_10 = _5.fld0;
_5.fld6 = Adt39 { fld0: RET,fld1: _8.fld2 };
_5.fld6.fld0 = [126770550639304808561266116304823523795_i128,(-62424191595039404566437230784049598527_i128),(-16810926815127761091255829887663713843_i128)];
_13 = !_8.fld0;
Call(_3.0 = fn6(_5.fld0, _13, _8.fld0, Move(_5.fld6), _5.fld3, _6, _8.fld3.1, _3.1, _8.fld3), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_5.fld3 = 83905937215546049060577392434076787890_i128 as f32;
_8.fld1 = '\u{f9540}' as i64;
_3.0 = !_8.fld3.0;
_12.1.0 = [22143695101344794930956491086503190576_i128,66687404436429480191519749561290031608_i128,(-140213207751716512159089098533466098217_i128)];
_5.fld2 = (15367745954644346149_u64, _4, _2);
_15.0 = [11826594819330239601129226818661607939_i128,(-165660484913664135466375045778786849609_i128),(-129673331281750942527853595792355391531_i128)];
Goto(bb8)
}
bb8 = {
_2 = _5.fld2.2;
Goto(bb9)
}
bb9 = {
_11 = _8.fld1 + _8.fld1;
_14 = _11 as f64;
_11 = !_8.fld1;
_5.fld2.1 = _4;
_8.fld3.1 = _5.fld2.1;
RET = [58875447808659885117463662836767450143_i128,(-150408561604228109432868182187313156134_i128),52338719696155666993917610855766915278_i128];
_9.0 = _8.fld3.1;
RET = [(-98492071118994580229044399633352799264_i128),111675400824968426467231699278652021302_i128,(-65959231095964020679621389922529502815_i128)];
_10 = !_5.fld0;
_8.fld1 = _11;
_17 = _10;
_3.1 = _4 >> _5.fld2.0;
_14 = _8.fld0 as f64;
_18 = (_9.1, _12.1);
_8.fld2 = core::ptr::addr_of_mut!(_5.fld3);
_8.fld3.1 = !_3.1;
_3.0 = _8.fld3.0 << _8.fld3.1;
_12 = _18;
_2 = [(-135956139491655802368583283536207189619_i128)];
_5.fld2.2 = [(-110618281025691792408358112702840615512_i128)];
_9.0 = _8.fld3.1 >> _3.0;
_18.0 = [_11];
_11 = -_8.fld1;
RET = [(-98025512808657117485506255853935352789_i128),22202739407311000081600818592196556003_i128,40917905898596674129870624479178429782_i128];
_10 = _5.fld0;
match _5.fld2.0 {
0 => bb4,
1 => bb10,
2 => bb11,
3 => bb12,
15367745954644346149 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
_1 = _3.1;
RET = [14498178733472758053187470695896499791_i128,129474276837236290163404013719049935169_i128,(-127211558702116457649063328895734194305_i128)];
RET = [(-28321157618062680298443173630142696488_i128),(-139018265476285201661701692462820453922_i128),7422257339082208950404644156770565164_i128];
_4 = _1;
_3.1 = _4;
_5.fld0 = true | true;
_5.fld2.1 = _3.1;
_5.fld4 = 75575921821250100428501522979311170245_i128 as u8;
_5.fld6.fld1 = core::ptr::addr_of_mut!(_5.fld3);
_5.fld0 = true | true;
_5.fld4 = !86_u8;
_1 = _4 * _5.fld2.1;
_1 = _4;
_5.fld2.0 = !1811955310686141235_u64;
_6 = [_1,_4,_3.1,_3.1];
_5.fld2.0 = 76_i8 as u64;
Goto(bb2)
}
bb12 = {
_5.fld3 = 3519720513_u32 as f32;
_4 = _1;
_4 = _5.fld2.1 | _8.fld3.1;
_3.0 = !_8.fld3.0;
_5.fld3 = 123_i8 as f32;
_1 = _8.fld3.0 as isize;
_3.1 = _8.fld3.1;
_8.fld3.0 = !_3.0;
_1 = '\u{9cf02}' as isize;
_8.fld2 = _5.fld6.fld1;
_10 = _5.fld0;
_5.fld6 = Adt39 { fld0: RET,fld1: _8.fld2 };
_5.fld6.fld0 = [126770550639304808561266116304823523795_i128,(-62424191595039404566437230784049598527_i128),(-16810926815127761091255829887663713843_i128)];
_13 = !_8.fld0;
Call(_3.0 = fn6(_5.fld0, _13, _8.fld0, Move(_5.fld6), _5.fld3, _6, _8.fld3.1, _3.1, _8.fld3), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
Return()
}
bb14 = {
_5.fld2.0 = !18274839227861336155_u64;
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(5_usize, 2_usize, Move(_2), 15_usize, Move(_15), 18_usize, Move(_18), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(5_usize, 6_usize, Move(_6), 3_usize, Move(_3), 21_usize, _21, 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: bool,mut _2: u16,mut _3: u16,mut _4: Adt39,mut _5: f32,mut _6: [isize; 4],mut _7: isize,mut _8: isize,mut _9: (usize, isize)) -> usize {
mir! {
type RET = usize;
let _10: (u64, isize, [i128; 1]);
let _11: [i128; 3];
let _12: ([i128; 3],);
let _13: char;
let _14: *const [i128; 1];
let _15: [u32; 5];
let _16: ([i64; 1], ([i128; 3],));
let _17: f32;
let _18: u64;
let _19: isize;
let _20: bool;
let _21: u8;
let _22: ();
let _23: ();
{
_9.1 = _8;
RET = !_9.0;
_3 = '\u{1eb0d}' as u16;
_10.0 = _1 as u64;
Goto(bb1)
}
bb1 = {
_10.1 = _9.1 >> _8;
_3 = _1 as u16;
_6 = [_9.1,_9.1,_10.1,_9.1];
_5 = 3756066934_u32 as f32;
_9.1 = _10.1;
_11 = _4.fld0;
Goto(bb2)
}
bb2 = {
_12.0 = [(-74410223178452083203132382477467553802_i128),(-25928570960592806785442267354032585335_i128),117004202797739105911239370453904352457_i128];
RET = !_9.0;
_6 = [_9.1,_9.1,_8,_7];
_12 = (_4.fld0,);
_9.0 = RET | RET;
_4.fld1 = core::ptr::addr_of_mut!(_5);
_10.2 = [(-140327102946904279508938530147902775793_i128)];
_5 = 89285979329881106057673506922076428514_u128 as f32;
_5 = 81_i8 as f32;
_10.2 = [17254198267365233269310443385817500374_i128];
Call(_9.1 = fn7(_4.fld1, _10, _6, _6, _4.fld0, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = _10.1;
_14 = core::ptr::addr_of!(_10.2);
_4.fld1 = core::ptr::addr_of_mut!(_5);
_5 = 159_u8 as f32;
_9.0 = RET;
_16.0 = [7005121615764129412_i64];
_9 = (RET, _10.1);
_13 = '\u{74650}';
_16.1 = (_12.0,);
Call(_9 = fn16(_10, _1, _16.1, _2, _4.fld1, _10.0, Move(_4), _16.1.0, _10.1, _10, RET, (*_14), _12.0, _16.1.0, _16.1.0, _10.1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_10.0 = 17378252825262604999_u64 + 7294167814508687099_u64;
RET = _9.0 + _9.0;
_9.1 = 143081288010436154844181694782315595012_i128 as isize;
_14 = core::ptr::addr_of!((*_14));
_17 = -_5;
_7 = !_10.1;
_13 = '\u{30a55}';
_13 = '\u{30e07}';
_3 = _2;
_16.0 = [3582973293619598986_i64];
_6 = [_10.1,_10.1,_7,_7];
_8 = _7;
_19 = _7 + _7;
_2 = _3 & _3;
_8 = _19 << RET;
_16.0 = [1955592676093124952_i64];
_15 = [1822472508_u32,3746427101_u32,2051293088_u32,1044816472_u32,1259842886_u32];
_16.1 = _12;
_14 = core::ptr::addr_of!((*_14));
_19 = _8 ^ _8;
_13 = '\u{c346}';
_15 = [875148211_u32,2219263031_u32,1965916017_u32,4184727685_u32,564327371_u32];
_4.fld0 = _16.1.0;
_21 = !226_u8;
_19 = _9.0 as isize;
_16.1 = _12;
_12 = _16.1;
Goto(bb5)
}
bb5 = {
Call(_22 = dump_var(6_usize, 7_usize, Move(_7), 15_usize, Move(_15), 11_usize, Move(_11), 3_usize, Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_22 = dump_var(6_usize, 21_usize, Move(_21), 10_usize, Move(_10), 9_usize, Move(_9), 23_usize, _23), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *mut f32,mut _2: (u64, isize, [i128; 1]),mut _3: [isize; 4],mut _4: [isize; 4],mut _5: [i128; 3],mut _6: (u64, isize, [i128; 1])) -> isize {
mir! {
type RET = isize;
let _7: Adt49;
let _8: (u64, isize, [i128; 1]);
let _9: [i128; 1];
let _10: Adt38;
let _11: u32;
let _12: Adt44;
let _13: Adt47;
let _14: f32;
let _15: char;
let _16: Adt52;
let _17: [isize; 4];
let _18: Adt40;
let _19: Adt43;
let _20: *mut f32;
let _21: f64;
let _22: Adt45;
let _23: i64;
let _24: isize;
let _25: bool;
let _26: ([i128; 1], [i128; 1]);
let _27: *mut *const u32;
let _28: (usize, isize);
let _29: Adt39;
let _30: Adt51;
let _31: ();
let _32: ();
{
RET = -_6.1;
_6 = (_2.0, RET, _2.2);
RET = -_6.1;
_5 = [(-168022537942062082121817242210328890312_i128),(-59742147888030304307452242475192833337_i128),(-158935407338164295494866270743117756215_i128)];
_6.1 = !RET;
_8.1 = _6.1;
_8.0 = !_6.0;
_2 = _6;
RET = _8.1;
_6.1 = _8.1 << RET;
_2 = _6;
_11 = 183_u8 as u32;
_8.1 = !_6.1;
_8.2 = [(-94420219893083810039584555540764734741_i128)];
_8.2 = [(-129392429555521694439492079176937825162_i128)];
_8.2 = [126501445673296179572284518221061502554_i128];
_8 = _6;
_2 = (_6.0, _8.1, _6.2);
_2.1 = _6.1 << _6.0;
Call(_6.2 = core::intrinsics::transmute(_2.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = (_8.0, _6.1, _8.2);
_8.0 = !_2.0;
_2 = (_8.0, _8.1, _8.2);
RET = _8.0 as isize;
_9 = _8.2;
Call(_8.2 = fn8(_6, _4, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = _8;
_9 = _8.2;
_12.fld0 = 1585_u16;
_9 = _8.2;
_11 = 1353245743_u32;
_11 = !1400168624_u32;
_13.fld6.fld1 = _1;
_8.0 = !_6.0;
_12.fld3.1 = (-17_i8) as isize;
_13.fld4 = _12.fld3.1 as u8;
_6.1 = (-1040616157_i32) as isize;
_8.2 = [89999655130459397456962882674746053949_i128];
_6 = (_8.0, _8.1, _9);
_11 = !3292532347_u32;
_5 = [6776802130328161493805151209731487175_i128,(-62244932756564301639354419549492170819_i128),76140747549694882571314021543512517639_i128];
_2 = _8;
_13.fld2.0 = !_2.0;
_3 = [_2.1,RET,_6.1,_2.1];
_13.fld3 = (-815721249_i32) as f32;
_1 = core::ptr::addr_of_mut!(_13.fld3);
_2 = (_13.fld2.0, _6.1, _6.2);
_13.fld3 = _11 as f32;
_2.1 = _8.1 & _6.1;
_11 = _12.fld0 as u32;
_13.fld2 = _2;
match _12.fld0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
1585 => bb9,
_ => bb8
}
}
bb3 = {
_2 = (_8.0, _6.1, _8.2);
_8.0 = !_2.0;
_2 = (_8.0, _8.1, _8.2);
RET = _8.0 as isize;
_9 = _8.2;
Call(_8.2 = fn8(_6, _4, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2.0 = _8.0;
_12.fld3.0 = 3_usize;
_12.fld3.0 = !7_usize;
_19.fld0 = !false;
_13.fld4 = 193_u8 - 13_u8;
_19.fld2 = [146752266552185933279807036312678833823_i128,116954028048257695652066328153123108121_i128,(-114119927928093753913711099354499731029_i128)];
_12.fld2 = _13.fld6.fld1;
_1 = _12.fld2;
_8.0 = !_2.0;
_19.fld5.fld1 = core::ptr::addr_of_mut!(_13.fld3);
_19.fld2 = _5;
_13.fld2.2 = [(-34672918370690964326693856675597762625_i128)];
_13.fld4 = !163_u8;
_8.2 = [(-111698318353520968024956129101653121341_i128)];
_13.fld6.fld1 = core::ptr::addr_of_mut!(_13.fld3);
_6.2 = _9;
_13.fld6.fld1 = core::ptr::addr_of_mut!(_14);
_12.fld3.1 = _6.1 + _6.1;
_19.fld6 = core::ptr::addr_of!(_11);
_13.fld2.2 = [(-31304341354758678994059470406149953189_i128)];
_13.fld4 = !15_u8;
_12.fld1 = (-5875141148175209700_i64);
_2.0 = _11 as u64;
_9 = _6.2;
_19.fld3 = _12.fld1 as usize;
_1 = core::ptr::addr_of_mut!(_14);
_19.fld4 = _11;
match _12.fld1 {
0 => bb1,
1 => bb5,
2 => bb6,
340282366920938463457499466283593001756 => bb10,
_ => bb4
}
}
bb10 = {
_19.fld0 = !false;
_12.fld4 = Adt40::Variant1 { fld0: _3,fld1: _19.fld6,fld2: _5 };
_2.1 = !_8.1;
place!(Field::<*const u32>(Variant(_12.fld4, 1), 1)) = core::ptr::addr_of!(_19.fld4);
_3 = [_2.1,_13.fld2.1,_12.fld3.1,_13.fld2.1];
_17 = [_2.1,_8.1,_2.1,_8.1];
_13.fld2 = (_8.0, _12.fld3.1, _6.2);
_15 = '\u{10ebd0}';
_2 = (_8.0, _12.fld3.1, _9);
_12.fld2 = core::ptr::addr_of_mut!(_14);
_3 = [_12.fld3.1,_12.fld3.1,_2.1,_13.fld2.1];
_18 = Adt40::Variant1 { fld0: Field::<[isize; 4]>(Variant(_12.fld4, 1), 0),fld1: Field::<*const u32>(Variant(_12.fld4, 1), 1),fld2: _19.fld2 };
_5 = [(-122161998457850558608017131815094869632_i128),27687254612106627631078064227653697783_i128,(-114223720404855490005905661116697414474_i128)];
_2.1 = _12.fld0 as isize;
_13.fld6 = Adt39 { fld0: _19.fld2,fld1: _19.fld5.fld1 };
_13.fld5 = core::ptr::addr_of!(_14);
_13.fld4 = 168_u8;
_19.fld5.fld0 = [(-34892668568733082378165756680731292890_i128),(-55973496411784992058707935607999335834_i128),137556602633711603336500465068038859155_i128];
match _12.fld1 {
0 => bb7,
1 => bb8,
2 => bb11,
3 => bb12,
340282366920938463457499466283593001756 => bb14,
_ => bb13
}
}
bb11 = {
_2.0 = _8.0;
_12.fld3.0 = 3_usize;
_12.fld3.0 = !7_usize;
_19.fld0 = !false;
_13.fld4 = 193_u8 - 13_u8;
_19.fld2 = [146752266552185933279807036312678833823_i128,116954028048257695652066328153123108121_i128,(-114119927928093753913711099354499731029_i128)];
_12.fld2 = _13.fld6.fld1;
_1 = _12.fld2;
_8.0 = !_2.0;
_19.fld5.fld1 = core::ptr::addr_of_mut!(_13.fld3);
_19.fld2 = _5;
_13.fld2.2 = [(-34672918370690964326693856675597762625_i128)];
_13.fld4 = !163_u8;
_8.2 = [(-111698318353520968024956129101653121341_i128)];
_13.fld6.fld1 = core::ptr::addr_of_mut!(_13.fld3);
_6.2 = _9;
_13.fld6.fld1 = core::ptr::addr_of_mut!(_14);
_12.fld3.1 = _6.1 + _6.1;
_19.fld6 = core::ptr::addr_of!(_11);
_13.fld2.2 = [(-31304341354758678994059470406149953189_i128)];
_13.fld4 = !15_u8;
_12.fld1 = (-5875141148175209700_i64);
_2.0 = _11 as u64;
_9 = _6.2;
_19.fld3 = _12.fld1 as usize;
_1 = core::ptr::addr_of_mut!(_14);
_19.fld4 = _11;
match _12.fld1 {
0 => bb1,
1 => bb5,
2 => bb6,
340282366920938463457499466283593001756 => bb10,
_ => bb4
}
}
bb12 = {
_6 = _8;
_9 = _8.2;
_12.fld0 = 1585_u16;
_9 = _8.2;
_11 = 1353245743_u32;
_11 = !1400168624_u32;
_13.fld6.fld1 = _1;
_8.0 = !_6.0;
_12.fld3.1 = (-17_i8) as isize;
_13.fld4 = _12.fld3.1 as u8;
_6.1 = (-1040616157_i32) as isize;
_8.2 = [89999655130459397456962882674746053949_i128];
_6 = (_8.0, _8.1, _9);
_11 = !3292532347_u32;
_5 = [6776802130328161493805151209731487175_i128,(-62244932756564301639354419549492170819_i128),76140747549694882571314021543512517639_i128];
_2 = _8;
_13.fld2.0 = !_2.0;
_3 = [_2.1,RET,_6.1,_2.1];
_13.fld3 = (-815721249_i32) as f32;
_1 = core::ptr::addr_of_mut!(_13.fld3);
_2 = (_13.fld2.0, _6.1, _6.2);
_13.fld3 = _11 as f32;
_2.1 = _8.1 & _6.1;
_11 = _12.fld0 as u32;
_13.fld2 = _2;
match _12.fld0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
1585 => bb9,
_ => bb8
}
}
bb13 = {
Return()
}
bb14 = {
_26.0 = [(-124909286817129779776030633925387957034_i128)];
_2 = (_8.0, _12.fld3.1, _6.2);
_28.1 = _12.fld3.1 >> _13.fld2.1;
_28.0 = _8.1 as usize;
_24 = -_2.1;
_23 = _12.fld1 + _12.fld1;
_13.fld0 = _8.1 < _6.1;
_29.fld0 = [106972130762249876960373885865036171960_i128,(-43749426272481437723835909473599746442_i128),6335661416992603317213965113526894028_i128];
_15 = '\u{a7439}';
_13.fld3 = _19.fld4 as f32;
_8.0 = !_2.0;
_19.fld1.1 = _24;
_19.fld1.0 = !_28.0;
_12.fld1 = !_23;
_2.1 = !_19.fld1.1;
_19.fld1 = (_19.fld3, _12.fld3.1);
SetDiscriminant(_12.fld4, 1);
_5 = [90389514177656221625876904053879085370_i128,(-63818060399421605725047515884032740373_i128),129105275152812958945470717352431981502_i128];
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(7_usize, 23_usize, Move(_23), 15_usize, Move(_15), 6_usize, Move(_6), 28_usize, Move(_28)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(7_usize, 3_usize, Move(_3), 8_usize, Move(_8), 32_usize, _32, 32_usize, _32), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: (u64, isize, [i128; 1]),mut _2: [isize; 4],mut _3: (u64, isize, [i128; 1])) -> [i128; 1] {
mir! {
type RET = [i128; 1];
let _4: (isize, [i64; 1]);
let _5: ([i128; 3],);
let _6: *const [i128; 1];
let _7: char;
let _8: i64;
let _9: ();
let _10: ();
{
_1 = (_3.0, _3.1, _3.2);
_3.2 = [(-141607658819907717910484259411730941115_i128)];
_1.1 = _3.1;
_1 = (_3.0, _3.1, _3.2);
_3.2 = _1.2;
RET = [(-101187777837872638997238139469266995060_i128)];
RET = [6107660680124613845069235674682524153_i128];
_1.0 = 1052209337_i32 as u64;
RET = [92448915062051751613378932538075023680_i128];
_1 = (_3.0, _3.1, RET);
_3.0 = _1.0;
Call(_3.2 = fn9(_1, _3.0, _3.0, _1.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5.0 = [153323359349026672658714671169079259885_i128,(-109247482966919557265757071526290268751_i128),162288104122349915439235444057641650867_i128];
_1.2 = [44956175757603490312180678875256336676_i128];
_2 = [_3.1,_1.1,_1.1,_3.1];
_1.1 = _3.1 << _3.1;
_1 = _3;
_3.0 = _1.0 | _1.0;
RET = [(-46712255678957631951374919699366428289_i128)];
_4.1 = [6291063516720900580_i64];
_1.0 = _3.0 ^ _3.0;
RET = [(-110150443690105283143790646493691657136_i128)];
_4.0 = _1.1 - _3.1;
_1.0 = _3.0 - _3.0;
_1.0 = !_3.0;
_4.1 = [(-2600852544683249213_i64)];
_1.0 = _3.0 ^ _3.0;
RET = [50619347428308709231859164448292232145_i128];
_1.0 = _3.0;
_4.0 = _1.1 * _3.1;
_4.1 = [(-7252120713155346745_i64)];
_3 = (_1.0, _1.1, _1.2);
_3 = (_1.0, _4.0, _1.2);
_4.0 = 3846221617_u32 as isize;
_1.1 = _3.1 | _3.1;
_3 = _1;
_2 = [_3.1,_1.1,_3.1,_1.1];
_4.1 = [(-546042321671585481_i64)];
_1 = (_3.0, _3.1, _3.2);
RET = [(-138080978182079418965681685568360869862_i128)];
_2 = [_1.1,_3.1,_1.1,_1.1];
Goto(bb2)
}
bb2 = {
_4.1 = [(-8946624935424284783_i64)];
_1.0 = _3.0 + _3.0;
RET = _1.2;
_3.1 = -_1.1;
_3 = (_1.0, _1.1, _1.2);
_6 = core::ptr::addr_of!(_1.2);
_3 = (_1.0, _1.1, RET);
_4.1 = [(-84044579816453973_i64)];
_4.0 = _1.1;
_7 = '\u{93b69}';
_3 = (_1.0, _1.1, _1.2);
Goto(bb3)
}
bb3 = {
Call(_9 = dump_var(8_usize, 4_usize, Move(_4), 5_usize, Move(_5), 3_usize, Move(_3), 10_usize, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: (u64, isize, [i128; 1]),mut _2: u64,mut _3: u64,mut _4: isize) -> [i128; 1] {
mir! {
type RET = [i128; 1];
let _5: Adt45;
let _6: u16;
let _7: ([i128; 1], [i128; 1]);
let _8: isize;
let _9: *const u32;
let _10: &'static isize;
let _11: [u32; 5];
let _12: Adt38;
let _13: u32;
let _14: bool;
let _15: Adt52;
let _16: u64;
let _17: [i128; 3];
let _18: f64;
let _19: bool;
let _20: [i128; 3];
let _21: (isize, [i64; 1]);
let _22: [i128; 1];
let _23: ([i64; 1], ([i128; 3],));
let _24: [i128; 1];
let _25: ([i64; 1], ([i128; 3],));
let _26: [i128; 1];
let _27: *const f32;
let _28: isize;
let _29: i16;
let _30: (usize, isize);
let _31: isize;
let _32: i128;
let _33: [u32; 5];
let _34: isize;
let _35: isize;
let _36: (usize, isize);
let _37: isize;
let _38: [i128; 1];
let _39: isize;
let _40: [i128; 3];
let _41: ([i128; 1], [i128; 1]);
let _42: Adt37;
let _43: ();
let _44: ();
{
RET = [108483277808330110716897987582767521636_i128];
RET = [58758617418154568694363445059276872364_i128];
RET = [31171697121977188322734236014939514228_i128];
_1.2 = [(-12673075407034210019713799552932295422_i128)];
RET = [110544359653889838363811957469378869129_i128];
_1 = (_3, _4, RET);
_4 = (-352373525_i32) as isize;
_1.0 = !_2;
RET = [(-97757043888078517033564794364570431113_i128)];
_1.1 = _4;
_1.0 = !_3;
_1 = (_3, _4, RET);
_4 = _1.1;
_3 = '\u{bf13a}' as u64;
_1.1 = -_4;
_4 = _1.1;
RET = _1.2;
_3 = _1.0 - _1.0;
RET = [104072678079373789643883084382716216361_i128];
_4 = _1.1 ^ _1.1;
_1.2 = [157120154853658291186309014609799159154_i128];
_2 = _1.0;
_1.0 = _3 ^ _3;
_1.0 = _2 | _3;
_1.1 = _4 & _4;
Goto(bb1)
}
bb1 = {
_2 = _1.0 - _1.0;
_4 = !_1.1;
RET = _1.2;
_6 = !61885_u16;
Goto(bb2)
}
bb2 = {
_1.1 = -_4;
_1.2 = [139804639584246804467369194939731974382_i128];
_1.2 = [(-89991763248858983182066484666338951011_i128)];
_8 = !_1.1;
_6 = 65032_u16 & 39522_u16;
RET = [158504326758412975212958839546153342520_i128];
_1.0 = (-545114398347110870_i64) as u64;
_6 = 11325_u16;
_8 = (-101_i8) as isize;
_7.1 = [149780073386240008816017445155150560330_i128];
Goto(bb3)
}
bb3 = {
_7.1 = [(-6534772562673851406853891054740825375_i128)];
RET = [65235668726864031442866673733812465788_i128];
_7.1 = [57594001647909146998055115772556098201_i128];
_1.1 = -_4;
RET = [(-36991971573292100591767526492440847864_i128)];
_1.1 = _4 >> _2;
_1.1 = 1040161599_u32 as isize;
_11 = [1615619829_u32,364399509_u32,319519402_u32,712197318_u32,3997558664_u32];
_11 = [2629069746_u32,3583011838_u32,4267118741_u32,926249350_u32,3781543278_u32];
RET = [(-130715511732511006095764061151565489363_i128)];
Call(_1.0 = fn10(_1.1, _4, _6, _2, _1.1, _1.1, _2, _2, _11, _2, _4, _8, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_1.0 = _3 - _2;
_6 = !46804_u16;
_7.0 = [108874535494163404269137574210522491029_i128];
_7.0 = [13249006827810874969845404529098873211_i128];
_6 = 62907_u16 - 51739_u16;
Goto(bb5)
}
bb5 = {
_11 = [3504645031_u32,3185165647_u32,2830834043_u32,1158487809_u32,4252338585_u32];
_7 = (_1.2, _1.2);
_7.0 = _1.2;
RET = _7.0;
_7.0 = [(-84174773330133083752511302771386233808_i128)];
_1 = (_3, _8, RET);
_7.0 = _1.2;
_1.2 = [20945631148442991512570512291125366203_i128];
_11 = [387245638_u32,698621713_u32,2157320667_u32,978441277_u32,1411207741_u32];
RET = [(-167508061086707190473263573739243516864_i128)];
_10 = &_4;
_3 = 73993742449737581685948330575290378797_u128 as u64;
_7.0 = [89138365241100381383161914909847244749_i128];
_6 = !22392_u16;
_7.1 = [137831445527074417419133005058184628730_i128];
Goto(bb6)
}
bb6 = {
_13 = 3606265288_u32 * 3493619080_u32;
_6 = _13 as u16;
_7 = (_1.2, RET);
_11 = [_13,_13,_13,_13,_13];
RET = _7.1;
_1.0 = _2 + _2;
_16 = !_1.0;
_3 = !_16;
_6 = (-66660585474276628612628870627869875677_i128) as u16;
_9 = core::ptr::addr_of!(_13);
_7.0 = _7.1;
Call(_18 = fn12(_1, (*_9), _1, _4, _3, _3, _3, (*_10), Move(_10), _9, _16, _1.0, _13, _1.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
RET = [21217014976542469641945402527508402542_i128];
_3 = 9617531528017971545926135400982542637_i128 as u64;
_10 = &_1.1;
_2 = !_1.0;
_19 = !false;
_6 = 48633_u16;
_3 = _1.0 * _16;
_14 = !_19;
_7.1 = [(-130557290997111168324536221447214941373_i128)];
_8 = _4 | _1.1;
_18 = _2 as f64;
RET = [113170178329885135878808580242537729873_i128];
_2 = !_3;
_11 = [(*_9),_13,(*_9),(*_9),(*_9)];
_3 = _18 as u64;
_19 = !_14;
_1.2 = [142074766692953874098149675123186486411_i128];
_22 = _7.0;
_24 = [(-110632552713446334341876970479276323417_i128)];
_17 = [95160091701499791550462259396213489059_i128,21834747535733932835129491760434959183_i128,79126801506798991722593273187151963881_i128];
_20 = _17;
Goto(bb8)
}
bb8 = {
_14 = _19;
_23.1 = (_20,);
_23.1.0 = _17;
_7 = (_1.2, _24);
_4 = _13 as isize;
_16 = _2 | _2;
_26 = [110001269330977570055356502190563575656_i128];
Call(_3 = fn13(_18, _1, _2, _1, _2, _16, _16, _18, _16, _7.1, _2, _1.0, _1.0), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_7.0 = [(-97897270354887873993952113949428595898_i128)];
_21.0 = 202024970950019785683929253980497171383_u128 as isize;
_17 = [(-50449733873476863090267841600083431212_i128),86619694190098525049123429834304432161_i128,(-124746814756757107076515459624392024737_i128)];
_25.1 = (_23.1.0,);
_25.0 = [(-5652798414928582975_i64)];
_10 = &_1.1;
_25.0 = [(-7257772513614218181_i64)];
_21.0 = _19 as isize;
_4 = 140174549966474846847851799253234351380_u128 as isize;
_30.0 = 223_u8 as usize;
_23.0 = _25.0;
_10 = &(*_10);
_1.2 = _22;
_18 = 39363214253203822099870618616743794310_i128 as f64;
Goto(bb10)
}
bb10 = {
_14 = _19 | _19;
_25.0 = _23.0;
_14 = !_19;
_30.0 = 2_usize & 6_usize;
_30.1 = (*_10) + _8;
_4 = 9742_i16 as isize;
_8 = _4;
_10 = &_4;
_25.1.0 = _23.1.0;
_9 = core::ptr::addr_of!(_13);
_3 = _6 as u64;
_1 = (_16, (*_10), _7.1);
_7 = (_26, _22);
_20 = _23.1.0;
_10 = &(*_10);
_33 = [(*_9),_13,_13,(*_9),(*_9)];
_13 = 694899927_u32 >> _1.0;
_22 = [67259085568737034380917481785646258068_i128];
Goto(bb11)
}
bb11 = {
_8 = -_1.1;
RET = [162001319781437332711248814308551298967_i128];
_11 = [(*_9),_13,_13,(*_9),_13];
_35 = _21.0 ^ (*_10);
_10 = &_31;
_8 = -_4;
_18 = _1.0 as f64;
_24 = [168973711024847851947453230097814581604_i128];
_21.1 = [(-2918449590139329369_i64)];
_6 = 24587_u16 << (*_9);
Call(_20 = fn14(_1, _9, _1, (*_9), (*_9), _16, (*_9), _9, _1.0, _13, _11, _1, (*_9)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_19 = _14;
_10 = &_30.1;
_32 = !(-108283494734372592597746220447763608150_i128);
_34 = (*_10);
_7.0 = [_32];
_29 = (-1224_i16) * (-18618_i16);
_32 = _6 as i128;
_9 = core::ptr::addr_of!(_13);
Call(_1.0 = fn15(_18, _9, _11, (*_9)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_23 = (_25.0, _25.1);
_23 = (_21.1, _25.1);
_12 = Adt38::Variant0 { fld0: 147_u8,fld1: _7.1,fld2: _23.1,fld3: 8175961277960931421_i64,fld4: _29 };
_9 = core::ptr::addr_of!((*_9));
place!(Field::<i64>(Variant(_12, 0), 3)) = !(-5843463985220131014_i64);
_16 = !_2;
place!(Field::<i16>(Variant(_12, 0), 4)) = -_29;
_37 = _34 - _34;
_8 = (*_10) & _37;
_12 = Adt38::Variant0 { fld0: 39_u8,fld1: _24,fld2: _23.1,fld3: (-6879735718164372252_i64),fld4: _29 };
_23 = (_21.1, Field::<([i128; 3],)>(Variant(_12, 0), 2));
RET = _26;
place!(Field::<i16>(Variant(_12, 0), 4)) = -_29;
_34 = (*_10);
_25.1.0 = [_32,_32,_32];
_38 = [_32];
_25 = (_21.1, _23.1);
_36.1 = -_8;
_31 = _30.1;
_7.1 = [_32];
_37 = _18 as isize;
RET = [_32];
Goto(bb14)
}
bb14 = {
Call(_43 = dump_var(9_usize, 11_usize, Move(_11), 22_usize, Move(_22), 4_usize, Move(_4), 7_usize, Move(_7)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_43 = dump_var(9_usize, 32_usize, Move(_32), 21_usize, Move(_21), 25_usize, Move(_25), 37_usize, Move(_37)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(9_usize, 17_usize, Move(_17), 14_usize, Move(_14), 2_usize, Move(_2), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(9_usize, 20_usize, Move(_20), 23_usize, Move(_23), 44_usize, _44, 44_usize, _44), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: isize,mut _3: u16,mut _4: u64,mut _5: isize,mut _6: isize,mut _7: u64,mut _8: u64,mut _9: [u32; 5],mut _10: u64,mut _11: isize,mut _12: isize,mut _13: u64) -> u64 {
mir! {
type RET = u64;
let _14: (usize, isize);
let _15: Adt40;
let _16: i32;
let _17: isize;
let _18: Adt45;
let _19: char;
let _20: bool;
let _21: char;
let _22: (usize, isize);
let _23: [i128; 3];
let _24: Adt40;
let _25: *mut *const u32;
let _26: ([i128; 3],);
let _27: [isize; 4];
let _28: i32;
let _29: *const f32;
let _30: ();
let _31: ();
{
_13 = _8;
_8 = _7 ^ _7;
_2 = _11 * _11;
RET = _8 - _4;
_13 = 2084445878304187044_i64 as u64;
_7 = _10;
RET = true as u64;
_9 = [2780722834_u32,3102982402_u32,3984813210_u32,2712566513_u32,2451737171_u32];
_5 = !_2;
_13 = _3 as u64;
_14.0 = 976417471_i32 as usize;
_14 = (7_usize, _12);
_6 = _5 & _5;
_8 = (-1225_i16) as u64;
_3 = 10388_u16 & 53667_u16;
_8 = 322455962791867688709571703395152281123_u128 as u64;
_10 = !_4;
_11 = _6 - _5;
_1 = !_6;
_3 = _4 as u16;
_14.0 = 1_usize;
_12 = _11;
_14 = (5515173441457172593_usize, _12);
Goto(bb1)
}
bb1 = {
_4 = 3340033695457192243_i64 as u64;
_1 = _11 >> _12;
_9 = [1724899222_u32,722249062_u32,1394466672_u32,737450413_u32,4038338397_u32];
_7 = !_10;
_14.1 = !_1;
_7 = _3 as u64;
_12 = -_6;
_7 = !_10;
_2 = _1 - _1;
_14.0 = (-7961_i16) as usize;
_12 = (-2419163530343599107_i64) as isize;
_14 = (0_usize, _2);
_9 = [2131410121_u32,1515215815_u32,3848948562_u32,2109417871_u32,894316136_u32];
_5 = -_11;
_1 = 97_i8 as isize;
_2 = _14.1;
_7 = _10;
_2 = _11;
_8 = !_7;
Call(_17 = core::intrinsics::transmute(_14.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = _11 >> _3;
_2 = _14.1;
_3 = !4593_u16;
_21 = '\u{cc32d}';
_16 = !(-1390318319_i32);
_10 = _7;
_14.0 = !4041565530336742399_usize;
_7 = 2153222023_u32 as u64;
_23 = [(-82184264756250850904420546532309242517_i128),52138202952510367132751841165784526879_i128,103761673713360407001172208381574669114_i128];
_1 = _14.1 + _17;
_10 = _2 as u64;
_5 = _3 as isize;
_12 = -_6;
_7 = _10 & _10;
_14.1 = 5349023071839201510_i64 as isize;
_19 = _21;
_23 = [17742748969481330983830970478438621685_i128,88014145938558658947451461563057591411_i128,(-103424531484936615901116371307387286642_i128)];
_26.0 = [(-161070332992419641856932999535492619730_i128),(-156946336839900220963206827582062569103_i128),47024856119950092672421318416956104889_i128];
_5 = _17 >> _2;
_10 = 1624369338826029365_i64 as u64;
Call(RET = fn11(_6, _2, _1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_26.0 = _23;
_22 = (_14.0, _6);
_27 = [_12,_5,_2,_17];
_17 = !_22.1;
_1 = _17 ^ _12;
_28 = _16 * _16;
_11 = !_1;
_26 = (_23,);
_17 = 151_u8 as isize;
_8 = RET << _5;
_7 = 198220486681825349366758212293654748523_u128 as u64;
_14.1 = _1;
_22 = _14;
Goto(bb4)
}
bb4 = {
Call(_30 = dump_var(10_usize, 16_usize, Move(_16), 27_usize, Move(_27), 7_usize, Move(_7), 4_usize, Move(_4)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_30 = dump_var(10_usize, 8_usize, Move(_8), 2_usize, Move(_2), 12_usize, Move(_12), 5_usize, Move(_5)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_30 = dump_var(10_usize, 21_usize, Move(_21), 28_usize, Move(_28), 3_usize, Move(_3), 31_usize, _31), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: isize,mut _3: isize) -> u64 {
mir! {
type RET = u64;
let _4: bool;
let _5: [isize; 4];
let _6: ([i64; 1], ([i128; 3],));
let _7: f64;
let _8: Adt43;
let _9: i128;
let _10: ();
let _11: ();
{
RET = !12897238135939136630_u64;
RET = 11866841822108139839_u64 | 4756318222809295270_u64;
_3 = _1 | _1;
_2 = RET as isize;
_1 = _3 * _3;
_2 = false as isize;
RET = !13304733946678972180_u64;
RET = 11416243804739617255_u64;
Call(RET = core::intrinsics::bswap(3432946597471429250_u64), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _1 > _1;
_2 = _3;
RET = 11278013610563026180_u64;
_1 = _2 + _2;
_4 = false;
RET = 14650280647205523388_u64;
_3 = 60_u8 as isize;
_5 = [_2,_1,_1,_2];
_3 = 22_u8 as isize;
_5 = [_2,_1,_1,_1];
_6.0 = [3239552436252191530_i64];
_5 = [_2,_1,_1,_1];
match RET {
14650280647205523388 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_4 = _1 != _2;
_5 = [_1,_1,_1,_1];
_3 = _2 | _2;
_2 = _3;
_2 = _3;
_6.1.0 = [100143125524077591798865613668497819183_i128,22308932140531944597106683833560880572_i128,90454914460225870132029070814808536516_i128];
RET = (-36609426235567776065276409041576755531_i128) as u64;
_5 = [_2,_3,_3,_1];
_6.0 = [8972874217680083703_i64];
_2 = 13054404429878696322_usize as isize;
_3 = -_1;
_1 = !_3;
_6.1.0 = [62473875439747598867458745268858767874_i128,63426200759476558548088464148706513509_i128,135366795813677265930244857980030026397_i128];
_2 = !_1;
_3 = !_2;
_1 = !_2;
_6.1.0 = [17915475229310821474588503327056366544_i128,22473053767854839801221774635121015473_i128,(-160505365147433022930557802713274472970_i128)];
_3 = _1;
_4 = true;
Goto(bb4)
}
bb4 = {
_3 = _2 * _1;
_5 = [_3,_1,_3,_1];
_2 = (-1394525554_i32) as isize;
_5 = [_1,_3,_3,_1];
_6.0 = [8431931840793916519_i64];
_5 = [_3,_3,_1,_3];
RET = 9978505644455793591_u64;
_6.0 = [8987744426080887266_i64];
_7 = 3188892637_u32 as f64;
_8.fld1.1 = !_1;
RET = 3354315548_u32 as u64;
_8.fld2 = [(-123970519078781471186419744799547072610_i128),(-161465815789746136612416596267101752013_i128),109832396621225772811527863134773258087_i128];
RET = 4701738056287390116_u64 >> _1;
_3 = _1 + _8.fld1.1;
_7 = (-30_i8) as f64;
_8.fld1 = (4187550983619479907_usize, _3);
_9 = -39055525990275441472097730876813776786_i128;
Goto(bb5)
}
bb5 = {
Call(_10 = dump_var(11_usize, 3_usize, Move(_3), 5_usize, Move(_5), 2_usize, Move(_2), 11_usize, _11), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: (u64, isize, [i128; 1]),mut _2: u32,mut _3: (u64, isize, [i128; 1]),mut _4: isize,mut _5: u64,mut _6: u64,mut _7: u64,mut _8: isize,mut _9: &'static isize,mut _10: *const u32,mut _11: u64,mut _12: u64,mut _13: u32,mut _14: u64) -> f64 {
mir! {
type RET = f64;
let _15: [u32; 5];
let _16: [u32; 5];
let _17: u128;
let _18: (usize, isize);
let _19: Adt51;
let _20: bool;
let _21: Adt40;
let _22: [u32; 5];
let _23: isize;
let _24: (usize, isize);
let _25: [u32; 5];
let _26: i8;
let _27: bool;
let _28: f64;
let _29: *const [i128; 1];
let _30: Adt50;
let _31: *const i16;
let _32: (isize, [i64; 1]);
let _33: *mut *const u32;
let _34: f64;
let _35: u128;
let _36: f64;
let _37: ();
let _38: ();
{
_1.0 = _14 << _3.0;
_7 = _1.0 >> _6;
_1.1 = _8;
RET = 194894959993324592614804447706629878927_u128 as f64;
Call(_3.0 = core::intrinsics::bswap(_6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _3;
_3.0 = !_14;
_10 = core::ptr::addr_of!(_13);
_4 = -_8;
_1.1 = _4;
_3.0 = _5;
_11 = 45990_u16 as u64;
_9 = &_3.1;
_14 = !_6;
_4 = 57694_u16 as isize;
_11 = 23648_i16 as u64;
_9 = &_8;
_3.2 = [(-151105900804977282965046202647110842304_i128)];
_14 = _5 + _1.0;
_5 = _14;
_16 = [_2,(*_10),_2,_2,(*_10)];
_11 = !_7;
_7 = 5_usize as u64;
_3.2 = [45573044912155868231631135415365055300_i128];
_15 = _16;
_14 = _5 & _3.0;
RET = (-6255_i16) as f64;
_17 = 316097026847040086018561528685248017741_u128;
RET = (-1375423114_i32) as f64;
Call(_4 = core::intrinsics::transmute(_14), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3.2 = [31229860453400507368778991334676280656_i128];
_3.2 = [17466856096774064122064155868884151668_i128];
_2 = 85_u8 as u32;
_5 = !_14;
_8 = !_4;
_3 = (_5, _1.1, _1.2);
_1.2 = [(-113007042078383217273103747274829988639_i128)];
_18.0 = !6_usize;
_11 = !_14;
_3.0 = !_5;
_14 = (*_10) as u64;
_18.1 = -_8;
_20 = false;
RET = 27104_i16 as f64;
_15 = _16;
_10 = core::ptr::addr_of!((*_10));
_10 = core::ptr::addr_of!((*_10));
_18 = (2078843886727475959_usize, _8);
_6 = !_11;
match _18.0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
2078843886727475959 => bb9,
_ => bb8
}
}
bb3 = {
_1 = _3;
_3.0 = !_14;
_10 = core::ptr::addr_of!(_13);
_4 = -_8;
_1.1 = _4;
_3.0 = _5;
_11 = 45990_u16 as u64;
_9 = &_3.1;
_14 = !_6;
_4 = 57694_u16 as isize;
_11 = 23648_i16 as u64;
_9 = &_8;
_3.2 = [(-151105900804977282965046202647110842304_i128)];
_14 = _5 + _1.0;
_5 = _14;
_16 = [_2,(*_10),_2,_2,(*_10)];
_11 = !_7;
_7 = 5_usize as u64;
_3.2 = [45573044912155868231631135415365055300_i128];
_15 = _16;
_14 = _5 & _3.0;
RET = (-6255_i16) as f64;
_17 = 316097026847040086018561528685248017741_u128;
RET = (-1375423114_i32) as f64;
Call(_4 = core::intrinsics::transmute(_14), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_22 = [_2,(*_10),_13,(*_10),(*_10)];
_3 = _1;
_23 = !_4;
_3 = (_11, _8, _1.2);
_3.2 = [48048542903447603422330849253586475617_i128];
_15 = _22;
match _18.0 {
0 => bb10,
2078843886727475959 => bb12,
_ => bb11
}
}
bb10 = {
_1 = _3;
_3.0 = !_14;
_10 = core::ptr::addr_of!(_13);
_4 = -_8;
_1.1 = _4;
_3.0 = _5;
_11 = 45990_u16 as u64;
_9 = &_3.1;
_14 = !_6;
_4 = 57694_u16 as isize;
_11 = 23648_i16 as u64;
_9 = &_8;
_3.2 = [(-151105900804977282965046202647110842304_i128)];
_14 = _5 + _1.0;
_5 = _14;
_16 = [_2,(*_10),_2,_2,(*_10)];
_11 = !_7;
_7 = 5_usize as u64;
_3.2 = [45573044912155868231631135415365055300_i128];
_15 = _16;
_14 = _5 & _3.0;
RET = (-6255_i16) as f64;
_17 = 316097026847040086018561528685248017741_u128;
RET = (-1375423114_i32) as f64;
Call(_4 = core::intrinsics::transmute(_14), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
Return()
}
bb12 = {
_14 = !_5;
_1.1 = -_3.1;
_12 = _3.0;
_24.0 = _18.0;
_26 = _3.0 as i8;
RET = (-19195_i16) as f64;
_18.1 = 20496_u16 as isize;
_3.0 = _17 as u64;
_8 = -_23;
_3.2 = [122529002156208103441249960793274777800_i128];
_5 = 11392_i16 as u64;
_9 = &_4;
_18.0 = '\u{82655}' as usize;
_1.2 = _3.2;
_3.0 = RET as u64;
_18.0 = 72883911277610363227667314633306345163_i128 as usize;
_18.0 = 100379895_i32 as usize;
_1.0 = !_12;
_20 = !false;
_8 = 387781108_i32 as isize;
_12 = _11;
_8 = !_4;
Goto(bb13)
}
bb13 = {
_25 = _16;
_18 = (_24.0, _4);
_12 = _14;
_24 = (_18.0, _18.1);
_17 = !223503120342280253042802190175609671280_u128;
_24.0 = RET as usize;
_15 = [(*_10),(*_10),_13,(*_10),_13];
match _18.0 {
0 => bb8,
1 => bb6,
2 => bb9,
3 => bb10,
2078843886727475959 => bb15,
_ => bb14
}
}
bb14 = {
_14 = !_5;
_1.1 = -_3.1;
_12 = _3.0;
_24.0 = _18.0;
_26 = _3.0 as i8;
RET = (-19195_i16) as f64;
_18.1 = 20496_u16 as isize;
_3.0 = _17 as u64;
_8 = -_23;
_3.2 = [122529002156208103441249960793274777800_i128];
_5 = 11392_i16 as u64;
_9 = &_4;
_18.0 = '\u{82655}' as usize;
_1.2 = _3.2;
_3.0 = RET as u64;
_18.0 = 72883911277610363227667314633306345163_i128 as usize;
_18.0 = 100379895_i32 as usize;
_1.0 = !_12;
_20 = !false;
_8 = 387781108_i32 as isize;
_12 = _11;
_8 = !_4;
Goto(bb13)
}
bb15 = {
_24 = (_18.0, _8);
_16 = _22;
_29 = core::ptr::addr_of!(_1.2);
_4 = _18.1;
_24.1 = !_1.1;
_22 = _25;
_24.1 = !_8;
_5 = !_12;
_6 = !_5;
_28 = RET * RET;
_1.2 = [(-103741620243100394743116561491516414273_i128)];
RET = -_28;
_13 = _2;
_3.1 = _24.1;
_12 = _17 as u64;
_1.1 = _28 as isize;
_25 = [(*_10),(*_10),(*_10),(*_10),_2];
_28 = RET - RET;
_3.0 = _11 | _11;
_12 = _26 as u64;
_33 = core::ptr::addr_of_mut!(_10);
_27 = _20;
_10 = core::ptr::addr_of!(_13);
_3.0 = _11 - _12;
Goto(bb16)
}
bb16 = {
Call(_37 = dump_var(12_usize, 7_usize, Move(_7), 12_usize, Move(_12), 3_usize, Move(_3), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(12_usize, 23_usize, Move(_23), 16_usize, Move(_16), 22_usize, Move(_22), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(12_usize, 20_usize, Move(_20), 18_usize, Move(_18), 8_usize, Move(_8), 38_usize, _38), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: f64,mut _2: (u64, isize, [i128; 1]),mut _3: u64,mut _4: (u64, isize, [i128; 1]),mut _5: u64,mut _6: u64,mut _7: u64,mut _8: f64,mut _9: u64,mut _10: [i128; 1],mut _11: u64,mut _12: u64,mut _13: u64) -> u64 {
mir! {
type RET = u64;
let _14: i32;
let _15: f64;
let _16: Adt40;
let _17: *const u32;
let _18: ();
let _19: ();
{
_1 = _8 * _8;
RET = !_6;
_2.1 = _4.1 | _4.1;
_5 = RET & _3;
_3 = _5;
RET = _6;
_4.1 = _2.1;
_9 = RET * _12;
_9 = (-83_i8) as u64;
_4 = (_11, _2.1, _10);
_4.2 = [(-68540356739258132538833358970374223807_i128)];
_8 = 31499_u16 as f64;
_2 = _4;
_4.1 = _2.1;
_2.2 = [30619255113406233970123578513126745848_i128];
_15 = -_1;
_4.0 = RET - _5;
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(13_usize, 3_usize, Move(_3), 7_usize, Move(_7), 11_usize, Move(_11), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_18 = dump_var(13_usize, 6_usize, Move(_6), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: (u64, isize, [i128; 1]),mut _2: *const u32,mut _3: (u64, isize, [i128; 1]),mut _4: u32,mut _5: u32,mut _6: u64,mut _7: u32,mut _8: *const u32,mut _9: u64,mut _10: u32,mut _11: [u32; 5],mut _12: (u64, isize, [i128; 1]),mut _13: u32) -> [i128; 3] {
mir! {
type RET = [i128; 3];
let _14: u16;
let _15: i32;
let _16: ([i64; 1], ([i128; 3],));
let _17: [u32; 5];
let _18: [i128; 1];
let _19: isize;
let _20: Adt46;
let _21: isize;
let _22: bool;
let _23: (u64, isize, [i128; 1]);
let _24: f32;
let _25: *const i16;
let _26: isize;
let _27: Adt49;
let _28: (u64, isize, [i128; 1]);
let _29: ([i128; 1], [i128; 1]);
let _30: usize;
let _31: (usize, isize);
let _32: Adt38;
let _33: *const [i128; 1];
let _34: i128;
let _35: [isize; 4];
let _36: Adt49;
let _37: ([i64; 1], ([i128; 3],));
let _38: ([i64; 1], ([i128; 3],));
let _39: ();
let _40: ();
{
_5 = _10 << _1.0;
_5 = !_7;
_12.0 = _9;
_13 = _7 - _7;
Goto(bb1)
}
bb1 = {
_14 = 8986_u16 | 53046_u16;
_12.2 = [108428391403410373680622601633742668763_i128];
_17 = _11;
_16.1.0 = [(-47180357133282069803889898691798720494_i128),(-10148683244144811745454405543185529122_i128),59926146440623870837483880125175099833_i128];
_9 = !_6;
_15 = (-87_i8) as i32;
_8 = core::ptr::addr_of!(_10);
_16.1.0 = [79050398438498188314785647765682751257_i128,(-84529957543708930712927665977915279105_i128),4892086939042325875036646367384914509_i128];
_7 = !_5;
_14 = !58921_u16;
Goto(bb2)
}
bb2 = {
_3.1 = _1.1;
_11 = [(*_8),_4,_4,_10,_7];
_12.0 = _1.0 - _9;
_1.2 = [(-75264431385723548970603914486318167519_i128)];
_3.0 = !_12.0;
_15 = !477431358_i32;
RET = [(-66137741704100379622074110024462748302_i128),(-64399312884935371401897029144911630963_i128),164147243018633950407821508397429181372_i128];
_15 = (-1854229447_i32) >> _7;
_11 = [(*_8),(*_8),_13,_7,_7];
_3 = (_12.0, _1.1, _1.2);
_19 = _12.1 << _3.0;
_9 = !_1.0;
_16.0 = [(-3194791397004991782_i64)];
_14 = (*_8) as u16;
_18 = [105833246809168934973136332071476812231_i128];
_12 = (_1.0, _19, _1.2);
_1.0 = _15 as u64;
_3.1 = !_12.1;
_3.0 = _6;
_8 = core::ptr::addr_of!(_7);
_7 = _5 - _13;
_12.2 = [(-140121331685622320073120772541009401241_i128)];
_21 = _12.1 << _3.1;
Goto(bb3)
}
bb3 = {
_21 = (-59093034407459913326629815832594034358_i128) as isize;
_3 = (_12.0, _19, _18);
_1.1 = -_3.1;
Goto(bb4)
}
bb4 = {
_3.2 = [(-99794520972892095245506307307224827962_i128)];
_23.0 = _3.0;
_23.2 = _1.2;
_23.0 = _6 - _12.0;
_23.2 = [76218996523773003131171056299784831634_i128];
Goto(bb5)
}
bb5 = {
_19 = _1.1;
_3.1 = -_1.1;
_23 = _1;
_18 = [19393734705525624373607769407853527700_i128];
_15 = (-1055975367_i32) | (-1317124377_i32);
_12 = _1;
_10 = _4 >> _7;
_13 = 42635304379386712904167219858718820317_i128 as u32;
_16.0 = [8482753042555906314_i64];
_7 = _5;
_23.1 = _12.1 ^ _3.1;
_17 = [(*_8),(*_8),_5,_10,(*_8)];
Goto(bb6)
}
bb6 = {
_6 = _12.0 - _3.0;
_16.1.0 = [160085813897736910853186290662657024458_i128,(-53492753794104878557167117227138190085_i128),(-43706718262443806090845849206400572919_i128)];
_3.0 = !_12.0;
_6 = !_12.0;
_22 = false;
_6 = _9;
_1.1 = _3.1 ^ _3.1;
_8 = _2;
_14 = 3_usize as u16;
_4 = !_7;
_24 = _12.0 as f32;
_26 = _3.1;
_1.1 = !_23.1;
RET = [1144197190682637513551577656165117525_i128,76096424790350615770343042446205945215_i128,102337680074559385334423343889984016860_i128];
_3.0 = !_9;
_11 = [_5,_10,_4,_10,_4];
_21 = 7_u8 as isize;
_24 = _14 as f32;
_1.0 = _23.0 + _6;
_1.1 = _12.1 | _3.1;
_12.0 = _1.0 * _9;
_23 = (_1.0, _26, _12.2);
_3.1 = _12.1 & _1.1;
Goto(bb7)
}
bb7 = {
_13 = !_5;
_4 = _13 & _7;
_28.0 = !_3.0;
_19 = _26;
_29 = (_18, _23.2);
_14 = !16329_u16;
RET = _16.1.0;
RET = [3889418582850609643818336868685557837_i128,43468125222405504457330687066749306188_i128,58805651401587346916422939072749560247_i128];
Goto(bb8)
}
bb8 = {
_23.2 = [(-45395077715382341756054075293300617091_i128)];
_29.0 = [(-41595602229284320448537053918033979974_i128)];
_21 = _23.1;
_6 = 4_usize as u64;
_10 = _7;
_12.1 = _12.0 as isize;
_31.0 = 5_usize >> _21;
_22 = _13 <= _4;
_21 = -_19;
RET = [159806327804133033217224465188478828605_i128,114457604267641021220045483518105175982_i128,39926585932154858201098265894783167991_i128];
_21 = _15 as isize;
_28 = _23;
_14 = 64300_u16;
_1 = (_28.0, _3.1, _29.0);
_1.0 = _3.0 ^ _28.0;
_24 = _1.0 as f32;
_23 = (_28.0, _3.1, _3.2);
_30 = '\u{5f936}' as usize;
_21 = _9 as isize;
_23.2 = [113442835714259458212100152362516371053_i128];
RET = [133887871841812838174493067211848160313_i128,143992087688336218325900392473934028236_i128,104458408711410051576459152426455847482_i128];
_29.0 = [44321261738605726666675726616825892254_i128];
_29.1 = [26594288947614945204492445303572846350_i128];
_15 = (-681512063_i32) & 1468600566_i32;
_23.2 = _1.2;
_12.0 = _9;
_22 = !true;
_1.2 = _28.2;
match _14 {
0 => bb1,
1 => bb5,
64300 => bb9,
_ => bb3
}
}
bb9 = {
_6 = _4 as u64;
RET = _16.1.0;
_28.1 = _12.1 | _19;
_5 = 64537336783361153885503165256817420880_u128 as u32;
_6 = !_28.0;
_12.0 = _23.0;
_22 = !false;
_1.1 = !_23.1;
_31.0 = _30 & _30;
_3.0 = _6 | _28.0;
_23.1 = !_3.1;
RET = _16.1.0;
_31.1 = -_1.1;
_35 = [_31.1,_12.1,_23.1,_19];
_5 = (-13928_i16) as u32;
_12 = (_6, _31.1, _18);
_1.2 = _12.2;
_23.1 = _26;
_35 = [_3.1,_19,_26,_28.1];
match _14 {
0 => bb5,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
64300 => bb17,
_ => bb16
}
}
bb10 = {
_14 = 8986_u16 | 53046_u16;
_12.2 = [108428391403410373680622601633742668763_i128];
_17 = _11;
_16.1.0 = [(-47180357133282069803889898691798720494_i128),(-10148683244144811745454405543185529122_i128),59926146440623870837483880125175099833_i128];
_9 = !_6;
_15 = (-87_i8) as i32;
_8 = core::ptr::addr_of!(_10);
_16.1.0 = [79050398438498188314785647765682751257_i128,(-84529957543708930712927665977915279105_i128),4892086939042325875036646367384914509_i128];
_7 = !_5;
_14 = !58921_u16;
Goto(bb2)
}
bb11 = {
_13 = !_5;
_4 = _13 & _7;
_28.0 = !_3.0;
_19 = _26;
_29 = (_18, _23.2);
_14 = !16329_u16;
RET = _16.1.0;
RET = [3889418582850609643818336868685557837_i128,43468125222405504457330687066749306188_i128,58805651401587346916422939072749560247_i128];
Goto(bb8)
}
bb12 = {
_6 = _12.0 - _3.0;
_16.1.0 = [160085813897736910853186290662657024458_i128,(-53492753794104878557167117227138190085_i128),(-43706718262443806090845849206400572919_i128)];
_3.0 = !_12.0;
_6 = !_12.0;
_22 = false;
_6 = _9;
_1.1 = _3.1 ^ _3.1;
_8 = _2;
_14 = 3_usize as u16;
_4 = !_7;
_24 = _12.0 as f32;
_26 = _3.1;
_1.1 = !_23.1;
RET = [1144197190682637513551577656165117525_i128,76096424790350615770343042446205945215_i128,102337680074559385334423343889984016860_i128];
_3.0 = !_9;
_11 = [_5,_10,_4,_10,_4];
_21 = 7_u8 as isize;
_24 = _14 as f32;
_1.0 = _23.0 + _6;
_1.1 = _12.1 | _3.1;
_12.0 = _1.0 * _9;
_23 = (_1.0, _26, _12.2);
_3.1 = _12.1 & _1.1;
Goto(bb7)
}
bb13 = {
_19 = _1.1;
_3.1 = -_1.1;
_23 = _1;
_18 = [19393734705525624373607769407853527700_i128];
_15 = (-1055975367_i32) | (-1317124377_i32);
_12 = _1;
_10 = _4 >> _7;
_13 = 42635304379386712904167219858718820317_i128 as u32;
_16.0 = [8482753042555906314_i64];
_7 = _5;
_23.1 = _12.1 ^ _3.1;
_17 = [(*_8),(*_8),_5,_10,(*_8)];
Goto(bb6)
}
bb14 = {
_3.2 = [(-99794520972892095245506307307224827962_i128)];
_23.0 = _3.0;
_23.2 = _1.2;
_23.0 = _6 - _12.0;
_23.2 = [76218996523773003131171056299784831634_i128];
Goto(bb5)
}
bb15 = {
_21 = (-59093034407459913326629815832594034358_i128) as isize;
_3 = (_12.0, _19, _18);
_1.1 = -_3.1;
Goto(bb4)
}
bb16 = {
_3.1 = _1.1;
_11 = [(*_8),_4,_4,_10,_7];
_12.0 = _1.0 - _9;
_1.2 = [(-75264431385723548970603914486318167519_i128)];
_3.0 = !_12.0;
_15 = !477431358_i32;
RET = [(-66137741704100379622074110024462748302_i128),(-64399312884935371401897029144911630963_i128),164147243018633950407821508397429181372_i128];
_15 = (-1854229447_i32) >> _7;
_11 = [(*_8),(*_8),_13,_7,_7];
_3 = (_12.0, _1.1, _1.2);
_19 = _12.1 << _3.0;
_9 = !_1.0;
_16.0 = [(-3194791397004991782_i64)];
_14 = (*_8) as u16;
_18 = [105833246809168934973136332071476812231_i128];
_12 = (_1.0, _19, _1.2);
_1.0 = _15 as u64;
_3.1 = !_12.1;
_3.0 = _6;
_8 = core::ptr::addr_of!(_7);
_7 = _5 - _13;
_12.2 = [(-140121331685622320073120772541009401241_i128)];
_21 = _12.1 << _3.1;
Goto(bb3)
}
bb17 = {
_7 = !_4;
_4 = 145084764271261847427529465284619904495_i128 as u32;
_6 = _31.0 as u64;
_6 = !_3.0;
_18 = [(-98222269822518461223442931349019779774_i128)];
_13 = _10;
_12.2 = [59597071177144070642278705648940638139_i128];
_10 = !_7;
Goto(bb18)
}
bb18 = {
Call(_39 = dump_var(14_usize, 4_usize, Move(_4), 6_usize, Move(_6), 18_usize, Move(_18), 21_usize, Move(_21)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_39 = dump_var(14_usize, 14_usize, Move(_14), 1_usize, Move(_1), 15_usize, Move(_15), 22_usize, Move(_22)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_39 = dump_var(14_usize, 11_usize, Move(_11), 3_usize, Move(_3), 19_usize, Move(_19), 23_usize, Move(_23)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_39 = dump_var(14_usize, 7_usize, Move(_7), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: f64,mut _2: *const u32,mut _3: [u32; 5],mut _4: u32) -> u64 {
mir! {
type RET = u64;
let _5: u64;
let _6: ();
let _7: ();
{
RET = 6739410875664152728_u64 << _4;
_1 = (-9223372036854775808_isize) as f64;
_4 = !4211089367_u32;
_3 = [_4,_4,_4,_4,_4];
Goto(bb1)
}
bb1 = {
Call(_6 = dump_var(15_usize, 3_usize, Move(_3), 7_usize, _7, 7_usize, _7, 7_usize, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: (u64, isize, [i128; 1]),mut _2: bool,mut _3: ([i128; 3],),mut _4: u16,mut _5: *mut f32,mut _6: u64,mut _7: Adt39,mut _8: [i128; 3],mut _9: isize,mut _10: (u64, isize, [i128; 1]),mut _11: usize,mut _12: [i128; 1],mut _13: [i128; 3],mut _14: [i128; 3],mut _15: [i128; 3],mut _16: isize) -> (usize, isize) {
mir! {
type RET = (usize, isize);
let _17: i8;
let _18: i32;
let _19: *const f32;
let _20: ([i64; 1], ([i128; 3],));
let _21: isize;
let _22: char;
let _23: Adt40;
let _24: ();
let _25: ();
{
_1.2 = _10.2;
RET.0 = _11 + _11;
_10.2 = [(-48809096620148113849992069433451223308_i128)];
_11 = RET.0 ^ RET.0;
_3.0 = [45566996451418504104380979124172282363_i128,49361162131979894485332795593342684821_i128,(-113830521479036662588456575263539865199_i128)];
RET.1 = _1.1 >> _11;
_10.2 = [52776226048478300330927960952440546493_i128];
RET = (_11, _16);
_7.fld1 = _5;
RET.0 = _11 * _11;
_11 = RET.0;
_1.2 = _10.2;
_4 = 3313_u16;
_17 = 5535845812698528122_i64 as i8;
RET.1 = _10.1;
_18 = (-2449857773990998260_i64) as i32;
_16 = _9 & _10.1;
_21 = _1.1 & _9;
_3 = (_15,);
_5 = _7.fld1;
_13 = [(-36148744877800520145467684601176173685_i128),(-108863216994386900527671432602599396946_i128),(-4882267390992004106903763430904716278_i128)];
_8 = _14;
_7.fld0 = _13;
_18 = 677586125_i32 >> RET.0;
_20.1.0 = [141898026044673890989106859879656021519_i128,10719654349018949820153411286460769544_i128,46710017615010846679634763743121339094_i128];
Goto(bb1)
}
bb1 = {
Call(_24 = dump_var(16_usize, 21_usize, Move(_21), 9_usize, Move(_9), 14_usize, Move(_14), 15_usize, Move(_15)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_24 = dump_var(16_usize, 18_usize, Move(_18), 1_usize, Move(_1), 13_usize, Move(_13), 11_usize, Move(_11)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i8,mut _2: bool,mut _3: [i128; 1],mut _4: [i128; 1],mut _5: [u32; 5],mut _6: [i128; 1],mut _7: [u32; 5],mut _8: [i128; 1],mut _9: usize,mut _10: char,mut _11: isize,mut _12: [u32; 5]) -> Adt39 {
mir! {
type RET = Adt39;
let _13: ([i128; 1], [i128; 1]);
let _14: u8;
let _15: ([i128; 3],);
let _16: (usize, isize);
let _17: [isize; 4];
let _18: u32;
let _19: (usize, isize);
let _20: *const u128;
let _21: (usize, isize);
let _22: i64;
let _23: (usize, isize);
let _24: isize;
let _25: ([i64; 1], ([i128; 3],));
let _26: u32;
let _27: isize;
let _28: [isize; 4];
let _29: i8;
let _30: [isize; 4];
let _31: f32;
let _32: isize;
let _33: ([i128; 1], [i128; 1]);
let _34: Adt51;
let _35: char;
let _36: f64;
let _37: u8;
let _38: bool;
let _39: [i64; 1];
let _40: [i64; 1];
let _41: [i128; 1];
let _42: u64;
let _43: (u64, isize, [i128; 1]);
let _44: Adt39;
let _45: isize;
let _46: Adt41;
let _47: isize;
let _48: f64;
let _49: [isize; 4];
let _50: isize;
let _51: ();
let _52: ();
{
_2 = false;
_10 = '\u{51da}';
RET.fld0 = [(-90093970434620674370803281277627112253_i128),(-14077880326697999878115752758058624179_i128),68001188542045974918373167539765342473_i128];
_11 = 9223372036854775807_isize * (-9223372036854775808_isize);
_4 = _3;
_8 = [(-121283913545985594692774338660719852668_i128)];
_2 = true ^ true;
_2 = !false;
_16.1 = _11 << _11;
_4 = [(-66612422886363354615962902150096697210_i128)];
_13 = (_4, _3);
_11 = (-7446550303161312685_i64) as isize;
_16.1 = _11;
_8 = _13.1;
_4 = _3;
_2 = !true;
_5 = _12;
_17 = [_16.1,_16.1,_16.1,_16.1];
Goto(bb1)
}
bb1 = {
_13 = (_8, _6);
_19.1 = _16.1 * _11;
Goto(bb2)
}
bb2 = {
_13.0 = _6;
Call(_16.1 = fn18(_17, _8, _19.1, _13.0, _5, _7, _13, _8, _1, _17, _12, _17, _10, RET.fld0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_12 = [3879046055_u32,3768875583_u32,1271944508_u32,3284296325_u32,2594251109_u32];
_1 = 86_i8 ^ (-5_i8);
_8 = _4;
_17 = [_19.1,_19.1,_19.1,_19.1];
_21.0 = _9 >> _16.1;
_23 = (_21.0, _16.1);
_21.1 = _19.1;
_15 = (RET.fld0,);
_19.0 = _21.0 | _21.0;
_16 = _21;
_8 = _13.1;
_21 = (_19.0, _19.1);
RET.fld0 = _15.0;
_4 = [6434024698496139753052852697133887817_i128];
_19.1 = _16.1 | _16.1;
_6 = [(-63014850744368936550255551957023418211_i128)];
_21 = _19;
_22 = (-4518700336970205776_i64) * (-4362189195026604943_i64);
_7 = _5;
_3 = [85722172800018795141149157764738166340_i128];
Goto(bb4)
}
bb4 = {
_24 = _21.1 >> _9;
_13.1 = _13.0;
_14 = 241_u8;
_24 = -_19.1;
match _14 {
0 => bb1,
1 => bb2,
2 => bb3,
241 => bb6,
_ => bb5
}
}
bb5 = {
_13.0 = _6;
Call(_16.1 = fn18(_17, _8, _19.1, _13.0, _5, _7, _13, _8, _1, _17, _12, _17, _10, RET.fld0), ReturnTo(bb3), UnwindUnreachable())
}
bb6 = {
_2 = !true;
Goto(bb7)
}
bb7 = {
_1 = (-59_i8) ^ 43_i8;
_30 = [_19.1,_24,_24,_24];
_23.0 = _21.0 << _19.0;
_19.0 = _21.0 | _21.0;
Goto(bb8)
}
bb8 = {
_10 = '\u{270e5}';
RET.fld0 = [(-86698847742860296850795116292924327151_i128),157893240191999694342596816630540584137_i128,105826339642542528081945600256153725333_i128];
_27 = !_21.1;
_21 = (_19.0, _27);
_5 = [1042475970_u32,766898360_u32,2872237062_u32,183033963_u32,3869000175_u32];
_17 = [_19.1,_21.1,_24,_19.1];
_24 = _21.1;
_9 = _23.0;
_28 = _30;
_21.1 = 5355_u16 as isize;
RET.fld1 = core::ptr::addr_of_mut!(_31);
_26 = 4046089719_u32;
_21.0 = 9585359678852952279_u64 as usize;
_25.1 = _15;
_22 = 7284583595981018357_i64 << _9;
_4 = [3426896472425528196326254537079386200_i128];
_23.0 = _19.0 & _19.0;
_28 = [_24,_11,_16.1,_27];
_19.0 = _9 << _9;
_23.1 = _24 & _27;
_25.1.0 = [76658801557562470958542680170749920447_i128,142437102605690202730768294313116338631_i128,(-150873917740981678917845275222256445099_i128)];
_27 = _23.1;
_29 = _1 & _1;
_17 = [_23.1,_23.1,_16.1,_21.1];
_21.0 = 106353593003594706017583452766989968970_u128 as usize;
_33.1 = [10903665130850330015812029705331854717_i128];
_12 = _5;
_33 = (_13.0, _13.0);
Goto(bb9)
}
bb9 = {
_11 = _23.1;
_18 = !_26;
_25.0 = [_22];
_13.0 = [(-49760475325559664644707364549510018809_i128)];
_24 = !_11;
match _26 {
0 => bb8,
1 => bb7,
4046089719 => bb10,
_ => bb6
}
}
bb10 = {
_24 = _23.1 + _23.1;
_33 = _13;
_13 = (_4, _8);
_3 = _6;
RET.fld0 = [158831637753175249197264197444328924212_i128,101082257665804796450883635601777475120_i128,114985487177252010384175990719716276818_i128];
Goto(bb11)
}
bb11 = {
_16 = (_23.0, _11);
_1 = _29 & _29;
_26 = !_18;
_36 = _22 as f64;
_27 = -_24;
_36 = _22 as f64;
_5 = _12;
_13 = (_33.1, _4);
Goto(bb12)
}
bb12 = {
_12 = _5;
_26 = _22 as u32;
_25.1.0 = [87432142784669260838002496043601930988_i128,(-84668045399109059771075786599033477850_i128),105968667401595503775690407669595245179_i128];
_25.0 = [_22];
_29 = -_1;
_28 = [_27,_19.1,_24,_16.1];
_16.1 = (-62167942716629271163116339016108040305_i128) as isize;
_9 = _14 as usize;
_38 = _16.0 == _19.0;
_32 = !_27;
RET.fld1 = core::ptr::addr_of_mut!(_31);
_29 = _36 as i8;
_31 = _26 as f32;
_7 = _12;
_21.1 = 678805999_i32 as isize;
_31 = _1 as f32;
_30 = [_11,_16.1,_23.1,_27];
RET.fld0 = [47453166980501251282938172275404152692_i128,(-46470995552890231176730006088644006026_i128),67539291944217232262369981108803994431_i128];
Goto(bb13)
}
bb13 = {
_19.0 = !_23.0;
_30 = [_27,_32,_27,_16.1];
match _14 {
0 => bb14,
1 => bb15,
2 => bb16,
241 => bb18,
_ => bb17
}
}
bb14 = {
_13 = (_8, _6);
_19.1 = _16.1 * _11;
Goto(bb2)
}
bb15 = {
_16 = (_23.0, _11);
_1 = _29 & _29;
_26 = !_18;
_36 = _22 as f64;
_27 = -_24;
_36 = _22 as f64;
_5 = _12;
_13 = (_33.1, _4);
Goto(bb12)
}
bb16 = {
_24 = _23.1 + _23.1;
_33 = _13;
_13 = (_4, _8);
_3 = _6;
RET.fld0 = [158831637753175249197264197444328924212_i128,101082257665804796450883635601777475120_i128,114985487177252010384175990719716276818_i128];
Goto(bb11)
}
bb17 = {
_11 = _23.1;
_18 = !_26;
_25.0 = [_22];
_13.0 = [(-49760475325559664644707364549510018809_i128)];
_24 = !_11;
match _26 {
0 => bb8,
1 => bb7,
4046089719 => bb10,
_ => bb6
}
}
bb18 = {
_36 = 8683_u16 as f64;
_17 = [_23.1,_23.1,_32,_32];
_15 = _25.1;
_33 = _13;
_33.1 = [(-169230842541616814558250654617344101776_i128)];
_25.1.0 = [(-49476786378509665482482454307571910128_i128),(-149147677129362215750694034088729420289_i128),163308989764272613299648656104826998540_i128];
RET.fld0 = [128461261994005308771487884646124366818_i128,(-12143951564472032690039149765290361938_i128),89848349584215654851074073378381229971_i128];
_30 = [_24,_11,_27,_11];
_9 = _16.0;
_25.0 = [_22];
_21.1 = _22 as isize;
_8 = [(-86380046493082688016697264513022111815_i128)];
_40 = [_22];
_25.1.0 = [(-93704599793595937587924082068007325951_i128),71134069653972378625321385395070981282_i128,(-22917656356027387077066088029592331935_i128)];
_12 = [_26,_18,_26,_26,_26];
_10 = '\u{6879}';
_31 = (-29344_i16) as f32;
_45 = _21.1;
_32 = _23.1;
_22 = 3513735199142142550_i64 >> _29;
RET.fld0 = [(-70108134522978179193221232149731501693_i128),(-45019430519234752347238340669302802633_i128),7323206022279194633744484611093146609_i128];
_13.1 = [101257747399835212792236391689709145748_i128];
_6 = [37560938407237925755203477364790691912_i128];
_16.1 = -_19.1;
Goto(bb19)
}
bb19 = {
Call(_51 = dump_var(17_usize, 38_usize, Move(_38), 26_usize, Move(_26), 14_usize, Move(_14), 22_usize, Move(_22)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_51 = dump_var(17_usize, 13_usize, Move(_13), 1_usize, Move(_1), 28_usize, Move(_28), 11_usize, Move(_11)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_51 = dump_var(17_usize, 7_usize, Move(_7), 8_usize, Move(_8), 15_usize, Move(_15), 4_usize, Move(_4)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_51 = dump_var(17_usize, 45_usize, Move(_45), 32_usize, Move(_32), 25_usize, Move(_25), 9_usize, Move(_9)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_51 = dump_var(17_usize, 24_usize, Move(_24), 52_usize, _52, 52_usize, _52, 52_usize, _52), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [isize; 4],mut _2: [i128; 1],mut _3: isize,mut _4: [i128; 1],mut _5: [u32; 5],mut _6: [u32; 5],mut _7: ([i128; 1], [i128; 1]),mut _8: [i128; 1],mut _9: i8,mut _10: [isize; 4],mut _11: [u32; 5],mut _12: [isize; 4],mut _13: char,mut _14: [i128; 3]) -> isize {
mir! {
type RET = isize;
let _15: (usize, isize);
let _16: u32;
let _17: usize;
let _18: bool;
let _19: i64;
let _20: bool;
let _21: Adt44;
let _22: (u64, isize, [i128; 1]);
let _23: ([i128; 1], [i128; 1]);
let _24: f32;
let _25: &'static isize;
let _26: i8;
let _27: i8;
let _28: *mut *const u32;
let _29: [isize; 4];
let _30: ();
let _31: ();
{
_12 = [_3,_3,_3,_3];
_10 = _12;
_8 = _7.0;
_3 = -(-9223372036854775808_isize);
_4 = [(-77783022648508542074974261970513510396_i128)];
_7 = (_2, _4);
_14 = [67172196983369286920609307611343325944_i128,(-42835215909564673004387742074781746465_i128),(-5694777577092662920808243566978235821_i128)];
_7.0 = _7.1;
_6 = _5;
_6 = [1420501756_u32,423982670_u32,2695393800_u32,3734512835_u32,1570785370_u32];
RET = _3;
Goto(bb1)
}
bb1 = {
_15.1 = RET << _9;
_10 = [RET,_15.1,RET,_15.1];
_9 = 80643216307515772158153744669502423618_u128 as i8;
_13 = '\u{b7e3b}';
_4 = [(-82702116075397328522015193642511854583_i128)];
_8 = [4386489465343564918882901428845203852_i128];
_6 = [2443378204_u32,2749145667_u32,4118960580_u32,2963438015_u32,831917983_u32];
_9 = -81_i8;
_10 = [_3,RET,_3,_15.1];
_12 = [_15.1,_15.1,RET,_15.1];
_12 = [_3,_15.1,_15.1,_3];
_7.1 = _4;
_12 = [_15.1,_15.1,_15.1,_15.1];
_15.0 = !3_usize;
_7.1 = [(-111183243346992759008637914161233624107_i128)];
_14 = [118287654750226711312546366067330446410_i128,(-54532845809583875291121592901851236185_i128),(-159334045682773553119909266013480913430_i128)];
_13 = '\u{749d7}';
_8 = [102537479445583274340253746643858453904_i128];
_10 = [RET,_15.1,_15.1,_3];
_15.0 = 312977005_u32 as usize;
_8 = [(-151937150058091476247460106983170999276_i128)];
_1 = _10;
RET = _15.1;
_7 = (_8, _2);
_15.0 = 5470138605190191692_usize | 700948776504971232_usize;
_12 = [_15.1,_15.1,_3,_15.1];
_8 = [(-118090685519095656856295097139767523744_i128)];
_6 = _11;
Goto(bb2)
}
bb2 = {
_14 = [(-136073217899963293563453321565436068407_i128),155643756715772985390362494514148798650_i128,94705096387279199107157247288665907951_i128];
_12 = [_15.1,RET,RET,_3];
_15.0 = !3671741660772979739_usize;
_12 = _10;
_2 = [11301411046366986533573403265732985591_i128];
_12 = [_15.1,_15.1,_3,RET];
_13 = '\u{7f086}';
_4 = [157161935240110187582813086891217199296_i128];
_17 = !_15.0;
_9 = 95_i8 ^ 43_i8;
_18 = true;
_10 = [_3,_15.1,_15.1,RET];
_16 = 1484770746_u32;
_7 = (_2, _8);
_16 = !3557247317_u32;
_15 = (_17, RET);
_19 = 26357_u16 as i64;
_6 = _11;
_2 = [(-137321530834564151943285455867966431721_i128)];
Goto(bb3)
}
bb3 = {
_2 = _7.1;
_8 = [(-18564893524501366997588611137238886645_i128)];
_17 = _15.0;
_6 = [_16,_16,_16,_16,_16];
RET = !_3;
_21.fld0 = (-30650_i16) as u16;
_7.0 = [27400419916139135541321519756766406706_i128];
_12 = [_3,_15.1,_3,_3];
_21.fld3 = (_15.0, RET);
_2 = [(-60662894394779315933717022602040483103_i128)];
_1 = [_15.1,_15.1,_15.1,_21.fld3.1];
_20 = _18;
_11 = _5;
RET = 7690062061549554859_u64 as isize;
_21.fld1 = 192365058664143783290528276903897312286_u128 as i64;
_21.fld0 = !12612_u16;
_9 = 30_u8 as i8;
Goto(bb4)
}
bb4 = {
RET = 102354037292803460669811270965976162262_i128 as isize;
_11 = [_16,_16,_16,_16,_16];
_21.fld1 = _19;
_1 = [_21.fld3.1,_3,_15.1,_21.fld3.1];
_5 = [_16,_16,_16,_16,_16];
_13 = '\u{1000c9}';
_5 = _11;
_7.0 = [(-73088795642150813522813355174944049829_i128)];
RET = _21.fld3.1;
_8 = _7.0;
RET = _3 << _15.1;
_22 = (465630019877806553_u64, _15.1, _7.1);
_2 = _7.0;
_4 = _2;
_22.1 = 89135588119947417065180468934274530128_u128 as isize;
RET = _21.fld3.1;
_17 = _15.0;
match _22.0 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
465630019877806553 => bb9,
_ => bb8
}
}
bb5 = {
_2 = _7.1;
_8 = [(-18564893524501366997588611137238886645_i128)];
_17 = _15.0;
_6 = [_16,_16,_16,_16,_16];
RET = !_3;
_21.fld0 = (-30650_i16) as u16;
_7.0 = [27400419916139135541321519756766406706_i128];
_12 = [_3,_15.1,_3,_3];
_21.fld3 = (_15.0, RET);
_2 = [(-60662894394779315933717022602040483103_i128)];
_1 = [_15.1,_15.1,_15.1,_21.fld3.1];
_20 = _18;
_11 = _5;
RET = 7690062061549554859_u64 as isize;
_21.fld1 = 192365058664143783290528276903897312286_u128 as i64;
_21.fld0 = !12612_u16;
_9 = 30_u8 as i8;
Goto(bb4)
}
bb6 = {
_14 = [(-136073217899963293563453321565436068407_i128),155643756715772985390362494514148798650_i128,94705096387279199107157247288665907951_i128];
_12 = [_15.1,RET,RET,_3];
_15.0 = !3671741660772979739_usize;
_12 = _10;
_2 = [11301411046366986533573403265732985591_i128];
_12 = [_15.1,_15.1,_3,RET];
_13 = '\u{7f086}';
_4 = [157161935240110187582813086891217199296_i128];
_17 = !_15.0;
_9 = 95_i8 ^ 43_i8;
_18 = true;
_10 = [_3,_15.1,_15.1,RET];
_16 = 1484770746_u32;
_7 = (_2, _8);
_16 = !3557247317_u32;
_15 = (_17, RET);
_19 = 26357_u16 as i64;
_6 = _11;
_2 = [(-137321530834564151943285455867966431721_i128)];
Goto(bb3)
}
bb7 = {
_15.1 = RET << _9;
_10 = [RET,_15.1,RET,_15.1];
_9 = 80643216307515772158153744669502423618_u128 as i8;
_13 = '\u{b7e3b}';
_4 = [(-82702116075397328522015193642511854583_i128)];
_8 = [4386489465343564918882901428845203852_i128];
_6 = [2443378204_u32,2749145667_u32,4118960580_u32,2963438015_u32,831917983_u32];
_9 = -81_i8;
_10 = [_3,RET,_3,_15.1];
_12 = [_15.1,_15.1,RET,_15.1];
_12 = [_3,_15.1,_15.1,_3];
_7.1 = _4;
_12 = [_15.1,_15.1,_15.1,_15.1];
_15.0 = !3_usize;
_7.1 = [(-111183243346992759008637914161233624107_i128)];
_14 = [118287654750226711312546366067330446410_i128,(-54532845809583875291121592901851236185_i128),(-159334045682773553119909266013480913430_i128)];
_13 = '\u{749d7}';
_8 = [102537479445583274340253746643858453904_i128];
_10 = [RET,_15.1,_15.1,_3];
_15.0 = 312977005_u32 as usize;
_8 = [(-151937150058091476247460106983170999276_i128)];
_1 = _10;
RET = _15.1;
_7 = (_8, _2);
_15.0 = 5470138605190191692_usize | 700948776504971232_usize;
_12 = [_15.1,_15.1,_3,_15.1];
_8 = [(-118090685519095656856295097139767523744_i128)];
_6 = _11;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_2 = [109666489568600888996652507789878040553_i128];
_15 = (_17, _3);
_3 = _22.1 ^ _15.1;
_22.2 = [83547764383083596386597060287673986983_i128];
_2 = _7.1;
_12 = _1;
_16 = !2969947433_u32;
_21.fld1 = -_19;
_9 = (-84_i8);
_22.1 = _3 ^ _3;
_8 = _7.0;
_19 = _21.fld1 >> _22.0;
_20 = _18;
_20 = !_18;
_23.1 = [114676100814477368527483383371572910008_i128];
_22 = (8044857686023594978_u64, _21.fld3.1, _8);
_22.1 = _3 * _15.1;
_21.fld3 = (_15.0, _22.1);
_5 = _11;
RET = _22.1 | _22.1;
_3 = (-77391909385875923264702620696058185771_i128) as isize;
RET = 76013570635875547824064037453865471890_u128 as isize;
match _22.0 {
0 => bb5,
1 => bb2,
2 => bb8,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
8044857686023594978 => bb15,
_ => bb14
}
}
bb10 = {
_15.1 = RET << _9;
_10 = [RET,_15.1,RET,_15.1];
_9 = 80643216307515772158153744669502423618_u128 as i8;
_13 = '\u{b7e3b}';
_4 = [(-82702116075397328522015193642511854583_i128)];
_8 = [4386489465343564918882901428845203852_i128];
_6 = [2443378204_u32,2749145667_u32,4118960580_u32,2963438015_u32,831917983_u32];
_9 = -81_i8;
_10 = [_3,RET,_3,_15.1];
_12 = [_15.1,_15.1,RET,_15.1];
_12 = [_3,_15.1,_15.1,_3];
_7.1 = _4;
_12 = [_15.1,_15.1,_15.1,_15.1];
_15.0 = !3_usize;
_7.1 = [(-111183243346992759008637914161233624107_i128)];
_14 = [118287654750226711312546366067330446410_i128,(-54532845809583875291121592901851236185_i128),(-159334045682773553119909266013480913430_i128)];
_13 = '\u{749d7}';
_8 = [102537479445583274340253746643858453904_i128];
_10 = [RET,_15.1,_15.1,_3];
_15.0 = 312977005_u32 as usize;
_8 = [(-151937150058091476247460106983170999276_i128)];
_1 = _10;
RET = _15.1;
_7 = (_8, _2);
_15.0 = 5470138605190191692_usize | 700948776504971232_usize;
_12 = [_15.1,_15.1,_3,_15.1];
_8 = [(-118090685519095656856295097139767523744_i128)];
_6 = _11;
Goto(bb2)
}
bb11 = {
_2 = _7.1;
_8 = [(-18564893524501366997588611137238886645_i128)];
_17 = _15.0;
_6 = [_16,_16,_16,_16,_16];
RET = !_3;
_21.fld0 = (-30650_i16) as u16;
_7.0 = [27400419916139135541321519756766406706_i128];
_12 = [_3,_15.1,_3,_3];
_21.fld3 = (_15.0, RET);
_2 = [(-60662894394779315933717022602040483103_i128)];
_1 = [_15.1,_15.1,_15.1,_21.fld3.1];
_20 = _18;
_11 = _5;
RET = 7690062061549554859_u64 as isize;
_21.fld1 = 192365058664143783290528276903897312286_u128 as i64;
_21.fld0 = !12612_u16;
_9 = 30_u8 as i8;
Goto(bb4)
}
bb12 = {
_14 = [(-136073217899963293563453321565436068407_i128),155643756715772985390362494514148798650_i128,94705096387279199107157247288665907951_i128];
_12 = [_15.1,RET,RET,_3];
_15.0 = !3671741660772979739_usize;
_12 = _10;
_2 = [11301411046366986533573403265732985591_i128];
_12 = [_15.1,_15.1,_3,RET];
_13 = '\u{7f086}';
_4 = [157161935240110187582813086891217199296_i128];
_17 = !_15.0;
_9 = 95_i8 ^ 43_i8;
_18 = true;
_10 = [_3,_15.1,_15.1,RET];
_16 = 1484770746_u32;
_7 = (_2, _8);
_16 = !3557247317_u32;
_15 = (_17, RET);
_19 = 26357_u16 as i64;
_6 = _11;
_2 = [(-137321530834564151943285455867966431721_i128)];
Goto(bb3)
}
bb13 = {
_2 = _7.1;
_8 = [(-18564893524501366997588611137238886645_i128)];
_17 = _15.0;
_6 = [_16,_16,_16,_16,_16];
RET = !_3;
_21.fld0 = (-30650_i16) as u16;
_7.0 = [27400419916139135541321519756766406706_i128];
_12 = [_3,_15.1,_3,_3];
_21.fld3 = (_15.0, RET);
_2 = [(-60662894394779315933717022602040483103_i128)];
_1 = [_15.1,_15.1,_15.1,_21.fld3.1];
_20 = _18;
_11 = _5;
RET = 7690062061549554859_u64 as isize;
_21.fld1 = 192365058664143783290528276903897312286_u128 as i64;
_21.fld0 = !12612_u16;
_9 = 30_u8 as i8;
Goto(bb4)
}
bb14 = {
_14 = [(-136073217899963293563453321565436068407_i128),155643756715772985390362494514148798650_i128,94705096387279199107157247288665907951_i128];
_12 = [_15.1,RET,RET,_3];
_15.0 = !3671741660772979739_usize;
_12 = _10;
_2 = [11301411046366986533573403265732985591_i128];
_12 = [_15.1,_15.1,_3,RET];
_13 = '\u{7f086}';
_4 = [157161935240110187582813086891217199296_i128];
_17 = !_15.0;
_9 = 95_i8 ^ 43_i8;
_18 = true;
_10 = [_3,_15.1,_15.1,RET];
_16 = 1484770746_u32;
_7 = (_2, _8);
_16 = !3557247317_u32;
_15 = (_17, RET);
_19 = 26357_u16 as i64;
_6 = _11;
_2 = [(-137321530834564151943285455867966431721_i128)];
Goto(bb3)
}
bb15 = {
_21.fld3.1 = -RET;
_23.0 = [(-112048129376593016035582859801922331413_i128)];
RET = !_21.fld3.1;
_21.fld0 = 19332_i16 as u16;
_11 = _6;
_7.0 = _23.1;
_15.1 = -_22.1;
_10 = [_3,_21.fld3.1,_15.1,_21.fld3.1];
_21.fld2 = core::ptr::addr_of_mut!(_24);
_23.1 = _8;
_22.2 = _7.0;
Goto(bb16)
}
bb16 = {
Call(_30 = dump_var(18_usize, 11_usize, Move(_11), 4_usize, Move(_4), 8_usize, Move(_8), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(18_usize, 9_usize, Move(_9), 12_usize, Move(_12), 6_usize, Move(_6), 22_usize, Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(18_usize, 16_usize, Move(_16), 7_usize, Move(_7), 15_usize, Move(_15), 31_usize, _31), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: i8,mut _2: [isize; 4],mut _3: [isize; 4],mut _4: ([i128; 3],),mut _5: isize,mut _6: i32,mut _7: isize,mut _8: isize,mut _9: char,mut _10: char,mut _11: u32) -> [i64; 1] {
mir! {
type RET = [i64; 1];
let _12: ([i128; 1], [i128; 1]);
let _13: f32;
let _14: Adt44;
let _15: bool;
let _16: Adt50;
let _17: i64;
let _18: ([i64; 1], ([i128; 3],));
let _19: f32;
let _20: ([i64; 1], ([i128; 3],));
let _21: ([i128; 3],);
let _22: Adt46;
let _23: char;
let _24: char;
let _25: Adt47;
let _26: ([i64; 1], ([i128; 3],));
let _27: ([i64; 1], ([i128; 3],));
let _28: i64;
let _29: i8;
let _30: ();
let _31: ();
{
_6 = (-413008539_i32) >> _7;
RET = [4786113597841016740_i64];
_2 = [_7,_5,_7,_8];
_7 = !_8;
RET = [(-1983109000828612132_i64)];
_4.0 = [(-114093312541125290334346080277463637052_i128),77481456529017205442435815467331184270_i128,(-84340501117345945911085418505536563457_i128)];
_8 = _7;
_9 = _10;
_11 = !455237248_u32;
_7 = _8;
Goto(bb1)
}
bb1 = {
_12.0 = [137565325236331154076453780456787306944_i128];
_2 = [_5,_8,_5,_5];
_5 = _8 >> _7;
_14.fld1 = (-4031310674563297575_i64) & 6803256324449272418_i64;
_14.fld3.1 = _5;
_14.fld3 = (1_usize, _8);
_14.fld0 = 31843_u16 << _14.fld3.0;
_14.fld1 = -(-597470813950126361_i64);
_14.fld2 = core::ptr::addr_of_mut!(_13);
_14.fld2 = core::ptr::addr_of_mut!(_13);
match _14.fld3.0 {
0 => bb2,
2 => bb4,
3 => bb5,
1 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_4.0 = [(-59066591014474713410326197497182262728_i128),362951785839279833343592732933965602_i128,148545302567638702383407359277819430672_i128];
_12.1 = [(-136055788179275648260355674581969501376_i128)];
_14.fld1 = (-557452687958147277_i64) + 506584281545027331_i64;
RET = [_14.fld1];
_13 = _5 as f32;
_9 = _10;
_8 = 204_u8 as isize;
_1 = 58_i8;
_4.0 = [145871475640053333531194888403824104731_i128,(-3118577585923445609075681443243689855_i128),87126492005495347453915848678507490792_i128];
_14.fld0 = 55621_u16;
_11 = 20620352078926558237601414445647048542_i128 as u32;
_13 = _14.fld0 as f32;
_14.fld0 = !51058_u16;
_14.fld3.0 = 3_usize ^ 9920938328141268484_usize;
_8 = _5 << _11;
_14.fld3.0 = 9705817682342081191_usize ^ 0_usize;
Goto(bb8)
}
bb8 = {
_10 = _9;
_14.fld2 = core::ptr::addr_of_mut!(_19);
_18.1.0 = [(-136242354657770252249621753543112280408_i128),38152124106982372337247385124556491982_i128,(-126416908021491492077733751273441760494_i128)];
_4.0 = [105854424356093379392187714463102177468_i128,(-21341205519421944116614890384922254137_i128),(-71401167164205940915091103287227410829_i128)];
_2 = _3;
_17 = _8 as i64;
_20.0 = [_17];
_6 = !1810042168_i32;
_14.fld2 = core::ptr::addr_of_mut!(_13);
_14.fld3.0 = 2649406375721947882_usize & 9741093658396640746_usize;
RET = [_17];
_12.1 = _12.0;
_17 = _14.fld1 << _14.fld3.0;
_20.1 = (_18.1.0,);
_16 = Adt50::Variant0 { fld0: 107_u8 };
_5 = _8;
_9 = _10;
_14.fld2 = core::ptr::addr_of_mut!(_13);
_20.0 = [_17];
match _1 {
0 => bb4,
58 => bb9,
_ => bb5
}
}
bb9 = {
_10 = _9;
_19 = _13 + _13;
_14.fld3.0 = 2_usize << _7;
_12.1 = _12.0;
_4.0 = _20.1.0;
RET = [_17];
_20.1.0 = [169252048328326846210231055095301601356_i128,53425045681711957090739471756876319374_i128,93247471672412304959327536289576274680_i128];
_21 = (_20.1.0,);
_9 = _10;
_14.fld1 = _14.fld3.1 as i64;
_14.fld2 = core::ptr::addr_of_mut!(_13);
_21 = _20.1;
place!(Field::<u8>(Variant(_16, 0), 0)) = _14.fld3.1 as u8;
_20.0 = RET;
_18.0 = [_14.fld1];
_20.0 = _18.0;
_18 = _20;
_9 = _10;
_5 = _14.fld3.1;
place!(Field::<u8>(Variant(_16, 0), 0)) = _6 as u8;
_7 = _5;
_7 = 133242385284807883177035625948198301658_u128 as isize;
_18.1.0 = _20.1.0;
_15 = !false;
RET = [_17];
_25.fld1 = Adt37::Variant2 { fld0: Field::<u8>(Variant(_16, 0), 0),fld1: _12.1,fld2: _6 };
_24 = _9;
match _1 {
0 => bb10,
58 => bb12,
_ => bb11
}
}
bb10 = {
_10 = _9;
_14.fld2 = core::ptr::addr_of_mut!(_19);
_18.1.0 = [(-136242354657770252249621753543112280408_i128),38152124106982372337247385124556491982_i128,(-126416908021491492077733751273441760494_i128)];
_4.0 = [105854424356093379392187714463102177468_i128,(-21341205519421944116614890384922254137_i128),(-71401167164205940915091103287227410829_i128)];
_2 = _3;
_17 = _8 as i64;
_20.0 = [_17];
_6 = !1810042168_i32;
_14.fld2 = core::ptr::addr_of_mut!(_13);
_14.fld3.0 = 2649406375721947882_usize & 9741093658396640746_usize;
RET = [_17];
_12.1 = _12.0;
_17 = _14.fld1 << _14.fld3.0;
_20.1 = (_18.1.0,);
_16 = Adt50::Variant0 { fld0: 107_u8 };
_5 = _8;
_9 = _10;
_14.fld2 = core::ptr::addr_of_mut!(_13);
_20.0 = [_17];
match _1 {
0 => bb4,
58 => bb9,
_ => bb5
}
}
bb11 = {
Return()
}
bb12 = {
_25.fld6.fld1 = _14.fld2;
_8 = !_14.fld3.1;
_25.fld6 = Adt39 { fld0: _20.1.0,fld1: _14.fld2 };
_25.fld6.fld1 = _14.fld2;
_13 = -_19;
_27 = (_18.0, _18.1);
_25.fld2 = (9988245756990970079_u64, _8, Field::<[i128; 1]>(Variant(_25.fld1, 2), 1));
_26.0 = _18.0;
_18.1 = (_4.0,);
_28 = -_17;
_14.fld3 = (2132161753529661063_usize, _25.fld2.1);
_20 = _27;
_22 = Adt46::Variant0 { fld0: _12,fld1: Move(_25.fld1) };
_14.fld3.1 = _25.fld2.1;
_14.fld3 = (4_usize, _25.fld2.1);
place!(Field::<([i128; 1], [i128; 1])>(Variant(_22, 0), 0)).0 = [(-55769627167514719160223810258525568413_i128)];
_25.fld2.2 = Field::<[i128; 1]>(Variant(Field::<Adt37>(Variant(_22, 0), 1), 2), 1);
_23 = _10;
_25.fld2.0 = 15789618642592100848_u64 | 1501104715498533181_u64;
_29 = _1;
_27 = (RET, _21);
match _14.fld3.0 {
0 => bb13,
1 => bb14,
2 => bb15,
4 => bb17,
_ => bb16
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_10 = _9;
_19 = _13 + _13;
_14.fld3.0 = 2_usize << _7;
_12.1 = _12.0;
_4.0 = _20.1.0;
RET = [_17];
_20.1.0 = [169252048328326846210231055095301601356_i128,53425045681711957090739471756876319374_i128,93247471672412304959327536289576274680_i128];
_21 = (_20.1.0,);
_9 = _10;
_14.fld1 = _14.fld3.1 as i64;
_14.fld2 = core::ptr::addr_of_mut!(_13);
_21 = _20.1;
place!(Field::<u8>(Variant(_16, 0), 0)) = _14.fld3.1 as u8;
_20.0 = RET;
_18.0 = [_14.fld1];
_20.0 = _18.0;
_18 = _20;
_9 = _10;
_5 = _14.fld3.1;
place!(Field::<u8>(Variant(_16, 0), 0)) = _6 as u8;
_7 = _5;
_7 = 133242385284807883177035625948198301658_u128 as isize;
_18.1.0 = _20.1.0;
_15 = !false;
RET = [_17];
_25.fld1 = Adt37::Variant2 { fld0: Field::<u8>(Variant(_16, 0), 0),fld1: _12.1,fld2: _6 };
_24 = _9;
match _1 {
0 => bb10,
58 => bb12,
_ => bb11
}
}
bb16 = {
_12.0 = [137565325236331154076453780456787306944_i128];
_2 = [_5,_8,_5,_5];
_5 = _8 >> _7;
_14.fld1 = (-4031310674563297575_i64) & 6803256324449272418_i64;
_14.fld3.1 = _5;
_14.fld3 = (1_usize, _8);
_14.fld0 = 31843_u16 << _14.fld3.0;
_14.fld1 = -(-597470813950126361_i64);
_14.fld2 = core::ptr::addr_of_mut!(_13);
_14.fld2 = core::ptr::addr_of_mut!(_13);
match _14.fld3.0 {
0 => bb2,
2 => bb4,
3 => bb5,
1 => bb7,
_ => bb6
}
}
bb17 = {
_23 = _10;
place!(Field::<u8>(Variant(place!(Field::<Adt37>(Variant(_22, 0), 1)), 2), 0)) = Field::<u8>(Variant(_16, 0), 0);
_25.fld6.fld1 = _14.fld2;
_18.1.0 = [(-59768644283026434968133096824262661714_i128),123697362294345977705898074499168454832_i128,(-14733691709610245752631190655887319654_i128)];
Goto(bb18)
}
bb18 = {
Call(_30 = dump_var(19_usize, 29_usize, Move(_29), 12_usize, Move(_12), 2_usize, Move(_2), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_30 = dump_var(19_usize, 1_usize, Move(_1), 24_usize, Move(_24), 21_usize, Move(_21), 27_usize, Move(_27)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_30 = dump_var(19_usize, 3_usize, Move(_3), 6_usize, Move(_6), 23_usize, Move(_23), 31_usize, _31), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(20757_u16), std::hint::black_box('\u{5e390}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box((-112_i8)), std::hint::black_box(113721984_u32), std::hint::black_box(152525586620356841598898740089957051633_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt36 {
Variant0{
fld0: bool,
fld1: *const i16,
fld2: *const u32,
fld3: u64,
fld4: (u64, isize, [i128; 1]),
fld5: (isize, [i64; 1]),

},
Variant1{
fld0: u8,
fld1: *const f32,
fld2: isize,
fld3: i8,
fld4: (usize, isize),

}}
#[derive(Debug)]
pub enum Adt37 {
Variant0{
fld0: ([i128; 1], [i128; 1]),
fld1: u8,
fld2: u64,

},
Variant1{
fld0: [i128; 3],
fld1: (u64, isize, [i128; 1]),
fld2: *const u128,

},
Variant2{
fld0: u8,
fld1: [i128; 1],
fld2: i32,

}}
#[derive(Debug)]
pub enum Adt38 {
Variant0{
fld0: u8,
fld1: [i128; 1],
fld2: ([i128; 3],),
fld3: i64,
fld4: i16,

},
Variant1{
fld0: u128,
fld1: [isize; 4],
fld2: *mut *const u32,
fld3: [u32; 5],
fld4: *mut f32,
fld5: *const [i128; 1],
fld6: i64,

},
Variant2{
fld0: *mut f32,
fld1: *const u128,
fld2: *const i16,
fld3: [isize; 4],
fld4: u16,
fld5: (isize, [i64; 1]),

}}
#[derive(Debug)]
pub struct Adt39 {
fld0: [i128; 3],
fld1: *mut f32,
}
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: u16,
fld1: (usize, isize),
fld2: [i64; 1],
fld3: Adt38,
fld4: Adt36,

},
Variant1{
fld0: [isize; 4],
fld1: *const u32,
fld2: [i128; 3],

},
Variant2{
fld0: bool,
fld1: [i128; 3],
fld2: [u32; 5],
fld3: u128,
fld4: u32,
fld5: ([i128; 1], [i128; 1]),
fld6: f64,

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: Adt38,
fld1: [i128; 1],
fld2: u16,
fld3: i8,
fld4: i16,
fld5: ([i128; 1], [i128; 1]),
fld6: i64,

},
Variant1{
fld0: u32,
fld1: [i128; 1],
fld2: Adt39,

},
Variant2{
fld0: (u64, isize, [i128; 1]),
fld1: *const i16,
fld2: *const f32,
fld3: (usize, isize),
fld4: Adt36,

},
Variant3{
fld0: i128,
fld1: char,
fld2: u8,
fld3: u64,
fld4: (usize, isize),
fld5: i32,
fld6: (u64, isize, [i128; 1]),

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: Adt37,
fld1: *mut *const u32,
fld2: *const u128,
fld3: i128,

},
Variant1{
fld0: bool,
fld1: Adt38,
fld2: *mut f32,
fld3: i8,
fld4: [i128; 1],
fld5: *const u128,
fld6: i64,
fld7: usize,

},
Variant2{
fld0: *mut *const u32,
fld1: Adt38,

},
Variant3{
fld0: [isize; 4],
fld1: Adt36,
fld2: f32,
fld3: ([i128; 3],),
fld4: *const i16,
fld5: u64,
fld6: Adt37,

}}
#[derive(Debug)]
pub struct Adt43 {
fld0: bool,
fld1: (usize, isize),
fld2: [i128; 3],
fld3: usize,
fld4: u32,
fld5: Adt39,
fld6: *const u32,
}
#[derive(Debug)]
pub struct Adt44 {
fld0: u16,
fld1: i64,
fld2: *mut f32,
fld3: (usize, isize),
fld4: Adt40,
}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: *const i16,
fld1: char,
fld2: isize,
fld3: (u64, isize, [i128; 1]),
fld4: Adt36,
fld5: u128,
fld6: i64,
fld7: Adt38,

},
Variant1{
fld0: *const [i128; 1],
fld1: (u64, isize, [i128; 1]),
fld2: (isize, [i64; 1]),
fld3: Adt40,
fld4: Adt36,
fld5: u128,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: ([i128; 1], [i128; 1]),
fld1: Adt37,

},
Variant1{
fld0: bool,
fld1: Adt37,
fld2: u128,
fld3: u8,
fld4: *const i16,

},
Variant2{
fld0: (usize, isize),
fld1: u8,
fld2: *const u128,
fld3: *mut *const u32,
fld4: i16,

}}
#[derive(Debug)]
pub struct Adt47 {
fld0: bool,
fld1: Adt37,
fld2: (u64, isize, [i128; 1]),
fld3: f32,
fld4: u8,
fld5: *const f32,
fld6: Adt39,
}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: f32,
fld1: ([i64; 1], ([i128; 3],)),
fld2: Adt46,

},
Variant1{
fld0: Adt44,
fld1: Adt39,
fld2: *const u128,
fld3: [i128; 3],
fld4: u16,

},
Variant2{
fld0: u32,
fld1: *const u32,
fld2: Adt39,
fld3: ([i128; 1], [i128; 1]),

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: bool,
fld1: char,
fld2: u32,
fld3: Adt42,
fld4: i16,
fld5: Adt46,
fld6: Adt38,
fld7: u128,

},
Variant1{
fld0: Adt47,
fld1: Adt43,
fld2: isize,
fld3: ([i128; 3],),
fld4: [u32; 5],

},
Variant2{
fld0: [isize; 4],
fld1: char,
fld2: Adt45,
fld3: i8,
fld4: (isize, [i64; 1]),
fld5: u32,
fld6: Adt37,
fld7: [i64; 1],

},
Variant3{
fld0: ([i128; 1], [i128; 1]),
fld1: Adt47,
fld2: [u32; 5],
fld3: Adt36,
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: u8,

},
Variant1{
fld0: Adt46,

},
Variant2{
fld0: Adt48,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt47,
fld1: Adt41,
fld2: *mut f32,
fld3: Adt42,
fld4: f32,
fld5: f64,

},
Variant1{
fld0: ([i128; 3],),
fld1: Adt40,
fld2: Adt46,
fld3: [u32; 5],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt45,
fld1: i64,
fld2: f64,
fld3: [i128; 3],

},
Variant1{
fld0: u8,
fld1: [u32; 5],
fld2: Adt48,
fld3: *const u128,
fld4: ([i128; 3],),
fld5: *const f32,
fld6: Adt39,
fld7: usize,

},
Variant2{
fld0: Adt47,
fld1: ([i128; 3],),

}}

