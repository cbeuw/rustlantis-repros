#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u64,mut _3: isize,mut _4: i8,mut _5: u8) -> ((f64, u16), u32, i32, (i16,)) {
mir! {
type RET = ((f64, u16), u32, i32, (i16,));
let _6: i32;
let _7: isize;
let _8: (f64, u16);
let _9: f64;
let _10: i128;
let _11: f64;
let _12: u32;
let _13: ([i64; 8], [usize; 4]);
let _14: bool;
let _15: ((f64, u16), u32, i32, (i16,));
let _16: [char; 6];
let _17: [i64; 8];
let _18: [i16; 1];
let _19: [isize; 7];
let _20: Adt65;
let _21: u32;
let _22: Adt59;
let _23: f64;
let _24: [i16; 7];
let _25: isize;
let _26: [char; 6];
let _27: Adt63;
let _28: [char; 6];
let _29: isize;
let _30: isize;
let _31: Adt54;
let _32: [u128; 3];
let _33: ();
let _34: ();
{
_3 = 121_isize;
RET.1 = 1246152198_u32;
_4 = 1192177638_i32 as i8;
_5 = 121_u8 + 66_u8;
Call(RET.0 = fn1(_4, _3, _3, _3, _4, _3, _3, _3, _3, _3, _5, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.3.0 = -(-8072_i16);
_5 = 167_u8;
_2 = 1820930481636581396_u64;
_7 = 3546561757_u32 as isize;
RET.2 = (-883354003_i32) >> _2;
RET.2 = 1036002966_i32 >> _2;
Goto(bb2)
}
bb2 = {
RET.0.1 = !52803_u16;
RET.0.1 = 47930_u16 | 19146_u16;
_1 = _7 < _3;
RET.1 = !2195058736_u32;
_8.0 = 50240_u16 as f64;
RET.0.0 = _8.0;
RET.3.0 = 24117_i16 >> _4;
RET.0.1 = 37459_u16 & 62124_u16;
_4 = _2 as i8;
_8.0 = 9671041899110935572136476957521835775_u128 as f64;
RET.0 = (_8.0, 23141_u16);
RET.3.0 = 2388048414_u32 as i16;
Goto(bb3)
}
bb3 = {
_9 = -_8.0;
RET.0 = (_9, 59811_u16);
RET.3.0 = 13588_i16;
RET.0.1 = !44290_u16;
Goto(bb4)
}
bb4 = {
_10 = _4 as i128;
RET.0.1 = _3 as u16;
RET.0.1 = 62718_u16;
RET.1 = _1 as u32;
_6 = !119620251_i32;
RET.3.0 = -7268_i16;
RET.1 = 686630007_u32 >> _2;
_8 = (_9, 49033_u16);
RET.1 = _8.0 as u32;
_5 = 114_u8 | 35_u8;
_11 = _9 + _9;
_13.1 = [2_usize,10170121373793334557_usize,2_usize,5_usize];
RET.3 = ((-6677_i16),);
_13.0 = [(-2282752781736852823_i64),(-7013448821677870644_i64),(-1669433856603932910_i64),711023008483491570_i64,4430529973560712128_i64,(-7927970327168391778_i64),(-1771746632554989621_i64),(-2217663821879030729_i64)];
_11 = -_8.0;
RET.3 = ((-16305_i16),);
RET.0.1 = _4 as u16;
RET.0.0 = _8.0;
RET.3 = ((-20702_i16),);
RET.0 = (_8.0, _8.1);
_11 = -_8.0;
_4 = (-85_i8) - 85_i8;
_15.0.0 = _8.0 * _9;
Goto(bb5)
}
bb5 = {
_8.0 = _15.0.0;
_15.2 = 854642594_u32 as i32;
match _2 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb6,
1820930481636581396 => bb8,
_ => bb7
}
}
bb6 = {
RET.3.0 = -(-8072_i16);
_5 = 167_u8;
_2 = 1820930481636581396_u64;
_7 = 3546561757_u32 as isize;
RET.2 = (-883354003_i32) >> _2;
RET.2 = 1036002966_i32 >> _2;
Goto(bb2)
}
bb7 = {
_9 = -_8.0;
RET.0 = (_9, 59811_u16);
RET.3.0 = 13588_i16;
RET.0.1 = !44290_u16;
Goto(bb4)
}
bb8 = {
_13.1 = [9327559615694022370_usize,2_usize,13058894124541291677_usize,3_usize];
RET.0.1 = _4 as u16;
RET.2 = _15.2;
Goto(bb9)
}
bb9 = {
_1 = false ^ false;
RET.3 = ((-13375_i16),);
_6 = _15.2 + _15.2;
_15.1 = !3742752987_u32;
RET.0 = _8;
_15.3 = (18281_i16,);
_3 = _7;
_4 = 117_i8;
_10 = -71440279537167377791695048294624654052_i128;
_3 = !_7;
_16 = ['\u{a4eda}','\u{e2202}','\u{995b}','\u{ea294}','\u{be0cd}','\u{7bbcc}'];
_6 = _15.2 << _8.1;
_14 = _1;
_13.0 = [2009019255911278784_i64,8244516266221516128_i64,7171077010637179882_i64,(-8796157224478502910_i64),5165545409512483356_i64,(-4929018219676463883_i64),4200346052142247111_i64,(-7693205097509311346_i64)];
_15.3.0 = 20387_i16;
match _8.1 {
0 => bb10,
49033 => bb12,
_ => bb11
}
}
bb10 = {
RET.3.0 = -(-8072_i16);
_5 = 167_u8;
_2 = 1820930481636581396_u64;
_7 = 3546561757_u32 as isize;
RET.2 = (-883354003_i32) >> _2;
RET.2 = 1036002966_i32 >> _2;
Goto(bb2)
}
bb11 = {
_8.0 = _15.0.0;
_15.2 = 854642594_u32 as i32;
match _2 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb6,
1820930481636581396 => bb8,
_ => bb7
}
}
bb12 = {
_7 = -_3;
_15.0.0 = _15.2 as f64;
_16 = ['\u{932fa}','\u{30760}','\u{10830}','\u{e45b6}','\u{919d7}','\u{c3109}'];
RET.0.0 = -_15.0.0;
RET.3 = (_15.3.0,);
_8.1 = !51043_u16;
_5 = _7 as u8;
Call(_15.2 = core::intrinsics::bswap(_6), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_22.fld0.fld2.1 = _8.1 >> _7;
_22.fld0.fld1.1 = [_6,_6,_6,_15.2,_6,_6];
RET.3 = (_15.3.0,);
RET = (_8, _15.1, _15.2, _15.3);
RET.0.1 = _22.fld0.fld2.1 & _8.1;
Goto(bb14)
}
bb14 = {
_8.1 = _22.fld0.fld2.1 ^ _22.fld0.fld2.1;
_26 = _16;
_21 = 279896306780573524215688525678077747069_u128 as u32;
_22.fld6 = _5;
_25 = _7 - _3;
_22.fld7 = _10;
RET.2 = '\u{defd0}' as i32;
_22.fld5 = _15.2 & _6;
_27.fld0 = [_15.3.0,_15.3.0,_15.3.0,_15.3.0,_15.3.0,_15.3.0,_15.3.0];
_15.1 = !_21;
_22.fld0.fld0.fld0 = 28524000434190257737057431654560504228_u128;
_11 = -_8.0;
_15.3 = ((-26714_i16),);
_2 = 15994301134111328099_u64;
_19 = [_25,_25,_7,_25,_3,_25,_25];
_18 = [_15.3.0];
RET.1 = _15.1 | _21;
_31.fld0 = [_15.3.0];
_31.fld2.fld0 = [7468951576076476506_i64,(-5769919224521444260_i64)];
_31.fld2.fld1 = _22.fld0.fld1.1;
_22.fld4 = core::ptr::addr_of!(_20.fld0);
_22.fld5 = _15.2;
_15.0.1 = 1965982153614846605_i64 as u16;
_15.0.0 = -_11;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(0_usize, 7_usize, Move(_7), 2_usize, Move(_2), 5_usize, Move(_5), 26_usize, Move(_26)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(0_usize, 1_usize, Move(_1), 6_usize, Move(_6), 19_usize, Move(_19), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i8,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: i8,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: u8,mut _12: isize) -> (f64, u16) {
mir! {
type RET = (f64, u16);
let _13: f32;
let _14: i8;
let _15: bool;
let _16: [u16; 6];
let _17: *const f64;
let _18: u16;
let _19: ();
let _20: ();
{
RET.1 = 51289_u16;
_4 = _8;
_8 = 877979789_u32 as isize;
_2 = _6 | _3;
RET.1 = 34173_u16;
_13 = (-1615635829_i32) as f32;
_7 = 10036_i16 as isize;
_13 = _5 as f32;
_2 = _4 & _4;
_1 = !_5;
RET.0 = (-1389687910_i32) as f64;
_4 = 167080666314461889769545505907644456398_u128 as isize;
Goto(bb1)
}
bb1 = {
_14 = _5 << _12;
_1 = _11 as i8;
RET.1 = 5327_u16 % 61904_u16;
_8 = -_4;
_12 = -_7;
_11 = 6823_u16 as u8;
RET.1 = '\u{c1a9a}' as u16;
_11 = (-1836790869_i32) as u8;
_13 = _11 as f32;
_12 = -_6;
RET.1 = 26380_u16;
Call(_10 = fn2(_12, _12, _3, _3, _5, _9, _6, _1, _9, _12, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = _2 - _6;
_3 = _11 as isize;
_15 = _8 != _12;
_5 = _1;
_1 = -_14;
_5 = _14 ^ _1;
_8 = 6949426562610575859_u64 as isize;
_9 = _10;
RET.0 = (-152233189356073628318133708202867096472_i128) as f64;
_14 = !_5;
_11 = 55_u8;
_5 = 140596096226143122136446718058919258016_i128 as i8;
_16 = [40078_u16,28785_u16,51702_u16,11802_u16,13998_u16,34136_u16];
RET.0 = 4735651060138011024_i64 as f64;
_4 = _7;
_7 = -_10;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
55 => bb7,
_ => bb6
}
}
bb3 = {
_14 = _5 << _12;
_1 = _11 as i8;
RET.1 = 5327_u16 % 61904_u16;
_8 = -_4;
_12 = -_7;
_11 = 6823_u16 as u8;
RET.1 = '\u{c1a9a}' as u16;
_11 = (-1836790869_i32) as u8;
_13 = _11 as f32;
_12 = -_6;
RET.1 = 26380_u16;
Call(_10 = fn2(_12, _12, _3, _3, _5, _9, _6, _1, _9, _12, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_10 = _12;
_10 = _8;
_13 = 334400855042948736884745382106786187103_u128 as f32;
_7 = _9;
_4 = _8;
_13 = _11 as f32;
Call(RET.1 = core::intrinsics::bswap(35569_u16), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_2 = _9 * _9;
_11 = 129_u8;
_13 = 5100051138176311819_u64 as f32;
_16 = [60435_u16,6219_u16,49846_u16,3478_u16,14062_u16,14595_u16];
_11 = _13 as u8;
_4 = _9;
RET.1 = !7455_u16;
match _6 {
0 => bb3,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
121 => bb16,
_ => bb15
}
}
bb9 = {
_10 = _12;
_10 = _8;
_13 = 334400855042948736884745382106786187103_u128 as f32;
_7 = _9;
_4 = _8;
_13 = _11 as f32;
Call(RET.1 = core::intrinsics::bswap(35569_u16), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_14 = _5 << _12;
_1 = _11 as i8;
RET.1 = 5327_u16 % 61904_u16;
_8 = -_4;
_12 = -_7;
_11 = 6823_u16 as u8;
RET.1 = '\u{c1a9a}' as u16;
_11 = (-1836790869_i32) as u8;
_13 = _11 as f32;
_12 = -_6;
RET.1 = 26380_u16;
Call(_10 = fn2(_12, _12, _3, _3, _5, _9, _6, _1, _9, _12, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_4 = _2 - _6;
_3 = _11 as isize;
_15 = _8 != _12;
_5 = _1;
_1 = -_14;
_5 = _14 ^ _1;
_8 = 6949426562610575859_u64 as isize;
_9 = _10;
RET.0 = (-152233189356073628318133708202867096472_i128) as f64;
_14 = !_5;
_11 = 55_u8;
_5 = 140596096226143122136446718058919258016_i128 as i8;
_16 = [40078_u16,28785_u16,51702_u16,11802_u16,13998_u16,34136_u16];
RET.0 = 4735651060138011024_i64 as f64;
_4 = _7;
_7 = -_10;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
55 => bb7,
_ => bb6
}
}
bb15 = {
_14 = _5 << _12;
_1 = _11 as i8;
RET.1 = 5327_u16 % 61904_u16;
_8 = -_4;
_12 = -_7;
_11 = 6823_u16 as u8;
RET.1 = '\u{c1a9a}' as u16;
_11 = (-1836790869_i32) as u8;
_13 = _11 as f32;
_12 = -_6;
RET.1 = 26380_u16;
Call(_10 = fn2(_12, _12, _3, _3, _5, _9, _6, _1, _9, _12, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_5 = _1;
_3 = !_2;
_8 = 6460569376206402330_u64 as isize;
_15 = !false;
_7 = _3;
_2 = 6343644135003111273_u64 as isize;
_15 = _14 == _5;
Goto(bb17)
}
bb17 = {
Call(_19 = dump_var(1_usize, 16_usize, Move(_16), 6_usize, Move(_6), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_19 = dump_var(1_usize, 11_usize, Move(_11), 14_usize, Move(_14), 8_usize, Move(_8), 20_usize, _20), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: i8,mut _6: isize,mut _7: isize,mut _8: i8,mut _9: isize,mut _10: isize,mut _11: isize) -> isize {
mir! {
type RET = isize;
let _12: u8;
let _13: Adt55;
let _14: u64;
let _15: bool;
let _16: usize;
let _17: usize;
let _18: [i64; 8];
let _19: *const *const f64;
let _20: ();
let _21: ();
{
_10 = 9143_i16 as isize;
_5 = _8;
_7 = _6;
_4 = _11 - _6;
_4 = _2 & _7;
_9 = _10 * _11;
_13.fld1.fld4 = [(-3395330907739968836_i64),(-4427724201429932893_i64),119681271616081859_i64];
RET = -_2;
_13.fld1.fld1.fld0.2 = 1526100196_i32 & 390936566_i32;
_7 = _10;
_13.fld1.fld1.fld0.3.0 = 52198_u16 as i16;
_13.fld1.fld1.fld0.0.0 = _13.fld1.fld1.fld0.3.0 as f64;
_1 = _11 | _7;
_13.fld3 = !53443_u16;
_13.fld2.0 = core::ptr::addr_of!(_13.fld1.fld2.2);
_13.fld1.fld5 = core::ptr::addr_of_mut!(_13.fld1.fld0);
_13.fld1.fld1.fld0.0.1 = 408700553_u32 as u16;
_13.fld1.fld4 = [(-2976309260971483147_i64),928687871012109369_i64,4050515027644733464_i64];
_13.fld1.fld1.fld0.3.0 = !15616_i16;
_13.fld1.fld5 = core::ptr::addr_of_mut!(_13.fld1.fld0);
_13.fld0 = [4336853573424797322_i64,(-243295604029175123_i64),5293824652235139779_i64,(-2734690741645106014_i64),(-2810354843916962062_i64),1792517046956759728_i64,5252890102192936150_i64,(-6352610557104897231_i64)];
_4 = !_2;
_13.fld1.fld1.fld1 = [_1,_4,_4,_9,_1,_1,_1];
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
121 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_11 = _1 ^ _10;
_13.fld2.0 = core::ptr::addr_of!(_14);
_13.fld1.fld0 = [_13.fld1.fld1.fld0.3.0];
_13.fld2.0 = core::ptr::addr_of!(_14);
_12 = 25_u8 >> _11;
_7 = -_4;
_15 = false;
_13.fld3 = 5777654869335767937_i64 as u16;
_14 = _13.fld1.fld1.fld0.0.0 as u64;
_9 = 3986778625_u32 as isize;
_16 = 10482879448971935468_usize;
_13.fld1.fld5 = core::ptr::addr_of_mut!(_13.fld1.fld0);
_13.fld4 = ['\u{59180}','\u{77ed1}','\u{aafdc}','\u{865d}','\u{f23dc}','\u{a7dad}'];
Goto(bb9)
}
bb9 = {
_13.fld1.fld1.fld0.1 = 3416006736_u32 << _13.fld1.fld1.fld0.2;
_13.fld1.fld1.fld1 = [_1,_9,_6,_11,_1,_4,_11];
_13.fld1.fld1.fld0.0.0 = 8178938486086564439_i64 as f64;
_10 = _8 as isize;
_13.fld1.fld1.fld0.0.0 = _12 as f64;
_6 = !_11;
RET = !_6;
_13.fld1.fld4 = [(-6804573389738443896_i64),8933868040326587016_i64,(-8816623332685742535_i64)];
_13.fld1.fld0 = [_13.fld1.fld1.fld0.3.0];
_13.fld1.fld1.fld0.1 = 3451453971_u32;
_13.fld0 = [(-7754944080378948794_i64),(-1373670278316110201_i64),7541980297597651948_i64,8196404366399878527_i64,1540409148097346723_i64,(-8973611571407063449_i64),2201171379828101360_i64,7317415058641224628_i64];
match _3 {
0 => bb5,
1 => bb6,
2 => bb10,
3 => bb11,
121 => bb13,
_ => bb12
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_5 = _8 | _8;
_15 = false;
_13.fld1.fld2.1 = -(-2464700775126274810_i64);
Call(_17 = fn3(_13.fld4, _13.fld1.fld4, _11, _6, _4, _3, _9, _13.fld1.fld5, _10, _13.fld1.fld1.fld0.3, _13.fld1.fld2.1, _13.fld2.0, _15, _3, _3, _7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_10 = _15 as isize;
_13.fld1.fld2.0 = 230248444907695356946928138897715487165_u128 as f32;
_13.fld1.fld1.fld0.2 = 356226175_i32 + (-252852271_i32);
RET = _1;
_13.fld1.fld6 = ['\u{e91da}','\u{a528d}','\u{420c8}','\u{ec20d}','\u{7c458}','\u{4db65}'];
_13.fld3 = _13.fld1.fld1.fld0.0.1 - _13.fld1.fld1.fld0.0.1;
_13.fld4 = ['\u{61a93}','\u{79700}','\u{82a3a}','\u{6a47a}','\u{77aac}','\u{7be81}'];
_15 = _14 > _14;
_1 = -_6;
_13.fld1.fld1.fld0.0.1 = !_13.fld3;
_16 = !_17;
_9 = _11;
_13.fld1.fld1.fld0.3.0 = 26827_i16 << _3;
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(2_usize, 9_usize, Move(_9), 17_usize, Move(_17), 5_usize, Move(_5), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(2_usize, 7_usize, Move(_7), 14_usize, Move(_14), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [char; 6],mut _2: [i64; 3],mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: *mut [i16; 1],mut _9: isize,mut _10: (i16,),mut _11: i64,mut _12: *const u64,mut _13: bool,mut _14: isize,mut _15: isize,mut _16: isize) -> usize {
mir! {
type RET = usize;
let _17: [i64; 3];
let _18: [u16; 6];
let _19: Adt57;
let _20: u16;
let _21: Adt63;
let _22: (isize, [i32; 6]);
let _23: Adt60;
let _24: u64;
let _25: f32;
let _26: i64;
let _27: (*const u64,);
let _28: isize;
let _29: [char; 6];
let _30: (f64, u16);
let _31: [bool; 3];
let _32: f64;
let _33: Adt57;
let _34: [usize; 4];
let _35: usize;
let _36: i32;
let _37: Adt53;
let _38: [i64; 2];
let _39: isize;
let _40: [i32; 6];
let _41: [i64; 2];
let _42: ();
let _43: ();
{
_7 = 213_u8 as isize;
_10.0 = !(-28929_i16);
_10.0 = 1833_i16;
_10 = (12185_i16,);
_3 = _10.0 as isize;
_10.0 = 6870_i16;
(*_8) = [_10.0];
_11 = _13 as i64;
(*_8) = [_10.0];
_9 = _3 * _14;
_2 = [_11,_11,_11];
_14 = _5;
_10.0 = (-1627780287_i32) as i16;
RET = (-2_i8) as usize;
_18 = [8776_u16,41054_u16,53986_u16,9144_u16,64502_u16,38006_u16];
_7 = _9 - _9;
_6 = _7 - _4;
_19.fld2.1 = 38889_u16 | 35050_u16;
_19.fld2.0 = 155946602665912407489924029681242191444_u128 as f64;
_9 = _7;
_9 = _6 << _6;
_17 = _2;
_19.fld2.0 = 278895940_u32 as f64;
RET = 14849355033418631727_usize;
_20 = !_19.fld2.1;
match _15 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
121 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_22.0 = _6;
_22.0 = '\u{8301f}' as isize;
_19.fld0.fld0 = 29305135628242467771536206830052144088_u128 * 258619346947245389981930976364631459109_u128;
_23.fld6 = _11;
_23.fld4.0 = [_11,_23.fld6,_11,_11,_23.fld6,_23.fld6,_11,_23.fld6];
_10 = ((-9558_i16),);
_10.0 = (-13795_i16);
RET = 5_usize >> _4;
_23.fld0 = _13 ^ _13;
_23.fld5.2 = (*_12) + (*_12);
_21.fld0 = [_10.0,_10.0,_10.0,_10.0,_10.0,_10.0,_10.0];
(*_8) = [_10.0];
RET = 7_usize;
(*_12) = _23.fld5.2 % 8483655189540924988_u64;
_5 = _7 - _9;
_7 = -_15;
_23.fld5.1 = _10.0 as i64;
(*_12) = _23.fld5.2 + _23.fld5.2;
_23.fld4.0[RET] = _19.fld0.fld0 as i64;
_14 = (-47_i8) as isize;
_11 = _19.fld2.1 as i64;
_19.fld1.0 = _5;
_23.fld5.0 = _19.fld2.0 as f32;
_23.fld1 = core::ptr::addr_of_mut!(_21.fld0);
_2 = [_23.fld4.0[RET],_11,_23.fld5.1];
Call(_6 = core::intrinsics::bswap(_5), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_7 = (*_12) as isize;
match _10.0 {
0 => bb1,
1 => bb10,
340282366920938463463374607431768197661 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_1 = ['\u{4b8d6}','\u{9f16e}','\u{69be8}','\u{d421a}','\u{dc805}','\u{99bf6}'];
_20 = !_19.fld2.1;
_27.0 = _12;
_15 = (*_12) as isize;
_23.fld5.0 = 7220549837267533407_usize as f32;
_27.0 = _12;
_23.fld6 = _19.fld0.fld0 as i64;
_26 = _23.fld5.0 as i64;
_31 = [_23.fld0,_23.fld0,_13];
_30 = _19.fld2;
_26 = _23.fld6 * _11;
_32 = _30.0 * _19.fld2.0;
_19.fld0.fld0 = 214019766586969056495728192848997689708_u128;
_19.fld2 = (_32, _30.1);
_27.0 = core::ptr::addr_of!((*_12));
_22.0 = !_14;
_33.fld1.0 = _16 * _19.fld1.0;
RET = 2994851651276000568_usize / 6_usize;
_13 = _23.fld0;
_23.fld2 = _8;
Call(_12 = fn4(_8, _8, _23.fld1, _19.fld0.fld0, _23.fld5, _14, _10.0, _10.0, _3, _15), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13 = _23.fld0 ^ _23.fld0;
_12 = core::ptr::addr_of!(_23.fld5.2);
_28 = _9;
_31 = [_23.fld0,_23.fld0,_23.fld0];
match _19.fld0.fld0 {
0 => bb10,
1 => bb2,
2 => bb14,
3 => bb15,
214019766586969056495728192848997689708 => bb17,
_ => bb16
}
}
bb14 = {
_1 = ['\u{4b8d6}','\u{9f16e}','\u{69be8}','\u{d421a}','\u{dc805}','\u{99bf6}'];
_20 = !_19.fld2.1;
_27.0 = _12;
_15 = (*_12) as isize;
_23.fld5.0 = 7220549837267533407_usize as f32;
_27.0 = _12;
_23.fld6 = _19.fld0.fld0 as i64;
_26 = _23.fld5.0 as i64;
_31 = [_23.fld0,_23.fld0,_13];
_30 = _19.fld2;
_26 = _23.fld6 * _11;
_32 = _30.0 * _19.fld2.0;
_19.fld0.fld0 = 214019766586969056495728192848997689708_u128;
_19.fld2 = (_32, _30.1);
_27.0 = core::ptr::addr_of!((*_12));
_22.0 = !_14;
_33.fld1.0 = _16 * _19.fld1.0;
RET = 2994851651276000568_usize / 6_usize;
_13 = _23.fld0;
_23.fld2 = _8;
Call(_12 = fn4(_8, _8, _23.fld1, _19.fld0.fld0, _23.fld5, _14, _10.0, _10.0, _3, _15), ReturnTo(bb13), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
_7 = (*_12) as isize;
match _10.0 {
0 => bb1,
1 => bb10,
340282366920938463463374607431768197661 => bb12,
_ => bb11
}
}
bb17 = {
_23.fld5.0 = 47_i8 as f32;
_34 = [4_usize,15104270551672076667_usize,1071035098732187820_usize,11509333053578053919_usize];
_22.1 = [1925581491_i32,1608451973_i32,1992762017_i32,772866235_i32,24918982_i32,1962523259_i32];
_33.fld2.1 = !_19.fld2.1;
_19.fld1 = (_9, _22.1);
_19.fld2 = _30;
_23.fld6 = -_11;
_35 = !11694774863782293346_usize;
_24 = 153309163436532699700525852071801052403_i128 as u64;
_23.fld4.0 = [_11,_26,_11,_26,_11,_26,_11,_26];
_18 = [_19.fld2.1,_30.1,_19.fld2.1,_30.1,_33.fld2.1,_20];
_22 = (_5, _19.fld1.1);
_19.fld2.1 = !_20;
_33.fld2.1 = _19.fld2.1 | _30.1;
_26 = _23.fld5.1;
_25 = -_23.fld5.0;
(*_12) = _19.fld0.fld0 as u64;
_40 = [(-2060018297_i32),193869032_i32,(-1071946722_i32),(-1314175441_i32),(-864103416_i32),883360172_i32];
_33.fld1 = _19.fld1;
_25 = _23.fld5.0;
_34 = [_35,_35,_35,_35];
_22 = (_28, _33.fld1.1);
Goto(bb18)
}
bb18 = {
Call(_42 = dump_var(3_usize, 5_usize, Move(_5), 10_usize, Move(_10), 7_usize, Move(_7), 40_usize, Move(_40)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_42 = dump_var(3_usize, 28_usize, Move(_28), 24_usize, Move(_24), 6_usize, Move(_6), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(3_usize, 20_usize, Move(_20), 2_usize, Move(_2), 4_usize, Move(_4), 26_usize, Move(_26)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: *mut [i16; 1],mut _2: *mut [i16; 1],mut _3: *mut [i16; 7],mut _4: u128,mut _5: (f32, i64, u64),mut _6: isize,mut _7: i16,mut _8: i16,mut _9: isize,mut _10: isize) -> *const u64 {
mir! {
type RET = *const u64;
let _11: Adt54;
let _12: char;
let _13: Adt60;
let _14: *mut [i16; 7];
let _15: char;
let _16: [i32; 6];
let _17: i128;
let _18: i16;
let _19: f32;
let _20: [bool; 3];
let _21: Adt49;
let _22: char;
let _23: bool;
let _24: [bool; 3];
let _25: f32;
let _26: [char; 6];
let _27: Adt60;
let _28: f64;
let _29: i128;
let _30: Adt50;
let _31: Adt52;
let _32: [i64; 3];
let _33: i16;
let _34: u16;
let _35: i16;
let _36: bool;
let _37: *mut *const u64;
let _38: *const *const f64;
let _39: bool;
let _40: isize;
let _41: i8;
let _42: [i64; 2];
let _43: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _44: i128;
let _45: f64;
let _46: i32;
let _47: ();
let _48: ();
{
(*_3) = [_8,_7,_7,_8,_8,_8,_7];
_5.0 = _5.2 as f32;
_10 = _9 * _6;
_2 = core::ptr::addr_of_mut!(_11.fld0);
_11.fld0 = (*_1);
_13.fld4.0 = [_5.1,_5.1,_5.1,_5.1,_5.1,_5.1,_5.1,_5.1];
_13.fld5.0 = -_5.0;
_13.fld6 = (-56_i8) as i64;
_5.0 = _13.fld5.0;
_9 = !_6;
_5.2 = 3471840576022689748_u64;
_13.fld5.1 = _13.fld6;
RET = core::ptr::addr_of!(_5.2);
_8 = _7;
(*_3) = [_7,_8,_8,_8,_7,_7,_7];
(*_2) = (*_1);
_13.fld5 = (_5.0, _13.fld6, _5.2);
_14 = core::ptr::addr_of_mut!((*_3));
_13.fld5.0 = _5.0;
RET = core::ptr::addr_of!(_13.fld5.2);
_13.fld0 = false ^ true;
_13.fld6 = _13.fld5.1;
_11.fld3 = ['\u{9b282}','\u{1dbe7}','\u{6dd04}','\u{3b0ed}','\u{976e8}','\u{d2ae4}'];
_13.fld6 = !_5.1;
Call((*RET) = fn5(_1, _14, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_2) = [_8];
_13.fld2 = core::ptr::addr_of_mut!(_11.fld0);
(*RET) = _5.2 & _5.2;
_5.2 = (*RET) % 16868027818792974248_u64;
_13.fld5.0 = _5.0 / 0.0000000000000000000000000000000000000025898181646326966_f32;
_9 = -_6;
_13.fld5.0 = _5.0;
(*_1) = [_7];
_13.fld4.1 = [15976055822166484329_usize,6035307342526981802_usize,3_usize,6406620736012010248_usize];
_13.fld5.1 = _4 as i64;
_13.fld1 = _3;
_19 = -_13.fld5.0;
_13.fld4.1 = [0_usize,15107005690553099321_usize,13594208246339271133_usize,7_usize];
_4 = (-140429621210268791807410200163960669449_i128) as u128;
_13.fld5.1 = _5.1;
_11.fld2.fld0 = [_13.fld6,_13.fld6];
_3 = core::ptr::addr_of_mut!((*_14));
_7 = _8;
RET = core::ptr::addr_of!(_5.2);
_12 = '\u{f9be5}';
_14 = core::ptr::addr_of_mut!((*_3));
Goto(bb2)
}
bb2 = {
_18 = _9 as i16;
_1 = _13.fld2;
_3 = core::ptr::addr_of_mut!((*_14));
(*_2) = [_18];
_14 = core::ptr::addr_of_mut!((*_14));
_8 = !_18;
(*_14) = [_7,_18,_8,_7,_7,_7,_8];
_9 = -_10;
_18 = _12 as i16;
_11.fld2.fld0 = [_13.fld6,_5.1];
_13.fld4.0 = [_5.1,_13.fld5.1,_13.fld6,_13.fld6,_13.fld6,_13.fld6,_13.fld6,_13.fld5.1];
_11.fld2.fld0 = [_13.fld5.1,_5.1];
_7 = _8 ^ _18;
_5.1 = -_13.fld5.1;
_7 = _18;
_11.fld2.fld1 = [(-1640129735_i32),(-1021030617_i32),1458710986_i32,(-1197632169_i32),526863280_i32,(-1834436666_i32)];
_15 = _12;
_5.1 = _13.fld5.1;
(*_2) = [_8];
_19 = _7 as f32;
(*_3) = [_7,_18,_7,_18,_7,_7,_7];
_13.fld5 = (_5.0, _5.1, (*RET));
_5.0 = _13.fld5.0 - _19;
_5.2 = !_13.fld5.2;
Goto(bb3)
}
bb3 = {
_23 = _13.fld5.1 >= _5.1;
_5 = (_13.fld5.0, _13.fld5.1, _13.fld5.2);
_11.fld2.fld0 = [_5.1,_5.1];
_16 = _11.fld2.fld1;
_15 = _12;
_21.fld0.3 = (_18,);
_13.fld5.0 = -_19;
_4 = 17543168829409666578403752855929618047_u128 & 332197338112430651037476177434367400423_u128;
_13.fld5.0 = _5.0 - _5.0;
_11.fld1 = core::ptr::addr_of_mut!((*_14));
_25 = -_13.fld5.0;
(*_14) = [_21.fld0.3.0,_21.fld0.3.0,_8,_7,_8,_8,_7];
_11.fld2.fld1 = [(-234262836_i32),1726988253_i32,404602961_i32,1652828531_i32,2132974165_i32,(-395189470_i32)];
_13.fld5.1 = _5.1 + _13.fld6;
_11.fld1 = _13.fld1;
Goto(bb4)
}
bb4 = {
_21.fld0.0.0 = _8 as f64;
_11.fld3 = [_12,_12,_15,_15,_15,_12];
_11.fld1 = core::ptr::addr_of_mut!((*_14));
(*RET) = _13.fld5.2;
_26 = _11.fld3;
_13.fld5.0 = _13.fld5.2 as f32;
_27.fld4.1 = [5385384689403346385_usize,9118587462794493567_usize,4_usize,3_usize];
_13.fld2 = _2;
_5.1 = _13.fld5.1;
(*_1) = [_18];
_2 = _1;
_11.fld2.fld1 = [2135025697_i32,(-1363151591_i32),188704168_i32,(-980250472_i32),(-1547162093_i32),393580779_i32];
_15 = _12;
(*RET) = _13.fld5.2;
(*_2) = [_7];
_28 = 713348135_i32 as f64;
_19 = _25;
_12 = _15;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_24 = [_23,_13.fld0,_13.fld0];
_11.fld1 = core::ptr::addr_of_mut!((*_3));
Goto(bb5)
}
bb5 = {
_26 = [_12,_15,_12,_12,_12,_15];
_21.fld0.0.1 = !62581_u16;
_21.fld1 = [_10,_9,_9,_6,_6,_6,_6];
_13.fld5.1 = _23 as i64;
(*RET) = 268480788_u32 as u64;
_27.fld5.1 = !_5.1;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_22 = _15;
_27.fld5.2 = !_5.2;
_21.fld0.3.0 = _7;
_27.fld0 = !_13.fld0;
_13.fld0 = !_27.fld0;
_5.0 = (-2017082972_i32) as f32;
Goto(bb6)
}
bb6 = {
_3 = core::ptr::addr_of_mut!((*_14));
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_29 = -115497587066504149634928009690976015208_i128;
_19 = _5.0 * _25;
_21.fld0.1 = _4 as u32;
_11.fld3 = [_12,_22,_22,_15,_15,_22];
_12 = _22;
_11.fld0 = [_21.fld0.3.0];
_13.fld4 = _27.fld4;
_27.fld6 = _13.fld5.1 >> _21.fld0.3.0;
_27.fld5.2 = _13.fld5.2;
_21.fld0.3 = (_8,);
_31.fld2 = _16;
_31.fld4 = _18;
_22 = _12;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_27.fld4.0 = [_27.fld6,_5.1,_13.fld6,_13.fld6,_27.fld6,_13.fld5.1,_13.fld5.1,_27.fld6];
_27.fld0 = _23;
_20 = _24;
_11.fld2.fld0 = [_27.fld5.1,_13.fld5.1];
Goto(bb7)
}
bb7 = {
_39 = _5.1 > _13.fld5.1;
Call(_31.fld1 = fn15(_13.fld2, _39, _13.fld5.2, _23, _13.fld2, _21.fld1, _2, (*RET), _27.fld4, (*_14), _11, _27.fld4.0, (*_1)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_30.fld0.0 = (-69_i8) ^ 54_i8;
_30.fld0 = ((-49_i8), _31.fld1.4, _4, 142_u8);
_31.fld1 = (_29, _16, (*_14), _21.fld0.0.0, _30.fld0.1);
_35 = _7;
_30.fld0.3 = !124_u8;
_22 = _12;
(*_2) = [_18];
_38 = _31.fld1.4;
_12 = _15;
_13.fld0 = _23;
_43.0.1 = _31.fld1.1;
_41 = _30.fld0.0 | _30.fld0.0;
_43.1 = (_21.fld0.0, _21.fld0.1, (-1454785356_i32), _21.fld0.3);
match _43.1.2 {
0 => bb6,
1 => bb2,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
340282366920938463463374607430313426100 => bb15,
_ => bb14
}
}
bb9 = {
_39 = _5.1 > _13.fld5.1;
Call(_31.fld1 = fn15(_13.fld2, _39, _13.fld5.2, _23, _13.fld2, _21.fld1, _2, (*RET), _27.fld4, (*_14), _11, _27.fld4.0, (*_1)), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_3 = core::ptr::addr_of_mut!((*_14));
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_29 = -115497587066504149634928009690976015208_i128;
_19 = _5.0 * _25;
_21.fld0.1 = _4 as u32;
_11.fld3 = [_12,_22,_22,_15,_15,_22];
_12 = _22;
_11.fld0 = [_21.fld0.3.0];
_13.fld4 = _27.fld4;
_27.fld6 = _13.fld5.1 >> _21.fld0.3.0;
_27.fld5.2 = _13.fld5.2;
_21.fld0.3 = (_8,);
_31.fld2 = _16;
_31.fld4 = _18;
_22 = _12;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_27.fld4.0 = [_27.fld6,_5.1,_13.fld6,_13.fld6,_27.fld6,_13.fld5.1,_13.fld5.1,_27.fld6];
_27.fld0 = _23;
_20 = _24;
_11.fld2.fld0 = [_27.fld5.1,_13.fld5.1];
Goto(bb7)
}
bb11 = {
_26 = [_12,_15,_12,_12,_12,_15];
_21.fld0.0.1 = !62581_u16;
_21.fld1 = [_10,_9,_9,_6,_6,_6,_6];
_13.fld5.1 = _23 as i64;
(*RET) = 268480788_u32 as u64;
_27.fld5.1 = !_5.1;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_22 = _15;
_27.fld5.2 = !_5.2;
_21.fld0.3.0 = _7;
_27.fld0 = !_13.fld0;
_13.fld0 = !_27.fld0;
_5.0 = (-2017082972_i32) as f32;
Goto(bb6)
}
bb12 = {
_21.fld0.0.0 = _8 as f64;
_11.fld3 = [_12,_12,_15,_15,_15,_12];
_11.fld1 = core::ptr::addr_of_mut!((*_14));
(*RET) = _13.fld5.2;
_26 = _11.fld3;
_13.fld5.0 = _13.fld5.2 as f32;
_27.fld4.1 = [5385384689403346385_usize,9118587462794493567_usize,4_usize,3_usize];
_13.fld2 = _2;
_5.1 = _13.fld5.1;
(*_1) = [_18];
_2 = _1;
_11.fld2.fld1 = [2135025697_i32,(-1363151591_i32),188704168_i32,(-980250472_i32),(-1547162093_i32),393580779_i32];
_15 = _12;
(*RET) = _13.fld5.2;
(*_2) = [_7];
_28 = 713348135_i32 as f64;
_19 = _25;
_12 = _15;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_24 = [_23,_13.fld0,_13.fld0];
_11.fld1 = core::ptr::addr_of_mut!((*_3));
Goto(bb5)
}
bb13 = {
_23 = _13.fld5.1 >= _5.1;
_5 = (_13.fld5.0, _13.fld5.1, _13.fld5.2);
_11.fld2.fld0 = [_5.1,_5.1];
_16 = _11.fld2.fld1;
_15 = _12;
_21.fld0.3 = (_18,);
_13.fld5.0 = -_19;
_4 = 17543168829409666578403752855929618047_u128 & 332197338112430651037476177434367400423_u128;
_13.fld5.0 = _5.0 - _5.0;
_11.fld1 = core::ptr::addr_of_mut!((*_14));
_25 = -_13.fld5.0;
(*_14) = [_21.fld0.3.0,_21.fld0.3.0,_8,_7,_8,_8,_7];
_11.fld2.fld1 = [(-234262836_i32),1726988253_i32,404602961_i32,1652828531_i32,2132974165_i32,(-395189470_i32)];
_13.fld5.1 = _5.1 + _13.fld6;
_11.fld1 = _13.fld1;
Goto(bb4)
}
bb14 = {
(*_2) = [_8];
_13.fld2 = core::ptr::addr_of_mut!(_11.fld0);
(*RET) = _5.2 & _5.2;
_5.2 = (*RET) % 16868027818792974248_u64;
_13.fld5.0 = _5.0 / 0.0000000000000000000000000000000000000025898181646326966_f32;
_9 = -_6;
_13.fld5.0 = _5.0;
(*_1) = [_7];
_13.fld4.1 = [15976055822166484329_usize,6035307342526981802_usize,3_usize,6406620736012010248_usize];
_13.fld5.1 = _4 as i64;
_13.fld1 = _3;
_19 = -_13.fld5.0;
_13.fld4.1 = [0_usize,15107005690553099321_usize,13594208246339271133_usize,7_usize];
_4 = (-140429621210268791807410200163960669449_i128) as u128;
_13.fld5.1 = _5.1;
_11.fld2.fld0 = [_13.fld6,_13.fld6];
_3 = core::ptr::addr_of_mut!((*_14));
_7 = _8;
RET = core::ptr::addr_of!(_5.2);
_12 = '\u{f9be5}';
_14 = core::ptr::addr_of_mut!((*_3));
Goto(bb2)
}
bb15 = {
_43.1.0 = _21.fld0.0;
_11.fld1 = core::ptr::addr_of_mut!((*_14));
_14 = core::ptr::addr_of_mut!((*_3));
_30.fld0.2 = !_4;
_31.fld0 = _7 as i128;
_31.fld1.4 = _30.fld0.1;
_27.fld4 = (_13.fld4.0, _13.fld4.1);
_27.fld1 = core::ptr::addr_of_mut!((*_14));
_27.fld1 = _13.fld1;
_27.fld5.2 = _31.fld1.0 as u64;
(*_2) = [_21.fld0.3.0];
_3 = _27.fld1;
_34 = _21.fld0.0.1;
_43.1.3 = (_21.fld0.3.0,);
_13.fld5.0 = -_19;
_42 = [_13.fld5.1,_13.fld5.1];
(*_2) = [_43.1.3.0];
_43.0.1 = [_43.1.2,_43.1.2,_43.1.2,_43.1.2,_43.1.2,_43.1.2];
_26 = _11.fld3;
_22 = _15;
_44 = !_31.fld1.0;
_27.fld4.1 = [6897866160368157552_usize,8611222218476197260_usize,7_usize,9223298191557264730_usize];
_21.fld1 = [_10,_9,_10,_10,_9,_6,_6];
_5.0 = _4 as f32;
_27.fld5.0 = _21.fld0.0.1 as f32;
_30.fld0.2 = _4 - _4;
_17 = _35 as i128;
_46 = _41 as i32;
Goto(bb16)
}
bb16 = {
Call(_47 = dump_var(4_usize, 4_usize, Move(_4), 16_usize, Move(_16), 41_usize, Move(_41), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(4_usize, 20_usize, Move(_20), 34_usize, Move(_34), 12_usize, Move(_12), 18_usize, Move(_18)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(4_usize, 17_usize, Move(_17), 44_usize, Move(_44), 26_usize, Move(_26), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *mut [i16; 1],mut _2: *mut [i16; 7],mut _3: i16) -> u64 {
mir! {
type RET = u64;
let _4: Adt52;
let _5: u8;
let _6: i128;
let _7: char;
let _8: Adt53;
let _9: f32;
let _10: i64;
let _11: isize;
let _12: Adt53;
let _13: Adt53;
let _14: bool;
let _15: bool;
let _16: i16;
let _17: (*const u64,);
let _18: [isize; 7];
let _19: isize;
let _20: Adt49;
let _21: u128;
let _22: Adt60;
let _23: char;
let _24: u32;
let _25: f64;
let _26: Adt57;
let _27: *const *const f64;
let _28: isize;
let _29: ();
let _30: ();
{
_3 = (-6189_i16) * 20634_i16;
(*_1) = [_3];
RET = 185_u8 as u64;
Goto(bb1)
}
bb1 = {
(*_2) = [_3,_3,_3,_3,_3,_3,_3];
_4.fld4 = -_3;
_4.fld1.0 = 24276_u16 as i128;
_4.fld2 = [(-1742433025_i32),(-1620832679_i32),(-688473392_i32),1258774854_i32,435518906_i32,957373089_i32];
_4.fld3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = _4.fld1.0;
_4.fld1.2 = [_4.fld4,_3,_4.fld4,_3,_3,_3,_4.fld4];
_4.fld0 = _4.fld1.0 ^ _4.fld1.0;
_4.fld1.1 = [1011189492_i32,(-481758066_i32),660671896_i32,1633778425_i32,307894145_i32,1908000132_i32];
(*_2) = _4.fld1.2;
_4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = '\u{75303}';
_2 = core::ptr::addr_of_mut!((*_2));
_4.fld1.3 = 94_i8 as f64;
_6 = _7 as i128;
_2 = core::ptr::addr_of_mut!((*_2));
_5 = 194_u8;
Goto(bb2)
}
bb2 = {
_4.fld1.2 = [_4.fld4,_4.fld4,_4.fld4,_4.fld4,_4.fld4,_4.fld4,_4.fld4];
_4.fld2 = _4.fld1.1;
_3 = _4.fld4;
_4.fld4 = -_3;
_6 = !_4.fld0;
_9 = 9223372036854775807_isize as f32;
_13.fld1 = _4.fld2;
_13.fld1 = [1898984209_i32,(-729071317_i32),1912193638_i32,714971308_i32,(-1596942155_i32),(-2113257009_i32)];
_13.fld1 = [(-1897233895_i32),(-437166959_i32),(-1793137916_i32),(-1660195990_i32),1938515555_i32,332661304_i32];
RET = !14933743289985723919_u64;
_12.fld0 = [7153885922509568301_i64,(-4138892602549517576_i64)];
match _5 {
0 => bb1,
1 => bb3,
194 => bb5,
_ => bb4
}
}
bb3 = {
(*_2) = [_3,_3,_3,_3,_3,_3,_3];
_4.fld4 = -_3;
_4.fld1.0 = 24276_u16 as i128;
_4.fld2 = [(-1742433025_i32),(-1620832679_i32),(-688473392_i32),1258774854_i32,435518906_i32,957373089_i32];
_4.fld3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = _4.fld1.0;
_4.fld1.2 = [_4.fld4,_3,_4.fld4,_3,_3,_3,_4.fld4];
_4.fld0 = _4.fld1.0 ^ _4.fld1.0;
_4.fld1.1 = [1011189492_i32,(-481758066_i32),660671896_i32,1633778425_i32,307894145_i32,1908000132_i32];
(*_2) = _4.fld1.2;
_4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = '\u{75303}';
_2 = core::ptr::addr_of_mut!((*_2));
_4.fld1.3 = 94_i8 as f64;
_6 = _7 as i128;
_2 = core::ptr::addr_of_mut!((*_2));
_5 = 194_u8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_3 = _4.fld4;
_7 = '\u{25be7}';
_13 = Adt53 { fld0: _12.fld0,fld1: _4.fld2 };
_4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),74_isize,(-9223372036854775808_isize),22_isize];
_4.fld1.3 = 20351_u16 as f64;
_4.fld0 = false as i128;
_12 = _13;
_4.fld1.1 = _4.fld2;
_6 = -_4.fld1.0;
_12.fld0 = [(-8766851951744556845_i64),(-6183913378347179540_i64)];
_8.fld0 = [(-3677044479639125989_i64),1806727085708423415_i64];
_1 = core::ptr::addr_of_mut!((*_1));
_4.fld4 = _3 >> _4.fld0;
_4.fld3 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),49_isize,9223372036854775807_isize,(-26_isize),50_isize];
RET = 6467655983537652710_u64 + 11760517140988770875_u64;
_10 = 906422723529059439_i64;
(*_2) = _4.fld1.2;
_4.fld1.1 = [(-412459932_i32),1577354743_i32,(-556874839_i32),(-745785521_i32),680039401_i32,(-1390645948_i32)];
_12.fld0 = [_10,_10];
_8.fld0 = _13.fld0;
_8.fld1 = _4.fld2;
(*_1) = [_4.fld4];
_4.fld1.0 = !_4.fld0;
_14 = !false;
Call(RET = core::intrinsics::transmute(_10), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_13 = Adt53 { fld0: _8.fld0,fld1: _8.fld1 };
_12.fld0 = [_10,_10];
_1 = core::ptr::addr_of_mut!((*_1));
_12.fld0 = [_10,_10];
_13.fld1 = _4.fld2;
_4.fld3 = [(-100_isize),(-9223372036854775808_isize),(-89_isize),44_isize,9223372036854775807_isize,(-9223372036854775808_isize),54_isize];
_8.fld1 = _13.fld1;
_11 = 9223372036854775807_isize;
_8 = Adt53 { fld0: _13.fld0,fld1: _4.fld2 };
_4.fld1.3 = _11 as f64;
_13 = _8;
_3 = _4.fld4;
_1 = core::ptr::addr_of_mut!((*_1));
(*_2) = [_3,_4.fld4,_3,_4.fld4,_3,_4.fld4,_4.fld4];
_4.fld1.2 = [_3,_4.fld4,_4.fld4,_4.fld4,_4.fld4,_3,_3];
_5 = !203_u8;
_8.fld0 = [_10,_10];
_4.fld1.2 = [_3,_4.fld4,_3,_4.fld4,_3,_4.fld4,_4.fld4];
_4.fld4 = 159747733108301588072062529524237942656_u128 as i16;
Call(_4.fld1.4 = fn6(_8.fld0, _4.fld1.1, _4.fld1.0, _5, _3, _4.fld1.0, _6, _7, _10, _13.fld0, _4.fld4, _8.fld0, _13), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_1 = core::ptr::addr_of_mut!((*_1));
(*_2) = _4.fld1.2;
_3 = -_4.fld4;
_12 = Adt53 { fld0: _13.fld0,fld1: _8.fld1 };
_4.fld1.2 = [_3,_3,_4.fld4,_3,_3,_3,_4.fld4];
_4.fld1.1 = [(-1888041410_i32),525175090_i32,(-1135896068_i32),(-1706496198_i32),(-587327019_i32),(-1839826098_i32)];
_8 = Adt53 { fld0: _13.fld0,fld1: _12.fld1 };
_13.fld1 = [(-849509786_i32),(-89194460_i32),1108942447_i32,772207114_i32,1358056367_i32,(-1204454434_i32)];
_4.fld3 = [_11,_11,_11,_11,_11,_11,_11];
_2 = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
match _10 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb4,
4 => bb8,
906422723529059439 => bb10,
_ => bb9
}
}
bb8 = {
(*_2) = [_3,_3,_3,_3,_3,_3,_3];
_4.fld4 = -_3;
_4.fld1.0 = 24276_u16 as i128;
_4.fld2 = [(-1742433025_i32),(-1620832679_i32),(-688473392_i32),1258774854_i32,435518906_i32,957373089_i32];
_4.fld3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = _4.fld1.0;
_4.fld1.2 = [_4.fld4,_3,_4.fld4,_3,_3,_3,_4.fld4];
_4.fld0 = _4.fld1.0 ^ _4.fld1.0;
_4.fld1.1 = [1011189492_i32,(-481758066_i32),660671896_i32,1633778425_i32,307894145_i32,1908000132_i32];
(*_2) = _4.fld1.2;
_4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = '\u{75303}';
_2 = core::ptr::addr_of_mut!((*_2));
_4.fld1.3 = 94_i8 as f64;
_6 = _7 as i128;
_2 = core::ptr::addr_of_mut!((*_2));
_5 = 194_u8;
Goto(bb2)
}
bb9 = {
Return()
}
bb10 = {
_8.fld1 = [(-1546509228_i32),(-1640648468_i32),(-1714002129_i32),(-313441532_i32),(-568843100_i32),(-234244151_i32)];
_3 = _4.fld4;
_4.fld1.0 = _10 as i128;
Call(_9 = fn9(_11, _12.fld0, _11, _4.fld1.1, _8.fld1, _4.fld1.4, _4.fld0, _4.fld1.3, _4.fld1.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_4.fld3 = [_11,_11,_11,_11,_11,_11,_11];
(*_2) = _4.fld1.2;
_7 = '\u{59f16}';
_12.fld0 = _13.fld0;
_18 = [_11,_11,_11,_11,_11,_11,_11];
_4.fld0 = _6;
_13 = Adt53 { fld0: _12.fld0,fld1: _4.fld2 };
_20.fld0.0.1 = 5638_u16;
_4.fld1.0 = _4.fld0 << _5;
_17.0 = core::ptr::addr_of!(_22.fld5.2);
_11 = 9223372036854775807_isize | 9223372036854775807_isize;
_22.fld5.0 = _9 - _9;
Call(_20.fld0.3.0 = core::intrinsics::bswap(_4.fld4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20.fld0.0.0 = _4.fld1.3;
_8 = _12;
_10 = _14 as i64;
_22.fld4.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_22.fld0 = _14 ^ _14;
match _20.fld0.0.1 {
0 => bb10,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb11,
5638 => bb13,
_ => bb6
}
}
bb13 = {
_23 = _7;
_11 = _5 as isize;
_22.fld3 = _4.fld1.4;
_8.fld0 = [_10,_10];
_20.fld0.3 = (_3,);
_20.fld0.0.1 = 42665_u16;
_22.fld4.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_1 = core::ptr::addr_of_mut!((*_1));
_22.fld5.1 = !_10;
_4.fld0 = _14 as i128;
_4.fld2 = [464797501_i32,(-1283121787_i32),(-1565756874_i32),147856882_i32,(-634322737_i32),1802165068_i32];
_13.fld0 = [_10,_10];
(*_1) = [_20.fld0.3.0];
_20.fld0.2 = 808131451_i32;
_21 = 118545102117713448056216516641689194957_u128;
match _20.fld0.0.1 {
42665 => bb15,
_ => bb14
}
}
bb14 = {
_20.fld0.0.0 = _4.fld1.3;
_8 = _12;
_10 = _14 as i64;
_22.fld4.0 = [_10,_10,_10,_10,_10,_10,_10,_10];
_22.fld0 = _14 ^ _14;
match _20.fld0.0.1 {
0 => bb10,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb11,
5638 => bb13,
_ => bb6
}
}
bb15 = {
_20.fld1 = [_11,_11,_11,_11,_11,_11,_11];
_13.fld1 = _4.fld1.1;
_13 = Adt53 { fld0: _12.fld0,fld1: _4.fld2 };
_22.fld0 = !_14;
_4.fld1.2 = [_3,_4.fld4,_3,_3,_4.fld4,_3,_4.fld4];
_13 = Adt53 { fld0: _8.fld0,fld1: _4.fld2 };
_22.fld2 = core::ptr::addr_of_mut!((*_1));
_8 = Adt53 { fld0: _12.fld0,fld1: _12.fld1 };
_26.fld2 = (_20.fld0.0.0, _20.fld0.0.1);
_22.fld5.2 = 10424747768964242115_u64;
_4.fld1.4 = _22.fld3;
_22.fld1 = core::ptr::addr_of_mut!(_4.fld1.2);
_20.fld0.0.0 = -_4.fld1.3;
_22.fld4.1 = [14540831817707569107_usize,3_usize,7705138255211434689_usize,11190526488292492675_usize];
_26.fld0 = Adt56 { fld0: _21 };
_20.fld1 = _4.fld3;
_4.fld1.3 = -_26.fld2.0;
_19 = _10 as isize;
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb16)
}
bb16 = {
Call(_29 = dump_var(5_usize, 23_usize, Move(_23), 18_usize, Move(_18), 6_usize, Move(_6), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(5_usize, 10_usize, Move(_10), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [i64; 2],mut _2: [i32; 6],mut _3: i128,mut _4: u8,mut _5: i16,mut _6: i128,mut _7: i128,mut _8: char,mut _9: i64,mut _10: [i64; 2],mut _11: i16,mut _12: [i64; 2],mut _13: Adt53) -> *const *const f64 {
mir! {
type RET = *const *const f64;
let _14: (isize, [i32; 6]);
let _15: char;
let _16: *const f64;
let _17: f32;
let _18: f32;
let _19: isize;
let _20: u8;
let _21: bool;
let _22: Adt49;
let _23: [u16; 6];
let _24: ((f64, u16), u32, i32, (i16,));
let _25: f32;
let _26: char;
let _27: i64;
let _28: i64;
let _29: Adt57;
let _30: ([u16; 6], *const f64);
let _31: *mut [i16; 1];
let _32: [usize; 4];
let _33: u64;
let _34: f32;
let _35: [i32; 6];
let _36: Adt56;
let _37: f32;
let _38: Adt58;
let _39: isize;
let _40: f64;
let _41: ();
let _42: ();
{
_1 = _12;
_14.0 = !9223372036854775807_isize;
_2 = [1600582485_i32,(-696426744_i32),1683417810_i32,(-457678817_i32),(-1133126929_i32),(-708444769_i32)];
_13.fld1 = [388058434_i32,(-884838928_i32),6346447_i32,924369720_i32,(-1744170929_i32),(-587186411_i32)];
_13 = Adt53 { fld0: _1,fld1: _2 };
RET = core::ptr::addr_of!(_16);
_13.fld0 = [_9,_9];
_7 = _6 >> _14.0;
_6 = !_7;
_17 = _4 as f32;
_13 = Adt53 { fld0: _1,fld1: _2 };
_8 = '\u{1db6d}';
_11 = !_5;
_3 = _6;
Goto(bb1)
}
bb1 = {
_14 = ((-9223372036854775808_isize), _13.fld1);
_11 = _17 as i16;
_6 = !_7;
_5 = _11 & _11;
_14.1 = [1441564302_i32,(-1454514487_i32),1132317803_i32,(-2115198710_i32),(-1391770735_i32),(-310370042_i32)];
_12 = [_9,_9];
_1 = [_9,_9];
_17 = 7787218779000267397_u64 as f32;
_11 = _5 >> _14.0;
_5 = -_11;
_18 = 5_usize as f32;
_14.1 = [1912643226_i32,408383093_i32,(-69635910_i32),(-1376493959_i32),(-939633627_i32),(-1119476165_i32)];
_19 = -_14.0;
_4 = _17 as u8;
_19 = _14.0 | _14.0;
_19 = _14.0 - _14.0;
_17 = _18 * _18;
_21 = true;
_13.fld0 = [_9,_9];
_1 = _12;
_22.fld0.3 = (_5,);
(*RET) = core::ptr::addr_of!(_22.fld0.0.0);
_24.0.1 = _5 as u16;
Call(_4 = core::intrinsics::bswap(211_u8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = !_3;
_22.fld0.0.1 = _21 as u16;
_19 = _14.0 | _14.0;
_24.0.1 = !_22.fld0.0.1;
_13.fld1 = [(-981073737_i32),(-902218995_i32),(-1438283930_i32),1945898944_i32,(-2075782853_i32),(-1831469087_i32)];
_22.fld0.1 = 527007093_u32;
_22.fld0.0.0 = 752866698_i32 as f64;
_24.0 = (_22.fld0.0.0, _22.fld0.0.1);
(*RET) = core::ptr::addr_of!(_24.0.0);
_22.fld0.0 = ((*_16), _24.0.1);
match _14.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463454151235394913435648 => bb9,
_ => bb8
}
}
bb3 = {
_14 = ((-9223372036854775808_isize), _13.fld1);
_11 = _17 as i16;
_6 = !_7;
_5 = _11 & _11;
_14.1 = [1441564302_i32,(-1454514487_i32),1132317803_i32,(-2115198710_i32),(-1391770735_i32),(-310370042_i32)];
_12 = [_9,_9];
_1 = [_9,_9];
_17 = 7787218779000267397_u64 as f32;
_11 = _5 >> _14.0;
_5 = -_11;
_18 = 5_usize as f32;
_14.1 = [1912643226_i32,408383093_i32,(-69635910_i32),(-1376493959_i32),(-939633627_i32),(-1119476165_i32)];
_19 = -_14.0;
_4 = _17 as u8;
_19 = _14.0 | _14.0;
_19 = _14.0 - _14.0;
_17 = _18 * _18;
_21 = true;
_13.fld0 = [_9,_9];
_1 = _12;
_22.fld0.3 = (_5,);
(*RET) = core::ptr::addr_of!(_22.fld0.0.0);
_24.0.1 = _5 as u16;
Call(_4 = core::intrinsics::bswap(211_u8), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14 = (_19, _2);
_2 = [(-451905162_i32),1034544263_i32,(-1372677452_i32),1778646156_i32,111844346_i32,370113454_i32];
Call(_5 = fn7(_22.fld0.1, _1, _22.fld0.0.0, (*RET), _13.fld1, _21, _8, _24.0.1, _24.0.0, _22.fld0.3, _6, _11, _24.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_4 = _5 as u8;
(*RET) = core::ptr::addr_of!((*_16));
_30.0 = [_24.0.1,_24.0.1,_24.0.1,_22.fld0.0.1,_22.fld0.0.1,_24.0.1];
_18 = _17;
RET = core::ptr::addr_of!((*RET));
_25 = _18 - _18;
_20 = _5 as u8;
_20 = !_4;
(*RET) = core::ptr::addr_of!(_24.0.0);
_23 = [_22.fld0.0.1,_24.0.1,_24.0.1,_22.fld0.0.1,_22.fld0.0.1,_24.0.1];
Call(_9 = fn8(_22.fld0.0, _22.fld0.0, (*_16), _24.0.1, _19, _8, _14.1, _24.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_28 = _8 as i64;
_29.fld1.1 = [(-400100053_i32),(-422280547_i32),1497247498_i32,64027320_i32,(-301434732_i32),1751142282_i32];
_27 = _19 as i64;
_13.fld0 = [_27,_27];
_1 = [_27,_27];
_22.fld0.3 = (_5,);
_29.fld2.1 = _24.0.1;
_24.3.0 = _5 ^ _22.fld0.3.0;
_29.fld1.1 = [(-767965142_i32),(-1376047517_i32),(-1054005975_i32),770538771_i32,988232662_i32,877909923_i32];
_15 = _8;
_30 = (_23, (*RET));
_29.fld1 = _14;
_23 = [_22.fld0.0.1,_29.fld2.1,_29.fld2.1,_24.0.1,_24.0.1,_24.0.1];
_24.0.0 = _22.fld0.0.0;
_10 = [_27,_27];
_29.fld0.fld0 = !88860087762000680526010084799520136338_u128;
_20 = _4;
_14.1 = [(-888642264_i32),566556978_i32,665629565_i32,(-318307066_i32),(-1027494768_i32),(-399732198_i32)];
_22.fld0.3.0 = _24.3.0 ^ _24.3.0;
_29.fld0 = Adt56 { fld0: 262721457820839534823949504203495834940_u128 };
_24.0.0 = 14603486508895442283_u64 as f64;
(*RET) = core::ptr::addr_of!(_24.0.0);
_28 = _27 << _22.fld0.3.0;
Goto(bb12)
}
bb12 = {
_23 = _30.0;
_22.fld0.3.0 = _29.fld0.fld0 as i16;
_24.0 = (_22.fld0.0.0, _29.fld2.1);
_13 = Adt53 { fld0: _1,fld1: _29.fld1.1 };
_22.fld0.3.0 = _4 as i16;
_32 = [1_usize,15661177383267553522_usize,0_usize,7827612642951071216_usize];
_14.1 = [1262327022_i32,(-1384262673_i32),370729019_i32,(-167295122_i32),(-1897354633_i32),733281160_i32];
_29.fld2 = ((*_16), _24.0.1);
_14.1 = [(-549534973_i32),(-2082759302_i32),1622887588_i32,(-244977722_i32),(-238370870_i32),(-1376712932_i32)];
_26 = _15;
_24.1 = _22.fld0.1 >> _20;
(*RET) = core::ptr::addr_of!(_24.0.0);
_5 = 5119670356959627124_u64 as i16;
_29.fld0 = Adt56 { fld0: 168489700427994322543553219015253872080_u128 };
_22.fld0.0 = ((*_16), _24.0.1);
_8 = _26;
_23 = [_22.fld0.0.1,_22.fld0.0.1,_24.0.1,_24.0.1,_24.0.1,_22.fld0.0.1];
Goto(bb13)
}
bb13 = {
(*RET) = _30.1;
_30.1 = core::ptr::addr_of!((*_16));
_22.fld0.0.0 = -_29.fld2.0;
_12 = _13.fld0;
_14.0 = _19;
_26 = _8;
_29.fld1.1 = [105614459_i32,704190375_i32,(-978889349_i32),(-1996747756_i32),(-1937409082_i32),(-236958728_i32)];
_35 = [(-302642670_i32),(-1332876326_i32),1487560567_i32,(-1835381617_i32),1402348588_i32,398813541_i32];
(*RET) = core::ptr::addr_of!(_24.0.0);
(*RET) = _30.1;
_37 = _17;
_11 = !_24.3.0;
_7 = !_3;
Goto(bb14)
}
bb14 = {
_7 = -_3;
_30 = (_23, _16);
(*RET) = core::ptr::addr_of!(_29.fld2.0);
_24 = (_22.fld0.0, _22.fld0.1, (-348671929_i32), _22.fld0.3);
_28 = !_27;
_37 = -_18;
_22.fld1 = [_19,_14.0,_14.0,_14.0,_29.fld1.0,_19,_14.0];
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(6_usize, 9_usize, Move(_9), 20_usize, Move(_20), 6_usize, Move(_6), 27_usize, Move(_27)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(6_usize, 26_usize, Move(_26), 5_usize, Move(_5), 23_usize, Move(_23), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(6_usize, 15_usize, Move(_15), 11_usize, Move(_11), 32_usize, Move(_32), 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: u32,mut _2: [i64; 2],mut _3: f64,mut _4: *const f64,mut _5: [i32; 6],mut _6: bool,mut _7: char,mut _8: u16,mut _9: f64,mut _10: (i16,),mut _11: i128,mut _12: i16,mut _13: (f64, u16)) -> i16 {
mir! {
type RET = i16;
let _14: [isize; 7];
let _15: Adt55;
let _16: Adt58;
let _17: i32;
let _18: ();
let _19: ();
{
_13.1 = _8;
_1 = 4246583060_u32;
(*_4) = _3;
_3 = _9;
_11 = (-41524752585772814682551095565922431194_i128);
(*_4) = 5604188653573826925_usize as f64;
_10 = (_12,);
RET = -_12;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
298757614335165648780823511865845780262 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4 = core::ptr::addr_of!(_3);
_11 = (-211655483_i32) as i128;
_4 = core::ptr::addr_of!((*_4));
_12 = _10.0;
RET = _12 + _10.0;
_5 = [(-1048195878_i32),190914836_i32,(-1174792370_i32),(-678163059_i32),(-826158332_i32),1769797285_i32];
_12 = _6 as i16;
_1 = !1516051449_u32;
_10.0 = 7508827575732396965_i64 as i16;
_7 = '\u{927bd}';
_11 = (-124946616301017613672617670910393587931_i128) >> _10.0;
_15.fld3 = _8;
_15.fld0 = [(-3465909949236378238_i64),6519213953731058407_i64,(-4916030513917823771_i64),2213341268011255037_i64,1271345914250504604_i64,2931961069170943444_i64,9153723581524244107_i64,8652574522388029383_i64];
_15.fld1.fld5 = core::ptr::addr_of_mut!(_15.fld1.fld0);
_15.fld1.fld2.2 = 13807681654335543860_u64;
_16.fld0 = core::ptr::addr_of_mut!(_6);
_15.fld1.fld6 = [_7,_7,_7,_7,_7,_7];
Goto(bb10)
}
bb10 = {
Call(_18 = dump_var(7_usize, 7_usize, Move(_7), 11_usize, Move(_11), 2_usize, Move(_2), 6_usize, Move(_6)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: (f64, u16),mut _2: (f64, u16),mut _3: f64,mut _4: u16,mut _5: isize,mut _6: char,mut _7: [i32; 6],mut _8: (f64, u16)) -> i64 {
mir! {
type RET = i64;
let _9: f32;
let _10: Adt63;
let _11: u64;
let _12: isize;
let _13: bool;
let _14: isize;
let _15: [i16; 1];
let _16: f64;
let _17: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _18: f64;
let _19: f64;
let _20: usize;
let _21: (f32, i64, u64);
let _22: isize;
let _23: isize;
let _24: f32;
let _25: *const f64;
let _26: *const f64;
let _27: usize;
let _28: i8;
let _29: [i64; 8];
let _30: bool;
let _31: *const (isize, [i32; 6]);
let _32: u128;
let _33: Adt58;
let _34: isize;
let _35: Adt60;
let _36: bool;
let _37: Adt61;
let _38: u32;
let _39: i32;
let _40: f64;
let _41: i16;
let _42: u32;
let _43: ();
let _44: ();
{
RET = !6006629407598955020_i64;
RET = 22796_i16 as i64;
_5 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_8.1 = 702364708_i32 as u16;
_8 = _2;
_1 = _2;
_5 = 9223372036854775807_isize;
_9 = (-21_i8) as f32;
_3 = -_8.0;
_2.0 = _1.0;
RET = (-7101651226483640979_i64) >> _5;
_2.1 = 98711514225733481573049568139186090491_u128 as u16;
_6 = '\u{1004ad}';
_6 = '\u{c8c69}';
_10.fld0 = [8156_i16,3407_i16,9214_i16,(-2168_i16),17449_i16,9576_i16,9372_i16];
_10.fld0 = [(-14839_i16),(-8073_i16),6411_i16,(-25707_i16),31339_i16,30301_i16,17457_i16];
_1 = _2;
Goto(bb1)
}
bb1 = {
_8.0 = _2.0;
_1.0 = (-309241780_i32) as f64;
_9 = (-8013349483775212728_i64) as f32;
_8.0 = _3;
_1.0 = -_8.0;
_1.0 = _8.0;
_2.0 = _8.0;
_1.0 = 1779917862_u32 as f64;
_1.0 = -_8.0;
_11 = 8462485817109313016_u64 | 3809869347524594007_u64;
_8.1 = !_1.1;
_9 = 4824214092723756437_usize as f32;
_2.0 = _8.0 + _8.0;
_4 = !_2.1;
_5 = !9223372036854775807_isize;
_5 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_11 = 894936719732763849_u64 << _2.1;
_4 = 2432054735_u32 as u16;
_1 = _8;
_1.0 = _3;
Goto(bb2)
}
bb2 = {
_10.fld0 = [(-3274_i16),(-16954_i16),(-30358_i16),29005_i16,(-22496_i16),(-7893_i16),(-2755_i16)];
_5 = 289235391823545851720114733131238647161_u128 as isize;
_4 = !_1.1;
_12 = _5 << _5;
_8 = _2;
_9 = (-39949488458704938361352979585301836474_i128) as f32;
_4 = _2.1 - _8.1;
_13 = _11 > _11;
_8.1 = _4;
Call(_8.1 = core::intrinsics::bswap(_1.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = [817263369_i32,(-473810163_i32),(-50758478_i32),1210239519_i32,(-271590384_i32),1860757652_i32];
_12 = _5 >> _8.1;
_8.1 = _1.1;
_14 = !_12;
RET = _2.1 as i64;
_4 = _1.1;
_13 = _2.0 != _8.0;
_8.0 = _11 as f64;
_2.0 = _1.0;
_10.fld0 = [25950_i16,(-22928_i16),(-23413_i16),395_i16,(-31662_i16),22600_i16,13579_i16];
RET = 20448_i16 as i64;
_1 = _8;
_8.1 = 1457663480_u32 as u16;
_12 = !_14;
_2.1 = _8.1 << _8.1;
RET = 4941310842805410526_i64;
_10.fld0 = [(-8278_i16),(-31717_i16),18364_i16,3826_i16,(-21805_i16),(-27856_i16),(-10537_i16)];
_17.1.0.0 = _3;
Goto(bb4)
}
bb4 = {
_13 = false & false;
_10.fld0 = [30310_i16,10186_i16,(-32570_i16),971_i16,9177_i16,7958_i16,(-21319_i16)];
_13 = !true;
RET = (-1988756527534255473_i64) & (-1302775597072366352_i64);
_2.0 = _9 as f64;
_1.1 = !_8.1;
_19 = -_8.0;
_17.1.1 = 270915530_u32;
_17.0.0 = !_14;
_8.0 = 59_u8 as f64;
_7 = [(-1741560914_i32),705198258_i32,(-1888894752_i32),(-1787155469_i32),1331273506_i32,(-190556500_i32)];
RET = 2184284410140736765_i64;
_18 = _19;
_17.0 = (_12, _7);
match _17.1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
270915530 => bb6,
_ => bb5
}
}
bb5 = {
_8.0 = _2.0;
_1.0 = (-309241780_i32) as f64;
_9 = (-8013349483775212728_i64) as f32;
_8.0 = _3;
_1.0 = -_8.0;
_1.0 = _8.0;
_2.0 = _8.0;
_1.0 = 1779917862_u32 as f64;
_1.0 = -_8.0;
_11 = 8462485817109313016_u64 | 3809869347524594007_u64;
_8.1 = !_1.1;
_9 = 4824214092723756437_usize as f32;
_2.0 = _8.0 + _8.0;
_4 = !_2.1;
_5 = !9223372036854775807_isize;
_5 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_11 = 894936719732763849_u64 << _2.1;
_4 = 2432054735_u32 as u16;
_1 = _8;
_1.0 = _3;
Goto(bb2)
}
bb6 = {
_5 = _12 * _12;
_21 = (_9, 5896199727003757616_i64, _11);
_1 = _8;
_2.0 = _18 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021681412104654867_f64;
_11 = _21.2 & _21.2;
_22 = _14;
_11 = 4411903018222626765674006881089260998_i128 as u64;
_5 = _17.0.0 << _1.1;
_13 = !false;
_16 = _3 + _2.0;
_1 = (_2.0, _2.1);
_17.3 = _21.1;
_18 = _1.0 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000452329025669045_f64;
_21.1 = _17.3 ^ _17.3;
_17.1.2 = 2049941233_i32;
_8.1 = _17.1.1 as u16;
_5 = !_12;
Call(_17.3 = core::intrinsics::transmute(_22), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_23 = _14 * _14;
_5 = 99_u8 as isize;
_17.1.0.1 = 72943637317042159040325273063924498610_i128 as u16;
_25 = core::ptr::addr_of!(_8.0);
_1.0 = _3;
_17.1.2 = -(-1792980800_i32);
_28 = -(-16_i8);
_12 = _22;
_28 = 4_u8 as i8;
Goto(bb8)
}
bb8 = {
_17.2 = _13 as u8;
_8.0 = -_16;
_30 = !_13;
_1 = (_2.0, _4);
_1.0 = _2.0 - (*_25);
_21.1 = _1.0 as i64;
_27 = !4_usize;
_29 = [_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_21.1,_17.3];
_21 = (_9, _17.3, _11);
_31 = core::ptr::addr_of!(_17.0);
_9 = _21.0 * _21.0;
_4 = !_2.1;
_17.2 = 142_u8 + 168_u8;
_19 = -(*_25);
(*_31) = (_23, _7);
_34 = -(*_31).0;
_17.1.3 = (632_i16,);
_17.0.0 = -_23;
_17.1.0.0 = (*_25) - _16;
_17.1.0.1 = !_4;
match _17.1.1 {
270915530 => bb9,
_ => bb5
}
}
bb9 = {
_2.1 = _28 as u16;
_35.fld0 = !_13;
_32 = 129536977923300027296355684618702002412_u128 + 214179095473383762546491426430553216148_u128;
_15 = [_17.1.3.0];
_5 = -(*_31).0;
_16 = _17.1.0.0;
_9 = _21.0 + _21.0;
_22 = (*_31).0;
_36 = !_13;
_35.fld5.0 = -_9;
_35.fld0 = _36;
_1.0 = _16 - (*_25);
_11 = !_21.2;
_27 = 7_usize;
Call(_17.1.0.1 = core::intrinsics::transmute(_17.1.3.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_29[_27] = _21.1 - _17.3;
_20 = !_27;
_37.fld4.0 = [_1.1,_8.1,_1.1,_4,_17.1.0.1,_4];
_6 = '\u{c0a2d}';
_1.1 = _23 as u16;
_18 = -(*_25);
_33.fld0 = core::ptr::addr_of_mut!(_35.fld0);
_2.0 = _17.2 as f64;
Goto(bb11)
}
bb11 = {
_17.0.0 = !_5;
_17.0.0 = _34;
_26 = core::ptr::addr_of!(_3);
_35.fld5.0 = _9 / f32::NAN;
_18 = _3;
_17.1.3.0 = 16128_i16 | (-12881_i16);
_14 = (*_31).0 & _23;
_17.0.0 = _23 - _14;
_2.1 = 107303649785165758823191469087799004763_i128 as u16;
_34 = (*_31).0 * _17.0.0;
_35.fld1 = core::ptr::addr_of_mut!(_10.fld0);
_1 = _8;
_21 = (_35.fld5.0, _29[_27], _11);
match _17.1.1 {
0 => bb4,
1 => bb12,
2 => bb13,
3 => bb14,
270915530 => bb16,
_ => bb15
}
}
bb12 = {
_29[_27] = _21.1 - _17.3;
_20 = !_27;
_37.fld4.0 = [_1.1,_8.1,_1.1,_4,_17.1.0.1,_4];
_6 = '\u{c0a2d}';
_1.1 = _23 as u16;
_18 = -(*_25);
_33.fld0 = core::ptr::addr_of_mut!(_35.fld0);
_2.0 = _17.2 as f64;
Goto(bb11)
}
bb13 = {
_7 = [817263369_i32,(-473810163_i32),(-50758478_i32),1210239519_i32,(-271590384_i32),1860757652_i32];
_12 = _5 >> _8.1;
_8.1 = _1.1;
_14 = !_12;
RET = _2.1 as i64;
_4 = _1.1;
_13 = _2.0 != _8.0;
_8.0 = _11 as f64;
_2.0 = _1.0;
_10.fld0 = [25950_i16,(-22928_i16),(-23413_i16),395_i16,(-31662_i16),22600_i16,13579_i16];
RET = 20448_i16 as i64;
_1 = _8;
_8.1 = 1457663480_u32 as u16;
_12 = !_14;
_2.1 = _8.1 << _8.1;
RET = 4941310842805410526_i64;
_10.fld0 = [(-8278_i16),(-31717_i16),18364_i16,3826_i16,(-21805_i16),(-27856_i16),(-10537_i16)];
_17.1.0.0 = _3;
Goto(bb4)
}
bb14 = {
_10.fld0 = [(-3274_i16),(-16954_i16),(-30358_i16),29005_i16,(-22496_i16),(-7893_i16),(-2755_i16)];
_5 = 289235391823545851720114733131238647161_u128 as isize;
_4 = !_1.1;
_12 = _5 << _5;
_8 = _2;
_9 = (-39949488458704938361352979585301836474_i128) as f32;
_4 = _2.1 - _8.1;
_13 = _11 > _11;
_8.1 = _4;
Call(_8.1 = core::intrinsics::bswap(_1.1), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_5 = _12 * _12;
_21 = (_9, 5896199727003757616_i64, _11);
_1 = _8;
_2.0 = _18 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021681412104654867_f64;
_11 = _21.2 & _21.2;
_22 = _14;
_11 = 4411903018222626765674006881089260998_i128 as u64;
_5 = _17.0.0 << _1.1;
_13 = !false;
_16 = _3 + _2.0;
_1 = (_2.0, _2.1);
_17.3 = _21.1;
_18 = _1.0 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000452329025669045_f64;
_21.1 = _17.3 ^ _17.3;
_17.1.2 = 2049941233_i32;
_8.1 = _17.1.1 as u16;
_5 = !_12;
Call(_17.3 = core::intrinsics::transmute(_22), ReturnTo(bb7), UnwindUnreachable())
}
bb16 = {
_15 = [_17.1.3.0];
_35.fld5.2 = _11 / 10981324566340243431_u64;
_9 = -_21.0;
_37.fld2.fld2.1 = _2.1 ^ _2.1;
_35.fld4.0 = [_29[_27],_21.1,_29[_27],_17.3,_29[_27],_17.3,_21.1,_21.1];
_15 = [_17.1.3.0];
_17.0 = (_14, _7);
_13 = _35.fld5.0 <= _35.fld5.0;
_35.fld4.0[_27] = _17.1.1 as i64;
_37.fld2.fld1.1 = [_17.1.2,_17.1.2,_17.1.2,_17.1.2,_17.1.2,_17.1.2];
_19 = _34 as f64;
Goto(bb17)
}
bb17 = {
Call(_43 = dump_var(8_usize, 30_usize, Move(_30), 5_usize, Move(_5), 28_usize, Move(_28), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_43 = dump_var(8_usize, 29_usize, Move(_29), 23_usize, Move(_23), 7_usize, Move(_7), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_43 = dump_var(8_usize, 22_usize, Move(_22), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: [i64; 2],mut _3: isize,mut _4: [i32; 6],mut _5: [i32; 6],mut _6: *const *const f64,mut _7: i128,mut _8: f64,mut _9: [i32; 6]) -> f32 {
mir! {
type RET = f32;
let _10: i128;
let _11: Adt64;
let _12: *mut [i16; 1];
let _13: isize;
let _14: *const (isize, [i32; 6]);
let _15: *mut bool;
let _16: [i64; 3];
let _17: u16;
let _18: [isize; 7];
let _19: bool;
let _20: [bool; 3];
let _21: u32;
let _22: usize;
let _23: f64;
let _24: (i16,);
let _25: char;
let _26: char;
let _27: ();
let _28: ();
{
_3 = !_1;
_10 = 165720356_i32 as i128;
_9 = [1936377253_i32,1577110768_i32,296545996_i32,596182845_i32,185473363_i32,1414696408_i32];
_7 = 37_u8 as i128;
RET = _3 as f32;
_11.fld2 = -_8;
RET = (-3652107133402832592_i64) as f32;
_5 = _9;
_1 = _3 << _10;
_11.fld0.1 = [(-1764529582_i32),(-926908217_i32),(-229644623_i32),1365147270_i32,1375991298_i32,(-261848447_i32)];
RET = 99168498492454505563873184070247425436_u128 as f32;
_11.fld0.0 = -_7;
_11.fld2 = _8 * _8;
_11.fld3.fld0 = [9568_i16,(-10154_i16),(-16785_i16),7625_i16,(-19868_i16),(-30203_i16),(-16336_i16)];
_13 = _1 | _1;
_5 = [(-337122569_i32),2048539799_i32,766463088_i32,(-11300936_i32),(-250381623_i32),2146416668_i32];
Call(_11 = fn10(_3, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14 = _11.fld1;
_10 = 153_u8 as i128;
_11.fld0.4 = _6;
_7 = _11.fld0.0;
_11.fld0.2 = [17071_i16,(-6563_i16),(-19052_i16),(-26277_i16),7920_i16,(-5830_i16),(-16268_i16)];
_11.fld0.2 = [22589_i16,(-19520_i16),(-2570_i16),17788_i16,(-19825_i16),(-21812_i16),10964_i16];
_16 = [9069398160167002656_i64,6997426943736247232_i64,3363197851519503458_i64];
_14 = _11.fld1;
_9 = _11.fld0.1;
_5 = _4;
_1 = 81267629470551128386019242000874076255_u128 as isize;
Goto(bb2)
}
bb2 = {
_14 = _11.fld1;
_11.fld0.4 = _6;
_11.fld3 = Adt63 { fld0: _11.fld0.2 };
RET = 239547992666609655265636886017675955293_u128 as f32;
_11.fld0.4 = _6;
_11.fld0.2 = [(-8423_i16),28758_i16,4166_i16,(-27458_i16),(-32260_i16),23355_i16,(-12023_i16)];
_3 = !_13;
_11.fld0.0 = _7;
_5 = _4;
_9 = [607752347_i32,(-164642484_i32),(-202360624_i32),587011243_i32,1598618697_i32,(-541818508_i32)];
_11.fld0.0 = _7;
_11.fld0 = (_7, _4, _11.fld3.fld0, _8, _6);
_11.fld0 = (_7, _4, _11.fld3.fld0, _11.fld2, _6);
Goto(bb3)
}
bb3 = {
_11.fld1 = _14;
_11.fld0.2 = _11.fld3.fld0;
_11.fld0 = (_7, _5, _11.fld3.fld0, _8, _6);
_11.fld0.3 = 16395058140244981869489889991679049160_u128 as f64;
RET = 112_i8 as f32;
_1 = !_13;
_1 = _3;
_8 = _11.fld2;
_1 = -_13;
_19 = true;
_2 = [1663663892321579629_i64,(-2458829747832719937_i64)];
_11.fld0.1 = [(-1720863114_i32),749861279_i32,(-415511712_i32),(-1710534407_i32),1590803030_i32,(-688927726_i32)];
_5 = [(-259036373_i32),(-588187987_i32),(-1966323895_i32),(-1345128942_i32),322338859_i32,(-1978220491_i32)];
_2 = [4117413421126527862_i64,214641368576708681_i64];
_10 = -_11.fld0.0;
_11.fld3 = Adt63 { fld0: _11.fld0.2 };
_21 = 1244520546_u32;
Goto(bb4)
}
bb4 = {
_6 = _11.fld0.4;
RET = (-1158472150288003124_i64) as f32;
match _21 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
1244520546 => bb13,
_ => bb12
}
}
bb5 = {
_11.fld1 = _14;
_11.fld0.2 = _11.fld3.fld0;
_11.fld0 = (_7, _5, _11.fld3.fld0, _8, _6);
_11.fld0.3 = 16395058140244981869489889991679049160_u128 as f64;
RET = 112_i8 as f32;
_1 = !_13;
_1 = _3;
_8 = _11.fld2;
_1 = -_13;
_19 = true;
_2 = [1663663892321579629_i64,(-2458829747832719937_i64)];
_11.fld0.1 = [(-1720863114_i32),749861279_i32,(-415511712_i32),(-1710534407_i32),1590803030_i32,(-688927726_i32)];
_5 = [(-259036373_i32),(-588187987_i32),(-1966323895_i32),(-1345128942_i32),322338859_i32,(-1978220491_i32)];
_2 = [4117413421126527862_i64,214641368576708681_i64];
_10 = -_11.fld0.0;
_11.fld3 = Adt63 { fld0: _11.fld0.2 };
_21 = 1244520546_u32;
Goto(bb4)
}
bb6 = {
_14 = _11.fld1;
_11.fld0.4 = _6;
_11.fld3 = Adt63 { fld0: _11.fld0.2 };
RET = 239547992666609655265636886017675955293_u128 as f32;
_11.fld0.4 = _6;
_11.fld0.2 = [(-8423_i16),28758_i16,4166_i16,(-27458_i16),(-32260_i16),23355_i16,(-12023_i16)];
_3 = !_13;
_11.fld0.0 = _7;
_5 = _4;
_9 = [607752347_i32,(-164642484_i32),(-202360624_i32),587011243_i32,1598618697_i32,(-541818508_i32)];
_11.fld0.0 = _7;
_11.fld0 = (_7, _4, _11.fld3.fld0, _8, _6);
_11.fld0 = (_7, _4, _11.fld3.fld0, _11.fld2, _6);
Goto(bb3)
}
bb7 = {
_14 = _11.fld1;
_10 = 153_u8 as i128;
_11.fld0.4 = _6;
_7 = _11.fld0.0;
_11.fld0.2 = [17071_i16,(-6563_i16),(-19052_i16),(-26277_i16),7920_i16,(-5830_i16),(-16268_i16)];
_11.fld0.2 = [22589_i16,(-19520_i16),(-2570_i16),17788_i16,(-19825_i16),(-21812_i16),10964_i16];
_16 = [9069398160167002656_i64,6997426943736247232_i64,3363197851519503458_i64];
_14 = _11.fld1;
_9 = _11.fld0.1;
_5 = _4;
_1 = 81267629470551128386019242000874076255_u128 as isize;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_2 = [(-6058067337305835944_i64),(-5338647119373151519_i64)];
_22 = _19 as usize;
_19 = !false;
_11.fld0.1 = _9;
_13 = _1 << _11.fld0.0;
RET = (-5829_i16) as f32;
_2 = [5598053828077688189_i64,(-3061959659179576323_i64)];
_11.fld3.fld0 = [5749_i16,(-20258_i16),16613_i16,30813_i16,(-20534_i16),595_i16,(-17154_i16)];
_11.fld3 = Adt63 { fld0: _11.fld0.2 };
_22 = 9000308229895743977_usize & 1_usize;
_17 = 41638_u16;
_1 = _13;
_2 = [(-8834595592684710585_i64),3264809087307712676_i64];
_26 = '\u{44185}';
_11.fld3.fld0 = [(-9728_i16),(-30386_i16),(-14807_i16),(-17415_i16),21856_i16,(-27262_i16),7556_i16];
_11.fld0.3 = 1598329749_i32 as f64;
_21 = 574231619_u32 & 3811900981_u32;
Goto(bb14)
}
bb14 = {
_2 = [(-8144611736738687054_i64),5459737799731013406_i64];
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(9_usize, 26_usize, Move(_26), 22_usize, Move(_22), 4_usize, Move(_4), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(9_usize, 10_usize, Move(_10), 2_usize, Move(_2), 21_usize, Move(_21), 28_usize, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: [i64; 2]) -> Adt64 {
mir! {
type RET = Adt64;
let _3: Adt64;
let _4: (i16,);
let _5: (f64, u16);
let _6: f32;
let _7: f32;
let _8: char;
let _9: u8;
let _10: [isize; 7];
let _11: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _12: [i64; 2];
let _13: f64;
let _14: Adt49;
let _15: f64;
let _16: *mut *const u64;
let _17: char;
let _18: isize;
let _19: f32;
let _20: usize;
let _21: i16;
let _22: usize;
let _23: [isize; 7];
let _24: isize;
let _25: [i64; 8];
let _26: u32;
let _27: *const *const f64;
let _28: Adt53;
let _29: [i64; 8];
let _30: f64;
let _31: (*const u64,);
let _32: [isize; 7];
let _33: [i64; 8];
let _34: i16;
let _35: u128;
let _36: (f32, i64, u64);
let _37: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _38: i8;
let _39: bool;
let _40: ([i64; 8], [usize; 4]);
let _41: Adt57;
let _42: bool;
let _43: i8;
let _44: isize;
let _45: f64;
let _46: i16;
let _47: char;
let _48: Adt64;
let _49: char;
let _50: *mut *const u64;
let _51: f32;
let _52: i16;
let _53: char;
let _54: Adt52;
let _55: (i16,);
let _56: isize;
let _57: isize;
let _58: *const i128;
let _59: (f64, u16);
let _60: f32;
let _61: char;
let _62: Adt59;
let _63: [u128; 3];
let _64: i128;
let _65: u16;
let _66: f64;
let _67: i8;
let _68: Adt60;
let _69: i8;
let _70: f32;
let _71: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _72: i128;
let _73: i128;
let _74: isize;
let _75: (f32, i64, u64);
let _76: (i16,);
let _77: [i16; 7];
let _78: u16;
let _79: [i64; 8];
let _80: bool;
let _81: ((f64, u16), u32, i32, (i16,));
let _82: isize;
let _83: *const *const f64;
let _84: f32;
let _85: char;
let _86: f32;
let _87: [i64; 2];
let _88: [bool; 3];
let _89: usize;
let _90: char;
let _91: [i16; 7];
let _92: u16;
let _93: char;
let _94: isize;
let _95: f32;
let _96: *const f64;
let _97: f32;
let _98: [i16; 1];
let _99: i128;
let _100: usize;
let _101: u64;
let _102: u32;
let _103: i32;
let _104: u8;
let _105: *mut bool;
let _106: f32;
let _107: Adt59;
let _108: i128;
let _109: isize;
let _110: u8;
let _111: f64;
let _112: f64;
let _113: [usize; 4];
let _114: u128;
let _115: i128;
let _116: ();
let _117: ();
{
RET.fld0.1 = [(-1049157829_i32),(-1883897417_i32),849147892_i32,375530605_i32,(-1346094063_i32),(-556480381_i32)];
RET.fld0.0 = 4119836925_u32 as i128;
RET.fld0.1 = [(-219140395_i32),(-1339740673_i32),(-1855249129_i32),1105821695_i32,123859935_i32,1005669890_i32];
_3.fld0.1 = [860289524_i32,692343627_i32,(-1836361603_i32),1214125773_i32,(-339169701_i32),76379356_i32];
_3.fld0.0 = -(-144065033383423554620605293604865040330_i128);
RET.fld3.fld0 = [(-32642_i16),20114_i16,(-27363_i16),10806_i16,(-29274_i16),23535_i16,29853_i16];
_4 = (20982_i16,);
_3.fld0.0 = -(-74384640442671827467511800798212249092_i128);
_5.0 = 3110029266_u32 as f64;
RET.fld2 = _5.0;
_3.fld2 = -_5.0;
_6 = 21708_u16 as f32;
_5 = (_3.fld2, 20477_u16);
RET.fld3.fld0 = [_4.0,_4.0,_4.0,_4.0,_4.0,_4.0,_4.0];
Goto(bb1)
}
bb1 = {
_11.0.0 = _1;
_11.1.0.0 = _3.fld2;
_11.0.0 = _3.fld0.0 as isize;
RET.fld0.3 = -_5.0;
Goto(bb2)
}
bb2 = {
_11.1.3 = (_4.0,);
RET.fld0.3 = _5.0;
_11.1.0 = (_5.0, _5.1);
RET.fld0.3 = -_3.fld2;
RET.fld0.3 = _11.1.0.0;
_11.2 = (-2056550470_i32) as u8;
_11.1.3.0 = _4.0;
RET.fld2 = _3.fld0.0 as f64;
_11.1.1 = '\u{9d4c}' as u32;
RET.fld0.1 = _3.fld0.1;
RET.fld3.fld0 = [_4.0,_4.0,_11.1.3.0,_11.1.3.0,_4.0,_11.1.3.0,_11.1.3.0];
_14.fld1 = [_11.0.0,_1,_1,_1,_1,_1,_11.0.0];
RET.fld0.0 = _3.fld0.0;
Call(_9 = core::intrinsics::bswap(_11.2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_11.1.0.0 = -_5.0;
_7 = _6;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
RET.fld0.3 = _11.1.0.0;
_11.2 = 120_u8 & 160_u8;
_11.1.2 = 1380001477_i32 << _1;
RET.fld0.2 = [_4.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0,_11.1.3.0];
_3.fld3.fld0 = [_4.0,_11.1.3.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0];
_14.fld0.0.1 = _4.0 as u16;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
_3.fld1 = core::ptr::addr_of!(_11.0);
RET.fld3.fld0 = _3.fld3.fld0;
_8 = '\u{d7774}';
match _11.1.0.1 {
20477 => bb4,
_ => bb1
}
}
bb4 = {
_7 = _6 * _6;
_11.0.1 = _3.fld0.1;
_8 = '\u{67e53}';
_14.fld0.0 = (_5.0, _5.1);
_7 = -_6;
_4 = (_11.1.3.0,);
_4.0 = _11.1.3.0 >> _5.1;
_11.3 = -8824225070653318680_i64;
_12 = [_11.3,_11.3];
RET.fld0.2 = [_4.0,_4.0,_11.1.3.0,_4.0,_4.0,_11.1.3.0,_4.0];
Call(RET.fld0.0 = core::intrinsics::bswap(_3.fld0.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_14.fld0.2 = false as i32;
_13 = _14.fld0.0.0;
_7 = -_6;
_11.1.2 = _14.fld0.2 & _14.fld0.2;
_12 = [_11.3,_11.3];
RET.fld1 = _3.fld1;
_14.fld0.2 = _3.fld2 as i32;
Call(_14.fld0.3.0 = core::intrinsics::bswap(_4.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_3.fld3.fld0 = [_4.0,_4.0,_4.0,_4.0,_4.0,_11.1.3.0,_4.0];
_19 = _6 - _6;
_1 = _11.1.1 as isize;
_11.1.0.1 = _5.1;
_2 = [_11.3,_11.3];
_6 = _19 / 0.000000000000000000000000000000000000006402273443284189_f32;
RET.fld2 = _3.fld0.0 as f64;
RET.fld1 = core::ptr::addr_of!(_11.0);
_11.1.0.0 = -_5.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
match _14.fld0.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
20477 => bb9,
_ => bb8
}
}
bb7 = {
_11.1.0.0 = -_5.0;
_7 = _6;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
RET.fld0.3 = _11.1.0.0;
_11.2 = 120_u8 & 160_u8;
_11.1.2 = 1380001477_i32 << _1;
RET.fld0.2 = [_4.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0,_11.1.3.0];
_3.fld3.fld0 = [_4.0,_11.1.3.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0];
_14.fld0.0.1 = _4.0 as u16;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
_3.fld1 = core::ptr::addr_of!(_11.0);
RET.fld3.fld0 = _3.fld3.fld0;
_8 = '\u{d7774}';
match _11.1.0.1 {
20477 => bb4,
_ => bb1
}
}
bb8 = {
_7 = _6 * _6;
_11.0.1 = _3.fld0.1;
_8 = '\u{67e53}';
_14.fld0.0 = (_5.0, _5.1);
_7 = -_6;
_4 = (_11.1.3.0,);
_4.0 = _11.1.3.0 >> _5.1;
_11.3 = -8824225070653318680_i64;
_12 = [_11.3,_11.3];
RET.fld0.2 = [_4.0,_4.0,_11.1.3.0,_4.0,_4.0,_11.1.3.0,_4.0];
Call(RET.fld0.0 = core::intrinsics::bswap(_3.fld0.0), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
RET.fld3.fld0 = [_4.0,_4.0,_4.0,_4.0,_4.0,_4.0,_4.0];
_12 = _2;
_6 = _19;
_11.0 = (_1, _3.fld0.1);
_6 = _4.0 as f32;
RET.fld0.2 = [_4.0,_4.0,_11.1.3.0,_4.0,_4.0,_4.0,_4.0];
_11.1.0.0 = -_13;
_14.fld0 = (_11.1.0, _11.1.1, _11.1.2, _4);
RET.fld2 = _13 - _11.1.0.0;
_8 = '\u{d0a2d}';
_14.fld0.0 = (_5.0, _11.1.0.1);
_14.fld0 = (_11.1.0, _11.1.1, _11.1.2, _4);
_3.fld2 = _14.fld0.2 as f64;
_14.fld0.3.0 = _4.0 - _11.1.3.0;
_14.fld0 = (_11.1.0, _11.1.1, _11.1.2, _4);
_14.fld0 = (_11.1.0, _11.1.1, _11.1.2, _11.1.3);
_14.fld1 = [_1,_11.0.0,_11.0.0,_11.0.0,_1,_11.0.0,_1];
_11.1.2 = _14.fld0.2;
_7 = _19 * _6;
Goto(bb10)
}
bb10 = {
_2 = [_11.3,_11.3];
_14.fld0.0.1 = !_11.1.0.1;
_18 = _11.0.0;
_14.fld0.0 = (_3.fld2, _5.1);
_3.fld0.3 = _14.fld0.0.0;
_24 = !_1;
_14.fld0 = _11.1;
RET.fld3.fld0 = [_11.1.3.0,_14.fld0.3.0,_4.0,_14.fld0.3.0,_4.0,_14.fld0.3.0,_14.fld0.3.0];
RET.fld0.3 = _11.1.0.0 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014026270179996006_f64);
_11.0.1 = [_14.fld0.2,_11.1.2,_14.fld0.2,_14.fld0.2,_11.1.2,_14.fld0.2];
_11.1.0 = _5;
_14.fld0.0 = (_13, _11.1.0.1);
_14.fld0.0 = (_3.fld0.3, _11.1.0.1);
_3.fld0.2 = [_4.0,_11.1.3.0,_14.fld0.3.0,_4.0,_11.1.3.0,_14.fld0.3.0,_4.0];
match _11.1.0.1 {
0 => bb4,
1 => bb7,
2 => bb11,
20477 => bb13,
_ => bb12
}
}
bb11 = {
_11.1.0.0 = -_5.0;
_7 = _6;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
RET.fld0.3 = _11.1.0.0;
_11.2 = 120_u8 & 160_u8;
_11.1.2 = 1380001477_i32 << _1;
RET.fld0.2 = [_4.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0,_11.1.3.0];
_3.fld3.fld0 = [_4.0,_11.1.3.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0];
_14.fld0.0.1 = _4.0 as u16;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
_3.fld1 = core::ptr::addr_of!(_11.0);
RET.fld3.fld0 = _3.fld3.fld0;
_8 = '\u{d7774}';
match _11.1.0.1 {
20477 => bb4,
_ => bb1
}
}
bb12 = {
_7 = _6 * _6;
_11.0.1 = _3.fld0.1;
_8 = '\u{67e53}';
_14.fld0.0 = (_5.0, _5.1);
_7 = -_6;
_4 = (_11.1.3.0,);
_4.0 = _11.1.3.0 >> _5.1;
_11.3 = -8824225070653318680_i64;
_12 = [_11.3,_11.3];
RET.fld0.2 = [_4.0,_4.0,_11.1.3.0,_4.0,_4.0,_11.1.3.0,_4.0];
Call(RET.fld0.0 = core::intrinsics::bswap(_3.fld0.0), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_14.fld0.3.0 = -_11.1.3.0;
_22 = !4_usize;
RET.fld0.3 = -_14.fld0.0.0;
RET.fld0.0 = _3.fld0.0;
RET.fld3 = Adt63 { fld0: _3.fld3.fld0 };
_11.2 = (-14_i8) as u8;
_14.fld0.0 = _5;
_19 = _5.1 as f32;
RET.fld2 = _5.0;
_28.fld1 = _3.fld0.1;
_11.1.0.1 = _13 as u16;
_14.fld0.0 = (_3.fld2, _5.1);
_3.fld0.2 = _3.fld3.fld0;
_2 = _12;
_21 = _11.3 as i16;
_14.fld0.1 = (-36_i8) as u32;
_14.fld0.2 = _11.1.2;
RET.fld1 = core::ptr::addr_of!(_11.0);
_3.fld0.3 = _5.0 - _14.fld0.0.0;
_10 = [_11.0.0,_24,_18,_24,_11.0.0,_1,_11.0.0];
_11.0 = (_18, _3.fld0.1);
RET.fld2 = _11.2 as f64;
_3.fld0.2 = [_4.0,_4.0,_14.fld0.3.0,_4.0,_21,_14.fld0.3.0,_14.fld0.3.0];
Call(_14.fld0.0.0 = core::intrinsics::transmute(_11.3), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23 = [_18,_11.0.0,_11.0.0,_11.0.0,_1,_1,_24];
_37.0 = (_18, _11.0.1);
_5.1 = _14.fld0.0.1 << _1;
_19 = _6 * _7;
_5.1 = _11.1.0.1 + _14.fld0.0.1;
_7 = -_6;
RET.fld0.0 = _19 as i128;
_37.3 = _11.3 - _11.3;
_37.1.3 = (_14.fld0.3.0,);
RET.fld0.0 = !_3.fld0.0;
_37.1.0 = (_11.1.0.0, _5.1);
_37.0.1 = [_14.fld0.2,_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2,_11.1.2];
_28 = Adt53 { fld0: _2,fld1: _3.fld0.1 };
_9 = _11.2 & _11.2;
Goto(bb15)
}
bb15 = {
_3.fld0.0 = 2198131921217409379_u64 as i128;
_34 = -_14.fld0.3.0;
RET.fld3.fld0 = _3.fld3.fld0;
RET.fld3 = Move(_3.fld3);
_14.fld0.0.1 = _37.1.0.1 % 54281_u16;
_10 = [_11.0.0,_24,_11.0.0,_11.0.0,_1,_11.0.0,_24];
_37.1.3 = _4;
_14.fld0.3 = _4;
_11.0.0 = _24;
_41.fld0 = Adt56 { fld0: 8170043010510359927733704328613678460_u128 };
RET.fld0.2 = [_11.1.3.0,_14.fld0.3.0,_14.fld0.3.0,_4.0,_4.0,_14.fld0.3.0,_37.1.3.0];
_16 = core::ptr::addr_of_mut!(_31.0);
_11.1 = _14.fld0;
_26 = _11.1.1 - _11.1.1;
_24 = _22 as isize;
_37.3 = !_11.3;
RET.fld3 = Adt63 { fld0: _3.fld0.2 };
_14.fld0.1 = !_11.1.1;
_41.fld1.0 = 4767196811536150996_u64 as isize;
_20 = _22;
_31.0 = core::ptr::addr_of!(_36.2);
_37.1.1 = !_11.1.1;
(*_16) = core::ptr::addr_of!(_36.2);
_36.2 = 6502078847009575154_u64 ^ 3516641588801158004_u64;
Call(_41.fld2.1 = core::intrinsics::transmute(_14.fld0.3.0), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_1 = _36.2 as isize;
_3.fld0.1 = [_11.1.2,_14.fld0.2,_14.fld0.2,_14.fld0.2,_11.1.2,_14.fld0.2];
_21 = !_14.fld0.3.0;
_39 = false;
_37.0.1 = [_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2,_11.1.2,_11.1.2];
_36.1 = !_11.3;
_14.fld0.3 = (_21,);
_43 = 113_i8;
RET.fld0.2 = [_37.1.3.0,_14.fld0.3.0,_21,_37.1.3.0,_37.1.3.0,_4.0,_4.0];
RET.fld0.1 = [_14.fld0.2,_11.1.2,_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2];
_34 = !_14.fld0.3.0;
_14.fld0.1 = _11.1.3.0 as u32;
_11.1.0.0 = _9 as f64;
_11.0 = _37.0;
_22 = !_20;
_25 = [_11.3,_37.3,_36.1,_11.3,_11.3,_37.3,_11.3,_11.3];
_37.0 = (_24, _28.fld1);
_9 = _11.2 / 10_u8;
_40.0 = [_11.3,_37.3,_36.1,_36.1,_11.3,_37.3,_37.3,_36.1];
_42 = _11.1.1 != _26;
_15 = _3.fld2 * _11.1.0.0;
Goto(bb17)
}
bb17 = {
_11.1.2 = _8 as i32;
_37.3 = _11.3 ^ _11.3;
_41.fld2 = (_3.fld0.3, _11.1.0.1);
_47 = _8;
_11.1.0 = (_3.fld0.3, _5.1);
_28.fld0 = _12;
_11.1.1 = !_26;
_3.fld0.1 = [_14.fld0.2,_14.fld0.2,_14.fld0.2,_14.fld0.2,_14.fld0.2,_14.fld0.2];
_24 = _37.0.0;
_41.fld2.1 = _42 as u16;
_9 = _11.2 & _11.2;
_50 = _16;
_37.2 = _11.2;
_42 = !_39;
_37.1.3.0 = !_11.1.3.0;
Call(_8 = fn11(_41.fld2, _11.1.3, _37.3, _3.fld0.0, _37.0, _25, _7, _14.fld0, (*_50), _40.0, _11, _10, _41.fld1.0, _11, _37.0, _11.3), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
_11.1.0.0 = _15;
_19 = _37.3 as f32;
Goto(bb19)
}
bb19 = {
_11.1.1 = _14.fld0.1;
_49 = _47;
_37 = _11;
_26 = _11.1.1;
_41.fld2.1 = !_5.1;
match _43 {
0 => bb12,
113 => bb20,
_ => bb14
}
}
bb20 = {
RET.fld0.2 = _3.fld0.2;
_11.1 = _14.fld0;
(*_16) = core::ptr::addr_of!(_36.2);
_48.fld0.2 = _3.fld0.2;
_13 = _41.fld0.fld0 as f64;
Goto(bb21)
}
bb21 = {
_48.fld0.0 = _3.fld0.0 << _11.1.0.1;
_37.0.0 = -_1;
_51 = _6 - _19;
_11.0 = _37.0;
_25 = [_11.3,_11.3,_11.3,_11.3,_11.3,_11.3,_37.3,_11.3];
_28.fld0 = [_11.3,_11.3];
_54.fld0 = _48.fld0.0 | _48.fld0.0;
_57 = _21 as isize;
_14.fld0.0.1 = _37.1.0.1 - _37.1.0.1;
_39 = _4.0 > _21;
RET.fld0.1 = [_37.1.2,_11.1.2,_37.1.2,_14.fld0.2,_14.fld0.2,_37.1.2];
_48.fld3 = Adt63 { fld0: _48.fld0.2 };
_54.fld0 = _48.fld0.0 << _37.3;
_11.1.3.0 = _34;
Goto(bb22)
}
bb22 = {
_7 = _51 * _6;
_3.fld0.1 = [_11.1.2,_14.fld0.2,_14.fld0.2,_14.fld0.2,_37.1.2,_37.1.2];
_54.fld1.0 = _54.fld0;
RET.fld3 = Move(_48.fld3);
_5.1 = _14.fld0.0.1 >> _20;
_55 = _4;
_29 = [_37.3,_37.3,_36.1,_36.1,_36.1,_36.1,_36.1,_37.3];
RET.fld1 = core::ptr::addr_of!(_41.fld1);
_62.fld0.fld2.0 = _14.fld0.0.0 - _15;
_37.1 = _14.fld0;
_62.fld0.fld2 = (_13, _14.fld0.0.1);
_37.1.0.1 = _62.fld0.fld2.1 & _62.fld0.fld2.1;
_62.fld0.fld1.1 = _28.fld1;
_54.fld1.1 = _11.0.1;
_58 = core::ptr::addr_of!(_54.fld0);
_62.fld0.fld0 = _41.fld0;
Goto(bb23)
}
bb23 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
_61 = _47;
_48.fld0.2 = [_14.fld0.3.0,_14.fld0.3.0,_37.1.3.0,_37.1.3.0,_34,_55.0,_55.0];
_62.fld5 = _4.0 as i32;
_48.fld2 = _3.fld0.3;
_48.fld2 = _30 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012889748861754747_f64);
_33 = _29;
_20 = !_22;
_37.1.0 = (_5.0, _62.fld0.fld2.1);
_28.fld0 = _2;
_68.fld1 = core::ptr::addr_of_mut!(_54.fld1.2);
_28.fld0 = [_11.3,_11.3];
_71.1.0.0 = _62.fld0.fld0.fld0 as f64;
_56 = _14.fld0.1 as isize;
_62.fld5 = _37.1.2;
_4 = (_14.fld0.3.0,);
_54.fld1.2 = [_37.1.3.0,_11.1.3.0,_4.0,_21,_55.0,_21,_21];
_71.0.1 = _54.fld1.1;
_37.1.0.1 = _11.3 as u16;
_5.0 = _48.fld2;
_6 = _51;
match _43 {
0 => bb7,
1 => bb14,
2 => bb18,
3 => bb25,
113 => bb27,
_ => bb26
}
}
bb25 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb26 = {
RET.fld0.2 = _3.fld0.2;
_11.1 = _14.fld0;
(*_16) = core::ptr::addr_of!(_36.2);
_48.fld0.2 = _3.fld0.2;
_13 = _41.fld0.fld0 as f64;
Goto(bb21)
}
bb27 = {
_14 = Adt49 { fld0: _11.1,fld1: _23 };
_48.fld1 = _3.fld1;
_71.0 = (_18, _3.fld0.1);
_71.1.3 = (_37.1.3.0,);
_54.fld1.2 = [_11.1.3.0,_55.0,_21,_55.0,_71.1.3.0,_34,_34];
_63 = [_62.fld0.fld0.fld0,_62.fld0.fld0.fld0,_62.fld0.fld0.fld0];
_61 = _8;
_37.1.0.1 = _36.2 as u16;
_71.1.0.1 = !_14.fld0.0.1;
_54.fld3 = [_11.0.0,_56,_57,_1,_71.0.0,_24,_11.0.0];
_68.fld5 = (_7, _11.3, _36.2);
RET.fld1 = core::ptr::addr_of!(_62.fld0.fld1);
_62.fld2 = ((*_50),);
RET.fld0.3 = _38 as f64;
_67 = _43 ^ _62.fld3.0;
_11.1 = (_41.fld2, _26, _14.fld0.2, _71.1.3);
_11.1.0 = (_30, _71.1.0.1);
_48.fld0.1 = [_11.1.2,_14.fld0.2,_62.fld5,_11.1.2,_62.fld5,_62.fld5];
match _68.fld5.2 {
0 => bb22,
1 => bb28,
2 => bb29,
3 => bb30,
17314344955060276139 => bb32,
_ => bb31
}
}
bb28 = {
_14.fld0.3.0 = -_11.1.3.0;
_22 = !4_usize;
RET.fld0.3 = -_14.fld0.0.0;
RET.fld0.0 = _3.fld0.0;
RET.fld3 = Adt63 { fld0: _3.fld3.fld0 };
_11.2 = (-14_i8) as u8;
_14.fld0.0 = _5;
_19 = _5.1 as f32;
RET.fld2 = _5.0;
_28.fld1 = _3.fld0.1;
_11.1.0.1 = _13 as u16;
_14.fld0.0 = (_3.fld2, _5.1);
_3.fld0.2 = _3.fld3.fld0;
_2 = _12;
_21 = _11.3 as i16;
_14.fld0.1 = (-36_i8) as u32;
_14.fld0.2 = _11.1.2;
RET.fld1 = core::ptr::addr_of!(_11.0);
_3.fld0.3 = _5.0 - _14.fld0.0.0;
_10 = [_11.0.0,_24,_18,_24,_11.0.0,_1,_11.0.0];
_11.0 = (_18, _3.fld0.1);
RET.fld2 = _11.2 as f64;
_3.fld0.2 = [_4.0,_4.0,_14.fld0.3.0,_4.0,_21,_14.fld0.3.0,_14.fld0.3.0];
Call(_14.fld0.0.0 = core::intrinsics::transmute(_11.3), ReturnTo(bb14), UnwindUnreachable())
}
bb29 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb30 = {
_1 = _36.2 as isize;
_3.fld0.1 = [_11.1.2,_14.fld0.2,_14.fld0.2,_14.fld0.2,_11.1.2,_14.fld0.2];
_21 = !_14.fld0.3.0;
_39 = false;
_37.0.1 = [_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2,_11.1.2,_11.1.2];
_36.1 = !_11.3;
_14.fld0.3 = (_21,);
_43 = 113_i8;
RET.fld0.2 = [_37.1.3.0,_14.fld0.3.0,_21,_37.1.3.0,_37.1.3.0,_4.0,_4.0];
RET.fld0.1 = [_14.fld0.2,_11.1.2,_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2];
_34 = !_14.fld0.3.0;
_14.fld0.1 = _11.1.3.0 as u32;
_11.1.0.0 = _9 as f64;
_11.0 = _37.0;
_22 = !_20;
_25 = [_11.3,_37.3,_36.1,_11.3,_11.3,_37.3,_11.3,_11.3];
_37.0 = (_24, _28.fld1);
_9 = _11.2 / 10_u8;
_40.0 = [_11.3,_37.3,_36.1,_36.1,_11.3,_37.3,_37.3,_36.1];
_42 = _11.1.1 != _26;
_15 = _3.fld2 * _11.1.0.0;
Goto(bb17)
}
bb31 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb32 = {
_11.0 = (_71.0.0, _48.fld0.1);
_16 = core::ptr::addr_of_mut!((*_50));
_74 = _18;
_59.1 = _37.1.0.1 ^ _62.fld0.fld2.1;
_62.fld7 = (*_58) & _54.fld0;
_68.fld6 = _11.3 ^ _11.3;
_38 = _34 as i8;
_6 = -_51;
_14.fld0 = (_62.fld0.fld2, _37.1.1, _11.1.2, _55);
RET.fld1 = _48.fld1;
_48.fld0.3 = _41.fld0.fld0 as f64;
_45 = -_41.fld2.0;
_68.fld5.1 = _17 as i64;
_28 = Adt53 { fld0: _12,fld1: _3.fld0.1 };
_28 = Adt53 { fld0: _12,fld1: _41.fld1.1 };
(*_16) = core::ptr::addr_of!(_75.2);
_2 = _12;
_59.0 = _15 * _14.fld0.0.0;
_3.fld0.0 = _48.fld2 as i128;
_62.fld0.fld0 = Adt56 { fld0: _41.fld0.fld0 };
_4.0 = _37.3 as i16;
_37.2 = !_11.2;
match _41.fld0.fld0 {
0 => bb33,
8170043010510359927733704328613678460 => bb35,
_ => bb34
}
}
bb33 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb34 = {
_3.fld0.0 = 2198131921217409379_u64 as i128;
_34 = -_14.fld0.3.0;
RET.fld3.fld0 = _3.fld3.fld0;
RET.fld3 = Move(_3.fld3);
_14.fld0.0.1 = _37.1.0.1 % 54281_u16;
_10 = [_11.0.0,_24,_11.0.0,_11.0.0,_1,_11.0.0,_24];
_37.1.3 = _4;
_14.fld0.3 = _4;
_11.0.0 = _24;
_41.fld0 = Adt56 { fld0: 8170043010510359927733704328613678460_u128 };
RET.fld0.2 = [_11.1.3.0,_14.fld0.3.0,_14.fld0.3.0,_4.0,_4.0,_14.fld0.3.0,_37.1.3.0];
_16 = core::ptr::addr_of_mut!(_31.0);
_11.1 = _14.fld0;
_26 = _11.1.1 - _11.1.1;
_24 = _22 as isize;
_37.3 = !_11.3;
RET.fld3 = Adt63 { fld0: _3.fld0.2 };
_14.fld0.1 = !_11.1.1;
_41.fld1.0 = 4767196811536150996_u64 as isize;
_20 = _22;
_31.0 = core::ptr::addr_of!(_36.2);
_37.1.1 = !_11.1.1;
(*_16) = core::ptr::addr_of!(_36.2);
_36.2 = 6502078847009575154_u64 ^ 3516641588801158004_u64;
Call(_41.fld2.1 = core::intrinsics::transmute(_14.fld0.3.0), ReturnTo(bb16), UnwindUnreachable())
}
bb35 = {
_62.fld0.fld2.1 = _14.fld0.0.1 & _14.fld0.0.1;
_78 = _14.fld0.1 as u16;
_76 = (_14.fld0.3.0,);
_58 = core::ptr::addr_of!(_64);
_55.0 = _11.1.3.0;
_54.fld4 = _34;
_62.fld3.3 = _9 >> _62.fld7;
_49 = _53;
_70 = _11.1.2 as f32;
_41.fld0.fld0 = _11.3 as u128;
_64 = _3.fld0.0 >> _38;
_70 = _68.fld5.0 / 0.0000000000000000000000000000000000000020599101438559454_f32;
_68.fld4.1 = [_20,_22,_20,_20];
match _62.fld0.fld0.fld0 {
0 => bb36,
1 => bb37,
2 => bb38,
3 => bb39,
4 => bb40,
5 => bb41,
6 => bb42,
8170043010510359927733704328613678460 => bb44,
_ => bb43
}
}
bb36 = {
RET.fld0.2 = _3.fld0.2;
_11.1 = _14.fld0;
(*_16) = core::ptr::addr_of!(_36.2);
_48.fld0.2 = _3.fld0.2;
_13 = _41.fld0.fld0 as f64;
Goto(bb21)
}
bb37 = {
_11.1.0.0 = -_5.0;
_7 = _6;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
RET.fld0.3 = _11.1.0.0;
_11.2 = 120_u8 & 160_u8;
_11.1.2 = 1380001477_i32 << _1;
RET.fld0.2 = [_4.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0,_11.1.3.0];
_3.fld3.fld0 = [_4.0,_11.1.3.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0];
_14.fld0.0.1 = _4.0 as u16;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
_3.fld1 = core::ptr::addr_of!(_11.0);
RET.fld3.fld0 = _3.fld3.fld0;
_8 = '\u{d7774}';
match _11.1.0.1 {
20477 => bb4,
_ => bb1
}
}
bb38 = {
_1 = _36.2 as isize;
_3.fld0.1 = [_11.1.2,_14.fld0.2,_14.fld0.2,_14.fld0.2,_11.1.2,_14.fld0.2];
_21 = !_14.fld0.3.0;
_39 = false;
_37.0.1 = [_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2,_11.1.2,_11.1.2];
_36.1 = !_11.3;
_14.fld0.3 = (_21,);
_43 = 113_i8;
RET.fld0.2 = [_37.1.3.0,_14.fld0.3.0,_21,_37.1.3.0,_37.1.3.0,_4.0,_4.0];
RET.fld0.1 = [_14.fld0.2,_11.1.2,_14.fld0.2,_11.1.2,_11.1.2,_14.fld0.2];
_34 = !_14.fld0.3.0;
_14.fld0.1 = _11.1.3.0 as u32;
_11.1.0.0 = _9 as f64;
_11.0 = _37.0;
_22 = !_20;
_25 = [_11.3,_37.3,_36.1,_11.3,_11.3,_37.3,_11.3,_11.3];
_37.0 = (_24, _28.fld1);
_9 = _11.2 / 10_u8;
_40.0 = [_11.3,_37.3,_36.1,_36.1,_11.3,_37.3,_37.3,_36.1];
_42 = _11.1.1 != _26;
_15 = _3.fld2 * _11.1.0.0;
Goto(bb17)
}
bb39 = {
_14.fld0.2 = false as i32;
_13 = _14.fld0.0.0;
_7 = -_6;
_11.1.2 = _14.fld0.2 & _14.fld0.2;
_12 = [_11.3,_11.3];
RET.fld1 = _3.fld1;
_14.fld0.2 = _3.fld2 as i32;
Call(_14.fld0.3.0 = core::intrinsics::bswap(_4.0), ReturnTo(bb6), UnwindUnreachable())
}
bb40 = {
_3.fld3.fld0 = [_4.0,_4.0,_4.0,_4.0,_4.0,_11.1.3.0,_4.0];
_19 = _6 - _6;
_1 = _11.1.1 as isize;
_11.1.0.1 = _5.1;
_2 = [_11.3,_11.3];
_6 = _19 / 0.000000000000000000000000000000000000006402273443284189_f32;
RET.fld2 = _3.fld0.0 as f64;
RET.fld1 = core::ptr::addr_of!(_11.0);
_11.1.0.0 = -_5.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
match _14.fld0.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
20477 => bb9,
_ => bb8
}
}
bb41 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb42 = {
_14.fld0.3.0 = -_11.1.3.0;
_22 = !4_usize;
RET.fld0.3 = -_14.fld0.0.0;
RET.fld0.0 = _3.fld0.0;
RET.fld3 = Adt63 { fld0: _3.fld3.fld0 };
_11.2 = (-14_i8) as u8;
_14.fld0.0 = _5;
_19 = _5.1 as f32;
RET.fld2 = _5.0;
_28.fld1 = _3.fld0.1;
_11.1.0.1 = _13 as u16;
_14.fld0.0 = (_3.fld2, _5.1);
_3.fld0.2 = _3.fld3.fld0;
_2 = _12;
_21 = _11.3 as i16;
_14.fld0.1 = (-36_i8) as u32;
_14.fld0.2 = _11.1.2;
RET.fld1 = core::ptr::addr_of!(_11.0);
_3.fld0.3 = _5.0 - _14.fld0.0.0;
_10 = [_11.0.0,_24,_18,_24,_11.0.0,_1,_11.0.0];
_11.0 = (_18, _3.fld0.1);
RET.fld2 = _11.2 as f64;
_3.fld0.2 = [_4.0,_4.0,_14.fld0.3.0,_4.0,_21,_14.fld0.3.0,_14.fld0.3.0];
Call(_14.fld0.0.0 = core::intrinsics::transmute(_11.3), ReturnTo(bb14), UnwindUnreachable())
}
bb43 = {
_11.1.0.0 = _15;
_19 = _37.3 as f32;
Goto(bb19)
}
bb44 = {
_71.1.3 = (_55.0,);
_41.fld0 = Adt56 { fld0: _62.fld0.fld0.fld0 };
_28.fld1 = _41.fld1.1;
_41.fld0.fld0 = !_62.fld0.fld0.fld0;
_1 = -_56;
_37.1 = (_71.1.0, _14.fld0.1, _14.fld0.2, _76);
_71.1.1 = _62.fld0.fld0.fld0 as u32;
_11.1 = _14.fld0;
_71.1.1 = _37.1.1;
_41.fld0.fld0 = _62.fld0.fld0.fld0;
RET.fld3.fld0 = [_21,_76.0,_76.0,_54.fld4,_37.1.3.0,_54.fld4,_14.fld0.3.0];
_4.0 = -_55.0;
_29 = [_37.3,_68.fld6,_68.fld5.1,_68.fld6,_68.fld6,_68.fld5.1,_11.3,_11.3];
_71.3 = _68.fld6;
_62.fld0.fld0.fld0 = _41.fld0.fld0 * _41.fld0.fld0;
_11 = (_41.fld1, _14.fld0, _62.fld3.3, _68.fld6);
match _43 {
0 => bb6,
1 => bb2,
2 => bb13,
3 => bb18,
113 => bb46,
_ => bb45
}
}
bb45 = {
_38 = _43;
_62.fld3.0 = _11.3 as i8;
_38 = -_43;
_3.fld1 = core::ptr::addr_of!(_41.fld1);
_30 = -_15;
(*_58) = _54.fld1.0;
_37.1.3.0 = -_4.0;
_41.fld2.0 = _9 as f64;
_54.fld2 = [_14.fld0.2,_11.1.2,_11.1.2,_11.1.2,_37.1.2,_11.1.2];
_53 = _47;
_40.0 = _25;
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _37.0,fld2: _37.1.0 };
_11.1.2 = _37.1.2 | _14.fld0.2;
_17 = _49;
(*_50) = core::ptr::addr_of!(_36.2);
_17 = _49;
_41.fld1 = (_11.0.0, _28.fld1);
Call(_62.fld0.fld1.0 = fn14(_10, _10, _47, _53, _37.1.3.0, _37.3, _11.1, _43, _16, _24, _37.1.1, _49, _16, _11.0.0, _37.1.0.1, _62.fld3.0), ReturnTo(bb24), UnwindUnreachable())
}
bb46 = {
_62.fld0.fld1 = (_74, _11.0.1);
_14.fld0.1 = _6 as u32;
RET.fld0.2 = _54.fld1.2;
_4.0 = _1 as i16;
_74 = -_1;
_26 = _11.1.1;
_68.fld5.1 = -_37.3;
_71.1.2 = _14.fld0.2;
_37.2 = !_11.2;
_81.0.0 = _3.fld0.3 * _13;
_62.fld0.fld1.0 = !_74;
_44 = _24;
_4 = _76;
RET.fld3.fld0 = [_76.0,_54.fld4,_34,_4.0,_37.1.3.0,_54.fld4,_76.0];
Goto(bb47)
}
bb47 = {
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _11.0,fld2: _11.1.0 };
_9 = !_62.fld3.3;
_37.1.2 = -_71.1.2;
_85 = _17;
_46 = _62.fld7 as i16;
match _36.2 {
0 => bb33,
1 => bb40,
2 => bb5,
3 => bb48,
17314344955060276139 => bb50,
_ => bb49
}
}
bb48 = {
_11.1.0.0 = -_5.0;
_7 = _6;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
RET.fld0.3 = _11.1.0.0;
_11.2 = 120_u8 & 160_u8;
_11.1.2 = 1380001477_i32 << _1;
RET.fld0.2 = [_4.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0,_11.1.3.0];
_3.fld3.fld0 = [_4.0,_11.1.3.0,_11.1.3.0,_4.0,_4.0,_4.0,_11.1.3.0];
_14.fld0.0.1 = _4.0 as u16;
RET.fld0.0 = _3.fld0.0 * _3.fld0.0;
_3.fld1 = core::ptr::addr_of!(_11.0);
RET.fld3.fld0 = _3.fld3.fld0;
_8 = '\u{d7774}';
match _11.1.0.1 {
20477 => bb4,
_ => bb1
}
}
bb49 = {
RET.fld0.2 = _3.fld0.2;
_11.1 = _14.fld0;
(*_16) = core::ptr::addr_of!(_36.2);
_48.fld0.2 = _3.fld0.2;
_13 = _41.fld0.fld0 as f64;
Goto(bb21)
}
bb50 = {
_3.fld2 = _11.3 as f64;
_78 = _37.1.2 as u16;
_33 = [_36.1,_68.fld5.1,_37.3,_71.3,_36.1,_36.1,_11.3,_36.1];
_71.1.0.1 = !_14.fld0.0.1;
_89 = _20 ^ _22;
_68.fld5.2 = _38 as u64;
RET.fld3 = Adt63 { fld0: _48.fld0.2 };
_71.1 = (_62.fld0.fld2, _14.fld0.1, _14.fld0.2, _55);
_40 = (_33, _68.fld4.1);
_36 = (_70, _68.fld6, _68.fld5.2);
_11.0 = _62.fld0.fld1;
Goto(bb51)
}
bb51 = {
_62.fld0.fld2.0 = _68.fld5.2 as f64;
_62.fld6 = _62.fld3.3;
_75.0 = -_70;
_25 = _33;
_71.1.0 = _59;
_75 = _36;
_41.fld0 = Adt56 { fld0: _62.fld0.fld0.fld0 };
_11.1.3.0 = _4.0;
_12 = _28.fld0;
_66 = _62.fld7 as f64;
_41.fld2.0 = _15;
RET.fld0.1 = [_37.1.2,_37.1.2,_37.1.2,_14.fld0.2,_11.1.2,_71.1.2];
_14 = Adt49 { fld0: _71.1,fld1: _10 };
_79 = [_75.1,_75.1,_36.1,_75.1,_37.3,_11.3,_11.3,_75.1];
_62.fld0 = Adt57 { fld0: _41.fld0,fld1: _11.0,fld2: _59 };
_68.fld4.1 = _40.1;
match _41.fld0.fld0 {
0 => bb34,
1 => bb48,
2 => bb3,
3 => bb16,
8170043010510359927733704328613678460 => bb53,
_ => bb52
}
}
bb52 = {
_14.fld0.3.0 = -_11.1.3.0;
_22 = !4_usize;
RET.fld0.3 = -_14.fld0.0.0;
RET.fld0.0 = _3.fld0.0;
RET.fld3 = Adt63 { fld0: _3.fld3.fld0 };
_11.2 = (-14_i8) as u8;
_14.fld0.0 = _5;
_19 = _5.1 as f32;
RET.fld2 = _5.0;
_28.fld1 = _3.fld0.1;
_11.1.0.1 = _13 as u16;
_14.fld0.0 = (_3.fld2, _5.1);
_3.fld0.2 = _3.fld3.fld0;
_2 = _12;
_21 = _11.3 as i16;
_14.fld0.1 = (-36_i8) as u32;
_14.fld0.2 = _11.1.2;
RET.fld1 = core::ptr::addr_of!(_11.0);
_3.fld0.3 = _5.0 - _14.fld0.0.0;
_10 = [_11.0.0,_24,_18,_24,_11.0.0,_1,_11.0.0];
_11.0 = (_18, _3.fld0.1);
RET.fld2 = _11.2 as f64;
_3.fld0.2 = [_4.0,_4.0,_14.fld0.3.0,_4.0,_21,_14.fld0.3.0,_14.fld0.3.0];
Call(_14.fld0.0.0 = core::intrinsics::transmute(_11.3), ReturnTo(bb14), UnwindUnreachable())
}
bb53 = {
_68.fld5.0 = _36.0 - _36.0;
_37.1 = (_11.1.0, _11.1.1, _71.1.2, _76);
RET.fld0.0 = !_54.fld1.0;
_11.1.0.1 = _59.1;
_35 = _62.fld0.fld0.fld0 >> _57;
_81.2 = _37.1.2;
_6 = _11.2 as f32;
_31.0 = core::ptr::addr_of!(_75.2);
_68.fld4 = (_25, _40.1);
_53 = _8;
_68.fld4.1 = [_89,_89,_89,_89];
_47 = _49;
RET.fld3 = Adt63 { fld0: _54.fld1.2 };
_53 = _47;
_71.1.2 = -_14.fld0.2;
_22 = _14.fld0.0.1 as usize;
(*_50) = core::ptr::addr_of!(_75.2);
_62.fld0.fld2.0 = _41.fld2.0 + _3.fld2;
_58 = core::ptr::addr_of!(_64);
_99 = _62.fld7;
_4 = _11.1.3;
Goto(bb54)
}
bb54 = {
_26 = _14.fld0.1;
_54.fld1.0 = _5.1 as i128;
_78 = _5.1 / 39652_u16;
_81.2 = _37.1.2 >> _76.0;
_68.fld2 = core::ptr::addr_of_mut!(_98);
(*_58) = -_62.fld7;
_3.fld0.0 = _4.0 as i128;
_14 = Adt49 { fld0: _71.1,fld1: _54.fld3 };
_68.fld4.1 = [_20,_20,_22,_22];
_37.1.3 = _14.fld0.3;
_48.fld0.3 = -_59.0;
_51 = _75.0 - _70;
_25 = [_68.fld5.1,_36.1,_36.1,_75.1,_11.3,_71.3,_71.3,_71.3];
match _62.fld0.fld0.fld0 {
0 => bb42,
1 => bb55,
2 => bb56,
8170043010510359927733704328613678460 => bb58,
_ => bb57
}
}
bb55 = {
_3.fld3.fld0 = [_4.0,_4.0,_4.0,_4.0,_4.0,_11.1.3.0,_4.0];
_19 = _6 - _6;
_1 = _11.1.1 as isize;
_11.1.0.1 = _5.1;
_2 = [_11.3,_11.3];
_6 = _19 / 0.000000000000000000000000000000000000006402273443284189_f32;
RET.fld2 = _3.fld0.0 as f64;
RET.fld1 = core::ptr::addr_of!(_11.0);
_11.1.0.0 = -_5.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
match _14.fld0.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
20477 => bb9,
_ => bb8
}
}
bb56 = {
_62.fld0.fld1 = (_74, _11.0.1);
_14.fld0.1 = _6 as u32;
RET.fld0.2 = _54.fld1.2;
_4.0 = _1 as i16;
_74 = -_1;
_26 = _11.1.1;
_68.fld5.1 = -_37.3;
_71.1.2 = _14.fld0.2;
_37.2 = !_11.2;
_81.0.0 = _3.fld0.3 * _13;
_62.fld0.fld1.0 = !_74;
_44 = _24;
_4 = _76;
RET.fld3.fld0 = [_76.0,_54.fld4,_34,_4.0,_37.1.3.0,_54.fld4,_76.0];
Goto(bb47)
}
bb57 = {
_14.fld0.3.0 = -_11.1.3.0;
_22 = !4_usize;
RET.fld0.3 = -_14.fld0.0.0;
RET.fld0.0 = _3.fld0.0;
RET.fld3 = Adt63 { fld0: _3.fld3.fld0 };
_11.2 = (-14_i8) as u8;
_14.fld0.0 = _5;
_19 = _5.1 as f32;
RET.fld2 = _5.0;
_28.fld1 = _3.fld0.1;
_11.1.0.1 = _13 as u16;
_14.fld0.0 = (_3.fld2, _5.1);
_3.fld0.2 = _3.fld3.fld0;
_2 = _12;
_21 = _11.3 as i16;
_14.fld0.1 = (-36_i8) as u32;
_14.fld0.2 = _11.1.2;
RET.fld1 = core::ptr::addr_of!(_11.0);
_3.fld0.3 = _5.0 - _14.fld0.0.0;
_10 = [_11.0.0,_24,_18,_24,_11.0.0,_1,_11.0.0];
_11.0 = (_18, _3.fld0.1);
RET.fld2 = _11.2 as f64;
_3.fld0.2 = [_4.0,_4.0,_14.fld0.3.0,_4.0,_21,_14.fld0.3.0,_14.fld0.3.0];
Call(_14.fld0.0.0 = core::intrinsics::transmute(_11.3), ReturnTo(bb14), UnwindUnreachable())
}
bb58 = {
RET.fld1 = _3.fld1;
_107.fld4 = core::ptr::addr_of!(_96);
_69 = _75.0 as i8;
_3.fld0.4 = core::ptr::addr_of!(_96);
_32 = _54.fld3;
_34 = _14.fld0.2 as i16;
_68.fld5.1 = _68.fld6;
_107.fld0 = _62.fld0;
_11.1 = (_37.1.0, _14.fld0.1, _71.1.2, _76);
_54.fld0 = _64;
_34 = _17 as i16;
_68.fld1 = core::ptr::addr_of_mut!(_3.fld0.2);
_87 = _12;
_62.fld3.2 = _107.fld0.fld0.fld0 << _64;
_107.fld3.0 = !_69;
_81.3.0 = _46 ^ _76.0;
_68.fld5 = (_70, _37.3, _75.2);
_68.fld3 = core::ptr::addr_of!(_96);
match _43 {
0 => bb28,
1 => bb51,
2 => bb29,
3 => bb10,
113 => bb60,
_ => bb59
}
}
bb59 = {
_3.fld3.fld0 = [_4.0,_4.0,_4.0,_4.0,_4.0,_11.1.3.0,_4.0];
_19 = _6 - _6;
_1 = _11.1.1 as isize;
_11.1.0.1 = _5.1;
_2 = [_11.3,_11.3];
_6 = _19 / 0.000000000000000000000000000000000000006402273443284189_f32;
RET.fld2 = _3.fld0.0 as f64;
RET.fld1 = core::ptr::addr_of!(_11.0);
_11.1.0.0 = -_5.0;
RET.fld1 = core::ptr::addr_of!(_11.0);
match _14.fld0.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
20477 => bb9,
_ => bb8
}
}
bb60 = {
_107.fld0.fld0 = Adt56 { fld0: _62.fld3.2 };
_14.fld0 = (_71.1.0, _37.1.1, _71.1.2, _11.1.3);
_4 = (_46,);
_107.fld2 = ((*_50),);
_53 = _61;
RET.fld0.2 = _54.fld1.2;
_54.fld3 = [_11.0.0,_44,_18,_57,_24,_74,_74];
_37.3 = _62.fld3.3 as i64;
_82 = -_56;
_14.fld0.0.1 = _78 << _24;
_62.fld4 = core::ptr::addr_of!(_96);
_41.fld1.1 = [_81.2,_11.1.2,_14.fld0.2,_11.1.2,_81.2,_37.1.2];
_62.fld3.1 = core::ptr::addr_of!(_96);
RET.fld2 = _37.1.0.0;
_98 = [_21];
_104 = _9 - _37.2;
_69 = _62.fld3.0;
_14 = Adt49 { fld0: _37.1,fld1: _54.fld3 };
RET = Move(_3);
_17 = _53;
RET.fld1 = core::ptr::addr_of!(_71.0);
Goto(bb61)
}
bb61 = {
Call(_116 = dump_var(10_usize, 56_usize, Move(_56), 64_usize, Move(_64), 26_usize, Move(_26), 78_usize, Move(_78)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_116 = dump_var(10_usize, 98_usize, Move(_98), 55_usize, Move(_55), 35_usize, Move(_35), 69_usize, Move(_69)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_116 = dump_var(10_usize, 12_usize, Move(_12), 53_usize, Move(_53), 49_usize, Move(_49), 74_usize, Move(_74)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_116 = dump_var(10_usize, 8_usize, Move(_8), 87_usize, Move(_87), 18_usize, Move(_18), 76_usize, Move(_76)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_116 = dump_var(10_usize, 39_usize, Move(_39), 33_usize, Move(_33), 32_usize, Move(_32), 23_usize, Move(_23)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_116 = dump_var(10_usize, 20_usize, Move(_20), 46_usize, Move(_46), 79_usize, Move(_79), 38_usize, Move(_38)), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Call(_116 = dump_var(10_usize, 10_usize, Move(_10), 117_usize, _117, 117_usize, _117, 117_usize, _117), ReturnTo(bb68), UnwindUnreachable())
}
bb68 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: (f64, u16),mut _2: (i16,),mut _3: i64,mut _4: i128,mut _5: (isize, [i32; 6]),mut _6: [i64; 8],mut _7: f32,mut _8: ((f64, u16), u32, i32, (i16,)),mut _9: *const u64,mut _10: [i64; 8],mut _11: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64),mut _12: [isize; 7],mut _13: isize,mut _14: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64),mut _15: (isize, [i32; 6]),mut _16: i64) -> char {
mir! {
type RET = char;
let _17: f64;
let _18: char;
let _19: *const *const f64;
let _20: isize;
let _21: [char; 6];
let _22: [bool; 3];
let _23: bool;
let _24: (i8, *const *const f64, u128, u8);
let _25: Adt63;
let _26: Adt57;
let _27: (isize, [i32; 6]);
let _28: char;
let _29: *mut bool;
let _30: [char; 6];
let _31: Adt53;
let _32: f32;
let _33: char;
let _34: ((f64, u16), u32, i32, (i16,));
let _35: (i16,);
let _36: u64;
let _37: f64;
let _38: char;
let _39: u64;
let _40: i64;
let _41: isize;
let _42: ();
let _43: ();
{
_8.0.1 = _11.1.2 as u16;
(*_9) = 3168905508054592923_u64;
_14.2 = _4 as u8;
_11 = _14;
_11.1.0.1 = _8.0.1 | _1.1;
_11.1.2 = _14.1.2 << _11.1.1;
_17 = -_11.1.0.0;
_14 = (_11.0, _11.1, _11.2, _11.3);
_4 = (-24672770455566154410357392043057103692_i128) + 58210677252984308940548230478588343561_i128;
_2 = (_11.1.3.0,);
_6 = _10;
_5.0 = !_14.0.0;
_14.2 = _11.2;
_8.3.0 = _11.1.3.0;
_1 = (_11.1.0.0, _14.1.0.1);
_11.1.3 = (_8.3.0,);
_14.2 = _11.2 % 185_u8;
_14.1.2 = -_11.1.2;
_8.3.0 = _2.0 & _11.1.3.0;
_11.0.0 = _5.0;
Call(_16 = fn12(_2.0, _15.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_16 = _11.3;
_16 = _11.3 ^ _3;
RET = '\u{107d7e}';
_13 = !_14.0.0;
_14 = _11;
_12 = [_5.0,_15.0,_5.0,_14.0.0,_11.0.0,_13,_13];
_14.1.3 = _8.3;
_5.0 = _15.0;
_7 = 113175985285487714009412959946371320183_u128 as f32;
_8.0.0 = _14.1.0.0;
_1 = (_17, _14.1.0.1);
_11.0.1 = _5.1;
_5.1 = [_14.1.2,_14.1.2,_11.1.2,_14.1.2,_8.2,_8.2];
_5.0 = _15.0 & _11.0.0;
Goto(bb2)
}
bb2 = {
_11.0 = _5;
_21 = ['\u{3d58a}','\u{a3b35}','\u{58fce}','\u{7dedc}','\u{3da5a}','\u{ae2c8}'];
_5.1 = [_11.1.2,_14.1.2,_14.1.2,_14.1.2,_11.1.2,_11.1.2];
_14.0.1 = _15.1;
_11 = (_14.0, _14.1, _14.2, _14.3);
_14.1 = _11.1;
match (*_9) {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
3168905508054592923 => bb8,
_ => bb7
}
}
bb3 = {
_16 = _11.3;
_16 = _11.3 ^ _3;
RET = '\u{107d7e}';
_13 = !_14.0.0;
_14 = _11;
_12 = [_5.0,_15.0,_5.0,_14.0.0,_11.0.0,_13,_13];
_14.1.3 = _8.3;
_5.0 = _15.0;
_7 = 113175985285487714009412959946371320183_u128 as f32;
_8.0.0 = _14.1.0.0;
_1 = (_17, _14.1.0.1);
_11.0.1 = _5.1;
_5.1 = [_14.1.2,_14.1.2,_11.1.2,_14.1.2,_8.2,_8.2];
_5.0 = _15.0 & _11.0.0;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_24.3 = _11.2;
_8.0.0 = _8.1 as f64;
_15 = (_13, _14.0.1);
_2 = (_14.1.3.0,);
_8.2 = _14.1.2;
_15.1 = _14.0.1;
_11.1.0 = _1;
_26.fld1 = _11.0;
_11.1.3.0 = _8.3.0;
_14.1.0 = _1;
_11.0 = _15;
_14.1.0 = (_17, _1.1);
_11.0.0 = !_13;
_15 = _14.0;
_14.3 = !_16;
_11.1.1 = 1_usize as u32;
Goto(bb9)
}
bb9 = {
_20 = true as isize;
_14.3 = _16;
_4 = 44021440749420901308346728685155237102_i128;
_11.1.2 = -_14.1.2;
_14 = _11;
_1.1 = _8.0.1;
_5.0 = _11.0.0 * _20;
_14.1.1 = _8.1 | _8.1;
_2 = (_11.1.3.0,);
_26.fld1 = _15;
_25.fld0 = [_8.3.0,_14.1.3.0,_2.0,_2.0,_11.1.3.0,_14.1.3.0,_2.0];
_24.3 = _14.2;
_26.fld1.1 = [_8.2,_8.2,_8.2,_8.2,_14.1.2,_14.1.2];
_4 = _11.0.0 as i128;
_11.1.0.0 = -_17;
_14.1.0.1 = _1.1;
_14.1.2 = !_11.1.2;
_8 = (_1, _14.1.1, _14.1.2, _2);
Goto(bb10)
}
bb10 = {
_26.fld1.1 = [_11.1.2,_11.1.2,_11.1.2,_14.1.2,_11.1.2,_11.1.2];
_8 = _14.1;
Goto(bb11)
}
bb11 = {
_26.fld2.0 = _17 - _17;
_27 = (_5.0, _14.0.1);
_3 = _16 * _14.3;
_26.fld2.1 = 216111834512607896893652655634011228541_u128 as u16;
_31.fld0 = [_16,_14.3];
_23 = true | false;
_11.1.0 = (_17, _14.1.0.1);
_2 = _14.1.3;
_26.fld2.0 = -_8.0.0;
(*_9) = _14.2 as u64;
_26.fld1 = (_13, _27.1);
Goto(bb12)
}
bb12 = {
_34.1 = _14.1.1 % 509774706_u32;
_34 = _11.1;
_16 = _11.3 - _3;
_5.0 = _23 as isize;
_11.0.0 = -_27.0;
_5.0 = _14.0.0 >> _3;
_11.1.0 = (_17, _8.0.1);
_8 = (_1, _11.1.1, _11.1.2, _2);
_14.1.0 = (_34.0.0, _1.1);
Goto(bb13)
}
bb13 = {
_1.1 = _14.1.0.1;
_28 = '\u{cae9d}';
_1 = (_14.1.0.0, _26.fld2.1);
(*_9) = 17314344955060276139_u64;
RET = _28;
_31.fld1 = [_34.2,_11.1.2,_14.1.2,_34.2,_11.1.2,_14.1.2];
_24.0 = 100_i8 | 18_i8;
_36 = (*_9) ^ (*_9);
_2.0 = !_11.1.3.0;
_11.1.2 = -_34.2;
_14.1.3 = _8.3;
_34.1 = _14.1.1 ^ _8.1;
_14.1.0 = (_34.0.0, _1.1);
_5.1 = _31.fld1;
_8.3.0 = _2.0;
_1.0 = _14.1.0.0;
_10 = [_16,_16,_3,_16,_11.3,_11.3,_16,_3];
_23 = false;
_34.2 = _14.1.2;
_26.fld2.0 = _14.2 as f64;
_13 = _27.0;
_21 = [_28,_28,_28,_28,_28,_28];
_34 = (_8.0, _14.1.1, _8.2, _11.1.3);
_5.0 = _23 as isize;
_15.0 = _26.fld1.0;
_35 = _34.3;
_27.0 = !_13;
match (*_9) {
0 => bb9,
1 => bb7,
2 => bb3,
3 => bb10,
4 => bb6,
5 => bb14,
17314344955060276139 => bb16,
_ => bb15
}
}
bb14 = {
_11.0 = _5;
_21 = ['\u{3d58a}','\u{a3b35}','\u{58fce}','\u{7dedc}','\u{3da5a}','\u{ae2c8}'];
_5.1 = [_11.1.2,_14.1.2,_14.1.2,_14.1.2,_11.1.2,_11.1.2];
_14.0.1 = _15.1;
_11 = (_14.0, _14.1, _14.2, _14.3);
_14.1 = _11.1;
match (*_9) {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
3168905508054592923 => bb8,
_ => bb7
}
}
bb15 = {
_20 = true as isize;
_14.3 = _16;
_4 = 44021440749420901308346728685155237102_i128;
_11.1.2 = -_14.1.2;
_14 = _11;
_1.1 = _8.0.1;
_5.0 = _11.0.0 * _20;
_14.1.1 = _8.1 | _8.1;
_2 = (_11.1.3.0,);
_26.fld1 = _15;
_25.fld0 = [_8.3.0,_14.1.3.0,_2.0,_2.0,_11.1.3.0,_14.1.3.0,_2.0];
_24.3 = _14.2;
_26.fld1.1 = [_8.2,_8.2,_8.2,_8.2,_14.1.2,_14.1.2];
_4 = _11.0.0 as i128;
_11.1.0.0 = -_17;
_14.1.0.1 = _1.1;
_14.1.2 = !_11.1.2;
_8 = (_1, _14.1.1, _14.1.2, _2);
Goto(bb10)
}
bb16 = {
_14.1.0.0 = _24.0 as f64;
_26.fld1.0 = -_15.0;
_35 = (_2.0,);
_26.fld0.fld0 = _2.0 as u128;
_11.0 = (_20, _26.fld1.1);
_26.fld1.0 = _24.3 as isize;
Goto(bb17)
}
bb17 = {
Call(_42 = dump_var(11_usize, 6_usize, Move(_6), 20_usize, Move(_20), 21_usize, Move(_21), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(11_usize, 15_usize, Move(_15), 3_usize, Move(_3), 13_usize, Move(_13), 35_usize, Move(_35)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: i16,mut _2: isize) -> i64 {
mir! {
type RET = i64;
let _3: i16;
let _4: f64;
let _5: isize;
let _6: [i16; 1];
let _7: [u128; 3];
let _8: char;
let _9: isize;
let _10: u8;
let _11: ([i64; 8], [usize; 4]);
let _12: isize;
let _13: Adt57;
let _14: i32;
let _15: [i32; 6];
let _16: char;
let _17: isize;
let _18: u64;
let _19: Adt53;
let _20: f64;
let _21: bool;
let _22: ();
let _23: ();
{
RET = 2278986562062788989_i64;
_1 = 4392_i16;
match _1 {
0 => bb1,
1 => bb2,
4392 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_3 = _1;
RET = 76127404208267573304228866873937448411_u128 as i64;
match _1 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
4392 => bb9,
_ => bb8
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = 1048882856_i32 as i16;
_2 = 324649394930754713392806664277382507395_u128 as isize;
RET = (-2009600215009629818_i64) * (-3076281889074593130_i64);
_1 = -_3;
RET = 3242691201532069974_i64;
_1 = _3 * _3;
_2 = 2577790963288785847_i64 as isize;
_3 = _1;
_4 = 8169469373085723259_i64 as f64;
_5 = 2857416893960422090_i64 as isize;
_6 = [_3];
_6 = [_3];
_4 = 265594825117478868874413530428578713060_u128 as f64;
RET = 5352174226065499239_i64;
_7 = [47634952159015466615844833971165704402_u128,211415339009607531276261824946295125952_u128,50086956310355961192578976626531781952_u128];
RET = (-7677308384105106420_i64) & (-4233357925941202260_i64);
_5 = -_2;
RET = !(-6165816443703466217_i64);
_3 = _1;
_5 = !_2;
RET = !(-5816895827759830597_i64);
_7 = [90805917033200998723446970705646129203_u128,176408130172417252146543940622762700309_u128,136966937023695860093351632891508179772_u128];
_2 = 199_u8 as isize;
RET = (-1290001201116945394_i64) * 8597622229675019808_i64;
_3 = _1 << _5;
_4 = 5_usize as f64;
RET = -(-2303353517976585540_i64);
Call(_2 = fn13(_1, _5, _5), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_4 = 12459402231437483489_u64 as f64;
_2 = _5;
RET = (-5216292724543715895_i64);
_7 = [113985134035736614437741268617370986208_u128,129929956454824848120795933437836715413_u128,151570767853464618731289121442015743442_u128];
_7 = [187646181087817207175318845797288195793_u128,78855770110665388502096914368518631659_u128,34937134335644690774467892405106461743_u128];
_2 = -_5;
_5 = _2;
_4 = 47366_u16 as f64;
_7 = [147436893828809937058497746271308241809_u128,42798633141363582003987324632676488024_u128,23237960524840637270455739115329730832_u128];
_2 = 17725226725650600922_u64 as isize;
_3 = !_1;
_6 = [_1];
_5 = _2 << _1;
_5 = _2;
RET = 3474262785440686656_i64;
_5 = _2 + _2;
_7 = [24845266739006648355629158769073784291_u128,94886593258245650115560804043272852854_u128,243795887001112013974737682417718675882_u128];
_9 = _5 + _5;
_2 = (-920420727_i32) as isize;
RET = 4310982965996759741_i64 * (-7924693461814952845_i64);
_9 = _5 << _2;
_7 = [224471057708393480109704220870687206235_u128,193927491491157177641700754969242694559_u128,193594093686356022243334711546017771769_u128];
_11.0 = [(-6432522667582075007_i64),1294905538353224086_i64,(-5582763779409388925_i64),5320830057167809545_i64,(-3879179496162367524_i64),2895210377128225395_i64,3708616585702012193_i64,(-7340095550975652409_i64)];
_11.1 = [7_usize,7_usize,3151841994387760044_usize,11279292229070687081_usize];
_1 = _3;
Call(_2 = core::intrinsics::transmute(_9), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
RET = _4 as i64;
_4 = 136_u8 as f64;
_8 = '\u{6153d}';
RET = (-7364230162028886653_i64) + 4191450655144757580_i64;
_8 = '\u{70dff}';
_1 = _3 & _3;
Goto(bb12)
}
bb12 = {
_12 = _2;
_10 = 151_u8 / 109_u8;
_13.fld2.1 = (-934774912_i32) as u16;
_11.1 = [5_usize,7175171000251862512_usize,13736636362134510880_usize,3_usize];
_13.fld1.1 = [1168680484_i32,(-893477415_i32),275670085_i32,(-1458913658_i32),478289464_i32,(-1501100187_i32)];
_3 = (-7102236739957422063_i64) as i16;
_14 = true as i32;
_13.fld0 = Adt56 { fld0: 101933770217691530673065331033440391412_u128 };
_13.fld0.fld0 = 46507615627760713370574909302276453118_u128;
Goto(bb13)
}
bb13 = {
_1 = _3 << _10;
_13.fld2.0 = 1687040310_u32 as f64;
_13.fld0 = Adt56 { fld0: 163021560343117269178455050023951674597_u128 };
_2 = _12;
_9 = _12;
_16 = _8;
_1 = _3;
_2 = false as isize;
_13.fld2 = (_4, 15797_u16);
_8 = _16;
_5 = -_2;
_2 = _9 + _5;
_15 = [_14,_14,_14,_14,_14,_14];
_6 = [_3];
_13.fld1.1 = [_14,_14,_14,_14,_14,_14];
_2 = -_9;
_14 = (-2096776419_i32) << _10;
RET = 6167542511345672989_i64 | 4026884225634138034_i64;
_13.fld2.0 = -_4;
_10 = 124_u8;
Goto(bb14)
}
bb14 = {
RET = _10 as i64;
_13.fld0 = Adt56 { fld0: 108243713617847958379693731814223481689_u128 };
_16 = _8;
_9 = !_2;
_12 = _2 & _2;
_12 = _5;
_4 = -_13.fld2.0;
_5 = _12;
_12 = _2;
_11.1 = [0_usize,2237474372374377309_usize,505308908294206004_usize,1_usize];
_18 = _10 as u64;
_13.fld1.1 = _15;
_13.fld1.0 = !_12;
_13.fld0.fld0 = 297799501444903668669876721011365346502_u128;
_13.fld2.0 = _4 - _4;
_13.fld1.0 = _2;
_15 = [_14,_14,_14,_14,_14,_14];
_18 = _14 as u64;
_19.fld0 = [(-5984841140831353800_i64),(-5607892240253333987_i64)];
_17 = _9;
_19.fld1 = _15;
_17 = _13.fld1.0;
_12 = (-143621737492837651990046335508507118031_i128) as isize;
_19.fld0 = [1239033488939378671_i64,622764260277710397_i64];
_11.1 = [1_usize,1157780413895864214_usize,5_usize,14204418807858733325_usize];
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(12_usize, 17_usize, Move(_17), 16_usize, Move(_16), 12_usize, Move(_12), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(12_usize, 18_usize, Move(_18), 5_usize, Move(_5), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: i16,mut _2: isize,mut _3: isize) -> isize {
mir! {
type RET = isize;
let _4: [i64; 3];
let _5: i128;
let _6: [char; 6];
let _7: u32;
let _8: [i16; 1];
let _9: f32;
let _10: u32;
let _11: *const u64;
let _12: ();
let _13: ();
{
RET = _3;
_1 = (-3371_i16);
RET = _3;
_3 = _2;
RET = -_3;
_3 = -_2;
_2 = _3 ^ _3;
_3 = 22726_u16 as isize;
_4 = [(-2047216085767465099_i64),5910012666730424555_i64,1211512389502544214_i64];
_4 = [(-1239691232100408369_i64),(-3937012994111909114_i64),(-621568525951343845_i64)];
RET = 16_u8 as isize;
RET = -_2;
_4 = [7743112207368304977_i64,(-4597637199935399714_i64),7862324509612969376_i64];
RET = _2;
RET = _2 + _3;
_1 = (-5839_i16) + 18020_i16;
Goto(bb1)
}
bb1 = {
_2 = _3 | _3;
RET = 2_usize as isize;
_4 = [(-5464603925568764809_i64),221572534843414155_i64,(-7161508435630580125_i64)];
_3 = _2 | _2;
RET = _2;
RET = 129535949958386234538582892268938160192_u128 as isize;
_5 = 169593518468429726887490620088682740061_i128;
RET = _2;
RET = '\u{16d50}' as isize;
RET = -_3;
RET = _3;
RET = -_2;
_2 = _3 - _3;
RET = _2;
RET = _2;
Goto(bb2)
}
bb2 = {
_1 = (-17428_i16) * (-29599_i16);
RET = _2;
_2 = _3;
_6 = ['\u{9c377}','\u{113c9}','\u{3cec3}','\u{bb7da}','\u{eb6c2}','\u{41c7d}'];
_3 = !_2;
_4 = [1722155386493725324_i64,4158644449968820745_i64,1677185397716382572_i64];
match _5 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
169593518468429726887490620088682740061 => bb8,
_ => bb7
}
}
bb3 = {
_2 = _3 | _3;
RET = 2_usize as isize;
_4 = [(-5464603925568764809_i64),221572534843414155_i64,(-7161508435630580125_i64)];
_3 = _2 | _2;
RET = _2;
RET = 129535949958386234538582892268938160192_u128 as isize;
_5 = 169593518468429726887490620088682740061_i128;
RET = _2;
RET = '\u{16d50}' as isize;
RET = -_3;
RET = _3;
RET = -_2;
_2 = _3 - _3;
RET = _2;
RET = _2;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = _2;
RET = _3;
_4 = [(-8863855543017479649_i64),8041667205368116053_i64,(-563521083430627488_i64)];
RET = _1 as isize;
_3 = _2 - _2;
_6 = ['\u{5ec4d}','\u{8cd63}','\u{d0cd3}','\u{7a25}','\u{9bb8e}','\u{facd6}'];
_6 = ['\u{107ba0}','\u{f4005}','\u{ef3c9}','\u{e4833}','\u{bc063}','\u{9ae8b}'];
_1 = 15180_i16;
_4 = [(-5003901967087846688_i64),(-7133398488359073636_i64),9195703411892103766_i64];
_6 = ['\u{de572}','\u{94ca2}','\u{44596}','\u{16376}','\u{71676}','\u{5cb4f}'];
_3 = !_2;
_6 = ['\u{f11ba}','\u{ea2d0}','\u{c3317}','\u{49e1d}','\u{e632b}','\u{7c85f}'];
_5 = (-94250487041846691987590256170541934749_i128) ^ 99242192507114460572504728171452003335_i128;
_7 = 648123826_u32;
RET = !_2;
match _1 {
0 => bb3,
1 => bb9,
2 => bb10,
15180 => bb12,
_ => bb11
}
}
bb9 = {
_2 = _3 | _3;
RET = 2_usize as isize;
_4 = [(-5464603925568764809_i64),221572534843414155_i64,(-7161508435630580125_i64)];
_3 = _2 | _2;
RET = _2;
RET = 129535949958386234538582892268938160192_u128 as isize;
_5 = 169593518468429726887490620088682740061_i128;
RET = _2;
RET = '\u{16d50}' as isize;
RET = -_3;
RET = _3;
RET = -_2;
_2 = _3 - _3;
RET = _2;
RET = _2;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_1 = (-17428_i16) * (-29599_i16);
RET = _2;
_2 = _3;
_6 = ['\u{9c377}','\u{113c9}','\u{3cec3}','\u{bb7da}','\u{eb6c2}','\u{41c7d}'];
_3 = !_2;
_4 = [1722155386493725324_i64,4158644449968820745_i64,1677185397716382572_i64];
match _5 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
169593518468429726887490620088682740061 => bb8,
_ => bb7
}
}
bb12 = {
match _7 {
0 => bb8,
1 => bb7,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb6,
648123826 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
RET = _3;
RET = 128575542585351682472939105307612178491_u128 as isize;
Goto(bb15)
}
bb15 = {
Call(_12 = dump_var(13_usize, 4_usize, Move(_4), 7_usize, Move(_7), 1_usize, Move(_1), 13_usize, _13), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: [isize; 7],mut _2: [isize; 7],mut _3: char,mut _4: char,mut _5: i16,mut _6: i64,mut _7: ((f64, u16), u32, i32, (i16,)),mut _8: i8,mut _9: *mut *const u64,mut _10: isize,mut _11: u32,mut _12: char,mut _13: *mut *const u64,mut _14: isize,mut _15: u16,mut _16: i8) -> isize {
mir! {
type RET = isize;
let _17: [i64; 8];
let _18: i32;
let _19: [i64; 8];
let _20: ([u16; 6], *const f64);
let _21: f64;
let _22: Adt50;
let _23: [char; 6];
let _24: i8;
let _25: i128;
let _26: *mut [i16; 1];
let _27: i8;
let _28: (*const u64,);
let _29: [i32; 6];
let _30: bool;
let _31: bool;
let _32: isize;
let _33: (i128, [i32; 6], [i16; 7], f64, *const *const f64);
let _34: ();
let _35: ();
{
_16 = true as i8;
RET = _14;
_7.3.0 = _5 - _5;
_3 = _12;
_8 = _16;
_7.0.0 = 943819494846668094_u64 as f64;
_13 = _9;
_15 = _7.0.1;
_7.2 = 1_usize as i32;
RET = _10;
_1 = _2;
_7.0.1 = _15 | _15;
_17 = [_6,_6,_6,_6,_6,_6,_6,_6];
_5 = -_7.3.0;
Goto(bb1)
}
bb1 = {
RET = _14;
_7.2 = 1042318706_i32;
_4 = _3;
_6 = false as i64;
_7.0.1 = _15;
match _7.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
1042318706 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_13 = core::ptr::addr_of_mut!((*_13));
_5 = _7.3.0;
_7.1 = false as u32;
_22.fld0.2 = _5 as u128;
_4 = _3;
_1 = _2;
_22.fld0.0 = _5 as i8;
RET = _14;
_9 = core::ptr::addr_of_mut!((*_13));
_21 = _7.0.0 * _7.0.0;
_20.1 = core::ptr::addr_of!(_7.0.0);
RET = _21 as isize;
_22.fld0.0 = !_16;
_20.1 = core::ptr::addr_of!(_7.0.0);
_19 = _17;
_7.3 = (_5,);
_7.1 = _11;
_6 = (-225303603261155041_i64);
_1 = _2;
_4 = _3;
_23 = [_3,_3,_12,_12,_12,_12];
_9 = core::ptr::addr_of_mut!((*_9));
RET = _10;
RET = _14;
match _6 {
0 => bb9,
340282366920938463463149303828507056415 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_24 = false as i8;
_22.fld0.3 = 146_u8 / 212_u8;
_20.0 = [_7.0.1,_15,_15,_7.0.1,_7.0.1,_7.0.1];
RET = _6 as isize;
RET = _14;
_18 = _7.2 & _7.2;
_7.0.0 = _14 as f64;
_3 = _12;
_12 = _3;
_15 = _7.0.1;
_22.fld0.0 = _24 * _8;
_7.3.0 = _14 as i16;
_12 = _3;
_20.0 = [_15,_7.0.1,_15,_15,_15,_15];
_8 = _24;
Goto(bb13)
}
bb13 = {
_13 = core::ptr::addr_of_mut!((*_9));
_13 = _9;
_7.0 = (_21, _15);
_7.0.0 = _7.3.0 as f64;
_14 = _10 + _10;
_12 = _4;
_7.0.1 = !_15;
_2 = [_10,_14,_14,_14,_14,_14,_14];
_20.1 = core::ptr::addr_of!(_7.0.0);
RET = _7.1 as isize;
_7.0.0 = _21 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001804601985272767_f64;
_8 = true as i8;
_28.0 = (*_9);
_2 = [_10,_14,_14,_10,_14,_14,_10];
_2 = [_10,_14,_14,_14,_10,_10,_14];
_29 = [_18,_18,_7.2,_7.2,_7.2,_7.2];
_22.fld0.1 = core::ptr::addr_of!(_20.1);
_9 = core::ptr::addr_of_mut!((*_13));
_3 = _12;
_22.fld0.0 = _6 as i8;
_17 = [_6,_6,_6,_6,_6,_6,_6,_6];
_4 = _3;
_23 = [_3,_3,_12,_3,_4,_3];
_19 = [_6,_6,_6,_6,_6,_6,_6,_6];
match _7.2 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
1042318706 => bb19,
_ => bb18
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET = _14;
_7.2 = 1042318706_i32;
_4 = _3;
_6 = false as i64;
_7.0.1 = _15;
match _7.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
1042318706 => bb10,
_ => bb9
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_14 = _10;
_30 = !true;
_1 = _2;
RET = _10 & _14;
_25 = _22.fld0.3 as i128;
_23 = [_3,_4,_12,_3,_4,_12];
_24 = -_22.fld0.0;
_28.0 = (*_13);
(*_9) = _28.0;
_9 = core::ptr::addr_of_mut!((*_9));
Goto(bb20)
}
bb20 = {
Call(_34 = dump_var(14_usize, 30_usize, Move(_30), 16_usize, Move(_16), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_34 = dump_var(14_usize, 8_usize, Move(_8), 17_usize, Move(_17), 15_usize, Move(_15), 19_usize, Move(_19)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_34 = dump_var(14_usize, 29_usize, Move(_29), 14_usize, Move(_14), 35_usize, _35, 35_usize, _35), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: *mut [i16; 1],mut _2: bool,mut _3: u64,mut _4: bool,mut _5: *mut [i16; 1],mut _6: [isize; 7],mut _7: *mut [i16; 1],mut _8: u64,mut _9: ([i64; 8], [usize; 4]),mut _10: [i16; 7],mut _11: Adt54,mut _12: [i64; 8],mut _13: [i16; 1]) -> (i128, [i32; 6], [i16; 7], f64, *const *const f64) {
mir! {
type RET = (i128, [i32; 6], [i16; 7], f64, *const *const f64);
let _14: f64;
let _15: char;
let _16: ((f64, u16), u32, i32, (i16,));
let _17: isize;
let _18: [i32; 6];
let _19: Adt61;
let _20: [isize; 7];
let _21: [usize; 4];
let _22: ((f64, u16), u32, i32, (i16,));
let _23: Adt50;
let _24: [char; 6];
let _25: ((f64, u16), u32, i32, (i16,));
let _26: Adt62;
let _27: ((f64, u16), u32, i32, (i16,));
let _28: isize;
let _29: char;
let _30: [u16; 6];
let _31: *const *const f64;
let _32: bool;
let _33: f64;
let _34: char;
let _35: Adt54;
let _36: u64;
let _37: i16;
let _38: i8;
let _39: u8;
let _40: bool;
let _41: [i16; 1];
let _42: [isize; 7];
let _43: Adt57;
let _44: ();
let _45: ();
{
RET.0 = 2485734388_u32 as i128;
RET.0 = (-1909285407993074695_i64) as i128;
(*_5) = _11.fld0;
RET.3 = 3135121634714506087_usize as f64;
_1 = core::ptr::addr_of_mut!((*_7));
RET.2 = [20935_i16,(-6717_i16),(-13916_i16),9356_i16,(-29831_i16),(-7582_i16),(-22085_i16)];
RET.1 = _11.fld2.fld1;
RET.1 = [(-484221665_i32),1156917056_i32,863883880_i32,1656852963_i32,(-97921682_i32),1612513265_i32];
_11.fld2.fld1 = [(-1891128763_i32),(-701747306_i32),1913531225_i32,(-2145495722_i32),1868210834_i32,(-1722827782_i32)];
(*_1) = [8657_i16];
_14 = 21770_i16 as f64;
_13 = [(-5178_i16)];
_1 = core::ptr::addr_of_mut!((*_1));
_12 = [(-1032220350277680757_i64),(-68713443715732057_i64),6100700870954801902_i64,(-756436696836186223_i64),(-3645628435499558607_i64),7227008319643604797_i64,5729185880488230242_i64,1419134560885644298_i64];
_4 = _2;
(*_7) = _13;
RET.1 = _11.fld2.fld1;
_8 = _2 as u64;
_11.fld2.fld0 = [(-1908879851346044976_i64),5705026855197849027_i64];
(*_7) = [(-9107_i16)];
_1 = _5;
_9.0 = [1488631135473749256_i64,(-3099957398741709896_i64),(-3005915695986022180_i64),5853646468851077123_i64,3135509020026543563_i64,(-8147291100344494230_i64),8353162768593137806_i64,2862727368630889413_i64];
_9.0 = _12;
_11.fld3 = ['\u{8796f}','\u{80e40}','\u{ca44}','\u{a3d6}','\u{bfddf}','\u{2f23}'];
_1 = _7;
(*_7) = [21710_i16];
Goto(bb1)
}
bb1 = {
_16.1 = 1513716901_u32 >> _3;
_16.0.1 = 40482_u16;
(*_1) = [(-19301_i16)];
_16.0 = (_14, 23250_u16);
_4 = !_2;
_11.fld2.fld0 = [(-4498481017384627772_i64),6841085209067388987_i64];
_7 = core::ptr::addr_of_mut!((*_5));
RET.2 = [24825_i16,32741_i16,(-11089_i16),6058_i16,(-1300_i16),(-6430_i16),9944_i16];
_11.fld0 = [(-17675_i16)];
_11.fld3 = ['\u{c7cb1}','\u{91863}','\u{b3aca}','\u{b40d6}','\u{1ba42}','\u{2bfc3}'];
_14 = _16.0.0 + _16.0.0;
_15 = '\u{5489b}';
_16.0.1 = 138_u8 as u16;
_16.1 = !718254415_u32;
_16.0.1 = !41406_u16;
RET.1 = [(-1372833490_i32),2049113558_i32,264661153_i32,(-684147063_i32),(-1711242328_i32),(-1943673354_i32)];
_14 = -_16.0.0;
_5 = core::ptr::addr_of_mut!((*_1));
_11.fld2.fld0 = [(-2272693732852184394_i64),6513889676727138024_i64];
_10 = [(-6680_i16),18342_i16,(-10532_i16),(-24221_i16),14857_i16,(-19544_i16),(-303_i16)];
RET.3 = (-9223372036854775808_isize) as f64;
Goto(bb2)
}
bb2 = {
_7 = core::ptr::addr_of_mut!((*_5));
_11.fld3 = [_15,_15,_15,_15,_15,_15];
_16.3.0 = 17907_i16 ^ 12843_i16;
_19.fld2.fld1 = (9223372036854775807_isize, _11.fld2.fld1);
RET.2 = _10;
_19.fld2.fld1.1 = [(-1466932248_i32),(-504207183_i32),(-341184409_i32),(-189195133_i32),1288054989_i32,1604063723_i32];
_19.fld2.fld0 = Adt56 { fld0: 138748610023077838515280927312379632681_u128 };
RET.0 = (-97615580057677531713814611761247187493_i128);
RET.4 = core::ptr::addr_of!(_19.fld4.1);
_19.fld1.1 = [5_usize,2_usize,18355899348391074731_usize,3_usize];
RET.3 = -_14;
RET.2 = [_16.3.0,_16.3.0,_16.3.0,_16.3.0,_16.3.0,_16.3.0,_16.3.0];
_7 = _5;
_11.fld2.fld1 = [(-1684772170_i32),402036403_i32,1191065037_i32,(-289458832_i32),1758593128_i32,2113149576_i32];
_16.2 = 625384229_i32 << _19.fld2.fld1.0;
_16.3 = ((-663_i16),);
_19.fld2.fld2.1 = _16.0.1;
_16.3.0 = (-21544_i16);
RET.1 = [_16.2,_16.2,_16.2,_16.2,_16.2,_16.2];
Goto(bb3)
}
bb3 = {
_11.fld1 = core::ptr::addr_of_mut!(_10);
(*_5) = [_16.3.0];
(*_7) = _13;
_15 = '\u{47278}';
_1 = _5;
_19.fld4.0 = [_19.fld2.fld2.1,_16.0.1,_19.fld2.fld2.1,_16.0.1,_19.fld2.fld2.1,_16.0.1];
RET.4 = core::ptr::addr_of!(_19.fld4.1);
RET.4 = core::ptr::addr_of!(_19.fld4.1);
_11.fld2.fld1 = [_16.2,_16.2,_16.2,_16.2,_16.2,_16.2];
_16.0 = (_14, _19.fld2.fld2.1);
_1 = core::ptr::addr_of_mut!((*_1));
_19.fld2.fld0 = Adt56 { fld0: 260519454108773128802279280061807532324_u128 };
_1 = core::ptr::addr_of_mut!((*_5));
_23.fld0.3 = 225_u8 & 39_u8;
(*_7) = _13;
_16.3 = ((-28981_i16),);
_11.fld3 = [_15,_15,_15,_15,_15,_15];
_19.fld2.fld2.0 = _16.0.0 - _16.0.0;
_22.3.0 = -_16.3.0;
_12 = [3362721478932208962_i64,(-7867561457682397570_i64),(-6027095616587417830_i64),8658715313786293011_i64,(-7553801581700896323_i64),(-7724318333369754083_i64),(-201614090909343306_i64),(-2127878503281938349_i64)];
_20 = _6;
_9.1 = [7_usize,7_usize,1_usize,6_usize];
_22.0.0 = -_14;
(*_7) = _11.fld0;
_25.3 = (_16.3.0,);
Goto(bb4)
}
bb4 = {
_19.fld2.fld2 = _16.0;
_22.2 = !_16.2;
_9.1 = [6_usize,0_usize,14307572176770724413_usize,10256075665135241101_usize];
_21 = [5770344589970763505_usize,7_usize,2_usize,5124853924957238488_usize];
RET.1 = [_16.2,_22.2,_16.2,_16.2,_16.2,_16.2];
_6 = [_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0];
_12 = _9.0;
_19.fld2.fld1.0 = (-64_isize);
_23.fld0.0 = (-50_i8) | (-84_i8);
_26.fld1.fld1.4 = core::ptr::addr_of!(_19.fld4.1);
_23.fld0.2 = _19.fld2.fld0.fld0 % 27121266618016220095933636984685941436_u128;
_11.fld2.fld0 = [(-4162083561664860642_i64),(-5914122892033608871_i64)];
_16.0 = (_19.fld2.fld2.0, _19.fld2.fld2.1);
_23.fld0.3 = !127_u8;
_26.fld1.fld1.1 = _11.fld2.fld1;
_16.2 = _4 as i32;
_23.fld0.0 = -36_i8;
_2 = !_4;
_19.fld2.fld1.0 = 11_isize & (-9223372036854775808_isize);
_23.fld0.1 = core::ptr::addr_of!(_19.fld4.1);
Call(_24 = fn16(_20, _26.fld1.fld1.4, _22.3, _20, _23.fld0, _6, _7, _25.3.0, _11.fld2.fld0, _26.fld1.fld1.1, _5, _19.fld1.1, _16.3.0, _23.fld0.2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_15 = '\u{f63fa}';
_22.0 = (_16.0.0, _16.0.1);
_26.fld1.fld1.3 = _22.0.0;
_5 = core::ptr::addr_of_mut!((*_7));
(*_5) = _13;
_22 = (_19.fld2.fld2, _16.1, _16.2, _16.3);
RET.0 = _16.2 as i128;
_26.fld1.fld4 = _23.fld0.0 as i16;
_25.0.1 = _19.fld2.fld2.1 % 42644_u16;
_11.fld0 = [_22.3.0];
_21 = [5_usize,1_usize,3665861936463699101_usize,5_usize];
_27.0.1 = _16.0.1 * _25.0.1;
_27 = _16;
_23.fld0.3 = _15 as u8;
Goto(bb6)
}
bb6 = {
_23.fld0.3 = 238_u8;
_9.1 = [3_usize,4472604516955695324_usize,14849178983834371483_usize,0_usize];
_25 = (_27.0, _16.1, _22.2, _16.3);
_22.0 = (_14, _19.fld2.fld2.1);
_16.2 = _22.2 - _27.2;
_26.fld1.fld1.1 = [_22.2,_16.2,_25.2,_22.2,_22.2,_22.2];
_17 = _19.fld2.fld1.0;
(*_1) = _13;
_23.fld0.3 = _2 as u8;
match _19.fld2.fld0.fld0 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
260519454108773128802279280061807532324 => bb12,
_ => bb11
}
}
bb7 = {
_15 = '\u{f63fa}';
_22.0 = (_16.0.0, _16.0.1);
_26.fld1.fld1.3 = _22.0.0;
_5 = core::ptr::addr_of_mut!((*_7));
(*_5) = _13;
_22 = (_19.fld2.fld2, _16.1, _16.2, _16.3);
RET.0 = _16.2 as i128;
_26.fld1.fld4 = _23.fld0.0 as i16;
_25.0.1 = _19.fld2.fld2.1 % 42644_u16;
_11.fld0 = [_22.3.0];
_21 = [5_usize,1_usize,3665861936463699101_usize,5_usize];
_27.0.1 = _16.0.1 * _25.0.1;
_27 = _16;
_23.fld0.3 = _15 as u8;
Goto(bb6)
}
bb8 = {
_19.fld2.fld2 = _16.0;
_22.2 = !_16.2;
_9.1 = [6_usize,0_usize,14307572176770724413_usize,10256075665135241101_usize];
_21 = [5770344589970763505_usize,7_usize,2_usize,5124853924957238488_usize];
RET.1 = [_16.2,_22.2,_16.2,_16.2,_16.2,_16.2];
_6 = [_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0];
_12 = _9.0;
_19.fld2.fld1.0 = (-64_isize);
_23.fld0.0 = (-50_i8) | (-84_i8);
_26.fld1.fld1.4 = core::ptr::addr_of!(_19.fld4.1);
_23.fld0.2 = _19.fld2.fld0.fld0 % 27121266618016220095933636984685941436_u128;
_11.fld2.fld0 = [(-4162083561664860642_i64),(-5914122892033608871_i64)];
_16.0 = (_19.fld2.fld2.0, _19.fld2.fld2.1);
_23.fld0.3 = !127_u8;
_26.fld1.fld1.1 = _11.fld2.fld1;
_16.2 = _4 as i32;
_23.fld0.0 = -36_i8;
_2 = !_4;
_19.fld2.fld1.0 = 11_isize & (-9223372036854775808_isize);
_23.fld0.1 = core::ptr::addr_of!(_19.fld4.1);
Call(_24 = fn16(_20, _26.fld1.fld1.4, _22.3, _20, _23.fld0, _6, _7, _25.3.0, _11.fld2.fld0, _26.fld1.fld1.1, _5, _19.fld1.1, _16.3.0, _23.fld0.2), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_11.fld1 = core::ptr::addr_of_mut!(_10);
(*_5) = [_16.3.0];
(*_7) = _13;
_15 = '\u{47278}';
_1 = _5;
_19.fld4.0 = [_19.fld2.fld2.1,_16.0.1,_19.fld2.fld2.1,_16.0.1,_19.fld2.fld2.1,_16.0.1];
RET.4 = core::ptr::addr_of!(_19.fld4.1);
RET.4 = core::ptr::addr_of!(_19.fld4.1);
_11.fld2.fld1 = [_16.2,_16.2,_16.2,_16.2,_16.2,_16.2];
_16.0 = (_14, _19.fld2.fld2.1);
_1 = core::ptr::addr_of_mut!((*_1));
_19.fld2.fld0 = Adt56 { fld0: 260519454108773128802279280061807532324_u128 };
_1 = core::ptr::addr_of_mut!((*_5));
_23.fld0.3 = 225_u8 & 39_u8;
(*_7) = _13;
_16.3 = ((-28981_i16),);
_11.fld3 = [_15,_15,_15,_15,_15,_15];
_19.fld2.fld2.0 = _16.0.0 - _16.0.0;
_22.3.0 = -_16.3.0;
_12 = [3362721478932208962_i64,(-7867561457682397570_i64),(-6027095616587417830_i64),8658715313786293011_i64,(-7553801581700896323_i64),(-7724318333369754083_i64),(-201614090909343306_i64),(-2127878503281938349_i64)];
_20 = _6;
_9.1 = [7_usize,7_usize,1_usize,6_usize];
_22.0.0 = -_14;
(*_7) = _11.fld0;
_25.3 = (_16.3.0,);
Goto(bb4)
}
bb10 = {
_7 = core::ptr::addr_of_mut!((*_5));
_11.fld3 = [_15,_15,_15,_15,_15,_15];
_16.3.0 = 17907_i16 ^ 12843_i16;
_19.fld2.fld1 = (9223372036854775807_isize, _11.fld2.fld1);
RET.2 = _10;
_19.fld2.fld1.1 = [(-1466932248_i32),(-504207183_i32),(-341184409_i32),(-189195133_i32),1288054989_i32,1604063723_i32];
_19.fld2.fld0 = Adt56 { fld0: 138748610023077838515280927312379632681_u128 };
RET.0 = (-97615580057677531713814611761247187493_i128);
RET.4 = core::ptr::addr_of!(_19.fld4.1);
_19.fld1.1 = [5_usize,2_usize,18355899348391074731_usize,3_usize];
RET.3 = -_14;
RET.2 = [_16.3.0,_16.3.0,_16.3.0,_16.3.0,_16.3.0,_16.3.0,_16.3.0];
_7 = _5;
_11.fld2.fld1 = [(-1684772170_i32),402036403_i32,1191065037_i32,(-289458832_i32),1758593128_i32,2113149576_i32];
_16.2 = 625384229_i32 << _19.fld2.fld1.0;
_16.3 = ((-663_i16),);
_19.fld2.fld2.1 = _16.0.1;
_16.3.0 = (-21544_i16);
RET.1 = [_16.2,_16.2,_16.2,_16.2,_16.2,_16.2];
Goto(bb3)
}
bb11 = {
_16.1 = 1513716901_u32 >> _3;
_16.0.1 = 40482_u16;
(*_1) = [(-19301_i16)];
_16.0 = (_14, 23250_u16);
_4 = !_2;
_11.fld2.fld0 = [(-4498481017384627772_i64),6841085209067388987_i64];
_7 = core::ptr::addr_of_mut!((*_5));
RET.2 = [24825_i16,32741_i16,(-11089_i16),6058_i16,(-1300_i16),(-6430_i16),9944_i16];
_11.fld0 = [(-17675_i16)];
_11.fld3 = ['\u{c7cb1}','\u{91863}','\u{b3aca}','\u{b40d6}','\u{1ba42}','\u{2bfc3}'];
_14 = _16.0.0 + _16.0.0;
_15 = '\u{5489b}';
_16.0.1 = 138_u8 as u16;
_16.1 = !718254415_u32;
_16.0.1 = !41406_u16;
RET.1 = [(-1372833490_i32),2049113558_i32,264661153_i32,(-684147063_i32),(-1711242328_i32),(-1943673354_i32)];
_14 = -_16.0.0;
_5 = core::ptr::addr_of_mut!((*_1));
_11.fld2.fld0 = [(-2272693732852184394_i64),6513889676727138024_i64];
_10 = [(-6680_i16),18342_i16,(-10532_i16),(-24221_i16),14857_i16,(-19544_i16),(-303_i16)];
RET.3 = (-9223372036854775808_isize) as f64;
Goto(bb2)
}
bb12 = {
_25.3.0 = !_27.3.0;
_22.2 = -_16.2;
_10 = [_27.3.0,_16.3.0,_22.3.0,_22.3.0,_26.fld1.fld4,_16.3.0,_22.3.0];
RET.4 = core::ptr::addr_of!(_19.fld4.1);
_16.0 = _27.0;
_8 = !_3;
_22.3 = (_25.3.0,);
_26.fld1.fld1.1 = _19.fld2.fld1.1;
_16.0 = _19.fld2.fld2;
(*_1) = _11.fld0;
_30 = [_27.0.1,_25.0.1,_16.0.1,_22.0.1,_16.0.1,_22.0.1];
RET.3 = -_25.0.0;
_31 = _23.fld0.1;
_19.fld2.fld2.0 = _14;
_14 = -_16.0.0;
_25.3 = (_16.3.0,);
_26.fld1.fld1.4 = _31;
_12 = [133170070404026696_i64,6611215404963995630_i64,6077750451888291770_i64,(-3217645041874424792_i64),1446255336039221461_i64,3965963438193094223_i64,2385625474114612623_i64,7639907120181916077_i64];
(*_31) = core::ptr::addr_of!(_33);
_33 = _16.0.0;
_9.0 = _12;
_19.fld1.0 = [(-5037278535483437189_i64),(-1192652138179998530_i64),1466759607393856411_i64,5255902561848307672_i64,6797431826807933223_i64,(-7570648490657482688_i64),3797877981421592944_i64,(-4864815353384472564_i64)];
Goto(bb13)
}
bb13 = {
_23.fld0 = ((-90_i8), _26.fld1.fld1.4, _19.fld2.fld0.fld0, 45_u8);
_22.0 = (_14, _16.0.1);
_26.fld1.fld1.1 = [_16.2,_25.2,_22.2,_16.2,_22.2,_25.2];
_21 = [1_usize,17156458149119763507_usize,4380374328499434562_usize,0_usize];
_9 = (_12, _19.fld1.1);
_25 = (_27.0, _16.1, _22.2, _22.3);
_22.0 = (_26.fld1.fld1.3, _19.fld2.fld2.1);
_16.1 = _8 as u32;
RET.0 = (-161475745043518826906238897119678198004_i128);
_26.fld1.fld3 = [_19.fld2.fld1.0,_19.fld2.fld1.0,_17,_19.fld2.fld1.0,_17,_19.fld2.fld1.0,_19.fld2.fld1.0];
_20 = [_19.fld2.fld1.0,_17,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_17];
_6 = [_17,_17,_17,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0,_19.fld2.fld1.0];
_19.fld2.fld1 = (_17, _26.fld1.fld1.1);
_26.fld1.fld4 = !_27.3.0;
RET.3 = _14;
_3 = _8 * _8;
_5 = core::ptr::addr_of_mut!(_13);
_20 = [_19.fld2.fld1.0,_17,_17,_19.fld2.fld1.0,_17,_17,_17];
_35.fld1 = core::ptr::addr_of_mut!(_10);
_26.fld1.fld1.2 = _10;
_34 = _15;
_19.fld0 = !_22.1;
_3 = _8;
match _23.fld0.0 {
0 => bb10,
1 => bb6,
2 => bb14,
340282366920938463463374607431768211366 => bb16,
_ => bb15
}
}
bb14 = {
_23.fld0.3 = 238_u8;
_9.1 = [3_usize,4472604516955695324_usize,14849178983834371483_usize,0_usize];
_25 = (_27.0, _16.1, _22.2, _16.3);
_22.0 = (_14, _19.fld2.fld2.1);
_16.2 = _22.2 - _27.2;
_26.fld1.fld1.1 = [_22.2,_16.2,_25.2,_22.2,_22.2,_22.2];
_17 = _19.fld2.fld1.0;
(*_1) = _13;
_23.fld0.3 = _2 as u8;
match _19.fld2.fld0.fld0 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
260519454108773128802279280061807532324 => bb12,
_ => bb11
}
}
bb15 = {
_16.1 = 1513716901_u32 >> _3;
_16.0.1 = 40482_u16;
(*_1) = [(-19301_i16)];
_16.0 = (_14, 23250_u16);
_4 = !_2;
_11.fld2.fld0 = [(-4498481017384627772_i64),6841085209067388987_i64];
_7 = core::ptr::addr_of_mut!((*_5));
RET.2 = [24825_i16,32741_i16,(-11089_i16),6058_i16,(-1300_i16),(-6430_i16),9944_i16];
_11.fld0 = [(-17675_i16)];
_11.fld3 = ['\u{c7cb1}','\u{91863}','\u{b3aca}','\u{b40d6}','\u{1ba42}','\u{2bfc3}'];
_14 = _16.0.0 + _16.0.0;
_15 = '\u{5489b}';
_16.0.1 = 138_u8 as u16;
_16.1 = !718254415_u32;
_16.0.1 = !41406_u16;
RET.1 = [(-1372833490_i32),2049113558_i32,264661153_i32,(-684147063_i32),(-1711242328_i32),(-1943673354_i32)];
_14 = -_16.0.0;
_5 = core::ptr::addr_of_mut!((*_1));
_11.fld2.fld0 = [(-2272693732852184394_i64),6513889676727138024_i64];
_10 = [(-6680_i16),18342_i16,(-10532_i16),(-24221_i16),14857_i16,(-19544_i16),(-303_i16)];
RET.3 = (-9223372036854775808_isize) as f64;
Goto(bb2)
}
bb16 = {
_27.0.1 = !_19.fld2.fld2.1;
_23.fld0.2 = _19.fld2.fld0.fld0 + _19.fld2.fld0.fld0;
(*_7) = [_27.3.0];
_35.fld2.fld0 = _11.fld2.fld0;
_34 = _15;
_23.fld0.1 = core::ptr::addr_of!(_19.fld4.1);
_35.fld0 = (*_1);
(*_7) = [_25.3.0];
_26.fld1.fld1 = ((-30732346077601671906235800609135010672_i128), _19.fld2.fld1.1, _10, _25.0.0, _23.fld0.1);
_27.2 = _27.1 as i32;
_1 = core::ptr::addr_of_mut!(_13);
_26.fld1.fld1 = (115468386587665260288777454474782126187_i128, _11.fld2.fld1, _10, _27.0.0, _23.fld0.1);
_25.0.1 = _22.0.1;
_20 = _6;
_16.3.0 = _22.3.0 * _27.3.0;
_2 = _4 ^ _4;
RET.4 = core::ptr::addr_of!((*_31));
Goto(bb17)
}
bb17 = {
Call(_44 = dump_var(15_usize, 8_usize, Move(_8), 20_usize, Move(_20), 21_usize, Move(_21), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(15_usize, 30_usize, Move(_30), 15_usize, Move(_15), 10_usize, Move(_10), 2_usize, Move(_2)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [isize; 7],mut _2: *const *const f64,mut _3: (i16,),mut _4: [isize; 7],mut _5: (i8, *const *const f64, u128, u8),mut _6: [isize; 7],mut _7: *mut [i16; 1],mut _8: i16,mut _9: [i64; 2],mut _10: [i32; 6],mut _11: *mut [i16; 1],mut _12: [usize; 4],mut _13: i16,mut _14: u128) -> [char; 6] {
mir! {
type RET = [char; 6];
let _15: i64;
let _16: u128;
let _17: (*const u64,);
let _18: isize;
let _19: [i64; 2];
let _20: char;
let _21: bool;
let _22: u32;
let _23: isize;
let _24: Adt50;
let _25: [bool; 3];
let _26: ((f64, u16), u32, i32, (i16,));
let _27: i128;
let _28: f32;
let _29: [i32; 6];
let _30: f64;
let _31: i32;
let _32: isize;
let _33: *mut *const u64;
let _34: bool;
let _35: Adt58;
let _36: [u128; 3];
let _37: Adt55;
let _38: [i32; 6];
let _39: isize;
let _40: [i64; 3];
let _41: ();
let _42: ();
{
_8 = _3.0 >> _13;
_11 = core::ptr::addr_of_mut!((*_7));
_15 = 6322991906955124373_i64 >> _3.0;
(*_11) = [_8];
_15 = 14493094108521275838238907684532345924_i128 as i64;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),66_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_3 = (_8,);
_7 = _11;
_3.0 = !_8;
_9 = [_15,_15];
RET = ['\u{882e7}','\u{a2704}','\u{74cf5}','\u{bdd7c}','\u{ca281}','\u{5545d}'];
_18 = 9223372036854775807_isize;
_3 = (_13,);
_9 = [_15,_15];
_18 = (-9223372036854775808_isize);
_4 = [_18,_18,_18,_18,_18,_18,_18];
RET = ['\u{e0b7e}','\u{4218f}','\u{43259}','\u{94c5}','\u{24487}','\u{1c431}'];
_18 = !22_isize;
_5.3 = 61_u8 + 86_u8;
_16 = !_5.2;
_11 = _7;
Goto(bb1)
}
bb1 = {
(*_11) = [_3.0];
(*_11) = [_13];
_16 = _5.2;
_5.2 = _14 + _14;
_7 = core::ptr::addr_of_mut!((*_11));
(*_7) = [_13];
_19 = _9;
_2 = core::ptr::addr_of!((*_2));
RET = ['\u{6bb9a}','\u{d7eb1}','\u{76aa}','\u{d9a60}','\u{1011a0}','\u{1ddc9}'];
_3 = (_8,);
_12 = [0_usize,0_usize,11691465091444124827_usize,0_usize];
_24.fld0 = _5;
_3 = (_8,);
_6 = [_18,_18,_18,_18,_18,_18,_18];
RET = ['\u{798b4}','\u{7c381}','\u{7e132}','\u{24214}','\u{8383f}','\u{8b573}'];
_24.fld0 = _5;
_5.1 = core::ptr::addr_of!((*_2));
_24.fld0.2 = _16;
_19 = _9;
_6 = _1;
_13 = 13601_u16 as i16;
_1 = _4;
_26.0.0 = _24.fld0.0 as f64;
_26.2 = 1466700737_i32 >> _24.fld0.0;
_27 = !67321695464202116547754793236934077419_i128;
Call(_26.0.0 = fn17(_6, _5, _16, _16, _5, _13, _7, _24.fld0.1, _18, _24.fld0.3, _13, _5.2, (*_7), _24.fld0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_20 = '\u{4ef43}';
_5.1 = _24.fld0.1;
_5.2 = !_14;
_5.3 = _24.fld0.3;
_27 = 131789052711772090896744742364291775482_i128 & (-59792159711670556639020701118154186202_i128);
_19 = [_15,_15];
_7 = core::ptr::addr_of_mut!((*_11));
_3.0 = !_13;
Goto(bb3)
}
bb3 = {
RET = [_20,_20,_20,_20,_20,_20];
(*_2) = core::ptr::addr_of!(_26.0.0);
(*_11) = [_8];
_14 = _24.fld0.2;
(*_2) = core::ptr::addr_of!(_26.0.0);
_26.0.1 = 17797_u16;
_24.fld0.3 = _5.3;
_21 = !true;
_24.fld0.0 = !_5.0;
_24.fld0 = (_5.0, _5.1, _5.2, _5.3);
_26.3.0 = _3.0 >> _5.0;
match _26.0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
17797 => bb10,
_ => bb9
}
}
bb4 = {
_20 = '\u{4ef43}';
_5.1 = _24.fld0.1;
_5.2 = !_14;
_5.3 = _24.fld0.3;
_27 = 131789052711772090896744742364291775482_i128 & (-59792159711670556639020701118154186202_i128);
_19 = [_15,_15];
_7 = core::ptr::addr_of_mut!((*_11));
_3.0 = !_13;
Goto(bb3)
}
bb5 = {
(*_11) = [_3.0];
(*_11) = [_13];
_16 = _5.2;
_5.2 = _14 + _14;
_7 = core::ptr::addr_of_mut!((*_11));
(*_7) = [_13];
_19 = _9;
_2 = core::ptr::addr_of!((*_2));
RET = ['\u{6bb9a}','\u{d7eb1}','\u{76aa}','\u{d9a60}','\u{1011a0}','\u{1ddc9}'];
_3 = (_8,);
_12 = [0_usize,0_usize,11691465091444124827_usize,0_usize];
_24.fld0 = _5;
_3 = (_8,);
_6 = [_18,_18,_18,_18,_18,_18,_18];
RET = ['\u{798b4}','\u{7c381}','\u{7e132}','\u{24214}','\u{8383f}','\u{8b573}'];
_24.fld0 = _5;
_5.1 = core::ptr::addr_of!((*_2));
_24.fld0.2 = _16;
_19 = _9;
_6 = _1;
_13 = 13601_u16 as i16;
_1 = _4;
_26.0.0 = _24.fld0.0 as f64;
_26.2 = 1466700737_i32 >> _24.fld0.0;
_27 = !67321695464202116547754793236934077419_i128;
Call(_26.0.0 = fn17(_6, _5, _16, _16, _5, _13, _7, _24.fld0.1, _18, _24.fld0.3, _13, _5.2, (*_7), _24.fld0), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_25 = [_21,_21,_21];
_12 = [5214970873973704962_usize,5_usize,3905803782824497678_usize,3_usize];
_22 = !516139024_u32;
_3.0 = -_8;
_3.0 = _18 as i16;
_4 = [_18,_18,_18,_18,_18,_18,_18];
_24.fld0.0 = _5.0 - _5.0;
_31 = -_26.2;
_18 = (-9223372036854775808_isize) >> _24.fld0.0;
_28 = _5.0 as f32;
_30 = -_26.0.0;
_13 = _20 as i16;
_5.3 = !_24.fld0.3;
_7 = core::ptr::addr_of_mut!((*_7));
RET = [_20,_20,_20,_20,_20,_20];
_29 = _10;
_24.fld0 = _5;
_32 = _18 << _31;
_5.1 = _2;
_35.fld0 = core::ptr::addr_of_mut!(_21);
_26.0.0 = _30 - _30;
Goto(bb11)
}
bb11 = {
_7 = core::ptr::addr_of_mut!((*_7));
(*_2) = core::ptr::addr_of!(_26.0.0);
(*_2) = core::ptr::addr_of!(_30);
_7 = core::ptr::addr_of_mut!((*_11));
_3 = (_26.3.0,);
_16 = _5.2;
(*_11) = [_26.3.0];
RET = [_20,_20,_20,_20,_20,_20];
_23 = _18 + _32;
_27 = (-138632690063045660636530319086897882195_i128);
(*_7) = [_8];
_27 = (-8399377603202452090163146137036495262_i128) >> _23;
_1 = [_18,_23,_23,_23,_18,_18,_23];
_24.fld0 = (_5.0, _2, _14, _5.3);
_3.0 = _8 * _26.3.0;
_33 = core::ptr::addr_of_mut!(_17.0);
(*_11) = [_8];
_37.fld1.fld1.fld0.0.0 = -_26.0.0;
_8 = _3.0 & _26.3.0;
_37.fld1.fld4 = [_15,_15,_15];
_16 = _15 as u128;
_37.fld1.fld1.fld0.2 = _31 << _13;
Goto(bb12)
}
bb12 = {
Goto(bb13)
}
bb13 = {
_17.0 = core::ptr::addr_of!(_37.fld1.fld2.2);
_37.fld1.fld1.fld1 = _1;
_7 = _11;
_37.fld1.fld2 = (_28, _15, 16926985854224227410_u64);
_9 = [_15,_15];
_37.fld2.0 = core::ptr::addr_of!(_37.fld1.fld2.2);
_20 = '\u{8544}';
_6 = [_23,_23,_23,_23,_32,_23,_23];
_16 = _24.fld0.2;
_36 = [_16,_14,_24.fld0.2];
Call(_37.fld1.fld2.1 = core::intrinsics::bswap(_15), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_5.0 = -_24.fld0.0;
_24.fld0 = (_5.0, _5.1, _16, _5.3);
_5.0 = _26.0.1 as i8;
_22 = 279946695_u32 + 350873691_u32;
(*_7) = [_8];
_37.fld1.fld0 = [_8];
_37.fld1.fld1.fld0.3 = _3;
_30 = _26.0.0 * _26.0.0;
_37.fld1.fld1.fld0.3.0 = _26.3.0 ^ _3.0;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(16_usize, 20_usize, Move(_20), 29_usize, Move(_29), 13_usize, Move(_13), 32_usize, Move(_32)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(16_usize, 16_usize, Move(_16), 21_usize, Move(_21), 19_usize, Move(_19), 36_usize, Move(_36)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(16_usize, 14_usize, Move(_14), 1_usize, Move(_1), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [isize; 7],mut _2: (i8, *const *const f64, u128, u8),mut _3: u128,mut _4: u128,mut _5: (i8, *const *const f64, u128, u8),mut _6: i16,mut _7: *mut [i16; 1],mut _8: *const *const f64,mut _9: isize,mut _10: u8,mut _11: i16,mut _12: u128,mut _13: [i16; 1],mut _14: (i8, *const *const f64, u128, u8)) -> f64 {
mir! {
type RET = f64;
let _15: [i16; 7];
let _16: f64;
let _17: (f32, i64, u64);
let _18: isize;
let _19: f32;
let _20: *mut [i16; 7];
let _21: char;
let _22: isize;
let _23: u32;
let _24: isize;
let _25: f64;
let _26: Adt58;
let _27: isize;
let _28: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _29: f64;
let _30: isize;
let _31: ([i64; 8], [usize; 4]);
let _32: i16;
let _33: i32;
let _34: usize;
let _35: ((f64, u16), u32, i32, (i16,));
let _36: u16;
let _37: u128;
let _38: [bool; 3];
let _39: Adt55;
let _40: (f32, i64, u64);
let _41: isize;
let _42: f32;
let _43: (f64, u16);
let _44: i16;
let _45: [i64; 8];
let _46: char;
let _47: i8;
let _48: u128;
let _49: ();
let _50: ();
{
_10 = _2.3 << _5.3;
_8 = core::ptr::addr_of!((*_8));
_14.1 = core::ptr::addr_of!((*_8));
RET = 1188034366_u32 as f64;
_2 = _14;
_14.2 = !_3;
_11 = 17010726620821287232_u64 as i16;
_1 = [_9,_9,_9,_9,_9,_9,_9];
_3 = _5.2;
_3 = _4 / 31148036671370651168324931061399344864_u128;
RET = _9 as f64;
_2.2 = !_3;
_15 = [_6,_6,_6,_6,_6,_6,_6];
_11 = _6;
_2 = _5;
_2.2 = !_12;
(*_8) = core::ptr::addr_of!(_16);
_3 = _2.2 ^ _2.2;
_2.2 = _14.3 as u128;
_16 = _12 as f64;
(*_8) = core::ptr::addr_of!(_16);
_7 = core::ptr::addr_of_mut!((*_7));
_14.0 = _6 as i8;
Call(_13 = core::intrinsics::transmute(_11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_16 = _2.3 as f64;
(*_8) = core::ptr::addr_of!(_16);
Call(_14.3 = core::intrinsics::transmute(_14.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_7) = [_6];
_14.2 = !_4;
_5.1 = _8;
(*_7) = [_11];
_5.2 = 52994493845706616906189934404286341752_i128 as u128;
_14 = (_2.0, _2.1, _3, _2.3);
RET = _16 / f64::NAN;
_18 = -_9;
_21 = '\u{a990e}';
_2 = (_5.0, _14.1, _14.2, _10);
(*_8) = core::ptr::addr_of!(_16);
_9 = _18;
_11 = _9 as i16;
_23 = _16 as u32;
_13 = [_11];
_9 = _18 >> _3;
_13 = [_11];
Goto(bb3)
}
bb3 = {
_24 = 9003_u16 as isize;
_3 = !_2.2;
_19 = 3415_u16 as f32;
_25 = _16;
_2.2 = _4;
_2.0 = 6_usize as i8;
_23 = 2355493965_u32 % 2163447238_u32;
_18 = _19 as isize;
_2.2 = !_14.2;
Goto(bb4)
}
bb4 = {
_9 = _24 * _24;
_14.2 = _14.0 as u128;
RET = _16 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003947503929287097_f64;
_17.1 = 7633187463362072738_i64;
_14.3 = _14.0 as u8;
_11 = !_6;
_12 = _4;
_14.0 = _2.0 * _2.0;
_14.0 = 3633859452487835651_u64 as i8;
_17.2 = _14.2 as u64;
_17 = (_19, (-5326180189941204599_i64), 10419084717747331799_u64);
_28.0.1 = [(-693922745_i32),530058786_i32,397292361_i32,1780140003_i32,285255779_i32,756895335_i32];
_27 = _3 as isize;
_23 = _27 as u32;
_5 = (_14.0, _8, _12, _10);
_20 = core::ptr::addr_of_mut!(_15);
_7 = core::ptr::addr_of_mut!((*_7));
_28.2 = _11 as u8;
_15 = [_11,_11,_6,_6,_11,_6,_11];
(*_7) = [_11];
_11 = _6 | _6;
_28.1.3.0 = _11;
(*_7) = [_28.1.3.0];
_33 = 2105160098_i32 + (-1683984658_i32);
_18 = 54475_u16 as isize;
Goto(bb5)
}
bb5 = {
_17.0 = _19 / f32::NEG_INFINITY;
_28.1.0 = (_16, 29209_u16);
_13 = [_28.1.3.0];
match _17.2 {
0 => bb3,
1 => bb4,
2 => bb6,
3 => bb7,
10419084717747331799 => bb9,
_ => bb8
}
}
bb6 = {
_9 = _24 * _24;
_14.2 = _14.0 as u128;
RET = _16 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003947503929287097_f64;
_17.1 = 7633187463362072738_i64;
_14.3 = _14.0 as u8;
_11 = !_6;
_12 = _4;
_14.0 = _2.0 * _2.0;
_14.0 = 3633859452487835651_u64 as i8;
_17.2 = _14.2 as u64;
_17 = (_19, (-5326180189941204599_i64), 10419084717747331799_u64);
_28.0.1 = [(-693922745_i32),530058786_i32,397292361_i32,1780140003_i32,285255779_i32,756895335_i32];
_27 = _3 as isize;
_23 = _27 as u32;
_5 = (_14.0, _8, _12, _10);
_20 = core::ptr::addr_of_mut!(_15);
_7 = core::ptr::addr_of_mut!((*_7));
_28.2 = _11 as u8;
_15 = [_11,_11,_6,_6,_11,_6,_11];
(*_7) = [_11];
_11 = _6 | _6;
_28.1.3.0 = _11;
(*_7) = [_28.1.3.0];
_33 = 2105160098_i32 + (-1683984658_i32);
_18 = 54475_u16 as isize;
Goto(bb5)
}
bb7 = {
_16 = _2.3 as f64;
(*_8) = core::ptr::addr_of!(_16);
Call(_14.3 = core::intrinsics::transmute(_14.0), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
(*_7) = [_6];
_14.2 = !_4;
_5.1 = _8;
(*_7) = [_11];
_5.2 = 52994493845706616906189934404286341752_i128 as u128;
_14 = (_2.0, _2.1, _3, _2.3);
RET = _16 / f64::NAN;
_18 = -_9;
_21 = '\u{a990e}';
_2 = (_5.0, _14.1, _14.2, _10);
(*_8) = core::ptr::addr_of!(_16);
_9 = _18;
_11 = _9 as i16;
_23 = _16 as u32;
_13 = [_11];
_9 = _18 >> _3;
_13 = [_11];
Goto(bb3)
}
bb9 = {
_17.1 = 2730505278389309302_i64;
_37 = _4 / 95325627529109095001882945536206960444_u128;
_39.fld0 = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_14.0 = _5.0 * _5.0;
_28.0.1 = [_33,_33,_33,_33,_33,_33];
_28.3 = _17.1;
_12 = _3;
_14.2 = _12;
_40 = _17;
_5.0 = _2.0 & _14.0;
_28.1.0 = (_25, 15985_u16);
_39.fld1.fld1.fld0.3 = (_28.1.3.0,);
_35.1 = 1_usize as u32;
_19 = -_17.0;
_35.2 = _33 << _11;
_39.fld1.fld2 = (_40.0, _17.1, _17.2);
_39.fld2.0 = core::ptr::addr_of!(_39.fld1.fld2.2);
_5.2 = _28.1.0.1 as u128;
_39.fld1.fld1.fld0.0.1 = !_28.1.0.1;
_39.fld1.fld0 = [_28.1.3.0];
Call(_35.3 = fn18((*_7), _14.0, _5.0, _17.2, _28.3, (*_20), _17.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_24 = _27 & _9;
_32 = _11 | _28.1.3.0;
_35 = (_28.1.0, _23, _33, _39.fld1.fld1.fld0.3);
_14.2 = _12;
_39.fld1.fld6 = [_21,_21,_21,_21,_21,_21];
_5.3 = _2.3 << _23;
_5 = _14;
_38 = [false,false,true];
_28.2 = _14.3;
_39.fld1.fld5 = _7;
_41 = !_9;
_39.fld1.fld4 = [_39.fld1.fld2.1,_40.1,_28.3];
_2.2 = _17.1 as u128;
_28.1.0 = _35.0;
_28.1 = (_35.0, _35.1, _33, _39.fld1.fld1.fld0.3);
_39.fld3 = !_28.1.0.1;
_39.fld1.fld1.fld0 = (_35.0, _23, _33, _35.3);
_5.3 = _2.3 >> _24;
_15 = [_35.3.0,_32,_6,_11,_39.fld1.fld1.fld0.3.0,_11,_39.fld1.fld1.fld0.3.0];
_39.fld1.fld1.fld1 = _1;
_40.1 = _39.fld1.fld1.fld0.0.1 as i64;
_43.0 = _39.fld1.fld1.fld0.0.0 / 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000093521865530343_f64;
_17.1 = _5.0 as i64;
_35.0.0 = 5085776203144684171_usize as f64;
_43 = _39.fld1.fld1.fld0.0;
(*_7) = [_39.fld1.fld1.fld0.3.0];
match _40.2 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb11,
6 => bb12,
10419084717747331799 => bb14,
_ => bb13
}
}
bb11 = {
_16 = _2.3 as f64;
(*_8) = core::ptr::addr_of!(_16);
Call(_14.3 = core::intrinsics::transmute(_14.0), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_17.0 = _19 / f32::NEG_INFINITY;
_28.1.0 = (_16, 29209_u16);
_13 = [_28.1.3.0];
match _17.2 {
0 => bb3,
1 => bb4,
2 => bb6,
3 => bb7,
10419084717747331799 => bb9,
_ => bb8
}
}
bb13 = {
_9 = _24 * _24;
_14.2 = _14.0 as u128;
RET = _16 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003947503929287097_f64;
_17.1 = 7633187463362072738_i64;
_14.3 = _14.0 as u8;
_11 = !_6;
_12 = _4;
_14.0 = _2.0 * _2.0;
_14.0 = 3633859452487835651_u64 as i8;
_17.2 = _14.2 as u64;
_17 = (_19, (-5326180189941204599_i64), 10419084717747331799_u64);
_28.0.1 = [(-693922745_i32),530058786_i32,397292361_i32,1780140003_i32,285255779_i32,756895335_i32];
_27 = _3 as isize;
_23 = _27 as u32;
_5 = (_14.0, _8, _12, _10);
_20 = core::ptr::addr_of_mut!(_15);
_7 = core::ptr::addr_of_mut!((*_7));
_28.2 = _11 as u8;
_15 = [_11,_11,_6,_6,_11,_6,_11];
(*_7) = [_11];
_11 = _6 | _6;
_28.1.3.0 = _11;
(*_7) = [_28.1.3.0];
_33 = 2105160098_i32 + (-1683984658_i32);
_18 = 54475_u16 as isize;
Goto(bb5)
}
bb14 = {
_35.1 = _28.1.1;
_39.fld1.fld1 = Adt49 { fld0: _35,fld1: _1 };
_37 = _27 as u128;
_28.0.0 = _9 | _24;
_38 = [false,true,true];
_44 = _28.1.3.0 << _37;
(*_8) = core::ptr::addr_of!(_43.0);
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(17_usize, 23_usize, Move(_23), 44_usize, Move(_44), 33_usize, Move(_33), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(17_usize, 41_usize, Move(_41), 11_usize, Move(_11), 24_usize, Move(_24), 38_usize, Move(_38)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(17_usize, 1_usize, Move(_1), 9_usize, Move(_9), 50_usize, _50, 50_usize, _50), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [i16; 1],mut _2: i8,mut _3: i8,mut _4: u64,mut _5: i64,mut _6: [i16; 7],mut _7: f32) -> (i16,) {
mir! {
type RET = (i16,);
let _8: Adt52;
let _9: bool;
let _10: Adt65;
let _11: ((isize, [i32; 6]), ((f64, u16), u32, i32, (i16,)), u8, i64);
let _12: Adt49;
let _13: ((f64, u16), u32, i32, (i16,));
let _14: Adt63;
let _15: Adt49;
let _16: *const i128;
let _17: *const *const f64;
let _18: isize;
let _19: bool;
let _20: isize;
let _21: ([i64; 8], [usize; 4]);
let _22: char;
let _23: *mut bool;
let _24: ((f64, u16), u32, i32, (i16,));
let _25: ();
let _26: ();
{
RET.0 = '\u{4e50f}' as i16;
_6 = [1115_i16,(-6432_i16),(-9831_i16),27393_i16,(-5521_i16),(-7710_i16),6116_i16];
_1 = [22145_i16];
RET.0 = 18052_i16;
_8.fld1.2 = [(-15184_i16),17582_i16,16057_i16,9792_i16,943_i16,(-22035_i16),(-28652_i16)];
_9 = !false;
_9 = _2 <= _3;
_2 = _3 & _3;
match _4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
10419084717747331799 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_8.fld1.0 = _7 as i128;
_6 = _8.fld1.2;
_1 = [(-29950_i16)];
_11.1.0.0 = _8.fld1.0 as f64;
_1 = [30695_i16];
_9 = true;
_11.0.0 = 40_isize;
_11.1.2 = (-1463350323_i32);
_12.fld0.1 = !3526881730_u32;
_8.fld1.4 = core::ptr::addr_of!(_10.fld0);
_13.0.0 = _4 as f64;
_12.fld0.0.0 = _13.0.0;
_13.3 = (2903_i16,);
_12.fld0.0.0 = _13.0.0 * _13.0.0;
_6 = [_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0];
_8.fld0 = _8.fld1.0;
_12.fld0.1 = 474542951_u32 * 4148165057_u32;
_15.fld0.0.1 = 62308_u16;
Call(_11.1.0.0 = core::intrinsics::transmute(_5), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_13.0.1 = _12.fld0.0.0 as u16;
_15.fld0.0.0 = _11.0.0 as f64;
_14.fld0 = [_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0];
_12.fld0.3.0 = _13.3.0;
_12.fld0.0.0 = _15.fld0.0.0;
_15.fld0.0.0 = -_11.1.0.0;
_8.fld4 = _7 as i16;
_11.3 = _11.0.0 as i64;
_1 = [_8.fld4];
_15.fld0.0 = (_13.0.0, _13.0.1);
Goto(bb10)
}
bb10 = {
_13.1 = !_12.fld0.1;
RET = (_12.fld0.3.0,);
_13.0.0 = 10594844030677784201_usize as f64;
Goto(bb11)
}
bb11 = {
_11.0.0 = (-9223372036854775808_isize);
Call(_13.3.0 = core::intrinsics::transmute(_12.fld0.3.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_15.fld0.2 = _11.1.2 ^ _11.1.2;
_11.1.0 = _13.0;
_15.fld0.3 = (_13.3.0,);
_11.1 = (_15.fld0.0, _13.1, _15.fld0.2, _13.3);
_14.fld0 = [_12.fld0.3.0,_12.fld0.3.0,_8.fld4,_8.fld4,_13.3.0,_11.1.3.0,_8.fld4];
_15.fld0.0 = _11.1.0;
match _12.fld0.3.0 {
0 => bb4,
1 => bb7,
2 => bb3,
2903 => bb14,
_ => bb13
}
}
bb13 = {
_13.0.1 = _12.fld0.0.0 as u16;
_15.fld0.0.0 = _11.0.0 as f64;
_14.fld0 = [_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0,_13.3.0];
_12.fld0.3.0 = _13.3.0;
_12.fld0.0.0 = _15.fld0.0.0;
_15.fld0.0.0 = -_11.1.0.0;
_8.fld4 = _7 as i16;
_11.3 = _11.0.0 as i64;
_1 = [_8.fld4];
_15.fld0.0 = (_13.0.0, _13.0.1);
Goto(bb10)
}
bb14 = {
_8.fld3 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_12.fld0.0 = (_11.1.0.0, _13.0.1);
_11.1.3.0 = _8.fld4 & _13.3.0;
_2 = _3 * _3;
_18 = !_11.0.0;
_13.3 = _12.fld0.3;
_8.fld4 = 242_u8 as i16;
_13.1 = _11.1.1;
_24.2 = _15.fld0.2;
_12.fld0.0.0 = -_11.1.0.0;
_12.fld0.3 = _15.fld0.3;
_24.3.0 = _13.3.0;
_2 = !_3;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(18_usize, 9_usize, Move(_9), 18_usize, Move(_18), 5_usize, Move(_5), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box(8551298813326864611_u64), std::hint::black_box((-70_isize)), std::hint::black_box((-10_i8)), std::hint::black_box(237_u8));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: ((f64, u16), u32, i32, (i16,)),
fld1: [isize; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: (i8, *const *const f64, u128, u8),
fld1: *const (isize, [i32; 6]),
}
#[derive(Debug)]
pub struct Adt51 {
fld0: [i16; 1],
fld1: Adt49,
fld2: (f32, i64, u64),
fld3: *const (isize, [i32; 6]),
fld4: [i64; 3],
fld5: *mut [i16; 1],
fld6: [char; 6],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: i128,
fld1: (i128, [i32; 6], [i16; 7], f64, *const *const f64),
fld2: [i32; 6],
fld3: [isize; 7],
fld4: i16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: [i64; 2],
fld1: [i32; 6],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: [i16; 1],
fld1: *mut [i16; 7],
fld2: Adt53,
fld3: [char; 6],
}
#[derive(Debug)]
pub struct Adt55 {
fld0: [i64; 8],
fld1: Adt51,
fld2: (*const u64,),
fld3: u16,
fld4: [char; 6],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: u128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: Adt56,
fld1: (isize, [i32; 6]),
fld2: (f64, u16),
}
#[derive(Debug)]
pub struct Adt58 {
fld0: *mut bool,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: Adt57,
fld1: u32,
fld2: (*const u64,),
fld3: (i8, *const *const f64, u128, u8),
fld4: *const *const f64,
fld5: i32,
fld6: u8,
fld7: i128,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: bool,
fld1: *mut [i16; 7],
fld2: *mut [i16; 1],
fld3: *const *const f64,
fld4: ([i64; 8], [usize; 4]),
fld5: (f32, i64, u64),
fld6: i64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: u32,
fld1: ([i64; 8], [usize; 4]),
fld2: Adt57,
fld3: *mut *const u64,
fld4: ([u16; 6], *const f64),
fld5: i64,
}
#[derive(Debug)]
pub struct Adt62 {
fld0: *mut [i16; 7],
fld1: Adt52,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: [i16; 7],
}
#[derive(Debug)]
pub struct Adt64 {
fld0: (i128, [i32; 6], [i16; 7], f64, *const *const f64),
fld1: *const (isize, [i32; 6]),
fld2: f64,
fld3: Adt63,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: *const f64,
}

