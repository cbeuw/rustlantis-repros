#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u128,mut _3: i64) -> [u16; 4] {
mir! {
type RET = [u16; 4];
let _4: isize;
let _5: ([u32; 6],);
let _6: [u128; 1];
let _7: f64;
let _8: [u32; 6];
let _9: Adt61;
let _10: f64;
let _11: [i16; 6];
let _12: Adt59;
let _13: (char, [u128; 8]);
let _14: Adt58;
let _15: isize;
let _16: Adt64;
let _17: *const bool;
let _18: [usize; 2];
let _19: [u16; 4];
let _20: u32;
let _21: Adt61;
let _22: f64;
let _23: isize;
let _24: i32;
let _25: Adt62;
let _26: isize;
let _27: ();
let _28: ();
{
_2 = 67552374061198948104802385918828413679_u128;
RET = [92_u16,4598_u16,332_u16,58531_u16];
RET = [6047_u16,17017_u16,23662_u16,60660_u16];
RET = [15438_u16,16664_u16,46017_u16,15582_u16];
_1 = true;
_3 = (-4041909465499915234_i64);
RET = [39355_u16,64995_u16,13064_u16,54483_u16];
_1 = true;
RET = [49414_u16,46452_u16,4574_u16,55165_u16];
_3 = 197038845_u32 as i64;
_5.0 = [927640016_u32,2127305570_u32,4176889756_u32,2471926420_u32,2795150537_u32,1480730192_u32];
_3 = (-8045142639877748549_i64) ^ (-4197893454418852643_i64);
_2 = (-1186119348_i32) as u128;
_3 = 22683_i16 as i64;
_7 = (-1961736441_i32) as f64;
_4 = 1839040241_i32 as isize;
_7 = 180_u8 as f64;
_2 = 313547330294760269382468960760518886534_u128;
_6 = [_2];
RET = [15204_u16,41793_u16,25890_u16,60178_u16];
Call(_3 = core::intrinsics::bswap(5432487125497655795_i64), bb1, UnwindUnreachable())
}
bb1 = {
_1 = true;
Goto(bb2)
}
bb2 = {
_1 = true;
_8 = [914979392_u32,1887605616_u32,2877427816_u32,2470550760_u32,2567886915_u32,2352461730_u32];
_8 = _5.0;
_9.fld2 = [162850243067016987313334120491126384149_i128,117107426639995814163935114791299066059_i128,137971278935034708052127202874769220785_i128,28880866184407027981550037636815249366_i128];
_6 = [_2];
_8 = [1849550655_u32,212628440_u32,2611481719_u32,3717972157_u32,4237855743_u32,2662111570_u32];
_7 = 3024984959_u32 as f64;
_4 = 9223372036854775807_isize * 9223372036854775807_isize;
_9.fld1 = (-123_i8) as u64;
_3 = -5645082723234879203_i64;
_5.0 = [4212672611_u32,3324653144_u32,1913043611_u32,2252314076_u32,2711933385_u32,773070325_u32];
_7 = _3 as f64;
_3 = 2_usize as i64;
_9.fld0.0 = _8;
_5 = _9.fld0;
_5.0 = [3138473751_u32,2361769859_u32,198912756_u32,857353133_u32,3217804249_u32,3726625024_u32];
match _2 {
0 => bb1,
1 => bb3,
2 => bb4,
313547330294760269382468960760518886534 => bb6,
_ => bb5
}
}
bb3 = {
_1 = true;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_2 = 208771007223621839221223373752536228079_u128 << _4;
_6 = [_2];
_1 = false;
_10 = 95_i8 as f64;
_3 = 8689769277558412239_i64 - 1348468371262220050_i64;
_9.fld0.0 = _8;
_4 = (-43_isize) << _3;
_12.fld0.2 = _3 as f64;
_14.fld3.2.1.0 = 907382952_u32;
_13.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Call(_12.fld0 = fn1(_9.fld0, _10, _7, _9.fld2, _14.fld3.2.1.0, _14.fld3.2.1.0, _9.fld2, _9.fld0, _1, _9.fld1, _4, _1, _4), bb7, UnwindUnreachable())
}
bb7 = {
_12.fld1 = _12.fld0.1;
_14.fld3.2.0 = [85_u8];
_3 = 5302206246877298278_i64 + (-3189885663191112011_i64);
_1 = true ^ true;
_8 = [_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0];
_13.0 = _12.fld0.0;
_14.fld3.2.1.0 = 8_u8 as u32;
_12.fld0 = (_13.0, _12.fld1, _10);
_14.fld3.1 = _1 as u128;
_14.fld3.2.1.1 = _13.0;
_7 = -_12.fld0.2;
_9.fld0.0 = _5.0;
_11 = [3398_i16,9350_i16,(-1521_i16),(-14660_i16),13773_i16,10149_i16];
_14.fld4 = 64587_u16;
_10 = _7;
_12.fld0 = (_13.0, _12.fld1, _7);
_16.fld0.fld0.3 = [(-119_i8),(-118_i8)];
_11 = [(-9660_i16),19842_i16,7173_i16,20034_i16,31407_i16,16199_i16];
_7 = _12.fld0.2;
_16.fld0.fld2 = _11;
_14.fld0 = _1;
_14.fld3.0 = core::ptr::addr_of_mut!(_16.fld0.fld0.3);
match _14.fld4 {
0 => bb3,
1 => bb5,
64587 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
_16.fld0.fld4 = [_14.fld3.1,_2,_2,_14.fld3.1,_2,_2,_2,_14.fld3.1];
_16.fld0.fld1 = !2648121550947090812_usize;
_9.fld0 = _5;
_13 = (_12.fld0.0, _16.fld0.fld4);
_11 = [12617_i16,(-29168_i16),30983_i16,13139_i16,17887_i16,26211_i16];
_16.fld3.fld2 = _9;
_16.fld0.fld3 = _7 as i8;
_16.fld3.fld1 = [_12.fld0.1,_12.fld1,_12.fld1,_12.fld0.1];
_11 = [12255_i16,(-12970_i16),11658_i16,(-13866_i16),14864_i16,(-28025_i16)];
_9.fld2 = [_12.fld1,_12.fld0.1,_12.fld0.1,_12.fld0.1];
_9.fld0 = _16.fld3.fld2.fld0;
_16.fld3.fld0 = !_14.fld0;
_16.fld3.fld2.fld2 = [_12.fld0.1,_12.fld1,_12.fld0.1,_12.fld1];
_14.fld3.1 = !_2;
_13.1 = _16.fld0.fld4;
_16.fld3.fld2.fld2 = [_12.fld0.1,_12.fld0.1,_12.fld0.1,_12.fld1];
_21.fld2 = _16.fld3.fld2.fld2;
_19 = [_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_17 = core::ptr::addr_of!(_1);
_12.fld0.0 = _14.fld3.2.1.1;
_5 = (_16.fld3.fld2.fld0.0,);
_17 = core::ptr::addr_of!((*_17));
_8 = [_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0];
_21 = Adt61 { fld0: _9.fld0,fld1: _16.fld3.fld2.fld1,fld2: _16.fld3.fld1 };
match _14.fld4 {
64587 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_21.fld2 = [_12.fld0.1,_12.fld1,_12.fld1,_12.fld0.1];
Goto(bb12)
}
bb12 = {
_12.fld0 = (_14.fld3.2.1.1, _12.fld1, _10);
_16.fld2 = [11332_i16,(-27037_i16),4370_i16,(-11811_i16),29590_i16,4715_i16];
_15 = _16.fld0.fld3 as isize;
match _14.fld4 {
0 => bb8,
64587 => bb14,
_ => bb13
}
}
bb13 = {
_12.fld1 = _12.fld0.1;
_14.fld3.2.0 = [85_u8];
_3 = 5302206246877298278_i64 + (-3189885663191112011_i64);
_1 = true ^ true;
_8 = [_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0,_14.fld3.2.1.0];
_13.0 = _12.fld0.0;
_14.fld3.2.1.0 = 8_u8 as u32;
_12.fld0 = (_13.0, _12.fld1, _10);
_14.fld3.1 = _1 as u128;
_14.fld3.2.1.1 = _13.0;
_7 = -_12.fld0.2;
_9.fld0.0 = _5.0;
_11 = [3398_i16,9350_i16,(-1521_i16),(-14660_i16),13773_i16,10149_i16];
_14.fld4 = 64587_u16;
_10 = _7;
_12.fld0 = (_13.0, _12.fld1, _7);
_16.fld0.fld0.3 = [(-119_i8),(-118_i8)];
_11 = [(-9660_i16),19842_i16,7173_i16,20034_i16,31407_i16,16199_i16];
_7 = _12.fld0.2;
_16.fld0.fld2 = _11;
_14.fld0 = _1;
_14.fld3.0 = core::ptr::addr_of_mut!(_16.fld0.fld0.3);
match _14.fld4 {
0 => bb3,
1 => bb5,
64587 => bb9,
_ => bb8
}
}
bb14 = {
_16.fld0.fld0.2 = _16.fld0.fld1;
_25.fld5.fld0.0 = _14.fld3.2.1.1;
_25.fld0.fld3.2.0 = [25_u8];
_2 = _14.fld3.1;
_25.fld0.fld3.0 = core::ptr::addr_of_mut!(_16.fld0.fld0.3);
_9.fld1 = !_21.fld1;
_25.fld1.2 = 30069_i16 ^ 1163_i16;
_25.fld0.fld2 = [_3,_3,_3,_3,_3,_3,_3,_3];
_25.fld0.fld2 = [_3,_3,_3,_3,_3,_3,_3,_3];
_25.fld0.fld2 = [_3,_3,_3,_3,_3,_3,_3,_3];
_16.fld0.fld0.1 = 178_u8;
_16.fld0.fld0.2 = _14.fld4 as usize;
_25.fld5.fld3 = [_12.fld0.1,_12.fld0.1,_12.fld0.1,_12.fld0.1];
_25.fld5.fld0.1 = [_2,_2,_2,_2,_2,_2,_14.fld3.1,_14.fld3.1];
_14.fld3.3 = (_16.fld3.fld2.fld0.0,);
_25.fld0.fld3.2.1 = (_14.fld3.2.1.0, _25.fld5.fld0.0);
_15 = _4 + _4;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(0_usize, 4_usize, Move(_4), 3_usize, Move(_3), 13_usize, Move(_13), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(0_usize, 2_usize, Move(_2), 28_usize, _28, 28_usize, _28, 28_usize, _28), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: ([u32; 6],),mut _2: f64,mut _3: f64,mut _4: [i128; 4],mut _5: u32,mut _6: u32,mut _7: [i128; 4],mut _8: ([u32; 6],),mut _9: bool,mut _10: u64,mut _11: isize,mut _12: bool,mut _13: isize) -> (char, i128, f64) {
mir! {
type RET = (char, i128, f64);
let _14: ([u32; 6],);
let _15: *const [isize; 5];
let _16: (char, i128, f64);
let _17: Adt59;
let _18: isize;
let _19: Adt62;
let _20: (u32, char);
let _21: u32;
let _22: i64;
let _23: char;
let _24: *const char;
let _25: (char, [u128; 8]);
let _26: char;
let _27: [u16; 4];
let _28: [u8; 1];
let _29: (char, i128, f64);
let _30: f64;
let _31: isize;
let _32: bool;
let _33: [usize; 2];
let _34: bool;
let _35: Adt61;
let _36: Adt65;
let _37: Adt61;
let _38: f64;
let _39: ();
let _40: ();
{
RET.2 = (-129124990428382122253972143704955261101_i128) as f64;
RET.2 = _3 * _2;
_7 = _4;
RET.0 = '\u{61664}';
RET = ('\u{10b4bf}', 9434814557432618051177925696237390421_i128, _2);
_12 = _9;
RET.1 = 30295_i16 as i128;
RET.1 = !83061649781285189954309725708817073454_i128;
RET.2 = _11 as f64;
RET = ('\u{a4f57}', 51579120122101317669177214195129321294_i128, _2);
_5 = _6 ^ _6;
RET.0 = '\u{5d48a}';
_7 = [114142060714434465069937014201876603260_i128,45337049229372596665576493579972239809_i128,13060042245349488403626212482391652707_i128,41345961515216530461908259297599261874_i128];
RET = ('\u{b3533}', (-155997865161751928514206994774673000445_i128), _2);
_7 = [88128523034320577234275958867766699325_i128,138478740099799104858700655720567560564_i128,(-9052955899081770834205316784648045454_i128),(-97835414526727167720182982007177815546_i128)];
_2 = _3;
_5 = !_6;
_4 = _7;
_14 = _1;
RET.2 = _2;
_8.0 = [_5,_6,_5,_5,_6,_5];
RET.0 = '\u{4d4f1}';
_4 = [(-106172061761951339603758745270716098692_i128),82871695410106388757325535188020895971_i128,(-81454956293578369798448467045048127495_i128),(-97037791556992668487224480269929256244_i128)];
_1.0 = [_6,_5,_6,_6,_5,_6];
Goto(bb1)
}
bb1 = {
_1.0 = [_6,_6,_5,_6,_5,_5];
_4 = [32819169351652879139174971361371439398_i128,(-105388374990082999138709598944262335784_i128),143126880304054858333942291913569547983_i128,157643286764220449663506346251142590338_i128];
_6 = 4259090482060077987_usize as u32;
RET.2 = (-119_i8) as f64;
RET.0 = '\u{ad9d5}';
_14.0 = [_6,_5,_6,_5,_6,_6];
_11 = _13;
RET.0 = '\u{66c3}';
_7 = _4;
RET.0 = '\u{44a2b}';
_1.0 = [_5,_5,_6,_5,_5,_6];
_11 = _13 >> _6;
RET = ('\u{16d02}', (-78648391275473864174984055745108728304_i128), _3);
RET.1 = '\u{3d1bc}' as i128;
RET = ('\u{56dfc}', (-115121518298251586978495546587940093503_i128), _3);
_13 = _10 as isize;
Goto(bb2)
}
bb2 = {
RET = ('\u{ca2ab}', 1009049315001465191046905809141726203_i128, _2);
_16 = ('\u{44a4a}', 72322247238341397853492624572837977919_i128, _2);
RET.1 = _5 as i128;
_8 = (_14.0,);
_4 = _7;
_8.0 = [_6,_5,_5,_5,_6,_5];
_5 = _10 as u32;
Goto(bb3)
}
bb3 = {
_4 = [_16.1,_16.1,_16.1,_16.1];
_12 = _2 < _2;
_16 = ('\u{1b2e0}', 14394513713253521819295105798561903295_i128, _2);
_1 = _8;
_16.2 = _3;
_17.fld0.1 = _16.1 + _16.1;
Goto(bb4)
}
bb4 = {
_16.0 = '\u{fc0c5}';
_17.fld0 = (_16.0, _16.1, _2);
RET.0 = _17.fld0.0;
_17.fld0.0 = _16.0;
_17.fld1 = _11 as i128;
_1 = (_8.0,);
RET.0 = _16.0;
_17.fld1 = 27_i8 as i128;
RET = _17.fld0;
RET = (_17.fld0.0, _17.fld0.1, _2);
RET.0 = _17.fld0.0;
RET.0 = _17.fld0.0;
Call(_5 = core::intrinsics::bswap(_6), bb5, UnwindUnreachable())
}
bb5 = {
_3 = _6 as f64;
RET.2 = _17.fld0.1 as f64;
RET = (_17.fld0.0, _16.1, _2);
_17.fld0.1 = -_16.1;
_8.0 = _14.0;
_19.fld5.fld0.1 = [179624922543380671665936071026317381922_u128,337334461204683927993407439880259484919_u128,56315012563437795445421103667637665404_u128,291465049239669833176262762756059047216_u128,93248498585595383711348596564914836666_u128,186797877963313355404547319017526423653_u128,47240554242303690189481375160140001410_u128,128264033446293284211629942761029170444_u128];
_19.fld0.fld3.2.1.1 = _16.0;
_9 = _17.fld0.2 > _16.2;
_8.0 = _14.0;
_3 = _17.fld0.2;
Goto(bb6)
}
bb6 = {
_2 = -_16.2;
_19.fld0.fld4 = 33302_u16 % 48889_u16;
_19.fld2 = [1053743561859983601_usize,4_usize];
_17.fld1 = _6 as i128;
_19.fld0.fld3.3.0 = _1.0;
_1.0 = _8.0;
_19.fld0.fld3.2.0 = [176_u8];
_19.fld0.fld3.2.1 = (_5, _17.fld0.0);
_14 = (_1.0,);
_22 = 8696960249722679511_i64 * (-5720960109772372687_i64);
RET.1 = !_17.fld0.1;
_20.1 = _19.fld0.fld3.2.1.1;
match _16.1 {
0 => bb4,
1 => bb2,
14394513713253521819295105798561903295 => bb8,
_ => bb7
}
}
bb7 = {
_1.0 = [_6,_6,_5,_6,_5,_5];
_4 = [32819169351652879139174971361371439398_i128,(-105388374990082999138709598944262335784_i128),143126880304054858333942291913569547983_i128,157643286764220449663506346251142590338_i128];
_6 = 4259090482060077987_usize as u32;
RET.2 = (-119_i8) as f64;
RET.0 = '\u{ad9d5}';
_14.0 = [_6,_5,_6,_5,_6,_6];
_11 = _13;
RET.0 = '\u{66c3}';
_7 = _4;
RET.0 = '\u{44a2b}';
_1.0 = [_5,_5,_6,_5,_5,_6];
_11 = _13 >> _6;
RET = ('\u{16d02}', (-78648391275473864174984055745108728304_i128), _3);
RET.1 = '\u{3d1bc}' as i128;
RET = ('\u{56dfc}', (-115121518298251586978495546587940093503_i128), _3);
_13 = _10 as isize;
Goto(bb2)
}
bb8 = {
RET.2 = _3 * _3;
_19.fld4 = 76933496504012742861988334994488275383_u128 as i16;
_17.fld0.1 = _17.fld1;
_19.fld1.0 = _22 & _22;
_15 = core::ptr::addr_of!(_19.fld1.1);
_16.0 = _17.fld0.0;
_8 = _14;
_16.1 = _17.fld0.1;
_24 = core::ptr::addr_of!(_19.fld5.fld0.0);
_19.fld0.fld3.3.0 = [_5,_19.fld0.fld3.2.1.0,_19.fld0.fld3.2.1.0,_6,_5,_19.fld0.fld3.2.1.0];
_7 = _4;
_19.fld0.fld3.3 = (_8.0,);
_17.fld0.1 = !_16.1;
_19.fld0.fld0 = _12 ^ _12;
_22 = _17.fld0.2 as i64;
_20.0 = !_19.fld0.fld3.2.1.0;
RET.1 = _19.fld1.0 as i128;
_19.fld3 = core::ptr::addr_of!(_11);
_20 = (_5, _16.0);
RET.1 = !_16.1;
_18 = _13 >> _19.fld1.0;
Call(_29.1 = fn2(_18, Move(_17), _11, _16.0, _19.fld0.fld3.2.1.0, _15, _24, _7, _8.0, _19.fld2, _16.0, _19.fld3, _19.fld1.0), bb9, UnwindUnreachable())
}
bb9 = {
_27 = [_19.fld0.fld4,_19.fld0.fld4,_19.fld0.fld4,_19.fld0.fld4];
_16.0 = _20.1;
Goto(bb10)
}
bb10 = {
(*_24) = _19.fld0.fld3.2.1.1;
(*_15) = [_13,_13,_11,_11,_13];
_23 = (*_24);
_19.fld0.fld3.1 = _19.fld4 as u128;
_19.fld0.fld3.3 = (_1.0,);
RET = (_16.0, _29.1, _3);
_19.fld5.fld0.0 = _23;
RET.2 = -_3;
_19.fld0.fld3.1 = 232504555881628773933125905120152271683_u128;
_28 = [21_u8];
_22 = 17391671563457405715_usize as i64;
_29 = _16;
_19.fld5.fld3 = [_29.1,_16.1,_16.1,_16.1];
RET.1 = _19.fld1.0 as i128;
_9 = !_19.fld0.fld0;
RET.1 = !_16.1;
_16.2 = -_3;
match _19.fld0.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb8,
4 => bb5,
5 => bb11,
232504555881628773933125905120152271683 => bb13,
_ => bb12
}
}
bb11 = {
RET = ('\u{ca2ab}', 1009049315001465191046905809141726203_i128, _2);
_16 = ('\u{44a4a}', 72322247238341397853492624572837977919_i128, _2);
RET.1 = _5 as i128;
_8 = (_14.0,);
_4 = _7;
_8.0 = [_6,_5,_5,_5,_6,_5];
_5 = _10 as u32;
Goto(bb3)
}
bb12 = {
_1.0 = [_6,_6,_5,_6,_5,_5];
_4 = [32819169351652879139174971361371439398_i128,(-105388374990082999138709598944262335784_i128),143126880304054858333942291913569547983_i128,157643286764220449663506346251142590338_i128];
_6 = 4259090482060077987_usize as u32;
RET.2 = (-119_i8) as f64;
RET.0 = '\u{ad9d5}';
_14.0 = [_6,_5,_6,_5,_6,_6];
_11 = _13;
RET.0 = '\u{66c3}';
_7 = _4;
RET.0 = '\u{44a2b}';
_1.0 = [_5,_5,_6,_5,_5,_6];
_11 = _13 >> _6;
RET = ('\u{16d02}', (-78648391275473864174984055745108728304_i128), _3);
RET.1 = '\u{3d1bc}' as i128;
RET = ('\u{56dfc}', (-115121518298251586978495546587940093503_i128), _3);
_13 = _10 as isize;
Goto(bb2)
}
bb13 = {
_19.fld0.fld3.2.1.0 = _5;
_25.1 = [_19.fld0.fld3.1,_19.fld0.fld3.1,_19.fld0.fld3.1,_19.fld0.fld3.1,_19.fld0.fld3.1,_19.fld0.fld3.1,_19.fld0.fld3.1,_19.fld0.fld3.1];
_16.0 = _19.fld0.fld3.2.1.1;
_19.fld0.fld3.1 = 314489363549742352913288822606918676608_u128;
_19.fld0.fld1 = _29.2 * _16.2;
_19.fld1.2 = _19.fld4 | _19.fld4;
_19.fld0.fld4 = 49033_u16 - 61741_u16;
_8.0 = [_20.0,_6,_20.0,_19.fld0.fld3.2.1.0,_20.0,_6];
_19.fld0.fld3.2.1.1 = (*_24);
_29.1 = _16.1 << _13;
_16.0 = (*_24);
_19.fld5.fld1 = _29.0;
_29 = _16;
_19.fld0.fld3.3 = _8;
_34 = _9 | _12;
Call(_13 = core::intrinsics::transmute(_11), bb14, UnwindUnreachable())
}
bb14 = {
_28 = _19.fld0.fld3.2.0;
_37.fld1 = _10;
_19.fld3 = core::ptr::addr_of!(_31);
(*_24) = _23;
_29.2 = _2;
_9 = _12;
_16.0 = _29.0;
_26 = _23;
_32 = _19.fld1.0 == _19.fld1.0;
_35.fld0 = _8;
_19.fld4 = _19.fld1.2 ^ _19.fld1.2;
RET.2 = _16.2 / f64::NAN;
_36.fld0.fld1 = [_16.1,_29.1,_29.1,_16.1];
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(1_usize, 11_usize, Move(_11), 4_usize, Move(_4), 5_usize, Move(_5), 7_usize, Move(_7)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(1_usize, 22_usize, Move(_22), 26_usize, Move(_26), 27_usize, Move(_27), 23_usize, Move(_23)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(1_usize, 32_usize, Move(_32), 6_usize, Move(_6), 40_usize, _40, 40_usize, _40), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: isize,mut _2: Adt59,mut _3: isize,mut _4: char,mut _5: u32,mut _6: *const [isize; 5],mut _7: *const char,mut _8: [i128; 4],mut _9: [u32; 6],mut _10: [usize; 2],mut _11: char,mut _12: *const isize,mut _13: i64) -> i128 {
mir! {
type RET = i128;
let _14: i128;
let _15: ([u8; 1], (u32, char));
let _16: isize;
let _17: bool;
let _18: ([u32; 6],);
let _19: [u128; 8];
let _20: u16;
let _21: Adt65;
let _22: [u16; 4];
let _23: (f64,);
let _24: Adt53;
let _25: ([u32; 6],);
let _26: [u128; 4];
let _27: i64;
let _28: Adt60;
let _29: [i8; 2];
let _30: usize;
let _31: Adt52;
let _32: *mut i16;
let _33: bool;
let _34: u8;
let _35: *const isize;
let _36: (i64, [isize; 5], i16);
let _37: ();
let _38: ();
{
_6 = core::ptr::addr_of!((*_6));
_1 = (*_12);
_15.0 = [146_u8];
_12 = core::ptr::addr_of!((*_12));
_15.1 = (_5, _11);
RET = _2.fld0.1 * _2.fld0.1;
_18.0 = [_5,_15.1.0,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
RET = _2.fld0.1;
_18 = (_9,);
_13 = -68449893254837490_i64;
RET = !_2.fld0.1;
_2.fld0.2 = 18021122100741618411_u64 as f64;
_15.1.1 = _2.fld0.0;
_7 = core::ptr::addr_of!(_2.fld0.0);
_15.0 = [8_u8];
Call((*_12) = fn3(_6, _2.fld0, _15.0, (*_7), _11, _9, _6, _2.fld0.1, _10, _2.fld0.2, _2.fld0.0, _7, _7, _1, (*_7), _12), bb1, UnwindUnreachable())
}
bb1 = {
_21.fld0.fld2.fld0.0 = _18.0;
(*_7) = _4;
_15.1.1 = _2.fld0.0;
_13 = _11 as i64;
_17 = true;
_1 = 46014962_i32 as isize;
_1 = (*_12);
_20 = 22993_u16;
match _20 {
22993 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_21.fld0.fld2.fld1 = 910918407_i32 as u64;
_24.fld3.fld2 = core::ptr::addr_of_mut!(_24.fld4);
_18.0 = [_5,_5,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
_20 = 16850_u16;
_16 = _1;
Call(_25.0 = core::intrinsics::transmute(_18.0), bb4, UnwindUnreachable())
}
bb4 = {
(*_6) = [_3,_16,(*_12),_16,(*_12)];
_24.fld3.fld3 = _8;
_23 = (_2.fld0.2,);
_24.fld1 = !_13;
_24.fld2 = core::ptr::addr_of!(_11);
_27 = _13 - _24.fld1;
_21.fld0.fld1 = [_2.fld1,_2.fld1,_2.fld1,_2.fld0.1];
_19 = [74827716811629237101366427228964885225_u128,300885389377708746634472243650873488190_u128,335646972979895546903265078038835870956_u128,263244041360954074224779643295381337227_u128,286202601125569218023904253304899023083_u128,117757195739151982980341676460130875731_u128,109687878166793339553622779857159756106_u128,216549031609427707215584687043826287289_u128];
_28.fld2.fld4 = [219661763788674322967892861388994733421_u128];
match _20 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
16850 => bb12,
_ => bb11
}
}
bb5 = {
_21.fld0.fld2.fld1 = 910918407_i32 as u64;
_24.fld3.fld2 = core::ptr::addr_of_mut!(_24.fld4);
_18.0 = [_5,_5,_15.1.0,_15.1.0,_15.1.0,_15.1.0];
_20 = 16850_u16;
_16 = _1;
Call(_25.0 = core::intrinsics::transmute(_18.0), bb4, UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_21.fld0.fld2.fld0.0 = _18.0;
(*_7) = _4;
_15.1.1 = _2.fld0.0;
_13 = _11 as i64;
_17 = true;
_1 = 46014962_i32 as isize;
_1 = (*_12);
_20 = 22993_u16;
match _20 {
22993 => bb3,
_ => bb2
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_28.fld2.fld6.fld2 = [19252_i16,(-27279_i16),(-19132_i16),(-2422_i16),2166_i16,(-2703_i16)];
_29 = [43_i8,14_i8];
_28.fld1.fld0.2 = (_15.0, _15.1);
_25.0 = _18.0;
_28.fld1.fld5.fld0 = (_7, 244_u8, 1_usize, _29);
_24.fld4 = !15723_i16;
_28.fld1.fld5.fld4 = [73759334019493928984427658553091596243_u128,296017949941093392861564457508722321773_u128,70524240648179585332780571642972014453_u128,30969078914704002447513704446051405037_u128,729080728270895108192235722699780448_u128,196854912248016768559783644385510346657_u128,320426674903871951118009960756809867072_u128,166800318777674094680236029279401120979_u128];
_28.fld2.fld5 = !1548712779_i32;
_1 = !_3;
_2.fld0.1 = _2.fld1;
_28.fld1.fld3.0 = core::ptr::addr_of!(_15.1.1);
_18.0 = [_28.fld1.fld0.2.1.0,_15.1.0,_5,_5,_5,_28.fld1.fld0.2.1.0];
_24.fld3.fld4 = core::ptr::addr_of!(_21.fld0.fld0);
_28.fld1.fld4 = core::ptr::addr_of_mut!(_24.fld4);
_5 = _28.fld2.fld5 as u32;
_28.fld2.fld7 = _28.fld1.fld4;
_28.fld1.fld0.1 = 110585639776919163673676869493243684971_u128 << _28.fld1.fld5.fld0.1;
_14 = _2.fld0.1 * _2.fld0.1;
_28.fld1.fld5.fld1 = _28.fld1.fld5.fld0.2 & _28.fld1.fld5.fld0.2;
_26 = [_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1];
_24.fld2 = core::ptr::addr_of!(_2.fld0.0);
_28.fld2.fld6.fld0.3 = [(-83_i8),(-44_i8)];
_24.fld3.fld1 = (*_7);
_28.fld1.fld0.0 = core::ptr::addr_of_mut!(_28.fld1.fld5.fld0.3);
_18.0 = _21.fld0.fld2.fld0.0;
_18 = (_21.fld0.fld2.fld0.0,);
Goto(bb13)
}
bb13 = {
_28.fld2.fld6.fld0.0 = core::ptr::addr_of!(_28.fld1.fld0.2.1.1);
_28.fld1.fld5.fld1 = _28.fld1.fld5.fld0.2;
_28.fld2.fld6.fld3 = (-57_i8);
_23.0 = _21.fld0.fld2.fld1 as f64;
_24.fld4 = 13622_i16 & 24910_i16;
_21.fld0.fld2 = Adt61 { fld0: _25,fld1: 4151573219502551146_u64,fld2: _21.fld0.fld1 };
_18.0 = [_5,_5,_15.1.0,_15.1.0,_28.fld1.fld0.2.1.0,_28.fld1.fld0.2.1.0];
(*_12) = _23.0 as isize;
_28.fld1.fld3.0 = core::ptr::addr_of!(_15.1.1);
_16 = _2.fld0.2 as isize;
_28.fld1.fld1 = [_5,_28.fld1.fld0.2.1.0,_15.1.0,_5,_15.1.0,_15.1.0];
_28.fld2.fld6.fld0.0 = core::ptr::addr_of!(_15.1.1);
_24.fld2 = core::ptr::addr_of!(_24.fld3.fld1);
_28.fld2.fld1 = core::ptr::addr_of!(_15.1.1);
_11 = _24.fld3.fld1;
_8 = _21.fld0.fld1;
_28.fld2.fld6.fld0.2 = _28.fld1.fld5.fld1 | _28.fld1.fld5.fld1;
_28.fld2.fld2 = _25;
_24.fld3.fld0.0 = (*_7);
_31.fld4 = _28.fld1.fld3;
_28.fld1.fld5.fld0.1 = !13_u8;
_31.fld3 = _21.fld0.fld2.fld1 / 9993854747755372640_u64;
_28.fld2.fld0 = _3 as f32;
Goto(bb14)
}
bb14 = {
_28.fld2.fld6.fld2 = [_24.fld4,_24.fld4,_24.fld4,_24.fld4,_24.fld4,_24.fld4];
_21.fld0.fld2.fld1 = !_31.fld3;
_31.fld4.0 = core::ptr::addr_of!(_24.fld3.fld0.0);
_24.fld3.fld0.1 = [_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1,_28.fld1.fld0.1];
_2.fld0.0 = _24.fld3.fld1;
_6 = core::ptr::addr_of!((*_6));
_28.fld2.fld6.fld4 = _19;
_28.fld1.fld0.2.0 = [_28.fld1.fld5.fld0.1];
_28.fld2.fld6.fld1 = _28.fld2.fld5 as usize;
_28.fld2.fld6.fld0.2 = _28.fld1.fld5.fld0.2;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(2_usize, 26_usize, Move(_26), 10_usize, Move(_10), 29_usize, Move(_29), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(2_usize, 25_usize, Move(_25), 11_usize, Move(_11), 9_usize, Move(_9), 27_usize, Move(_27)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(2_usize, 13_usize, Move(_13), 16_usize, Move(_16), 38_usize, _38, 38_usize, _38), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: *const [isize; 5],mut _2: (char, i128, f64),mut _3: [u8; 1],mut _4: char,mut _5: char,mut _6: [u32; 6],mut _7: *const [isize; 5],mut _8: i128,mut _9: [usize; 2],mut _10: f64,mut _11: char,mut _12: *const char,mut _13: *const char,mut _14: isize,mut _15: char,mut _16: *const isize) -> isize {
mir! {
type RET = isize;
let _17: [i64; 8];
let _18: u32;
let _19: isize;
let _20: [u32; 6];
let _21: (char, [u128; 8]);
let _22: (*const char, u8, usize, [i8; 2]);
let _23: u64;
let _24: [u8; 1];
let _25: u128;
let _26: usize;
let _27: f64;
let _28: (char, [u128; 8]);
let _29: (*const char,);
let _30: [i16; 6];
let _31: (f32, bool, char, *mut f32);
let _32: i128;
let _33: u128;
let _34: [u8; 1];
let _35: isize;
let _36: f64;
let _37: Adt51;
let _38: [i128; 4];
let _39: f32;
let _40: ();
let _41: ();
{
_1 = core::ptr::addr_of!((*_1));
RET = _14 >> _14;
_5 = _11;
_1 = core::ptr::addr_of!((*_7));
_9 = [5936747128585275198_usize,5_usize];
(*_1) = [_14,_14,_14,_14,_14];
_2.0 = _11;
(*_1) = [_14,_14,_14,_14,_14];
_15 = _2.0;
RET = _2.2 as isize;
_18 = 4219322020_u32;
(*_13) = _4;
_13 = _12;
(*_7) = [_14,_14,_14,_14,_14];
_18 = 3088050258_u32 % 3797445432_u32;
_17 = [(-8653335115523107347_i64),(-5966408202149432768_i64),(-865980740140741712_i64),(-1208992194753882169_i64),8518609130237636630_i64,761901918894402994_i64,5159372480361264088_i64,(-7011237734032926786_i64)];
_2.1 = -_8;
_2.2 = 170_u8 as f64;
_22.1 = !6_u8;
_22.1 = (*_12) as u8;
Goto(bb1)
}
bb1 = {
_22.3 = [(-79_i8),(-56_i8)];
_16 = core::ptr::addr_of!(_14);
_21.0 = _5;
_22.0 = _12;
_22.0 = _12;
RET = (*_16);
_2.0 = _15;
_21.1 = [147338156829815866876676058812720202298_u128,273190016264950419442806480817137347219_u128,223903995675329357190294929112523735361_u128,24659784008232089051017514088104363997_u128,79442078830359914796436596779264903153_u128,331269631182925811566581470093551857343_u128,238226563613543103238690737943687342284_u128,22614619355637472535042920107942349060_u128];
_23 = 7036712039314350222_u64 / 20265009419211064_u64;
_20 = _6;
_8 = -_2.1;
_22.0 = core::ptr::addr_of!((*_12));
_22.0 = core::ptr::addr_of!(_4);
_22.2 = 1_usize;
RET = _22.2 as isize;
_28.1 = [276904586880769521164930456252906522523_u128,319488608467351122902437909195420011536_u128,138438297507327985431819062905083555883_u128,40233983056801087730447250646052636476_u128,3235091935183944634561458531965480183_u128,260409901557741280800464264277027529634_u128,322291237102032818052696998143442165669_u128,18857359098003539338486604069957207608_u128];
(*_13) = _4;
_11 = (*_13);
match _22.2 {
0 => bb2,
2 => bb4,
3 => bb5,
1 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
(*_13) = _21.0;
_21.1 = [53554327633586298340990989258900860340_u128,87320467919811980673004765791115567197_u128,130104909409237591535855496231991278526_u128,136607236218279004803613862777415371342_u128,214143900430595056819661847758626079296_u128,335140032931335665352590695253817216669_u128,263055121342408115015882307392428776522_u128,3629716974421636326342226569065132286_u128];
_2 = ((*_12), _8, _10);
_22.0 = core::ptr::addr_of!((*_12));
(*_13) = _5;
_26 = _22.2 | _22.2;
_13 = core::ptr::addr_of!(_4);
_27 = _10;
_22.2 = 19358_u16 as usize;
_6 = [_18,_18,_18,_18,_18,_18];
_17 = [4367644435125277903_i64,4679232894137540175_i64,(-6669318486761531600_i64),3756134362481560561_i64,(-7512037635581944853_i64),4132237790304750953_i64,1337085717212788524_i64,(-6677036077599698925_i64)];
_1 = core::ptr::addr_of!((*_7));
(*_13) = _21.0;
Call(_21.0 = fn4(_16, (*_16), _9, _7, _14, (*_7), (*_16), _14, _1, _11, (*_13), _28.1, _7), bb8, UnwindUnreachable())
}
bb8 = {
_28 = ((*_12), _21.1);
_9 = [_22.2,_22.2];
_10 = -_2.2;
_20 = _6;
_22.1 = 245_u8 | 94_u8;
_31.1 = false;
_21.1 = [190212807873425141025508564098106701376_u128,262957998085160549911625162265324870223_u128,209073502514412236310730340309474408862_u128,320758974022845556619666241642643807407_u128,300988340849782190943726104996533587_u128,304370731014290467656441272060481836394_u128,59111497255867822892409863831830327682_u128,209597504835110915987851958425382443724_u128];
_15 = _5;
_36 = -_27;
_22.1 = !132_u8;
(*_1) = [_14,_14,_14,_14,(*_16)];
_21 = (_2.0, _28.1);
(*_12) = _15;
_35 = _14 >> _23;
_2.0 = _4;
_21 = ((*_13), _28.1);
_21 = (_15, _28.1);
_22.1 = !107_u8;
Goto(bb9)
}
bb9 = {
RET = (*_16);
_2 = ((*_13), _8, _10);
(*_16) = _35;
_30 = [(-28877_i16),(-29271_i16),30833_i16,15456_i16,(-29047_i16),14873_i16];
(*_1) = [_14,_35,(*_16),_14,(*_16)];
_18 = _22.2 as u32;
_28.1 = [268986285962585300676435998440403969913_u128,223082144937894918677946235295002119819_u128,2336079603339530555939349957880022291_u128,219094093398916746404088073571792270245_u128,259267882550494463754052208770808901084_u128,281828527176615230365446425887037288240_u128,211589777324988647812845875193835895466_u128,138855940472862111017909346652840088686_u128];
_29 = (_12,);
_5 = (*_12);
_13 = core::ptr::addr_of!(_5);
_22.1 = 147_u8;
_28.1 = [262529191941844145814748721126773483396_u128,248617229154778449124503387476522976422_u128,145236371467600466136949555950848800266_u128,158861450847720217370491873480919508292_u128,116643185005753243142285908300925759345_u128,232986396715654298951651840866339763435_u128,113136228072474665871933269825758320936_u128,239898527220341670667950717119880234248_u128];
_37.fld0.0 = core::ptr::addr_of!(_11);
_37.fld0.1 = _22.1;
_1 = core::ptr::addr_of!((*_1));
_25 = !33370513526641778406883606141511955897_u128;
(*_13) = _11;
_33 = _25;
_37.fld1 = _37.fld0.1 as usize;
_37.fld0.1 = _22.1;
_37 = Adt51 { fld0: _22,fld1: _22.2,fld2: _30,fld3: 101_i8,fld4: _28.1 };
_22 = (_29.0, _37.fld0.1, _26, _37.fld0.3);
_31.3 = core::ptr::addr_of_mut!(_31.0);
(*_1) = [_14,_14,_35,_35,(*_16)];
_37.fld0.3 = [_37.fld3,_37.fld3];
_34 = _3;
(*_16) = !_35;
_28 = ((*_13), _21.1);
match _37.fld3 {
0 => bb6,
1 => bb2,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
101 => bb15,
_ => bb14
}
}
bb10 = {
_28 = ((*_12), _21.1);
_9 = [_22.2,_22.2];
_10 = -_2.2;
_20 = _6;
_22.1 = 245_u8 | 94_u8;
_31.1 = false;
_21.1 = [190212807873425141025508564098106701376_u128,262957998085160549911625162265324870223_u128,209073502514412236310730340309474408862_u128,320758974022845556619666241642643807407_u128,300988340849782190943726104996533587_u128,304370731014290467656441272060481836394_u128,59111497255867822892409863831830327682_u128,209597504835110915987851958425382443724_u128];
_15 = _5;
_36 = -_27;
_22.1 = !132_u8;
(*_1) = [_14,_14,_14,_14,(*_16)];
_21 = (_2.0, _28.1);
(*_12) = _15;
_35 = _14 >> _23;
_2.0 = _4;
_21 = ((*_13), _28.1);
_21 = (_15, _28.1);
_22.1 = !107_u8;
Goto(bb9)
}
bb11 = {
(*_13) = _21.0;
_21.1 = [53554327633586298340990989258900860340_u128,87320467919811980673004765791115567197_u128,130104909409237591535855496231991278526_u128,136607236218279004803613862777415371342_u128,214143900430595056819661847758626079296_u128,335140032931335665352590695253817216669_u128,263055121342408115015882307392428776522_u128,3629716974421636326342226569065132286_u128];
_2 = ((*_12), _8, _10);
_22.0 = core::ptr::addr_of!((*_12));
(*_13) = _5;
_26 = _22.2 | _22.2;
_13 = core::ptr::addr_of!(_4);
_27 = _10;
_22.2 = 19358_u16 as usize;
_6 = [_18,_18,_18,_18,_18,_18];
_17 = [4367644435125277903_i64,4679232894137540175_i64,(-6669318486761531600_i64),3756134362481560561_i64,(-7512037635581944853_i64),4132237790304750953_i64,1337085717212788524_i64,(-6677036077599698925_i64)];
_1 = core::ptr::addr_of!((*_7));
(*_13) = _21.0;
Call(_21.0 = fn4(_16, (*_16), _9, _7, _14, (*_7), (*_16), _14, _1, _11, (*_13), _28.1, _7), bb8, UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
(*_16) = 29586_u16 as isize;
_12 = core::ptr::addr_of!(_11);
_10 = _26 as f64;
Goto(bb16)
}
bb16 = {
Call(_40 = dump_var(3_usize, 25_usize, Move(_25), 26_usize, Move(_26), 33_usize, Move(_33), 18_usize, Move(_18)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(3_usize, 3_usize, Move(_3), 15_usize, Move(_15), 4_usize, Move(_4), 14_usize, Move(_14)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(3_usize, 34_usize, Move(_34), 21_usize, Move(_21), 41_usize, _41, 41_usize, _41), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: *const isize,mut _2: isize,mut _3: [usize; 2],mut _4: *const [isize; 5],mut _5: isize,mut _6: [isize; 5],mut _7: isize,mut _8: isize,mut _9: *const [isize; 5],mut _10: char,mut _11: char,mut _12: [u128; 8],mut _13: *const [isize; 5]) -> char {
mir! {
type RET = char;
let _14: isize;
let _15: f64;
let _16: (char, i128, f64);
let _17: i32;
let _18: isize;
let _19: (u32, char);
let _20: f32;
let _21: i32;
let _22: (i64, [isize; 5], i16);
let _23: bool;
let _24: u32;
let _25: [i128; 4];
let _26: bool;
let _27: ([u8; 1], (u32, char));
let _28: i128;
let _29: char;
let _30: bool;
let _31: i16;
let _32: u16;
let _33: ([u8; 1], (u32, char));
let _34: (i64, [isize; 5], i16);
let _35: isize;
let _36: u32;
let _37: *const isize;
let _38: [u8; 1];
let _39: [i8; 2];
let _40: i128;
let _41: isize;
let _42: Adt57;
let _43: f32;
let _44: (f64,);
let _45: f32;
let _46: i8;
let _47: f64;
let _48: ();
let _49: ();
{
_3 = [10810302502004093151_usize,15096360596325345984_usize];
(*_9) = _6;
(*_1) = !_7;
(*_13) = [_7,_7,_2,_7,_2];
_1 = core::ptr::addr_of!(_8);
_5 = (*_1);
Call(RET = fn5(_13, _10, (*_4)), bb1, UnwindUnreachable())
}
bb1 = {
(*_1) = _7;
(*_4) = [(*_1),_5,(*_1),_8,(*_1)];
_3 = [4690778504618950245_usize,3_usize];
(*_4) = [_5,_2,(*_1),(*_1),_2];
_11 = _10;
RET = _10;
_7 = -_5;
(*_13) = _6;
_6 = (*_13);
_6 = (*_4);
(*_4) = [_7,_2,_2,_2,_2];
(*_13) = [_5,_5,(*_1),_5,_8];
_1 = core::ptr::addr_of!(_7);
Goto(bb2)
}
bb2 = {
_10 = _11;
(*_9) = _6;
_16.2 = 2916226364_u32 as f64;
_3 = [7_usize,5_usize];
Goto(bb3)
}
bb3 = {
_6 = (*_13);
_9 = _13;
(*_1) = _8;
_19 = (2620403674_u32, _11);
(*_4) = _6;
_4 = core::ptr::addr_of!((*_4));
_16.0 = _11;
(*_13) = [(*_1),_7,_8,(*_1),_7];
RET = _10;
_16.1 = (-154813546405239625807406284202405186929_i128);
_20 = _19.0 as f32;
_17 = !(-1772530706_i32);
_21 = _17 + _17;
_14 = _7;
_16.1 = !60961026898881415826793855538869898593_i128;
_15 = _16.2;
_20 = (-4799_i16) as f32;
_19 = (1766621727_u32, _11);
_2 = !_8;
(*_1) = _14;
(*_9) = _6;
match _19.0 {
0 => bb1,
1 => bb2,
2 => bb4,
1766621727 => bb6,
_ => bb5
}
}
bb4 = {
_10 = _11;
(*_9) = _6;
_16.2 = 2916226364_u32 as f64;
_3 = [7_usize,5_usize];
Goto(bb3)
}
bb5 = {
(*_1) = _7;
(*_4) = [(*_1),_5,(*_1),_8,(*_1)];
_3 = [4690778504618950245_usize,3_usize];
(*_4) = [_5,_2,(*_1),(*_1),_2];
_11 = _10;
RET = _10;
_7 = -_5;
(*_13) = _6;
_6 = (*_13);
_6 = (*_4);
(*_4) = [_7,_2,_2,_2,_2];
(*_13) = [_5,_5,(*_1),_5,_8];
_1 = core::ptr::addr_of!(_7);
Goto(bb2)
}
bb6 = {
_17 = 4144471672887322873_i64 as i32;
_22.1 = (*_9);
_19.1 = _10;
_1 = core::ptr::addr_of!(_8);
_20 = 8516743963638450629_u64 as f32;
_9 = core::ptr::addr_of!(_22.1);
_22.0 = -3055844207772588319_i64;
_18 = _19.0 as isize;
(*_1) = _16.1 as isize;
_13 = core::ptr::addr_of!((*_4));
(*_4) = [_18,(*_1),_18,_14,_5];
_22.2 = !(-4709_i16);
Call(_23 = fn19(_8, (*_1), _13, _18, _4, (*_4), (*_13)), bb7, UnwindUnreachable())
}
bb7 = {
_1 = core::ptr::addr_of!((*_1));
_24 = !_19.0;
_13 = core::ptr::addr_of!((*_4));
RET = _19.1;
_14 = _7 + _8;
(*_13) = [(*_1),_2,_14,_7,_14];
_8 = _5;
_11 = _10;
Call(_16.1 = core::intrinsics::transmute(_3), bb8, UnwindUnreachable())
}
bb8 = {
_25 = [_16.1,_16.1,_16.1,_16.1];
_20 = _22.2 as f32;
_27.1 = (_24, _11);
(*_13) = (*_9);
_22 = ((-4565351141899963696_i64), (*_13), 30316_i16);
_21 = _23 as i32;
_2 = _22.2 as isize;
_22 = ((-6798065692975193539_i64), _6, (-14088_i16));
_22 = ((-2576831924737643631_i64), (*_4), 22178_i16);
_16.1 = 161257307827899582182254098094043089788_i128;
_28 = 80_i8 as i128;
(*_9) = [(*_1),_14,(*_1),_2,_14];
_27.0 = [82_u8];
Goto(bb9)
}
bb9 = {
_16 = (_10, _28, _15);
_1 = core::ptr::addr_of!(_2);
_20 = 44912_u16 as f32;
_6 = [(*_1),_8,_7,_5,_14];
_26 = !_23;
_10 = _16.0;
_31 = !_22.2;
_22.2 = _31 & _31;
_33.0 = [38_u8];
_5 = 19285_u16 as isize;
_23 = _26;
_5 = !_8;
_25 = [_28,_28,_28,_28];
_19.1 = _11;
_32 = 59613_u16 ^ 12812_u16;
_34.0 = _22.0 + _22.0;
_34.1 = [(*_1),_14,_8,_2,_14];
_29 = _27.1.1;
_33.1.0 = _24;
_12 = [9088204662646194784532907230416736393_u128,105331191035271982624433117963548134026_u128,11053291190207933837139155059711894929_u128,228027454697744289600808469497252606992_u128,5451855364599087753414900224307207596_u128,249629147380564761923255896771862522849_u128,62974109602743368643081721751624539573_u128,282133791639620986472481413881695594982_u128];
_20 = _16.1 as f32;
match _22.0 {
0 => bb3,
340282366920938463460797775507030567825 => bb10,
_ => bb2
}
}
bb10 = {
_33.1 = (_19.0, _29);
_13 = core::ptr::addr_of!((*_4));
_34 = (_22.0, (*_13), _22.2);
_31 = -_34.2;
RET = _29;
_26 = _34.0 == _34.0;
RET = _19.1;
_30 = !_23;
(*_4) = [(*_1),(*_1),_14,_14,_14];
_16.2 = -_15;
(*_13) = _22.1;
_11 = _29;
_13 = _9;
RET = _33.1.1;
(*_13) = [(*_1),(*_1),(*_1),(*_1),_7];
_34.0 = -_22.0;
(*_9) = (*_4);
_5 = !_2;
_25 = [_28,_28,_16.1,_16.1];
Goto(bb11)
}
bb11 = {
_6 = (*_13);
_33.0 = [23_u8];
_39 = [33_i8,(-43_i8)];
_33.1.0 = _24 % 1372214893_u32;
_37 = core::ptr::addr_of!((*_1));
_22.2 = _8 as i16;
_16.2 = _15;
_36 = _27.1.0 + _33.1.0;
_16 = (_27.1.1, _28, _15);
_29 = _19.1;
RET = _19.1;
_14 = _8;
_19.1 = _27.1.1;
(*_13) = [(*_1),(*_1),(*_1),(*_1),(*_1)];
_20 = 8830929581468797629_u64 as f32;
_5 = !(*_1);
_3 = [5147281990649620558_usize,10720985067751562973_usize];
_37 = core::ptr::addr_of!(_8);
_37 = _1;
_41 = _18 & (*_1);
_40 = _16.1;
_37 = _1;
_27 = (_33.0, _33.1);
_42.fld6.fld2 = [_34.2,_34.2,_31,_31,_22.2,_34.2];
(*_9) = [_2,(*_37),(*_37),(*_37),(*_37)];
Goto(bb12)
}
bb12 = {
_22 = (_34.0, (*_4), _34.2);
_11 = _27.1.1;
_16.1 = _28 + _28;
_41 = -(*_37);
match _19.0 {
0 => bb11,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb6,
6 => bb7,
1766621727 => bb13,
_ => bb8
}
}
bb13 = {
_28 = _40;
_16.1 = _28;
_42.fld7 = core::ptr::addr_of_mut!(_34.2);
_5 = 19430442906782320775746528603670638621_u128 as isize;
_42.fld6.fld0.0 = core::ptr::addr_of!(_33.1.1);
_42.fld1 = core::ptr::addr_of!(_27.1.1);
_10 = _29;
_42.fld3 = [_27.1.0,_36,_36,_24,_36,_36];
_42.fld6.fld0.2 = 1_usize * 2_usize;
match _19.0 {
0 => bb2,
1766621727 => bb15,
_ => bb14
}
}
bb14 = {
_33.1 = (_19.0, _29);
_13 = core::ptr::addr_of!((*_4));
_34 = (_22.0, (*_13), _22.2);
_31 = -_34.2;
RET = _29;
_26 = _34.0 == _34.0;
RET = _19.1;
_30 = !_23;
(*_4) = [(*_1),(*_1),_14,_14,_14];
_16.2 = -_15;
(*_13) = _22.1;
_11 = _29;
_13 = _9;
RET = _33.1.1;
(*_13) = [(*_1),(*_1),(*_1),(*_1),_7];
_34.0 = -_22.0;
(*_9) = (*_4);
_5 = !_2;
_25 = [_28,_28,_16.1,_16.1];
Goto(bb11)
}
bb15 = {
_27.1.0 = _24;
(*_37) = _14;
_42.fld1 = core::ptr::addr_of!(_16.0);
(*_13) = [_41,_41,_2,(*_37),(*_1)];
(*_13) = [_5,(*_1),(*_37),_7,_14];
_42.fld3 = [_27.1.0,_36,_33.1.0,_19.0,_36,_33.1.0];
_19 = (_27.1.0, _27.1.1);
_42.fld6.fld0.3 = [(-3_i8),(-18_i8)];
_2 = !_14;
(*_9) = (*_4);
_18 = -_41;
_16.0 = _27.1.1;
_7 = (*_37) >> _28;
_42.fld6.fld0.3 = [92_i8,44_i8];
_42.fld1 = core::ptr::addr_of!(_11);
_42.fld2 = (_42.fld3,);
_27.1 = (_24, _11);
_27.1.1 = _29;
_16 = (_29, _40, _15);
_32 = 53311_u16 / 14428_u16;
Goto(bb16)
}
bb16 = {
Call(_48 = dump_var(4_usize, 2_usize, Move(_2), 18_usize, Move(_18), 34_usize, Move(_34), 5_usize, Move(_5)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(4_usize, 6_usize, Move(_6), 7_usize, Move(_7), 30_usize, Move(_30), 8_usize, Move(_8)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(4_usize, 36_usize, Move(_36), 11_usize, Move(_11), 25_usize, Move(_25), 19_usize, Move(_19)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_48 = dump_var(4_usize, 40_usize, Move(_40), 12_usize, Move(_12), 10_usize, Move(_10), 49_usize, _49), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *const [isize; 5],mut _2: char,mut _3: [isize; 5]) -> char {
mir! {
type RET = char;
let _4: u64;
let _5: i16;
let _6: char;
let _7: u64;
let _8: Adt62;
let _9: [u16; 4];
let _10: f64;
let _11: Adt51;
let _12: [u128; 8];
let _13: [i8; 2];
let _14: ([u32; 6],);
let _15: Adt64;
let _16: bool;
let _17: [i128; 4];
let _18: [i16; 6];
let _19: [usize; 2];
let _20: [u128; 1];
let _21: f64;
let _22: (u32, char);
let _23: u32;
let _24: bool;
let _25: char;
let _26: i8;
let _27: [u128; 8];
let _28: [u8; 1];
let _29: Adt57;
let _30: *const bool;
let _31: f64;
let _32: char;
let _33: char;
let _34: [u32; 6];
let _35: [i16; 5];
let _36: i8;
let _37: (*const char, u8, usize, [i8; 2]);
let _38: ();
let _39: ();
{
RET = _2;
(*_1) = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-91_isize),(-115_isize),9223372036854775807_isize];
_1 = core::ptr::addr_of!(_3);
(*_1) = [(-9223372036854775808_isize),(-9223372036854775808_isize),122_isize,(-112_isize),(-54_isize)];
_2 = '\u{bbb5}';
(*_1) = [(-9223372036854775808_isize),52_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_2 = '\u{4d50c}';
_6 = _2;
_8.fld0.fld3.2.0 = [107_u8];
_3 = [9223372036854775807_isize,100_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),41_isize];
_3 = [103_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-48_isize)];
_8.fld0.fld3.3.0 = [2275207404_u32,507786332_u32,3075071847_u32,290211525_u32,4062039152_u32,775926073_u32];
_8.fld5.fld4 = core::ptr::addr_of!(_8.fld0.fld0);
_1 = core::ptr::addr_of!(_3);
_8.fld5.fld1 = _2;
_8.fld0.fld3.2.1.1 = _2;
_8.fld5.fld0.0 = _2;
Goto(bb1)
}
bb1 = {
_8.fld0.fld3.2.0 = [143_u8];
_8.fld0.fld3.2.1.0 = !1065072840_u32;
_8.fld5.fld0.1 = [42223488667931552495729043596895258627_u128,160959136768866589823569121144124733660_u128,313760204898903437904559554541504517864_u128,146160983363742938467963555160891273919_u128,311488009242141714222372386953960675807_u128,105944144205227340037819192220601074398_u128,82100221874625447309736811039528630098_u128,301601254800294109103376795430912395767_u128];
_8.fld0.fld2 = [(-4882196639209703255_i64),5863569530080245807_i64,984680138590074334_i64,7418030622842180161_i64,(-642119001077952083_i64),6534325635906992289_i64,(-6134658330449984630_i64),5250692547602415254_i64];
_8.fld4 = _8.fld0.fld3.2.1.0 as i16;
_1 = core::ptr::addr_of!(_3);
_8.fld1 = ((-3756350001664624081_i64), _3, _8.fld4);
_8.fld0.fld3.1 = 69374928735920157008067028436718377538_u128;
_5 = !_8.fld4;
_8.fld5.fld4 = core::ptr::addr_of!(_8.fld0.fld0);
_2 = _8.fld5.fld0.0;
_10 = _8.fld0.fld3.2.1.0 as f64;
_4 = _8.fld0.fld3.1 as u64;
Call(_8.fld5.fld1 = fn6(_8.fld0.fld3.3, _8.fld0.fld3.2, _8.fld5.fld4, _8.fld1.0, _8.fld0.fld3.2.1, _8.fld0.fld3.3.0, _8.fld4, _1, _1, _8.fld0.fld3.3, _8.fld0.fld3.1, (*_1), (*_1), _2), bb2, UnwindUnreachable())
}
bb2 = {
_11.fld2 = [_8.fld4,_8.fld1.2,_5,_5,_8.fld1.2,_8.fld1.2];
_11.fld0.0 = core::ptr::addr_of!(_8.fld0.fld3.2.1.1);
_6 = _8.fld5.fld0.0;
_11.fld2 = [_8.fld4,_8.fld1.2,_8.fld1.2,_5,_8.fld4,_8.fld4];
_15.fld0.fld2 = [_8.fld1.2,_5,_8.fld1.2,_5,_8.fld1.2,_5];
match _8.fld1.0 {
0 => bb1,
340282366920938463459618257430103587375 => bb4,
_ => bb3
}
}
bb3 = {
_8.fld0.fld3.2.0 = [143_u8];
_8.fld0.fld3.2.1.0 = !1065072840_u32;
_8.fld5.fld0.1 = [42223488667931552495729043596895258627_u128,160959136768866589823569121144124733660_u128,313760204898903437904559554541504517864_u128,146160983363742938467963555160891273919_u128,311488009242141714222372386953960675807_u128,105944144205227340037819192220601074398_u128,82100221874625447309736811039528630098_u128,301601254800294109103376795430912395767_u128];
_8.fld0.fld2 = [(-4882196639209703255_i64),5863569530080245807_i64,984680138590074334_i64,7418030622842180161_i64,(-642119001077952083_i64),6534325635906992289_i64,(-6134658330449984630_i64),5250692547602415254_i64];
_8.fld4 = _8.fld0.fld3.2.1.0 as i16;
_1 = core::ptr::addr_of!(_3);
_8.fld1 = ((-3756350001664624081_i64), _3, _8.fld4);
_8.fld0.fld3.1 = 69374928735920157008067028436718377538_u128;
_5 = !_8.fld4;
_8.fld5.fld4 = core::ptr::addr_of!(_8.fld0.fld0);
_2 = _8.fld5.fld0.0;
_10 = _8.fld0.fld3.2.1.0 as f64;
_4 = _8.fld0.fld3.1 as u64;
Call(_8.fld5.fld1 = fn6(_8.fld0.fld3.3, _8.fld0.fld3.2, _8.fld5.fld4, _8.fld1.0, _8.fld0.fld3.2.1, _8.fld0.fld3.3.0, _8.fld4, _1, _1, _8.fld0.fld3.3, _8.fld0.fld3.1, (*_1), (*_1), _2), bb2, UnwindUnreachable())
}
bb4 = {
_11.fld1 = _8.fld4 as usize;
_15.fld0.fld1 = 587134867_i32 as usize;
_15.fld0.fld0.2 = _15.fld0.fld1;
_12 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_8.fld0.fld3.0 = core::ptr::addr_of_mut!(_15.fld0.fld0.3);
_15.fld3.fld0 = _8.fld0.fld0;
_16 = _15.fld3.fld0;
_9 = [48329_u16,19913_u16,27410_u16,61879_u16];
_8.fld4 = _8.fld1.2 & _8.fld1.2;
_15.fld3.fld2.fld2 = [(-17135621972306648707405037620270225483_i128),(-115013731963700254798973071870774653031_i128),(-137612787403703241072358695715196303369_i128),143694390632006136325584791436491499764_i128];
_8.fld5.fld4 = core::ptr::addr_of!(_8.fld0.fld0);
_11.fld0.3 = [43_i8,(-25_i8)];
_8.fld0.fld3.0 = core::ptr::addr_of_mut!(_11.fld0.3);
_8.fld0.fld3.2.1.1 = _8.fld5.fld0.0;
_11.fld3 = 76_i8;
_7 = _4 << _8.fld1.0;
_11.fld0.0 = core::ptr::addr_of!(_6);
_8.fld0.fld3.2.1 = (1435558104_u32, _8.fld5.fld0.0);
Call(_15.fld0.fld0.2 = fn7(_8.fld0.fld3, _3, _8.fld0.fld2, _8.fld0.fld3.3.0, _8.fld5.fld1, _8.fld0.fld3.2.1.0, _11.fld0.3, _8.fld0.fld3.2.1.1), bb5, UnwindUnreachable())
}
bb5 = {
_8.fld0.fld3.0 = core::ptr::addr_of_mut!(_15.fld0.fld0.3);
_15.fld0.fld4 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_15.fld0.fld2 = _11.fld2;
_15.fld0.fld3 = _11.fld3 >> _7;
_8.fld5.fld0 = (_8.fld0.fld3.2.1.1, _12);
_17 = [(-73667242195887294469495056799944930698_i128),58000935318773396203174683526628146630_i128,126336242806522402819541099193063182899_i128,(-36628429897000953848806956986053884654_i128)];
_8.fld0.fld3.2.0 = [199_u8];
_15.fld0.fld2 = [_5,_8.fld4,_5,_8.fld4,_8.fld1.2,_8.fld4];
_15.fld3.fld1 = [(-59900852926492801578442567857265927499_i128),95676841512742841459944766108299107050_i128,65120898115437369064762608182082611190_i128,125179622278311686370123775422113955352_i128];
_15.fld3.fld0 = _16;
_15.fld0.fld4 = _8.fld5.fld0.1;
_15.fld0.fld0.1 = !86_u8;
RET = _8.fld5.fld0.0;
_15.fld3.fld2 = Adt61 { fld0: _8.fld0.fld3.3,fld1: _7,fld2: _15.fld3.fld1 };
_8.fld4 = _8.fld1.2 & _5;
_15.fld3.fld3 = core::ptr::addr_of!(_8.fld0.fld3.2.1);
match _8.fld1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463459618257430103587375 => bb7,
_ => bb6
}
}
bb6 = {
_11.fld2 = [_8.fld4,_8.fld1.2,_5,_5,_8.fld1.2,_8.fld1.2];
_11.fld0.0 = core::ptr::addr_of!(_8.fld0.fld3.2.1.1);
_6 = _8.fld5.fld0.0;
_11.fld2 = [_8.fld4,_8.fld1.2,_8.fld1.2,_5,_8.fld4,_8.fld4];
_15.fld0.fld2 = [_8.fld1.2,_5,_8.fld1.2,_5,_8.fld1.2,_5];
match _8.fld1.0 {
0 => bb1,
340282366920938463459618257430103587375 => bb4,
_ => bb3
}
}
bb7 = {
_15.fld1 = core::ptr::addr_of!(_8.fld1.1);
_8.fld1 = ((-377422224454706184_i64), (*_1), _8.fld4);
_14.0 = [_8.fld0.fld3.2.1.0,_8.fld0.fld3.2.1.0,_8.fld0.fld3.2.1.0,_8.fld0.fld3.2.1.0,_8.fld0.fld3.2.1.0,_8.fld0.fld3.2.1.0];
_14 = (_15.fld3.fld2.fld0.0,);
_8.fld5.fld0.1 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_14 = (_8.fld0.fld3.3.0,);
_2 = _8.fld5.fld1;
_15.fld2 = _11.fld2;
_15.fld3.fld2.fld2 = [(-49021811280444188966387397285776068217_i128),112014497939880129528066274735321602417_i128,(-34876981458144805642064939797864901549_i128),(-25845142528588018621115691319405779654_i128)];
_15.fld3.fld2.fld1 = _7 + _7;
_18 = _15.fld2;
_11.fld2 = [_8.fld1.2,_5,_5,_8.fld1.2,_8.fld1.2,_8.fld1.2];
_20 = [_8.fld0.fld3.1];
match _8.fld1.0 {
0 => bb4,
340282366920938463462997185207313505272 => bb9,
_ => bb8
}
}
bb8 = {
_11.fld2 = [_8.fld4,_8.fld1.2,_5,_5,_8.fld1.2,_8.fld1.2];
_11.fld0.0 = core::ptr::addr_of!(_8.fld0.fld3.2.1.1);
_6 = _8.fld5.fld0.0;
_11.fld2 = [_8.fld4,_8.fld1.2,_8.fld1.2,_5,_8.fld4,_8.fld4];
_15.fld0.fld2 = [_8.fld1.2,_5,_8.fld1.2,_5,_8.fld1.2,_5];
match _8.fld1.0 {
0 => bb1,
340282366920938463459618257430103587375 => bb4,
_ => bb3
}
}
bb9 = {
_13 = [_15.fld0.fld3,_15.fld0.fld3];
_11.fld2 = [_8.fld1.2,_5,_8.fld4,_5,_8.fld4,_5];
_11.fld0.2 = _15.fld0.fld0.2;
_8.fld1.1 = [(-9223372036854775808_isize),(-13_isize),9223372036854775807_isize,(-88_isize),(-9223372036854775808_isize)];
RET = _8.fld5.fld1;
_8.fld5.fld3 = [18551207688954314835395631801936014513_i128,163895702523758207879768785920687217159_i128,159306315899455621174462988690839451650_i128,(-159098540575248885790768713668035811685_i128)];
_11.fld0.2 = !_15.fld0.fld0.2;
_1 = core::ptr::addr_of!((*_1));
_20 = [_8.fld0.fld3.1];
_8.fld5.fld1 = _6;
_22.0 = _8.fld0.fld3.2.1.0 * _8.fld0.fld3.2.1.0;
_8.fld0.fld1 = _15.fld0.fld3 as f64;
_15.fld3.fld2.fld0.0 = _8.fld0.fld3.3.0;
_15.fld0.fld0.3 = [_11.fld3,_15.fld0.fld3];
_15.fld0.fld0 = (_11.fld0.0, 74_u8, _11.fld0.2, _13);
_15.fld2 = [_5,_8.fld1.2,_8.fld1.2,_5,_8.fld4,_8.fld1.2];
_15.fld3.fld2 = Adt61 { fld0: _14,fld1: _7,fld2: _8.fld5.fld3 };
_8.fld0.fld3.3.0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_11 = Adt51 { fld0: _15.fld0.fld0,fld1: _15.fld0.fld0.2,fld2: _15.fld0.fld2,fld3: _15.fld0.fld3,fld4: _12 };
_15.fld0.fld0 = _11.fld0;
_19 = [_15.fld0.fld0.2,_11.fld1];
_12 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_8.fld1.1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-103_isize)];
_15.fld0 = Adt51 { fld0: _11.fld0,fld1: _11.fld1,fld2: _15.fld2,fld3: _11.fld3,fld4: _8.fld5.fld0.1 };
_2 = _8.fld0.fld3.2.1.1;
_15.fld3.fld2.fld1 = _4 % 11664307090025011825_u64;
_17 = _15.fld3.fld1;
Call(_15.fld0.fld0.2 = core::intrinsics::bswap(_11.fld1), bb10, UnwindUnreachable())
}
bb10 = {
_11.fld0.2 = !_15.fld0.fld0.2;
_8.fld5.fld0.1 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
(*_1) = [9223372036854775807_isize,107_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_13 = [_11.fld3,_15.fld0.fld3];
_22.0 = _15.fld0.fld1 as u32;
(*_1) = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),106_isize];
_8.fld1.0 = -2795675748124079337_i64;
_11.fld4 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_17 = _15.fld3.fld2.fld2;
_11.fld0.0 = _15.fld0.fld0.0;
_9 = [2187_u16,10353_u16,13215_u16,47240_u16];
_18 = [_8.fld4,_8.fld1.2,_8.fld1.2,_8.fld4,_5,_5];
_8.fld5.fld0.0 = _8.fld5.fld1;
_22 = _8.fld0.fld3.2.1;
_8.fld0.fld1 = _10 + _10;
_8.fld1.1 = [43_isize,9223372036854775807_isize,(-54_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6 = _22.1;
_8.fld0.fld3.2.1.0 = 102_isize as u32;
_12 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_15.fld0.fld0.0 = core::ptr::addr_of!(_25);
_8.fld0.fld2 = [_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0];
_14 = _8.fld0.fld3.3;
_8.fld0.fld3.0 = core::ptr::addr_of_mut!(_11.fld0.3);
_2 = _22.1;
_11.fld0.3 = [_11.fld3,_15.fld0.fld3];
_13 = _11.fld0.3;
_23 = !_22.0;
_8.fld1.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-116_isize),9223372036854775807_isize];
match _15.fld0.fld0.1 {
0 => bb1,
1 => bb4,
2 => bb7,
74 => bb12,
_ => bb11
}
}
bb11 = {
_8.fld0.fld3.0 = core::ptr::addr_of_mut!(_15.fld0.fld0.3);
_15.fld0.fld4 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_15.fld0.fld2 = _11.fld2;
_15.fld0.fld3 = _11.fld3 >> _7;
_8.fld5.fld0 = (_8.fld0.fld3.2.1.1, _12);
_17 = [(-73667242195887294469495056799944930698_i128),58000935318773396203174683526628146630_i128,126336242806522402819541099193063182899_i128,(-36628429897000953848806956986053884654_i128)];
_8.fld0.fld3.2.0 = [199_u8];
_15.fld0.fld2 = [_5,_8.fld4,_5,_8.fld4,_8.fld1.2,_8.fld4];
_15.fld3.fld1 = [(-59900852926492801578442567857265927499_i128),95676841512742841459944766108299107050_i128,65120898115437369064762608182082611190_i128,125179622278311686370123775422113955352_i128];
_15.fld3.fld0 = _16;
_15.fld0.fld4 = _8.fld5.fld0.1;
_15.fld0.fld0.1 = !86_u8;
RET = _8.fld5.fld0.0;
_15.fld3.fld2 = Adt61 { fld0: _8.fld0.fld3.3,fld1: _7,fld2: _15.fld3.fld1 };
_8.fld4 = _8.fld1.2 & _5;
_15.fld3.fld3 = core::ptr::addr_of!(_8.fld0.fld3.2.1);
match _8.fld1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463459618257430103587375 => bb7,
_ => bb6
}
}
bb12 = {
_9 = [2955_u16,41729_u16,37838_u16,264_u16];
_8.fld0.fld1 = _10;
_8.fld5.fld0.1 = _15.fld0.fld4;
_8.fld0.fld3.3.0 = [_22.0,_23,_23,_23,_23,_22.0];
_8.fld0.fld2 = [_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0];
RET = _8.fld0.fld3.2.1.1;
_8.fld0.fld0 = _16;
_22.1 = _8.fld0.fld3.2.1.1;
_8.fld5.fld3 = [117506337690276678575618189878748359608_i128,84379459718369403147112810618284871233_i128,(-102264029341578283874491415823156795446_i128),(-161345161951915155657455956242808919961_i128)];
_15.fld3.fld3 = core::ptr::addr_of!(_22);
_22 = (_8.fld0.fld3.2.1.0, _6);
_8.fld5.fld0 = (_2, _12);
_8.fld1.2 = _7 as i16;
_15.fld0.fld1 = _11.fld1;
_15.fld0 = Move(_11);
(*_1) = _8.fld1.1;
_13 = [_15.fld0.fld3,_15.fld0.fld3];
_19 = [_15.fld0.fld1,_15.fld0.fld0.2];
_20 = [_8.fld0.fld3.1];
_15.fld2 = [_8.fld1.2,_5,_8.fld1.2,_8.fld1.2,_8.fld1.2,_8.fld1.2];
_25 = _8.fld5.fld0.0;
_8.fld0.fld3.2.0 = [_15.fld0.fld0.1];
_9 = [36916_u16,50810_u16,11419_u16,49495_u16];
_20 = [_8.fld0.fld3.1];
_8.fld0.fld3.2.1.1 = _25;
_8.fld0.fld0 = !_15.fld3.fld0;
_28 = [_15.fld0.fld0.1];
Goto(bb13)
}
bb13 = {
_8.fld5.fld0.0 = _8.fld5.fld1;
_8.fld0.fld0 = _8.fld1.2 < _8.fld1.2;
_8.fld1.1 = [11_isize,19_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_15.fld0.fld4 = _8.fld5.fld0.1;
_15.fld1 = core::ptr::addr_of!(_3);
_24 = _8.fld0.fld0 < _15.fld3.fld0;
_15.fld3.fld2.fld0.0 = [_22.0,_22.0,_22.0,_22.0,_8.fld0.fld3.2.1.0,_22.0];
_15.fld3.fld1 = [156419786345408480892987562389635951417_i128,(-60595208113213031183249835406781877648_i128),38684203256646203512470112139538088955_i128,21711891112123863574607824928952093633_i128];
_8.fld0.fld3.2 = (_28, _22);
_27 = _8.fld5.fld0.1;
_27 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_29.fld2.0 = _14.0;
_14.0 = [_8.fld0.fld3.2.1.0,_23,_22.0,_22.0,_23,_8.fld0.fld3.2.1.0];
_29.fld6.fld0.3 = _15.fld0.fld0.3;
_21 = _8.fld0.fld1;
_17 = [85422423397512004413372637890229762674_i128,129492211853054997560995590702673876845_i128,(-15250036283881706705154995978069632600_i128),(-80854409340653178203773928900605110095_i128)];
_1 = _15.fld1;
_29.fld6.fld1 = 18121_u16 as usize;
RET = _8.fld0.fld3.2.1.1;
_8.fld5.fld3 = _15.fld3.fld2.fld2;
_15.fld0.fld4 = [_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1,_8.fld0.fld3.1];
_35 = [_8.fld1.2,_8.fld1.2,_8.fld1.2,_8.fld4,_8.fld1.2];
_7 = !_15.fld3.fld2.fld1;
_29.fld6.fld2 = [_8.fld1.2,_8.fld1.2,_8.fld1.2,_8.fld1.2,_8.fld1.2,_8.fld4];
match _15.fld0.fld0.1 {
0 => bb5,
1 => bb2,
2 => bb12,
74 => bb14,
_ => bb10
}
}
bb14 = {
_8.fld0.fld2 = [_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0,_8.fld1.0];
_8.fld0.fld3.3.0 = [_22.0,_23,_23,_8.fld0.fld3.2.1.0,_22.0,_8.fld0.fld3.2.1.0];
_29.fld6.fld0.2 = _15.fld0.fld0.2 * _15.fld0.fld1;
_6 = _8.fld5.fld0.0;
_29.fld2 = (_15.fld3.fld2.fld0.0,);
_29.fld5 = 131698827_i32;
(*_1) = _8.fld1.1;
_24 = _15.fld0.fld0.1 <= _15.fld0.fld0.1;
_36 = -_15.fld0.fld3;
_22.0 = _23;
_8.fld5.fld4 = core::ptr::addr_of!(_16);
(*_1) = [(-9223372036854775808_isize),88_isize,9223372036854775807_isize,(-48_isize),122_isize];
_29.fld6.fld0.3 = [_15.fld0.fld3,_36];
_31 = -_10;
_15.fld1 = _1;
_15.fld0.fld0.2 = _15.fld0.fld1;
_8.fld0.fld3.2.1 = _22;
_33 = _8.fld5.fld0.0;
_25 = _8.fld5.fld1;
_15.fld3.fld2.fld0 = (_8.fld0.fld3.3.0,);
_29.fld4 = [_8.fld0.fld3.1];
_26 = -_15.fld0.fld3;
_29.fld2 = (_8.fld0.fld3.3.0,);
_37.2 = !_29.fld6.fld1;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(5_usize, 23_usize, Move(_23), 5_usize, Move(_5), 14_usize, Move(_14), 36_usize, Move(_36)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(5_usize, 19_usize, Move(_19), 35_usize, Move(_35), 25_usize, Move(_25), 7_usize, Move(_7)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(5_usize, 4_usize, Move(_4), 26_usize, Move(_26), 16_usize, Move(_16), 27_usize, Move(_27)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: ([u32; 6],),mut _2: ([u8; 1], (u32, char)),mut _3: *const bool,mut _4: i64,mut _5: (u32, char),mut _6: [u32; 6],mut _7: i16,mut _8: *const [isize; 5],mut _9: *const [isize; 5],mut _10: ([u32; 6],),mut _11: u128,mut _12: [isize; 5],mut _13: [isize; 5],mut _14: char) -> char {
mir! {
type RET = char;
let _15: [i16; 5];
let _16: u128;
let _17: *mut [i8; 2];
let _18: isize;
let _19: ([u32; 6],);
let _20: [i8; 2];
let _21: (f32, bool, char, *mut f32);
let _22: u8;
let _23: char;
let _24: [u128; 4];
let _25: f64;
let _26: i64;
let _27: Adt57;
let _28: [usize; 2];
let _29: f32;
let _30: (char, i128, f64);
let _31: u128;
let _32: [isize; 5];
let _33: [u128; 1];
let _34: char;
let _35: [i16; 6];
let _36: ();
let _37: ();
{
_6 = [_2.1.0,_2.1.0,_2.1.0,_5.0,_2.1.0,_5.0];
_5.0 = !_2.1.0;
_5 = (_2.1.0, _14);
RET = _5.1;
_6 = _10.0;
_14 = _2.1.1;
_5.1 = _14;
(*_9) = _12;
_5 = _2.1;
_5.0 = _2.1.0 / 596660569_u32;
(*_9) = [(-9223372036854775808_isize),20_isize,(-68_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_7 = !245_i16;
_15 = [_7,_7,_7,_7,_7];
_5.1 = _14;
_7 = !32516_i16;
RET = _5.1;
_5.0 = !_2.1.0;
_13 = [33_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_14 = _5.1;
(*_3) = !true;
_15 = [_7,_7,_7,_7,_7];
_1 = (_6,);
_2.1 = (_5.0, _14);
_10.0 = [_2.1.0,_2.1.0,_2.1.0,_2.1.0,_5.0,_5.0];
(*_9) = _13;
_16 = !_11;
_5 = (_2.1.0, _2.1.1);
_13 = (*_9);
_2.1 = (_5.0, _5.1);
Goto(bb1)
}
bb1 = {
_15 = [_7,_7,_7,_7,_7];
_2.0 = [151_u8];
(*_8) = [(-9223372036854775808_isize),9223372036854775807_isize,73_isize,9223372036854775807_isize,9223372036854775807_isize];
(*_8) = [(-9223372036854775808_isize),(-25_isize),9223372036854775807_isize,9223372036854775807_isize,(-4_isize)];
_10 = (_6,);
(*_8) = _12;
_2.0 = [249_u8];
(*_9) = [28_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb2)
}
bb2 = {
(*_8) = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),2_isize];
_14 = _2.1.1;
_21.1 = _4 > _4;
_1.0 = _10.0;
(*_8) = [(-94_isize),(-87_isize),(-9223372036854775808_isize),9223372036854775807_isize,88_isize];
_2.1.0 = _7 as u32;
(*_3) = !_21.1;
_21.3 = core::ptr::addr_of_mut!(_21.0);
_22 = !21_u8;
Goto(bb3)
}
bb3 = {
_16 = !_11;
_5 = (_2.1.0, _2.1.1);
_16 = _11 << _7;
_18 = (-9223372036854775808_isize) << _16;
_15 = [_7,_7,_7,_7,_7];
_11 = !_16;
_9 = core::ptr::addr_of!((*_9));
_14 = _2.1.1;
_23 = _2.1.1;
_21.0 = 15237686727580983838_u64 as f32;
(*_3) = !_21.1;
_19 = (_10.0,);
_18 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463459618257430103587375 => bb11,
_ => bb10
}
}
bb4 = {
(*_8) = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),2_isize];
_14 = _2.1.1;
_21.1 = _4 > _4;
_1.0 = _10.0;
(*_8) = [(-94_isize),(-87_isize),(-9223372036854775808_isize),9223372036854775807_isize,88_isize];
_2.1.0 = _7 as u32;
(*_3) = !_21.1;
_21.3 = core::ptr::addr_of_mut!(_21.0);
_22 = !21_u8;
Goto(bb3)
}
bb5 = {
_15 = [_7,_7,_7,_7,_7];
_2.0 = [151_u8];
(*_8) = [(-9223372036854775808_isize),9223372036854775807_isize,73_isize,9223372036854775807_isize,9223372036854775807_isize];
(*_8) = [(-9223372036854775808_isize),(-25_isize),9223372036854775807_isize,9223372036854775807_isize,(-4_isize)];
_10 = (_6,);
(*_8) = _12;
_2.0 = [249_u8];
(*_9) = [28_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = (_6,);
_21.2 = _14;
_25 = 0_usize as f64;
_2.1.0 = !_5.0;
_6 = _1.0;
_18 = _25 as isize;
_10 = (_6,);
Call(_16 = core::intrinsics::transmute(_11), bb12, UnwindUnreachable())
}
bb12 = {
_27.fld6.fld0.0 = core::ptr::addr_of!(_21.2);
_27.fld4 = [_11];
_27.fld6.fld0.1 = !_22;
_20 = [(-28_i8),71_i8];
_27.fld6.fld2 = [_7,_7,_7,_7,_7,_7];
_2.1.1 = _21.2;
_27.fld0 = _21.0 - _21.0;
_1 = (_19.0,);
_27.fld7 = core::ptr::addr_of_mut!(_7);
_5.0 = !_2.1.0;
_3 = core::ptr::addr_of!((*_3));
_5.1 = _21.2;
_2.0 = [_27.fld6.fld0.1];
_27.fld2 = (_1.0,);
_9 = core::ptr::addr_of!((*_8));
_19.0 = _1.0;
_27.fld1 = _27.fld6.fld0.0;
_27.fld6.fld0.2 = 10238836355535944502_usize + 2_usize;
Goto(bb13)
}
bb13 = {
_14 = _23;
_11 = _16 << _5.0;
_14 = _2.1.1;
_2.1.1 = _5.1;
Goto(bb14)
}
bb14 = {
_22 = !_27.fld6.fld0.1;
_16 = _11;
_30.0 = _5.1;
_5 = (_2.1.0, _21.2);
_30.0 = _14;
_28 = [_27.fld6.fld0.2,_27.fld6.fld0.2];
_29 = -_27.fld0;
_2.1.1 = _5.1;
_5.1 = _2.1.1;
(*_9) = [_18,_18,_18,_18,_18];
_4 = _7 as i64;
RET = _21.2;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(6_usize, 4_usize, Move(_4), 23_usize, Move(_23), 18_usize, Move(_18), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(6_usize, 14_usize, Move(_14), 15_usize, Move(_15), 19_usize, Move(_19), 2_usize, Move(_2)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(6_usize, 1_usize, Move(_1), 37_usize, _37, 37_usize, _37, 37_usize, _37), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: (*mut [i8; 2], u128, ([u8; 1], (u32, char)), ([u32; 6],)),mut _2: [isize; 5],mut _3: [i64; 8],mut _4: [u32; 6],mut _5: char,mut _6: u32,mut _7: [i8; 2],mut _8: char) -> usize {
mir! {
type RET = usize;
let _9: usize;
let _10: i128;
let _11: Adt64;
let _12: bool;
let _13: f32;
let _14: u8;
let _15: f64;
let _16: Adt59;
let _17: [i16; 5];
let _18: i128;
let _19: [i16; 5];
let _20: usize;
let _21: *const bool;
let _22: Adt61;
let _23: Adt63;
let _24: Adt62;
let _25: Adt59;
let _26: i128;
let _27: i8;
let _28: u64;
let _29: u64;
let _30: bool;
let _31: u64;
let _32: [i128; 4];
let _33: Adt53;
let _34: [u128; 4];
let _35: f32;
let _36: *mut [i8; 2];
let _37: u64;
let _38: char;
let _39: *mut f32;
let _40: i8;
let _41: ();
let _42: ();
{
_3 = [9161513938126903885_i64,1072225541343941179_i64,(-4503595377743713894_i64),(-9210907311293353076_i64),4681408592948682305_i64,1743977496759261415_i64,7895558999438932253_i64,1219082438395628055_i64];
_7 = [63_i8,73_i8];
RET = 3504464207527383320_usize;
_7 = [70_i8,117_i8];
_8 = _1.2.1.1;
_1.2.0 = [6_u8];
_6 = _1.1 as u32;
_1.3.0 = [_1.2.1.0,_1.2.1.0,_1.2.1.0,_1.2.1.0,_6,_1.2.1.0];
_1.3 = (_4,);
_1.3.0 = [_1.2.1.0,_6,_6,_1.2.1.0,_1.2.1.0,_1.2.1.0];
_1.0 = core::ptr::addr_of_mut!(_7);
_1.1 = !28033572286760441912996911255864320874_u128;
_1.3 = (_4,);
_1.2.1 = (_6, _8);
_2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),34_isize,9223372036854775807_isize];
_7 = [(-118_i8),49_i8];
Call(_8 = fn8(_3, _1.0, _1.2.0, _1.3, _6, _2, _4, _1.2.1.1, _3, _1.0, _1.3.0, _1.2.0), bb1, UnwindUnreachable())
}
bb1 = {
_1.3 = (_4,);
_1.2.1 = (_6, _8);
_9 = 8998700240429877875_usize;
_9 = !1_usize;
_1.3 = (_4,);
RET = _9 / 7383243284508182709_usize;
_1.3.0 = _4;
_1.1 = 17989898283634053733_u64 as u128;
_6 = _1.2.1.0 + _1.2.1.0;
_2 = [(-103_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-116_isize)];
_1.3.0 = _4;
_11.fld3.fld2.fld0.0 = _1.3.0;
_11.fld0.fld0.1 = 150_u8;
_11.fld3.fld2.fld2 = [(-129922828789079929085391148952230529714_i128),(-59010940127813589916669096206615710612_i128),156672785962443777772588645015972354493_i128,(-65642356015262371451927742604807931156_i128)];
match _11.fld0.fld0.1 {
0 => bb2,
1 => bb3,
2 => bb4,
150 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_11.fld3.fld2.fld2 = [70939096146786324494322449474770666450_i128,13811967834588950500801259464915600561_i128,71163422920064030314492436252801331210_i128,(-159085329433097258929266696005715507766_i128)];
_1.2.1 = (_6, _8);
_14 = _11.fld0.fld0.1 | _11.fld0.fld0.1;
_1.2.1.1 = _5;
_1.2.0 = [_11.fld0.fld0.1];
_1.2.1.0 = _6 + _6;
_11.fld3.fld3 = core::ptr::addr_of!(_1.2.1);
_11.fld3.fld0 = !true;
_11.fld0.fld0.0 = core::ptr::addr_of!(_8);
_11.fld0.fld0.2 = !_9;
RET = !_9;
RET = _9 << _1.2.1.0;
_16.fld0.2 = _14 as f64;
_11.fld3.fld2.fld2 = [(-103564540584715083121939335418382933423_i128),102768887112279650164612336998436749302_i128,73926464004475660498360606767467877560_i128,(-48586419154013386710475300545426668820_i128)];
_10 = (-611463962522725009536676979719266330_i128);
_11.fld0.fld4 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_11.fld3.fld1 = _11.fld3.fld2.fld2;
_13 = 6146_i16 as f32;
_16.fld1 = _10;
_18 = _10 ^ _16.fld1;
_5 = _8;
_1.1 = !183480949054500356858088097552015236771_u128;
_1.2.1 = (_6, _8);
_3 = [3415957026203093991_i64,1532596705465089226_i64,8159640059412913775_i64,5386317554927116527_i64,(-353411140570344367_i64),(-2616675803527885275_i64),(-1017316636348586518_i64),(-6483014377603035304_i64)];
_14 = _11.fld0.fld0.1 & _11.fld0.fld0.1;
Goto(bb7)
}
bb7 = {
_12 = _1.2.1.0 < _1.2.1.0;
_14 = !_11.fld0.fld0.1;
_17 = [(-32265_i16),(-9529_i16),(-4385_i16),11033_i16,(-9126_i16)];
_13 = (-6515565380546584180_i64) as f32;
_11.fld3.fld2 = Adt61 { fld0: _1.3,fld1: 7293805185312229973_u64,fld2: _11.fld3.fld1 };
_11.fld1 = core::ptr::addr_of!(_2);
_11.fld3.fld1 = _11.fld3.fld2.fld2;
Goto(bb8)
}
bb8 = {
_20 = _9 << _1.2.1.0;
_11.fld0.fld0.1 = _14 ^ _14;
_16.fld0.1 = _10;
_22 = _11.fld3.fld2;
_21 = core::ptr::addr_of!(_11.fld3.fld0);
_16.fld1 = (-1518035931_i32) as i128;
_2 = [(-33_isize),13_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = _8 as usize;
_22 = Adt61 { fld0: _1.3,fld1: _11.fld3.fld2.fld1,fld2: _11.fld3.fld1 };
_11.fld1 = core::ptr::addr_of!(_2);
_11.fld1 = core::ptr::addr_of!(_2);
(*_21) = _14 <= _11.fld0.fld0.1;
_11.fld3.fld2.fld0.0 = [_1.2.1.0,_6,_6,_6,_1.2.1.0,_1.2.1.0];
_22.fld0.0 = [_1.2.1.0,_1.2.1.0,_6,_1.2.1.0,_6,_6];
_12 = (*_21);
_1.2.0 = [_14];
_1.0 = core::ptr::addr_of_mut!(_11.fld0.fld0.3);
_11.fld3.fld2.fld1 = !_22.fld1;
_11.fld3.fld2.fld0.0 = [_1.2.1.0,_1.2.1.0,_6,_6,_1.2.1.0,_1.2.1.0];
_21 = core::ptr::addr_of!(_11.fld3.fld0);
_11.fld3.fld2.fld2 = _11.fld3.fld1;
RET = _20 ^ _9;
_11.fld2 = [7895_i16,(-29403_i16),13757_i16,(-12577_i16),9397_i16,20402_i16];
Goto(bb9)
}
bb9 = {
_11.fld0.fld1 = !_20;
_24.fld2 = [_11.fld0.fld0.2,_11.fld0.fld1];
_11.fld3.fld1 = _11.fld3.fld2.fld2;
_5 = _1.2.1.1;
_23.fld1 = [_10,_10,_16.fld1,_10];
_23.fld2 = Adt61 { fld0: _1.3,fld1: _11.fld3.fld2.fld1,fld2: _22.fld2 };
_24.fld0.fld3.2.0 = [_11.fld0.fld0.1];
_22.fld1 = _23.fld2.fld1;
_24.fld5.fld0.0 = _1.2.1.1;
_25.fld1 = -_18;
_1.2.0 = [_11.fld0.fld0.1];
_24.fld0.fld3.2.1.1 = _24.fld5.fld0.0;
_11.fld0.fld0.3 = [(-2_i8),55_i8];
_24.fld0.fld3.3 = (_22.fld0.0,);
_19 = [24272_i16,(-24899_i16),(-13028_i16),(-29592_i16),9880_i16];
_11.fld3.fld2.fld0.0 = [_1.2.1.0,_1.2.1.0,_6,_6,_6,_1.2.1.0];
_22 = Adt61 { fld0: _11.fld3.fld2.fld0,fld1: _11.fld3.fld2.fld1,fld2: _11.fld3.fld1 };
_24.fld0.fld1 = -_16.fld0.2;
_24.fld0.fld4 = 60146_u16;
Goto(bb10)
}
bb10 = {
_11.fld1 = core::ptr::addr_of!(_2);
_1.2.1.1 = _24.fld0.fld3.2.1.1;
_25.fld0.1 = -_10;
(*_21) = _12;
_11.fld0.fld2 = _11.fld2;
_24.fld0.fld3.2.1.0 = _6;
_1.3 = (_24.fld0.fld3.3.0,);
_7 = _11.fld0.fld0.3;
_15 = (-1653069561_i32) as f64;
_18 = 8_i8 as i128;
_23.fld2.fld0.0 = [_1.2.1.0,_1.2.1.0,_1.2.1.0,_24.fld0.fld3.2.1.0,_24.fld0.fld3.2.1.0,_24.fld0.fld3.2.1.0];
_23.fld3 = _11.fld3.fld3;
_15 = -_16.fld0.2;
_26 = _23.fld2.fld1 as i128;
_24.fld0.fld4 = 40472_u16 & 14043_u16;
_33.fld4 = _15 as i16;
_33.fld0 = (*_21) as i128;
_27 = _33.fld4 as i8;
_23.fld0 = (*_21);
match _16.fld0.1 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb7,
5 => bb11,
339670902958415738453837930452048945126 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_11.fld3.fld2.fld2 = [70939096146786324494322449474770666450_i128,13811967834588950500801259464915600561_i128,71163422920064030314492436252801331210_i128,(-159085329433097258929266696005715507766_i128)];
_1.2.1 = (_6, _8);
_14 = _11.fld0.fld0.1 | _11.fld0.fld0.1;
_1.2.1.1 = _5;
_1.2.0 = [_11.fld0.fld0.1];
_1.2.1.0 = _6 + _6;
_11.fld3.fld3 = core::ptr::addr_of!(_1.2.1);
_11.fld3.fld0 = !true;
_11.fld0.fld0.0 = core::ptr::addr_of!(_8);
_11.fld0.fld0.2 = !_9;
RET = !_9;
RET = _9 << _1.2.1.0;
_16.fld0.2 = _14 as f64;
_11.fld3.fld2.fld2 = [(-103564540584715083121939335418382933423_i128),102768887112279650164612336998436749302_i128,73926464004475660498360606767467877560_i128,(-48586419154013386710475300545426668820_i128)];
_10 = (-611463962522725009536676979719266330_i128);
_11.fld0.fld4 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_11.fld3.fld1 = _11.fld3.fld2.fld2;
_13 = 6146_i16 as f32;
_16.fld1 = _10;
_18 = _10 ^ _16.fld1;
_5 = _8;
_1.1 = !183480949054500356858088097552015236771_u128;
_1.2.1 = (_6, _8);
_3 = [3415957026203093991_i64,1532596705465089226_i64,8159640059412913775_i64,5386317554927116527_i64,(-353411140570344367_i64),(-2616675803527885275_i64),(-1017316636348586518_i64),(-6483014377603035304_i64)];
_14 = _11.fld0.fld0.1 & _11.fld0.fld0.1;
Goto(bb7)
}
bb13 = {
_1.0 = core::ptr::addr_of_mut!(_7);
_16.fld1 = _14 as i128;
_11.fld0.fld3 = _27 - _27;
_24.fld0.fld4 = !38586_u16;
_10 = -_33.fld0;
_1.1 = 81084718050334784566462640664212933639_u128;
_20 = !_11.fld0.fld1;
_25.fld1 = (*_21) as i128;
_24.fld5.fld1 = _24.fld5.fld0.0;
_22.fld1 = !_11.fld3.fld2.fld1;
_10 = 8341398639484251736_i64 as i128;
_33.fld3.fld4 = _21;
_34 = [_1.1,_1.1,_1.1,_1.1];
_12 = _23.fld0;
_24.fld0 = Adt58 { fld0: (*_21),fld1: _16.fld0.2,fld2: _3,fld3: _1,fld4: 7533_u16 };
Goto(bb14)
}
bb14 = {
_19 = [_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4];
_23.fld2.fld2 = [_33.fld0,_26,_26,_26];
_22.fld0 = (_4,);
RET = _11.fld0.fld1 / 3_usize;
_24.fld1 = (2355688617409774644_i64, _2, _33.fld4);
_24.fld0.fld3.1 = !_1.1;
_12 = !(*_21);
_11.fld0.fld0.2 = !_9;
_24.fld5.fld0 = (_5, _11.fld0.fld4);
_23.fld2.fld2 = [_26,_33.fld0,_26,_26];
_22.fld1 = _24.fld1.0 as u64;
_31 = _24.fld0.fld3.2.1.1 as u64;
_20 = _11.fld0.fld0.2 - _9;
_33.fld0 = _26 >> _24.fld1.0;
_37 = _22.fld1 / 13439715428653658685_u64;
_23 = Adt63 { fld0: _24.fld0.fld0,fld1: _11.fld3.fld1,fld2: _11.fld3.fld2,fld3: _11.fld3.fld3 };
_16.fld0 = (_8, _25.fld1, _15);
_5 = _24.fld5.fld1;
_24.fld0.fld3 = (_1.0, _1.1, _1.2, _22.fld0);
_33.fld3.fld0.1 = _11.fld0.fld4;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(7_usize, 10_usize, Move(_10), 19_usize, Move(_19), 5_usize, Move(_5), 17_usize, Move(_17)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(7_usize, 2_usize, Move(_2), 4_usize, Move(_4), 27_usize, Move(_27), 37_usize, Move(_37)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(7_usize, 6_usize, Move(_6), 14_usize, Move(_14), 42_usize, _42, 42_usize, _42), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [i64; 8],mut _2: *mut [i8; 2],mut _3: [u8; 1],mut _4: ([u32; 6],),mut _5: u32,mut _6: [isize; 5],mut _7: [u32; 6],mut _8: char,mut _9: [i64; 8],mut _10: *mut [i8; 2],mut _11: [u32; 6],mut _12: [u8; 1]) -> char {
mir! {
type RET = char;
let _13: *mut [i8; 2];
let _14: *const bool;
let _15: u32;
let _16: char;
let _17: Adt51;
let _18: f64;
let _19: f64;
let _20: [u128; 1];
let _21: char;
let _22: isize;
let _23: f32;
let _24: isize;
let _25: Adt66;
let _26: u128;
let _27: isize;
let _28: Adt53;
let _29: Adt61;
let _30: i64;
let _31: [i8; 2];
let _32: u8;
let _33: Adt52;
let _34: Adt60;
let _35: [u16; 4];
let _36: [isize; 5];
let _37: (f64,);
let _38: Adt56;
let _39: char;
let _40: [i16; 6];
let _41: f32;
let _42: isize;
let _43: i128;
let _44: f32;
let _45: char;
let _46: bool;
let _47: bool;
let _48: ();
let _49: ();
{
(*_10) = [(-86_i8),(-104_i8)];
(*_10) = [89_i8,41_i8];
RET = _8;
_12 = [226_u8];
RET = _8;
_2 = _10;
_10 = _2;
(*_10) = [(-8_i8),84_i8];
_2 = core::ptr::addr_of_mut!((*_2));
_13 = core::ptr::addr_of_mut!((*_10));
_2 = core::ptr::addr_of_mut!((*_2));
_15 = _5;
Call(_13 = fn9(_5, _6, _7, (*_13), (*_2), _10, _8, _11, _2, (*_2), _7, (*_13), _15, (*_13)), bb1, UnwindUnreachable())
}
bb1 = {
_6 = [(-33_isize),46_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_5 = _15;
_1 = [(-5238995784109485515_i64),8122823114044857051_i64,(-4090268977726052439_i64),4318308075019285892_i64,(-2290259088294839426_i64),1770953832951375876_i64,1147884102326633250_i64,(-4459589932150249114_i64)];
(*_10) = [100_i8,(-105_i8)];
_15 = _8 as u32;
(*_13) = [22_i8,98_i8];
_1 = [(-4570012935040715861_i64),7267606548253587671_i64,8150318563636135722_i64,(-3136769244839708167_i64),(-5884634039198353208_i64),(-8496603257183217623_i64),3270238298498409617_i64,(-974992066738019611_i64)];
_4.0 = _7;
RET = _8;
_13 = core::ptr::addr_of_mut!((*_10));
_3 = [230_u8];
_7 = [_5,_15,_5,_15,_5,_5];
_10 = core::ptr::addr_of_mut!((*_2));
RET = _8;
_17.fld1 = 6_usize + 13877752134468234860_usize;
_16 = _8;
_17.fld2 = [1287_i16,14058_i16,29665_i16,(-23432_i16),(-28576_i16),(-31248_i16)];
_17.fld0.0 = core::ptr::addr_of!(_8);
_17.fld0.2 = _17.fld1;
_11 = _4.0;
RET = _8;
(*_2) = [34_i8,(-34_i8)];
(*_2) = [109_i8,(-92_i8)];
_17.fld3 = _15 as i8;
_17.fld4 = [193794288333910818194261196541571284508_u128,83757969862255587612172589415846657759_u128,289229974035198219122279449003140879684_u128,30397066517797318165231393320354276064_u128,25312221072550120836642005520584927594_u128,171835435540619814532430977385093805312_u128,280996905318231425814545721206041130227_u128,99020004604707049777010130754486967252_u128];
(*_13) = [_17.fld3,_17.fld3];
Goto(bb2)
}
bb2 = {
(*_2) = [_17.fld3,_17.fld3];
_17.fld1 = !_17.fld0.2;
(*_2) = [_17.fld3,_17.fld3];
_7 = _4.0;
_4 = (_11,);
(*_10) = [_17.fld3,_17.fld3];
_2 = core::ptr::addr_of_mut!((*_13));
_13 = core::ptr::addr_of_mut!((*_13));
_11 = [_5,_15,_5,_5,_5,_5];
(*_2) = [_17.fld3,_17.fld3];
_17.fld4 = [121197579330672975782247375792427067802_u128,306672740234326550162199333474856256705_u128,81941378626174462308082991945367986752_u128,20452716670048383007681247003260315949_u128,214217875463210224134322979137655605399_u128,286172289784286903965065786754861676195_u128,265585695593551427623443378538206490800_u128,54200686131673085626877132610976638547_u128];
_13 = _2;
(*_13) = [_17.fld3,_17.fld3];
_17.fld0.3 = (*_13);
_17.fld3 = !(-97_i8);
_17.fld3 = (-48_i8) << _17.fld1;
_12 = [100_u8];
_7 = [_5,_15,_15,_5,_15,_5];
_17.fld2 = [4848_i16,29236_i16,1929_i16,(-14883_i16),(-5694_i16),11278_i16];
_20 = [48973478664117519949886896853298512383_u128];
_17.fld0.3 = (*_13);
(*_10) = _17.fld0.3;
_3 = [187_u8];
_19 = _5 as f64;
_8 = _16;
_17.fld0.3 = [_17.fld3,_17.fld3];
Call(_17.fld0.2 = fn13(_2, _11, _17.fld0.0, _6, _17.fld2, _17.fld2, _3, _17.fld0.0, (*_13), _10, _16, _12, _2), bb3, UnwindUnreachable())
}
bb3 = {
_9 = _1;
_24 = !(-9223372036854775808_isize);
_6 = [_24,_24,_24,_24,_24];
_28.fld0 = -(-38620347760884503679469402313285998559_i128);
_16 = _8;
_27 = _24;
(*_2) = [_17.fld3,_17.fld3];
_28.fld1 = _17.fld0.2 as i64;
(*_13) = [_17.fld3,_17.fld3];
_27 = -_24;
_17.fld2 = [(-2418_i16),25764_i16,(-12799_i16),13915_i16,4580_i16,(-1230_i16)];
_1 = [_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1];
_17.fld0.2 = 44775_u16 as usize;
_13 = core::ptr::addr_of_mut!((*_2));
_8 = _16;
Goto(bb4)
}
bb4 = {
RET = _8;
(*_10) = _17.fld0.3;
_25.fld0.fld3.fld1 = _8;
_27 = _24;
_25.fld0.fld3.fld1 = _8;
_28.fld3.fld1 = _16;
_25.fld0.fld3.fld0.1 = _17.fld4;
_28.fld3.fld0 = (_16, _25.fld0.fld3.fld0.1);
_28.fld1 = _17.fld3 as i64;
_25.fld0.fld3.fld3 = [_28.fld0,_28.fld0,_28.fld0,_28.fld0];
(*_10) = [_17.fld3,_17.fld3];
_25.fld0.fld2 = core::ptr::addr_of!(_21);
_25.fld0.fld4 = !(-31266_i16);
_1 = _9;
_25.fld0.fld3.fld1 = _28.fld3.fld1;
_27 = -_24;
_9 = [_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1];
(*_2) = _17.fld0.3;
_17.fld1 = _17.fld0.2 << _28.fld1;
Goto(bb5)
}
bb5 = {
_15 = _5 * _5;
_29.fld0 = (_4.0,);
_28.fld2 = _17.fld0.0;
Goto(bb6)
}
bb6 = {
_15 = _5 << _28.fld1;
_29.fld0 = _4;
_27 = !_24;
_28.fld3.fld0.1 = [7383322220584046918804965712588189783_u128,255834148754603882982357420805089257493_u128,81625418079732473664801425524809461056_u128,108078861284010498042080173423808390649_u128,168500353806827460544277342665645670283_u128,60148973954855223058507718222048768971_u128,152982147023552889150553331074093700497_u128,294809290104393549043224666824714865993_u128];
_29.fld0 = (_4.0,);
_28.fld0 = 88993720168540526410523361799789021868_i128 ^ (-15983855148623193425117443866002686824_i128);
(*_10) = [_17.fld3,_17.fld3];
_9 = [_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1];
RET = _28.fld3.fld1;
_15 = _5;
_25.fld0.fld1 = 14131180608517756688_u64 as i64;
_3 = [130_u8];
_25.fld0.fld3.fld0.0 = _28.fld3.fld0.0;
Goto(bb7)
}
bb7 = {
_28.fld3.fld3 = _25.fld0.fld3.fld3;
_25.fld0.fld2 = _17.fld0.0;
_28.fld3.fld2 = core::ptr::addr_of_mut!(_25.fld0.fld4);
_25.fld0.fld0 = !_28.fld0;
_29 = Adt61 { fld0: _4,fld1: 8691402845810657165_u64,fld2: _25.fld0.fld3.fld3 };
_34.fld2.fld6.fld3 = _27 as i8;
_18 = _19 - _19;
_34.fld1.fld0.2.1 = (_5, _28.fld3.fld0.0);
_25.fld0.fld3.fld4 = core::ptr::addr_of!(_33.fld0);
(*_10) = [_17.fld3,_17.fld3];
_34.fld2.fld6.fld0.0 = core::ptr::addr_of!(_28.fld3.fld1);
_29.fld1 = 15462995380422217212_u64;
_34.fld1.fld5.fld0 = (_17.fld0.0, 202_u8, _17.fld1, (*_2));
Goto(bb8)
}
bb8 = {
_34.fld1.fld4 = core::ptr::addr_of_mut!(_33.fld1.2);
_33.fld1.2 = _25.fld0.fld4 << _34.fld2.fld6.fld3;
_17.fld0.1 = _34.fld1.fld5.fld0.1 << _17.fld3;
_34.fld1.fld5.fld0.2 = _34.fld2.fld6.fld3 as usize;
_25.fld0.fld3.fld1 = _25.fld0.fld3.fld0.0;
_34.fld1.fld0.3 = (_29.fld0.0,);
_38.fld1.fld0.3.0 = [_15,_15,_34.fld1.fld0.2.1.0,_15,_34.fld1.fld0.2.1.0,_5];
_34.fld2.fld5 = 79551149470281965675500366417280852181_u128 as i32;
_17.fld3 = _34.fld2.fld6.fld3;
_38.fld0.2 = true as i16;
_11 = _29.fld0.0;
_38.fld1.fld0.2.1 = _34.fld1.fld0.2.1;
match _34.fld1.fld5.fld0.1 {
0 => bb9,
202 => bb11,
_ => bb10
}
}
bb9 = {
_15 = _5 * _5;
_29.fld0 = (_4.0,);
_28.fld2 = _17.fld0.0;
Goto(bb6)
}
bb10 = {
(*_2) = [_17.fld3,_17.fld3];
_17.fld1 = !_17.fld0.2;
(*_2) = [_17.fld3,_17.fld3];
_7 = _4.0;
_4 = (_11,);
(*_10) = [_17.fld3,_17.fld3];
_2 = core::ptr::addr_of_mut!((*_13));
_13 = core::ptr::addr_of_mut!((*_13));
_11 = [_5,_15,_5,_5,_5,_5];
(*_2) = [_17.fld3,_17.fld3];
_17.fld4 = [121197579330672975782247375792427067802_u128,306672740234326550162199333474856256705_u128,81941378626174462308082991945367986752_u128,20452716670048383007681247003260315949_u128,214217875463210224134322979137655605399_u128,286172289784286903965065786754861676195_u128,265585695593551427623443378538206490800_u128,54200686131673085626877132610976638547_u128];
_13 = _2;
(*_13) = [_17.fld3,_17.fld3];
_17.fld0.3 = (*_13);
_17.fld3 = !(-97_i8);
_17.fld3 = (-48_i8) << _17.fld1;
_12 = [100_u8];
_7 = [_5,_15,_15,_5,_15,_5];
_17.fld2 = [4848_i16,29236_i16,1929_i16,(-14883_i16),(-5694_i16),11278_i16];
_20 = [48973478664117519949886896853298512383_u128];
_17.fld0.3 = (*_13);
(*_10) = _17.fld0.3;
_3 = [187_u8];
_19 = _5 as f64;
_8 = _16;
_17.fld0.3 = [_17.fld3,_17.fld3];
Call(_17.fld0.2 = fn13(_2, _11, _17.fld0.0, _6, _17.fld2, _17.fld2, _3, _17.fld0.0, (*_13), _10, _16, _12, _2), bb3, UnwindUnreachable())
}
bb11 = {
_38.fld0.0 = _16 as i64;
_28.fld3.fld0.0 = _16;
_21 = _34.fld1.fld0.2.1.1;
_34.fld2.fld2 = (_34.fld1.fld0.3.0,);
_38.fld1.fld2 = [_33.fld1.2,_33.fld1.2,_33.fld1.2,_33.fld1.2,_38.fld0.2];
_33.fld1.2 = _38.fld0.2 + _25.fld0.fld4;
_38.fld0.1 = [_24,_24,_27,_24,_24];
_34.fld2.fld6.fld1 = !_17.fld0.2;
_38.fld1.fld5.fld0.0 = _34.fld1.fld5.fld0.0;
_38.fld1.fld5.fld2 = [_33.fld1.2,_33.fld1.2,_33.fld1.2,_38.fld0.2,_25.fld0.fld4,_38.fld0.2];
_34.fld2.fld6.fld4 = _17.fld4;
_38.fld1.fld5.fld4 = [330823769364104271819856960709190862120_u128,124134513723772281284942774992336848177_u128,149776098576611847940894211102738402036_u128,30288420423573508173158546025395499290_u128,90812963731513873535646038895392861252_u128,321731060866690323341215102494877124640_u128,260609525276488125012611663550281103612_u128,23231782965556771384997502158699863296_u128];
_34.fld2.fld2.0 = _4.0;
_34.fld1.fld0.2 = (_3, _38.fld1.fld0.2.1);
_31 = [_17.fld3,_17.fld3];
_34.fld1.fld0.3 = _34.fld2.fld2;
_38.fld1.fld3.0 = core::ptr::addr_of!(_21);
_4.0 = _34.fld1.fld0.3.0;
_21 = _25.fld0.fld3.fld1;
_21 = _28.fld3.fld0.0;
_34.fld2.fld6.fld3 = 153000601187733820019923142302287025278_u128 as i8;
_17.fld3 = _34.fld2.fld6.fld3 >> _28.fld0;
_22 = !_24;
_38.fld1.fld0.3 = _4;
_34.fld2.fld2 = _4;
(*_2) = [_17.fld3,_17.fld3];
match _34.fld1.fld5.fld0.1 {
202 => bb13,
_ => bb12
}
}
bb12 = {
_15 = _5 << _28.fld1;
_29.fld0 = _4;
_27 = !_24;
_28.fld3.fld0.1 = [7383322220584046918804965712588189783_u128,255834148754603882982357420805089257493_u128,81625418079732473664801425524809461056_u128,108078861284010498042080173423808390649_u128,168500353806827460544277342665645670283_u128,60148973954855223058507718222048768971_u128,152982147023552889150553331074093700497_u128,294809290104393549043224666824714865993_u128];
_29.fld0 = (_4.0,);
_28.fld0 = 88993720168540526410523361799789021868_i128 ^ (-15983855148623193425117443866002686824_i128);
(*_10) = [_17.fld3,_17.fld3];
_9 = [_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1,_28.fld1];
RET = _28.fld3.fld1;
_15 = _5;
_25.fld0.fld1 = 14131180608517756688_u64 as i64;
_3 = [130_u8];
_25.fld0.fld3.fld0.0 = _28.fld3.fld0.0;
Goto(bb7)
}
bb13 = {
_14 = core::ptr::addr_of!(_33.fld0);
(*_10) = [_17.fld3,_17.fld3];
_33.fld3 = _34.fld2.fld5 as u64;
_38.fld1.fld5.fld0.3 = _34.fld1.fld5.fld0.3;
_30 = -_28.fld1;
_17.fld2 = [_25.fld0.fld4,_25.fld0.fld4,_33.fld1.2,_33.fld1.2,_33.fld1.2,_38.fld0.2];
_16 = _25.fld0.fld3.fld1;
_7 = [_15,_38.fld1.fld0.2.1.0,_38.fld1.fld0.2.1.0,_34.fld1.fld0.2.1.0,_34.fld1.fld0.2.1.0,_15];
_34.fld2.fld6.fld2 = [_33.fld1.2,_33.fld1.2,_25.fld0.fld4,_33.fld1.2,_33.fld1.2,_33.fld1.2];
Call(_38.fld1.fld5.fld0.1 = core::intrinsics::bswap(_34.fld1.fld5.fld0.1), bb14, UnwindUnreachable())
}
bb14 = {
_34.fld2.fld6.fld0.3 = _17.fld0.3;
_37.0 = -_18;
_34.fld1.fld3 = (_34.fld1.fld5.fld0.0,);
_28.fld3.fld0.0 = _25.fld0.fld3.fld1;
_4.0 = _34.fld2.fld2.0;
_33 = Adt52 { fld0: true,fld1: _38.fld0,fld2: _1,fld3: _29.fld1,fld4: _38.fld1.fld3,fld5: _34.fld1.fld5.fld0.1 };
_34.fld2.fld6 = Move(_17);
_14 = _25.fld0.fld3.fld4;
_34.fld2.fld6.fld4 = [274357076420491106583123253434765460583_u128,319127247349927609994750935393759533604_u128,277619512931018154100856569918180168545_u128,296578153921844467282051158029084982077_u128,84660435969062676502892447923677393331_u128,272619860148065149907938748590315598423_u128,330302583187092274259078523824728686206_u128,255722672869369537430533887158094832643_u128];
_34.fld1.fld0.0 = core::ptr::addr_of_mut!(_31);
_25.fld0.fld4 = _18 as i16;
_38.fld1.fld0.1 = _34.fld2.fld6.fld0.1 as u128;
_25.fld0.fld3 = Adt50 { fld0: _28.fld3.fld0,fld1: _28.fld3.fld1,fld2: _28.fld3.fld2,fld3: _28.fld3.fld3,fld4: _14 };
_34.fld1.fld0.3 = (_38.fld1.fld0.3.0,);
_25.fld0.fld0 = !_28.fld0;
_28.fld3.fld0.0 = _38.fld1.fld0.2.1.1;
_15 = !_38.fld1.fld0.2.1.0;
_38.fld1.fld0.0 = core::ptr::addr_of_mut!(_31);
_34.fld2.fld6.fld4 = _25.fld0.fld3.fld0.1;
_4.0 = _11;
_28.fld3 = Adt50 { fld0: _25.fld0.fld3.fld0,fld1: _34.fld1.fld0.2.1.1,fld2: _25.fld0.fld3.fld2,fld3: _29.fld2,fld4: _14 };
_34.fld2.fld4 = [_38.fld1.fld0.1];
_45 = _34.fld1.fld0.2.1.1;
_34.fld1.fld5.fld4 = _28.fld3.fld0.1;
_38.fld1.fld1 = [_5,_38.fld1.fld0.2.1.0,_38.fld1.fld0.2.1.0,_15,_34.fld1.fld0.2.1.0,_38.fld1.fld0.2.1.0];
_34.fld2.fld3 = _11;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(8_usize, 6_usize, Move(_6), 15_usize, Move(_15), 1_usize, Move(_1), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(8_usize, 20_usize, Move(_20), 30_usize, Move(_30), 45_usize, Move(_45), 21_usize, Move(_21)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(8_usize, 12_usize, Move(_12), 31_usize, Move(_31), 49_usize, _49, 49_usize, _49), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: u32,mut _2: [isize; 5],mut _3: [u32; 6],mut _4: [i8; 2],mut _5: [i8; 2],mut _6: *mut [i8; 2],mut _7: char,mut _8: [u32; 6],mut _9: *mut [i8; 2],mut _10: [i8; 2],mut _11: [u32; 6],mut _12: [i8; 2],mut _13: u32,mut _14: [i8; 2]) -> *mut [i8; 2] {
mir! {
type RET = *mut [i8; 2];
let _15: [u8; 1];
let _16: bool;
let _17: u16;
let _18: *const i128;
let _19: Adt51;
let _20: *const [isize; 5];
let _21: f32;
let _22: isize;
let _23: Adt66;
let _24: [i16; 5];
let _25: (char, i128, f64);
let _26: [u16; 4];
let _27: Adt59;
let _28: (f64,);
let _29: Adt59;
let _30: isize;
let _31: i64;
let _32: char;
let _33: i128;
let _34: u64;
let _35: Adt63;
let _36: i8;
let _37: f64;
let _38: [u32; 6];
let _39: (u32, char);
let _40: [u8; 1];
let _41: *mut [i8; 2];
let _42: *const char;
let _43: Adt63;
let _44: [u128; 1];
let _45: ();
let _46: ();
{
_12 = (*_9);
_13 = !_1;
_5 = [21_i8,100_i8];
(*_9) = _14;
_10 = [109_i8,(-93_i8)];
_11 = _8;
Goto(bb1)
}
bb1 = {
_1 = _13;
_3 = [_13,_1,_13,_1,_13,_1];
_10 = _4;
RET = _6;
_4 = [(-95_i8),117_i8];
_1 = _13 + _13;
_13 = _1 * _1;
(*RET) = [(-5_i8),(-115_i8)];
_19.fld2 = [(-24999_i16),7388_i16,5439_i16,16573_i16,16475_i16,(-29307_i16)];
_5 = (*RET);
_1 = _13 << _13;
_19.fld2 = [9190_i16,(-22323_i16),16844_i16,(-22202_i16),(-30718_i16),(-12531_i16)];
_19.fld1 = 7_usize << _13;
_19.fld0.2 = 22325641352904743243626260566256301494_i128 as usize;
_15 = [167_u8];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-20_isize),(-9223372036854775808_isize)];
_15 = [221_u8];
(*RET) = [35_i8,(-2_i8)];
_15 = [209_u8];
(*_9) = _10;
(*RET) = _4;
_19.fld0.0 = core::ptr::addr_of!(_7);
Goto(bb2)
}
bb2 = {
_19.fld0.1 = _1 as u8;
_15 = [_19.fld0.1];
_10 = (*RET);
_19.fld3 = (-58_i8);
_19.fld4 = [214650426303274335982561361780995536407_u128,58127665123929068613956510167372819017_u128,95084313241499988650124641301610564948_u128,256388817146352105505711997069003698936_u128,165395666948138341766458860413248126063_u128,101379164828187051448764037231984128097_u128,164015172985488059874421815717232012128_u128,67063966178962328804619642616889753415_u128];
_19.fld2 = [(-9217_i16),(-1430_i16),(-7022_i16),(-7674_i16),(-32458_i16),(-28528_i16)];
_20 = core::ptr::addr_of!(_2);
match _19.fld3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607431768211398 => bb7,
_ => bb6
}
}
bb3 = {
_1 = _13;
_3 = [_13,_1,_13,_1,_13,_1];
_10 = _4;
RET = _6;
_4 = [(-95_i8),117_i8];
_1 = _13 + _13;
_13 = _1 * _1;
(*RET) = [(-5_i8),(-115_i8)];
_19.fld2 = [(-24999_i16),7388_i16,5439_i16,16573_i16,16475_i16,(-29307_i16)];
_5 = (*RET);
_1 = _13 << _13;
_19.fld2 = [9190_i16,(-22323_i16),16844_i16,(-22202_i16),(-30718_i16),(-12531_i16)];
_19.fld1 = 7_usize << _13;
_19.fld0.2 = 22325641352904743243626260566256301494_i128 as usize;
_15 = [167_u8];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-20_isize),(-9223372036854775808_isize)];
_15 = [221_u8];
(*RET) = [35_i8,(-2_i8)];
_15 = [209_u8];
(*_9) = _10;
(*RET) = _4;
_19.fld0.0 = core::ptr::addr_of!(_7);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = core::ptr::addr_of_mut!((*_6));
_19.fld0.2 = !_19.fld1;
RET = _9;
_21 = 48388_u16 as f32;
_16 = _13 < _1;
(*_6) = _10;
_23.fld0.fld3.fld0.1 = _19.fld4;
_7 = '\u{e8c8}';
(*_9) = [_19.fld3,_19.fld3];
_23.fld0.fld3.fld1 = _7;
_23.fld0.fld0 = (-126148833279993767463439016572928921517_i128);
_23.fld0.fld3.fld1 = _7;
_23.fld0.fld0 = !105735352855542435984850871417550555418_i128;
(*_9) = [_19.fld3,_19.fld3];
_23.fld0.fld2 = _19.fld0.0;
_19.fld0 = (_23.fld0.fld2, 185_u8, _19.fld1, (*_6));
_23.fld0.fld2 = _19.fld0.0;
_23.fld0.fld3.fld0.0 = _7;
_25.0 = _7;
_8 = _11;
(*RET) = _19.fld0.3;
_8 = [_13,_13,_1,_13,_13,_1];
_4 = [_19.fld3,_19.fld3];
_10 = [_19.fld3,_19.fld3];
Goto(bb8)
}
bb8 = {
_23.fld0.fld4 = 25220_i16;
_21 = _19.fld0.1 as f32;
_15 = [_19.fld0.1];
_23.fld0.fld3.fld3 = [_23.fld0.fld0,_23.fld0.fld0,_23.fld0.fld0,_23.fld0.fld0];
Goto(bb9)
}
bb9 = {
RET = _6;
_19.fld2 = [_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4];
(*RET) = [_19.fld3,_19.fld3];
_19.fld0.3 = [_19.fld3,_19.fld3];
_25.2 = _19.fld0.2 as f64;
_29.fld0.0 = _23.fld0.fld3.fld0.0;
_27.fld0 = (_25.0, _23.fld0.fld0, _25.2);
_23.fld0.fld3.fld2 = core::ptr::addr_of_mut!(_23.fld0.fld4);
_9 = core::ptr::addr_of_mut!((*_6));
_32 = _29.fld0.0;
_23.fld0.fld1 = 6636769305366638199_i64;
_35.fld2.fld0 = (_11,);
(*RET) = [_19.fld3,_19.fld3];
(*_6) = _5;
_33 = _23.fld0.fld0;
_19.fld0.2 = !_19.fld1;
_2 = [(-9223372036854775808_isize),(-30_isize),(-22_isize),69_isize,9223372036854775807_isize];
Call(_34 = fn10(_23.fld0.fld3.fld2, _27.fld0.2), bb10, UnwindUnreachable())
}
bb10 = {
_29.fld0 = (_32, _27.fld0.1, _27.fld0.2);
_28.0 = _25.2 - _27.fld0.2;
_24 = [_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4];
_22 = !9223372036854775807_isize;
_22 = -(-9223372036854775808_isize);
_17 = 29367_u16;
_22 = _7 as isize;
_14 = [_19.fld3,_19.fld3];
(*_6) = [_19.fld3,_19.fld3];
_35.fld2.fld1 = !_34;
_24 = [_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4];
_10 = _12;
_30 = _22 >> _34;
_11 = [_1,_13,_13,_1,_1,_1];
_27.fld1 = _23.fld0.fld1 as i128;
_19.fld0.2 = _19.fld1 + _19.fld1;
_19.fld0.0 = core::ptr::addr_of!(_29.fld0.0);
_29.fld0 = _27.fld0;
_26 = [_17,_17,_17,_17];
_17 = 14466_u16;
_35.fld2.fld1 = _34;
RET = core::ptr::addr_of_mut!((*_9));
_18 = core::ptr::addr_of!(_27.fld1);
_25.2 = _28.0 * _28.0;
match _19.fld0.1 {
0 => bb6,
1 => bb2,
2 => bb4,
3 => bb11,
185 => bb13,
_ => bb12
}
}
bb11 = {
RET = _6;
_19.fld2 = [_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4];
(*RET) = [_19.fld3,_19.fld3];
_19.fld0.3 = [_19.fld3,_19.fld3];
_25.2 = _19.fld0.2 as f64;
_29.fld0.0 = _23.fld0.fld3.fld0.0;
_27.fld0 = (_25.0, _23.fld0.fld0, _25.2);
_23.fld0.fld3.fld2 = core::ptr::addr_of_mut!(_23.fld0.fld4);
_9 = core::ptr::addr_of_mut!((*_6));
_32 = _29.fld0.0;
_23.fld0.fld1 = 6636769305366638199_i64;
_35.fld2.fld0 = (_11,);
(*RET) = [_19.fld3,_19.fld3];
(*_6) = _5;
_33 = _23.fld0.fld0;
_19.fld0.2 = !_19.fld1;
_2 = [(-9223372036854775808_isize),(-30_isize),(-22_isize),69_isize,9223372036854775807_isize];
Call(_34 = fn10(_23.fld0.fld3.fld2, _27.fld0.2), bb10, UnwindUnreachable())
}
bb12 = {
_1 = _13;
_3 = [_13,_1,_13,_1,_13,_1];
_10 = _4;
RET = _6;
_4 = [(-95_i8),117_i8];
_1 = _13 + _13;
_13 = _1 * _1;
(*RET) = [(-5_i8),(-115_i8)];
_19.fld2 = [(-24999_i16),7388_i16,5439_i16,16573_i16,16475_i16,(-29307_i16)];
_5 = (*RET);
_1 = _13 << _13;
_19.fld2 = [9190_i16,(-22323_i16),16844_i16,(-22202_i16),(-30718_i16),(-12531_i16)];
_19.fld1 = 7_usize << _13;
_19.fld0.2 = 22325641352904743243626260566256301494_i128 as usize;
_15 = [167_u8];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-20_isize),(-9223372036854775808_isize)];
_15 = [221_u8];
(*RET) = [35_i8,(-2_i8)];
_15 = [209_u8];
(*_9) = _10;
(*RET) = _4;
_19.fld0.0 = core::ptr::addr_of!(_7);
Goto(bb2)
}
bb13 = {
_16 = _21 >= _21;
_23.fld0.fld3.fld1 = _7;
_29.fld1 = _27.fld1 >> _27.fld1;
_23.fld0.fld4 = (-18815_i16) * 15489_i16;
_1 = _13;
_27.fld0 = _29.fld0;
(*RET) = _5;
_35.fld2.fld0 = (_8,);
_23.fld0.fld3.fld4 = core::ptr::addr_of!(_35.fld0);
_25.1 = _29.fld0.1 + _27.fld0.1;
_19.fld0.1 = _35.fld2.fld1 as u8;
_4 = [_19.fld3,_19.fld3];
_15 = [_19.fld0.1];
(*RET) = _12;
_40 = [_19.fld0.1];
_29 = Move(_27);
_39 = (_1, _29.fld0.0);
_19.fld2 = [_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4,_23.fld0.fld4];
(*RET) = [_19.fld3,_19.fld3];
_37 = _28.0;
Goto(bb14)
}
bb14 = {
(*_6) = [_19.fld3,_19.fld3];
_38 = [_1,_39.0,_1,_39.0,_1,_1];
_23.fld0.fld2 = _19.fld0.0;
_35.fld0 = _16;
_1 = !_39.0;
(*_6) = [_19.fld3,_19.fld3];
_11 = [_1,_39.0,_39.0,_39.0,_39.0,_13];
_35.fld3 = core::ptr::addr_of!(_39);
(*_6) = [_19.fld3,_19.fld3];
_35.fld0 = !_16;
_18 = core::ptr::addr_of!(_25.1);
_23.fld0.fld3.fld0.1 = [257733861831161250790546997190386917959_u128,235577401409568402234573363513016021717_u128,117606053465089592958780494974241148214_u128,103395750154101473905087839457482028504_u128,117429344000578350450731897368016002090_u128,131889140556387292996411561109751524512_u128,17399781398978921296309995029683897404_u128,270228814961219831481953393069000654944_u128];
_23.fld0.fld3.fld0.1 = [221813704106393988753384892071478571974_u128,272243083263603667289127372822541032573_u128,147615084874704610547515442133048350059_u128,190584975052401238750366686378122817329_u128,23768825287391119260918311334653548762_u128,204681538861735055395885243274892706034_u128,204003968094635133900876942798504646825_u128,244426532613454164283425938347856752341_u128];
_9 = _6;
_43.fld2 = Adt61 { fld0: _35.fld2.fld0,fld1: _34,fld2: _23.fld0.fld3.fld3 };
_30 = _23.fld0.fld4 as isize;
_23.fld0.fld3.fld1 = _29.fld0.0;
_36 = _19.fld1 as i8;
_43.fld1 = _43.fld2.fld2;
(*_6) = [_36,_36];
_23.fld0.fld0 = (*_18);
_28 = (_29.fld0.2,);
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(9_usize, 12_usize, Move(_12), 15_usize, Move(_15), 17_usize, Move(_17), 4_usize, Move(_4)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(9_usize, 8_usize, Move(_8), 32_usize, Move(_32), 7_usize, Move(_7), 40_usize, Move(_40)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(9_usize, 24_usize, Move(_24), 16_usize, Move(_16), 2_usize, Move(_2), 5_usize, Move(_5)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(9_usize, 13_usize, Move(_13), 46_usize, _46, 46_usize, _46, 46_usize, _46), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: *mut i16,mut _2: f64) -> u64 {
mir! {
type RET = u64;
let _3: char;
let _4: [isize; 5];
let _5: Adt51;
let _6: u128;
let _7: Adt52;
let _8: char;
let _9: [u128; 1];
let _10: Adt58;
let _11: u128;
let _12: [i64; 8];
let _13: *const [isize; 5];
let _14: [u128; 4];
let _15: f32;
let _16: char;
let _17: bool;
let _18: isize;
let _19: Adt54;
let _20: (i64, [isize; 5], i16);
let _21: (char, [u128; 8]);
let _22: f64;
let _23: [usize; 2];
let _24: [u128; 8];
let _25: [u32; 6];
let _26: isize;
let _27: u32;
let _28: ();
let _29: ();
{
RET = 2979919698340484795_u64 ^ 17053847253855023250_u64;
(*_1) = 264447335943079312179333040648421343536_u128 as i16;
_2 = 1345091534_u32 as f64;
(*_1) = !(-4594_i16);
RET = 15808685820140790122_u64;
_2 = 178138953701854497644969201226970461325_u128 as f64;
RET = 2227748221632032558_u64;
_1 = core::ptr::addr_of_mut!((*_1));
RET = !5462064651020977370_u64;
_3 = '\u{6eb82}';
_3 = '\u{fb44d}';
_2 = 3980241485812665650027533559985424956_u128 as f64;
_2 = 4021010700_u32 as f64;
_3 = '\u{3a709}';
RET = !14458593310463144464_u64;
_2 = 2698256621_u32 as f64;
_5.fld0.2 = 2_usize | 10123942130821742670_usize;
_5.fld0.0 = core::ptr::addr_of!(_3);
(*_1) = 9620_i16 << _5.fld0.2;
_5.fld2 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1)];
_5.fld2 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1)];
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb1)
}
bb1 = {
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5.fld0.2 = 2_usize >> (*_1);
_5.fld0.3 = [115_i8,(-55_i8)];
_5.fld3 = -(-101_i8);
_5.fld0.1 = 231_u8;
RET = 8972759242076023709_u64 << _5.fld0.2;
_5.fld2 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1)];
_3 = '\u{c2254}';
_5.fld0.3 = [_5.fld3,_5.fld3];
_5.fld0.2 = 0_usize - 8862349594156581585_usize;
RET = 6955834458213699192_u64 * 5139115068397058781_u64;
RET = !17152500268182541628_u64;
_7.fld4.0 = core::ptr::addr_of!(_3);
_7.fld4.0 = core::ptr::addr_of!(_3);
RET = !500523062603415458_u64;
Call(_7.fld4 = fn11(_5.fld0.1, _5.fld3, _3, _1, _5.fld3, _4, (*_1), (*_1)), bb2, UnwindUnreachable())
}
bb2 = {
RET = 9312459003748108065_u64;
_7.fld1.0 = !(-2823697643257215460_i64);
_7.fld1.0 = (-7333232301302579800_i64) ^ 5042070011556415505_i64;
_7.fld5 = 3714936903_u32 as u8;
_7.fld4 = (_5.fld0.0,);
_10.fld3.3.0 = [1539140852_u32,357150935_u32,3602836723_u32,2873962788_u32,2590770608_u32,4135507676_u32];
_1 = core::ptr::addr_of_mut!((*_1));
_7.fld1 = ((-6746129835100390295_i64), _4, (*_1));
_3 = '\u{54312}';
_10.fld0 = !false;
_10.fld4 = _10.fld0 as u16;
_10.fld3.2.1 = (3286631458_u32, _3);
_10.fld3.0 = core::ptr::addr_of_mut!(_5.fld0.3);
_7.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_9 = [307241184727897620582444434715305203117_u128];
match _7.fld1.0 {
340282366920938463456628477596667821161 => bb3,
_ => bb1
}
}
bb3 = {
_5.fld4 = [73181533624133192467795561532013593185_u128,78712086619683029047267008490631228050_u128,201922268657314431533563359074176995900_u128,237114782313279936198225043529646756594_u128,161080655963241545198778709416681117325_u128,221846290222436446693704411974411635183_u128,26241297879213068551015403953520498297_u128,193048238247629899691172437158137254503_u128];
_10.fld3.3.0 = [_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0];
_7.fld3 = _5.fld3 as u64;
_7.fld1.1 = [(-75_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10.fld3.1 = !255682707907713505809466562006461422083_u128;
_8 = _3;
_10.fld0 = true & true;
_10.fld3.2.1.0 = _7.fld1.0 as u32;
_5.fld1 = !_5.fld0.2;
_10.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_5.fld0.2 = _5.fld1 * _5.fld1;
_10.fld1 = -_2;
_10.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_10.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_7.fld4.0 = core::ptr::addr_of!(_3);
_10.fld3.3.0 = [_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0];
_10.fld1 = _2 + _2;
(*_1) = -_7.fld1.2;
_10.fld3.1 = 1342750485_i32 as u128;
_5.fld0.3 = [_5.fld3,_5.fld3];
(*_1) = !_7.fld1.2;
_1 = core::ptr::addr_of_mut!((*_1));
match _5.fld0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
231 => bb8,
_ => bb7
}
}
bb4 = {
RET = 9312459003748108065_u64;
_7.fld1.0 = !(-2823697643257215460_i64);
_7.fld1.0 = (-7333232301302579800_i64) ^ 5042070011556415505_i64;
_7.fld5 = 3714936903_u32 as u8;
_7.fld4 = (_5.fld0.0,);
_10.fld3.3.0 = [1539140852_u32,357150935_u32,3602836723_u32,2873962788_u32,2590770608_u32,4135507676_u32];
_1 = core::ptr::addr_of_mut!((*_1));
_7.fld1 = ((-6746129835100390295_i64), _4, (*_1));
_3 = '\u{54312}';
_10.fld0 = !false;
_10.fld4 = _10.fld0 as u16;
_10.fld3.2.1 = (3286631458_u32, _3);
_10.fld3.0 = core::ptr::addr_of_mut!(_5.fld0.3);
_7.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_9 = [307241184727897620582444434715305203117_u128];
match _7.fld1.0 {
340282366920938463456628477596667821161 => bb3,
_ => bb1
}
}
bb5 = {
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5.fld0.2 = 2_usize >> (*_1);
_5.fld0.3 = [115_i8,(-55_i8)];
_5.fld3 = -(-101_i8);
_5.fld0.1 = 231_u8;
RET = 8972759242076023709_u64 << _5.fld0.2;
_5.fld2 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1)];
_3 = '\u{c2254}';
_5.fld0.3 = [_5.fld3,_5.fld3];
_5.fld0.2 = 0_usize - 8862349594156581585_usize;
RET = 6955834458213699192_u64 * 5139115068397058781_u64;
RET = !17152500268182541628_u64;
_7.fld4.0 = core::ptr::addr_of!(_3);
_7.fld4.0 = core::ptr::addr_of!(_3);
RET = !500523062603415458_u64;
Call(_7.fld4 = fn11(_5.fld0.1, _5.fld3, _3, _1, _5.fld3, _4, (*_1), (*_1)), bb2, UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_7.fld1.0 = !7108205313881946499_i64;
_9 = [_10.fld3.1];
_7.fld4 = (_5.fld0.0,);
RET = _10.fld3.2.1.0 as u64;
_11 = _10.fld3.1;
_5.fld0.3 = [_5.fld3,_5.fld3];
_7.fld1.1 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
(*_1) = _7.fld1.2;
_10.fld3.2.1.1 = _8;
(*_1) = -_7.fld1.2;
_8 = _10.fld3.2.1.1;
_12 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_8 = _3;
_10.fld3.0 = core::ptr::addr_of_mut!(_5.fld0.3);
_6 = _11;
_7.fld1.2 = (*_1);
_7.fld4.0 = core::ptr::addr_of!(_16);
_10.fld3.2.1.0 = !437470413_u32;
_18 = (-9223372036854775808_isize);
_10.fld3.2.1.0 = _5.fld0.1 as u32;
_7.fld4.0 = core::ptr::addr_of!(_10.fld3.2.1.1);
match _5.fld0.1 {
0 => bb2,
231 => bb10,
_ => bb9
}
}
bb9 = {
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5.fld0.2 = 2_usize >> (*_1);
_5.fld0.3 = [115_i8,(-55_i8)];
_5.fld3 = -(-101_i8);
_5.fld0.1 = 231_u8;
RET = 8972759242076023709_u64 << _5.fld0.2;
_5.fld2 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1)];
_3 = '\u{c2254}';
_5.fld0.3 = [_5.fld3,_5.fld3];
_5.fld0.2 = 0_usize - 8862349594156581585_usize;
RET = 6955834458213699192_u64 * 5139115068397058781_u64;
RET = !17152500268182541628_u64;
_7.fld4.0 = core::ptr::addr_of!(_3);
_7.fld4.0 = core::ptr::addr_of!(_3);
RET = !500523062603415458_u64;
Call(_7.fld4 = fn11(_5.fld0.1, _5.fld3, _3, _1, _5.fld3, _4, (*_1), (*_1)), bb2, UnwindUnreachable())
}
bb10 = {
_10.fld4 = _5.fld3 as u16;
_10.fld4 = 37068_u16;
_19.fld2.2 = _7.fld1.2;
_19.fld0.fld3.fld1 = _8;
_17 = _10.fld0 ^ _10.fld0;
_11 = _10.fld3.1;
_19.fld0.fld0 = 125447839844347510536402676578500888458_i128;
_19.fld0.fld1 = !_7.fld1.0;
_7.fld3 = 9291392346001662623_u64 >> _5.fld3;
_19.fld0.fld3.fld4 = core::ptr::addr_of!(_17);
_7.fld1.2 = -(*_1);
_19.fld0.fld3.fld0 = (_8, _5.fld4);
_5.fld0.0 = core::ptr::addr_of!(_16);
_19.fld0.fld3.fld3 = [_19.fld0.fld0,_19.fld0.fld0,_19.fld0.fld0,_19.fld0.fld0];
_20.0 = !_7.fld1.0;
_19.fld0.fld3.fld0.1 = [_10.fld3.1,_11,_10.fld3.1,_10.fld3.1,_10.fld3.1,_6,_6,_6];
_10.fld3.2.1 = (3821372698_u32, _19.fld0.fld3.fld0.0);
_7.fld1.1 = [_18,_18,_18,_18,_18];
_19.fld2.0 = _5.fld3 as i64;
_5.fld3 = (-57_i8) | 22_i8;
_20 = (_19.fld2.0, _4, (*_1));
_19.fld0.fld1 = !_19.fld2.0;
_10.fld3.2.1 = (111017231_u32, _19.fld0.fld3.fld0.0);
_13 = core::ptr::addr_of!(_19.fld2.1);
_14 = [_6,_10.fld3.1,_6,_10.fld3.1];
_19.fld0.fld3.fld0.0 = _3;
_2 = _10.fld3.2.1.0 as f64;
Call(_5.fld3 = core::intrinsics::bswap(95_i8), bb11, UnwindUnreachable())
}
bb11 = {
_4 = _20.1;
_19.fld0.fld3.fld2 = core::ptr::addr_of_mut!(_19.fld0.fld4);
_21.1 = _5.fld4;
_10.fld2 = [_19.fld0.fld1,_19.fld2.0,_19.fld2.0,_20.0,_20.0,_19.fld2.0,_20.0,_7.fld1.0];
(*_1) = _19.fld2.2 ^ _7.fld1.2;
_19.fld1 = [_19.fld0.fld1,_19.fld0.fld1,_20.0,_7.fld1.0,_19.fld0.fld1,_19.fld2.0,_7.fld1.0,_7.fld1.0];
_19.fld0.fld3.fld3 = [_19.fld0.fld0,_19.fld0.fld0,_19.fld0.fld0,_19.fld0.fld0];
_7.fld4.0 = core::ptr::addr_of!(_10.fld3.2.1.1);
(*_1) = _5.fld0.1 as i16;
_18 = 121_isize;
(*_1) = -_20.2;
_7.fld1.0 = _5.fld3 as i64;
(*_1) = _20.2;
_5.fld0.3 = [_5.fld3,_5.fld3];
_19.fld0.fld2 = _7.fld4.0;
_23 = [_5.fld0.2,_5.fld1];
_19.fld2 = _20;
_19.fld0.fld3.fld1 = _3;
_19.fld0.fld4 = !(*_1);
_18 = !(-9223372036854775808_isize);
_16 = _19.fld0.fld3.fld0.0;
_5.fld0.0 = _19.fld0.fld2;
_7.fld0 = _17;
_10.fld3.2.1.0 = _18 as u32;
_25 = [_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0];
_5.fld4 = _21.1;
_10.fld3.2.0 = [_5.fld0.1];
match _5.fld0.1 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
231 => bb20,
_ => bb19
}
}
bb12 = {
_10.fld4 = _5.fld3 as u16;
_10.fld4 = 37068_u16;
_19.fld2.2 = _7.fld1.2;
_19.fld0.fld3.fld1 = _8;
_17 = _10.fld0 ^ _10.fld0;
_11 = _10.fld3.1;
_19.fld0.fld0 = 125447839844347510536402676578500888458_i128;
_19.fld0.fld1 = !_7.fld1.0;
_7.fld3 = 9291392346001662623_u64 >> _5.fld3;
_19.fld0.fld3.fld4 = core::ptr::addr_of!(_17);
_7.fld1.2 = -(*_1);
_19.fld0.fld3.fld0 = (_8, _5.fld4);
_5.fld0.0 = core::ptr::addr_of!(_16);
_19.fld0.fld3.fld3 = [_19.fld0.fld0,_19.fld0.fld0,_19.fld0.fld0,_19.fld0.fld0];
_20.0 = !_7.fld1.0;
_19.fld0.fld3.fld0.1 = [_10.fld3.1,_11,_10.fld3.1,_10.fld3.1,_10.fld3.1,_6,_6,_6];
_10.fld3.2.1 = (3821372698_u32, _19.fld0.fld3.fld0.0);
_7.fld1.1 = [_18,_18,_18,_18,_18];
_19.fld2.0 = _5.fld3 as i64;
_5.fld3 = (-57_i8) | 22_i8;
_20 = (_19.fld2.0, _4, (*_1));
_19.fld0.fld1 = !_19.fld2.0;
_10.fld3.2.1 = (111017231_u32, _19.fld0.fld3.fld0.0);
_13 = core::ptr::addr_of!(_19.fld2.1);
_14 = [_6,_10.fld3.1,_6,_10.fld3.1];
_19.fld0.fld3.fld0.0 = _3;
_2 = _10.fld3.2.1.0 as f64;
Call(_5.fld3 = core::intrinsics::bswap(95_i8), bb11, UnwindUnreachable())
}
bb13 = {
RET = 9312459003748108065_u64;
_7.fld1.0 = !(-2823697643257215460_i64);
_7.fld1.0 = (-7333232301302579800_i64) ^ 5042070011556415505_i64;
_7.fld5 = 3714936903_u32 as u8;
_7.fld4 = (_5.fld0.0,);
_10.fld3.3.0 = [1539140852_u32,357150935_u32,3602836723_u32,2873962788_u32,2590770608_u32,4135507676_u32];
_1 = core::ptr::addr_of_mut!((*_1));
_7.fld1 = ((-6746129835100390295_i64), _4, (*_1));
_3 = '\u{54312}';
_10.fld0 = !false;
_10.fld4 = _10.fld0 as u16;
_10.fld3.2.1 = (3286631458_u32, _3);
_10.fld3.0 = core::ptr::addr_of_mut!(_5.fld0.3);
_7.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_9 = [307241184727897620582444434715305203117_u128];
match _7.fld1.0 {
340282366920938463456628477596667821161 => bb3,
_ => bb1
}
}
bb14 = {
_7.fld1.0 = !7108205313881946499_i64;
_9 = [_10.fld3.1];
_7.fld4 = (_5.fld0.0,);
RET = _10.fld3.2.1.0 as u64;
_11 = _10.fld3.1;
_5.fld0.3 = [_5.fld3,_5.fld3];
_7.fld1.1 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
(*_1) = _7.fld1.2;
_10.fld3.2.1.1 = _8;
(*_1) = -_7.fld1.2;
_8 = _10.fld3.2.1.1;
_12 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_8 = _3;
_10.fld3.0 = core::ptr::addr_of_mut!(_5.fld0.3);
_6 = _11;
_7.fld1.2 = (*_1);
_7.fld4.0 = core::ptr::addr_of!(_16);
_10.fld3.2.1.0 = !437470413_u32;
_18 = (-9223372036854775808_isize);
_10.fld3.2.1.0 = _5.fld0.1 as u32;
_7.fld4.0 = core::ptr::addr_of!(_10.fld3.2.1.1);
match _5.fld0.1 {
0 => bb2,
231 => bb10,
_ => bb9
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_4 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_5.fld0.2 = 2_usize >> (*_1);
_5.fld0.3 = [115_i8,(-55_i8)];
_5.fld3 = -(-101_i8);
_5.fld0.1 = 231_u8;
RET = 8972759242076023709_u64 << _5.fld0.2;
_5.fld2 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1)];
_3 = '\u{c2254}';
_5.fld0.3 = [_5.fld3,_5.fld3];
_5.fld0.2 = 0_usize - 8862349594156581585_usize;
RET = 6955834458213699192_u64 * 5139115068397058781_u64;
RET = !17152500268182541628_u64;
_7.fld4.0 = core::ptr::addr_of!(_3);
_7.fld4.0 = core::ptr::addr_of!(_3);
RET = !500523062603415458_u64;
Call(_7.fld4 = fn11(_5.fld0.1, _5.fld3, _3, _1, _5.fld3, _4, (*_1), (*_1)), bb2, UnwindUnreachable())
}
bb18 = {
RET = 9312459003748108065_u64;
_7.fld1.0 = !(-2823697643257215460_i64);
_7.fld1.0 = (-7333232301302579800_i64) ^ 5042070011556415505_i64;
_7.fld5 = 3714936903_u32 as u8;
_7.fld4 = (_5.fld0.0,);
_10.fld3.3.0 = [1539140852_u32,357150935_u32,3602836723_u32,2873962788_u32,2590770608_u32,4135507676_u32];
_1 = core::ptr::addr_of_mut!((*_1));
_7.fld1 = ((-6746129835100390295_i64), _4, (*_1));
_3 = '\u{54312}';
_10.fld0 = !false;
_10.fld4 = _10.fld0 as u16;
_10.fld3.2.1 = (3286631458_u32, _3);
_10.fld3.0 = core::ptr::addr_of_mut!(_5.fld0.3);
_7.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_9 = [307241184727897620582444434715305203117_u128];
match _7.fld1.0 {
340282366920938463456628477596667821161 => bb3,
_ => bb1
}
}
bb19 = {
_5.fld4 = [73181533624133192467795561532013593185_u128,78712086619683029047267008490631228050_u128,201922268657314431533563359074176995900_u128,237114782313279936198225043529646756594_u128,161080655963241545198778709416681117325_u128,221846290222436446693704411974411635183_u128,26241297879213068551015403953520498297_u128,193048238247629899691172437158137254503_u128];
_10.fld3.3.0 = [_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0];
_7.fld3 = _5.fld3 as u64;
_7.fld1.1 = [(-75_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10.fld3.1 = !255682707907713505809466562006461422083_u128;
_8 = _3;
_10.fld0 = true & true;
_10.fld3.2.1.0 = _7.fld1.0 as u32;
_5.fld1 = !_5.fld0.2;
_10.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_5.fld0.2 = _5.fld1 * _5.fld1;
_10.fld1 = -_2;
_10.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_10.fld2 = [_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0,_7.fld1.0];
_7.fld4.0 = core::ptr::addr_of!(_3);
_10.fld3.3.0 = [_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0,_10.fld3.2.1.0];
_10.fld1 = _2 + _2;
(*_1) = -_7.fld1.2;
_10.fld3.1 = 1342750485_i32 as u128;
_5.fld0.3 = [_5.fld3,_5.fld3];
(*_1) = !_7.fld1.2;
_1 = core::ptr::addr_of_mut!((*_1));
match _5.fld0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
231 => bb8,
_ => bb7
}
}
bb20 = {
_5.fld4 = [_10.fld3.1,_11,_10.fld3.1,_11,_10.fld3.1,_11,_6,_6];
_15 = _19.fld0.fld0 as f32;
_19.fld0.fld0 = _5.fld0.2 as i128;
_10.fld1 = _2 - _2;
_10.fld1 = _2;
Goto(bb21)
}
bb21 = {
Call(_28 = dump_var(10_usize, 11_usize, Move(_11), 17_usize, Move(_17), 3_usize, Move(_3), 4_usize, Move(_4)), bb22, UnwindUnreachable())
}
bb22 = {
Call(_28 = dump_var(10_usize, 14_usize, Move(_14), 18_usize, Move(_18), 25_usize, Move(_25), 29_usize, _29), bb23, UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: u8,mut _2: i8,mut _3: char,mut _4: *mut i16,mut _5: i8,mut _6: [isize; 5],mut _7: i16,mut _8: i16) -> (*const char,) {
mir! {
type RET = (*const char,);
let _9: [i8; 2];
let _10: f32;
let _11: Adt52;
let _12: [i64; 8];
let _13: u64;
let _14: ([u32; 6],);
let _15: f64;
let _16: [isize; 5];
let _17: bool;
let _18: [isize; 5];
let _19: ();
let _20: ();
{
RET.0 = core::ptr::addr_of!(_3);
Call(RET.0 = fn12(_6, _2, _4, (*_4), _6, _4, _4, _2, _1, _4, _6, _7, _5, _8), bb1, UnwindUnreachable())
}
bb1 = {
_9 = [_5,_2];
RET.0 = core::ptr::addr_of!(_3);
_2 = !_5;
_7 = 9223372036854775807_isize as i16;
(*_4) = _8 << _2;
(*_4) = _1 as i16;
_4 = core::ptr::addr_of_mut!(_8);
_5 = _2 * _2;
_4 = core::ptr::addr_of_mut!(_8);
RET.0 = core::ptr::addr_of!(_3);
_8 = _7;
_3 = '\u{33174}';
_5 = _2 | _2;
_6 = [9223372036854775807_isize,108_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
(*_4) = !_7;
_2 = _5;
(*_4) = -_7;
_4 = core::ptr::addr_of_mut!(_8);
_5 = !_2;
(*_4) = !_7;
_2 = _5;
_3 = '\u{d015b}';
_1 = 9223372036854775807_isize as u8;
Goto(bb2)
}
bb2 = {
_9 = [_2,_2];
_1 = 137_u8 & 189_u8;
RET.0 = core::ptr::addr_of!(_3);
RET.0 = core::ptr::addr_of!(_3);
_1 = 214_u8 % 166_u8;
_5 = _2;
_3 = '\u{8d5b3}';
_5 = true as i8;
_6 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-18_isize),(-9223372036854775808_isize),(-95_isize)];
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb3)
}
bb3 = {
_9 = [_5,_5];
_7 = (*_4);
_7 = -_8;
_3 = '\u{581e3}';
_8 = _7 >> _5;
_7 = (*_4);
_1 = 1493096415_u32 as u8;
_5 = _2 << _8;
(*_4) = _7 | _7;
_11.fld3 = 12335402979659036646_u64;
_11.fld1.1 = _6;
_9 = [_5,_5];
_11.fld1 = (1742152615010817433_i64, _6, (*_4));
_11.fld1.2 = 120409696286919435053429746565544000126_i128 as i16;
(*_4) = _11.fld1.2 + _7;
_10 = 57399321417882763399438279640762962774_i128 as f32;
_11.fld0 = _11.fld1.0 > _11.fld1.0;
_11.fld1 = (8921338581708903987_i64, _6, _7);
_11.fld1.1 = [(-112_isize),(-9223372036854775808_isize),9223372036854775807_isize,104_isize,9223372036854775807_isize];
_1 = 255_u8;
match _11.fld1.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
8921338581708903987 => bb11,
_ => bb10
}
}
bb4 = {
_9 = [_2,_2];
_1 = 137_u8 & 189_u8;
RET.0 = core::ptr::addr_of!(_3);
RET.0 = core::ptr::addr_of!(_3);
_1 = 214_u8 % 166_u8;
_5 = _2;
_3 = '\u{8d5b3}';
_5 = true as i8;
_6 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-18_isize),(-9223372036854775808_isize),(-95_isize)];
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb3)
}
bb5 = {
_9 = [_5,_2];
RET.0 = core::ptr::addr_of!(_3);
_2 = !_5;
_7 = 9223372036854775807_isize as i16;
(*_4) = _8 << _2;
(*_4) = _1 as i16;
_4 = core::ptr::addr_of_mut!(_8);
_5 = _2 * _2;
_4 = core::ptr::addr_of_mut!(_8);
RET.0 = core::ptr::addr_of!(_3);
_8 = _7;
_3 = '\u{33174}';
_5 = _2 | _2;
_6 = [9223372036854775807_isize,108_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
(*_4) = !_7;
_2 = _5;
(*_4) = -_7;
_4 = core::ptr::addr_of_mut!(_8);
_5 = !_2;
(*_4) = !_7;
_2 = _5;
_3 = '\u{d015b}';
_1 = 9223372036854775807_isize as u8;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_11.fld1.2 = _8 - _8;
_11.fld1.0 = 7659466362052337729_i64;
_12 = [_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0];
match _11.fld1.0 {
0 => bb6,
1 => bb7,
2 => bb12,
3 => bb13,
7659466362052337729 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
_9 = [_2,_2];
_1 = 137_u8 & 189_u8;
RET.0 = core::ptr::addr_of!(_3);
RET.0 = core::ptr::addr_of!(_3);
_1 = 214_u8 % 166_u8;
_5 = _2;
_3 = '\u{8d5b3}';
_5 = true as i8;
_6 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-18_isize),(-9223372036854775808_isize),(-95_isize)];
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb3)
}
bb14 = {
Return()
}
bb15 = {
_14.0 = [3139032883_u32,1519412977_u32,1751899808_u32,1796010158_u32,1046003162_u32,4155656730_u32];
_1 = 2987338379_u32 as u8;
(*_4) = _11.fld1.2 << _1;
_12 = [_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0,_11.fld1.0];
_11.fld0 = true;
RET.0 = core::ptr::addr_of!(_3);
_6 = [9223372036854775807_isize,68_isize,(-9223372036854775808_isize),112_isize,9223372036854775807_isize];
_11.fld3 = 10821530109839906363_u64 / 7671441444261092868_u64;
_11.fld4.0 = core::ptr::addr_of!(_3);
_9 = [_5,_5];
(*_4) = _2 as i16;
_16 = _6;
_17 = !_11.fld0;
_18 = [9223372036854775807_isize,(-9223372036854775808_isize),(-45_isize),40_isize,9223372036854775807_isize];
_5 = _11.fld1.2 as i8;
_8 = _11.fld1.2 | _7;
_11.fld0 = !_17;
_11.fld1.2 = (*_4);
_18 = [(-9223372036854775808_isize),109_isize,(-40_isize),61_isize,(-9223372036854775808_isize)];
Goto(bb16)
}
bb16 = {
Call(_19 = dump_var(11_usize, 6_usize, Move(_6), 8_usize, Move(_8), 5_usize, Move(_5), 16_usize, Move(_16)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_19 = dump_var(11_usize, 2_usize, Move(_2), 14_usize, Move(_14), 20_usize, _20, 20_usize, _20), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [isize; 5],mut _2: i8,mut _3: *mut i16,mut _4: i16,mut _5: [isize; 5],mut _6: *mut i16,mut _7: *mut i16,mut _8: i8,mut _9: u8,mut _10: *mut i16,mut _11: [isize; 5],mut _12: i16,mut _13: i8,mut _14: i16) -> *const char {
mir! {
type RET = *const char;
let _15: Adt60;
let _16: u32;
let _17: f32;
let _18: *const (u32, char);
let _19: bool;
let _20: [i16; 5];
let _21: (*mut [i8; 2], u128, ([u8; 1], (u32, char)), ([u32; 6],));
let _22: i64;
let _23: i64;
let _24: ([u8; 1], (u32, char));
let _25: isize;
let _26: [isize; 5];
let _27: f64;
let _28: [u32; 6];
let _29: i32;
let _30: f32;
let _31: [u8; 1];
let _32: usize;
let _33: [i16; 5];
let _34: (i64, [isize; 5], i16);
let _35: u64;
let _36: usize;
let _37: (u32, char);
let _38: [u128; 4];
let _39: ();
let _40: ();
{
(*_7) = _4 >> _12;
_11 = [9223372036854775807_isize,9223372036854775807_isize,96_isize,9223372036854775807_isize,83_isize];
(*_10) = !_12;
_4 = (*_6) * (*_6);
_1 = _11;
_14 = '\u{4557e}' as i16;
_14 = (*_10);
_8 = _2;
_15.fld1.fld0.2.1.1 = '\u{519d7}';
_15.fld2.fld6.fld0.1 = _2 as u8;
_15.fld2.fld6.fld0.0 = core::ptr::addr_of!(_15.fld1.fld0.2.1.1);
_15.fld2.fld5 = -(-2143057420_i32);
_15.fld2.fld0 = 36335_u16 as f32;
_15.fld1.fld5.fld0.1 = _15.fld2.fld6.fld0.1 << _12;
_15.fld1.fld5.fld0.0 = core::ptr::addr_of!(_15.fld1.fld0.2.1.1);
_15.fld2.fld6.fld0.1 = !_15.fld1.fld5.fld0.1;
_15.fld1.fld0.2.1.1 = '\u{89c51}';
_9 = !_15.fld1.fld5.fld0.1;
Goto(bb1)
}
bb1 = {
_15.fld1.fld0.1 = 187618282272997098229521528591148819756_u128;
_9 = _15.fld2.fld6.fld0.1 * _15.fld1.fld5.fld0.1;
_15.fld1.fld5.fld1 = 16270107040924825322_u64 as usize;
_15.fld1.fld1 = [3194163174_u32,1373711134_u32,3087846748_u32,2991184724_u32,2608370670_u32,3650387097_u32];
_15.fld1.fld0.3.0 = [1377187367_u32,1006828616_u32,2532448183_u32,2914298919_u32,1986999469_u32,334844410_u32];
(*_6) = !_4;
_16 = _15.fld2.fld6.fld0.1 as u32;
_15.fld1.fld5.fld0.2 = _15.fld1.fld5.fld1 / 1_usize;
(*_7) = _4;
_17 = _15.fld2.fld0;
_15.fld1.fld3 = (_15.fld2.fld6.fld0.0,);
_15.fld1.fld5.fld0.2 = _15.fld1.fld5.fld1 << _9;
match _15.fld1.fld0.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
187618282272997098229521528591148819756 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_15.fld2.fld6.fld0.3 = [_13,_2];
_15.fld1.fld0.2.1.1 = '\u{1a44b}';
_15.fld2.fld6.fld3 = _16 as i8;
_15.fld1.fld5.fld4 = [_15.fld1.fld0.1,_15.fld1.fld0.1,_15.fld1.fld0.1,_15.fld1.fld0.1,_15.fld1.fld0.1,_15.fld1.fld0.1,_15.fld1.fld0.1,_15.fld1.fld0.1];
_15.fld1.fld0.0 = core::ptr::addr_of_mut!(_15.fld2.fld6.fld0.3);
Goto(bb11)
}
bb11 = {
_15.fld1.fld5.fld1 = _15.fld1.fld5.fld0.2;
_10 = _6;
_15.fld1.fld5.fld0.3 = [_15.fld2.fld6.fld3,_15.fld2.fld6.fld3];
_22 = (-3210992760866062878_i64);
_2 = _15.fld2.fld6.fld3 * _8;
(*_7) = 18061107786361360322_u64 as i16;
_15.fld1.fld0.3 = (_15.fld1.fld1,);
_19 = true;
_25 = _12 as isize;
_15.fld2.fld6.fld0.1 = !_15.fld1.fld5.fld0.1;
_15.fld2.fld6.fld0.0 = core::ptr::addr_of!(_15.fld1.fld0.2.1.1);
_15.fld2.fld6.fld1 = _15.fld1.fld5.fld1 & _15.fld1.fld5.fld0.2;
_15.fld2.fld7 = core::ptr::addr_of_mut!((*_3));
_21.2.1 = (_16, _15.fld1.fld0.2.1.1);
_14 = _25 as i16;
_15.fld1.fld0.2.0 = [_15.fld2.fld6.fld0.1];
RET = core::ptr::addr_of!(_15.fld1.fld0.2.1.1);
_24 = (_15.fld1.fld0.2.0, _21.2.1);
_18 = core::ptr::addr_of!(_24.1);
_15.fld1.fld5.fld0.3 = _15.fld2.fld6.fld0.3;
_15.fld2.fld7 = core::ptr::addr_of_mut!((*_3));
_16 = _15.fld2.fld0 as u32;
_15.fld2.fld6.fld4 = _15.fld1.fld5.fld4;
_26 = _1;
_9 = _19 as u8;
_15.fld1.fld0.2.0 = [_15.fld2.fld6.fld0.1];
Goto(bb12)
}
bb12 = {
_15.fld2.fld1 = core::ptr::addr_of!((*RET));
(*_3) = _14 * _14;
_21.2.0 = _15.fld1.fld0.2.0;
_15.fld1.fld0.2.1.0 = (*_18).0 / 1746468551_u32;
_15.fld1.fld5.fld0.1 = !_15.fld2.fld6.fld0.1;
_15.fld2.fld6.fld0.3 = [_2,_15.fld2.fld6.fld3];
_17 = _15.fld2.fld0 - _15.fld2.fld0;
(*RET) = (*_18).1;
_11 = [_25,_25,_25,_25,_25];
_15.fld1.fld0.2.1 = (_24.1.0, _24.1.1);
_15.fld2.fld6.fld2 = [(*_7),(*_10),(*_6),(*_3),(*_10),_12];
_15.fld1.fld0.2.0 = [_15.fld2.fld6.fld0.1];
(*_18) = (_21.2.1.0, (*RET));
_6 = core::ptr::addr_of_mut!((*_3));
match _22 {
0 => bb8,
1 => bb2,
2 => bb10,
3 => bb11,
340282366920938463460163614670902148578 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
_34.1 = [_25,_25,_25,_25,_25];
_9 = !_15.fld2.fld6.fld0.1;
_15.fld2.fld6.fld2 = [(*_3),(*_7),_4,(*_7),(*_3),(*_10)];
(*_18) = _15.fld1.fld0.2.1;
_20 = [(*_6),(*_7),(*_7),(*_10),(*_7)];
_9 = _15.fld2.fld6.fld0.1 + _15.fld1.fld5.fld0.1;
_35 = 15429607588285395360_u64 >> (*_10);
_33 = _20;
_22 = 3217214526767234447_i64;
_15.fld2.fld6.fld1 = _15.fld1.fld5.fld1 | _15.fld1.fld5.fld1;
_37.0 = !_15.fld1.fld0.2.1.0;
_15.fld2.fld6.fld0 = _15.fld1.fld5.fld0;
_15.fld1.fld5.fld3 = _15.fld2.fld6.fld3 * _15.fld2.fld6.fld3;
_24 = _21.2;
_15.fld2.fld0 = _17 + _17;
_18 = core::ptr::addr_of!((*_18));
_21.0 = core::ptr::addr_of_mut!(_15.fld1.fld5.fld0.3);
_34.2 = _15.fld2.fld5 as i16;
_15.fld2.fld4 = [_15.fld1.fld0.1];
_15.fld1.fld4 = core::ptr::addr_of_mut!(_14);
_15.fld2.fld6.fld4 = _15.fld1.fld5.fld4;
_15.fld1.fld5 = Adt51 { fld0: _15.fld2.fld6.fld0,fld1: _15.fld2.fld6.fld0.2,fld2: _15.fld2.fld6.fld2,fld3: _2,fld4: _15.fld2.fld6.fld4 };
_15.fld2.fld3 = [(*_18).0,_37.0,_15.fld1.fld0.2.1.0,_24.1.0,_21.2.1.0,_16];
_15.fld2.fld6.fld2 = [(*_10),(*_3),_14,(*_7),_12,_14];
_28 = _15.fld1.fld1;
_15.fld1.fld0.2 = (_24.0, _24.1);
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(12_usize, 19_usize, Move(_19), 26_usize, Move(_26), 22_usize, Move(_22), 35_usize, Move(_35)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(12_usize, 11_usize, Move(_11), 12_usize, Move(_12), 25_usize, Move(_25), 5_usize, Move(_5)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(12_usize, 28_usize, Move(_28), 24_usize, Move(_24), 40_usize, _40, 40_usize, _40), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: *mut [i8; 2],mut _2: [u32; 6],mut _3: *const char,mut _4: [isize; 5],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: [u8; 1],mut _8: *const char,mut _9: [i8; 2],mut _10: *mut [i8; 2],mut _11: char,mut _12: [u8; 1],mut _13: *mut [i8; 2]) -> usize {
mir! {
type RET = usize;
let _14: Adt63;
let _15: f64;
let _16: [u16; 4];
let _17: bool;
let _18: (u32, char);
let _19: (char, [u128; 8]);
let _20: *const [isize; 5];
let _21: i32;
let _22: i16;
let _23: u128;
let _24: i16;
let _25: isize;
let _26: *mut i16;
let _27: [usize; 2];
let _28: u64;
let _29: isize;
let _30: [u128; 8];
let _31: u8;
let _32: char;
let _33: [i16; 6];
let _34: [i16; 6];
let _35: *const char;
let _36: *const isize;
let _37: f64;
let _38: ();
let _39: ();
{
_2 = [2813881378_u32,4180222908_u32,1902547402_u32,3918356677_u32,4266557989_u32,2720207372_u32];
(*_3) = _11;
_8 = core::ptr::addr_of!((*_8));
_11 = (*_8);
_5 = [4136_i16,21503_i16,6914_i16,(-26868_i16),8077_i16,(-12060_i16)];
RET = 6_usize ^ 6_usize;
RET = 0_usize;
(*_1) = [_9[RET],_9[RET]];
(*_3) = _11;
_7[RET] = _12[RET];
_4 = [9223372036854775807_isize,50_isize,(-97_isize),103_isize,(-9223372036854775808_isize)];
Goto(bb1)
}
bb1 = {
(*_1)[RET] = _9[RET];
_7 = _12;
(*_10) = [_9[RET],_9[RET]];
_11 = (*_3);
_12[RET] = !_7[RET];
(*_10) = [_9[RET],_9[RET]];
_10 = core::ptr::addr_of_mut!((*_10));
_9 = [(*_1)[RET],(*_1)[RET]];
(*_13) = _9;
RET = 5_usize / 13284359665700783144_usize;
_14.fld2.fld2 = [47344804851177970895828033285655237856_i128,(-35867301303167285326246688964328365917_i128),57386713872955202099708970880552080351_i128,(-164915151268940443583458999502652632317_i128)];
_11 = (*_8);
_11 = (*_8);
(*_10) = [120_i8,18_i8];
Goto(bb2)
}
bb2 = {
_14.fld0 = (*_8) <= (*_8);
_11 = (*_8);
_7 = [46_u8];
_14.fld2.fld0.0 = _2;
_14.fld2.fld2 = [165455301810557571535672822117615297056_i128,140629056772775396354444817867550961310_i128,(-32371931496306713297726837792535797838_i128),(-109776388084967459445469412575807702520_i128)];
(*_13) = _9;
_7 = [243_u8];
(*_13) = [(-69_i8),(-118_i8)];
(*_8) = _11;
(*_3) = _11;
Goto(bb3)
}
bb3 = {
(*_13) = _9;
(*_13) = _9;
_14.fld2.fld0 = (_2,);
_2 = [2142934382_u32,3012548538_u32,752574763_u32,579173740_u32,1026071075_u32,1325961435_u32];
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-103_isize),127_isize,(-9223372036854775808_isize)];
_5 = [(-32010_i16),8368_i16,(-12906_i16),1215_i16,(-20000_i16),31959_i16];
RET = 5_usize;
(*_13) = [(-55_i8),(-90_i8)];
_9 = [24_i8,(-52_i8)];
_5[RET] = !_6[RET];
_6 = [_5[RET],_5[RET],_5[RET],_5[RET],_5[RET],_5[RET]];
_5 = [_6[RET],_6[RET],_6[RET],_6[RET],_6[RET],_6[RET]];
_4 = [7_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-36_isize)];
_14.fld1 = _14.fld2.fld2;
_14.fld2.fld1 = !5387557377807377840_u64;
(*_13) = [36_i8,(-35_i8)];
_17 = _14.fld2.fld0.0[RET] == _14.fld2.fld0.0[RET];
_17 = _14.fld0 ^ _14.fld0;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_18 = (_2[RET], (*_3));
_14.fld3 = core::ptr::addr_of!(_18);
RET = (-51546128085331320543539117567251648353_i128) as usize;
_5 = [(-2622_i16),4854_i16,(-25110_i16),21108_i16,(-19983_i16),(-11204_i16)];
Call(_12 = fn14((*_13), _8, (*_8), _14.fld3, (*_8)), bb4, UnwindUnreachable())
}
bb4 = {
_14.fld2.fld0.0 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
(*_10) = [102_i8,(-108_i8)];
_21 = 164640805980215191684031713158735442860_i128 as i32;
_1 = _13;
_16 = [30933_u16,54388_u16,64038_u16,5386_u16];
(*_1) = _9;
_23 = 112589039624932842485113939632608104554_u128;
Goto(bb5)
}
bb5 = {
(*_10) = [(-39_i8),9_i8];
_24 = 13387_i16 - (-31044_i16);
_19.1 = [_23,_23,_23,_23,_23,_23,_23,_23];
_3 = _8;
_14.fld2.fld0 = (_2,);
_7 = [41_u8];
_19.1 = [_23,_23,_23,_23,_23,_23,_23,_23];
match _23 {
0 => bb4,
1 => bb6,
2 => bb7,
3 => bb8,
112589039624932842485113939632608104554 => bb10,
_ => bb9
}
}
bb6 = {
_14.fld2.fld0.0 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
(*_10) = [102_i8,(-108_i8)];
_21 = 164640805980215191684031713158735442860_i128 as i32;
_1 = _13;
_16 = [30933_u16,54388_u16,64038_u16,5386_u16];
(*_1) = _9;
_23 = 112589039624932842485113939632608104554_u128;
Goto(bb5)
}
bb7 = {
(*_13) = _9;
(*_13) = _9;
_14.fld2.fld0 = (_2,);
_2 = [2142934382_u32,3012548538_u32,752574763_u32,579173740_u32,1026071075_u32,1325961435_u32];
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-103_isize),127_isize,(-9223372036854775808_isize)];
_5 = [(-32010_i16),8368_i16,(-12906_i16),1215_i16,(-20000_i16),31959_i16];
RET = 5_usize;
(*_13) = [(-55_i8),(-90_i8)];
_9 = [24_i8,(-52_i8)];
_5[RET] = !_6[RET];
_6 = [_5[RET],_5[RET],_5[RET],_5[RET],_5[RET],_5[RET]];
_5 = [_6[RET],_6[RET],_6[RET],_6[RET],_6[RET],_6[RET]];
_4 = [7_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-36_isize)];
_14.fld1 = _14.fld2.fld2;
_14.fld2.fld1 = !5387557377807377840_u64;
(*_13) = [36_i8,(-35_i8)];
_17 = _14.fld2.fld0.0[RET] == _14.fld2.fld0.0[RET];
_17 = _14.fld0 ^ _14.fld0;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_18 = (_2[RET], (*_3));
_14.fld3 = core::ptr::addr_of!(_18);
RET = (-51546128085331320543539117567251648353_i128) as usize;
_5 = [(-2622_i16),4854_i16,(-25110_i16),21108_i16,(-19983_i16),(-11204_i16)];
Call(_12 = fn14((*_13), _8, (*_8), _14.fld3, (*_8)), bb4, UnwindUnreachable())
}
bb8 = {
_14.fld0 = (*_8) <= (*_8);
_11 = (*_8);
_7 = [46_u8];
_14.fld2.fld0.0 = _2;
_14.fld2.fld2 = [165455301810557571535672822117615297056_i128,140629056772775396354444817867550961310_i128,(-32371931496306713297726837792535797838_i128),(-109776388084967459445469412575807702520_i128)];
(*_13) = _9;
_7 = [243_u8];
(*_13) = [(-69_i8),(-118_i8)];
(*_8) = _11;
(*_3) = _11;
Goto(bb3)
}
bb9 = {
(*_1)[RET] = _9[RET];
_7 = _12;
(*_10) = [_9[RET],_9[RET]];
_11 = (*_3);
_12[RET] = !_7[RET];
(*_10) = [_9[RET],_9[RET]];
_10 = core::ptr::addr_of_mut!((*_10));
_9 = [(*_1)[RET],(*_1)[RET]];
(*_13) = _9;
RET = 5_usize / 13284359665700783144_usize;
_14.fld2.fld2 = [47344804851177970895828033285655237856_i128,(-35867301303167285326246688964328365917_i128),57386713872955202099708970880552080351_i128,(-164915151268940443583458999502652632317_i128)];
_11 = (*_8);
_11 = (*_8);
(*_10) = [120_i8,18_i8];
Goto(bb2)
}
bb10 = {
_2 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
Goto(bb11)
}
bb11 = {
_15 = _18.0 as f64;
_14.fld2.fld0 = (_2,);
_19.0 = (*_8);
_8 = _3;
_23 = 80_isize as u128;
Goto(bb12)
}
bb12 = {
_9 = [(-38_i8),105_i8];
_14.fld2.fld1 = 12844135926582448828_u64;
(*_8) = _19.0;
RET = 1152108536623678249_usize;
(*_13) = [(-7_i8),(-102_i8)];
(*_8) = _19.0;
_20 = core::ptr::addr_of!(_4);
_3 = _8;
(*_10) = [91_i8,(-88_i8)];
_14.fld2.fld0.0 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_1 = core::ptr::addr_of_mut!((*_10));
(*_13) = [(-101_i8),121_i8];
_19.0 = (*_8);
_8 = core::ptr::addr_of!((*_8));
_3 = core::ptr::addr_of!((*_8));
_14.fld2.fld2 = [44759403677544950605262494762261330617_i128,61117624878592609967283339907717323859_i128,(-30429796205157037288798710567311241887_i128),145001302208483869050755451635459113276_i128];
_25 = 80_isize << _24;
_23 = _21 as u128;
Goto(bb13)
}
bb13 = {
(*_10) = [(-90_i8),28_i8];
RET = (-119_i8) as usize;
_9 = (*_10);
(*_13) = [(-87_i8),(-68_i8)];
(*_20) = [_25,_25,_25,_25,_25];
_35 = core::ptr::addr_of!(_19.0);
(*_1) = _9;
_14.fld0 = _17;
_30 = [_23,_23,_23,_23,_23,_23,_23,_23];
_26 = core::ptr::addr_of_mut!(_24);
_16 = [49937_u16,53166_u16,27739_u16,30794_u16];
_35 = core::ptr::addr_of!((*_3));
_27 = [16035447376095707503_usize,8828338790026249897_usize];
match _14.fld2.fld1 {
0 => bb11,
1 => bb14,
2 => bb15,
12844135926582448828 => bb17,
_ => bb16
}
}
bb14 = {
_9 = [(-38_i8),105_i8];
_14.fld2.fld1 = 12844135926582448828_u64;
(*_8) = _19.0;
RET = 1152108536623678249_usize;
(*_13) = [(-7_i8),(-102_i8)];
(*_8) = _19.0;
_20 = core::ptr::addr_of!(_4);
_3 = _8;
(*_10) = [91_i8,(-88_i8)];
_14.fld2.fld0.0 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_1 = core::ptr::addr_of_mut!((*_10));
(*_13) = [(-101_i8),121_i8];
_19.0 = (*_8);
_8 = core::ptr::addr_of!((*_8));
_3 = core::ptr::addr_of!((*_8));
_14.fld2.fld2 = [44759403677544950605262494762261330617_i128,61117624878592609967283339907717323859_i128,(-30429796205157037288798710567311241887_i128),145001302208483869050755451635459113276_i128];
_25 = 80_isize << _24;
_23 = _21 as u128;
Goto(bb13)
}
bb15 = {
_14.fld2.fld0.0 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
(*_10) = [102_i8,(-108_i8)];
_21 = 164640805980215191684031713158735442860_i128 as i32;
_1 = _13;
_16 = [30933_u16,54388_u16,64038_u16,5386_u16];
(*_1) = _9;
_23 = 112589039624932842485113939632608104554_u128;
Goto(bb5)
}
bb16 = {
_2 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
Goto(bb11)
}
bb17 = {
_28 = _14.fld2.fld1 * _14.fld2.fld1;
Goto(bb18)
}
bb18 = {
Call(_38 = dump_var(13_usize, 11_usize, Move(_11), 7_usize, Move(_7), 12_usize, Move(_12), 9_usize, Move(_9)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_38 = dump_var(13_usize, 24_usize, Move(_24), 19_usize, Move(_19), 16_usize, Move(_16), 27_usize, Move(_27)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_38 = dump_var(13_usize, 28_usize, Move(_28), 39_usize, _39, 39_usize, _39, 39_usize, _39), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: [i8; 2],mut _2: *const char,mut _3: char,mut _4: *const (u32, char),mut _5: char) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _6: [i16; 5];
let _7: [u128; 4];
let _8: usize;
let _9: usize;
let _10: [isize; 5];
let _11: char;
let _12: Adt62;
let _13: [u128; 8];
let _14: (char, i128, f64);
let _15: isize;
let _16: u8;
let _17: char;
let _18: i128;
let _19: (i64, [isize; 5], i16);
let _20: char;
let _21: f64;
let _22: ();
let _23: ();
{
(*_2) = _3;
_4 = core::ptr::addr_of!((*_4));
(*_4).1 = (*_2);
_3 = _5;
_4 = core::ptr::addr_of!((*_4));
_6 = [12583_i16,(-32403_i16),31834_i16,(-13598_i16),(-2320_i16)];
_1 = [42_i8,(-106_i8)];
(*_2) = (*_4).1;
RET = [238_u8];
(*_2) = _3;
(*_4) = (1115975959_u32, _3);
(*_4).1 = _3;
RET = [119_u8];
(*_4) = (2347858338_u32, (*_2));
(*_4).1 = _3;
(*_4).0 = !3436798893_u32;
(*_2) = (*_4).1;
(*_2) = (*_4).1;
_5 = _3;
(*_4) = (2819407479_u32, (*_2));
match (*_4).0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
2819407479 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
(*_4) = (1822359455_u32, _3);
RET = [79_u8];
_7 = [270008930951539415923823782825189392315_u128,163673162851434256370178708811388753126_u128,71767375511184026304609612190464195504_u128,102856248354745494582973549858643677453_u128];
(*_2) = (*_4).1;
_3 = (*_2);
_7 = [278965773789003538776138202441437328991_u128,143670274092878246364963068451203853465_u128,168422816249199654952789871973531904567_u128,156874404606556275627469295034454203848_u128];
_6 = [(-29340_i16),(-15432_i16),(-22399_i16),28663_i16,26066_i16];
(*_4).0 = !3539611058_u32;
Call((*_4).0 = core::intrinsics::transmute((*_2)), bb10, UnwindUnreachable())
}
bb10 = {
_2 = core::ptr::addr_of!((*_4).1);
(*_4) = (3625031420_u32, _5);
_6 = [25910_i16,24110_i16,19982_i16,(-1070_i16),12812_i16];
(*_4) = (740324532_u32, _3);
_8 = !18443099061143403676_usize;
(*_2) = _3;
_1 = [107_i8,9_i8];
_4 = core::ptr::addr_of!((*_4));
(*_4).0 = 2011399361_u32;
_2 = core::ptr::addr_of!(_5);
(*_4) = (3229257537_u32, (*_2));
_4 = core::ptr::addr_of!((*_4));
(*_4).0 = 2765_i16 as u32;
_8 = 1450_i16 as usize;
_10 = [80_isize,95_isize,38_isize,9223372036854775807_isize,9223372036854775807_isize];
(*_4) = (1774395161_u32, (*_2));
Goto(bb11)
}
bb11 = {
_9 = _8;
RET = [176_u8];
(*_2) = (*_4).1;
_10 = [(-9223372036854775808_isize),117_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
RET = [51_u8];
_4 = core::ptr::addr_of!((*_4));
_7 = [228143811640296833658733593844437621945_u128,217475793450995587201893737835153677389_u128,273660060023009465674229429212816503561_u128,183886871285958563662053194976199638599_u128];
_8 = !_9;
_7 = [281522646847050443616586709784567532266_u128,210550948980053042503308994142090818672_u128,33309269463411158568210397263667069924_u128,247407702007953751922628123676976898899_u128];
(*_4).1 = _3;
_12.fld4 = (-15774_i16);
_12.fld0.fld4 = 24358_u16;
_12.fld1.1 = [9223372036854775807_isize,(-9223372036854775808_isize),(-115_isize),(-9223372036854775808_isize),43_isize];
_10 = [(-9223372036854775808_isize),116_isize,50_isize,(-93_isize),(-9223372036854775808_isize)];
(*_4).0 = 1371600812_u32 << _9;
_12.fld5.fld1 = (*_4).1;
_1 = [71_i8,(-17_i8)];
_6 = [_12.fld4,_12.fld4,_12.fld4,_12.fld4,_12.fld4];
_12.fld5.fld4 = core::ptr::addr_of!(_12.fld0.fld0);
_12.fld2 = [_8,_8];
_10 = [9223372036854775807_isize,(-16_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
Goto(bb12)
}
bb12 = {
_10 = [9223372036854775807_isize,101_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
(*_2) = (*_4).1;
(*_4).1 = (*_2);
_12.fld0.fld3.2.1 = ((*_4).0, _5);
_17 = _12.fld0.fld3.2.1.1;
Call(_5 = fn15(_12.fld4, (*_4).0, _6, (*_4), _12.fld5.fld1), bb13, UnwindUnreachable())
}
bb13 = {
_12.fld5.fld2 = core::ptr::addr_of_mut!(_12.fld4);
_4 = core::ptr::addr_of!(_12.fld0.fld3.2.1);
_14.0 = _17;
(*_4) = (3630328760_u32, _3);
_12.fld0.fld3.2.0 = [208_u8];
(*_2) = _3;
_12.fld0.fld3.3.0 = [_12.fld0.fld3.2.1.0,_12.fld0.fld3.2.1.0,(*_4).0,(*_4).0,(*_4).0,(*_4).0];
_12.fld1.0 = (-7872437871688973425_i64);
_14.2 = 117_i8 as f64;
_12.fld1.2 = 13767655393774352245_u64 as i16;
_17 = (*_4).1;
_7 = [260975348808032643864417292527345831542_u128,199377262212784712399085509617243060798_u128,255783990423785964999587882842884380686_u128,162027854378402239473947285417732482124_u128];
_12.fld0.fld3.3.0 = [(*_4).0,(*_4).0,_12.fld0.fld3.2.1.0,(*_4).0,(*_4).0,(*_4).0];
(*_4).1 = _12.fld5.fld1;
_16 = 250_u8;
_12.fld0.fld3.2.1.0 = 2747382372_u32;
_19.0 = -_12.fld1.0;
_12.fld0.fld0 = (*_4).1 <= _12.fld5.fld1;
RET = [_16];
_12.fld0.fld4 = !7402_u16;
_12.fld4 = -_12.fld1.2;
(*_2) = _12.fld0.fld3.2.1.1;
match _16 {
0 => bb1,
1 => bb2,
2 => bb9,
250 => bb14,
_ => bb4
}
}
bb14 = {
(*_4).0 = 532563463_u32;
_19.2 = _12.fld4 - _12.fld1.2;
_14.1 = 4386503451009770017891209015099476966_i128;
_9 = !_8;
_19.1 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(14_usize, 9_usize, Move(_9), 6_usize, Move(_6), 3_usize, Move(_3), 7_usize, Move(_7)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(14_usize, 16_usize, Move(_16), 23_usize, _23, 23_usize, _23, 23_usize, _23), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: i16,mut _2: u32,mut _3: [i16; 5],mut _4: (u32, char),mut _5: char) -> char {
mir! {
type RET = char;
let _6: usize;
let _7: isize;
let _8: u64;
let _9: [u16; 4];
let _10: isize;
let _11: char;
let _12: isize;
let _13: Adt57;
let _14: (*const char,);
let _15: isize;
let _16: u16;
let _17: (f64,);
let _18: bool;
let _19: f64;
let _20: bool;
let _21: u128;
let _22: Adt59;
let _23: i32;
let _24: ();
let _25: ();
{
_6 = 0_usize;
_5 = _4.1;
_6 = !5_usize;
RET = _4.1;
_6 = true as usize;
_5 = _4.1;
_3 = [_1,_1,_1,_1,_1];
RET = _4.1;
_7 = (-106_isize);
_9 = [62766_u16,33264_u16,35602_u16,60668_u16];
_2 = _4.0;
_2 = _4.0;
Goto(bb1)
}
bb1 = {
_8 = 242_u8 as u64;
_1 = (-16945_i16) ^ (-10916_i16);
Call(_6 = fn16(_9, _4.0, _2, _7, _4.1, _4.0), bb2, UnwindUnreachable())
}
bb2 = {
_11 = _4.1;
_3 = [_1,_1,_1,_1,_1];
_6 = !11928190147340955577_usize;
_3 = [_1,_1,_1,_1,_1];
_13.fld0 = _7 as f32;
RET = _5;
_10 = _6 as isize;
_14.0 = core::ptr::addr_of!(_11);
_4 = (_2, _11);
match _7 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607431768211350 => bb9,
_ => bb8
}
}
bb3 = {
_8 = 242_u8 as u64;
_1 = (-16945_i16) ^ (-10916_i16);
Call(_6 = fn16(_9, _4.0, _2, _7, _4.1, _4.0), bb2, UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4.0 = _2;
Goto(bb10)
}
bb10 = {
_15 = 162444494466274701886288317714871431055_i128 as isize;
_4.0 = _2 | _2;
_13.fld6.fld0.0 = core::ptr::addr_of!(_11);
_17.0 = _15 as f64;
_8 = !2158031667824924497_u64;
_13.fld6.fld4 = [92068036643801875756909973526049173937_u128,222730938787206624473672273419360422293_u128,170445740257093761370500378063591951490_u128,263191564638539198382169370535623375554_u128,281758719669895004263636558308276559595_u128,15009750073982163824261538875896247107_u128,94379343709483690111639357930698007262_u128,27660393632706795925574072073865324550_u128];
match _7 {
0 => bb1,
1 => bb6,
2 => bb8,
340282366920938463463374607431768211350 => bb12,
_ => bb11
}
}
bb11 = {
_11 = _4.1;
_3 = [_1,_1,_1,_1,_1];
_6 = !11928190147340955577_usize;
_3 = [_1,_1,_1,_1,_1];
_13.fld0 = _7 as f32;
RET = _5;
_10 = _6 as isize;
_14.0 = core::ptr::addr_of!(_11);
_4 = (_2, _11);
match _7 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607431768211350 => bb9,
_ => bb8
}
}
bb12 = {
_13.fld1 = core::ptr::addr_of!(_11);
_15 = -_10;
_13.fld6.fld0.1 = _7 as u8;
RET = _4.1;
_14 = (_13.fld6.fld0.0,);
_2 = !_4.0;
_10 = !_15;
_16 = 38405_u16 << _4.0;
_1 = 8028_i16;
_1 = (-67739883161415563987847447971110116392_i128) as i16;
Call(_13.fld3 = fn17(_16, _14.0, _2, _14.0, _11), bb13, UnwindUnreachable())
}
bb13 = {
_4.1 = _5;
_9 = [_16,_16,_16,_16];
_13.fld7 = core::ptr::addr_of_mut!(_1);
_13.fld4 = [275177444032443158342578074507159227078_u128];
_13.fld0 = 103769743152667821581253914600230089919_i128 as f32;
_12 = _15 & _7;
_19 = _17.0 - _17.0;
_2 = _4.0;
_13.fld6.fld0.3 = [(-71_i8),11_i8];
_18 = true;
_18 = false;
_16 = !30080_u16;
_1 = (-10054_i16) * (-7080_i16);
_13.fld5 = _13.fld0 as i32;
_13.fld6.fld3 = !125_i8;
_13.fld0 = _6 as f32;
Goto(bb14)
}
bb14 = {
_7 = !_12;
_1 = _7 as i16;
_6 = !1_usize;
_7 = (-2838188128449334564_i64) as isize;
_19 = _17.0 * _17.0;
_4 = (_2, _11);
_4.0 = !_2;
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(15_usize, 18_usize, Move(_18), 6_usize, Move(_6), 12_usize, Move(_12), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(15_usize, 15_usize, Move(_15), 11_usize, Move(_11), 4_usize, Move(_4), 25_usize, _25), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [u16; 4],mut _2: u32,mut _3: u32,mut _4: isize,mut _5: char,mut _6: u32) -> usize {
mir! {
type RET = usize;
let _7: isize;
let _8: char;
let _9: [u128; 8];
let _10: i64;
let _11: [isize; 5];
let _12: [u8; 1];
let _13: bool;
let _14: Adt62;
let _15: [u128; 4];
let _16: usize;
let _17: (char, i128, f64);
let _18: Adt63;
let _19: Adt59;
let _20: char;
let _21: bool;
let _22: f64;
let _23: [i128; 4];
let _24: Adt57;
let _25: [i64; 8];
let _26: bool;
let _27: ([u32; 6],);
let _28: *const char;
let _29: f32;
let _30: (*const char, u8, usize, [i8; 2]);
let _31: isize;
let _32: ();
let _33: ();
{
RET = 0_usize;
_3 = !_2;
_1[RET] = 9246_u16 & 1952_u16;
Call(_7 = core::intrinsics::bswap(_4), bb1, UnwindUnreachable())
}
bb1 = {
_7 = _4 - _4;
_9 = [3458583811658792937560336139627479990_u128,54539386015999352032418394967653200975_u128,28932486589794207439790532401739023034_u128,219499223442824942991496329905576748924_u128,169935690222084926025184377719679840893_u128,97535625188401435430821664853395920774_u128,78254578082903214027630298745919401351_u128,194253451880560165298932359477619503492_u128];
_3 = !_2;
_2 = !_6;
_5 = '\u{e9006}';
_7 = !_4;
_3 = !_2;
_7 = _4 | _4;
_3 = !_6;
_4 = !_7;
_6 = !_3;
_10 = (-4527880101506249057_i64) & 1416727546475947399_i64;
_8 = _5;
_9 = [153067841356686561642132015316363209588_u128,242997050159851739322057163335699946551_u128,42606976198478150124358519185745760517_u128,300432725815756024918152800003247636648_u128,51871055186932143277492610646459509735_u128,66137180985949923099834614911541553489_u128,139375878265736796995946674115258397599_u128,228965741191469325967428950958629469504_u128];
_7 = _6 as isize;
_1[RET] = 55583_u16;
_10 = -2827781676259842178_i64;
_11[RET] = _10 as isize;
_5 = _8;
RET = 11765333426813187025_usize;
_12 = [89_u8];
_14.fld1.1 = [_4,_7,_7,_7,_7];
_14.fld5.fld2 = core::ptr::addr_of_mut!(_14.fld4);
_14.fld5.fld0 = (_8, _9);
_14.fld0.fld3.2.1.1 = _14.fld5.fld0.0;
Goto(bb2)
}
bb2 = {
_14.fld0.fld3.2.0 = _12;
_10 = !(-8581860206209744978_i64);
_14.fld0.fld4 = 38695_u16;
_14.fld0.fld3.1 = (-416341224_i32) as u128;
RET = _4 as usize;
_14.fld0.fld3.2.1.0 = !_6;
_14.fld2 = [5_usize,7_usize];
_14.fld1.2 = -27543_i16;
_14.fld5.fld1 = _8;
_9 = _14.fld5.fld0.1;
_19.fld1 = (-27450808853418136385985522199517804018_i128);
_14.fld0.fld4 = _14.fld1.2 as u16;
_4 = _7;
_14.fld5.fld2 = core::ptr::addr_of_mut!(_14.fld4);
_18.fld2.fld0.0 = [_6,_6,_14.fld0.fld3.2.1.0,_14.fld0.fld3.2.1.0,_6,_2];
match _19.fld1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
312831558067520327077389085232250407438 => bb10,
_ => bb9
}
}
bb3 = {
_7 = _4 - _4;
_9 = [3458583811658792937560336139627479990_u128,54539386015999352032418394967653200975_u128,28932486589794207439790532401739023034_u128,219499223442824942991496329905576748924_u128,169935690222084926025184377719679840893_u128,97535625188401435430821664853395920774_u128,78254578082903214027630298745919401351_u128,194253451880560165298932359477619503492_u128];
_3 = !_2;
_2 = !_6;
_5 = '\u{e9006}';
_7 = !_4;
_3 = !_2;
_7 = _4 | _4;
_3 = !_6;
_4 = !_7;
_6 = !_3;
_10 = (-4527880101506249057_i64) & 1416727546475947399_i64;
_8 = _5;
_9 = [153067841356686561642132015316363209588_u128,242997050159851739322057163335699946551_u128,42606976198478150124358519185745760517_u128,300432725815756024918152800003247636648_u128,51871055186932143277492610646459509735_u128,66137180985949923099834614911541553489_u128,139375878265736796995946674115258397599_u128,228965741191469325967428950958629469504_u128];
_7 = _6 as isize;
_1[RET] = 55583_u16;
_10 = -2827781676259842178_i64;
_11[RET] = _10 as isize;
_5 = _8;
RET = 11765333426813187025_usize;
_12 = [89_u8];
_14.fld1.1 = [_4,_7,_7,_7,_7];
_14.fld5.fld2 = core::ptr::addr_of_mut!(_14.fld4);
_14.fld5.fld0 = (_8, _9);
_14.fld0.fld3.2.1.1 = _14.fld5.fld0.0;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14.fld0.fld3.2.1 = (_3, _14.fld5.fld1);
_17.2 = _14.fld0.fld3.1 as f64;
_14.fld4 = !_14.fld1.2;
_14.fld0.fld2 = [_10,_10,_10,_10,_10,_10,_10,_10];
_18.fld0 = true;
_19.fld0.1 = !_19.fld1;
_19.fld1 = _14.fld0.fld3.1 as i128;
_14.fld1.0 = 7836460408603202276_u64 as i64;
_18.fld2.fld1 = 10243811715741613239_u64;
_1 = [_14.fld0.fld4,_14.fld0.fld4,_14.fld0.fld4,_14.fld0.fld4];
_14.fld0.fld3.3 = (_18.fld2.fld0.0,);
_14.fld0.fld3.3 = (_18.fld2.fld0.0,);
_19.fld1 = 492721198_i32 as i128;
_19.fld0 = (_14.fld5.fld0.0, _19.fld1, _17.2);
_18.fld1 = [_19.fld0.1,_19.fld1,_19.fld0.1,_19.fld0.1];
_17 = (_14.fld5.fld1, _19.fld0.1, _19.fld0.2);
_18.fld2.fld0 = (_14.fld0.fld3.3.0,);
_14.fld0.fld3.3.0 = _18.fld2.fld0.0;
_16 = 1_usize % 2319564673962914346_usize;
_14.fld0.fld0 = !_18.fld0;
_18.fld2 = Adt61 { fld0: _14.fld0.fld3.3,fld1: 5582565301851491686_u64,fld2: _18.fld1 };
_7 = _4;
_16 = 7_usize >> _19.fld1;
_16 = 4_usize;
_20 = _5;
Goto(bb11)
}
bb11 = {
_14.fld2 = [_16,_16];
_14.fld0.fld3.2.1.1 = _14.fld5.fld1;
_18.fld0 = _14.fld0.fld0;
_14.fld3 = core::ptr::addr_of!(_14.fld1.1[_16]);
_14.fld5.fld0.1[_16] = !_14.fld0.fld3.1;
_17.0 = _14.fld5.fld0.0;
_17 = (_14.fld0.fld3.2.1.1, _19.fld0.1, _19.fld0.2);
_11[_16] = -_4;
_13 = _18.fld0 ^ _14.fld0.fld0;
_11[_16] = !_4;
_14.fld5.fld0.1 = _9;
match _9[_16] {
51871055186932143277492610646459509735 => bb12,
_ => bb10
}
}
bb12 = {
_14.fld5.fld0.0 = _14.fld5.fld1;
_18.fld0 = !_13;
_18.fld2.fld0.0[_16] = !_14.fld0.fld3.3.0[_16];
_24.fld2 = (_18.fld2.fld0.0,);
_14.fld5.fld4 = core::ptr::addr_of!(_13);
_17.0 = _19.fld0.0;
_14.fld0.fld3.0 = core::ptr::addr_of_mut!(_24.fld6.fld0.3);
_14.fld5.fld2 = core::ptr::addr_of_mut!(_24.fld6.fld2[_16]);
_16 = _14.fld0.fld3.2.1.0 as usize;
_14.fld3 = core::ptr::addr_of!(_4);
_24.fld1 = core::ptr::addr_of!(_5);
match _18.fld2.fld1 {
0 => bb9,
1 => bb13,
5582565301851491686 => bb15,
_ => bb14
}
}
bb13 = {
_14.fld0.fld3.2.0 = _12;
_10 = !(-8581860206209744978_i64);
_14.fld0.fld4 = 38695_u16;
_14.fld0.fld3.1 = (-416341224_i32) as u128;
RET = _4 as usize;
_14.fld0.fld3.2.1.0 = !_6;
_14.fld2 = [5_usize,7_usize];
_14.fld1.2 = -27543_i16;
_14.fld5.fld1 = _8;
_9 = _14.fld5.fld0.1;
_19.fld1 = (-27450808853418136385985522199517804018_i128);
_14.fld0.fld4 = _14.fld1.2 as u16;
_4 = _7;
_14.fld5.fld2 = core::ptr::addr_of_mut!(_14.fld4);
_18.fld2.fld0.0 = [_6,_6,_14.fld0.fld3.2.1.0,_14.fld0.fld3.2.1.0,_6,_2];
match _19.fld1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
312831558067520327077389085232250407438 => bb10,
_ => bb9
}
}
bb14 = {
Return()
}
bb15 = {
_24.fld6.fld0.0 = _24.fld1;
_28 = core::ptr::addr_of!(_8);
_20 = (*_28);
_24.fld3 = _18.fld2.fld0.0;
_24.fld6.fld0.2 = _16;
_14.fld5.fld0 = (_14.fld0.fld3.2.1.1, _9);
_24.fld2 = (_24.fld3,);
_18.fld2.fld0 = _14.fld0.fld3.3;
_19.fld0.2 = _10 as f64;
_2 = _6;
_30.2 = !_16;
_18.fld2.fld0 = (_14.fld0.fld3.3.0,);
_14.fld5.fld2 = core::ptr::addr_of_mut!(_14.fld4);
_27 = _14.fld0.fld3.3;
_24.fld6.fld0.3 = [(-108_i8),20_i8];
_14.fld0.fld2 = [_14.fld1.0,_14.fld1.0,_10,_10,_10,_10,_14.fld1.0,_14.fld1.0];
_14.fld5.fld3 = [_17.1,_17.1,_19.fld1,_17.1];
_9 = [_14.fld0.fld3.1,_14.fld0.fld3.1,_14.fld0.fld3.1,_14.fld0.fld3.1,_14.fld0.fld3.1,_14.fld0.fld3.1,_14.fld0.fld3.1,_14.fld0.fld3.1];
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(16_usize, 2_usize, Move(_2), 4_usize, Move(_4), 7_usize, Move(_7), 16_usize, Move(_16)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(16_usize, 5_usize, Move(_5), 3_usize, Move(_3), 6_usize, Move(_6), 33_usize, _33), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: u16,mut _2: *const char,mut _3: u32,mut _4: *const char,mut _5: char) -> [u32; 6] {
mir! {
type RET = [u32; 6];
let _6: (char, [u128; 8]);
let _7: *const isize;
let _8: bool;
let _9: bool;
let _10: *const i128;
let _11: Adt57;
let _12: u16;
let _13: bool;
let _14: bool;
let _15: f32;
let _16: Adt51;
let _17: u64;
let _18: [i16; 5];
let _19: u16;
let _20: f32;
let _21: f64;
let _22: [i8; 2];
let _23: Adt54;
let _24: [i64; 8];
let _25: (char, i128, f64);
let _26: [i16; 6];
let _27: [u32; 6];
let _28: isize;
let _29: [u16; 4];
let _30: f32;
let _31: (*mut [i8; 2], u128, ([u8; 1], (u32, char)), ([u32; 6],));
let _32: isize;
let _33: [u128; 1];
let _34: isize;
let _35: (f64,);
let _36: Adt58;
let _37: *const i128;
let _38: isize;
let _39: i16;
let _40: isize;
let _41: char;
let _42: bool;
let _43: *const char;
let _44: char;
let _45: isize;
let _46: *mut f32;
let _47: *const isize;
let _48: u32;
let _49: [u128; 8];
let _50: [i128; 4];
let _51: (*const char, u8, usize, [i8; 2]);
let _52: f32;
let _53: ();
let _54: ();
{
_5 = (*_4);
_2 = core::ptr::addr_of!((*_2));
_5 = (*_4);
RET = [_3,_3,_3,_3,_3,_3];
(*_4) = _5;
_1 = 28418_u16;
RET = [_3,_3,_3,_3,_3,_3];
_6.1 = [112432494772891622437975770610535488969_u128,333416810727918906645834989098950931589_u128,313258642249510374657135586869807849806_u128,203094971737513165311238994486504603688_u128,56765651968422905693603245591948950993_u128,279977625422050351248196477211366701133_u128,314254439486614106890729120211016848534_u128,9253326501737524010322766011875686731_u128];
_6.1 = [274801223251764153784583970172016133696_u128,153317435768513408975568536213353952879_u128,200162015223728338384242868860768190711_u128,6152798569979038798526814895227158340_u128,336840370089407530312654972361857104857_u128,238245174085945384681154132465254561409_u128,164157599212125872490062910809770883941_u128,64517499910732003560627416491133720864_u128];
Call(_7 = fn18(_4, _5, (*_2), _1, _2, (*_2), _6.1, _5), bb1, UnwindUnreachable())
}
bb1 = {
(*_4) = _5;
_5 = (*_2);
Goto(bb2)
}
bb2 = {
RET = [_3,_3,_3,_3,_3,_3];
_6.1 = [155188788192894636938303826177078441848_u128,22251683444280696007140834593515419085_u128,52717743255242377081743096309438973937_u128,2528991380624090121036529406695603934_u128,138907802979916813923377421149273633781_u128,45267512737846321509889039633100708511_u128,38201360025888658135345986332436387026_u128,127834046200463052121992696744410320868_u128];
(*_4) = _5;
(*_2) = _5;
_2 = core::ptr::addr_of!((*_2));
_9 = true;
RET = [_3,_3,_3,_3,_3,_3];
_2 = core::ptr::addr_of!(_5);
(*_4) = (*_2);
_8 = !_9;
_11.fld6.fld2 = [(-22956_i16),9581_i16,(-27870_i16),(-26978_i16),25781_i16,(-9828_i16)];
_11.fld6.fld0.3 = [(-125_i8),(-66_i8)];
_8 = _3 != _3;
_11.fld6.fld1 = 89_u8 as usize;
_1 = !38188_u16;
_11.fld0 = 116_i8 as f32;
_11.fld6.fld1 = !2_usize;
Goto(bb3)
}
bb3 = {
_2 = core::ptr::addr_of!((*_2));
_11.fld4 = [225487237404581655784010626082406452564_u128];
_11.fld0 = (-6006691780905586246_i64) as f32;
_11.fld6.fld3 = _11.fld6.fld1 as i8;
RET = [_3,_3,_3,_3,_3,_3];
RET = [_3,_3,_3,_3,_3,_3];
_11.fld2.0 = [_3,_3,_3,_3,_3,_3];
_11.fld6.fld0.0 = _2;
_13 = _3 < _3;
_13 = _3 == _3;
_11.fld3 = [_3,_3,_3,_3,_3,_3];
_11.fld6.fld2 = [30929_i16,(-4702_i16),9304_i16,15806_i16,(-32226_i16),16406_i16];
_13 = _8;
_11.fld0 = (-4083417178461342346_i64) as f32;
_11.fld2.0 = [_3,_3,_3,_3,_3,_3];
_8 = _13;
_13 = _8 <= _8;
_11.fld0 = 15373408755268673312_u64 as f32;
_11.fld0 = _1 as f32;
_11.fld1 = _4;
RET = [_3,_3,_3,_3,_3,_3];
_11.fld6.fld1 = (-9717919075464461060249772016352897906_i128) as usize;
_6.1 = [26084830155610931437553794921898718745_u128,156332141357716779832011606662452821346_u128,47531234453662859022888396489707376498_u128,220501137501831714521634747294764989587_u128,119455700642286380036069921451869309137_u128,236007264365783064257839927415012175575_u128,155155113490810319807953718699554222802_u128,108428426104362977837662675344712526132_u128];
_6.0 = (*_2);
_14 = _13 | _13;
_11.fld6.fld3 = (-17895_i16) as i8;
Goto(bb4)
}
bb4 = {
_11.fld5 = !(-401785879_i32);
(*_4) = _5;
_11.fld6.fld0.0 = core::ptr::addr_of!((*_2));
_15 = 293026354116231171422401974387977709415_u128 as f32;
_14 = _13;
RET = _11.fld2.0;
_11.fld6.fld0.2 = _11.fld6.fld1;
RET = [_3,_3,_3,_3,_3,_3];
_11.fld6.fld1 = 99_u8 as usize;
Goto(bb5)
}
bb5 = {
_16.fld3 = _11.fld6.fld3;
_16.fld4 = _6.1;
_16.fld0 = (_11.fld6.fld0.0, 37_u8, _11.fld6.fld1, _11.fld6.fld0.3);
_11.fld5 = !574685428_i32;
(*_2) = _6.0;
_16.fld0.0 = core::ptr::addr_of!((*_2));
_9 = _14;
_11.fld1 = core::ptr::addr_of!((*_2));
_8 = !_9;
_6.0 = (*_2);
_11.fld3 = [_3,_3,_3,_3,_3,_3];
_11.fld2 = (_11.fld3,);
_3 = 2862827892_u32 + 139489410_u32;
Call(_12 = core::intrinsics::transmute(_1), bb6, UnwindUnreachable())
}
bb6 = {
_19 = _1;
_11.fld6.fld2 = [(-25564_i16),13410_i16,19094_i16,(-29299_i16),9529_i16,(-11635_i16)];
_22 = [_11.fld6.fld3,_11.fld6.fld3];
_16.fld0 = (_11.fld1, 5_u8, _11.fld6.fld0.2, _11.fld6.fld0.3);
_23.fld2.2 = (-6605_i16);
_16.fld2 = _11.fld6.fld2;
_11.fld6.fld0.0 = core::ptr::addr_of!((*_4));
(*_2) = _6.0;
_1 = !_19;
_22 = _16.fld0.3;
_9 = _8;
_23.fld0.fld3.fld0 = _6;
_27 = [_3,_3,_3,_3,_3,_3];
_25.1 = (-124692290090349856449204220896369905836_i128) * 16046999990287692774245153720950025825_i128;
RET = [_3,_3,_3,_3,_3,_3];
_16.fld4 = _6.1;
Goto(bb7)
}
bb7 = {
_23.fld2.1 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,7_isize];
_11.fld5 = 34744767463476266527234177435160023500_u128 as i32;
_10 = core::ptr::addr_of!(_23.fld0.fld0);
_20 = _25.1 as f32;
_23.fld2.2 = !(-7556_i16);
_11.fld6.fld0.1 = _16.fld0.1;
_11.fld6.fld0.3 = [_16.fld3,_16.fld3];
_16.fld0.1 = _11.fld6.fld0.1;
_23.fld0.fld3.fld1 = _23.fld0.fld3.fld0.0;
_23.fld0.fld3.fld4 = core::ptr::addr_of!(_14);
_18 = [_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2];
_4 = core::ptr::addr_of!((*_2));
_11.fld4 = [62283829841496272158047551254435323885_u128];
_23.fld0.fld3.fld3 = [_25.1,_25.1,_25.1,_25.1];
_23.fld0.fld3.fld0.0 = _5;
(*_10) = _25.1;
_27 = _11.fld3;
_11.fld0 = 9223372036854775807_isize as f32;
_11.fld6.fld0.3 = [_11.fld6.fld3,_11.fld6.fld3];
Goto(bb8)
}
bb8 = {
_23.fld2.0 = (-4448396173461688302_i64) | 162875063833698518_i64;
_2 = core::ptr::addr_of!((*_2));
_11.fld6.fld3 = _16.fld3;
Call(_16.fld0.2 = core::intrinsics::transmute(_11.fld6.fld1), bb9, UnwindUnreachable())
}
bb9 = {
_26 = [_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2];
_11.fld4 = [232090260854574888946609501388977037723_u128];
_5 = _6.0;
_25.1 = 254672456547251733301992761776892659016_u128 as i128;
_11.fld6.fld0.3 = [_16.fld3,_16.fld3];
_30 = _11.fld0;
_26 = [_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2];
_16.fld0.1 = !_11.fld6.fld0.1;
Goto(bb10)
}
bb10 = {
RET = [_3,_3,_3,_3,_3,_3];
_16.fld0.0 = _11.fld6.fld0.0;
_29 = [_12,_19,_19,_19];
_22 = [_11.fld6.fld3,_16.fld3];
_11.fld6.fld0 = (_11.fld1, _16.fld0.1, _16.fld0.2, _22);
_9 = !_14;
_11.fld6.fld0.3 = [_11.fld6.fld3,_16.fld3];
_23.fld0.fld3.fld3 = [(*_10),_25.1,_25.1,_23.fld0.fld0];
_11.fld6.fld1 = _23.fld0.fld3.fld0.0 as usize;
_16 = Adt51 { fld0: _11.fld6.fld0,fld1: _11.fld6.fld1,fld2: _11.fld6.fld2,fld3: _11.fld6.fld3,fld4: _6.1 };
_23.fld0.fld4 = _23.fld2.2 << _11.fld5;
Call(_30 = core::intrinsics::transmute((*_2)), bb11, UnwindUnreachable())
}
bb11 = {
_11.fld6.fld4 = [132004996938341429769348508623314765005_u128,277042831733873703019378944339717706167_u128,204324617683184796411264326187745427864_u128,339902681628477208534692220090233908339_u128,33305056460173779069682426762403137722_u128,159163883463583139316413762014686450955_u128,174544449609863283422042087941412844470_u128,147759581851394132106124606804789010674_u128];
_2 = core::ptr::addr_of!(_25.0);
RET = [_3,_3,_3,_3,_3,_3];
_23.fld2.2 = _23.fld0.fld4;
(*_2) = (*_4);
_31.1 = !88613568394013441808204657933154965439_u128;
_25.2 = _11.fld6.fld0.2 as f64;
_16.fld2 = [_23.fld2.2,_23.fld2.2,_23.fld0.fld4,_23.fld2.2,_23.fld2.2,_23.fld2.2];
_6.0 = (*_2);
_23.fld0.fld3.fld0 = ((*_2), _6.1);
_11.fld5 = -(-1917413783_i32);
_22 = [_11.fld6.fld3,_16.fld3];
_11.fld7 = core::ptr::addr_of_mut!(_23.fld0.fld4);
_11.fld1 = core::ptr::addr_of!(_23.fld0.fld3.fld0.0);
_31.1 = _23.fld0.fld3.fld1 as u128;
(*_2) = _5;
_21 = -_25.2;
_9 = _8;
_8 = !_9;
_23.fld0.fld3.fld3 = [_23.fld0.fld0,_23.fld0.fld0,(*_10),_25.1];
_23.fld0.fld3.fld0.1 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
Goto(bb12)
}
bb12 = {
_32 = _3 as isize;
_28 = _32;
_20 = _15 + _30;
(*_2) = (*_4);
_31.0 = core::ptr::addr_of_mut!(_22);
_25 = (_23.fld0.fld3.fld1, (*_10), _21);
_35 = (_25.2,);
_23.fld0.fld3.fld0.0 = _25.0;
_31.2.1.0 = !_3;
(*_10) = !_25.1;
_34 = _11.fld5 as isize;
_35.0 = 12987554833656133562_u64 as f64;
_36.fld0 = !_13;
_36.fld4 = _19 * _19;
_33 = [_31.1];
_35.0 = _25.2 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014573608211305585_f64;
_36.fld3.3.0 = [_31.2.1.0,_31.2.1.0,_31.2.1.0,_31.2.1.0,_31.2.1.0,_31.2.1.0];
_37 = core::ptr::addr_of!((*_10));
_6.1 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
_16.fld1 = !_11.fld6.fld0.2;
_6.0 = (*_4);
_11.fld0 = -_15;
_23.fld0.fld3.fld4 = core::ptr::addr_of!(_13);
(*_2) = _23.fld0.fld3.fld1;
Call(_16.fld1 = core::intrinsics::transmute(_16.fld0.2), bb13, UnwindUnreachable())
}
bb13 = {
_23.fld0.fld0 = _25.1 | _25.1;
_13 = _36.fld0 & _14;
_36.fld3.2.1 = (_3, _5);
_16.fld2 = _11.fld6.fld2;
_18 = [_23.fld0.fld4,_23.fld2.2,_23.fld2.2,_23.fld2.2,_23.fld2.2];
_31.3 = (_11.fld3,);
_11.fld6.fld1 = _11.fld5 as usize;
_11.fld5 = !(-829078696_i32);
_11.fld6.fld0.1 = (*_10) as u8;
_11.fld6.fld0.2 = _16.fld0.2 & _11.fld6.fld1;
_16.fld0.1 = _11.fld6.fld0.1 ^ _11.fld6.fld0.1;
_11.fld2.0 = _27;
_35.0 = -_21;
_23.fld0.fld1 = -_23.fld2.0;
_36.fld2 = [_23.fld0.fld1,_23.fld2.0,_23.fld0.fld1,_23.fld2.0,_23.fld2.0,_23.fld0.fld1,_23.fld0.fld1,_23.fld2.0];
Goto(bb14)
}
bb14 = {
(*_4) = (*_2);
_23.fld0.fld2 = _2;
_16.fld0.2 = _16.fld1 % 6_usize;
_17 = 2096715795025780256_u64;
_30 = _11.fld0 / (-0.000000000000000000000000000000000000001038317320513831_f32);
_11.fld6.fld3 = _11.fld6.fld0.1 as i8;
_46 = core::ptr::addr_of_mut!(_15);
_39 = _23.fld0.fld4 & _23.fld2.2;
_40 = _36.fld3.2.1.0 as isize;
(*_46) = _20;
_26 = [_39,_23.fld2.2,_23.fld0.fld4,_23.fld2.2,_39,_39];
_36.fld3.2.0 = [_11.fld6.fld0.1];
_11.fld0 = -_30;
_29 = [_36.fld4,_36.fld4,_1,_1];
_49 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
_16.fld0.1 = _11.fld6.fld0.1 ^ _11.fld6.fld0.1;
_17 = _32 as u64;
_11.fld6.fld0.3 = [_11.fld6.fld3,_11.fld6.fld3];
Goto(bb15)
}
bb15 = {
Call(_53 = dump_var(17_usize, 22_usize, Move(_22), 8_usize, Move(_8), 40_usize, Move(_40), 6_usize, Move(_6)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_53 = dump_var(17_usize, 26_usize, Move(_26), 19_usize, Move(_19), 17_usize, Move(_17), 49_usize, Move(_49)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_53 = dump_var(17_usize, 27_usize, Move(_27), 18_usize, Move(_18), 9_usize, Move(_9), 54_usize, _54), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: *const char,mut _2: char,mut _3: char,mut _4: u16,mut _5: *const char,mut _6: char,mut _7: [u128; 8],mut _8: char) -> *const isize {
mir! {
type RET = *const isize;
let _9: (f64,);
let _10: ([u8; 1], (u32, char));
let _11: [usize; 2];
let _12: f32;
let _13: [u8; 1];
let _14: Adt59;
let _15: i128;
let _16: [i8; 2];
let _17: Adt60;
let _18: bool;
let _19: [u8; 1];
let _20: u8;
let _21: ([u32; 6],);
let _22: char;
let _23: Adt54;
let _24: *const char;
let _25: [i16; 5];
let _26: bool;
let _27: isize;
let _28: u16;
let _29: ();
let _30: ();
{
_1 = core::ptr::addr_of!((*_1));
(*_1) = _3;
_6 = (*_5);
_9.0 = 113_u8 as f64;
_4 = 61075_u16;
_9.0 = 51183743687928639109432837222845623532_u128 as f64;
_1 = core::ptr::addr_of!((*_5));
_8 = _2;
_2 = _3;
_10.0 = [169_u8];
_3 = (*_1);
_2 = _3;
_6 = (*_1);
_7 = [183420986012609368299618668742782851588_u128,287535520278146553341622679008094066268_u128,285828742850010611433177263966710611629_u128,280707330104397424810074396223751596042_u128,40063749360149157090507820156134870973_u128,134003745584727780749847287951781291706_u128,221329167174898837951300756753207548640_u128,252406018637576552142627213454523633592_u128];
_10.1.1 = (*_5);
_10.1.0 = 587915361_u32 % 2222444610_u32;
_9.0 = 127865787581446306203620638226719046312_i128 as f64;
_1 = _5;
_9.0 = (-5872494132722022594_i64) as f64;
_10.1 = (1912264746_u32, _2);
_12 = 135798005200594933103187958395503465321_i128 as f32;
_8 = (*_1);
(*_5) = _2;
_1 = core::ptr::addr_of!((*_5));
Goto(bb1)
}
bb1 = {
_9.0 = _12 as f64;
_10.1.1 = (*_5);
_2 = _3;
_10.1 = (4224831430_u32, _6);
_10.0 = [195_u8];
_12 = 89_u8 as f32;
_8 = (*_1);
_9.0 = _4 as f64;
_12 = (-7524944757371495800_i64) as f32;
(*_5) = _6;
_8 = _3;
_11 = [3_usize,2_usize];
_13 = [243_u8];
_10.0 = [144_u8];
_10.1.1 = (*_1);
_14.fld0.2 = _9.0 - _9.0;
_14.fld0.1 = 68270900670824675239336850790194715835_i128;
_6 = _8;
_14.fld0 = (_10.1.1, (-5950698196596637484113392643403012632_i128), _9.0);
_1 = _5;
_10.1 = (2213187365_u32, _6);
_9 = (_14.fld0.2,);
_14.fld0.2 = _9.0;
_15 = _14.fld0.1;
_4 = 15186_u16 * 56930_u16;
_9.0 = -_14.fld0.2;
(*_1) = _10.1.1;
Goto(bb2)
}
bb2 = {
_10.1.1 = (*_5);
_4 = (-11426_i16) as u16;
_15 = -_14.fld0.1;
_14.fld0 = ((*_5), _15, _9.0);
_6 = (*_5);
_9.0 = _14.fld0.2;
_13 = _10.0;
_14.fld0.2 = (-3709235060112104537_i64) as f64;
_17.fld1.fld5.fld2 = [3226_i16,(-23977_i16),28001_i16,(-4972_i16),14537_i16,13483_i16];
_17.fld2.fld2.0 = [_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0];
_17.fld1.fld3 = (_1,);
(*_1) = _8;
_17.fld2.fld5 = _10.1.0 as i32;
_17.fld2.fld5 = (-709342786_i32);
_17.fld1.fld5.fld3 = (-126_i8);
_17.fld1.fld3 = (_5,);
_17.fld1.fld0.3.0 = [_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0];
_2 = (*_5);
_17.fld0 = _17.fld2.fld5 * _17.fld2.fld5;
_17.fld2.fld6.fld4 = [191182341896694715763272966709484066810_u128,49213260725641716981920421044200224401_u128,88553841897000701821747487510454164565_u128,132983302479018709477231483099425185548_u128,294862838288808175859429234941120799127_u128,315305394119339292135942496158265108115_u128,51325172678821068727271067594385000742_u128,264191147451735800300189034738028916097_u128];
_4 = _17.fld1.fld5.fld3 as u16;
_17.fld1.fld0.2 = _10;
_17.fld1.fld5.fld0.2 = 1_usize << _15;
_17.fld2.fld6.fld0.2 = _17.fld1.fld5.fld0.2 ^ _17.fld1.fld5.fld0.2;
_17.fld2.fld6.fld0.0 = _5;
_17.fld2.fld6.fld0.1 = 147_u8;
_17.fld1.fld5.fld1 = _17.fld1.fld5.fld0.2;
match _17.fld1.fld0.2.1.0 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
2213187365 => bb10,
_ => bb9
}
}
bb3 = {
_9.0 = _12 as f64;
_10.1.1 = (*_5);
_2 = _3;
_10.1 = (4224831430_u32, _6);
_10.0 = [195_u8];
_12 = 89_u8 as f32;
_8 = (*_1);
_9.0 = _4 as f64;
_12 = (-7524944757371495800_i64) as f32;
(*_5) = _6;
_8 = _3;
_11 = [3_usize,2_usize];
_13 = [243_u8];
_10.0 = [144_u8];
_10.1.1 = (*_1);
_14.fld0.2 = _9.0 - _9.0;
_14.fld0.1 = 68270900670824675239336850790194715835_i128;
_6 = _8;
_14.fld0 = (_10.1.1, (-5950698196596637484113392643403012632_i128), _9.0);
_1 = _5;
_10.1 = (2213187365_u32, _6);
_9 = (_14.fld0.2,);
_14.fld0.2 = _9.0;
_15 = _14.fld0.1;
_4 = 15186_u16 * 56930_u16;
_9.0 = -_14.fld0.2;
(*_1) = _10.1.1;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_17.fld1.fld5.fld0.3 = [_17.fld1.fld5.fld3,_17.fld1.fld5.fld3];
_17.fld2.fld6.fld2 = [2987_i16,(-25310_i16),20296_i16,26628_i16,24019_i16,20223_i16];
_17.fld1.fld0.2.0 = _13;
_17.fld2.fld6.fld2 = [(-1338_i16),(-1432_i16),17381_i16,25016_i16,23881_i16,(-2965_i16)];
_14.fld1 = _14.fld0.1 >> _17.fld2.fld6.fld0.2;
_17.fld2.fld6.fld4 = _7;
_17.fld1.fld0.3.0 = _17.fld2.fld2.0;
_14.fld0 = (_2, _14.fld1, _9.0);
_17.fld1.fld5.fld0.0 = core::ptr::addr_of!(_8);
_10.1 = (_17.fld1.fld0.2.1.0, _8);
_17.fld1.fld5.fld4 = [333427158631911682584046162998617414216_u128,337383208011929134947514132343567576304_u128,25587941650240349021956572336216979715_u128,11281584893634344130598129718803931540_u128,116886383765205990328412971983754268869_u128,183540594042828272408690264105985621244_u128,65409249819483952768064431566820411213_u128,258127445098817767980308089269975539817_u128];
_17.fld2.fld6.fld4 = _7;
_23.fld0.fld3.fld2 = core::ptr::addr_of_mut!(_23.fld0.fld4);
_17.fld1.fld4 = core::ptr::addr_of_mut!(_23.fld2.2);
_17.fld1.fld0.2.0 = [_17.fld2.fld6.fld0.1];
_23.fld0.fld4 = (-45_isize) as i16;
_10 = (_17.fld1.fld0.2.0, _17.fld1.fld0.2.1);
_3 = (*_1);
_16 = [_17.fld1.fld5.fld3,_17.fld1.fld5.fld3];
_9 = (_14.fld0.2,);
_14.fld1 = _14.fld0.1 << _17.fld1.fld5.fld3;
_23.fld0.fld1 = -(-5792235441152399165_i64);
match _17.fld1.fld0.2.1.0 {
0 => bb11,
2213187365 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_9.0 = _12 as f64;
_10.1.1 = (*_5);
_2 = _3;
_10.1 = (4224831430_u32, _6);
_10.0 = [195_u8];
_12 = 89_u8 as f32;
_8 = (*_1);
_9.0 = _4 as f64;
_12 = (-7524944757371495800_i64) as f32;
(*_5) = _6;
_8 = _3;
_11 = [3_usize,2_usize];
_13 = [243_u8];
_10.0 = [144_u8];
_10.1.1 = (*_1);
_14.fld0.2 = _9.0 - _9.0;
_14.fld0.1 = 68270900670824675239336850790194715835_i128;
_6 = _8;
_14.fld0 = (_10.1.1, (-5950698196596637484113392643403012632_i128), _9.0);
_1 = _5;
_10.1 = (2213187365_u32, _6);
_9 = (_14.fld0.2,);
_14.fld0.2 = _9.0;
_15 = _14.fld0.1;
_4 = 15186_u16 * 56930_u16;
_9.0 = -_14.fld0.2;
(*_1) = _10.1.1;
Goto(bb2)
}
bb13 = {
_17.fld2.fld6.fld0.1 = 5110333410889192400_u64 as u8;
_23.fld0.fld3.fld0.1 = [65014452246465925194026273616614666812_u128,127653917948757608286490894381786472759_u128,190801574370583564990432888956395803957_u128,18998346297462334557328444584409401602_u128,214578546159195662791494755525954038571_u128,297611715544955340412932140809738635212_u128,289697000942916590060268209527623937182_u128,257542812907010359112864811166020641499_u128];
_17.fld2.fld6.fld1 = _10.1.0 as usize;
_17.fld0 = _4 as i32;
match _17.fld1.fld5.fld3 {
340282366920938463463374607431768211330 => bb15,
_ => bb14
}
}
bb14 = {
_9.0 = _12 as f64;
_10.1.1 = (*_5);
_2 = _3;
_10.1 = (4224831430_u32, _6);
_10.0 = [195_u8];
_12 = 89_u8 as f32;
_8 = (*_1);
_9.0 = _4 as f64;
_12 = (-7524944757371495800_i64) as f32;
(*_5) = _6;
_8 = _3;
_11 = [3_usize,2_usize];
_13 = [243_u8];
_10.0 = [144_u8];
_10.1.1 = (*_1);
_14.fld0.2 = _9.0 - _9.0;
_14.fld0.1 = 68270900670824675239336850790194715835_i128;
_6 = _8;
_14.fld0 = (_10.1.1, (-5950698196596637484113392643403012632_i128), _9.0);
_1 = _5;
_10.1 = (2213187365_u32, _6);
_9 = (_14.fld0.2,);
_14.fld0.2 = _9.0;
_15 = _14.fld0.1;
_4 = 15186_u16 * 56930_u16;
_9.0 = -_14.fld0.2;
(*_1) = _10.1.1;
Goto(bb2)
}
bb15 = {
_23.fld0.fld3.fld3 = [_14.fld0.1,_14.fld0.1,_15,_14.fld1];
_17.fld1.fld0.0 = core::ptr::addr_of_mut!(_17.fld1.fld5.fld0.3);
_24 = core::ptr::addr_of!(_2);
(*_1) = (*_24);
_22 = _6;
Goto(bb16)
}
bb16 = {
_17.fld1.fld0.1 = 228486462045878143321461315354731346527_u128;
(*_24) = (*_5);
RET = core::ptr::addr_of!(_27);
_28 = _4;
_17.fld1.fld5.fld0 = (_17.fld1.fld3.0, _17.fld2.fld6.fld0.1, _17.fld2.fld6.fld0.2, _16);
_23.fld1 = [_23.fld0.fld1,_23.fld0.fld1,_23.fld0.fld1,_23.fld0.fld1,_23.fld0.fld1,_23.fld0.fld1,_23.fld0.fld1,_23.fld0.fld1];
Goto(bb17)
}
bb17 = {
Call(_29 = dump_var(18_usize, 2_usize, Move(_2), 11_usize, Move(_11), 7_usize, Move(_7), 6_usize, Move(_6)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(18_usize, 22_usize, Move(_22), 28_usize, Move(_28), 30_usize, _30, 30_usize, _30), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: isize,mut _2: isize,mut _3: *const [isize; 5],mut _4: isize,mut _5: *const [isize; 5],mut _6: [isize; 5],mut _7: [isize; 5]) -> bool {
mir! {
type RET = bool;
let _8: (i64, [isize; 5], i16);
let _9: [usize; 2];
let _10: [u8; 1];
let _11: *mut f32;
let _12: bool;
let _13: [i8; 2];
let _14: f64;
let _15: [u16; 4];
let _16: isize;
let _17: [u128; 8];
let _18: Adt51;
let _19: [i16; 5];
let _20: Adt64;
let _21: f32;
let _22: Adt59;
let _23: u32;
let _24: f32;
let _25: [u128; 1];
let _26: [u8; 1];
let _27: i32;
let _28: i8;
let _29: f32;
let _30: char;
let _31: u128;
let _32: i32;
let _33: [u128; 1];
let _34: char;
let _35: *const (u32, char);
let _36: ([u32; 6],);
let _37: f64;
let _38: Adt50;
let _39: f32;
let _40: [u128; 4];
let _41: f32;
let _42: isize;
let _43: ();
let _44: ();
{
_7 = (*_5);
_3 = core::ptr::addr_of!((*_3));
RET = false;
(*_5) = _6;
_7 = (*_3);
_5 = core::ptr::addr_of!(_6);
_6 = (*_3);
_8.2 = (-7734814006785074369_i64) as i16;
_4 = _1;
(*_5) = (*_3);
(*_3) = [_1,_1,_2,_1,_2];
_5 = core::ptr::addr_of!(_7);
_6 = [_2,_2,_4,_4,_1];
(*_5) = _6;
(*_5) = [_4,_2,_4,_4,_2];
(*_5) = _6;
_8.0 = (-2343036649671746225_i64) + (-9009662605006808937_i64);
Goto(bb1)
}
bb1 = {
_8.1 = (*_5);
RET = true;
_7 = _6;
_6 = (*_3);
_12 = !true;
RET = !_12;
(*_3) = [_1,_1,_4,_1,_4];
_13 = [(-118_i8),(-27_i8)];
_8.1 = [_1,_4,_2,_1,_4];
_10 = [133_u8];
_8 = (1740520283432099552_i64, (*_3), 32247_i16);
(*_5) = (*_3);
_9 = [2_usize,3_usize];
match _8.0 {
1740520283432099552 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_14 = 11957588010628034594_u64 as f64;
(*_5) = (*_3);
(*_5) = [_4,_2,_1,_2,_1];
_13 = [(-63_i8),(-28_i8)];
_1 = _4;
_2 = _1 >> _8.2;
_17 = [56932634241758755888129481882956805487_u128,5182214523403979502924497738369799291_u128,137043037660155427480963557170697799183_u128,227155449313598198366857778738755724320_u128,152109769231268653868870690437623806536_u128,309763424739903992532439170345468024148_u128,48770529815903418845250280361802986026_u128,206410649230648617210111744181286649015_u128];
_16 = _2;
(*_3) = [_4,_16,_2,_16,_2];
_16 = -_2;
_13 = [(-20_i8),(-113_i8)];
(*_3) = [_16,_2,_16,_2,_16];
_16 = _2;
RET = !_12;
_10 = [69_u8];
_5 = _3;
_8.0 = (-5707966565902164202_i64) | (-7018168850409818138_i64);
_18.fld3 = 97641918_i32 as i8;
_18.fld0.3 = [_18.fld3,_18.fld3];
_18.fld0.2 = 2120125566_u32 as usize;
_18.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_1 = '\u{90c04}' as isize;
_18.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
RET = _4 != _2;
_17 = [14120624035130831523567303173248964583_u128,236282530540097629399869133804261283725_u128,82949162794333225753475452163969562614_u128,45540737806950038962956457334942880626_u128,278089521396033170481218860859273921172_u128,245306306113429202011131244790219333427_u128,268006854936352828937258512728687891852_u128,273726985915516866906452207459114953869_u128];
Goto(bb4)
}
bb4 = {
_8.0 = (-8290937283466861988_i64);
_16 = _12 as isize;
_7 = (*_3);
_18.fld4 = [164695951870585633683499164861571763945_u128,297709192555354372093314606813846751010_u128,69076156387821304359555442550413964547_u128,194944702348872083638568017043473303608_u128,210818871159966175687589909410591738107_u128,51118892502856825576070111433400054609_u128,138183976062701183649243450225081670978_u128,130775290687451647158642106331988870235_u128];
_20.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_20.fld0.fld4 = [180801186491786129691214528713752285128_u128,248821039402145470703948966685464289470_u128,52225076751723774613370128859489213083_u128,146645818417244255191525498420107480042_u128,207835888359351127838839983558906729519_u128,328927089466727265084367824590938149788_u128,88672519883754810609886556524788756797_u128,213725160150575408877147331688629162874_u128];
_22.fld0.1 = 2603829818879968593_u64 as i128;
_20.fld3.fld2.fld0.0 = [2640292922_u32,1019362716_u32,3407367806_u32,2718488830_u32,165566457_u32,4010738537_u32];
_18.fld0.2 = !10677629052002249400_usize;
_22.fld0.2 = _14 * _14;
_21 = 1534819619218565360_u64 as f32;
_15 = [14977_u16,55181_u16,15821_u16,37176_u16];
_8.2 = 24548_i16 * 5757_i16;
_18.fld0.2 = 7_usize;
Goto(bb5)
}
bb5 = {
_18.fld3 = 73_i8 * 3_i8;
_19 = [_8.2,_8.2,_8.2,_8.2,_8.2];
(*_3) = [_1,_2,_1,_2,_1];
_20.fld0.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
RET = !_12;
_18.fld1 = !_18.fld0.2;
_13 = _18.fld0.3;
_20.fld3.fld2.fld2 = [_22.fld0.1,_22.fld0.1,_22.fld0.1,_22.fld0.1];
_20.fld0.fld4 = [2506081672657268633323739534567025388_u128,330569466950605551720967090545783474057_u128,253744712386724974670982638383985435403_u128,155863287505011996142231979214376024182_u128,112669200356725494405106406906334960824_u128,223845124791901770043638350648135977713_u128,247089117354656648373069072802987060782_u128,112893405900162525903172947421951986979_u128];
_28 = _18.fld3 ^ _18.fld3;
_18.fld0.3 = [_28,_28];
_13 = _18.fld0.3;
_8.1 = [_1,_4,_1,_4,_2];
_8.0 = 361821755_u32 as i64;
_20.fld0.fld0.2 = !_18.fld0.2;
_27 = _18.fld1 as i32;
_22.fld0.2 = -_14;
_18.fld0.1 = 72_u8;
_28 = _18.fld3;
_8 = (375058299422486899_i64, _7, 1097_i16);
Goto(bb6)
}
bb6 = {
_20.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_18.fld0.0 = core::ptr::addr_of!(_30);
_20.fld0.fld0.3 = [_28,_28];
_20.fld3.fld1 = [_22.fld0.1,_22.fld0.1,_22.fld0.1,_22.fld0.1];
_20.fld0.fld0.3 = _13;
(*_3) = _7;
_20.fld0.fld4 = _17;
_17 = [129007696763429199951404683731832970944_u128,44002312957230911676652564024861997549_u128,308275715604793524351427674696873112678_u128,138371949048337785852454680184110878380_u128,184054469029579768073160526280932058700_u128,258262808583352421354022211348600021265_u128,32430104491501802968210133244809262546_u128,70839182515466218062618194186412592190_u128];
_18.fld0.0 = core::ptr::addr_of!(_30);
_12 = !true;
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb7,
5 => bb8,
375058299422486899 => bb10,
_ => bb9
}
}
bb7 = {
Return()
}
bb8 = {
_8.0 = (-8290937283466861988_i64);
_16 = _12 as isize;
_7 = (*_3);
_18.fld4 = [164695951870585633683499164861571763945_u128,297709192555354372093314606813846751010_u128,69076156387821304359555442550413964547_u128,194944702348872083638568017043473303608_u128,210818871159966175687589909410591738107_u128,51118892502856825576070111433400054609_u128,138183976062701183649243450225081670978_u128,130775290687451647158642106331988870235_u128];
_20.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_20.fld0.fld4 = [180801186491786129691214528713752285128_u128,248821039402145470703948966685464289470_u128,52225076751723774613370128859489213083_u128,146645818417244255191525498420107480042_u128,207835888359351127838839983558906729519_u128,328927089466727265084367824590938149788_u128,88672519883754810609886556524788756797_u128,213725160150575408877147331688629162874_u128];
_22.fld0.1 = 2603829818879968593_u64 as i128;
_20.fld3.fld2.fld0.0 = [2640292922_u32,1019362716_u32,3407367806_u32,2718488830_u32,165566457_u32,4010738537_u32];
_18.fld0.2 = !10677629052002249400_usize;
_22.fld0.2 = _14 * _14;
_21 = 1534819619218565360_u64 as f32;
_15 = [14977_u16,55181_u16,15821_u16,37176_u16];
_8.2 = 24548_i16 * 5757_i16;
_18.fld0.2 = 7_usize;
Goto(bb5)
}
bb9 = {
_14 = 11957588010628034594_u64 as f64;
(*_5) = (*_3);
(*_5) = [_4,_2,_1,_2,_1];
_13 = [(-63_i8),(-28_i8)];
_1 = _4;
_2 = _1 >> _8.2;
_17 = [56932634241758755888129481882956805487_u128,5182214523403979502924497738369799291_u128,137043037660155427480963557170697799183_u128,227155449313598198366857778738755724320_u128,152109769231268653868870690437623806536_u128,309763424739903992532439170345468024148_u128,48770529815903418845250280361802986026_u128,206410649230648617210111744181286649015_u128];
_16 = _2;
(*_3) = [_4,_16,_2,_16,_2];
_16 = -_2;
_13 = [(-20_i8),(-113_i8)];
(*_3) = [_16,_2,_16,_2,_16];
_16 = _2;
RET = !_12;
_10 = [69_u8];
_5 = _3;
_8.0 = (-5707966565902164202_i64) | (-7018168850409818138_i64);
_18.fld3 = 97641918_i32 as i8;
_18.fld0.3 = [_18.fld3,_18.fld3];
_18.fld0.2 = 2120125566_u32 as usize;
_18.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_1 = '\u{90c04}' as isize;
_18.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
RET = _4 != _2;
_17 = [14120624035130831523567303173248964583_u128,236282530540097629399869133804261283725_u128,82949162794333225753475452163969562614_u128,45540737806950038962956457334942880626_u128,278089521396033170481218860859273921172_u128,245306306113429202011131244790219333427_u128,268006854936352828937258512728687891852_u128,273726985915516866906452207459114953869_u128];
Goto(bb4)
}
bb10 = {
_32 = !_27;
_20.fld0.fld0.1 = _18.fld0.1 << _8.0;
_20.fld3.fld0 = _18.fld3 != _28;
(*_3) = [_16,_2,_2,_2,_2];
_22.fld1 = _22.fld0.1;
_34 = '\u{10fa1f}';
_18.fld1 = _20.fld0.fld0.2;
_20.fld0.fld0 = _18.fld0;
_20.fld1 = core::ptr::addr_of!((*_3));
_25 = [314163948590046894236441560358120737771_u128];
RET = _20.fld3.fld0;
match _8.0 {
0 => bb6,
375058299422486899 => bb11,
_ => bb5
}
}
bb11 = {
_14 = _22.fld0.2 * _22.fld0.2;
_24 = _21;
_22.fld0.0 = _34;
_20.fld0.fld2 = _20.fld2;
_36.0 = [3494631899_u32,3984628444_u32,2790776657_u32,4006157911_u32,1996652287_u32,3705950545_u32];
_14 = _22.fld0.2;
_28 = -_18.fld3;
_13 = [_28,_18.fld3];
_15 = [32276_u16,23458_u16,31135_u16,31329_u16];
_22.fld0.1 = _22.fld1 * _22.fld1;
_28 = -_18.fld3;
_29 = _21;
_32 = !_27;
_33 = [22733412497248451519453122408954644886_u128];
RET = _20.fld3.fld0;
_20.fld0.fld3 = _28;
_22.fld0.2 = -_14;
_20.fld0 = Move(_18);
(*_3) = [_16,_1,_2,_4,_2];
_20.fld3.fld2 = Adt61 { fld0: _36,fld1: 11291621574235562829_u64,fld2: _20.fld3.fld1 };
match _8.2 {
0 => bb10,
1 => bb5,
2 => bb8,
3 => bb4,
4 => bb12,
1097 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
_8.0 = (-8290937283466861988_i64);
_16 = _12 as isize;
_7 = (*_3);
_18.fld4 = [164695951870585633683499164861571763945_u128,297709192555354372093314606813846751010_u128,69076156387821304359555442550413964547_u128,194944702348872083638568017043473303608_u128,210818871159966175687589909410591738107_u128,51118892502856825576070111433400054609_u128,138183976062701183649243450225081670978_u128,130775290687451647158642106331988870235_u128];
_20.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_20.fld0.fld4 = [180801186491786129691214528713752285128_u128,248821039402145470703948966685464289470_u128,52225076751723774613370128859489213083_u128,146645818417244255191525498420107480042_u128,207835888359351127838839983558906729519_u128,328927089466727265084367824590938149788_u128,88672519883754810609886556524788756797_u128,213725160150575408877147331688629162874_u128];
_22.fld0.1 = 2603829818879968593_u64 as i128;
_20.fld3.fld2.fld0.0 = [2640292922_u32,1019362716_u32,3407367806_u32,2718488830_u32,165566457_u32,4010738537_u32];
_18.fld0.2 = !10677629052002249400_usize;
_22.fld0.2 = _14 * _14;
_21 = 1534819619218565360_u64 as f32;
_15 = [14977_u16,55181_u16,15821_u16,37176_u16];
_8.2 = 24548_i16 * 5757_i16;
_18.fld0.2 = 7_usize;
Goto(bb5)
}
bb14 = {
_20.fld0.fld0.3 = [_28,_20.fld0.fld3];
_20.fld0.fld0.3 = [_20.fld0.fld3,_20.fld0.fld3];
_38.fld0.1 = [261478432253592697497138196557082190288_u128,62625573307507377073230707030919447811_u128,217380287070738894112564926076330847515_u128,13554602264904035765024257540196931902_u128,251226461889125272805673132824396777208_u128,239987763348488892496090239036214339196_u128,94409767078224183647153454598350239068_u128,211416581292449778608335917869475869761_u128];
_38.fld2 = core::ptr::addr_of_mut!(_8.2);
_26 = [_20.fld0.fld0.1];
_20.fld2 = [_8.2,_8.2,_8.2,_8.2,_8.2,_8.2];
_5 = core::ptr::addr_of!(_7);
_20.fld0.fld3 = _28;
_20.fld1 = core::ptr::addr_of!(_7);
_14 = _22.fld0.2 + _22.fld0.2;
_30 = _34;
_38.fld0 = (_34, _20.fld0.fld4);
RET = !_20.fld3.fld0;
_38.fld0 = (_22.fld0.0, _20.fld0.fld4);
_38.fld0.0 = _30;
(*_3) = [_2,_2,_4,_4,_2];
_23 = 1126269061_u32;
_29 = _24 * _24;
_20.fld0.fld0.3 = [_28,_28];
_23 = !4230606097_u32;
_20.fld0.fld0.1 = !79_u8;
_7 = _8.1;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(19_usize, 9_usize, Move(_9), 2_usize, Move(_2), 1_usize, Move(_1), 7_usize, Move(_7)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(19_usize, 36_usize, Move(_36), 12_usize, Move(_12), 27_usize, Move(_27), 25_usize, Move(_25)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(19_usize, 8_usize, Move(_8), 6_usize, Move(_6), 30_usize, Move(_30), 17_usize, Move(_17)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(true), std::hint::black_box(210218660002383370997363996783001238116_u128), std::hint::black_box((-4502241702970759112_i64))));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: (char, [u128; 8]),
fld1: char,
fld2: *mut i16,
fld3: [i128; 4],
fld4: *const bool,
}
#[derive(Debug)]
pub struct Adt51 {
fld0: (*const char, u8, usize, [i8; 2]),
fld1: usize,
fld2: [i16; 6],
fld3: i8,
fld4: [u128; 8],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: bool,
fld1: (i64, [isize; 5], i16),
fld2: [i64; 8],
fld3: u64,
fld4: (*const char,),
fld5: u8,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: i128,
fld1: i64,
fld2: *const char,
fld3: Adt50,
fld4: i16,
}
#[derive(Debug)]
pub struct Adt54 {
fld0: Adt53,
fld1: [i64; 8],
fld2: (i64, [isize; 5], i16),
}
#[derive(Debug)]
pub struct Adt55 {
fld0: (*mut [i8; 2], u128, ([u8; 1], (u32, char)), ([u32; 6],)),
fld1: [u32; 6],
fld2: [i16; 5],
fld3: (*const char,),
fld4: *mut i16,
fld5: Adt51,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: (i64, [isize; 5], i16),
fld1: Adt55,
fld2: i16,
}
#[derive(Debug)]
pub struct Adt57 {
fld0: f32,
fld1: *const char,
fld2: ([u32; 6],),
fld3: [u32; 6],
fld4: [u128; 1],
fld5: i32,
fld6: Adt51,
fld7: *mut i16,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: bool,
fld1: f64,
fld2: [i64; 8],
fld3: (*mut [i8; 2], u128, ([u8; 1], (u32, char)), ([u32; 6],)),
fld4: u16,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: (char, i128, f64),
fld1: i128,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: i32,
fld1: Adt55,
fld2: Adt57,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: ([u32; 6],),
fld1: u64,
fld2: [i128; 4],
}
#[derive(Debug)]
pub struct Adt62 {
fld0: Adt58,
fld1: (i64, [isize; 5], i16),
fld2: [usize; 2],
fld3: *const isize,
fld4: i16,
fld5: Adt50,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt63 {
fld0: bool,
fld1: [i128; 4],
fld2: Adt61,
fld3: *const (u32, char),
}
#[derive(Debug)]
pub struct Adt64 {
fld0: Adt51,
fld1: *const [isize; 5],
fld2: [i16; 6],
fld3: Adt63,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: Adt63,
}
#[derive(Debug)]
pub struct Adt66 {
fld0: Adt53,
}

