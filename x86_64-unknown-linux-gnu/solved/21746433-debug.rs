#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u8,mut _2: u128) -> f32 {
mir! {
type RET = f32;
let _3: usize;
let _4: (i128,);
let _5: [u128; 5];
let _6: Adt52;
let _7: [u16; 1];
let _8: (char,);
let _9: [u64; 1];
let _10: *const i128;
let _11: f32;
let _12: f32;
let _13: i16;
let _14: [i32; 6];
let _15: [bool; 8];
let _16: [bool; 8];
let _17: Adt54;
let _18: Adt56;
let _19: Adt60;
let _20: [u128; 5];
let _21: ([u64; 1], u128, i64);
let _22: bool;
let _23: [bool; 8];
let _24: char;
let _25: [i8; 7];
let _26: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _27: i32;
let _28: char;
let _29: f64;
let _30: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _31: isize;
let _32: [i128; 1];
let _33: [u32; 3];
let _34: ();
let _35: ();
{
RET = 215429297266661623247173244312902544582_u128 as f32;
RET = (-31063_i16) as f32;
_2 = 4973625129117070766_u64 as u128;
_3 = 3412185522_u32 as usize;
_1 = 164_u8 - 40_u8;
_2 = 2878618498_u32 as u128;
RET = 97_i8 as f32;
Goto(bb1)
}
bb1 = {
RET = _1 as f32;
_3 = 36_i8 as usize;
RET = _1 as f32;
_1 = (-51160897646953012509066329002704578174_i128) as u8;
RET = 5027_u16 as f32;
_2 = 43190774306958082736162816674484327830_u128 & 68785001756844769164112548143384898693_u128;
_1 = _2 as u8;
RET = 15_i8 as f32;
_1 = !126_u8;
_1 = 80_u8 << _3;
_4 = ((-125282109524693181655485016386846279733_i128),);
_4 = (128300045894582509027593110978421112320_i128,);
_2 = !143935602452768998867545677947822766925_u128;
match _4.0 {
128300045894582509027593110978421112320 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
RET = 7273524479116190745_i64 as f32;
_4.0 = _2 as i128;
_2 = '\u{e537d}' as u128;
RET = _1 as f32;
_4.0 = !132675643991944669224438345215047771393_i128;
RET = 2049122491_u32 as f32;
Goto(bb4)
}
bb4 = {
_1 = 200_u8 << _3;
RET = (-681217055_i32) as f32;
_4.0 = _1 as i128;
_3 = 3_usize % 3_usize;
_1 = !70_u8;
RET = _2 as f32;
_4 = (152754442416154931589117141224499044180_i128,);
_3 = !2454409812147180636_usize;
_3 = !1_usize;
_2 = _3 as u128;
RET = 16204963023894974531_u64 as f32;
RET = 14268_i16 as f32;
RET = _3 as f32;
_4 = ((-120758639325396712938125931176167596474_i128),);
_4 = (130647386062469702967555491397863510431_i128,);
_3 = 8693462576634405441_usize | 16518881969944885906_usize;
_4.0 = !(-137583923212624171888605597973284880516_i128);
_4.0 = !(-55376457377041773208754064865710752777_i128);
RET = 53221_u16 as f32;
_5 = [_2,_2,_2,_2,_2];
RET = (-9223372036854775808_isize) as f32;
_1 = 241_u8 + 48_u8;
RET = _4.0 as f32;
Goto(bb5)
}
bb5 = {
_3 = _2 as usize;
_6.fld1 = [6123732652503963630_u64];
_3 = 5_usize;
_4.0 = (-74710250451672874804635995116252261850_i128) - (-113419933976576172964743027199914526717_i128);
_1 = 169_u8 << _2;
_2 = !8976057188253126036079834645597002067_u128;
_4 = (154367279860894316855784812072001322479_i128,);
_3 = '\u{abfcf}' as usize;
RET = _1 as f32;
_4 = (27932255962556513254164705084748100450_i128,);
_4 = ((-56036857572024629923946532949877369677_i128),);
_7 = [9559_u16];
_1 = !35_u8;
_7 = [2276_u16];
RET = 57989_u16 as f32;
_1 = !151_u8;
_7 = [15040_u16];
_3 = 2_usize & 3_usize;
_7 = [21251_u16];
_1 = 5080988704713787678_u64 as u8;
_8 = ('\u{106681}',);
_9 = [14338768252578514806_u64];
_9 = [16496938427740918686_u64];
_8 = ('\u{c8681}',);
_7 = [54032_u16];
_3 = (-6438137205530733328_i64) as usize;
Goto(bb6)
}
bb6 = {
_2 = 164119300281463412961887122776877294649_u128;
_9 = _6.fld1;
_10 = core::ptr::addr_of!(_4.0);
RET = 3528714199_u32 as f32;
_11 = 54_i8 as f32;
_2 = !174030545270351771711431196381870550223_u128;
_9 = [14699393793273653285_u64];
_4 = (32539772501815494748255415577285045080_i128,);
_10 = core::ptr::addr_of!(_4.0);
_9 = [16519479964786451579_u64];
_12 = _2 as f32;
_2 = 177065455548165482302334189294791683244_u128 * 259923584361876604540569605650877981173_u128;
_3 = 17473622714600102239_usize;
_8 = ('\u{1015ee}',);
RET = _12;
_7 = [54006_u16];
_2 = !249373173997818204411198724281694817403_u128;
_13 = -(-16145_i16);
_7 = [32028_u16];
_1 = _11 as u8;
_10 = core::ptr::addr_of!((*_10));
_8.0 = '\u{6fc4e}';
Goto(bb7)
}
bb7 = {
RET = -_11;
_4.0 = -102931668523817948091374667181900658528_i128;
(*_10) = (-162631453357397653955906212411482038447_i128) ^ (-11642963661879658139783670666285509821_i128);
_5 = [_2,_2,_2,_2,_2];
_2 = 222148463436765345676311542657344735369_u128 * 338408714668069369064609930154540083381_u128;
_4 = (168604231297232652196829762542237670253_i128,);
RET = _12;
_2 = !324994606784392245861126077934355361537_u128;
_14 = [818904255_i32,1248207870_i32,612880291_i32,232864384_i32,740947606_i32,431307163_i32];
_11 = _12 * _12;
_16 = [false,true,false,true,false,true,true,false];
_2 = _4.0 as u128;
_8 = ('\u{6236e}',);
_18.fld1 = -(-124_i8);
Goto(bb8)
}
bb8 = {
_17.fld2.6 = ((-9223372036854775808_isize), _18.fld1);
_17.fld3 = _1;
(*_10) = (-49601975997280736988105361537913603141_i128);
_20 = [_2,_2,_2,_2,_2];
_17.fld2.6.0 = (-9223372036854775808_isize) * 24_isize;
_17.fld2.2.0 = _6.fld1;
_17.fld3 = _13 as u8;
_17.fld2.6 = ((-9223372036854775808_isize), _18.fld1);
(*_10) = _17.fld2.6.1 as i128;
_17.fld2.2.1 = _2;
_21.0 = [1259783096653670372_u64];
_17.fld2.2.2 = !836096013693421983_i64;
_17.fld2.6.0 = 9223372036854775807_isize;
_18 = Adt56 { fld0: false,fld1: _17.fld2.6.1 };
_7 = [43258_u16];
_1 = !_17.fld3;
_14 = [(-1455867041_i32),1756826515_i32,(-249143009_i32),964913324_i32,(-875251921_i32),(-1539763870_i32)];
_17.fld1 = core::ptr::addr_of_mut!(_17.fld2.2.2);
_17.fld2.6.0 = 56_isize;
_12 = _17.fld2.6.0 as f32;
_19.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_17.fld2.4 = core::ptr::addr_of_mut!(_17.fld1);
_17.fld2.2.2 = _17.fld2.6.0 as i64;
Call(_21.2 = fn1(_3, _10, (*_10), _17.fld2.2.0, _6.fld1, _17.fld1, _10, _4, (*_10)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_21 = _17.fld2.2;
_7 = [61248_u16];
_17.fld2.3 = [_4.0];
_21.0 = _6.fld1;
_17.fld3 = _1;
_6 = Adt52 { fld0: _17.fld2.4,fld1: _17.fld2.2.0 };
_17.fld2.2.2 = _21.2 * _21.2;
_5 = _20;
_17.fld1 = core::ptr::addr_of_mut!(_17.fld2.2.2);
_2 = _17.fld2.2.2 as u128;
_24 = _8.0;
Goto(bb10)
}
bb10 = {
_15 = [_18.fld0,_18.fld0,_18.fld0,_18.fld0,_18.fld0,_18.fld0,_18.fld0,_18.fld0];
_17.fld1 = core::ptr::addr_of_mut!(_17.fld2.2.2);
_17.fld3 = _1 << (*_10);
_4.0 = (-66115458331393161979196081180714364167_i128) << _21.2;
_9 = [1049489575305183746_u64];
_23 = _16;
_17.fld2.0 = [_18.fld1,_17.fld2.6.1,_17.fld2.6.1,_17.fld2.6.1,_18.fld1,_18.fld1,_17.fld2.6.1];
_21.0 = _17.fld2.2.0;
_26.2.4 = -_12;
_19.fld1.1 = -_11;
_19.fld1.1 = -_11;
_4 = (89990693022699839342602167945994089666_i128,);
_18.fld1 = !_17.fld2.6.1;
_26.2.3 = 1406976410_u32 as f64;
_11 = 3676330918963416030_u64 as f32;
_4.0 = 5383917000717915237320794593107918480_i128 << _17.fld2.6.1;
_17.fld2.3 = [(*_10)];
_26.3 = [_24,_8.0,_8.0,_8.0,_8.0,_8.0];
_13 = _17.fld2.6.0 as i16;
_4.0 = -3822585706740571596343851802706389350_i128;
match _3 {
0 => bb1,
1 => bb7,
2 => bb9,
3 => bb11,
4 => bb12,
5 => bb13,
17473622714600102239 => bb15,
_ => bb14
}
}
bb11 = {
_21 = _17.fld2.2;
_7 = [61248_u16];
_17.fld2.3 = [_4.0];
_21.0 = _6.fld1;
_17.fld3 = _1;
_6 = Adt52 { fld0: _17.fld2.4,fld1: _17.fld2.2.0 };
_17.fld2.2.2 = _21.2 * _21.2;
_5 = _20;
_17.fld1 = core::ptr::addr_of_mut!(_17.fld2.2.2);
_2 = _17.fld2.2.2 as u128;
_24 = _8.0;
Goto(bb10)
}
bb12 = {
Return()
}
bb13 = {
_1 = 200_u8 << _3;
RET = (-681217055_i32) as f32;
_4.0 = _1 as i128;
_3 = 3_usize % 3_usize;
_1 = !70_u8;
RET = _2 as f32;
_4 = (152754442416154931589117141224499044180_i128,);
_3 = !2454409812147180636_usize;
_3 = !1_usize;
_2 = _3 as u128;
RET = 16204963023894974531_u64 as f32;
RET = 14268_i16 as f32;
RET = _3 as f32;
_4 = ((-120758639325396712938125931176167596474_i128),);
_4 = (130647386062469702967555491397863510431_i128,);
_3 = 8693462576634405441_usize | 16518881969944885906_usize;
_4.0 = !(-137583923212624171888605597973284880516_i128);
_4.0 = !(-55376457377041773208754064865710752777_i128);
RET = 53221_u16 as f32;
_5 = [_2,_2,_2,_2,_2];
RET = (-9223372036854775808_isize) as f32;
_1 = 241_u8 + 48_u8;
RET = _4.0 as f32;
Goto(bb5)
}
bb14 = {
_2 = 164119300281463412961887122776877294649_u128;
_9 = _6.fld1;
_10 = core::ptr::addr_of!(_4.0);
RET = 3528714199_u32 as f32;
_11 = 54_i8 as f32;
_2 = !174030545270351771711431196381870550223_u128;
_9 = [14699393793273653285_u64];
_4 = (32539772501815494748255415577285045080_i128,);
_10 = core::ptr::addr_of!(_4.0);
_9 = [16519479964786451579_u64];
_12 = _2 as f32;
_2 = 177065455548165482302334189294791683244_u128 * 259923584361876604540569605650877981173_u128;
_3 = 17473622714600102239_usize;
_8 = ('\u{1015ee}',);
RET = _12;
_7 = [54006_u16];
_2 = !249373173997818204411198724281694817403_u128;
_13 = -(-16145_i16);
_7 = [32028_u16];
_1 = _11 as u8;
_10 = core::ptr::addr_of!((*_10));
_8.0 = '\u{6fc4e}';
Goto(bb7)
}
bb15 = {
_17.fld2.6.0 = !9223372036854775807_isize;
_17.fld2.2.2 = -_21.2;
_17.fld2.2.1 = !_2;
_14 = [(-1338382152_i32),1178962634_i32,(-1933027046_i32),660657155_i32,872062328_i32,370440883_i32];
_17.fld2.6.0 = 9223372036854775807_isize & 9223372036854775807_isize;
_9 = _21.0;
_12 = _11 * _11;
(*_10) = 27768303127459120007704167701147215838_i128;
_19.fld1.1 = _26.2.3 as f32;
_32 = [(*_10)];
_17.fld0 = [_18.fld0,_18.fld0];
RET = _12;
_9 = _17.fld2.2.0;
_26.1.1 = !_17.fld2.2.1;
RET = -_26.2.4;
_10 = core::ptr::addr_of!((*_10));
_30.0 = _14;
_6.fld1 = [137983596744815459_u64];
_17.fld2.5 = core::ptr::addr_of_mut!(_27);
_19.fld0 = [_24,_24,_24,_8.0,_8.0,_24];
_21.2 = _17.fld2.2.2;
_17.fld2.6 = ((-9223372036854775808_isize), _18.fld1);
_17.fld2.2.2 = _21.2 ^ _21.2;
_30.2.1 = !_17.fld3;
_26.2.2 = [2449251132_u32];
_26.1.2 = _17.fld2.2.2 - _17.fld2.2.2;
_8.0 = _24;
_24 = _8.0;
Goto(bb16)
}
bb16 = {
Call(_34 = dump_var(0_usize, 7_usize, Move(_7), 3_usize, Move(_3), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(0_usize, 4_usize, Move(_4), 8_usize, Move(_8), 2_usize, Move(_2), 21_usize, Move(_21)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: usize,mut _2: *const i128,mut _3: i128,mut _4: [u64; 1],mut _5: [u64; 1],mut _6: *mut i64,mut _7: *const i128,mut _8: (i128,),mut _9: i128) -> i64 {
mir! {
type RET = i64;
let _10: i64;
let _11: i8;
let _12: f64;
let _13: Adt53;
let _14: f32;
let _15: Adt56;
let _16: [u32; 1];
let _17: [u16; 4];
let _18: f64;
let _19: u16;
let _20: f64;
let _21: f64;
let _22: u32;
let _23: i8;
let _24: char;
let _25: [u128; 5];
let _26: bool;
let _27: usize;
let _28: isize;
let _29: Adt51;
let _30: char;
let _31: bool;
let _32: ();
let _33: ();
{
(*_2) = -_3;
_9 = 118177839658766794879712881924710740633_u128 as i128;
(*_7) = _3 | _3;
_7 = _2;
(*_2) = _9;
_6 = core::ptr::addr_of_mut!((*_6));
Call(_8.0 = fn2((*_2), (*_6), _7, _6, _1, _3, _5, _2, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = !(*_6);
_8 = (_9,);
(*_2) = 3058998572_u32 as i128;
_8 = (_9,);
_9 = (-97_i8) as i128;
_7 = core::ptr::addr_of!((*_7));
_1 = 4_usize + 2332372735456500040_usize;
(*_7) = _9 >> _3;
_5 = [7823429414366752847_u64];
_10 = 115_u8 as i64;
_5 = [4688638503934772479_u64];
_8.0 = 3371375052_u32 as i128;
_8.0 = 4155094428_u32 as i128;
_7 = _2;
_1 = 2850925253726287352_usize;
Goto(bb2)
}
bb2 = {
(*_6) = !_10;
RET = -(*_6);
(*_6) = _10 << (*_2);
(*_2) = -_9;
(*_7) = _8.0 << (*_6);
Goto(bb3)
}
bb3 = {
(*_2) = !_3;
(*_7) = _8.0;
_4 = [9150985790433360828_u64];
_2 = core::ptr::addr_of!((*_7));
_10 = (*_6);
(*_7) = -_9;
_12 = 2126_i16 as f64;
_4 = [5496448599287887569_u64];
(*_2) = _8.0;
_7 = _2;
(*_7) = _3;
Goto(bb4)
}
bb4 = {
(*_6) = -_10;
(*_6) = !_10;
(*_6) = -_10;
_6 = core::ptr::addr_of_mut!(_10);
_11 = 51_i8 ^ 65_i8;
_3 = 193_u8 as i128;
RET = -_10;
_10 = 43709700785547773460692933137403476403_u128 as i64;
(*_6) = !(-922845196568245751_i64);
(*_7) = -_9;
_12 = 12042_u16 as f64;
_1 = 5598477858200291695_usize;
_4 = _5;
_13.fld0.4 = core::ptr::addr_of_mut!(_6);
match _1 {
0 => bb2,
1 => bb5,
2 => bb6,
5598477858200291695 => bb8,
_ => bb7
}
}
bb5 = {
(*_2) = !_3;
(*_7) = _8.0;
_4 = [9150985790433360828_u64];
_2 = core::ptr::addr_of!((*_7));
_10 = (*_6);
(*_7) = -_9;
_12 = 2126_i16 as f64;
_4 = [5496448599287887569_u64];
(*_2) = _8.0;
_7 = _2;
(*_7) = _3;
Goto(bb4)
}
bb6 = {
(*_6) = !_10;
RET = -(*_6);
(*_6) = _10 << (*_2);
(*_2) = -_9;
(*_7) = _8.0 << (*_6);
Goto(bb3)
}
bb7 = {
RET = !(*_6);
_8 = (_9,);
(*_2) = 3058998572_u32 as i128;
_8 = (_9,);
_9 = (-97_i8) as i128;
_7 = core::ptr::addr_of!((*_7));
_1 = 4_usize + 2332372735456500040_usize;
(*_7) = _9 >> _3;
_5 = [7823429414366752847_u64];
_10 = 115_u8 as i64;
_5 = [4688638503934772479_u64];
_8.0 = 3371375052_u32 as i128;
_8.0 = 4155094428_u32 as i128;
_7 = _2;
_1 = 2850925253726287352_usize;
Goto(bb2)
}
bb8 = {
_7 = core::ptr::addr_of!(_13.fld3.0);
_2 = core::ptr::addr_of!(_8.0);
_13.fld0.1 = 4206420720148869730_u64 as f64;
(*_6) = 164583249619486161338550851970431912282_u128 as i64;
_13.fld4.3 = ['\u{b4476}','\u{93e0e}','\u{cee61}','\u{f8eba}','\u{f354a}','\u{3913}'];
_13.fld0.4 = core::ptr::addr_of_mut!(_13.fld1);
_8.0 = (-21759_i16) as i128;
_13.fld4.2.2 = [2505669295_u32];
_13.fld4.1 = (_4, 211575508236811295765977986839400398142_u128, _10);
_13.fld4.2.4 = _13.fld4.1.2 as f32;
(*_6) = -_13.fld4.1.2;
_8 = (_9,);
_15 = Adt56 { fld0: false,fld1: _11 };
_13.fld4.2.2 = [3499615996_u32];
_13.fld3.1 = 102_u8;
Goto(bb9)
}
bb9 = {
_13.fld3.3 = _13.fld4.2.4 as f64;
_13.fld5.0 = 9223372036854775807_isize >> _15.fld1;
_10 = !_13.fld4.1.2;
_13.fld3.1 = 52_u8 >> _13.fld5.0;
_13.fld0.2.1 = '\u{2a952}' as u128;
Goto(bb10)
}
bb10 = {
_15 = Adt56 { fld0: true,fld1: _11 };
_18 = _12;
_13.fld0.2.2 = _10 ^ (*_6);
_13.fld3.1 = 3642997747_u32 as u8;
_9 = _3;
_13.fld4.2.4 = _13.fld0.2.2 as f32;
_19 = 23294_u16 & 44834_u16;
_13.fld3.0 = _3 & (*_2);
_13.fld4.0 = [1050903200_i32,1749839097_i32,(-1531319936_i32),1602266834_i32,92842625_i32,40082967_i32];
_8.0 = 26852_i16 as i128;
_15.fld0 = _18 == _18;
Goto(bb11)
}
bb11 = {
_13.fld4.1.0 = _4;
_13.fld3.1 = 206_u8 / 22_u8;
_5 = [4558644203579580805_u64];
_13.fld4.2.1 = !_13.fld3.1;
_13.fld4.2.2 = [3065453562_u32];
_13.fld1 = _6;
_12 = _13.fld3.0 as f64;
_1 = 2_usize >> (*_7);
_13.fld4.2.0 = -(*_7);
_13.fld0.2 = (_4, _13.fld4.1.1, (*_6));
_20 = _13.fld5.0 as f64;
_13.fld2 = _13.fld4.2.2;
_13.fld3.4 = _13.fld4.2.4 * _13.fld4.2.4;
_13.fld4.1.2 = _10;
(*_6) = _13.fld0.2.2 - _13.fld4.1.2;
_13.fld4.0 = [336584684_i32,(-908377406_i32),(-5355582_i32),1390456295_i32,1585848559_i32,1402935147_i32];
_13.fld3 = (_9, _13.fld4.2.1, _13.fld2, _13.fld0.1, _13.fld4.2.4);
_13.fld4.1.2 = _13.fld0.1 as i64;
_13.fld4.2.3 = _19 as f64;
_1 = 15543728250454285131_usize;
_23 = 1984068823731157414_u64 as i8;
_5 = [4982959884586761993_u64];
_4 = _5;
_13.fld4.2 = (_13.fld3.0, _13.fld3.1, _13.fld2, _12, _13.fld3.4);
_23 = _15.fld1;
_24 = '\u{cb51b}';
Call(_13.fld3.2 = core::intrinsics::transmute(_13.fld2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_13.fld0.0 = [_15.fld1,_23,_11,_15.fld1,_15.fld1,_11,_15.fld1];
_24 = '\u{25080}';
_13.fld3.3 = -_13.fld4.2.3;
_15 = Adt56 { fld0: true,fld1: _11 };
_13.fld0.6.0 = _13.fld5.0 ^ _13.fld5.0;
_4 = [1512926997541077297_u64];
_25 = [_13.fld4.1.1,_13.fld0.2.1,_13.fld4.1.1,_13.fld0.2.1,_13.fld4.1.1];
_13.fld4.1.2 = -(*_6);
_13.fld0.6 = (_13.fld5.0, _23);
Goto(bb13)
}
bb13 = {
_13.fld0.2.1 = !_13.fld4.1.1;
match _1 {
0 => bb7,
1 => bb14,
2 => bb15,
15543728250454285131 => bb17,
_ => bb16
}
}
bb14 = {
(*_6) = !_10;
RET = -(*_6);
(*_6) = _10 << (*_2);
(*_2) = -_9;
(*_7) = _8.0 << (*_6);
Goto(bb3)
}
bb15 = {
RET = !(*_6);
_8 = (_9,);
(*_2) = 3058998572_u32 as i128;
_8 = (_9,);
_9 = (-97_i8) as i128;
_7 = core::ptr::addr_of!((*_7));
_1 = 4_usize + 2332372735456500040_usize;
(*_7) = _9 >> _3;
_5 = [7823429414366752847_u64];
_10 = 115_u8 as i64;
_5 = [4688638503934772479_u64];
_8.0 = 3371375052_u32 as i128;
_8.0 = 4155094428_u32 as i128;
_7 = _2;
_1 = 2850925253726287352_usize;
Goto(bb2)
}
bb16 = {
_15 = Adt56 { fld0: true,fld1: _11 };
_18 = _12;
_13.fld0.2.2 = _10 ^ (*_6);
_13.fld3.1 = 3642997747_u32 as u8;
_9 = _3;
_13.fld4.2.4 = _13.fld0.2.2 as f32;
_19 = 23294_u16 & 44834_u16;
_13.fld3.0 = _3 & (*_2);
_13.fld4.0 = [1050903200_i32,1749839097_i32,(-1531319936_i32),1602266834_i32,92842625_i32,40082967_i32];
_8.0 = 26852_i16 as i128;
_15.fld0 = _18 == _18;
Goto(bb11)
}
bb17 = {
_13.fld0.2 = (_5, _13.fld4.1.1, _13.fld4.1.2);
(*_2) = -_13.fld3.0;
_13.fld4.1.0 = _4;
_19 = !36117_u16;
_13.fld0.3 = [_13.fld4.2.0];
_21 = -_18;
_18 = (*_7) as f64;
_13.fld4.2.4 = -_13.fld3.4;
_13.fld3.4 = (-32117_i16) as f32;
_26 = _15.fld0;
_13.fld0.2 = (_4, _13.fld4.1.1, (*_6));
_9 = _13.fld5.0 as i128;
_13.fld5.0 = _13.fld0.6.0;
_2 = core::ptr::addr_of!((*_2));
_13.fld5.1 = _26 as i8;
_13.fld0.2.1 = _26 as u128;
_29.fld3 = !18260382650462332480_u64;
Goto(bb18)
}
bb18 = {
Call(_32 = dump_var(1_usize, 23_usize, Move(_23), 8_usize, Move(_8), 9_usize, Move(_9), 19_usize, Move(_19)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(1_usize, 4_usize, Move(_4), 25_usize, Move(_25), 33_usize, _33, 33_usize, _33), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: i128,mut _2: i64,mut _3: *const i128,mut _4: *mut i64,mut _5: usize,mut _6: i128,mut _7: [u64; 1],mut _8: *const i128,mut _9: usize) -> i128 {
mir! {
type RET = i128;
let _10: char;
let _11: [u32; 1];
let _12: isize;
let _13: i8;
let _14: f64;
let _15: [u32; 3];
let _16: isize;
let _17: u8;
let _18: ([u64; 1], u128, i64);
let _19: char;
let _20: isize;
let _21: Adt58;
let _22: [u64; 2];
let _23: isize;
let _24: i128;
let _25: isize;
let _26: f32;
let _27: (isize, i8);
let _28: ();
let _29: ();
{
(*_8) = _5 as i128;
RET = _6 >> _1;
RET = _6;
RET = (*_3) | _6;
_8 = core::ptr::addr_of!(_6);
(*_8) = -(*_3);
_4 = core::ptr::addr_of_mut!((*_4));
RET = _1;
_3 = _8;
_6 = _1 << _5;
(*_3) = -_1;
_2 = !(*_4);
_9 = _5 + _5;
_2 = !(*_4);
_9 = !_5;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
17473622714600102239 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = -(*_3);
(*_3) = 207_u8 as i128;
_3 = core::ptr::addr_of!(_6);
Call((*_3) = core::intrinsics::bswap(_1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
(*_4) = -_2;
(*_4) = -_2;
_4 = core::ptr::addr_of_mut!((*_4));
(*_8) = _1;
_13 = 66_i8 - 70_i8;
_9 = (-867922244_i32) as usize;
(*_4) = _2 - _2;
_12 = !22_isize;
_2 = (-434310239_i32) as i64;
(*_8) = -_1;
_10 = '\u{b756a}';
RET = _6 & _1;
_15 = [3836537728_u32,3487795990_u32,2862062334_u32];
match _5 {
0 => bb7,
1 => bb6,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb9,
17473622714600102239 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_18 = (_7, 233115654393820647386140605582917128700_u128, (*_4));
_18.2 = !(*_4);
RET = -_6;
_8 = core::ptr::addr_of!((*_8));
_7 = [15623734693173428526_u64];
(*_4) = _2 & _18.2;
(*_8) = _1;
_11 = [881289972_u32];
_14 = _18.2 as f64;
_11 = [3582171293_u32];
(*_4) = !_2;
_10 = '\u{edbaa}';
_18.1 = _5 as u128;
_1 = -(*_3);
_19 = _10;
_16 = _12;
_3 = core::ptr::addr_of!(_1);
(*_3) = -_6;
_7 = [10239269798032970240_u64];
_11 = [2912510197_u32];
_11 = [2149987187_u32];
_16 = _12;
RET = -(*_3);
(*_4) = _2;
match _5 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb9,
17473622714600102239 => bb12,
_ => bb10
}
}
bb12 = {
_21.fld2.fld1 = [3641267814286275588_u64];
match _5 {
0 => bb1,
1 => bb8,
2 => bb5,
17473622714600102239 => bb13,
_ => bb11
}
}
bb13 = {
_21.fld2.fld0 = core::ptr::addr_of_mut!(_4);
_21.fld2.fld0 = core::ptr::addr_of_mut!(_4);
_21.fld3 = [_19,_19,_10,_19,_19,_19];
_18.0 = [561830448007822989_u64];
(*_8) = (-323665194_i32) as i128;
_14 = 960343829_i32 as f64;
RET = !_1;
_18.2 = true as i64;
_22 = [10040193412942831520_u64,11165917955611593390_u64];
_21.fld2.fld0 = core::ptr::addr_of_mut!(_4);
_20 = _19 as isize;
_18.1 = _10 as u128;
_5 = _9;
_21.fld3 = [_10,_19,_10,_10,_19,_19];
_21.fld0.0 = _10;
_19 = _21.fld0.0;
_6 = _13 as i128;
(*_3) = 9157238890610957066_u64 as i128;
_24 = (*_8) ^ _6;
(*_8) = _24 + _24;
_17 = !148_u8;
Call(_7 = fn3(_16, _21.fld0.0, _21.fld0.0, _8, _21.fld2.fld1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
(*_3) = -_6;
_21.fld1 = _13 as f64;
_25 = -_20;
(*_3) = (*_8);
(*_8) = -(*_3);
_21.fld2.fld1 = _7;
_21.fld0 = (_19,);
_19 = _21.fld0.0;
_10 = _19;
_7 = [17484064343065266860_u64];
_20 = _16 | _25;
_13 = 9_i8 >> _6;
_11 = [2357051578_u32];
RET = -(*_3);
_11 = [3456737351_u32];
_27.0 = _20 ^ _16;
_21.fld0 = (_19,);
_3 = _8;
_12 = !_16;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(2_usize, 11_usize, Move(_11), 20_usize, Move(_20), 18_usize, Move(_18), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(2_usize, 6_usize, Move(_6), 17_usize, Move(_17), 5_usize, Move(_5), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(2_usize, 9_usize, Move(_9), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: isize,mut _2: char,mut _3: char,mut _4: *const i128,mut _5: [u64; 1]) -> [u64; 1] {
mir! {
type RET = [u64; 1];
let _6: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _7: isize;
let _8: Adt63;
let _9: bool;
let _10: u128;
let _11: Adt53;
let _12: f32;
let _13: isize;
let _14: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _15: isize;
let _16: [i8; 7];
let _17: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _18: i16;
let _19: f32;
let _20: ([i32; 6], *mut *mut u32, (isize, i8));
let _21: isize;
let _22: bool;
let _23: [u64; 1];
let _24: [u64; 1];
let _25: f32;
let _26: isize;
let _27: f32;
let _28: isize;
let _29: bool;
let _30: [u128; 5];
let _31: ();
let _32: ();
{
_6.0 = [(-1836083865_i32),(-115550236_i32),1795472357_i32,(-537762647_i32),(-606245680_i32),115044790_i32];
_6.1.1 = !44899836385620717033606318419620727078_u128;
_6.2.1 = _6.1.1 as u8;
_6.0 = [(-572018074_i32),333181254_i32,913138296_i32,(-1469929409_i32),(-2070423489_i32),(-2139423624_i32)];
RET = [3492406192012500705_u64];
_6.1.0 = [4333584995497138150_u64];
_5 = [17665131057508726471_u64];
_6.2.3 = _6.2.1 as f64;
_6.1.1 = 230550136433653165088221560279448061622_u128;
_6.1.2 = !3738980513581189792_i64;
_4 = core::ptr::addr_of!((*_4));
_6.1.0 = [10997550294616708927_u64];
_6.2.0 = (*_4);
_3 = _2;
_6.2.3 = (-530074573_i32) as f64;
RET = [10498002518472616370_u64];
_8.fld4 = 444342885_i32 as i16;
_6.2.3 = 65529_u16 as f64;
match _6.1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
230550136433653165088221560279448061622 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_6.1.1 = 35_i8 as u128;
_6.3 = [_3,_2,_2,_2,_2,_3];
_8.fld0 = core::ptr::addr_of_mut!(_6.1.2);
_6.3 = [_3,_3,_2,_2,_3,_3];
_8.fld0 = core::ptr::addr_of_mut!(_6.1.2);
Goto(bb7)
}
bb7 = {
_1 = 957523213_i32 as isize;
_6.3 = [_3,_2,_3,_2,_2,_2];
Call(_6.1 = fn4(_6.2.0, _4, _1, _6.3, (*_4), _4, _6.3, (*_4), _6.0, _8.fld4, _8.fld0, _4, _4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6.1.0 = [12176784164127992305_u64];
_6.1 = (_5, 309191079142581654928719533613202160282_u128, (-5807017598271315343_i64));
_8.fld4 = 9450_i16;
_8.fld0 = core::ptr::addr_of_mut!(_6.1.2);
_6.1 = (_5, 192693999412220717296502558047717360506_u128, (-8897335944760283758_i64));
_6.2.0 = (*_4);
_6.0 = [1310654550_i32,(-1909423702_i32),1929868656_i32,(-307746211_i32),1576680005_i32,(-2038427235_i32)];
(*_4) = -_6.2.0;
_11.fld0.6.0 = _1;
_11.fld3.1 = !_6.2.1;
_11.fld3.0 = -_6.2.0;
RET = [17691829105958982119_u64];
_11.fld4.2.2 = [2029100731_u32];
_6.1 = (_5, 313459036820843770877024455930624601672_u128, (-6773873321484140044_i64));
_11.fld4.2.2 = [793127064_u32];
_11.fld4.2.4 = (-1104267768_i32) as f32;
_6.2.2 = _11.fld4.2.2;
_11.fld0.6.0 = _1;
_11.fld4.2.2 = [2378330291_u32];
_8.fld3 = [false,true];
_11.fld3 = ((*_4), _6.2.1, _6.2.2, _6.2.3, _11.fld4.2.4);
_11.fld5.0 = _11.fld0.6.0 << (*_4);
_11.fld4.3 = [_2,_2,_2,_2,_3,_3];
(*_4) = _6.2.1 as i128;
_11.fld4.1.0 = [16126793316965632639_u64];
_11.fld0.6.0 = _11.fld3.3 as isize;
_11.fld1 = core::ptr::addr_of_mut!(_6.1.2);
_11.fld5 = (_1, 59_i8);
match _6.1.2 {
340282366920938463456600734110284071412 => bb9,
_ => bb2
}
}
bb9 = {
_10 = !_6.1.1;
_11.fld4 = (_6.0, _6.1, _11.fld3, _6.3);
_7 = _1;
Goto(bb10)
}
bb10 = {
_6.2 = (_11.fld4.2.0, _11.fld4.2.1, _11.fld3.2, _11.fld3.3, _11.fld3.4);
_6.2.4 = -_11.fld4.2.4;
_11.fld0.2.2 = !_6.1.2;
_11.fld0.6 = (_11.fld5.0, _11.fld5.1);
Call(_11.fld4.1.0 = core::intrinsics::transmute(_11.fld0.6.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_6.1.0 = [10506990118111834877_u64];
_11.fld4.2.4 = _11.fld3.4;
_12 = _11.fld4.2.4 + _6.2.4;
_14.2 = _11.fld3;
_6.2.4 = -_14.2.4;
RET = _6.1.0;
_11.fld0.2.1 = _6.1.1;
_4 = core::ptr::addr_of!((*_4));
_6.1.0 = [16552159679340560882_u64];
_3 = _2;
_14.0 = [293703012_i32,(-1534196428_i32),(-817242139_i32),(-781963513_i32),1908207600_i32,(-971628760_i32)];
_8.fld1 = _11.fld4.2.1 * _6.2.1;
_14.2.2 = _11.fld4.2.2;
_14.1.1 = !_10;
_11.fld5.0 = _11.fld0.6.0;
_11.fld4.2.4 = _11.fld3.4 / 0.000000000000000000000000000000000000008685984964877451_f32;
_11.fld3 = (_11.fld4.2.0, _8.fld1, _14.2.2, _14.2.3, _12);
_14.1.2 = _14.2.3 as i64;
_11.fld0.6.0 = !_11.fld5.0;
_11.fld0.6.1 = _14.2.1 as i8;
_11.fld0.2.0 = [1018243768086408524_u64];
Goto(bb12)
}
bb12 = {
_11.fld3.0 = _6.2.0 - _6.2.0;
_11.fld3.4 = -_11.fld4.2.4;
_11.fld3.2 = _6.2.2;
_2 = _3;
_11.fld0.0 = [_11.fld0.6.1,_11.fld5.1,_11.fld5.1,_11.fld5.1,_11.fld5.1,_11.fld0.6.1,_11.fld0.6.1];
(*_4) = _14.2.0 - _6.2.0;
_11.fld4.1 = (_6.1.0, _11.fld0.2.1, _11.fld0.2.2);
_11.fld4.2.1 = 2500162677_u32 as u8;
_14.2.2 = _11.fld3.2;
_6 = _11.fld4;
_8.fld0 = core::ptr::addr_of_mut!(_11.fld0.2.2);
_11.fld4.1 = _6.1;
_6.1.2 = _11.fld4.1.2 | _11.fld4.1.2;
_16 = [_11.fld0.6.1,_11.fld5.1,_11.fld5.1,_11.fld5.1,_11.fld5.1,_11.fld5.1,_11.fld0.6.1];
Goto(bb13)
}
bb13 = {
_6.2.4 = _11.fld4.1.1 as f32;
_14.2.0 = 4934288100359712480_u64 as i128;
_11.fld0.2.1 = _6.1.1 - _11.fld4.1.1;
_17.1.2 = _6.1.2 << (*_4);
match _6.1.1 {
0 => bb5,
1 => bb2,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
313459036820843770877024455930624601672 => bb19,
_ => bb18
}
}
bb14 = {
Return()
}
bb15 = {
_1 = 957523213_i32 as isize;
_6.3 = [_3,_2,_3,_2,_2,_2];
Call(_6.1 = fn4(_6.2.0, _4, _1, _6.3, (*_4), _4, _6.3, (*_4), _6.0, _8.fld4, _8.fld0, _4, _4), ReturnTo(bb8), UnwindUnreachable())
}
bb16 = {
_6.2 = (_11.fld4.2.0, _11.fld4.2.1, _11.fld3.2, _11.fld3.3, _11.fld3.4);
_6.2.4 = -_11.fld4.2.4;
_11.fld0.2.2 = !_6.1.2;
_11.fld0.6 = (_11.fld5.0, _11.fld5.1);
Call(_11.fld4.1.0 = core::intrinsics::transmute(_11.fld0.6.0), ReturnTo(bb11), UnwindUnreachable())
}
bb17 = {
Return()
}
bb18 = {
_6.1.0 = [12176784164127992305_u64];
_6.1 = (_5, 309191079142581654928719533613202160282_u128, (-5807017598271315343_i64));
_8.fld4 = 9450_i16;
_8.fld0 = core::ptr::addr_of_mut!(_6.1.2);
_6.1 = (_5, 192693999412220717296502558047717360506_u128, (-8897335944760283758_i64));
_6.2.0 = (*_4);
_6.0 = [1310654550_i32,(-1909423702_i32),1929868656_i32,(-307746211_i32),1576680005_i32,(-2038427235_i32)];
(*_4) = -_6.2.0;
_11.fld0.6.0 = _1;
_11.fld3.1 = !_6.2.1;
_11.fld3.0 = -_6.2.0;
RET = [17691829105958982119_u64];
_11.fld4.2.2 = [2029100731_u32];
_6.1 = (_5, 313459036820843770877024455930624601672_u128, (-6773873321484140044_i64));
_11.fld4.2.2 = [793127064_u32];
_11.fld4.2.4 = (-1104267768_i32) as f32;
_6.2.2 = _11.fld4.2.2;
_11.fld0.6.0 = _1;
_11.fld4.2.2 = [2378330291_u32];
_8.fld3 = [false,true];
_11.fld3 = ((*_4), _6.2.1, _6.2.2, _6.2.3, _11.fld4.2.4);
_11.fld5.0 = _11.fld0.6.0 << (*_4);
_11.fld4.3 = [_2,_2,_2,_2,_3,_3];
(*_4) = _6.2.1 as i128;
_11.fld4.1.0 = [16126793316965632639_u64];
_11.fld0.6.0 = _11.fld3.3 as isize;
_11.fld1 = core::ptr::addr_of_mut!(_6.1.2);
_11.fld5 = (_1, 59_i8);
match _6.1.2 {
340282366920938463456600734110284071412 => bb9,
_ => bb2
}
}
bb19 = {
_11.fld2 = _11.fld4.2.2;
_3 = _2;
_10 = !_11.fld0.2.1;
_8.fld0 = core::ptr::addr_of_mut!(_6.1.2);
_20.0 = [(-418359911_i32),1603034812_i32,(-2026072237_i32),1048730717_i32,(-1340504500_i32),1212315400_i32];
_11.fld0.1 = 10730_u16 as f64;
_6 = _11.fld4;
_10 = (-588143596_i32) as u128;
_6.1.1 = _11.fld0.2.1;
_11.fld4.1.1 = _6.2.3 as u128;
_14.1 = (_11.fld0.2.0, _6.1.1, _17.1.2);
_6.1.0 = [10214262639200246680_u64];
_17.2.3 = _11.fld3.3;
_11.fld4.0 = [(-1535126898_i32),709393060_i32,(-271161760_i32),(-1300022948_i32),(-973168607_i32),2145280281_i32];
_17.2 = (_11.fld3.0, _8.fld1, _11.fld2, _6.2.3, _11.fld3.4);
_14.3 = [_2,_2,_2,_2,_3,_3];
_26 = _1;
_11.fld4.1 = (_5, _6.1.1, _17.1.2);
_9 = false;
Goto(bb20)
}
bb20 = {
Call(_31 = dump_var(3_usize, 1_usize, Move(_1), 2_usize, Move(_2), 10_usize, Move(_10), 5_usize, Move(_5)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i128,mut _2: *const i128,mut _3: isize,mut _4: [char; 6],mut _5: i128,mut _6: *const i128,mut _7: [char; 6],mut _8: i128,mut _9: [i32; 6],mut _10: i16,mut _11: *mut i64,mut _12: *const i128,mut _13: *const i128) -> ([u64; 1], u128, i64) {
mir! {
type RET = ([u64; 1], u128, i64);
let _14: char;
let _15: isize;
let _16: [i32; 6];
let _17: u32;
let _18: isize;
let _19: (u16, ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)), [u64; 1]);
let _20: i32;
let _21: char;
let _22: [u128; 6];
let _23: [i128; 1];
let _24: i128;
let _25: isize;
let _26: Adt62;
let _27: [u64; 2];
let _28: f32;
let _29: f32;
let _30: u16;
let _31: u64;
let _32: Adt54;
let _33: Adt59;
let _34: ();
let _35: ();
{
RET.2 = 6682752581157270244_i64;
RET.0 = [10028863889437509439_u64];
_8 = !_5;
_8 = (*_2) * (*_2);
RET.2 = (-7689993658874782171_i64) << (*_13);
_16 = _9;
_3 = 1493930968_u32 as isize;
_14 = '\u{ffcc6}';
RET.2 = (-5188345961258764194_i64) & (-4800848236889070968_i64);
_14 = '\u{b45c6}';
_7 = [_14,_14,_14,_14,_14,_14];
RET.2 = (*_6) as i64;
_2 = core::ptr::addr_of!((*_13));
_4 = [_14,_14,_14,_14,_14,_14];
RET.1 = !224188849511208605105713890923275489834_u128;
Call((*_2) = fn5(_7, _6, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_13) = _3 as i128;
_17 = !1852829433_u32;
_19.1.6.1 = 46_i8 << (*_13);
Call(_5 = core::intrinsics::bswap(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = core::ptr::addr_of_mut!(_19.1.2.2);
_19.1.0 = [_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1];
_19.1.4 = core::ptr::addr_of_mut!(_11);
RET.1 = 219486361132416725257904963495596606115_u128 & 157064582674951813438129175298351457002_u128;
_19.1.6.0 = -_3;
_19.1.4 = core::ptr::addr_of_mut!(_11);
(*_13) = _5;
_18 = -_19.1.6.0;
_19.1.2.0 = [7324500062691777180_u64];
(*_12) = 10822920855503379004_u64 as i128;
_20 = _19.1.6.0 as i32;
RET.2 = !268394207327012552_i64;
(*_2) = !_5;
_18 = _3 << (*_13);
_2 = core::ptr::addr_of!(_5);
_19.2 = [9434240104906030161_u64];
RET.2 = !9180976613789834701_i64;
_19.1.2.0 = _19.2;
Goto(bb3)
}
bb3 = {
_3 = false as isize;
(*_6) = _8 + (*_2);
_21 = _14;
(*_13) = _8 - _1;
_19.1.2 = (_19.2, 61548142011599639819716067385221729070_u128, 1340496685187560325_i64);
_22 = [_19.1.2.1,_19.1.2.1,_19.1.2.1,_19.1.2.1,_19.1.2.1,_19.1.2.1];
Call(_25 = core::intrinsics::transmute((*_11)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_19.0 = 40434_u16 << (*_6);
_2 = _12;
_6 = core::ptr::addr_of!(_8);
_19.1.4 = core::ptr::addr_of_mut!(_11);
Goto(bb5)
}
bb5 = {
_19.1.1 = _19.1.2.2 as f64;
_19.1.6.0 = _25;
(*_6) = -(*_12);
_19.1.6.1 = -63_i8;
_19.0 = _25 as u16;
_3 = (*_12) as isize;
_19.1.2.1 = !198719180471488830599632382525351251848_u128;
RET.2 = 69_u8 as i64;
_15 = _3 & _18;
_1 = false as i128;
_19.0 = !19365_u16;
_28 = _17 as f32;
Goto(bb6)
}
bb6 = {
_13 = core::ptr::addr_of!(_24);
_19.1.3 = [(*_2)];
RET.2 = (*_11) ^ (*_11);
_19.1.4 = core::ptr::addr_of_mut!(_11);
_2 = core::ptr::addr_of!((*_12));
_24 = _10 as i128;
RET = (_19.1.2.0, _19.1.2.1, (*_11));
match (*_11) {
0 => bb1,
1 => bb5,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
1340496685187560325 => bb12,
_ => bb11
}
}
bb7 = {
_19.1.1 = _19.1.2.2 as f64;
_19.1.6.0 = _25;
(*_6) = -(*_12);
_19.1.6.1 = -63_i8;
_19.0 = _25 as u16;
_3 = (*_12) as isize;
_19.1.2.1 = !198719180471488830599632382525351251848_u128;
RET.2 = 69_u8 as i64;
_15 = _3 & _18;
_1 = false as i128;
_19.0 = !19365_u16;
_28 = _17 as f32;
Goto(bb6)
}
bb8 = {
_19.0 = 40434_u16 << (*_6);
_2 = _12;
_6 = core::ptr::addr_of!(_8);
_19.1.4 = core::ptr::addr_of_mut!(_11);
Goto(bb5)
}
bb9 = {
_3 = false as isize;
(*_6) = _8 + (*_2);
_21 = _14;
(*_13) = _8 - _1;
_19.1.2 = (_19.2, 61548142011599639819716067385221729070_u128, 1340496685187560325_i64);
_22 = [_19.1.2.1,_19.1.2.1,_19.1.2.1,_19.1.2.1,_19.1.2.1,_19.1.2.1];
Call(_25 = core::intrinsics::transmute((*_11)), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_11 = core::ptr::addr_of_mut!(_19.1.2.2);
_19.1.0 = [_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1,_19.1.6.1];
_19.1.4 = core::ptr::addr_of_mut!(_11);
RET.1 = 219486361132416725257904963495596606115_u128 & 157064582674951813438129175298351457002_u128;
_19.1.6.0 = -_3;
_19.1.4 = core::ptr::addr_of_mut!(_11);
(*_13) = _5;
_18 = -_19.1.6.0;
_19.1.2.0 = [7324500062691777180_u64];
(*_12) = 10822920855503379004_u64 as i128;
_20 = _19.1.6.0 as i32;
RET.2 = !268394207327012552_i64;
(*_2) = !_5;
_18 = _3 << (*_13);
_2 = core::ptr::addr_of!(_5);
_19.2 = [9434240104906030161_u64];
RET.2 = !9180976613789834701_i64;
_19.1.2.0 = _19.2;
Goto(bb3)
}
bb11 = {
(*_13) = _3 as i128;
_17 = !1852829433_u32;
_19.1.6.1 = 46_i8 << (*_13);
Call(_5 = core::intrinsics::bswap(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
RET.0 = _19.2;
_6 = core::ptr::addr_of!((*_12));
_23 = [(*_6)];
(*_6) = _1;
_15 = _18;
_1 = _8;
_29 = -_28;
Goto(bb13)
}
bb13 = {
_19.1.1 = 13115702917918690712_u64 as f64;
(*_11) = !4801946475808426922_i64;
(*_11) = 2672234828180093035_i64;
Goto(bb14)
}
bb14 = {
_32.fld2.6 = _19.1.6;
RET.1 = !_19.1.2.1;
_26.fld0 = [890098329537983805_u64,8830615897481448758_u64];
_25 = _3;
_31 = !9829257833262996461_u64;
_33.fld2 = -_15;
_32.fld2.2.0 = [_31];
_15 = _25;
_18 = _29 as isize;
_26.fld0 = [_31,_31];
_13 = core::ptr::addr_of!((*_6));
_8 = -_1;
_19.1.0 = [_19.1.6.1,_19.1.6.1,_32.fld2.6.1,_32.fld2.6.1,_32.fld2.6.1,_19.1.6.1,_32.fld2.6.1];
_33.fld3 = [_19.0,_19.0,_19.0,_19.0];
_17 = !3577623927_u32;
_32.fld2.6.1 = _19.1.6.1 << _1;
_27 = [_31,_31];
_5 = _1;
(*_6) = _8 + _24;
_19.1.5 = core::ptr::addr_of_mut!(_20);
_32.fld2.2 = (_19.1.2.0, _19.1.2.1, (*_11));
_12 = core::ptr::addr_of!(_1);
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(4_usize, 14_usize, Move(_14), 20_usize, Move(_20), 8_usize, Move(_8), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(4_usize, 15_usize, Move(_15), 21_usize, Move(_21), 25_usize, Move(_25), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(4_usize, 16_usize, Move(_16), 10_usize, Move(_10), 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: [char; 6],mut _2: *const i128,mut _3: [char; 6]) -> i128 {
mir! {
type RET = i128;
let _4: *mut i32;
let _5: i128;
let _6: isize;
let _7: u32;
let _8: ([i32; 6], *mut *mut u32, (isize, i8));
let _9: f64;
let _10: [i8; 7];
let _11: [u64; 2];
let _12: f64;
let _13: isize;
let _14: bool;
let _15: [u16; 1];
let _16: Adt56;
let _17: bool;
let _18: *mut f64;
let _19: [u64; 1];
let _20: [char; 6];
let _21: [i128; 1];
let _22: Adt58;
let _23: i8;
let _24: [u64; 2];
let _25: i64;
let _26: i32;
let _27: isize;
let _28: char;
let _29: Adt63;
let _30: Adt62;
let _31: isize;
let _32: i16;
let _33: u16;
let _34: u16;
let _35: u32;
let _36: [char; 6];
let _37: isize;
let _38: [u32; 1];
let _39: isize;
let _40: u32;
let _41: [u32; 3];
let _42: (i128, u8, [u32; 1], f64, f32);
let _43: (*mut i32, *mut i64);
let _44: char;
let _45: [i128; 1];
let _46: ();
let _47: ();
{
RET = -(-138448279753364246873444725218944787560_i128);
RET = !95245299000528473046856188676435254997_i128;
_3 = _1;
RET = (-159262882562218984511912189079009633226_i128);
_3 = ['\u{89060}','\u{c505d}','\u{18d3d}','\u{49bfc}','\u{42d49}','\u{109420}'];
RET = -(-13300726848520568234484831782799920805_i128);
RET = (-168919838926048632995306558951540474188_i128);
_5 = '\u{3e5bf}' as i128;
_5 = 5599315860740258543_u64 as i128;
_2 = core::ptr::addr_of!(_5);
_3 = ['\u{61387}','\u{5995e}','\u{75f5b}','\u{10b353}','\u{fb749}','\u{3cc42}'];
(*_2) = !69050212391298194626598955690430944139_i128;
_6 = 9223372036854775807_isize * (-101_isize);
_6 = 27622_u16 as isize;
_6 = (-9223372036854775808_isize);
RET = (*_2) - _5;
(*_2) = (-104277226123213931782612615003008722632_i128) ^ 91622442727466607868442881580477183782_i128;
(*_2) = (-85349796868297605063239422480334615182_i128);
(*_2) = 34960290450305416856154282443994738104_i128;
_6 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_8.2 = (_6, (-100_i8));
_3 = ['\u{797e8}','\u{108a2b}','\u{89b3b}','\u{a9769}','\u{225c7}','\u{d452b}'];
_1 = ['\u{7bc5f}','\u{537cb}','\u{6588b}','\u{6021d}','\u{f0337}','\u{b217c}'];
_8.2 = (_6, 113_i8);
Call(_9 = fn6((*_2), _8.2.1, _5, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = [_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1];
_6 = _8.2.1 as isize;
_8.0 = [1986884910_i32,1445332699_i32,1893701204_i32,151323136_i32,(-786876089_i32),(-1352600196_i32)];
_6 = _8.2.0;
RET = !(*_2);
_8.2.1 = -(-19_i8);
_12 = (-3601_i16) as f64;
_7 = 3417972165_u32 + 2344483369_u32;
_6 = !_8.2.0;
RET = 288414217188028991822123954186531444909_u128 as i128;
_8.2.1 = -97_i8;
_15 = [46868_u16];
_16.fld1 = -_8.2.1;
_13 = _6;
_11 = [21021565151666954_u64,13287091143984302070_u64];
Goto(bb2)
}
bb2 = {
_16 = Adt56 { fld0: false,fld1: _8.2.1 };
_15 = [30287_u16];
_17 = _7 <= _7;
_17 = (*_2) == (*_2);
_1 = ['\u{22e76}','\u{eec1e}','\u{c66f5}','\u{b0648}','\u{b7855}','\u{6dc6c}'];
_17 = _7 != _7;
_6 = _13 & _13;
_15 = [18639_u16];
_16.fld0 = _17;
_16 = Adt56 { fld0: _17,fld1: _8.2.1 };
_8.2.0 = 98_u8 as isize;
_9 = _12;
_16.fld1 = _5 as i8;
RET = (-1559476552_i32) as i128;
_19 = [9099915858373192417_u64];
(*_2) = 108166820487351548694291847375815313325_i128;
_18 = core::ptr::addr_of_mut!(_9);
(*_2) = 49771662532102187217255401597786895961_i128;
_21 = [_5];
_20 = ['\u{f13f9}','\u{6d18a}','\u{bee8}','\u{15920}','\u{937d1}','\u{94894}'];
_9 = _12 - _12;
_10 = [_8.2.1,_16.fld1,_8.2.1,_8.2.1,_16.fld1,_16.fld1,_16.fld1];
_13 = (*_18) as isize;
Goto(bb3)
}
bb3 = {
_17 = !_16.fld0;
_2 = core::ptr::addr_of!(_5);
RET = (*_2);
_5 = !157299861757475110896560099176443176000_i128;
_22.fld0.0 = '\u{29a1}';
_8.2.1 = -_16.fld1;
_8.2 = (_13, _16.fld1);
_22.fld0.0 = '\u{85aa7}';
_6 = -_13;
_24 = _11;
_8.2.0 = !_6;
_22.fld0 = ('\u{5c123}',);
Goto(bb4)
}
bb4 = {
_12 = (*_18);
_9 = 957557025_i32 as f64;
_5 = 5905_u16 as i128;
_22.fld3 = _3;
_29.fld1 = 227_u8;
_28 = _22.fld0.0;
_14 = !_17;
Goto(bb5)
}
bb5 = {
_17 = _14 ^ _16.fld0;
_28 = _22.fld0.0;
_25 = (-3407349720003827818_i64);
_26 = (-439777875_i32);
_29.fld1 = !194_u8;
_22.fld3 = _1;
_29.fld0 = core::ptr::addr_of_mut!(_25);
_22.fld1 = _12 - _12;
_30.fld0 = _11;
(*_18) = -_22.fld1;
_22.fld3 = [_22.fld0.0,_28,_22.fld0.0,_28,_28,_22.fld0.0];
_23 = _25 as i8;
_10 = [_16.fld1,_23,_16.fld1,_8.2.1,_23,_16.fld1,_16.fld1];
_25 = 1371410741660688796_i64;
_4 = core::ptr::addr_of_mut!(_26);
_23 = !_16.fld1;
_16 = Adt56 { fld0: _17,fld1: _8.2.1 };
_22.fld0.0 = _28;
_12 = _9;
match (*_4) {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431328433581 => bb14,
_ => bb13
}
}
bb6 = {
_12 = (*_18);
_9 = 957557025_i32 as f64;
_5 = 5905_u16 as i128;
_22.fld3 = _3;
_29.fld1 = 227_u8;
_28 = _22.fld0.0;
_14 = !_17;
Goto(bb5)
}
bb7 = {
_17 = !_16.fld0;
_2 = core::ptr::addr_of!(_5);
RET = (*_2);
_5 = !157299861757475110896560099176443176000_i128;
_22.fld0.0 = '\u{29a1}';
_8.2.1 = -_16.fld1;
_8.2 = (_13, _16.fld1);
_22.fld0.0 = '\u{85aa7}';
_6 = -_13;
_24 = _11;
_8.2.0 = !_6;
_22.fld0 = ('\u{5c123}',);
Goto(bb4)
}
bb8 = {
_16 = Adt56 { fld0: false,fld1: _8.2.1 };
_15 = [30287_u16];
_17 = _7 <= _7;
_17 = (*_2) == (*_2);
_1 = ['\u{22e76}','\u{eec1e}','\u{c66f5}','\u{b0648}','\u{b7855}','\u{6dc6c}'];
_17 = _7 != _7;
_6 = _13 & _13;
_15 = [18639_u16];
_16.fld0 = _17;
_16 = Adt56 { fld0: _17,fld1: _8.2.1 };
_8.2.0 = 98_u8 as isize;
_9 = _12;
_16.fld1 = _5 as i8;
RET = (-1559476552_i32) as i128;
_19 = [9099915858373192417_u64];
(*_2) = 108166820487351548694291847375815313325_i128;
_18 = core::ptr::addr_of_mut!(_9);
(*_2) = 49771662532102187217255401597786895961_i128;
_21 = [_5];
_20 = ['\u{f13f9}','\u{6d18a}','\u{bee8}','\u{15920}','\u{937d1}','\u{94894}'];
_9 = _12 - _12;
_10 = [_8.2.1,_16.fld1,_8.2.1,_8.2.1,_16.fld1,_16.fld1,_16.fld1];
_13 = (*_18) as isize;
Goto(bb3)
}
bb9 = {
_10 = [_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1];
_6 = _8.2.1 as isize;
_8.0 = [1986884910_i32,1445332699_i32,1893701204_i32,151323136_i32,(-786876089_i32),(-1352600196_i32)];
_6 = _8.2.0;
RET = !(*_2);
_8.2.1 = -(-19_i8);
_12 = (-3601_i16) as f64;
_7 = 3417972165_u32 + 2344483369_u32;
_6 = !_8.2.0;
RET = 288414217188028991822123954186531444909_u128 as i128;
_8.2.1 = -97_i8;
_15 = [46868_u16];
_16.fld1 = -_8.2.1;
_13 = _6;
_11 = [21021565151666954_u64,13287091143984302070_u64];
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_2 = core::ptr::addr_of!(_5);
_16.fld1 = _8.2.1 & _23;
_27 = _13 | _13;
_29.fld3 = [_17,_16.fld0];
_7 = 1142737705_u32;
_35 = _7;
_22.fld2.fld0 = core::ptr::addr_of_mut!(_29.fld0);
_30.fld0 = [15232861047241393921_u64,242884910866683516_u64];
_16.fld1 = !_8.2.1;
_31 = -_13;
_14 = _16.fld0;
(*_4) = (-917721377_i32) >> _8.2.0;
_8.2 = (_31, _23);
_14 = !_16.fld0;
_2 = core::ptr::addr_of!((*_2));
_40 = _35 % 2937929353_u32;
_3 = [_28,_22.fld0.0,_28,_22.fld0.0,_28,_28];
_42.3 = -(*_18);
_8.0 = [(*_4),(*_4),(*_4),(*_4),(*_4),(*_4)];
_32 = (-18160_i16) - (-4629_i16);
_10 = [_8.2.1,_8.2.1,_23,_23,_23,_8.2.1,_23];
_31 = !_27;
_14 = _16.fld0;
_22.fld0 = (_28,);
_21 = [_5];
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(5_usize, 15_usize, Move(_15), 32_usize, Move(_32), 5_usize, Move(_5), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(5_usize, 14_usize, Move(_14), 7_usize, Move(_7), 26_usize, Move(_26), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(5_usize, 6_usize, Move(_6), 20_usize, Move(_20), 23_usize, Move(_23), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: i128,mut _2: i8,mut _3: i128,mut _4: isize) -> f64 {
mir! {
type RET = f64;
let _5: Adt60;
let _6: [i128; 1];
let _7: isize;
let _8: *const [bool; 8];
let _9: char;
let _10: i32;
let _11: [char; 6];
let _12: isize;
let _13: i32;
let _14: [u16; 4];
let _15: Adt51;
let _16: [i32; 6];
let _17: isize;
let _18: char;
let _19: (*mut i32, *mut i64);
let _20: Adt52;
let _21: bool;
let _22: Adt66;
let _23: Adt52;
let _24: *mut *mut u32;
let _25: (char,);
let _26: isize;
let _27: Adt56;
let _28: bool;
let _29: Adt63;
let _30: char;
let _31: f32;
let _32: Adt51;
let _33: ();
let _34: ();
{
_3 = -_1;
_5.fld1.1 = _3 as f32;
_6 = [_3];
_5.fld1.1 = 4934837439455814103_u64 as f32;
_5.fld0 = ['\u{c8bbd}','\u{1061c6}','\u{25ca0}','\u{95d7c}','\u{1a0b5}','\u{102050}'];
RET = (-1570546659_i32) as f64;
_1 = _3 & _3;
_7 = 30430_i16 as isize;
RET = 8521_i16 as f64;
Call(_5.fld1.1 = fn7(_1, _6, _5.fld0, _5.fld0, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [_1];
RET = _5.fld1.1 as f64;
_9 = '\u{8f376}';
_4 = _7 + _7;
_3 = -_1;
_3 = -_1;
_5.fld1.1 = _4 as f32;
RET = 6535288766341588114_u64 as f64;
RET = 25341_u16 as f64;
Goto(bb2)
}
bb2 = {
_5.fld1.1 = 0_usize as f32;
_4 = -_7;
_2 = (-80_i8);
RET = 1405944539_u32 as f64;
_6 = [_1];
RET = 799058672_i32 as f64;
_7 = 7663686043528683817_u64 as isize;
_5.fld0 = [_9,_9,_9,_9,_9,_9];
_5.fld1.1 = (-12146_i16) as f32;
_3 = !_1;
_3 = false as i128;
_6 = [_1];
_10 = 1845246999_i32 & (-1415340007_i32);
_2 = 88_i8;
Goto(bb3)
}
bb3 = {
_4 = _7;
_6 = [_1];
_9 = '\u{b6eae}';
_11 = _5.fld0;
_1 = _3;
_2 = !12_i8;
_1 = _2 as i128;
_5.fld1.1 = _4 as f32;
_10 = -(-1842048240_i32);
_5.fld1.1 = _4 as f32;
_12 = 99_u8 as isize;
_5.fld0 = _11;
RET = 2968489856050727070_u64 as f64;
RET = 2099035349_u32 as f64;
Goto(bb4)
}
bb4 = {
_9 = '\u{6c1fd}';
_9 = '\u{1ac1c}';
_1 = !_3;
_3 = _1;
_9 = '\u{42a99}';
RET = (-22058_i16) as f64;
_5.fld1.1 = _2 as f32;
_12 = _4 & _7;
_1 = _3 * _3;
_5.fld0 = [_9,_9,_9,_9,_9,_9];
_1 = -_3;
_12 = -_7;
_1 = 41421_u16 as i128;
_2 = 16_i8 >> _3;
_3 = true as i128;
_15.fld2 = core::ptr::addr_of_mut!(_10);
_10 = 40_u8 as i32;
_3 = _1;
_15.fld1.0 = _9;
_15.fld3 = 9913596707092249276_u64;
_16 = [_10,_10,_10,_10,_10,_10];
_16 = [_10,_10,_10,_10,_10,_10];
_16 = [_10,_10,_10,_10,_10,_10];
_15.fld1.0 = _9;
_2 = (-20_i8);
_15.fld3 = 16265657027995273866_u64 ^ 1676842125220327745_u64;
match _2 {
0 => bb5,
1 => bb6,
340282366920938463463374607431768211436 => bb8,
_ => bb7
}
}
bb5 = {
_4 = _7;
_6 = [_1];
_9 = '\u{b6eae}';
_11 = _5.fld0;
_1 = _3;
_2 = !12_i8;
_1 = _2 as i128;
_5.fld1.1 = _4 as f32;
_10 = -(-1842048240_i32);
_5.fld1.1 = _4 as f32;
_12 = 99_u8 as isize;
_5.fld0 = _11;
RET = 2968489856050727070_u64 as f64;
RET = 2099035349_u32 as f64;
Goto(bb4)
}
bb6 = {
_5.fld1.1 = 0_usize as f32;
_4 = -_7;
_2 = (-80_i8);
RET = 1405944539_u32 as f64;
_6 = [_1];
RET = 799058672_i32 as f64;
_7 = 7663686043528683817_u64 as isize;
_5.fld0 = [_9,_9,_9,_9,_9,_9];
_5.fld1.1 = (-12146_i16) as f32;
_3 = !_1;
_3 = false as i128;
_6 = [_1];
_10 = 1845246999_i32 & (-1415340007_i32);
_2 = 88_i8;
Goto(bb3)
}
bb7 = {
_6 = [_1];
RET = _5.fld1.1 as f64;
_9 = '\u{8f376}';
_4 = _7 + _7;
_3 = -_1;
_3 = -_1;
_5.fld1.1 = _4 as f32;
RET = 6535288766341588114_u64 as f64;
RET = 25341_u16 as f64;
Goto(bb2)
}
bb8 = {
_10 = 634046962985160160_i64 as i32;
_15.fld0.1 = _5.fld1.1 - _5.fld1.1;
_2 = 793965150_u32 as i8;
_13 = 3019390065_u32 as i32;
_12 = _4;
_15.fld0.1 = _5.fld1.1;
RET = 3719009580555515195_i64 as f64;
_5.fld0 = [_15.fld1.0,_9,_9,_9,_9,_9];
_4 = true as isize;
_19.0 = _15.fld2;
_15.fld3 = !13530700956475361265_u64;
_15.fld2 = core::ptr::addr_of_mut!(_10);
_15.fld6 = [223722658177495276108987361705544689638_u128,193637766886564867290399053263918114677_u128,151231154679054458746457100549515843355_u128,162421490490261065127514282031345667192_u128,22735135093085301478325453399181390884_u128,30141127889513396249680673771105155195_u128];
_15.fld7 = _13 as f64;
_15.fld5 = _2 as usize;
_15.fld1.0 = _9;
_13 = _10;
_15.fld7 = _15.fld0.1 as f64;
_17 = _12;
_3 = _15.fld7 as i128;
_15.fld5 = !1_usize;
_6 = [_1];
_18 = _9;
_20.fld1 = [_15.fld3];
Goto(bb9)
}
bb9 = {
_7 = _15.fld3 as isize;
_20.fld0 = core::ptr::addr_of_mut!(_19.1);
_15.fld2 = core::ptr::addr_of_mut!(_10);
Goto(bb10)
}
bb10 = {
_18 = _9;
_5.fld0 = _11;
_12 = 3763783113_u32 as isize;
_20.fld0 = core::ptr::addr_of_mut!(_19.1);
_1 = _3;
Call(_19.1 = fn18(_10, _4, _18, _2, _12, _20.fld0, _9, _19.0, _9, _18, _12, _12, _15.fld1, _19.0, _15.fld5, _5.fld1.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_15.fld6 = [185491156484761574257390216057111113335_u128,55464103503779989956011275644309371043_u128,292339945550843983114969399384952965946_u128,7666717693775865272236953981160774735_u128,113383431925225569433534357230423170249_u128,122434384603438880749489070107730389434_u128];
_22.fld3.fld0.1 = _15.fld7;
_21 = !false;
_22.fld3.fld1 = _19.1;
_22.fld0.6 = (_7, _2);
_22.fld1.fld1.1 = -_15.fld0.1;
_22.fld1.fld0 = _5.fld0;
_22.fld0.6.1 = _2;
_15.fld6 = [150168625016978795857580977800431619195_u128,43268641061005382085834839883400760656_u128,228328842767572398237440261881641030133_u128,19000772564765696847947383890075468304_u128,255122082298550974700641840693138783964_u128,191787991038268491134442943745247602084_u128];
_22.fld3.fld4.1.2 = (-2273064315136038220_i64);
_22.fld3.fld3.0 = _3 - _3;
_9 = _15.fld1.0;
_12 = _17 - _22.fld0.6.0;
_5.fld0 = [_9,_18,_9,_18,_15.fld1.0,_18];
_15.fld6 = [177695525610072381866578731897395170518_u128,11636461880294566407782307233248771282_u128,53647502503631142415261264026828237639_u128,181594918149646646198419066658263312617_u128,194047642371583290716809037683249562748_u128,257751265716816183954684352675680002997_u128];
_14 = [30949_u16,12303_u16,59672_u16,60654_u16];
_10 = _22.fld0.6.0 as i32;
_22.fld3.fld3.2 = [2845051123_u32];
_22.fld3.fld0.2 = (_20.fld1, 124945159699817287898910469700273373679_u128, _22.fld3.fld4.1.2);
_18 = _15.fld1.0;
_22.fld3.fld4.0 = [_13,_10,_13,_13,_13,_10];
_22.fld3.fld4.2.3 = _22.fld3.fld0.1;
_22.fld3.fld0.0 = [_22.fld0.6.1,_22.fld0.6.1,_2,_22.fld0.6.1,_2,_2,_2];
_22.fld0.2.2 = _22.fld3.fld0.2.2;
Goto(bb12)
}
bb12 = {
_12 = _15.fld3 as isize;
_22.fld0.6.0 = _17;
_22.fld3.fld0.3 = _6;
_23 = Adt52 { fld0: _20.fld0,fld1: _22.fld3.fld0.2.0 };
_22.fld3.fld0.4 = core::ptr::addr_of_mut!(_22.fld3.fld1);
_22.fld1.fld1.1 = _15.fld0.1 * _5.fld1.1;
_24 = core::ptr::addr_of_mut!(_22.fld2);
_22.fld5 = _10;
_20.fld0 = _23.fld0;
_22.fld3.fld5.0 = _17;
_22.fld3.fld4.2.2 = [2540657676_u32];
_22.fld3.fld5 = (_7, _22.fld0.6.1);
_22.fld0.5 = core::ptr::addr_of_mut!(_22.fld5);
Goto(bb13)
}
bb13 = {
_22.fld0.5 = _15.fld2;
_18 = _9;
_27.fld1 = _22.fld0.6.1;
_24 = core::ptr::addr_of_mut!(_15.fld0.0);
_22.fld3.fld3.1 = 97_u8 / 212_u8;
RET = -_22.fld3.fld0.1;
_27 = Adt56 { fld0: _21,fld1: _22.fld0.6.1 };
_22.fld3.fld0.2.2 = _22.fld3.fld4.1.2;
match _22.fld3.fld0.2.1 {
0 => bb2,
1 => bb14,
2 => bb15,
124945159699817287898910469700273373679 => bb17,
_ => bb16
}
}
bb14 = {
_9 = '\u{6c1fd}';
_9 = '\u{1ac1c}';
_1 = !_3;
_3 = _1;
_9 = '\u{42a99}';
RET = (-22058_i16) as f64;
_5.fld1.1 = _2 as f32;
_12 = _4 & _7;
_1 = _3 * _3;
_5.fld0 = [_9,_9,_9,_9,_9,_9];
_1 = -_3;
_12 = -_7;
_1 = 41421_u16 as i128;
_2 = 16_i8 >> _3;
_3 = true as i128;
_15.fld2 = core::ptr::addr_of_mut!(_10);
_10 = 40_u8 as i32;
_3 = _1;
_15.fld1.0 = _9;
_15.fld3 = 9913596707092249276_u64;
_16 = [_10,_10,_10,_10,_10,_10];
_16 = [_10,_10,_10,_10,_10,_10];
_16 = [_10,_10,_10,_10,_10,_10];
_15.fld1.0 = _9;
_2 = (-20_i8);
_15.fld3 = 16265657027995273866_u64 ^ 1676842125220327745_u64;
match _2 {
0 => bb5,
1 => bb6,
340282366920938463463374607431768211436 => bb8,
_ => bb7
}
}
bb15 = {
_6 = [_1];
RET = _5.fld1.1 as f64;
_9 = '\u{8f376}';
_4 = _7 + _7;
_3 = -_1;
_3 = -_1;
_5.fld1.1 = _4 as f32;
RET = 6535288766341588114_u64 as f64;
RET = 25341_u16 as f64;
Goto(bb2)
}
bb16 = {
_7 = _15.fld3 as isize;
_20.fld0 = core::ptr::addr_of_mut!(_19.1);
_15.fld2 = core::ptr::addr_of_mut!(_10);
Goto(bb10)
}
bb17 = {
_25 = (_9,);
_22.fld3.fld3 = (_3, 216_u8, _22.fld3.fld4.2.2, _22.fld3.fld4.2.3, _22.fld1.fld1.1);
_26 = _22.fld0.6.0 * _17;
_22.fld3.fld2 = [1675993110_u32];
_20 = Adt52 { fld0: _23.fld0,fld1: _22.fld3.fld0.2.0 };
_22.fld6.0 = _7 * _7;
_11 = [_25.0,_18,_9,_15.fld1.0,_9,_15.fld1.0];
_30 = _15.fld1.0;
_22.fld3.fld3.3 = _22.fld3.fld0.1;
_22.fld3.fld4.1.0 = [_15.fld3];
_15.fld6 = [_22.fld3.fld0.2.1,_22.fld3.fld0.2.1,_22.fld3.fld0.2.1,_22.fld3.fld0.2.1,_22.fld3.fld0.2.1,_22.fld3.fld0.2.1];
Goto(bb18)
}
bb18 = {
Call(_33 = dump_var(6_usize, 3_usize, Move(_3), 30_usize, Move(_30), 1_usize, Move(_1), 17_usize, Move(_17)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_33 = dump_var(6_usize, 21_usize, Move(_21), 14_usize, Move(_14), 7_usize, Move(_7), 6_usize, Move(_6)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_33 = dump_var(6_usize, 26_usize, Move(_26), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: i128,mut _2: [i128; 1],mut _3: [char; 6],mut _4: [char; 6],mut _5: [i128; 1]) -> f32 {
mir! {
type RET = f32;
let _6: [u64; 2];
let _7: u16;
let _8: isize;
let _9: *mut f64;
let _10: char;
let _11: ([u64; 1], u128, i64);
let _12: [u16; 4];
let _13: Adt61;
let _14: char;
let _15: isize;
let _16: u8;
let _17: [i8; 7];
let _18: u32;
let _19: bool;
let _20: Adt58;
let _21: [u64; 2];
let _22: isize;
let _23: [i8; 7];
let _24: i128;
let _25: char;
let _26: Adt58;
let _27: f32;
let _28: u64;
let _29: Adt56;
let _30: (*mut i32, *mut i64);
let _31: [u64; 2];
let _32: ([u64; 1], u128, i64);
let _33: ();
let _34: ();
{
_5 = _2;
RET = 7136143070170971903_i64 as f32;
_3 = _4;
_1 = false as i128;
_5 = _2;
RET = (-1434_i16) as f32;
RET = 200547834340577212701130633568441051860_u128 as f32;
_3 = ['\u{d851f}','\u{f814c}','\u{ecc8}','\u{2f8c6}','\u{701e2}','\u{68e12}'];
_4 = ['\u{c9fe5}','\u{ca46c}','\u{ef0bc}','\u{1a307}','\u{9cbe1}','\u{88cb2}'];
_5 = _2;
_6 = [10565608154920522894_u64,8485119780935451750_u64];
_4 = _3;
_3 = _4;
_3 = ['\u{8078}','\u{af18b}','\u{7e1d9}','\u{b4040}','\u{bbf93}','\u{90ef4}'];
_6 = [16154141187952423668_u64,167052961975526089_u64];
_4 = _3;
Call(_6 = fn8(_2, _4, _1, _2, _4, _1, _3, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = ['\u{82fd}','\u{b755a}','\u{423ab}','\u{fb52f}','\u{544a5}','\u{60a39}'];
_11.1 = 84107431132202462499544173818704634254_u128;
match _11.1 {
0 => bb2,
84107431132202462499544173818704634254 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_7 = !26_u16;
_1 = 394889159_u32 as i128;
_11.2 = !(-1320337473843648865_i64);
_13.fld7.0 = [(-739112318_i32),(-143103645_i32),(-61510139_i32),244516384_i32,1319888283_i32,(-299013322_i32)];
_13.fld4.2.1 = _11.1 & _11.1;
_13.fld7.1.2 = true as i64;
_10 = '\u{e5309}';
_8 = 9223372036854775807_isize;
_13.fld1.fld2.0 = [(-79_i8),(-44_i8),(-102_i8),27_i8,(-45_i8),(-3_i8),126_i8];
_13.fld4.1 = 9772857917380208709_u64 as f64;
_13.fld7.2.4 = _8 as f32;
_14 = _10;
_13.fld1.fld3 = !38_u8;
_13.fld1.fld2.1 = -_13.fld4.1;
_11.1 = !_13.fld4.2.1;
_4 = _3;
_13.fld4.6 = (_8, 18_i8);
_13.fld1.fld2.6.0 = _13.fld4.6.0;
_13.fld7.3 = [_10,_10,_10,_14,_14,_14];
_13.fld7.1.0 = [6717978400870350351_u64];
_8 = _13.fld4.6.0;
_13.fld1.fld2.2 = (_13.fld7.1.0, _11.1, _13.fld7.1.2);
_13.fld1.fld2.6.0 = _8;
Call(_13.fld7.2.3 = core::intrinsics::transmute(_13.fld1.fld2.6.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_13.fld1.fld2.6.0 = !_8;
_13.fld4.3 = [_1];
_13.fld4.6 = (_8, (-122_i8));
_7 = 11273_u16 * 30287_u16;
_16 = !_13.fld1.fld3;
_5 = _2;
_13.fld4.2.0 = _13.fld1.fld2.2.0;
_13.fld7.2.4 = 16045594235970374865_u64 as f32;
_13.fld7.2.0 = _1 | _1;
_12 = [_7,_7,_7,_7];
_12 = [_7,_7,_7,_7];
RET = -_13.fld7.2.4;
_8 = 4931927869881647424_u64 as isize;
_10 = _14;
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld4.2.2);
_13.fld3 = [_7];
_13.fld7.1.1 = !_13.fld1.fld2.2.1;
_13.fld1.fld3 = _16 ^ _16;
_13.fld4.6 = (_13.fld1.fld2.6.0, (-99_i8));
_3 = [_10,_10,_10,_14,_14,_14];
_13.fld7.1 = (_13.fld1.fld2.2.0, _13.fld1.fld2.2.1, _11.2);
match _13.fld4.6.1 {
0 => bb3,
340282366920938463463374607431768211357 => bb6,
_ => bb2
}
}
bb6 = {
_13.fld7.2.0 = _1 + _1;
_11 = (_13.fld4.2.0, _13.fld4.2.1, _13.fld1.fld2.2.2);
_13.fld1.fld2.6.1 = !_13.fld4.6.1;
_6 = [10277494792122335742_u64,942192910082455952_u64];
Goto(bb7)
}
bb7 = {
_3 = _4;
_13.fld7.1.2 = _11.2;
_13.fld1.fld2.2.1 = _11.1;
_13.fld7.1.0 = _11.0;
_13.fld4.1 = _13.fld7.2.3;
_13.fld4.1 = _13.fld7.2.3 - _13.fld7.2.3;
_10 = _14;
_19 = true;
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld4.2.2);
_7 = 59226_u16 & 12645_u16;
_13.fld2 = core::ptr::addr_of_mut!(_18);
_13.fld7.0 = [(-941576039_i32),1907568442_i32,728838720_i32,1793527860_i32,39159636_i32,(-155980382_i32)];
Goto(bb8)
}
bb8 = {
_11.1 = _1 as u128;
Goto(bb9)
}
bb9 = {
RET = _13.fld7.2.4;
_13.fld5 = [_13.fld1.fld2.6.1,_13.fld1.fld2.6.1,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1];
_20.fld0.0 = _14;
_1 = 5004243650018777693_u64 as i128;
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld7.1.2);
_20.fld2.fld0 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld3 = [_7];
_6 = [13240932440991286085_u64,13915710009981736588_u64];
_13.fld4.2 = _13.fld1.fld2.2;
_15 = _13.fld4.6.0;
_12 = [_7,_7,_7,_7];
_13.fld0 = [_19,_19,_19,_19,_19,_19,_19,_19];
_13.fld1.fld2.6 = (_8, _13.fld4.6.1);
_13.fld1.fld0 = [_19,_19];
_20.fld3 = [_10,_14,_20.fld0.0,_20.fld0.0,_10,_20.fld0.0];
_13.fld1.fld2.3 = [_1];
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld6);
_20.fld2.fld1 = [9054970685247014493_u64];
_2 = _13.fld4.3;
_13.fld7.2.4 = _13.fld1.fld2.6.1 as f32;
match _13.fld1.fld2.6.1 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463463374607431768211357 => bb11,
_ => bb10
}
}
bb10 = {
_7 = !26_u16;
_1 = 394889159_u32 as i128;
_11.2 = !(-1320337473843648865_i64);
_13.fld7.0 = [(-739112318_i32),(-143103645_i32),(-61510139_i32),244516384_i32,1319888283_i32,(-299013322_i32)];
_13.fld4.2.1 = _11.1 & _11.1;
_13.fld7.1.2 = true as i64;
_10 = '\u{e5309}';
_8 = 9223372036854775807_isize;
_13.fld1.fld2.0 = [(-79_i8),(-44_i8),(-102_i8),27_i8,(-45_i8),(-3_i8),126_i8];
_13.fld4.1 = 9772857917380208709_u64 as f64;
_13.fld7.2.4 = _8 as f32;
_14 = _10;
_13.fld1.fld3 = !38_u8;
_13.fld1.fld2.1 = -_13.fld4.1;
_11.1 = !_13.fld4.2.1;
_4 = _3;
_13.fld4.6 = (_8, 18_i8);
_13.fld1.fld2.6.0 = _13.fld4.6.0;
_13.fld7.3 = [_10,_10,_10,_14,_14,_14];
_13.fld7.1.0 = [6717978400870350351_u64];
_8 = _13.fld4.6.0;
_13.fld1.fld2.2 = (_13.fld7.1.0, _11.1, _13.fld7.1.2);
_13.fld1.fld2.6.0 = _8;
Call(_13.fld7.2.3 = core::intrinsics::transmute(_13.fld1.fld2.6.0), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_13.fld7.2.1 = _13.fld1.fld3 - _13.fld1.fld3;
_13.fld4.2 = (_13.fld1.fld2.2.0, _11.1, _13.fld7.1.2);
_18 = 310887759_u32;
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld6);
_7 = !25043_u16;
match _18 {
0 => bb4,
1 => bb6,
2 => bb7,
310887759 => bb13,
_ => bb12
}
}
bb12 = {
_7 = !26_u16;
_1 = 394889159_u32 as i128;
_11.2 = !(-1320337473843648865_i64);
_13.fld7.0 = [(-739112318_i32),(-143103645_i32),(-61510139_i32),244516384_i32,1319888283_i32,(-299013322_i32)];
_13.fld4.2.1 = _11.1 & _11.1;
_13.fld7.1.2 = true as i64;
_10 = '\u{e5309}';
_8 = 9223372036854775807_isize;
_13.fld1.fld2.0 = [(-79_i8),(-44_i8),(-102_i8),27_i8,(-45_i8),(-3_i8),126_i8];
_13.fld4.1 = 9772857917380208709_u64 as f64;
_13.fld7.2.4 = _8 as f32;
_14 = _10;
_13.fld1.fld3 = !38_u8;
_13.fld1.fld2.1 = -_13.fld4.1;
_11.1 = !_13.fld4.2.1;
_4 = _3;
_13.fld4.6 = (_8, 18_i8);
_13.fld1.fld2.6.0 = _13.fld4.6.0;
_13.fld7.3 = [_10,_10,_10,_14,_14,_14];
_13.fld7.1.0 = [6717978400870350351_u64];
_8 = _13.fld4.6.0;
_13.fld1.fld2.2 = (_13.fld7.1.0, _11.1, _13.fld7.1.2);
_13.fld1.fld2.6.0 = _8;
Call(_13.fld7.2.3 = core::intrinsics::transmute(_13.fld1.fld2.6.0), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_26.fld3 = [_20.fld0.0,_14,_10,_14,_14,_10];
_11.1 = _13.fld4.2.1 / 150532077905716234411100661606226224140_u128;
_13.fld6 = -_13.fld7.1.2;
_3 = _4;
_26.fld2 = Adt52 { fld0: _20.fld2.fld0,fld1: _13.fld7.1.0 };
_11 = (_13.fld7.1.0, _13.fld7.1.1, _13.fld6);
_13.fld4.0 = [_13.fld1.fld2.6.1,_13.fld1.fld2.6.1,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_13.fld1.fld2.6.1,_13.fld1.fld2.6.1];
_20.fld2 = Move(_26.fld2);
_23 = _13.fld1.fld2.0;
_22 = _13.fld7.2.1 as isize;
_13.fld4.6.1 = !_13.fld1.fld2.6.1;
_13.fld0 = [_19,_19,_19,_19,_19,_19,_19,_19];
_13.fld4.6.1 = _13.fld1.fld2.6.1;
_7 = 62691_u16 << _22;
_26.fld0.0 = _10;
_13.fld1.fld2.2.0 = [8937557898021292145_u64];
_20.fld3 = _4;
_20.fld2.fld0 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_29.fld1 = _22 as i8;
_3 = [_10,_14,_10,_14,_10,_20.fld0.0];
_13.fld5 = [_13.fld1.fld2.6.1,_29.fld1,_13.fld1.fld2.6.1,_13.fld4.6.1,_29.fld1,_13.fld1.fld2.6.1,_13.fld1.fld2.6.1];
_10 = _20.fld0.0;
_13.fld1.fld2.3 = _13.fld4.3;
_26.fld1 = _13.fld1.fld2.1 + _13.fld1.fld2.1;
Goto(bb14)
}
bb14 = {
_13.fld6 = _13.fld4.2.2;
_13.fld5 = [_29.fld1,_29.fld1,_29.fld1,_29.fld1,_29.fld1,_13.fld1.fld2.6.1,_13.fld1.fld2.6.1];
_13.fld4.0 = _13.fld1.fld2.0;
_13.fld1.fld2.0 = [_29.fld1,_29.fld1,_13.fld1.fld2.6.1,_29.fld1,_13.fld1.fld2.6.1,_29.fld1,_13.fld4.6.1];
_11.1 = _7 as u128;
RET = (-6577_i16) as f32;
_20.fld2.fld0 = core::ptr::addr_of_mut!(_30.1);
_17 = [_13.fld1.fld2.6.1,_13.fld1.fld2.6.1,_29.fld1,_29.fld1,_13.fld4.6.1,_29.fld1,_29.fld1];
_27 = -_13.fld7.2.4;
_24 = _13.fld7.2.0 - _13.fld7.2.0;
_13.fld4.6.1 = _16 as i8;
_19 = _7 < _7;
_5 = _13.fld4.3;
_13.fld7.1.2 = !_13.fld4.2.2;
_13.fld7.1.2 = _13.fld7.2.1 as i64;
_13.fld7.2.1 = _11.1 as u8;
_13.fld7.3 = [_26.fld0.0,_20.fld0.0,_20.fld0.0,_10,_26.fld0.0,_20.fld0.0];
_4 = _3;
_22 = -_15;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(7_usize, 14_usize, Move(_14), 5_usize, Move(_5), 19_usize, Move(_19), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(7_usize, 22_usize, Move(_22), 11_usize, Move(_11), 17_usize, Move(_17), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(7_usize, 1_usize, Move(_1), 4_usize, Move(_4), 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [i128; 1],mut _2: [char; 6],mut _3: i128,mut _4: [i128; 1],mut _5: [char; 6],mut _6: i128,mut _7: [char; 6],mut _8: [char; 6]) -> [u64; 2] {
mir! {
type RET = [u64; 2];
let _9: Adt55;
let _10: u8;
let _11: char;
let _12: f64;
let _13: u128;
let _14: f64;
let _15: u128;
let _16: u32;
let _17: Adt51;
let _18: *const [bool; 8];
let _19: Adt63;
let _20: u8;
let _21: i64;
let _22: *const i128;
let _23: [bool; 2];
let _24: Adt65;
let _25: u64;
let _26: [bool; 2];
let _27: Adt54;
let _28: Adt54;
let _29: [u64; 2];
let _30: isize;
let _31: i8;
let _32: *mut f64;
let _33: f32;
let _34: ();
let _35: ();
{
_7 = ['\u{a8be2}','\u{10cf65}','\u{1e85a}','\u{2b564}','\u{af18b}','\u{87642}'];
_1 = [_6];
_3 = _6 << _6;
_7 = ['\u{ac93b}','\u{64c8f}','\u{4b357}','\u{5e0bb}','\u{2ab43}','\u{103024}'];
_2 = ['\u{2c7fb}','\u{d257}','\u{70efd}','\u{160c}','\u{6324f}','\u{2cbee}'];
RET = [10751097689035452477_u64,12561468618081132401_u64];
_9.fld5.1 = 126_i8 as u128;
_9.fld6 = core::ptr::addr_of_mut!(_9.fld0);
_4 = _1;
_6 = _3;
_9.fld4.0 = _6 ^ _3;
_6 = '\u{d199e}' as i128;
_9.fld1 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1];
Goto(bb1)
}
bb1 = {
_9.fld4.0 = 40378398_i32 as i128;
_9.fld5.2 = 5475898452153186906_i64 >> _9.fld4.0;
_4 = _1;
_4 = _1;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_10 = 192_u8 ^ 170_u8;
_1 = [_3];
_9.fld3 = '\u{2ffc8}' as u16;
Call(RET = fn9(_9.fld6, _9.fld5.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = [_3];
_9.fld5.2 = (-4814657198069005681_i64) ^ (-7762828930083206811_i64);
_10 = !237_u8;
_9.fld1 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1];
_9.fld4.0 = _3 - _3;
_2 = _8;
_2 = _8;
_9.fld5.2 = _9.fld0 as i64;
_9.fld5.0 = [3716243765240852229_u64];
_9.fld5.0 = [5654238115000662278_u64];
_8 = ['\u{63a37}','\u{e8358}','\u{f64}','\u{985d5}','\u{7cb94}','\u{6448f}'];
_6 = _9.fld4.0;
_13 = _9.fld5.1 * _9.fld5.1;
_11 = '\u{47db8}';
Call(_9 = fn10(_11, _6, _1, _1, _13, _11, _10, _7, _5, _13, _3, _5, _10, _11, _4, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = [_3];
_8 = [_11,_11,_11,_11,_11,_11];
_9.fld5.1 = _13 << _9.fld5.2;
_11 = '\u{fafe9}';
_12 = 12722097599917802460_usize as f64;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_1 = [_9.fld4.0];
RET = [332176435656188429_u64,11276910771020726152_u64];
_11 = '\u{f0948}';
_9.fld4.0 = _6 - _3;
RET = [11386520193614023907_u64,2951608384031249156_u64];
_13 = 9417950443225772143_u64 as u128;
_14 = _9.fld5.1 as f64;
_8 = _2;
_10 = 26_u8 + 28_u8;
_9.fld4 = (_6,);
match _9.fld0 {
0 => bb1,
882105537 => bb4,
_ => bb2
}
}
bb4 = {
_8 = _5;
_2 = [_11,_11,_11,_11,_11,_11];
_15 = true as u128;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_3 = -_6;
_16 = _9.fld0;
_1 = _4;
_9.fld1 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1];
_17.fld1 = (_11,);
_17.fld1.0 = _11;
_17.fld6 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_15,_15,_9.fld5.1];
_17.fld7 = _6 as f64;
Goto(bb5)
}
bb5 = {
_7 = [_11,_11,_11,_17.fld1.0,_17.fld1.0,_11];
_15 = _9.fld0 as u128;
_5 = [_11,_17.fld1.0,_11,_17.fld1.0,_17.fld1.0,_11];
_17.fld0.0 = _9.fld6;
_20 = !_10;
_20 = !_10;
_4 = [_9.fld4.0];
_19.fld1 = _20 + _10;
match _16 {
0 => bb6,
882105537 => bb8,
_ => bb7
}
}
bb6 = {
_9.fld4.0 = 40378398_i32 as i128;
_9.fld5.2 = 5475898452153186906_i64 >> _9.fld4.0;
_4 = _1;
_4 = _1;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_10 = 192_u8 ^ 170_u8;
_1 = [_3];
_9.fld3 = '\u{2ffc8}' as u16;
Call(RET = fn9(_9.fld6, _9.fld5.1), ReturnTo(bb2), UnwindUnreachable())
}
bb7 = {
_4 = [_3];
_9.fld5.2 = (-4814657198069005681_i64) ^ (-7762828930083206811_i64);
_10 = !237_u8;
_9.fld1 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1];
_9.fld4.0 = _3 - _3;
_2 = _8;
_2 = _8;
_9.fld5.2 = _9.fld0 as i64;
_9.fld5.0 = [3716243765240852229_u64];
_9.fld5.0 = [5654238115000662278_u64];
_8 = ['\u{63a37}','\u{e8358}','\u{f64}','\u{985d5}','\u{7cb94}','\u{6448f}'];
_6 = _9.fld4.0;
_13 = _9.fld5.1 * _9.fld5.1;
_11 = '\u{47db8}';
Call(_9 = fn10(_11, _6, _1, _1, _13, _11, _10, _7, _5, _13, _3, _5, _10, _11, _4, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb8 = {
_4 = _1;
RET = [3543152068218247064_u64,16004870716471503676_u64];
_17.fld3 = _9.fld4.0 as u64;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_2 = _8;
_15 = _13 | _9.fld5.1;
_21 = _9.fld5.2;
_17.fld0.1 = 18979_i16 as f32;
_17.fld6 = [_9.fld5.1,_15,_15,_15,_9.fld5.1,_9.fld5.1];
_10 = _20;
_17.fld6 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_13,_9.fld5.1];
_24.fld3.fld0 = _17.fld0;
_23 = [true,true];
_24.fld3.fld6 = [_15,_9.fld5.1,_15,_15,_9.fld5.1,_15];
_19.fld1 = _10 >> _15;
_24.fld1.0 = [_17.fld3];
_21 = _9.fld5.2 | _9.fld5.2;
match _16 {
0 => bb9,
882105537 => bb11,
_ => bb10
}
}
bb9 = {
_9.fld4.0 = 40378398_i32 as i128;
_9.fld5.2 = 5475898452153186906_i64 >> _9.fld4.0;
_4 = _1;
_4 = _1;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_10 = 192_u8 ^ 170_u8;
_1 = [_3];
_9.fld3 = '\u{2ffc8}' as u16;
Call(RET = fn9(_9.fld6, _9.fld5.1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_4 = [_3];
_8 = [_11,_11,_11,_11,_11,_11];
_9.fld5.1 = _13 << _9.fld5.2;
_11 = '\u{fafe9}';
_12 = 12722097599917802460_usize as f64;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_1 = [_9.fld4.0];
RET = [332176435656188429_u64,11276910771020726152_u64];
_11 = '\u{f0948}';
_9.fld4.0 = _6 - _3;
RET = [11386520193614023907_u64,2951608384031249156_u64];
_13 = 9417950443225772143_u64 as u128;
_14 = _9.fld5.1 as f64;
_8 = _2;
_10 = 26_u8 + 28_u8;
_9.fld4 = (_6,);
match _9.fld0 {
0 => bb1,
882105537 => bb4,
_ => bb2
}
}
bb11 = {
_7 = [_17.fld1.0,_17.fld1.0,_17.fld1.0,_11,_11,_11];
_24.fld3.fld5 = 10348947512072977518_usize ^ 7_usize;
_24.fld1.2 = -_21;
_24.fld4 = core::ptr::addr_of_mut!(_27.fld2.1);
_13 = !_15;
_27.fld2.1 = _12 + _14;
match _9.fld0 {
882105537 => bb13,
_ => bb12
}
}
bb12 = {
_4 = [_3];
_9.fld5.2 = (-4814657198069005681_i64) ^ (-7762828930083206811_i64);
_10 = !237_u8;
_9.fld1 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1];
_9.fld4.0 = _3 - _3;
_2 = _8;
_2 = _8;
_9.fld5.2 = _9.fld0 as i64;
_9.fld5.0 = [3716243765240852229_u64];
_9.fld5.0 = [5654238115000662278_u64];
_8 = ['\u{63a37}','\u{e8358}','\u{f64}','\u{985d5}','\u{7cb94}','\u{6448f}'];
_6 = _9.fld4.0;
_13 = _9.fld5.1 * _9.fld5.1;
_11 = '\u{47db8}';
Call(_9 = fn10(_11, _6, _1, _1, _13, _11, _10, _7, _5, _13, _3, _5, _10, _11, _4, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_9.fld4.0 = _3 * _6;
_17.fld4 = core::ptr::addr_of_mut!(_9.fld0);
_24.fld3.fld3 = (-118_i8) as u64;
_9.fld2.1 = core::ptr::addr_of_mut!(_24.fld1.2);
_17.fld0.1 = _17.fld3 as f32;
_17.fld4 = _17.fld0.0;
_14 = (-10455_i16) as f64;
_27.fld0 = _23;
_23 = [true,true];
_27.fld2.2.2 = _10 as i64;
_22 = core::ptr::addr_of!(_3);
_27.fld2.5 = _9.fld2.0;
_27.fld2.2 = (_9.fld5.0, _15, _21);
_28.fld2.6.0 = (-35_isize) + (-56_isize);
_19.fld3 = [true,true];
_28.fld2.6.1 = _9.fld3 as i8;
_28.fld2.2.0 = _24.fld1.0;
_28.fld2.5 = _9.fld2.0;
_17.fld1.0 = _11;
_10 = _27.fld2.2.1 as u8;
_28.fld2.6 = ((-55_isize), (-71_i8));
match _16 {
0 => bb7,
1 => bb2,
2 => bb10,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
882105537 => bb19,
_ => bb18
}
}
bb14 = {
_9.fld4.0 = 40378398_i32 as i128;
_9.fld5.2 = 5475898452153186906_i64 >> _9.fld4.0;
_4 = _1;
_4 = _1;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_10 = 192_u8 ^ 170_u8;
_1 = [_3];
_9.fld3 = '\u{2ffc8}' as u16;
Call(RET = fn9(_9.fld6, _9.fld5.1), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_7 = [_17.fld1.0,_17.fld1.0,_17.fld1.0,_11,_11,_11];
_24.fld3.fld5 = 10348947512072977518_usize ^ 7_usize;
_24.fld1.2 = -_21;
_24.fld4 = core::ptr::addr_of_mut!(_27.fld2.1);
_13 = !_15;
_27.fld2.1 = _12 + _14;
match _9.fld0 {
882105537 => bb13,
_ => bb12
}
}
bb16 = {
_4 = [_3];
_9.fld5.2 = (-4814657198069005681_i64) ^ (-7762828930083206811_i64);
_10 = !237_u8;
_9.fld1 = [_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1,_9.fld5.1];
_9.fld4.0 = _3 - _3;
_2 = _8;
_2 = _8;
_9.fld5.2 = _9.fld0 as i64;
_9.fld5.0 = [3716243765240852229_u64];
_9.fld5.0 = [5654238115000662278_u64];
_8 = ['\u{63a37}','\u{e8358}','\u{f64}','\u{985d5}','\u{7cb94}','\u{6448f}'];
_6 = _9.fld4.0;
_13 = _9.fld5.1 * _9.fld5.1;
_11 = '\u{47db8}';
Call(_9 = fn10(_11, _6, _1, _1, _13, _11, _10, _7, _5, _13, _3, _5, _10, _11, _4, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_7 = [_11,_11,_11,_17.fld1.0,_17.fld1.0,_11];
_15 = _9.fld0 as u128;
_5 = [_11,_17.fld1.0,_11,_17.fld1.0,_17.fld1.0,_11];
_17.fld0.0 = _9.fld6;
_20 = !_10;
_20 = !_10;
_4 = [_9.fld4.0];
_19.fld1 = _20 + _10;
match _16 {
0 => bb6,
882105537 => bb8,
_ => bb7
}
}
bb18 = {
_9.fld4.0 = 40378398_i32 as i128;
_9.fld5.2 = 5475898452153186906_i64 >> _9.fld4.0;
_4 = _1;
_4 = _1;
_9.fld2.1 = core::ptr::addr_of_mut!(_9.fld5.2);
_10 = 192_u8 ^ 170_u8;
_1 = [_3];
_9.fld3 = '\u{2ffc8}' as u16;
Call(RET = fn9(_9.fld6, _9.fld5.1), ReturnTo(bb2), UnwindUnreachable())
}
bb19 = {
_9.fld3 = _16 as u16;
_24.fld1.1 = _9.fld5.1 * _9.fld5.1;
_24.fld3.fld2 = _28.fld2.5;
_26 = [false,false];
_12 = _27.fld2.1 - _27.fld2.1;
_15 = _9.fld5.1;
_24.fld3.fld4 = core::ptr::addr_of_mut!(_16);
_28.fld2.4 = core::ptr::addr_of_mut!(_27.fld1);
_28.fld2.2.1 = _17.fld3 as u128;
_17.fld5 = _28.fld2.6.1 as usize;
_30 = !_28.fld2.6.0;
_24.fld4 = core::ptr::addr_of_mut!(_28.fld2.1);
Goto(bb20)
}
bb20 = {
Call(_34 = dump_var(8_usize, 6_usize, Move(_6), 15_usize, Move(_15), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_34 = dump_var(8_usize, 11_usize, Move(_11), 20_usize, Move(_20), 4_usize, Move(_4), 13_usize, Move(_13)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_34 = dump_var(8_usize, 1_usize, Move(_1), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *mut u32,mut _2: u128) -> [u64; 2] {
mir! {
type RET = [u64; 2];
let _3: Adt64;
let _4: isize;
let _5: *mut f64;
let _6: isize;
let _7: isize;
let _8: *const i128;
let _9: bool;
let _10: [u32; 3];
let _11: Adt64;
let _12: isize;
let _13: f32;
let _14: [i128; 1];
let _15: Adt51;
let _16: ();
let _17: ();
{
(*_1) = 176921089_u32 % 2916090239_u32;
_2 = 226673370839895999102273234857818983290_u128 + 306884380650687590472869410588735723310_u128;
(*_1) = 15_u8 as u32;
RET = [17436651569560928627_u64,13967235667632104800_u64];
RET = [10666550906345877819_u64,161458333460795032_u64];
_4 = (-9223372036854775808_isize);
Goto(bb1)
}
bb1 = {
_3.fld3 = 21_i8;
_6 = !_4;
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_3.fld1 = [_2,_2,_2,_2,_2];
_3.fld4.fld0 = ['\u{ce004}','\u{10b3}','\u{58779}','\u{39913}','\u{d6ac2}','\u{54341}'];
RET = [11782778251607144540_u64,15852621794068622556_u64];
RET = [7320097681205061375_u64,10868538300099584636_u64];
_3.fld1 = [_2,_2,_2,_2,_2];
RET = [9173185053393088592_u64,11790881691060486036_u64];
_1 = core::ptr::addr_of_mut!((*_1));
_3.fld1 = [_2,_2,_2,_2,_2];
_3.fld4.fld1.1 = 147_u8 as f32;
_4 = 13531228308045395725_u64 as isize;
match _3.fld3 {
0 => bb2,
1 => bb3,
21 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_3.fld4.fld1.1 = _3.fld3 as f32;
(*_1) = 1433388164_u32;
RET = [7599589756383451898_u64,6574487056445111361_u64];
_6 = _4 & _4;
_9 = false;
RET = [16372306546003316804_u64,9073227435820772224_u64];
_7 = _6;
_4 = (*_1) as isize;
RET = [18443307477375942435_u64,15566834295266505606_u64];
_4 = 96038730396356988200584575523894504560_i128 as isize;
_2 = 282721367637140842422661433152204895014_u128 << (*_1);
Goto(bb6)
}
bb6 = {
_9 = false & false;
_4 = !_7;
_3.fld1 = [_2,_2,_2,_2,_2];
(*_1) = 1489523918_u32;
_1 = core::ptr::addr_of_mut!((*_1));
_3.fld4.fld0 = ['\u{bf077}','\u{cca65}','\u{7eed0}','\u{ae2cc}','\u{6d59b}','\u{4562e}'];
_7 = -_4;
_7 = _6 >> _6;
_10 = [(*_1),(*_1),(*_1)];
_11.fld4.fld0 = ['\u{58506}','\u{8d84b}','\u{e41a2}','\u{6b4c0}','\u{50d52}','\u{48c22}'];
_2 = 143304875166947484710892825763247999797_u128;
_11.fld3 = 13950_i16 as i8;
_10 = [(*_1),(*_1),(*_1)];
RET = [12435116233544178970_u64,3471358869091828503_u64];
_11.fld2 = _3.fld2;
_11.fld1 = _3.fld1;
_12 = _6;
_3.fld3 = _7 as i8;
_11.fld4.fld1 = (_1, _3.fld4.fld1.1);
_3.fld4.fld1 = (_1, _11.fld4.fld1.1);
_9 = !false;
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_9 = !false;
RET = [348167225821677525_u64,13055393035873027697_u64];
_7 = 42513_u16 as isize;
match _2 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb7,
143304875166947484710892825763247999797 => bb9,
_ => bb8
}
}
bb7 = {
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_3.fld4.fld1.1 = _3.fld3 as f32;
(*_1) = 1433388164_u32;
RET = [7599589756383451898_u64,6574487056445111361_u64];
_6 = _4 & _4;
_9 = false;
RET = [16372306546003316804_u64,9073227435820772224_u64];
_7 = _6;
_4 = (*_1) as isize;
RET = [18443307477375942435_u64,15566834295266505606_u64];
_4 = 96038730396356988200584575523894504560_i128 as isize;
_2 = 282721367637140842422661433152204895014_u128 << (*_1);
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
_3.fld4.fld1.0 = _11.fld4.fld1.0;
_12 = -_6;
(*_1) = _4 as u32;
match _2 {
0 => bb6,
1 => bb8,
2 => bb3,
143304875166947484710892825763247999797 => bb10,
_ => bb5
}
}
bb10 = {
_11.fld2 = _3.fld2;
_7 = _6;
_9 = false;
_7 = _4;
_11.fld1 = [_2,_2,_2,_2,_2];
_11.fld1 = _3.fld1;
_6 = !_4;
_12 = _7;
_11.fld4.fld0 = ['\u{aef51}','\u{17c8c}','\u{7df73}','\u{852f5}','\u{af47a}','\u{3f38f}'];
match _2 {
0 => bb8,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
143304875166947484710892825763247999797 => bb18,
_ => bb17
}
}
bb11 = {
_3.fld4.fld1.0 = _11.fld4.fld1.0;
_12 = -_6;
(*_1) = _4 as u32;
match _2 {
0 => bb6,
1 => bb8,
2 => bb3,
143304875166947484710892825763247999797 => bb10,
_ => bb5
}
}
bb12 = {
Return()
}
bb13 = {
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_3.fld4.fld1.1 = _3.fld3 as f32;
(*_1) = 1433388164_u32;
RET = [7599589756383451898_u64,6574487056445111361_u64];
_6 = _4 & _4;
_9 = false;
RET = [16372306546003316804_u64,9073227435820772224_u64];
_7 = _6;
_4 = (*_1) as isize;
RET = [18443307477375942435_u64,15566834295266505606_u64];
_4 = 96038730396356988200584575523894504560_i128 as isize;
_2 = 282721367637140842422661433152204895014_u128 << (*_1);
Goto(bb6)
}
bb14 = {
_9 = false & false;
_4 = !_7;
_3.fld1 = [_2,_2,_2,_2,_2];
(*_1) = 1489523918_u32;
_1 = core::ptr::addr_of_mut!((*_1));
_3.fld4.fld0 = ['\u{bf077}','\u{cca65}','\u{7eed0}','\u{ae2cc}','\u{6d59b}','\u{4562e}'];
_7 = -_4;
_7 = _6 >> _6;
_10 = [(*_1),(*_1),(*_1)];
_11.fld4.fld0 = ['\u{58506}','\u{8d84b}','\u{e41a2}','\u{6b4c0}','\u{50d52}','\u{48c22}'];
_2 = 143304875166947484710892825763247999797_u128;
_11.fld3 = 13950_i16 as i8;
_10 = [(*_1),(*_1),(*_1)];
RET = [12435116233544178970_u64,3471358869091828503_u64];
_11.fld2 = _3.fld2;
_11.fld1 = _3.fld1;
_12 = _6;
_3.fld3 = _7 as i8;
_11.fld4.fld1 = (_1, _3.fld4.fld1.1);
_3.fld4.fld1 = (_1, _11.fld4.fld1.1);
_9 = !false;
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_9 = !false;
RET = [348167225821677525_u64,13055393035873027697_u64];
_7 = 42513_u16 as isize;
match _2 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb7,
143304875166947484710892825763247999797 => bb9,
_ => bb8
}
}
bb15 = {
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_3.fld4.fld1.1 = _3.fld3 as f32;
(*_1) = 1433388164_u32;
RET = [7599589756383451898_u64,6574487056445111361_u64];
_6 = _4 & _4;
_9 = false;
RET = [16372306546003316804_u64,9073227435820772224_u64];
_7 = _6;
_4 = (*_1) as isize;
RET = [18443307477375942435_u64,15566834295266505606_u64];
_4 = 96038730396356988200584575523894504560_i128 as isize;
_2 = 282721367637140842422661433152204895014_u128 << (*_1);
Goto(bb6)
}
bb16 = {
_3.fld3 = 21_i8;
_6 = !_4;
_3.fld2 = [_2,_2,_2,_2,_2,_2];
_3.fld1 = [_2,_2,_2,_2,_2];
_3.fld4.fld0 = ['\u{ce004}','\u{10b3}','\u{58779}','\u{39913}','\u{d6ac2}','\u{54341}'];
RET = [11782778251607144540_u64,15852621794068622556_u64];
RET = [7320097681205061375_u64,10868538300099584636_u64];
_3.fld1 = [_2,_2,_2,_2,_2];
RET = [9173185053393088592_u64,11790881691060486036_u64];
_1 = core::ptr::addr_of_mut!((*_1));
_3.fld1 = [_2,_2,_2,_2,_2];
_3.fld4.fld1.1 = 147_u8 as f32;
_4 = 13531228308045395725_u64 as isize;
match _3.fld3 {
0 => bb2,
1 => bb3,
21 => bb5,
_ => bb4
}
}
bb17 = {
Return()
}
bb18 = {
_3.fld4.fld0 = _11.fld4.fld0;
_3.fld4.fld1.0 = _11.fld4.fld1.0;
_9 = false;
_3.fld4.fld1 = _11.fld4.fld1;
_3.fld1 = [_2,_2,_2,_2,_2];
_3.fld1 = _11.fld1;
_9 = _6 > _4;
_15.fld1.0 = '\u{10534c}';
Goto(bb19)
}
bb19 = {
Call(_16 = dump_var(9_usize, 2_usize, Move(_2), 10_usize, Move(_10), 9_usize, Move(_9), 17_usize, _17), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: char,mut _2: i128,mut _3: [i128; 1],mut _4: [i128; 1],mut _5: u128,mut _6: char,mut _7: u8,mut _8: [char; 6],mut _9: [char; 6],mut _10: u128,mut _11: i128,mut _12: [char; 6],mut _13: u8,mut _14: char,mut _15: [i128; 1],mut _16: i128) -> Adt55 {
mir! {
type RET = Adt55;
let _17: u128;
let _18: Adt62;
let _19: i128;
let _20: [i8; 7];
let _21: f32;
let _22: isize;
let _23: [u128; 6];
let _24: [i32; 6];
let _25: char;
let _26: i8;
let _27: i32;
let _28: Adt50;
let _29: Adt50;
let _30: ([i32; 6], *mut *mut u32, (isize, i8));
let _31: u64;
let _32: u64;
let _33: f32;
let _34: Adt60;
let _35: isize;
let _36: char;
let _37: isize;
let _38: i32;
let _39: [char; 6];
let _40: Adt52;
let _41: bool;
let _42: [u128; 6];
let _43: f32;
let _44: i32;
let _45: [char; 6];
let _46: i64;
let _47: *const i128;
let _48: Adt53;
let _49: Adt50;
let _50: [i8; 7];
let _51: char;
let _52: f32;
let _53: bool;
let _54: (i128, u8, [u32; 1], f64, f32);
let _55: u64;
let _56: Adt62;
let _57: u32;
let _58: u128;
let _59: u128;
let _60: ();
let _61: ();
{
_4 = [_16];
RET.fld5.2 = 2433036592_u32 as i64;
RET.fld0 = !746351259_u32;
_14 = _1;
RET.fld5.0 = [5000051400300590991_u64];
_11 = -_2;
_10 = !_5;
RET.fld0 = 8873592049970411185_i64 as u32;
RET.fld4.0 = -_11;
RET.fld1 = [_5,_5,_5,_5,_5];
RET.fld1 = [_5,_5,_10,_10,_10];
_10 = _5;
RET.fld3 = 36397_u16;
RET.fld1 = [_5,_10,_10,_10,_5];
RET.fld0 = !765142399_u32;
RET.fld0 = !4049989414_u32;
_7 = _11 as u8;
RET.fld4.0 = _2 & _11;
RET.fld5.2 = 4971_i16 as i64;
Goto(bb1)
}
bb1 = {
RET.fld5.1 = _10;
_8 = _9;
_7 = !_13;
_12 = [_14,_14,_1,_14,_6,_1];
RET.fld0 = _13 as u32;
_12 = [_14,_6,_1,_1,_14,_6];
_11 = _2;
RET.fld4 = (_16,);
RET.fld0 = 3796015076_u32 ^ 1619842983_u32;
RET.fld3 = (-10_i8) as u16;
_19 = _1 as i128;
Call(RET.fld5.1 = fn11(_5, _13, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET.fld5.1 = _5 + _10;
Goto(bb3)
}
bb3 = {
_16 = _19 ^ _11;
_19 = _2 + _16;
_7 = _13;
_21 = 640119842_i32 as f32;
RET.fld4 = (_19,);
RET.fld4.0 = false as i128;
_21 = 17538226745962192043_usize as f32;
RET.fld5.0 = [9722053123915125528_u64];
RET.fld0 = 1483803008_u32;
_12 = _9;
RET.fld5.1 = 9223372036854775807_isize as u128;
_23 = [_10,_10,_10,_10,_5,_10];
RET.fld3 = !48429_u16;
_24 = [270850240_i32,548520922_i32,862227069_i32,(-1055441777_i32),691428557_i32,1683348119_i32];
RET.fld0 = 2157723590_u32;
_18.fld0 = [8696667860890708493_u64,1451885254234758570_u64];
_1 = _6;
_20 = [(-17_i8),(-74_i8),73_i8,23_i8,79_i8,(-59_i8),(-23_i8)];
_17 = _10 - _5;
Goto(bb4)
}
bb4 = {
RET.fld5.2 = 1470128078193736986_i64;
_17 = false as u128;
_19 = _16;
_8 = _9;
_25 = _14;
_4 = [_16];
_24 = [1431006499_i32,1903516604_i32,955361850_i32,1362966971_i32,2011629714_i32,1173644141_i32];
RET.fld5.0 = [7946471255965682036_u64];
_4 = [_11];
_17 = _13 as u128;
RET.fld4 = (_16,);
_8 = [_25,_1,_25,_14,_6,_6];
_3 = [_16];
_7 = !_13;
_9 = _12;
Goto(bb5)
}
bb5 = {
RET.fld4.0 = _11;
_16 = _25 as i128;
_25 = _1;
_22 = 9223372036854775807_isize;
RET.fld5.1 = 7758093171282678381_i64 as u128;
RET.fld4.0 = _19 ^ _11;
_20 = [29_i8,(-68_i8),(-63_i8),(-73_i8),32_i8,(-59_i8),(-86_i8)];
_29.fld1.1.1 = 10726948438350834741_usize as f64;
_29.fld2.6.1 = -108_i8;
_29.fld1.1.2.1 = _5 % 97244637849946855887282030399997902276_u128;
_29.fld2.2.2 = (-2579125417412066634_i64) + (-4387033462201138972_i64);
_28.fld2.6 = (_22, _29.fld2.6.1);
RET.fld0 = !967246768_u32;
_29.fld2.1 = _29.fld1.1.1 / 1_f64;
_23 = [_29.fld1.1.2.1,_29.fld1.1.2.1,_5,_10,_5,_10];
_29.fld2.3 = _4;
_20 = [_28.fld2.6.1,_28.fld2.6.1,_28.fld2.6.1,_28.fld2.6.1,_28.fld2.6.1,_28.fld2.6.1,_28.fld2.6.1];
RET.fld2.1 = core::ptr::addr_of_mut!(_28.fld1.1.2.2);
match _28.fld2.6.0 {
0 => bb3,
1 => bb4,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
9223372036854775807 => bb11,
_ => bb10
}
}
bb6 = {
RET.fld5.2 = 1470128078193736986_i64;
_17 = false as u128;
_19 = _16;
_8 = _9;
_25 = _14;
_4 = [_16];
_24 = [1431006499_i32,1903516604_i32,955361850_i32,1362966971_i32,2011629714_i32,1173644141_i32];
RET.fld5.0 = [7946471255965682036_u64];
_4 = [_11];
_17 = _13 as u128;
RET.fld4 = (_16,);
_8 = [_25,_1,_25,_14,_6,_6];
_3 = [_16];
_7 = !_13;
_9 = _12;
Goto(bb5)
}
bb7 = {
_16 = _19 ^ _11;
_19 = _2 + _16;
_7 = _13;
_21 = 640119842_i32 as f32;
RET.fld4 = (_19,);
RET.fld4.0 = false as i128;
_21 = 17538226745962192043_usize as f32;
RET.fld5.0 = [9722053123915125528_u64];
RET.fld0 = 1483803008_u32;
_12 = _9;
RET.fld5.1 = 9223372036854775807_isize as u128;
_23 = [_10,_10,_10,_10,_5,_10];
RET.fld3 = !48429_u16;
_24 = [270850240_i32,548520922_i32,862227069_i32,(-1055441777_i32),691428557_i32,1683348119_i32];
RET.fld0 = 2157723590_u32;
_18.fld0 = [8696667860890708493_u64,1451885254234758570_u64];
_1 = _6;
_20 = [(-17_i8),(-74_i8),73_i8,23_i8,79_i8,(-59_i8),(-23_i8)];
_17 = _10 - _5;
Goto(bb4)
}
bb8 = {
RET.fld5.1 = _5 + _10;
Goto(bb3)
}
bb9 = {
RET.fld5.1 = _10;
_8 = _9;
_7 = !_13;
_12 = [_14,_14,_1,_14,_6,_1];
RET.fld0 = _13 as u32;
_12 = [_14,_6,_1,_1,_14,_6];
_11 = _2;
RET.fld4 = (_16,);
RET.fld0 = 3796015076_u32 ^ 1619842983_u32;
RET.fld3 = (-10_i8) as u16;
_19 = _1 as i128;
Call(RET.fld5.1 = fn11(_5, _13, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_4 = _3;
RET.fld5.2 = _29.fld2.2.2;
_29.fld1.1.2.0 = [9266006330462221344_u64];
_28.fld1.1.6 = (_22, _28.fld2.6.1);
RET.fld0 = 905541792_u32;
_28.fld1.1.6 = (_28.fld2.6.0, _28.fld2.6.1);
_29.fld2.2 = (_29.fld1.1.2.0, _10, (-5260277229443284762_i64));
_27 = 2057606258_i32;
_29.fld1.1.3 = [_16];
_29.fld1.1.6.1 = !_28.fld2.6.1;
_29.fld1.0 = 51823_u16;
RET.fld4.0 = -_2;
_28.fld2.0 = _20;
_29.fld1.1.2.2 = _29.fld2.2.2;
_28.fld2.1 = -_29.fld2.1;
_19 = _29.fld1.0 as i128;
_25 = _14;
_29.fld1.1.1 = -_29.fld2.1;
_29.fld1.1.2.0 = [8957170452254403734_u64];
RET.fld5.1 = !_5;
match _29.fld1.0 {
0 => bb12,
1 => bb13,
51823 => bb15,
_ => bb14
}
}
bb12 = {
RET.fld5.1 = _10;
_8 = _9;
_7 = !_13;
_12 = [_14,_14,_1,_14,_6,_1];
RET.fld0 = _13 as u32;
_12 = [_14,_6,_1,_1,_14,_6];
_11 = _2;
RET.fld4 = (_16,);
RET.fld0 = 3796015076_u32 ^ 1619842983_u32;
RET.fld3 = (-10_i8) as u16;
_19 = _1 as i128;
Call(RET.fld5.1 = fn11(_5, _13, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
RET.fld5.2 = 1470128078193736986_i64;
_17 = false as u128;
_19 = _16;
_8 = _9;
_25 = _14;
_4 = [_16];
_24 = [1431006499_i32,1903516604_i32,955361850_i32,1362966971_i32,2011629714_i32,1173644141_i32];
RET.fld5.0 = [7946471255965682036_u64];
_4 = [_11];
_17 = _13 as u128;
RET.fld4 = (_16,);
_8 = [_25,_1,_25,_14,_6,_6];
_3 = [_16];
_7 = !_13;
_9 = _12;
Goto(bb5)
}
bb14 = {
RET.fld5.2 = 1470128078193736986_i64;
_17 = false as u128;
_19 = _16;
_8 = _9;
_25 = _14;
_4 = [_16];
_24 = [1431006499_i32,1903516604_i32,955361850_i32,1362966971_i32,2011629714_i32,1173644141_i32];
RET.fld5.0 = [7946471255965682036_u64];
_4 = [_11];
_17 = _13 as u128;
RET.fld4 = (_16,);
_8 = [_25,_1,_25,_14,_6,_6];
_3 = [_16];
_7 = !_13;
_9 = _12;
Goto(bb5)
}
bb15 = {
_26 = !_28.fld1.1.6.1;
RET.fld5.2 = _29.fld1.0 as i64;
Goto(bb16)
}
bb16 = {
_10 = !_29.fld2.2.1;
_29.fld1.0 = 14337522079879763198_u64 as u16;
_28.fld1.0 = !_29.fld1.0;
_29.fld1.2 = [9961839202015534847_u64];
_18.fld0 = [17917711991459648600_u64,3247251125710655332_u64];
_28.fld1.0 = !_29.fld1.0;
_36 = _6;
_30.1 = core::ptr::addr_of_mut!(_34.fld1.0);
_7 = _13 >> _27;
_29.fld1.1.2.0 = _29.fld1.2;
_28.fld1.1.1 = _28.fld2.1 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010480960107093095_f64;
_28.fld2.6.1 = -_26;
_28.fld1.1.2.1 = !_10;
_19 = !_11;
_1 = _36;
_17 = !_5;
_28.fld1.1.2 = _29.fld2.2;
_29.fld1.1.2.2 = _28.fld1.1.2.2 << _29.fld1.1.2.1;
_30.2.0 = _28.fld2.6.0;
RET.fld5 = (_29.fld2.2.0, _5, _29.fld2.2.2);
_28.fld1.1.2.0 = _29.fld1.1.2.0;
_28.fld1.1.3 = [_16];
Goto(bb17)
}
bb17 = {
RET.fld2.0 = core::ptr::addr_of_mut!(_27);
_29.fld2.1 = _29.fld1.1.1;
_29.fld2.3 = [_11];
_28.fld1.1.2.1 = 2178_i16 as u128;
_28.fld2.6.1 = !_26;
_33 = 11122286305557741820_usize as f32;
_37 = _28.fld1.1.6.0;
RET.fld0 = 882105537_u32;
_29.fld1.1.6.0 = _30.2.0;
Goto(bb18)
}
bb18 = {
_29.fld1.1.0 = _28.fld2.0;
_37 = _30.2.0;
_29.fld1.1.6.0 = _22;
Goto(bb19)
}
bb19 = {
_28.fld2.6.0 = _28.fld1.1.6.0;
_31 = 11717416987795302599_u64;
_34.fld1.1 = _28.fld1.1.1 as f32;
_32 = !_31;
_29.fld2.6.1 = _28.fld1.0 as i8;
_5 = _29.fld1.1.2.1;
_29.fld1.1.2 = (_28.fld1.1.2.0, _5, _29.fld2.2.2);
_30.2.0 = -_28.fld1.1.6.0;
_13 = _7 - _7;
_28.fld2.6 = _29.fld1.1.6;
_28.fld1.1.5 = core::ptr::addr_of_mut!(_27);
_29.fld2.0 = _20;
_28.fld1.1.1 = _27 as f64;
_3 = _15;
RET.fld5.1 = !_17;
_28.fld2.5 = _28.fld1.1.5;
RET.fld5.1 = !_29.fld1.1.2.1;
_49.fld2.2.2 = _29.fld1.1.2.2 & _28.fld1.1.2.2;
_20 = _29.fld1.1.0;
_28.fld2.5 = _28.fld1.1.5;
_18.fld0 = [_31,_31];
_49.fld1.1.4 = core::ptr::addr_of_mut!(_48.fld1);
RET.fld2.0 = _28.fld1.1.5;
_49.fld2.4 = core::ptr::addr_of_mut!(_48.fld1);
Goto(bb20)
}
bb20 = {
_49.fld1.1.2 = (_29.fld1.1.2.0, _29.fld1.1.2.1, _49.fld2.2.2);
_4 = [_2];
_48.fld4.2.3 = _28.fld2.1;
RET.fld5 = (_29.fld2.2.0, _5, _29.fld1.1.2.2);
Goto(bb21)
}
bb21 = {
_29.fld2.2 = (_29.fld1.1.2.0, _5, _49.fld2.2.2);
_29.fld1.1.2.0 = [_31];
_48.fld0.2.1 = _13 as u128;
_48.fld0.2.1 = _28.fld1.1.2.1 ^ _29.fld2.2.1;
_3 = [_11];
_49.fld1.1.3 = [_11];
RET.fld2.1 = core::ptr::addr_of_mut!(_49.fld1.1.2.2);
RET.fld5 = (_28.fld1.1.2.0, _5, _29.fld1.1.2.2);
_49.fld2.2 = _28.fld1.1.2;
_49.fld2.6 = _28.fld2.6;
RET.fld3 = _28.fld1.0;
_29.fld2.6 = (_49.fld2.6.0, _26);
_48.fld3.4 = _21;
RET.fld5 = _49.fld2.2;
_48.fld4.2.4 = _48.fld3.4 / f32::NAN;
_34.fld0 = [_36,_1,_25,_6,_25,_6];
_49.fld2.6.0 = _28.fld2.6.0 + _30.2.0;
RET.fld5 = _29.fld2.2;
_33 = -_48.fld4.2.4;
Goto(bb22)
}
bb22 = {
_29.fld1.1.6.1 = !_49.fld2.6.1;
_28.fld1.1.1 = _29.fld1.1.1;
_48.fld4.2.0 = _11 << _13;
_29.fld1.2 = [_31];
_41 = true | true;
_48.fld0.1 = 3640041472_u32 as f64;
_48.fld0.2.1 = _29.fld1.1.2.1 * _10;
_28.fld1.1.2.0 = _49.fld2.2.0;
_48.fld2 = [812160060_u32];
_48.fld3.1 = _7 >> _49.fld2.6.1;
_38 = _27;
_28.fld1.1.5 = core::ptr::addr_of_mut!(_44);
_28.fld2.6.0 = _29.fld2.1 as isize;
_49.fld1.2 = [_31];
_28.fld2.2 = (_49.fld1.1.2.0, _48.fld0.2.1, _29.fld2.2.2);
RET.fld3 = !_28.fld1.0;
_51 = _6;
RET.fld5.1 = _28.fld1.0 as u128;
match _37 {
0 => bb12,
1 => bb15,
2 => bb16,
3 => bb4,
4 => bb23,
5 => bb24,
6 => bb25,
9223372036854775807 => bb27,
_ => bb26
}
}
bb23 = {
_26 = !_28.fld1.1.6.1;
RET.fld5.2 = _29.fld1.0 as i64;
Goto(bb16)
}
bb24 = {
RET.fld5.2 = 1470128078193736986_i64;
_17 = false as u128;
_19 = _16;
_8 = _9;
_25 = _14;
_4 = [_16];
_24 = [1431006499_i32,1903516604_i32,955361850_i32,1362966971_i32,2011629714_i32,1173644141_i32];
RET.fld5.0 = [7946471255965682036_u64];
_4 = [_11];
_17 = _13 as u128;
RET.fld4 = (_16,);
_8 = [_25,_1,_25,_14,_6,_6];
_3 = [_16];
_7 = !_13;
_9 = _12;
Goto(bb5)
}
bb25 = {
RET.fld2.0 = core::ptr::addr_of_mut!(_27);
_29.fld2.1 = _29.fld1.1.1;
_29.fld2.3 = [_11];
_28.fld1.1.2.1 = 2178_i16 as u128;
_28.fld2.6.1 = !_26;
_33 = 11122286305557741820_usize as f32;
_37 = _28.fld1.1.6.0;
RET.fld0 = 882105537_u32;
_29.fld1.1.6.0 = _30.2.0;
Goto(bb18)
}
bb26 = {
RET.fld5.1 = _10;
_8 = _9;
_7 = !_13;
_12 = [_14,_14,_1,_14,_6,_1];
RET.fld0 = _13 as u32;
_12 = [_14,_6,_1,_1,_14,_6];
_11 = _2;
RET.fld4 = (_16,);
RET.fld0 = 3796015076_u32 ^ 1619842983_u32;
RET.fld3 = (-10_i8) as u16;
_19 = _1 as i128;
Call(RET.fld5.1 = fn11(_5, _13, _15), ReturnTo(bb2), UnwindUnreachable())
}
bb27 = {
_48.fld1 = core::ptr::addr_of_mut!(_28.fld1.1.2.2);
_29.fld1.1.6 = _28.fld2.6;
_40.fld0 = core::ptr::addr_of_mut!(_48.fld1);
_49.fld1.1.6 = _28.fld2.6;
_41 = !false;
_28.fld2.6.0 = _22;
_29.fld1.1.4 = core::ptr::addr_of_mut!(_48.fld1);
_3 = _49.fld1.1.3;
_49.fld2.2 = (_28.fld2.2.0, _5, _29.fld2.2.2);
_28.fld1.1.3 = [_48.fld4.2.0];
_28.fld1.1.2 = _49.fld1.1.2;
_28.fld1.1.1 = _29.fld2.1 / 1_f64;
_4 = [_2];
_48.fld0 = (_29.fld1.1.0, _29.fld1.1.1, _49.fld1.1.2, _29.fld2.3, _49.fld1.1.4, _28.fld2.5, _29.fld2.6);
_49.fld1.1.6.0 = _28.fld1.1.6.0 & _37;
_48.fld0.0 = [_49.fld1.1.6.1,_29.fld1.1.6.1,_28.fld2.6.1,_49.fld1.1.6.1,_26,_28.fld2.6.1,_48.fld0.6.1];
_42 = [_48.fld0.2.1,_10,_49.fld2.2.1,_48.fld0.2.1,_28.fld2.2.1,_49.fld1.1.2.1];
_2 = -_48.fld4.2.0;
_48.fld2 = [3626111470_u32];
_49.fld1.1 = (_29.fld2.0, _29.fld2.1, _29.fld2.2, _3, _29.fld1.1.4, _28.fld2.5, _48.fld0.6);
_28.fld1.1.3 = [_11];
RET.fld6 = core::ptr::addr_of_mut!(_57);
_48.fld4.1 = (_49.fld1.1.2.0, _49.fld1.1.2.1, _48.fld0.2.2);
_57 = 3095335809_u32 << _28.fld2.6.1;
Goto(bb28)
}
bb28 = {
Call(_60 = dump_var(10_usize, 2_usize, Move(_2), 24_usize, Move(_24), 1_usize, Move(_1), 13_usize, Move(_13)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_60 = dump_var(10_usize, 31_usize, Move(_31), 9_usize, Move(_9), 15_usize, Move(_15), 6_usize, Move(_6)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_60 = dump_var(10_usize, 23_usize, Move(_23), 3_usize, Move(_3), 19_usize, Move(_19), 37_usize, Move(_37)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_60 = dump_var(10_usize, 7_usize, Move(_7), 16_usize, Move(_16), 32_usize, Move(_32), 11_usize, Move(_11)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_60 = dump_var(10_usize, 14_usize, Move(_14), 61_usize, _61, 61_usize, _61, 61_usize, _61), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: u128,mut _2: u8,mut _3: [i128; 1]) -> u128 {
mir! {
type RET = u128;
let _4: [u32; 1];
let _5: [bool; 8];
let _6: isize;
let _7: *mut i32;
let _8: Adt56;
let _9: char;
let _10: u8;
let _11: isize;
let _12: Adt56;
let _13: bool;
let _14: char;
let _15: (isize, i8);
let _16: bool;
let _17: f64;
let _18: (char,);
let _19: f32;
let _20: char;
let _21: Adt65;
let _22: u8;
let _23: f64;
let _24: ([u64; 1], u128, i64);
let _25: f32;
let _26: char;
let _27: [u128; 5];
let _28: Adt59;
let _29: char;
let _30: isize;
let _31: bool;
let _32: [u128; 5];
let _33: (*mut u32, f32);
let _34: [u128; 5];
let _35: isize;
let _36: (i128,);
let _37: i32;
let _38: (*mut i32, *mut i64);
let _39: u32;
let _40: [char; 6];
let _41: i64;
let _42: bool;
let _43: ();
let _44: ();
{
_3 = [(-101327130186402366663520460727183058288_i128)];
_2 = 215_u8 + 237_u8;
_5 = [false,false,true,true,false,true,false,false];
_1 = !94068660674473287040782187543336597015_u128;
_3 = [87435747567485796672934134150330160343_i128];
RET = _1 % 195661370048734088062987443304273183073_u128;
_6 = 9223372036854775807_isize >> _2;
_2 = !192_u8;
RET = _1;
_1 = 196159268312969377199994597338153334050_u128 ^ 204824047199022504086091213747872348682_u128;
_3 = [(-27164868744811845091156157752352062646_i128)];
_4 = [4081296606_u32];
RET = _6 as u128;
_8.fld0 = true & false;
_9 = '\u{9b598}';
_8 = Adt56 { fld0: true,fld1: 51_i8 };
Call(_11 = core::intrinsics::bswap(_6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = 15970044610903394988_u64 as u128;
_8.fld0 = _1 > _1;
_15 = (_6, _8.fld1);
_4 = [3688806778_u32];
_11 = _6 << _15.0;
_15 = (_11, _8.fld1);
_5 = [_8.fld0,_8.fld0,_8.fld0,_8.fld0,_8.fld0,_8.fld0,_8.fld0,_8.fld0];
_12.fld0 = _9 > _9;
_3 = [(-129832703562373987313738233406330340949_i128)];
_8.fld1 = -_15.1;
_14 = _9;
_13 = _8.fld1 == _15.1;
Goto(bb2)
}
bb2 = {
_10 = _2;
_18 = (_14,);
_8 = Adt56 { fld0: _12.fld0,fld1: _15.1 };
RET = !_1;
_12.fld1 = _9 as i8;
RET = _1;
_5 = [_13,_13,_13,_12.fld0,_13,_8.fld0,_13,_13];
_5 = [_13,_13,_12.fld0,_12.fld0,_12.fld0,_13,_12.fld0,_13];
RET = 1260_u16 as u128;
_10 = !_2;
_2 = _10;
_16 = !_13;
_17 = 1068844719_i32 as f64;
_15 = (_6, _12.fld1);
_18.0 = _14;
RET = 13502_i16 as u128;
_10 = _2;
_15.0 = !_11;
_8.fld1 = _15.1 * _15.1;
_15.0 = _8.fld0 as isize;
_17 = _11 as f64;
_4 = [3635862510_u32];
_15 = (_11, _8.fld1);
_8.fld0 = _12.fld0;
_3 = [(-31608726896933541062166405725142917685_i128)];
_1 = 165948984426274573100804358204195672701_u128 ^ 54892168169890170852148547982411268226_u128;
Call(_15.0 = core::intrinsics::transmute(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _1;
_5 = [_13,_12.fld0,_8.fld0,_13,_13,_13,_13,_8.fld0];
_16 = _8.fld0;
_11 = _6 | _6;
_21.fld1.2 = (-8540761209237392624_i64) + 4795843106681556206_i64;
_21.fld3.fld6 = [_1,_1,_1,_1,_1,_1];
_21.fld3.fld7 = -_17;
_11 = -_6;
_14 = _18.0;
RET = !_1;
_23 = _15.0 as f64;
_23 = _17;
_5 = [_16,_13,_8.fld0,_12.fld0,_16,_8.fld0,_12.fld0,_8.fld0];
Goto(bb4)
}
bb4 = {
_1 = !290522611095736331287822281080760708811_u128;
_23 = -_17;
Goto(bb5)
}
bb5 = {
_21.fld3.fld6 = [_1,_1,_1,_1,_1,_1];
_19 = _1 as f32;
_4 = [1074432948_u32];
_21.fld3.fld6 = [_1,_1,_1,_1,_1,_1];
_21.fld1.2 = (-5500626565101713983_i64);
_14 = _18.0;
_2 = 3578509759_u32 as u8;
_26 = _9;
_18.0 = _9;
_6 = 30307_u16 as isize;
_21.fld3.fld0.1 = 22887_u16 as f32;
_15 = (_6, _8.fld1);
RET = _1;
_8.fld0 = _13;
_21.fld3.fld5 = 6_usize;
_24.0 = [9402806498834160207_u64];
_21.fld3.fld1 = _18;
_21.fld3.fld5 = !5_usize;
_21.fld3.fld3 = _17 as u64;
_21.fld1 = (_24.0, _1, (-6215557948940533960_i64));
_28.fld4 = 616_i16 + 27452_i16;
_21.fld3.fld1 = (_9,);
_21.fld3.fld0.1 = _19 * _19;
_27 = [_21.fld1.1,_21.fld1.1,_1,_21.fld1.1,_1];
_15 = (_11, _8.fld1);
match _21.fld1.2 {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb7,
340282366920938463457159049482827677496 => bb9,
_ => bb8
}
}
bb6 = {
_1 = !290522611095736331287822281080760708811_u128;
_23 = -_17;
Goto(bb5)
}
bb7 = {
RET = _1;
_5 = [_13,_12.fld0,_8.fld0,_13,_13,_13,_13,_8.fld0];
_16 = _8.fld0;
_11 = _6 | _6;
_21.fld1.2 = (-8540761209237392624_i64) + 4795843106681556206_i64;
_21.fld3.fld6 = [_1,_1,_1,_1,_1,_1];
_21.fld3.fld7 = -_17;
_11 = -_6;
_14 = _18.0;
RET = !_1;
_23 = _15.0 as f64;
_23 = _17;
_5 = [_16,_13,_8.fld0,_12.fld0,_16,_8.fld0,_12.fld0,_8.fld0];
Goto(bb4)
}
bb8 = {
_10 = _2;
_18 = (_14,);
_8 = Adt56 { fld0: _12.fld0,fld1: _15.1 };
RET = !_1;
_12.fld1 = _9 as i8;
RET = _1;
_5 = [_13,_13,_13,_12.fld0,_13,_8.fld0,_13,_13];
_5 = [_13,_13,_12.fld0,_12.fld0,_12.fld0,_13,_12.fld0,_13];
RET = 1260_u16 as u128;
_10 = !_2;
_2 = _10;
_16 = !_13;
_17 = 1068844719_i32 as f64;
_15 = (_6, _12.fld1);
_18.0 = _14;
RET = 13502_i16 as u128;
_10 = _2;
_15.0 = !_11;
_8.fld1 = _15.1 * _15.1;
_15.0 = _8.fld0 as isize;
_17 = _11 as f64;
_4 = [3635862510_u32];
_15 = (_11, _8.fld1);
_8.fld0 = _12.fld0;
_3 = [(-31608726896933541062166405725142917685_i128)];
_1 = 165948984426274573100804358204195672701_u128 ^ 54892168169890170852148547982411268226_u128;
Call(_15.0 = core::intrinsics::transmute(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_28.fld0 = _17 > _17;
_28.fld0 = !_8.fld0;
_2 = _10;
_10 = _2 - _2;
Call(_21 = fn12(_11, _8.fld0, _6, _8.fld1, _18.0, _8.fld0, _26, _4, _14, _6), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_14 = _26;
_15.1 = -_8.fld1;
Goto(bb11)
}
bb11 = {
_24.2 = _21.fld3.fld3 as i64;
_15 = (_11, _8.fld1);
_12 = Move(_8);
_7 = _21.fld3.fld2;
_21.fld3.fld5 = 4_usize;
_15.0 = _11 ^ _11;
_21.fld3.fld7 = _21.fld3.fld3 as f64;
_21.fld3.fld1 = (_9,);
Goto(bb12)
}
bb12 = {
_17 = _23;
_24 = _21.fld1;
_36.0 = (-132442771194432770124882572477882920189_i128);
_21.fld1 = (_24.0, _1, _24.2);
_25 = -_21.fld3.fld0.1;
_21.fld3.fld0.1 = _19;
_1 = _24.1 & _21.fld1.1;
_21.fld1.1 = !_1;
_35 = _15.0 + _15.0;
_21.fld3.fld5 = 7_usize;
_33.0 = _21.fld3.fld4;
_36 = ((-3065258612789201057360213668645140058_i128),);
Goto(bb13)
}
bb13 = {
_32 = [_1,_1,_24.1,_1,_21.fld1.1];
Call(_36.0 = core::intrinsics::transmute(_24.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_37 = (-474025857_i32);
_21.fld3.fld7 = _23 + _17;
_22 = _10;
_28.fld3 = [25862_u16,53550_u16,53958_u16,55675_u16];
_28.fld3 = [23680_u16,47509_u16,48199_u16,1215_u16];
_5 = [_16,_21.fld0,_21.fld0,_21.fld0,_21.fld0,_21.fld0,_16,_21.fld0];
_12 = Adt56 { fld0: _21.fld0,fld1: _15.1 };
_28.fld3 = [21115_u16,1796_u16,16157_u16,8779_u16];
_21.fld3.fld6 = [_1,_24.1,_21.fld1.1,_21.fld1.1,_24.1,_21.fld1.1];
_11 = _35 + _15.0;
_38.0 = core::ptr::addr_of_mut!(_37);
_1 = !_24.1;
_5 = [_21.fld0,_28.fld0,_21.fld0,_13,_12.fld0,_21.fld0,_28.fld0,_13];
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(11_usize, 16_usize, Move(_16), 3_usize, Move(_3), 18_usize, Move(_18), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(11_usize, 5_usize, Move(_5), 10_usize, Move(_10), 15_usize, Move(_15), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(11_usize, 11_usize, Move(_11), 32_usize, Move(_32), 9_usize, Move(_9), 44_usize, _44), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: isize,mut _2: bool,mut _3: isize,mut _4: i8,mut _5: char,mut _6: bool,mut _7: char,mut _8: [u32; 1],mut _9: char,mut _10: isize) -> Adt65 {
mir! {
type RET = Adt65;
let _11: i32;
let _12: i128;
let _13: Adt61;
let _14: [u64; 2];
let _15: char;
let _16: u32;
let _17: [char; 6];
let _18: Adt50;
let _19: (*mut u32, f32);
let _20: u32;
let _21: (*mut i32, *mut i64);
let _22: f64;
let _23: [u128; 5];
let _24: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _25: (*mut u32, f32);
let _26: char;
let _27: [char; 6];
let _28: u32;
let _29: ([i32; 6], *mut *mut u32, (isize, i8));
let _30: f64;
let _31: i8;
let _32: [u64; 1];
let _33: f64;
let _34: [i8; 7];
let _35: *mut *mut u32;
let _36: [u128; 5];
let _37: u64;
let _38: (isize, i8);
let _39: Adt64;
let _40: ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8));
let _41: [i128; 1];
let _42: u128;
let _43: i8;
let _44: (isize, i8);
let _45: f32;
let _46: isize;
let _47: Adt62;
let _48: f64;
let _49: bool;
let _50: [bool; 2];
let _51: u32;
let _52: Adt64;
let _53: f64;
let _54: Adt59;
let _55: u128;
let _56: isize;
let _57: isize;
let _58: char;
let _59: ();
let _60: ();
{
RET.fld3.fld1 = (_5,);
RET.fld3.fld5 = 0_usize;
_4 = !101_i8;
_10 = 201349166821958956529968654381481406314_u128 as isize;
_13.fld1.fld2.2.1 = 16066_i16 as u128;
_13.fld3 = [61448_u16];
_13.fld4.4 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld1.fld2.4 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld4.6 = (_3, _4);
_13.fld7.2.4 = _1 as f32;
_13.fld1.fld0 = [_2,_2];
Goto(bb1)
}
bb1 = {
RET.fld1.0 = [5653313245382475501_u64];
_13.fld7.1.2 = _13.fld7.2.4 as i64;
_13.fld0 = [_2,_6,_6,_2,_2,_6,_6,_2];
_13.fld4.4 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld7.0 = [262805804_i32,(-913224169_i32),364852580_i32,(-925986497_i32),(-206303963_i32),(-1399537331_i32)];
_13.fld7.3 = [_5,_5,_5,_5,_5,_7];
_14 = [11886060235379322433_u64,1287459729095430603_u64];
RET.fld4 = core::ptr::addr_of_mut!(_13.fld7.2.3);
RET.fld3.fld1.0 = _5;
_13.fld7.2.0 = -29256698098799965870693126805509170316_i128;
RET.fld3.fld0.1 = _13.fld7.2.4;
RET.fld3.fld1 = (_7,);
Goto(bb2)
}
bb2 = {
_13.fld1.fld2.6.0 = _10;
_18.fld2.1 = _13.fld7.1.2 as f64;
_13.fld1.fld2.0 = [_4,_4,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_4,_13.fld4.6.1];
_16 = 4078646676_u32 >> _13.fld4.6.1;
_18.fld2.3 = [_13.fld7.2.0];
_13.fld7.2.1 = 113_u8;
_18.fld2.5 = core::ptr::addr_of_mut!(_11);
match _13.fld7.2.1 {
113 => bb4,
_ => bb3
}
}
bb3 = {
RET.fld1.0 = [5653313245382475501_u64];
_13.fld7.1.2 = _13.fld7.2.4 as i64;
_13.fld0 = [_2,_6,_6,_2,_2,_6,_6,_2];
_13.fld4.4 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld7.0 = [262805804_i32,(-913224169_i32),364852580_i32,(-925986497_i32),(-206303963_i32),(-1399537331_i32)];
_13.fld7.3 = [_5,_5,_5,_5,_5,_7];
_14 = [11886060235379322433_u64,1287459729095430603_u64];
RET.fld4 = core::ptr::addr_of_mut!(_13.fld7.2.3);
RET.fld3.fld1.0 = _5;
_13.fld7.2.0 = -29256698098799965870693126805509170316_i128;
RET.fld3.fld0.1 = _13.fld7.2.4;
RET.fld3.fld1 = (_7,);
Goto(bb2)
}
bb4 = {
RET.fld3.fld2 = core::ptr::addr_of_mut!(_11);
_13.fld1.fld2.1 = -_18.fld2.1;
_13.fld7.2.3 = -_13.fld1.fld2.1;
_13.fld1.fld2.0 = [_4,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_4,_4,_13.fld4.6.1];
RET.fld3.fld1.0 = _5;
RET.fld0 = !_2;
_18.fld1.1.5 = core::ptr::addr_of_mut!(_11);
_19.1 = _13.fld7.2.4 + _13.fld7.2.4;
RET.fld3.fld0.1 = _13.fld7.2.4 / f32::NAN;
_13.fld1.fld2.6.1 = -_4;
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld7.1.2);
_18.fld2.5 = core::ptr::addr_of_mut!(_11);
RET.fld1.1 = (-1418_i16) as u128;
_13.fld7.2.0 = _1 as i128;
_16 = !404918954_u32;
_13.fld7.2 = ((-147168325993422460274757398178983530861_i128), 121_u8, _8, _18.fld2.1, _19.1);
RET.fld3.fld0.0 = core::ptr::addr_of_mut!(_20);
_13.fld7.2.4 = _19.1 * _19.1;
RET.fld3.fld7 = _13.fld7.2.4 as f64;
_18.fld1.1.2.1 = _13.fld1.fld2.2.1;
_13.fld4.2.2 = 16274207022156248677_u64 as i64;
Call(RET.fld4 = fn13(_13.fld3, _13.fld1.fld2.1, _8, _13.fld1.fld0, _18.fld2.1, _13.fld7.2.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET.fld3.fld3 = !13404559280589899445_u64;
_13.fld4.5 = core::ptr::addr_of_mut!(_11);
_12 = _13.fld7.2.0 * _13.fld7.2.0;
_18.fld1.1.3 = [_12];
_18.fld2.3 = [_13.fld7.2.0];
_13.fld7.2.0 = _12 - _12;
_1 = _13.fld1.fld2.2.1 as isize;
_13.fld7.2 = (_12, 139_u8, _8, _13.fld1.fld2.1, _19.1);
_13.fld7.2.3 = 2140457784517568344_u64 as f64;
_13.fld7.2.2 = [_16];
_18.fld1.1.6.0 = _4 as isize;
_18.fld1.1.6.0 = _19.1 as isize;
RET.fld3.fld6 = [_18.fld1.1.2.1,_18.fld1.1.2.1,_18.fld1.1.2.1,_13.fld1.fld2.2.1,_18.fld1.1.2.1,_13.fld1.fld2.2.1];
RET.fld3.fld6 = [_18.fld1.1.2.1,_18.fld1.1.2.1,_18.fld1.1.2.1,_13.fld1.fld2.2.1,_13.fld1.fld2.2.1,_18.fld1.1.2.1];
_13.fld7.2.4 = 1574784269_i32 as f32;
Call(_13.fld7.2.2 = fn14(_13.fld1.fld2.4, _13.fld4.6, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
RET.fld3.fld0.1 = _13.fld4.2.2 as f32;
RET.fld1.1 = _18.fld1.1.2.1 * _13.fld1.fld2.2.1;
_23 = [_18.fld1.1.2.1,_13.fld1.fld2.2.1,_13.fld1.fld2.2.1,_13.fld1.fld2.2.1,_18.fld1.1.2.1];
_18.fld2.2.0 = [5116409316713201476_u64];
_13.fld7.1 = (_18.fld2.2.0, _18.fld1.1.2.1, _13.fld4.2.2);
_20 = _16;
RET.fld1.1 = _13.fld7.1.1;
_13.fld4.0 = [_13.fld1.fld2.6.1,_13.fld1.fld2.6.1,_4,_13.fld1.fld2.6.1,_4,_13.fld1.fld2.6.1,_13.fld4.6.1];
_24.2 = (_13.fld7.2.0, _13.fld7.2.1, _8, _18.fld2.1, _13.fld7.2.4);
_18.fld2.6 = (_13.fld4.6.0, _4);
_13.fld2 = core::ptr::addr_of_mut!(_16);
_18.fld2.6 = (_18.fld1.1.6.0, _13.fld1.fld2.6.1);
_18.fld1.0 = 24108_u16 * 60936_u16;
RET.fld1.0 = _13.fld7.1.0;
_18.fld1.1.5 = core::ptr::addr_of_mut!(_11);
_24.2.3 = _13.fld1.fld2.1;
_21.0 = core::ptr::addr_of_mut!(_11);
RET.fld3.fld3 = 15869037553593628030_u64 << _13.fld7.2.0;
_13.fld7.3 = [_9,_5,_5,_7,_5,_5];
_13.fld6 = _13.fld7.1.2;
Goto(bb7)
}
bb7 = {
_13.fld1.fld2.2.0 = _13.fld7.1.0;
_18.fld2.2 = (_13.fld1.fld2.2.0, _18.fld1.1.2.1, _13.fld6);
_3 = 0_usize as isize;
RET.fld1 = (_13.fld1.fld2.2.0, _18.fld1.1.2.1, _13.fld7.1.2);
RET.fld3.fld0.0 = core::ptr::addr_of_mut!(_20);
_18.fld1.1.6 = _18.fld2.6;
_13.fld6 = _18.fld2.2.2 + _18.fld2.2.2;
_13.fld7.1.2 = _13.fld6;
_13.fld4.2.0 = _13.fld7.1.0;
_25.0 = core::ptr::addr_of_mut!(_20);
RET.fld1.2 = _13.fld7.1.2;
_24.2.0 = _13.fld7.2.0 >> _13.fld1.fld2.2.1;
RET.fld1.2 = _20 as i64;
_13.fld1.fld2.6 = (_18.fld1.1.6.0, _18.fld2.6.1);
_24.2.1 = _12 as u8;
_24.3 = _13.fld7.3;
_24.1.0 = [18256486415040152833_u64];
_1 = -_18.fld1.1.6.0;
match _13.fld7.2.1 {
0 => bb1,
1 => bb6,
2 => bb4,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
139 => bb13,
_ => bb12
}
}
bb8 = {
RET.fld3.fld0.1 = _13.fld4.2.2 as f32;
RET.fld1.1 = _18.fld1.1.2.1 * _13.fld1.fld2.2.1;
_23 = [_18.fld1.1.2.1,_13.fld1.fld2.2.1,_13.fld1.fld2.2.1,_13.fld1.fld2.2.1,_18.fld1.1.2.1];
_18.fld2.2.0 = [5116409316713201476_u64];
_13.fld7.1 = (_18.fld2.2.0, _18.fld1.1.2.1, _13.fld4.2.2);
_20 = _16;
RET.fld1.1 = _13.fld7.1.1;
_13.fld4.0 = [_13.fld1.fld2.6.1,_13.fld1.fld2.6.1,_4,_13.fld1.fld2.6.1,_4,_13.fld1.fld2.6.1,_13.fld4.6.1];
_24.2 = (_13.fld7.2.0, _13.fld7.2.1, _8, _18.fld2.1, _13.fld7.2.4);
_18.fld2.6 = (_13.fld4.6.0, _4);
_13.fld2 = core::ptr::addr_of_mut!(_16);
_18.fld2.6 = (_18.fld1.1.6.0, _13.fld1.fld2.6.1);
_18.fld1.0 = 24108_u16 * 60936_u16;
RET.fld1.0 = _13.fld7.1.0;
_18.fld1.1.5 = core::ptr::addr_of_mut!(_11);
_24.2.3 = _13.fld1.fld2.1;
_21.0 = core::ptr::addr_of_mut!(_11);
RET.fld3.fld3 = 15869037553593628030_u64 << _13.fld7.2.0;
_13.fld7.3 = [_9,_5,_5,_7,_5,_5];
_13.fld6 = _13.fld7.1.2;
Goto(bb7)
}
bb9 = {
RET.fld1.0 = [5653313245382475501_u64];
_13.fld7.1.2 = _13.fld7.2.4 as i64;
_13.fld0 = [_2,_6,_6,_2,_2,_6,_6,_2];
_13.fld4.4 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld7.0 = [262805804_i32,(-913224169_i32),364852580_i32,(-925986497_i32),(-206303963_i32),(-1399537331_i32)];
_13.fld7.3 = [_5,_5,_5,_5,_5,_7];
_14 = [11886060235379322433_u64,1287459729095430603_u64];
RET.fld4 = core::ptr::addr_of_mut!(_13.fld7.2.3);
RET.fld3.fld1.0 = _5;
_13.fld7.2.0 = -29256698098799965870693126805509170316_i128;
RET.fld3.fld0.1 = _13.fld7.2.4;
RET.fld3.fld1 = (_7,);
Goto(bb2)
}
bb10 = {
RET.fld3.fld2 = core::ptr::addr_of_mut!(_11);
_13.fld1.fld2.1 = -_18.fld2.1;
_13.fld7.2.3 = -_13.fld1.fld2.1;
_13.fld1.fld2.0 = [_4,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_4,_4,_13.fld4.6.1];
RET.fld3.fld1.0 = _5;
RET.fld0 = !_2;
_18.fld1.1.5 = core::ptr::addr_of_mut!(_11);
_19.1 = _13.fld7.2.4 + _13.fld7.2.4;
RET.fld3.fld0.1 = _13.fld7.2.4 / f32::NAN;
_13.fld1.fld2.6.1 = -_4;
_13.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld7.1.2);
_18.fld2.5 = core::ptr::addr_of_mut!(_11);
RET.fld1.1 = (-1418_i16) as u128;
_13.fld7.2.0 = _1 as i128;
_16 = !404918954_u32;
_13.fld7.2 = ((-147168325993422460274757398178983530861_i128), 121_u8, _8, _18.fld2.1, _19.1);
RET.fld3.fld0.0 = core::ptr::addr_of_mut!(_20);
_13.fld7.2.4 = _19.1 * _19.1;
RET.fld3.fld7 = _13.fld7.2.4 as f64;
_18.fld1.1.2.1 = _13.fld1.fld2.2.1;
_13.fld4.2.2 = 16274207022156248677_u64 as i64;
Call(RET.fld4 = fn13(_13.fld3, _13.fld1.fld2.1, _8, _13.fld1.fld0, _18.fld2.1, _13.fld7.2.0), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
RET.fld1.0 = [5653313245382475501_u64];
_13.fld7.1.2 = _13.fld7.2.4 as i64;
_13.fld0 = [_2,_6,_6,_2,_2,_6,_6,_2];
_13.fld4.4 = core::ptr::addr_of_mut!(_13.fld1.fld1);
_13.fld7.0 = [262805804_i32,(-913224169_i32),364852580_i32,(-925986497_i32),(-206303963_i32),(-1399537331_i32)];
_13.fld7.3 = [_5,_5,_5,_5,_5,_7];
_14 = [11886060235379322433_u64,1287459729095430603_u64];
RET.fld4 = core::ptr::addr_of_mut!(_13.fld7.2.3);
RET.fld3.fld1.0 = _5;
_13.fld7.2.0 = -29256698098799965870693126805509170316_i128;
RET.fld3.fld0.1 = _13.fld7.2.4;
RET.fld3.fld1 = (_7,);
Goto(bb2)
}
bb12 = {
_13.fld1.fld2.6.0 = _10;
_18.fld2.1 = _13.fld7.1.2 as f64;
_13.fld1.fld2.0 = [_4,_4,_13.fld4.6.1,_13.fld4.6.1,_13.fld4.6.1,_4,_13.fld4.6.1];
_16 = 4078646676_u32 >> _13.fld4.6.1;
_18.fld2.3 = [_13.fld7.2.0];
_13.fld7.2.1 = 113_u8;
_18.fld2.5 = core::ptr::addr_of_mut!(_11);
match _13.fld7.2.1 {
113 => bb4,
_ => bb3
}
}
bb13 = {
_24.2.1 = _9 as u8;
_25.1 = -_19.1;
_13.fld7.2 = (_12, _24.2.1, _24.2.2, _24.2.3, _25.1);
_32 = _13.fld1.fld2.2.0;
RET.fld0 = _18.fld1.1.6.0 != _13.fld1.fld2.6.0;
_13.fld1.fld2.5 = core::ptr::addr_of_mut!(_11);
_18.fld1.1.0 = [_4,_13.fld1.fld2.6.1,_13.fld1.fld2.6.1,_4,_18.fld1.1.6.1,_4,_13.fld1.fld2.6.1];
_13.fld4.2.0 = [2469020300609441369_u64];
_22 = -_24.2.3;
_13.fld1.fld2.2 = _13.fld7.1;
_24.1.1 = _18.fld1.1.2.1 % 203763294225775440661861621639250474689_u128;
Call(_13.fld4 = fn15(_32, _24.1.1, _16, _13.fld1.fld2.2.1, _18.fld1.1.3, _24.2.4, _13.fld7.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_13.fld1.fld2.3 = [_24.2.0];
_25 = (_13.fld2, _19.1);
_13.fld7.2.2 = [_16];
_18.fld2.1 = _13.fld1.fld2.1 * _24.2.3;
_24.2.0 = _12 + _13.fld7.2.0;
_18.fld2.3 = [_24.2.0];
Goto(bb15)
}
bb15 = {
_18.fld1.1.0 = _13.fld1.fld2.0;
_18.fld1.1.2.2 = 5_usize as i64;
_18.fld2.2 = (_13.fld1.fld2.2.0, _13.fld7.1.1, _13.fld1.fld2.2.2);
RET.fld3.fld4 = core::ptr::addr_of_mut!(_20);
_13.fld5 = [_13.fld1.fld2.6.1,_13.fld4.6.1,_18.fld1.1.6.1,_18.fld1.1.6.1,_18.fld2.6.1,_13.fld1.fld2.6.1,_18.fld2.6.1];
_7 = _5;
_25 = (_13.fld2, _13.fld7.2.4);
Goto(bb16)
}
bb16 = {
_18.fld2.0 = [_13.fld4.6.1,_18.fld1.1.6.1,_18.fld1.1.6.1,_18.fld2.6.1,_13.fld4.6.1,_18.fld1.1.6.1,_18.fld2.6.1];
_24.2.1 = !_13.fld7.2.1;
_9 = _5;
_13.fld1.fld2.2.0 = [16225399756774377713_u64];
_13.fld1.fld2 = (_18.fld2.0, _18.fld2.1, _13.fld7.1, _18.fld2.3, _13.fld4.4, _13.fld4.5, _18.fld2.6);
_19.0 = core::ptr::addr_of_mut!(_16);
_24.2.4 = _25.1;
_39.fld0 = core::ptr::addr_of!(_13.fld0);
_29.2.1 = _18.fld1.1.6.1;
_18.fld2.0 = [_13.fld4.6.1,_29.2.1,_13.fld1.fld2.6.1,_29.2.1,_29.2.1,_4,_13.fld1.fld2.6.1];
_18.fld1.1.1 = _24.2.3;
RET.fld3.fld1 = (_5,);
Goto(bb17)
}
bb17 = {
RET.fld3.fld5 = 1081322067553740648_usize;
Goto(bb18)
}
bb18 = {
_8 = [_16];
_21.0 = core::ptr::addr_of_mut!(_11);
_13.fld4.1 = _18.fld1.1.1 - _24.2.3;
_24.0 = _13.fld7.0;
_40.6.1 = _29.2.1 >> _24.2.0;
_18.fld2.6.1 = 13330412079082212315_u64 as i8;
_11 = _6 as i32;
_18.fld2.5 = _18.fld1.1.5;
_18.fld2.4 = _13.fld1.fld2.4;
_30 = _40.6.1 as f64;
_21.0 = _18.fld2.5;
_41 = [_24.2.0];
_23 = [_18.fld2.2.1,_13.fld1.fld2.2.1,_13.fld4.2.1,_13.fld7.1.1,_18.fld2.2.1];
RET.fld3.fld3 = 14942319337659707637_u64 - 3420157352561752376_u64;
Goto(bb19)
}
bb19 = {
_17 = _24.3;
_18.fld0 = core::ptr::addr_of!(_13.fld0);
_39.fld1 = [_13.fld4.2.1,_13.fld1.fld2.2.1,_24.1.1,_18.fld2.2.1,_24.1.1];
_13.fld7.2.0 = -_12;
_18.fld1.1 = (_13.fld4.0, _30, _13.fld1.fld2.2, _18.fld2.3, _18.fld2.4, _18.fld2.5, _13.fld4.6);
_40.5 = core::ptr::addr_of_mut!(_11);
RET.fld3.fld2 = core::ptr::addr_of_mut!(_11);
_44 = (_18.fld1.1.6.0, _40.6.1);
_40.2 = (_24.1.0, _24.1.1, _13.fld6);
RET.fld3.fld0.0 = _19.0;
_13.fld1.fld2.2.2 = 8944466830182476766_u64 as i64;
_18.fld1.1.2.1 = !_24.1.1;
_29.2 = (_18.fld1.1.6.0, _40.6.1);
_40.2.0 = [16128625219155045573_u64];
_18.fld2.1 = _18.fld1.1.1;
_18.fld2.2.1 = !_18.fld1.1.2.1;
_5 = _7;
_18.fld1.1.3 = _18.fld2.3;
RET.fld3.fld3 = 17937009479768810263_u64 / 7649082491192483016_u64;
Goto(bb20)
}
bb20 = {
_39.fld3 = !_40.6.1;
_24.2 = _13.fld7.2;
_13.fld1.fld2.6 = (_13.fld4.6.0, _39.fld3);
_40 = (_18.fld2.0, _18.fld2.1, _13.fld4.2, _13.fld1.fld2.3, _18.fld1.1.4, _18.fld1.1.5, _29.2);
_45 = _13.fld7.2.4 / (-0.000000000000000000000000000000000000004806654118314521_f32);
_18.fld1.1.2 = (_13.fld4.2.0, _13.fld7.1.1, _18.fld2.2.2);
_36 = _39.fld1;
_13.fld7.2.0 = _24.2.0 * _12;
_19.0 = _25.0;
_13.fld4.6.1 = _39.fld3 >> _13.fld1.fld2.6.1;
Goto(bb21)
}
bb21 = {
_40.5 = core::ptr::addr_of_mut!(_11);
_13.fld4.6 = _44;
_39.fld4.fld1 = (_25.0, _24.2.4);
_35 = core::ptr::addr_of_mut!(_25.0);
_15 = _9;
RET.fld3.fld5 = 14083328067462778120_usize << _40.6.1;
_18.fld1.1.2.1 = _40.2.1;
_9 = _7;
_13.fld5 = [_13.fld1.fld2.6.1,_29.2.1,_13.fld4.6.1,_44.1,_13.fld1.fld2.6.1,_4,_44.1];
_24 = (_13.fld7.0, _18.fld1.1.2, _13.fld7.2, _17);
RET.fld3.fld5 = _18.fld1.0 as usize;
_41 = [_13.fld7.2.0];
_18.fld1.1.6.1 = _40.6.1 << _13.fld7.2.0;
_13.fld1.fld2.3 = [_12];
_39.fld1 = [_24.1.1,_13.fld4.2.1,_24.1.1,_18.fld1.1.2.1,_13.fld4.2.1];
_13.fld1.fld3 = 16654898821705299102_u64 as u8;
_41 = [_12];
_13.fld7.1 = (_13.fld1.fld2.2.0, _18.fld2.2.1, _40.2.2);
Goto(bb22)
}
bb22 = {
_13.fld1.fld2.0 = [_18.fld1.1.6.1,_18.fld1.1.6.1,_29.2.1,_39.fld3,_40.6.1,_18.fld1.1.6.1,_13.fld4.6.1];
_39.fld4.fld0 = [_9,_7,_15,_5,_9,_5];
_33 = _18.fld1.1.1;
_13.fld1.fld2.6.0 = _13.fld4.2.2 as isize;
_18.fld2.3 = [_24.2.0];
_13.fld2 = core::ptr::addr_of_mut!(_20);
RET.fld3.fld7 = _18.fld1.0 as f64;
_29.0 = [_11,_11,_11,_11,_11,_11];
_20 = _16;
_45 = _20 as f32;
_18.fld2.1 = _33 / 1_f64;
_18.fld1.1 = _13.fld4;
_39.fld4.fld1.0 = core::ptr::addr_of_mut!(_20);
RET.fld3.fld1 = (_15,);
Goto(bb23)
}
bb23 = {
_21 = (_13.fld4.5, _13.fld1.fld1);
_24.2.3 = -_40.1;
_18.fld1.1.5 = core::ptr::addr_of_mut!(_11);
Call(_23 = core::intrinsics::transmute(_39.fld1), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
_13.fld1.fld2.6 = (_18.fld1.1.6.0, _29.2.1);
_13.fld6 = _13.fld7.1.2 & _13.fld7.1.2;
RET.fld2 = [_13.fld7.1.1,_18.fld1.1.2.1,_18.fld2.2.1,_13.fld4.2.1,_13.fld7.1.1];
_42 = _18.fld1.1.2.1;
_24.1.1 = _7 as u128;
_13.fld4.6 = (_40.6.0, _29.2.1);
Goto(bb25)
}
bb25 = {
Call(_59 = dump_var(12_usize, 7_usize, Move(_7), 11_usize, Move(_11), 8_usize, Move(_8), 32_usize, Move(_32)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_59 = dump_var(12_usize, 44_usize, Move(_44), 10_usize, Move(_10), 15_usize, Move(_15), 3_usize, Move(_3)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_59 = dump_var(12_usize, 9_usize, Move(_9), 14_usize, Move(_14), 16_usize, Move(_16), 60_usize, _60), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [u16; 1],mut _2: f64,mut _3: [u32; 1],mut _4: [bool; 2],mut _5: f64,mut _6: i128) -> *mut f64 {
mir! {
type RET = *mut f64;
let _7: f64;
let _8: usize;
let _9: u8;
let _10: [char; 6];
let _11: Adt50;
let _12: char;
let _13: isize;
let _14: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _15: f32;
let _16: u8;
let _17: (isize, i8);
let _18: [i8; 7];
let _19: ();
let _20: ();
{
_4 = [true,false];
_1 = [24076_u16];
_5 = _2;
_5 = _2 - _2;
_3 = [5410156_u32];
_1 = [49537_u16];
match _6 {
0 => bb1,
193114040927516003188617209252784680595 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_3 = [1908845253_u32];
_4 = [false,false];
Goto(bb4)
}
bb4 = {
RET = core::ptr::addr_of_mut!(_7);
_6 = 1019397771460301515_usize as i128;
_11.fld2.1 = _5;
_11.fld2.2.1 = _11.fld2.1 as u128;
_8 = 1_usize;
_4 = [true,false];
_11.fld1.0 = (-61_i8) as u16;
_2 = _5 * _5;
_11.fld1.1.3 = [_6];
_3 = [761256601_u32];
(*RET) = (-124_i8) as f64;
match _8 {
0 => bb5,
1 => bb8,
_ => bb7
}
}
bb5 = {
_3 = [1908845253_u32];
_4 = [false,false];
Goto(bb4)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = '\u{e2304}';
_13 = 252_u8 as isize;
_11.fld1.1.2.0 = [1053280790023065375_u64];
_11.fld2.2.0 = [14106006204617651557_u64];
_13 = _6 as isize;
_14.2.1 = !211_u8;
_11.fld1.1.2.1 = _11.fld2.2.1;
_14.0 = [(-458358521_i32),(-512695155_i32),(-1641020953_i32),363443610_i32,170953594_i32,(-445067445_i32)];
_11.fld2.2 = (_11.fld1.1.2.0, _11.fld1.1.2.1, (-3112386470181394192_i64));
_5 = _2;
_5 = _13 as f64;
_14.1.0 = [3735370285337147959_u64];
_11.fld1.1.2 = (_11.fld2.2.0, _11.fld2.2.1, _11.fld2.2.2);
_14.2.1 = _2 as u8;
_11.fld2.6.0 = _13;
_11.fld1.1.1 = _11.fld1.0 as f64;
_3 = [1749377841_u32];
_10 = [_12,_12,_12,_12,_12,_12];
_11.fld1.1.1 = -_5;
_14.2.2 = [750761_u32];
_11.fld1.1.3 = [_6];
_6 = (-16111_i16) as i128;
_11.fld1.1.2.1 = _11.fld2.2.1 + _11.fld2.2.1;
_11.fld2.1 = _7 / f64::INFINITY;
Goto(bb9)
}
bb9 = {
_11.fld1.1.2.0 = _11.fld2.2.0;
_11.fld2.2 = (_11.fld1.1.2.0, _11.fld1.1.2.1, _11.fld1.1.2.2);
_11.fld1.1.2.0 = [17587251383150169105_u64];
_6 = (-47915926588196993793533122558450302501_i128) & (-106903788510133829507646102896251606385_i128);
_4 = [false,false];
_14.2.0 = !_6;
_14.2.3 = -_2;
match _11.fld2.2.2 {
340282366920938463460262220961586817264 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_11.fld1.1.0 = [63_i8,(-16_i8),(-17_i8),(-75_i8),(-3_i8),(-49_i8),(-3_i8)];
_11.fld2.6 = (_13, _11.fld1.1.0[_8]);
match _11.fld1.1.2.2 {
0 => bb7,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb8,
5 => bb12,
6 => bb13,
340282366920938463460262220961586817264 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
_11.fld1.1.2.0 = _11.fld2.2.0;
_11.fld2.2 = (_11.fld1.1.2.0, _11.fld1.1.2.1, _11.fld1.1.2.2);
_11.fld1.1.2.0 = [17587251383150169105_u64];
_6 = (-47915926588196993793533122558450302501_i128) & (-106903788510133829507646102896251606385_i128);
_4 = [false,false];
_14.2.0 = !_6;
_14.2.3 = -_2;
match _11.fld2.2.2 {
340282366920938463460262220961586817264 => bb11,
_ => bb10
}
}
bb14 = {
Return()
}
bb15 = {
_11.fld2.2.1 = !_11.fld1.1.2.1;
_14.3 = [_12,_12,_12,_10[_8],_10[_8],_12];
_9 = _12 as u8;
_14.1.1 = !_11.fld2.2.1;
_11.fld2.2.2 = _11.fld1.1.2.2 >> _11.fld2.2.1;
_11.fld1.1.2.2 = _14.2.1 as i64;
RET = core::ptr::addr_of_mut!((*RET));
_11.fld2.6 = (_13, _11.fld1.1.0[_8]);
_14.1.2 = _11.fld2.2.2;
_11.fld2.2.2 = -_11.fld1.1.2.2;
_11.fld2.6.1 = !_11.fld1.1.0[_8];
_10 = [_14.3[_8],_12,_12,_14.3[_8],_12,_12];
_17.1 = _11.fld2.6.1 >> _14.2.1;
Goto(bb16)
}
bb16 = {
Call(_19 = dump_var(13_usize, 4_usize, Move(_4), 10_usize, Move(_10), 9_usize, Move(_9), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: *mut *mut i64,mut _2: (isize, i8),mut _3: isize) -> [u32; 1] {
mir! {
type RET = [u32; 1];
let _4: i64;
let _5: i32;
let _6: [u16; 1];
let _7: [u64; 1];
let _8: [i32; 6];
let _9: isize;
let _10: i8;
let _11: [i8; 7];
let _12: isize;
let _13: u32;
let _14: *mut f64;
let _15: (i128,);
let _16: [bool; 2];
let _17: char;
let _18: (*mut u32, f32);
let _19: *mut *mut u32;
let _20: Adt55;
let _21: ();
let _22: ();
{
RET = [4243572101_u32];
RET = [1836562370_u32];
_2.0 = !_3;
_1 = core::ptr::addr_of_mut!((*_1));
RET = [3151564622_u32];
_2.1 = (-3080580015980165695_i64) as i8;
_3 = !_2.0;
_2 = (_3, 48_i8);
_2 = (_3, 109_i8);
_2.0 = _3;
_3 = _2.1 as isize;
RET = [3721118973_u32];
_3 = 3022321118_u32 as isize;
_2.1 = (-194300466_i32) as i8;
(*_1) = core::ptr::addr_of_mut!(_4);
_2.0 = _3;
_2.0 = _3;
_2.1 = (-22_i8) >> _3;
_2.1 = (-86_i8);
RET = [1430198986_u32];
_4 = -(-3244528756487508817_i64);
_3 = -_2.0;
_2.1 = 124_i8;
_8 = [181430135_i32,642056680_i32,2054294514_i32,(-39410047_i32),426764011_i32,1944919161_i32];
_9 = 17085825889316693476_u64 as isize;
match _2.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
124 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = [19890_u16];
_2.0 = (-1253952367_i32) as isize;
_9 = _3 - _3;
_2.0 = _9 & _3;
_2.0 = _3 >> _9;
_3 = !_2.0;
_8 = [(-1780422142_i32),289654990_i32,(-420460221_i32),6879622_i32,2073356950_i32,(-964483419_i32)];
_2.0 = !_3;
RET = [1803317953_u32];
_5 = (-582135581_i32) << _2.0;
_11 = [_2.1,_2.1,_2.1,_2.1,_2.1,_2.1,_2.1];
_2.1 = (-33_i8) | 54_i8;
_11 = [_2.1,_2.1,_2.1,_2.1,_2.1,_2.1,_2.1];
RET = [4011267419_u32];
_9 = _2.1 as isize;
(*_1) = core::ptr::addr_of_mut!(_4);
_7 = [4130692065210597573_u64];
_2 = (_9, (-48_i8));
(*_1) = core::ptr::addr_of_mut!(_4);
_2.0 = _3;
_4 = (-3626268054687738036_i64) & 3374622589188156057_i64;
_9 = -_2.0;
_7 = [18403028886271383852_u64];
_11 = [_2.1,_2.1,_2.1,_2.1,_2.1,_2.1,_2.1];
RET = [3981127537_u32];
RET = [3089412056_u32];
_11 = [_2.1,_2.1,_2.1,_2.1,_2.1,_2.1,_2.1];
_9 = _2.0;
match _2.1 {
0 => bb4,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463463374607431768211408 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET = [1111875233_u32];
_4 = !(-5990829135195092043_i64);
_10 = -_2.1;
_7 = [17267867205610770778_u64];
RET = [2552905904_u32];
_2.0 = _3 - _9;
_2.0 = _3;
_12 = _2.0;
_12 = (-61403119003522430727455519512043411624_i128) as isize;
_11 = [_2.1,_10,_2.1,_2.1,_10,_10,_10];
_2 = (_9, _10);
_13 = false as u32;
_4 = 8446585473539067354_i64 << _2.0;
_8 = [_5,_5,_5,_5,_5,_5];
_12 = _3 << _5;
_1 = core::ptr::addr_of_mut!((*_1));
_12 = _2.0 - _9;
_5 = 430824132_i32;
_10 = !_2.1;
RET = [_13];
_12 = _2.0;
RET = [_13];
_4 = 7041978488001475986_i64;
_9 = _3 | _12;
match _5 {
0 => bb1,
1 => bb8,
2 => bb3,
430824132 => bb13,
_ => bb7
}
}
bb13 = {
_15.0 = -(-11350736742169472858032222541293262132_i128);
_6 = [13_u16];
_16 = [true,false];
_10 = _2.1 - _2.1;
RET = [_13];
_2.0 = _12 >> _12;
_13 = !1899314357_u32;
_2 = (_12, _10);
_13 = _15.0 as u32;
_13 = !3040770310_u32;
RET = [_13];
_17 = '\u{c49f1}';
_18.1 = 72917101459486330923760502480248552113_u128 as f32;
RET = [_13];
_7 = [2102808107942209035_u64];
_4 = 7611604653677256149_i64 << _10;
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb14)
}
bb14 = {
_7 = [3352785655672713927_u64];
Goto(bb15)
}
bb15 = {
Call(_21 = dump_var(14_usize, 15_usize, Move(_15), 8_usize, Move(_8), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_21 = dump_var(14_usize, 13_usize, Move(_13), 11_usize, Move(_11), 7_usize, Move(_7), 22_usize, _22), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [u64; 1],mut _2: u128,mut _3: u32,mut _4: u128,mut _5: [i128; 1],mut _6: f32,mut _7: ([u64; 1], u128, i64)) -> ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)) {
mir! {
type RET = ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8));
let _8: f32;
let _9: Adt58;
let _10: [char; 6];
let _11: Adt55;
let _12: [i128; 1];
let _13: f32;
let _14: (i128, u8, [u32; 1], f64, f32);
let _15: [u16; 4];
let _16: i8;
let _17: char;
let _18: [u32; 1];
let _19: isize;
let _20: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _21: i8;
let _22: [u32; 1];
let _23: [bool; 8];
let _24: [bool; 8];
let _25: isize;
let _26: isize;
let _27: (isize, i8);
let _28: Adt66;
let _29: u8;
let _30: [u16; 4];
let _31: bool;
let _32: (*mut i32, *mut i64);
let _33: *const [bool; 8];
let _34: [bool; 8];
let _35: i8;
let _36: isize;
let _37: isize;
let _38: bool;
let _39: [i128; 1];
let _40: bool;
let _41: *mut *mut u32;
let _42: bool;
let _43: [u64; 2];
let _44: [bool; 2];
let _45: bool;
let _46: ();
let _47: ();
{
RET.6.1 = (-115_i8) & 55_i8;
_1 = _7.0;
RET.2.1 = _7.1;
RET.3 = [(-95369795638460932198570167855802633411_i128)];
RET.6.1 = -(-19_i8);
RET.6.0 = 9223372036854775807_isize & (-9223372036854775808_isize);
RET.3 = _5;
_5 = [168225582838958610366178728389042166752_i128];
_7 = (_1, _4, 1220519997179674284_i64);
RET.1 = (-1225987278_i32) as f64;
RET.1 = _3 as f64;
RET.3 = _5;
_5 = [86271829190573037947064617931420050346_i128];
_9.fld1 = 1611277319_i32 as f64;
_10 = ['\u{b43cd}','\u{a13de}','\u{a0b4}','\u{becde}','\u{32b1b}','\u{10b1d1}'];
RET.0 = [15_i8,75_i8,(-84_i8),69_i8,(-18_i8),(-27_i8),69_i8];
_13 = _9.fld1 as f32;
_7 = (_1, _4, (-3939481190527398456_i64));
RET.1 = _9.fld1 * _9.fld1;
_13 = -_6;
_14.1 = !180_u8;
_11.fld4.0 = _13 as i128;
_14.4 = -_13;
_9.fld2.fld0 = core::ptr::addr_of_mut!(_11.fld2.1);
_1 = [17801992630174825244_u64];
Call(_14.4 = fn16(_14.1, _7.2, _9.fld2.fld0, _14.1, _11.fld4.0, _5, _9.fld2.fld0, _11.fld4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14.0 = _11.fld4.0 | _11.fld4.0;
RET.4 = _9.fld2.fld0;
RET.6.0 = 9223372036854775807_isize ^ 9223372036854775807_isize;
_12 = [_14.0];
_5 = _12;
_14.1 = (-1435844608_i32) as u8;
_11.fld5.0 = [3536590847304345084_u64];
_11.fld1 = [_2,_7.1,_2,_4,_2];
RET.2.2 = _7.2 * _7.2;
RET.3 = [_11.fld4.0];
_14.2 = [_3];
_11.fld0 = _3;
_16 = false as i8;
_9.fld2.fld1 = _7.0;
_9.fld3 = ['\u{32954}','\u{bec40}','\u{4b938}','\u{90992}','\u{3acae}','\u{2218b}'];
RET.3 = _5;
_11.fld5 = _7;
_14.3 = -_9.fld1;
Goto(bb2)
}
bb2 = {
_15 = [31202_u16,16493_u16,18878_u16,53250_u16];
_9.fld0.0 = '\u{10af4c}';
RET.0 = [_16,_16,_16,_16,_16,_16,_16];
RET.2.0 = _9.fld2.fld1;
_11.fld6 = core::ptr::addr_of_mut!(_11.fld0);
_13 = _14.4 + _14.4;
_11.fld4 = (_14.0,);
RET.2.2 = _7.2 >> _2;
_7.1 = 18243514875283738844_u64 as u128;
Call(_14.1 = core::intrinsics::bswap(224_u8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15 = [59713_u16,58312_u16,60757_u16,8213_u16];
_9.fld0.0 = '\u{a90e4}';
RET.4 = core::ptr::addr_of_mut!(_11.fld2.1);
_11.fld0 = _3;
_11.fld2.1 = core::ptr::addr_of_mut!(_11.fld5.2);
RET.2.1 = _11.fld5.1;
_1 = [7954075491757004125_u64];
RET.3 = [_14.0];
RET.2.1 = (-18210_i16) as u128;
_11.fld4.0 = _14.0 - _14.0;
_14.1 = 14019271807165443262_u64 as u8;
_14.4 = _13 / f32::NAN;
_14.1 = 78_u8 ^ 227_u8;
_11.fld2.1 = core::ptr::addr_of_mut!(_11.fld5.2);
RET.1 = -_14.3;
RET.6.1 = _16 + _16;
_11.fld5.2 = _7.2;
RET.1 = -_14.3;
_11.fld5 = (_7.0, _2, _7.2);
RET.4 = core::ptr::addr_of_mut!(_11.fld2.1);
_9.fld0.0 = '\u{d2a}';
Goto(bb4)
}
bb4 = {
_15 = [30724_u16,63251_u16,21883_u16,2224_u16];
_20.1.1 = _2;
RET.0 = [_16,_16,_16,_16,_16,_16,_16];
_4 = !_20.1.1;
RET.4 = core::ptr::addr_of_mut!(_11.fld2.1);
_20.2.2 = _14.2;
RET.2.2 = _7.2 & _11.fld5.2;
_20.2.4 = _14.4;
RET.2.0 = _11.fld5.0;
_4 = _2 & _11.fld5.1;
RET.6 = (9223372036854775807_isize, _16);
_8 = _13;
_11.fld1 = [_11.fld5.1,_20.1.1,_20.1.1,_11.fld5.1,_11.fld5.1];
RET.2.2 = _11.fld5.2;
_16 = _9.fld1 as i8;
_11.fld0 = _3;
_7.2 = 49100_u16 as i64;
_20.1 = (_7.0, _4, _11.fld5.2);
_11.fld6 = core::ptr::addr_of_mut!(_11.fld0);
_19 = _20.1.1 as isize;
RET.2 = _11.fld5;
_11.fld4 = (_14.0,);
_11.fld3 = 16646_u16 << _11.fld4.0;
RET.4 = _9.fld2.fld0;
_20.0 = [(-1428675402_i32),(-1126404447_i32),(-1560622788_i32),500773434_i32,1019729434_i32,(-1990618089_i32)];
_11.fld5.2 = _7.2 << _4;
_13 = -_20.2.4;
_10 = _9.fld3;
_20.2.0 = _13 as i128;
Goto(bb5)
}
bb5 = {
RET.0 = [_16,_16,_16,_16,_16,_16,_16];
_20.2 = (_11.fld4.0, _14.1, _14.2, _9.fld1, _14.4);
_14.0 = _11.fld4.0;
_20.3 = _10;
_1 = [2583274390113870341_u64];
_23 = [false,true,true,true,true,false,false,false];
_14.3 = _9.fld1 - _9.fld1;
_24 = [true,true,false,true,true,false,false,true];
_20.2.1 = _16 as u8;
RET.6.1 = (-1269207158_i32) as i8;
RET.3 = _12;
match _20.1.2 {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb7,
340282366920938463459435126241240813000 => bb9,
_ => bb8
}
}
bb6 = {
_15 = [30724_u16,63251_u16,21883_u16,2224_u16];
_20.1.1 = _2;
RET.0 = [_16,_16,_16,_16,_16,_16,_16];
_4 = !_20.1.1;
RET.4 = core::ptr::addr_of_mut!(_11.fld2.1);
_20.2.2 = _14.2;
RET.2.2 = _7.2 & _11.fld5.2;
_20.2.4 = _14.4;
RET.2.0 = _11.fld5.0;
_4 = _2 & _11.fld5.1;
RET.6 = (9223372036854775807_isize, _16);
_8 = _13;
_11.fld1 = [_11.fld5.1,_20.1.1,_20.1.1,_11.fld5.1,_11.fld5.1];
RET.2.2 = _11.fld5.2;
_16 = _9.fld1 as i8;
_11.fld0 = _3;
_7.2 = 49100_u16 as i64;
_20.1 = (_7.0, _4, _11.fld5.2);
_11.fld6 = core::ptr::addr_of_mut!(_11.fld0);
_19 = _20.1.1 as isize;
RET.2 = _11.fld5;
_11.fld4 = (_14.0,);
_11.fld3 = 16646_u16 << _11.fld4.0;
RET.4 = _9.fld2.fld0;
_20.0 = [(-1428675402_i32),(-1126404447_i32),(-1560622788_i32),500773434_i32,1019729434_i32,(-1990618089_i32)];
_11.fld5.2 = _7.2 << _4;
_13 = -_20.2.4;
_10 = _9.fld3;
_20.2.0 = _13 as i128;
Goto(bb5)
}
bb7 = {
_14.0 = _11.fld4.0 | _11.fld4.0;
RET.4 = _9.fld2.fld0;
RET.6.0 = 9223372036854775807_isize ^ 9223372036854775807_isize;
_12 = [_14.0];
_5 = _12;
_14.1 = (-1435844608_i32) as u8;
_11.fld5.0 = [3536590847304345084_u64];
_11.fld1 = [_2,_7.1,_2,_4,_2];
RET.2.2 = _7.2 * _7.2;
RET.3 = [_11.fld4.0];
_14.2 = [_3];
_11.fld0 = _3;
_16 = false as i8;
_9.fld2.fld1 = _7.0;
_9.fld3 = ['\u{32954}','\u{bec40}','\u{4b938}','\u{90992}','\u{3acae}','\u{2218b}'];
RET.3 = _5;
_11.fld5 = _7;
_14.3 = -_9.fld1;
Goto(bb2)
}
bb8 = {
_15 = [31202_u16,16493_u16,18878_u16,53250_u16];
_9.fld0.0 = '\u{10af4c}';
RET.0 = [_16,_16,_16,_16,_16,_16,_16];
RET.2.0 = _9.fld2.fld1;
_11.fld6 = core::ptr::addr_of_mut!(_11.fld0);
_13 = _14.4 + _14.4;
_11.fld4 = (_14.0,);
RET.2.2 = _7.2 >> _2;
_7.1 = 18243514875283738844_u64 as u128;
Call(_14.1 = core::intrinsics::bswap(224_u8), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_5 = [_20.2.0];
RET.3 = _5;
_20.2.1 = _14.1;
_14.1 = _20.2.1 & _20.2.1;
_9.fld1 = _14.3 / f64::NAN;
_28.fld3.fld3.1 = _20.2.1 >> _2;
_28.fld3.fld5.0 = _19;
Goto(bb10)
}
bb10 = {
_28.fld3.fld4.0 = [341769647_i32,560268381_i32,445890188_i32,708059053_i32,(-1615270418_i32),893890891_i32];
_28.fld4 = (_11.fld6, _14.4);
match _20.1.2 {
340282366920938463459435126241240813000 => bb11,
_ => bb6
}
}
bb11 = {
_20.3 = [_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld0.0];
_28.fld0.2.1 = !_20.1.1;
RET.5 = core::ptr::addr_of_mut!(_28.fld5);
_18 = [_11.fld0];
_28.fld1.fld1.0 = _11.fld6;
_28.fld3.fld4.2.1 = _14.1 * _20.2.1;
_7.0 = _1;
_20.2.0 = _28.fld3.fld5.0 as i128;
_9.fld2.fld1 = [3678777525510134811_u64];
_20.1 = (_7.0, _2, _11.fld5.2);
_28.fld5 = _9.fld0.0 as i32;
_9.fld2.fld1 = _1;
_11.fld5.1 = _20.1.1 % 287107147348653999224039308233418890555_u128;
_28.fld3.fld4.1 = _11.fld5;
_28.fld3.fld0.1 = 2_usize as f64;
Goto(bb12)
}
bb12 = {
_22 = _14.2;
RET.2 = (_11.fld5.0, _20.1.1, _28.fld3.fld4.1.2);
_28.fld0.3 = [_14.0];
_20.1.1 = !_28.fld3.fld4.1.1;
_28.fld0.0 = [_16,_16,_16,_16,_16,_16,_16];
_28.fld3.fld0.2.0 = [6981961715939528021_u64];
Call(_20.1.1 = core::intrinsics::bswap(_11.fld5.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_28.fld3.fld0.4 = core::ptr::addr_of_mut!(_28.fld3.fld1);
_28.fld3.fld0.2.2 = _20.2.1 as i64;
_28.fld6.0 = _19;
_26 = _28.fld3.fld5.0 & _28.fld6.0;
_28.fld3.fld4.0 = [_28.fld5,_28.fld5,_28.fld5,_28.fld5,_28.fld5,_28.fld5];
_28.fld3.fld3.0 = _16 as i128;
_11.fld5 = (_9.fld2.fld1, _28.fld3.fld4.1.1, _28.fld3.fld0.2.2);
RET.6.1 = _16;
_20.0 = [_28.fld5,_28.fld5,_28.fld5,_28.fld5,_28.fld5,_28.fld5];
_20 = (_28.fld3.fld4.0, _28.fld3.fld4.1, _14, _9.fld3);
_28.fld0.2.2 = _28.fld3.fld0.2.2;
_28.fld3.fld4.2.4 = _13;
_28.fld3.fld5.1 = _16;
RET.5 = core::ptr::addr_of_mut!(_28.fld5);
_25 = _26;
_28.fld3.fld5.1 = _16;
_11.fld2.0 = core::ptr::addr_of_mut!(_28.fld5);
_26 = _19 + _25;
Goto(bb14)
}
bb14 = {
_28.fld3.fld3.3 = -_20.2.3;
_28.fld0.1 = -_14.3;
_32.0 = core::ptr::addr_of_mut!(_28.fld5);
_28.fld1.fld0 = [_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld0.0];
RET.6 = (_25, _16);
_11.fld5.2 = _28.fld3.fld4.1.2;
_11.fld2.0 = core::ptr::addr_of_mut!(_28.fld5);
RET.1 = _20.2.3;
RET.1 = _28.fld5 as f64;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(15_usize, 5_usize, Move(_5), 4_usize, Move(_4), 22_usize, Move(_22), 25_usize, Move(_25)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(15_usize, 26_usize, Move(_26), 23_usize, Move(_23), 10_usize, Move(_10), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: u8,mut _2: i64,mut _3: *mut *mut i64,mut _4: u8,mut _5: i128,mut _6: [i128; 1],mut _7: *mut *mut i64,mut _8: (i128,)) -> f32 {
mir! {
type RET = f32;
let _9: *const [bool; 8];
let _10: isize;
let _11: u16;
let _12: f32;
let _13: Adt55;
let _14: bool;
let _15: f64;
let _16: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]);
let _17: [i8; 7];
let _18: (*mut i32, *mut i64);
let _19: [char; 6];
let _20: Adt60;
let _21: [bool; 2];
let _22: *mut u32;
let _23: i8;
let _24: [char; 6];
let _25: ([u64; 1], u128, i64);
let _26: ();
let _27: ();
{
RET = _1 as f32;
(*_7) = core::ptr::addr_of_mut!(_2);
_2 = 8559157329559345500_i64;
(*_7) = core::ptr::addr_of_mut!(_2);
(*_7) = core::ptr::addr_of_mut!(_2);
_8 = (_5,);
_2 = 1158334463648834602_i64;
_7 = _3;
_11 = !63339_u16;
RET = _2 as f32;
match _2 {
0 => bb1,
1 => bb2,
1158334463648834602 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
(*_3) = core::ptr::addr_of_mut!(_2);
_12 = _5 as f32;
_2 = (-4211546877371232964_i64) | (-2643766139530806391_i64);
Goto(bb5)
}
bb5 = {
_13.fld5.2 = -_2;
_8.0 = _5 & _5;
Goto(bb6)
}
bb6 = {
_13.fld0 = 1665199115_u32;
_4 = (-20220_i16) as u8;
_16.0 = [1278602445_i32,(-1646682090_i32),299671888_i32,400500123_i32,830436875_i32,(-1805316588_i32)];
_16.0 = [1186037092_i32,1650152298_i32,531654540_i32,(-593835180_i32),554013153_i32,1457169852_i32];
match _13.fld0 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
1665199115 => bb13,
_ => bb12
}
}
bb7 = {
_13.fld5.2 = -_2;
_8.0 = _5 & _5;
Goto(bb6)
}
bb8 = {
(*_3) = core::ptr::addr_of_mut!(_2);
_12 = _5 as f32;
_2 = (-4211546877371232964_i64) | (-2643766139530806391_i64);
Goto(bb5)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_13.fld1 = [189896573185733857474471697123203002426_u128,21210552072198916174805023381035368950_u128,219638290281118129206838323190390474867_u128,315127040031554415732684027243083091903_u128,188689373597696508598726261900662570551_u128];
_16.2.4 = _12 * _12;
_16.3 = ['\u{c2f5b}','\u{56b34}','\u{7be0a}','\u{47e7d}','\u{6ee89}','\u{d2126}'];
_13.fld2.1 = (*_7);
_13.fld6 = core::ptr::addr_of_mut!(_13.fld0);
_10 = _13.fld5.2 as isize;
_13.fld0 = 1998124340347025403_u64 as u32;
_13.fld1 = [55952584445048393357616534536945329605_u128,182590380369069368662433292831048463295_u128,327178928406149705668238105763822715009_u128,173088994703167687267586783125606965449_u128,340079136752152132523841568141639479676_u128];
_15 = 273869522211809607794212963444942754908_u128 as f64;
(*_7) = core::ptr::addr_of_mut!(_13.fld5.2);
_13.fld5.2 = !_2;
_13.fld4 = (_8.0,);
_13.fld1 = [245397875910032567458234871934909495319_u128,270211964234104313405234091309669224742_u128,292096953525021183509521623030890236565_u128,184976600111918921130003382504527932941_u128,248720422817741690033389989900992128576_u128];
_16.2.3 = -_15;
_14 = !false;
(*_3) = _13.fld2.1;
RET = (-1583839456_i32) as f32;
_16.1.1 = _16.2.3 as u128;
_16.3 = ['\u{928cf}','\u{d4dec}','\u{4b033}','\u{1843c}','\u{a5c95}','\u{a9068}'];
_13.fld0 = (-1124819770_i32) as u32;
_16.2.3 = _15 + _15;
_2 = -_13.fld5.2;
_13.fld5.1 = _16.1.1;
Call(_16.0 = fn17(_10, _16.3, _10), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_13.fld3 = _11 & _11;
(*_3) = core::ptr::addr_of_mut!(_2);
(*_3) = core::ptr::addr_of_mut!(_16.1.2);
(*_7) = _13.fld2.1;
_18.1 = core::ptr::addr_of_mut!(_2);
_13.fld2.1 = (*_3);
_16.1.2 = _13.fld5.2;
(*_3) = core::ptr::addr_of_mut!(_16.1.2);
_13.fld6 = core::ptr::addr_of_mut!(_13.fld0);
_13.fld2.1 = core::ptr::addr_of_mut!(_13.fld5.2);
_16.3 = ['\u{25234}','\u{b33aa}','\u{13a31}','\u{cddfd}','\u{7a5e3}','\u{e54cb}'];
(*_7) = core::ptr::addr_of_mut!(_13.fld5.2);
_13.fld5.1 = _16.1.1;
_14 = _16.2.3 > _16.2.3;
_5 = _8.0 - _13.fld4.0;
_7 = _3;
_16.3 = ['\u{d64e7}','\u{7a59b}','\u{5b1e1}','\u{256ad}','\u{7a5f1}','\u{87c87}'];
_7 = _3;
_4 = _1 * _1;
_20.fld1 = (_13.fld6, _16.2.4);
_16.2.1 = _4;
_12 = _16.2.4 * _20.fld1.1;
_17 = [89_i8,(-35_i8),10_i8,70_i8,116_i8,(-3_i8),(-80_i8)];
RET = _20.fld1.1 / 1_f32;
_16.1.0 = [2792116464722646023_u64];
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(16_usize, 10_usize, Move(_10), 6_usize, Move(_6), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(16_usize, 5_usize, Move(_5), 27_usize, _27, 27_usize, _27, 27_usize, _27), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: isize,mut _2: [char; 6],mut _3: isize) -> [i32; 6] {
mir! {
type RET = [i32; 6];
let _4: (u16, ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)), [u64; 1]);
let _5: (i128,);
let _6: u32;
let _7: u8;
let _8: f32;
let _9: f32;
let _10: i8;
let _11: [i128; 1];
let _12: Adt56;
let _13: isize;
let _14: [u16; 4];
let _15: (isize, i8);
let _16: Adt52;
let _17: char;
let _18: char;
let _19: f64;
let _20: i8;
let _21: f32;
let _22: isize;
let _23: ();
let _24: ();
{
_1 = -_3;
RET = [1303315993_i32,198066309_i32,(-1990581483_i32),1991070391_i32,(-555580684_i32),(-1337961756_i32)];
RET = [84161659_i32,619769435_i32,396062495_i32,(-2047679502_i32),909459051_i32,279634670_i32];
_1 = !_3;
_4.0 = (-165169186378367613969983056482607747325_i128) as u16;
_4.1.6.1 = !31_i8;
_2 = ['\u{9b244}','\u{e99cf}','\u{8c0bb}','\u{b39c2}','\u{1517f}','\u{6414c}'];
_4.1.2.1 = 294738486253247923673919954955513061325_u128;
_5 = ((-39727673511099475824193706232707405278_i128),);
_4.1.0 = [_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1];
RET = [(-1376812673_i32),(-1378594920_i32),2135831298_i32,301028208_i32,(-2089512133_i32),(-1739456267_i32)];
match _4.1.2.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
294738486253247923673919954955513061325 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4.1.6.0 = _1;
_5.0 = (-36321518007653550261061174487450802570_i128);
_4.1.3 = [_5.0];
_3 = 5262038525345456849_i64 as isize;
_4.1.1 = 12968616680937602175_u64 as f64;
_4.2 = [8799609611159960210_u64];
_4.1.0 = [_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1];
_2 = ['\u{ab475}','\u{cd8ef}','\u{88d1b}','\u{5eeed}','\u{4a2a5}','\u{5c5e5}'];
_4.1.3 = [_5.0];
_4.1.2.2 = 5746927526018773218_i64;
RET = [1398034326_i32,1530939256_i32,(-1640466230_i32),1092347872_i32,(-903524873_i32),336376441_i32];
_5 = (154745943003383430806252987956377325021_i128,);
Goto(bb10)
}
bb10 = {
_4.1.2.0 = [8290485632458146635_u64];
_6 = 2045262972_u32;
_4.1.1 = _4.1.2.2 as f64;
_4.2 = _4.1.2.0;
_7 = !143_u8;
_2 = ['\u{98719}','\u{467f5}','\u{bcd52}','\u{1bac0}','\u{67b2c}','\u{4beae}'];
RET = [(-749894091_i32),1114473471_i32,(-253680722_i32),(-1775257257_i32),650323459_i32,(-639440546_i32)];
RET = [993355592_i32,1645502317_i32,2051791687_i32,(-1083539008_i32),1502532561_i32,(-870199401_i32)];
_4.1.6.0 = _1 - _1;
_4.2 = [6629560901284221333_u64];
_2 = ['\u{e4ef6}','\u{e24de}','\u{8a8ef}','\u{c8308}','\u{fc041}','\u{398b1}'];
_9 = 9035097440001445060_u64 as f32;
Goto(bb11)
}
bb11 = {
_9 = _4.1.6.1 as f32;
_7 = _4.0 as u8;
_4.1.2.2 = 6726350460098567811_i64;
_13 = _4.1.2.1 as isize;
_7 = !184_u8;
_1 = _4.1.6.0 | _13;
_4.1.3 = [_5.0];
_5.0 = (-34800139246340929012983501520856629878_i128);
_4.1.6 = (_1, (-54_i8));
_12.fld1 = _4.1.6.1 << _5.0;
_4.1.6.0 = _1;
_11 = [_5.0];
_12 = Adt56 { fld0: false,fld1: _4.1.6.1 };
_7 = !193_u8;
_10 = _4.1.2.1 as i8;
match _12.fld1 {
340282366920938463463374607431768211402 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_5 = ((-63567321968363544133920449471874058258_i128),);
_2 = ['\u{c908}','\u{466c9}','\u{1039ee}','\u{a6ae1}','\u{ff06f}','\u{d3b81}'];
_14 = [_4.0,_4.0,_4.0,_4.0];
RET = [(-15003337_i32),1144598639_i32,70396941_i32,(-1209416569_i32),(-1952840827_i32),409499501_i32];
_4.1.2.0 = _4.2;
_8 = _4.1.6.1 as f32;
_1 = _12.fld0 as isize;
match _4.1.6.1 {
0 => bb4,
1 => bb12,
2 => bb14,
3 => bb15,
4 => bb16,
340282366920938463463374607431768211402 => bb18,
_ => bb17
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_4.1.6.0 = _1;
_5.0 = (-36321518007653550261061174487450802570_i128);
_4.1.3 = [_5.0];
_3 = 5262038525345456849_i64 as isize;
_4.1.1 = 12968616680937602175_u64 as f64;
_4.2 = [8799609611159960210_u64];
_4.1.0 = [_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1,_4.1.6.1];
_2 = ['\u{ab475}','\u{cd8ef}','\u{88d1b}','\u{5eeed}','\u{4a2a5}','\u{5c5e5}'];
_4.1.3 = [_5.0];
_4.1.2.2 = 5746927526018773218_i64;
RET = [1398034326_i32,1530939256_i32,(-1640466230_i32),1092347872_i32,(-903524873_i32),336376441_i32];
_5 = (154745943003383430806252987956377325021_i128,);
Goto(bb10)
}
bb18 = {
_4.0 = _5.0 as u16;
_2 = ['\u{4ec66}','\u{b8612}','\u{4b801}','\u{3f473}','\u{dc8ba}','\u{d0895}'];
_15 = (_1, _4.1.6.1);
_4.1.2.2 = -631564017507640352_i64;
_2 = ['\u{97e66}','\u{f7e5e}','\u{da849}','\u{62219}','\u{a4b7}','\u{521f4}'];
_4.2 = _4.1.2.0;
_4.1.6.0 = -_15.0;
_19 = -_4.1.1;
_12.fld0 = _4.1.6.0 != _15.0;
_5.0 = (-101208332424094077405137384774476830365_i128) << _1;
_4.1.0 = [_12.fld1,_12.fld1,_12.fld1,_10,_4.1.6.1,_12.fld1,_15.1];
_4.1.2.0 = [2977047258017680569_u64];
_12 = Adt56 { fld0: true,fld1: _15.1 };
_16.fld1 = [5639664479361833013_u64];
_7 = _15.0 as u8;
_4.1.2.0 = _4.2;
_7 = 123_u8;
_5 = (107605724849950697103299273277899835056_i128,);
_9 = -_8;
_4.1.2.1 = _5.0 as u128;
RET = [(-1889936927_i32),194903525_i32,391873832_i32,22852383_i32,994938362_i32,1565394896_i32];
_15.1 = !_12.fld1;
Goto(bb19)
}
bb19 = {
Call(_23 = dump_var(17_usize, 5_usize, Move(_5), 15_usize, Move(_15), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_23 = dump_var(17_usize, 13_usize, Move(_13), 24_usize, _24, 24_usize, _24, 24_usize, _24), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: i32,mut _2: isize,mut _3: char,mut _4: i8,mut _5: isize,mut _6: *mut *mut i64,mut _7: char,mut _8: *mut i32,mut _9: char,mut _10: char,mut _11: isize,mut _12: isize,mut _13: (char,),mut _14: *mut i32,mut _15: usize,mut _16: f32) -> *mut i64 {
mir! {
type RET = *mut i64;
let _17: [u128; 5];
let _18: *mut *mut u32;
let _19: isize;
let _20: f32;
let _21: bool;
let _22: u8;
let _23: [u64; 1];
let _24: bool;
let _25: [u128; 5];
let _26: ([u64; 1], u128, i64);
let _27: ([i32; 6], *mut *mut u32, (isize, i8));
let _28: [u128; 5];
let _29: [u32; 1];
let _30: [char; 6];
let _31: isize;
let _32: bool;
let _33: i64;
let _34: isize;
let _35: *mut i64;
let _36: i128;
let _37: [i128; 1];
let _38: [u128; 5];
let _39: usize;
let _40: Adt64;
let _41: [u64; 2];
let _42: Adt60;
let _43: bool;
let _44: i32;
let _45: (u16, ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)), [u64; 1]);
let _46: [u32; 1];
let _47: [u32; 3];
let _48: isize;
let _49: [u16; 1];
let _50: usize;
let _51: Adt56;
let _52: isize;
let _53: u128;
let _54: [i8; 7];
let _55: [bool; 8];
let _56: u16;
let _57: i64;
let _58: isize;
let _59: ();
let _60: ();
{
_13 = (_9,);
_1 = (*_14);
_8 = _14;
_13.0 = _10;
_13 = (_10,);
_16 = 85112185213388332142053902127109865613_u128 as f32;
_13 = (_9,);
_14 = core::ptr::addr_of_mut!((*_14));
(*_8) = 15437_i16 as i32;
_10 = _7;
_2 = -_11;
_11 = -_2;
_17 = [154965071659630965768709255476331309294_u128,257027994173988080072307213712868054679_u128,264587538432550974054567212457945452187_u128,156775643370192779596329856434569401010_u128,169458690193813702157713784418803253922_u128];
_1 = (*_8) & (*_8);
_7 = _10;
_5 = -_2;
_11 = _2;
(*_14) = _16 as i32;
(*_14) = _1;
_4 = !57_i8;
_8 = core::ptr::addr_of_mut!(_1);
_11 = _12 >> _12;
(*_14) = _1;
_7 = _13.0;
_16 = _15 as f32;
_11 = _12 >> (*_8);
_15 = 8149851983097710358_usize;
_14 = _8;
_11 = _15 as isize;
Goto(bb1)
}
bb1 = {
_14 = core::ptr::addr_of_mut!((*_8));
_8 = core::ptr::addr_of_mut!(_1);
_16 = _12 as f32;
_17 = [320955185502219659020741234039078049949_u128,111669534103816917139740642476631981951_u128,50037246763261673764663069868410055156_u128,39495689876623889747507293950987545663_u128,71843665950962373621870881499349580551_u128];
_20 = _16 + _16;
_21 = false;
_5 = _12;
_14 = core::ptr::addr_of_mut!((*_8));
_3 = _7;
_13 = (_9,);
_20 = -_16;
_22 = 247_u8 ^ 159_u8;
_17 = [162879810715506157746574316073816730264_u128,301207814379846071639010174309507682471_u128,41029936772522556472431302937716535780_u128,208768538569658480451386495305409055496_u128,64296539492511481356107754710250744683_u128];
_1 = !(-209878315_i32);
RET = core::ptr::addr_of_mut!(_26.2);
_26.0 = [2876009593845343747_u64];
(*RET) = 587123476442045381_i64 >> (*_14);
Goto(bb2)
}
bb2 = {
_28 = _17;
_27.0 = [(*_14),(*_14),(*_14),(*_8),_1,_1];
_29 = [2955595288_u32];
_25 = [48962706708336987209813456688154987745_u128,336959857767097138041752420651852788617_u128,110811159686606342739031818023660015280_u128,37096811681186239410401033539664591131_u128,217266643345795567506820441786766203727_u128];
match _15 {
8149851983097710358 => bb4,
_ => bb3
}
}
bb3 = {
_14 = core::ptr::addr_of_mut!((*_8));
_8 = core::ptr::addr_of_mut!(_1);
_16 = _12 as f32;
_17 = [320955185502219659020741234039078049949_u128,111669534103816917139740642476631981951_u128,50037246763261673764663069868410055156_u128,39495689876623889747507293950987545663_u128,71843665950962373621870881499349580551_u128];
_20 = _16 + _16;
_21 = false;
_5 = _12;
_14 = core::ptr::addr_of_mut!((*_8));
_3 = _7;
_13 = (_9,);
_20 = -_16;
_22 = 247_u8 ^ 159_u8;
_17 = [162879810715506157746574316073816730264_u128,301207814379846071639010174309507682471_u128,41029936772522556472431302937716535780_u128,208768538569658480451386495305409055496_u128,64296539492511481356107754710250744683_u128];
_1 = !(-209878315_i32);
RET = core::ptr::addr_of_mut!(_26.2);
_26.0 = [2876009593845343747_u64];
(*RET) = 587123476442045381_i64 >> (*_14);
Goto(bb2)
}
bb4 = {
_28 = [131488593232644166125024311903262232654_u128,253919646205316786068897799977548228370_u128,241515735780080625182735181956303044606_u128,21763998139030808864657288174783218336_u128,37126710744446855997458005687235277614_u128];
_14 = core::ptr::addr_of_mut!((*_14));
_11 = _21 as isize;
_31 = _5 << _26.2;
match _15 {
8149851983097710358 => bb6,
_ => bb5
}
}
bb5 = {
_14 = core::ptr::addr_of_mut!((*_8));
_8 = core::ptr::addr_of_mut!(_1);
_16 = _12 as f32;
_17 = [320955185502219659020741234039078049949_u128,111669534103816917139740642476631981951_u128,50037246763261673764663069868410055156_u128,39495689876623889747507293950987545663_u128,71843665950962373621870881499349580551_u128];
_20 = _16 + _16;
_21 = false;
_5 = _12;
_14 = core::ptr::addr_of_mut!((*_8));
_3 = _7;
_13 = (_9,);
_20 = -_16;
_22 = 247_u8 ^ 159_u8;
_17 = [162879810715506157746574316073816730264_u128,301207814379846071639010174309507682471_u128,41029936772522556472431302937716535780_u128,208768538569658480451386495305409055496_u128,64296539492511481356107754710250744683_u128];
_1 = !(-209878315_i32);
RET = core::ptr::addr_of_mut!(_26.2);
_26.0 = [2876009593845343747_u64];
(*RET) = 587123476442045381_i64 >> (*_14);
Goto(bb2)
}
bb6 = {
_8 = core::ptr::addr_of_mut!((*_14));
_8 = _14;
_26.0 = [16189290542050400709_u64];
_26.1 = _31 as u128;
_16 = -_20;
_17 = [_26.1,_26.1,_26.1,_26.1,_26.1];
_15 = _13.0 as usize;
RET = core::ptr::addr_of_mut!(_26.2);
_17 = [_26.1,_26.1,_26.1,_26.1,_26.1];
_14 = _8;
RET = core::ptr::addr_of_mut!(_26.2);
_14 = core::ptr::addr_of_mut!((*_8));
_9 = _10;
RET = core::ptr::addr_of_mut!((*RET));
_14 = _8;
_29 = [1901039333_u32];
RET = core::ptr::addr_of_mut!((*RET));
_21 = (*RET) < _26.2;
_33 = (*RET);
_35 = core::ptr::addr_of_mut!(_33);
_8 = core::ptr::addr_of_mut!((*_14));
Goto(bb7)
}
bb7 = {
RET = _35;
(*RET) = _26.2;
_27.2.0 = _15 as isize;
(*_14) = (-1393522026_i32) >> _26.1;
_26.0 = [3921623347464693476_u64];
_11 = _2 ^ _12;
_15 = 4241807852_u32 as usize;
_27.2.0 = _31 | _31;
_30 = [_3,_7,_3,_7,_9,_3];
(*_8) = 983525020_i32;
_14 = core::ptr::addr_of_mut!((*_8));
_32 = _21;
_24 = !_32;
_33 = _26.2;
_27.0 = [(*_8),(*_8),(*_8),(*_8),(*_14),_1];
_7 = _10;
_32 = !_21;
_16 = _20;
_14 = _8;
_36 = _4 as i128;
RET = core::ptr::addr_of_mut!((*RET));
_29 = [3315191632_u32];
Goto(bb8)
}
bb8 = {
(*_8) = _22 as i32;
_27.2 = (_11, _4);
_36 = 33962793193379219319504104743959675128_i128;
_3 = _9;
_20 = (*RET) as f32;
_19 = !_31;
_34 = -_27.2.0;
Goto(bb9)
}
bb9 = {
_18 = core::ptr::addr_of_mut!(_40.fld4.fld1.0);
_27.2.1 = _4 * _4;
_21 = _32;
_37 = [_36];
_38 = _17;
_22 = 230_u8;
_40.fld4.fld1.1 = (*_35) as f32;
_27.1 = core::ptr::addr_of_mut!((*_18));
_26.2 = (*RET);
_32 = (*RET) != (*_35);
_36 = 50350720659601381366743836785554076486_i128;
_40.fld1 = _28;
Goto(bb10)
}
bb10 = {
(*RET) = _26.2;
_27.1 = core::ptr::addr_of_mut!(_42.fld1.0);
_15 = 9805569272353918474_usize;
_40.fld4.fld1.1 = _20;
_42.fld0 = _30;
_39 = _15;
_5 = _15 as isize;
_23 = [6276905735609319972_u64];
_42.fld1.1 = -_16;
(*_35) = _26.2 * _26.2;
_40.fld3 = _27.2.1;
_46 = _29;
_45.1.5 = core::ptr::addr_of_mut!((*_14));
_26 = (_23, 155671335390880186356685726863567071112_u128, (*RET));
_28 = _17;
_45.1.1 = _1 as f64;
_30 = [_10,_13.0,_9,_10,_10,_13.0];
_6 = core::ptr::addr_of_mut!(_35);
_5 = _34 + _27.2.0;
(*_35) = _26.2 | _26.2;
_37 = [_36];
_35 = core::ptr::addr_of_mut!(_26.2);
Call(_45.0 = fn19(_27, _18, _13.0, _16), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_47 = [2495093252_u32,1893224795_u32,43062996_u32];
(*_6) = core::ptr::addr_of_mut!((*RET));
_40.fld1 = [_26.1,_26.1,_26.1,_26.1,_26.1];
_39 = _15 & _15;
_26 = (_23, 198816521913328681558595106939023305799_u128, (*RET));
_40.fld4.fld0 = _42.fld0;
_39 = !_15;
_44 = _27.2.1 as i32;
_8 = core::ptr::addr_of_mut!((*_8));
_48 = _27.2.0;
Goto(bb12)
}
bb12 = {
_17 = [_26.1,_26.1,_26.1,_26.1,_26.1];
_45.1.6 = _27.2;
_45.1.4 = core::ptr::addr_of_mut!(_35);
_52 = _31;
(*RET) = !_26.2;
_16 = -_40.fld4.fld1.1;
_24 = _32;
_27.2.1 = _4;
_7 = _13.0;
_38 = [_26.1,_26.1,_26.1,_26.1,_26.1];
_45.2 = [10863814521161087929_u64];
_47 = [1628323448_u32,3074818485_u32,3693329343_u32];
_26 = (_45.2, 171926559455972161901210027386371720761_u128, (*_35));
_45.1.4 = core::ptr::addr_of_mut!((*_6));
_50 = !_15;
_22 = _1 as u8;
_51 = Adt56 { fld0: _21,fld1: _45.1.6.1 };
(*_8) = _44;
_26 = (_45.2, 185955404610085291393862924198285414422_u128, (*RET));
Goto(bb13)
}
bb13 = {
_7 = _3;
_29 = [3256845272_u32];
Goto(bb14)
}
bb14 = {
_54 = [_27.2.1,_51.fld1,_40.fld3,_40.fld3,_51.fld1,_45.1.6.1,_45.1.6.1];
_37 = [_36];
_3 = _7;
_21 = _24;
_5 = -_11;
(*RET) = (-23667_i16) as i64;
_15 = _50;
(*_35) = _26.2 ^ _26.2;
_22 = 96_u8;
_54 = [_40.fld3,_51.fld1,_27.2.1,_4,_51.fld1,_40.fld3,_45.1.6.1];
_51 = Adt56 { fld0: _32,fld1: _45.1.6.1 };
(*_8) = _44;
_51 = Adt56 { fld0: _24,fld1: _45.1.6.1 };
_45.1.5 = core::ptr::addr_of_mut!((*_8));
_44 = (*_14) & (*_8);
_41 = [16486916433246537501_u64,5090839454514661463_u64];
_47 = [3019299945_u32,1839690267_u32,2127264371_u32];
_6 = _45.1.4;
_45.1.3 = [_36];
_55 = [_51.fld0,_51.fld0,_32,_51.fld0,_21,_51.fld0,_51.fld0,_24];
_58 = -_2;
_27.2.0 = _51.fld1 as isize;
_4 = _51.fld1 * _51.fld1;
Goto(bb15)
}
bb15 = {
Call(_59 = dump_var(18_usize, 11_usize, Move(_11), 31_usize, Move(_31), 19_usize, Move(_19), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_59 = dump_var(18_usize, 12_usize, Move(_12), 32_usize, Move(_32), 26_usize, Move(_26), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_59 = dump_var(18_usize, 4_usize, Move(_4), 2_usize, Move(_2), 33_usize, Move(_33), 55_usize, Move(_55)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_59 = dump_var(18_usize, 10_usize, Move(_10), 46_usize, Move(_46), 48_usize, Move(_48), 37_usize, Move(_37)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_59 = dump_var(18_usize, 15_usize, Move(_15), 38_usize, Move(_38), 17_usize, Move(_17), 58_usize, Move(_58)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: ([i32; 6], *mut *mut u32, (isize, i8)),mut _2: *mut *mut u32,mut _3: char,mut _4: f32) -> u16 {
mir! {
type RET = u16;
let _5: (isize, i8);
let _6: u64;
let _7: *mut i32;
let _8: f64;
let _9: [u32; 3];
let _10: [u64; 2];
let _11: i16;
let _12: Adt51;
let _13: isize;
let _14: ([i32; 6], *mut *mut u32, (isize, i8));
let _15: u128;
let _16: f32;
let _17: Adt56;
let _18: (*mut u32, f32);
let _19: Adt62;
let _20: Adt64;
let _21: (*mut i32, *mut i64);
let _22: i64;
let _23: [bool; 8];
let _24: *mut i64;
let _25: u16;
let _26: i32;
let _27: ();
let _28: ();
{
_4 = 191688534_u32 as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_5.0 = _1.2.0;
_1.0 = [334771313_i32,1883613841_i32,(-145584746_i32),(-1793048461_i32),1669482187_i32,(-1026254369_i32)];
_5.1 = !_1.2.1;
_5.0 = _1.2.0 + _1.2.0;
_2 = core::ptr::addr_of_mut!((*_2));
_5.1 = !_1.2.1;
RET = !38707_u16;
_8 = _5.1 as f64;
_8 = _5.1 as f64;
_1.2 = _5;
_1.2.1 = _5.1 & _5.1;
_6 = _4 as u64;
_4 = 125_u8 as f32;
_1.2.1 = _8 as i8;
_5.0 = _1.2.0;
Goto(bb1)
}
bb1 = {
_1.2 = _5;
Goto(bb2)
}
bb2 = {
_6 = !16689379381843132039_u64;
_5 = (_1.2.0, _1.2.1);
_10 = [_6,_6];
_11 = (-6013_i16) ^ 9478_i16;
_3 = '\u{819b7}';
_1.0 = [2100401361_i32,(-926219457_i32),1046824962_i32,573861998_i32,(-334523388_i32),1422921052_i32];
_1.2.1 = _5.1 >> _1.2.0;
_1.2 = (_5.0, _5.1);
_1.0 = [2146636259_i32,(-224977104_i32),(-1835631339_i32),(-1382837672_i32),607199680_i32,(-863861060_i32)];
_9 = [2649567728_u32,1292840396_u32,730004173_u32];
_6 = _8 as u64;
_13 = 1794203483_i32 as isize;
_1.2 = (_5.0, _5.1);
_8 = (-51751225224245853581138323993700909485_i128) as f64;
_12.fld0.1 = _6 as f32;
_1.2.1 = -_5.1;
_5.0 = 8581_u16 as isize;
_12.fld7 = _8 + _8;
_14.1 = core::ptr::addr_of_mut!((*_2));
RET = 6044_u16;
Goto(bb3)
}
bb3 = {
_12.fld7 = _8 * _8;
_12.fld5 = 0_usize;
_11 = 12476_i16;
_12.fld3 = _6 & _6;
_1.0 = [1080414312_i32,64986917_i32,1247548577_i32,(-882947086_i32),(-51328501_i32),(-800388976_i32)];
_1.0 = [1757373228_i32,(-2001478201_i32),(-1673448612_i32),70742045_i32,(-1392983483_i32),(-1659724510_i32)];
_14.2 = (_1.2.0, _5.1);
_12.fld6 = [306353863281629430564950332755709137798_u128,123399490729509296138845141653611947358_u128,146321455160887345678127448089456508570_u128,174424659206055523426558826477469456363_u128,90991621209026080223024822860233690710_u128,121776810393692173258135546061952884678_u128];
_15 = !2163099213985104004009448639184920085_u128;
_1.0 = [(-1808618292_i32),(-1932486967_i32),(-2013486441_i32),(-1744981649_i32),(-660950506_i32),1356889875_i32];
_17.fld0 = !true;
_8 = -_12.fld7;
_1.2.0 = _14.2.0 ^ _5.0;
_5 = (_1.2.0, _1.2.1);
_12.fld1 = (_3,);
match _11 {
12476 => bb5,
_ => bb4
}
}
bb4 = {
_1.2 = _5;
Goto(bb2)
}
bb5 = {
_14.2.0 = _1.2.0 + _1.2.0;
_10 = [_6,_6];
_10 = [_12.fld3,_6];
_19.fld0 = _10;
_18.1 = _4;
_12.fld1 = (_3,);
_1.2.1 = _12.fld3 as i8;
_14 = _1;
_5 = (_14.2.0, _14.2.1);
RET = !48451_u16;
_12.fld7 = (-1746107719_i32) as f64;
_19 = Adt62 { fld0: _10 };
_12.fld1 = (_3,);
_1 = _14;
_12.fld3 = 3549925112484588889_i64 as u64;
_17.fld0 = true;
_12.fld1.0 = _3;
match _11 {
12476 => bb6,
_ => bb2
}
}
bb6 = {
_12.fld7 = _8;
_14.2.0 = _1.2.0;
_1 = _14;
_15 = 172196551479347327663873162550347100523_u128 + 97220919464235909809487395626196745923_u128;
_20.fld1 = [_15,_15,_15,_15,_15];
_19.fld0 = [_12.fld3,_12.fld3];
_2 = core::ptr::addr_of_mut!((*_2));
_6 = _14.2.1 as u64;
_9 = [2160867546_u32,3274071188_u32,959899744_u32];
_10 = _19.fld0;
_2 = core::ptr::addr_of_mut!(_18.0);
_20.fld4.fld0 = [_12.fld1.0,_3,_3,_12.fld1.0,_12.fld1.0,_3];
_20.fld3 = _14.2.1 | _1.2.1;
_2 = core::ptr::addr_of_mut!(_12.fld4);
_1.2 = (_5.0, _5.1);
_12.fld1.0 = _3;
_4 = (-256260158097125066_i64) as f32;
_12.fld6 = [_15,_15,_15,_15,_15,_15];
_14 = _1;
_5 = (_1.2.0, _1.2.1);
Goto(bb7)
}
bb7 = {
_15 = 238447931465543617982800835602776898292_u128;
_5.1 = _1.2.1;
_20.fld4.fld1.1 = _12.fld7 as f32;
_5.0 = _8 as isize;
_17.fld1 = 26164_u16 as i8;
_5 = (_1.2.0, _20.fld3);
_6 = _12.fld3 + _12.fld3;
_3 = _12.fld1.0;
_14 = _1;
_12.fld0.1 = _4;
_5.1 = _20.fld3 >> _1.2.0;
match _11 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
12476 => bb16,
_ => bb15
}
}
bb8 = {
_12.fld7 = _8;
_14.2.0 = _1.2.0;
_1 = _14;
_15 = 172196551479347327663873162550347100523_u128 + 97220919464235909809487395626196745923_u128;
_20.fld1 = [_15,_15,_15,_15,_15];
_19.fld0 = [_12.fld3,_12.fld3];
_2 = core::ptr::addr_of_mut!((*_2));
_6 = _14.2.1 as u64;
_9 = [2160867546_u32,3274071188_u32,959899744_u32];
_10 = _19.fld0;
_2 = core::ptr::addr_of_mut!(_18.0);
_20.fld4.fld0 = [_12.fld1.0,_3,_3,_12.fld1.0,_12.fld1.0,_3];
_20.fld3 = _14.2.1 | _1.2.1;
_2 = core::ptr::addr_of_mut!(_12.fld4);
_1.2 = (_5.0, _5.1);
_12.fld1.0 = _3;
_4 = (-256260158097125066_i64) as f32;
_12.fld6 = [_15,_15,_15,_15,_15,_15];
_14 = _1;
_5 = (_1.2.0, _1.2.1);
Goto(bb7)
}
bb9 = {
_14.2.0 = _1.2.0 + _1.2.0;
_10 = [_6,_6];
_10 = [_12.fld3,_6];
_19.fld0 = _10;
_18.1 = _4;
_12.fld1 = (_3,);
_1.2.1 = _12.fld3 as i8;
_14 = _1;
_5 = (_14.2.0, _14.2.1);
RET = !48451_u16;
_12.fld7 = (-1746107719_i32) as f64;
_19 = Adt62 { fld0: _10 };
_12.fld1 = (_3,);
_1 = _14;
_12.fld3 = 3549925112484588889_i64 as u64;
_17.fld0 = true;
_12.fld1.0 = _3;
match _11 {
12476 => bb6,
_ => bb2
}
}
bb10 = {
_1.2 = _5;
Goto(bb2)
}
bb11 = {
_12.fld7 = _8 * _8;
_12.fld5 = 0_usize;
_11 = 12476_i16;
_12.fld3 = _6 & _6;
_1.0 = [1080414312_i32,64986917_i32,1247548577_i32,(-882947086_i32),(-51328501_i32),(-800388976_i32)];
_1.0 = [1757373228_i32,(-2001478201_i32),(-1673448612_i32),70742045_i32,(-1392983483_i32),(-1659724510_i32)];
_14.2 = (_1.2.0, _5.1);
_12.fld6 = [306353863281629430564950332755709137798_u128,123399490729509296138845141653611947358_u128,146321455160887345678127448089456508570_u128,174424659206055523426558826477469456363_u128,90991621209026080223024822860233690710_u128,121776810393692173258135546061952884678_u128];
_15 = !2163099213985104004009448639184920085_u128;
_1.0 = [(-1808618292_i32),(-1932486967_i32),(-2013486441_i32),(-1744981649_i32),(-660950506_i32),1356889875_i32];
_17.fld0 = !true;
_8 = -_12.fld7;
_1.2.0 = _14.2.0 ^ _5.0;
_5 = (_1.2.0, _1.2.1);
_12.fld1 = (_3,);
match _11 {
12476 => bb5,
_ => bb4
}
}
bb12 = {
_6 = !16689379381843132039_u64;
_5 = (_1.2.0, _1.2.1);
_10 = [_6,_6];
_11 = (-6013_i16) ^ 9478_i16;
_3 = '\u{819b7}';
_1.0 = [2100401361_i32,(-926219457_i32),1046824962_i32,573861998_i32,(-334523388_i32),1422921052_i32];
_1.2.1 = _5.1 >> _1.2.0;
_1.2 = (_5.0, _5.1);
_1.0 = [2146636259_i32,(-224977104_i32),(-1835631339_i32),(-1382837672_i32),607199680_i32,(-863861060_i32)];
_9 = [2649567728_u32,1292840396_u32,730004173_u32];
_6 = _8 as u64;
_13 = 1794203483_i32 as isize;
_1.2 = (_5.0, _5.1);
_8 = (-51751225224245853581138323993700909485_i128) as f64;
_12.fld0.1 = _6 as f32;
_1.2.1 = -_5.1;
_5.0 = 8581_u16 as isize;
_12.fld7 = _8 + _8;
_14.1 = core::ptr::addr_of_mut!((*_2));
RET = 6044_u16;
Goto(bb3)
}
bb13 = {
_1.2 = _5;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_20.fld3 = _3 as i8;
_19 = Adt62 { fld0: _10 };
_1 = _14;
_12.fld7 = -_8;
_14.2.0 = 100_u8 as isize;
_19.fld0 = [_6,_6];
_24 = core::ptr::addr_of_mut!(_22);
(*_24) = !(-4852054249724187914_i64);
_14 = _1;
_1.2.0 = _5.0;
_17.fld1 = _12.fld5 as i8;
(*_24) = 236_u8 as i64;
_20.fld4.fld1.1 = -_18.1;
_19.fld0 = [_12.fld3,_6];
_20.fld3 = _14.2.1;
_20.fld1 = [_15,_15,_15,_15,_15];
_20.fld0 = core::ptr::addr_of!(_23);
_20.fld4.fld1.1 = _18.1 * _12.fld0.1;
_20.fld1 = [_15,_15,_15,_15,_15];
_1 = _14;
RET = !34106_u16;
_20.fld4.fld1.1 = _4;
Goto(bb17)
}
bb17 = {
Call(_27 = dump_var(19_usize, 11_usize, Move(_11), 5_usize, Move(_5), 6_usize, Move(_6), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(107_u8), std::hint::black_box(23683877010874727420136064888262737424_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: *const [bool; 8],
fld1: (u16, ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)), [u64; 1]),
fld2: ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)),
}
#[derive(Debug)]
pub struct Adt51 {
fld0: (*mut u32, f32),
fld1: (char,),
fld2: *mut i32,
fld3: u64,
fld4: *mut u32,
fld5: usize,
fld6: [u128; 6],
fld7: f64,
}
#[derive(Debug)]
pub struct Adt52 {
fld0: *mut *mut i64,
fld1: [u64; 1],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)),
fld1: *mut i64,
fld2: [u32; 1],
fld3: (i128, u8, [u32; 1], f64, f32),
fld4: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]),
fld5: (isize, i8),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: [bool; 2],
fld1: *mut i64,
fld2: ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)),
fld3: u8,
}
#[derive(Debug)]
pub struct Adt55 {
fld0: u32,
fld1: [u128; 5],
fld2: (*mut i32, *mut i64),
fld3: u16,
fld4: (i128,),
fld5: ([u64; 1], u128, i64),
fld6: *mut u32,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: bool,
fld1: i8,
}
#[derive(Debug)]
pub struct Adt57 {
fld0: Adt50,
fld1: [u128; 6],
fld2: ([i32; 6], *mut *mut u32, (isize, i8)),
fld3: i64,
fld4: Adt55,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: (char,),
fld1: f64,
fld2: Adt52,
fld3: [char; 6],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: bool,
fld1: *const i128,
fld2: isize,
fld3: [u16; 4],
fld4: i16,
fld5: [u32; 1],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt60 {
fld0: [char; 6],
fld1: (*mut u32, f32),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: [bool; 8],
fld1: Adt54,
fld2: *mut u32,
fld3: [u16; 1],
fld4: ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)),
fld5: [i8; 7],
fld6: i64,
fld7: ([i32; 6], ([u64; 1], u128, i64), (i128, u8, [u32; 1], f64, f32), [char; 6]),
}
#[derive(Debug)]
pub struct Adt62 {
fld0: [u64; 2],
}
#[derive(Debug)]
pub struct Adt63 {
fld0: *mut i64,
fld1: u8,
fld2: *const [bool; 8],
fld3: [bool; 2],
fld4: i16,
}
#[derive(Debug)]
pub struct Adt64 {
fld0: *const [bool; 8],
fld1: [u128; 5],
fld2: [u128; 6],
fld3: i8,
fld4: Adt60,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: bool,
fld1: ([u64; 1], u128, i64),
fld2: [u128; 5],
fld3: Adt51,
fld4: *mut f64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt66 {
fld0: ([i8; 7], f64, ([u64; 1], u128, i64), [i128; 1], *mut *mut i64, *mut i32, (isize, i8)),
fld1: Adt60,
fld2: *mut u32,
fld3: Adt53,
fld4: (*mut u32, f32),
fld5: i32,
fld6: (isize, i8),
}

