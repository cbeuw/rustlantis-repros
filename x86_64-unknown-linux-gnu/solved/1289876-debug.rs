#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u32,mut _3: u64,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u128,mut _11: u16) -> (i128, isize, i64) {
mir! {
type RET = (i128, isize, i64);
let _12: u16;
let _13: f64;
let _14: f32;
let _15: Adt42;
let _16: u64;
let _17: [i8; 2];
let _18: Adt51;
let _19: &'static f64;
let _20: *const *mut u64;
let _21: ();
let _22: ();
{
_8 = (-48179015967707602470802557197427700419_i128) | (-38659627054262980304092284981806673730_i128);
_5 = 1336_i16;
_6 = 5_usize as i32;
_6 = '\u{ea54e}' as i32;
RET = (_8, (-106_isize), 4009481603617062216_i64);
_7 = RET.2;
_4 = !(-26_i8);
_3 = 6723888738692853516_u64 << RET.2;
_3 = 15946843306955206563_u64;
_2 = 1037199160_u32 << RET.2;
RET.0 = !_8;
_11 = 27153_u16;
RET = (_8, 2_isize, _7);
RET.1 = !17_isize;
_2 = 250531614_u32;
_12 = 67227480932575879783005683452696835459_u128 as u16;
_9 = 489054493597002200_usize;
RET.0 = -_8;
_6 = (-1594817444_i32);
_12 = _9 as u16;
_10 = 293273002235404815300699326455395485872_u128;
_14 = _2 as f32;
RET.2 = -_7;
_8 = RET.0 >> _7;
_1 = !false;
Call(RET.1 = core::intrinsics::transmute(_7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = 9121300246080394132_u64;
_1 = !false;
RET.0 = -_8;
RET.1 = _4 as isize;
_3 = 12724331952923291850_u64 & 9771088307057154558_u64;
RET = (_8, (-9223372036854775808_isize), _7);
_11 = !_12;
_15.fld1 = (_4,);
RET.1 = 9223372036854775807_isize & 9223372036854775807_isize;
Call(_15 = fn1(_8, _8, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Goto(bb3)
}
bb3 = {
_5 = 527_i16 & 12924_i16;
RET.1 = (-9223372036854775808_isize) << _12;
RET = (_8, 9223372036854775807_isize, _7);
RET = (_8, 9223372036854775807_isize, _7);
_13 = _8 as f64;
_13 = _2 as f64;
_17 = [_15.fld1.0,_15.fld1.0];
_19 = &_13;
_2 = !_15.fld0;
RET = (_8, (-9223372036854775808_isize), _7);
Goto(bb4)
}
bb4 = {
Call(_21 = dump_var(0_usize, 5_usize, Move(_5), 2_usize, Move(_2), 3_usize, Move(_3), 10_usize, Move(_10)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_21 = dump_var(0_usize, 7_usize, Move(_7), 1_usize, Move(_1), 22_usize, _22, 22_usize, _22), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i128,mut _2: i128,mut _3: i8) -> Adt42 {
mir! {
type RET = Adt42;
let _4: isize;
let _5: [bool; 3];
let _6: ();
let _7: ();
{
RET.fld1.0 = !_3;
RET.fld1.0 = _3 | _3;
RET.fld1.0 = -_3;
RET.fld0 = 18154_i16 as u32;
RET.fld1.0 = _3;
RET.fld1.0 = !_3;
_3 = -RET.fld1.0;
_3 = RET.fld0 as i8;
RET.fld0 = !3023029466_u32;
RET.fld0 = 4058336610_u32;
RET.fld1 = (_3,);
RET.fld1 = (_3,);
RET.fld1 = (_3,);
RET.fld1 = (_3,);
RET.fld1.0 = _3;
_2 = _1;
Call(RET.fld0 = fn2(_1, _1, RET.fld1, _2, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.fld1.0 = _3 & _3;
RET.fld1 = (_3,);
_1 = _2 - _2;
_5 = [false,false,false];
RET.fld0 = 2346831527_u32 + 3352073472_u32;
_5 = [true,false,false];
RET.fld1 = (_3,);
_1 = _2 << _2;
RET.fld1.0 = _3;
RET.fld1.0 = _3 & _3;
RET.fld1.0 = _1 as i8;
Goto(bb2)
}
bb2 = {
Call(_6 = dump_var(1_usize, 2_usize, Move(_2), 5_usize, Move(_5), 7_usize, _7, 7_usize, _7), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: i128,mut _2: i128,mut _3: (i8,),mut _4: i128,mut _5: i128,mut _6: i128) -> u32 {
mir! {
type RET = u32;
let _7: (u16, [bool; 8]);
let _8: bool;
let _9: *mut u64;
let _10: f64;
let _11: [i8; 2];
let _12: (i16, (i128, isize, i64));
let _13: f64;
let _14: [u8; 6];
let _15: Adt51;
let _16: Adt52;
let _17: [isize; 6];
let _18: Adt49;
let _19: f64;
let _20: Adt53;
let _21: (i128, isize, i64);
let _22: ([i8; 2], f64);
let _23: [isize; 6];
let _24: u16;
let _25: [bool; 3];
let _26: Adt55;
let _27: [i64; 4];
let _28: [u32; 8];
let _29: ([u32; 8],);
let _30: Adt42;
let _31: (i16, (i128, isize, i64));
let _32: f64;
let _33: [isize; 6];
let _34: [bool; 3];
let _35: i16;
let _36: (i8,);
let _37: u8;
let _38: ();
let _39: ();
{
RET = 30435_i16 as u32;
_3 = ((-119_i8),);
RET = 1956462857_u32 - 3353027468_u32;
_3.0 = 80_i8;
RET = 4118268947_u32;
RET = 32593_u16 as u32;
_4 = (-431519046_i32) as i128;
_1 = !_4;
_5 = (-121_isize) as i128;
_3 = ((-31_i8),);
_6 = !_2;
_7.1 = [true,false,true,false,false,false,true,true];
_3.0 = '\u{55686}' as i8;
_7.0 = !37219_u16;
_8 = _3.0 < _3.0;
_8 = _7.0 != _7.0;
Call(_4 = fn3(_7.0, RET, _7.1, _7.1, _2, _6, _7, _2, _6, _8, _7.1, _2, _7, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _5;
RET = !874122367_u32;
_10 = _7.0 as f64;
_10 = 9223372036854775807_isize as f64;
_10 = 16582_i16 as f64;
_6 = _2;
_10 = (-8383787253712143317_i64) as f64;
_3 = ((-99_i8),);
_8 = !false;
_3 = ((-112_i8),);
RET = 9223372036854775807_isize as u32;
_7.0 = 31771_u16 + 64421_u16;
_3 = ((-110_i8),);
RET = 1639701257_u32;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_1 = _10 as i128;
Call(_11 = fn6(_6, _7.1, _2, _6, _2, _7.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12.1.2 = 49_u8 as i64;
_6 = _2;
_12.1.0 = 217754047595129171158825520523711190791_u128 as i128;
_14 = [250_u8,69_u8,191_u8,165_u8,249_u8,203_u8];
_8 = !true;
_12.1 = (_6, 9223372036854775807_isize, (-791765776042896339_i64));
_2 = (-404775804_i32) as i128;
_12.1.0 = _4;
_5 = _1;
_13 = _10 - _10;
_6 = _1;
_12.1.1 = 138_u8 as isize;
_10 = _13 * _13;
_14 = [90_u8,32_u8,230_u8,149_u8,193_u8,220_u8];
_7.0 = 24551_u16;
_4 = _6 ^ _5;
_12.1 = (_5, (-9223372036854775808_isize), (-6743864860015862297_i64));
_3 = (125_i8,);
Goto(bb3)
}
bb3 = {
_12.1.2 = 7283199420363117383_i64;
_3 = ((-56_i8),);
_12.1.2 = 3010906208046706076_i64;
_17 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_18.fld0.0 = _3.0 + _3.0;
_14 = [203_u8,143_u8,91_u8,213_u8,62_u8,219_u8];
Call(_18.fld1 = fn7(_5, _12.1.1, _1, _12.1.0, _10, _12.1, _7.1, _6, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18.fld0.0 = _3.0 << _2;
_5 = _1 + _4;
_13 = -_10;
_18.fld0.0 = _3.0 ^ _3.0;
_16.fld6 = core::ptr::addr_of!(_9);
_12.1.1 = (-9223372036854775808_isize);
_18.fld2 = _7.0 * _7.0;
_17 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_4 = RET as i128;
_3 = _18.fld0;
_10 = _13;
RET = _18.fld2 as u32;
_12.1.1 = (-9223372036854775808_isize);
_8 = !true;
_3 = _18.fld0;
RET = !3562848954_u32;
_21.2 = -_12.1.2;
_1 = !_4;
_21 = (_1, _12.1.1, _12.1.2);
Call(_18 = fn8(_4, _13, _21.1, _12.1.1, _14, _4, _6, _7.1, _21.1, _12.1, _21.1, _7, _12.1.2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_12 = (23704_i16, _21);
_16.fld2 = !16564589392212371945_u64;
_7.0 = _18.fld2;
Goto(bb6)
}
bb6 = {
_18.fld0.0 = !_3.0;
_11 = [_3.0,_3.0];
_22 = (_11, _13);
RET = !1075459070_u32;
_19 = -_22.1;
_9 = core::ptr::addr_of_mut!(_16.fld2);
_23 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_22.1 = -_10;
_24 = _18.fld2;
_21 = (_5, _12.1.1, _12.1.2);
_18.fld0 = (_3.0,);
_6 = _2;
_22.1 = _13 * _19;
_27 = [_21.2,_21.2,_12.1.2,_12.1.2];
_12.0 = _1 as i16;
match _21.1 {
0 => bb4,
1 => bb7,
2 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb7 = {
_12 = (23704_i16, _21);
_16.fld2 = !16564589392212371945_u64;
_7.0 = _18.fld2;
Goto(bb6)
}
bb8 = {
_18.fld0.0 = _3.0 << _2;
_5 = _1 + _4;
_13 = -_10;
_18.fld0.0 = _3.0 ^ _3.0;
_16.fld6 = core::ptr::addr_of!(_9);
_12.1.1 = (-9223372036854775808_isize);
_18.fld2 = _7.0 * _7.0;
_17 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_4 = RET as i128;
_3 = _18.fld0;
_10 = _13;
RET = _18.fld2 as u32;
_12.1.1 = (-9223372036854775808_isize);
_8 = !true;
_3 = _18.fld0;
RET = !3562848954_u32;
_21.2 = -_12.1.2;
_1 = !_4;
_21 = (_1, _12.1.1, _12.1.2);
Call(_18 = fn8(_4, _13, _21.1, _12.1.1, _14, _4, _6, _7.1, _21.1, _12.1, _21.1, _7, _12.1.2), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_4 = _5;
RET = !874122367_u32;
_10 = _7.0 as f64;
_10 = 9223372036854775807_isize as f64;
_10 = 16582_i16 as f64;
_6 = _2;
_10 = (-8383787253712143317_i64) as f64;
_3 = ((-99_i8),);
_8 = !false;
_3 = ((-112_i8),);
RET = 9223372036854775807_isize as u32;
_7.0 = 31771_u16 + 64421_u16;
_3 = ((-110_i8),);
RET = 1639701257_u32;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_1 = _10 as i128;
Call(_11 = fn6(_6, _7.1, _2, _6, _2, _7.0), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_21.0 = !_5;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_1 = _5 | _21.0;
_1 = _5;
_27 = [_21.2,_12.1.2,_21.2,_12.1.2];
_22.0 = [_18.fld0.0,_18.fld0.0];
_19 = 6_usize as f64;
_12.1 = _21;
_26 = Adt55::Variant1 { fld0: 13602104249268843469_usize };
_25 = [_8,_8,_8];
_18.fld0 = _3;
_29 = _18.fld1;
_22 = (_11, _13);
_16.fld5 = [_8,_8,_8];
_16.fld5 = [_8,_8,_8];
_30.fld1 = _18.fld0;
Goto(bb11)
}
bb11 = {
_16.fld2 = 4172118089275207386_u64 + 4047673620433231370_u64;
_8 = false;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_17 = [_21.1,_21.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_20 = Adt53::Variant1 { fld0: _27,fld1: _22,fld2: _12 };
place!(Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2)).0 = _12.0 | _12.0;
_30 = Adt42 { fld0: RET,fld1: _18.fld0 };
_27 = Field::<[i64; 4]>(Variant(_20, 1), 0);
_12.1.2 = Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.2;
_26 = Adt55::Variant1 { fld0: 3688918255898055496_usize };
place!(Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2)) = (_12.0, _12.1);
_6 = _8 as i128;
_16.fld5 = [_8,_8,_8];
_22 = (_11, _13);
match _12.1.1 {
0 => bb6,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
340282366920938463454151235394913435648 => bb19,
_ => bb18
}
}
bb12 = {
_21.0 = !_5;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_1 = _5 | _21.0;
_1 = _5;
_27 = [_21.2,_12.1.2,_21.2,_12.1.2];
_22.0 = [_18.fld0.0,_18.fld0.0];
_19 = 6_usize as f64;
_12.1 = _21;
_26 = Adt55::Variant1 { fld0: 13602104249268843469_usize };
_25 = [_8,_8,_8];
_18.fld0 = _3;
_29 = _18.fld1;
_22 = (_11, _13);
_16.fld5 = [_8,_8,_8];
_16.fld5 = [_8,_8,_8];
_30.fld1 = _18.fld0;
Goto(bb11)
}
bb13 = {
_4 = _5;
RET = !874122367_u32;
_10 = _7.0 as f64;
_10 = 9223372036854775807_isize as f64;
_10 = 16582_i16 as f64;
_6 = _2;
_10 = (-8383787253712143317_i64) as f64;
_3 = ((-99_i8),);
_8 = !false;
_3 = ((-112_i8),);
RET = 9223372036854775807_isize as u32;
_7.0 = 31771_u16 + 64421_u16;
_3 = ((-110_i8),);
RET = 1639701257_u32;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_1 = _10 as i128;
Call(_11 = fn6(_6, _7.1, _2, _6, _2, _7.0), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_12.1.2 = 49_u8 as i64;
_6 = _2;
_12.1.0 = 217754047595129171158825520523711190791_u128 as i128;
_14 = [250_u8,69_u8,191_u8,165_u8,249_u8,203_u8];
_8 = !true;
_12.1 = (_6, 9223372036854775807_isize, (-791765776042896339_i64));
_2 = (-404775804_i32) as i128;
_12.1.0 = _4;
_5 = _1;
_13 = _10 - _10;
_6 = _1;
_12.1.1 = 138_u8 as isize;
_10 = _13 * _13;
_14 = [90_u8,32_u8,230_u8,149_u8,193_u8,220_u8];
_7.0 = 24551_u16;
_4 = _6 ^ _5;
_12.1 = (_5, (-9223372036854775808_isize), (-6743864860015862297_i64));
_3 = (125_i8,);
Goto(bb3)
}
bb15 = {
_12 = (23704_i16, _21);
_16.fld2 = !16564589392212371945_u64;
_7.0 = _18.fld2;
Goto(bb6)
}
bb16 = {
_18.fld0.0 = !_3.0;
_11 = [_3.0,_3.0];
_22 = (_11, _13);
RET = !1075459070_u32;
_19 = -_22.1;
_9 = core::ptr::addr_of_mut!(_16.fld2);
_23 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_22.1 = -_10;
_24 = _18.fld2;
_21 = (_5, _12.1.1, _12.1.2);
_18.fld0 = (_3.0,);
_6 = _2;
_22.1 = _13 * _19;
_27 = [_21.2,_21.2,_12.1.2,_12.1.2];
_12.0 = _1 as i16;
match _21.1 {
0 => bb4,
1 => bb7,
2 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb17 = {
_4 = _5;
RET = !874122367_u32;
_10 = _7.0 as f64;
_10 = 9223372036854775807_isize as f64;
_10 = 16582_i16 as f64;
_6 = _2;
_10 = (-8383787253712143317_i64) as f64;
_3 = ((-99_i8),);
_8 = !false;
_3 = ((-112_i8),);
RET = 9223372036854775807_isize as u32;
_7.0 = 31771_u16 + 64421_u16;
_3 = ((-110_i8),);
RET = 1639701257_u32;
_7.1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_1 = _10 as i128;
Call(_11 = fn6(_6, _7.1, _2, _6, _2, _7.0), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_18.fld0.0 = _3.0 << _2;
_5 = _1 + _4;
_13 = -_10;
_18.fld0.0 = _3.0 ^ _3.0;
_16.fld6 = core::ptr::addr_of!(_9);
_12.1.1 = (-9223372036854775808_isize);
_18.fld2 = _7.0 * _7.0;
_17 = [_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1,_12.1.1];
_4 = RET as i128;
_3 = _18.fld0;
_10 = _13;
RET = _18.fld2 as u32;
_12.1.1 = (-9223372036854775808_isize);
_8 = !true;
_3 = _18.fld0;
RET = !3562848954_u32;
_21.2 = -_12.1.2;
_1 = !_4;
_21 = (_1, _12.1.1, _12.1.2);
Call(_18 = fn8(_4, _13, _21.1, _12.1.1, _14, _4, _6, _7.1, _21.1, _12.1, _21.1, _7, _12.1.2), ReturnTo(bb5), UnwindUnreachable())
}
bb19 = {
_16.fld4 = 98_u8;
_8 = _22.1 == _10;
_16.fld3 = !_18.fld0.0;
_23 = [Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1,Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1,_12.1.1,_12.1.1,Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1,_12.1.1];
_30.fld0 = RET << _30.fld1.0;
_25 = [_8,_8,_8];
_17 = [Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1,_21.1,Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1,Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1,_21.1,Field::<(i16, (i128, isize, i64))>(Variant(_20, 1), 2).1.1];
_30 = Adt42 { fld0: RET,fld1: _3 };
_24 = Field::<([i8; 2], f64)>(Variant(_20, 1), 1).1 as u16;
_28 = _18.fld1.0;
_21.0 = -_5;
SetDiscriminant(_20, 1);
_11 = _22.0;
_36.0 = _16.fld3;
_31.0 = _8 as i16;
_22.1 = _13 + _10;
_19 = 496045371_i32 as f64;
_18.fld2 = _24;
_12.1 = _21;
_22.1 = _21.2 as f64;
_18 = Adt49 { fld0: _3,fld1: _29,fld2: _24 };
_37 = !_16.fld4;
_37 = !_16.fld4;
_12.1.0 = _21.0 & _1;
place!(Field::<usize>(Variant(_26, 1), 0)) = 83861419208183216142895002890572397869_u128 as usize;
Goto(bb20)
}
bb20 = {
Call(_38 = dump_var(2_usize, 17_usize, Move(_17), 12_usize, Move(_12), 7_usize, Move(_7), 25_usize, Move(_25)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_38 = dump_var(2_usize, 5_usize, Move(_5), 14_usize, Move(_14), 23_usize, Move(_23), 21_usize, Move(_21)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_38 = dump_var(2_usize, 6_usize, Move(_6), 1_usize, Move(_1), 39_usize, _39, 39_usize, _39), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u16,mut _2: u32,mut _3: [bool; 8],mut _4: [bool; 8],mut _5: i128,mut _6: i128,mut _7: (u16, [bool; 8]),mut _8: i128,mut _9: i128,mut _10: bool,mut _11: [bool; 8],mut _12: i128,mut _13: (u16, [bool; 8]),mut _14: (u16, [bool; 8])) -> i128 {
mir! {
type RET = i128;
let _15: f32;
let _16: ([i8; 2], f64);
let _17: char;
let _18: usize;
let _19: *mut [bool; 8];
let _20: [bool; 8];
let _21: (i8,);
let _22: i64;
let _23: i32;
let _24: usize;
let _25: u16;
let _26: f32;
let _27: Adt53;
let _28: u32;
let _29: (i16, (i128, isize, i64));
let _30: bool;
let _31: bool;
let _32: (i128, isize, i64);
let _33: i128;
let _34: (usize, u32);
let _35: isize;
let _36: f64;
let _37: ();
let _38: ();
{
_4 = _3;
RET = _8 << _5;
_12 = _9;
_6 = -_8;
_8 = -_5;
_7.0 = (-15695_i16) as u16;
_12 = 246_u8 as i128;
RET = (-9223372036854775808_isize) as i128;
_14.0 = !_7.0;
_13 = (_7.0, _3);
_11 = [_10,_10,_10,_10,_10,_10,_10,_10];
_15 = 970563784_i32 as f32;
_5 = '\u{fd1b2}' as i128;
_14 = (_1, _11);
_15 = _2 as f32;
_13.0 = _14.0;
_3 = _4;
_16.1 = 29_isize as f64;
_16.0 = [73_i8,78_i8];
_1 = _14.0 >> _9;
_6 = _5 ^ _9;
_11 = _4;
_6 = !_8;
_13.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
Goto(bb1)
}
bb1 = {
_13.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_2 = 542530041_u32 - 39455049_u32;
RET = _8;
_13.0 = _1;
_6 = _10 as i128;
_11 = [_10,_10,_10,_10,_10,_10,_10,_10];
_14.0 = _13.0;
_4 = _7.1;
_14.0 = _13.0 * _1;
_18 = _15 as usize;
_14.0 = _1 - _1;
_9 = -_8;
_14.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_14.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_17 = '\u{9f470}';
_14 = _13;
Call(_14.1 = fn4(RET, _14.0, _14.0, _1, RET, _11, _1, _13.0, _10, _7.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_20 = [_10,_10,_10,_10,_10,_10,_10,_10];
_7.0 = _14.0;
_18 = !4749410792966871422_usize;
_21 = ((-34_i8),);
_21 = ((-107_i8),);
_21.0 = 94_i8 + (-75_i8);
_3 = [_10,_10,_10,_10,_10,_10,_10,_10];
_13.0 = !_7.0;
_25 = !_14.0;
_22 = -5262747595552281604_i64;
_2 = !1316919580_u32;
_19 = core::ptr::addr_of_mut!(_13.1);
_1 = _15 as u16;
_15 = 127436033047981521875755342995012621683_u128 as f32;
_14.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_6 = RET;
_12 = RET;
_31 = _12 >= _12;
Goto(bb3)
}
bb3 = {
_29.0 = 24268_i16;
_13.0 = 62_u8 as u16;
_23 = (-1205576623_i32) | 1809326352_i32;
_22 = (-5905799934703360591_i64);
_7.0 = _25;
_29.1.1 = _10 as isize;
_16.0 = [_21.0,_21.0];
_6 = -_9;
_10 = !_31;
_19 = core::ptr::addr_of_mut!(_13.1);
_13.1 = [_31,_31,_10,_31,_31,_31,_31,_31];
_20 = [_31,_10,_31,_10,_10,_31,_31,_10];
match _29.0 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
24268 => bb10,
_ => bb9
}
}
bb4 = {
_20 = [_10,_10,_10,_10,_10,_10,_10,_10];
_7.0 = _14.0;
_18 = !4749410792966871422_usize;
_21 = ((-34_i8),);
_21 = ((-107_i8),);
_21.0 = 94_i8 + (-75_i8);
_3 = [_10,_10,_10,_10,_10,_10,_10,_10];
_13.0 = !_7.0;
_25 = !_14.0;
_22 = -5262747595552281604_i64;
_2 = !1316919580_u32;
_19 = core::ptr::addr_of_mut!(_13.1);
_1 = _15 as u16;
_15 = 127436033047981521875755342995012621683_u128 as f32;
_14.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_6 = RET;
_12 = RET;
_31 = _12 >= _12;
Goto(bb3)
}
bb5 = {
_13.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_2 = 542530041_u32 - 39455049_u32;
RET = _8;
_13.0 = _1;
_6 = _10 as i128;
_11 = [_10,_10,_10,_10,_10,_10,_10,_10];
_14.0 = _13.0;
_4 = _7.1;
_14.0 = _13.0 * _1;
_18 = _15 as usize;
_14.0 = _1 - _1;
_9 = -_8;
_14.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_14.1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_17 = '\u{9f470}';
_14 = _13;
Call(_14.1 = fn4(RET, _14.0, _14.0, _1, RET, _11, _1, _13.0, _10, _7.1), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14.0 = _7.0 ^ _25;
_13.0 = _25;
_29.1.2 = -_22;
_24 = !_18;
_22 = -_29.1.2;
_12 = _6;
_18 = _24 >> _7.0;
_11 = [_31,_10,_31,_31,_10,_31,_10,_10];
_32.2 = -_29.1.2;
_29.1.0 = RET | _8;
_30 = _10;
_1 = _14.0 ^ _14.0;
_29.1.2 = _32.2 >> _25;
_32 = (_12, _29.1.1, _29.1.2);
_34.1 = !_2;
_1 = _13.0 | _14.0;
_3 = [_31,_30,_10,_30,_10,_31,_10,_10];
_7.0 = !_1;
_19 = core::ptr::addr_of_mut!((*_19));
_32.2 = -_29.1.2;
_13 = _14;
_28 = _2 & _34.1;
_17 = '\u{b2cfd}';
_33 = _12;
match _29.0 {
0 => bb8,
1 => bb2,
2 => bb5,
3 => bb11,
24268 => bb13,
_ => bb12
}
}
bb11 = {
_29.0 = 24268_i16;
_13.0 = 62_u8 as u16;
_23 = (-1205576623_i32) | 1809326352_i32;
_22 = (-5905799934703360591_i64);
_7.0 = _25;
_29.1.1 = _10 as isize;
_16.0 = [_21.0,_21.0];
_6 = -_9;
_10 = !_31;
_19 = core::ptr::addr_of_mut!(_13.1);
_13.1 = [_31,_31,_10,_31,_31,_31,_31,_31];
_20 = [_31,_10,_31,_10,_10,_31,_31,_10];
match _29.0 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
24268 => bb10,
_ => bb9
}
}
bb12 = {
Return()
}
bb13 = {
_32.0 = !_12;
Goto(bb14)
}
bb14 = {
_29.1.2 = _32.2 * _22;
_22 = _32.2;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(3_usize, 23_usize, Move(_23), 9_usize, Move(_9), 22_usize, Move(_22), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(3_usize, 31_usize, Move(_31), 21_usize, Move(_21), 7_usize, Move(_7), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(3_usize, 18_usize, Move(_18), 24_usize, Move(_24), 29_usize, Move(_29), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(3_usize, 4_usize, Move(_4), 8_usize, Move(_8), 38_usize, _38, 38_usize, _38), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i128,mut _2: u16,mut _3: u16,mut _4: u16,mut _5: i128,mut _6: [bool; 8],mut _7: u16,mut _8: u16,mut _9: bool,mut _10: [bool; 8]) -> [bool; 8] {
mir! {
type RET = [bool; 8];
let _11: [u16; 4];
let _12: char;
let _13: isize;
let _14: (i128, isize, i64);
let _15: [i8; 2];
let _16: (usize, u32);
let _17: Adt43;
let _18: i64;
let _19: [u8; 6];
let _20: Adt58;
let _21: isize;
let _22: (i8,);
let _23: *const i128;
let _24: [bool; 3];
let _25: u64;
let _26: u16;
let _27: [i8; 2];
let _28: (usize, u32);
let _29: ();
let _30: ();
{
_6 = [_9,_9,_9,_9,_9,_9,_9,_9];
RET = [_9,_9,_9,_9,_9,_9,_9,_9];
_6 = _10;
RET = [_9,_9,_9,_9,_9,_9,_9,_9];
_1 = 18_i8 as i128;
_3 = _8 | _4;
RET = [_9,_9,_9,_9,_9,_9,_9,_9];
_2 = !_3;
RET = [_9,_9,_9,_9,_9,_9,_9,_9];
_13 = 9223372036854775807_isize - (-9223372036854775808_isize);
_5 = _1;
_12 = '\u{10ba59}';
_4 = _3 << _7;
_5 = 12322464950221027558996867207401397504_u128 as i128;
_3 = _2;
_13 = 9223372036854775807_isize;
_12 = '\u{a12d8}';
_13 = (-9223372036854775808_isize);
_12 = '\u{593a4}';
_9 = true;
_5 = !_1;
_14.1 = !_13;
_3 = !_4;
_12 = '\u{79749}';
match _13 {
0 => bb1,
1 => bb2,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_15 = [(-30_i8),38_i8];
_9 = !false;
_14.0 = _5;
_2 = _4;
_3 = 1965211169_u32 as u16;
_10 = _6;
_14 = (_5, _13, 6478008931420934935_i64);
_13 = _14.1;
_14.0 = 13672217636175539038_u64 as i128;
_16.0 = 18299389754922682472_usize - 4_usize;
_9 = _2 != _2;
_10 = _6;
_14.1 = _1 as isize;
_16.1 = 4290392717_u32;
_2 = _7 - _4;
_2 = !_7;
_5 = _14.0 >> _4;
_16.1 = !590659057_u32;
_16.0 = 18112601018237912531_usize - 14733169281899001267_usize;
_22 = (98_i8,);
_8 = !_4;
_14.0 = _5;
Call(_9 = fn5(_14, _14.0, _16.0, _4), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_7 = _8;
_7 = !_8;
_24 = [_9,_9,_9];
_8 = _12 as u16;
_13 = -_14.1;
_16.0 = 6036236013329753988_usize & 5_usize;
RET = [_9,_9,_9,_9,_9,_9,_9,_9];
_22.0 = !(-47_i8);
_9 = true ^ false;
_21 = !_13;
_23 = core::ptr::addr_of!(_14.0);
_7 = !_4;
_4 = _7 >> _5;
_21 = _14.1;
_13 = 16468630859411328732_u64 as isize;
Goto(bb6)
}
bb6 = {
Call(_29 = dump_var(4_usize, 6_usize, Move(_6), 7_usize, Move(_7), 21_usize, Move(_21), 16_usize, Move(_16)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_29 = dump_var(4_usize, 10_usize, Move(_10), 22_usize, Move(_22), 12_usize, Move(_12), 24_usize, Move(_24)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_29 = dump_var(4_usize, 2_usize, Move(_2), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: (i128, isize, i64),mut _2: i128,mut _3: usize,mut _4: u16) -> bool {
mir! {
type RET = bool;
let _5: Adt51;
let _6: Adt46;
let _7: ([i8; 2], f64);
let _8: Adt42;
let _9: isize;
let _10: u64;
let _11: [bool; 8];
let _12: Adt51;
let _13: (u16, [bool; 8]);
let _14: (usize, u32);
let _15: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]);
let _16: (i128, isize, i64);
let _17: ();
let _18: ();
{
RET = false | true;
_1.0 = _2 ^ _2;
_1.1 = (-105_isize) & (-9223372036854775808_isize);
_1 = (_2, 77_isize, (-6744803061299538299_i64));
_1.0 = !_2;
_4 = 51514_u16 * 24901_u16;
_2 = _1.0;
_2 = !_1.0;
_3 = 1_usize;
_4 = 38498_u16;
_2 = _1.0 * _1.0;
_2 = -_1.0;
RET = false;
match _1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
77 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_1.0 = !_2;
_4 = !20960_u16;
Goto(bb8)
}
bb8 = {
_1.2 = 7887436484280398482_i64;
_1.2 = 15948087551447702525_u64 as i64;
RET = true & false;
_3 = 2579337188330705275_usize;
_3 = !14451263126063519147_usize;
_1.1 = (-15621_i16) as isize;
_1.0 = (-10_i8) as i128;
_1 = (_2, 9223372036854775807_isize, (-7492705363702111404_i64));
_4 = 57445_u16;
_1.1 = 11332407726183212025_u64 as isize;
_1.0 = _2 >> _1.2;
Goto(bb9)
}
bb9 = {
_4 = 31324_u16;
_2 = _1.0 << _1.0;
_3 = 2217028209099124904_usize ^ 1_usize;
_8.fld1.0 = -(-101_i8);
_8.fld1 = ((-2_i8),);
_2 = '\u{e9e59}' as i128;
Goto(bb10)
}
bb10 = {
_4 = 59884_u16 - 13209_u16;
_1.0 = _2 >> _2;
_8.fld1 = (56_i8,);
_1.1 = (-6_isize);
_1 = (_2, (-9223372036854775808_isize), 6844613854554342098_i64);
_1.1 = (-86_isize);
_4 = 61943_u16 + 13228_u16;
_8.fld1.0 = (-74_i8) ^ (-56_i8);
_8.fld0 = 2795278146_u32;
_1 = (_2, (-9223372036854775808_isize), (-1796728476819143536_i64));
_4 = _8.fld1.0 as u16;
_4 = 1213_u16 - 54656_u16;
_1.0 = _2;
_7.0 = [_8.fld1.0,_8.fld1.0];
_2 = _1.0 >> _1.0;
_7.0 = [_8.fld1.0,_8.fld1.0];
_8.fld1 = (66_i8,);
_4 = RET as u16;
_9 = -_1.1;
_7.1 = 184_u8 as f64;
RET = _2 != _1.0;
_9 = !_1.1;
_4 = !57774_u16;
Goto(bb11)
}
bb11 = {
_8.fld1.0 = 102_i8 & 110_i8;
_9 = _1.1;
_10 = _2 as u64;
_1 = (_2, _9, 1937123397655347763_i64);
_3 = 1_usize * 7_usize;
_10 = _9 as u64;
_13.1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_14 = (_3, _8.fld0);
_1 = (_2, _9, (-5663679309029384151_i64));
_1.1 = _9 * _9;
_15.4 = core::ptr::addr_of_mut!(_11);
_8.fld1.0 = !(-119_i8);
_1.0 = _2;
_9 = -_1.1;
_1 = (_2, _9, 8643458085589933079_i64);
_16.0 = _1.0;
_3 = _14.0;
_15.1 = !_3;
_15.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = !true;
_16.2 = 29241_i16 as i64;
_1.1 = !_9;
_16.1 = !_1.1;
_16 = (_1.0, _9, _1.2);
_2 = _16.0 << _16.2;
_1 = (_2, _16.1, _16.2);
Goto(bb12)
}
bb12 = {
_14 = (_3, _8.fld0);
RET = true;
_8.fld0 = _14.1;
_11 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = !true;
RET = _1.0 >= _1.0;
_1 = (_2, _9, _16.2);
_1 = (_2, _9, _16.2);
Goto(bb13)
}
bb13 = {
Call(_17 = dump_var(5_usize, 14_usize, Move(_14), 2_usize, Move(_2), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: i128,mut _2: [bool; 8],mut _3: i128,mut _4: i128,mut _5: i128,mut _6: u16) -> [i8; 2] {
mir! {
type RET = [i8; 2];
let _7: char;
let _8: (i16, (i128, isize, i64));
let _9: [u32; 8];
let _10: *const *mut u64;
let _11: (i128, isize, i64);
let _12: Adt42;
let _13: ([i8; 2], f64);
let _14: bool;
let _15: isize;
let _16: *const bool;
let _17: Adt43;
let _18: Adt49;
let _19: &'static f64;
let _20: ([i8; 2], f64);
let _21: char;
let _22: i128;
let _23: *const i128;
let _24: f32;
let _25: (i16, (i128, isize, i64));
let _26: i16;
let _27: (usize, u32);
let _28: f64;
let _29: bool;
let _30: [bool; 8];
let _31: i128;
let _32: isize;
let _33: i64;
let _34: isize;
let _35: f64;
let _36: [bool; 8];
let _37: (i128, isize, i64);
let _38: f32;
let _39: isize;
let _40: bool;
let _41: ();
let _42: ();
{
RET = [(-15_i8),83_i8];
RET = [124_i8,81_i8];
_3 = _4;
_7 = '\u{98cea}';
_5 = _4 + _4;
_2 = [true,true,true,false,false,true,true,true];
_1 = _4;
RET = [69_i8,77_i8];
_1 = _5 | _5;
_6 = 64564_u16;
RET = [105_i8,17_i8];
_7 = '\u{360fc}';
_3 = !_1;
_4 = _7 as i128;
_6 = 18545_u16;
_1 = _3;
_6 = 27676_u16 * 4826_u16;
_5 = _1 & _3;
_5 = -_1;
Goto(bb1)
}
bb1 = {
_1 = 13230772473857082838_u64 as i128;
RET = [(-81_i8),(-20_i8)];
_7 = '\u{4783a}';
_3 = !_5;
_2 = [false,true,true,false,false,false,false,true];
RET = [58_i8,76_i8];
_3 = _5;
_8.1.1 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_9 = [442650809_u32,2992591117_u32,1770102532_u32,4062929882_u32,1166036942_u32,234557241_u32,850938631_u32,2576387523_u32];
_3 = 9746784199731938236_usize as i128;
_5 = 2390335950_u32 as i128;
_8.1.1 = !76_isize;
Goto(bb2)
}
bb2 = {
RET = [(-38_i8),(-74_i8)];
_4 = -_1;
_2 = [false,false,true,true,true,true,false,true];
_8.1 = (_5, 6_isize, (-7982768195873306760_i64));
_8.1 = (_5, 9223372036854775807_isize, (-7191463161408162639_i64));
RET = [(-23_i8),72_i8];
RET = [97_i8,72_i8];
RET = [(-52_i8),27_i8];
_8.1.0 = _8.1.1 as i128;
RET = [(-80_i8),(-22_i8)];
_2 = [false,false,true,false,true,true,true,true];
_5 = _3 & _3;
_3 = _7 as i128;
_7 = '\u{9c71}';
_6 = 40680_u16;
_8.1 = (_4, 9223372036854775807_isize, 7587928766211461757_i64);
RET = [22_i8,105_i8];
_12.fld0 = 84_u8 as u32;
match _8.1.1 {
9223372036854775807 => bb4,
_ => bb3
}
}
bb3 = {
_1 = 13230772473857082838_u64 as i128;
RET = [(-81_i8),(-20_i8)];
_7 = '\u{4783a}';
_3 = !_5;
_2 = [false,true,true,false,false,false,false,true];
RET = [58_i8,76_i8];
_3 = _5;
_8.1.1 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_9 = [442650809_u32,2992591117_u32,1770102532_u32,4062929882_u32,1166036942_u32,234557241_u32,850938631_u32,2576387523_u32];
_3 = 9746784199731938236_usize as i128;
_5 = 2390335950_u32 as i128;
_8.1.1 = !76_isize;
Goto(bb2)
}
bb4 = {
_8.0 = _6 as i16;
_12.fld1 = (46_i8,);
_8.1.0 = _4;
_8.1.0 = _5;
_2 = [true,true,true,false,false,false,true,true];
_1 = -_8.1.0;
_14 = !true;
Goto(bb5)
}
bb5 = {
_3 = _8.1.2 as i128;
_15 = _8.1.1 >> _8.1.2;
_12.fld1 = ((-73_i8),);
_6 = 35156_u16;
_5 = _1;
_12.fld1 = ((-112_i8),);
_15 = _8.1.1 & _8.1.1;
Goto(bb6)
}
bb6 = {
_11.1 = -_15;
_8.1.1 = _6 as isize;
_14 = _4 >= _8.1.0;
_8.0 = -11686_i16;
_13.0 = [_12.fld1.0,_12.fld1.0];
_16 = core::ptr::addr_of!(_14);
_11.0 = _5;
_3 = -_11.0;
RET = [_12.fld1.0,_12.fld1.0];
_11.2 = _8.1.2;
_8.1 = _11;
_12.fld0 = 4014409360_u32;
_4 = -_11.0;
_13.1 = _11.2 as f64;
_18.fld1.0 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0];
_20.0 = [_12.fld1.0,_12.fld1.0];
_18.fld0.0 = !_12.fld1.0;
_2 = [_14,(*_16),_14,_14,(*_16),_14,(*_16),(*_16)];
match _11.2 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
7587928766211461757 => bb12,
_ => bb11
}
}
bb7 = {
_3 = _8.1.2 as i128;
_15 = _8.1.1 >> _8.1.2;
_12.fld1 = ((-73_i8),);
_6 = 35156_u16;
_5 = _1;
_12.fld1 = ((-112_i8),);
_15 = _8.1.1 & _8.1.1;
Goto(bb6)
}
bb8 = {
_8.0 = _6 as i16;
_12.fld1 = (46_i8,);
_8.1.0 = _4;
_8.1.0 = _5;
_2 = [true,true,true,false,false,false,true,true];
_1 = -_8.1.0;
_14 = !true;
Goto(bb5)
}
bb9 = {
_1 = 13230772473857082838_u64 as i128;
RET = [(-81_i8),(-20_i8)];
_7 = '\u{4783a}';
_3 = !_5;
_2 = [false,true,true,false,false,false,false,true];
RET = [58_i8,76_i8];
_3 = _5;
_8.1.1 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_9 = [442650809_u32,2992591117_u32,1770102532_u32,4062929882_u32,1166036942_u32,234557241_u32,850938631_u32,2576387523_u32];
_3 = 9746784199731938236_usize as i128;
_5 = 2390335950_u32 as i128;
_8.1.1 = !76_isize;
Goto(bb2)
}
bb10 = {
RET = [(-38_i8),(-74_i8)];
_4 = -_1;
_2 = [false,false,true,true,true,true,false,true];
_8.1 = (_5, 6_isize, (-7982768195873306760_i64));
_8.1 = (_5, 9223372036854775807_isize, (-7191463161408162639_i64));
RET = [(-23_i8),72_i8];
RET = [97_i8,72_i8];
RET = [(-52_i8),27_i8];
_8.1.0 = _8.1.1 as i128;
RET = [(-80_i8),(-22_i8)];
_2 = [false,false,true,false,true,true,true,true];
_5 = _3 & _3;
_3 = _7 as i128;
_7 = '\u{9c71}';
_6 = 40680_u16;
_8.1 = (_4, 9223372036854775807_isize, 7587928766211461757_i64);
RET = [22_i8,105_i8];
_12.fld0 = 84_u8 as u32;
match _8.1.1 {
9223372036854775807 => bb4,
_ => bb3
}
}
bb11 = {
_1 = 13230772473857082838_u64 as i128;
RET = [(-81_i8),(-20_i8)];
_7 = '\u{4783a}';
_3 = !_5;
_2 = [false,true,true,false,false,false,false,true];
RET = [58_i8,76_i8];
_3 = _5;
_8.1.1 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_9 = [442650809_u32,2992591117_u32,1770102532_u32,4062929882_u32,1166036942_u32,234557241_u32,850938631_u32,2576387523_u32];
_3 = 9746784199731938236_usize as i128;
_5 = 2390335950_u32 as i128;
_8.1.1 = !76_isize;
Goto(bb2)
}
bb12 = {
_14 = !false;
_1 = _13.1 as i128;
_4 = _3;
_21 = _7;
_20 = _13;
_21 = _7;
_8.0 = 1981020829_i32 as i16;
_8.0 = -9682_i16;
_2 = [(*_16),_14,(*_16),(*_16),(*_16),_14,(*_16),_14];
_9 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0];
_12.fld0 = !1194007126_u32;
_18.fld1 = (_9,);
_20.0 = RET;
_18.fld1.0 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0];
_14 = true;
_9 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0];
_7 = _21;
_24 = _12.fld1.0 as f32;
_18.fld1 = (_9,);
_12 = Adt42 { fld0: 3977225841_u32,fld1: _18.fld0 };
_4 = _5 | _11.0;
_18.fld1 = (_9,);
Goto(bb13)
}
bb13 = {
_22 = _1;
_8.1.2 = _8.0 as i64;
_12.fld0 = 966331613_u32;
_18.fld1 = (_9,);
_12.fld1 = (_18.fld0.0,);
_28 = -_13.1;
RET = [_18.fld0.0,_12.fld1.0];
_30 = [_14,_14,_14,_14,(*_16),(*_16),(*_16),_14];
_18.fld2 = _6 - _6;
_25.1 = (_5, _15, _11.2);
_31 = !_25.1.0;
_20.0 = [_12.fld1.0,_18.fld0.0];
_7 = _21;
_27 = (3_usize, _12.fld0);
_20.0 = [_12.fld1.0,_12.fld1.0];
_23 = core::ptr::addr_of!(_5);
_32 = _25.1.1 | _25.1.1;
match _11.2 {
0 => bb1,
1 => bb12,
2 => bb10,
3 => bb4,
7587928766211461757 => bb14,
_ => bb5
}
}
bb14 = {
_25.1 = (_5, _32, _11.2);
_13 = (RET, _28);
_8.0 = 183_i16;
_18.fld1 = (_9,);
_25.1.2 = _11.2 + _11.2;
_11.2 = _25.1.2 - _8.1.2;
_29 = _1 >= (*_23);
_3 = _5;
_11 = _25.1;
_22 = _4 & _8.1.0;
_12 = Adt42 { fld0: _27.1,fld1: _18.fld0 };
_8.1.1 = _29 as isize;
_32 = _11.1;
_13.1 = _28;
_29 = _18.fld0.0 != _12.fld1.0;
_29 = _14;
_8.0 = (-56_i16) & (-7474_i16);
_8.1 = (_31, _25.1.1, _25.1.2);
_12.fld1 = (_18.fld0.0,);
_8.0 = !15593_i16;
_27.1 = _12.fld0;
_36 = [_29,_29,_29,(*_16),_29,_29,_14,_29];
_38 = _24;
_19 = &_13.1;
_18.fld1.0 = _9;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(6_usize, 32_usize, Move(_32), 29_usize, Move(_29), 3_usize, Move(_3), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(6_usize, 6_usize, Move(_6), 27_usize, Move(_27), 30_usize, Move(_30), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(6_usize, 1_usize, Move(_1), 21_usize, Move(_21), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: i128,mut _2: isize,mut _3: i128,mut _4: i128,mut _5: f64,mut _6: (i128, isize, i64),mut _7: [bool; 8],mut _8: i128,mut _9: i128) -> ([u32; 8],) {
mir! {
type RET = ([u32; 8],);
let _10: char;
let _11: *const *mut u64;
let _12: Adt44;
let _13: Adt49;
let _14: char;
let _15: ([u32; 8],);
let _16: bool;
let _17: Adt49;
let _18: *const *mut u64;
let _19: isize;
let _20: bool;
let _21: [u32; 8];
let _22: (i128, isize, i64);
let _23: bool;
let _24: [u8; 6];
let _25: usize;
let _26: u64;
let _27: i64;
let _28: f32;
let _29: i16;
let _30: f32;
let _31: i32;
let _32: bool;
let _33: Adt51;
let _34: char;
let _35: bool;
let _36: Adt47;
let _37: ();
let _38: ();
{
_5 = 1854443649_u32 as f64;
_6.2 = (-1171969113340904592_i64) ^ 5563410318383237153_i64;
_4 = -_6.0;
_7 = [true,false,true,true,false,true,true,false];
_6.0 = -_9;
_5 = 187_u8 as f64;
_6.1 = _2 + _2;
_3 = _9 - _1;
_6 = (_3, _2, 3877089014945943167_i64);
RET.0 = [1734546016_u32,949847398_u32,3981722736_u32,827441854_u32,2164623886_u32,1667003404_u32,1001690164_u32,653881305_u32];
_3 = -_6.0;
RET.0 = [1096581528_u32,2779531385_u32,2358292166_u32,3018299933_u32,3049769302_u32,2547241348_u32,849167433_u32,570830586_u32];
_6.2 = 5143572486895757950_i64 - 5546142736872614394_i64;
Goto(bb1)
}
bb1 = {
_6.2 = 2038593646061446554_i64;
_3 = _9 * _6.0;
_10 = '\u{4ecb4}';
RET.0 = [2776315549_u32,329940167_u32,1495124972_u32,1938347068_u32,4287706628_u32,1245079990_u32,1775203666_u32,665855192_u32];
_7 = [true,true,false,true,true,false,false,false];
RET.0 = [1390331619_u32,3018750388_u32,3708761626_u32,528142078_u32,1827543038_u32,1283668930_u32,3084481632_u32,1035464353_u32];
_5 = _4 as f64;
_1 = _4;
_6.0 = 89080287_u32 as i128;
_4 = -_3;
_1 = _6.0;
RET.0 = [568715572_u32,2038709044_u32,2411973717_u32,1587609355_u32,978499862_u32,2808540821_u32,2182770370_u32,4277894221_u32];
_10 = '\u{1da8}';
_4 = _3;
RET.0 = [3149509080_u32,2757547540_u32,4140547943_u32,3032099773_u32,3655222991_u32,3681785209_u32,1118973005_u32,332229528_u32];
_4 = !_1;
_5 = 5203607900607802623_usize as f64;
_6.2 = !8625147651775102498_i64;
_6 = (_3, _2, (-3611480164297428368_i64));
_13.fld2 = !42128_u16;
_4 = _8 >> _6.0;
_6 = (_4, _2, 2344181208440105357_i64);
_13.fld1.0 = [4079206382_u32,42254010_u32,1875626692_u32,1520228942_u32,1515842106_u32,3308211961_u32,3578040855_u32,3394937216_u32];
_7 = [true,true,false,false,false,true,false,true];
_9 = _4;
RET = (_13.fld1.0,);
_13.fld0.0 = !7_i8;
_13.fld0 = (114_i8,);
match _6.1 {
0 => bb2,
1 => bb3,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_6.1 = _2;
_13.fld0.0 = 155_u8 as i8;
_5 = _13.fld2 as f64;
_15.0 = [2801759387_u32,902862221_u32,3808023586_u32,144105641_u32,3906426077_u32,454221835_u32,1215786705_u32,2081148504_u32];
_13.fld2 = (-3434_i16) as u16;
_13.fld1 = (RET.0,);
RET = (_13.fld1.0,);
_1 = _6.0 & _6.0;
_13.fld0.0 = 67_i8 | 68_i8;
RET.0 = _15.0;
match _6.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
2344181208440105357 => bb10,
_ => bb9
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6.2 = 2038593646061446554_i64;
_3 = _9 * _6.0;
_10 = '\u{4ecb4}';
RET.0 = [2776315549_u32,329940167_u32,1495124972_u32,1938347068_u32,4287706628_u32,1245079990_u32,1775203666_u32,665855192_u32];
_7 = [true,true,false,true,true,false,false,false];
RET.0 = [1390331619_u32,3018750388_u32,3708761626_u32,528142078_u32,1827543038_u32,1283668930_u32,3084481632_u32,1035464353_u32];
_5 = _4 as f64;
_1 = _4;
_6.0 = 89080287_u32 as i128;
_4 = -_3;
_1 = _6.0;
RET.0 = [568715572_u32,2038709044_u32,2411973717_u32,1587609355_u32,978499862_u32,2808540821_u32,2182770370_u32,4277894221_u32];
_10 = '\u{1da8}';
_4 = _3;
RET.0 = [3149509080_u32,2757547540_u32,4140547943_u32,3032099773_u32,3655222991_u32,3681785209_u32,1118973005_u32,332229528_u32];
_4 = !_1;
_5 = 5203607900607802623_usize as f64;
_6.2 = !8625147651775102498_i64;
_6 = (_3, _2, (-3611480164297428368_i64));
_13.fld2 = !42128_u16;
_4 = _8 >> _6.0;
_6 = (_4, _2, 2344181208440105357_i64);
_13.fld1.0 = [4079206382_u32,42254010_u32,1875626692_u32,1520228942_u32,1515842106_u32,3308211961_u32,3578040855_u32,3394937216_u32];
_7 = [true,true,false,false,false,true,false,true];
_9 = _4;
RET = (_13.fld1.0,);
_13.fld0.0 = !7_i8;
_13.fld0 = (114_i8,);
match _6.1 {
0 => bb2,
1 => bb3,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb10 = {
_8 = _9;
_15.0 = [3461901854_u32,93129948_u32,2219765076_u32,2723610345_u32,234551399_u32,914118730_u32,1083544595_u32,2559286277_u32];
_6.2 = 16334_i16 as i64;
_13.fld0 = (105_i8,);
_17 = Adt49 { fld0: _13.fld0,fld1: RET,fld2: _13.fld2 };
_17.fld0 = (_13.fld0.0,);
_6.0 = 3753516386_u32 as i128;
_17.fld2 = !_13.fld2;
_13.fld1 = (RET.0,);
_16 = true;
_6.2 = !(-440855268002538763_i64);
_6.0 = -_4;
_17.fld1.0 = RET.0;
_19 = !_6.1;
_13.fld1 = _15;
_8 = !_4;
_3 = -_8;
match _6.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb6,
6 => bb7,
340282366920938463454151235394913435648 => bb12,
_ => bb11
}
}
bb11 = {
_6.2 = 2038593646061446554_i64;
_3 = _9 * _6.0;
_10 = '\u{4ecb4}';
RET.0 = [2776315549_u32,329940167_u32,1495124972_u32,1938347068_u32,4287706628_u32,1245079990_u32,1775203666_u32,665855192_u32];
_7 = [true,true,false,true,true,false,false,false];
RET.0 = [1390331619_u32,3018750388_u32,3708761626_u32,528142078_u32,1827543038_u32,1283668930_u32,3084481632_u32,1035464353_u32];
_5 = _4 as f64;
_1 = _4;
_6.0 = 89080287_u32 as i128;
_4 = -_3;
_1 = _6.0;
RET.0 = [568715572_u32,2038709044_u32,2411973717_u32,1587609355_u32,978499862_u32,2808540821_u32,2182770370_u32,4277894221_u32];
_10 = '\u{1da8}';
_4 = _3;
RET.0 = [3149509080_u32,2757547540_u32,4140547943_u32,3032099773_u32,3655222991_u32,3681785209_u32,1118973005_u32,332229528_u32];
_4 = !_1;
_5 = 5203607900607802623_usize as f64;
_6.2 = !8625147651775102498_i64;
_6 = (_3, _2, (-3611480164297428368_i64));
_13.fld2 = !42128_u16;
_4 = _8 >> _6.0;
_6 = (_4, _2, 2344181208440105357_i64);
_13.fld1.0 = [4079206382_u32,42254010_u32,1875626692_u32,1520228942_u32,1515842106_u32,3308211961_u32,3578040855_u32,3394937216_u32];
_7 = [true,true,false,false,false,true,false,true];
_9 = _4;
RET = (_13.fld1.0,);
_13.fld0.0 = !7_i8;
_13.fld0 = (114_i8,);
match _6.1 {
0 => bb2,
1 => bb3,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb12 = {
_13 = Adt49 { fld0: _17.fld0,fld1: RET,fld2: _17.fld2 };
_24 = [105_u8,50_u8,51_u8,195_u8,194_u8,125_u8];
_17.fld0 = _13.fld0;
_22.0 = -_8;
_3 = _10 as i128;
_3 = !_6.0;
_25 = !4_usize;
_7 = [_16,_16,_16,_16,_16,_16,_16,_16];
_6.0 = _22.0 - _4;
_1 = _9;
_21 = [3789669029_u32,4110638167_u32,1652833361_u32,828738434_u32,3091438353_u32,1909441114_u32,3027269504_u32,3064958285_u32];
_26 = !2601779756066273386_u64;
_14 = _10;
_9 = _3 + _3;
_23 = _8 <= _9;
_6.2 = 1825090963887814012_i64 ^ 842981212352156738_i64;
RET.0 = [679770722_u32,2761226956_u32,2641544180_u32,1077931724_u32,1713671353_u32,1543630192_u32,3375026098_u32,4146672654_u32];
_13.fld0 = _17.fld0;
_24 = [246_u8,109_u8,86_u8,57_u8,180_u8,215_u8];
_23 = _16;
_22.0 = _8;
_16 = _23 ^ _23;
Goto(bb13)
}
bb13 = {
_23 = !_16;
_15 = (_17.fld1.0,);
_20 = _23;
_6.2 = 3746260071628560160_i64;
_17.fld0.0 = -_13.fld0.0;
_29 = 77118327803253965760677449544573907522_u128 as i16;
_13.fld1 = (RET.0,);
_7 = [_16,_23,_20,_20,_23,_23,_23,_20];
_3 = _1;
_22.2 = _6.2 >> _9;
RET = _15;
_6 = (_9, _19, _22.2);
_19 = _6.0 as isize;
_16 = !_20;
_1 = _4 - _9;
_13.fld0 = _17.fld0;
RET = _15;
Call(_25 = core::intrinsics::bswap(16975390052864680401_usize), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_27 = -_22.2;
_28 = (-17410947_i32) as f32;
_8 = _2 as i128;
_4 = -_1;
_6 = (_1, _19, _22.2);
_17.fld1 = RET;
_6 = (_1, _19, _27);
_6.2 = 226985717089574121142574982268178157186_u128 as i64;
_5 = _13.fld0.0 as f64;
_22 = _6;
_13.fld0 = (_17.fld0.0,);
_28 = 1759632856_u32 as f32;
_17.fld0 = (_13.fld0.0,);
_32 = _2 != _19;
_30 = _28;
RET = (_17.fld1.0,);
_3 = 3914620253_u32 as i128;
_1 = _6.0;
_6.0 = 248203542835545895229537691381902461314_u128 as i128;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(7_usize, 2_usize, Move(_2), 1_usize, Move(_1), 14_usize, Move(_14), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(7_usize, 24_usize, Move(_24), 9_usize, Move(_9), 26_usize, Move(_26), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(7_usize, 22_usize, Move(_22), 19_usize, Move(_19), 23_usize, Move(_23), 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: i128,mut _2: f64,mut _3: isize,mut _4: isize,mut _5: [u8; 6],mut _6: i128,mut _7: i128,mut _8: [bool; 8],mut _9: isize,mut _10: (i128, isize, i64),mut _11: isize,mut _12: (u16, [bool; 8]),mut _13: i64) -> Adt49 {
mir! {
type RET = Adt49;
let _14: [u32; 8];
let _15: *const bool;
let _16: char;
let _17: Adt49;
let _18: f32;
let _19: *mut [bool; 8];
let _20: Adt46;
let _21: bool;
let _22: Adt49;
let _23: i32;
let _24: Adt54;
let _25: i16;
let _26: (usize, u32);
let _27: Adt49;
let _28: f32;
let _29: f32;
let _30: isize;
let _31: i128;
let _32: u32;
let _33: ();
let _34: ();
{
_3 = _10.1 << _13;
RET.fld2 = _12.0;
_1 = _7 * _6;
_10.1 = -_9;
RET.fld1.0 = [2448999812_u32,3149983392_u32,3231482801_u32,1656821692_u32,2518775270_u32,3592151775_u32,256441535_u32,480619089_u32];
RET.fld0.0 = 73_i8;
match RET.fld2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
24551 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET.fld0 = ((-91_i8),);
_3 = _11;
_13 = _12.0 as i64;
RET.fld2 = RET.fld0.0 as u16;
_12 = (RET.fld2, _8);
_8 = [false,true,false,true,true,false,true,false];
_4 = _9;
_12.0 = false as u16;
_9 = !_11;
_10.2 = -_13;
RET.fld0.0 = _2 as i8;
_12.0 = !RET.fld2;
RET.fld2 = !_12.0;
RET.fld1.0 = [3176730748_u32,2766583716_u32,2992262926_u32,2114838040_u32,3502736637_u32,745531928_u32,1436640782_u32,2184443974_u32];
_7 = 3694738531_u32 as i128;
RET.fld0 = (100_i8,);
_14 = [811706800_u32,1589956186_u32,1974690535_u32,3332345472_u32,1845147195_u32,3376364534_u32,3121728934_u32,3095513852_u32];
RET.fld1 = (_14,);
_10.2 = false as i64;
Goto(bb8)
}
bb8 = {
RET.fld0.0 = (-72_i8);
_2 = RET.fld0.0 as f64;
RET.fld0.0 = (-52_i8);
_13 = !_10.2;
_12.0 = false as u16;
_5 = [211_u8,31_u8,87_u8,154_u8,78_u8,236_u8];
_17.fld1 = RET.fld1;
_12.1 = [false,true,false,true,false,false,true,true];
_16 = '\u{3016}';
RET.fld0.0 = (-98_i8) ^ 2_i8;
_10 = (_1, _9, _13);
Call(_17.fld0.0 = fn9(RET.fld1.0, _14, RET.fld1, _8, _8, _14, _12.1, RET.fld1.0), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
RET = Adt49 { fld0: _17.fld0,fld1: _17.fld1,fld2: _12.0 };
_17.fld1 = (_14,);
_17.fld1 = RET.fld1;
Call(_4 = core::intrinsics::bswap(_11), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_7 = 307953032051455301532804442482902681803_u128 as i128;
_12.1 = [true,true,false,false,true,false,true,false];
RET = Adt49 { fld0: _17.fld0,fld1: _17.fld1,fld2: _12.0 };
_17.fld1 = (RET.fld1.0,);
_10 = (_6, _4, _13);
RET.fld0 = (_17.fld0.0,);
_17.fld1.0 = [1659201473_u32,1292760371_u32,66560872_u32,2531590821_u32,4111856648_u32,4175821914_u32,646891409_u32,769914489_u32];
_12.0 = !RET.fld2;
_17.fld0 = (RET.fld0.0,);
RET = Adt49 { fld0: _17.fld0,fld1: _17.fld1,fld2: _12.0 };
_17.fld1 = (_14,);
_1 = _7 + _7;
_12.0 = RET.fld2;
_10.1 = !_11;
Goto(bb11)
}
bb11 = {
_22.fld0 = (RET.fld0.0,);
_22.fld0.0 = RET.fld0.0;
_2 = 2394220052_u32 as f64;
_10.1 = !_11;
_14 = _17.fld1.0;
RET.fld1 = (_17.fld1.0,);
_24.fld1.1 = [false,false,false,true,true,true,false,true];
RET.fld0.0 = 25_u8 as i8;
_26.0 = 811644773945359950_usize;
_7 = _1 | _1;
Goto(bb12)
}
bb12 = {
_25 = (-25561_i16) & (-17043_i16);
_19 = core::ptr::addr_of_mut!(_24.fld1.1);
_21 = RET.fld2 >= _12.0;
_22.fld1 = (_14,);
_24.fld0 = 1189786884_u32;
RET = Adt49 { fld0: _22.fld0,fld1: _17.fld1,fld2: _12.0 };
match _24.fld0 {
0 => bb10,
1 => bb6,
2 => bb9,
3 => bb13,
1189786884 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
RET.fld0.0 = -_17.fld0.0;
_15 = core::ptr::addr_of!(_21);
_12.0 = RET.fld2;
_27 = Adt49 { fld0: _22.fld0,fld1: RET.fld1,fld2: _12.0 };
_28 = 17180176970575619050_u64 as f32;
_27.fld1.0 = [_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0];
_24.fld1.0 = core::ptr::addr_of!(RET.fld0.0);
_17.fld1.0 = [_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0,_24.fld0];
_20 = Adt46::Variant3 { fld0: _24.fld0,fld1: _2 };
_22 = Adt49 { fld0: _27.fld0,fld1: RET.fld1,fld2: _12.0 };
_17.fld0.0 = -RET.fld0.0;
_26 = (17997994111914792872_usize, Field::<u32>(Variant(_20, 3), 0));
_5 = [96_u8,233_u8,71_u8,163_u8,243_u8,253_u8];
Goto(bb16)
}
bb16 = {
Call(_33 = dump_var(8_usize, 25_usize, Move(_25), 26_usize, Move(_26), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(8_usize, 16_usize, Move(_16), 3_usize, Move(_3), 4_usize, Move(_4), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [u32; 8],mut _2: [u32; 8],mut _3: ([u32; 8],),mut _4: [bool; 8],mut _5: [bool; 8],mut _6: [u32; 8],mut _7: [bool; 8],mut _8: [u32; 8]) -> i8 {
mir! {
type RET = i8;
let _9: f64;
let _10: (*const i8, [bool; 8], f64);
let _11: f32;
let _12: u128;
let _13: i64;
let _14: Adt42;
let _15: [bool; 3];
let _16: [bool; 8];
let _17: bool;
let _18: bool;
let _19: f64;
let _20: *mut u64;
let _21: (u16, [bool; 8]);
let _22: u8;
let _23: [i8; 2];
let _24: u128;
let _25: f64;
let _26: *const i8;
let _27: ([u32; 8],);
let _28: Adt49;
let _29: u128;
let _30: u8;
let _31: *const bool;
let _32: f64;
let _33: (u16, [bool; 8]);
let _34: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]);
let _35: Adt57;
let _36: Adt54;
let _37: (usize, u32);
let _38: *const bool;
let _39: bool;
let _40: (i16, (i128, isize, i64));
let _41: i8;
let _42: [bool; 8];
let _43: bool;
let _44: Adt44;
let _45: Adt56;
let _46: i8;
let _47: isize;
let _48: ();
let _49: ();
{
_7 = [false,true,false,false,false,false,false,true];
_3 = (_2,);
RET = (-30_i8) >> (-606719837452701146_i64);
_8 = [2707321794_u32,134107911_u32,3819060777_u32,3524346420_u32,1297561864_u32,507353577_u32,675447663_u32,680353422_u32];
Call(_3 = fn10(_2, _8, _6, _1, _4, _8, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = [3890960669_u32,920273457_u32,238811069_u32,4124424112_u32,3515512132_u32,2714682101_u32,3945103366_u32,3256673746_u32];
_3 = (_8,);
_2 = _1;
RET = 25_i8 * (-55_i8);
_4 = [false,true,false,true,false,false,true,false];
_5 = [true,true,false,false,false,true,false,false];
_5 = _7;
_10.2 = 230345214488143823096067770383362424164_u128 as f64;
_7 = _5;
_5 = [false,false,false,true,false,true,true,true];
_11 = RET as f32;
_1 = [1481726145_u32,2985496543_u32,3620212733_u32,260653969_u32,4277041308_u32,1832441717_u32,3326431959_u32,1890451441_u32];
_11 = 39_u8 as f32;
_1 = _6;
_12 = 59796_u16 as u128;
_10.0 = core::ptr::addr_of!(RET);
_4 = _7;
_6 = [626980696_u32,700926095_u32,3446968038_u32,2773755122_u32,2888900156_u32,2382138084_u32,1132147664_u32,582930276_u32];
_7 = _4;
RET = 64_i8 * (-55_i8);
_9 = _10.2 + _10.2;
_13 = -2018353458911322262_i64;
RET = !20_i8;
_3 = (_2,);
Goto(bb2)
}
bb2 = {
_14.fld1.0 = RET;
RET = _14.fld1.0;
_14.fld0 = 35_u8 as u32;
_8 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
RET = !_14.fld1.0;
_12 = !203689010291546561082402455958713158072_u128;
_15 = [false,false,false];
_10.0 = core::ptr::addr_of!(RET);
_9 = _10.2;
_3.0 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_16 = [true,false,true,false,true,false,false,false];
_10.0 = core::ptr::addr_of!(_14.fld1.0);
_2 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_4 = [false,false,true,false,false,false,false,false];
_14.fld1.0 = RET;
_14.fld1 = (RET,);
_10.2 = _12 as f64;
_14.fld1 = (RET,);
_18 = _10.2 < _10.2;
Goto(bb3)
}
bb3 = {
_16 = [_18,_18,_18,_18,_18,_18,_18,_18];
_3 = (_1,);
_4 = _7;
_19 = (-686536201_i32) as f64;
_5 = _4;
_7 = [_18,_18,_18,_18,_18,_18,_18,_18];
_12 = 97661127204343562976678479853437965706_u128;
_10.1 = [_18,_18,_18,_18,_18,_18,_18,_18];
_4 = [_18,_18,_18,_18,_18,_18,_18,_18];
_12 = RET as u128;
_6 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_14.fld0 = 844117851_u32 >> _13;
_16 = [_18,_18,_18,_18,_18,_18,_18,_18];
_16 = [_18,_18,_18,_18,_18,_18,_18,_18];
_4 = [_18,_18,_18,_18,_18,_18,_18,_18];
_25 = -_9;
Goto(bb4)
}
bb4 = {
_6 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_7 = _16;
_21.1 = [_18,_18,_18,_18,_18,_18,_18,_18];
_12 = !26677666520660257195699882630502716100_u128;
_27.0 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_27 = _3;
_22 = !137_u8;
_8 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_3.0 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_1 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_13 = (-2395078066118677371_i64) + 4208090988042308600_i64;
_21.1 = [_18,_18,_18,_18,_18,_18,_18,_18];
_9 = _14.fld0 as f64;
_4 = [_18,_18,_18,_18,_18,_18,_18,_18];
_28.fld0 = _14.fld1;
_14.fld0 = !370878073_u32;
_15 = [_18,_18,_18];
_29 = (-2099133113_i32) as u128;
Call(_13 = core::intrinsics::transmute(_5), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET = _14.fld1.0;
_10.0 = core::ptr::addr_of!(_14.fld1.0);
_28.fld0.0 = _14.fld1.0 | RET;
Goto(bb6)
}
bb6 = {
_32 = _22 as f64;
_21.1 = _5;
_1 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_18 = false;
_12 = !_29;
_30 = 105026946544086883_u64 as u8;
RET = 2_usize as i8;
_15 = [_18,_18,_18];
_24 = _12;
_9 = -_10.2;
_33.1 = _7;
_28.fld2 = 16187636479422840833_u64 as u16;
_17 = !_18;
Goto(bb7)
}
bb7 = {
_28.fld2 = !35883_u16;
Goto(bb8)
}
bb8 = {
_28.fld1 = (_27.0,);
_33.0 = _28.fld2;
_16 = [_17,_17,_17,_17,_18,_17,_17,_18];
_28 = Adt49 { fld0: _14.fld1,fld1: _27,fld2: _33.0 };
_24 = _12 - _29;
_23 = [RET,_14.fld1.0];
_21.0 = _33.0;
_28 = Adt49 { fld0: _14.fld1,fld1: _27,fld2: _21.0 };
_23 = [RET,_14.fld1.0];
_21 = _33;
_11 = 4265542242549353887_u64 as f32;
_13 = -(-8691050689480088152_i64);
_2 = _27.0;
_34.1 = !3_usize;
_3 = (_27.0,);
_28 = Adt49 { fld0: _14.fld1,fld1: _27,fld2: _21.0 };
_24 = _12;
_34.2 = (-3750_i16) as isize;
_33 = (_28.fld2, _5);
_34.3 = _5;
_2 = _28.fld1.0;
_26 = core::ptr::addr_of!(_14.fld1.0);
_9 = _14.fld0 as f64;
_32 = _9;
_10.2 = _9 - _25;
_36.fld1.2 = _25;
Goto(bb9)
}
bb9 = {
_18 = _17;
_21.0 = _28.fld2;
_16 = [_17,_17,_17,_17,_18,_17,_18,_17];
_36.fld7 = (-145214110174282129499892677567444062617_i128) + (-61295689823740350025463899998344269887_i128);
_36.fld7 = _13 as i128;
_8 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_25 = 22341_i16 as f64;
_9 = _25;
_14.fld1.0 = _28.fld0.0 - RET;
_10 = (_26, _4, _32);
_14.fld1.0 = _28.fld0.0;
_21 = _33;
_34.0 = [_18,_18,_17,_18,_18,_17,_17,_18];
_36.fld7 = 24228_i16 as i128;
_31 = core::ptr::addr_of!(_17);
_40.0 = (-2836_i16) ^ 27757_i16;
_37 = (_34.1, _14.fld0);
_19 = _36.fld1.2 + _32;
_40.1.0 = !_36.fld7;
_14.fld0 = _34.2 as u32;
_31 = core::ptr::addr_of!(_39);
_33 = (_28.fld2, _5);
_4 = [_18,_18,_17,_18,_17,_17,_17,_17];
_34.3 = _21.1;
_16 = [_18,_18,_18,_18,_17,_18,_18,_18];
Goto(bb10)
}
bb10 = {
_10.0 = _26;
_34.4 = core::ptr::addr_of_mut!(_34.0);
Call(_36.fld5 = fn12(_34, _34, _28.fld1, _28.fld1.0, _10.1, _24), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_10.2 = _9;
_36.fld1 = (_10.0, _21.1, _25);
_36.fld1 = (_10.0, _34.3, _19);
_21.0 = _28.fld0.0 as u16;
_15 = [_18,_18,_18];
_18 = _17;
_36.fld1.2 = _13 as f64;
_10.0 = core::ptr::addr_of!(_41);
_33.1 = [_17,_17,_18,_17,_18,_17,_18,_18];
_2 = _3.0;
_39 = _13 >= _13;
_36.fld1.1 = [_39,(*_31),_18,(*_31),(*_31),(*_31),(*_31),(*_31)];
_36.fld1.2 = _25 + _32;
Goto(bb12)
}
bb12 = {
_36.fld5 = _21.1;
_30 = _22 & _22;
_10 = _36.fld1;
_36.fld0 = _14.fld0;
_3 = _28.fld1;
_22 = !_30;
_15 = [(*_31),_39,(*_31)];
_36.fld1.1 = [_18,(*_31),_18,_18,_18,(*_31),_18,(*_31)];
_18 = (*_31);
_36.fld2 = -_11;
_13 = -4802654382592419868_i64;
_25 = _10.2;
_18 = !(*_31);
_37.1 = '\u{13d17}' as u32;
_14.fld0 = _37.1;
_7 = [(*_31),(*_31),(*_31),(*_31),_17,_39,_39,(*_31)];
_14.fld1 = (RET,);
_36.fld3 = _12 as u16;
_39 = _18;
_23 = [RET,_28.fld0.0];
_43 = !_18;
Goto(bb13)
}
bb13 = {
_40.0 = _13 as i16;
_31 = core::ptr::addr_of!(_43);
_6 = _27.0;
_34.4 = core::ptr::addr_of_mut!(_34.3);
_15 = [(*_31),_17,_18];
_14 = Adt42 { fld0: _36.fld0,fld1: _28.fld0 };
_43 = _18;
_34.3 = [(*_31),_17,_39,_18,_39,(*_31),_43,_39];
_28.fld0 = _14.fld1;
_14.fld1.0 = RET;
_28.fld1 = (_27.0,);
_36.fld3 = _21.0;
_34.2 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_14.fld1 = (_28.fld0.0,);
Goto(bb14)
}
bb14 = {
_15 = [(*_31),_43,_43];
_7 = [(*_31),(*_31),_18,_39,_43,(*_31),_43,_17];
_34.3 = [_17,(*_31),_43,_43,_39,(*_31),(*_31),(*_31)];
_33 = _21;
_41 = -(*_26);
_22 = _30 - _30;
_31 = core::ptr::addr_of!((*_31));
_11 = _36.fld1.2 as f32;
_1 = [_36.fld0,_37.1,_37.1,_37.1,_14.fld0,_37.1,_14.fld0,_14.fld0];
_2 = _3.0;
_14.fld1 = (RET,);
_46 = (*_26) << _22;
_12 = _29 + _24;
_12 = _40.1.0 as u128;
RET = _34.2 as i8;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(9_usize, 7_usize, Move(_7), 6_usize, Move(_6), 22_usize, Move(_22), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(9_usize, 39_usize, Move(_39), 13_usize, Move(_13), 8_usize, Move(_8), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(9_usize, 33_usize, Move(_33), 16_usize, Move(_16), 41_usize, Move(_41), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(9_usize, 29_usize, Move(_29), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [u32; 8],mut _2: [u32; 8],mut _3: [u32; 8],mut _4: [u32; 8],mut _5: [bool; 8],mut _6: [u32; 8],mut _7: [u32; 8]) -> ([u32; 8],) {
mir! {
type RET = ([u32; 8],);
let _8: *mut u64;
let _9: Adt49;
let _10: Adt42;
let _11: [bool; 8];
let _12: *mut u64;
let _13: i64;
let _14: Adt54;
let _15: usize;
let _16: isize;
let _17: bool;
let _18: isize;
let _19: [bool; 8];
let _20: i64;
let _21: ([u32; 8],);
let _22: Adt48;
let _23: i128;
let _24: i32;
let _25: (i128, isize, i64);
let _26: *mut u64;
let _27: Adt54;
let _28: Adt42;
let _29: *mut u64;
let _30: ();
let _31: ();
{
RET = (_1,);
_4 = [2422194649_u32,1680774412_u32,2211467686_u32,1514241362_u32,107809759_u32,1264865167_u32,4276012325_u32,2737236907_u32];
RET.0 = [788869741_u32,2485071197_u32,3687051182_u32,451955221_u32,4280895839_u32,1323865382_u32,239614926_u32,1345761112_u32];
_7 = RET.0;
_2 = _6;
_5 = [false,false,true,true,false,false,false,false];
_9.fld0 = (95_i8,);
RET.0 = [3274276845_u32,1053457816_u32,3940683299_u32,2791079596_u32,2729129313_u32,1799492015_u32,3274881243_u32,2896940825_u32];
_6 = [919278220_u32,1516852839_u32,2365772610_u32,2478236644_u32,310704484_u32,3548783870_u32,3499060966_u32,1837502812_u32];
_9.fld1.0 = _7;
_2 = [4170054072_u32,784192316_u32,3066194986_u32,558810891_u32,1605678495_u32,1237092188_u32,1610201931_u32,2157787473_u32];
_10 = Adt42 { fld0: 2461633270_u32,fld1: _9.fld0 };
_9.fld1 = RET;
Goto(bb1)
}
bb1 = {
_13 = (-5182482645118315339_i64);
_14.fld4 = !(-10606_i16);
_1 = [_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0];
_14.fld1.0 = core::ptr::addr_of!(_9.fld0.0);
_14.fld1.1 = [false,true,false,false,false,false,true,false];
_14.fld0 = _10.fld0;
_9.fld0 = (_10.fld1.0,);
_14.fld4 = !(-2328_i16);
_11 = [true,false,true,true,true,true,false,false];
_3 = [_10.fld0,_14.fld0,_10.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_10.fld0];
_14.fld2 = _14.fld4 as f32;
_9.fld0.0 = _10.fld1.0;
_4 = _3;
_14.fld1.0 = core::ptr::addr_of!(_10.fld1.0);
_14.fld2 = (-97_isize) as f32;
_14.fld5 = _11;
_5 = [true,false,false,false,false,false,false,false];
RET = (_2,);
_9 = Adt49 { fld0: _10.fld1,fld1: RET,fld2: 20406_u16 };
_14.fld7 = !(-134709357920320954746721283234960377360_i128);
_9.fld2 = 32582_u16 << _14.fld0;
_14.fld7 = (-59395128862201569334798557652309493374_i128);
_6 = [_10.fld0,_14.fld0,_10.fld0,_14.fld0,_14.fld0,_14.fld0,_10.fld0,_10.fld0];
_15 = 2_usize;
_4 = [RET.0[_15],RET.0[_15],RET.0[_15],_2[_15],_2[_15],RET.0[_15],_2[_15],_1[_15]];
_9 = Adt49 { fld0: _10.fld1,fld1: RET,fld2: 11948_u16 };
_14.fld0 = _4[_15];
Goto(bb2)
}
bb2 = {
_14.fld7 = !113137171426553324262851480160531421396_i128;
_9.fld1 = (_2,);
_14.fld4 = !(-11236_i16);
_3 = [_2[_15],_7[_15],_4[_15],_9.fld1.0[_15],_1[_15],_2[_15],_4[_15],_6[_15]];
_11[_15] = _14.fld5[_15];
_16 = _14.fld2 as isize;
_9.fld0.0 = _11[_15] as i8;
_1[_15] = '\u{a8f88}' as u32;
match _15 {
0 => bb1,
1 => bb3,
2 => bb5,
_ => bb4
}
}
bb3 = {
_13 = (-5182482645118315339_i64);
_14.fld4 = !(-10606_i16);
_1 = [_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0,_10.fld0];
_14.fld1.0 = core::ptr::addr_of!(_9.fld0.0);
_14.fld1.1 = [false,true,false,false,false,false,true,false];
_14.fld0 = _10.fld0;
_9.fld0 = (_10.fld1.0,);
_14.fld4 = !(-2328_i16);
_11 = [true,false,true,true,true,true,false,false];
_3 = [_10.fld0,_14.fld0,_10.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_10.fld0];
_14.fld2 = _14.fld4 as f32;
_9.fld0.0 = _10.fld1.0;
_4 = _3;
_14.fld1.0 = core::ptr::addr_of!(_10.fld1.0);
_14.fld2 = (-97_isize) as f32;
_14.fld5 = _11;
_5 = [true,false,false,false,false,false,false,false];
RET = (_2,);
_9 = Adt49 { fld0: _10.fld1,fld1: RET,fld2: 20406_u16 };
_14.fld7 = !(-134709357920320954746721283234960377360_i128);
_9.fld2 = 32582_u16 << _14.fld0;
_14.fld7 = (-59395128862201569334798557652309493374_i128);
_6 = [_10.fld0,_14.fld0,_10.fld0,_14.fld0,_14.fld0,_14.fld0,_10.fld0,_10.fld0];
_15 = 2_usize;
_4 = [RET.0[_15],RET.0[_15],RET.0[_15],_2[_15],_2[_15],RET.0[_15],_2[_15],_1[_15]];
_9 = Adt49 { fld0: _10.fld1,fld1: RET,fld2: 11948_u16 };
_14.fld0 = _4[_15];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_1 = [_4[_15],_14.fld0,_3[_15],_6[_15],_14.fld0,_4[_15],_7[_15],_4[_15]];
_5 = _11;
_14.fld7 = (-45726639625225614436261449569462491631_i128) * (-160986127988995104423098999095634669909_i128);
Goto(bb6)
}
bb6 = {
_3 = [_4[_15],_2[_15],RET.0[_15],_9.fld1.0[_15],_9.fld1.0[_15],RET.0[_15],_2[_15],_9.fld1.0[_15]];
RET.0 = [_9.fld1.0[_15],_3[_15],_1[_15],_3[_15],_4[_15],_14.fld0,_9.fld1.0[_15],_2[_15]];
_14.fld0 = _11[_15] as u32;
_14.fld1.2 = _13 as f64;
_5[_15] = _4[_15] < _3[_15];
RET.0[_15] = _14.fld4 as u32;
RET.0[_15] = _4[_15];
RET.0 = [_3[_15],_10.fld0,_7[_15],_9.fld1.0[_15],_9.fld1.0[_15],_7[_15],_1[_15],_14.fld0];
_10 = Adt42 { fld0: _4[_15],fld1: _9.fld0 };
RET.0 = [_6[_15],_9.fld1.0[_15],_3[_15],_10.fld0,_1[_15],_2[_15],_7[_15],_3[_15]];
_14.fld7 = !5347547301117127716957142859394699641_i128;
_10 = Adt42 { fld0: RET.0[_15],fld1: _9.fld0 };
_19[_15] = _9.fld2 != _9.fld2;
Goto(bb7)
}
bb7 = {
RET.0[_15] = !_9.fld1.0[_15];
_5[_15] = _9.fld2 != _9.fld2;
_1[_15] = _14.fld1.2 as u32;
_14.fld1.2 = _9.fld0.0 as f64;
_4 = RET.0;
_9.fld0 = (_10.fld1.0,);
RET.0 = _7;
_17 = !_11[_15];
RET = _9.fld1;
_19[_15] = _14.fld5[_15];
_19[_15] = !_14.fld1.1[_15];
_11[_15] = _14.fld7 != _14.fld7;
_1 = [_10.fld0,_2[_15],_14.fld0,_14.fld0,_4[_15],_2[_15],_9.fld1.0[_15],_10.fld0];
_10 = Adt42 { fld0: _1[_15],fld1: _9.fld0 };
_21.0[_15] = _14.fld0;
_9 = Adt49 { fld0: _10.fld1,fld1: RET,fld2: 45702_u16 };
_13 = (-1159104367481258930_i64) >> _15;
match RET.0[_15] {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
3066194986 => bb11,
_ => bb10
}
}
bb8 = {
_3 = [_4[_15],_2[_15],RET.0[_15],_9.fld1.0[_15],_9.fld1.0[_15],RET.0[_15],_2[_15],_9.fld1.0[_15]];
RET.0 = [_9.fld1.0[_15],_3[_15],_1[_15],_3[_15],_4[_15],_14.fld0,_9.fld1.0[_15],_2[_15]];
_14.fld0 = _11[_15] as u32;
_14.fld1.2 = _13 as f64;
_5[_15] = _4[_15] < _3[_15];
RET.0[_15] = _14.fld4 as u32;
RET.0[_15] = _4[_15];
RET.0 = [_3[_15],_10.fld0,_7[_15],_9.fld1.0[_15],_9.fld1.0[_15],_7[_15],_1[_15],_14.fld0];
_10 = Adt42 { fld0: _4[_15],fld1: _9.fld0 };
RET.0 = [_6[_15],_9.fld1.0[_15],_3[_15],_10.fld0,_1[_15],_2[_15],_7[_15],_3[_15]];
_14.fld7 = !5347547301117127716957142859394699641_i128;
_10 = Adt42 { fld0: RET.0[_15],fld1: _9.fld0 };
_19[_15] = _9.fld2 != _9.fld2;
Goto(bb7)
}
bb9 = {
_14.fld7 = !113137171426553324262851480160531421396_i128;
_9.fld1 = (_2,);
_14.fld4 = !(-11236_i16);
_3 = [_2[_15],_7[_15],_4[_15],_9.fld1.0[_15],_1[_15],_2[_15],_4[_15],_6[_15]];
_11[_15] = _14.fld5[_15];
_16 = _14.fld2 as isize;
_9.fld0.0 = _11[_15] as i8;
_1[_15] = '\u{a8f88}' as u32;
match _15 {
0 => bb1,
1 => bb3,
2 => bb5,
_ => bb4
}
}
bb10 = {
Return()
}
bb11 = {
_7[_15] = _1[_15];
Goto(bb12)
}
bb12 = {
_3 = [_9.fld1.0[_15],_21.0[_15],_9.fld1.0[_15],_1[_15],RET.0[_15],_1[_15],_21.0[_15],_2[_15]];
Call(_10.fld0 = fn11(_14.fld1.2, Move(_9), _14.fld0, _14.fld1.1, _14.fld5[_15], _14.fld1.1, _14.fld2, _14.fld5[_15], _7[_15], _14.fld1.2, _14.fld7, _14.fld5[_15], _14.fld1.1[_15], RET, _5), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_21 = (_1,);
_9.fld0.0 = !_10.fld1.0;
_14.fld1.1 = _5;
_19 = _14.fld5;
_9 = Adt49 { fld0: _10.fld1,fld1: _21,fld2: 39662_u16 };
_11 = _5;
_23 = !_14.fld7;
_9.fld0 = (_10.fld1.0,);
RET = (_2,);
_14.fld2 = _16 as f32;
_14.fld2 = 205_u8 as f32;
_18 = _14.fld4 as isize;
_13 = 65488229484402365984377417163208848116_u128 as i64;
_24 = 1697043400_i32 >> _9.fld2;
_10.fld1 = _9.fld0;
_10.fld0 = !_14.fld0;
Call(_25.1 = core::intrinsics::transmute(_11), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_25 = (_23, _16, _13);
_27.fld3 = _14.fld2 as u16;
_27.fld1 = (_14.fld1.0, _14.fld5, _14.fld1.2);
_14.fld0 = _10.fld1.0 as u32;
_9.fld0.0 = -_10.fld1.0;
_14.fld3 = 280163368404707855700927097125621107403_u128 as u16;
RET.0 = _9.fld1.0;
_14.fld4 = (-24864_i16) + (-22703_i16);
_20 = '\u{3a05}' as i64;
_6 = [_10.fld0,_14.fld0,_10.fld0,_10.fld0,_10.fld0,_14.fld0,_14.fld0,_10.fld0];
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(10_usize, 3_usize, Move(_3), 15_usize, Move(_15), 16_usize, Move(_16), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(10_usize, 5_usize, Move(_5), 1_usize, Move(_1), 6_usize, Move(_6), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(10_usize, 19_usize, Move(_19), 31_usize, _31, 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: f64,mut _2: Adt49,mut _3: u32,mut _4: [bool; 8],mut _5: bool,mut _6: [bool; 8],mut _7: f32,mut _8: bool,mut _9: u32,mut _10: f64,mut _11: i128,mut _12: bool,mut _13: bool,mut _14: ([u32; 8],),mut _15: [bool; 8]) -> u32 {
mir! {
type RET = u32;
let _16: f64;
let _17: ([i8; 2], f64);
let _18: *mut [bool; 8];
let _19: isize;
let _20: ();
let _21: ();
{
_10 = _1 * _1;
_5 = !_12;
_11 = (-28977870657217337332384638773808907019_i128) - (-47440361558691199245753689232151177946_i128);
_2.fld1.0 = [_9,_9,_9,_3,_9,_9,_3,_9];
Call(_16 = core::intrinsics::transmute(_15), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2.fld1.0 = _14.0;
_2.fld1.0 = [_9,_3,_3,_9,_3,_9,_9,_3];
_2.fld2 = 39093_u16;
_13 = !_8;
_6 = [_8,_12,_5,_5,_12,_13,_13,_12];
_17.0 = [_2.fld0.0,_2.fld0.0];
_2.fld0 = ((-91_i8),);
_3 = _9;
_8 = _16 == _1;
RET = _9 >> _3;
_8 = RET > _3;
_7 = 9223372036854775807_isize as f32;
_13 = RET == RET;
_13 = !_12;
_17.1 = _10;
_8 = _10 <= _16;
_15 = [_8,_8,_5,_8,_12,_5,_13,_12];
_10 = (-616735620_i32) as f64;
_2.fld0.0 = (-315731901610771050_i64) as i8;
_6 = [_8,_12,_5,_8,_12,_12,_8,_5];
Goto(bb2)
}
bb2 = {
Call(_20 = dump_var(11_usize, 12_usize, Move(_12), 3_usize, Move(_3), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_20 = dump_var(11_usize, 9_usize, Move(_9), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]),mut _2: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]),mut _3: ([u32; 8],),mut _4: [u32; 8],mut _5: [bool; 8],mut _6: u128) -> [bool; 8] {
mir! {
type RET = [bool; 8];
let _7: f32;
let _8: Adt57;
let _9: [u8; 6];
let _10: i8;
let _11: Adt53;
let _12: f64;
let _13: f64;
let _14: f32;
let _15: Adt52;
let _16: Adt54;
let _17: (i128, isize, i64);
let _18: (usize, u32);
let _19: (u16, [bool; 8]);
let _20: f64;
let _21: isize;
let _22: u8;
let _23: *const i8;
let _24: &'static f64;
let _25: *const i8;
let _26: i64;
let _27: i128;
let _28: Adt42;
let _29: *const bool;
let _30: Adt57;
let _31: [u32; 8];
let _32: Adt42;
let _33: [isize; 6];
let _34: usize;
let _35: f64;
let _36: i8;
let _37: (usize, u32);
let _38: Adt56;
let _39: ([i8; 2], f64);
let _40: [bool; 3];
let _41: [bool; 3];
let _42: Adt54;
let _43: u16;
let _44: bool;
let _45: f64;
let _46: ();
let _47: ();
{
_2.1 = _1.1;
_6 = 283661967967164474639397242907605505903_u128 ^ 239745490913098071670508614575110254378_u128;
_1.4 = core::ptr::addr_of_mut!(_1.0);
_4 = _3.0;
_2.0 = [true,true,false,true,false,false,false,true];
RET = _2.3;
_2.0 = _5;
_2.4 = core::ptr::addr_of_mut!(_2.3);
RET = _1.3;
_7 = 188_u8 as f32;
_7 = _2.2 as f32;
_1.1 = !_2.1;
_3 = (_4,);
_1.4 = core::ptr::addr_of_mut!(_1.0);
_1.4 = _2.4;
_9 = [113_u8,33_u8,9_u8,155_u8,133_u8,36_u8];
_7 = (-72887681498604304858015463578653278635_i128) as f32;
_2.4 = _1.4;
_1 = _2;
_2.3 = RET;
_2 = _1;
_1.0 = [false,false,false,true,false,false,false,false];
Call(_12 = fn13(_1.4, _2, _1.0, _2.1, _3, _3.0, _2.3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2.0 = [true,false,true,false,true,true,true,true];
_3.0 = [496602710_u32,557618043_u32,2913540094_u32,898164396_u32,1796975030_u32,2207253792_u32,2386414713_u32,2927302658_u32];
_12 = _7 as f64;
_1.1 = _2.1 ^ _2.1;
_9 = [91_u8,93_u8,206_u8,149_u8,66_u8,203_u8];
_10 = (-123_i8) >> _1.1;
_6 = 95187408532356495900068223437123942239_u128 ^ 290664454972570002464221653597476940137_u128;
_13 = -_12;
_11 = Adt53::Variant0 { fld0: 7185_u16 };
_1.4 = _2.4;
_1.3 = _1.0;
_1.4 = _2.4;
_2.3 = [false,true,true,false,true,false,true,true];
_1.3 = [false,false,true,false,true,false,false,true];
_1 = (_2.3, _2.1, _2.2, RET, _2.4);
_2 = _1;
_11 = Adt53::Variant0 { fld0: 45295_u16 };
_3 = (_4,);
_2.0 = _1.3;
_2.1 = !_1.1;
_4 = [902480585_u32,2506974166_u32,1118518285_u32,2463262910_u32,2601648618_u32,2495751409_u32,540574790_u32,3133454890_u32];
Goto(bb2)
}
bb2 = {
_2.4 = _1.4;
_15.fld2 = !9552122050583422599_u64;
_2.1 = 1068697616_u32 as usize;
_5 = [true,true,true,true,true,false,false,false];
_1.1 = _2.1 & _2.1;
_15.fld4 = !151_u8;
_15.fld5 = [false,false,false];
_16.fld1.0 = core::ptr::addr_of!(_10);
_15.fld3 = -_10;
_13 = _12 * _12;
_16.fld1.1 = _5;
_16.fld2 = _15.fld4 as f32;
place!(Field::<u16>(Variant(_11, 0), 0)) = 55100_u16;
_16.fld5 = [false,false,true,false,true,true,false,false];
_13 = _15.fld2 as f64;
_2.3 = [true,true,false,false,true,false,false,false];
_16.fld7 = 132289810835552512982004531443319093855_i128;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_2.4 = _1.4;
_2.4 = _1.4;
_3.0 = [2034821740_u32,913420592_u32,102665326_u32,3695661483_u32,3618104750_u32,2776627298_u32,539714314_u32,3622310814_u32];
_15.fld2 = 7972530640855010924_u64 | 9986035858631206909_u64;
_16.fld2 = _7;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
match _16.fld7 {
0 => bb3,
1 => bb4,
132289810835552512982004531443319093855 => bb6,
_ => bb5
}
}
bb3 = {
_2.0 = [true,false,true,false,true,true,true,true];
_3.0 = [496602710_u32,557618043_u32,2913540094_u32,898164396_u32,1796975030_u32,2207253792_u32,2386414713_u32,2927302658_u32];
_12 = _7 as f64;
_1.1 = _2.1 ^ _2.1;
_9 = [91_u8,93_u8,206_u8,149_u8,66_u8,203_u8];
_10 = (-123_i8) >> _1.1;
_6 = 95187408532356495900068223437123942239_u128 ^ 290664454972570002464221653597476940137_u128;
_13 = -_12;
_11 = Adt53::Variant0 { fld0: 7185_u16 };
_1.4 = _2.4;
_1.3 = _1.0;
_1.4 = _2.4;
_2.3 = [false,true,true,false,true,false,true,true];
_1.3 = [false,false,true,false,true,false,false,true];
_1 = (_2.3, _2.1, _2.2, RET, _2.4);
_2 = _1;
_11 = Adt53::Variant0 { fld0: 45295_u16 };
_3 = (_4,);
_2.0 = _1.3;
_2.1 = !_1.1;
_4 = [902480585_u32,2506974166_u32,1118518285_u32,2463262910_u32,2601648618_u32,2495751409_u32,540574790_u32,3133454890_u32];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_16.fld3 = !Field::<u16>(Variant(_11, 0), 0);
_3.0 = [15171642_u32,3313736263_u32,3302090396_u32,3003645862_u32,625907070_u32,508155106_u32,2291276741_u32,571568102_u32];
_15.fld5 = [false,false,true];
_17 = (_16.fld7, _1.2, (-5067630657857917332_i64));
_21 = _1.1 as isize;
_16.fld1.1 = [false,false,false,true,true,true,true,false];
_16.fld3 = !Field::<u16>(Variant(_11, 0), 0);
_21 = _2.2;
_2.4 = _1.4;
_18 = (_1.1, 3339565512_u32);
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_19.1 = [false,true,true,false,false,true,false,true];
_16.fld0 = _18.1 / _18.1;
_17.1 = !_1.2;
_18 = (_1.1, _16.fld0);
_16.fld1.1 = [false,false,true,false,false,true,false,false];
_19.0 = _15.fld4 as u16;
_14 = _7;
_18.0 = _16.fld2 as usize;
_14 = 73853505_i32 as f32;
_16.fld1.0 = core::ptr::addr_of!(_15.fld3);
_17.0 = -_16.fld7;
_22 = _15.fld4;
Goto(bb7)
}
bb7 = {
_16.fld3 = _13 as u16;
_15.fld1 = Adt48::Variant1 { fld0: false,fld1: _9,fld2: _18,fld3: _3.0 };
_21 = -_2.2;
_18.0 = _2.1 & _2.1;
place!(Field::<[u32; 8]>(Variant(_15.fld1, 1), 3)) = _3.0;
_24 = &_20;
_17.0 = _16.fld7;
_24 = &_20;
place!(Field::<bool>(Variant(_15.fld1, 1), 0)) = true;
_22 = _15.fld4 | _15.fld4;
_11 = Adt53::Variant0 { fld0: _19.0 };
_17 = (_16.fld7, _21, 2470877273558777956_i64);
_28.fld1 = (_15.fld3,);
_2.0 = [Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0)];
_17.0 = !_16.fld7;
_26 = _17.2 >> _16.fld0;
place!(Field::<[u8; 6]>(Variant(_15.fld1, 1), 1)) = _9;
_2.2 = _15.fld3 as isize;
place!(Field::<(usize, u32)>(Variant(_15.fld1, 1), 2)).0 = _18.0;
place!(Field::<bool>(Variant(_15.fld1, 1), 0)) = false;
_5 = [Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0)];
_17 = (_16.fld7, _21, _26);
_17.1 = _1.2;
_16.fld4 = (-26666_i16);
_1 = (_16.fld5, Field::<(usize, u32)>(Variant(_15.fld1, 1), 2).0, _2.2, _19.1, _2.4);
_17.2 = _16.fld7 as i64;
Goto(bb8)
}
bb8 = {
_26 = _10 as i64;
_32 = Adt42 { fld0: _16.fld0,fld1: _28.fld1 };
_17.1 = !_1.2;
_28.fld0 = _16.fld0;
_15.fld2 = 7839918819024707230_u64;
_17.2 = !_26;
_15.fld3 = (-1917635260_i32) as i8;
_6 = !258606325619060535386062962977506667560_u128;
_23 = core::ptr::addr_of!(_28.fld1.0);
_2.0 = _2.3;
_14 = _16.fld2;
_25 = core::ptr::addr_of!(_15.fld3);
_35 = -_12;
_35 = _13 - _13;
_32.fld0 = _16.fld3 as u32;
_16.fld0 = _28.fld0;
_26 = _17.2;
_2 = _1;
_28.fld0 = _16.fld0 & _18.1;
_15.fld5 = [Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0)];
Goto(bb9)
}
bb9 = {
_15.fld5 = [Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0)];
_34 = _7 as usize;
_26 = _17.2 - _17.2;
_3 = (Field::<[u32; 8]>(Variant(_15.fld1, 1), 3),);
_16.fld3 = Field::<u16>(Variant(_11, 0), 0);
_32 = Adt42 { fld0: _28.fld0,fld1: _28.fld1 };
SetDiscriminant(_11, 3);
_27 = !_16.fld7;
place!(Field::<(i16, (i128, isize, i64))>(Variant(_11, 3), 2)).0 = -_16.fld4;
match _17.0 {
0 => bb2,
1 => bb10,
132289810835552512982004531443319093855 => bb12,
_ => bb11
}
}
bb10 = {
_2.4 = _1.4;
_15.fld2 = !9552122050583422599_u64;
_2.1 = 1068697616_u32 as usize;
_5 = [true,true,true,true,true,false,false,false];
_1.1 = _2.1 & _2.1;
_15.fld4 = !151_u8;
_15.fld5 = [false,false,false];
_16.fld1.0 = core::ptr::addr_of!(_10);
_15.fld3 = -_10;
_13 = _12 * _12;
_16.fld1.1 = _5;
_16.fld2 = _15.fld4 as f32;
place!(Field::<u16>(Variant(_11, 0), 0)) = 55100_u16;
_16.fld5 = [false,false,true,false,true,true,false,false];
_13 = _15.fld2 as f64;
_2.3 = [true,true,false,false,true,false,false,false];
_16.fld7 = 132289810835552512982004531443319093855_i128;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_2.4 = _1.4;
_2.4 = _1.4;
_3.0 = [2034821740_u32,913420592_u32,102665326_u32,3695661483_u32,3618104750_u32,2776627298_u32,539714314_u32,3622310814_u32];
_15.fld2 = 7972530640855010924_u64 | 9986035858631206909_u64;
_16.fld2 = _7;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
match _16.fld7 {
0 => bb3,
1 => bb4,
132289810835552512982004531443319093855 => bb6,
_ => bb5
}
}
bb11 = {
_2.0 = [true,false,true,false,true,true,true,true];
_3.0 = [496602710_u32,557618043_u32,2913540094_u32,898164396_u32,1796975030_u32,2207253792_u32,2386414713_u32,2927302658_u32];
_12 = _7 as f64;
_1.1 = _2.1 ^ _2.1;
_9 = [91_u8,93_u8,206_u8,149_u8,66_u8,203_u8];
_10 = (-123_i8) >> _1.1;
_6 = 95187408532356495900068223437123942239_u128 ^ 290664454972570002464221653597476940137_u128;
_13 = -_12;
_11 = Adt53::Variant0 { fld0: 7185_u16 };
_1.4 = _2.4;
_1.3 = _1.0;
_1.4 = _2.4;
_2.3 = [false,true,true,false,true,false,true,true];
_1.3 = [false,false,true,false,true,false,false,true];
_1 = (_2.3, _2.1, _2.2, RET, _2.4);
_2 = _1;
_11 = Adt53::Variant0 { fld0: 45295_u16 };
_3 = (_4,);
_2.0 = _1.3;
_2.1 = !_1.1;
_4 = [902480585_u32,2506974166_u32,1118518285_u32,2463262910_u32,2601648618_u32,2495751409_u32,540574790_u32,3133454890_u32];
Goto(bb2)
}
bb12 = {
place!(Field::<Adt52>(Variant(_11, 3), 0)).fld1 = Adt48::Variant1 { fld0: Field::<bool>(Variant(_15.fld1, 1), 0),fld1: Field::<[u8; 6]>(Variant(_15.fld1, 1), 1),fld2: Field::<(usize, u32)>(Variant(_15.fld1, 1), 2),fld3: _3.0 };
_6 = !78186869247531607779177919194792757305_u128;
place!(Field::<bool>(Variant(place!(Field::<Adt52>(Variant(_11, 3), 0)).fld1, 1), 0)) = _28.fld0 != _32.fld0;
_39.0 = [_32.fld1.0,(*_23)];
match _15.fld2 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
7839918819024707230 => bb18,
_ => bb17
}
}
bb13 = {
Return()
}
bb14 = {
_2.4 = _1.4;
_15.fld2 = !9552122050583422599_u64;
_2.1 = 1068697616_u32 as usize;
_5 = [true,true,true,true,true,false,false,false];
_1.1 = _2.1 & _2.1;
_15.fld4 = !151_u8;
_15.fld5 = [false,false,false];
_16.fld1.0 = core::ptr::addr_of!(_10);
_15.fld3 = -_10;
_13 = _12 * _12;
_16.fld1.1 = _5;
_16.fld2 = _15.fld4 as f32;
place!(Field::<u16>(Variant(_11, 0), 0)) = 55100_u16;
_16.fld5 = [false,false,true,false,true,true,false,false];
_13 = _15.fld2 as f64;
_2.3 = [true,true,false,false,true,false,false,false];
_16.fld7 = 132289810835552512982004531443319093855_i128;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_2.4 = _1.4;
_2.4 = _1.4;
_3.0 = [2034821740_u32,913420592_u32,102665326_u32,3695661483_u32,3618104750_u32,2776627298_u32,539714314_u32,3622310814_u32];
_15.fld2 = 7972530640855010924_u64 | 9986035858631206909_u64;
_16.fld2 = _7;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
match _16.fld7 {
0 => bb3,
1 => bb4,
132289810835552512982004531443319093855 => bb6,
_ => bb5
}
}
bb15 = {
_2.4 = _1.4;
_15.fld2 = !9552122050583422599_u64;
_2.1 = 1068697616_u32 as usize;
_5 = [true,true,true,true,true,false,false,false];
_1.1 = _2.1 & _2.1;
_15.fld4 = !151_u8;
_15.fld5 = [false,false,false];
_16.fld1.0 = core::ptr::addr_of!(_10);
_15.fld3 = -_10;
_13 = _12 * _12;
_16.fld1.1 = _5;
_16.fld2 = _15.fld4 as f32;
place!(Field::<u16>(Variant(_11, 0), 0)) = 55100_u16;
_16.fld5 = [false,false,true,false,true,true,false,false];
_13 = _15.fld2 as f64;
_2.3 = [true,true,false,false,true,false,false,false];
_16.fld7 = 132289810835552512982004531443319093855_i128;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_2.4 = _1.4;
_2.4 = _1.4;
_3.0 = [2034821740_u32,913420592_u32,102665326_u32,3695661483_u32,3618104750_u32,2776627298_u32,539714314_u32,3622310814_u32];
_15.fld2 = 7972530640855010924_u64 | 9986035858631206909_u64;
_16.fld2 = _7;
_9 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
match _16.fld7 {
0 => bb3,
1 => bb4,
132289810835552512982004531443319093855 => bb6,
_ => bb5
}
}
bb16 = {
_26 = _10 as i64;
_32 = Adt42 { fld0: _16.fld0,fld1: _28.fld1 };
_17.1 = !_1.2;
_28.fld0 = _16.fld0;
_15.fld2 = 7839918819024707230_u64;
_17.2 = !_26;
_15.fld3 = (-1917635260_i32) as i8;
_6 = !258606325619060535386062962977506667560_u128;
_23 = core::ptr::addr_of!(_28.fld1.0);
_2.0 = _2.3;
_14 = _16.fld2;
_25 = core::ptr::addr_of!(_15.fld3);
_35 = -_12;
_35 = _13 - _13;
_32.fld0 = _16.fld3 as u32;
_16.fld0 = _28.fld0;
_26 = _17.2;
_2 = _1;
_28.fld0 = _16.fld0 & _18.1;
_15.fld5 = [Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0)];
Goto(bb9)
}
bb17 = {
Return()
}
bb18 = {
_42.fld7 = _17.0;
_14 = -_16.fld2;
_21 = _17.1 + _17.1;
_22 = !_15.fld4;
_15.fld2 = _22 as u64;
place!(Field::<bool>(Variant(_15.fld1, 1), 0)) = Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0);
_5 = _16.fld1.1;
_5 = [Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(Field::<Adt52>(Variant(_11, 3), 0).fld1, 1), 0),Field::<bool>(Variant(_15.fld1, 1), 0)];
_16.fld2 = -_7;
_21 = _35 as isize;
_1.1 = _26 as usize;
_19 = (_16.fld3, _16.fld1.1);
_17.0 = _42.fld7;
_42.fld1.0 = _16.fld1.0;
_20 = _35;
place!(Field::<(i16, (i128, isize, i64))>(Variant(_11, 3), 2)).1.1 = -_17.1;
_33 = [_2.2,_2.2,_1.2,_17.1,Field::<(i16, (i128, isize, i64))>(Variant(_11, 3), 2).1.1,_1.2];
place!(Field::<*const i128>(Variant(_11, 3), 3)) = core::ptr::addr_of!(_17.0);
_28.fld1 = _32.fld1;
_10 = _15.fld3 & (*_25);
Goto(bb19)
}
bb19 = {
Call(_46 = dump_var(12_usize, 34_usize, Move(_34), 10_usize, Move(_10), 22_usize, Move(_22), 17_usize, Move(_17)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_46 = dump_var(12_usize, 4_usize, Move(_4), 33_usize, Move(_33), 6_usize, Move(_6), 47_usize, _47), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: *mut [bool; 8],mut _2: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]),mut _3: [bool; 8],mut _4: usize,mut _5: ([u32; 8],),mut _6: [u32; 8],mut _7: [bool; 8]) -> f64 {
mir! {
type RET = f64;
let _8: f32;
let _9: char;
let _10: usize;
let _11: char;
let _12: [bool; 8];
let _13: [u16; 4];
let _14: Adt53;
let _15: u64;
let _16: [u16; 4];
let _17: i32;
let _18: Adt56;
let _19: Adt45;
let _20: f64;
let _21: Adt49;
let _22: u128;
let _23: *const i8;
let _24: isize;
let _25: f64;
let _26: *mut [bool; 8];
let _27: (*const i8, [bool; 8], f64);
let _28: (u16, [bool; 8]);
let _29: (i8,);
let _30: ();
let _31: ();
{
_5.0 = [1852250425_u32,98992463_u32,4162698741_u32,1790668200_u32,3749868737_u32,2571310046_u32,3569493334_u32,4093236299_u32];
_4 = 54968_u16 as usize;
_1 = core::ptr::addr_of_mut!(_2.0);
_2.3 = [true,false,false,true,false,true,false,true];
_2.0 = _3;
_4 = _2.1 ^ _2.1;
RET = _2.2 as f64;
_2.1 = _4 | _4;
_2.3 = [false,true,true,true,true,false,true,false];
_5.0 = _6;
RET = 57516_u16 as f64;
_4 = !_2.1;
_2 = (_3, _4, 9223372036854775807_isize, _7, _1);
_9 = '\u{8ae98}';
_7 = [false,true,true,true,true,true,false,false];
_5.0 = [3352703150_u32,3136572380_u32,1868836753_u32,4225766769_u32,417240777_u32,149305744_u32,548807904_u32,3567236304_u32];
RET = 132547944_u32 as f64;
_5.0 = [1638273825_u32,2113889451_u32,2966051238_u32,3107365115_u32,2469568778_u32,2446355990_u32,2659891066_u32,4126535791_u32];
_11 = _9;
_5 = (_6,);
_2.0 = [true,false,false,true,false,false,false,true];
_2.0 = [false,true,false,true,false,false,false,false];
_11 = _9;
_2.4 = core::ptr::addr_of_mut!(_7);
_9 = _11;
_8 = _4 as f32;
match _2.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
9223372036854775807 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_8 = (-5251446_i32) as f32;
_5.0 = [372995672_u32,85002133_u32,2184923378_u32,1819774970_u32,3567949836_u32,261446413_u32,2480680315_u32,511861633_u32];
_13 = [45396_u16,47565_u16,21285_u16,25633_u16];
_7 = _2.0;
_13 = [24159_u16,25933_u16,54086_u16,30293_u16];
_2.3 = [true,false,false,false,true,true,false,true];
_9 = _11;
_2.3 = [true,true,false,true,false,false,false,false];
_2.1 = _4 | _4;
_4 = !_2.1;
_5.0 = [3257860038_u32,3256011624_u32,957143101_u32,1393728869_u32,3618695241_u32,1942615827_u32,590834790_u32,1972273248_u32];
_4 = _9 as usize;
_2.3 = [true,true,false,false,true,true,true,false];
_2.2 = !(-60_isize);
_13 = [11650_u16,15774_u16,29499_u16,45282_u16];
_2.0 = [true,false,false,false,true,false,true,false];
Call(_5 = fn14(_1, _3, _7, _2.4, _3, _2.1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6 = _5.0;
_11 = _9;
_15 = 8980077275278596812_u64 | 5909967532977737479_u64;
_2.3 = [false,false,true,true,true,false,false,false];
_3 = (*_1);
_3 = [false,false,false,true,true,false,true,true];
_3 = [false,true,false,true,false,false,false,true];
_11 = _9;
_16 = [110_u16,2568_u16,42409_u16,43776_u16];
RET = 4086_u16 as f64;
_1 = core::ptr::addr_of_mut!((*_1));
_10 = _2.1 | _2.1;
Call(_14 = fn16((*_1), _2.0, _2, _15, _5, _7, _5.0, _10, _10), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
RET = 149318965_i32 as f64;
_8 = 140_u8 as f32;
RET = _15 as f64;
_5.0 = [1206804684_u32,3830132935_u32,1626951169_u32,1673238348_u32,165087546_u32,1371292209_u32,1975563309_u32,1050240826_u32];
_7 = [true,true,true,false,true,true,true,true];
_11 = _9;
_3 = [true,false,false,false,false,false,false,true];
_6 = [1675707801_u32,2174749676_u32,2800954279_u32,3210734968_u32,3460796128_u32,399931046_u32,2791591678_u32,378185835_u32];
Call(_4 = core::intrinsics::bswap(_10), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5 = (_6,);
_12 = [true,false,false,false,true,true,true,true];
_2 = (_12, _10, 9223372036854775807_isize, _7, _1);
place!(Field::<u16>(Variant(_14, 0), 0)) = 10033_i16 as u16;
SetDiscriminant(_14, 0);
_7 = (*_1);
_2.4 = core::ptr::addr_of_mut!(_7);
_14 = Adt53::Variant0 { fld0: 38135_u16 };
_7 = [false,false,false,false,false,true,false,false];
_14 = Adt53::Variant0 { fld0: 34997_u16 };
RET = 239149739332208503623200513360899638786_u128 as f64;
_2.4 = core::ptr::addr_of_mut!((*_1));
_2.2 = 10397_u16 as isize;
_2.4 = _1;
_21.fld1 = (_5.0,);
_13 = _16;
_5 = (_6,);
_21.fld0 = (90_i8,);
RET = _2.2 as f64;
_21.fld0 = ((-68_i8),);
_12 = [false,false,false,true,true,false,true,false];
_1 = core::ptr::addr_of_mut!((*_1));
_21.fld1.0 = [2784887629_u32,3783006554_u32,2105454060_u32,784271091_u32,3840174058_u32,4098450300_u32,1993858167_u32,2123750621_u32];
RET = (-81954309487530997341412801181695134096_i128) as f64;
match _21.fld0.0 {
0 => bb11,
340282366920938463463374607431768211388 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_21.fld2 = 25294_u16;
place!(Field::<u16>(Variant(_14, 0), 0)) = _21.fld2;
_23 = core::ptr::addr_of!(_21.fld0.0);
_21.fld0.0 = false as i8;
_4 = !_10;
place!(Field::<u16>(Variant(_14, 0), 0)) = !_21.fld2;
_9 = _11;
_3 = [true,false,false,true,false,false,false,true];
Goto(bb14)
}
bb14 = {
_7 = [true,true,false,true,true,false,false,false];
_3 = [true,false,true,false,true,false,true,false];
_11 = _9;
_20 = RET - RET;
SetDiscriminant(_14, 2);
_21.fld1.0 = [4076105723_u32,1624607420_u32,3815900072_u32,2248033227_u32,426688237_u32,3781714538_u32,2977445436_u32,4363172_u32];
_9 = _11;
_23 = core::ptr::addr_of!((*_23));
_17 = !1403358318_i32;
_21.fld0 = ((-50_i8),);
_2.3 = _7;
_21.fld0.0 = (-52_i8);
place!(Field::<(i16, (i128, isize, i64))>(Variant(_14, 2), 0)).1 = (80351598098354511188109614452724559245_i128, _2.2, 4553807010699116177_i64);
place!(Field::<(i16, (i128, isize, i64))>(Variant(_14, 2), 0)).0 = 9034_i16;
_7 = [false,true,false,false,false,true,false,false];
_2.4 = core::ptr::addr_of_mut!(_2.3);
_10 = _4;
_12 = [false,true,true,true,true,true,false,false];
_17 = _15 as i32;
SetDiscriminant(_14, 2);
_22 = _17 as u128;
place!(Field::<(i16, (i128, isize, i64))>(Variant(_14, 2), 0)).1 = (108156692643565417416953023853872008238_i128, _2.2, (-604347816132068350_i64));
_27.0 = _23;
_2.2 = !Field::<(i16, (i128, isize, i64))>(Variant(_14, 2), 0).1.1;
_13 = _16;
_21.fld0.0 = _17 as i8;
_8 = _17 as f32;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(13_usize, 22_usize, Move(_22), 10_usize, Move(_10), 16_usize, Move(_16), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(13_usize, 12_usize, Move(_12), 17_usize, Move(_17), 13_usize, Move(_13), 31_usize, _31), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: *mut [bool; 8],mut _2: [bool; 8],mut _3: [bool; 8],mut _4: *mut [bool; 8],mut _5: [bool; 8],mut _6: usize) -> ([u32; 8],) {
mir! {
type RET = ([u32; 8],);
let _7: [bool; 8];
let _8: [i8; 2];
let _9: &'static f64;
let _10: Adt52;
let _11: u16;
let _12: *const *mut u64;
let _13: Adt49;
let _14: Adt42;
let _15: i128;
let _16: i64;
let _17: [i64; 4];
let _18: [u32; 8];
let _19: isize;
let _20: (usize, u32);
let _21: u16;
let _22: usize;
let _23: (i128, isize, i64);
let _24: [u8; 6];
let _25: ();
let _26: ();
{
_6 = 4_usize >> 214473357308759914979424300846904337866_u128;
_6 = 1964690341055584900_usize ^ 7_usize;
_6 = 6057610144215531350_usize;
_1 = core::ptr::addr_of_mut!(_2);
_4 = core::ptr::addr_of_mut!(_7);
RET.0 = [1380308086_u32,81420156_u32,968461053_u32,4181955511_u32,2387299254_u32,2362932192_u32,2776454090_u32,301862836_u32];
RET.0 = [2635025330_u32,1242036011_u32,2531073453_u32,1239622978_u32,711071118_u32,1801034026_u32,1708718253_u32,1442163778_u32];
_3 = (*_1);
RET.0 = [2385136288_u32,141153255_u32,1380491104_u32,435875910_u32,3676509608_u32,664896431_u32,3407670298_u32,3702201886_u32];
_10.fld3 = true as i8;
Goto(bb1)
}
bb1 = {
_7 = _5;
_10.fld5 = [false,true,false];
Goto(bb2)
}
bb2 = {
RET.0 = [693969460_u32,2557524320_u32,1609490960_u32,2371585676_u32,125383666_u32,1030727917_u32,2753218673_u32,1815506203_u32];
_10.fld3 = !41_i8;
_10.fld2 = 7273526069988530678_i64 as u64;
Goto(bb3)
}
bb3 = {
RET.0 = [1061703556_u32,2448994436_u32,312402812_u32,2570958701_u32,541590522_u32,1435243573_u32,2536986279_u32,3569956225_u32];
RET.0 = [555876207_u32,2149688775_u32,1012790682_u32,3661466380_u32,3293059905_u32,767721669_u32,1217278820_u32,1068236284_u32];
_10.fld4 = '\u{ae0a2}' as u8;
_8 = [_10.fld3,_10.fld3];
_13.fld2 = 35874_u16;
_6 = !10629934577896166269_usize;
_11 = _13.fld2 >> _10.fld2;
_11 = (-9223372036854775808_isize) as u16;
_10.fld4 = 73_u8 ^ 68_u8;
_10.fld2 = 5598553628244954876_u64;
_11 = _13.fld2;
_14.fld1.0 = '\u{4d86b}' as i8;
_1 = core::ptr::addr_of_mut!(_7);
_4 = _1;
_2 = _3;
Goto(bb4)
}
bb4 = {
_13.fld1.0 = [209146795_u32,3354657360_u32,3049153009_u32,3428766214_u32,3159201237_u32,1178586844_u32,4098690379_u32,2121823603_u32];
RET = (_13.fld1.0,);
_17 = [1060397317112506423_i64,251402930355716973_i64,(-2420591503740475445_i64),(-8493730367307498984_i64)];
_13.fld0 = (_14.fld1.0,);
_11 = _13.fld2 - _13.fld2;
_6 = 0_usize - 1_usize;
_6 = 5078_i16 as usize;
_14.fld0 = !2306046127_u32;
_7 = _5;
_13.fld1 = (RET.0,);
match _10.fld2 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
5598553628244954876 => bb11,
_ => bb10
}
}
bb5 = {
RET.0 = [1061703556_u32,2448994436_u32,312402812_u32,2570958701_u32,541590522_u32,1435243573_u32,2536986279_u32,3569956225_u32];
RET.0 = [555876207_u32,2149688775_u32,1012790682_u32,3661466380_u32,3293059905_u32,767721669_u32,1217278820_u32,1068236284_u32];
_10.fld4 = '\u{ae0a2}' as u8;
_8 = [_10.fld3,_10.fld3];
_13.fld2 = 35874_u16;
_6 = !10629934577896166269_usize;
_11 = _13.fld2 >> _10.fld2;
_11 = (-9223372036854775808_isize) as u16;
_10.fld4 = 73_u8 ^ 68_u8;
_10.fld2 = 5598553628244954876_u64;
_11 = _13.fld2;
_14.fld1.0 = '\u{4d86b}' as i8;
_1 = core::ptr::addr_of_mut!(_7);
_4 = _1;
_2 = _3;
Goto(bb4)
}
bb6 = {
RET.0 = [693969460_u32,2557524320_u32,1609490960_u32,2371585676_u32,125383666_u32,1030727917_u32,2753218673_u32,1815506203_u32];
_10.fld3 = !41_i8;
_10.fld2 = 7273526069988530678_i64 as u64;
Goto(bb3)
}
bb7 = {
_7 = _5;
_10.fld5 = [false,true,false];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_15 = 127760104036800804008960380939497116122_i128 ^ 112827902832702215075228091251233681145_i128;
_7 = _2;
_11 = (-118601565_i32) as u16;
_10.fld2 = 14552668032847417685_u64;
_14 = Adt42 { fld0: 1909246434_u32,fld1: _13.fld0 };
_16 = -(-7290285106580670267_i64);
_16 = _13.fld2 as i64;
_2 = [true,true,false,false,false,false,true,false];
Call(RET = fn15(_13.fld0.0, _14.fld0, _7, _13.fld1, _13.fld1, _4, _5), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_15 = (-139661747607635973709149095844499332843_i128);
_3 = [true,true,true,false,true,false,false,false];
_10.fld2 = !1811247517191285983_u64;
_10.fld3 = _14.fld1.0 >> _14.fld0;
RET = (_13.fld1.0,);
_13.fld0 = (_14.fld1.0,);
_10.fld5 = [true,true,true];
_10.fld2 = 4273916806388597731_u64 + 17785333346147478756_u64;
_6 = !0_usize;
_14.fld1.0 = _10.fld3 - _13.fld0.0;
_7 = [true,true,true,true,false,false,false,true];
_8 = [_14.fld1.0,_14.fld1.0];
_2 = [false,true,false,true,false,false,false,false];
_1 = _4;
_3 = [true,false,true,true,true,false,false,true];
_3 = [false,false,true,false,false,true,true,false];
Goto(bb13)
}
bb13 = {
_10.fld3 = -_14.fld1.0;
_4 = core::ptr::addr_of_mut!(_7);
_15 = !156915679058594914015572620142174139351_i128;
_18 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_14 = Adt42 { fld0: 3242687478_u32,fld1: _13.fld0 };
_3 = (*_4);
RET = _13.fld1;
_18 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_15 = 160335018367049670984255296232806251189_i128 ^ 159580292431820052807205114894651171885_i128;
_10.fld5 = [true,false,true];
_5 = (*_4);
_14.fld1.0 = !_13.fld0.0;
_11 = _13.fld2;
_16 = _10.fld4 as i64;
_3 = [false,true,true,true,true,true,true,false];
_13.fld0 = _14.fld1;
_13.fld1.0 = RET.0;
_13.fld2 = _11;
_19 = -54_isize;
_18 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_17 = [_16,_16,_16,_16];
_13.fld1 = RET;
_20.0 = _6 | _6;
_18 = _13.fld1.0;
match _13.fld2 {
0 => bb6,
1 => bb7,
2 => bb14,
3 => bb15,
4 => bb16,
35874 => bb18,
_ => bb17
}
}
bb14 = {
_15 = (-139661747607635973709149095844499332843_i128);
_3 = [true,true,true,false,true,false,false,false];
_10.fld2 = !1811247517191285983_u64;
_10.fld3 = _14.fld1.0 >> _14.fld0;
RET = (_13.fld1.0,);
_13.fld0 = (_14.fld1.0,);
_10.fld5 = [true,true,true];
_10.fld2 = 4273916806388597731_u64 + 17785333346147478756_u64;
_6 = !0_usize;
_14.fld1.0 = _10.fld3 - _13.fld0.0;
_7 = [true,true,true,true,false,false,false,true];
_8 = [_14.fld1.0,_14.fld1.0];
_2 = [false,true,false,true,false,false,false,false];
_1 = _4;
_3 = [true,false,true,true,true,false,false,true];
_3 = [false,false,true,false,false,true,true,false];
Goto(bb13)
}
bb15 = {
RET.0 = [693969460_u32,2557524320_u32,1609490960_u32,2371585676_u32,125383666_u32,1030727917_u32,2753218673_u32,1815506203_u32];
_10.fld3 = !41_i8;
_10.fld2 = 7273526069988530678_i64 as u64;
Goto(bb3)
}
bb16 = {
Return()
}
bb17 = {
RET.0 = [1061703556_u32,2448994436_u32,312402812_u32,2570958701_u32,541590522_u32,1435243573_u32,2536986279_u32,3569956225_u32];
RET.0 = [555876207_u32,2149688775_u32,1012790682_u32,3661466380_u32,3293059905_u32,767721669_u32,1217278820_u32,1068236284_u32];
_10.fld4 = '\u{ae0a2}' as u8;
_8 = [_10.fld3,_10.fld3];
_13.fld2 = 35874_u16;
_6 = !10629934577896166269_usize;
_11 = _13.fld2 >> _10.fld2;
_11 = (-9223372036854775808_isize) as u16;
_10.fld4 = 73_u8 ^ 68_u8;
_10.fld2 = 5598553628244954876_u64;
_11 = _13.fld2;
_14.fld1.0 = '\u{4d86b}' as i8;
_1 = core::ptr::addr_of_mut!(_7);
_4 = _1;
_2 = _3;
Goto(bb4)
}
bb18 = {
_23.2 = _16;
_13.fld1.0 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
Goto(bb19)
}
bb19 = {
Call(_25 = dump_var(14_usize, 11_usize, Move(_11), 7_usize, Move(_7), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_25 = dump_var(14_usize, 6_usize, Move(_6), 3_usize, Move(_3), 26_usize, _26, 26_usize, _26), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: i8,mut _2: u32,mut _3: [bool; 8],mut _4: ([u32; 8],),mut _5: ([u32; 8],),mut _6: *mut [bool; 8],mut _7: [bool; 8]) -> ([u32; 8],) {
mir! {
type RET = ([u32; 8],);
let _8: i128;
let _9: *const i8;
let _10: f32;
let _11: Adt45;
let _12: Adt42;
let _13: u64;
let _14: [u32; 8];
let _15: isize;
let _16: Adt53;
let _17: bool;
let _18: [u8; 6];
let _19: Adt49;
let _20: u32;
let _21: [i64; 4];
let _22: isize;
let _23: Adt46;
let _24: usize;
let _25: Adt49;
let _26: bool;
let _27: &'static f64;
let _28: [i8; 2];
let _29: i8;
let _30: u16;
let _31: bool;
let _32: u32;
let _33: u32;
let _34: [u8; 6];
let _35: [bool; 8];
let _36: f64;
let _37: isize;
let _38: isize;
let _39: [bool; 8];
let _40: [i8; 2];
let _41: (i128, isize, i64);
let _42: char;
let _43: bool;
let _44: ([i8; 2], f64);
let _45: ();
let _46: ();
{
RET.0 = _5.0;
_10 = _1 as f32;
_1 = (-51_i8) << _2;
RET.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_8 = -(-163062580816526997784735170257756934188_i128);
_12.fld1.0 = _1;
_5 = (_4.0,);
_1 = _12.fld1.0;
_5.0 = [_2,_2,_2,_2,_2,_2,_2,_2];
_3 = [false,true,true,false,true,false,false,true];
_13 = 3027042027233974753_u64 & 7720659969186077702_u64;
_14 = [_2,_2,_2,_2,_2,_2,_2,_2];
_12.fld1 = (_1,);
_12.fld0 = 185865905754333529451010913610599468351_u128 as u32;
_4.0 = [_2,_2,_12.fld0,_2,_2,_2,_2,_12.fld0];
_10 = _1 as f32;
_12.fld0 = !_2;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
1909246434 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_17 = _13 == _13;
_17 = false;
_19.fld0.0 = _1;
_18 = [162_u8,77_u8,172_u8,156_u8,184_u8,2_u8];
_15 = !60_isize;
_13 = 12571593333749211222_u64;
match _13 {
0 => bb3,
12571593333749211222 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
_19 = Adt49 { fld0: _12.fld1,fld1: RET,fld2: 6221_u16 };
_12.fld0 = !_2;
_10 = (-6604_i16) as f32;
_4.0 = [_12.fld0,_12.fld0,_2,_12.fld0,_12.fld0,_12.fld0,_2,_12.fld0];
_19.fld2 = 22021_u16 >> _12.fld0;
_18 = [131_u8,79_u8,37_u8,81_u8,51_u8,143_u8];
_6 = core::ptr::addr_of_mut!(_7);
_13 = 6740623273028191968_u64 & 1219673113099511721_u64;
_14 = _5.0;
_18 = [232_u8,90_u8,26_u8,126_u8,157_u8,78_u8];
_3 = [_17,_17,_17,_17,_17,_17,_17,_17];
_9 = core::ptr::addr_of!(_19.fld0.0);
_18 = [213_u8,18_u8,238_u8,176_u8,79_u8,145_u8];
_19.fld1.0 = [_2,_12.fld0,_2,_2,_2,_12.fld0,_2,_12.fld0];
_2 = _17 as u32;
_21 = [(-730521489232743464_i64),(-7032887638217346140_i64),1646918917614563519_i64,(-10335189968598076_i64)];
_22 = 2_usize as isize;
_12.fld1 = (_19.fld0.0,);
_11 = Adt45::Variant0 { fld0: _21 };
Goto(bb10)
}
bb10 = {
RET = (_14,);
_12.fld1 = ((*_9),);
place!(Field::<[i64; 4]>(Variant(_11, 0), 0)) = [3358968120217416919_i64,1730832160525850340_i64,5450915576942464733_i64,(-8212435506136452282_i64)];
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
_12.fld0 = _2;
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
_2 = _12.fld0 - _12.fld0;
_19.fld0 = _12.fld1;
_12.fld0 = _2;
SetDiscriminant(_11, 0);
_17 = _22 < _15;
_18 = [43_u8,20_u8,88_u8,129_u8,146_u8,221_u8];
_12.fld1 = _19.fld0;
_9 = core::ptr::addr_of!(_19.fld0.0);
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
_18 = [96_u8,214_u8,143_u8,45_u8,174_u8,155_u8];
_19.fld0.0 = -_1;
_13 = !17167114435343504720_u64;
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
Goto(bb11)
}
bb11 = {
_25.fld2 = !_19.fld2;
RET.0 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_2,_2,_12.fld0,_2];
_25.fld0.0 = _2 as i8;
_2 = 237949789990944563601889375649300224627_u128 as u32;
_26 = _17;
_24 = _8 as usize;
_19.fld2 = !_25.fld2;
_2 = !_12.fld0;
_13 = 16042976203714760889_u64 ^ 17070128721825206802_u64;
_25 = Move(_19);
_13 = 8685709951903783014_u64 & 8761334294652319493_u64;
_22 = !_15;
place!(Field::<[i64; 4]>(Variant(_11, 0), 0)) = [(-1822982789746185160_i64),(-8852858780488877760_i64),8987352076864080541_i64,785281475616189488_i64];
_25.fld1.0 = _14;
_26 = _17 ^ _17;
_19.fld0 = (_12.fld1.0,);
_1 = _12.fld1.0;
_25.fld0 = _19.fld0;
_19 = Adt49 { fld0: _25.fld0,fld1: _5,fld2: _25.fld2 };
_8 = -102176484870101914782725625404706902488_i128;
_18 = [163_u8,47_u8,138_u8,172_u8,96_u8,161_u8];
_6 = core::ptr::addr_of_mut!(_7);
_9 = core::ptr::addr_of!((*_9));
RET = (_14,);
_19.fld0.0 = 291744167773811629891957717311354292777_u128 as i8;
_25.fld1 = (_5.0,);
_26 = _1 <= _25.fld0.0;
_5.0 = [_12.fld0,_2,_12.fld0,_2,_12.fld0,_2,_2,_2];
Call(_29 = core::intrinsics::bswap(_12.fld1.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_3 = (*_6);
_19.fld2 = _25.fld2;
_25.fld1.0 = _19.fld1.0;
_4 = (_5.0,);
_24 = 0_usize;
SetDiscriminant(_11, 0);
_3[_24] = !(*_6)[_24];
_15 = 18437_i16 as isize;
_30 = _24 as u16;
_24 = 0_usize + 5_usize;
_25.fld0 = (_1,);
_12.fld0 = (-7984391193455221707_i64) as u32;
_15 = -_22;
_3 = [_26,_26,_26,_26,_17,_26,_26,_26];
_31 = !_26;
_17 = _26 ^ _31;
_25.fld2 = _19.fld2;
_12.fld1.0 = (-30679_i16) as i8;
_19.fld1 = (_14,);
_4 = RET;
_10 = _13 as f32;
_6 = core::ptr::addr_of_mut!(_3);
RET.0 = [_2,_2,_2,_2,_2,_2,_2,_12.fld0];
_24 = 16193453562943353892_usize;
_33 = _12.fld0;
_12.fld1 = (_25.fld0.0,);
match _24 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
16193453562943353892 => bb19,
_ => bb18
}
}
bb13 = {
_25.fld2 = !_19.fld2;
RET.0 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_2,_2,_12.fld0,_2];
_25.fld0.0 = _2 as i8;
_2 = 237949789990944563601889375649300224627_u128 as u32;
_26 = _17;
_24 = _8 as usize;
_19.fld2 = !_25.fld2;
_2 = !_12.fld0;
_13 = 16042976203714760889_u64 ^ 17070128721825206802_u64;
_25 = Move(_19);
_13 = 8685709951903783014_u64 & 8761334294652319493_u64;
_22 = !_15;
place!(Field::<[i64; 4]>(Variant(_11, 0), 0)) = [(-1822982789746185160_i64),(-8852858780488877760_i64),8987352076864080541_i64,785281475616189488_i64];
_25.fld1.0 = _14;
_26 = _17 ^ _17;
_19.fld0 = (_12.fld1.0,);
_1 = _12.fld1.0;
_25.fld0 = _19.fld0;
_19 = Adt49 { fld0: _25.fld0,fld1: _5,fld2: _25.fld2 };
_8 = -102176484870101914782725625404706902488_i128;
_18 = [163_u8,47_u8,138_u8,172_u8,96_u8,161_u8];
_6 = core::ptr::addr_of_mut!(_7);
_9 = core::ptr::addr_of!((*_9));
RET = (_14,);
_19.fld0.0 = 291744167773811629891957717311354292777_u128 as i8;
_25.fld1 = (_5.0,);
_26 = _1 <= _25.fld0.0;
_5.0 = [_12.fld0,_2,_12.fld0,_2,_12.fld0,_2,_2,_2];
Call(_29 = core::intrinsics::bswap(_12.fld1.0), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
RET = (_14,);
_12.fld1 = ((*_9),);
place!(Field::<[i64; 4]>(Variant(_11, 0), 0)) = [3358968120217416919_i64,1730832160525850340_i64,5450915576942464733_i64,(-8212435506136452282_i64)];
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
_12.fld0 = _2;
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
_2 = _12.fld0 - _12.fld0;
_19.fld0 = _12.fld1;
_12.fld0 = _2;
SetDiscriminant(_11, 0);
_17 = _22 < _15;
_18 = [43_u8,20_u8,88_u8,129_u8,146_u8,221_u8];
_12.fld1 = _19.fld0;
_9 = core::ptr::addr_of!(_19.fld0.0);
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
_18 = [96_u8,214_u8,143_u8,45_u8,174_u8,155_u8];
_19.fld0.0 = -_1;
_13 = !17167114435343504720_u64;
_12 = Adt42 { fld0: _2,fld1: _19.fld0 };
Goto(bb11)
}
bb15 = {
_19 = Adt49 { fld0: _12.fld1,fld1: RET,fld2: 6221_u16 };
_12.fld0 = !_2;
_10 = (-6604_i16) as f32;
_4.0 = [_12.fld0,_12.fld0,_2,_12.fld0,_12.fld0,_12.fld0,_2,_12.fld0];
_19.fld2 = 22021_u16 >> _12.fld0;
_18 = [131_u8,79_u8,37_u8,81_u8,51_u8,143_u8];
_6 = core::ptr::addr_of_mut!(_7);
_13 = 6740623273028191968_u64 & 1219673113099511721_u64;
_14 = _5.0;
_18 = [232_u8,90_u8,26_u8,126_u8,157_u8,78_u8];
_3 = [_17,_17,_17,_17,_17,_17,_17,_17];
_9 = core::ptr::addr_of!(_19.fld0.0);
_18 = [213_u8,18_u8,238_u8,176_u8,79_u8,145_u8];
_19.fld1.0 = [_2,_12.fld0,_2,_2,_2,_12.fld0,_2,_12.fld0];
_2 = _17 as u32;
_21 = [(-730521489232743464_i64),(-7032887638217346140_i64),1646918917614563519_i64,(-10335189968598076_i64)];
_22 = 2_usize as isize;
_12.fld1 = (_19.fld0.0,);
_11 = Adt45::Variant0 { fld0: _21 };
Goto(bb10)
}
bb16 = {
Return()
}
bb17 = {
_17 = _13 == _13;
_17 = false;
_19.fld0.0 = _1;
_18 = [162_u8,77_u8,172_u8,156_u8,184_u8,2_u8];
_15 = !60_isize;
_13 = 12571593333749211222_u64;
match _13 {
0 => bb3,
12571593333749211222 => bb9,
_ => bb8
}
}
bb18 = {
Return()
}
bb19 = {
_21 = [(-6699362516608935898_i64),(-2132291676441787051_i64),(-5081901616163842840_i64),(-5155141400164066343_i64)];
place!(Field::<[i64; 4]>(Variant(_11, 0), 0)) = [3328709558857627168_i64,1426917669069674635_i64,(-6894117040855194555_i64),(-4578785385240820479_i64)];
_25.fld1 = _4;
_6 = core::ptr::addr_of_mut!(_35);
_17 = _26 <= _26;
_35 = [_31,_17,_17,_17,_31,_17,_17,_26];
_19.fld1 = (_25.fld1.0,);
RET.0 = [_2,_33,_12.fld0,_33,_2,_2,_12.fld0,_2];
_4 = (_25.fld1.0,);
RET = _4;
_25.fld1.0 = [_12.fld0,_2,_2,_2,_2,_2,_12.fld0,_12.fld0];
SetDiscriminant(_11, 1);
_32 = _2;
_4.0 = [_32,_32,_32,_33,_2,_33,_32,_2];
_38 = _22 * _22;
place!(Field::<*mut i8>(Variant(_11, 1), 0)) = core::ptr::addr_of_mut!(_29);
_39 = [_17,_17,_31,_17,_17,_26,_17,_31];
_4 = (_25.fld1.0,);
Goto(bb20)
}
bb20 = {
Call(_45 = dump_var(15_usize, 4_usize, Move(_4), 24_usize, Move(_24), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_45 = dump_var(15_usize, 35_usize, Move(_35), 30_usize, Move(_30), 38_usize, Move(_38), 26_usize, Move(_26)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_45 = dump_var(15_usize, 21_usize, Move(_21), 3_usize, Move(_3), 31_usize, Move(_31), 29_usize, Move(_29)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [bool; 8],mut _2: [bool; 8],mut _3: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]),mut _4: u64,mut _5: ([u32; 8],),mut _6: [bool; 8],mut _7: [u32; 8],mut _8: usize,mut _9: usize) -> Adt53 {
mir! {
type RET = Adt53;
let _10: (u16, [bool; 8]);
let _11: &'static f64;
let _12: u8;
let _13: (usize, u32);
let _14: Adt45;
let _15: (i16, (i128, isize, i64));
let _16: f32;
let _17: (*const i8, [bool; 8], f64);
let _18: Adt43;
let _19: [i8; 2];
let _20: i64;
let _21: *const i128;
let _22: u16;
let _23: [bool; 8];
let _24: [i64; 4];
let _25: ();
let _26: ();
{
_10.0 = 1858967506_u32 as u16;
_10.1 = [false,false,true,false,true,true,true,false];
_3.4 = core::ptr::addr_of_mut!(_6);
_3.0 = [true,true,true,false,false,true,true,false];
_10.1 = [true,false,false,false,false,true,false,true];
_2 = [false,false,false,false,false,true,true,false];
_8 = !_3.1;
_4 = 743183898_i32 as u64;
_1 = [false,true,false,false,true,false,true,true];
_10.0 = 5968_u16;
_12 = 24_u8;
_10 = (802_u16, _1);
_2 = [true,false,true,true,false,false,true,true];
_7 = _5.0;
_3.4 = core::ptr::addr_of_mut!(_2);
_3.2 = -9223372036854775807_isize;
_10.0 = _4 as u16;
_3.0 = [false,false,true,false,true,true,true,false];
Call(_15 = fn17(_5.0, _10.1, _3.3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = [false,true,false,false,true,true,true,true];
_13 = (_3.1, 283921663_u32);
_15.1 = ((-102904303370120273450006303369352701790_i128), _3.2, (-8400052126582060804_i64));
_15.1 = ((-141069003983729848410328245687441660120_i128), _3.2, (-7255496255081081167_i64));
_15.0 = _15.1.2 as i16;
_15.1.1 = _3.2;
_8 = 74419411740563517762184257778714919908_u128 as usize;
_5 = (_7,);
_8 = !_9;
_9 = _8;
_15.1.1 = _3.2;
_3.0 = [false,false,false,true,true,false,false,true];
_1 = [true,true,true,true,true,false,false,false];
_17.1 = _3.0;
_1 = [false,false,true,false,true,true,true,true];
_10.0 = '\u{1025d}' as u16;
_3.4 = core::ptr::addr_of_mut!(_3.0);
_3.0 = [true,false,true,true,false,true,true,false];
_17.2 = _13.1 as f64;
match _13.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
283921663 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = Adt53::Variant0 { fld0: _10.0 };
_10.1 = _3.3;
_5.0 = [_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1];
_15.0 = (-4298_i16) * (-31831_i16);
_15.1.2 = (-7509855484621949143_i64);
_2 = [true,true,true,false,false,false,true,true];
place!(Field::<u16>(Variant(RET, 0), 0)) = _10.0 << _9;
_22 = '\u{a5bae}' as u16;
Goto(bb9)
}
bb9 = {
Call(_25 = dump_var(16_usize, 8_usize, Move(_8), 4_usize, Move(_4), 1_usize, Move(_1), 6_usize, Move(_6)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_25 = dump_var(16_usize, 12_usize, Move(_12), 22_usize, Move(_22), 26_usize, _26, 26_usize, _26), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [u32; 8],mut _2: [bool; 8],mut _3: [bool; 8]) -> (i16, (i128, isize, i64)) {
mir! {
type RET = (i16, (i128, isize, i64));
let _4: char;
let _5: char;
let _6: u8;
let _7: Adt52;
let _8: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]);
let _9: [bool; 3];
let _10: isize;
let _11: f64;
let _12: u64;
let _13: Adt48;
let _14: f32;
let _15: ();
let _16: ();
{
RET.1.0 = -84466596495856544614458909188771571487_i128;
RET.1.0 = (-112078323134735347412716197280471893579_i128);
RET.0 = 17340_i16;
RET.1.1 = (-49_isize);
RET.1.0 = 24565347557642024561068451665415375458_i128 >> RET.0;
RET.1.1 = (-9223372036854775808_isize);
_2 = [false,true,true,false,false,true,false,false];
_4 = '\u{431a0}';
RET.1 = ((-105001161231540037041439905409265996258_i128), 9223372036854775807_isize, (-7222549009131671575_i64));
RET.1.1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
RET.1 = (137227486565099698652142418079828095506_i128, 4_isize, 2445995055809330087_i64);
RET.1 = (6839276132645094527373864596940279439_i128, (-56_isize), (-6406014858058734080_i64));
_4 = '\u{4e8b8}';
RET.1.1 = -(-9223372036854775808_isize);
_4 = '\u{9f475}';
RET.1.2 = (-1822223136311448393_i64);
_3 = [true,true,false,true,true,true,true,true];
RET.1.1 = (-9223372036854775808_isize);
Call(RET = fn18(_1, _1, _3, _3, _2, _1, _1, _3, _1, _3, _1, _3, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.1.2 = RET.1.1 as i64;
RET.1 = (25131712323004686319494545580116024583_i128, (-18_isize), (-2063672903448515748_i64));
RET.1.2 = !2945536119207023277_i64;
RET.0 = (-32563_i16) & (-11899_i16);
_2 = [false,false,false,false,false,false,true,true];
RET.1.1 = 9223372036854775807_isize * 9223372036854775807_isize;
RET.1.1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
RET.1 = ((-105285328818745666088842840903753463695_i128), (-99_isize), (-8989806312216953667_i64));
Goto(bb2)
}
bb2 = {
_5 = _4;
RET.1 = (66675565612172556682547427748003912735_i128, 59_isize, 2477164886255218773_i64);
RET.1.1 = false as isize;
RET.1 = ((-98667415176021865053827060008356429502_i128), 9223372036854775807_isize, 6164207192138546167_i64);
match RET.1.0 {
0 => bb3,
1 => bb4,
2 => bb5,
241614951744916598409547547423411781954 => bb7,
_ => bb6
}
}
bb3 = {
RET.1.2 = RET.1.1 as i64;
RET.1 = (25131712323004686319494545580116024583_i128, (-18_isize), (-2063672903448515748_i64));
RET.1.2 = !2945536119207023277_i64;
RET.0 = (-32563_i16) & (-11899_i16);
_2 = [false,false,false,false,false,false,true,true];
RET.1.1 = 9223372036854775807_isize * 9223372036854775807_isize;
RET.1.1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
RET.1 = ((-105285328818745666088842840903753463695_i128), (-99_isize), (-8989806312216953667_i64));
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_7.fld5 = [true,false,true];
_6 = 153_u8 & 222_u8;
_7.fld2 = !8683224612119221150_u64;
_7.fld2 = !2232625179037130281_u64;
_7.fld2 = !6007912210112120548_u64;
_7.fld5 = [true,true,false];
match RET.1.1 {
0 => bb1,
1 => bb4,
2 => bb6,
3 => bb8,
4 => bb9,
5 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
RET.1.2 = RET.1.1 as i64;
RET.1 = (25131712323004686319494545580116024583_i128, (-18_isize), (-2063672903448515748_i64));
RET.1.2 = !2945536119207023277_i64;
RET.0 = (-32563_i16) & (-11899_i16);
_2 = [false,false,false,false,false,false,true,true];
RET.1.1 = 9223372036854775807_isize * 9223372036854775807_isize;
RET.1.1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
RET.1 = ((-105285328818745666088842840903753463695_i128), (-99_isize), (-8989806312216953667_i64));
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
RET.1.2 = RET.1.1 as i64;
RET.1 = (25131712323004686319494545580116024583_i128, (-18_isize), (-2063672903448515748_i64));
RET.1.2 = !2945536119207023277_i64;
RET.0 = (-32563_i16) & (-11899_i16);
_2 = [false,false,false,false,false,false,true,true];
RET.1.1 = 9223372036854775807_isize * 9223372036854775807_isize;
RET.1.1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
RET.1 = ((-105285328818745666088842840903753463695_i128), (-99_isize), (-8989806312216953667_i64));
Goto(bb2)
}
bb12 = {
_4 = _5;
_4 = _5;
Goto(bb13)
}
bb13 = {
_7.fld4 = RET.0 as u8;
RET.1 = ((-164358022902782204920814479004945301141_i128), (-67_isize), (-1361740691824763910_i64));
_8.1 = !4_usize;
RET.1 = (35560224436940506401202219796249568828_i128, 105_isize, (-7573620716570555989_i64));
_7.fld3 = (-95_i8) + (-27_i8);
RET.1 = ((-44584267913427463503655441301592617899_i128), 9223372036854775807_isize, (-7899673213563508880_i64));
_8.2 = RET.1.1 + RET.1.1;
_8.0 = _2;
_6 = RET.0 as u8;
RET.1.2 = !(-5823230440757890685_i64);
_8.2 = -RET.1.1;
_7.fld5 = [true,true,true];
RET.1.1 = _8.2 + _8.2;
_2 = [false,false,true,true,true,true,false,false];
_9 = [false,false,false];
_7.fld5 = [true,true,true];
RET.1.1 = -_8.2;
RET.0 = (-12995_i16) - 32097_i16;
Goto(bb14)
}
bb14 = {
RET.0 = (-28917_i16) >> _7.fld3;
RET.0 = (-27277_i16) - 5369_i16;
_3 = _8.0;
RET.1.2 = !(-5651990908184327062_i64);
_10 = _8.2;
_7.fld5 = _9;
_5 = _4;
_2 = [false,true,true,false,false,true,true,true];
RET.0 = !23304_i16;
RET.1 = ((-105782223342198697372031147855803830742_i128), _10, (-3228691970753259935_i64));
RET.1.0 = !23129986137551761917024345104052443550_i128;
_7.fld3 = -8_i8;
_7.fld3 = 74_i8 + 40_i8;
RET.1.1 = _10 + _8.2;
_8.0 = [false,true,false,false,true,true,false,true];
_8.4 = core::ptr::addr_of_mut!(_8.3);
Goto(bb15)
}
bb15 = {
Call(_15 = dump_var(17_usize, 5_usize, Move(_5), 3_usize, Move(_3), 6_usize, Move(_6), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [u32; 8],mut _2: [u32; 8],mut _3: [bool; 8],mut _4: [bool; 8],mut _5: [bool; 8],mut _6: [u32; 8],mut _7: [u32; 8],mut _8: [bool; 8],mut _9: [u32; 8],mut _10: [bool; 8],mut _11: [u32; 8],mut _12: [bool; 8],mut _13: [u32; 8]) -> (i16, (i128, isize, i64)) {
mir! {
type RET = (i16, (i128, isize, i64));
let _14: (i8,);
let _15: u32;
let _16: isize;
let _17: u8;
let _18: (i16, (i128, isize, i64));
let _19: [bool; 3];
let _20: i32;
let _21: [i64; 4];
let _22: char;
let _23: char;
let _24: [bool; 8];
let _25: Adt54;
let _26: ();
let _27: ();
{
RET.0 = (-7499_i16);
_2 = _7;
_12 = [true,true,true,true,false,false,true,true];
RET.1.2 = !3497902165316630280_i64;
Goto(bb1)
}
bb1 = {
_6 = [75535908_u32,4031919957_u32,2272417232_u32,2958973939_u32,2121664466_u32,1333511743_u32,1645271662_u32,3691050356_u32];
_7 = [3082960656_u32,682248883_u32,1193133751_u32,1360326205_u32,497822609_u32,2897544808_u32,1660630261_u32,2604161418_u32];
_14.0 = 103_i8;
RET.1.0 = 167719245661350187255190924750771769640_i128;
_8 = [true,false,false,true,false,false,false,true];
RET.0 = !(-20823_i16);
RET.0 = (-29726_i16) ^ 20886_i16;
_4 = [false,true,false,false,false,true,true,false];
RET.1.2 = -(-3421031368933336743_i64);
RET.0 = -11898_i16;
_3 = [true,true,false,true,false,false,true,false];
match _14.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
103 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET.1.2 = (-6071729885828442613_i64);
RET.0 = (-19374_i16) * 4507_i16;
_5 = [true,false,true,false,false,true,false,false];
RET.1.1 = (-120_isize) & 9223372036854775807_isize;
_8 = [true,false,false,false,false,true,false,false];
_3 = [false,true,false,true,true,true,false,true];
_14 = (43_i8,);
_9 = [2491093485_u32,1569902663_u32,712416067_u32,1239019400_u32,2347244369_u32,2154458294_u32,4126798474_u32,349144793_u32];
RET.1.2 = _14.0 as i64;
_9 = [2731621468_u32,3804796585_u32,1924831085_u32,259256890_u32,3529950825_u32,1000203269_u32,740211653_u32,1247519320_u32];
_11 = [2586628620_u32,551730201_u32,856947825_u32,638139894_u32,2207402431_u32,4179923608_u32,1662297600_u32,3694949706_u32];
RET.1 = ((-3587363752348412926478065996946879960_i128), (-9223372036854775808_isize), (-3781776945058613025_i64));
_6 = [263841202_u32,1251400226_u32,3196686967_u32,2602794521_u32,939142444_u32,74807609_u32,870294361_u32,349130407_u32];
RET.1.1 = 9223372036854775807_isize;
RET.1 = ((-87904477501485697860768147757506957683_i128), (-29_isize), (-5464818130138264998_i64));
_12 = [false,false,true,false,false,true,false,true];
_17 = 158_u8 * 240_u8;
RET.1.1 = RET.0 as isize;
RET.0 = 813934162_i32 as i16;
_15 = 846818921_u32 + 2894843863_u32;
match RET.1.0 {
252377889419452765602606459674261253773 => bb10,
_ => bb1
}
}
bb10 = {
_18.0 = _15 as i16;
RET.1.2 = !4872345441735418726_i64;
_6 = _2;
RET.1 = ((-25260615872059605953016722086686515301_i128), 9223372036854775807_isize, 7187266624087733679_i64);
_18.1.2 = -RET.1.2;
RET.1.2 = _18.1.2;
_14.0 = !41_i8;
_12 = [false,false,true,true,false,true,true,true];
_16 = _15 as isize;
_18 = (RET.0, RET.1);
RET.1.2 = _18.1.2;
_19 = [true,true,false];
_20 = !220862206_i32;
RET.1.0 = !_18.1.0;
RET.1.1 = _18.1.1;
RET.0 = !_18.0;
_18.1.2 = RET.1.2 >> _18.1.0;
_9 = _13;
match _18.1.1 {
0 => bb8,
1 => bb4,
2 => bb11,
3 => bb12,
4 => bb13,
9223372036854775807 => bb15,
_ => bb14
}
}
bb11 = {
RET.1.2 = (-6071729885828442613_i64);
RET.0 = (-19374_i16) * 4507_i16;
_5 = [true,false,true,false,false,true,false,false];
RET.1.1 = (-120_isize) & 9223372036854775807_isize;
_8 = [true,false,false,false,false,true,false,false];
_3 = [false,true,false,true,true,true,false,true];
_14 = (43_i8,);
_9 = [2491093485_u32,1569902663_u32,712416067_u32,1239019400_u32,2347244369_u32,2154458294_u32,4126798474_u32,349144793_u32];
RET.1.2 = _14.0 as i64;
_9 = [2731621468_u32,3804796585_u32,1924831085_u32,259256890_u32,3529950825_u32,1000203269_u32,740211653_u32,1247519320_u32];
_11 = [2586628620_u32,551730201_u32,856947825_u32,638139894_u32,2207402431_u32,4179923608_u32,1662297600_u32,3694949706_u32];
RET.1 = ((-3587363752348412926478065996946879960_i128), (-9223372036854775808_isize), (-3781776945058613025_i64));
_6 = [263841202_u32,1251400226_u32,3196686967_u32,2602794521_u32,939142444_u32,74807609_u32,870294361_u32,349130407_u32];
RET.1.1 = 9223372036854775807_isize;
RET.1 = ((-87904477501485697860768147757506957683_i128), (-29_isize), (-5464818130138264998_i64));
_12 = [false,false,true,false,false,true,false,true];
_17 = 158_u8 * 240_u8;
RET.1.1 = RET.0 as isize;
RET.0 = 813934162_i32 as i16;
_15 = 846818921_u32 + 2894843863_u32;
match RET.1.0 {
252377889419452765602606459674261253773 => bb10,
_ => bb1
}
}
bb12 = {
_6 = [75535908_u32,4031919957_u32,2272417232_u32,2958973939_u32,2121664466_u32,1333511743_u32,1645271662_u32,3691050356_u32];
_7 = [3082960656_u32,682248883_u32,1193133751_u32,1360326205_u32,497822609_u32,2897544808_u32,1660630261_u32,2604161418_u32];
_14.0 = 103_i8;
RET.1.0 = 167719245661350187255190924750771769640_i128;
_8 = [true,false,false,true,false,false,false,true];
RET.0 = !(-20823_i16);
RET.0 = (-29726_i16) ^ 20886_i16;
_4 = [false,true,false,false,false,true,true,false];
RET.1.2 = -(-3421031368933336743_i64);
RET.0 = -11898_i16;
_3 = [true,true,false,true,false,false,true,false];
match _14.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
103 => bb9,
_ => bb8
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_21 = [_18.1.2,_18.1.2,RET.1.2,RET.1.2];
_11 = _13;
_13 = _9;
_23 = '\u{1e85}';
_7 = _2;
_16 = 318268422999503318291953248572398470073_u128 as isize;
_6 = [_15,_15,_15,_15,_15,_15,_15,_15];
_25.fld7 = 30824599393206051919923842253440147592_u128 as i128;
_20 = 767271103_i32;
_21 = [_18.1.2,RET.1.2,RET.1.2,_18.1.2];
Goto(bb16)
}
bb16 = {
Call(_26 = dump_var(18_usize, 21_usize, Move(_21), 13_usize, Move(_13), 5_usize, Move(_5), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(18_usize, 14_usize, Move(_14), 11_usize, Move(_11), 15_usize, Move(_15), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_26 = dump_var(18_usize, 12_usize, Move(_12), 4_usize, Move(_4), 6_usize, Move(_6), 27_usize, _27), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(1042174441_u32), std::hint::black_box(8129414151827713823_u64), std::hint::black_box(54_i8), std::hint::black_box((-6283_i16)), std::hint::black_box(607389874_i32), std::hint::black_box(681054581474227584_i64), std::hint::black_box(127331441810791082228148324193654691221_i128), std::hint::black_box(3_usize), std::hint::black_box(95705825518957518020183834097503353466_u128), std::hint::black_box(2133_u16));
                
            }
#[derive(Debug)]
pub struct Adt42 {
fld0: u32,
fld1: (i8,),
}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: bool,
fld1: f64,
fld2: u16,
fld3: [u8; 6],
fld4: [bool; 3],
fld5: *mut [bool; 8],
fld6: (*const i8, [bool; 8], f64),

},
Variant1{
fld0: *mut [bool; 8],
fld1: char,
fld2: (*const i8, [bool; 8], f64),
fld3: u32,
fld4: u64,
fld5: [u8; 6],

},
Variant2{
fld0: [u16; 4],
fld1: (i128, isize, i64),
fld2: ([u32; 8],),
fld3: u128,
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: (*const i8, [bool; 8], f64),
fld1: *const bool,
fld2: (u16, [bool; 8]),
fld3: f32,
fld4: i16,
fld5: u32,
fld6: *const *mut u64,
fld7: usize,

},
Variant1{
fld0: *const *mut u64,

},
Variant2{
fld0: *mut [bool; 8],

},
Variant3{
fld0: Adt42,
fld1: char,
fld2: ([u32; 8],),
fld3: (i16, (i128, isize, i64)),
fld4: f64,
fld5: *mut u64,
fld6: (*const i8, [bool; 8], f64),
fld7: *mut i8,

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: [i64; 4],

},
Variant1{
fld0: *mut i8,
fld1: f32,
fld2: (usize, u32),
fld3: i8,
fld4: [bool; 8],

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: f32,
fld1: *mut i8,

},
Variant1{
fld0: (usize, u32),
fld1: Adt44,

},
Variant2{
fld0: [u16; 4],
fld1: i32,
fld2: isize,
fld3: Adt45,
fld4: *mut [bool; 8],

},
Variant3{
fld0: u32,
fld1: f64,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: [i64; 4],
fld1: Adt43,
fld2: [bool; 3],
fld3: f32,
fld4: [u16; 4],
fld5: *mut u64,
fld6: u8,
fld7: ([u32; 8],),

},
Variant1{
fld0: ([u32; 8],),

},
Variant2{
fld0: (u16, [bool; 8]),
fld1: [i64; 4],
fld2: *mut [bool; 8],
fld3: *mut u64,
fld4: [isize; 6],
fld5: *const i128,
fld6: i64,

},
Variant3{
fld0: u64,
fld1: *const *mut u64,
fld2: isize,
fld3: (usize, u32),
fld4: ([u32; 8],),
fld5: *const i8,
fld6: (i128, isize, i64),
fld7: u16,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: i32,
fld1: [isize; 6],
fld2: Adt47,
fld3: i8,
fld4: [u8; 6],

},
Variant1{
fld0: bool,
fld1: [u8; 6],
fld2: (usize, u32),
fld3: [u32; 8],

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: (i8,),
fld1: ([u32; 8],),
fld2: u16,
}
#[derive(Debug)]
pub struct Adt50 {
fld0: Adt44,
fld1: [i64; 4],
fld2: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]),
fld3: *const *mut u64,
fld4: i128,
fld5: Adt42,
fld6: Adt45,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt42,
fld1: (i16, (i128, isize, i64)),
fld2: [u32; 8],
fld3: [bool; 3],
fld4: Adt45,
fld5: i32,
fld6: u64,
fld7: Adt44,

},
Variant1{
fld0: [u16; 4],
fld1: u64,
fld2: isize,
fld3: Adt50,
fld4: i16,
fld5: *const bool,
fld6: Adt49,
fld7: (*const i8, [bool; 8], f64),

},
Variant2{
fld0: [isize; 6],
fld1: ([u32; 8],),
fld2: Adt48,

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: Adt51,
fld1: Adt48,
fld2: u64,
fld3: i8,
fld4: u8,
fld5: [bool; 3],
fld6: *const *mut u64,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u16,

},
Variant1{
fld0: [i64; 4],
fld1: ([i8; 2], f64),
fld2: (i16, (i128, isize, i64)),

},
Variant2{
fld0: (i16, (i128, isize, i64)),

},
Variant3{
fld0: Adt52,
fld1: u16,
fld2: (i16, (i128, isize, i64)),
fld3: *const i128,
fld4: [bool; 3],

}}
#[derive(Debug)]
pub struct Adt54 {
fld0: u32,
fld1: (*const i8, [bool; 8], f64),
fld2: f32,
fld3: u16,
fld4: i16,
fld5: [bool; 8],
fld6: Adt43,
fld7: i128,
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: *const bool,
fld1: [u16; 4],
fld2: isize,
fld3: Adt52,
fld4: i16,
fld5: (u16, [bool; 8]),

},
Variant1{
fld0: usize,

},
Variant2{
fld0: Adt52,
fld1: *mut u64,
fld2: [u32; 8],

},
Variant3{
fld0: Adt43,
fld1: Adt54,
fld2: u32,
fld3: (usize, u32),

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: Adt55,
fld1: Adt45,
fld2: (u16, [bool; 8]),
fld3: u16,

},
Variant1{
fld0: Adt47,
fld1: i128,
fld2: [bool; 8],

},
Variant2{
fld0: u16,
fld1: Adt52,
fld2: i32,
fld3: f32,
fld4: u64,

},
Variant3{
fld0: (*const i8, [bool; 8], f64),
fld1: char,
fld2: (i8,),
fld3: (u16, [bool; 8]),
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt47,
fld1: (i8,),
fld2: Adt48,

},
Variant1{
fld0: *mut i8,
fld1: *mut u64,
fld2: *const *mut u64,
fld3: f64,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: u8,
fld1: (usize, u32),
fld2: Adt57,
fld3: (i128, isize, i64),
fld4: ([u32; 8],),
fld5: (u16, [bool; 8]),
fld6: u64,

},
Variant1{
fld0: bool,
fld1: Adt53,
fld2: Adt56,
fld3: u64,
fld4: Adt47,

},
Variant2{
fld0: ([bool; 8], usize, isize, [bool; 8], *mut [bool; 8]),
fld1: Adt55,
fld2: [bool; 8],
fld3: *mut u64,
fld4: Adt42,
fld5: *const i8,
fld6: Adt51,
fld7: i128,

}}

