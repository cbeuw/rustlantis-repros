#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u128) -> ([u32; 5], i128, (u16, i16), i8) {
mir! {
type RET = ([u32; 5], i128, (u16, i16), i8);
let _3: u16;
let _4: [u64; 1];
let _5: ((isize, (u16, i16, u8, i8)),);
let _6: u16;
let _7: *mut i128;
let _8: bool;
let _9: [isize; 7];
let _10: bool;
let _11: Adt56;
let _12: Adt53;
let _13: char;
let _14: (u16, i16);
let _15: Adt64;
let _16: bool;
let _17: ([i8; 1],);
let _18: *mut i128;
let _19: ();
let _20: ();
{
RET.1 = (-57274102344112176000579835824199435780_i128) ^ (-104794928653688353488182168643592099525_i128);
RET.2.1 = (-2610_i16);
_1 = !false;
RET.2 = (32258_u16, 3263_i16);
RET.2 = (12349_u16, (-25400_i16));
_5.0.1.1 = (-13373_i16) * (-3038_i16);
_4 = [12523728810705155870_u64];
RET.2 = (51786_u16, _5.0.1.1);
_4 = [13899395156521812307_u64];
RET.1 = '\u{c7a5a}' as i128;
RET.3 = '\u{2d9d9}' as i8;
RET.0 = [3720173952_u32,3478403699_u32,2091534218_u32,1727562556_u32,41337937_u32];
RET.2 = (1191_u16, _5.0.1.1);
_5.0.1.1 = !6232_i16;
_5.0.1.3 = 226599313581601110514938773001984950511_u128 as i8;
RET.2.1 = -_5.0.1.1;
_5.0.1.0 = !41645_u16;
RET.2.0 = _5.0.1.0;
RET.3 = _5.0.1.3 | _5.0.1.3;
Call(_2 = fn1(_1, _5.0.1.3, _1, _1, _4, _5.0.1.1, _4, _5.0.1.3, _5.0.1.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5.0.1.2 = '\u{8e636}' as u8;
_1 = _5.0.1.0 <= _5.0.1.0;
_3 = _5.0.1.0 & _5.0.1.0;
RET.3 = _2 as i8;
_5.0.1.1 = -7635_i16;
_5.0.1.0 = _3;
_6 = !_5.0.1.0;
_5.0.1.2 = 119_u8 + 217_u8;
_5.0.0 = (-1908317112220666758_i64) as isize;
_1 = false;
_3 = _6 / 19392_u16;
_6 = _3 << _5.0.1.2;
_5.0.1 = (_6, 24703_i16, 153_u8, 99_i8);
RET.2 = (_6, _5.0.1.1);
RET.2 = (_5.0.1.0, _5.0.1.1);
_5.0.1.2 = !177_u8;
_11.fld2 = [(-1787891646_i32),(-244757649_i32),(-488917353_i32),568722309_i32,(-115325624_i32)];
match _5.0.1.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
99 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11.fld2 = [(-498062392_i32),728507585_i32,1068734405_i32,(-2073147421_i32),841331173_i32];
RET.2.1 = !_5.0.1.1;
RET.3 = _5.0.1.3;
_5.0.1.0 = !_6;
_11.fld1 = [_5.0.1.1];
RET.3 = !_5.0.1.3;
_10 = _1 ^ _1;
_9 = [_5.0.0,_5.0.0,_5.0.0,_5.0.0,_5.0.0,_5.0.0,_5.0.0];
_5.0.1.1 = '\u{a52c8}' as i16;
RET.1 = -163370119510009117917145647936875311677_i128;
_10 = _5.0.1.0 == _5.0.1.0;
_1 = _10;
RET.0 = [2209336285_u32,2420570161_u32,3818750118_u32,676421585_u32,215702486_u32];
_11.fld1 = [_5.0.1.1];
_8 = _10;
_11.fld1 = [_5.0.1.1];
RET.2 = (_6, _5.0.1.1);
_3 = _6;
_11.fld1 = [_5.0.1.1];
Goto(bb8)
}
bb8 = {
_5.0.0 = -9223372036854775807_isize;
RET.2.0 = _6;
RET.1 = !(-107461346420370085171231667135455506244_i128);
RET.0 = [422729673_u32,2052274722_u32,63530590_u32,736127828_u32,3944634492_u32];
RET.2.1 = _5.0.1.1;
_10 = _1 != _8;
RET.0 = [1598029034_u32,1350038517_u32,2165181618_u32,241446308_u32,506444759_u32];
_8 = _6 < _5.0.1.0;
RET.2.0 = _5.0.1.0;
_5.0.1.1 = 25303_i16;
RET.1 = (-30919861570863754184384593467983471142_i128);
RET.2.1 = _5.0.1.1 & _5.0.1.1;
RET.3 = _2 as i8;
_12.fld5.0 = core::ptr::addr_of!(_12.fld1.fld0);
RET.2.0 = _2 as u16;
_3 = _2 as u16;
_12.fld1.fld0 = 69934304861191774809067884444804602920_i128 as u32;
RET.0 = [_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0];
_5.0.1 = (_3, (-3452_i16), 26_u8, (-74_i8));
_6 = _3 & _5.0.1.0;
_12.fld1.fld3 = [_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0];
_12.fld1.fld1 = core::ptr::addr_of!(_11.fld2);
_12.fld3 = _5.0.1.1 as f32;
RET.1 = 8735358589553734875922203873229009397_i128;
_4 = [11663947444324795166_u64];
RET.1 = !82158030027068259375438488498344247586_i128;
_12.fld0.1 = _5.0.1;
_12.fld5.0 = core::ptr::addr_of!(_12.fld1.fld0);
Goto(bb9)
}
bb9 = {
_12.fld1.fld4 = '\u{f708f}' as i16;
RET.1 = 42855449016864773567087705179896678983_i128;
RET.2 = (_3, _12.fld0.1.1);
_12.fld1.fld0 = 3607294595_u32;
_14 = (_6, _5.0.1.1);
_5.0.0 = -9223372036854775807_isize;
_15.fld4.0 = (_5.0.0, _5.0.1);
RET.3 = -_5.0.1.3;
_12.fld1.fld4 = (-1680448144559646484_i64) as i16;
_4 = [16232698233802339263_u64];
_12.fld2 = _15.fld4.0.0;
_15.fld3 = _15.fld4.0.1.3;
match _15.fld4.0.1.1 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb7,
340282366920938463463374607431768208004 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_17.0 = [_5.0.1.3];
_5.0.1 = (_15.fld4.0.1.0, _15.fld4.0.1.1, _12.fld0.1.2, _15.fld4.0.1.3);
_15.fld4.0.1.3 = _15.fld3;
_15.fld5.fld2.0 = _12.fld0.1.0;
_15.fld2.fld3 = [_15.fld4.0.1.2,_15.fld4.0.1.2,_5.0.1.2,_15.fld4.0.1.2,_5.0.1.2];
_15.fld2.fld5.3 = _15.fld3 * _15.fld4.0.1.3;
RET.2.1 = _5.0.1.1 - _12.fld0.1.1;
_15.fld6.1.0 = !_12.fld0.1.0;
RET.0 = _12.fld1.fld3;
_15.fld2.fld4 = [11527018421684255009_u64,5826029291147434159_u64,10991456093398961218_u64,14158210774899758370_u64,2804452381580778661_u64,18269158571045996884_u64,9425304417667213075_u64,10921180111507968006_u64];
Goto(bb12)
}
bb12 = {
Call(_19 = dump_var(0_usize, 8_usize, Move(_8), 1_usize, Move(_1), 6_usize, Move(_6), 17_usize, Move(_17)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_19 = dump_var(0_usize, 14_usize, Move(_14), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: bool,mut _2: i8,mut _3: bool,mut _4: bool,mut _5: [u64; 1],mut _6: i16,mut _7: [u64; 1],mut _8: i8,mut _9: u16) -> u128 {
mir! {
type RET = u128;
let _10: Adt50;
let _11: Adt64;
let _12: Adt53;
let _13: u16;
let _14: (*const u32,);
let _15: Adt49;
let _16: f64;
let _17: ((isize, (u16, i16, u8, i8)),);
let _18: [i32; 5];
let _19: [u64; 8];
let _20: isize;
let _21: [u64; 1];
let _22: u16;
let _23: Adt57;
let _24: isize;
let _25: char;
let _26: i16;
let _27: i128;
let _28: [u32; 5];
let _29: ();
let _30: ();
{
RET = _2 as u128;
_1 = !_3;
_7 = [11066786486092899114_u64];
_5 = [7260415363150953752_u64];
_8 = _2;
_7 = _5;
_5 = _7;
_5 = _7;
_10.fld4 = _2 as i16;
_5 = _7;
RET = 320155736727119204336566009582734717095_u128;
_3 = _1 | _4;
_10.fld2 = [9223372036854775807_isize,(-37_isize),(-9223372036854775808_isize),9223372036854775807_isize,21_isize,9223372036854775807_isize];
_6 = !_10.fld4;
Goto(bb1)
}
bb1 = {
_10.fld3 = [2732624743_u32,49481305_u32,633321491_u32,1552700788_u32,3477992380_u32];
_8 = _6 as i8;
_6 = !_10.fld4;
_8 = 3052940616_u32 as i8;
_9 = 56575_u16;
_11.fld5.fld3 = core::ptr::addr_of_mut!(_11.fld4.0);
_11.fld5.fld2.1 = _6 & _10.fld4;
_11.fld2.fld1 = 5_usize as f64;
_11.fld5.fld6 = [_2,_2,_2,_2];
Call(_11.fld5.fld4 = fn2(_10.fld3, _10.fld2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11.fld4.0.1.3 = 46994574897023543367262366045979729428_i128 as i8;
_11.fld2.fld6 = -493451051552754997_i64;
RET = 341999013_u32 as u128;
_11.fld2.fld2 = [3438964662_u32,3855636100_u32,284270355_u32,1678249458_u32,477706180_u32];
_11.fld6.0 = (-9223372036854775808_isize);
_12.fld0.1.1 = _6;
_10.fld2 = [_11.fld6.0,_11.fld6.0,_11.fld6.0,_11.fld6.0,_11.fld6.0,_11.fld6.0];
_11.fld5.fld2.3 = !_2;
_12.fld0.1 = (_9, _6, 87_u8, _8);
_12.fld3 = _11.fld2.fld6 as f32;
_11.fld5.fld3 = core::ptr::addr_of_mut!(_11.fld4.0);
_11.fld4.0.1.0 = _9;
_6 = -_12.fld0.1.1;
_12.fld0.0 = _12.fld0.1.2 as isize;
_11.fld4.0 = (_11.fld6.0, _12.fld0.1);
_11.fld2.fld0 = _4;
_11.fld6.1 = _11.fld4.0.1;
Goto(bb3)
}
bb3 = {
RET = 252904300834977965607378580740550829463_u128 | 66884658182714953621411335247855643717_u128;
_11.fld2.fld3 = [_11.fld4.0.1.2,_12.fld0.1.2,_12.fld0.1.2,_12.fld0.1.2,_11.fld4.0.1.2];
_11.fld2.fld5.3 = '\u{9ec48}' as i8;
RET = _12.fld0.1.1 as u128;
_11.fld5.fld2.2 = _12.fld0.1.2;
RET = 77702064152807269300553987610737128130_u128 >> _12.fld0.1.2;
_11.fld6.1.2 = _11.fld4.0.1.2;
_11.fld4.0.1.3 = 169864525920230455801528214203586217473_u128 as i8;
_11.fld2.fld2 = _10.fld3;
_11.fld2.fld6 = (-2927570960846738568_i64);
_11.fld2.fld2 = _10.fld3;
_11.fld2.fld5.2 = 6_usize as u8;
_11.fld2.fld5.1 = 224567120027771930758580452902870458822_u128 as i16;
_12.fld1.fld0 = _11.fld5.fld4.0 as u32;
_12.fld1.fld3 = [_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0];
_12.fld1.fld4 = _10.fld4 | _10.fld4;
_11.fld2.fld5.2 = _12.fld1.fld4 as u8;
_11.fld2.fld5.0 = '\u{a7b77}' as u16;
_12.fld5.0 = core::ptr::addr_of!(_12.fld1.fld0);
_11.fld2.fld4 = [_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0];
RET = 62838983159145463613463754037445701284_u128 + 18228531442133691964195710692605530351_u128;
_12.fld5.0 = core::ptr::addr_of!(_12.fld1.fld0);
RET = 300030608426429407465995828736786471308_u128 << _12.fld1.fld0;
_11.fld2.fld5.3 = 119689477233122186762494077047242525634_u128 as i8;
_11.fld6.1.2 = _12.fld0.1.2 / 54_u8;
_11.fld4 = (_11.fld6,);
_17.0.1 = _11.fld6.1;
match _12.fld0.1.0 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
56575 => bb9,
_ => bb8
}
}
bb4 = {
_11.fld4.0.1.3 = 46994574897023543367262366045979729428_i128 as i8;
_11.fld2.fld6 = -493451051552754997_i64;
RET = 341999013_u32 as u128;
_11.fld2.fld2 = [3438964662_u32,3855636100_u32,284270355_u32,1678249458_u32,477706180_u32];
_11.fld6.0 = (-9223372036854775808_isize);
_12.fld0.1.1 = _6;
_10.fld2 = [_11.fld6.0,_11.fld6.0,_11.fld6.0,_11.fld6.0,_11.fld6.0,_11.fld6.0];
_11.fld5.fld2.3 = !_2;
_12.fld0.1 = (_9, _6, 87_u8, _8);
_12.fld3 = _11.fld2.fld6 as f32;
_11.fld5.fld3 = core::ptr::addr_of_mut!(_11.fld4.0);
_11.fld4.0.1.0 = _9;
_6 = -_12.fld0.1.1;
_12.fld0.0 = _12.fld0.1.2 as isize;
_11.fld4.0 = (_11.fld6.0, _12.fld0.1);
_11.fld2.fld0 = _4;
_11.fld6.1 = _11.fld4.0.1;
Goto(bb3)
}
bb5 = {
_10.fld3 = [2732624743_u32,49481305_u32,633321491_u32,1552700788_u32,3477992380_u32];
_8 = _6 as i8;
_6 = !_10.fld4;
_8 = 3052940616_u32 as i8;
_9 = 56575_u16;
_11.fld5.fld3 = core::ptr::addr_of_mut!(_11.fld4.0);
_11.fld5.fld2.1 = _6 & _10.fld4;
_11.fld2.fld1 = 5_usize as f64;
_11.fld5.fld6 = [_2,_2,_2,_2];
Call(_11.fld5.fld4 = fn2(_10.fld3, _10.fld2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_11.fld5.fld5 = -328921869_i32;
_12.fld1.fld3 = [_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0,_12.fld1.fld0];
_11.fld4.0.1 = _11.fld6.1;
_4 = _1 ^ _1;
_12.fld1.fld1 = core::ptr::addr_of!(_18);
_12.fld1.fld4 = !_12.fld0.1.1;
_11.fld2.fld6 = _11.fld5.fld4.0 as i64;
_17.0.1.1 = _11.fld2.fld5.1;
_11.fld4.0 = (_12.fld0.0, _11.fld6.1);
_11.fld5.fld2.2 = _12.fld0.1.0 as u8;
_10.fld2 = [_12.fld0.0,_11.fld4.0.0,_11.fld4.0.0,_11.fld6.0,_12.fld0.0,_12.fld0.0];
_1 = !_3;
match _11.fld6.1.0 {
56575 => bb10,
_ => bb5
}
}
bb10 = {
_11.fld4.0.1.3 = -_11.fld2.fld5.3;
_11.fld4.0.1.2 = 209720585966228162484852768003433500668_u128 as u8;
_11.fld2.fld1 = -_11.fld5.fld4.1;
_12.fld0.1 = (_17.0.1.0, _11.fld6.1.1, _17.0.1.2, _11.fld2.fld5.3);
_11.fld5.fld2.0 = !_11.fld4.0.1.0;
_11.fld6.0 = _8 as isize;
_5 = [_11.fld5.fld4.0];
_21 = [_11.fld5.fld4.0];
_3 = _4;
_11.fld5.fld4.1 = -_11.fld2.fld1;
_1 = !_4;
_11.fld2.fld1 = _11.fld5.fld4.1;
_11.fld6.1.0 = _17.0.1.0;
_6 = _11.fld2.fld5.1;
_11.fld5.fld2.1 = _12.fld0.1.1;
_17.0.0 = -_11.fld4.0.0;
Goto(bb11)
}
bb11 = {
_4 = _3 & _3;
_17.0.1.1 = _11.fld6.1.1;
_11.fld2.fld6 = -(-3694667457761012334_i64);
_13 = _11.fld2.fld5.3 as u16;
_12.fld4 = core::ptr::addr_of_mut!(_27);
_11.fld5.fld2.2 = !_12.fld0.1.2;
_23.fld6 = [_17.0.1.3];
_11.fld4.0.1.3 = '\u{1d61c}' as i8;
_12.fld4 = core::ptr::addr_of_mut!(_27);
_12.fld1.fld1 = core::ptr::addr_of!(_18);
_26 = _11.fld2.fld6 as i16;
Call(_23.fld3 = fn4(_17.0.1.1, _12.fld5.0, _11.fld5.fld3, _17.0, _11.fld5.fld3, _11.fld4, _13, _4, _12.fld1.fld3, _17.0, _11.fld6.0, _12.fld0, _12.fld5), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_19 = [_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0];
_24 = !_12.fld0.0;
_23.fld7 = [_11.fld5.fld4.0];
_11.fld5.fld4.1 = _11.fld2.fld6 as f64;
_19 = [_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0,_11.fld5.fld4.0];
_12.fld0 = _17.0;
_11.fld4.0.1.2 = _12.fld0.1.2 ^ _12.fld0.1.2;
_27 = _11.fld5.fld4.0 as i128;
_23.fld5 = [_27,_27];
Goto(bb13)
}
bb13 = {
_22 = _11.fld2.fld5.0;
_11.fld6.1 = (_17.0.1.0, _11.fld4.0.1.1, _11.fld4.0.1.2, _11.fld2.fld5.3);
_17.0.1.3 = _11.fld5.fld5 as i8;
_12.fld4 = core::ptr::addr_of_mut!(_27);
_11.fld2.fld5.3 = !_11.fld5.fld2.3;
_11.fld4.0.0 = _11.fld5.fld5 as isize;
match _11.fld4.0.1.0 {
0 => bb1,
1 => bb2,
2 => bb11,
3 => bb8,
4 => bb10,
5 => bb6,
56575 => bb14,
_ => bb12
}
}
bb14 = {
_11.fld2.fld5.3 = !_11.fld6.1.3;
_23.fld5 = [_27,_27];
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(1_usize, 6_usize, Move(_6), 1_usize, Move(_1), 13_usize, Move(_13), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(1_usize, 24_usize, Move(_24), 9_usize, Move(_9), 4_usize, Move(_4), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [u32; 5],mut _2: [isize; 6],mut _3: i16) -> (u64, f64) {
mir! {
type RET = (u64, f64);
let _4: ((isize, (u16, i16, u8, i8)),);
let _5: char;
let _6: ([i8; 1],);
let _7: [isize; 6];
let _8: f32;
let _9: u64;
let _10: [u32; 5];
let _11: Adt52;
let _12: [i16; 1];
let _13: Adt52;
let _14: (u16, i16, u8, i8);
let _15: [i16; 1];
let _16: u128;
let _17: (u16, i16, u8, i8);
let _18: u8;
let _19: *const [u8; 5];
let _20: (char, f64);
let _21: ();
let _22: ();
{
RET.1 = (-21_i8) as f64;
_4.0.1.3 = !102_i8;
_4.0.0 = -9223372036854775807_isize;
_4.0.0 = '\u{2fcf8}' as isize;
_4.0.1.3 = '\u{501b}' as i8;
_1 = [4092703345_u32,308295027_u32,3058138624_u32,957215908_u32,536311212_u32];
RET.0 = 2950748735628131297597045489467593558_u128 as u64;
_4.0.1.1 = _3;
RET.1 = 241831418533400963452415739066521665877_u128 as f64;
_5 = '\u{eef5b}';
_1 = [1096120604_u32,778239738_u32,326356234_u32,1814960677_u32,876966514_u32];
_3 = !_4.0.1.1;
_4.0.1.2 = 79_u8 & 160_u8;
_4.0.1 = (43579_u16, _3, 167_u8, 58_i8);
RET.1 = 2569576938_u32 as f64;
RET.1 = _4.0.1.1 as f64;
_4.0.1.0 = 42417_u16;
_4.0.1 = (40960_u16, _3, 68_u8, 30_i8);
RET.1 = 100050_u32 as f64;
_4.0.0 = 42_isize;
Call(_4.0.1.2 = fn3(_2, _5, _2, _4.0.0, _3, _4.0.0, _4.0.0, _1, _2, _2, _1, _4.0.0, _4.0.1.1, _4.0.1.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = [1632034103_u32,2317533731_u32,322364232_u32,912039868_u32,3869286127_u32];
RET.0 = !7552543241775904277_u64;
_4.0.1 = (29157_u16, _3, 180_u8, (-52_i8));
_5 = '\u{f0ef0}';
_4.0.1.1 = !_3;
RET.0 = 4813063825615310783_u64 >> _3;
_4.0.1.0 = 32705_u16 % 23617_u16;
_4.0.1.0 = !18197_u16;
_6.0 = [_4.0.1.3];
RET.1 = (-96356013841513620477855683162428438303_i128) as f64;
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_4.0.0 = 9223372036854775807_isize;
RET.1 = _4.0.1.0 as f64;
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_4.0.1 = (39217_u16, _3, 58_u8, (-85_i8));
_4.0.1.3 = 53_i8;
_1 = [1592164568_u32,535449586_u32,1022725275_u32,4128760084_u32,649845494_u32];
RET.0 = 7098279045243545675_u64;
_8 = 122732274_u32 as f32;
_4.0.0 = (-26038351092855025337777259230181608611_i128) as isize;
_2 = _7;
RET.0 = 4856079465432667949_u64;
match _4.0.1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
58 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_4.0.0 = 6_usize as isize;
_2 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_5 = '\u{8e64f}';
_2 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_1 = [3307369142_u32,503976851_u32,3676665157_u32,3781692134_u32,2457042196_u32];
_4.0.0 = 13037915494969293576477082030283212390_u128 as isize;
RET.1 = (-1763035512_i32) as f64;
_5 = '\u{cb1f7}';
_9 = (-24907531_i32) as u64;
_11.fld3 = [_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2];
_11.fld3 = [_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2];
_11.fld2 = [2711239025_u32,4288938778_u32,3691966377_u32,263463620_u32,621150159_u32];
_4.0.1.2 = _4.0.1.3 as u8;
_11.fld1 = _4.0.1.2 as f64;
_11.fld0 = !true;
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_10 = [3205938135_u32,2822193378_u32,3389100134_u32,2728637141_u32,2667671302_u32];
_10 = [2157609031_u32,1134594244_u32,4016893299_u32,1739639873_u32,3128893097_u32];
_11.fld5.1 = !_4.0.1.1;
_4.0.1 = (47193_u16, _11.fld5.1, 8_u8, (-98_i8));
RET.1 = _11.fld1;
_2 = _7;
RET.1 = _11.fld1 * _11.fld1;
_9 = _4.0.1.3 as u64;
_6.0 = [_4.0.1.3];
Goto(bb9)
}
bb9 = {
_11.fld5.0 = _4.0.1.0;
_5 = '\u{481bb}';
_13.fld5.1 = _4.0.1.1 & _11.fld5.1;
_11.fld6 = (-352251489706683161_i64);
RET.0 = !_9;
_12 = [_11.fld5.1];
_13.fld6 = 270854558_u32 as i64;
_11.fld4 = [_9,_9,_9,_9,_9,_9,_9,_9];
_14.0 = _11.fld5.0 / 51871_u16;
_5 = '\u{5fd8f}';
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
Goto(bb10)
}
bb10 = {
_5 = '\u{6d4f9}';
_4.0.1.1 = _13.fld5.1 - _13.fld5.1;
_12 = [_13.fld5.1];
_11.fld5.1 = _4.0.1.1 * _3;
match _4.0.1.2 {
0 => bb4,
1 => bb7,
2 => bb11,
8 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_6.0 = [_4.0.1.3];
match _4.0.1.0 {
0 => bb12,
1 => bb2,
2 => bb5,
3 => bb4,
4 => bb14,
47193 => bb16,
_ => bb15
}
}
bb14 = {
_1 = [1632034103_u32,2317533731_u32,322364232_u32,912039868_u32,3869286127_u32];
RET.0 = !7552543241775904277_u64;
_4.0.1 = (29157_u16, _3, 180_u8, (-52_i8));
_5 = '\u{f0ef0}';
_4.0.1.1 = !_3;
RET.0 = 4813063825615310783_u64 >> _3;
_4.0.1.0 = 32705_u16 % 23617_u16;
_4.0.1.0 = !18197_u16;
_6.0 = [_4.0.1.3];
RET.1 = (-96356013841513620477855683162428438303_i128) as f64;
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_4.0.0 = 9223372036854775807_isize;
RET.1 = _4.0.1.0 as f64;
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_4.0.1 = (39217_u16, _3, 58_u8, (-85_i8));
_4.0.1.3 = 53_i8;
_1 = [1592164568_u32,535449586_u32,1022725275_u32,4128760084_u32,649845494_u32];
RET.0 = 7098279045243545675_u64;
_8 = 122732274_u32 as f32;
_4.0.0 = (-26038351092855025337777259230181608611_i128) as isize;
_2 = _7;
RET.0 = 4856079465432667949_u64;
match _4.0.1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
58 => bb8,
_ => bb7
}
}
bb15 = {
_4.0.0 = 6_usize as isize;
_2 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_5 = '\u{8e64f}';
_2 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_1 = [3307369142_u32,503976851_u32,3676665157_u32,3781692134_u32,2457042196_u32];
_4.0.0 = 13037915494969293576477082030283212390_u128 as isize;
RET.1 = (-1763035512_i32) as f64;
_5 = '\u{cb1f7}';
_9 = (-24907531_i32) as u64;
_11.fld3 = [_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2];
_11.fld3 = [_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2,_4.0.1.2];
_11.fld2 = [2711239025_u32,4288938778_u32,3691966377_u32,263463620_u32,621150159_u32];
_4.0.1.2 = _4.0.1.3 as u8;
_11.fld1 = _4.0.1.2 as f64;
_11.fld0 = !true;
_7 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_10 = [3205938135_u32,2822193378_u32,3389100134_u32,2728637141_u32,2667671302_u32];
_10 = [2157609031_u32,1134594244_u32,4016893299_u32,1739639873_u32,3128893097_u32];
_11.fld5.1 = !_4.0.1.1;
_4.0.1 = (47193_u16, _11.fld5.1, 8_u8, (-98_i8));
RET.1 = _11.fld1;
_2 = _7;
RET.1 = _11.fld1 * _11.fld1;
_9 = _4.0.1.3 as u64;
_6.0 = [_4.0.1.3];
Goto(bb9)
}
bb16 = {
RET.0 = (-55013936891457849609919818995079380671_i128) as u64;
_13.fld2 = [310576997_u32,2929725374_u32,3539221021_u32,3777752712_u32,591151811_u32];
_17.2 = 148067903227355141038964724948765153774_i128 as u8;
RET.0 = !_9;
_11.fld5.2 = _4.0.1.2;
_13.fld5 = (_4.0.1.0, _11.fld5.1, _11.fld5.2, _4.0.1.3);
_6.0 = [_13.fld5.3];
_17.3 = _13.fld5.3;
_4.0.0 = 10491977577567883213_usize as isize;
_11.fld4 = [_9,_9,_9,_9,_9,_9,_9,_9];
_17.3 = _13.fld5.3;
_13.fld2 = [1696109524_u32,122544167_u32,1794920406_u32,2002251012_u32,1319411692_u32];
RET.0 = !_9;
_12 = [_13.fld5.1];
_11.fld1 = _11.fld6 as f64;
_13.fld5.3 = _4.0.1.3;
_17.3 = _9 as i8;
_14.0 = _5 as u16;
_2 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_14 = _13.fld5;
_13.fld5 = (_14.0, _11.fld5.1, _11.fld5.2, _4.0.1.3);
_11.fld5 = (_14.0, _4.0.1.1, _13.fld5.2, _14.3);
_11.fld6 = -_13.fld6;
_4.0 = (39_isize, _14);
_8 = _11.fld1 as f32;
_11.fld0 = !true;
Goto(bb17)
}
bb17 = {
Call(_21 = dump_var(2_usize, 12_usize, Move(_12), 7_usize, Move(_7), 9_usize, Move(_9), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_21 = dump_var(2_usize, 3_usize, Move(_3), 22_usize, _22, 22_usize, _22, 22_usize, _22), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [isize; 6],mut _2: char,mut _3: [isize; 6],mut _4: isize,mut _5: i16,mut _6: isize,mut _7: isize,mut _8: [u32; 5],mut _9: [isize; 6],mut _10: [isize; 6],mut _11: [u32; 5],mut _12: isize,mut _13: i16,mut _14: i16) -> u8 {
mir! {
type RET = u8;
let _15: [u64; 8];
let _16: i16;
let _17: isize;
let _18: f64;
let _19: f32;
let _20: ([u32; 5], i128, (u16, i16), i8);
let _21: i16;
let _22: ([i8; 1],);
let _23: Adt61;
let _24: char;
let _25: [u32; 5];
let _26: *mut i128;
let _27: f32;
let _28: [usize; 7];
let _29: usize;
let _30: f32;
let _31: Adt53;
let _32: i16;
let _33: Adt51;
let _34: ();
let _35: ();
{
_6 = !_4;
_13 = 204_u8 as i16;
_5 = false as i16;
_7 = _4 ^ _4;
_11 = [2719562162_u32,1596407673_u32,2615950726_u32,3235981509_u32,3178048667_u32];
_8 = [3340887832_u32,3302281767_u32,2491009982_u32,3497657436_u32,2559277735_u32];
_9 = [_7,_6,_4,_7,_12,_7];
_4 = _7 + _7;
_3 = [_4,_4,_4,_7,_4,_4];
_10 = _1;
_2 = '\u{73b8f}';
_8 = [2253185211_u32,643659982_u32,2953945245_u32,1546176993_u32,110282588_u32];
_15 = [16015918868467393053_u64,7532499083137285610_u64,8591275757836089147_u64,8979641744952559659_u64,1560998271694970732_u64,8681399675326420733_u64,17580112418269293662_u64,7168645156591434500_u64];
RET = _5 as u8;
_8 = [1107852796_u32,2910519770_u32,2358859646_u32,2767393321_u32,3680331996_u32];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
42 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_11 = [2109695515_u32,2610162875_u32,3455787937_u32,3223959509_u32,1399065695_u32];
_8 = [2703271293_u32,647460880_u32,3880057357_u32,1774893172_u32,3057599665_u32];
_11 = [777456120_u32,3758451503_u32,1540150890_u32,3732515209_u32,178325131_u32];
_6 = 42105775261831213758205723779250712593_u128 as isize;
_9 = [_4,_7,_12,_4,_12,_12];
_14 = _13 + _13;
_8 = _11;
_16 = -_5;
_7 = 7618373728006829730_u64 as isize;
_1 = [_6,_12,_12,_4,_4,_12];
_3 = [_4,_6,_4,_4,_6,_4];
_10 = [_6,_6,_4,_4,_4,_6];
_16 = _14;
_17 = _4;
_1 = [_4,_4,_4,_17,_4,_12];
_7 = _17;
_1 = [_7,_4,_4,_7,_7,_17];
_15 = [4378693419472577581_u64,11010593821282588268_u64,10163314969686319636_u64,6163199548575995254_u64,15183058642507941756_u64,7279761089865291396_u64,16797616401111685970_u64,16744505376482893947_u64];
_3 = [_17,_17,_4,_4,_6,_6];
_14 = 4_usize as i16;
_1 = [_7,_17,_7,_17,_7,_7];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
42 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_17 = 1555068792554963436_u64 as isize;
_9 = [_6,_7,_17,_4,_12,_17];
Goto(bb9)
}
bb9 = {
_17 = 150_u8 as isize;
_4 = _7;
_13 = _16;
_8 = [2422165354_u32,227406094_u32,2845933128_u32,3716412834_u32,1741588296_u32];
_20.2 = (31195_u16, _14);
_16 = 5458439065944253802_usize as i16;
_13 = _16;
_19 = 160_u8 as f32;
_5 = _20.2.0 as i16;
_20.1 = 154215445007310082441507039621199007486_i128;
_20.1 = (-63_i8) as i128;
_17 = _4;
Goto(bb10)
}
bb10 = {
_20.2 = (37142_u16, _13);
_3 = [_17,_4,_4,_17,_17,_7];
_20.2.0 = 42166_u16 << _17;
_14 = !_5;
_1 = _3;
_23.fld2.fld2.1 = (-6667413213769864183_i64) as i16;
_23.fld2.fld0 = !18279552309140760894_usize;
_22.0 = [(-127_i8)];
_23.fld3 = _23.fld2.fld0 % 1_usize;
_23.fld1.fld5 = core::ptr::addr_of!(_23.fld0);
_23.fld2.fld4.0 = !18112598336132947999_u64;
_23.fld2.fld2.2 = !88_u8;
_23.fld2.fld6 = [39_i8,(-77_i8),127_i8,44_i8];
_23.fld1.fld4 = _20.2.1;
_23.fld2.fld4.0 = 9344813490627731631_u64;
_23.fld7.fld0 = [_23.fld2.fld0,_23.fld2.fld0,_23.fld2.fld0,_23.fld2.fld0,_23.fld3,_23.fld3,_23.fld2.fld0];
_23.fld1.fld5 = core::ptr::addr_of!(_23.fld0);
_23.fld6 = [_7,_7,_4,_4,_7,_17,_7];
_24 = _2;
_10 = _3;
_23.fld2.fld0 = _23.fld3 % 131277528939539331_usize;
_20.2 = (24564_u16, _5);
_20.2.0 = 55981_u16;
_10 = _1;
_23.fld2.fld2 = (_20.2.0, _23.fld1.fld4, 36_u8, (-79_i8));
_23.fld4 = _22;
_23.fld1.fld5 = core::ptr::addr_of!(_23.fld0);
match _23.fld2.fld2.2 {
36 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_23.fld1.fld3 = [1105554953_u32,1463514302_u32,3191922412_u32,4065077472_u32,417862030_u32];
_23.fld4 = _22;
_3 = [_7,_6,_4,_17,_4,_4];
_7 = _23.fld3 as isize;
_23.fld2.fld4.1 = (-4259009278949888596_i64) as f64;
Goto(bb13)
}
bb13 = {
_17 = _24 as isize;
_23.fld7.fld0 = [_23.fld3,_23.fld2.fld0,_23.fld3,_23.fld3,_23.fld3,_23.fld3,_23.fld2.fld0];
match _23.fld2.fld2.3 {
0 => bb1,
1 => bb2,
2 => bb11,
3 => bb4,
4 => bb7,
5 => bb14,
6 => bb15,
340282366920938463463374607431768211377 => bb17,
_ => bb16
}
}
bb14 = {
_23.fld1.fld3 = [1105554953_u32,1463514302_u32,3191922412_u32,4065077472_u32,417862030_u32];
_23.fld4 = _22;
_3 = [_7,_6,_4,_17,_4,_4];
_7 = _23.fld3 as isize;
_23.fld2.fld4.1 = (-4259009278949888596_i64) as f64;
Goto(bb13)
}
bb15 = {
_11 = [2109695515_u32,2610162875_u32,3455787937_u32,3223959509_u32,1399065695_u32];
_8 = [2703271293_u32,647460880_u32,3880057357_u32,1774893172_u32,3057599665_u32];
_11 = [777456120_u32,3758451503_u32,1540150890_u32,3732515209_u32,178325131_u32];
_6 = 42105775261831213758205723779250712593_u128 as isize;
_9 = [_4,_7,_12,_4,_12,_12];
_14 = _13 + _13;
_8 = _11;
_16 = -_5;
_7 = 7618373728006829730_u64 as isize;
_1 = [_6,_12,_12,_4,_4,_12];
_3 = [_4,_6,_4,_4,_6,_4];
_10 = [_6,_6,_4,_4,_4,_6];
_16 = _14;
_17 = _4;
_1 = [_4,_4,_4,_17,_4,_12];
_7 = _17;
_1 = [_7,_4,_4,_7,_7,_17];
_15 = [4378693419472577581_u64,11010593821282588268_u64,10163314969686319636_u64,6163199548575995254_u64,15183058642507941756_u64,7279761089865291396_u64,16797616401111685970_u64,16744505376482893947_u64];
_3 = [_17,_17,_4,_4,_6,_6];
_14 = 4_usize as i16;
_1 = [_7,_17,_7,_17,_7,_7];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
42 => bb8,
_ => bb7
}
}
bb16 = {
_20.2 = (37142_u16, _13);
_3 = [_17,_4,_4,_17,_17,_7];
_20.2.0 = 42166_u16 << _17;
_14 = !_5;
_1 = _3;
_23.fld2.fld2.1 = (-6667413213769864183_i64) as i16;
_23.fld2.fld0 = !18279552309140760894_usize;
_22.0 = [(-127_i8)];
_23.fld3 = _23.fld2.fld0 % 1_usize;
_23.fld1.fld5 = core::ptr::addr_of!(_23.fld0);
_23.fld2.fld4.0 = !18112598336132947999_u64;
_23.fld2.fld2.2 = !88_u8;
_23.fld2.fld6 = [39_i8,(-77_i8),127_i8,44_i8];
_23.fld1.fld4 = _20.2.1;
_23.fld2.fld4.0 = 9344813490627731631_u64;
_23.fld7.fld0 = [_23.fld2.fld0,_23.fld2.fld0,_23.fld2.fld0,_23.fld2.fld0,_23.fld3,_23.fld3,_23.fld2.fld0];
_23.fld1.fld5 = core::ptr::addr_of!(_23.fld0);
_23.fld6 = [_7,_7,_4,_4,_7,_17,_7];
_24 = _2;
_10 = _3;
_23.fld2.fld0 = _23.fld3 % 131277528939539331_usize;
_20.2 = (24564_u16, _5);
_20.2.0 = 55981_u16;
_10 = _1;
_23.fld2.fld2 = (_20.2.0, _23.fld1.fld4, 36_u8, (-79_i8));
_23.fld4 = _22;
_23.fld1.fld5 = core::ptr::addr_of!(_23.fld0);
match _23.fld2.fld2.2 {
36 => bb12,
_ => bb11
}
}
bb17 = {
_26 = core::ptr::addr_of_mut!(_20.1);
_31.fld0.1.3 = _23.fld2.fld2.3 - _23.fld2.fld2.3;
_23.fld1.fld4 = _20.2.1;
_23.fld1.fld0 = !1696298046_u32;
_14 = _5 + _23.fld1.fld4;
_31.fld3 = _19;
Goto(bb18)
}
bb18 = {
Call(_34 = dump_var(3_usize, 13_usize, Move(_13), 7_usize, Move(_7), 8_usize, Move(_8), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_34 = dump_var(3_usize, 5_usize, Move(_5), 1_usize, Move(_1), 22_usize, Move(_22), 16_usize, Move(_16)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_34 = dump_var(3_usize, 9_usize, Move(_9), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i16,mut _2: *const u32,mut _3: *mut (isize, (u16, i16, u8, i8)),mut _4: (isize, (u16, i16, u8, i8)),mut _5: *mut (isize, (u16, i16, u8, i8)),mut _6: ((isize, (u16, i16, u8, i8)),),mut _7: u16,mut _8: bool,mut _9: [u32; 5],mut _10: (isize, (u16, i16, u8, i8)),mut _11: isize,mut _12: (isize, (u16, i16, u8, i8)),mut _13: (*const u32,)) -> [usize; 7] {
mir! {
type RET = [usize; 7];
let _14: Adt64;
let _15: (u64, f64);
let _16: *const u32;
let _17: i32;
let _18: u8;
let _19: (char, f64);
let _20: i16;
let _21: [i16; 1];
let _22: u8;
let _23: [bool; 4];
let _24: f64;
let _25: i32;
let _26: [isize; 7];
let _27: i64;
let _28: (char, f64);
let _29: isize;
let _30: *mut [i16; 1];
let _31: f64;
let _32: ();
let _33: ();
{
_6.0 = (_4.0, _10.1);
(*_5).1.2 = !_6.0.1.2;
_10.1.3 = (*_3).1.3 & (*_3).1.3;
_8 = false | true;
(*_5).0 = _6.0.0;
_12.1 = ((*_3).1.0, _4.1.1, _4.1.2, _10.1.3);
_4.1.2 = !_12.1.2;
(*_3).1.0 = 57906335506730493397237734073342701198_u128 as u16;
(*_3).1.1 = _1 - _1;
RET = [3699379516323148523_usize,8253841269659437978_usize,1_usize,5_usize,14483983161221083815_usize,11048297977197133565_usize,0_usize];
(*_3).1.2 = !_4.1.2;
_12.1.1 = _6.0.1.1;
_6.0.0 = _10.0;
(*_3) = (_10.0, _6.0.1);
(*_5).0 = _12.0;
_6.0.1.3 = !(*_5).1.3;
_4.1 = (_6.0.1.0, _12.1.1, _12.1.2, _10.1.3);
(*_2) = !559753593_u32;
_4.1.3 = (*_2) as i8;
(*_5).1 = (_10.1.0, _10.1.1, _12.1.2, _10.1.3);
_14.fld6.1.2 = _10.1.2;
(*_5).1.3 = (-91038742193253362546123721700271067878_i128) as i8;
match _10.1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
56575 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
(*_5).1 = _10.1;
(*_5).1.2 = !_14.fld6.1.2;
_14.fld2.fld5.3 = !_4.1.3;
_14.fld4 = ((*_5),);
_9 = [(*_2),(*_2),(*_2),(*_2),(*_2)];
_14.fld3 = _14.fld2.fld5.3;
_14.fld2.fld0 = _8;
_12.1.3 = (*_3).1.3;
_4.1.2 = !_6.0.1.2;
_5 = core::ptr::addr_of_mut!((*_5));
(*_3).1.1 = _12.1.1;
_6.0.1.3 = (-86419394307775402079158557524308317942_i128) as i8;
_12.1.2 = _14.fld6.1.2;
_12.1 = ((*_5).1.0, (*_5).1.1, _4.1.2, _10.1.3);
_3 = core::ptr::addr_of_mut!(_14.fld4.0);
_14.fld4.0.0 = 18291381728675981483_u64 as isize;
_19.1 = _10.1.1 as f64;
(*_3).1.2 = !_6.0.1.2;
(*_3).1.3 = -_6.0.1.3;
(*_3).0 = (*_5).0 >> _12.0;
(*_5).1.0 = _10.1.0 ^ (*_3).1.0;
_14.fld2.fld5 = _10.1;
(*_5).1.0 = (-756803634512299623_i64) as u16;
_4.1.2 = !_6.0.1.2;
_9 = [(*_2),(*_2),(*_2),(*_2),(*_2)];
RET = [1_usize,6434759067318953608_usize,2_usize,7664263181414363349_usize,5_usize,5426356630724441063_usize,2182966404873583863_usize];
_14.fld6 = (_14.fld4.0.0, (*_5).1);
(*_3).0 = 6271479407044549114_u64 as isize;
match _12.1.0 {
0 => bb8,
1 => bb9,
2 => bb10,
56575 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_4.1.0 = _7;
(*_5).1 = _14.fld4.0.1;
_14.fld5.fld5 = '\u{c1fab}' as i32;
_14.fld5.fld2.1 = _14.fld2.fld5.1 & _6.0.1.1;
_14.fld6.1 = _10.1;
_14.fld2.fld1 = _19.1;
_14.fld5.fld4.1 = _19.1 * _14.fld2.fld1;
_19.0 = '\u{d9d4d}';
_14.fld5.fld2.3 = (-160361245230798300777268584092584418276_i128) as i8;
_10.1.3 = (*_3).1.3 - _6.0.1.3;
(*_2) = 233952250_u32 % 2388318762_u32;
(*_5).0 = _4.0;
_3 = _5;
_11 = -_10.0;
_21 = [(*_5).1.1];
_14.fld2.fld1 = _14.fld5.fld5 as f64;
(*_5).1.1 = _12.1.1 - _10.1.1;
_14.fld6.0 = 4371392318116999716_usize as isize;
_4.1.2 = (*_5).1.2;
_14.fld2.fld5.0 = _4.1.0;
_3 = core::ptr::addr_of_mut!((*_3));
_13 = (_2,);
_19.0 = '\u{33702}';
_1 = !(*_3).1.1;
_14.fld6.1.2 = _19.1 as u8;
_18 = _6.0.1.2 | _10.1.2;
_14.fld6.1.1 = _1;
_17 = _14.fld5.fld5;
Call((*_3).1.2 = fn5(_14.fld4.0.1.0, _6.0.1.3, _6.0.1.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_17 = _14.fld5.fld5 * _14.fld5.fld5;
_2 = core::ptr::addr_of!((*_2));
_4.1.2 = _10.1.2;
_11 = _19.0 as isize;
(*_3).1.1 = _19.0 as i16;
(*_5).1.1 = !_14.fld2.fld5.1;
_14.fld5.fld2 = (_6.0.1.0, _4.1.1, _4.1.2, (*_3).1.3);
_4.1.1 = !(*_3).1.1;
_14.fld6.1 = _6.0.1;
_10.1.3 = _12.1.3 >> _14.fld4.0.1.2;
(*_5).1.3 = (*_5).1.0 as i8;
_14.fld5.fld2.2 = _14.fld5.fld2.0 as u8;
_10.1.0 = !_14.fld4.0.1.0;
_13.0 = core::ptr::addr_of!((*_2));
_13 = (_2,);
_23 = [_14.fld2.fld0,_14.fld2.fld0,_14.fld2.fld0,_14.fld2.fld0];
_14.fld5.fld2.1 = _12.1.1;
_6.0.1.1 = _14.fld6.1.1 & _10.1.1;
_4.1.1 = _14.fld2.fld5.1 + _14.fld6.1.1;
(*_3).1.0 = 634380491964914440_i64 as u16;
_15.0 = 424560595258766475_u64;
Goto(bb14)
}
bb14 = {
_4.0 = _14.fld4.0.0;
_6.0.1.3 = !_12.1.3;
_10.1.0 = _14.fld5.fld2.0;
(*_5) = (_12.0, _4.1);
_14.fld5.fld5 = _17 * _17;
_14.fld2.fld3 = [_18,(*_5).1.2,_6.0.1.2,_18,_18];
_12.1.1 = _4.1.1 * _4.1.1;
(*_3).1.0 = _14.fld6.1.0 & _4.1.0;
_26 = [(*_3).0,(*_5).0,_10.0,(*_3).0,_10.0,(*_3).0,_10.0];
(*_5) = (_10.0, _10.1);
(*_3).1.1 = _19.0 as i16;
_10.1.3 = (*_5).1.3 + _14.fld3;
_4.1.2 = _14.fld2.fld5.2;
_14.fld5.fld2.3 = 740828201117738284_i64 as i8;
(*_5) = _14.fld4.0;
_14.fld6.0 = _12.0;
_14.fld4.0.1.1 = !_6.0.1.1;
_12 = (*_5);
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(4_usize, 12_usize, Move(_12), 6_usize, Move(_6), 9_usize, Move(_9), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(4_usize, 26_usize, Move(_26), 7_usize, Move(_7), 11_usize, Move(_11), 33_usize, _33), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u16,mut _2: i8,mut _3: i16) -> u8 {
mir! {
type RET = u8;
let _4: char;
let _5: Adt49;
let _6: [u64; 1];
let _7: f32;
let _8: Adt59;
let _9: u8;
let _10: char;
let _11: Adt54;
let _12: isize;
let _13: char;
let _14: [usize; 7];
let _15: f64;
let _16: [u32; 5];
let _17: (u64, f64);
let _18: f32;
let _19: u64;
let _20: [i8; 4];
let _21: u64;
let _22: Adt62;
let _23: [u64; 1];
let _24: [isize; 7];
let _25: f64;
let _26: ();
let _27: ();
{
_3 = 10196_i16;
_1 = 20446_u16 | 32108_u16;
_3 = 12780_i16;
_2 = 19_i8;
_3 = 15_u8 as i16;
RET = 221_u8 / 158_u8;
_2 = 98_i8;
_3 = !(-17024_i16);
_5.fld0 = [1006200999289836582_usize,7575496899382347916_usize,4_usize,6070101983226617246_usize,1751612895619500726_usize,9911398057077916916_usize,3_usize];
RET = 1959376462_i32 as u8;
RET = 187_u8;
_6 = [7585811273757141750_u64];
_6 = [1648975194395287860_u64];
Goto(bb1)
}
bb1 = {
RET = 11_u8;
_5.fld0 = [16712754436512053058_usize,3769061622116165687_usize,9071169060214354443_usize,11223916657893422842_usize,5_usize,10668929599490417920_usize,3_usize];
_4 = '\u{319b0}';
_7 = 12322465747075471810372445286534171108_i128 as f32;
_7 = 60_isize as f32;
RET = 116_u8;
RET = !36_u8;
_6 = [13076467719041204818_u64];
_7 = _1 as f32;
_8.fld1 = [_3];
RET = 200_u8;
RET = 51426007667343113277954328493859422677_i128 as u8;
_8.fld0 = _5.fld0;
_8.fld1 = [_3];
_8.fld0 = _5.fld0;
_9 = 167_u8;
_5.fld0 = _8.fld0;
_3 = (-2443_i16);
_6 = [2244258343161043612_u64];
_7 = (-6601065852341822098_i64) as f32;
_4 = '\u{50435}';
RET = 3126089523_u32 as u8;
_1 = !11080_u16;
_5 = Adt49 { fld0: _8.fld0 };
_8.fld0 = [5_usize,16670984587750853869_usize,0_usize,0_usize,3_usize,0_usize,17167873681795573711_usize];
RET = _9;
_3 = _4 as i16;
Call(_5.fld0 = fn6(_9, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11.fld2 = _3 as i64;
_11.fld0.1.1 = _3;
_9 = 190_u8;
_11.fld0.0 = 9223372036854775807_isize;
_11.fld0.1 = (_1, _3, _9, _2);
_11.fld1 = core::ptr::addr_of!(_11.fld3);
_11.fld2 = !(-207258287077065868_i64);
_1 = !_11.fld0.1.0;
_11.fld0.0 = _9 as isize;
_8.fld1 = [_3];
_1 = _11.fld0.1.0;
_1 = _11.fld0.1.0 * _11.fld0.1.0;
_11.fld3 = 2456337149_u32 << _9;
_8.fld0 = _5.fld0;
RET = _11.fld0.1.2;
_13 = _4;
_11.fld0.1 = (_1, _3, _9, _2);
_11.fld2 = 7562351144307507586_i64 - (-1148712999604799808_i64);
_12 = _11.fld0.0;
_11.fld0.0 = _12 & _12;
_8.fld1 = [_11.fld0.1.1];
_11.fld0.1.1 = 3924675439259994022_u64 as i16;
_2 = _7 as i8;
Goto(bb3)
}
bb3 = {
_10 = _4;
_11.fld0.1 = (_1, _3, _9, _2);
_5.fld0 = [5_usize,10207953273411781033_usize,5143582138636860553_usize,7_usize,1_usize,17401024442087511671_usize,4_usize];
_2 = _11.fld0.1.3;
match _9 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
190 => bb12,
_ => bb11
}
}
bb4 = {
_11.fld2 = _3 as i64;
_11.fld0.1.1 = _3;
_9 = 190_u8;
_11.fld0.0 = 9223372036854775807_isize;
_11.fld0.1 = (_1, _3, _9, _2);
_11.fld1 = core::ptr::addr_of!(_11.fld3);
_11.fld2 = !(-207258287077065868_i64);
_1 = !_11.fld0.1.0;
_11.fld0.0 = _9 as isize;
_8.fld1 = [_3];
_1 = _11.fld0.1.0;
_1 = _11.fld0.1.0 * _11.fld0.1.0;
_11.fld3 = 2456337149_u32 << _9;
_8.fld0 = _5.fld0;
RET = _11.fld0.1.2;
_13 = _4;
_11.fld0.1 = (_1, _3, _9, _2);
_11.fld2 = 7562351144307507586_i64 - (-1148712999604799808_i64);
_12 = _11.fld0.0;
_11.fld0.0 = _12 & _12;
_8.fld1 = [_11.fld0.1.1];
_11.fld0.1.1 = 3924675439259994022_u64 as i16;
_2 = _7 as i8;
Goto(bb3)
}
bb5 = {
RET = 11_u8;
_5.fld0 = [16712754436512053058_usize,3769061622116165687_usize,9071169060214354443_usize,11223916657893422842_usize,5_usize,10668929599490417920_usize,3_usize];
_4 = '\u{319b0}';
_7 = 12322465747075471810372445286534171108_i128 as f32;
_7 = 60_isize as f32;
RET = 116_u8;
RET = !36_u8;
_6 = [13076467719041204818_u64];
_7 = _1 as f32;
_8.fld1 = [_3];
RET = 200_u8;
RET = 51426007667343113277954328493859422677_i128 as u8;
_8.fld0 = _5.fld0;
_8.fld1 = [_3];
_8.fld0 = _5.fld0;
_9 = 167_u8;
_5.fld0 = _8.fld0;
_3 = (-2443_i16);
_6 = [2244258343161043612_u64];
_7 = (-6601065852341822098_i64) as f32;
_4 = '\u{50435}';
RET = 3126089523_u32 as u8;
_1 = !11080_u16;
_5 = Adt49 { fld0: _8.fld0 };
_8.fld0 = [5_usize,16670984587750853869_usize,0_usize,0_usize,3_usize,0_usize,17167873681795573711_usize];
RET = _9;
_3 = _4 as i16;
Call(_5.fld0 = fn6(_9, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_8.fld0 = _5.fld0;
_16 = [_11.fld3,_11.fld3,_11.fld3,_11.fld3,_11.fld3];
_11.fld0.1 = (_1, _3, _9, _2);
_11.fld0.1 = (_1, _3, _9, _2);
_10 = _13;
Goto(bb13)
}
bb13 = {
_3 = 6_usize as i16;
_14 = _5.fld0;
_20 = [_2,_11.fld0.1.3,_2,_2];
_10 = _13;
_11.fld0.1 = (_1, _3, _9, _2);
_15 = 763153317_i32 as f64;
_11.fld0.1 = (_1, _3, _9, _2);
_1 = _11.fld0.1.0 | _11.fld0.1.0;
RET = !_11.fld0.1.2;
_18 = -_7;
Call(_22.fld1.fld5.2 = core::intrinsics::transmute(_11.fld0.1.2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_22.fld1.fld1 = _15;
_21 = !1937921431392431298_u64;
_14 = [3_usize,6340863555153739893_usize,2_usize,12310724649165145818_usize,1_usize,15229344932358858894_usize,3_usize];
_22.fld0 = [_22.fld1.fld5.2,_11.fld0.1.2,_9,_11.fld0.1.2,_11.fld0.1.2];
_3 = _12 as i16;
_1 = _11.fld0.1.0 ^ _11.fld0.1.0;
_8.fld1 = [_11.fld0.1.1];
_24 = [_11.fld0.0,_12,_12,_11.fld0.0,_11.fld0.0,_11.fld0.0,_11.fld0.0];
_22.fld2 = [922522842_i32,(-2011952797_i32),(-1692846020_i32),1013747302_i32,(-1249478104_i32)];
_19 = _11.fld0.1.1 as u64;
_22.fld5 = _7 as i32;
_11.fld0.1.2 = _9;
_1 = false as u16;
_22.fld1.fld2 = [_11.fld3,_11.fld3,_11.fld3,_11.fld3,_11.fld3];
_17 = (_19, _15);
_1 = !_11.fld0.1.0;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(5_usize, 1_usize, Move(_1), 21_usize, Move(_21), 19_usize, Move(_19), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(5_usize, 6_usize, Move(_6), 4_usize, Move(_4), 10_usize, Move(_10), 27_usize, _27), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: u8,mut _2: u8) -> [usize; 7] {
mir! {
type RET = [usize; 7];
let _3: u128;
let _4: ((isize, (u16, i16, u8, i8)),);
let _5: [usize; 7];
let _6: Adt52;
let _7: f64;
let _8: u8;
let _9: [i128; 2];
let _10: [isize; 6];
let _11: ((isize, (u16, i16, u8, i8)),);
let _12: Adt55;
let _13: char;
let _14: Adt65;
let _15: [i128; 2];
let _16: f32;
let _17: Adt52;
let _18: Adt59;
let _19: Adt53;
let _20: ();
let _21: ();
{
RET = [2_usize,7_usize,1_usize,17962554321454642580_usize,8236597773889605250_usize,7_usize,2_usize];
_1 = !_2;
_1 = !_2;
RET = [15874441284191711607_usize,2898323815381312425_usize,3_usize,9378116636078908928_usize,2_usize,2_usize,7600970780517179623_usize];
_1 = _2 & _2;
_2 = !_1;
RET = [2_usize,4714703511806063477_usize,9724549120964884472_usize,6466346481604064917_usize,261182061716981290_usize,2659787615550046635_usize,12343686545278548197_usize];
RET = [5_usize,2_usize,6366045017051432624_usize,2_usize,17022395351272958103_usize,9594070630002603445_usize,14855072634486815229_usize];
Goto(bb1)
}
bb1 = {
_1 = '\u{50c33}' as u8;
_2 = !_1;
RET = [0_usize,12871630972201522941_usize,5_usize,206027916972850010_usize,7_usize,16979806069660113858_usize,7_usize];
_2 = 4076805421101737551_u64 as u8;
RET = [3921558244109440589_usize,2694034294726082092_usize,12587185376808556539_usize,7731242607444195182_usize,0_usize,2_usize,5_usize];
_3 = 37550551181627323129372706614455793854_u128 * 329031098783617358447725111753983309213_u128;
RET = [7_usize,1_usize,7_usize,11264350588169398226_usize,4531732998611879640_usize,4_usize,10160622553373604066_usize];
_4.0.1.3 = '\u{4bd3}' as i8;
_4.0.1.0 = !6231_u16;
_4.0.1.3 = !(-38_i8);
_2 = !_1;
_4.0.0 = -9223372036854775807_isize;
_4.0.0 = -(-32_isize);
_4.0.1.0 = !33079_u16;
_4.0.1.1 = -8496_i16;
RET = [4_usize,11434046278363535670_usize,6_usize,3189425008060391401_usize,5_usize,9440818343984546767_usize,3580707651359237484_usize];
_4.0.1 = (54639_u16, (-21861_i16), _1, (-92_i8));
_3 = 117181184634731604692867840995788697920_u128;
match _4.0.1.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768211364 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_1 = !_2;
_6.fld5.1 = _4.0.1.1 ^ _4.0.1.1;
_6.fld5.0 = !_4.0.1.0;
_3 = 14936439149759972505262403155909299839_u128 / 265359918836034805394501506261831379166_u128;
_6.fld4 = [1911128716138802185_u64,7555008639325422724_u64,1798313879675924617_u64,10161429519971475911_u64,7761738213559253929_u64,7932135360824052164_u64,9468832737753103083_u64,2714885589616805838_u64];
_6.fld5.2 = _2 | _2;
_4.0.1 = (_6.fld5.0, _6.fld5.1, _1, (-14_i8));
_3 = _6.fld5.2 as u128;
_6.fld3 = [_2,_2,_1,_6.fld5.2,_1];
_6.fld1 = 16224867812854762942_u64 as f64;
_6.fld5.0 = 7498577306726774660_usize as u16;
_6.fld3 = [_6.fld5.2,_6.fld5.2,_6.fld5.2,_1,_4.0.1.2];
_6.fld5.0 = 13474222229811568316_u64 as u16;
_4.0.1.3 = (-80_i8) * 98_i8;
_4.0.1.2 = _6.fld5.2 - _2;
Call(_2 = fn7(_4.0.1.0, _3, _4, _6.fld4, _4.0.1.0, _4.0.1.3, _3, _4.0.1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_8 = _4.0.1.2;
_5 = [2453966745848657807_usize,16342179318674701313_usize,5184055163625496077_usize,5_usize,2_usize,2_usize,5_usize];
_4.0.1 = (_6.fld5.0, _6.fld5.1, _1, 69_i8);
_4.0.1.3 = -96_i8;
_6.fld5.0 = _3 as u16;
_2 = (-144265618918895592618130370490688436456_i128) as u8;
_6.fld5 = (_4.0.1.0, _4.0.1.1, _8, _4.0.1.3);
_4.0.1.0 = _6.fld5.0 & _6.fld5.0;
Call(_1 = core::intrinsics::bswap(_4.0.1.2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_6.fld5.3 = _4.0.1.3 * _4.0.1.3;
_9 = [(-81323567808797843437226281880629632229_i128),71594945333160298504845557972199184692_i128];
_6.fld0 = !true;
_6.fld5.3 = '\u{9f8ff}' as i8;
_11.0.1.2 = !_8;
_6.fld0 = false;
_4.0.1.3 = 1413192021_i32 as i8;
_1 = !_6.fld5.2;
_9 = [78558808303807929267720703436601534163_i128,116026069771272758898560760468830033244_i128];
_7 = -_6.fld1;
_2 = 4107268202_u32 as u8;
_8 = _11.0.1.2;
_4.0.1.3 = -_6.fld5.3;
_12.fld0.2.1 = -_6.fld5.1;
_6.fld4 = [10623737472978291292_u64,18401812064776256869_u64,13690890641250082474_u64,13035962661471625131_u64,855834598922807486_u64,16031270094311417285_u64,4998332011420548683_u64,2287853053737581995_u64];
_4.0.1.1 = _12.fld0.2.1;
_4.0.0 = !117_isize;
_10 = [_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0,_4.0.0];
_11.0.1.3 = -_6.fld5.3;
_11.0.1.1 = _4.0.1.1;
Goto(bb11)
}
bb11 = {
_12.fld0.3 = -_11.0.1.3;
_4.0.1.0 = _6.fld5.0;
Goto(bb12)
}
bb12 = {
_12.fld0.2.1 = _6.fld5.1;
_12.fld0.2 = (_6.fld5.0, _4.0.1.1);
_11.0.1 = (_4.0.1.0, _4.0.1.1, _6.fld5.2, _6.fld5.3);
_4.0.1.0 = !_12.fld0.2.0;
Goto(bb13)
}
bb13 = {
_14.fld2.fld6 = -(-3717606599040131074_i64);
_14.fld6.fld2.1 = -_7;
_6.fld6 = _14.fld2.fld6;
_6.fld5.3 = !_12.fld0.3;
_14.fld2.fld1 = _6.fld1 * _6.fld1;
_6.fld4 = [15602501562292039501_u64,772745542703133510_u64,266191658260800672_u64,16528630488107366163_u64,4435343167688197574_u64,2599207901208078123_u64,2254183317265239403_u64,6200027181491384659_u64];
_11 = (_4.0,);
_14.fld6.fld3.fld2 = [(-1222660815_i32),1486600021_i32,1519922547_i32,954908662_i32,(-1650458279_i32)];
_14.fld6.fld1.fld5.0 = !_12.fld0.2.0;
_14.fld6.fld1.fld4 = [5850623825342141960_u64,12096914596707714668_u64,9788050164187588316_u64,2621881087409418341_u64,345362711187209720_u64,5529048599046360947_u64,8875696077433296022_u64,16178929788986566982_u64];
_14.fld6.fld1.fld5 = (_4.0.1.0, _11.0.1.1, _6.fld5.2, _11.0.1.3);
RET = [1_usize,1_usize,3_usize,13960712112610244113_usize,0_usize,2_usize,8883583907307635628_usize];
_14.fld6.fld2 = ('\u{fa8cc}', _14.fld2.fld1);
_14.fld2.fld5 = (_4.0.1.0, _12.fld0.2.1, _4.0.1.2, _14.fld6.fld1.fld5.3);
_14.fld6.fld1.fld0 = _14.fld2.fld5.1 == _12.fld0.2.1;
_6.fld6 = _14.fld2.fld6;
_14.fld6.fld2.1 = _14.fld6.fld1.fld5.1 as f64;
_14.fld2.fld0 = !_14.fld6.fld1.fld0;
RET = [18260214815999705795_usize,0_usize,5_usize,5970929912176576196_usize,12694477152677880290_usize,1850053574836494601_usize,4_usize];
_6.fld5 = _14.fld2.fld5;
_14.fld2.fld5 = _4.0.1;
Call(_17.fld6 = core::intrinsics::bswap(_14.fld2.fld6), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_16 = _3 as f32;
_14.fld0.fld1 = [_14.fld6.fld1.fld5.1];
_14.fld2.fld5 = _4.0.1;
_12.fld0.3 = 81158423161225784064661145775029368873_i128 as i8;
_14.fld2.fld3 = _6.fld3;
_17.fld4 = _6.fld4;
_14.fld6.fld1.fld0 = !_14.fld2.fld0;
_14.fld6.fld4 = [_11.0.0,_11.0.0,_4.0.0,_4.0.0,_4.0.0,_11.0.0,_11.0.0];
_18.fld0 = [10621350729507331284_usize,2_usize,6_usize,7_usize,6_usize,5_usize,3056928714759149777_usize];
_6.fld1 = _14.fld6.fld1.fld5.2 as f64;
_19.fld1.fld3 = [1705564452_u32,2847870507_u32,892720543_u32,4114915340_u32,3663011170_u32];
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(6_usize, 5_usize, Move(_5), 9_usize, Move(_9), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: u16,mut _2: u128,mut _3: ((isize, (u16, i16, u8, i8)),),mut _4: [u64; 8],mut _5: u16,mut _6: i8,mut _7: u128,mut _8: (u16, i16, u8, i8)) -> u8 {
mir! {
type RET = u8;
let _9: isize;
let _10: isize;
let _11: [i8; 1];
let _12: i16;
let _13: i64;
let _14: u64;
let _15: isize;
let _16: isize;
let _17: usize;
let _18: [u64; 8];
let _19: f64;
let _20: u16;
let _21: i32;
let _22: bool;
let _23: *const u32;
let _24: [usize; 7];
let _25: [isize; 7];
let _26: Adt61;
let _27: f64;
let _28: [bool; 4];
let _29: [u64; 8];
let _30: usize;
let _31: isize;
let _32: [i16; 1];
let _33: u8;
let _34: bool;
let _35: usize;
let _36: u32;
let _37: ([u32; 5], i128, (u16, i16), i8);
let _38: [i32; 5];
let _39: char;
let _40: char;
let _41: ();
let _42: ();
{
_3.0.1.1 = _2 as i16;
_8 = _3.0.1;
_8 = _3.0.1;
_3.0.1.0 = !_8.0;
_3.0.1.3 = _6 + _6;
_3.0.1.1 = _3.0.1.2 as i16;
RET = 1130346933_i32 as u8;
RET = 1679831377_i32 as u8;
RET = _8.2;
_4 = [8526592431294311903_u64,14735811016300998434_u64,2527198881768112850_u64,16369570121629007005_u64,15372444687376731728_u64,7107977104170675647_u64,10088403266918586342_u64,10042580777358466067_u64];
_3.0.0 = -(-9223372036854775808_isize);
_3.0.1.2 = _8.2 % 88_u8;
_8.0 = (-3492064976952090585_i64) as u16;
_2 = _7;
_8.2 = '\u{bdbb2}' as u8;
RET = !_3.0.1.2;
_3.0.1 = _8;
_3.0.1.2 = !_8.2;
_7 = 343754567_i32 as u128;
_8.3 = _3.0.1.3 & _6;
_8.1 = 8543967230979206680_u64 as i16;
RET = '\u{1cc85}' as u8;
RET = _3.0.1.2 & _8.2;
_9 = '\u{b9b5b}' as isize;
_8.2 = _3.0.1.2 - _3.0.1.2;
_5 = _3.0.1.0;
Goto(bb1)
}
bb1 = {
RET = _8.2 + _3.0.1.2;
_1 = _8.0 * _3.0.1.0;
_10 = false as isize;
_10 = _3.0.0;
_12 = !_3.0.1.1;
_3.0 = (_9, _8);
_11 = [_8.3];
_8 = (_1, _12, _3.0.1.2, _3.0.1.3);
_12 = -_3.0.1.1;
_10 = _9;
Goto(bb2)
}
bb2 = {
_3.0.1.3 = _8.3 * _8.3;
_8.3 = _3.0.1.3;
_15 = _9;
_8.1 = _3.0.1.1;
_3.0.1 = (_8.0, _8.1, _8.2, _8.3);
_14 = '\u{5cb67}' as u64;
RET = _8.2;
_3.0.1.3 = _8.0 as i8;
_8.2 = _3.0.1.2;
_5 = _1 >> _8.3;
_13 = 180184385_u32 as i64;
_8.3 = !_3.0.1.3;
_14 = 6_usize as u64;
_12 = !_3.0.1.1;
_3.0.1.1 = _8.1;
_5 = !_1;
_16 = !_15;
Call(_13 = fn8(_16, _9, _14, _10, _3, _8.1, _7, _3.0.1.0, _6, _15, _9, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_1 = _2 as u16;
_16 = _10 - _9;
_10 = 115964773232869085357225004243317789133_i128 as isize;
_3.0.1 = (_8.0, _12, _8.2, _6);
_5 = _3.0.1.0 >> _3.0.0;
_11 = [_6];
_3.0 = (_9, _8);
_21 = (-1919860441_i32) + (-1778048939_i32);
_13 = !(-1919842269496328013_i64);
_2 = !_7;
_20 = _14 as u16;
_3.0.0 = _15 - _9;
_1 = _12 as u16;
_3.0.1.0 = !_8.0;
_3.0.1 = _8;
_8.0 = _14 as u16;
_13 = 222855895718631819_i64;
match _13 {
0 => bb1,
1 => bb2,
2 => bb4,
222855895718631819 => bb6,
_ => bb5
}
}
bb4 = {
_3.0.1.3 = _8.3 * _8.3;
_8.3 = _3.0.1.3;
_15 = _9;
_8.1 = _3.0.1.1;
_3.0.1 = (_8.0, _8.1, _8.2, _8.3);
_14 = '\u{5cb67}' as u64;
RET = _8.2;
_3.0.1.3 = _8.0 as i8;
_8.2 = _3.0.1.2;
_5 = _1 >> _8.3;
_13 = 180184385_u32 as i64;
_8.3 = !_3.0.1.3;
_14 = 6_usize as u64;
_12 = !_3.0.1.1;
_3.0.1.1 = _8.1;
_5 = !_1;
_16 = !_15;
Call(_13 = fn8(_16, _9, _14, _10, _3, _8.1, _7, _3.0.1.0, _6, _15, _9, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET = _8.2 + _3.0.1.2;
_1 = _8.0 * _3.0.1.0;
_10 = false as isize;
_10 = _3.0.0;
_12 = !_3.0.1.1;
_3.0 = (_9, _8);
_11 = [_8.3];
_8 = (_1, _12, _3.0.1.2, _3.0.1.3);
_12 = -_3.0.1.1;
_10 = _9;
Goto(bb2)
}
bb6 = {
_23 = core::ptr::addr_of!(_26.fld1.fld0);
_18 = [_14,_14,_14,_14,_14,_14,_14,_14];
_3.0.1.3 = _14 as i8;
_8.1 = -_3.0.1.1;
Goto(bb7)
}
bb7 = {
_3.0.1.3 = 7176291985998699601_usize as i8;
_26.fld2.fld5 = !_21;
_27 = _7 as f64;
_3.0.1.1 = _8.1;
_1 = !_3.0.1.0;
_3.0.0 = _16 & _16;
_2 = _7;
_19 = _27 - _27;
_25 = [_3.0.0,_9,_16,_16,_3.0.0,_3.0.0,_9];
_3.0.1.1 = !_8.1;
_31 = _8.1 as isize;
_32 = [_3.0.1.1];
_26.fld1.fld5 = core::ptr::addr_of!(_28);
match _13 {
0 => bb4,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
222855895718631819 => bb13,
_ => bb12
}
}
bb8 = {
_23 = core::ptr::addr_of!(_26.fld1.fld0);
_18 = [_14,_14,_14,_14,_14,_14,_14,_14];
_3.0.1.3 = _14 as i8;
_8.1 = -_3.0.1.1;
Goto(bb7)
}
bb9 = {
RET = _8.2 + _3.0.1.2;
_1 = _8.0 * _3.0.1.0;
_10 = false as isize;
_10 = _3.0.0;
_12 = !_3.0.1.1;
_3.0 = (_9, _8);
_11 = [_8.3];
_8 = (_1, _12, _3.0.1.2, _3.0.1.3);
_12 = -_3.0.1.1;
_10 = _9;
Goto(bb2)
}
bb10 = {
_3.0.1.3 = _8.3 * _8.3;
_8.3 = _3.0.1.3;
_15 = _9;
_8.1 = _3.0.1.1;
_3.0.1 = (_8.0, _8.1, _8.2, _8.3);
_14 = '\u{5cb67}' as u64;
RET = _8.2;
_3.0.1.3 = _8.0 as i8;
_8.2 = _3.0.1.2;
_5 = _1 >> _8.3;
_13 = 180184385_u32 as i64;
_8.3 = !_3.0.1.3;
_14 = 6_usize as u64;
_12 = !_3.0.1.1;
_3.0.1.1 = _8.1;
_5 = !_1;
_16 = !_15;
Call(_13 = fn8(_16, _9, _14, _10, _3, _8.1, _7, _3.0.1.0, _6, _15, _9, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_1 = _2 as u16;
_16 = _10 - _9;
_10 = 115964773232869085357225004243317789133_i128 as isize;
_3.0.1 = (_8.0, _12, _8.2, _6);
_5 = _3.0.1.0 >> _3.0.0;
_11 = [_6];
_3.0 = (_9, _8);
_21 = (-1919860441_i32) + (-1778048939_i32);
_13 = !(-1919842269496328013_i64);
_2 = !_7;
_20 = _14 as u16;
_3.0.0 = _15 - _9;
_1 = _12 as u16;
_3.0.1.0 = !_8.0;
_3.0.1 = _8;
_8.0 = _14 as u16;
_13 = 222855895718631819_i64;
match _13 {
0 => bb1,
1 => bb2,
2 => bb4,
222855895718631819 => bb6,
_ => bb5
}
}
bb12 = {
_3.0.1.3 = _8.3 * _8.3;
_8.3 = _3.0.1.3;
_15 = _9;
_8.1 = _3.0.1.1;
_3.0.1 = (_8.0, _8.1, _8.2, _8.3);
_14 = '\u{5cb67}' as u64;
RET = _8.2;
_3.0.1.3 = _8.0 as i8;
_8.2 = _3.0.1.2;
_5 = _1 >> _8.3;
_13 = 180184385_u32 as i64;
_8.3 = !_3.0.1.3;
_14 = 6_usize as u64;
_12 = !_3.0.1.1;
_3.0.1.1 = _8.1;
_5 = !_1;
_16 = !_15;
Call(_13 = fn8(_16, _9, _14, _10, _3, _8.1, _7, _3.0.1.0, _6, _15, _9, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_26.fld1.fld0 = !384657273_u32;
_26.fld2.fld2.0 = _5 * _1;
_14 = _26.fld1.fld0 as u64;
_26.fld2.fld2.0 = _3.0.1.0 - _5;
_15 = !_31;
_26.fld5 = [3_usize,3939716829911916738_usize,9100661572371825871_usize,12041057798715198417_usize,3_usize,1266856068720841565_usize,5_usize];
_18 = [_14,_14,_14,_14,_14,_14,_14,_14];
_26.fld2.fld2.3 = _8.3;
RET = false as u8;
_12 = _3.0.1.1;
RET = 449606035608870974_usize as u8;
_22 = false | true;
_8 = (_5, _12, _3.0.1.2, _6);
_26.fld2.fld3 = core::ptr::addr_of_mut!(_3.0);
_3.0.1.1 = -_8.1;
_37.2.0 = _20;
_37.2.1 = -_8.1;
match _13 {
222855895718631819 => bb14,
_ => bb4
}
}
bb14 = {
_37.3 = '\u{ccbe4}' as i8;
_26.fld0 = [_22,_22,_22,_22];
_37.0 = [(*_23),(*_23),(*_23),(*_23),(*_23)];
_31 = -_3.0.0;
_26.fld1.fld0 = 2365970037_u32 << _3.0.0;
_26.fld2.fld2.1 = !_3.0.1.1;
_26.fld2.fld4.0 = '\u{1d84f}' as u64;
_26.fld4 = (_11,);
RET = (*_23) as u8;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(7_usize, 20_usize, Move(_20), 31_usize, Move(_31), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(7_usize, 14_usize, Move(_14), 9_usize, Move(_9), 21_usize, Move(_21), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(7_usize, 12_usize, Move(_12), 10_usize, Move(_10), 15_usize, Move(_15), 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: isize,mut _3: u64,mut _4: isize,mut _5: ((isize, (u16, i16, u8, i8)),),mut _6: i16,mut _7: u128,mut _8: u16,mut _9: i8,mut _10: isize,mut _11: isize,mut _12: i16) -> i64 {
mir! {
type RET = i64;
let _13: *mut i128;
let _14: Adt65;
let _15: f64;
let _16: [u32; 5];
let _17: [u32; 5];
let _18: Adt50;
let _19: ((isize, (u16, i16, u8, i8)),);
let _20: isize;
let _21: isize;
let _22: f32;
let _23: [i32; 1];
let _24: bool;
let _25: Adt58;
let _26: f32;
let _27: isize;
let _28: u64;
let _29: [i32; 5];
let _30: ();
let _31: ();
{
_1 = (-1285971354_i32) as isize;
_7 = 54780537057500201119732575630488741614_u128 ^ 203710492001538965339645303683111929940_u128;
_14.fld2.fld0 = false;
_14.fld6.fld1.fld5 = (_5.0.1.0, _6, _5.0.1.2, _9);
_5.0.1 = (_8, _12, _14.fld6.fld1.fld5.2, _9);
_14.fld6.fld1.fld0 = _9 < _5.0.1.3;
_14.fld6.fld4 = [_11,_11,_4,_2,_10,_4,_10];
Call(_14.fld2.fld5.0 = fn9(_5.0.1.0, _5.0.1.1, _14.fld6.fld4, _14.fld6.fld1.fld5.2, _3, _14.fld2.fld0, _14.fld6.fld1.fld5.1, _11, _14.fld6.fld1.fld5.3, _14.fld2.fld0, _4, _2, _5.0, _1, _5.0.1.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14.fld5.0 = [_9];
_14.fld2.fld5 = (_8, _12, _14.fld6.fld1.fld5.2, _5.0.1.3);
_14.fld2.fld5 = _5.0.1;
_5.0.0 = 634862226_i32 as isize;
RET = (-1678896488825102470_i64) - 589284874064216377_i64;
_10 = _14.fld2.fld5.0 as isize;
RET = (-8946890923120191867_i64);
_7 = 23714783905652839189454334371940210504_u128;
_14.fld6.fld1.fld3 = [_5.0.1.2,_14.fld6.fld1.fld5.2,_14.fld6.fld1.fld5.2,_5.0.1.2,_14.fld2.fld5.2];
_5.0.1 = (_14.fld2.fld5.0, _14.fld6.fld1.fld5.1, _14.fld6.fld1.fld5.2, _9);
_6 = -_5.0.1.1;
_18.fld2 = [_4,_10,_10,_5.0.0,_10,_10];
match _7 {
0 => bb2,
1 => bb3,
23714783905652839189454334371940210504 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_14.fld2.fld5 = (_5.0.1.0, _6, _5.0.1.2, _9);
_14.fld6.fld1.fld5.2 = _14.fld6.fld1.fld0 as u8;
_20 = _1;
_14.fld6.fld2.0 = '\u{f2424}';
_14.fld6.fld1.fld5 = (_14.fld2.fld5.0, _12, _5.0.1.2, _5.0.1.3);
_5.0.1.2 = !_14.fld2.fld5.2;
_14.fld6.fld3.fld1 = [_5.0.1.1];
match _7 {
0 => bb3,
1 => bb6,
2 => bb7,
23714783905652839189454334371940210504 => bb9,
_ => bb8
}
}
bb6 = {
_14.fld5.0 = [_9];
_14.fld2.fld5 = (_8, _12, _14.fld6.fld1.fld5.2, _5.0.1.3);
_14.fld2.fld5 = _5.0.1;
_5.0.0 = 634862226_i32 as isize;
RET = (-1678896488825102470_i64) - 589284874064216377_i64;
_10 = _14.fld2.fld5.0 as isize;
RET = (-8946890923120191867_i64);
_7 = 23714783905652839189454334371940210504_u128;
_14.fld6.fld1.fld3 = [_5.0.1.2,_14.fld6.fld1.fld5.2,_14.fld6.fld1.fld5.2,_5.0.1.2,_14.fld2.fld5.2];
_5.0.1 = (_14.fld2.fld5.0, _14.fld6.fld1.fld5.1, _14.fld6.fld1.fld5.2, _9);
_6 = -_5.0.1.1;
_18.fld2 = [_4,_10,_10,_5.0.0,_10,_10];
match _7 {
0 => bb2,
1 => bb3,
23714783905652839189454334371940210504 => bb5,
_ => bb4
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14.fld7 = [_20,_1,_2,_5.0.0,_4,_5.0.0,_2];
_19.0.1.1 = !_14.fld2.fld5.1;
_16 = [3498063021_u32,4150587552_u32,2592972300_u32,1258345807_u32,661684129_u32];
_14.fld2.fld3 = [_14.fld2.fld5.2,_14.fld6.fld1.fld5.2,_14.fld6.fld1.fld5.2,_14.fld6.fld1.fld5.2,_14.fld2.fld5.2];
_14.fld1 = [1536898407_i32,(-1512824954_i32),144524857_i32,(-1190331992_i32),(-653363283_i32)];
_19.0.1.0 = _7 as u16;
_13 = core::ptr::addr_of_mut!(_14.fld6.fld0);
_14.fld7 = [_1,_10,_10,_4,_20,_10,_10];
_5.0.1.2 = 608534860_i32 as u8;
_19.0 = (_11, _14.fld2.fld5);
RET = -(-3218162518009034823_i64);
_14.fld6.fld1.fld5.2 = !_14.fld2.fld5.2;
_14.fld6.fld4 = [_11,_1,_20,_5.0.0,_10,_10,_1];
_18.fld1 = core::ptr::addr_of!(_14.fld1);
_14.fld3 = [128617731331169104447314755021700321488_i128,124743562691649713949990643102879867173_i128];
_18.fld4 = -_6;
_14.fld6.fld1.fld3 = _14.fld2.fld3;
_14.fld7 = [_10,_1,_5.0.0,_19.0.0,_10,_11,_11];
_11 = 5478508251214782332_i64 as isize;
_5.0 = _19.0;
_5.0.1.0 = !_19.0.1.0;
_18.fld3 = [3071008529_u32,4269862939_u32,1695859895_u32,1923857780_u32,3270994653_u32];
_18.fld0 = 20416821686508071454285255410291368031_i128 as u32;
_18.fld4 = 2627939154755094677_i64 as i16;
_20 = _10 - _10;
_14.fld6.fld1.fld3 = [_5.0.1.2,_5.0.1.2,_14.fld2.fld5.2,_14.fld2.fld5.2,_19.0.1.2];
_15 = 16583030757169481873_usize as f64;
Goto(bb10)
}
bb10 = {
_1 = -_20;
_14.fld2.fld5.0 = !_8;
_12 = _19.0.1.1 + _14.fld6.fld1.fld5.1;
_15 = 747975864_i32 as f64;
_14.fld6.fld0 = 144309875171036386949973147752370310657_i128;
_15 = _1 as f64;
Goto(bb11)
}
bb11 = {
_18.fld1 = core::ptr::addr_of!(_14.fld0.fld2);
_19.0.0 = (-5892957882729719497_i64) as isize;
_14.fld6.fld1.fld3 = [_14.fld6.fld1.fld5.2,_19.0.1.2,_19.0.1.2,_14.fld2.fld5.2,_14.fld2.fld5.2];
_14.fld6.fld1.fld2 = _16;
_14.fld5.0 = [_9];
_14.fld2.fld2 = [_18.fld0,_18.fld0,_18.fld0,_18.fld0,_18.fld0];
_2 = _14.fld6.fld2.0 as isize;
_14.fld7 = [_20,_20,_20,_1,_20,_20,_1];
_25.fld1.fld5.3 = _1 as i8;
_25.fld1.fld5.1 = -_18.fld4;
_25.fld1.fld5.3 = -_5.0.1.3;
_18.fld4 = _14.fld2.fld5.0 as i16;
_25.fld1.fld4 = [_3,_3,_3,_3,_3,_3,_3,_3];
_25.fld1.fld1 = _15;
_5.0 = (_10, _19.0.1);
_14.fld6.fld1.fld1 = _5.0.1.0 as f64;
_19.0.1.1 = _9 as i16;
_20 = _1;
_14.fld6.fld0 = (-40651010718863778704379104381372607992_i128) * (-77772205171887514979681167434933021295_i128);
_8 = _14.fld6.fld1.fld5.0;
_18.fld3 = [_18.fld0,_18.fld0,_18.fld0,_18.fld0,_18.fld0];
_1 = _2 & _20;
_14.fld6.fld1.fld5.3 = -_9;
_14.fld2.fld5.1 = _14.fld6.fld1.fld5.1 ^ _18.fld4;
_14.fld4 = _25.fld1.fld5.3 as usize;
match _7 {
0 => bb6,
1 => bb2,
2 => bb10,
3 => bb12,
4 => bb13,
5 => bb14,
23714783905652839189454334371940210504 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
_14.fld7 = [_20,_1,_2,_5.0.0,_4,_5.0.0,_2];
_19.0.1.1 = !_14.fld2.fld5.1;
_16 = [3498063021_u32,4150587552_u32,2592972300_u32,1258345807_u32,661684129_u32];
_14.fld2.fld3 = [_14.fld2.fld5.2,_14.fld6.fld1.fld5.2,_14.fld6.fld1.fld5.2,_14.fld6.fld1.fld5.2,_14.fld2.fld5.2];
_14.fld1 = [1536898407_i32,(-1512824954_i32),144524857_i32,(-1190331992_i32),(-653363283_i32)];
_19.0.1.0 = _7 as u16;
_13 = core::ptr::addr_of_mut!(_14.fld6.fld0);
_14.fld7 = [_1,_10,_10,_4,_20,_10,_10];
_5.0.1.2 = 608534860_i32 as u8;
_19.0 = (_11, _14.fld2.fld5);
RET = -(-3218162518009034823_i64);
_14.fld6.fld1.fld5.2 = !_14.fld2.fld5.2;
_14.fld6.fld4 = [_11,_1,_20,_5.0.0,_10,_10,_1];
_18.fld1 = core::ptr::addr_of!(_14.fld1);
_14.fld3 = [128617731331169104447314755021700321488_i128,124743562691649713949990643102879867173_i128];
_18.fld4 = -_6;
_14.fld6.fld1.fld3 = _14.fld2.fld3;
_14.fld7 = [_10,_1,_5.0.0,_19.0.0,_10,_11,_11];
_11 = 5478508251214782332_i64 as isize;
_5.0 = _19.0;
_5.0.1.0 = !_19.0.1.0;
_18.fld3 = [3071008529_u32,4269862939_u32,1695859895_u32,1923857780_u32,3270994653_u32];
_18.fld0 = 20416821686508071454285255410291368031_i128 as u32;
_18.fld4 = 2627939154755094677_i64 as i16;
_20 = _10 - _10;
_14.fld6.fld1.fld3 = [_5.0.1.2,_5.0.1.2,_14.fld2.fld5.2,_14.fld2.fld5.2,_19.0.1.2];
_15 = 16583030757169481873_usize as f64;
Goto(bb10)
}
bb14 = {
_14.fld2.fld5 = (_5.0.1.0, _6, _5.0.1.2, _9);
_14.fld6.fld1.fld5.2 = _14.fld6.fld1.fld0 as u8;
_20 = _1;
_14.fld6.fld2.0 = '\u{f2424}';
_14.fld6.fld1.fld5 = (_14.fld2.fld5.0, _12, _5.0.1.2, _5.0.1.3);
_5.0.1.2 = !_14.fld2.fld5.2;
_14.fld6.fld3.fld1 = [_5.0.1.1];
match _7 {
0 => bb3,
1 => bb6,
2 => bb7,
23714783905652839189454334371940210504 => bb9,
_ => bb8
}
}
bb15 = {
Return()
}
bb16 = {
_5.0 = _19.0;
_14.fld6.fld2.0 = '\u{f2a24}';
Goto(bb17)
}
bb17 = {
Call(_30 = dump_var(8_usize, 12_usize, Move(_12), 4_usize, Move(_4), 10_usize, Move(_10), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(8_usize, 5_usize, Move(_5), 19_usize, Move(_19), 2_usize, Move(_2), 31_usize, _31), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: u16,mut _2: i16,mut _3: [isize; 7],mut _4: u8,mut _5: u64,mut _6: bool,mut _7: i16,mut _8: isize,mut _9: i8,mut _10: bool,mut _11: isize,mut _12: isize,mut _13: (isize, (u16, i16, u8, i8)),mut _14: isize,mut _15: u16) -> u16 {
mir! {
type RET = u16;
let _16: *mut (isize, (u16, i16, u8, i8));
let _17: u8;
let _18: f64;
let _19: f64;
let _20: f32;
let _21: ([i8; 1],);
let _22: *mut usize;
let _23: Adt57;
let _24: (u64, f64);
let _25: Adt52;
let _26: i64;
let _27: f32;
let _28: *mut (isize, (u16, i16, u8, i8));
let _29: [u64; 8];
let _30: isize;
let _31: bool;
let _32: [i8; 1];
let _33: ((isize, (u16, i16, u8, i8)),);
let _34: isize;
let _35: Adt49;
let _36: char;
let _37: *mut (isize, (u16, i16, u8, i8));
let _38: (isize, (u16, i16, u8, i8));
let _39: f64;
let _40: (char, f64);
let _41: u16;
let _42: (isize, (u16, i16, u8, i8));
let _43: *const [i32; 5];
let _44: u8;
let _45: u8;
let _46: u8;
let _47: f32;
let _48: Adt57;
let _49: *mut usize;
let _50: Adt56;
let _51: Adt54;
let _52: [isize; 6];
let _53: f64;
let _54: Adt61;
let _55: isize;
let _56: char;
let _57: [u64; 8];
let _58: [i128; 2];
let _59: f32;
let _60: i64;
let _61: i8;
let _62: ();
let _63: ();
{
_2 = !_7;
_13.1.0 = _15;
_1 = _15;
_11 = _12 * _14;
_7 = _2 >> _9;
_4 = !_13.1.2;
_13.0 = _14;
_17 = _13.1.2;
_13.1 = (_15, _2, _17, _9);
_6 = _10;
_6 = !_10;
_2 = 6592395624259898450_usize as i16;
_11 = _13.0 * _13.0;
RET = !_15;
_4 = _13.1.2;
_18 = (-1701133062_i32) as f64;
_13.1 = (_1, _2, _17, _9);
RET = _1;
_20 = _4 as f32;
_16 = core::ptr::addr_of_mut!(_13);
_4 = _9 as u8;
_13.1.3 = 14356111217649181784_usize as i8;
(*_16).1 = (_15, _7, _17, _9);
_3 = [(*_16).0,_14,(*_16).0,_11,(*_16).0,_11,_11];
Goto(bb1)
}
bb1 = {
_20 = _9 as f32;
(*_16).1.1 = _7;
_13.1 = (_1, _2, _4, _9);
_18 = _5 as f64;
(*_16).1.3 = _9;
Call(_6 = fn10(_16, (*_16).0, (*_16), _12, _15, _7, _11, (*_16), _16, (*_16).1, _9, _12, (*_16).0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_16).1.3 = _9 << _13.0;
_9 = 180251513466277517228516710889045988746_u128 as i8;
_13.1.0 = _1;
(*_16).1 = (_1, _7, _17, _9);
_23.fld5 = [46067079029626493645617890145416315545_i128,149803160477721810627617790726711981690_i128];
_20 = (*_16).1.3 as f32;
_5 = 9389725359303528169_u64;
_21.0 = [(*_16).1.3];
_24.1 = -_18;
_9 = 0_usize as i8;
_12 = !_13.0;
_9 = (*_16).1.3 >> _1;
_5 = !8638372663895632194_u64;
RET = _1 ^ _13.1.0;
_12 = 992609640_u32 as isize;
_25.fld3 = [(*_16).1.2,_4,_17,_13.1.2,_17];
_5 = !15550146193025649637_u64;
_23.fld6 = [_13.1.3];
_21 = (_23.fld6,);
_15 = !(*_16).1.0;
(*_16).1.0 = _15 << (*_16).0;
_25.fld6 = (-6424565936538106080_i64);
Call(_26 = core::intrinsics::transmute(_14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_23.fld7 = [_5];
(*_16).1 = (_15, _2, _17, _9);
_25.fld5 = (_1, _13.1.1, (*_16).1.2, _13.1.3);
_8 = 4091081849_u32 as isize;
_23.fld4 = 65062621455911889282611658172386271069_u128;
_27 = _25.fld6 as f32;
_5 = 1789849988_i32 as u64;
_3 = [(*_16).0,(*_16).0,_13.0,(*_16).0,_13.0,(*_16).0,_13.0];
_19 = -_24.1;
Goto(bb4)
}
bb4 = {
_24 = (_5, _19);
_6 = _10 ^ _10;
_13.1.3 = _9;
_27 = _20 / (-0.000000000000000000000000000000000000008645399157455211_f32);
_13.1 = _25.fld5;
_23.fld4 = _24.0 as u128;
_25.fld2 = [2092711500_u32,2683320078_u32,192146377_u32,2262194364_u32,3212320191_u32];
_24 = (_5, _19);
_28 = core::ptr::addr_of_mut!((*_16));
_13 = (_12, _25.fld5);
_13.1 = _25.fld5;
_28 = core::ptr::addr_of_mut!((*_16));
_23.fld0 = [3214754804_u32,2770695333_u32,2704790764_u32,1691634200_u32,578586195_u32];
_6 = _10;
(*_16) = (_8, _25.fld5);
_21 = (_23.fld6,);
Goto(bb5)
}
bb5 = {
(*_28).1.1 = _7 & _7;
_33.0.1.0 = (*_28).1.0 << _12;
_23.fld0 = _25.fld2;
_14 = _5 as isize;
(*_16) = (_11, _25.fld5);
_10 = _17 < _13.1.2;
Call(_22 = fn19(_7, _24.0, _21, (*_16).1.2, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_25.fld1 = _24.1;
_30 = 462519991_i32 as isize;
_13.1.1 = '\u{f8380}' as i16;
_21 = (_23.fld6,);
_11 = -_13.0;
_31 = (*_16).1.2 >= _4;
_25.fld4 = [_5,_24.0,_24.0,_24.0,_5,_24.0,_24.0,_5];
_15 = !_33.0.1.0;
(*_16).1 = (_25.fld5.0, _7, _25.fld5.2, _25.fld5.3);
_6 = (*_28).0 >= _30;
RET = _13.1.0 ^ (*_16).1.0;
_32 = [(*_16).1.3];
_36 = '\u{66aca}';
_25.fld5.3 = (*_16).1.3;
(*_28).1.0 = _15;
_33.0.0 = (*_16).1.1 as isize;
_23.fld2 = (*_16).1.0;
_24.0 = _5;
_25.fld3 = [_4,(*_16).1.2,_17,_13.1.2,(*_16).1.2];
_13.1.2 = _4 / 245_u8;
_37 = _28;
_35.fld0 = [3062031681464897156_usize,14160219352476559632_usize,2_usize,7559859175627311113_usize,0_usize,7_usize,8009791645513338894_usize];
_37 = core::ptr::addr_of_mut!((*_37));
_28 = _16;
_24 = (_5, _18);
Goto(bb7)
}
bb7 = {
RET = _15 & (*_37).1.0;
(*_28).1.1 = _2 ^ _2;
_29 = [_5,_5,_24.0,_24.0,_5,_5,_24.0,_5];
_40.0 = _36;
_1 = !(*_28).1.0;
_18 = _27 as f64;
_38 = _13;
Goto(bb8)
}
bb8 = {
_33.0.0 = (*_16).0;
_13.1 = (_33.0.1.0, _38.1.1, _17, _25.fld5.3);
_33.0.1.3 = -_9;
_4 = _25.fld5.2;
_25.fld0 = _4 < (*_37).1.2;
(*_37).0 = _33.0.0;
(*_28) = (_38.0, _38.1);
(*_37) = (_12, _38.1);
_19 = _38.0 as f64;
_40 = (_36, _19);
_12 = _11;
(*_28).1 = (_33.0.1.0, _25.fld5.1, _17, _38.1.3);
_38.0 = -_13.0;
_28 = core::ptr::addr_of_mut!(_13);
_24.0 = !_5;
_9 = (*_16).1.3 << _17;
(*_16).1.1 = !_7;
_10 = _6;
_42.1.2 = _4;
(*_37).0 = (*_16).1.0 as isize;
_1 = !_25.fld5.0;
Goto(bb9)
}
bb9 = {
_29 = [_24.0,_5,_5,_5,_5,_5,_5,_24.0];
_15 = !(*_37).1.0;
(*_28).1 = _25.fld5;
_42 = (_8, (*_37).1);
_15 = _33.0.1.0;
_19 = _18;
_25.fld4 = _29;
_45 = 1408217401_u32 as u8;
_25.fld5.0 = (*_37).1.0 << (*_37).1.0;
_38.1.2 = (*_16).1.2 ^ _4;
_25.fld2 = _23.fld0;
_16 = _28;
_38 = (_8, (*_37).1);
_25.fld1 = (*_37).1.3 as f64;
Goto(bb10)
}
bb10 = {
_33 = (_13,);
_44 = _4;
_13.0 = _42.0 ^ _11;
(*_37).1.2 = _33.0.1.2;
_50.fld1 = [(*_16).1.1];
(*_16) = (_33.0.0, _25.fld5);
_48.fld4 = !_23.fld4;
_38 = ((*_16).0, (*_16).1);
_41 = !(*_28).1.0;
_24 = (_5, _25.fld1);
_40.1 = -_24.1;
_18 = _40.1;
(*_28).1.3 = _33.0.1.3;
_23.fld4 = !_48.fld4;
_48.fld7 = [_24.0];
_44 = _38.1.2 ^ _42.1.2;
_24 = (_5, _40.1);
(*_16).1.1 = _38.1.1;
_23.fld3 = _35.fld0;
_38.1.1 = (*_16).1.1 >> _13.1.3;
RET = _15 + _25.fld5.0;
_48.fld2 = (*_37).1.0 & _1;
_33.0.1.3 = !(*_16).1.3;
_46 = _13.1.3 as u8;
(*_28).1 = _25.fld5;
_51.fld3 = !2793478299_u32;
match _25.fld6 {
0 => bb5,
1 => bb11,
340282366920938463456950041495230105376 => bb13,
_ => bb12
}
}
bb11 = {
_23.fld7 = [_5];
(*_16).1 = (_15, _2, _17, _9);
_25.fld5 = (_1, _13.1.1, (*_16).1.2, _13.1.3);
_8 = 4091081849_u32 as isize;
_23.fld4 = 65062621455911889282611658172386271069_u128;
_27 = _25.fld6 as f32;
_5 = 1789849988_i32 as u64;
_3 = [(*_16).0,(*_16).0,_13.0,(*_16).0,_13.0,(*_16).0,_13.0];
_19 = -_24.1;
Goto(bb4)
}
bb12 = {
_33.0.0 = (*_16).0;
_13.1 = (_33.0.1.0, _38.1.1, _17, _25.fld5.3);
_33.0.1.3 = -_9;
_4 = _25.fld5.2;
_25.fld0 = _4 < (*_37).1.2;
(*_37).0 = _33.0.0;
(*_28) = (_38.0, _38.1);
(*_37) = (_12, _38.1);
_19 = _38.0 as f64;
_40 = (_36, _19);
_12 = _11;
(*_28).1 = (_33.0.1.0, _25.fld5.1, _17, _38.1.3);
_38.0 = -_13.0;
_28 = core::ptr::addr_of_mut!(_13);
_24.0 = !_5;
_9 = (*_16).1.3 << _17;
(*_16).1.1 = !_7;
_10 = _6;
_42.1.2 = _4;
(*_37).0 = (*_16).1.0 as isize;
_1 = !_25.fld5.0;
Goto(bb9)
}
bb13 = {
(*_16).1 = (_38.1.0, _38.1.1, _44, _33.0.1.3);
_51.fld1 = core::ptr::addr_of!(_51.fld3);
_50.fld2 = [1931042979_i32,1768573973_i32,1344273900_i32,(-544917858_i32),(-572734955_i32)];
_25.fld0 = (*_28).1.2 != _46;
(*_37).1.1 = _25.fld5.1 >> (*_28).1.3;
_40 = (_36, _19);
_51.fld1 = core::ptr::addr_of!(_51.fld3);
_51.fld2 = _25.fld6;
_42.0 = _51.fld3 as isize;
_51.fld0.1.3 = _9 >> _13.1.1;
(*_28) = _33.0;
_41 = !_48.fld2;
_54.fld4.0 = [_13.1.3];
_42.0 = (*_16).1.1 as isize;
_25.fld4 = [_5,_24.0,_24.0,_24.0,_5,_24.0,_5,_5];
_50.fld1 = [_13.1.1];
_48.fld0 = [_51.fld3,_51.fld3,_51.fld3,_51.fld3,_51.fld3];
Call(_1 = core::intrinsics::bswap(_33.0.1.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_13.1.0 = (-145295399512435277246708540036153084153_i128) as u16;
_43 = core::ptr::addr_of!(_50.fld2);
_25.fld5.1 = _13.0 as i16;
_54.fld2.fld4 = _24;
_25.fld3 = [_38.1.2,(*_37).1.2,_33.0.1.2,_17,(*_37).1.2];
_25.fld4 = _29;
(*_37).1 = (_48.fld2, _25.fld5.1, _38.1.2, _51.fld0.1.3);
(*_16).1.1 = -_25.fld5.1;
_5 = _24.0;
_54.fld2.fld2.0 = (*_37).1.0;
_51.fld1 = core::ptr::addr_of!(_51.fld3);
_54.fld2.fld6 = [(*_16).1.3,_13.1.3,(*_16).1.3,(*_37).1.3];
(*_16).1 = (_48.fld2, _7, _33.0.1.2, _42.1.3);
_54.fld1.fld4 = (*_28).1.1 | _25.fld5.1;
_31 = _54.fld1.fld4 >= _54.fld1.fld4;
_54.fld6 = [(*_37).0,(*_16).0,(*_16).0,_38.0,_8,(*_37).0,_13.0];
_38 = ((*_28).0, (*_37).1);
_50.fld0 = core::ptr::addr_of!(_54.fld0);
_38.1 = ((*_16).1.0, (*_16).1.1, (*_16).1.2, _51.fld0.1.3);
_48.fld7 = _23.fld7;
_48.fld6 = [_9];
_54.fld2.fld3 = core::ptr::addr_of_mut!(_13);
_39 = -_24.1;
_4 = !(*_16).1.2;
_50.fld1 = [(*_16).1.1];
_54.fld2.fld2.2 = !_38.1.2;
_42.1 = ((*_28).1.0, (*_37).1.1, _25.fld5.2, (*_28).1.3);
Goto(bb15)
}
bb15 = {
Call(_62 = dump_var(9_usize, 10_usize, Move(_10), 2_usize, Move(_2), 29_usize, Move(_29), 38_usize, Move(_38)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_62 = dump_var(9_usize, 36_usize, Move(_36), 32_usize, Move(_32), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_62 = dump_var(9_usize, 21_usize, Move(_21), 13_usize, Move(_13), 42_usize, Move(_42), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_62 = dump_var(9_usize, 45_usize, Move(_45), 17_usize, Move(_17), 46_usize, Move(_46), 63_usize, _63), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: *mut (isize, (u16, i16, u8, i8)),mut _2: isize,mut _3: (isize, (u16, i16, u8, i8)),mut _4: isize,mut _5: u16,mut _6: i16,mut _7: isize,mut _8: (isize, (u16, i16, u8, i8)),mut _9: *mut (isize, (u16, i16, u8, i8)),mut _10: (u16, i16, u8, i8),mut _11: i8,mut _12: isize,mut _13: isize) -> bool {
mir! {
type RET = bool;
let _14: isize;
let _15: isize;
let _16: *mut (isize, (u16, i16, u8, i8));
let _17: ([u32; 5], i128, (u16, i16), i8);
let _18: ([i8; 1],);
let _19: i128;
let _20: Adt52;
let _21: isize;
let _22: [u64; 8];
let _23: isize;
let _24: usize;
let _25: u8;
let _26: f32;
let _27: Adt54;
let _28: [u64; 1];
let _29: bool;
let _30: [i32; 5];
let _31: i128;
let _32: [usize; 7];
let _33: Adt59;
let _34: f32;
let _35: usize;
let _36: Adt52;
let _37: char;
let _38: f32;
let _39: Adt65;
let _40: Adt58;
let _41: i32;
let _42: isize;
let _43: f32;
let _44: (u64, f64);
let _45: char;
let _46: i8;
let _47: ();
let _48: ();
{
_6 = _8.1.1;
(*_1).1.0 = false as u16;
_3 = ((*_1).0, (*_9).1);
(*_1).1 = _8.1;
Call((*_9).1.1 = fn11((*_9).0, _3, _3.1.3, _10.3, _10, _1, _3.1.2, _10, _1, (*_9).1.2, (*_1).1.2, _3.1.2, _8.1.3, _10.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_9).1.3 = (*_9).1.0 as i8;
_14 = _3.0;
(*_9).0 = _14;
_12 = _3.0 << (*_9).1.0;
_3.1.2 = _10.2 - _10.2;
_8.1.1 = '\u{7a7a8}' as i16;
(*_9).1.3 = _8.1.3 | _11;
_13 = _12 ^ _12;
Call(_15 = fn18(_10.2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_9).1.2 = (*_9).1.1 as u8;
_17.0 = [3691239861_u32,3680539561_u32,2953594022_u32,3036517013_u32,1765110446_u32];
_6 = -(*_1).1.1;
_17.3 = -(*_9).1.3;
(*_1).1.2 = (*_1).1.0 as u8;
_20.fld4 = [2512892972840821018_u64,6850719395292745620_u64,13386350715384812349_u64,17727922153963244199_u64,13694092007055372847_u64,16333536360022777730_u64,5707537401358333237_u64,15727420559544806121_u64];
_21 = !_13;
Goto(bb3)
}
bb3 = {
(*_1).1.2 = (-57095462260276431073398206839732340794_i128) as u8;
(*_1).1.0 = 9034215837368561032_u64 as u16;
(*_1).1.2 = _3.1.2;
_20.fld5 = ((*_1).1.0, (*_1).1.1, (*_9).1.2, (*_1).1.3);
(*_1).1.3 = -_17.3;
RET = false | false;
_22 = [1142737329353336198_u64,16942758199471803713_u64,11215553143719126579_u64,452107140418314507_u64,13229761162600778594_u64,16259914337822303257_u64,13108656364812823090_u64,12862359745871439296_u64];
(*_9).1.2 = (*_1).1.1 as u8;
_3.1.3 = (*_9).1.3 | _20.fld5.3;
_20.fld0 = !false;
Goto(bb4)
}
bb4 = {
_3.1.1 = (*_1).1.1;
_17.2.0 = _20.fld5.0;
_3.0 = _13;
_18.0 = [_20.fld5.3];
_20.fld2 = [348466615_u32,470133786_u32,3445240715_u32,2598241553_u32,1826101501_u32];
_23 = !_13;
_27.fld0.0 = _3.0 | _3.0;
_3 = (*_9);
_10.0 = (*_9).1.0;
_27.fld0 = (_23, (*_9).1);
_10.0 = 57062304008403679403075248585888181084_u128 as u16;
_3.1.3 = _27.fld0.1.3 - (*_1).1.3;
_20.fld4 = [757377313945976190_u64,17761958376646115567_u64,967445467697661340_u64,11054676490757715614_u64,6658852802031902888_u64,4925791004766398147_u64,14181467172785222094_u64,11404573284286612227_u64];
_23 = '\u{26026}' as isize;
_25 = _3.1.2 >> (*_9).1.3;
(*_1).0 = _27.fld0.0;
_27.fld2 = (-5350257288531066096_i64);
_17.2.1 = _27.fld0.1.1 - (*_9).1.1;
_20.fld5.1 = -(*_1).1.1;
_27.fld0.1 = ((*_9).1.0, _10.1, _20.fld5.2, (*_9).1.3);
Goto(bb5)
}
bb5 = {
_1 = core::ptr::addr_of_mut!(_8);
(*_1) = (_27.fld0.0, (*_9).1);
(*_9).1 = ((*_1).1.0, _3.1.1, (*_1).1.2, _20.fld5.3);
_17.0 = [844519779_u32,3734904207_u32,505216120_u32,1531455120_u32,747224390_u32];
_27.fld0.1.3 = _3.1.3;
_26 = 226001171782552243875311568510502278449_u128 as f32;
_17.2 = ((*_9).1.0, _3.1.1);
_20.fld5 = (_27.fld0.1.0, (*_9).1.1, (*_1).1.2, (*_1).1.3);
(*_9).1.2 = _25;
_9 = core::ptr::addr_of_mut!((*_1));
_22 = [11899148909970172949_u64,9711250998425881227_u64,2064208205238775454_u64,3613352521209053144_u64,15203137537855779910_u64,6589036727809005364_u64,1531219315784819383_u64,12647741842320416747_u64];
_9 = _1;
_16 = core::ptr::addr_of_mut!((*_1));
_11 = !_27.fld0.1.3;
(*_1).1.0 = 265245452691060332243372609559486968273_u128 as u16;
_24 = _27.fld0.0 as usize;
(*_16).1.1 = _20.fld0 as i16;
(*_16).1.0 = _20.fld5.0;
_3.1.2 = 1318616564_u32 as u8;
_18.0 = [_11];
(*_9) = (_13, _3.1);
(*_9).1.0 = !_3.1.0;
_20.fld3 = [(*_9).1.2,_8.1.2,_10.2,_10.2,_25];
_17.3 = (*_16).1.3;
(*_9).1.3 = _27.fld0.1.3 * _17.3;
Call(_17.2.0 = core::intrinsics::bswap(_10.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
(*_16) = (_13, _27.fld0.1);
_27.fld1 = core::ptr::addr_of!(_27.fld3);
RET = _20.fld0 ^ _20.fld0;
_22 = [4724488649093481351_u64,4725831975256234906_u64,897201659147850047_u64,1307442929840688281_u64,3105769708279538089_u64,11890563403869033722_u64,12915101373911788597_u64,15192372649991757823_u64];
(*_16).1 = (_17.2.0, _3.1.1, _20.fld5.2, _27.fld0.1.3);
Call((*_1).1.1 = core::intrinsics::bswap(_17.2.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_31 = 87519198444065356531596380379816730463_i128 | 102452681265867560626004540166756918123_i128;
(*_9) = (_27.fld0.0, _3.1);
_20.fld1 = _24 as f64;
_20.fld2 = [1794610863_u32,123088117_u32,728991267_u32,3639694052_u32,2930548529_u32];
match _27.fld2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463458024350143237145360 => bb8,
_ => bb6
}
}
bb8 = {
_33.fld0 = [_24,_24,_24,_24,_24,_24,_24];
_8.1.3 = (-730525284_i32) as i8;
_23 = '\u{c780d}' as isize;
_10.1 = (*_1).1.1;
(*_16) = _27.fld0;
_19 = _31;
_8.1.0 = !_27.fld0.1.0;
_19 = _31 * _31;
(*_16).0 = !_21;
(*_9).1.3 = _27.fld0.1.3;
(*_9).1.1 = _6;
(*_1).1 = (_17.2.0, _3.1.1, _25, _11);
_10.3 = _27.fld0.1.3;
_8.0 = _20.fld1 as isize;
_8.1.3 = _3.1.3;
_39.fld2.fld5.0 = !_3.1.0;
(*_1).1.3 = _24 as i8;
(*_1).1 = _10;
_39.fld2.fld5.0 = _3.1.0 | (*_16).1.0;
_39.fld6.fld1.fld3 = [(*_16).1.2,_10.2,_25,(*_9).1.2,(*_9).1.2];
match _27.fld2 {
0 => bb6,
340282366920938463458024350143237145360 => bb10,
_ => bb9
}
}
bb9 = {
(*_9).1.2 = (*_9).1.1 as u8;
_17.0 = [3691239861_u32,3680539561_u32,2953594022_u32,3036517013_u32,1765110446_u32];
_6 = -(*_1).1.1;
_17.3 = -(*_9).1.3;
(*_1).1.2 = (*_1).1.0 as u8;
_20.fld4 = [2512892972840821018_u64,6850719395292745620_u64,13386350715384812349_u64,17727922153963244199_u64,13694092007055372847_u64,16333536360022777730_u64,5707537401358333237_u64,15727420559544806121_u64];
_21 = !_13;
Goto(bb3)
}
bb10 = {
_36.fld2 = _20.fld2;
_36.fld0 = _21 >= _12;
_17.0 = [4237275665_u32,117103885_u32,3183257499_u32,1992236518_u32,1939942201_u32];
(*_16) = _27.fld0;
_8 = (_12, _3.1);
_39.fld0.fld2 = [1167006556_i32,(-2053447470_i32),(-934569113_i32),(-2143052433_i32),1423794688_i32];
_39.fld6.fld0 = !_19;
_39.fld6.fld2.1 = -_20.fld1;
_39.fld5.0 = _18.0;
_39.fld6.fld2.0 = '\u{8974f}';
(*_16).1.0 = _26 as u16;
_20.fld4 = _22;
(*_9).1.2 = _11 as u8;
_20.fld6 = _27.fld0.1.0 as i64;
_8.1.2 = 4214779525_u32 as u8;
_8.1.2 = !_25;
_29 = !_36.fld0;
_39.fld2.fld5.2 = 294397264450685817049255998306801434400_u128 as u8;
_11 = _8.1.3;
_23 = (*_9).0;
_41 = (-1697744009_i32);
_3.0 = 5207744037524077187_u64 as isize;
_39.fld6.fld1.fld3 = _20.fld3;
match _41 {
0 => bb8,
1 => bb4,
2 => bb9,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
340282366920938463463374607430070467447 => bb16,
_ => bb15
}
}
bb11 = {
(*_9).1.2 = (*_9).1.1 as u8;
_17.0 = [3691239861_u32,3680539561_u32,2953594022_u32,3036517013_u32,1765110446_u32];
_6 = -(*_1).1.1;
_17.3 = -(*_9).1.3;
(*_1).1.2 = (*_1).1.0 as u8;
_20.fld4 = [2512892972840821018_u64,6850719395292745620_u64,13386350715384812349_u64,17727922153963244199_u64,13694092007055372847_u64,16333536360022777730_u64,5707537401358333237_u64,15727420559544806121_u64];
_21 = !_13;
Goto(bb3)
}
bb12 = {
(*_1).1.2 = (-57095462260276431073398206839732340794_i128) as u8;
(*_1).1.0 = 9034215837368561032_u64 as u16;
(*_1).1.2 = _3.1.2;
_20.fld5 = ((*_1).1.0, (*_1).1.1, (*_9).1.2, (*_1).1.3);
(*_1).1.3 = -_17.3;
RET = false | false;
_22 = [1142737329353336198_u64,16942758199471803713_u64,11215553143719126579_u64,452107140418314507_u64,13229761162600778594_u64,16259914337822303257_u64,13108656364812823090_u64,12862359745871439296_u64];
(*_9).1.2 = (*_1).1.1 as u8;
_3.1.3 = (*_9).1.3 | _20.fld5.3;
_20.fld0 = !false;
Goto(bb4)
}
bb13 = {
_31 = 87519198444065356531596380379816730463_i128 | 102452681265867560626004540166756918123_i128;
(*_9) = (_27.fld0.0, _3.1);
_20.fld1 = _24 as f64;
_20.fld2 = [1794610863_u32,123088117_u32,728991267_u32,3639694052_u32,2930548529_u32];
match _27.fld2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463458024350143237145360 => bb8,
_ => bb6
}
}
bb14 = {
(*_16) = (_13, _27.fld0.1);
_27.fld1 = core::ptr::addr_of!(_27.fld3);
RET = _20.fld0 ^ _20.fld0;
_22 = [4724488649093481351_u64,4725831975256234906_u64,897201659147850047_u64,1307442929840688281_u64,3105769708279538089_u64,11890563403869033722_u64,12915101373911788597_u64,15192372649991757823_u64];
(*_16).1 = (_17.2.0, _3.1.1, _20.fld5.2, _27.fld0.1.3);
Call((*_1).1.1 = core::intrinsics::bswap(_17.2.1), ReturnTo(bb7), UnwindUnreachable())
}
bb15 = {
(*_9).1.2 = (*_9).1.1 as u8;
_17.0 = [3691239861_u32,3680539561_u32,2953594022_u32,3036517013_u32,1765110446_u32];
_6 = -(*_1).1.1;
_17.3 = -(*_9).1.3;
(*_1).1.2 = (*_1).1.0 as u8;
_20.fld4 = [2512892972840821018_u64,6850719395292745620_u64,13386350715384812349_u64,17727922153963244199_u64,13694092007055372847_u64,16333536360022777730_u64,5707537401358333237_u64,15727420559544806121_u64];
_21 = !_13;
Goto(bb3)
}
bb16 = {
_39.fld6.fld3.fld2 = [_41,_41,_41,_41,_41];
(*_16).1 = (_20.fld5.0, _3.1.1, _20.fld5.2, _3.1.3);
_39.fld5.0 = _18.0;
(*_16) = (_2, _27.fld0.1);
_20.fld0 = _29;
_39.fld6.fld1.fld0 = _24 != _24;
_20.fld4 = [14481607450320522029_u64,14245844695862877346_u64,6471224481450692907_u64,6093218516263118482_u64,12086769184754595059_u64,9509856632719553060_u64,847971647099367274_u64,8323276890687585228_u64];
_10.3 = -_27.fld0.1.3;
(*_16).1.3 = -_27.fld0.1.3;
_20.fld6 = _41 as i64;
_27.fld0.0 = _23;
_6 = _27.fld2 as i16;
_32 = [_24,_24,_24,_24,_24,_24,_24];
_17.0 = [2603669830_u32,2519133297_u32,1550443308_u32,2386698846_u32,3055620877_u32];
_3.1.0 = !(*_16).1.0;
_33.fld1 = [_20.fld5.1];
(*_16).1.1 = _27.fld0.1.1 >> _21;
_39.fld2.fld6 = !_20.fld6;
_28 = [12450367680208937667_u64];
_36.fld6 = _39.fld2.fld6 * _39.fld2.fld6;
(*_16).0 = !_21;
(*_9).1.0 = !_5;
_36.fld6 = !_20.fld6;
_44 = (8442867742943968408_u64, _20.fld1);
_39.fld6.fld1 = Adt52 { fld0: _20.fld0,fld1: _44.1,fld2: _17.0,fld3: _20.fld3,fld4: _20.fld4,fld5: (*_9).1,fld6: _36.fld6 };
Goto(bb17)
}
bb17 = {
Call(_47 = dump_var(10_usize, 15_usize, Move(_15), 6_usize, Move(_6), 29_usize, Move(_29), 18_usize, Move(_18)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(10_usize, 23_usize, Move(_23), 2_usize, Move(_2), 13_usize, Move(_13), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_47 = dump_var(10_usize, 25_usize, Move(_25), 10_usize, Move(_10), 14_usize, Move(_14), 4_usize, Move(_4)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize,mut _2: (isize, (u16, i16, u8, i8)),mut _3: i8,mut _4: i8,mut _5: (u16, i16, u8, i8),mut _6: *mut (isize, (u16, i16, u8, i8)),mut _7: u8,mut _8: (u16, i16, u8, i8),mut _9: *mut (isize, (u16, i16, u8, i8)),mut _10: u8,mut _11: u8,mut _12: u8,mut _13: i8,mut _14: u8) -> i16 {
mir! {
type RET = i16;
let _15: Adt62;
let _16: isize;
let _17: [u64; 1];
let _18: isize;
let _19: [u64; 8];
let _20: usize;
let _21: f64;
let _22: u32;
let _23: u16;
let _24: *const [u8; 5];
let _25: Adt60;
let _26: *const [bool; 4];
let _27: f64;
let _28: u8;
let _29: ((isize, (u16, i16, u8, i8)),);
let _30: Adt54;
let _31: Adt52;
let _32: Adt61;
let _33: isize;
let _34: usize;
let _35: f64;
let _36: [usize; 7];
let _37: u8;
let _38: u32;
let _39: [u64; 8];
let _40: isize;
let _41: char;
let _42: ();
let _43: ();
{
_15.fld1.fld5.0 = !(*_9).1.0;
_8 = (_15.fld1.fld5.0, _2.1.1, _11, _3);
_15.fld1.fld2 = [3127568484_u32,3959806604_u32,1491549907_u32,662743580_u32,67316922_u32];
Goto(bb1)
}
bb1 = {
_15.fld5 = (*_9).0 as i32;
Goto(bb2)
}
bb2 = {
_12 = (*_9).1.2;
_2.1.2 = '\u{9fe5b}' as u8;
_15.fld1.fld3 = [(*_9).1.2,_10,(*_9).1.2,(*_6).1.2,_8.2];
_15.fld1.fld5.3 = 2_usize as i8;
_8.0 = _15.fld1.fld5.0;
_15.fld1.fld1 = (*_6).1.2 as f64;
(*_6).1.3 = -_8.3;
_15.fld1.fld0 = false;
(*_6).1.0 = _8.0 % 42692_u16;
(*_9).1.2 = _8.2 << _13;
_15.fld4 = core::ptr::addr_of!(_15.fld2);
Call(_15.fld3 = fn12(_8.1, _12, (*_6).1.3, (*_6).1.3, _2.1, _2.1.1, (*_9).1.0, _5, _2.1.2, _9, _15.fld1.fld2, _5.3, _2.1, _2.1.2, (*_6).1.0, (*_6).1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_6).0 = !_1;
RET = _1 as i16;
(*_9).1.3 = !_2.1.3;
_15.fld1.fld6 = _8.1 as i64;
_17 = [18053578400522005146_u64];
(*_6).1.3 = _2.0 as i8;
_5.1 = _15.fld1.fld1 as i16;
_5.3 = _8.1 as i8;
_15.fld1.fld5 = ((*_9).1.0, _8.1, (*_6).1.2, _3);
(*_6).0 = _2.0;
_15.fld1.fld6 = 4077467826013505611_i64 << (*_9).0;
_15.fld1.fld5.2 = (*_9).1.2;
Goto(bb4)
}
bb4 = {
_15.fld1.fld3 = [(*_6).1.2,(*_9).1.2,_7,(*_9).1.2,_14];
_16 = (*_9).0;
_18 = !(*_9).0;
_5.0 = (*_9).1.0;
_8.3 = (*_6).1.3;
_15.fld0 = _15.fld1.fld3;
_2.0 = (*_6).0;
_15.fld1.fld5.3 = !(*_9).1.3;
_15.fld1.fld6 = (-7949516046460792496_i64) - 3722863466559193718_i64;
_1 = _2.0 + _18;
_2.1.2 = !_15.fld1.fld5.2;
_5.1 = _2.1.2 as i16;
_15.fld0 = _15.fld1.fld3;
_15.fld1.fld5.1 = _8.1;
(*_9).1.3 = 9163518170252033227_usize as i8;
_8.0 = !(*_9).1.0;
_19 = [3148999677789838467_u64,16979130803720420572_u64,2314475337657408059_u64,18294981502003010183_u64,1489355719307352020_u64,2255544925500328327_u64,11854328618577963939_u64,16712236836223349844_u64];
_20 = (-160911392256961132347820794872344311269_i128) as usize;
_5 = ((*_6).1.0, _2.1.1, _10, _3);
_15.fld1.fld1 = _15.fld5 as f64;
_5.2 = 140256648641211670359024490478195803019_u128 as u8;
(*_6).1.2 = !_2.1.2;
_15.fld1.fld6 = 8318647031757066193_i64 >> _15.fld1.fld5.0;
_2 = (_16, _5);
_15.fld1.fld5.2 = (*_9).1.2;
Call(_15.fld1 = fn17(_2.1.0, _15.fld3, _2.1.2, (*_9).1.0, (*_6).1.2, _12, (*_9).0, _2, _2.1.3, _2.1.2, _5, _5.3), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_18 = (*_9).0 ^ _2.0;
_2.1.2 = _15.fld5 as u8;
(*_9).1.3 = _8.3 * _4;
_25.fld1.fld5.3 = -_13;
_18 = (*_6).0 << (*_6).1.0;
_25.fld1.fld5.2 = '\u{6e0be}' as u8;
_25.fld2 = !(*_9).1.2;
_2.1.2 = (*_9).1.2 + _25.fld2;
_15.fld1.fld5.2 = _12 + _12;
_25.fld0.fld0 = [2991327491_u32,1492674321_u32,2197946243_u32,3425708569_u32,2210342488_u32];
match _15.fld1.fld6 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463461020559633243901804 => bb11,
_ => bb10
}
}
bb6 = {
_15.fld1.fld3 = [(*_6).1.2,(*_9).1.2,_7,(*_9).1.2,_14];
_16 = (*_9).0;
_18 = !(*_9).0;
_5.0 = (*_9).1.0;
_8.3 = (*_6).1.3;
_15.fld0 = _15.fld1.fld3;
_2.0 = (*_6).0;
_15.fld1.fld5.3 = !(*_9).1.3;
_15.fld1.fld6 = (-7949516046460792496_i64) - 3722863466559193718_i64;
_1 = _2.0 + _18;
_2.1.2 = !_15.fld1.fld5.2;
_5.1 = _2.1.2 as i16;
_15.fld0 = _15.fld1.fld3;
_15.fld1.fld5.1 = _8.1;
(*_9).1.3 = 9163518170252033227_usize as i8;
_8.0 = !(*_9).1.0;
_19 = [3148999677789838467_u64,16979130803720420572_u64,2314475337657408059_u64,18294981502003010183_u64,1489355719307352020_u64,2255544925500328327_u64,11854328618577963939_u64,16712236836223349844_u64];
_20 = (-160911392256961132347820794872344311269_i128) as usize;
_5 = ((*_6).1.0, _2.1.1, _10, _3);
_15.fld1.fld1 = _15.fld5 as f64;
_5.2 = 140256648641211670359024490478195803019_u128 as u8;
(*_6).1.2 = !_2.1.2;
_15.fld1.fld6 = 8318647031757066193_i64 >> _15.fld1.fld5.0;
_2 = (_16, _5);
_15.fld1.fld5.2 = (*_9).1.2;
Call(_15.fld1 = fn17(_2.1.0, _15.fld3, _2.1.2, (*_9).1.0, (*_6).1.2, _12, (*_9).0, _2, _2.1.3, _2.1.2, _5, _5.3), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
(*_6).0 = !_1;
RET = _1 as i16;
(*_9).1.3 = !_2.1.3;
_15.fld1.fld6 = _8.1 as i64;
_17 = [18053578400522005146_u64];
(*_6).1.3 = _2.0 as i8;
_5.1 = _15.fld1.fld1 as i16;
_5.3 = _8.1 as i8;
_15.fld1.fld5 = ((*_9).1.0, _8.1, (*_6).1.2, _3);
(*_6).0 = _2.0;
_15.fld1.fld6 = 4077467826013505611_i64 << (*_9).0;
_15.fld1.fld5.2 = (*_9).1.2;
Goto(bb4)
}
bb8 = {
_12 = (*_9).1.2;
_2.1.2 = '\u{9fe5b}' as u8;
_15.fld1.fld3 = [(*_9).1.2,_10,(*_9).1.2,(*_6).1.2,_8.2];
_15.fld1.fld5.3 = 2_usize as i8;
_8.0 = _15.fld1.fld5.0;
_15.fld1.fld1 = (*_6).1.2 as f64;
(*_6).1.3 = -_8.3;
_15.fld1.fld0 = false;
(*_6).1.0 = _8.0 % 42692_u16;
(*_9).1.2 = _8.2 << _13;
_15.fld4 = core::ptr::addr_of!(_15.fld2);
Call(_15.fld3 = fn12(_8.1, _12, (*_6).1.3, (*_6).1.3, _2.1, _2.1.1, (*_9).1.0, _5, _2.1.2, _9, _15.fld1.fld2, _5.3, _2.1, _2.1.2, (*_6).1.0, (*_6).1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_15.fld5 = (*_9).0 as i32;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_15.fld2 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_3 = !_2.1.3;
_25.fld1.fld5.1 = _15.fld1.fld5.1;
_2.1.2 = _2.1.1 as u8;
_15.fld4 = core::ptr::addr_of!(_15.fld2);
_25.fld1.fld1 = _15.fld1.fld1 - _15.fld1.fld1;
_14 = (*_9).1.2 / 190_u8;
_15.fld1.fld3 = [(*_6).1.2,(*_9).1.2,(*_6).1.2,_12,_25.fld2];
_2.1 = (_5.0, _8.1, (*_6).1.2, (*_9).1.3);
_25.fld1.fld5.1 = _8.1 * _15.fld1.fld5.1;
_25.fld1 = Adt52 { fld0: _15.fld1.fld0,fld1: _15.fld1.fld1,fld2: _15.fld1.fld2,fld3: _15.fld1.fld3,fld4: _15.fld1.fld4,fld5: _8,fld6: _15.fld1.fld6 };
_21 = _25.fld1.fld1 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001376198670971243_f64);
_15.fld1 = Move(_25.fld1);
(*_6).1.2 = !_8.2;
_25.fld0.fld5 = [(-139452716524056954448768797359255728161_i128),16616943667798147327234221467639327240_i128];
_8 = ((*_6).1.0, _5.1, _2.1.2, _13);
_13 = _2.1.3;
Call((*_9).0 = core::intrinsics::bswap(_18), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
(*_6).0 = _1;
_25.fld3 = _15.fld3;
(*_9).1.2 = !_2.1.2;
_25.fld3 = core::ptr::addr_of!(_15.fld0);
_8.3 = _13 << _18;
_25.fld0.fld5 = [(-88028492183540588824839820279440529775_i128),105904993158563086422328400570333832782_i128];
_25.fld0.fld3 = [_20,_20,_20,_20,_20,_20,_20];
_25.fld0.fld5 = [61888283377970184889899683685840447724_i128,(-16522619004365609309724580005509418151_i128)];
_29 = (_2,);
_28 = _14 & _29.0.1.2;
(*_9).1.3 = _13 + _2.1.3;
_8.1 = 12610187083454566582630107889739113130_i128 as i16;
_15.fld5 = 906384489_i32;
_5.0 = !(*_9).1.0;
_23 = (*_6).1.0 ^ _15.fld1.fld5.0;
_25.fld0.fld7 = _17;
_15.fld0 = _15.fld1.fld3;
_25.fld0.fld0 = _15.fld1.fld2;
_5 = (_23, _2.1.1, _25.fld2, (*_6).1.3);
_15.fld1.fld2 = [3825207270_u32,297861885_u32,2258275678_u32,4267279007_u32,1292644001_u32];
_15.fld1.fld5.3 = (*_9).1.3;
_15.fld3 = core::ptr::addr_of!(_15.fld1.fld3);
_5.3 = -(*_6).1.3;
_19 = [14567967183230487255_u64,16692167353150044702_u64,11844393678531304964_u64,7033726891122402348_u64,4049237751032944463_u64,9699024412410494015_u64,5541232410709986972_u64,4884792342044340710_u64];
_31.fld5.3 = (*_6).1.3;
Goto(bb13)
}
bb13 = {
_15.fld1.fld5 = (_5.0, _29.0.1.1, (*_9).1.2, (*_9).1.3);
_32.fld2.fld4 = (14762629851650332952_u64, _15.fld1.fld1);
(*_9).1.0 = _5.0 - _29.0.1.0;
_15.fld1.fld5.3 = _2.1.3;
_31.fld1 = _31.fld5.3 as f64;
_25.fld0.fld0 = [1592795227_u32,2792456656_u32,1702162762_u32,2013671288_u32,2326573668_u32];
_31.fld0 = (*_6).1.3 != (*_9).1.3;
_30.fld0.1.3 = _5.3;
_32.fld2.fld2.1 = _5.1 - _2.1.1;
_2.1.1 = -_32.fld2.fld2.1;
_30.fld0.1.2 = (*_9).1.2 + _15.fld1.fld5.2;
_8 = _5;
_31.fld2 = [1068588967_u32,3132160045_u32,456039581_u32,503844335_u32,1572203056_u32];
_15.fld1.fld5.2 = !(*_6).1.2;
(*_6).0 = !_18;
_36 = _25.fld0.fld3;
_15.fld1.fld2 = [755472384_u32,2417359124_u32,1239062162_u32,3448952086_u32,555954788_u32];
_32.fld2.fld2.2 = _15.fld1.fld5.2 & _30.fld0.1.2;
_30.fld1 = core::ptr::addr_of!(_30.fld3);
_32.fld3 = _20;
_15.fld1.fld4 = _19;
_22 = 3159677736_u32 - 1003788144_u32;
match _15.fld5 {
0 => bb6,
1 => bb14,
2 => bb15,
3 => bb16,
906384489 => bb18,
_ => bb17
}
}
bb14 = {
_12 = (*_9).1.2;
_2.1.2 = '\u{9fe5b}' as u8;
_15.fld1.fld3 = [(*_9).1.2,_10,(*_9).1.2,(*_6).1.2,_8.2];
_15.fld1.fld5.3 = 2_usize as i8;
_8.0 = _15.fld1.fld5.0;
_15.fld1.fld1 = (*_6).1.2 as f64;
(*_6).1.3 = -_8.3;
_15.fld1.fld0 = false;
(*_6).1.0 = _8.0 % 42692_u16;
(*_9).1.2 = _8.2 << _13;
_15.fld4 = core::ptr::addr_of!(_15.fld2);
Call(_15.fld3 = fn12(_8.1, _12, (*_6).1.3, (*_6).1.3, _2.1, _2.1.1, (*_9).1.0, _5, _2.1.2, _9, _15.fld1.fld2, _5.3, _2.1, _2.1.2, (*_6).1.0, (*_6).1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_15.fld2 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_3 = !_2.1.3;
_25.fld1.fld5.1 = _15.fld1.fld5.1;
_2.1.2 = _2.1.1 as u8;
_15.fld4 = core::ptr::addr_of!(_15.fld2);
_25.fld1.fld1 = _15.fld1.fld1 - _15.fld1.fld1;
_14 = (*_9).1.2 / 190_u8;
_15.fld1.fld3 = [(*_6).1.2,(*_9).1.2,(*_6).1.2,_12,_25.fld2];
_2.1 = (_5.0, _8.1, (*_6).1.2, (*_9).1.3);
_25.fld1.fld5.1 = _8.1 * _15.fld1.fld5.1;
_25.fld1 = Adt52 { fld0: _15.fld1.fld0,fld1: _15.fld1.fld1,fld2: _15.fld1.fld2,fld3: _15.fld1.fld3,fld4: _15.fld1.fld4,fld5: _8,fld6: _15.fld1.fld6 };
_21 = _25.fld1.fld1 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001376198670971243_f64);
_15.fld1 = Move(_25.fld1);
(*_6).1.2 = !_8.2;
_25.fld0.fld5 = [(-139452716524056954448768797359255728161_i128),16616943667798147327234221467639327240_i128];
_8 = ((*_6).1.0, _5.1, _2.1.2, _13);
_13 = _2.1.3;
Call((*_9).0 = core::intrinsics::bswap(_18), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
Return()
}
bb17 = {
(*_6).0 = !_1;
RET = _1 as i16;
(*_9).1.3 = !_2.1.3;
_15.fld1.fld6 = _8.1 as i64;
_17 = [18053578400522005146_u64];
(*_6).1.3 = _2.0 as i8;
_5.1 = _15.fld1.fld1 as i16;
_5.3 = _8.1 as i8;
_15.fld1.fld5 = ((*_9).1.0, _8.1, (*_6).1.2, _3);
(*_6).0 = _2.0;
_15.fld1.fld6 = 4077467826013505611_i64 << (*_9).0;
_15.fld1.fld5.2 = (*_9).1.2;
Goto(bb4)
}
bb18 = {
_32.fld2.fld2 = (_5.0, _15.fld1.fld5.1, _30.fld0.1.2, _30.fld0.1.3);
_15.fld1 = Adt52 { fld0: _31.fld0,fld1: _31.fld1,fld2: _25.fld0.fld0,fld3: _15.fld0,fld4: _19,fld5: _5,fld6: (-3767496884101948941_i64) };
_32.fld2.fld6 = [(*_9).1.3,_13,_13,(*_9).1.3];
_2.1.0 = _32.fld2.fld4.0 as u16;
_29.0.0 = _20 as isize;
_15.fld1.fld5.1 = _8.1 & _8.1;
_32.fld1.fld3 = [_22,_22,_22,_22,_22];
_15.fld2 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_32.fld2.fld2 = (_23, _2.1.1, _28, _29.0.1.3);
_33 = !(*_9).0;
_38 = _22;
_23 = !(*_9).1.0;
_3 = _32.fld2.fld4.0 as i8;
_32.fld0 = [_31.fld0,_31.fld0,_15.fld1.fld0,_31.fld0];
_8 = (_23, _2.1.1, _25.fld2, _31.fld5.3);
_29.0.1 = ((*_6).1.0, _15.fld1.fld5.1, _28, _3);
_25.fld0.fld3 = _36;
_2.1.1 = _10 as i16;
_32.fld1.fld4 = _29.0.1.1 | _8.1;
(*_6).1.2 = _15.fld1.fld5.2;
_21 = _31.fld1;
(*_9).1.2 = _32.fld3 as u8;
_25.fld3 = _15.fld3;
_30.fld0 = ((*_6).0, _29.0.1);
_32.fld7 = Adt49 { fld0: _25.fld0.fld3 };
_31.fld5.2 = _28 << _18;
_32.fld5 = [_32.fld3,_20,_20,_20,_32.fld3,_32.fld3,_32.fld3];
Goto(bb19)
}
bb19 = {
Call(_42 = dump_var(11_usize, 8_usize, Move(_8), 36_usize, Move(_36), 29_usize, Move(_29), 12_usize, Move(_12)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(11_usize, 20_usize, Move(_20), 38_usize, Move(_38), 3_usize, Move(_3), 5_usize, Move(_5)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_42 = dump_var(11_usize, 13_usize, Move(_13), 14_usize, Move(_14), 22_usize, Move(_22), 10_usize, Move(_10)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: i16,mut _2: u8,mut _3: i8,mut _4: i8,mut _5: (u16, i16, u8, i8),mut _6: i16,mut _7: u16,mut _8: (u16, i16, u8, i8),mut _9: u8,mut _10: *mut (isize, (u16, i16, u8, i8)),mut _11: [u32; 5],mut _12: i8,mut _13: (u16, i16, u8, i8),mut _14: u8,mut _15: u16,mut _16: u8) -> *const [u8; 5] {
mir! {
type RET = *const [u8; 5];
let _17: u8;
let _18: Adt60;
let _19: f64;
let _20: char;
let _21: f32;
let _22: f64;
let _23: ([i32; 5], [i8; 4], i32, char, f64, (u16, i16, u8, i8));
let _24: f32;
let _25: isize;
let _26: [bool; 4];
let _27: (*const u32,);
let _28: ([i8; 1],);
let _29: Adt62;
let _30: f64;
let _31: [isize; 7];
let _32: i128;
let _33: (u64, f64);
let _34: [isize; 6];
let _35: i32;
let _36: [u32; 5];
let _37: Adt52;
let _38: [i32; 5];
let _39: isize;
let _40: [i16; 1];
let _41: bool;
let _42: f32;
let _43: Adt49;
let _44: Adt57;
let _45: f64;
let _46: [usize; 7];
let _47: [isize; 6];
let _48: ();
let _49: ();
{
_5.2 = _16 * (*_10).1.2;
_18.fld3 = core::ptr::addr_of!(_18.fld1.fld3);
_8.0 = 278427298976445031493631826687241403175_u128 as u16;
_8.0 = (*_10).1.0 % 58530_u16;
(*_10).1.0 = (*_10).0 as u16;
_18.fld0.fld2 = _8.0 - _7;
_18.fld1.fld5.0 = _7;
_18.fld0.fld7 = [7959252003886103921_u64];
_5.1 = _8.1 + _6;
_12 = 287711996060689806147904263131350546937_u128 as i8;
_2 = !_13.2;
_18.fld0.fld3 = [5622576352960089547_usize,10811844634546519257_usize,3081099778686615008_usize,5951534701089985053_usize,2_usize,10548836814603134109_usize,7_usize];
(*_10).0 = 14225301781611836316_u64 as isize;
_18.fld1.fld3 = [(*_10).1.2,_5.2,_16,(*_10).1.2,_2];
_20 = '\u{f7515}';
Goto(bb1)
}
bb1 = {
_14 = _2;
_18.fld0.fld0 = _11;
(*_10).1.2 = _16 ^ _8.2;
_18.fld1.fld1 = _18.fld0.fld2 as f64;
_21 = 1656855720_i32 as f32;
_13 = (_15, _6, _9, (*_10).1.3);
_18.fld0.fld6 = [(*_10).1.3];
_8 = ((*_10).1.0, _5.1, _9, (*_10).1.3);
_18.fld1.fld2 = [1277116590_u32,2960998261_u32,1692851424_u32,1148489199_u32,922361762_u32];
_8.0 = !_15;
_12 = (*_10).1.3 ^ _13.3;
(*_10).1.3 = 10473145321371019290_u64 as i8;
_19 = _18.fld1.fld1 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000712286328037442_f64;
_18.fld1.fld5.1 = _8.1;
(*_10).1.0 = 1925625053_i32 as u16;
_21 = _19 as f32;
_18.fld1.fld5 = (_5.0, _6, _5.2, _8.3);
_20 = '\u{32ad8}';
_18.fld1.fld5.1 = _5.1;
Goto(bb2)
}
bb2 = {
_18.fld4 = [_8.1];
_18.fld1.fld5.1 = _5.1;
_16 = 2625396309_u32 as u8;
_18.fld1.fld3 = [_18.fld1.fld5.2,_18.fld1.fld5.2,(*_10).1.2,_8.2,(*_10).1.2];
_18.fld1.fld0 = _9 >= (*_10).1.2;
RET = core::ptr::addr_of!(_18.fld1.fld3);
_18.fld1.fld5.1 = _5.1 >> _8.1;
_18.fld0.fld4 = 283684268305515110174961474187870329453_u128;
_18.fld1.fld1 = _19;
_8.0 = (*_10).1.0;
RET = core::ptr::addr_of!(_18.fld1.fld3);
(*_10).1.3 = _8.3;
_18.fld1.fld5 = (_15, _8.1, (*_10).1.2, _12);
_18.fld1.fld5 = _5;
_8.0 = _15 << _8.1;
Goto(bb3)
}
bb3 = {
_23.2 = (-1675067637_i32) | (-177353560_i32);
_20 = '\u{dc956}';
_7 = _5.0;
_20 = '\u{10a91a}';
(*RET) = [(*_10).1.2,_18.fld1.fld5.2,(*_10).1.2,_18.fld1.fld5.2,_8.2];
_5.3 = (*_10).1.3 << _5.2;
_7 = (*_10).0 as u16;
_15 = 71893319986761225680111883826246757423_i128 as u16;
_18.fld1.fld1 = -_19;
(*_10).0 = 7_usize as isize;
_4 = 25401080241761991559264878915549466372_i128 as i8;
_21 = _23.2 as f32;
match _18.fld0.fld4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
283684268305515110174961474187870329453 => bb9,
_ => bb8
}
}
bb4 = {
_18.fld4 = [_8.1];
_18.fld1.fld5.1 = _5.1;
_16 = 2625396309_u32 as u8;
_18.fld1.fld3 = [_18.fld1.fld5.2,_18.fld1.fld5.2,(*_10).1.2,_8.2,(*_10).1.2];
_18.fld1.fld0 = _9 >= (*_10).1.2;
RET = core::ptr::addr_of!(_18.fld1.fld3);
_18.fld1.fld5.1 = _5.1 >> _8.1;
_18.fld0.fld4 = 283684268305515110174961474187870329453_u128;
_18.fld1.fld1 = _19;
_8.0 = (*_10).1.0;
RET = core::ptr::addr_of!(_18.fld1.fld3);
(*_10).1.3 = _8.3;
_18.fld1.fld5 = (_15, _8.1, (*_10).1.2, _12);
_18.fld1.fld5 = _5;
_8.0 = _15 << _8.1;
Goto(bb3)
}
bb5 = {
_14 = _2;
_18.fld0.fld0 = _11;
(*_10).1.2 = _16 ^ _8.2;
_18.fld1.fld1 = _18.fld0.fld2 as f64;
_21 = 1656855720_i32 as f32;
_13 = (_15, _6, _9, (*_10).1.3);
_18.fld0.fld6 = [(*_10).1.3];
_8 = ((*_10).1.0, _5.1, _9, (*_10).1.3);
_18.fld1.fld2 = [1277116590_u32,2960998261_u32,1692851424_u32,1148489199_u32,922361762_u32];
_8.0 = !_15;
_12 = (*_10).1.3 ^ _13.3;
(*_10).1.3 = 10473145321371019290_u64 as i8;
_19 = _18.fld1.fld1 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000712286328037442_f64;
_18.fld1.fld5.1 = _8.1;
(*_10).1.0 = 1925625053_i32 as u16;
_21 = _19 as f32;
_18.fld1.fld5 = (_5.0, _6, _5.2, _8.3);
_20 = '\u{32ad8}';
_18.fld1.fld5.1 = _5.1;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_5.2 = _18.fld1.fld5.2;
_18.fld0.fld2 = 3019432916728740442_usize as u16;
_23.5.1 = _8.1 << _5.3;
_23.5 = _18.fld1.fld5;
_19 = -_18.fld1.fld1;
_9 = !_5.2;
_18.fld0.fld0 = [844126550_u32,1740343626_u32,1147916622_u32,4287540490_u32,3540449631_u32];
_18.fld1.fld3 = [_13.2,_23.5.2,_23.5.2,(*_10).1.2,(*_10).1.2];
_9 = _18.fld1.fld5.2;
_18.fld0.fld5 = [(-138069563497966775900521132397040668000_i128),(-134064073467133584423674756926668738000_i128)];
Goto(bb10)
}
bb10 = {
_21 = _23.2 as f32;
_18.fld0.fld0 = [247616189_u32,3716846220_u32,4170916221_u32,1106574218_u32,2220075869_u32];
_5.2 = _9;
_5.3 = _18.fld1.fld0 as i8;
_29.fld3 = core::ptr::addr_of!(_18.fld1.fld3);
_19 = _18.fld1.fld1 / 1_f64;
_29.fld1.fld5 = (_18.fld1.fld5.0, _23.5.1, _18.fld1.fld5.2, _13.3);
(*RET) = [_5.2,_5.2,_16,_5.2,_9];
(*_10).1.3 = _5.3 - _3;
_28.0 = _18.fld0.fld6;
_18.fld2 = (*_10).1.2 * _5.2;
_5.1 = !_23.5.1;
_3 = _23.5.3 * (*_10).1.3;
_24 = _21;
_29.fld1.fld3 = [_5.2,_14,_14,(*_10).1.2,_14];
_13.0 = !_18.fld1.fld5.0;
_29.fld1.fld2 = [3522505795_u32,1365951130_u32,2335281205_u32,1217385433_u32,3877875338_u32];
_18.fld1.fld6 = !3013002806818043118_i64;
_17 = (*_10).1.2;
_29.fld0 = [_17,_23.5.2,_29.fld1.fld5.2,(*_10).1.2,_5.2];
_23.5.1 = _18.fld0.fld4 as i16;
_18.fld0.fld4 = 319547847952839582873385352844427129687_u128 | 115154018153441325479228774940489309744_u128;
_29.fld1.fld6 = _18.fld1.fld6 + _18.fld1.fld6;
_29.fld3 = _18.fld3;
_29.fld2 = [_23.2,_23.2,_23.2,_23.2,_23.2];
_17 = !_18.fld2;
_28 = (_18.fld0.fld6,);
Goto(bb11)
}
bb11 = {
_26 = [_18.fld1.fld0,_18.fld1.fld0,_18.fld1.fld0,_18.fld1.fld0];
_29.fld1.fld4 = [127484528895333412_u64,5497475901809503144_u64,7954546909486634008_u64,18101468584874826380_u64,4742592235320308076_u64,12264227286416739712_u64,8371359529258002629_u64,1830584092005836665_u64];
_33.0 = 11277397718671633584_u64 | 2868073271766535275_u64;
RET = _18.fld3;
_29.fld1.fld5.1 = _5.1 ^ _1;
_29.fld1.fld1 = _18.fld1.fld1 * _19;
_18.fld1.fld5.1 = _29.fld1.fld6 as i16;
_18.fld0.fld5 = [(-164621749186375361937799146363391888859_i128),122598312736816189175436107627127250096_i128];
_18.fld0.fld7 = [_33.0];
(*RET) = _29.fld0;
_13.3 = _13.0 as i8;
_23.1 = [(*_10).1.3,_5.3,_5.3,(*_10).1.3];
_15 = !(*_10).1.0;
_18.fld1.fld5.0 = _23.5.2 as u16;
_8.3 = (*_10).1.3;
_8 = _18.fld1.fld5;
_22 = _29.fld1.fld1;
_22 = _18.fld1.fld1;
_29.fld1.fld1 = _18.fld1.fld6 as f64;
_23.5.0 = _29.fld1.fld5.0 >> _23.5.3;
_37 = Adt52 { fld0: _18.fld1.fld0,fld1: _18.fld1.fld1,fld2: _11,fld3: _29.fld1.fld3,fld4: _29.fld1.fld4,fld5: _23.5,fld6: _29.fld1.fld6 };
_8.2 = !_2;
Call(_38 = fn13(_37.fld6, _13.0, _18.fld0.fld3, _18.fld1.fld5.3, _18.fld0.fld4, _24, _8.2, (*_10).1.2, _23.2, _29.fld1.fld6, _8, _18.fld1.fld5.3, _29.fld3, _20, _37.fld5.1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_34 = [(*_10).0,(*_10).0,(*_10).0,(*_10).0,(*_10).0,(*_10).0];
_40 = _18.fld4;
_39 = (*_10).0 << _18.fld2;
(*_10).0 = !_39;
_29.fld2 = [_23.2,_23.2,_23.2,_23.2,_23.2];
_13.1 = _5.2 as i16;
_29.fld4 = core::ptr::addr_of!(_29.fld2);
_28 = (_18.fld0.fld6,);
_8.0 = _20 as u16;
_18.fld0.fld1 = core::ptr::addr_of_mut!(_32);
_23.5.3 = _5.3 & _37.fld5.3;
_25 = (*_10).0;
_37.fld0 = !_18.fld1.fld0;
_36 = _37.fld2;
_29.fld1.fld1 = _18.fld0.fld4 as f64;
_8.2 = (*_10).1.2;
_25 = (*_10).0 | (*_10).0;
_29.fld1.fld5.3 = !_18.fld1.fld5.3;
(*_10).1.0 = _23.5.0 + _13.0;
Goto(bb13)
}
bb13 = {
_29.fld3 = core::ptr::addr_of!(_29.fld1.fld3);
_42 = _21 + _21;
_30 = 77855743995987711519839083984530802529_i128 as f64;
_45 = _37.fld1 * _37.fld1;
_6 = _29.fld1.fld5.1;
(*RET) = [(*_10).1.2,_29.fld1.fld5.2,_17,(*_10).1.2,_9];
_8.3 = _3 * _3;
Goto(bb14)
}
bb14 = {
_41 = _37.fld0;
_44.fld7 = [_33.0];
(*_10).1.0 = _37.fld5.0 - _18.fld1.fld5.0;
_18.fld2 = _33.0 as u8;
_17 = _23.5.2 - _18.fld1.fld5.2;
(*_10).1.2 = _37.fld5.2 * _17;
_20 = '\u{1c9f8}';
_44.fld0 = [1176199435_u32,1244675635_u32,3046611366_u32,2673861601_u32,581336844_u32];
_29.fld1.fld6 = -_37.fld6;
_18.fld1.fld5.0 = _13.0 % 53698_u16;
(*_10).1.2 = _18.fld1.fld5.2;
_37.fld5.0 = (*_10).1.0 & _29.fld1.fld5.0;
_31 = [(*_10).0,_39,(*_10).0,(*_10).0,_39,(*_10).0,(*_10).0];
_46 = _18.fld0.fld3;
_8.2 = _29.fld1.fld5.2;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(12_usize, 4_usize, Move(_4), 6_usize, Move(_6), 17_usize, Move(_17), 46_usize, Move(_46)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(12_usize, 13_usize, Move(_13), 8_usize, Move(_8), 31_usize, Move(_31), 36_usize, Move(_36)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(12_usize, 3_usize, Move(_3), 28_usize, Move(_28), 41_usize, Move(_41), 14_usize, Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(12_usize, 2_usize, Move(_2), 12_usize, Move(_12), 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: i64,mut _2: u16,mut _3: [usize; 7],mut _4: i8,mut _5: u128,mut _6: f32,mut _7: u8,mut _8: u8,mut _9: i32,mut _10: i64,mut _11: (u16, i16, u8, i8),mut _12: i8,mut _13: *const [u8; 5],mut _14: char,mut _15: i16) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _16: [i16; 1];
let _17: *mut i128;
let _18: ([i8; 1],);
let _19: Adt50;
let _20: Adt55;
let _21: i128;
let _22: ([i32; 5], [i8; 4], i32, char, f64, (u16, i16, u8, i8));
let _23: Adt60;
let _24: u16;
let _25: (*const u32,);
let _26: char;
let _27: [u64; 1];
let _28: f64;
let _29: [u32; 5];
let _30: ([u32; 5], i128, (u16, i16), i8);
let _31: isize;
let _32: char;
let _33: ();
let _34: ();
{
RET = [_9,_9,_9,_9,_9];
Goto(bb1)
}
bb1 = {
_7 = !_8;
Call(_15 = fn14(_12, _11.1, _1, (*_13), _4, _11.0, _14, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = [_9,_9,_9,_9,_9];
_12 = !_4;
_11.2 = 2814622510_u32 as u8;
(*_13) = [_8,_7,_7,_8,_8];
RET = [_9,_9,_9,_9,_9];
_11.2 = _1 as u8;
_11.0 = 9092613086180661619_u64 as u16;
RET = [_9,_9,_9,_9,_9];
_19.fld3 = [3704118152_u32,1494822312_u32,3082276821_u32,302223080_u32,437195709_u32];
_1 = _10 & _10;
_11.3 = _12;
_18.0 = [_4];
_19.fld0 = 1480959121_u32;
_17 = core::ptr::addr_of_mut!(_20.fld0.1);
_20.fld0.2.1 = false as i16;
_1 = _10 ^ _10;
(*_17) = !4640192031819946604371663258304051541_i128;
RET = [_9,_9,_9,_9,_9];
_20.fld0.0 = _19.fld3;
Goto(bb3)
}
bb3 = {
_20.fld0.2 = (_2, _15);
_4 = _11.3 + _11.3;
_2 = _11.0;
_21 = !(*_17);
RET = [_9,_9,_9,_9,_9];
_5 = !143272696125243082745403478270231012480_u128;
_2 = _11.0 << _8;
Goto(bb4)
}
bb4 = {
(*_13) = [_11.2,_7,_11.2,_8,_8];
_16 = [_11.1];
_11.2 = 10062190454086117887_u64 as u8;
_22.0 = [_9,_9,_9,_9,_9];
_19.fld4 = _11.1 * _20.fld0.2.1;
_22.2 = _9;
_23.fld1.fld6 = _1 << _9;
_22.5.1 = -_11.1;
_23.fld1.fld2 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_1 = _23.fld1.fld6 + _23.fld1.fld6;
_19.fld1 = core::ptr::addr_of!(_22.0);
_19.fld2 = [(-107_isize),(-89_isize),(-9223372036854775808_isize),(-32_isize),(-96_isize),60_isize];
_23.fld1.fld5.3 = 9223372036854775807_isize as i8;
_23.fld1.fld5.2 = _7 / 183_u8;
(*_13) = [_11.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2];
_19.fld3 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_22.5 = (_11.0, _15, _23.fld1.fld5.2, _12);
_23.fld2 = _23.fld1.fld5.2 ^ _7;
RET = [_22.2,_9,_9,_22.2,_22.2];
_23.fld1.fld4 = [17634151038852611255_u64,18308837639134701060_u64,629351006277507006_u64,13938148131219882899_u64,12947281080384221610_u64,3283475028336170310_u64,3666646594226572370_u64,335177549289242069_u64];
Goto(bb5)
}
bb5 = {
_19.fld4 = 7_usize as i16;
_23.fld1.fld5.1 = _22.5.1 - _11.1;
_23.fld0.fld5 = [(*_17),(*_17)];
_23.fld0.fld4 = !_5;
_23.fld0.fld2 = _4 as u16;
_23.fld1.fld4 = [4885564295381590799_u64,5740791800221441193_u64,18013682328312033115_u64,17049867971769356944_u64,15793478560790696547_u64,13568789424948889046_u64,635108627238043809_u64,15774450527902640436_u64];
_24 = 14979550813254065653_usize as u16;
_28 = _22.5.2 as f64;
_23.fld0.fld2 = !_2;
_22.3 = _14;
_23.fld1.fld3 = (*_13);
_29 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
match _19.fld0 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
1480959121 => bb11,
_ => bb10
}
}
bb6 = {
(*_13) = [_11.2,_7,_11.2,_8,_8];
_16 = [_11.1];
_11.2 = 10062190454086117887_u64 as u8;
_22.0 = [_9,_9,_9,_9,_9];
_19.fld4 = _11.1 * _20.fld0.2.1;
_22.2 = _9;
_23.fld1.fld6 = _1 << _9;
_22.5.1 = -_11.1;
_23.fld1.fld2 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_1 = _23.fld1.fld6 + _23.fld1.fld6;
_19.fld1 = core::ptr::addr_of!(_22.0);
_19.fld2 = [(-107_isize),(-89_isize),(-9223372036854775808_isize),(-32_isize),(-96_isize),60_isize];
_23.fld1.fld5.3 = 9223372036854775807_isize as i8;
_23.fld1.fld5.2 = _7 / 183_u8;
(*_13) = [_11.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2];
_19.fld3 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_22.5 = (_11.0, _15, _23.fld1.fld5.2, _12);
_23.fld2 = _23.fld1.fld5.2 ^ _7;
RET = [_22.2,_9,_9,_22.2,_22.2];
_23.fld1.fld4 = [17634151038852611255_u64,18308837639134701060_u64,629351006277507006_u64,13938148131219882899_u64,12947281080384221610_u64,3283475028336170310_u64,3666646594226572370_u64,335177549289242069_u64];
Goto(bb5)
}
bb7 = {
_20.fld0.2 = (_2, _15);
_4 = _11.3 + _11.3;
_2 = _11.0;
_21 = !(*_17);
RET = [_9,_9,_9,_9,_9];
_5 = !143272696125243082745403478270231012480_u128;
_2 = _11.0 << _8;
Goto(bb4)
}
bb8 = {
RET = [_9,_9,_9,_9,_9];
_12 = !_4;
_11.2 = 2814622510_u32 as u8;
(*_13) = [_8,_7,_7,_8,_8];
RET = [_9,_9,_9,_9,_9];
_11.2 = _1 as u8;
_11.0 = 9092613086180661619_u64 as u16;
RET = [_9,_9,_9,_9,_9];
_19.fld3 = [3704118152_u32,1494822312_u32,3082276821_u32,302223080_u32,437195709_u32];
_1 = _10 & _10;
_11.3 = _12;
_18.0 = [_4];
_19.fld0 = 1480959121_u32;
_17 = core::ptr::addr_of_mut!(_20.fld0.1);
_20.fld0.2.1 = false as i16;
_1 = _10 ^ _10;
(*_17) = !4640192031819946604371663258304051541_i128;
RET = [_9,_9,_9,_9,_9];
_20.fld0.0 = _19.fld3;
Goto(bb3)
}
bb9 = {
_7 = !_8;
Call(_15 = fn14(_12, _11.1, _1, (*_13), _4, _11.0, _14, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_20.fld0.0 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_11.3 = -_4;
_5 = _23.fld0.fld4;
_20.fld0.3 = _11.3;
_23.fld0.fld7 = [18337898065314366733_u64];
match _19.fld0 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
1480959121 => bb18,
_ => bb17
}
}
bb12 = {
Return()
}
bb13 = {
_7 = !_8;
Call(_15 = fn14(_12, _11.1, _1, (*_13), _4, _11.0, _14, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
(*_13) = [_11.2,_7,_11.2,_8,_8];
_16 = [_11.1];
_11.2 = 10062190454086117887_u64 as u8;
_22.0 = [_9,_9,_9,_9,_9];
_19.fld4 = _11.1 * _20.fld0.2.1;
_22.2 = _9;
_23.fld1.fld6 = _1 << _9;
_22.5.1 = -_11.1;
_23.fld1.fld2 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_1 = _23.fld1.fld6 + _23.fld1.fld6;
_19.fld1 = core::ptr::addr_of!(_22.0);
_19.fld2 = [(-107_isize),(-89_isize),(-9223372036854775808_isize),(-32_isize),(-96_isize),60_isize];
_23.fld1.fld5.3 = 9223372036854775807_isize as i8;
_23.fld1.fld5.2 = _7 / 183_u8;
(*_13) = [_11.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2];
_19.fld3 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_22.5 = (_11.0, _15, _23.fld1.fld5.2, _12);
_23.fld2 = _23.fld1.fld5.2 ^ _7;
RET = [_22.2,_9,_9,_22.2,_22.2];
_23.fld1.fld4 = [17634151038852611255_u64,18308837639134701060_u64,629351006277507006_u64,13938148131219882899_u64,12947281080384221610_u64,3283475028336170310_u64,3666646594226572370_u64,335177549289242069_u64];
Goto(bb5)
}
bb15 = {
_20.fld0.2 = (_2, _15);
_4 = _11.3 + _11.3;
_2 = _11.0;
_21 = !(*_17);
RET = [_9,_9,_9,_9,_9];
_5 = !143272696125243082745403478270231012480_u128;
_2 = _11.0 << _8;
Goto(bb4)
}
bb16 = {
(*_13) = [_11.2,_7,_11.2,_8,_8];
_16 = [_11.1];
_11.2 = 10062190454086117887_u64 as u8;
_22.0 = [_9,_9,_9,_9,_9];
_19.fld4 = _11.1 * _20.fld0.2.1;
_22.2 = _9;
_23.fld1.fld6 = _1 << _9;
_22.5.1 = -_11.1;
_23.fld1.fld2 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_1 = _23.fld1.fld6 + _23.fld1.fld6;
_19.fld1 = core::ptr::addr_of!(_22.0);
_19.fld2 = [(-107_isize),(-89_isize),(-9223372036854775808_isize),(-32_isize),(-96_isize),60_isize];
_23.fld1.fld5.3 = 9223372036854775807_isize as i8;
_23.fld1.fld5.2 = _7 / 183_u8;
(*_13) = [_11.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2,_23.fld1.fld5.2];
_19.fld3 = [_19.fld0,_19.fld0,_19.fld0,_19.fld0,_19.fld0];
_22.5 = (_11.0, _15, _23.fld1.fld5.2, _12);
_23.fld2 = _23.fld1.fld5.2 ^ _7;
RET = [_22.2,_9,_9,_22.2,_22.2];
_23.fld1.fld4 = [17634151038852611255_u64,18308837639134701060_u64,629351006277507006_u64,13938148131219882899_u64,12947281080384221610_u64,3283475028336170310_u64,3666646594226572370_u64,335177549289242069_u64];
Goto(bb5)
}
bb17 = {
RET = [_9,_9,_9,_9,_9];
_12 = !_4;
_11.2 = 2814622510_u32 as u8;
(*_13) = [_8,_7,_7,_8,_8];
RET = [_9,_9,_9,_9,_9];
_11.2 = _1 as u8;
_11.0 = 9092613086180661619_u64 as u16;
RET = [_9,_9,_9,_9,_9];
_19.fld3 = [3704118152_u32,1494822312_u32,3082276821_u32,302223080_u32,437195709_u32];
_1 = _10 & _10;
_11.3 = _12;
_18.0 = [_4];
_19.fld0 = 1480959121_u32;
_17 = core::ptr::addr_of_mut!(_20.fld0.1);
_20.fld0.2.1 = false as i16;
_1 = _10 ^ _10;
(*_17) = !4640192031819946604371663258304051541_i128;
RET = [_9,_9,_9,_9,_9];
_20.fld0.0 = _19.fld3;
Goto(bb3)
}
bb18 = {
_22.1 = [_4,_11.3,_4,_11.3];
_22.4 = _20.fld0.1 as f64;
_22.3 = _14;
_23.fld1.fld0 = _22.4 != _28;
_22.2 = _9;
_22.5.3 = -_4;
Goto(bb19)
}
bb19 = {
Call(_33 = dump_var(13_usize, 7_usize, Move(_7), 15_usize, Move(_15), 24_usize, Move(_24), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_33 = dump_var(13_usize, 14_usize, Move(_14), 10_usize, Move(_10), 18_usize, Move(_18), 1_usize, Move(_1)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_33 = dump_var(13_usize, 8_usize, Move(_8), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: i8,mut _2: i16,mut _3: i64,mut _4: [u8; 5],mut _5: i8,mut _6: u16,mut _7: char,mut _8: i8) -> i16 {
mir! {
type RET = i16;
let _9: f64;
let _10: [usize; 7];
let _11: f64;
let _12: [usize; 7];
let _13: [u32; 5];
let _14: Adt61;
let _15: bool;
let _16: Adt56;
let _17: u32;
let _18: i16;
let _19: Adt65;
let _20: f32;
let _21: char;
let _22: i8;
let _23: (isize, (u16, i16, u8, i8));
let _24: i8;
let _25: f32;
let _26: u32;
let _27: ((isize, (u16, i16, u8, i8)),);
let _28: ((isize, (u16, i16, u8, i8)),);
let _29: ([i32; 5], [i8; 4], i32, char, f64, (u16, i16, u8, i8));
let _30: u16;
let _31: Adt51;
let _32: ();
let _33: ();
{
_4 = [170_u8,215_u8,14_u8,44_u8,185_u8];
RET = _2;
RET = 64223003670308134821213651845699358013_u128 as i16;
_2 = !(-12485_i16);
_5 = -_1;
_9 = 7_usize as f64;
RET = 2_usize as i16;
_7 = '\u{46ca4}';
_9 = 91076581664989878967431939624546007032_i128 as f64;
_1 = _5;
_3 = _9 as i64;
RET = _2 - _2;
_10 = [6_usize,13314905372580720241_usize,6_usize,18341182106787280665_usize,6_usize,18288409426813066182_usize,3700375789551690182_usize];
_9 = _3 as f64;
_2 = !3244_i16;
_5 = !_8;
_3 = (-4253028551672694701_i64);
_12 = [3_usize,7_usize,15819864499065460725_usize,14103384478388235883_usize,13126704020999907256_usize,7_usize,6_usize];
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463459121578880095516755 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_11 = 752320693_u32 as f64;
_9 = _11 + _11;
_4 = [76_u8,191_u8,140_u8,112_u8,100_u8];
_9 = _11 / 1_f64;
_6 = 107812921376360672134910161613249774337_u128 as u16;
_7 = '\u{439fa}';
RET = 5947561531668505311_u64 as i16;
_5 = _1 << _2;
_12 = [3_usize,1_usize,7022781818868839111_usize,7055985759881222167_usize,3968028301188111992_usize,9583399698219798898_usize,4_usize];
_1 = _8 * _5;
_13 = [114012301_u32,1142054172_u32,3621367529_u32,3185165549_u32,2293416274_u32];
_2 = 2167172276_u32 as i16;
_6 = 63630_u16;
_4 = [151_u8,39_u8,7_u8,127_u8,42_u8];
_9 = 146038157129225275704430681710721996488_i128 as f64;
_14.fld2.fld2.2 = 12_u8;
_14.fld1.fld5 = core::ptr::addr_of!(_14.fld0);
_14.fld3 = 0_usize;
_3 = (-1810063106086093514_i64);
_14.fld1.fld3 = [3716442719_u32,1171065612_u32,2850526073_u32,3612021237_u32,2986503902_u32];
_14.fld2.fld6 = [_1,_8,_5,_1];
_14.fld2.fld4.1 = -_11;
_15 = true | true;
_10 = _12;
_2 = 7173_i16 & 6181_i16;
_14.fld5 = _10;
Call(_14.fld2.fld2.1 = fn15(_7, _14.fld1.fld5, _15, _14.fld1.fld5, _4, _7, _14.fld2.fld4.1, _14.fld2.fld4.1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_14.fld6 = [14_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-84_isize),(-31_isize)];
_17 = _7 as u32;
_14.fld2.fld1 = core::ptr::addr_of_mut!(_16.fld1);
_15 = !true;
Goto(bb7)
}
bb7 = {
_19.fld6.fld4 = _14.fld6;
_19.fld6.fld1.fld5.0 = _6 / 37198_u16;
_19.fld6.fld2.0 = _7;
_16.fld1 = [_14.fld2.fld2.1];
_5 = _1 >> _17;
_19.fld6.fld0 = !15586195404142164180099049924279827674_i128;
_18 = 3998775508390294036_u64 as i16;
_19.fld6.fld1.fld4 = [638499459961942751_u64,13077981092900014421_u64,12711487939759965292_u64,11249727167123939144_u64,10356751904928648116_u64,18419307727917439264_u64,1267867167586580008_u64,4897013893837470553_u64];
_19.fld2.fld5.3 = !_5;
RET = _17 as i16;
_14.fld2.fld2.3 = _5 >> _5;
Goto(bb8)
}
bb8 = {
_16.fld1 = [_14.fld2.fld2.1];
_3 = 2985922372008322685_i64;
_14.fld2.fld2.0 = _19.fld6.fld1.fld5.0;
_19.fld3 = [_19.fld6.fld0,_19.fld6.fld0];
_19.fld2.fld6 = _19.fld6.fld2.0 as i64;
_14.fld2.fld4 = (12316244282738903356_u64, _9);
_19.fld2.fld5.1 = !_14.fld2.fld2.1;
_19.fld6.fld0 = -45178090443808889072638248959956041227_i128;
_23.1 = _14.fld2.fld2;
_14.fld3 = (-966226081_i32) as usize;
_19.fld3 = [_19.fld6.fld0,_19.fld6.fld0];
_3 = _19.fld2.fld6 << _5;
_19.fld2.fld1 = _9;
_19.fld0.fld2 = [1664123400_i32,330917362_i32,(-1739485493_i32),(-535292243_i32),2043476340_i32];
_19.fld0.fld2 = [777463976_i32,382031680_i32,(-1801981385_i32),(-594627990_i32),(-917884120_i32)];
_19.fld2.fld5 = (_14.fld2.fld2.0, _14.fld2.fld2.1, _23.1.2, _5);
_19.fld6.fld1.fld5.1 = _14.fld2.fld2.1;
_23.1 = (_19.fld6.fld1.fld5.0, _19.fld2.fld5.1, _19.fld2.fld5.2, _14.fld2.fld2.3);
_19.fld6.fld1.fld5.3 = _14.fld2.fld2.3;
_14.fld2.fld0 = _14.fld3;
_24 = _1 ^ _23.1.3;
_19.fld2.fld1 = _19.fld6.fld0 as f64;
_14.fld2.fld4 = (3863676399147586034_u64, _19.fld2.fld1);
_14.fld7.fld0 = [_14.fld3,_14.fld2.fld0,_14.fld3,_14.fld2.fld0,_14.fld3,_14.fld2.fld0,_14.fld2.fld0];
match _14.fld2.fld4.0 {
0 => bb5,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
3863676399147586034 => bb15,
_ => bb14
}
}
bb9 = {
_19.fld6.fld4 = _14.fld6;
_19.fld6.fld1.fld5.0 = _6 / 37198_u16;
_19.fld6.fld2.0 = _7;
_16.fld1 = [_14.fld2.fld2.1];
_5 = _1 >> _17;
_19.fld6.fld0 = !15586195404142164180099049924279827674_i128;
_18 = 3998775508390294036_u64 as i16;
_19.fld6.fld1.fld4 = [638499459961942751_u64,13077981092900014421_u64,12711487939759965292_u64,11249727167123939144_u64,10356751904928648116_u64,18419307727917439264_u64,1267867167586580008_u64,4897013893837470553_u64];
_19.fld2.fld5.3 = !_5;
RET = _17 as i16;
_14.fld2.fld2.3 = _5 >> _5;
Goto(bb8)
}
bb10 = {
_14.fld6 = [14_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-84_isize),(-31_isize)];
_17 = _7 as u32;
_14.fld2.fld1 = core::ptr::addr_of_mut!(_16.fld1);
_15 = !true;
Goto(bb7)
}
bb11 = {
_11 = 752320693_u32 as f64;
_9 = _11 + _11;
_4 = [76_u8,191_u8,140_u8,112_u8,100_u8];
_9 = _11 / 1_f64;
_6 = 107812921376360672134910161613249774337_u128 as u16;
_7 = '\u{439fa}';
RET = 5947561531668505311_u64 as i16;
_5 = _1 << _2;
_12 = [3_usize,1_usize,7022781818868839111_usize,7055985759881222167_usize,3968028301188111992_usize,9583399698219798898_usize,4_usize];
_1 = _8 * _5;
_13 = [114012301_u32,1142054172_u32,3621367529_u32,3185165549_u32,2293416274_u32];
_2 = 2167172276_u32 as i16;
_6 = 63630_u16;
_4 = [151_u8,39_u8,7_u8,127_u8,42_u8];
_9 = 146038157129225275704430681710721996488_i128 as f64;
_14.fld2.fld2.2 = 12_u8;
_14.fld1.fld5 = core::ptr::addr_of!(_14.fld0);
_14.fld3 = 0_usize;
_3 = (-1810063106086093514_i64);
_14.fld1.fld3 = [3716442719_u32,1171065612_u32,2850526073_u32,3612021237_u32,2986503902_u32];
_14.fld2.fld6 = [_1,_8,_5,_1];
_14.fld2.fld4.1 = -_11;
_15 = true | true;
_10 = _12;
_2 = 7173_i16 & 6181_i16;
_14.fld5 = _10;
Call(_14.fld2.fld2.1 = fn15(_7, _14.fld1.fld5, _15, _14.fld1.fld5, _4, _7, _14.fld2.fld4.1, _14.fld2.fld4.1), ReturnTo(bb6), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_14.fld2.fld2.0 = _7 as u16;
_14.fld0 = [_15,_15,_15,_15];
_19.fld6.fld2 = (_7, _14.fld2.fld4.1);
_19.fld6.fld0 = (-18567119562205289556220409348261527285_i128);
_19.fld4 = !_14.fld2.fld0;
_14.fld2.fld5 = _15 as i32;
_14.fld2.fld3 = core::ptr::addr_of_mut!(_23);
_19.fld6.fld1.fld5.2 = (-65_isize) as u8;
_16.fld2 = [_14.fld2.fld5,_14.fld2.fld5,_14.fld2.fld5,_14.fld2.fld5,_14.fld2.fld5];
_19.fld6.fld1.fld6 = !_3;
_19.fld6.fld3 = Adt56 { fld0: _14.fld1.fld5,fld1: _16.fld1,fld2: _19.fld0.fld2 };
_19.fld2.fld5 = (_19.fld6.fld1.fld5.0, _19.fld6.fld1.fld5.1, _14.fld2.fld2.2, _24);
_29.3 = _7;
_29.0 = _19.fld0.fld2;
_23.0 = _14.fld2.fld4.1 as isize;
_19.fld0.fld1 = [_23.1.1];
_20 = _18 as f32;
_14.fld2.fld5 = (-619300263_i32);
_19.fld2.fld5.3 = _14.fld2.fld2.3 ^ _19.fld6.fld1.fld5.3;
_29.5.1 = _23.0 as i16;
_28.0.1.3 = _14.fld2.fld2.3;
_14.fld1.fld0 = !_17;
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(14_usize, 23_usize, Move(_23), 24_usize, Move(_24), 12_usize, Move(_12), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(14_usize, 6_usize, Move(_6), 17_usize, Move(_17), 5_usize, Move(_5), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: char,mut _2: *const [bool; 4],mut _3: bool,mut _4: *const [bool; 4],mut _5: [u8; 5],mut _6: char,mut _7: f64,mut _8: f64) -> i16 {
mir! {
type RET = i16;
let _9: Adt60;
let _10: ((isize, (u16, i16, u8, i8)),);
let _11: f32;
let _12: [bool; 4];
let _13: [i128; 2];
let _14: Adt53;
let _15: i64;
let _16: [isize; 7];
let _17: Adt54;
let _18: char;
let _19: [isize; 7];
let _20: ([u32; 5], i128, (u16, i16), i8);
let _21: *const u32;
let _22: Adt65;
let _23: Adt52;
let _24: isize;
let _25: [i16; 1];
let _26: char;
let _27: [i128; 2];
let _28: f32;
let _29: bool;
let _30: (u64, f64);
let _31: bool;
let _32: Adt61;
let _33: [i32; 1];
let _34: u8;
let _35: i32;
let _36: [u8; 5];
let _37: Adt61;
let _38: usize;
let _39: Adt49;
let _40: ([i32; 5], [i8; 4], i32, char, f64, (u16, i16, u8, i8));
let _41: Adt50;
let _42: ();
let _43: ();
{
(*_4) = [_3,_3,_3,_3];
_9.fld2 = !204_u8;
_9.fld0.fld7 = [12582121960524641758_u64];
_9.fld1.fld6 = !(-3053639471420456154_i64);
_9.fld1.fld1 = 52871_u16 as f64;
(*_4) = [_3,_3,_3,_3];
_9.fld1.fld5.2 = 52725_u16 as u8;
_11 = 49819_u16 as f32;
Goto(bb1)
}
bb1 = {
RET = (-25215_i16) - 2198_i16;
_9.fld0.fld3 = [11385883199127921915_usize,2648835072218873447_usize,15373518718893910645_usize,15594772067162227985_usize,6_usize,16857536554163511915_usize,7_usize];
_10.0.1.1 = 30167_i16 + 3233_i16;
_5 = [_9.fld2,_9.fld1.fld5.2,_9.fld1.fld5.2,_9.fld2,_9.fld2];
RET = _10.0.1.1 & _10.0.1.1;
Goto(bb2)
}
bb2 = {
_10.0.1.3 = 53_i8;
_3 = _9.fld1.fld6 <= _9.fld1.fld6;
_13 = [93640584892727092556635861066086850153_i128,79012951547444568273722635348476736736_i128];
_3 = !true;
(*_4) = [_3,_3,_3,_3];
_9.fld4 = [_10.0.1.1];
_9.fld0.fld6 = [_10.0.1.3];
_7 = 17079943807648017112_u64 as f64;
_7 = -_8;
_14.fld0.1.2 = _9.fld1.fld5.2;
_14.fld2 = 9223372036854775807_isize;
_10.0.1.2 = _9.fld1.fld5.2;
_2 = core::ptr::addr_of!((*_2));
_9.fld1.fld2 = [4144553426_u32,456522518_u32,1176285117_u32,3057352508_u32,1552792661_u32];
_14.fld0.1 = (5204_u16, _10.0.1.1, _9.fld2, _10.0.1.3);
_14.fld0.1 = (40002_u16, _10.0.1.1, _9.fld1.fld5.2, _10.0.1.3);
_13 = [(-4385340777856297426662018534186838660_i128),73032376411649402312537515872231040803_i128];
_14.fld0.0 = _14.fld2;
(*_4) = [_3,_3,_3,_3];
_9.fld1.fld4 = [16085827150325913833_u64,8535819331815974834_u64,5803482722441548306_u64,4452515729625936304_u64,562888013249188977_u64,10672730530147456809_u64,283504931875970460_u64,7460594704681959414_u64];
_14.fld1.fld3 = [4107994041_u32,3945394751_u32,2591699468_u32,1347059799_u32,404659304_u32];
_14.fld0.1.0 = 15385236450882345969_u64 as u16;
Goto(bb3)
}
bb3 = {
_14.fld1.fld2 = [_14.fld2,_14.fld2,_14.fld2,_14.fld0.0,_14.fld2,_14.fld2];
_14.fld1.fld3 = [4123072772_u32,668155890_u32,1071829484_u32,1866972878_u32,2340629613_u32];
_7 = _8 - _8;
_11 = 103020110308296366282739973863876184587_i128 as f32;
RET = _14.fld0.1.1 + _10.0.1.1;
_9.fld0.fld4 = 318793694438035024180312478828445795526_u128 & 325310628181484732028636587150925426885_u128;
_14.fld0.1.0 = 24497_u16 ^ 32449_u16;
_14.fld0.0 = _14.fld2;
_10.0.1.3 = -_14.fld0.1.3;
_9.fld1.fld1 = _9.fld1.fld6 as f64;
RET = _14.fld0.1.2 as i16;
match _14.fld0.0 {
0 => bb2,
9223372036854775807 => bb5,
_ => bb4
}
}
bb4 = {
_10.0.1.3 = 53_i8;
_3 = _9.fld1.fld6 <= _9.fld1.fld6;
_13 = [93640584892727092556635861066086850153_i128,79012951547444568273722635348476736736_i128];
_3 = !true;
(*_4) = [_3,_3,_3,_3];
_9.fld4 = [_10.0.1.1];
_9.fld0.fld6 = [_10.0.1.3];
_7 = 17079943807648017112_u64 as f64;
_7 = -_8;
_14.fld0.1.2 = _9.fld1.fld5.2;
_14.fld2 = 9223372036854775807_isize;
_10.0.1.2 = _9.fld1.fld5.2;
_2 = core::ptr::addr_of!((*_2));
_9.fld1.fld2 = [4144553426_u32,456522518_u32,1176285117_u32,3057352508_u32,1552792661_u32];
_14.fld0.1 = (5204_u16, _10.0.1.1, _9.fld2, _10.0.1.3);
_14.fld0.1 = (40002_u16, _10.0.1.1, _9.fld1.fld5.2, _10.0.1.3);
_13 = [(-4385340777856297426662018534186838660_i128),73032376411649402312537515872231040803_i128];
_14.fld0.0 = _14.fld2;
(*_4) = [_3,_3,_3,_3];
_9.fld1.fld4 = [16085827150325913833_u64,8535819331815974834_u64,5803482722441548306_u64,4452515729625936304_u64,562888013249188977_u64,10672730530147456809_u64,283504931875970460_u64,7460594704681959414_u64];
_14.fld1.fld3 = [4107994041_u32,3945394751_u32,2591699468_u32,1347059799_u32,404659304_u32];
_14.fld0.1.0 = 15385236450882345969_u64 as u16;
Goto(bb3)
}
bb5 = {
_9.fld2 = _9.fld0.fld4 as u8;
_10 = (_14.fld0,);
_17.fld0.1 = _10.0.1;
_9.fld0.fld0 = _14.fld1.fld3;
_9.fld4 = [_10.0.1.1];
_9.fld3 = core::ptr::addr_of!(_5);
_9.fld0.fld6 = [_10.0.1.3];
Goto(bb6)
}
bb6 = {
_14.fld1.fld4 = _14.fld0.1.1 << _17.fld0.1.1;
_14.fld1.fld2 = [_10.0.0,_14.fld0.0,_14.fld2,_10.0.0,_10.0.0,_10.0.0];
_17.fld0.1.3 = _10.0.1.3 + _14.fld0.1.3;
_17.fld2 = 2124610622_i32 as i64;
_12 = (*_4);
_9.fld0.fld6 = [_14.fld0.1.3];
_4 = core::ptr::addr_of!(_12);
Goto(bb7)
}
bb7 = {
_22.fld4 = !7691319777493828019_usize;
_14.fld0.1.3 = -_17.fld0.1.3;
_22.fld2.fld5.0 = !_14.fld0.1.0;
_22.fld6.fld1.fld5 = _17.fld0.1;
(*_2) = [_3,_3,_3,_3];
_23.fld5.2 = _9.fld0.fld4 as u8;
_22.fld6.fld1.fld6 = -_9.fld1.fld6;
_9.fld1.fld0 = _3 ^ _3;
_9.fld0.fld4 = 174852082202287572224496344750801006532_u128 + 215478574731640043094096820422462541218_u128;
Call(RET = core::intrinsics::bswap(_14.fld1.fld4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_22.fld2.fld5.2 = _9.fld2 + _9.fld2;
_9.fld0.fld2 = _14.fld0.1.0 ^ _10.0.1.0;
_9.fld1.fld3 = _5;
_22.fld6.fld2.1 = (-107426531710804598267141835001090078769_i128) as f64;
_22.fld2.fld5.0 = _9.fld0.fld2 - _14.fld0.1.0;
_22.fld6.fld1.fld6 = _9.fld1.fld6;
_14.fld1.fld1 = core::ptr::addr_of!(_22.fld0.fld2);
Goto(bb9)
}
bb9 = {
_23.fld5 = (_22.fld2.fld5.0, _22.fld6.fld1.fld5.1, _9.fld1.fld5.2, _14.fld0.1.3);
_23.fld6 = _22.fld6.fld1.fld6 - _17.fld2;
_9.fld0.fld5 = _13;
_17.fld0.1.2 = !_14.fld0.1.2;
_17.fld3 = 2411385087_u32;
_23.fld4 = _9.fld1.fld4;
_22.fld2.fld4 = [9195633599436828223_u64,16463998716076201234_u64,1013063932492617331_u64,1483569132236890674_u64,8556939781250697101_u64,9226346045135113984_u64,5895639372080528035_u64,11601908411842532420_u64];
_22.fld2.fld3 = [_9.fld2,_22.fld2.fld5.2,_22.fld2.fld5.2,_9.fld1.fld5.2,_14.fld0.1.2];
_22.fld6.fld4 = [_14.fld0.0,_14.fld2,_10.0.0,_14.fld2,_14.fld0.0,_10.0.0,_14.fld0.0];
_9.fld1.fld1 = -_7;
_23.fld5.0 = !_9.fld0.fld2;
_26 = _6;
_25 = [_23.fld5.1];
_22.fld2.fld5.0 = _9.fld0.fld2 & _9.fld0.fld2;
_9.fld1.fld1 = _7;
_22.fld0.fld1 = [_10.0.1.1];
_17.fld0.1 = (_22.fld2.fld5.0, _14.fld0.1.1, _9.fld1.fld5.2, _10.0.1.3);
_14.fld0 = (_10.0.0, _22.fld6.fld1.fld5);
_14.fld4 = core::ptr::addr_of_mut!(_20.1);
_9.fld1.fld6 = -_23.fld6;
Call(_23.fld5.2 = fn16(_9.fld1.fld0, _9.fld1.fld4, _9.fld2, _9.fld1.fld5.2, _22.fld2.fld3, _17.fld3, _14.fld2, _14.fld0.1, _10.0.0, _22.fld2.fld5.2, _22.fld2.fld4, _9.fld1.fld3, _14.fld2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_22.fld2.fld5 = (_9.fld0.fld2, _23.fld5.1, _23.fld5.2, _10.0.1.3);
_9.fld1.fld5.1 = _9.fld1.fld6 as i16;
_9.fld1.fld3 = [_22.fld2.fld5.2,_22.fld2.fld5.2,_22.fld2.fld5.2,_23.fld5.2,_17.fld0.1.2];
_28 = _11;
_14.fld1.fld2 = [_10.0.0,_14.fld0.0,_14.fld2,_14.fld2,_14.fld0.0,_14.fld2];
Call(_9.fld0.fld5 = core::intrinsics::transmute(_13), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_10.0.1 = (_22.fld2.fld5.0, _14.fld0.1.1, _22.fld6.fld1.fld5.2, _14.fld0.1.3);
_22.fld6.fld1 = Adt52 { fld0: _9.fld1.fld0,fld1: _7,fld2: _9.fld1.fld2,fld3: _22.fld2.fld3,fld4: _23.fld4,fld5: _14.fld0.1,fld6: _23.fld6 };
_17.fld3 = 560681958_u32;
_22.fld6.fld3.fld0 = _4;
_8 = _17.fld3 as f64;
_17.fld0.1.3 = _23.fld5.3 + _22.fld6.fld1.fld5.3;
_23.fld0 = _22.fld2.fld5.2 < _22.fld2.fld5.2;
_9.fld1.fld4 = [679775944349274503_u64,8718506086737755182_u64,8507583093591212706_u64,5673766161923216714_u64,4735514078512573886_u64,9240446111861350468_u64,15889681766078192329_u64,7018267096573066280_u64];
_9.fld1.fld3 = [_22.fld2.fld5.2,_22.fld2.fld5.2,_23.fld5.2,_22.fld2.fld5.2,_23.fld5.2];
_9.fld0.fld2 = _23.fld5.3 as u16;
_22.fld6.fld1.fld5.1 = _10.0.1.1 << _23.fld5.2;
_23 = Adt52 { fld0: _9.fld1.fld0,fld1: _7,fld2: _9.fld0.fld0,fld3: _22.fld2.fld3,fld4: _22.fld6.fld1.fld4,fld5: _10.0.1,fld6: _17.fld2 };
_22.fld0.fld0 = _22.fld6.fld3.fld0;
_22.fld6.fld1.fld6 = _28 as i64;
_14.fld0.0 = -_14.fld2;
(*_2) = [_9.fld1.fld0,_22.fld6.fld1.fld0,_22.fld6.fld1.fld0,_3];
_22.fld6.fld3.fld2 = [(-1397198927_i32),1110492561_i32,408383878_i32,(-1645213183_i32),(-1915879284_i32)];
RET = _14.fld2 as i16;
_9.fld0.fld6 = [_23.fld5.3];
_20.2.1 = _22.fld6.fld1.fld5.1 + _23.fld5.1;
_14.fld0.0 = -_14.fld2;
_9.fld0.fld1 = core::ptr::addr_of_mut!(_20.1);
match _10.0.0 {
0 => bb7,
1 => bb5,
9223372036854775807 => bb12,
_ => bb10
}
}
bb12 = {
_22.fld2.fld4 = [10958590443456739219_u64,3799478040038923132_u64,7553842724179434189_u64,10008601407598916788_u64,826816143213404236_u64,9794417613143861849_u64,2149387027569414655_u64,8977811613421737563_u64];
_9.fld1.fld5.1 = _22.fld6.fld1.fld6 as i16;
_14.fld3 = -_11;
_22.fld2.fld5.1 = !_22.fld6.fld1.fld5.1;
_10 = (_14.fld0,);
_22.fld6.fld3.fld1 = [_20.2.1];
_19 = _22.fld6.fld4;
_14.fld0 = (_14.fld2, _17.fld0.1);
_22.fld5 = (_9.fld0.fld6,);
_10.0.0 = _14.fld0.0;
_17.fld0.1.1 = _7 as i16;
_22.fld6.fld1 = Adt52 { fld0: _3,fld1: _7,fld2: _9.fld1.fld2,fld3: _9.fld1.fld3,fld4: _22.fld2.fld4,fld5: _17.fld0.1,fld6: _23.fld6 };
_29 = !_3;
_14.fld0.1.1 = _22.fld2.fld5.1 << _14.fld0.0;
_22.fld6.fld3.fld0 = core::ptr::addr_of!((*_2));
_9.fld1.fld5.2 = !_23.fld5.2;
_22.fld6.fld1.fld5.2 = _22.fld2.fld5.2 | _22.fld2.fld5.2;
Goto(bb13)
}
bb13 = {
_3 = _22.fld6.fld1.fld5.2 == _10.0.1.2;
RET = -_20.2.1;
_30 = (17816606242506967838_u64, _7);
_21 = core::ptr::addr_of!(_14.fld1.fld0);
_9.fld0.fld4 = _22.fld6.fld2.1 as u128;
_32.fld1.fld0 = _17.fld3 / 1080546616_u32;
_32.fld1.fld5 = core::ptr::addr_of!((*_4));
_32.fld5 = [_22.fld4,_22.fld4,_22.fld4,_22.fld4,_22.fld4,_22.fld4,_22.fld4];
_31 = _3;
_32.fld4 = (_22.fld5.0,);
_22.fld0.fld1 = [_20.2.1];
_37.fld4 = _32.fld4;
_32.fld2.fld0 = _11 as usize;
_22.fld6.fld1 = Adt52 { fld0: _3,fld1: _9.fld1.fld1,fld2: _14.fld1.fld3,fld3: _9.fld1.fld3,fld4: _23.fld4,fld5: _22.fld2.fld5,fld6: _23.fld6 };
_32.fld2.fld2.3 = !_17.fld0.1.3;
_32.fld2.fld2 = (_17.fld0.1.0, _14.fld1.fld4, _9.fld2, _17.fld0.1.3);
_37.fld2.fld4 = (_30.0, _8);
_18 = _26;
_20.2 = (_22.fld6.fld1.fld5.0, _32.fld2.fld2.1);
_40.5.2 = !_22.fld6.fld1.fld5.2;
Goto(bb14)
}
bb14 = {
Call(_42 = dump_var(15_usize, 12_usize, Move(_12), 13_usize, Move(_13), 3_usize, Move(_3), 6_usize, Move(_6)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_42 = dump_var(15_usize, 18_usize, Move(_18), 10_usize, Move(_10), 43_usize, _43, 43_usize, _43), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: bool,mut _2: [u64; 8],mut _3: u8,mut _4: u8,mut _5: [u8; 5],mut _6: u32,mut _7: isize,mut _8: (u16, i16, u8, i8),mut _9: isize,mut _10: u8,mut _11: [u64; 8],mut _12: [u8; 5],mut _13: isize) -> u8 {
mir! {
type RET = u8;
let _14: [bool; 4];
let _15: u8;
let _16: bool;
let _17: i64;
let _18: char;
let _19: [i32; 5];
let _20: i16;
let _21: u128;
let _22: (isize, (u16, i16, u8, i8));
let _23: [isize; 7];
let _24: char;
let _25: (u16, i16, u8, i8);
let _26: f32;
let _27: [u64; 1];
let _28: ([i32; 5], [i8; 4], i32, char, f64, (u16, i16, u8, i8));
let _29: isize;
let _30: f64;
let _31: Adt60;
let _32: isize;
let _33: i128;
let _34: f64;
let _35: Adt64;
let _36: u64;
let _37: i64;
let _38: [isize; 7];
let _39: char;
let _40: ();
let _41: ();
{
_12 = [_4,_4,_3,_10,_3];
_10 = !_4;
_2 = [2094714265684885409_u64,16037892111292377872_u64,3621580931670111736_u64,432628364301022805_u64,11802354196170227566_u64,10117492849322711575_u64,7342350689158827168_u64,15013514872192511353_u64];
RET = _8.0 as u8;
_11 = [13290332190774498823_u64,16164345885859165894_u64,17947134867640143503_u64,8057525760957845514_u64,15731089730369147763_u64,433256542225533948_u64,9428069341003649351_u64,2059598888859595800_u64];
_15 = (-130895155454650330340803391901960072230_i128) as u8;
_8.2 = _15 / 226_u8;
_8.0 = 23190_u16;
_13 = 555219892394815015_i64 as isize;
_8.0 = !15030_u16;
_7 = !_13;
_2 = _11;
_2 = [2102744441511951285_u64,12633848136832329847_u64,3116444251142764333_u64,8649287230442282751_u64,12966981349861809849_u64,6666768051980474605_u64,7758813414828755931_u64,2462171840248924627_u64];
_8 = (42956_u16, 16057_i16, _15, (-14_i8));
_13 = _9;
_4 = _8.0 as u8;
_6 = 3602740592_u32 << _3;
Goto(bb1)
}
bb1 = {
_8 = (42853_u16, (-25660_i16), _4, (-71_i8));
_11 = [18252007547342417055_u64,4614703830912744047_u64,14411978305385658835_u64,11065261252034824303_u64,2117060411466166948_u64,7284350586370964756_u64,8214406715350780404_u64,12980145141483814117_u64];
_8.1 = 11693_i16;
_6 = _8.1 as u32;
RET = !_3;
_14 = [_1,_1,_1,_1];
_8.3 = (-1659790469_i32) as i8;
_10 = 81953126908808370375494372752290929216_u128 as u8;
_2 = _11;
_8.3 = -112_i8;
_4 = (-45054834087923775125474463992067686600_i128) as u8;
_8.2 = !_3;
_16 = _8.1 >= _8.1;
_8 = (41137_u16, 27259_i16, _10, (-47_i8));
Goto(bb2)
}
bb2 = {
_14 = [_1,_1,_16,_16];
_5 = _12;
_3 = 3776631066072938381_usize as u8;
_11 = [2632702216276163837_u64,10929939604287982129_u64,16051489239362618729_u64,4655568147542200507_u64,16616275418770893178_u64,7419873774253672212_u64,201487018085766782_u64,1311488545314920087_u64];
_8.0 = 51564_u16 | 8167_u16;
_8.1 = (-2293_i16) - 24366_i16;
_13 = 2383338101022839508_usize as isize;
_19 = [(-1928062944_i32),612072621_i32,964334598_i32,1132449317_i32,(-679213177_i32)];
_3 = _8.2 << _8.3;
_6 = 4_usize as u32;
_20 = _8.1;
_1 = !_16;
_16 = _8.1 == _8.1;
_12 = [_8.2,_3,_3,_3,_3];
_8 = (54658_u16, _20, _10, 124_i8);
RET = _8.2 + _8.2;
_4 = 788434381686332451_i64 as u8;
_17 = 5852129466652688075_i64;
_1 = _16 ^ _16;
_19 = [(-195653490_i32),1308621310_i32,820460959_i32,317000372_i32,397068793_i32];
_12 = [_4,_3,_3,_3,_15];
_15 = !_3;
_18 = '\u{b5815}';
_15 = _10;
_17 = 4081564404081397494_i64 >> _13;
_11 = _2;
match _8.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
54658 => bb9,
_ => bb8
}
}
bb3 = {
_8 = (42853_u16, (-25660_i16), _4, (-71_i8));
_11 = [18252007547342417055_u64,4614703830912744047_u64,14411978305385658835_u64,11065261252034824303_u64,2117060411466166948_u64,7284350586370964756_u64,8214406715350780404_u64,12980145141483814117_u64];
_8.1 = 11693_i16;
_6 = _8.1 as u32;
RET = !_3;
_14 = [_1,_1,_1,_1];
_8.3 = (-1659790469_i32) as i8;
_10 = 81953126908808370375494372752290929216_u128 as u8;
_2 = _11;
_8.3 = -112_i8;
_4 = (-45054834087923775125474463992067686600_i128) as u8;
_8.2 = !_3;
_16 = _8.1 >= _8.1;
_8 = (41137_u16, 27259_i16, _10, (-47_i8));
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_22.1.3 = _8.3;
_20 = _8.1;
_13 = _9 | _9;
_23 = [_13,_7,_13,_9,_13,_13,_13];
_11 = [16401041433663203851_u64,3587475494393361682_u64,16329828874081718448_u64,16319270347576249745_u64,18380865166950076656_u64,14198638731713130040_u64,12897362300812174982_u64,16947647587685653757_u64];
_21 = 119727243308793981121574622362306265537_u128 * 146416920603308804110588611898977689457_u128;
RET = _3;
_22.1.2 = _3 % 137_u8;
_22.0 = _9 + _9;
_8.1 = _8.0 as i16;
_21 = 86361382746347349357610908514551406696_u128 % 256594365146407891960104304412696615120_u128;
_22 = (_13, _8);
_21 = _1 as u128;
_5 = [_3,_3,_3,_3,_3];
_8.2 = _3;
_19 = [1218844742_i32,183668807_i32,1442357751_i32,(-1479916825_i32),(-501754071_i32)];
_13 = !_9;
RET = _8.2 | _4;
_7 = _22.0;
_15 = _3;
_24 = _18;
_22 = (_7, _8);
_4 = _22.1.2;
_1 = !_16;
match _8.0 {
54658 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_22.1.3 = !_8.3;
_9 = _22.0 | _13;
_2 = _11;
_19 = [1093660215_i32,(-1010306359_i32),74516298_i32,580124589_i32,85108403_i32];
_8.0 = _22.1.0 - _22.1.0;
_3 = _22.1.2;
_22.1 = (_8.0, _20, _4, _8.3);
_14 = [_16,_1,_16,_16];
_22.1.3 = _8.3;
_12 = [_22.1.2,_3,_8.2,_22.1.2,_4];
_14 = [_16,_16,_1,_1];
_4 = !_22.1.2;
_8.1 = !_22.1.1;
_7 = _13;
_25.2 = _22.1.2;
_20 = _22.1.3 as i16;
Goto(bb12)
}
bb12 = {
_22.1 = _8;
_18 = _24;
_25.1 = -_8.1;
_5 = [_22.1.2,_3,_15,_4,_22.1.2];
_22.1.1 = _20 >> _15;
_2 = [1129807490251543007_u64,5935686811189327126_u64,1391132808450714179_u64,13245328203491467359_u64,13295800461915287907_u64,2007905233564669649_u64,1999509191067154114_u64,1296029678625063220_u64];
_24 = _18;
_22.1.1 = !_25.1;
_22.1 = (_8.0, _8.1, _4, _8.3);
_22.1.0 = _8.0 >> _8.0;
_16 = _1;
Goto(bb13)
}
bb13 = {
_28.0 = _19;
_28.0 = [1365118932_i32,(-412465677_i32),(-1821793204_i32),(-379668057_i32),825221222_i32];
_14 = [_1,_16,_1,_1];
_25.2 = _8.2;
_2 = [207928789545767913_u64,16959126326806935594_u64,8853612329484651395_u64,13020797865748027062_u64,4804376924132793656_u64,4658695900873388693_u64,16468030408035601591_u64,2353772841486504187_u64];
RET = _25.2 & _8.2;
_8.2 = _4;
_15 = !_25.2;
_21 = 86043465778853736931611038259322206592_u128;
_16 = !_1;
_31.fld0.fld2 = _8.0;
_8.0 = 1214853011285062315_u64 as u16;
_7 = _8.1 as isize;
_28.1 = [_8.3,_22.1.3,_8.3,_22.1.3];
_30 = 10345511413350577797_u64 as f64;
_31.fld1.fld4 = _11;
_31.fld1.fld2 = [_6,_6,_6,_6,_6];
_31.fld1.fld6 = 9662293631712098636_u64 as i64;
_31.fld3 = core::ptr::addr_of!(_12);
_31.fld1.fld1 = -_30;
_12 = [_3,_15,_3,_25.2,_8.2];
_31.fld0.fld6 = [_22.1.3];
_22.0 = -_9;
_29 = _9;
_22.1.1 = _20 >> _4;
_31.fld0.fld6 = [_22.1.3];
Goto(bb14)
}
bb14 = {
_31.fld1.fld2 = [_6,_6,_6,_6,_6];
_31.fld1.fld3 = _12;
_35.fld6.1 = (_22.1.0, _22.1.1, _3, _22.1.3);
_27 = [4827265549347269213_u64];
_28.1 = [_35.fld6.1.3,_8.3,_22.1.3,_22.1.3];
_35.fld6.1.3 = _22.1.3 ^ _22.1.3;
_25.2 = _22.1.2;
_22.1.3 = _35.fld6.1.3 - _35.fld6.1.3;
_31.fld0.fld6 = [_22.1.3];
_28.4 = -_31.fld1.fld1;
_33 = _17 as i128;
_31.fld0.fld6 = [_35.fld6.1.3];
_35.fld4.0.0 = _31.fld1.fld6 as isize;
_28.5.1 = 4_usize as i16;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(16_usize, 15_usize, Move(_15), 23_usize, Move(_23), 7_usize, Move(_7), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(16_usize, 12_usize, Move(_12), 14_usize, Move(_14), 11_usize, Move(_11), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(16_usize, 33_usize, Move(_33), 3_usize, Move(_3), 8_usize, Move(_8), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(16_usize, 10_usize, Move(_10), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: u16,mut _2: *const [u8; 5],mut _3: u8,mut _4: u16,mut _5: u8,mut _6: u8,mut _7: isize,mut _8: (isize, (u16, i16, u8, i8)),mut _9: i8,mut _10: u8,mut _11: (u16, i16, u8, i8),mut _12: i8) -> Adt52 {
mir! {
type RET = Adt52;
let _13: isize;
let _14: f32;
let _15: *mut (isize, (u16, i16, u8, i8));
let _16: (isize, (u16, i16, u8, i8));
let _17: isize;
let _18: (isize, (u16, i16, u8, i8));
let _19: (u16, i16, u8, i8);
let _20: [u8; 5];
let _21: [i32; 5];
let _22: isize;
let _23: char;
let _24: u16;
let _25: ();
let _26: ();
{
_10 = 6630902251506674749_i64 as u8;
_11.2 = _5;
_8.1.0 = _4;
RET.fld5.2 = !_11.2;
RET.fld1 = 2963718794_u32 as f64;
_13 = _7;
_8.1.3 = -_11.3;
_6 = _5;
RET.fld6 = 4936504809636094111_i64;
RET.fld4 = [2344899113662529625_u64,7663393247172056954_u64,5288151670013565069_u64,5108128480720450755_u64,12470409053498534229_u64,3888546433104578864_u64,3266077734556809131_u64,10806698634867097082_u64];
RET.fld5 = (_4, _11.1, _10, _12);
Goto(bb1)
}
bb1 = {
_16.1.2 = _3 % 49_u8;
_8.1.3 = _9;
_5 = !_11.2;
_8 = (_7, _11);
RET.fld3 = [_6,_6,_6,_11.2,_5];
Goto(bb2)
}
bb2 = {
_16.1.3 = _8.1.3;
_18.1.0 = 4934320342878876997_u64 as u16;
_11.3 = _12;
_8.1.3 = -_11.3;
_16.0 = _7 >> _16.1.3;
_16.1.2 = _8.1.2;
_8.1.1 = _11.1;
_18.1 = (_11.0, _8.1.1, _5, _16.1.3);
_18 = _8;
_14 = (-40199029443294608800238600016914324744_i128) as f32;
_19.2 = _6;
RET.fld0 = _18.1.0 != _11.0;
_3 = _1 as u8;
_4 = !_8.1.0;
RET.fld2 = [22364082_u32,807046552_u32,1456074205_u32,3206621925_u32,2054178164_u32];
_18 = (_16.0, _11);
_22 = _16.0;
RET.fld6 = (-2354047798524309652_i64);
_18.1 = (_11.0, _8.1.1, _3, _9);
RET.fld2 = [935076686_u32,1683082469_u32,93349990_u32,720142826_u32,3387608369_u32];
RET.fld5 = _11;
RET.fld4 = [2600818266198707686_u64,13763362885526603501_u64,9070854112757752183_u64,15763660999521069993_u64,14068057867216299017_u64,14127968316193195214_u64,15333140591536965614_u64,17943199458740658510_u64];
Goto(bb3)
}
bb3 = {
Call(_25 = dump_var(17_usize, 12_usize, Move(_12), 4_usize, Move(_4), 7_usize, Move(_7), 22_usize, Move(_22)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_25 = dump_var(17_usize, 3_usize, Move(_3), 5_usize, Move(_5), 10_usize, Move(_10), 26_usize, _26), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: u8,mut _2: *mut (isize, (u16, i16, u8, i8))) -> isize {
mir! {
type RET = isize;
let _3: Adt57;
let _4: (isize, (u16, i16, u8, i8));
let _5: bool;
let _6: f32;
let _7: u128;
let _8: Adt65;
let _9: u8;
let _10: f64;
let _11: Adt59;
let _12: (*const u32,);
let _13: i64;
let _14: u128;
let _15: f64;
let _16: Adt62;
let _17: f32;
let _18: f32;
let _19: [isize; 7];
let _20: Adt55;
let _21: ();
let _22: ();
{
(*_2).1.0 = 33530_u16 - 40805_u16;
_2 = core::ptr::addr_of_mut!((*_2));
RET = _1 as isize;
RET = !(*_2).0;
(*_2).1.2 = !_1;
_1 = 4_usize as u8;
_3.fld0 = [860664151_u32,2890455766_u32,4036547375_u32,744075378_u32,961881278_u32];
_4.1.1 = (-81244275275595120957243354292174577175_i128) as i16;
_4.1.0 = (*_2).1.0;
(*_2).1.2 = _4.1.1 as u8;
Goto(bb1)
}
bb1 = {
(*_2).1.0 = !_4.1.0;
_3.fld5 = [98067030798301415680067805470563174092_i128,(-169316629401423014513063367291887063656_i128)];
_4.1.1 = (*_2).1.1;
_4.1.0 = !(*_2).1.0;
_3.fld4 = 197540821078216804090492778478332024313_u128 * 122735348754951611900214107690619349223_u128;
_3.fld3 = [6_usize,1_usize,17451871295836986806_usize,2447189838919351105_usize,5_usize,5_usize,0_usize];
(*_2).1.3 = 89_i8 | 96_i8;
(*_2).1.3 = !114_i8;
_4.1 = (*_2).1;
_5 = false | false;
(*_2) = (69_isize, _4.1);
_3.fld3 = [17761661902047000349_usize,2951067764642060692_usize,2_usize,17574584524691345501_usize,1_usize,17917000316973823196_usize,10941501371725307102_usize];
_3.fld2 = (*_2).1.3 as u16;
(*_2).1 = _4.1;
RET = (*_2).0 ^ (*_2).0;
(*_2).1.0 = _3.fld2 - _4.1.0;
_4.1.2 = 14492400010930710462_usize as u8;
(*_2).1.0 = 1545221133_u32 as u16;
(*_2).1.2 = _4.1.2 % 119_u8;
_3.fld5 = [148426650944183987514858395460893619107_i128,(-83885362014940610398308343261196365489_i128)];
match (*_2).0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
69 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = -(*_2).0;
_4.1.1 = 3711768764869342021_u64 as i16;
_3.fld6 = [_4.1.3];
_3.fld4 = !322818488284697039209090365026696185119_u128;
(*_2).0 = -(-45_isize);
(*_2).1 = (_3.fld2, _4.1.1, _1, _4.1.3);
(*_2).1.1 = _4.1.1 ^ _4.1.1;
_4.1.2 = '\u{1045be}' as u8;
_2 = core::ptr::addr_of_mut!((*_2));
_5 = _4.1.0 >= _4.1.0;
(*_2).1.3 = _4.1.3;
(*_2).0 = (-9223372036854775808_isize);
_5 = !false;
(*_2).1.0 = 4282511717_u32 as u16;
(*_2).0 = 96_isize ^ (-69_isize);
_4.1 = (_3.fld2, (*_2).1.1, _1, (*_2).1.3);
(*_2).0 = 15330269324988824584_usize as isize;
(*_2).1 = (_4.1.0, _4.1.1, _4.1.2, _4.1.3);
(*_2).1.0 = 675782574_u32 as u16;
_4.1.0 = !(*_2).1.0;
Goto(bb11)
}
bb11 = {
_6 = (*_2).1.3 as f32;
_3.fld3 = [6032960840504619465_usize,3_usize,4_usize,3_usize,3_usize,1010819653299149383_usize,7_usize];
(*_2) = (2_isize, _4.1);
(*_2).0 = 9223372036854775807_isize;
(*_2).1.1 = -_4.1.1;
(*_2).1.1 = (*_2).0 as i16;
(*_2).0 = -69_isize;
_3.fld4 = _3.fld2 as u128;
_4.0 = _5 as isize;
(*_2).0 = !_4.0;
_4.0 = -(*_2).0;
_8.fld6.fld4 = [(*_2).0,(*_2).0,_4.0,(*_2).0,(*_2).0,(*_2).0,_4.0];
_1 = (-8255659230077879254_i64) as u8;
_8.fld5 = (_3.fld6,);
_8.fld0.fld2 = [1195098317_i32,(-1384929466_i32),195443282_i32,1320439526_i32,1384149907_i32];
_8.fld4 = !11718994476214309395_usize;
_4.1.3 = (*_2).1.2 as i8;
Goto(bb12)
}
bb12 = {
_8.fld1 = _8.fld0.fld2;
_8.fld2.fld3 = [_1,_1,_4.1.2,(*_2).1.2,(*_2).1.2];
_8.fld2.fld5.2 = !_4.1.2;
_3.fld1 = core::ptr::addr_of_mut!(_8.fld6.fld0);
_8.fld6.fld1.fld1 = 9199772491939781029_i64 as f64;
_8.fld2.fld1 = -_8.fld6.fld1.fld1;
_8.fld2.fld5.3 = !(*_2).1.3;
_8.fld6.fld1.fld5.0 = _3.fld2 & _4.1.0;
_8.fld6.fld2.1 = _8.fld2.fld1;
(*_2) = (_4.0, _4.1);
(*_2).0 = 16984072877509182501852296699614351149_i128 as isize;
_8.fld2.fld1 = _8.fld6.fld1.fld1;
_8.fld6.fld2.1 = _8.fld2.fld1;
Goto(bb13)
}
bb13 = {
_3.fld3 = [_8.fld4,_8.fld4,_8.fld4,_8.fld4,_8.fld4,_8.fld4,_8.fld4];
_8.fld6.fld3.fld1 = [(*_2).1.1];
_8.fld6.fld1.fld6 = 543805751165719624_i64 + (-3483247080889564484_i64);
_8.fld2.fld5.3 = (*_2).1.3 + (*_2).1.3;
_8.fld2.fld2 = [2529270875_u32,1557925450_u32,1248004313_u32,958886062_u32,2216602094_u32];
_8.fld6.fld0 = 7093295148675867034479312350155553663_i128 & (-61952251150438148940593769593537372971_i128);
_4.1.0 = _8.fld6.fld1.fld5.0 ^ _8.fld6.fld1.fld5.0;
_7 = _3.fld4 * _3.fld4;
_8.fld2.fld1 = _8.fld6.fld2.1;
_4.1.2 = (*_2).1.2;
_4.1.3 = _8.fld2.fld5.3 << _7;
_8.fld2.fld6 = _8.fld2.fld5.3 as i64;
(*_2).1.3 = !_4.1.3;
_8.fld5 = (_3.fld6,);
_16.fld1.fld4 = [14395479050458115912_u64,1279623668706004146_u64,13634302983853158273_u64,8680086982480444771_u64,2234993442076660875_u64,10107101683299089266_u64,5740472056304309286_u64,3509726460229169205_u64];
_16.fld1.fld5.0 = _8.fld6.fld0 as u16;
_8.fld2.fld5.3 = _6 as i8;
_16.fld1.fld5 = (_8.fld6.fld1.fld5.0, _4.1.1, (*_2).1.2, (*_2).1.3);
_9 = _8.fld2.fld5.2 - _8.fld2.fld5.2;
(*_2).1 = (_16.fld1.fld5.0, _4.1.1, _4.1.2, _16.fld1.fld5.3);
Call(_8.fld4 = core::intrinsics::bswap(2_usize), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_18 = -_6;
_8.fld2.fld5.0 = '\u{4d75b}' as u16;
_4.1 = (_3.fld2, (*_2).1.1, _1, (*_2).1.3);
_20.fld0.1 = _8.fld6.fld0;
Goto(bb15)
}
bb15 = {
Call(_21 = dump_var(18_usize, 1_usize, Move(_1), 5_usize, Move(_5), 22_usize, _22, 22_usize, _22), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: i16,mut _2: u64,mut _3: ([i8; 1],),mut _4: u8,mut _5: i16) -> *mut usize {
mir! {
type RET = *mut usize;
let _6: isize;
let _7: u128;
let _8: [i8; 1];
let _9: [u32; 5];
let _10: (u16, i16, u8, i8);
let _11: ([i32; 5], [i8; 4], i32, char, f64, (u16, i16, u8, i8));
let _12: Adt49;
let _13: (isize, (u16, i16, u8, i8));
let _14: [u32; 5];
let _15: (u16, i16, u8, i8);
let _16: (u64, f64);
let _17: i64;
let _18: [bool; 4];
let _19: Adt59;
let _20: (isize, (u16, i16, u8, i8));
let _21: bool;
let _22: (u16, i16);
let _23: *mut (isize, (u16, i16, u8, i8));
let _24: u64;
let _25: u16;
let _26: u128;
let _27: isize;
let _28: ([i8; 1],);
let _29: *const [bool; 4];
let _30: *mut (isize, (u16, i16, u8, i8));
let _31: char;
let _32: isize;
let _33: f32;
let _34: Adt59;
let _35: *mut usize;
let _36: isize;
let _37: [i128; 2];
let _38: isize;
let _39: i64;
let _40: Adt52;
let _41: [u64; 8];
let _42: [bool; 4];
let _43: [i32; 5];
let _44: Adt60;
let _45: Adt61;
let _46: u16;
let _47: f64;
let _48: f32;
let _49: u16;
let _50: ();
let _51: ();
{
_4 = false as u8;
_5 = _1;
_4 = 2_usize as u8;
_4 = _5 as u8;
_3.0 = [123_i8];
_4 = _2 as u8;
_4 = 203_u8;
_4 = !119_u8;
_3.0 = [(-127_i8)];
_5 = 87188846270937660889501494453165044940_u128 as i16;
_2 = 9747379199041091673_u64;
_4 = !132_u8;
_2 = 4574621766199941346_u64 + 14885011702804971627_u64;
_1 = !_5;
_5 = _1 << _2;
_6 = 9223372036854775807_isize;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
9223372036854775807 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_6 = !9223372036854775807_isize;
_6 = (-9223372036854775808_isize);
_1 = _5 - _5;
_2 = 16850614328259221044_u64;
_5 = _2 as i16;
_1 = -_5;
_5 = _1;
_1 = _5 << _2;
_2 = 8327392670136087274_u64;
_1 = 26532_u16 as i16;
_1 = _4 as i16;
_7 = 223920360917569111805889068502699781827_u128 << _5;
_5 = _1;
_10.2 = _7 as u8;
_2 = 9020004485997269388_u64 ^ 13727208207984006391_u64;
_9 = [966892418_u32,2949592726_u32,1300289056_u32,3633731891_u32,4294482419_u32];
_4 = !_10.2;
_10.2 = _1 as u8;
_10.1 = _5;
_10.3 = (-71_i8);
_7 = !307297932899506764697247501614283687134_u128;
_9 = [3196292_u32,374005799_u32,1264724386_u32,105151775_u32,466650664_u32];
_8 = _3.0;
_6 = !65_isize;
_10.3 = !(-16_i8);
Goto(bb7)
}
bb7 = {
_10 = (49726_u16, _5, _4, (-8_i8));
_10.3 = 3_usize as i8;
_11.5 = (_10.0, _1, _10.2, _10.3);
_11.5.1 = _7 as i16;
_13 = (_6, _11.5);
_10.2 = _11.5.2;
_11.5.2 = _13.1.2 >> _11.5.0;
match _13.1.0 {
0 => bb4,
1 => bb6,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
49726 => bb14,
_ => bb13
}
}
bb8 = {
_6 = !9223372036854775807_isize;
_6 = (-9223372036854775808_isize);
_1 = _5 - _5;
_2 = 16850614328259221044_u64;
_5 = _2 as i16;
_1 = -_5;
_5 = _1;
_1 = _5 << _2;
_2 = 8327392670136087274_u64;
_1 = 26532_u16 as i16;
_1 = _4 as i16;
_7 = 223920360917569111805889068502699781827_u128 << _5;
_5 = _1;
_10.2 = _7 as u8;
_2 = 9020004485997269388_u64 ^ 13727208207984006391_u64;
_9 = [966892418_u32,2949592726_u32,1300289056_u32,3633731891_u32,4294482419_u32];
_4 = !_10.2;
_10.2 = _1 as u8;
_10.1 = _5;
_10.3 = (-71_i8);
_7 = !307297932899506764697247501614283687134_u128;
_9 = [3196292_u32,374005799_u32,1264724386_u32,105151775_u32,466650664_u32];
_8 = _3.0;
_6 = !65_isize;
_10.3 = !(-16_i8);
Goto(bb7)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_11.1 = [_13.1.3,_11.5.3,_13.1.3,_13.1.3];
_10.0 = _13.1.3 as u16;
_11.4 = _10.1 as f64;
_13 = (_6, _11.5);
_5 = _13.0 as i16;
_11.2 = (-53325877_i32);
_11.5 = _13.1;
_8 = _3.0;
_11.5 = (_13.1.0, _13.1.1, _13.1.2, _13.1.3);
_15 = _11.5;
_11.0 = [_11.2,_11.2,_11.2,_11.2,_11.2];
_10.3 = !_11.5.3;
_4 = _13.1.2;
_13.1.1 = _11.4 as i16;
_14 = [2977810638_u32,648304454_u32,835328710_u32,2992106656_u32,346318742_u32];
_11.4 = _15.0 as f64;
_15.3 = (-119008982925684155693585046015371755689_i128) as i8;
_15.0 = _10.0;
_11.1 = [_15.3,_10.3,_10.3,_15.3];
_13.1.2 = _2 as u8;
_12.fld0 = [0_usize,7217602282843783032_usize,4_usize,2_usize,18170132489271308559_usize,7031614776204025234_usize,5_usize];
_10 = _13.1;
_16.1 = 4_usize as f64;
_13.1 = _11.5;
match _13.1.0 {
0 => bb15,
1 => bb16,
2 => bb17,
3 => bb18,
4 => bb19,
5 => bb20,
49726 => bb22,
_ => bb21
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
_6 = !9223372036854775807_isize;
_6 = (-9223372036854775808_isize);
_1 = _5 - _5;
_2 = 16850614328259221044_u64;
_5 = _2 as i16;
_1 = -_5;
_5 = _1;
_1 = _5 << _2;
_2 = 8327392670136087274_u64;
_1 = 26532_u16 as i16;
_1 = _4 as i16;
_7 = 223920360917569111805889068502699781827_u128 << _5;
_5 = _1;
_10.2 = _7 as u8;
_2 = 9020004485997269388_u64 ^ 13727208207984006391_u64;
_9 = [966892418_u32,2949592726_u32,1300289056_u32,3633731891_u32,4294482419_u32];
_4 = !_10.2;
_10.2 = _1 as u8;
_10.1 = _5;
_10.3 = (-71_i8);
_7 = !307297932899506764697247501614283687134_u128;
_9 = [3196292_u32,374005799_u32,1264724386_u32,105151775_u32,466650664_u32];
_8 = _3.0;
_6 = !65_isize;
_10.3 = !(-16_i8);
Goto(bb7)
}
bb21 = {
_10 = (49726_u16, _5, _4, (-8_i8));
_10.3 = 3_usize as i8;
_11.5 = (_10.0, _1, _10.2, _10.3);
_11.5.1 = _7 as i16;
_13 = (_6, _11.5);
_10.2 = _11.5.2;
_11.5.2 = _13.1.2 >> _11.5.0;
match _13.1.0 {
0 => bb4,
1 => bb6,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
49726 => bb14,
_ => bb13
}
}
bb22 = {
_6 = _13.0 << _13.1.2;
_11.2 = _11.4 as i32;
_16.0 = _2;
_15.0 = !_11.5.0;
_10.2 = !_11.5.2;
_5 = _7 as i16;
_12.fld0 = [1_usize,5_usize,2809515448021545542_usize,5_usize,11717980211830195202_usize,8318450960731916651_usize,0_usize];
_18 = [true,false,false,false];
Goto(bb23)
}
bb23 = {
_17 = 2708606669628317762_i64 << _11.2;
_10.1 = _15.1;
_1 = -_11.5.1;
_13.1.0 = _7 as u16;
_7 = _10.0 as u128;
_11.4 = -_16.1;
_20.1.1 = !_1;
_20.1.0 = _15.1 as u16;
_19.fld1 = [_5];
_4 = _13.1.2;
_20 = (_6, _10);
_13.1.1 = _15.1 * _10.1;
_15 = _11.5;
_13.0 = _20.0;
_7 = 49479581163966543412305021546408198715_u128 & 260096903302571815240183245700389991215_u128;
_11.4 = _10.3 as f64;
_13.1.0 = _7 as u16;
_13.1.1 = !_5;
_16 = (_2, _11.4);
_17 = _10.1 as i64;
_11.5 = _20.1;
_3 = (_8,);
_15.0 = !_10.0;
_11.3 = '\u{afd22}';
_16.0 = _6 as u64;
match _11.5.0 {
0 => bb15,
1 => bb22,
49726 => bb24,
_ => bb3
}
}
bb24 = {
_18 = [false,true,false,true];
_11.0 = [_11.2,_11.2,_11.2,_11.2,_11.2];
_21 = !true;
_22 = (_13.1.0, _1);
_6 = _13.0 & _20.0;
_23 = core::ptr::addr_of_mut!(_13);
_22.1 = !_1;
Goto(bb25)
}
bb25 = {
_11.4 = -_16.1;
_21 = true & false;
_16 = (_2, _11.4);
_12.fld0 = [2101821495329893028_usize,7445454829999664861_usize,7_usize,1_usize,16165765449494233718_usize,1_usize,4_usize];
_16 = (_2, _11.4);
(*_23).1.3 = _2 as i8;
_10 = (*_23).1;
_20.0 = (*_23).0 | _6;
_6 = !_13.0;
_3.0 = [(*_23).1.3];
_11.5.1 = _21 as i16;
_14 = [2470401176_u32,3316756859_u32,960595542_u32,785178043_u32,3771309864_u32];
_19.fld1 = [_22.1];
(*_23).1.1 = _15.1;
_10.1 = _15.0 as i16;
_11.0 = [_11.2,_11.2,_11.2,_11.2,_11.2];
Call(_24 = core::intrinsics::transmute(_16.0), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_11.5.1 = _1;
_11.5.1 = -_10.1;
_24 = !_2;
_15.2 = (*_23).0 as u8;
_11.3 = '\u{c8650}';
_11.5.2 = _4 - _10.2;
_2 = _16.0;
(*_23).1.2 = 9396195406690698615_usize as u8;
_15.1 = !_10.1;
_12.fld0 = [15975664708798818817_usize,2_usize,0_usize,239783292615924543_usize,7_usize,17309833039098787831_usize,15976416290707308585_usize];
(*_23).1.3 = _15.3;
_10.2 = !_13.1.2;
_13.1.0 = !_11.5.0;
_13.0 = _20.0;
_11.5.0 = _15.0 + _15.0;
Goto(bb27)
}
bb27 = {
_21 = _20.1.0 > (*_23).1.0;
_7 = _11.2 as u128;
_16 = (_24, _11.4);
(*_23).1.1 = _10.1;
_13.1.3 = _17 as i8;
_8 = [_20.1.3];
(*_23) = _20;
(*_23).1.0 = _20.1.0 / 29969_u16;
_16 = (_2, _11.4);
_10.2 = _24 as u8;
_23 = core::ptr::addr_of_mut!((*_23));
_16 = (_2, _11.4);
Goto(bb28)
}
bb28 = {
_10 = ((*_23).1.0, _11.5.1, (*_23).1.2, (*_23).1.3);
_11.5.3 = -_15.3;
_11.5.2 = _22.0 as u8;
_11.2 = 1665322445_i32;
_26 = _7 << _10.1;
_25 = !_15.0;
_5 = !_10.1;
_15.1 = (*_23).1.1 >> _10.2;
(*_23).1.0 = _11.2 as u16;
_11.4 = _16.1 - _16.1;
_15.3 = -(*_23).1.3;
(*_23).1.0 = !_22.0;
_11.4 = _16.1 + _16.1;
_29 = core::ptr::addr_of!(_18);
(*_23).1.2 = !_10.2;
_28.0 = [_10.3];
_11.5.2 = 73925139756801095813554851818622797692_i128 as u8;
_11.5.3 = _24 as i8;
_30 = _23;
Call(_15.3 = core::intrinsics::transmute(_21), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_31 = _11.3;
(*_23).1.2 = (*_30).1.3 as u8;
(*_30).0 = _11.3 as isize;
(*_23).1.2 = !_10.2;
_31 = _11.3;
(*_30).1.0 = !_22.0;
_6 = _20.0;
_16.1 = -_11.4;
_22 = ((*_23).1.0, _5);
_20 = (_6, (*_30).1);
_13.1.3 = !_15.3;
_3 = _28;
_8 = [_15.3];
_10 = (*_30).1;
(*_23).1 = (_15.0, _11.5.1, _4, _10.3);
_38 = 2468115081_u32 as isize;
_19.fld0 = [11741001746008823710_usize,1_usize,10883192866868222631_usize,15925468565661104559_usize,13781263308029344333_usize,3_usize,7_usize];
_11.2 = 993723191_i32;
_28 = (_8,);
Goto(bb30)
}
bb30 = {
_11.5.2 = _13.1.2 << (*_30).1.3;
_11.2 = !(-1429598545_i32);
(*_23) = (_6, _15);
_10.3 = (*_23).1.3 - (*_23).1.3;
_5 = (*_30).1.1 | _11.5.1;
_40.fld3 = [_11.5.2,(*_30).1.2,_10.2,_13.1.2,_11.5.2];
_17 = 4231838470909351465_i64;
_40.fld6 = _17 ^ _17;
_34 = _19;
(*_23).0 = !_20.0;
_20.1.2 = _15.2;
_4 = (*_23).1.2;
_40.fld5 = (_10.0, (*_30).1.1, (*_23).1.2, _10.3);
_19.fld0 = _12.fld0;
_40.fld4 = [_24,_2,_24,_2,_2,_16.0,_16.0,_16.0];
_19 = Adt59 { fld0: _12.fld0,fld1: _34.fld1 };
_32 = _13.0 - _6;
_44.fld1 = Adt52 { fld0: _21,fld1: _16.1,fld2: _14,fld3: _40.fld3,fld4: _40.fld4,fld5: _15,fld6: _40.fld6 };
_4 = _44.fld1.fld5.2 << (*_23).0;
_6 = _32 + _20.0;
_10.3 = _44.fld1.fld5.3;
_26 = _7;
_11.2 = 1057887530_i32 & (-187841109_i32);
Call(_6 = core::intrinsics::bswap(_20.0), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
RET = core::ptr::addr_of_mut!(_45.fld2.fld0);
(*_23).1.1 = _44.fld1.fld5.1;
_45.fld3 = !11619537528571795126_usize;
(*_30).1.3 = _44.fld1.fld0 as i8;
_45.fld2.fld1 = core::ptr::addr_of_mut!(_44.fld4);
(*_30).1.1 = _7 as i16;
_45.fld2.fld4 = _16;
_45.fld3 = _6 as usize;
(*_30).1.3 = -_40.fld5.3;
_10.0 = (*_30).1.0 ^ _13.1.0;
_15 = (_25, _22.1, (*_23).1.2, _44.fld1.fld5.3);
_44.fld1.fld5.0 = _15.2 as u16;
_16.1 = -_44.fld1.fld1;
_45.fld1.fld2 = [_6,_13.0,(*_23).0,(*_30).0,_32,(*_30).0];
(*_30).1 = (_20.1.0, _40.fld5.1, _20.1.2, _20.1.3);
_34.fld1 = _19.fld1;
_48 = _15.2 as f32;
_44.fld1.fld5 = _13.1;
_45.fld1.fld3 = [4070060503_u32,88781327_u32,2927938610_u32,2955044281_u32,92218130_u32];
_45.fld1.fld0 = _6 as u32;
Goto(bb32)
}
bb32 = {
Call(_50 = dump_var(19_usize, 31_usize, Move(_31), 18_usize, Move(_18), 25_usize, Move(_25), 28_usize, Move(_28)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Call(_50 = dump_var(19_usize, 21_usize, Move(_21), 38_usize, Move(_38), 7_usize, Move(_7), 2_usize, Move(_2)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_50 = dump_var(19_usize, 4_usize, Move(_4), 13_usize, Move(_13), 17_usize, Move(_17), 20_usize, Move(_20)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(97370746064412056508895791898101671359_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: [usize; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: u32,
fld1: *const [i32; 5],
fld2: [isize; 6],
fld3: [u32; 5],
fld4: i16,
fld5: *const [bool; 4],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: usize,
fld1: *mut [i16; 1],
fld2: (u16, i16, u8, i8),
fld3: *mut (isize, (u16, i16, u8, i8)),
fld4: (u64, f64),
fld5: i32,
fld6: [i8; 4],
}
#[derive(Debug)]
pub struct Adt52 {
fld0: bool,
fld1: f64,
fld2: [u32; 5],
fld3: [u8; 5],
fld4: [u64; 8],
fld5: (u16, i16, u8, i8),
fld6: i64,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: (isize, (u16, i16, u8, i8)),
fld1: Adt50,
fld2: isize,
fld3: f32,
fld4: *mut i128,
fld5: (*const u32,),
fld6: *const [bool; 4],
}
#[derive(Debug)]
pub struct Adt54 {
fld0: (isize, (u16, i16, u8, i8)),
fld1: *const u32,
fld2: i64,
fld3: u32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: ([u32; 5], i128, (u16, i16), i8),
fld1: *const [i32; 5],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: *const [bool; 4],
fld1: [i16; 1],
fld2: [i32; 5],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: [u32; 5],
fld1: *mut i128,
fld2: u16,
fld3: [usize; 7],
fld4: u128,
fld5: [i128; 2],
fld6: [i8; 1],
fld7: [u64; 1],
}
#[derive(Debug)]
pub struct Adt58 {
fld0: i128,
fld1: Adt52,
fld2: (char, f64),
fld3: Adt56,
fld4: [isize; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: [usize; 7],
fld1: [i16; 1],
}
#[derive(Debug)]
pub struct Adt60 {
fld0: Adt57,
fld1: Adt52,
fld2: u8,
fld3: *const [u8; 5],
fld4: [i16; 1],
}
#[derive(Debug)]
pub struct Adt61 {
fld0: [bool; 4],
fld1: Adt50,
fld2: Adt51,
fld3: usize,
fld4: ([i8; 1],),
fld5: [usize; 7],
fld6: [isize; 7],
fld7: Adt49,
}
#[derive(Debug)]
pub struct Adt62 {
fld0: [u8; 5],
fld1: Adt52,
fld2: [i32; 5],
fld3: *const [u8; 5],
fld4: *const [i32; 5],
fld5: i32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt63 {
fld0: [u32; 5],
fld1: [u64; 1],
fld2: [i8; 1],
fld3: Adt50,
fld4: Adt55,
fld5: (isize, (u16, i16, u8, i8)),
fld6: Adt49,
fld7: u16,
}
#[derive(Debug)]
pub struct Adt64 {
fld0: *mut [i16; 1],
fld1: f32,
fld2: Adt52,
fld3: i8,
fld4: ((isize, (u16, i16, u8, i8)),),
fld5: Adt51,
fld6: (isize, (u16, i16, u8, i8)),
}
#[derive(Debug)]
pub struct Adt65 {
fld0: Adt56,
fld1: [i32; 5],
fld2: Adt52,
fld3: [i128; 2],
fld4: usize,
fld5: ([i8; 1],),
fld6: Adt58,
fld7: [isize; 7],
}

