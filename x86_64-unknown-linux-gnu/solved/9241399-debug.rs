#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: u128,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64) -> Adt57 {
mir! {
type RET = Adt57;
let _14: char;
let _15: u16;
let _16: u16;
let _17: ([i32; 2], (i64, char), f64, i64);
let _18: f64;
let _19: char;
let _20: isize;
let _21: f32;
let _22: f64;
let _23: isize;
let _24: u64;
let _25: ([i32; 2],);
let _26: i8;
let _27: Adt50;
let _28: i32;
let _29: u16;
let _30: [i128; 7];
let _31: Adt61;
let _32: *const ([i32; 5], u8);
let _33: ();
let _34: ();
{
RET.fld0.3.1 = !175_u8;
RET.fld0.3.0 = [(-2082663432_i32),436197498_i32,813809892_i32,(-94982141_i32),657387490_i32];
RET.fld3 = 788558387678663121_usize as f64;
RET.fld0.0 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET.fld3 = (-7715_i16) as f64;
RET.fld3 = 1069449397_i32 as f64;
RET.fld1 = 1044865034_i32;
_9 = 11627153208454717930_usize ^ 9465973914219970421_usize;
RET.fld0.2 = 65_u8 as u128;
RET.fld0.2 = 269432757046571730787927648113836650401_u128;
_1 = _9 <= _9;
RET.fld2 = 3967044653_u32 as u64;
_11 = 10373_u16 * 28749_u16;
Goto(bb1)
}
bb1 = {
_8 = 18396649978652229499646995833148582149_i128;
RET.fld2 = 5866301556305404336_u64 << _11;
_8 = !161282783102084769013158348328344550976_i128;
_10 = 22_u8 + 43_u8;
RET.fld0.1 = [12235743491376363723_u64,7388339588054229824_u64,7443084193721468826_u64,14735077753844934940_u64,2351820044605753526_u64,10822155164239685752_u64];
_10 = !8_u8;
Call(RET.fld0.3.0 = fn1(_11, _1, _11, _1, _11, _10, _10, _9, _8, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET.fld0.2 = 155400623682910142893502322423928967335_u128;
_1 = false;
Call(_7 = core::intrinsics::bswap((-2531384278905064250_i64)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_13 = !2238716186734721042_u64;
RET.fld0.0 = [(-128_isize),(-9223372036854775808_isize)];
RET.fld0.2 = 158580575425136148553510122368563614831_u128;
_7 = 3559052086463058608_i64;
_6 = 247436112780074328565492009415674225699_u128 | 125864305142766737187348772575342544160_u128;
RET.fld3 = _10 as f64;
_2 = '\u{6ff4b}';
_14 = _2;
_3 = (-9223372036854775808_isize);
_15 = _11 & _11;
match _7 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
3559052086463058608 => bb9,
_ => bb8
}
}
bb4 = {
RET.fld0.2 = 155400623682910142893502322423928967335_u128;
_1 = false;
Call(_7 = core::intrinsics::bswap((-2531384278905064250_i64)), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_8 = 18396649978652229499646995833148582149_i128;
RET.fld2 = 5866301556305404336_u64 << _11;
_8 = !161282783102084769013158348328344550976_i128;
_10 = 22_u8 + 43_u8;
RET.fld0.1 = [12235743491376363723_u64,7388339588054229824_u64,7443084193721468826_u64,14735077753844934940_u64,2351820044605753526_u64,10822155164239685752_u64];
_10 = !8_u8;
Call(RET.fld0.3.0 = fn1(_11, _1, _11, _1, _11, _10, _10, _9, _8, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = (-9223372036854775808_isize);
RET.fld3 = (-7453_i16) as f64;
RET.fld0.3.0 = [935668656_i32,(-1718270736_i32),1834840809_i32,(-760514748_i32),579623387_i32];
_5 = (-17095_i16) - 10613_i16;
RET.fld0.1 = [_13,_13,_13,_13,_13,_13];
RET.fld1 = (-84736406_i32) + 1135119731_i32;
match _3 {
0 => bb5,
340282366920938463454151235394913435648 => bb10,
_ => bb3
}
}
bb10 = {
RET.fld3 = _10 as f64;
RET.fld0.2 = !_6;
RET.fld0.1 = [_13,_13,_13,_13,_13,_13];
_17.1.1 = _14;
Goto(bb11)
}
bb11 = {
_17.3 = _7;
RET.fld0.3.1 = _10 & _10;
_4 = (-61_i8) << _15;
_9 = 12713927647042002384_usize;
_17.1 = (_17.3, _2);
_7 = _4 as i64;
_17.0 = [(-218202329_i32),(-1577513307_i32)];
RET.fld3 = _8 as f64;
_17.1 = (_7, _2);
_1 = !false;
RET.fld2 = _5 as u64;
_17.2 = 1721965055_i32 as f64;
_14 = _17.1.1;
_16 = _9 as u16;
RET.fld3 = _17.2;
_11 = !_15;
_5 = 23949_i16 ^ 15187_i16;
_19 = _14;
_6 = 231189639255704466388028674330341716522_u128;
RET.fld1 = _3 as i32;
_15 = _17.2 as u16;
RET.fld2 = _13;
_15 = _11;
_14 = _19;
_12 = 1215848591_u32;
Call(RET.fld0.2 = core::intrinsics::transmute(_6), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
RET.fld0.1 = [_13,_13,_13,_13,_13,_13];
_11 = !_15;
_11 = _15 * _15;
RET.fld1 = 311402394_i32;
Goto(bb13)
}
bb13 = {
_5 = _3 as i16;
RET.fld0.2 = _11 as u128;
RET.fld0.2 = !_6;
_14 = _17.1.1;
_4 = !80_i8;
_25.0 = [(-1347748397_i32),353614732_i32];
_20 = !_3;
_17.3 = _17.1.0;
_19 = _2;
_15 = _16;
Goto(bb14)
}
bb14 = {
_16 = _10 as u16;
_22 = -_17.2;
RET.fld2 = _13 ^ _13;
_17.1.1 = _14;
_17.3 = _7;
_10 = !211_u8;
_23 = _20;
_20 = -_23;
_18 = -_22;
_15 = !_11;
_25.0 = [(-1207335865_i32),1483268411_i32];
RET.fld0.2 = _6;
_5 = (-1219_i16);
_9 = !4052429130671323010_usize;
_17.0 = [(-1021043461_i32),54745329_i32];
RET.fld0.3.1 = !_10;
_31.fld0.fld0 = [_8,_8,_8,_8,_8,_8,_8];
_28 = !(-2076135110_i32);
_27 = _31.fld0;
_17.1 = (_7, _2);
_17.2 = _22;
_31.fld1 = [_8,_8,_8,_8,_8,_8,_8,_8];
_12 = 2941990691_u32;
_31.fld2 = [_28,_28,_28,_28,_28];
_15 = _11;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(0_usize, 25_usize, Move(_25), 5_usize, Move(_5), 13_usize, Move(_13), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(0_usize, 2_usize, Move(_2), 7_usize, Move(_7), 3_usize, Move(_3), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(0_usize, 28_usize, Move(_28), 23_usize, Move(_23), 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u16,mut _2: bool,mut _3: u16,mut _4: bool,mut _5: u16,mut _6: u8,mut _7: u8,mut _8: usize,mut _9: i128,mut _10: i128) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _11: *const ([i32; 5], u8);
let _12: Adt64;
let _13: Adt56;
let _14: Adt50;
let _15: i32;
let _16: char;
let _17: [i128; 4];
let _18: Adt52;
let _19: Adt57;
let _20: [u128; 5];
let _21: isize;
let _22: [i128; 7];
let _23: u8;
let _24: f64;
let _25: *mut i16;
let _26: [i128; 7];
let _27: bool;
let _28: *mut f32;
let _29: (u16, [u16; 6], [isize; 2]);
let _30: f32;
let _31: *mut i16;
let _32: bool;
let _33: usize;
let _34: Adt57;
let _35: ();
let _36: ();
{
_5 = _1 + _1;
RET = [22056388_i32,(-404998900_i32),1127794714_i32,1128134845_i32,833853689_i32];
RET = [1543603288_i32,590049473_i32,(-1005843780_i32),(-1706993507_i32),1073571970_i32];
_2 = !_4;
_9 = 5370022310727953144_i64 as i128;
Call(_7 = fn2(_2, _1, _8, _9, _9, _4, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = !_7;
RET = [170688887_i32,1146360279_i32,1926761881_i32,1431982627_i32,(-1804987454_i32)];
_8 = 7_usize + 1342305527331125124_usize;
_10 = _9 | _9;
_9 = (-19_isize) as i128;
RET = [(-1836474239_i32),(-1936131113_i32),333684683_i32,(-844987183_i32),2018699252_i32];
_3 = _5 / 53534_u16;
_12.fld4 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11 = core::ptr::addr_of!(_13.fld0);
Call(RET = fn8(_6, _2, _2, _6, _1, _10, _2, _7, _3, _11, _12.fld4, _4, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_11).1 = _7;
_2 = _4;
RET = [440229391_i32,(-451630509_i32),715765869_i32,(-1035881079_i32),(-445088396_i32)];
_13.fld1.fld0 = [_10,_9,_10,_10,_10,_9,_10];
_14.fld0 = [_10,_10,_9,_9,_10,_10,_10];
_12.fld2 = (-1445313696_i32) as f32;
_12.fld6.fld1.fld0 = [_9,_10,_9,_10,_9,_10,_10];
(*_11).0 = [(-1869752514_i32),1215591999_i32,536752851_i32,(-1217373682_i32),(-318805257_i32)];
_3 = 9169872971957081372_i64 as u16;
_12.fld2 = 1070677673711717362_u64 as f32;
_12.fld6.fld0.1 = _10 as u8;
_8 = 2_usize;
_12.fld6.fld0.0 = _13.fld0.0;
_13.fld1.fld0[_8] = _14.fld0[_8];
_12.fld4 = [(-9223372036854775808_isize),(-53_isize)];
_1 = _5;
_17[_8] = _13.fld0.0[_8] as i128;
_8 = 7_usize;
_6 = (*_11).1 & _12.fld6.fld0.1;
_9 = -_10;
_17 = [_10,_10,_10,_10];
_13.fld1.fld0 = _12.fld6.fld1.fld0;
_18.fld2.1 = (5798394552217968541_i64, '\u{7c089}');
Call((*_11).1 = core::intrinsics::transmute(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18.fld2.2 = _3 as f64;
_18.fld1.fld2 = [_9,_9,_10,_10,_9,_9,_9,_9];
_12.fld3 = core::ptr::addr_of!(_2);
_18.fld0 = core::ptr::addr_of!(_1);
_18.fld1.fld0.0 = [220181325915359374276597777555774498334_u128,27297354005853701848590623476297402745_u128,85613986821401933352978023399994044255_u128,6952741512933055871212227569626436541_u128,291081741841164536098249453617969595494_u128];
_18.fld5 = [14150267128262905293_u64,6244443282728285931_u64,12526924178700512142_u64,1102875658825341818_u64,3911309884736725621_u64,6859903530005602927_u64];
_12.fld6.fld3 = _8 >> _7;
_18.fld2.1.1 = '\u{22204}';
_12.fld5 = [_5,_5,_5,_1,_3,_1];
_12.fld6.fld0.1 = _7 << _1;
_12.fld0 = (*_11).1 == _6;
_18.fld2.3 = _18.fld2.1.0;
_18.fld2.2 = _9 as f64;
_12.fld1 = core::ptr::addr_of_mut!(_18.fld2.1.0);
_13.fld2 = core::ptr::addr_of!(_1);
_11 = core::ptr::addr_of!(_13.fld0);
_18.fld0 = core::ptr::addr_of!(_3);
_18.fld2.1.0 = -_18.fld2.3;
_12.fld6.fld0.0 = (*_11).0;
_13.fld1 = _12.fld6.fld1;
_13 = Adt56 { fld0: _12.fld6.fld0,fld1: _12.fld6.fld1,fld2: _18.fld0,fld3: _8 };
_8 = !_12.fld6.fld3;
_7 = _6 - _6;
_3 = _12.fld2 as u16;
_12.fld6.fld3 = _8;
Call(_12 = fn10(_18.fld5, _18.fld0, (*_11).1, (*_11).1, _11, _13.fld0.1, (*_11).1, _14.fld0, (*_11).0, _18.fld5, _5, _18.fld2.1.0, _6, _11), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = (*_11).1 << _3;
_3 = !_5;
(*_11) = _12.fld6.fld0;
_18.fld7.fld0 = _12.fld6.fld1.fld0;
_12.fld0 = _13.fld0.1 <= (*_11).1;
_12.fld6.fld1.fld0 = _18.fld7.fld0;
_18.fld2.2 = (-9223372036854775808_isize) as f64;
_13.fld2 = core::ptr::addr_of!(_1);
_18.fld2.1.0 = _18.fld2.3 & _18.fld2.3;
_15 = (-1234033488_i32);
_12.fld6.fld0.1 = _15 as u8;
_17 = [_10,_9,_10,_9];
match _13.fld3 {
0 => bb1,
1 => bb3,
2 => bb5,
3 => bb6,
4 => bb7,
7 => bb9,
_ => bb8
}
}
bb5 = {
_18.fld2.2 = _3 as f64;
_18.fld1.fld2 = [_9,_9,_10,_10,_9,_9,_9,_9];
_12.fld3 = core::ptr::addr_of!(_2);
_18.fld0 = core::ptr::addr_of!(_1);
_18.fld1.fld0.0 = [220181325915359374276597777555774498334_u128,27297354005853701848590623476297402745_u128,85613986821401933352978023399994044255_u128,6952741512933055871212227569626436541_u128,291081741841164536098249453617969595494_u128];
_18.fld5 = [14150267128262905293_u64,6244443282728285931_u64,12526924178700512142_u64,1102875658825341818_u64,3911309884736725621_u64,6859903530005602927_u64];
_12.fld6.fld3 = _8 >> _7;
_18.fld2.1.1 = '\u{22204}';
_12.fld5 = [_5,_5,_5,_1,_3,_1];
_12.fld6.fld0.1 = _7 << _1;
_12.fld0 = (*_11).1 == _6;
_18.fld2.3 = _18.fld2.1.0;
_18.fld2.2 = _9 as f64;
_12.fld1 = core::ptr::addr_of_mut!(_18.fld2.1.0);
_13.fld2 = core::ptr::addr_of!(_1);
_11 = core::ptr::addr_of!(_13.fld0);
_18.fld0 = core::ptr::addr_of!(_3);
_18.fld2.1.0 = -_18.fld2.3;
_12.fld6.fld0.0 = (*_11).0;
_13.fld1 = _12.fld6.fld1;
_13 = Adt56 { fld0: _12.fld6.fld0,fld1: _12.fld6.fld1,fld2: _18.fld0,fld3: _8 };
_8 = !_12.fld6.fld3;
_7 = _6 - _6;
_3 = _12.fld2 as u16;
_12.fld6.fld3 = _8;
Call(_12 = fn10(_18.fld5, _18.fld0, (*_11).1, (*_11).1, _11, _13.fld0.1, (*_11).1, _14.fld0, (*_11).0, _18.fld5, _5, _18.fld2.1.0, _6, _11), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
(*_11).1 = _7;
_2 = _4;
RET = [440229391_i32,(-451630509_i32),715765869_i32,(-1035881079_i32),(-445088396_i32)];
_13.fld1.fld0 = [_10,_9,_10,_10,_10,_9,_10];
_14.fld0 = [_10,_10,_9,_9,_10,_10,_10];
_12.fld2 = (-1445313696_i32) as f32;
_12.fld6.fld1.fld0 = [_9,_10,_9,_10,_9,_10,_10];
(*_11).0 = [(-1869752514_i32),1215591999_i32,536752851_i32,(-1217373682_i32),(-318805257_i32)];
_3 = 9169872971957081372_i64 as u16;
_12.fld2 = 1070677673711717362_u64 as f32;
_12.fld6.fld0.1 = _10 as u8;
_8 = 2_usize;
_12.fld6.fld0.0 = _13.fld0.0;
_13.fld1.fld0[_8] = _14.fld0[_8];
_12.fld4 = [(-9223372036854775808_isize),(-53_isize)];
_1 = _5;
_17[_8] = _13.fld0.0[_8] as i128;
_8 = 7_usize;
_6 = (*_11).1 & _12.fld6.fld0.1;
_9 = -_10;
_17 = [_10,_10,_10,_10];
_13.fld1.fld0 = _12.fld6.fld1.fld0;
_18.fld2.1 = (5798394552217968541_i64, '\u{7c089}');
Call((*_11).1 = core::intrinsics::transmute(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_6 = !_7;
RET = [170688887_i32,1146360279_i32,1926761881_i32,1431982627_i32,(-1804987454_i32)];
_8 = 7_usize + 1342305527331125124_usize;
_10 = _9 | _9;
_9 = (-19_isize) as i128;
RET = [(-1836474239_i32),(-1936131113_i32),333684683_i32,(-844987183_i32),2018699252_i32];
_3 = _5 / 53534_u16;
_12.fld4 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11 = core::ptr::addr_of!(_13.fld0);
Call(RET = fn8(_6, _2, _2, _6, _1, _10, _2, _7, _3, _11, _12.fld4, _4, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
(*_11).1 = !_6;
_15 = (-357489251_i32) - (-1817650318_i32);
_21 = -9223372036854775807_isize;
Call(_21 = core::intrinsics::transmute(_18.fld2.3), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_19.fld0.3.0 = (*_11).0;
_18.fld4 = core::ptr::addr_of!(_19.fld1);
(*_11).1 = _21 as u8;
_19.fld3 = -_18.fld2.2;
_19.fld0.3.0 = [_15,_15,_15,_15,_15];
_7 = _12.fld2 as u8;
_18.fld5 = [16751637383689482792_u64,1438041998432091614_u64,8587713823242961331_u64,5134437829924882714_u64,309957082323370004_u64,12982561127855494557_u64];
_19.fld0.3 = (_13.fld0.0, (*_11).1);
_12.fld6.fld0.0 = [_15,_15,_15,_15,_15];
_18.fld1.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_18.fld7.fld0 = [_10,_10,_10,_9,_9,_10,_9];
_18.fld1.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_18.fld7 = Adt50 { fld0: _13.fld1.fld0 };
_19.fld0.1 = [15449475818255795817_u64,17589457027977784964_u64,4394951812639560815_u64,1741980148506687796_u64,9777703022105598235_u64,5809863920773537908_u64];
(*_11).1 = _9 as u8;
_20 = _18.fld1.fld0.0;
Call(_12.fld6.fld0.1 = fn14(_12.fld6.fld2, Move(_13), _12.fld3, _11, _18.fld1.fld2, _12.fld5, _18.fld5, _1, _18.fld2.3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_14 = Adt50 { fld0: _12.fld6.fld1.fld0 };
_17 = [_10,_10,_10,_10];
_18.fld1.fld2 = [_10,_9,_10,_9,_9,_9,_9,_9];
_12.fld6.fld1 = Adt50 { fld0: _14.fld0 };
_18.fld2.1.0 = !_18.fld2.3;
_12.fld6.fld2 = core::ptr::addr_of!(_3);
_12.fld6.fld1 = _14;
_11 = core::ptr::addr_of!(_19.fld0.3);
_18.fld3 = _12.fld6.fld0.0;
_12.fld6.fld0.0 = [_15,_15,_15,_15,_15];
_19.fld0.0 = [_21,_21];
_12.fld1 = core::ptr::addr_of_mut!(_18.fld2.3);
_4 = _12.fld0 <= _2;
_18.fld1.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_9 = !_10;
_12.fld6.fld2 = core::ptr::addr_of!(_1);
_17 = [_9,_9,_9,_9];
_19.fld0.0 = [_21,_21];
RET = [_15,_15,_15,_15,_15];
_19.fld0 = (_12.fld4, _18.fld5, 317781296475270874401480209618247101784_u128, _12.fld6.fld0);
_16 = _18.fld2.1.1;
_18.fld6 = core::ptr::addr_of!((*_11));
_7 = _6 ^ (*_11).1;
_22 = [_10,_10,_9,_10,_9,_9,_9];
RET = [_15,_15,_15,_15,_15];
_19.fld0.2 = _21 as u128;
_23 = _5 as u8;
_8 = !_12.fld6.fld3;
Call(_18.fld2.1.0 = core::intrinsics::bswap(_18.fld2.3), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_12.fld3 = core::ptr::addr_of!(_27);
RET = [_15,_15,_15,_15,_15];
_19.fld1 = -_15;
_15 = _19.fld1;
_12.fld6.fld0.1 = !_6;
RET = [_15,_19.fld1,_19.fld1,_19.fld1,_15];
_10 = _19.fld1 as i128;
_18.fld0 = core::ptr::addr_of!(_5);
_19.fld2 = 7229641918742482017_u64 >> _10;
_14.fld0 = [_10,_10,_10,_10,_10,_10,_9];
_12.fld6.fld2 = core::ptr::addr_of!(_3);
_19.fld3 = _18.fld2.2;
_2 = !_4;
_18.fld6 = core::ptr::addr_of!((*_11));
_12.fld0 = _2;
_12.fld5 = [_3,_1,_1,_1,_3,_5];
_18.fld7.fld0 = _14.fld0;
_28 = core::ptr::addr_of_mut!(_30);
_4 = _12.fld0;
_18.fld3 = _19.fld0.3.0;
_18.fld6 = core::ptr::addr_of!((*_11));
_12.fld6.fld1 = _18.fld7;
_10 = _9 ^ _9;
_12.fld0 = _2;
_12.fld6.fld1 = Adt50 { fld0: _14.fld0 };
(*_28) = _12.fld2 + _12.fld2;
_12.fld6 = Adt56 { fld0: (*_11),fld1: _18.fld7,fld2: _18.fld0,fld3: _8 };
match _18.fld2.3 {
0 => bb8,
1 => bb13,
2 => bb14,
5798394552217968541 => bb16,
_ => bb15
}
}
bb13 = {
_14 = Adt50 { fld0: _12.fld6.fld1.fld0 };
_17 = [_10,_10,_10,_10];
_18.fld1.fld2 = [_10,_9,_10,_9,_9,_9,_9,_9];
_12.fld6.fld1 = Adt50 { fld0: _14.fld0 };
_18.fld2.1.0 = !_18.fld2.3;
_12.fld6.fld2 = core::ptr::addr_of!(_3);
_12.fld6.fld1 = _14;
_11 = core::ptr::addr_of!(_19.fld0.3);
_18.fld3 = _12.fld6.fld0.0;
_12.fld6.fld0.0 = [_15,_15,_15,_15,_15];
_19.fld0.0 = [_21,_21];
_12.fld1 = core::ptr::addr_of_mut!(_18.fld2.3);
_4 = _12.fld0 <= _2;
_18.fld1.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_9 = !_10;
_12.fld6.fld2 = core::ptr::addr_of!(_1);
_17 = [_9,_9,_9,_9];
_19.fld0.0 = [_21,_21];
RET = [_15,_15,_15,_15,_15];
_19.fld0 = (_12.fld4, _18.fld5, 317781296475270874401480209618247101784_u128, _12.fld6.fld0);
_16 = _18.fld2.1.1;
_18.fld6 = core::ptr::addr_of!((*_11));
_7 = _6 ^ (*_11).1;
_22 = [_10,_10,_9,_10,_9,_9,_9];
RET = [_15,_15,_15,_15,_15];
_19.fld0.2 = _21 as u128;
_23 = _5 as u8;
_8 = !_12.fld6.fld3;
Call(_18.fld2.1.0 = core::intrinsics::bswap(_18.fld2.3), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
_6 = !_7;
RET = [170688887_i32,1146360279_i32,1926761881_i32,1431982627_i32,(-1804987454_i32)];
_8 = 7_usize + 1342305527331125124_usize;
_10 = _9 | _9;
_9 = (-19_isize) as i128;
RET = [(-1836474239_i32),(-1936131113_i32),333684683_i32,(-844987183_i32),2018699252_i32];
_3 = _5 / 53534_u16;
_12.fld4 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11 = core::ptr::addr_of!(_13.fld0);
Call(RET = fn8(_6, _2, _2, _6, _1, _10, _2, _7, _3, _11, _12.fld4, _4, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
_18.fld2.0 = [_15,_19.fld1];
_26 = _18.fld7.fld0;
_29.1 = [_3,_3,_3,_3,_5,_5];
_27 = _2;
_18.fld7 = Adt50 { fld0: _12.fld6.fld1.fld0 };
_7 = _6;
(*_11) = (_18.fld3, _7);
_18.fld2.1.1 = _16;
(*_11).0 = [_19.fld1,_15,_19.fld1,_19.fld1,_19.fld1];
_34.fld1 = _15 * _19.fld1;
(*_11).1 = _6 + _7;
Goto(bb17)
}
bb17 = {
Call(_35 = dump_var(1_usize, 21_usize, Move(_21), 22_usize, Move(_22), 23_usize, Move(_23), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(1_usize, 4_usize, Move(_4), 1_usize, Move(_1), 27_usize, Move(_27), 15_usize, Move(_15)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_35 = dump_var(1_usize, 2_usize, Move(_2), 36_usize, _36, 36_usize, _36, 36_usize, _36), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: bool,mut _2: u16,mut _3: usize,mut _4: i128,mut _5: i128,mut _6: bool,mut _7: i128) -> u8 {
mir! {
type RET = u8;
let _8: isize;
let _9: *const isize;
let _10: f32;
let _11: [u64; 6];
let _12: i128;
let _13: ([i32; 5], [isize; 2]);
let _14: Adt54;
let _15: isize;
let _16: u32;
let _17: Adt60;
let _18: f64;
let _19: Adt57;
let _20: (u16, [u16; 6], [isize; 2]);
let _21: isize;
let _22: u64;
let _23: [i128; 8];
let _24: *const isize;
let _25: *const u16;
let _26: f64;
let _27: [i32; 5];
let _28: Adt57;
let _29: char;
let _30: f64;
let _31: *const i32;
let _32: i8;
let _33: Adt58;
let _34: u128;
let _35: Adt50;
let _36: i128;
let _37: ();
let _38: ();
{
_2 = !18122_u16;
RET = 223_u8 & 223_u8;
_3 = 4994175383969219259_u64 as usize;
_7 = '\u{d092}' as i128;
RET = 240_u8 / 18_u8;
_1 = _6 ^ _6;
_8 = 36_isize + 9223372036854775807_isize;
_4 = -_5;
_5 = (-78607002_i32) as i128;
_5 = -_7;
RET = !129_u8;
_8 = (-9223372036854775808_isize);
_2 = 51917_u16;
_9 = core::ptr::addr_of!(_8);
RET = (-35_i8) as u8;
(*_9) = !104_isize;
_10 = _2 as f32;
_3 = 5_usize / 1_usize;
_11 = [4790147678001636634_u64,2861702567014119210_u64,619890772723020384_u64,8964408179057792382_u64,18105919879072773408_u64,12088513779287640907_u64];
_13.0 = [(-856347445_i32),506323728_i32,359736270_i32,516195262_i32,(-1881324557_i32)];
_9 = core::ptr::addr_of!((*_9));
_10 = (-48_i8) as f32;
_7 = _5;
_14.fld1 = 8070119096961618516_i64 as usize;
Goto(bb1)
}
bb1 = {
_13.0 = [215788644_i32,1142282920_i32,1509215999_i32,(-356273936_i32),1786786855_i32];
_5 = _7 | _7;
_10 = (-8075405348680881864_i64) as f32;
_14.fld0 = !1708297423428783997_u64;
(*_9) = (-9223372036854775808_isize) + 3_isize;
_14.fld1 = _3;
_14.fld3 = !(-98_i8);
_8 = (-9223372036854775808_isize) & (-122_isize);
_14.fld2 = ['\u{6d333}','\u{6cd04}'];
_7 = _5;
_12 = _7;
(*_9) = _10 as isize;
_4 = (-2175791350368568913_i64) as i128;
(*_9) = (-9223372036854775808_isize) * 9223372036854775807_isize;
_4 = _7;
_10 = (*_9) as f32;
_13.0 = [(-1577309425_i32),1286960684_i32,126287963_i32,(-1639255762_i32),1264548354_i32];
Call(_14.fld0 = fn3((*_9), (*_9), _14.fld2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12 = 25_u8 as i128;
RET = (*_9) as u8;
_17.fld0.0 = [(-237978005_i32),1601308277_i32];
_10 = 1035745948_u32 as f32;
_19.fld0.3 = (_13.0, 121_u8);
RET = !_19.fld0.3.1;
_19.fld0.2 = 285749749329414909468111862182617036677_u128 / 330839679666739960931758508959154095389_u128;
_21 = _14.fld0 as isize;
_20.1 = [_2,_2,_2,_2,_2,_2];
_13.1 = [(*_9),_21];
_17.fld0.1.1 = '\u{d1a46}';
_17.fld2 = 609050411_u32 as f64;
_16 = 3021195142_u32 / 3574645111_u32;
_17.fld0.3 = _21 as i64;
RET = _17.fld0.1.1 as u8;
_1 = _6;
_19.fld3 = _17.fld2;
RET = !_19.fld0.3.1;
_16 = 782482750_u32;
_17.fld1.0 = _17.fld0.1.1 as i32;
match _19.fld0.3.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
121 => bb11,
_ => bb10
}
}
bb3 = {
_13.0 = [215788644_i32,1142282920_i32,1509215999_i32,(-356273936_i32),1786786855_i32];
_5 = _7 | _7;
_10 = (-8075405348680881864_i64) as f32;
_14.fld0 = !1708297423428783997_u64;
(*_9) = (-9223372036854775808_isize) + 3_isize;
_14.fld1 = _3;
_14.fld3 = !(-98_i8);
_8 = (-9223372036854775808_isize) & (-122_isize);
_14.fld2 = ['\u{6d333}','\u{6cd04}'];
_7 = _5;
_12 = _7;
(*_9) = _10 as isize;
_4 = (-2175791350368568913_i64) as i128;
(*_9) = (-9223372036854775808_isize) * 9223372036854775807_isize;
_4 = _7;
_10 = (*_9) as f32;
_13.0 = [(-1577309425_i32),1286960684_i32,126287963_i32,(-1639255762_i32),1264548354_i32];
Call(_14.fld0 = fn3((*_9), (*_9), _14.fld2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_17.fld0.1.0 = _17.fld0.3 & _17.fld0.3;
_15 = (*_9) ^ _21;
_25 = core::ptr::addr_of!(_2);
_25 = core::ptr::addr_of!((*_25));
_22 = _14.fld0 % 4848645127149781697_u64;
_20.2 = [_21,_15];
_19.fld0.2 = 41039815726087088218838201405805494073_u128 / 91350730616644871456353883411395158766_u128;
_4 = _6 as i128;
_23 = [_5,_12,_5,_12,_4,_5,_4,_4];
_3 = !_14.fld1;
(*_25) = !29789_u16;
_28.fld2 = _22 / 14615337330485592704_u64;
_18 = _19.fld0.3.1 as f64;
_23 = [_4,_4,_4,_5,_5,_4,_7,_7];
_12 = _4;
_28.fld0.3.1 = _19.fld0.3.1 / 124_u8;
_28.fld0.3.0 = [_17.fld1.0,_17.fld1.0,_17.fld1.0,_17.fld1.0,_17.fld1.0];
_6 = _1 & _1;
_13 = (_19.fld0.3.0, _20.2);
RET = _3 as u8;
_31 = core::ptr::addr_of!(_19.fld1);
_26 = _19.fld3;
Call(_27 = core::intrinsics::transmute(_28.fld0.3.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_10 = (-31578_i16) as f32;
_28.fld0.0 = _13.1;
_23 = [_12,_12,_12,_7,_4,_12,_4,_5];
_5 = -_7;
Goto(bb13)
}
bb13 = {
(*_9) = -_15;
_30 = _18;
_19.fld0.2 = _16 as u128;
_28.fld1 = _17.fld1.0 - _17.fld1.0;
Goto(bb14)
}
bb14 = {
_19.fld0.0 = [_8,(*_9)];
_33.fld0 = [_5,_4,_4,_12,_4,_4,_4];
_17.fld1.0 = _28.fld1 - _28.fld1;
_10 = _14.fld1 as f32;
(*_31) = _17.fld1.0;
_19.fld0 = (_13.1, _11, 65359627436812626964397967202877288075_u128, _28.fld0.3);
_33.fld3.fld3 = _14.fld1 as i8;
RET = _28.fld0.3.1;
_33.fld2.0 = _16 as u16;
_11 = _19.fld0.1;
_5 = _12;
_33.fld4.1 = _19.fld0.3.1;
_17.fld0.1.0 = !_17.fld0.3;
_36 = -_7;
_22 = _17.fld0.1.1 as u64;
_8 = _21 * _15;
_33.fld2.2 = [(*_9),_8];
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(2_usize, 4_usize, Move(_4), 16_usize, Move(_16), 8_usize, Move(_8), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(2_usize, 23_usize, Move(_23), 11_usize, Move(_11), 13_usize, Move(_13), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(2_usize, 22_usize, Move(_22), 38_usize, _38, 38_usize, _38, 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: isize,mut _2: isize,mut _3: [char; 2],mut _4: i128) -> u64 {
mir! {
type RET = u64;
let _5: *mut f32;
let _6: (u16, [u16; 6], [isize; 2]);
let _7: i32;
let _8: *const bool;
let _9: [i32; 4];
let _10: Adt61;
let _11: char;
let _12: Adt61;
let _13: bool;
let _14: Adt55;
let _15: i32;
let _16: Adt61;
let _17: Adt60;
let _18: usize;
let _19: Adt51;
let _20: u8;
let _21: Adt61;
let _22: i16;
let _23: i8;
let _24: [u64; 6];
let _25: ([i32; 2],);
let _26: *mut f32;
let _27: f64;
let _28: [i8; 3];
let _29: char;
let _30: Adt63;
let _31: u128;
let _32: Adt64;
let _33: usize;
let _34: ();
let _35: ();
{
RET = 6714866296333853162_u64 + 3163700500213380865_u64;
RET = 10346314749222276466_u64;
_1 = _2;
RET = !11094440857642110064_u64;
_4 = (-105441204308645740053294564957467495074_i128);
_4 = (-127066657791498858923194532214527262765_i128);
_1 = _2 * _2;
Goto(bb1)
}
bb1 = {
_3 = ['\u{5fb55}','\u{ebe5f}'];
_3 = ['\u{6401}','\u{4a0f7}'];
RET = !18443042040054950520_u64;
_3 = ['\u{64d16}','\u{2df30}'];
_6.1 = [58702_u16,44414_u16,19255_u16,43853_u16,8315_u16,33949_u16];
_7 = !573195927_i32;
_1 = !_2;
RET = 220_u8 as u64;
match _4 {
0 => bb2,
1 => bb3,
213215709129439604540180075217240948691 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_3 = ['\u{31be}','\u{7551e}'];
_1 = 14359898840086393325_usize as isize;
RET = !4195361385233420325_u64;
_6.0 = 12951_u16 * 29966_u16;
_6.2 = [_1,_2];
_9 = [_7,_7,_7,_7];
_6.2 = [_2,_2];
RET = false as u64;
_1 = _4 as isize;
_4 = (-128313777013978755234033372711285612133_i128);
_10.fld3 = 7211951816925130287_u64 as i16;
_6.0 = 50769_u16;
_11 = '\u{c6772}';
_1 = _2;
_12.fld2 = [_7,_7,_7,_7,_7];
_9 = [_7,_7,_7,_7];
_10.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_11 = '\u{aa6e}';
_10.fld2 = [_7,_7,_7,_7,_7];
_6.1 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_12.fld2 = [_7,_7,_7,_7,_7];
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_10.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_4 = (-136840464664523997197586272492886327104_i128) << _10.fld3;
match _6.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
50769 => bb7,
_ => bb6
}
}
bb6 = {
Return()
}
bb7 = {
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_13 = true;
_10.fld3 = -(-23821_i16);
Call(_12.fld3 = fn4(_4, _10.fld2, _11, _1, _6.1, _2, _6.2, _13, _10.fld0, _6.1, _10.fld2, _12.fld1, _1, _6.1, _6.2), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_4 = 18134596024523344515317772999200824813_i128 + (-145305399618857332770347061206343881703_i128);
_6.0 = 59528_u16;
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_1 = _2;
_8 = core::ptr::addr_of!(_13);
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_14.fld1.1.0 = (-7776629105764724832_i64);
_14.fld1.0 = [_7,_7];
_1 = _2;
match _6.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
59528 => bb9,
_ => bb7
}
}
bb9 = {
_10.fld1 = _12.fld1;
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_14.fld1.1.1 = _11;
_14.fld6 = [_7,_7,_7,_7];
_15 = _4 as i32;
(*_8) = !true;
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_16.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_1 = _2;
_14.fld1.1.1 = _11;
_14.fld1.1 = (8334341997433108438_i64, _11);
_14.fld0 = [_4,_4,_4,_4];
_14.fld3 = [_15,_15,_7,_7,_7,_7,_15,_15];
_16 = _10;
_8 = core::ptr::addr_of!((*_8));
_14.fld6 = [_15,_15,_15,_15];
_14.fld1.2 = 964706598_u32 as f64;
_14.fld1.0 = [_15,_15];
_7 = !_15;
_9 = _14.fld6;
_17.fld2 = -_14.fld1.2;
_17.fld0 = (_14.fld1.0, _14.fld1.1, _14.fld1.2, _14.fld1.1.0);
_14.fld2 = [_2,_1];
_14.fld5 = _10.fld1;
_14.fld4 = _12.fld3;
_17.fld0.2 = 13080726656251441028_u64 as f64;
Goto(bb10)
}
bb10 = {
_10.fld2 = [_15,_15,_15,_15,_15];
_12.fld3 = _16.fld3 << _14.fld1.1.0;
_17.fld0.3 = _14.fld1.1.0 ^ _17.fld0.1.0;
Goto(bb11)
}
bb11 = {
_10 = Adt61 { fld0: _16.fld0,fld1: _14.fld5,fld2: _12.fld2,fld3: _12.fld3 };
_6.2 = [_1,_1];
_4 = _1 as i128;
_11 = _17.fld0.1.1;
_10.fld2 = [_15,_15,_7,_7,_7];
_21 = Adt61 { fld0: _16.fld0,fld1: _12.fld1,fld2: _10.fld2,fld3: _16.fld3 };
_16.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_14.fld6 = _9;
_11 = _17.fld0.1.1;
_17.fld0.1 = _14.fld1.1;
_17.fld2 = 1969361179_u32 as f64;
_19.fld2 = _10.fld1;
_14.fld1 = (_17.fld0.0, _17.fld0.1, _17.fld0.2, _17.fld0.3);
_17.fld0.1.0 = !_17.fld0.3;
_14.fld4 = -_12.fld3;
_17.fld0 = (_14.fld1.0, _14.fld1.1, _14.fld1.2, _14.fld1.1.0);
_16.fld2 = _21.fld2;
Goto(bb12)
}
bb12 = {
_25 = (_14.fld1.0,);
_14.fld1 = _17.fld0;
_24 = [15295554598049593704_u64,14802132465133621475_u64,3434756366015161571_u64,14935952479783070828_u64,1941820220471716285_u64,365072123107456829_u64];
_6.0 = 48500_u16 / 33214_u16;
_16.fld2 = [_15,_15,_7,_15,_15];
_14.fld1.1 = (_17.fld0.3, _11);
_10.fld0 = Adt50 { fld0: _16.fld0.fld0 };
_13 = _14.fld1.3 >= _14.fld1.3;
_17.fld0.0 = [_15,_15];
_14.fld1.1 = (_17.fld0.1.0, _11);
RET = 3771463332952228894_u64 - 1576081909851244417_u64;
_16.fld0 = Adt50 { fld0: _10.fld0.fld0 };
_25.0 = _14.fld1.0;
_17.fld0.2 = -_17.fld2;
_17.fld0.2 = -_17.fld2;
_23 = !(-127_i8);
_2 = _15 as isize;
(*_8) = !true;
_10.fld0 = Adt50 { fld0: _16.fld0.fld0 };
_17.fld1.0 = _14.fld4 as i32;
_14.fld2 = _6.2;
_10.fld3 = _17.fld1.0 as i16;
_17.fld0.1.1 = _11;
_24 = [17397618226826753168_u64,16570072465692087500_u64,13853834232900592104_u64,6316735240760864366_u64,8001093975787204052_u64,3345419766395630699_u64];
_17.fld1.1 = core::ptr::addr_of_mut!(_22);
(*_8) = true;
Goto(bb13)
}
bb13 = {
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_9 = [_15,_7,_15,_15];
_21.fld0.fld0 = _10.fld0.fld0;
_14.fld2 = [_2,_1];
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_27 = _17.fld2;
_6.2 = [_1,_2];
_14.fld5 = [_4,_4,_4,_4,_4,_4,_4,_4];
_14.fld1 = (_17.fld0.0, _17.fld0.1, _27, _17.fld0.1.0);
_19.fld2 = _21.fld1;
match _17.fld0.3 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
8334341997433108438 => bb21,
_ => bb20
}
}
bb14 = {
_3 = ['\u{31be}','\u{7551e}'];
_1 = 14359898840086393325_usize as isize;
RET = !4195361385233420325_u64;
_6.0 = 12951_u16 * 29966_u16;
_6.2 = [_1,_2];
_9 = [_7,_7,_7,_7];
_6.2 = [_2,_2];
RET = false as u64;
_1 = _4 as isize;
_4 = (-128313777013978755234033372711285612133_i128);
_10.fld3 = 7211951816925130287_u64 as i16;
_6.0 = 50769_u16;
_11 = '\u{c6772}';
_1 = _2;
_12.fld2 = [_7,_7,_7,_7,_7];
_9 = [_7,_7,_7,_7];
_10.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_11 = '\u{aa6e}';
_10.fld2 = [_7,_7,_7,_7,_7];
_6.1 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_12.fld2 = [_7,_7,_7,_7,_7];
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_10.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_4 = (-136840464664523997197586272492886327104_i128) << _10.fld3;
match _6.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
50769 => bb7,
_ => bb6
}
}
bb15 = {
_10 = Adt61 { fld0: _16.fld0,fld1: _14.fld5,fld2: _12.fld2,fld3: _12.fld3 };
_6.2 = [_1,_1];
_4 = _1 as i128;
_11 = _17.fld0.1.1;
_10.fld2 = [_15,_15,_7,_7,_7];
_21 = Adt61 { fld0: _16.fld0,fld1: _12.fld1,fld2: _10.fld2,fld3: _16.fld3 };
_16.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_14.fld6 = _9;
_11 = _17.fld0.1.1;
_17.fld0.1 = _14.fld1.1;
_17.fld2 = 1969361179_u32 as f64;
_19.fld2 = _10.fld1;
_14.fld1 = (_17.fld0.0, _17.fld0.1, _17.fld0.2, _17.fld0.3);
_17.fld0.1.0 = !_17.fld0.3;
_14.fld4 = -_12.fld3;
_17.fld0 = (_14.fld1.0, _14.fld1.1, _14.fld1.2, _14.fld1.1.0);
_16.fld2 = _21.fld2;
Goto(bb12)
}
bb16 = {
_10.fld2 = [_15,_15,_15,_15,_15];
_12.fld3 = _16.fld3 << _14.fld1.1.0;
_17.fld0.3 = _14.fld1.1.0 ^ _17.fld0.1.0;
Goto(bb11)
}
bb17 = {
_10.fld1 = _12.fld1;
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_14.fld1.1.1 = _11;
_14.fld6 = [_7,_7,_7,_7];
_15 = _4 as i32;
(*_8) = !true;
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_16.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_1 = _2;
_14.fld1.1.1 = _11;
_14.fld1.1 = (8334341997433108438_i64, _11);
_14.fld0 = [_4,_4,_4,_4];
_14.fld3 = [_15,_15,_7,_7,_7,_7,_15,_15];
_16 = _10;
_8 = core::ptr::addr_of!((*_8));
_14.fld6 = [_15,_15,_15,_15];
_14.fld1.2 = 964706598_u32 as f64;
_14.fld1.0 = [_15,_15];
_7 = !_15;
_9 = _14.fld6;
_17.fld2 = -_14.fld1.2;
_17.fld0 = (_14.fld1.0, _14.fld1.1, _14.fld1.2, _14.fld1.1.0);
_14.fld2 = [_2,_1];
_14.fld5 = _10.fld1;
_14.fld4 = _12.fld3;
_17.fld0.2 = 13080726656251441028_u64 as f64;
Goto(bb10)
}
bb18 = {
_4 = 18134596024523344515317772999200824813_i128 + (-145305399618857332770347061206343881703_i128);
_6.0 = 59528_u16;
_12.fld1 = [_4,_4,_4,_4,_4,_4,_4,_4];
_1 = _2;
_8 = core::ptr::addr_of!(_13);
_10.fld0.fld0 = [_4,_4,_4,_4,_4,_4,_4];
_14.fld1.1.0 = (-7776629105764724832_i64);
_14.fld1.0 = [_7,_7];
_1 = _2;
match _6.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
59528 => bb9,
_ => bb7
}
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
_21.fld3 = -_10.fld3;
_10 = Adt61 { fld0: _21.fld0,fld1: _14.fld5,fld2: _12.fld2,fld3: _21.fld3 };
_16.fld0 = _10.fld0;
_32.fld6.fld1 = Adt50 { fld0: _16.fld0.fld0 };
_14.fld1.2 = _27 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007140961727455315_f64);
_3 = [_14.fld1.1.1,_17.fld0.1.1];
_28 = [_23,_23,_23];
_16.fld1 = _12.fld1;
_32.fld3 = core::ptr::addr_of!((*_8));
_21.fld3 = (*_8) as i16;
_9 = _14.fld6;
_17.fld0.2 = 18023553985771116344_usize as f64;
_31 = 99507192236851630357933003807125401618_u128 ^ 68953106203301697282472213166320081868_u128;
Goto(bb22)
}
bb22 = {
Call(_34 = dump_var(3_usize, 23_usize, Move(_23), 3_usize, Move(_3), 1_usize, Move(_1), 25_usize, Move(_25)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_34 = dump_var(3_usize, 2_usize, Move(_2), 24_usize, Move(_24), 6_usize, Move(_6), 35_usize, _35), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i128,mut _2: [i32; 5],mut _3: char,mut _4: isize,mut _5: [u16; 6],mut _6: isize,mut _7: [isize; 2],mut _8: bool,mut _9: Adt50,mut _10: [u16; 6],mut _11: [i32; 5],mut _12: [i128; 8],mut _13: isize,mut _14: [u16; 6],mut _15: [isize; 2]) -> i16 {
mir! {
type RET = i16;
let _16: f64;
let _17: i8;
let _18: Adt65;
let _19: [i32; 5];
let _20: f32;
let _21: i16;
let _22: bool;
let _23: Adt52;
let _24: [isize; 2];
let _25: i64;
let _26: *const ([u128; 5],);
let _27: (i64, char);
let _28: [char; 2];
let _29: ();
let _30: ();
{
_1 = (-123882895103369403136017912008241635528_i128) * 100095669682539205896268620800663144926_i128;
RET = 26443_i16 >> _13;
RET = (-3481_i16);
_6 = _1 as isize;
_13 = 70872472892694136602934473969119278655_u128 as isize;
_2 = _11;
RET = -23101_i16;
RET = (-12_i8) as i16;
_10 = [32131_u16,8288_u16,60943_u16,39159_u16,42893_u16,12322_u16];
_3 = '\u{3028c}';
_10 = [48277_u16,47276_u16,51042_u16,10913_u16,51458_u16,4753_u16];
_16 = (-64_i8) as f64;
_11 = _2;
_17 = _1 as i8;
_3 = '\u{ca072}';
_18.fld1.fld3.fld0 = !13647172053633571831_u64;
_17 = 122_i8;
_18.fld1.fld0 = [_1,_1,_1,_1,_1,_1,_1];
_1 = !(-35921931154796700767203241732099185228_i128);
_3 = '\u{6049}';
_18.fld1.fld3.fld2 = [_3,_3];
RET = !6852_i16;
_18.fld1.fld2.1 = [40075_u16,43294_u16,61425_u16,16638_u16,27272_u16,26938_u16];
match _17 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
122 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_9.fld0 = _18.fld1.fld0;
_18.fld1.fld3.fld3 = !_17;
RET = -(-14217_i16);
_18.fld1.fld4.0 = _2;
RET = (-3213_i16) ^ (-22627_i16);
_6 = 82_u8 as isize;
_9 = Adt50 { fld0: _18.fld1.fld0 };
_18.fld1.fld4.1 = _1 as u8;
_18.fld1.fld4 = (_2, 174_u8);
_18.fld1.fld2 = (45537_u16, _10, _15);
_18.fld1.fld2.2 = _15;
_15 = _18.fld1.fld2.2;
_18.fld1.fld3.fld3 = _17 << _1;
_17 = _16 as i8;
_3 = '\u{f46b9}';
_12 = [_1,_1,_1,_1,_1,_1,_1,_1];
_18.fld1.fld0 = [_1,_1,_1,_1,_1,_1,_1];
_8 = !true;
_6 = -_4;
_21 = _18.fld1.fld3.fld0 as i16;
_5 = [_18.fld1.fld2.0,_18.fld1.fld2.0,_18.fld1.fld2.0,_18.fld1.fld2.0,_18.fld1.fld2.0,_18.fld1.fld2.0];
_20 = 205442405592950578791670635870431624136_u128 as f32;
_2 = [(-1232207626_i32),501846732_i32,(-1875031645_i32),32441642_i32,2134749018_i32];
_18.fld1.fld5 = core::ptr::addr_of_mut!(_20);
_9.fld0 = [_1,_1,_1,_1,_1,_1,_1];
_18.fld1.fld4.0 = [(-693681671_i32),779925466_i32,1510638310_i32,(-1217556236_i32),1436709073_i32];
_17 = _16 as i8;
Call(_5 = fn5(_6, _18.fld1.fld2.2, _18.fld1.fld2.0, _18.fld1.fld3.fld3, _18.fld1.fld3.fld3, _18.fld1.fld5, _18.fld1.fld4.0, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_7 = _18.fld1.fld2.2;
_17 = !_18.fld1.fld3.fld3;
_18.fld1.fld3.fld4 = -_20;
_23.fld1.fld2 = [_1,_1,_1,_1,_1,_1,_1,_1];
_12 = _23.fld1.fld2;
_23.fld2.1 = ((-795882214676901480_i64), _3);
_23.fld0 = core::ptr::addr_of!(_18.fld1.fld2.0);
_18.fld1.fld4 = (_2, 209_u8);
_16 = _21 as f64;
match _18.fld1.fld4.1 {
0 => bb1,
1 => bb6,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
209 => bb13,
_ => bb12
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
RET = _21 & _21;
_19 = [2023151819_i32,(-2126117351_i32),460816936_i32,(-1894679030_i32),(-486995374_i32)];
_18.fld1.fld5 = core::ptr::addr_of_mut!(_18.fld1.fld3.fld4);
_23.fld3 = _19;
Call(_16 = fn7(_12, _7, _2, _18.fld1.fld4, _18.fld1.fld2.1, _5, _20, _7, _15, _18.fld1.fld2.1, _23.fld3, _4, _18.fld1.fld3.fld2, _23.fld0, _18.fld1.fld2.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23.fld7.fld0 = [_1,_1,_1,_1,_1,_1,_1];
_16 = 165736698930401728300444271580208249699_u128 as f64;
_18.fld1.fld3.fld2 = [_3,_3];
_5 = _18.fld1.fld2.1;
_18.fld1.fld2.2 = _15;
_2 = [(-426596397_i32),(-1713729207_i32),1698811089_i32,(-1745495983_i32),(-1084937320_i32)];
_18.fld1.fld2 = (15811_u16, _5, _7);
_18.fld1.fld4.0 = [(-1830062743_i32),(-1883717107_i32),821373846_i32,679859736_i32,(-748677501_i32)];
_18.fld1.fld3.fld2 = [_23.fld2.1.1,_3];
_18.fld1.fld2.0 = 10715_u16;
_27.1 = _3;
_27 = (_23.fld2.1.0, _23.fld2.1.1);
_18.fld1.fld3.fld3 = _17 ^ _17;
_3 = _27.1;
_23.fld3 = [(-1829225627_i32),433938277_i32,885240988_i32,(-1265665742_i32),(-353034128_i32)];
_18.fld1.fld4.1 = 77_u8;
_23.fld0 = core::ptr::addr_of!(_18.fld1.fld2.0);
RET = !_21;
_23.fld1.fld2 = [_1,_1,_1,_1,_1,_1,_1,_1];
_23.fld6 = core::ptr::addr_of!(_18.fld1.fld4);
_9 = _23.fld7;
_23.fld2.2 = _20 as f64;
_27.0 = _21 as i64;
_27.1 = _3;
_6 = _4;
_23.fld2.3 = -_27.0;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(4_usize, 27_usize, Move(_27), 4_usize, Move(_4), 7_usize, Move(_7), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(4_usize, 14_usize, Move(_14), 6_usize, Move(_6), 3_usize, Move(_3), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(4_usize, 5_usize, Move(_5), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: [isize; 2],mut _3: u16,mut _4: i8,mut _5: i8,mut _6: *mut f32,mut _7: [i32; 5],mut _8: isize) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _9: bool;
let _10: [i32; 4];
let _11: bool;
let _12: f64;
let _13: *const ([i32; 5], u8);
let _14: ([isize; 2], [u64; 6], u128, ([i32; 5], u8));
let _15: f64;
let _16: u32;
let _17: isize;
let _18: u64;
let _19: *const isize;
let _20: u16;
let _21: [i8; 3];
let _22: Adt62;
let _23: i64;
let _24: u64;
let _25: *mut i64;
let _26: Adt58;
let _27: i128;
let _28: usize;
let _29: Adt62;
let _30: u16;
let _31: Adt56;
let _32: bool;
let _33: u64;
let _34: ();
let _35: ();
{
_8 = _1 - _1;
(*_6) = _3 as f32;
RET = [_3,_3,_3,_3,_3,_3];
RET = [_3,_3,_3,_3,_3,_3];
_7 = [45773426_i32,1858360598_i32,(-1719052945_i32),(-1992722252_i32),(-295803909_i32)];
_2 = [_8,_8];
RET = [_3,_3,_3,_3,_3,_3];
(*_6) = 712149767_u32 as f32;
_1 = 1647882160_i32 as isize;
_8 = _1;
_5 = _4 << _1;
(*_6) = (-2020736804312513596_i64) as f32;
_3 = 42654_u16;
_4 = !_5;
_8 = _3 as isize;
_2 = [_1,_1];
_5 = _4 >> _4;
_3 = !62157_u16;
_5 = _4;
(*_6) = 7766501786404189171_i64 as f32;
Goto(bb1)
}
bb1 = {
(*_6) = 24601703678329891203526709563269520567_u128 as f32;
(*_6) = (-462605086_i32) as f32;
(*_6) = 1773_i16 as f32;
_1 = !_8;
_1 = _8;
_5 = 5_usize as i8;
_9 = false ^ true;
RET = [_3,_3,_3,_3,_3,_3];
RET = [_3,_3,_3,_3,_3,_3];
_10 = [1577280421_i32,(-78148263_i32),1904118581_i32,1442099010_i32];
_6 = core::ptr::addr_of_mut!((*_6));
Call(_10 = fn6(_8, _2, _4, _2, _1, _6, _6, _4, (*_6), (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = [_3,_3,_3,_3,_3,_3];
_2 = [_1,_8];
_10 = [480777015_i32,(-2118853309_i32),1368489626_i32,576670397_i32];
_9 = !true;
_3 = 8269167_u32 as u16;
_10 = [(-1266011104_i32),(-177848297_i32),128621630_i32,1450174623_i32];
_1 = -_8;
_11 = _9;
_6 = core::ptr::addr_of_mut!((*_6));
_1 = _8 + _8;
Goto(bb3)
}
bb3 = {
(*_6) = _3 as f32;
_6 = core::ptr::addr_of_mut!((*_6));
_5 = _4;
(*_6) = 246_u8 as f32;
_10 = [1821251936_i32,173355160_i32,1352412587_i32,(-1362813855_i32)];
_3 = !25953_u16;
_12 = _3 as f64;
_1 = _8 + _8;
_2 = [_1,_1];
_14.1 = [10024271195522922739_u64,3812417731804866795_u64,10216175836448283766_u64,1175458067474587295_u64,14683881658803394066_u64,4051747161395737173_u64];
_14.3.1 = 218_u8 << _4;
_4 = _5 ^ _5;
Goto(bb4)
}
bb4 = {
_11 = _9;
(*_6) = _12 as f32;
_14.3.1 = 247_u8;
_14.2 = !188451815935725707013607254156913850735_u128;
_14.3.0 = [(-1796260603_i32),894072342_i32,2012595342_i32,(-1798531970_i32),(-716971491_i32)];
_14.1 = [8035172054292987722_u64,7519040323109692369_u64,963429965545043324_u64,3951528512641200978_u64,18183491139576285847_u64,1565733519486266104_u64];
_1 = _8 + _8;
_14.0 = [_1,_1];
_7 = _14.3.0;
_11 = _9;
_7 = [(-868473764_i32),(-577095952_i32),2024786548_i32,2103108541_i32,1106581442_i32];
_16 = _3 as u32;
_5 = _4 - _4;
(*_6) = 13509892979346277517_u64 as f32;
_8 = 16041117284651888199649337344764751927_i128 as isize;
_15 = -_12;
(*_6) = _14.2 as f32;
_2 = [_8,_1];
_5 = !_4;
RET = [_3,_3,_3,_3,_3,_3];
_6 = core::ptr::addr_of_mut!((*_6));
(*_6) = 6316464125765130576_u64 as f32;
match _14.3.1 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
247 => bb10,
_ => bb9
}
}
bb5 = {
(*_6) = _3 as f32;
_6 = core::ptr::addr_of_mut!((*_6));
_5 = _4;
(*_6) = 246_u8 as f32;
_10 = [1821251936_i32,173355160_i32,1352412587_i32,(-1362813855_i32)];
_3 = !25953_u16;
_12 = _3 as f64;
_1 = _8 + _8;
_2 = [_1,_1];
_14.1 = [10024271195522922739_u64,3812417731804866795_u64,10216175836448283766_u64,1175458067474587295_u64,14683881658803394066_u64,4051747161395737173_u64];
_14.3.1 = 218_u8 << _4;
_4 = _5 ^ _5;
Goto(bb4)
}
bb6 = {
RET = [_3,_3,_3,_3,_3,_3];
_2 = [_1,_8];
_10 = [480777015_i32,(-2118853309_i32),1368489626_i32,576670397_i32];
_9 = !true;
_3 = 8269167_u32 as u16;
_10 = [(-1266011104_i32),(-177848297_i32),128621630_i32,1450174623_i32];
_1 = -_8;
_11 = _9;
_6 = core::ptr::addr_of_mut!((*_6));
_1 = _8 + _8;
Goto(bb3)
}
bb7 = {
(*_6) = 24601703678329891203526709563269520567_u128 as f32;
(*_6) = (-462605086_i32) as f32;
(*_6) = 1773_i16 as f32;
_1 = !_8;
_1 = _8;
_5 = 5_usize as i8;
_9 = false ^ true;
RET = [_3,_3,_3,_3,_3,_3];
RET = [_3,_3,_3,_3,_3,_3];
_10 = [1577280421_i32,(-78148263_i32),1904118581_i32,1442099010_i32];
_6 = core::ptr::addr_of_mut!((*_6));
Call(_10 = fn6(_8, _2, _4, _2, _1, _6, _6, _4, (*_6), (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14.0 = [_8,_8];
_4 = -_5;
_7 = [837516737_i32,157022317_i32,524810727_i32,1845105714_i32,1095062370_i32];
_22.fld1 = (6130832609250504870_i64, '\u{57a28}');
_16 = _22.fld1.1 as u32;
_26.fld3.fld4 = _14.2 as f32;
_26.fld1 = core::ptr::addr_of!(_22.fld2.fld1.0);
_26.fld5 = core::ptr::addr_of_mut!((*_6));
match _14.3.1 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb11,
4 => bb12,
247 => bb14,
_ => bb13
}
}
bb11 = {
(*_6) = _3 as f32;
_6 = core::ptr::addr_of_mut!((*_6));
_5 = _4;
(*_6) = 246_u8 as f32;
_10 = [1821251936_i32,173355160_i32,1352412587_i32,(-1362813855_i32)];
_3 = !25953_u16;
_12 = _3 as f64;
_1 = _8 + _8;
_2 = [_1,_1];
_14.1 = [10024271195522922739_u64,3812417731804866795_u64,10216175836448283766_u64,1175458067474587295_u64,14683881658803394066_u64,4051747161395737173_u64];
_14.3.1 = 218_u8 << _4;
_4 = _5 ^ _5;
Goto(bb4)
}
bb12 = {
_11 = _9;
(*_6) = _12 as f32;
_14.3.1 = 247_u8;
_14.2 = !188451815935725707013607254156913850735_u128;
_14.3.0 = [(-1796260603_i32),894072342_i32,2012595342_i32,(-1798531970_i32),(-716971491_i32)];
_14.1 = [8035172054292987722_u64,7519040323109692369_u64,963429965545043324_u64,3951528512641200978_u64,18183491139576285847_u64,1565733519486266104_u64];
_1 = _8 + _8;
_14.0 = [_1,_1];
_7 = _14.3.0;
_11 = _9;
_7 = [(-868473764_i32),(-577095952_i32),2024786548_i32,2103108541_i32,1106581442_i32];
_16 = _3 as u32;
_5 = _4 - _4;
(*_6) = 13509892979346277517_u64 as f32;
_8 = 16041117284651888199649337344764751927_i128 as isize;
_15 = -_12;
(*_6) = _14.2 as f32;
_2 = [_8,_1];
_5 = !_4;
RET = [_3,_3,_3,_3,_3,_3];
_6 = core::ptr::addr_of_mut!((*_6));
(*_6) = 6316464125765130576_u64 as f32;
match _14.3.1 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
247 => bb10,
_ => bb9
}
}
bb13 = {
(*_6) = 24601703678329891203526709563269520567_u128 as f32;
(*_6) = (-462605086_i32) as f32;
(*_6) = 1773_i16 as f32;
_1 = !_8;
_1 = _8;
_5 = 5_usize as i8;
_9 = false ^ true;
RET = [_3,_3,_3,_3,_3,_3];
RET = [_3,_3,_3,_3,_3,_3];
_10 = [1577280421_i32,(-78148263_i32),1904118581_i32,1442099010_i32];
_6 = core::ptr::addr_of_mut!((*_6));
Call(_10 = fn6(_8, _2, _4, _2, _1, _6, _6, _4, (*_6), (*_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_18 = _26.fld3.fld4 as u64;
_13 = core::ptr::addr_of!(_26.fld4);
_18 = _1 as u64;
_26.fld4 = _14.3;
_26.fld3.fld2 = [_22.fld1.1,_22.fld1.1];
(*_6) = _26.fld3.fld4 * _26.fld3.fld4;
_26.fld4.0 = [873786641_i32,41529290_i32,(-255926897_i32),(-623874856_i32),84068329_i32];
_29.fld0 = _22.fld1.0;
_22.fld2.fld0.0 = [1875006474_i32,1653151303_i32];
_26.fld3.fld3 = !_5;
_22.fld2.fld0.1.1 = _22.fld1.1;
(*_13).1 = (*_6) as u8;
_22.fld2.fld0.0 = [(-1636775222_i32),(-558988945_i32)];
_31.fld3 = (-47282490883865706369188102878332956459_i128) as usize;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(5_usize, 10_usize, Move(_10), 16_usize, Move(_16), 2_usize, Move(_2), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(5_usize, 4_usize, Move(_4), 3_usize, Move(_3), 35_usize, _35, 35_usize, _35), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: isize,mut _2: [isize; 2],mut _3: i8,mut _4: [isize; 2],mut _5: isize,mut _6: *mut f32,mut _7: *mut f32,mut _8: i8,mut _9: f32,mut _10: f32) -> [i32; 4] {
mir! {
type RET = [i32; 4];
let _11: u32;
let _12: isize;
let _13: i32;
let _14: i8;
let _15: *mut i16;
let _16: i8;
let _17: f64;
let _18: char;
let _19: *const isize;
let _20: Adt57;
let _21: ([i32; 2],);
let _22: f32;
let _23: bool;
let _24: f64;
let _25: char;
let _26: (u16, [u16; 6], [isize; 2]);
let _27: (u16, [u16; 6], [isize; 2]);
let _28: f64;
let _29: ([i32; 2], (i64, char), f64, i64);
let _30: isize;
let _31: [i32; 5];
let _32: Adt58;
let _33: Adt58;
let _34: i32;
let _35: ();
let _36: ();
{
RET = [1280152590_i32,1469466761_i32,1426601352_i32,(-1074916088_i32)];
_2 = [_5,_5];
_3 = -_8;
(*_7) = _9;
_7 = _6;
_3 = 0_usize as i8;
_9 = _10 * (*_6);
(*_6) = _9 * _9;
(*_7) = 114_u8 as f32;
RET = [975175716_i32,1060792696_i32,1997715276_i32,(-267105541_i32)];
_8 = _3;
_13 = _3 as i32;
_5 = _10 as isize;
_1 = 3549087401_u32 as isize;
(*_6) = _9;
RET = [_13,_13,_13,_13];
_6 = core::ptr::addr_of_mut!((*_7));
Goto(bb1)
}
bb1 = {
_9 = (*_7) - (*_7);
_11 = !599438167_u32;
_13 = (-212967838_i32) - (-568121601_i32);
_8 = 38876_u16 as i8;
_6 = _7;
_2 = [_1,_5];
(*_6) = _9;
_6 = _7;
(*_7) = -_9;
_4 = [_1,_5];
(*_6) = _9;
_9 = (*_7);
_6 = core::ptr::addr_of_mut!(_10);
_16 = _8 - _3;
_12 = -_1;
RET = [_13,_13,_13,_13];
_1 = !_12;
_12 = _5 >> _13;
Goto(bb2)
}
bb2 = {
_7 = core::ptr::addr_of_mut!(_9);
_7 = core::ptr::addr_of_mut!((*_7));
(*_6) = (*_7);
_12 = _1;
_16 = _8 * _8;
_7 = _6;
_8 = _16 + _16;
_11 = 2964845769_u32;
_9 = (*_7) + _10;
match _11 {
2964845769 => bb3,
_ => bb1
}
}
bb3 = {
_2 = [_5,_12];
_14 = (-4776669859714283467_i64) as i8;
_3 = (-41274517051309064921835981691010297571_i128) as i8;
_19 = core::ptr::addr_of!(_12);
_20.fld0.0 = [_12,_5];
_2 = [_12,(*_19)];
_1 = _5;
_20.fld0.2 = 2386456657493420129_usize as u128;
_12 = _16 as isize;
_5 = -_12;
_20.fld0.3.0 = [_13,_13,_13,_13,_13];
_19 = core::ptr::addr_of!(_5);
(*_19) = !_1;
(*_6) = (-78735310031623756934055106118875947573_i128) as f32;
_3 = 2382132282396651118_u64 as i8;
match _11 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
2964845769 => bb9,
_ => bb8
}
}
bb4 = {
_7 = core::ptr::addr_of_mut!(_9);
_7 = core::ptr::addr_of_mut!((*_7));
(*_6) = (*_7);
_12 = _1;
_16 = _8 * _8;
_7 = _6;
_8 = _16 + _16;
_11 = 2964845769_u32;
_9 = (*_7) + _10;
match _11 {
2964845769 => bb3,
_ => bb1
}
}
bb5 = {
_9 = (*_7) - (*_7);
_11 = !599438167_u32;
_13 = (-212967838_i32) - (-568121601_i32);
_8 = 38876_u16 as i8;
_6 = _7;
_2 = [_1,_5];
(*_6) = _9;
_6 = _7;
(*_7) = -_9;
_4 = [_1,_5];
(*_6) = _9;
_9 = (*_7);
_6 = core::ptr::addr_of_mut!(_10);
_16 = _8 - _3;
_12 = -_1;
RET = [_13,_13,_13,_13];
_1 = !_12;
_12 = _5 >> _13;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = [_13,_13,_13,_13];
_13 = 19424_u16 as i32;
_18 = '\u{57be8}';
_21.0 = [_13,_13];
_6 = core::ptr::addr_of_mut!((*_7));
_19 = core::ptr::addr_of!((*_19));
(*_19) = !_12;
_20.fld1 = _13 >> (*_19);
RET = [_20.fld1,_20.fld1,_20.fld1,_20.fld1];
_22 = -_9;
_20.fld0.3.0 = [_13,_13,_20.fld1,_13,_13];
_24 = (-1472692900883944894_i64) as f64;
_20.fld0.2 = 330377086538163373997479624148373402379_u128;
_2 = [(*_19),(*_19)];
_20.fld0.3.0 = [_20.fld1,_13,_20.fld1,_20.fld1,_13];
_20.fld3 = _24 * _24;
_20.fld0.3.0 = [_20.fld1,_20.fld1,_13,_20.fld1,_20.fld1];
_20.fld2 = 3671842232079329224_u64;
_3 = _8;
_1 = (*_19);
_5 = _12 & _1;
_2 = [(*_19),_1];
_7 = _6;
_14 = _3 << _1;
match _20.fld2 {
0 => bb7,
1 => bb4,
2 => bb10,
3 => bb11,
3671842232079329224 => bb13,
_ => bb12
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_7 = core::ptr::addr_of_mut!(_9);
_7 = core::ptr::addr_of_mut!((*_7));
(*_6) = (*_7);
_12 = _1;
_16 = _8 * _8;
_7 = _6;
_8 = _16 + _16;
_11 = 2964845769_u32;
_9 = (*_7) + _10;
match _11 {
2964845769 => bb3,
_ => bb1
}
}
bb13 = {
_7 = _6;
_28 = _24;
(*_19) = (-11776_i16) as isize;
_27.2 = [_5,_1];
_26.1 = [35735_u16,26502_u16,39634_u16,31872_u16,50630_u16,32434_u16];
_11 = 471358085_u32;
_21.0 = [_20.fld1,_20.fld1];
_21.0 = [_20.fld1,_20.fld1];
_21.0 = [_20.fld1,_13];
_1 = !_5;
(*_7) = _9 / (-0.000000000000000000000000000000000000006206818932181699_f32);
match _11 {
0 => bb6,
471358085 => bb15,
_ => bb14
}
}
bb14 = {
_7 = core::ptr::addr_of_mut!(_9);
_7 = core::ptr::addr_of_mut!((*_7));
(*_6) = (*_7);
_12 = _1;
_16 = _8 * _8;
_7 = _6;
_8 = _16 + _16;
_11 = 2964845769_u32;
_9 = (*_7) + _10;
match _11 {
2964845769 => bb3,
_ => bb1
}
}
bb15 = {
_29.0 = [_20.fld1,_13];
_27.0 = false as u16;
_20.fld1 = _13 >> _14;
_29.1.1 = _18;
(*_6) = -_9;
_2 = [_1,(*_19)];
_14 = -_16;
_20.fld0.1 = [_20.fld2,_20.fld2,_20.fld2,_20.fld2,_20.fld2,_20.fld2];
_33.fld2.2 = [(*_19),_12];
_33.fld4.0 = _20.fld0.3.0;
_23 = _9 == _9;
_32.fld3.fld0 = _20.fld0.2 as u64;
Goto(bb16)
}
bb16 = {
Call(_35 = dump_var(6_usize, 21_usize, Move(_21), 2_usize, Move(_2), 13_usize, Move(_13), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(6_usize, 4_usize, Move(_4), 16_usize, Move(_16), 3_usize, Move(_3), 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [i128; 8],mut _2: [isize; 2],mut _3: [i32; 5],mut _4: ([i32; 5], u8),mut _5: [u16; 6],mut _6: [u16; 6],mut _7: f32,mut _8: [isize; 2],mut _9: [isize; 2],mut _10: [u16; 6],mut _11: [i32; 5],mut _12: isize,mut _13: [char; 2],mut _14: *const u16,mut _15: u16) -> f64 {
mir! {
type RET = f64;
let _16: [u64; 6];
let _17: [i128; 7];
let _18: ([isize; 2], [u64; 6], u128, ([i32; 5], u8));
let _19: i64;
let _20: *const ([i32; 5], u8);
let _21: bool;
let _22: *mut i16;
let _23: bool;
let _24: (i32, *mut i16);
let _25: [u64; 3];
let _26: usize;
let _27: [i32; 2];
let _28: u64;
let _29: f32;
let _30: ();
let _31: ();
{
_3 = _4.0;
_15 = (*_14);
_6 = _10;
(*_14) = '\u{906c7}' as u16;
_13 = ['\u{ccd51}','\u{c71de}'];
_13 = ['\u{9b6d7}','\u{79c95}'];
_18.0 = _8;
_12 = 9223372036854775807_isize;
Goto(bb1)
}
bb1 = {
_18.3.0 = _4.0;
_8 = [_12,_12];
_18.3.1 = 2909879548_u32 as u8;
(*_14) = !_15;
_18.0 = [_12,_12];
_17 = [57032018489405724064146372737805623542_i128,(-52790166548162266797532113470270388935_i128),(-126147719452564741171753791206661544275_i128),14405045326783741883018378342066358601_i128,138295184393096174272601664961280704060_i128,156692470107243391415054364252595688956_i128,(-21929591314463016242358950803048474739_i128)];
_19 = 5745803131321171506_i64;
_16 = [10028603668007926808_u64,9609930932858815221_u64,16374217143972135851_u64,4112427579382125606_u64,13202969393822057782_u64,13652897775816031013_u64];
_15 = (*_14) + (*_14);
(*_14) = _15 - _15;
_6 = _10;
_11 = [(-518654022_i32),1145657038_i32,(-1606411318_i32),(-1243930337_i32),1739711456_i32];
_18.3.1 = _4.1;
_17 = [56441896575170397492022736102788524018_i128,(-93481774518248418626201251306562723626_i128),(-132183549900840876756805712807175660016_i128),(-123632789250676313132868337875227654867_i128),133636357747750107305583022283436332925_i128,(-25164635353034539613556321287189126733_i128),(-110013141977658530256436639118639510092_i128)];
_1 = [(-103471124595977714186766804688036335335_i128),37231032897847994900027816290512452334_i128,(-165174945555964177356831240095573727190_i128),162894904676308405376232327901626811490_i128,(-153140704996196879447612734097776999071_i128),78104662869175796246716087642307621803_i128,(-53143438195679389340786480407702866071_i128),(-26212278153179053209572483018308113928_i128)];
_7 = (-726860468_i32) as f32;
_18 = (_8, _16, 203777349631205650736581643251590527197_u128, _4);
_12 = 77_isize << _15;
_18.0 = _2;
_8 = [_12,_12];
_16 = [2917173075175104750_u64,9071829126874370864_u64,6822306686932764318_u64,16870150244616203942_u64,14518848381975356993_u64,8208304810806725782_u64];
_5 = _10;
(*_14) = _15;
_18.0 = _9;
_12 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_13 = ['\u{1b885}','\u{e5834}'];
match _18.3.1 {
0 => bb2,
1 => bb3,
209 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7 = 9264_i16 as f32;
_18.3.0 = _4.0;
_21 = true & true;
_18.3 = (_4.0, _4.1);
_19 = _18.2 as i64;
_6 = [_15,(*_14),_15,(*_14),_15,(*_14)];
_18.3.0 = [929134768_i32,762793480_i32,949210358_i32,308460684_i32,1031961532_i32];
_15 = (*_14);
_11 = _3;
_4.1 = _15 as u8;
_13 = ['\u{b06e9}','\u{e7237}'];
RET = _12 as f64;
_17 = [2028484867488426724072883104908694967_i128,53036087086793613912336580555837989566_i128,153199346598525162535782320328271118131_i128,6543074792596122741391876294012709743_i128,(-130165591341465688006525576964047899507_i128),130413381404582652192721143902631052601_i128,61207745818099163901124314692366830832_i128];
_18.0 = [_12,_12];
_18.2 = !248444847284099074423902346448470399449_u128;
Goto(bb6)
}
bb6 = {
_15 = (*_14);
_18.2 = 9145161037979871209275612987689815250_u128 >> (*_14);
_2 = [_12,_12];
_15 = !(*_14);
(*_14) = _21 as u16;
_18.3 = (_11, _4.1);
_18.1 = [16906314164269987843_u64,708550393153044922_u64,13792470334350874430_u64,14591759341145755981_u64,11148673428087608387_u64,8169371833084259936_u64];
Goto(bb7)
}
bb7 = {
_18.3 = _4;
_4.1 = !_18.3.1;
_7 = _19 as f32;
_11 = _4.0;
_8 = _18.0;
_8 = [_12,_12];
_19 = 2581422083180515864_i64 ^ (-6656595157653340223_i64);
_20 = core::ptr::addr_of!(_4);
_21 = !true;
_18.3.1 = (*_20).1;
_24.0 = (-1734847816_i32) + (-1425681734_i32);
(*_20).1 = _18.3.1 | _18.3.1;
RET = _18.2 as f64;
RET = _19 as f64;
_23 = _4.1 <= _4.1;
_11 = _4.0;
(*_20).1 = !_18.3.1;
_18.2 = 304334072751510210481217725531519580077_u128 ^ 80996309071912331515538574505128012433_u128;
(*_20) = (_11, _18.3.1);
_18.0 = [_12,_12];
(*_14) = !_15;
_18.2 = !223561271467442239682442244545665134904_u128;
_2 = [_12,_12];
_4.1 = _18.3.1 % 153_u8;
_18.1 = [249345599928538416_u64,1103292464589961147_u64,16162641613542083120_u64,2206931222575961008_u64,10022092933339544492_u64,4841168037923482532_u64];
_3 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_15 = !(*_14);
_18.3.1 = (*_20).1;
Goto(bb8)
}
bb8 = {
_27 = [_24.0,_24.0];
_23 = _21;
(*_14) = _15;
(*_20).0 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_8 = _9;
_27 = [_24.0,_24.0];
_6 = [(*_14),_15,_15,(*_14),(*_14),(*_14)];
_20 = core::ptr::addr_of!(_18.3);
(*_20).1 = _4.1 << _15;
Goto(bb9)
}
bb9 = {
_5 = [_15,(*_14),_15,(*_14),_15,(*_14)];
(*_20).1 = !_4.1;
_28 = 3987049581054240276_u64 - 6236473015426686634_u64;
_15 = (*_14);
(*_20).0 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_18.3.1 = 137101952379269684826388465202807124996_i128 as u8;
_1 = [159950822065146250047128195930460859457_i128,(-116440526632358477030731857188726618294_i128),(-85048238517690916786557313377483804488_i128),101851719527979113456394832433846983276_i128,(-125174335296742390283980255962577565806_i128),156650097751023660444286085118098439329_i128,(-71822960669151370683615998667671651229_i128),31379581522619065992474400760227641322_i128];
(*_14) = _15;
_16 = [_28,_28,_28,_28,_28,_28];
(*_14) = !_15;
_6 = [(*_14),(*_14),_15,(*_14),(*_14),(*_14)];
_2 = [_12,_12];
_18.3 = (_11, _4.1);
RET = (-20281_i16) as f64;
_2 = [_12,_12];
(*_14) = (-33894812090259683196131959461473236102_i128) as u16;
RET = _18.2 as f64;
_8 = [_12,_12];
(*_20).0 = _11;
_7 = _19 as f32;
(*_20).1 = _4.1 ^ _4.1;
(*_14) = _15;
_12 = 9223372036854775807_isize * 9223372036854775807_isize;
Goto(bb10)
}
bb10 = {
_25 = [_28,_28,_28];
_18.3.0 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_17 = [31857380602508982881730137877511282399_i128,64797795649435267217151847879293474407_i128,159111605439134967399820444933805203955_i128,27119931375473555188527372609041280408_i128,(-9266121038253985568081281918894792379_i128),113713556238807413607381804404769649047_i128,21286741967344026347709435590498646950_i128];
_4.1 = !(*_20).1;
_18 = (_8, _16, 269963837622837339164563873353887396844_u128, _4);
_5 = [_15,(*_14),(*_14),(*_14),_15,(*_14)];
_29 = _7;
_4.1 = 31893_i16 as u8;
_14 = core::ptr::addr_of!((*_14));
RET = (*_20).1 as f64;
(*_20).0 = [_24.0,_24.0,_24.0,_24.0,_24.0];
_4.1 = (*_20).1 ^ (*_20).1;
Goto(bb11)
}
bb11 = {
Call(_30 = dump_var(7_usize, 9_usize, Move(_9), 12_usize, Move(_12), 13_usize, Move(_13), 25_usize, Move(_25)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_30 = dump_var(7_usize, 21_usize, Move(_21), 1_usize, Move(_1), 27_usize, Move(_27), 11_usize, Move(_11)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_30 = dump_var(7_usize, 16_usize, Move(_16), 2_usize, Move(_2), 19_usize, Move(_19), 31_usize, _31), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: u8,mut _2: bool,mut _3: bool,mut _4: u8,mut _5: u16,mut _6: i128,mut _7: bool,mut _8: u8,mut _9: u16,mut _10: *const ([i32; 5], u8),mut _11: [isize; 2],mut _12: bool,mut _13: usize) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _14: *const u16;
let _15: Adt58;
let _16: Adt51;
let _17: [char; 2];
let _18: *const i32;
let _19: [i8; 3];
let _20: [char; 2];
let _21: char;
let _22: i128;
let _23: *const bool;
let _24: isize;
let _25: i8;
let _26: *const isize;
let _27: Adt58;
let _28: [u64; 3];
let _29: f64;
let _30: [u128; 5];
let _31: ();
let _32: ();
{
RET = [572846544_i32,1146520600_i32,476599048_i32,61862055_i32,(-2145537200_i32)];
_1 = _8 ^ _8;
_9 = _1 as u16;
(*_10).1 = _4;
RET = [(-1879236729_i32),(-905523777_i32),(-1088773697_i32),1536988318_i32,(-151002817_i32)];
_6 = -125432429357038988355432700394889824307_i128;
(*_10).1 = !_8;
_8 = 11833146846903925186714812382322651988_u128 as u8;
Goto(bb1)
}
bb1 = {
_11 = [(-9223372036854775808_isize),(-9_isize)];
_13 = 1_usize;
_15.fld4.0[_13] = 1697804685_i32;
_15.fld3.fld0 = 15416110074662450190_u64 - 11375307130674531220_u64;
(*_10).1 = _4;
RET[_13] = _15.fld4.0[_13];
_15.fld5 = core::ptr::addr_of_mut!(_15.fld3.fld4);
_15.fld0[_13] = _9 as i128;
_15.fld4.0 = [2095768391_i32,2017148643_i32,490989442_i32,(-838182505_i32),(-284042929_i32)];
(*_10).1 = _1 & _4;
_8 = !(*_10).1;
_15.fld3.fld2 = ['\u{a75a0}','\u{c5b16}'];
_16.fld0.0[_13] = _15.fld4.0[_13] as u128;
(*_10).0 = [_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13]];
_18 = core::ptr::addr_of!(_15.fld4.0[_13]);
_14 = core::ptr::addr_of!(_9);
match _15.fld4.0[_13] {
0 => bb2,
2017148643 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_9 = _5;
_16.fld2[_13] = _15.fld0[_13] + _15.fld0[_13];
_15.fld5 = core::ptr::addr_of_mut!(_15.fld3.fld4);
_12 = !_3;
_15.fld2.2[_13] = -_11[_13];
_8 = !_1;
_15.fld3.fld3 = _15.fld2.2[_13] as i8;
_15.fld3.fld2[_13] = '\u{910bb}';
(*_10).0[_13] = (*_18);
_18 = core::ptr::addr_of!((*_18));
_19[_13] = _8 as i8;
_15.fld2.1[_13] = (*_14) | _9;
_11[_13] = _16.fld0.0[_13] as isize;
_15.fld2.2 = [_11[_13],_11[_13]];
_20 = [_15.fld3.fld2[_13],_15.fld3.fld2[_13]];
_17 = [_20[_13],_20[_13]];
_11 = [_15.fld2.2[_13],_15.fld2.2[_13]];
RET[_13] = (*_18);
_16.fld0.0 = [235045154280463112115836439134672739910_u128,149958956327485566318418568427428025849_u128,71042256325044719901324174229019663543_u128,221695739677854651721563019619604627666_u128,175051979548370898856603429111947217805_u128];
(*_10) = (_15.fld4.0, _8);
_15.fld2.0 = _15.fld2.1[_13];
_7 = _2;
_15.fld4.0[_13] = (*_10).0[_13];
_15.fld4 = (*_10);
_16.fld1 = core::ptr::addr_of_mut!(_15.fld3.fld4);
(*_10).0[_13] = -(*_18);
_18 = core::ptr::addr_of!((*_18));
match _15.fld4.0[_13] {
0 => bb3,
1 => bb2,
2 => bb5,
3 => bb6,
2017148643 => bb8,
_ => bb7
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11 = [(-9223372036854775808_isize),(-9_isize)];
_13 = 1_usize;
_15.fld4.0[_13] = 1697804685_i32;
_15.fld3.fld0 = 15416110074662450190_u64 - 11375307130674531220_u64;
(*_10).1 = _4;
RET[_13] = _15.fld4.0[_13];
_15.fld5 = core::ptr::addr_of_mut!(_15.fld3.fld4);
_15.fld0[_13] = _9 as i128;
_15.fld4.0 = [2095768391_i32,2017148643_i32,490989442_i32,(-838182505_i32),(-284042929_i32)];
(*_10).1 = _1 & _4;
_8 = !(*_10).1;
_15.fld3.fld2 = ['\u{a75a0}','\u{c5b16}'];
_16.fld0.0[_13] = _15.fld4.0[_13] as u128;
(*_10).0 = [_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13]];
_18 = core::ptr::addr_of!(_15.fld4.0[_13]);
_14 = core::ptr::addr_of!(_9);
match _15.fld4.0[_13] {
0 => bb2,
2017148643 => bb4,
_ => bb3
}
}
bb8 = {
_15.fld4.0[_13] = (*_10).0[_13] * (*_10).0[_13];
_15.fld2.2 = _11;
_20 = [_15.fld3.fld2[_13],_15.fld3.fld2[_13]];
_21 = _20[_13];
_15.fld4.0 = [(*_10).0[_13],(*_10).0[_13],(*_10).0[_13],(*_10).0[_13],(*_10).0[_13]];
_15.fld2.1[_13] = _16.fld0.0[_13] as u16;
_27.fld4.1 = _15.fld4.1 * (*_10).1;
RET = [(*_18),_15.fld4.0[_13],(*_10).0[_13],(*_18),_15.fld4.0[_13]];
_27.fld2.1 = [_5,_15.fld2.0,_15.fld2.0,_5,_15.fld2.0,_15.fld2.0];
_24 = _27.fld4.1 as isize;
_27.fld2.2 = [_24,_24];
_28[_13] = _15.fld3.fld0 >> _24;
_15.fld4 = ((*_10).0, _8);
_17[_13] = _21;
match _16.fld0.0[_13] {
0 => bb9,
1 => bb10,
149958956327485566318418568427428025849 => bb12,
_ => bb11
}
}
bb9 = {
_11 = [(-9223372036854775808_isize),(-9_isize)];
_13 = 1_usize;
_15.fld4.0[_13] = 1697804685_i32;
_15.fld3.fld0 = 15416110074662450190_u64 - 11375307130674531220_u64;
(*_10).1 = _4;
RET[_13] = _15.fld4.0[_13];
_15.fld5 = core::ptr::addr_of_mut!(_15.fld3.fld4);
_15.fld0[_13] = _9 as i128;
_15.fld4.0 = [2095768391_i32,2017148643_i32,490989442_i32,(-838182505_i32),(-284042929_i32)];
(*_10).1 = _1 & _4;
_8 = !(*_10).1;
_15.fld3.fld2 = ['\u{a75a0}','\u{c5b16}'];
_16.fld0.0[_13] = _15.fld4.0[_13] as u128;
(*_10).0 = [_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13],_15.fld4.0[_13]];
_18 = core::ptr::addr_of!(_15.fld4.0[_13]);
_14 = core::ptr::addr_of!(_9);
match _15.fld4.0[_13] {
0 => bb2,
2017148643 => bb4,
_ => bb3
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_27.fld4 = (*_10);
(*_18) = (-20352_i16) as i32;
_27.fld1 = _18;
_15.fld2.1[_13] = _7 as u16;
(*_10).0 = [_27.fld4.0[_13],(*_18),(*_18),_27.fld4.0[_13],_27.fld4.0[_13]];
_27.fld3.fld0 = _28[_13] ^ _28[_13];
_19 = [_15.fld3.fld3,_15.fld3.fld3,_15.fld3.fld3];
_16.fld2[_13] = _27.fld3.fld0 as i128;
_26 = core::ptr::addr_of!(_24);
_18 = core::ptr::addr_of!((*_10).0[_13]);
_11[_13] = (*_26);
_15.fld3.fld0 = _15.fld2.0 as u64;
_27.fld3.fld4 = _15.fld3.fld3 as f32;
_20 = [_21,_17[_13]];
_27.fld0 = [_16.fld2[_13],_16.fld2[_13],_16.fld2[_13],_16.fld2[_13],_15.fld0[_13],_16.fld2[_13],_6];
_26 = core::ptr::addr_of!(_24);
_27.fld3.fld4 = _13 as f32;
Goto(bb13)
}
bb13 = {
(*_10).0 = [_27.fld4.0[_13],_27.fld4.0[_13],_27.fld4.0[_13],_27.fld4.0[_13],_27.fld4.0[_13]];
Call(RET[_13] = fn9(_27.fld2.2[_13], (*_10), _11[_13]), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
(*_10).0 = [814204647_i32,(-1520520682_i32),785233305_i32,(-1121456757_i32),(-280729481_i32)];
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(8_usize, 1_usize, Move(_1), 12_usize, Move(_12), 9_usize, Move(_9), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(8_usize, 19_usize, Move(_19), 4_usize, Move(_4), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: ([i32; 5], u8),mut _3: isize) -> i32 {
mir! {
type RET = i32;
let _4: Adt59;
let _5: bool;
let _6: f32;
let _7: [char; 2];
let _8: i128;
let _9: Adt49;
let _10: *const u16;
let _11: [i32; 4];
let _12: ([i32; 2],);
let _13: Adt56;
let _14: [u16; 6];
let _15: ();
let _16: ();
{
RET = 1051045794_i32;
RET = (-700133639_i32);
_2.0 = [1792950996_i32,539452299_i32,189094658_i32,(-411148181_i32),10674757_i32];
_1 = -_3;
_2.1 = 137_u8 & 18_u8;
RET = 1224764698561160652_usize as i32;
Call(_3 = core::intrinsics::bswap(_1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4.fld3.fld1.1 = [15221912290329238401_u64,4187528576519574278_u64,17763803572268812303_u64,7891229041264631861_u64,11934703352990606839_u64,13863398838297742732_u64];
_5 = !false;
_4.fld1.0 = !1797703421654528641_i64;
_2.0 = [1708627289_i32,368371246_i32,(-917177785_i32),1656751053_i32,(-764613369_i32)];
_4.fld3.fld1.3.1 = 16015416338512427779_u64 as u8;
_4.fld6 = _4.fld1.0;
_4.fld3.fld1.0 = [_3,_1];
_4.fld4 = _4.fld3.fld1.3.1 as f64;
_4.fld1 = (_4.fld6, '\u{10147}');
RET = -888077097_i32;
_4.fld0.3.1 = _4.fld1.1 as u8;
_4.fld3.fld5 = [4974041993438953209_u64,14308543891855701614_u64,4363349446400099704_u64];
_4.fld3.fld4.1 = _4.fld1.1;
_4.fld3.fld0 = _5;
_4.fld2 = core::ptr::addr_of!(_4.fld0.3);
_7 = [_4.fld3.fld4.1,_4.fld3.fld4.1];
_4.fld3.fld4.0 = -_4.fld1.0;
Goto(bb2)
}
bb2 = {
Call(_4.fld3.fld3 = core::intrinsics::transmute(_4.fld1.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4.fld2 = core::ptr::addr_of!(_4.fld0.3);
_4.fld3.fld4 = (_4.fld1.0, _4.fld1.1);
_4.fld0 = (_4.fld3.fld1.0, _4.fld3.fld1.1, 37053198050638431404376018632025840402_u128, _2);
_4.fld3.fld4 = (_4.fld1.0, _4.fld1.1);
_4.fld3.fld6 = [_4.fld3.fld4.1,_4.fld1.1];
_4.fld0.3 = (_2.0, _2.1);
_7 = _4.fld3.fld6;
_2 = _4.fld0.3;
_4.fld0.2 = _4.fld4 as u128;
_4.fld0.1 = [_4.fld3.fld3,_4.fld3.fld3,_4.fld3.fld3,_4.fld3.fld3,_4.fld3.fld3,_4.fld3.fld3];
_4.fld3.fld1.2 = _3 as u128;
_4.fld2 = core::ptr::addr_of!(_4.fld3.fld1.3);
_4.fld3.fld1 = (_4.fld0.0, _4.fld0.1, _4.fld0.2, _2);
_13.fld0.0 = [821736144_i32,1519726473_i32,(-925944395_i32),(-881682422_i32),(-1993125142_i32)];
_4.fld3.fld1 = _4.fld0;
RET = 1204146880_i32 >> _1;
Goto(bb4)
}
bb4 = {
Call(_15 = dump_var(9_usize, 7_usize, Move(_7), 3_usize, Move(_3), 16_usize, _16, 16_usize, _16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [u64; 6],mut _2: *const u16,mut _3: u8,mut _4: u8,mut _5: *const ([i32; 5], u8),mut _6: u8,mut _7: u8,mut _8: [i128; 7],mut _9: [i32; 5],mut _10: [u64; 6],mut _11: u16,mut _12: i64,mut _13: u8,mut _14: *const ([i32; 5], u8)) -> Adt64 {
mir! {
type RET = Adt64;
let _15: Adt49;
let _16: i32;
let _17: usize;
let _18: Adt56;
let _19: f64;
let _20: f32;
let _21: [i32; 5];
let _22: f64;
let _23: char;
let _24: isize;
let _25: f32;
let _26: (i64, char);
let _27: Adt50;
let _28: isize;
let _29: f64;
let _30: Adt65;
let _31: [u64; 3];
let _32: [i32; 5];
let _33: u16;
let _34: Adt59;
let _35: Adt56;
let _36: *const ([u128; 5],);
let _37: Adt53;
let _38: ();
let _39: ();
{
RET.fld6.fld0.1 = 27_i8 as u8;
RET.fld6.fld1.fld0 = _8;
RET.fld2 = 1361585034_u32 as f32;
_6 = !_3;
_15.fld2 = [59_i8,120_i8,(-53_i8)];
_15.fld2 = [46_i8,25_i8,82_i8];
(*_2) = _11;
RET.fld1 = core::ptr::addr_of_mut!(_12);
RET.fld6.fld3 = 8292368409576201573_usize % 8193303077640728092_usize;
(*_2) = 667053498_u32 as u16;
(*_5).1 = !_13;
_18.fld3 = (*_14).1 as usize;
_18.fld1 = Adt50 { fld0: _8 };
(*_2) = _11 ^ _11;
RET.fld5 = [(*_2),(*_2),(*_2),_11,(*_2),(*_2)];
RET.fld6.fld0 = (*_5);
RET.fld2 = (*_2) as f32;
RET.fld4 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET.fld6.fld2 = core::ptr::addr_of!((*_2));
_18.fld1.fld0 = _8;
(*_5).0 = [(-1930726453_i32),197573725_i32,(-262737009_i32),(-973849331_i32),(-242562750_i32)];
_15.fld0 = !_12;
_18.fld2 = core::ptr::addr_of!(_11);
RET.fld6 = Adt56 { fld0: (*_14),fld1: _18.fld1,fld2: _2,fld3: _18.fld3 };
Goto(bb1)
}
bb1 = {
RET.fld6 = Adt56 { fld0: (*_14),fld1: _18.fld1,fld2: _2,fld3: _18.fld3 };
_7 = _3;
RET.fld6.fld1.fld0 = _8;
RET.fld0 = !true;
RET.fld6.fld0.1 = _13 * _4;
RET.fld6.fld2 = core::ptr::addr_of!((*_2));
_16 = false as i32;
_18.fld0.1 = !_3;
_15.fld0 = -_12;
_15.fld1.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
RET.fld5 = [(*_2),(*_2),(*_2),(*_2),(*_2),(*_2)];
_14 = _5;
_12 = !_15.fld0;
RET.fld6.fld3 = !_18.fld3;
RET.fld1 = core::ptr::addr_of_mut!(_15.fld0);
(*_5) = (_9, _3);
_14 = core::ptr::addr_of!((*_5));
Goto(bb2)
}
bb2 = {
_18.fld3 = 6_usize;
(*_14).1 = 9223372036854775807_isize as u8;
_18.fld2 = _2;
_18.fld1 = Adt50 { fld0: _8 };
RET.fld6.fld1.fld0 = [(-165824311490380093469013876195178848561_i128),(-12985228064432816342348803513027356960_i128),(-54436660627686347053945357037919392036_i128),(-148150097430747754934588706180108431404_i128),58096855201921199956575288146714958100_i128,3877616781177462964500047104506220424_i128,(-95980373749432257022617585337341406120_i128)];
_15.fld1.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
match _18.fld3 {
0 => bb1,
1 => bb3,
2 => bb4,
6 => bb6,
_ => bb5
}
}
bb3 = {
RET.fld6 = Adt56 { fld0: (*_14),fld1: _18.fld1,fld2: _2,fld3: _18.fld3 };
_7 = _3;
RET.fld6.fld1.fld0 = _8;
RET.fld0 = !true;
RET.fld6.fld0.1 = _13 * _4;
RET.fld6.fld2 = core::ptr::addr_of!((*_2));
_16 = false as i32;
_18.fld0.1 = !_3;
_15.fld0 = -_12;
_15.fld1.1 = [9223372036854775807_isize,(-9223372036854775808_isize)];
RET.fld5 = [(*_2),(*_2),(*_2),(*_2),(*_2),(*_2)];
_14 = _5;
_12 = !_15.fld0;
RET.fld6.fld3 = !_18.fld3;
RET.fld1 = core::ptr::addr_of_mut!(_15.fld0);
(*_5) = (_9, _3);
_14 = core::ptr::addr_of!((*_5));
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_12 = _7 as i64;
_4 = (-26003_i16) as u8;
RET.fld6.fld1.fld0 = [11461255673957863772188156822923245861_i128,58218379455743590124168468857711763724_i128,118052377754799846926234067009225884694_i128,22019996515020503268298904173677680124_i128,(-41147740179621145342773790816427162970_i128),41296655959168283873670919805943424889_i128,164327036437046324139359422314845725058_i128];
_1 = _10;
_8 = [66521055648697536148880140821935110889_i128,(-24137223431637647307355073085258644709_i128),31293014209968448855830130282081162343_i128,54007638899683298573993651973177723499_i128,(-127233703075408229416903740163443373107_i128),20597382637576511981398211604859250154_i128,(-62241231469633597259359019805985498909_i128)];
_17 = !_18.fld3;
(*_5).0 = [_16,_16,_16,_16,_16];
RET.fld0 = true;
RET.fld5 = [(*_2),(*_2),(*_2),(*_2),(*_2),(*_2)];
_22 = 38_i8 as f64;
_3 = _13 - _6;
_3 = _18.fld0.1 * _6;
RET.fld6 = Adt56 { fld0: (*_5),fld1: _18.fld1,fld2: _2,fld3: _17 };
_14 = core::ptr::addr_of!((*_14));
_19 = -_22;
RET.fld6.fld0.0 = [_16,_16,_16,_16,_16];
_15.fld1.0 = [_16,_16,_16,_16,_16];
Goto(bb7)
}
bb7 = {
(*_14).0 = [_16,_16,_16,_16,_16];
RET.fld2 = 2349696264746887303_u64 as f32;
RET.fld6.fld1 = Adt50 { fld0: _18.fld1.fld0 };
(*_14).0 = [_16,_16,_16,_16,_16];
_26.0 = _12 >> _18.fld0.1;
RET.fld1 = core::ptr::addr_of_mut!(_15.fld0);
_24 = 8004_i16 as isize;
(*_5).1 = 12514_i16 as u8;
Goto(bb8)
}
bb8 = {
_26.1 = '\u{330d1}';
(*_14).0 = [_16,_16,_16,_16,_16];
(*_14).0 = [_16,_16,_16,_16,_16];
RET.fld1 = core::ptr::addr_of_mut!(_15.fld0);
(*_5).1 = !_3;
(*_5).0 = [_16,_16,_16,_16,_16];
(*_5).1 = _7;
_2 = core::ptr::addr_of!((*_2));
_18.fld0 = ((*_5).0, _3);
(*_14).1 = _7;
_22 = _19;
_12 = !_26.0;
(*_5).1 = _13 ^ _3;
_13 = true as u8;
_12 = !_26.0;
(*_5) = _18.fld0;
RET.fld6.fld2 = core::ptr::addr_of!(_11);
_30.fld1.fld3.fld2 = [_26.1,_26.1];
_2 = core::ptr::addr_of!(_11);
RET.fld6 = Adt56 { fld0: (*_5),fld1: _18.fld1,fld2: _2,fld3: _17 };
_30.fld1.fld3.fld0 = 8097088844862493158_u64 | 16278314095125722517_u64;
_30.fld1.fld5 = core::ptr::addr_of_mut!(_25);
(*_5).0 = [_16,_16,_16,_16,_16];
_3 = (*_5).1;
_30.fld0 = [_16,_16,_16,_16];
_30.fld1.fld0 = _8;
Call(RET.fld6.fld0.0 = fn11(_30.fld1.fld5, (*_5).1, _15.fld0, _16, _18.fld0, (*_14), _30.fld1.fld5), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_23 = _26.1;
_32 = [_16,_16,_16,_16,_16];
_30.fld1.fld2.1 = [(*_2),(*_2),_11,_11,_11,(*_2)];
_34.fld3.fld1.0 = [_24,_24];
RET.fld5 = _30.fld1.fld2.1;
_35.fld0.0 = [_16,_16,_16,_16,_16];
_33 = true as u16;
RET.fld6.fld0.0 = (*_5).0;
_5 = core::ptr::addr_of!(_30.fld1.fld4);
_34.fld3.fld4.0 = _24 as i64;
_34.fld3.fld1.2 = 162400919538725794691753232083175413525_u128;
RET.fld5 = [_11,(*_2),(*_2),_11,(*_2),(*_2)];
_34.fld7 = core::ptr::addr_of_mut!(_20);
_34.fld0.0 = [_24,_24];
_34.fld7 = core::ptr::addr_of_mut!(_20);
_34.fld0.0 = _15.fld1.1;
_35.fld3 = false as usize;
RET.fld3 = core::ptr::addr_of!(_34.fld3.fld0);
RET.fld6.fld1.fld0 = [89589584535029431687428833524523913822_i128,111129913116903491050639291722701983806_i128,(-134051893512395191976676427363316749635_i128),46993677467029358409866117829098993394_i128,104143608525954818994367812699570216613_i128,(-74971319790929938148822593670003025373_i128),29532577805846539505598889212532428124_i128];
_3 = _18.fld0.1;
(*_5).1 = _3;
_16 = -296574772_i32;
_7 = !_3;
RET.fld6.fld0.1 = (*_14).1;
_21 = _9;
Goto(bb10)
}
bb10 = {
Call(_38 = dump_var(10_usize, 26_usize, Move(_26), 33_usize, Move(_33), 6_usize, Move(_6), 32_usize, Move(_32)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(10_usize, 7_usize, Move(_7), 17_usize, Move(_17), 21_usize, Move(_21), 24_usize, Move(_24)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_38 = dump_var(10_usize, 4_usize, Move(_4), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: *mut f32,mut _2: u8,mut _3: i64,mut _4: i32,mut _5: ([i32; 5], u8),mut _6: ([i32; 5], u8),mut _7: *mut f32) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _8: f32;
let _9: Adt56;
let _10: u64;
let _11: Adt57;
let _12: i64;
let _13: ([i32; 5], [isize; 2]);
let _14: u8;
let _15: Adt59;
let _16: isize;
let _17: char;
let _18: Adt62;
let _19: f32;
let _20: bool;
let _21: u32;
let _22: f64;
let _23: bool;
let _24: Adt65;
let _25: u8;
let _26: ([i32; 5], u8);
let _27: char;
let _28: f64;
let _29: Adt52;
let _30: isize;
let _31: [i32; 8];
let _32: char;
let _33: ();
let _34: ();
{
RET = [_4,_4,_4,_4,_4];
_2 = _5.1 % 245_u8;
_7 = core::ptr::addr_of_mut!((*_1));
(*_7) = _5.1 as f32;
RET = _5.0;
_6 = _5;
(*_1) = _5.1 as f32;
_5.0 = [_4,_4,_4,_4,_4];
_3 = (*_7) as i64;
RET = _6.0;
Call(_5 = fn12(_7, (*_1), _6.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9.fld0 = _5;
RET = _9.fld0.0;
_11.fld1 = _4 << _3;
Goto(bb2)
}
bb2 = {
_8 = _3 as f32;
_8 = (*_1);
_11.fld0.0 = [(-9223372036854775808_isize),9223372036854775807_isize];
_8 = -(*_1);
_9.fld3 = 8110354215133482517_usize;
match _9.fld3 {
0 => bb3,
8110354215133482517 => bb5,
_ => bb4
}
}
bb3 = {
_9.fld0 = _5;
RET = _9.fld0.0;
_11.fld1 = _4 << _3;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
(*_1) = _8;
_11.fld2 = !12470370920651791430_u64;
_11.fld3 = _3 as f64;
(*_7) = _8;
_2 = (-21_isize) as u8;
_11.fld0.3.1 = _6.1;
_10 = _11.fld2 * _11.fld2;
_6 = _5;
(*_1) = -_8;
(*_7) = _8 / (-0.0000000000000000000000000000000000000027623740575296546_f32);
_5 = (_6.0, _9.fld0.1);
_15.fld1 = (_3, '\u{4d358}');
_15.fld3.fld1.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16 = 50_isize + (-86_isize);
_15.fld0.3.0 = _5.0;
match _9.fld3 {
0 => bb6,
1 => bb7,
8110354215133482517 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
_9.fld0 = _5;
RET = _9.fld0.0;
_11.fld1 = _4 << _3;
Goto(bb2)
}
bb8 = {
_8 = _3 as f32;
_8 = (*_1);
_11.fld0.0 = [(-9223372036854775808_isize),9223372036854775807_isize];
_8 = -(*_1);
_9.fld3 = 8110354215133482517_usize;
match _9.fld3 {
0 => bb3,
8110354215133482517 => bb5,
_ => bb4
}
}
bb9 = {
_13.1 = [_16,_16];
_15.fld3.fld3 = _11.fld1 as u64;
_15.fld3.fld4 = (_15.fld1.0, _15.fld1.1);
_15.fld3.fld1.2 = 150368033981968599440586426851325659760_u128;
_18.fld0 = _15.fld1.0;
Goto(bb10)
}
bb10 = {
_18.fld1 = (_15.fld1.0, _15.fld3.fld4.1);
_13 = (_6.0, _15.fld3.fld1.0);
_18.fld3 = [_15.fld3.fld3,_15.fld3.fld3,_15.fld3.fld3];
(*_1) = _8;
_15.fld7 = _7;
_18.fld2.fld0.0 = [_11.fld1,_11.fld1];
_13 = (_15.fld0.3.0, _15.fld3.fld1.0);
Goto(bb11)
}
bb11 = {
_15.fld3.fld1.1 = [_10,_15.fld3.fld3,_15.fld3.fld3,_15.fld3.fld3,_15.fld3.fld3,_15.fld3.fld3];
_15.fld3.fld1.3.1 = !_5.1;
_11.fld0.2 = !_15.fld3.fld1.2;
_15.fld0.0 = _11.fld0.0;
_18.fld2.fld0.3 = -_15.fld1.0;
_15.fld7 = core::ptr::addr_of_mut!((*_1));
_2 = !_11.fld0.3.1;
_15.fld0.3.0 = [_11.fld1,_11.fld1,_11.fld1,_11.fld1,_11.fld1];
_11.fld0.3.0 = _15.fld0.3.0;
_15.fld3.fld1.3 = _6;
_11.fld2 = _15.fld3.fld3 - _15.fld3.fld3;
_17 = _15.fld3.fld4.1;
_15.fld0.3 = (_11.fld0.3.0, _5.1);
_9.fld0 = (_15.fld0.3.0, _15.fld0.3.1);
_18.fld2.fld0.0 = [_11.fld1,_11.fld1];
_15.fld3.fld5 = [_11.fld2,_11.fld2,_11.fld2];
_19 = (-32_i8) as f32;
_15.fld1.1 = _17;
_15.fld1.1 = _15.fld3.fld4.1;
_15.fld2 = core::ptr::addr_of!(_11.fld0.3);
match _9.fld3 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
8110354215133482517 => bb12,
_ => bb7
}
}
bb12 = {
_15.fld2 = core::ptr::addr_of!(_9.fld0);
_29.fld2.2 = _11.fld3 - _11.fld3;
_26 = (_15.fld0.3.0, _15.fld3.fld1.3.1);
_24.fld1.fld2.1 = [37036_u16,32302_u16,15693_u16,48373_u16,61650_u16,19817_u16];
Call(_14 = fn13(_13.0, _19, _6.0, _11.fld0.2, _1, _15.fld3.fld1.0, _15.fld3.fld1.3.0, _2, _15.fld3.fld1.3.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_26 = _11.fld0.3;
_6.1 = !_9.fld0.1;
_11 = Adt57 { fld0: _15.fld3.fld1,fld1: _4,fld2: _10,fld3: _29.fld2.2 };
_26.0 = [_4,_4,_11.fld1,_11.fld1,_11.fld1];
_18.fld2.fld0.2 = _11.fld3;
Goto(bb14)
}
bb14 = {
_29.fld2.1.0 = 16447_i16 as i64;
_24.fld1.fld0 = [(-124632216377502452457617773197857176150_i128),(-42607206649841490180133362239089286461_i128),1092441542616485558537533336313920837_i128,20160055081949110064593291703926720791_i128,(-47246141409885359216598097795675905397_i128),(-167100401193576144322645884419534225090_i128),(-12052284067291809449932668338736087184_i128)];
_24.fld1.fld3.fld2 = [_17,_15.fld1.1];
_24.fld1.fld4.1 = !_11.fld0.3.1;
_18.fld2.fld1.0 = !_4;
_9.fld0 = (_15.fld0.3.0, _15.fld0.3.1);
_12 = _3 | _18.fld0;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(11_usize, 6_usize, Move(_6), 12_usize, Move(_12), 2_usize, Move(_2), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(11_usize, 3_usize, Move(_3), 16_usize, Move(_16), 34_usize, _34, 34_usize, _34), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: *mut f32,mut _2: f32,mut _3: u8) -> ([i32; 5], u8) {
mir! {
type RET = ([i32; 5], u8);
let _4: [u128; 5];
let _5: isize;
let _6: f32;
let _7: bool;
let _8: [i128; 7];
let _9: ();
let _10: ();
{
RET.0 = [(-236833928_i32),(-93632447_i32),307171532_i32,1168629453_i32,(-803326539_i32)];
RET.0 = [(-1572314022_i32),1882261362_i32,(-1451459311_i32),(-2032799738_i32),1885608560_i32];
RET.0 = [(-2081203268_i32),(-5235498_i32),1908758171_i32,(-531997470_i32),(-874460318_i32)];
RET.1 = _3 ^ _3;
_2 = (*_1) - (*_1);
(*_1) = _2 * _2;
_5 = 19_isize;
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(12_usize, 5_usize, Move(_5), 10_usize, _10, 10_usize, _10, 10_usize, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [i32; 5],mut _2: f32,mut _3: [i32; 5],mut _4: u128,mut _5: *mut f32,mut _6: [isize; 2],mut _7: [i32; 5],mut _8: u8,mut _9: [i32; 5]) -> u8 {
mir! {
type RET = u8;
let _10: *const ([u128; 5],);
let _11: ();
let _12: ();
{
RET = (-5911652227612607076_i64) as u8;
(*_5) = _2;
RET = (-1623062612_i32) as u8;
RET = _8 >> _8;
_5 = core::ptr::addr_of_mut!((*_5));
(*_5) = _2;
(*_5) = _2 / 0.0000000000000000000000000000000000000038882459073929645_f32;
(*_5) = -_2;
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(13_usize, 7_usize, Move(_7), 4_usize, Move(_4), 8_usize, Move(_8), 12_usize, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: *const u16,mut _2: Adt56,mut _3: *const bool,mut _4: *const ([i32; 5], u8),mut _5: [i128; 8],mut _6: [u16; 6],mut _7: [u64; 6],mut _8: u16,mut _9: i64) -> u8 {
mir! {
type RET = u8;
let _10: bool;
let _11: u16;
let _12: u128;
let _13: ([i32; 2],);
let _14: f64;
let _15: i32;
let _16: bool;
let _17: u8;
let _18: u64;
let _19: [u64; 3];
let _20: [i32; 4];
let _21: isize;
let _22: bool;
let _23: [u16; 6];
let _24: *const i32;
let _25: (i64, char);
let _26: *mut i16;
let _27: isize;
let _28: ();
let _29: ();
{
_1 = core::ptr::addr_of!(_8);
_2.fld2 = core::ptr::addr_of!((*_1));
_4 = core::ptr::addr_of!(_2.fld0);
(*_4).1 = !192_u8;
(*_4).0 = [(-1718184994_i32),1508633541_i32,2036995705_i32,(-503366317_i32),(-1830829599_i32)];
_2.fld0.1 = (-9223372036854775808_isize) as u8;
_2.fld3 = !4007413948480695085_usize;
_8 = !15054_u16;
(*_4).0 = [395871041_i32,1347014556_i32,(-1853217966_i32),493527234_i32,1559502639_i32];
RET = _2.fld0.1 * (*_4).1;
_2.fld2 = core::ptr::addr_of!((*_1));
_9 = (-717871405770041377_i64);
_2.fld1.fld0 = [(-117334459390700374283026209597308953609_i128),(-62393880859463531937924215729536462742_i128),(-20162410597405010996868015264656927082_i128),(-169330204039016824860781569578719184991_i128),40085816847381919765827408154310620954_i128,(-38017812812288855713089942048990114794_i128),116102093381493623964964346160488907646_i128];
_4 = core::ptr::addr_of!((*_4));
Call(_2.fld1.fld0 = fn15(_7, (*_4).0, (*_4).1, (*_4).1, (*_4).0, _1, _3, _4, _5, (*_4).1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_4).1 = 160_u8 >> _8;
_10 = !true;
_2.fld0.1 = 53_u8;
_9 = 8975969827696187682_i64 << (*_4).1;
_11 = (*_1);
Goto(bb2)
}
bb2 = {
_2.fld0.1 = (-10410_i16) as u8;
_8 = !_11;
_6 = [_8,(*_1),_11,_8,(*_1),_8];
RET = (*_4).1 * (*_4).1;
_13.0 = [(-1395283523_i32),1638043816_i32];
_4 = core::ptr::addr_of!((*_4));
_9 = -2967792708591473668_i64;
(*_1) = _11;
_3 = core::ptr::addr_of!(_10);
_12 = 148189500762175369584451465907709461756_u128;
(*_3) = !false;
_2.fld0.1 = (*_1) as u8;
_2.fld2 = core::ptr::addr_of!((*_1));
_2.fld0.0 = [(-90049284_i32),(-449819276_i32),(-1218847375_i32),(-1563417015_i32),281745805_i32];
_7 = [1883675707980975695_u64,3614075296661373690_u64,15918983978575396342_u64,11640688128328246309_u64,9942263847780860419_u64,18179570488177588048_u64];
_8 = _11;
(*_4).1 = !151_u8;
_3 = core::ptr::addr_of!(_16);
_14 = _2.fld3 as f64;
Goto(bb3)
}
bb3 = {
_15 = (-992119055_i32);
_17 = (*_4).1;
_4 = core::ptr::addr_of!((*_4));
_17 = _2.fld0.1 / 215_u8;
_2.fld0.1 = _17;
_16 = _8 <= (*_1);
(*_4).1 = !_17;
(*_4).0 = [_15,_15,_15,_15,_15];
(*_4).1 = _17;
_4 = core::ptr::addr_of!(_2.fld0);
_11 = !(*_1);
Call(RET = fn16((*_1), (*_1), Move(_2), _16, _3, _6, _3, _14, _9, _12, _9, _15, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18 = 17715559432521048819_u64 + 11360400461463839385_u64;
_1 = core::ptr::addr_of!((*_1));
_13.0 = [_15,_15];
Goto(bb5)
}
bb5 = {
_19 = [_18,_18,_18];
RET = 16459_i16 as u8;
RET = _14 as u8;
(*_1) = _11;
_3 = core::ptr::addr_of!(_16);
_13.0 = [_15,_15];
_14 = 113_i8 as f64;
(*_1) = !_11;
(*_1) = _11;
match _15 {
0 => bb3,
1 => bb6,
340282366920938463463374607430776092401 => bb8,
_ => bb7
}
}
bb6 = {
_18 = 17715559432521048819_u64 + 11360400461463839385_u64;
_1 = core::ptr::addr_of!((*_1));
_13.0 = [_15,_15];
Goto(bb5)
}
bb7 = {
_15 = (-992119055_i32);
_17 = (*_4).1;
_4 = core::ptr::addr_of!((*_4));
_17 = _2.fld0.1 / 215_u8;
_2.fld0.1 = _17;
_16 = _8 <= (*_1);
(*_4).1 = !_17;
(*_4).0 = [_15,_15,_15,_15,_15];
(*_4).1 = _17;
_4 = core::ptr::addr_of!(_2.fld0);
_11 = !(*_1);
Call(RET = fn16((*_1), (*_1), Move(_2), _16, _3, _6, _3, _14, _9, _12, _9, _15, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_16 = !_10;
_5 = [132786231167408160491124011122973402138_i128,119596648451474649773199557397621726872_i128,36081546783642893158008716018875899240_i128,5216200255531581253322020993906905028_i128,20002751857937326354848668251997101728_i128,163924940792826253246122193367670626054_i128,110479887500352973556484659465125345439_i128,116463557557522116001925908322903438371_i128];
(*_1) = 1878697227_u32 as u16;
Goto(bb9)
}
bb9 = {
_21 = -127_isize;
RET = _17;
_19 = [_18,_18,_18];
match _12 {
0 => bb10,
148189500762175369584451465907709461756 => bb12,
_ => bb11
}
}
bb10 = {
_16 = !_10;
_5 = [132786231167408160491124011122973402138_i128,119596648451474649773199557397621726872_i128,36081546783642893158008716018875899240_i128,5216200255531581253322020993906905028_i128,20002751857937326354848668251997101728_i128,163924940792826253246122193367670626054_i128,110479887500352973556484659465125345439_i128,116463557557522116001925908322903438371_i128];
(*_1) = 1878697227_u32 as u16;
Goto(bb9)
}
bb11 = {
_15 = (-992119055_i32);
_17 = (*_4).1;
_4 = core::ptr::addr_of!((*_4));
_17 = _2.fld0.1 / 215_u8;
_2.fld0.1 = _17;
_16 = _8 <= (*_1);
(*_4).1 = !_17;
(*_4).0 = [_15,_15,_15,_15,_15];
(*_4).1 = _17;
_4 = core::ptr::addr_of!(_2.fld0);
_11 = !(*_1);
Call(RET = fn16((*_1), (*_1), Move(_2), _16, _3, _6, _3, _14, _9, _12, _9, _15, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
_19 = [_18,_18,_18];
_13.0 = [_15,_15];
(*_3) = _10;
(*_1) = _11;
(*_1) = _11;
(*_3) = _10;
_20 = [_15,_15,_15,_15];
_16 = !_10;
Goto(bb13)
}
bb13 = {
_24 = core::ptr::addr_of!(_15);
_19 = [_18,_18,_18];
_17 = !252_u8;
_22 = _18 > _18;
_10 = _22;
_13.0 = [(*_24),(*_24)];
_16 = _10;
_14 = _11 as f64;
_11 = !_8;
_18 = 2144664522453316680_u64;
_15 = !368401282_i32;
match _12 {
0 => bb6,
1 => bb2,
2 => bb9,
3 => bb8,
4 => bb14,
5 => bb15,
148189500762175369584451465907709461756 => bb17,
_ => bb16
}
}
bb14 = {
_15 = (-992119055_i32);
_17 = (*_4).1;
_4 = core::ptr::addr_of!((*_4));
_17 = _2.fld0.1 / 215_u8;
_2.fld0.1 = _17;
_16 = _8 <= (*_1);
(*_4).1 = !_17;
(*_4).0 = [_15,_15,_15,_15,_15];
(*_4).1 = _17;
_4 = core::ptr::addr_of!(_2.fld0);
_11 = !(*_1);
Call(RET = fn16((*_1), (*_1), Move(_2), _16, _3, _6, _3, _14, _9, _12, _9, _15, _1), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
(*_4).1 = 160_u8 >> _8;
_10 = !true;
_2.fld0.1 = 53_u8;
_9 = 8975969827696187682_i64 << (*_4).1;
_11 = (*_1);
Goto(bb2)
}
bb16 = {
_16 = !_10;
_5 = [132786231167408160491124011122973402138_i128,119596648451474649773199557397621726872_i128,36081546783642893158008716018875899240_i128,5216200255531581253322020993906905028_i128,20002751857937326354848668251997101728_i128,163924940792826253246122193367670626054_i128,110479887500352973556484659465125345439_i128,116463557557522116001925908322903438371_i128];
(*_1) = 1878697227_u32 as u16;
Goto(bb9)
}
bb17 = {
_9 = (-6543918749619594948_i64);
(*_24) = (-1240733105_i32) * (-493616638_i32);
Goto(bb18)
}
bb18 = {
Call(_28 = dump_var(14_usize, 5_usize, Move(_5), 8_usize, Move(_8), 9_usize, Move(_9), 17_usize, Move(_17)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_28 = dump_var(14_usize, 12_usize, Move(_12), 15_usize, Move(_15), 20_usize, Move(_20), 6_usize, Move(_6)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [u64; 6],mut _2: [i32; 5],mut _3: u8,mut _4: u8,mut _5: [i32; 5],mut _6: *const u16,mut _7: *const bool,mut _8: *const ([i32; 5], u8),mut _9: [i128; 8],mut _10: u8) -> [i128; 7] {
mir! {
type RET = [i128; 7];
let _11: bool;
let _12: (i64, char);
let _13: isize;
let _14: Adt55;
let _15: bool;
let _16: u32;
let _17: [i128; 4];
let _18: Adt51;
let _19: *const bool;
let _20: Adt55;
let _21: u128;
let _22: Adt62;
let _23: Adt60;
let _24: bool;
let _25: isize;
let _26: i128;
let _27: Adt55;
let _28: isize;
let _29: Adt53;
let _30: Adt50;
let _31: [i32; 5];
let _32: ();
let _33: ();
{
_12.1 = '\u{ce95c}';
(*_8).1 = _10 * _10;
RET = [161889712188721772132602819205142407107_i128,(-160036693399724826509650330284214881675_i128),89600407751274167513255674290702262771_i128,1362114970167457530074738738234337090_i128,(-52204258229760838539629026125593865356_i128),23093886771370013947402132592239058840_i128,(-32669026380737391601002527530588611642_i128)];
(*_8).1 = 31547559920567192209440629120133066280_i128 as u8;
(*_8).0 = [67531564_i32,(-1974688463_i32),(-1860958601_i32),(-580784463_i32),1410045920_i32];
(*_8).0 = [(-692175204_i32),(-847796954_i32),(-1443686303_i32),(-1996186132_i32),(-1935614943_i32)];
RET = [(-39585762191146323151520028722319063651_i128),(-168911646002743859218047010462531271309_i128),(-12015743353588393037691921514932834367_i128),5422784406230457086154608215284161773_i128,114773905335212729014061546282185629388_i128,(-83870890233394861965401171116398026075_i128),39723628375544983757949202325449935102_i128];
_11 = (*_8).1 <= _10;
_12.0 = (-9223372036854775808_isize) as i64;
_6 = core::ptr::addr_of!((*_6));
(*_8).1 = _4 / 147_u8;
_7 = core::ptr::addr_of!(_11);
RET = [90106786490249157860659728638222634257_i128,89716356871476151935569358268534603121_i128,44634670012584586241123195525200088529_i128,(-154806387264360252236986050828784642341_i128),(-30638677325640377081694827028128542193_i128),(-134256317751247855158951325454636489698_i128),86749525670741993151684112030692716385_i128];
_3 = !_10;
(*_8).0 = [(-569978414_i32),(-270562529_i32),(-494465647_i32),(-1854098639_i32),(-1156732581_i32)];
(*_8) = (_5, _3);
_12.1 = '\u{c07e}';
(*_7) = true;
(*_8).1 = _4;
(*_8).0 = _2;
_16 = 511718406_u32;
_14.fld1.1.1 = _12.1;
Goto(bb1)
}
bb1 = {
_13 = 9223372036854775807_isize >> (*_6);
_9 = [(-72978856946890857243580349281212078538_i128),(-100349855593258968692393331775132448472_i128),(-9926890000831450400446526606634610772_i128),69408112738574344020077905792422264256_i128,(-118914399309791770678478212347914651783_i128),(-42823047247141058898158539654747955614_i128),161136674003297375954129409851350276889_i128,121757434288437209017707363993604576367_i128];
_14.fld1.0 = [(-2031017323_i32),2122467400_i32];
_14.fld1.2 = (-20345_i16) as f64;
(*_7) = (*_6) >= (*_6);
_7 = core::ptr::addr_of!((*_7));
_18.fld0.0 = [63957503148928887441950864345420659439_u128,251505468061655291811607287911117173069_u128,113451917188966731489031914701414915287_u128,162886652068409632373710119027218728076_u128,38434539709948380527503258541204075666_u128];
_15 = !_11;
_17 = [144101220430690681402675130631486099369_i128,98110774098895946187530282484259706263_i128,(-3720876591490896948489235005272420397_i128),(-84203582776587307785702792465432138650_i128)];
(*_8) = (_2, _4);
_1 = [17852730770454264626_u64,2871765962689661686_u64,11661114163207915148_u64,7532156890513409761_u64,11150931395892931977_u64,12971984189113683880_u64];
_5 = [(-250622836_i32),(-578064584_i32),(-1552039698_i32),81349537_i32,(-229649555_i32)];
_8 = core::ptr::addr_of!((*_8));
_18.fld0.0 = [53176714400877864051291827090115963873_u128,204827281583055601027001338556882611109_u128,313158818770714440771188147596814148031_u128,336515614801714608739361789361366412938_u128,195495462729472726770340911579148701396_u128];
_20.fld5 = _9;
_14.fld0 = [(-81525645005160069754377728803522267398_i128),67305021535212183840449117307012127096_i128,(-80381603396546492640327118664252930782_i128),74924520449976425115206495580075548295_i128];
_20.fld1.0 = _14.fld1.0;
_20.fld1 = (_14.fld1.0, _12, _14.fld1.2, _12.0);
_18.fld2 = [(-43591329397599170536173916550201519570_i128),3130535788763673898183115675518407332_i128,121355028143541286992543076179500004622_i128,125267752980289626208815103931119783871_i128,96812002666367679303862148323868747802_i128,(-98579938813686016850184304330093897292_i128),(-74197058552348388387009679092138758894_i128),(-96000951388641772890915280352229429059_i128)];
_22.fld2.fld2 = -_14.fld1.2;
_19 = core::ptr::addr_of!((*_7));
match _16 {
0 => bb2,
1 => bb3,
2 => bb4,
511718406 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_14.fld1.0 = _20.fld1.0;
_20.fld3 = [65456232_i32,(-2036416170_i32),1905175621_i32,(-1190619151_i32),1050549249_i32,434204142_i32,(-1126092009_i32),(-601355558_i32)];
_22.fld3 = [18189875359155147405_u64,9728016383280600750_u64,1171355186508265829_u64];
_14.fld3 = _20.fld3;
_14.fld5 = [(-66661635237675113593254933478834043423_i128),(-69244383521240588491558859234254385353_i128),153288624140461905270273817571430922760_i128,(-49331341132981584993134017310396380298_i128),21637623927695085310099385543280371610_i128,(-87023958011558858557782564414266058845_i128),(-159286014676590360591829145118377392042_i128),36458533238474978191759683353903647274_i128];
_4 = 2_usize as u8;
_18.fld2 = [(-98948423055637860853549505172490974134_i128),(-63732782470478997793640985954074361193_i128),(-21248547023125344659092861508099545687_i128),61330302707339254503352061080149681349_i128,155759773379283326649539102314109306289_i128,(-163352563245504467535639640148008001571_i128),(-10638909694289677946151852057581621524_i128),(-117878435596115734427198209020657584880_i128)];
_12 = (_20.fld1.1.0, _14.fld1.1.1);
(*_8).1 = 55044431100774309439898087582679704720_u128 as u8;
_22.fld2.fld0.2 = _22.fld2.fld2 * _14.fld1.2;
_15 = _20.fld1.1.0 <= _20.fld1.1.0;
_12.0 = _20.fld1.3 & _20.fld1.3;
_2 = _5;
(*_7) = _15;
_23.fld1.1 = core::ptr::addr_of_mut!(_20.fld4);
_12.1 = _20.fld1.1.1;
(*_8) = (_2, _4);
Goto(bb7)
}
bb7 = {
_22.fld1 = _12;
_22.fld2.fld0.0 = [2129246990_i32,(-963560033_i32)];
_23.fld0.1.1 = _20.fld1.1.1;
_20.fld6 = [2005636263_i32,(-1959825508_i32),776216546_i32,157722710_i32];
_14.fld1.1.0 = !_22.fld1.0;
_1 = [6650652528326090411_u64,13205156785397406128_u64,18103634671524368003_u64,15097818913898484499_u64,10649633332563850965_u64,7874627185174193644_u64];
_10 = 9841120604821542157_u64 as u8;
(*_6) = !61257_u16;
_22.fld2.fld0 = (_20.fld1.0, _12, _22.fld2.fld2, _22.fld1.0);
match _16 {
0 => bb1,
1 => bb5,
2 => bb8,
3 => bb9,
4 => bb10,
511718406 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_13 = 9223372036854775807_isize >> (*_6);
_9 = [(-72978856946890857243580349281212078538_i128),(-100349855593258968692393331775132448472_i128),(-9926890000831450400446526606634610772_i128),69408112738574344020077905792422264256_i128,(-118914399309791770678478212347914651783_i128),(-42823047247141058898158539654747955614_i128),161136674003297375954129409851350276889_i128,121757434288437209017707363993604576367_i128];
_14.fld1.0 = [(-2031017323_i32),2122467400_i32];
_14.fld1.2 = (-20345_i16) as f64;
(*_7) = (*_6) >= (*_6);
_7 = core::ptr::addr_of!((*_7));
_18.fld0.0 = [63957503148928887441950864345420659439_u128,251505468061655291811607287911117173069_u128,113451917188966731489031914701414915287_u128,162886652068409632373710119027218728076_u128,38434539709948380527503258541204075666_u128];
_15 = !_11;
_17 = [144101220430690681402675130631486099369_i128,98110774098895946187530282484259706263_i128,(-3720876591490896948489235005272420397_i128),(-84203582776587307785702792465432138650_i128)];
(*_8) = (_2, _4);
_1 = [17852730770454264626_u64,2871765962689661686_u64,11661114163207915148_u64,7532156890513409761_u64,11150931395892931977_u64,12971984189113683880_u64];
_5 = [(-250622836_i32),(-578064584_i32),(-1552039698_i32),81349537_i32,(-229649555_i32)];
_8 = core::ptr::addr_of!((*_8));
_18.fld0.0 = [53176714400877864051291827090115963873_u128,204827281583055601027001338556882611109_u128,313158818770714440771188147596814148031_u128,336515614801714608739361789361366412938_u128,195495462729472726770340911579148701396_u128];
_20.fld5 = _9;
_14.fld0 = [(-81525645005160069754377728803522267398_i128),67305021535212183840449117307012127096_i128,(-80381603396546492640327118664252930782_i128),74924520449976425115206495580075548295_i128];
_20.fld1.0 = _14.fld1.0;
_20.fld1 = (_14.fld1.0, _12, _14.fld1.2, _12.0);
_18.fld2 = [(-43591329397599170536173916550201519570_i128),3130535788763673898183115675518407332_i128,121355028143541286992543076179500004622_i128,125267752980289626208815103931119783871_i128,96812002666367679303862148323868747802_i128,(-98579938813686016850184304330093897292_i128),(-74197058552348388387009679092138758894_i128),(-96000951388641772890915280352229429059_i128)];
_22.fld2.fld2 = -_14.fld1.2;
_19 = core::ptr::addr_of!((*_7));
match _16 {
0 => bb2,
1 => bb3,
2 => bb4,
511718406 => bb6,
_ => bb5
}
}
bb11 = {
Return()
}
bb12 = {
_12.0 = _20.fld1.2 as i64;
match _16 {
0 => bb9,
1 => bb13,
2 => bb14,
511718406 => bb16,
_ => bb15
}
}
bb13 = {
_14.fld1.0 = _20.fld1.0;
_20.fld3 = [65456232_i32,(-2036416170_i32),1905175621_i32,(-1190619151_i32),1050549249_i32,434204142_i32,(-1126092009_i32),(-601355558_i32)];
_22.fld3 = [18189875359155147405_u64,9728016383280600750_u64,1171355186508265829_u64];
_14.fld3 = _20.fld3;
_14.fld5 = [(-66661635237675113593254933478834043423_i128),(-69244383521240588491558859234254385353_i128),153288624140461905270273817571430922760_i128,(-49331341132981584993134017310396380298_i128),21637623927695085310099385543280371610_i128,(-87023958011558858557782564414266058845_i128),(-159286014676590360591829145118377392042_i128),36458533238474978191759683353903647274_i128];
_4 = 2_usize as u8;
_18.fld2 = [(-98948423055637860853549505172490974134_i128),(-63732782470478997793640985954074361193_i128),(-21248547023125344659092861508099545687_i128),61330302707339254503352061080149681349_i128,155759773379283326649539102314109306289_i128,(-163352563245504467535639640148008001571_i128),(-10638909694289677946151852057581621524_i128),(-117878435596115734427198209020657584880_i128)];
_12 = (_20.fld1.1.0, _14.fld1.1.1);
(*_8).1 = 55044431100774309439898087582679704720_u128 as u8;
_22.fld2.fld0.2 = _22.fld2.fld2 * _14.fld1.2;
_15 = _20.fld1.1.0 <= _20.fld1.1.0;
_12.0 = _20.fld1.3 & _20.fld1.3;
_2 = _5;
(*_7) = _15;
_23.fld1.1 = core::ptr::addr_of_mut!(_20.fld4);
_12.1 = _20.fld1.1.1;
(*_8) = (_2, _4);
Goto(bb7)
}
bb14 = {
_13 = 9223372036854775807_isize >> (*_6);
_9 = [(-72978856946890857243580349281212078538_i128),(-100349855593258968692393331775132448472_i128),(-9926890000831450400446526606634610772_i128),69408112738574344020077905792422264256_i128,(-118914399309791770678478212347914651783_i128),(-42823047247141058898158539654747955614_i128),161136674003297375954129409851350276889_i128,121757434288437209017707363993604576367_i128];
_14.fld1.0 = [(-2031017323_i32),2122467400_i32];
_14.fld1.2 = (-20345_i16) as f64;
(*_7) = (*_6) >= (*_6);
_7 = core::ptr::addr_of!((*_7));
_18.fld0.0 = [63957503148928887441950864345420659439_u128,251505468061655291811607287911117173069_u128,113451917188966731489031914701414915287_u128,162886652068409632373710119027218728076_u128,38434539709948380527503258541204075666_u128];
_15 = !_11;
_17 = [144101220430690681402675130631486099369_i128,98110774098895946187530282484259706263_i128,(-3720876591490896948489235005272420397_i128),(-84203582776587307785702792465432138650_i128)];
(*_8) = (_2, _4);
_1 = [17852730770454264626_u64,2871765962689661686_u64,11661114163207915148_u64,7532156890513409761_u64,11150931395892931977_u64,12971984189113683880_u64];
_5 = [(-250622836_i32),(-578064584_i32),(-1552039698_i32),81349537_i32,(-229649555_i32)];
_8 = core::ptr::addr_of!((*_8));
_18.fld0.0 = [53176714400877864051291827090115963873_u128,204827281583055601027001338556882611109_u128,313158818770714440771188147596814148031_u128,336515614801714608739361789361366412938_u128,195495462729472726770340911579148701396_u128];
_20.fld5 = _9;
_14.fld0 = [(-81525645005160069754377728803522267398_i128),67305021535212183840449117307012127096_i128,(-80381603396546492640327118664252930782_i128),74924520449976425115206495580075548295_i128];
_20.fld1.0 = _14.fld1.0;
_20.fld1 = (_14.fld1.0, _12, _14.fld1.2, _12.0);
_18.fld2 = [(-43591329397599170536173916550201519570_i128),3130535788763673898183115675518407332_i128,121355028143541286992543076179500004622_i128,125267752980289626208815103931119783871_i128,96812002666367679303862148323868747802_i128,(-98579938813686016850184304330093897292_i128),(-74197058552348388387009679092138758894_i128),(-96000951388641772890915280352229429059_i128)];
_22.fld2.fld2 = -_14.fld1.2;
_19 = core::ptr::addr_of!((*_7));
match _16 {
0 => bb2,
1 => bb3,
2 => bb4,
511718406 => bb6,
_ => bb5
}
}
bb15 = {
Return()
}
bb16 = {
_14.fld0 = _17;
_15 = !(*_19);
(*_8).1 = _4;
_6 = core::ptr::addr_of!((*_6));
_20.fld1.1.1 = _23.fld0.1.1;
_14.fld6 = _20.fld6;
_14.fld0 = [127784541890253436835760873299981537810_i128,31235485334484969596618658617447434531_i128,(-163955556458560542559100863105294314065_i128),76568575539419981304355380569715153269_i128];
_20.fld1.1.1 = _22.fld1.1;
_27.fld1.1.1 = _23.fld0.1.1;
_27.fld1.1.1 = _22.fld1.1;
_13 = _23.fld0.1.1 as isize;
_22.fld2.fld0.0 = _20.fld1.0;
(*_6) = 6_usize as u16;
RET = [(-4549213291926062862927749334372628146_i128),(-38054155415202429619867207601883011277_i128),(-34231687152910522614273705486435582481_i128),123466912398685240603716231916987566710_i128,(-8597991854611120637741016852970324932_i128),90945249335720043307989686621122084208_i128,(-148310475984519204455136894597296523433_i128)];
_20.fld4 = 17873_i16;
_22.fld0 = _22.fld2.fld0.3;
_22.fld2.fld0.2 = _13 as f64;
_27.fld1.1 = (_22.fld2.fld0.3, _22.fld2.fld0.1.1);
_20.fld1.3 = !_20.fld1.1.0;
_21 = (*_7) as u128;
Goto(bb17)
}
bb17 = {
Call(_32 = dump_var(15_usize, 21_usize, Move(_21), 5_usize, Move(_5), 13_usize, Move(_13), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_32 = dump_var(15_usize, 4_usize, Move(_4), 16_usize, Move(_16), 11_usize, Move(_11), 33_usize, _33), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: u16,mut _2: u16,mut _3: Adt56,mut _4: bool,mut _5: *const bool,mut _6: [u16; 6],mut _7: *const bool,mut _8: f64,mut _9: i64,mut _10: u128,mut _11: i64,mut _12: i32,mut _13: *const u16) -> u8 {
mir! {
type RET = u8;
let _14: f32;
let _15: usize;
let _16: (i64, char);
let _17: i16;
let _18: f64;
let _19: u32;
let _20: Adt56;
let _21: Adt52;
let _22: *const bool;
let _23: [u128; 5];
let _24: Adt53;
let _25: [i128; 8];
let _26: [u64; 6];
let _27: *const i32;
let _28: [isize; 2];
let _29: ([i32; 2], (i64, char), f64, i64);
let _30: bool;
let _31: Adt63;
let _32: *const bool;
let _33: ([i32; 2],);
let _34: Adt61;
let _35: isize;
let _36: ();
let _37: ();
{
(*_5) = _11 == _11;
(*_5) = _4;
_12 = (-2102267756_i32);
_13 = core::ptr::addr_of!(_1);
(*_7) = _4 & _4;
(*_13) = !_2;
_9 = _11 << _2;
RET = _3.fld0.1;
_3.fld0.1 = _11 as u8;
_3.fld1.fld0 = [(-58977631725219216603407836842778961472_i128),80120461850098403699242820505659010424_i128,461374864408439794112325930304233332_i128,136996128021585495070526909892141467579_i128,129810723602946073486717944228252021151_i128,(-158660743938309288069454952325964833840_i128),(-43345376930440145125396515996863606448_i128)];
_3.fld1.fld0 = [151920150431637385311782618453873977064_i128,(-622166906057149478842619696249721489_i128),(-43827814800643725146109982223032079477_i128),10771572824371988084960974689874496070_i128,(-118488371866846296543387043083550773134_i128),65528934502126409548024131152884938806_i128,(-97151754780463680328791555686020023549_i128)];
_12 = -(-680494973_i32);
_3.fld2 = _13;
_3.fld3 = !0_usize;
(*_7) = _4;
Goto(bb1)
}
bb1 = {
_8 = _12 as f64;
RET = _4 as u8;
_6 = [(*_13),(*_13),_2,(*_13),_1,(*_13)];
_11 = (-29536_i16) as i64;
RET = !_3.fld0.1;
_7 = core::ptr::addr_of!((*_5));
_11 = _3.fld0.1 as i64;
_2 = (*_13) % 62300_u16;
(*_13) = !_2;
_6 = [_2,(*_13),(*_13),(*_13),_2,(*_13)];
RET = _3.fld0.1 % 147_u8;
(*_7) = _8 > _8;
(*_13) = _2 * _2;
_9 = _11;
_1 = _2;
_5 = _7;
_9 = _11;
_6 = [_1,_2,(*_13),(*_13),_2,(*_13)];
_3.fld1.fld0 = [(-84400074078336339547837862066674205143_i128),83759725857753233190090536524617621029_i128,(-146229141622309120257219411393984704320_i128),(-100057339674058773450534353004825327776_i128),69839001516096636488235053923707745488_i128,169326815432611221239069565576474356526_i128,(-20017600670933333380653518192387466760_i128)];
(*_7) = _4;
Goto(bb2)
}
bb2 = {
Call(_15 = core::intrinsics::bswap(_3.fld3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _3.fld0.1;
_5 = core::ptr::addr_of!((*_5));
(*_5) = !_4;
_15 = (-9223372036854775808_isize) as usize;
_9 = -_11;
(*_13) = !_2;
RET = !_3.fld0.1;
_14 = _11 as f32;
(*_13) = !_2;
(*_7) = !_4;
(*_5) = _1 >= (*_13);
_12 = 1803879619_i32;
_16 = (_9, '\u{a8f24}');
_3.fld0.0 = [_12,_12,_12,_12,_12];
_16.0 = _9 >> _3.fld3;
_1 = (*_5) as u16;
_12 = -(-954023114_i32);
_16.1 = '\u{41fa1}';
_16 = (_9, '\u{4df1b}');
_13 = core::ptr::addr_of!(_1);
_12 = (-778677451_i32);
_7 = core::ptr::addr_of!((*_5));
Goto(bb4)
}
bb4 = {
_19 = 3495607621_u32 ^ 83330369_u32;
_1 = _2;
_9 = (-9223372036854775808_isize) as i64;
(*_7) = _4;
_11 = _16.0 >> _10;
_17 = (-17629_i16) | 24844_i16;
_16.1 = '\u{d5e5a}';
_20.fld3 = !_15;
_21.fld1.fld0.0 = [_10,_10,_10,_10,_10];
_20.fld1.fld0 = _3.fld1.fld0;
_2 = (*_13) | _1;
_20.fld3 = _3.fld3;
_20.fld0.0 = _3.fld0.0;
_21.fld1.fld1 = core::ptr::addr_of_mut!(_14);
_3.fld1.fld0 = [100798029118135592214389516434994579877_i128,(-25696388692779782764947500763791554914_i128),134557978651481379611277890627263256095_i128,(-16094564609039613989954026128871137316_i128),(-9663266139638640565641817738936197088_i128),28943068133748453714252613094925392002_i128,67997329485090849600098575139469424622_i128];
match _10 {
0 => bb1,
1 => bb3,
2 => bb5,
3 => bb6,
4 => bb7,
148189500762175369584451465907709461756 => bb9,
_ => bb8
}
}
bb5 = {
RET = _3.fld0.1;
_5 = core::ptr::addr_of!((*_5));
(*_5) = !_4;
_15 = (-9223372036854775808_isize) as usize;
_9 = -_11;
(*_13) = !_2;
RET = !_3.fld0.1;
_14 = _11 as f32;
(*_13) = !_2;
(*_7) = !_4;
(*_5) = _1 >= (*_13);
_12 = 1803879619_i32;
_16 = (_9, '\u{a8f24}');
_3.fld0.0 = [_12,_12,_12,_12,_12];
_16.0 = _9 >> _3.fld3;
_1 = (*_5) as u16;
_12 = -(-954023114_i32);
_16.1 = '\u{41fa1}';
_16 = (_9, '\u{4df1b}');
_13 = core::ptr::addr_of!(_1);
_12 = (-778677451_i32);
_7 = core::ptr::addr_of!((*_5));
Goto(bb4)
}
bb6 = {
Call(_15 = core::intrinsics::bswap(_3.fld3), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_8 = _12 as f64;
RET = _4 as u8;
_6 = [(*_13),(*_13),_2,(*_13),_1,(*_13)];
_11 = (-29536_i16) as i64;
RET = !_3.fld0.1;
_7 = core::ptr::addr_of!((*_5));
_11 = _3.fld0.1 as i64;
_2 = (*_13) % 62300_u16;
(*_13) = !_2;
_6 = [_2,(*_13),(*_13),(*_13),_2,(*_13)];
RET = _3.fld0.1 % 147_u8;
(*_7) = _8 > _8;
(*_13) = _2 * _2;
_9 = _11;
_1 = _2;
_5 = _7;
_9 = _11;
_6 = [_1,_2,(*_13),(*_13),_2,(*_13)];
_3.fld1.fld0 = [(-84400074078336339547837862066674205143_i128),83759725857753233190090536524617621029_i128,(-146229141622309120257219411393984704320_i128),(-100057339674058773450534353004825327776_i128),69839001516096636488235053923707745488_i128,169326815432611221239069565576474356526_i128,(-20017600670933333380653518192387466760_i128)];
(*_7) = _4;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_17 = (-16832_i16) | 6454_i16;
_21.fld2.0 = [_12,_12];
(*_7) = _3.fld0.1 == _3.fld0.1;
_20.fld0.1 = _3.fld0.1;
_13 = core::ptr::addr_of!((*_13));
_20.fld1.fld0 = [(-102765301071167320658964236737574625246_i128),(-53335295013567207795166545400305348206_i128),54143180993226256322390998278147599368_i128,(-131885963087020631057619279156361601378_i128),(-155859553732638001266541134128048963819_i128),24101115834151066373475527360685009451_i128,(-132144473684742919844838782373893663186_i128)];
_21.fld6 = core::ptr::addr_of!(_3.fld0);
_21.fld2.1 = (_9, _16.1);
_20.fld1 = Adt50 { fld0: _3.fld1.fld0 };
_6 = [_1,(*_13),(*_13),(*_13),(*_13),_1];
_20.fld1.fld0 = [117109385637254702641240508837142972689_i128,(-66659784176373371928939485024250406263_i128),(-29403389145856442454762458386141322632_i128),(-152723363343587763276175700041082878608_i128),(-81917153053198078451795737288286207744_i128),138194494421773799593555137102170868509_i128,(-57870086470000055125748593438475771470_i128)];
_10 = !159318170744653639223423886290492306567_u128;
_20.fld1.fld0 = _3.fld1.fld0;
_12 = -407643036_i32;
Call(_15 = core::intrinsics::bswap(_3.fld3), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_7 = _5;
(*_5) = _4;
_2 = (*_13);
_21.fld1.fld1 = core::ptr::addr_of_mut!(_14);
_18 = _8;
_21.fld1.fld1 = core::ptr::addr_of_mut!(_14);
Goto(bb11)
}
bb11 = {
RET = !_20.fld0.1;
_8 = _18;
_3.fld3 = _15;
_18 = -_8;
_21.fld3 = [_12,_12,_12,_12,_12];
_19 = _12 as u32;
_15 = _3.fld3;
_24.fld4.1 = _16.1;
_3.fld2 = core::ptr::addr_of!((*_13));
(*_5) = _21.fld2.1.0 != _21.fld2.1.0;
_21.fld7.fld0 = _20.fld1.fld0;
_21.fld2.2 = _12 as f64;
_16.1 = _24.fld4.1;
_21.fld2.2 = -_8;
_21.fld2.2 = _8 * _18;
_20 = Move(_3);
_20.fld2 = core::ptr::addr_of!((*_13));
_22 = _5;
_25 = [(-139077298303751614268462841517485464514_i128),(-54262031722769379814967316223466546833_i128),36348653436387871677600337905496818349_i128,(-150925528257990845638173489673934754047_i128),(-105187701814406042222022207351222852442_i128),26859618672257385521592706653350858746_i128,66870309942467727012464051786383870095_i128,53138589713265539182791711167370166663_i128];
_24.fld1.0 = [9223372036854775807_isize,83_isize];
Call(_24.fld4.0 = core::intrinsics::bswap(_11), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
(*_5) = !_4;
_24.fld4 = (_11, _21.fld2.1.1);
_20.fld2 = core::ptr::addr_of!(_2);
_21.fld4 = core::ptr::addr_of!(_12);
_21.fld2.0 = [_12,_12];
_21.fld5 = [1320706475418724413_u64,9402467288634756864_u64,7898831228235296172_u64,4164196998199337912_u64,14938581091285206390_u64,2794845950440101618_u64];
_23 = [_10,_10,_10,_10,_10];
_24.fld1.2 = _10 / 242014164574133153447700881124022447788_u128;
_15 = !_20.fld3;
_24.fld6 = [_24.fld4.1,_21.fld2.1.1];
_21.fld2.1.0 = _17 as i64;
_11 = _17 as i64;
_24.fld2 = (-155550167744530792028425059080675163621_i128) << (*_13);
(*_22) = _4;
_20.fld0 = (_21.fld3, 227_u8);
_4 = !(*_22);
_21.fld0 = core::ptr::addr_of!((*_13));
_21.fld2.3 = _11;
_6 = [(*_13),(*_13),_1,(*_13),_2,_2];
_24.fld1.2 = _10 | _10;
_28 = [52_isize,(-25_isize)];
_24.fld1 = (_28, _21.fld5, _10, _20.fld0);
_5 = _7;
_24.fld1.3.1 = _20.fld3 as u8;
_21.fld2.0 = [_12,_12];
_1 = _2;
_24.fld1.3.0 = [_12,_12,_12,_12,_12];
_20.fld0 = (_24.fld1.3.0, _24.fld1.3.1);
Goto(bb13)
}
bb13 = {
_4 = !(*_7);
_16.0 = _9;
_29.1.1 = _21.fld2.1.1;
_27 = _21.fld4;
_16.0 = _24.fld4.0;
_20.fld1.fld0 = [_24.fld2,_24.fld2,_24.fld2,_24.fld2,_24.fld2,_24.fld2,_24.fld2];
_21.fld4 = _27;
_21.fld1.fld2 = _25;
_29.2 = _18 - _18;
_21.fld2.1.1 = _29.1.1;
_24.fld1.2 = _10;
_24.fld3 = 6719424225898024796_u64;
_21.fld2.1.1 = _16.1;
Call(_7 = fn17(_21.fld2.3, Move(_21), _25, _20.fld2, _24.fld1, _24.fld4.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_20.fld0.1 = !_24.fld1.3.1;
_19 = 3787159552_u32;
_24.fld1.2 = _10 ^ _10;
_16.0 = !_24.fld4.0;
_20.fld0.0 = [(*_27),(*_27),(*_27),(*_27),_12];
_24.fld1.3 = (_20.fld0.0, _20.fld0.1);
_31.fld0.0 = [_12,(*_27)];
(*_13) = _17 as u16;
(*_22) = _4;
_20.fld0 = _24.fld1.3;
_29 = (_31.fld0.0, _16, _18, _11);
_11 = _16.0 << _1;
RET = !_20.fld0.1;
_27 = core::ptr::addr_of!((*_27));
_24.fld5 = [_24.fld3,_24.fld3,_24.fld3];
_31.fld0.0 = [_12,_12];
_12 = -(-1239471145_i32);
(*_13) = !_2;
(*_22) = _4;
_24.fld2 = -39163668327679442116191174051455949188_i128;
_24.fld6 = [_24.fld4.1,_29.1.1];
_31.fld0 = (_29.0,);
(*_27) = 1969210745_i32 ^ 2017174223_i32;
_24.fld1.2 = (-90_isize) as u128;
_20.fld2 = _13;
(*_13) = _2;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(16_usize, 11_usize, Move(_11), 28_usize, Move(_28), 25_usize, Move(_25), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(16_usize, 1_usize, Move(_1), 19_usize, Move(_19), 12_usize, Move(_12), 37_usize, _37), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: i64,mut _2: Adt52,mut _3: [i128; 8],mut _4: *const u16,mut _5: ([isize; 2], [u64; 6], u128, ([i32; 5], u8)),mut _6: char) -> *const bool {
mir! {
type RET = *const bool;
let _7: ([u128; 5],);
let _8: u16;
let _9: i8;
let _10: [i8; 3];
let _11: Adt54;
let _12: isize;
let _13: Adt64;
let _14: u32;
let _15: bool;
let _16: isize;
let _17: f64;
let _18: u128;
let _19: i8;
let _20: isize;
let _21: Adt54;
let _22: isize;
let _23: Adt62;
let _24: f64;
let _25: Adt50;
let _26: isize;
let _27: Adt61;
let _28: f64;
let _29: Adt63;
let _30: [u16; 6];
let _31: [i32; 2];
let _32: [isize; 2];
let _33: isize;
let _34: Adt54;
let _35: ([i32; 5], u8);
let _36: [u16; 6];
let _37: Adt63;
let _38: [i128; 4];
let _39: f32;
let _40: isize;
let _41: (i64, char);
let _42: u8;
let _43: f32;
let _44: ([i32; 5], u8);
let _45: isize;
let _46: ();
let _47: ();
{
_5.2 = 118375923668221228978483003273046611677_u128 + 112116837223097286907431593766115208225_u128;
(*_4) = !4321_u16;
_5.3.0 = [(-1314901658_i32),(-176065356_i32),(-1934749401_i32),1822996360_i32,1908447492_i32];
_2.fld5 = [18279721635803882071_u64,13776011353087061698_u64,11622907849606179829_u64,17018399102941836899_u64,9278569364831388047_u64,8622727220804987558_u64];
_5.2 = 142180134170237533375199134034002247853_u128 ^ 17591862728666835989004709544192193008_u128;
_3 = [69474486066737120602588362711886602242_i128,152473440471186824186242389442690278810_i128,(-30491237001690108880808413481812137288_i128),(-5143301461365159894999396187780055601_i128),28818815201160387670523119031184123890_i128,88339325519823290484986538748639786954_i128,76334131193951246802592803028621513082_i128,(-106008014349100471797380614581589520614_i128)];
(*_4) = !49263_u16;
Goto(bb1)
}
bb1 = {
_7.0 = [_5.2,_5.2,_5.2,_5.2,_5.2];
_2.fld1.fld0 = (_7.0,);
_5.3.0 = _2.fld3;
_2.fld1.fld0 = (_7.0,);
_5.3.1 = 194_u8;
_8 = (*_4) & (*_4);
_8 = (-9223372036854775808_isize) as u16;
_5.3 = (_2.fld3, 114_u8);
(*_4) = 5_i8 as u16;
_6 = _2.fld2.1.1;
_5.3.1 = 33_u8 ^ 64_u8;
_5.1 = [7724819358286544655_u64,16625841292063921974_u64,14639677021433229195_u64,16995337147841974898_u64,6848559556668854257_u64,785075820988426845_u64];
_11.fld4 = (-26377271104492964996898906320592323663_i128) as f32;
_5.1 = [16748082749457010565_u64,14991203085435947003_u64,17803406092432096862_u64,14097481918310615442_u64,9257329026337641470_u64,12080308270944816397_u64];
_5.2 = 95989742997951816641445458775924504038_u128 ^ 209961673159134706341721969210646349378_u128;
_2.fld1.fld1 = core::ptr::addr_of_mut!(_11.fld4);
_5.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = (_2.fld1.fld0.0,);
_2.fld0 = core::ptr::addr_of!((*_4));
_2.fld7.fld0 = [86542728113332532466667088214842903378_i128,6759272843606617912194211729826800817_i128,97002681424247149652864204694062188738_i128,(-133097732996983827541962303819848228776_i128),92427937577655603312522760464951673691_i128,8745357579285590598209622380477129656_i128,(-102103000626270815055253439614315702549_i128)];
_11.fld2 = [_2.fld2.1.1,_6];
_6 = _2.fld2.1.1;
Goto(bb2)
}
bb2 = {
_2.fld0 = _4;
_5.3.1 = !150_u8;
_8 = (*_4) - (*_4);
_5.2 = false as u128;
_13.fld3 = core::ptr::addr_of!(_13.fld0);
_13.fld6.fld3 = _11.fld4 as usize;
_1 = !_2.fld2.1.0;
_2.fld2.1 = (_2.fld2.3, _6);
_15 = !true;
RET = core::ptr::addr_of!(_13.fld0);
_13.fld6.fld1.fld0 = _2.fld7.fld0;
_13.fld2 = 3334750299036286974_u64 as f32;
_7.0 = [_5.2,_5.2,_5.2,_5.2,_5.2];
_3 = [(-102466236159572152664943349557663569247_i128),(-131560498213487030215664033309173660900_i128),(-156651888320323609236214971896349161182_i128),39540997091829241919359935651281240214_i128,(-121699840720293410161293297404249988751_i128),135744266375431914069949117102602916360_i128,76885537452090363394212160036355252789_i128,(-35114957149430345559994279605609018343_i128)];
_13.fld1 = core::ptr::addr_of_mut!(_2.fld2.3);
_11.fld3 = (-786550628_i32) as i8;
_2.fld2.2 = _5.3.1 as f64;
_2.fld2.1.1 = _6;
_13.fld5 = [_8,(*_4),(*_4),_8,_8,(*_4)];
(*RET) = _15;
_9 = _11.fld3;
Goto(bb3)
}
bb3 = {
_2.fld1.fld0 = _7;
_18 = _8 as u128;
_11.fld0 = !9447556069967010181_u64;
_13.fld6 = Adt56 { fld0: _5.3,fld1: _2.fld7,fld2: _2.fld0,fld3: 8355592801438785663_usize };
_3 = [(-11620010253605291238829258905011457084_i128),(-72620444309633668191602735662934708824_i128),4131038286367310371283331356184949784_i128,27054743015808845600047257302287201377_i128,(-13189281856383896472475145720291920842_i128),(-39405592113583645582808752016301936109_i128),39456681892834090743786990687810914401_i128,71248299243486168906792869761302791044_i128];
_5.3.0 = _13.fld6.fld0.0;
_10 = [_11.fld3,_9,_11.fld3];
_7.0 = _2.fld1.fld0.0;
RET = core::ptr::addr_of!(_15);
_2.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld2);
_2.fld7.fld0 = [(-106335107174080284484733425354957799282_i128),(-145322359498699383675528135988029719365_i128),39068043559405008461068531000035687374_i128,122052945892888657433779778554161349525_i128,(-166724834231825658709294218958269034217_i128),66636271126661378836627958782181842583_i128,50269147718480644220097832972161185400_i128];
_10 = [_11.fld3,_11.fld3,_9];
Goto(bb4)
}
bb4 = {
_11.fld0 = _18 as u64;
_19 = _13.fld6.fld0.1 as i8;
_11.fld4 = _13.fld6.fld0.1 as f32;
_4 = core::ptr::addr_of!(_8);
(*RET) = _2.fld2.3 != _2.fld2.1.0;
(*RET) = _13.fld0;
_13.fld6.fld0 = (_2.fld3, _5.3.1);
match _13.fld6.fld3 {
0 => bb5,
1 => bb6,
8355592801438785663 => bb8,
_ => bb7
}
}
bb5 = {
_2.fld1.fld0 = _7;
_18 = _8 as u128;
_11.fld0 = !9447556069967010181_u64;
_13.fld6 = Adt56 { fld0: _5.3,fld1: _2.fld7,fld2: _2.fld0,fld3: 8355592801438785663_usize };
_3 = [(-11620010253605291238829258905011457084_i128),(-72620444309633668191602735662934708824_i128),4131038286367310371283331356184949784_i128,27054743015808845600047257302287201377_i128,(-13189281856383896472475145720291920842_i128),(-39405592113583645582808752016301936109_i128),39456681892834090743786990687810914401_i128,71248299243486168906792869761302791044_i128];
_5.3.0 = _13.fld6.fld0.0;
_10 = [_11.fld3,_9,_11.fld3];
_7.0 = _2.fld1.fld0.0;
RET = core::ptr::addr_of!(_15);
_2.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld2);
_2.fld7.fld0 = [(-106335107174080284484733425354957799282_i128),(-145322359498699383675528135988029719365_i128),39068043559405008461068531000035687374_i128,122052945892888657433779778554161349525_i128,(-166724834231825658709294218958269034217_i128),66636271126661378836627958782181842583_i128,50269147718480644220097832972161185400_i128];
_10 = [_11.fld3,_11.fld3,_9];
Goto(bb4)
}
bb6 = {
_2.fld0 = _4;
_5.3.1 = !150_u8;
_8 = (*_4) - (*_4);
_5.2 = false as u128;
_13.fld3 = core::ptr::addr_of!(_13.fld0);
_13.fld6.fld3 = _11.fld4 as usize;
_1 = !_2.fld2.1.0;
_2.fld2.1 = (_2.fld2.3, _6);
_15 = !true;
RET = core::ptr::addr_of!(_13.fld0);
_13.fld6.fld1.fld0 = _2.fld7.fld0;
_13.fld2 = 3334750299036286974_u64 as f32;
_7.0 = [_5.2,_5.2,_5.2,_5.2,_5.2];
_3 = [(-102466236159572152664943349557663569247_i128),(-131560498213487030215664033309173660900_i128),(-156651888320323609236214971896349161182_i128),39540997091829241919359935651281240214_i128,(-121699840720293410161293297404249988751_i128),135744266375431914069949117102602916360_i128,76885537452090363394212160036355252789_i128,(-35114957149430345559994279605609018343_i128)];
_13.fld1 = core::ptr::addr_of_mut!(_2.fld2.3);
_11.fld3 = (-786550628_i32) as i8;
_2.fld2.2 = _5.3.1 as f64;
_2.fld2.1.1 = _6;
_13.fld5 = [_8,(*_4),(*_4),_8,_8,(*_4)];
(*RET) = _15;
_9 = _11.fld3;
Goto(bb3)
}
bb7 = {
_7.0 = [_5.2,_5.2,_5.2,_5.2,_5.2];
_2.fld1.fld0 = (_7.0,);
_5.3.0 = _2.fld3;
_2.fld1.fld0 = (_7.0,);
_5.3.1 = 194_u8;
_8 = (*_4) & (*_4);
_8 = (-9223372036854775808_isize) as u16;
_5.3 = (_2.fld3, 114_u8);
(*_4) = 5_i8 as u16;
_6 = _2.fld2.1.1;
_5.3.1 = 33_u8 ^ 64_u8;
_5.1 = [7724819358286544655_u64,16625841292063921974_u64,14639677021433229195_u64,16995337147841974898_u64,6848559556668854257_u64,785075820988426845_u64];
_11.fld4 = (-26377271104492964996898906320592323663_i128) as f32;
_5.1 = [16748082749457010565_u64,14991203085435947003_u64,17803406092432096862_u64,14097481918310615442_u64,9257329026337641470_u64,12080308270944816397_u64];
_5.2 = 95989742997951816641445458775924504038_u128 ^ 209961673159134706341721969210646349378_u128;
_2.fld1.fld1 = core::ptr::addr_of_mut!(_11.fld4);
_5.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = (_2.fld1.fld0.0,);
_2.fld0 = core::ptr::addr_of!((*_4));
_2.fld7.fld0 = [86542728113332532466667088214842903378_i128,6759272843606617912194211729826800817_i128,97002681424247149652864204694062188738_i128,(-133097732996983827541962303819848228776_i128),92427937577655603312522760464951673691_i128,8745357579285590598209622380477129656_i128,(-102103000626270815055253439614315702549_i128)];
_11.fld2 = [_2.fld2.1.1,_6];
_6 = _2.fld2.1.1;
Goto(bb2)
}
bb8 = {
(*_4) = 61879_u16 >> _13.fld6.fld3;
_13.fld3 = core::ptr::addr_of!(_13.fld0);
_2.fld1.fld0 = (_7.0,);
_2.fld0 = core::ptr::addr_of!((*_4));
_2.fld4 = core::ptr::addr_of!(_23.fld2.fld1.0);
_12 = _11.fld0 as isize;
(*RET) = _13.fld0;
_11.fld3 = -_9;
_14 = 1028526456_u32;
_23.fld2.fld0.1.0 = _11.fld0 as i64;
_21.fld1 = 288487635_i32 as usize;
_21.fld3 = _11.fld3;
_3 = [39766387320461804716499776823082277303_i128,100183661837348322221996201180950067770_i128,165328165794710469071706227127075738556_i128,124006191047029052266476585882962761335_i128,(-49192282338570887023871957338959405979_i128),54563793833580708773091105527919602229_i128,(-152047599289507060327966768642910816584_i128),(-101254861801451779329580923601842449821_i128)];
_23.fld2.fld0.2 = _2.fld2.2;
_27.fld3 = (-2647_i16) * 24075_i16;
Goto(bb9)
}
bb9 = {
_13.fld6.fld2 = core::ptr::addr_of!((*_4));
(*_4) = 12777_u16 / 51351_u16;
_10 = [_9,_11.fld3,_21.fld3];
_23.fld1.1 = _2.fld2.1.1;
_21.fld0 = _14 as u64;
_16 = _12;
_25.fld0 = [(-154540691502361967184076480360617096773_i128),9120662348574788355578202225187121161_i128,(-88565816925718152606833053101242730471_i128),166684232436974509529889165743717649773_i128,9424400535445390174693022974153597775_i128,159706317375386866803911070503435063087_i128,(-85558923426833939449738043606478631964_i128)];
_12 = _16;
_1 = _2.fld2.1.0 - _2.fld2.1.0;
_23.fld2.fld2 = _2.fld2.2;
_2.fld4 = core::ptr::addr_of!(_23.fld2.fld1.0);
_27.fld0 = Adt50 { fld0: _13.fld6.fld1.fld0 };
_21.fld4 = -_13.fld2;
match _13.fld6.fld3 {
0 => bb10,
8355592801438785663 => bb12,
_ => bb11
}
}
bb10 = {
_7.0 = [_5.2,_5.2,_5.2,_5.2,_5.2];
_2.fld1.fld0 = (_7.0,);
_5.3.0 = _2.fld3;
_2.fld1.fld0 = (_7.0,);
_5.3.1 = 194_u8;
_8 = (*_4) & (*_4);
_8 = (-9223372036854775808_isize) as u16;
_5.3 = (_2.fld3, 114_u8);
(*_4) = 5_i8 as u16;
_6 = _2.fld2.1.1;
_5.3.1 = 33_u8 ^ 64_u8;
_5.1 = [7724819358286544655_u64,16625841292063921974_u64,14639677021433229195_u64,16995337147841974898_u64,6848559556668854257_u64,785075820988426845_u64];
_11.fld4 = (-26377271104492964996898906320592323663_i128) as f32;
_5.1 = [16748082749457010565_u64,14991203085435947003_u64,17803406092432096862_u64,14097481918310615442_u64,9257329026337641470_u64,12080308270944816397_u64];
_5.2 = 95989742997951816641445458775924504038_u128 ^ 209961673159134706341721969210646349378_u128;
_2.fld1.fld1 = core::ptr::addr_of_mut!(_11.fld4);
_5.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = (_2.fld1.fld0.0,);
_2.fld0 = core::ptr::addr_of!((*_4));
_2.fld7.fld0 = [86542728113332532466667088214842903378_i128,6759272843606617912194211729826800817_i128,97002681424247149652864204694062188738_i128,(-133097732996983827541962303819848228776_i128),92427937577655603312522760464951673691_i128,8745357579285590598209622380477129656_i128,(-102103000626270815055253439614315702549_i128)];
_11.fld2 = [_2.fld2.1.1,_6];
_6 = _2.fld2.1.1;
Goto(bb2)
}
bb11 = {
_2.fld0 = _4;
_5.3.1 = !150_u8;
_8 = (*_4) - (*_4);
_5.2 = false as u128;
_13.fld3 = core::ptr::addr_of!(_13.fld0);
_13.fld6.fld3 = _11.fld4 as usize;
_1 = !_2.fld2.1.0;
_2.fld2.1 = (_2.fld2.3, _6);
_15 = !true;
RET = core::ptr::addr_of!(_13.fld0);
_13.fld6.fld1.fld0 = _2.fld7.fld0;
_13.fld2 = 3334750299036286974_u64 as f32;
_7.0 = [_5.2,_5.2,_5.2,_5.2,_5.2];
_3 = [(-102466236159572152664943349557663569247_i128),(-131560498213487030215664033309173660900_i128),(-156651888320323609236214971896349161182_i128),39540997091829241919359935651281240214_i128,(-121699840720293410161293297404249988751_i128),135744266375431914069949117102602916360_i128,76885537452090363394212160036355252789_i128,(-35114957149430345559994279605609018343_i128)];
_13.fld1 = core::ptr::addr_of_mut!(_2.fld2.3);
_11.fld3 = (-786550628_i32) as i8;
_2.fld2.2 = _5.3.1 as f64;
_2.fld2.1.1 = _6;
_13.fld5 = [_8,(*_4),(*_4),_8,_8,(*_4)];
(*RET) = _15;
_9 = _11.fld3;
Goto(bb3)
}
bb12 = {
_14 = _18 as u32;
_11.fld1 = _13.fld6.fld3 | _13.fld6.fld3;
RET = _13.fld3;
_13.fld6.fld0 = (_2.fld3, _5.3.1);
_13.fld6 = Adt56 { fld0: _5.3,fld1: _2.fld7,fld2: _4,fld3: _11.fld1 };
_5.3.0 = [(-1064483474_i32),(-1650258365_i32),64656121_i32,745631612_i32,492868792_i32];
_23.fld2.fld0.1.1 = _6;
_2.fld6 = core::ptr::addr_of!(_5.3);
_7 = _2.fld1.fld0;
_2.fld2.3 = _13.fld6.fld0.1 as i64;
_28 = -_23.fld2.fld0.2;
_23.fld1 = (_2.fld2.1.0, _2.fld2.1.1);
_2.fld1.fld2 = [47144006747145340279074134220899949225_i128,(-94013266602597940682007846097583331427_i128),(-80412522768575179232218766866669032415_i128),159257400904449584994380825915000148462_i128,(-82903468266981140001659259202056999014_i128),(-107716463341324437626675862551982919620_i128),114783421018776269676315104701047726014_i128,104294106512181255309675857643709176040_i128];
_13.fld6.fld0 = (_2.fld3, _5.3.1);
_23.fld2.fld1.0 = (-1156328353_i32);
_27.fld2 = [_23.fld2.fld1.0,_23.fld2.fld1.0,_23.fld2.fld1.0,_23.fld2.fld1.0,_23.fld2.fld1.0];
_29.fld0 = (_2.fld2.0,);
_21.fld3 = _19;
_31 = _2.fld2.0;
_23.fld3 = [_21.fld0,_11.fld0,_21.fld0];
(*RET) = !_15;
match _23.fld2.fld1.0 {
0 => bb4,
1 => bb10,
340282366920938463463374607430611883103 => bb14,
_ => bb13
}
}
bb13 = {
_2.fld1.fld0 = _7;
_18 = _8 as u128;
_11.fld0 = !9447556069967010181_u64;
_13.fld6 = Adt56 { fld0: _5.3,fld1: _2.fld7,fld2: _2.fld0,fld3: 8355592801438785663_usize };
_3 = [(-11620010253605291238829258905011457084_i128),(-72620444309633668191602735662934708824_i128),4131038286367310371283331356184949784_i128,27054743015808845600047257302287201377_i128,(-13189281856383896472475145720291920842_i128),(-39405592113583645582808752016301936109_i128),39456681892834090743786990687810914401_i128,71248299243486168906792869761302791044_i128];
_5.3.0 = _13.fld6.fld0.0;
_10 = [_11.fld3,_9,_11.fld3];
_7.0 = _2.fld1.fld0.0;
RET = core::ptr::addr_of!(_15);
_2.fld1.fld1 = core::ptr::addr_of_mut!(_13.fld2);
_2.fld7.fld0 = [(-106335107174080284484733425354957799282_i128),(-145322359498699383675528135988029719365_i128),39068043559405008461068531000035687374_i128,122052945892888657433779778554161349525_i128,(-166724834231825658709294218958269034217_i128),66636271126661378836627958782181842583_i128,50269147718480644220097832972161185400_i128];
_10 = [_11.fld3,_11.fld3,_9];
Goto(bb4)
}
bb14 = {
_27.fld1 = [(-34721540700208225537350604299399608819_i128),(-12621233618123882363328870010469230711_i128),169153771937422127788144457170822869047_i128,64485688425807109590479100966228097623_i128,(-91829610344765316477945632768351767675_i128),(-16494607907939490686174866513278006316_i128),129410536070304430396346103854410168534_i128,(-122862180521560910137157455741169310519_i128)];
_27.fld0.fld0 = [63341261942379094761868743893333274582_i128,31248808457178437907985533542143387019_i128,(-91008250649609592574163995049347183558_i128),(-157162294365033775252607996168502417134_i128),34713296561743786718647564230676315358_i128,106380337459495123355908027279524961231_i128,(-73452039216099355275591285884770002773_i128)];
_27.fld1 = [(-132254302934307202876161660830020149940_i128),(-146004648849150429214485555202969539066_i128),(-17412953998962320199612037874014116754_i128),15075302863896251855862310431703820441_i128,43534848190228495348428945092016872805_i128,(-94382174537959078712213322445102294347_i128),132341329525024018803753306193227675294_i128,35590523177620538673169868688896686797_i128];
_29.fld0 = (_31,);
_5.3.0 = [_23.fld2.fld1.0,_23.fld2.fld1.0,_23.fld2.fld1.0,_23.fld2.fld1.0,_23.fld2.fld1.0];
_21.fld1 = _13.fld6.fld3;
_13.fld3 = core::ptr::addr_of!((*RET));
_36 = [(*_4),(*_4),(*_4),_8,(*_4),(*_4)];
_5.3 = (_13.fld6.fld0.0, _13.fld6.fld0.1);
_34.fld3 = -_9;
_39 = _23.fld2.fld1.0 as f32;
_13.fld6.fld2 = core::ptr::addr_of!((*_4));
_39 = 160331079776689426674613296739613905046_i128 as f32;
_5.1 = _2.fld5;
_27 = Adt61 { fld0: _25,fld1: _2.fld1.fld2,fld2: _13.fld6.fld0.0,fld3: (-22995_i16) };
_13.fld6.fld1 = _27.fld0;
_35.1 = _23.fld2.fld0.1.1 as u8;
_35.1 = _23.fld2.fld1.0 as u8;
(*RET) = _15 | _15;
_21 = Adt54 { fld0: _11.fld0,fld1: _11.fld1,fld2: _11.fld2,fld3: _19,fld4: _13.fld2 };
_37 = _29;
_13.fld5 = [(*_4),_8,_8,(*_4),_8,(*_4)];
RET = core::ptr::addr_of!((*RET));
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(17_usize, 10_usize, Move(_10), 15_usize, Move(_15), 18_usize, Move(_18), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(17_usize, 6_usize, Move(_6), 7_usize, Move(_7), 3_usize, Move(_3), 36_usize, Move(_36)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{4d4cc}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(77_i8), std::hint::black_box((-4498_i16)), std::hint::black_box(46381652881677565934522819997909155645_u128), std::hint::black_box(5585268481711013729_i64), std::hint::black_box(16040706392996167218632426469407920173_i128), std::hint::black_box(534658643915440577_usize), std::hint::black_box(22_u8), std::hint::black_box(64274_u16), std::hint::black_box(2332839774_u32), std::hint::black_box(18347398691948467286_u64));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: i64,
fld1: ([i32; 5], [isize; 2]),
fld2: [i8; 3],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: [i128; 7],
}
#[derive(Debug)]
pub struct Adt51 {
fld0: ([u128; 5],),
fld1: *mut f32,
fld2: [i128; 8],
}
#[derive(Debug)]
pub struct Adt52 {
fld0: *const u16,
fld1: Adt51,
fld2: ([i32; 2], (i64, char), f64, i64),
fld3: [i32; 5],
fld4: *const i32,
fld5: [u64; 6],
fld6: *const ([i32; 5], u8),
fld7: Adt50,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: bool,
fld1: ([isize; 2], [u64; 6], u128, ([i32; 5], u8)),
fld2: i128,
fld3: u64,
fld4: (i64, char),
fld5: [u64; 3],
fld6: [char; 2],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: u64,
fld1: usize,
fld2: [char; 2],
fld3: i8,
fld4: f32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: [i128; 4],
fld1: ([i32; 2], (i64, char), f64, i64),
fld2: [isize; 2],
fld3: [i32; 8],
fld4: i16,
fld5: [i128; 8],
fld6: [i32; 4],
}
#[derive(Debug)]
pub struct Adt56 {
fld0: ([i32; 5], u8),
fld1: Adt50,
fld2: *const u16,
fld3: usize,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: ([isize; 2], [u64; 6], u128, ([i32; 5], u8)),
fld1: i32,
fld2: u64,
fld3: f64,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: [i128; 7],
fld1: *const i32,
fld2: (u16, [u16; 6], [isize; 2]),
fld3: Adt54,
fld4: ([i32; 5], u8),
fld5: *mut f32,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: ([isize; 2], [u64; 6], u128, ([i32; 5], u8)),
fld1: (i64, char),
fld2: *const ([i32; 5], u8),
fld3: Adt53,
fld4: f64,
fld5: *const ([u128; 5],),
fld6: i64,
fld7: *mut f32,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: ([i32; 2], (i64, char), f64, i64),
fld1: (i32, *mut i16),
fld2: f64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: Adt50,
fld1: [i128; 8],
fld2: [i32; 5],
fld3: i16,
}
#[derive(Debug)]
pub struct Adt62 {
fld0: i64,
fld1: (i64, char),
fld2: Adt60,
fld3: [u64; 3],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt63 {
fld0: ([i32; 2],),
}
#[derive(Debug)]
pub struct Adt64 {
fld0: bool,
fld1: *mut i64,
fld2: f32,
fld3: *const bool,
fld4: [isize; 2],
fld5: [u16; 6],
fld6: Adt56,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: [i32; 4],
fld1: Adt58,
}

