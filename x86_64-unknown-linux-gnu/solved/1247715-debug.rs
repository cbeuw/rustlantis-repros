#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> i16 {
mir! {
type RET = i16;
let _15: [i128; 2];
let _16: ([i16; 6],);
let _17: char;
let _18: [u16; 8];
let _19: char;
let _20: (f64,);
let _21: Adt52;
let _22: f64;
let _23: [u16; 8];
let _24: isize;
let _25: f64;
let _26: Adt52;
let _27: Adt49;
let _28: usize;
let _29: u128;
let _30: usize;
let _31: ([u16; 8], i128, bool, f64);
let _32: u32;
let _33: i16;
let _34: Adt42;
let _35: [u16; 8];
let _36: (usize, u64);
let _37: &'static u8;
let _38: (i128, (usize, u64));
let _39: bool;
let _40: char;
let _41: (f64,);
let _42: (f64,);
let _43: Adt42;
let _44: i64;
let _45: isize;
let _46: [isize; 3];
let _47: Adt53;
let _48: f32;
let _49: i16;
let _50: f64;
let _51: Adt45;
let _52: usize;
let _53: bool;
let _54: Adt45;
let _55: u16;
let _56: ([i32; 5],);
let _57: [i32; 5];
let _58: Adt42;
let _59: f32;
let _60: Adt50;
let _61: Adt49;
let _62: char;
let _63: u16;
let _64: char;
let _65: ([i16; 6],);
let _66: ([i32; 5],);
let _67: isize;
let _68: f32;
let _69: [isize; 3];
let _70: u32;
let _71: isize;
let _72: (f64,);
let _73: ();
let _74: ();
{
_5 = 4470_i16 * 24615_i16;
_14 = 2908417160007898663_i64 as u128;
_12 = 3988418981_u32;
_10 = 89_u8;
_3 = -83_isize;
_1 = true;
_1 = true;
RET = _12 as i16;
_9 = _12 as usize;
_2 = '\u{63f1}';
_8 = 156878722163493639099851991934550735932_i128;
_16.0 = [_5,RET,RET,_5,_5,RET];
_10 = 68_u8 ^ 206_u8;
_12 = 2656175281_u32;
_4 = (-8487333214656641695_i64) as i8;
_7 = -5557459222741372747_i64;
_5 = RET * RET;
_6 = (-1974446858_i32) + 187350274_i32;
_8 = RET as i128;
_12 = 1457826718_u32 * 2848323007_u32;
_14 = _3 as u128;
_16.0 = [_5,_5,_5,RET,_5,RET];
_13 = 12861000592385479933_u64;
_3 = 9223372036854775807_isize;
_7 = _12 as i64;
_15 = [_8,_8];
Call(RET = fn1(_16.0, _3, _13, _13, _10, _7, _6, _8, _3, _3, _16.0, _6, _3, _3, _14), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = false;
_4 = -(-102_i8);
_2 = '\u{34774}';
_8 = _6 as i128;
_10 = 185_u8 * 51_u8;
_6 = (-1674845988_i32) - 2104517009_i32;
_5 = _8 as i16;
_13 = 6573738097698594323_u64;
_11 = 572_u16;
_6 = _3 as i32;
_5 = -RET;
_20.0 = _8 as f64;
_9 = !18376161676811296294_usize;
_5 = _6 as i16;
_1 = false & true;
_17 = _2;
_14 = 321609766407736094633094242057616037861_u128 >> _4;
_1 = true;
_13 = 7104353157092979277_u64;
_2 = _17;
_9 = !2235742391118580717_usize;
Goto(bb2)
}
bb2 = {
_14 = 215980199151274937125979734704272266522_u128;
_8 = (-19010730108883031127561756281800754708_i128);
RET = _5;
_11 = 62399_u16;
_10 = 21_u8;
_8 = -169647288663167007257860144423217512699_i128;
_6 = 1521726603_i32 - (-978406084_i32);
match _3 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb3 = {
_20.0 = _6 as f64;
_19 = _17;
_18 = [_11,_11,_11,_11,_11,_11,_11,_11];
_25 = _11 as f64;
_20.0 = _25 - _25;
_27.fld3 = [_8,_8];
_16.0 = [RET,_5,_5,RET,_5,_5];
_7 = !533030669500430626_i64;
_3 = !(-9223372036854775808_isize);
_11 = _7 as u16;
_27.fld0 = !_1;
_24 = _27.fld0 as isize;
_27.fld6 = [_6];
_24 = -_3;
_27.fld1 = [_11];
_1 = _27.fld0;
_15 = _27.fld3;
_31.2 = !_27.fld0;
_27.fld6 = [_6];
_27.fld2 = (_14,);
_30 = _9;
_27.fld6 = [_6];
_27.fld4.fld0 = core::ptr::addr_of!(_19);
Goto(bb4)
}
bb4 = {
_3 = _24 | _24;
_25 = _20.0;
_23 = _18;
_20 = (_25,);
_32 = _12;
_10 = _4 as u8;
_31.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
_14 = _27.fld2.0;
_31 = (_23, _8, _27.fld0, _25);
_27.fld5 = _6 & _6;
RET = _3 as i16;
_22 = _31.3 * _20.0;
_25 = _20.0 + _22;
_2 = _19;
_30 = _2 as usize;
_29 = _31.1 as u128;
Goto(bb5)
}
bb5 = {
_27.fld7 = _31.1;
_10 = 35_u8 - 253_u8;
_33 = -_5;
_36.1 = _27.fld5 as u64;
_27.fld0 = _24 > _3;
_28 = !_30;
_27.fld3 = [_27.fld7,_8];
_2 = _17;
_27.fld4.fld0 = core::ptr::addr_of!(_2);
_8 = !_27.fld7;
_11 = _29 as u16;
_10 = 163_u8 >> _36.1;
_3 = -_24;
_16.0 = [_5,RET,_33,RET,_5,RET];
_38.1.0 = _9 & _30;
_28 = _9;
Goto(bb6)
}
bb6 = {
_32 = !_12;
_36.0 = _28;
_27.fld0 = _30 < _38.1.0;
_27.fld7 = _8;
_27.fld0 = _1;
_42.0 = _10 as f64;
_37 = &_10;
_38.1.1 = _36.1;
_38 = (_27.fld7, _36);
_41 = (_22,);
_27.fld4.fld0 = core::ptr::addr_of!(_19);
_35 = _31.0;
_20.0 = _30 as f64;
_11 = 19870_u16;
_40 = _19;
_7 = 3896081119537345609_i64;
_38.1.1 = !_36.1;
_27.fld3 = [_27.fld7,_8];
_46 = [_24,_24,_24];
_34 = Adt42::Variant1 { fld0: _27.fld2,fld1: _31.3 };
SetDiscriminant(_34, 1);
Goto(bb7)
}
bb7 = {
_18 = _31.0;
_36.0 = !_28;
_34 = Adt42::Variant1 { fld0: _27.fld2,fld1: _31.3 };
_27.fld2.0 = _29;
_6 = -_27.fld5;
_52 = _9;
_44 = _7 & _7;
Goto(bb8)
}
bb8 = {
_27.fld3 = [_8,_31.1];
SetDiscriminant(_34, 0);
place!(Field::<[isize; 3]>(Variant(_34, 0), 5)) = [_3,_24,_3];
_31.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
_39 = !_1;
_25 = -_42.0;
_27.fld3 = [_38.0,_27.fld7];
_9 = _38.1.0 >> _7;
_15 = _27.fld3;
place!(Field::<[i128; 2]>(Variant(_34, 0), 1)) = [_31.1,_31.1];
_27.fld5 = _6 - _6;
_49 = RET >> _24;
_55 = _36.1 as u16;
_43 = Adt42::Variant1 { fld0: _27.fld2,fld1: _41.0 };
place!(Field::<(u128,)>(Variant(_43, 1), 0)).0 = _2 as u128;
Goto(bb9)
}
bb9 = {
_36 = _38.1;
_43 = Adt42::Variant1 { fld0: _27.fld2,fld1: _22 };
_5 = _38.1.0 as i16;
_56.0 = [_27.fld5,_6,_6,_27.fld5,_27.fld5];
_48 = RET as f32;
_27.fld2.0 = !Field::<(u128,)>(Variant(_43, 1), 0).0;
_8 = _38.0;
_38 = (_8, _36);
_3 = _24 & _24;
_42.0 = (*_37) as f64;
_27.fld3 = [_8,_27.fld7];
_27.fld3 = Field::<[i128; 2]>(Variant(_34, 0), 1);
_18 = _23;
_2 = _17;
_45 = _10 as isize;
place!(Field::<f64>(Variant(_43, 1), 1)) = _36.0 as f64;
place!(Field::<bool>(Variant(_34, 0), 0)) = !_31.2;
_28 = !_38.1.0;
SetDiscriminant(_43, 0);
place!(Field::<([i16; 6],)>(Variant(_43, 0), 2)).0 = [_33,RET,RET,RET,RET,_5];
_50 = _27.fld2.0 as f64;
_19 = _40;
place!(Field::<[isize; 3]>(Variant(_43, 0), 5)) = _46;
_27.fld5 = -_6;
_27.fld0 = _31.1 < _38.0;
_49 = _33 ^ _5;
_37 = &(*_37);
_27.fld2.0 = !_29;
Goto(bb10)
}
bb10 = {
place!(Field::<bool>(Variant(_43, 0), 0)) = !_31.2;
place!(Field::<f64>(Variant(_34, 0), 4)) = _11 as f64;
_16 = Field::<([i16; 6],)>(Variant(_43, 0), 2);
place!(Field::<([i16; 6],)>(Variant(_34, 0), 2)) = Field::<([i16; 6],)>(Variant(_43, 0), 2);
_45 = _3;
place!(Field::<([i16; 6],)>(Variant(_34, 0), 2)) = _16;
place!(Field::<usize>(Variant(_43, 0), 3)) = _36.0 - _9;
_4 = (-119_i8) & (-61_i8);
_15 = Field::<[i128; 2]>(Variant(_34, 0), 1);
_32 = !_12;
_35 = [_55,_55,_11,_55,_55,_55,_55,_11];
_58 = Adt42::Variant1 { fld0: _27.fld2,fld1: _50 };
_17 = _19;
_37 = &(*_37);
_27.fld4.fld0 = core::ptr::addr_of!(_40);
_9 = Field::<usize>(Variant(_43, 0), 3) - _36.0;
_41 = (Field::<f64>(Variant(_34, 0), 4),);
_18 = [_55,_55,_55,_55,_55,_55,_11,_55];
_45 = _3;
_7 = !_44;
SetDiscriminant(_58, 0);
_61.fld4.fld0 = _27.fld4.fld0;
match _13 {
0 => bb8,
1 => bb2,
7104353157092979277 => bb12,
_ => bb11
}
}
bb11 = {
_14 = 215980199151274937125979734704272266522_u128;
_8 = (-19010730108883031127561756281800754708_i128);
RET = _5;
_11 = 62399_u16;
_10 = 21_u8;
_8 = -169647288663167007257860144423217512699_i128;
_6 = 1521726603_i32 - (-978406084_i32);
match _3 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb12 = {
_61.fld2.0 = !_14;
_58 = Adt42::Variant0 { fld0: _27.fld0,fld1: _15,fld2: Field::<([i16; 6],)>(Variant(_43, 0), 2),fld3: Field::<usize>(Variant(_43, 0), 3),fld4: _22,fld5: Field::<[isize; 3]>(Variant(_34, 0), 5) };
_30 = _36.0;
_56.0 = [_27.fld5,_6,_6,_27.fld5,_27.fld5];
_37 = &(*_37);
SetDiscriminant(_58, 1);
place!(Field::<([i16; 6],)>(Variant(_43, 0), 2)) = (Field::<([i16; 6],)>(Variant(_34, 0), 2).0,);
_53 = _27.fld0;
place!(Field::<[i128; 2]>(Variant(_43, 0), 1)) = [_31.1,_31.1];
_59 = _48 + _48;
_31.0 = [_55,_55,_11,_55,_55,_55,_55,_55];
_27.fld0 = _13 <= _36.1;
_14 = _7 as u128;
_42.0 = -_22;
_64 = _40;
_3 = _24;
place!(Field::<([i16; 6],)>(Variant(_43, 0), 2)) = (_16.0,);
_67 = _45;
_13 = !_36.1;
_46 = Field::<[isize; 3]>(Variant(_34, 0), 5);
match _11 {
0 => bb11,
1 => bb2,
2 => bb10,
3 => bb13,
4 => bb14,
19870 => bb16,
_ => bb15
}
}
bb13 = {
_14 = 215980199151274937125979734704272266522_u128;
_8 = (-19010730108883031127561756281800754708_i128);
RET = _5;
_11 = 62399_u16;
_10 = 21_u8;
_8 = -169647288663167007257860144423217512699_i128;
_6 = 1521726603_i32 - (-978406084_i32);
match _3 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb14 = {
_3 = _24 | _24;
_25 = _20.0;
_23 = _18;
_20 = (_25,);
_32 = _12;
_10 = _4 as u8;
_31.0 = [_11,_11,_11,_11,_11,_11,_11,_11];
_14 = _27.fld2.0;
_31 = (_23, _8, _27.fld0, _25);
_27.fld5 = _6 & _6;
RET = _3 as i16;
_22 = _31.3 * _20.0;
_25 = _20.0 + _22;
_2 = _19;
_30 = _2 as usize;
_29 = _31.1 as u128;
Goto(bb5)
}
bb15 = {
_36 = _38.1;
_43 = Adt42::Variant1 { fld0: _27.fld2,fld1: _22 };
_5 = _38.1.0 as i16;
_56.0 = [_27.fld5,_6,_6,_27.fld5,_27.fld5];
_48 = RET as f32;
_27.fld2.0 = !Field::<(u128,)>(Variant(_43, 1), 0).0;
_8 = _38.0;
_38 = (_8, _36);
_3 = _24 & _24;
_42.0 = (*_37) as f64;
_27.fld3 = [_8,_27.fld7];
_27.fld3 = Field::<[i128; 2]>(Variant(_34, 0), 1);
_18 = _23;
_2 = _17;
_45 = _10 as isize;
place!(Field::<f64>(Variant(_43, 1), 1)) = _36.0 as f64;
place!(Field::<bool>(Variant(_34, 0), 0)) = !_31.2;
_28 = !_38.1.0;
SetDiscriminant(_43, 0);
place!(Field::<([i16; 6],)>(Variant(_43, 0), 2)).0 = [_33,RET,RET,RET,RET,_5];
_50 = _27.fld2.0 as f64;
_19 = _40;
place!(Field::<[isize; 3]>(Variant(_43, 0), 5)) = _46;
_27.fld5 = -_6;
_27.fld0 = _31.1 < _38.0;
_49 = _33 ^ _5;
_37 = &(*_37);
_27.fld2.0 = !_29;
Goto(bb10)
}
bb16 = {
place!(Field::<[isize; 3]>(Variant(_34, 0), 5)) = [_67,_3,_67];
_27.fld5 = _6 + _6;
_72 = (_25,);
_61.fld5 = _6;
_60 = Adt50 { fld0: _27.fld3,fld1: Field::<usize>(Variant(_43, 0), 3) };
_38 = (_8, _36);
_62 = _19;
place!(Field::<[isize; 3]>(Variant(_43, 0), 5)) = [_24,_45,_3];
Goto(bb17)
}
bb17 = {
Call(_73 = dump_var(0_usize, 8_usize, Move(_8), 2_usize, Move(_2), 11_usize, Move(_11), 67_usize, Move(_67)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_73 = dump_var(0_usize, 39_usize, Move(_39), 6_usize, Move(_6), 30_usize, Move(_30), 3_usize, Move(_3)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_73 = dump_var(0_usize, 53_usize, Move(_53), 24_usize, Move(_24), 49_usize, Move(_49), 23_usize, Move(_23)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_73 = dump_var(0_usize, 18_usize, Move(_18), 40_usize, Move(_40), 14_usize, Move(_14), 45_usize, Move(_45)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_73 = dump_var(0_usize, 35_usize, Move(_35), 55_usize, Move(_55), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_73 = dump_var(0_usize, 52_usize, Move(_52), 74_usize, _74, 74_usize, _74, 74_usize, _74), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [i16; 6],mut _2: isize,mut _3: u64,mut _4: u64,mut _5: u8,mut _6: i64,mut _7: i32,mut _8: i128,mut _9: isize,mut _10: isize,mut _11: [i16; 6],mut _12: i32,mut _13: isize,mut _14: isize,mut _15: u128) -> i16 {
mir! {
type RET = i16;
let _16: u32;
let _17: &'static u8;
let _18: i32;
let _19: isize;
let _20: f64;
let _21: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _22: ([i16; 6],);
let _23: f32;
let _24: Adt41;
let _25: (u128,);
let _26: [i32; 1];
let _27: i32;
let _28: [u16; 8];
let _29: u32;
let _30: i64;
let _31: Adt41;
let _32: *const (u128,);
let _33: usize;
let _34: isize;
let _35: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _36: (i128, (usize, u64));
let _37: ([i16; 6],);
let _38: ([i32; 5],);
let _39: f64;
let _40: i8;
let _41: ();
let _42: ();
{
_11 = _1;
RET = 17421_i16 << _14;
_16 = !4124554852_u32;
RET = !(-26049_i16);
Call(_4 = core::intrinsics::transmute(_14), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = 102020231933560081101884294727536399_i128;
_8 = -(-140749676290634597339459615237731669530_i128);
_3 = _8 as u64;
_13 = _16 as isize;
_6 = !4336518126764413858_i64;
_10 = _2;
_5 = 252_u8;
_12 = _7;
_1 = _11;
_16 = RET as u32;
_14 = _4 as isize;
RET = _15 as i16;
_4 = !_3;
Call(_21.2 = fn2(_2, _15, _12, _14, _16, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_21.1 = (_11,);
_10 = _2;
_1 = _11;
_14 = _9 << _13;
_14 = RET as isize;
_21.0 = [_12,_12,_12,_12,_12];
_13 = _12 as isize;
_15 = 5_usize as u128;
_6 = _21.2 >> _12;
_25.0 = !_15;
_21.3 = _5 % _5;
_11 = [RET,RET,RET,RET,RET,RET];
_18 = _12 - _12;
_7 = _18 >> _6;
_25.0 = _21.2 as u128;
_22.0 = _21.1.0;
_21.3 = _5;
_16 = !3977048581_u32;
_22 = (_1,);
_22 = (_11,);
_8 = !48358880728709342300705795604869325496_i128;
_5 = _21.3;
_17 = &_21.3;
RET = (-20460_i16) << _6;
_5 = _21.3 + (*_17);
match _21.3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
252 => bb9,
_ => bb8
}
}
bb3 = {
_8 = 102020231933560081101884294727536399_i128;
_8 = -(-140749676290634597339459615237731669530_i128);
_3 = _8 as u64;
_13 = _16 as isize;
_6 = !4336518126764413858_i64;
_10 = _2;
_5 = 252_u8;
_12 = _7;
_1 = _11;
_16 = RET as u32;
_14 = _4 as isize;
RET = _15 as i16;
_4 = !_3;
Call(_21.2 = fn2(_2, _15, _12, _14, _16, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_26 = [_18];
_4 = (*_17) as u64;
_8 = _21.2 as i128;
_27 = _18 * _7;
_23 = (*_17) as f32;
_3 = (-74_i8) as u64;
_28 = [46007_u16,22587_u16,53535_u16,28640_u16,29763_u16,265_u16,61115_u16,32427_u16];
_21.2 = -_6;
_8 = 59120_u16 as i128;
_13 = 121_i8 as isize;
_4 = (*_17) as u64;
_22 = (_1,);
_13 = _14;
_14 = _9;
Goto(bb10)
}
bb10 = {
_7 = _18 - _27;
_11 = [RET,RET,RET,RET,RET,RET];
_15 = _25.0 | _25.0;
_19 = _10;
_19 = -_9;
_3 = _4;
_4 = _3 - _3;
_18 = _27 * _7;
_30 = _21.2 + _21.2;
_15 = _3 as u128;
_21.4 = -_23;
_7 = _18;
_21.4 = -_23;
_8 = 75422413963059925759936746183929779712_i128;
_13 = _9;
_7 = !_27;
_21.0 = [_18,_27,_18,_18,_18];
Goto(bb11)
}
bb11 = {
_16 = !2702275398_u32;
_2 = _14 * _13;
_28 = [23157_u16,29757_u16,58892_u16,42513_u16,36930_u16,30204_u16,27048_u16,49446_u16];
_21.2 = _6 & _6;
_6 = '\u{61556}' as i64;
_28 = [18303_u16,33938_u16,35792_u16,38283_u16,52490_u16,39217_u16,55026_u16,29749_u16];
_21.1 = _22;
_20 = _8 as f64;
_14 = _10;
_8 = (-144728203585632236910859791143030095528_i128) >> _18;
_27 = _15 as i32;
_6 = true as i64;
_27 = _7;
_3 = !_4;
_18 = _7 + _27;
_21.1.0 = [RET,RET,RET,RET,RET,RET];
RET = 26331_i16 << _21.3;
_25 = (_15,);
RET = _23 as i16;
_3 = _4;
_23 = -_21.4;
_19 = _14 >> _18;
Goto(bb12)
}
bb12 = {
_15 = _25.0 | _25.0;
_23 = _21.4;
_2 = _13;
_35.0 = [_18,_27,_12,_27,_7];
_22 = _21.1;
_36.1.1 = !_3;
Goto(bb13)
}
bb13 = {
_30 = _21.2 - _6;
_23 = _21.4;
_35.2 = _6 << _19;
_33 = 64_i8 as usize;
_35.2 = !_6;
_36.1 = (_33, _4);
_36.0 = _8;
_2 = _16 as isize;
_35.3 = (*_17) + (*_17);
_1 = _21.1.0;
RET = 10733_i16 ^ (-27404_i16);
_32 = core::ptr::addr_of!(_25);
_35.2 = -_30;
_35 = _21;
_34 = _19;
_36.1 = (_33, _3);
_3 = '\u{a449f}' as u64;
_35.3 = _16 as u8;
_22.0 = [RET,RET,RET,RET,RET,RET];
_23 = -_35.4;
match _14 {
0 => bb2,
1 => bb14,
9223372036854775807 => bb16,
_ => bb15
}
}
bb14 = {
_15 = _25.0 | _25.0;
_23 = _21.4;
_2 = _13;
_35.0 = [_18,_27,_12,_27,_7];
_22 = _21.1;
_36.1.1 = !_3;
Goto(bb13)
}
bb15 = {
Return()
}
bb16 = {
RET = -(-21354_i16);
_38 = (_21.0,);
_35.1 = (_11,);
_9 = _19 & _19;
_2 = _18 as isize;
_21.1.0 = [RET,RET,RET,RET,RET,RET];
_8 = !_36.0;
_25.0 = _15;
_25 = (_15,);
_29 = _35.2 as u32;
Goto(bb17)
}
bb17 = {
Call(_41 = dump_var(1_usize, 16_usize, Move(_16), 26_usize, Move(_26), 6_usize, Move(_6), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(1_usize, 22_usize, Move(_22), 38_usize, Move(_38), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(1_usize, 4_usize, Move(_4), 19_usize, Move(_19), 8_usize, Move(_8), 7_usize, Move(_7)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(1_usize, 25_usize, Move(_25), 2_usize, Move(_2), 42_usize, _42, 42_usize, _42), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: isize,mut _2: u128,mut _3: i32,mut _4: isize,mut _5: u32,mut _6: isize) -> i64 {
mir! {
type RET = i64;
let _7: char;
let _8: Adt49;
let _9: f64;
let _10: (u16, (u16, f32, i64), i8);
let _11: bool;
let _12: i128;
let _13: isize;
let _14: [i16; 6];
let _15: isize;
let _16: [i128; 2];
let _17: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _18: ([u16; 8], i128, bool, f64);
let _19: (i128, (usize, u64));
let _20: ();
let _21: ();
{
_2 = 125375990068202516492119709311231165937_u128;
_8.fld1 = [62040_u16];
_8.fld2 = (_2,);
_8.fld6 = [_3];
_3 = _5 as i32;
_3 = (-4706_i16) as i32;
_4 = _1;
RET = -8528134734566925526_i64;
_8.fld0 = _1 >= _1;
_8.fld3 = [49527916756213668087952868179614575768_i128,(-30841541368611628154216309335433942877_i128)];
_8.fld5 = _3 ^ _3;
_8.fld2.0 = !_2;
_8.fld3 = [166095418677445191953317949692666792313_i128,(-5382984387246656783984751110356358825_i128)];
_10.1.2 = RET;
_4 = -_6;
_8.fld1 = [44883_u16];
_8.fld7 = 56011285388192496894108941642851484595_i128 | (-54090022270709771975708109044287952358_i128);
_8.fld4.fld0 = core::ptr::addr_of!(_7);
_7 = '\u{2e8d7}';
_13 = (-37_i8) as isize;
_14 = [(-8867_i16),(-26219_i16),(-12187_i16),(-31553_i16),(-5904_i16),(-20435_i16)];
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
9223372036854775807 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_8.fld0 = false & false;
_10.1.1 = _5 as f32;
_3 = !_8.fld5;
_10.1.0 = 36137_u16 ^ 8993_u16;
_1 = _8.fld0 as isize;
match _6 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_11 = _6 < _1;
Call(_8.fld5 = fn3(_8.fld6, _14, _14, _8.fld0, _10.1.2, _8.fld7, _8.fld4.fld0, _6, _14, _7, _5, _10.1.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_8.fld4.fld0 = core::ptr::addr_of!(_7);
_8.fld3 = [_8.fld7,_8.fld7];
_11 = _7 <= _7;
_10.2 = (-30_i8) << _10.1.0;
_5 = 1465022154_u32 << _10.1.0;
_10.1.0 = 29091_u16;
_8.fld4.fld0 = core::ptr::addr_of!(_7);
_16 = [_8.fld7,_8.fld7];
RET = -_10.1.2;
_7 = '\u{94508}';
_6 = -_4;
RET = _10.1.2 + _10.1.2;
RET = !_10.1.2;
_17.0 = [_8.fld5,_3,_8.fld5,_3,_3];
_5 = _2 as u32;
_8.fld7 = !(-81267147072472152898498776331214573878_i128);
_1 = _4 ^ _4;
_17.0 = [_8.fld5,_3,_8.fld5,_3,_8.fld5];
_16 = [_8.fld7,_8.fld7];
_10.0 = _10.1.0 << _3;
match _10.1.0 {
29091 => bb14,
_ => bb3
}
}
bb14 = {
_14 = [16403_i16,20027_i16,21983_i16,(-1919_i16),22868_i16,32722_i16];
_17.2 = _10.1.2 ^ _10.1.2;
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(2_usize, 16_usize, Move(_16), 14_usize, Move(_14), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(2_usize, 7_usize, Move(_7), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i32; 1],mut _2: [i16; 6],mut _3: [i16; 6],mut _4: bool,mut _5: i64,mut _6: i128,mut _7: *const char,mut _8: isize,mut _9: [i16; 6],mut _10: char,mut _11: u32,mut _12: u16) -> i32 {
mir! {
type RET = i32;
let _13: i8;
let _14: *const (u128,);
let _15: ([u16; 8], i128, bool, f64);
let _16: ([i32; 5],);
let _17: *const (u128,);
let _18: i16;
let _19: [u16; 8];
let _20: char;
let _21: Adt55;
let _22: u8;
let _23: ();
let _24: ();
{
_11 = 13915500940155169110649519822074477131_u128 as u32;
_8 = (-108_isize);
_6 = -(-169623341936655603236577536635834171537_i128);
_4 = _12 < _12;
RET = -(-1594021653_i32);
_13 = !3_i8;
Call(_6 = fn4(_4, _9, _8, _9, _2, _3, _9, _1, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = core::ptr::addr_of!(_10);
_6 = 18_u8 as i128;
_12 = 55900_u16;
_10 = '\u{1bb01}';
_3 = _9;
_10 = '\u{3f448}';
_15.3 = 158_u8 as f64;
_10 = '\u{6e0f0}';
RET = 1536152820_i32 >> _5;
_12 = 31284_u16;
_13 = 8367377817848352720_usize as i8;
_15.1 = _6 + _6;
_1 = [RET];
_5 = (-3902974204136117132_i64) - (-8748249259299114196_i64);
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!((*_7));
_16.0 = [RET,RET,RET,RET,RET];
_15.2 = _4;
_4 = _5 < _5;
_9 = [5456_i16,2665_i16,(-4032_i16),6917_i16,(-3118_i16),(-23735_i16)];
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!(_10);
_6 = _15.1;
_16.0 = [RET,RET,RET,RET,RET];
RET = !(-106898537_i32);
_15.0 = [_12,_12,_12,_12,_12,_12,_12,_12];
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
31284 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_10 = '\u{83694}';
_15.0 = [_12,_12,_12,_12,_12,_12,_12,_12];
_13 = (-90_i8);
_9 = [556_i16,13018_i16,(-19971_i16),(-28238_i16),(-11181_i16),(-11624_i16)];
_11 = (-13306_i16) as u32;
_8 = 6_usize as isize;
match _12 {
0 => bb7,
1 => bb8,
2 => bb9,
31284 => bb11,
_ => bb10
}
}
bb7 = {
_7 = core::ptr::addr_of!(_10);
_6 = 18_u8 as i128;
_12 = 55900_u16;
_10 = '\u{1bb01}';
_3 = _9;
_10 = '\u{3f448}';
_15.3 = 158_u8 as f64;
_10 = '\u{6e0f0}';
RET = 1536152820_i32 >> _5;
_12 = 31284_u16;
_13 = 8367377817848352720_usize as i8;
_15.1 = _6 + _6;
_1 = [RET];
_5 = (-3902974204136117132_i64) - (-8748249259299114196_i64);
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!((*_7));
_16.0 = [RET,RET,RET,RET,RET];
_15.2 = _4;
_4 = _5 < _5;
_9 = [5456_i16,2665_i16,(-4032_i16),6917_i16,(-3118_i16),(-23735_i16)];
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!(_10);
_6 = _15.1;
_16.0 = [RET,RET,RET,RET,RET];
RET = !(-106898537_i32);
_15.0 = [_12,_12,_12,_12,_12,_12,_12,_12];
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
31284 => bb6,
_ => bb5
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_16.0 = [RET,RET,RET,RET,RET];
_4 = _5 < _5;
_8 = _15.2 as isize;
RET = !1556376997_i32;
RET = _11 as i32;
Goto(bb12)
}
bb12 = {
_12 = 41665_u16 ^ 64831_u16;
_15.1 = _6 & _6;
_3 = [23910_i16,(-29748_i16),(-19906_i16),29741_i16,7340_i16,8188_i16];
_18 = 12145_i16 + (-10192_i16);
_11 = 3504081202_u32 << _8;
_19 = _15.0;
_8 = _4 as isize;
Goto(bb13)
}
bb13 = {
_2 = [_18,_18,_18,_18,_18,_18];
_7 = core::ptr::addr_of!((*_7));
_12 = _4 as u16;
_8 = !(-9223372036854775808_isize);
_18 = _15.3 as i16;
_8 = -(-67_isize);
RET = !799605091_i32;
_6 = 78325466785901506230565879014000738966_u128 as i128;
_6 = -_15.1;
_3 = [_18,_18,_18,_18,_18,_18];
_12 = !15626_u16;
_10 = '\u{cfe7f}';
_5 = (-9187636938667777982_i64);
_13 = 6_i8 & 127_i8;
_12 = 4080_u16 + 48944_u16;
_18 = _15.3 as i16;
_13 = 76_i8;
match _5 {
0 => bb11,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
340282366920938463454186970493100433474 => bb20,
_ => bb19
}
}
bb14 = {
_7 = core::ptr::addr_of!(_10);
_6 = 18_u8 as i128;
_12 = 55900_u16;
_10 = '\u{1bb01}';
_3 = _9;
_10 = '\u{3f448}';
_15.3 = 158_u8 as f64;
_10 = '\u{6e0f0}';
RET = 1536152820_i32 >> _5;
_12 = 31284_u16;
_13 = 8367377817848352720_usize as i8;
_15.1 = _6 + _6;
_1 = [RET];
_5 = (-3902974204136117132_i64) - (-8748249259299114196_i64);
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!((*_7));
_16.0 = [RET,RET,RET,RET,RET];
_15.2 = _4;
_4 = _5 < _5;
_9 = [5456_i16,2665_i16,(-4032_i16),6917_i16,(-3118_i16),(-23735_i16)];
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!(_10);
_6 = _15.1;
_16.0 = [RET,RET,RET,RET,RET];
RET = !(-106898537_i32);
_15.0 = [_12,_12,_12,_12,_12,_12,_12,_12];
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
31284 => bb6,
_ => bb5
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_7 = core::ptr::addr_of!(_10);
_6 = 18_u8 as i128;
_12 = 55900_u16;
_10 = '\u{1bb01}';
_3 = _9;
_10 = '\u{3f448}';
_15.3 = 158_u8 as f64;
_10 = '\u{6e0f0}';
RET = 1536152820_i32 >> _5;
_12 = 31284_u16;
_13 = 8367377817848352720_usize as i8;
_15.1 = _6 + _6;
_1 = [RET];
_5 = (-3902974204136117132_i64) - (-8748249259299114196_i64);
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!((*_7));
_16.0 = [RET,RET,RET,RET,RET];
_15.2 = _4;
_4 = _5 < _5;
_9 = [5456_i16,2665_i16,(-4032_i16),6917_i16,(-3118_i16),(-23735_i16)];
_16.0 = [RET,RET,RET,RET,RET];
_7 = core::ptr::addr_of!(_10);
_6 = _15.1;
_16.0 = [RET,RET,RET,RET,RET];
RET = !(-106898537_i32);
_15.0 = [_12,_12,_12,_12,_12,_12,_12,_12];
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
31284 => bb6,
_ => bb5
}
}
bb20 = {
_20 = (*_7);
_12 = !40104_u16;
_18 = 19627_i16 | 16580_i16;
_5 = (-5403421066946640641_i64) + (-5996756295547777391_i64);
_9 = [_18,_18,_18,_18,_18,_18];
_16.0 = [RET,RET,RET,RET,RET];
_5 = (-2111712792475999384_i64) << RET;
_10 = _20;
_8 = 62_isize ^ (-9223372036854775808_isize);
_12 = _5 as u16;
_19 = _15.0;
RET = 965083109_i32 | 359642836_i32;
_9 = [_18,_18,_18,_18,_18,_18];
_19 = [_12,_12,_12,_12,_12,_12,_12,_12];
_13 = (-1_i8) * 108_i8;
_4 = _15.2;
Goto(bb21)
}
bb21 = {
Call(_23 = dump_var(3_usize, 11_usize, Move(_11), 1_usize, Move(_1), 19_usize, Move(_19), 6_usize, Move(_6)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_23 = dump_var(3_usize, 16_usize, Move(_16), 20_usize, Move(_20), 8_usize, Move(_8), 13_usize, Move(_13)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: bool,mut _2: [i16; 6],mut _3: isize,mut _4: [i16; 6],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [i32; 1],mut _9: *const char) -> i128 {
mir! {
type RET = i128;
let _10: char;
let _11: ([i16; 6],);
let _12: [isize; 3];
let _13: f32;
let _14: f64;
let _15: Adt41;
let _16: bool;
let _17: (f64,);
let _18: u16;
let _19: isize;
let _20: char;
let _21: ([i16; 6],);
let _22: [i32; 5];
let _23: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _24: *const char;
let _25: [i16; 6];
let _26: (usize, u64);
let _27: isize;
let _28: ();
let _29: ();
{
_3 = -9223372036854775807_isize;
_7 = [19150_i16,22041_i16,18862_i16,25776_i16,32332_i16,18644_i16];
RET = 76577060378660914441757927750742123160_i128;
_6 = _7;
_6 = [(-2233_i16),(-20802_i16),1823_i16,(-24148_i16),(-13368_i16),(-20265_i16)];
_1 = !false;
_4 = _5;
_4 = [25061_i16,(-144_i16),(-30014_i16),(-4572_i16),(-9812_i16),7297_i16];
RET = 88911524130034486937069122428822507734_i128 ^ 122038736147849172124219035510721022647_i128;
_8 = [552535246_i32];
_6 = [(-7299_i16),(-3737_i16),21744_i16,(-10226_i16),(-3980_i16),(-26626_i16)];
_1 = true ^ false;
_5 = [572_i16,1844_i16,(-29830_i16),11153_i16,30073_i16,12739_i16];
_4 = _5;
_11.0 = [25400_i16,3851_i16,7147_i16,417_i16,(-6116_i16),(-20578_i16)];
Goto(bb1)
}
bb1 = {
_6 = _5;
_3 = 14507901666393336623_u64 as isize;
_4 = _5;
_1 = !false;
_10 = '\u{a3115}';
_8 = [523130009_i32];
_7 = [(-29830_i16),(-29986_i16),(-18554_i16),9030_i16,20979_i16,28390_i16];
_11.0 = [(-15262_i16),(-6426_i16),3633_i16,28860_i16,(-2918_i16),(-24705_i16)];
_11.0 = [(-24016_i16),17773_i16,(-13386_i16),(-9334_i16),(-22843_i16),8082_i16];
_10 = '\u{8fc5e}';
_2 = [(-1681_i16),(-25709_i16),(-17799_i16),18815_i16,(-20898_i16),30072_i16];
RET = (-148761596747853941897398187519657908635_i128) + (-99274742462091090468496568767036014989_i128);
_5 = _4;
_2 = [(-21802_i16),(-10483_i16),16651_i16,29686_i16,(-11226_i16),(-7335_i16)];
_12 = [_3,_3,_3];
_6 = _7;
_2 = [26725_i16,(-4804_i16),(-29447_i16),(-22273_i16),(-22052_i16),14632_i16];
RET = -(-33893641371924373838412067795827146281_i128);
_9 = core::ptr::addr_of!(_10);
Call(RET = fn5(_6, _4, _11, _4, _4, _11.0, _7, _11.0, _4, _5, (*_9), _8, _2, _6, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = [11798_i16,(-23162_i16),6709_i16,19359_i16,24296_i16,13222_i16];
_6 = [11316_i16,(-1306_i16),10683_i16,(-6619_i16),(-7076_i16),9632_i16];
_9 = core::ptr::addr_of!((*_9));
_8 = [1034412927_i32];
_12 = [_3,_3,_3];
_11 = (_4,);
_1 = RET < RET;
_2 = [10116_i16,32065_i16,31290_i16,21060_i16,4447_i16,23641_i16];
_9 = core::ptr::addr_of!(_10);
_6 = [14689_i16,(-23114_i16),(-17791_i16),7920_i16,(-6812_i16),4425_i16];
_14 = 14689847623529198977_u64 as f64;
_12 = [_3,_3,_3];
_11.0 = [(-8111_i16),(-16562_i16),(-20972_i16),16808_i16,(-8574_i16),3628_i16];
_17.0 = _14;
_16 = _1;
_16 = RET > RET;
_2 = [(-11124_i16),16641_i16,(-1517_i16),18526_i16,(-9960_i16),(-14882_i16)];
_6 = [3995_i16,(-26088_i16),17396_i16,3573_i16,(-7319_i16),1996_i16];
_17.0 = _14 * _14;
Goto(bb3)
}
bb3 = {
_12 = [_3,_3,_3];
_11 = (_5,);
_3 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [_3,_3,_3];
_5 = [(-26735_i16),(-24867_i16),22481_i16,24771_i16,(-9088_i16),(-6166_i16)];
_3 = !(-9223372036854775808_isize);
_17 = (_14,);
_1 = _16;
_13 = 50_u8 as f32;
RET = 16892427878488939889666195201865536075_i128;
_9 = core::ptr::addr_of!((*_9));
_13 = RET as f32;
_18 = 40358_u16;
_1 = _14 < _17.0;
_2 = [(-20386_i16),24264_i16,(-19438_i16),(-2516_i16),20689_i16,3516_i16];
_3 = 31_isize;
_2 = _11.0;
match _3 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
31 => bb11,
_ => bb10
}
}
bb4 = {
_2 = [11798_i16,(-23162_i16),6709_i16,19359_i16,24296_i16,13222_i16];
_6 = [11316_i16,(-1306_i16),10683_i16,(-6619_i16),(-7076_i16),9632_i16];
_9 = core::ptr::addr_of!((*_9));
_8 = [1034412927_i32];
_12 = [_3,_3,_3];
_11 = (_4,);
_1 = RET < RET;
_2 = [10116_i16,32065_i16,31290_i16,21060_i16,4447_i16,23641_i16];
_9 = core::ptr::addr_of!(_10);
_6 = [14689_i16,(-23114_i16),(-17791_i16),7920_i16,(-6812_i16),4425_i16];
_14 = 14689847623529198977_u64 as f64;
_12 = [_3,_3,_3];
_11.0 = [(-8111_i16),(-16562_i16),(-20972_i16),16808_i16,(-8574_i16),3628_i16];
_17.0 = _14;
_16 = _1;
_16 = RET > RET;
_2 = [(-11124_i16),16641_i16,(-1517_i16),18526_i16,(-9960_i16),(-14882_i16)];
_6 = [3995_i16,(-26088_i16),17396_i16,3573_i16,(-7319_i16),1996_i16];
_17.0 = _14 * _14;
Goto(bb3)
}
bb5 = {
_6 = _5;
_3 = 14507901666393336623_u64 as isize;
_4 = _5;
_1 = !false;
_10 = '\u{a3115}';
_8 = [523130009_i32];
_7 = [(-29830_i16),(-29986_i16),(-18554_i16),9030_i16,20979_i16,28390_i16];
_11.0 = [(-15262_i16),(-6426_i16),3633_i16,28860_i16,(-2918_i16),(-24705_i16)];
_11.0 = [(-24016_i16),17773_i16,(-13386_i16),(-9334_i16),(-22843_i16),8082_i16];
_10 = '\u{8fc5e}';
_2 = [(-1681_i16),(-25709_i16),(-17799_i16),18815_i16,(-20898_i16),30072_i16];
RET = (-148761596747853941897398187519657908635_i128) + (-99274742462091090468496568767036014989_i128);
_5 = _4;
_2 = [(-21802_i16),(-10483_i16),16651_i16,29686_i16,(-11226_i16),(-7335_i16)];
_12 = [_3,_3,_3];
_6 = _7;
_2 = [26725_i16,(-4804_i16),(-29447_i16),(-22273_i16),(-22052_i16),14632_i16];
RET = -(-33893641371924373838412067795827146281_i128);
_9 = core::ptr::addr_of!(_10);
Call(RET = fn5(_6, _4, _11, _4, _4, _11.0, _7, _11.0, _4, _5, (*_9), _8, _2, _6, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_23.4 = _13 * _13;
_19 = _3;
_8 = [524295525_i32];
_23.4 = 4_u8 as f32;
_23.1 = (_2,);
_17 = (_14,);
_17.0 = _14;
RET = !(-144421146628291179749435171444280511413_i128);
_23.1.0 = [26941_i16,10574_i16,18888_i16,8493_i16,(-11707_i16),(-19053_i16)];
_24 = _9;
_16 = _17.0 <= _14;
_5 = [18181_i16,29495_i16,(-2778_i16),21125_i16,18852_i16,(-22310_i16)];
_23.0 = [(-1133597108_i32),1114085784_i32,(-1500212347_i32),(-1431613218_i32),1641039783_i32];
_11 = _23.1;
match _3 {
0 => bb2,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
31 => bb17,
_ => bb16
}
}
bb12 = {
_6 = _5;
_3 = 14507901666393336623_u64 as isize;
_4 = _5;
_1 = !false;
_10 = '\u{a3115}';
_8 = [523130009_i32];
_7 = [(-29830_i16),(-29986_i16),(-18554_i16),9030_i16,20979_i16,28390_i16];
_11.0 = [(-15262_i16),(-6426_i16),3633_i16,28860_i16,(-2918_i16),(-24705_i16)];
_11.0 = [(-24016_i16),17773_i16,(-13386_i16),(-9334_i16),(-22843_i16),8082_i16];
_10 = '\u{8fc5e}';
_2 = [(-1681_i16),(-25709_i16),(-17799_i16),18815_i16,(-20898_i16),30072_i16];
RET = (-148761596747853941897398187519657908635_i128) + (-99274742462091090468496568767036014989_i128);
_5 = _4;
_2 = [(-21802_i16),(-10483_i16),16651_i16,29686_i16,(-11226_i16),(-7335_i16)];
_12 = [_3,_3,_3];
_6 = _7;
_2 = [26725_i16,(-4804_i16),(-29447_i16),(-22273_i16),(-22052_i16),14632_i16];
RET = -(-33893641371924373838412067795827146281_i128);
_9 = core::ptr::addr_of!(_10);
Call(RET = fn5(_6, _4, _11, _4, _4, _11.0, _7, _11.0, _4, _5, (*_9), _8, _2, _6, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_6 = _5;
_3 = 14507901666393336623_u64 as isize;
_4 = _5;
_1 = !false;
_10 = '\u{a3115}';
_8 = [523130009_i32];
_7 = [(-29830_i16),(-29986_i16),(-18554_i16),9030_i16,20979_i16,28390_i16];
_11.0 = [(-15262_i16),(-6426_i16),3633_i16,28860_i16,(-2918_i16),(-24705_i16)];
_11.0 = [(-24016_i16),17773_i16,(-13386_i16),(-9334_i16),(-22843_i16),8082_i16];
_10 = '\u{8fc5e}';
_2 = [(-1681_i16),(-25709_i16),(-17799_i16),18815_i16,(-20898_i16),30072_i16];
RET = (-148761596747853941897398187519657908635_i128) + (-99274742462091090468496568767036014989_i128);
_5 = _4;
_2 = [(-21802_i16),(-10483_i16),16651_i16,29686_i16,(-11226_i16),(-7335_i16)];
_12 = [_3,_3,_3];
_6 = _7;
_2 = [26725_i16,(-4804_i16),(-29447_i16),(-22273_i16),(-22052_i16),14632_i16];
RET = -(-33893641371924373838412067795827146281_i128);
_9 = core::ptr::addr_of!(_10);
Call(RET = fn5(_6, _4, _11, _4, _4, _11.0, _7, _11.0, _4, _5, (*_9), _8, _2, _6, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_12 = [_3,_3,_3];
_11 = (_5,);
_3 = 9223372036854775807_isize - 9223372036854775807_isize;
_12 = [_3,_3,_3];
_5 = [(-26735_i16),(-24867_i16),22481_i16,24771_i16,(-9088_i16),(-6166_i16)];
_3 = !(-9223372036854775808_isize);
_17 = (_14,);
_1 = _16;
_13 = 50_u8 as f32;
RET = 16892427878488939889666195201865536075_i128;
_9 = core::ptr::addr_of!((*_9));
_13 = RET as f32;
_18 = 40358_u16;
_1 = _14 < _17.0;
_2 = [(-20386_i16),24264_i16,(-19438_i16),(-2516_i16),20689_i16,3516_i16];
_3 = 31_isize;
_2 = _11.0;
match _3 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
31 => bb11,
_ => bb10
}
}
bb17 = {
_5 = [2752_i16,16283_i16,(-29257_i16),(-17523_i16),(-30273_i16),(-22277_i16)];
_20 = _10;
_4 = [6277_i16,(-4896_i16),19182_i16,(-5171_i16),(-26650_i16),(-31731_i16)];
_21 = _23.1;
_2 = [3835_i16,(-25971_i16),(-27014_i16),(-23346_i16),(-9725_i16),(-28676_i16)];
_23.3 = 96_u8;
_23.1.0 = [32422_i16,29451_i16,(-6803_i16),11237_i16,(-21361_i16),(-17327_i16)];
_19 = _3 ^ _3;
_23.4 = -_13;
_23.2 = 560447178982450242_i64 - (-1210350433076216043_i64);
_24 = core::ptr::addr_of!((*_9));
_26.1 = 10075818927315987450_u64;
_26 = (550249034959508777_usize, 6331459105381816804_u64);
_3 = _19 * _19;
_4 = [11708_i16,(-30515_i16),(-15309_i16),(-4669_i16),(-2345_i16),(-24955_i16)];
Goto(bb18)
}
bb18 = {
Call(_28 = dump_var(4_usize, 26_usize, Move(_26), 18_usize, Move(_18), 12_usize, Move(_12), 21_usize, Move(_21)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_28 = dump_var(4_usize, 6_usize, Move(_6), 19_usize, Move(_19), 10_usize, Move(_10), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [i16; 6],mut _2: [i16; 6],mut _3: ([i16; 6],),mut _4: [i16; 6],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [i16; 6],mut _9: [i16; 6],mut _10: [i16; 6],mut _11: char,mut _12: [i32; 1],mut _13: [i16; 6],mut _14: [i16; 6],mut _15: [i16; 6]) -> i128 {
mir! {
type RET = i128;
let _16: [i32; 5];
let _17: f64;
let _18: Adt53;
let _19: Adt56;
let _20: *const i8;
let _21: Adt53;
let _22: Adt42;
let _23: [isize; 3];
let _24: Adt56;
let _25: [u16; 8];
let _26: Adt44;
let _27: i8;
let _28: [i128; 2];
let _29: (u16, (u16, f32, i64), i8);
let _30: char;
let _31: isize;
let _32: i8;
let _33: Adt42;
let _34: *const (u128,);
let _35: Adt44;
let _36: f32;
let _37: u64;
let _38: [i16; 6];
let _39: Adt41;
let _40: char;
let _41: char;
let _42: Adt45;
let _43: isize;
let _44: *const (u128,);
let _45: ([i16; 6],);
let _46: [i128; 2];
let _47: f64;
let _48: [i128; 2];
let _49: [isize; 3];
let _50: (u16, f32, i64);
let _51: [i32; 1];
let _52: ([u16; 8], i128, bool, f64);
let _53: (f64,);
let _54: ();
let _55: ();
{
_1 = [(-28337_i16),(-29271_i16),24032_i16,(-23950_i16),(-12944_i16),(-28611_i16)];
_2 = [(-5861_i16),28447_i16,(-16268_i16),(-13242_i16),11982_i16,(-16241_i16)];
RET = !(-131238274506388785005107188354435952618_i128);
Goto(bb1)
}
bb1 = {
_11 = '\u{3b0ae}';
_11 = '\u{41f7}';
_6 = [(-17193_i16),(-15295_i16),20339_i16,18503_i16,24395_i16,(-18125_i16)];
Goto(bb2)
}
bb2 = {
_12 = [(-1667125562_i32)];
_10 = [(-18857_i16),1104_i16,7352_i16,(-17934_i16),(-13109_i16),3182_i16];
_7 = _1;
_11 = '\u{edf95}';
_17 = 3440498977_u32 as f64;
RET = !(-81306131705343462290863634681279864181_i128);
_16 = [1509868795_i32,(-1400105500_i32),533256349_i32,(-193341819_i32),(-1279746708_i32)];
_6 = [(-26997_i16),(-13325_i16),10879_i16,(-25187_i16),25317_i16,(-24639_i16)];
_9 = _8;
RET = 4175016207_u32 as i128;
_15 = [(-25001_i16),31093_i16,(-790_i16),24005_i16,1250_i16,(-11399_i16)];
_14 = [(-5161_i16),(-5637_i16),(-11592_i16),18840_i16,22352_i16,(-25145_i16)];
_2 = [(-21279_i16),16221_i16,(-25327_i16),6829_i16,(-3640_i16),(-28501_i16)];
_5 = _2;
_3 = (_15,);
_4 = [(-7204_i16),28750_i16,29024_i16,14688_i16,(-11177_i16),(-9165_i16)];
Call(RET = fn6(_4, _1, _8, _3, _10, _5, _14, _7, _7, _5, _2, _13, _8, _14, _7, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = (-13834_i16) as i128;
_11 = '\u{53cd3}';
_3.0 = _10;
_3 = (_15,);
_13 = [(-4815_i16),(-17876_i16),(-10587_i16),(-3798_i16),(-25392_i16),69_i16];
_4 = [32244_i16,29531_i16,23707_i16,19065_i16,23394_i16,8281_i16];
_12 = [(-94454397_i32)];
_1 = [(-13106_i16),(-30362_i16),77_i16,1750_i16,(-10892_i16),(-24039_i16)];
RET = 159260571253833842720154355114663306137_i128;
_16 = [1174665459_i32,(-1351260888_i32),(-1382918683_i32),339666354_i32,(-1147930757_i32)];
_3.0 = _15;
_17 = (-8986343483685800252_i64) as f64;
_12 = [(-1461844965_i32)];
_15 = [(-25279_i16),28985_i16,28839_i16,2508_i16,(-4771_i16),(-25094_i16)];
_2 = _10;
_5 = _9;
_1 = [20975_i16,(-21565_i16),(-19383_i16),16986_i16,(-29460_i16),1776_i16];
_4 = [(-17577_i16),(-183_i16),17166_i16,(-8578_i16),10315_i16,224_i16];
_9 = [9579_i16,17184_i16,(-19778_i16),28905_i16,(-21967_i16),18551_i16];
_13 = [(-30884_i16),2265_i16,(-15985_i16),(-80_i16),10803_i16,(-24928_i16)];
Goto(bb4)
}
bb4 = {
_16 = [1828070708_i32,695677729_i32,1767234829_i32,(-601520790_i32),925714514_i32];
_2 = _7;
_23 = [(-64_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_17 = 13258_i16 as f64;
_3 = (_14,);
_3.0 = [11879_i16,(-14649_i16),7790_i16,6576_i16,(-32477_i16),(-16937_i16)];
_3.0 = [31101_i16,20161_i16,(-20287_i16),10064_i16,19931_i16,(-24111_i16)];
Goto(bb5)
}
bb5 = {
_17 = 29885_i16 as f64;
_12 = [91182258_i32];
_3 = (_8,);
_11 = '\u{4e4dd}';
_1 = _4;
_4 = _7;
_10 = [(-17526_i16),(-27690_i16),(-17213_i16),(-5545_i16),31196_i16,9656_i16];
_4 = _9;
_7 = [(-19355_i16),18487_i16,11302_i16,(-5505_i16),(-8831_i16),3946_i16];
_8 = _9;
_16 = [(-2096655414_i32),(-198012688_i32),(-997263241_i32),1345583823_i32,(-1074869455_i32)];
_6 = _10;
_3 = (_14,);
RET = (-57713093343621795443548526800459238949_i128);
_14 = [(-25912_i16),1396_i16,10227_i16,29776_i16,27832_i16,(-17985_i16)];
RET = (-118051843037327971384395608669151313497_i128) - (-86165479800311130609648620528052940207_i128);
_3.0 = [(-20357_i16),32237_i16,5474_i16,(-7482_i16),(-28569_i16),(-3996_i16)];
_6 = [1244_i16,27271_i16,10015_i16,(-25521_i16),(-21745_i16),29552_i16];
_10 = _9;
_16 = [1064399842_i32,(-507954024_i32),(-695352952_i32),1312280362_i32,(-2089641080_i32)];
_7 = [25055_i16,8528_i16,5821_i16,(-259_i16),20493_i16,10828_i16];
_12 = [(-157584334_i32)];
_13 = _3.0;
Goto(bb6)
}
bb6 = {
_20 = core::ptr::addr_of!(_29.2);
_4 = _10;
_9 = [(-9032_i16),2135_i16,(-492_i16),11038_i16,9827_i16,29081_i16];
_29.1.1 = 16342995548815146832_usize as f32;
_28 = [RET,RET];
_28 = [RET,RET];
_27 = (-36_i8) << RET;
_29.0 = 1784460788_u32 as u16;
_35.fld0 = core::ptr::addr_of!(_30);
_31 = _17 as isize;
_2 = [30895_i16,8752_i16,(-26492_i16),1035_i16,22223_i16,9341_i16];
_29.1.0 = _29.1.1 as u16;
_33 = Adt42::Variant0 { fld0: true,fld1: _28,fld2: _3,fld3: 7_usize,fld4: _17,fld5: _23 };
_20 = core::ptr::addr_of!((*_20));
_11 = '\u{aa52f}';
_26.fld0 = core::ptr::addr_of!(_11);
Call(_4 = fn7(_13, _16, _1, _9, _1, _7, _8, _10), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
place!(Field::<usize>(Variant(_33, 0), 3)) = 11140688618218837312_usize ^ 11805460674548313798_usize;
_27 = _31 as i8;
_7 = _8;
_30 = _11;
_8 = [28108_i16,(-18252_i16),(-15892_i16),(-14258_i16),(-15975_i16),15719_i16];
_29.2 = _27 * _27;
_4 = [11990_i16,(-14503_i16),(-9383_i16),(-17675_i16),(-5337_i16),1521_i16];
RET = 132618045238724194_i64 as i128;
_20 = core::ptr::addr_of!(_27);
_8 = [(-14580_i16),(-8057_i16),8225_i16,12854_i16,(-16574_i16),16313_i16];
_25 = [_29.0,_29.0,_29.0,_29.1.0,_29.1.0,_29.0,_29.1.0,_29.1.0];
_28 = [RET,RET];
_26 = Adt44 { fld0: _35.fld0 };
_3.0 = [(-24462_i16),20125_i16,(-25023_i16),14483_i16,(-20724_i16),(-13613_i16)];
_38 = [(-30970_i16),9855_i16,(-27105_i16),30397_i16,(-24474_i16),6987_i16];
place!(Field::<[i128; 2]>(Variant(_33, 0), 1)) = [RET,RET];
_15 = Field::<([i16; 6],)>(Variant(_33, 0), 2).0;
_36 = _29.1.1;
_37 = _29.1.1 as u64;
_29.1.1 = -_36;
_3 = (_9,);
place!(Field::<f64>(Variant(_33, 0), 4)) = _17 - _17;
_29.1.0 = 121321727479998171041124409428289585513_u128 as u16;
Goto(bb8)
}
bb8 = {
_17 = 213_u8 as f64;
_7 = [5429_i16,(-30788_i16),(-10064_i16),(-32487_i16),28402_i16,(-21075_i16)];
_14 = _15;
_41 = _11;
place!(Field::<bool>(Variant(_33, 0), 0)) = !true;
_15 = _5;
_17 = Field::<f64>(Variant(_33, 0), 4) + Field::<f64>(Variant(_33, 0), 4);
_10 = _13;
_29.0 = _29.1.0 + _29.1.0;
_36 = (-4931651241036295746_i64) as f32;
_29.1.0 = _29.0 | _29.0;
_8 = [(-29319_i16),(-22786_i16),(-28017_i16),(-11122_i16),(-1151_i16),16304_i16];
SetDiscriminant(_33, 0);
_35.fld0 = _26.fld0;
_17 = 261790388203422250997108826218895643445_u128 as f64;
place!(Field::<[isize; 3]>(Variant(_33, 0), 5)) = _23;
Goto(bb9)
}
bb9 = {
_29.2 = -(*_20);
_3 = (_14,);
_11 = _41;
_28 = [RET,RET];
Goto(bb10)
}
bb10 = {
_15 = _4;
_1 = _4;
_23 = [_31,_31,_31];
place!(Field::<[i128; 2]>(Variant(_33, 0), 1)) = _28;
_29.1 = (_29.0, _36, (-8315376839451242740_i64));
_29.2 = !_27;
_10 = _13;
_28 = [RET,RET];
_32 = !_29.2;
_45.0 = _6;
place!(Field::<f64>(Variant(_33, 0), 4)) = _17;
_13 = [(-23749_i16),3272_i16,(-22841_i16),(-15479_i16),21687_i16,(-22998_i16)];
match _29.1.2 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
340282366920938463455059230592316968716 => bb17,
_ => bb16
}
}
bb11 = {
_12 = [(-1667125562_i32)];
_10 = [(-18857_i16),1104_i16,7352_i16,(-17934_i16),(-13109_i16),3182_i16];
_7 = _1;
_11 = '\u{edf95}';
_17 = 3440498977_u32 as f64;
RET = !(-81306131705343462290863634681279864181_i128);
_16 = [1509868795_i32,(-1400105500_i32),533256349_i32,(-193341819_i32),(-1279746708_i32)];
_6 = [(-26997_i16),(-13325_i16),10879_i16,(-25187_i16),25317_i16,(-24639_i16)];
_9 = _8;
RET = 4175016207_u32 as i128;
_15 = [(-25001_i16),31093_i16,(-790_i16),24005_i16,1250_i16,(-11399_i16)];
_14 = [(-5161_i16),(-5637_i16),(-11592_i16),18840_i16,22352_i16,(-25145_i16)];
_2 = [(-21279_i16),16221_i16,(-25327_i16),6829_i16,(-3640_i16),(-28501_i16)];
_5 = _2;
_3 = (_15,);
_4 = [(-7204_i16),28750_i16,29024_i16,14688_i16,(-11177_i16),(-9165_i16)];
Call(RET = fn6(_4, _1, _8, _3, _10, _5, _14, _7, _7, _5, _2, _13, _8, _14, _7, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
_17 = 213_u8 as f64;
_7 = [5429_i16,(-30788_i16),(-10064_i16),(-32487_i16),28402_i16,(-21075_i16)];
_14 = _15;
_41 = _11;
place!(Field::<bool>(Variant(_33, 0), 0)) = !true;
_15 = _5;
_17 = Field::<f64>(Variant(_33, 0), 4) + Field::<f64>(Variant(_33, 0), 4);
_10 = _13;
_29.0 = _29.1.0 + _29.1.0;
_36 = (-4931651241036295746_i64) as f32;
_29.1.0 = _29.0 | _29.0;
_8 = [(-29319_i16),(-22786_i16),(-28017_i16),(-11122_i16),(-1151_i16),16304_i16];
SetDiscriminant(_33, 0);
_35.fld0 = _26.fld0;
_17 = 261790388203422250997108826218895643445_u128 as f64;
place!(Field::<[isize; 3]>(Variant(_33, 0), 5)) = _23;
Goto(bb9)
}
bb13 = {
place!(Field::<usize>(Variant(_33, 0), 3)) = 11140688618218837312_usize ^ 11805460674548313798_usize;
_27 = _31 as i8;
_7 = _8;
_30 = _11;
_8 = [28108_i16,(-18252_i16),(-15892_i16),(-14258_i16),(-15975_i16),15719_i16];
_29.2 = _27 * _27;
_4 = [11990_i16,(-14503_i16),(-9383_i16),(-17675_i16),(-5337_i16),1521_i16];
RET = 132618045238724194_i64 as i128;
_20 = core::ptr::addr_of!(_27);
_8 = [(-14580_i16),(-8057_i16),8225_i16,12854_i16,(-16574_i16),16313_i16];
_25 = [_29.0,_29.0,_29.0,_29.1.0,_29.1.0,_29.0,_29.1.0,_29.1.0];
_28 = [RET,RET];
_26 = Adt44 { fld0: _35.fld0 };
_3.0 = [(-24462_i16),20125_i16,(-25023_i16),14483_i16,(-20724_i16),(-13613_i16)];
_38 = [(-30970_i16),9855_i16,(-27105_i16),30397_i16,(-24474_i16),6987_i16];
place!(Field::<[i128; 2]>(Variant(_33, 0), 1)) = [RET,RET];
_15 = Field::<([i16; 6],)>(Variant(_33, 0), 2).0;
_36 = _29.1.1;
_37 = _29.1.1 as u64;
_29.1.1 = -_36;
_3 = (_9,);
place!(Field::<f64>(Variant(_33, 0), 4)) = _17 - _17;
_29.1.0 = 121321727479998171041124409428289585513_u128 as u16;
Goto(bb8)
}
bb14 = {
_20 = core::ptr::addr_of!(_29.2);
_4 = _10;
_9 = [(-9032_i16),2135_i16,(-492_i16),11038_i16,9827_i16,29081_i16];
_29.1.1 = 16342995548815146832_usize as f32;
_28 = [RET,RET];
_28 = [RET,RET];
_27 = (-36_i8) << RET;
_29.0 = 1784460788_u32 as u16;
_35.fld0 = core::ptr::addr_of!(_30);
_31 = _17 as isize;
_2 = [30895_i16,8752_i16,(-26492_i16),1035_i16,22223_i16,9341_i16];
_29.1.0 = _29.1.1 as u16;
_33 = Adt42::Variant0 { fld0: true,fld1: _28,fld2: _3,fld3: 7_usize,fld4: _17,fld5: _23 };
_20 = core::ptr::addr_of!((*_20));
_11 = '\u{aa52f}';
_26.fld0 = core::ptr::addr_of!(_11);
Call(_4 = fn7(_13, _16, _1, _9, _1, _7, _8, _10), ReturnTo(bb7), UnwindUnreachable())
}
bb15 = {
_17 = 29885_i16 as f64;
_12 = [91182258_i32];
_3 = (_8,);
_11 = '\u{4e4dd}';
_1 = _4;
_4 = _7;
_10 = [(-17526_i16),(-27690_i16),(-17213_i16),(-5545_i16),31196_i16,9656_i16];
_4 = _9;
_7 = [(-19355_i16),18487_i16,11302_i16,(-5505_i16),(-8831_i16),3946_i16];
_8 = _9;
_16 = [(-2096655414_i32),(-198012688_i32),(-997263241_i32),1345583823_i32,(-1074869455_i32)];
_6 = _10;
_3 = (_14,);
RET = (-57713093343621795443548526800459238949_i128);
_14 = [(-25912_i16),1396_i16,10227_i16,29776_i16,27832_i16,(-17985_i16)];
RET = (-118051843037327971384395608669151313497_i128) - (-86165479800311130609648620528052940207_i128);
_3.0 = [(-20357_i16),32237_i16,5474_i16,(-7482_i16),(-28569_i16),(-3996_i16)];
_6 = [1244_i16,27271_i16,10015_i16,(-25521_i16),(-21745_i16),29552_i16];
_10 = _9;
_16 = [1064399842_i32,(-507954024_i32),(-695352952_i32),1312280362_i32,(-2089641080_i32)];
_7 = [25055_i16,8528_i16,5821_i16,(-259_i16),20493_i16,10828_i16];
_12 = [(-157584334_i32)];
_13 = _3.0;
Goto(bb6)
}
bb16 = {
RET = (-13834_i16) as i128;
_11 = '\u{53cd3}';
_3.0 = _10;
_3 = (_15,);
_13 = [(-4815_i16),(-17876_i16),(-10587_i16),(-3798_i16),(-25392_i16),69_i16];
_4 = [32244_i16,29531_i16,23707_i16,19065_i16,23394_i16,8281_i16];
_12 = [(-94454397_i32)];
_1 = [(-13106_i16),(-30362_i16),77_i16,1750_i16,(-10892_i16),(-24039_i16)];
RET = 159260571253833842720154355114663306137_i128;
_16 = [1174665459_i32,(-1351260888_i32),(-1382918683_i32),339666354_i32,(-1147930757_i32)];
_3.0 = _15;
_17 = (-8986343483685800252_i64) as f64;
_12 = [(-1461844965_i32)];
_15 = [(-25279_i16),28985_i16,28839_i16,2508_i16,(-4771_i16),(-25094_i16)];
_2 = _10;
_5 = _9;
_1 = [20975_i16,(-21565_i16),(-19383_i16),16986_i16,(-29460_i16),1776_i16];
_4 = [(-17577_i16),(-183_i16),17166_i16,(-8578_i16),10315_i16,224_i16];
_9 = [9579_i16,17184_i16,(-19778_i16),28905_i16,(-21967_i16),18551_i16];
_13 = [(-30884_i16),2265_i16,(-15985_i16),(-80_i16),10803_i16,(-24928_i16)];
Goto(bb4)
}
bb17 = {
_45 = (_13,);
place!(Field::<usize>(Variant(_33, 0), 3)) = 16284984404103407503_usize | 8017491013332566780_usize;
_43 = -_31;
place!(Field::<bool>(Variant(_33, 0), 0)) = !true;
_3.0 = _6;
place!(Field::<f64>(Variant(_33, 0), 4)) = 172866199648623767797464558809670661319_u128 as f64;
_47 = Field::<f64>(Variant(_33, 0), 4);
_6 = _15;
_29.1.2 = _36 as i64;
_40 = _11;
_16 = [(-1296202626_i32),(-2080859238_i32),295133627_i32,1990636628_i32,(-563500622_i32)];
_29.2 = _27;
_48 = [RET,RET];
_7 = _38;
_38 = [(-25854_i16),(-27071_i16),(-30305_i16),19102_i16,(-3309_i16),22127_i16];
_30 = _40;
_23 = [_43,_31,_43];
_51 = [1553728342_i32];
place!(Field::<([i16; 6],)>(Variant(_33, 0), 2)) = _45;
_51 = [(-1716397773_i32)];
_49 = [_31,_43,_43];
_50.1 = _36 * _36;
_29.0 = _30 as u16;
_43 = !_31;
_27 = _32;
_31 = _43;
Goto(bb18)
}
bb18 = {
Call(_54 = dump_var(5_usize, 38_usize, Move(_38), 10_usize, Move(_10), 2_usize, Move(_2), 48_usize, Move(_48)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_54 = dump_var(5_usize, 11_usize, Move(_11), 5_usize, Move(_5), 23_usize, Move(_23), 40_usize, Move(_40)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_54 = dump_var(5_usize, 8_usize, Move(_8), 3_usize, Move(_3), 7_usize, Move(_7), 15_usize, Move(_15)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_54 = dump_var(5_usize, 25_usize, Move(_25), 27_usize, Move(_27), 6_usize, Move(_6), 41_usize, Move(_41)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [i16; 6],mut _2: [i16; 6],mut _3: [i16; 6],mut _4: ([i16; 6],),mut _5: [i16; 6],mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [i16; 6],mut _9: [i16; 6],mut _10: [i16; 6],mut _11: [i16; 6],mut _12: [i16; 6],mut _13: [i16; 6],mut _14: [i16; 6],mut _15: [i16; 6],mut _16: [i16; 6]) -> i128 {
mir! {
type RET = i128;
let _17: (i128, (usize, u64));
let _18: [u16; 1];
let _19: [i16; 6];
let _20: usize;
let _21: f64;
let _22: ();
let _23: ();
{
_10 = _16;
_4.0 = [12922_i16,(-16629_i16),(-24464_i16),(-6524_i16),(-9455_i16),29047_i16];
_13 = _3;
_17.0 = (-128205157339470686521157429094116993258_i128);
_4.0 = [20747_i16,(-7293_i16),1456_i16,28672_i16,26491_i16,(-5727_i16)];
_9 = [8360_i16,7759_i16,(-31514_i16),(-6726_i16),(-28611_i16),17711_i16];
Goto(bb1)
}
bb1 = {
_8 = _15;
_17.1 = (1_usize, 8553930797333929130_u64);
_8 = [(-16455_i16),(-17197_i16),31502_i16,(-16892_i16),28043_i16,4838_i16];
_8 = _4.0;
_8 = _2;
RET = _17.0;
_2 = [21044_i16,(-10187_i16),13745_i16,13925_i16,15372_i16,(-7370_i16)];
_3 = [(-5105_i16),(-21361_i16),26280_i16,(-5532_i16),(-20285_i16),26879_i16];
_5 = [9427_i16,(-19362_i16),(-9792_i16),23103_i16,13761_i16,(-16485_i16)];
_6 = [30477_i16,(-23896_i16),(-17909_i16),19718_i16,10004_i16,20496_i16];
_14 = [31763_i16,12258_i16,(-13601_i16),(-14643_i16),(-12550_i16),31822_i16];
_3 = _8;
_7 = [24811_i16,(-11467_i16),9575_i16,(-27787_i16),(-13593_i16),15103_i16];
_18 = [19604_u16];
_5 = [(-3183_i16),23540_i16,30440_i16,(-27229_i16),(-32709_i16),21209_i16];
_21 = _17.1.1 as f64;
RET = 18264_i16 as i128;
_7 = [1097_i16,21611_i16,10567_i16,(-12356_i16),(-26040_i16),(-50_i16)];
_14 = [4252_i16,(-24185_i16),(-16476_i16),(-4936_i16),(-21047_i16),30252_i16];
_16 = [(-1752_i16),29254_i16,19016_i16,11209_i16,(-12395_i16),4203_i16];
match _17.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
212077209581467776942217178337651218198 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = !_17.0;
_20 = (-22461_i16) as usize;
_4 = (_5,);
match _17.1.1 {
0 => bb11,
1 => bb12,
8553930797333929130 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_20 = !_17.1.0;
RET = _17.1.1 as i128;
_11 = [31509_i16,12088_i16,24999_i16,(-1981_i16),(-11739_i16),(-18463_i16)];
_5 = [(-20103_i16),(-29903_i16),(-10426_i16),22582_i16,(-21634_i16),(-2002_i16)];
_20 = !_17.1.0;
_17.0 = -RET;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(6_usize, 3_usize, Move(_3), 7_usize, Move(_7), 20_usize, Move(_20), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(6_usize, 4_usize, Move(_4), 8_usize, Move(_8), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_22 = dump_var(6_usize, 5_usize, Move(_5), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [i16; 6],mut _2: [i32; 5],mut _3: [i16; 6],mut _4: [i16; 6],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [i16; 6]) -> [i16; 6] {
mir! {
type RET = [i16; 6];
let _9: [u16; 8];
let _10: [isize; 3];
let _11: isize;
let _12: u128;
let _13: Adt47;
let _14: Adt51;
let _15: (i128, (usize, u64));
let _16: f32;
let _17: char;
let _18: u32;
let _19: Adt50;
let _20: [i16; 6];
let _21: [u16; 1];
let _22: isize;
let _23: bool;
let _24: i16;
let _25: [i32; 1];
let _26: (f64,);
let _27: Adt46;
let _28: bool;
let _29: isize;
let _30: (f64,);
let _31: isize;
let _32: Adt47;
let _33: i64;
let _34: i8;
let _35: isize;
let _36: Adt53;
let _37: (i128, (usize, u64));
let _38: isize;
let _39: (u16, f32, i64);
let _40: bool;
let _41: f32;
let _42: Adt42;
let _43: isize;
let _44: isize;
let _45: char;
let _46: (f64,);
let _47: Adt54;
let _48: Adt40;
let _49: ();
let _50: ();
{
RET = [(-10600_i16),5223_i16,(-28064_i16),3470_i16,11715_i16,26889_i16];
RET = [30762_i16,(-25705_i16),(-12483_i16),27045_i16,18721_i16,(-17611_i16)];
_5 = _6;
_9 = [6049_u16,8112_u16,13456_u16,36954_u16,27157_u16,6352_u16,26951_u16,39941_u16];
_8 = [29779_i16,32664_i16,30849_i16,(-12569_i16),(-14864_i16),22088_i16];
_12 = (-890108999226695624_i64) as u128;
_5 = _4;
_1 = _5;
_6 = [(-2715_i16),(-24172_i16),29746_i16,12633_i16,3979_i16,(-13795_i16)];
_7 = [12238_i16,(-19352_i16),3693_i16,(-11578_i16),5228_i16,(-27225_i16)];
_10 = [5_isize,(-9223372036854775808_isize),102_isize];
_2 = [(-1762201792_i32),2025397571_i32,421581983_i32,66643289_i32,(-228802284_i32)];
Call(_12 = fn8(_9, _6, _9, RET, _7, _9, _6, _10, _2, _5, _4, RET, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [(-358811799_i32),(-1086096656_i32),(-1049501922_i32),(-84962038_i32),(-1260029147_i32)];
_10 = [(-8_isize),(-9223372036854775808_isize),(-98_isize)];
_8 = _1;
_8 = [(-8733_i16),4515_i16,7797_i16,17809_i16,(-15393_i16),(-5815_i16)];
RET = [(-22276_i16),277_i16,26255_i16,6422_i16,(-31720_i16),31388_i16];
_4 = [(-818_i16),(-25949_i16),(-23711_i16),17754_i16,(-31738_i16),10474_i16];
RET = [(-255_i16),2093_i16,(-30975_i16),14330_i16,(-25033_i16),(-11078_i16)];
_1 = [14989_i16,(-6815_i16),(-13056_i16),(-22189_i16),8107_i16,23408_i16];
_1 = _4;
_3 = [953_i16,(-31044_i16),8539_i16,29846_i16,17401_i16,(-4140_i16)];
Goto(bb2)
}
bb2 = {
_10 = [(-9223372036854775808_isize),54_isize,9223372036854775807_isize];
_7 = _5;
_5 = _7;
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2 = [265523360_i32,1479981660_i32,61722359_i32,(-429501120_i32),1130061108_i32];
_3 = [8313_i16,23863_i16,13405_i16,(-20801_i16),(-24879_i16),(-5931_i16)];
_10 = [(-9223372036854775808_isize),59_isize,48_isize];
_4 = [16451_i16,(-13628_i16),18055_i16,(-8043_i16),(-27549_i16),13752_i16];
_2 = [1527108887_i32,(-2026269843_i32),1616187468_i32,(-1954566858_i32),(-1294700757_i32)];
_15.0 = -(-28055007982945055896788206634245641978_i128);
RET = _7;
_11 = !(-9223372036854775808_isize);
_18 = 2859702239_u32;
_16 = 5715859263517868812_usize as f32;
_15.1.1 = 14588351514874713218_u64 * 16689651272585174489_u64;
_18 = 4290608279_u32;
match _18 {
4290608279 => bb3,
_ => bb1
}
}
bb3 = {
_3 = _7;
_1 = [24610_i16,(-23938_i16),15317_i16,18584_i16,8156_i16,(-13467_i16)];
_19.fld0 = [_15.0,_15.0];
_5 = [(-26929_i16),(-29351_i16),(-17702_i16),20396_i16,(-30133_i16),(-2559_i16)];
_9 = [63370_u16,10917_u16,41995_u16,64716_u16,52175_u16,14662_u16,48134_u16,15733_u16];
_3 = [(-32251_i16),26849_i16,2386_i16,14919_i16,4138_i16,32132_i16];
_22 = _11 & _11;
_15.1 = (12231462660191581105_usize, 4903479400361946450_u64);
_9 = [62423_u16,54840_u16,15644_u16,24095_u16,23989_u16,57589_u16,12562_u16,27272_u16];
_16 = _15.0 as f32;
_15.0 = (-2076833997_i32) as i128;
_9 = [27016_u16,16490_u16,11836_u16,33279_u16,42961_u16,7380_u16,17153_u16,17107_u16];
_21 = [47911_u16];
_15.1 = (0_usize, 13125302857431852341_u64);
_12 = !80053770394254141080349562379991607089_u128;
Goto(bb4)
}
bb4 = {
_24 = _15.1.0 as i16;
_7 = [_24,_24,_24,_24,_24,_24];
_10 = [_22,_11,_11];
_15.1 = (6_usize, 9911990548905150624_u64);
_2 = [2062403922_i32,1409222589_i32,(-1585331132_i32),(-1823375775_i32),(-471858932_i32)];
_19.fld1 = 18966_u16 as usize;
_23 = _15.1.1 != _15.1.1;
_19.fld0 = [_15.0,_15.0];
_15.1.0 = !_19.fld1;
_15.1.1 = 10871426298855640817_u64 >> _15.0;
_1 = [_24,_24,_24,_24,_24,_24];
_11 = !_22;
_7 = [_24,_24,_24,_24,_24,_24];
_31 = 1895715719_i32 as isize;
_24 = (-3285_i16);
_15.1.0 = _24 as usize;
_15.1 = (_19.fld1, 8381171081402553521_u64);
_6 = [_24,_24,_24,_24,_24,_24];
_7 = _4;
_26.0 = 8797_u16 as f64;
Goto(bb5)
}
bb5 = {
_30 = (_26.0,);
_28 = !_23;
_16 = 7333896298845211208_i64 as f32;
_11 = _22 - _22;
_29 = 7254057312830020972_i64 as isize;
_5 = [_24,_24,_24,_24,_24,_24];
_34 = _23 as i8;
_20 = _8;
_12 = 14695883822299677122284215288279332172_u128;
_19.fld0 = [_15.0,_15.0];
_37.1.0 = _16 as usize;
_37.0 = -_15.0;
_29 = _11;
_23 = _28;
_23 = !_28;
_31 = 225_u8 as isize;
_26 = _30;
_15.1.0 = !_37.1.0;
_24 = !2153_i16;
_26 = (_30.0,);
match _18 {
0 => bb4,
1 => bb2,
2 => bb3,
4290608279 => bb7,
_ => bb6
}
}
bb6 = {
_3 = _7;
_1 = [24610_i16,(-23938_i16),15317_i16,18584_i16,8156_i16,(-13467_i16)];
_19.fld0 = [_15.0,_15.0];
_5 = [(-26929_i16),(-29351_i16),(-17702_i16),20396_i16,(-30133_i16),(-2559_i16)];
_9 = [63370_u16,10917_u16,41995_u16,64716_u16,52175_u16,14662_u16,48134_u16,15733_u16];
_3 = [(-32251_i16),26849_i16,2386_i16,14919_i16,4138_i16,32132_i16];
_22 = _11 & _11;
_15.1 = (12231462660191581105_usize, 4903479400361946450_u64);
_9 = [62423_u16,54840_u16,15644_u16,24095_u16,23989_u16,57589_u16,12562_u16,27272_u16];
_16 = _15.0 as f32;
_15.0 = (-2076833997_i32) as i128;
_9 = [27016_u16,16490_u16,11836_u16,33279_u16,42961_u16,7380_u16,17153_u16,17107_u16];
_21 = [47911_u16];
_15.1 = (0_usize, 13125302857431852341_u64);
_12 = !80053770394254141080349562379991607089_u128;
Goto(bb4)
}
bb7 = {
_39.0 = 19351_u16;
_8 = _5;
_24 = (-8323_i16) * (-13804_i16);
_3 = _4;
_19.fld1 = !_15.1.0;
_22 = _39.0 as isize;
_4 = [_24,_24,_24,_24,_24,_24];
_12 = 262215446095340196803115333541606311005_u128;
Goto(bb8)
}
bb8 = {
_41 = _16 + _16;
_29 = _22 << _31;
_35 = _11 << _24;
_39.0 = 13450_u16;
_37 = _15;
_40 = !_23;
_18 = _23 as u32;
RET = _7;
_26.0 = _30.0;
_33 = (-293270955168143704_i64);
_37.0 = '\u{2d12b}' as i128;
_30.0 = -_26.0;
_41 = _16;
_29 = _39.0 as isize;
_43 = _35;
_39.2 = _12 as i64;
_10 = [_35,_35,_43];
_38 = _22;
_7 = _20;
_39.1 = -_16;
_6 = _7;
match _15.1.1 {
8381171081402553521 => bb10,
_ => bb9
}
}
bb9 = {
_3 = _7;
_1 = [24610_i16,(-23938_i16),15317_i16,18584_i16,8156_i16,(-13467_i16)];
_19.fld0 = [_15.0,_15.0];
_5 = [(-26929_i16),(-29351_i16),(-17702_i16),20396_i16,(-30133_i16),(-2559_i16)];
_9 = [63370_u16,10917_u16,41995_u16,64716_u16,52175_u16,14662_u16,48134_u16,15733_u16];
_3 = [(-32251_i16),26849_i16,2386_i16,14919_i16,4138_i16,32132_i16];
_22 = _11 & _11;
_15.1 = (12231462660191581105_usize, 4903479400361946450_u64);
_9 = [62423_u16,54840_u16,15644_u16,24095_u16,23989_u16,57589_u16,12562_u16,27272_u16];
_16 = _15.0 as f32;
_15.0 = (-2076833997_i32) as i128;
_9 = [27016_u16,16490_u16,11836_u16,33279_u16,42961_u16,7380_u16,17153_u16,17107_u16];
_21 = [47911_u16];
_15.1 = (0_usize, 13125302857431852341_u64);
_12 = !80053770394254141080349562379991607089_u128;
Goto(bb4)
}
bb10 = {
_40 = _28 & _23;
_9 = [_39.0,_39.0,_39.0,_39.0,_39.0,_39.0,_39.0,_39.0];
_30 = (_26.0,);
_39.1 = _16;
_15.1.0 = _37.1.0 | _19.fld1;
_39.0 = _15.0 as u16;
_1 = [_24,_24,_24,_24,_24,_24];
_12 = 40087049766539089905737960908501194375_u128 - 27483021801996364729847440617819304714_u128;
_39 = (18976_u16, _41, _33);
_16 = _41 + _41;
_12 = 326465573587093110322751355545013902890_u128;
_39.2 = _33;
_19.fld0 = [_37.0,_15.0];
_4 = [_24,_24,_24,_24,_24,_24];
match _39.0 {
0 => bb1,
1 => bb9,
2 => bb7,
3 => bb6,
4 => bb11,
5 => bb12,
18976 => bb14,
_ => bb13
}
}
bb11 = {
_24 = _15.1.0 as i16;
_7 = [_24,_24,_24,_24,_24,_24];
_10 = [_22,_11,_11];
_15.1 = (6_usize, 9911990548905150624_u64);
_2 = [2062403922_i32,1409222589_i32,(-1585331132_i32),(-1823375775_i32),(-471858932_i32)];
_19.fld1 = 18966_u16 as usize;
_23 = _15.1.1 != _15.1.1;
_19.fld0 = [_15.0,_15.0];
_15.1.0 = !_19.fld1;
_15.1.1 = 10871426298855640817_u64 >> _15.0;
_1 = [_24,_24,_24,_24,_24,_24];
_11 = !_22;
_7 = [_24,_24,_24,_24,_24,_24];
_31 = 1895715719_i32 as isize;
_24 = (-3285_i16);
_15.1.0 = _24 as usize;
_15.1 = (_19.fld1, 8381171081402553521_u64);
_6 = [_24,_24,_24,_24,_24,_24];
_7 = _4;
_26.0 = 8797_u16 as f64;
Goto(bb5)
}
bb12 = {
_41 = _16 + _16;
_29 = _22 << _31;
_35 = _11 << _24;
_39.0 = 13450_u16;
_37 = _15;
_40 = !_23;
_18 = _23 as u32;
RET = _7;
_26.0 = _30.0;
_33 = (-293270955168143704_i64);
_37.0 = '\u{2d12b}' as i128;
_30.0 = -_26.0;
_41 = _16;
_29 = _39.0 as isize;
_43 = _35;
_39.2 = _12 as i64;
_10 = [_35,_35,_43];
_38 = _22;
_7 = _20;
_39.1 = -_16;
_6 = _7;
match _15.1.1 {
8381171081402553521 => bb10,
_ => bb9
}
}
bb13 = {
_30 = (_26.0,);
_28 = !_23;
_16 = 7333896298845211208_i64 as f32;
_11 = _22 - _22;
_29 = 7254057312830020972_i64 as isize;
_5 = [_24,_24,_24,_24,_24,_24];
_34 = _23 as i8;
_20 = _8;
_12 = 14695883822299677122284215288279332172_u128;
_19.fld0 = [_15.0,_15.0];
_37.1.0 = _16 as usize;
_37.0 = -_15.0;
_29 = _11;
_23 = _28;
_23 = !_28;
_31 = 225_u8 as isize;
_26 = _30;
_15.1.0 = !_37.1.0;
_24 = !2153_i16;
_26 = (_30.0,);
match _18 {
0 => bb4,
1 => bb2,
2 => bb3,
4290608279 => bb7,
_ => bb6
}
}
bb14 = {
_19.fld0 = [_37.0,_37.0];
_44 = _43;
_23 = !_40;
_31 = _43;
_37.1.1 = _15.1.1;
_43 = _44 << _44;
_8 = _6;
_4 = [_24,_24,_24,_24,_24,_24];
_15.1.0 = _41 as usize;
_30 = _26;
_37.1.1 = _18 as u64;
_34 = (-78_i8) | 77_i8;
_31 = !_11;
_3 = _7;
_37.0 = !_15.0;
_9 = [_39.0,_39.0,_39.0,_39.0,_39.0,_39.0,_39.0,_39.0];
_39.2 = -_33;
_29 = _43;
_38 = _19.fld1 as isize;
_40 = _43 <= _22;
_37.1.1 = _39.0 as u64;
_45 = '\u{16776}';
_39 = (33714_u16, _16, _33);
_43 = _29;
_31 = _18 as isize;
_15.1 = _37.1;
_16 = _41 - _41;
_46.0 = _39.1 as f64;
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(7_usize, 2_usize, Move(_2), 9_usize, Move(_9), 1_usize, Move(_1), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(7_usize, 4_usize, Move(_4), 11_usize, Move(_11), 7_usize, Move(_7), 38_usize, Move(_38)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(7_usize, 24_usize, Move(_24), 45_usize, Move(_45), 6_usize, Move(_6), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(7_usize, 21_usize, Move(_21), 37_usize, Move(_37), 5_usize, Move(_5), 50_usize, _50), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [u16; 8],mut _2: [i16; 6],mut _3: [u16; 8],mut _4: [i16; 6],mut _5: [i16; 6],mut _6: [u16; 8],mut _7: [i16; 6],mut _8: [isize; 3],mut _9: [i32; 5],mut _10: [i16; 6],mut _11: [i16; 6],mut _12: [i16; 6],mut _13: [i16; 6]) -> u128 {
mir! {
type RET = u128;
let _14: Adt51;
let _15: Adt42;
let _16: Adt52;
let _17: usize;
let _18: char;
let _19: [i32; 1];
let _20: [i32; 1];
let _21: [u16; 1];
let _22: isize;
let _23: char;
let _24: Adt48;
let _25: Adt54;
let _26: u64;
let _27: f32;
let _28: (u128,);
let _29: (usize, u64);
let _30: f32;
let _31: f64;
let _32: [isize; 3];
let _33: *const i64;
let _34: Adt52;
let _35: isize;
let _36: Adt51;
let _37: Adt54;
let _38: (usize, u64);
let _39: f64;
let _40: bool;
let _41: *const i64;
let _42: f64;
let _43: i16;
let _44: u64;
let _45: bool;
let _46: isize;
let _47: ();
let _48: ();
{
_12 = [(-3218_i16),(-11028_i16),(-26496_i16),(-16565_i16),(-29706_i16),8569_i16];
RET = 4783777698960474849087202540516397286_u128;
_2 = [19703_i16,(-12711_i16),(-9316_i16),(-28733_i16),(-11171_i16),(-8008_i16)];
Call(_12 = fn9(_9, _3, _7, _1, _4, _6, _6, _1, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [10543_i16,(-2251_i16),14223_i16,(-25624_i16),(-30506_i16),9845_i16];
_11 = [19291_i16,7372_i16,(-25146_i16),(-15574_i16),(-17136_i16),(-27771_i16)];
_5 = [(-21287_i16),(-6437_i16),15446_i16,(-5928_i16),23936_i16,(-7358_i16)];
_10 = [19750_i16,10047_i16,(-8773_i16),(-7362_i16),(-30657_i16),15495_i16];
_11 = [14830_i16,(-29326_i16),26070_i16,29444_i16,(-3236_i16),21737_i16];
Call(_12 = core::intrinsics::transmute(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4 = [(-18190_i16),31874_i16,(-5237_i16),27835_i16,(-16831_i16),9694_i16];
_8 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_13 = [(-17109_i16),11454_i16,(-16108_i16),30433_i16,(-32166_i16),(-891_i16)];
_10 = [16035_i16,29546_i16,30377_i16,(-10503_i16),(-20498_i16),109_i16];
_12 = [31462_i16,13055_i16,29032_i16,(-27137_i16),(-8403_i16),29149_i16];
_4 = _13;
RET = !251204681259250532524460819855362995628_u128;
_11 = [(-27913_i16),6597_i16,12585_i16,(-11215_i16),(-25694_i16),(-32250_i16)];
_2 = [21065_i16,(-3286_i16),(-27881_i16),21303_i16,(-16089_i16),30930_i16];
_10 = _2;
_12 = [(-15036_i16),11288_i16,(-12080_i16),(-2289_i16),24492_i16,23417_i16];
_9 = [1040098701_i32,(-808918192_i32),(-1479180511_i32),1767112425_i32,(-474857982_i32)];
_12 = [10800_i16,14486_i16,6085_i16,(-11082_i16),26927_i16,(-18685_i16)];
RET = 66476073490832349438698937953112622045_u128;
_9 = [(-674499383_i32),(-1618574453_i32),1874438195_i32,(-853420200_i32),(-1718275360_i32)];
_2 = [6041_i16,26276_i16,12303_i16,27926_i16,26802_i16,25220_i16];
Goto(bb3)
}
bb3 = {
_13 = [25777_i16,(-10819_i16),14591_i16,(-20364_i16),(-26746_i16),29734_i16];
_6 = [8754_u16,62756_u16,3208_u16,13542_u16,25207_u16,24754_u16,28949_u16,45176_u16];
_9 = [2066271679_i32,1807192019_i32,1582367496_i32,(-948887652_i32),(-2007066547_i32)];
RET = !39319127308544030553968715386272374311_u128;
_4 = _2;
_11 = [(-28753_i16),(-5555_i16),1808_i16,27945_i16,(-13788_i16),(-26745_i16)];
_4 = [(-19987_i16),16375_i16,19712_i16,11188_i16,19692_i16,(-22474_i16)];
_12 = [31406_i16,(-27777_i16),(-26320_i16),21245_i16,32591_i16,26963_i16];
_1 = [35201_u16,47181_u16,52445_u16,27473_u16,7416_u16,16716_u16,47332_u16,59399_u16];
_18 = '\u{ac80}';
_8 = [(-9223372036854775808_isize),(-9223372036854775808_isize),120_isize];
_10 = [(-21115_i16),9075_i16,4967_i16,(-13657_i16),5759_i16,(-26640_i16)];
_17 = 10509515556081265455_usize ^ 12926441787012068718_usize;
_4 = [(-17911_i16),12312_i16,14449_i16,(-18484_i16),(-20433_i16),2852_i16];
_13 = [31179_i16,(-5852_i16),12834_i16,9523_i16,(-27475_i16),(-16289_i16)];
_2 = _13;
_4 = [(-30962_i16),(-25639_i16),4543_i16,(-15684_i16),(-21494_i16),(-10492_i16)];
_2 = [(-7950_i16),(-17524_i16),19597_i16,465_i16,(-20080_i16),4654_i16];
_5 = _10;
_5 = [(-13446_i16),(-2042_i16),32531_i16,14588_i16,21183_i16,4011_i16];
_4 = [30951_i16,(-18928_i16),(-14462_i16),(-10119_i16),8813_i16,22_i16];
RET = 90457759966157585314703767876198131411_u128;
_4 = _5;
_5 = _12;
_11 = [(-1567_i16),(-14440_i16),26128_i16,(-4844_i16),8003_i16,(-12094_i16)];
RET = 146153601925214632270237471698400934500_u128;
_10 = [(-670_i16),22184_i16,(-22788_i16),(-14927_i16),(-31632_i16),(-32731_i16)];
match RET {
0 => bb2,
1 => bb4,
146153601925214632270237471698400934500 => bb6,
_ => bb5
}
}
bb4 = {
_4 = [(-18190_i16),31874_i16,(-5237_i16),27835_i16,(-16831_i16),9694_i16];
_8 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_13 = [(-17109_i16),11454_i16,(-16108_i16),30433_i16,(-32166_i16),(-891_i16)];
_10 = [16035_i16,29546_i16,30377_i16,(-10503_i16),(-20498_i16),109_i16];
_12 = [31462_i16,13055_i16,29032_i16,(-27137_i16),(-8403_i16),29149_i16];
_4 = _13;
RET = !251204681259250532524460819855362995628_u128;
_11 = [(-27913_i16),6597_i16,12585_i16,(-11215_i16),(-25694_i16),(-32250_i16)];
_2 = [21065_i16,(-3286_i16),(-27881_i16),21303_i16,(-16089_i16),30930_i16];
_10 = _2;
_12 = [(-15036_i16),11288_i16,(-12080_i16),(-2289_i16),24492_i16,23417_i16];
_9 = [1040098701_i32,(-808918192_i32),(-1479180511_i32),1767112425_i32,(-474857982_i32)];
_12 = [10800_i16,14486_i16,6085_i16,(-11082_i16),26927_i16,(-18685_i16)];
RET = 66476073490832349438698937953112622045_u128;
_9 = [(-674499383_i32),(-1618574453_i32),1874438195_i32,(-853420200_i32),(-1718275360_i32)];
_2 = [6041_i16,26276_i16,12303_i16,27926_i16,26802_i16,25220_i16];
Goto(bb3)
}
bb5 = {
_2 = [10543_i16,(-2251_i16),14223_i16,(-25624_i16),(-30506_i16),9845_i16];
_11 = [19291_i16,7372_i16,(-25146_i16),(-15574_i16),(-17136_i16),(-27771_i16)];
_5 = [(-21287_i16),(-6437_i16),15446_i16,(-5928_i16),23936_i16,(-7358_i16)];
_10 = [19750_i16,10047_i16,(-8773_i16),(-7362_i16),(-30657_i16),15495_i16];
_11 = [14830_i16,(-29326_i16),26070_i16,29444_i16,(-3236_i16),21737_i16];
Call(_12 = core::intrinsics::transmute(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
_10 = [(-28643_i16),(-18022_i16),(-10697_i16),28001_i16,(-29930_i16),30813_i16];
_17 = 9209322333122748888_usize;
_9 = [(-1852160153_i32),1529455770_i32,2105794017_i32,(-529766711_i32),1670992261_i32];
_6 = [16399_u16,26435_u16,6050_u16,32250_u16,61368_u16,40908_u16,29392_u16,58547_u16];
_2 = [(-14341_i16),(-17997_i16),18368_i16,24981_i16,29626_i16,(-31465_i16)];
_7 = [(-28944_i16),(-1336_i16),(-3962_i16),(-10630_i16),4280_i16,28453_i16];
RET = !221191760174463654282655122057175686076_u128;
_20 = [852067442_i32];
_7 = [(-11307_i16),31743_i16,(-25092_i16),(-2896_i16),5737_i16,9820_i16];
_21 = [56930_u16];
RET = !327912482974922316945179224565058300539_u128;
_8 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_21 = [241_u16];
RET = 34508231034833369255546287965639858101_u128;
_22 = (-15_i8) as isize;
_5 = [7724_i16,(-21935_i16),30221_i16,(-17141_i16),(-5659_i16),(-5122_i16)];
_4 = [6171_i16,22333_i16,30393_i16,(-13801_i16),(-6395_i16),16596_i16];
_17 = !15015907310007160130_usize;
_19 = _20;
_4 = [13555_i16,6453_i16,9166_i16,(-15976_i16),8446_i16,10159_i16];
_7 = [20165_i16,30771_i16,(-3732_i16),(-30485_i16),15614_i16,28807_i16];
_9 = [(-1823012620_i32),(-921596179_i32),(-1888118656_i32),1475372226_i32,(-687659532_i32)];
RET = 3247763059832004611996731977566558860_u128;
_22 = RET as isize;
Goto(bb7)
}
bb7 = {
_19 = _20;
_2 = [(-23800_i16),32140_i16,6045_i16,(-25629_i16),(-7400_i16),22200_i16];
_7 = [31957_i16,25382_i16,(-27310_i16),(-20358_i16),(-28276_i16),(-20074_i16)];
_1 = [27000_u16,52262_u16,53454_u16,21842_u16,30538_u16,34739_u16,35148_u16,59518_u16];
match RET {
0 => bb4,
1 => bb2,
2 => bb8,
3 => bb9,
3247763059832004611996731977566558860 => bb11,
_ => bb10
}
}
bb8 = {
_10 = [(-28643_i16),(-18022_i16),(-10697_i16),28001_i16,(-29930_i16),30813_i16];
_17 = 9209322333122748888_usize;
_9 = [(-1852160153_i32),1529455770_i32,2105794017_i32,(-529766711_i32),1670992261_i32];
_6 = [16399_u16,26435_u16,6050_u16,32250_u16,61368_u16,40908_u16,29392_u16,58547_u16];
_2 = [(-14341_i16),(-17997_i16),18368_i16,24981_i16,29626_i16,(-31465_i16)];
_7 = [(-28944_i16),(-1336_i16),(-3962_i16),(-10630_i16),4280_i16,28453_i16];
RET = !221191760174463654282655122057175686076_u128;
_20 = [852067442_i32];
_7 = [(-11307_i16),31743_i16,(-25092_i16),(-2896_i16),5737_i16,9820_i16];
_21 = [56930_u16];
RET = !327912482974922316945179224565058300539_u128;
_8 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_21 = [241_u16];
RET = 34508231034833369255546287965639858101_u128;
_22 = (-15_i8) as isize;
_5 = [7724_i16,(-21935_i16),30221_i16,(-17141_i16),(-5659_i16),(-5122_i16)];
_4 = [6171_i16,22333_i16,30393_i16,(-13801_i16),(-6395_i16),16596_i16];
_17 = !15015907310007160130_usize;
_19 = _20;
_4 = [13555_i16,6453_i16,9166_i16,(-15976_i16),8446_i16,10159_i16];
_7 = [20165_i16,30771_i16,(-3732_i16),(-30485_i16),15614_i16,28807_i16];
_9 = [(-1823012620_i32),(-921596179_i32),(-1888118656_i32),1475372226_i32,(-687659532_i32)];
RET = 3247763059832004611996731977566558860_u128;
_22 = RET as isize;
Goto(bb7)
}
bb9 = {
_2 = [10543_i16,(-2251_i16),14223_i16,(-25624_i16),(-30506_i16),9845_i16];
_11 = [19291_i16,7372_i16,(-25146_i16),(-15574_i16),(-17136_i16),(-27771_i16)];
_5 = [(-21287_i16),(-6437_i16),15446_i16,(-5928_i16),23936_i16,(-7358_i16)];
_10 = [19750_i16,10047_i16,(-8773_i16),(-7362_i16),(-30657_i16),15495_i16];
_11 = [14830_i16,(-29326_i16),26070_i16,29444_i16,(-3236_i16),21737_i16];
Call(_12 = core::intrinsics::transmute(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_4 = [(-18190_i16),31874_i16,(-5237_i16),27835_i16,(-16831_i16),9694_i16];
_8 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_13 = [(-17109_i16),11454_i16,(-16108_i16),30433_i16,(-32166_i16),(-891_i16)];
_10 = [16035_i16,29546_i16,30377_i16,(-10503_i16),(-20498_i16),109_i16];
_12 = [31462_i16,13055_i16,29032_i16,(-27137_i16),(-8403_i16),29149_i16];
_4 = _13;
RET = !251204681259250532524460819855362995628_u128;
_11 = [(-27913_i16),6597_i16,12585_i16,(-11215_i16),(-25694_i16),(-32250_i16)];
_2 = [21065_i16,(-3286_i16),(-27881_i16),21303_i16,(-16089_i16),30930_i16];
_10 = _2;
_12 = [(-15036_i16),11288_i16,(-12080_i16),(-2289_i16),24492_i16,23417_i16];
_9 = [1040098701_i32,(-808918192_i32),(-1479180511_i32),1767112425_i32,(-474857982_i32)];
_12 = [10800_i16,14486_i16,6085_i16,(-11082_i16),26927_i16,(-18685_i16)];
RET = 66476073490832349438698937953112622045_u128;
_9 = [(-674499383_i32),(-1618574453_i32),1874438195_i32,(-853420200_i32),(-1718275360_i32)];
_2 = [6041_i16,26276_i16,12303_i16,27926_i16,26802_i16,25220_i16];
Goto(bb3)
}
bb11 = {
RET = _17 as u128;
_26 = 17905376033636011429_u64;
_9 = [(-640988030_i32),2069265939_i32,1408747883_i32,(-955266557_i32),30991951_i32];
_7 = [10594_i16,22040_i16,(-21302_i16),(-25376_i16),(-9790_i16),(-16876_i16)];
_20 = _19;
_2 = _13;
_22 = !(-15_isize);
_21 = [42217_u16];
_23 = _18;
_28 = (RET,);
_21 = [52815_u16];
_11 = [3773_i16,(-23750_i16),4945_i16,(-6516_i16),(-25482_i16),507_i16];
_3 = [43300_u16,34491_u16,7504_u16,30101_u16,28509_u16,49225_u16,20872_u16,39734_u16];
_3 = [22539_u16,64619_u16,51769_u16,50119_u16,48284_u16,4825_u16,55157_u16,21686_u16];
_21 = [58585_u16];
_6 = _3;
_28.0 = !RET;
_18 = _23;
_21 = [31035_u16];
_11 = [16995_i16,11849_i16,1904_i16,1565_i16,6696_i16,(-14968_i16)];
_2 = [(-31739_i16),15922_i16,24485_i16,4521_i16,21845_i16,23358_i16];
_1 = [41129_u16,11180_u16,39386_u16,56349_u16,47372_u16,29444_u16,19204_u16,58287_u16];
_13 = [(-1641_i16),(-11524_i16),(-5811_i16),12021_i16,(-30241_i16),13601_i16];
_28 = (RET,);
_21 = [7001_u16];
match _26 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb4,
4 => bb5,
17905376033636011429 => bb12,
_ => bb10
}
}
bb12 = {
_25 = Adt54::Variant0 { fld0: 1547088314_i32,fld1: _23 };
_26 = !14430118880817596451_u64;
_28 = (RET,);
RET = _28.0;
_29.0 = _17 & _17;
_9 = [(-1495736401_i32),1533132686_i32,(-1460598439_i32),678915548_i32,688949740_i32];
place!(Field::<char>(Variant(_25, 0), 1)) = _23;
place!(Field::<i32>(Variant(_25, 0), 0)) = _17 as i32;
_29 = (_17, _26);
_5 = [32035_i16,(-29382_i16),(-3097_i16),23083_i16,31179_i16,(-16523_i16)];
_3 = [36343_u16,61777_u16,42879_u16,61783_u16,54603_u16,11887_u16,25109_u16,53744_u16];
_28 = (RET,);
_7 = [(-8904_i16),32404_i16,9843_i16,14525_i16,20431_i16,3809_i16];
SetDiscriminant(_25, 1);
_23 = _18;
_17 = _29.0;
_32 = [_22,_22,_22];
_6 = _3;
RET = 162058602322393127499545205336922480202_i128 as u128;
_35 = _22;
place!(Field::<i64>(Variant(_25, 1), 0)) = (-3753238858008173032_i64);
_12 = [(-29462_i16),(-16312_i16),29549_i16,(-15649_i16),(-3363_i16),17211_i16];
Goto(bb13)
}
bb13 = {
_18 = _23;
_4 = [(-12461_i16),30147_i16,29417_i16,(-14208_i16),17981_i16,25440_i16];
_29.1 = _26;
_5 = [22511_i16,1774_i16,3014_i16,13517_i16,16847_i16,30279_i16];
place!(Field::<i64>(Variant(_25, 1), 0)) = (-9149497038587520303_i64) | 7196692642152137922_i64;
_7 = [(-10038_i16),23961_i16,(-26960_i16),(-13417_i16),14489_i16,(-22096_i16)];
_2 = _13;
_5 = [21130_i16,(-22277_i16),(-1651_i16),(-11528_i16),(-31375_i16),(-13178_i16)];
_6 = [9506_u16,14573_u16,20925_u16,2463_u16,25303_u16,38566_u16,26283_u16,42506_u16];
_11 = _12;
RET = _28.0 << _29.0;
_3 = _1;
_38.1 = _29.1 ^ _26;
_20 = [938274894_i32];
_32 = _8;
_38 = (_29.0, _26);
Call(_32 = core::intrinsics::transmute(_8), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_28 = (RET,);
_26 = _38.1;
_24 = Adt48::Variant2 { fld0: Field::<i64>(Variant(_25, 1), 0) };
place!(Field::<[isize; 3]>(Variant(_25, 1), 2)) = [_22,_22,_35];
_2 = _5;
_29.0 = _38.0 - _38.0;
place!(Field::<i64>(Variant(_25, 1), 0)) = Field::<i64>(Variant(_24, 2), 0);
_17 = _38.0;
_9 = [(-1591039496_i32),(-506854503_i32),2100927838_i32,(-320190972_i32),(-985892611_i32)];
_10 = [28087_i16,31898_i16,16589_i16,(-27898_i16),(-28894_i16),(-32259_i16)];
_38 = (_17, _29.1);
_19 = [990943371_i32];
_20 = [(-1675629476_i32)];
_8 = _32;
_41 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_24, 2), 0)));
RET = 43269_u16 as u128;
_18 = _23;
_33 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_25, 1), 0)));
_40 = false & true;
place!(Field::<[isize; 3]>(Variant(_25, 1), 2)) = [_35,_22,_35];
_34 = Adt52::Variant0 { fld0: _9,fld1: _41,fld2: RET };
_43 = (-5464_i16);
_28 = (RET,);
_30 = _26 as f32;
SetDiscriminant(_34, 1);
_29.0 = _38.0 & _38.0;
_46 = _35;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(8_usize, 43_usize, Move(_43), 4_usize, Move(_4), 3_usize, Move(_3), 40_usize, Move(_40)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(8_usize, 23_usize, Move(_23), 38_usize, Move(_38), 26_usize, Move(_26), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(8_usize, 21_usize, Move(_21), 32_usize, Move(_32), 19_usize, Move(_19), 29_usize, Move(_29)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(8_usize, 8_usize, Move(_8), 9_usize, Move(_9), 48_usize, _48, 48_usize, _48), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [i32; 5],mut _2: [u16; 8],mut _3: [i16; 6],mut _4: [u16; 8],mut _5: [i16; 6],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: [u16; 8],mut _9: [i16; 6]) -> [i16; 6] {
mir! {
type RET = [i16; 6];
let _10: (u128,);
let _11: Adt50;
let _12: i128;
let _13: *const (u128,);
let _14: isize;
let _15: *const i64;
let _16: [i32; 1];
let _17: Adt53;
let _18: Adt55;
let _19: i32;
let _20: isize;
let _21: ();
let _22: ();
{
_8 = _7;
RET = [(-6204_i16),4350_i16,(-5468_i16),(-9481_i16),(-12257_i16),(-22058_i16)];
Call(_1 = fn10(_5, _3, _8, _8, RET, _5, _5, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _2;
_9 = [(-11131_i16),12436_i16,2627_i16,24817_i16,(-24097_i16),(-6936_i16)];
_5 = RET;
_5 = [31139_i16,31221_i16,(-31950_i16),11902_i16,9590_i16,(-17844_i16)];
RET = _9;
_2 = [45594_u16,29758_u16,29605_u16,31893_u16,43876_u16,26360_u16,62262_u16,4814_u16];
_9 = _5;
_4 = [5841_u16,46686_u16,43527_u16,34370_u16,28583_u16,61202_u16,57629_u16,22154_u16];
RET = [27770_i16,(-13298_i16),27762_i16,15534_i16,(-2810_i16),16682_i16];
_8 = [7648_u16,25115_u16,57312_u16,39940_u16,38372_u16,63849_u16,56689_u16,52042_u16];
_1 = [1417605958_i32,(-53074350_i32),(-139204737_i32),2044965737_i32,(-66815163_i32)];
_6 = [52311_u16,702_u16,64363_u16,53334_u16,11010_u16,10236_u16,18768_u16,51355_u16];
_10.0 = 234302402979509852856240091722948920135_u128 >> (-10_i8);
_3 = [18042_i16,(-15512_i16),(-21505_i16),10490_i16,11686_i16,(-10561_i16)];
_7 = [21246_u16,40421_u16,6280_u16,36861_u16,1016_u16,24674_u16,57164_u16,43266_u16];
_9 = _5;
_2 = [49408_u16,58577_u16,988_u16,24003_u16,25330_u16,52297_u16,52950_u16,35870_u16];
RET = [(-29553_i16),31921_i16,(-21011_i16),18226_i16,15349_i16,10994_i16];
_11.fld1 = 3_usize;
_3 = _5;
_9 = [(-2253_i16),(-10394_i16),16893_i16,14632_i16,30427_i16,(-4434_i16)];
_11.fld1 = 105_i8 as usize;
_2 = [5341_u16,12114_u16,53573_u16,7632_u16,28790_u16,41691_u16,15377_u16,43302_u16];
_1 = [(-1580154520_i32),(-1626334918_i32),(-1795408221_i32),593175765_i32,1698066432_i32];
_6 = [4930_u16,34246_u16,38305_u16,24589_u16,63176_u16,27589_u16,10980_u16,23511_u16];
_10.0 = 16542775780972005758527339464163420380_u128 << _11.fld1;
_10.0 = 115404916674807617519914384459129908454_u128;
_11.fld0 = [149814600654373981331068457037122438204_i128,(-3581928313623035503278288941812281422_i128)];
_10.0 = 32337_u16 as u128;
_6 = [31377_u16,46985_u16,52617_u16,9973_u16,28243_u16,47935_u16,4566_u16,51233_u16];
Goto(bb2)
}
bb2 = {
RET = [(-17811_i16),2039_i16,2221_i16,10588_i16,5182_i16,(-22580_i16)];
_12 = 111293620637594356381446375955619717742_i128;
_8 = [26217_u16,56289_u16,34412_u16,59157_u16,54396_u16,9082_u16,38287_u16,28307_u16];
_5 = [(-4225_i16),(-8602_i16),(-31969_i16),6662_i16,(-26748_i16),(-19274_i16)];
Goto(bb3)
}
bb3 = {
_13 = core::ptr::addr_of!(_10);
_11.fld1 = 7_usize + 1_usize;
_9 = [(-30695_i16),14694_i16,(-22476_i16),18761_i16,28805_i16,1685_i16];
RET = [8888_i16,5063_i16,2621_i16,15093_i16,19958_i16,157_i16];
_8 = [5439_u16,48070_u16,6984_u16,20239_u16,62634_u16,18197_u16,27254_u16,12475_u16];
_2 = _4;
_4 = [51616_u16,24575_u16,38283_u16,1293_u16,28970_u16,39551_u16,23296_u16,4604_u16];
_5 = [4649_i16,(-5332_i16),14224_i16,(-1672_i16),(-22085_i16),8628_i16];
_10.0 = '\u{b0035}' as u128;
_1 = [(-77177386_i32),(-250634402_i32),1470549266_i32,342092061_i32,1486135030_i32];
_14 = (-86_isize) >> _11.fld1;
Goto(bb4)
}
bb4 = {
_13 = core::ptr::addr_of!((*_13));
_5 = [(-13545_i16),(-29860_i16),(-3858_i16),16176_i16,(-8062_i16),(-30382_i16)];
_11.fld1 = 11198207630816668101_usize;
_13 = core::ptr::addr_of!((*_13));
_7 = _2;
match _12 {
0 => bb3,
1 => bb2,
2 => bb5,
111293620637594356381446375955619717742 => bb7,
_ => bb6
}
}
bb5 = {
_13 = core::ptr::addr_of!(_10);
_11.fld1 = 7_usize + 1_usize;
_9 = [(-30695_i16),14694_i16,(-22476_i16),18761_i16,28805_i16,1685_i16];
RET = [8888_i16,5063_i16,2621_i16,15093_i16,19958_i16,157_i16];
_8 = [5439_u16,48070_u16,6984_u16,20239_u16,62634_u16,18197_u16,27254_u16,12475_u16];
_2 = _4;
_4 = [51616_u16,24575_u16,38283_u16,1293_u16,28970_u16,39551_u16,23296_u16,4604_u16];
_5 = [4649_i16,(-5332_i16),14224_i16,(-1672_i16),(-22085_i16),8628_i16];
_10.0 = '\u{b0035}' as u128;
_1 = [(-77177386_i32),(-250634402_i32),1470549266_i32,342092061_i32,1486135030_i32];
_14 = (-86_isize) >> _11.fld1;
Goto(bb4)
}
bb6 = {
RET = [(-17811_i16),2039_i16,2221_i16,10588_i16,5182_i16,(-22580_i16)];
_12 = 111293620637594356381446375955619717742_i128;
_8 = [26217_u16,56289_u16,34412_u16,59157_u16,54396_u16,9082_u16,38287_u16,28307_u16];
_5 = [(-4225_i16),(-8602_i16),(-31969_i16),6662_i16,(-26748_i16),(-19274_i16)];
Goto(bb3)
}
bb7 = {
_1 = [(-552099867_i32),(-1269638575_i32),700313978_i32,16868627_i32,1103103023_i32];
_11.fld0 = [_12,_12];
_17 = Adt53::Variant3 { fld0: (-271237875_i32),fld1: _11 };
_8 = [61778_u16,63807_u16,47524_u16,6623_u16,23185_u16,16989_u16,13077_u16,47406_u16];
match _11.fld1 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
11198207630816668101 => bb15,
_ => bb14
}
}
bb8 = {
RET = [(-17811_i16),2039_i16,2221_i16,10588_i16,5182_i16,(-22580_i16)];
_12 = 111293620637594356381446375955619717742_i128;
_8 = [26217_u16,56289_u16,34412_u16,59157_u16,54396_u16,9082_u16,38287_u16,28307_u16];
_5 = [(-4225_i16),(-8602_i16),(-31969_i16),6662_i16,(-26748_i16),(-19274_i16)];
Goto(bb3)
}
bb9 = {
_13 = core::ptr::addr_of!(_10);
_11.fld1 = 7_usize + 1_usize;
_9 = [(-30695_i16),14694_i16,(-22476_i16),18761_i16,28805_i16,1685_i16];
RET = [8888_i16,5063_i16,2621_i16,15093_i16,19958_i16,157_i16];
_8 = [5439_u16,48070_u16,6984_u16,20239_u16,62634_u16,18197_u16,27254_u16,12475_u16];
_2 = _4;
_4 = [51616_u16,24575_u16,38283_u16,1293_u16,28970_u16,39551_u16,23296_u16,4604_u16];
_5 = [4649_i16,(-5332_i16),14224_i16,(-1672_i16),(-22085_i16),8628_i16];
_10.0 = '\u{b0035}' as u128;
_1 = [(-77177386_i32),(-250634402_i32),1470549266_i32,342092061_i32,1486135030_i32];
_14 = (-86_isize) >> _11.fld1;
Goto(bb4)
}
bb10 = {
_13 = core::ptr::addr_of!((*_13));
_5 = [(-13545_i16),(-29860_i16),(-3858_i16),16176_i16,(-8062_i16),(-30382_i16)];
_11.fld1 = 11198207630816668101_usize;
_13 = core::ptr::addr_of!((*_13));
_7 = _2;
match _12 {
0 => bb3,
1 => bb2,
2 => bb5,
111293620637594356381446375955619717742 => bb7,
_ => bb6
}
}
bb11 = {
_13 = core::ptr::addr_of!(_10);
_11.fld1 = 7_usize + 1_usize;
_9 = [(-30695_i16),14694_i16,(-22476_i16),18761_i16,28805_i16,1685_i16];
RET = [8888_i16,5063_i16,2621_i16,15093_i16,19958_i16,157_i16];
_8 = [5439_u16,48070_u16,6984_u16,20239_u16,62634_u16,18197_u16,27254_u16,12475_u16];
_2 = _4;
_4 = [51616_u16,24575_u16,38283_u16,1293_u16,28970_u16,39551_u16,23296_u16,4604_u16];
_5 = [4649_i16,(-5332_i16),14224_i16,(-1672_i16),(-22085_i16),8628_i16];
_10.0 = '\u{b0035}' as u128;
_1 = [(-77177386_i32),(-250634402_i32),1470549266_i32,342092061_i32,1486135030_i32];
_14 = (-86_isize) >> _11.fld1;
Goto(bb4)
}
bb12 = {
RET = [(-17811_i16),2039_i16,2221_i16,10588_i16,5182_i16,(-22580_i16)];
_12 = 111293620637594356381446375955619717742_i128;
_8 = [26217_u16,56289_u16,34412_u16,59157_u16,54396_u16,9082_u16,38287_u16,28307_u16];
_5 = [(-4225_i16),(-8602_i16),(-31969_i16),6662_i16,(-26748_i16),(-19274_i16)];
Goto(bb3)
}
bb13 = {
_4 = _2;
_9 = [(-11131_i16),12436_i16,2627_i16,24817_i16,(-24097_i16),(-6936_i16)];
_5 = RET;
_5 = [31139_i16,31221_i16,(-31950_i16),11902_i16,9590_i16,(-17844_i16)];
RET = _9;
_2 = [45594_u16,29758_u16,29605_u16,31893_u16,43876_u16,26360_u16,62262_u16,4814_u16];
_9 = _5;
_4 = [5841_u16,46686_u16,43527_u16,34370_u16,28583_u16,61202_u16,57629_u16,22154_u16];
RET = [27770_i16,(-13298_i16),27762_i16,15534_i16,(-2810_i16),16682_i16];
_8 = [7648_u16,25115_u16,57312_u16,39940_u16,38372_u16,63849_u16,56689_u16,52042_u16];
_1 = [1417605958_i32,(-53074350_i32),(-139204737_i32),2044965737_i32,(-66815163_i32)];
_6 = [52311_u16,702_u16,64363_u16,53334_u16,11010_u16,10236_u16,18768_u16,51355_u16];
_10.0 = 234302402979509852856240091722948920135_u128 >> (-10_i8);
_3 = [18042_i16,(-15512_i16),(-21505_i16),10490_i16,11686_i16,(-10561_i16)];
_7 = [21246_u16,40421_u16,6280_u16,36861_u16,1016_u16,24674_u16,57164_u16,43266_u16];
_9 = _5;
_2 = [49408_u16,58577_u16,988_u16,24003_u16,25330_u16,52297_u16,52950_u16,35870_u16];
RET = [(-29553_i16),31921_i16,(-21011_i16),18226_i16,15349_i16,10994_i16];
_11.fld1 = 3_usize;
_3 = _5;
_9 = [(-2253_i16),(-10394_i16),16893_i16,14632_i16,30427_i16,(-4434_i16)];
_11.fld1 = 105_i8 as usize;
_2 = [5341_u16,12114_u16,53573_u16,7632_u16,28790_u16,41691_u16,15377_u16,43302_u16];
_1 = [(-1580154520_i32),(-1626334918_i32),(-1795408221_i32),593175765_i32,1698066432_i32];
_6 = [4930_u16,34246_u16,38305_u16,24589_u16,63176_u16,27589_u16,10980_u16,23511_u16];
_10.0 = 16542775780972005758527339464163420380_u128 << _11.fld1;
_10.0 = 115404916674807617519914384459129908454_u128;
_11.fld0 = [149814600654373981331068457037122438204_i128,(-3581928313623035503278288941812281422_i128)];
_10.0 = 32337_u16 as u128;
_6 = [31377_u16,46985_u16,52617_u16,9973_u16,28243_u16,47935_u16,4566_u16,51233_u16];
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
_4 = _8;
_11 = Field::<Adt50>(Variant(_17, 3), 1);
_11.fld0 = Field::<Adt50>(Variant(_17, 3), 1).fld0;
_3 = [15571_i16,(-20928_i16),(-16564_i16),25323_i16,(-13692_i16),2859_i16];
_5 = RET;
place!(Field::<i32>(Variant(_17, 3), 0)) = 102529914_i32;
_10 = (322830516828688254114417728409261949284_u128,);
_9 = [18595_i16,11033_i16,(-14918_i16),28857_i16,2802_i16,(-3436_i16)];
_19 = -Field::<i32>(Variant(_17, 3), 0);
Goto(bb16)
}
bb16 = {
Call(_21 = dump_var(9_usize, 19_usize, Move(_19), 9_usize, Move(_9), 6_usize, Move(_6), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_21 = dump_var(9_usize, 10_usize, Move(_10), 4_usize, Move(_4), 22_usize, _22, 22_usize, _22), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [i16; 6],mut _2: [i16; 6],mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [u16; 8]) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _9: ([u16; 8], i128, bool, f64);
let _10: (u16, (u16, f32, i64), i8);
let _11: Adt56;
let _12: f64;
let _13: usize;
let _14: [isize; 3];
let _15: f64;
let _16: Adt42;
let _17: (u16, f32, i64);
let _18: ([u16; 8], i128, bool, f64);
let _19: Adt50;
let _20: [i16; 6];
let _21: u128;
let _22: char;
let _23: Adt46;
let _24: u8;
let _25: u64;
let _26: i32;
let _27: [u16; 8];
let _28: [i32; 1];
let _29: f64;
let _30: char;
let _31: Adt51;
let _32: f32;
let _33: Adt54;
let _34: f32;
let _35: isize;
let _36: *const char;
let _37: ();
let _38: ();
{
_5 = _7;
_2 = [(-25710_i16),17817_i16,18592_i16,7250_i16,22697_i16,16131_i16];
RET = [(-326215889_i32),(-1868085807_i32),606851290_i32,(-579828180_i32),1248923943_i32];
_8 = [7236_u16,14327_u16,34639_u16,19947_u16,1407_u16,16273_u16,32866_u16,8921_u16];
_4 = [8510_u16,3276_u16,47205_u16,60531_u16,32163_u16,52754_u16,26728_u16,24309_u16];
_4 = [19846_u16,4077_u16,3177_u16,4105_u16,16295_u16,28298_u16,59174_u16,33599_u16];
_10.1.1 = 2273824383825916810_i64 as f32;
Goto(bb1)
}
bb1 = {
_7 = [6866_i16,(-13543_i16),8634_i16,(-8136_i16),(-9377_i16),5967_i16];
_9.2 = !false;
_1 = [16804_i16,(-21382_i16),(-19098_i16),(-19334_i16),(-27816_i16),21972_i16];
RET = [(-2063349894_i32),(-1501425938_i32),(-72897759_i32),599222722_i32,883454248_i32];
_9.0 = _4;
_13 = 201_u8 as usize;
_2 = [16918_i16,(-27886_i16),2991_i16,7707_i16,(-14115_i16),(-17523_i16)];
_10.2 = _10.1.1 as i8;
Goto(bb2)
}
bb2 = {
_10.1.2 = !4499375734669653037_i64;
_14 = [(-34_isize),(-99_isize),25_isize];
_9.1 = 124801940359193777319001533542648349263_i128 * (-301010080754071579552145471734162105_i128);
_3 = [1060_u16,9274_u16,21860_u16,53911_u16,36671_u16,14495_u16,38492_u16,19073_u16];
Call(_10.2 = fn11(_7, _10.1.2, _2, _2, _3, _14, _2, _6, _9.2, _14, RET, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_14 = [62_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
Goto(bb4)
}
bb4 = {
_15 = 61_u8 as f64;
_4 = [1817_u16,52374_u16,29048_u16,5991_u16,3524_u16,12258_u16,29116_u16,56357_u16];
_9.2 = !false;
_10.1.0 = !61127_u16;
RET = [(-37917295_i32),(-922909519_i32),(-1783431367_i32),(-1605197770_i32),1529302488_i32];
_1 = [(-8329_i16),(-17128_i16),(-13661_i16),30621_i16,14926_i16,(-2633_i16)];
_15 = 52_isize as f64;
_4 = [_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0];
_9.3 = _15;
_5 = _1;
_17 = (_10.1.0, _10.1.1, _10.1.2);
_10.0 = _10.1.0;
_4 = [_17.0,_10.1.0,_10.1.0,_10.0,_10.1.0,_10.1.0,_10.1.0,_17.0];
_2 = _7;
_7 = [18927_i16,26642_i16,2747_i16,9442_i16,13872_i16,(-6593_i16)];
_10.1.2 = _17.2 >> _10.2;
_5 = [(-20760_i16),19616_i16,4578_i16,20823_i16,(-12482_i16),(-17665_i16)];
_9 = (_3, (-46357139447512511786612201718354683075_i128), true, _15);
_5 = [14760_i16,(-4421_i16),2026_i16,(-22555_i16),30959_i16,21499_i16];
_10 = (_17.0, _17, (-109_i8));
_17.2 = !_10.1.2;
RET = [(-622872869_i32),1494653439_i32,183881242_i32,(-1805082856_i32),1021338669_i32];
_14 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_15 = _9.3;
Call(_9 = fn18(_6, _14, _7, _10.1.1, _8, _1, _8, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_18 = (_3, _9.1, _9.2, _9.3);
_10.1.1 = _10.1.0 as f32;
_9 = _18;
_14 = [(-25_isize),96_isize,(-75_isize)];
_18.0 = [_10.0,_10.0,_10.1.0,_10.0,_17.0,_10.0,_10.1.0,_17.0];
_17.2 = !_10.1.2;
_13 = _9.3 as usize;
Goto(bb6)
}
bb6 = {
_12 = _18.3 - _18.3;
_3 = _9.0;
_4 = [_10.1.0,_17.0,_10.1.0,_10.0,_10.0,_10.1.0,_10.0,_17.0];
RET = [197524204_i32,(-928629661_i32),114990866_i32,270688677_i32,160527517_i32];
_3 = [_17.0,_17.0,_10.0,_17.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0];
_20 = [(-17426_i16),(-14349_i16),(-25596_i16),16212_i16,12144_i16,(-17954_i16)];
_9.0 = [_10.1.0,_10.1.0,_10.0,_17.0,_10.0,_10.1.0,_17.0,_10.0];
_7 = [18481_i16,(-8360_i16),(-31503_i16),(-6124_i16),31454_i16,20409_i16];
_17 = _10.1;
_4 = [_10.0,_10.0,_10.1.0,_17.0,_10.1.0,_10.1.0,_10.0,_10.0];
_17.1 = _10.1.1;
_18.3 = -_12;
_19.fld1 = _13;
_10.2 = (-73_i8) | (-50_i8);
_17.2 = _10.1.2 & _10.1.2;
_6 = [20026_i16,16130_i16,18149_i16,(-17690_i16),25369_i16,10857_i16];
_2 = [(-30766_i16),30026_i16,(-10160_i16),(-8143_i16),(-14109_i16),26936_i16];
_14 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9.0 = [_17.0,_10.1.0,_10.0,_10.1.0,_10.0,_10.1.0,_17.0,_10.1.0];
_10.1.0 = !_10.0;
_21 = (-9223372036854775808_isize) as u128;
_17.0 = _10.1.0 * _10.1.0;
_18.2 = _9.2 > _9.2;
_5 = [12618_i16,(-26272_i16),(-18023_i16),7078_i16,25116_i16,(-21826_i16)];
_17.1 = _10.1.1 + _10.1.1;
_18.0 = _8;
_8 = [_10.0,_17.0,_10.1.0,_17.0,_10.0,_10.0,_10.0,_10.1.0];
Goto(bb7)
}
bb7 = {
_10.1.2 = _17.2;
_9 = (_18.0, _18.1, _18.2, _12);
_19.fld1 = !_13;
_18.1 = _9.1 ^ _9.1;
_4 = [_10.1.0,_10.1.0,_10.0,_17.0,_10.0,_10.1.0,_10.0,_10.1.0];
_19.fld0 = [_18.1,_18.1];
_19.fld1 = _13;
_10.2 = _18.1 as i8;
_26 = 1563713596_i32 | (-1759938741_i32);
_1 = _2;
_18.2 = _13 == _13;
_28 = [_26];
_17 = _10.1;
Goto(bb8)
}
bb8 = {
_4 = _18.0;
_10.0 = _17.0 + _17.0;
RET = [_26,_26,_26,_26,_26];
_2 = [18206_i16,(-243_i16),16271_i16,(-5032_i16),(-12707_i16),(-14972_i16)];
_2 = [4424_i16,22428_i16,12610_i16,(-9928_i16),24377_i16,594_i16];
_22 = '\u{ffbe8}';
_13 = _21 as usize;
RET = [_26,_26,_26,_26,_26];
_7 = [(-22525_i16),(-2402_i16),(-6997_i16),17268_i16,(-11435_i16),6980_i16];
_30 = _22;
_18.0 = [_17.0,_17.0,_10.0,_10.1.0,_10.0,_10.1.0,_10.0,_10.0];
_19.fld0 = [_9.1,_18.1];
_28 = [_26];
_18.3 = _9.3 * _9.3;
RET = [_26,_26,_26,_26,_26];
_15 = -_18.3;
_32 = _10.1.1 + _17.1;
_10.2 = 67_i8 >> _9.1;
_10.2 = _13 as i8;
_6 = [(-6107_i16),4933_i16,(-3258_i16),4603_i16,1141_i16,23844_i16];
RET = [_26,_26,_26,_26,_26];
_18.0 = [_10.0,_10.1.0,_10.0,_17.0,_17.0,_10.0,_17.0,_17.0];
_27 = [_10.1.0,_10.0,_10.1.0,_10.1.0,_10.1.0,_10.0,_10.0,_10.0];
_25 = !16359734231105130827_u64;
Goto(bb9)
}
bb9 = {
_9.1 = _18.1;
_17.1 = -_32;
_20 = [28700_i16,(-1554_i16),32631_i16,27406_i16,15983_i16,30710_i16];
_10.2 = (-112_i8) + 18_i8;
_30 = _22;
_12 = 9223372036854775807_isize as f64;
_18 = _9;
_10.0 = !_10.1.0;
Goto(bb10)
}
bb10 = {
_1 = [18383_i16,13795_i16,31919_i16,(-10298_i16),(-7961_i16),(-16408_i16)];
_21 = !305617849854258715897896243813134068567_u128;
_29 = _18.1 as f64;
_10 = (_17.0, _17, 106_i8);
_34 = _17.1;
match _10.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
106 => bb12,
_ => bb11
}
}
bb11 = {
_7 = [6866_i16,(-13543_i16),8634_i16,(-8136_i16),(-9377_i16),5967_i16];
_9.2 = !false;
_1 = [16804_i16,(-21382_i16),(-19098_i16),(-19334_i16),(-27816_i16),21972_i16];
RET = [(-2063349894_i32),(-1501425938_i32),(-72897759_i32),599222722_i32,883454248_i32];
_9.0 = _4;
_13 = 201_u8 as usize;
_2 = [16918_i16,(-27886_i16),2991_i16,7707_i16,(-14115_i16),(-17523_i16)];
_10.2 = _10.1.1 as i8;
Goto(bb2)
}
bb12 = {
_8 = _4;
_9.0 = [_17.0,_17.0,_17.0,_10.1.0,_10.1.0,_10.0,_17.0,_10.0];
_15 = _9.3;
_9.1 = _18.1 | _18.1;
_36 = core::ptr::addr_of!(_22);
_24 = 200_u8 + 88_u8;
_8 = [_17.0,_10.0,_17.0,_10.0,_10.0,_10.0,_10.0,_17.0];
_7 = _1;
_3 = [_10.0,_10.0,_10.0,_10.0,_10.1.0,_17.0,_10.0,_10.1.0];
_7 = _2;
_24 = 155_u8;
RET = [_26,_26,_26,_26,_26];
_10.2 = (-2_i8);
match _24 {
0 => bb13,
1 => bb14,
2 => bb15,
155 => bb17,
_ => bb16
}
}
bb13 = {
_7 = [6866_i16,(-13543_i16),8634_i16,(-8136_i16),(-9377_i16),5967_i16];
_9.2 = !false;
_1 = [16804_i16,(-21382_i16),(-19098_i16),(-19334_i16),(-27816_i16),21972_i16];
RET = [(-2063349894_i32),(-1501425938_i32),(-72897759_i32),599222722_i32,883454248_i32];
_9.0 = _4;
_13 = 201_u8 as usize;
_2 = [16918_i16,(-27886_i16),2991_i16,7707_i16,(-14115_i16),(-17523_i16)];
_10.2 = _10.1.1 as i8;
Goto(bb2)
}
bb14 = {
_18 = (_3, _9.1, _9.2, _9.3);
_10.1.1 = _10.1.0 as f32;
_9 = _18;
_14 = [(-25_isize),96_isize,(-75_isize)];
_18.0 = [_10.0,_10.0,_10.1.0,_10.0,_17.0,_10.0,_10.1.0,_17.0];
_17.2 = !_10.1.2;
_13 = _9.3 as usize;
Goto(bb6)
}
bb15 = {
_12 = _18.3 - _18.3;
_3 = _9.0;
_4 = [_10.1.0,_17.0,_10.1.0,_10.0,_10.0,_10.1.0,_10.0,_17.0];
RET = [197524204_i32,(-928629661_i32),114990866_i32,270688677_i32,160527517_i32];
_3 = [_17.0,_17.0,_10.0,_17.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0];
_20 = [(-17426_i16),(-14349_i16),(-25596_i16),16212_i16,12144_i16,(-17954_i16)];
_9.0 = [_10.1.0,_10.1.0,_10.0,_17.0,_10.0,_10.1.0,_17.0,_10.0];
_7 = [18481_i16,(-8360_i16),(-31503_i16),(-6124_i16),31454_i16,20409_i16];
_17 = _10.1;
_4 = [_10.0,_10.0,_10.1.0,_17.0,_10.1.0,_10.1.0,_10.0,_10.0];
_17.1 = _10.1.1;
_18.3 = -_12;
_19.fld1 = _13;
_10.2 = (-73_i8) | (-50_i8);
_17.2 = _10.1.2 & _10.1.2;
_6 = [20026_i16,16130_i16,18149_i16,(-17690_i16),25369_i16,10857_i16];
_2 = [(-30766_i16),30026_i16,(-10160_i16),(-8143_i16),(-14109_i16),26936_i16];
_14 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9.0 = [_17.0,_10.1.0,_10.0,_10.1.0,_10.0,_10.1.0,_17.0,_10.1.0];
_10.1.0 = !_10.0;
_21 = (-9223372036854775808_isize) as u128;
_17.0 = _10.1.0 * _10.1.0;
_18.2 = _9.2 > _9.2;
_5 = [12618_i16,(-26272_i16),(-18023_i16),7078_i16,25116_i16,(-21826_i16)];
_17.1 = _10.1.1 + _10.1.1;
_18.0 = _8;
_8 = [_10.0,_17.0,_10.1.0,_17.0,_10.0,_10.0,_10.0,_10.1.0];
Goto(bb7)
}
bb16 = {
_15 = 61_u8 as f64;
_4 = [1817_u16,52374_u16,29048_u16,5991_u16,3524_u16,12258_u16,29116_u16,56357_u16];
_9.2 = !false;
_10.1.0 = !61127_u16;
RET = [(-37917295_i32),(-922909519_i32),(-1783431367_i32),(-1605197770_i32),1529302488_i32];
_1 = [(-8329_i16),(-17128_i16),(-13661_i16),30621_i16,14926_i16,(-2633_i16)];
_15 = 52_isize as f64;
_4 = [_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0,_10.1.0];
_9.3 = _15;
_5 = _1;
_17 = (_10.1.0, _10.1.1, _10.1.2);
_10.0 = _10.1.0;
_4 = [_17.0,_10.1.0,_10.1.0,_10.0,_10.1.0,_10.1.0,_10.1.0,_17.0];
_2 = _7;
_7 = [18927_i16,26642_i16,2747_i16,9442_i16,13872_i16,(-6593_i16)];
_10.1.2 = _17.2 >> _10.2;
_5 = [(-20760_i16),19616_i16,4578_i16,20823_i16,(-12482_i16),(-17665_i16)];
_9 = (_3, (-46357139447512511786612201718354683075_i128), true, _15);
_5 = [14760_i16,(-4421_i16),2026_i16,(-22555_i16),30959_i16,21499_i16];
_10 = (_17.0, _17, (-109_i8));
_17.2 = !_10.1.2;
RET = [(-622872869_i32),1494653439_i32,183881242_i32,(-1805082856_i32),1021338669_i32];
_14 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_15 = _9.3;
Call(_9 = fn18(_6, _14, _7, _10.1.1, _8, _1, _8, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb17 = {
_22 = _30;
_26 = 464791399_i32;
_25 = !11242082080609619853_u64;
_18 = (_8, _9.1, _9.2, _9.3);
_17.2 = _21 as i64;
_17.1 = _10.1.1 * _10.1.1;
_36 = core::ptr::addr_of!((*_36));
_19.fld1 = _13;
_17.1 = _19.fld1 as f32;
_29 = _18.3 + _15;
_35 = _22 as isize;
_7 = _1;
_18.3 = _10.1.2 as f64;
_9.1 = !_18.1;
_18 = _9;
_10.1.0 = _10.0 ^ _17.0;
_18.2 = !_9.2;
_15 = -_9.3;
_9.2 = !_18.2;
_18.1 = -_9.1;
_17.1 = _15 as f32;
_17 = (_10.0, _10.1.1, _10.1.2);
_5 = [31537_i16,(-25676_i16),5901_i16,2181_i16,(-21166_i16),5794_i16];
_21 = !309285623488386712969703868814804921971_u128;
Goto(bb18)
}
bb18 = {
Call(_37 = dump_var(10_usize, 35_usize, Move(_35), 26_usize, Move(_26), 5_usize, Move(_5), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_37 = dump_var(10_usize, 30_usize, Move(_30), 27_usize, Move(_27), 3_usize, Move(_3), 8_usize, Move(_8)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_37 = dump_var(10_usize, 21_usize, Move(_21), 4_usize, Move(_4), 38_usize, _38, 38_usize, _38), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [i16; 6],mut _2: i64,mut _3: [i16; 6],mut _4: [i16; 6],mut _5: [u16; 8],mut _6: [isize; 3],mut _7: [i16; 6],mut _8: [i16; 6],mut _9: bool,mut _10: [isize; 3],mut _11: [i32; 5],mut _12: [u16; 8]) -> i8 {
mir! {
type RET = i8;
let _13: Adt50;
let _14: f32;
let _15: char;
let _16: f32;
let _17: ([u16; 8], i128, bool, f64);
let _18: bool;
let _19: i64;
let _20: *const char;
let _21: [u16; 1];
let _22: (f64,);
let _23: char;
let _24: u128;
let _25: isize;
let _26: i8;
let _27: Adt45;
let _28: char;
let _29: Adt44;
let _30: Adt45;
let _31: f64;
let _32: i8;
let _33: Adt40;
let _34: (f64,);
let _35: i8;
let _36: bool;
let _37: [i32; 5];
let _38: isize;
let _39: [i32; 5];
let _40: *mut u32;
let _41: char;
let _42: *mut u32;
let _43: *const i8;
let _44: Adt40;
let _45: f32;
let _46: ();
let _47: ();
{
_6 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6 = [9223372036854775807_isize,(-9223372036854775808_isize),82_isize];
Call(_1 = fn12(_9, _4, _11, _7, _6, _7, _4, _6, _7, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = [39_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_12 = _5;
_3 = _8;
_12 = [12690_u16,18338_u16,14990_u16,56505_u16,43052_u16,27997_u16,42434_u16,21916_u16];
_13.fld0 = [(-163411909859374600465655311711342724084_i128),71730903315735153856686082171652194854_i128];
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,22_isize];
_11 = [1470220435_i32,(-297502871_i32),1333407950_i32,(-1804061531_i32),1024403449_i32];
_4 = [9059_i16,(-29440_i16),7562_i16,5936_i16,1983_i16,(-5488_i16)];
_7 = [18681_i16,22185_i16,(-27324_i16),20212_i16,(-14546_i16),(-14767_i16)];
_14 = 6258995919966231983_usize as f32;
_2 = 64_i8 as i64;
_9 = false;
_14 = 7145518125204411781645370163082827731_u128 as f32;
_3 = [(-17761_i16),26090_i16,17550_i16,23258_i16,24337_i16,12282_i16];
RET = (-80_i8) ^ (-15_i8);
_3 = [(-25493_i16),(-5758_i16),2288_i16,(-28993_i16),21733_i16,16165_i16];
_4 = [(-15502_i16),17705_i16,(-10779_i16),21307_i16,8674_i16,(-22427_i16)];
_5 = [8658_u16,3072_u16,56819_u16,31200_u16,12967_u16,30241_u16,3002_u16,40312_u16];
_12 = _5;
_12 = [32188_u16,2902_u16,1161_u16,6075_u16,46795_u16,48939_u16,60592_u16,6225_u16];
_3 = [(-18001_i16),17679_i16,27362_i16,(-12155_i16),30974_i16,(-16814_i16)];
Call(RET = core::intrinsics::bswap(74_i8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = [56_isize,9223372036854775807_isize,30_isize];
RET = (-102_i8) << _2;
_9 = RET <= RET;
_13.fld1 = 305741656722970092948151759795431790496_u128 as usize;
_17.0 = _5;
RET = 34_i8 << _2;
_6 = _10;
_17.0 = _5;
_16 = -_14;
_17.3 = 61257_u16 as f64;
_1 = [(-13199_i16),(-435_i16),12333_i16,(-646_i16),(-18592_i16),(-17617_i16)];
RET = 50_i8 | (-119_i8);
_2 = 1784240428549061224_i64 & 7214068199994497720_i64;
_17.2 = _13.fld1 <= _13.fld1;
_8 = [(-8986_i16),31224_i16,1752_i16,16652_i16,(-30007_i16),(-13012_i16)];
_17.3 = (-594317807_i32) as f64;
_15 = '\u{bcd2c}';
_10 = [112_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.1 = !(-40233179209230652971295485252784531559_i128);
_17.2 = !_9;
Goto(bb3)
}
bb3 = {
_15 = '\u{942de}';
_14 = 2946886414_u32 as f32;
_19 = -_2;
_17.3 = _2 as f64;
_18 = !_9;
_17.3 = RET as f64;
_10 = _6;
_15 = '\u{c6618}';
_5 = [18792_u16,19356_u16,53017_u16,7001_u16,8157_u16,48741_u16,25481_u16,5109_u16];
_14 = -_16;
_2 = _19 | _19;
_15 = '\u{fc623}';
_23 = _15;
_22.0 = -_17.3;
_24 = 179576555789734117832786770762619522232_u128;
_3 = [(-22565_i16),25199_i16,(-16423_i16),6168_i16,(-10134_i16),(-26902_i16)];
match _24 {
0 => bb1,
1 => bb4,
179576555789734117832786770762619522232 => bb6,
_ => bb5
}
}
bb4 = {
_10 = [56_isize,9223372036854775807_isize,30_isize];
RET = (-102_i8) << _2;
_9 = RET <= RET;
_13.fld1 = 305741656722970092948151759795431790496_u128 as usize;
_17.0 = _5;
RET = 34_i8 << _2;
_6 = _10;
_17.0 = _5;
_16 = -_14;
_17.3 = 61257_u16 as f64;
_1 = [(-13199_i16),(-435_i16),12333_i16,(-646_i16),(-18592_i16),(-17617_i16)];
RET = 50_i8 | (-119_i8);
_2 = 1784240428549061224_i64 & 7214068199994497720_i64;
_17.2 = _13.fld1 <= _13.fld1;
_8 = [(-8986_i16),31224_i16,1752_i16,16652_i16,(-30007_i16),(-13012_i16)];
_17.3 = (-594317807_i32) as f64;
_15 = '\u{bcd2c}';
_10 = [112_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.1 = !(-40233179209230652971295485252784531559_i128);
_17.2 = !_9;
Goto(bb3)
}
bb5 = {
_10 = [39_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_12 = _5;
_3 = _8;
_12 = [12690_u16,18338_u16,14990_u16,56505_u16,43052_u16,27997_u16,42434_u16,21916_u16];
_13.fld0 = [(-163411909859374600465655311711342724084_i128),71730903315735153856686082171652194854_i128];
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,22_isize];
_11 = [1470220435_i32,(-297502871_i32),1333407950_i32,(-1804061531_i32),1024403449_i32];
_4 = [9059_i16,(-29440_i16),7562_i16,5936_i16,1983_i16,(-5488_i16)];
_7 = [18681_i16,22185_i16,(-27324_i16),20212_i16,(-14546_i16),(-14767_i16)];
_14 = 6258995919966231983_usize as f32;
_2 = 64_i8 as i64;
_9 = false;
_14 = 7145518125204411781645370163082827731_u128 as f32;
_3 = [(-17761_i16),26090_i16,17550_i16,23258_i16,24337_i16,12282_i16];
RET = (-80_i8) ^ (-15_i8);
_3 = [(-25493_i16),(-5758_i16),2288_i16,(-28993_i16),21733_i16,16165_i16];
_4 = [(-15502_i16),17705_i16,(-10779_i16),21307_i16,8674_i16,(-22427_i16)];
_5 = [8658_u16,3072_u16,56819_u16,31200_u16,12967_u16,30241_u16,3002_u16,40312_u16];
_12 = _5;
_12 = [32188_u16,2902_u16,1161_u16,6075_u16,46795_u16,48939_u16,60592_u16,6225_u16];
_3 = [(-18001_i16),17679_i16,27362_i16,(-12155_i16),30974_i16,(-16814_i16)];
Call(RET = core::intrinsics::bswap(74_i8), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
_2 = _19;
_18 = _24 < _24;
_23 = _15;
_18 = _15 >= _23;
_10 = _6;
RET = 9_i8;
_11 = [(-2021025395_i32),712361965_i32,(-1992583526_i32),(-120186638_i32),1365945261_i32];
_21 = [48949_u16];
_15 = _23;
_25 = (-9223372036854775808_isize);
_20 = core::ptr::addr_of!(_15);
_11 = [(-425490972_i32),1071803524_i32,2117536456_i32,(-1949111707_i32),(-958929171_i32)];
_4 = [(-11596_i16),(-223_i16),(-25370_i16),6936_i16,(-136_i16),20922_i16];
_20 = core::ptr::addr_of!((*_20));
RET = (-12_i8);
_17.2 = !_18;
_4 = [1417_i16,15014_i16,(-20110_i16),(-19534_i16),31672_i16,(-4977_i16)];
_13.fld1 = 26605_i16 as usize;
_4 = [24773_i16,(-18463_i16),19847_i16,21407_i16,(-11774_i16),14975_i16];
_6 = _10;
Goto(bb7)
}
bb7 = {
_26 = RET;
_11 = [1215976304_i32,700948576_i32,207514367_i32,(-1012942237_i32),318826276_i32];
_7 = [11371_i16,(-32759_i16),7032_i16,8200_i16,(-25722_i16),5847_i16];
_18 = _17.2 ^ _9;
RET = _2 as i8;
_22.0 = -_17.3;
_26 = 244_u8 as i8;
_7 = [5931_i16,26522_i16,(-17516_i16),5050_i16,1798_i16,31865_i16];
Goto(bb8)
}
bb8 = {
_22.0 = _17.3;
_15 = _23;
_17.0 = [9765_u16,19439_u16,5067_u16,39994_u16,61175_u16,65502_u16,17907_u16,64131_u16];
_10 = _6;
_26 = RET;
_11 = [1177785066_i32,(-1243816486_i32),1260442078_i32,1536564570_i32,2021057110_i32];
_31 = -_22.0;
_12 = _5;
_14 = -_16;
_1 = [6639_i16,12592_i16,(-17781_i16),(-31443_i16),(-7094_i16),(-27710_i16)];
_29.fld0 = _20;
_2 = 8881923469139725694_u64 as i64;
_17.1 = (-74295205601144243196973476452569202786_i128) ^ (-26733012106049451943482981754863927974_i128);
_25 = !103_isize;
_10 = [_25,_25,_25];
_31 = _17.3 - _22.0;
_6 = [_25,_25,_25];
_28 = _23;
_17.3 = -_31;
_25 = 9223372036854775807_isize >> _13.fld1;
match _24 {
0 => bb6,
1 => bb2,
2 => bb4,
3 => bb9,
179576555789734117832786770762619522232 => bb11,
_ => bb10
}
}
bb9 = {
_10 = [56_isize,9223372036854775807_isize,30_isize];
RET = (-102_i8) << _2;
_9 = RET <= RET;
_13.fld1 = 305741656722970092948151759795431790496_u128 as usize;
_17.0 = _5;
RET = 34_i8 << _2;
_6 = _10;
_17.0 = _5;
_16 = -_14;
_17.3 = 61257_u16 as f64;
_1 = [(-13199_i16),(-435_i16),12333_i16,(-646_i16),(-18592_i16),(-17617_i16)];
RET = 50_i8 | (-119_i8);
_2 = 1784240428549061224_i64 & 7214068199994497720_i64;
_17.2 = _13.fld1 <= _13.fld1;
_8 = [(-8986_i16),31224_i16,1752_i16,16652_i16,(-30007_i16),(-13012_i16)];
_17.3 = (-594317807_i32) as f64;
_15 = '\u{bcd2c}';
_10 = [112_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.1 = !(-40233179209230652971295485252784531559_i128);
_17.2 = !_9;
Goto(bb3)
}
bb10 = {
_2 = _19;
_18 = _24 < _24;
_23 = _15;
_18 = _15 >= _23;
_10 = _6;
RET = 9_i8;
_11 = [(-2021025395_i32),712361965_i32,(-1992583526_i32),(-120186638_i32),1365945261_i32];
_21 = [48949_u16];
_15 = _23;
_25 = (-9223372036854775808_isize);
_20 = core::ptr::addr_of!(_15);
_11 = [(-425490972_i32),1071803524_i32,2117536456_i32,(-1949111707_i32),(-958929171_i32)];
_4 = [(-11596_i16),(-223_i16),(-25370_i16),6936_i16,(-136_i16),20922_i16];
_20 = core::ptr::addr_of!((*_20));
RET = (-12_i8);
_17.2 = !_18;
_4 = [1417_i16,15014_i16,(-20110_i16),(-19534_i16),31672_i16,(-4977_i16)];
_13.fld1 = 26605_i16 as usize;
_4 = [24773_i16,(-18463_i16),19847_i16,21407_i16,(-11774_i16),14975_i16];
_6 = _10;
Goto(bb7)
}
bb11 = {
_34 = _22;
_29 = Adt44 { fld0: _20 };
_23 = (*_20);
_17.2 = _17.1 > _17.1;
_36 = _17.2 | _9;
_32 = 167_u8 as i8;
_17.3 = -_34.0;
_23 = _28;
_17.1 = !(-121648439073363043277836256935234686072_i128);
_17.3 = _32 as f64;
match _24 {
0 => bb12,
1 => bb13,
179576555789734117832786770762619522232 => bb15,
_ => bb14
}
}
bb12 = {
_10 = [39_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_12 = _5;
_3 = _8;
_12 = [12690_u16,18338_u16,14990_u16,56505_u16,43052_u16,27997_u16,42434_u16,21916_u16];
_13.fld0 = [(-163411909859374600465655311711342724084_i128),71730903315735153856686082171652194854_i128];
_10 = [(-9223372036854775808_isize),9223372036854775807_isize,22_isize];
_11 = [1470220435_i32,(-297502871_i32),1333407950_i32,(-1804061531_i32),1024403449_i32];
_4 = [9059_i16,(-29440_i16),7562_i16,5936_i16,1983_i16,(-5488_i16)];
_7 = [18681_i16,22185_i16,(-27324_i16),20212_i16,(-14546_i16),(-14767_i16)];
_14 = 6258995919966231983_usize as f32;
_2 = 64_i8 as i64;
_9 = false;
_14 = 7145518125204411781645370163082827731_u128 as f32;
_3 = [(-17761_i16),26090_i16,17550_i16,23258_i16,24337_i16,12282_i16];
RET = (-80_i8) ^ (-15_i8);
_3 = [(-25493_i16),(-5758_i16),2288_i16,(-28993_i16),21733_i16,16165_i16];
_4 = [(-15502_i16),17705_i16,(-10779_i16),21307_i16,8674_i16,(-22427_i16)];
_5 = [8658_u16,3072_u16,56819_u16,31200_u16,12967_u16,30241_u16,3002_u16,40312_u16];
_12 = _5;
_12 = [32188_u16,2902_u16,1161_u16,6075_u16,46795_u16,48939_u16,60592_u16,6225_u16];
_3 = [(-18001_i16),17679_i16,27362_i16,(-12155_i16),30974_i16,(-16814_i16)];
Call(RET = core::intrinsics::bswap(74_i8), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_2 = _19;
_18 = _24 < _24;
_23 = _15;
_18 = _15 >= _23;
_10 = _6;
RET = 9_i8;
_11 = [(-2021025395_i32),712361965_i32,(-1992583526_i32),(-120186638_i32),1365945261_i32];
_21 = [48949_u16];
_15 = _23;
_25 = (-9223372036854775808_isize);
_20 = core::ptr::addr_of!(_15);
_11 = [(-425490972_i32),1071803524_i32,2117536456_i32,(-1949111707_i32),(-958929171_i32)];
_4 = [(-11596_i16),(-223_i16),(-25370_i16),6936_i16,(-136_i16),20922_i16];
_20 = core::ptr::addr_of!((*_20));
RET = (-12_i8);
_17.2 = !_18;
_4 = [1417_i16,15014_i16,(-20110_i16),(-19534_i16),31672_i16,(-4977_i16)];
_13.fld1 = 26605_i16 as usize;
_4 = [24773_i16,(-18463_i16),19847_i16,21407_i16,(-11774_i16),14975_i16];
_6 = _10;
Goto(bb7)
}
bb14 = {
_10 = [56_isize,9223372036854775807_isize,30_isize];
RET = (-102_i8) << _2;
_9 = RET <= RET;
_13.fld1 = 305741656722970092948151759795431790496_u128 as usize;
_17.0 = _5;
RET = 34_i8 << _2;
_6 = _10;
_17.0 = _5;
_16 = -_14;
_17.3 = 61257_u16 as f64;
_1 = [(-13199_i16),(-435_i16),12333_i16,(-646_i16),(-18592_i16),(-17617_i16)];
RET = 50_i8 | (-119_i8);
_2 = 1784240428549061224_i64 & 7214068199994497720_i64;
_17.2 = _13.fld1 <= _13.fld1;
_8 = [(-8986_i16),31224_i16,1752_i16,16652_i16,(-30007_i16),(-13012_i16)];
_17.3 = (-594317807_i32) as f64;
_15 = '\u{bcd2c}';
_10 = [112_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.1 = !(-40233179209230652971295485252784531559_i128);
_17.2 = !_9;
Goto(bb3)
}
bb15 = {
_13.fld1 = 0_usize ^ 7_usize;
RET = _23 as i8;
_37 = [1523075015_i32,370661590_i32,(-128088988_i32),(-1964110346_i32),(-368621794_i32)];
_41 = _23;
_34.0 = 16039551334836358529_u64 as f64;
_3 = _4;
_41 = (*_20);
_17.1 = (-48122069665678728747304078003753985354_i128) << _24;
_16 = -_14;
_35 = RET;
_10 = [_25,_25,_25];
_28 = _41;
_28 = (*_20);
_34.0 = -_17.3;
_37 = [355639186_i32,(-1394500859_i32),909124906_i32,969684588_i32,1062267327_i32];
_32 = _15 as i8;
_12 = [40915_u16,61148_u16,9529_u16,40826_u16,7834_u16,25772_u16,47006_u16,28861_u16];
RET = _26 - _35;
_21 = [50593_u16];
Goto(bb16)
}
bb16 = {
Call(_46 = dump_var(11_usize, 41_usize, Move(_41), 2_usize, Move(_2), 18_usize, Move(_18), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(11_usize, 21_usize, Move(_21), 24_usize, Move(_24), 11_usize, Move(_11), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(11_usize, 36_usize, Move(_36), 8_usize, Move(_8), 3_usize, Move(_3), 15_usize, Move(_15)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_46 = dump_var(11_usize, 6_usize, Move(_6), 47_usize, _47, 47_usize, _47, 47_usize, _47), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: bool,mut _2: [i16; 6],mut _3: [i32; 5],mut _4: [i16; 6],mut _5: [isize; 3],mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [isize; 3],mut _9: [i16; 6],mut _10: [isize; 3]) -> [i16; 6] {
mir! {
type RET = [i16; 6];
let _11: (usize, u64);
let _12: *const i64;
let _13: (usize, u64);
let _14: *const char;
let _15: Adt47;
let _16: u8;
let _17: (usize, u64);
let _18: f64;
let _19: &'static u8;
let _20: Adt40;
let _21: ([i16; 6],);
let _22: i8;
let _23: u64;
let _24: (usize, u64);
let _25: isize;
let _26: isize;
let _27: ([u16; 8], i128, bool, f64);
let _28: f32;
let _29: isize;
let _30: [i32; 5];
let _31: isize;
let _32: *const char;
let _33: bool;
let _34: Adt48;
let _35: *const char;
let _36: u128;
let _37: Adt55;
let _38: [i16; 6];
let _39: f64;
let _40: Adt45;
let _41: u8;
let _42: (usize, u64);
let _43: Adt54;
let _44: Adt49;
let _45: *const i64;
let _46: [i32; 1];
let _47: bool;
let _48: f32;
let _49: i16;
let _50: u128;
let _51: isize;
let _52: [i128; 2];
let _53: f64;
let _54: ([u16; 8], i128, bool, f64);
let _55: ();
let _56: ();
{
_11.1 = 6855431117749304489_u64 & 7126531185312048579_u64;
_11.0 = 39952_u16 as usize;
RET = _9;
_11.0 = _1 as usize;
RET = [(-26738_i16),13964_i16,20410_i16,6766_i16,(-3317_i16),(-14654_i16)];
_4 = [(-4948_i16),21584_i16,(-11787_i16),(-28790_i16),793_i16,29472_i16];
_7 = [15723_i16,(-7037_i16),6771_i16,(-1108_i16),7937_i16,(-12486_i16)];
_11 = (660607951251141966_usize, 16193410449002784939_u64);
_1 = !true;
_8 = [(-9223372036854775808_isize),(-101_isize),(-9223372036854775808_isize)];
_10 = _8;
match _11.0 {
660607951251141966 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_10 = [(-53_isize),9223372036854775807_isize,(-103_isize)];
_8 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [(-8371_i16),11958_i16,2338_i16,9888_i16,30655_i16,(-12610_i16)];
_3 = [(-1007600990_i32),61574467_i32,(-2138213000_i32),(-938218909_i32),482432283_i32];
RET = _4;
_8 = [(-9223372036854775808_isize),(-115_isize),9223372036854775807_isize];
_11.0 = !12357247604597827558_usize;
RET = _9;
RET = [9261_i16,32645_i16,16662_i16,10633_i16,16850_i16,(-8029_i16)];
_8 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_4 = [1906_i16,24532_i16,6119_i16,(-28227_i16),(-6007_i16),29454_i16];
_13.1 = (-33_i8) as u64;
Goto(bb3)
}
bb3 = {
_9 = [(-16028_i16),(-28411_i16),26768_i16,15355_i16,(-24731_i16),21242_i16];
_13.1 = _11.1 >> _11.1;
_2 = _6;
RET = [(-21644_i16),(-13737_i16),14911_i16,(-8357_i16),(-1464_i16),24459_i16];
_9 = _2;
_13.0 = !_11.0;
_3 = [1048836225_i32,(-246395337_i32),(-139011385_i32),2021098617_i32,1408591828_i32];
_2 = [(-32109_i16),6421_i16,9112_i16,(-30424_i16),(-5195_i16),(-29893_i16)];
_11.0 = _11.1 as usize;
_2 = [26249_i16,9215_i16,(-4899_i16),32184_i16,19128_i16,6635_i16];
_9 = [16160_i16,18828_i16,(-5094_i16),(-6271_i16),20640_i16,3998_i16];
_7 = _4;
_11.0 = !_13.0;
_11 = _13;
_9 = _4;
_13.1 = !_11.1;
_9 = [(-3158_i16),3827_i16,25507_i16,2284_i16,30048_i16,(-23606_i16)];
RET = _6;
Goto(bb4)
}
bb4 = {
RET = [30418_i16,2789_i16,7830_i16,790_i16,4875_i16,(-1950_i16)];
_2 = _9;
_7 = [132_i16,18033_i16,(-13342_i16),6514_i16,18204_i16,7075_i16];
_8 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_3 = [(-1652746216_i32),1669471607_i32,902369688_i32,(-1336753625_i32),(-1340809022_i32)];
_13.0 = !_11.0;
_3 = [1705853328_i32,1975607019_i32,1914348233_i32,2015979676_i32,(-292041301_i32)];
_5 = [(-97_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_13 = _11;
_3 = [715326703_i32,508715426_i32,(-745706726_i32),994814946_i32,1594922714_i32];
RET = _4;
_6 = [23851_i16,20816_i16,(-23026_i16),20015_i16,(-1627_i16),448_i16];
_9 = [(-9753_i16),(-9671_i16),17512_i16,(-12270_i16),26825_i16,8874_i16];
_13.0 = (-77_i8) as usize;
_17.0 = _13.0;
Goto(bb5)
}
bb5 = {
_13 = (_17.0, _11.1);
_16 = 77_u8 << _11.1;
_17 = (_13.0, _13.1);
_17 = (_13.0, _11.1);
_17.1 = 9223372036854775807_isize as u64;
_13.1 = _1 as u64;
_2 = [19149_i16,5663_i16,12267_i16,(-28878_i16),27096_i16,(-12668_i16)];
_11.0 = _1 as usize;
_18 = 2939089414_u32 as f64;
_13.1 = (-2069314285_i32) as u64;
_18 = 756212206_u32 as f64;
_4 = _7;
_1 = true ^ true;
_8 = [55_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.0 = _13.0 - _13.0;
_13.0 = !_11.0;
_17.0 = _1 as usize;
_17 = (_13.0, _11.1);
_19 = &_16;
_7 = _6;
_17.0 = _11.0;
_3 = [(-349479895_i32),(-569015360_i32),(-362869068_i32),1279012933_i32,(-1307239590_i32)];
Call(_13.1 = fn13(_11.1, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_2 = RET;
RET = [(-13624_i16),(-18779_i16),(-4440_i16),(-23063_i16),21646_i16,11178_i16];
_13.1 = !_17.1;
_6 = _9;
_2 = RET;
_22 = (-45_i8) - 61_i8;
_13 = (_11.0, _17.1);
_11 = _13;
_13.1 = _17.1;
_17.0 = !_13.0;
_23 = _17.1;
_24.1 = _13.1;
_16 = 218_u8 ^ 96_u8;
_17 = (_11.0, _24.1);
_24.1 = !_11.1;
_24 = (_13.0, _11.1);
_13 = (_24.0, _11.1);
_3 = [(-337503782_i32),(-1273610594_i32),(-1401158242_i32),876155998_i32,(-605607494_i32)];
_7 = [24364_i16,12410_i16,18296_i16,7131_i16,15069_i16,(-6170_i16)];
_21 = (_4,);
_7 = _2;
_25 = (-4_isize);
_22 = (-67_i8) << _23;
Goto(bb7)
}
bb7 = {
_24 = (_17.0, _11.1);
RET = [(-1733_i16),10774_i16,13661_i16,31438_i16,26740_i16,26442_i16];
_7 = [(-25017_i16),24673_i16,29000_i16,(-22638_i16),30717_i16,(-7320_i16)];
_27.1 = !106410040243348679738080363162262427587_i128;
_27.2 = !_1;
_24.1 = _23;
_18 = 51657_u16 as f64;
_24.0 = _11.0 << _24.1;
_17 = _11;
_27.2 = _1;
_26 = (-1387847402_i32) as isize;
_17.0 = 1300931078_i32 as usize;
_27.0 = [56790_u16,35056_u16,21673_u16,6081_u16,51489_u16,61829_u16,46866_u16,11244_u16];
_22 = (-3417397002184255289_i64) as i8;
_9 = RET;
Goto(bb8)
}
bb8 = {
RET = _21.0;
_24.1 = _11.1 << _17.1;
_31 = _24.0 as isize;
_13 = _17;
_27.3 = 601_u16 as f64;
_27.1 = 115767805631858449739834649739439396026_i128 | (-100946562005767817015958123094321952860_i128);
_9 = _2;
_19 = &_16;
_10 = _8;
_23 = _24.1 | _17.1;
RET = [20230_i16,32100_i16,7771_i16,(-3937_i16),25744_i16,(-11737_i16)];
_13.1 = _17.1;
_4 = _7;
_28 = _23 as f32;
_29 = _31 << _22;
_22 = !58_i8;
_17.0 = !_11.0;
_25 = _26;
_27.3 = (-3427993441450224546_i64) as f64;
_17.1 = '\u{ed7cd}' as u64;
_17 = (_24.0, _23);
Goto(bb9)
}
bb9 = {
_17.0 = !_24.0;
_17.1 = _24.1 + _23;
_33 = _27.2;
_11.1 = _16 as u64;
_24.0 = (*_19) as usize;
_13.1 = !_17.1;
_26 = -_29;
_3 = [285388240_i32,(-686280546_i32),(-283246272_i32),(-1892767207_i32),1092315807_i32];
_2 = [(-13169_i16),(-11280_i16),12752_i16,12699_i16,(-14811_i16),(-4404_i16)];
_26 = -_29;
_6 = [(-4337_i16),(-8977_i16),(-9525_i16),(-1721_i16),4001_i16,31985_i16];
_4 = [1695_i16,(-19598_i16),(-3573_i16),(-30611_i16),9808_i16,(-22530_i16)];
_27.0 = [47435_u16,62470_u16,63539_u16,29398_u16,54251_u16,19406_u16,34247_u16,60145_u16];
_19 = &(*_19);
_10 = [_29,_29,_29];
_27.0 = [1818_u16,63336_u16,24603_u16,64536_u16,14250_u16,24344_u16,7488_u16,13705_u16];
Goto(bb10)
}
bb10 = {
_5 = [_31,_29,_26];
_4 = _6;
_13.0 = !_11.0;
_23 = !_13.1;
_36 = (*_19) as u128;
_21 = (_4,);
_24.0 = _17.0;
_27.3 = _18;
_13 = (_24.0, _23);
_13.1 = _17.1 - _24.1;
_13.1 = 9841_i16 as u64;
_21 = (_9,);
_13.1 = _23;
_27.1 = -145761811500763743202190408732422963591_i128;
_9 = [(-6111_i16),(-16209_i16),8199_i16,14954_i16,(-27558_i16),20395_i16];
_13.0 = _24.0;
_36 = _26 as u128;
_31 = _26;
_23 = _17.1;
_33 = _23 >= _17.1;
_26 = -_31;
_29 = _26;
_11.1 = !_13.1;
_36 = 76177831865855186909582527110076459425_u128 & 92864540253797959250893929404841676128_u128;
_24 = (_17.0, _23);
_18 = _27.3;
_29 = 1012592550_u32 as isize;
Goto(bb11)
}
bb11 = {
Goto(bb12)
}
bb12 = {
_6 = [29155_i16,(-10602_i16),3296_i16,4606_i16,1722_i16,30595_i16];
_3 = [288090745_i32,(-1580629406_i32),213204736_i32,(-988037571_i32),1736945085_i32];
_18 = _27.3;
_24.0 = _13.0 & _17.0;
_39 = -_18;
_44.fld0 = _33;
_44.fld0 = !_33;
_5 = _8;
_42 = (_24.0, _17.1);
_42 = (_24.0, _24.1);
_27.1 = 79496330695536071772351245932345228035_i128 << _42.0;
RET = _9;
_11.0 = _29 as usize;
_17.1 = _11.1 | _42.1;
_3 = [1063835358_i32,(-1083986171_i32),78544145_i32,1425793062_i32,1626851211_i32];
_38 = _7;
_46 = [(-1982736593_i32)];
_44.fld6 = [721572251_i32];
_4 = [(-2073_i16),(-24200_i16),(-12963_i16),(-7635_i16),2934_i16,3490_i16];
_44.fld7 = _24.1 as i128;
_34 = Adt48::Variant2 { fld0: (-3522696062030872115_i64) };
Goto(bb13)
}
bb13 = {
_3 = [(-256408057_i32),(-1790069171_i32),(-998550711_i32),(-2069251696_i32),(-160698330_i32)];
_13.1 = _23;
_7 = [28250_i16,(-5397_i16),14369_i16,(-26051_i16),(-30585_i16),22846_i16];
_4 = [31489_i16,27950_i16,14733_i16,(-18627_i16),(-22029_i16),31253_i16];
_44.fld5 = 6764_i16 as i32;
_29 = !_31;
_44.fld3 = [_27.1,_44.fld7];
_13 = _42;
_31 = !_29;
_19 = &(*_19);
_27.2 = !_44.fld0;
_33 = _17.1 <= _23;
_31 = _26 + _26;
Goto(bb14)
}
bb14 = {
_17.1 = _13.1;
_24.1 = _17.1 | _17.1;
_22 = !71_i8;
_27.3 = -_18;
_17.1 = _11.1;
_44.fld6 = _46;
_17.1 = !_23;
_24 = _42;
_28 = _44.fld5 as f32;
_42 = _24;
place!(Field::<i64>(Variant(_34, 2), 0)) = 7604610315686362663_i64;
_44.fld5 = _33 as i32;
_27.0 = [52548_u16,54762_u16,6340_u16,38010_u16,26339_u16,14805_u16,18244_u16,36741_u16];
_30 = _3;
_4 = _9;
_27.2 = _11.1 != _13.1;
_13.0 = !_24.0;
_50 = !_36;
_16 = !34_u8;
_54.1 = Field::<i64>(Variant(_34, 2), 0) as i128;
_42.1 = (-21000_i16) as u64;
_28 = _44.fld5 as f32;
_12 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_34, 2), 0)));
Goto(bb15)
}
bb15 = {
Call(_55 = dump_var(12_usize, 26_usize, Move(_26), 7_usize, Move(_7), 4_usize, Move(_4), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_55 = dump_var(12_usize, 25_usize, Move(_25), 22_usize, Move(_22), 23_usize, Move(_23), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_55 = dump_var(12_usize, 5_usize, Move(_5), 30_usize, Move(_30), 10_usize, Move(_10), 42_usize, Move(_42)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_55 = dump_var(12_usize, 1_usize, Move(_1), 50_usize, Move(_50), 56_usize, _56, 56_usize, _56), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: u64,mut _2: [isize; 3]) -> u64 {
mir! {
type RET = u64;
let _3: i128;
let _4: ([i16; 6],);
let _5: Adt50;
let _6: (u128,);
let _7: isize;
let _8: [i16; 6];
let _9: ([u16; 8], i128, bool, f64);
let _10: *mut u32;
let _11: u128;
let _12: (u128,);
let _13: Adt51;
let _14: u8;
let _15: f64;
let _16: (u16, (u16, f32, i64), i8);
let _17: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _18: Adt46;
let _19: [isize; 3];
let _20: (usize, u64);
let _21: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _22: f64;
let _23: Adt48;
let _24: isize;
let _25: (u16, f32, i64);
let _26: u8;
let _27: isize;
let _28: ([u16; 8], i128, bool, f64);
let _29: u8;
let _30: [i32; 1];
let _31: [u16; 1];
let _32: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _33: [u16; 8];
let _34: char;
let _35: *mut u32;
let _36: Adt48;
let _37: *const (u128,);
let _38: char;
let _39: Adt42;
let _40: Adt51;
let _41: f64;
let _42: Adt49;
let _43: ();
let _44: ();
{
RET = _1 | _1;
RET = !_1;
_1 = RET;
_1 = RET;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_2 = [34_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = !_1;
RET = 12140_u16 as u64;
_1 = RET * RET;
_2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = 12_u8 as u64;
RET = _1 - _1;
RET = !_1;
_4.0 = [23271_i16,(-20348_i16),16305_i16,(-25305_i16),24481_i16,3578_i16];
_4.0 = [(-12693_i16),(-8141_i16),4993_i16,20776_i16,24407_i16,(-27098_i16)];
RET = !_1;
RET = _1;
_3 = (-142615463589500498612721828855015700629_i128);
_5.fld1 = 6_usize;
_5.fld0 = [_3,_3];
_5.fld0 = [_3,_3];
_6.0 = true as u128;
_6.0 = 182128888660327001894546875408993515814_u128 + 220908308526277319137938797206140214889_u128;
_6 = (224690797660896343588859246018271817378_u128,);
_5.fld1 = 14270926106907715321_usize;
RET = !_1;
_1 = RET * RET;
Goto(bb1)
}
bb1 = {
_1 = (-9223372036854775808_isize) as u64;
_5.fld1 = 29043_u16 as usize;
_3 = !44575494199335850648445857798269938483_i128;
_5.fld1 = 4916612346112090755_usize;
_7 = 81_u8 as isize;
RET = !_1;
_6 = (330200677090913754962817989672023210779_u128,);
RET = _1 ^ _1;
_1 = _7 as u64;
_1 = !RET;
_1 = !RET;
_6 = (236306577883705342934861605436784477684_u128,);
_2 = [_7,_7,_7];
_5.fld0 = [_3,_3];
_1 = 6645_i16 as u64;
RET = _1;
_9.1 = _3;
_4.0 = [(-19942_i16),7663_i16,(-23889_i16),3245_i16,(-22922_i16),19984_i16];
_9.3 = (-848327386129693927_i64) as f64;
_8 = [(-30063_i16),7030_i16,31148_i16,(-7111_i16),29640_i16,(-17538_i16)];
Goto(bb2)
}
bb2 = {
Call(_6.0 = core::intrinsics::bswap(78519909462404147674961306902433669029_u128), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = _5.fld1 as i128;
_7 = 9223372036854775807_isize * (-125_isize);
RET = _3 as u64;
_9.1 = -_3;
_11 = !_6.0;
_5.fld0 = [_3,_9.1];
RET = _1;
_2 = [_7,_7,_7];
_9.0 = [59551_u16,45804_u16,26155_u16,59836_u16,21029_u16,1065_u16,6816_u16,11254_u16];
_7 = 9223372036854775807_isize;
_9.2 = !true;
_6.0 = _11 >> _7;
_8 = _4.0;
_5.fld1 = !5_usize;
_8 = [24981_i16,9892_i16,(-26048_i16),13857_i16,(-29756_i16),29999_i16];
_8 = [17695_i16,5514_i16,(-29985_i16),(-30585_i16),19906_i16,13432_i16];
_4.0 = _8;
_3 = _9.1 + _9.1;
RET = _5.fld1 as u64;
_12 = _6;
RET = !_1;
_5.fld1 = !3210830012386744865_usize;
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb4 = {
Call(_6.0 = core::intrinsics::bswap(78519909462404147674961306902433669029_u128), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_1 = (-9223372036854775808_isize) as u64;
_5.fld1 = 29043_u16 as usize;
_3 = !44575494199335850648445857798269938483_i128;
_5.fld1 = 4916612346112090755_usize;
_7 = 81_u8 as isize;
RET = !_1;
_6 = (330200677090913754962817989672023210779_u128,);
RET = _1 ^ _1;
_1 = _7 as u64;
_1 = !RET;
_1 = !RET;
_6 = (236306577883705342934861605436784477684_u128,);
_2 = [_7,_7,_7];
_5.fld0 = [_3,_3];
_1 = 6645_i16 as u64;
RET = _1;
_9.1 = _3;
_4.0 = [(-19942_i16),7663_i16,(-23889_i16),3245_i16,(-22922_i16),19984_i16];
_9.3 = (-848327386129693927_i64) as f64;
_8 = [(-30063_i16),7030_i16,31148_i16,(-7111_i16),29640_i16,(-17538_i16)];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = _1 - _1;
_5.fld1 = 67_u8 as usize;
_9.3 = (-812137817_i32) as f64;
_4 = (_8,);
_5.fld0 = [_3,_3];
_17.1 = _4;
_9.2 = true;
_7 = _5.fld1 as isize;
_17.2 = !9196274720628695462_i64;
_12.0 = _6.0;
_14 = 10_u8 * 222_u8;
_16.1.2 = -_17.2;
Call(_6.0 = fn14(_9, _5, _4, _4.0, _8, _8, _17.1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
RET = 3553678779_u32 as u64;
_9.0 = [30769_u16,684_u16,36070_u16,50529_u16,36567_u16,16404_u16,5431_u16,8503_u16];
_16.0 = 55605_u16;
_21.2 = _17.2;
_16.2 = 2089354844_u32 as i8;
Goto(bb11)
}
bb11 = {
_16.1.0 = _16.0;
_14 = _9.3 as u8;
Goto(bb12)
}
bb12 = {
_12 = (_6.0,);
_21.3 = _3 as u8;
_6 = (_12.0,);
_9.1 = _16.1.0 as i128;
_21.1 = (_8,);
_4.0 = [(-27306_i16),(-20158_i16),(-5096_i16),22588_i16,9842_i16,22030_i16];
_21.4 = _16.2 as f32;
_28.1 = -_3;
_25.2 = _14 as i64;
_16.1.2 = _25.2 + _17.2;
_16.1 = (_16.0, _21.4, _25.2);
_20.0 = _16.1.1 as usize;
Goto(bb13)
}
bb13 = {
_28 = (_9.0, _3, _9.2, _9.3);
_28.1 = !_9.1;
_9.0 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.1.0,_16.0,_16.1.0];
_25.2 = !_16.1.2;
_31 = [_16.1.0];
_21.3 = _14 & _14;
_15 = _28.3 - _28.3;
_6 = (_12.0,);
_31 = [_16.0];
_32.1 = (_21.1.0,);
_20.1 = (-6388_i16) as u64;
_26 = !_21.3;
RET = _15 as u64;
_32.4 = _16.1.1;
_25.2 = _17.2 * _21.2;
_24 = !_7;
_17.0 = [354808364_i32,664881340_i32,(-58810012_i32),(-496233574_i32),(-1263627586_i32)];
match _16.1.0 {
0 => bb14,
1 => bb15,
2 => bb16,
55605 => bb18,
_ => bb17
}
}
bb14 = {
_3 = _5.fld1 as i128;
_7 = 9223372036854775807_isize * (-125_isize);
RET = _3 as u64;
_9.1 = -_3;
_11 = !_6.0;
_5.fld0 = [_3,_9.1];
RET = _1;
_2 = [_7,_7,_7];
_9.0 = [59551_u16,45804_u16,26155_u16,59836_u16,21029_u16,1065_u16,6816_u16,11254_u16];
_7 = 9223372036854775807_isize;
_9.2 = !true;
_6.0 = _11 >> _7;
_8 = _4.0;
_5.fld1 = !5_usize;
_8 = [24981_i16,9892_i16,(-26048_i16),13857_i16,(-29756_i16),29999_i16];
_8 = [17695_i16,5514_i16,(-29985_i16),(-30585_i16),19906_i16,13432_i16];
_4.0 = _8;
_3 = _9.1 + _9.1;
RET = _5.fld1 as u64;
_12 = _6;
RET = !_1;
_5.fld1 = !3210830012386744865_usize;
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb15 = {
_16.1.0 = _16.0;
_14 = _9.3 as u8;
Goto(bb12)
}
bb16 = {
RET = 3553678779_u32 as u64;
_9.0 = [30769_u16,684_u16,36070_u16,50529_u16,36567_u16,16404_u16,5431_u16,8503_u16];
_16.0 = 55605_u16;
_21.2 = _17.2;
_16.2 = 2089354844_u32 as i8;
Goto(bb11)
}
bb17 = {
Return()
}
bb18 = {
RET = _20.1;
_16.1.1 = _21.4;
_25 = (_16.1.0, _32.4, _17.2);
_25 = _16.1;
_26 = !_21.3;
_30 = [(-383853600_i32)];
_32 = (_17.0, _17.1, _16.1.2, _26, _16.1.1);
RET = _1;
_30 = [1957641378_i32];
_19 = [_24,_7,_7];
_32.3 = _26;
_29 = _16.1.0 as u8;
_39 = Adt42::Variant0 { fld0: _9.2,fld1: _5.fld0,fld2: _4,fld3: _20.0,fld4: _15,fld5: _19 };
_17.4 = _16.1.1;
_21 = _32;
_16.1.1 = 4112_i16 as f32;
_32.3 = _21.3 & _21.3;
_14 = !_32.3;
_17.3 = !_21.3;
_22 = Field::<f64>(Variant(_39, 0), 4);
place!(Field::<([i16; 6],)>(Variant(_39, 0), 2)) = (_17.1.0,);
Goto(bb19)
}
bb19 = {
Call(_43 = dump_var(13_usize, 30_usize, Move(_30), 20_usize, Move(_20), 8_usize, Move(_8), 24_usize, Move(_24)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_43 = dump_var(13_usize, 11_usize, Move(_11), 29_usize, Move(_29), 12_usize, Move(_12), 14_usize, Move(_14)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: ([u16; 8], i128, bool, f64),mut _2: Adt50,mut _3: ([i16; 6],),mut _4: [i16; 6],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: ([i16; 6],)) -> u128 {
mir! {
type RET = u128;
let _8: char;
let _9: u32;
let _10: Adt40;
let _11: (u16, f32, i64);
let _12: char;
let _13: Adt46;
let _14: isize;
let _15: Adt47;
let _16: isize;
let _17: f32;
let _18: isize;
let _19: *const i8;
let _20: ();
let _21: ();
{
_1.2 = !false;
RET = 222868715785279310620141048671605833068_u128;
RET = 2440047916270367585_u64 as u128;
_3.0 = [(-30222_i16),25182_i16,12231_i16,(-4702_i16),(-29850_i16),4397_i16];
_1.1 = _1.3 as i128;
_1.1 = (-47317847063869519352517755102016526386_i128) * 116256054875796160446088797085021456152_i128;
_1.0 = [23345_u16,34648_u16,64829_u16,54944_u16,61182_u16,38105_u16,15160_u16,36560_u16];
RET = _1.1 as u128;
_4 = [16588_i16,8618_i16,(-18529_i16),(-17240_i16),(-8660_i16),7201_i16];
_2.fld1 = _1.2 as usize;
_1.3 = (-9223372036854775808_isize) as f64;
_2.fld1 = !16032163064106796206_usize;
_6 = [(-24481_i16),20703_i16,24233_i16,16385_i16,15755_i16,22763_i16];
_7 = (_3.0,);
_1.0 = [29806_u16,22409_u16,58288_u16,22898_u16,40116_u16,44758_u16,20128_u16,28509_u16];
_1.2 = RET <= RET;
_3.0 = _7.0;
_1.3 = RET as f64;
_5 = _7.0;
_1.1 = (-123645356641805334003508521415428819429_i128) ^ 89932192588173245780913054513911900010_i128;
_1.2 = !true;
_4 = [(-6343_i16),29945_i16,9721_i16,(-11302_i16),(-26952_i16),22728_i16];
_7.0 = [32764_i16,10140_i16,(-32673_i16),(-23422_i16),12266_i16,(-16787_i16)];
RET = (-9223372036854775808_isize) as u128;
_2.fld0 = [_1.1,_1.1];
Goto(bb1)
}
bb1 = {
_3.0 = [(-6386_i16),21874_i16,(-3439_i16),(-13908_i16),(-28003_i16),(-3003_i16)];
_2.fld0 = [_1.1,_1.1];
_3 = _7;
_9 = 3909013791_u32 >> RET;
_3 = (_5,);
RET = 252044963513329806653285344927661264098_u128;
_5 = [9537_i16,17620_i16,(-28096_i16),(-21462_i16),27945_i16,15031_i16];
_6 = [1509_i16,12744_i16,(-21473_i16),2122_i16,(-4980_i16),18635_i16];
RET = !336994408052736988222738002819566252778_u128;
_3.0 = _5;
RET = 147555821333048005797761595723579829317_u128 << _1.1;
_5 = [24299_i16,27769_i16,18529_i16,(-19863_i16),(-21861_i16),29562_i16];
_1.0 = [28025_u16,7165_u16,63705_u16,13090_u16,15774_u16,62861_u16,8614_u16,57153_u16];
_7.0 = [(-16968_i16),16131_i16,(-15030_i16),(-32749_i16),530_i16,(-24133_i16)];
_8 = '\u{1065be}';
_1.2 = false;
_5 = [14077_i16,(-27819_i16),29059_i16,(-23388_i16),16043_i16,727_i16];
_11.0 = 45853_u16 << _9;
_4 = [30047_i16,4453_i16,(-32056_i16),(-13319_i16),13651_i16,(-13302_i16)];
_5 = [23881_i16,3693_i16,(-24686_i16),19422_i16,10981_i16,10824_i16];
Goto(bb2)
}
bb2 = {
_5 = _3.0;
_11.2 = (-7854936397334325087_i64);
_7.0 = _3.0;
Call(_10 = fn15(_4, _7, _4, _6, _5, _4, _7, _8, _5, _3.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
place!(Field::<bool>(Variant(_10, 1), 0)) = Field::<f32>(Variant(_10, 1), 6) >= Field::<f32>(Variant(_10, 1), 6);
match Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
20746 => bb10,
_ => bb9
}
}
bb4 = {
_5 = _3.0;
_11.2 = (-7854936397334325087_i64);
_7.0 = _3.0;
Call(_10 = fn15(_4, _7, _4, _6, _5, _4, _7, _8, _5, _3.0), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_3.0 = [(-6386_i16),21874_i16,(-3439_i16),(-13908_i16),(-28003_i16),(-3003_i16)];
_2.fld0 = [_1.1,_1.1];
_3 = _7;
_9 = 3909013791_u32 >> RET;
_3 = (_5,);
RET = 252044963513329806653285344927661264098_u128;
_5 = [9537_i16,17620_i16,(-28096_i16),(-21462_i16),27945_i16,15031_i16];
_6 = [1509_i16,12744_i16,(-21473_i16),2122_i16,(-4980_i16),18635_i16];
RET = !336994408052736988222738002819566252778_u128;
_3.0 = _5;
RET = 147555821333048005797761595723579829317_u128 << _1.1;
_5 = [24299_i16,27769_i16,18529_i16,(-19863_i16),(-21861_i16),29562_i16];
_1.0 = [28025_u16,7165_u16,63705_u16,13090_u16,15774_u16,62861_u16,8614_u16,57153_u16];
_7.0 = [(-16968_i16),16131_i16,(-15030_i16),(-32749_i16),530_i16,(-24133_i16)];
_8 = '\u{1065be}';
_1.2 = false;
_5 = [14077_i16,(-27819_i16),29059_i16,(-23388_i16),16043_i16,727_i16];
_11.0 = 45853_u16 << _9;
_4 = [30047_i16,4453_i16,(-32056_i16),(-13319_i16),13651_i16,(-13302_i16)];
_5 = [23881_i16,3693_i16,(-24686_i16),19422_i16,10981_i16,10824_i16];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6 = _3.0;
_12 = _8;
_1.3 = Field::<(f64,)>(Variant(_10, 1), 1).0 + Field::<(f64,)>(Variant(_10, 1), 1).0;
_1.3 = Field::<(f64,)>(Variant(_10, 1), 1).0 + Field::<(f64,)>(Variant(_10, 1), 1).0;
_14 = (-115_i8) as isize;
_2.fld0 = [_1.1,_1.1];
place!(Field::<(u16, f32, i64)>(Variant(_10, 1), 3)).1 = Field::<f32>(Variant(_10, 1), 6) + Field::<f32>(Variant(_10, 1), 6);
_11.2 = Field::<(u16, f32, i64)>(Variant(_10, 1), 3).2;
_1.3 = Field::<(f64,)>(Variant(_10, 1), 1).0;
place!(Field::<[u16; 8]>(Variant(_10, 1), 7)) = [Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0,_11.0,Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0,Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0,Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0,Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0,Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0,Field::<(u16, f32, i64)>(Variant(_10, 1), 3).0];
place!(Field::<(f64,)>(Variant(_10, 1), 1)) = (_1.3,);
_11.0 = Field::<f32>(Variant(_10, 1), 6) as u16;
_3 = _7;
RET = !223183638996587281978537905451833821314_u128;
_1 = (Field::<[u16; 8]>(Variant(_10, 1), 7), (-56767028401439324857496499675141548048_i128), Field::<bool>(Variant(_10, 1), 0), Field::<(f64,)>(Variant(_10, 1), 1).0);
place!(Field::<bool>(Variant(_10, 1), 0)) = _1.2 != _1.2;
_4 = _6;
_11 = Field::<(u16, f32, i64)>(Variant(_10, 1), 3);
place!(Field::<[i32; 1]>(Variant(_10, 1), 4)) = [Field::<i32>(Variant(_10, 1), 5)];
_11.0 = _11.2 as u16;
_9 = 825136901_u32;
RET = Field::<bool>(Variant(_10, 1), 0) as u128;
SetDiscriminant(_10, 0);
_7 = _3;
place!(Field::<[isize; 3]>(Variant(_10, 0), 4)) = [_14,_14,_14];
_1.0 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_17 = _11.1;
Goto(bb11)
}
bb11 = {
Call(_20 = dump_var(14_usize, 8_usize, Move(_8), 6_usize, Move(_6), 3_usize, Move(_3), 7_usize, Move(_7)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [i16; 6],mut _2: ([i16; 6],),mut _3: [i16; 6],mut _4: [i16; 6],mut _5: [i16; 6],mut _6: [i16; 6],mut _7: ([i16; 6],),mut _8: char,mut _9: [i16; 6],mut _10: [i16; 6]) -> Adt40 {
mir! {
type RET = Adt40;
let _11: f64;
let _12: [i16; 6];
let _13: char;
let _14: char;
let _15: ();
let _16: ();
{
_9 = [(-18654_i16),(-10556_i16),24999_i16,(-30877_i16),(-22357_i16),18915_i16];
_7.0 = [(-21151_i16),(-15733_i16),32737_i16,(-26405_i16),30044_i16,19270_i16];
Goto(bb1)
}
bb1 = {
_9 = [30065_i16,1553_i16,16830_i16,(-10318_i16),8722_i16,30795_i16];
_12 = [(-18663_i16),(-17952_i16),(-20375_i16),(-20682_i16),(-17051_i16),12190_i16];
_5 = [(-9798_i16),(-5086_i16),32092_i16,1823_i16,10376_i16,24401_i16];
_4 = [13266_i16,(-1142_i16),(-25586_i16),19819_i16,19613_i16,(-9836_i16)];
_8 = '\u{3b04c}';
_3 = [(-1904_i16),(-13413_i16),(-29545_i16),28030_i16,(-11995_i16),(-16970_i16)];
Call(RET = fn16(_6, _2, _4, _6, _2, _3, _9, _10, _7, _2, _2.0, _3, _12, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = _2.0;
place!(Field::<isize>(Variant(RET, 1), 2)) = 112_isize ^ 9223372036854775807_isize;
Goto(bb3)
}
bb3 = {
Call(_15 = dump_var(15_usize, 7_usize, Move(_7), 4_usize, Move(_4), 12_usize, Move(_12), 6_usize, Move(_6)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_15 = dump_var(15_usize, 1_usize, Move(_1), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [i16; 6],mut _2: ([i16; 6],),mut _3: [i16; 6],mut _4: [i16; 6],mut _5: ([i16; 6],),mut _6: [i16; 6],mut _7: [i16; 6],mut _8: [i16; 6],mut _9: ([i16; 6],),mut _10: ([i16; 6],),mut _11: [i16; 6],mut _12: [i16; 6],mut _13: [i16; 6],mut _14: [i16; 6]) -> Adt40 {
mir! {
type RET = Adt40;
let _15: u128;
let _16: (f64,);
let _17: [u16; 8];
let _18: (usize, u64);
let _19: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _20: (u128,);
let _21: char;
let _22: u128;
let _23: ([u16; 8], i128, bool, f64);
let _24: isize;
let _25: f32;
let _26: f32;
let _27: Adt45;
let _28: f32;
let _29: i32;
let _30: char;
let _31: ([i16; 6],);
let _32: isize;
let _33: f32;
let _34: (u128,);
let _35: bool;
let _36: Adt49;
let _37: Adt50;
let _38: i64;
let _39: (u128,);
let _40: isize;
let _41: (f64,);
let _42: (u16, (u16, f32, i64), i8);
let _43: [i16; 6];
let _44: isize;
let _45: char;
let _46: [u16; 8];
let _47: bool;
let _48: Adt53;
let _49: usize;
let _50: i64;
let _51: i8;
let _52: Adt52;
let _53: u32;
let _54: *mut u32;
let _55: *mut u32;
let _56: Adt48;
let _57: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _58: i16;
let _59: f64;
let _60: bool;
let _61: i64;
let _62: ([i16; 6],);
let _63: [i16; 6];
let _64: i64;
let _65: i32;
let _66: (u16, (u16, f32, i64), i8);
let _67: char;
let _68: f64;
let _69: ();
let _70: ();
{
_3 = [7167_i16,(-1987_i16),27104_i16,(-32054_i16),(-2112_i16),32664_i16];
_14 = _9.0;
_5.0 = [(-17781_i16),(-22191_i16),(-4428_i16),(-15403_i16),3650_i16,(-17235_i16)];
_1 = _11;
_10 = (_13,);
_5.0 = _13;
_5.0 = [(-2638_i16),(-6971_i16),6362_i16,(-29518_i16),12904_i16,27800_i16];
Goto(bb1)
}
bb1 = {
_3 = _9.0;
_7 = [(-16642_i16),(-28298_i16),7860_i16,(-9556_i16),12293_i16,(-23222_i16)];
_11 = [(-29522_i16),(-30293_i16),29941_i16,(-3451_i16),21751_i16,2714_i16];
_1 = [(-21636_i16),28646_i16,26239_i16,(-1903_i16),(-7161_i16),(-32573_i16)];
_9.0 = [1899_i16,(-22211_i16),29094_i16,(-28916_i16),(-15610_i16),5872_i16];
_1 = [(-32288_i16),19874_i16,(-22589_i16),(-30744_i16),(-22010_i16),(-6909_i16)];
_14 = [9063_i16,18704_i16,21244_i16,(-5584_i16),(-9039_i16),(-14408_i16)];
_10.0 = [(-423_i16),(-7494_i16),(-31472_i16),(-11620_i16),(-15497_i16),(-29288_i16)];
Goto(bb2)
}
bb2 = {
_7 = [13600_i16,21177_i16,18396_i16,(-8360_i16),15911_i16,(-30991_i16)];
Goto(bb3)
}
bb3 = {
_15 = (-126_i8) as u128;
_7 = [21316_i16,937_i16,19187_i16,24494_i16,(-13703_i16),18571_i16];
_3 = [(-12078_i16),21621_i16,(-20781_i16),12221_i16,2010_i16,(-22475_i16)];
Goto(bb4)
}
bb4 = {
_10 = (_5.0,);
_11 = [(-28556_i16),31955_i16,19779_i16,(-533_i16),(-5073_i16),19559_i16];
_13 = [(-16741_i16),4381_i16,9429_i16,(-24781_i16),(-26915_i16),5691_i16];
_6 = [14803_i16,(-15334_i16),5132_i16,1157_i16,(-29948_i16),32423_i16];
_13 = [(-30394_i16),12243_i16,(-18358_i16),(-6757_i16),16086_i16,(-26152_i16)];
_10.0 = _12;
Goto(bb5)
}
bb5 = {
_8 = [(-31039_i16),(-26864_i16),(-2388_i16),1224_i16,(-5711_i16),21627_i16];
_10 = (_8,);
_9.0 = [11578_i16,30923_i16,(-2774_i16),(-22949_i16),(-4777_i16),7986_i16];
_6 = [(-18195_i16),6997_i16,25928_i16,20707_i16,3116_i16,24743_i16];
_13 = [(-4935_i16),(-28795_i16),(-19117_i16),8861_i16,24962_i16,3190_i16];
_18 = (12813653349506245600_usize, 9902135406251477744_u64);
_10 = _2;
_19.4 = 119_isize as f32;
_13 = [(-11353_i16),(-15706_i16),(-27630_i16),11526_i16,(-5294_i16),12992_i16];
_19.1 = _2;
_19.2 = (-8104285620870763469_i64) + (-7100405219531129712_i64);
_1 = [(-21381_i16),(-13425_i16),1525_i16,3304_i16,(-24271_i16),32571_i16];
_4 = [16777_i16,(-23498_i16),16951_i16,32022_i16,21961_i16,(-1306_i16)];
_4 = [32744_i16,17788_i16,(-5984_i16),(-19748_i16),12844_i16,10468_i16];
_19.0 = [(-1025720091_i32),(-549207_i32),(-755789282_i32),(-1809855643_i32),(-1713055164_i32)];
_17 = [59585_u16,35781_u16,34051_u16,44629_u16,60462_u16,57714_u16,37375_u16,6335_u16];
_19.0 = [(-645767454_i32),(-524728826_i32),(-1476882997_i32),(-2021826489_i32),2036520425_i32];
_18 = (16555065724381448115_usize, 18046851238156688513_u64);
_19.4 = 56672_u16 as f32;
_5 = (_2.0,);
_12 = [11560_i16,24412_i16,(-13140_i16),(-17385_i16),(-14896_i16),27711_i16];
Goto(bb6)
}
bb6 = {
_1 = [(-32002_i16),17070_i16,(-10418_i16),29901_i16,(-2470_i16),(-5736_i16)];
_6 = _4;
_19.3 = !133_u8;
_20.0 = _15 - _15;
_9 = (_4,);
_9.0 = [26709_i16,314_i16,(-11506_i16),23683_i16,(-27540_i16),(-31639_i16)];
match _18.1 {
0 => bb7,
1 => bb8,
18046851238156688513 => bb10,
_ => bb9
}
}
bb7 = {
_7 = [13600_i16,21177_i16,18396_i16,(-8360_i16),15911_i16,(-30991_i16)];
Goto(bb3)
}
bb8 = {
_3 = _9.0;
_7 = [(-16642_i16),(-28298_i16),7860_i16,(-9556_i16),12293_i16,(-23222_i16)];
_11 = [(-29522_i16),(-30293_i16),29941_i16,(-3451_i16),21751_i16,2714_i16];
_1 = [(-21636_i16),28646_i16,26239_i16,(-1903_i16),(-7161_i16),(-32573_i16)];
_9.0 = [1899_i16,(-22211_i16),29094_i16,(-28916_i16),(-15610_i16),5872_i16];
_1 = [(-32288_i16),19874_i16,(-22589_i16),(-30744_i16),(-22010_i16),(-6909_i16)];
_14 = [9063_i16,18704_i16,21244_i16,(-5584_i16),(-9039_i16),(-14408_i16)];
_10.0 = [(-423_i16),(-7494_i16),(-31472_i16),(-11620_i16),(-15497_i16),(-29288_i16)];
Goto(bb2)
}
bb9 = {
_15 = (-126_i8) as u128;
_7 = [21316_i16,937_i16,19187_i16,24494_i16,(-13703_i16),18571_i16];
_3 = [(-12078_i16),21621_i16,(-20781_i16),12221_i16,2010_i16,(-22475_i16)];
Goto(bb4)
}
bb10 = {
_12 = [16899_i16,31711_i16,(-23426_i16),21146_i16,(-1110_i16),(-27569_i16)];
_22 = _15;
_5 = (_8,);
_13 = [30835_i16,7325_i16,22298_i16,3156_i16,10532_i16,19443_i16];
_23.0 = [43653_u16,11051_u16,24982_u16,12369_u16,20250_u16,21223_u16,39064_u16,34120_u16];
_16.0 = _18.1 as f64;
_8 = [(-9370_i16),15614_i16,27220_i16,6332_i16,17523_i16,217_i16];
_1 = [8298_i16,(-18116_i16),26103_i16,29123_i16,(-6398_i16),13460_i16];
_19.4 = _16.0 as f32;
_17 = [60641_u16,58593_u16,53601_u16,57234_u16,42089_u16,12724_u16,62671_u16,46368_u16];
_23.0 = [2413_u16,44522_u16,40460_u16,54207_u16,65270_u16,29636_u16,45413_u16,45770_u16];
_9.0 = _7;
_15 = _20.0;
_26 = _19.4 * _19.4;
_1 = [(-22475_i16),26960_i16,25293_i16,10983_i16,18643_i16,2478_i16];
_3 = _9.0;
_20 = (_22,);
match _18.0 {
0 => bb11,
1 => bb12,
16555065724381448115 => bb14,
_ => bb13
}
}
bb11 = {
_7 = [13600_i16,21177_i16,18396_i16,(-8360_i16),15911_i16,(-30991_i16)];
Goto(bb3)
}
bb12 = {
_10 = (_5.0,);
_11 = [(-28556_i16),31955_i16,19779_i16,(-533_i16),(-5073_i16),19559_i16];
_13 = [(-16741_i16),4381_i16,9429_i16,(-24781_i16),(-26915_i16),5691_i16];
_6 = [14803_i16,(-15334_i16),5132_i16,1157_i16,(-29948_i16),32423_i16];
_13 = [(-30394_i16),12243_i16,(-18358_i16),(-6757_i16),16086_i16,(-26152_i16)];
_10.0 = _12;
Goto(bb5)
}
bb13 = {
_15 = (-126_i8) as u128;
_7 = [21316_i16,937_i16,19187_i16,24494_i16,(-13703_i16),18571_i16];
_3 = [(-12078_i16),21621_i16,(-20781_i16),12221_i16,2010_i16,(-22475_i16)];
Goto(bb4)
}
bb14 = {
_23.3 = -_16.0;
_13 = _8;
_2 = _9;
_18.1 = 8072014003872368199_u64 - 16659334746220486595_u64;
_23.1 = _18.0 as i128;
_20 = (_15,);
_2.0 = [(-2564_i16),25257_i16,18619_i16,13703_i16,6503_i16,15291_i16];
_19.0 = [(-1771308188_i32),2131553553_i32,(-803902904_i32),320850833_i32,1608411644_i32];
_23.2 = false | false;
_1 = [15911_i16,544_i16,4523_i16,31596_i16,(-6795_i16),(-18963_i16)];
_5 = (_3,);
_17 = _23.0;
_9 = (_8,);
_22 = !_15;
_18.0 = 0_usize;
_19.0 = [(-2127120153_i32),1814884612_i32,(-1824991225_i32),(-1170683704_i32),(-938580411_i32)];
_18.1 = 12701160708590485908_u64;
_16.0 = _23.3 + _23.3;
_23 = (_17, (-58134747775723369241477335216348821758_i128), false, _16.0);
_17 = [6289_u16,9232_u16,5686_u16,17256_u16,8456_u16,61621_u16,28077_u16,10491_u16];
_19.4 = -_26;
_23.3 = _16.0;
_20 = (_15,);
_4 = [3319_i16,10673_i16,1963_i16,(-24983_i16),23821_i16,7251_i16];
match _23.1 {
0 => bb12,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
282147619145215094221897272215419389698 => bb21,
_ => bb20
}
}
bb15 = {
_15 = (-126_i8) as u128;
_7 = [21316_i16,937_i16,19187_i16,24494_i16,(-13703_i16),18571_i16];
_3 = [(-12078_i16),21621_i16,(-20781_i16),12221_i16,2010_i16,(-22475_i16)];
Goto(bb4)
}
bb16 = {
_10 = (_5.0,);
_11 = [(-28556_i16),31955_i16,19779_i16,(-533_i16),(-5073_i16),19559_i16];
_13 = [(-16741_i16),4381_i16,9429_i16,(-24781_i16),(-26915_i16),5691_i16];
_6 = [14803_i16,(-15334_i16),5132_i16,1157_i16,(-29948_i16),32423_i16];
_13 = [(-30394_i16),12243_i16,(-18358_i16),(-6757_i16),16086_i16,(-26152_i16)];
_10.0 = _12;
Goto(bb5)
}
bb17 = {
_7 = [13600_i16,21177_i16,18396_i16,(-8360_i16),15911_i16,(-30991_i16)];
Goto(bb3)
}
bb18 = {
_3 = _9.0;
_7 = [(-16642_i16),(-28298_i16),7860_i16,(-9556_i16),12293_i16,(-23222_i16)];
_11 = [(-29522_i16),(-30293_i16),29941_i16,(-3451_i16),21751_i16,2714_i16];
_1 = [(-21636_i16),28646_i16,26239_i16,(-1903_i16),(-7161_i16),(-32573_i16)];
_9.0 = [1899_i16,(-22211_i16),29094_i16,(-28916_i16),(-15610_i16),5872_i16];
_1 = [(-32288_i16),19874_i16,(-22589_i16),(-30744_i16),(-22010_i16),(-6909_i16)];
_14 = [9063_i16,18704_i16,21244_i16,(-5584_i16),(-9039_i16),(-14408_i16)];
_10.0 = [(-423_i16),(-7494_i16),(-31472_i16),(-11620_i16),(-15497_i16),(-29288_i16)];
Goto(bb2)
}
bb19 = {
_15 = (-126_i8) as u128;
_7 = [21316_i16,937_i16,19187_i16,24494_i16,(-13703_i16),18571_i16];
_3 = [(-12078_i16),21621_i16,(-20781_i16),12221_i16,2010_i16,(-22475_i16)];
Goto(bb4)
}
bb20 = {
_3 = _9.0;
_7 = [(-16642_i16),(-28298_i16),7860_i16,(-9556_i16),12293_i16,(-23222_i16)];
_11 = [(-29522_i16),(-30293_i16),29941_i16,(-3451_i16),21751_i16,2714_i16];
_1 = [(-21636_i16),28646_i16,26239_i16,(-1903_i16),(-7161_i16),(-32573_i16)];
_9.0 = [1899_i16,(-22211_i16),29094_i16,(-28916_i16),(-15610_i16),5872_i16];
_1 = [(-32288_i16),19874_i16,(-22589_i16),(-30744_i16),(-22010_i16),(-6909_i16)];
_14 = [9063_i16,18704_i16,21244_i16,(-5584_i16),(-9039_i16),(-14408_i16)];
_10.0 = [(-423_i16),(-7494_i16),(-31472_i16),(-11620_i16),(-15497_i16),(-29288_i16)];
Goto(bb2)
}
bb21 = {
_28 = _23.1 as f32;
_16 = (_23.3,);
_10 = (_14,);
_18 = (13216462092946789287_usize, 3428677020252957445_u64);
_18.0 = 3_usize;
_6 = [(-21975_i16),(-22623_i16),(-15194_i16),(-11145_i16),32209_i16,27580_i16];
_15 = !_22;
_19.2 = _18.0 as i64;
_30 = '\u{3fdb0}';
_29 = _18.0 as i32;
_16 = (_23.3,);
_18 = (5181857111566980437_usize, 17078931691526289571_u64);
_20.0 = _22;
_19.3 = 102_u8;
_2 = _10;
_10 = (_5.0,);
_6 = _3;
_25 = _28 - _26;
_23 = (_17, (-15437771070410821594463293384381723708_i128), false, _16.0);
_8 = _1;
_10.0 = [(-6119_i16),(-23617_i16),(-21402_i16),9810_i16,(-16790_i16),26353_i16];
_31.0 = [(-10373_i16),5776_i16,(-14078_i16),(-31668_i16),26061_i16,28127_i16];
_23.2 = !false;
_25 = _28;
_9.0 = [(-30865_i16),(-462_i16),(-22869_i16),4808_i16,18495_i16,27689_i16];
_19.1 = (_5.0,);
_12 = [(-6465_i16),(-17460_i16),(-29375_i16),(-15042_i16),(-2635_i16),(-15982_i16)];
Call(_23.1 = fn17(_25, _18.0, _4), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
_29 = 7733_u16 as i32;
_30 = '\u{4d150}';
_23.0 = [5610_u16,23447_u16,4637_u16,12075_u16,38063_u16,3844_u16,28974_u16,60399_u16];
_9 = (_11,);
_8 = _6;
_19.0 = [_29,_29,_29,_29,_29];
_28 = _26 + _26;
_19.3 = 47_u8 << _18.1;
_23.1 = 11215_i16 as i128;
_33 = 31274_i16 as f32;
_34.0 = _22 << _22;
_16.0 = _29 as f64;
_34 = (_15,);
_36.fld3 = [_23.1,_23.1];
_30 = '\u{8c2c2}';
_17 = [26887_u16,18502_u16,26842_u16,18037_u16,30188_u16,47586_u16,36488_u16,29968_u16];
_11 = [(-13193_i16),28698_i16,22571_i16,22340_i16,(-18230_i16),(-19236_i16)];
RET = Adt40::Variant2 { fld0: _23.3,fld1: _36.fld3,fld2: (-9223372036854775808_isize),fld3: (-99_i8),fld4: 21422_i16,fld5: _23,fld6: _18,fld7: _10.0 };
_20.0 = _34.0 ^ _34.0;
_18.0 = !Field::<(usize, u64)>(Variant(RET, 2), 6).0;
place!(Field::<[i16; 6]>(Variant(RET, 2), 7)) = _31.0;
place!(Field::<i16>(Variant(RET, 2), 4)) = 56211_u16 as i16;
_18.1 = Field::<(usize, u64)>(Variant(RET, 2), 6).1;
_4 = _1;
Goto(bb23)
}
bb23 = {
_36.fld1 = [18404_u16];
_12 = _19.1.0;
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)) = (_18.0, _18.1);
_22 = !_15;
_36.fld6 = [_29];
place!(Field::<[i16; 6]>(Variant(RET, 2), 7)) = [Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4)];
_19.2 = -(-3328272823976355020_i64);
_24 = !9223372036854775807_isize;
_16 = (Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5).3,);
_37.fld1 = Field::<(usize, u64)>(Variant(RET, 2), 6).0 << _20.0;
place!(Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5)).0 = _23.0;
place!(Field::<[i128; 2]>(Variant(RET, 2), 1)) = [_23.1,_23.1];
place!(Field::<i16>(Variant(RET, 2), 4)) = _22 as i16;
place!(Field::<i8>(Variant(RET, 2), 3)) = _29 as i8;
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)).1 = Field::<(usize, u64)>(Variant(RET, 2), 6).0 as u64;
RET = Adt40::Variant2 { fld0: _16.0,fld1: _36.fld3,fld2: _24,fld3: (-15_i8),fld4: 3646_i16,fld5: _23,fld6: _18,fld7: _12 };
_9.0 = [12279_i16,13283_i16,(-3709_i16),(-31550_i16),(-16548_i16),3522_i16];
place!(Field::<isize>(Variant(RET, 2), 2)) = !_24;
_3 = [18970_i16,196_i16,(-4842_i16),(-2865_i16),9416_i16,4984_i16];
_7 = [10033_i16,3061_i16,(-28495_i16),21041_i16,(-22170_i16),4275_i16];
_30 = '\u{b5a3d}';
_14 = _9.0;
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)).1 = !_18.1;
_36.fld0 = !_23.2;
place!(Field::<isize>(Variant(RET, 2), 2)) = _24 * _24;
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)).0 = _18.0 - _37.fld1;
Goto(bb24)
}
bb24 = {
_11 = [(-31149_i16),21099_i16,(-14264_i16),26268_i16,14509_i16,32041_i16];
place!(Field::<i8>(Variant(RET, 2), 3)) = 122_i8;
_19.1.0 = [(-25452_i16),(-2468_i16),(-2497_i16),(-31674_i16),(-11428_i16),(-24204_i16)];
place!(Field::<[i16; 6]>(Variant(RET, 2), 7)) = [(-32602_i16),14018_i16,(-13970_i16),(-21330_i16),(-26545_i16),(-29129_i16)];
_36.fld2 = (_20.0,);
_17 = [2958_u16,18690_u16,22434_u16,101_u16,11548_u16,42004_u16,49121_u16,62950_u16];
_42.1 = (24672_u16, _25, _19.2);
_18 = Field::<(usize, u64)>(Variant(RET, 2), 6);
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)).0 = !_18.0;
_19.1 = (_8,);
_4 = _14;
match _42.1.0 {
0 => bb25,
24672 => bb27,
_ => bb26
}
}
bb25 = {
_1 = [(-32002_i16),17070_i16,(-10418_i16),29901_i16,(-2470_i16),(-5736_i16)];
_6 = _4;
_19.3 = !133_u8;
_20.0 = _15 - _15;
_9 = (_4,);
_9.0 = [26709_i16,314_i16,(-11506_i16),23683_i16,(-27540_i16),(-31639_i16)];
match _18.1 {
0 => bb7,
1 => bb8,
18046851238156688513 => bb10,
_ => bb9
}
}
bb26 = {
_15 = (-126_i8) as u128;
_7 = [21316_i16,937_i16,19187_i16,24494_i16,(-13703_i16),18571_i16];
_3 = [(-12078_i16),21621_i16,(-20781_i16),12221_i16,2010_i16,(-22475_i16)];
Goto(bb4)
}
bb27 = {
_37.fld0 = [_23.1,Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5).1];
_38 = _19.2 | _19.2;
_36.fld2 = (_20.0,);
_31 = (Field::<[i16; 6]>(Variant(RET, 2), 7),);
_42.1.1 = _42.1.2 as f32;
match _42.1.0 {
0 => bb21,
1 => bb25,
2 => bb16,
24672 => bb28,
_ => bb8
}
}
bb28 = {
_16.0 = Field::<f64>(Variant(RET, 2), 0);
_44 = _19.3 as isize;
_34.0 = 443396250_u32 as u128;
_3 = [13589_i16,27275_i16,12683_i16,(-4129_i16),32521_i16,21276_i16];
RET = Adt40::Variant2 { fld0: _23.3,fld1: _36.fld3,fld2: _44,fld3: (-44_i8),fld4: (-32563_i16),fld5: _23,fld6: _18,fld7: _13 };
_6 = _19.1.0;
_13 = [22747_i16,11647_i16,1429_i16,(-22308_i16),(-21397_i16),12961_i16];
_1 = _5.0;
place!(Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5)) = _23;
_23.3 = _28 as f64;
_23.0 = Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5).0;
match _42.1.0 {
0 => bb18,
24672 => bb29,
_ => bb26
}
}
bb29 = {
_19.2 = _42.1.2;
_24 = -Field::<isize>(Variant(RET, 2), 2);
_39.0 = Field::<(usize, u64)>(Variant(RET, 2), 6).0 as u128;
_32 = Field::<isize>(Variant(RET, 2), 2) >> _18.0;
_36.fld3 = Field::<[i128; 2]>(Variant(RET, 2), 1);
_16 = (_23.3,);
_36.fld2.0 = _39.0;
_42.1 = (20746_u16, _25, _38);
_20.0 = !_36.fld2.0;
_36.fld2.0 = Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5).1 as u128;
_34 = _20;
_47 = _23.2;
_36.fld7 = !Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5).1;
_54 = core::ptr::addr_of_mut!(_53);
_22 = _32 as u128;
_42.0 = !_42.1.0;
_36.fld4.fld0 = core::ptr::addr_of!(_21);
match _42.1.0 {
0 => bb23,
1 => bb9,
2 => bb24,
3 => bb27,
4 => bb20,
5 => bb21,
20746 => bb31,
_ => bb30
}
}
bb30 = {
_10 = (_5.0,);
_11 = [(-28556_i16),31955_i16,19779_i16,(-533_i16),(-5073_i16),19559_i16];
_13 = [(-16741_i16),4381_i16,9429_i16,(-24781_i16),(-26915_i16),5691_i16];
_6 = [14803_i16,(-15334_i16),5132_i16,1157_i16,(-29948_i16),32423_i16];
_13 = [(-30394_i16),12243_i16,(-18358_i16),(-6757_i16),16086_i16,(-26152_i16)];
_10.0 = _12;
Goto(bb5)
}
bb31 = {
_33 = _25;
_55 = core::ptr::addr_of_mut!((*_54));
place!(Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5)).0 = [_42.0,_42.1.0,_42.0,_42.1.0,_42.1.0,_42.0,_42.1.0,_42.1.0];
match _42.1.0 {
0 => bb28,
1 => bb14,
2 => bb19,
3 => bb29,
4 => bb9,
20746 => bb32,
_ => bb10
}
}
bb32 = {
_1 = [(-10846_i16),28013_i16,5408_i16,(-6_i16),(-8647_i16),1130_i16];
_46 = [_42.1.0,_42.1.0,_42.1.0,_42.0,_42.1.0,_42.1.0,_42.1.0,_42.0];
_43 = [(-28574_i16),(-17221_i16),(-26943_i16),10992_i16,20671_i16,9515_i16];
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)).1 = !_18.1;
RET = Adt40::Variant2 { fld0: _23.3,fld1: _37.fld0,fld2: _32,fld3: (-120_i8),fld4: (-5117_i16),fld5: _23,fld6: _18,fld7: _19.1.0 };
_18 = (Field::<(usize, u64)>(Variant(RET, 2), 6).0, Field::<(usize, u64)>(Variant(RET, 2), 6).1);
_23.0 = [_42.1.0,_42.0,_42.0,_42.0,_42.0,_42.1.0,_42.0,_42.0];
_19.4 = -_42.1.1;
place!(Field::<[i16; 6]>(Variant(RET, 2), 7)) = _12;
_56 = Adt48::Variant2 { fld0: _42.1.2 };
_5.0 = [21955_i16,(-7455_i16),(-32685_i16),2996_i16,8223_i16,10332_i16];
_23.2 = !_36.fld0;
SetDiscriminant(_56, 0);
_31 = _5;
place!(Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4)).2 = !53_i8;
_57.1.0 = [(-24481_i16),27960_i16,(-26372_i16),26712_i16,(-18896_i16),27140_i16];
match _42.1.0 {
20746 => bb34,
_ => bb33
}
}
bb33 = {
_29 = 7733_u16 as i32;
_30 = '\u{4d150}';
_23.0 = [5610_u16,23447_u16,4637_u16,12075_u16,38063_u16,3844_u16,28974_u16,60399_u16];
_9 = (_11,);
_8 = _6;
_19.0 = [_29,_29,_29,_29,_29];
_28 = _26 + _26;
_19.3 = 47_u8 << _18.1;
_23.1 = 11215_i16 as i128;
_33 = 31274_i16 as f32;
_34.0 = _22 << _22;
_16.0 = _29 as f64;
_34 = (_15,);
_36.fld3 = [_23.1,_23.1];
_30 = '\u{8c2c2}';
_17 = [26887_u16,18502_u16,26842_u16,18037_u16,30188_u16,47586_u16,36488_u16,29968_u16];
_11 = [(-13193_i16),28698_i16,22571_i16,22340_i16,(-18230_i16),(-19236_i16)];
RET = Adt40::Variant2 { fld0: _23.3,fld1: _36.fld3,fld2: (-9223372036854775808_isize),fld3: (-99_i8),fld4: 21422_i16,fld5: _23,fld6: _18,fld7: _10.0 };
_20.0 = _34.0 ^ _34.0;
_18.0 = !Field::<(usize, u64)>(Variant(RET, 2), 6).0;
place!(Field::<[i16; 6]>(Variant(RET, 2), 7)) = _31.0;
place!(Field::<i16>(Variant(RET, 2), 4)) = 56211_u16 as i16;
_18.1 = Field::<(usize, u64)>(Variant(RET, 2), 6).1;
_4 = _1;
Goto(bb23)
}
bb34 = {
_21 = _30;
place!(Field::<[i128; 2]>(Variant(RET, 2), 1)) = _37.fld0;
place!(Field::<[i16; 6]>(Variant(RET, 2), 7)) = [(-5290_i16),10507_i16,(-16159_i16),(-8257_i16),4530_i16,8524_i16];
place!(Field::<i16>(Variant(RET, 2), 4)) = !(-7349_i16);
place!(Field::<([i32; 5],)>(Variant(_56, 0), 2)) = (_19.0,);
place!(Field::<(u128,)>(Variant(_56, 0), 7)) = (_34.0,);
_54 = core::ptr::addr_of_mut!((*_55));
_57.1.0 = [Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4)];
_25 = Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).2 as f32;
_51 = Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).2;
place!(Field::<(u128,)>(Variant(_56, 0), 7)) = (_22,);
_19.1 = (_3,);
_37.fld0 = _36.fld3;
RET = Adt40::Variant2 { fld0: _16.0,fld1: _37.fld0,fld2: _32,fld3: _51,fld4: 5581_i16,fld5: _23,fld6: _18,fld7: _3 };
place!(Field::<(u128,)>(Variant(_56, 0), 7)).0 = _22;
_49 = _18.0 << _32;
_19 = (Field::<([i32; 5],)>(Variant(_56, 0), 2).0, _2, _38, 33_u8, _26);
place!(Field::<([i32; 5],)>(Variant(_56, 0), 2)).0 = [_29,_29,_29,_29,_29];
place!(Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4)).1.0 = _42.0;
_42.1.1 = -_33;
_19.1.0 = [(-26302_i16),(-22506_i16),(-19862_i16),21468_i16,(-6271_i16),31635_i16];
Goto(bb35)
}
bb35 = {
_19.1 = (_8,);
_57.4 = -_42.1.1;
place!(Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4)) = (_42.1.0, _42.1, Field::<i8>(Variant(RET, 2), 3));
place!(Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5)).0 = [_42.1.0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).1.0,_42.0,_42.1.0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).1.0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).1.0,_42.1.0];
Goto(bb36)
}
bb36 = {
place!(Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4)).1.2 = _42.1.2;
place!(Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5)) = _23;
_5 = (_4,);
place!(Field::<([u16; 8], i128, bool, f64)>(Variant(RET, 2), 5)).2 = !_47;
_57.4 = Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).1.1 + _33;
_53 = !11186996_u32;
_7 = [(-8353_i16),(-20955_i16),(-24545_i16),849_i16,6851_i16,(-32736_i16)];
_17 = [Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,_42.0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,_42.0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).1.0,_42.0];
_55 = core::ptr::addr_of_mut!((*_54));
_57.0 = _19.0;
place!(Field::<i16>(Variant(RET, 2), 4)) = -28463_i16;
_40 = _32 << _42.0;
_2.0 = [Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4),Field::<i16>(Variant(RET, 2), 4)];
_5 = (_6,);
_35 = _49 < _49;
_66.1.1 = _33;
_46 = [_42.1.0,_42.1.0,_42.1.0,_42.1.0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0,Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).0];
_66.1.1 = _42.0 as f32;
_58 = Field::<i16>(Variant(RET, 2), 4) + Field::<i16>(Variant(RET, 2), 4);
_47 = _35;
place!(Field::<(usize, u64)>(Variant(RET, 2), 6)).0 = _18.0;
SetDiscriminant(RET, 2);
_19.1 = _10;
_34.0 = !_39.0;
place!(Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4)).1.2 = _19.2 - _42.1.2;
RET = Adt40::Variant1 { fld0: _47,fld1: _16,fld2: _32,fld3: Field::<(u16, (u16, f32, i64), i8)>(Variant(_56, 0), 4).1,fld4: _36.fld6,fld5: _29,fld6: _57.4,fld7: _46 };
_12 = [_58,_58,_58,_58,_58,_58];
_40 = _16.0 as isize;
Goto(bb37)
}
bb37 = {
Call(_69 = dump_var(16_usize, 13_usize, Move(_13), 53_usize, Move(_53), 10_usize, Move(_10), 32_usize, Move(_32)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_69 = dump_var(16_usize, 38_usize, Move(_38), 4_usize, Move(_4), 29_usize, Move(_29), 18_usize, Move(_18)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_69 = dump_var(16_usize, 15_usize, Move(_15), 24_usize, Move(_24), 8_usize, Move(_8), 7_usize, Move(_7)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_69 = dump_var(16_usize, 22_usize, Move(_22), 51_usize, Move(_51), 1_usize, Move(_1), 34_usize, Move(_34)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_69 = dump_var(16_usize, 39_usize, Move(_39), 49_usize, Move(_49), 43_usize, Move(_43), 70_usize, _70), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: f32,mut _2: usize,mut _3: [i16; 6]) -> i128 {
mir! {
type RET = i128;
let _4: f64;
let _5: (usize, u64);
let _6: *const char;
let _7: f64;
let _8: isize;
let _9: Adt50;
let _10: Adt43;
let _11: u16;
let _12: f32;
let _13: i8;
let _14: Adt41;
let _15: (f64,);
let _16: (usize, u64);
let _17: *const i64;
let _18: u64;
let _19: i8;
let _20: f32;
let _21: [u16; 1];
let _22: Adt42;
let _23: (f64,);
let _24: f64;
let _25: ();
let _26: ();
{
RET = '\u{13da8}' as i128;
_2 = (-8138609875299193400_i64) as usize;
RET = (-106524996384888207847731422887571324537_i128) * (-45060821109446740491073044259877762261_i128);
_1 = (-15000_i16) as f32;
_2 = 6825513095944973721_usize + 5_usize;
_1 = 372172355_u32 as f32;
_3 = [(-681_i16),(-31755_i16),(-20172_i16),(-14841_i16),(-9064_i16),(-24592_i16)];
_2 = !11331329483711153386_usize;
RET = 252432577337004398911740008032710615653_u128 as i128;
RET = !145757270045813816208375116882007469700_i128;
RET = -103298917031394923040847545248704838430_i128;
_4 = 4274863638_u32 as f64;
_2 = 9632925679617099933_usize + 9342582187443990550_usize;
_1 = _4 as f32;
RET = true as i128;
_4 = 289851545406527214504732277603581400262_u128 as f64;
_3 = [(-10203_i16),(-29903_i16),15458_i16,24640_i16,11202_i16,18352_i16];
_2 = !18009066364688761459_usize;
_1 = 129_u8 as f32;
RET = _1 as i128;
RET = 49040045806980948154342982065418816960_u128 as i128;
RET = 88228249510987576726171034520973108611_i128 + 134889319440783403993723627888069948710_i128;
RET = 79933147435409367362853885021517808552_u128 as i128;
_5.1 = !14782879751914325599_u64;
_4 = 33_i8 as f64;
_2 = !13330193253459638221_usize;
_5.0 = '\u{c6430}' as usize;
_5.0 = (-27746_i16) as usize;
Goto(bb1)
}
bb1 = {
RET = -125918963265330935733927049985206526174_i128;
_2 = _5.0;
RET = true as i128;
_5.0 = _2 >> RET;
RET = 108038283612357829666751204591105812470_i128;
_8 = (-9223372036854775808_isize);
RET = 58930_u16 as i128;
RET = 335281575012960636436806278274336107692_u128 as i128;
RET = !(-168003677961451603454245208741845574838_i128);
_5 = (_2, 2788869245556373472_u64);
_3 = [30244_i16,20425_i16,(-16016_i16),(-2738_i16),19190_i16,(-30296_i16)];
_2 = !_5.0;
_7 = _4;
_9.fld0 = [RET,RET];
_5.0 = !_2;
Goto(bb2)
}
bb2 = {
RET = !39149474917401389266068960382544997641_i128;
_3 = [(-2478_i16),(-16834_i16),5203_i16,21456_i16,(-25097_i16),21803_i16];
_5 = (_2, 6318298442472379518_u64);
_3 = [6438_i16,(-4197_i16),(-20482_i16),(-12646_i16),(-7110_i16),(-15809_i16)];
_9.fld1 = _5.0 - _2;
_5 = (_2, 8759376502691930908_u64);
_9.fld1 = !_5.0;
_11 = !55090_u16;
_9.fld0 = [RET,RET];
RET = !(-39304805887641612687631232839786424505_i128);
_3 = [5648_i16,16717_i16,30666_i16,8498_i16,27982_i16,(-15479_i16)];
_9.fld0 = [RET,RET];
_3 = [26397_i16,(-31590_i16),32275_i16,(-26699_i16),(-3384_i16),(-5156_i16)];
match _5.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
8759376502691930908 => bb9,
_ => bb8
}
}
bb3 = {
RET = -125918963265330935733927049985206526174_i128;
_2 = _5.0;
RET = true as i128;
_5.0 = _2 >> RET;
RET = 108038283612357829666751204591105812470_i128;
_8 = (-9223372036854775808_isize);
RET = 58930_u16 as i128;
RET = 335281575012960636436806278274336107692_u128 as i128;
RET = !(-168003677961451603454245208741845574838_i128);
_5 = (_2, 2788869245556373472_u64);
_3 = [30244_i16,20425_i16,(-16016_i16),(-2738_i16),19190_i16,(-30296_i16)];
_2 = !_5.0;
_7 = _4;
_9.fld0 = [RET,RET];
_5.0 = !_2;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_4 = _8 as f64;
_5 = (_9.fld1, 10084485806837361111_u64);
_5 = (_2, 2265543315099481384_u64);
RET = !2019128120769609904291683513551023862_i128;
_5 = (_2, 7430188184678179197_u64);
_7 = _4;
_11 = 47232_u16;
_8 = !9223372036854775807_isize;
_11 = 2885203091_u32 as u16;
_12 = _4 as f32;
_1 = _12;
_9.fld0 = [RET,RET];
_8 = -80_isize;
_13 = 70_i8 >> _5.0;
_4 = _1 as f64;
_5.1 = 5297408856945376401_u64 >> _5.0;
_5.0 = _2 * _9.fld1;
Goto(bb10)
}
bb10 = {
RET = (-123184344666760479883826930803486184443_i128) + 63835170969516506596472432302995304487_i128;
_7 = (-4993_i16) as f64;
_5.1 = _13 as u64;
Goto(bb11)
}
bb11 = {
_15 = (_4,);
_5 = (_2, 2156007390364429410_u64);
_8 = 9223372036854775807_isize;
_12 = _11 as f32;
_5.0 = !_2;
_15.0 = _11 as f64;
_16 = _5;
_16.0 = _8 as usize;
_2 = _9.fld1 & _5.0;
_15.0 = (-9929_i16) as f64;
_7 = -_15.0;
_5 = (_16.0, _16.1);
_3 = [(-8882_i16),29894_i16,(-13422_i16),31619_i16,(-1190_i16),(-18881_i16)];
_1 = _12 - _12;
_16.0 = _5.0;
_8 = 9223372036854775807_isize + 28_isize;
_5.0 = 52_u8 as usize;
_11 = _16.1 as u16;
_5.1 = _16.1;
_15.0 = 2399117377_u32 as f64;
_16 = (_2, _5.1);
Goto(bb12)
}
bb12 = {
_9.fld1 = _5.0;
_16.1 = _5.1;
Call(_11 = core::intrinsics::bswap(35246_u16), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_4 = _7 * _7;
_18 = _5.1;
_11 = (-1366_i16) as u16;
_12 = _1 + _1;
_11 = !40591_u16;
_15 = (_4,);
_20 = -_12;
_16 = _5;
_11 = 8169_u16;
RET = '\u{29457}' as i128;
Goto(bb14)
}
bb14 = {
_5.0 = _9.fld1;
_15.0 = _4 * _4;
_20 = _12 * _1;
_16 = _5;
_9.fld0 = [RET,RET];
_21 = [_11];
_1 = -_20;
_9.fld1 = !_5.0;
_11 = 6971_u16 & 15733_u16;
_19 = 1482_i16 as i8;
_9.fld0 = [RET,RET];
_11 = RET as u16;
_16.0 = _9.fld1;
_11 = 41787_u16;
RET = (-7160353935954911526_i64) as i128;
_5.1 = _18;
_2 = _9.fld1 - _5.0;
_24 = _15.0;
_5.0 = _2;
_1 = _20;
_8 = 9223372036854775807_isize >> _2;
_4 = _15.0;
_15 = (_24,);
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(17_usize, 2_usize, Move(_2), 5_usize, Move(_5), 13_usize, Move(_13), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(17_usize, 18_usize, Move(_18), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [i16; 6],mut _2: [isize; 3],mut _3: [i16; 6],mut _4: f32,mut _5: [u16; 8],mut _6: [i16; 6],mut _7: [u16; 8],mut _8: [i16; 6]) -> ([u16; 8], i128, bool, f64) {
mir! {
type RET = ([u16; 8], i128, bool, f64);
let _9: ([i32; 5],);
let _10: Adt40;
let _11: isize;
let _12: Adt46;
let _13: char;
let _14: [isize; 3];
let _15: u32;
let _16: i16;
let _17: ([i32; 5],);
let _18: ([u16; 8], i128, bool, f64);
let _19: i32;
let _20: (u16, f32, i64);
let _21: isize;
let _22: *const i64;
let _23: i16;
let _24: f64;
let _25: [i32; 1];
let _26: isize;
let _27: ([i32; 5], ([i16; 6],), i64, u8, f32);
let _28: i32;
let _29: Adt52;
let _30: bool;
let _31: ([i32; 5],);
let _32: Adt49;
let _33: f64;
let _34: u128;
let _35: [isize; 3];
let _36: *const i8;
let _37: Adt40;
let _38: Adt54;
let _39: [i32; 1];
let _40: i128;
let _41: Adt47;
let _42: [u16; 8];
let _43: char;
let _44: u8;
let _45: *const char;
let _46: Adt45;
let _47: *const char;
let _48: isize;
let _49: ([i16; 6],);
let _50: isize;
let _51: ();
let _52: ();
{
RET.3 = (-882152755_i32) as f64;
RET.0 = [54744_u16,56996_u16,42932_u16,3568_u16,23071_u16,10727_u16,54828_u16,57368_u16];
RET.2 = !false;
_9.0 = [(-1981298785_i32),1153294157_i32,344262733_i32,481469375_i32,908966164_i32];
RET.0 = _5;
RET.0 = [13490_u16,41355_u16,13374_u16,10076_u16,14290_u16,48452_u16,26284_u16,33635_u16];
_8 = [(-11763_i16),(-12322_i16),(-29441_i16),10311_i16,(-21252_i16),24922_i16];
RET.1 = (-133421192586801036459644119537375384055_i128);
_15 = !802119580_u32;
_15 = !3176449735_u32;
_6 = [(-6855_i16),(-16207_i16),26061_i16,(-32750_i16),(-5121_i16),(-28148_i16)];
_7 = [65082_u16,30946_u16,63020_u16,52290_u16,51787_u16,30442_u16,28521_u16,1133_u16];
_11 = (-6828_i16) as isize;
_8 = [(-4792_i16),12292_i16,(-10339_i16),(-11380_i16),30285_i16,31443_i16];
_17 = _9;
_18 = (_5, RET.1, RET.2, RET.3);
RET.1 = !_18.1;
RET.2 = _18.2;
_9 = _17;
Call(RET.3 = core::intrinsics::fmaf64(_18.3, _18.3, _18.3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_13 = '\u{105e5e}';
_13 = '\u{ee813}';
_18.0 = [65508_u16,29859_u16,52416_u16,41628_u16,9124_u16,55132_u16,61583_u16,11707_u16];
RET.3 = _18.3 * _18.3;
_15 = 4144129713_u32 - 3198002419_u32;
_2 = [_11,_11,_11];
_20.0 = !12231_u16;
_20.1 = _4;
_13 = '\u{e89e9}';
_14 = _2;
_7 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_16 = 1570716121070708363_usize as i16;
_18.3 = -RET.3;
_20.0 = 27259_u16 * 56276_u16;
_20.2 = !(-8526872068708748991_i64);
_8 = [_16,_16,_16,_16,_16,_16];
Goto(bb2)
}
bb2 = {
_21 = _20.2 as isize;
_18.3 = RET.3 - RET.3;
RET.3 = _20.0 as f64;
_9.0 = _17.0;
_18.1 = -RET.1;
_5 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_21 = _11;
RET.2 = !_18.2;
RET.2 = _18.2;
_25 = [(-1169052738_i32)];
_18.0 = RET.0;
Goto(bb3)
}
bb3 = {
_24 = -_18.3;
_5 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_21 = _11 + _11;
_23 = _18.1 as i16;
_9 = _17;
_11 = _21;
_4 = -_20.1;
_8 = _1;
RET.0 = _5;
RET.1 = _18.1 + _18.1;
_26 = 257260579139286888381901307555878169592_u128 as isize;
_18 = RET;
_17 = (_9.0,);
_18 = (RET.0, RET.1, RET.2, _24);
RET.1 = _18.1 & _18.1;
RET.0 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_6 = _8;
_14 = _2;
Goto(bb4)
}
bb4 = {
_27.1.0 = [_23,_16,_23,_23,_16,_16];
_23 = _16;
_8 = [_23,_23,_16,_16,_16,_16];
RET.3 = _24 - _18.3;
_30 = RET.2;
_18.1 = -RET.1;
_22 = core::ptr::addr_of!(_27.2);
_26 = 259092541_i32 as isize;
_2 = [_11,_21,_11];
_17 = _9;
_17 = _9;
RET.2 = _18.2;
_22 = core::ptr::addr_of!((*_22));
_22 = core::ptr::addr_of!(_20.2);
_19 = _4 as i32;
_17.0 = [_19,_19,_19,_19,_19];
_20.0 = 21373_u16;
_18.2 = _30;
_27.2 = (*_22);
_20.1 = -_4;
RET.2 = _30;
_27.3 = 157_u8;
_30 = _18.2;
_31.0 = _9.0;
_26 = !_21;
_32.fld6 = _25;
_21 = _26;
Goto(bb5)
}
bb5 = {
_21 = -_26;
_25 = [_19];
_11 = !_21;
_27.0 = [_19,_19,_19,_19,_19];
RET.2 = !_30;
_27.1 = (_6,);
_9.0 = [_19,_19,_19,_19,_19];
_9.0 = _31.0;
_26 = _21;
_29 = Adt52::Variant0 { fld0: _31.0,fld1: _22,fld2: 101951753038916667551976960354018455270_u128 };
_4 = _20.1 * _20.1;
place!(Field::<[i32; 5]>(Variant(_29, 0), 0)) = _9.0;
_32.fld0 = _23 > _23;
_32.fld0 = !_18.2;
RET.2 = _30 & _18.2;
_32.fld6 = _25;
_27.0 = _31.0;
_15 = !3187247971_u32;
RET = (_18.0, _18.1, _32.fld0, _24);
Call(_28 = fn19(Field::<[i32; 5]>(Variant(_29, 0), 0), RET.1, _22, (*_22)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
RET.2 = !_18.2;
Goto(bb7)
}
bb7 = {
_24 = RET.3;
_21 = RET.1 as isize;
_20.2 = _27.2 ^ _27.2;
_25 = [_28];
_33 = -_18.3;
_30 = _18.2;
RET.2 = !_32.fld0;
_35 = [_21,_11,_11];
_18.0 = _5;
_27.4 = _20.1 - _20.1;
_18 = (RET.0, RET.1, RET.2, _33);
RET.2 = !_18.2;
place!(Field::<u128>(Variant(_29, 0), 2)) = 27860119590443721378512697192736891428_u128 << RET.1;
_32.fld5 = _19 >> _11;
_15 = 947955683_u32 << (*_22);
_20.0 = 39093_u16 << _32.fld5;
Goto(bb8)
}
bb8 = {
_47 = core::ptr::addr_of!(_13);
_34 = Field::<u128>(Variant(_29, 0), 2);
_43 = (*_47);
place!(Field::<[i32; 5]>(Variant(_29, 0), 0)) = _31.0;
_27.0 = [_19,_19,_32.fld5,_19,_32.fld5];
RET.2 = _30;
_18 = RET;
_11 = 124_i8 as isize;
_20 = (2049_u16, _4, _27.2);
_32.fld0 = _30 | _18.2;
place!(Field::<[i32; 5]>(Variant(_29, 0), 0)) = _9.0;
_40 = _13 as i128;
_32.fld1 = [_20.0];
Goto(bb9)
}
bb9 = {
_32.fld0 = _18.2 > _18.2;
RET.3 = -_18.3;
SetDiscriminant(_29, 0);
_32.fld4 = Adt44 { fld0: _47 };
_27.1 = (_3,);
RET.1 = -_18.1;
_20 = (42936_u16, _4, _27.2);
_32.fld4.fld0 = core::ptr::addr_of!((*_47));
_18 = RET;
_5 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_47 = _32.fld4.fld0;
_45 = core::ptr::addr_of!(_43);
_27.3 = !21_u8;
_32.fld6 = [_28];
_18 = RET;
_22 = core::ptr::addr_of!((*_22));
match _20.0 {
0 => bb3,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
42936 => bb15,
_ => bb14
}
}
bb10 = {
_47 = core::ptr::addr_of!(_13);
_34 = Field::<u128>(Variant(_29, 0), 2);
_43 = (*_47);
place!(Field::<[i32; 5]>(Variant(_29, 0), 0)) = _31.0;
_27.0 = [_19,_19,_32.fld5,_19,_32.fld5];
RET.2 = _30;
_18 = RET;
_11 = 124_i8 as isize;
_20 = (2049_u16, _4, _27.2);
_32.fld0 = _30 | _18.2;
place!(Field::<[i32; 5]>(Variant(_29, 0), 0)) = _9.0;
_40 = _13 as i128;
_32.fld1 = [_20.0];
Goto(bb9)
}
bb11 = {
_21 = _20.2 as isize;
_18.3 = RET.3 - RET.3;
RET.3 = _20.0 as f64;
_9.0 = _17.0;
_18.1 = -RET.1;
_5 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_21 = _11;
RET.2 = !_18.2;
RET.2 = _18.2;
_25 = [(-1169052738_i32)];
_18.0 = RET.0;
Goto(bb3)
}
bb12 = {
RET.2 = !_18.2;
Goto(bb7)
}
bb13 = {
_13 = '\u{105e5e}';
_13 = '\u{ee813}';
_18.0 = [65508_u16,29859_u16,52416_u16,41628_u16,9124_u16,55132_u16,61583_u16,11707_u16];
RET.3 = _18.3 * _18.3;
_15 = 4144129713_u32 - 3198002419_u32;
_2 = [_11,_11,_11];
_20.0 = !12231_u16;
_20.1 = _4;
_13 = '\u{e89e9}';
_14 = _2;
_7 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_16 = 1570716121070708363_usize as i16;
_18.3 = -RET.3;
_20.0 = 27259_u16 * 56276_u16;
_20.2 = !(-8526872068708748991_i64);
_8 = [_16,_16,_16,_16,_16,_16];
Goto(bb2)
}
bb14 = {
_27.1.0 = [_23,_16,_23,_23,_16,_16];
_23 = _16;
_8 = [_23,_23,_16,_16,_16,_16];
RET.3 = _24 - _18.3;
_30 = RET.2;
_18.1 = -RET.1;
_22 = core::ptr::addr_of!(_27.2);
_26 = 259092541_i32 as isize;
_2 = [_11,_21,_11];
_17 = _9;
_17 = _9;
RET.2 = _18.2;
_22 = core::ptr::addr_of!((*_22));
_22 = core::ptr::addr_of!(_20.2);
_19 = _4 as i32;
_17.0 = [_19,_19,_19,_19,_19];
_20.0 = 21373_u16;
_18.2 = _30;
_27.2 = (*_22);
_20.1 = -_4;
RET.2 = _30;
_27.3 = 157_u8;
_30 = _18.2;
_31.0 = _9.0;
_26 = !_21;
_32.fld6 = _25;
_21 = _26;
Goto(bb5)
}
bb15 = {
_32.fld2.0 = _34;
_18.0 = [_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0,_20.0];
_12 = Adt46::Variant3 { fld0: _22 };
_31 = (_9.0,);
_28 = _32.fld5;
_32.fld4 = Adt44 { fld0: _45 };
_27.0 = [_32.fld5,_28,_28,_28,_32.fld5];
_29 = Adt52::Variant0 { fld0: _9.0,fld1: Field::<*const i64>(Variant(_12, 3), 0),fld2: _34 };
place!(Field::<u128>(Variant(_29, 0), 2)) = !_32.fld2.0;
Goto(bb16)
}
bb16 = {
Call(_51 = dump_var(18_usize, 7_usize, Move(_7), 8_usize, Move(_8), 30_usize, Move(_30), 35_usize, Move(_35)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(18_usize, 40_usize, Move(_40), 6_usize, Move(_6), 21_usize, Move(_21), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_51 = dump_var(18_usize, 1_usize, Move(_1), 13_usize, Move(_13), 11_usize, Move(_11), 31_usize, Move(_31)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_51 = dump_var(18_usize, 28_usize, Move(_28), 52_usize, _52, 52_usize, _52, 52_usize, _52), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [i32; 5],mut _2: i128,mut _3: *const i64,mut _4: i64) -> i32 {
mir! {
type RET = i32;
let _5: Adt43;
let _6: (usize, u64);
let _7: f32;
let _8: isize;
let _9: u64;
let _10: isize;
let _11: char;
let _12: i64;
let _13: u32;
let _14: char;
let _15: Adt47;
let _16: i128;
let _17: Adt46;
let _18: char;
let _19: Adt55;
let _20: Adt50;
let _21: Adt42;
let _22: [i32; 1];
let _23: f32;
let _24: [i128; 2];
let _25: isize;
let _26: i16;
let _27: u8;
let _28: ();
let _29: ();
{
RET = !1809418614_i32;
_2 = 60855884451317392020121800910059572247_i128;
RET = 2142164911_i32;
_3 = core::ptr::addr_of!(_4);
_3 = core::ptr::addr_of!(_4);
_3 = core::ptr::addr_of!((*_3));
_2 = 62024_u16 as i128;
_2 = 7835688742701396632_u64 as i128;
_4 = RET as i64;
Goto(bb1)
}
bb1 = {
_2 = (-143565953820245465455922940547694698577_i128) & 69558799138937873573747717883096761270_i128;
RET = true as i32;
_3 = core::ptr::addr_of!(_4);
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
RET = (-1493893892_i32);
Goto(bb2)
}
bb2 = {
_3 = core::ptr::addr_of!((*_3));
_6.0 = !18332077044851795646_usize;
_1 = [RET,RET,RET,RET,RET];
_3 = core::ptr::addr_of!((*_3));
_6 = (10843765832058159828_usize, 7505207535887962696_u64);
_2 = !5574336996160100404127103626852406795_i128;
RET = 1472396084_i32 + 1843016467_i32;
_6.0 = 2_usize ^ 5511486041510354663_usize;
Call(_6.0 = core::intrinsics::bswap(6030248389679753747_usize), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6.0 = _6.1 as usize;
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
_8 = (-13552_i16) as isize;
_1 = [RET,RET,RET,RET,RET];
_9 = !_6.1;
_7 = _8 as f32;
_6.1 = _9;
_6 = (6_usize, _9);
_7 = 24_u8 as f32;
_5 = Adt43::Variant1 { fld0: 80537808787566939816676959826135514402_u128,fld1: _1 };
_8 = -(-9223372036854775808_isize);
_5 = Adt43::Variant1 { fld0: 63138183753057064174033756642813500674_u128,fld1: _1 };
_2 = (-99638552845891173221836122343069182513_i128);
_6.1 = _9 & _9;
_10 = _6.0 as isize;
_7 = _2 as f32;
place!(Field::<u128>(Variant(_5, 1), 0)) = 44526182403755864896642488344728811436_u128 * 291400007430159550996707588894921174961_u128;
_3 = core::ptr::addr_of!((*_3));
_7 = _9 as f32;
SetDiscriminant(_5, 2);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)) = (_2, _6);
place!(Field::<isize>(Variant(_5, 2), 2)) = 19134_u16 as isize;
place!(Field::<[i32; 5]>(Variant(_5, 2), 5)) = [RET,RET,RET,RET,RET];
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).0 = 64089_u16 & 25127_u16;
Goto(bb4)
}
bb4 = {
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).2 = 25139_i16 as i64;
place!(Field::<([i16; 6],)>(Variant(_5, 2), 3)).0 = [(-30684_i16),917_i16,8750_i16,19936_i16,(-7131_i16),(-18978_i16)];
_12 = !_4;
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)) = (32106_u16, _7, (*_3));
_13 = !2068204369_u32;
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).0 = 45322_u16 & 32511_u16;
_11 = '\u{96301}';
place!(Field::<isize>(Variant(_5, 2), 2)) = _10;
_6 = (Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.0, _9);
_9 = Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.1 - Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.1;
_7 = Field::<(u16, f32, i64)>(Variant(_5, 2), 6).1 - Field::<(u16, f32, i64)>(Variant(_5, 2), 6).1;
_10 = Field::<isize>(Variant(_5, 2), 2) + Field::<isize>(Variant(_5, 2), 2);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)) = (_2, _6);
place!(Field::<([i16; 6],)>(Variant(_5, 2), 3)).0 = [32474_i16,(-30015_i16),28235_i16,28019_i16,(-16913_i16),15760_i16];
match Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
6 => bb7,
_ => bb6
}
}
bb5 = {
_6.0 = _6.1 as usize;
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
_8 = (-13552_i16) as isize;
_1 = [RET,RET,RET,RET,RET];
_9 = !_6.1;
_7 = _8 as f32;
_6.1 = _9;
_6 = (6_usize, _9);
_7 = 24_u8 as f32;
_5 = Adt43::Variant1 { fld0: 80537808787566939816676959826135514402_u128,fld1: _1 };
_8 = -(-9223372036854775808_isize);
_5 = Adt43::Variant1 { fld0: 63138183753057064174033756642813500674_u128,fld1: _1 };
_2 = (-99638552845891173221836122343069182513_i128);
_6.1 = _9 & _9;
_10 = _6.0 as isize;
_7 = _2 as f32;
place!(Field::<u128>(Variant(_5, 1), 0)) = 44526182403755864896642488344728811436_u128 * 291400007430159550996707588894921174961_u128;
_3 = core::ptr::addr_of!((*_3));
_7 = _9 as f32;
SetDiscriminant(_5, 2);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)) = (_2, _6);
place!(Field::<isize>(Variant(_5, 2), 2)) = 19134_u16 as isize;
place!(Field::<[i32; 5]>(Variant(_5, 2), 5)) = [RET,RET,RET,RET,RET];
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).0 = 64089_u16 & 25127_u16;
Goto(bb4)
}
bb6 = {
_2 = (-143565953820245465455922940547694698577_i128) & 69558799138937873573747717883096761270_i128;
RET = true as i32;
_3 = core::ptr::addr_of!(_4);
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
RET = (-1493893892_i32);
Goto(bb2)
}
bb7 = {
_14 = _11;
RET = -1231817779_i32;
_10 = Field::<isize>(Variant(_5, 2), 2);
_10 = -Field::<isize>(Variant(_5, 2), 2);
place!(Field::<i16>(Variant(_5, 2), 4)) = 4950_i16 << _6.1;
place!(Field::<*const i64>(Variant(_5, 2), 0)) = core::ptr::addr_of!((*_3));
place!(Field::<isize>(Variant(_5, 2), 2)) = _8;
_1 = [RET,RET,RET,RET,RET];
place!(Field::<isize>(Variant(_5, 2), 2)) = -_10;
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)).1 = (_6.0, _9);
place!(Field::<isize>(Variant(_5, 2), 2)) = -_8;
_12 = Field::<(u16, f32, i64)>(Variant(_5, 2), 6).2 & (*_3);
_3 = Field::<*const i64>(Variant(_5, 2), 0);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)).1 = (_6.0, _9);
_18 = _14;
_13 = !4229270353_u32;
_4 = Field::<(u16, f32, i64)>(Variant(_5, 2), 6).2;
place!(Field::<isize>(Variant(_5, 2), 2)) = _10 >> _9;
place!(Field::<char>(Variant(_5, 2), 1)) = _14;
_20.fld0 = [_2,_2];
match _6.0 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb13,
_ => bb12
}
}
bb8 = {
_2 = (-143565953820245465455922940547694698577_i128) & 69558799138937873573747717883096761270_i128;
RET = true as i32;
_3 = core::ptr::addr_of!(_4);
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
RET = (-1493893892_i32);
Goto(bb2)
}
bb9 = {
_6.0 = _6.1 as usize;
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
_8 = (-13552_i16) as isize;
_1 = [RET,RET,RET,RET,RET];
_9 = !_6.1;
_7 = _8 as f32;
_6.1 = _9;
_6 = (6_usize, _9);
_7 = 24_u8 as f32;
_5 = Adt43::Variant1 { fld0: 80537808787566939816676959826135514402_u128,fld1: _1 };
_8 = -(-9223372036854775808_isize);
_5 = Adt43::Variant1 { fld0: 63138183753057064174033756642813500674_u128,fld1: _1 };
_2 = (-99638552845891173221836122343069182513_i128);
_6.1 = _9 & _9;
_10 = _6.0 as isize;
_7 = _2 as f32;
place!(Field::<u128>(Variant(_5, 1), 0)) = 44526182403755864896642488344728811436_u128 * 291400007430159550996707588894921174961_u128;
_3 = core::ptr::addr_of!((*_3));
_7 = _9 as f32;
SetDiscriminant(_5, 2);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)) = (_2, _6);
place!(Field::<isize>(Variant(_5, 2), 2)) = 19134_u16 as isize;
place!(Field::<[i32; 5]>(Variant(_5, 2), 5)) = [RET,RET,RET,RET,RET];
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).0 = 64089_u16 & 25127_u16;
Goto(bb4)
}
bb10 = {
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).2 = 25139_i16 as i64;
place!(Field::<([i16; 6],)>(Variant(_5, 2), 3)).0 = [(-30684_i16),917_i16,8750_i16,19936_i16,(-7131_i16),(-18978_i16)];
_12 = !_4;
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)) = (32106_u16, _7, (*_3));
_13 = !2068204369_u32;
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).0 = 45322_u16 & 32511_u16;
_11 = '\u{96301}';
place!(Field::<isize>(Variant(_5, 2), 2)) = _10;
_6 = (Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.0, _9);
_9 = Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.1 - Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.1;
_7 = Field::<(u16, f32, i64)>(Variant(_5, 2), 6).1 - Field::<(u16, f32, i64)>(Variant(_5, 2), 6).1;
_10 = Field::<isize>(Variant(_5, 2), 2) + Field::<isize>(Variant(_5, 2), 2);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)) = (_2, _6);
place!(Field::<([i16; 6],)>(Variant(_5, 2), 3)).0 = [32474_i16,(-30015_i16),28235_i16,28019_i16,(-16913_i16),15760_i16];
match Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
6 => bb7,
_ => bb6
}
}
bb11 = {
_6.0 = _6.1 as usize;
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
_8 = (-13552_i16) as isize;
_1 = [RET,RET,RET,RET,RET];
_9 = !_6.1;
_7 = _8 as f32;
_6.1 = _9;
_6 = (6_usize, _9);
_7 = 24_u8 as f32;
_5 = Adt43::Variant1 { fld0: 80537808787566939816676959826135514402_u128,fld1: _1 };
_8 = -(-9223372036854775808_isize);
_5 = Adt43::Variant1 { fld0: 63138183753057064174033756642813500674_u128,fld1: _1 };
_2 = (-99638552845891173221836122343069182513_i128);
_6.1 = _9 & _9;
_10 = _6.0 as isize;
_7 = _2 as f32;
place!(Field::<u128>(Variant(_5, 1), 0)) = 44526182403755864896642488344728811436_u128 * 291400007430159550996707588894921174961_u128;
_3 = core::ptr::addr_of!((*_3));
_7 = _9 as f32;
SetDiscriminant(_5, 2);
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)) = (_2, _6);
place!(Field::<isize>(Variant(_5, 2), 2)) = 19134_u16 as isize;
place!(Field::<[i32; 5]>(Variant(_5, 2), 5)) = [RET,RET,RET,RET,RET];
place!(Field::<(u16, f32, i64)>(Variant(_5, 2), 6)).0 = 64089_u16 & 25127_u16;
Goto(bb4)
}
bb12 = {
_2 = (-143565953820245465455922940547694698577_i128) & 69558799138937873573747717883096761270_i128;
RET = true as i32;
_3 = core::ptr::addr_of!(_4);
_1 = [RET,RET,RET,RET,RET];
_1 = [RET,RET,RET,RET,RET];
RET = (-1493893892_i32);
Goto(bb2)
}
bb13 = {
place!(Field::<char>(Variant(_5, 2), 1)) = _18;
place!(Field::<[i32; 5]>(Variant(_5, 2), 5)) = _1;
place!(Field::<[i32; 5]>(Variant(_5, 2), 5)) = [RET,RET,RET,RET,RET];
place!(Field::<(i128, (usize, u64))>(Variant(_5, 2), 7)).1.1 = _9;
_1 = [RET,RET,RET,RET,RET];
_24 = [_2,Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).0];
_9 = Field::<(i128, (usize, u64))>(Variant(_5, 2), 7).1.1 | _6.1;
_16 = !_2;
SetDiscriminant(_5, 3);
Goto(bb14)
}
bb14 = {
_11 = _14;
_16 = _13 as i128;
_5 = Adt43::Variant1 { fld0: 62915279013875823337110321732634715793_u128,fld1: _1 };
_26 = 26339_i16 >> _10;
_22 = [RET];
RET = false as i32;
place!(Field::<u128>(Variant(_5, 1), 0)) = _13 as u128;
_6.1 = _9;
_25 = !_10;
_27 = 28_u8;
SetDiscriminant(_5, 0);
_24 = _20.fld0;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(19_usize, 22_usize, Move(_22), 13_usize, Move(_13), 25_usize, Move(_25), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(19_usize, 26_usize, Move(_26), 14_usize, Move(_14), 24_usize, Move(_24), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(19_usize, 8_usize, Move(_8), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{d90a8}'), std::hint::black_box(9223372036854775807_isize), std::hint::black_box(25_i8), std::hint::black_box(5127_i16), std::hint::black_box(1359954582_i32), std::hint::black_box((-8429172066772904277_i64)), std::hint::black_box((-25429864408108068345006628931789698965_i128)), std::hint::black_box(13166308711423559999_usize), std::hint::black_box(151_u8), std::hint::black_box(7682_u16), std::hint::black_box(1107944771_u32), std::hint::black_box(11829476450064981175_u64), std::hint::black_box(119917348777652305538349290804160415977_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt40 {
Variant0{
fld0: [i32; 1],
fld1: char,
fld2: i32,
fld3: u8,
fld4: [isize; 3],

},
Variant1{
fld0: bool,
fld1: (f64,),
fld2: isize,
fld3: (u16, f32, i64),
fld4: [i32; 1],
fld5: i32,
fld6: f32,
fld7: [u16; 8],

},
Variant2{
fld0: f64,
fld1: [i128; 2],
fld2: isize,
fld3: i8,
fld4: i16,
fld5: ([u16; 8], i128, bool, f64),
fld6: (usize, u64),
fld7: [i16; 6],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt41 {
Variant0{
fld0: bool,
fld1: *const i8,
fld2: [i32; 1],
fld3: [i128; 2],
fld4: i16,

},
Variant1{
fld0: bool,
fld1: *mut u32,
fld2: *const i64,
fld3: i32,

},
Variant2{
fld0: (u16, f32, i64),
fld1: (usize, u64),
fld2: Adt40,
fld3: *const (u128,),

},
Variant3{
fld0: bool,
fld1: u16,
fld2: (f64,),
fld3: (u16, f32, i64),

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: bool,
fld1: [i128; 2],
fld2: ([i16; 6],),
fld3: usize,
fld4: f64,
fld5: [isize; 3],

},
Variant1{
fld0: (u128,),
fld1: f64,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: Adt42,
fld1: ([i32; 5],),
fld2: ([i32; 5], ([i16; 6],), i64, u8, f32),
fld3: u64,
fld4: u16,
fld5: i32,
fld6: u128,

},
Variant1{
fld0: u128,
fld1: [i32; 5],

},
Variant2{
fld0: *const i64,
fld1: char,
fld2: isize,
fld3: ([i16; 6],),
fld4: i16,
fld5: [i32; 5],
fld6: (u16, f32, i64),
fld7: (i128, (usize, u64)),

},
Variant3{
fld0: ([i32; 5],),
fld1: (f64,),
fld2: *mut u32,
fld3: Adt41,
fld4: ([i16; 6],),
fld5: (u16, (u16, f32, i64), i8),
fld6: (i128, (usize, u64)),
fld7: u8,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt44 {
fld0: *const char,
}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: bool,
fld1: (u16, f32, i64),
fld2: Adt43,
fld3: *mut u32,

},
Variant1{
fld0: [i128; 2],
fld1: char,
fld2: ([i16; 6],),
fld3: Adt44,
fld4: *const i64,
fld5: (u16, (u16, f32, i64), i8),

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: u128,
fld1: usize,
fld2: *const i64,

},
Variant1{
fld0: Adt42,
fld1: u64,
fld2: (u128,),
fld3: (f64,),
fld4: (usize, u64),
fld5: [i16; 6],
fld6: u16,
fld7: i128,

},
Variant2{
fld0: Adt43,
fld1: [i32; 5],
fld2: ([i32; 5], ([i16; 6],), i64, u8, f32),
fld3: [i16; 6],
fld4: (u128,),
fld5: [i32; 1],
fld6: u64,

},
Variant3{
fld0: *const i64,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: *const i64,
fld1: [i32; 1],
fld2: *const i8,
fld3: (u16, (u16, f32, i64), i8),
fld4: u8,
fld5: *mut u32,
fld6: usize,
fld7: [u16; 1],

},
Variant1{
fld0: i32,
fld1: f64,
fld2: ([i32; 5], ([i16; 6],), i64, u8, f32),

},
Variant2{
fld0: Adt40,
fld1: *const i64,

},
Variant3{
fld0: (u128,),
fld1: Adt43,
fld2: [i16; 6],
fld3: (f64,),

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt42,
fld1: u16,
fld2: ([i32; 5],),
fld3: [i128; 2],
fld4: (u16, (u16, f32, i64), i8),
fld5: [i32; 1],
fld6: Adt47,
fld7: (u128,),

},
Variant1{
fld0: [i32; 5],
fld1: char,
fld2: [i32; 1],
fld3: *const (u128,),
fld4: (u128,),
fld5: u8,
fld6: Adt45,
fld7: *const i64,

},
Variant2{
fld0: i64,

},
Variant3{
fld0: f32,
fld1: ([u16; 8], i128, bool, f64),
fld2: f64,
fld3: Adt41,
fld4: i16,
fld5: Adt45,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: bool,
fld1: [u16; 1],
fld2: (u128,),
fld3: [i128; 2],
fld4: Adt44,
fld5: i32,
fld6: [i32; 1],
fld7: i128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: [i128; 2],
fld1: usize,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: *const char,
fld1: char,
fld2: [u16; 1],
fld3: ([u16; 8], i128, bool, f64),
fld4: Adt47,
fld5: (u16, (u16, f32, i64), i8),

},
Variant1{
fld0: Adt48,
fld1: (f64,),
fld2: *mut u32,
fld3: (u16, f32, i64),

},
Variant2{
fld0: [u16; 8],
fld1: (usize, u64),
fld2: u64,
fld3: i8,
fld4: *const i8,
fld5: Adt47,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: [i32; 5],
fld1: *const i64,
fld2: u128,

},
Variant1{
fld0: bool,
fld1: Adt50,

},
Variant2{
fld0: *const i64,
fld1: usize,
fld2: *const i8,
fld3: [isize; 3],
fld4: *const char,
fld5: [i128; 2],

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: usize,
fld1: *const i8,
fld2: ([i32; 5],),

},
Variant1{
fld0: Adt43,
fld1: Adt46,
fld2: f32,
fld3: *const i64,
fld4: i16,

},
Variant2{
fld0: usize,
fld1: Adt51,
fld2: [u16; 8],
fld3: *const i8,
fld4: i16,
fld5: ([i16; 6],),
fld6: i64,
fld7: [i32; 1],

},
Variant3{
fld0: i32,
fld1: Adt50,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: i32,
fld1: char,

},
Variant1{
fld0: i64,
fld1: *const char,
fld2: [isize; 3],

},
Variant2{
fld0: *const i64,
fld1: usize,
fld2: (usize, u64),
fld3: ([i16; 6],),
fld4: (u16, f32, i64),
fld5: Adt47,
fld6: *mut u32,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt51,
fld1: Adt41,
fld2: i64,

},
Variant1{
fld0: ([u16; 8], i128, bool, f64),
fld1: Adt50,
fld2: f64,
fld3: (usize, u64),

},
Variant2{
fld0: Adt48,

},
Variant3{
fld0: bool,
fld1: [i32; 5],
fld2: Adt49,
fld3: Adt46,
fld4: ([i32; 5], ([i16; 6],), i64, u8, f32),
fld5: Adt45,
fld6: i64,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: bool,
fld1: ([u16; 8], i128, bool, f64),
fld2: isize,
fld3: i8,
fld4: Adt46,
fld5: (f64,),
fld6: i64,
fld7: *mut u32,

},
Variant1{
fld0: *const char,
fld1: i32,

},
Variant2{
fld0: Adt42,
fld1: Adt41,
fld2: u64,
fld3: Adt43,

},
Variant3{
fld0: Adt40,
fld1: *const i8,

}}

