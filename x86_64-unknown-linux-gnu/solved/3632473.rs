#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u64,mut _2: u128,mut _3: isize,mut _4: i8,mut _5: i128) -> f32 {
mir! {
type RET = f32;
let _6: bool;
let _7: u16;
let _8: u8;
let _9: Adt53;
let _10: i128;
let _11: Adt56;
let _12: isize;
let _13: Adt51;
let _14: bool;
let _15: isize;
let _16: bool;
let _17: ([isize; 2],);
let _18: char;
let _19: *mut *mut [i32; 6];
let _20: f64;
let _21: i32;
let _22: char;
let _23: *const *const [usize; 3];
let _24: *const u8;
let _25: f64;
let _26: f32;
let _27: i32;
let _28: Adt61;
let _29: ();
let _30: ();
{
_2 = 8300434058731456186_i64 as u128;
_3 = -(-66_isize);
_5 = 64738377767884137312688083922539453648_i128 & (-30502843471783138027226787847734683405_i128);
_1 = !7778769180931325030_u64;
_4 = !84_i8;
_6 = !true;
_3 = !(-22_isize);
RET = (-32506_i16) as f32;
_5 = 76555165351642453435945119760581083602_i128 + 101705269070114106281367054081710808542_i128;
RET = 232_u8 as f32;
_3 = -(-121_isize);
Goto(bb1)
}
bb1 = {
RET = (-4397201208852496054_i64) as f32;
_8 = !66_u8;
_9.fld0 = core::ptr::addr_of_mut!(_6);
RET = _5 as f32;
_7 = 9358_u16 >> _2;
RET = _2 as f32;
_4 = _6 as i8;
_9.fld0 = core::ptr::addr_of_mut!(_6);
RET = 3975938860_u32 as f32;
_10 = _5 + _5;
_8 = 98_u8;
_1 = 6220975531180698654_u64;
_11.fld1 = [_3,_3];
_9.fld1.fld1 = core::ptr::addr_of_mut!(_5);
_9.fld2.0 = _11.fld1;
_11 = Adt56 { fld0: _3,fld1: _9.fld2.0 };
_9.fld1.fld0 = (_11.fld1,);
_1 = _7 as u64;
_3 = -_11.fld0;
_9.fld0 = core::ptr::addr_of_mut!(_6);
_5 = !_10;
_13.fld5 = 1588327104_i32 ^ (-173530681_i32);
_13.fld4.fld3 = -_4;
_13.fld1.5 = core::ptr::addr_of!(_8);
RET = _13.fld5 as f32;
match _8 {
0 => bb2,
98 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_13.fld1.0.1 = _7;
match _8 {
98 => bb5,
_ => bb3
}
}
bb5 = {
_12 = -_3;
_13.fld1.0 = (11144_i16, _7, (-30753_i16), '\u{49e1d}', _9.fld2.0);
_13.fld1.2.0 = [_1,_1,_1,_1,_1];
_13.fld1.1 = core::ptr::addr_of_mut!(_13.fld1.5);
_6 = !true;
_1 = !11847731317626042884_u64;
Goto(bb6)
}
bb6 = {
_13.fld4.fld4.1 = 2956559427_u32 as f32;
_17 = _9.fld1.fld0;
_11 = Adt56 { fld0: _12,fld1: _9.fld1.fld0.0 };
_3 = _12;
RET = -_13.fld4.fld4.1;
_13.fld2 = _1;
_13.fld2 = _1 ^ _1;
_11 = Adt56 { fld0: _3,fld1: _13.fld1.0.4 };
_13.fld1.0 = (19718_i16, _7, 12263_i16, '\u{94183}', _9.fld2.0);
_8 = 210_u8;
RET = _13.fld4.fld4.1 + _13.fld4.fld4.1;
_13.fld4.fld1 = [_13.fld1.0.2,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.2,_13.fld1.0.0];
_13.fld1.0.3 = '\u{7bb1c}';
_11.fld0 = _12;
_13.fld5 = (-2099500640_i32) << _13.fld1.0.1;
_11 = Adt56 { fld0: _12,fld1: _9.fld1.fld0.0 };
_22 = _13.fld1.0.3;
_13.fld1.4 = _13.fld1.0.2 & _13.fld1.0.0;
_13.fld4.fld0 = [_8,_8,_8,_8,_8,_8,_8,_8];
_21 = _13.fld5;
_13.fld1.2.1 = [_8,_8,_8,_8,_8,_8,_8];
_13.fld2 = _7 as u64;
_9.fld2.0 = [_12,_12];
_13.fld4.fld0 = [_8,_8,_8,_8,_8,_8,_8,_8];
Goto(bb7)
}
bb7 = {
_13.fld1.0 = (_13.fld1.4, _7, _13.fld1.4, _22, _9.fld2.0);
_9.fld2.0 = _11.fld1;
_13.fld1.5 = core::ptr::addr_of!(_8);
_5 = _10;
_17.0 = [_11.fld0,_12];
_13.fld0 = [_3,_3,_12,_12,_11.fld0];
_13.fld0 = [_3,_12,_12,_11.fld0,_11.fld0];
_2 = 280657406385067212237432118940447809373_u128;
_13.fld3 = _13.fld4.fld3;
Call(_13.fld4.fld3 = fn1(_13.fld4.fld1, _13.fld1.0.0, _11.fld0, _9.fld1.fld0, _9.fld1, _13.fld1.5, _9.fld1.fld1, _17, _9.fld2.0, _13.fld1.0.3), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_20 = _12 as f64;
_13.fld1.0.3 = _22;
_13.fld1.0.1 = _7 + _7;
_13.fld4.fld1 = [_13.fld1.0.2,_13.fld1.0.0,_13.fld1.0.2,_13.fld1.0.0,_13.fld1.4];
_3 = _11.fld0 << _13.fld1.4;
match _2 {
0 => bb4,
1 => bb5,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
280657406385067212237432118940447809373 => bb15,
_ => bb14
}
}
bb9 = {
_13.fld1.0 = (_13.fld1.4, _7, _13.fld1.4, _22, _9.fld2.0);
_9.fld2.0 = _11.fld1;
_13.fld1.5 = core::ptr::addr_of!(_8);
_5 = _10;
_17.0 = [_11.fld0,_12];
_13.fld0 = [_3,_3,_12,_12,_11.fld0];
_13.fld0 = [_3,_12,_12,_11.fld0,_11.fld0];
_2 = 280657406385067212237432118940447809373_u128;
_13.fld3 = _13.fld4.fld3;
Call(_13.fld4.fld3 = fn1(_13.fld4.fld1, _13.fld1.0.0, _11.fld0, _9.fld1.fld0, _9.fld1, _13.fld1.5, _9.fld1.fld1, _17, _9.fld2.0, _13.fld1.0.3), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_13.fld4.fld4.1 = 2956559427_u32 as f32;
_17 = _9.fld1.fld0;
_11 = Adt56 { fld0: _12,fld1: _9.fld1.fld0.0 };
_3 = _12;
RET = -_13.fld4.fld4.1;
_13.fld2 = _1;
_13.fld2 = _1 ^ _1;
_11 = Adt56 { fld0: _3,fld1: _13.fld1.0.4 };
_13.fld1.0 = (19718_i16, _7, 12263_i16, '\u{94183}', _9.fld2.0);
_8 = 210_u8;
RET = _13.fld4.fld4.1 + _13.fld4.fld4.1;
_13.fld4.fld1 = [_13.fld1.0.2,_13.fld1.0.0,_13.fld1.0.0,_13.fld1.0.2,_13.fld1.0.0];
_13.fld1.0.3 = '\u{7bb1c}';
_11.fld0 = _12;
_13.fld5 = (-2099500640_i32) << _13.fld1.0.1;
_11 = Adt56 { fld0: _12,fld1: _9.fld1.fld0.0 };
_22 = _13.fld1.0.3;
_13.fld1.4 = _13.fld1.0.2 & _13.fld1.0.0;
_13.fld4.fld0 = [_8,_8,_8,_8,_8,_8,_8,_8];
_21 = _13.fld5;
_13.fld1.2.1 = [_8,_8,_8,_8,_8,_8,_8];
_13.fld2 = _7 as u64;
_9.fld2.0 = [_12,_12];
_13.fld4.fld0 = [_8,_8,_8,_8,_8,_8,_8,_8];
Goto(bb7)
}
bb11 = {
_12 = -_3;
_13.fld1.0 = (11144_i16, _7, (-30753_i16), '\u{49e1d}', _9.fld2.0);
_13.fld1.2.0 = [_1,_1,_1,_1,_1];
_13.fld1.1 = core::ptr::addr_of_mut!(_13.fld1.5);
_6 = !true;
_1 = !11847731317626042884_u64;
Goto(bb6)
}
bb12 = {
_13.fld1.0.1 = _7;
match _8 {
98 => bb5,
_ => bb3
}
}
bb13 = {
RET = (-4397201208852496054_i64) as f32;
_8 = !66_u8;
_9.fld0 = core::ptr::addr_of_mut!(_6);
RET = _5 as f32;
_7 = 9358_u16 >> _2;
RET = _2 as f32;
_4 = _6 as i8;
_9.fld0 = core::ptr::addr_of_mut!(_6);
RET = 3975938860_u32 as f32;
_10 = _5 + _5;
_8 = 98_u8;
_1 = 6220975531180698654_u64;
_11.fld1 = [_3,_3];
_9.fld1.fld1 = core::ptr::addr_of_mut!(_5);
_9.fld2.0 = _11.fld1;
_11 = Adt56 { fld0: _3,fld1: _9.fld2.0 };
_9.fld1.fld0 = (_11.fld1,);
_1 = _7 as u64;
_3 = -_11.fld0;
_9.fld0 = core::ptr::addr_of_mut!(_6);
_5 = !_10;
_13.fld5 = 1588327104_i32 ^ (-173530681_i32);
_13.fld4.fld3 = -_4;
_13.fld1.5 = core::ptr::addr_of!(_8);
RET = _13.fld5 as f32;
match _8 {
0 => bb2,
98 => bb4,
_ => bb3
}
}
bb14 = {
Return()
}
bb15 = {
_13.fld1.2.0 = [_13.fld2,_13.fld2,_13.fld2,_1,_13.fld2];
_13.fld4.fld4.1 = 3220847563591050665_i64 as f32;
_22 = _13.fld1.0.3;
_28.fld2.0 = [_13.fld2,_13.fld2,_13.fld2,_13.fld2,_13.fld2];
Goto(bb16)
}
bb16 = {
Call(_29 = dump_var(0_usize, 7_usize, Move(_7), 10_usize, Move(_10), 17_usize, Move(_17), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(0_usize, 1_usize, Move(_1), 4_usize, Move(_4), 30_usize, _30, 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: [i16; 5],mut _2: i16,mut _3: isize,mut _4: ([isize; 2],),mut _5: Adt49,mut _6: *const u8,mut _7: *mut i128,mut _8: ([isize; 2],),mut _9: [isize; 2],mut _10: char) -> i8 {
mir! {
type RET = i8;
let _11: isize;
let _12: isize;
let _13: [i32; 5];
let _14: bool;
let _15: Adt57;
let _16: [u64; 6];
let _17: bool;
let _18: Adt61;
let _19: *mut bool;
let _20: Adt57;
let _21: *mut *mut [i32; 6];
let _22: Adt48;
let _23: f64;
let _24: [i16; 5];
let _25: isize;
let _26: isize;
let _27: isize;
let _28: Adt61;
let _29: [i16; 5];
let _30: f64;
let _31: Adt52;
let _32: isize;
let _33: i8;
let _34: *mut i128;
let _35: Adt49;
let _36: Adt56;
let _37: Adt61;
let _38: *const u8;
let _39: *const *const [usize; 3];
let _40: bool;
let _41: ();
let _42: ();
{
(*_6) = 198_u8 & 92_u8;
_6 = core::ptr::addr_of!((*_6));
_7 = core::ptr::addr_of_mut!((*_7));
_7 = core::ptr::addr_of_mut!((*_7));
_5.fld0.0 = _8.0;
_5.fld0 = _8;
_8.0 = [_3,_3];
(*_7) = (-52241938221516671747733335188847113624_i128);
_4.0 = _5.fld0.0;
_4.0 = [_3,_3];
_4 = _5.fld0;
(*_6) = 2640791600218833968_i64 as u8;
RET = 1_i8 & (-10_i8);
_11 = _3 - _3;
(*_7) = (-129630427862500415697565054468232495279_i128) + 62399010925138755417798311464434443303_i128;
Goto(bb1)
}
bb1 = {
(*_7) = -(-162294769865701863553662916159616589473_i128);
_8.0 = [_11,_11];
Call(_9 = fn2(_3, _10, _5.fld0, (*_6), _4, _4.0, _5, _5.fld1, _10, _5.fld0, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = _5.fld1;
_4 = (_5.fld0.0,);
_4 = (_8.0,);
_4 = _5.fld0;
_7 = core::ptr::addr_of_mut!((*_7));
_3 = _11;
(*_6) = 181_u8 >> _3;
Call(_12 = fn13(_5.fld0, _5, _5, _4.0, _6, _5, _8, _10, _8.0, _5, _5.fld0, _8.0, _7, _10, _1, (*_7)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_7) = (-108676155679974719735052264045310149264_i128);
_13 = [(-154182040_i32),100966902_i32,(-1419093556_i32),1719511409_i32,1663051110_i32];
RET = 85_i8 * (-51_i8);
_4 = (_8.0,);
RET = (-72_i8);
_4.0 = [_3,_11];
(*_7) = 28738477351415553323458455614704621521_i128;
(*_6) = !167_u8;
RET = 60_i8 | (-64_i8);
_1 = [_2,_2,_2,_2,_2];
_14 = !true;
_3 = -_11;
_1 = [_2,_2,_2,_2,_2];
_5.fld0 = _8;
_9 = [_12,_12];
(*_6) = 203_u8;
_14 = !false;
_1 = [_2,_2,_2,_2,_2];
_7 = core::ptr::addr_of_mut!((*_7));
(*_7) = (-150845536991833838891733033301226532896_i128);
_5 = Adt49 { fld0: _4,fld1: _7 };
_14 = false;
_1 = [_2,_2,_2,_2,_2];
_11 = _12 * _3;
_13 = [(-12559761_i32),1054605543_i32,2081532563_i32,(-292423167_i32),(-418863569_i32)];
_5.fld1 = core::ptr::addr_of_mut!((*_7));
_5.fld0.0 = [_11,_3];
Goto(bb4)
}
bb4 = {
_6 = core::ptr::addr_of!((*_6));
_17 = _14;
_8.0 = [_3,_3];
_12 = _3 | _11;
_15.fld0 = !1561293904_u32;
_5.fld1 = core::ptr::addr_of_mut!((*_7));
_13 = [2044971387_i32,(-686470454_i32),(-1813006751_i32),576237415_i32,(-262886958_i32)];
_2 = (-15117_i16);
_17 = !_14;
_2 = !(-5427_i16);
_16 = [5323834233267916562_u64,12630833948564332080_u64,9598888791088042436_u64,824771810917221186_u64,10602735859292147698_u64,12544192963811645906_u64];
_18.fld0.1 = (*_6) as u16;
_18.fld4 = [2020366134082100796_usize,4_usize,1_usize];
_18.fld1 = _18.fld0.1 + _18.fld0.1;
_4.0 = [_12,_11];
_18.fld0.2 = _2 ^ _2;
_9 = [_12,_11];
_18.fld0 = (_2, _18.fld1, _2, _10, _4.0);
Call(_18.fld2.0 = fn15(_14, _1, _5.fld1, _5, _18.fld0.1, _12, _5, _18.fld0.4, _5.fld0, _8.0, _5.fld1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_18.fld2.1 = [(*_6),(*_6),(*_6),(*_6),(*_6),(*_6),(*_6)];
_5.fld0.0 = _9;
_10 = _18.fld0.3;
_5 = Adt49 { fld0: _4,fld1: _7 };
match (*_6) {
203 => bb7,
_ => bb6
}
}
bb6 = {
_7 = _5.fld1;
_4 = (_5.fld0.0,);
_4 = (_8.0,);
_4 = _5.fld0;
_7 = core::ptr::addr_of_mut!((*_7));
_3 = _11;
(*_6) = 181_u8 >> _3;
Call(_12 = fn13(_5.fld0, _5, _5, _4.0, _6, _5, _8, _10, _8.0, _5, _5.fld0, _8.0, _7, _10, _1, (*_7)), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
(*_6) = 239_u8 - 140_u8;
_22.fld5.4 = core::ptr::addr_of!((*_6));
_22.fld5.2 = _18.fld0.3;
Goto(bb8)
}
bb8 = {
_18.fld0.1 = _18.fld1;
_7 = _5.fld1;
_15.fld0 = 3025389885_u32 & 77556130_u32;
_22.fld6 = core::ptr::addr_of!(_22.fld7);
_22.fld0 = [(*_6),(*_6),(*_6)];
_22.fld5.0 = [_11,_12,_11,_12,_12];
RET = -(-48_i8);
_13 = [917670819_i32,(-2030379401_i32),905626320_i32,1490465294_i32,(-1798225479_i32)];
_18.fld4 = [4_usize,7_usize,3_usize];
_22.fld5.1 = core::ptr::addr_of!(_22.fld7);
_18.fld0.4 = _8.0;
_4.0 = [_12,_12];
_20.fld0 = _15.fld0;
Goto(bb9)
}
bb9 = {
_8.0 = [_11,_12];
_12 = _11 + _3;
_22.fld2 = core::ptr::addr_of!(_3);
(*_6) = !46_u8;
_9 = _8.0;
_22.fld5.5 = _18.fld0.2 as u128;
_22.fld5.3 = core::ptr::addr_of!(_12);
_12 = -_3;
_5.fld0.0 = _4.0;
_22.fld5.2 = _10;
_22.fld4 = (-31_i8) as i16;
_20 = Move(_15);
_22.fld0 = [(*_6),(*_6),(*_6)];
_18.fld4 = [7_usize,7627413382991359889_usize,4_usize];
_22.fld5.0 = [_11,_3,_11,_12,_11];
Call(_2 = core::intrinsics::bswap(_22.fld4), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
RET = (-81_i8) + (-62_i8);
_12 = (*_7) as isize;
RET = -(-96_i8);
_22.fld5.4 = core::ptr::addr_of!((*_6));
_4 = _5.fld0;
_22.fld3 = [(*_6),(*_6),(*_6),(*_6),(*_6),(*_6),(*_6)];
_5.fld0.0 = [_12,_3];
_22.fld4 = -_2;
_8 = (_5.fld0.0,);
Call(_18.fld4 = fn16(_18.fld0, _9, _22.fld5.3, _1, _22.fld2, _22.fld6, _18.fld0.4, Move(_20), _12, (*_6), _5), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
(*_6) = 0_usize as u8;
_24 = [_2,_18.fld0.2,_2,_2,_18.fld0.2];
_28.fld0 = _18.fld0;
_28.fld0 = _18.fld0;
_29 = [_18.fld0.0,_2,_28.fld0.0,_18.fld0.2,_22.fld4];
RET = -78_i8;
_26 = _11;
_5.fld1 = core::ptr::addr_of_mut!((*_7));
_28.fld3 = _18.fld2.1;
_30 = 110_i8 as f64;
_28.fld0.0 = _18.fld0.0;
_28 = Adt61 { fld0: _18.fld0,fld1: _18.fld0.1,fld2: _18.fld2,fld3: _18.fld2.1,fld4: _22.fld7 };
_18 = Move(_28);
_18.fld0.1 = _18.fld1;
_7 = _5.fld1;
_22.fld4 = -_18.fld0.2;
(*_6) = 164_u8 * 149_u8;
Goto(bb12)
}
bb12 = {
(*_7) = 74315489145189660133583750559379173816_i128;
_12 = _26;
(*_7) = -(-122884857072440034803190205970803509436_i128);
_30 = _18.fld0.1 as f64;
_18.fld0.4 = _4.0;
_22.fld5.3 = core::ptr::addr_of!(_3);
_8.0 = _9;
_33 = !126_i8;
_30 = _2 as f64;
_35.fld0.0 = [_11,_12];
_3 = -_11;
_26 = !_12;
_31 = Adt52 { fld0: _22.fld5.3 };
_25 = _18.fld0.1 as isize;
_18.fld0.4 = [_11,_3];
_22.fld0 = [(*_6),(*_6),(*_6)];
_8 = _5.fld0;
_18.fld3 = [(*_6),(*_6),(*_6),(*_6),(*_6),(*_6),(*_6)];
_33 = !(-90_i8);
_5.fld0 = (_9,);
_22.fld1 = [_2,_18.fld0.0,_22.fld4,_22.fld4,_18.fld0.0];
_22.fld7 = _18.fld4;
_31 = Adt52 { fld0: _22.fld5.3 };
_22.fld0 = [(*_6),(*_6),(*_6)];
Goto(bb13)
}
bb13 = {
_32 = _25;
RET = !_33;
_27 = -_26;
_2 = _18.fld0.2 ^ _18.fld0.0;
_9 = [_12,_32];
_22.fld5.2 = _10;
_34 = core::ptr::addr_of_mut!((*_7));
_22.fld3 = _18.fld3;
_4.0 = [_27,_11];
_19 = core::ptr::addr_of_mut!(_14);
_4.0 = [_12,_12];
(*_19) = _17;
_7 = core::ptr::addr_of_mut!((*_34));
Goto(bb14)
}
bb14 = {
(*_34) = _18.fld0.1 as i128;
_18.fld3 = _18.fld2.1;
_37.fld2.0 = [6064853901509044303_u64,1058620045292488229_u64,806192835312412909_u64,17259844964808816006_u64,10373988411234519893_u64];
_22.fld3 = [(*_6),(*_6),(*_6),(*_6),(*_6),(*_6),(*_6)];
_9 = [_32,_32];
_37.fld3 = [(*_6),(*_6),(*_6),(*_6),(*_6),(*_6),(*_6)];
_38 = core::ptr::addr_of!((*_6));
_40 = _14;
_37.fld2.0 = [9598650176927442242_u64,10450607321019331663_u64,10222418732048251397_u64,72900765765529992_u64,15330846839135578335_u64];
_8.0 = [_25,_26];
_11 = 16537851164750032223_usize as isize;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(1_usize, 16_usize, Move(_16), 33_usize, Move(_33), 17_usize, Move(_17), 40_usize, Move(_40)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(1_usize, 14_usize, Move(_14), 12_usize, Move(_12), 26_usize, Move(_26), 29_usize, Move(_29)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(1_usize, 10_usize, Move(_10), 4_usize, Move(_4), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: isize,mut _2: char,mut _3: ([isize; 2],),mut _4: u8,mut _5: ([isize; 2],),mut _6: [isize; 2],mut _7: Adt49,mut _8: *mut i128,mut _9: char,mut _10: ([isize; 2],),mut _11: ([isize; 2],)) -> [isize; 2] {
mir! {
type RET = [isize; 2];
let _12: [isize; 2];
let _13: Adt57;
let _14: *const isize;
let _15: [usize; 3];
let _16: [isize; 2];
let _17: *const [usize; 3];
let _18: [i16; 5];
let _19: Adt61;
let _20: f64;
let _21: isize;
let _22: ([isize; 5], *const [usize; 3], char, *const isize, *const u8, u128);
let _23: [isize; 5];
let _24: *mut *const u8;
let _25: u128;
let _26: *mut *mut [i32; 6];
let _27: u8;
let _28: i16;
let _29: (usize, i128);
let _30: *const u64;
let _31: char;
let _32: *const [usize; 3];
let _33: [u8; 3];
let _34: Adt56;
let _35: Adt57;
let _36: char;
let _37: Adt48;
let _38: f64;
let _39: u8;
let _40: Adt59;
let _41: f32;
let _42: ();
let _43: ();
{
RET = _7.fld0.0;
_11.0 = [_1,_1];
_11 = _3;
_1 = (-51_isize) & 7_isize;
(*_8) = (-49593481948964068652597943957076230712_i128) * (-56583826250221882395402692656180251220_i128);
(*_8) = 39372068936622461782995153203613286084_i128 << _1;
_8 = _7.fld1;
_9 = _2;
_7 = Adt49 { fld0: _3,fld1: _8 };
_7.fld0.0 = [_1,_1];
Call(_4 = core::intrinsics::bswap(239_u8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7.fld1 = core::ptr::addr_of_mut!((*_8));
_4 = 86_u8;
_14 = core::ptr::addr_of!(_1);
(*_14) = (-26906_i16) as isize;
RET = [(*_14),(*_14)];
_8 = core::ptr::addr_of_mut!((*_8));
_4 = (-55_i8) as u8;
_7 = Adt49 { fld0: _11,fld1: _8 };
_13.fld0 = !4126837936_u32;
_2 = _9;
(*_8) = 58288582838874731618921723083192758634_i128 >> _4;
_16 = [(*_14),_1];
_12 = [(*_14),(*_14)];
_3.0 = _7.fld0.0;
_10.0 = [(*_14),(*_14)];
Goto(bb2)
}
bb2 = {
_13.fld0 = 2210993263_u32;
_18 = [14476_i16,11391_i16,26506_i16,7246_i16,7765_i16];
RET = [(*_14),(*_14)];
_8 = core::ptr::addr_of_mut!((*_8));
(*_14) = (-9223372036854775808_isize);
_2 = _9;
_15 = [6_usize,9348651878811653053_usize,6_usize];
RET = [_1,_1];
_17 = core::ptr::addr_of!(_19.fld4);
_14 = core::ptr::addr_of!((*_14));
_19.fld0.0 = 6829_i16;
_19.fld0.4 = [(*_14),(*_14)];
_19.fld0.2 = !_19.fld0.0;
_21 = _1 * (*_14);
_19.fld0.3 = _2;
_5.0 = [_21,_1];
_5.0 = [_21,(*_14)];
_20 = 18092_u16 as f64;
_19.fld0.4 = [_21,_1];
_4 = (*_14) as u8;
Call(_19.fld0.2 = core::intrinsics::bswap(_19.fld0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_19.fld3 = [_4,_4,_4,_4,_4,_4,_4];
_13 = Adt57 { fld0: 2452702591_u32 };
_7 = Adt49 { fld0: _3,fld1: _8 };
_5 = (_11.0,);
_2 = _9;
_19.fld2.0 = [6650250096436450208_u64,10741524098989994327_u64,15004958959524592690_u64,8942744222077338967_u64,7390740609734892743_u64];
_7.fld0.0 = [_21,(*_14)];
_19.fld0.1 = 18150_u16;
_14 = core::ptr::addr_of!((*_14));
_4 = 75_u8;
_21 = _2 as isize;
_20 = 830925671_i32 as f64;
_22.3 = core::ptr::addr_of!(_21);
_2 = _19.fld0.3;
match (*_14) {
0 => bb1,
1 => bb2,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb4 = {
_7.fld1 = core::ptr::addr_of_mut!((*_8));
_4 = 86_u8;
_14 = core::ptr::addr_of!(_1);
(*_14) = (-26906_i16) as isize;
RET = [(*_14),(*_14)];
_8 = core::ptr::addr_of_mut!((*_8));
_4 = (-55_i8) as u8;
_7 = Adt49 { fld0: _11,fld1: _8 };
_13.fld0 = !4126837936_u32;
_2 = _9;
(*_8) = 58288582838874731618921723083192758634_i128 >> _4;
_16 = [(*_14),_1];
_12 = [(*_14),(*_14)];
_3.0 = _7.fld0.0;
_10.0 = [(*_14),(*_14)];
Goto(bb2)
}
bb5 = {
_19.fld2.1 = [_4,_4,_4,_4,_4,_4,_4];
_19.fld4 = [9397049147152418970_usize,6_usize,16863675464665673537_usize];
(*_8) = 100222418647344497139718236202410678882_i128;
RET = _7.fld0.0;
_3.0 = _6;
_7.fld1 = core::ptr::addr_of_mut!((*_8));
_19.fld2.0 = [5461592079306377424_u64,2291318764768441223_u64,4053690242556799248_u64,18319733342513486486_u64,8545014724434556272_u64];
_14 = core::ptr::addr_of!((*_14));
(*_14) = _21;
_19.fld2.1 = _19.fld3;
_11.0 = [(*_14),(*_14)];
_9 = _19.fld0.3;
_19.fld2.0 = [1074940859749793240_u64,11526261417772027454_u64,5413201680738121095_u64,1170424834768379925_u64,13127517171910213070_u64];
_25 = 300482613582602061408507268772419606498_u128 >> (*_8);
_22.1 = _17;
_12 = [_1,(*_14)];
_22.4 = core::ptr::addr_of!(_27);
_27 = _4 ^ _4;
_23 = [_1,_21,_1,(*_14),_1];
_28 = -_19.fld0.2;
_22.2 = _19.fld0.3;
match _19.fld0.0 {
0 => bb6,
1 => bb7,
6829 => bb9,
_ => bb8
}
}
bb6 = {
_7.fld1 = core::ptr::addr_of_mut!((*_8));
_4 = 86_u8;
_14 = core::ptr::addr_of!(_1);
(*_14) = (-26906_i16) as isize;
RET = [(*_14),(*_14)];
_8 = core::ptr::addr_of_mut!((*_8));
_4 = (-55_i8) as u8;
_7 = Adt49 { fld0: _11,fld1: _8 };
_13.fld0 = !4126837936_u32;
_2 = _9;
(*_8) = 58288582838874731618921723083192758634_i128 >> _4;
_16 = [(*_14),_1];
_12 = [(*_14),(*_14)];
_3.0 = _7.fld0.0;
_10.0 = [(*_14),(*_14)];
Goto(bb2)
}
bb7 = {
_19.fld3 = [_4,_4,_4,_4,_4,_4,_4];
_13 = Adt57 { fld0: 2452702591_u32 };
_7 = Adt49 { fld0: _3,fld1: _8 };
_5 = (_11.0,);
_2 = _9;
_19.fld2.0 = [6650250096436450208_u64,10741524098989994327_u64,15004958959524592690_u64,8942744222077338967_u64,7390740609734892743_u64];
_7.fld0.0 = [_21,(*_14)];
_19.fld0.1 = 18150_u16;
_14 = core::ptr::addr_of!((*_14));
_4 = 75_u8;
_21 = _2 as isize;
_20 = 830925671_i32 as f64;
_22.3 = core::ptr::addr_of!(_21);
_2 = _19.fld0.3;
match (*_14) {
0 => bb1,
1 => bb2,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb8 = {
_7.fld1 = core::ptr::addr_of_mut!((*_8));
_4 = 86_u8;
_14 = core::ptr::addr_of!(_1);
(*_14) = (-26906_i16) as isize;
RET = [(*_14),(*_14)];
_8 = core::ptr::addr_of_mut!((*_8));
_4 = (-55_i8) as u8;
_7 = Adt49 { fld0: _11,fld1: _8 };
_13.fld0 = !4126837936_u32;
_2 = _9;
(*_8) = 58288582838874731618921723083192758634_i128 >> _4;
_16 = [(*_14),_1];
_12 = [(*_14),(*_14)];
_3.0 = _7.fld0.0;
_10.0 = [(*_14),(*_14)];
Goto(bb2)
}
bb9 = {
_7.fld0 = (_5.0,);
_22.1 = core::ptr::addr_of!(_15);
_10 = (_11.0,);
_7 = Adt49 { fld0: _5,fld1: _8 };
_23 = [_1,_1,_21,(*_14),_1];
_11 = _7.fld0;
Call((*_14) = fn3((*_8), _19.fld0.4, _16, _8, (*_8), _5, _19.fld0, _15, _23, _14, _19.fld0.0, _19.fld0.4), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_11.0 = [_1,(*_14)];
_3.0 = _10.0;
_24 = core::ptr::addr_of_mut!(_22.4);
_29.1 = (*_8) & (*_8);
_29.0 = false as usize;
_32 = core::ptr::addr_of!(_15);
(*_32) = _19.fld4;
_19.fld0.1 = 17560_u16;
_3 = _5;
RET = [(*_14),_21];
match _19.fld0.1 {
17560 => bb12,
_ => bb11
}
}
bb11 = {
_13.fld0 = 2210993263_u32;
_18 = [14476_i16,11391_i16,26506_i16,7246_i16,7765_i16];
RET = [(*_14),(*_14)];
_8 = core::ptr::addr_of_mut!((*_8));
(*_14) = (-9223372036854775808_isize);
_2 = _9;
_15 = [6_usize,9348651878811653053_usize,6_usize];
RET = [_1,_1];
_17 = core::ptr::addr_of!(_19.fld4);
_14 = core::ptr::addr_of!((*_14));
_19.fld0.0 = 6829_i16;
_19.fld0.4 = [(*_14),(*_14)];
_19.fld0.2 = !_19.fld0.0;
_21 = _1 * (*_14);
_19.fld0.3 = _2;
_5.0 = [_21,_1];
_5.0 = [_21,(*_14)];
_20 = 18092_u16 as f64;
_19.fld0.4 = [_21,_1];
_4 = (*_14) as u8;
Call(_19.fld0.2 = core::intrinsics::bswap(_19.fld0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
_9 = _22.2;
_21 = _19.fld0.1 as isize;
_34.fld0 = _21;
_19.fld1 = (-1226340387_i32) as u16;
_22.0 = [(*_14),_34.fld0,_21,(*_14),_21];
_34 = Adt56 { fld0: _21,fld1: _5.0 };
_10.0 = [_34.fld0,(*_14)];
_22.5 = !_25;
RET = [_21,(*_14)];
_37.fld5.4 = _22.4;
match _4 {
75 => bb13,
_ => bb6
}
}
bb13 = {
(*_17) = (*_32);
_19.fld3 = _19.fld2.1;
_31 = _22.2;
_7.fld1 = core::ptr::addr_of_mut!((*_8));
_22.3 = core::ptr::addr_of!((*_14));
_19.fld0.1 = !_19.fld1;
Goto(bb14)
}
bb14 = {
_2 = _9;
_38 = _20;
_37.fld6 = core::ptr::addr_of!((*_32));
_22.3 = _14;
(*_8) = _29.1;
_37.fld5 = _22;
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(2_usize, 31_usize, Move(_31), 25_usize, Move(_25), 28_usize, Move(_28), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(2_usize, 5_usize, Move(_5), 2_usize, Move(_2), 27_usize, Move(_27), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(2_usize, 29_usize, Move(_29), 3_usize, Move(_3), 43_usize, _43, 43_usize, _43), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: i128,mut _2: [isize; 2],mut _3: [isize; 2],mut _4: *mut i128,mut _5: i128,mut _6: ([isize; 2],),mut _7: (i16, u16, i16, char, [isize; 2]),mut _8: [usize; 3],mut _9: [isize; 5],mut _10: *const isize,mut _11: i16,mut _12: [isize; 2]) -> isize {
mir! {
type RET = isize;
let _13: u64;
let _14: f64;
let _15: f32;
let _16: Adt55;
let _17: [usize; 3];
let _18: *const u64;
let _19: [usize; 3];
let _20: f32;
let _21: [u8; 7];
let _22: i64;
let _23: f64;
let _24: isize;
let _25: i8;
let _26: Adt53;
let _27: ([isize; 2],);
let _28: i64;
let _29: [u8; 3];
let _30: Adt63;
let _31: [isize; 5];
let _32: char;
let _33: [u64; 5];
let _34: Adt55;
let _35: ();
let _36: ();
{
_6.0 = _7.4;
_7.2 = 321166920327803018748389468846226576152_u128 as i16;
_7.4 = [9223372036854775807_isize,(-22_isize)];
(*_4) = _7.3 as i128;
_2 = [9223372036854775807_isize,(-65_isize)];
(*_4) = _1 + _1;
(*_4) = _5 * _5;
_7.1 = _7.0 as u16;
Call(RET = fn4(_7.0, _9, _10, _4, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = -_5;
_7 = (_11, 28456_u16, _11, '\u{32be7}', _3);
(*_4) = 565249856_u32 as i128;
(*_4) = _5;
_12 = [(-9223372036854775808_isize),(-119_isize)];
_13 = 13177051214451764493_u64 & 644030641201220261_u64;
_12 = [36_isize,(-10_isize)];
_8 = [3_usize,4_usize,11565407194452269072_usize];
_1 = -_5;
_8 = [7_usize,5_usize,15523565157071880611_usize];
_13 = 82_i8 as u64;
(*_4) = _1 ^ _5;
_6.0 = _3;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_7.3 = '\u{e12c5}';
_7.4 = _12;
_3 = [(-9223372036854775808_isize),(-91_isize)];
RET = !(-9223372036854775808_isize);
_2 = _12;
_1 = 13573638731724837796_usize as i128;
_11 = _7.0;
Goto(bb2)
}
bb2 = {
_6 = (_2,);
_12 = _7.4;
_8 = [6725443991696070996_usize,0_usize,1701065803993494819_usize];
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_5 = (*_4) << _7.1;
_7.1 = 45630_u16;
_14 = (-8571675090060656770_i64) as f64;
_16.fld1.0 = 9223372036854775807_isize as i16;
_16.fld1.3 = _7.3;
_7.2 = 199_u8 as i16;
_11 = _16.fld1.0;
_6 = (_12,);
RET = 9223372036854775807_isize;
_16.fld1.1 = _7.3 as u16;
_11 = _7.0;
_7 = (_16.fld1.0, _16.fld1.1, _11, _16.fld1.3, _3);
(*_4) = _13 as i128;
_16.fld1 = _7;
_6.0 = _3;
match _7.2 {
0 => bb3,
1 => bb4,
6829 => bb6,
_ => bb5
}
}
bb3 = {
_1 = -_5;
_7 = (_11, 28456_u16, _11, '\u{32be7}', _3);
(*_4) = 565249856_u32 as i128;
(*_4) = _5;
_12 = [(-9223372036854775808_isize),(-119_isize)];
_13 = 13177051214451764493_u64 & 644030641201220261_u64;
_12 = [36_isize,(-10_isize)];
_8 = [3_usize,4_usize,11565407194452269072_usize];
_1 = -_5;
_8 = [7_usize,5_usize,15523565157071880611_usize];
_13 = 82_i8 as u64;
(*_4) = _1 ^ _5;
_6.0 = _3;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_7.3 = '\u{e12c5}';
_7.4 = _12;
_3 = [(-9223372036854775808_isize),(-91_isize)];
RET = !(-9223372036854775808_isize);
_2 = _12;
_1 = 13573638731724837796_usize as i128;
_11 = _7.0;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_11 = 149_u8 as i16;
_7.3 = _16.fld1.3;
_4 = core::ptr::addr_of_mut!((*_4));
_16.fld1 = _7;
_13 = !8373501428063896371_u64;
_18 = core::ptr::addr_of!(_13);
_16 = Adt55 { fld0: 131_u8,fld1: _7 };
_7.3 = _16.fld1.3;
Goto(bb7)
}
bb7 = {
_16 = Adt55 { fld0: 130_u8,fld1: _7 };
_7.3 = _16.fld1.3;
_16.fld1.1 = _7.1;
_6.0 = _12;
_7.3 = _16.fld1.3;
_7.3 = _16.fld1.3;
_16.fld0 = !217_u8;
_16.fld0 = 42_u8;
_7.1 = 1_usize as u16;
_7 = (_16.fld1.0, _16.fld1.1, _16.fld1.0, _16.fld1.3, _2);
_16.fld1.1 = _7.1 >> (*_18);
_4 = core::ptr::addr_of_mut!((*_4));
_16.fld1.1 = _7.1 - _7.1;
_13 = 10197191846041586888_u64;
_17 = _8;
_16.fld1.4 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_16.fld1.0 = !_11;
_20 = _11 as f32;
_22 = 2152203988505242039_i64;
RET = !109_isize;
_20 = _14 as f32;
_9 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),46_isize,9223372036854775807_isize];
(*_18) = !7504205089149467417_u64;
_5 = _20 as i128;
_15 = 1085686145_u32 as f32;
_16.fld1.4 = _7.4;
RET = (-9223372036854775808_isize);
_19 = _17;
Goto(bb8)
}
bb8 = {
_7.2 = !_7.0;
_7.2 = -_11;
_4 = core::ptr::addr_of_mut!(_5);
_7.1 = _16.fld0 as u16;
_4 = core::ptr::addr_of_mut!((*_4));
_23 = _14 / f64::NAN;
(*_18) = !6670820161189544640_u64;
_7.3 = _16.fld1.3;
_20 = _15 - _15;
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_7.4 = [(-94_isize),9223372036854775807_isize];
Goto(bb9)
}
bb9 = {
_16.fld1.2 = _7.2 * _16.fld1.0;
_11 = _16.fld1.0 << _7.1;
_2 = _3;
_7.1 = !_16.fld1.1;
_5 = _1 | _1;
_19 = _17;
_16.fld1.0 = _5 as i16;
(*_4) = _1;
RET = (-71_isize) * 9223372036854775807_isize;
_16.fld1.1 = _7.1;
_7.4 = [63_isize,101_isize];
_7.0 = _16.fld1.2;
RET = (-9223372036854775808_isize) << _7.1;
RET = -(-5_isize);
_20 = 3818857476_u32 as f32;
_4 = core::ptr::addr_of_mut!((*_4));
(*_4) = !_1;
match _22 {
0 => bb5,
1 => bb3,
2152203988505242039 => bb11,
_ => bb10
}
}
bb10 = {
_6 = (_2,);
_12 = _7.4;
_8 = [6725443991696070996_usize,0_usize,1701065803993494819_usize];
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_5 = (*_4) << _7.1;
_7.1 = 45630_u16;
_14 = (-8571675090060656770_i64) as f64;
_16.fld1.0 = 9223372036854775807_isize as i16;
_16.fld1.3 = _7.3;
_7.2 = 199_u8 as i16;
_11 = _16.fld1.0;
_6 = (_12,);
RET = 9223372036854775807_isize;
_16.fld1.1 = _7.3 as u16;
_11 = _7.0;
_7 = (_16.fld1.0, _16.fld1.1, _11, _16.fld1.3, _3);
(*_4) = _13 as i128;
_16.fld1 = _7;
_6.0 = _3;
match _7.2 {
0 => bb3,
1 => bb4,
6829 => bb6,
_ => bb5
}
}
bb11 = {
_27 = (_12,);
_9 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_23 = _14 + _14;
_7.4 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_20 = -_15;
(*_4) = _1;
_1 = (*_4) >> _16.fld0;
_26.fld1.fld0.0 = [9223372036854775807_isize,(-65_isize)];
_26.fld1.fld1 = _4;
_19 = [6_usize,3414811783924784233_usize,2_usize];
_16.fld1.2 = _1 as i16;
_2 = [39_isize,9223372036854775807_isize];
_24 = _1 as isize;
_7.2 = 185074720607987706313631506243671497813_u128 as i16;
_15 = _20;
_9 = [_24,_24,_24,_24,_24];
_13 = _14 as u64;
_14 = _23 * _23;
_23 = _14 + _14;
(*_4) = _16.fld1.0 as i128;
match _16.fld0 {
0 => bb6,
1 => bb2,
2 => bb8,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
42 => bb17,
_ => bb16
}
}
bb12 = {
_1 = -_5;
_7 = (_11, 28456_u16, _11, '\u{32be7}', _3);
(*_4) = 565249856_u32 as i128;
(*_4) = _5;
_12 = [(-9223372036854775808_isize),(-119_isize)];
_13 = 13177051214451764493_u64 & 644030641201220261_u64;
_12 = [36_isize,(-10_isize)];
_8 = [3_usize,4_usize,11565407194452269072_usize];
_1 = -_5;
_8 = [7_usize,5_usize,15523565157071880611_usize];
_13 = 82_i8 as u64;
(*_4) = _1 ^ _5;
_6.0 = _3;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_7.3 = '\u{e12c5}';
_7.4 = _12;
_3 = [(-9223372036854775808_isize),(-91_isize)];
RET = !(-9223372036854775808_isize);
_2 = _12;
_1 = 13573638731724837796_usize as i128;
_11 = _7.0;
Goto(bb2)
}
bb13 = {
_16.fld1.2 = _7.2 * _16.fld1.0;
_11 = _16.fld1.0 << _7.1;
_2 = _3;
_7.1 = !_16.fld1.1;
_5 = _1 | _1;
_19 = _17;
_16.fld1.0 = _5 as i16;
(*_4) = _1;
RET = (-71_isize) * 9223372036854775807_isize;
_16.fld1.1 = _7.1;
_7.4 = [63_isize,101_isize];
_7.0 = _16.fld1.2;
RET = (-9223372036854775808_isize) << _7.1;
RET = -(-5_isize);
_20 = 3818857476_u32 as f32;
_4 = core::ptr::addr_of_mut!((*_4));
(*_4) = !_1;
match _22 {
0 => bb5,
1 => bb3,
2152203988505242039 => bb11,
_ => bb10
}
}
bb14 = {
_7.2 = !_7.0;
_7.2 = -_11;
_4 = core::ptr::addr_of_mut!(_5);
_7.1 = _16.fld0 as u16;
_4 = core::ptr::addr_of_mut!((*_4));
_23 = _14 / f64::NAN;
(*_18) = !6670820161189544640_u64;
_7.3 = _16.fld1.3;
_20 = _15 - _15;
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_7.4 = [(-94_isize),9223372036854775807_isize];
Goto(bb9)
}
bb15 = {
_16 = Adt55 { fld0: 130_u8,fld1: _7 };
_7.3 = _16.fld1.3;
_16.fld1.1 = _7.1;
_6.0 = _12;
_7.3 = _16.fld1.3;
_7.3 = _16.fld1.3;
_16.fld0 = !217_u8;
_16.fld0 = 42_u8;
_7.1 = 1_usize as u16;
_7 = (_16.fld1.0, _16.fld1.1, _16.fld1.0, _16.fld1.3, _2);
_16.fld1.1 = _7.1 >> (*_18);
_4 = core::ptr::addr_of_mut!((*_4));
_16.fld1.1 = _7.1 - _7.1;
_13 = 10197191846041586888_u64;
_17 = _8;
_16.fld1.4 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_16.fld1.0 = !_11;
_20 = _11 as f32;
_22 = 2152203988505242039_i64;
RET = !109_isize;
_20 = _14 as f32;
_9 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),46_isize,9223372036854775807_isize];
(*_18) = !7504205089149467417_u64;
_5 = _20 as i128;
_15 = 1085686145_u32 as f32;
_16.fld1.4 = _7.4;
RET = (-9223372036854775808_isize);
_19 = _17;
Goto(bb8)
}
bb16 = {
_11 = 149_u8 as i16;
_7.3 = _16.fld1.3;
_4 = core::ptr::addr_of_mut!((*_4));
_16.fld1 = _7;
_13 = !8373501428063896371_u64;
_18 = core::ptr::addr_of!(_13);
_16 = Adt55 { fld0: 131_u8,fld1: _7 };
_7.3 = _16.fld1.3;
Goto(bb7)
}
bb17 = {
_26.fld2 = _6;
_26.fld1.fld1 = core::ptr::addr_of_mut!((*_4));
RET = _24;
_10 = core::ptr::addr_of!(_24);
_21 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_29 = [_16.fld0,_16.fld0,_16.fld0];
_10 = core::ptr::addr_of!((*_10));
_13 = !2000285790977786343_u64;
_7.3 = _16.fld1.3;
RET = _16.fld0 as isize;
_21 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_7 = (_11, _16.fld1.1, _16.fld1.0, _16.fld1.3, _27.0);
_7.1 = 431652535_u32 as u16;
Goto(bb18)
}
bb18 = {
Call(_35 = dump_var(3_usize, 11_usize, Move(_11), 22_usize, Move(_22), 17_usize, Move(_17), 5_usize, Move(_5)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_35 = dump_var(3_usize, 21_usize, Move(_21), 8_usize, Move(_8), 24_usize, Move(_24), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_35 = dump_var(3_usize, 6_usize, Move(_6), 36_usize, _36, 36_usize, _36, 36_usize, _36), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i16,mut _2: [isize; 5],mut _3: *const isize,mut _4: *mut i128,mut _5: [isize; 5]) -> isize {
mir! {
type RET = isize;
let _6: isize;
let _7: bool;
let _8: i128;
let _9: isize;
let _10: [u8; 7];
let _11: bool;
let _12: Adt59;
let _13: f64;
let _14: Adt55;
let _15: i32;
let _16: Adt62;
let _17: u32;
let _18: i64;
let _19: *mut *const u8;
let _20: f32;
let _21: [usize; 3];
let _22: i8;
let _23: i8;
let _24: ();
let _25: ();
{
RET = (-9223372036854775808_isize);
_1 = 22083_i16 | 28621_i16;
(*_4) = !39972009255550921385375003884942977278_i128;
_4 = core::ptr::addr_of_mut!((*_4));
(*_4) = -145983657006891404081511593909219616367_i128;
_6 = (-9223372036854775808_isize);
_3 = core::ptr::addr_of!(_6);
RET = (*_3) << _1;
(*_4) = 96846167517772924897169093632832510503_i128;
_1 = !3738_i16;
_7 = true;
RET = (*_3);
_4 = core::ptr::addr_of_mut!((*_4));
(*_3) = !(-9223372036854775808_isize);
RET = (*_3) & _6;
_9 = !(*_3);
(*_4) = (-7491651238177385642_i64) as i128;
_5 = _2;
(*_4) = -93516201170473526192600920032527552018_i128;
_1 = 15450_i16 * 27030_i16;
_1 = (-3747_i16);
(*_4) = (-69648881776365516587965766771773708751_i128) << (*_3);
(*_4) = 54841_u16 as i128;
_8 = (*_4);
_4 = core::ptr::addr_of_mut!((*_4));
_2 = [_9,(*_3),(*_3),(*_3),(*_3)];
(*_3) = _9;
_1 = !(-8866_i16);
Goto(bb1)
}
bb1 = {
_9 = -(*_3);
Goto(bb2)
}
bb2 = {
(*_4) = _8 & _8;
RET = (*_3);
_7 = !false;
RET = _6;
RET = !(*_3);
_6 = _9 & _9;
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb3)
}
bb3 = {
_10 = [193_u8,59_u8,4_u8,62_u8,198_u8,81_u8,23_u8];
RET = -(*_3);
RET = 57_i8 as isize;
_7 = !false;
RET = 217951268231610631752830119695921227244_u128 as isize;
_12.fld4.fld0 = 259833883317031449244133571830843926088_u128 as u64;
_2 = [_9,(*_3),_9,_9,(*_3)];
_2 = _5;
_12.fld4.fld1.0 = core::ptr::addr_of_mut!(_12.fld2);
_12.fld4.fld0 = (*_4) as u64;
(*_4) = _8;
_11 = !_7;
_1 = 15374_i16 + 27828_i16;
_12.fld4.fld1.1 = 4924_u16 as f32;
_12.fld5 = _3;
(*_3) = _9;
_12.fld3 = 252285853828821957739858270184145724445_u128;
_12.fld0 = !_11;
_12.fld6 = [(-822147259_i32),(-1451735188_i32),643178861_i32,(-2051089726_i32),(-934245418_i32)];
(*_4) = (-2123565066_i32) as i128;
_12.fld6 = [515229534_i32,2089401226_i32,(-1286334469_i32),794256949_i32,(-1039697762_i32)];
_12.fld6 = [(-2079248003_i32),(-534251195_i32),(-124079969_i32),(-242906820_i32),634155175_i32];
_12.fld4.fld1.1 = 760853033839631518_usize as f32;
_12.fld4.fld0 = 7237894956717107266_u64 * 11570127596942177731_u64;
_12.fld4.fld1.0 = core::ptr::addr_of_mut!(_12.fld2);
_1 = 5383_u16 as i16;
Goto(bb4)
}
bb4 = {
_3 = core::ptr::addr_of!((*_3));
_12.fld5 = _3;
_12.fld4.fld0 = 55886_u16 as u64;
_9 = (*_3);
_13 = 129_u8 as f64;
(*_4) = _8 ^ _8;
_13 = (-1845007072_i32) as f64;
_3 = core::ptr::addr_of!((*_3));
match _12.fld3 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
252285853828821957739858270184145724445 => bb9,
_ => bb8
}
}
bb5 = {
_10 = [193_u8,59_u8,4_u8,62_u8,198_u8,81_u8,23_u8];
RET = -(*_3);
RET = 57_i8 as isize;
_7 = !false;
RET = 217951268231610631752830119695921227244_u128 as isize;
_12.fld4.fld0 = 259833883317031449244133571830843926088_u128 as u64;
_2 = [_9,(*_3),_9,_9,(*_3)];
_2 = _5;
_12.fld4.fld1.0 = core::ptr::addr_of_mut!(_12.fld2);
_12.fld4.fld0 = (*_4) as u64;
(*_4) = _8;
_11 = !_7;
_1 = 15374_i16 + 27828_i16;
_12.fld4.fld1.1 = 4924_u16 as f32;
_12.fld5 = _3;
(*_3) = _9;
_12.fld3 = 252285853828821957739858270184145724445_u128;
_12.fld0 = !_11;
_12.fld6 = [(-822147259_i32),(-1451735188_i32),643178861_i32,(-2051089726_i32),(-934245418_i32)];
(*_4) = (-2123565066_i32) as i128;
_12.fld6 = [515229534_i32,2089401226_i32,(-1286334469_i32),794256949_i32,(-1039697762_i32)];
_12.fld6 = [(-2079248003_i32),(-534251195_i32),(-124079969_i32),(-242906820_i32),634155175_i32];
_12.fld4.fld1.1 = 760853033839631518_usize as f32;
_12.fld4.fld0 = 7237894956717107266_u64 * 11570127596942177731_u64;
_12.fld4.fld1.0 = core::ptr::addr_of_mut!(_12.fld2);
_1 = 5383_u16 as i16;
Goto(bb4)
}
bb6 = {
(*_4) = _8 & _8;
RET = (*_3);
_7 = !false;
RET = _6;
RET = !(*_3);
_6 = _9 & _9;
_4 = core::ptr::addr_of_mut!((*_4));
Goto(bb3)
}
bb7 = {
_9 = -(*_3);
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_1 = 12_i8 as i16;
_12.fld0 = _7;
_14.fld1.1 = 64349_u16;
(*_4) = _8;
_9 = 7570276129166258437_i64 as isize;
RET = (-1300667060_i32) as isize;
_3 = _12.fld5;
_12.fld4.fld1.0 = core::ptr::addr_of_mut!(_12.fld2);
_5 = [(*_3),(*_3),_6,(*_3),_6];
_16.fld0.fld3 = !(-106_i8);
_15 = 664663291_i32 & (-1301903895_i32);
_12.fld2 = core::ptr::addr_of!(_16.fld3.fld0);
_12.fld5 = _3;
_16.fld0.fld4.0 = core::ptr::addr_of_mut!(_12.fld2);
_16.fld0.fld1 = [_1,_1,_1,_1,_1];
_16.fld3.fld1.3 = '\u{336a}';
_16.fld3.fld0 = 155_u8 % 77_u8;
_14.fld1.2 = 1926230835100545826_i64 as i16;
RET = _9 & _9;
_10 = [_16.fld3.fld0,_16.fld3.fld0,_16.fld3.fld0,_16.fld3.fld0,_16.fld3.fld0,_16.fld3.fld0,_16.fld3.fld0];
_16.fld0.fld4.0 = _12.fld4.fld1.0;
_16.fld5 = _16.fld0.fld4.0;
_2 = _5;
_16.fld1 = [_12.fld4.fld0,_12.fld4.fld0,_12.fld4.fld0,_12.fld4.fld0,_12.fld4.fld0];
Goto(bb10)
}
bb10 = {
_14.fld1.4 = [(*_3),(*_3)];
(*_4) = _12.fld4.fld1.1 as i128;
_16.fld0.fld4 = (_12.fld4.fld1.0, _12.fld4.fld1.1);
_16.fld0.fld4.0 = core::ptr::addr_of_mut!(_12.fld2);
_16.fld0.fld4.0 = _16.fld5;
_14.fld1.2 = _1 & _1;
_12.fld4.fld1 = _16.fld0.fld4;
_12.fld4 = Adt54 { fld0: 2332433170122741925_u64,fld1: _16.fld0.fld4 };
_16.fld3.fld0 = _11 as u8;
_8 = (*_4);
_16.fld0.fld4.1 = _12.fld4.fld1.1 * _12.fld4.fld1.1;
RET = !_9;
_14.fld0 = _16.fld3.fld0 << (*_4);
match _12.fld3 {
252285853828821957739858270184145724445 => bb11,
_ => bb2
}
}
bb11 = {
_16.fld0.fld4.1 = _12.fld4.fld1.1 / f32::INFINITY;
Call(_12.fld6 = fn5(_12.fld4.fld0, (*_3)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_18 = (*_4) as i64;
(*_4) = _8;
_16.fld3.fld1 = (_14.fld1.2, _14.fld1.1, _1, '\u{14d9c}', _14.fld1.4);
Goto(bb13)
}
bb13 = {
_16.fld2 = _16.fld0.fld3 as usize;
RET = !(*_3);
_17 = _16.fld3.fld1.3 as u32;
_16.fld3.fld1.2 = _1 ^ _16.fld3.fld1.0;
_16.fld4 = [_16.fld3.fld0,_14.fld0,_16.fld3.fld0,_14.fld0,_16.fld3.fld0,_14.fld0,_16.fld3.fld0,_16.fld3.fld0];
_16.fld3.fld1.1 = _12.fld4.fld0 as u16;
Call(_16.fld3.fld0 = fn12(_12.fld3, _12.fld5, _2, _12.fld4.fld1.0, _8, _12.fld4.fld0, _12.fld4.fld0, _9, _6, _16.fld3.fld1, _16.fld0.fld4, _14.fld1.2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_19 = core::ptr::addr_of_mut!(_12.fld2);
_16.fld3.fld1.1 = _12.fld4.fld0 as u16;
_22 = _14.fld1.1 as i8;
_14.fld1 = _16.fld3.fld1;
_19 = core::ptr::addr_of_mut!((*_19));
_16.fld0.fld4 = (_19, _12.fld4.fld1.1);
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(4_usize, 15_usize, Move(_15), 9_usize, Move(_9), 2_usize, Move(_2), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(4_usize, 8_usize, Move(_8), 5_usize, Move(_5), 25_usize, _25, 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: u64,mut _2: isize) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _3: Adt56;
let _4: *const *const [usize; 3];
let _5: usize;
let _6: u128;
let _7: (usize, i128);
let _8: Adt61;
let _9: [u8; 8];
let _10: Adt58;
let _11: Adt59;
let _12: u128;
let _13: isize;
let _14: u8;
let _15: ([u64; 5], [u8; 7]);
let _16: u8;
let _17: char;
let _18: [i32; 6];
let _19: char;
let _20: [u8; 3];
let _21: f32;
let _22: Adt49;
let _23: f32;
let _24: *const u64;
let _25: Adt55;
let _26: (usize, i128);
let _27: i128;
let _28: isize;
let _29: Adt47;
let _30: (usize, i128);
let _31: i64;
let _32: Adt56;
let _33: f32;
let _34: ();
let _35: ();
{
_2 = -100_isize;
_1 = (-136163028735463734916962060159804253624_i128) as u64;
RET = [955822231_i32,1203534038_i32,1826623186_i32,1320648731_i32,(-1484469075_i32)];
RET = [1224930926_i32,2053938966_i32,(-53884092_i32),(-683938978_i32),41623308_i32];
_1 = 12393708433196147577_u64 >> _2;
_2 = (-1376774016_i32) as isize;
_1 = 6267101770735224672_u64;
RET = [(-991351519_i32),(-403549802_i32),127541402_i32,660148694_i32,(-426943087_i32)];
RET = [1698988310_i32,(-381113790_i32),1104340826_i32,1724675297_i32,1339664664_i32];
RET = [(-145883795_i32),552606063_i32,973662633_i32,(-1182188050_i32),40841450_i32];
_2 = (-9223372036854775808_isize) * (-59_isize);
_3.fld1 = [_2,_2];
_2 = 50408_u16 as isize;
RET = [1462471083_i32,1017105627_i32,1877514363_i32,(-347161028_i32),1658659064_i32];
_3.fld0 = -_2;
_3.fld1 = [_2,_2];
_2 = !_3.fld0;
_2 = _3.fld0;
_2 = _3.fld0 >> _1;
_1 = (-168985375837627364388864716272347741627_i128) as u64;
Call(_2 = core::intrinsics::transmute(_3.fld0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3.fld1 = [_2,_2];
_3.fld0 = _2;
_5 = 3993793571_u32 as usize;
RET = [(-366001882_i32),2141134241_i32,976178230_i32,(-530528147_i32),(-1675662862_i32)];
RET = [(-2012156227_i32),2035919981_i32,504181399_i32,(-960636124_i32),1050804223_i32];
_1 = 1591101632_u32 as u64;
_3.fld1 = [_3.fld0,_2];
_5 = 5_usize & 4_usize;
_5 = 13856934559924968234_usize + 5_usize;
RET = [763751998_i32,(-422100648_i32),2019267096_i32,162690111_i32,(-1027942465_i32)];
_5 = !5_usize;
RET = [(-1101392884_i32),(-740665506_i32),76783219_i32,30053608_i32,(-193199945_i32)];
_5 = 8903552810719462567_usize + 14196174087915242250_usize;
_5 = !5739547974997413387_usize;
_3.fld1 = [_2,_2];
RET = [(-919418290_i32),(-1195106677_i32),2046471665_i32,67398145_i32,(-2045388097_i32)];
_3.fld0 = '\u{10d6f}' as isize;
RET = [1576635595_i32,2114312916_i32,1082292510_i32,(-1157487077_i32),(-2099130059_i32)];
_1 = 84_u8 as u64;
_1 = 5766168764110642092_u64 - 15316176205390467927_u64;
RET = [(-440496833_i32),697870981_i32,1753859172_i32,1305827725_i32,1998182222_i32];
RET = [(-1187281506_i32),(-1551739827_i32),2008302153_i32,(-1084947386_i32),(-1400218370_i32)];
RET = [(-657726380_i32),(-1815093541_i32),420472630_i32,(-519711576_i32),(-1243914461_i32)];
_5 = !3_usize;
_1 = 12292648257677935706_u64;
_5 = 102_u8 as usize;
Goto(bb2)
}
bb2 = {
RET = [(-1789495071_i32),80396160_i32,157460365_i32,1338823965_i32,(-841555308_i32)];
_2 = _3.fld0 << _5;
_6 = 1944642480590582060_i64 as u128;
_7.0 = '\u{2565c}' as usize;
RET = [(-1589775586_i32),(-1683553638_i32),(-1047779051_i32),235176919_i32,1125338667_i32];
_8.fld0.1 = !54190_u16;
_7.1 = _8.fld0.1 as i128;
_7 = (_5, (-13857405276186736690580846552422372436_i128));
_8.fld0 = ((-24238_i16), 2089_u16, 2121_i16, '\u{2e28}', _3.fld1);
_8.fld0.4 = [_2,_2];
_8.fld3 = [161_u8,128_u8,190_u8,1_u8,40_u8,228_u8,38_u8];
_8.fld2.0 = [_1,_1,_1,_1,_1];
_11.fld4.fld1.0 = core::ptr::addr_of_mut!(_11.fld2);
_8.fld0 = (25926_i16, 64550_u16, 1102_i16, '\u{53c93}', _3.fld1);
_11.fld5 = core::ptr::addr_of!(_10.fld0.fld0);
_3 = Adt56 { fld0: _2,fld1: _8.fld0.4 };
_3.fld1 = _8.fld0.4;
_5 = _7.0;
_10.fld4.fld1.0 = core::ptr::addr_of_mut!(_11.fld2);
Call(_1 = fn6(_8.fld0.3, _11.fld4.fld1.0, _3.fld1, _8.fld0.4, _3, _11.fld5, _8.fld2.0, _8.fld0.3, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = _7.1 as usize;
_10.fld4.fld1.0 = _11.fld4.fld1.0;
_10.fld5 = [_1,_1,_1,_1,_1];
_10.fld1 = [107_u8,131_u8,52_u8,229_u8,203_u8,171_u8,65_u8];
_10.fld3 = [_3.fld0,_2];
_11.fld4.fld0 = !_1;
_1 = false as u64;
_17 = _8.fld0.3;
Call(_8.fld4 = fn10(_8.fld0.2, _10.fld4.fld1.0, _10.fld3, _17, _11.fld2, _8.fld0.4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_1 = !_11.fld4.fld0;
Call(_11.fld1 = fn11(_8.fld0.1, _8.fld0.4, _10.fld1, _10.fld4.fld1.0, _8.fld0.3, _8.fld0, _8.fld4, _10.fld3, _8.fld0.4, _11.fld5, _7.1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_11.fld4.fld1.1 = _6 as f32;
_17 = _8.fld0.3;
_11.fld4.fld1.1 = _11.fld4.fld0 as f32;
_10.fld3 = _3.fld1;
_15.0 = [_1,_1,_11.fld4.fld0,_11.fld4.fld0,_11.fld4.fld0];
_15.0 = _10.fld5;
_15.0 = [_1,_1,_1,_11.fld4.fld0,_11.fld4.fld0];
_13 = true as isize;
_10.fld2 = 311639569_u32 << _1;
RET = [84958906_i32,109261262_i32,(-1416734577_i32),(-2126825361_i32),921759400_i32];
_12 = _6;
_8.fld2.1 = [196_u8,153_u8,0_u8,132_u8,180_u8,94_u8,28_u8];
_10.fld0.fld1 = [_13,_3.fld0];
_10.fld2 = !1380565878_u32;
_10.fld2 = 2194519075_u32;
_10.fld0.fld1 = _10.fld3;
_17 = _8.fld0.3;
_8.fld2.1 = [138_u8,135_u8,12_u8,144_u8,176_u8,69_u8,26_u8];
_7.1 = _7.0 as i128;
_15 = (_10.fld5, _8.fld2.1);
_11.fld3 = 1004494902_i32 as u128;
_7.0 = !_5;
_10.fld4 = Move(_11.fld4);
_10.fld0.fld1 = [_3.fld0,_13];
RET = [1642294011_i32,(-9684795_i32),1364893753_i32,157534843_i32,(-710697889_i32)];
Goto(bb6)
}
bb6 = {
_15 = (_10.fld5, _8.fld3);
_3 = Adt56 { fld0: _2,fld1: _10.fld0.fld1 };
_9 = [131_u8,144_u8,34_u8,72_u8,25_u8,134_u8,89_u8,73_u8];
_10.fld1 = [13_u8,148_u8,98_u8,8_u8,46_u8,214_u8,100_u8];
_8.fld0.4 = _3.fld1;
_8.fld0 = ((-22747_i16), 364_u16, (-9730_i16), _17, _3.fld1);
_11.fld1 = core::ptr::addr_of!(_8.fld4);
_8.fld0 = ((-29094_i16), 6722_u16, (-29466_i16), _17, _10.fld0.fld1);
_10.fld0 = Adt56 { fld0: _3.fld0,fld1: _3.fld1 };
_20 = [52_u8,12_u8,228_u8];
_20 = [33_u8,143_u8,21_u8];
_21 = _10.fld4.fld1.1;
_22.fld0.0 = [_3.fld0,_13];
_15 = (_10.fld5, _8.fld2.1);
_8.fld0.4 = [_10.fld0.fld0,_13];
_5 = _7.0 ^ _7.0;
_10.fld2 = 45205519_u32 * 1431479188_u32;
_8.fld3 = [103_u8,205_u8,60_u8,164_u8,188_u8,177_u8,212_u8];
_20 = [197_u8,106_u8,44_u8];
_15.1 = _10.fld1;
_7.1 = 71274666918159783764014331402981598949_i128;
_14 = false as u8;
Goto(bb7)
}
bb7 = {
_8.fld0.1 = _6 as u16;
_21 = _10.fld4.fld1.1;
_8.fld4 = [_5,_5,_7.0];
_18 = [(-1467213184_i32),(-1538324323_i32),68900156_i32,428488908_i32,1298066155_i32,(-1263468233_i32)];
_11.fld0 = true | true;
_8.fld0 = (17021_i16, 58795_u16, (-6399_i16), _17, _22.fld0.0);
_13 = -_2;
_8.fld0.1 = 43047_u16 >> _3.fld0;
_10.fld2 = 544256083_u32 + 508915065_u32;
_4 = core::ptr::addr_of!(_11.fld1);
_9 = [_14,_14,_14,_14,_14,_14,_14,_14];
_8.fld2.0 = _15.0;
RET = [1338322123_i32,(-721518823_i32),2042880030_i32,(-1809289675_i32),(-1527796100_i32)];
_10.fld2 = 2368528032_u32 / 2341596553_u32;
_24 = core::ptr::addr_of!(_1);
_7 = (_5, (-75603333999031864468367956651626769756_i128));
_23 = -_21;
Goto(bb8)
}
bb8 = {
_19 = _17;
_8.fld1 = _8.fld0.1;
_21 = _23 - _10.fld4.fld1.1;
RET = [1186867594_i32,2015981875_i32,(-2102502502_i32),(-1475936840_i32),1424119691_i32];
_25.fld1.3 = _17;
_26.0 = _14 as usize;
(*_24) = !_10.fld4.fld0;
_11.fld5 = core::ptr::addr_of!(_2);
_7.1 = 35990769774979836472318175069100828954_i128;
_26.1 = !_7.1;
Goto(bb9)
}
bb9 = {
_25.fld1.2 = _8.fld0.0;
_11.fld6 = [1799896897_i32,(-305236542_i32),(-2121549448_i32),471725604_i32,(-1087838853_i32)];
_8.fld1 = _8.fld0.1;
_16 = _14 >> _10.fld4.fld0;
match _25.fld1.2 {
0 => bb7,
1 => bb10,
2 => bb11,
17021 => bb13,
_ => bb12
}
}
bb10 = {
_3.fld1 = [_2,_2];
_3.fld0 = _2;
_5 = 3993793571_u32 as usize;
RET = [(-366001882_i32),2141134241_i32,976178230_i32,(-530528147_i32),(-1675662862_i32)];
RET = [(-2012156227_i32),2035919981_i32,504181399_i32,(-960636124_i32),1050804223_i32];
_1 = 1591101632_u32 as u64;
_3.fld1 = [_3.fld0,_2];
_5 = 5_usize & 4_usize;
_5 = 13856934559924968234_usize + 5_usize;
RET = [763751998_i32,(-422100648_i32),2019267096_i32,162690111_i32,(-1027942465_i32)];
_5 = !5_usize;
RET = [(-1101392884_i32),(-740665506_i32),76783219_i32,30053608_i32,(-193199945_i32)];
_5 = 8903552810719462567_usize + 14196174087915242250_usize;
_5 = !5739547974997413387_usize;
_3.fld1 = [_2,_2];
RET = [(-919418290_i32),(-1195106677_i32),2046471665_i32,67398145_i32,(-2045388097_i32)];
_3.fld0 = '\u{10d6f}' as isize;
RET = [1576635595_i32,2114312916_i32,1082292510_i32,(-1157487077_i32),(-2099130059_i32)];
_1 = 84_u8 as u64;
_1 = 5766168764110642092_u64 - 15316176205390467927_u64;
RET = [(-440496833_i32),697870981_i32,1753859172_i32,1305827725_i32,1998182222_i32];
RET = [(-1187281506_i32),(-1551739827_i32),2008302153_i32,(-1084947386_i32),(-1400218370_i32)];
RET = [(-657726380_i32),(-1815093541_i32),420472630_i32,(-519711576_i32),(-1243914461_i32)];
_5 = !3_usize;
_1 = 12292648257677935706_u64;
_5 = 102_u8 as usize;
Goto(bb2)
}
bb11 = {
_11.fld4.fld1.1 = _6 as f32;
_17 = _8.fld0.3;
_11.fld4.fld1.1 = _11.fld4.fld0 as f32;
_10.fld3 = _3.fld1;
_15.0 = [_1,_1,_11.fld4.fld0,_11.fld4.fld0,_11.fld4.fld0];
_15.0 = _10.fld5;
_15.0 = [_1,_1,_1,_11.fld4.fld0,_11.fld4.fld0];
_13 = true as isize;
_10.fld2 = 311639569_u32 << _1;
RET = [84958906_i32,109261262_i32,(-1416734577_i32),(-2126825361_i32),921759400_i32];
_12 = _6;
_8.fld2.1 = [196_u8,153_u8,0_u8,132_u8,180_u8,94_u8,28_u8];
_10.fld0.fld1 = [_13,_3.fld0];
_10.fld2 = !1380565878_u32;
_10.fld2 = 2194519075_u32;
_10.fld0.fld1 = _10.fld3;
_17 = _8.fld0.3;
_8.fld2.1 = [138_u8,135_u8,12_u8,144_u8,176_u8,69_u8,26_u8];
_7.1 = _7.0 as i128;
_15 = (_10.fld5, _8.fld2.1);
_11.fld3 = 1004494902_i32 as u128;
_7.0 = !_5;
_10.fld4 = Move(_11.fld4);
_10.fld0.fld1 = [_3.fld0,_13];
RET = [1642294011_i32,(-9684795_i32),1364893753_i32,157534843_i32,(-710697889_i32)];
Goto(bb6)
}
bb12 = {
RET = [(-1789495071_i32),80396160_i32,157460365_i32,1338823965_i32,(-841555308_i32)];
_2 = _3.fld0 << _5;
_6 = 1944642480590582060_i64 as u128;
_7.0 = '\u{2565c}' as usize;
RET = [(-1589775586_i32),(-1683553638_i32),(-1047779051_i32),235176919_i32,1125338667_i32];
_8.fld0.1 = !54190_u16;
_7.1 = _8.fld0.1 as i128;
_7 = (_5, (-13857405276186736690580846552422372436_i128));
_8.fld0 = ((-24238_i16), 2089_u16, 2121_i16, '\u{2e28}', _3.fld1);
_8.fld0.4 = [_2,_2];
_8.fld3 = [161_u8,128_u8,190_u8,1_u8,40_u8,228_u8,38_u8];
_8.fld2.0 = [_1,_1,_1,_1,_1];
_11.fld4.fld1.0 = core::ptr::addr_of_mut!(_11.fld2);
_8.fld0 = (25926_i16, 64550_u16, 1102_i16, '\u{53c93}', _3.fld1);
_11.fld5 = core::ptr::addr_of!(_10.fld0.fld0);
_3 = Adt56 { fld0: _2,fld1: _8.fld0.4 };
_3.fld1 = _8.fld0.4;
_5 = _7.0;
_10.fld4.fld1.0 = core::ptr::addr_of_mut!(_11.fld2);
Call(_1 = fn6(_8.fld0.3, _11.fld4.fld1.0, _3.fld1, _8.fld0.4, _3, _11.fld5, _8.fld2.0, _8.fld0.3, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_26 = _7;
_22.fld1 = core::ptr::addr_of_mut!(_7.1);
_25 = Adt55 { fld0: _14,fld1: _8.fld0 };
Call(_28 = core::intrinsics::transmute(_10.fld0.fld0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_22.fld0 = (_10.fld0.fld1,);
_11.fld3 = _12 - _6;
_11.fld0 = !false;
_8.fld1 = _8.fld0.1 + _25.fld1.1;
_14 = !_25.fld0;
_8.fld1 = _25.fld1.1;
RET = [(-1897238239_i32),514626110_i32,(-109639025_i32),(-635887360_i32),1839171909_i32];
_7 = _26;
_20 = [_16,_16,_25.fld0];
_25.fld1.2 = !_8.fld0.2;
_8.fld3 = _10.fld1;
_2 = _28;
_3 = _10.fld0;
_8.fld0.0 = _25.fld1.0 - _25.fld1.2;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(5_usize, 5_usize, Move(_5), 15_usize, Move(_15), 28_usize, Move(_28), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(5_usize, 19_usize, Move(_19), 12_usize, Move(_12), 6_usize, Move(_6), 26_usize, Move(_26)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: char,mut _2: *mut *const u8,mut _3: [isize; 2],mut _4: [isize; 2],mut _5: Adt56,mut _6: *const isize,mut _7: [u64; 5],mut _8: char,mut _9: u128) -> u64 {
mir! {
type RET = u64;
let _10: [u8; 3];
let _11: f32;
let _12: Adt47;
let _13: Adt56;
let _14: [isize; 2];
let _15: (*mut *const u8, f32);
let _16: [u8; 8];
let _17: f64;
let _18: Adt50;
let _19: char;
let _20: u128;
let _21: [i16; 5];
let _22: char;
let _23: u128;
let _24: ([isize; 5], *const [usize; 3], char, *const isize, *const u8, u128);
let _25: Adt57;
let _26: usize;
let _27: Adt55;
let _28: [u8; 3];
let _29: ([u64; 5], [u8; 7]);
let _30: i16;
let _31: ();
let _32: ();
{
_5.fld0 = 9223372036854775807_isize;
RET = 4041826038460432568_u64;
_5.fld0 = 9223372036854775807_isize;
_9 = 276127416629053515294342984119798677901_u128 - 120608163652778787113372489833642324094_u128;
_5 = Adt56 { fld0: 9223372036854775807_isize,fld1: _3 };
(*_6) = false as isize;
_9 = 1356686190916583408_i64 as u128;
RET = !4905463132833629313_u64;
_4 = [_5.fld0,(*_6)];
_4 = [_5.fld0,_5.fld0];
_10 = [96_u8,20_u8,103_u8];
RET = 15926601900934340336_u64;
_5.fld0 = -(*_6);
_4 = _5.fld1;
_6 = core::ptr::addr_of!((*_6));
_7 = [13218360745496060669_u64,2061920505233379793_u64,4173254437968455685_u64,13799788018731016564_u64,16610187925201172763_u64];
RET = 1951513539307157716_u64;
Call(_13.fld0 = core::intrinsics::bswap((*_6)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _4;
_5.fld0 = 11370599657172238126_u64 as isize;
_12.fld1.1 = (-111729567707232904974302759746337008898_i128) + (-121098240411602880173383220371354678548_i128);
_9 = 289791523564397010195183895926355143198_u128;
_12.fld1 = (7_usize, (-49300164884061814490890318714464423180_i128));
_3 = [(*_6),_5.fld0];
_10 = [41_u8,111_u8,5_u8];
_6 = core::ptr::addr_of!((*_6));
_1 = _8;
_13.fld1 = [(*_6),(*_6)];
_11 = _12.fld1.1 as f32;
_11 = _5.fld0 as f32;
_13.fld1 = _3;
(*_6) = _5.fld0;
(*_6) = -_5.fld0;
_1 = _8;
_5 = _13;
RET = !6617536088254015350_u64;
_14 = [(*_6),(*_6)];
_9 = 154849075881970769977432713126364393232_u128;
_12.fld1 = (4_usize, (-25636798442020075668740548654814287198_i128));
_5 = _13;
RET = _12.fld1.0 as u64;
RET = !16340674301831876507_u64;
_9 = !43603797989247196926885897490731481048_u128;
_5.fld0 = (*_6);
_4 = _3;
_4 = [_5.fld0,_5.fld0];
Goto(bb2)
}
bb2 = {
RET = !12534945421652902366_u64;
_16 = [22_u8,217_u8,233_u8,220_u8,66_u8,250_u8,83_u8,66_u8];
RET = 31168_u16 as u64;
_6 = core::ptr::addr_of!((*_6));
(*_6) = !_5.fld0;
(*_6) = _5.fld0;
_1 = _8;
_13 = Adt56 { fld0: _5.fld0,fld1: _14 };
Goto(bb3)
}
bb3 = {
_15.0 = core::ptr::addr_of_mut!((*_2));
_13 = Adt56 { fld0: (*_6),fld1: _14 };
RET = !9643467482489471871_u64;
_15.1 = 1450632919_i32 as f32;
_15.1 = _11 * _11;
_13.fld1 = [(*_6),_5.fld0];
_10 = [242_u8,189_u8,148_u8];
_13.fld0 = (*_6) + (*_6);
_12.fld1.1 = (-66919917831585650791196446893546169378_i128);
_15.0 = core::ptr::addr_of_mut!((*_2));
_14 = [_5.fld0,(*_6)];
_12.fld1.1 = (-81597919240784772778719293949636708984_i128) + 135408762092015913020041376614628657619_i128;
_13 = _5;
_18.fld4 = _15;
_18.fld1 = [5521_i16,19617_i16,(-21872_i16),19209_i16,31285_i16];
_18.fld0 = [113_u8,34_u8,95_u8,144_u8,134_u8,234_u8,159_u8,151_u8];
(*_6) = _5.fld0;
_18.fld4.1 = (-2336903075896438068_i64) as f32;
_14 = [(*_6),_5.fld0];
_13 = Adt56 { fld0: (*_6),fld1: _3 };
_16 = _18.fld0;
Call(_2 = fn7(_5, _5, _18.fld4.0, _3, _8, _12.fld1.1, _1, _4, _12.fld1.0, _14, _16, _12.fld1, _13.fld1, _15), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_13 = Adt56 { fld0: (*_6),fld1: _14 };
_11 = _18.fld4.1;
_15 = _18.fld4;
Goto(bb5)
}
bb5 = {
_18.fld3 = 10_i8;
_11 = 8508567720754574328_i64 as f32;
_11 = _18.fld4.1;
_17 = (-1484191493_i32) as f64;
_1 = _8;
_5 = Adt56 { fld0: _13.fld0,fld1: _14 };
_19 = _1;
_16 = [163_u8,182_u8,1_u8,218_u8,27_u8,104_u8,75_u8,73_u8];
_22 = _1;
_15.0 = core::ptr::addr_of_mut!((*_2));
(*_6) = _13.fld0 + _5.fld0;
_18.fld3 = _17 as i8;
_12.fld1 = (6_usize, (-106435565865547475115837395192483056652_i128));
_13 = _5;
match _12.fld1.0 {
0 => bb4,
1 => bb2,
2 => bb6,
6 => bb8,
_ => bb7
}
}
bb6 = {
RET = !12534945421652902366_u64;
_16 = [22_u8,217_u8,233_u8,220_u8,66_u8,250_u8,83_u8,66_u8];
RET = 31168_u16 as u64;
_6 = core::ptr::addr_of!((*_6));
(*_6) = !_5.fld0;
(*_6) = _5.fld0;
_1 = _8;
_13 = Adt56 { fld0: _5.fld0,fld1: _14 };
Goto(bb3)
}
bb7 = {
_15.0 = core::ptr::addr_of_mut!((*_2));
_13 = Adt56 { fld0: (*_6),fld1: _14 };
RET = !9643467482489471871_u64;
_15.1 = 1450632919_i32 as f32;
_15.1 = _11 * _11;
_13.fld1 = [(*_6),_5.fld0];
_10 = [242_u8,189_u8,148_u8];
_13.fld0 = (*_6) + (*_6);
_12.fld1.1 = (-66919917831585650791196446893546169378_i128);
_15.0 = core::ptr::addr_of_mut!((*_2));
_14 = [_5.fld0,(*_6)];
_12.fld1.1 = (-81597919240784772778719293949636708984_i128) + 135408762092015913020041376614628657619_i128;
_13 = _5;
_18.fld4 = _15;
_18.fld1 = [5521_i16,19617_i16,(-21872_i16),19209_i16,31285_i16];
_18.fld0 = [113_u8,34_u8,95_u8,144_u8,134_u8,234_u8,159_u8,151_u8];
(*_6) = _5.fld0;
_18.fld4.1 = (-2336903075896438068_i64) as f32;
_14 = [(*_6),_5.fld0];
_13 = Adt56 { fld0: (*_6),fld1: _3 };
_16 = _18.fld0;
Call(_2 = fn7(_5, _5, _18.fld4.0, _3, _8, _12.fld1.1, _1, _4, _12.fld1.0, _14, _16, _12.fld1, _13.fld1, _15), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_18.fld4.1 = 26728_i16 as f32;
_10 = [199_u8,130_u8,48_u8];
_12.fld1.1 = 32361100331110521828172790725523753632_i128;
_9 = !276509166972221300390550623901214802508_u128;
_2 = core::ptr::addr_of_mut!((*_2));
RET = !432498271024135852_u64;
_18.fld3 = (-42_i8);
_19 = _22;
_10 = [139_u8,184_u8,66_u8];
Goto(bb9)
}
bb9 = {
_5.fld0 = (*_6) | (*_6);
_12.fld1 = (2994664210196755202_usize, 2242556060253044016009739932235904193_i128);
_2 = core::ptr::addr_of_mut!((*_2));
_7 = [3218867400993710111_u64,8584044396868168837_u64,13937898784008797089_u64,10713165469554777920_u64,8726913962916675135_u64];
_19 = _1;
_16 = _18.fld0;
_12.fld1 = (3_usize, (-118451938257947913164589548075471373715_i128));
_12.fld1.0 = !4_usize;
RET = 16656378979211222805_u64;
_13 = Adt56 { fld0: (*_6),fld1: _14 };
Goto(bb10)
}
bb10 = {
_24.5 = _9 / 302522187864389241175038888168833699818_u128;
_14 = _5.fld1;
_24.0 = [_5.fld0,_13.fld0,_13.fld0,_5.fld0,(*_6)];
_1 = _8;
_8 = _1;
(*_6) = -_13.fld0;
_18.fld3 = 4_i8;
_5.fld1 = _3;
_27.fld0 = 145_u8 % 139_u8;
_24.3 = _6;
_27.fld1.3 = _1;
_5 = Adt56 { fld0: (*_6),fld1: _4 };
_5.fld0 = _13.fld0;
_27.fld1.2 = (-15201_i16) - 1798_i16;
_18.fld0 = _16;
_18.fld4.1 = 1122800621742851576_i64 as f32;
_11 = _15.1 * _18.fld4.1;
match _12.fld1.1 {
0 => bb8,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
221830428662990550298785059356296837741 => bb18,
_ => bb17
}
}
bb11 = {
_5.fld0 = (*_6) | (*_6);
_12.fld1 = (2994664210196755202_usize, 2242556060253044016009739932235904193_i128);
_2 = core::ptr::addr_of_mut!((*_2));
_7 = [3218867400993710111_u64,8584044396868168837_u64,13937898784008797089_u64,10713165469554777920_u64,8726913962916675135_u64];
_19 = _1;
_16 = _18.fld0;
_12.fld1 = (3_usize, (-118451938257947913164589548075471373715_i128));
_12.fld1.0 = !4_usize;
RET = 16656378979211222805_u64;
_13 = Adt56 { fld0: (*_6),fld1: _14 };
Goto(bb10)
}
bb12 = {
RET = !12534945421652902366_u64;
_16 = [22_u8,217_u8,233_u8,220_u8,66_u8,250_u8,83_u8,66_u8];
RET = 31168_u16 as u64;
_6 = core::ptr::addr_of!((*_6));
(*_6) = !_5.fld0;
(*_6) = _5.fld0;
_1 = _8;
_13 = Adt56 { fld0: _5.fld0,fld1: _14 };
Goto(bb3)
}
bb13 = {
_15.0 = core::ptr::addr_of_mut!((*_2));
_13 = Adt56 { fld0: (*_6),fld1: _14 };
RET = !9643467482489471871_u64;
_15.1 = 1450632919_i32 as f32;
_15.1 = _11 * _11;
_13.fld1 = [(*_6),_5.fld0];
_10 = [242_u8,189_u8,148_u8];
_13.fld0 = (*_6) + (*_6);
_12.fld1.1 = (-66919917831585650791196446893546169378_i128);
_15.0 = core::ptr::addr_of_mut!((*_2));
_14 = [_5.fld0,(*_6)];
_12.fld1.1 = (-81597919240784772778719293949636708984_i128) + 135408762092015913020041376614628657619_i128;
_13 = _5;
_18.fld4 = _15;
_18.fld1 = [5521_i16,19617_i16,(-21872_i16),19209_i16,31285_i16];
_18.fld0 = [113_u8,34_u8,95_u8,144_u8,134_u8,234_u8,159_u8,151_u8];
(*_6) = _5.fld0;
_18.fld4.1 = (-2336903075896438068_i64) as f32;
_14 = [(*_6),_5.fld0];
_13 = Adt56 { fld0: (*_6),fld1: _3 };
_16 = _18.fld0;
Call(_2 = fn7(_5, _5, _18.fld4.0, _3, _8, _12.fld1.1, _1, _4, _12.fld1.0, _14, _16, _12.fld1, _13.fld1, _15), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_3 = _4;
_5.fld0 = 11370599657172238126_u64 as isize;
_12.fld1.1 = (-111729567707232904974302759746337008898_i128) + (-121098240411602880173383220371354678548_i128);
_9 = 289791523564397010195183895926355143198_u128;
_12.fld1 = (7_usize, (-49300164884061814490890318714464423180_i128));
_3 = [(*_6),_5.fld0];
_10 = [41_u8,111_u8,5_u8];
_6 = core::ptr::addr_of!((*_6));
_1 = _8;
_13.fld1 = [(*_6),(*_6)];
_11 = _12.fld1.1 as f32;
_11 = _5.fld0 as f32;
_13.fld1 = _3;
(*_6) = _5.fld0;
(*_6) = -_5.fld0;
_1 = _8;
_5 = _13;
RET = !6617536088254015350_u64;
_14 = [(*_6),(*_6)];
_9 = 154849075881970769977432713126364393232_u128;
_12.fld1 = (4_usize, (-25636798442020075668740548654814287198_i128));
_5 = _13;
RET = _12.fld1.0 as u64;
RET = !16340674301831876507_u64;
_9 = !43603797989247196926885897490731481048_u128;
_5.fld0 = (*_6);
_4 = _3;
_4 = [_5.fld0,_5.fld0];
Goto(bb2)
}
bb15 = {
_18.fld3 = 10_i8;
_11 = 8508567720754574328_i64 as f32;
_11 = _18.fld4.1;
_17 = (-1484191493_i32) as f64;
_1 = _8;
_5 = Adt56 { fld0: _13.fld0,fld1: _14 };
_19 = _1;
_16 = [163_u8,182_u8,1_u8,218_u8,27_u8,104_u8,75_u8,73_u8];
_22 = _1;
_15.0 = core::ptr::addr_of_mut!((*_2));
(*_6) = _13.fld0 + _5.fld0;
_18.fld3 = _17 as i8;
_12.fld1 = (6_usize, (-106435565865547475115837395192483056652_i128));
_13 = _5;
match _12.fld1.0 {
0 => bb4,
1 => bb2,
2 => bb6,
6 => bb8,
_ => bb7
}
}
bb16 = {
_13 = Adt56 { fld0: (*_6),fld1: _14 };
_11 = _18.fld4.1;
_15 = _18.fld4;
Goto(bb5)
}
bb17 = {
_15.0 = core::ptr::addr_of_mut!((*_2));
_13 = Adt56 { fld0: (*_6),fld1: _14 };
RET = !9643467482489471871_u64;
_15.1 = 1450632919_i32 as f32;
_15.1 = _11 * _11;
_13.fld1 = [(*_6),_5.fld0];
_10 = [242_u8,189_u8,148_u8];
_13.fld0 = (*_6) + (*_6);
_12.fld1.1 = (-66919917831585650791196446893546169378_i128);
_15.0 = core::ptr::addr_of_mut!((*_2));
_14 = [_5.fld0,(*_6)];
_12.fld1.1 = (-81597919240784772778719293949636708984_i128) + 135408762092015913020041376614628657619_i128;
_13 = _5;
_18.fld4 = _15;
_18.fld1 = [5521_i16,19617_i16,(-21872_i16),19209_i16,31285_i16];
_18.fld0 = [113_u8,34_u8,95_u8,144_u8,134_u8,234_u8,159_u8,151_u8];
(*_6) = _5.fld0;
_18.fld4.1 = (-2336903075896438068_i64) as f32;
_14 = [(*_6),_5.fld0];
_13 = Adt56 { fld0: (*_6),fld1: _3 };
_16 = _18.fld0;
Call(_2 = fn7(_5, _5, _18.fld4.0, _3, _8, _12.fld1.1, _1, _4, _12.fld1.0, _14, _16, _12.fld1, _13.fld1, _15), ReturnTo(bb4), UnwindUnreachable())
}
bb18 = {
_13 = _5;
_6 = core::ptr::addr_of!(_5.fld0);
_27.fld1.1 = _18.fld3 as u16;
_13 = Adt56 { fld0: (*_6),fld1: _3 };
_27.fld1.4 = [(*_6),(*_6)];
_9 = _24.5;
_4 = [_5.fld0,_13.fld0];
(*_6) = (-1963954448_i32) as isize;
_18.fld0 = [_27.fld0,_27.fld0,_27.fld0,_27.fld0,_27.fld0,_27.fld0,_27.fld0,_27.fld0];
_11 = -_18.fld4.1;
Goto(bb19)
}
bb19 = {
Call(_31 = dump_var(6_usize, 14_usize, Move(_14), 3_usize, Move(_3), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_31 = dump_var(6_usize, 8_usize, Move(_8), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: Adt56,mut _2: Adt56,mut _3: *mut *const u8,mut _4: [isize; 2],mut _5: char,mut _6: i128,mut _7: char,mut _8: [isize; 2],mut _9: usize,mut _10: [isize; 2],mut _11: [u8; 8],mut _12: (usize, i128),mut _13: [isize; 2],mut _14: (*mut *const u8, f32)) -> *mut *const u8 {
mir! {
type RET = *mut *const u8;
let _15: [u8; 3];
let _16: isize;
let _17: u64;
let _18: isize;
let _19: char;
let _20: *mut [i32; 6];
let _21: [i16; 5];
let _22: isize;
let _23: [i32; 3];
let _24: [i32; 6];
let _25: char;
let _26: i32;
let _27: isize;
let _28: *const *const [usize; 3];
let _29: i32;
let _30: u64;
let _31: f32;
let _32: ([isize; 2],);
let _33: Adt61;
let _34: Adt54;
let _35: u64;
let _36: isize;
let _37: isize;
let _38: f64;
let _39: *const [usize; 3];
let _40: isize;
let _41: [i16; 5];
let _42: ([u64; 5], [u8; 7]);
let _43: u128;
let _44: ();
let _45: ();
{
_6 = _2.fld0 as i128;
_10 = [_2.fld0,_1.fld0];
_1 = Adt56 { fld0: _2.fld0,fld1: _13 };
_5 = _7;
_2.fld0 = _1.fld0 * _1.fld0;
(*_3) = core::ptr::addr_of!(_11[_9]);
_12.0 = _9;
(*_3) = core::ptr::addr_of!(_11[_9]);
_16 = _1.fld0 * _2.fld0;
_14.0 = core::ptr::addr_of_mut!((*_3));
_12 = (_9, _6);
RET = core::ptr::addr_of_mut!((*_3));
_16 = -_1.fld0;
_16 = -_2.fld0;
_17 = 1013736075_i32 as u64;
_14.1 = 336057163_i32 as f32;
(*RET) = core::ptr::addr_of!(_11[_9]);
_12 = (_9, _6);
_16 = (-1874607423_i32) as isize;
_1 = Adt56 { fld0: _16,fld1: _8 };
_1.fld1 = [_1.fld0,_16];
_8 = [_2.fld0,_1.fld0];
RET = core::ptr::addr_of_mut!((*_3));
Call(_20 = fn8(_13, (*_3), (*RET), _16, _14.0, _2.fld0, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = core::ptr::addr_of_mut!((*_3));
_13 = _8;
_12.1 = _2.fld0 as i128;
_19 = _7;
_3 = core::ptr::addr_of_mut!((*RET));
_19 = _5;
_16 = (-6732516568714421574_i64) as isize;
Goto(bb2)
}
bb2 = {
_23 = [1616831562_i32,630757172_i32,(-867796024_i32)];
_9 = _12.0 - _12.0;
_12 = (_9, _6);
_11 = [249_u8,186_u8,30_u8,193_u8,255_u8,99_u8,92_u8,113_u8];
_4 = [_2.fld0,_2.fld0];
_17 = _5 as u64;
_24 = [1310645799_i32,(-1730634937_i32),414026394_i32,(-569484295_i32),(-331266918_i32),(-1736969865_i32)];
_5 = _7;
_22 = _2.fld0;
_25 = _7;
_21 = [(-28738_i16),25614_i16,(-17426_i16),(-13388_i16),(-1590_i16)];
_14.0 = core::ptr::addr_of_mut!((*RET));
_3 = core::ptr::addr_of_mut!((*RET));
_26 = (-76098048_i32);
_4 = [_2.fld0,_2.fld0];
RET = core::ptr::addr_of_mut!((*RET));
_10 = [_22,_16];
_8 = [_2.fld0,_16];
_1.fld0 = _16;
_12 = (_9, _6);
_1.fld1 = [_16,_16];
_19 = _5;
_15 = [240_u8,7_u8,214_u8];
Goto(bb3)
}
bb3 = {
RET = _14.0;
_2 = _1;
_27 = _1.fld0;
_1.fld0 = _27 << _6;
_11 = [154_u8,99_u8,201_u8,137_u8,221_u8,186_u8,49_u8,150_u8];
_3 = core::ptr::addr_of_mut!((*RET));
_27 = _1.fld0 & _22;
_14.0 = _3;
_2 = _1;
RET = core::ptr::addr_of_mut!((*_3));
match _26 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431692113408 => bb10,
_ => bb9
}
}
bb4 = {
_23 = [1616831562_i32,630757172_i32,(-867796024_i32)];
_9 = _12.0 - _12.0;
_12 = (_9, _6);
_11 = [249_u8,186_u8,30_u8,193_u8,255_u8,99_u8,92_u8,113_u8];
_4 = [_2.fld0,_2.fld0];
_17 = _5 as u64;
_24 = [1310645799_i32,(-1730634937_i32),414026394_i32,(-569484295_i32),(-331266918_i32),(-1736969865_i32)];
_5 = _7;
_22 = _2.fld0;
_25 = _7;
_21 = [(-28738_i16),25614_i16,(-17426_i16),(-13388_i16),(-1590_i16)];
_14.0 = core::ptr::addr_of_mut!((*RET));
_3 = core::ptr::addr_of_mut!((*RET));
_26 = (-76098048_i32);
_4 = [_2.fld0,_2.fld0];
RET = core::ptr::addr_of_mut!((*RET));
_10 = [_22,_16];
_8 = [_2.fld0,_16];
_1.fld0 = _16;
_12 = (_9, _6);
_1.fld1 = [_16,_16];
_19 = _5;
_15 = [240_u8,7_u8,214_u8];
Goto(bb3)
}
bb5 = {
RET = core::ptr::addr_of_mut!((*_3));
_13 = _8;
_12.1 = _2.fld0 as i128;
_19 = _7;
_3 = core::ptr::addr_of_mut!((*RET));
_19 = _5;
_16 = (-6732516568714421574_i64) as isize;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_3 = core::ptr::addr_of_mut!((*RET));
_8 = [_1.fld0,_27];
_3 = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
_4 = [_16,_1.fld0];
_32 = (_8,);
_12.0 = _9 / 5437529215574632935_usize;
_29 = 3208_i16 as i32;
_31 = 115_u8 as f32;
_33.fld4 = [_12.0,_9,_9];
_30 = _1.fld0 as u64;
_34 = Adt54 { fld0: _17,fld1: _14 };
_4 = _13;
_1.fld1 = [_27,_16];
_34.fld0 = !_30;
Goto(bb11)
}
bb11 = {
_15 = [164_u8,239_u8,194_u8];
_33.fld0.2 = 30856_i16;
_33.fld3 = [162_u8,210_u8,35_u8,23_u8,192_u8,20_u8,39_u8];
_12.0 = !_9;
_9 = true as usize;
_14.0 = core::ptr::addr_of_mut!((*RET));
_24 = [_29,_26,_29,_29,_26,_26];
_21 = [_33.fld0.2,_33.fld0.2,_33.fld0.2,_33.fld0.2,_33.fld0.2];
_33.fld3 = [13_u8,58_u8,215_u8,94_u8,40_u8,246_u8,45_u8];
_9 = _12.0 >> _17;
_25 = _7;
_4 = [_1.fld0,_2.fld0];
_28 = core::ptr::addr_of!(_39);
match _26 {
0 => bb9,
1 => bb12,
340282366920938463463374607431692113408 => bb14,
_ => bb13
}
}
bb12 = {
RET = core::ptr::addr_of_mut!((*_3));
_13 = _8;
_12.1 = _2.fld0 as i128;
_19 = _7;
_3 = core::ptr::addr_of_mut!((*RET));
_19 = _5;
_16 = (-6732516568714421574_i64) as isize;
Goto(bb2)
}
bb13 = {
Return()
}
bb14 = {
(*_28) = core::ptr::addr_of!(_33.fld4);
_8 = [_27,_2.fld0];
_38 = _16 as f64;
_35 = _30;
_22 = _27 & _1.fld0;
_33.fld4 = [_12.0,_12.0,_9];
_37 = !_2.fld0;
_10 = _4;
_22 = _27 - _37;
_22 = _27 & _27;
(*_39) = [_9,_12.0,_12.0];
_30 = !_17;
(*_28) = core::ptr::addr_of!((*_39));
_23 = [_29,_26,_26];
_4 = [_22,_37];
_33.fld0 = ((-10661_i16), 62541_u16, (-12243_i16), _19, _4);
_14.0 = core::ptr::addr_of_mut!((*RET));
_1 = _2;
_7 = _5;
(*_28) = core::ptr::addr_of!((*_39));
_37 = _33.fld0.1 as isize;
_40 = true as isize;
_33.fld0.2 = _9 as i16;
_33.fld2.1 = [223_u8,38_u8,103_u8,238_u8,199_u8,42_u8,50_u8];
_40 = _37;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(7_usize, 7_usize, Move(_7), 11_usize, Move(_11), 40_usize, Move(_40), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(7_usize, 5_usize, Move(_5), 10_usize, Move(_10), 37_usize, Move(_37), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(7_usize, 27_usize, Move(_27), 17_usize, Move(_17), 12_usize, Move(_12), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(7_usize, 30_usize, Move(_30), 45_usize, _45, 45_usize, _45, 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [isize; 2],mut _2: *const u8,mut _3: *const u8,mut _4: isize,mut _5: *mut *const u8,mut _6: isize,mut _7: [isize; 2]) -> *mut [i32; 6] {
mir! {
type RET = *mut [i32; 6];
let _8: i128;
let _9: i16;
let _10: isize;
let _11: ((i16, u16, i16, char, [isize; 2]), *mut *const u8, ([u64; 5], [u8; 7]), f64, i16, *const u8);
let _12: [u64; 5];
let _13: u64;
let _14: [u64; 5];
let _15: isize;
let _16: *const u64;
let _17: [isize; 2];
let _18: u64;
let _19: *mut i128;
let _20: bool;
let _21: Adt57;
let _22: Adt47;
let _23: f32;
let _24: i128;
let _25: Adt61;
let _26: bool;
let _27: isize;
let _28: usize;
let _29: (usize, i128);
let _30: ([u64; 5], [u8; 7]);
let _31: u16;
let _32: [isize; 2];
let _33: f32;
let _34: [isize; 5];
let _35: i32;
let _36: bool;
let _37: isize;
let _38: bool;
let _39: *const u64;
let _40: f32;
let _41: Adt60;
let _42: isize;
let _43: *const isize;
let _44: i16;
let _45: char;
let _46: [u8; 3];
let _47: f64;
let _48: ([u64; 5], [u8; 7]);
let _49: [u64; 5];
let _50: ();
let _51: ();
{
_1 = _7;
(*_3) = 129_u8 % 72_u8;
(*_2) = 10895_i16 as u8;
(*_3) = 35038_u16 as u8;
(*_3) = 145_u8 * 147_u8;
_9 = true as i16;
(*_2) = 156_u8 * 173_u8;
_8 = !89364904913804425589375329462560651270_i128;
(*_3) = 38_u8;
_6 = _4 << _4;
_4 = -_6;
_3 = core::ptr::addr_of!((*_2));
(*_3) = !10_u8;
_1 = _7;
_3 = core::ptr::addr_of!((*_3));
_4 = '\u{d5972}' as isize;
_11.2.0 = [4182807668495351815_u64,12850942118523246716_u64,12523938007173306304_u64,16157966374910963559_u64,17774112405900397229_u64];
(*_3) = 4888351450882282712_i64 as u8;
_11.0.1 = 13668_u16 & 15094_u16;
_5 = core::ptr::addr_of_mut!(_3);
_4 = _6 | _6;
Goto(bb1)
}
bb1 = {
_11.0.1 = true as u16;
(*_3) = !230_u8;
_11.0.4 = _1;
_11.0.0 = _9 * _9;
_11.1 = _5;
_10 = _4 - _4;
_11.2.0 = [11064360633468832540_u64,16983318422842787832_u64,2302328502558051723_u64,13415772051439074545_u64,10537657174349919689_u64];
_1 = [_10,_10];
_11.0.0 = _9;
_11.2.1 = [(*_3),(*_3),(*_3),(*_3),(*_2),(*_3),(*_3)];
Call(_11 = fn9(_9, (*_3), _2, (*_2), (*_2), (*_3), (*_5), _10, (*_5), (*_3), (*_5), (*_5), _10, (*_2), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = (*_3) as isize;
(*_2) = !22_u8;
_10 = 719085846_i32 as isize;
_11.0.3 = '\u{32d0e}';
_1 = [_6,_4];
_11.5 = core::ptr::addr_of!((*_3));
_11.0 = (_11.4, 14894_u16, _11.4, '\u{fd56b}', _1);
_9 = !_11.0.2;
_10 = _6;
(*_2) = 122_u8 * 31_u8;
_13 = 1706752873864326348_u64 << (*_2);
_11.5 = core::ptr::addr_of!((*_3));
_7 = [_6,_4];
_13 = 12324313481664990134_u64 & 14254963773053695287_u64;
(*_5) = _11.5;
Goto(bb3)
}
bb3 = {
_3 = core::ptr::addr_of!((*_2));
_11.2.1 = [(*_2),(*_3),(*_3),(*_2),(*_2),(*_2),(*_3)];
_11.5 = core::ptr::addr_of!((*_2));
_11.0.2 = _11.4;
_7 = _11.0.4;
_14 = [_13,_13,_13,_13,_13];
_11.0 = (_11.4, 42017_u16, _9, '\u{e7fe8}', _1);
_4 = _6 + _6;
_11.0.3 = '\u{e44f7}';
_11.0.3 = '\u{3ddba}';
_10 = !_4;
_15 = _10;
(*_2) = 20_u8;
_11.0.3 = '\u{5a262}';
_8 = 267401863907278887206203936444227064462_u128 as i128;
_12 = [_13,_13,_13,_13,_13];
(*_2) = 103_u8 + 218_u8;
_11.0.3 = '\u{b401d}';
_11.0 = (_11.4, 32699_u16, _9, '\u{f3db4}', _7);
match _11.0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
32699 => bb9,
_ => bb8
}
}
bb4 = {
_10 = (*_3) as isize;
(*_2) = !22_u8;
_10 = 719085846_i32 as isize;
_11.0.3 = '\u{32d0e}';
_1 = [_6,_4];
_11.5 = core::ptr::addr_of!((*_3));
_11.0 = (_11.4, 14894_u16, _11.4, '\u{fd56b}', _1);
_9 = !_11.0.2;
_10 = _6;
(*_2) = 122_u8 * 31_u8;
_13 = 1706752873864326348_u64 << (*_2);
_11.5 = core::ptr::addr_of!((*_3));
_7 = [_6,_4];
_13 = 12324313481664990134_u64 & 14254963773053695287_u64;
(*_5) = _11.5;
Goto(bb3)
}
bb5 = {
_11.0.1 = true as u16;
(*_3) = !230_u8;
_11.0.4 = _1;
_11.0.0 = _9 * _9;
_11.1 = _5;
_10 = _4 - _4;
_11.2.0 = [11064360633468832540_u64,16983318422842787832_u64,2302328502558051723_u64,13415772051439074545_u64,10537657174349919689_u64];
_1 = [_10,_10];
_11.0.0 = _9;
_11.2.1 = [(*_3),(*_3),(*_3),(*_3),(*_2),(*_3),(*_3)];
Call(_11 = fn9(_9, (*_3), _2, (*_2), (*_2), (*_3), (*_5), _10, (*_5), (*_3), (*_5), (*_5), _10, (*_2), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_11.2.1 = [(*_2),(*_2),(*_3),(*_2),(*_3),(*_3),(*_2)];
_4 = -_6;
(*_5) = _11.5;
_11.2.1 = [(*_2),(*_3),(*_3),(*_3),(*_3),(*_2),(*_3)];
_11.0.2 = _11.0.1 as i16;
_11.1 = _5;
_5 = core::ptr::addr_of_mut!((*_5));
(*_2) = 171_u8;
_11.0 = (_11.4, 14120_u16, _9, '\u{b5129}', _7);
_5 = core::ptr::addr_of_mut!((*_5));
_3 = _11.5;
(*_2) = _6 as u8;
_11.2.0 = [_13,_13,_13,_13,_13];
_6 = _15 + _15;
_10 = _6 ^ _4;
_11.2.1 = [(*_2),(*_2),(*_3),(*_3),(*_3),(*_3),(*_2)];
_16 = core::ptr::addr_of!(_13);
(*_2) = 0_u8 - 66_u8;
match _11.0.1 {
0 => bb1,
1 => bb10,
2 => bb11,
14120 => bb13,
_ => bb12
}
}
bb10 = {
_10 = (*_3) as isize;
(*_2) = !22_u8;
_10 = 719085846_i32 as isize;
_11.0.3 = '\u{32d0e}';
_1 = [_6,_4];
_11.5 = core::ptr::addr_of!((*_3));
_11.0 = (_11.4, 14894_u16, _11.4, '\u{fd56b}', _1);
_9 = !_11.0.2;
_10 = _6;
(*_2) = 122_u8 * 31_u8;
_13 = 1706752873864326348_u64 << (*_2);
_11.5 = core::ptr::addr_of!((*_3));
_7 = [_6,_4];
_13 = 12324313481664990134_u64 & 14254963773053695287_u64;
(*_5) = _11.5;
Goto(bb3)
}
bb11 = {
Return()
}
bb12 = {
_10 = (*_3) as isize;
(*_2) = !22_u8;
_10 = 719085846_i32 as isize;
_11.0.3 = '\u{32d0e}';
_1 = [_6,_4];
_11.5 = core::ptr::addr_of!((*_3));
_11.0 = (_11.4, 14894_u16, _11.4, '\u{fd56b}', _1);
_9 = !_11.0.2;
_10 = _6;
(*_2) = 122_u8 * 31_u8;
_13 = 1706752873864326348_u64 << (*_2);
_11.5 = core::ptr::addr_of!((*_3));
_7 = [_6,_4];
_13 = 12324313481664990134_u64 & 14254963773053695287_u64;
(*_5) = _11.5;
Goto(bb3)
}
bb13 = {
_19 = core::ptr::addr_of_mut!(_8);
_7 = _1;
_14 = [(*_16),(*_16),(*_16),(*_16),_13];
_11.3 = 2555893179678428517_i64 as f64;
_22.fld1 = (1752874314216248319_usize, (*_19));
_2 = (*_5);
_14 = _11.2.0;
_2 = core::ptr::addr_of!((*_3));
(*_16) = _11.0.3 as u64;
_11.0 = (_9, 8365_u16, _11.4, '\u{f4819}', _1);
_9 = -_11.0.2;
_18 = (*_16);
_22.fld1 = (12553742794312896580_usize, (*_19));
_21.fld0 = !2969084235_u32;
(*_3) = !238_u8;
_11.0.4 = _1;
_11.0.3 = '\u{9f81e}';
_4 = -_15;
_13 = !_18;
_6 = !_10;
_23 = 65_i8 as f32;
_12 = [(*_16),_13,(*_16),_13,_13];
_17 = [_10,_6];
_11.0.3 = '\u{346d5}';
_21.fld0 = (*_19) as u32;
_20 = false | true;
_11.0 = (_9, 16035_u16, _9, '\u{34128}', _17);
_21 = Adt57 { fld0: 2691048712_u32 };
_11.5 = _3;
Goto(bb14)
}
bb14 = {
_22.fld1 = (7_usize, _8);
_4 = _6 & _15;
_17 = [_4,_4];
_3 = core::ptr::addr_of!((*_2));
_11.2.1 = [(*_3),(*_3),(*_3),(*_2),(*_3),(*_3),(*_3)];
_25.fld1 = _11.0.1;
_25.fld0.4 = [_6,_4];
_25.fld0.2 = _11.4;
_21.fld0 = !1290030582_u32;
_11.0.1 = _25.fld1 << _25.fld1;
_18 = _13 ^ _13;
_11.5 = (*_5);
_24 = _21.fld0 as i128;
(*_2) = 62_u8 % 90_u8;
(*_16) = !_18;
_11.0.2 = _11.0.0;
(*_19) = _25.fld1 as i128;
_11.0.0 = _11.0.2;
_27 = _10 * _15;
match _22.fld1.0 {
0 => bb12,
1 => bb7,
2 => bb3,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
7 => bb20,
_ => bb19
}
}
bb15 = {
Return()
}
bb16 = {
_11.0.1 = true as u16;
(*_3) = !230_u8;
_11.0.4 = _1;
_11.0.0 = _9 * _9;
_11.1 = _5;
_10 = _4 - _4;
_11.2.0 = [11064360633468832540_u64,16983318422842787832_u64,2302328502558051723_u64,13415772051439074545_u64,10537657174349919689_u64];
_1 = [_10,_10];
_11.0.0 = _9;
_11.2.1 = [(*_3),(*_3),(*_3),(*_3),(*_2),(*_3),(*_3)];
Call(_11 = fn9(_9, (*_3), _2, (*_2), (*_2), (*_3), (*_5), _10, (*_5), (*_3), (*_5), (*_5), _10, (*_2), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb17 = {
Return()
}
bb18 = {
_11.0.1 = true as u16;
(*_3) = !230_u8;
_11.0.4 = _1;
_11.0.0 = _9 * _9;
_11.1 = _5;
_10 = _4 - _4;
_11.2.0 = [11064360633468832540_u64,16983318422842787832_u64,2302328502558051723_u64,13415772051439074545_u64,10537657174349919689_u64];
_1 = [_10,_10];
_11.0.0 = _9;
_11.2.1 = [(*_3),(*_3),(*_3),(*_3),(*_2),(*_3),(*_3)];
Call(_11 = fn9(_9, (*_3), _2, (*_2), (*_2), (*_3), (*_5), _10, (*_5), (*_3), (*_5), (*_5), _10, (*_2), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb19 = {
_3 = core::ptr::addr_of!((*_2));
_11.2.1 = [(*_2),(*_3),(*_3),(*_2),(*_2),(*_2),(*_3)];
_11.5 = core::ptr::addr_of!((*_2));
_11.0.2 = _11.4;
_7 = _11.0.4;
_14 = [_13,_13,_13,_13,_13];
_11.0 = (_11.4, 42017_u16, _9, '\u{e7fe8}', _1);
_4 = _6 + _6;
_11.0.3 = '\u{e44f7}';
_11.0.3 = '\u{3ddba}';
_10 = !_4;
_15 = _10;
(*_2) = 20_u8;
_11.0.3 = '\u{5a262}';
_8 = 267401863907278887206203936444227064462_u128 as i128;
_12 = [_13,_13,_13,_13,_13];
(*_2) = 103_u8 + 218_u8;
_11.0.3 = '\u{b401d}';
_11.0 = (_11.4, 32699_u16, _9, '\u{f3db4}', _7);
match _11.0.1 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
32699 => bb9,
_ => bb8
}
}
bb20 = {
_22.fld0 = core::ptr::addr_of_mut!((*_16));
(*_16) = _18 >> (*_19);
Goto(bb21)
}
bb21 = {
_25.fld0.1 = !_11.0.1;
_3 = core::ptr::addr_of!((*_3));
_25.fld1 = _15 as u16;
_19 = core::ptr::addr_of_mut!(_24);
_29.1 = _8;
_22.fld1.0 = 7102623636161096254_usize;
_25.fld0 = (_11.4, _11.0.1, _11.0.0, _11.0.3, _17);
_22.fld0 = core::ptr::addr_of_mut!((*_16));
_8 = _29.1 ^ _29.1;
_30.1 = [(*_3),(*_2),(*_3),(*_2),(*_2),(*_2),(*_2)];
_11.4 = -_11.0.0;
_15 = _27;
_13 = _15 as u64;
_22.fld1.1 = _8 << _15;
_11.2 = (_14, _30.1);
_29 = _22.fld1;
Goto(bb22)
}
bb22 = {
_21 = Adt57 { fld0: 3091147156_u32 };
_7 = _17;
_27 = -_6;
_11.2 = (_12, _30.1);
_11.0.2 = _11.3 as i16;
match _22.fld1.0 {
0 => bb12,
1 => bb23,
2 => bb24,
3 => bb25,
4 => bb26,
7102623636161096254 => bb28,
_ => bb27
}
}
bb23 = {
_25.fld0.1 = !_11.0.1;
_3 = core::ptr::addr_of!((*_3));
_25.fld1 = _15 as u16;
_19 = core::ptr::addr_of_mut!(_24);
_29.1 = _8;
_22.fld1.0 = 7102623636161096254_usize;
_25.fld0 = (_11.4, _11.0.1, _11.0.0, _11.0.3, _17);
_22.fld0 = core::ptr::addr_of_mut!((*_16));
_8 = _29.1 ^ _29.1;
_30.1 = [(*_3),(*_2),(*_3),(*_2),(*_2),(*_2),(*_2)];
_11.4 = -_11.0.0;
_15 = _27;
_13 = _15 as u64;
_22.fld1.1 = _8 << _15;
_11.2 = (_14, _30.1);
_29 = _22.fld1;
Goto(bb22)
}
bb24 = {
_22.fld1 = (7_usize, _8);
_4 = _6 & _15;
_17 = [_4,_4];
_3 = core::ptr::addr_of!((*_2));
_11.2.1 = [(*_3),(*_3),(*_3),(*_2),(*_3),(*_3),(*_3)];
_25.fld1 = _11.0.1;
_25.fld0.4 = [_6,_4];
_25.fld0.2 = _11.4;
_21.fld0 = !1290030582_u32;
_11.0.1 = _25.fld1 << _25.fld1;
_18 = _13 ^ _13;
_11.5 = (*_5);
_24 = _21.fld0 as i128;
(*_2) = 62_u8 % 90_u8;
(*_16) = !_18;
_11.0.2 = _11.0.0;
(*_19) = _25.fld1 as i128;
_11.0.0 = _11.0.2;
_27 = _10 * _15;
match _22.fld1.0 {
0 => bb12,
1 => bb7,
2 => bb3,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
7 => bb20,
_ => bb19
}
}
bb25 = {
Return()
}
bb26 = {
_11.0.1 = true as u16;
(*_3) = !230_u8;
_11.0.4 = _1;
_11.0.0 = _9 * _9;
_11.1 = _5;
_10 = _4 - _4;
_11.2.0 = [11064360633468832540_u64,16983318422842787832_u64,2302328502558051723_u64,13415772051439074545_u64,10537657174349919689_u64];
_1 = [_10,_10];
_11.0.0 = _9;
_11.2.1 = [(*_3),(*_3),(*_3),(*_3),(*_2),(*_3),(*_3)];
Call(_11 = fn9(_9, (*_3), _2, (*_2), (*_2), (*_3), (*_5), _10, (*_5), (*_3), (*_5), (*_5), _10, (*_2), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb27 = {
Return()
}
bb28 = {
_20 = (*_16) != (*_16);
_25.fld4 = [_29.0,_29.0,_29.0];
_11.0.0 = 228183147572506596806615447804752460629_u128 as i16;
_26 = _20 & _20;
_3 = _11.5;
_32 = [_4,_4];
_22.fld1 = _29;
(*_3) = _9 as u8;
_25.fld0.0 = (*_3) as i16;
(*_2) = 22_u8;
_25.fld0.1 = _29.1 as u16;
_11.2 = (_12, _30.1);
_11.1 = core::ptr::addr_of_mut!(_11.5);
_29 = _22.fld1;
_11.0.3 = _25.fld0.3;
_25.fld0.2 = _9;
_11.3 = (*_3) as f64;
_34 = [_4,_6,_15,_6,_4];
_13 = !_18;
_24 = _22.fld1.1 | _22.fld1.1;
_8 = !_29.1;
_16 = core::ptr::addr_of!((*_16));
_5 = core::ptr::addr_of_mut!(_11.5);
_21.fld0 = 197332061_u32 - 2537021552_u32;
match _29.0 {
7102623636161096254 => bb30,
_ => bb29
}
}
bb29 = {
Return()
}
bb30 = {
_33 = -_23;
_30.0 = _12;
_25.fld1 = 59650498023507015883696839621025714362_u128 as u16;
_30 = _11.2;
match (*_2) {
0 => bb27,
1 => bb10,
2 => bb31,
22 => bb33,
_ => bb32
}
}
bb31 = {
_22.fld1 = (7_usize, _8);
_4 = _6 & _15;
_17 = [_4,_4];
_3 = core::ptr::addr_of!((*_2));
_11.2.1 = [(*_3),(*_3),(*_3),(*_2),(*_3),(*_3),(*_3)];
_25.fld1 = _11.0.1;
_25.fld0.4 = [_6,_4];
_25.fld0.2 = _11.4;
_21.fld0 = !1290030582_u32;
_11.0.1 = _25.fld1 << _25.fld1;
_18 = _13 ^ _13;
_11.5 = (*_5);
_24 = _21.fld0 as i128;
(*_2) = 62_u8 % 90_u8;
(*_16) = !_18;
_11.0.2 = _11.0.0;
(*_19) = _25.fld1 as i128;
_11.0.0 = _11.0.2;
_27 = _10 * _15;
match _22.fld1.0 {
0 => bb12,
1 => bb7,
2 => bb3,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
7 => bb20,
_ => bb19
}
}
bb32 = {
Return()
}
bb33 = {
_36 = _20;
(*_19) = _22.fld1.1;
(*_19) = _8 - _22.fld1.1;
_25.fld0.2 = _25.fld0.0 * _9;
(*_16) = !_18;
_11.0.0 = _22.fld1.0 as i16;
(*_16) = !_18;
_10 = -_27;
_41.fld1.fld3 = [(*_3),(*_2),(*_3),(*_2),(*_2),(*_3),(*_3)];
_11.0 = (_25.fld0.2, _25.fld0.1, _11.4, _25.fld0.3, _25.fld0.4);
_41.fld2 = -_23;
_41.fld3 = _25.fld0.1 << (*_19);
_41.fld1.fld4 = _9 >> (*_19);
_38 = !_26;
_21.fld0 = (-715324226_i32) as u32;
_41.fld4 = (_5, _23);
_11.0.2 = !_41.fld1.fld4;
_37 = _29.1 as isize;
_25.fld3 = [(*_2),(*_3),(*_3),(*_3),(*_3),(*_2),(*_3)];
(*_2) = _20 as u8;
Goto(bb34)
}
bb34 = {
_39 = _16;
_11.4 = _41.fld1.fld4 >> _41.fld1.fld4;
_10 = _37;
_41.fld1.fld5.5 = !339185500233457489241084534253121229239_u128;
_11.0.3 = _25.fld0.3;
_17 = _32;
_35 = (-117_i8) as i32;
_30.1 = _11.2.1;
_11.4 = !_11.0.2;
(*_3) = 93_u8 / 227_u8;
_41.fld1.fld5.3 = core::ptr::addr_of!(_6);
(*_39) = _18 / 11081056344154208399_u64;
_26 = _22.fld1.1 <= (*_19);
_10 = _37 ^ _15;
_22.fld1.0 = _29.0 % 1_usize;
_3 = core::ptr::addr_of!((*_2));
_44 = _41.fld1.fld4;
_11.0.2 = -_11.4;
RET = core::ptr::addr_of_mut!(_41.fld5);
_21 = Adt57 { fld0: 2160163610_u32 };
_6 = -_10;
_2 = core::ptr::addr_of!((*_3));
_11.5 = core::ptr::addr_of!((*_3));
RET = core::ptr::addr_of_mut!((*RET));
_30.0 = [(*_16),_13,_18,(*_16),(*_39)];
Goto(bb35)
}
bb35 = {
Call(_50 = dump_var(8_usize, 35_usize, Move(_35), 15_usize, Move(_15), 8_usize, Move(_8), 20_usize, Move(_20)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_50 = dump_var(8_usize, 13_usize, Move(_13), 26_usize, Move(_26), 18_usize, Move(_18), 12_usize, Move(_12)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Call(_50 = dump_var(8_usize, 36_usize, Move(_36), 1_usize, Move(_1), 30_usize, Move(_30), 38_usize, Move(_38)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_50 = dump_var(8_usize, 14_usize, Move(_14), 51_usize, _51, 51_usize, _51, 51_usize, _51), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: i16,mut _2: u8,mut _3: *const u8,mut _4: u8,mut _5: u8,mut _6: u8,mut _7: *const u8,mut _8: isize,mut _9: *const u8,mut _10: u8,mut _11: *const u8,mut _12: *const u8,mut _13: isize,mut _14: u8,mut _15: [isize; 2]) -> ((i16, u16, i16, char, [isize; 2]), *mut *const u8, ([u64; 5], [u8; 7]), f64, i16, *const u8) {
mir! {
type RET = ((i16, u16, i16, char, [isize; 2]), *mut *const u8, ([u64; 5], [u8; 7]), f64, i16, *const u8);
let _16: isize;
let _17: *const [usize; 3];
let _18: bool;
let _19: [i32; 5];
let _20: bool;
let _21: bool;
let _22: (i16, u16, i16, char, [isize; 2]);
let _23: ();
let _24: ();
{
_11 = core::ptr::addr_of!((*_12));
_8 = (-7624088626684614501_i64) as isize;
RET.2.1 = [(*_3),_4,(*_12),_4,(*_7),(*_9),(*_12)];
RET.2.0 = [8904477697019714370_u64,4833833626091567185_u64,10864445080376880610_u64,13005188000415091720_u64,1823606248853809685_u64];
RET.5 = _3;
RET.5 = _3;
RET.5 = core::ptr::addr_of!(_2);
RET.0.0 = 23154_u16 as i16;
_4 = _6 << _10;
Goto(bb1)
}
bb1 = {
_7 = core::ptr::addr_of!(_4);
RET.0 = (_1, 55798_u16, _1, '\u{750f5}', _15);
RET.3 = 8_i8 as f64;
RET.0.4 = [_13,_13];
(*_3) = !(*_7);
RET.0.4 = [_13,_13];
RET.1 = core::ptr::addr_of_mut!(_7);
RET.0.0 = _1;
RET.0.0 = !_1;
_6 = 254741533583864788551155873621395079079_u128 as u8;
RET.3 = 1528123764_u32 as f64;
(*_12) = (*_7);
RET.0 = (_1, 48400_u16, _1, '\u{276de}', _15);
RET.0 = (_1, 42463_u16, _1, '\u{83e4a}', _15);
RET.4 = _1;
RET.0.1 = 10538_u16 / 11191_u16;
_6 = (*_7) & (*_7);
RET.0.0 = -_1;
(*_3) = 35327_u16 as u8;
(*_11) = _14;
_18 = true;
_12 = _9;
RET.4 = _1;
RET.4 = !_1;
_20 = !_18;
_14 = _20 as u8;
_22.2 = _1;
_9 = core::ptr::addr_of!((*_3));
Goto(bb2)
}
bb2 = {
Call(_23 = dump_var(9_usize, 5_usize, Move(_5), 4_usize, Move(_4), 13_usize, Move(_13), 18_usize, Move(_18)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_23 = dump_var(9_usize, 15_usize, Move(_15), 2_usize, Move(_2), 24_usize, _24, 24_usize, _24), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: i16,mut _2: *mut *const u8,mut _3: [isize; 2],mut _4: char,mut _5: *const u8,mut _6: [isize; 2]) -> [usize; 3] {
mir! {
type RET = [usize; 3];
let _7: [i32; 5];
let _8: char;
let _9: isize;
let _10: Adt59;
let _11: u64;
let _12: i16;
let _13: bool;
let _14: u64;
let _15: Adt62;
let _16: i16;
let _17: u128;
let _18: [i32; 3];
let _19: i8;
let _20: ();
let _21: ();
{
RET = [1244417279965081599_usize,5_usize,3_usize];
(*_2) = _5;
_7 = [(-782400679_i32),(-761152031_i32),848630308_i32,(-1442225513_i32),(-1833189231_i32)];
(*_2) = _5;
_5 = (*_2);
_6 = [9223372036854775807_isize,(-9223372036854775808_isize)];
(*_2) = _5;
_9 = 30921_u16 as isize;
_4 = '\u{e688a}';
_8 = _4;
_3 = [_9,_9];
(*_2) = _5;
_10.fld6 = [(-743395138_i32),1439417196_i32,1104663357_i32,2073305890_i32,1155151697_i32];
_10.fld4.fld0 = 10324451268364985277_u64 | 3055461244494128010_u64;
_10.fld3 = (-13_i8) as u128;
Goto(bb1)
}
bb1 = {
_11 = !_10.fld4.fld0;
_9 = (-1796123317_i32) as isize;
_8 = _4;
_10.fld4.fld1.1 = (-5094986473397139869_i64) as f32;
_10.fld6 = [1056084281_i32,723022774_i32,687287344_i32,(-782404120_i32),454737424_i32];
_5 = (*_2);
_10.fld3 = 61574876759058273958598203840516334247_u128 + 61407230659733045646441351828710595143_u128;
_11 = !_10.fld4.fld0;
_8 = _4;
match _1 {
0 => bb2,
1 => bb3,
1102 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7 = [1011713429_i32,655978907_i32,(-832202252_i32),(-7155457_i32),1827476634_i32];
Call(_3 = core::intrinsics::transmute(_10.fld3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = _4;
_12 = _1 | _1;
_5 = (*_2);
(*_2) = _5;
_10.fld4.fld1.0 = core::ptr::addr_of_mut!((*_2));
_15.fld0.fld0 = [99_u8,211_u8,202_u8,182_u8,158_u8,179_u8,236_u8,99_u8];
_15.fld0.fld1 = [_12,_1,_12,_1,_12];
_8 = _4;
_16 = _12 * _12;
match _1 {
0 => bb3,
1102 => bb7,
_ => bb5
}
}
bb7 = {
(*_2) = core::ptr::addr_of!(_15.fld3.fld0);
_9 = (-24_isize);
_10.fld2 = core::ptr::addr_of!(_15.fld3.fld0);
_13 = !true;
_15.fld1 = [_11,_11,_10.fld4.fld0,_11,_10.fld4.fld0];
_13 = !true;
_10.fld0 = !_13;
_15.fld0.fld4.0 = core::ptr::addr_of_mut!((*_2));
_11 = 76428111271713154446827880088065522671_i128 as u64;
_14 = _10.fld4.fld0 - _11;
_10.fld4.fld1.0 = core::ptr::addr_of_mut!(_5);
Goto(bb8)
}
bb8 = {
_15.fld4 = [162_u8,215_u8,167_u8,68_u8,36_u8,242_u8,7_u8,104_u8];
_16 = _12 | _12;
_15.fld0.fld3 = (-92_i8) & (-74_i8);
_10.fld4.fld1.1 = (-3390661909310201880073429859370371729_i128) as f32;
_15.fld3.fld1.0 = _16 | _16;
_15.fld0.fld4.0 = core::ptr::addr_of_mut!(_5);
_15.fld1 = [_11,_11,_10.fld4.fld0,_10.fld4.fld0,_10.fld4.fld0];
_16 = -_15.fld3.fld1.0;
_14 = _10.fld4.fld0 % 14818257759531846438_u64;
_10.fld4.fld0 = !_14;
_4 = _8;
_15.fld2 = 18342349765933672664_usize << _16;
_15.fld3.fld1.4 = _3;
_17 = _10.fld3;
_18 = [(-892734095_i32),795195273_i32,(-442126554_i32)];
_15.fld0.fld4.1 = _10.fld4.fld1.1;
(*_2) = _5;
_9 = -9223372036854775807_isize;
_15.fld5 = _2;
_10.fld3 = _17 >> _16;
_15.fld3.fld0 = !50_u8;
_15.fld3.fld1.0 = _13 as i16;
RET = [_15.fld2,_15.fld2,_15.fld2];
_15.fld0.fld1 = [_1,_16,_16,_1,_16];
_11 = 1138270839_u32 as u64;
_15.fld3.fld1.4 = [_9,_9];
_13 = !_10.fld0;
Goto(bb9)
}
bb9 = {
Call(_20 = dump_var(10_usize, 3_usize, Move(_3), 12_usize, Move(_12), 6_usize, Move(_6), 14_usize, Move(_14)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_20 = dump_var(10_usize, 7_usize, Move(_7), 16_usize, Move(_16), 4_usize, Move(_4), 21_usize, _21), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: u16,mut _2: [isize; 2],mut _3: [u8; 7],mut _4: *mut *const u8,mut _5: char,mut _6: (i16, u16, i16, char, [isize; 2]),mut _7: [usize; 3],mut _8: [isize; 2],mut _9: [isize; 2],mut _10: *const isize,mut _11: i128) -> *const [usize; 3] {
mir! {
type RET = *const [usize; 3];
let _12: i64;
let _13: u8;
let _14: *mut u64;
let _15: bool;
let _16: ([u64; 5], [u8; 7]);
let _17: Adt59;
let _18: ();
let _19: ();
{
match _1 {
0 => bb1,
1 => bb2,
64550 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_6.3 = _5;
_13 = 190_u8 - 77_u8;
(*_10) = (-9223372036854775808_isize);
_2 = [(*_10),(*_10)];
_3 = [_13,_13,_13,_13,_13,_13,_13];
_10 = core::ptr::addr_of!((*_10));
RET = core::ptr::addr_of!(_7);
(*_10) = false as isize;
_6.3 = _5;
(*RET) = [3127648880479934309_usize,0_usize,2_usize];
_15 = _13 != _13;
(*RET) = [11936452334770810639_usize,9433042706453477394_usize,7_usize];
_2 = _8;
_6.3 = _5;
_17.fld3 = 201407042048878972477793157592757601814_u128;
_16.1 = [_13,_13,_13,_13,_13,_13,_13];
_17.fld6 = [(-1480401401_i32),1714043930_i32,(-13469653_i32),(-2002624072_i32),1657764250_i32];
_17.fld6 = [(-1409924835_i32),(-781778789_i32),(-497397575_i32),1046572357_i32,(-544872591_i32)];
_17.fld5 = _10;
(*RET) = [2_usize,7_usize,0_usize];
_5 = _6.3;
_12 = (-6546412803315220370_i64);
Goto(bb5)
}
bb5 = {
Call(_18 = dump_var(11_usize, 2_usize, Move(_2), 9_usize, Move(_9), 15_usize, Move(_15), 12_usize, Move(_12)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_18 = dump_var(11_usize, 5_usize, Move(_5), 11_usize, Move(_11), 19_usize, _19, 19_usize, _19), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: u128,mut _2: *const isize,mut _3: [isize; 5],mut _4: *mut *const u8,mut _5: i128,mut _6: u64,mut _7: u64,mut _8: isize,mut _9: isize,mut _10: (i16, u16, i16, char, [isize; 2]),mut _11: (*mut *const u8, f32),mut _12: i16) -> u8 {
mir! {
type RET = u8;
let _13: *mut [i32; 6];
let _14: Adt55;
let _15: usize;
let _16: [isize; 5];
let _17: Adt56;
let _18: Adt56;
let _19: Adt61;
let _20: u64;
let _21: Adt47;
let _22: isize;
let _23: [i16; 5];
let _24: f32;
let _25: [isize; 2];
let _26: f64;
let _27: ([isize; 5], *const [usize; 3], char, *const isize, *const u8, u128);
let _28: f32;
let _29: u16;
let _30: (usize, i128);
let _31: Adt61;
let _32: (i16, u16, i16, char, [isize; 2]);
let _33: char;
let _34: i8;
let _35: ();
let _36: ();
{
_2 = core::ptr::addr_of!((*_2));
_10.1 = 53193_u16 % 30099_u16;
RET = !20_u8;
_3 = [_9,(*_2),_8,_9,(*_2)];
Goto(bb1)
}
bb1 = {
_10.3 = '\u{4bbf9}';
_7 = _5 as u64;
_11.1 = 52_u8 as f32;
_10.1 = !36667_u16;
_3 = [(*_2),_9,_9,_9,(*_2)];
_11.1 = _6 as f32;
_2 = core::ptr::addr_of!((*_2));
(*_2) = !_9;
_1 = 284121625579055303391473071683784716416_u128;
(*_2) = !_9;
_9 = (*_2) >> (*_2);
_11.0 = core::ptr::addr_of_mut!((*_4));
_10.0 = (*_2) as i16;
_14.fld1.1 = _10.1 - _10.1;
_2 = core::ptr::addr_of!(_8);
_14.fld1.2 = _12 + _10.2;
_14.fld1.2 = !_10.0;
_10.4 = [_8,_9];
RET = !122_u8;
_10.4 = [_9,(*_2)];
_14.fld1.0 = _10.2 ^ _10.2;
_14.fld1.0 = _10.2 & _10.2;
Goto(bb2)
}
bb2 = {
_4 = core::ptr::addr_of_mut!((*_4));
RET = 197_u8 & 103_u8;
_10.4 = [_8,_8];
_14.fld1 = _10;
_15 = 9252446653514937965_usize;
_7 = _6 | _6;
_18.fld0 = -(*_2);
_9 = (*_2) ^ _8;
_14.fld1.3 = _10.3;
_14.fld0 = _1 as u8;
_11.0 = core::ptr::addr_of_mut!((*_4));
_1 = 204243045662850883437862961550420256068_u128 % 131731260534904526084237611895207856500_u128;
_10.2 = _12;
_12 = !_14.fld1.2;
RET = !_14.fld0;
_8 = _9;
_14.fld1 = _10;
_16 = _3;
RET = _14.fld0;
_17.fld1 = _10.4;
Goto(bb3)
}
bb3 = {
_19.fld3 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_19.fld0.3 = _14.fld1.3;
_8 = _9;
_19.fld1 = !_14.fld1.1;
_21.fld1.1 = _5;
_10.2 = _12;
(*_2) = -_9;
(*_2) = _14.fld0 as isize;
_21.fld1.0 = _15 << _7;
_19.fld0.0 = _12;
(*_4) = core::ptr::addr_of!(_14.fld0);
_19.fld3 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_18 = Adt56 { fld0: _9,fld1: _10.4 };
_19.fld2.0 = [_7,_6,_7,_6,_6];
_11.1 = (-17_i8) as f32;
_18.fld0 = (*_2) | _8;
match _15 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9252446653514937965 => bb9,
_ => bb8
}
}
bb4 = {
_4 = core::ptr::addr_of_mut!((*_4));
RET = 197_u8 & 103_u8;
_10.4 = [_8,_8];
_14.fld1 = _10;
_15 = 9252446653514937965_usize;
_7 = _6 | _6;
_18.fld0 = -(*_2);
_9 = (*_2) ^ _8;
_14.fld1.3 = _10.3;
_14.fld0 = _1 as u8;
_11.0 = core::ptr::addr_of_mut!((*_4));
_1 = 204243045662850883437862961550420256068_u128 % 131731260534904526084237611895207856500_u128;
_10.2 = _12;
_12 = !_14.fld1.2;
RET = !_14.fld0;
_8 = _9;
_14.fld1 = _10;
_16 = _3;
RET = _14.fld0;
_17.fld1 = _10.4;
Goto(bb3)
}
bb5 = {
_10.3 = '\u{4bbf9}';
_7 = _5 as u64;
_11.1 = 52_u8 as f32;
_10.1 = !36667_u16;
_3 = [(*_2),_9,_9,_9,(*_2)];
_11.1 = _6 as f32;
_2 = core::ptr::addr_of!((*_2));
(*_2) = !_9;
_1 = 284121625579055303391473071683784716416_u128;
(*_2) = !_9;
_9 = (*_2) >> (*_2);
_11.0 = core::ptr::addr_of_mut!((*_4));
_10.0 = (*_2) as i16;
_14.fld1.1 = _10.1 - _10.1;
_2 = core::ptr::addr_of!(_8);
_14.fld1.2 = _12 + _10.2;
_14.fld1.2 = !_10.0;
_10.4 = [_8,_9];
RET = !122_u8;
_10.4 = [_9,(*_2)];
_14.fld1.0 = _10.2 ^ _10.2;
_14.fld1.0 = _10.2 & _10.2;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14 = Adt55 { fld0: 113_u8,fld1: _10 };
_6 = _7;
_27.5 = _1;
_14.fld1.2 = _19.fld0.0;
_19.fld0.4 = _18.fld1;
_21.fld0 = core::ptr::addr_of_mut!(_6);
(*_2) = _10.3 as isize;
_11.0 = _4;
_27.0 = [_9,_18.fld0,_9,(*_2),_9];
_19.fld0.0 = _14.fld1.2;
_9 = _27.5 as isize;
_28 = _11.1 - _11.1;
_19.fld0.2 = !_19.fld0.0;
_27.5 = _1 | _1;
_29 = _19.fld1;
_17.fld1 = [_9,_9];
_22 = _14.fld0 as isize;
_10.4 = [_22,(*_2)];
match _14.fld0 {
0 => bb10,
1 => bb11,
2 => bb12,
113 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_4 = core::ptr::addr_of_mut!((*_4));
RET = 197_u8 & 103_u8;
_10.4 = [_8,_8];
_14.fld1 = _10;
_15 = 9252446653514937965_usize;
_7 = _6 | _6;
_18.fld0 = -(*_2);
_9 = (*_2) ^ _8;
_14.fld1.3 = _10.3;
_14.fld0 = _1 as u8;
_11.0 = core::ptr::addr_of_mut!((*_4));
_1 = 204243045662850883437862961550420256068_u128 % 131731260534904526084237611895207856500_u128;
_10.2 = _12;
_12 = !_14.fld1.2;
RET = !_14.fld0;
_8 = _9;
_14.fld1 = _10;
_16 = _3;
RET = _14.fld0;
_17.fld1 = _10.4;
Goto(bb3)
}
bb14 = {
_24 = _27.5 as f32;
_11.1 = _28;
_21.fld1.0 = _14.fld0 as usize;
_25 = [_22,_9];
_14.fld1.3 = _10.3;
_7 = !_6;
_5 = -_21.fld1.1;
_27.5 = (-3847993139855094313_i64) as u128;
_27.3 = core::ptr::addr_of!(_22);
_21.fld0 = core::ptr::addr_of_mut!(_7);
_3 = [_9,_18.fld0,_9,_8,_22];
_32.1 = _19.fld1 / 57548_u16;
_31.fld1 = _32.1 + _10.1;
_27.0 = _16;
_4 = core::ptr::addr_of_mut!((*_4));
_27.4 = core::ptr::addr_of!(_14.fld0);
_2 = _27.3;
_31.fld0.1 = _29 << _19.fld0.0;
_16 = _3;
_23 = [_19.fld0.2,_19.fld0.2,_12,_19.fld0.0,_19.fld0.2];
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(12_usize, 15_usize, Move(_15), 12_usize, Move(_12), 29_usize, Move(_29), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(12_usize, 8_usize, Move(_8), 23_usize, Move(_23), 16_usize, Move(_16), 36_usize, _36), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: ([isize; 2],),mut _2: Adt49,mut _3: Adt49,mut _4: [isize; 2],mut _5: *const u8,mut _6: Adt49,mut _7: ([isize; 2],),mut _8: char,mut _9: [isize; 2],mut _10: Adt49,mut _11: ([isize; 2],),mut _12: [isize; 2],mut _13: *mut i128,mut _14: char,mut _15: [i16; 5],mut _16: i128) -> isize {
mir! {
type RET = isize;
let _17: Adt59;
let _18: ([isize; 2],);
let _19: [isize; 2];
let _20: Adt55;
let _21: i16;
let _22: ([u64; 5], [u8; 7]);
let _23: *mut *mut [i32; 6];
let _24: (usize, i128);
let _25: [i32; 5];
let _26: bool;
let _27: [i32; 6];
let _28: u64;
let _29: char;
let _30: Adt49;
let _31: f64;
let _32: char;
let _33: Adt56;
let _34: usize;
let _35: ([u64; 5], [u8; 7]);
let _36: *mut *const u8;
let _37: [i32; 6];
let _38: f64;
let _39: [u8; 8];
let _40: [isize; 2];
let _41: isize;
let _42: i8;
let _43: isize;
let _44: u32;
let _45: Adt58;
let _46: ();
let _47: ();
{
RET = (-9223372036854775808_isize);
_3.fld0.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_17.fld6 = [702026060_i32,1510021262_i32,(-1551675591_i32),(-937316064_i32),(-1689263212_i32)];
_2 = Adt49 { fld0: _11,fld1: _13 };
_4 = [(-18_isize),(-9223372036854775808_isize)];
_3.fld1 = core::ptr::addr_of_mut!((*_13));
_2.fld0.0 = [(-9223372036854775808_isize),9223372036854775807_isize];
_4 = [(-6_isize),9223372036854775807_isize];
_17.fld2 = core::ptr::addr_of!((*_5));
_18.0 = [9223372036854775807_isize,(-75_isize)];
_17.fld4.fld0 = (*_13) as u64;
(*_5) = 227_u8;
_19 = [9223372036854775807_isize,9223372036854775807_isize];
_6 = Adt49 { fld0: _18,fld1: _2.fld1 };
_20.fld1.0 = !27678_i16;
_18.0 = _6.fld0.0;
_18.0 = [9223372036854775807_isize,(-5_isize)];
(*_13) = _16;
_22.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
_1 = (_7.0,);
_20.fld1.4 = [9223372036854775807_isize,(-9223372036854775808_isize)];
Goto(bb1)
}
bb1 = {
_6.fld1 = core::ptr::addr_of_mut!((*_13));
_25 = [788737473_i32,646558701_i32,(-583912261_i32),275844345_i32,(-960587107_i32)];
_10.fld1 = _6.fld1;
(*_5) = (-553459368_i32) as u8;
_17.fld2 = _5;
RET = (*_5) as isize;
_24.0 = _20.fld1.0 as usize;
_10 = Adt49 { fld0: _3.fld0,fld1: _3.fld1 };
_22.0 = [_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0];
_17.fld0 = false;
_21 = _16 as i16;
_17.fld4.fld1.1 = 1178202691_i32 as f32;
Goto(bb2)
}
bb2 = {
_20.fld1.2 = _21;
_15 = [_20.fld1.0,_20.fld1.2,_20.fld1.0,_21,_21];
_16 = 215911404602023406427888037380981963744_u128 as i128;
_30.fld0 = (_19,);
_30.fld1 = core::ptr::addr_of_mut!((*_13));
_25 = [(-64735968_i32),1665401152_i32,496297523_i32,975288661_i32,696414127_i32];
_30.fld1 = _3.fld1;
_2.fld0 = (_3.fld0.0,);
_17.fld4.fld0 = !15806213577227662173_u64;
_22.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
Goto(bb3)
}
bb3 = {
(*_5) = _17.fld0 as u8;
Call(_6.fld0 = fn14(_12, _3.fld1, _10.fld0, _17.fld2, _17.fld6, (*_5), _19, _8, _6.fld1, _11, _11, _17.fld6), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_27 = [1068474501_i32,(-454927387_i32),(-570265968_i32),(-1878831398_i32),(-372894837_i32),1155038071_i32];
_7 = (_19,);
_18 = (_9,);
_10 = Adt49 { fld0: _7,fld1: _13 };
_33.fld0 = _17.fld4.fld0 as isize;
_29 = _14;
_33 = Adt56 { fld0: 9223372036854775807_isize,fld1: _2.fld0.0 };
match (*_13) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
151643577027451474838007384584397122815 => bb8,
_ => bb7
}
}
bb5 = {
(*_5) = _17.fld0 as u8;
Call(_6.fld0 = fn14(_12, _3.fld1, _10.fld0, _17.fld2, _17.fld6, (*_5), _19, _8, _6.fld1, _11, _11, _17.fld6), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_20.fld1.2 = _21;
_15 = [_20.fld1.0,_20.fld1.2,_20.fld1.0,_21,_21];
_16 = 215911404602023406427888037380981963744_u128 as i128;
_30.fld0 = (_19,);
_30.fld1 = core::ptr::addr_of_mut!((*_13));
_25 = [(-64735968_i32),1665401152_i32,496297523_i32,975288661_i32,696414127_i32];
_30.fld1 = _3.fld1;
_2.fld0 = (_3.fld0.0,);
_17.fld4.fld0 = !15806213577227662173_u64;
_22.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
Goto(bb3)
}
bb7 = {
_6.fld1 = core::ptr::addr_of_mut!((*_13));
_25 = [788737473_i32,646558701_i32,(-583912261_i32),275844345_i32,(-960587107_i32)];
_10.fld1 = _6.fld1;
(*_5) = (-553459368_i32) as u8;
_17.fld2 = _5;
RET = (*_5) as isize;
_24.0 = _20.fld1.0 as usize;
_10 = Adt49 { fld0: _3.fld0,fld1: _3.fld1 };
_22.0 = [_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0];
_17.fld0 = false;
_21 = _16 as i16;
_17.fld4.fld1.1 = 1178202691_i32 as f32;
Goto(bb2)
}
bb8 = {
_10 = _30;
_20.fld1.3 = _29;
Goto(bb9)
}
bb9 = {
_1 = (_9,);
Goto(bb10)
}
bb10 = {
_15 = [_21,_21,_20.fld1.0,_20.fld1.0,_21];
_28 = _17.fld4.fld0;
_1.0 = [_33.fld0,_33.fld0];
_12 = _10.fld0.0;
_3 = Adt49 { fld0: _2.fld0,fld1: _2.fld1 };
_30.fld0.0 = _10.fld0.0;
_30.fld0 = (_18.0,);
_6.fld1 = _3.fld1;
_17.fld0 = !false;
_18 = _3.fld0;
_36 = core::ptr::addr_of_mut!(_5);
_9 = [_33.fld0,_33.fld0];
_10.fld0 = (_18.0,);
(*_5) = !16_u8;
_4 = [_33.fld0,_33.fld0];
_3.fld0 = _2.fld0;
_20.fld1.3 = _29;
_18.0 = _2.fld0.0;
_12 = [_33.fld0,_33.fld0];
_37 = _27;
_10.fld0.0 = [_33.fld0,_33.fld0];
_6.fld0.0 = [_33.fld0,_33.fld0];
_28 = _20.fld1.2 as u64;
_35.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
_20.fld1 = (_21, 37868_u16, _21, _8, _10.fld0.0);
_35.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
match (*_13) {
0 => bb1,
151643577027451474838007384584397122815 => bb12,
_ => bb11
}
}
bb11 = {
(*_5) = _17.fld0 as u8;
Call(_6.fld0 = fn14(_12, _3.fld1, _10.fld0, _17.fld2, _17.fld6, (*_5), _19, _8, _6.fld1, _11, _11, _17.fld6), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
_33 = Adt56 { fld0: (-9223372036854775808_isize),fld1: _4 };
_27 = _37;
_22.0 = [_28,_28,_17.fld4.fld0,_17.fld4.fld0,_28];
Goto(bb13)
}
bb13 = {
_2.fld1 = core::ptr::addr_of_mut!((*_13));
_27 = [17318688_i32,(-350724314_i32),(-909938918_i32),(-756272988_i32),996931921_i32,469200120_i32];
_16 = (*_13);
_27 = [(-486589004_i32),691837747_i32,(-279446685_i32),1234212946_i32,(-1235701695_i32),(-1571585179_i32)];
_13 = core::ptr::addr_of_mut!((*_13));
_19 = [_33.fld0,_33.fld0];
_2 = Adt49 { fld0: _10.fld0,fld1: _6.fld1 };
_17.fld4.fld1.0 = core::ptr::addr_of_mut!((*_36));
_20.fld1 = (_21, 53036_u16, _21, _8, _11.0);
_15 = [_20.fld1.0,_20.fld1.2,_20.fld1.0,_20.fld1.2,_21];
_39 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
_24 = (5_usize, _16);
_24.0 = !2_usize;
_9 = [_33.fld0,_33.fld0];
_27 = [(-682253481_i32),1114239311_i32,(-2115529615_i32),189097285_i32,(-184534126_i32),(-990901012_i32)];
_17.fld4.fld1.0 = core::ptr::addr_of_mut!((*_36));
_36 = _17.fld4.fld1.0;
_20.fld1.1 = (*_5) as u16;
_7.0 = _20.fld1.4;
_16 = _24.1 & (*_13);
_3.fld0.0 = _33.fld1;
_20.fld1.4 = [_33.fld0,_33.fld0];
_20.fld1.0 = _20.fld1.2;
_20.fld0 = (*_5);
match _33.fld0 {
0 => bb7,
1 => bb12,
2 => bb3,
3 => bb14,
4 => bb15,
340282366920938463454151235394913435648 => bb17,
_ => bb16
}
}
bb14 = {
_20.fld1.2 = _21;
_15 = [_20.fld1.0,_20.fld1.2,_20.fld1.0,_21,_21];
_16 = 215911404602023406427888037380981963744_u128 as i128;
_30.fld0 = (_19,);
_30.fld1 = core::ptr::addr_of_mut!((*_13));
_25 = [(-64735968_i32),1665401152_i32,496297523_i32,975288661_i32,696414127_i32];
_30.fld1 = _3.fld1;
_2.fld0 = (_3.fld0.0,);
_17.fld4.fld0 = !15806213577227662173_u64;
_22.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
Goto(bb3)
}
bb15 = {
_6.fld1 = core::ptr::addr_of_mut!((*_13));
_25 = [788737473_i32,646558701_i32,(-583912261_i32),275844345_i32,(-960587107_i32)];
_10.fld1 = _6.fld1;
(*_5) = (-553459368_i32) as u8;
_17.fld2 = _5;
RET = (*_5) as isize;
_24.0 = _20.fld1.0 as usize;
_10 = Adt49 { fld0: _3.fld0,fld1: _3.fld1 };
_22.0 = [_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0,_17.fld4.fld0];
_17.fld0 = false;
_21 = _16 as i16;
_17.fld4.fld1.1 = 1178202691_i32 as f32;
Goto(bb2)
}
bb16 = {
_15 = [_21,_21,_20.fld1.0,_20.fld1.0,_21];
_28 = _17.fld4.fld0;
_1.0 = [_33.fld0,_33.fld0];
_12 = _10.fld0.0;
_3 = Adt49 { fld0: _2.fld0,fld1: _2.fld1 };
_30.fld0.0 = _10.fld0.0;
_30.fld0 = (_18.0,);
_6.fld1 = _3.fld1;
_17.fld0 = !false;
_18 = _3.fld0;
_36 = core::ptr::addr_of_mut!(_5);
_9 = [_33.fld0,_33.fld0];
_10.fld0 = (_18.0,);
(*_5) = !16_u8;
_4 = [_33.fld0,_33.fld0];
_3.fld0 = _2.fld0;
_20.fld1.3 = _29;
_18.0 = _2.fld0.0;
_12 = [_33.fld0,_33.fld0];
_37 = _27;
_10.fld0.0 = [_33.fld0,_33.fld0];
_6.fld0.0 = [_33.fld0,_33.fld0];
_28 = _20.fld1.2 as u64;
_35.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
_20.fld1 = (_21, 37868_u16, _21, _8, _10.fld0.0);
_35.1 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
match (*_13) {
0 => bb1,
151643577027451474838007384584397122815 => bb12,
_ => bb11
}
}
bb17 = {
_35 = (_22.0, _22.1);
_45.fld4.fld1.0 = _17.fld4.fld1.0;
_33 = Adt56 { fld0: (-30_isize),fld1: _20.fld1.4 };
_35.0 = [_28,_17.fld4.fld0,_28,_28,_28];
_31 = _16 as f64;
_25 = [(-1276886995_i32),(-1563038113_i32),528610977_i32,(-1959583619_i32),(-80190368_i32)];
_17.fld4.fld0 = _28;
_20.fld1.0 = _20.fld1.2;
_22 = _35;
_40 = _19;
_45.fld0.fld1 = [_33.fld0,_33.fld0];
_3.fld0 = (_45.fld0.fld1,);
_33.fld1 = _20.fld1.4;
_17.fld4.fld1.0 = core::ptr::addr_of_mut!((*_36));
_35.1 = [(*_5),_20.fld0,(*_5),(*_5),_20.fld0,(*_5),(*_5)];
_45.fld4.fld1.1 = -_17.fld4.fld1.1;
_45.fld0.fld0 = _33.fld0 | _33.fld0;
_11.0 = [_45.fld0.fld0,_45.fld0.fld0];
_5 = core::ptr::addr_of!((*_5));
_45.fld4.fld1.0 = core::ptr::addr_of_mut!(_17.fld2);
Goto(bb18)
}
bb18 = {
Call(_46 = dump_var(13_usize, 19_usize, Move(_19), 11_usize, Move(_11), 15_usize, Move(_15), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_46 = dump_var(13_usize, 8_usize, Move(_8), 4_usize, Move(_4), 7_usize, Move(_7), 22_usize, Move(_22)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_46 = dump_var(13_usize, 14_usize, Move(_14), 24_usize, Move(_24), 29_usize, Move(_29), 47_usize, _47), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [isize; 2],mut _2: *mut i128,mut _3: ([isize; 2],),mut _4: *const u8,mut _5: [i32; 5],mut _6: u8,mut _7: [isize; 2],mut _8: char,mut _9: *mut i128,mut _10: ([isize; 2],),mut _11: ([isize; 2],),mut _12: [i32; 5]) -> ([isize; 2],) {
mir! {
type RET = ([isize; 2],);
let _13: *const [usize; 3];
let _14: [u64; 5];
let _15: [i32; 5];
let _16: [i32; 6];
let _17: isize;
let _18: f64;
let _19: Adt48;
let _20: *mut [i32; 6];
let _21: i64;
let _22: (i16, u16, i16, char, [isize; 2]);
let _23: [i32; 3];
let _24: [i16; 5];
let _25: isize;
let _26: [usize; 3];
let _27: (i16, u16, i16, char, [isize; 2]);
let _28: u32;
let _29: [u8; 8];
let _30: *mut bool;
let _31: f32;
let _32: ();
let _33: ();
{
(*_2) = 160381248067289257481022824291457553054_i128;
RET.0 = _1;
_7 = [111_isize,(-16_isize)];
_11.0 = [58_isize,(-64_isize)];
_11 = _10;
_1 = _10.0;
_5 = _12;
_10.0 = [(-9223372036854775808_isize),(-120_isize)];
_14 = [4239139764846560230_u64,12894318507659643866_u64,274874207763598214_u64,10218591175092337242_u64,10938906622749094659_u64];
_7 = [9223372036854775807_isize,9223372036854775807_isize];
_8 = '\u{15337}';
_7 = _3.0;
_8 = '\u{b20f6}';
RET.0 = [(-9223372036854775808_isize),108_isize];
_19.fld5.3 = core::ptr::addr_of!(_17);
_19.fld5.0 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_19.fld5.0 = [(-37_isize),(-88_isize),9223372036854775807_isize,125_isize,9223372036854775807_isize];
_9 = _2;
_8 = '\u{26ff0}';
_4 = core::ptr::addr_of!(_6);
match (*_2) {
0 => bb1,
1 => bb2,
2 => bb3,
160381248067289257481022824291457553054 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5 = _12;
(*_2) = 3941835059763979434_i64 as i128;
_19.fld1 = [22961_i16,16728_i16,29047_i16,8265_i16,28997_i16];
_19.fld0 = [_6,_6,(*_4)];
_11.0 = _3.0;
_10 = _3;
(*_9) = 151643577027451474838007384584397122815_i128;
_1 = [9223372036854775807_isize,(-98_isize)];
_22.3 = _8;
_22 = (31085_i16, 30971_u16, (-20045_i16), _8, _11.0);
_7 = _3.0;
_19.fld5.1 = core::ptr::addr_of!(_19.fld7);
_12 = [(-1005789833_i32),797960543_i32,1569671358_i32,1323183286_i32,(-1238512831_i32)];
_14 = [10816173287604333645_u64,13804892036713338420_u64,13969502344436228439_u64,1804838356608831641_u64,5763291920939748235_u64];
_13 = core::ptr::addr_of!(_19.fld7);
_19.fld0 = [(*_4),_6,(*_4)];
_19.fld2 = core::ptr::addr_of!(_25);
_19.fld0 = [(*_4),(*_4),(*_4)];
_19.fld5.4 = core::ptr::addr_of!(_6);
_27.1 = !_22.1;
_25 = 123_isize;
_3.0 = [_25,_25];
_25 = (-47_i8) as isize;
match _22.1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
30971 => bb13,
_ => bb12
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_27.0 = 175948187744166699500336438808748096248_u128 as i16;
_18 = _22.0 as f64;
_13 = core::ptr::addr_of!((*_13));
_12 = _5;
_19.fld6 = core::ptr::addr_of!((*_13));
_15 = _5;
_3.0 = [_25,_25];
_27.3 = _22.3;
_28 = 2613415217_u32 ^ 2276634768_u32;
_27.0 = _22.0 | _22.2;
_19.fld6 = core::ptr::addr_of!(_19.fld7);
_4 = _19.fld5.4;
_19.fld5.5 = !196639122808948744947724691625057768893_u128;
_23 = [1989338117_i32,(-1835808372_i32),2070637164_i32];
RET.0 = _22.4;
_16 = [1098843052_i32,1282067289_i32,1434321565_i32,1250389130_i32,(-379616288_i32),(-499791293_i32)];
_19.fld5.3 = core::ptr::addr_of!(_17);
Goto(bb14)
}
bb14 = {
_8 = _22.3;
(*_13) = [6430600620462832684_usize,4_usize,1_usize];
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(14_usize, 16_usize, Move(_16), 3_usize, Move(_3), 25_usize, Move(_25), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(14_usize, 10_usize, Move(_10), 22_usize, Move(_22), 15_usize, Move(_15), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: [i16; 5],mut _3: *mut i128,mut _4: Adt49,mut _5: u16,mut _6: isize,mut _7: Adt49,mut _8: [isize; 2],mut _9: ([isize; 2],),mut _10: [isize; 2],mut _11: *mut i128) -> [u64; 5] {
mir! {
type RET = [u64; 5];
let _12: Adt47;
let _13: *mut i128;
let _14: i128;
let _15: char;
let _16: Adt55;
let _17: u128;
let _18: f32;
let _19: [isize; 2];
let _20: Adt53;
let _21: ([u64; 5], [u8; 7]);
let _22: [i32; 6];
let _23: Adt57;
let _24: [u8; 3];
let _25: i16;
let _26: u16;
let _27: i64;
let _28: (i16, u16, i16, char, [isize; 2]);
let _29: [u64; 6];
let _30: [u64; 5];
let _31: *const u8;
let _32: [u8; 3];
let _33: Adt53;
let _34: *mut *mut [i32; 6];
let _35: Adt55;
let _36: i64;
let _37: (i16, u16, i16, char, [isize; 2]);
let _38: (usize, i128);
let _39: f64;
let _40: i64;
let _41: bool;
let _42: isize;
let _43: [u8; 7];
let _44: usize;
let _45: ();
let _46: ();
{
_7.fld0.0 = [_6,_6];
_4 = _7;
_4.fld0 = (_10,);
_12.fld1 = (3_usize, (*_11));
_8 = _9.0;
_4.fld0.0 = [_6,_6];
_2 = [(-7344_i16),(-26052_i16),10249_i16,(-9870_i16),(-2653_i16)];
_13 = _7.fld1;
RET = [3896870982116654844_u64,10300948010073193636_u64,1353216416757331439_u64,3102488381690655298_u64,8393924528170281040_u64];
RET = [11930945863620602207_u64,4200601472245458387_u64,13379387876136562973_u64,9839815261766598038_u64,4011884110378623241_u64];
_4.fld0.0 = [_6,_6];
_6 = (-24_isize) | (-102_isize);
_12.fld1.0 = !13248967461380231540_usize;
(*_3) = _12.fld1.1 | _12.fld1.1;
_4.fld1 = core::ptr::addr_of_mut!((*_13));
_6 = 43_isize;
_1 = !false;
_7 = _4;
_14 = 592027887879210767_u64 as i128;
_8 = [_6,_6];
_7.fld1 = core::ptr::addr_of_mut!((*_11));
_7.fld1 = core::ptr::addr_of_mut!((*_11));
_7 = _4;
_4.fld0 = _9;
RET = [17062445412843482012_u64,5781083734994119937_u64,11675667206203860866_u64,11383395234366069091_u64,14643248620523854698_u64];
_6 = (-9223372036854775808_isize);
_16.fld1 = ((-20588_i16), _5, (-18096_i16), '\u{82bbd}', _10);
match _6 {
340282366920938463454151235394913435648 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
(*_13) = -_14;
_5 = _16.fld1.1 - _16.fld1.1;
RET = [3611106413214426251_u64,4423223730282330115_u64,15640359590176270480_u64,14157552697422688910_u64,8760671444842794665_u64];
_16.fld1.4 = [_6,_6];
_7.fld0.0 = [_6,_6];
_14 = !_12.fld1.1;
_8 = [_6,_6];
_4.fld0.0 = _9.0;
_15 = _16.fld1.3;
_4.fld1 = _3;
(*_13) = _12.fld1.1;
_10 = [_6,_6];
_7.fld0 = _4.fld0;
_8 = [_6,_6];
_7.fld0.0 = [_6,_6];
(*_13) = _14;
_15 = _16.fld1.3;
_16.fld1.1 = !_5;
(*_3) = _12.fld1.1;
(*_11) = _14 - _14;
_6 = (-81_isize);
_16.fld1.2 = _16.fld1.0;
_16.fld0 = 2_u8;
_7 = _4;
_16.fld1.3 = _15;
(*_13) = _16.fld0 as i128;
_16.fld1.1 = _5 << _12.fld1.0;
_18 = (-1465769380_i32) as f32;
_2 = [_16.fld1.0,_16.fld1.2,_16.fld1.0,_16.fld1.2,_16.fld1.0];
Goto(bb3)
}
bb3 = {
_5 = _16.fld1.1;
(*_3) = _12.fld1.1 << _5;
_12.fld1 = (2677011969535435857_usize, (*_13));
_7.fld0 = (_8,);
RET = [3588548070344324176_u64,11768389720429854012_u64,874003301275473862_u64,14372997441327029035_u64,3151481560314979500_u64];
_13 = core::ptr::addr_of_mut!((*_3));
_16.fld1 = ((-10879_i16), _5, (-10769_i16), _15, _9.0);
match _12.fld1.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
2677011969535435857 => bb9,
_ => bb8
}
}
bb4 = {
(*_13) = -_14;
_5 = _16.fld1.1 - _16.fld1.1;
RET = [3611106413214426251_u64,4423223730282330115_u64,15640359590176270480_u64,14157552697422688910_u64,8760671444842794665_u64];
_16.fld1.4 = [_6,_6];
_7.fld0.0 = [_6,_6];
_14 = !_12.fld1.1;
_8 = [_6,_6];
_4.fld0.0 = _9.0;
_15 = _16.fld1.3;
_4.fld1 = _3;
(*_13) = _12.fld1.1;
_10 = [_6,_6];
_7.fld0 = _4.fld0;
_8 = [_6,_6];
_7.fld0.0 = [_6,_6];
(*_13) = _14;
_15 = _16.fld1.3;
_16.fld1.1 = !_5;
(*_3) = _12.fld1.1;
(*_11) = _14 - _14;
_6 = (-81_isize);
_16.fld1.2 = _16.fld1.0;
_16.fld0 = 2_u8;
_7 = _4;
_16.fld1.3 = _15;
(*_13) = _16.fld0 as i128;
_16.fld1.1 = _5 << _12.fld1.0;
_18 = (-1465769380_i32) as f32;
_2 = [_16.fld1.0,_16.fld1.2,_16.fld1.0,_16.fld1.2,_16.fld1.0];
Goto(bb3)
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = [_16.fld1.0,_16.fld1.2,_16.fld1.0,_16.fld1.2,_16.fld1.2];
Goto(bb10)
}
bb10 = {
_3 = _4.fld1;
match _16.fld1.0 {
340282366920938463463374607431768200577 => bb11,
_ => bb6
}
}
bb11 = {
_20.fld1.fld0 = (_16.fld1.4,);
_20.fld1 = _4;
_21.1 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0];
_7.fld1 = core::ptr::addr_of_mut!((*_3));
_9.0 = [_6,_6];
_20.fld1.fld0 = (_7.fld0.0,);
RET = [13991051275197157997_u64,13148672268073833856_u64,15136391604220484819_u64,9416405106014408660_u64,17729763755604031834_u64];
_20.fld2 = _9;
_20.fld2.0 = _16.fld1.4;
_26 = _5 | _5;
_4.fld1 = core::ptr::addr_of_mut!(_14);
_2 = [_16.fld1.0,_16.fld1.2,_16.fld1.2,_16.fld1.2,_16.fld1.2];
_14 = _16.fld0 as i128;
_4.fld1 = _13;
_12.fld1.0 = 4_usize;
(*_11) = _12.fld1.1;
(*_11) = _12.fld1.1;
_17 = 144319181613718786617404633527638974466_u128 * 134708283758136827013384313243043730185_u128;
_12.fld1 = (9972535950478077335_usize, (*_11));
_4.fld0 = _20.fld2;
_24 = [_16.fld0,_16.fld0,_16.fld0];
_16.fld1 = (10096_i16, _5, 17431_i16, _15, _4.fld0.0);
_27 = -(-1727113498199251823_i64);
_9 = _20.fld1.fld0;
_6 = _18 as isize;
_29 = [11623861733222365868_u64,11041981169958168256_u64,11803616969736487846_u64,9778666035488759511_u64,9394741795506525786_u64,4334711553854928111_u64];
Goto(bb12)
}
bb12 = {
_20.fld0 = core::ptr::addr_of_mut!(_1);
_28.2 = !_16.fld1.2;
_19 = [_6,_6];
RET = [17820152974869039868_u64,5719003212013049006_u64,17081487645265859649_u64,13089655801778945534_u64,12891355075685550565_u64];
_4 = Adt49 { fld0: _20.fld1.fld0,fld1: _13 };
_21.1 = [_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0,_16.fld0];
RET = [647397575258296135_u64,7930213064631849512_u64,5943951800928700006_u64,2613267179242568187_u64,16329626122187852663_u64];
RET = [12776022516374001521_u64,4300001828890284183_u64,17951881973345397606_u64,3735512439757712643_u64,8742666133684098528_u64];
_12.fld1 = (3_usize, (*_13));
_28.4 = [_6,_6];
_33.fld1.fld0.0 = _20.fld2.0;
_35.fld0 = _16.fld0 | _16.fld0;
_16.fld1.0 = -_28.2;
_35.fld1.2 = _28.2 << _26;
_33.fld0 = core::ptr::addr_of_mut!(_1);
_33.fld2 = _9;
_20.fld1.fld0.0 = [_6,_6];
_33.fld1 = Adt49 { fld0: _20.fld1.fld0,fld1: _11 };
_15 = _16.fld1.3;
match _12.fld1.0 {
0 => bb1,
1 => bb3,
3 => bb14,
_ => bb13
}
}
bb13 = {
_2 = [_16.fld1.0,_16.fld1.2,_16.fld1.0,_16.fld1.2,_16.fld1.2];
Goto(bb10)
}
bb14 = {
_14 = _1 as i128;
_38.1 = _15 as i128;
_35.fld1.3 = _15;
_4 = _33.fld1;
_28.2 = -_35.fld1.2;
_36 = _18 as i64;
_38.1 = _1 as i128;
_16.fld1.3 = _15;
_1 = !true;
_9.0 = [_6,_6];
_30 = [17504948650794915947_u64,2894708818053772397_u64,4941816629364293057_u64,3119690962567580527_u64,16074116172346567204_u64];
_33.fld2 = (_33.fld1.fld0.0,);
_21.0 = [2276871261205704150_u64,18181528740888504937_u64,72465229218755306_u64,10029517739830793946_u64,592986228526249008_u64];
_37.3 = _15;
_23.fld0 = 3336354415_u32 >> (*_11);
_16.fld1.4 = [_6,_6];
_18 = 8708677634902484914_u64 as f32;
_24 = [_35.fld0,_35.fld0,_35.fld0];
_28.3 = _37.3;
_19 = [_6,_6];
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(15_usize, 36_usize, Move(_36), 8_usize, Move(_8), 15_usize, Move(_15), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(15_usize, 27_usize, Move(_27), 9_usize, Move(_9), 21_usize, Move(_21), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(15_usize, 30_usize, Move(_30), 46_usize, _46, 46_usize, _46, 46_usize, _46), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: (i16, u16, i16, char, [isize; 2]),mut _2: [isize; 2],mut _3: *const isize,mut _4: [i16; 5],mut _5: *const isize,mut _6: *const [usize; 3],mut _7: [isize; 2],mut _8: Adt57,mut _9: isize,mut _10: u8,mut _11: Adt49) -> [usize; 3] {
mir! {
type RET = [usize; 3];
let _12: f32;
let _13: *mut u64;
let _14: [u64; 5];
let _15: [u8; 8];
let _16: (usize, i128);
let _17: [u64; 5];
let _18: ([u64; 5], [u8; 7]);
let _19: [isize; 5];
let _20: i32;
let _21: *mut u64;
let _22: [u64; 6];
let _23: Adt61;
let _24: f32;
let _25: *mut [i32; 6];
let _26: *mut i128;
let _27: [usize; 3];
let _28: [u64; 5];
let _29: *mut *mut [i32; 6];
let _30: ([isize; 2],);
let _31: f64;
let _32: i8;
let _33: f64;
let _34: [i32; 5];
let _35: *mut bool;
let _36: bool;
let _37: [isize; 2];
let _38: char;
let _39: ();
let _40: ();
{
_12 = 9573233602501580232_u64 as f32;
_8 = Adt57 { fld0: 436058575_u32 };
_1.3 = '\u{c2171}';
_14 = [12624998106017014492_u64,17720399239408092834_u64,6860130701741184096_u64,14130738268193630346_u64,12083047237196324747_u64];
(*_5) = _8.fld0 as isize;
_9 = -(*_3);
_7 = _2;
_15 = [_10,_10,_10,_10,_10,_10,_10,_10];
(*_6) = [4_usize,10827410428695188755_usize,4_usize];
_11.fld0.0 = _1.4;
_16.1 = (-93930037087268734507680308134342986466_i128);
_15 = [_10,_10,_10,_10,_10,_10,_10,_10];
_4 = [_1.2,_1.0,_1.2,_1.0,_1.0];
_1.2 = _9 as i16;
_16.0 = _1.3 as usize;
_11.fld0 = (_7,);
_4 = [_1.2,_1.0,_1.2,_1.0,_1.0];
RET = [_16.0,_16.0,_16.0];
_6 = core::ptr::addr_of!((*_6));
(*_6) = [_16.0,_16.0,_16.0];
RET = (*_6);
(*_3) = _1.0 as isize;
_17 = [11538517412280856492_u64,3508309465497041119_u64,17558122292411213744_u64,16626586218382610211_u64,10585950101286067623_u64];
_1.2 = !_1.0;
match _16.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
246352329833669728955694299297425224990 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_18.1 = [_10,_10,_10,_10,_10,_10,_10];
_18.0 = _17;
RET = (*_6);
_18.0 = _17;
_5 = core::ptr::addr_of!((*_3));
(*_3) = _9;
_2 = _7;
(*_3) = _1.3 as isize;
_1.4 = [(*_5),(*_3)];
RET = [_16.0,_16.0,_16.0];
_19 = [(*_3),_9,(*_3),_9,_9];
_1.2 = _1.0;
_12 = _16.1 as f32;
_17 = [6076886610890168658_u64,11921797739088436093_u64,11350707488922941417_u64,17215660247341993727_u64,12884139826320561245_u64];
(*_3) = _9 & _9;
Goto(bb9)
}
bb9 = {
_8.fld0 = 8395644816199715218_u64 as u32;
_3 = core::ptr::addr_of!(_9);
RET = [_16.0,_16.0,_16.0];
(*_3) = (*_5) ^ (*_5);
_14 = [18084330756322642780_u64,14079507060078812009_u64,2503602404445272525_u64,8179229253657378967_u64,4549372849192427195_u64];
_1.0 = -_1.2;
_16.1 = 105631560907004337596618268392123886614_i128 >> _9;
_11.fld1 = core::ptr::addr_of_mut!(_16.1);
(*_3) = !(*_5);
_1.3 = '\u{e7d63}';
_1.3 = '\u{525b6}';
_23.fld4 = (*_6);
_22 = [6285216007169627185_u64,17028277447324936462_u64,14148673070480570099_u64,10660828540438725642_u64,12628968457537722905_u64,10265417536838217462_u64];
_23.fld0.4 = _11.fld0.0;
_4 = [_1.2,_1.0,_1.2,_1.0,_1.2];
_23 = Adt61 { fld0: _1,fld1: _1.1,fld2: _18,fld3: _18.1,fld4: (*_6) };
_16.0 = _1.3 as usize;
(*_6) = _23.fld4;
_1.3 = _23.fld0.3;
_23.fld0.2 = -_23.fld0.0;
_3 = core::ptr::addr_of!((*_3));
_19 = [_9,(*_3),(*_3),(*_3),(*_5)];
_23.fld0 = (_1.2, _23.fld1, _1.0, _1.3, _7);
Goto(bb10)
}
bb10 = {
_23.fld0.4 = [(*_3),(*_3)];
_7 = _2;
_17 = [17474743831316108318_u64,6110840716244002917_u64,5841975781272212439_u64,11060397394618758670_u64,5112038913882624173_u64];
_23.fld4 = [_16.0,_16.0,_16.0];
_1.0 = !_1.2;
_8.fld0 = 3786806621_u32;
_23.fld3 = _23.fld2.1;
_24 = _12 / (-0.0000000000000000000000000000000000000005613041128699487_f32);
_23.fld0.0 = !_23.fld0.2;
_15 = [_10,_10,_10,_10,_10,_10,_10,_10];
_1 = (_23.fld0.0, _23.fld0.1, _23.fld0.2, _23.fld0.3, _23.fld0.4);
_23.fld2.0 = _18.0;
_11.fld0 = (_1.4,);
_18.0 = [18271831562011406427_u64,610276424500545172_u64,5643372910917302463_u64,14958929285334018133_u64,10391976233675645171_u64];
_9 = (*_5);
_23.fld2.0 = [3937700435982387674_u64,10727172338192914528_u64,10421931169669503896_u64,15447389957001949821_u64,14639735478569622454_u64];
_18.0 = _23.fld2.0;
_19 = [(*_5),(*_5),(*_5),(*_3),(*_3)];
_14 = _23.fld2.0;
RET = [_16.0,_16.0,_16.0];
(*_6) = _23.fld4;
_19 = [(*_3),(*_3),(*_5),(*_5),(*_3)];
_18.1 = _23.fld2.1;
(*_3) = (-4543387144816354442_i64) as isize;
Goto(bb11)
}
bb11 = {
_18.0 = [727247437402268078_u64,14429906183978735410_u64,6760209371907394046_u64,5796532948612894090_u64,2964877144056530883_u64];
match _8.fld0 {
0 => bb10,
1 => bb2,
3786806621 => bb12,
_ => bb3
}
}
bb12 = {
_8 = Adt57 { fld0: 109703075_u32 };
(*_5) = (*_3);
RET = [_16.0,_16.0,_16.0];
_23.fld4 = [_16.0,_16.0,_16.0];
_23.fld2 = _18;
_23.fld4 = [_16.0,_16.0,_16.0];
_30 = (_23.fld0.4,);
_5 = core::ptr::addr_of!((*_3));
_23.fld2 = _18;
_6 = core::ptr::addr_of!((*_6));
_16.0 = 9607057149352432223_usize;
(*_6) = [_16.0,_16.0,_16.0];
(*_5) = 9223372036854775807_isize;
_8.fld0 = 2977998401_u32;
_23.fld0.0 = _23.fld0.2 | _23.fld0.2;
_24 = _12 * _12;
(*_3) = !9223372036854775807_isize;
_23 = Adt61 { fld0: _1,fld1: _1.1,fld2: _18,fld3: _18.1,fld4: (*_6) };
_23.fld2.0 = [16776548701940568516_u64,199190621715519017_u64,15043464296995579198_u64,10712999283302447536_u64,11565495694972959810_u64];
_27 = (*_6);
Goto(bb13)
}
bb13 = {
_33 = _10 as f64;
(*_5) = (-9223372036854775808_isize) | 9223372036854775807_isize;
_1 = (_23.fld0.2, _23.fld1, _23.fld0.0, _23.fld0.3, _11.fld0.0);
_23.fld0.0 = _23.fld0.2 * _1.2;
_23.fld0.0 = -_1.0;
_29 = core::ptr::addr_of_mut!(_25);
_11.fld1 = core::ptr::addr_of_mut!(_16.1);
_5 = core::ptr::addr_of!((*_3));
_6 = core::ptr::addr_of!(_27);
_7 = [(*_3),(*_3)];
_26 = core::ptr::addr_of_mut!(_16.1);
RET = [_16.0,_16.0,_16.0];
(*_3) = (-50_isize) + 104_isize;
Goto(bb14)
}
bb14 = {
_28 = [11288212131778586124_u64,16178309250721557104_u64,14792057360073825479_u64,12748994817940257410_u64,15103360923661766946_u64];
_31 = _33;
_23.fld0.2 = true as i16;
_12 = -_24;
_34 = [672191853_i32,(-842864055_i32),501582501_i32,(-2077717953_i32),1888527676_i32];
_12 = -_24;
_32 = (-100_i8) | (-20_i8);
_23.fld0.0 = -_1.2;
_8 = Adt57 { fld0: 1022316294_u32 };
_1.2 = _23.fld0.2;
_16 = (13043704306887664758_usize, 17131064741718284128866638766665182378_i128);
_1 = (_23.fld0.0, _23.fld0.1, _23.fld0.2, _23.fld0.3, _30.0);
_23.fld4 = (*_6);
_18 = _23.fld2;
(*_5) = 23_isize - (-9223372036854775808_isize);
_35 = core::ptr::addr_of_mut!(_36);
_23.fld0 = (_1.0, _1.1, _1.2, _1.3, _2);
_11.fld0.0 = _30.0;
_23.fld0.0 = -_23.fld0.2;
_22 = [4242455257818552382_u64,6689876937620982890_u64,415610713688622649_u64,5440397896339806652_u64,14258740365089971557_u64,10855998691500831303_u64];
_10 = 78_u8 / 2_u8;
_26 = core::ptr::addr_of_mut!((*_26));
_29 = core::ptr::addr_of_mut!(_25);
_16.1 = !(-115629118935915708524113532093428796343_i128);
_28 = [11540253225184107116_u64,3515363550749890123_u64,8601911669549419306_u64,10145222654347144190_u64,10615407068482649213_u64];
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(16_usize, 30_usize, Move(_30), 14_usize, Move(_14), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(16_usize, 32_usize, Move(_32), 10_usize, Move(_10), 2_usize, Move(_2), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(16_usize, 1_usize, Move(_1), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(10182423987173439611_u64), std::hint::black_box(98646482208078040246833966808919585050_u128), std::hint::black_box(76_isize), std::hint::black_box(121_i8), std::hint::black_box((-126224516142488603368111348755784199125_i128))));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt47 {
fld0: *mut u64,
fld1: (usize, i128),
}
#[derive(Debug)]
pub struct Adt48 {
fld0: [u8; 3],
fld1: [i16; 5],
fld2: *const isize,
fld3: [u8; 7],
fld4: i16,
fld5: ([isize; 5], *const [usize; 3], char, *const isize, *const u8, u128),
fld6: *const [usize; 3],
fld7: [usize; 3],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: ([isize; 2],),
fld1: *mut i128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: [u8; 8],
fld1: [i16; 5],
fld2: *const [usize; 3],
fld3: i8,
fld4: (*mut *const u8, f32),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: [isize; 5],
fld1: ((i16, u16, i16, char, [isize; 2]), *mut *const u8, ([u64; 5], [u8; 7]), f64, i16, *const u8),
fld2: u64,
fld3: i8,
fld4: Adt50,
fld5: i32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: *const isize,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: *mut bool,
fld1: Adt49,
fld2: ([isize; 2],),
fld3: *mut *mut [i32; 6],
}
#[derive(Debug)]
pub struct Adt54 {
fld0: u64,
fld1: (*mut *const u8, f32),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: u8,
fld1: (i16, u16, i16, char, [isize; 2]),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: isize,
fld1: [isize; 2],
}
#[derive(Debug)]
pub struct Adt57 {
fld0: u32,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: Adt56,
fld1: [u8; 7],
fld2: u32,
fld3: [isize; 2],
fld4: Adt54,
fld5: [u64; 5],
}
#[derive(Debug)]
pub struct Adt59 {
fld0: bool,
fld1: *const [usize; 3],
fld2: *const u8,
fld3: u128,
fld4: Adt54,
fld5: *const isize,
fld6: [i32; 5],
}
#[derive(Debug)]
pub struct Adt60 {
fld0: i128,
fld1: Adt48,
fld2: f32,
fld3: u16,
fld4: (*mut *const u8, f32),
fld5: [i32; 6],
}
#[derive(Debug)]
pub struct Adt61 {
fld0: (i16, u16, i16, char, [isize; 2]),
fld1: u16,
fld2: ([u64; 5], [u8; 7]),
fld3: [u8; 7],
fld4: [usize; 3],
}
#[derive(Debug)]
pub struct Adt62 {
fld0: Adt50,
fld1: [u64; 5],
fld2: usize,
fld3: Adt55,
fld4: [u8; 8],
fld5: *mut *const u8,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: Adt57,
fld1: *mut bool,
fld2: u128,
fld3: ([isize; 2],),
fld4: [i32; 5],
}

