#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: i128,mut _3: isize,mut _4: u64,mut _5: i16,mut _6: u16,mut _7: u32) -> i32 {
mir! {
type RET = i32;
let _8: usize;
let _9: Adt45;
let _10: f64;
let _11: [u8; 7];
let _12: isize;
let _13: u64;
let _14: *mut *mut f32;
let _15: f32;
let _16: [i8; 7];
let _17: [i64; 1];
let _18: Adt39;
let _19: isize;
let _20: [i8; 7];
let _21: bool;
let _22: f32;
let _23: ([isize; 7],);
let _24: [isize; 7];
let _25: (i8, *const isize, i128, i128, [i64; 1]);
let _26: Adt38;
let _27: f64;
let _28: isize;
let _29: [i32; 7];
let _30: Adt41;
let _31: &'static f64;
let _32: Adt52;
let _33: u8;
let _34: u32;
let _35: [i8; 7];
let _36: [i32; 7];
let _37: Adt38;
let _38: isize;
let _39: [i8; 7];
let _40: *const *const isize;
let _41: [isize; 7];
let _42: [u128; 3];
let _43: u16;
let _44: Adt54;
let _45: bool;
let _46: ();
let _47: ();
{
_4 = !5557928534956009394_u64;
_1 = false;
RET = _4 as i32;
_5 = -17700_i16;
_3 = (-9223372036854775808_isize);
_2 = !(-90245723868432026557839993648988016662_i128);
_8 = 6_usize;
_7 = 1797716095_u32;
Call(_4 = fn1(_7, _8, _5, _2, _1, _2, _3, _1, _8, _7, _3, _3, _1, _3, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = 38_isize << _4;
RET = '\u{7d4ac}' as i32;
RET = (-538030285_i32) | 1967743416_i32;
_9.fld3 = RET as f64;
_9.fld1 = '\u{e9693}';
_7 = 1585053016_u32 << _8;
_7 = 3642363396_u32 & 279770430_u32;
_2 = 102103717445684245872901040260548175166_u128 as i128;
_2 = (-130300700633067241340074992086679584072_i128);
_9.fld2 = core::ptr::addr_of_mut!(_1);
_11 = [62_u8,47_u8,205_u8,229_u8,204_u8,116_u8,194_u8];
_9.fld4 = _4;
_2 = 157749986306966664629991788501539296660_i128;
RET = 21763_u16 as i32;
_12 = _3 | _3;
match _2 {
0 => bb2,
157749986306966664629991788501539296660 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_9.fld1 = '\u{c1f85}';
_6 = _7 as u16;
_15 = 180616298410933941369589565016183564012_u128 as f32;
_9.fld3 = (-2293038909244473505_i64) as f64;
_9.fld7.0 = [_12,_12,_3,_12,_12,_12,_12];
_9.fld1 = '\u{10f1bd}';
_16 = [(-110_i8),106_i8,(-85_i8),(-50_i8),(-5_i8),44_i8,(-104_i8)];
_9.fld0 = !_7;
_10 = -_9.fld3;
_8 = _15 as usize;
_15 = RET as f32;
_2 = (-169347395057406037447129037184804554555_i128) + (-133407969896242019295028055116261346688_i128);
_17 = [6750515344252566293_i64];
_9.fld3 = _10 - _10;
_17 = [(-6880295693071438296_i64)];
_5 = (-20449_i16);
_6 = !46972_u16;
_3 = 92_u8 as isize;
_6 = _2 as u16;
_11 = [73_u8,208_u8,30_u8,48_u8,195_u8,22_u8,206_u8];
_17 = [(-7334281574081585383_i64)];
_8 = 17947545617902372541_usize;
_13 = !_4;
_1 = !true;
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
17947545617902372541 => bb7,
_ => bb6
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_22 = _15 + _15;
_24 = _9.fld7.0;
_3 = (-2564295021227398554_i64) as isize;
_23.0 = [_12,_12,_12,_12,_12,_12,_12];
_4 = RET as u64;
_7 = _9.fld0;
_1 = !true;
_2 = _9.fld4 as i128;
_25.2 = RET as i128;
_25.2 = _2;
Goto(bb8)
}
bb8 = {
_23.0 = _24;
_27 = _9.fld3 - _9.fld3;
_13 = _9.fld4;
_21 = _7 >= _9.fld0;
_6 = 46047_u16 ^ 60388_u16;
_10 = 96417176002207345419940324506626909794_u128 as f64;
_3 = 175_u8 as isize;
Goto(bb9)
}
bb9 = {
_29 = [RET,RET,RET,RET,RET,RET,RET];
_16 = [104_i8,105_i8,58_i8,(-35_i8),120_i8,19_i8,(-104_i8)];
_19 = _12;
_29 = [RET,RET,RET,RET,RET,RET,RET];
_9.fld1 = '\u{3e253}';
_3 = _12 >> _9.fld4;
RET = !888228664_i32;
_28 = _19 >> _25.2;
_16 = [(-21_i8),97_i8,(-60_i8),(-36_i8),(-48_i8),(-22_i8),(-89_i8)];
_16 = [(-45_i8),(-48_i8),61_i8,17_i8,(-35_i8),(-92_i8),126_i8];
_10 = _27 * _9.fld3;
_29 = [RET,RET,RET,RET,RET,RET,RET];
_15 = -_22;
_12 = !_28;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb5,
5 => bb6,
340282366920938463463374607431768191007 => bb10,
_ => bb7
}
}
bb10 = {
_24 = [_19,_28,_3,_12,_12,_3,_12];
_9.fld7 = _23;
_2 = !_25.2;
_5 = !(-2205_i16);
_2 = _27 as i128;
_4 = _13 - _13;
_34 = _7 * _7;
_2 = _9.fld1 as i128;
RET = 489688709_i32;
_2 = _25.2 << _28;
_31 = &_27;
match _8 {
0 => bb1,
1 => bb7,
2 => bb6,
3 => bb11,
17947545617902372541 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_23.0 = _24;
_27 = _9.fld3 - _9.fld3;
_13 = _9.fld4;
_21 = _7 >= _9.fld0;
_6 = 46047_u16 ^ 60388_u16;
_10 = 96417176002207345419940324506626909794_u128 as f64;
_3 = 175_u8 as isize;
Goto(bb9)
}
bb13 = {
_8 = _9.fld1 as usize;
_25.3 = _2 | _2;
_35 = [2_i8,23_i8,(-37_i8),(-15_i8),(-103_i8),114_i8,123_i8];
Call(_4 = core::intrinsics::bswap(_13), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_38 = _3;
_2 = _25.2;
_9.fld7 = _23;
_25.4 = _17;
_21 = !_1;
_1 = !_21;
_25.3 = _8 as i128;
_35 = _16;
_9.fld3 = 65_u8 as f64;
_39 = [124_i8,17_i8,(-119_i8),(-55_i8),(-56_i8),(-6_i8),(-50_i8)];
_10 = _6 as f64;
_25.2 = -_2;
_11 = [183_u8,139_u8,63_u8,125_u8,230_u8,59_u8,200_u8];
_4 = !_13;
_17 = [9109686011206592974_i64];
_38 = _3 & _12;
_9.fld0 = _34 - _34;
_42 = [331435469174416934724452732433296242806_u128,179584306370515384727012804748351816132_u128,257759527979402784222777257186692420578_u128];
_25.3 = _1 as i128;
_41 = _24;
_19 = 129_u8 as isize;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(0_usize, 23_usize, Move(_23), 28_usize, Move(_28), 38_usize, Move(_38), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(0_usize, 35_usize, Move(_35), 21_usize, Move(_21), 16_usize, Move(_16), 41_usize, Move(_41)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(0_usize, 4_usize, Move(_4), 1_usize, Move(_1), 11_usize, Move(_11), 17_usize, Move(_17)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u32,mut _2: usize,mut _3: i16,mut _4: i128,mut _5: bool,mut _6: i128,mut _7: isize,mut _8: bool,mut _9: usize,mut _10: u32,mut _11: isize,mut _12: isize,mut _13: bool,mut _14: isize,mut _15: bool,mut _16: bool) -> u64 {
mir! {
type RET = u64;
let _17: f32;
let _18: *const *const isize;
let _19: Adt38;
let _20: [i32; 7];
let _21: char;
let _22: [i32; 7];
let _23: [i8; 7];
let _24: f64;
let _25: Adt43;
let _26: [i32; 7];
let _27: f32;
let _28: (i8, *const isize, i128, i128, [i64; 1]);
let _29: bool;
let _30: char;
let _31: [isize; 7];
let _32: Adt40;
let _33: u32;
let _34: bool;
let _35: Adt44;
let _36: isize;
let _37: (*mut bool, bool, i128, isize, u128, bool);
let _38: ();
let _39: ();
{
_2 = _3 as usize;
_8 = !_13;
_14 = (-2453619756035042716_i64) as isize;
RET = !11526257290177796028_u64;
_10 = _1;
_8 = _4 <= _4;
_8 = !_16;
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
1797716095 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
RET = !356484164348584492_u64;
_16 = !_13;
_15 = _9 <= _2;
_16 = !_15;
RET = 13983087946365884190_u64;
RET = (-1086603600_i32) as u64;
_10 = '\u{103e83}' as u32;
_13 = _16;
_9 = _2 << _10;
_1 = _6 as u32;
_3 = !(-22282_i16);
_3 = _7 as i16;
_5 = !_16;
_14 = _12;
_20 = [(-548100390_i32),51962934_i32,(-953401852_i32),58452215_i32,982289247_i32,1800936848_i32,98041274_i32];
_6 = _4 >> _10;
RET = !9984961511454479166_u64;
_3 = (-23062_i16);
RET = 17518162881410271868_u64 | 7132350056668718502_u64;
_22 = [83064317_i32,1611480164_i32,(-591040308_i32),(-1957234240_i32),(-1267729621_i32),(-1469702143_i32),755106387_i32];
Call(RET = fn2(_22, _3, _1, _3, _22, _22, _11), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_12 = _7 >> _1;
_17 = _4 as f32;
_1 = 9024116762406887479_i64 as u32;
_9 = !_2;
_15 = _13;
_23 = [60_i8,(-11_i8),59_i8,116_i8,124_i8,95_i8,96_i8];
_22 = [1121153255_i32,(-628742243_i32),(-548773906_i32),(-1953223728_i32),1746093767_i32,1827556511_i32,(-313645563_i32)];
_8 = !_13;
_16 = _5;
RET = !14316468478542474779_u64;
_22 = _20;
match _14 {
0 => bb3,
1 => bb2,
2 => bb7,
340282366920938463454151235394913435648 => bb9,
_ => bb8
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_11 = 289368233985867526301228717077680914937_u128 as isize;
_9 = _2;
match _14 {
0 => bb7,
1 => bb2,
340282366920938463454151235394913435648 => bb10,
_ => bb5
}
}
bb10 = {
_15 = !_5;
_17 = _14 as f32;
_27 = _17 + _17;
_26 = [(-2001993068_i32),(-754171861_i32),(-1941956356_i32),467538475_i32,489345694_i32,(-1485797765_i32),(-2087078602_i32)];
_16 = _27 != _27;
_20 = _26;
RET = 2835233291586368897_u64;
_28.2 = -_4;
_8 = _16;
_24 = 292244372602726651948125857092132258572_u128 as f64;
_20 = [1904927488_i32,(-96446607_i32),639241509_i32,(-362506899_i32),(-1876374379_i32),2124845854_i32,2127743427_i32];
_28.3 = _28.2;
_23 = [(-36_i8),(-32_i8),(-104_i8),120_i8,(-98_i8),(-20_i8),68_i8];
_14 = _1 as isize;
_28.4 = [2824963409293916691_i64];
_28.3 = _6;
_28.3 = _4 * _6;
_22 = _26;
_29 = _15 ^ _8;
_28.3 = (-8_i8) as i128;
_7 = !_12;
_21 = '\u{bff91}';
_28.2 = !_28.3;
_29 = _16;
_3 = !(-30177_i16);
_1 = _10;
Goto(bb11)
}
bb11 = {
_5 = _15 | _15;
_24 = _1 as f64;
_6 = _28.3 + _28.2;
RET = 4142523175957244872_u64 | 15947877743655838197_u64;
_16 = _13;
_6 = _28.3 << _4;
_20 = _26;
_28.0 = 30_i8;
_9 = 1383800904_i32 as usize;
_28.1 = core::ptr::addr_of!(_11);
_4 = 202088284_i32 as i128;
_18 = core::ptr::addr_of!(_28.1);
_18 = core::ptr::addr_of!(_28.1);
_6 = _28.2 << _4;
Call(_3 = core::intrinsics::bswap(20919_i16), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_16 = _1 >= _1;
_6 = RET as i128;
_14 = 37380_u16 as isize;
_28.4 = [(-3839604592259794145_i64)];
_8 = !_29;
_12 = _7 >> _14;
_5 = _29;
RET = !14860055898430485545_u64;
_32 = Adt40::Variant0 { fld0: _29,fld1: _28.0,fld2: _17 };
_27 = -_17;
_5 = Field::<bool>(Variant(_32, 0), 0) > _15;
_24 = _1 as f64;
Goto(bb13)
}
bb13 = {
_31 = [_7,_12,_14,_12,_14,_12,_7];
_27 = RET as f32;
_5 = Field::<bool>(Variant(_32, 0), 0);
_28.2 = !_4;
RET = !7473985070560926044_u64;
_14 = _7;
_14 = _12 >> _28.2;
_18 = core::ptr::addr_of!((*_18));
place!(Field::<f32>(Variant(_32, 0), 2)) = -_17;
_28.4 = [1841401709216643053_i64];
_16 = Field::<bool>(Variant(_32, 0), 0);
_26 = [(-397083059_i32),(-1164881664_i32),(-1104869763_i32),1553447103_i32,1135420836_i32,(-1524039710_i32),754506638_i32];
_30 = _21;
_31 = [_12,_11,_7,_14,_12,_12,_14];
_17 = Field::<f32>(Variant(_32, 0), 2) * Field::<f32>(Variant(_32, 0), 2);
_10 = 2735359364263903625_i64 as u32;
match _28.0 {
30 => bb14,
_ => bb7
}
}
bb14 = {
_15 = Field::<bool>(Variant(_32, 0), 0);
_33 = _10;
RET = 1059026219224686450_u64 - 4949278488448973858_u64;
_9 = _2 - _2;
_21 = _30;
_28.4 = [9029424432817047265_i64];
_1 = 8530993789220550178_i64 as u32;
_26 = [(-413340688_i32),1247656546_i32,(-1727835062_i32),1290953953_i32,2092385946_i32,(-1399451184_i32),1124464538_i32];
place!(Field::<f32>(Variant(_32, 0), 2)) = _17;
_13 = !_16;
_4 = _6 * _6;
_23 = [_28.0,_28.0,_28.0,_28.0,_28.0,_28.0,_28.0];
_5 = _13 ^ _29;
_27 = 60427887300211716085826143927949193464_u128 as f32;
_37.3 = -_14;
_32 = Adt40::Variant0 { fld0: _15,fld1: _28.0,fld2: _17 };
_29 = _15 > _5;
_18 = core::ptr::addr_of!((*_18));
_15 = Field::<f32>(Variant(_32, 0), 2) <= _27;
_20 = _26;
_33 = _1 << _14;
_1 = _27 as u32;
_37.1 = _5 != _13;
_37.4 = !92442904852328139874620206435472049918_u128;
place!(Field::<[i32; 7]>(Variant(_32, 1), 6)) = [1323410633_i32,(-1446938309_i32),(-405608091_i32),(-600081660_i32),(-2049289850_i32),(-1172694631_i32),(-1842960390_i32)];
_30 = _21;
_15 = !_13;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(1_usize, 14_usize, Move(_14), 2_usize, Move(_2), 6_usize, Move(_6), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(1_usize, 5_usize, Move(_5), 20_usize, Move(_20), 7_usize, Move(_7), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(1_usize, 31_usize, Move(_31), 9_usize, Move(_9), 23_usize, Move(_23), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [i32; 7],mut _2: i16,mut _3: u32,mut _4: i16,mut _5: [i32; 7],mut _6: [i32; 7],mut _7: isize) -> u64 {
mir! {
type RET = u64;
let _8: (i8, *const isize, i128, i128, [i64; 1]);
let _9: Adt41;
let _10: isize;
let _11: [i64; 1];
let _12: isize;
let _13: isize;
let _14: u128;
let _15: isize;
let _16: char;
let _17: Adt42;
let _18: char;
let _19: i32;
let _20: u32;
let _21: [i64; 1];
let _22: isize;
let _23: Adt51;
let _24: Adt49;
let _25: [u8; 7];
let _26: f64;
let _27: Adt47;
let _28: u128;
let _29: i8;
let _30: [i64; 1];
let _31: Adt51;
let _32: Adt41;
let _33: [u128; 3];
let _34: [u128; 3];
let _35: [u8; 7];
let _36: f64;
let _37: (*mut bool,);
let _38: [u8; 7];
let _39: [i64; 1];
let _40: *mut *mut f32;
let _41: ([isize; 7],);
let _42: ();
let _43: ();
{
_2 = _4;
RET = 12848072354878098307_u64;
_8.2 = (-14090745749966343089083932832756425492_i128);
_8.3 = _8.2;
RET = 7619781373203903407_u64;
_8.0 = 102_u8 as i8;
_5 = [76070195_i32,(-662394262_i32),1769307574_i32,(-2081835803_i32),(-380459238_i32),1200615331_i32,1246530655_i32];
_8.1 = core::ptr::addr_of!(_7);
_4 = _2;
_4 = _2 + _2;
_5 = [1238765866_i32,1649684118_i32,(-1149667132_i32),(-307615225_i32),2060604853_i32,1366717107_i32,(-1651481535_i32)];
_8.1 = core::ptr::addr_of!(_7);
_8.4 = [4960316257368763468_i64];
_2 = (-1110661241_i32) as i16;
_4 = !_2;
RET = !7122018390384967417_u64;
_10 = -_7;
_11 = _8.4;
RET = 11689240548342636497_usize as u64;
match _7 {
0 => bb1,
1 => bb2,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_7 = _10;
_8.0 = 281289156952589410233734435304101387824_u128 as i8;
_6 = [1376080185_i32,819611026_i32,1698584937_i32,1481718302_i32,(-1257282562_i32),1290336805_i32,1701504417_i32];
RET = 13150754761949648667_u64;
_7 = _3 as isize;
_7 = (-3787574649057856226_i64) as isize;
_13 = RET as isize;
_3 = !912550552_u32;
_15 = _10;
_10 = _15 << _8.0;
_6 = _5;
_12 = _15 >> _8.3;
Goto(bb5)
}
bb5 = {
_8.0 = 57_i8 << _8.3;
_13 = -_15;
_14 = (-1341069284_i32) as u128;
_8.1 = core::ptr::addr_of!(_7);
_15 = _13 ^ _12;
_8.3 = _8.2;
RET = 2442703026153479704_u64 | 9748728428514947963_u64;
_5 = [1398214158_i32,1794226462_i32,25319425_i32,(-1803582747_i32),(-1812432602_i32),1932264200_i32,1900952963_i32];
_16 = '\u{f0925}';
match _8.3 {
326191621170972120374290674599011785964 => bb6,
_ => bb3
}
}
bb6 = {
_4 = _14 as i16;
_2 = -_4;
_17.fld4 = _4 - _2;
_1 = [1605479916_i32,874740848_i32,2045690285_i32,475964150_i32,(-100612587_i32),(-76747804_i32),(-961104437_i32)];
_8.1 = core::ptr::addr_of!(_12);
_16 = '\u{dc215}';
_11 = [(-4550430370612027706_i64)];
_11 = _8.4;
_2 = 17_u8 as i16;
_5 = [(-382174907_i32),43481569_i32,68222876_i32,224058506_i32,717474166_i32,1916982391_i32,263376407_i32];
_4 = _15 as i16;
_8.3 = 1_usize as i128;
_8.0 = (-58_i8);
_12 = 43746_u16 as isize;
RET = 7178092341686250_u64;
Goto(bb7)
}
bb7 = {
_8.4 = [2740932196384725687_i64];
_19 = (-1625191015_i32);
_18 = _16;
_10 = _15;
_21 = [1678587599863396250_i64];
_12 = _14 as isize;
_13 = _12 - _10;
RET = 1641182279090195718_u64;
_22 = false as isize;
_21 = [(-5919656653661223344_i64)];
Call(_12 = fn3(_15, _15, _10, _10, _1, _21, _8, _22, _16, _8, _8, _8.0, _13, _2, _8.0), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = false as u64;
_17.fld1 = _3 + _3;
_5 = [_19,_19,_19,_19,_19,_19,_19];
_14 = 68664764693792466087242364440897169243_u128;
_16 = _18;
_19 = (-1498174867_i32);
_22 = _12 & _13;
Goto(bb9)
}
bb9 = {
_20 = !_3;
_17.fld4 = -_4;
_8.0 = 98_i8 & (-126_i8);
_5 = [_19,_19,_19,_19,_19,_19,_19];
_18 = _16;
_10 = _12 + _22;
_1 = [_19,_19,_19,_19,_19,_19,_19];
_18 = _16;
_4 = _17.fld4 | _17.fld4;
match _19 {
0 => bb1,
340282366920938463463374607430270036589 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_18 = _16;
_3 = _17.fld1;
_5 = [_19,_19,_19,_19,_19,_19,_19];
_12 = _10 ^ _10;
_17.fld0 = [(-2522614490692661227_i64),6264040184061204708_i64,(-4279380141895256371_i64),8330703201525011518_i64,(-4154802660420143011_i64),(-3048128360546026729_i64),(-8858529754694501231_i64),1893460828154363118_i64];
_10 = !_12;
_13 = _12 + _10;
_10 = _22 - _13;
_20 = _3;
_27 = Adt47::Variant1 { fld0: _8.3,fld1: (-6576944635729126899_i64) };
_29 = _8.0 - _8.0;
_1 = [_19,_19,_19,_19,_19,_19,_19];
_6 = [_19,_19,_19,_19,_19,_19,_19];
_6 = [_19,_19,_19,_19,_19,_19,_19];
_4 = 1487_u16 as i16;
_16 = _18;
_13 = _12;
_26 = _19 as f64;
_13 = _10 + _12;
_8.0 = _29 * _29;
_5 = [_19,_19,_19,_19,_19,_19,_19];
_7 = _10;
_8.2 = _8.3;
_21 = [5761117360304237126_i64];
Call(_8.4 = fn4(_8.1, _10), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_30 = _21;
_8.4 = _21;
_8.1 = core::ptr::addr_of!(_12);
_27 = Adt47::Variant1 { fld0: _8.2,fld1: (-6004421945536086304_i64) };
_33 = [_14,_14,_14];
Goto(bb13)
}
bb13 = {
_21 = _11;
_7 = (-9064845529612322760_i64) as isize;
_5 = [_19,_19,_19,_19,_19,_19,_19];
_7 = !_12;
_25 = [224_u8,204_u8,134_u8,101_u8,32_u8,252_u8,182_u8];
_6 = [_19,_19,_19,_19,_19,_19,_19];
_21 = _11;
RET = 6683660528556601890_u64;
_35 = _25;
_17.fld4 = _2 >> _22;
_22 = _8.0 as isize;
match _19 {
0 => bb14,
1 => bb15,
340282366920938463463374607430270036589 => bb17,
_ => bb16
}
}
bb14 = {
_8.0 = 57_i8 << _8.3;
_13 = -_15;
_14 = (-1341069284_i32) as u128;
_8.1 = core::ptr::addr_of!(_7);
_15 = _13 ^ _12;
_8.3 = _8.2;
RET = 2442703026153479704_u64 | 9748728428514947963_u64;
_5 = [1398214158_i32,1794226462_i32,25319425_i32,(-1803582747_i32),(-1812432602_i32),1932264200_i32,1900952963_i32];
_16 = '\u{f0925}';
match _8.3 {
326191621170972120374290674599011785964 => bb6,
_ => bb3
}
}
bb15 = {
_4 = _14 as i16;
_2 = -_4;
_17.fld4 = _4 - _2;
_1 = [1605479916_i32,874740848_i32,2045690285_i32,475964150_i32,(-100612587_i32),(-76747804_i32),(-961104437_i32)];
_8.1 = core::ptr::addr_of!(_12);
_16 = '\u{dc215}';
_11 = [(-4550430370612027706_i64)];
_11 = _8.4;
_2 = 17_u8 as i16;
_5 = [(-382174907_i32),43481569_i32,68222876_i32,224058506_i32,717474166_i32,1916982391_i32,263376407_i32];
_4 = _15 as i16;
_8.3 = 1_usize as i128;
_8.0 = (-58_i8);
_12 = 43746_u16 as isize;
RET = 7178092341686250_u64;
Goto(bb7)
}
bb16 = {
Return()
}
bb17 = {
_22 = true as isize;
_22 = _10;
_5 = [_19,_19,_19,_19,_19,_19,_19];
_38 = _35;
_11 = [3305945354145970126_i64];
_39 = _8.4;
_11 = _30;
_26 = 11866023396341646601_usize as f64;
_16 = _18;
_36 = -_26;
Goto(bb18)
}
bb18 = {
Call(_42 = dump_var(2_usize, 25_usize, Move(_25), 19_usize, Move(_19), 14_usize, Move(_14), 39_usize, Move(_39)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_42 = dump_var(2_usize, 3_usize, Move(_3), 13_usize, Move(_13), 35_usize, Move(_35), 4_usize, Move(_4)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(2_usize, 10_usize, Move(_10), 20_usize, Move(_20), 7_usize, Move(_7), 33_usize, Move(_33)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_42 = dump_var(2_usize, 38_usize, Move(_38), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: [i32; 7],mut _6: [i64; 1],mut _7: (i8, *const isize, i128, i128, [i64; 1]),mut _8: isize,mut _9: char,mut _10: (i8, *const isize, i128, i128, [i64; 1]),mut _11: (i8, *const isize, i128, i128, [i64; 1]),mut _12: i8,mut _13: isize,mut _14: i16,mut _15: i8) -> isize {
mir! {
type RET = isize;
let _16: isize;
let _17: [i64; 8];
let _18: f32;
let _19: Adt54;
let _20: i16;
let _21: isize;
let _22: [i64; 1];
let _23: ();
let _24: ();
{
_2 = _8;
_11.1 = core::ptr::addr_of!(_3);
_9 = '\u{3a863}';
match _7.0 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768211398 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_6 = [(-4546405693540276605_i64)];
_10.2 = !_7.2;
_12 = _15;
_11.3 = (-649334779_i32) as i128;
_7.3 = _7.2;
_10.4 = [(-926249932613214266_i64)];
_17 = [(-8288961609951559734_i64),(-1822835520814456817_i64),(-3354293184045841330_i64),(-8652393382171146777_i64),(-5692121681339937701_i64),8280634143070567702_i64,(-7635858462843136127_i64),(-3876365367119472900_i64)];
_14 = -(-7301_i16);
RET = -_13;
match _7.2 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
326191621170972120374290674599011785964 => bb9,
_ => bb8
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_11.1 = _10.1;
_11.1 = _7.1;
_17 = [4514828784631963954_i64,956228525218071446_i64,4638307210281827888_i64,1805363016256722169_i64,(-2557208176060154773_i64),2144063727886088804_i64,5206093202894474093_i64,6178538290567142121_i64];
RET = _1;
_11 = (_12, _7.1, _10.3, _7.3, _10.4);
_11.4 = [2687548406163580620_i64];
_7.0 = _12;
_17 = [4096158706288235067_i64,(-6590936731961429966_i64),2674787371152765248_i64,5973499306005540880_i64,(-8314301801591970648_i64),(-3862568560289216310_i64),(-3052153108753023907_i64),3030097232477124945_i64];
_1 = !_3;
_18 = 1536699461_i32 as f32;
_16 = RET - _13;
Goto(bb10)
}
bb10 = {
_9 = '\u{59fa7}';
_10.1 = core::ptr::addr_of!(RET);
_10.1 = core::ptr::addr_of!(_13);
_7.0 = _15;
_10.3 = _11.3;
_10.4 = _11.4;
_20 = 1_usize as i16;
RET = _13 + _13;
_10.2 = _7.3;
_10.2 = 17671816725500869859_usize as i128;
_11.1 = _7.1;
_21 = _3 & _16;
_11.2 = _10.3 ^ _11.3;
_11.0 = _7.0;
_7.1 = _10.1;
_13 = _21;
_3 = _2 | _16;
_11 = (_10.0, _7.1, _7.3, _10.3, _7.4);
_11.4 = _10.4;
RET = _16 & _13;
Goto(bb11)
}
bb11 = {
Call(_23 = dump_var(3_usize, 21_usize, Move(_21), 9_usize, Move(_9), 8_usize, Move(_8), 13_usize, Move(_13)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_23 = dump_var(3_usize, 3_usize, Move(_3), 14_usize, Move(_14), 2_usize, Move(_2), 12_usize, Move(_12)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: *const isize,mut _2: isize) -> [i64; 1] {
mir! {
type RET = [i64; 1];
let _3: u128;
let _4: [i64; 1];
let _5: u64;
let _6: ([isize; 7],);
let _7: [i32; 7];
let _8: [i32; 7];
let _9: [i32; 7];
let _10: isize;
let _11: Adt38;
let _12: Adt44;
let _13: [isize; 7];
let _14: [i8; 5];
let _15: [i64; 1];
let _16: Adt42;
let _17: [u128; 3];
let _18: isize;
let _19: u32;
let _20: [i32; 7];
let _21: Adt47;
let _22: [i8; 7];
let _23: i128;
let _24: isize;
let _25: u8;
let _26: char;
let _27: ();
let _28: ();
{
_1 = core::ptr::addr_of!(_2);
RET = [(-5898997542786704913_i64)];
_3 = !286791714831292453411226912047313433102_u128;
_1 = core::ptr::addr_of!((*_1));
_2 = (-21305_i16) as isize;
_2 = !9223372036854775807_isize;
_3 = 258662070647601465523899823047629303507_u128;
RET = [1601608607516789233_i64];
_1 = core::ptr::addr_of!((*_1));
_4 = RET;
_4 = [4311275640042279136_i64];
RET = [2708350653732565832_i64];
RET = [7195152868407529980_i64];
RET = _4;
RET = [(-1429507576253215084_i64)];
_2 = (-43031184440839657134853389854852837012_i128) as isize;
RET = [(-1353318721108702573_i64)];
RET = [3943699620462975308_i64];
Call(_2 = fn5(_1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = [(-950301117408207896_i64)];
_5 = !894639492612392427_u64;
_1 = core::ptr::addr_of!(_2);
_4 = [8426510523787185208_i64];
_3 = 2737821418_u32 as u128;
_3 = 265322791161782430544435121247232786503_u128;
RET = _4;
_6.0 = [_2,(*_1),(*_1),(*_1),_2,_2,(*_1)];
RET = _4;
_1 = core::ptr::addr_of!(_2);
_3 = 209446731410866229248851933154552248744_u128;
RET = _4;
_3 = !149918245352397612498181482849048027055_u128;
Goto(bb2)
}
bb2 = {
_7 = [(-746709852_i32),631369771_i32,874533011_i32,(-1816107133_i32),1144207190_i32,(-1412759452_i32),1344234711_i32];
_2 = '\u{787d4}' as isize;
_8 = [(-1345017999_i32),(-1860705906_i32),606634472_i32,(-1745600815_i32),1172975208_i32,740588269_i32,(-307795832_i32)];
_6.0 = [_2,(*_1),(*_1),(*_1),_2,(*_1),(*_1)];
_6.0 = [(*_1),_2,_2,(*_1),(*_1),(*_1),(*_1)];
Call(_4 = fn17((*_1), _7, _7, _7, (*_1), _6.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = !13020015330876616239_u64;
_4 = RET;
_2 = -9223372036854775807_isize;
_3 = !34444785925029518787466663357504434443_u128;
_2 = 91_i8 as isize;
RET = [5298561576410921572_i64];
_3 = !142096165839547525278087201208214616487_u128;
_7 = [217541579_i32,734568865_i32,(-389370187_i32),1861577508_i32,(-855874720_i32),(-378731937_i32),(-2006523168_i32)];
_3 = (-87099045644301686144747908103343825594_i128) as u128;
_6.0 = [(*_1),_2,(*_1),_2,(*_1),(*_1),_2];
_1 = core::ptr::addr_of!((*_1));
_2 = (-21_i8) as isize;
_4 = [3994945154928175160_i64];
_5 = 15048783237359318994_u64 | 4136756539776940751_u64;
_1 = core::ptr::addr_of!(_2);
_4 = [(-5637237811902550842_i64)];
RET = [8385700893962447964_i64];
_4 = [8287138506193061_i64];
_3 = 43558940945901239679350680659763074451_u128;
_7 = [(-1494884989_i32),1223419330_i32,343318330_i32,(-1005177395_i32),52191076_i32,1781432719_i32,1307522058_i32];
_7 = _8;
_3 = 4192028609_u32 as u128;
_5 = !5613479017058708273_u64;
Goto(bb4)
}
bb4 = {
RET = [1391399522764281743_i64];
_1 = core::ptr::addr_of!((*_1));
_5 = 14571328365495051076_u64;
_6.0 = [(*_1),(*_1),(*_1),_2,(*_1),(*_1),(*_1)];
_1 = core::ptr::addr_of!((*_1));
_3 = 217218300802607092810001217922396681349_u128;
_2 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1 = core::ptr::addr_of!(_2);
_5 = 8204441321032885398_u64;
_6.0 = [(*_1),_2,_2,(*_1),(*_1),_2,_2];
_1 = core::ptr::addr_of!((*_1));
_9 = [1047248720_i32,(-1216786876_i32),(-1006694754_i32),(-1788152774_i32),(-1045015489_i32),938789151_i32,(-1152805924_i32)];
_9 = [(-1080920522_i32),722776603_i32,(-1286631163_i32),1908145398_i32,1661968528_i32,67117442_i32,(-257020825_i32)];
_7 = _9;
_4 = [7665095428006407477_i64];
_8 = _7;
_3 = !140860538074943880159190204477486377218_u128;
RET = [6729090005177197800_i64];
_6.0 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1),_2];
RET = [(-7403275445678716839_i64)];
_7 = _8;
_3 = 3170021205773615145987704321609554911_u128 & 129064297005420976359992946716484345454_u128;
_1 = core::ptr::addr_of!((*_1));
_1 = core::ptr::addr_of!(_2);
RET = [8082254603423720956_i64];
_7 = [1261178263_i32,951969407_i32,541594949_i32,(-365209741_i32),(-611378058_i32),(-624192367_i32),(-1162636011_i32)];
_4 = [5477203707075618596_i64];
Goto(bb5)
}
bb5 = {
_7 = [(-729172416_i32),(-1235440374_i32),(-1849700334_i32),1571721614_i32,1519573045_i32,(-1681175733_i32),(-897000475_i32)];
_2 = (-9223372036854775808_isize) >> _3;
_2 = 9223372036854775807_isize | (-9223372036854775808_isize);
_3 = !180426528141300373082676053178805327082_u128;
RET = [(-1840727596499498728_i64)];
_7 = _8;
_4 = [2238960386483123968_i64];
_9 = [(-1927017874_i32),(-273509730_i32),(-509355136_i32),(-567891576_i32),(-1625691600_i32),(-1126959852_i32),1927451779_i32];
_9 = [549490216_i32,(-2017914076_i32),659617117_i32,(-1318811489_i32),429038866_i32,744264841_i32,(-798909762_i32)];
_5 = 4596861348818494577_u64;
_9 = [1504685870_i32,(-942995836_i32),599706524_i32,753154245_i32,553480235_i32,(-1522848093_i32),1106934508_i32];
_10 = -_2;
_9 = [1011255705_i32,2018404603_i32,(-1638747194_i32),(-1435000985_i32),(-184667529_i32),1281837399_i32,(-2090353076_i32)];
_1 = core::ptr::addr_of!(_10);
_3 = 91821685572983794624812207802250582065_u128 - 57436616815606358390836430353999557171_u128;
_10 = _2 >> _5;
_8 = [(-1359204445_i32),(-262842489_i32),276241289_i32,(-1659317701_i32),30545235_i32,(-2090230321_i32),954886053_i32];
_3 = (-114482259031407405967772653037323822032_i128) as u128;
_7 = _8;
_2 = (*_1);
Goto(bb6)
}
bb6 = {
_13 = _6.0;
_9 = [999507287_i32,(-1410545718_i32),1230787380_i32,(-286441260_i32),(-2003372102_i32),(-1922882615_i32),1470377545_i32];
_4 = [9091407551776843274_i64];
RET = [7849235307070248562_i64];
RET = [(-7746704125663258866_i64)];
_6 = (_13,);
_9 = _8;
Goto(bb7)
}
bb7 = {
_10 = _2 | _2;
_7 = [1034732026_i32,(-152279186_i32),520724626_i32,1431428750_i32,(-2026290781_i32),(-305373475_i32),1987926231_i32];
_7 = [872953095_i32,982858076_i32,(-1285621062_i32),957559063_i32,990104223_i32,425799704_i32,617206008_i32];
_15 = [(-26103482220287609_i64)];
_3 = !292899994047725352259656311295777872465_u128;
_6.0 = [(*_1),_2,(*_1),(*_1),(*_1),(*_1),(*_1)];
_6 = (_13,);
_15 = [(-2655966708733421651_i64)];
_16.fld4 = 4_usize as i16;
_3 = !57660754764764565251229907518865923794_u128;
_16.fld1 = 2523392724_u32 << (*_1);
_14 = [62_i8,(-87_i8),(-110_i8),(-26_i8),78_i8];
_14 = [(-120_i8),(-92_i8),(-28_i8),(-85_i8),93_i8];
_9 = [(-1629351415_i32),(-1430913926_i32),(-250976229_i32),1055735406_i32,1178634015_i32,(-627777467_i32),1413749130_i32];
_3 = _5 as u128;
_1 = core::ptr::addr_of!(_10);
_18 = (*_1) * _2;
_9 = [(-1903285514_i32),427119244_i32,1834773545_i32,(-1777594225_i32),949549109_i32,(-327579087_i32),1091196077_i32];
_4 = [2986336410631354917_i64];
_16.fld4 = !(-14259_i16);
_4 = [2445747457811081752_i64];
_4 = _15;
_13 = [(*_1),_18,_10,_2,(*_1),(*_1),_10];
Goto(bb8)
}
bb8 = {
_13 = _6.0;
RET = [(-6125641333585678753_i64)];
_14 = [(-39_i8),(-105_i8),107_i8,(-95_i8),(-105_i8)];
match _5 {
0 => bb7,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb9,
5 => bb10,
6 => bb11,
4596861348818494577 => bb13,
_ => bb12
}
}
bb9 = {
_5 = !13020015330876616239_u64;
_4 = RET;
_2 = -9223372036854775807_isize;
_3 = !34444785925029518787466663357504434443_u128;
_2 = 91_i8 as isize;
RET = [5298561576410921572_i64];
_3 = !142096165839547525278087201208214616487_u128;
_7 = [217541579_i32,734568865_i32,(-389370187_i32),1861577508_i32,(-855874720_i32),(-378731937_i32),(-2006523168_i32)];
_3 = (-87099045644301686144747908103343825594_i128) as u128;
_6.0 = [(*_1),_2,(*_1),_2,(*_1),(*_1),_2];
_1 = core::ptr::addr_of!((*_1));
_2 = (-21_i8) as isize;
_4 = [3994945154928175160_i64];
_5 = 15048783237359318994_u64 | 4136756539776940751_u64;
_1 = core::ptr::addr_of!(_2);
_4 = [(-5637237811902550842_i64)];
RET = [8385700893962447964_i64];
_4 = [8287138506193061_i64];
_3 = 43558940945901239679350680659763074451_u128;
_7 = [(-1494884989_i32),1223419330_i32,343318330_i32,(-1005177395_i32),52191076_i32,1781432719_i32,1307522058_i32];
_7 = _8;
_3 = 4192028609_u32 as u128;
_5 = !5613479017058708273_u64;
Goto(bb4)
}
bb10 = {
_4 = [(-950301117408207896_i64)];
_5 = !894639492612392427_u64;
_1 = core::ptr::addr_of!(_2);
_4 = [8426510523787185208_i64];
_3 = 2737821418_u32 as u128;
_3 = 265322791161782430544435121247232786503_u128;
RET = _4;
_6.0 = [_2,(*_1),(*_1),(*_1),_2,_2,(*_1)];
RET = _4;
_1 = core::ptr::addr_of!(_2);
_3 = 209446731410866229248851933154552248744_u128;
RET = _4;
_3 = !149918245352397612498181482849048027055_u128;
Goto(bb2)
}
bb11 = {
_7 = [(-746709852_i32),631369771_i32,874533011_i32,(-1816107133_i32),1144207190_i32,(-1412759452_i32),1344234711_i32];
_2 = '\u{787d4}' as isize;
_8 = [(-1345017999_i32),(-1860705906_i32),606634472_i32,(-1745600815_i32),1172975208_i32,740588269_i32,(-307795832_i32)];
_6.0 = [_2,(*_1),(*_1),(*_1),_2,(*_1),(*_1)];
_6.0 = [(*_1),_2,_2,(*_1),(*_1),(*_1),(*_1)];
Call(_4 = fn17((*_1), _7, _7, _7, (*_1), _6.0), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
RET = [1391399522764281743_i64];
_1 = core::ptr::addr_of!((*_1));
_5 = 14571328365495051076_u64;
_6.0 = [(*_1),(*_1),(*_1),_2,(*_1),(*_1),(*_1)];
_1 = core::ptr::addr_of!((*_1));
_3 = 217218300802607092810001217922396681349_u128;
_2 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1 = core::ptr::addr_of!(_2);
_5 = 8204441321032885398_u64;
_6.0 = [(*_1),_2,_2,(*_1),(*_1),_2,_2];
_1 = core::ptr::addr_of!((*_1));
_9 = [1047248720_i32,(-1216786876_i32),(-1006694754_i32),(-1788152774_i32),(-1045015489_i32),938789151_i32,(-1152805924_i32)];
_9 = [(-1080920522_i32),722776603_i32,(-1286631163_i32),1908145398_i32,1661968528_i32,67117442_i32,(-257020825_i32)];
_7 = _9;
_4 = [7665095428006407477_i64];
_8 = _7;
_3 = !140860538074943880159190204477486377218_u128;
RET = [6729090005177197800_i64];
_6.0 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1),_2];
RET = [(-7403275445678716839_i64)];
_7 = _8;
_3 = 3170021205773615145987704321609554911_u128 & 129064297005420976359992946716484345454_u128;
_1 = core::ptr::addr_of!((*_1));
_1 = core::ptr::addr_of!(_2);
RET = [8082254603423720956_i64];
_7 = [1261178263_i32,951969407_i32,541594949_i32,(-365209741_i32),(-611378058_i32),(-624192367_i32),(-1162636011_i32)];
_4 = [5477203707075618596_i64];
Goto(bb5)
}
bb13 = {
_6 = (_13,);
_15 = [(-3368397792294912150_i64)];
_16.fld0 = [(-6153588363854313545_i64),7977467752994492103_i64,(-5320158385266731391_i64),(-1282506286319859836_i64),(-9032343990184220396_i64),(-6683413262439453957_i64),5043717678295114814_i64,(-5151016756398711686_i64)];
_20 = [1880327059_i32,1955937800_i32,1235049491_i32,(-1386342806_i32),382738006_i32,(-1710366909_i32),238350592_i32];
_2 = (*_1);
_18 = (*_1) << _10;
RET = _15;
_10 = -_18;
_22 = [(-25_i8),117_i8,16_i8,(-119_i8),18_i8,(-26_i8),(-109_i8)];
_17 = [_3,_3,_3];
_10 = _5 as isize;
_22 = [(-58_i8),(-47_i8),110_i8,(-42_i8),(-45_i8),(-30_i8),(-109_i8)];
_15 = _4;
_19 = !_16.fld1;
_6.0 = [_2,_2,_2,_2,_18,_18,_18];
_16.fld0 = [(-4156012518716239457_i64),9189466767505136888_i64,7156489562793868549_i64,1739333383373566656_i64,(-7757870647584866650_i64),(-4563485741654629896_i64),(-3863228472484180028_i64),(-1767415793864809091_i64)];
_10 = _3 as isize;
_20 = [(-535780682_i32),1586598151_i32,(-236381861_i32),572443257_i32,1630084808_i32,1742593345_i32,740988183_i32];
match _5 {
0 => bb10,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb6,
6 => bb7,
4596861348818494577 => bb15,
_ => bb14
}
}
bb14 = {
RET = [1391399522764281743_i64];
_1 = core::ptr::addr_of!((*_1));
_5 = 14571328365495051076_u64;
_6.0 = [(*_1),(*_1),(*_1),_2,(*_1),(*_1),(*_1)];
_1 = core::ptr::addr_of!((*_1));
_3 = 217218300802607092810001217922396681349_u128;
_2 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1 = core::ptr::addr_of!(_2);
_5 = 8204441321032885398_u64;
_6.0 = [(*_1),_2,_2,(*_1),(*_1),_2,_2];
_1 = core::ptr::addr_of!((*_1));
_9 = [1047248720_i32,(-1216786876_i32),(-1006694754_i32),(-1788152774_i32),(-1045015489_i32),938789151_i32,(-1152805924_i32)];
_9 = [(-1080920522_i32),722776603_i32,(-1286631163_i32),1908145398_i32,1661968528_i32,67117442_i32,(-257020825_i32)];
_7 = _9;
_4 = [7665095428006407477_i64];
_8 = _7;
_3 = !140860538074943880159190204477486377218_u128;
RET = [6729090005177197800_i64];
_6.0 = [(*_1),(*_1),(*_1),(*_1),(*_1),(*_1),_2];
RET = [(-7403275445678716839_i64)];
_7 = _8;
_3 = 3170021205773615145987704321609554911_u128 & 129064297005420976359992946716484345454_u128;
_1 = core::ptr::addr_of!((*_1));
_1 = core::ptr::addr_of!(_2);
RET = [8082254603423720956_i64];
_7 = [1261178263_i32,951969407_i32,541594949_i32,(-365209741_i32),(-611378058_i32),(-624192367_i32),(-1162636011_i32)];
_4 = [5477203707075618596_i64];
Goto(bb5)
}
bb15 = {
_20 = [1866888892_i32,1754137054_i32,(-809478299_i32),756735645_i32,(-1865271319_i32),1539313458_i32,(-1404299117_i32)];
_20 = _8;
_22 = [(-44_i8),(-118_i8),5_i8,(-49_i8),(-29_i8),108_i8,(-19_i8)];
_5 = 10641093431692328_u64;
_6.0 = [_2,_18,_2,_18,_18,_18,_18];
_2 = _5 as isize;
_2 = (-77_i8) as isize;
_23 = 119470521594028706841180389021247966103_i128 & (-68844760513328733952601075812842037804_i128);
_10 = _18;
Goto(bb16)
}
bb16 = {
Call(_27 = dump_var(4_usize, 8_usize, Move(_8), 4_usize, Move(_4), 7_usize, Move(_7), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_27 = dump_var(4_usize, 5_usize, Move(_5), 10_usize, Move(_10), 6_usize, Move(_6), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_27 = dump_var(4_usize, 20_usize, Move(_20), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *const isize,mut _2: *const isize) -> isize {
mir! {
type RET = isize;
let _3: usize;
let _4: f32;
let _5: [u128; 3];
let _6: i64;
let _7: [i8; 7];
let _8: isize;
let _9: char;
let _10: isize;
let _11: Adt41;
let _12: u128;
let _13: [i8; 5];
let _14: u16;
let _15: [isize; 7];
let _16: Adt42;
let _17: i128;
let _18: u128;
let _19: char;
let _20: [i8; 5];
let _21: f64;
let _22: bool;
let _23: [u8; 7];
let _24: isize;
let _25: u64;
let _26: ();
let _27: ();
{
_1 = core::ptr::addr_of!(RET);
RET = 93_isize;
_2 = _1;
RET = 2746966754_u32 as isize;
RET = 7802244280905274679_u64 as isize;
_2 = core::ptr::addr_of!((*_1));
RET = (-9223372036854775808_isize) + 105_isize;
_3 = !12879728977614434445_usize;
RET = _3 as isize;
RET = 9223372036854775807_isize;
RET = 168234155536848666637790362000240713746_i128 as isize;
_1 = _2;
_3 = (-10263943597731825524347323537575522738_i128) as usize;
_2 = _1;
_1 = _2;
_3 = 4_usize >> RET;
RET = 1_isize ^ 9223372036854775807_isize;
RET = 9223372036854775807_isize | 21_isize;
RET = 9223372036854775807_isize;
_1 = core::ptr::addr_of!(RET);
_3 = 30013_i16 as usize;
_4 = (-27569_i16) as f32;
Call(_5 = fn6(RET, _1, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = core::ptr::addr_of!((*_1));
_4 = _3 as f32;
_3 = (-10646_i16) as usize;
_3 = 7_usize;
_6 = (-2324092489745673123_i64) - (-5514204989171783208_i64);
RET = 9223372036854775807_isize | 9223372036854775807_isize;
_5 = [648140008513393090357322298905525886_u128,255181767282671664222434790421484185255_u128,118870688395551365397052595112594149841_u128];
_7 = [(-41_i8),1_i8,(-68_i8),104_i8,113_i8,(-64_i8),80_i8];
_6 = 5645029761194674974_i64;
_2 = core::ptr::addr_of!((*_1));
_3 = !13880909953175529895_usize;
Goto(bb2)
}
bb2 = {
_2 = core::ptr::addr_of!((*_2));
_3 = 1_usize;
_7 = [55_i8,(-108_i8),(-28_i8),(-98_i8),111_i8,77_i8,(-57_i8)];
_8 = !(*_2);
_7[_3] = _6 as i8;
_4 = (-266129354031168247199687712897116113_i128) as f32;
_3 = 5_usize << (*_1);
_7 = [53_i8,20_i8,(-43_i8),102_i8,(-29_i8),(-107_i8),51_i8];
_9 = '\u{c8564}';
RET = 12377213546318611983_u64 as isize;
RET = !_8;
_7 = [49_i8,(-68_i8),19_i8,(-96_i8),(-103_i8),(-9_i8),65_i8];
_2 = core::ptr::addr_of!((*_1));
_9 = '\u{70dd5}';
_4 = 10427_u16 as f32;
_4 = 321200447_i32 as f32;
_1 = core::ptr::addr_of!(RET);
_3 = _9 as usize;
_10 = -RET;
_12 = 192034017778062720261073662170058715178_u128 + 20445720915776080906969078107718495930_u128;
_4 = 2763769873910992024_u64 as f32;
_5 = [_12,_12,_12];
match _6 {
0 => bb1,
1 => bb3,
2 => bb4,
5645029761194674974 => bb6,
_ => bb5
}
}
bb3 = {
_1 = core::ptr::addr_of!((*_1));
_4 = _3 as f32;
_3 = (-10646_i16) as usize;
_3 = 7_usize;
_6 = (-2324092489745673123_i64) - (-5514204989171783208_i64);
RET = 9223372036854775807_isize | 9223372036854775807_isize;
_5 = [648140008513393090357322298905525886_u128,255181767282671664222434790421484185255_u128,118870688395551365397052595112594149841_u128];
_7 = [(-41_i8),1_i8,(-68_i8),104_i8,113_i8,(-64_i8),80_i8];
_6 = 5645029761194674974_i64;
_2 = core::ptr::addr_of!((*_1));
_3 = !13880909953175529895_usize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_2 = core::ptr::addr_of!((*_2));
RET = _10 + _8;
_7 = [(-107_i8),77_i8,109_i8,(-117_i8),(-14_i8),(-22_i8),(-94_i8)];
_5 = [_12,_12,_12];
_14 = 42382_u16;
RET = -_10;
_16.fld0 = [_6,_6,_6,_6,_6,_6,_6,_6];
_8 = (*_1) ^ (*_2);
_16.fld4 = 2663_i16;
_5 = [_12,_12,_12];
_18 = 23_i8 as u128;
_7 = [86_i8,124_i8,(-61_i8),(-64_i8),(-114_i8),(-33_i8),24_i8];
_16.fld1 = 3580732484_u32 * 2058476772_u32;
Goto(bb7)
}
bb7 = {
_6 = !4387557630515719517_i64;
_2 = core::ptr::addr_of!((*_2));
_14 = _16.fld4 as u16;
_16.fld2 = Adt40::Variant0 { fld0: false,fld1: 85_i8,fld2: _4 };
_16.fld2 = Adt40::Variant0 { fld0: false,fld1: (-19_i8),fld2: _4 };
_4 = (-153848422698511182294533542896592096513_i128) as f32;
_19 = _9;
_16.fld2 = Adt40::Variant0 { fld0: false,fld1: 83_i8,fld2: _4 };
_3 = 1_usize + 5_usize;
_19 = _9;
_15 = [(*_1),_8,_8,(*_2),_8,(*_1),(*_2)];
_5 = [_18,_12,_12];
place!(Field::<f32>(Variant(_16.fld2, 0), 2)) = _4 + _4;
_15 = [(*_2),_8,(*_1),(*_1),(*_1),(*_2),_8];
_6 = -(-5097859115486981305_i64);
place!(Field::<f32>(Variant(_16.fld2, 0), 2)) = _6 as f32;
_5 = [_18,_12,_18];
_16.fld0 = [_6,_6,_6,_6,_6,_6,_6,_6];
_16.fld2 = Adt40::Variant0 { fld0: true,fld1: 41_i8,fld2: _4 };
place!(Field::<i8>(Variant(_16.fld2, 0), 1)) = 34_i8 >> (*_1);
_18 = _12;
_16.fld1 = 3171571364_u32;
_21 = _12 as f64;
_4 = Field::<f32>(Variant(_16.fld2, 0), 2) - Field::<f32>(Variant(_16.fld2, 0), 2);
_18 = _12;
_16.fld1 = 3526156886_u32 * 863559327_u32;
_8 = -(*_2);
match _16.fld4 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
2663 => bb15,
_ => bb14
}
}
bb8 = {
_2 = core::ptr::addr_of!((*_2));
RET = _10 + _8;
_7 = [(-107_i8),77_i8,109_i8,(-117_i8),(-14_i8),(-22_i8),(-94_i8)];
_5 = [_12,_12,_12];
_14 = 42382_u16;
RET = -_10;
_16.fld0 = [_6,_6,_6,_6,_6,_6,_6,_6];
_8 = (*_1) ^ (*_2);
_16.fld4 = 2663_i16;
_5 = [_12,_12,_12];
_18 = 23_i8 as u128;
_7 = [86_i8,124_i8,(-61_i8),(-64_i8),(-114_i8),(-33_i8),24_i8];
_16.fld1 = 3580732484_u32 * 2058476772_u32;
Goto(bb7)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = core::ptr::addr_of!((*_1));
_4 = _3 as f32;
_3 = (-10646_i16) as usize;
_3 = 7_usize;
_6 = (-2324092489745673123_i64) - (-5514204989171783208_i64);
RET = 9223372036854775807_isize | 9223372036854775807_isize;
_5 = [648140008513393090357322298905525886_u128,255181767282671664222434790421484185255_u128,118870688395551365397052595112594149841_u128];
_7 = [(-41_i8),1_i8,(-68_i8),104_i8,113_i8,(-64_i8),80_i8];
_6 = 5645029761194674974_i64;
_2 = core::ptr::addr_of!((*_1));
_3 = !13880909953175529895_usize;
Goto(bb2)
}
bb12 = {
_2 = core::ptr::addr_of!((*_2));
_3 = 1_usize;
_7 = [55_i8,(-108_i8),(-28_i8),(-98_i8),111_i8,77_i8,(-57_i8)];
_8 = !(*_2);
_7[_3] = _6 as i8;
_4 = (-266129354031168247199687712897116113_i128) as f32;
_3 = 5_usize << (*_1);
_7 = [53_i8,20_i8,(-43_i8),102_i8,(-29_i8),(-107_i8),51_i8];
_9 = '\u{c8564}';
RET = 12377213546318611983_u64 as isize;
RET = !_8;
_7 = [49_i8,(-68_i8),19_i8,(-96_i8),(-103_i8),(-9_i8),65_i8];
_2 = core::ptr::addr_of!((*_1));
_9 = '\u{70dd5}';
_4 = 10427_u16 as f32;
_4 = 321200447_i32 as f32;
_1 = core::ptr::addr_of!(RET);
_3 = _9 as usize;
_10 = -RET;
_12 = 192034017778062720261073662170058715178_u128 + 20445720915776080906969078107718495930_u128;
_4 = 2763769873910992024_u64 as f32;
_5 = [_12,_12,_12];
match _6 {
0 => bb1,
1 => bb3,
2 => bb4,
5645029761194674974 => bb6,
_ => bb5
}
}
bb13 = {
_1 = core::ptr::addr_of!((*_1));
_4 = _3 as f32;
_3 = (-10646_i16) as usize;
_3 = 7_usize;
_6 = (-2324092489745673123_i64) - (-5514204989171783208_i64);
RET = 9223372036854775807_isize | 9223372036854775807_isize;
_5 = [648140008513393090357322298905525886_u128,255181767282671664222434790421484185255_u128,118870688395551365397052595112594149841_u128];
_7 = [(-41_i8),1_i8,(-68_i8),104_i8,113_i8,(-64_i8),80_i8];
_6 = 5645029761194674974_i64;
_2 = core::ptr::addr_of!((*_1));
_3 = !13880909953175529895_usize;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
_18 = !_12;
_5 = [_12,_12,_12];
_2 = core::ptr::addr_of!(_8);
RET = -_8;
_23 = [90_u8,47_u8,43_u8,243_u8,1_u8,104_u8,20_u8];
RET = _8;
_16.fld2 = Adt40::Variant0 { fld0: true,fld1: (-65_i8),fld2: _4 };
_16.fld1 = !1298008783_u32;
Goto(bb16)
}
bb16 = {
Call(_26 = dump_var(5_usize, 14_usize, Move(_14), 23_usize, Move(_23), 8_usize, Move(_8), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(5_usize, 19_usize, Move(_19), 7_usize, Move(_7), 27_usize, _27, 27_usize, _27), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: isize,mut _2: *const isize,mut _3: *const isize) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _4: isize;
let _5: [isize; 7];
let _6: [isize; 7];
let _7: char;
let _8: [i8; 5];
let _9: ([isize; 7],);
let _10: char;
let _11: i64;
let _12: isize;
let _13: [i8; 7];
let _14: u16;
let _15: isize;
let _16: [i8; 7];
let _17: *mut [u128; 3];
let _18: (i8, *const isize, i128, i128, [i64; 1]);
let _19: *mut [u128; 3];
let _20: ([isize; 7],);
let _21: isize;
let _22: Adt53;
let _23: [u8; 7];
let _24: f32;
let _25: usize;
let _26: *mut &'static f64;
let _27: bool;
let _28: u32;
let _29: [i32; 7];
let _30: f64;
let _31: Adt48;
let _32: ();
let _33: ();
{
_3 = core::ptr::addr_of!(_1);
RET = [51389795181453423251300776401581112152_u128,253530548204671603920684353350406098358_u128,11884811739331289317013809737147081823_u128];
_1 = (-32_isize);
Call(_1 = fn7(RET, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = core::ptr::addr_of!((*_3));
_1 = 9223372036854775807_isize - 9223372036854775807_isize;
_3 = _2;
_3 = core::ptr::addr_of!((*_2));
_3 = _2;
_2 = _3;
RET = [151276518393820465593362774305072326941_u128,320656011732588857013253624567374512205_u128,294400273729220792002888739493964178767_u128];
_4 = _1 - _1;
RET = [67568913158763970272223323220826244800_u128,50327371018719494181873620545859024034_u128,67836983605214614661790479423332414545_u128];
_1 = _4 * _4;
_1 = 3991336637_u32 as isize;
_3 = core::ptr::addr_of!(_1);
_3 = core::ptr::addr_of!(_1);
_2 = core::ptr::addr_of!(_4);
RET = [237857818487455619467595473847993460106_u128,70055189093470011495143368411374853052_u128,123320411899395925975649946367005674874_u128];
_2 = _3;
RET = [108613359800514043943329185287484433051_u128,135227494462625525624948747680060751756_u128,159430321039158307643009827111778801413_u128];
RET = [174621690617796677162499701744539755451_u128,304354031062460716224859824154491336854_u128,134798308988345975002114982512946193300_u128];
RET = [303510423165392986760813738073983149313_u128,84849288431638629933385712641458631964_u128,107971272140763127606359929732311037511_u128];
_1 = !_4;
_4 = !(*_3);
_3 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb2 = {
RET = [299367752785754379251682344943331740012_u128,82743880187930260958938874624642333859_u128,325071430952666574542942320642428470147_u128];
_9.0 = [(*_3),(*_3),(*_3),(*_3),_4,(*_3),(*_3)];
_10 = '\u{50b6f}';
_6 = [(*_3),(*_3),(*_3),(*_3),(*_3),_1,(*_3)];
_6 = _9.0;
_9.0 = [_4,(*_3),(*_3),_4,(*_3),_4,_1];
_4 = -_1;
_11 = -239393953372710682_i64;
_4 = _1;
_5 = [_4,_1,(*_3),(*_3),_4,_1,_4];
_1 = (*_3) + _4;
_3 = _2;
_10 = '\u{80aa0}';
_10 = '\u{d7242}';
_1 = !_4;
_7 = _10;
_9.0 = [_4,_4,_4,_4,_4,_1,_4];
RET = [323709652541253176357438678370619883903_u128,43530782004544510891579052492804558803_u128,88832101597891952464574660772347155297_u128];
_12 = false as isize;
_10 = _7;
_13 = [(-21_i8),(-90_i8),121_i8,84_i8,(-87_i8),(-30_i8),(-40_i8)];
_3 = _2;
_12 = _1 & _4;
_6 = _9.0;
_4 = _12;
_12 = _4 ^ _1;
_1 = _12;
Goto(bb3)
}
bb3 = {
_14 = 7357_u16;
_6 = [_1,_12,_12,_12,_4,_1,_4];
_14 = 48886_u16;
_8 = [29_i8,(-85_i8),57_i8,75_i8,(-127_i8)];
Goto(bb4)
}
bb4 = {
RET = [222130988339469851543359163796780942639_u128,44457384322962199729662772607899506870_u128,149805108145486393925697586507059836910_u128];
_10 = _7;
_9.0 = [_1,_12,_1,_4,_12,_1,_1];
RET = [320983512765922709922007304439208329915_u128,1954079899366549162266219225435752072_u128,290809353762508324993614743911538316916_u128];
_8 = [(-108_i8),(-108_i8),51_i8,3_i8,44_i8];
_10 = _7;
_1 = !_4;
_14 = 95178371070863455368023214153302263918_i128 as u16;
_11 = 12_i8 as i64;
Goto(bb5)
}
bb5 = {
_6 = _5;
RET = [249747119080374729016784603505504770486_u128,189460497721503838710134780643507013428_u128,36645093294796536987199317622942761397_u128];
_6 = [_1,_1,_12,_12,_12,_12,_12];
Call(_4 = core::intrinsics::transmute(_12), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_1 = 120_u8 as isize;
_1 = _4;
_5 = [_4,_1,_1,_4,_12,_1,_4];
_9 = (_6,);
_8 = [88_i8,(-11_i8),(-110_i8),(-51_i8),59_i8];
_10 = _7;
_5 = [_12,_1,_4,_12,_4,_1,_4];
_1 = -_4;
_15 = 67052054589426994481922794989712278670_u128 as isize;
_6 = [_12,_12,_4,_12,_12,_4,_12];
_3 = _2;
_12 = !_4;
_10 = _7;
_4 = !_1;
_11 = (-19210978071171382594931972761569777733_i128) as i64;
_13 = [(-51_i8),98_i8,19_i8,(-23_i8),(-43_i8),(-12_i8),(-30_i8)];
Goto(bb7)
}
bb7 = {
_9.0 = [_4,_12,_12,_4,_4,_12,_12];
Goto(bb8)
}
bb8 = {
_9 = (_5,);
_15 = _1 & _1;
_10 = _7;
_18.0 = (-34368093086703081579556811422035488761_i128) as i8;
_18.4 = [_11];
_18.2 = -157677909518248440274344831950595384570_i128;
_15 = _4 ^ _4;
_2 = _3;
_10 = _7;
_18.4 = [_11];
_17 = core::ptr::addr_of_mut!(RET);
_7 = _10;
_15 = _14 as isize;
_18.1 = core::ptr::addr_of!(_1);
_5 = [_12,_1,_12,_12,_1,_4,_1];
_6 = [_1,_12,_12,_1,_1,_1,_4];
_16 = _13;
Goto(bb9)
}
bb9 = {
_18.0 = _11 as i8;
RET = [168258678709953796749031942442887937859_u128,39293323567103036545313048489635258870_u128,80684534766445921469234136982783439046_u128];
_5 = [_4,_12,_4,_4,_4,_4,_12];
_6 = [_4,_1,_4,_1,_4,_12,_12];
_20.0 = [_12,_4,_12,_15,_1,_1,_12];
_18.3 = _18.2 + _18.2;
Goto(bb10)
}
bb10 = {
_9 = (_5,);
_3 = _18.1;
_19 = _17;
_8 = [_18.0,_18.0,_18.0,_18.0,_18.0];
_6 = _5;
_18.1 = core::ptr::addr_of!(_21);
_20.0 = [_12,_4,_12,_12,_1,_1,_15];
_19 = core::ptr::addr_of_mut!(RET);
_2 = _3;
_17 = _19;
_13 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
RET = [277829361132595121031087987440246088992_u128,151679941166620267098357086549985066296_u128,152580205505351874214453096931076914049_u128];
_15 = _1 * _12;
_23 = [227_u8,98_u8,196_u8,76_u8,13_u8,49_u8,25_u8];
_2 = core::ptr::addr_of!(_4);
_11 = (-5875810365676018991_i64);
_2 = core::ptr::addr_of!(_21);
_16 = _13;
_3 = core::ptr::addr_of!((*_2));
_25 = 4650379709014530800_usize + 4720959191339418876_usize;
_20.0 = _6;
RET = [163660407977829260848634201749566266668_u128,66541866063128116103238704301153162078_u128,202234800599079247041500918401412289675_u128];
match _11 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb7,
340282366920938463457498797066092192465 => bb12,
_ => bb11
}
}
bb11 = {
_9.0 = [_4,_12,_12,_4,_4,_12,_12];
Goto(bb8)
}
bb12 = {
_18.3 = _18.2 << _15;
_25 = 16428141650340843226_usize;
RET = [132744040482547107492731987861173783990_u128,256319421567400330460363647345957181820_u128,18503823532723048211664409751182535986_u128];
_21 = -_15;
_9 = (_5,);
Goto(bb13)
}
bb13 = {
_27 = !false;
_3 = core::ptr::addr_of!((*_3));
RET = [6802996721949046591415520885161825940_u128,266240177502011770408570045692135142957_u128,340219421020396744881437048141944835424_u128];
_24 = _18.0 as f32;
_16 = _13;
_13 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_9 = (_6,);
RET = [232440745095928910096078100625431036371_u128,240802753844176744517896962000594612134_u128,248440767067878522946985134337941580202_u128];
RET = [292325117475629798910206940882930134237_u128,50903686765246164608276648819202603463_u128,160779620151626441932863506772162727257_u128];
_24 = 54_u8 as f32;
_16 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_21 = _4 + _12;
_24 = _18.3 as f32;
_2 = _18.1;
_13 = _16;
match _25 {
0 => bb14,
16428141650340843226 => bb16,
_ => bb15
}
}
bb14 = {
_9 = (_5,);
_15 = _1 & _1;
_10 = _7;
_18.0 = (-34368093086703081579556811422035488761_i128) as i8;
_18.4 = [_11];
_18.2 = -157677909518248440274344831950595384570_i128;
_15 = _4 ^ _4;
_2 = _3;
_10 = _7;
_18.4 = [_11];
_17 = core::ptr::addr_of_mut!(RET);
_7 = _10;
_15 = _14 as isize;
_18.1 = core::ptr::addr_of!(_1);
_5 = [_12,_1,_12,_12,_1,_4,_1];
_6 = [_1,_12,_12,_1,_1,_1,_4];
_16 = _13;
Goto(bb9)
}
bb15 = {
_2 = core::ptr::addr_of!((*_3));
_1 = 9223372036854775807_isize - 9223372036854775807_isize;
_3 = _2;
_3 = core::ptr::addr_of!((*_2));
_3 = _2;
_2 = _3;
RET = [151276518393820465593362774305072326941_u128,320656011732588857013253624567374512205_u128,294400273729220792002888739493964178767_u128];
_4 = _1 - _1;
RET = [67568913158763970272223323220826244800_u128,50327371018719494181873620545859024034_u128,67836983605214614661790479423332414545_u128];
_1 = _4 * _4;
_1 = 3991336637_u32 as isize;
_3 = core::ptr::addr_of!(_1);
_3 = core::ptr::addr_of!(_1);
_2 = core::ptr::addr_of!(_4);
RET = [237857818487455619467595473847993460106_u128,70055189093470011495143368411374853052_u128,123320411899395925975649946367005674874_u128];
_2 = _3;
RET = [108613359800514043943329185287484433051_u128,135227494462625525624948747680060751756_u128,159430321039158307643009827111778801413_u128];
RET = [174621690617796677162499701744539755451_u128,304354031062460716224859824154491336854_u128,134798308988345975002114982512946193300_u128];
RET = [303510423165392986760813738073983149313_u128,84849288431638629933385712641458631964_u128,107971272140763127606359929732311037511_u128];
_1 = !_4;
_4 = !(*_3);
_3 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb16 = {
_9 = (_20.0,);
_18.0 = -79_i8;
_6 = [_1,_15,(*_3),_15,_15,_21,(*_3)];
_28 = 3025323502_u32 | 2098928377_u32;
_18.4 = [_11];
_9.0 = [(*_3),(*_3),_12,_15,(*_3),_4,(*_3)];
_18.0 = 28_i8 ^ 48_i8;
RET = [88282546441675106079010344846827919226_u128,239562513984072037444980516091568928153_u128,25771000143666308250140992987258003625_u128];
_9.0 = [_21,_21,_4,_21,_1,(*_3),_15];
_18.4 = [_11];
RET = [11494872697894871933735137238615014592_u128,130319451612773844467316520365515029594_u128,270462647643756940352084200029165767051_u128];
_1 = (*_3) & _15;
_4 = _21 + _15;
_10 = _7;
RET = [84408162617304958488440545027866462203_u128,163040882539587914106333904990193906460_u128,136353738216281744032387180481343919647_u128];
_12 = _15 >> _18.3;
RET = [188998161441731460256141790028199906350_u128,315161699579960029833081390676446036333_u128,93613108341100612892216828778261337973_u128];
_18.2 = _11 as i128;
_3 = _2;
_2 = core::ptr::addr_of!(_21);
Goto(bb17)
}
bb17 = {
Call(_32 = dump_var(6_usize, 27_usize, Move(_27), 10_usize, Move(_10), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_32 = dump_var(6_usize, 7_usize, Move(_7), 23_usize, Move(_23), 11_usize, Move(_11), 20_usize, Move(_20)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(6_usize, 6_usize, Move(_6), 28_usize, Move(_28), 33_usize, _33, 33_usize, _33), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [u128; 3],mut _2: [u128; 3]) -> isize {
mir! {
type RET = isize;
let _3: [u8; 7];
let _4: [i32; 7];
let _5: isize;
let _6: u32;
let _7: usize;
let _8: [u128; 3];
let _9: u16;
let _10: char;
let _11: f32;
let _12: (*mut bool, bool, i128, isize, u128, bool);
let _13: Adt48;
let _14: ((*mut bool, bool, i128, isize, u128, bool),);
let _15: f64;
let _16: [u8; 7];
let _17: i128;
let _18: [u8; 7];
let _19: Adt40;
let _20: Adt51;
let _21: Adt51;
let _22: Adt54;
let _23: [u8; 7];
let _24: i64;
let _25: [i8; 5];
let _26: u64;
let _27: [u128; 3];
let _28: bool;
let _29: [i8; 5];
let _30: [i64; 8];
let _31: f32;
let _32: f64;
let _33: f64;
let _34: usize;
let _35: f64;
let _36: ();
let _37: ();
{
RET = -(-9223372036854775808_isize);
_2 = [240782099105219087852227208959778666185_u128,78086647589180657665696520410307806490_u128,303604676099937998826919920566670700888_u128];
_1 = _2;
_3 = [232_u8,243_u8,83_u8,199_u8,191_u8,101_u8,43_u8];
RET = 42_isize >> (-39_isize);
_5 = (-4226616936909550364_i64) as isize;
RET = (-145618040564832109763312055664015265286_i128) as isize;
_5 = (-11820_i16) as isize;
_6 = !1404114043_u32;
_2 = [128827234953141831339227552975778981358_u128,255017543465431063871267030879958451462_u128,128751119950031510319402968760823592288_u128];
_5 = RET | RET;
_2 = [247153415453698350678555444320054493336_u128,185260800287374299053977980649286238416_u128,201246406268630791349045240062800386803_u128];
_3 = [202_u8,200_u8,200_u8,50_u8,146_u8,236_u8,98_u8];
_5 = 191_u8 as isize;
RET = _5 * _5;
_4 = [1103526292_i32,1215821980_i32,(-1339847307_i32),677754070_i32,(-164568692_i32),144633509_i32,(-1204909537_i32)];
RET = -_5;
RET = _6 as isize;
_3 = [209_u8,130_u8,197_u8,79_u8,23_u8,37_u8,215_u8];
_6 = 3353107120_u32 * 735959957_u32;
_2 = [116857586819498524851412610362332620862_u128,210255477916707789329865855308293996945_u128,12732977982579653321181948152924360063_u128];
Goto(bb1)
}
bb1 = {
RET = _5 * _5;
_1 = _2;
RET = 3534_i16 as isize;
_8 = [133043419061360053188615888818734214570_u128,266893657402987195068239092239680837578_u128,327140294300747526612988403036523903785_u128];
_7 = 0_usize * 0_usize;
RET = !_5;
_9 = 14007830116240388942225593240095416375_i128 as u16;
RET = _5 >> _6;
_5 = 2063101511_i32 as isize;
_1 = [320715884222415200437842094640300899251_u128,276914638400272303555394134053000962551_u128,223980950845598320894702202441572025166_u128];
_3 = [82_u8,48_u8,211_u8,244_u8,215_u8,2_u8,178_u8];
_2 = _8;
_3 = [152_u8,97_u8,117_u8,12_u8,252_u8,94_u8,150_u8];
_12.3 = _9 as isize;
Call(_8 = fn8(RET, _6, _12.3, RET, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = 27_i8 as f32;
_12.2 = 45_i8 as i128;
_8 = [25276639656242726306698233325563244589_u128,6319880708453178632664422047179662466_u128,230575521493011936510857797586857587269_u128];
_12.5 = false;
_14.0.3 = -RET;
_1 = _2;
_14.0.5 = _14.0.3 >= RET;
_1 = _2;
_12.0 = core::ptr::addr_of_mut!(_12.5);
_14.0.3 = _14.0.5 as isize;
_14.0.2 = _12.2;
_12.1 = _14.0.5;
_8 = [154070476403255447830425216217333821192_u128,9012439060744577319167793244148670399_u128,1249850696946355609046294333788692585_u128];
_6 = 20_u8 as u32;
Goto(bb3)
}
bb3 = {
_12.2 = _14.0.2 & _14.0.2;
_14.0.3 = _12.3 + RET;
_14.0.1 = _14.0.5;
_16 = _3;
_14.0.4 = 282389650774362424817786175533451179596_u128 & 316437922179122215436801339046100504274_u128;
_15 = (-231200905_i32) as f64;
_12.4 = RET as u128;
_2 = _1;
_5 = _14.0.3;
_12.2 = _15 as i128;
_12.5 = _14.0.3 < _5;
_12.2 = _14.0.2 * _14.0.2;
_4 = [(-1539922877_i32),(-656747595_i32),1744181106_i32,510632475_i32,1467561105_i32,1739394808_i32,(-306338907_i32)];
_2 = [_12.4,_12.4,_12.4];
_6 = 2691929529_u32 | 1259822974_u32;
_5 = _14.0.3;
_6 = !668725886_u32;
_14.0.4 = (-9169717977904076456_i64) as u128;
_14.0 = (_12.0, _12.5, _12.2, _5, _12.4, _12.5);
_10 = '\u{58002}';
_14 = (_12,);
Goto(bb4)
}
bb4 = {
_8 = _1;
_9 = 13801_u16 & 40567_u16;
_1 = [_14.0.4,_14.0.4,_12.4];
_4 = [720069167_i32,(-1248187743_i32),958962663_i32,638862707_i32,1766955809_i32,2030217600_i32,520881539_i32];
_6 = _15 as u32;
_18 = [219_u8,216_u8,91_u8,7_u8,125_u8,218_u8,153_u8];
_11 = (-1186686195_i32) as f32;
_17 = !_12.2;
_23 = [151_u8,181_u8,148_u8,101_u8,132_u8,4_u8,140_u8];
_6 = 3437531031_u32 ^ 944245740_u32;
_12 = _14.0;
_2 = [_14.0.4,_14.0.4,_14.0.4];
_12.0 = _14.0.0;
_9 = 2330_u16 + 59720_u16;
_12.5 = !_12.1;
Goto(bb5)
}
bb5 = {
_1 = _8;
_12.1 = _12.5;
_24 = (-2759776490492547080_i64) ^ 4270444190095217661_i64;
_9 = 17162_u16;
_12.1 = !_12.5;
_9 = 694_u16;
RET = -_12.3;
_7 = 10578467010073201506_usize - 14252870434234386079_usize;
_11 = 26396_i16 as f32;
RET = _5 << _14.0.4;
_17 = _12.2;
match _9 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
694 => bb13,
_ => bb12
}
}
bb6 = {
_8 = _1;
_9 = 13801_u16 & 40567_u16;
_1 = [_14.0.4,_14.0.4,_12.4];
_4 = [720069167_i32,(-1248187743_i32),958962663_i32,638862707_i32,1766955809_i32,2030217600_i32,520881539_i32];
_6 = _15 as u32;
_18 = [219_u8,216_u8,91_u8,7_u8,125_u8,218_u8,153_u8];
_11 = (-1186686195_i32) as f32;
_17 = !_12.2;
_23 = [151_u8,181_u8,148_u8,101_u8,132_u8,4_u8,140_u8];
_6 = 3437531031_u32 ^ 944245740_u32;
_12 = _14.0;
_2 = [_14.0.4,_14.0.4,_14.0.4];
_12.0 = _14.0.0;
_9 = 2330_u16 + 59720_u16;
_12.5 = !_12.1;
Goto(bb5)
}
bb7 = {
_12.2 = _14.0.2 & _14.0.2;
_14.0.3 = _12.3 + RET;
_14.0.1 = _14.0.5;
_16 = _3;
_14.0.4 = 282389650774362424817786175533451179596_u128 & 316437922179122215436801339046100504274_u128;
_15 = (-231200905_i32) as f64;
_12.4 = RET as u128;
_2 = _1;
_5 = _14.0.3;
_12.2 = _15 as i128;
_12.5 = _14.0.3 < _5;
_12.2 = _14.0.2 * _14.0.2;
_4 = [(-1539922877_i32),(-656747595_i32),1744181106_i32,510632475_i32,1467561105_i32,1739394808_i32,(-306338907_i32)];
_2 = [_12.4,_12.4,_12.4];
_6 = 2691929529_u32 | 1259822974_u32;
_5 = _14.0.3;
_6 = !668725886_u32;
_14.0.4 = (-9169717977904076456_i64) as u128;
_14.0 = (_12.0, _12.5, _12.2, _5, _12.4, _12.5);
_10 = '\u{58002}';
_14 = (_12,);
Goto(bb4)
}
bb8 = {
_11 = 27_i8 as f32;
_12.2 = 45_i8 as i128;
_8 = [25276639656242726306698233325563244589_u128,6319880708453178632664422047179662466_u128,230575521493011936510857797586857587269_u128];
_12.5 = false;
_14.0.3 = -RET;
_1 = _2;
_14.0.5 = _14.0.3 >= RET;
_1 = _2;
_12.0 = core::ptr::addr_of_mut!(_12.5);
_14.0.3 = _14.0.5 as isize;
_14.0.2 = _12.2;
_12.1 = _14.0.5;
_8 = [154070476403255447830425216217333821192_u128,9012439060744577319167793244148670399_u128,1249850696946355609046294333788692585_u128];
_6 = 20_u8 as u32;
Goto(bb3)
}
bb9 = {
RET = _5 * _5;
_1 = _2;
RET = 3534_i16 as isize;
_8 = [133043419061360053188615888818734214570_u128,266893657402987195068239092239680837578_u128,327140294300747526612988403036523903785_u128];
_7 = 0_usize * 0_usize;
RET = !_5;
_9 = 14007830116240388942225593240095416375_i128 as u16;
RET = _5 >> _6;
_5 = 2063101511_i32 as isize;
_1 = [320715884222415200437842094640300899251_u128,276914638400272303555394134053000962551_u128,223980950845598320894702202441572025166_u128];
_3 = [82_u8,48_u8,211_u8,244_u8,215_u8,2_u8,178_u8];
_2 = _8;
_3 = [152_u8,97_u8,117_u8,12_u8,252_u8,94_u8,150_u8];
_12.3 = _9 as isize;
Call(_8 = fn8(RET, _6, _12.3, RET, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_14.0.2 = 54_i8 as i128;
_12.0 = _14.0.0;
_18 = [162_u8,55_u8,236_u8,143_u8,120_u8,65_u8,120_u8];
_8 = _1;
_12.4 = _14.0.4 - _14.0.4;
_23 = [5_u8,65_u8,66_u8,134_u8,159_u8,186_u8,102_u8];
_14.0 = (_12.0, _12.5, _17, RET, _12.4, _12.1);
_5 = RET;
_28 = _17 >= _17;
_12.3 = RET;
_12.1 = RET < RET;
_18 = _23;
_12.1 = !_14.0.5;
_11 = RET as f32;
_12.1 = !_12.5;
_28 = _14.0.1;
_14.0.2 = (-5524_i16) as i128;
_10 = '\u{d3cdd}';
_4 = [1451817121_i32,682370696_i32,1231323224_i32,1012887498_i32,(-593897762_i32),850060745_i32,(-1648933785_i32)];
_7 = !2_usize;
_2 = [_14.0.4,_14.0.4,_12.4];
_12.2 = -_17;
_3 = _16;
RET = 1465485203015330607_u64 as isize;
_19 = Adt40::Variant0 { fld0: _12.5,fld1: 74_i8,fld2: _11 };
Call(place!(Field::<i8>(Variant(_19, 0), 1)) = core::intrinsics::bswap((-80_i8)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_30 = [_24,_24,_24,_24,_24,_24,_24,_24];
_8 = _2;
_25 = [Field::<i8>(Variant(_19, 0), 1),Field::<i8>(Variant(_19, 0), 1),Field::<i8>(Variant(_19, 0), 1),Field::<i8>(Variant(_19, 0), 1),Field::<i8>(Variant(_19, 0), 1)];
_14.0.4 = _12.4 ^ _12.4;
_24 = 870147981990088650_i64;
_11 = Field::<f32>(Variant(_19, 0), 2);
_7 = 3_usize << _12.3;
_14.0 = (_12.0, _28, _17, _12.3, _12.4, Field::<bool>(Variant(_19, 0), 0));
_5 = _12.3 | _12.3;
_14.0.4 = _12.4 | _12.4;
_33 = -_15;
_18 = [143_u8,36_u8,162_u8,118_u8,11_u8,248_u8,38_u8];
_12.4 = _14.0.4 << _14.0.2;
_14 = (_12,);
_11 = Field::<f32>(Variant(_19, 0), 2) * Field::<f32>(Variant(_19, 0), 2);
_14.0.1 = _28;
_12.5 = !_12.1;
_14.0.0 = _12.0;
_14.0.4 = !_12.4;
_8 = _1;
_18 = _3;
_12.1 = _14.0.5 & _12.5;
_35 = -_15;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(7_usize, 4_usize, Move(_4), 9_usize, Move(_9), 3_usize, Move(_3), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(7_usize, 6_usize, Move(_6), 8_usize, Move(_8), 30_usize, Move(_30), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(7_usize, 23_usize, Move(_23), 37_usize, _37, 37_usize, _37, 37_usize, _37), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: isize,mut _2: u32,mut _3: isize,mut _4: isize,mut _5: [u128; 3]) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _6: [i64; 8];
let _7: usize;
let _8: usize;
let _9: [u128; 3];
let _10: char;
let _11: [u8; 7];
let _12: f32;
let _13: isize;
let _14: u16;
let _15: ();
let _16: ();
{
_5 = [58432855589322221944909015934530213146_u128,37403701845564976646355761482629294491_u128,302365315858417040276224701094079335256_u128];
_4 = !_1;
Call(RET = fn9(_4, _3, _5, _5, _5, _4, _1, _5, _3, _1, _4, _2, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = RET;
_2 = !2506457060_u32;
_5 = [154517541340656613981213181360626512683_u128,146432577479584253322234989758859980049_u128,54889037668679504627676319522390729297_u128];
_1 = _4 << _4;
RET = _5;
RET = [290333805651925252834839423375428627042_u128,61078622599407750370753272080687357488_u128,78899775708858516071287047619062968016_u128];
_5 = [261963971522570411300260930839385239347_u128,26422891520724404490708325394591214773_u128,177101549660162911010243907490927434455_u128];
_2 = !292979770_u32;
Goto(bb2)
}
bb2 = {
_2 = 2058783360_u32 + 657200200_u32;
_3 = true as isize;
_5 = [201150417646813740889298102779048392621_u128,221618445930424243796568369671749780071_u128,2534082679460886827429271291398614573_u128];
RET = _5;
_6 = [1744227314841982237_i64,(-5255659506848026058_i64),(-2072948168335177921_i64),8535724665551366242_i64,(-4186718572365631726_i64),1005792246842642657_i64,418669272665975269_i64,(-5067411730255685350_i64)];
_3 = _1 << _1;
RET = [158142785311581822941257605318528101594_u128,40921513913508552748876771152345706163_u128,269764885370717591833847638514659408950_u128];
_1 = 15243_i16 as isize;
_3 = _4 << _4;
_7 = 3040723776210936777_usize ^ 10929046642852045833_usize;
_6 = [2468768420975471929_i64,(-789392314392122260_i64),(-8529419083118909423_i64),3299509699497988358_i64,(-297097112167016844_i64),7240639605263280256_i64,(-6552716908784216396_i64),1293262616581750140_i64];
RET = [76242097309586006412956479478192187502_u128,314236647503856459497328423915670233067_u128,145250650271917354425070344017451493404_u128];
_8 = _7;
Goto(bb3)
}
bb3 = {
_5 = [53508677649958599832188792190111070188_u128,32452578458093569605045040909431137174_u128,208905037856186671872664415086609413126_u128];
_7 = _8;
_6 = [(-4110623804306944661_i64),8993344878416939421_i64,(-294708615007646599_i64),4695988912207939738_i64,3145878151433709718_i64,5556476392899622657_i64,(-5829044703821323240_i64),(-4726220070083761424_i64)];
_4 = _3 + _3;
_2 = 1859298196_u32;
_5 = RET;
_5 = RET;
Call(_6 = fn15(_4, _3, _2, _3, _4, _4, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_3 = -_4;
_6 = [3467292263512167097_i64,1381866013972094629_i64,7170280761533465223_i64,(-3164442499649846746_i64),2925162558269786408_i64,4791541479275002613_i64,(-231625562044805409_i64),(-5434929452813093213_i64)];
_9 = [74056972559459733613830018940862363221_u128,140280548902626062678602169678894083650_u128,231180065161450443850622051806124228237_u128];
RET = _9;
_1 = _3;
_6 = [(-6174403072058665998_i64),1651510011937365903_i64,(-4450995374041597056_i64),4184606035572793766_i64,2260942592552589940_i64,410956627519360822_i64,7901602769476957480_i64,6657303523428547925_i64];
_5 = RET;
_8 = !_7;
_1 = 28_i8 as isize;
_10 = '\u{61fdb}';
_3 = _4;
match _2 {
0 => bb5,
1859298196 => bb7,
_ => bb6
}
}
bb5 = {
_5 = [53508677649958599832188792190111070188_u128,32452578458093569605045040909431137174_u128,208905037856186671872664415086609413126_u128];
_7 = _8;
_6 = [(-4110623804306944661_i64),8993344878416939421_i64,(-294708615007646599_i64),4695988912207939738_i64,3145878151433709718_i64,5556476392899622657_i64,(-5829044703821323240_i64),(-4726220070083761424_i64)];
_4 = _3 + _3;
_2 = 1859298196_u32;
_5 = RET;
_5 = RET;
Call(_6 = fn15(_4, _3, _2, _3, _4, _4, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_2 = 2058783360_u32 + 657200200_u32;
_3 = true as isize;
_5 = [201150417646813740889298102779048392621_u128,221618445930424243796568369671749780071_u128,2534082679460886827429271291398614573_u128];
RET = _5;
_6 = [1744227314841982237_i64,(-5255659506848026058_i64),(-2072948168335177921_i64),8535724665551366242_i64,(-4186718572365631726_i64),1005792246842642657_i64,418669272665975269_i64,(-5067411730255685350_i64)];
_3 = _1 << _1;
RET = [158142785311581822941257605318528101594_u128,40921513913508552748876771152345706163_u128,269764885370717591833847638514659408950_u128];
_1 = 15243_i16 as isize;
_3 = _4 << _4;
_7 = 3040723776210936777_usize ^ 10929046642852045833_usize;
_6 = [2468768420975471929_i64,(-789392314392122260_i64),(-8529419083118909423_i64),3299509699497988358_i64,(-297097112167016844_i64),7240639605263280256_i64,(-6552716908784216396_i64),1293262616581750140_i64];
RET = [76242097309586006412956479478192187502_u128,314236647503856459497328423915670233067_u128,145250650271917354425070344017451493404_u128];
_8 = _7;
Goto(bb3)
}
bb7 = {
_4 = 6626_u16 as isize;
RET = [136644102888105673941004029001926888038_u128,169175842942873434609658175106029266922_u128,126670646062347282123851411796335632210_u128];
_6 = [3479447226611569087_i64,(-5659841159524405851_i64),8663350973882534383_i64,(-1499586003608247833_i64),7444806127655422163_i64,(-8730723287948071637_i64),(-2050396854498737434_i64),(-7160527266612754462_i64)];
_1 = _3;
_9 = [104307960644339286007087515636154136831_u128,206718073714928095999048726568610905463_u128,117089507035965009845067890596736437469_u128];
_7 = _8 * _8;
match _2 {
0 => bb4,
1 => bb8,
2 => bb9,
3 => bb10,
1859298196 => bb12,
_ => bb11
}
}
bb8 = {
_5 = RET;
_2 = !2506457060_u32;
_5 = [154517541340656613981213181360626512683_u128,146432577479584253322234989758859980049_u128,54889037668679504627676319522390729297_u128];
_1 = _4 << _4;
RET = _5;
RET = [290333805651925252834839423375428627042_u128,61078622599407750370753272080687357488_u128,78899775708858516071287047619062968016_u128];
_5 = [261963971522570411300260930839385239347_u128,26422891520724404490708325394591214773_u128,177101549660162911010243907490927434455_u128];
_2 = !292979770_u32;
Goto(bb2)
}
bb9 = {
_5 = [53508677649958599832188792190111070188_u128,32452578458093569605045040909431137174_u128,208905037856186671872664415086609413126_u128];
_7 = _8;
_6 = [(-4110623804306944661_i64),8993344878416939421_i64,(-294708615007646599_i64),4695988912207939738_i64,3145878151433709718_i64,5556476392899622657_i64,(-5829044703821323240_i64),(-4726220070083761424_i64)];
_4 = _3 + _3;
_2 = 1859298196_u32;
_5 = RET;
_5 = RET;
Call(_6 = fn15(_4, _3, _2, _3, _4, _4, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_3 = -_4;
_6 = [3467292263512167097_i64,1381866013972094629_i64,7170280761533465223_i64,(-3164442499649846746_i64),2925162558269786408_i64,4791541479275002613_i64,(-231625562044805409_i64),(-5434929452813093213_i64)];
_9 = [74056972559459733613830018940862363221_u128,140280548902626062678602169678894083650_u128,231180065161450443850622051806124228237_u128];
RET = _9;
_1 = _3;
_6 = [(-6174403072058665998_i64),1651510011937365903_i64,(-4450995374041597056_i64),4184606035572793766_i64,2260942592552589940_i64,410956627519360822_i64,7901602769476957480_i64,6657303523428547925_i64];
_5 = RET;
_8 = !_7;
_1 = 28_i8 as isize;
_10 = '\u{61fdb}';
_3 = _4;
match _2 {
0 => bb5,
1859298196 => bb7,
_ => bb6
}
}
bb11 = {
_5 = [53508677649958599832188792190111070188_u128,32452578458093569605045040909431137174_u128,208905037856186671872664415086609413126_u128];
_7 = _8;
_6 = [(-4110623804306944661_i64),8993344878416939421_i64,(-294708615007646599_i64),4695988912207939738_i64,3145878151433709718_i64,5556476392899622657_i64,(-5829044703821323240_i64),(-4726220070083761424_i64)];
_4 = _3 + _3;
_2 = 1859298196_u32;
_5 = RET;
_5 = RET;
Call(_6 = fn15(_4, _3, _2, _3, _4, _4, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
RET = [133233964244277875824045563853407161607_u128,32553908132400916242360061521128252368_u128,295478198501335010320181000190859142942_u128];
_11 = [89_u8,93_u8,231_u8,127_u8,167_u8,104_u8,192_u8];
Goto(bb13)
}
bb13 = {
_2 = 282515102_u32;
_5 = [171826849764386651286119178228780588278_u128,206155971686459682433278473622485896725_u128,196745474785851706299717444011141323121_u128];
_10 = '\u{9b05d}';
_6 = [(-675313674294456361_i64),8386509427857908137_i64,(-7470645933048654331_i64),6305908336030397366_i64,7203589626929013303_i64,3797286568271884873_i64,(-7596759702200595507_i64),(-8348584490967454764_i64)];
_4 = _1 - _1;
_9 = [164590512015466933751068970316402038709_u128,237410306104204311401444509105462005424_u128,155429122867952143583810383587135289625_u128];
_5 = [246610268239548523709055113524046238156_u128,90900723599069017999322947507921459700_u128,199973745042692379760490178437082938319_u128];
_1 = -_4;
_11 = [181_u8,12_u8,234_u8,2_u8,196_u8,184_u8,190_u8];
RET = _9;
_13 = -_4;
_3 = !_1;
_12 = _1 as f32;
match _2 {
0 => bb4,
1 => bb9,
282515102 => bb15,
_ => bb14
}
}
bb14 = {
_5 = [53508677649958599832188792190111070188_u128,32452578458093569605045040909431137174_u128,208905037856186671872664415086609413126_u128];
_7 = _8;
_6 = [(-4110623804306944661_i64),8993344878416939421_i64,(-294708615007646599_i64),4695988912207939738_i64,3145878151433709718_i64,5556476392899622657_i64,(-5829044703821323240_i64),(-4726220070083761424_i64)];
_4 = _3 + _3;
_2 = 1859298196_u32;
_5 = RET;
_5 = RET;
Call(_6 = fn15(_4, _3, _2, _3, _4, _4, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_6 = [(-2465540070331127960_i64),556651541566808818_i64,1863204391267522450_i64,(-8782979853656706990_i64),7663410651925108694_i64,(-9016865075330381917_i64),3723574803316224764_i64,(-6495207169682887638_i64)];
RET = [210124841586363039113382151949426627342_u128,303115113697593962335786431346135518297_u128,276893215606308365029781821090681288213_u128];
_11 = [195_u8,94_u8,232_u8,2_u8,108_u8,187_u8,151_u8];
Goto(bb16)
}
bb16 = {
Call(_15 = dump_var(8_usize, 13_usize, Move(_13), 9_usize, Move(_9), 10_usize, Move(_10), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_15 = dump_var(8_usize, 8_usize, Move(_8), 7_usize, Move(_7), 16_usize, _16, 16_usize, _16), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: isize,mut _2: isize,mut _3: [u128; 3],mut _4: [u128; 3],mut _5: [u128; 3],mut _6: isize,mut _7: isize,mut _8: [u128; 3],mut _9: isize,mut _10: isize,mut _11: isize,mut _12: u32,mut _13: isize) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _14: u16;
let _15: [u128; 3];
let _16: u64;
let _17: i16;
let _18: *const *const isize;
let _19: f32;
let _20: u64;
let _21: f64;
let _22: [isize; 7];
let _23: [isize; 7];
let _24: f32;
let _25: f64;
let _26: u128;
let _27: [isize; 7];
let _28: i8;
let _29: ();
let _30: ();
{
_5 = [227519784112848297551059039177988348981_u128,181081217497539430376241691631987804133_u128,164059021888227463483513677893444857423_u128];
_12 = 4265805827_u32;
_6 = 43187_u16 as isize;
_2 = 7575116770773748821_u64 as isize;
_3 = [194453887198436582946083804806298285812_u128,135173993598434469857695889216119470605_u128,320192308079806005952728427147615337130_u128];
_5 = [127911390138170963333729092947352048488_u128,43104963064886136682197435026992475030_u128,61004432965185447528629738348808821056_u128];
_11 = _7 >> _13;
_8 = _3;
RET = _4;
_6 = _7;
RET = _4;
_5 = [116823262356688224642057714500637300681_u128,146344778239031436155586838154068354960_u128,274843119454758121103031842157208154224_u128];
RET = [23187339653339105879091281245588563492_u128,4470104838322490540225825147739099402_u128,25130465353039750796932207507806891418_u128];
_3 = [274562020550542930987545995201871089452_u128,291069963745636501780536339364186482501_u128,42634714473372199713096795125311265624_u128];
_6 = -_13;
_2 = (-565121831_i32) as isize;
_7 = -_10;
_9 = _10;
_4 = [228042498526058913502977009620736824793_u128,58799017567254448848738718495606996977_u128,302145800674240394687444624772113085621_u128];
_3 = RET;
_3 = [132798276681682975264188453874843301087_u128,147677821009731125332165001630510550611_u128,9059634279025125630698674355422259165_u128];
_12 = 4278367110_u32;
_3 = [265030573071340623509406413714224472798_u128,70230230065514181089868825347124533063_u128,133989178653901495962477676975941994966_u128];
Call(_5 = core::intrinsics::transmute(_8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_11 = !_9;
_8 = [247143776044173702638830271689765845817_u128,117351339638537562433952355746075014394_u128,195345164742921772169526870716001084551_u128];
_15 = [148644898221597075339871003908070759680_u128,182220641397350853760361188534688735111_u128,237854302276297720250421948019158423384_u128];
_5 = [295120677769236537843107704163713914458_u128,27584046202733743053301240862058591984_u128,79743377759352254176684173843969875232_u128];
_5 = [320363265247035234317558874500330720936_u128,82815294013673134601430796933066385341_u128,6925797694859026672838217601271287818_u128];
_13 = _10;
_14 = 11817_u16 ^ 10005_u16;
Goto(bb2)
}
bb2 = {
RET = [303195283122782867338449692874051694778_u128,49586351981619110731425914792723517801_u128,311580184935769564400412950340238382081_u128];
_4 = [155153659753483012943730907775519529041_u128,58670605891161513035034829088953661682_u128,166695176755486408257088295783385639948_u128];
_9 = !_7;
_8 = [319968107760868841848142420381489071484_u128,166567604563621260317907411465223800100_u128,110911605851589742977272576791868845906_u128];
_14 = 4644_u16;
_3 = [336688522590137956420579245178101850025_u128,218541611792267417522761157381030723816_u128,9287745408635456208064794942855316268_u128];
_8 = [135791755990666286988315269655804566209_u128,26850558142080669810322578844237010726_u128,187116948657316168943064545071974244510_u128];
_8 = [157013709228109711877147342663660423025_u128,66224981596744086148650987628586552985_u128,221179803984921505440241274575307136532_u128];
_16 = !4640069737188294549_u64;
_12 = !3841290457_u32;
RET = [136511384298211642887122823183251129889_u128,167072112233955551818014291046015684542_u128,135560346229390867339157441586990912555_u128];
_1 = _10;
_7 = _6;
_3 = [42944928163609522427653168301857172500_u128,69014476309337647665141137004184825329_u128,60341858987537290072813982176507345563_u128];
_15 = [202013759452223582588950991944110794351_u128,194066689064283870482821263331847018453_u128,279734690501097656299102412328665687347_u128];
_5 = [64309761993035244402380018037288479373_u128,307538955929049367249754958098416771188_u128,128395334023092009679373549154344317732_u128];
_10 = -_6;
_21 = _14 as f64;
_1 = !_10;
_14 = 16983_u16;
_17 = 171_u8 as i16;
_17 = _9 as i16;
_20 = _16 >> _13;
match _14 {
16983 => bb3,
_ => bb1
}
}
bb3 = {
_9 = _1;
Call(RET = fn10(_7, _17, _12, _8, _3, _14, _17, _13, _14, _13, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
RET = [195545843446619884025082339116770726366_u128,216695817848292302089507046430452627265_u128,261974711062285088064008095795922846003_u128];
_5 = [74249384601032707018982277044910724637_u128,222242781309981999407086866653414197534_u128,266886036422577529926770792088940933346_u128];
_19 = _17 as f32;
_4 = _15;
_7 = !_13;
_20 = 62516385046842559773735387828042874363_u128 as u64;
_3 = [273500066929554239608120159658960573034_u128,18080414787159004509280535270880931377_u128,86982938482136011872667666551975879355_u128];
_17 = -21957_i16;
match _14 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
16983 => bb12,
_ => bb11
}
}
bb5 = {
_9 = _1;
Call(RET = fn10(_7, _17, _12, _8, _3, _14, _17, _13, _14, _13, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
RET = [303195283122782867338449692874051694778_u128,49586351981619110731425914792723517801_u128,311580184935769564400412950340238382081_u128];
_4 = [155153659753483012943730907775519529041_u128,58670605891161513035034829088953661682_u128,166695176755486408257088295783385639948_u128];
_9 = !_7;
_8 = [319968107760868841848142420381489071484_u128,166567604563621260317907411465223800100_u128,110911605851589742977272576791868845906_u128];
_14 = 4644_u16;
_3 = [336688522590137956420579245178101850025_u128,218541611792267417522761157381030723816_u128,9287745408635456208064794942855316268_u128];
_8 = [135791755990666286988315269655804566209_u128,26850558142080669810322578844237010726_u128,187116948657316168943064545071974244510_u128];
_8 = [157013709228109711877147342663660423025_u128,66224981596744086148650987628586552985_u128,221179803984921505440241274575307136532_u128];
_16 = !4640069737188294549_u64;
_12 = !3841290457_u32;
RET = [136511384298211642887122823183251129889_u128,167072112233955551818014291046015684542_u128,135560346229390867339157441586990912555_u128];
_1 = _10;
_7 = _6;
_3 = [42944928163609522427653168301857172500_u128,69014476309337647665141137004184825329_u128,60341858987537290072813982176507345563_u128];
_15 = [202013759452223582588950991944110794351_u128,194066689064283870482821263331847018453_u128,279734690501097656299102412328665687347_u128];
_5 = [64309761993035244402380018037288479373_u128,307538955929049367249754958098416771188_u128,128395334023092009679373549154344317732_u128];
_10 = -_6;
_21 = _14 as f64;
_1 = !_10;
_14 = 16983_u16;
_17 = 171_u8 as i16;
_17 = _9 as i16;
_20 = _16 >> _13;
match _14 {
16983 => bb3,
_ => bb1
}
}
bb7 = {
_11 = !_9;
_8 = [247143776044173702638830271689765845817_u128,117351339638537562433952355746075014394_u128,195345164742921772169526870716001084551_u128];
_15 = [148644898221597075339871003908070759680_u128,182220641397350853760361188534688735111_u128,237854302276297720250421948019158423384_u128];
_5 = [295120677769236537843107704163713914458_u128,27584046202733743053301240862058591984_u128,79743377759352254176684173843969875232_u128];
_5 = [320363265247035234317558874500330720936_u128,82815294013673134601430796933066385341_u128,6925797694859026672838217601271287818_u128];
_13 = _10;
_14 = 11817_u16 ^ 10005_u16;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_4 = [26297559996612637433832928761129122828_u128,56485270235006444360432897064659264091_u128,284195095663190651604814469417562295087_u128];
Call(_17 = fn11(_10, _4, _1, _13), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_19 = (-886433984_i32) as f32;
_25 = _21;
_12 = '\u{a4d57}' as u32;
_24 = 20_u8 as f32;
_5 = [203720242549758801795599914845655112612_u128,56147247713967020678244135528318285988_u128,197536759239618823351692647847256227435_u128];
_9 = _1 - _7;
_5 = [234471966642520662544663623471618544632_u128,71983964596143429605298465931240861393_u128,305418607540156328063173431250327762493_u128];
_26 = 108930875593446938761021272546642705130_u128;
_5 = [_26,_26,_26];
_22 = [_13,_10,_6,_6,_9,_7,_6];
_11 = _7;
_7 = _9 | _13;
_7 = _1;
_20 = _16 * _16;
_23 = [_9,_7,_9,_1,_11,_13,_11];
_2 = -_9;
_19 = _24 - _24;
_16 = _20;
_19 = _24;
_8 = [_26,_26,_26];
_6 = 0_usize as isize;
RET = [_26,_26,_26];
_16 = (-4599860361604432789_i64) as u64;
_23 = [_9,_9,_2,_2,_10,_7,_11];
_14 = 39396_u16 + 44013_u16;
_23 = [_1,_9,_9,_2,_10,_9,_2];
_22 = [_7,_7,_10,_2,_13,_6,_7];
_14 = 3834_u16;
_14 = !59075_u16;
Goto(bb14)
}
bb14 = {
_20 = _16;
_3 = _8;
_28 = (-66_i8);
RET = [_26,_26,_26];
_14 = !23429_u16;
_19 = _24;
_12 = 711004011_u32;
_10 = _9 * _2;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(9_usize, 9_usize, Move(_9), 5_usize, Move(_5), 13_usize, Move(_13), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(9_usize, 14_usize, Move(_14), 6_usize, Move(_6), 8_usize, Move(_8), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(9_usize, 15_usize, Move(_15), 10_usize, Move(_10), 26_usize, Move(_26), 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: i16,mut _3: u32,mut _4: [u128; 3],mut _5: [u128; 3],mut _6: u16,mut _7: i16,mut _8: isize,mut _9: u16,mut _10: isize,mut _11: isize) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _12: Adt53;
let _13: Adt46;
let _14: u128;
let _15: [i8; 5];
let _16: ([isize; 7],);
let _17: Adt44;
let _18: isize;
let _19: *mut f32;
let _20: isize;
let _21: *mut &'static f64;
let _22: i64;
let _23: u16;
let _24: f32;
let _25: isize;
let _26: *mut bool;
let _27: *mut &'static f64;
let _28: isize;
let _29: [isize; 7];
let _30: [i8; 5];
let _31: usize;
let _32: char;
let _33: Adt49;
let _34: char;
let _35: ();
let _36: ();
{
RET = [338960131216586091632914357990114006140_u128,282514315241076159504814584350438257805_u128,15498534151057257485162459926593685246_u128];
RET = [309631201627841582698437629754668242645_u128,189576483596908423253474116920007231840_u128,330428895801674337568215434716599420208_u128];
_11 = _3 as isize;
_1 = _8 | _8;
match _9 {
16983 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
RET = _4;
RET = [236974677512017274273444753814089639849_u128,90260894131102997108174456281464374259_u128,144746861582562861275917947583113322514_u128];
_10 = _1;
_1 = -_11;
_16.0 = [_8,_10,_10,_8,_8,_10,_8];
_5 = [46353203769028504628328626919807061637_u128,211405691520770461680782417240360122552_u128,275722130724114066451423186492576918430_u128];
_15 = [(-112_i8),(-47_i8),(-88_i8),80_i8,10_i8];
RET = [78921103073215412374247317505257288852_u128,174560718352892664122412224353803222365_u128,213219379143702546588286940520675491058_u128];
RET = [202890360425029051605625064503137499293_u128,109002549384198697195827850369085499085_u128,180435113234969076899501731099529915419_u128];
_5 = [154300225012281338279282424861386775311_u128,49737590374176579779404555438874886082_u128,273880391586023203681970253683955262211_u128];
_10 = _8 & _8;
_18 = -_1;
_7 = _2 >> _10;
_11 = _10;
_6 = _9;
_3 = 3086925068_u32 - 77227421_u32;
_15 = [93_i8,45_i8,(-53_i8),82_i8,108_i8];
_1 = _10;
_4 = [170259685409855768709294336794650320676_u128,15557808857585256635511159127916789326_u128,145673323559701984861137678115209084367_u128];
_7 = _2 | _2;
Goto(bb3)
}
bb3 = {
_20 = _3 as isize;
_14 = 7813408048528135468_u64 as u128;
_6 = _7 as u16;
_5 = [_14,_14,_14];
_7 = _2;
_18 = true as isize;
RET = _4;
_4 = [_14,_14,_14];
_5 = [_14,_14,_14];
_8 = _1 ^ _11;
_22 = _14 as i64;
_22 = 192741894895061815_i64;
_4 = [_14,_14,_14];
_1 = (-36463636107112628638617368099126390294_i128) as isize;
_7 = _2 & _2;
_16.0 = [_10,_20,_11,_11,_10,_8,_8];
_14 = !310123402356932811106655815167791649995_u128;
_16.0 = [_8,_8,_8,_8,_8,_11,_10];
_15 = [(-27_i8),125_i8,27_i8,61_i8,(-2_i8)];
RET = _4;
Goto(bb4)
}
bb4 = {
_14 = !242612052522388003340697252751840211349_u128;
_15 = [96_i8,(-87_i8),(-28_i8),99_i8,(-65_i8)];
_10 = _8 + _8;
_1 = _3 as isize;
_22 = 7210503037334067765_i64 + (-8153351378466223805_i64);
_15 = [(-26_i8),113_i8,86_i8,100_i8,(-44_i8)];
_2 = _8 as i16;
_22 = (-45_i8) as i64;
_7 = _3 as i16;
RET = [_14,_14,_14];
_3 = 380075214_u32 >> _6;
_22 = (-5720052718640349968_i64) | (-1628412196333391805_i64);
_4 = [_14,_14,_14];
_20 = _10;
_5 = [_14,_14,_14];
_18 = !_20;
_4 = [_14,_14,_14];
_18 = !_20;
_20 = _10;
match _9 {
0 => bb5,
1 => bb6,
2 => bb7,
16983 => bb9,
_ => bb8
}
}
bb5 = {
_20 = _3 as isize;
_14 = 7813408048528135468_u64 as u128;
_6 = _7 as u16;
_5 = [_14,_14,_14];
_7 = _2;
_18 = true as isize;
RET = _4;
_4 = [_14,_14,_14];
_5 = [_14,_14,_14];
_8 = _1 ^ _11;
_22 = _14 as i64;
_22 = 192741894895061815_i64;
_4 = [_14,_14,_14];
_1 = (-36463636107112628638617368099126390294_i128) as isize;
_7 = _2 & _2;
_16.0 = [_10,_20,_11,_11,_10,_8,_8];
_14 = !310123402356932811106655815167791649995_u128;
_16.0 = [_8,_8,_8,_8,_8,_11,_10];
_15 = [(-27_i8),125_i8,27_i8,61_i8,(-2_i8)];
RET = _4;
Goto(bb4)
}
bb6 = {
RET = _4;
RET = [236974677512017274273444753814089639849_u128,90260894131102997108174456281464374259_u128,144746861582562861275917947583113322514_u128];
_10 = _1;
_1 = -_11;
_16.0 = [_8,_10,_10,_8,_8,_10,_8];
_5 = [46353203769028504628328626919807061637_u128,211405691520770461680782417240360122552_u128,275722130724114066451423186492576918430_u128];
_15 = [(-112_i8),(-47_i8),(-88_i8),80_i8,10_i8];
RET = [78921103073215412374247317505257288852_u128,174560718352892664122412224353803222365_u128,213219379143702546588286940520675491058_u128];
RET = [202890360425029051605625064503137499293_u128,109002549384198697195827850369085499085_u128,180435113234969076899501731099529915419_u128];
_5 = [154300225012281338279282424861386775311_u128,49737590374176579779404555438874886082_u128,273880391586023203681970253683955262211_u128];
_10 = _8 & _8;
_18 = -_1;
_7 = _2 >> _10;
_11 = _10;
_6 = _9;
_3 = 3086925068_u32 - 77227421_u32;
_15 = [93_i8,45_i8,(-53_i8),82_i8,108_i8];
_1 = _10;
_4 = [170259685409855768709294336794650320676_u128,15557808857585256635511159127916789326_u128,145673323559701984861137678115209084367_u128];
_7 = _2 | _2;
Goto(bb3)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = [_14,_14,_14];
_8 = !_20;
RET = [_14,_14,_14];
_5 = _4;
_5 = [_14,_14,_14];
_15 = [(-20_i8),(-93_i8),85_i8,(-20_i8),86_i8];
_7 = !_2;
RET = _4;
RET = _5;
_11 = _10 << _10;
_22 = 8910313477274363992_i64;
_16.0 = [_18,_18,_11,_20,_20,_11,_10];
_20 = -_18;
_24 = 64_i8 as f32;
_2 = !_7;
_19 = core::ptr::addr_of_mut!(_24);
_11 = _8 ^ _18;
_24 = _11 as f32;
_12 = Adt53::Variant0 { fld0: (*_19) };
_4 = [_14,_14,_14];
Call(_23 = core::intrinsics::bswap(_6), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_22 = 6460587609762878457_i64 + (-2223096540151630456_i64);
Goto(bb11)
}
bb11 = {
_11 = _20 & _8;
_15 = [(-65_i8),66_i8,92_i8,(-74_i8),86_i8];
_16.0 = [_8,_11,_11,_10,_11,_18,_10];
_11 = _18 + _20;
_24 = Field::<f32>(Variant(_12, 0), 0);
RET = [_14,_14,_14];
_22 = -1544742480296378009_i64;
_9 = _6;
_11 = _8 ^ _8;
_23 = _6 | _9;
_25 = _18 & _18;
_22 = (-2175238451147355682_i64);
SetDiscriminant(_12, 0);
_3 = 2860665783_u32 << _20;
_9 = !_23;
RET = [_14,_14,_14];
RET = [_14,_14,_14];
_3 = !1145908827_u32;
_2 = -_7;
_2 = -_7;
_18 = _8;
_25 = _18;
_7 = _2 >> _11;
_28 = !_25;
_6 = !_9;
_25 = _3 as isize;
_3 = _7 as u32;
Goto(bb12)
}
bb12 = {
_8 = _11;
_14 = 138884824888781870353536378744791253915_u128 * 182923417828325647556069112109780731443_u128;
_6 = _9;
_23 = _9 & _6;
_29 = _16.0;
_16.0 = [_8,_10,_8,_18,_20,_20,_11];
_10 = (*_19) as isize;
_12 = Adt53::Variant0 { fld0: (*_19) };
_29 = [_28,_18,_28,_11,_18,_18,_1];
_16 = (_29,);
_8 = -_18;
_4 = RET;
_2 = _7;
_16 = (_29,);
_5 = _4;
_31 = 2_usize & 12438041806420583189_usize;
_17 = Adt44::Variant0 { fld0: _15,fld1: _5,fld2: (*_19),fld3: 16563158242256952082_u64 };
_6 = _23 - _23;
_29 = _16.0;
place!(Field::<[i64; 1]>(Variant(_12, 1), 1)) = [_22];
match _22 {
340282366920938463461199368980620855774 => bb13,
_ => bb8
}
}
bb13 = {
_2 = _7 | _7;
_19 = core::ptr::addr_of_mut!((*_19));
_25 = _11 & _10;
_12 = Adt53::Variant0 { fld0: Field::<f32>(Variant(_17, 0), 2) };
_1 = _11;
_8 = _25;
_9 = _31 as u16;
RET = [_14,_14,_14];
place!(Field::<[u128; 3]>(Variant(_17, 0), 1)) = [_14,_14,_14];
_32 = '\u{107b8}';
_17 = Adt44::Variant0 { fld0: _15,fld1: RET,fld2: (*_19),fld3: 4328861954601556561_u64 };
_17 = Adt44::Variant0 { fld0: _15,fld1: RET,fld2: (*_19),fld3: 7756460013629501495_u64 };
_30 = [24_i8,39_i8,(-34_i8),(-102_i8),(-112_i8)];
RET = [_14,_14,_14];
SetDiscriminant(_12, 0);
_2 = _7 - _7;
_31 = _23 as usize;
_24 = -Field::<f32>(Variant(_17, 0), 2);
match _22 {
340282366920938463461199368980620855774 => bb14,
_ => bb7
}
}
bb14 = {
_22 = (-5057042564699665818_i64) & 41305682170928541_i64;
_14 = 270541164479858193708254727846523658842_u128 << _23;
place!(Field::<f32>(Variant(_12, 0), 0)) = _31 as f32;
_6 = _9;
_19 = core::ptr::addr_of_mut!(place!(Field::<f32>(Variant(_12, 0), 0)));
place!(Field::<u64>(Variant(_17, 0), 3)) = 9007484242812664512_u64 >> _7;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(10_usize, 30_usize, Move(_30), 11_usize, Move(_11), 29_usize, Move(_29), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(10_usize, 22_usize, Move(_22), 25_usize, Move(_25), 6_usize, Move(_6), 32_usize, Move(_32)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(10_usize, 28_usize, Move(_28), 9_usize, Move(_9), 1_usize, Move(_1), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: [u128; 3],mut _3: isize,mut _4: isize) -> i16 {
mir! {
type RET = i16;
let _5: u16;
let _6: [i64; 8];
let _7: [i32; 7];
let _8: bool;
let _9: isize;
let _10: char;
let _11: Adt51;
let _12: i16;
let _13: bool;
let _14: bool;
let _15: u64;
let _16: f32;
let _17: Adt45;
let _18: Adt46;
let _19: ([isize; 7],);
let _20: ([isize; 7],);
let _21: [u8; 7];
let _22: [i64; 8];
let _23: ([isize; 7],);
let _24: [i8; 5];
let _25: [i8; 7];
let _26: bool;
let _27: u128;
let _28: [i64; 8];
let _29: u32;
let _30: ();
let _31: ();
{
RET = 2308526578220604023_i64 as i16;
_5 = 48402_u16;
RET = 23462_i16;
_2 = [322008850032021479143434883804647583575_u128,192387908007156972334546277491480064562_u128,219654615479626679980913476345843180570_u128];
_5 = !62165_u16;
_4 = _1;
_3 = _4;
_2 = [147702512354952166637214377057759647034_u128,340257456943037783178894949938380934740_u128,81231497052056858024019993819751556414_u128];
_4 = false as isize;
_1 = _3;
_4 = -_3;
_4 = _3;
_1 = true as isize;
RET = 6452_i16 * 19482_i16;
_1 = 80263378_u32 as isize;
_6 = [8251552326350266371_i64,(-5721486121799141852_i64),(-1499014924727615158_i64),(-648770898855372490_i64),(-3413381923105284426_i64),(-1163683003119018936_i64),5921240251222694509_i64,1077007339121319310_i64];
_6 = [(-2561404590328591992_i64),(-3671025955573048318_i64),4646551790173669070_i64,4875604035281898062_i64,5891698804302574455_i64,4072153907813350525_i64,(-4110532012831701862_i64),(-3495798953838154670_i64)];
_2 = [203540075402480129202988955362429516606_u128,90581609359011654944448198090460733388_u128,221340036442051268832181289431320696239_u128];
RET = (-22947_i16) >> _3;
RET = 20559_i16;
_1 = -_3;
_3 = _1;
_4 = _3 + _3;
RET = (-27104_i16) | 23996_i16;
_2 = [82355758341894166063672686632147881045_u128,261660093892459324866030720438859880706_u128,222654042679968741199745384374931929349_u128];
_3 = 2864200317_u32 as isize;
_7 = [(-1176092895_i32),987780637_i32,(-1249124083_i32),1813819522_i32,1903798281_i32,(-575010790_i32),(-1294113781_i32)];
Goto(bb1)
}
bb1 = {
RET = 2824_i16;
Goto(bb2)
}
bb2 = {
_8 = true;
_7 = [(-1246799278_i32),1648861113_i32,694101728_i32,(-861297869_i32),(-1193005114_i32),949634998_i32,488743992_i32];
RET = (-2680_i16) & (-21334_i16);
_4 = _1;
_5 = 63960_u16;
_9 = _4 << _4;
_5 = 17920_u16;
_3 = _1 >> RET;
_4 = _9 >> _9;
match _5 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
17920 => bb9,
_ => bb8
}
}
bb3 = {
RET = 2824_i16;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = 17914_i16 ^ 28847_i16;
_10 = '\u{d87cc}';
_10 = '\u{c7231}';
_8 = RET <= RET;
_7 = [981925587_i32,821999124_i32,(-1920236881_i32),998322443_i32,(-1875809558_i32),(-1071542657_i32),(-1418930330_i32)];
_3 = _8 as isize;
_12 = -RET;
RET = _12;
_8 = false;
_6 = [(-7101709585783546138_i64),(-4872511743033400370_i64),1509290578732247131_i64,(-5754238528577674432_i64),(-1956226661654160164_i64),(-6077700298457899017_i64),4131742369332778779_i64,(-2074997450793684556_i64)];
_4 = -_1;
_1 = _9;
RET = _12;
RET = _12 << _1;
_3 = _4 + _1;
_6 = [727871704726584414_i64,(-856751789590114178_i64),(-8248256693559894455_i64),8609791355301106072_i64,(-6152648449580509635_i64),(-6856056594175738901_i64),5563874292071052287_i64,(-8755033561537580623_i64)];
_13 = !_8;
_12 = _13 as i16;
_14 = !_13;
_14 = !_8;
_7 = [(-318091946_i32),1690565833_i32,(-1613621576_i32),844060443_i32,(-500478230_i32),1472454228_i32,1358029001_i32];
_12 = 4548188957748221078_usize as i16;
Goto(bb10)
}
bb10 = {
_9 = !_4;
_9 = (-2103785951_i32) as isize;
RET = 2704693776102295085_i64 as i16;
_12 = RET & RET;
_17.fld3 = 102240552266912668571929753574959071716_u128 as f64;
_7 = [1801471092_i32,(-1098736891_i32),(-872984166_i32),(-122511324_i32),(-1424150473_i32),447017101_i32,319069304_i32];
Goto(bb11)
}
bb11 = {
_17.fld7.0 = [_3,_3,_1,_1,_1,_3,_1];
_19 = (_17.fld7.0,);
_17.fld7.0 = _19.0;
_20.0 = _17.fld7.0;
_17.fld2 = core::ptr::addr_of_mut!(_13);
RET = _12;
_9 = _12 as isize;
_17.fld2 = core::ptr::addr_of_mut!(_8);
_21 = [85_u8,234_u8,2_u8,179_u8,192_u8,219_u8,171_u8];
_1 = _5 as isize;
_9 = _3;
_4 = _3 << _5;
_17.fld1 = _10;
_20 = (_17.fld7.0,);
RET = _5 as i16;
_8 = _14;
_17.fld0 = 1167091924_u32 ^ 1883305328_u32;
_23.0 = _20.0;
_17.fld1 = _10;
_23 = (_17.fld7.0,);
_20 = (_19.0,);
RET = _12 & _12;
Goto(bb12)
}
bb12 = {
_17.fld1 = _10;
_8 = !_13;
_22 = _6;
_5 = 57088_u16;
_20.0 = _17.fld7.0;
_9 = _3 >> _3;
_16 = 162207589686052553570846865916711685825_i128 as f32;
_17.fld7.0 = [_4,_9,_9,_9,_3,_3,_3];
_17.fld7 = _19;
_7 = [(-726347495_i32),120752990_i32,1444962444_i32,1620460476_i32,(-283637635_i32),695467881_i32,1095194166_i32];
_23 = _19;
_17.fld3 = 123930515632579036758572105962180263859_i128 as f64;
_20 = (_23.0,);
_13 = _8 | _14;
_17.fld0 = !2932372775_u32;
Goto(bb13)
}
bb13 = {
_2 = [81189721531878956867106195827731278421_u128,88011538083618726465173460411991874099_u128,282548436703728441987012967150294656659_u128];
_8 = _14;
_17.fld4 = (-8749876115003368274_i64) as u64;
_15 = _17.fld4;
Call(RET = fn12(_3, _23.0, _23.0, _17.fld7, _23, _23, _23.0, _20, _23.0, _20.0, _9, _19.0, _19, _20.0, _3, _19), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_1 = _4 - _9;
_21 = [97_u8,181_u8,0_u8,26_u8,47_u8,113_u8,218_u8];
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(11_usize, 10_usize, Move(_10), 21_usize, Move(_21), 15_usize, Move(_15), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(11_usize, 4_usize, Move(_4), 6_usize, Move(_6), 3_usize, Move(_3), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(11_usize, 7_usize, Move(_7), 31_usize, _31, 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: isize,mut _2: [isize; 7],mut _3: [isize; 7],mut _4: ([isize; 7],),mut _5: ([isize; 7],),mut _6: ([isize; 7],),mut _7: [isize; 7],mut _8: ([isize; 7],),mut _9: [isize; 7],mut _10: [isize; 7],mut _11: isize,mut _12: [isize; 7],mut _13: ([isize; 7],),mut _14: [isize; 7],mut _15: isize,mut _16: ([isize; 7],)) -> i16 {
mir! {
type RET = i16;
let _17: Adt53;
let _18: [u128; 3];
let _19: i16;
let _20: f32;
let _21: char;
let _22: isize;
let _23: isize;
let _24: [i8; 7];
let _25: i8;
let _26: [i8; 5];
let _27: [u128; 3];
let _28: [u128; 3];
let _29: bool;
let _30: [u8; 7];
let _31: [i8; 7];
let _32: Adt49;
let _33: [i32; 7];
let _34: (i8, *const isize, i128, i128, [i64; 1]);
let _35: i16;
let _36: [i64; 8];
let _37: ([isize; 7],);
let _38: i64;
let _39: [isize; 7];
let _40: [i64; 8];
let _41: ([isize; 7],);
let _42: isize;
let _43: [i64; 8];
let _44: ();
let _45: ();
{
_10 = [_1,_11,_11,_11,_11,_11,_15];
_8 = (_10,);
_10 = _8.0;
_6.0 = _2;
RET = !1062_i16;
_6.0 = [_11,_1,_11,_11,_1,_11,_1];
_6.0 = _13.0;
Goto(bb1)
}
bb1 = {
_2 = [_15,_1,_1,_11,_15,_1,_1];
_4.0 = _6.0;
_14 = [_15,_15,_1,_11,_11,_11,_15];
_13.0 = [_11,_1,_11,_11,_15,_11,_1];
_1 = 62349665752953444937393162931265749282_u128 as isize;
_3 = [_15,_15,_11,_1,_11,_11,_11];
_6.0 = _12;
_12 = _14;
_6 = (_10,);
_8.0 = [_11,_11,_15,_11,_11,_15,_11];
Goto(bb2)
}
bb2 = {
_10 = [_15,_15,_15,_11,_11,_11,_15];
_20 = 3710589573_u32 as f32;
_20 = 4118014224_u32 as f32;
_18 = [283525630410545608855861950738558403756_u128,18051091837145906012294789518311935884_u128,292624085427610949776632428396899518988_u128];
_9 = _7;
_14 = _9;
Call(_11 = core::intrinsics::bswap(_1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = _8;
_9 = [_11,_11,_11,_15,_15,_11,_11];
_15 = _11 - _11;
_22 = _15 >> _11;
_19 = RET | RET;
_24 = [12_i8,73_i8,(-67_i8),50_i8,36_i8,(-58_i8),69_i8];
_23 = _22 << _22;
_24 = [(-116_i8),(-68_i8),(-34_i8),(-99_i8),51_i8,(-34_i8),77_i8];
_9 = _2;
_13.0 = [_23,_23,_15,_23,_22,_15,_23];
_9 = [_23,_11,_11,_23,_23,_23,_23];
_10 = [_23,_23,_22,_15,_15,_11,_23];
_20 = 175541205_u32 as f32;
RET = _19 - _19;
_20 = 7680213938999741597_i64 as f32;
_25 = -27_i8;
_27 = _18;
Goto(bb4)
}
bb4 = {
_18 = _27;
_5 = (_9,);
_14 = [_15,_15,_15,_22,_11,_22,_11];
_22 = !_23;
_20 = 0_usize as f32;
_8 = (_10,);
_14 = [_23,_11,_23,_22,_22,_15,_22];
_26 = [_25,_25,_25,_25,_25];
_23 = !_15;
_28 = [135557094759668875540766242897189454318_u128,107167371333767271824773956314443282153_u128,221925862491618477283856722489777751316_u128];
_11 = _23 * _22;
_12 = [_22,_22,_22,_22,_22,_22,_23];
_13.0 = [_22,_22,_11,_22,_22,_11,_15];
_24 = [_25,_25,_25,_25,_25,_25,_25];
_13 = _5;
_11 = _22 << _15;
_5 = _13;
_26 = [_25,_25,_25,_25,_25];
_7 = [_23,_23,_11,_11,_22,_11,_22];
_9 = [_22,_22,_11,_11,_22,_22,_15];
_17 = Adt53::Variant0 { fld0: _20 };
_13.0 = [_15,_22,_11,_11,_11,_22,_15];
_15 = _22;
_8 = (_10,);
Goto(bb5)
}
bb5 = {
_4 = (_7,);
RET = _19 * _19;
_20 = 237602586289717546873521490393978338944_u128 as f32;
_8.0 = [_22,_15,_15,_15,_22,_22,_11];
place!(Field::<[i64; 1]>(Variant(_17, 1), 1)) = [(-9006975668302012925_i64)];
_4 = _13;
_22 = -_11;
_15 = _22;
_30 = [225_u8,19_u8,185_u8,0_u8,242_u8,73_u8,170_u8];
_1 = _22;
place!(Field::<[i64; 1]>(Variant(_17, 1), 1)) = [(-178116899423997207_i64)];
_16 = (_14,);
_16.0 = [_23,_11,_11,_11,_11,_1,_22];
_13 = (_8.0,);
_34.4 = Field::<[i64; 1]>(Variant(_17, 1), 1);
_24 = [_25,_25,_25,_25,_25,_25,_25];
_13 = (_7,);
_28 = [158099573427013112715430984429330929109_u128,113877370431923815379973478407383555469_u128,92827396431909960817104774135318699455_u128];
_19 = false as i16;
_5.0 = _4.0;
Goto(bb6)
}
bb6 = {
_13 = (_6.0,);
_2 = _13.0;
_24 = [_25,_25,_25,_25,_25,_25,_25];
_35 = !RET;
_24 = [_25,_25,_25,_25,_25,_25,_25];
_22 = -_1;
_16.0 = [_15,_23,_15,_15,_11,_15,_22];
_33 = [(-240611011_i32),(-853916964_i32),(-2012427066_i32),(-236614303_i32),(-2062097780_i32),60683034_i32,1417687121_i32];
_24 = [_25,_25,_25,_25,_25,_25,_25];
_35 = RET;
_35 = RET;
place!(Field::<u16>(Variant(_17, 1), 3)) = 6153_u16;
place!(Field::<[i64; 1]>(Variant(_17, 1), 1)) = _34.4;
_6 = _5;
_20 = 4_usize as f32;
_31 = [_25,_25,_25,_25,_25,_25,_25];
_1 = !_11;
_8 = (_14,);
_8 = _13;
_5 = _16;
_19 = _35;
_4 = (_9,);
_23 = _15 ^ _1;
place!(Field::<Adt44>(Variant(_17, 1), 2)) = Adt44::Variant0 { fld0: _26,fld1: _18,fld2: _20,fld3: 4188675099726387724_u64 };
match Field::<u16>(Variant(_17, 1), 3) {
6153 => bb7,
_ => bb1
}
}
bb7 = {
_11 = Field::<f32>(Variant(Field::<Adt44>(Variant(_17, 1), 2), 0), 2) as isize;
_30 = [172_u8,130_u8,22_u8,76_u8,93_u8,144_u8,14_u8];
_33 = [895441170_i32,(-1731187518_i32),(-1537523254_i32),1357235038_i32,1121876544_i32,(-99651337_i32),(-406238247_i32)];
_34.3 = !(-71180143551114758738107327572460633142_i128);
_34.2 = !_34.3;
_34.0 = 2931770486_u32 as i8;
place!(Field::<u64>(Variant(place!(Field::<Adt44>(Variant(_17, 1), 2)), 0), 3)) = 6037392999321036743_u64;
_37.0 = [_1,_23,_22,_23,_23,_22,_23];
_29 = true;
_34.3 = 18184813399294871761_usize as i128;
_6.0 = _16.0;
_3 = _14;
_37 = (_7,);
_3 = [_23,_22,_22,_1,_1,_15,_1];
place!(Field::<u16>(Variant(_17, 1), 3)) = 59084_u16;
_41 = _16;
_30 = [255_u8,231_u8,163_u8,165_u8,170_u8,40_u8,80_u8];
_6 = (_10,);
SetDiscriminant(Field::<Adt44>(Variant(_17, 1), 2), 3);
_21 = '\u{77fa8}';
_39 = [_22,_15,_23,_23,_23,_23,_22];
place!(Field::<[u128; 3]>(Variant(place!(Field::<Adt44>(Variant(_17, 1), 2)), 3), 0)) = [264833252328209869843788004765202089828_u128,199477312077790350920420506374535967576_u128,295140695658682312619698802201296614966_u128];
_17 = Adt53::Variant0 { fld0: _20 };
_18 = _27;
Call(_6 = fn13(_4, _10, _16.0, _5.0, _23, _13, _10, _5.0, _37, _13.0, _16.0, _9, _5.0), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_33 = [(-438420705_i32),(-2028374350_i32),(-61660862_i32),427311340_i32,(-552525063_i32),2009901414_i32,(-405809244_i32)];
_38 = !(-4631611040295529729_i64);
_6 = (_16.0,);
Call(_26 = fn14(_15, _6.0, _13, _10, _41, _23, _9, _8.0, _23, _16.0, _5.0, _12), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_36 = [_38,_38,_38,_38,_38,_38,_38,_38];
_5 = (_10,);
_19 = _35;
_14 = [_22,_1,_22,_23,_1,_22,_23];
_12 = [_15,_23,_23,_23,_15,_23,_23];
_38 = -2100050074183293080_i64;
_14 = _5.0;
_27 = [281102463690612392944222219291354310032_u128,201581900831143156964101942493670676314_u128,251638739237458581363174137081283902918_u128];
_37 = (_12,);
_4.0 = [_1,_15,_23,_23,_1,_22,_22];
_42 = !_23;
_5 = (_39,);
_9 = [_23,_15,_22,_15,_42,_15,_1];
_41 = (_37.0,);
_38 = (-6508892599993626687_i64) + 3406995426247431291_i64;
RET = _19 >> _15;
_42 = !_15;
SetDiscriminant(_17, 0);
_6 = _5;
Goto(bb10)
}
bb10 = {
Call(_44 = dump_var(12_usize, 4_usize, Move(_4), 23_usize, Move(_23), 14_usize, Move(_14), 8_usize, Move(_8)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_44 = dump_var(12_usize, 16_usize, Move(_16), 36_usize, Move(_36), 31_usize, Move(_31), 3_usize, Move(_3)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_44 = dump_var(12_usize, 10_usize, Move(_10), 24_usize, Move(_24), 1_usize, Move(_1), 27_usize, Move(_27)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_44 = dump_var(12_usize, 7_usize, Move(_7), 9_usize, Move(_9), 29_usize, Move(_29), 42_usize, Move(_42)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_44 = dump_var(12_usize, 11_usize, Move(_11), 37_usize, Move(_37), 45_usize, _45, 45_usize, _45), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: ([isize; 7],),mut _2: [isize; 7],mut _3: [isize; 7],mut _4: [isize; 7],mut _5: isize,mut _6: ([isize; 7],),mut _7: [isize; 7],mut _8: [isize; 7],mut _9: ([isize; 7],),mut _10: [isize; 7],mut _11: [isize; 7],mut _12: [isize; 7],mut _13: [isize; 7]) -> ([isize; 7],) {
mir! {
type RET = ([isize; 7],);
let _14: [i64; 8];
let _15: ();
let _16: ();
{
_1 = (_7,);
_3 = _1.0;
_1.0 = _2;
RET = (_9.0,);
_9 = (_7,);
_3 = [_5,_5,_5,_5,_5,_5,_5];
RET.0 = [_5,_5,_5,_5,_5,_5,_5];
_10 = [_5,_5,_5,_5,_5,_5,_5];
_5 = 886473441_u32 as isize;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(13_usize, 6_usize, Move(_6), 13_usize, Move(_13), 1_usize, Move(_1), 3_usize, Move(_3)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(13_usize, 2_usize, Move(_2), 12_usize, Move(_12), 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: isize,mut _2: [isize; 7],mut _3: ([isize; 7],),mut _4: [isize; 7],mut _5: ([isize; 7],),mut _6: isize,mut _7: [isize; 7],mut _8: [isize; 7],mut _9: isize,mut _10: [isize; 7],mut _11: [isize; 7],mut _12: [isize; 7]) -> [i8; 5] {
mir! {
type RET = [i8; 5];
let _13: u16;
let _14: f32;
let _15: *mut f32;
let _16: [u8; 7];
let _17: [isize; 7];
let _18: [i32; 7];
let _19: i32;
let _20: ([isize; 7],);
let _21: u32;
let _22: [isize; 7];
let _23: char;
let _24: isize;
let _25: bool;
let _26: i128;
let _27: [u128; 3];
let _28: ();
let _29: ();
{
_5.0 = [_6,_6,_6,_1,_9,_1,_9];
_11 = [_1,_9,_6,_1,_6,_6,_1];
_5.0 = [_9,_9,_6,_9,_6,_9,_6];
_10 = [_1,_1,_6,_1,_6,_9,_6];
_7 = [_1,_9,_9,_1,_6,_9,_1];
_5.0 = [_1,_9,_9,_6,_6,_9,_6];
_10 = _4;
RET = [(-105_i8),49_i8,52_i8,(-122_i8),(-56_i8)];
RET = [65_i8,74_i8,(-38_i8),(-119_i8),39_i8];
_7 = _5.0;
_2 = _12;
RET = [(-10_i8),(-124_i8),(-79_i8),(-71_i8),(-102_i8)];
_2 = _11;
_9 = _6;
Goto(bb1)
}
bb1 = {
_1 = _9;
_5.0 = _11;
_13 = 39790_u16;
_3 = (_12,);
_7 = [_9,_1,_1,_9,_1,_6,_9];
_8 = [_1,_9,_9,_6,_1,_1,_6];
_8 = _12;
_13 = 21420_u16;
_5 = _3;
_5 = (_12,);
_15 = core::ptr::addr_of_mut!(_14);
_5.0 = [_9,_9,_9,_9,_6,_9,_1];
_6 = (-3585_i16) as isize;
RET = [(-72_i8),(-83_i8),(-125_i8),(-98_i8),75_i8];
_15 = core::ptr::addr_of_mut!((*_15));
_16 = [57_u8,171_u8,37_u8,187_u8,67_u8,210_u8,10_u8];
_3.0 = _5.0;
_14 = 2941799089_u32 as f32;
_17 = [_1,_1,_9,_1,_9,_9,_1];
_1 = _9 >> _9;
_5.0 = _12;
match _13 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
21420 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_6 = _1 + _9;
RET = [65_i8,105_i8,46_i8,82_i8,126_i8];
_3.0 = [_1,_1,_9,_1,_1,_6,_6];
RET = [(-105_i8),109_i8,13_i8,78_i8,14_i8];
_10 = [_9,_1,_9,_9,_9,_1,_6];
_2 = [_9,_9,_6,_1,_9,_1,_1];
_13 = 7377626389124135976_u64 as u16;
_3.0 = [_6,_9,_6,_1,_9,_9,_6];
_4 = _8;
_16 = [167_u8,92_u8,60_u8,230_u8,78_u8,160_u8,240_u8];
_10 = [_6,_9,_6,_6,_6,_6,_1];
_4 = _5.0;
_19 = -(-323057353_i32);
_9 = (*_15) as isize;
RET = [47_i8,110_i8,(-64_i8),89_i8,102_i8];
_2 = [_6,_6,_6,_1,_6,_1,_1];
_17 = _11;
_10 = [_6,_6,_1,_1,_6,_1,_6];
_16 = [120_u8,75_u8,205_u8,86_u8,56_u8,109_u8,179_u8];
Goto(bb9)
}
bb9 = {
_13 = 64458_u16;
_18 = [_19,_19,_19,_19,_19,_19,_19];
_7 = _4;
_5.0 = _8;
_7 = _2;
_5.0 = [_6,_1,_1,_1,_1,_1,_1];
_1 = 239502166901835107580190584051944137971_u128 as isize;
_11 = _7;
_7 = _8;
_20 = _5;
_6 = _9;
match _13 {
64458 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_21 = 11643473813248092178_u64 as u32;
_5 = (_8,);
_4 = [_6,_6,_6,_1,_6,_6,_6];
_5.0 = _3.0;
_12 = _7;
match _13 {
0 => bb9,
1 => bb10,
2 => bb6,
64458 => bb13,
_ => bb12
}
}
bb12 = {
_13 = 64458_u16;
_18 = [_19,_19,_19,_19,_19,_19,_19];
_7 = _4;
_5.0 = _8;
_7 = _2;
_5.0 = [_6,_1,_1,_1,_1,_1,_1];
_1 = 239502166901835107580190584051944137971_u128 as isize;
_11 = _7;
_7 = _8;
_20 = _5;
_6 = _9;
match _13 {
64458 => bb11,
_ => bb10
}
}
bb13 = {
_19 = (-839365678_i32);
RET = [(-79_i8),(-115_i8),(-100_i8),117_i8,41_i8];
_10 = _12;
_5 = (_11,);
_20.0 = [_9,_9,_9,_9,_1,_9,_1];
Goto(bb14)
}
bb14 = {
_3.0 = _17;
_15 = core::ptr::addr_of_mut!((*_15));
_3.0 = _17;
_15 = core::ptr::addr_of_mut!((*_15));
_17 = [_9,_1,_9,_1,_1,_9,_6];
_1 = _6;
_15 = core::ptr::addr_of_mut!((*_15));
_23 = '\u{b6ad2}';
_19 = 1377139967_i32;
_17 = _11;
RET = [32_i8,118_i8,109_i8,(-42_i8),(-113_i8)];
_5 = (_2,);
_7 = _8;
_11 = [_9,_6,_1,_9,_9,_1,_6];
_14 = 1_usize as f32;
_19 = -(-2067229196_i32);
_5.0 = [_9,_6,_9,_1,_6,_6,_1];
_6 = _1 >> _9;
_10 = [_1,_6,_9,_6,_6,_9,_6];
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(14_usize, 23_usize, Move(_23), 8_usize, Move(_8), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(14_usize, 17_usize, Move(_17), 9_usize, Move(_9), 12_usize, Move(_12), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(14_usize, 16_usize, Move(_16), 21_usize, Move(_21), 29_usize, _29, 29_usize, _29), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: isize,mut _2: isize,mut _3: u32,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: u32) -> [i64; 8] {
mir! {
type RET = [i64; 8];
let _8: [isize; 7];
let _9: f64;
let _10: [i64; 8];
let _11: bool;
let _12: isize;
let _13: isize;
let _14: isize;
let _15: f64;
let _16: isize;
let _17: isize;
let _18: Adt48;
let _19: isize;
let _20: f32;
let _21: u128;
let _22: [i32; 7];
let _23: [isize; 7];
let _24: char;
let _25: f64;
let _26: (*mut bool,);
let _27: f64;
let _28: ((*mut bool, bool, i128, isize, u128, bool),);
let _29: Adt47;
let _30: *mut *mut f32;
let _31: [i8; 5];
let _32: [i8; 7];
let _33: isize;
let _34: *mut *mut f32;
let _35: isize;
let _36: f64;
let _37: [i8; 5];
let _38: u16;
let _39: [i32; 7];
let _40: f64;
let _41: [isize; 7];
let _42: u8;
let _43: char;
let _44: f64;
let _45: char;
let _46: [i32; 7];
let _47: f32;
let _48: f64;
let _49: char;
let _50: bool;
let _51: [i64; 1];
let _52: [isize; 7];
let _53: Adt45;
let _54: [i32; 7];
let _55: i64;
let _56: [isize; 7];
let _57: bool;
let _58: [i64; 1];
let _59: u128;
let _60: [i64; 8];
let _61: [i8; 5];
let _62: isize;
let _63: Adt49;
let _64: isize;
let _65: Adt43;
let _66: (*mut bool,);
let _67: u8;
let _68: ();
let _69: ();
{
RET = [(-300865585768461900_i64),163180118222064672_i64,(-1462069659029395026_i64),(-5724160411118777228_i64),4847993766282452945_i64,(-5479291766772515290_i64),6466651882197103626_i64,3172939938495834041_i64];
_4 = !_6;
_6 = !_2;
_7 = _2 as u32;
RET = [3822862289507558622_i64,4424771185930388754_i64,(-1164185586171839201_i64),(-3930686370747992272_i64),6750393940131043019_i64,7516547133942999278_i64,(-3180142701730055029_i64),(-6875418292190227362_i64)];
RET = [2951308042898820479_i64,8019806580443114155_i64,4949205246994427789_i64,4441032033550396500_i64,5602083169393312204_i64,(-8038278999661511891_i64),(-6644547854750216997_i64),(-5531639418764777632_i64)];
_5 = _1;
_5 = _1;
_9 = 33107_u16 as f64;
_8 = [_5,_5,_5,_2,_4,_1,_5];
_4 = _1;
_9 = 196_u8 as f64;
_7 = (-89_i8) as u32;
_8 = [_6,_2,_6,_4,_4,_1,_4];
RET = [2584473838668939146_i64,2963723353708407648_i64,8098694014073913806_i64,(-8990693962484822347_i64),2125484000758233458_i64,(-5066295783784757689_i64),5103992311140430809_i64,1049070779802787721_i64];
_10 = RET;
_11 = false ^ false;
_4 = _6;
RET = [(-7367161848580656275_i64),3770318097382668613_i64,1082417274665190655_i64,6552786488628141989_i64,5271743698650532814_i64,(-6250055048861401842_i64),1514641110646103985_i64,(-5947731823056910310_i64)];
Call(_4 = core::intrinsics::bswap(_5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = [_4,_1,_1,_2,_5,_5,_6];
_6 = _4;
_12 = !_1;
RET = [3857123127361581609_i64,(-5760762587255690926_i64),(-2689182614214020405_i64),1662947773482687541_i64,5769793392254736994_i64,8941926984014058089_i64,6087949370144586360_i64,3211640337913842578_i64];
_2 = _3 as isize;
_13 = _12 & _6;
_1 = _5;
_14 = -_6;
_1 = _5 >> _12;
_15 = _9 - _9;
_1 = _14;
_15 = _9;
_9 = _15;
_12 = (-5595_i16) as isize;
_9 = -_15;
_1 = _14;
_1 = -_5;
_9 = _15;
_7 = _3;
_3 = !_7;
_7 = _3 & _3;
_4 = _1 & _13;
Call(_15 = core::intrinsics::fmaf64(_9, _9, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = _9 as isize;
_16 = -_2;
RET = [(-3922942571868943151_i64),5339131343909604847_i64,6151525412962799969_i64,1897943147609578745_i64,8828913772569533420_i64,(-7829475654898115897_i64),(-3097014852383552404_i64),6611268257197443543_i64];
RET = [6830829450854560491_i64,3188343616003947668_i64,8545156761073499510_i64,(-3059765470862951142_i64),(-6320953373376904968_i64),1865507797382234637_i64,6169774626422538433_i64,(-7489398916848234531_i64)];
_8 = [_13,_1,_1,_4,_4,_4,_13];
_10 = RET;
_6 = _1 & _5;
_12 = _6 + _5;
Goto(bb3)
}
bb3 = {
_14 = _5;
_19 = _4;
_1 = !_19;
_4 = _13 + _19;
_11 = !true;
_14 = _12 ^ _4;
_2 = _15 as isize;
_8 = [_14,_14,_1,_12,_19,_19,_1];
_4 = _14;
_12 = 29177442573753696193224531423676116895_u128 as isize;
_8 = [_4,_19,_5,_14,_1,_4,_1];
_10 = RET;
_19 = _14;
_7 = _9 as u32;
_2 = !_19;
_19 = 51113739176274713025321328896091833904_u128 as isize;
_17 = _13;
_1 = _7 as isize;
_23 = [_6,_2,_4,_6,_4,_2,_14];
_9 = _15;
_4 = _14 ^ _14;
_16 = 45505_u16 as isize;
RET = _10;
_13 = _2 >> _2;
Goto(bb4)
}
bb4 = {
_19 = _14 + _2;
_16 = !_5;
_22 = [1739783016_i32,(-1357976793_i32),668811363_i32,(-2003770177_i32),(-916364806_i32),(-1588621456_i32),930958178_i32];
_20 = _13 as f32;
Goto(bb5)
}
bb5 = {
_17 = _14 >> _6;
_25 = _15;
_22 = [1060183256_i32,39818036_i32,(-195290935_i32),(-936196748_i32),(-1539056264_i32),(-1156667989_i32),(-703397621_i32)];
RET = [(-4051550492007533114_i64),669777591947507419_i64,2384795618071388394_i64,3048569330693026784_i64,(-3423363476564941692_i64),1638663492437343373_i64,90518412576760119_i64,1247536707353043225_i64];
_15 = -_9;
_14 = _2 + _17;
_28.0.5 = _13 > _19;
_23 = [_13,_13,_13,_4,_17,_13,_13];
_5 = -_2;
_7 = 8972638022857667695_i64 as u32;
_16 = 1550184475_i32 as isize;
_6 = _5 + _17;
_27 = _4 as f64;
_4 = !_1;
_27 = _25 + _15;
_21 = _28.0.5 as u128;
RET = [(-960961092983210567_i64),(-560492475812065495_i64),(-4202487116167766973_i64),4478926007631732078_i64,(-3799825665523341143_i64),(-280526962812498980_i64),(-3393289678977584311_i64),(-8668686179285047148_i64)];
_3 = _7;
RET = [293925656089278919_i64,(-7283203494267126256_i64),6099289563879498840_i64,(-7703738472736486300_i64),779962118357544814_i64,6667018846726680933_i64,6181974354162647352_i64,8304951501397056117_i64];
Goto(bb6)
}
bb6 = {
_28.0.4 = !_21;
_27 = _15;
_14 = _7 as isize;
_23 = [_2,_17,_19,_5,_17,_6,_2];
_3 = _28.0.5 as u32;
_2 = _13;
_27 = -_15;
_9 = _20 as f64;
_21 = !_28.0.4;
_4 = !_17;
_16 = _13;
_24 = '\u{138a6}';
_25 = _9;
_24 = '\u{6698b}';
Goto(bb7)
}
bb7 = {
_8 = [_4,_6,_4,_17,_6,_17,_13];
RET = _10;
_26.0 = core::ptr::addr_of_mut!(_11);
_23 = [_19,_4,_6,_6,_19,_4,_2];
_7 = !_3;
_24 = '\u{2abbe}';
_9 = _21 as f64;
_28.0.5 = _11;
RET = [(-8443980914365372662_i64),5685480601406674445_i64,(-1171974498302442731_i64),(-1014824594621891432_i64),682930572030675454_i64,804623522865701123_i64,(-2794600743969656950_i64),2352441970119306131_i64];
_28.0.3 = _6 | _17;
_8 = [_28.0.3,_5,_2,_17,_5,_4,_28.0.3];
_5 = !_2;
_16 = 135_u8 as isize;
_32 = [63_i8,(-128_i8),(-108_i8),(-108_i8),(-80_i8),(-101_i8),(-10_i8)];
_31 = [82_i8,3_i8,(-109_i8),61_i8,55_i8];
_23 = [_2,_17,_17,_28.0.3,_17,_28.0.3,_19];
_1 = _6 - _13;
_25 = _9 + _9;
_12 = 7112745842261652803_u64 as isize;
_1 = _28.0.3 - _4;
Call(_17 = fn16(_1, _28.0.3, _20, _23, _19, _23, _6, _4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_27 = 2110559977312780881_u64 as f64;
_28.0.1 = _11;
_2 = _4;
_15 = (-58340468044960720524438952693076373756_i128) as f64;
_28.0.0 = _26.0;
_36 = _25 - _25;
_20 = _7 as f32;
_35 = (-31438_i16) as isize;
Goto(bb9)
}
bb9 = {
_7 = _3;
_28.0.3 = 30941_i16 as isize;
_25 = 55446_u16 as f64;
_2 = (-4515111561290101076_i64) as isize;
_35 = !_5;
_26 = (_28.0.0,);
_19 = _28.0.5 as isize;
_10 = [8163336230458269380_i64,1158246286210866330_i64,(-7062730740737716450_i64),8339453052581196543_i64,(-8413345250482359327_i64),(-4095268962414138598_i64),1982334898026362929_i64,2760929125041089306_i64];
_14 = -_1;
_38 = 46767_u16 & 24323_u16;
_21 = 3101347620253506393_i64 as u128;
_31 = [71_i8,(-2_i8),61_i8,(-10_i8),(-35_i8)];
_33 = _6;
_37 = [(-55_i8),(-41_i8),91_i8,(-7_i8),(-64_i8)];
_28.0.2 = _38 as i128;
_3 = (-887534079_i32) as u32;
_35 = _33 * _4;
_21 = !_28.0.4;
_16 = -_13;
_5 = _17;
_19 = _21 as isize;
_4 = -_35;
_28.0.1 = _11;
Goto(bb10)
}
bb10 = {
_42 = 53_u8;
_28.0.0 = core::ptr::addr_of_mut!(_28.0.1);
_6 = _1 + _17;
_29 = Adt47::Variant1 { fld0: _28.0.2,fld1: 8014531156923931867_i64 };
_20 = 7471559775826777046_i64 as f32;
_19 = _28.0.4 as isize;
_28.0.2 = Field::<i128>(Variant(_29, 1), 0) | Field::<i128>(Variant(_29, 1), 0);
_39 = [(-1284740456_i32),(-31280820_i32),(-35584079_i32),1720315686_i32,278915643_i32,1191012600_i32,(-913746878_i32)];
_17 = _4;
match _42 {
53 => bb11,
_ => bb5
}
}
bb11 = {
_37 = [(-110_i8),(-15_i8),(-95_i8),63_i8,(-83_i8)];
_38 = 11351_u16;
_10 = [3819616369749433363_i64,7362993273990274688_i64,4780592224871465045_i64,5341995868730788149_i64,8439247952866088933_i64,(-8387255974542124115_i64),(-7899399362236405503_i64),4674350707144846991_i64];
_28.0.3 = _4 - _33;
_17 = 23681_i16 as isize;
_41 = _23;
_1 = _19;
_7 = _3 << _6;
_28.0.0 = _26.0;
_28.0.3 = _11 as isize;
_31 = _37;
_33 = _11 as isize;
_15 = _36 + _36;
_9 = (-17_i8) as f64;
_45 = _24;
_38 = _7 as u16;
_45 = _24;
_13 = -_5;
_12 = _1;
_8 = _23;
_3 = _7 ^ _7;
_21 = !_28.0.4;
_7 = _3 << _38;
_28.0.3 = !_14;
_22 = [(-712091951_i32),1857163050_i32,(-822155284_i32),293394808_i32,626243530_i32,1578342517_i32,(-590842279_i32)];
_20 = 3_usize as f32;
_39 = [1891555664_i32,851128447_i32,393432815_i32,(-1698319516_i32),(-1698304734_i32),(-1164670705_i32),(-774248628_i32)];
Goto(bb12)
}
bb12 = {
RET = [(-4533408479551036767_i64),7916431782192467186_i64,5618438999058494856_i64,834759000917562189_i64,5439051113190571610_i64,(-4531249690467482953_i64),(-7161477509291042278_i64),3432629622108887144_i64];
_36 = _15 + _15;
_32 = [118_i8,(-44_i8),(-7_i8),71_i8,(-36_i8),78_i8,101_i8];
RET = [3056048215312518765_i64,3779067910000737950_i64,(-6840276496651453384_i64),6063805348774507118_i64,(-2493315746609799986_i64),(-792829458306064303_i64),(-7898751270768244225_i64),(-2815052100518955762_i64)];
_43 = _45;
_23 = [_12,_16,_16,_6,_14,_14,_5];
_28.0.0 = _26.0;
_46 = _39;
place!(Field::<i64>(Variant(_29, 1), 1)) = !(-7075631067817705435_i64);
_26.0 = _28.0.0;
_11 = !_28.0.5;
_2 = _5;
_26 = (_28.0.0,);
_5 = _28.0.4 as isize;
_5 = 16_i8 as isize;
_28.0.4 = _21;
_35 = _16;
_52 = [_28.0.3,_14,_14,_2,_13,_12,_13];
_40 = _36;
Goto(bb13)
}
bb13 = {
_52 = [_12,_16,_6,_28.0.3,_28.0.3,_4,_19];
_9 = -_40;
place!(Field::<i128>(Variant(_29, 1), 0)) = _28.0.2;
_48 = 498544641297289179_u64 as f64;
RET = [Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1),Field::<i64>(Variant(_29, 1), 1)];
_31 = [(-82_i8),11_i8,31_i8,(-91_i8),9_i8];
_54 = [2004658549_i32,(-447223875_i32),(-245303926_i32),(-1060202951_i32),828066680_i32,520911333_i32,(-2055554496_i32)];
_26.0 = core::ptr::addr_of_mut!(_50);
_53.fld2 = _28.0.0;
_43 = _45;
_2 = _13;
_21 = _20 as u128;
_32 = [57_i8,(-110_i8),40_i8,(-77_i8),(-102_i8),(-36_i8),(-53_i8)];
_52 = _23;
_22 = [(-1298410536_i32),320442231_i32,(-1290687153_i32),(-2128009483_i32),(-214891301_i32),(-898850022_i32),(-1690202413_i32)];
_50 = !_11;
_13 = _20 as isize;
SetDiscriminant(_29, 0);
_33 = !_12;
match _42 {
53 => bb15,
_ => bb14
}
}
bb14 = {
_37 = [(-110_i8),(-15_i8),(-95_i8),63_i8,(-83_i8)];
_38 = 11351_u16;
_10 = [3819616369749433363_i64,7362993273990274688_i64,4780592224871465045_i64,5341995868730788149_i64,8439247952866088933_i64,(-8387255974542124115_i64),(-7899399362236405503_i64),4674350707144846991_i64];
_28.0.3 = _4 - _33;
_17 = 23681_i16 as isize;
_41 = _23;
_1 = _19;
_7 = _3 << _6;
_28.0.0 = _26.0;
_28.0.3 = _11 as isize;
_31 = _37;
_33 = _11 as isize;
_15 = _36 + _36;
_9 = (-17_i8) as f64;
_45 = _24;
_38 = _7 as u16;
_45 = _24;
_13 = -_5;
_12 = _1;
_8 = _23;
_3 = _7 ^ _7;
_21 = !_28.0.4;
_7 = _3 << _38;
_28.0.3 = !_14;
_22 = [(-712091951_i32),1857163050_i32,(-822155284_i32),293394808_i32,626243530_i32,1578342517_i32,(-590842279_i32)];
_20 = 3_usize as f32;
_39 = [1891555664_i32,851128447_i32,393432815_i32,(-1698319516_i32),(-1698304734_i32),(-1164670705_i32),(-774248628_i32)];
Goto(bb12)
}
bb15 = {
place!(Field::<i16>(Variant(_29, 0), 1)) = _6 as i16;
_53.fld2 = core::ptr::addr_of_mut!(_57);
_46 = [(-122567057_i32),1086647658_i32,(-580811964_i32),(-804664435_i32),(-798221731_i32),1514603895_i32,1078146452_i32];
_43 = _45;
_55 = -5317958094255375374_i64;
_25 = _15 + _15;
_19 = -_14;
_17 = _20 as isize;
_5 = _2 + _1;
_53.fld7 = (_8,);
_53.fld1 = _43;
_41 = [_1,_4,_12,_16,_12,_2,_6];
_41 = _23;
_28.0.2 = (-152362259206193768304915987733156639307_i128) << _35;
_56 = [_33,_6,_14,_5,_28.0.3,_16,_33];
_6 = _2 * _14;
_66.0 = core::ptr::addr_of_mut!(_28.0.1);
_64 = _2 >> Field::<i16>(Variant(_29, 0), 1);
_32 = [(-73_i8),(-110_i8),104_i8,48_i8,(-66_i8),60_i8,(-122_i8)];
_60 = [_55,_55,_55,_55,_55,_55,_55,_55];
_3 = _7 & _7;
_29 = Adt47::Variant1 { fld0: _28.0.2,fld1: _55 };
_16 = -_35;
_32 = [(-115_i8),21_i8,(-59_i8),(-84_i8),47_i8,47_i8,34_i8];
_5 = Field::<i128>(Variant(_29, 1), 0) as isize;
Goto(bb16)
}
bb16 = {
Call(_68 = dump_var(15_usize, 16_usize, Move(_16), 38_usize, Move(_38), 1_usize, Move(_1), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_68 = dump_var(15_usize, 50_usize, Move(_50), 21_usize, Move(_21), 31_usize, Move(_31), 46_usize, Move(_46)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_68 = dump_var(15_usize, 54_usize, Move(_54), 55_usize, Move(_55), 10_usize, Move(_10), 33_usize, Move(_33)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_68 = dump_var(15_usize, 45_usize, Move(_45), 52_usize, Move(_52), 24_usize, Move(_24), 32_usize, Move(_32)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_68 = dump_var(15_usize, 56_usize, Move(_56), 4_usize, Move(_4), 11_usize, Move(_11), 69_usize, _69), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: isize,mut _2: isize,mut _3: f32,mut _4: [isize; 7],mut _5: isize,mut _6: [isize; 7],mut _7: isize,mut _8: isize) -> isize {
mir! {
type RET = isize;
let _9: usize;
let _10: [u128; 3];
let _11: Adt48;
let _12: ();
let _13: ();
{
_1 = _8 << _7;
_5 = 66_i8 as isize;
_5 = _2;
RET = _1 * _1;
_8 = RET | _5;
_8 = _2;
_4 = [_8,_2,_7,_5,RET,_2,RET];
_1 = 99_i8 as isize;
_6 = _4;
RET = _7 + _7;
_7 = _2;
_2 = -_8;
RET = _2;
_3 = 7458968967514895970_i64 as f32;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(16_usize, 2_usize, Move(_2), 7_usize, Move(_7), 1_usize, Move(_1), 13_usize, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: isize,mut _2: [i32; 7],mut _3: [i32; 7],mut _4: [i32; 7],mut _5: isize,mut _6: [isize; 7]) -> [i64; 1] {
mir! {
type RET = [i64; 1];
let _7: ([isize; 7],);
let _8: i64;
let _9: u8;
let _10: [isize; 7];
let _11: i16;
let _12: f32;
let _13: Adt52;
let _14: Adt45;
let _15: [i8; 7];
let _16: i64;
let _17: [i8; 5];
let _18: isize;
let _19: [i8; 5];
let _20: u128;
let _21: f64;
let _22: char;
let _23: u64;
let _24: *mut &'static f64;
let _25: u32;
let _26: bool;
let _27: [i8; 5];
let _28: [i64; 1];
let _29: isize;
let _30: [u8; 7];
let _31: u8;
let _32: Adt42;
let _33: u32;
let _34: [isize; 7];
let _35: u16;
let _36: [i64; 8];
let _37: u64;
let _38: [isize; 7];
let _39: Adt49;
let _40: ();
let _41: ();
{
RET = [6730875961417346321_i64];
_4 = [1744207637_i32,(-994138342_i32),44188390_i32,2056501401_i32,2143090398_i32,698000293_i32,366529574_i32];
RET = [(-188437933476956038_i64)];
_7 = (_6,);
_4 = [(-546824432_i32),(-1404656136_i32),(-918844204_i32),1134751747_i32,(-55857326_i32),(-1990128021_i32),104543963_i32];
_4 = [(-40651147_i32),(-849846774_i32),1215829360_i32,684767774_i32,1723676998_i32,(-849792101_i32),1750070694_i32];
_1 = _5 * _5;
_2 = [1809417830_i32,(-2069647303_i32),(-1008131059_i32),(-122626886_i32),1410450573_i32,(-1794915271_i32),(-373538965_i32)];
_7.0 = _6;
_5 = !_1;
RET = [(-2891625786027034492_i64)];
_6 = [_5,_5,_1,_5,_5,_1,_1];
_1 = !_5;
_9 = 42007_u16 as u8;
_9 = 119_u8;
_2 = [(-1968929160_i32),1526312664_i32,1685187571_i32,(-2016807050_i32),1406629971_i32,(-2032456690_i32),(-1440588338_i32)];
Goto(bb1)
}
bb1 = {
_8 = (-1820610898373625142_i64);
_7 = (_6,);
_6 = [_1,_1,_1,_1,_1,_1,_5];
_5 = _1 << _9;
_4 = [1180210145_i32,(-751837889_i32),1368832174_i32,1893187365_i32,1997795302_i32,(-1674023502_i32),(-366828527_i32)];
_9 = _8 as u8;
_1 = 14454_u16 as isize;
_5 = !_1;
_1 = -_5;
_5 = _1;
RET = [_8];
_7 = (_6,);
_1 = !_5;
RET = [_8];
_7 = (_6,);
_7 = (_6,);
_1 = _5 << _8;
_3 = [(-990018987_i32),1871404918_i32,(-129183774_i32),(-1502126821_i32),(-105883625_i32),454499624_i32,(-199652658_i32)];
_7 = (_6,);
_9 = 23_u8;
RET = [_8];
_7 = (_6,);
_5 = -_1;
RET = [_8];
_9 = (-156470246238726687651456597740956995685_i128) as u8;
RET = [_8];
Goto(bb2)
}
bb2 = {
_11 = 1624116742_i32 as i16;
_6 = _7.0;
_3 = [842340608_i32,(-328826560_i32),(-963099487_i32),1092050932_i32,(-977243446_i32),(-1527728557_i32),1506458198_i32];
_1 = _5 << _9;
_10 = [_5,_1,_5,_5,_1,_5,_5];
RET = [_8];
RET = [_8];
Goto(bb3)
}
bb3 = {
_1 = _5 >> _5;
_12 = _8 as f32;
_7 = (_6,);
_7 = (_10,);
_7 = (_10,);
_7.0 = [_1,_5,_1,_5,_1,_1,_1];
_8 = (-3249906708446075474_i64) << _1;
_10 = [_1,_1,_5,_5,_1,_1,_1];
Goto(bb4)
}
bb4 = {
_12 = 17837155436135345632_u64 as f32;
_11 = !8040_i16;
_1 = _5 & _5;
_7 = (_10,);
_14.fld3 = _9 as f64;
_14.fld7.0 = [_5,_1,_1,_5,_1,_1,_5];
_8 = (-847988628588559222_i64);
_2 = _3;
_14.fld0 = !324817294_u32;
_14.fld7 = (_10,);
_14.fld3 = (-151203545012442490394513708392226508661_i128) as f64;
_2 = [1502693659_i32,1255700812_i32,1206185465_i32,(-1810716215_i32),(-1251444269_i32),(-950384507_i32),2061890788_i32];
_6 = _7.0;
_14.fld4 = 14040708443107000433_u64;
_16 = _8 - _8;
RET = [_8];
_7 = (_14.fld7.0,);
_15 = [111_i8,(-72_i8),28_i8,88_i8,(-84_i8),(-104_i8),(-8_i8)];
_14.fld4 = 425267043854813782_usize as u64;
_11 = !8306_i16;
_14.fld7.0 = [_5,_1,_1,_5,_1,_5,_5];
_3 = [1983629053_i32,1683744347_i32,(-310916894_i32),826718791_i32,(-1937358722_i32),441945321_i32,(-332864351_i32)];
match _8 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
340282366920938463462526618803179652234 => bb10,
_ => bb9
}
}
bb5 = {
_1 = _5 >> _5;
_12 = _8 as f32;
_7 = (_6,);
_7 = (_10,);
_7 = (_10,);
_7.0 = [_1,_5,_1,_5,_1,_1,_1];
_8 = (-3249906708446075474_i64) << _1;
_10 = [_1,_1,_5,_5,_1,_1,_1];
Goto(bb4)
}
bb6 = {
_11 = 1624116742_i32 as i16;
_6 = _7.0;
_3 = [842340608_i32,(-328826560_i32),(-963099487_i32),1092050932_i32,(-977243446_i32),(-1527728557_i32),1506458198_i32];
_1 = _5 << _9;
_10 = [_5,_1,_5,_5,_1,_5,_5];
RET = [_8];
RET = [_8];
Goto(bb3)
}
bb7 = {
_8 = (-1820610898373625142_i64);
_7 = (_6,);
_6 = [_1,_1,_1,_1,_1,_1,_5];
_5 = _1 << _9;
_4 = [1180210145_i32,(-751837889_i32),1368832174_i32,1893187365_i32,1997795302_i32,(-1674023502_i32),(-366828527_i32)];
_9 = _8 as u8;
_1 = 14454_u16 as isize;
_5 = !_1;
_1 = -_5;
_5 = _1;
RET = [_8];
_7 = (_6,);
_1 = !_5;
RET = [_8];
_7 = (_6,);
_7 = (_6,);
_1 = _5 << _8;
_3 = [(-990018987_i32),1871404918_i32,(-129183774_i32),(-1502126821_i32),(-105883625_i32),454499624_i32,(-199652658_i32)];
_7 = (_6,);
_9 = 23_u8;
RET = [_8];
_7 = (_6,);
_5 = -_1;
RET = [_8];
_9 = (-156470246238726687651456597740956995685_i128) as u8;
RET = [_8];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14.fld7.0 = [_1,_1,_5,_5,_5,_1,_1];
_14.fld3 = 127417761394623745063847739512146205783_u128 as f64;
RET = [_8];
_15 = [(-81_i8),(-106_i8),(-100_i8),(-120_i8),(-79_i8),(-52_i8),(-61_i8)];
_14.fld4 = 2698899987076727137_u64 | 98890914596150046_u64;
_9 = 32_u8;
_15 = [95_i8,(-34_i8),105_i8,53_i8,96_i8,64_i8,80_i8];
_19 = [(-128_i8),57_i8,(-85_i8),(-82_i8),34_i8];
_14.fld7 = (_7.0,);
_14.fld0 = 4122821184_u32 + 3604822965_u32;
_9 = !95_u8;
_18 = _11 as isize;
_10 = [_1,_1,_18,_1,_5,_5,_1];
RET = [_16];
_10 = _7.0;
_11 = 19106_i16 ^ 23677_i16;
_6 = _14.fld7.0;
_11 = 47265_u16 as i16;
_12 = _8 as f32;
_14.fld1 = '\u{e790d}';
_4 = [225546321_i32,281551704_i32,(-553235741_i32),(-1798829399_i32),1536652212_i32,286728283_i32,(-646690673_i32)];
_11 = 4762_i16 + (-15011_i16);
_12 = _9 as f32;
_14.fld7 = (_7.0,);
_8 = _16 | _16;
_7 = (_6,);
Goto(bb11)
}
bb11 = {
_14.fld7 = (_7.0,);
_7.0 = _10;
_21 = -_14.fld3;
_17 = [9_i8,56_i8,2_i8,13_i8,(-32_i8)];
_9 = 131_u8;
_19 = [95_i8,108_i8,(-94_i8),51_i8,36_i8];
_20 = 229134797854033484090879916749763031346_u128 >> _8;
_23 = _14.fld4 * _14.fld4;
_16 = _8;
_18 = !_1;
_19 = [(-123_i8),19_i8,47_i8,(-47_i8),93_i8];
_3 = _4;
_3 = [1399143773_i32,(-507724836_i32),(-1907085740_i32),2067859921_i32,(-513429350_i32),(-1033390332_i32),(-390576440_i32)];
_20 = 83357431850699867262958176385179350786_u128;
_7 = (_6,);
_7.0 = _6;
_3 = _4;
_6 = [_1,_18,_18,_18,_1,_1,_5];
_4 = [1127217166_i32,918572360_i32,335119217_i32,1554785220_i32,(-1389448091_i32),2078335898_i32,1850538690_i32];
_22 = _14.fld1;
_14.fld7 = (_6,);
RET = [_8];
_14.fld7.0 = _6;
RET = [_16];
_8 = _11 as i64;
_7 = _14.fld7;
Goto(bb12)
}
bb12 = {
_2 = [890366999_i32,912462146_i32,(-1435111149_i32),(-1323180318_i32),1417594107_i32,(-307431148_i32),(-990197677_i32)];
_14.fld2 = core::ptr::addr_of_mut!(_26);
_11 = (-137903694748659129081807107045847828852_i128) as i16;
_11 = !(-30097_i16);
_7.0 = [_18,_18,_18,_5,_1,_1,_5];
_20 = 184692704942584590284434764566681651916_u128;
_16 = _9 as i64;
_14.fld0 = !38692420_u32;
_5 = _1 | _18;
_10 = _7.0;
_2 = [2136115139_i32,464719202_i32,(-1226475786_i32),1599462549_i32,(-483921864_i32),(-644144122_i32),(-1018616642_i32)];
_10 = [_5,_5,_5,_5,_5,_18,_5];
_27 = [(-52_i8),(-116_i8),(-13_i8),(-21_i8),71_i8];
_17 = _27;
_4 = [(-1391200967_i32),(-1356497491_i32),(-351500260_i32),165694375_i32,837691055_i32,2056284856_i32,(-1794627340_i32)];
_17 = [(-80_i8),(-20_i8),(-19_i8),27_i8,(-72_i8)];
_17 = [(-26_i8),(-118_i8),76_i8,10_i8,121_i8];
_16 = 505927261_i32 as i64;
_28 = [_8];
_7 = (_10,);
_25 = _14.fld0;
Goto(bb13)
}
bb13 = {
_20 = !37534248690444466551202237484262412165_u128;
_2 = [(-319116940_i32),(-172234668_i32),(-513669461_i32),(-2059786583_i32),(-1461597551_i32),(-995407155_i32),(-2005813218_i32)];
RET = _28;
_1 = 32805_u16 as isize;
_14.fld3 = -_21;
_5 = _18;
_18 = _5;
match _9 {
0 => bb4,
1 => bb5,
2 => bb14,
3 => bb15,
131 => bb17,
_ => bb16
}
}
bb14 = {
_11 = 1624116742_i32 as i16;
_6 = _7.0;
_3 = [842340608_i32,(-328826560_i32),(-963099487_i32),1092050932_i32,(-977243446_i32),(-1527728557_i32),1506458198_i32];
_1 = _5 << _9;
_10 = [_5,_1,_5,_5,_1,_5,_5];
RET = [_8];
RET = [_8];
Goto(bb3)
}
bb15 = {
_14.fld7 = (_7.0,);
_7.0 = _10;
_21 = -_14.fld3;
_17 = [9_i8,56_i8,2_i8,13_i8,(-32_i8)];
_9 = 131_u8;
_19 = [95_i8,108_i8,(-94_i8),51_i8,36_i8];
_20 = 229134797854033484090879916749763031346_u128 >> _8;
_23 = _14.fld4 * _14.fld4;
_16 = _8;
_18 = !_1;
_19 = [(-123_i8),19_i8,47_i8,(-47_i8),93_i8];
_3 = _4;
_3 = [1399143773_i32,(-507724836_i32),(-1907085740_i32),2067859921_i32,(-513429350_i32),(-1033390332_i32),(-390576440_i32)];
_20 = 83357431850699867262958176385179350786_u128;
_7 = (_6,);
_7.0 = _6;
_3 = _4;
_6 = [_1,_18,_18,_18,_1,_1,_5];
_4 = [1127217166_i32,918572360_i32,335119217_i32,1554785220_i32,(-1389448091_i32),2078335898_i32,1850538690_i32];
_22 = _14.fld1;
_14.fld7 = (_6,);
RET = [_8];
_14.fld7.0 = _6;
RET = [_16];
_8 = _11 as i64;
_7 = _14.fld7;
Goto(bb12)
}
bb16 = {
_14.fld7.0 = [_1,_1,_5,_5,_5,_1,_1];
_14.fld3 = 127417761394623745063847739512146205783_u128 as f64;
RET = [_8];
_15 = [(-81_i8),(-106_i8),(-100_i8),(-120_i8),(-79_i8),(-52_i8),(-61_i8)];
_14.fld4 = 2698899987076727137_u64 | 98890914596150046_u64;
_9 = 32_u8;
_15 = [95_i8,(-34_i8),105_i8,53_i8,96_i8,64_i8,80_i8];
_19 = [(-128_i8),57_i8,(-85_i8),(-82_i8),34_i8];
_14.fld7 = (_7.0,);
_14.fld0 = 4122821184_u32 + 3604822965_u32;
_9 = !95_u8;
_18 = _11 as isize;
_10 = [_1,_1,_18,_1,_5,_5,_1];
RET = [_16];
_10 = _7.0;
_11 = 19106_i16 ^ 23677_i16;
_6 = _14.fld7.0;
_11 = 47265_u16 as i16;
_12 = _8 as f32;
_14.fld1 = '\u{e790d}';
_4 = [225546321_i32,281551704_i32,(-553235741_i32),(-1798829399_i32),1536652212_i32,286728283_i32,(-646690673_i32)];
_11 = 4762_i16 + (-15011_i16);
_12 = _9 as f32;
_14.fld7 = (_7.0,);
_8 = _16 | _16;
_7 = (_6,);
Goto(bb11)
}
bb17 = {
_29 = _18 >> _8;
_34 = [_29,_29,_18,_5,_18,_29,_5];
_6 = [_5,_18,_29,_29,_29,_29,_18];
_12 = _9 as f32;
_31 = !_9;
_32.fld4 = _20 as i16;
_3 = _4;
_32.fld2 = Adt40::Variant0 { fld0: false,fld1: (-104_i8),fld2: _12 };
_36 = [_8,_8,_8,_16,_16,_16,_8,_16];
_27 = [74_i8,127_i8,(-90_i8),(-19_i8),(-118_i8)];
_34 = [_1,_29,_18,_29,_18,_1,_18];
_30 = [_31,_9,_31,_31,_9,_9,_9];
_11 = _32.fld4;
_36 = [_8,_8,_8,_16,_8,_8,_16,_16];
Goto(bb18)
}
bb18 = {
Call(_40 = dump_var(17_usize, 30_usize, Move(_30), 25_usize, Move(_25), 29_usize, Move(_29), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_40 = dump_var(17_usize, 27_usize, Move(_27), 11_usize, Move(_11), 23_usize, Move(_23), 15_usize, Move(_15)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_40 = dump_var(17_usize, 34_usize, Move(_34), 31_usize, Move(_31), 19_usize, Move(_19), 22_usize, Move(_22)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_40 = dump_var(17_usize, 9_usize, Move(_9), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box((-52451536325170044253368083732993946350_i128)), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(5851067587148202978_u64), std::hint::black_box(15360_i16), std::hint::black_box(45102_u16), std::hint::black_box(1126562084_u32));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt38 {
Variant0{
fld0: [u8; 7],
fld1: char,
fld2: isize,
fld3: i8,
fld4: i16,
fld5: u32,
fld6: *mut f32,

},
Variant1{
fld0: f32,
fld1: f64,
fld2: (*mut bool, bool, i128, isize, u128, bool),
fld3: *mut bool,

},
Variant2{
fld0: ([isize; 7],),
fld1: char,
fld2: [i8; 7],
fld3: i8,
fld4: *const *const isize,
fld5: [i32; 7],
fld6: f32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt39 {
Variant0{
fld0: ((*mut bool, bool, i128, isize, u128, bool),),
fld1: char,
fld2: isize,
fld3: *const *const isize,
fld4: [u128; 3],
fld5: Adt38,
fld6: usize,
fld7: i128,

},
Variant1{
fld0: *mut *mut f32,
fld1: u8,
fld2: ((*mut bool, bool, i128, isize, u128, bool),),
fld3: (*mut bool,),
fld4: f32,

},
Variant2{
fld0: *const *const isize,
fld1: *mut *mut f32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt40 {
Variant0{
fld0: bool,
fld1: i8,
fld2: f32,

},
Variant1{
fld0: ([isize; 7],),
fld1: u128,
fld2: u16,
fld3: u32,
fld4: i16,
fld5: Adt39,
fld6: [i32; 7],

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: (*mut bool,),
fld1: *const isize,
fld2: [u128; 3],
fld3: f32,

},
Variant1{
fld0: u16,
fld1: *mut *mut f32,
fld2: Adt39,
fld3: i8,
fld4: i16,
fld5: [i8; 7],
fld6: *mut f32,
fld7: usize,

}}
#[derive(Debug)]
pub struct Adt42 {
fld0: [i64; 8],
fld1: u32,
fld2: Adt40,
fld3: Adt39,
fld4: i16,
}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: Adt41,
fld1: Adt40,

},
Variant1{
fld0: bool,
fld1: Adt40,
fld2: [i8; 7],

},
Variant2{
fld0: Adt42,
fld1: [i8; 7],
fld2: ((*mut bool, bool, i128, isize, u128, bool),),
fld3: u64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: [i8; 5],
fld1: [u128; 3],
fld2: f32,
fld3: u64,

},
Variant1{
fld0: *mut bool,
fld1: Adt40,
fld2: Adt38,
fld3: *mut *mut f32,
fld4: f64,
fld5: Adt43,
fld6: *const isize,
fld7: i128,

},
Variant2{
fld0: bool,
fld1: [u128; 3],
fld2: [i8; 7],
fld3: [i64; 1],
fld4: Adt42,
fld5: ((*mut bool, bool, i128, isize, u128, bool),),
fld6: Adt43,
fld7: u64,

},
Variant3{
fld0: [u128; 3],
fld1: Adt38,
fld2: [i64; 8],
fld3: Adt40,
fld4: [i64; 1],

}}
#[derive(Debug)]
pub struct Adt45 {
fld0: u32,
fld1: char,
fld2: *mut bool,
fld3: f64,
fld4: u64,
fld5: Adt41,
fld6: Adt38,
fld7: ([isize; 7],),
}
#[derive(Debug,Copy,Clone)]
pub enum Adt46 {
Variant0{
fld0: bool,
fld1: [u8; 7],
fld2: u8,
fld3: f32,
fld4: (i8, *const isize, i128, i128, [i64; 1]),
fld5: usize,
fld6: i64,

},
Variant1{
fld0: u16,
fld1: (*mut bool, bool, i128, isize, u128, bool),
fld2: (i8, *const isize, i128, i128, [i64; 1]),
fld3: [isize; 7],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt47 {
Variant0{
fld0: [i8; 5],
fld1: i16,
fld2: [i64; 8],
fld3: Adt46,

},
Variant1{
fld0: i128,
fld1: i64,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt42,
fld1: i8,
fld2: (*mut bool,),

},
Variant1{
fld0: u64,
fld1: f32,
fld2: isize,
fld3: *const *const isize,
fld4: Adt39,
fld5: Adt47,
fld6: Adt42,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: ((*mut bool, bool, i128, isize, u128, bool),),
fld1: u8,

},
Variant1{
fld0: u32,
fld1: ([isize; 7],),
fld2: [i64; 8],
fld3: Adt45,
fld4: i16,
fld5: usize,
fld6: *const isize,

},
Variant2{
fld0: *mut *mut f32,
fld1: usize,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: u8,
fld1: char,

},
Variant1{
fld0: [u128; 3],
fld1: [i8; 5],

},
Variant2{
fld0: bool,
fld1: [u8; 7],
fld2: (*mut bool, bool, i128, isize, u128, bool),
fld3: ([isize; 7],),
fld4: i16,
fld5: [i64; 1],
fld6: *const *const isize,
fld7: Adt47,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: i128,
fld1: (i8, *const isize, i128, i128, [i64; 1]),
fld2: isize,
fld3: [i64; 8],
fld4: Adt50,
fld5: ([isize; 7],),
fld6: [i32; 7],

},
Variant1{
fld0: Adt50,
fld1: ([isize; 7],),
fld2: [i8; 7],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: (*mut bool, bool, i128, isize, u128, bool),
fld1: *mut [u128; 3],
fld2: Adt41,
fld3: Adt42,
fld4: Adt50,

},
Variant1{
fld0: f32,
fld1: *mut bool,
fld2: u16,

},
Variant2{
fld0: [i32; 7],
fld1: Adt42,
fld2: usize,
fld3: Adt51,

},
Variant3{
fld0: [i64; 8],
fld1: Adt44,
fld2: i64,
fld3: [u8; 7],
fld4: *mut [u128; 3],

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: f32,

},
Variant1{
fld0: Adt49,
fld1: [i64; 1],
fld2: Adt44,
fld3: u16,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt52,
fld1: Adt40,
fld2: i128,
fld3: i64,

},
Variant1{
fld0: usize,
fld1: *const isize,
fld2: Adt48,

},
Variant2{
fld0: u64,
fld1: Adt46,
fld2: [u8; 7],
fld3: [i64; 8],
fld4: u16,
fld5: (i8, *const isize, i128, i128, [i64; 1]),
fld6: Adt48,
fld7: Adt44,

}}

