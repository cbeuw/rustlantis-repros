#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i16,mut _2: i32) -> isize {
mir! {
type RET = isize;
let _3: f64;
let _4: Adt47;
let _5: Adt55;
let _6: bool;
let _7: Adt49;
let _8: f32;
let _9: isize;
let _10: f32;
let _11: f32;
let _12: i32;
let _13: ([u32; 7],);
let _14: f64;
let _15: Adt63;
let _16: (char,);
let _17: *const *const u16;
let _18: [i8; 8];
let _19: f64;
let _20: (i8, u8);
let _21: Adt58;
let _22: [u128; 5];
let _23: i64;
let _24: (bool,);
let _25: char;
let _26: u128;
let _27: (f64,);
let _28: (f64,);
let _29: bool;
let _30: ();
let _31: ();
{
_1 = (-20038_i16);
_2 = (-1315503689_i32) - (-821286241_i32);
RET = -9223372036854775807_isize;
_2 = !1099113749_i32;
_1 = !(-29854_i16);
_1 = 6_usize as i16;
_3 = _2 as f64;
_2 = 346044692_i32;
_1 = -(-12468_i16);
_2 = 13741432334714552772_u64 as i32;
_4.fld4 = [2722142841_u32,3309628989_u32,1705029787_u32,574119296_u32,3608660420_u32,674868803_u32];
_5 = Adt55 { fld0: false };
_4.fld2 = [(-9223372036854775808_isize),103_isize,82_isize,9223372036854775807_isize,9223372036854775807_isize,(-38_isize),(-124_isize)];
_2 = 1746328151_i32;
_4.fld3 = 221858720452133921740801029728293771674_u128 << _2;
_4.fld1 = '\u{57897}';
_4.fld6 = _3 as f32;
_7.fld1.2.2 = !1559981899_u32;
_7.fld1.2.3 = 4276_u16 << _2;
_7.fld3 = 76_i8;
_4.fld2 = [(-120_isize),74_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-91_isize),9223372036854775807_isize];
_7.fld6 = core::ptr::addr_of!(_7.fld1.0);
_3 = _4.fld6 as f64;
_5.fld0 = !false;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
1746328151 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1 = _7.fld1.2.2 as i16;
_6 = !_5.fld0;
_1 = _7.fld3 as i16;
_4.fld3 = 14603429909955516373223896412848230294_u128;
_4.fld0 = [_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3];
_4.fld6 = _2 as f32;
_3 = (-9223372036854775808_isize) as f64;
_7.fld4 = 5_usize;
_4.fld3 = 22242593512168603000883767438211041213_i128 as u128;
_4.fld1 = '\u{ab8b5}';
_7.fld1.1 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_5.fld0 = _7.fld3 < _7.fld3;
_1 = (-5265_i16);
_4.fld6 = _4.fld3 as f32;
_1 = _7.fld4 as i16;
_3 = 5915662539228880563_u64 as f64;
Goto(bb6)
}
bb6 = {
_7.fld6 = core::ptr::addr_of!(_7.fld1.2.3);
_7.fld1.2.1.0 = _7.fld3 - _7.fld3;
_4.fld2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-105_isize),9223372036854775807_isize,9223372036854775807_isize];
_7.fld0 = [_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_7.fld3,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0];
_7.fld1.3 = _1;
_4.fld6 = _7.fld4 as f32;
_8 = -_4.fld6;
_4.fld0 = [_7.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0];
_4.fld6 = _8;
RET = 9223372036854775807_isize;
_6 = _5.fld0;
_7.fld1.2.1.1 = !16_u8;
_7.fld1.2.2 = 2939471314_u32;
_7.fld1.3 = -_1;
_4.fld1 = '\u{b78fd}';
_4.fld4 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_4.fld1 = '\u{69d9f}';
_12 = _2 << _2;
Call(_7.fld2 = fn1(_2, _7.fld1.2.1.0, _2, _6, _3, _4.fld2, _6, _7.fld1.2.1.0, _7.fld1.2.1.0, _7.fld6, _2, _4.fld1, _4.fld2), bb7, UnwindUnreachable())
}
bb7 = {
_13 = (_7.fld1.1,);
_4.fld5 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_7.fld2 = _4.fld2;
_7.fld1.2.1.0 = _7.fld3 << _12;
_7.fld1.2.1.0 = _4.fld6 as i8;
_15.fld1 = [_7.fld3,_7.fld1.2.1.0,_7.fld3,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld3];
_10 = 8011408071862300298_i64 as f32;
_10 = -_4.fld6;
_7.fld1.0 = _12 as u16;
_7.fld1.2.0 = core::ptr::addr_of!(_7.fld4);
_14 = -_3;
_13 = (_7.fld1.1,);
_7.fld5 = [_4.fld3];
_3 = _14 / 1_f64;
_7.fld2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-67_isize),(-81_isize),9223372036854775807_isize];
_4.fld2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),110_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-106_isize)];
match _7.fld1.2.2 {
0 => bb5,
2939471314 => bb8,
_ => bb2
}
}
bb8 = {
_4.fld3 = 131179305448557972426368783733977171005_u128 << _7.fld1.0;
_13.0 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_9 = -(-9223372036854775808_isize);
RET = 147409196895092874462675170620244287614_i128 as isize;
_12 = _2 ^ _2;
_16.0 = _4.fld1;
_13 = (_4.fld5,);
_17 = core::ptr::addr_of!(_7.fld6);
_8 = _10;
(*_17) = core::ptr::addr_of!(_7.fld1.0);
_3 = _14 - _14;
_14 = -_3;
(*_17) = core::ptr::addr_of!(_21.fld0.fld5.fld3.0);
_5.fld0 = _3 != _3;
_21.fld0.fld5.fld3.2.0 = core::ptr::addr_of!(_21.fld0.fld5.fld1.1);
_15.fld0 = _2 << _4.fld3;
_21.fld1.fld4 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_21.fld0.fld5.fld3.2.1 = (_7.fld3, _7.fld1.2.1.1);
match _7.fld3 {
76 => bb9,
_ => bb1
}
}
bb9 = {
_4.fld2 = [_9,_9,_9,_9,_9,_9,_9];
_21.fld1.fld6 = _10;
_2 = _12 + _15.fld0;
_14 = _3 + _3;
_7.fld1.2.0 = core::ptr::addr_of!(_7.fld4);
_5 = Adt55 { fld0: _6 };
_21.fld0.fld2 = _9 as u64;
_21.fld2 = _5;
_22 = [_4.fld3,_4.fld3,_4.fld3,_4.fld3,_4.fld3];
_21.fld1.fld6 = _10 * _8;
_21.fld0.fld5.fld1.1 = _7.fld4 | _7.fld4;
_21.fld1.fld2 = _7.fld2;
_4 = Adt47 { fld0: _15.fld1,fld1: _16.0,fld2: _21.fld1.fld2,fld3: 245184548180019180499022173325228337157_u128,fld4: _21.fld1.fld4,fld5: _7.fld1.1,fld6: _8 };
_4.fld1 = _16.0;
match _4.fld3 {
0 => bb2,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
245184548180019180499022173325228337157 => bb17,
_ => bb16
}
}
bb10 = {
_4.fld3 = 131179305448557972426368783733977171005_u128 << _7.fld1.0;
_13.0 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_9 = -(-9223372036854775808_isize);
RET = 147409196895092874462675170620244287614_i128 as isize;
_12 = _2 ^ _2;
_16.0 = _4.fld1;
_13 = (_4.fld5,);
_17 = core::ptr::addr_of!(_7.fld6);
_8 = _10;
(*_17) = core::ptr::addr_of!(_7.fld1.0);
_3 = _14 - _14;
_14 = -_3;
(*_17) = core::ptr::addr_of!(_21.fld0.fld5.fld3.0);
_5.fld0 = _3 != _3;
_21.fld0.fld5.fld3.2.0 = core::ptr::addr_of!(_21.fld0.fld5.fld1.1);
_15.fld0 = _2 << _4.fld3;
_21.fld1.fld4 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_21.fld0.fld5.fld3.2.1 = (_7.fld3, _7.fld1.2.1.1);
match _7.fld3 {
76 => bb9,
_ => bb1
}
}
bb11 = {
_13 = (_7.fld1.1,);
_4.fld5 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_7.fld2 = _4.fld2;
_7.fld1.2.1.0 = _7.fld3 << _12;
_7.fld1.2.1.0 = _4.fld6 as i8;
_15.fld1 = [_7.fld3,_7.fld1.2.1.0,_7.fld3,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld3];
_10 = 8011408071862300298_i64 as f32;
_10 = -_4.fld6;
_7.fld1.0 = _12 as u16;
_7.fld1.2.0 = core::ptr::addr_of!(_7.fld4);
_14 = -_3;
_13 = (_7.fld1.1,);
_7.fld5 = [_4.fld3];
_3 = _14 / 1_f64;
_7.fld2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-67_isize),(-81_isize),9223372036854775807_isize];
_4.fld2 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),110_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-106_isize)];
match _7.fld1.2.2 {
0 => bb5,
2939471314 => bb8,
_ => bb2
}
}
bb12 = {
_7.fld6 = core::ptr::addr_of!(_7.fld1.2.3);
_7.fld1.2.1.0 = _7.fld3 - _7.fld3;
_4.fld2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-105_isize),9223372036854775807_isize,9223372036854775807_isize];
_7.fld0 = [_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_7.fld3,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0];
_7.fld1.3 = _1;
_4.fld6 = _7.fld4 as f32;
_8 = -_4.fld6;
_4.fld0 = [_7.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_7.fld1.2.1.0];
_4.fld6 = _8;
RET = 9223372036854775807_isize;
_6 = _5.fld0;
_7.fld1.2.1.1 = !16_u8;
_7.fld1.2.2 = 2939471314_u32;
_7.fld1.3 = -_1;
_4.fld1 = '\u{b78fd}';
_4.fld4 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_4.fld1 = '\u{69d9f}';
_12 = _2 << _2;
Call(_7.fld2 = fn1(_2, _7.fld1.2.1.0, _2, _6, _3, _4.fld2, _6, _7.fld1.2.1.0, _7.fld1.2.1.0, _7.fld6, _2, _4.fld1, _4.fld2), bb7, UnwindUnreachable())
}
bb13 = {
_1 = _7.fld1.2.2 as i16;
_6 = !_5.fld0;
_1 = _7.fld3 as i16;
_4.fld3 = 14603429909955516373223896412848230294_u128;
_4.fld0 = [_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3,_7.fld3];
_4.fld6 = _2 as f32;
_3 = (-9223372036854775808_isize) as f64;
_7.fld4 = 5_usize;
_4.fld3 = 22242593512168603000883767438211041213_i128 as u128;
_4.fld1 = '\u{ab8b5}';
_7.fld1.1 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_5.fld0 = _7.fld3 < _7.fld3;
_1 = (-5265_i16);
_4.fld6 = _4.fld3 as f32;
_1 = _7.fld4 as i16;
_3 = 5915662539228880563_u64 as f64;
Goto(bb6)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_21.fld1.fld0 = [_7.fld3,_7.fld1.2.1.0,_21.fld0.fld5.fld3.2.1.0,_7.fld3,_7.fld3,_21.fld0.fld5.fld3.2.1.0,_7.fld1.2.1.0,_7.fld1.2.1.0];
_21.fld1 = Move(_4);
_21.fld0.fld5.fld0.0 = [_21.fld0.fld2,_21.fld0.fld2,_21.fld0.fld2,_21.fld0.fld2,_21.fld0.fld2,_21.fld0.fld2,_21.fld0.fld2,_21.fld0.fld2];
_21.fld0.fld5.fld3.2 = (_7.fld1.2.0, _7.fld1.2.1, _7.fld1.2.2, _7.fld1.0);
_24 = (_6,);
_20.0 = _7.fld3;
_21.fld0.fld3.0 = _21.fld0.fld5.fld3.2.1.0 as f64;
_21.fld0.fld5.fld3.0 = _7.fld1.0;
_11 = _21.fld1.fld6;
_21.fld0.fld5.fld3.0 = _7.fld1.0;
_25 = _21.fld1.fld1;
_21.fld1.fld2 = [_9,_9,_9,_9,_9,_9,_9];
_21.fld1.fld6 = -_10;
_21.fld0.fld5.fld3.2 = (_7.fld1.2.0, _7.fld1.2.1, _7.fld1.2.2, _21.fld0.fld5.fld3.0);
_20 = _21.fld0.fld5.fld3.2.1;
_20 = (_7.fld3, _7.fld1.2.1.1);
_21.fld2.fld0 = _24.0 >= _6;
_21.fld0.fld5.fld3 = _7.fld1;
_21.fld0.fld5.fld3 = _7.fld1;
_18 = [_21.fld0.fld5.fld3.2.1.0,_7.fld3,_21.fld0.fld5.fld3.2.1.0,_21.fld0.fld5.fld3.2.1.0,_21.fld0.fld5.fld3.2.1.0,_20.0,_20.0,_7.fld1.2.1.0];
Goto(bb18)
}
bb18 = {
Call(_30 = dump_var(0_usize, 18_usize, Move(_18), 13_usize, Move(_13), 12_usize, Move(_12), 9_usize, Move(_9)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_30 = dump_var(0_usize, 2_usize, Move(_2), 24_usize, Move(_24), 31_usize, _31, 31_usize, _31), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i32,mut _2: i8,mut _3: i32,mut _4: bool,mut _5: f64,mut _6: [isize; 7],mut _7: bool,mut _8: i8,mut _9: i8,mut _10: *const u16,mut _11: i32,mut _12: char,mut _13: [isize; 7]) -> [isize; 7] {
mir! {
type RET = [isize; 7];
let _14: bool;
let _15: f64;
let _16: Adt55;
let _17: u32;
let _18: Adt60;
let _19: [u128; 5];
let _20: bool;
let _21: [i32; 8];
let _22: i32;
let _23: Adt61;
let _24: f32;
let _25: (bool,);
let _26: (bool,);
let _27: [i32; 8];
let _28: char;
let _29: f64;
let _30: f64;
let _31: isize;
let _32: [isize; 7];
let _33: [u128; 5];
let _34: f64;
let _35: Adt59;
let _36: (u64, isize, [u64; 8]);
let _37: bool;
let _38: i32;
let _39: i8;
let _40: [isize; 7];
let _41: ([u64; 8],);
let _42: *mut *const *const u16;
let _43: [u128; 5];
let _44: *const u16;
let _45: Adt48;
let _46: i32;
let _47: bool;
let _48: Adt54;
let _49: char;
let _50: ();
let _51: ();
{
_13 = [9223372036854775807_isize,9223372036854775807_isize,(-119_isize),(-9223372036854775808_isize),9223372036854775807_isize,89_isize,(-9223372036854775808_isize)];
_4 = _7;
_3 = _1;
RET = _13;
RET = [(-25_isize),116_isize,(-9223372036854775808_isize),(-41_isize),9223372036854775807_isize,4_isize,9223372036854775807_isize];
(*_10) = 17827_u16 - 20137_u16;
_6 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,67_isize,(-103_isize),68_isize,9223372036854775807_isize];
Call((*_10) = fn2(_12, _9, _5, _1, _13, _11, _9, _13, _12, _12), bb1, UnwindUnreachable())
}
bb1 = {
_2 = !_8;
_11 = _3;
_14 = _7;
_11 = _1 ^ _1;
_3 = _11 >> (*_10);
_9 = _2;
_14 = !_7;
_4 = _9 != _2;
_3 = -_11;
Goto(bb2)
}
bb2 = {
_6 = _13;
_7 = _14;
_14 = _4;
_13 = [(-9223372036854775808_isize),91_isize,9223372036854775807_isize,(-74_isize),106_isize,(-9223372036854775808_isize),80_isize];
_18.fld1 = [(-69_isize),(-9223372036854775808_isize),80_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,106_isize];
_7 = !_14;
_10 = core::ptr::addr_of!((*_10));
_18.fld3.fld0.fld3 = 41134142781139769206187558745999173225_i128 as f32;
_18.fld3.fld3 = !_9;
_2 = -_8;
_19 = [207320970203757014753440194217055978726_u128,86792162180275976392062647487742864506_u128,267881851092960289530070137854557170015_u128,175455167216806748602358922109611624073_u128,105792328244997906149445450297156095301_u128];
_18.fld3.fld0.fld4 = _1 * _3;
_16 = Adt55 { fld0: _14 };
_18.fld3.fld0.fld2 = [1426840500_u32,178442586_u32,1000561102_u32,3449623874_u32,827173651_u32,204839827_u32];
_17 = _12 as u32;
_18.fld3.fld5 = (_12,);
_11 = _18.fld3.fld0.fld4;
match _1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
1746328151 => bb8,
_ => bb7
}
}
bb3 = {
_2 = !_8;
_11 = _3;
_14 = _7;
_11 = _1 ^ _1;
_3 = _11 >> (*_10);
_9 = _2;
_14 = !_7;
_4 = _9 != _2;
_3 = -_11;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_23.fld0.fld3.fld0.fld3 = _18.fld3.fld0.fld3 / 1_f32;
_23.fld0.fld1 = _13;
_21 = [_11,_3,_18.fld3.fld0.fld4,_11,_11,_11,_3,_11];
_3 = _18.fld3.fld0.fld4 << _18.fld3.fld3;
_18.fld3.fld4 = [25670615555096817998805769894915053860_u128,2727347176502241337569812330181081481_u128,307163616134363564282203620248638422823_u128,268566224665108945010458543219430543078_u128,49742875466793403179094628226974368668_u128];
_23.fld0.fld3.fld0.fld1 = [101420165985491580871973002180028805794_u128];
_16 = Adt55 { fld0: _14 };
_23.fld3 = _5 as u8;
_23.fld4.1.1 = !_23.fld3;
_18.fld3.fld0.fld2 = [_17,_17,_17,_17,_17,_17];
_18.fld3.fld0.fld4 = _3;
_23.fld0.fld0 = !(*_10);
_23.fld4.1.1 = !_23.fld3;
_23.fld4.1.0 = !_8;
_25.0 = _14;
_9 = _8;
_21 = [_18.fld3.fld0.fld4,_11,_3,_3,_11,_3,_1,_3];
_23.fld1.1 = (_18.fld3.fld3, _23.fld3);
match _1 {
1746328151 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_23.fld4.2 = _17;
_20 = _14;
(*_10) = _23.fld4.1.1 as u16;
_23.fld4.3 = 4436403140846167236_i64 as u16;
_4 = _14 | _14;
_23.fld1.3 = _5 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001384604769642125_f64;
_2 = 13617470622266076247_u64 as i8;
_26 = (_14,);
_23.fld0.fld3.fld5 = _18.fld3.fld5;
_15 = _18.fld3.fld0.fld3 as f64;
_12 = _23.fld0.fld3.fld5.0;
_18.fld3.fld3 = -_8;
RET = _13;
_34 = _15;
_3 = -_1;
_35.fld0.fld4 = _3;
_35.fld0.fld1 = [96810479539382719631186438568096196304_u128];
_18.fld3.fld4 = _19;
_22 = _23.fld0.fld3.fld0.fld3 as i32;
Goto(bb11)
}
bb11 = {
(*_10) = !_23.fld0.fld0;
_10 = core::ptr::addr_of!((*_10));
_23.fld1.2 = -_23.fld4.1.0;
_23.fld2 = (-98464923653223736020909992557550979213_i128) ^ (-148165794641110245479072189753321488485_i128);
_15 = _18.fld3.fld0.fld4 as f64;
_18.fld3.fld1 = _18.fld3.fld5.0;
_7 = _16.fld0;
_24 = 10595729145264278549_usize as f32;
_23.fld0.fld3.fld0.fld1 = [239724037728718925337133491026223346181_u128];
_29 = _15 * _23.fld1.3;
_23.fld4.3 = (*_10);
_30 = _29 + _15;
_11 = !_1;
_23.fld1.2 = _18.fld3.fld3;
_23.fld4.1 = (_9, _23.fld3);
_23.fld0.fld3.fld1 = _23.fld0.fld3.fld5.0;
_15 = _30 - _30;
_36.1 = (-9223372036854775808_isize);
_35.fld5.0 = _18.fld3.fld5.0;
_39 = !_23.fld1.2;
Goto(bb12)
}
bb12 = {
_35.fld0.fld3 = -_23.fld0.fld3.fld0.fld3;
_13 = [_36.1,_36.1,_36.1,_36.1,_36.1,_36.1,_36.1];
_40 = _23.fld0.fld1;
_35.fld0.fld3 = _24;
_3 = _18.fld3.fld0.fld4;
_36.2 = [3242315949890265276_u64,12577002301211193129_u64,15596985077240257690_u64,3961918592778247817_u64,14491572055338970691_u64,17879288057228183497_u64,3872084650677751866_u64,5177434404646279788_u64];
_35.fld0.fld3 = _18.fld3.fld0.fld3 + _23.fld0.fld3.fld0.fld3;
(*_10) = !_23.fld0.fld0;
_23.fld0.fld3.fld2 = [_8,_23.fld4.1.0,_2,_23.fld1.2,_8,_18.fld3.fld3,_23.fld4.1.0,_23.fld1.1.0];
match _1 {
0 => bb6,
1 => bb4,
2 => bb5,
1746328151 => bb14,
_ => bb13
}
}
bb13 = {
_23.fld0.fld3.fld0.fld3 = _18.fld3.fld0.fld3 / 1_f32;
_23.fld0.fld1 = _13;
_21 = [_11,_3,_18.fld3.fld0.fld4,_11,_11,_11,_3,_11];
_3 = _18.fld3.fld0.fld4 << _18.fld3.fld3;
_18.fld3.fld4 = [25670615555096817998805769894915053860_u128,2727347176502241337569812330181081481_u128,307163616134363564282203620248638422823_u128,268566224665108945010458543219430543078_u128,49742875466793403179094628226974368668_u128];
_23.fld0.fld3.fld0.fld1 = [101420165985491580871973002180028805794_u128];
_16 = Adt55 { fld0: _14 };
_23.fld3 = _5 as u8;
_23.fld4.1.1 = !_23.fld3;
_18.fld3.fld0.fld2 = [_17,_17,_17,_17,_17,_17];
_18.fld3.fld0.fld4 = _3;
_23.fld0.fld0 = !(*_10);
_23.fld4.1.1 = !_23.fld3;
_23.fld4.1.0 = !_8;
_25.0 = _14;
_9 = _8;
_21 = [_18.fld3.fld0.fld4,_11,_3,_3,_11,_3,_1,_3];
_23.fld1.1 = (_18.fld3.fld3, _23.fld3);
match _1 {
1746328151 => bb10,
_ => bb9
}
}
bb14 = {
_43 = [88301120918212308817856238710861245822_u128,289381868393964051752028242568295769638_u128,274272448670913561021782267798331905522_u128,35537988458253922652996567061740492795_u128,38772359322646918583966540232927932310_u128];
_18.fld0 = _23.fld0.fld0;
_45.fld0.0 = [2239352351359818669_u64,4740551169836469463_u64,16235761642677320971_u64,9680361256182502059_u64,17709156986115796000_u64,12444800659586887129_u64,2292235697013001841_u64,1388831975358216396_u64];
_23.fld4.0 = core::ptr::addr_of!(_45.fld1.1);
_7 = _26.0;
_45.fld2 = [_36.1,_36.1,_36.1,_36.1,_36.1,_36.1,_36.1];
_35.fld0.fld1 = _23.fld0.fld3.fld0.fld1;
_46 = _35.fld0.fld3 as i32;
_41.0 = [8370092607117658203_u64,17347711267070768886_u64,12138062148644536651_u64,7104939592776668769_u64,9455364610179936099_u64,1436462613000445904_u64,7675861833837582981_u64,8060822831451023440_u64];
_23.fld0.fld2 = [_35.fld0.fld4,_3,_18.fld3.fld0.fld4,_22,_3,_18.fld3.fld0.fld4,_18.fld3.fld0.fld4,_3];
_45.fld3.2.1.0 = -_23.fld1.2;
Goto(bb15)
}
bb15 = {
Call(_50 = dump_var(1_usize, 14_usize, Move(_14), 12_usize, Move(_12), 9_usize, Move(_9), 13_usize, Move(_13)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_50 = dump_var(1_usize, 4_usize, Move(_4), 41_usize, Move(_41), 6_usize, Move(_6), 7_usize, Move(_7)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_50 = dump_var(1_usize, 19_usize, Move(_19), 40_usize, Move(_40), 26_usize, Move(_26), 17_usize, Move(_17)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: char,mut _2: i8,mut _3: f64,mut _4: i32,mut _5: [isize; 7],mut _6: i32,mut _7: i8,mut _8: [isize; 7],mut _9: char,mut _10: char) -> u16 {
mir! {
type RET = u16;
let _11: [u32; 6];
let _12: f32;
let _13: i128;
let _14: f32;
let _15: (f64,);
let _16: *const *const u16;
let _17: bool;
let _18: i8;
let _19: [isize; 1];
let _20: u8;
let _21: usize;
let _22: f64;
let _23: (*const usize, (i8, u8), u32, u16);
let _24: Adt51;
let _25: Adt49;
let _26: char;
let _27: (u128, (i8, u8), i8, f64, *mut f64);
let _28: u32;
let _29: isize;
let _30: f32;
let _31: f64;
let _32: *const i64;
let _33: bool;
let _34: bool;
let _35: *const f32;
let _36: u128;
let _37: (f64,);
let _38: (i8, u8);
let _39: f64;
let _40: usize;
let _41: f32;
let _42: Adt47;
let _43: isize;
let _44: (i8, u8);
let _45: Adt53;
let _46: bool;
let _47: char;
let _48: (u64, isize, [u64; 8]);
let _49: ();
let _50: ();
{
_10 = _1;
Goto(bb1)
}
bb1 = {
_8 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,37_isize,90_isize];
RET = 29220_u16 & 57380_u16;
RET = !57546_u16;
_6 = _4 + _4;
_6 = _4 - _4;
RET = 38686_u16;
_7 = _2;
_10 = _9;
_4 = _6;
_6 = -_4;
_3 = 6802330374739963251_i64 as f64;
_2 = _7;
RET = !17232_u16;
_3 = 2076713005_u32 as f64;
_11 = [4073626353_u32,2455494139_u32,47661947_u32,4149608290_u32,3029156595_u32,2116487363_u32];
_1 = _10;
_6 = !_4;
_9 = _1;
_6 = _4 * _4;
Goto(bb2)
}
bb2 = {
_11 = [331657521_u32,2245937388_u32,3770879523_u32,2858856187_u32,1985433737_u32,2852459457_u32];
_6 = _4;
_7 = _2 << _4;
Goto(bb3)
}
bb3 = {
_1 = _9;
RET = 1589653231154556684_u64 as u16;
_10 = _9;
_9 = _10;
_12 = 312810293124427957309100602780869919692_u128 as f32;
_13 = (-1742477105782241156_i64) as i128;
RET = !14756_u16;
RET = _1 as u16;
_7 = _2;
_13 = (-94618820226687031085572370236939719093_i128) & 47234840931923259139151358144446254558_i128;
_11 = [476926767_u32,3081230919_u32,1959892626_u32,4176828895_u32,1023974137_u32,229676689_u32];
_12 = (-4232967676412884041_i64) as f32;
_6 = _4 >> _4;
_8 = [(-9223372036854775808_isize),37_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-95_isize),9223372036854775807_isize];
_6 = _4 + _4;
RET = 45688_u16 - 16942_u16;
_2 = 4021255095917929633_u64 as i8;
_2 = -_7;
_8 = [(-9223372036854775808_isize),119_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_1 = _9;
_7 = _2 | _2;
_14 = _12;
_2 = !_7;
_3 = 6868351225513186592_u64 as f64;
_17 = true;
_6 = _4;
Goto(bb4)
}
bb4 = {
_9 = _1;
_9 = _10;
Call(_18 = fn3(_12, _10, _17), bb5, UnwindUnreachable())
}
bb5 = {
_5 = _8;
_19 = [(-98_isize)];
_13 = !(-34337303664087883985686770333288305230_i128);
_11 = [1844589931_u32,2630662262_u32,1747883389_u32,3788829710_u32,395763770_u32,923260937_u32];
_18 = _7;
_11 = [974016357_u32,4201920530_u32,1895083913_u32,3017376508_u32,1897950259_u32,1420104745_u32];
_1 = _9;
_14 = _12;
RET = 32716_u16 | 43520_u16;
_7 = _18;
_15 = (_3,);
_1 = _9;
_20 = 32452_i16 as u8;
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,55_isize,9223372036854775807_isize,(-9223372036854775808_isize),32_isize,9223372036854775807_isize];
_11 = [1440114879_u32,3238232387_u32,174835422_u32,1157046238_u32,3285892453_u32,3511832185_u32];
Goto(bb6)
}
bb6 = {
_15.0 = 8210781346380682667_i64 as f64;
_3 = _15.0;
_11 = [1722399854_u32,4135649555_u32,2077427450_u32,3254654718_u32,3818817192_u32,2025783753_u32];
_7 = _17 as i8;
_10 = _1;
RET = 2631_u16 + 24584_u16;
_18 = _2 + _2;
_17 = !false;
_3 = _6 as f64;
_18 = -_2;
_15 = (_3,);
_15 = (_3,);
_2 = !_18;
_21 = _18 as usize;
_19 = [9223372036854775807_isize];
_15.0 = _3;
_20 = !116_u8;
_23.0 = core::ptr::addr_of!(_21);
_3 = _21 as f64;
_21 = 4009732271704591150_usize;
RET = !45245_u16;
_24.fld4.fld1.2.2 = 1980150272_u32;
_1 = _10;
_24.fld1.0 = _17;
_25.fld1.3 = _21 as i16;
_23.3 = !4974_u16;
RET = !_23.3;
Call(_24.fld4.fld1.2.1.1 = core::intrinsics::transmute(_2), bb7, UnwindUnreachable())
}
bb7 = {
_20 = _23.3 as u8;
_25.fld2 = _8;
_24.fld4.fld2 = _8;
_27.4 = core::ptr::addr_of_mut!(_22);
_23.1.1 = _24.fld4.fld1.2.1.1;
_6 = _4;
_24.fld4.fld1.0 = !_23.3;
_25.fld1.2.1 = (_2, _20);
_28 = !_24.fld4.fld1.2.2;
Goto(bb8)
}
bb8 = {
_23.1 = (_25.fld1.2.1.0, _24.fld4.fld1.2.1.1);
_24.fld4.fld1.1 = [_28,_28,_28,_24.fld4.fld1.2.2,_28,_24.fld4.fld1.2.2,_24.fld4.fld1.2.2];
_24.fld4.fld0 = [_25.fld1.2.1.0,_2,_23.1.0,_2,_18,_7,_25.fld1.2.1.0,_23.1.0];
_24.fld4.fld4 = _21 & _21;
_9 = _10;
_25.fld1.2.1 = (_7, _23.1.1);
_24.fld4.fld1.2.3 = _24.fld4.fld1.0;
_25.fld6 = core::ptr::addr_of!(_23.3);
_25.fld1.2.1 = (_2, _23.1.1);
_8 = _5;
_10 = _1;
_25.fld0 = [_25.fld1.2.1.0,_18,_18,_23.1.0,_2,_2,_25.fld1.2.1.0,_25.fld1.2.1.0];
_27.0 = !116255754762819250936034830527138763600_u128;
_25.fld1.2.2 = _28 - _24.fld4.fld1.2.2;
_29 = (-5_isize) + (-9223372036854775808_isize);
_25.fld4 = !_24.fld4.fld4;
_25.fld1.2.2 = _28;
_24.fld4.fld1.2.0 = _23.0;
match _24.fld4.fld1.2.2 {
0 => bb1,
1 => bb6,
1980150272 => bb9,
_ => bb7
}
}
bb9 = {
_1 = _10;
_25.fld1.0 = _23.3 & _24.fld4.fld1.0;
_25.fld6 = core::ptr::addr_of!(_23.3);
_24.fld5 = core::ptr::addr_of!(_24.fld4.fld4);
_22 = _15.0 - _3;
_25.fld5 = [_27.0];
_27.1 = (_2, _24.fld4.fld1.2.1.1);
_27.1.1 = _9 as u8;
_16 = core::ptr::addr_of!(_24.fld4.fld6);
_24.fld4.fld3 = _27.1.0 ^ _27.1.0;
_25.fld1.2.0 = core::ptr::addr_of!(_21);
_4 = _6;
Goto(bb10)
}
bb10 = {
_24.fld4.fld3 = _23.1.0;
_24.fld4.fld1.2.1.0 = _7;
_24.fld0 = core::ptr::addr_of_mut!(_16);
_23.2 = _21 as u32;
_27.2 = _25.fld1.2.1.0;
_24.fld3 = [_27.2,_2,_27.1.0,_2];
_24.fld4.fld3 = _23.1.0 ^ _23.1.0;
_24.fld4.fld1.2.1 = (_2, _25.fld1.2.1.1);
_24.fld4.fld1.1 = [_25.fld1.2.2,_23.2,_23.2,_24.fld4.fld1.2.2,_24.fld4.fld1.2.2,_24.fld4.fld1.2.2,_28];
_33 = _2 >= _24.fld4.fld3;
_30 = _12;
_25.fld6 = core::ptr::addr_of!(_23.3);
_24.fld4.fld1.3 = _25.fld1.3;
_12 = -_14;
_16 = core::ptr::addr_of!((*_16));
_24.fld4.fld1.2.1 = _23.1;
_25.fld1.1 = _24.fld4.fld1.1;
_25.fld1 = (_23.3, _24.fld4.fld1.1, _24.fld4.fld1.2, _24.fld4.fld1.3);
_34 = _33;
_24.fld4.fld0 = [_24.fld4.fld3,_27.1.0,_27.2,_24.fld4.fld3,_25.fld1.2.1.0,_27.2,_24.fld4.fld1.2.1.0,_23.1.0];
match _24.fld4.fld1.2.2 {
1980150272 => bb11,
_ => bb4
}
}
bb11 = {
_37 = (_22,);
_13 = (-135342812161451766523667155170325193598_i128) * (-89390363043107875538289661051751370857_i128);
_23.0 = _24.fld4.fld1.2.0;
_19 = [_29];
_17 = _24.fld4.fld1.2.2 != _28;
_24.fld2 = !_25.fld1.2.2;
_24.fld6 = core::ptr::addr_of_mut!(_32);
_11 = [_23.2,_24.fld2,_28,_24.fld2,_28,_24.fld2];
_24.fld4.fld1.0 = !_24.fld4.fld1.2.3;
_24.fld4.fld1.2.3 = !_25.fld1.2.3;
_24.fld4.fld3 = _7 & _2;
_25.fld4 = _14 as usize;
_23.3 = !_25.fld1.2.3;
_19 = [_29];
_37 = (_3,);
_9 = _10;
_35 = core::ptr::addr_of!(_41);
_42.fld6 = _24.fld4.fld1.2.2 as f32;
match _24.fld4.fld1.2.2 {
0 => bb12,
1 => bb13,
2 => bb14,
1980150272 => bb16,
_ => bb15
}
}
bb12 = {
_24.fld4.fld3 = _23.1.0;
_24.fld4.fld1.2.1.0 = _7;
_24.fld0 = core::ptr::addr_of_mut!(_16);
_23.2 = _21 as u32;
_27.2 = _25.fld1.2.1.0;
_24.fld3 = [_27.2,_2,_27.1.0,_2];
_24.fld4.fld3 = _23.1.0 ^ _23.1.0;
_24.fld4.fld1.2.1 = (_2, _25.fld1.2.1.1);
_24.fld4.fld1.1 = [_25.fld1.2.2,_23.2,_23.2,_24.fld4.fld1.2.2,_24.fld4.fld1.2.2,_24.fld4.fld1.2.2,_28];
_33 = _2 >= _24.fld4.fld3;
_30 = _12;
_25.fld6 = core::ptr::addr_of!(_23.3);
_24.fld4.fld1.3 = _25.fld1.3;
_12 = -_14;
_16 = core::ptr::addr_of!((*_16));
_24.fld4.fld1.2.1 = _23.1;
_25.fld1.1 = _24.fld4.fld1.1;
_25.fld1 = (_23.3, _24.fld4.fld1.1, _24.fld4.fld1.2, _24.fld4.fld1.3);
_34 = _33;
_24.fld4.fld0 = [_24.fld4.fld3,_27.1.0,_27.2,_24.fld4.fld3,_25.fld1.2.1.0,_27.2,_24.fld4.fld1.2.1.0,_23.1.0];
match _24.fld4.fld1.2.2 {
1980150272 => bb11,
_ => bb4
}
}
bb13 = {
_1 = _9;
RET = 1589653231154556684_u64 as u16;
_10 = _9;
_9 = _10;
_12 = 312810293124427957309100602780869919692_u128 as f32;
_13 = (-1742477105782241156_i64) as i128;
RET = !14756_u16;
RET = _1 as u16;
_7 = _2;
_13 = (-94618820226687031085572370236939719093_i128) & 47234840931923259139151358144446254558_i128;
_11 = [476926767_u32,3081230919_u32,1959892626_u32,4176828895_u32,1023974137_u32,229676689_u32];
_12 = (-4232967676412884041_i64) as f32;
_6 = _4 >> _4;
_8 = [(-9223372036854775808_isize),37_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-95_isize),9223372036854775807_isize];
_6 = _4 + _4;
RET = 45688_u16 - 16942_u16;
_2 = 4021255095917929633_u64 as i8;
_2 = -_7;
_8 = [(-9223372036854775808_isize),119_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_1 = _9;
_7 = _2 | _2;
_14 = _12;
_2 = !_7;
_3 = 6868351225513186592_u64 as f64;
_17 = true;
_6 = _4;
Goto(bb4)
}
bb14 = {
_5 = _8;
_19 = [(-98_isize)];
_13 = !(-34337303664087883985686770333288305230_i128);
_11 = [1844589931_u32,2630662262_u32,1747883389_u32,3788829710_u32,395763770_u32,923260937_u32];
_18 = _7;
_11 = [974016357_u32,4201920530_u32,1895083913_u32,3017376508_u32,1897950259_u32,1420104745_u32];
_1 = _9;
_14 = _12;
RET = 32716_u16 | 43520_u16;
_7 = _18;
_15 = (_3,);
_1 = _9;
_20 = 32452_i16 as u8;
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,55_isize,9223372036854775807_isize,(-9223372036854775808_isize),32_isize,9223372036854775807_isize];
_11 = [1440114879_u32,3238232387_u32,174835422_u32,1157046238_u32,3285892453_u32,3511832185_u32];
Goto(bb6)
}
bb15 = {
_11 = [331657521_u32,2245937388_u32,3770879523_u32,2858856187_u32,1985433737_u32,2852459457_u32];
_6 = _4;
_7 = _2 << _4;
Goto(bb3)
}
bb16 = {
_17 = _25.fld1.0 == _24.fld4.fld1.0;
_45 = Adt53 { fld0: (-764921544416356215_i64),fld1: _27.0,fld2: _25.fld5 };
_39 = -_3;
(*_35) = _30;
_4 = !_6;
_42.fld0 = _25.fld0;
_25.fld1 = (_23.3, _24.fld4.fld1.1, _23, _24.fld4.fld1.3);
_42.fld5 = [_25.fld1.2.2,_23.2,_28,_24.fld4.fld1.2.2,_25.fld1.2.2,_24.fld4.fld1.2.2,_24.fld4.fld1.2.2];
_2 = _4 as i8;
_24.fld4.fld4 = _21 << _6;
_25.fld1.1 = _42.fld5;
_25.fld4 = !_24.fld4.fld4;
_42.fld3 = _45.fld1 + _45.fld1;
_25.fld1.2.0 = core::ptr::addr_of!(_40);
Goto(bb17)
}
bb17 = {
Call(_49 = dump_var(2_usize, 17_usize, Move(_17), 6_usize, Move(_6), 8_usize, Move(_8), 19_usize, Move(_19)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(2_usize, 33_usize, Move(_33), 9_usize, Move(_9), 2_usize, Move(_2), 4_usize, Move(_4)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_49 = dump_var(2_usize, 21_usize, Move(_21), 29_usize, Move(_29), 50_usize, _50, 50_usize, _50), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: f32,mut _2: char,mut _3: bool) -> i8 {
mir! {
type RET = i8;
let _4: *const u16;
let _5: bool;
let _6: Adt51;
let _7: Adt59;
let _8: bool;
let _9: u64;
let _10: ([u32; 7],);
let _11: f32;
let _12: *mut *const *const u16;
let _13: isize;
let _14: *mut *const *const u16;
let _15: (bool,);
let _16: [isize; 1];
let _17: bool;
let _18: [u128; 6];
let _19: Adt51;
let _20: i128;
let _21: ();
let _22: ();
{
RET = (-10_i8);
RET = (-14_i8);
_3 = !false;
RET = 5141308568054882419_u64 as i8;
RET = -33_i8;
Call(RET = core::intrinsics::transmute(_3), bb1, UnwindUnreachable())
}
bb1 = {
RET = 1827108732_u32 as i8;
_1 = 158758954499758987544820278832566361124_i128 as f32;
RET = 177992845444822850992956205168931956857_u128 as i8;
_5 = _1 != _1;
RET = (-95_i8);
_6.fld4.fld1.2.2 = 4081040316_u32 >> 1506010667_u32;
_6.fld1.0 = _5;
_6.fld4.fld2 = [122_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6.fld4.fld1.2.1.0 = _2 as i8;
RET = _6.fld4.fld1.2.1.0 * _6.fld4.fld1.2.1.0;
_2 = '\u{1471d}';
_1 = (-68115037955389193629676138392146825510_i128) as f32;
_6.fld4.fld1.1 = [_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_6.fld4.fld0 = [_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0];
_6.fld4.fld1.1 = [_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_2 = '\u{f4b21}';
_7.fld1 = _2;
_6.fld4.fld1.2.0 = core::ptr::addr_of!(_6.fld4.fld4);
_3 = _6.fld1.0;
_7.fld0.fld2 = [_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_6.fld4.fld6 = core::ptr::addr_of!(_6.fld4.fld1.2.3);
_7.fld0.fld3 = _1 / 0.0000000000000000000000000000000000000017759818516113796_f32;
_6.fld3 = [_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0];
_6.fld1.0 = _3 ^ _5;
_4 = core::ptr::addr_of!(_6.fld4.fld1.2.3);
Goto(bb2)
}
bb2 = {
_7.fld5.0 = _2;
_6.fld4.fld1.2.1.0 = !(-124_i8);
_6.fld4.fld2 = [(-9223372036854775808_isize),(-104_isize),9223372036854775807_isize,9223372036854775807_isize,8_isize,9223372036854775807_isize,9223372036854775807_isize];
_6.fld4.fld1.3 = (-6611_i16);
_7.fld4 = [181587766889597549514623131220363958139_u128,286217162508137988451528908149638418917_u128,188882893412874632673586024744821983876_u128,179537234939691942173905637864983509013_u128,33729729771819056395620679660682101220_u128];
_3 = _5;
(*_4) = 60935_u16 / 2421_u16;
_7.fld2 = _6.fld4.fld0;
_6.fld4.fld3 = _6.fld4.fld1.2.1.0 << _6.fld4.fld1.2.2;
_6.fld2 = !_6.fld4.fld1.2.2;
(*_4) = 31282_u16;
_7.fld0.fld1 = [62283464148702920408943160111090066979_u128];
_6.fld4.fld3 = !_6.fld4.fld1.2.1.0;
RET = _6.fld4.fld1.2.1.0;
Call(_3 = fn4(_6.fld2, _6.fld4.fld1.2.3, _7.fld5.0, _1, _6.fld4.fld1.2.0, _1, _6.fld4.fld1.2.0, _7.fld4, _4, _6.fld4.fld0, _6.fld4.fld3, _2, _4), bb3, UnwindUnreachable())
}
bb3 = {
_6.fld1 = (_5,);
_6.fld4.fld2 = [75_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-71_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_6.fld4.fld0 = [_6.fld4.fld3,_6.fld4.fld1.2.1.0,_6.fld4.fld3,_6.fld4.fld3,_6.fld4.fld3,_6.fld4.fld1.2.1.0,_6.fld4.fld3,_6.fld4.fld1.2.1.0];
_8 = _6.fld4.fld1.3 >= _6.fld4.fld1.3;
_6.fld1 = (_8,);
_7.fld0.fld2 = [_6.fld2,_6.fld2,_6.fld4.fld1.2.2,_6.fld2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_4 = _6.fld4.fld6;
_6.fld4.fld0 = [_6.fld4.fld3,_6.fld4.fld3,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld3,_6.fld4.fld3,_6.fld4.fld1.2.1.0,_6.fld4.fld3];
(*_4) = 34165_u16 & 2501_u16;
_7.fld0.fld4 = _3 as i32;
_6.fld4.fld2 = [(-9223372036854775808_isize),118_isize,30_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_7.fld5 = (_7.fld1,);
_6.fld4.fld5 = _7.fld0.fld1;
RET = 107_u8 as i8;
_6.fld4.fld1.2.1 = (_6.fld4.fld3, 63_u8);
_6.fld4.fld5 = _7.fld0.fld1;
_6.fld5 = _6.fld4.fld1.2.0;
_6.fld4.fld1.2.1.1 = _6.fld4.fld4 as u8;
(*_4) = 6190_u16;
match (*_4) {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6190 => bb11,
_ => bb10
}
}
bb4 = {
_7.fld5.0 = _2;
_6.fld4.fld1.2.1.0 = !(-124_i8);
_6.fld4.fld2 = [(-9223372036854775808_isize),(-104_isize),9223372036854775807_isize,9223372036854775807_isize,8_isize,9223372036854775807_isize,9223372036854775807_isize];
_6.fld4.fld1.3 = (-6611_i16);
_7.fld4 = [181587766889597549514623131220363958139_u128,286217162508137988451528908149638418917_u128,188882893412874632673586024744821983876_u128,179537234939691942173905637864983509013_u128,33729729771819056395620679660682101220_u128];
_3 = _5;
(*_4) = 60935_u16 / 2421_u16;
_7.fld2 = _6.fld4.fld0;
_6.fld4.fld3 = _6.fld4.fld1.2.1.0 << _6.fld4.fld1.2.2;
_6.fld2 = !_6.fld4.fld1.2.2;
(*_4) = 31282_u16;
_7.fld0.fld1 = [62283464148702920408943160111090066979_u128];
_6.fld4.fld3 = !_6.fld4.fld1.2.1.0;
RET = _6.fld4.fld1.2.1.0;
Call(_3 = fn4(_6.fld2, _6.fld4.fld1.2.3, _7.fld5.0, _1, _6.fld4.fld1.2.0, _1, _6.fld4.fld1.2.0, _7.fld4, _4, _6.fld4.fld0, _6.fld4.fld3, _2, _4), bb3, UnwindUnreachable())
}
bb5 = {
RET = 1827108732_u32 as i8;
_1 = 158758954499758987544820278832566361124_i128 as f32;
RET = 177992845444822850992956205168931956857_u128 as i8;
_5 = _1 != _1;
RET = (-95_i8);
_6.fld4.fld1.2.2 = 4081040316_u32 >> 1506010667_u32;
_6.fld1.0 = _5;
_6.fld4.fld2 = [122_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6.fld4.fld1.2.1.0 = _2 as i8;
RET = _6.fld4.fld1.2.1.0 * _6.fld4.fld1.2.1.0;
_2 = '\u{1471d}';
_1 = (-68115037955389193629676138392146825510_i128) as f32;
_6.fld4.fld1.1 = [_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_6.fld4.fld0 = [_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0];
_6.fld4.fld1.1 = [_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_2 = '\u{f4b21}';
_7.fld1 = _2;
_6.fld4.fld1.2.0 = core::ptr::addr_of!(_6.fld4.fld4);
_3 = _6.fld1.0;
_7.fld0.fld2 = [_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_6.fld4.fld6 = core::ptr::addr_of!(_6.fld4.fld1.2.3);
_7.fld0.fld3 = _1 / 0.0000000000000000000000000000000000000017759818516113796_f32;
_6.fld3 = [_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0,_6.fld4.fld1.2.1.0];
_6.fld1.0 = _3 ^ _5;
_4 = core::ptr::addr_of!(_6.fld4.fld1.2.3);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_7.fld0.fld2 = [_6.fld2,_6.fld4.fld1.2.2,_6.fld2,_6.fld2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_6.fld4.fld6 = core::ptr::addr_of!(_6.fld4.fld1.2.3);
_6.fld1 = (_3,);
_3 = _8 ^ _8;
_5 = _3;
_10.0 = _6.fld4.fld1.1;
_2 = _7.fld5.0;
_6.fld4.fld1.2.3 = !27303_u16;
_6.fld4.fld1.2.1.1 = 107_u8;
_6.fld4.fld1.2.1.0 = !_6.fld4.fld3;
_6.fld4.fld5 = _7.fld0.fld1;
_6.fld4.fld1.2.0 = core::ptr::addr_of!(_6.fld4.fld4);
_6.fld4.fld0 = _7.fld2;
(*_4) = !32335_u16;
RET = _6.fld4.fld1.2.1.0 - _6.fld4.fld3;
Goto(bb12)
}
bb12 = {
_6.fld4.fld3 = _6.fld4.fld1.2.1.0;
_6.fld4.fld1.2.1.0 = _6.fld4.fld3 + _6.fld4.fld3;
_6.fld4.fld1.1 = _10.0;
_6.fld4.fld1.0 = _2 as u16;
_13 = (-117759590815644884725490906470140815806_i128) as isize;
_6.fld4.fld1.2.1.1 = 160_u8;
_6.fld5 = _6.fld4.fld1.2.0;
_6.fld4.fld2 = [_13,_13,_13,_13,_13,_13,_13];
_4 = core::ptr::addr_of!((*_4));
_7.fld4 = [118873894549123041776988711074199397966_u128,274618682588163496618455118906312724723_u128,315363552213890396816077599245927900231_u128,124775645980325074613301820486093988696_u128,36954845697001464982442595269412315033_u128];
RET = -_6.fld4.fld1.2.1.0;
_15.0 = _6.fld4.fld3 < _6.fld4.fld3;
_7.fld0.fld1 = [255333799100587160277255134475475519304_u128];
_9 = _2 as u64;
_6.fld4.fld1.2.2 = _6.fld2 ^ _6.fld2;
_6.fld4.fld2 = [_13,_13,_13,_13,_13,_13,_13];
_7.fld0.fld1 = _6.fld4.fld5;
_6.fld4.fld4 = _6.fld4.fld1.2.1.1 as usize;
_2 = _7.fld1;
_7.fld3 = _6.fld4.fld3;
_6.fld4.fld1.2.0 = core::ptr::addr_of!(_6.fld4.fld4);
_6.fld4.fld1.2.1 = (_7.fld3, 186_u8);
_5 = !_6.fld1.0;
_11 = _7.fld0.fld3;
(*_4) = _6.fld4.fld4 as u16;
_7.fld0.fld2 = [_6.fld4.fld1.2.2,_6.fld2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
match _6.fld4.fld1.2.1.1 {
0 => bb13,
186 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_7.fld0.fld2 = [_6.fld2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_7.fld5.0 = _2;
_6.fld4.fld1.2.1.0 = _6.fld4.fld3;
_17 = !_3;
_15 = _6.fld1;
_6.fld4.fld1.2.1.1 = 8_u8 * 26_u8;
_5 = _17;
RET = _7.fld3;
_7.fld5.0 = _2;
_7.fld0.fld4 = !1981855279_i32;
_10.0 = [_6.fld4.fld1.2.2,_6.fld2,_6.fld2,_6.fld2,_6.fld2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2];
_18 = [57672183601496659657574717991544429550_u128,28330729415636689443775761756205192025_u128,227393677424065286341051812992983775751_u128,277936625396947772474142656824415601802_u128,241848853695734062835433943455261879146_u128,328507724321471979130632058064673613018_u128];
_6.fld4.fld1.1 = _10.0;
_5 = _15.0;
_6.fld4.fld1.2.0 = core::ptr::addr_of!(_19.fld4.fld4);
_19.fld4.fld1.2 = _6.fld4.fld1.2;
_2 = _7.fld1;
_19.fld4.fld3 = _19.fld4.fld1.2.3 as i8;
_19.fld4.fld5 = _6.fld4.fld5;
_8 = !_3;
_6.fld4.fld2 = [_13,_13,_13,_13,_13,_13,_13];
_19.fld1.0 = _6.fld2 > _19.fld4.fld1.2.2;
_7.fld0.fld2 = [_6.fld2,_19.fld4.fld1.2.2,_6.fld4.fld1.2.2,_6.fld4.fld1.2.2,_19.fld4.fld1.2.2,_19.fld4.fld1.2.2];
_19.fld4.fld1 = (_6.fld4.fld1.0, _6.fld4.fld1.1, _6.fld4.fld1.2, _6.fld4.fld1.3);
_6.fld4.fld2 = [_13,_13,_13,_13,_13,_13,_13];
_6.fld4.fld1.2.3 = _13 as u16;
_19.fld4.fld1.2.1.1 = _6.fld4.fld1.2.1.1;
Goto(bb16)
}
bb16 = {
Call(_21 = dump_var(3_usize, 5_usize, Move(_5), 8_usize, Move(_8), 15_usize, Move(_15), 2_usize, Move(_2)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_21 = dump_var(3_usize, 18_usize, Move(_18), 22_usize, _22, 22_usize, _22, 22_usize, _22), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: u32,mut _2: u16,mut _3: char,mut _4: f32,mut _5: *const usize,mut _6: f32,mut _7: *const usize,mut _8: [u128; 5],mut _9: *const u16,mut _10: [i8; 8],mut _11: i8,mut _12: char,mut _13: *const u16) -> bool {
mir! {
type RET = bool;
let _14: ([u64; 8],);
let _15: Adt49;
let _16: [isize; 7];
let _17: (bool,);
let _18: isize;
let _19: ([u32; 7],);
let _20: Adt50;
let _21: f64;
let _22: Adt52;
let _23: (*const usize, (i8, u8), u32, u16);
let _24: usize;
let _25: f32;
let _26: f32;
let _27: usize;
let _28: isize;
let _29: (f64,);
let _30: Adt49;
let _31: bool;
let _32: bool;
let _33: [u64; 8];
let _34: u128;
let _35: Adt48;
let _36: char;
let _37: isize;
let _38: [u64; 8];
let _39: char;
let _40: char;
let _41: i8;
let _42: f32;
let _43: Adt47;
let _44: [i8; 4];
let _45: (i8, u8);
let _46: isize;
let _47: [u32; 6];
let _48: (bool,);
let _49: Adt47;
let _50: (f64,);
let _51: isize;
let _52: ();
let _53: ();
{
_5 = core::ptr::addr_of!((*_7));
_6 = _4;
_10 = [_11,_11,_11,_11,_11,_11,_11,_11];
_15.fld1.2.1.0 = -_11;
_15.fld1.2.2 = !_1;
(*_5) = !8198381502479288180_usize;
_15.fld1.2.3 = (*_9) >> (*_13);
_15.fld1.2.1.0 = _11;
Call(_1 = core::intrinsics::transmute(_3), bb1, UnwindUnreachable())
}
bb1 = {
_13 = core::ptr::addr_of!((*_9));
_15.fld5 = [156074838750056261185005853619653103331_u128];
_17 = (false,);
_9 = core::ptr::addr_of!(_15.fld1.2.3);
_10 = [_15.fld1.2.1.0,_11,_15.fld1.2.1.0,_11,_11,_11,_15.fld1.2.1.0,_11];
_16 = [89_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-23_isize),9223372036854775807_isize,120_isize,(-9223372036854775808_isize)];
_15.fld5 = [6566040513657522038835757848146110972_u128];
_14.0 = [4797704734722671250_u64,9488557506658969441_u64,9806634155060554871_u64,11508100027881643465_u64,15690933126632867910_u64,8959265762247141753_u64,4117905118057070734_u64,7711053920809308963_u64];
_7 = core::ptr::addr_of!((*_5));
_6 = _4 * _4;
_3 = _12;
_15.fld1.2.2 = _1;
_11 = -_15.fld1.2.1.0;
_22.fld5.fld2 = _16;
_22.fld3.0 = _1 as f64;
_23.2 = 17705711629282648212_u64 as u32;
_22.fld5.fld3.2.1.0 = _11;
_22.fld5.fld3.2.1.1 = 70_u8 ^ 146_u8;
match _2 {
0 => bb2,
31282 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_23.1 = (_15.fld1.2.1.0, _22.fld5.fld3.2.1.1);
_22.fld5.fld3.1 = [_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_1,_1,_23.2,_15.fld1.2.2];
(*_9) = (*_13);
_26 = -_6;
_15.fld1.0 = !(*_13);
_22.fld5.fld3.3 = _22.fld5.fld3.2.1.1 as i16;
_27 = !(*_7);
_15.fld2 = _16;
_22.fld5.fld3.1 = [_1,_23.2,_1,_23.2,_23.2,_1,_1];
_22.fld2 = 13054580528666014902_u64;
_23.1.1 = !_22.fld5.fld3.2.1.1;
_20.fld1 = (-164034742975807333655296725573074855068_i128);
_22.fld5.fld2 = [(-9223372036854775808_isize),36_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,106_isize,9223372036854775807_isize];
_26 = _20.fld1 as f32;
_15.fld1.1 = _22.fld5.fld3.1;
_29 = _22.fld3;
_22.fld5.fld3.2.2 = _23.2;
_30.fld1.2.1.1 = 199128509869436642934831875057745160181_u128 as u8;
_23.3 = !(*_9);
_30.fld1.2.1.0 = (-3128948888106989085_i64) as i8;
_15.fld1.1 = _22.fld5.fld3.1;
_30.fld2 = [9223372036854775807_isize,(-92_isize),118_isize,(-76_isize),9223372036854775807_isize,14_isize,(-115_isize)];
Call(_23.0 = fn5(_17.0, _15.fld1.2.1.0, _29, _22.fld5.fld3.2.1, _5, _23.1, _22.fld5.fld3.3, (*_13), _13, _30.fld1.2.1.0, _15.fld1.1, _22.fld5.fld3.2.2, _6, _30.fld2, _7), bb5, UnwindUnreachable())
}
bb5 = {
_29 = (_22.fld3.0,);
_15.fld2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),88_isize,9223372036854775807_isize,9223372036854775807_isize];
_22.fld5.fld1.1 = !(*_7);
_29 = (_22.fld3.0,);
_15.fld1.2.1.0 = _30.fld1.2.1.0;
_18 = !9223372036854775807_isize;
_21 = _29.0;
_15.fld1.2 = (_5, _22.fld5.fld3.2.1, _22.fld5.fld3.2.2, (*_13));
_19 = (_15.fld1.1,);
_15.fld1.3 = _22.fld5.fld3.3 ^ _22.fld5.fld3.3;
_23.0 = _5;
_22.fld5.fld3.0 = _15.fld1.2.3;
_29.0 = 9215557185578900107_i64 as f64;
_15.fld3 = _11 ^ _11;
Goto(bb6)
}
bb6 = {
_30.fld1 = ((*_13), _19.0, _23, _22.fld5.fld3.3);
_22.fld5.fld3.2.3 = !_15.fld1.2.3;
_23.3 = (-5321232404805156329_i64) as u16;
_39 = _3;
_22.fld5.fld1.0 = _18;
_15.fld4 = !(*_5);
_31 = !_17.0;
_35.fld0 = (_14.0,);
_35.fld3.2.3 = (*_9);
_30.fld1.0 = 185827078410731810631064388056462795681_u128 as u16;
_30.fld1.2.2 = !_23.2;
_30.fld1.2.1 = _15.fld1.2.1;
_35.fld3.2.1 = (_11, _30.fld1.2.1.1);
_30.fld1.2.1.1 = !_22.fld5.fld3.2.1.1;
match _22.fld2 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
13054580528666014902 => bb12,
_ => bb11
}
}
bb7 = {
_29 = (_22.fld3.0,);
_15.fld2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),88_isize,9223372036854775807_isize,9223372036854775807_isize];
_22.fld5.fld1.1 = !(*_7);
_29 = (_22.fld3.0,);
_15.fld1.2.1.0 = _30.fld1.2.1.0;
_18 = !9223372036854775807_isize;
_21 = _29.0;
_15.fld1.2 = (_5, _22.fld5.fld3.2.1, _22.fld5.fld3.2.2, (*_13));
_19 = (_15.fld1.1,);
_15.fld1.3 = _22.fld5.fld3.3 ^ _22.fld5.fld3.3;
_23.0 = _5;
_22.fld5.fld3.0 = _15.fld1.2.3;
_29.0 = 9215557185578900107_i64 as f64;
_15.fld3 = _11 ^ _11;
Goto(bb6)
}
bb8 = {
_23.1 = (_15.fld1.2.1.0, _22.fld5.fld3.2.1.1);
_22.fld5.fld3.1 = [_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_1,_1,_23.2,_15.fld1.2.2];
(*_9) = (*_13);
_26 = -_6;
_15.fld1.0 = !(*_13);
_22.fld5.fld3.3 = _22.fld5.fld3.2.1.1 as i16;
_27 = !(*_7);
_15.fld2 = _16;
_22.fld5.fld3.1 = [_1,_23.2,_1,_23.2,_23.2,_1,_1];
_22.fld2 = 13054580528666014902_u64;
_23.1.1 = !_22.fld5.fld3.2.1.1;
_20.fld1 = (-164034742975807333655296725573074855068_i128);
_22.fld5.fld2 = [(-9223372036854775808_isize),36_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,106_isize,9223372036854775807_isize];
_26 = _20.fld1 as f32;
_15.fld1.1 = _22.fld5.fld3.1;
_29 = _22.fld3;
_22.fld5.fld3.2.2 = _23.2;
_30.fld1.2.1.1 = 199128509869436642934831875057745160181_u128 as u8;
_23.3 = !(*_9);
_30.fld1.2.1.0 = (-3128948888106989085_i64) as i8;
_15.fld1.1 = _22.fld5.fld3.1;
_30.fld2 = [9223372036854775807_isize,(-92_isize),118_isize,(-76_isize),9223372036854775807_isize,14_isize,(-115_isize)];
Call(_23.0 = fn5(_17.0, _15.fld1.2.1.0, _29, _22.fld5.fld3.2.1, _5, _23.1, _22.fld5.fld3.3, (*_13), _13, _30.fld1.2.1.0, _15.fld1.1, _22.fld5.fld3.2.2, _6, _30.fld2, _7), bb5, UnwindUnreachable())
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_13 = core::ptr::addr_of!((*_9));
_15.fld5 = [156074838750056261185005853619653103331_u128];
_17 = (false,);
_9 = core::ptr::addr_of!(_15.fld1.2.3);
_10 = [_15.fld1.2.1.0,_11,_15.fld1.2.1.0,_11,_11,_11,_15.fld1.2.1.0,_11];
_16 = [89_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-23_isize),9223372036854775807_isize,120_isize,(-9223372036854775808_isize)];
_15.fld5 = [6566040513657522038835757848146110972_u128];
_14.0 = [4797704734722671250_u64,9488557506658969441_u64,9806634155060554871_u64,11508100027881643465_u64,15690933126632867910_u64,8959265762247141753_u64,4117905118057070734_u64,7711053920809308963_u64];
_7 = core::ptr::addr_of!((*_5));
_6 = _4 * _4;
_3 = _12;
_15.fld1.2.2 = _1;
_11 = -_15.fld1.2.1.0;
_22.fld5.fld2 = _16;
_22.fld3.0 = _1 as f64;
_23.2 = 17705711629282648212_u64 as u32;
_22.fld5.fld3.2.1.0 = _11;
_22.fld5.fld3.2.1.1 = 70_u8 ^ 146_u8;
match _2 {
0 => bb2,
31282 => bb4,
_ => bb3
}
}
bb12 = {
_35.fld3.3 = _18 as i16;
_22.fld5.fld3.3 = -_15.fld1.3;
_33 = [_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2];
_40 = _39;
_22.fld5.fld3.2.1 = (_15.fld3, _15.fld1.2.1.1);
_19.0 = [_1,_23.2,_22.fld5.fld3.2.2,_22.fld5.fld3.2.2,_22.fld5.fld3.2.2,_1,_30.fld1.2.2];
_42 = _22.fld3.0 as f32;
_30.fld1.2.1.0 = -_22.fld5.fld3.2.1.0;
(*_7) = !_27;
_41 = _15.fld3 & _22.fld5.fld3.2.1.0;
_35.fld3.1 = _19.0;
_22.fld5.fld0.0 = [_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2];
(*_9) = !(*_13);
RET = _17.0;
Call(_22.fld5.fld3.2.2 = core::intrinsics::bswap(_30.fld1.2.2), bb13, UnwindUnreachable())
}
bb13 = {
_43.fld0 = _10;
_39 = _3;
_35.fld3.2 = (_7, _22.fld5.fld3.2.1, _22.fld5.fld3.2.2, _15.fld1.2.3);
_30.fld5 = [201985173031974531888564707847623094365_u128];
_42 = _20.fld1 as f32;
_5 = _23.0;
_22.fld1 = (_17.0,);
_22.fld5.fld1.1 = (*_5) << _30.fld1.3;
_22.fld5.fld3 = ((*_9), _35.fld3.1, _15.fld1.2, _15.fld1.3);
_15.fld0 = [_15.fld3,_41,_23.1.0,_15.fld1.2.1.0,_15.fld3,_41,_41,_15.fld3];
_22.fld5.fld3.2.1.1 = _35.fld3.2.1.1;
_43.fld3 = !105952059937060205734581070525601037752_u128;
RET = _31 <= _17.0;
(*_13) = !_22.fld5.fld3.0;
_47 = [_30.fld1.2.2,_22.fld5.fld3.2.2,_15.fld1.2.2,_35.fld3.2.2,_22.fld5.fld3.2.2,_30.fld1.2.2];
_27 = (-806303045470126612_i64) as usize;
_38 = _14.0;
_15.fld5 = _30.fld5;
_35.fld0.0 = [_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2];
_22.fld3.0 = _29.0 + _21;
_22.fld1 = _17;
_23.2 = _1;
_2 = (*_13) * _30.fld1.0;
match _22.fld2 {
0 => bb9,
1 => bb11,
2 => bb5,
3 => bb6,
4 => bb14,
5 => bb15,
13054580528666014902 => bb17,
_ => bb16
}
}
bb14 = {
_29 = (_22.fld3.0,);
_15.fld2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),88_isize,9223372036854775807_isize,9223372036854775807_isize];
_22.fld5.fld1.1 = !(*_7);
_29 = (_22.fld3.0,);
_15.fld1.2.1.0 = _30.fld1.2.1.0;
_18 = !9223372036854775807_isize;
_21 = _29.0;
_15.fld1.2 = (_5, _22.fld5.fld3.2.1, _22.fld5.fld3.2.2, (*_13));
_19 = (_15.fld1.1,);
_15.fld1.3 = _22.fld5.fld3.3 ^ _22.fld5.fld3.3;
_23.0 = _5;
_22.fld5.fld3.0 = _15.fld1.2.3;
_29.0 = 9215557185578900107_i64 as f64;
_15.fld3 = _11 ^ _11;
Goto(bb6)
}
bb15 = {
_13 = core::ptr::addr_of!((*_9));
_15.fld5 = [156074838750056261185005853619653103331_u128];
_17 = (false,);
_9 = core::ptr::addr_of!(_15.fld1.2.3);
_10 = [_15.fld1.2.1.0,_11,_15.fld1.2.1.0,_11,_11,_11,_15.fld1.2.1.0,_11];
_16 = [89_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-23_isize),9223372036854775807_isize,120_isize,(-9223372036854775808_isize)];
_15.fld5 = [6566040513657522038835757848146110972_u128];
_14.0 = [4797704734722671250_u64,9488557506658969441_u64,9806634155060554871_u64,11508100027881643465_u64,15690933126632867910_u64,8959265762247141753_u64,4117905118057070734_u64,7711053920809308963_u64];
_7 = core::ptr::addr_of!((*_5));
_6 = _4 * _4;
_3 = _12;
_15.fld1.2.2 = _1;
_11 = -_15.fld1.2.1.0;
_22.fld5.fld2 = _16;
_22.fld3.0 = _1 as f64;
_23.2 = 17705711629282648212_u64 as u32;
_22.fld5.fld3.2.1.0 = _11;
_22.fld5.fld3.2.1.1 = 70_u8 ^ 146_u8;
match _2 {
0 => bb2,
31282 => bb4,
_ => bb3
}
}
bb16 = {
_23.1 = (_15.fld1.2.1.0, _22.fld5.fld3.2.1.1);
_22.fld5.fld3.1 = [_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_1,_1,_23.2,_15.fld1.2.2];
(*_9) = (*_13);
_26 = -_6;
_15.fld1.0 = !(*_13);
_22.fld5.fld3.3 = _22.fld5.fld3.2.1.1 as i16;
_27 = !(*_7);
_15.fld2 = _16;
_22.fld5.fld3.1 = [_1,_23.2,_1,_23.2,_23.2,_1,_1];
_22.fld2 = 13054580528666014902_u64;
_23.1.1 = !_22.fld5.fld3.2.1.1;
_20.fld1 = (-164034742975807333655296725573074855068_i128);
_22.fld5.fld2 = [(-9223372036854775808_isize),36_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,106_isize,9223372036854775807_isize];
_26 = _20.fld1 as f32;
_15.fld1.1 = _22.fld5.fld3.1;
_29 = _22.fld3;
_22.fld5.fld3.2.2 = _23.2;
_30.fld1.2.1.1 = 199128509869436642934831875057745160181_u128 as u8;
_23.3 = !(*_9);
_30.fld1.2.1.0 = (-3128948888106989085_i64) as i8;
_15.fld1.1 = _22.fld5.fld3.1;
_30.fld2 = [9223372036854775807_isize,(-92_isize),118_isize,(-76_isize),9223372036854775807_isize,14_isize,(-115_isize)];
Call(_23.0 = fn5(_17.0, _15.fld1.2.1.0, _29, _22.fld5.fld3.2.1, _5, _23.1, _22.fld5.fld3.3, (*_13), _13, _30.fld1.2.1.0, _15.fld1.1, _22.fld5.fld3.2.2, _6, _30.fld2, _7), bb5, UnwindUnreachable())
}
bb17 = {
_10 = [_30.fld1.2.1.0,_30.fld1.2.1.0,_23.1.0,_15.fld3,_23.1.0,_23.1.0,_41,_23.1.0];
_35.fld2 = [_18,_22.fld5.fld1.0,_22.fld5.fld1.0,_22.fld5.fld1.0,_22.fld5.fld1.0,_22.fld5.fld1.0,_18];
_33 = [_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2,_22.fld2];
_28 = (*_7) as isize;
_43.fld6 = _26 - _4;
_34 = _43.fld3 << _22.fld2;
Goto(bb18)
}
bb18 = {
Call(_52 = dump_var(4_usize, 17_usize, Move(_17), 3_usize, Move(_3), 14_usize, Move(_14), 8_usize, Move(_8)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_52 = dump_var(4_usize, 18_usize, Move(_18), 2_usize, Move(_2), 28_usize, Move(_28), 27_usize, Move(_27)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_52 = dump_var(4_usize, 11_usize, Move(_11), 12_usize, Move(_12), 16_usize, Move(_16), 53_usize, _53), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: bool,mut _2: i8,mut _3: (f64,),mut _4: (i8, u8),mut _5: *const usize,mut _6: (i8, u8),mut _7: i16,mut _8: u16,mut _9: *const u16,mut _10: i8,mut _11: [u32; 7],mut _12: u32,mut _13: f32,mut _14: [isize; 7],mut _15: *const usize) -> *const usize {
mir! {
type RET = *const usize;
let _16: [u128; 5];
let _17: ([u32; 7],);
let _18: Adt47;
let _19: [i8; 8];
let _20: u32;
let _21: ([u32; 7],);
let _22: f32;
let _23: i32;
let _24: Adt58;
let _25: *mut *const *const u16;
let _26: bool;
let _27: u128;
let _28: [u64; 8];
let _29: [u32; 7];
let _30: [u64; 8];
let _31: *mut *const *const u16;
let _32: Adt62;
let _33: [u32; 7];
let _34: [isize; 7];
let _35: isize;
let _36: i64;
let _37: *mut *const i64;
let _38: f32;
let _39: ();
let _40: ();
{
(*_15) = _1 as usize;
_8 = (*_9) % 20169_u16;
RET = _5;
match (*_9) {
0 => bb1,
1 => bb2,
2 => bb3,
31282 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
(*_5) = !2_usize;
_18.fld5 = [_12,_12,_12,_12,_12,_12,_12];
(*_9) = (-9223372036854775808_isize) as u16;
_18.fld6 = _3.0 as f32;
_4.0 = _4.1 as i8;
_18.fld2 = [(-64_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,96_isize,9223372036854775807_isize,9223372036854775807_isize];
(*_9) = _8 ^ _8;
_17 = (_11,);
(*_15) = 6_usize;
_6.1 = _4.1 + _4.1;
_11 = [_12,_12,_12,_12,_12,_12,_12];
_18.fld2 = _14;
_6.0 = -_2;
_17.0 = [_12,_12,_12,_12,_12,_12,_12];
(*_15) = 2_usize;
_21.0 = [_12,_12,_12,_12,_12,_12,_12];
_17 = (_18.fld5,);
_14 = [9223372036854775807_isize,9223372036854775807_isize,26_isize,124_isize,(-112_isize),(-9223372036854775808_isize),110_isize];
_10 = !_2;
_17 = (_18.fld5,);
_19 = [_10,_6.0,_2,_2,_2,_4.0,_10,_4.0];
_18.fld0 = [_2,_2,_10,_6.0,_6.0,_2,_10,_10];
_2 = _4.0;
Goto(bb6)
}
bb6 = {
_18.fld5 = [_12,_12,_12,_12,_12,_12,_12];
_1 = false;
(*RET) = _13 as usize;
_5 = core::ptr::addr_of!((*_5));
(*_9) = 15_isize as u16;
(*_5) = '\u{ca8ba}' as usize;
(*_9) = !_8;
_12 = !2659240171_u32;
_18.fld4 = [_12,_12,_12,_12,_12,_12];
_21.0 = _17.0;
(*_9) = _8 * _8;
_24.fld0.fld1.0 = _1 ^ _1;
_6 = _4;
_16 = [196076022673865394663697721445362919996_u128,111879283055424678019335894024545392574_u128,175398668337850950003541422380111716328_u128,204385336982865884365855113478460491526_u128,134665982421216494071390850973919737539_u128];
_24.fld0.fld5.fld3.0 = !(*_9);
_24.fld0.fld5.fld3.2.1.0 = _7 as i8;
_24.fld3 = _9;
_24.fld0.fld5.fld1.3 = '\u{39881}';
_24.fld0.fld0 = _14;
_24.fld0.fld3.0 = _4.1 as f64;
Call(_24.fld1.fld2 = fn6(_24.fld0.fld1.0, _14), bb7, UnwindUnreachable())
}
bb7 = {
_24.fld0.fld5.fld0.0 = [2958846222439376354_u64,6117467979525151666_u64,3934976545915212489_u64,701971599199165588_u64,16246679193447219514_u64,10991093648500134098_u64,15127188669582176586_u64,14288419923612685333_u64];
_24.fld0.fld5.fld1.0 = 9223372036854775807_isize + 9223372036854775807_isize;
_22 = _13;
_24.fld0.fld5.fld3.2.1.0 = _7 as i8;
_18.fld2 = _14;
_24.fld1.fld1 = _24.fld0.fld5.fld1.3;
_18.fld1 = _24.fld0.fld5.fld1.3;
_18.fld5 = [_12,_12,_12,_12,_12,_12,_12];
_24.fld1.fld3 = !115376560314494902458342773847879456863_u128;
_11 = _21.0;
_24.fld1.fld4 = [_12,_12,_12,_12,_12,_12];
_24.fld0.fld5.fld3.2 = (_5, _6, _12, (*_9));
_19 = [_4.0,_10,_24.fld0.fld5.fld3.2.1.0,_4.0,_6.0,_24.fld0.fld5.fld3.2.1.0,_2,_2];
_7 = _22 as i16;
_26 = !_24.fld0.fld1.0;
_24.fld0.fld5.fld1.0 = (-50_isize) << _24.fld0.fld5.fld3.0;
(*RET) = 3765673596497647881_usize >> (*_9);
_18.fld5 = [_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2,_12,_12,_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2];
_20 = !_12;
_24.fld0.fld5.fld3.2.0 = core::ptr::addr_of!((*_5));
Goto(bb8)
}
bb8 = {
_24.fld1.fld1 = _24.fld0.fld5.fld1.3;
_17 = (_18.fld5,);
_14 = [_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0];
_28 = [2031450495283376137_u64,18131560239351845778_u64,14314589867922552552_u64,12024013196427679429_u64,13272030186313187473_u64,14988874497314706074_u64,16984129086903562470_u64,4000651835953753450_u64];
_24.fld1.fld2 = [_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0,_24.fld0.fld5.fld1.0];
(*_15) = _1 as usize;
_32.fld0.fld0.fld4 = !1005939290_i32;
_27 = !_24.fld1.fld3;
_24.fld0.fld5.fld1.3 = _24.fld1.fld1;
_27 = !_24.fld1.fld3;
Goto(bb9)
}
bb9 = {
_27 = _24.fld0.fld5.fld3.2.1.0 as u128;
_13 = _24.fld0.fld5.fld3.2.3 as f32;
_18.fld3 = _24.fld0.fld5.fld3.2.2 as u128;
_26 = _24.fld0.fld1.0 == _24.fld0.fld1.0;
_24.fld0.fld2 = 5551540845517712848_u64;
match _24.fld0.fld2 {
0 => bb4,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5551540845517712848 => bb15,
_ => bb14
}
}
bb10 = {
Return()
}
bb11 = {
_24.fld0.fld5.fld0.0 = [2958846222439376354_u64,6117467979525151666_u64,3934976545915212489_u64,701971599199165588_u64,16246679193447219514_u64,10991093648500134098_u64,15127188669582176586_u64,14288419923612685333_u64];
_24.fld0.fld5.fld1.0 = 9223372036854775807_isize + 9223372036854775807_isize;
_22 = _13;
_24.fld0.fld5.fld3.2.1.0 = _7 as i8;
_18.fld2 = _14;
_24.fld1.fld1 = _24.fld0.fld5.fld1.3;
_18.fld1 = _24.fld0.fld5.fld1.3;
_18.fld5 = [_12,_12,_12,_12,_12,_12,_12];
_24.fld1.fld3 = !115376560314494902458342773847879456863_u128;
_11 = _21.0;
_24.fld1.fld4 = [_12,_12,_12,_12,_12,_12];
_24.fld0.fld5.fld3.2 = (_5, _6, _12, (*_9));
_19 = [_4.0,_10,_24.fld0.fld5.fld3.2.1.0,_4.0,_6.0,_24.fld0.fld5.fld3.2.1.0,_2,_2];
_7 = _22 as i16;
_26 = !_24.fld0.fld1.0;
_24.fld0.fld5.fld1.0 = (-50_isize) << _24.fld0.fld5.fld3.0;
(*RET) = 3765673596497647881_usize >> (*_9);
_18.fld5 = [_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2,_12,_12,_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2];
_20 = !_12;
_24.fld0.fld5.fld3.2.0 = core::ptr::addr_of!((*_5));
Goto(bb8)
}
bb12 = {
_18.fld5 = [_12,_12,_12,_12,_12,_12,_12];
_1 = false;
(*RET) = _13 as usize;
_5 = core::ptr::addr_of!((*_5));
(*_9) = 15_isize as u16;
(*_5) = '\u{ca8ba}' as usize;
(*_9) = !_8;
_12 = !2659240171_u32;
_18.fld4 = [_12,_12,_12,_12,_12,_12];
_21.0 = _17.0;
(*_9) = _8 * _8;
_24.fld0.fld1.0 = _1 ^ _1;
_6 = _4;
_16 = [196076022673865394663697721445362919996_u128,111879283055424678019335894024545392574_u128,175398668337850950003541422380111716328_u128,204385336982865884365855113478460491526_u128,134665982421216494071390850973919737539_u128];
_24.fld0.fld5.fld3.0 = !(*_9);
_24.fld0.fld5.fld3.2.1.0 = _7 as i8;
_24.fld3 = _9;
_24.fld0.fld5.fld1.3 = '\u{39881}';
_24.fld0.fld0 = _14;
_24.fld0.fld3.0 = _4.1 as f64;
Call(_24.fld1.fld2 = fn6(_24.fld0.fld1.0, _14), bb7, UnwindUnreachable())
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_24.fld0.fld5.fld3.2.1.0 = _6.0 & _6.0;
_29 = [_12,_24.fld0.fld5.fld3.2.2,_24.fld0.fld5.fld3.2.2,_20,_20,_12,_12];
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(5_usize, 26_usize, Move(_26), 7_usize, Move(_7), 19_usize, Move(_19), 16_usize, Move(_16)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(5_usize, 2_usize, Move(_2), 21_usize, Move(_21), 10_usize, Move(_10), 28_usize, Move(_28)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(5_usize, 8_usize, Move(_8), 40_usize, _40, 40_usize, _40, 40_usize, _40), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: bool,mut _2: [isize; 7]) -> [isize; 7] {
mir! {
type RET = [isize; 7];
let _3: isize;
let _4: Adt53;
let _5: (u16, [u32; 7], (*const usize, (i8, u8), u32, u16), i16);
let _6: *const i64;
let _7: [i8; 4];
let _8: f64;
let _9: *const i64;
let _10: ([u32; 7],);
let _11: [u32; 7];
let _12: f64;
let _13: (u64, isize, [u64; 8]);
let _14: (i8, u8);
let _15: u16;
let _16: ();
let _17: ();
{
RET = _2;
RET = _2;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize,46_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),37_isize];
_1 = !true;
RET = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-6_isize),73_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-26_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET = [9223372036854775807_isize,9223372036854775807_isize,(-61_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),66_isize];
Goto(bb1)
}
bb1 = {
_2 = [(-103_isize),(-9223372036854775808_isize),18_isize,76_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET = _2;
RET = _2;
RET = [(-9223372036854775808_isize),107_isize,9223372036854775807_isize,127_isize,(-9223372036854775808_isize),9223372036854775807_isize,27_isize];
_1 = true;
RET = _2;
_2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),68_isize,9223372036854775807_isize,9223372036854775807_isize,76_isize,(-9223372036854775808_isize)];
RET = _2;
RET = [9223372036854775807_isize,(-16_isize),(-50_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),52_isize];
RET = [9223372036854775807_isize,(-64_isize),75_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),108_isize,9223372036854775807_isize];
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-43_isize),39_isize,(-9223372036854775808_isize)];
_4.fld0 = (-284273810172179806_i64);
match _4.fld0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463090333621596031650 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = !70_isize;
_4.fld2 = [336096149048592327810324020407238343559_u128];
_4.fld0 = 5003409921602976452_i64 + 8242910420838745658_i64;
_5.2.1.0 = 123_i8 - (-15_i8);
Goto(bb10)
}
bb10 = {
_2 = [_3,_3,_3,_3,_3,_3,_3];
_4.fld0 = !(-8710385012580314648_i64);
_4.fld0 = (-3398843748872576511_i64);
_1 = true;
_5.2.2 = 439377342_u32;
_4.fld0 = 3063642496139658425_i64 & 8991904865360823476_i64;
_5.2.1 = (102_i8, 28_u8);
_3 = _5.2.1.0 as isize;
_3 = (-26379_i16) as isize;
_5.1 = [_5.2.2,_5.2.2,_5.2.2,_5.2.2,_5.2.2,_5.2.2,_5.2.2];
Call(_4.fld2 = fn7(_5.1, _5.2.1.1, _5.1, _3, _5.2.2, _5.2.1.1, _5.2.1.0, _5.2.1.1, _5.2.2, _5.2.1.0, _2, _5.2.2), bb11, UnwindUnreachable())
}
bb11 = {
_5.0 = 5_usize as u16;
_5.0 = !21322_u16;
_5.2.3 = !_5.0;
_5.2.1 = ((-128_i8), 92_u8);
_5.3 = !25675_i16;
_5.2.3 = !_5.0;
_8 = 1362025026_i32 as f64;
RET = _2;
_7 = [_5.2.1.0,_5.2.1.0,_5.2.1.0,_5.2.1.0];
_5.2.3 = _5.0;
_8 = _5.2.1.1 as f64;
_7 = [_5.2.1.0,_5.2.1.0,_5.2.1.0,_5.2.1.0];
_5.2.2 = 38367942112110115114536147807386961165_i128 as u32;
_4.fld0 = (-8343252240066722293_i64);
_4.fld2 = [171239358319361887164012669089308545528_u128];
_6 = core::ptr::addr_of!(_4.fld0);
_5.2.1.1 = 178_u8;
RET = _2;
_2 = [_3,_3,_3,_3,_3,_3,_3];
_5.2.1 = ((-76_i8), 147_u8);
_4.fld1 = 17642038070796646978928577562835494474_u128 + 2846005727398783575112528148972579395_u128;
_5.2.1.0 = -(-104_i8);
Goto(bb12)
}
bb12 = {
_5.2.2 = 3884339998_u32;
_9 = core::ptr::addr_of!((*_6));
_4.fld2 = [_4.fld1];
_2 = [_3,_3,_3,_3,_3,_3,_3];
_5.2.1.1 = !95_u8;
_5.0 = _8 as u16;
_9 = core::ptr::addr_of!(_4.fld0);
_11 = [_5.2.2,_5.2.2,_5.2.2,_5.2.2,_5.2.2,_5.2.2,_5.2.2];
_6 = core::ptr::addr_of!((*_6));
_10 = (_5.1,);
_5.2.1 = (99_i8, 238_u8);
_13.1 = !_3;
_8 = (-1211580599_i32) as f64;
_13.1 = _8 as isize;
_5.0 = !_5.2.3;
match _5.2.1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb10,
5 => bb6,
6 => bb7,
99 => bb14,
_ => bb13
}
}
bb13 = {
_5.0 = 5_usize as u16;
_5.0 = !21322_u16;
_5.2.3 = !_5.0;
_5.2.1 = ((-128_i8), 92_u8);
_5.3 = !25675_i16;
_5.2.3 = !_5.0;
_8 = 1362025026_i32 as f64;
RET = _2;
_7 = [_5.2.1.0,_5.2.1.0,_5.2.1.0,_5.2.1.0];
_5.2.3 = _5.0;
_8 = _5.2.1.1 as f64;
_7 = [_5.2.1.0,_5.2.1.0,_5.2.1.0,_5.2.1.0];
_5.2.2 = 38367942112110115114536147807386961165_i128 as u32;
_4.fld0 = (-8343252240066722293_i64);
_4.fld2 = [171239358319361887164012669089308545528_u128];
_6 = core::ptr::addr_of!(_4.fld0);
_5.2.1.1 = 178_u8;
RET = _2;
_2 = [_3,_3,_3,_3,_3,_3,_3];
_5.2.1 = ((-76_i8), 147_u8);
_4.fld1 = 17642038070796646978928577562835494474_u128 + 2846005727398783575112528148972579395_u128;
_5.2.1.0 = -(-104_i8);
Goto(bb12)
}
bb14 = {
_10.0 = _5.1;
_13.2 = [15690662731695305330_u64,2711125946841874530_u64,15789836133721036192_u64,15040606524238882915_u64,13630917205734366912_u64,5599673030292770443_u64,6930921629334095888_u64,15602698018486313172_u64];
Goto(bb15)
}
bb15 = {
Call(_16 = dump_var(6_usize, 1_usize, Move(_1), 11_usize, Move(_11), 10_usize, Move(_10), 17_usize, _17), bb16, UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [u32; 7],mut _2: u8,mut _3: [u32; 7],mut _4: isize,mut _5: u32,mut _6: u8,mut _7: i8,mut _8: u8,mut _9: u32,mut _10: i8,mut _11: [isize; 7],mut _12: u32) -> [u128; 1] {
mir! {
type RET = [u128; 1];
let _13: f32;
let _14: u128;
let _15: f64;
let _16: isize;
let _17: f64;
let _18: u64;
let _19: u64;
let _20: f64;
let _21: Adt55;
let _22: u16;
let _23: i16;
let _24: [i32; 8];
let _25: ([u64; 8],);
let _26: Adt61;
let _27: Adt50;
let _28: f64;
let _29: bool;
let _30: u128;
let _31: Adt56;
let _32: Adt62;
let _33: (isize, usize, *const i64, char);
let _34: isize;
let _35: bool;
let _36: isize;
let _37: f64;
let _38: i64;
let _39: i8;
let _40: Adt48;
let _41: i16;
let _42: i64;
let _43: u64;
let _44: isize;
let _45: i8;
let _46: f64;
let _47: isize;
let _48: usize;
let _49: Adt47;
let _50: f32;
let _51: Adt48;
let _52: f64;
let _53: i64;
let _54: ();
let _55: ();
{
RET = [56478661312390531069234995931194328026_u128];
_9 = _5 & _5;
_12 = _5;
RET = [246745669910493226793856174755157831487_u128];
_6 = _2 % 143_u8;
_14 = !89746871032921653127983444684954140338_u128;
_9 = _5;
_3 = [_9,_12,_12,_9,_5,_5,_9];
RET = [_14];
_12 = _9 ^ _9;
RET = [_14];
_16 = _4 ^ _4;
_6 = _7 as u8;
Goto(bb1)
}
bb1 = {
_14 = !135385174590730945918509737046100548224_u128;
_6 = _8;
_6 = _2;
_8 = _2 + _2;
_15 = _9 as f64;
_17 = _15 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001609838061302577_f64);
match _7 {
0 => bb2,
102 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_15 = _17 - _17;
_2 = _8;
_12 = !_9;
RET = [_14];
_12 = _9 - _5;
_15 = _10 as f64;
_1 = [_12,_9,_12,_9,_9,_9,_5];
_5 = _12 + _12;
_8 = !_6;
_12 = _9 | _5;
_17 = 19181_u16 as f64;
RET = [_14];
_12 = !_5;
_20 = _15;
_21 = Adt55 { fld0: false };
_13 = _4 as f32;
RET = [_14];
_21.fld0 = !false;
_18 = 15909732363282215364_u64 + 15453369552118793890_u64;
_19 = !_18;
_22 = !26100_u16;
_22 = (-1555079919_i32) as u16;
_4 = -_16;
Goto(bb5)
}
bb5 = {
_16 = _4;
_14 = !3429701023227345362298017988220687185_u128;
_9 = '\u{6e3d3}' as u32;
_4 = _19 as isize;
_12 = _5 % 3028537919_u32;
_20 = _15;
RET = [_14];
_12 = 127098193501205776123353322649528930935_i128 as u32;
_22 = !37824_u16;
RET = [_14];
_26.fld1.1.0 = _7;
_23 = _22 as i16;
match _7 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
102 => bb8,
_ => bb7
}
}
bb6 = {
_14 = !135385174590730945918509737046100548224_u128;
_6 = _8;
_6 = _2;
_8 = _2 + _2;
_15 = _9 as f64;
_17 = _15 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001609838061302577_f64);
match _7 {
0 => bb2,
102 => bb4,
_ => bb3
}
}
bb7 = {
Return()
}
bb8 = {
_14 = 304275666536659140588291183033322995517_u128;
_6 = _2 % 12_u8;
_26.fld0.fld1 = _11;
_2 = _4 as u8;
_26.fld0.fld3.fld5 = ('\u{10da43}',);
_26.fld3 = _8;
_26.fld1.3 = _17;
_17 = -_20;
_6 = _22 as u8;
_26.fld4.2 = _9 % 1999286653_u32;
_24 = [(-1542298490_i32),(-1298549810_i32),(-342494579_i32),(-678483971_i32),328684574_i32,(-849337264_i32),(-1254229376_i32),107108506_i32];
RET = [_14];
_22 = 47787_u16;
_16 = _8 as isize;
_26.fld0.fld3.fld5 = ('\u{10910d}',);
_26.fld2 = _20 as i128;
_26.fld4.1.0 = _7;
_4 = _16;
_26.fld0.fld3.fld1 = _26.fld0.fld3.fld5.0;
_20 = _16 as f64;
_16 = _4 ^ _4;
_8 = _2 << _5;
_25.0 = [_19,_18,_18,_19,_19,_18,_19,_19];
_27.fld0 = [2039504596_i32,(-1624637447_i32),(-370419240_i32),1137675725_i32,(-1548506607_i32),(-655933225_i32),(-1492929945_i32),1616801943_i32];
_26.fld0.fld3.fld0.fld2 = [_12,_5,_26.fld4.2,_9,_26.fld4.2,_5];
Call(_26.fld0.fld3.fld0.fld4 = core::intrinsics::transmute(_26.fld0.fld3.fld5.0), bb9, UnwindUnreachable())
}
bb9 = {
_26.fld1.1.1 = _8 / 213_u8;
_26.fld0.fld3.fld0.fld1 = [_14];
_17 = _20 + _20;
_27 = Adt50 { fld0: _24,fld1: _26.fld2 };
_26.fld0.fld3.fld1 = _26.fld0.fld3.fld5.0;
_26.fld0.fld3.fld5 = (_26.fld0.fld3.fld1,);
_10 = _6 as i8;
Goto(bb10)
}
bb10 = {
_26.fld1.3 = _26.fld2 as f64;
_21.fld0 = false;
_31.fld3 = core::ptr::addr_of!(_26.fld0.fld3.fld0.fld3);
_26.fld0.fld3.fld1 = _26.fld0.fld3.fld5.0;
_20 = _15 + _26.fld1.3;
_26.fld0.fld3.fld0.fld3 = -_13;
_21.fld0 = !true;
_11 = _26.fld0.fld1;
_26.fld3 = _14 as u8;
_31.fld2.fld0 = [_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4];
_26.fld0.fld3.fld0.fld1 = [_14];
_26.fld0.fld3.fld2 = [_10,_26.fld4.1.0,_7,_10,_26.fld1.1.0,_26.fld4.1.0,_26.fld4.1.0,_26.fld4.1.0];
_14 = _26.fld2 as u128;
_18 = !_19;
_17 = _26.fld1.3;
_29 = _21.fld0;
_10 = _26.fld0.fld3.fld0.fld3 as i8;
_26.fld0.fld3.fld4 = [_14,_14,_14,_14,_14];
_29 = _21.fld0;
_25.0 = [_19,_18,_19,_19,_18,_18,_18,_18];
RET = [_14];
_26.fld0.fld3.fld3 = _26.fld1.1.0;
_26.fld0.fld3.fld4 = [_14,_14,_14,_14,_14];
_26.fld0.fld3.fld0.fld3 = -_13;
Goto(bb11)
}
bb11 = {
_13 = _26.fld1.1.0 as f32;
_26.fld1.2 = _26.fld4.1.0;
_25.0 = [_18,_18,_19,_19,_19,_18,_19,_19];
_33.1 = 6313320753172979960_usize << _26.fld0.fld3.fld3;
_33.1 = !4555782298242294926_usize;
_26.fld0.fld3.fld0.fld2 = [_5,_26.fld4.2,_5,_26.fld4.2,_26.fld4.2,_5];
_26.fld1.4 = core::ptr::addr_of_mut!(_26.fld1.3);
_26.fld3 = _26.fld1.2 as u8;
_33.0 = _16 - _16;
_35 = _21.fld0;
_34 = _33.0 & _33.0;
_30 = _14 % 16644629453161432123697940085520282685_u128;
_32.fld0.fld0.fld2 = [_26.fld4.2,_5,_5,_26.fld4.2,_5,_5];
_38 = -4337774437698673052_i64;
Goto(bb12)
}
bb12 = {
_26.fld4.3 = _22 / 36133_u16;
_31.fld1 = [_7,_26.fld0.fld3.fld3,_26.fld4.1.0,_26.fld4.1.0];
_38 = (-1794568122862223482_i64);
_26.fld0.fld3.fld0.fld4 = _21.fld0 as i32;
_33.0 = _34 - _34;
_32.fld0.fld0.fld3 = _13 / f32::NEG_INFINITY;
_31.fld3 = core::ptr::addr_of!(_32.fld0.fld0.fld3);
RET = [_30];
_19 = _18 << _33.0;
_31.fld2.fld1 = _27.fld1 << _16;
_26.fld0.fld3.fld0.fld2 = [_5,_9,_5,_5,_26.fld4.2,_5];
_33.1 = 7_usize | 7_usize;
_21 = Adt55 { fld0: _29 };
_32.fld0.fld0.fld1 = [_30];
_40.fld3.2.1 = (_26.fld1.1.0, _8);
_26.fld0.fld2 = [_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4,_26.fld0.fld3.fld0.fld4];
_9 = !_5;
_32.fld0.fld0.fld3 = _26.fld0.fld3.fld0.fld3 * _26.fld0.fld3.fld0.fld3;
_11 = [_34,_34,_34,_33.0,_33.0,_33.0,_34];
_26.fld0.fld3.fld0.fld2 = [_9,_9,_9,_5,_26.fld4.2,_9];
_40.fld2 = [_34,_33.0,_33.0,_4,_33.0,_34,_33.0];
_32.fld0.fld4 = [_30,_30,_14,_14,_14];
_40.fld3.2.1.0 = _26.fld0.fld3.fld3 << _6;
_38 = -(-4002554201323858108_i64);
_28 = _20;
match _26.fld1.1.0 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
102 => bb13,
_ => bb10
}
}
bb13 = {
_40.fld0 = (_25.0,);
_26.fld0.fld2 = _24;
_22 = _35 as u16;
_26.fld0.fld1 = [_33.0,_33.0,_34,_33.0,_4,_33.0,_33.0];
_40.fld1.2 = core::ptr::addr_of!(_38);
_27 = Adt50 { fld0: _24,fld1: _31.fld2.fld1 };
_26.fld0.fld3.fld5 = (_26.fld0.fld3.fld1,);
_40.fld3.2.2 = !_5;
_13 = _32.fld0.fld0.fld3;
Call(_40.fld3.3 = fn8(_31.fld2.fld1, _17, _32.fld0.fld0.fld2, _23), bb14, UnwindUnreachable())
}
bb14 = {
_29 = _21.fld0 ^ _35;
_39 = _40.fld3.2.1.0 << _4;
_7 = _22 as i8;
RET = _32.fld0.fld0.fld1;
_44 = _30 as isize;
_31.fld3 = core::ptr::addr_of!(_26.fld0.fld3.fld0.fld3);
_1 = [_40.fld3.2.2,_26.fld4.2,_40.fld3.2.2,_40.fld3.2.2,_5,_9,_5];
_40.fld0 = (_25.0,);
_26.fld4.0 = core::ptr::addr_of!(_33.1);
_26.fld0.fld3.fld3 = -_26.fld4.1.0;
_26.fld3 = _8;
_40.fld3.1 = [_9,_40.fld3.2.2,_9,_40.fld3.2.2,_40.fld3.2.2,_40.fld3.2.2,_9];
_48 = _26.fld0.fld3.fld1 as usize;
_32.fld0.fld3 = _26.fld1.1.0;
_26.fld1.0 = _19 as u128;
_40.fld1.3 = _26.fld0.fld3.fld1;
_32.fld0.fld0.fld2 = [_26.fld4.2,_5,_40.fld3.2.2,_5,_9,_26.fld4.2];
_26.fld2 = _22 as i128;
_51.fld3.2.1 = (_26.fld1.2, _6);
_49.fld0 = _26.fld0.fld3.fld2;
_51.fld3.2 = (_26.fld4.0, _40.fld3.2.1, _5, _22);
_37 = _26.fld1.3;
_52 = -_28;
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(7_usize, 25_usize, Move(_25), 38_usize, Move(_38), 9_usize, Move(_9), 11_usize, Move(_11)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(7_usize, 16_usize, Move(_16), 3_usize, Move(_3), 35_usize, Move(_35), 6_usize, Move(_6)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(7_usize, 12_usize, Move(_12), 29_usize, Move(_29), 24_usize, Move(_24), 34_usize, Move(_34)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(7_usize, 19_usize, Move(_19), 8_usize, Move(_8), 55_usize, _55, 55_usize, _55), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: i128,mut _2: f64,mut _3: [u32; 6],mut _4: i16) -> i16 {
mir! {
type RET = i16;
let _5: i64;
let _6: isize;
let _7: i64;
let _8: i128;
let _9: isize;
let _10: [i8; 8];
let _11: Adt57;
let _12: Adt62;
let _13: [u64; 8];
let _14: [u64; 8];
let _15: (char,);
let _16: *const usize;
let _17: i16;
let _18: usize;
let _19: f64;
let _20: char;
let _21: ([u32; 7],);
let _22: isize;
let _23: ([u64; 8],);
let _24: [isize; 1];
let _25: u8;
let _26: char;
let _27: Adt56;
let _28: (char,);
let _29: Adt55;
let _30: (char,);
let _31: [u128; 6];
let _32: *const i64;
let _33: ();
let _34: ();
{
_2 = (-420421653675822336_i64) as f64;
_4 = !25526_i16;
_4 = 253_u8 as i16;
_3 = [3144269397_u32,1182375120_u32,2541125394_u32,674490222_u32,3550345606_u32,3146929350_u32];
RET = !_4;
_4 = _2 as i16;
_1 = 9223372036854775807_isize as i128;
_2 = _1 as f64;
_2 = _1 as f64;
RET = _4;
_1 = -78257312197298803181825220032353019499_i128;
_2 = 4147949192_u32 as f64;
_6 = 9223372036854775807_isize | (-9223372036854775808_isize);
_2 = 7_usize as f64;
_1 = _6 as i128;
_2 = 249_u8 as f64;
_2 = 123_u8 as f64;
_4 = 16743426473172790166_u64 as i16;
_6 = 3959958056_u32 as isize;
Call(_4 = fn9(_2, _1, _2, _6, _6), bb1, UnwindUnreachable())
}
bb1 = {
_5 = !7485976364661819128_i64;
RET = 49888_u16 as i16;
_8 = -_1;
_2 = 57402_u16 as f64;
_9 = 13996087613209668562_u64 as isize;
_2 = _5 as f64;
RET = !_4;
_8 = 222841247742958026892032364947940989183_u128 as i128;
_10 = [75_i8,97_i8,77_i8,3_i8,(-69_i8),(-105_i8),(-52_i8),73_i8];
RET = 40111_u16 as i16;
_8 = _1;
_11.fld2.fld0 = _5;
_11.fld6.fld6 = core::ptr::addr_of!(_11.fld6.fld1.2.3);
_11.fld2.fld1 = 134561376301786929172444771965000371021_u128 >> _4;
Goto(bb2)
}
bb2 = {
_11.fld6.fld1.2.3 = 2218173682087765865_u64 as u16;
_12.fld0.fld0.fld1 = [_11.fld2.fld1];
_11.fld6.fld3 = 0_i8;
_12.fld0.fld0.fld3 = _11.fld6.fld3 as f32;
_11.fld6.fld3 = -42_i8;
_12.fld0.fld1 = '\u{c5ac2}';
_11.fld3 = _12.fld0.fld1 as i8;
_4 = -(-3216_i16);
_12.fld0.fld0.fld4 = _2 as i32;
_11.fld5 = core::ptr::addr_of!(_12.fld0.fld0.fld3);
_12.fld0.fld3 = _11.fld3;
_11.fld6.fld1.2.1.1 = 93_u8;
RET = _4 & _4;
_4 = -30864_i16;
_11.fld5 = core::ptr::addr_of!(_12.fld0.fld0.fld3);
_11.fld2 = Adt53 { fld0: _5,fld1: 297560904486650741941053744255453389679_u128,fld2: _12.fld0.fld0.fld1 };
match _11.fld2.fld1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
297560904486650741941053744255453389679 => bb7,
_ => bb6
}
}
bb3 = {
_5 = !7485976364661819128_i64;
RET = 49888_u16 as i16;
_8 = -_1;
_2 = 57402_u16 as f64;
_9 = 13996087613209668562_u64 as isize;
_2 = _5 as f64;
RET = !_4;
_8 = 222841247742958026892032364947940989183_u128 as i128;
_10 = [75_i8,97_i8,77_i8,3_i8,(-69_i8),(-105_i8),(-52_i8),73_i8];
RET = 40111_u16 as i16;
_8 = _1;
_11.fld2.fld0 = _5;
_11.fld6.fld6 = core::ptr::addr_of!(_11.fld6.fld1.2.3);
_11.fld2.fld1 = 134561376301786929172444771965000371021_u128 >> _4;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11.fld6.fld1.2.2 = 532459279_u32;
_11.fld2.fld2 = [_11.fld2.fld1];
_11.fld6.fld2 = [_6,_6,_6,_6,_9,_6,_6];
_6 = !_9;
_11.fld6.fld1.1 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_11.fld4 = _4;
_11.fld6.fld4 = 7_usize;
_3 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
Goto(bb8)
}
bb8 = {
_11.fld1 = (_11.fld6.fld1.1,);
_11.fld0.fld0 = [_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4];
_11.fld6.fld1.3 = _11.fld4 | _11.fld4;
_14 = [10840915033780542794_u64,11123381665919284943_u64,13427765972441949439_u64,9780428392223154314_u64,14634321479435537132_u64,632219656386159490_u64,4990254406505996793_u64,15547689969944419176_u64];
_7 = _11.fld2.fld0;
_17 = _11.fld6.fld1.3;
_11.fld0.fld1 = _8;
_11.fld6.fld0 = [_12.fld0.fld3,_11.fld3,_11.fld6.fld3,_12.fld0.fld3,_11.fld3,_12.fld0.fld3,_11.fld3,_12.fld0.fld3];
_19 = _2;
_11.fld6.fld1.0 = _11.fld6.fld1.2.3 << _11.fld3;
_12.fld0.fld0.fld2 = _3;
_11.fld6.fld1.2.0 = core::ptr::addr_of!(_18);
_15 = (_12.fld0.fld1,);
_12.fld0.fld0.fld1 = _11.fld2.fld2;
_11.fld4 = !_11.fld6.fld1.3;
_12.fld0.fld0.fld2 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_12.fld0.fld0.fld2 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_20 = _15.0;
_11.fld0.fld0 = [_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4];
RET = -_11.fld4;
_12.fld0.fld2 = [_11.fld6.fld3,_11.fld6.fld3,_12.fld0.fld3,_12.fld0.fld3,_12.fld0.fld3,_11.fld6.fld3,_11.fld3,_12.fld0.fld3];
Goto(bb9)
}
bb9 = {
_6 = -_9;
_9 = _6 - _6;
_12.fld0.fld1 = _15.0;
_12.fld0.fld1 = _15.0;
_12.fld0.fld2 = [_12.fld0.fld3,_12.fld0.fld3,_12.fld0.fld3,_11.fld6.fld3,_11.fld3,_11.fld3,_11.fld3,_11.fld3];
_13 = [7335355645616407326_u64,14134654102852181590_u64,17399876480716248306_u64,9403061602398348533_u64,3743048514979286314_u64,5083623049310609485_u64,14077559695815084453_u64,16577330779292545740_u64];
_11.fld6.fld5 = _11.fld2.fld2;
_11.fld2.fld1 = _11.fld6.fld4 as u128;
_11.fld6.fld1.2.3 = !_11.fld6.fld1.0;
_12.fld0.fld4 = [_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1];
_11.fld6.fld1.1 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_15.0 = _20;
RET = _11.fld6.fld1.3;
_12.fld0.fld1 = _20;
_11.fld0.fld1 = -_8;
_11.fld2.fld1 = 202416132072149908539573406099488164958_u128 / 72598520402720360756915584396422645476_u128;
_11.fld6.fld1.2.1 = (_11.fld6.fld3, 21_u8);
_25 = _11.fld6.fld1.2.1.1 ^ _11.fld6.fld1.2.1.1;
Goto(bb10)
}
bb10 = {
_9 = _6 << _7;
RET = _4 | _17;
_23 = (_14,);
_24 = [_9];
_11.fld6.fld1.2.1.1 = !_25;
_11.fld6.fld1.2.1.1 = !_25;
_11.fld5 = core::ptr::addr_of!(_12.fld0.fld0.fld3);
_12.fld0.fld4 = [_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1];
_18 = !_11.fld6.fld4;
_12.fld0.fld5 = (_15.0,);
_11.fld6.fld1.1 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_12.fld0.fld1 = _12.fld0.fld5.0;
_12.fld0.fld2 = _10;
_18 = _11.fld6.fld4 / 4_usize;
_21.0 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_11.fld6.fld1.2.1 = (_12.fld0.fld3, _25);
_11.fld6.fld4 = !_18;
_11.fld3 = !_11.fld6.fld1.2.1.0;
_26 = _12.fld0.fld5.0;
Goto(bb11)
}
bb11 = {
_16 = _11.fld6.fld1.2.0;
_15 = (_20,);
_23 = (_13,);
_11.fld6.fld1.2.0 = core::ptr::addr_of!(_18);
_11.fld6.fld1.2.3 = _11.fld6.fld1.0;
_12.fld0.fld3 = _11.fld3 + _11.fld6.fld3;
(*_16) = _11.fld6.fld4;
_11.fld3 = !_12.fld0.fld3;
_11.fld6.fld0 = [_12.fld0.fld3,_11.fld3,_11.fld6.fld3,_11.fld6.fld1.2.1.0,_11.fld3,_12.fld0.fld3,_11.fld3,_11.fld3];
_12.fld0.fld5 = _15;
_12.fld0.fld4 = [_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1];
_12.fld0.fld5 = _15;
_4 = _8 as i16;
_11.fld6.fld1.1 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_21.0 = _11.fld1.0;
_11.fld2 = Adt53 { fld0: _5,fld1: 63802947952214256158330715982425196704_u128,fld2: _11.fld6.fld5 };
_11.fld0.fld0 = [_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4,_12.fld0.fld0.fld4];
_12.fld0.fld0.fld3 = _12.fld0.fld0.fld4 as f32;
_11.fld2.fld2 = _11.fld6.fld5;
_12.fld0.fld0.fld2 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_12.fld0.fld4 = [_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1,_11.fld2.fld1];
Goto(bb12)
}
bb12 = {
_15.0 = _20;
_11.fld6.fld1.3 = _11.fld6.fld1.2.1.0 as i16;
_11.fld6.fld6 = core::ptr::addr_of!(_11.fld6.fld1.2.3);
_22 = _9 * _6;
_13 = [6911613200255678251_u64,13480434583717750133_u64,7206216097936337726_u64,15895604479111216861_u64,6275733404334908019_u64,15948088358961245912_u64,2028527602199821845_u64,1959606536632721_u64];
_1 = _7 as i128;
_11.fld6.fld4 = _18;
_25 = !_11.fld6.fld1.2.1.1;
_27.fld1 = [_11.fld3,_11.fld3,_11.fld6.fld1.2.1.0,_11.fld3];
_11.fld6.fld3 = false as i8;
_11.fld6.fld1.1 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_27.fld3 = core::ptr::addr_of!(_12.fld0.fld0.fld3);
_8 = _11.fld0.fld1;
_15.0 = _20;
_17 = !_11.fld4;
_11.fld2 = Adt53 { fld0: _7,fld1: 24202260776272558835824372337232657642_u128,fld2: _11.fld6.fld5 };
match _11.fld2.fld1 {
24202260776272558835824372337232657642 => bb13,
_ => bb8
}
}
bb13 = {
_28.0 = _12.fld0.fld1;
_27.fld2 = _11.fld0;
_27.fld1 = [_11.fld6.fld1.2.1.0,_12.fld0.fld3,_11.fld3,_11.fld3];
RET = -_17;
Goto(bb14)
}
bb14 = {
RET = _20 as i16;
_13 = [1798544740393580893_u64,2057299615846517987_u64,9433218579812188667_u64,10001019920313857085_u64,17972741302197381368_u64,3937260537060672230_u64,8577452017560192946_u64,8389533388711661738_u64];
_11.fld6.fld1.3 = _12.fld0.fld0.fld3 as i16;
_27.fld2.fld0 = _11.fld0.fld0;
_3 = [_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2,_11.fld6.fld1.2.2];
_11.fld6.fld2 = [_22,_22,_6,_22,_9,_22,_9];
_22 = _9 + _9;
_5 = _11.fld6.fld1.2.1.0 as i64;
_11.fld2 = Adt53 { fld0: _5,fld1: 271525414191617436245449401927830174979_u128,fld2: _11.fld6.fld5 };
_8 = _27.fld2.fld1 * _27.fld2.fld1;
(*_16) = _2 as usize;
_27.fld1 = [_11.fld6.fld3,_11.fld6.fld3,_11.fld3,_12.fld0.fld3];
_32 = core::ptr::addr_of!(_5);
_11.fld6.fld4 = _11.fld0.fld1 as usize;
_11.fld6.fld5 = _12.fld0.fld0.fld1;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(8_usize, 14_usize, Move(_14), 21_usize, Move(_21), 10_usize, Move(_10), 22_usize, Move(_22)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(8_usize, 24_usize, Move(_24), 17_usize, Move(_17), 8_usize, Move(_8), 4_usize, Move(_4)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(8_usize, 9_usize, Move(_9), 20_usize, Move(_20), 15_usize, Move(_15), 34_usize, _34), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: f64,mut _2: i128,mut _3: f64,mut _4: isize,mut _5: isize) -> i16 {
mir! {
type RET = i16;
let _6: u16;
let _7: [isize; 1];
let _8: i32;
let _9: [isize; 7];
let _10: ([u32; 7],);
let _11: ([u64; 8],);
let _12: ([u32; 7],);
let _13: bool;
let _14: (*const usize, (i8, u8), u32, u16);
let _15: [i8; 8];
let _16: [u128; 6];
let _17: *mut *const *const u16;
let _18: Adt52;
let _19: *const *const u16;
let _20: f64;
let _21: *const f32;
let _22: isize;
let _23: Adt51;
let _24: usize;
let _25: bool;
let _26: char;
let _27: Adt53;
let _28: char;
let _29: f64;
let _30: Adt48;
let _31: isize;
let _32: Adt53;
let _33: f64;
let _34: *mut f64;
let _35: char;
let _36: *mut *const *const u16;
let _37: Adt48;
let _38: [u128; 6];
let _39: i32;
let _40: u8;
let _41: f64;
let _42: isize;
let _43: ();
let _44: ();
{
RET = _3 as i16;
_4 = 1269139580_u32 as isize;
_4 = 248391831805300636888970497254772304617_u128 as isize;
_3 = -_1;
_6 = 16509_u16 & 720_u16;
RET = -28988_i16;
_1 = _3;
_2 = (-1525724565_i32) as i128;
Call(RET = core::intrinsics::transmute(_6), bb1, UnwindUnreachable())
}
bb1 = {
RET = 13860_i16 | (-19367_i16);
_7 = [_5];
_1 = 235_u8 as f64;
RET = 31331_i16;
_4 = _5 - _5;
RET = 17295_i16;
RET = -(-19044_i16);
_6 = !5254_u16;
RET = !16082_i16;
_10.0 = [1331502193_u32,3653352101_u32,2404689138_u32,4211863004_u32,680485408_u32,3035136594_u32,462151160_u32];
_6 = _1 as u16;
_9 = [_4,_4,_4,_4,_5,_4,_5];
_1 = _3;
_2 = (-141522730210193701836023471952728741134_i128);
Goto(bb2)
}
bb2 = {
_7 = [_5];
RET = (-6072_i16) - 25149_i16;
_4 = _5;
_3 = -_1;
RET = -21733_i16;
_2 = (-124_i8) as i128;
_8 = !557238427_i32;
_7 = [_4];
_4 = !_5;
Goto(bb3)
}
bb3 = {
_6 = 26708_u16 << _5;
_2 = (-43284426039090753309720100958914523137_i128);
_4 = 12997455803816479102_u64 as isize;
_1 = (-31488_i16) as f64;
Call(RET = core::intrinsics::transmute(_6), bb4, UnwindUnreachable())
}
bb4 = {
_8 = -(-1985679162_i32);
_12 = _10;
_12.0 = [3005430637_u32,1970395783_u32,3679679987_u32,3842663495_u32,932377333_u32,1705354591_u32,1977364213_u32];
_13 = !true;
_12 = (_10.0,);
_12.0 = [3507925226_u32,1936629429_u32,2278802907_u32,2018344426_u32,810597304_u32,1533449276_u32,3854561302_u32];
_1 = _2 as f64;
_6 = 23336_u16;
_10.0 = [3951979359_u32,639237807_u32,4167566410_u32,3572882784_u32,3258182077_u32,2262063483_u32,142194342_u32];
RET = (-12058_i16) - (-12916_i16);
RET = (-13530_i16);
_12 = (_10.0,);
_14.1.0 = _8 as i8;
_14.3 = _6 / 9014_u16;
_10 = (_12.0,);
RET = !27618_i16;
_15 = [_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0];
_11.0 = [5399739476598821254_u64,7283782977387800547_u64,11294491582253721017_u64,13608863679316206352_u64,969333734863312461_u64,2858352460516503854_u64,4893413154412782846_u64,6863268309782124553_u64];
_2 = 61198500600033397128571829771020490327_i128 << _6;
_12 = (_10.0,);
_10.0 = [2091790745_u32,1143011296_u32,376715039_u32,3349170840_u32,3524284010_u32,78923383_u32,3864940235_u32];
_12 = (_10.0,);
Call(_14.2 = core::intrinsics::transmute(_8), bb5, UnwindUnreachable())
}
bb5 = {
_14.1 = ((-114_i8), 52_u8);
_10.0 = _12.0;
_16 = [206547160688951414882615056036050692470_u128,234972648234240916449327133232728449722_u128,96012117276403155768062290052060956140_u128,200104045552784397163115657662089993737_u128,127727484882295292210912518389871843996_u128,334825153347596579200640021706687430775_u128];
_14.3 = _6;
_3 = 114194041228670275777298796950859002394_u128 as f64;
_1 = -_3;
_3 = (-12954_i16) as f64;
_4 = _5;
_18.fld5.fld3.2.0 = core::ptr::addr_of!(_18.fld5.fld1.1);
_18.fld5.fld1.0 = -_5;
_18.fld5.fld0.0 = _11.0;
_18.fld2 = !15324704638534966500_u64;
_18.fld5.fld3.2.1 = _14.1;
_5 = _14.2 as isize;
_18.fld4 = core::ptr::addr_of_mut!(_3);
_14.3 = _6 >> _2;
_18.fld5.fld3.3 = !(-12754_i16);
_18.fld0 = [_5,_5,_18.fld5.fld1.0,_4,_4,_5,_18.fld5.fld1.0];
_5 = (-9061035154907239414_i64) as isize;
_18.fld5.fld3.2.2 = _14.2 / 3604047505_u32;
_18.fld5.fld0.0 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2];
Goto(bb6)
}
bb6 = {
_18.fld4 = core::ptr::addr_of_mut!(_1);
_17 = core::ptr::addr_of_mut!(_19);
RET = _8 as i16;
_18.fld5.fld3.1 = [_18.fld5.fld3.2.2,_14.2,_14.2,_18.fld5.fld3.2.2,_18.fld5.fld3.2.2,_18.fld5.fld3.2.2,_18.fld5.fld3.2.2];
_3 = -_1;
_18.fld5.fld3.3 = (-465_i16);
_18.fld0 = [_4,_4,_18.fld5.fld1.0,_5,_18.fld5.fld1.0,_5,_18.fld5.fld1.0];
_23.fld0 = core::ptr::addr_of_mut!((*_17));
_11 = _18.fld5.fld0;
_5 = _4;
_12 = (_10.0,);
_23.fld4.fld1.2.1.1 = _14.1.1;
Call(_23.fld4.fld0 = fn10(_14.3, _18.fld5.fld0.0, _17, _18.fld5.fld3.2.1, _14.1, _12, _18.fld5.fld3.3, _14.3), bb7, UnwindUnreachable())
}
bb7 = {
_23.fld4.fld1.2.2 = _18.fld5.fld1.0 as u32;
_23.fld4.fld1.2.3 = _18.fld5.fld3.3 as u16;
_18.fld5.fld3.1 = [_18.fld5.fld3.2.2,_18.fld5.fld3.2.2,_23.fld4.fld1.2.2,_23.fld4.fld1.2.2,_18.fld5.fld3.2.2,_18.fld5.fld3.2.2,_18.fld5.fld3.2.2];
_4 = _5;
_23.fld4.fld1.2.1.1 = _14.1.1;
_18.fld0 = _9;
_23.fld4.fld1.0 = _23.fld4.fld1.2.3;
Goto(bb8)
}
bb8 = {
_23.fld4.fld1.2.1 = _18.fld5.fld3.2.1;
_23.fld4.fld4 = 1_usize;
_18.fld5.fld1.1 = _23.fld4.fld4;
_30.fld3.2.2 = _18.fld5.fld3.2.2 / 257143632_u32;
_23.fld4.fld1.2 = (_18.fld5.fld3.2.0, _18.fld5.fld3.2.1, _30.fld3.2.2, _14.3);
_23.fld4.fld6 = core::ptr::addr_of!(_23.fld4.fld1.0);
_23.fld4.fld5 = [7738027223445572694346806188473144422_u128];
_20 = -_1;
_30.fld3 = (_14.3, _10.0, _23.fld4.fld1.2, _18.fld5.fld3.3);
_23.fld4.fld6 = core::ptr::addr_of!(_23.fld4.fld1.0);
_23.fld4.fld6 = core::ptr::addr_of!(_18.fld5.fld3.0);
(*_17) = core::ptr::addr_of!(_23.fld4.fld6);
_25 = !_13;
_18.fld5.fld3.0 = _23.fld4.fld1.2.3 >> _30.fld3.2.3;
_28 = '\u{f3218}';
_18.fld1 = (_25,);
_27.fld1 = 145643683168984274692005895717214616361_u128;
_23.fld2 = _23.fld4.fld1.2.2;
_18.fld5.fld3.2 = _30.fld3.2;
_28 = '\u{b5647}';
_14.1.0 = _5 as i8;
_30.fld1.2 = core::ptr::addr_of!(_32.fld0);
match _18.fld5.fld3.2.1.0 {
0 => bb7,
1 => bb2,
340282366920938463463374607431768211342 => bb9,
_ => bb3
}
}
bb9 = {
_23.fld4.fld1.0 = _18.fld5.fld3.0 - _18.fld5.fld3.2.3;
_30.fld3.0 = !_23.fld4.fld1.0;
_27.fld0 = 4951164303327676510_i64 * (-8154202469718638941_i64);
_14.1.0 = _23.fld4.fld1.2.1.0 + _23.fld4.fld1.2.1.0;
_18.fld0 = [_5,_18.fld5.fld1.0,_4,_4,_4,_18.fld5.fld1.0,_5];
_14.0 = core::ptr::addr_of!(_24);
_23.fld3 = [_14.1.0,_18.fld5.fld3.2.1.0,_18.fld5.fld3.2.1.0,_14.1.0];
_30.fld0 = _18.fld5.fld0;
_16 = [_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1,_27.fld1];
RET = _23.fld4.fld1.2.2 as i16;
_27.fld1 = _13 as u128;
_20 = -_3;
_18.fld1.0 = !_13;
_32.fld2 = [_27.fld1];
_23.fld1.0 = !_25;
_24 = !_23.fld4.fld4;
_34 = core::ptr::addr_of_mut!(_20);
_29 = _18.fld5.fld3.3 as f64;
_30.fld3.2.2 = _23.fld2 >> _14.1.1;
_32.fld0 = -_27.fld0;
_30.fld3.3 = !_18.fld5.fld3.3;
_18.fld5.fld1.2 = _30.fld1.2;
_27.fld0 = !_32.fld0;
_23.fld5 = core::ptr::addr_of!(_23.fld4.fld4);
_5 = _18.fld5.fld1.0;
_18.fld5.fld3.1 = [_30.fld3.2.2,_30.fld3.2.2,_30.fld3.2.2,_30.fld3.2.2,_18.fld5.fld3.2.2,_23.fld2,_23.fld4.fld1.2.2];
match _30.fld3.2.1.0 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb10,
340282366920938463463374607431768211342 => bb12,
_ => bb11
}
}
bb10 = {
_23.fld4.fld1.2.1 = _18.fld5.fld3.2.1;
_23.fld4.fld4 = 1_usize;
_18.fld5.fld1.1 = _23.fld4.fld4;
_30.fld3.2.2 = _18.fld5.fld3.2.2 / 257143632_u32;
_23.fld4.fld1.2 = (_18.fld5.fld3.2.0, _18.fld5.fld3.2.1, _30.fld3.2.2, _14.3);
_23.fld4.fld6 = core::ptr::addr_of!(_23.fld4.fld1.0);
_23.fld4.fld5 = [7738027223445572694346806188473144422_u128];
_20 = -_1;
_30.fld3 = (_14.3, _10.0, _23.fld4.fld1.2, _18.fld5.fld3.3);
_23.fld4.fld6 = core::ptr::addr_of!(_23.fld4.fld1.0);
_23.fld4.fld6 = core::ptr::addr_of!(_18.fld5.fld3.0);
(*_17) = core::ptr::addr_of!(_23.fld4.fld6);
_25 = !_13;
_18.fld5.fld3.0 = _23.fld4.fld1.2.3 >> _30.fld3.2.3;
_28 = '\u{f3218}';
_18.fld1 = (_25,);
_27.fld1 = 145643683168984274692005895717214616361_u128;
_23.fld2 = _23.fld4.fld1.2.2;
_18.fld5.fld3.2 = _30.fld3.2;
_28 = '\u{b5647}';
_14.1.0 = _5 as i8;
_30.fld1.2 = core::ptr::addr_of!(_32.fld0);
match _18.fld5.fld3.2.1.0 {
0 => bb7,
1 => bb2,
340282366920938463463374607431768211342 => bb9,
_ => bb3
}
}
bb11 = {
_8 = -(-1985679162_i32);
_12 = _10;
_12.0 = [3005430637_u32,1970395783_u32,3679679987_u32,3842663495_u32,932377333_u32,1705354591_u32,1977364213_u32];
_13 = !true;
_12 = (_10.0,);
_12.0 = [3507925226_u32,1936629429_u32,2278802907_u32,2018344426_u32,810597304_u32,1533449276_u32,3854561302_u32];
_1 = _2 as f64;
_6 = 23336_u16;
_10.0 = [3951979359_u32,639237807_u32,4167566410_u32,3572882784_u32,3258182077_u32,2262063483_u32,142194342_u32];
RET = (-12058_i16) - (-12916_i16);
RET = (-13530_i16);
_12 = (_10.0,);
_14.1.0 = _8 as i8;
_14.3 = _6 / 9014_u16;
_10 = (_12.0,);
RET = !27618_i16;
_15 = [_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0,_14.1.0];
_11.0 = [5399739476598821254_u64,7283782977387800547_u64,11294491582253721017_u64,13608863679316206352_u64,969333734863312461_u64,2858352460516503854_u64,4893413154412782846_u64,6863268309782124553_u64];
_2 = 61198500600033397128571829771020490327_i128 << _6;
_12 = (_10.0,);
_10.0 = [2091790745_u32,1143011296_u32,376715039_u32,3349170840_u32,3524284010_u32,78923383_u32,3864940235_u32];
_12 = (_10.0,);
Call(_14.2 = core::intrinsics::transmute(_8), bb5, UnwindUnreachable())
}
bb12 = {
_37.fld1.2 = _30.fld1.2;
_14.2 = _23.fld4.fld1.2.2;
_30.fld2 = _9;
_30.fld3.2.1.1 = _18.fld5.fld3.2.1.1;
_37.fld3.1 = _10.0;
_18.fld1.0 = _25;
_26 = _28;
_30.fld3.1 = _12.0;
_37.fld3.0 = _8 as u16;
_30.fld0.0 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_23.fld4.fld1.2 = (_30.fld3.2.0, _14.1, _18.fld5.fld3.2.2, _30.fld3.0);
_18.fld5.fld2 = [_5,_18.fld5.fld1.0,_4,_18.fld5.fld1.0,_18.fld5.fld1.0,_18.fld5.fld1.0,_5];
_14.2 = _30.fld3.2.2;
_12 = (_37.fld3.1,);
_18.fld5.fld2 = [_18.fld5.fld1.0,_18.fld5.fld1.0,_5,_4,_4,_5,_5];
_18.fld5.fld3.1 = _12.0;
_37.fld3.2.2 = !_14.2;
_23.fld4.fld1.2.1 = (_14.1.0, _30.fld3.2.1.1);
_17 = _23.fld0;
_35 = _28;
_23.fld5 = core::ptr::addr_of!(_18.fld5.fld1.1);
_23.fld4.fld1.3 = !_18.fld5.fld3.3;
match _30.fld3.2.1.0 {
0 => bb1,
1 => bb11,
340282366920938463463374607431768211342 => bb13,
_ => bb4
}
}
bb13 = {
_18.fld5.fld3.2.2 = _18.fld1.0 as u32;
_22 = _18.fld1.0 as isize;
(*_19) = core::ptr::addr_of!(_30.fld3.0);
_18.fld5.fld1 = (_5, _23.fld4.fld4, _30.fld1.2, _28);
_37.fld3.2.3 = _2 as u16;
_23.fld4.fld1.3 = _18.fld5.fld3.3 << _4;
_31 = _18.fld5.fld3.3 as isize;
_31 = _22 * _22;
_23.fld4.fld1.1 = _18.fld5.fld3.1;
_37.fld3.2.1 = (_14.1.0, _14.1.1);
_37.fld3.1 = [_30.fld3.2.2,_37.fld3.2.2,_18.fld5.fld3.2.2,_23.fld2,_37.fld3.2.2,_14.2,_14.2];
_18.fld5.fld1.1 = _23.fld4.fld4;
_14 = (_23.fld5, _30.fld3.2.1, _23.fld2, _30.fld3.0);
_18.fld2 = _37.fld3.2.2 as u64;
_23.fld4.fld6 = core::ptr::addr_of!(_37.fld3.2.3);
_37.fld3.0 = _18.fld5.fld3.0 & _23.fld4.fld1.2.3;
_30.fld1.0 = _5 ^ _22;
_37.fld3 = (_23.fld4.fld1.2.3, _10.0, _18.fld5.fld3.2, _18.fld5.fld3.3);
_18.fld3.0 = -_29;
_30.fld3.1 = [_30.fld3.2.2,_14.2,_18.fld5.fld3.2.2,_14.2,_23.fld2,_30.fld3.2.2,_18.fld5.fld3.2.2];
_18.fld5.fld1.2 = core::ptr::addr_of!(_32.fld0);
Goto(bb14)
}
bb14 = {
RET = _18.fld5.fld3.2.1.0 as i16;
_30.fld1.2 = core::ptr::addr_of!(_27.fld0);
_37.fld1.2 = core::ptr::addr_of!(_27.fld0);
_23.fld4.fld5 = [_27.fld1];
_23.fld4.fld1.2.1.0 = _37.fld3.2.1.0 << _18.fld2;
_18.fld5.fld3.1 = [_14.2,_23.fld4.fld1.2.2,_30.fld3.2.2,_30.fld3.2.2,_23.fld2,_23.fld2,_30.fld3.2.2];
_18.fld4 = core::ptr::addr_of_mut!((*_34));
_30.fld0 = _18.fld5.fld0;
_18.fld5.fld3.3 = -_23.fld4.fld1.3;
_8 = (-80211840_i32) >> _23.fld4.fld1.2.3;
_29 = _14.1.0 as f64;
_12 = _10;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(9_usize, 11_usize, Move(_11), 4_usize, Move(_4), 24_usize, Move(_24), 6_usize, Move(_6)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(9_usize, 15_usize, Move(_15), 9_usize, Move(_9), 26_usize, Move(_26), 12_usize, Move(_12)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(9_usize, 13_usize, Move(_13), 16_usize, Move(_16), 44_usize, _44, 44_usize, _44), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: u16,mut _2: [u64; 8],mut _3: *mut *const *const u16,mut _4: (i8, u8),mut _5: (i8, u8),mut _6: ([u32; 7],),mut _7: i16,mut _8: u16) -> [i8; 8] {
mir! {
type RET = [i8; 8];
let _9: Adt62;
let _10: Adt50;
let _11: (bool,);
let _12: isize;
let _13: u8;
let _14: i16;
let _15: isize;
let _16: [i32; 8];
let _17: [u64; 8];
let _18: ([u64; 8],);
let _19: f32;
let _20: (isize, usize, *const i64, char);
let _21: char;
let _22: bool;
let _23: isize;
let _24: Adt62;
let _25: [u128; 5];
let _26: char;
let _27: bool;
let _28: i64;
let _29: *const i64;
let _30: char;
let _31: Adt47;
let _32: ();
let _33: ();
{
_1 = _8 / 561_u16;
_5.0 = _4.0 - _4.0;
_8 = !_1;
_6.0 = [926767614_u32,1049659326_u32,3486968292_u32,1200927460_u32,1585122959_u32,1290737465_u32,3433135183_u32];
_5.0 = 2259354700834272457_u64 as i8;
_4.0 = _5.0 + _5.0;
_9.fld0.fld5.0 = '\u{1f475}';
_6.0 = [218821667_u32,140486489_u32,2986615727_u32,1730707131_u32,2844915742_u32,633481503_u32,3721839105_u32];
_9.fld0.fld0.fld1 = [73904826319160178993197115503280533746_u128];
RET = [_5.0,_4.0,_4.0,_4.0,_5.0,_4.0,_4.0,_4.0];
_9.fld0.fld4 = [46857042493424173464452377813161623211_u128,315626924524907079979837531751825275661_u128,43781834681125142831039313282577375268_u128,137000370982420861633422840242316784026_u128,147356429445764528437025822677511867412_u128];
_9.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_3));
_11 = (false,);
_9.fld0.fld4 = [63279255328135481548951950009599671989_u128,283617062969999745462079473545955393186_u128,67775994574427104592710103747340527318_u128,304023626897380292863709720278047385449_u128,111769399597492222914971791790825080281_u128];
_10.fld0 = [(-1846075871_i32),2065040909_i32,(-235801101_i32),(-2126720057_i32),(-1659242427_i32),655651789_i32,(-1532213665_i32),987300252_i32];
_9.fld0.fld0.fld1 = [34453210053898115742103152040217764113_u128];
RET = [_4.0,_5.0,_4.0,_5.0,_4.0,_5.0,_4.0,_5.0];
_2 = [16062121201101799532_u64,2450667030692236030_u64,7299888598971445110_u64,5256160587368894009_u64,4116936548447698919_u64,2318711071551081276_u64,4519510968564899623_u64,7703935039777005557_u64];
_9.fld0.fld0.fld3 = 11182409683664282046_u64 as f32;
_12 = -9223372036854775807_isize;
_9.fld0.fld5 = ('\u{343b3}',);
_4.1 = !_5.1;
_4.0 = _5.0 + _5.0;
_9.fld0.fld5 = ('\u{6b093}',);
Call(_9 = fn11(_6.0, _5.1, _4, _7, _4.0, _3, _10.fld0, _6, _5.1, _2, _5.1, _3), bb1, UnwindUnreachable())
}
bb1 = {
match _7 {
340282366920938463463374607431768210991 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_10.fld1 = 12277421435270636044_usize as i128;
_4 = _5;
RET = [_5.0,_4.0,_9.fld0.fld3,_4.0,_4.0,_5.0,_4.0,_4.0];
_9.fld0.fld0.fld3 = _4.1 as f32;
_13 = !_4.1;
_10.fld0 = [_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4];
_4.1 = _5.1 & _13;
_9.fld0.fld0.fld3 = _9.fld0.fld0.fld4 as f32;
_11.0 = !false;
RET = [_9.fld0.fld3,_9.fld0.fld3,_5.0,_5.0,_4.0,_5.0,_9.fld0.fld3,_4.0];
_9.fld0.fld5.0 = _9.fld0.fld1;
_10.fld0 = [_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4];
Call(_9.fld0.fld5.0 = fn16(_13, (*_3), _11.0, (*_3), _8, _5.0, _6, _11, _6, _10.fld1), bb4, UnwindUnreachable())
}
bb4 = {
_3 = _9.fld0.fld0.fld0;
_1 = 4219473312_u32 as u16;
_5.0 = _9.fld0.fld3;
_1 = _8;
_9.fld0.fld5 = (_9.fld0.fld1,);
_9.fld0.fld5.0 = _9.fld0.fld1;
_5 = _4;
_4.1 = _9.fld0.fld0.fld3 as u8;
Goto(bb5)
}
bb5 = {
_9.fld0.fld0.fld3 = _12 as f32;
_18 = (_2,);
_2 = _18.0;
_5.0 = _4.0 << _8;
_1 = !_8;
_9.fld0.fld0.fld0 = _3;
_13 = _11.0 as u8;
_3 = core::ptr::addr_of_mut!((*_3));
_9.fld0.fld5 = (_9.fld0.fld1,);
_1 = _10.fld1 as u16;
_9.fld0.fld0.fld3 = _10.fld1 as f32;
_20.0 = _12 - _12;
_20.3 = _9.fld0.fld5.0;
RET = _9.fld0.fld2;
_9.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_3));
_11.0 = !true;
_13 = _5.1 & _5.1;
_9.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_3));
match _7 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
340282366920938463463374607431768210991 => bb12,
_ => bb11
}
}
bb6 = {
_3 = _9.fld0.fld0.fld0;
_1 = 4219473312_u32 as u16;
_5.0 = _9.fld0.fld3;
_1 = _8;
_9.fld0.fld5 = (_9.fld0.fld1,);
_9.fld0.fld5.0 = _9.fld0.fld1;
_5 = _4;
_4.1 = _9.fld0.fld0.fld3 as u8;
Goto(bb5)
}
bb7 = {
_10.fld1 = 12277421435270636044_usize as i128;
_4 = _5;
RET = [_5.0,_4.0,_9.fld0.fld3,_4.0,_4.0,_5.0,_4.0,_4.0];
_9.fld0.fld0.fld3 = _4.1 as f32;
_13 = !_4.1;
_10.fld0 = [_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4];
_4.1 = _5.1 & _13;
_9.fld0.fld0.fld3 = _9.fld0.fld0.fld4 as f32;
_11.0 = !false;
RET = [_9.fld0.fld3,_9.fld0.fld3,_5.0,_5.0,_4.0,_5.0,_9.fld0.fld3,_4.0];
_9.fld0.fld5.0 = _9.fld0.fld1;
_10.fld0 = [_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4];
Call(_9.fld0.fld5.0 = fn16(_13, (*_3), _11.0, (*_3), _8, _5.0, _6, _11, _6, _10.fld1), bb4, UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
match _7 {
340282366920938463463374607431768210991 => bb3,
_ => bb2
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_19 = _9.fld0.fld0.fld3 * _9.fld0.fld0.fld3;
_9.fld0.fld1 = _9.fld0.fld5.0;
_16 = _10.fld0;
_9.fld0.fld2 = [_9.fld0.fld3,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_7 = 6719_i16 << _5.1;
_13 = _5.1;
_16 = [_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4,_9.fld0.fld0.fld4];
_15 = _10.fld1 as isize;
_16 = _10.fld0;
_21 = _9.fld0.fld1;
_15 = _13 as isize;
_22 = _13 >= _13;
_3 = core::ptr::addr_of_mut!((*_3));
_2 = [18086413415720592981_u64,15774849193938544050_u64,14322622229033633497_u64,9657638767320609178_u64,15834232128477853116_u64,3035863008189777747_u64,6096430072311560061_u64,7923570325510123945_u64];
_11 = (_22,);
_11 = (_22,);
_14 = -_7;
Goto(bb13)
}
bb13 = {
_22 = _5.1 < _4.1;
_24.fld0.fld5 = (_9.fld0.fld5.0,);
_23 = _20.0;
_11.0 = !_22;
_24.fld0.fld1 = _24.fld0.fld5.0;
Call(_5.0 = core::intrinsics::bswap(_4.0), bb14, UnwindUnreachable())
}
bb14 = {
_24.fld0.fld2 = _9.fld0.fld2;
_24.fld0.fld0.fld1 = _9.fld0.fld0.fld1;
_20.1 = 7656645914594231445_usize | 12914951217188523146_usize;
_10.fld1 = -(-114130421291094346863904616330366127325_i128);
_10.fld1 = 106704910587772563231441052263786892033_i128;
RET = _24.fld0.fld2;
_26 = _24.fld0.fld5.0;
_24.fld0.fld0.fld2 = [1347515669_u32,323000396_u32,4289210136_u32,3451149626_u32,2505665454_u32,3557630748_u32];
_2 = _18.0;
_2 = _18.0;
_20.0 = _23 << _13;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(10_usize, 6_usize, Move(_6), 5_usize, Move(_5), 13_usize, Move(_13), 1_usize, Move(_1)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(10_usize, 8_usize, Move(_8), 11_usize, Move(_11), 16_usize, Move(_16), 15_usize, Move(_15)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(10_usize, 26_usize, Move(_26), 33_usize, _33, 33_usize, _33, 33_usize, _33), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [u32; 7],mut _2: u8,mut _3: (i8, u8),mut _4: i16,mut _5: i8,mut _6: *mut *const *const u16,mut _7: [i32; 8],mut _8: ([u32; 7],),mut _9: u8,mut _10: [u64; 8],mut _11: u8,mut _12: *mut *const *const u16) -> Adt62 {
mir! {
type RET = Adt62;
let _13: bool;
let _14: u16;
let _15: Adt49;
let _16: f64;
let _17: ([u32; 7],);
let _18: isize;
let _19: f64;
let _20: [u128; 6];
let _21: f64;
let _22: (*const usize, (i8, u8), u32, u16);
let _23: f64;
let _24: isize;
let _25: i8;
let _26: Adt49;
let _27: [i8; 8];
let _28: i16;
let _29: u128;
let _30: u8;
let _31: f64;
let _32: Adt52;
let _33: f32;
let _34: [u64; 8];
let _35: ([u64; 8],);
let _36: u16;
let _37: isize;
let _38: ();
let _39: ();
{
RET.fld0.fld0.fld2 = [396667645_u32,1219994608_u32,3577777849_u32,3956677089_u32,4017410274_u32,3038404722_u32];
RET.fld0.fld0.fld1 = [218491620420386106254880447502799120344_u128];
RET.fld0.fld5 = ('\u{50a01}',);
_11 = 12224369029523758707_u64 as u8;
RET.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_6));
RET.fld0.fld3 = _5 * _5;
_12 = core::ptr::addr_of_mut!((*_6));
_1 = _8.0;
RET.fld0.fld2 = [_5,_5,_5,_5,_5,_5,_3.0,_3.0];
_9 = 16527260176497308237_u64 as u8;
_10 = [12356732107434104435_u64,18139340886473362154_u64,16145465960157343121_u64,15126868950044760672_u64,14371864965637691616_u64,14092572602083634559_u64,6466784422029619686_u64,3886407263554502839_u64];
RET.fld0.fld3 = _5 + _5;
RET.fld0.fld1 = '\u{a92a9}';
RET.fld0.fld4 = [10242166872720422842687701341248734135_u128,315255473248969171334624113543070787552_u128,62415633983507316752513353517975120270_u128,310441247817164014077713729029717153013_u128,127436558316300547191909045847563682436_u128];
RET.fld0.fld0.fld3 = 6374793764123691545_u64 as f32;
RET.fld0.fld0.fld4 = !475217495_i32;
RET.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_6));
_14 = !63289_u16;
RET.fld0.fld0.fld4 = (-1220829937_i32);
match _2 {
52 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_7 = [(-974148061_i32),1090585846_i32,(-1558134211_i32),491779997_i32,(-1228347307_i32),645565611_i32,(-202614363_i32),1888018117_i32];
_2 = !_9;
RET.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_12));
_13 = _5 <= _5;
RET.fld0.fld4 = [329996481128359635403672016300090552021_u128,339583099573132051447039651637030268732_u128,43475199217741988736723741337823919822_u128,305167882222478720530818510022639409925_u128,241493141837209945262913686782970447044_u128];
_15.fld2 = [9223372036854775807_isize,42_isize,(-91_isize),(-91_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),11_isize];
RET.fld0.fld0.fld3 = 1414941054_i32 as f32;
RET.fld0.fld5 = ('\u{85acd}',);
RET.fld0.fld4 = [56170712166313966115903153627177008635_u128,299207417182680091116861032428602742268_u128,50522015648988823587570272972653617957_u128,113873675751226977857489575348855812038_u128,85468082435947613459201578499370010338_u128];
RET.fld0.fld0.fld3 = _2 as f32;
_12 = core::ptr::addr_of_mut!((*_6));
_7 = [1954685762_i32,1143039290_i32,308712231_i32,1204625188_i32,1633397469_i32,1796707567_i32,1292836353_i32,614784216_i32];
_8.0 = [2165965454_u32,977365708_u32,3261571833_u32,1094367141_u32,3509276731_u32,3107676105_u32,2046362402_u32];
Goto(bb3)
}
bb3 = {
(*_12) = core::ptr::addr_of!(_15.fld6);
_15.fld3 = -_3.0;
_15.fld1.2.3 = !_14;
(*_12) = core::ptr::addr_of!(_15.fld6);
_15.fld4 = 0_usize;
_15.fld1.3 = _4 - _4;
_15.fld3 = !_5;
_15.fld6 = core::ptr::addr_of!(_14);
RET.fld0.fld0.fld2 = [3727261502_u32,4020449452_u32,2788041631_u32,972370053_u32,1144831961_u32,871127002_u32];
RET.fld0.fld0.fld3 = _3.1 as f32;
_18 = !9223372036854775807_isize;
_17.0 = [3629335391_u32,696129672_u32,262977725_u32,1304385362_u32,847682069_u32,3326666973_u32,2107498443_u32];
_6 = core::ptr::addr_of_mut!((*_6));
RET.fld0.fld3 = '\u{52351}' as i8;
RET.fld0.fld1 = '\u{b0e2f}';
_16 = 15049581438347490734_u64 as f64;
_15.fld1.2.1.1 = _15.fld4 as u8;
(*_12) = core::ptr::addr_of!(_15.fld6);
RET.fld0.fld0.fld1 = [56444051626871654297204913193068133313_u128];
_14 = !_15.fld1.2.3;
Call(_22.1 = fn12(_7, _14, _12, _14, _15.fld3, _17, _15.fld6, _1, _12, _3, _17.0, _2, _14, _9), bb4, UnwindUnreachable())
}
bb4 = {
_3.0 = !_5;
_15.fld1.1 = [2642117221_u32,159285393_u32,97186436_u32,894078879_u32,2423078779_u32,718824632_u32,1781658710_u32];
_20 = [10893404239301501562832426453928572355_u128,37683071795274537625193045410228024562_u128,101777880597845299742671232767586755792_u128,282458019196805729620272644019598604408_u128,234354224697502512953661663323356525840_u128,208576748031247290503027799037365351813_u128];
RET.fld0.fld0.fld3 = 42460369729973267845856437634089711720_u128 as f32;
RET.fld0.fld5 = ('\u{d7230}',);
RET.fld0.fld5 = ('\u{c48af}',);
_17.0 = [3401347960_u32,30696932_u32,2501594581_u32,3642964868_u32,1568271547_u32,2564007004_u32,2277985923_u32];
_19 = _16;
RET.fld0.fld5 = ('\u{a35a3}',);
_15.fld1.2.2 = 4000635145_u32;
_15.fld1.2.0 = core::ptr::addr_of!(_15.fld4);
Goto(bb5)
}
bb5 = {
_22.0 = core::ptr::addr_of!(_15.fld4);
_15.fld1.2.2 = !1476196232_u32;
RET.fld0.fld5 = ('\u{e15ea}',);
_6 = core::ptr::addr_of_mut!((*_12));
match _15.fld4 {
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
0 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
(*_12) = core::ptr::addr_of!(_15.fld6);
_15.fld3 = -_3.0;
_15.fld1.2.3 = !_14;
(*_12) = core::ptr::addr_of!(_15.fld6);
_15.fld4 = 0_usize;
_15.fld1.3 = _4 - _4;
_15.fld3 = !_5;
_15.fld6 = core::ptr::addr_of!(_14);
RET.fld0.fld0.fld2 = [3727261502_u32,4020449452_u32,2788041631_u32,972370053_u32,1144831961_u32,871127002_u32];
RET.fld0.fld0.fld3 = _3.1 as f32;
_18 = !9223372036854775807_isize;
_17.0 = [3629335391_u32,696129672_u32,262977725_u32,1304385362_u32,847682069_u32,3326666973_u32,2107498443_u32];
_6 = core::ptr::addr_of_mut!((*_6));
RET.fld0.fld3 = '\u{52351}' as i8;
RET.fld0.fld1 = '\u{b0e2f}';
_16 = 15049581438347490734_u64 as f64;
_15.fld1.2.1.1 = _15.fld4 as u8;
(*_12) = core::ptr::addr_of!(_15.fld6);
RET.fld0.fld0.fld1 = [56444051626871654297204913193068133313_u128];
_14 = !_15.fld1.2.3;
Call(_22.1 = fn12(_7, _14, _12, _14, _15.fld3, _17, _15.fld6, _1, _12, _3, _17.0, _2, _14, _9), bb4, UnwindUnreachable())
}
bb8 = {
_7 = [(-974148061_i32),1090585846_i32,(-1558134211_i32),491779997_i32,(-1228347307_i32),645565611_i32,(-202614363_i32),1888018117_i32];
_2 = !_9;
RET.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_12));
_13 = _5 <= _5;
RET.fld0.fld4 = [329996481128359635403672016300090552021_u128,339583099573132051447039651637030268732_u128,43475199217741988736723741337823919822_u128,305167882222478720530818510022639409925_u128,241493141837209945262913686782970447044_u128];
_15.fld2 = [9223372036854775807_isize,42_isize,(-91_isize),(-91_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),11_isize];
RET.fld0.fld0.fld3 = 1414941054_i32 as f32;
RET.fld0.fld5 = ('\u{85acd}',);
RET.fld0.fld4 = [56170712166313966115903153627177008635_u128,299207417182680091116861032428602742268_u128,50522015648988823587570272972653617957_u128,113873675751226977857489575348855812038_u128,85468082435947613459201578499370010338_u128];
RET.fld0.fld0.fld3 = _2 as f32;
_12 = core::ptr::addr_of_mut!((*_6));
_7 = [1954685762_i32,1143039290_i32,308712231_i32,1204625188_i32,1633397469_i32,1796707567_i32,1292836353_i32,614784216_i32];
_8.0 = [2165965454_u32,977365708_u32,3261571833_u32,1094367141_u32,3509276731_u32,3107676105_u32,2046362402_u32];
Goto(bb3)
}
bb9 = {
(*_12) = core::ptr::addr_of!(_15.fld6);
RET.fld0.fld5 = ('\u{c5528}',);
_22.0 = core::ptr::addr_of!(_15.fld4);
RET.fld0.fld0.fld2 = [_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2];
_15.fld1.2.1.0 = _22.1.0 ^ _5;
_4 = _15.fld1.3 & _15.fld1.3;
RET.fld0.fld5.0 = '\u{b9f33}';
_17.0 = [_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2];
_3 = _22.1;
_15.fld1.0 = _15.fld1.2.3;
_25 = (-148579817712320545122936896756036792293_i128) as i8;
Call(RET.fld0.fld1 = fn14(_15.fld1.2, _5, _20, _15.fld1.2.2, _9, _3.0, _6, _17, _15.fld3, _7, _15.fld1.2.3, _3.0, _15.fld1.3, _15.fld1.2.1, _15.fld1.3), bb10, UnwindUnreachable())
}
bb10 = {
_15.fld2 = [_18,_18,_18,_18,_18,_18,_18];
_26.fld4 = !_15.fld4;
_26.fld1.3 = _4;
match _15.fld4 {
1 => bb2,
2 => bb7,
3 => bb5,
0 => bb12,
_ => bb11
}
}
bb11 = {
(*_12) = core::ptr::addr_of!(_15.fld6);
_15.fld3 = -_3.0;
_15.fld1.2.3 = !_14;
(*_12) = core::ptr::addr_of!(_15.fld6);
_15.fld4 = 0_usize;
_15.fld1.3 = _4 - _4;
_15.fld3 = !_5;
_15.fld6 = core::ptr::addr_of!(_14);
RET.fld0.fld0.fld2 = [3727261502_u32,4020449452_u32,2788041631_u32,972370053_u32,1144831961_u32,871127002_u32];
RET.fld0.fld0.fld3 = _3.1 as f32;
_18 = !9223372036854775807_isize;
_17.0 = [3629335391_u32,696129672_u32,262977725_u32,1304385362_u32,847682069_u32,3326666973_u32,2107498443_u32];
_6 = core::ptr::addr_of_mut!((*_6));
RET.fld0.fld3 = '\u{52351}' as i8;
RET.fld0.fld1 = '\u{b0e2f}';
_16 = 15049581438347490734_u64 as f64;
_15.fld1.2.1.1 = _15.fld4 as u8;
(*_12) = core::ptr::addr_of!(_15.fld6);
RET.fld0.fld0.fld1 = [56444051626871654297204913193068133313_u128];
_14 = !_15.fld1.2.3;
Call(_22.1 = fn12(_7, _14, _12, _14, _15.fld3, _17, _15.fld6, _1, _12, _3, _17.0, _2, _14, _9), bb4, UnwindUnreachable())
}
bb12 = {
_26.fld0 = [_25,_15.fld1.2.1.0,_3.0,_15.fld1.2.1.0,_5,_22.1.0,_22.1.0,_22.1.0];
RET.fld0.fld2 = [_3.0,_15.fld1.2.1.0,_15.fld1.2.1.0,_22.1.0,_22.1.0,_15.fld1.2.1.0,_22.1.0,_22.1.0];
_26.fld0 = [_15.fld1.2.1.0,_25,_15.fld1.2.1.0,_3.0,_15.fld3,_15.fld1.2.1.0,_5,_3.0];
_15.fld5 = [132115478680817123064550860383280370422_u128];
RET.fld0.fld3 = !_22.1.0;
RET.fld0.fld3 = _25;
_12 = core::ptr::addr_of_mut!((*_6));
_26.fld1.0 = _15.fld1.2.3 & _14;
_15.fld6 = core::ptr::addr_of!(_15.fld1.0);
(*_6) = core::ptr::addr_of!(_15.fld6);
_26.fld6 = core::ptr::addr_of!(_15.fld1.0);
_3.0 = -_22.1.0;
RET.fld0.fld1 = '\u{64b3}';
Goto(bb13)
}
bb13 = {
_21 = _16 + _16;
_26.fld1.2.1.0 = _15.fld1.3 as i8;
_26.fld1 = (_14, _8.0, _15.fld1.2, _4);
_18 = -(-93_isize);
_26.fld1.1 = [_26.fld1.2.2,_15.fld1.2.2,_26.fld1.2.2,_15.fld1.2.2,_15.fld1.2.2,_26.fld1.2.2,_26.fld1.2.2];
_24 = !_18;
RET.fld0.fld0.fld1 = [173784593090500080722195518241969688416_u128];
_23 = -_21;
_26.fld1.3 = _4 | _4;
_22.1.1 = _26.fld1.2.1.1 / 10_u8;
_26.fld0 = [_26.fld1.2.1.0,_3.0,_26.fld1.2.1.0,_15.fld1.2.1.0,_22.1.0,_15.fld1.2.1.0,_15.fld1.2.1.0,_26.fld1.2.1.0];
_32.fld5.fld3.2 = (_22.0, _22.1, _26.fld1.2.2, _15.fld1.0);
_32.fld6 = core::ptr::addr_of!(_33);
(*_6) = core::ptr::addr_of!(_26.fld6);
Goto(bb14)
}
bb14 = {
_22.2 = !_15.fld1.2.2;
RET.fld0.fld1 = '\u{882e9}';
_26.fld1 = (_32.fld5.fld3.2.3, _8.0, _32.fld5.fld3.2, _4);
_32.fld5.fld1.3 = '\u{4a768}';
_32.fld1 = (_13,);
_32.fld4 = core::ptr::addr_of_mut!(_23);
_27 = [_3.0,_22.1.0,_32.fld5.fld3.2.1.0,_26.fld1.2.1.0,_15.fld3,_15.fld1.2.1.0,_32.fld5.fld3.2.1.0,_15.fld1.2.1.0];
_32.fld3 = (_23,);
_19 = -_32.fld3.0;
RET.fld0.fld0.fld1 = [141892997926709314596155701836673724386_u128];
_15.fld1.2.3 = _15.fld1.0;
_32.fld5.fld3 = _15.fld1;
_32.fld5.fld3.3 = _15.fld1.3;
RET.fld0.fld0.fld4 = !1083399964_i32;
_8 = (_1,);
_32.fld2 = 6065713055575633079_u64;
_26 = Adt49 { fld0: _27,fld1: _32.fld5.fld3,fld2: _15.fld2,fld3: _22.1.0,fld4: _15.fld4,fld5: _15.fld5,fld6: _15.fld6 };
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(11_usize, 7_usize, Move(_7), 25_usize, Move(_25), 5_usize, Move(_5), 14_usize, Move(_14)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(11_usize, 10_usize, Move(_10), 13_usize, Move(_13), 17_usize, Move(_17), 20_usize, Move(_20)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(11_usize, 8_usize, Move(_8), 39_usize, _39, 39_usize, _39, 39_usize, _39), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [i32; 8],mut _2: u16,mut _3: *mut *const *const u16,mut _4: u16,mut _5: i8,mut _6: ([u32; 7],),mut _7: *const u16,mut _8: [u32; 7],mut _9: *mut *const *const u16,mut _10: (i8, u8),mut _11: [u32; 7],mut _12: u8,mut _13: u16,mut _14: u8) -> (i8, u8) {
mir! {
type RET = (i8, u8);
let _15: u128;
let _16: char;
let _17: f32;
let _18: Adt51;
let _19: [u32; 6];
let _20: bool;
let _21: [isize; 7];
let _22: usize;
let _23: *mut f64;
let _24: Adt53;
let _25: isize;
let _26: u128;
let _27: [u128; 5];
let _28: f64;
let _29: f64;
let _30: [i32; 8];
let _31: [u32; 7];
let _32: (u128, (i8, u8), i8, f64, *mut f64);
let _33: [i32; 8];
let _34: Adt62;
let _35: [u32; 7];
let _36: f64;
let _37: Adt47;
let _38: [u32; 6];
let _39: usize;
let _40: (bool,);
let _41: ();
let _42: ();
{
RET.0 = 58_isize as i8;
RET.1 = _10.1;
_14 = _10.1 >> (*_7);
RET = _10;
_10.1 = !_14;
_18.fld1.0 = true;
_7 = core::ptr::addr_of!(_2);
_18.fld4.fld1.2.2 = !2731144685_u32;
_17 = 2_usize as f32;
_18.fld2 = _18.fld1.0 as u32;
_5 = _13 as i8;
_18.fld4.fld1.1 = _11;
Goto(bb1)
}
bb1 = {
_18.fld4.fld1.0 = 972268670_i32 as u16;
(*_3) = core::ptr::addr_of!(_7);
_18.fld4.fld3 = _5 & _10.0;
_17 = 4361665728895376957_u64 as f32;
RET = (_10.0, _10.1);
(*_7) = _18.fld1.0 as u16;
(*_7) = (-1782444418_i32) as u16;
_19 = [_18.fld4.fld1.2.2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld2];
RET.0 = -_18.fld4.fld3;
_20 = _18.fld4.fld1.0 == _4;
RET.0 = -_18.fld4.fld3;
_18.fld4.fld1.2.1.1 = _12;
_18.fld4.fld0 = [_10.0,_18.fld4.fld3,_18.fld4.fld3,_10.0,_18.fld4.fld3,_5,_18.fld4.fld3,_18.fld4.fld3];
RET.0 = !_18.fld4.fld3;
Goto(bb2)
}
bb2 = {
_17 = 7_usize as f32;
_18.fld3 = [_10.0,_18.fld4.fld3,_18.fld4.fld3,_10.0];
(*_7) = (-162179947_i32) as u16;
_22 = 4_usize >> _13;
_18.fld4.fld1.2.3 = _2;
(*_9) = core::ptr::addr_of!(_7);
_12 = _10.1 + _18.fld4.fld1.2.1.1;
_18.fld4.fld3 = _18.fld2 as i8;
_15 = 118951604383430040347314094096104128001_u128 % 229199192899224435087912536588507117931_u128;
_18.fld4.fld2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_18.fld4.fld1.1 = [_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2];
_10.1 = _14 - _12;
_18.fld4.fld4 = _22 - _22;
_18.fld4.fld1.2.1 = (_18.fld4.fld3, _12);
_25 = (-9223372036854775808_isize);
_22 = !_18.fld4.fld4;
RET = _10;
Goto(bb3)
}
bb3 = {
RET.0 = -_10.0;
_18.fld4.fld3 = _10.0;
_18.fld2 = _25 as u32;
_24.fld0 = 635040114332157814_i64;
_19 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2];
RET.0 = (-144511665060900564776055310773627954758_i128) as i8;
_25 = 9223372036854775807_isize;
_18.fld1.0 = _20 ^ _20;
Goto(bb4)
}
bb4 = {
RET.0 = _18.fld4.fld3;
_2 = _18.fld4.fld1.2.3;
_1 = [822615690_i32,(-1234278544_i32),999317623_i32,1403642213_i32,906718900_i32,(-575319521_i32),753645785_i32,(-2127186048_i32)];
_18.fld5 = core::ptr::addr_of!(_22);
_18.fld4.fld6 = _7;
_9 = core::ptr::addr_of_mut!((*_3));
_26 = _14 as u128;
match _25 {
9223372036854775807 => bb5,
_ => bb3
}
}
bb5 = {
_7 = core::ptr::addr_of!((*_7));
_18.fld1 = (_20,);
(*_7) = _18.fld4.fld1.0 - _18.fld4.fld1.0;
RET.1 = _12 + _18.fld4.fld1.2.1.1;
_32.1.1 = _10.1;
_18.fld0 = core::ptr::addr_of_mut!((*_9));
_9 = core::ptr::addr_of_mut!((*_9));
_18.fld4.fld1.3 = -18959_i16;
_18.fld1.0 = _20;
_5 = -_10.0;
_2 = _13;
_18.fld4.fld1.2.1.0 = _18.fld4.fld3 << _14;
_1 = [1191018442_i32,(-526721133_i32),(-974779169_i32),(-334853177_i32),(-719048583_i32),473777994_i32,(-1419699885_i32),(-1990664902_i32)];
_34.fld0.fld2 = _18.fld4.fld0;
_34.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_9));
Goto(bb6)
}
bb6 = {
_32.1 = _10;
(*_9) = core::ptr::addr_of!(_18.fld4.fld6);
_10.1 = !_14;
_34.fld0.fld0.fld3 = _17;
_34.fld0.fld0.fld1 = [_26];
_18.fld4.fld1.3 = _32.1.1 as i16;
_10 = (_18.fld4.fld3, _32.1.1);
_16 = '\u{3c63}';
_2 = _4;
_21 = [_25,_25,_25,_25,_25,_25,_25];
_34.fld0.fld2 = _18.fld4.fld0;
_26 = _16 as u128;
_2 = !_13;
Goto(bb7)
}
bb7 = {
(*_7) = _18.fld4.fld1.2.3 << _18.fld4.fld1.2.1.0;
_18.fld3 = [_10.0,_10.0,_18.fld4.fld1.2.1.0,_18.fld4.fld1.2.1.0];
Call(_8 = fn13(_34.fld0.fld0.fld3, _10.0, _4, _6, _25, _18.fld4.fld1.1, (*_9)), bb8, UnwindUnreachable())
}
bb8 = {
_30 = [(-44773228_i32),492730745_i32,(-1673141493_i32),(-307381229_i32),1357385503_i32,(-2055008889_i32),(-1502726747_i32),1315637639_i32];
_9 = core::ptr::addr_of_mut!((*_9));
_18.fld4.fld1.0 = !(*_7);
RET.1 = !_12;
_18.fld2 = _18.fld4.fld1.2.2;
_18.fld3 = [_18.fld4.fld3,_18.fld4.fld1.2.1.0,_32.1.0,_32.1.0];
_14 = !_32.1.1;
_18.fld4.fld1.2.1 = (_5, _32.1.1);
_18.fld4.fld4 = !_22;
_24.fld1 = !_15;
_32.0 = _15;
_34.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_3));
_34.fld0.fld1 = _16;
_34.fld0.fld4 = [_24.fld1,_15,_32.0,_24.fld1,_24.fld1];
RET.0 = _5 * _18.fld4.fld3;
_32.3 = _5 as f64;
_18.fld1.0 = _20;
_18.fld4.fld1.1 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2];
_18.fld4.fld1.2.1.0 = (-486446638_i32) as i8;
_30 = [(-308708502_i32),450422036_i32,(-2072464401_i32),389913370_i32,(-798783784_i32),(-1960203298_i32),(-1997882037_i32),(-692503008_i32)];
_23 = core::ptr::addr_of_mut!(_32.3);
_21 = [_25,_25,_25,_25,_25,_25,_25];
_33 = [1802629214_i32,1243209750_i32,(-331669936_i32),520858136_i32,(-634872712_i32),(-740693264_i32),2059732821_i32,474257919_i32];
RET.1 = !_10.1;
_24 = Adt53 { fld0: (-13596362323238117_i64),fld1: _32.0,fld2: _34.fld0.fld0.fld1 };
_8 = [_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2,_18.fld4.fld1.2.2];
Goto(bb9)
}
bb9 = {
_34.fld0.fld5.0 = _16;
match _24.fld0 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
340282366920938463463361011069444973339 => bb17,
_ => bb16
}
}
bb10 = {
_30 = [(-44773228_i32),492730745_i32,(-1673141493_i32),(-307381229_i32),1357385503_i32,(-2055008889_i32),(-1502726747_i32),1315637639_i32];
_9 = core::ptr::addr_of_mut!((*_9));
_18.fld4.fld1.0 = !(*_7);
RET.1 = !_12;
_18.fld2 = _18.fld4.fld1.2.2;
_18.fld3 = [_18.fld4.fld3,_18.fld4.fld1.2.1.0,_32.1.0,_32.1.0];
_14 = !_32.1.1;
_18.fld4.fld1.2.1 = (_5, _32.1.1);
_18.fld4.fld4 = !_22;
_24.fld1 = !_15;
_32.0 = _15;
_34.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_3));
_34.fld0.fld1 = _16;
_34.fld0.fld4 = [_24.fld1,_15,_32.0,_24.fld1,_24.fld1];
RET.0 = _5 * _18.fld4.fld3;
_32.3 = _5 as f64;
_18.fld1.0 = _20;
_18.fld4.fld1.1 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2];
_18.fld4.fld1.2.1.0 = (-486446638_i32) as i8;
_30 = [(-308708502_i32),450422036_i32,(-2072464401_i32),389913370_i32,(-798783784_i32),(-1960203298_i32),(-1997882037_i32),(-692503008_i32)];
_23 = core::ptr::addr_of_mut!(_32.3);
_21 = [_25,_25,_25,_25,_25,_25,_25];
_33 = [1802629214_i32,1243209750_i32,(-331669936_i32),520858136_i32,(-634872712_i32),(-740693264_i32),2059732821_i32,474257919_i32];
RET.1 = !_10.1;
_24 = Adt53 { fld0: (-13596362323238117_i64),fld1: _32.0,fld2: _34.fld0.fld0.fld1 };
_8 = [_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2,_18.fld4.fld1.2.2];
Goto(bb9)
}
bb11 = {
(*_7) = _18.fld4.fld1.2.3 << _18.fld4.fld1.2.1.0;
_18.fld3 = [_10.0,_10.0,_18.fld4.fld1.2.1.0,_18.fld4.fld1.2.1.0];
Call(_8 = fn13(_34.fld0.fld0.fld3, _10.0, _4, _6, _25, _18.fld4.fld1.1, (*_9)), bb8, UnwindUnreachable())
}
bb12 = {
_32.1 = _10;
(*_9) = core::ptr::addr_of!(_18.fld4.fld6);
_10.1 = !_14;
_34.fld0.fld0.fld3 = _17;
_34.fld0.fld0.fld1 = [_26];
_18.fld4.fld1.3 = _32.1.1 as i16;
_10 = (_18.fld4.fld3, _32.1.1);
_16 = '\u{3c63}';
_2 = _4;
_21 = [_25,_25,_25,_25,_25,_25,_25];
_34.fld0.fld2 = _18.fld4.fld0;
_26 = _16 as u128;
_2 = !_13;
Goto(bb7)
}
bb13 = {
_7 = core::ptr::addr_of!((*_7));
_18.fld1 = (_20,);
(*_7) = _18.fld4.fld1.0 - _18.fld4.fld1.0;
RET.1 = _12 + _18.fld4.fld1.2.1.1;
_32.1.1 = _10.1;
_18.fld0 = core::ptr::addr_of_mut!((*_9));
_9 = core::ptr::addr_of_mut!((*_9));
_18.fld4.fld1.3 = -18959_i16;
_18.fld1.0 = _20;
_5 = -_10.0;
_2 = _13;
_18.fld4.fld1.2.1.0 = _18.fld4.fld3 << _14;
_1 = [1191018442_i32,(-526721133_i32),(-974779169_i32),(-334853177_i32),(-719048583_i32),473777994_i32,(-1419699885_i32),(-1990664902_i32)];
_34.fld0.fld2 = _18.fld4.fld0;
_34.fld0.fld0.fld0 = core::ptr::addr_of_mut!((*_9));
Goto(bb6)
}
bb14 = {
RET.0 = _18.fld4.fld3;
_2 = _18.fld4.fld1.2.3;
_1 = [822615690_i32,(-1234278544_i32),999317623_i32,1403642213_i32,906718900_i32,(-575319521_i32),753645785_i32,(-2127186048_i32)];
_18.fld5 = core::ptr::addr_of!(_22);
_18.fld4.fld6 = _7;
_9 = core::ptr::addr_of_mut!((*_3));
_26 = _14 as u128;
match _25 {
9223372036854775807 => bb5,
_ => bb3
}
}
bb15 = {
RET.0 = -_10.0;
_18.fld4.fld3 = _10.0;
_18.fld2 = _25 as u32;
_24.fld0 = 635040114332157814_i64;
_19 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2];
RET.0 = (-144511665060900564776055310773627954758_i128) as i8;
_25 = 9223372036854775807_isize;
_18.fld1.0 = _20 ^ _20;
Goto(bb4)
}
bb16 = {
_17 = 7_usize as f32;
_18.fld3 = [_10.0,_18.fld4.fld3,_18.fld4.fld3,_10.0];
(*_7) = (-162179947_i32) as u16;
_22 = 4_usize >> _13;
_18.fld4.fld1.2.3 = _2;
(*_9) = core::ptr::addr_of!(_7);
_12 = _10.1 + _18.fld4.fld1.2.1.1;
_18.fld4.fld3 = _18.fld2 as i8;
_15 = 118951604383430040347314094096104128001_u128 % 229199192899224435087912536588507117931_u128;
_18.fld4.fld2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_18.fld4.fld1.1 = [_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2];
_10.1 = _14 - _12;
_18.fld4.fld4 = _22 - _22;
_18.fld4.fld1.2.1 = (_18.fld4.fld3, _12);
_25 = (-9223372036854775808_isize);
_22 = !_18.fld4.fld4;
RET = _10;
Goto(bb3)
}
bb17 = {
_30 = [1518674266_i32,(-1841282636_i32),1271199775_i32,563853177_i32,1430267212_i32,(-129849497_i32),369759276_i32,(-110243812_i32)];
_18.fld4.fld1.2.3 = !_2;
_29 = (*_23) / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000472909818495157_f64;
_18.fld4.fld1.2.2 = _18.fld2;
_32.4 = core::ptr::addr_of_mut!(_32.3);
_6.0 = [_18.fld2,_18.fld4.fld1.2.2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2];
_18.fld4.fld1.2.1.1 = _32.3 as u8;
_18.fld4.fld2 = _21;
_12 = _18.fld4.fld1.2.1.1 / 214_u8;
(*_9) = core::ptr::addr_of!(_7);
(*_23) = _24.fld0 as f64;
_18.fld4.fld1.2.1.1 = _10.1 * _32.1.1;
_24.fld1 = _18.fld4.fld1.3 as u128;
_38 = [_18.fld2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2,_18.fld4.fld1.2.2,_18.fld4.fld1.2.2];
_37.fld2 = [_25,_25,_25,_25,_25,_25,_25];
_37.fld5 = [_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld4.fld1.2.2];
_37.fld6 = (-113388016556939694267712211738798564321_i128) as f32;
_31 = _11;
_32.1.0 = _5;
_30 = _1;
_18.fld4.fld2 = [_25,_25,_25,_25,_25,_25,_25];
(*_3) = core::ptr::addr_of!(_18.fld4.fld6);
_34.fld0.fld3 = _32.1.0 << _18.fld4.fld1.2.1.1;
_18.fld4.fld0 = [_34.fld0.fld3,_32.1.0,_34.fld0.fld3,_10.0,_34.fld0.fld3,_18.fld4.fld1.2.1.0,_34.fld0.fld3,_34.fld0.fld3];
_32.1 = (_10.0, _10.1);
_37.fld5 = [_18.fld4.fld1.2.2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2,_18.fld2,_18.fld4.fld1.2.2,_18.fld2];
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(12_usize, 8_usize, Move(_8), 31_usize, Move(_31), 10_usize, Move(_10), 5_usize, Move(_5)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(12_usize, 16_usize, Move(_16), 2_usize, Move(_2), 6_usize, Move(_6), 21_usize, Move(_21)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(12_usize, 26_usize, Move(_26), 1_usize, Move(_1), 4_usize, Move(_4), 42_usize, _42), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: f32,mut _2: i8,mut _3: u16,mut _4: ([u32; 7],),mut _5: isize,mut _6: [u32; 7],mut _7: *const *const u16) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _8: [i8; 8];
let _9: i32;
let _10: isize;
let _11: u128;
let _12: char;
let _13: f32;
let _14: ([u32; 7],);
let _15: u32;
let _16: char;
let _17: Adt55;
let _18: [isize; 1];
let _19: u8;
let _20: Adt53;
let _21: usize;
let _22: [u128; 6];
let _23: [u128; 5];
let _24: (u128, (i8, u8), i8, f64, *mut f64);
let _25: *mut f64;
let _26: ([u64; 8],);
let _27: f64;
let _28: ();
let _29: ();
{
(*_7) = core::ptr::addr_of!(_3);
_7 = core::ptr::addr_of!((*_7));
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = 3319_u16;
_4 = (_6,);
(*_7) = core::ptr::addr_of!(_3);
_2 = _5 as i8;
RET = [819323064_u32,2199152673_u32,1724139003_u32,1091088504_u32,1139842604_u32,2119235892_u32,2511321312_u32];
_6 = [2847724296_u32,2400418726_u32,1243114962_u32,2323931739_u32,46850009_u32,2820176086_u32,2772652190_u32];
_6 = [1928820095_u32,3309562266_u32,2592097496_u32,3583671428_u32,3820075250_u32,3419892725_u32,1469657238_u32];
_1 = (-134193133241718941681487192167119907399_i128) as f32;
RET = [3569020137_u32,2807967770_u32,3242059560_u32,2547173448_u32,53063101_u32,1049073556_u32,2033476243_u32];
_4.0 = [2346550424_u32,2738707347_u32,2097007058_u32,1467459129_u32,2079075823_u32,2668812604_u32,3773672423_u32];
_3 = !22512_u16;
_12 = '\u{68ee4}';
_7 = core::ptr::addr_of!((*_7));
_5 = 9223372036854775807_isize;
_10 = -_5;
_11 = !140592974944472554025048312155636848946_u128;
Goto(bb10)
}
bb10 = {
_3 = !50083_u16;
_6 = _4.0;
_9 = 1764878904_i32 * (-567300838_i32);
_6 = _4.0;
_4.0 = _6;
_7 = core::ptr::addr_of!((*_7));
_6 = [1812310835_u32,955307150_u32,965689255_u32,553236341_u32,3140388129_u32,4216456274_u32,969306791_u32];
_3 = 17484904249388109397_usize as u16;
_3 = 11810_u16 / 45265_u16;
RET = [2123047862_u32,595881575_u32,3881827950_u32,3692215868_u32,3020988651_u32,1384191589_u32,3925761493_u32];
RET = [1154644236_u32,1614366928_u32,920449890_u32,2368527369_u32,3060559936_u32,1090156263_u32,972687687_u32];
_14 = (_6,);
_4.0 = [2372193641_u32,2821105930_u32,1006447117_u32,976122080_u32,3938710518_u32,2570900644_u32,2366016568_u32];
_5 = _10;
_12 = '\u{2d13e}';
_2 = !(-34_i8);
Goto(bb11)
}
bb11 = {
_13 = _9 as f32;
_17.fld0 = !false;
(*_7) = core::ptr::addr_of!(_3);
_13 = _1 - _1;
_18 = [_5];
RET = [960401549_u32,1861971302_u32,305660134_u32,1602702545_u32,2323095614_u32,470596747_u32,1553297609_u32];
_8 = [_2,_2,_2,_2,_2,_2,_2,_2];
_19 = _1 as u8;
_9 = (-1164185203_i32);
_12 = '\u{104802}';
_2 = 70_i8 ^ 119_i8;
_14.0 = [925486111_u32,2078448799_u32,142161591_u32,3964461844_u32,1858518162_u32,272969976_u32,4131813397_u32];
RET = [2719674755_u32,318959171_u32,1796398513_u32,2799030047_u32,1142979600_u32,690269136_u32,2259878727_u32];
_4.0 = _6;
Call(_20.fld1 = core::intrinsics::bswap(_11), bb12, UnwindUnreachable())
}
bb12 = {
_14 = _4;
_19 = 252_u8 << _10;
_14.0 = _4.0;
_2 = -104_i8;
(*_7) = core::ptr::addr_of!(_3);
_16 = _12;
_20.fld0 = 1213484266173422272_i64 ^ (-4632269144980773930_i64);
_8 = [_2,_2,_2,_2,_2,_2,_2,_2];
_3 = _17.fld0 as u16;
_24.2 = _2 << _11;
_24.1.0 = !_24.2;
_4.0 = [648815739_u32,3364120155_u32,2978917833_u32,1206155519_u32,3951417706_u32,1775894714_u32,159949450_u32];
_21 = 7938373236095596628_usize + 10111638563991290741_usize;
_11 = _13 as u128;
_25 = core::ptr::addr_of_mut!(_24.3);
_14.0 = _6;
(*_25) = _11 as f64;
_24.0 = _11;
_24.4 = _25;
_12 = _16;
_5 = -_10;
match _9 {
0 => bb9,
1 => bb4,
2 => bb5,
3 => bb13,
4 => bb14,
340282366920938463463374607430604026253 => bb16,
_ => bb15
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_13 = _3 as f32;
_15 = 2657858161_u32 + 1327904122_u32;
_14.0 = [_15,_15,_15,_15,_15,_15,_15];
_26.0 = [17968506478841324298_u64,6416295764941728001_u64,13575441854852339496_u64,12777015269027214174_u64,16075291119417942091_u64,3235291997522220611_u64,11521823655910815111_u64,3119923707619808855_u64];
RET = [_15,_15,_15,_15,_15,_15,_15];
_25 = core::ptr::addr_of_mut!(_27);
_16 = _12;
_4.0 = [_15,_15,_15,_15,_15,_15,_15];
_5 = _10 >> _11;
_16 = _12;
_24.0 = _19 as u128;
Goto(bb17)
}
bb17 = {
Call(_28 = dump_var(13_usize, 21_usize, Move(_21), 26_usize, Move(_26), 2_usize, Move(_2), 14_usize, Move(_14)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_28 = dump_var(13_usize, 19_usize, Move(_19), 6_usize, Move(_6), 8_usize, Move(_8), 11_usize, Move(_11)), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: (*const usize, (i8, u8), u32, u16),mut _2: i8,mut _3: [u128; 6],mut _4: u32,mut _5: u8,mut _6: i8,mut _7: *mut *const *const u16,mut _8: ([u32; 7],),mut _9: i8,mut _10: [i32; 8],mut _11: u16,mut _12: i8,mut _13: i16,mut _14: (i8, u8),mut _15: i16) -> char {
mir! {
type RET = char;
let _16: Adt50;
let _17: Adt61;
let _18: Adt59;
let _19: i8;
let _20: [i8; 4];
let _21: isize;
let _22: [u32; 7];
let _23: [u64; 8];
let _24: isize;
let _25: Adt55;
let _26: Adt63;
let _27: (u128, (i8, u8), i8, f64, *mut f64);
let _28: isize;
let _29: isize;
let _30: Adt56;
let _31: (i8, u8);
let _32: Adt50;
let _33: [isize; 7];
let _34: *mut *const *const u16;
let _35: Adt60;
let _36: ([u64; 8],);
let _37: u16;
let _38: *mut *const i64;
let _39: (i8, u8);
let _40: Adt56;
let _41: ();
let _42: ();
{
_1.1 = (_12, _5);
_1.3 = _11 % 3695_u16;
RET = '\u{bec73}';
_8.0 = [_1.2,_1.2,_1.2,_4,_1.2,_1.2,_1.2];
_4 = _1.2;
_3 = [310848861059861499907443644481560033161_u128,12478694107311048530669079016701990782_u128,152178867365320792581716305545603824762_u128,60720524367174728040430348520892901049_u128,29013323321265261520587009035702137413_u128,128490689357652106541947570090913954206_u128];
_1.3 = !_11;
_13 = 78987781428276021468197202483514745616_u128 as i16;
RET = '\u{ef76f}';
_15 = -_13;
_7 = core::ptr::addr_of_mut!((*_7));
_7 = core::ptr::addr_of_mut!((*_7));
_1.3 = _11;
_14.0 = _6 | _12;
_1.1 = (_14.0, _14.1);
_16 = Adt50 { fld0: _10,fld1: (-93656618139326258668323326359589707966_i128) };
_17.fld0.fld3.fld1 = '\u{2eecf}';
_17.fld4.3 = _11;
_17.fld0.fld3.fld1 = '\u{47ff2}';
_16.fld1 = -(-40871536256537800850494557474636081116_i128);
_1.3 = _16.fld1 as u16;
_17.fld0.fld3.fld0.fld1 = [172066005255263367983188579066227248020_u128];
Goto(bb1)
}
bb1 = {
_16.fld1 = _1.3 as i128;
_17.fld2 = -_16.fld1;
_18.fld0.fld4 = _1.1.0 as i32;
_8.0 = [_1.2,_4,_1.2,_1.2,_1.2,_1.2,_4];
_18.fld2 = [_12,_12,_1.1.0,_14.0,_2,_2,_1.1.0,_6];
_2 = _17.fld4.3 as i8;
_17.fld0.fld3.fld4 = [222515618203613256244933460114828461691_u128,242101667963700496482710650503288665526_u128,111417055609959536714087395427546127640_u128,127962555505565533919971697943503500703_u128,133976748102184207848291600066006906845_u128];
_17.fld1.1.1 = 6073253913908186615_u64 as u8;
_13 = _16.fld1 as i16;
_17.fld0.fld3.fld5.0 = _17.fld0.fld3.fld1;
_14.1 = _17.fld1.1.1 ^ _5;
_17.fld4.2 = _1.2 & _4;
_17.fld1.2 = _17.fld2 as i8;
_17.fld0.fld2 = [_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4];
_17.fld4.0 = _1.0;
_17.fld0.fld3.fld0.fld3 = 6_usize as f32;
_18.fld0.fld0 = _7;
_18.fld0.fld4 = 613089946_i32;
_17.fld0.fld3.fld0.fld1 = [12155535703725819247049411811246287981_u128];
_8.0 = [_4,_17.fld4.2,_17.fld4.2,_1.2,_1.2,_17.fld4.2,_17.fld4.2];
_18.fld1 = _17.fld0.fld3.fld1;
_17.fld0.fld2 = [_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4];
match _18.fld0.fld4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
613089946 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_17.fld4.3 = _11;
_17.fld0.fld0 = _18.fld0.fld4 as u16;
_17.fld4.1.1 = _14.1;
_18.fld4 = _17.fld0.fld3.fld4;
_18.fld0.fld1 = _17.fld0.fld3.fld0.fld1;
_18.fld0.fld2 = [_1.2,_1.2,_4,_17.fld4.2,_4,_17.fld4.2];
_22 = [_4,_17.fld4.2,_4,_17.fld4.2,_1.2,_1.2,_4];
_17.fld4.1 = _1.1;
_17.fld0.fld3.fld0.fld4 = _18.fld0.fld4;
_17.fld2 = _1.1.1 as i128;
_18.fld5 = _17.fld0.fld3.fld5;
_1.3 = !_17.fld4.3;
_21 = !(-51_isize);
_1.2 = _17.fld0.fld3.fld0.fld3 as u32;
_17.fld1.4 = core::ptr::addr_of_mut!(_17.fld1.3);
match _18.fld0.fld4 {
0 => bb4,
613089946 => bb9,
_ => bb7
}
}
bb9 = {
_17.fld0.fld3.fld1 = _17.fld0.fld3.fld5.0;
_24 = !_21;
_18.fld4 = [164899007727551274986822095414444226953_u128,201185017168760155128382350628215323340_u128,198049874465430379056671222803946543593_u128,258280589797166863493025243046491139701_u128,1238284093720931567390785946886658740_u128];
_18.fld0.fld1 = _17.fld0.fld3.fld0.fld1;
_27.1.1 = _14.1 | _14.1;
_17.fld4.1.0 = _14.0;
_25.fld0 = !false;
_20 = [_1.1.0,_14.0,_17.fld4.1.0,_14.0];
_18.fld0.fld2 = [_17.fld4.2,_17.fld4.2,_4,_17.fld4.2,_4,_4];
_12 = _6 | _14.0;
_18.fld1 = _18.fld5.0;
_17.fld0.fld2 = [_17.fld0.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4,_18.fld0.fld4,_17.fld0.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4];
_26 = Adt63 { fld0: _17.fld0.fld3.fld0.fld4,fld1: _18.fld2 };
_17.fld4.1 = _1.1;
_17.fld1.1.0 = !_17.fld4.1.0;
_17.fld1.4 = core::ptr::addr_of_mut!(_27.3);
_14.0 = _1.1.0 | _1.1.0;
_30.fld2.fld1 = -_17.fld2;
_27.1.0 = -_14.0;
_17.fld0.fld2 = [_18.fld0.fld4,_26.fld0,_17.fld0.fld3.fld0.fld4,_26.fld0,_18.fld0.fld4,_17.fld0.fld3.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4];
_6 = _27.1.0 + _17.fld1.1.0;
_17.fld1.3 = 244261592594472794238462305135146438121_u128 as f64;
_18.fld0.fld3 = _30.fld2.fld1 as f32;
_10 = _16.fld0;
_8 = (_22,);
Goto(bb10)
}
bb10 = {
_17.fld0.fld3.fld4 = [209746812887548683162779203181645132167_u128,241301437735041986195889639549580597817_u128,170434608590990673021812180085985601806_u128,284254372791296383541704443389886863849_u128,201863233174534166911514450610329879710_u128];
_17.fld0.fld3.fld2 = [_17.fld4.1.0,_12,_17.fld4.1.0,_6,_14.0,_27.1.0,_27.1.0,_27.1.0];
_27.1.1 = _17.fld1.1.1;
_29 = _24;
_17.fld0.fld2 = [_26.fld0,_17.fld0.fld3.fld0.fld4,_26.fld0,_26.fld0,_18.fld0.fld4,_17.fld0.fld3.fld0.fld4,_26.fld0,_18.fld0.fld4];
_17.fld0.fld3.fld2 = _26.fld1;
_17.fld0.fld3.fld0.fld3 = (-7260437159383513609_i64) as f32;
_27.3 = _17.fld1.1.0 as f64;
_17.fld0.fld1 = [_21,_21,_21,_29,_29,_24,_21];
_1.1 = (_6, _14.1);
_27.0 = !187308561328212697629899740042993534599_u128;
_15 = _13;
_17.fld0.fld3 = Adt59 { fld0: Move(_18.fld0),fld1: _18.fld1,fld2: _26.fld1,fld3: _6,fld4: _18.fld4,fld5: _18.fld5 };
_17.fld0.fld3.fld4 = [_27.0,_27.0,_27.0,_27.0,_27.0];
Call(_17.fld1.1 = fn15(_17.fld0.fld3.fld0.fld4, _26.fld0, _17.fld0.fld3.fld1, _16.fld0, _1, _17.fld0.fld3.fld3, _17.fld0.fld3.fld0.fld0, _17.fld0.fld3.fld1, _9, _21, _16.fld0, _1.1.0), bb11, UnwindUnreachable())
}
bb11 = {
_7 = core::ptr::addr_of_mut!((*_7));
_18.fld5.0 = _17.fld0.fld3.fld5.0;
_31.1 = !_17.fld1.1.1;
Goto(bb12)
}
bb12 = {
_17.fld4.1.1 = _17.fld1.1.1;
_32.fld1 = _16.fld1 >> _1.1.0;
_17.fld3 = _14.1;
_17.fld0.fld3.fld1 = _17.fld0.fld3.fld5.0;
_17.fld0.fld3.fld0.fld2 = [_17.fld4.2,_1.2,_17.fld4.2,_4,_17.fld4.2,_1.2];
Goto(bb13)
}
bb13 = {
_20 = [_12,_6,_6,_17.fld0.fld3.fld3];
_17.fld3 = !_1.1.1;
_17.fld1.4 = core::ptr::addr_of_mut!(_27.3);
_8.0 = _22;
_17.fld3 = _17.fld4.1.1;
_17.fld0.fld3.fld2 = [_17.fld4.1.0,_14.0,_14.0,_17.fld1.1.0,_17.fld1.1.0,_6,_17.fld0.fld3.fld3,_6];
_36.0 = [4031537593948145199_u64,16426583464568233563_u64,10930262864210990062_u64,10765918107265208690_u64,16452236862851030621_u64,13167239310902351134_u64,13832515239487154565_u64,18435333541228877396_u64];
_17.fld4.0 = _1.0;
_17.fld0.fld3.fld0.fld4 = -_26.fld0;
_31 = (_17.fld1.1.0, _17.fld1.1.1);
Goto(bb14)
}
bb14 = {
_30.fld1 = [_31.0,_31.0,_1.1.0,_31.0];
_31.0 = -_17.fld1.1.0;
_15 = _24 as i16;
_1 = (_17.fld4.0, _17.fld1.1, _4, _11);
_18.fld3 = _14.0;
_35.fld3.fld5.0 = _18.fld5.0;
_35.fld0 = 4886720142745149921_i64 as u16;
_35.fld3.fld0.fld4 = _26.fld0 * _26.fld0;
_26.fld0 = _29 as i32;
_35.fld3.fld0.fld2 = [_4,_4,_1.2,_17.fld4.2,_4,_4];
_17.fld3 = _27.1.0 as u8;
_17.fld0.fld3 = Move(_18);
_35.fld2 = _16.fld0;
_35.fld3.fld4 = [_27.0,_27.0,_27.0,_27.0,_27.0];
_35.fld3.fld0.fld4 = (-3234037072434406169_i64) as i32;
_17.fld1.1.1 = _21 as u8;
_26 = Adt63 { fld0: _35.fld3.fld0.fld4,fld1: _17.fld0.fld3.fld2 };
_4 = !_17.fld4.2;
_10 = [_17.fld0.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4,_26.fld0,_26.fld0,_17.fld0.fld3.fld0.fld4,_35.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4];
_8.0 = [_4,_4,_17.fld4.2,_17.fld4.2,_17.fld4.2,_4,_17.fld4.2];
_30.fld2 = Adt50 { fld0: _10,fld1: _17.fld2 };
_37 = _11 >> _27.1.0;
_17.fld0.fld3.fld0.fld3 = _32.fld1 as f32;
_12 = _1.1.0;
_17.fld0.fld2 = [_17.fld0.fld3.fld0.fld4,_17.fld0.fld3.fld0.fld4,_35.fld3.fld0.fld4,_26.fld0,_35.fld3.fld0.fld4,_26.fld0,_17.fld0.fld3.fld0.fld4,_26.fld0];
_32.fld0 = [_26.fld0,_26.fld0,_17.fld0.fld3.fld0.fld4,_26.fld0,_26.fld0,_26.fld0,_35.fld3.fld0.fld4,_35.fld3.fld0.fld4];
_1.1 = (_31.0, _17.fld4.1.1);
_30.fld3 = core::ptr::addr_of!(_35.fld3.fld0.fld3);
_39.0 = !_6;
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(14_usize, 6_usize, Move(_6), 2_usize, Move(_2), 20_usize, Move(_20), 21_usize, Move(_21)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(14_usize, 8_usize, Move(_8), 24_usize, Move(_24), 36_usize, Move(_36), 5_usize, Move(_5)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(14_usize, 4_usize, Move(_4), 29_usize, Move(_29), 42_usize, _42, 42_usize, _42), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: i32,mut _2: i32,mut _3: char,mut _4: [i32; 8],mut _5: (*const usize, (i8, u8), u32, u16),mut _6: i8,mut _7: *mut *const *const u16,mut _8: char,mut _9: i8,mut _10: isize,mut _11: [i32; 8],mut _12: i8) -> (i8, u8) {
mir! {
type RET = (i8, u8);
let _13: f64;
let _14: [u128; 1];
let _15: ();
let _16: ();
{
RET.0 = true as i8;
_3 = _8;
_12 = -_6;
_12 = !_5.1.0;
_9 = _12;
RET.0 = -_5.1.0;
_7 = core::ptr::addr_of_mut!((*_7));
RET.1 = _5.1.1;
_5.1 = (_12, 79_u8);
_10 = -47_isize;
_3 = _8;
_5.1.1 = !79_u8;
_6 = !_9;
RET = (_5.1.0, _5.1.1);
RET = _5.1;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(15_usize, 2_usize, Move(_2), 6_usize, Move(_6), 1_usize, Move(_1), 8_usize, Move(_8)), bb2, UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(15_usize, 4_usize, Move(_4), 16_usize, _16, 16_usize, _16, 16_usize, _16), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: u8,mut _2: *const *const u16,mut _3: bool,mut _4: *const *const u16,mut _5: u16,mut _6: i8,mut _7: ([u32; 7],),mut _8: (bool,),mut _9: ([u32; 7],),mut _10: i128) -> char {
mir! {
type RET = char;
let _11: isize;
let _12: u8;
let _13: char;
let _14: (char,);
let _15: (bool,);
let _16: u16;
let _17: isize;
let _18: i64;
let _19: u64;
let _20: [i8; 8];
let _21: Adt48;
let _22: f32;
let _23: Adt55;
let _24: bool;
let _25: f32;
let _26: Adt63;
let _27: bool;
let _28: [u128; 5];
let _29: (i8, u8);
let _30: Adt62;
let _31: Adt62;
let _32: bool;
let _33: f32;
let _34: [isize; 1];
let _35: f64;
let _36: *const *const u16;
let _37: Adt48;
let _38: (bool,);
let _39: f64;
let _40: isize;
let _41: [u128; 5];
let _42: (char,);
let _43: Adt53;
let _44: isize;
let _45: [i8; 4];
let _46: ();
let _47: ();
{
RET = '\u{7adb3}';
_7 = (_9.0,);
RET = '\u{42fe4}';
_1 = 114_u8 << _5;
_9.0 = [1883599615_u32,1996086122_u32,607738708_u32,2503454718_u32,4004424596_u32,2068244905_u32,2410623871_u32];
_2 = _4;
_8.0 = _3 ^ _3;
_5 = 35994_u16 * 54850_u16;
_8.0 = _3;
_5 = 64769_u16 * 43932_u16;
_12 = _1 >> _5;
_7 = (_9.0,);
_9.0 = [3019844347_u32,251941947_u32,935782859_u32,905602057_u32,1246044064_u32,2145913052_u32,3294722178_u32];
_8 = (_3,);
_7 = _9;
_6 = 121_i8;
_12 = !_1;
_7 = (_9.0,);
_10 = _8.0 as i128;
_12 = !_1;
_7 = _9;
Goto(bb1)
}
bb1 = {
RET = '\u{e955b}';
_11 = 9223372036854775807_isize * 9223372036854775807_isize;
_9.0 = _7.0;
_10 = 92792200682524288548903656164169223945_i128 * 66260423583833172906988402477401795887_i128;
_14.0 = '\u{e75a0}';
_6 = _10 as i8;
_9.0 = _7.0;
_9 = (_7.0,);
_2 = _4;
_13 = _14.0;
_9 = (_7.0,);
_4 = _2;
_9 = (_7.0,);
_1 = 254333901002613532803152282152898781793_u128 as u8;
_8 = (_3,);
_1 = 646648504_i32 as u8;
_1 = _12 + _12;
_2 = _4;
_7.0 = _9.0;
_2 = _4;
_10 = -(-83498766430424782562309249656389132123_i128);
RET = _14.0;
Call(_12 = fn17(_8, _13, _9), bb2, UnwindUnreachable())
}
bb2 = {
_10 = !(-82210881888916364474694626119592224065_i128);
_15.0 = _3;
Goto(bb3)
}
bb3 = {
_8.0 = !_15.0;
_13 = _14.0;
_6 = (-55_i8) & (-63_i8);
RET = _13;
_11 = 9223372036854775807_isize << _1;
_16 = _5;
_21.fld3.2.1.0 = !_6;
_21.fld2 = [_11,_11,_11,_11,_11,_11,_11];
_7 = (_9.0,);
_21.fld3.2.2 = !3869347353_u32;
_18 = (-233030617653009350_i64);
_8.0 = _3;
_21.fld3.2.1.0 = 10336281663422537755_u64 as i8;
_21.fld3.2.1.1 = _1 >> _1;
_2 = _4;
_12 = _21.fld3.2.1.1 - _1;
Goto(bb4)
}
bb4 = {
_21.fld3.2.3 = _5 * _5;
_21.fld1.3 = _14.0;
_22 = _16 as f32;
_22 = _21.fld3.2.2 as f32;
Goto(bb5)
}
bb5 = {
RET = _13;
_24 = !_3;
_21.fld3.2.0 = core::ptr::addr_of!(_21.fld1.1);
_10 = (-168349557594500656509061650996777286012_i128);
_21.fld3.2.2 = _12 as u32;
_15.0 = _8.0;
_22 = 1321_i16 as f32;
_21.fld3.2.0 = core::ptr::addr_of!(_21.fld1.1);
_14.0 = _13;
_19 = _18 as u64;
RET = _21.fld1.3;
_3 = _15.0;
_22 = _21.fld3.2.2 as f32;
_21.fld3.3 = (-31312_i16);
_8.0 = _24;
RET = _21.fld1.3;
_21.fld0.0 = [_19,_19,_19,_19,_19,_19,_19,_19];
_16 = _5 | _21.fld3.2.3;
_3 = _21.fld3.2.2 == _21.fld3.2.2;
Goto(bb6)
}
bb6 = {
_12 = !_21.fld3.2.1.1;
_21.fld1.1 = 6_usize;
_24 = _3 & _3;
_28 = [255770496869799080797758220096563638715_u128,171409821334431398647172022199451074428_u128,214392444827957179018627087151859107273_u128,34653872408456559308181787453039289302_u128,252224300914815723389716345606569769946_u128];
_21.fld3.2.2 = _21.fld3.3 as u32;
Goto(bb7)
}
bb7 = {
_17 = _11;
_21.fld3.2.1.0 = _6;
_6 = 1022321915_i32 as i8;
RET = _13;
_30.fld0.fld5.0 = _14.0;
_20 = [_21.fld3.2.1.0,_6,_21.fld3.2.1.0,_21.fld3.2.1.0,_21.fld3.2.1.0,_21.fld3.2.1.0,_21.fld3.2.1.0,_21.fld3.2.1.0];
_31.fld0.fld1 = _21.fld1.3;
_10 = (-33806003333511749068270414210029107811_i128);
_30.fld0.fld0.fld3 = _22;
_31.fld0.fld5.0 = _31.fld0.fld1;
_29.1 = _12;
_21.fld3.1 = [_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2];
_30.fld0.fld5 = _31.fld0.fld5;
_17 = !_11;
_14 = (_31.fld0.fld1,);
_21.fld3.0 = _21.fld3.2.3 * _21.fld3.2.3;
_31.fld0.fld0.fld0 = core::ptr::addr_of_mut!(_4);
_29 = (_21.fld3.2.1.0, _12);
match _21.fld1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
6 => bb9,
_ => bb8
}
}
bb8 = {
RET = _13;
_24 = !_3;
_21.fld3.2.0 = core::ptr::addr_of!(_21.fld1.1);
_10 = (-168349557594500656509061650996777286012_i128);
_21.fld3.2.2 = _12 as u32;
_15.0 = _8.0;
_22 = 1321_i16 as f32;
_21.fld3.2.0 = core::ptr::addr_of!(_21.fld1.1);
_14.0 = _13;
_19 = _18 as u64;
RET = _21.fld1.3;
_3 = _15.0;
_22 = _21.fld3.2.2 as f32;
_21.fld3.3 = (-31312_i16);
_8.0 = _24;
RET = _21.fld1.3;
_21.fld0.0 = [_19,_19,_19,_19,_19,_19,_19,_19];
_16 = _5 | _21.fld3.2.3;
_3 = _21.fld3.2.2 == _21.fld3.2.2;
Goto(bb6)
}
bb9 = {
_30.fld0.fld0.fld1 = [19261400230515195079176875938006297226_u128];
_9.0 = [_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2];
_10 = -(-81674244908285944439680169262660784766_i128);
_31.fld0.fld0.fld1 = [224989806171291578807131954698736458833_u128];
_12 = _1;
_10 = (-161927749598735533852910557192821760695_i128) & (-108376211233610089780520646173885685920_i128);
_27 = _30.fld0.fld0.fld3 < _30.fld0.fld0.fld3;
_37.fld1.2 = core::ptr::addr_of!(_18);
_8 = (_24,);
RET = _13;
_37.fld3.2.1.1 = !_21.fld3.2.1.1;
_37.fld3.3 = !_21.fld3.3;
_31.fld0.fld5 = (_14.0,);
_13 = _31.fld0.fld5.0;
_21.fld1 = (_17, 3173809509752723204_usize, _37.fld1.2, _30.fld0.fld5.0);
_37.fld0 = (_21.fld0.0,);
_37.fld3.2.1 = _21.fld3.2.1;
_11 = _21.fld1.0;
_31.fld0.fld3 = !_21.fld3.2.1.0;
_6 = _29.0;
_37.fld2 = _21.fld2;
_23.fld0 = _24 < _8.0;
_26.fld0 = _21.fld3.2.1.1 as i32;
Goto(bb10)
}
bb10 = {
_22 = _30.fld0.fld0.fld3 - _30.fld0.fld0.fld3;
_31.fld0.fld3 = _6;
_36 = _2;
_37.fld3.2.2 = _21.fld3.2.2 * _21.fld3.2.2;
_32 = !_8.0;
_8.0 = _30.fld0.fld0.fld3 == _22;
_31.fld0.fld4 = [17514268610738402444680981028441526920_u128,267356770397581313720459542675832058537_u128,100808779896579432012019277144099038851_u128,313914435756599084300863595581012900917_u128,122329705945823487503481791859286679486_u128];
_15 = _8;
_33 = _19 as f32;
_8.0 = !_32;
_37 = _21;
_30.fld0.fld4 = [125658821343082253138574214523790986519_u128,69163990389686729110377828020300323466_u128,32547975311554517589557431235908333794_u128,239479171219786665177778543132471155211_u128,104022656842168222328141039837039067289_u128];
_31.fld0.fld5 = (_30.fld0.fld5.0,);
_30.fld0.fld5 = _31.fld0.fld5;
_37.fld1.0 = _21.fld1.0 & _17;
_21.fld3 = _37.fld3;
_31.fld0.fld0.fld3 = _22 / 0.00000000000000000000000000000000000000686577813373198_f32;
_26.fld1 = [_21.fld3.2.1.0,_37.fld3.2.1.0,_6,_21.fld3.2.1.0,_29.0,_31.fld0.fld3,_21.fld3.2.1.0,_31.fld0.fld3];
_21.fld0.0 = [_19,_19,_19,_19,_19,_19,_19,_19];
_37.fld1 = (_11, _21.fld1.1, _21.fld1.2, _21.fld1.3);
_37.fld3.2.3 = _37.fld3.0 / 4057_u16;
_21.fld3.0 = _37.fld3.2.3 | _37.fld3.2.3;
_27 = _8.0;
_10 = (-38341370508481957850420196613819915490_i128);
_20 = [_29.0,_21.fld3.2.1.0,_6,_6,_37.fld3.2.1.0,_37.fld3.2.1.0,_37.fld3.2.1.0,_21.fld3.2.1.0];
match _18 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb7,
4 => bb8,
5 => bb6,
340282366920938463463141576814115202106 => bb12,
_ => bb11
}
}
bb11 = {
_21.fld3.2.3 = _5 * _5;
_21.fld1.3 = _14.0;
_22 = _16 as f32;
_22 = _21.fld3.2.2 as f32;
Goto(bb5)
}
bb12 = {
_31.fld0.fld5 = _30.fld0.fld5;
_24 = _21.fld3.0 >= _21.fld3.0;
RET = _31.fld0.fld1;
_38.0 = _32 ^ _27;
_37.fld3.2.1.0 = -_6;
_30.fld0.fld5.0 = _21.fld1.3;
_7.0 = [_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_37.fld3.2.2];
_31.fld0.fld0.fld1 = [118865626854540020134416346999534392681_u128];
_30.fld0.fld0.fld0 = core::ptr::addr_of_mut!(_4);
_16 = _37.fld3.0;
_7.0 = [_37.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_37.fld3.2.2,_37.fld3.2.2,_37.fld3.2.2,_21.fld3.2.2];
_31.fld0.fld0.fld4 = !_26.fld0;
_2 = _36;
_30.fld0.fld2 = [_31.fld0.fld3,_31.fld0.fld3,_21.fld3.2.1.0,_21.fld3.2.1.0,_6,_21.fld3.2.1.0,_29.0,_29.0];
Goto(bb13)
}
bb13 = {
_33 = _19 as f32;
_41 = [30095154260937527365201957795864448133_u128,79791280744219778604270518633154532226_u128,222006181184876019191721622677634536010_u128,273058156777521084159833673986683934053_u128,297380779715740962341746705018123924844_u128];
_21.fld3.2.1.1 = _37.fld3.2.1.1 << _21.fld1.1;
_26 = Adt63 { fld0: _31.fld0.fld0.fld4,fld1: _30.fld0.fld2 };
_37.fld1.3 = _13;
_18 = -5812338466693685831_i64;
_21.fld3.2.0 = core::ptr::addr_of!(_21.fld1.1);
_31.fld0.fld0.fld2 = [_21.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2,_37.fld3.2.2,_21.fld3.2.2,_21.fld3.2.2];
match _37.fld1.1 {
0 => bb7,
1 => bb12,
3173809509752723204 => bb14,
_ => bb4
}
}
bb14 = {
_21.fld3 = (_37.fld3.2.3, _7.0, _37.fld3.2, _37.fld3.3);
_40 = _21.fld3.2.1.1 as isize;
_27 = _40 < _37.fld1.0;
_29.0 = -_6;
_12 = _21.fld3.2.1.1;
_40 = _19 as isize;
_37.fld2 = [_17,_17,_11,_17,_17,_37.fld1.0,_17];
_25 = _30.fld0.fld0.fld3;
_30.fld0.fld0.fld2 = _31.fld0.fld0.fld2;
_31.fld0.fld0.fld1 = [211050853251797494644131612243299882466_u128];
_30.fld0.fld0.fld4 = _31.fld0.fld0.fld4 << _16;
_26 = Adt63 { fld0: _30.fld0.fld0.fld4,fld1: _20 };
_37.fld3.1 = _21.fld3.1;
_35 = _31.fld0.fld0.fld3 as f64;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(16_usize, 29_usize, Move(_29), 6_usize, Move(_6), 9_usize, Move(_9), 40_usize, Move(_40)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(16_usize, 12_usize, Move(_12), 5_usize, Move(_5), 1_usize, Move(_1), 8_usize, Move(_8)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(16_usize, 20_usize, Move(_20), 13_usize, Move(_13), 15_usize, Move(_15), 27_usize, Move(_27)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(16_usize, 16_usize, Move(_16), 47_usize, _47, 47_usize, _47, 47_usize, _47), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: (bool,),mut _2: char,mut _3: ([u32; 7],)) -> u8 {
mir! {
type RET = u8;
let _4: Adt51;
let _5: char;
let _6: (u64, isize, [u64; 8]);
let _7: (u128, (i8, u8), i8, f64, *mut f64);
let _8: char;
let _9: i8;
let _10: *mut *const *const u16;
let _11: bool;
let _12: [u128; 5];
let _13: isize;
let _14: [u128; 1];
let _15: [isize; 7];
let _16: [u128; 6];
let _17: Adt54;
let _18: f64;
let _19: isize;
let _20: (i8, u8);
let _21: *const f32;
let _22: (i8, u8);
let _23: bool;
let _24: Adt59;
let _25: char;
let _26: isize;
let _27: isize;
let _28: isize;
let _29: Adt60;
let _30: ();
let _31: ();
{
_3.0 = [629952094_u32,3092252688_u32,1065733011_u32,3283276290_u32,3152647017_u32,2195521903_u32,1936128858_u32];
RET = 22_u8 >> 9125_i16;
_5 = _2;
RET = 42_u8 & 254_u8;
_4.fld1 = (_1.0,);
_4.fld4.fld1.2.2 = 4281067233_u32;
_4.fld4.fld1.1 = _3.0;
_3 = (_4.fld4.fld1.1,);
_6.1 = 91_i8 as isize;
_4.fld2 = !_4.fld4.fld1.2.2;
_4.fld1.0 = _2 < _5;
_3 = (_4.fld4.fld1.1,);
_4.fld4.fld0 = [1_i8,44_i8,64_i8,44_i8,(-24_i8),(-112_i8),62_i8,91_i8];
_4.fld4.fld1.2.0 = core::ptr::addr_of!(_4.fld4.fld4);
_6.0 = 12319104270520087486_u64 + 10581781096510684748_u64;
_6.2 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_7.3 = 27_i8 as f64;
_4.fld4.fld1.2.1 = ((-106_i8), 224_u8);
_3.0 = [_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld2,_4.fld4.fld1.2.2,_4.fld2,_4.fld4.fld1.2.2];
_5 = _2;
_4.fld4.fld0 = [_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0];
match _4.fld4.fld1.2.1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
224 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_4.fld1.0 = _1.0;
_4.fld4.fld6 = core::ptr::addr_of!(_4.fld4.fld1.0);
_4.fld4.fld5 = [239583657645521176965478244286309027540_u128];
_7.4 = core::ptr::addr_of_mut!(_7.3);
_8 = _2;
_3.0 = _4.fld4.fld1.1;
_4.fld4.fld4 = 10970935018615419950_usize & 1_usize;
_6.0 = !195881282308075275_u64;
_4.fld4.fld5 = [168451994548705606005184308876793954190_u128];
_4.fld5 = core::ptr::addr_of!(_4.fld4.fld4);
Goto(bb9)
}
bb9 = {
_4.fld4.fld4 = 13926032474924194145_usize;
_1 = (_4.fld1.0,);
Call(_7 = fn18(_6.2, _6.0, _4.fld5, _4.fld5, _4.fld4.fld1.2.1.0, _4.fld4.fld1.2.1), bb10, UnwindUnreachable())
}
bb10 = {
_4.fld4.fld1.0 = !41378_u16;
_6.1 = 52_isize;
_7.1.0 = _7.2;
_4.fld4.fld1.2 = (_4.fld5, _7.1, _4.fld2, _4.fld4.fld1.0);
_7.3 = _4.fld4.fld1.0 as f64;
_11 = _7.1.0 < _7.2;
_7.0 = 12809271149924977426029567181843508155_u128;
_4.fld4.fld0 = [_4.fld4.fld1.2.1.0,_7.2,_7.1.0,_4.fld4.fld1.2.1.0,_4.fld4.fld1.2.1.0,_7.1.0,_7.2,_4.fld4.fld1.2.1.0];
_4.fld1.0 = !_11;
_4.fld4.fld3 = _4.fld4.fld1.2.2 as i8;
_4.fld4.fld5 = [_7.0];
_7.1 = _4.fld4.fld1.2.1;
_7.1.0 = _4.fld4.fld3;
_4.fld1.0 = !_11;
Goto(bb11)
}
bb11 = {
_7.0 = 236411178644250469574637685877702767048_u128;
_4.fld4.fld1.2.3 = !_4.fld4.fld1.0;
_5 = _2;
_4.fld4.fld2 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_4.fld4.fld1.2 = (_4.fld5, _7.1, _4.fld2, _4.fld4.fld1.0);
_4.fld5 = core::ptr::addr_of!(_4.fld4.fld4);
_6.0 = !4609606316441551394_u64;
_7.2 = _4.fld4.fld4 as i8;
_4.fld1.0 = !_11;
_6.0 = _4.fld2 as u64;
_4.fld1.0 = _11;
_7.1 = (_4.fld4.fld1.2.1.0, _4.fld4.fld1.2.1.1);
_7.1.0 = !_4.fld4.fld3;
_7.2 = -_7.1.0;
_4.fld4.fld4 = _7.1.0 as usize;
_6.2 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_3.0 = [_4.fld2,_4.fld2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld2,_4.fld2];
_15 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_15 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_9 = _7.2;
match _7.0 {
0 => bb1,
236411178644250469574637685877702767048 => bb12,
_ => bb10
}
}
bb12 = {
_12 = [_7.0,_7.0,_7.0,_7.0,_7.0];
_15 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_4.fld4.fld6 = core::ptr::addr_of!(_4.fld4.fld1.2.3);
_1.0 = _4.fld1.0;
_4.fld5 = core::ptr::addr_of!(_4.fld4.fld4);
_18 = -_7.3;
_1.0 = !_4.fld1.0;
_5 = _8;
_4.fld4.fld1.3 = (-5600_i16);
_20.1 = _7.1.1;
_7.0 = 71490876835377701116437821424427477660_u128;
_19 = _6.1 - _6.1;
_4.fld4.fld1.2.2 = _4.fld2 / 586164436_u32;
_20.1 = _4.fld4.fld1.2.1.1;
_6.2 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_6.2 = [_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0,_6.0];
_2 = _8;
_2 = _5;
_12 = [_7.0,_7.0,_7.0,_7.0,_7.0];
_9 = _4.fld4.fld1.2.1.0 * _7.1.0;
_4.fld1.0 = !_1.0;
_4.fld4.fld5 = [_7.0];
_17.fld1 = [_7.0];
_1 = (_4.fld1.0,);
_14 = [_7.0];
_7.1.0 = (-1552218646_i32) as i8;
_9 = _4.fld4.fld1.2.1.0 << _6.0;
_4.fld1.0 = _1.0;
Goto(bb13)
}
bb13 = {
_20.0 = _7.1.0 ^ _9;
_18 = (-57258924454235193359775483153053970627_i128) as f64;
_7.1 = (_4.fld4.fld1.2.1.0, _20.1);
_17.fld2 = [_4.fld2,_4.fld2,_4.fld4.fld1.2.2,_4.fld2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2];
_7.4 = core::ptr::addr_of_mut!(_18);
_8 = _5;
_4.fld2 = !_4.fld4.fld1.2.2;
_13 = !_19;
_4.fld4.fld2 = _15;
_18 = _4.fld4.fld1.2.3 as f64;
_22.0 = _4.fld4.fld1.3 as i8;
_24.fld0.fld2 = [_4.fld2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld4.fld1.2.2,_4.fld2];
_21 = core::ptr::addr_of!(_17.fld3);
_23 = _11;
_29.fld3.fld0.fld2 = _17.fld2;
_20.0 = !_9;
Call(_4.fld4.fld1.2.3 = core::intrinsics::transmute(_4.fld4.fld1.0), bb14, UnwindUnreachable())
}
bb14 = {
_4.fld3 = [_22.0,_4.fld4.fld3,_7.2,_22.0];
_24.fld0.fld4 = 1372153929_i32 >> _4.fld2;
_6.1 = _19;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(17_usize, 5_usize, Move(_5), 20_usize, Move(_20), 9_usize, Move(_9), 13_usize, Move(_13)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(17_usize, 2_usize, Move(_2), 8_usize, Move(_8), 14_usize, Move(_14), 31_usize, _31), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [u64; 8],mut _2: u64,mut _3: *const usize,mut _4: *const usize,mut _5: i8,mut _6: (i8, u8)) -> (u128, (i8, u8), i8, f64, *mut f64) {
mir! {
type RET = (u128, (i8, u8), i8, f64, *mut f64);
let _7: Adt49;
let _8: isize;
let _9: ([u32; 7],);
let _10: isize;
let _11: [u128; 6];
let _12: Adt63;
let _13: isize;
let _14: [isize; 7];
let _15: Adt57;
let _16: *mut f64;
let _17: [u32; 7];
let _18: isize;
let _19: i64;
let _20: Adt50;
let _21: Adt57;
let _22: Adt49;
let _23: [u128; 6];
let _24: i16;
let _25: Adt55;
let _26: [isize; 1];
let _27: char;
let _28: [u32; 6];
let _29: (*const usize, (i8, u8), u32, u16);
let _30: (*const usize, (i8, u8), u32, u16);
let _31: (bool,);
let _32: Adt63;
let _33: [i8; 8];
let _34: i128;
let _35: bool;
let _36: i8;
let _37: u128;
let _38: bool;
let _39: isize;
let _40: bool;
let _41: Adt48;
let _42: Adt54;
let _43: bool;
let _44: Adt56;
let _45: u64;
let _46: i32;
let _47: f64;
let _48: isize;
let _49: *mut *const *const u16;
let _50: Adt63;
let _51: isize;
let _52: [i32; 8];
let _53: (u128, (i8, u8), i8, f64, *mut f64);
let _54: *mut f64;
let _55: [i32; 8];
let _56: Adt62;
let _57: *const i64;
let _58: [isize; 1];
let _59: isize;
let _60: (i8, u8);
let _61: bool;
let _62: isize;
let _63: ();
let _64: ();
{
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET.1.0 = _6.0 * _6.0;
(*_4) = _6.0 as usize;
_4 = _3;
_6.0 = _5 | _5;
RET.1.1 = '\u{9b37d}' as u8;
RET.1 = (_6.0, _6.1);
_4 = core::ptr::addr_of!((*_3));
RET.3 = 23_isize as f64;
RET.2 = _6.0;
RET.0 = (*_3) as u128;
_6.1 = 66_u8 & 21_u8;
Call(_3 = core::intrinsics::arith_offset(_4, 9223372036854775807_isize), bb1, UnwindUnreachable())
}
bb1 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb2 = {
RET.1 = (_6.0, _6.1);
RET.1 = (_6.0, _6.1);
_7.fld1.2.1.1 = true as u8;
(*_4) = 2744989329922547937_usize;
_6 = (_5, _7.fld1.2.1.1);
_5 = _6.0;
_7.fld1.2.0 = core::ptr::addr_of!(_7.fld4);
_7.fld4 = (*_4);
RET.3 = _6.1 as f64;
_7.fld1.3 = (-15772_i16) << _2;
_7.fld1.2.1 = (_5, _6.1);
_7.fld1.2 = (_4, _6, 1060505630_u32, 14717_u16);
_7.fld0 = [_7.fld1.2.1.0,_6.0,_6.0,_6.0,_6.0,_6.0,_5,_7.fld1.2.1.0];
RET.1 = (_6.0, _7.fld1.2.1.1);
Call(_4 = core::intrinsics::arith_offset(_3, (-9223372036854775808_isize)), bb3, UnwindUnreachable())
}
bb3 = {
RET.1.1 = (-1077382626_i32) as u8;
_2 = !12830331876110583854_u64;
_7.fld1.1 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
RET.1.0 = _5;
_7.fld1.2.1.1 = _6.1 | _6.1;
_11 = [249556951835995680360672872492966449036_u128,287739279218848959389608136380413076731_u128,24123406941825540386430443607978608743_u128,211038048844697065226637767977790324131_u128,166955811681565595002576445253368678506_u128,222476904904469013439381364668244414666_u128];
_7.fld2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),117_isize,(-9223372036854775808_isize),(-2_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET.3 = (-17968341836558334439281595628958615998_i128) as f64;
_7.fld1.2.1.0 = -_5;
_7.fld1.3 = (-6269_i16);
_15.fld6.fld1.3 = _7.fld1.3 ^ _7.fld1.3;
_17 = _7.fld1.1;
_15.fld6.fld1.2 = _7.fld1.2;
_5 = 168556827092615121498905609284639629575_u128 as i8;
_7.fld6 = core::ptr::addr_of!(_15.fld6.fld1.2.3);
_15.fld6.fld4 = !_7.fld4;
_15.fld6.fld1.0 = !_7.fld1.2.3;
match _7.fld1.2.2 {
1060505630 => bb5,
_ => bb4
}
}
bb4 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb5 = {
_11 = [108902958186824721345869752579685173476_u128,113408318045041666060674632111379478836_u128,171490563311399923221204137818221527411_u128,15135112180627089588013860608169834533_u128,82583489324250343238973918447444704482_u128,97895862627053619487392809617162685169_u128];
_7.fld5 = [92286086615171304328144939706292067504_u128];
_12 = Adt63 { fld0: 1947562774_i32,fld1: _7.fld0 };
RET.1.0 = -_5;
_15.fld6.fld2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_15.fld6.fld1.2 = _7.fld1.2;
_15.fld2.fld0 = (-4086879535240322479_i64);
RET.0 = !65901108518635471634039383041058535979_u128;
RET.1 = (_7.fld1.2.1.0, _7.fld1.2.1.1);
_15.fld2.fld0 = !1394004872731239758_i64;
_15.fld1 = (_7.fld1.1,);
_9 = (_17,);
_7.fld0 = [_7.fld1.2.1.0,_15.fld6.fld1.2.1.0,_6.0,_5,_7.fld1.2.1.0,_15.fld6.fld1.2.1.0,_6.0,_15.fld6.fld1.2.1.0];
_14 = [9_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-104_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_15.fld6.fld1.0 = _15.fld6.fld1.2.3 << _7.fld1.2.3;
_7.fld6 = core::ptr::addr_of!(_7.fld1.2.3);
_10 = (-9223372036854775808_isize);
_10 = !27_isize;
_7.fld5 = [132500763383970133623214229238265833080_u128];
_15.fld6.fld4 = _2 as usize;
_15.fld2.fld2 = [45700897214751210430699115336545789141_u128];
_15.fld1 = (_7.fld1.1,);
match _7.fld4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
2744989329922547937 => bb8,
_ => bb7
}
}
bb6 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb7 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb8 = {
_7.fld3 = _5 - _5;
_7.fld1.2.1.1 = _6.0 as u8;
_15.fld6.fld6 = core::ptr::addr_of!(_7.fld1.2.3);
match _7.fld1.2.2 {
1060505630 => bb10,
_ => bb9
}
}
bb9 = {
_11 = [108902958186824721345869752579685173476_u128,113408318045041666060674632111379478836_u128,171490563311399923221204137818221527411_u128,15135112180627089588013860608169834533_u128,82583489324250343238973918447444704482_u128,97895862627053619487392809617162685169_u128];
_7.fld5 = [92286086615171304328144939706292067504_u128];
_12 = Adt63 { fld0: 1947562774_i32,fld1: _7.fld0 };
RET.1.0 = -_5;
_15.fld6.fld2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_15.fld6.fld1.2 = _7.fld1.2;
_15.fld2.fld0 = (-4086879535240322479_i64);
RET.0 = !65901108518635471634039383041058535979_u128;
RET.1 = (_7.fld1.2.1.0, _7.fld1.2.1.1);
_15.fld2.fld0 = !1394004872731239758_i64;
_15.fld1 = (_7.fld1.1,);
_9 = (_17,);
_7.fld0 = [_7.fld1.2.1.0,_15.fld6.fld1.2.1.0,_6.0,_5,_7.fld1.2.1.0,_15.fld6.fld1.2.1.0,_6.0,_15.fld6.fld1.2.1.0];
_14 = [9_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-104_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_15.fld6.fld1.0 = _15.fld6.fld1.2.3 << _7.fld1.2.3;
_7.fld6 = core::ptr::addr_of!(_7.fld1.2.3);
_10 = (-9223372036854775808_isize);
_10 = !27_isize;
_7.fld5 = [132500763383970133623214229238265833080_u128];
_15.fld6.fld4 = _2 as usize;
_15.fld2.fld2 = [45700897214751210430699115336545789141_u128];
_15.fld1 = (_7.fld1.1,);
match _7.fld4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
2744989329922547937 => bb8,
_ => bb7
}
}
bb10 = {
_15.fld3 = _7.fld3;
_5 = '\u{26ab3}' as i8;
RET.1.0 = _6.0 << _7.fld1.2.3;
_15.fld6.fld1.2.3 = !_15.fld6.fld1.0;
_6.1 = _7.fld1.2.1.1 * _7.fld1.2.1.1;
_7.fld3 = !_15.fld3;
_15.fld6.fld1.1 = [_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_15.fld6.fld1.2.3 = _15.fld6.fld1.0;
_15.fld6.fld5 = _15.fld2.fld2;
_15.fld2 = Adt53 { fld0: (-7937077413286445768_i64),fld1: 290473703570329457514285587494546819540_u128,fld2: _7.fld5 };
_15.fld6.fld1.1 = [_7.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2];
_13 = _10;
_15.fld1.0 = _15.fld6.fld1.1;
_15.fld6.fld1.0 = !_15.fld6.fld1.2.3;
_15.fld4 = _7.fld1.3 ^ _7.fld1.3;
_8 = _10 ^ _13;
RET.1.0 = 24983834173347877869207528132149437005_i128 as i8;
_7.fld1.2.1.0 = _8 as i8;
_19 = _15.fld2.fld0 | _15.fld2.fld0;
_15.fld0.fld1 = _15.fld6.fld1.3 as i128;
Call(_15.fld6.fld2 = fn19(_15.fld1.0, _3, _7.fld2, _15.fld1.0, _15.fld6.fld5, _15.fld3, _4, _15.fld2.fld1), bb11, UnwindUnreachable())
}
bb11 = {
_7 = Adt49 { fld0: _12.fld1,fld1: _15.fld6.fld1,fld2: _14,fld3: _6.0,fld4: _15.fld6.fld4,fld5: _15.fld6.fld5,fld6: _15.fld6.fld6 };
RET.0 = _15.fld2.fld1 >> _15.fld6.fld1.2.1.0;
_9.0 = [_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_21.fld6.fld1.2.0 = core::ptr::addr_of!(_15.fld6.fld4);
_15.fld6 = Adt49 { fld0: _7.fld0,fld1: _7.fld1,fld2: _7.fld2,fld3: _15.fld3,fld4: _7.fld4,fld5: _7.fld5,fld6: _7.fld6 };
_21.fld0.fld1 = -_15.fld0.fld1;
_6.1 = _15.fld6.fld1.2.1.1;
_12.fld1 = [_5,_15.fld6.fld1.2.1.0,_15.fld6.fld3,_7.fld3,_15.fld3,_15.fld6.fld1.2.1.0,_7.fld1.2.1.0,_15.fld6.fld3];
_7.fld1.0 = _15.fld6.fld1.2.2 as u16;
_22.fld0 = [_15.fld6.fld3,_7.fld1.2.1.0,_5,_15.fld3,_15.fld6.fld1.2.1.0,_15.fld6.fld1.2.1.0,_6.0,_15.fld3];
_23 = _11;
_15.fld6.fld1.2.2 = !_7.fld1.2.2;
_7.fld1.2.1.1 = _6.1;
_21.fld6.fld6 = core::ptr::addr_of!(_21.fld6.fld1.0);
_21.fld6.fld1.2.1.0 = _15.fld6.fld1.0 as i8;
match _12.fld0 {
0 => bb4,
1 => bb2,
1947562774 => bb12,
_ => bb10
}
}
bb12 = {
_7 = Adt49 { fld0: _22.fld0,fld1: _15.fld6.fld1,fld2: _14,fld3: _6.0,fld4: _15.fld6.fld4,fld5: _15.fld2.fld2,fld6: _15.fld6.fld6 };
_21.fld2.fld2 = [_15.fld2.fld1];
_22.fld1.2.1 = (_6.0, _15.fld6.fld1.2.1.1);
_21.fld6.fld1.0 = _15.fld6.fld1.0;
_7.fld5 = [_15.fld2.fld1];
_22.fld4 = _7.fld4;
_15.fld1.0 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_14 = _15.fld6.fld2;
_20.fld1 = _12.fld0 as i128;
_7.fld1.2.1.1 = _22.fld1.2.1.1 >> _15.fld4;
RET.1 = (_21.fld6.fld1.2.1.0, _7.fld1.2.1.1);
_22.fld1 = _15.fld6.fld1;
_15.fld1.0 = [_7.fld1.2.2,_22.fld1.2.2,_22.fld1.2.2,_15.fld6.fld1.2.2,_22.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2];
_22.fld3 = _15.fld6.fld1.2.1.0;
_21.fld6.fld1.1 = _15.fld6.fld1.1;
_21.fld6.fld1.2 = _22.fld1.2;
_15.fld6.fld1.2.0 = core::ptr::addr_of!(_22.fld4);
_18 = -_10;
_29 = (_4, _22.fld1.2.1, _7.fld1.2.2, _15.fld6.fld1.2.3);
_15.fld2.fld0 = _15.fld0.fld1 as i64;
_25.fld0 = !false;
_21.fld6.fld1.1 = [_29.2,_7.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_22.fld1.2.2];
_6.0 = _7.fld3;
_22 = Adt49 { fld0: _12.fld1,fld1: _15.fld6.fld1,fld2: _15.fld6.fld2,fld3: _6.0,fld4: _15.fld6.fld4,fld5: _15.fld2.fld2,fld6: _21.fld6.fld6 };
_5 = _15.fld6.fld1.2.1.0;
Goto(bb13)
}
bb13 = {
_21.fld4 = -_7.fld1.3;
Goto(bb14)
}
bb14 = {
_20.fld1 = _21.fld0.fld1 & _15.fld0.fld1;
_30.0 = _22.fld1.2.0;
_20.fld0 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0];
_21.fld6.fld1.2.2 = _22.fld1.2.2 << _29.3;
_21.fld2 = Adt53 { fld0: _19,fld1: _15.fld2.fld1,fld2: _22.fld5 };
_7.fld1 = _22.fld1;
_24 = _20.fld1 as i16;
_22.fld1.0 = '\u{a170b}' as u16;
_21.fld1 = (_21.fld6.fld1.1,);
_29.1.1 = _22.fld4 as u8;
RET.2 = _15.fld6.fld1.3 as i8;
_15.fld6.fld4 = _22.fld4;
_15.fld6.fld1.2.0 = _22.fld1.2.0;
_32.fld1 = _12.fld1;
_22.fld2 = [_13,_8,_8,_8,_10,_13,_13];
_14 = [_13,_10,_10,_18,_8,_10,_10];
_22.fld1.2.3 = _15.fld6.fld1.2.3 / 57965_u16;
_7.fld5 = _21.fld2.fld2;
RET.1.0 = _15.fld6.fld3;
_7.fld1.3 = _7.fld4 as i16;
_19 = _15.fld2.fld0 ^ _21.fld2.fld0;
_21.fld6.fld1 = _22.fld1;
_15.fld6.fld1.2.0 = _29.0;
_7.fld1.2.0 = core::ptr::addr_of!(_7.fld4);
RET.1 = (_22.fld1.2.1.0, _21.fld6.fld1.2.1.1);
match _22.fld3 {
0 => bb1,
1 => bb2,
2 => bb12,
3 => bb4,
4 => bb5,
5 => bb15,
340282366920938463463374607431768211350 => bb17,
_ => bb16
}
}
bb15 = {
_7 = Adt49 { fld0: _12.fld1,fld1: _15.fld6.fld1,fld2: _14,fld3: _6.0,fld4: _15.fld6.fld4,fld5: _15.fld6.fld5,fld6: _15.fld6.fld6 };
RET.0 = _15.fld2.fld1 >> _15.fld6.fld1.2.1.0;
_9.0 = [_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_21.fld6.fld1.2.0 = core::ptr::addr_of!(_15.fld6.fld4);
_15.fld6 = Adt49 { fld0: _7.fld0,fld1: _7.fld1,fld2: _7.fld2,fld3: _15.fld3,fld4: _7.fld4,fld5: _7.fld5,fld6: _7.fld6 };
_21.fld0.fld1 = -_15.fld0.fld1;
_6.1 = _15.fld6.fld1.2.1.1;
_12.fld1 = [_5,_15.fld6.fld1.2.1.0,_15.fld6.fld3,_7.fld3,_15.fld3,_15.fld6.fld1.2.1.0,_7.fld1.2.1.0,_15.fld6.fld3];
_7.fld1.0 = _15.fld6.fld1.2.2 as u16;
_22.fld0 = [_15.fld6.fld3,_7.fld1.2.1.0,_5,_15.fld3,_15.fld6.fld1.2.1.0,_15.fld6.fld1.2.1.0,_6.0,_15.fld3];
_23 = _11;
_15.fld6.fld1.2.2 = !_7.fld1.2.2;
_7.fld1.2.1.1 = _6.1;
_21.fld6.fld6 = core::ptr::addr_of!(_21.fld6.fld1.0);
_21.fld6.fld1.2.1.0 = _15.fld6.fld1.0 as i8;
match _12.fld0 {
0 => bb4,
1 => bb2,
1947562774 => bb12,
_ => bb10
}
}
bb16 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb17 = {
_22.fld1.1 = [_22.fld1.2.2,_22.fld1.2.2,_29.2,_7.fld1.2.2,_22.fld1.2.2,_22.fld1.2.2,_22.fld1.2.2];
_21.fld6.fld0 = [_7.fld1.2.1.0,_29.1.0,_7.fld1.2.1.0,_15.fld6.fld1.2.1.0,_7.fld3,_7.fld1.2.1.0,_15.fld3,_6.0];
_11 = [_15.fld2.fld1,_15.fld2.fld1,_21.fld2.fld1,_21.fld2.fld1,_21.fld2.fld1,_21.fld2.fld1];
_21.fld4 = _2 as i16;
_25.fld0 = _15.fld6.fld1.0 >= _7.fld1.0;
_15.fld0.fld0 = [_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0,_12.fld0];
_32 = Adt63 { fld0: _12.fld0,fld1: _21.fld6.fld0 };
_30.0 = core::ptr::addr_of!(_21.fld6.fld4);
_21.fld6.fld1.2.1.1 = !_22.fld1.2.1.1;
RET.1.1 = _7.fld1.2.1.1 + _29.1.1;
_15.fld6.fld1.2 = (_3, _22.fld1.2.1, _29.2, _29.3);
_35 = !_25.fld0;
_22.fld1.2.1 = (_15.fld3, _15.fld6.fld1.2.1.1);
Goto(bb18)
}
bb18 = {
_21.fld6.fld1.2.1 = (_29.1.0, _7.fld1.2.1.1);
_7.fld1.0 = _21.fld6.fld1.2.3;
_7.fld1.2.1 = (_29.1.0, _15.fld6.fld1.2.1.1);
_15.fld6.fld1 = _7.fld1;
_26 = [_8];
_29.1.1 = _22.fld1.2.1.1 % 222_u8;
_30.1 = (_22.fld3, _21.fld6.fld1.2.1.1);
_15.fld2.fld0 = _21.fld2.fld0 & _21.fld2.fld0;
_15.fld6.fld1.2.1.1 = _29.1.1;
_7.fld2 = _22.fld2;
_21.fld0.fld1 = _20.fld1 ^ _20.fld1;
_21.fld0.fld1 = _20.fld1 >> _21.fld4;
_36 = _29.1.0;
_30.1 = _21.fld6.fld1.2.1;
_21.fld6.fld1.2.1.0 = !_6.0;
_32.fld1 = [_36,_22.fld3,_36,_30.1.0,_36,_5,_29.1.0,_6.0];
_31 = (_25.fld0,);
_21.fld0.fld0 = [_12.fld0,_12.fld0,_12.fld0,_32.fld0,_12.fld0,_12.fld0,_32.fld0,_12.fld0];
_22.fld1.2.3 = !_15.fld6.fld1.0;
_31 = (_35,);
Goto(bb19)
}
bb19 = {
_21.fld3 = _21.fld6.fld1.2.1.0 << _29.3;
_15.fld2.fld1 = _21.fld2.fld1;
_21.fld3 = _19 as i8;
_22.fld1.2.3 = _15.fld6.fld1.0;
_15.fld6.fld1.2 = (_21.fld6.fld1.2.0, _21.fld6.fld1.2.1, _7.fld1.2.2, _21.fld6.fld1.2.3);
_15.fld6.fld1.2.1.0 = -_15.fld3;
_15.fld7 = core::ptr::addr_of_mut!(_41.fld1.2);
_39 = _18 >> _22.fld1.2.3;
_7.fld1 = _21.fld6.fld1;
_33 = [_15.fld6.fld3,_15.fld6.fld3,_36,_21.fld3,_21.fld3,_6.0,_6.0,_22.fld1.2.1.0];
_21.fld1 = (_15.fld1.0,);
_44.fld1 = [_21.fld3,_22.fld3,_5,_21.fld3];
_44.fld2.fld1 = -_20.fld1;
_12.fld1 = _22.fld0;
_7 = Adt49 { fld0: _33,fld1: _21.fld6.fld1,fld2: _15.fld6.fld2,fld3: _30.1.0,fld4: _15.fld6.fld4,fld5: _15.fld2.fld2,fld6: _15.fld6.fld6 };
_37 = !_21.fld2.fld1;
RET.1.0 = _29.1.0 - _29.1.0;
_41.fld3.2.1 = _29.1;
_11 = [_15.fld2.fld1,_15.fld2.fld1,_15.fld2.fld1,_21.fld2.fld1,_37,_21.fld2.fld1];
Goto(bb20)
}
bb20 = {
_30 = _21.fld6.fld1.2;
_21.fld6.fld6 = _7.fld6;
_41.fld1.1 = _22.fld4 - _22.fld4;
_21.fld6.fld2 = [_8,_39,_8,_13,_39,_39,_8];
_23 = _11;
_21.fld6.fld1.2.1 = (_6.0, _29.1.1);
_41.fld0 = (_1,);
RET.1.0 = _22.fld3;
_15.fld6.fld1.2.3 = _29.3 ^ _30.3;
_21.fld4 = _15.fld4;
_41.fld3 = (_15.fld6.fld1.2.3, _15.fld1.0, _7.fld1.2, _24);
_7.fld1.3 = _41.fld3.3 << _30.3;
_29.1 = _6;
_42.fld1 = _15.fld6.fld5;
_15.fld2 = Adt53 { fld0: _21.fld2.fld0,fld1: _37,fld2: _22.fld5 };
_41.fld1.2 = core::ptr::addr_of!(_19);
match _32.fld0 {
0 => bb6,
1 => bb9,
2 => bb15,
3 => bb21,
4 => bb22,
5 => bb23,
1947562774 => bb25,
_ => bb24
}
}
bb21 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb22 = {
RET.1 = (_6.0, _6.1);
RET.1 = (_6.0, _6.1);
_7.fld1.2.1.1 = true as u8;
(*_4) = 2744989329922547937_usize;
_6 = (_5, _7.fld1.2.1.1);
_5 = _6.0;
_7.fld1.2.0 = core::ptr::addr_of!(_7.fld4);
_7.fld4 = (*_4);
RET.3 = _6.1 as f64;
_7.fld1.3 = (-15772_i16) << _2;
_7.fld1.2.1 = (_5, _6.1);
_7.fld1.2 = (_4, _6, 1060505630_u32, 14717_u16);
_7.fld0 = [_7.fld1.2.1.0,_6.0,_6.0,_6.0,_6.0,_6.0,_5,_7.fld1.2.1.0];
RET.1 = (_6.0, _7.fld1.2.1.1);
Call(_4 = core::intrinsics::arith_offset(_3, (-9223372036854775808_isize)), bb3, UnwindUnreachable())
}
bb23 = {
_6 = (_5, 88_u8);
_6.1 = !29_u8;
_1 = [_2,_2,_2,_2,_2,_2,_2,_2];
Goto(bb2)
}
bb24 = {
_7 = Adt49 { fld0: _22.fld0,fld1: _15.fld6.fld1,fld2: _14,fld3: _6.0,fld4: _15.fld6.fld4,fld5: _15.fld2.fld2,fld6: _15.fld6.fld6 };
_21.fld2.fld2 = [_15.fld2.fld1];
_22.fld1.2.1 = (_6.0, _15.fld6.fld1.2.1.1);
_21.fld6.fld1.0 = _15.fld6.fld1.0;
_7.fld5 = [_15.fld2.fld1];
_22.fld4 = _7.fld4;
_15.fld1.0 = [_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2];
_14 = _15.fld6.fld2;
_20.fld1 = _12.fld0 as i128;
_7.fld1.2.1.1 = _22.fld1.2.1.1 >> _15.fld4;
RET.1 = (_21.fld6.fld1.2.1.0, _7.fld1.2.1.1);
_22.fld1 = _15.fld6.fld1;
_15.fld1.0 = [_7.fld1.2.2,_22.fld1.2.2,_22.fld1.2.2,_15.fld6.fld1.2.2,_22.fld1.2.2,_15.fld6.fld1.2.2,_15.fld6.fld1.2.2];
_22.fld3 = _15.fld6.fld1.2.1.0;
_21.fld6.fld1.1 = _15.fld6.fld1.1;
_21.fld6.fld1.2 = _22.fld1.2;
_15.fld6.fld1.2.0 = core::ptr::addr_of!(_22.fld4);
_18 = -_10;
_29 = (_4, _22.fld1.2.1, _7.fld1.2.2, _15.fld6.fld1.2.3);
_15.fld2.fld0 = _15.fld0.fld1 as i64;
_25.fld0 = !false;
_21.fld6.fld1.1 = [_29.2,_7.fld1.2.2,_7.fld1.2.2,_15.fld6.fld1.2.2,_7.fld1.2.2,_7.fld1.2.2,_22.fld1.2.2];
_6.0 = _7.fld3;
_22 = Adt49 { fld0: _12.fld1,fld1: _15.fld6.fld1,fld2: _15.fld6.fld2,fld3: _6.0,fld4: _15.fld6.fld4,fld5: _15.fld2.fld2,fld6: _21.fld6.fld6 };
_5 = _15.fld6.fld1.2.1.0;
Goto(bb13)
}
bb25 = {
_41.fld3.2.0 = core::ptr::addr_of!(_21.fld6.fld4);
_15.fld6.fld6 = core::ptr::addr_of!(_30.3);
_27 = '\u{1d198}';
_21.fld2.fld2 = [_15.fld2.fld1];
_51 = _21.fld2.fld1 as isize;
_20.fld0 = [_32.fld0,_12.fld0,_12.fld0,_32.fld0,_32.fld0,_32.fld0,_32.fld0,_12.fld0];
_22.fld0 = [_29.1.0,_41.fld3.2.1.0,_7.fld3,_29.1.0,_21.fld3,_36,_30.1.0,_15.fld6.fld1.2.1.0];
_25.fld0 = _35;
RET.4 = core::ptr::addr_of_mut!(_47);
_11 = [_21.fld2.fld1,_21.fld2.fld1,_21.fld2.fld1,_21.fld2.fld1,_15.fld2.fld1,_37];
_21.fld2.fld2 = [_21.fld2.fld1];
_41.fld2 = [_39,_51,_39,_39,_51,_39,_8];
_37 = _15.fld2.fld1 % 317925041330716484472470162081290689440_u128;
_21.fld6 = _15.fld6;
_21.fld7 = core::ptr::addr_of_mut!(_41.fld1.2);
_21.fld6.fld1.2.2 = _15.fld6.fld1.2.2;
_13 = _27 as isize;
_14 = [_10,_39,_39,_39,_51,_51,_39];
RET.2 = _22.fld3;
_50.fld0 = _15.fld6.fld4 as i32;
_45 = _44.fld2.fld1 as u64;
_15.fld3 = !_15.fld6.fld1.2.1.0;
Goto(bb26)
}
bb26 = {
Call(_63 = dump_var(18_usize, 36_usize, Move(_36), 13_usize, Move(_13), 26_usize, Move(_26), 37_usize, Move(_37)), bb27, UnwindUnreachable())
}
bb27 = {
Call(_63 = dump_var(18_usize, 10_usize, Move(_10), 39_usize, Move(_39), 14_usize, Move(_14), 18_usize, Move(_18)), bb28, UnwindUnreachable())
}
bb28 = {
Call(_63 = dump_var(18_usize, 27_usize, Move(_27), 51_usize, Move(_51), 17_usize, Move(_17), 24_usize, Move(_24)), bb29, UnwindUnreachable())
}
bb29 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [u32; 7],mut _2: *const usize,mut _3: [isize; 7],mut _4: [u32; 7],mut _5: [u128; 1],mut _6: i8,mut _7: *const usize,mut _8: u128) -> [isize; 7] {
mir! {
type RET = [isize; 7];
let _9: Adt52;
let _10: Adt47;
let _11: (i8, u8);
let _12: Adt49;
let _13: i8;
let _14: Adt47;
let _15: char;
let _16: isize;
let _17: i64;
let _18: f64;
let _19: f64;
let _20: u64;
let _21: bool;
let _22: Adt57;
let _23: u32;
let _24: *const f32;
let _25: (char,);
let _26: ();
let _27: ();
{
_9.fld5.fld3.2.0 = _2;
_9.fld0 = _3;
_11.0 = _6;
_9.fld5.fld3.1 = [3298443629_u32,3450795347_u32,3769537894_u32,2665035795_u32,487350897_u32,2371106372_u32,1960465509_u32];
_10.fld3 = (-136721975296189388360258941288053637770_i128) as u128;
_5 = [_8];
_9.fld6 = core::ptr::addr_of!(_10.fld6);
_11.0 = _6 << _6;
_3 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,33_isize,9223372036854775807_isize,55_isize,(-9223372036854775808_isize)];
_9.fld5.fld3.2.1.1 = !152_u8;
_11.1 = _9.fld5.fld3.2.1.1;
_9.fld5.fld3.2 = (_2, _11, 2771086588_u32, 27383_u16);
_9.fld5.fld3.1 = [_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2];
_3 = [9223372036854775807_isize,(-9223372036854775808_isize),13_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_12.fld1.2 = (_2, _11, _9.fld5.fld3.2.2, _9.fld5.fld3.2.3);
_12.fld5 = [_10.fld3];
_9.fld1.0 = !false;
_9.fld0 = [(-26_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,101_isize,53_isize,(-9223372036854775808_isize)];
_10.fld0 = [_6,_11.0,_9.fld5.fld3.2.1.0,_12.fld1.2.1.0,_11.0,_11.0,_12.fld1.2.1.0,_6];
_11.1 = _9.fld5.fld3.2.1.1 - _9.fld5.fld3.2.1.1;
match _12.fld1.2.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
2771086588 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_10.fld2 = _9.fld0;
_9.fld4 = core::ptr::addr_of_mut!(_9.fld3.0);
_12.fld1.3 = (-6134_i16) | 31467_i16;
_9.fld5.fld3.3 = _12.fld1.3;
_12.fld1.2.1.0 = '\u{d44c7}' as i8;
_10.fld3 = _8;
_9.fld5.fld3.2.3 = !_12.fld1.2.3;
match _12.fld1.2.3 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb7,
27383 => bb9,
_ => bb5
}
}
bb9 = {
_14.fld5 = [_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_12.fld1.2.2,_12.fld1.2.2,_9.fld5.fld3.2.2,_12.fld1.2.2,_12.fld1.2.2];
_9.fld5.fld1.3 = '\u{a0576}';
_10.fld0 = [_11.0,_9.fld5.fld3.2.1.0,_9.fld5.fld3.2.1.0,_11.0,_9.fld5.fld3.2.1.0,_6,_9.fld5.fld3.2.1.0,_12.fld1.2.1.0];
_6 = !_11.0;
_5 = _12.fld5;
_10.fld6 = _12.fld1.2.3 as f32;
_12.fld1.1 = [_12.fld1.2.2,_12.fld1.2.2,_12.fld1.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2];
match _12.fld1.2.3 {
0 => bb5,
1 => bb6,
2 => bb4,
27383 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_10.fld5 = _12.fld1.1;
_12.fld1.3 = _9.fld5.fld3.3;
_12.fld1.3 = 2065539928360366160_usize as i16;
_9.fld1.0 = false;
RET = _9.fld0;
_14.fld6 = _10.fld6 / f32::NAN;
_9.fld3.0 = (-42151394229369355009989820060656839032_i128) as f64;
_14.fld4 = [_9.fld5.fld3.2.2,_12.fld1.2.2,_9.fld5.fld3.2.2,_12.fld1.2.2,_9.fld5.fld3.2.2,_12.fld1.2.2];
_6 = _11.0 >> _12.fld1.2.1.0;
_9.fld5.fld1.1 = 3_usize;
_9.fld5.fld1.2 = core::ptr::addr_of!(_17);
_10.fld6 = -_14.fld6;
_14.fld1 = _9.fld5.fld1.3;
_9.fld5.fld3.1 = [_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_12.fld1.2.2,_9.fld5.fld3.2.2,_12.fld1.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2];
_9.fld5.fld3 = (_12.fld1.2.3, _10.fld5, _12.fld1.2, _12.fld1.3);
Goto(bb12)
}
bb12 = {
_12.fld0 = [_6,_6,_12.fld1.2.1.0,_6,_6,_6,_11.0,_6];
_18 = -_9.fld3.0;
_12.fld2 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,26_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_10.fld6 = -_14.fld6;
_12.fld1.2.3 = _9.fld5.fld3.2.3 - _9.fld5.fld3.2.3;
_9.fld5.fld3.2.2 = !_12.fld1.2.2;
_12.fld4 = !_9.fld5.fld1.1;
_12.fld4 = _9.fld5.fld1.1 ^ _9.fld5.fld1.1;
_14.fld2 = _12.fld2;
_12.fld1.0 = _9.fld5.fld3.2.3 & _12.fld1.2.3;
_9.fld5.fld1.0 = 103_isize;
_12.fld1.2.1.0 = _14.fld6 as i8;
_8 = !_10.fld3;
_12.fld6 = core::ptr::addr_of!(_9.fld5.fld3.2.3);
_9.fld5.fld3 = _12.fld1;
_9.fld5.fld2 = _10.fld2;
_12.fld4 = 139160782423304180978098396677917429720_i128 as usize;
_12.fld1.0 = _12.fld1.2.1.1 as u16;
match _12.fld1.2.2 {
2771086588 => bb13,
_ => bb3
}
}
bb13 = {
_9.fld3.0 = -_18;
_9.fld5.fld3.2 = _12.fld1.2;
_22.fld3 = _9.fld5.fld3.2.1.0 - _9.fld5.fld3.2.1.0;
_9.fld5.fld3.0 = _9.fld5.fld3.2.3 >> _12.fld1.2.3;
_12.fld4 = _9.fld5.fld1.1 >> _9.fld5.fld3.0;
_9.fld5.fld1.1 = _12.fld4 & _12.fld4;
_20 = 5426404028713485844_u64;
_11.1 = !_9.fld5.fld3.2.1.1;
_13 = _12.fld1.2.1.0;
Goto(bb14)
}
bb14 = {
_23 = _9.fld5.fld3.2.2;
_9.fld0 = [_9.fld5.fld1.0,_9.fld5.fld1.0,_9.fld5.fld1.0,_9.fld5.fld1.0,_9.fld5.fld1.0,_9.fld5.fld1.0,_9.fld5.fld1.0];
_8 = _12.fld1.2.1.1 as u128;
_22.fld6.fld6 = core::ptr::addr_of!(_9.fld5.fld3.0);
_12.fld0 = _10.fld0;
_17 = 1161824349450791062_i64 * (-6665266726864420286_i64);
_14.fld2 = _10.fld2;
_22.fld0.fld1 = (-108965153062045365604589598267499122746_i128) ^ 94590516882863888810333095831424424879_i128;
_15 = _9.fld5.fld1.3;
_9.fld5.fld3.3 = _12.fld1.3;
_22.fld1.0 = _9.fld5.fld3.1;
_14.fld5 = [_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_9.fld5.fld3.2.2,_23,_9.fld5.fld3.2.2];
_12.fld1.2.2 = _9.fld1.0 as u32;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(19_usize, 8_usize, Move(_8), 4_usize, Move(_4), 5_usize, Move(_5), 20_usize, Move(_20)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(19_usize, 15_usize, Move(_15), 11_usize, Move(_11), 27_usize, _27, 27_usize, _27), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box((-25754_i16)), std::hint::black_box(928521487_i32)));
                
            }
#[derive(Debug)]
pub struct Adt47 {
fld0: [i8; 8],
fld1: char,
fld2: [isize; 7],
fld3: u128,
fld4: [u32; 6],
fld5: [u32; 7],
fld6: f32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt48 {
fld0: ([u64; 8],),
fld1: (isize, usize, *const i64, char),
fld2: [isize; 7],
fld3: (u16, [u32; 7], (*const usize, (i8, u8), u32, u16), i16),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: [i8; 8],
fld1: (u16, [u32; 7], (*const usize, (i8, u8), u32, u16), i16),
fld2: [isize; 7],
fld3: i8,
fld4: usize,
fld5: [u128; 1],
fld6: *const u16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: [i32; 8],
fld1: i128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: *mut *const *const u16,
fld1: (bool,),
fld2: u32,
fld3: [i8; 4],
fld4: Adt49,
fld5: *const usize,
fld6: *mut *const i64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: [isize; 7],
fld1: (bool,),
fld2: u64,
fld3: (f64,),
fld4: *mut f64,
fld5: Adt48,
fld6: *const f32,
}
#[derive(Debug)]
pub struct Adt53 {
fld0: i64,
fld1: u128,
fld2: [u128; 1],
}
#[derive(Debug)]
pub struct Adt54 {
fld0: *mut *const *const u16,
fld1: [u128; 1],
fld2: [u32; 6],
fld3: f32,
fld4: i32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: bool,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: *mut *const *const u16,
fld1: [i8; 4],
fld2: Adt50,
fld3: *const f32,
}
#[derive(Debug)]
pub struct Adt57 {
fld0: Adt50,
fld1: ([u32; 7],),
fld2: Adt53,
fld3: i8,
fld4: i16,
fld5: *const f32,
fld6: Adt49,
fld7: *mut *const i64,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: Adt52,
fld1: Adt47,
fld2: Adt55,
fld3: *const u16,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: Adt54,
fld1: char,
fld2: [i8; 8],
fld3: i8,
fld4: [u128; 5],
fld5: (char,),
}
#[derive(Debug)]
pub struct Adt60 {
fld0: u16,
fld1: [isize; 7],
fld2: [i32; 8],
fld3: Adt59,
}
#[derive(Debug)]
pub struct Adt61 {
fld0: Adt60,
fld1: (u128, (i8, u8), i8, f64, *mut f64),
fld2: i128,
fld3: u8,
fld4: (*const usize, (i8, u8), u32, u16),
}
#[derive(Debug)]
pub struct Adt62 {
fld0: Adt59,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: i32,
fld1: [i8; 8],
}

