#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u16,mut _2: u128) -> u16 {
mir! {
type RET = u16;
let _3: [isize; 2];
let _4: i16;
let _5: ([u64; 4],);
let _6: f64;
let _7: [isize; 2];
let _8: char;
let _9: i64;
let _10: [i32; 7];
let _11: [isize; 8];
let _12: i16;
let _13: ([u64; 4],);
let _14: usize;
let _15: f32;
let _16: [u64; 4];
let _17: isize;
let _18: Adt46;
let _19: [isize; 2];
let _20: Adt51;
let _21: Adt55;
let _22: [isize; 2];
let _23: i16;
let _24: char;
let _25: Adt54;
let _26: Adt51;
let _27: ();
let _28: ();
{
_2 = 97480696089803218587775112777851338594_u128;
_2 = 30897_u16 as u128;
RET = (-1373165002_i32) as u16;
RET = !53078_u16;
_2 = 248627246541266486830490422633570157999_u128 | 244636337619562100484415300187933229403_u128;
RET = _2 as u16;
_2 = !165872813720370304407730026010820855972_u128;
_2 = !8704195703752249656353851415359585082_u128;
RET = 51040_u16;
_1 = !RET;
RET = (-8721012716815838464_i64) as u16;
_3 = [(-48_isize),(-65_isize)];
RET = _1;
_2 = !151610905162899116151923478493357552045_u128;
_3 = [(-9223372036854775808_isize),9223372036854775807_isize];
_4 = (-32546_i16);
_2 = !300889835042792276035804482010982242850_u128;
_3 = [(-9223372036854775808_isize),9223372036854775807_isize];
_2 = !208002615254254647839750780565979974545_u128;
Call(RET = fn1(_1, _3, _2, _3, _4, _3, _4, _4, _3, _3, _3, _4, _3, _2, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = (-10191_i16) & (-30976_i16);
_1 = (-1594758038_i32) as u16;
_4 = !15872_i16;
RET = _1;
_4 = 24330_i16;
match _4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
24330 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_5.0 = [15498329966112592673_u64,4667916136203941791_u64,3711482697454543687_u64,687613146680378028_u64];
RET = _1;
_1 = RET;
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_7 = _3;
_9 = (-417430867255886710_i64) >> RET;
Goto(bb10)
}
bb10 = {
_9 = 9223372036854775807_isize as i64;
_9 = -(-4706430883425218837_i64);
_7 = [(-44_isize),9223372036854775807_isize];
RET = !_1;
_3 = [(-9223372036854775808_isize),(-63_isize)];
_6 = _1 as f64;
_6 = 4754959658432743011_u64 as f64;
_7 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_10 = [288377906_i32,1272955575_i32,(-209133696_i32),(-1818081304_i32),223649620_i32,(-159545_i32),(-1105478240_i32)];
_12 = _4 - _4;
_6 = _9 as f64;
_13 = (_5.0,);
RET = _1 | _1;
_1 = !RET;
_13.0 = [4455239163752420244_u64,15948103927014201906_u64,10256173226160062190_u64,13941917647740775536_u64];
_5.0 = [11258700955447456152_u64,6576428438915198851_u64,13366950134496980193_u64,6172742555170283562_u64];
_13 = _5;
_4 = _12;
_5.0 = [661088156679798738_u64,5282739116188661317_u64,1271180898717176018_u64,63708603753435171_u64];
Goto(bb11)
}
bb11 = {
RET = _1 >> _4;
_5 = _13;
_9 = (-647224332217730147_i64) & (-6858837386717255391_i64);
_5.0 = [11178909785909005133_u64,14312633615267560496_u64,7805901366026442821_u64,968470204153919772_u64];
_5 = (_13.0,);
_1 = RET & RET;
_12 = -_4;
_2 = 166165825987973710702991237185428891459_i128 as u128;
_7 = _3;
_13 = (_5.0,);
_13 = (_5.0,);
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = [(-39_isize),9223372036854775807_isize,9223372036854775807_isize,99_isize,55_isize,29_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_15 = _9 as f32;
_14 = !8938190599574286315_usize;
_10 = [1714610648_i32,1019284822_i32,1210175562_i32,(-1211338528_i32),782554890_i32,(-2106415119_i32),1149272788_i32];
_10 = [379341419_i32,(-1459866382_i32),1667529972_i32,(-835193665_i32),1524482681_i32,1004612950_i32,1450738071_i32];
_19 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = !RET;
_18.fld0 = false ^ true;
_11 = [(-9223372036854775808_isize),59_isize,(-9223372036854775808_isize),16_isize,(-9223372036854775808_isize),127_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
Call(_16 = fn18(_7, _3, _5, _15, _12, _3, _10, _5.0, _14, _11, _13.0), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_13.0 = [13596397255780376426_u64,9183625181396369773_u64,6712567707424862831_u64,1323746837384822497_u64];
_9 = 5839654130433137544_i64;
_10 = [1808436344_i32,122705191_i32,(-628413760_i32),(-1543776180_i32),1091566575_i32,(-963988152_i32),(-1902958154_i32)];
_2 = !22688401019884396287215678432488842552_u128;
_18 = Adt46 { fld0: true,fld1: _5 };
RET = _1 * _1;
_5.0 = _18.fld1.0;
_11 = [(-101_isize),(-9223372036854775808_isize),(-69_isize),9223372036854775807_isize,118_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2 = 256582796072716363390721767995900583441_u128;
_7 = [111_isize,(-9223372036854775808_isize)];
_10 = [(-191219976_i32),117342098_i32,(-1787988657_i32),(-431353724_i32),373734897_i32,(-1180490458_i32),(-2007300500_i32)];
_7 = [(-50_isize),(-73_isize)];
_6 = (-53_i8) as f64;
RET = _1 & _1;
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_23 = _4;
_10 = [(-517711578_i32),(-1597366345_i32),(-605214641_i32),1378123478_i32,642925225_i32,(-125033465_i32),457236001_i32];
_6 = 2793737059_u32 as f64;
_10 = [223196652_i32,1637171592_i32,(-1713851103_i32),1233645291_i32,1840928721_i32,788315972_i32,1920126813_i32];
_8 = '\u{eda37}';
_17 = !(-115_isize);
_18 = Adt46 { fld0: false,fld1: _13 };
_3 = [_17,_17];
_18.fld0 = true;
RET = _15 as u16;
Goto(bb13)
}
bb13 = {
_13 = (_16,);
_13.0 = _18.fld1.0;
_16 = _18.fld1.0;
_13.0 = [15867594918596837323_u64,11039580581620514152_u64,10698906278621718487_u64,2329373320919505419_u64];
_17 = 3159193607_u32 as isize;
match _2 {
256582796072716363390721767995900583441 => bb14,
_ => bb7
}
}
bb14 = {
_13.0 = [15878385824272908489_u64,213958041279010109_u64,10934769162117150959_u64,565062932827896199_u64];
_20.fld0 = core::ptr::addr_of!(_5);
_13 = (_16,);
_26.fld0 = _20.fld0;
_8 = '\u{1169d}';
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(0_usize, 3_usize, Move(_3), 13_usize, Move(_13), 12_usize, Move(_12), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(0_usize, 16_usize, Move(_16), 19_usize, Move(_19), 4_usize, Move(_4), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u16,mut _2: [isize; 2],mut _3: u128,mut _4: [isize; 2],mut _5: i16,mut _6: [isize; 2],mut _7: i16,mut _8: i16,mut _9: [isize; 2],mut _10: [isize; 2],mut _11: [isize; 2],mut _12: i16,mut _13: [isize; 2],mut _14: u128,mut _15: [isize; 2]) -> u16 {
mir! {
type RET = u16;
let _16: isize;
let _17: i128;
let _18: f32;
let _19: (u8, &'static [usize; 2], &'static [usize; 2]);
let _20: f64;
let _21: [u64; 4];
let _22: isize;
let _23: Adt45;
let _24: ([u64; 4],);
let _25: Adt44;
let _26: *const char;
let _27: i16;
let _28: char;
let _29: isize;
let _30: i8;
let _31: char;
let _32: [isize; 2];
let _33: [isize; 2];
let _34: [u8; 5];
let _35: f32;
let _36: i64;
let _37: (i128, *const i128, &'static [usize; 2]);
let _38: char;
let _39: [u8; 5];
let _40: (i128, *const i128, &'static [usize; 2]);
let _41: Adt51;
let _42: Adt53;
let _43: i8;
let _44: i32;
let _45: ();
let _46: ();
{
_12 = _5;
_9 = [37_isize,9223372036854775807_isize];
_13 = [(-9223372036854775808_isize),9223372036854775807_isize];
_4 = [9223372036854775807_isize,9223372036854775807_isize];
_12 = !_7;
_14 = _1 as u128;
_15 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = _1 | _1;
_7 = -_12;
_6 = [9223372036854775807_isize,(-96_isize)];
_12 = _5 - _7;
RET = !_1;
_2 = _4;
_17 = (-54_i8) as i128;
RET = _1;
_15 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_11 = [58_isize,9223372036854775807_isize];
_20 = 6821997851999404755_i64 as f64;
RET = _1;
_5 = (-9223372036854775808_isize) as i16;
_19.0 = 51_u8 - 63_u8;
RET = !_1;
_11 = [(-9223372036854775808_isize),(-109_isize)];
_16 = (-69_isize);
_9 = _4;
match _8 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768178910 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_17 = (-102489408854204829348507764755052862165_i128);
_7 = -_12;
_4 = [_16,_16];
_14 = '\u{6a918}' as u128;
_9 = [_16,_16];
_12 = _7 ^ _5;
_5 = _7 & _12;
Call(_23.fld5 = fn2(_16, _10, _13, _7), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_7 = _3 as i16;
RET = _1;
_9 = [_16,_16];
_13 = [_16,_16];
_14 = (-1299856901795808930_i64) as u128;
_2 = [_16,_16];
_23.fld2 = core::ptr::addr_of!(_23.fld1);
_21 = [14111588182374780567_u64,4835504403307047595_u64,17585003665132392353_u64,10396233822970557199_u64];
_7 = _5 << _1;
_23.fld3 = [7423938796814900097_usize,0_usize,0_usize,4_usize,7_usize,3_usize,4_usize,4_usize];
_12 = _17 as i16;
_23.fld4 = -_5;
_19.0 = _16 as u8;
_2 = _6;
_4 = [_16,_16];
_23.fld1 = '\u{83a34}';
_11 = [_16,_16];
_18 = _14 as f32;
_20 = 1037807134020228715_u64 as f64;
_22 = _16 | _16;
_24.0 = [16652635186735685569_u64,11475718150274770435_u64,11337933655833905848_u64,3858744102593738861_u64];
_20 = 1390665351_i32 as f64;
_23.fld4 = !_5;
Goto(bb6)
}
bb6 = {
_12 = _23.fld4 << _8;
_26 = _23.fld2;
_5 = -_12;
Goto(bb7)
}
bb7 = {
_23.fld2 = _26;
Goto(bb8)
}
bb8 = {
_4 = [_22,_16];
_11 = _2;
_16 = _22 * _22;
RET = _1;
_27 = _14 as i16;
_9 = _15;
_16 = _22;
_6 = _2;
_23.fld2 = core::ptr::addr_of!(_31);
_22 = 3_usize as isize;
_10 = _9;
_23.fld2 = core::ptr::addr_of!(_28);
_31 = _23.fld1;
_21 = [14354519251158391277_u64,11799746349345980831_u64,2901532606200708404_u64,17357096550248630089_u64];
_30 = _19.0 as i8;
_13 = _10;
_2 = [_16,_16];
_18 = _20 as f32;
_29 = _16 ^ _22;
_22 = _31 as isize;
_3 = _14;
_6 = [_29,_29];
_9 = [_29,_16];
RET = !_1;
_9 = [_29,_29];
Call(_22 = core::intrinsics::transmute(_29), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_21 = _23.fld5;
_14 = _3 << _16;
_5 = _23.fld4 - _12;
_14 = !_3;
_5 = 2070434179_i32 as i16;
_23.fld5 = [13320299191265686530_u64,4103284331188719154_u64,1798131380335230289_u64,10709856940896862860_u64];
_9 = [_22,_29];
_23.fld6 = Adt40::Variant0 { fld0: true,fld1: (-7146138930325865222_i64),fld2: _24,fld3: _20 };
_23.fld5 = [5267454400492848380_u64,7531452033716713801_u64,16284157597429650847_u64,7185114484021268749_u64];
match _8 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb10,
340282366920938463463374607431768178910 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
_23.fld2 = _26;
Goto(bb8)
}
bb12 = {
place!(Field::<([u64; 4],)>(Variant(_23.fld6, 0), 2)) = _24;
_14 = _3 >> _7;
_31 = _23.fld1;
_17 = !86326650782458922041731620519096991760_i128;
_1 = RET >> _7;
_37.1 = core::ptr::addr_of!(_23.fld0);
_1 = RET;
place!(Field::<bool>(Variant(_23.fld6, 0), 0)) = true;
_27 = _23.fld4 & _23.fld4;
_35 = _18 + _18;
_26 = core::ptr::addr_of!(_23.fld1);
_37.1 = core::ptr::addr_of!(_17);
_7 = _27 - _27;
_24 = (_23.fld5,);
_26 = core::ptr::addr_of!((*_26));
_22 = _29;
_34 = [_19.0,_19.0,_19.0,_19.0,_19.0];
_34 = [_19.0,_19.0,_19.0,_19.0,_19.0];
_30 = 73_i8;
_23.fld1 = _31;
_22 = -_16;
_15 = [_22,_29];
_39 = _34;
_14 = Field::<bool>(Variant(_23.fld6, 0), 0) as u128;
place!(Field::<i64>(Variant(_23.fld6, 0), 1)) = _22 as i64;
_2 = [_29,_16];
_40.0 = _17 & _17;
Goto(bb13)
}
bb13 = {
_12 = _27 ^ _7;
_41.fld0 = core::ptr::addr_of!(_24);
_37.0 = -_17;
_7 = !_12;
_7 = -_12;
_28 = (*_26);
place!(Field::<([u64; 4],)>(Variant(_23.fld6, 0), 2)).0 = [17453150532405259323_u64,4330465736184963997_u64,10618858792852126686_u64,15120571980181126514_u64];
_23.fld5 = [12499746771874449767_u64,10262382816884339913_u64,14886336095907487419_u64,13581789193857003792_u64];
Goto(bb14)
}
bb14 = {
_23.fld4 = -_27;
_27 = _7;
_21 = _24.0;
_24 = (Field::<([u64; 4],)>(Variant(_23.fld6, 0), 2).0,);
_23.fld2 = core::ptr::addr_of!(_38);
_41.fld0 = core::ptr::addr_of!(_24);
_2 = [_29,_16];
_32 = [_16,_16];
_23.fld6 = Adt40::Variant0 { fld0: false,fld1: 8602621279824464125_i64,fld2: _24,fld3: _20 };
_5 = _12;
_28 = _23.fld1;
_13 = [_29,_29];
_40.1 = _37.1;
_10 = _4;
_27 = _23.fld4 + _5;
_40.0 = _17;
_23.fld5 = [1490242295860952821_u64,3991880850645402204_u64,5899721884746698035_u64,7891539834617201882_u64];
_12 = !_27;
_8 = _7;
_30 = _17 as i8;
place!(Field::<bool>(Variant(_23.fld6, 0), 0)) = _8 < _12;
_37.0 = _40.0;
place!(Field::<f64>(Variant(_23.fld6, 0), 3)) = _40.0 as f64;
_23.fld0 = _37.0;
_23.fld6 = Adt40::Variant0 { fld0: true,fld1: 4087781645200212634_i64,fld2: _24,fld3: _20 };
_16 = -_29;
place!(Field::<f64>(Variant(_23.fld6, 0), 3)) = -_20;
_44 = (-1063614265_i32);
_40.1 = core::ptr::addr_of!(_37.0);
_5 = _27;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(1_usize, 28_usize, Move(_28), 39_usize, Move(_39), 2_usize, Move(_2), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(1_usize, 6_usize, Move(_6), 1_usize, Move(_1), 17_usize, Move(_17), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(1_usize, 16_usize, Move(_16), 11_usize, Move(_11), 9_usize, Move(_9), 44_usize, Move(_44)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(1_usize, 5_usize, Move(_5), 27_usize, Move(_27), 46_usize, _46, 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: isize,mut _2: [isize; 2],mut _3: [isize; 2],mut _4: i16) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _5: u8;
let _6: isize;
let _7: [i32; 7];
let _8: Adt46;
let _9: u128;
let _10: Adt44;
let _11: ([u64; 4],);
let _12: u8;
let _13: usize;
let _14: Adt45;
let _15: *const (i128, *const i128, &'static [usize; 2]);
let _16: (&'static [usize; 2],);
let _17: f64;
let _18: isize;
let _19: Adt41;
let _20: char;
let _21: i128;
let _22: isize;
let _23: f64;
let _24: Adt53;
let _25: f32;
let _26: ();
let _27: ();
{
RET = [12727047880303332382_u64,405530639002580191_u64,11687961208788209214_u64,6533191236386701943_u64];
_1 = 9223372036854775807_isize | (-9223372036854775808_isize);
_4 = !21170_i16;
_3 = [_1,_1];
_2 = _3;
_3 = _2;
_2 = [_1,_1];
RET = [1149615944345219317_u64,4669480217046232925_u64,16331117224578618683_u64,8325731954817667310_u64];
_6 = _1;
_4 = 52_u8 as i16;
_6 = false as isize;
_5 = 71_u8;
RET = [17260464345673880223_u64,1539584497238932861_u64,2274880795241282451_u64,15470826726012440867_u64];
_6 = _1 - _1;
_6 = 10696_u16 as isize;
_3 = [_1,_1];
RET = [17345779299813494034_u64,173448747011832506_u64,6883265054970034427_u64,5714920621395355442_u64];
_3 = _2;
Goto(bb1)
}
bb1 = {
_1 = 133516240453431626974691837709864114653_u128 as isize;
_5 = 111_u8 ^ 113_u8;
_1 = _6 ^ _6;
Call(_8 = fn3(_3, _1, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = [_1,_6];
_6 = _1;
_3 = _2;
_5 = 9_u8;
_8.fld1.0 = [3192335666226659006_u64,1662870757404125725_u64,10193285564509216600_u64,2462993282223037130_u64];
_3 = [_1,_1];
_8.fld1.0 = [11309690581883455633_u64,143683101824217472_u64,14958036764874617270_u64,9025664755019199097_u64];
_7 = [(-246976846_i32),970099207_i32,2053916771_i32,(-449782741_i32),(-1179752267_i32),915021527_i32,(-599975601_i32)];
_4 = (-806_i16) & 1224_i16;
_1 = _6;
_5 = 154_u8;
RET = _8.fld1.0;
_8.fld0 = !false;
_9 = _8.fld0 as u128;
Goto(bb3)
}
bb3 = {
_11 = (_8.fld1.0,);
_2 = _3;
_4 = -(-6012_i16);
_8.fld1 = (RET,);
_8.fld1.0 = [6254126211950618019_u64,1969510438925901103_u64,8434734777953029187_u64,4183087155953587410_u64];
_9 = 234502278741630841104653382979951194677_u128;
_2 = [_6,_1];
_11 = (_8.fld1.0,);
_2 = [_1,_1];
_2 = [_1,_6];
_8.fld1 = _11;
_3 = _2;
_8.fld1.0 = RET;
_5 = !177_u8;
_7 = [(-1278655845_i32),1163487691_i32,901944915_i32,(-847730720_i32),1945893421_i32,828931159_i32,1556924434_i32];
_4 = (-71_i8) as i16;
_3 = [_6,_6];
match _9 {
0 => bb2,
1 => bb4,
2 => bb5,
234502278741630841104653382979951194677 => bb7,
_ => bb6
}
}
bb4 = {
_2 = [_1,_6];
_6 = _1;
_3 = _2;
_5 = 9_u8;
_8.fld1.0 = [3192335666226659006_u64,1662870757404125725_u64,10193285564509216600_u64,2462993282223037130_u64];
_3 = [_1,_1];
_8.fld1.0 = [11309690581883455633_u64,143683101824217472_u64,14958036764874617270_u64,9025664755019199097_u64];
_7 = [(-246976846_i32),970099207_i32,2053916771_i32,(-449782741_i32),(-1179752267_i32),915021527_i32,(-599975601_i32)];
_4 = (-806_i16) & 1224_i16;
_1 = _6;
_5 = 154_u8;
RET = _8.fld1.0;
_8.fld0 = !false;
_9 = _8.fld0 as u128;
Goto(bb3)
}
bb5 = {
_1 = 133516240453431626974691837709864114653_u128 as isize;
_5 = 111_u8 ^ 113_u8;
_1 = _6 ^ _6;
Call(_8 = fn3(_3, _1, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_12 = _5 * _5;
RET = [8799701186542622384_u64,16813732107324654054_u64,18198399837657165320_u64,2639781587462214124_u64];
RET = _11.0;
_5 = _12 << _6;
_12 = _5 << _4;
_3 = [_1,_1];
_1 = _6;
_5 = !_12;
_13 = 4390455259765028798_usize;
_14.fld1 = '\u{f3ee4}';
_11.0 = [11628228024738894252_u64,13586639793989758281_u64,12536824619688633393_u64,4385575236816688836_u64];
_8.fld1 = (_11.0,);
_14.fld4 = _4;
_6 = _5 as isize;
_14.fld2 = core::ptr::addr_of!(_14.fld1);
_3 = [_6,_1];
_12 = 49105_u16 as u8;
match _13 {
4390455259765028798 => bb8,
_ => bb2
}
}
bb8 = {
_5 = _12;
_11.0 = _8.fld1.0;
_8.fld0 = false;
_14.fld1 = '\u{64e00}';
_14.fld5 = [13663183052929344867_u64,4672695835921753115_u64,12301206984255630035_u64,14786067542510850428_u64];
match _13 {
4390455259765028798 => bb10,
_ => bb9
}
}
bb9 = {
_11 = (_8.fld1.0,);
_2 = _3;
_4 = -(-6012_i16);
_8.fld1 = (RET,);
_8.fld1.0 = [6254126211950618019_u64,1969510438925901103_u64,8434734777953029187_u64,4183087155953587410_u64];
_9 = 234502278741630841104653382979951194677_u128;
_2 = [_6,_1];
_11 = (_8.fld1.0,);
_2 = [_1,_1];
_2 = [_1,_6];
_8.fld1 = _11;
_3 = _2;
_8.fld1.0 = RET;
_5 = !177_u8;
_7 = [(-1278655845_i32),1163487691_i32,901944915_i32,(-847730720_i32),1945893421_i32,828931159_i32,1556924434_i32];
_4 = (-71_i8) as i16;
_3 = [_6,_6];
match _9 {
0 => bb2,
1 => bb4,
2 => bb5,
234502278741630841104653382979951194677 => bb7,
_ => bb6
}
}
bb10 = {
_17 = 56517_u16 as f64;
RET = _14.fld5;
Goto(bb11)
}
bb11 = {
_20 = _14.fld1;
RET = [6174119042824948595_u64,14114117273376824978_u64,17895534886673340867_u64,18349537186599684601_u64];
_21 = _4 as i128;
RET = [11903583740034740315_u64,4457729256333944704_u64,7854684125686266607_u64,5998405995022679160_u64];
RET = [7728350138482958180_u64,4663087028692612159_u64,9175652683350519011_u64,11108184456577202880_u64];
_14.fld0 = _21;
_11 = (_14.fld5,);
RET = [16622338139568950982_u64,12637110024913261394_u64,12894590080110611013_u64,13707317701979440369_u64];
_14.fld1 = _20;
match _9 {
0 => bb9,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
234502278741630841104653382979951194677 => bb17,
_ => bb16
}
}
bb12 = {
_1 = 133516240453431626974691837709864114653_u128 as isize;
_5 = 111_u8 ^ 113_u8;
_1 = _6 ^ _6;
Call(_8 = fn3(_3, _1, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_11 = (_8.fld1.0,);
_2 = _3;
_4 = -(-6012_i16);
_8.fld1 = (RET,);
_8.fld1.0 = [6254126211950618019_u64,1969510438925901103_u64,8434734777953029187_u64,4183087155953587410_u64];
_9 = 234502278741630841104653382979951194677_u128;
_2 = [_6,_1];
_11 = (_8.fld1.0,);
_2 = [_1,_1];
_2 = [_1,_6];
_8.fld1 = _11;
_3 = _2;
_8.fld1.0 = RET;
_5 = !177_u8;
_7 = [(-1278655845_i32),1163487691_i32,901944915_i32,(-847730720_i32),1945893421_i32,828931159_i32,1556924434_i32];
_4 = (-71_i8) as i16;
_3 = [_6,_6];
match _9 {
0 => bb2,
1 => bb4,
2 => bb5,
234502278741630841104653382979951194677 => bb7,
_ => bb6
}
}
bb14 = {
_5 = _12;
_11.0 = _8.fld1.0;
_8.fld0 = false;
_14.fld1 = '\u{64e00}';
_14.fld5 = [13663183052929344867_u64,4672695835921753115_u64,12301206984255630035_u64,14786067542510850428_u64];
match _13 {
4390455259765028798 => bb10,
_ => bb9
}
}
bb15 = {
_12 = _5 * _5;
RET = [8799701186542622384_u64,16813732107324654054_u64,18198399837657165320_u64,2639781587462214124_u64];
RET = _11.0;
_5 = _12 << _6;
_12 = _5 << _4;
_3 = [_1,_1];
_1 = _6;
_5 = !_12;
_13 = 4390455259765028798_usize;
_14.fld1 = '\u{f3ee4}';
_11.0 = [11628228024738894252_u64,13586639793989758281_u64,12536824619688633393_u64,4385575236816688836_u64];
_8.fld1 = (_11.0,);
_14.fld4 = _4;
_6 = _5 as isize;
_14.fld2 = core::ptr::addr_of!(_14.fld1);
_3 = [_6,_1];
_12 = 49105_u16 as u8;
match _13 {
4390455259765028798 => bb8,
_ => bb2
}
}
bb16 = {
_1 = 133516240453431626974691837709864114653_u128 as isize;
_5 = 111_u8 ^ 113_u8;
_1 = _6 ^ _6;
Call(_8 = fn3(_3, _1, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb17 = {
_2 = _3;
_14.fld0 = _21;
_8.fld1 = (_11.0,);
_17 = 2689367155_u32 as f64;
_5 = 2618323084_u32 as u8;
_14.fld0 = _21 << _6;
_11.0 = [7106572833070510179_u64,3974682859666303668_u64,10058631604940605534_u64,520492028779099845_u64];
_20 = _14.fld1;
_14.fld4 = _4 & _4;
_25 = _17 as f32;
_22 = _1;
RET = [9528207041337708200_u64,15100753362306156191_u64,17244541089301551448_u64,8351564350729819320_u64];
Goto(bb18)
}
bb18 = {
Call(_26 = dump_var(2_usize, 21_usize, Move(_21), 20_usize, Move(_20), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_26 = dump_var(2_usize, 22_usize, Move(_22), 9_usize, Move(_9), 3_usize, Move(_3), 27_usize, _27), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [isize; 2],mut _2: isize,mut _3: [isize; 2],mut _4: [isize; 2]) -> Adt46 {
mir! {
type RET = Adt46;
let _5: [u64; 4];
let _6: u8;
let _7: Adt55;
let _8: Adt49;
let _9: isize;
let _10: Adt45;
let _11: char;
let _12: [isize; 8];
let _13: Adt52;
let _14: [i32; 7];
let _15: [usize; 8];
let _16: [i32; 7];
let _17: bool;
let _18: ([u64; 4],);
let _19: [usize; 8];
let _20: isize;
let _21: Adt55;
let _22: u8;
let _23: isize;
let _24: [isize; 2];
let _25: *const (i128, *const i128, &'static [usize; 2]);
let _26: bool;
let _27: usize;
let _28: Adt40;
let _29: isize;
let _30: Adt52;
let _31: f64;
let _32: bool;
let _33: ();
let _34: ();
{
_4 = [_2,_2];
RET.fld1.0 = [12449854160429685184_u64,14423207218465162934_u64,15640846453173315010_u64,9746220878379146862_u64];
RET.fld0 = !false;
_3 = _4;
RET.fld1.0 = [2458327842773801959_u64,10263348523310402286_u64,933763563900305903_u64,12251373538165265752_u64];
RET.fld0 = true | false;
RET.fld0 = !true;
RET.fld0 = true & false;
_2 = 9223372036854775807_isize & 9223372036854775807_isize;
_5 = [6119869396591317194_u64,2169442956493624510_u64,10091152103909866650_u64,386917695818149021_u64];
RET.fld1.0 = _5;
RET.fld1 = (_5,);
_5 = [13362431123563716895_u64,2567977260944594372_u64,6927844452585690700_u64,11377290099500601641_u64];
RET.fld1.0 = [13337377449218372258_u64,13903277616903670200_u64,13235125762602151677_u64,1218147658745248610_u64];
_8.fld1.fld7 = [9481547210618129089_usize,1231476697538393171_usize,4827519680560407502_usize,14274888989066252974_usize,7_usize,3_usize,3110970354954480157_usize,1_usize];
Goto(bb1)
}
bb1 = {
_6 = 37_u8 | 82_u8;
_8.fld1.fld1 = '\u{8616a}';
_6 = 65_u8 ^ 159_u8;
_10.fld5 = _5;
_8.fld1.fld1 = '\u{82bc6}';
_8.fld1.fld0 = core::ptr::addr_of!(_10.fld1);
_10.fld0 = (-93_i8) as i128;
RET.fld1 = (_5,);
_8.fld1.fld7 = [6584164242718198499_usize,15729087320443710988_usize,7181508331006112896_usize,11775190172330107612_usize,3_usize,3_usize,11889238884649703500_usize,4_usize];
RET.fld1.0 = _10.fld5;
_9 = 16_i8 as isize;
_8.fld3 = Adt42::Variant1 { fld0: 2283974407_u32 };
RET.fld0 = true | false;
_8.fld1.fld0 = core::ptr::addr_of!(_8.fld1.fld1);
_6 = 54941_u16 as u8;
RET.fld0 = true ^ false;
RET.fld1 = (_5,);
RET.fld0 = true;
_9 = _2 & _2;
RET.fld0 = _2 != _9;
_8.fld2 = core::ptr::addr_of!(RET.fld1);
RET.fld1 = (_5,);
_8.fld1.fld5 = core::ptr::addr_of!(_5);
Call(_8.fld3 = fn4(_10.fld5, _8.fld1.fld5, _8.fld2, Move(RET), _8.fld2, _8.fld1.fld7, _9, _8.fld1.fld0, _3, _8.fld1.fld1, _8.fld1.fld5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = _8.fld1.fld1;
Goto(bb3)
}
bb3 = {
_8.fld3 = Adt42::Variant3 { fld0: _8.fld1.fld0,fld1: 252021595_i32 };
_2 = _9;
place!(Field::<i32>(Variant(_8.fld3, 3), 1)) = (-317987426_i32);
_8.fld1.fld2 = _9;
RET.fld1.0 = [563376967784328937_u64,14226709941054138252_u64,4352734127521323815_u64,17336485489390231723_u64];
_3 = _1;
_8.fld5 = -(-7716414058141229977_i64);
match Field::<i32>(Variant(_8.fld3, 3), 1) {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
340282366920938463463374607431450224030 => bb7,
_ => bb6
}
}
bb4 = {
_11 = _8.fld1.fld1;
Goto(bb3)
}
bb5 = {
_6 = 37_u8 | 82_u8;
_8.fld1.fld1 = '\u{8616a}';
_6 = 65_u8 ^ 159_u8;
_10.fld5 = _5;
_8.fld1.fld1 = '\u{82bc6}';
_8.fld1.fld0 = core::ptr::addr_of!(_10.fld1);
_10.fld0 = (-93_i8) as i128;
RET.fld1 = (_5,);
_8.fld1.fld7 = [6584164242718198499_usize,15729087320443710988_usize,7181508331006112896_usize,11775190172330107612_usize,3_usize,3_usize,11889238884649703500_usize,4_usize];
RET.fld1.0 = _10.fld5;
_9 = 16_i8 as isize;
_8.fld3 = Adt42::Variant1 { fld0: 2283974407_u32 };
RET.fld0 = true | false;
_8.fld1.fld0 = core::ptr::addr_of!(_8.fld1.fld1);
_6 = 54941_u16 as u8;
RET.fld0 = true ^ false;
RET.fld1 = (_5,);
RET.fld0 = true;
_9 = _2 & _2;
RET.fld0 = _2 != _9;
_8.fld2 = core::ptr::addr_of!(RET.fld1);
RET.fld1 = (_5,);
_8.fld1.fld5 = core::ptr::addr_of!(_5);
Call(_8.fld3 = fn4(_10.fld5, _8.fld1.fld5, _8.fld2, Move(RET), _8.fld2, _8.fld1.fld7, _9, _8.fld1.fld0, _3, _8.fld1.fld1, _8.fld1.fld5), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_3 = [_9,_9];
_10.fld1 = _8.fld1.fld1;
_8.fld5 = (-55757984765162896_i64);
_8.fld1.fld0 = core::ptr::addr_of!(_10.fld1);
RET.fld1 = (_5,);
RET.fld1.0 = _10.fld5;
_12 = [_8.fld1.fld2,_8.fld1.fld2,_8.fld1.fld2,_2,_2,_8.fld1.fld2,_2,_9];
RET.fld0 = true;
place!(Field::<i32>(Variant(_8.fld3, 3), 1)) = (-1616049755_i32) ^ (-1904992177_i32);
_6 = !155_u8;
_10.fld2 = core::ptr::addr_of!(_11);
_8.fld1.fld2 = _2;
RET.fld0 = !false;
_10.fld1 = _8.fld1.fld1;
_8.fld2 = core::ptr::addr_of!(RET.fld1);
_10.fld3 = [15441605122077456503_usize,5_usize,0_usize,5_usize,6_usize,3_usize,1495430354912387002_usize,12619487804195952338_usize];
_8.fld1.fld6 = _8.fld5 | _8.fld5;
_8.fld4 = 23930_u16;
RET.fld1 = (_10.fld5,);
_10.fld5 = [16525881454498704434_u64,6584353156092191647_u64,11614282445135149253_u64,8986203471043951766_u64];
_8.fld1.fld0 = Field::<*const char>(Variant(_8.fld3, 3), 0);
Goto(bb8)
}
bb8 = {
_10.fld1 = _11;
SetDiscriminant(_8.fld3, 1);
RET.fld1 = (_10.fld5,);
RET.fld0 = false;
_8.fld1.fld0 = _10.fld2;
_10.fld3 = _8.fld1.fld7;
_10.fld4 = (-95_i16);
Call(_8.fld4 = core::intrinsics::bswap(28124_u16), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
RET.fld0 = !true;
_10.fld1 = _8.fld1.fld1;
_6 = 150_u8;
_11 = _10.fld1;
_17 = RET.fld0;
_10.fld4 = 21148_i16;
_1 = _3;
RET.fld1 = (_5,);
place!(Field::<u32>(Variant(_8.fld3, 1), 0)) = 240300970_u32 ^ 1184957290_u32;
_8.fld1.fld5 = core::ptr::addr_of!(RET.fld1.0);
_8.fld1.fld5 = core::ptr::addr_of!(_5);
SetDiscriminant(_8.fld3, 3);
_3 = _1;
RET.fld1 = (_10.fld5,);
_1 = [_9,_8.fld1.fld2];
RET.fld1 = (_5,);
_8.fld1.fld1 = _11;
_15 = [6_usize,1_usize,10773272894741848065_usize,14110961090192463014_usize,7_usize,3_usize,6423403437955773282_usize,16573614300714584950_usize];
place!(Field::<i32>(Variant(_8.fld3, 3), 1)) = -32810764_i32;
_8.fld1.fld5 = core::ptr::addr_of!(RET.fld1.0);
_17 = RET.fld0 & RET.fld0;
RET.fld1 = (_10.fld5,);
place!(Field::<*const char>(Variant(_8.fld3, 3), 0)) = _10.fld2;
RET.fld0 = _17;
Goto(bb10)
}
bb10 = {
_8.fld1.fld0 = core::ptr::addr_of!(_10.fld1);
_3 = [_9,_2];
_10.fld1 = _11;
RET.fld1.0 = [4510036678065402098_u64,12714536904066732438_u64,5732998867252294594_u64,16775519473218791168_u64];
Goto(bb11)
}
bb11 = {
_16 = [Field::<i32>(Variant(_8.fld3, 3), 1),Field::<i32>(Variant(_8.fld3, 3), 1),Field::<i32>(Variant(_8.fld3, 3), 1),Field::<i32>(Variant(_8.fld3, 3), 1),Field::<i32>(Variant(_8.fld3, 3), 1),Field::<i32>(Variant(_8.fld3, 3), 1),Field::<i32>(Variant(_8.fld3, 3), 1)];
RET.fld0 = !_17;
_8.fld1.fld2 = _2 * _2;
place!(Field::<*const char>(Variant(_8.fld3, 3), 0)) = _10.fld2;
_19 = [8192590621419809799_usize,3_usize,10958485110637624281_usize,1_usize,7_usize,1317915322966571520_usize,4_usize,1_usize];
_4 = [_8.fld1.fld2,_8.fld1.fld2];
SetDiscriminant(_8.fld3, 2);
_8.fld5 = !_8.fld1.fld6;
place!(Field::<*mut f64>(Variant(_8.fld3, 2), 0)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_8.fld3, 2), 4)));
place!(Field::<[usize; 8]>(Variant(_8.fld3, 2), 1)) = _10.fld3;
_3 = [_9,_8.fld1.fld2];
_20 = _6 as isize;
_8.fld3 = Adt42::Variant0 { fld0: _16,fld1: _12 };
RET.fld1 = (_10.fld5,);
SetDiscriminant(_8.fld3, 3);
_23 = _2;
RET.fld1 = (_10.fld5,);
_24 = _4;
RET.fld1 = (_5,);
_14 = _16;
_8.fld3 = Adt42::Variant1 { fld0: 2365192052_u32 };
match _6 {
0 => bb5,
150 => bb12,
_ => bb2
}
}
bb12 = {
_8.fld1.fld2 = -_2;
_18 = (_5,);
_19 = _8.fld1.fld7;
RET.fld1 = (_18.0,);
_10.fld4 = (-6261_i16);
_8.fld3 = Adt42::Variant3 { fld0: _10.fld2,fld1: 1712284983_i32 };
_20 = _2 | _9;
RET.fld1 = _18;
RET.fld1 = _18;
_12 = [_23,_2,_20,_23,_20,_20,_20,_20];
_19 = [6930172719816171673_usize,598066617888587359_usize,3_usize,12323228341658657829_usize,12307077876791813508_usize,1_usize,5_usize,6_usize];
RET = Adt46 { fld0: _17,fld1: _18 };
_8.fld2 = core::ptr::addr_of!(RET.fld1);
_15 = [5_usize,1534299640155771181_usize,14531955686471769598_usize,4_usize,3_usize,0_usize,11744517261565153599_usize,0_usize];
_15 = _19;
_22 = _10.fld1 as u8;
Goto(bb13)
}
bb13 = {
_10.fld5 = [16142769765147124247_u64,8372093046708087046_u64,4408927442232302823_u64,1460065633774221927_u64];
_26 = RET.fld0;
_8.fld2 = core::ptr::addr_of!(_18);
_8.fld2 = core::ptr::addr_of!(RET.fld1);
_8.fld1.fld4 = core::ptr::addr_of_mut!(_31);
_20 = !_9;
_27 = _23 as usize;
_17 = RET.fld0;
_27 = 18144501184796792538_usize;
_10.fld1 = _11;
Goto(bb14)
}
bb14 = {
_8.fld3 = Adt42::Variant0 { fld0: _16,fld1: _12 };
_19 = [_27,_27,_27,_27,_27,_27,_27,_27];
RET.fld1 = (_5,);
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(3_usize, 6_usize, Move(_6), 1_usize, Move(_1), 19_usize, Move(_19), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(3_usize, 23_usize, Move(_23), 3_usize, Move(_3), 16_usize, Move(_16), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(3_usize, 24_usize, Move(_24), 15_usize, Move(_15), 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [u64; 4],mut _2: *const [u64; 4],mut _3: *const ([u64; 4],),mut _4: Adt46,mut _5: *const ([u64; 4],),mut _6: [usize; 8],mut _7: isize,mut _8: *const char,mut _9: [isize; 2],mut _10: char,mut _11: *const [u64; 4]) -> Adt42 {
mir! {
type RET = Adt42;
let _12: char;
let _13: i64;
let _14: f32;
let _15: Adt54;
let _16: isize;
let _17: (i128, u128, char, &'static [usize; 2]);
let _18: i8;
let _19: f64;
let _20: [usize; 2];
let _21: u32;
let _22: f64;
let _23: isize;
let _24: char;
let _25: i32;
let _26: isize;
let _27: [i64; 4];
let _28: [i64; 4];
let _29: Adt48;
let _30: u64;
let _31: f64;
let _32: *mut f32;
let _33: [usize; 2];
let _34: [u8; 5];
let _35: isize;
let _36: i8;
let _37: f64;
let _38: bool;
let _39: *const [u64; 4];
let _40: u32;
let _41: ();
let _42: ();
{
RET = Adt42::Variant3 { fld0: _8,fld1: (-620460263_i32) };
_3 = _5;
place!(Field::<i32>(Variant(RET, 3), 1)) = 4334142083543553467_u64 as i32;
_2 = core::ptr::addr_of!(_1);
_2 = _11;
Call(_2 = fn5(_4.fld1, _9, _9, Move(RET), _7, _5, _4.fld0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4.fld1.0 = [4543027145740181378_u64,9912489178063214991_u64,2477621871341590150_u64,17163520675993820719_u64];
_4.fld1.0 = _1;
Goto(bb2)
}
bb2 = {
_3 = core::ptr::addr_of!(_4.fld1);
_4.fld1 = (_1,);
Goto(bb3)
}
bb3 = {
_5 = core::ptr::addr_of!(_4.fld1);
_2 = core::ptr::addr_of!((*_5).0);
RET = Adt42::Variant1 { fld0: 815618981_u32 };
place!(Field::<u32>(Variant(RET, 1), 0)) = !769730208_u32;
_14 = 4835630676204741718_i64 as f32;
RET = Adt42::Variant3 { fld0: _8,fld1: (-368095141_i32) };
place!(Field::<*const char>(Variant(RET, 3), 0)) = _8;
_1 = [14117563939467283795_u64,3445468750201853261_u64,4470080006537303906_u64,6552895102454286479_u64];
place!(Field::<i32>(Variant(RET, 3), 1)) = 198_u8 as i32;
_11 = _2;
_14 = 285619816012775948122816283701497664230_u128 as f32;
place!(Field::<i32>(Variant(RET, 3), 1)) = (-774550692_i32);
place!(Field::<i32>(Variant(RET, 3), 1)) = 137248501171049059183947168122217509186_u128 as i32;
_6 = [17611357697756712981_usize,9070147676849822009_usize,2_usize,10759646112303052891_usize,0_usize,15501991100437701361_usize,15784579096553745161_usize,8480375591201238680_usize];
_5 = core::ptr::addr_of!((*_5));
_5 = core::ptr::addr_of!((*_3));
_11 = core::ptr::addr_of!((*_5).0);
_10 = '\u{db1c7}';
_5 = _3;
place!(Field::<i32>(Variant(RET, 3), 1)) = 86_i8 as i32;
_5 = core::ptr::addr_of!(_4.fld1);
_5 = _3;
SetDiscriminant(RET, 0);
Goto(bb4)
}
bb4 = {
_10 = '\u{8f44c}';
_9 = [_7,_7];
_4.fld0 = !false;
_16 = !_7;
_17.0 = _16 as i128;
place!(Field::<[isize; 8]>(Variant(RET, 0), 1)) = [_7,_16,_16,_16,_7,_16,_16,_16];
Call(_4.fld1.0 = core::intrinsics::transmute(_1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_9 = [_16,_7];
place!(Field::<[i32; 7]>(Variant(RET, 0), 0)) = [347588784_i32,(-1562888651_i32),688330538_i32,(-1320366628_i32),2105392147_i32,1463415568_i32,(-186511280_i32)];
_12 = _10;
_17.3 = &_20;
_18 = _10 as i8;
_5 = core::ptr::addr_of!(_4.fld1);
_6 = [7_usize,0_usize,5_usize,3180845381645199993_usize,14968789976484898223_usize,10857334051492391416_usize,1229889925120422746_usize,5_usize];
_18 = 1620205365_u32 as i8;
_16 = !_7;
place!(Field::<[isize; 8]>(Variant(RET, 0), 1)) = [_7,_16,_16,_7,_16,_16,_7,_7];
_17.0 = 19186046936547916363008133794863423982_i128;
_3 = core::ptr::addr_of!((*_5));
_4.fld0 = true;
RET = Adt42::Variant1 { fld0: 1701905795_u32 };
_6 = [5_usize,6_usize,2_usize,1179639190485639276_usize,7006508414359377259_usize,12071973201531098358_usize,1_usize,3375045497731576458_usize];
RET = Adt42::Variant1 { fld0: 3831213135_u32 };
_20 = [7421249627820150226_usize,2_usize];
_4.fld1.0 = _1;
_6 = [0_usize,0_usize,0_usize,6165605604601365513_usize,12451639729130310147_usize,5_usize,2_usize,8816652101930199389_usize];
_17.2 = _10;
_19 = 7468106403967265508_u64 as f64;
match _17.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
19186046936547916363008133794863423982 => bb7,
_ => bb6
}
}
bb6 = {
_4.fld1.0 = [4543027145740181378_u64,9912489178063214991_u64,2477621871341590150_u64,17163520675993820719_u64];
_4.fld1.0 = _1;
Goto(bb2)
}
bb7 = {
_10 = _17.2;
_7 = !_16;
_7 = _19 as isize;
Goto(bb8)
}
bb8 = {
_1 = [15279963212681137492_u64,16206927197476697570_u64,16103042803597394004_u64,7651255146713862217_u64];
_16 = _12 as isize;
_11 = core::ptr::addr_of!((*_3).0);
place!(Field::<u32>(Variant(RET, 1), 0)) = 1463386998_u32;
_17.1 = !269078928037199958240756474369015578795_u128;
_17.0 = 90609844103628696732972251803944041347_i128 & 83421998963193394091660612942581591756_i128;
SetDiscriminant(RET, 0);
_5 = core::ptr::addr_of!((*_3));
_23 = -_16;
_16 = _7 - _23;
_4.fld1 = (_1,);
_21 = !3967535753_u32;
_11 = core::ptr::addr_of!(_1);
_5 = core::ptr::addr_of!((*_3));
_9 = [_23,_16];
_24 = _10;
_29.fld1 = _10;
_29.fld6 = 6176011024326093408_i64;
_28 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6];
Goto(bb9)
}
bb9 = {
_18 = _21 as i8;
_29.fld0 = core::ptr::addr_of!(_24);
_17.0 = 122658579034483044402820833332061934405_i128 >> _16;
_2 = _11;
RET = Adt42::Variant1 { fld0: _21 };
_4.fld1 = ((*_11),);
_30 = 17029744426403579986_u64;
_4.fld0 = !true;
SetDiscriminant(RET, 2);
_5 = _3;
place!(Field::<[i32; 7]>(Variant(RET, 2), 2)) = [(-1968937347_i32),(-558424317_i32),1063350026_i32,(-152034009_i32),(-1111574927_i32),401304111_i32,(-811278846_i32)];
_8 = _29.fld0;
_17.3 = &_20;
RET = Adt42::Variant3 { fld0: _29.fld0,fld1: (-1483268723_i32) };
_1 = [_30,_30,_30,_30];
_28 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_13 = _29.fld1 as i64;
_17.1 = !192291682208748902766673717968942222180_u128;
_32 = core::ptr::addr_of_mut!(_14);
match _30 {
0 => bb10,
1 => bb11,
17029744426403579986 => bb13,
_ => bb12
}
}
bb10 = {
_4.fld1.0 = [4543027145740181378_u64,9912489178063214991_u64,2477621871341590150_u64,17163520675993820719_u64];
_4.fld1.0 = _1;
Goto(bb2)
}
bb11 = {
_3 = core::ptr::addr_of!(_4.fld1);
_4.fld1 = (_1,);
Goto(bb3)
}
bb12 = {
_5 = core::ptr::addr_of!(_4.fld1);
_2 = core::ptr::addr_of!((*_5).0);
RET = Adt42::Variant1 { fld0: 815618981_u32 };
place!(Field::<u32>(Variant(RET, 1), 0)) = !769730208_u32;
_14 = 4835630676204741718_i64 as f32;
RET = Adt42::Variant3 { fld0: _8,fld1: (-368095141_i32) };
place!(Field::<*const char>(Variant(RET, 3), 0)) = _8;
_1 = [14117563939467283795_u64,3445468750201853261_u64,4470080006537303906_u64,6552895102454286479_u64];
place!(Field::<i32>(Variant(RET, 3), 1)) = 198_u8 as i32;
_11 = _2;
_14 = 285619816012775948122816283701497664230_u128 as f32;
place!(Field::<i32>(Variant(RET, 3), 1)) = (-774550692_i32);
place!(Field::<i32>(Variant(RET, 3), 1)) = 137248501171049059183947168122217509186_u128 as i32;
_6 = [17611357697756712981_usize,9070147676849822009_usize,2_usize,10759646112303052891_usize,0_usize,15501991100437701361_usize,15784579096553745161_usize,8480375591201238680_usize];
_5 = core::ptr::addr_of!((*_5));
_5 = core::ptr::addr_of!((*_3));
_11 = core::ptr::addr_of!((*_5).0);
_10 = '\u{db1c7}';
_5 = _3;
place!(Field::<i32>(Variant(RET, 3), 1)) = 86_i8 as i32;
_5 = core::ptr::addr_of!(_4.fld1);
_5 = _3;
SetDiscriminant(RET, 0);
Goto(bb4)
}
bb13 = {
place!(Field::<*const char>(Variant(RET, 3), 0)) = _8;
place!(Field::<i32>(Variant(RET, 3), 1)) = !1250398605_i32;
_31 = -_19;
_29.fld4 = core::ptr::addr_of_mut!(_22);
_29.fld5 = core::ptr::addr_of!((*_3).0);
_35 = _7 >> _16;
_29.fld5 = _2;
_5 = core::ptr::addr_of!(_4.fld1);
_25 = Field::<i32>(Variant(RET, 3), 1) + Field::<i32>(Variant(RET, 3), 1);
_34 = [235_u8,99_u8,119_u8,2_u8,146_u8];
_26 = _29.fld6 as isize;
_27 = _28;
SetDiscriminant(RET, 2);
_19 = (*_32) as f64;
place!(Field::<f64>(Variant(RET, 2), 4)) = _31;
place!(Field::<[i64; 4]>(Variant(RET, 2), 5)) = [_13,_13,_29.fld6,_13];
Goto(bb14)
}
bb14 = {
_10 = _29.fld1;
_17.3 = &_20;
place!(Field::<*mut f64>(Variant(RET, 2), 0)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(RET, 2), 4)));
match _29.fld6 {
0 => bb7,
1 => bb10,
2 => bb6,
3 => bb8,
4 => bb15,
6176011024326093408 => bb17,
_ => bb16
}
}
bb15 = {
_10 = '\u{8f44c}';
_9 = [_7,_7];
_4.fld0 = !false;
_16 = !_7;
_17.0 = _16 as i128;
place!(Field::<[isize; 8]>(Variant(RET, 0), 1)) = [_7,_16,_16,_16,_7,_16,_16,_16];
Call(_4.fld1.0 = core::intrinsics::transmute(_1), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_3 = core::ptr::addr_of!(_4.fld1);
_4.fld1 = (_1,);
Goto(bb3)
}
bb17 = {
_37 = -Field::<f64>(Variant(RET, 2), 4);
RET = Adt42::Variant3 { fld0: _29.fld0,fld1: _25 };
_34 = [224_u8,174_u8,195_u8,124_u8,170_u8];
_36 = 1_usize as i8;
_38 = !_4.fld0;
_9 = [_23,_35];
_21 = 534724078_u32 << _16;
_27 = _28;
_34 = [129_u8,121_u8,14_u8,53_u8,7_u8];
_29.fld4 = core::ptr::addr_of_mut!(_37);
_6 = [4_usize,8601582866156828548_usize,3_usize,14088999693273371495_usize,6_usize,14565780153868854698_usize,13861156071088986045_usize,5277970500434056640_usize];
_29.fld2 = _23 << _16;
_6 = [6_usize,3258513247801927812_usize,16511612003703400030_usize,5_usize,3_usize,6_usize,8860813566506133366_usize,12553781104280617797_usize];
_24 = _10;
_36 = !_18;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(4_usize, 7_usize, Move(_7), 38_usize, Move(_38), 24_usize, Move(_24), 23_usize, Move(_23)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(4_usize, 18_usize, Move(_18), 9_usize, Move(_9), 21_usize, Move(_21), 16_usize, Move(_16)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(4_usize, 13_usize, Move(_13), 10_usize, Move(_10), 35_usize, Move(_35), 42_usize, _42), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: ([u64; 4],),mut _2: [isize; 2],mut _3: [isize; 2],mut _4: Adt42,mut _5: isize,mut _6: *const ([u64; 4],),mut _7: bool) -> *const [u64; 4] {
mir! {
type RET = *const [u64; 4];
let _8: char;
let _9: [isize; 2];
let _10: f64;
let _11: [usize; 2];
let _12: i128;
let _13: [usize; 2];
let _14: u64;
let _15: [i32; 7];
let _16: bool;
let _17: i16;
let _18: [u8; 5];
let _19: [usize; 8];
let _20: i128;
let _21: i32;
let _22: [isize; 2];
let _23: [u64; 4];
let _24: [u8; 5];
let _25: Adt46;
let _26: [isize; 8];
let _27: ([u64; 4],);
let _28: *mut f32;
let _29: char;
let _30: f32;
let _31: [isize; 2];
let _32: isize;
let _33: [u8; 5];
let _34: Adt46;
let _35: isize;
let _36: isize;
let _37: ();
let _38: ();
{
_4 = Adt42::Variant1 { fld0: 2026021172_u32 };
_3 = [_5,_5];
place!(Field::<u32>(Variant(_4, 1), 0)) = (-2_i8) as u32;
RET = core::ptr::addr_of!(_1.0);
_8 = '\u{c8382}';
_3 = [_5,_5];
_6 = core::ptr::addr_of!(_1);
_8 = '\u{fea3e}';
_5 = -(-9223372036854775808_isize);
_5 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_3 = [_5,_5];
_5 = !8_isize;
RET = core::ptr::addr_of!((*RET));
_1.0 = [8661747852217264628_u64,6717472742295286371_u64,1419622607580767276_u64,10724612567372284388_u64];
_5 = 7429_i16 as isize;
_10 = (-391848032916627959_i64) as f64;
place!(Field::<u32>(Variant(_4, 1), 0)) = 8031698295526489856_u64 as u32;
_6 = core::ptr::addr_of!((*_6));
_5 = !9223372036854775807_isize;
SetDiscriminant(_4, 1);
Goto(bb1)
}
bb1 = {
place!(Field::<u32>(Variant(_4, 1), 0)) = 2290933840_u32 & 2760882952_u32;
_3 = _2;
SetDiscriminant(_4, 1);
RET = core::ptr::addr_of!((*RET));
_11 = [11188318513672682075_usize,1_usize];
place!(Field::<u32>(Variant(_4, 1), 0)) = 1466253879_u32;
place!(Field::<u32>(Variant(_4, 1), 0)) = !3828896570_u32;
_7 = Field::<u32>(Variant(_4, 1), 0) <= Field::<u32>(Variant(_4, 1), 0);
_9 = [_5,_5];
_1.0 = [4013332163401910180_u64,12006606775348010831_u64,4650343203397190764_u64,8402420815787820026_u64];
Goto(bb2)
}
bb2 = {
_13 = _11;
_3 = [_5,_5];
_11 = [0_usize,2_usize];
place!(Field::<u32>(Variant(_4, 1), 0)) = !1438166136_u32;
_11 = [6_usize,7_usize];
_9 = [_5,_5];
_10 = 215480403756579454085481774310747241747_u128 as f64;
Goto(bb3)
}
bb3 = {
_3 = [_5,_5];
_8 = '\u{1204b}';
_12 = 135160043247834682691079703951637139199_i128 * 91911285367595604301401160456027517142_i128;
_12 = 100965146923998154736120231386027116107_i128;
RET = core::ptr::addr_of!((*_6).0);
_12 = 153848166533395036840529799272767323206_u128 as i128;
_7 = true;
_14 = !17275792151536685033_u64;
_3 = [_5,_5];
_6 = core::ptr::addr_of!((*_6));
Call(RET = fn6((*_6).0, (*_6), (*RET)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_5 = Field::<u32>(Variant(_4, 1), 0) as isize;
_5 = -(-27_isize);
_6 = core::ptr::addr_of!(_1);
_13 = [2053859876457413896_usize,5_usize];
place!(Field::<u32>(Variant(_4, 1), 0)) = !4054297271_u32;
_13 = [17933189197031224376_usize,6875087862000651345_usize];
_15 = [1567506673_i32,(-1116881735_i32),(-126985505_i32),(-705969300_i32),(-1746779693_i32),(-1553606459_i32),1442939797_i32];
_9 = _2;
_1.0 = [_14,_14,_14,_14];
SetDiscriminant(_4, 2);
place!(Field::<f64>(Variant(_4, 2), 4)) = _10 + _10;
_12 = (-43_i8) as i128;
_9 = _3;
_13 = [2_usize,7436997988392153630_usize];
_8 = '\u{fd99c}';
place!(Field::<*mut f64>(Variant(_4, 2), 0)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_4, 2), 4)));
_6 = core::ptr::addr_of!((*_6));
_2 = _9;
_1.0 = [_14,_14,_14,_14];
Goto(bb5)
}
bb5 = {
_16 = _12 != _12;
place!(Field::<*mut f64>(Variant(_4, 2), 0)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_4, 2), 4)));
place!(Field::<*mut f64>(Variant(_4, 2), 0)) = core::ptr::addr_of_mut!(_10);
_19 = [7_usize,6289490550137727846_usize,6962049539501854586_usize,9355361905655694004_usize,7_usize,0_usize,3516523343092634480_usize,2_usize];
_13 = _11;
_10 = Field::<f64>(Variant(_4, 2), 4) * Field::<f64>(Variant(_4, 2), 4);
_22 = [_5,_5];
_16 = _7;
place!(Field::<[i64; 4]>(Variant(_4, 2), 5)) = [(-1261481588173551454_i64),2511301772929868267_i64,(-3759725065459609679_i64),(-6534465651529069070_i64)];
_25.fld1 = ((*_6).0,);
_12 = 15666058236011683502185939420793177044_i128 + (-98757025966990356133591854083041556738_i128);
_25 = Adt46 { fld0: _16,fld1: (*_6) };
_1 = (_25.fld1.0,);
place!(Field::<f64>(Variant(_4, 2), 4)) = -_10;
_2 = _22;
_25.fld1 = ((*_6).0,);
_24 = [29_u8,110_u8,31_u8,250_u8,243_u8];
_14 = 83914121138592022_u64 + 2755997212193392874_u64;
_17 = (-11468_i16) ^ (-19957_i16);
_27.0 = [_14,_14,_14,_14];
Goto(bb6)
}
bb6 = {
place!(Field::<[usize; 8]>(Variant(_4, 2), 1)) = [10306912375542420810_usize,0_usize,6_usize,7_usize,9927691345102332187_usize,10343619306309529378_usize,12845505894988884963_usize,7_usize];
place!(Field::<f64>(Variant(_4, 2), 4)) = _10;
_27.0 = _1.0;
place!(Field::<f64>(Variant(_4, 2), 4)) = _10;
_4 = Adt42::Variant1 { fld0: 459088892_u32 };
_12 = -(-50203054820259294241820210620531297666_i128);
Goto(bb7)
}
bb7 = {
_6 = core::ptr::addr_of!(_25.fld1);
_22 = [_5,_5];
_15 = [128327032_i32,1098651841_i32,(-1938371262_i32),1270041989_i32,2005158023_i32,(-1925771978_i32),1997802850_i32];
RET = core::ptr::addr_of!(_27.0);
_5 = !(-9223372036854775808_isize);
_21 = 25854_u16 as i32;
RET = core::ptr::addr_of!(_23);
_1 = ((*_6).0,);
_1 = ((*_6).0,);
_27.0 = [_14,_14,_14,_14];
_25 = Adt46 { fld0: _16,fld1: _27 };
_18 = [226_u8,177_u8,34_u8,95_u8,14_u8];
_6 = core::ptr::addr_of!(_27);
_29 = _8;
_23 = [_14,_14,_14,_14];
_25.fld0 = _14 < _14;
_6 = core::ptr::addr_of!(_25.fld1);
_31 = [_5,_5];
_23 = (*_6).0;
_8 = _29;
place!(Field::<u32>(Variant(_4, 1), 0)) = !845816983_u32;
Goto(bb8)
}
bb8 = {
_14 = !3660798706245138495_u64;
_1.0 = (*_6).0;
_2 = [_5,_5];
_14 = 2741928803162944275_u64;
_4 = Adt42::Variant1 { fld0: 474733452_u32 };
_17 = (-4846_i16) & (-22156_i16);
_18 = _24;
_9 = [_5,_5];
_25.fld1 = _27;
_27 = (_25.fld1.0,);
_25.fld1.0 = [_14,_14,_14,_14];
_28 = core::ptr::addr_of_mut!(_30);
_15 = [_21,_21,_21,_21,_21,_21,_21];
_22 = [_5,_5];
_28 = core::ptr::addr_of_mut!((*_28));
_1.0 = [_14,_14,_14,_14];
_27.0 = [_14,_14,_14,_14];
Goto(bb9)
}
bb9 = {
_27 = (*_6);
_15 = [_21,_21,_21,_21,_21,_21,_21];
_20 = !_12;
_25.fld0 = !_7;
_20 = _12;
_32 = _5 * _5;
_14 = !15548368848435014500_u64;
_33 = [134_u8,111_u8,4_u8,125_u8,181_u8];
_33 = [125_u8,10_u8,33_u8,34_u8,152_u8];
_18 = [236_u8,71_u8,59_u8,166_u8,178_u8];
_28 = core::ptr::addr_of_mut!((*_28));
_25.fld0 = _16 & _7;
_18 = _33;
_12 = _20;
_5 = _32 | _32;
_14 = 17375982784326958966_u64;
_23 = _27.0;
_30 = (-9102709079094942600_i64) as f32;
_20 = _12;
_34.fld0 = _25.fld0;
RET = core::ptr::addr_of!(_1.0);
_5 = _10 as isize;
_35 = _5;
_27 = ((*RET),);
_18 = [148_u8,49_u8,212_u8,61_u8,110_u8];
_26 = [_35,_32,_5,_32,_35,_35,_35,_35];
_23 = (*RET);
_1.0 = [_14,_14,_14,_14];
match _14 {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
17375982784326958966 => bb15,
_ => bb14
}
}
bb10 = {
_14 = !3660798706245138495_u64;
_1.0 = (*_6).0;
_2 = [_5,_5];
_14 = 2741928803162944275_u64;
_4 = Adt42::Variant1 { fld0: 474733452_u32 };
_17 = (-4846_i16) & (-22156_i16);
_18 = _24;
_9 = [_5,_5];
_25.fld1 = _27;
_27 = (_25.fld1.0,);
_25.fld1.0 = [_14,_14,_14,_14];
_28 = core::ptr::addr_of_mut!(_30);
_15 = [_21,_21,_21,_21,_21,_21,_21];
_22 = [_5,_5];
_28 = core::ptr::addr_of_mut!((*_28));
_1.0 = [_14,_14,_14,_14];
_27.0 = [_14,_14,_14,_14];
Goto(bb9)
}
bb11 = {
place!(Field::<u32>(Variant(_4, 1), 0)) = 2290933840_u32 & 2760882952_u32;
_3 = _2;
SetDiscriminant(_4, 1);
RET = core::ptr::addr_of!((*RET));
_11 = [11188318513672682075_usize,1_usize];
place!(Field::<u32>(Variant(_4, 1), 0)) = 1466253879_u32;
place!(Field::<u32>(Variant(_4, 1), 0)) = !3828896570_u32;
_7 = Field::<u32>(Variant(_4, 1), 0) <= Field::<u32>(Variant(_4, 1), 0);
_9 = [_5,_5];
_1.0 = [4013332163401910180_u64,12006606775348010831_u64,4650343203397190764_u64,8402420815787820026_u64];
Goto(bb2)
}
bb12 = {
_13 = _11;
_3 = [_5,_5];
_11 = [0_usize,2_usize];
place!(Field::<u32>(Variant(_4, 1), 0)) = !1438166136_u32;
_11 = [6_usize,7_usize];
_9 = [_5,_5];
_10 = 215480403756579454085481774310747241747_u128 as f64;
Goto(bb3)
}
bb13 = {
_16 = _12 != _12;
place!(Field::<*mut f64>(Variant(_4, 2), 0)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_4, 2), 4)));
place!(Field::<*mut f64>(Variant(_4, 2), 0)) = core::ptr::addr_of_mut!(_10);
_19 = [7_usize,6289490550137727846_usize,6962049539501854586_usize,9355361905655694004_usize,7_usize,0_usize,3516523343092634480_usize,2_usize];
_13 = _11;
_10 = Field::<f64>(Variant(_4, 2), 4) * Field::<f64>(Variant(_4, 2), 4);
_22 = [_5,_5];
_16 = _7;
place!(Field::<[i64; 4]>(Variant(_4, 2), 5)) = [(-1261481588173551454_i64),2511301772929868267_i64,(-3759725065459609679_i64),(-6534465651529069070_i64)];
_25.fld1 = ((*_6).0,);
_12 = 15666058236011683502185939420793177044_i128 + (-98757025966990356133591854083041556738_i128);
_25 = Adt46 { fld0: _16,fld1: (*_6) };
_1 = (_25.fld1.0,);
place!(Field::<f64>(Variant(_4, 2), 4)) = -_10;
_2 = _22;
_25.fld1 = ((*_6).0,);
_24 = [29_u8,110_u8,31_u8,250_u8,243_u8];
_14 = 83914121138592022_u64 + 2755997212193392874_u64;
_17 = (-11468_i16) ^ (-19957_i16);
_27.0 = [_14,_14,_14,_14];
Goto(bb6)
}
bb14 = {
_5 = Field::<u32>(Variant(_4, 1), 0) as isize;
_5 = -(-27_isize);
_6 = core::ptr::addr_of!(_1);
_13 = [2053859876457413896_usize,5_usize];
place!(Field::<u32>(Variant(_4, 1), 0)) = !4054297271_u32;
_13 = [17933189197031224376_usize,6875087862000651345_usize];
_15 = [1567506673_i32,(-1116881735_i32),(-126985505_i32),(-705969300_i32),(-1746779693_i32),(-1553606459_i32),1442939797_i32];
_9 = _2;
_1.0 = [_14,_14,_14,_14];
SetDiscriminant(_4, 2);
place!(Field::<f64>(Variant(_4, 2), 4)) = _10 + _10;
_12 = (-43_i8) as i128;
_9 = _3;
_13 = [2_usize,7436997988392153630_usize];
_8 = '\u{fd99c}';
place!(Field::<*mut f64>(Variant(_4, 2), 0)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_4, 2), 4)));
_6 = core::ptr::addr_of!((*_6));
_2 = _9;
_1.0 = [_14,_14,_14,_14];
Goto(bb5)
}
bb15 = {
_16 = !_7;
Goto(bb16)
}
bb16 = {
Call(_37 = dump_var(5_usize, 17_usize, Move(_17), 23_usize, Move(_23), 16_usize, Move(_16), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(5_usize, 33_usize, Move(_33), 26_usize, Move(_26), 20_usize, Move(_20), 31_usize, Move(_31)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(5_usize, 2_usize, Move(_2), 14_usize, Move(_14), 7_usize, Move(_7), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_37 = dump_var(5_usize, 5_usize, Move(_5), 35_usize, Move(_35), 38_usize, _38, 38_usize, _38), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [u64; 4],mut _2: ([u64; 4],),mut _3: [u64; 4]) -> *const [u64; 4] {
mir! {
type RET = *const [u64; 4];
let _4: u16;
let _5: u32;
let _6: [i64; 4];
let _7: Adt39;
let _8: bool;
let _9: f64;
let _10: *const char;
let _11: Adt47;
let _12: i16;
let _13: [usize; 2];
let _14: Adt40;
let _15: Adt46;
let _16: ([u64; 4],);
let _17: i16;
let _18: isize;
let _19: [i32; 7];
let _20: Adt46;
let _21: bool;
let _22: char;
let _23: [isize; 8];
let _24: Adt44;
let _25: Adt46;
let _26: *const ([u64; 4],);
let _27: isize;
let _28: [i64; 4];
let _29: bool;
let _30: isize;
let _31: *mut f64;
let _32: usize;
let _33: Adt40;
let _34: isize;
let _35: u16;
let _36: Adt42;
let _37: char;
let _38: f32;
let _39: ();
let _40: ();
{
_2.0 = [15972181674727628619_u64,11285781901325760871_u64,11237245176673307161_u64,1408191584377580625_u64];
_3 = [8096370584688588404_u64,15646553134788198330_u64,8617804101271198447_u64,11158268927663094621_u64];
_3 = [12254005245319403075_u64,13364008670131324274_u64,14066937070110910779_u64,7266288374329460261_u64];
RET = core::ptr::addr_of!(_2.0);
_4 = (-84659152536895217240567844166609132669_i128) as u16;
_5 = true as u32;
_6 = [6267152729065468079_i64,(-2795481367272961512_i64),(-4054481032412146720_i64),5538713095809614140_i64];
_3 = [18189650840912682232_u64,4852908901595486066_u64,13322290652290454719_u64,15463610964981001455_u64];
_1 = _2.0;
_3 = [5535710647820174383_u64,11384556263622237117_u64,7769994096165673174_u64,11606709631222147918_u64];
_2 = (_1,);
_2 = (_3,);
_1 = [7813293129478446941_u64,3136699534622384581_u64,16172729471654208763_u64,10745453336778722847_u64];
_2 = (_1,);
_4 = 28970_u16;
_3 = [9922832124168949191_u64,2920273161926830111_u64,8695728691921856573_u64,12966235906573322485_u64];
Goto(bb1)
}
bb1 = {
_6 = [(-7700518925775385739_i64),(-2757933795352936266_i64),(-814562225080653212_i64),928555144082234271_i64];
_2.0 = [12478854353601254869_u64,5700314806362793236_u64,3154014602434020248_u64,1999003204028313765_u64];
Goto(bb2)
}
bb2 = {
_1 = [14021339830466224055_u64,15048974001024043281_u64,8930824350946314919_u64,4980617367382887738_u64];
_3 = _1;
RET = core::ptr::addr_of!((*RET));
_2 = (_1,);
_7 = Adt39::Variant0 { fld0: (-374878944_i32),fld1: 169061573031399095190097876322703294721_u128,fld2: 145047173456369138432605908152474370761_i128 };
_2.0 = _1;
place!(Field::<i32>(Variant(_7, 0), 0)) = -(-414778724_i32);
_3 = [10939630784623370829_u64,3687804428229232746_u64,6778800761726234642_u64,12735320965918683203_u64];
place!(Field::<i32>(Variant(_7, 0), 0)) = (-1962974628_i32);
place!(Field::<i32>(Variant(_7, 0), 0)) = (-1318234380_i32) + 937065057_i32;
_8 = !true;
RET = core::ptr::addr_of!(_1);
place!(Field::<i32>(Variant(_7, 0), 0)) = (-60287713_i32);
place!(Field::<i128>(Variant(_7, 0), 2)) = !60096865371390844365363607187035301348_i128;
RET = core::ptr::addr_of!((*RET));
_7 = Adt39::Variant1 { fld0: (*RET),fld1: _5,fld2: 104_u8,fld3: RET };
_8 = _5 > Field::<u32>(Variant(_7, 1), 1);
_2 = ((*RET),);
place!(Field::<*const [u64; 4]>(Variant(_7, 1), 3)) = core::ptr::addr_of!((*RET));
place!(Field::<u32>(Variant(_7, 1), 1)) = _5 - _5;
_9 = 34_u8 as f64;
_7 = Adt39::Variant1 { fld0: _1,fld1: _5,fld2: 182_u8,fld3: RET };
_2 = (_3,);
RET = Field::<*const [u64; 4]>(Variant(_7, 1), 3);
_1 = [14422948308673935223_u64,3652815245168527012_u64,12718524736450995090_u64,6185935560575123730_u64];
place!(Field::<u8>(Variant(_7, 1), 2)) = 135_u8 + 241_u8;
Goto(bb3)
}
bb3 = {
place!(Field::<[u64; 4]>(Variant(_7, 1), 0)) = [14248615463452560609_u64,14807090059999336072_u64,2299414294684763303_u64,1641220167643911503_u64];
place!(Field::<*const [u64; 4]>(Variant(_7, 1), 3)) = core::ptr::addr_of!(_1);
SetDiscriminant(_7, 1);
RET = core::ptr::addr_of!(_2.0);
place!(Field::<[u64; 4]>(Variant(_7, 1), 0)) = [5768629513535945592_u64,249008914841646278_u64,14980994392113560235_u64,11448025967843505104_u64];
_2.0 = _3;
place!(Field::<*const [u64; 4]>(Variant(_7, 1), 3)) = core::ptr::addr_of!(_3);
RET = Field::<*const [u64; 4]>(Variant(_7, 1), 3);
_3 = _2.0;
_8 = false;
place!(Field::<u8>(Variant(_7, 1), 2)) = 254_u8 * 66_u8;
_9 = 274895335110780380881954973284920978613_u128 as f64;
place!(Field::<u32>(Variant(_7, 1), 1)) = _5;
_6 = [(-6706656716817539707_i64),1367353396363797657_i64,(-7090894132004847507_i64),(-5007429989424936361_i64)];
_8 = _5 != _5;
RET = Field::<*const [u64; 4]>(Variant(_7, 1), 3);
_3 = [3143616468693521572_u64,12336089974313207552_u64,18244067095358806196_u64,11763313508564786008_u64];
_12 = '\u{1088ad}' as i16;
place!(Field::<[u64; 4]>(Variant(_7, 1), 0)) = [12778280979487344732_u64,1870265444633299366_u64,6721492243482360230_u64,956765758810272724_u64];
_8 = true;
_3 = [1857659926474861201_u64,17294924677177858342_u64,8171318253191821771_u64,9888876728218366602_u64];
SetDiscriminant(_7, 1);
RET = core::ptr::addr_of!(place!(Field::<[u64; 4]>(Variant(_7, 1), 0)));
_2.0 = [16699325727447856023_u64,13804552490683870279_u64,6264535706978316271_u64,198709208302598061_u64];
Call(_2.0 = fn7(_8, RET, _6, _8, _9, _4, _6, _9, RET, RET, _6, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = Adt39::Variant1 { fld0: _3,fld1: _5,fld2: 14_u8,fld3: RET };
place!(Field::<u8>(Variant(_7, 1), 2)) = 9_u8;
_4 = 35513_u16;
SetDiscriminant(_7, 0);
_1 = [14004436968862657021_u64,571221658335938589_u64,14426923056269687486_u64,11845444357768852562_u64];
_1 = [14770490484418522509_u64,17771311531117453285_u64,8269969750525590620_u64,6149852891750321765_u64];
place!(Field::<i32>(Variant(_7, 0), 0)) = 623393421_i32 + 2085631632_i32;
RET = core::ptr::addr_of!(_3);
_2 = ((*RET),);
_13 = [9840367481528325086_usize,1_usize];
_15.fld1.0 = [5489240652402974232_u64,2327126424660112822_u64,16129115645247754615_u64,4028447981714751885_u64];
_15 = Adt46 { fld0: _8,fld1: _2 };
_14 = Adt40::Variant3 { fld0: _9 };
place!(Field::<i128>(Variant(_7, 0), 2)) = !(-7384241733919832137891611963472367261_i128);
_16 = _2;
_3 = [16200567940767844351_u64,6370737972993699053_u64,4520926962888778600_u64,9365544743246121527_u64];
Call(place!(Field::<i32>(Variant(_7, 0), 0)) = fn8(_1, _16, RET, (*RET), _4, _8, _3, _3, _4, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
place!(Field::<i128>(Variant(_7, 0), 2)) = 103611663628260161634928370793656918294_i128 * (-112294569474012009067328206189921197003_i128);
place!(Field::<u128>(Variant(_7, 0), 1)) = _9 as u128;
_6 = [4993388223587529419_i64,(-3757428272364359397_i64),2342853984814784520_i64,2810131907400626150_i64];
_8 = Field::<i32>(Variant(_7, 0), 0) != Field::<i32>(Variant(_7, 0), 0);
_13 = [0_usize,12717598229999120186_usize];
place!(Field::<u128>(Variant(_7, 0), 1)) = 221096230166939190321219805088407673122_u128;
Goto(bb6)
}
bb6 = {
_2.0 = [13283984703528099905_u64,8253785910063861182_u64,16974024635177978234_u64,592691498975271160_u64];
_2.0 = (*RET);
_7 = Adt39::Variant0 { fld0: 2085486428_i32,fld1: 250043311310557093851711961829665403477_u128,fld2: (-63749545496191363343888054634137318311_i128) };
place!(Field::<i128>(Variant(_7, 0), 2)) = 46644524439584870821712121204058440084_i128 * (-80953441225572994036117764579278596197_i128);
_3 = _16.0;
_15.fld0 = _8;
_8 = _15.fld0;
_16 = ((*RET),);
_15.fld1 = (_1,);
_15.fld0 = _8;
_6 = [2806296789253809100_i64,3366830570616342931_i64,(-8929465445962877911_i64),3085484218973838981_i64];
RET = core::ptr::addr_of!(_1);
place!(Field::<u128>(Variant(_7, 0), 1)) = !73504497750463485619117941610629702744_u128;
_6 = [(-2789298160385365668_i64),(-2455027078508405260_i64),2107892751238030594_i64,374043364261481214_i64];
_18 = 9223372036854775807_isize;
_18 = 1443781169_i32 as isize;
_13 = [12611677274670735227_usize,4_usize];
_4 = !35859_u16;
_1 = [18079764123965855756_u64,18349721581409535340_u64,9209873138062960443_u64,15396771695500479555_u64];
place!(Field::<u128>(Variant(_7, 0), 1)) = 216406231442863723827120642222774109635_u128 | 162882400824496445938610118791134470310_u128;
_7 = Adt39::Variant0 { fld0: (-656073332_i32),fld1: 127312495372144354765088853642637324698_u128,fld2: (-65027495359375954856906677007406744244_i128) };
_16 = (_15.fld1.0,);
_3 = [15668321350253810937_u64,11395559506910226043_u64,18062748528004806356_u64,10197192693351004498_u64];
Goto(bb7)
}
bb7 = {
_19 = [(-959128379_i32),751949678_i32,(-2002209013_i32),1624293084_i32,(-1285630904_i32),(-1483423900_i32),1851880036_i32];
_20.fld1.0 = _3;
_16.0 = (*RET);
_25 = Move(_15);
RET = core::ptr::addr_of!(_25.fld1.0);
_20.fld0 = _8;
SetDiscriminant(_14, 0);
_25.fld1.0 = [14302895930953531592_u64,14280039595979195109_u64,11776508596827621343_u64,11688440682737771003_u64];
_15.fld0 = !_20.fld0;
place!(Field::<([u64; 4],)>(Variant(_14, 0), 2)).0 = [15379180346874939007_u64,3714621889546071141_u64,3176581894699008677_u64,9933991012682314946_u64];
_20.fld1.0 = [7252258114746713054_u64,13482941322556225658_u64,11277081487250055317_u64,3378834072684912924_u64];
_22 = '\u{83b75}';
_10 = core::ptr::addr_of!(_22);
place!(Field::<i64>(Variant(_14, 0), 1)) = (-8973963089613044338_i64);
place!(Field::<i128>(Variant(_7, 0), 2)) = 152498301409936745053305875238981172273_i128 << _18;
_25.fld1 = _2;
place!(Field::<u128>(Variant(_7, 0), 1)) = 259420490599050340040483888068760485548_u128 * 337023348145298975722181357561397026963_u128;
_20.fld1 = _25.fld1;
_9 = _5 as f64;
_9 = 28_i8 as f64;
_6 = [Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1)];
_18 = !(-9223372036854775808_isize);
match Field::<i64>(Variant(_14, 0), 1) {
0 => bb1,
1 => bb8,
2 => bb9,
340282366920938463454400644342155167118 => bb11,
_ => bb10
}
}
bb8 = {
_6 = [(-7700518925775385739_i64),(-2757933795352936266_i64),(-814562225080653212_i64),928555144082234271_i64];
_2.0 = [12478854353601254869_u64,5700314806362793236_u64,3154014602434020248_u64,1999003204028313765_u64];
Goto(bb2)
}
bb9 = {
place!(Field::<[u64; 4]>(Variant(_7, 1), 0)) = [14248615463452560609_u64,14807090059999336072_u64,2299414294684763303_u64,1641220167643911503_u64];
place!(Field::<*const [u64; 4]>(Variant(_7, 1), 3)) = core::ptr::addr_of!(_1);
SetDiscriminant(_7, 1);
RET = core::ptr::addr_of!(_2.0);
place!(Field::<[u64; 4]>(Variant(_7, 1), 0)) = [5768629513535945592_u64,249008914841646278_u64,14980994392113560235_u64,11448025967843505104_u64];
_2.0 = _3;
place!(Field::<*const [u64; 4]>(Variant(_7, 1), 3)) = core::ptr::addr_of!(_3);
RET = Field::<*const [u64; 4]>(Variant(_7, 1), 3);
_3 = _2.0;
_8 = false;
place!(Field::<u8>(Variant(_7, 1), 2)) = 254_u8 * 66_u8;
_9 = 274895335110780380881954973284920978613_u128 as f64;
place!(Field::<u32>(Variant(_7, 1), 1)) = _5;
_6 = [(-6706656716817539707_i64),1367353396363797657_i64,(-7090894132004847507_i64),(-5007429989424936361_i64)];
_8 = _5 != _5;
RET = Field::<*const [u64; 4]>(Variant(_7, 1), 3);
_3 = [3143616468693521572_u64,12336089974313207552_u64,18244067095358806196_u64,11763313508564786008_u64];
_12 = '\u{1088ad}' as i16;
place!(Field::<[u64; 4]>(Variant(_7, 1), 0)) = [12778280979487344732_u64,1870265444633299366_u64,6721492243482360230_u64,956765758810272724_u64];
_8 = true;
_3 = [1857659926474861201_u64,17294924677177858342_u64,8171318253191821771_u64,9888876728218366602_u64];
SetDiscriminant(_7, 1);
RET = core::ptr::addr_of!(place!(Field::<[u64; 4]>(Variant(_7, 1), 0)));
_2.0 = [16699325727447856023_u64,13804552490683870279_u64,6264535706978316271_u64,198709208302598061_u64];
Call(_2.0 = fn7(_8, RET, _6, _8, _9, _4, _6, _9, RET, RET, _6, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_7 = Adt39::Variant1 { fld0: _3,fld1: _5,fld2: 14_u8,fld3: RET };
place!(Field::<u8>(Variant(_7, 1), 2)) = 9_u8;
_4 = 35513_u16;
SetDiscriminant(_7, 0);
_1 = [14004436968862657021_u64,571221658335938589_u64,14426923056269687486_u64,11845444357768852562_u64];
_1 = [14770490484418522509_u64,17771311531117453285_u64,8269969750525590620_u64,6149852891750321765_u64];
place!(Field::<i32>(Variant(_7, 0), 0)) = 623393421_i32 + 2085631632_i32;
RET = core::ptr::addr_of!(_3);
_2 = ((*RET),);
_13 = [9840367481528325086_usize,1_usize];
_15.fld1.0 = [5489240652402974232_u64,2327126424660112822_u64,16129115645247754615_u64,4028447981714751885_u64];
_15 = Adt46 { fld0: _8,fld1: _2 };
_14 = Adt40::Variant3 { fld0: _9 };
place!(Field::<i128>(Variant(_7, 0), 2)) = !(-7384241733919832137891611963472367261_i128);
_16 = _2;
_3 = [16200567940767844351_u64,6370737972993699053_u64,4520926962888778600_u64,9365544743246121527_u64];
Call(place!(Field::<i32>(Variant(_7, 0), 0)) = fn8(_1, _16, RET, (*RET), _4, _8, _3, _3, _4, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
RET = core::ptr::addr_of!(_2.0);
_6 = [Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1)];
_22 = '\u{5ee07}';
_15.fld0 = _8 | _8;
_16.0 = [17567704065953408783_u64,5326370195937955190_u64,3858367431200745417_u64,12398625141792416210_u64];
place!(Field::<f64>(Variant(_14, 0), 3)) = -_9;
_25 = Adt46 { fld0: _15.fld0,fld1: _16 };
_9 = Field::<u128>(Variant(_7, 0), 1) as f64;
_2.0 = [3344661813821289496_u64,906177310187926583_u64,13324202883915973133_u64,2404682511788021123_u64];
_7 = Adt39::Variant0 { fld0: 187778322_i32,fld1: 258595882704910413238648923965396769917_u128,fld2: (-163674674984774755167642627889216403806_i128) };
_11 = Adt47::Variant0 { fld0: _10 };
_17 = -_12;
SetDiscriminant(_11, 1);
place!(Field::<([u64; 4],)>(Variant(_14, 0), 2)) = (_1,);
place!(Field::<i64>(Variant(_14, 0), 1)) = -(-777446662461255883_i64);
_15 = Adt46 { fld0: _8,fld1: _16 };
_15.fld1.0 = (*RET);
_27 = _18 + _18;
place!(Field::<usize>(Variant(_11, 1), 5)) = 4_usize;
_6 = [Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1)];
_2.0 = [5893480941685324012_u64,12084371134250355791_u64,9350891622204590048_u64,15219960217229565639_u64];
place!(Field::<*const [u64; 4]>(Variant(_11, 1), 0)) = core::ptr::addr_of!(_20.fld1.0);
_11 = Adt47::Variant0 { fld0: _10 };
_9 = -Field::<f64>(Variant(_14, 0), 3);
_2.0 = [14488528767431785465_u64,16718063429939698478_u64,17226459009381696694_u64,5877934445095651969_u64];
_29 = _25.fld0 | _25.fld0;
place!(Field::<u128>(Variant(_7, 0), 1)) = (*_10) as u128;
_21 = Field::<f64>(Variant(_14, 0), 3) != Field::<f64>(Variant(_14, 0), 3);
_2.0 = _3;
Goto(bb12)
}
bb12 = {
_20.fld1.0 = [18307807172902509363_u64,6162314540757086103_u64,6670203858709440043_u64,750472350749632205_u64];
place!(Field::<bool>(Variant(_14, 0), 0)) = _25.fld0;
_1 = _3;
_13 = [604999039935898608_usize,2_usize];
_24 = Adt44::Variant3 { fld0: _13,fld1: Field::<f64>(Variant(_14, 0), 3),fld2: Field::<([u64; 4],)>(Variant(_14, 0), 2).0 };
place!(Field::<i32>(Variant(_7, 0), 0)) = (-220254731_i32) >> _5;
place!(Field::<i32>(Variant(_7, 0), 0)) = 165317401_i32 - (-950767927_i32);
_33 = Adt40::Variant0 { fld0: _20.fld0,fld1: Field::<i64>(Variant(_14, 0), 1),fld2: Field::<([u64; 4],)>(Variant(_14, 0), 2),fld3: Field::<f64>(Variant(_14, 0), 3) };
_20 = Move(_15);
SetDiscriminant(_24, 3);
_33 = Move(_14);
_27 = _18 << Field::<i32>(Variant(_7, 0), 0);
_24 = Adt44::Variant2 { fld0: _17 };
_20.fld0 = _25.fld0 < _29;
_10 = core::ptr::addr_of!((*_10));
_24 = Adt44::Variant3 { fld0: _13,fld1: _9,fld2: _25.fld1.0 };
_32 = 12237170027891227699_usize;
_10 = Field::<*const char>(Variant(_11, 0), 0);
_27 = _18;
_1 = [13499088510630708545_u64,1298514857880885605_u64,3531870015361697122_u64,13389489539290770277_u64];
_30 = _27 - _27;
_5 = 1460888377_u32;
RET = core::ptr::addr_of!(_20.fld1.0);
_10 = core::ptr::addr_of!(_22);
_23 = [_30,_27,_27,_30,_18,_27,_27,_30];
_14 = Move(_33);
_15 = Move(_20);
Goto(bb13)
}
bb13 = {
_6 = [Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1),Field::<i64>(Variant(_14, 0), 1)];
_14 = Adt40::Variant3 { fld0: Field::<f64>(Variant(_24, 3), 1) };
_22 = '\u{c8856}';
_26 = core::ptr::addr_of!(_25.fld1);
_10 = core::ptr::addr_of!((*_10));
_20.fld1.0 = _3;
_4 = 39122_u16;
_25.fld0 = _29;
_21 = _15.fld0;
_35 = _4;
_31 = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_24, 3), 1)));
_32 = 74333206074811904169581759429388520638_i128 as usize;
_3 = [3172912114418093258_u64,13018261415809654446_u64,10008625851196358210_u64,9342602973133763442_u64];
_29 = !_25.fld0;
_29 = _15.fld0 <= _15.fld0;
_15.fld0 = _29 < _29;
_16 = ((*_26).0,);
_27 = 77_i8 as isize;
_25.fld1 = _15.fld1;
_27 = -_18;
_32 = !9285046404846944612_usize;
_29 = _21;
_6 = [146138668875016255_i64,(-5209415607946977368_i64),7068242227643383610_i64,502259138811289378_i64];
_26 = core::ptr::addr_of!(_15.fld1);
_37 = (*_10);
match _5 {
0 => bb14,
1 => bb15,
2 => bb16,
1460888377 => bb18,
_ => bb17
}
}
bb14 = {
_20.fld1.0 = [18307807172902509363_u64,6162314540757086103_u64,6670203858709440043_u64,750472350749632205_u64];
place!(Field::<bool>(Variant(_14, 0), 0)) = _25.fld0;
_1 = _3;
_13 = [604999039935898608_usize,2_usize];
_24 = Adt44::Variant3 { fld0: _13,fld1: Field::<f64>(Variant(_14, 0), 3),fld2: Field::<([u64; 4],)>(Variant(_14, 0), 2).0 };
place!(Field::<i32>(Variant(_7, 0), 0)) = (-220254731_i32) >> _5;
place!(Field::<i32>(Variant(_7, 0), 0)) = 165317401_i32 - (-950767927_i32);
_33 = Adt40::Variant0 { fld0: _20.fld0,fld1: Field::<i64>(Variant(_14, 0), 1),fld2: Field::<([u64; 4],)>(Variant(_14, 0), 2),fld3: Field::<f64>(Variant(_14, 0), 3) };
_20 = Move(_15);
SetDiscriminant(_24, 3);
_33 = Move(_14);
_27 = _18 << Field::<i32>(Variant(_7, 0), 0);
_24 = Adt44::Variant2 { fld0: _17 };
_20.fld0 = _25.fld0 < _29;
_10 = core::ptr::addr_of!((*_10));
_24 = Adt44::Variant3 { fld0: _13,fld1: _9,fld2: _25.fld1.0 };
_32 = 12237170027891227699_usize;
_10 = Field::<*const char>(Variant(_11, 0), 0);
_27 = _18;
_1 = [13499088510630708545_u64,1298514857880885605_u64,3531870015361697122_u64,13389489539290770277_u64];
_30 = _27 - _27;
_5 = 1460888377_u32;
RET = core::ptr::addr_of!(_20.fld1.0);
_10 = core::ptr::addr_of!(_22);
_23 = [_30,_27,_27,_30,_18,_27,_27,_30];
_14 = Move(_33);
_15 = Move(_20);
Goto(bb13)
}
bb15 = {
_6 = [(-7700518925775385739_i64),(-2757933795352936266_i64),(-814562225080653212_i64),928555144082234271_i64];
_2.0 = [12478854353601254869_u64,5700314806362793236_u64,3154014602434020248_u64,1999003204028313765_u64];
Goto(bb2)
}
bb16 = {
_7 = Adt39::Variant1 { fld0: _3,fld1: _5,fld2: 14_u8,fld3: RET };
place!(Field::<u8>(Variant(_7, 1), 2)) = 9_u8;
_4 = 35513_u16;
SetDiscriminant(_7, 0);
_1 = [14004436968862657021_u64,571221658335938589_u64,14426923056269687486_u64,11845444357768852562_u64];
_1 = [14770490484418522509_u64,17771311531117453285_u64,8269969750525590620_u64,6149852891750321765_u64];
place!(Field::<i32>(Variant(_7, 0), 0)) = 623393421_i32 + 2085631632_i32;
RET = core::ptr::addr_of!(_3);
_2 = ((*RET),);
_13 = [9840367481528325086_usize,1_usize];
_15.fld1.0 = [5489240652402974232_u64,2327126424660112822_u64,16129115645247754615_u64,4028447981714751885_u64];
_15 = Adt46 { fld0: _8,fld1: _2 };
_14 = Adt40::Variant3 { fld0: _9 };
place!(Field::<i128>(Variant(_7, 0), 2)) = !(-7384241733919832137891611963472367261_i128);
_16 = _2;
_3 = [16200567940767844351_u64,6370737972993699053_u64,4520926962888778600_u64,9365544743246121527_u64];
Call(place!(Field::<i32>(Variant(_7, 0), 0)) = fn8(_1, _16, RET, (*RET), _4, _8, _3, _3, _4, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb17 = {
place!(Field::<i128>(Variant(_7, 0), 2)) = 103611663628260161634928370793656918294_i128 * (-112294569474012009067328206189921197003_i128);
place!(Field::<u128>(Variant(_7, 0), 1)) = _9 as u128;
_6 = [4993388223587529419_i64,(-3757428272364359397_i64),2342853984814784520_i64,2810131907400626150_i64];
_8 = Field::<i32>(Variant(_7, 0), 0) != Field::<i32>(Variant(_7, 0), 0);
_13 = [0_usize,12717598229999120186_usize];
place!(Field::<u128>(Variant(_7, 0), 1)) = 221096230166939190321219805088407673122_u128;
Goto(bb6)
}
bb18 = {
_12 = _17 << _5;
_1 = _20.fld1.0;
_34 = _18;
_28 = [(-7166706626275261388_i64),(-816935243401540909_i64),(-100954029081281124_i64),(-8676662683156777122_i64)];
place!(Field::<f64>(Variant(_24, 3), 1)) = _9 - Field::<f64>(Variant(_14, 3), 0);
_25.fld1.0 = _20.fld1.0;
place!(Field::<f64>(Variant(_24, 3), 1)) = _9 - _9;
_9 = -(*_31);
place!(Field::<i128>(Variant(_7, 0), 2)) = 9096803923606092016_i64 as i128;
place!(Field::<i128>(Variant(_7, 0), 2)) = 59417086499260249346764776654897163141_i128;
_25 = Adt46 { fld0: _15.fld0,fld1: (*_26) };
_20.fld1.0 = [4852115058921490405_u64,2406122794459981173_u64,17156131202409204264_u64,2913729941310031388_u64];
_25 = Adt46 { fld0: _15.fld0,fld1: _20.fld1 };
_15.fld0 = !_25.fld0;
_13 = [_32,_32];
_4 = _35;
_27 = Field::<u128>(Variant(_7, 0), 1) as isize;
Goto(bb19)
}
bb19 = {
Call(_39 = dump_var(6_usize, 37_usize, Move(_37), 16_usize, Move(_16), 34_usize, Move(_34), 13_usize, Move(_13)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_39 = dump_var(6_usize, 12_usize, Move(_12), 4_usize, Move(_4), 21_usize, Move(_21), 29_usize, Move(_29)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_39 = dump_var(6_usize, 22_usize, Move(_22), 5_usize, Move(_5), 3_usize, Move(_3), 32_usize, Move(_32)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: bool,mut _2: *const [u64; 4],mut _3: [i64; 4],mut _4: bool,mut _5: f64,mut _6: u16,mut _7: [i64; 4],mut _8: f64,mut _9: *const [u64; 4],mut _10: *const [u64; 4],mut _11: [i64; 4],mut _12: [u64; 4]) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _13: Adt53;
let _14: Adt47;
let _15: Adt52;
let _16: isize;
let _17: Adt46;
let _18: isize;
let _19: f32;
let _20: u64;
let _21: bool;
let _22: Adt48;
let _23: *const ([u64; 4],);
let _24: f64;
let _25: f64;
let _26: isize;
let _27: isize;
let _28: ();
let _29: ();
{
_5 = -_8;
_6 = 63876_u16 << 6374_u16;
_11 = [(-720205347795645703_i64),(-4209678659224642641_i64),2666006224490639469_i64,(-5383940238265472264_i64)];
_7 = _11;
_5 = 10880935679694967280_u64 as f64;
_1 = !_4;
_1 = _6 >= _6;
_8 = _5;
_3 = [6186295402028241197_i64,9017565556749918170_i64,(-8630061206586348693_i64),(-3272207023548931405_i64)];
_2 = _10;
_17.fld1.0 = [7613026321311765484_u64,9519590745100613111_u64,14481458823410832769_u64,18117176964089362060_u64];
_5 = 70082849216587985810850832402558925750_u128 as f64;
_5 = _8;
_10 = core::ptr::addr_of!(_17.fld1.0);
_6 = 3618_u16;
_8 = _5;
_2 = _9;
_18 = !9223372036854775807_isize;
_17.fld1.0 = _12;
_18 = -100_isize;
_17.fld0 = _8 != _5;
match _6 {
0 => bb1,
1 => bb2,
3618 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_11 = [(-6944211122828649611_i64),8497362152325437178_i64,8379965506882862935_i64,3677883414044191812_i64];
RET = [14330246813836619754_u64,10188816157261167766_u64,9055171405068021362_u64,6896671724335871305_u64];
_4 = _1;
_6 = 49048_u16;
_19 = _8 as f32;
_21 = _1 | _4;
_21 = _1 ^ _4;
RET = [1812229152753833814_u64,11846054817642120527_u64,3869256117601170320_u64,13676637763218454914_u64];
_22.fld4 = core::ptr::addr_of_mut!(_8);
_22.fld3 = Adt40::Variant3 { fld0: _5 };
_22.fld3 = Adt40::Variant0 { fld0: _1,fld1: 8007567420820565363_i64,fld2: _17.fld1,fld3: _5 };
_22.fld0 = core::ptr::addr_of!(_22.fld1);
_21 = !_1;
RET = [16909469825433392274_u64,1930783448350766639_u64,11378171954933012666_u64,6659196711299652245_u64];
place!(Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2)) = _17.fld1;
_7 = [5369073826723879815_i64,3972552795357651747_i64,2479454709459957899_i64,(-333012489205704571_i64)];
_17.fld1.0 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2).0;
place!(Field::<bool>(Variant(_22.fld3, 0), 0)) = _17.fld0 < _4;
_21 = Field::<bool>(Variant(_22.fld3, 0), 0) >= Field::<bool>(Variant(_22.fld3, 0), 0);
_6 = _21 as u16;
_22.fld1 = '\u{a96bc}';
_22.fld6 = 904449838706449479_i64 ^ (-7956246970608242098_i64);
_22.fld2 = _18;
_17.fld1.0 = RET;
_1 = _4;
Goto(bb5)
}
bb5 = {
_17 = Adt46 { fld0: Field::<bool>(Variant(_22.fld3, 0), 0),fld1: Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2) };
_17.fld1.0 = _12;
_17.fld1.0 = _12;
_20 = 8340430273246287829_u64 + 13296998620912021086_u64;
_10 = _2;
_10 = _2;
_23 = core::ptr::addr_of!(_17.fld1);
place!(Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2)) = (RET,);
place!(Field::<bool>(Variant(_22.fld3, 0), 0)) = !_1;
_20 = _19 as u64;
_8 = (-994152570_i32) as f64;
place!(Field::<f64>(Variant(_22.fld3, 0), 3)) = -_8;
_22.fld4 = core::ptr::addr_of_mut!(_5);
_22.fld5 = core::ptr::addr_of!(_17.fld1.0);
_3 = [_22.fld6,_22.fld6,_22.fld6,_22.fld6];
_6 = 30846_u16;
_17.fld1.0 = [_20,_20,_20,_20];
_17.fld1 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2);
_21 = _4;
match _6 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
30846 => bb11,
_ => bb10
}
}
bb6 = {
_11 = [(-6944211122828649611_i64),8497362152325437178_i64,8379965506882862935_i64,3677883414044191812_i64];
RET = [14330246813836619754_u64,10188816157261167766_u64,9055171405068021362_u64,6896671724335871305_u64];
_4 = _1;
_6 = 49048_u16;
_19 = _8 as f32;
_21 = _1 | _4;
_21 = _1 ^ _4;
RET = [1812229152753833814_u64,11846054817642120527_u64,3869256117601170320_u64,13676637763218454914_u64];
_22.fld4 = core::ptr::addr_of_mut!(_8);
_22.fld3 = Adt40::Variant3 { fld0: _5 };
_22.fld3 = Adt40::Variant0 { fld0: _1,fld1: 8007567420820565363_i64,fld2: _17.fld1,fld3: _5 };
_22.fld0 = core::ptr::addr_of!(_22.fld1);
_21 = !_1;
RET = [16909469825433392274_u64,1930783448350766639_u64,11378171954933012666_u64,6659196711299652245_u64];
place!(Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2)) = _17.fld1;
_7 = [5369073826723879815_i64,3972552795357651747_i64,2479454709459957899_i64,(-333012489205704571_i64)];
_17.fld1.0 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2).0;
place!(Field::<bool>(Variant(_22.fld3, 0), 0)) = _17.fld0 < _4;
_21 = Field::<bool>(Variant(_22.fld3, 0), 0) >= Field::<bool>(Variant(_22.fld3, 0), 0);
_6 = _21 as u16;
_22.fld1 = '\u{a96bc}';
_22.fld6 = 904449838706449479_i64 ^ (-7956246970608242098_i64);
_22.fld2 = _18;
_17.fld1.0 = RET;
_1 = _4;
Goto(bb5)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_23 = core::ptr::addr_of!((*_23));
_19 = 9072859547454478743_usize as f32;
_17.fld1 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2);
_22.fld6 = 4016125843_u32 as i64;
_24 = _5;
_12 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2).0;
RET = [_20,_20,_20,_20];
_22.fld3 = Adt40::Variant3 { fld0: _5 };
_22.fld0 = core::ptr::addr_of!(_22.fld1);
_10 = _22.fld5;
_17.fld1.0 = [_20,_20,_20,_20];
_10 = core::ptr::addr_of!(_17.fld1.0);
match _6 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
30846 => bb20,
_ => bb19
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_11 = [(-6944211122828649611_i64),8497362152325437178_i64,8379965506882862935_i64,3677883414044191812_i64];
RET = [14330246813836619754_u64,10188816157261167766_u64,9055171405068021362_u64,6896671724335871305_u64];
_4 = _1;
_6 = 49048_u16;
_19 = _8 as f32;
_21 = _1 | _4;
_21 = _1 ^ _4;
RET = [1812229152753833814_u64,11846054817642120527_u64,3869256117601170320_u64,13676637763218454914_u64];
_22.fld4 = core::ptr::addr_of_mut!(_8);
_22.fld3 = Adt40::Variant3 { fld0: _5 };
_22.fld3 = Adt40::Variant0 { fld0: _1,fld1: 8007567420820565363_i64,fld2: _17.fld1,fld3: _5 };
_22.fld0 = core::ptr::addr_of!(_22.fld1);
_21 = !_1;
RET = [16909469825433392274_u64,1930783448350766639_u64,11378171954933012666_u64,6659196711299652245_u64];
place!(Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2)) = _17.fld1;
_7 = [5369073826723879815_i64,3972552795357651747_i64,2479454709459957899_i64,(-333012489205704571_i64)];
_17.fld1.0 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2).0;
place!(Field::<bool>(Variant(_22.fld3, 0), 0)) = _17.fld0 < _4;
_21 = Field::<bool>(Variant(_22.fld3, 0), 0) >= Field::<bool>(Variant(_22.fld3, 0), 0);
_6 = _21 as u16;
_22.fld1 = '\u{a96bc}';
_22.fld6 = 904449838706449479_i64 ^ (-7956246970608242098_i64);
_22.fld2 = _18;
_17.fld1.0 = RET;
_1 = _4;
Goto(bb5)
}
bb17 = {
Return()
}
bb18 = {
_11 = [(-6944211122828649611_i64),8497362152325437178_i64,8379965506882862935_i64,3677883414044191812_i64];
RET = [14330246813836619754_u64,10188816157261167766_u64,9055171405068021362_u64,6896671724335871305_u64];
_4 = _1;
_6 = 49048_u16;
_19 = _8 as f32;
_21 = _1 | _4;
_21 = _1 ^ _4;
RET = [1812229152753833814_u64,11846054817642120527_u64,3869256117601170320_u64,13676637763218454914_u64];
_22.fld4 = core::ptr::addr_of_mut!(_8);
_22.fld3 = Adt40::Variant3 { fld0: _5 };
_22.fld3 = Adt40::Variant0 { fld0: _1,fld1: 8007567420820565363_i64,fld2: _17.fld1,fld3: _5 };
_22.fld0 = core::ptr::addr_of!(_22.fld1);
_21 = !_1;
RET = [16909469825433392274_u64,1930783448350766639_u64,11378171954933012666_u64,6659196711299652245_u64];
place!(Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2)) = _17.fld1;
_7 = [5369073826723879815_i64,3972552795357651747_i64,2479454709459957899_i64,(-333012489205704571_i64)];
_17.fld1.0 = Field::<([u64; 4],)>(Variant(_22.fld3, 0), 2).0;
place!(Field::<bool>(Variant(_22.fld3, 0), 0)) = _17.fld0 < _4;
_21 = Field::<bool>(Variant(_22.fld3, 0), 0) >= Field::<bool>(Variant(_22.fld3, 0), 0);
_6 = _21 as u16;
_22.fld1 = '\u{a96bc}';
_22.fld6 = 904449838706449479_i64 ^ (-7956246970608242098_i64);
_22.fld2 = _18;
_17.fld1.0 = RET;
_1 = _4;
Goto(bb5)
}
bb19 = {
Return()
}
bb20 = {
_22.fld4 = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(_22.fld3, 3), 0)));
RET = [_20,_20,_20,_20];
Goto(bb21)
}
bb21 = {
Call(_28 = dump_var(7_usize, 3_usize, Move(_3), 1_usize, Move(_1), 7_usize, Move(_7), 6_usize, Move(_6)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_28 = dump_var(7_usize, 18_usize, Move(_18), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [u64; 4],mut _2: ([u64; 4],),mut _3: *const [u64; 4],mut _4: [u64; 4],mut _5: u16,mut _6: bool,mut _7: [u64; 4],mut _8: [u64; 4],mut _9: u16,mut _10: [u64; 4]) -> i32 {
mir! {
type RET = i32;
let _11: [u64; 4];
let _12: Adt43;
let _13: isize;
let _14: [isize; 2];
let _15: bool;
let _16: [isize; 8];
let _17: char;
let _18: [i32; 7];
let _19: u16;
let _20: isize;
let _21: f64;
let _22: f32;
let _23: i32;
let _24: u8;
let _25: [i64; 4];
let _26: [u8; 5];
let _27: u32;
let _28: Adt47;
let _29: [i32; 7];
let _30: u8;
let _31: [i32; 7];
let _32: ();
let _33: ();
{
_8 = [12557117568734478498_u64,4997302376566829945_u64,11717266043194325943_u64,1423662819381255630_u64];
_2.0 = _10;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
35513 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = -479206656_i32;
_2 = (_10,);
_2 = (_7,);
RET = 222982102_i32;
_10 = _7;
_2.0 = _7;
_10 = [7878707753240682675_u64,675090312100919496_u64,3836230658025381248_u64,4313039125259765588_u64];
_6 = true & false;
_7 = [5594546954502445674_u64,4111207511296685818_u64,5284599916343570071_u64,14560638645229171192_u64];
_7 = [8108786898673560072_u64,8637058730842608242_u64,12035107224029494851_u64,208972884707130202_u64];
_7 = [15294267849514601014_u64,3879266174759750505_u64,12645931217466493180_u64,7608225581479017857_u64];
_10 = _1;
_10 = _4;
_8 = [16859054430752671723_u64,2090948665223522980_u64,6048009411476099682_u64,17906975496191882878_u64];
_9 = !_5;
_13 = 9_isize * (-9223372036854775808_isize);
RET = (-673657342_i32) & (-414692120_i32);
_2 = (_7,);
_6 = _13 == _13;
_5 = _9 * _9;
_11 = _10;
_14 = [_13,_13];
Goto(bb10)
}
bb10 = {
_2 = (_7,);
_11 = _8;
_13 = 15810181602846249004_u64 as isize;
_3 = core::ptr::addr_of!(_11);
_5 = 27100_i16 as u16;
RET = (-1442202613_i32);
_9 = _5;
RET = 1673684173_i32;
_14 = [_13,_13];
_15 = _6;
_7 = (*_3);
_8 = (*_3);
_10 = _2.0;
_2.0 = [5552581977057839871_u64,10936491207787995395_u64,14441350577369809220_u64,11532004495459651188_u64];
_2.0 = (*_3);
RET = !203947241_i32;
_9 = (-27_i8) as u16;
_2 = (_1,);
Goto(bb11)
}
bb11 = {
_16 = [_13,_13,_13,_13,_13,_13,_13,_13];
_8 = [5408708899750748566_u64,7597043321638175619_u64,1422199449046733522_u64,7557059867145237342_u64];
_18 = [RET,RET,RET,RET,RET,RET,RET];
_21 = _5 as f64;
_4 = [341682239754337270_u64,4849513890770321264_u64,12635936104705201691_u64,8606832147132960305_u64];
_10 = _4;
_24 = 177_u8 << RET;
_15 = !_6;
_22 = _21 as f32;
_23 = (-3482540798979123859_i64) as i32;
_4 = [16161596617345700194_u64,13436367165047201614_u64,12928771863005716047_u64,12585029282797998824_u64];
_19 = _9 >> RET;
_3 = core::ptr::addr_of!((*_3));
_2 = (_10,);
_24 = 157_u8;
_21 = (-5035974702451597674_i64) as f64;
_13 = 9223372036854775807_isize;
_14 = [_13,_13];
_25 = [7126703096170619846_i64,(-3266346417728027757_i64),1492647396299481237_i64,8845678302673323154_i64];
_22 = 17298158119276436270_u64 as f32;
Call(RET = fn9((*_3), _19, _14, (*_3), _1, _3, _3, _2, _21, _13, (*_3), _10, _6), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Goto(bb13)
}
bb13 = {
_2 = (_4,);
_26 = [_24,_24,_24,_24,_24];
_11 = [15044138737162421655_u64,2342999095677349409_u64,5397692577491085941_u64,4387079552073157811_u64];
_20 = _13;
_24 = 176_u8 >> _19;
_19 = (-5217738656817488828_i64) as u16;
_2 = ((*_3),);
_19 = _5 ^ _5;
_20 = _13;
_13 = (-41_i8) as isize;
_7 = _4;
_7 = _2.0;
_4 = [17720364652436534106_u64,606341144090439865_u64,16453896574223215128_u64,93443895982362678_u64];
_8 = [5441105218582696693_u64,13146643867987083146_u64,5658775350778229500_u64,9582116509121601744_u64];
_1 = [9366216743086749013_u64,18085225971130510415_u64,7094431606020175794_u64,5227805873637462942_u64];
_4 = [14378517618592853983_u64,13549160223401814859_u64,17459684354952066745_u64,3530295502858552095_u64];
RET = _23 << _20;
_1 = (*_3);
_13 = _20 ^ _20;
_15 = !_6;
_6 = !_15;
match _20 {
9223372036854775807 => bb14,
_ => bb11
}
}
bb14 = {
_1 = [3734352198330325832_u64,14882333396233352723_u64,12651906140614684497_u64,10392028671814049382_u64];
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(8_usize, 14_usize, Move(_14), 16_usize, Move(_16), 20_usize, Move(_20), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(8_usize, 4_usize, Move(_4), 7_usize, Move(_7), 15_usize, Move(_15), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(8_usize, 6_usize, Move(_6), 11_usize, Move(_11), 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [u64; 4],mut _2: u16,mut _3: [isize; 2],mut _4: [u64; 4],mut _5: [u64; 4],mut _6: *const [u64; 4],mut _7: *const [u64; 4],mut _8: ([u64; 4],),mut _9: f64,mut _10: isize,mut _11: [u64; 4],mut _12: [u64; 4],mut _13: bool) -> i32 {
mir! {
type RET = i32;
let _14: ([u64; 4],);
let _15: f32;
let _16: isize;
let _17: *mut f64;
let _18: isize;
let _19: i64;
let _20: (u8, &'static [usize; 2], &'static [usize; 2]);
let _21: char;
let _22: isize;
let _23: f32;
let _24: [u8; 5];
let _25: *mut char;
let _26: [usize; 8];
let _27: Adt46;
let _28: f64;
let _29: Adt41;
let _30: char;
let _31: u8;
let _32: bool;
let _33: f64;
let _34: u128;
let _35: Adt47;
let _36: Adt39;
let _37: u8;
let _38: i16;
let _39: *mut f64;
let _40: ();
let _41: ();
{
RET = 182020807391013172_u64 as i32;
_9 = _10 as f64;
_14 = (_4,);
_5 = _8.0;
_2 = !56784_u16;
_4 = _5;
_10 = 9223372036854775807_isize - 9223372036854775807_isize;
Call(RET = core::intrinsics::bswap((-259771787_i32)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = !3153_u16;
_6 = _7;
_16 = _10;
_11 = _14.0;
_3 = [_16,_10];
_3 = [_10,_10];
_18 = _16;
Goto(bb2)
}
bb2 = {
_19 = 3555428608196542430_i64;
_10 = _9 as isize;
Goto(bb3)
}
bb3 = {
_6 = _7;
_8 = _14;
_14 = (_4,);
_7 = _6;
_12 = _11;
_15 = RET as f32;
_11 = [1920266172724393241_u64,1497195404230343356_u64,14774549498077479806_u64,6079480327183413186_u64];
_17 = core::ptr::addr_of_mut!(_9);
_20.0 = 155_u8 + 111_u8;
RET = (-1408804064_i32) - 1870547587_i32;
_5 = [14782433483598084203_u64,15073103887472607997_u64,8355091618673854530_u64,13481620773564331167_u64];
_9 = 17538646323322472434_usize as f64;
_4 = _1;
_3 = [_16,_16];
_18 = _16;
_3 = [_16,_16];
_1 = _14.0;
_5 = [12937874701715304662_u64,14442617524935144984_u64,7726876604964440416_u64,1615829987827048845_u64];
_5 = [2549006171348199490_u64,11433066450266426179_u64,5649958816341406473_u64,17185845242797870839_u64];
match _19 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
3555428608196542430 => bb10,
_ => bb9
}
}
bb4 = {
_19 = 3555428608196542430_i64;
_10 = _9 as isize;
Goto(bb3)
}
bb5 = {
_2 = !3153_u16;
_6 = _7;
_16 = _10;
_11 = _14.0;
_3 = [_16,_10];
_3 = [_10,_10];
_18 = _16;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_17 = core::ptr::addr_of_mut!((*_17));
_8 = _14;
_5 = [7405799087084271192_u64,12565618691133625013_u64,14543062209926940246_u64,930295521435611300_u64];
_4 = [1156476920160871593_u64,10537059223516332798_u64,17937770379301109397_u64,12368974730524619014_u64];
_4 = [12829710654793299570_u64,4950665575503050588_u64,11696361289762448370_u64,11459950190216059186_u64];
_17 = core::ptr::addr_of_mut!((*_17));
_5 = [13729401211348216684_u64,5887743619596282476_u64,17892270020285611048_u64,4494732368636733261_u64];
RET = -(-534617333_i32);
_19 = !(-5896483402055672743_i64);
_17 = core::ptr::addr_of_mut!((*_17));
_14 = (_1,);
_15 = _16 as f32;
_12 = [8409081383165257971_u64,6832302415920712732_u64,10225624654064729451_u64,2738850944578355832_u64];
_15 = 120_i8 as f32;
_24 = [_20.0,_20.0,_20.0,_20.0,_20.0];
_5 = _1;
_10 = -_16;
_13 = true ^ false;
_14.0 = _5;
_23 = _2 as f32;
_17 = core::ptr::addr_of_mut!(_9);
Goto(bb11)
}
bb11 = {
_22 = _10 ^ _18;
_19 = 7342497350342140093_i64 ^ (-435551702444029267_i64);
_22 = _10;
_27.fld0 = _13;
_11 = _14.0;
_24 = [_20.0,_20.0,_20.0,_20.0,_20.0];
_16 = 3956475530057611859_usize as isize;
_27.fld0 = !_13;
_22 = _10 * _10;
_27 = Adt46 { fld0: _13,fld1: _14 };
_8 = (_5,);
_13 = !_27.fld0;
_22 = _10 >> _16;
Call(_9 = fn10(_22, _13, _27.fld1, _7, _7, _6, _3), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4 = _11;
_14 = (_11,);
Goto(bb13)
}
bb13 = {
_21 = '\u{36db9}';
_26 = [7_usize,9059380861940812335_usize,1_usize,4433971033496330358_usize,1977159673184645435_usize,1_usize,3780225453194558537_usize,3_usize];
_18 = -_22;
_23 = _15 * _15;
_18 = -_10;
_21 = '\u{c08b8}';
_30 = _21;
_17 = core::ptr::addr_of_mut!(_33);
_8 = (_1,);
_30 = _21;
_20.0 = !2_u8;
_3 = [_22,_10];
_33 = -_9;
_25 = core::ptr::addr_of_mut!(_21);
_36 = Adt39::Variant1 { fld0: _1,fld1: 386243476_u32,fld2: _20.0,fld3: _7 };
_13 = _27.fld0;
_25 = core::ptr::addr_of_mut!(_21);
_19 = 5715630977997014308_i64;
place!(Field::<u32>(Variant(_36, 1), 1)) = 917771559_u32;
_34 = !225524505875401314949426293881859769813_u128;
_2 = 13693_u16;
_31 = Field::<u8>(Variant(_36, 1), 2);
_27.fld1 = _8;
_29 = Adt41::Variant0 { fld0: _25,fld1: _26,fld2: _19 };
Goto(bb14)
}
bb14 = {
_8 = _14;
_9 = -_33;
_4 = [6848763867408616084_u64,8106687313989960442_u64,45090933676848094_u64,5348003218304108833_u64];
_12 = [10882909259197341051_u64,1948205993785489330_u64,4931201320603544341_u64,15375391924440299055_u64];
_28 = _10 as f64;
_28 = (*_17) - (*_17);
_29 = Adt41::Variant0 { fld0: _25,fld1: _26,fld2: _19 };
_36 = Adt39::Variant0 { fld0: RET,fld1: _34,fld2: 169058234372690653938304261601169387468_i128 };
_14 = _27.fld1;
SetDiscriminant(_29, 1);
_2 = !10640_u16;
place!(Field::<i128>(Variant(_36, 0), 2)) = (-50933069801303018348277980846844803368_i128);
_28 = (*_17);
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(9_usize, 8_usize, Move(_8), 5_usize, Move(_5), 24_usize, Move(_24), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(9_usize, 30_usize, Move(_30), 14_usize, Move(_14), 10_usize, Move(_10), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(9_usize, 12_usize, Move(_12), 21_usize, Move(_21), 41_usize, _41, 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: isize,mut _2: bool,mut _3: ([u64; 4],),mut _4: *const [u64; 4],mut _5: *const [u64; 4],mut _6: *const [u64; 4],mut _7: [isize; 2]) -> f64 {
mir! {
type RET = f64;
let _8: i128;
let _9: *mut char;
let _10: u8;
let _11: bool;
let _12: [isize; 8];
let _13: [isize; 8];
let _14: f64;
let _15: usize;
let _16: bool;
let _17: [isize; 8];
let _18: [isize; 2];
let _19: *const (i128, *const i128, &'static [usize; 2]);
let _20: *const [u64; 4];
let _21: i64;
let _22: [u64; 4];
let _23: isize;
let _24: Adt46;
let _25: *const (i128, *const i128, &'static [usize; 2]);
let _26: char;
let _27: bool;
let _28: char;
let _29: i64;
let _30: bool;
let _31: [i32; 7];
let _32: char;
let _33: u128;
let _34: Adt39;
let _35: [isize; 8];
let _36: [u8; 5];
let _37: Adt48;
let _38: Adt47;
let _39: f64;
let _40: *const i128;
let _41: u16;
let _42: f64;
let _43: i64;
let _44: i64;
let _45: usize;
let _46: [u64; 4];
let _47: [i64; 4];
let _48: Adt43;
let _49: Adt49;
let _50: bool;
let _51: isize;
let _52: ();
let _53: ();
{
RET = 14810_u16 as f64;
RET = 3157048794738020159_u64 as f64;
RET = 1683197902_i32 as f64;
_7 = [_1,_1];
RET = (-14781_i16) as f64;
RET = 2040_i16 as f64;
_2 = false & true;
_6 = _5;
RET = (-24199_i16) as f64;
_2 = !true;
_2 = true;
_8 = (-383_i16) as i128;
RET = 241286900_u32 as f64;
_1 = 9223372036854775807_isize;
_2 = !true;
_7 = [_1,_1];
_6 = _4;
_8 = !44177103626134577140211770443269810236_i128;
_2 = false & true;
RET = 9591397821837946177_usize as f64;
RET = 1_usize as f64;
Goto(bb1)
}
bb1 = {
_6 = _4;
_12 = [_1,_1,_1,_1,_1,_1,_1,_1];
_10 = 8146726751454552489_usize as u8;
_2 = _10 != _10;
_3.0 = [2910861703508834023_u64,8587304532845633339_u64,2311559355711268822_u64,2691426183645886436_u64];
_11 = !_2;
_7 = [_1,_1];
_5 = core::ptr::addr_of!(_3.0);
_13 = _12;
RET = 2334089883_u32 as f64;
_10 = !220_u8;
_1 = _10 as isize;
_14 = _10 as f64;
_5 = core::ptr::addr_of!((*_5));
_6 = core::ptr::addr_of!(_3.0);
RET = _14 + _14;
RET = _14 * _14;
_13 = [_1,_1,_1,_1,_1,_1,_1,_1];
_1 = 9223372036854775807_isize;
_2 = _11 >= _11;
_4 = core::ptr::addr_of!((*_6));
RET = _14 + _14;
_1 = _11 as isize;
Goto(bb2)
}
bb2 = {
_2 = !_11;
RET = _14 * _14;
_11 = _2;
_12 = _13;
_11 = _2;
_10 = !154_u8;
_11 = _2;
_15 = !14306394439707638709_usize;
Goto(bb3)
}
bb3 = {
_1 = 52_isize;
_10 = (-2247498629015459387_i64) as u8;
RET = _14;
_16 = RET > RET;
_4 = _5;
_17 = [_1,_1,_1,_1,_1,_1,_1,_1];
_8 = !(-26253358350178049789513652048308265663_i128);
_14 = _15 as f64;
_12 = [_1,_1,_1,_1,_1,_1,_1,_1];
_1 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_10 = !179_u8;
_5 = _6;
_15 = 18232552083635056993_usize;
_5 = _4;
_20 = _6;
_18 = [_1,_1];
_11 = _2 ^ _2;
Goto(bb4)
}
bb4 = {
RET = _8 as f64;
_18 = _7;
_2 = _8 > _8;
_16 = _11 != _11;
_24.fld0 = !_11;
_10 = !200_u8;
RET = -_14;
_14 = RET;
_23 = !_1;
_23 = _15 as isize;
_24.fld1 = ((*_6),);
_22 = (*_6);
_15 = !5_usize;
_9 = core::ptr::addr_of_mut!(_28);
RET = -_14;
_32 = '\u{66f30}';
_31 = [(-1461755734_i32),389778970_i32,1707919778_i32,(-145383512_i32),(-1588314936_i32),432057758_i32,(-1315913385_i32)];
_24.fld1.0 = (*_6);
_23 = !_1;
Call(_23 = core::intrinsics::bswap(_1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_11 = _24.fld0;
_17 = [_23,_23,_1,_23,_1,_1,_23,_1];
_27 = _11;
_24.fld1 = _3;
_27 = _24.fld0;
_12 = [_1,_23,_1,_1,_23,_23,_23,_23];
_29 = 3412564948392261380_i64;
_32 = '\u{94a7e}';
_9 = core::ptr::addr_of_mut!((*_9));
_7 = [_23,_23];
Goto(bb6)
}
bb6 = {
_1 = !_23;
RET = -_14;
_21 = _29 - _29;
_24 = Adt46 { fld0: _11,fld1: _3 };
RET = 41_i8 as f64;
_30 = !_16;
RET = _14 + _14;
match _29 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb8,
6 => bb9,
3412564948392261380 => bb11,
_ => bb10
}
}
bb7 = {
_11 = _24.fld0;
_17 = [_23,_23,_1,_23,_1,_1,_23,_1];
_27 = _11;
_24.fld1 = _3;
_27 = _24.fld0;
_12 = [_1,_23,_1,_1,_23,_23,_23,_23];
_29 = 3412564948392261380_i64;
_32 = '\u{94a7e}';
_9 = core::ptr::addr_of_mut!((*_9));
_7 = [_23,_23];
Goto(bb6)
}
bb8 = {
RET = _8 as f64;
_18 = _7;
_2 = _8 > _8;
_16 = _11 != _11;
_24.fld0 = !_11;
_10 = !200_u8;
RET = -_14;
_14 = RET;
_23 = !_1;
_23 = _15 as isize;
_24.fld1 = ((*_6),);
_22 = (*_6);
_15 = !5_usize;
_9 = core::ptr::addr_of_mut!(_28);
RET = -_14;
_32 = '\u{66f30}';
_31 = [(-1461755734_i32),389778970_i32,1707919778_i32,(-145383512_i32),(-1588314936_i32),432057758_i32,(-1315913385_i32)];
_24.fld1.0 = (*_6);
_23 = !_1;
Call(_23 = core::intrinsics::bswap(_1), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_1 = 52_isize;
_10 = (-2247498629015459387_i64) as u8;
RET = _14;
_16 = RET > RET;
_4 = _5;
_17 = [_1,_1,_1,_1,_1,_1,_1,_1];
_8 = !(-26253358350178049789513652048308265663_i128);
_14 = _15 as f64;
_12 = [_1,_1,_1,_1,_1,_1,_1,_1];
_1 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_10 = !179_u8;
_5 = _6;
_15 = 18232552083635056993_usize;
_5 = _4;
_20 = _6;
_18 = [_1,_1];
_11 = _2 ^ _2;
Goto(bb4)
}
bb10 = {
_2 = !_11;
RET = _14 * _14;
_11 = _2;
_12 = _13;
_11 = _2;
_10 = !154_u8;
_11 = _2;
_15 = !14306394439707638709_usize;
Goto(bb3)
}
bb11 = {
_16 = !_24.fld0;
_5 = core::ptr::addr_of!((*_6));
_7 = [_23,_1];
_3.0 = [1893018829791551876_u64,12065476288198691925_u64,4994237961950401527_u64,714831343987471885_u64];
RET = 48_u16 as f64;
_17 = _13;
_11 = !_16;
_11 = _16;
_12 = _13;
_32 = '\u{53f51}';
_10 = 222_u8 * 153_u8;
_26 = _32;
_33 = 167255754634679143211219573583623855371_u128;
_12 = [_1,_23,_1,_23,_23,_23,_1,_23];
_22 = [12056715939336242206_u64,15457279184898061178_u64,14460903804555661600_u64,998087120233855698_u64];
_9 = core::ptr::addr_of_mut!((*_9));
_12 = [_23,_1,_23,_23,_1,_23,_23,_23];
_13 = _12;
_28 = _32;
_36 = [_10,_10,_10,_10,_10];
Goto(bb12)
}
bb12 = {
_9 = core::ptr::addr_of_mut!(_26);
_37.fld1 = (*_9);
_9 = core::ptr::addr_of_mut!((*_9));
_1 = _23 & _23;
_36 = [_10,_10,_10,_10,_10];
_6 = _20;
_40 = core::ptr::addr_of!(_8);
_14 = RET;
_43 = _29;
_24.fld1.0 = (*_5);
_34 = Adt39::Variant1 { fld0: (*_5),fld1: 1325630538_u32,fld2: _10,fld3: _5 };
_24 = Adt46 { fld0: _16,fld1: _3 };
Call(_27 = fn11(_9, _24.fld0, _10, _3.0, _26), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
RET = _14;
_43 = _21 << _21;
place!(Field::<*const [u64; 4]>(Variant(_34, 1), 3)) = _6;
_44 = _21;
_37.fld6 = _21 << _21;
_4 = _5;
_3 = (Field::<[u64; 4]>(Variant(_34, 1), 0),);
_2 = _27;
_41 = (-20761_i16) as u16;
_37.fld2 = _41 as isize;
_23 = -_1;
_27 = _2 != _2;
_2 = _43 <= _43;
_37.fld4 = core::ptr::addr_of_mut!(_14);
_1 = -_23;
place!(Field::<u8>(Variant(_34, 1), 2)) = _10;
_37.fld5 = _6;
_42 = -_14;
_14 = _42;
place!(Field::<[u64; 4]>(Variant(_34, 1), 0)) = [3212017076774607046_u64,886433043367729378_u64,251286538390971007_u64,5693364626296743415_u64];
_9 = core::ptr::addr_of_mut!(_26);
match _29 {
0 => bb3,
1 => bb14,
2 => bb15,
3 => bb16,
3412564948392261380 => bb18,
_ => bb17
}
}
bb14 = {
_6 = _4;
_12 = [_1,_1,_1,_1,_1,_1,_1,_1];
_10 = 8146726751454552489_usize as u8;
_2 = _10 != _10;
_3.0 = [2910861703508834023_u64,8587304532845633339_u64,2311559355711268822_u64,2691426183645886436_u64];
_11 = !_2;
_7 = [_1,_1];
_5 = core::ptr::addr_of!(_3.0);
_13 = _12;
RET = 2334089883_u32 as f64;
_10 = !220_u8;
_1 = _10 as isize;
_14 = _10 as f64;
_5 = core::ptr::addr_of!((*_5));
_6 = core::ptr::addr_of!(_3.0);
RET = _14 + _14;
RET = _14 * _14;
_13 = [_1,_1,_1,_1,_1,_1,_1,_1];
_1 = 9223372036854775807_isize;
_2 = _11 >= _11;
_4 = core::ptr::addr_of!((*_6));
RET = _14 + _14;
_1 = _11 as isize;
Goto(bb2)
}
bb15 = {
RET = _8 as f64;
_18 = _7;
_2 = _8 > _8;
_16 = _11 != _11;
_24.fld0 = !_11;
_10 = !200_u8;
RET = -_14;
_14 = RET;
_23 = !_1;
_23 = _15 as isize;
_24.fld1 = ((*_6),);
_22 = (*_6);
_15 = !5_usize;
_9 = core::ptr::addr_of_mut!(_28);
RET = -_14;
_32 = '\u{66f30}';
_31 = [(-1461755734_i32),389778970_i32,1707919778_i32,(-145383512_i32),(-1588314936_i32),432057758_i32,(-1315913385_i32)];
_24.fld1.0 = (*_6);
_23 = !_1;
Call(_23 = core::intrinsics::bswap(_1), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_1 = !_23;
RET = -_14;
_21 = _29 - _29;
_24 = Adt46 { fld0: _11,fld1: _3 };
RET = 41_i8 as f64;
_30 = !_16;
RET = _14 + _14;
match _29 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb8,
6 => bb9,
3412564948392261380 => bb11,
_ => bb10
}
}
bb17 = {
_1 = 52_isize;
_10 = (-2247498629015459387_i64) as u8;
RET = _14;
_16 = RET > RET;
_4 = _5;
_17 = [_1,_1,_1,_1,_1,_1,_1,_1];
_8 = !(-26253358350178049789513652048308265663_i128);
_14 = _15 as f64;
_12 = [_1,_1,_1,_1,_1,_1,_1,_1];
_1 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_10 = !179_u8;
_5 = _6;
_15 = 18232552083635056993_usize;
_5 = _4;
_20 = _6;
_18 = [_1,_1];
_11 = _2 ^ _2;
Goto(bb4)
}
bb18 = {
place!(Field::<[u64; 4]>(Variant(_34, 1), 0)) = [286700422099706562_u64,8213733334957269837_u64,3785264811282150300_u64,13521329740378818801_u64];
_45 = _15 - _15;
_9 = core::ptr::addr_of_mut!((*_9));
_27 = !_30;
_34 = Adt39::Variant0 { fld0: 969694139_i32,fld1: _33,fld2: (*_40) };
_47 = [_37.fld6,_44,_43,_37.fld6];
RET = 3063953553_u32 as f64;
_21 = -_43;
_49.fld1.fld2 = _37.fld2 & _1;
_9 = core::ptr::addr_of_mut!(_37.fld1);
_18 = _7;
_37.fld2 = 3995253030_u32 as isize;
_39 = 1248255700_u32 as f64;
_37.fld7 = [_15,_45,_45,_15,_45,_45,_45,_45];
_3 = (_24.fld1.0,);
_5 = core::ptr::addr_of!(_24.fld1.0);
Goto(bb19)
}
bb19 = {
Call(_52 = dump_var(10_usize, 47_usize, Move(_47), 32_usize, Move(_32), 44_usize, Move(_44), 45_usize, Move(_45)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_52 = dump_var(10_usize, 16_usize, Move(_16), 2_usize, Move(_2), 18_usize, Move(_18), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_52 = dump_var(10_usize, 1_usize, Move(_1), 17_usize, Move(_17), 27_usize, Move(_27), 11_usize, Move(_11)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_52 = dump_var(10_usize, 43_usize, Move(_43), 21_usize, Move(_21), 3_usize, Move(_3), 53_usize, _53), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: *mut char,mut _2: bool,mut _3: u8,mut _4: [u64; 4],mut _5: char) -> bool {
mir! {
type RET = bool;
let _6: i64;
let _7: [i32; 7];
let _8: isize;
let _9: ();
let _10: ();
{
RET = _2;
_1 = core::ptr::addr_of_mut!(_5);
_2 = RET;
Call(RET = fn12(_2, _4, _4, _1, _2, _4, _3, _4, _3, (*_1), (*_1), _2, _1, (*_1), _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = [6415225861590299300_u64,603628664819495119_u64,18180684595354381303_u64,4679087741363726720_u64];
_2 = RET;
_2 = RET;
_5 = '\u{bc22c}';
RET = _2 <= _2;
_6 = 9222091565365807474_i64 << _3;
Goto(bb2)
}
bb2 = {
Call(_9 = dump_var(11_usize, 3_usize, Move(_3), 4_usize, Move(_4), 10_usize, _10, 10_usize, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: bool,mut _2: [u64; 4],mut _3: [u64; 4],mut _4: *mut char,mut _5: bool,mut _6: [u64; 4],mut _7: u8,mut _8: [u64; 4],mut _9: u8,mut _10: char,mut _11: char,mut _12: bool,mut _13: *mut char,mut _14: char,mut _15: [u64; 4]) -> bool {
mir! {
type RET = bool;
let _16: [u8; 5];
let _17: [u8; 5];
let _18: f64;
let _19: *mut f64;
let _20: i16;
let _21: isize;
let _22: Adt46;
let _23: ([u64; 4],);
let _24: ([u64; 4],);
let _25: Adt42;
let _26: bool;
let _27: Adt50;
let _28: [i64; 4];
let _29: char;
let _30: [isize; 8];
let _31: f64;
let _32: u64;
let _33: [usize; 8];
let _34: f64;
let _35: bool;
let _36: f32;
let _37: isize;
let _38: ();
let _39: ();
{
_6 = [9476328432699466212_u64,3233158218898866921_u64,9192396846076374398_u64,16302622265980101184_u64];
_14 = _11;
_2 = [12500140731191804990_u64,12895472892135548449_u64,5105026330394223617_u64,12750588920263526097_u64];
_14 = _11;
_16 = [_7,_7,_9,_7,_7];
_10 = _14;
_6 = [16423126864805588596_u64,2564397343142314698_u64,9363798944282354384_u64,10445205266740394520_u64];
_6 = [3925419610148097995_u64,12464797160300100230_u64,2126032951637849640_u64,8015792608961530794_u64];
_15 = _6;
_12 = !_5;
_8 = _3;
RET = _5;
_12 = _1 <= RET;
_8 = _6;
_3 = [3147999734160445025_u64,1859025429231884279_u64,12055316865839861488_u64,4152430891716970701_u64];
_17 = _16;
_18 = 11101478907921045874_usize as f64;
_15 = [12273693149281460181_u64,16434880063291225185_u64,17557526646044230854_u64,14441213999556072418_u64];
_15 = [6323688079532898132_u64,1735506272009372225_u64,16256996768175714725_u64,9778295315998413171_u64];
Goto(bb1)
}
bb1 = {
_22.fld0 = _1 != _12;
Goto(bb2)
}
bb2 = {
_9 = !_7;
_2 = [8921455864995430031_u64,10092428905330985475_u64,14651904861584247713_u64,12160055941482790032_u64];
_1 = !_22.fld0;
_4 = _13;
_3 = [10846599773185045107_u64,9445746969806315749_u64,1591630742643476580_u64,4809003766036037646_u64];
_4 = core::ptr::addr_of_mut!(_14);
Goto(bb3)
}
bb3 = {
_1 = !_12;
_19 = core::ptr::addr_of_mut!(_18);
_24.0 = [9289933533362560415_u64,4636575758796516147_u64,16405827249033084763_u64,12016655827739001308_u64];
_13 = core::ptr::addr_of_mut!((*_4));
_13 = _4;
_16 = [_7,_9,_7,_7,_7];
Goto(bb4)
}
bb4 = {
_24 = (_6,);
_11 = _14;
_18 = 27283_i16 as f64;
_25 = Adt42::Variant1 { fld0: 253318494_u32 };
_12 = _1;
_10 = _11;
_14 = _10;
_19 = core::ptr::addr_of_mut!((*_19));
_10 = (*_4);
_18 = 451418274_i32 as f64;
_8 = [5668446639960781679_u64,17871577151858895688_u64,1964690976585115590_u64,10720974278288971404_u64];
_17 = _16;
_29 = (*_4);
Goto(bb5)
}
bb5 = {
_9 = _7 ^ _7;
_10 = (*_4);
_28 = [(-4635107189311926554_i64),5794682080873736148_i64,8885631793188193355_i64,2263338182330625747_i64];
_11 = (*_4);
_13 = _4;
_22.fld0 = !_12;
_22 = Adt46 { fld0: _12,fld1: _24 };
_1 = _9 != _9;
_13 = _4;
_1 = !_22.fld0;
RET = _10 <= (*_4);
_8 = _22.fld1.0;
_29 = _11;
Call(_28 = fn13((*_4), _6, _9, _24, _24, _14, _22.fld1, _12, _2, _2, _12, _24.0, _22.fld1, _1, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17 = _16;
_20 = -(-11224_i16);
_26 = (*_4) != _29;
_6 = [2988122241625130372_u64,17953006587888842389_u64,8691084180134749810_u64,192562847780197862_u64];
_29 = (*_4);
Goto(bb7)
}
bb7 = {
_8 = [13833687642431233589_u64,3352642925564562893_u64,11546005781026592365_u64,8997466809761617282_u64];
_26 = _1 | _1;
_22 = Adt46 { fld0: _26,fld1: _24 };
_24 = _22.fld1;
_12 = _26 & RET;
_28 = [(-4408926926126375565_i64),8386221972989007932_i64,5487125495959409834_i64,(-9109423405987530912_i64)];
_20 = _18 as i16;
_23.0 = [10090735312569077879_u64,16508945852185332506_u64,3331617904679339458_u64,18042017215372187309_u64];
_32 = 2358067610423599289_u64;
_34 = (*_19) + _18;
_15 = _8;
_34 = (*_19) - (*_19);
_30 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-2_isize),67_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,106_isize];
_22.fld1.0 = [_32,_32,_32,_32];
_32 = 963496466900026481_u64;
_21 = 487397429_u32 as isize;
_22.fld1 = (_2,);
_29 = (*_4);
_13 = core::ptr::addr_of_mut!(_11);
_33 = [11318640319115406139_usize,7_usize,0_usize,1_usize,9945388244384000303_usize,4990270932795006247_usize,13399238987911921183_usize,2_usize];
_10 = _11;
_31 = -(*_19);
_22.fld1.0 = [_32,_32,_32,_32];
match _32 {
963496466900026481 => bb9,
_ => bb8
}
}
bb8 = {
_22.fld0 = _1 != _12;
Goto(bb2)
}
bb9 = {
_17 = [_9,_7,_9,_9,_9];
_17 = _16;
_24 = (_23.0,);
_30 = [_21,_21,_21,_21,_21,_21,_21,_21];
_22 = Adt46 { fld0: _12,fld1: _23 };
_29 = (*_13);
RET = !_26;
_29 = (*_4);
_9 = _7;
_18 = (-47244922909028936293036962909299390413_i128) as f64;
_24.0 = [_32,_32,_32,_32];
_30 = [_21,_21,_21,_21,_21,_21,_21,_21];
_4 = core::ptr::addr_of_mut!((*_4));
_6 = [_32,_32,_32,_32];
_16 = [_9,_9,_7,_7,_9];
_11 = (*_4);
_22.fld1 = (_15,);
_4 = _13;
Goto(bb10)
}
bb10 = {
Call(_38 = dump_var(12_usize, 9_usize, Move(_9), 10_usize, Move(_10), 2_usize, Move(_2), 32_usize, Move(_32)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(12_usize, 3_usize, Move(_3), 29_usize, Move(_29), 21_usize, Move(_21), 5_usize, Move(_5)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_38 = dump_var(12_usize, 6_usize, Move(_6), 33_usize, Move(_33), 1_usize, Move(_1), 30_usize, Move(_30)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: char,mut _2: [u64; 4],mut _3: u8,mut _4: ([u64; 4],),mut _5: ([u64; 4],),mut _6: char,mut _7: ([u64; 4],),mut _8: bool,mut _9: [u64; 4],mut _10: [u64; 4],mut _11: bool,mut _12: [u64; 4],mut _13: ([u64; 4],),mut _14: bool,mut _15: [u64; 4]) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _16: [u8; 5];
let _17: (&'static [usize; 2],);
let _18: [u8; 5];
let _19: [usize; 2];
let _20: [i32; 7];
let _21: [usize; 8];
let _22: f32;
let _23: Adt46;
let _24: char;
let _25: *mut f32;
let _26: [usize; 8];
let _27: f32;
let _28: [i64; 4];
let _29: Adt46;
let _30: *mut f32;
let _31: usize;
let _32: Adt43;
let _33: (i128, *const i128, &'static [usize; 2]);
let _34: isize;
let _35: f64;
let _36: [usize; 2];
let _37: [usize; 8];
let _38: Adt50;
let _39: *const ([u64; 4],);
let _40: [isize; 2];
let _41: [i32; 7];
let _42: Adt50;
let _43: isize;
let _44: u128;
let _45: bool;
let _46: *mut char;
let _47: u8;
let _48: ();
let _49: ();
{
_5 = (_7.0,);
_13 = (_4.0,);
_1 = _6;
Goto(bb1)
}
bb1 = {
_15 = _10;
Goto(bb2)
}
bb2 = {
RET = [(-8558186374121128268_i64),(-4547558131966063411_i64),(-8195347388260250493_i64),(-4654268412940238825_i64)];
_5.0 = _12;
_12 = _13.0;
_12 = _5.0;
_5.0 = _10;
RET = [8377138689013423725_i64,3434458982040467501_i64,334406412715679455_i64,1223780201837057113_i64];
_4.0 = _13.0;
_16 = [_3,_3,_3,_3,_3];
_10 = _15;
_13 = (_9,);
_4.0 = [6392460200517661255_u64,16880222360094080537_u64,11421453940032249751_u64,6782958314387963981_u64];
_20 = [1477218713_i32,996169990_i32,1747505004_i32,2039426453_i32,1427869021_i32,169238662_i32,(-1242112789_i32)];
_17.0 = &_19;
_6 = _1;
_14 = _8;
_18 = [_3,_3,_3,_3,_3];
Goto(bb3)
}
bb3 = {
_4 = (_10,);
_21 = [11847933307172303638_usize,6368063338146461079_usize,17633237522739642208_usize,11514633018514369053_usize,7638569603402773237_usize,9252843867280596929_usize,10584593618078022612_usize,5909814611490876175_usize];
_9 = [1561658278875227355_u64,3945481769403639599_u64,4499314591537354076_u64,13932938806040541023_u64];
_23 = Adt46 { fld0: _8,fld1: _7 };
_13.0 = [12885448667291878133_u64,229906216881848780_u64,3021996176768128733_u64,2533533533833076846_u64];
_4.0 = _9;
_22 = 634269578_u32 as f32;
_19 = [5_usize,3_usize];
_7 = (_9,);
_28 = RET;
_29.fld0 = !_23.fld0;
_11 = _14;
_27 = -_22;
_29.fld1.0 = [2942456518932445734_u64,12346319452045362521_u64,12352448403447672374_u64,7277674975880575000_u64];
_30 = core::ptr::addr_of_mut!(_27);
Call(_26 = fn14(_23.fld1, _14, _14, _12, _23.fld1.0, _23.fld0, _19), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_21 = [2_usize,153721518178255457_usize,0_usize,12802063594740192770_usize,4_usize,18133884754514859672_usize,944882391819054275_usize,2_usize];
_29.fld1.0 = [6062204455847012152_u64,1209167026832919581_u64,14062789901686593546_u64,15936401676787267661_u64];
_10 = [4687546726854095546_u64,5226836918960492746_u64,16552937399524034627_u64,9152503423430976102_u64];
_23.fld0 = _11;
_28 = [4065144999726728_i64,6690563470547113497_i64,2701944006855118691_i64,4910312989378290176_i64];
_13.0 = [108479942773418107_u64,12115905601033833968_u64,11807171451890868362_u64,15335465322619717624_u64];
_24 = _1;
_4 = _5;
_29.fld1 = (_2,);
_28 = [4795708108268784252_i64,8237658884629426856_i64,236242384054079240_i64,(-3403363688057908682_i64)];
_29.fld0 = !_23.fld0;
_20 = [(-995881896_i32),303919579_i32,425629163_i32,700286743_i32,1291807281_i32,1648889436_i32,(-1549568460_i32)];
_4.0 = _29.fld1.0;
_12 = _5.0;
_17.0 = &_19;
_15 = [2917201927981553402_u64,8460171963245654606_u64,6123934194736254503_u64,7775650513948653844_u64];
_4 = (_13.0,);
Goto(bb5)
}
bb5 = {
_29 = Move(_23);
_26 = [5458146502362002972_usize,1_usize,4_usize,10954375442893840336_usize,1_usize,14429319235500474007_usize,0_usize,8541566499401424998_usize];
_28 = [7585814498834695643_i64,1360537407423382240_i64,2556043251357995847_i64,5894000482654892037_i64];
_19 = [1_usize,3_usize];
_10 = [2931078295239478070_u64,10639994423682833987_u64,6225185037184765975_u64,6222083889603598554_u64];
_23.fld1 = (_2,);
_4.0 = [17655892645150925979_u64,12863813715461960400_u64,4407403506219538046_u64,14837368381333244830_u64];
_8 = _11;
RET = [(-6820809169106982835_i64),2756350844397108013_i64,(-3308106416264981515_i64),(-3281164197622904890_i64)];
_14 = !_11;
_3 = !128_u8;
_23 = Move(_29);
Goto(bb6)
}
bb6 = {
_22 = (*_30) + _27;
_23.fld0 = _14 | _14;
_29.fld1.0 = [12666985739994107546_u64,17073201273400899883_u64,11260895361535248707_u64,7108824293840658433_u64];
_16 = [_3,_3,_3,_3,_3];
Call(_29.fld0 = fn16(_16, _5.0, _11, _18, _12), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_17.0 = &_19;
_29.fld0 = !_8;
_1 = _24;
_8 = !_23.fld0;
_24 = _6;
_29 = Adt46 { fld0: _8,fld1: _13 };
Goto(bb8)
}
bb8 = {
RET = [(-4691130075121487867_i64),27843611023556598_i64,(-8453467878808963450_i64),6478652075693718295_i64];
_5.0 = [4130694781586354881_u64,10330859651351354213_u64,13191004330591207355_u64,4787084019328109868_u64];
_13 = _4;
_21 = _26;
_13 = _4;
_4.0 = [12891431576244731077_u64,819099301772681812_u64,1990462104809650557_u64,6993179102682788676_u64];
Goto(bb9)
}
bb9 = {
_27 = 3529484308_u32 as f32;
_18 = _16;
_19 = [1_usize,6_usize];
_11 = _8;
_8 = !_11;
_20 = [1969623504_i32,(-799200987_i32),(-1497907290_i32),1093897206_i32,1260393847_i32,(-681657814_i32),(-423185670_i32)];
_32 = Adt43::Variant2 { fld0: _20,fld1: _26,fld2: 2898794989_u32,fld3: _30,fld4: _3 };
_34 = 135381067726860253795555311587002372428_u128 as isize;
place!(Field::<u8>(Variant(_32, 2), 4)) = !_3;
_15 = _10;
place!(Field::<u8>(Variant(_32, 2), 4)) = _3 | _3;
RET = [(-1389166326571872711_i64),(-5868657392238322453_i64),(-7152540799018068349_i64),(-7059811584124689128_i64)];
_30 = Field::<*mut f32>(Variant(_32, 2), 3);
_1 = _24;
_35 = 15358283479666287585_u64 as f64;
_24 = _1;
_35 = (-358303733717497392_i64) as f64;
_5 = (_15,);
_31 = 454832048_u32 as usize;
_8 = _23.fld0;
_5 = _23.fld1;
_28 = [6410651800874652696_i64,1303816673800340033_i64,(-4029680047256216738_i64),(-8352543656680818789_i64)];
_29.fld1.0 = _5.0;
Goto(bb10)
}
bb10 = {
_9 = [18169939177048123166_u64,279504529772194918_u64,9363285443640188426_u64,857639402761687799_u64];
_16 = [Field::<u8>(Variant(_32, 2), 4),Field::<u8>(Variant(_32, 2), 4),Field::<u8>(Variant(_32, 2), 4),Field::<u8>(Variant(_32, 2), 4),Field::<u8>(Variant(_32, 2), 4)];
_15 = [8019866716573653358_u64,9227455005271766965_u64,4300526290592422065_u64,12317584160881317416_u64];
_19 = [_31,_31];
_35 = _22 as f64;
_12 = [161962679563122588_u64,5568982597293624964_u64,7172850332002285744_u64,5537291605333623224_u64];
_5.0 = _13.0;
RET = _28;
Goto(bb11)
}
bb11 = {
_33.0 = 110320227935722003173532983924456325793_u128 as i128;
_33.2 = &_19;
place!(Field::<[usize; 8]>(Variant(_32, 2), 1)) = [_31,_31,_31,_31,_31,_31,_31,_31];
_9 = _15;
place!(Field::<[i32; 7]>(Variant(_32, 2), 0)) = _20;
_32 = Adt43::Variant2 { fld0: _20,fld1: _26,fld2: 1645966530_u32,fld3: _30,fld4: _3 };
_12 = [9328701461407723033_u64,8252370404754326554_u64,12104660476952686415_u64,18442559375577955002_u64];
_31 = 17100140322836147590_usize | 2_usize;
place!(Field::<u8>(Variant(_32, 2), 4)) = 15923_i16 as u8;
_17 = (Move(_33.2),);
place!(Field::<[usize; 8]>(Variant(_32, 2), 1)) = [_31,_31,_31,_31,_31,_31,_31,_31];
Goto(bb12)
}
bb12 = {
place!(Field::<u32>(Variant(_32, 2), 2)) = !1936721781_u32;
_39 = core::ptr::addr_of!(_29.fld1);
_44 = !30899378481617773248963056536826820696_u128;
_3 = 6401_i16 as u8;
_16 = [_3,_3,_3,_3,Field::<u8>(Variant(_32, 2), 4)];
SetDiscriminant(_32, 3);
_33.0 = !(-74031631563135811133715845609704627749_i128);
_33.0 = 5120385795028156711_u64 as i128;
_4.0 = _9;
_1 = _24;
_5 = _29.fld1;
Call(_22 = fn17(_2, (*_39), _28, _15, _5, _39, _10, _14, _11, _13, _26, _14), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Goto(bb14)
}
bb14 = {
_40 = [_34,_34];
_45 = !_11;
_41 = [575034838_i32,(-1021971663_i32),989638259_i32,(-1700478982_i32),1667111842_i32,(-521278316_i32),(-71974054_i32)];
_15 = _23.fld1.0;
_37 = _26;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(13_usize, 37_usize, Move(_37), 8_usize, Move(_8), 13_usize, Move(_13), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(13_usize, 41_usize, Move(_41), 40_usize, Move(_40), 6_usize, Move(_6), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(13_usize, 45_usize, Move(_45), 15_usize, Move(_15), 26_usize, Move(_26), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(13_usize, 11_usize, Move(_11), 2_usize, Move(_2), 7_usize, Move(_7), 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: ([u64; 4],),mut _2: bool,mut _3: bool,mut _4: [u64; 4],mut _5: [u64; 4],mut _6: bool,mut _7: [usize; 2]) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _8: i128;
let _9: [i64; 4];
let _10: u128;
let _11: Adt48;
let _12: Adt41;
let _13: isize;
let _14: f32;
let _15: Adt46;
let _16: f32;
let _17: u32;
let _18: char;
let _19: f32;
let _20: i32;
let _21: isize;
let _22: [i32; 7];
let _23: f32;
let _24: u64;
let _25: (&'static [usize; 2],);
let _26: f64;
let _27: bool;
let _28: *const (i128, *const i128, &'static [usize; 2]);
let _29: u128;
let _30: usize;
let _31: u32;
let _32: Adt55;
let _33: ();
let _34: ();
{
_1.0 = _4;
RET = [1962361641573072455_usize,13477969071776334576_usize,107268311938145953_usize,14726298492277001948_usize,6391669992549707312_usize,268393645575559697_usize,4179795754206360532_usize,6_usize];
_5 = [1188651044208697659_u64,10435637447399751203_u64,6696052301371574427_u64,4353881458316323846_u64];
_3 = _6;
Goto(bb1)
}
bb1 = {
RET = [8850935916372732380_usize,4_usize,11441931700133650701_usize,2_usize,5_usize,0_usize,14391693269214746589_usize,5616571095537385044_usize];
_2 = _3;
_7 = [13953042374797350710_usize,3885122420205037684_usize];
_5 = _1.0;
_5 = [9070818358397490415_u64,7007869300687520926_u64,1364331761016232661_u64,15904950681868935457_u64];
RET = [2040963334728998876_usize,0_usize,6_usize,13598468233748960463_usize,1_usize,4852009280687746280_usize,16442889725628214264_usize,2_usize];
Call(_8 = fn15(RET, _6, RET, _4, _4, _3, _1.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = (_4,);
_1.0 = [2879914846115663819_u64,4236759019941106443_u64,13968308985367155138_u64,2969978553770772517_u64];
_3 = _2;
_3 = _6 ^ _2;
_7 = [11490542112982971741_usize,3386374162707417653_usize];
_8 = -(-163519455392506855013599368714521030252_i128);
Goto(bb3)
}
bb3 = {
_1 = (_4,);
_11.fld6 = (-1479367764289617288_i64) * 4861703720940695102_i64;
_6 = _3;
_11.fld0 = core::ptr::addr_of!(_11.fld1);
RET = [4082822123467444083_usize,2_usize,12219964815320147392_usize,8819781055099397296_usize,13259240382671166109_usize,1751682949506710442_usize,7_usize,1_usize];
_2 = _3 >= _3;
_2 = !_3;
_1 = (_5,);
_11.fld0 = core::ptr::addr_of!(_11.fld1);
_11.fld0 = core::ptr::addr_of!(_11.fld1);
Goto(bb4)
}
bb4 = {
_1.0 = _4;
_2 = !_6;
_11.fld7 = RET;
_10 = 286368873828162480996514233889435753289_u128 - 37821950517963293543726554528579473282_u128;
_8 = 33135839164739859247242153455274497749_i128;
match _8 {
33135839164739859247242153455274497749 => bb6,
_ => bb5
}
}
bb5 = {
RET = [8850935916372732380_usize,4_usize,11441931700133650701_usize,2_usize,5_usize,0_usize,14391693269214746589_usize,5616571095537385044_usize];
_2 = _3;
_7 = [13953042374797350710_usize,3885122420205037684_usize];
_5 = _1.0;
_5 = [9070818358397490415_u64,7007869300687520926_u64,1364331761016232661_u64,15904950681868935457_u64];
RET = [2040963334728998876_usize,0_usize,6_usize,13598468233748960463_usize,1_usize,4852009280687746280_usize,16442889725628214264_usize,2_usize];
Call(_8 = fn15(RET, _6, RET, _4, _4, _3, _1.0), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
_11.fld2 = 10078_i16 as isize;
_4 = [5626067491691864229_u64,12114258617301882779_u64,4341788064760107359_u64,11660387124342206030_u64];
_14 = (-75_i8) as f32;
RET = [5_usize,13551183862391905642_usize,12114445650831348214_usize,12265549173233597178_usize,3_usize,0_usize,6_usize,13462081493702823354_usize];
_5 = _4;
_14 = _10 as f32;
_6 = _3 | _3;
_15 = Adt46 { fld0: _6,fld1: _1 };
RET = [0_usize,12642761900439000138_usize,4_usize,1_usize,4178063943349556517_usize,2830523592377484389_usize,2761796621183626841_usize,2997787351378037034_usize];
_6 = !_3;
_11.fld2 = -(-14_isize);
_11.fld2 = 19_isize + (-28_isize);
_4 = [181146803863940936_u64,10266659904028660993_u64,4846550539756487600_u64,11625956429222550275_u64];
RET = [2_usize,15357047145124453274_usize,6_usize,15413856452860850829_usize,7_usize,2005046835136977223_usize,6_usize,16412694437086759578_usize];
RET = _11.fld7;
_10 = !187087778783053567900608296171045661634_u128;
_16 = _14;
_11.fld5 = core::ptr::addr_of!(_5);
_7 = [7_usize,11045561866173339971_usize];
_11.fld7 = [1_usize,1_usize,6_usize,6114616145337406077_usize,4_usize,3_usize,15549189266342396368_usize,7_usize];
_8 = (-119210242299548013157055975934449793986_i128);
_2 = !_15.fld0;
_15.fld1 = _1;
_7 = [5_usize,4_usize];
_11.fld6 = 8078866294363559020_i64;
match _11.fld6 {
8078866294363559020 => bb7,
_ => bb5
}
}
bb7 = {
_15.fld1 = (_4,);
_13 = _11.fld2;
_11.fld0 = core::ptr::addr_of!(_11.fld1);
_1.0 = [7560666787846627663_u64,17960295180908158362_u64,8818838369381198482_u64,1649238724822048487_u64];
_13 = (-537782359_i32) as isize;
_11.fld6 = 655580646805679980_i64;
_10 = 44597454926371484741956571143919926259_u128;
_6 = _15.fld0;
_20 = 66_u8 as i32;
RET = _11.fld7;
_4 = [9022366818156226138_u64,17343026409533719520_u64,1447032637076736111_u64,5493523536740331547_u64];
_18 = '\u{7c229}';
_1 = (_5,);
_11.fld0 = core::ptr::addr_of!(_11.fld1);
_11.fld0 = core::ptr::addr_of!(_18);
_11.fld1 = _18;
_9 = [_11.fld6,_11.fld6,_11.fld6,_11.fld6];
match _8 {
0 => bb4,
1 => bb2,
2 => bb8,
3 => bb9,
4 => bb10,
221072124621390450306318631497318417470 => bb12,
_ => bb11
}
}
bb8 = {
_11.fld2 = 10078_i16 as isize;
_4 = [5626067491691864229_u64,12114258617301882779_u64,4341788064760107359_u64,11660387124342206030_u64];
_14 = (-75_i8) as f32;
RET = [5_usize,13551183862391905642_usize,12114445650831348214_usize,12265549173233597178_usize,3_usize,0_usize,6_usize,13462081493702823354_usize];
_5 = _4;
_14 = _10 as f32;
_6 = _3 | _3;
_15 = Adt46 { fld0: _6,fld1: _1 };
RET = [0_usize,12642761900439000138_usize,4_usize,1_usize,4178063943349556517_usize,2830523592377484389_usize,2761796621183626841_usize,2997787351378037034_usize];
_6 = !_3;
_11.fld2 = -(-14_isize);
_11.fld2 = 19_isize + (-28_isize);
_4 = [181146803863940936_u64,10266659904028660993_u64,4846550539756487600_u64,11625956429222550275_u64];
RET = [2_usize,15357047145124453274_usize,6_usize,15413856452860850829_usize,7_usize,2005046835136977223_usize,6_usize,16412694437086759578_usize];
RET = _11.fld7;
_10 = !187087778783053567900608296171045661634_u128;
_16 = _14;
_11.fld5 = core::ptr::addr_of!(_5);
_7 = [7_usize,11045561866173339971_usize];
_11.fld7 = [1_usize,1_usize,6_usize,6114616145337406077_usize,4_usize,3_usize,15549189266342396368_usize,7_usize];
_8 = (-119210242299548013157055975934449793986_i128);
_2 = !_15.fld0;
_15.fld1 = _1;
_7 = [5_usize,4_usize];
_11.fld6 = 8078866294363559020_i64;
match _11.fld6 {
8078866294363559020 => bb7,
_ => bb5
}
}
bb9 = {
RET = [8850935916372732380_usize,4_usize,11441931700133650701_usize,2_usize,5_usize,0_usize,14391693269214746589_usize,5616571095537385044_usize];
_2 = _3;
_7 = [13953042374797350710_usize,3885122420205037684_usize];
_5 = _1.0;
_5 = [9070818358397490415_u64,7007869300687520926_u64,1364331761016232661_u64,15904950681868935457_u64];
RET = [2040963334728998876_usize,0_usize,6_usize,13598468233748960463_usize,1_usize,4852009280687746280_usize,16442889725628214264_usize,2_usize];
Call(_8 = fn15(RET, _6, RET, _4, _4, _3, _1.0), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_1.0 = _4;
_2 = !_6;
_11.fld7 = RET;
_10 = 286368873828162480996514233889435753289_u128 - 37821950517963293543726554528579473282_u128;
_8 = 33135839164739859247242153455274497749_i128;
match _8 {
33135839164739859247242153455274497749 => bb6,
_ => bb5
}
}
bb11 = {
_1 = (_4,);
_1.0 = [2879914846115663819_u64,4236759019941106443_u64,13968308985367155138_u64,2969978553770772517_u64];
_3 = _2;
_3 = _6 ^ _2;
_7 = [11490542112982971741_usize,3386374162707417653_usize];
_8 = -(-163519455392506855013599368714521030252_i128);
Goto(bb3)
}
bb12 = {
_15.fld1 = (_5,);
_8 = (-85888584314471772289674204484143349502_i128);
_17 = 17954_i16 as u32;
_2 = _15.fld0;
_2 = !_15.fld0;
_11.fld1 = _18;
_11.fld2 = _13;
_11.fld5 = core::ptr::addr_of!(_1.0);
_3 = !_2;
_1 = _15.fld1;
_16 = _20 as f32;
_1 = (_4,);
_14 = _16 - _16;
_21 = _17 as isize;
_11.fld6 = 2295428410874468295_i64;
_13 = _11.fld2;
_11.fld2 = _13;
_11.fld0 = core::ptr::addr_of!(_18);
_1.0 = [12939315943078608845_u64,14696408490026013680_u64,12360610309323137370_u64,2991721158708932794_u64];
_19 = _14;
RET = [0_usize,1487847728152780276_usize,2002041340173523271_usize,1_usize,4_usize,6_usize,8898853723324663593_usize,6_usize];
_10 = 189888383199242440125204422720083529061_u128;
_11.fld6 = 797487046109525971_i64 * 6091157194880932729_i64;
_15.fld0 = _3;
Goto(bb13)
}
bb13 = {
_16 = _13 as f32;
_17 = _11.fld6 as u32;
_2 = _3;
_11.fld2 = _13 + _21;
_5 = _15.fld1.0;
_15.fld1 = (_4,);
_13 = _11.fld2 << _11.fld6;
_2 = !_3;
_23 = _19 * _19;
_5 = [8965304282079233542_u64,425835698136040596_u64,1449566568663146169_u64,14531788368438012754_u64];
_26 = _11.fld6 as f64;
_11.fld5 = core::ptr::addr_of!(_15.fld1.0);
_9 = [_11.fld6,_11.fld6,_11.fld6,_11.fld6];
_24 = 8539934833301586580_u64 >> _17;
_6 = _2 & _15.fld0;
match _10 {
189888383199242440125204422720083529061 => bb14,
_ => bb8
}
}
bb14 = {
_23 = -_14;
_2 = _6;
_9 = [_11.fld6,_11.fld6,_11.fld6,_11.fld6];
_11.fld5 = core::ptr::addr_of!(_1.0);
_1.0 = [_24,_24,_24,_24];
RET = _11.fld7;
_21 = _13;
_15.fld1.0 = [_24,_24,_24,_24];
_27 = _6;
_3 = _2;
_11.fld2 = _21;
_10 = _18 as u128;
_25.0 = &_7;
_29 = !_10;
_10 = _29 << _11.fld2;
_13 = !_21;
_14 = _19;
_27 = _6;
_15.fld1.0 = [_24,_24,_24,_24];
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(14_usize, 4_usize, Move(_4), 5_usize, Move(_5), 3_usize, Move(_3), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(14_usize, 6_usize, Move(_6), 10_usize, Move(_10), 2_usize, Move(_2), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(14_usize, 17_usize, Move(_17), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [usize; 8],mut _2: bool,mut _3: [usize; 8],mut _4: [u64; 4],mut _5: [u64; 4],mut _6: bool,mut _7: [u64; 4]) -> i128 {
mir! {
type RET = i128;
let _8: u64;
let _9: ([u64; 4],);
let _10: i64;
let _11: *mut f64;
let _12: [i64; 4];
let _13: (i128, *const i128, &'static [usize; 2]);
let _14: f64;
let _15: ([u64; 4],);
let _16: Adt42;
let _17: [u64; 4];
let _18: Adt48;
let _19: f64;
let _20: [usize; 2];
let _21: f32;
let _22: ();
let _23: ();
{
RET = (-164418284160702327087836525510777664961_i128);
_6 = !_2;
_9.0 = [13810011018600659689_u64,17683427607139070030_u64,5706595039623403386_u64,15697367651604490382_u64];
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
175864082760236136375538081920990546495 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_8 = !718602491840951917_u64;
RET = !(-7345152029415106306807825496770861399_i128);
_10 = 85120584504032403_usize as i64;
_2 = !_6;
_2 = _6 < _6;
_7 = _5;
_9.0 = _4;
RET = (-92039570916104754098131681268237301660_i128);
_9.0 = [_8,_8,_8,_8];
RET = 4104747638528637220_usize as i128;
_5 = _4;
_7 = [_8,_8,_8,_8];
_9.0 = [_8,_8,_8,_8];
_9.0 = _4;
Goto(bb8)
}
bb8 = {
_1 = [4_usize,4162518240585290266_usize,0_usize,1_usize,2_usize,14340735468609452129_usize,4_usize,2_usize];
_3 = [15638621293272244301_usize,1372190949739298101_usize,14381916443476267636_usize,10139551582283839447_usize,9883663938045712541_usize,5214094543945044020_usize,17584122658262388982_usize,13598827169184775161_usize];
_9.0 = [_8,_8,_8,_8];
_10 = 152_u8 as i64;
RET = (-12777207182933485576577930147373207788_i128);
RET = 76_u8 as i128;
_10 = (-1678482662_i32) as i64;
_12 = [_10,_10,_10,_10];
_12 = [_10,_10,_10,_10];
RET = 85783599826027735796584965952442690841_i128;
_9.0 = [_8,_8,_8,_8];
_5 = [_8,_8,_8,_8];
_12 = [_10,_10,_10,_10];
_10 = 24269_u16 as i64;
_8 = (-9223372036854775808_isize) as u64;
_13.1 = core::ptr::addr_of!(_13.0);
_8 = !11635416897931186557_u64;
_2 = _6 | _6;
match RET {
0 => bb3,
85783599826027735796584965952442690841 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_13.0 = RET << _10;
RET = !_13.0;
_2 = _6;
_9.0 = _4;
RET = _13.0;
_9.0 = [_8,_8,_8,_8];
_13.0 = !RET;
RET = _13.0;
_5 = _4;
_14 = (-3959_i16) as f64;
Goto(bb11)
}
bb11 = {
_7 = [_8,_8,_8,_8];
_13.1 = core::ptr::addr_of!(_13.0);
_10 = (-6648485949769134378_i64);
_11 = core::ptr::addr_of_mut!(_14);
_12 = [_10,_10,_10,_10];
_2 = !_6;
_17 = [_8,_8,_8,_8];
_1 = [6_usize,16982377741058162916_usize,7_usize,13426817988766719380_usize,2_usize,6762468414008744417_usize,1470032043712880953_usize,7_usize];
_6 = !_2;
_3 = [8779296026551674347_usize,18166861508520303465_usize,5_usize,12597019935739673012_usize,2_usize,1_usize,14148825188086451738_usize,1_usize];
_17 = [_8,_8,_8,_8];
match _10 {
0 => bb8,
1 => bb7,
2 => bb12,
3 => bb13,
4 => bb14,
340282366920938463456726121481999077078 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_8 = !718602491840951917_u64;
RET = !(-7345152029415106306807825496770861399_i128);
_10 = 85120584504032403_usize as i64;
_2 = !_6;
_2 = _6 < _6;
_7 = _5;
_9.0 = _4;
RET = (-92039570916104754098131681268237301660_i128);
_9.0 = [_8,_8,_8,_8];
RET = 4104747638528637220_usize as i128;
_5 = _4;
_7 = [_8,_8,_8,_8];
_9.0 = [_8,_8,_8,_8];
_9.0 = _4;
Goto(bb8)
}
bb16 = {
_17 = [_8,_8,_8,_8];
_15.0 = [_8,_8,_8,_8];
Goto(bb17)
}
bb17 = {
Call(_22 = dump_var(15_usize, 12_usize, Move(_12), 5_usize, Move(_5), 15_usize, Move(_15), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_22 = dump_var(15_usize, 10_usize, Move(_10), 17_usize, Move(_17), 23_usize, _23, 23_usize, _23), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [u8; 5],mut _2: [u64; 4],mut _3: bool,mut _4: [u8; 5],mut _5: [u64; 4]) -> bool {
mir! {
type RET = bool;
let _6: u8;
let _7: Adt46;
let _8: [u64; 4];
let _9: i64;
let _10: i128;
let _11: bool;
let _12: f64;
let _13: ();
let _14: ();
{
RET = !_3;
_4 = [153_u8,38_u8,101_u8,69_u8,182_u8];
_5 = [2386073897527941911_u64,6495678748223408531_u64,8051361277831024202_u64,9597009891066970985_u64];
_5 = [4703002282984279961_u64,3672256818056685318_u64,16733992551596523602_u64,2053566395099189384_u64];
_6 = 245_u8;
_3 = RET < RET;
_5 = [4306540896238387129_u64,1840950533570141141_u64,16775750341997255438_u64,7912682058693827572_u64];
_7.fld0 = _3;
RET = _3 <= _7.fld0;
_7.fld1.0 = [16366290161125372996_u64,17127318581508004275_u64,8220954457369315962_u64,2133574837298647844_u64];
_4 = [_6,_6,_6,_6,_6];
_4 = [_6,_6,_6,_6,_6];
_1 = _4;
_9 = RET as i64;
_4 = _1;
RET = !_3;
_10 = (-105329698316254849117154193277331557471_i128);
_6 = RET as u8;
_8 = [7469257802544696183_u64,17052022496821741171_u64,1982493917609545661_u64,5698687686188758372_u64];
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(16_usize, 3_usize, Move(_3), 4_usize, Move(_4), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [u64; 4],mut _2: ([u64; 4],),mut _3: [i64; 4],mut _4: [u64; 4],mut _5: ([u64; 4],),mut _6: *const ([u64; 4],),mut _7: [u64; 4],mut _8: bool,mut _9: bool,mut _10: ([u64; 4],),mut _11: [usize; 8],mut _12: bool) -> f32 {
mir! {
type RET = f32;
let _13: [u64; 4];
let _14: [usize; 2];
let _15: (i128, *const i128, &'static [usize; 2]);
let _16: usize;
let _17: i32;
let _18: ([u64; 4],);
let _19: isize;
let _20: char;
let _21: [u64; 4];
let _22: i16;
let _23: [u64; 4];
let _24: isize;
let _25: u128;
let _26: u16;
let _27: i16;
let _28: (&'static [usize; 2],);
let _29: isize;
let _30: Adt49;
let _31: ();
let _32: ();
{
_2 = (_5.0,);
_13 = _4;
RET = 1908005377_u32 as f32;
_11 = [8832936370158766223_usize,4_usize,5_usize,3_usize,7_usize,5471072034476739564_usize,9455381974719059373_usize,0_usize];
_5 = _2;
_7 = [12484402790033391916_u64,9687410598556546723_u64,4783229393000245011_u64,16053140597462718185_u64];
_3 = [5974452537939557585_i64,7795490897017093883_i64,(-1264546838095186505_i64),7107319809259828672_i64];
_7 = [15935784915763549879_u64,2236653157309018877_u64,3140526754683356266_u64,13516929411346101140_u64];
_2 = (_13,);
_7 = _2.0;
_13 = _7;
_14 = [6243398656668048491_usize,17925312344804556303_usize];
_5 = _2;
_15.1 = core::ptr::addr_of!(_15.0);
_5.0 = [17689785252142346071_u64,2845583075829364115_u64,14228519059885927716_u64,11376162624472298112_u64];
_10.0 = [3319958307908312124_u64,8459938126899544600_u64,177926965203420010_u64,2468023035654885594_u64];
_1 = [1870980172014004102_u64,492078781383995842_u64,5530331804771317650_u64,9227362501050263827_u64];
_10 = (_4,);
_10 = (_4,);
Goto(bb1)
}
bb1 = {
RET = 13153573027767415501_u64 as f32;
_3 = [(-2848225672586798617_i64),(-3340111682815177248_i64),5645467391108320533_i64,8174125270753596986_i64];
_10.0 = [12989347230468331692_u64,8298677376293510198_u64,8533742503644471570_u64,12255406045694709621_u64];
_16 = !6_usize;
_9 = _8;
_1 = [9357503255689116776_u64,2844435030668264994_u64,800185323487286081_u64,11759445250178304022_u64];
_14 = [_16,_16];
_8 = !_12;
_15.0 = 51004715864882652579768905227765205654_i128;
_13 = [15570592143848432739_u64,3864821912483776582_u64,9961009084223621224_u64,15362483704217056457_u64];
_10 = (_2.0,);
_17 = 8996_u16 as i32;
_15.0 = !3411652339786941598963131166267895155_i128;
_18 = (_7,);
_12 = _9;
_15.2 = &_14;
_5 = _2;
_9 = _8;
_14 = [_16,_16];
_16 = 1_usize;
_5.0[_16] = 2713479625_u32 as u64;
_17 = (-49_i8) as i32;
_4 = [_7[_16],_2.0[_16],_10.0[_16],_18.0[_16]];
_16 = !_11[_16];
_17 = !184224804_i32;
Goto(bb2)
}
bb2 = {
_12 = _9 > _9;
_17 = !(-250271842_i32);
_13 = [13953033107449096664_u64,3868773540276621200_u64,10736485491862828936_u64,11979109776691345728_u64];
RET = 330664517586538901101544608086753924874_u128 as f32;
_10 = _5;
_15.2 = &_14;
Goto(bb3)
}
bb3 = {
_7 = _10.0;
RET = _15.0 as f32;
_18 = (_1,);
_16 = 809923844_u32 as usize;
_3 = [1456103246851250844_i64,3218577534500156753_i64,(-2152618590573033424_i64),5565686831404167916_i64];
_11 = [_16,_16,_16,_16,_16,_16,_16,_16];
_12 = _8;
_18 = _10;
_9 = _8;
_7 = [17465792679463663420_u64,711587507722875307_u64,7491216994775599186_u64,11406149447383928499_u64];
_9 = !_12;
_20 = '\u{50e24}';
_15.2 = &_14;
_15.1 = core::ptr::addr_of!(_15.0);
_13 = [1453963336266457340_u64,17275610476143418240_u64,16071691239058735458_u64,7592155119519919977_u64];
_10 = (_4,);
RET = 9223372036854775807_isize as f32;
_19 = 57_i8 as isize;
Goto(bb4)
}
bb4 = {
_7 = [14291747494375243898_u64,10388606544901898831_u64,13393302888181380455_u64,14419683854988335489_u64];
RET = (-58_i8) as f32;
_2 = (_4,);
_22 = !17427_i16;
_1 = [8903559921542325278_u64,4301806625437719933_u64,3236034440683000278_u64,11541989907982848769_u64];
_10 = (_1,);
Goto(bb5)
}
bb5 = {
_10.0 = [16108439057985618790_u64,14508590444674527757_u64,3734328721639526187_u64,1514261976723551301_u64];
RET = _15.0 as f32;
_2 = _5;
_10 = _2;
_12 = !_8;
_8 = !_9;
_23 = [396880318620582055_u64,16995682463781039355_u64,4787448736092427290_u64,11695186533100043089_u64];
_19 = _17 as isize;
RET = 17050251733020408773_u64 as f32;
_19 = -9223372036854775807_isize;
_23 = _1;
_24 = -_19;
_4 = _23;
_21 = [10838982345442188352_u64,11977017112733086399_u64,9295955421913815405_u64,2872394978788786295_u64];
_24 = _19;
_24 = _19 | _19;
_4 = [17631281570819533365_u64,17404032488506033280_u64,11420862413392504954_u64,7222733809096135012_u64];
_5.0 = [16240868703155997270_u64,840648981521973208_u64,2768972010176650453_u64,3924905004201103965_u64];
_13 = [5204642552748884407_u64,7241123155413840980_u64,5360190183275737513_u64,17202278923181982268_u64];
Goto(bb6)
}
bb6 = {
_18.0 = [7232626552584099964_u64,240032494956802798_u64,8907504508750163932_u64,4835661322821141603_u64];
_15.1 = core::ptr::addr_of!(_15.0);
_25 = 244743808106778947332099396338893774424_u128;
RET = 9649_u16 as f32;
_18 = (_1,);
_3 = [(-8859721644123507526_i64),3504487726299601689_i64,(-7329464923857749143_i64),7434347657329120935_i64];
_4 = [17384641171740671251_u64,14827384684021117558_u64,2046806282494823986_u64,14415864472344878462_u64];
_15.2 = &_14;
_5 = (_2.0,);
_5 = _2;
_10 = (_18.0,);
_6 = core::ptr::addr_of!(_2);
_10 = (_18.0,);
match _25 {
0 => bb5,
1 => bb4,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
244743808106778947332099396338893774424 => bb13,
_ => bb12
}
}
bb7 = {
_10.0 = [16108439057985618790_u64,14508590444674527757_u64,3734328721639526187_u64,1514261976723551301_u64];
RET = _15.0 as f32;
_2 = _5;
_10 = _2;
_12 = !_8;
_8 = !_9;
_23 = [396880318620582055_u64,16995682463781039355_u64,4787448736092427290_u64,11695186533100043089_u64];
_19 = _17 as isize;
RET = 17050251733020408773_u64 as f32;
_19 = -9223372036854775807_isize;
_23 = _1;
_24 = -_19;
_4 = _23;
_21 = [10838982345442188352_u64,11977017112733086399_u64,9295955421913815405_u64,2872394978788786295_u64];
_24 = _19;
_24 = _19 | _19;
_4 = [17631281570819533365_u64,17404032488506033280_u64,11420862413392504954_u64,7222733809096135012_u64];
_5.0 = [16240868703155997270_u64,840648981521973208_u64,2768972010176650453_u64,3924905004201103965_u64];
_13 = [5204642552748884407_u64,7241123155413840980_u64,5360190183275737513_u64,17202278923181982268_u64];
Goto(bb6)
}
bb8 = {
_7 = [14291747494375243898_u64,10388606544901898831_u64,13393302888181380455_u64,14419683854988335489_u64];
RET = (-58_i8) as f32;
_2 = (_4,);
_22 = !17427_i16;
_1 = [8903559921542325278_u64,4301806625437719933_u64,3236034440683000278_u64,11541989907982848769_u64];
_10 = (_1,);
Goto(bb5)
}
bb9 = {
_7 = _10.0;
RET = _15.0 as f32;
_18 = (_1,);
_16 = 809923844_u32 as usize;
_3 = [1456103246851250844_i64,3218577534500156753_i64,(-2152618590573033424_i64),5565686831404167916_i64];
_11 = [_16,_16,_16,_16,_16,_16,_16,_16];
_12 = _8;
_18 = _10;
_9 = _8;
_7 = [17465792679463663420_u64,711587507722875307_u64,7491216994775599186_u64,11406149447383928499_u64];
_9 = !_12;
_20 = '\u{50e24}';
_15.2 = &_14;
_15.1 = core::ptr::addr_of!(_15.0);
_13 = [1453963336266457340_u64,17275610476143418240_u64,16071691239058735458_u64,7592155119519919977_u64];
_10 = (_4,);
RET = 9223372036854775807_isize as f32;
_19 = 57_i8 as isize;
Goto(bb4)
}
bb10 = {
_12 = _9 > _9;
_17 = !(-250271842_i32);
_13 = [13953033107449096664_u64,3868773540276621200_u64,10736485491862828936_u64,11979109776691345728_u64];
RET = 330664517586538901101544608086753924874_u128 as f32;
_10 = _5;
_15.2 = &_14;
Goto(bb3)
}
bb11 = {
RET = 13153573027767415501_u64 as f32;
_3 = [(-2848225672586798617_i64),(-3340111682815177248_i64),5645467391108320533_i64,8174125270753596986_i64];
_10.0 = [12989347230468331692_u64,8298677376293510198_u64,8533742503644471570_u64,12255406045694709621_u64];
_16 = !6_usize;
_9 = _8;
_1 = [9357503255689116776_u64,2844435030668264994_u64,800185323487286081_u64,11759445250178304022_u64];
_14 = [_16,_16];
_8 = !_12;
_15.0 = 51004715864882652579768905227765205654_i128;
_13 = [15570592143848432739_u64,3864821912483776582_u64,9961009084223621224_u64,15362483704217056457_u64];
_10 = (_2.0,);
_17 = 8996_u16 as i32;
_15.0 = !3411652339786941598963131166267895155_i128;
_18 = (_7,);
_12 = _9;
_15.2 = &_14;
_5 = _2;
_9 = _8;
_14 = [_16,_16];
_16 = 1_usize;
_5.0[_16] = 2713479625_u32 as u64;
_17 = (-49_i8) as i32;
_4 = [_7[_16],_2.0[_16],_10.0[_16],_18.0[_16]];
_16 = !_11[_16];
_17 = !184224804_i32;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_5 = (_18.0,);
_11 = [_16,_16,_16,_16,_16,_16,_16,_16];
_23 = [6830787419507174935_u64,4879058538368801650_u64,9487224227708470711_u64,14212197595922016538_u64];
_3 = [(-7296625092880868048_i64),5018041710881874766_i64,2770859609591099804_i64,2221336642078489937_i64];
_21 = [5697750983176437944_u64,13862668895839587319_u64,2590371237976091696_u64,16528362159523374026_u64];
_5.0 = [12456149180484950352_u64,13458225937330664248_u64,4805408822965259516_u64,15287809172631502202_u64];
_9 = _12 <= _12;
_18 = (*_6);
_6 = core::ptr::addr_of!((*_6));
_10 = _2;
_6 = core::ptr::addr_of!(_5);
_4 = [9693228603209732030_u64,2679170330002941896_u64,16996993512772139006_u64,14814156263695824428_u64];
match _25 {
0 => bb6,
1 => bb2,
2 => bb5,
3 => bb4,
4 => bb14,
5 => bb15,
6 => bb16,
244743808106778947332099396338893774424 => bb18,
_ => bb17
}
}
bb14 = {
_7 = _10.0;
RET = _15.0 as f32;
_18 = (_1,);
_16 = 809923844_u32 as usize;
_3 = [1456103246851250844_i64,3218577534500156753_i64,(-2152618590573033424_i64),5565686831404167916_i64];
_11 = [_16,_16,_16,_16,_16,_16,_16,_16];
_12 = _8;
_18 = _10;
_9 = _8;
_7 = [17465792679463663420_u64,711587507722875307_u64,7491216994775599186_u64,11406149447383928499_u64];
_9 = !_12;
_20 = '\u{50e24}';
_15.2 = &_14;
_15.1 = core::ptr::addr_of!(_15.0);
_13 = [1453963336266457340_u64,17275610476143418240_u64,16071691239058735458_u64,7592155119519919977_u64];
_10 = (_4,);
RET = 9223372036854775807_isize as f32;
_19 = 57_i8 as isize;
Goto(bb4)
}
bb15 = {
RET = 13153573027767415501_u64 as f32;
_3 = [(-2848225672586798617_i64),(-3340111682815177248_i64),5645467391108320533_i64,8174125270753596986_i64];
_10.0 = [12989347230468331692_u64,8298677376293510198_u64,8533742503644471570_u64,12255406045694709621_u64];
_16 = !6_usize;
_9 = _8;
_1 = [9357503255689116776_u64,2844435030668264994_u64,800185323487286081_u64,11759445250178304022_u64];
_14 = [_16,_16];
_8 = !_12;
_15.0 = 51004715864882652579768905227765205654_i128;
_13 = [15570592143848432739_u64,3864821912483776582_u64,9961009084223621224_u64,15362483704217056457_u64];
_10 = (_2.0,);
_17 = 8996_u16 as i32;
_15.0 = !3411652339786941598963131166267895155_i128;
_18 = (_7,);
_12 = _9;
_15.2 = &_14;
_5 = _2;
_9 = _8;
_14 = [_16,_16];
_16 = 1_usize;
_5.0[_16] = 2713479625_u32 as u64;
_17 = (-49_i8) as i32;
_4 = [_7[_16],_2.0[_16],_10.0[_16],_18.0[_16]];
_16 = !_11[_16];
_17 = !184224804_i32;
Goto(bb2)
}
bb16 = {
RET = 13153573027767415501_u64 as f32;
_3 = [(-2848225672586798617_i64),(-3340111682815177248_i64),5645467391108320533_i64,8174125270753596986_i64];
_10.0 = [12989347230468331692_u64,8298677376293510198_u64,8533742503644471570_u64,12255406045694709621_u64];
_16 = !6_usize;
_9 = _8;
_1 = [9357503255689116776_u64,2844435030668264994_u64,800185323487286081_u64,11759445250178304022_u64];
_14 = [_16,_16];
_8 = !_12;
_15.0 = 51004715864882652579768905227765205654_i128;
_13 = [15570592143848432739_u64,3864821912483776582_u64,9961009084223621224_u64,15362483704217056457_u64];
_10 = (_2.0,);
_17 = 8996_u16 as i32;
_15.0 = !3411652339786941598963131166267895155_i128;
_18 = (_7,);
_12 = _9;
_15.2 = &_14;
_5 = _2;
_9 = _8;
_14 = [_16,_16];
_16 = 1_usize;
_5.0[_16] = 2713479625_u32 as u64;
_17 = (-49_i8) as i32;
_4 = [_7[_16],_2.0[_16],_10.0[_16],_18.0[_16]];
_16 = !_11[_16];
_17 = !184224804_i32;
Goto(bb2)
}
bb17 = {
_7 = _10.0;
RET = _15.0 as f32;
_18 = (_1,);
_16 = 809923844_u32 as usize;
_3 = [1456103246851250844_i64,3218577534500156753_i64,(-2152618590573033424_i64),5565686831404167916_i64];
_11 = [_16,_16,_16,_16,_16,_16,_16,_16];
_12 = _8;
_18 = _10;
_9 = _8;
_7 = [17465792679463663420_u64,711587507722875307_u64,7491216994775599186_u64,11406149447383928499_u64];
_9 = !_12;
_20 = '\u{50e24}';
_15.2 = &_14;
_15.1 = core::ptr::addr_of!(_15.0);
_13 = [1453963336266457340_u64,17275610476143418240_u64,16071691239058735458_u64,7592155119519919977_u64];
_10 = (_4,);
RET = 9223372036854775807_isize as f32;
_19 = 57_i8 as isize;
Goto(bb4)
}
bb18 = {
_7 = [8247338563234433690_u64,9400737310800453468_u64,17849977346365133381_u64,3287639294339053782_u64];
_15.2 = &_14;
_26 = 30220_u16;
_15.0 = -(-124236588498055598415816585679196620222_i128);
_10 = _5;
_28.0 = &_14;
_19 = !_24;
_22 = _26 as i16;
_2 = (*_6);
_5.0 = [2770067790104096080_u64,6948044555144615226_u64,7719825275983220321_u64,14243558306489168003_u64];
_15.1 = core::ptr::addr_of!(_15.0);
_27 = _22;
_15.0 = !(-50991877802142119012998128665894677860_i128);
_3 = [(-5583611281847821667_i64),5100761340487245316_i64,(-7494300161230098848_i64),(-1966134583166798348_i64)];
_5 = (_21,);
_8 = !_9;
Goto(bb19)
}
bb19 = {
Call(_31 = dump_var(17_usize, 27_usize, Move(_27), 12_usize, Move(_12), 25_usize, Move(_25), 1_usize, Move(_1)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_31 = dump_var(17_usize, 17_usize, Move(_17), 24_usize, Move(_24), 22_usize, Move(_22), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_31 = dump_var(17_usize, 26_usize, Move(_26), 7_usize, Move(_7), 2_usize, Move(_2), 19_usize, Move(_19)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [isize; 2],mut _2: [isize; 2],mut _3: ([u64; 4],),mut _4: f32,mut _5: i16,mut _6: [isize; 2],mut _7: [i32; 7],mut _8: [u64; 4],mut _9: usize,mut _10: [isize; 8],mut _11: [u64; 4]) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _12: u8;
let _13: *const char;
let _14: char;
let _15: [isize; 2];
let _16: usize;
let _17: [isize; 2];
let _18: Adt43;
let _19: u32;
let _20: [isize; 2];
let _21: isize;
let _22: bool;
let _23: Adt45;
let _24: char;
let _25: i16;
let _26: isize;
let _27: [u64; 4];
let _28: [u8; 5];
let _29: ();
let _30: ();
{
_3 = (_8,);
_1 = _6;
_11 = [8620210774063929351_u64,18229008628260109130_u64,13602297791850195971_u64,1299219014319513397_u64];
RET = [1611363060933891806_u64,14784197547262582558_u64,5512916040484599596_u64,14692234032160323900_u64];
_11 = [7311327401687818654_u64,7056876766632770707_u64,15911680523217906393_u64,1808664227050381843_u64];
_6 = [(-65_isize),9223372036854775807_isize];
_9 = 10597228461859003308_usize;
match _9 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
10597228461859003308 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_9 = !4_usize;
_8 = [8554694541885050563_u64,87061321180268776_u64,8908862026985745703_u64,12585999747235289147_u64];
_7 = [1162360866_i32,1152473198_i32,(-1079622027_i32),1021969666_i32,1116872562_i32,971518419_i32,(-1643913481_i32)];
_9 = 4_usize;
_10[_9] = 5049922626303773359_i64 as isize;
_8 = RET;
_6 = [_10[_9],_10[_9]];
_12 = 116_u8;
_12 = 39_u8 >> _7[_9];
_12 = 75_u8;
_10 = [(-9223372036854775808_isize),100_isize,9223372036854775807_isize,(-9223372036854775808_isize),97_isize,(-30_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_2 = [_10[_9],_10[_9]];
_13 = core::ptr::addr_of!(_14);
_3 = (RET,);
_10[_9] = (-40_isize);
_16 = 24354821198663679880573558725109217438_u128 as usize;
_10 = [(-9223372036854775808_isize),(-49_isize),89_isize,9223372036854775807_isize,(-121_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_3.0 = _11;
_7 = [(-1853057539_i32),(-245502862_i32),1690710159_i32,1375124415_i32,360944622_i32,460935308_i32,(-781886982_i32)];
_5 = 15764400599919380460_u64 as i16;
Call(_10[_9] = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_16 = _9;
_14 = '\u{14965}';
_4 = 35901205397424433837962677718759938584_i128 as f32;
_5 = 30623_i16 - 6073_i16;
_3.0 = _11;
_12 = 3855058315_u32 as u8;
_3.0 = RET;
_15 = [_10[_9],_10[_9]];
_7[_9] = _5 as i32;
_1 = _15;
_14 = '\u{c5791}';
_19 = !2235786080_u32;
_12 = 252_u8 + 132_u8;
_10[_9] = 59_isize | 26_isize;
_2 = _15;
_12 = _16 as u8;
Goto(bb11)
}
bb11 = {
_8 = [11284416477458226208_u64,2937664823984591602_u64,1243428316530181565_u64,1287255964156992972_u64];
_20 = [_10[_9],_10[_9]];
match _16 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb12,
5 => bb14,
4 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET = [10301921908760131386_u64,11139271735448933156_u64,5879955426553052280_u64,14526262891111623941_u64];
_20 = [_10[_9],_10[_9]];
_19 = _10[_9] as u32;
_8 = _3.0;
_23.fld0 = 108265309250602341850286885950104478737_i128;
_16 = _9 >> _19;
_23.fld0 = (-31581813993744216903561380996134806665_i128) | (-133498409353982663800740691862993716628_i128);
_16 = !_9;
_23.fld3 = [_16,_16,_16,_9,_16,_9,_16,_16];
_20 = [_10[_9],_10[_9]];
_23.fld4 = _5;
_25 = _23.fld4;
_23.fld5 = [8720441808777767263_u64,1373966468463752351_u64,13027096502324865477_u64,16626646367583261008_u64];
_26 = -_10[_9];
_10[_9] = _14 as isize;
_5 = -_23.fld4;
_2 = [_26,_26];
_17 = [_10[_9],_26];
_6 = [_26,_26];
_21 = (-101_i8) as isize;
Goto(bb17)
}
bb17 = {
Call(_29 = dump_var(18_usize, 16_usize, Move(_16), 5_usize, Move(_5), 19_usize, Move(_19), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(18_usize, 7_usize, Move(_7), 12_usize, Move(_12), 1_usize, Move(_1), 20_usize, Move(_20)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_29 = dump_var(18_usize, 3_usize, Move(_3), 26_usize, Move(_26), 30_usize, _30, 30_usize, _30), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(20712_u16), std::hint::black_box(67377185783541247702072804538914492681_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt39 {
Variant0{
fld0: i32,
fld1: u128,
fld2: i128,

},
Variant1{
fld0: [u64; 4],
fld1: u32,
fld2: u8,
fld3: *const [u64; 4],

}}
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: bool,
fld1: i64,
fld2: ([u64; 4],),
fld3: f64,

},
Variant1{
fld0: usize,
fld1: [u8; 5],

},
Variant2{
fld0: ([u64; 4],),
fld1: *mut f32,

},
Variant3{
fld0: f64,

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: *mut char,
fld1: [usize; 8],
fld2: i64,

},
Variant1{
fld0: [usize; 2],
fld1: Adt39,
fld2: *const char,
fld3: [i32; 7],

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: [i32; 7],
fld1: [isize; 8],

},
Variant1{
fld0: u32,

},
Variant2{
fld0: *mut f64,
fld1: [usize; 8],
fld2: [i32; 7],
fld3: Adt41,
fld4: f64,
fld5: [i64; 4],

},
Variant3{
fld0: *const char,
fld1: i32,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: Adt41,
fld1: *const [u64; 4],
fld2: [isize; 8],
fld3: [isize; 2],
fld4: [usize; 8],
fld5: i32,
fld6: Adt42,
fld7: Adt40,

},
Variant1{
fld0: [u8; 5],
fld1: char,
fld2: *const ([u64; 4],),
fld3: i64,
fld4: u32,
fld5: *const [u64; 4],

},
Variant2{
fld0: [i32; 7],
fld1: [usize; 8],
fld2: u32,
fld3: *mut f32,
fld4: u8,

},
Variant3{
fld0: bool,
fld1: [u8; 5],
fld2: *mut f32,
fld3: [i64; 4],
fld4: Adt42,
fld5: *const [u64; 4],
fld6: i64,
fld7: u64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: Adt43,
fld1: ([u64; 4],),

},
Variant1{
fld0: ([u64; 4],),
fld1: Adt43,

},
Variant2{
fld0: i16,

},
Variant3{
fld0: [usize; 2],
fld1: f64,
fld2: [u64; 4],

}}
#[derive(Debug)]
pub struct Adt45 {
fld0: i128,
fld1: char,
fld2: *const char,
fld3: [usize; 8],
fld4: i16,
fld5: [u64; 4],
fld6: Adt40,
}
#[derive(Debug)]
pub struct Adt46 {
fld0: bool,
fld1: ([u64; 4],),
}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: *const char,

},
Variant1{
fld0: *const [u64; 4],
fld1: char,
fld2: isize,
fld3: Adt46,
fld4: *mut f32,
fld5: usize,

},
Variant2{
fld0: ([u64; 4],),
fld1: u8,
fld2: Adt44,
fld3: Adt46,
fld4: i16,
fld5: [isize; 2],
fld6: i64,

}}
#[derive(Debug)]
pub struct Adt48 {
fld0: *const char,
fld1: char,
fld2: isize,
fld3: Adt40,
fld4: *mut f64,
fld5: *const [u64; 4],
fld6: i64,
fld7: [usize; 8],
}
#[derive(Debug)]
pub struct Adt49 {
fld0: Adt41,
fld1: Adt48,
fld2: *const ([u64; 4],),
fld3: Adt42,
fld4: u16,
fld5: i64,
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: u8,
fld1: f64,
fld2: u32,
fld3: ([u64; 4],),
fld4: *const [u64; 4],
fld5: [isize; 2],

},
Variant1{
fld0: [usize; 2],
fld1: Adt44,
fld2: Adt39,
fld3: f64,
fld4: *mut char,
fld5: Adt48,
fld6: u8,

}}
#[derive(Debug)]
pub struct Adt51 {
fld0: *const ([u64; 4],),
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt43,
fld1: f64,
fld2: i64,
fld3: *const char,
fld4: Adt42,

},
Variant1{
fld0: Adt40,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: [i64; 4],
fld1: ([u64; 4],),
fld2: u8,
fld3: Adt44,

},
Variant1{
fld0: i64,
fld1: Adt51,
fld2: [usize; 2],
fld3: ([u64; 4],),
fld4: [u8; 5],
fld5: [usize; 8],

},
Variant2{
fld0: *const char,
fld1: u16,
fld2: Adt49,
fld3: u32,
fld4: *mut char,
fld5: [u8; 5],
fld6: [usize; 2],
fld7: Adt50,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [isize; 2],
fld1: [u64; 4],
fld2: Adt43,
fld3: Adt39,
fld4: Adt52,

},
Variant1{
fld0: [i32; 7],
fld1: u32,
fld2: Adt48,
fld3: *mut f64,
fld4: u128,

},
Variant2{
fld0: bool,
fld1: [i64; 4],
fld2: i128,
fld3: Adt47,
fld4: i16,
fld5: Adt52,
fld6: u32,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: [i32; 7],
fld1: Adt53,
fld2: *const ([u64; 4],),

},
Variant1{
fld0: [i32; 7],
fld1: *const i128,
fld2: [usize; 2],

},
Variant2{
fld0: i128,
fld1: f64,
fld2: Adt54,
fld3: Adt43,

}}

