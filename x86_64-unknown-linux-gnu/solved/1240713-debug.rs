#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> Adt52 {
mir! {
type RET = Adt52;
let _15: Adt48;
let _16: [u8; 4];
let _17: [u8; 4];
let _18: Adt44;
let _19: [bool; 7];
let _20: [char; 4];
let _21: f64;
let _22: [u8; 7];
let _23: isize;
let _24: ([u32; 6], usize, ([u32; 6],), i8);
let _25: bool;
let _26: char;
let _27: *const i64;
let _28: u64;
let _29: char;
let _30: [u16; 5];
let _31: u128;
let _32: (bool, *mut u16);
let _33: ([u8; 4], *const i64, [u32; 6], (u64, i32, *mut i32, u32, u16, *const i128));
let _34: Adt44;
let _35: isize;
let _36: (bool, *mut u16);
let _37: Adt53;
let _38: Adt44;
let _39: f64;
let _40: *const i128;
let _41: Adt52;
let _42: u32;
let _43: ();
let _44: ();
{
_13 = 9360227891543434397_u64;
RET.fld5 = 3603256536_u32 as u8;
_10 = 76_i8 as u8;
RET.fld2 = 3798931390097263059_i64 as u64;
_5 = 37357185445820852816866949032920647995_u128 as i16;
_3 = 3429303536_u32 as isize;
Goto(bb1)
}
bb1 = {
_14 = !17302602265502799678511079896920959962_u128;
RET.fld7 = core::ptr::addr_of!(_7);
_8 = !4944410710538807158435823084074577007_i128;
_8 = _5 as i128;
_12 = RET.fld5 as u32;
RET.fld1.0 = [_12,_12,_12,_12,_12,_12];
_2 = '\u{a562b}';
RET.fld6 = 1490934314_i32 as f32;
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
RET.fld2 = !_13;
RET.fld3 = (-121_i8) as usize;
_13 = RET.fld2;
Call(_8 = fn1(RET.fld7, RET.fld0.1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET.fld0.0 = !true;
RET.fld4 = [_10,_10,RET.fld5,_10,_10,_10,RET.fld5];
_9 = RET.fld3 ^ RET.fld3;
Goto(bb3)
}
bb3 = {
RET.fld6 = _9 as f32;
RET.fld2 = _3 as u64;
RET.fld1.0 = [_12,_12,_12,_12,_12,_12];
RET.fld3 = _9;
_17 = [RET.fld5,RET.fld5,RET.fld5,RET.fld5];
RET.fld3 = _8 as usize;
_6 = _2 as i32;
_13 = RET.fld2;
RET.fld4 = [RET.fld5,RET.fld5,_10,RET.fld5,_10,RET.fld5,RET.fld5];
_4 = 35_i8 & (-50_i8);
RET.fld3 = _9;
_9 = RET.fld3;
_11 = _3 as u16;
_21 = RET.fld5 as f64;
RET.fld2 = RET.fld6 as u64;
RET.fld4 = [RET.fld5,_10,RET.fld5,_10,_10,_10,_10];
Call(_16 = core::intrinsics::transmute(_6), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = _8 as i64;
RET.fld6 = RET.fld3 as f32;
RET.fld0.0 = false | true;
Goto(bb5)
}
bb5 = {
RET.fld0.0 = false;
_9 = !RET.fld3;
RET.fld6 = _4 as f32;
RET.fld5 = _3 as u8;
_9 = !RET.fld3;
RET.fld5 = _10 | _10;
_2 = '\u{52817}';
_3 = _11 as isize;
_7 = (-5462831338927312707_i64);
RET.fld1.0 = [_12,_12,_12,_12,_12,_12];
RET.fld5 = _3 as u8;
_24.3 = !_4;
RET.fld6 = _6 as f32;
_11 = 25218_u16 << _24.3;
_24.1 = RET.fld3 ^ RET.fld3;
_24.2 = (RET.fld1.0,);
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
_24.0 = [_12,_12,_12,_12,_12,_12];
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
_22 = [_10,_10,_10,RET.fld5,_10,RET.fld5,RET.fld5];
RET.fld7 = core::ptr::addr_of!(_7);
_21 = _14 as f64;
Goto(bb6)
}
bb6 = {
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
Goto(bb7)
}
bb7 = {
_29 = _2;
RET.fld6 = _21 as f32;
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
_1 = _24.3 >= _4;
_16 = [_10,RET.fld5,_10,RET.fld5];
RET.fld1.0 = [_12,_12,_12,_12,_12,_12];
RET.fld7 = core::ptr::addr_of!(_7);
RET.fld1 = _24.2;
_6 = _12 as i32;
_24.2.0 = RET.fld1.0;
RET.fld0.0 = _11 > _11;
_27 = RET.fld7;
RET.fld1 = (_24.2.0,);
RET.fld5 = _14 as u8;
_28 = _24.1 as u64;
RET.fld6 = _24.3 as f32;
_19 = [RET.fld0.0,_1,_1,_1,RET.fld0.0,_1,_1];
_25 = RET.fld0.0;
_30 = [_11,_11,_11,_11,_11];
RET.fld1 = (_24.0,);
_24 = (RET.fld1.0, RET.fld3, RET.fld1, _4);
match _7 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
340282366920938463457911776092840898749 => bb9,
_ => bb8
}
}
bb8 = {
_14 = !17302602265502799678511079896920959962_u128;
RET.fld7 = core::ptr::addr_of!(_7);
_8 = !4944410710538807158435823084074577007_i128;
_8 = _5 as i128;
_12 = RET.fld5 as u32;
RET.fld1.0 = [_12,_12,_12,_12,_12,_12];
_2 = '\u{a562b}';
RET.fld6 = 1490934314_i32 as f32;
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
RET.fld2 = !_13;
RET.fld3 = (-121_i8) as usize;
_13 = RET.fld2;
Call(_8 = fn1(RET.fld7, RET.fld0.1, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_24 = (RET.fld1.0, RET.fld3, RET.fld1, _4);
_2 = _29;
_22 = [_10,_10,RET.fld5,_10,_10,_10,RET.fld5];
_31 = _24.3 as u128;
_23 = _3 + _3;
_3 = !_23;
_30 = [_11,_11,_11,_11,_11];
RET.fld0.1 = core::ptr::addr_of_mut!(_33.3.4);
_33.3.0 = RET.fld2 & RET.fld2;
RET.fld0.1 = core::ptr::addr_of_mut!(_33.3.4);
RET.fld1 = (_24.0,);
_33.0 = [_10,_10,RET.fld5,_10];
_33.3.5 = core::ptr::addr_of!(_8);
_4 = !_24.3;
_33.2 = _24.2.0;
Goto(bb10)
}
bb10 = {
_32 = RET.fld0;
_33.0 = _17;
_13 = !_28;
RET.fld5 = !_10;
_7 = (-2342389017669877670_i64);
RET.fld6 = _7 as f32;
_10 = !RET.fld5;
_24.1 = RET.fld3;
_33.2 = [_12,_12,_12,_12,_12,_12];
RET.fld6 = _8 as f32;
_19 = [_25,RET.fld0.0,_25,_32.0,RET.fld0.0,_32.0,_25];
_13 = _28 << _3;
_17 = _33.0;
_1 = RET.fld0.0;
_3 = _21 as isize;
_3 = _23 * _23;
RET.fld0.1 = core::ptr::addr_of_mut!(_33.3.4);
_12 = !2616420626_u32;
_10 = RET.fld5;
RET.fld3 = _8 as usize;
_35 = _3;
RET.fld1 = (_24.2.0,);
_24.2 = RET.fld1;
_33.3.4 = !_11;
_33.3.2 = core::ptr::addr_of_mut!(_6);
RET.fld0.0 = _13 < _33.3.0;
Goto(bb11)
}
bb11 = {
_36.0 = _25 == RET.fld0.0;
_36 = RET.fld0;
_25 = _1;
_28 = _24.1 as u64;
_10 = _2 as u8;
_36.1 = RET.fld0.1;
_5 = (-6189_i16);
_33.2 = RET.fld1.0;
_28 = !_13;
RET.fld3 = _24.1;
_26 = _29;
Goto(bb12)
}
bb12 = {
_4 = _24.3;
_7 = (-2537628828629354546_i64) | 7293015160475026829_i64;
RET.fld7 = _27;
RET.fld7 = core::ptr::addr_of!(_7);
_36.0 = !_25;
_25 = _1;
_35 = _3;
_39 = _12 as f64;
_24.2.0 = [_12,_12,_12,_12,_12,_12];
_41.fld7 = core::ptr::addr_of!(_7);
_33.3.1 = _12 as i32;
_41.fld0.0 = !_25;
_33.1 = RET.fld7;
RET.fld0.1 = _36.1;
match _5 {
0 => bb1,
1 => bb6,
2 => bb10,
340282366920938463463374607431768205267 => bb14,
_ => bb13
}
}
bb13 = {
_29 = _2;
RET.fld6 = _21 as f32;
RET.fld0.1 = core::ptr::addr_of_mut!(_11);
_1 = _24.3 >= _4;
_16 = [_10,RET.fld5,_10,RET.fld5];
RET.fld1.0 = [_12,_12,_12,_12,_12,_12];
RET.fld7 = core::ptr::addr_of!(_7);
RET.fld1 = _24.2;
_6 = _12 as i32;
_24.2.0 = RET.fld1.0;
RET.fld0.0 = _11 > _11;
_27 = RET.fld7;
RET.fld1 = (_24.2.0,);
RET.fld5 = _14 as u8;
_28 = _24.1 as u64;
RET.fld6 = _24.3 as f32;
_19 = [RET.fld0.0,_1,_1,_1,RET.fld0.0,_1,_1];
_25 = RET.fld0.0;
_30 = [_11,_11,_11,_11,_11];
RET.fld1 = (_24.0,);
_24 = (RET.fld1.0, RET.fld3, RET.fld1, _4);
match _7 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
340282366920938463457911776092840898749 => bb9,
_ => bb8
}
}
bb14 = {
_29 = _2;
_41.fld6 = RET.fld6 * RET.fld6;
_42 = !_12;
RET.fld2 = _33.3.0 | _13;
_42 = !_12;
RET.fld1.0 = _24.0;
_26 = _29;
_41.fld4 = [RET.fld5,_10,RET.fld5,RET.fld5,RET.fld5,RET.fld5,_10];
_35 = !_3;
RET.fld0.0 = _25 >= _1;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(0_usize, 4_usize, Move(_4), 35_usize, Move(_35), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(0_usize, 10_usize, Move(_10), 28_usize, Move(_28), 17_usize, Move(_17), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(0_usize, 31_usize, Move(_31), 12_usize, Move(_12), 7_usize, Move(_7), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_43 = dump_var(0_usize, 1_usize, Move(_1), 29_usize, Move(_29), 44_usize, _44, 44_usize, _44), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: *const i64,mut _2: *mut u16,mut _3: isize) -> i128 {
mir! {
type RET = i128;
let _4: ([u32; 6],);
let _5: char;
let _6: *mut f64;
let _7: Adt43;
let _8: Adt50;
let _9: Adt43;
let _10: u32;
let _11: f64;
let _12: u64;
let _13: i32;
let _14: [bool; 7];
let _15: Adt43;
let _16: bool;
let _17: [u16; 5];
let _18: [u8; 4];
let _19: u8;
let _20: Adt49;
let _21: char;
let _22: Adt47;
let _23: char;
let _24: ();
let _25: ();
{
RET = (-165547073577635888791685787163340126076_i128) >> _3;
RET = 58290433899086842095215959331882318987_i128 & 48666899829429676338116035222340690112_i128;
_3 = 3059709969248932181_i64 as isize;
_5 = '\u{484b3}';
_4.0 = [1321185033_u32,2672156910_u32,4197685971_u32,632901944_u32,491003814_u32,4128523881_u32];
RET = !167968133935407933140897721111539357445_i128;
_3 = 9223372036854775807_isize;
_4.0 = [1416662841_u32,728746929_u32,3704115663_u32,3263769823_u32,2210928550_u32,3637719819_u32];
RET = -(-151804391340569052879436732989664685264_i128);
_3 = (-20_isize) | (-85_isize);
RET = 152973631697677766259106047957748668063_i128 >> _3;
_4.0 = [203952576_u32,3438060888_u32,764316124_u32,1303472464_u32,2062201079_u32,2897451938_u32];
RET = 347_u16 as i128;
_4.0 = [1312161406_u32,242577907_u32,3473354900_u32,3557066109_u32,242772681_u32,4251149900_u32];
Call(_4 = fn2(_1, _5, _5, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = '\u{fba1}';
_4.0 = [4107479743_u32,851954706_u32,2615484207_u32,3655006818_u32,1373640616_u32,2765903430_u32];
_5 = '\u{109a15}';
_4.0 = [3629110341_u32,250052162_u32,547011374_u32,500532163_u32,1675361212_u32,490677634_u32];
Goto(bb2)
}
bb2 = {
RET = 87476542245293438649587497622911695627_i128;
_5 = '\u{d777}';
RET = (-35602489068198579273061230579919851794_i128) ^ 132109682810764490473372092111740419579_i128;
_3 = -(-108_isize);
_3 = (-6_isize);
_4.0 = [4138915608_u32,1345405820_u32,2150020639_u32,1283640927_u32,740985266_u32,376208184_u32];
_5 = '\u{a1651}';
_5 = '\u{44360}';
RET = !(-93997526515196060859267965094811140912_i128);
RET = (-114133824067499050842104741885517878283_i128) & 80812975854047470415549546308523356075_i128;
_4.0 = [3436280566_u32,2696709382_u32,4046101007_u32,271707376_u32,1476688110_u32,1034893713_u32];
_3 = false as isize;
_5 = '\u{8d0f1}';
RET = _5 as i128;
_3 = 292964623_i32 as isize;
_3 = 9223372036854775807_isize | 9223372036854775807_isize;
_4.0 = [3436073568_u32,201246246_u32,3841276403_u32,2806034993_u32,3825832669_u32,734846789_u32];
_4.0 = [3590512033_u32,4038363099_u32,1073313155_u32,397124800_u32,1255305055_u32,3178489521_u32];
_5 = '\u{c0c52}';
_4.0 = [98977683_u32,3725018550_u32,946184648_u32,1432328912_u32,671813342_u32,1250894410_u32];
_4.0 = [766108311_u32,2657295574_u32,3947174833_u32,1434261345_u32,431043625_u32,1234132529_u32];
_4.0 = [1782916935_u32,1378301696_u32,2567113675_u32,1822238803_u32,2333322451_u32,2019801487_u32];
_5 = '\u{bc679}';
_5 = '\u{4a5d2}';
Goto(bb3)
}
bb3 = {
_5 = '\u{c6c21}';
_4.0 = [4240224089_u32,1223765138_u32,3857134172_u32,3969082433_u32,3007014532_u32,2037701511_u32];
RET = !(-121966278298301149698922612322003535775_i128);
_3 = RET as isize;
RET = 77_u8 as i128;
RET = 30626046164118485980109746721687088259_i128;
RET = 69705348717911705990817022283626546638_i128 | (-50620337094323413609522735802603209558_i128);
RET = 80_u8 as i128;
RET = !(-117901915140176478950435544891625370400_i128);
_3 = RET as isize;
_4.0 = [4103934945_u32,1687382745_u32,297320431_u32,696237577_u32,496654487_u32,3576978913_u32];
_3 = (-9223372036854775808_isize);
_8 = Adt50::Variant1 { fld0: 16742928387233084517_u64 };
_8 = Adt50::Variant1 { fld0: 4264066522381877109_u64 };
_3 = 1364890773267868886_usize as isize;
RET = 14721705320737085591745991103276375036_i128 ^ 104294113084343364826699011078243207950_i128;
RET = -58163971172284518030775866220771634867_i128;
RET = -(-92613956917545214670020047152104452386_i128);
place!(Field::<u64>(Variant(_8, 1), 0)) = 98324435307236503396605745135298066204_u128 as u64;
_3 = 126880022099684132515501804300356734758_u128 as isize;
RET = 58518_u16 as i128;
_4.0 = [3978997057_u32,3062331871_u32,642914720_u32,183213042_u32,4257221439_u32,194629489_u32];
_5 = '\u{f277e}';
Goto(bb4)
}
bb4 = {
_4.0 = [89404876_u32,3193442096_u32,1625996774_u32,1606547957_u32,4061647787_u32,1951519751_u32];
_5 = '\u{bce4b}';
RET = (-152948689990799056626119649164479485825_i128);
place!(Field::<u64>(Variant(_8, 1), 0)) = 15342252692066055271_u64;
_8 = Adt50::Variant1 { fld0: 17842066502600994122_u64 };
_4.0 = [210824186_u32,2258357889_u32,2978307640_u32,1366144666_u32,1931025591_u32,1831674994_u32];
_5 = '\u{62ab8}';
_3 = (-9223372036854775808_isize) + 9223372036854775807_isize;
RET = 98248793577601185610075978836330999471_i128;
_4.0 = [3929395775_u32,924310862_u32,3464699863_u32,3829626170_u32,1837462989_u32,397521172_u32];
RET = (-156444512774645302482325095975260281539_i128) - (-33666570609520626956128617588923561972_i128);
_5 = '\u{54006}';
RET = -(-138668045892692261688447875199737214982_i128);
_5 = '\u{10bd73}';
place!(Field::<u64>(Variant(_8, 1), 0)) = 724595852772907278_u64;
_4.0 = [10610721_u32,2003648972_u32,3781293497_u32,3712483311_u32,3517452055_u32,3728332022_u32];
match Field::<u64>(Variant(_8, 1), 0) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
724595852772907278 => bb8,
_ => bb7
}
}
bb5 = {
_5 = '\u{c6c21}';
_4.0 = [4240224089_u32,1223765138_u32,3857134172_u32,3969082433_u32,3007014532_u32,2037701511_u32];
RET = !(-121966278298301149698922612322003535775_i128);
_3 = RET as isize;
RET = 77_u8 as i128;
RET = 30626046164118485980109746721687088259_i128;
RET = 69705348717911705990817022283626546638_i128 | (-50620337094323413609522735802603209558_i128);
RET = 80_u8 as i128;
RET = !(-117901915140176478950435544891625370400_i128);
_3 = RET as isize;
_4.0 = [4103934945_u32,1687382745_u32,297320431_u32,696237577_u32,496654487_u32,3576978913_u32];
_3 = (-9223372036854775808_isize);
_8 = Adt50::Variant1 { fld0: 16742928387233084517_u64 };
_8 = Adt50::Variant1 { fld0: 4264066522381877109_u64 };
_3 = 1364890773267868886_usize as isize;
RET = 14721705320737085591745991103276375036_i128 ^ 104294113084343364826699011078243207950_i128;
RET = -58163971172284518030775866220771634867_i128;
RET = -(-92613956917545214670020047152104452386_i128);
place!(Field::<u64>(Variant(_8, 1), 0)) = 98324435307236503396605745135298066204_u128 as u64;
_3 = 126880022099684132515501804300356734758_u128 as isize;
RET = 58518_u16 as i128;
_4.0 = [3978997057_u32,3062331871_u32,642914720_u32,183213042_u32,4257221439_u32,194629489_u32];
_5 = '\u{f277e}';
Goto(bb4)
}
bb6 = {
RET = 87476542245293438649587497622911695627_i128;
_5 = '\u{d777}';
RET = (-35602489068198579273061230579919851794_i128) ^ 132109682810764490473372092111740419579_i128;
_3 = -(-108_isize);
_3 = (-6_isize);
_4.0 = [4138915608_u32,1345405820_u32,2150020639_u32,1283640927_u32,740985266_u32,376208184_u32];
_5 = '\u{a1651}';
_5 = '\u{44360}';
RET = !(-93997526515196060859267965094811140912_i128);
RET = (-114133824067499050842104741885517878283_i128) & 80812975854047470415549546308523356075_i128;
_4.0 = [3436280566_u32,2696709382_u32,4046101007_u32,271707376_u32,1476688110_u32,1034893713_u32];
_3 = false as isize;
_5 = '\u{8d0f1}';
RET = _5 as i128;
_3 = 292964623_i32 as isize;
_3 = 9223372036854775807_isize | 9223372036854775807_isize;
_4.0 = [3436073568_u32,201246246_u32,3841276403_u32,2806034993_u32,3825832669_u32,734846789_u32];
_4.0 = [3590512033_u32,4038363099_u32,1073313155_u32,397124800_u32,1255305055_u32,3178489521_u32];
_5 = '\u{c0c52}';
_4.0 = [98977683_u32,3725018550_u32,946184648_u32,1432328912_u32,671813342_u32,1250894410_u32];
_4.0 = [766108311_u32,2657295574_u32,3947174833_u32,1434261345_u32,431043625_u32,1234132529_u32];
_4.0 = [1782916935_u32,1378301696_u32,2567113675_u32,1822238803_u32,2333322451_u32,2019801487_u32];
_5 = '\u{bc679}';
_5 = '\u{4a5d2}';
Goto(bb3)
}
bb7 = {
_5 = '\u{fba1}';
_4.0 = [4107479743_u32,851954706_u32,2615484207_u32,3655006818_u32,1373640616_u32,2765903430_u32];
_5 = '\u{109a15}';
_4.0 = [3629110341_u32,250052162_u32,547011374_u32,500532163_u32,1675361212_u32,490677634_u32];
Goto(bb2)
}
bb8 = {
_5 = '\u{48dfd}';
_10 = _5 as u32;
_4.0 = [_10,_10,_10,_10,_10,_10];
SetDiscriminant(_8, 0);
place!(Field::<[i64; 6]>(Variant(_8, 0), 0)) = [(-4420323769322331275_i64),(-3383998508359696541_i64),5417833824636173947_i64,4503617618818041107_i64,483986306734958464_i64,2252489926866723281_i64];
RET = (-6918_i16) as i128;
RET = 23801164772735660443584959531840288637_i128;
_10 = !2121643880_u32;
_11 = 39820472158556231163926776022558397261_u128 as f64;
Goto(bb9)
}
bb9 = {
_6 = core::ptr::addr_of_mut!(_11);
_13 = !256057445_i32;
_12 = 5379886758228985019_u64 >> _10;
place!(Field::<Adt43>(Variant(_8, 0), 1)) = Adt43::Variant1 { fld0: 7644979815049394866_usize,fld1: _11 };
_7 = Adt43::Variant1 { fld0: 3_usize,fld1: Field::<f64>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 1), 1) };
_14 = [false,false,true,true,true,false,false];
place!(Field::<usize>(Variant(_7, 1), 0)) = 5_i8 as usize;
match RET {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb10,
23801164772735660443584959531840288637 => bb12,
_ => bb11
}
}
bb10 = {
_5 = '\u{c6c21}';
_4.0 = [4240224089_u32,1223765138_u32,3857134172_u32,3969082433_u32,3007014532_u32,2037701511_u32];
RET = !(-121966278298301149698922612322003535775_i128);
_3 = RET as isize;
RET = 77_u8 as i128;
RET = 30626046164118485980109746721687088259_i128;
RET = 69705348717911705990817022283626546638_i128 | (-50620337094323413609522735802603209558_i128);
RET = 80_u8 as i128;
RET = !(-117901915140176478950435544891625370400_i128);
_3 = RET as isize;
_4.0 = [4103934945_u32,1687382745_u32,297320431_u32,696237577_u32,496654487_u32,3576978913_u32];
_3 = (-9223372036854775808_isize);
_8 = Adt50::Variant1 { fld0: 16742928387233084517_u64 };
_8 = Adt50::Variant1 { fld0: 4264066522381877109_u64 };
_3 = 1364890773267868886_usize as isize;
RET = 14721705320737085591745991103276375036_i128 ^ 104294113084343364826699011078243207950_i128;
RET = -58163971172284518030775866220771634867_i128;
RET = -(-92613956917545214670020047152104452386_i128);
place!(Field::<u64>(Variant(_8, 1), 0)) = 98324435307236503396605745135298066204_u128 as u64;
_3 = 126880022099684132515501804300356734758_u128 as isize;
RET = 58518_u16 as i128;
_4.0 = [3978997057_u32,3062331871_u32,642914720_u32,183213042_u32,4257221439_u32,194629489_u32];
_5 = '\u{f277e}';
Goto(bb4)
}
bb11 = {
RET = 87476542245293438649587497622911695627_i128;
_5 = '\u{d777}';
RET = (-35602489068198579273061230579919851794_i128) ^ 132109682810764490473372092111740419579_i128;
_3 = -(-108_isize);
_3 = (-6_isize);
_4.0 = [4138915608_u32,1345405820_u32,2150020639_u32,1283640927_u32,740985266_u32,376208184_u32];
_5 = '\u{a1651}';
_5 = '\u{44360}';
RET = !(-93997526515196060859267965094811140912_i128);
RET = (-114133824067499050842104741885517878283_i128) & 80812975854047470415549546308523356075_i128;
_4.0 = [3436280566_u32,2696709382_u32,4046101007_u32,271707376_u32,1476688110_u32,1034893713_u32];
_3 = false as isize;
_5 = '\u{8d0f1}';
RET = _5 as i128;
_3 = 292964623_i32 as isize;
_3 = 9223372036854775807_isize | 9223372036854775807_isize;
_4.0 = [3436073568_u32,201246246_u32,3841276403_u32,2806034993_u32,3825832669_u32,734846789_u32];
_4.0 = [3590512033_u32,4038363099_u32,1073313155_u32,397124800_u32,1255305055_u32,3178489521_u32];
_5 = '\u{c0c52}';
_4.0 = [98977683_u32,3725018550_u32,946184648_u32,1432328912_u32,671813342_u32,1250894410_u32];
_4.0 = [766108311_u32,2657295574_u32,3947174833_u32,1434261345_u32,431043625_u32,1234132529_u32];
_4.0 = [1782916935_u32,1378301696_u32,2567113675_u32,1822238803_u32,2333322451_u32,2019801487_u32];
_5 = '\u{bc679}';
_5 = '\u{4a5d2}';
Goto(bb3)
}
bb12 = {
_5 = '\u{62710}';
SetDiscriminant(_7, 1);
place!(Field::<Adt43>(Variant(_8, 0), 1)) = Adt43::Variant1 { fld0: 16085300173045657602_usize,fld1: (*_6) };
_16 = !false;
RET = !(-21227747810610049026106769932245308922_i128);
_15 = Adt43::Variant1 { fld0: 11855826353639918833_usize,fld1: _11 };
_5 = '\u{1a4fd}';
_9 = Adt43::Variant1 { fld0: 1705932209164155026_usize,fld1: _11 };
_15 = Adt43::Variant1 { fld0: 7_usize,fld1: (*_6) };
place!(Field::<usize>(Variant(place!(Field::<Adt43>(Variant(_8, 0), 1)), 1), 0)) = !5577249825918121175_usize;
_18 = [209_u8,8_u8,152_u8,135_u8];
_18 = [66_u8,137_u8,67_u8,149_u8];
place!(Field::<f64>(Variant(_15, 1), 1)) = -_11;
place!(Field::<f64>(Variant(_7, 1), 1)) = Field::<f64>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 1), 1);
_17 = [61222_u16,28353_u16,41826_u16,60971_u16,61578_u16];
_9 = Adt43::Variant1 { fld0: Field::<usize>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 1), 0),fld1: Field::<f64>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 1), 1) };
_15 = Adt43::Variant1 { fld0: Field::<usize>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 1), 0),fld1: Field::<f64>(Variant(_9, 1), 1) };
_17 = [2146_u16,48194_u16,1318_u16,44179_u16,22339_u16];
SetDiscriminant(_15, 0);
_19 = 169_u8 ^ 145_u8;
_15 = Adt43::Variant0 { fld0: _16,fld1: _14,fld2: _3 };
SetDiscriminant(Field::<Adt43>(Variant(_8, 0), 1), 0);
_9 = Adt43::Variant0 { fld0: _16,fld1: _14,fld2: Field::<isize>(Variant(_15, 0), 2) };
place!(Field::<[bool; 7]>(Variant(place!(Field::<Adt43>(Variant(_8, 0), 1)), 0), 1)) = [_16,Field::<bool>(Variant(_15, 0), 0),_16,_16,_16,_16,Field::<bool>(Variant(_9, 0), 0)];
place!(Field::<usize>(Variant(_7, 1), 0)) = !0_usize;
place!(Field::<[i64; 6]>(Variant(_8, 0), 0)) = [1621666454607575182_i64,(-5833867656631010681_i64),4357230325265473322_i64,7717920181595302551_i64,6312816062377001746_i64,(-8862925972573879021_i64)];
place!(Field::<bool>(Variant(place!(Field::<Adt43>(Variant(_8, 0), 1)), 0), 0)) = !_16;
Goto(bb13)
}
bb13 = {
_17 = [34802_u16,57982_u16,3236_u16,11665_u16,5670_u16];
_20.fld5 = [394113841428905471_i64,8681736848941463458_i64,(-1404644908231846644_i64),(-6030746079713006474_i64),(-7982114195785786951_i64),(-5093048167180222274_i64)];
Goto(bb14)
}
bb14 = {
_20.fld4 = [_10,_10,_10,_10,_10,_10];
_20.fld5 = [161053247258888428_i64,(-2591112091628311620_i64),635298316808610277_i64,(-271952770766962058_i64),(-8193977607635409846_i64),5954198570851932740_i64];
place!(Field::<[bool; 7]>(Variant(_15, 0), 1)) = [Field::<bool>(Variant(_9, 0), 0),Field::<bool>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 0), 0),Field::<bool>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 0), 0),Field::<bool>(Variant(_15, 0), 0),Field::<bool>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 0), 0),Field::<bool>(Variant(_9, 0), 0),Field::<bool>(Variant(_9, 0), 0)];
_20.fld2 = [Field::<bool>(Variant(_15, 0), 0),_16,_16,_16,Field::<bool>(Variant(Field::<Adt43>(Variant(_8, 0), 1), 0), 0),Field::<bool>(Variant(_9, 0), 0),Field::<bool>(Variant(_15, 0), 0)];
_20 = Adt49 { fld0: RET,fld1: _2,fld2: _14,fld3: _17,fld4: _4.0,fld5: Field::<[i64; 6]>(Variant(_8, 0), 0) };
_9 = Adt43::Variant1 { fld0: Field::<usize>(Variant(_7, 1), 0),fld1: _11 };
place!(Field::<f64>(Variant(_7, 1), 1)) = (-19934_i16) as f64;
_19 = 163_u8 * 84_u8;
_3 = -Field::<isize>(Variant(_15, 0), 2);
RET = -_20.fld0;
place!(Field::<Adt43>(Variant(_8, 0), 1)) = Adt43::Variant1 { fld0: Field::<usize>(Variant(_9, 1), 0),fld1: Field::<f64>(Variant(_9, 1), 1) };
_20 = Adt49 { fld0: RET,fld1: _2,fld2: _14,fld3: _17,fld4: _4.0,fld5: Field::<[i64; 6]>(Variant(_8, 0), 0) };
_20.fld3 = [16270_u16,22958_u16,20134_u16,11028_u16,56371_u16];
_9 = Adt43::Variant0 { fld0: Field::<bool>(Variant(_15, 0), 0),fld1: _20.fld2,fld2: _3 };
_17 = _20.fld3;
_15 = Adt43::Variant0 { fld0: _16,fld1: _14,fld2: _3 };
place!(Field::<[i64; 6]>(Variant(_8, 0), 0)) = [5594984982091648761_i64,(-940146268774153965_i64),(-6725674122319861154_i64),(-1086629363917231551_i64),2291042291594656009_i64,3864078452674110309_i64];
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(1_usize, 18_usize, Move(_18), 13_usize, Move(_13), 10_usize, Move(_10), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(1_usize, 14_usize, Move(_14), 25_usize, _25, 25_usize, _25, 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: *const i64,mut _2: char,mut _3: char,mut _4: *mut u16) -> ([u32; 6],) {
mir! {
type RET = ([u32; 6],);
let _5: [u8; 4];
let _6: [u16; 5];
let _7: i16;
let _8: i32;
let _9: f64;
let _10: [u16; 5];
let _11: f64;
let _12: i128;
let _13: [char; 4];
let _14: [char; 4];
let _15: isize;
let _16: bool;
let _17: Adt52;
let _18: ([u32; 6], usize, ([u32; 6],), i8);
let _19: [bool; 7];
let _20: isize;
let _21: [u8; 4];
let _22: bool;
let _23: *mut f64;
let _24: usize;
let _25: isize;
let _26: ([u32; 6],);
let _27: (*mut u16, usize);
let _28: *mut usize;
let _29: ([u32; 6], usize, ([u32; 6],), i8);
let _30: bool;
let _31: i64;
let _32: char;
let _33: f32;
let _34: u128;
let _35: u128;
let _36: [bool; 7];
let _37: [u8; 4];
let _38: isize;
let _39: f64;
let _40: bool;
let _41: bool;
let _42: isize;
let _43: ();
let _44: ();
{
RET.0 = [269982744_u32,445080418_u32,325905911_u32,1161949549_u32,2872721098_u32,536170438_u32];
_3 = _2;
_2 = _3;
_3 = _2;
_5 = [23_u8,30_u8,124_u8,249_u8];
RET.0 = [971928171_u32,1400009637_u32,2829420192_u32,3024216058_u32,1289697882_u32,2925455796_u32];
_3 = _2;
RET.0 = [3979691927_u32,2724796526_u32,1947046005_u32,3365928759_u32,3997474859_u32,3854872102_u32];
RET.0 = [2442511045_u32,3325645912_u32,3623566853_u32,2713505687_u32,1042277770_u32,1982087469_u32];
RET.0 = [3564748653_u32,2910751475_u32,3056210709_u32,3134134200_u32,2103684201_u32,3059142238_u32];
_5 = [156_u8,139_u8,169_u8,62_u8];
_6 = [32490_u16,33870_u16,51182_u16,62674_u16,7385_u16];
_3 = _2;
_5 = [127_u8,236_u8,196_u8,181_u8];
_3 = _2;
_3 = _2;
_7 = 30636_i16 >> 6575911743786429456_i64;
RET.0 = [1954456476_u32,2420643228_u32,1094695594_u32,3504436355_u32,815122659_u32,2889385953_u32];
RET.0 = [2627704845_u32,1442761614_u32,2813319962_u32,3719136999_u32,1139419821_u32,4150008785_u32];
Goto(bb1)
}
bb1 = {
_2 = _3;
RET.0 = [2205802138_u32,3902966638_u32,2990838544_u32,2268123091_u32,689474553_u32,2125517728_u32];
_8 = -(-913053568_i32);
_6 = [40632_u16,42796_u16,22534_u16,36547_u16,3957_u16];
RET.0 = [3281892790_u32,1711547980_u32,2205861900_u32,3920716813_u32,2702416081_u32,175662223_u32];
_2 = _3;
RET.0 = [708332798_u32,2182125083_u32,1108127768_u32,2729741882_u32,3958281563_u32,1893817553_u32];
_7 = (-9090_i16);
_5 = [185_u8,194_u8,185_u8,1_u8];
_9 = 9223372036854775807_isize as f64;
_3 = _2;
_3 = _2;
_8 = 1975229063_i32 * (-125709663_i32);
RET.0 = [2228049961_u32,1806449566_u32,1169145722_u32,4254243794_u32,1303813954_u32,3260598754_u32];
_9 = (-9223372036854775808_isize) as f64;
_3 = _2;
_7 = 106470930341878197779334125568981093560_i128 as i16;
RET.0 = [333763091_u32,1254809873_u32,2275881897_u32,2248889920_u32,1145048017_u32,3031248109_u32];
_7 = -(-22263_i16);
_3 = _2;
_3 = _2;
_7 = !27639_i16;
Goto(bb2)
}
bb2 = {
RET.0 = [737201312_u32,215983615_u32,3187033448_u32,2119402995_u32,2630002889_u32,3068468685_u32];
_5 = [192_u8,124_u8,51_u8,170_u8];
_2 = _3;
_7 = 20072_i16;
_9 = 16740244028105248037_usize as f64;
_7 = (-24390_i16);
_7 = 2633723767935645179_u64 as i16;
_10 = [27147_u16,46945_u16,15116_u16,49318_u16,12_u16];
_11 = _9;
RET.0 = [3891078876_u32,124626981_u32,2817627892_u32,3918219692_u32,1174833512_u32,2430019535_u32];
_5 = [2_u8,46_u8,29_u8,24_u8];
_6 = _10;
_2 = _3;
_5 = [4_u8,167_u8,66_u8,165_u8];
_10 = [9079_u16,19833_u16,11976_u16,64379_u16,57879_u16];
Call(_8 = fn3(_11, _1, _6, _5, _3, _11, _2, _6, _4, _4, _1, _10, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET.0 = [4205987881_u32,2208759094_u32,3628265309_u32,3300782253_u32,3948936339_u32,2120084784_u32];
_7 = (-7136766838787770233_i64) as i16;
Goto(bb4)
}
bb4 = {
_5 = [208_u8,22_u8,79_u8,34_u8];
RET.0 = [860115100_u32,214915263_u32,87180733_u32,2894225112_u32,3690799804_u32,1151282427_u32];
RET.0 = [761950024_u32,714264381_u32,1099327615_u32,1478356981_u32,57320256_u32,2162482496_u32];
_6 = [29635_u16,50964_u16,9577_u16,33867_u16,56908_u16];
_11 = _9 - _9;
_12 = 42570388291497117987374998037649573778_i128;
_10 = _6;
_13 = [_3,_2,_2,_2];
RET.0 = [2295898544_u32,1312336378_u32,3472984713_u32,3768191727_u32,2119809267_u32,20041346_u32];
_14 = _13;
_8 = 1157647757_i32;
_9 = _11;
_5 = [231_u8,236_u8,213_u8,37_u8];
RET.0 = [3277217771_u32,637490464_u32,2647799244_u32,1734679337_u32,2794356412_u32,3897317540_u32];
_6 = [19713_u16,61736_u16,60226_u16,37610_u16,61116_u16];
_6 = [37468_u16,913_u16,36215_u16,25726_u16,6332_u16];
_13 = [_2,_3,_2,_2];
_13 = _14;
_11 = -_9;
_10 = [2274_u16,64129_u16,47316_u16,64214_u16,2725_u16];
_13 = [_3,_3,_2,_3];
_13 = [_3,_2,_3,_3];
RET.0 = [1584438378_u32,4263505786_u32,1366162959_u32,108312156_u32,4151607279_u32,1288893859_u32];
Goto(bb5)
}
bb5 = {
_13 = [_3,_2,_2,_3];
_18.2 = RET;
_17.fld5 = !57_u8;
RET.0 = [3472205973_u32,3639525840_u32,3313452835_u32,3697418875_u32,3300397740_u32,4207511721_u32];
_14 = [_3,_3,_2,_2];
_19 = [true,false,true,true,false,false,true];
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_17.fld0 = (true, _4);
_15 = -(-9223372036854775808_isize);
_7 = (-7835_i16) + 27845_i16;
_2 = _3;
Goto(bb6)
}
bb6 = {
_18.0 = RET.0;
_16 = !_17.fld0.0;
_22 = _17.fld0.0 ^ _17.fld0.0;
_17.fld3 = 9404560649873001962_usize;
RET = _18.2;
RET.0 = [3097791734_u32,1532255145_u32,83480501_u32,947881002_u32,1632215377_u32,1404885420_u32];
_4 = _17.fld0.1;
_22 = _17.fld0.0 >= _17.fld0.0;
_17.fld5 = !144_u8;
_18 = (RET.0, _17.fld3, RET, (-43_i8));
_17.fld0.1 = _4;
_17.fld3 = _18.1 | _18.1;
_16 = !_17.fld0.0;
_25 = !_15;
_19 = [_22,_22,_22,_17.fld0.0,_17.fld0.0,_22,_22];
_27.0 = _17.fld0.1;
_27.0 = _17.fld0.1;
_18.3 = 92_i8;
_16 = _17.fld0.0;
Call(_17.fld6 = core::intrinsics::transmute(_5), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_17.fld0.1 = _4;
_17.fld5 = _17.fld3 as u8;
_18.2.0 = [1212624422_u32,2020329737_u32,3630866471_u32,2319788221_u32,809252619_u32,2629192606_u32];
_17.fld7 = _1;
_9 = _11 + _11;
RET = _18.2;
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_28 = core::ptr::addr_of_mut!(_17.fld3);
_26 = RET;
_18.1 = !(*_28);
_24 = !_18.1;
RET = (_18.2.0,);
_17.fld0 = (_16, _27.0);
_18.1 = _17.fld6 as usize;
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_17.fld1.0 = _26.0;
_9 = (*_28) as f64;
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_17.fld7 = _1;
_25 = _8 as isize;
_17.fld2 = !16432054624980761351_u64;
match _8 {
0 => bb1,
1 => bb8,
1157647757 => bb10,
_ => bb9
}
}
bb8 = {
RET.0 = [737201312_u32,215983615_u32,3187033448_u32,2119402995_u32,2630002889_u32,3068468685_u32];
_5 = [192_u8,124_u8,51_u8,170_u8];
_2 = _3;
_7 = 20072_i16;
_9 = 16740244028105248037_usize as f64;
_7 = (-24390_i16);
_7 = 2633723767935645179_u64 as i16;
_10 = [27147_u16,46945_u16,15116_u16,49318_u16,12_u16];
_11 = _9;
RET.0 = [3891078876_u32,124626981_u32,2817627892_u32,3918219692_u32,1174833512_u32,2430019535_u32];
_5 = [2_u8,46_u8,29_u8,24_u8];
_6 = _10;
_2 = _3;
_5 = [4_u8,167_u8,66_u8,165_u8];
_10 = [9079_u16,19833_u16,11976_u16,64379_u16,57879_u16];
Call(_8 = fn3(_11, _1, _6, _5, _3, _11, _2, _6, _4, _4, _1, _10, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_5 = [208_u8,22_u8,79_u8,34_u8];
RET.0 = [860115100_u32,214915263_u32,87180733_u32,2894225112_u32,3690799804_u32,1151282427_u32];
RET.0 = [761950024_u32,714264381_u32,1099327615_u32,1478356981_u32,57320256_u32,2162482496_u32];
_6 = [29635_u16,50964_u16,9577_u16,33867_u16,56908_u16];
_11 = _9 - _9;
_12 = 42570388291497117987374998037649573778_i128;
_10 = _6;
_13 = [_3,_2,_2,_2];
RET.0 = [2295898544_u32,1312336378_u32,3472984713_u32,3768191727_u32,2119809267_u32,20041346_u32];
_14 = _13;
_8 = 1157647757_i32;
_9 = _11;
_5 = [231_u8,236_u8,213_u8,37_u8];
RET.0 = [3277217771_u32,637490464_u32,2647799244_u32,1734679337_u32,2794356412_u32,3897317540_u32];
_6 = [19713_u16,61736_u16,60226_u16,37610_u16,61116_u16];
_6 = [37468_u16,913_u16,36215_u16,25726_u16,6332_u16];
_13 = [_2,_3,_2,_2];
_13 = _14;
_11 = -_9;
_10 = [2274_u16,64129_u16,47316_u16,64214_u16,2725_u16];
_13 = [_3,_3,_2,_3];
_13 = [_3,_2,_3,_3];
RET.0 = [1584438378_u32,4263505786_u32,1366162959_u32,108312156_u32,4151607279_u32,1288893859_u32];
Goto(bb5)
}
bb10 = {
_29.3 = _18.3;
_14 = [_3,_2,_3,_3];
RET = _26;
_2 = _3;
_26.0 = [2154972231_u32,1012982109_u32,3508942945_u32,670976766_u32,3454867061_u32,3302147965_u32];
_18.0 = [4285662014_u32,1600765841_u32,4225375540_u32,1520364339_u32,346641159_u32,3792016786_u32];
_16 = _17.fld0.0 <= _22;
_17.fld7 = _1;
_29.1 = _17.fld3 ^ _18.1;
_29.2.0 = [1715245132_u32,3305429964_u32,2993244907_u32,3942460435_u32,1139221664_u32,1981174931_u32];
_17.fld2 = 7563040548109208303_u64 * 14552789456506556235_u64;
_29.0 = [1276217123_u32,3191292657_u32,416285301_u32,1739929785_u32,2066838286_u32,961966756_u32];
_9 = _11 - _11;
_29.1 = _17.fld6 as usize;
_27.1 = _18.1 >> _15;
_29 = _18;
_12 = 50600979375270242321626670235728459367_i128 * (-87013391610766152676406766260219625302_i128);
_17.fld5 = !196_u8;
match _8 {
0 => bb4,
1 => bb11,
1157647757 => bb13,
_ => bb12
}
}
bb11 = {
_17.fld0.1 = _4;
_17.fld5 = _17.fld3 as u8;
_18.2.0 = [1212624422_u32,2020329737_u32,3630866471_u32,2319788221_u32,809252619_u32,2629192606_u32];
_17.fld7 = _1;
_9 = _11 + _11;
RET = _18.2;
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_28 = core::ptr::addr_of_mut!(_17.fld3);
_26 = RET;
_18.1 = !(*_28);
_24 = !_18.1;
RET = (_18.2.0,);
_17.fld0 = (_16, _27.0);
_18.1 = _17.fld6 as usize;
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_17.fld1.0 = _26.0;
_9 = (*_28) as f64;
_17.fld4 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_17.fld7 = _1;
_25 = _8 as isize;
_17.fld2 = !16432054624980761351_u64;
match _8 {
0 => bb1,
1 => bb8,
1157647757 => bb10,
_ => bb9
}
}
bb12 = {
_18.0 = RET.0;
_16 = !_17.fld0.0;
_22 = _17.fld0.0 ^ _17.fld0.0;
_17.fld3 = 9404560649873001962_usize;
RET = _18.2;
RET.0 = [3097791734_u32,1532255145_u32,83480501_u32,947881002_u32,1632215377_u32,1404885420_u32];
_4 = _17.fld0.1;
_22 = _17.fld0.0 >= _17.fld0.0;
_17.fld5 = !144_u8;
_18 = (RET.0, _17.fld3, RET, (-43_i8));
_17.fld0.1 = _4;
_17.fld3 = _18.1 | _18.1;
_16 = !_17.fld0.0;
_25 = !_15;
_19 = [_22,_22,_22,_17.fld0.0,_17.fld0.0,_22,_22];
_27.0 = _17.fld0.1;
_27.0 = _17.fld0.1;
_18.3 = 92_i8;
_16 = _17.fld0.0;
Call(_17.fld6 = core::intrinsics::transmute(_5), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
_33 = -_17.fld6;
RET = (_18.0,);
RET.0 = [3575228837_u32,3809955010_u32,1789133914_u32,476444175_u32,2050813278_u32,3833104126_u32];
_12 = 72806243991980320185062244570141078271_i128 & 20301900554041726138286106192009799348_i128;
_27.0 = _17.fld0.1;
_18.0 = [279049688_u32,473353352_u32,1033262208_u32,856971636_u32,1503040086_u32,4253981637_u32];
_17.fld1 = (_26.0,);
_26.0 = _29.2.0;
_29 = (RET.0, _18.1, _17.fld1, _18.3);
_28 = core::ptr::addr_of_mut!(_29.1);
_18.3 = !_29.3;
_10 = [41024_u16,19933_u16,23033_u16,34204_u16,58865_u16];
_21 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5];
_36 = _19;
_26.0 = _29.2.0;
_35 = _9 as u128;
_27.1 = _8 as usize;
_27.1 = _8 as usize;
_26 = _18.2;
_10 = _6;
_5 = [_17.fld5,_17.fld5,_17.fld5,_17.fld5];
RET.0 = [387294478_u32,2434201679_u32,877424784_u32,1599283714_u32,3187349922_u32,2495410017_u32];
_19 = _36;
_17.fld0 = (_22, _27.0);
RET = (_26.0,);
Goto(bb14)
}
bb14 = {
_34 = _18.3 as u128;
_39 = _9;
_39 = 2158251217516325673_i64 as f64;
_20 = _25;
_38 = _15 << _18.3;
_18.2 = _26;
_29.2 = RET;
_17.fld5 = 93_u8;
_8 = !(-1957316320_i32);
_27.1 = (*_28);
_2 = _3;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(2_usize, 21_usize, Move(_21), 29_usize, Move(_29), 36_usize, Move(_36), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(2_usize, 26_usize, Move(_26), 25_usize, Move(_25), 5_usize, Move(_5), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(2_usize, 19_usize, Move(_19), 24_usize, Move(_24), 2_usize, Move(_2), 3_usize, Move(_3)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: f64,mut _2: *const i64,mut _3: [u16; 5],mut _4: [u8; 4],mut _5: char,mut _6: f64,mut _7: char,mut _8: [u16; 5],mut _9: *mut u16,mut _10: *mut u16,mut _11: *const i64,mut _12: [u16; 5],mut _13: *mut u16) -> i32 {
mir! {
type RET = i32;
let _14: u8;
let _15: Adt43;
let _16: *const i128;
let _17: f32;
let _18: Adt51;
let _19: Adt43;
let _20: f32;
let _21: char;
let _22: f64;
let _23: Adt45;
let _24: u128;
let _25: Adt54;
let _26: f32;
let _27: Adt58;
let _28: *const i64;
let _29: [char; 4];
let _30: i64;
let _31: isize;
let _32: f32;
let _33: u8;
let _34: [bool; 7];
let _35: i8;
let _36: *const i64;
let _37: (bool, *mut u16);
let _38: [i16; 4];
let _39: Adt48;
let _40: i8;
let _41: Adt44;
let _42: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _43: u32;
let _44: [u8; 7];
let _45: i128;
let _46: Adt47;
let _47: u16;
let _48: ();
let _49: ();
{
_3 = _12;
RET = (-149632472_i32);
_1 = -_6;
_7 = _5;
RET = 1947506731572061491_i64 as i32;
_13 = _10;
Call(_3 = core::intrinsics::transmute(_8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = _8;
Call(_1 = core::intrinsics::fmaf64(_6, _6, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = _6;
_2 = _11;
_5 = _7;
_8 = [47027_u16,36572_u16,52261_u16,40240_u16,10305_u16];
RET = 4643063957874137983_i64 as i32;
RET = -(-661139168_i32);
_11 = _2;
_6 = (-33289000540112630401829534466353569485_i128) as f64;
_6 = _1 - _1;
RET = !(-1295442981_i32);
_9 = _10;
_6 = 2458887977911697592_u64 as f64;
_2 = _11;
_14 = 43_u8;
_7 = _5;
_5 = _7;
_5 = _7;
_21 = _5;
Goto(bb3)
}
bb3 = {
_13 = _10;
_9 = _10;
RET = _1 as i32;
_17 = 14685024146989027127_usize as f32;
_6 = _1 - _1;
_7 = _21;
Goto(bb4)
}
bb4 = {
_1 = _6 - _6;
_5 = _7;
_14 = 278954889807542408438573005793356989526_u128 as u8;
_20 = _17;
_6 = _1;
_10 = _9;
_20 = 366_i16 as f32;
_18.fld1 = _5;
_5 = _21;
_15 = Adt43::Variant1 { fld0: 4970470273473657838_usize,fld1: _1 };
Call(_3 = fn4(_2, _9, _12, _6, _8, _21, _10, _21, _2, _4, _12, _12), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_18.fld2 = [_14,_14,_14,_14,_14,_14,_14];
_3 = _8;
_21 = _7;
_8 = [63092_u16,22836_u16,41159_u16,2405_u16,15050_u16];
_12 = [53295_u16,35515_u16,21054_u16,10820_u16,62777_u16];
_10 = _9;
_8 = [19326_u16,10012_u16,64310_u16,33414_u16,62998_u16];
place!(Field::<f64>(Variant(_15, 1), 1)) = 4573914848036003418_i64 as f64;
_6 = (-2576447592561799198550674198757459613_i128) as f64;
place!(Field::<usize>(Variant(_15, 1), 0)) = 10993045001822289696_u64 as usize;
_21 = _5;
_7 = _18.fld1;
_10 = _13;
_24 = 160278134755140040668260111249930593332_u128 >> RET;
SetDiscriminant(_15, 0);
_3 = _8;
place!(Field::<isize>(Variant(_15, 0), 2)) = (-66_isize) * (-9223372036854775808_isize);
_4 = [_14,_14,_14,_14];
_20 = -_17;
Goto(bb6)
}
bb6 = {
RET = !821382704_i32;
_8 = [1572_u16,32299_u16,15047_u16,5596_u16,56561_u16];
place!(Field::<[bool; 7]>(Variant(_15, 0), 1)) = [false,false,false,true,true,true,true];
place!(Field::<bool>(Variant(_15, 0), 0)) = true;
RET = 2120628865_i32 >> _24;
_11 = _2;
RET = !(-323991560_i32);
_17 = 2_usize as f32;
_26 = _17;
_22 = -_1;
_19 = Adt43::Variant1 { fld0: 17902859514354343273_usize,fld1: _22 };
_7 = _5;
_24 = !279759699366696640639888284173004758114_u128;
_12 = _3;
place!(Field::<usize>(Variant(_19, 1), 0)) = !4294891229402182956_usize;
_15 = Adt43::Variant1 { fld0: Field::<usize>(Variant(_19, 1), 0),fld1: Field::<f64>(Variant(_19, 1), 1) };
Goto(bb7)
}
bb7 = {
_7 = _18.fld1;
_18.fld1 = _21;
_26 = _20;
SetDiscriminant(_15, 1);
_13 = _10;
_13 = _9;
_19 = Adt43::Variant1 { fld0: 13553125800430072264_usize,fld1: _22 };
place!(Field::<f64>(Variant(_19, 1), 1)) = -_22;
_6 = 80_isize as f64;
_11 = _2;
_12 = _8;
_18.fld1 = _5;
_30 = (-4157046301018288900_i64) | (-4829966179660744224_i64);
Goto(bb8)
}
bb8 = {
_13 = _10;
_17 = _26;
_11 = _2;
_33 = _14 << RET;
_3 = [5497_u16,55505_u16,65286_u16,16175_u16,63209_u16];
_18.fld1 = _21;
_28 = _11;
_38 = [(-24027_i16),(-29342_i16),20126_i16,25286_i16];
_5 = _21;
_36 = _28;
Call(RET = core::intrinsics::transmute(_4), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_37.0 = _30 < _30;
_29 = [_21,_7,_18.fld1,_21];
_15 = Adt43::Variant1 { fld0: 4_usize,fld1: _6 };
_13 = _10;
Goto(bb10)
}
bb10 = {
RET = !(-1574196607_i32);
_20 = _26 + _17;
_1 = -Field::<f64>(Variant(_19, 1), 1);
place!(Field::<f64>(Variant(_19, 1), 1)) = _22;
_37.1 = _10;
_4 = [_33,_33,_33,_14];
_18.fld1 = _7;
_37 = (false, _13);
_42.2.3 = -(-100_i8);
_1 = 31756_i16 as f64;
_42.1 = (-22855_i16) - (-7987_i16);
_33 = _42.1 as u8;
_42.2.2.0 = [1323319819_u32,3142109600_u32,2319545477_u32,2084418805_u32,300090268_u32,633828043_u32];
_18.fld0 = Adt50::Variant1 { fld0: 14354280876437362850_u64 };
place!(Field::<usize>(Variant(_19, 1), 0)) = !4_usize;
_42.3 = (-62747663274315968164598201361781543978_i128) >> _33;
_21 = _7;
_18.fld2 = [_33,_33,_33,_14,_14,_33,_14];
place!(Field::<usize>(Variant(_15, 1), 0)) = !Field::<usize>(Variant(_19, 1), 0);
Call(_45 = core::intrinsics::transmute(_24), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_42.0 = [_14,_33,_14,_33,_14,_33,_33];
_33 = _26 as u8;
_37 = (true, _10);
_23 = Adt45::Variant3 { fld0: _30 };
_1 = _22 + _22;
_12 = [64826_u16,7525_u16,26378_u16,4665_u16,34911_u16];
place!(Field::<u64>(Variant(_18.fld0, 1), 0)) = 8511311975848647905_u64;
_24 = !818775700593788952566375463705714744_u128;
place!(Field::<f64>(Variant(_15, 1), 1)) = -_1;
SetDiscriminant(_18.fld0, 0);
_6 = Field::<f64>(Variant(_19, 1), 1);
_3 = [44365_u16,56390_u16,36325_u16,49354_u16,62286_u16];
RET = -1723805583_i32;
_13 = _10;
_34 = [_37.0,_37.0,_37.0,_37.0,_37.0,_37.0,_37.0];
_14 = _33;
_15 = Move(_19);
_19 = Move(_15);
place!(Field::<[i64; 6]>(Variant(_18.fld0, 0), 0)) = [_30,Field::<i64>(Variant(_23, 3), 0),Field::<i64>(Variant(_23, 3), 0),_30,_30,Field::<i64>(Variant(_23, 3), 0)];
_47 = 64100_u16 ^ 52938_u16;
_10 = core::ptr::addr_of_mut!(_47);
_8 = _12;
Goto(bb12)
}
bb12 = {
_5 = _7;
_42.0 = [_14,_33,_33,_33,_14,_33,_33];
_15 = Adt43::Variant1 { fld0: Field::<usize>(Variant(_19, 1), 0),fld1: _1 };
SetDiscriminant(_19, 1);
_39 = Adt48::Variant3 { fld0: _42.2.2.0 };
Goto(bb13)
}
bb13 = {
_16 = core::ptr::addr_of!(_45);
_8 = _3;
_41 = Adt44::Variant0 { fld0: _29,fld1: _34,fld2: (*_16) };
_42.2.2.0 = [3268798776_u32,1075644693_u32,2751874321_u32,2163804210_u32,3295013631_u32,2329632084_u32];
place!(Field::<f64>(Variant(_15, 1), 1)) = _1 - _1;
_40 = _42.2.3;
_33 = !_14;
_42.2.0 = [1413649366_u32,3369265355_u32,3028493813_u32,932512167_u32,896736087_u32,1241438459_u32];
SetDiscriminant(_41, 0);
_31 = _18.fld1 as isize;
_42.2.2 = (_42.2.0,);
SetDiscriminant(_15, 0);
Goto(bb14)
}
bb14 = {
_42.3 = -_45;
_27.fld0 = core::ptr::addr_of!((*_16));
place!(Field::<[bool; 7]>(Variant(_41, 0), 1)) = _34;
_37.0 = false & true;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(3_usize, 31_usize, Move(_31), 40_usize, Move(_40), 5_usize, Move(_5), 38_usize, Move(_38)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(3_usize, 24_usize, Move(_24), 12_usize, Move(_12), 14_usize, Move(_14), 47_usize, Move(_47)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(3_usize, 21_usize, Move(_21), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: *const i64,mut _2: *mut u16,mut _3: [u16; 5],mut _4: f64,mut _5: [u16; 5],mut _6: char,mut _7: *mut u16,mut _8: char,mut _9: *const i64,mut _10: [u8; 4],mut _11: [u16; 5],mut _12: [u16; 5]) -> [u16; 5] {
mir! {
type RET = [u16; 5];
let _13: [i64; 6];
let _14: Adt48;
let _15: ([u32; 6],);
let _16: u32;
let _17: f32;
let _18: Adt51;
let _19: [u16; 5];
let _20: [u8; 7];
let _21: f32;
let _22: u32;
let _23: [u8; 4];
let _24: u32;
let _25: char;
let _26: i64;
let _27: usize;
let _28: Adt48;
let _29: *mut i32;
let _30: u128;
let _31: isize;
let _32: ([u32; 6], usize, ([u32; 6],), i8);
let _33: isize;
let _34: ([u32; 6],);
let _35: *mut u16;
let _36: ([u32; 6], usize, ([u32; 6],), i8);
let _37: usize;
let _38: bool;
let _39: f64;
let _40: Adt54;
let _41: i16;
let _42: ([u32; 6], usize, ([u32; 6],), i8);
let _43: ();
let _44: ();
{
_3 = [1937_u16,47069_u16,25440_u16,32314_u16,40777_u16];
_3 = [18382_u16,9004_u16,5552_u16,50992_u16,17020_u16];
_10 = [186_u8,45_u8,163_u8,55_u8];
_9 = _1;
RET = [48213_u16,25130_u16,3789_u16,28570_u16,3173_u16];
_4 = 7322_u16 as f64;
_4 = 514846950_i32 as f64;
RET = _3;
_8 = _6;
_8 = _6;
_8 = _6;
_2 = _7;
_5 = [38830_u16,27736_u16,39213_u16,20983_u16,17804_u16];
_6 = _8;
_7 = _2;
_8 = _6;
_8 = _6;
_6 = _8;
_4 = 3040727_i32 as f64;
Call(_2 = fn5(_1, _6, _11, _10, _11, _12, _7, _7, RET, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = _2;
_8 = _6;
_8 = _6;
_13 = [(-3826963035342711546_i64),(-3484322954405793720_i64),(-685093184344836878_i64),(-8527271594525115225_i64),(-4041654929210966108_i64),6323122387578022944_i64];
_12 = [65172_u16,51158_u16,26325_u16,11448_u16,10350_u16];
Goto(bb2)
}
bb2 = {
_10 = [232_u8,231_u8,69_u8,184_u8];
_4 = 70_u8 as f64;
_9 = _1;
_5 = [50297_u16,23676_u16,44499_u16,37937_u16,31415_u16];
_5 = [38709_u16,45393_u16,54477_u16,43145_u16,47991_u16];
RET = [42077_u16,4231_u16,4449_u16,32083_u16,10543_u16];
_9 = _1;
_6 = _8;
_5 = _12;
_11 = RET;
_6 = _8;
_3 = [60002_u16,24189_u16,64785_u16,17452_u16,14783_u16];
_5 = [32414_u16,38721_u16,5442_u16,32934_u16,59908_u16];
RET = [20541_u16,21919_u16,24162_u16,53184_u16,26047_u16];
_11 = [29023_u16,3784_u16,11928_u16,63850_u16,39464_u16];
_6 = _8;
_11 = _12;
_8 = _6;
Goto(bb3)
}
bb3 = {
_8 = _6;
_3 = [153_u16,49665_u16,33547_u16,34394_u16,52779_u16];
_15.0 = [1871863130_u32,1460777774_u32,1497429172_u32,3999468300_u32,1861556596_u32,2216906188_u32];
Goto(bb4)
}
bb4 = {
_1 = _9;
_2 = _7;
_13 = [5975585198983312726_i64,(-1833968034920202559_i64),3278885542738827887_i64,4801532976059729739_i64,6926764601087671201_i64,(-9052316895645258909_i64)];
Call(_8 = fn7(_1, _5, _9, _13, _1, RET, _9, _15.0, _1, _5, _5, RET, _12), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_15.0 = [3435080793_u32,1187261437_u32,4094416099_u32,3868634424_u32,1919188381_u32,2293886534_u32];
_5 = _3;
_11 = [43046_u16,50594_u16,13528_u16,56192_u16,9918_u16];
_7 = _2;
_14 = Adt48::Variant3 { fld0: _15.0 };
_2 = _7;
_4 = (-1732626207_i32) as f64;
_15.0 = [3047019103_u32,578858279_u32,1255646539_u32,2462041787_u32,3059098806_u32,2031899131_u32];
Goto(bb6)
}
bb6 = {
_15 = (Field::<[u32; 6]>(Variant(_14, 3), 0),);
_16 = (-23277_i16) as u32;
_1 = _9;
_7 = _2;
_11 = [51468_u16,45134_u16,61524_u16,14690_u16,34294_u16];
_9 = _1;
_8 = _6;
place!(Field::<[u32; 6]>(Variant(_14, 3), 0)) = [_16,_16,_16,_16,_16,_16];
_17 = 182_u8 as f32;
_18.fld1 = _8;
_12 = _5;
_3 = [29687_u16,21218_u16,55793_u16,18432_u16,17097_u16];
_4 = _16 as f64;
_16 = (-27096_i16) as u32;
_6 = _8;
_18.fld1 = _6;
_10 = [189_u8,233_u8,236_u8,30_u8];
SetDiscriminant(_14, 1);
_1 = _9;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).3 = !_16;
_11 = [40779_u16,61577_u16,60581_u16,10072_u16,60855_u16];
_10 = [117_u8,199_u8,4_u8,187_u8];
_15.0 = [_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3];
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).4 = 8134_u16 - 31525_u16;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).3 = _16;
Goto(bb7)
}
bb7 = {
_9 = _1;
_19 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).4 = 790364490_i32 as u16;
_19 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
place!(Field::<*const i64>(Variant(_14, 1), 2)) = _9;
_7 = _2;
_11 = _3;
_2 = _7;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).0 = !13553763405634242405_u64;
place!(Field::<*const i64>(Variant(_14, 1), 2)) = _1;
_10 = [250_u8,91_u8,152_u8,41_u8];
_1 = _9;
_17 = Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4 as f32;
_15.0 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3];
_5 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_6 = _18.fld1;
_20 = [142_u8,29_u8,174_u8,49_u8,20_u8,44_u8,14_u8];
RET = _3;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).4 = 6544_u16;
_18.fld2 = [99_u8,241_u8,168_u8,57_u8,4_u8,4_u8,52_u8];
_18.fld1 = _8;
_16 = Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3 << Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3;
_5 = _3;
_1 = Field::<*const i64>(Variant(_14, 1), 2);
_9 = _1;
Goto(bb8)
}
bb8 = {
RET = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_13 = [3910796384345943087_i64,3384465054177991769_i64,(-9020417476786348947_i64),(-897844395557916872_i64),6391694504054614227_i64,(-8570148105026656902_i64)];
_18.fld1 = _6;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).1 = 69016603610601126506825923095020997462_u128 as i32;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).0 = !9423439800712125154_u64;
_15.0 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16,_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16,_16];
Call(_21 = core::intrinsics::transmute(_18.fld1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_17 = -_21;
_11 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_10 = [89_u8,89_u8,178_u8,144_u8];
_23 = _10;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).0 = 168419244114676262136088244530417180404_i128 as u64;
_15.0 = [_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16,_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3];
_17 = -_21;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).3 = _16;
_23 = [73_u8,11_u8,140_u8,214_u8];
_15.0 = [_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3];
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).4 = 24811_u16 | 15076_u16;
_12 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_8 = _18.fld1;
RET = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
Goto(bb10)
}
bb10 = {
_5 = _3;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).2 = core::ptr::addr_of_mut!(place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).1);
_12 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_31 = 9223372036854775807_isize;
_9 = _1;
_25 = _18.fld1;
_11 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_29 = Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).2;
_26 = -7763053076205071934_i64;
_32 = (_15.0, 16553445128838551525_usize, _15, 27_i8);
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).0 = 15970368174439284265_u64;
_27 = _32.1 & _32.1;
_12 = _5;
_27 = !_32.1;
_32.2.0 = _15.0;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).4 = 35693_u16 + 14167_u16;
_35 = _7;
_30 = 184293397577106881123866898099491937113_u128;
_4 = _21 as f64;
_34 = _32.2;
_27 = _32.1 - _32.1;
match _32.3 {
0 => bb6,
1 => bb11,
27 => bb13,
_ => bb12
}
}
bb11 = {
_15.0 = [3435080793_u32,1187261437_u32,4094416099_u32,3868634424_u32,1919188381_u32,2293886534_u32];
_5 = _3;
_11 = [43046_u16,50594_u16,13528_u16,56192_u16,9918_u16];
_7 = _2;
_14 = Adt48::Variant3 { fld0: _15.0 };
_2 = _7;
_4 = (-1732626207_i32) as f64;
_15.0 = [3047019103_u32,578858279_u32,1255646539_u32,2462041787_u32,3059098806_u32,2031899131_u32];
Goto(bb6)
}
bb12 = {
_7 = _2;
_8 = _6;
_8 = _6;
_13 = [(-3826963035342711546_i64),(-3484322954405793720_i64),(-685093184344836878_i64),(-8527271594525115225_i64),(-4041654929210966108_i64),6323122387578022944_i64];
_12 = [65172_u16,51158_u16,26325_u16,11448_u16,10350_u16];
Goto(bb2)
}
bb13 = {
_19 = _3;
_33 = _31 * _31;
_34.0 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16];
_29 = Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).2;
match _32.3 {
0 => bb6,
1 => bb2,
2 => bb5,
3 => bb10,
4 => bb14,
5 => bb15,
6 => bb16,
27 => bb18,
_ => bb17
}
}
bb14 = {
_7 = _2;
_8 = _6;
_8 = _6;
_13 = [(-3826963035342711546_i64),(-3484322954405793720_i64),(-685093184344836878_i64),(-8527271594525115225_i64),(-4041654929210966108_i64),6323122387578022944_i64];
_12 = [65172_u16,51158_u16,26325_u16,11448_u16,10350_u16];
Goto(bb2)
}
bb15 = {
_1 = _9;
_2 = _7;
_13 = [5975585198983312726_i64,(-1833968034920202559_i64),3278885542738827887_i64,4801532976059729739_i64,6926764601087671201_i64,(-9052316895645258909_i64)];
Call(_8 = fn7(_1, _5, _9, _13, _1, RET, _9, _15.0, _1, _5, _5, RET, _12), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_10 = [232_u8,231_u8,69_u8,184_u8];
_4 = 70_u8 as f64;
_9 = _1;
_5 = [50297_u16,23676_u16,44499_u16,37937_u16,31415_u16];
_5 = [38709_u16,45393_u16,54477_u16,43145_u16,47991_u16];
RET = [42077_u16,4231_u16,4449_u16,32083_u16,10543_u16];
_9 = _1;
_6 = _8;
_5 = _12;
_11 = RET;
_6 = _8;
_3 = [60002_u16,24189_u16,64785_u16,17452_u16,14783_u16];
_5 = [32414_u16,38721_u16,5442_u16,32934_u16,59908_u16];
RET = [20541_u16,21919_u16,24162_u16,53184_u16,26047_u16];
_11 = [29023_u16,3784_u16,11928_u16,63850_u16,39464_u16];
_6 = _8;
_11 = _12;
_8 = _6;
Goto(bb3)
}
bb17 = {
_8 = _6;
_3 = [153_u16,49665_u16,33547_u16,34394_u16,52779_u16];
_15.0 = [1871863130_u32,1460777774_u32,1497429172_u32,3999468300_u32,1861556596_u32,2216906188_u32];
Goto(bb4)
}
bb18 = {
_7 = core::ptr::addr_of_mut!(place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0)).4);
_18.fld2 = _20;
_23 = [85_u8,176_u8,162_u8,192_u8];
_5 = [(*_7),Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,(*_7),Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_21 = _17 + _17;
_36.3 = !_32.3;
_36.2.0 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,_16,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).3];
_30 = !35268698275299610327821122056732896833_u128;
_20 = _18.fld2;
_36 = (_34.0, _27, _34, _32.3);
_8 = _25;
_18.fld2 = [134_u8,142_u8,197_u8,7_u8,251_u8,194_u8,199_u8];
RET = [(*_7),(*_7),(*_7),Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_14, 1), 0).4];
_38 = _32.1 > _32.1;
Goto(bb19)
}
bb19 = {
Call(_43 = dump_var(4_usize, 11_usize, Move(_11), 31_usize, Move(_31), 15_usize, Move(_15), 30_usize, Move(_30)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_43 = dump_var(4_usize, 12_usize, Move(_12), 38_usize, Move(_38), 34_usize, Move(_34), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_43 = dump_var(4_usize, 8_usize, Move(_8), 6_usize, Move(_6), 32_usize, Move(_32), 44_usize, _44), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *const i64,mut _2: char,mut _3: [u16; 5],mut _4: [u8; 4],mut _5: [u16; 5],mut _6: [u16; 5],mut _7: *mut u16,mut _8: *mut u16,mut _9: [u16; 5],mut _10: *const i64) -> *mut u16 {
mir! {
type RET = *mut u16;
let _11: ([u32; 6], usize, ([u32; 6],), i8);
let _12: Adt45;
let _13: Adt51;
let _14: bool;
let _15: (*mut u16, usize);
let _16: *mut (bool, *mut u16);
let _17: [i64; 6];
let _18: u64;
let _19: [u8; 7];
let _20: Adt45;
let _21: [i64; 6];
let _22: [u8; 4];
let _23: usize;
let _24: f32;
let _25: u32;
let _26: [u32; 6];
let _27: (u64, i32, *mut i32, u32, u16, *const i128);
let _28: [u16; 5];
let _29: Adt43;
let _30: char;
let _31: ([u32; 6],);
let _32: f64;
let _33: [i16; 4];
let _34: u128;
let _35: f32;
let _36: ();
let _37: ();
{
RET = _7;
RET = _7;
Goto(bb1)
}
bb1 = {
_8 = _7;
_2 = '\u{bfbd1}';
_11.3 = -4_i8;
_11.0 = [3026963790_u32,884926550_u32,690604816_u32,3850175892_u32,2807358840_u32,970628283_u32];
_11.2 = (_11.0,);
_7 = RET;
_10 = _1;
_5 = [26578_u16,4010_u16,61050_u16,39013_u16,5747_u16];
_9 = _6;
_10 = _1;
_13.fld1 = _2;
_10 = _1;
_15.0 = RET;
_14 = !false;
_11.2 = (_11.0,);
_6 = _3;
Call(_15 = fn6(RET, _11.2, _1, _4, _4, _3, _9, _10, _1, _7, _11.0, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13.fld2 = [21_u8,153_u8,221_u8,152_u8,111_u8,10_u8,33_u8];
_15 = (_8, 1110126042832036461_usize);
_13.fld2 = [85_u8,167_u8,34_u8,165_u8,117_u8,63_u8,37_u8];
_4 = [72_u8,242_u8,20_u8,69_u8];
_17 = [(-8726445125462487424_i64),3971424266044319640_i64,4626604313601918572_i64,(-8869044516872377513_i64),5599403354251289545_i64,3094457009253083684_i64];
_13.fld2 = [185_u8,119_u8,95_u8,183_u8,127_u8,189_u8,20_u8];
_13.fld1 = _2;
_17 = [(-9107076831087705279_i64),9147309591752902282_i64,381371984249063028_i64,(-190788051573955628_i64),8188645880396638279_i64,(-4494833260652369512_i64)];
_11.2.0 = _11.0;
_11.1 = _15.1 - _15.1;
_14 = false;
_11.2.0 = _11.0;
_9 = [28340_u16,11213_u16,31812_u16,34429_u16,60813_u16];
_15 = (RET, _11.1);
_13.fld1 = _2;
_11.2 = (_11.0,);
_15 = (_8, _11.1);
_13.fld1 = _2;
Goto(bb3)
}
bb3 = {
RET = _8;
_13.fld2 = [66_u8,137_u8,131_u8,96_u8,109_u8,3_u8,19_u8];
_10 = _1;
_11.2.0 = _11.0;
_10 = _1;
_15.1 = !_11.1;
_15.0 = _7;
_4 = [134_u8,179_u8,14_u8,119_u8];
_3 = _6;
_17 = [4008060611660898871_i64,(-6436537819937028693_i64),(-2302876114583726522_i64),8692496351335810793_i64,(-1709454634263591780_i64),4799679418951671903_i64];
_15 = (_8, _11.1);
_11.2.0 = [1157533803_u32,159671828_u32,2020145853_u32,971679879_u32,1635876456_u32,320688827_u32];
_11.3 = 49_i8 >> _15.1;
_9 = _5;
_2 = _13.fld1;
_6 = _5;
RET = _8;
_10 = _1;
_11.0 = [716075217_u32,1615768159_u32,204215635_u32,999400474_u32,1698497809_u32,1092235361_u32];
_21 = [(-6875033246259045268_i64),(-3989473072710165385_i64),(-1478736179920759679_i64),(-26774233609452775_i64),(-7333912786570278704_i64),(-1570204347030634258_i64)];
_10 = _1;
_18 = !10842683887027488250_u64;
_15.1 = _11.1;
_11.3 = (-52_i8) - 51_i8;
_19 = [136_u8,56_u8,37_u8,162_u8,92_u8,31_u8,92_u8];
_4 = [208_u8,45_u8,100_u8,129_u8];
_11.3 = 31_i8;
match _11.3 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
31 => bb7,
_ => bb6
}
}
bb4 = {
_13.fld2 = [21_u8,153_u8,221_u8,152_u8,111_u8,10_u8,33_u8];
_15 = (_8, 1110126042832036461_usize);
_13.fld2 = [85_u8,167_u8,34_u8,165_u8,117_u8,63_u8,37_u8];
_4 = [72_u8,242_u8,20_u8,69_u8];
_17 = [(-8726445125462487424_i64),3971424266044319640_i64,4626604313601918572_i64,(-8869044516872377513_i64),5599403354251289545_i64,3094457009253083684_i64];
_13.fld2 = [185_u8,119_u8,95_u8,183_u8,127_u8,189_u8,20_u8];
_13.fld1 = _2;
_17 = [(-9107076831087705279_i64),9147309591752902282_i64,381371984249063028_i64,(-190788051573955628_i64),8188645880396638279_i64,(-4494833260652369512_i64)];
_11.2.0 = _11.0;
_11.1 = _15.1 - _15.1;
_14 = false;
_11.2.0 = _11.0;
_9 = [28340_u16,11213_u16,31812_u16,34429_u16,60813_u16];
_15 = (RET, _11.1);
_13.fld1 = _2;
_11.2 = (_11.0,);
_15 = (_8, _11.1);
_13.fld1 = _2;
Goto(bb3)
}
bb5 = {
_8 = _7;
_2 = '\u{bfbd1}';
_11.3 = -4_i8;
_11.0 = [3026963790_u32,884926550_u32,690604816_u32,3850175892_u32,2807358840_u32,970628283_u32];
_11.2 = (_11.0,);
_7 = RET;
_10 = _1;
_5 = [26578_u16,4010_u16,61050_u16,39013_u16,5747_u16];
_9 = _6;
_10 = _1;
_13.fld1 = _2;
_10 = _1;
_15.0 = RET;
_14 = !false;
_11.2 = (_11.0,);
_6 = _3;
Call(_15 = fn6(RET, _11.2, _1, _4, _4, _3, _9, _10, _1, _7, _11.0, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_11.3 = (-93_i8) | (-58_i8);
_9 = _5;
_11.2 = (_11.0,);
_6 = [25044_u16,61550_u16,3803_u16,23947_u16,29117_u16];
_23 = _11.1 << _11.1;
_10 = _1;
_17 = [(-5086446484894308974_i64),(-133762000285216629_i64),(-6755791150190178100_i64),(-1716526372872355316_i64),6035744907649481822_i64,(-2949475344894282195_i64)];
_20 = Adt45::Variant3 { fld0: 7968554559913983601_i64 };
_1 = _10;
_11.0 = [1187479933_u32,2561010386_u32,3743468625_u32,2057641671_u32,3092961229_u32,3471638072_u32];
_15.1 = !_23;
_9 = _5;
_11.3 = (-19_i8);
_15.1 = !_23;
_11.1 = !_15.1;
_19 = _13.fld2;
_11.0 = _11.2.0;
Call(_11.1 = core::intrinsics::bswap(_23), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6 = _9;
RET = _8;
_11.0 = _11.2.0;
_25 = 3603193335_u32;
_15.1 = _23 << _11.1;
_15.0 = _7;
_11.0 = [_25,_25,_25,_25,_25,_25];
_13.fld2 = [249_u8,153_u8,204_u8,55_u8,255_u8,150_u8,216_u8];
match _25 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb4,
3603193335 => bb10,
_ => bb9
}
}
bb9 = {
_13.fld2 = [21_u8,153_u8,221_u8,152_u8,111_u8,10_u8,33_u8];
_15 = (_8, 1110126042832036461_usize);
_13.fld2 = [85_u8,167_u8,34_u8,165_u8,117_u8,63_u8,37_u8];
_4 = [72_u8,242_u8,20_u8,69_u8];
_17 = [(-8726445125462487424_i64),3971424266044319640_i64,4626604313601918572_i64,(-8869044516872377513_i64),5599403354251289545_i64,3094457009253083684_i64];
_13.fld2 = [185_u8,119_u8,95_u8,183_u8,127_u8,189_u8,20_u8];
_13.fld1 = _2;
_17 = [(-9107076831087705279_i64),9147309591752902282_i64,381371984249063028_i64,(-190788051573955628_i64),8188645880396638279_i64,(-4494833260652369512_i64)];
_11.2.0 = _11.0;
_11.1 = _15.1 - _15.1;
_14 = false;
_11.2.0 = _11.0;
_9 = [28340_u16,11213_u16,31812_u16,34429_u16,60813_u16];
_15 = (RET, _11.1);
_13.fld1 = _2;
_11.2 = (_11.0,);
_15 = (_8, _11.1);
_13.fld1 = _2;
Goto(bb3)
}
bb10 = {
_15.0 = _8;
RET = _8;
_11.2 = (_11.0,);
place!(Field::<i64>(Variant(_20, 3), 0)) = -(-8141268303350599311_i64);
_7 = _15.0;
_24 = 236_u8 as f32;
_12 = Adt45::Variant3 { fld0: Field::<i64>(Variant(_20, 3), 0) };
_4 = [31_u8,41_u8,138_u8,20_u8];
RET = _15.0;
_3 = [125_u16,17088_u16,27142_u16,52352_u16,56656_u16];
_7 = _15.0;
_27.4 = 27040_u16 * 94_u16;
_3 = [_27.4,_27.4,_27.4,_27.4,_27.4];
_9 = [_27.4,_27.4,_27.4,_27.4,_27.4];
SetDiscriminant(_20, 3);
match _25 {
0 => bb11,
1 => bb12,
2 => bb13,
3603193335 => bb15,
_ => bb14
}
}
bb11 = {
_13.fld2 = [21_u8,153_u8,221_u8,152_u8,111_u8,10_u8,33_u8];
_15 = (_8, 1110126042832036461_usize);
_13.fld2 = [85_u8,167_u8,34_u8,165_u8,117_u8,63_u8,37_u8];
_4 = [72_u8,242_u8,20_u8,69_u8];
_17 = [(-8726445125462487424_i64),3971424266044319640_i64,4626604313601918572_i64,(-8869044516872377513_i64),5599403354251289545_i64,3094457009253083684_i64];
_13.fld2 = [185_u8,119_u8,95_u8,183_u8,127_u8,189_u8,20_u8];
_13.fld1 = _2;
_17 = [(-9107076831087705279_i64),9147309591752902282_i64,381371984249063028_i64,(-190788051573955628_i64),8188645880396638279_i64,(-4494833260652369512_i64)];
_11.2.0 = _11.0;
_11.1 = _15.1 - _15.1;
_14 = false;
_11.2.0 = _11.0;
_9 = [28340_u16,11213_u16,31812_u16,34429_u16,60813_u16];
_15 = (RET, _11.1);
_13.fld1 = _2;
_11.2 = (_11.0,);
_15 = (_8, _11.1);
_13.fld1 = _2;
Goto(bb3)
}
bb12 = {
_8 = _7;
_2 = '\u{bfbd1}';
_11.3 = -4_i8;
_11.0 = [3026963790_u32,884926550_u32,690604816_u32,3850175892_u32,2807358840_u32,970628283_u32];
_11.2 = (_11.0,);
_7 = RET;
_10 = _1;
_5 = [26578_u16,4010_u16,61050_u16,39013_u16,5747_u16];
_9 = _6;
_10 = _1;
_13.fld1 = _2;
_10 = _1;
_15.0 = RET;
_14 = !false;
_11.2 = (_11.0,);
_6 = _3;
Call(_15 = fn6(RET, _11.2, _1, _4, _4, _3, _9, _10, _1, _7, _11.0, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_8 = _7;
_2 = '\u{bfbd1}';
_11.3 = -4_i8;
_11.0 = [3026963790_u32,884926550_u32,690604816_u32,3850175892_u32,2807358840_u32,970628283_u32];
_11.2 = (_11.0,);
_7 = RET;
_10 = _1;
_5 = [26578_u16,4010_u16,61050_u16,39013_u16,5747_u16];
_9 = _6;
_10 = _1;
_13.fld1 = _2;
_10 = _1;
_15.0 = RET;
_14 = !false;
_11.2 = (_11.0,);
_6 = _3;
Call(_15 = fn6(RET, _11.2, _1, _4, _4, _3, _9, _10, _1, _7, _11.0, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
_27.4 = (-24620_i16) as u16;
_27.1 = _25 as i32;
_21 = _17;
_17 = [Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0)];
_11.2.0 = [_25,_25,_25,_25,_25,_25];
_11.2 = (_11.0,);
_31 = (_11.0,);
_21 = [Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0),Field::<i64>(Variant(_12, 3), 0)];
_11.1 = _15.1;
_13.fld1 = _2;
_11 = (_31.0, _15.1, _31, 48_i8);
_31.0 = [_25,_25,_25,_25,_25,_25];
_24 = _25 as f32;
_27.2 = core::ptr::addr_of_mut!(_27.1);
_8 = core::ptr::addr_of_mut!(_27.4);
Goto(bb16)
}
bb16 = {
Call(_36 = dump_var(5_usize, 6_usize, Move(_6), 17_usize, Move(_17), 11_usize, Move(_11), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(5_usize, 19_usize, Move(_19), 3_usize, Move(_3), 5_usize, Move(_5), 37_usize, _37), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: *mut u16,mut _2: ([u32; 6],),mut _3: *const i64,mut _4: [u8; 4],mut _5: [u8; 4],mut _6: [u16; 5],mut _7: [u16; 5],mut _8: *const i64,mut _9: *const i64,mut _10: *mut u16,mut _11: [u32; 6],mut _12: *mut u16) -> (*mut u16, usize) {
mir! {
type RET = (*mut u16, usize);
let _13: u32;
let _14: [bool; 7];
let _15: char;
let _16: f32;
let _17: bool;
let _18: ([u32; 6], usize, ([u32; 6],), i8);
let _19: Adt55;
let _20: isize;
let _21: [u32; 6];
let _22: char;
let _23: Adt43;
let _24: *const (*mut u16, usize);
let _25: Adt47;
let _26: f32;
let _27: [i64; 6];
let _28: char;
let _29: [i64; 6];
let _30: ();
let _31: ();
{
RET = (_12, 7706454985846248677_usize);
RET = (_1, 5153522002774892505_usize);
_4 = _5;
_2.0 = [3578110001_u32,3815396732_u32,58756703_u32,1947726983_u32,1476488446_u32,1938431082_u32];
RET = (_12, 7395348374530253808_usize);
RET.0 = _12;
_13 = 228590667_u32;
Goto(bb1)
}
bb1 = {
_1 = _10;
_12 = _1;
_1 = RET.0;
RET.0 = _12;
_11 = _2.0;
_2.0 = _11;
RET.0 = _10;
_5 = [14_u8,152_u8,117_u8,43_u8];
_4 = [47_u8,72_u8,181_u8,152_u8];
RET.0 = _12;
_4 = [182_u8,7_u8,85_u8,77_u8];
_4 = [155_u8,64_u8,127_u8,251_u8];
_6 = _7;
_8 = _9;
_2 = (_11,);
RET = (_10, 10164913814026097740_usize);
_12 = _1;
_3 = _8;
_14 = [true,false,false,true,true,false,false];
_15 = '\u{5cc67}';
_13 = 2502553349_u32;
_11 = [_13,_13,_13,_13,_13,_13];
_1 = _10;
_12 = _10;
Goto(bb2)
}
bb2 = {
_16 = 1_i8 as f32;
_9 = _3;
Goto(bb3)
}
bb3 = {
_5 = _4;
_11 = _2.0;
_18.3 = _13 as i8;
_16 = 4877696016874952999_u64 as f32;
match RET.1 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
10164913814026097740 => bb8,
_ => bb7
}
}
bb4 = {
_16 = 1_i8 as f32;
_9 = _3;
Goto(bb3)
}
bb5 = {
_1 = _10;
_12 = _1;
_1 = RET.0;
RET.0 = _12;
_11 = _2.0;
_2.0 = _11;
RET.0 = _10;
_5 = [14_u8,152_u8,117_u8,43_u8];
_4 = [47_u8,72_u8,181_u8,152_u8];
RET.0 = _12;
_4 = [182_u8,7_u8,85_u8,77_u8];
_4 = [155_u8,64_u8,127_u8,251_u8];
_6 = _7;
_8 = _9;
_2 = (_11,);
RET = (_10, 10164913814026097740_usize);
_12 = _1;
_3 = _8;
_14 = [true,false,false,true,true,false,false];
_15 = '\u{5cc67}';
_13 = 2502553349_u32;
_11 = [_13,_13,_13,_13,_13,_13];
_1 = _10;
_12 = _10;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET.1 = 3224481264625022108_usize | 1_usize;
_17 = _15 == _15;
_5 = [18_u8,134_u8,159_u8,48_u8];
_5 = _4;
RET = (_12, 3293776942436314561_usize);
RET = (_12, 1_usize);
RET = (_12, 9890000573758331635_usize);
_1 = _12;
RET = (_10, 0_usize);
_12 = RET.0;
_12 = _1;
_20 = 9223372036854775807_isize - (-9223372036854775808_isize);
_4 = [62_u8,138_u8,3_u8,3_u8];
_4 = _5;
_16 = (-4893092641919546917_i64) as f32;
Goto(bb9)
}
bb9 = {
_7 = _6;
_8 = _9;
_20 = (-9223372036854775808_isize);
_22 = _15;
_18.2 = (_2.0,);
_18 = (_11, RET.1, _2, 103_i8);
_16 = (-15324_i16) as f32;
_9 = _3;
_1 = _10;
_18.3 = (-74_i8);
_7 = [7078_u16,27600_u16,46007_u16,37350_u16,9754_u16];
RET = (_12, _18.1);
_7 = [1865_u16,34406_u16,12253_u16,17877_u16,54883_u16];
_4 = [168_u8,146_u8,212_u8,184_u8];
RET.0 = _10;
_1 = _12;
_22 = _15;
RET.0 = _1;
_18.1 = !RET.1;
_10 = _12;
_12 = _1;
_12 = _10;
_14 = [_17,_17,_17,_17,_17,_17,_17];
_18.0 = _2.0;
_11 = [_13,_13,_13,_13,_13,_13];
RET.0 = _12;
RET.1 = _18.1;
_16 = _20 as f32;
RET.1 = 161820534389745679992349537697689703662_i128 as usize;
match _13 {
0 => bb1,
1 => bb6,
2 => bb10,
3 => bb11,
4 => bb12,
2502553349 => bb14,
_ => bb13
}
}
bb10 = {
RET.1 = 3224481264625022108_usize | 1_usize;
_17 = _15 == _15;
_5 = [18_u8,134_u8,159_u8,48_u8];
_5 = _4;
RET = (_12, 3293776942436314561_usize);
RET = (_12, 1_usize);
RET = (_12, 9890000573758331635_usize);
_1 = _12;
RET = (_10, 0_usize);
_12 = RET.0;
_12 = _1;
_20 = 9223372036854775807_isize - (-9223372036854775808_isize);
_4 = [62_u8,138_u8,3_u8,3_u8];
_4 = _5;
_16 = (-4893092641919546917_i64) as f32;
Goto(bb9)
}
bb11 = {
_16 = 1_i8 as f32;
_9 = _3;
Goto(bb3)
}
bb12 = {
Return()
}
bb13 = {
_16 = 1_i8 as f32;
_9 = _3;
Goto(bb3)
}
bb14 = {
_11 = [_13,_13,_13,_13,_13,_13];
_12 = RET.0;
_18.1 = RET.1;
RET = (_1, _18.1);
_18.0 = [_13,_13,_13,_13,_13,_13];
_24 = core::ptr::addr_of!(RET);
RET.0 = _10;
_15 = _22;
_18.2.0 = [_13,_13,_13,_13,_13,_13];
_17 = !false;
RET.0 = _1;
_18.2.0 = [_13,_13,_13,_13,_13,_13];
_18.2.0 = [_13,_13,_13,_13,_13,_13];
_21 = [_13,_13,_13,_13,_13,_13];
RET.1 = _18.1 - _18.1;
_26 = _16;
_10 = (*_24).0;
_23 = Adt43::Variant0 { fld0: _17,fld1: _14,fld2: _20 };
_11 = _2.0;
_10 = RET.0;
_26 = -_16;
_4 = [218_u8,151_u8,227_u8,209_u8];
_6 = _7;
SetDiscriminant(_23, 0);
_18.1 = !(*_24).1;
_20 = -(-9223372036854775808_isize);
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(6_usize, 7_usize, Move(_7), 4_usize, Move(_4), 13_usize, Move(_13), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(6_usize, 14_usize, Move(_14), 15_usize, Move(_15), 20_usize, Move(_20), 31_usize, _31), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *const i64,mut _2: [u16; 5],mut _3: *const i64,mut _4: [i64; 6],mut _5: *const i64,mut _6: [u16; 5],mut _7: *const i64,mut _8: [u32; 6],mut _9: *const i64,mut _10: [u16; 5],mut _11: [u16; 5],mut _12: [u16; 5],mut _13: [u16; 5]) -> char {
mir! {
type RET = char;
let _14: [i64; 6];
let _15: f64;
let _16: Adt59;
let _17: bool;
let _18: [u16; 5];
let _19: u64;
let _20: *const (*mut u16, usize);
let _21: (*mut u16, usize);
let _22: isize;
let _23: i64;
let _24: u8;
let _25: f32;
let _26: char;
let _27: [char; 4];
let _28: i8;
let _29: i32;
let _30: f32;
let _31: f64;
let _32: Adt51;
let _33: [char; 4];
let _34: i128;
let _35: Adt50;
let _36: *mut u16;
let _37: [u32; 6];
let _38: bool;
let _39: ();
let _40: ();
{
RET = '\u{e33dc}';
_12 = [48048_u16,63066_u16,18811_u16,47435_u16,22347_u16];
RET = '\u{f3665}';
_2 = [13445_u16,35268_u16,30851_u16,37516_u16,24365_u16];
_4 = [8427798656480169240_i64,(-8304491441202943167_i64),(-1513618285608256988_i64),6473219719158388295_i64,7274831911306118490_i64,(-1924899366696701479_i64)];
_7 = _9;
_11 = [34634_u16,15238_u16,65026_u16,29184_u16,44523_u16];
_7 = _1;
RET = '\u{dd6e5}';
_5 = _1;
RET = '\u{a74ae}';
_8 = [83467798_u32,3064103076_u32,4017869556_u32,3019976142_u32,1058627192_u32,157529016_u32];
_4 = [(-4516989159062554858_i64),(-1053985670596923187_i64),(-3893026142429756376_i64),8483117224348707464_i64,8768102186198001198_i64,6516541458058562043_i64];
_9 = _3;
_4 = [2928194586271824448_i64,(-7766515033905747507_i64),(-11526799157206106_i64),6192074492994502175_i64,6427210636115153732_i64,(-1446561840404964577_i64)];
_14 = [3652294827889986489_i64,6836682344996200258_i64,2151522943669240070_i64,8503151664032492191_i64,9021025424957701202_i64,6566011112487774752_i64];
_9 = _1;
_9 = _3;
_14 = _4;
_5 = _3;
_2 = _13;
RET = '\u{e611f}';
_9 = _5;
_12 = [11402_u16,61582_u16,28718_u16,42075_u16,7822_u16];
_9 = _3;
_9 = _1;
Goto(bb1)
}
bb1 = {
_5 = _3;
Goto(bb2)
}
bb2 = {
_15 = 16163156628129585219_u64 as f64;
_2 = [30994_u16,53903_u16,10458_u16,48034_u16,23681_u16];
_7 = _1;
_2 = [54978_u16,32472_u16,7702_u16,12946_u16,52073_u16];
_12 = [1473_u16,16597_u16,3768_u16,41182_u16,37373_u16];
_7 = _5;
_11 = [23178_u16,49961_u16,44729_u16,48652_u16,16312_u16];
_13 = [18925_u16,14031_u16,53846_u16,51850_u16,3736_u16];
_10 = _12;
_9 = _1;
_5 = _7;
_3 = _7;
_9 = _5;
_4 = _14;
_13 = _10;
_7 = _3;
_6 = [47314_u16,56723_u16,28665_u16,15309_u16,12003_u16];
_8 = [3908166494_u32,1792285570_u32,1878421579_u32,1006909406_u32,3634168515_u32,3705423359_u32];
_17 = !true;
_2 = [52932_u16,23815_u16,21845_u16,61367_u16,30980_u16];
_18 = [55891_u16,40760_u16,31995_u16,19414_u16,32137_u16];
_19 = 170955436672988856879896150481089761017_u128 as u64;
_5 = _3;
_7 = _9;
_18 = _13;
_19 = !14594553063467233215_u64;
_2 = [26551_u16,44976_u16,901_u16,43169_u16,50002_u16];
_11 = _6;
Call(_10 = fn8(_7, _9, _1, _3, _12, _3, _12, _7, _13, _13, _12, _7, _14, _12), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = '\u{aee31}';
_1 = _3;
_3 = _9;
_13 = [27201_u16,51357_u16,47674_u16,49854_u16,25771_u16];
_6 = _11;
_2 = [3888_u16,51463_u16,64662_u16,52133_u16,13249_u16];
_4 = _14;
_10 = [65514_u16,62984_u16,38268_u16,30821_u16,29939_u16];
_1 = _9;
_9 = _1;
_17 = RET <= RET;
_7 = _3;
_17 = true;
_14 = [(-6887754853849900712_i64),(-1900755841932341476_i64),(-3790795371748334060_i64),7724747491511276872_i64,(-7094230409373750973_i64),(-6338719535904824081_i64)];
_15 = 13959_i16 as f64;
_18 = [57438_u16,36192_u16,21147_u16,59236_u16,18067_u16];
_17 = true;
_18 = _13;
_11 = [8698_u16,15427_u16,25297_u16,18355_u16,18928_u16];
_17 = !false;
_3 = _9;
_2 = [38881_u16,47589_u16,14940_u16,18390_u16,24699_u16];
_3 = _5;
_21.1 = 124_i8 as usize;
_9 = _7;
_2 = [54174_u16,47139_u16,58731_u16,9517_u16,45924_u16];
Goto(bb4)
}
bb4 = {
_21.1 = !1_usize;
_22 = 9223372036854775807_isize;
RET = '\u{62c16}';
Goto(bb5)
}
bb5 = {
_14 = _4;
_21.1 = 5_usize << _22;
_20 = core::ptr::addr_of!(_21);
_15 = 194633063113300079429082184069852456040_u128 as f64;
Goto(bb6)
}
bb6 = {
Goto(bb7)
}
bb7 = {
_8 = [165090884_u32,966189601_u32,2229410238_u32,2256282359_u32,1118912336_u32,2845853783_u32];
_20 = core::ptr::addr_of!((*_20));
Goto(bb8)
}
bb8 = {
_24 = 57_u8 * 234_u8;
_25 = 30748875062901263644517127490321266683_i128 as f32;
_19 = 17172436609348737554_u64 ^ 7623677150452608033_u64;
_21.1 = !2_usize;
_9 = core::ptr::addr_of!(_23);
_13 = [28660_u16,43865_u16,26683_u16,46081_u16,36107_u16];
_3 = core::ptr::addr_of!((*_9));
_3 = _5;
_9 = _5;
_27 = [RET,RET,RET,RET];
_23 = (-1505859545053592902_i64);
_30 = _25 + _25;
_8 = [3538357964_u32,2404632491_u32,963954770_u32,655723410_u32,2541983244_u32,3486359171_u32];
_23 = 2158079967332567526_i64;
_5 = core::ptr::addr_of!(_23);
_25 = _30 - _30;
_27 = [RET,RET,RET,RET];
_30 = _25 + _25;
_15 = (*_20).1 as f64;
_14 = [_23,(*_5),(*_5),(*_5),(*_5),_23];
_5 = core::ptr::addr_of!((*_5));
Call(_13 = fn9(_9, _5, _8, _11, _4), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_29 = 2076489811_i32 & (-1203771016_i32);
_3 = _9;
_7 = core::ptr::addr_of!((*_5));
_34 = -(-145905717080367356202805164207536969752_i128);
_17 = true;
_14 = _4;
_34 = (-33115098993877224325313646177417628607_i128) & (-38378300553960091396623846369394428456_i128);
_26 = RET;
RET = _26;
_28 = !(-41_i8);
_23 = (-4311990815971214075_i64) << _24;
_1 = core::ptr::addr_of!((*_5));
Goto(bb10)
}
bb10 = {
RET = _26;
_22 = 9223372036854775807_isize;
_21.1 = !8458747015396610930_usize;
_13 = [60243_u16,13890_u16,22141_u16,34252_u16,1062_u16];
_18 = [42287_u16,46056_u16,8983_u16,3160_u16,32043_u16];
_3 = _1;
match _22 {
0 => bb3,
1 => bb7,
9223372036854775807 => bb12,
_ => bb11
}
}
bb11 = {
_21.1 = !1_usize;
_22 = 9223372036854775807_isize;
RET = '\u{62c16}';
Goto(bb5)
}
bb12 = {
_33 = [_26,RET,_26,RET];
_31 = _15;
_11 = _2;
_19 = !879578276001470313_u64;
RET = _26;
_4 = [(*_5),(*_1),_23,(*_7),_23,(*_7)];
_32.fld1 = RET;
_27 = [_32.fld1,RET,_26,RET];
_5 = _1;
_2 = [37685_u16,19661_u16,18766_u16,45495_u16,23795_u16];
_17 = !true;
_32.fld2 = [_24,_24,_24,_24,_24,_24,_24];
_9 = _1;
_7 = core::ptr::addr_of!((*_7));
match _22 {
0 => bb4,
1 => bb5,
2 => bb13,
3 => bb14,
9223372036854775807 => bb16,
_ => bb15
}
}
bb13 = {
_21.1 = !1_usize;
_22 = 9223372036854775807_isize;
RET = '\u{62c16}';
Goto(bb5)
}
bb14 = {
RET = '\u{aee31}';
_1 = _3;
_3 = _9;
_13 = [27201_u16,51357_u16,47674_u16,49854_u16,25771_u16];
_6 = _11;
_2 = [3888_u16,51463_u16,64662_u16,52133_u16,13249_u16];
_4 = _14;
_10 = [65514_u16,62984_u16,38268_u16,30821_u16,29939_u16];
_1 = _9;
_9 = _1;
_17 = RET <= RET;
_7 = _3;
_17 = true;
_14 = [(-6887754853849900712_i64),(-1900755841932341476_i64),(-3790795371748334060_i64),7724747491511276872_i64,(-7094230409373750973_i64),(-6338719535904824081_i64)];
_15 = 13959_i16 as f64;
_18 = [57438_u16,36192_u16,21147_u16,59236_u16,18067_u16];
_17 = true;
_18 = _13;
_11 = [8698_u16,15427_u16,25297_u16,18355_u16,18928_u16];
_17 = !false;
_3 = _9;
_2 = [38881_u16,47589_u16,14940_u16,18390_u16,24699_u16];
_3 = _5;
_21.1 = 124_i8 as usize;
_9 = _7;
_2 = [54174_u16,47139_u16,58731_u16,9517_u16,45924_u16];
Goto(bb4)
}
bb15 = {
_14 = _4;
_21.1 = 5_usize << _22;
_20 = core::ptr::addr_of!(_21);
_15 = 194633063113300079429082184069852456040_u128 as f64;
Goto(bb6)
}
bb16 = {
_29 = -184751465_i32;
_33 = [_32.fld1,RET,_26,_26];
_32.fld1 = _26;
_31 = _15 + _15;
_6 = [62027_u16,63874_u16,28055_u16,54287_u16,13038_u16];
_26 = _32.fld1;
_10 = [52976_u16,24816_u16,55552_u16,56238_u16,20738_u16];
_29 = !1954811712_i32;
_18 = [2126_u16,59399_u16,15873_u16,50493_u16,57704_u16];
_12 = _6;
Goto(bb17)
}
bb17 = {
Call(_39 = dump_var(7_usize, 26_usize, Move(_26), 22_usize, Move(_22), 18_usize, Move(_18), 29_usize, Move(_29)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(7_usize, 17_usize, Move(_17), 33_usize, Move(_33), 23_usize, Move(_23), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_39 = dump_var(7_usize, 12_usize, Move(_12), 2_usize, Move(_2), 40_usize, _40, 40_usize, _40), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: *const i64,mut _2: *const i64,mut _3: *const i64,mut _4: *const i64,mut _5: [u16; 5],mut _6: *const i64,mut _7: [u16; 5],mut _8: *const i64,mut _9: [u16; 5],mut _10: [u16; 5],mut _11: [u16; 5],mut _12: *const i64,mut _13: [i64; 6],mut _14: [u16; 5]) -> [u16; 5] {
mir! {
type RET = [u16; 5];
let _15: [i64; 6];
let _16: [u16; 5];
let _17: *const usize;
let _18: u32;
let _19: isize;
let _20: i32;
let _21: u128;
let _22: f32;
let _23: [u32; 6];
let _24: *const usize;
let _25: [u8; 7];
let _26: Adt53;
let _27: [char; 4];
let _28: i64;
let _29: u8;
let _30: [u8; 4];
let _31: [u16; 5];
let _32: u16;
let _33: char;
let _34: [u16; 5];
let _35: isize;
let _36: f32;
let _37: ();
let _38: ();
{
RET = [61527_u16,10602_u16,22088_u16,45173_u16,45027_u16];
_2 = _12;
_3 = _12;
_5 = [54153_u16,23928_u16,10401_u16,10108_u16,53145_u16];
_12 = _2;
RET = _11;
_15 = _13;
_11 = [16096_u16,40749_u16,5719_u16,50896_u16,60468_u16];
_4 = _8;
Goto(bb1)
}
bb1 = {
_6 = _2;
_1 = _4;
_13 = [(-4934672149201729836_i64),(-1900368255108428962_i64),(-3531224994598445859_i64),(-6894791864697767279_i64),(-3582930127130603960_i64),(-8683875610982083857_i64)];
_13 = _15;
_19 = 192068151_i32 as isize;
_14 = _9;
_10 = _11;
_11 = [14436_u16,1174_u16,63652_u16,54589_u16,59307_u16];
_12 = _8;
_16 = [20182_u16,61056_u16,16023_u16,9324_u16,54669_u16];
_7 = [49744_u16,15416_u16,23573_u16,9852_u16,21912_u16];
_12 = _2;
_18 = !2488502761_u32;
_18 = 4_usize as u32;
_20 = (-132987881_i32) >> _19;
_20 = 86514474_i32 | 955237012_i32;
_16 = [63272_u16,32566_u16,64327_u16,37493_u16,33313_u16];
_4 = _3;
Goto(bb2)
}
bb2 = {
_1 = _8;
_14 = _7;
_19 = 9223372036854775807_isize;
RET = [24617_u16,2544_u16,1989_u16,32987_u16,23915_u16];
_9 = [62226_u16,62673_u16,54084_u16,46901_u16,439_u16];
_5 = [49164_u16,38303_u16,26325_u16,26781_u16,7287_u16];
_23 = [_18,_18,_18,_18,_18,_18];
_10 = [57655_u16,49937_u16,62533_u16,5902_u16,22253_u16];
_16 = _7;
_1 = _6;
_25 = [155_u8,165_u8,37_u8,207_u8,51_u8,129_u8,128_u8];
_2 = _12;
_9 = _11;
_8 = _6;
_23 = [_18,_18,_18,_18,_18,_18];
_12 = _2;
_1 = _8;
_7 = [37124_u16,17092_u16,37286_u16,45408_u16,59098_u16];
_18 = 12174483913798702991_u64 as u32;
_21 = !48772800477445309081590231060565006699_u128;
_7 = [12175_u16,50775_u16,59080_u16,13162_u16,34022_u16];
_19 = 9223372036854775807_isize & (-58_isize);
_7 = [13481_u16,63796_u16,63575_u16,23758_u16,59103_u16];
Goto(bb3)
}
bb3 = {
_23 = [_18,_18,_18,_18,_18,_18];
_4 = _12;
_19 = (-9223372036854775808_isize);
_7 = [54269_u16,56898_u16,37112_u16,17072_u16,39002_u16];
RET = [49073_u16,52605_u16,50096_u16,54246_u16,38159_u16];
_8 = _3;
_3 = _2;
_12 = _6;
_11 = _5;
_18 = 83_i8 as u32;
_15 = [6156291842720069733_i64,987063349436388943_i64,8472992573976497715_i64,(-8998895150028543162_i64),1454708839489857680_i64,205353716736995786_i64];
match _19 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb4 = {
_1 = _8;
_14 = _7;
_19 = 9223372036854775807_isize;
RET = [24617_u16,2544_u16,1989_u16,32987_u16,23915_u16];
_9 = [62226_u16,62673_u16,54084_u16,46901_u16,439_u16];
_5 = [49164_u16,38303_u16,26325_u16,26781_u16,7287_u16];
_23 = [_18,_18,_18,_18,_18,_18];
_10 = [57655_u16,49937_u16,62533_u16,5902_u16,22253_u16];
_16 = _7;
_1 = _6;
_25 = [155_u8,165_u8,37_u8,207_u8,51_u8,129_u8,128_u8];
_2 = _12;
_9 = _11;
_8 = _6;
_23 = [_18,_18,_18,_18,_18,_18];
_12 = _2;
_1 = _8;
_7 = [37124_u16,17092_u16,37286_u16,45408_u16,59098_u16];
_18 = 12174483913798702991_u64 as u32;
_21 = !48772800477445309081590231060565006699_u128;
_7 = [12175_u16,50775_u16,59080_u16,13162_u16,34022_u16];
_19 = 9223372036854775807_isize & (-58_isize);
_7 = [13481_u16,63796_u16,63575_u16,23758_u16,59103_u16];
Goto(bb3)
}
bb5 = {
_6 = _2;
_1 = _4;
_13 = [(-4934672149201729836_i64),(-1900368255108428962_i64),(-3531224994598445859_i64),(-6894791864697767279_i64),(-3582930127130603960_i64),(-8683875610982083857_i64)];
_13 = _15;
_19 = 192068151_i32 as isize;
_14 = _9;
_10 = _11;
_11 = [14436_u16,1174_u16,63652_u16,54589_u16,59307_u16];
_12 = _8;
_16 = [20182_u16,61056_u16,16023_u16,9324_u16,54669_u16];
_7 = [49744_u16,15416_u16,23573_u16,9852_u16,21912_u16];
_12 = _2;
_18 = !2488502761_u32;
_18 = 4_usize as u32;
_20 = (-132987881_i32) >> _19;
_20 = 86514474_i32 | 955237012_i32;
_16 = [63272_u16,32566_u16,64327_u16,37493_u16,33313_u16];
_4 = _3;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_5 = [62621_u16,21949_u16,9712_u16,45659_u16,2510_u16];
_21 = 309608170948276503030814828441565281148_u128;
_18 = 1_usize as u32;
_12 = _8;
_3 = _8;
_19 = (-36_isize);
_15 = [(-2641575310217503326_i64),8449270580115544073_i64,(-7508928229195236247_i64),(-6530801147644187821_i64),6043405228606062676_i64,2205329567765468716_i64];
RET = _10;
_19 = false as isize;
_3 = _12;
RET = [8754_u16,9193_u16,25142_u16,63112_u16,64305_u16];
match _21 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb9,
5 => bb10,
309608170948276503030814828441565281148 => bb12,
_ => bb11
}
}
bb9 = {
_23 = [_18,_18,_18,_18,_18,_18];
_4 = _12;
_19 = (-9223372036854775808_isize);
_7 = [54269_u16,56898_u16,37112_u16,17072_u16,39002_u16];
RET = [49073_u16,52605_u16,50096_u16,54246_u16,38159_u16];
_8 = _3;
_3 = _2;
_12 = _6;
_11 = _5;
_18 = 83_i8 as u32;
_15 = [6156291842720069733_i64,987063349436388943_i64,8472992573976497715_i64,(-8998895150028543162_i64),1454708839489857680_i64,205353716736995786_i64];
match _19 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb10 = {
Return()
}
bb11 = {
_6 = _2;
_1 = _4;
_13 = [(-4934672149201729836_i64),(-1900368255108428962_i64),(-3531224994598445859_i64),(-6894791864697767279_i64),(-3582930127130603960_i64),(-8683875610982083857_i64)];
_13 = _15;
_19 = 192068151_i32 as isize;
_14 = _9;
_10 = _11;
_11 = [14436_u16,1174_u16,63652_u16,54589_u16,59307_u16];
_12 = _8;
_16 = [20182_u16,61056_u16,16023_u16,9324_u16,54669_u16];
_7 = [49744_u16,15416_u16,23573_u16,9852_u16,21912_u16];
_12 = _2;
_18 = !2488502761_u32;
_18 = 4_usize as u32;
_20 = (-132987881_i32) >> _19;
_20 = 86514474_i32 | 955237012_i32;
_16 = [63272_u16,32566_u16,64327_u16,37493_u16,33313_u16];
_4 = _3;
Goto(bb2)
}
bb12 = {
_20 = -(-378241660_i32);
RET = _9;
_27 = ['\u{7d7d6}','\u{3e9ab}','\u{f13fa}','\u{cffad}'];
_3 = core::ptr::addr_of!(_28);
_2 = core::ptr::addr_of!((*_3));
_30 = [56_u8,205_u8,154_u8,237_u8];
Goto(bb13)
}
bb13 = {
_13 = [5120291554433860652_i64,7597444347871059647_i64,(-8096077795619526643_i64),(-5980912717188803056_i64),2625871798870606746_i64,4328384186703475313_i64];
_28 = !7724197306117255276_i64;
_15 = [(*_2),(*_3),(*_3),(*_2),_28,(*_3)];
_15 = [(*_2),(*_2),(*_2),(*_3),_28,(*_2)];
match _21 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
309608170948276503030814828441565281148 => bb14,
_ => bb12
}
}
bb14 = {
_9 = _7;
_27 = ['\u{830d0}','\u{dc1f9}','\u{929b1}','\u{10a0bc}'];
_22 = _28 as f32;
_31 = [12897_u16,59206_u16,15747_u16,39321_u16,5143_u16];
_1 = _3;
_7 = _9;
_9 = [16000_u16,50821_u16,59263_u16,63846_u16,63624_u16];
_23 = [_18,_18,_18,_18,_18,_18];
_19 = 9223372036854775807_isize;
_29 = 111_u8;
_3 = _6;
_21 = 228953482797714038735470662571554482407_u128 & 33946939080607838903225625235529613360_u128;
_32 = 64877_u16 + 11997_u16;
RET = [_32,_32,_32,_32,_32];
_13 = [(*_2),(*_2),(*_2),(*_2),(*_2),_28];
_13 = [(*_2),(*_2),(*_2),(*_2),(*_2),(*_2)];
_8 = core::ptr::addr_of!((*_2));
_4 = core::ptr::addr_of!((*_2));
_18 = !3731024507_u32;
_21 = !173047795056565455622532264081423416213_u128;
RET = _16;
RET = [_32,_32,_32,_32,_32];
_34 = [_32,_32,_32,_32,_32];
_22 = _32 as f32;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(8_usize, 9_usize, Move(_9), 31_usize, Move(_31), 13_usize, Move(_13), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(8_usize, 28_usize, Move(_28), 14_usize, Move(_14), 30_usize, Move(_30), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(8_usize, 15_usize, Move(_15), 18_usize, Move(_18), 19_usize, Move(_19), 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *const i64,mut _2: *const i64,mut _3: [u32; 6],mut _4: [u16; 5],mut _5: [i64; 6]) -> [u16; 5] {
mir! {
type RET = [u16; 5];
let _6: *const usize;
let _7: Adt59;
let _8: [bool; 7];
let _9: [u8; 7];
let _10: u64;
let _11: (bool, *mut u16);
let _12: u64;
let _13: f64;
let _14: usize;
let _15: (f32, &'static i16);
let _16: f64;
let _17: [i64; 6];
let _18: [u32; 6];
let _19: f64;
let _20: *mut f64;
let _21: f32;
let _22: isize;
let _23: [u32; 6];
let _24: ([u32; 6],);
let _25: ([u32; 6],);
let _26: Adt43;
let _27: bool;
let _28: f64;
let _29: Adt53;
let _30: Adt59;
let _31: u16;
let _32: isize;
let _33: char;
let _34: ();
let _35: ();
{
_4 = [34019_u16,17148_u16,20869_u16,40084_u16,10284_u16];
RET = [19473_u16,15716_u16,40523_u16,59352_u16,39462_u16];
_2 = _1;
_2 = _1;
_3 = [2704597526_u32,392997333_u32,1920607240_u32,1368600453_u32,3605701875_u32,3155565942_u32];
_3 = [3067010716_u32,4258688452_u32,2022473514_u32,2867162743_u32,1727544922_u32,1871848536_u32];
_1 = _2;
RET = [28254_u16,459_u16,9055_u16,30369_u16,46950_u16];
_3 = [2092539245_u32,1398904558_u32,1357051899_u32,1263732888_u32,2744530614_u32,991983897_u32];
RET = [44690_u16,1996_u16,36027_u16,50013_u16,50719_u16];
_5 = [(-2612767164756431391_i64),(-7276964300151674195_i64),7363262535051199326_i64,5383762844367702873_i64,(-2759757074804850080_i64),6826077251229403450_i64];
_8 = [false,false,true,false,true,false,false];
_2 = _1;
_8 = [false,true,false,false,true,false,true];
_5 = [5111730940891252637_i64,(-5976645143205079481_i64),6086077780569945652_i64,(-8261420030783304609_i64),5833022350126955427_i64,5383349329492132099_i64];
_3 = [291394807_u32,1424766694_u32,297421399_u32,1075899599_u32,3681471696_u32,4068410620_u32];
RET = _4;
Goto(bb1)
}
bb1 = {
RET = [30649_u16,24237_u16,60124_u16,432_u16,35835_u16];
_10 = 14220267103603206824_u64;
_9 = [138_u8,208_u8,252_u8,172_u8,48_u8,0_u8,192_u8];
_10 = 56003_u16 as u64;
_12 = _10 + _10;
_11.0 = false;
_1 = _2;
_11.0 = true;
_12 = !_10;
_4 = [13362_u16,5258_u16,15747_u16,47227_u16,29032_u16];
_6 = core::ptr::addr_of!(_14);
RET = [32752_u16,45594_u16,4223_u16,1882_u16,64312_u16];
_1 = _2;
_14 = !6176250264636276100_usize;
_6 = core::ptr::addr_of!((*_6));
_9 = [76_u8,48_u8,226_u8,68_u8,48_u8,37_u8,219_u8];
Call(_10 = fn10(_2, _5, _8, _1, _12, RET, _1, _5, _5, _9, _8, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_12 = !_10;
_1 = _2;
_13 = (-9223372036854775808_isize) as f64;
_15.0 = 30_i8 as f32;
RET = [29867_u16,5201_u16,804_u16,28620_u16,35035_u16];
_11.0 = !true;
_12 = _10;
Goto(bb3)
}
bb3 = {
_11.0 = false;
_11.0 = true;
_10 = !_12;
_6 = core::ptr::addr_of!((*_6));
Goto(bb4)
}
bb4 = {
_1 = _2;
_6 = core::ptr::addr_of!(_14);
_16 = _13 - _13;
RET = _4;
_1 = _2;
_10 = _12 + _12;
_4 = [42907_u16,35055_u16,50756_u16,49005_u16,29381_u16];
_10 = _12 & _12;
_4 = [4860_u16,14346_u16,32607_u16,22251_u16,9096_u16];
_6 = core::ptr::addr_of!(_14);
_2 = _1;
_5 = [(-7782219323624207292_i64),(-1176950908972196067_i64),7343061114878778216_i64,5773556347521197708_i64,2142104282726652558_i64,(-2894620044888827105_i64)];
_11.0 = false;
_4 = [11072_u16,44815_u16,32775_u16,52911_u16,48897_u16];
RET = _4;
_9 = [163_u8,85_u8,22_u8,66_u8,205_u8,114_u8,113_u8];
_6 = core::ptr::addr_of!((*_6));
_15.0 = 55852_u16 as f32;
_14 = 6_usize;
_14 = 7_usize ^ 3_usize;
_5 = [(-3060796410430867960_i64),4419045038753469686_i64,2594551891598623513_i64,9189766500008751408_i64,(-7318157908520264704_i64),7732420589792390518_i64];
_8 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_16 = _13 + _13;
_10 = _15.0 as u64;
Call(_11 = fn11(_5, _1, _4, (*_6), _1, _1, _9, _2, _4, _2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_9 = [236_u8,47_u8,143_u8,51_u8,176_u8,105_u8,46_u8];
RET = [47035_u16,6867_u16,41597_u16,5452_u16,24673_u16];
_8 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_13 = -_16;
_14 = _13 as usize;
_9 = [59_u8,30_u8,216_u8,2_u8,168_u8,20_u8,225_u8];
_4 = [54844_u16,7504_u16,58442_u16,7087_u16,9149_u16];
_6 = core::ptr::addr_of!((*_6));
RET = _4;
_10 = _12 + _12;
_10 = !_12;
_17 = _5;
_15.0 = 1654118028_i32 as f32;
_18 = _3;
_9 = [104_u8,58_u8,110_u8,94_u8,29_u8,51_u8,85_u8];
_12 = _10 << (*_6);
_19 = _10 as f64;
_19 = -_13;
_13 = -_16;
_9 = [218_u8,65_u8,245_u8,138_u8,41_u8,120_u8,255_u8];
_14 = 7169_i16 as usize;
Goto(bb6)
}
bb6 = {
RET = [2257_u16,25729_u16,30487_u16,4551_u16,60580_u16];
_6 = core::ptr::addr_of!(_14);
RET = [64672_u16,11769_u16,31166_u16,64599_u16,34199_u16];
_14 = !5993539437556897320_usize;
_21 = 27296_u16 as f32;
_14 = !5263368399465674860_usize;
_17 = [(-6155685566852129062_i64),(-5992967686028224656_i64),8123177007465766331_i64,1592032118981615556_i64,(-7959424014737889409_i64),(-194387720449294956_i64)];
_15.0 = _21 * _21;
_1 = _2;
_13 = -_19;
_20 = core::ptr::addr_of_mut!(_16);
_4 = [58063_u16,45787_u16,51584_u16,12867_u16,720_u16];
_11.0 = !true;
_24.0 = _18;
_23 = _3;
_23 = [1732101354_u32,2120548812_u32,3598915196_u32,3202017028_u32,1859423515_u32,1029907480_u32];
_1 = _2;
Goto(bb7)
}
bb7 = {
_18 = [2632153150_u32,1507973029_u32,3281792401_u32,3481933542_u32,3959279379_u32,2641487529_u32];
_24.0 = [2208184224_u32,3853890026_u32,2734909618_u32,3084260376_u32,1942250780_u32,1953392865_u32];
_21 = _15.0 * _15.0;
_19 = 132_u8 as f64;
_25.0 = [687658415_u32,1065132152_u32,906875880_u32,3669604759_u32,1465774399_u32,2568788008_u32];
_14 = 6518288679557322466_usize;
_6 = core::ptr::addr_of!((*_6));
_11.0 = _15.0 <= _21;
_11.0 = true;
_23 = _3;
_22 = 9223372036854775807_isize;
_17 = [(-3031900792967632971_i64),(-2769438970823405379_i64),(-8682873168523539426_i64),(-8145694070358620119_i64),(-5316726115766183471_i64),(-6945604492883897679_i64)];
_17 = [(-748293309748007340_i64),7434052928528349719_i64,(-6035402782154528845_i64),(-2036727525862538532_i64),(-3757925421521094831_i64),8296217759580616340_i64];
RET = _4;
_23 = [1273776199_u32,38856675_u32,3643900691_u32,3885190177_u32,814861817_u32,1374127486_u32];
_25 = _24;
_22 = (-9223372036854775808_isize);
_26 = Adt43::Variant1 { fld0: (*_6),fld1: (*_20) };
_24 = (_23,);
_25 = (_24.0,);
_24 = _25;
_4 = [6273_u16,32110_u16,25906_u16,54416_u16,50296_u16];
SetDiscriminant(_26, 0);
place!(Field::<bool>(Variant(_26, 0), 0)) = (*_20) >= (*_20);
place!(Field::<[bool; 7]>(Variant(_26, 0), 1)) = [Field::<bool>(Variant(_26, 0), 0),Field::<bool>(Variant(_26, 0), 0),Field::<bool>(Variant(_26, 0), 0),Field::<bool>(Variant(_26, 0), 0),Field::<bool>(Variant(_26, 0), 0),Field::<bool>(Variant(_26, 0), 0),_11.0];
_15.0 = _21;
_26 = Adt43::Variant1 { fld0: (*_6),fld1: (*_20) };
_25.0 = _18;
_1 = _2;
Goto(bb8)
}
bb8 = {
place!(Field::<f64>(Variant(_26, 1), 1)) = -_19;
_11.0 = (*_20) == (*_20);
_10 = _12;
_14 = (-4277244111802855539321132275226077058_i128) as usize;
SetDiscriminant(_26, 0);
_1 = _2;
_9 = [81_u8,151_u8,22_u8,75_u8,62_u8,111_u8,28_u8];
_5 = _17;
_23 = _3;
_27 = !_11.0;
_1 = _2;
place!(Field::<bool>(Variant(_26, 0), 0)) = !_11.0;
_2 = _1;
_11.0 = Field::<bool>(Variant(_26, 0), 0) ^ Field::<bool>(Variant(_26, 0), 0);
_13 = _14 as f64;
match _22 {
0 => bb5,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb10,
6 => bb11,
340282366920938463454151235394913435648 => bb13,
_ => bb12
}
}
bb9 = {
_12 = !_10;
_1 = _2;
_13 = (-9223372036854775808_isize) as f64;
_15.0 = 30_i8 as f32;
RET = [29867_u16,5201_u16,804_u16,28620_u16,35035_u16];
_11.0 = !true;
_12 = _10;
Goto(bb3)
}
bb10 = {
RET = [2257_u16,25729_u16,30487_u16,4551_u16,60580_u16];
_6 = core::ptr::addr_of!(_14);
RET = [64672_u16,11769_u16,31166_u16,64599_u16,34199_u16];
_14 = !5993539437556897320_usize;
_21 = 27296_u16 as f32;
_14 = !5263368399465674860_usize;
_17 = [(-6155685566852129062_i64),(-5992967686028224656_i64),8123177007465766331_i64,1592032118981615556_i64,(-7959424014737889409_i64),(-194387720449294956_i64)];
_15.0 = _21 * _21;
_1 = _2;
_13 = -_19;
_20 = core::ptr::addr_of_mut!(_16);
_4 = [58063_u16,45787_u16,51584_u16,12867_u16,720_u16];
_11.0 = !true;
_24.0 = _18;
_23 = _3;
_23 = [1732101354_u32,2120548812_u32,3598915196_u32,3202017028_u32,1859423515_u32,1029907480_u32];
_1 = _2;
Goto(bb7)
}
bb11 = {
RET = [30649_u16,24237_u16,60124_u16,432_u16,35835_u16];
_10 = 14220267103603206824_u64;
_9 = [138_u8,208_u8,252_u8,172_u8,48_u8,0_u8,192_u8];
_10 = 56003_u16 as u64;
_12 = _10 + _10;
_11.0 = false;
_1 = _2;
_11.0 = true;
_12 = !_10;
_4 = [13362_u16,5258_u16,15747_u16,47227_u16,29032_u16];
_6 = core::ptr::addr_of!(_14);
RET = [32752_u16,45594_u16,4223_u16,1882_u16,64312_u16];
_1 = _2;
_14 = !6176250264636276100_usize;
_6 = core::ptr::addr_of!((*_6));
_9 = [76_u8,48_u8,226_u8,68_u8,48_u8,37_u8,219_u8];
Call(_10 = fn10(_2, _5, _8, _1, _12, RET, _1, _5, _5, _9, _8, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_1 = _2;
_6 = core::ptr::addr_of!(_14);
_16 = _13 - _13;
RET = _4;
_1 = _2;
_10 = _12 + _12;
_4 = [42907_u16,35055_u16,50756_u16,49005_u16,29381_u16];
_10 = _12 & _12;
_4 = [4860_u16,14346_u16,32607_u16,22251_u16,9096_u16];
_6 = core::ptr::addr_of!(_14);
_2 = _1;
_5 = [(-7782219323624207292_i64),(-1176950908972196067_i64),7343061114878778216_i64,5773556347521197708_i64,2142104282726652558_i64,(-2894620044888827105_i64)];
_11.0 = false;
_4 = [11072_u16,44815_u16,32775_u16,52911_u16,48897_u16];
RET = _4;
_9 = [163_u8,85_u8,22_u8,66_u8,205_u8,114_u8,113_u8];
_6 = core::ptr::addr_of!((*_6));
_15.0 = 55852_u16 as f32;
_14 = 6_usize;
_14 = 7_usize ^ 3_usize;
_5 = [(-3060796410430867960_i64),4419045038753469686_i64,2594551891598623513_i64,9189766500008751408_i64,(-7318157908520264704_i64),7732420589792390518_i64];
_8 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_16 = _13 + _13;
_10 = _15.0 as u64;
Call(_11 = fn11(_5, _1, _4, (*_6), _1, _1, _9, _2, _4, _2), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_28 = -(*_20);
place!(Field::<isize>(Variant(_26, 0), 2)) = -_22;
place!(Field::<[bool; 7]>(Variant(_26, 0), 1)) = [_27,_27,Field::<bool>(Variant(_26, 0), 0),_27,Field::<bool>(Variant(_26, 0), 0),_27,Field::<bool>(Variant(_26, 0), 0)];
_13 = (*_20);
_24 = (_25.0,);
_21 = _15.0;
_11.0 = Field::<bool>(Variant(_26, 0), 0);
_12 = _10;
place!(Field::<bool>(Variant(_26, 0), 0)) = !_11.0;
_22 = Field::<isize>(Variant(_26, 0), 2) | Field::<isize>(Variant(_26, 0), 2);
_5 = _17;
place!(Field::<bool>(Variant(_26, 0), 0)) = _27;
_5 = [5514676953259728029_i64,7749841462127641735_i64,197450811266091468_i64,5698900190466359616_i64,(-8998671529826423223_i64),2197926425876253130_i64];
Call(RET = fn16(_9, _11.0, Move(_26), _8, _8, _24.0, _6, _8), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_1 = _2;
_24 = (_23,);
_32 = _22 << _10;
_20 = core::ptr::addr_of_mut!(_28);
_11.0 = !_27;
_20 = core::ptr::addr_of_mut!(_28);
_15.0 = _21;
_33 = '\u{90a3e}';
_21 = _15.0 + _15.0;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(9_usize, 17_usize, Move(_17), 10_usize, Move(_10), 25_usize, Move(_25), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(9_usize, 22_usize, Move(_22), 4_usize, Move(_4), 33_usize, Move(_33), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: *const i64,mut _2: [i64; 6],mut _3: [bool; 7],mut _4: *const i64,mut _5: u64,mut _6: [u16; 5],mut _7: *const i64,mut _8: [i64; 6],mut _9: [i64; 6],mut _10: [u8; 7],mut _11: [bool; 7],mut _12: *const i64,mut _13: *const i64) -> u64 {
mir! {
type RET = u64;
let _14: [i64; 6];
let _15: usize;
let _16: bool;
let _17: [u8; 4];
let _18: i16;
let _19: f32;
let _20: isize;
let _21: u8;
let _22: isize;
let _23: [u16; 5];
let _24: [bool; 7];
let _25: bool;
let _26: i64;
let _27: ();
let _28: ();
{
_12 = _13;
RET = !_5;
RET = !_5;
_7 = _12;
_12 = _4;
RET = !_5;
_5 = RET - RET;
_8 = [3110785506450561172_i64,1124801501843449799_i64,862657421844653203_i64,7812121961631285033_i64,3236973431798510940_i64,9125438891348631245_i64];
_7 = _13;
_14 = [3472673946849140608_i64,(-3057071329683684586_i64),(-3520417928634273321_i64),(-1062052120890551511_i64),7726336790118190384_i64,7594545659869822307_i64];
_12 = _7;
_13 = _7;
Goto(bb1)
}
bb1 = {
RET = _5;
Goto(bb2)
}
bb2 = {
_10 = [64_u8,18_u8,161_u8,8_u8,165_u8,14_u8,118_u8];
_1 = _13;
_7 = _13;
_8 = _2;
_3 = _11;
_17 = [125_u8,136_u8,202_u8,162_u8];
RET = _5;
_14 = [1040034534030034514_i64,(-8662766487108082379_i64),6141771684597413072_i64,(-3666832267798545194_i64),1963216841392808948_i64,1950298279333847697_i64];
_15 = 1_usize;
_9[_15] = (-55863570258372331563596003483569388728_i128) as i64;
_6 = [807_u16,58420_u16,20384_u16,23459_u16,46244_u16];
_17[_15] = _15 as u8;
_17 = [_10[_15],_10[_15],_10[_15],_10[_15]];
_13 = _1;
_1 = _12;
_3 = _11;
match _8[_15] {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463457397962288563131975 => bb11,
_ => bb10
}
}
bb3 = {
RET = _5;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_6[_15] = 339928542843899370088415318186941878365_u128 as u16;
_15 = 9876848551624243807_usize;
_12 = _4;
RET = 190_u8 as u64;
_3 = _11;
_2 = [2114813766252624383_i64,4454067330609825996_i64,(-3057464679386778760_i64),(-6131387734197577203_i64),1562726913658080297_i64,6333140744231159491_i64];
_18 = -18469_i16;
_3 = _11;
_18 = 3771_i16;
_9 = [1619071473143764245_i64,(-3937727816562791486_i64),(-5645735815869976408_i64),(-5028191087734943164_i64),(-59892105162948132_i64),5453733147583411918_i64];
_10 = [254_u8,70_u8,174_u8,115_u8,168_u8,136_u8,162_u8];
_10 = [179_u8,83_u8,178_u8,110_u8,129_u8,29_u8,228_u8];
_1 = _13;
_19 = _15 as f32;
_18 = 1909_i16;
_15 = 1098792481_u32 as usize;
RET = _5 ^ _5;
_10 = [92_u8,195_u8,59_u8,184_u8,7_u8,110_u8,105_u8];
_13 = _7;
RET = _5;
_20 = !9223372036854775807_isize;
match _18 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb10,
4 => bb5,
5 => bb7,
6 => bb12,
1909 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_9 = [4152717380843876124_i64,5688035481145521021_i64,(-3582294097624393394_i64),498509950140066206_i64,(-3690511185799650713_i64),6848879881162550640_i64];
_15 = !4_usize;
_16 = true;
_20 = 9223372036854775807_isize;
_5 = !RET;
_16 = true;
_1 = _13;
_17 = [165_u8,11_u8,232_u8,54_u8];
_3 = [_16,_16,_16,_16,_16,_16,_16];
_18 = _20 as i16;
_23 = _6;
_10 = [16_u8,61_u8,200_u8,133_u8,169_u8,28_u8,56_u8];
_24 = [_16,_16,_16,_16,_16,_16,_16];
_21 = 260882300789140817644513462246898139033_u128 as u8;
_9 = [(-1331099230089009375_i64),(-6880635545237847432_i64),(-7105735383300581783_i64),5474390773933432485_i64,2237013552454834371_i64,(-7665082369989774886_i64)];
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(10_usize, 23_usize, Move(_23), 20_usize, Move(_20), 8_usize, Move(_8), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(10_usize, 6_usize, Move(_6), 21_usize, Move(_21), 16_usize, Move(_16), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [i64; 6],mut _2: *const i64,mut _3: [u16; 5],mut _4: usize,mut _5: *const i64,mut _6: *const i64,mut _7: [u8; 7],mut _8: *const i64,mut _9: [u16; 5],mut _10: *const i64) -> (bool, *mut u16) {
mir! {
type RET = (bool, *mut u16);
let _11: f64;
let _12: [i64; 6];
let _13: [u16; 5];
let _14: f64;
let _15: [u16; 5];
let _16: isize;
let _17: [u32; 6];
let _18: i32;
let _19: [u16; 5];
let _20: [i64; 6];
let _21: bool;
let _22: Adt59;
let _23: char;
let _24: [u8; 4];
let _25: *mut f64;
let _26: bool;
let _27: Adt52;
let _28: *mut f64;
let _29: usize;
let _30: u32;
let _31: isize;
let _32: char;
let _33: Adt52;
let _34: bool;
let _35: bool;
let _36: isize;
let _37: Adt50;
let _38: ();
let _39: ();
{
_3 = [61057_u16,28823_u16,5603_u16,39104_u16,58947_u16];
_7 = [39_u8,183_u8,128_u8,7_u8,100_u8,35_u8,73_u8];
RET.0 = _4 < _4;
_14 = _4 as f64;
_13 = _3;
_3 = _9;
_11 = 667608122_i32 as f64;
_1 = [(-2894135421081718731_i64),1202266275560526530_i64,6738208731478353307_i64,2389442028357576408_i64,7962313186175577498_i64,(-4201605861951710167_i64)];
_15 = [57912_u16,46023_u16,33353_u16,17489_u16,54274_u16];
_8 = _6;
_3 = [25653_u16,38779_u16,5942_u16,23936_u16,26522_u16];
_2 = _5;
_12 = [416584761218392986_i64,1056020914326833383_i64,(-2078640697725308461_i64),(-1210954789111211976_i64),5070810487233781958_i64,(-3791223282336400877_i64)];
_15 = _13;
_3 = [38975_u16,38150_u16,56910_u16,16043_u16,61601_u16];
_3 = [4669_u16,59924_u16,57368_u16,13349_u16,34625_u16];
Goto(bb1)
}
bb1 = {
_7 = [215_u8,240_u8,106_u8,42_u8,65_u8,105_u8,205_u8];
_2 = _8;
_11 = -_14;
RET.0 = !true;
_15 = [46292_u16,1196_u16,41673_u16,34431_u16,5_u16];
_4 = 12310849266722862231_usize - 13705306477552524962_usize;
_15 = _9;
_9 = [27732_u16,53845_u16,33556_u16,33166_u16,28035_u16];
_9 = _13;
_6 = _2;
_11 = 11759_u16 as f64;
_2 = _8;
RET.0 = !false;
_4 = 13157836496257746275_u64 as usize;
_5 = _2;
Call(_16 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = [55982_u16,61117_u16,37632_u16,13858_u16,41405_u16];
_10 = _2;
_12 = [(-1096853737308460804_i64),7167689779494881056_i64,7539054384742393382_i64,7457532357729562797_i64,(-3348626353826427051_i64),9042711636350433376_i64];
_12 = _1;
_8 = _2;
_8 = _2;
_13 = [43426_u16,38750_u16,14814_u16,17675_u16,16412_u16];
_2 = _10;
_16 = -(-9223372036854775808_isize);
RET.0 = !false;
_13 = [25220_u16,3052_u16,49528_u16,41115_u16,53035_u16];
_17 = [3029882135_u32,2400355320_u32,1608771260_u32,572312574_u32,3058626223_u32,213464015_u32];
_3 = [4493_u16,25696_u16,26455_u16,18952_u16,4491_u16];
_1 = [7773077813078823515_i64,(-5008449797082520323_i64),4904344151242957075_i64,(-4591492103246965161_i64),(-721350263257687250_i64),1259015318800317844_i64];
Goto(bb3)
}
bb3 = {
_14 = _11 + _11;
_13 = [17689_u16,60147_u16,24194_u16,52115_u16,7901_u16];
RET.0 = false;
_2 = _8;
_14 = 7719531225022390856_u64 as f64;
_6 = _2;
_15 = _3;
RET.0 = !false;
_1 = [(-7718934757018078053_i64),6439484877884752272_i64,(-643463638357348681_i64),(-4246289335961226068_i64),991791048131470224_i64,(-7284642808127904628_i64)];
_1 = [(-5138292801013707381_i64),3208143476366592804_i64,4645092440017458115_i64,4282261518128020378_i64,5342816638871284703_i64,5151507564839792077_i64];
_11 = _16 as f64;
_6 = _2;
RET.0 = !false;
_5 = _6;
_6 = _5;
Goto(bb4)
}
bb4 = {
_3 = _15;
_2 = _8;
_3 = [36386_u16,6150_u16,40264_u16,64723_u16,2659_u16];
_19 = _15;
_6 = _5;
_19 = _9;
_1 = _12;
_7 = [172_u8,57_u8,214_u8,68_u8,234_u8,23_u8,204_u8];
_18 = !269766065_i32;
_1 = [5447995464250244139_i64,4967251027667749134_i64,(-8969591463235230335_i64),(-4484825210846240760_i64),1596015725589090491_i64,3635093943428677457_i64];
_6 = _2;
RET.0 = false;
_14 = _11;
_15 = _13;
Goto(bb5)
}
bb5 = {
_24 = [33_u8,71_u8,213_u8,210_u8];
_23 = '\u{bcca9}';
_20 = _12;
_5 = _6;
_15 = [19728_u16,17204_u16,22991_u16,50955_u16,44191_u16];
_14 = _11 + _11;
_1 = [5692270301359384256_i64,3604171799135919607_i64,4292513882459439303_i64,4406497159354717156_i64,(-3848410123232254728_i64),422971461750498520_i64];
_21 = !RET.0;
_6 = _8;
_27.fld1 = (_17,);
_17 = [1608932351_u32,709320085_u32,22347499_u32,145968834_u32,1887857143_u32,561918205_u32];
_27.fld6 = _18 as f32;
_27.fld5 = 29_u8;
_27.fld6 = _14 as f32;
_20 = [(-3227361922976440149_i64),7955411849955269516_i64,6615856865321927322_i64,6025994067708913993_i64,(-3388360235165839743_i64),6586673901437359801_i64];
_10 = _8;
_1 = [(-5054788182986009908_i64),5415910840876139441_i64,596088758069482994_i64,(-235856238423009384_i64),5533382352609095343_i64,(-1527465634281664661_i64)];
_17 = _27.fld1.0;
_30 = _18 as u32;
_15 = [51312_u16,42980_u16,12482_u16,53670_u16,63238_u16];
_27.fld2 = !6613593220959386512_u64;
_10 = _2;
_27.fld0.0 = _21;
_6 = _2;
_27.fld3 = _4;
match _27.fld5 {
0 => bb1,
1 => bb2,
2 => bb3,
29 => bb7,
_ => bb6
}
}
bb6 = {
_9 = [55982_u16,61117_u16,37632_u16,13858_u16,41405_u16];
_10 = _2;
_12 = [(-1096853737308460804_i64),7167689779494881056_i64,7539054384742393382_i64,7457532357729562797_i64,(-3348626353826427051_i64),9042711636350433376_i64];
_12 = _1;
_8 = _2;
_8 = _2;
_13 = [43426_u16,38750_u16,14814_u16,17675_u16,16412_u16];
_2 = _10;
_16 = -(-9223372036854775808_isize);
RET.0 = !false;
_13 = [25220_u16,3052_u16,49528_u16,41115_u16,53035_u16];
_17 = [3029882135_u32,2400355320_u32,1608771260_u32,572312574_u32,3058626223_u32,213464015_u32];
_3 = [4493_u16,25696_u16,26455_u16,18952_u16,4491_u16];
_1 = [7773077813078823515_i64,(-5008449797082520323_i64),4904344151242957075_i64,(-4591492103246965161_i64),(-721350263257687250_i64),1259015318800317844_i64];
Goto(bb3)
}
bb7 = {
_13 = [43542_u16,56318_u16,32129_u16,24266_u16,55744_u16];
_16 = (-20_isize) * 9223372036854775807_isize;
_27.fld0.0 = _21;
_3 = [40191_u16,22961_u16,25942_u16,62011_u16,828_u16];
_26 = !_27.fld0.0;
_15 = _3;
_27.fld5 = !23_u8;
Call(_17 = fn12(_5, _20, _2, _2, _9), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_14 = 86199441440694312647316059870883615257_i128 as f64;
_23 = '\u{917d7}';
_33.fld6 = _27.fld6;
_29 = 327792844814706856647530970893996050853_u128 as usize;
_34 = RET.0;
_33.fld2 = _27.fld2 << _27.fld2;
_28 = core::ptr::addr_of_mut!(_14);
_33.fld3 = _27.fld3;
_12 = [5330598803347106220_i64,(-30271942141206594_i64),1619478402838248290_i64,(-7706884009688229977_i64),(-1993898438094531017_i64),(-7529785044486215964_i64)];
_33.fld4 = _7;
_29 = !_27.fld3;
_33.fld1 = (_27.fld1.0,);
_34 = _18 <= _18;
_20 = _1;
_35 = _34 ^ _26;
_19 = [44973_u16,16373_u16,21080_u16,24188_u16,2386_u16];
_27.fld7 = _5;
_6 = _5;
_36 = -_16;
_5 = _2;
_33.fld3 = _27.fld3;
Call(RET = fn13(_33.fld1.0, _7, _27.fld1, _19, _9, _27.fld7, _15, _2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_1 = [(-6055524833426897000_i64),(-3529159179464898709_i64),(-1989364911538922687_i64),(-3185877495120576698_i64),(-7726486961174332762_i64),(-8703305228976634856_i64)];
_31 = _36;
_33.fld7 = _6;
_27.fld0 = RET;
_27 = Adt52 { fld0: RET,fld1: _33.fld1,fld2: _33.fld2,fld3: _33.fld3,fld4: _7,fld5: 55_u8,fld6: _33.fld6,fld7: _5 };
_11 = -(*_28);
RET = _27.fld0;
_33.fld1 = (_17,);
_5 = _33.fld7;
_21 = RET.0;
_33.fld1 = (_17,);
_27.fld3 = _33.fld3;
RET = _27.fld0;
_5 = _2;
Goto(bb10)
}
bb10 = {
Call(_38 = dump_var(11_usize, 31_usize, Move(_31), 13_usize, Move(_13), 30_usize, Move(_30), 12_usize, Move(_12)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(11_usize, 34_usize, Move(_34), 15_usize, Move(_15), 3_usize, Move(_3), 24_usize, Move(_24)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_38 = dump_var(11_usize, 19_usize, Move(_19), 20_usize, Move(_20), 4_usize, Move(_4), 39_usize, _39), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: *const i64,mut _2: [i64; 6],mut _3: *const i64,mut _4: *const i64,mut _5: [u16; 5]) -> [u32; 6] {
mir! {
type RET = [u32; 6];
let _6: *mut f64;
let _7: ([u32; 6], usize, ([u32; 6],), i8);
let _8: Adt43;
let _9: u16;
let _10: [u16; 5];
let _11: ([u32; 6], usize, ([u32; 6],), i8);
let _12: i128;
let _13: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _14: [i64; 6];
let _15: [i16; 4];
let _16: (bool, *mut u16);
let _17: *const i128;
let _18: Adt59;
let _19: [i16; 4];
let _20: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _21: [u8; 7];
let _22: (u64, i32, *mut i32, u32, u16, *const i128);
let _23: Adt59;
let _24: char;
let _25: Adt49;
let _26: [u8; 4];
let _27: isize;
let _28: [bool; 7];
let _29: (u64, i32, *mut i32, u32, u16, *const i128);
let _30: [u8; 4];
let _31: ();
let _32: ();
{
RET = [3402182283_u32,1522345157_u32,1318670745_u32,2635215110_u32,3268140137_u32,3419227516_u32];
RET = [3270956343_u32,4079790969_u32,1245283298_u32,2970474385_u32,1326706869_u32,2340205770_u32];
_2 = [2809319370191272307_i64,(-282899058490339290_i64),167087626893816240_i64,(-8115559904634027626_i64),(-5039879651093836682_i64),(-4264245119901075491_i64)];
RET = [386564067_u32,1267287265_u32,4114569885_u32,3325051836_u32,632079988_u32,2946286770_u32];
RET = [2587843895_u32,1890887907_u32,240341803_u32,2063331037_u32,2998565681_u32,1748490618_u32];
_4 = _1;
_3 = _4;
_3 = _1;
_4 = _3;
_1 = _3;
_3 = _4;
_4 = _3;
Goto(bb1)
}
bb1 = {
RET = [3290211278_u32,404117_u32,4275263419_u32,1028838926_u32,1552585276_u32,2940352792_u32];
RET = [4176096508_u32,3437247598_u32,4224991883_u32,2537115418_u32,3710465413_u32,342733014_u32];
_5 = [65351_u16,33389_u16,50938_u16,65427_u16,30910_u16];
_2 = [(-2885344151153162722_i64),3663434773138877703_i64,2454853573356361108_i64,(-8321256463684342485_i64),2127709996634059850_i64,2359177109085055365_i64];
RET = [2939340060_u32,1201140391_u32,2036621163_u32,1469039369_u32,3725639790_u32,4265221090_u32];
_2 = [2495608924117642533_i64,(-2212700387275958608_i64),(-1965085869959259150_i64),(-7901863920279313971_i64),2677674349000611046_i64,(-8449398340049117354_i64)];
_2 = [(-7140877064605039679_i64),(-3341849898992484773_i64),(-4656178877564624294_i64),(-6730653690623225852_i64),(-3957130518931550957_i64),(-3070974505665691722_i64)];
RET = [2460333919_u32,266740097_u32,2859569070_u32,2585289664_u32,3306233086_u32,2383974229_u32];
_2 = [(-8338971098547032339_i64),6466570943832257360_i64,(-6155796236267615657_i64),(-2029492393680525660_i64),497880275467090608_i64,(-7267652570493683189_i64)];
_1 = _4;
_3 = _1;
RET = [2380421120_u32,153197536_u32,2313123414_u32,2371276952_u32,1852948420_u32,3665260959_u32];
_2 = [(-2800669528959246639_i64),(-215793715877899962_i64),(-1891702302972564512_i64),(-8627346111178642026_i64),7015338564582473311_i64,(-4711503349087693164_i64)];
_4 = _1;
_1 = _3;
_3 = _1;
_3 = _1;
_1 = _4;
RET = [2686385947_u32,583294481_u32,1735587547_u32,1086744556_u32,3332008619_u32,1440634054_u32];
_7.1 = (-1_i8) as usize;
RET = [1747663835_u32,823912955_u32,2840298486_u32,3260181209_u32,650630386_u32,3146955802_u32];
_7.2 = (RET,);
_7.3 = 11_i8 << _7.1;
_10 = [60538_u16,46992_u16,59708_u16,16177_u16,12546_u16];
RET = [4168386476_u32,1400783572_u32,1201957910_u32,714303561_u32,2094767289_u32,269906646_u32];
Goto(bb2)
}
bb2 = {
RET = [4177032585_u32,2702202978_u32,2518896859_u32,3886345715_u32,887783143_u32,537923321_u32];
_2 = [(-8548303523219484881_i64),5625515138984869305_i64,4608449220613133973_i64,3439862155452871546_i64,5677778447471319511_i64,(-8734057145704124610_i64)];
_3 = _4;
_10 = _5;
_4 = _3;
_4 = _1;
_10 = [29793_u16,24645_u16,30136_u16,42581_u16,928_u16];
_9 = 46082_u16;
_3 = _1;
_2 = [7395424050729050242_i64,3255395202534385313_i64,(-294064321499879821_i64),(-4838908073009816389_i64),380380648508273965_i64,1151322548456384688_i64];
_7.0 = _7.2.0;
_9 = 7117_u16 - 19876_u16;
RET = _7.2.0;
_3 = _1;
_11.0 = [414774739_u32,3790632566_u32,3318453495_u32,39727022_u32,3029806544_u32,4178029524_u32];
_11.2 = (_11.0,);
_4 = _1;
_7.0 = [2185924506_u32,3495585453_u32,108680702_u32,3154045267_u32,1695604902_u32,1788174173_u32];
_11.0 = [4229982736_u32,2508326720_u32,1828695073_u32,4270505071_u32,3806945514_u32,1020495692_u32];
_12 = 3062116989228632775_u64 as i128;
_4 = _1;
_1 = _3;
_4 = _3;
_9 = !15367_u16;
_1 = _4;
_11 = (_7.0, _7.1, _7.2, _7.3);
RET = _7.2.0;
_11.1 = _7.1;
_9 = 12072_u16;
match _9 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
12072 => bb8,
_ => bb7
}
}
bb3 = {
RET = [3290211278_u32,404117_u32,4275263419_u32,1028838926_u32,1552585276_u32,2940352792_u32];
RET = [4176096508_u32,3437247598_u32,4224991883_u32,2537115418_u32,3710465413_u32,342733014_u32];
_5 = [65351_u16,33389_u16,50938_u16,65427_u16,30910_u16];
_2 = [(-2885344151153162722_i64),3663434773138877703_i64,2454853573356361108_i64,(-8321256463684342485_i64),2127709996634059850_i64,2359177109085055365_i64];
RET = [2939340060_u32,1201140391_u32,2036621163_u32,1469039369_u32,3725639790_u32,4265221090_u32];
_2 = [2495608924117642533_i64,(-2212700387275958608_i64),(-1965085869959259150_i64),(-7901863920279313971_i64),2677674349000611046_i64,(-8449398340049117354_i64)];
_2 = [(-7140877064605039679_i64),(-3341849898992484773_i64),(-4656178877564624294_i64),(-6730653690623225852_i64),(-3957130518931550957_i64),(-3070974505665691722_i64)];
RET = [2460333919_u32,266740097_u32,2859569070_u32,2585289664_u32,3306233086_u32,2383974229_u32];
_2 = [(-8338971098547032339_i64),6466570943832257360_i64,(-6155796236267615657_i64),(-2029492393680525660_i64),497880275467090608_i64,(-7267652570493683189_i64)];
_1 = _4;
_3 = _1;
RET = [2380421120_u32,153197536_u32,2313123414_u32,2371276952_u32,1852948420_u32,3665260959_u32];
_2 = [(-2800669528959246639_i64),(-215793715877899962_i64),(-1891702302972564512_i64),(-8627346111178642026_i64),7015338564582473311_i64,(-4711503349087693164_i64)];
_4 = _1;
_1 = _3;
_3 = _1;
_3 = _1;
_1 = _4;
RET = [2686385947_u32,583294481_u32,1735587547_u32,1086744556_u32,3332008619_u32,1440634054_u32];
_7.1 = (-1_i8) as usize;
RET = [1747663835_u32,823912955_u32,2840298486_u32,3260181209_u32,650630386_u32,3146955802_u32];
_7.2 = (RET,);
_7.3 = 11_i8 << _7.1;
_10 = [60538_u16,46992_u16,59708_u16,16177_u16,12546_u16];
RET = [4168386476_u32,1400783572_u32,1201957910_u32,714303561_u32,2094767289_u32,269906646_u32];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_11.2.0 = RET;
_3 = _1;
_3 = _4;
_11.2 = _7.2;
_7.2.0 = _11.2.0;
_11.1 = _7.1 >> _7.3;
_11.0 = _7.2.0;
_11.0 = [3559547821_u32,2331756525_u32,2619018543_u32,3832699582_u32,3878176391_u32,1495611685_u32];
_13.2.1 = (-11_isize) as usize;
_13.0 = [121_u8,36_u8,112_u8,160_u8,222_u8,195_u8,152_u8];
_13.2.0 = [2085264548_u32,1506324527_u32,2986562665_u32,1441853073_u32,873945423_u32,1299030624_u32];
_13.2.2 = (_11.2.0,);
_4 = _1;
_15 = [(-21441_i16),(-18014_i16),(-7231_i16),(-31361_i16)];
_7.1 = _11.1;
_5 = [_9,_9,_9,_9,_9];
_11.1 = !_7.1;
_7.2 = _13.2.2;
_2 = [538694702319059756_i64,8407206283099530451_i64,3618322777841199091_i64,3097938022298180008_i64,771691505104092427_i64,5446152881963430386_i64];
_16.0 = true;
RET = _13.2.0;
_20.3 = _12 ^ _12;
match _9 {
0 => bb5,
1 => bb9,
12072 => bb11,
_ => bb10
}
}
bb9 = {
RET = [3290211278_u32,404117_u32,4275263419_u32,1028838926_u32,1552585276_u32,2940352792_u32];
RET = [4176096508_u32,3437247598_u32,4224991883_u32,2537115418_u32,3710465413_u32,342733014_u32];
_5 = [65351_u16,33389_u16,50938_u16,65427_u16,30910_u16];
_2 = [(-2885344151153162722_i64),3663434773138877703_i64,2454853573356361108_i64,(-8321256463684342485_i64),2127709996634059850_i64,2359177109085055365_i64];
RET = [2939340060_u32,1201140391_u32,2036621163_u32,1469039369_u32,3725639790_u32,4265221090_u32];
_2 = [2495608924117642533_i64,(-2212700387275958608_i64),(-1965085869959259150_i64),(-7901863920279313971_i64),2677674349000611046_i64,(-8449398340049117354_i64)];
_2 = [(-7140877064605039679_i64),(-3341849898992484773_i64),(-4656178877564624294_i64),(-6730653690623225852_i64),(-3957130518931550957_i64),(-3070974505665691722_i64)];
RET = [2460333919_u32,266740097_u32,2859569070_u32,2585289664_u32,3306233086_u32,2383974229_u32];
_2 = [(-8338971098547032339_i64),6466570943832257360_i64,(-6155796236267615657_i64),(-2029492393680525660_i64),497880275467090608_i64,(-7267652570493683189_i64)];
_1 = _4;
_3 = _1;
RET = [2380421120_u32,153197536_u32,2313123414_u32,2371276952_u32,1852948420_u32,3665260959_u32];
_2 = [(-2800669528959246639_i64),(-215793715877899962_i64),(-1891702302972564512_i64),(-8627346111178642026_i64),7015338564582473311_i64,(-4711503349087693164_i64)];
_4 = _1;
_1 = _3;
_3 = _1;
_3 = _1;
_1 = _4;
RET = [2686385947_u32,583294481_u32,1735587547_u32,1086744556_u32,3332008619_u32,1440634054_u32];
_7.1 = (-1_i8) as usize;
RET = [1747663835_u32,823912955_u32,2840298486_u32,3260181209_u32,650630386_u32,3146955802_u32];
_7.2 = (RET,);
_7.3 = 11_i8 << _7.1;
_10 = [60538_u16,46992_u16,59708_u16,16177_u16,12546_u16];
RET = [4168386476_u32,1400783572_u32,1201957910_u32,714303561_u32,2094767289_u32,269906646_u32];
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_20.2.2 = (_7.0,);
_15 = [22372_i16,4004_i16,(-8903_i16),5420_i16];
_15 = [(-27497_i16),(-4719_i16),(-1447_i16),7040_i16];
_21 = [73_u8,67_u8,195_u8,34_u8,50_u8,206_u8,167_u8];
_13.3 = 19_u8 as i128;
_20.2.2 = _7.2;
_20.2.1 = _13.2.1;
_19 = [3198_i16,32399_i16,(-19639_i16),14684_i16];
_13.1 = !4880_i16;
_20.2.3 = _11.1 as i8;
_21 = [222_u8,230_u8,41_u8,184_u8,82_u8,144_u8,236_u8];
_5 = [_9,_9,_9,_9,_9];
_11.2.0 = [2824204411_u32,2264387879_u32,3551025728_u32,3666831699_u32,811051826_u32,3273691227_u32];
_22.4 = 4925201879921875451_u64 as u16;
_11.2 = _7.2;
_7.2 = (_11.0,);
_4 = _3;
_11.2 = _20.2.2;
_13.2 = _11;
_13.2 = _11;
RET = [3996258572_u32,2040985323_u32,84667938_u32,2621832350_u32,1110273780_u32,1106515787_u32];
Goto(bb12)
}
bb12 = {
_13.0 = [209_u8,94_u8,79_u8,29_u8,9_u8,29_u8,121_u8];
_13.2.2 = (_7.0,);
_5 = [_9,_9,_22.4,_9,_9];
_11.2.0 = [4102662200_u32,1983737785_u32,58789618_u32,3159745782_u32,2109574814_u32,3890987996_u32];
_4 = _1;
Goto(bb13)
}
bb13 = {
_20.2.2.0 = [30777771_u32,294639048_u32,973816500_u32,617678036_u32,3354762880_u32,2374252045_u32];
_13.2.3 = -_20.2.3;
_13.2 = (RET, _11.1, _11.2, _7.3);
_13.2.2 = _20.2.2;
_16.1 = core::ptr::addr_of_mut!(_9);
_7 = (_13.2.0, _11.1, _13.2.2, _13.2.3);
_7.0 = [1890850738_u32,4112572391_u32,1381380310_u32,4240868132_u32,914751981_u32,3065669264_u32];
_16.1 = core::ptr::addr_of_mut!(_9);
_22.2 = core::ptr::addr_of_mut!(_22.1);
_13.2.3 = 1986605047_i32 as i8;
_22.2 = core::ptr::addr_of_mut!(_22.1);
_7.0 = [3248212222_u32,1077950456_u32,421106823_u32,3836416142_u32,2215461068_u32,3937696496_u32];
_13.2.1 = _11.1;
_25.fld2 = [_16.0,_16.0,_16.0,_16.0,_16.0,_16.0,_16.0];
_13.2.0 = _20.2.2.0;
_25.fld1 = _16.1;
RET = [4043277105_u32,1791417447_u32,3224264114_u32,2390573056_u32,1575450177_u32,3458111385_u32];
_27 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_3 = _4;
_20 = (_21, _13.1, _13.2, _13.3);
_14 = [2587321331326697011_i64,269320708734051977_i64,(-7653386183244211090_i64),(-725398561001375740_i64),(-5639950693215876479_i64),(-794876856401999717_i64)];
_13.1 = _20.1;
_26 = [76_u8,147_u8,70_u8,16_u8];
Goto(bb14)
}
bb14 = {
_20.0 = [226_u8,93_u8,17_u8,204_u8,82_u8,234_u8,21_u8];
_5 = [_9,_9,_22.4,_9,_9];
_20.1 = _13.1 | _13.1;
_13.3 = -_12;
_1 = _4;
_25.fld5 = _2;
_20.2 = (_13.2.2.0, _11.1, _7.2, _13.2.3);
_13 = (_21, _20.1, _7, _12);
_11.0 = [3057089476_u32,2265445174_u32,2602684318_u32,3991295286_u32,3485552007_u32,1662772740_u32];
_3 = _1;
_22.5 = core::ptr::addr_of!(_20.3);
_4 = _3;
_20.1 = '\u{bc7c}' as i16;
_2 = _25.fld5;
_29.1 = !1690445656_i32;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(12_usize, 13_usize, Move(_13), 7_usize, Move(_7), 15_usize, Move(_15), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(12_usize, 9_usize, Move(_9), 19_usize, Move(_19), 26_usize, Move(_26), 32_usize, _32), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [u32; 6],mut _2: [u8; 7],mut _3: ([u32; 6],),mut _4: [u16; 5],mut _5: [u16; 5],mut _6: *const i64,mut _7: [u16; 5],mut _8: *const i64) -> (bool, *mut u16) {
mir! {
type RET = (bool, *mut u16);
let _9: char;
let _10: &'static i16;
let _11: f32;
let _12: u64;
let _13: *const usize;
let _14: u16;
let _15: (bool, *mut u16);
let _16: ();
let _17: ();
{
_7 = _4;
_6 = _8;
_5 = [23096_u16,9515_u16,20433_u16,45090_u16,6285_u16];
RET.0 = !true;
_3.0 = _1;
_9 = '\u{549ee}';
_6 = _8;
RET.0 = false;
_5 = [51138_u16,30162_u16,52197_u16,37440_u16,47917_u16];
_12 = _9 as u64;
_11 = (-1333618928_i32) as f32;
_3.0 = _1;
_3.0 = [2894587973_u32,4251447988_u32,73013242_u32,2892918659_u32,1704656140_u32,2401699280_u32];
_9 = '\u{10005a}';
Call(RET.0 = fn14(_6, _4, _1, _2, _7, _2, _6, _3, _2, _6, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = _6;
_7 = _4;
_11 = 14605038528584069110_usize as f32;
_15.0 = RET.0;
RET.0 = !_15.0;
RET.1 = core::ptr::addr_of_mut!(_14);
_8 = _6;
RET.0 = _15.0;
Goto(bb2)
}
bb2 = {
Call(_16 = dump_var(13_usize, 7_usize, Move(_7), 9_usize, Move(_9), 12_usize, Move(_12), 4_usize, Move(_4)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: *const i64,mut _2: [u16; 5],mut _3: [u32; 6],mut _4: [u8; 7],mut _5: [u16; 5],mut _6: [u8; 7],mut _7: *const i64,mut _8: ([u32; 6],),mut _9: [u8; 7],mut _10: *const i64,mut _11: [u32; 6]) -> bool {
mir! {
type RET = bool;
let _12: Adt43;
let _13: isize;
let _14: bool;
let _15: i64;
let _16: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _17: (bool, *mut u16);
let _18: isize;
let _19: i8;
let _20: [i64; 6];
let _21: bool;
let _22: u32;
let _23: *const i128;
let _24: u8;
let _25: isize;
let _26: char;
let _27: f64;
let _28: ([u32; 6], usize, ([u32; 6],), i8);
let _29: ();
let _30: ();
{
_8.0 = [951937628_u32,4034117384_u32,1340854908_u32,800694920_u32,1853219582_u32,2135921880_u32];
_8 = (_3,);
_9 = [241_u8,54_u8,114_u8,182_u8,85_u8,42_u8,161_u8];
_9 = [137_u8,110_u8,95_u8,38_u8,35_u8,235_u8,215_u8];
RET = false;
_5 = _2;
_6 = [175_u8,154_u8,119_u8,77_u8,10_u8,172_u8,51_u8];
_9 = [86_u8,215_u8,212_u8,52_u8,214_u8,164_u8,158_u8];
Goto(bb1)
}
bb1 = {
RET = (-797627545_i32) == 1050547439_i32;
_6 = [27_u8,78_u8,222_u8,186_u8,157_u8,19_u8,78_u8];
_4 = [2_u8,242_u8,151_u8,109_u8,211_u8,203_u8,23_u8];
_1 = _7;
_10 = _1;
_11 = _8.0;
RET = !true;
_2 = [48050_u16,5526_u16,64389_u16,58647_u16,61911_u16];
_13 = 147726211402171928771040847178558849396_i128 as isize;
_5 = [37504_u16,14665_u16,1009_u16,51563_u16,56836_u16];
_7 = _10;
_5 = [50788_u16,5233_u16,40978_u16,53259_u16,48604_u16];
RET = _13 == _13;
Goto(bb2)
}
bb2 = {
_2 = _5;
RET = !false;
_3 = _8.0;
_7 = _1;
_14 = !RET;
_9 = _6;
_13 = !(-9223372036854775808_isize);
RET = !_14;
_1 = _10;
_10 = _1;
_11 = _8.0;
_7 = core::ptr::addr_of!(_15);
RET = _14;
Goto(bb3)
}
bb3 = {
_3 = [2041360954_u32,3340580374_u32,3732885060_u32,4234513435_u32,3988834928_u32,1818437699_u32];
_10 = _1;
_9 = [172_u8,22_u8,83_u8,225_u8,166_u8,125_u8,173_u8];
_14 = RET;
_15 = !(-4443479294004849518_i64);
_6 = _4;
_10 = core::ptr::addr_of!((*_7));
RET = _14 ^ _14;
_15 = 362389394_u32 as i64;
_4 = [3_u8,156_u8,148_u8,144_u8,113_u8,117_u8,165_u8];
_9 = [123_u8,238_u8,90_u8,112_u8,102_u8,215_u8,223_u8];
_8 = (_3,);
_8.0 = [1028529008_u32,1353143677_u32,2727953155_u32,1889692632_u32,4079445402_u32,3958424093_u32];
_9 = _4;
RET = _14;
_8 = (_3,);
_7 = _10;
_8.0 = _11;
_7 = core::ptr::addr_of!(_15);
_14 = RET;
Goto(bb4)
}
bb4 = {
_14 = _15 < (*_10);
RET = _14;
_16.1 = (-18398_i16);
_16.2.2.0 = [1021816189_u32,833802673_u32,983019873_u32,65026478_u32,895166850_u32,2199791054_u32];
_16.3 = 20263337947016497996947446478970316324_i128;
_15 = 203462576597001183_i64;
_8.0 = _16.2.2.0;
_16.2.1 = !10469005449646007973_usize;
_3 = [3371637612_u32,2261726977_u32,464087111_u32,2660006963_u32,719845305_u32,1666494689_u32];
_10 = _1;
_1 = _7;
_16.2.3 = _13 as i8;
_7 = core::ptr::addr_of!((*_7));
_16.3 = 95054666831557459155701792652780007998_i128;
match _16.3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
95054666831557459155701792652780007998 => bb8,
_ => bb7
}
}
bb5 = {
_3 = [2041360954_u32,3340580374_u32,3732885060_u32,4234513435_u32,3988834928_u32,1818437699_u32];
_10 = _1;
_9 = [172_u8,22_u8,83_u8,225_u8,166_u8,125_u8,173_u8];
_14 = RET;
_15 = !(-4443479294004849518_i64);
_6 = _4;
_10 = core::ptr::addr_of!((*_7));
RET = _14 ^ _14;
_15 = 362389394_u32 as i64;
_4 = [3_u8,156_u8,148_u8,144_u8,113_u8,117_u8,165_u8];
_9 = [123_u8,238_u8,90_u8,112_u8,102_u8,215_u8,223_u8];
_8 = (_3,);
_8.0 = [1028529008_u32,1353143677_u32,2727953155_u32,1889692632_u32,4079445402_u32,3958424093_u32];
_9 = _4;
RET = _14;
_8 = (_3,);
_7 = _10;
_8.0 = _11;
_7 = core::ptr::addr_of!(_15);
_14 = RET;
Goto(bb4)
}
bb6 = {
_2 = _5;
RET = !false;
_3 = _8.0;
_7 = _1;
_14 = !RET;
_9 = _6;
_13 = !(-9223372036854775808_isize);
RET = !_14;
_1 = _10;
_10 = _1;
_11 = _8.0;
_7 = core::ptr::addr_of!(_15);
RET = _14;
Goto(bb3)
}
bb7 = {
RET = (-797627545_i32) == 1050547439_i32;
_6 = [27_u8,78_u8,222_u8,186_u8,157_u8,19_u8,78_u8];
_4 = [2_u8,242_u8,151_u8,109_u8,211_u8,203_u8,23_u8];
_1 = _7;
_10 = _1;
_11 = _8.0;
RET = !true;
_2 = [48050_u16,5526_u16,64389_u16,58647_u16,61911_u16];
_13 = 147726211402171928771040847178558849396_i128 as isize;
_5 = [37504_u16,14665_u16,1009_u16,51563_u16,56836_u16];
_7 = _10;
_5 = [50788_u16,5233_u16,40978_u16,53259_u16,48604_u16];
RET = _13 == _13;
Goto(bb2)
}
bb8 = {
_16.2.0 = [3932306826_u32,2763696492_u32,3039789290_u32,1582591559_u32,3694377657_u32,2243504700_u32];
_7 = _10;
_6 = [89_u8,90_u8,218_u8,2_u8,92_u8,177_u8,7_u8];
_5 = _2;
_16.0 = [191_u8,93_u8,19_u8,189_u8,181_u8,45_u8,15_u8];
_15 = 6086100815137150308_i64 ^ 3444576504361624808_i64;
_13 = _16.1 as isize;
_20 = [_15,_15,_15,_15,_15,_15];
_19 = _16.2.3;
_4 = [55_u8,45_u8,220_u8,7_u8,145_u8,205_u8,137_u8];
_4 = _16.0;
_8 = (_16.2.2.0,);
_16.2 = (_11, 3533979553525020072_usize, _8, _19);
_19 = '\u{5e49c}' as i8;
_18 = _13 + _13;
_4 = _9;
_8 = (_16.2.2.0,);
_16.2.2.0 = _8.0;
_18 = !_13;
_22 = (-2123298079_i32) as u32;
RET = _14;
RET = _14;
_19 = -_16.2.3;
Goto(bb9)
}
bb9 = {
_16.0 = [114_u8,227_u8,187_u8,76_u8,122_u8,178_u8,73_u8];
_16.2 = (_11, 7_usize, _8, _19);
_16.0 = [43_u8,168_u8,149_u8,109_u8,37_u8,137_u8,59_u8];
_7 = core::ptr::addr_of!(_15);
RET = _14;
_3 = _16.2.0;
_16.0 = [56_u8,32_u8,172_u8,58_u8,218_u8,125_u8,15_u8];
_16.2 = (_11, 5269691925230868569_usize, _8, _19);
Call(RET = fn15(_16.2.1, _6, _16.2.2.0, _16.2.2, _16.3, _16.2.1, _16.2.2.0, _11, _9, (*_7), _16), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_16.2.3 = -_19;
_23 = core::ptr::addr_of!(_16.3);
_8 = _16.2.2;
_13 = _18 * _18;
_7 = core::ptr::addr_of!((*_7));
_1 = _7;
_24 = _16.2.1 as u8;
_18 = _13 >> _24;
_5 = [6477_u16,16529_u16,43483_u16,58683_u16,37138_u16];
_22 = 4149022582_u32 & 1822372422_u32;
_21 = RET;
_8 = (_16.2.2.0,);
_16.2.2.0 = [_22,_22,_22,_22,_22,_22];
RET = _21 & _21;
_16.2.2.0 = [_22,_22,_22,_22,_22,_22];
_15 = -(-1036855863774641267_i64);
_25 = _16.1 as isize;
Goto(bb11)
}
bb11 = {
Call(_29 = dump_var(14_usize, 25_usize, Move(_25), 18_usize, Move(_18), 19_usize, Move(_19), 22_usize, Move(_22)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_29 = dump_var(14_usize, 24_usize, Move(_24), 4_usize, Move(_4), 13_usize, Move(_13), 20_usize, Move(_20)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_29 = dump_var(14_usize, 3_usize, Move(_3), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: usize,mut _2: [u8; 7],mut _3: [u32; 6],mut _4: ([u32; 6],),mut _5: i128,mut _6: usize,mut _7: [u32; 6],mut _8: [u32; 6],mut _9: [u8; 7],mut _10: i64,mut _11: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128)) -> bool {
mir! {
type RET = bool;
let _12: [i64; 6];
let _13: isize;
let _14: ();
let _15: ();
{
_2 = [175_u8,135_u8,33_u8,10_u8,60_u8,56_u8,115_u8];
_4 = (_8,);
_11.2.2 = (_11.2.0,);
RET = _6 >= _11.2.1;
_4.0 = [1834476821_u32,3342101881_u32,1477867235_u32,2830391964_u32,2817051499_u32,823714589_u32];
_11.1 = (-21349_i16) | (-13621_i16);
_11.0 = _9;
_11.1 = !29234_i16;
_9 = [184_u8,219_u8,141_u8,115_u8,134_u8,137_u8,143_u8];
_2 = [137_u8,11_u8,186_u8,246_u8,172_u8,7_u8,21_u8];
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(15_usize, 10_usize, Move(_10), 8_usize, Move(_8), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_14 = dump_var(15_usize, 11_usize, Move(_11), 15_usize, _15, 15_usize, _15, 15_usize, _15), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [u8; 7],mut _2: bool,mut _3: Adt43,mut _4: [bool; 7],mut _5: [bool; 7],mut _6: [u32; 6],mut _7: *const usize,mut _8: [bool; 7]) -> [u16; 5] {
mir! {
type RET = [u16; 5];
let _9: u8;
let _10: f32;
let _11: [u32; 6];
let _12: f32;
let _13: Adt58;
let _14: isize;
let _15: u16;
let _16: [u8; 4];
let _17: [i64; 6];
let _18: isize;
let _19: (*mut u16, usize);
let _20: ();
let _21: ();
{
RET = [52421_u16,23614_u16,18098_u16,38774_u16,9255_u16];
RET = [51884_u16,51541_u16,60331_u16,2412_u16,60693_u16];
_6 = [2866373709_u32,2041751134_u32,672561405_u32,3687792911_u32,139549972_u32,1441502618_u32];
_6 = [1149910750_u32,1244178686_u32,3013832021_u32,4246714624_u32,3307759691_u32,1957979311_u32];
_5 = _4;
RET = [60554_u16,12850_u16,52685_u16,29388_u16,44676_u16];
place!(Field::<[bool; 7]>(Variant(_3, 0), 1)) = [_2,_2,_2,Field::<bool>(Variant(_3, 0), 0),Field::<bool>(Variant(_3, 0), 0),_2,_2];
place!(Field::<bool>(Variant(_3, 0), 0)) = !_2;
_2 = !Field::<bool>(Variant(_3, 0), 0);
SetDiscriminant(_3, 1);
RET = [29057_u16,47113_u16,47244_u16,26488_u16,36200_u16];
_3 = Adt43::Variant0 { fld0: _2,fld1: _4,fld2: (-9223372036854775808_isize) };
place!(Field::<isize>(Variant(_3, 0), 2)) = !(-9223372036854775808_isize);
_2 = Field::<bool>(Variant(_3, 0), 0) <= Field::<bool>(Variant(_3, 0), 0);
place!(Field::<[bool; 7]>(Variant(_3, 0), 1)) = [_2,_2,Field::<bool>(Variant(_3, 0), 0),_2,Field::<bool>(Variant(_3, 0), 0),_2,_2];
place!(Field::<isize>(Variant(_3, 0), 2)) = !9223372036854775807_isize;
_1 = [3_u8,78_u8,219_u8,117_u8,187_u8,37_u8,119_u8];
_2 = Field::<bool>(Variant(_3, 0), 0) <= Field::<bool>(Variant(_3, 0), 0);
_9 = !21_u8;
_2 = Field::<bool>(Variant(_3, 0), 0);
SetDiscriminant(_3, 1);
_6 = [3419607685_u32,3932843376_u32,4212291859_u32,4101885354_u32,2656288805_u32,3386482314_u32];
_11 = _6;
_11 = [1427721654_u32,820867312_u32,3922057662_u32,3229763102_u32,1044721120_u32,1642283384_u32];
_8 = _5;
_1 = [_9,_9,_9,_9,_9,_9,_9];
_7 = core::ptr::addr_of!(place!(Field::<usize>(Variant(_3, 1), 0)));
_10 = 2_usize as f32;
_2 = !false;
Goto(bb1)
}
bb1 = {
_7 = core::ptr::addr_of!((*_7));
_11 = [1286226764_u32,614520396_u32,713633920_u32,3932986927_u32,107104070_u32,650538756_u32];
place!(Field::<usize>(Variant(_3, 1), 0)) = !15493509356551627479_usize;
Goto(bb2)
}
bb2 = {
_10 = 9223372036854775807_isize as f32;
_10 = 9223372036854775807_isize as f32;
_8 = [_2,_2,_2,_2,_2,_2,_2];
place!(Field::<f64>(Variant(_3, 1), 1)) = 311909818195725554636901182249692706565_u128 as f64;
_12 = (-3456818360350520340_i64) as f32;
place!(Field::<f64>(Variant(_3, 1), 1)) = 21049_u16 as f64;
SetDiscriminant(_3, 0);
place!(Field::<[bool; 7]>(Variant(_3, 0), 1)) = _5;
_2 = false;
_2 = _10 <= _10;
place!(Field::<bool>(Variant(_3, 0), 0)) = _10 >= _10;
place!(Field::<isize>(Variant(_3, 0), 2)) = 7401354425939224283_i64 as isize;
place!(Field::<isize>(Variant(_3, 0), 2)) = 9223372036854775807_isize * (-126_isize);
_4 = _5;
_3 = Adt43::Variant0 { fld0: _2,fld1: _4,fld2: (-9223372036854775808_isize) };
place!(Field::<isize>(Variant(_3, 0), 2)) = -89_isize;
_6 = [1670754486_u32,679633117_u32,1022111063_u32,1163195661_u32,3311814998_u32,2619389417_u32];
_6 = [4174583417_u32,2685576404_u32,2977884892_u32,272953881_u32,1553393928_u32,3102952246_u32];
_9 = Field::<bool>(Variant(_3, 0), 0) as u8;
SetDiscriminant(_3, 1);
_1 = [_9,_9,_9,_9,_9,_9,_9];
Goto(bb3)
}
bb3 = {
RET = [37525_u16,23598_u16,54043_u16,62772_u16,16026_u16];
RET = [33390_u16,10635_u16,64640_u16,59478_u16,46888_u16];
RET = [20297_u16,43434_u16,22337_u16,44855_u16,51088_u16];
_14 = 55093_u16 as isize;
_14 = (-52_isize);
_8 = _5;
_4 = [_2,_2,_2,_2,_2,_2,_2];
_1 = [_9,_9,_9,_9,_9,_9,_9];
_6 = _11;
place!(Field::<f64>(Variant(_3, 1), 1)) = 39265798634321902958129222211266534429_i128 as f64;
_12 = _10 + _10;
_16 = [_9,_9,_9,_9];
_6 = _11;
_15 = 41406_u16 + 53508_u16;
_5 = [_2,_2,_2,_2,_2,_2,_2];
_1 = [_9,_9,_9,_9,_9,_9,_9];
_8 = _4;
_7 = core::ptr::addr_of!(place!(Field::<usize>(Variant(_3, 1), 0)));
_1 = [_9,_9,_9,_9,_9,_9,_9];
_1 = [_9,_9,_9,_9,_9,_9,_9];
RET = [_15,_15,_15,_15,_15];
_18 = !_14;
_11 = _6;
match _14 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
340282366920938463463374607431768211404 => bb10,
_ => bb9
}
}
bb4 = {
_10 = 9223372036854775807_isize as f32;
_10 = 9223372036854775807_isize as f32;
_8 = [_2,_2,_2,_2,_2,_2,_2];
place!(Field::<f64>(Variant(_3, 1), 1)) = 311909818195725554636901182249692706565_u128 as f64;
_12 = (-3456818360350520340_i64) as f32;
place!(Field::<f64>(Variant(_3, 1), 1)) = 21049_u16 as f64;
SetDiscriminant(_3, 0);
place!(Field::<[bool; 7]>(Variant(_3, 0), 1)) = _5;
_2 = false;
_2 = _10 <= _10;
place!(Field::<bool>(Variant(_3, 0), 0)) = _10 >= _10;
place!(Field::<isize>(Variant(_3, 0), 2)) = 7401354425939224283_i64 as isize;
place!(Field::<isize>(Variant(_3, 0), 2)) = 9223372036854775807_isize * (-126_isize);
_4 = _5;
_3 = Adt43::Variant0 { fld0: _2,fld1: _4,fld2: (-9223372036854775808_isize) };
place!(Field::<isize>(Variant(_3, 0), 2)) = -89_isize;
_6 = [1670754486_u32,679633117_u32,1022111063_u32,1163195661_u32,3311814998_u32,2619389417_u32];
_6 = [4174583417_u32,2685576404_u32,2977884892_u32,272953881_u32,1553393928_u32,3102952246_u32];
_9 = Field::<bool>(Variant(_3, 0), 0) as u8;
SetDiscriminant(_3, 1);
_1 = [_9,_9,_9,_9,_9,_9,_9];
Goto(bb3)
}
bb5 = {
_7 = core::ptr::addr_of!((*_7));
_11 = [1286226764_u32,614520396_u32,713633920_u32,3932986927_u32,107104070_u32,650538756_u32];
place!(Field::<usize>(Variant(_3, 1), 0)) = !15493509356551627479_usize;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = _8;
match _14 {
0 => bb3,
1 => bb4,
2 => bb11,
340282366920938463463374607431768211404 => bb13,
_ => bb12
}
}
bb11 = {
_10 = 9223372036854775807_isize as f32;
_10 = 9223372036854775807_isize as f32;
_8 = [_2,_2,_2,_2,_2,_2,_2];
place!(Field::<f64>(Variant(_3, 1), 1)) = 311909818195725554636901182249692706565_u128 as f64;
_12 = (-3456818360350520340_i64) as f32;
place!(Field::<f64>(Variant(_3, 1), 1)) = 21049_u16 as f64;
SetDiscriminant(_3, 0);
place!(Field::<[bool; 7]>(Variant(_3, 0), 1)) = _5;
_2 = false;
_2 = _10 <= _10;
place!(Field::<bool>(Variant(_3, 0), 0)) = _10 >= _10;
place!(Field::<isize>(Variant(_3, 0), 2)) = 7401354425939224283_i64 as isize;
place!(Field::<isize>(Variant(_3, 0), 2)) = 9223372036854775807_isize * (-126_isize);
_4 = _5;
_3 = Adt43::Variant0 { fld0: _2,fld1: _4,fld2: (-9223372036854775808_isize) };
place!(Field::<isize>(Variant(_3, 0), 2)) = -89_isize;
_6 = [1670754486_u32,679633117_u32,1022111063_u32,1163195661_u32,3311814998_u32,2619389417_u32];
_6 = [4174583417_u32,2685576404_u32,2977884892_u32,272953881_u32,1553393928_u32,3102952246_u32];
_9 = Field::<bool>(Variant(_3, 0), 0) as u8;
SetDiscriminant(_3, 1);
_1 = [_9,_9,_9,_9,_9,_9,_9];
Goto(bb3)
}
bb12 = {
_7 = core::ptr::addr_of!((*_7));
_11 = [1286226764_u32,614520396_u32,713633920_u32,3932986927_u32,107104070_u32,650538756_u32];
place!(Field::<usize>(Variant(_3, 1), 0)) = !15493509356551627479_usize;
Goto(bb2)
}
bb13 = {
_15 = !18034_u16;
RET = [_15,_15,_15,_15,_15];
_17 = [4762288318760252854_i64,1887995919472586254_i64,7076604392106281502_i64,8423291551118887741_i64,4604742566995122433_i64,6247212548543645701_i64];
Call(_19.1 = fn17(_9, _7, _7, _7, _7, _11, _7, _5, _18, _7, _7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_19.0 = core::ptr::addr_of_mut!(_15);
_1 = [_9,_9,_9,_9,_9,_9,_9];
_14 = _18;
RET = [_15,_15,_15,_15,_15];
_2 = _9 != _9;
_2 = false;
place!(Field::<usize>(Variant(_3, 1), 0)) = _19.1 >> _9;
_8 = [_2,_2,_2,_2,_2,_2,_2];
_12 = -_10;
_7 = core::ptr::addr_of!(_19.1);
_2 = true;
_4 = [_2,_2,_2,_2,_2,_2,_2];
_7 = core::ptr::addr_of!((*_7));
place!(Field::<usize>(Variant(_3, 1), 0)) = 271300844941338665880589570690324427831_u128 as usize;
_11 = [2375529675_u32,3978378749_u32,1579445817_u32,2160620186_u32,1440803399_u32,527989635_u32];
_5 = [_2,_2,_2,_2,_2,_2,_2];
_12 = _10;
_11 = [3631288939_u32,3968849713_u32,264509704_u32,1145415478_u32,2325985079_u32,3985668468_u32];
_3 = Adt43::Variant0 { fld0: _2,fld1: _4,fld2: _14 };
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(16_usize, 5_usize, Move(_5), 11_usize, Move(_11), 18_usize, Move(_18), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(16_usize, 1_usize, Move(_1), 8_usize, Move(_8), 21_usize, _21, 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: u8,mut _2: *const usize,mut _3: *const usize,mut _4: *const usize,mut _5: *const usize,mut _6: [u32; 6],mut _7: *const usize,mut _8: [bool; 7],mut _9: isize,mut _10: *const usize,mut _11: *const usize) -> usize {
mir! {
type RET = usize;
let _12: [bool; 7];
let _13: *mut (bool, *mut u16);
let _14: isize;
let _15: char;
let _16: u64;
let _17: u64;
let _18: bool;
let _19: [u16; 5];
let _20: Adt43;
let _21: isize;
let _22: f32;
let _23: bool;
let _24: f64;
let _25: &'static i16;
let _26: [u8; 7];
let _27: [bool; 7];
let _28: bool;
let _29: [i16; 4];
let _30: [u8; 7];
let _31: isize;
let _32: &'static i16;
let _33: Adt46;
let _34: isize;
let _35: i128;
let _36: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _37: [i64; 6];
let _38: f64;
let _39: bool;
let _40: [i16; 4];
let _41: isize;
let _42: [i16; 4];
let _43: isize;
let _44: [char; 4];
let _45: f64;
let _46: u8;
let _47: [i64; 6];
let _48: f64;
let _49: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _50: i32;
let _51: Adt43;
let _52: u128;
let _53: u8;
let _54: ();
let _55: ();
{
_9 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = _4;
_3 = _11;
_2 = core::ptr::addr_of!(RET);
RET = 15496100969773020226_usize >> _1;
_7 = _11;
RET = 14944313977014838006_usize << _9;
RET = _9 as usize;
RET = 16369623897088106692_usize;
_10 = core::ptr::addr_of!((*_2));
_7 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
_12 = [true,true,false,true,true,true,false];
RET = 17429193155862206245640520526776013200_i128 as usize;
_4 = _3;
_2 = _11;
_1 = !230_u8;
_9 = false as isize;
_12 = [true,true,false,false,false,false,true];
_4 = _2;
Call(_10 = core::intrinsics::arith_offset(_5, 9223372036854775807_isize), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = 1_usize;
_14 = _9 << _6[RET];
_8[RET] = _9 != _9;
RET = 2008274922_i32 as usize;
_6 = [2181210246_u32,1551527528_u32,3033627997_u32,1955763686_u32,2169732077_u32,1172286483_u32];
Goto(bb2)
}
bb2 = {
RET = 5003299887526153174_usize * 5_usize;
RET = !4_usize;
_11 = core::ptr::addr_of!((*_7));
_3 = _2;
_8 = _12;
_15 = '\u{f7524}';
_2 = core::ptr::addr_of!((*_7));
_14 = _9 ^ _9;
_15 = '\u{10eb6f}';
_11 = core::ptr::addr_of!((*_11));
_14 = !_9;
Goto(bb3)
}
bb3 = {
_14 = _9;
_4 = _10;
_22 = 2726917284625795876_u64 as f32;
_22 = _1 as f32;
Call(RET = core::intrinsics::bswap(11333167753240337887_usize), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_5 = _10;
_14 = _9 << _1;
_3 = core::ptr::addr_of!((*_7));
_19 = [40393_u16,54138_u16,20776_u16,44728_u16,22036_u16];
RET = 18231036282792292765_usize;
_21 = 705711351616025881_u64 as isize;
_22 = _1 as f32;
_21 = !_14;
_16 = !16256662713216461262_u64;
_16 = _15 as u64;
_24 = 4286384293_u32 as f64;
_8 = [true,true,false,true,true,true,true];
_17 = _16 ^ _16;
_18 = false;
_7 = _10;
_12 = _8;
_12 = _8;
RET = 6032308769162847761_usize ^ 7_usize;
_3 = _7;
_6 = [394341583_u32,2173287220_u32,2054636643_u32,1991526209_u32,2384723603_u32,2696182970_u32];
_16 = _17;
_6 = [2459070490_u32,661647845_u32,4242371174_u32,2120705917_u32,1233095428_u32,3727970707_u32];
_19 = [60045_u16,53493_u16,51039_u16,25646_u16,8868_u16];
_12 = _8;
Goto(bb5)
}
bb5 = {
_23 = _18;
_27 = [_23,_18,_23,_23,_18,_23,_23];
_19 = [40557_u16,21045_u16,64043_u16,59266_u16,60047_u16];
_20 = Adt43::Variant0 { fld0: _23,fld1: _12,fld2: _9 };
_12 = [_18,_18,_18,Field::<bool>(Variant(_20, 0), 0),_18,Field::<bool>(Variant(_20, 0), 0),Field::<bool>(Variant(_20, 0), 0)];
_26 = [_1,_1,_1,_1,_1,_1,_1];
_19 = [64895_u16,29627_u16,13158_u16,23136_u16,25796_u16];
_16 = !_17;
_28 = _23;
_21 = !Field::<isize>(Variant(_20, 0), 2);
_1 = _24 as u8;
SetDiscriminant(_20, 0);
_28 = !_23;
_15 = '\u{8c33a}';
_15 = '\u{a02a1}';
place!(Field::<[bool; 7]>(Variant(_20, 0), 1)) = [_23,_18,_28,_23,_18,_18,_28];
_19 = [35328_u16,19888_u16,56194_u16,9243_u16,55558_u16];
_26 = [_1,_1,_1,_1,_1,_1,_1];
place!(Field::<bool>(Variant(_20, 0), 0)) = _17 < _17;
place!(Field::<bool>(Variant(_20, 0), 0)) = _9 < _21;
_28 = !Field::<bool>(Variant(_20, 0), 0);
_19 = [62064_u16,16773_u16,2997_u16,36628_u16,28915_u16];
_27 = _8;
_18 = !_23;
_17 = _16;
_20 = Adt43::Variant1 { fld0: (*_2),fld1: _24 };
SetDiscriminant(_20, 0);
_2 = _3;
Goto(bb6)
}
bb6 = {
_6 = [1673350985_u32,3625249976_u32,27370354_u32,1419265816_u32,637726973_u32,4182138242_u32];
_8 = [_28,_28,_28,_28,_28,_18,_28];
_30 = [_1,_1,_1,_1,_1,_1,_1];
place!(Field::<[bool; 7]>(Variant(_20, 0), 1)) = [_28,_28,_23,_18,_18,_23,_23];
_29 = [10763_i16,(-23229_i16),(-25835_i16),5246_i16];
place!(Field::<isize>(Variant(_20, 0), 2)) = _9 - _14;
_31 = (*_11) as isize;
RET = !2_usize;
_8 = _27;
_16 = 302426619265213484909384031765801794269_u128 as u64;
RET = 16468697817201187742_usize;
_26 = [_1,_1,_1,_1,_1,_1,_1];
_31 = RET as isize;
_6 = [3995732309_u32,3653862716_u32,2944080348_u32,2852664734_u32,2722654703_u32,4191170356_u32];
_19 = [25346_u16,57149_u16,29742_u16,64500_u16,51902_u16];
RET = !5_usize;
_29 = [(-19705_i16),(-249_i16),(-1667_i16),2946_i16];
place!(Field::<bool>(Variant(_20, 0), 0)) = _18;
Goto(bb7)
}
bb7 = {
_37 = [(-66716012545807928_i64),1555735481915283405_i64,4552586220268238750_i64,2752279433317654939_i64,6674191806085878049_i64,(-4923561360698085745_i64)];
Goto(bb8)
}
bb8 = {
_14 = _31 << _31;
_25 = &_36.1;
_23 = _28;
_35 = (-49768060978210716532582604379589551988_i128);
_14 = -Field::<isize>(Variant(_20, 0), 2);
_28 = !Field::<bool>(Variant(_20, 0), 0);
_36.1 = 7180_u16 as i16;
_29 = [_36.1,_36.1,_36.1,_36.1];
_32 = &_36.1;
place!(Field::<isize>(Variant(_20, 0), 2)) = 18725_u16 as isize;
_28 = _21 != _14;
_36.0 = _26;
place!(Field::<isize>(Variant(_20, 0), 2)) = _14 * _14;
_36.2.2 = (_6,);
_1 = !3_u8;
_34 = _14 >> (*_11);
_36.2.1 = _36.1 as usize;
place!(Field::<bool>(Variant(_20, 0), 0)) = _28;
_16 = _17 >> Field::<isize>(Variant(_20, 0), 2);
_25 = &_36.1;
_36.2.2.0 = [3106996259_u32,3317219163_u32,2063353582_u32,3579806404_u32,695218654_u32,2332162708_u32];
Call(_36.2.2 = fn18(_10, _7, _5, _2, _3), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_17 = !_16;
SetDiscriminant(_20, 1);
place!(Field::<f64>(Variant(_20, 1), 1)) = _24;
_39 = _28;
_20 = Adt43::Variant0 { fld0: _18,fld1: _8,fld2: _34 };
_21 = Field::<isize>(Variant(_20, 0), 2);
_8 = Field::<[bool; 7]>(Variant(_20, 0), 1);
_38 = -_24;
_20 = Adt43::Variant1 { fld0: _36.2.1,fld1: _38 };
match _35 {
0 => bb1,
1 => bb2,
2 => bb8,
290514305942727746930792003052178659468 => bb10,
_ => bb4
}
}
bb10 = {
_16 = _17 | _17;
_11 = _5;
_26 = [_1,_1,_1,_1,_1,_1,_1];
_40 = [(*_25),(*_25),(*_25),(*_32)];
_37 = [(-4010968440809867902_i64),4397985026836916028_i64,2507858322972094633_i64,(-8994436141992055262_i64),2173897572077546245_i64,(-6672758644420931120_i64)];
_36.2.2 = (_6,);
_41 = _34;
_35 = !(-166882060164240918382614863001891419698_i128);
_24 = _38 + _38;
_35 = (-45239832323494620368622000505910586089_i128);
_36.3 = _35 * _35;
_36.2.3 = 3979231492_u32 as i8;
SetDiscriminant(_20, 1);
_36.2.3 = -103_i8;
_17 = _16;
_14 = _34;
_28 = _39 | _39;
_20 = Adt43::Variant0 { fld0: _18,fld1: _8,fld2: _41 };
_40 = [_36.1,(*_32),(*_25),_36.1];
SetDiscriminant(_20, 1);
_31 = (-2101935097_i32) as isize;
_19 = [16147_u16,11429_u16,60772_u16,59232_u16,40906_u16];
_15 = '\u{958a8}';
Goto(bb11)
}
bb11 = {
_36.0 = _30;
_43 = _15 as isize;
_32 = Move(_25);
Call(_14 = fn19(_10, _4, _3, _5, _11, _2, _2, _10, _7, _7, _5, _4, _11, _2, _7), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20 = Adt43::Variant1 { fld0: _36.2.1,fld1: _24 };
_44 = [_15,_15,_15,_15];
_9 = _15 as isize;
_30 = _36.0;
_36.3 = !_35;
_28 = Field::<f64>(Variant(_20, 1), 1) == _24;
_40 = [_36.1,_36.1,_36.1,_36.1];
place!(Field::<usize>(Variant(_20, 1), 0)) = !_36.2.1;
_21 = _34;
Goto(bb13)
}
bb13 = {
_36.2.3 = (-109_i8) << _17;
_28 = _39 & _39;
_17 = !_16;
_41 = _17 as isize;
_39 = _22 <= _22;
_44 = [_15,_15,_15,_15];
_48 = Field::<f64>(Variant(_20, 1), 1);
RET = Field::<usize>(Variant(_20, 1), 0);
_49.1 = _48 as i16;
place!(Field::<usize>(Variant(_20, 1), 0)) = _36.2.1 << _36.2.3;
_34 = _41 << _41;
_37 = [4700810301666993042_i64,(-9098935426771159745_i64),976750118016088470_i64,4292572777163969379_i64,(-2311892405751677642_i64),(-6304886513674830488_i64)];
Goto(bb14)
}
bb14 = {
_8 = [_39,_28,_28,_28,_39,_28,_28];
_49.2.1 = !Field::<usize>(Variant(_20, 1), 0);
_34 = _41;
_47 = _37;
_36.2.1 = 8460620436053302138_i64 as usize;
RET = _36.3 as usize;
_36.2.0 = [3030267388_u32,1694606446_u32,2173817245_u32,3301908817_u32,3732523280_u32,1596009611_u32];
_49.2.2.0 = [588583512_u32,337641785_u32,957976913_u32,917051558_u32,1108140991_u32,174449610_u32];
_14 = _34;
_49 = _36;
_19 = [40749_u16,45248_u16,8199_u16,4348_u16,31871_u16];
_17 = _16;
_47 = _37;
SetDiscriminant(_20, 0);
_49.2.2 = (_49.2.0,);
_17 = _16;
_49.2.1 = !RET;
place!(Field::<bool>(Variant(_20, 0), 0)) = _28;
_51 = Adt43::Variant0 { fld0: _39,fld1: _27,fld2: _21 };
_19 = [21575_u16,46658_u16,19660_u16,53504_u16,58181_u16];
_8 = Field::<[bool; 7]>(Variant(_51, 0), 1);
_41 = _16 as isize;
RET = _49.2.1;
_49.2.2 = _36.2.2;
_30 = [_1,_1,_1,_1,_1,_1,_1];
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(17_usize, 35_usize, Move(_35), 40_usize, Move(_40), 23_usize, Move(_23), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(17_usize, 47_usize, Move(_47), 8_usize, Move(_8), 17_usize, Move(_17), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(17_usize, 43_usize, Move(_43), 9_usize, Move(_9), 29_usize, Move(_29), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(17_usize, 36_usize, Move(_36), 37_usize, Move(_37), 28_usize, Move(_28), 55_usize, _55), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: *const usize,mut _2: *const usize,mut _3: *const usize,mut _4: *const usize,mut _5: *const usize) -> ([u32; 6],) {
mir! {
type RET = ([u32; 6],);
let _6: char;
let _7: ([u32; 6],);
let _8: usize;
let _9: [u16; 5];
let _10: isize;
let _11: Adt45;
let _12: u16;
let _13: u128;
let _14: bool;
let _15: Adt55;
let _16: f64;
let _17: Adt45;
let _18: u64;
let _19: (f32, &'static i16);
let _20: f32;
let _21: *mut usize;
let _22: u64;
let _23: ([u32; 6], usize, ([u32; 6],), i8);
let _24: [u8; 7];
let _25: Adt43;
let _26: f32;
let _27: char;
let _28: isize;
let _29: [char; 4];
let _30: isize;
let _31: f32;
let _32: [u8; 7];
let _33: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128);
let _34: Adt53;
let _35: i8;
let _36: f32;
let _37: isize;
let _38: u16;
let _39: ();
let _40: ();
{
RET.0 = [1503459087_u32,1488561897_u32,2601169676_u32,1599600847_u32,3787525650_u32,3683681088_u32];
RET.0 = [439948878_u32,1999112368_u32,657908897_u32,3815594058_u32,4010031681_u32,657128996_u32];
Goto(bb1)
}
bb1 = {
RET.0 = [441682195_u32,3653203717_u32,3700731299_u32,2679399073_u32,2072217572_u32,3753635848_u32];
_6 = '\u{ba6d8}';
_6 = '\u{d54ca}';
_6 = '\u{bf29}';
RET.0 = [4036640009_u32,2594595145_u32,20603834_u32,3372715245_u32,2106351335_u32,3765484699_u32];
RET.0 = [806803130_u32,3211041929_u32,1031326524_u32,1134970338_u32,2580769152_u32,561433017_u32];
RET.0 = [4079127061_u32,2243725468_u32,3466053023_u32,3031790717_u32,1109235488_u32,2586073187_u32];
RET.0 = [189316838_u32,1708735769_u32,2998668686_u32,322409249_u32,136175637_u32,1276041543_u32];
_7 = (RET.0,);
Goto(bb2)
}
bb2 = {
RET = (_7.0,);
_7 = (RET.0,);
RET = (_7.0,);
_8 = 6_usize >> (-5441499129335676366_i64);
_7 = (RET.0,);
_6 = '\u{ce672}';
_7 = (RET.0,);
_9 = [46541_u16,39879_u16,24548_u16,37811_u16,4649_u16];
_7.0 = RET.0;
RET.0 = _7.0;
_7.0 = RET.0;
RET.0 = _7.0;
RET = _7;
_11 = Adt45::Variant3 { fld0: (-8587292546253854817_i64) };
RET = _7;
_9 = [60422_u16,52464_u16,47931_u16,51529_u16,9849_u16];
_10 = (-6_isize) + 77_isize;
Goto(bb3)
}
bb3 = {
_13 = 227315485405436368556900413904402405332_u128;
RET.0 = [1449339890_u32,994543524_u32,2485255342_u32,174607210_u32,2551577042_u32,35408958_u32];
_7 = (RET.0,);
place!(Field::<i64>(Variant(_11, 3), 0)) = !1393186882159927752_i64;
_7.0 = [3052445471_u32,1511546793_u32,4265490983_u32,3101776398_u32,1677439452_u32,3523970230_u32];
_12 = 4076_u16;
_6 = '\u{14047}';
_9 = [_12,_12,_12,_12,_12];
RET = (_7.0,);
RET.0 = [633362908_u32,2125131816_u32,541258504_u32,2020840461_u32,140361168_u32,3688556373_u32];
_17 = Move(_11);
_9 = [_12,_12,_12,_12,_12];
_8 = 7_usize;
_7 = (RET.0,);
_11 = Move(_17);
_16 = Field::<i64>(Variant(_11, 3), 0) as f64;
_19.0 = _10 as f32;
RET.0 = [742336634_u32,3063857089_u32,3301447395_u32,1089528157_u32,3968979329_u32,4188071112_u32];
_18 = 14215064334991714991_u64 >> _13;
RET = (_7.0,);
_17 = Move(_11);
RET = (_7.0,);
_10 = -(-113_isize);
_22 = _18 >> _18;
place!(Field::<i64>(Variant(_17, 3), 0)) = 4479341068062186328_i64;
match Field::<i64>(Variant(_17, 3), 0) {
0 => bb2,
1 => bb4,
2 => bb5,
4479341068062186328 => bb7,
_ => bb6
}
}
bb4 = {
RET = (_7.0,);
_7 = (RET.0,);
RET = (_7.0,);
_8 = 6_usize >> (-5441499129335676366_i64);
_7 = (RET.0,);
_6 = '\u{ce672}';
_7 = (RET.0,);
_9 = [46541_u16,39879_u16,24548_u16,37811_u16,4649_u16];
_7.0 = RET.0;
RET.0 = _7.0;
_7.0 = RET.0;
RET.0 = _7.0;
RET = _7;
_11 = Adt45::Variant3 { fld0: (-8587292546253854817_i64) };
RET = _7;
_9 = [60422_u16,52464_u16,47931_u16,51529_u16,9849_u16];
_10 = (-6_isize) + 77_isize;
Goto(bb3)
}
bb5 = {
RET.0 = [441682195_u32,3653203717_u32,3700731299_u32,2679399073_u32,2072217572_u32,3753635848_u32];
_6 = '\u{ba6d8}';
_6 = '\u{d54ca}';
_6 = '\u{bf29}';
RET.0 = [4036640009_u32,2594595145_u32,20603834_u32,3372715245_u32,2106351335_u32,3765484699_u32];
RET.0 = [806803130_u32,3211041929_u32,1031326524_u32,1134970338_u32,2580769152_u32,561433017_u32];
RET.0 = [4079127061_u32,2243725468_u32,3466053023_u32,3031790717_u32,1109235488_u32,2586073187_u32];
RET.0 = [189316838_u32,1708735769_u32,2998668686_u32,322409249_u32,136175637_u32,1276041543_u32];
_7 = (RET.0,);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_7 = (RET.0,);
_19.0 = (-38_i8) as f32;
_20 = _19.0 - _19.0;
_23 = (_7.0, _8, RET, (-114_i8));
Goto(bb8)
}
bb8 = {
_23.1 = !_8;
_10 = 86_isize << _23.3;
place!(Field::<i64>(Variant(_17, 3), 0)) = (-4418610042352422319_i64) - (-7770995304324644163_i64);
_23.0 = [2600007465_u32,2424352462_u32,2634533104_u32,3633575572_u32,1515055663_u32,3565152828_u32];
_6 = '\u{fcdb3}';
_23.1 = _8;
_13 = 211346502314420015883965691674982150208_u128;
place!(Field::<i64>(Variant(_17, 3), 0)) = 3682809938_u32 as i64;
_23.3 = _16 as i8;
_13 = !90222959783589755524311089435323595482_u128;
_26 = -_20;
_8 = _23.1 | _23.1;
_6 = '\u{e8c3d}';
RET = (_23.0,);
_16 = _22 as f64;
_7 = _23.2;
_23 = (RET.0, _8, _7, (-5_i8));
_23.0 = [3270675565_u32,168046026_u32,3252901894_u32,2612829037_u32,3610256735_u32,3507273938_u32];
_10 = (-56_isize) - 9223372036854775807_isize;
_24 = [132_u8,160_u8,201_u8,8_u8,82_u8,150_u8,36_u8];
_16 = _13 as f64;
_23 = (RET.0, _8, _7, 109_i8);
_23.1 = !_8;
place!(Field::<i64>(Variant(_17, 3), 0)) = 222_u8 as i64;
_7 = (_23.0,);
_7 = RET;
_25 = Adt43::Variant1 { fld0: _23.1,fld1: _16 };
Goto(bb9)
}
bb9 = {
RET.0 = [922917171_u32,2698702747_u32,2646166926_u32,341281864_u32,4201566978_u32,2898479804_u32];
_11 = Move(_17);
_22 = !_18;
_18 = 4226251609_u32 as u64;
_22 = _18;
_23 = (_7.0, _8, RET, (-89_i8));
_12 = 20341_u16;
_12 = 56825_u16 + 699_u16;
RET = (_7.0,);
_23.2 = RET;
_23.2 = (_23.0,);
_19.0 = _26 * _20;
_23.2 = RET;
_23.1 = Field::<usize>(Variant(_25, 1), 0) | _8;
_23.3 = (-6_i8);
_10 = Field::<f64>(Variant(_25, 1), 1) as isize;
_23.2.0 = [3034577299_u32,155951546_u32,3592015575_u32,1997567226_u32,2217208776_u32,1827251963_u32];
_13 = 322312445760128354064078916555299346415_u128 & 48429767092417446213025997128117575185_u128;
_13 = !314680398398788853102120924819542825999_u128;
SetDiscriminant(_11, 2);
_27 = _6;
_7 = RET;
_28 = _10;
_20 = _12 as f32;
match _23.3 {
0 => bb7,
1 => bb10,
2 => bb11,
340282366920938463463374607431768211450 => bb13,
_ => bb12
}
}
bb10 = {
_23.1 = !_8;
_10 = 86_isize << _23.3;
place!(Field::<i64>(Variant(_17, 3), 0)) = (-4418610042352422319_i64) - (-7770995304324644163_i64);
_23.0 = [2600007465_u32,2424352462_u32,2634533104_u32,3633575572_u32,1515055663_u32,3565152828_u32];
_6 = '\u{fcdb3}';
_23.1 = _8;
_13 = 211346502314420015883965691674982150208_u128;
place!(Field::<i64>(Variant(_17, 3), 0)) = 3682809938_u32 as i64;
_23.3 = _16 as i8;
_13 = !90222959783589755524311089435323595482_u128;
_26 = -_20;
_8 = _23.1 | _23.1;
_6 = '\u{e8c3d}';
RET = (_23.0,);
_16 = _22 as f64;
_7 = _23.2;
_23 = (RET.0, _8, _7, (-5_i8));
_23.0 = [3270675565_u32,168046026_u32,3252901894_u32,2612829037_u32,3610256735_u32,3507273938_u32];
_10 = (-56_isize) - 9223372036854775807_isize;
_24 = [132_u8,160_u8,201_u8,8_u8,82_u8,150_u8,36_u8];
_16 = _13 as f64;
_23 = (RET.0, _8, _7, 109_i8);
_23.1 = !_8;
place!(Field::<i64>(Variant(_17, 3), 0)) = 222_u8 as i64;
_7 = (_23.0,);
_7 = RET;
_25 = Adt43::Variant1 { fld0: _23.1,fld1: _16 };
Goto(bb9)
}
bb11 = {
RET.0 = [441682195_u32,3653203717_u32,3700731299_u32,2679399073_u32,2072217572_u32,3753635848_u32];
_6 = '\u{ba6d8}';
_6 = '\u{d54ca}';
_6 = '\u{bf29}';
RET.0 = [4036640009_u32,2594595145_u32,20603834_u32,3372715245_u32,2106351335_u32,3765484699_u32];
RET.0 = [806803130_u32,3211041929_u32,1031326524_u32,1134970338_u32,2580769152_u32,561433017_u32];
RET.0 = [4079127061_u32,2243725468_u32,3466053023_u32,3031790717_u32,1109235488_u32,2586073187_u32];
RET.0 = [189316838_u32,1708735769_u32,2998668686_u32,322409249_u32,136175637_u32,1276041543_u32];
_7 = (RET.0,);
Goto(bb2)
}
bb12 = {
RET = (_7.0,);
_7 = (RET.0,);
RET = (_7.0,);
_8 = 6_usize >> (-5441499129335676366_i64);
_7 = (RET.0,);
_6 = '\u{ce672}';
_7 = (RET.0,);
_9 = [46541_u16,39879_u16,24548_u16,37811_u16,4649_u16];
_7.0 = RET.0;
RET.0 = _7.0;
_7.0 = RET.0;
RET.0 = _7.0;
RET = _7;
_11 = Adt45::Variant3 { fld0: (-8587292546253854817_i64) };
RET = _7;
_9 = [60422_u16,52464_u16,47931_u16,51529_u16,9849_u16];
_10 = (-6_isize) + 77_isize;
Goto(bb3)
}
bb13 = {
_17 = Adt45::Variant3 { fld0: 6260865472825663711_i64 };
place!(Field::<i64>(Variant(_17, 3), 0)) = 243_u8 as i64;
_7 = (RET.0,);
RET.0 = [1997948776_u32,1403923003_u32,2963778299_u32,3650218493_u32,1066690772_u32,1812906255_u32];
place!(Field::<u32>(Variant(_11, 2), 2)) = 3067716179_u32 & 3820708834_u32;
_23.2 = (_23.0,);
place!(Field::<usize>(Variant(_25, 1), 0)) = !_23.1;
SetDiscriminant(_17, 1);
_10 = !_28;
_10 = true as isize;
_23.1 = _6 as usize;
place!(Field::<*mut f64>(Variant(_11, 2), 0)) = core::ptr::addr_of_mut!(_16);
_10 = -_28;
place!(Field::<Adt43>(Variant(_17, 1), 0)) = Move(_25);
_26 = _20 + _19.0;
place!(Field::<f64>(Variant(place!(Field::<Adt43>(Variant(_17, 1), 0)), 1), 1)) = _16 - _16;
_31 = _26 - _26;
RET = (_23.0,);
place!(Field::<f64>(Variant(place!(Field::<Adt43>(Variant(_17, 1), 0)), 1), 1)) = -_16;
_33 = (_24, (-29025_i16), _23, 97191772835057474543284833491417325294_i128);
RET.0 = [Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2)];
RET.0 = [Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2)];
Goto(bb14)
}
bb14 = {
place!(Field::<f64>(Variant(place!(Field::<Adt43>(Variant(_17, 1), 0)), 1), 1)) = 720676358_i32 as f64;
_19.1 = &_33.1;
_13 = 33558664797110454506466900081174754958_u128 >> Field::<u32>(Variant(_11, 2), 2);
_33.2.1 = Field::<usize>(Variant(Field::<Adt43>(Variant(_17, 1), 0), 1), 0) & _23.1;
_20 = _31 + _31;
_33.2.1 = _8;
_23.1 = !_8;
RET = _7;
_7.0 = _33.2.2.0;
_19.0 = -_20;
place!(Field::<usize>(Variant(place!(Field::<Adt43>(Variant(_17, 1), 0)), 1), 0)) = _18 as usize;
_28 = _23.1 as isize;
RET.0 = _33.2.0;
_21 = core::ptr::addr_of_mut!(_33.2.1);
SetDiscriminant(Field::<Adt43>(Variant(_17, 1), 0), 1);
_33.2.0 = [Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2),Field::<u32>(Variant(_11, 2), 2)];
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(18_usize, 24_usize, Move(_24), 27_usize, Move(_27), 6_usize, Move(_6), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(18_usize, 23_usize, Move(_23), 13_usize, Move(_13), 12_usize, Move(_12), 40_usize, _40), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: *const usize,mut _2: *const usize,mut _3: *const usize,mut _4: *const usize,mut _5: *const usize,mut _6: *const usize,mut _7: *const usize,mut _8: *const usize,mut _9: *const usize,mut _10: *const usize,mut _11: *const usize,mut _12: *const usize,mut _13: *const usize,mut _14: *const usize,mut _15: *const usize) -> isize {
mir! {
type RET = isize;
let _16: Adt43;
let _17: [i16; 4];
let _18: [u16; 5];
let _19: Adt52;
let _20: isize;
let _21: i32;
let _22: bool;
let _23: bool;
let _24: Adt48;
let _25: ([u32; 6], usize, ([u32; 6],), i8);
let _26: isize;
let _27: Adt55;
let _28: [u32; 6];
let _29: i32;
let _30: Adt43;
let _31: i32;
let _32: [u32; 6];
let _33: isize;
let _34: f64;
let _35: ();
let _36: ();
{
RET = false as isize;
RET = 3_isize;
RET = 7250586287643972390_i64 as isize;
RET = (-9223372036854775808_isize);
RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
RET = 10412_i16 as isize;
RET = 9223372036854775807_isize + (-101_isize);
_17 = [(-31236_i16),31759_i16,(-4274_i16),26662_i16];
RET = (-9223372036854775808_isize) ^ 92_isize;
_17 = [18247_i16,(-26126_i16),12426_i16,(-15196_i16)];
RET = 234_u8 as isize;
RET = 26042_u16 as isize;
RET = -9223372036854775807_isize;
_19.fld5 = 77_u8;
RET = 9223372036854775807_isize >> _19.fld5;
RET = false as isize;
_19.fld6 = 1495410690_i32 as f32;
_19.fld2 = 14119061292732148220_u64 | 15366317655311088099_u64;
_19.fld0.0 = false ^ false;
_17 = [(-3985_i16),(-21130_i16),(-14236_i16),2060_i16];
_19.fld2 = 2767768046_u32 as u64;
_21 = '\u{15a03}' as i32;
_20 = RET;
RET = _20 * _20;
_19.fld1.0 = [3300292250_u32,3909198767_u32,4251985990_u32,1079060736_u32,1323800164_u32,3411185548_u32];
Goto(bb1)
}
bb1 = {
_22 = _19.fld0.0;
_19.fld4 = [_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5];
RET = _20;
_19.fld1.0 = [891092201_u32,1672719794_u32,1122173397_u32,80203989_u32,1330606162_u32,2842054723_u32];
_18 = [384_u16,43709_u16,20482_u16,24222_u16,32475_u16];
match _19.fld5 {
0 => bb2,
1 => bb3,
2 => bb4,
77 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_19.fld2 = (-2774620483271695954_i64) as u64;
RET = _20;
_19.fld3 = !7292850652748144038_usize;
_23 = _19.fld0.0;
_21 = 23032907981823226252432660747780395376_u128 as i32;
_24 = Adt48::Variant3 { fld0: _19.fld1.0 };
_19.fld4 = [_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5];
place!(Field::<[u32; 6]>(Variant(_24, 3), 0)) = [3895543244_u32,1035591108_u32,2376025534_u32,3470719943_u32,3354473315_u32,1594754388_u32];
RET = _20 << _19.fld3;
_25.1 = _22 as usize;
_25 = (Field::<[u32; 6]>(Variant(_24, 3), 0), _19.fld3, _19.fld1, 61_i8);
_22 = RET < RET;
_25 = (_19.fld1.0, _19.fld3, _19.fld1, (-94_i8));
_25.2 = (_19.fld1.0,);
_19.fld0.0 = !_22;
_19.fld5 = 249_u8;
_19.fld5 = (-64724553157427884674710881622076209953_i128) as u8;
_25 = (_19.fld1.0, _19.fld3, _19.fld1, 89_i8);
_25.0 = Field::<[u32; 6]>(Variant(_24, 3), 0);
_17 = [18761_i16,(-14425_i16),(-6175_i16),13904_i16];
_19.fld1.0 = [4095025509_u32,2875895875_u32,1738887306_u32,3309710726_u32,880716734_u32,2375368484_u32];
place!(Field::<[u32; 6]>(Variant(_24, 3), 0)) = _19.fld1.0;
_19.fld6 = _21 as f32;
_19.fld4 = [_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5];
_19.fld5 = !90_u8;
match _25.3 {
0 => bb4,
1 => bb2,
2 => bb5,
89 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_19.fld0.0 = !_22;
Goto(bb9)
}
bb9 = {
SetDiscriminant(_24, 1);
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).4 = 54064_u16;
RET = _20;
_19.fld3 = _22 as usize;
_19.fld2 = _19.fld6 as u64;
_21 = 1940997055_i32 << _19.fld3;
_26 = -RET;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).2 = core::ptr::addr_of_mut!(_21);
Goto(bb10)
}
bb10 = {
_25 = (_19.fld1.0, _19.fld3, _19.fld1, 73_i8);
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).2 = core::ptr::addr_of_mut!(place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).1);
match Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb9,
54064 => bb12,
_ => bb11
}
}
bb11 = {
_19.fld2 = (-2774620483271695954_i64) as u64;
RET = _20;
_19.fld3 = !7292850652748144038_usize;
_23 = _19.fld0.0;
_21 = 23032907981823226252432660747780395376_u128 as i32;
_24 = Adt48::Variant3 { fld0: _19.fld1.0 };
_19.fld4 = [_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5];
place!(Field::<[u32; 6]>(Variant(_24, 3), 0)) = [3895543244_u32,1035591108_u32,2376025534_u32,3470719943_u32,3354473315_u32,1594754388_u32];
RET = _20 << _19.fld3;
_25.1 = _22 as usize;
_25 = (Field::<[u32; 6]>(Variant(_24, 3), 0), _19.fld3, _19.fld1, 61_i8);
_22 = RET < RET;
_25 = (_19.fld1.0, _19.fld3, _19.fld1, (-94_i8));
_25.2 = (_19.fld1.0,);
_19.fld0.0 = !_22;
_19.fld5 = 249_u8;
_19.fld5 = (-64724553157427884674710881622076209953_i128) as u8;
_25 = (_19.fld1.0, _19.fld3, _19.fld1, 89_i8);
_25.0 = Field::<[u32; 6]>(Variant(_24, 3), 0);
_17 = [18761_i16,(-14425_i16),(-6175_i16),13904_i16];
_19.fld1.0 = [4095025509_u32,2875895875_u32,1738887306_u32,3309710726_u32,880716734_u32,2375368484_u32];
place!(Field::<[u32; 6]>(Variant(_24, 3), 0)) = _19.fld1.0;
_19.fld6 = _21 as f32;
_19.fld4 = [_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5];
_19.fld5 = !90_u8;
match _25.3 {
0 => bb4,
1 => bb2,
2 => bb5,
89 => bb8,
_ => bb7
}
}
bb12 = {
_19.fld4 = [_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5,_19.fld5];
_19.fld6 = _19.fld5 as f32;
_18 = [Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4,Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4];
_26 = !RET;
_19.fld0.0 = _26 == _26;
_28 = _19.fld1.0;
Goto(bb13)
}
bb13 = {
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).3 = _19.fld2 as u32;
_19.fld0.1 = core::ptr::addr_of_mut!(place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).4);
_19.fld0.1 = core::ptr::addr_of_mut!(place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).4);
_21 = -(-1154005904_i32);
_25.1 = _19.fld3;
_19.fld1 = (_25.0,);
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).2 = core::ptr::addr_of_mut!(_31);
_25 = (_19.fld1.0, _19.fld3, _19.fld1, 110_i8);
_25.1 = _25.3 as usize;
_29 = 22234_i16 as i32;
place!(Field::<*mut (bool, *mut u16)>(Variant(_24, 1), 1)) = core::ptr::addr_of_mut!(_19.fld0);
_17 = [12427_i16,19736_i16,(-4273_i16),(-14872_i16)];
_25.1 = _19.fld3 - _19.fld3;
_17 = [(-20545_i16),(-4445_i16),(-9401_i16),32616_i16];
_31 = _21 - _29;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).3 = 3733698882_u32;
_23 = _22;
Goto(bb14)
}
bb14 = {
_19.fld0.1 = core::ptr::addr_of_mut!(place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).4);
_29 = _31 << _25.3;
place!(Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0)).3 = '\u{b347f}' as u32;
_19.fld6 = _25.3 as f32;
_19.fld6 = Field::<(u64, i32, *mut i32, u32, u16, *const i128)>(Variant(_24, 1), 0).4 as f32;
_19.fld5 = 78_u8;
_26 = _20 ^ _20;
_19.fld6 = 153965479230125845181364375582543785907_i128 as f32;
_33 = _26 & _26;
_24 = Adt48::Variant3 { fld0: _28 };
_34 = 251576427859474167107268529456081828779_u128 as f64;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(19_usize, 21_usize, Move(_21), 31_usize, Move(_31), 18_usize, Move(_18), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(19_usize, 22_usize, Move(_22), 20_usize, Move(_20), 36_usize, _36, 36_usize, _36), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{40c57}'), std::hint::black_box(9223372036854775807_isize), std::hint::black_box((-125_i8)), std::hint::black_box((-12996_i16)), std::hint::black_box((-221927181_i32)), std::hint::black_box((-4126253581719194711_i64)), std::hint::black_box((-77832073883972876600935949905978722732_i128)), std::hint::black_box(4_usize), std::hint::black_box(34_u8), std::hint::black_box(60713_u16), std::hint::black_box(2143195405_u32), std::hint::black_box(4946102717355836588_u64), std::hint::black_box(222302600974531955646114485407142092185_u128));
                
            }
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: bool,
fld1: [bool; 7],
fld2: isize,

},
Variant1{
fld0: usize,
fld1: f64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: [char; 4],
fld1: [bool; 7],
fld2: i128,

},
Variant1{
fld0: ([u8; 4], *const i64, [u32; 6], (u64, i32, *mut i32, u32, u16, *const i128)),

},
Variant2{
fld0: [u8; 7],
fld1: ([u32; 6], usize, ([u32; 6],), i8),

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: *const usize,
fld1: char,
fld2: *mut (bool, *mut u16),
fld3: u64,
fld4: *const i64,

},
Variant1{
fld0: Adt43,
fld1: *mut i32,

},
Variant2{
fld0: *mut f64,
fld1: [u8; 4],
fld2: u32,

},
Variant3{
fld0: i64,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128),
fld1: i64,
fld2: [i16; 4],

},
Variant1{
fld0: [u32; 6],
fld1: *mut usize,
fld2: usize,
fld3: *const (*mut u16, usize),
fld4: *const i64,
fld5: i32,
fld6: u64,
fld7: *mut f64,

},
Variant2{
fld0: [u8; 7],
fld1: ([u32; 6], usize, ([u32; 6],), i8),
fld2: Adt43,
fld3: (*mut u16, usize),
fld4: u16,
fld5: ([u32; 6],),
fld6: *const usize,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: [char; 4],
fld1: (bool, *mut u16),
fld2: isize,
fld3: f64,
fld4: *const i64,
fld5: [u16; 5],
fld6: i64,

},
Variant1{
fld0: ([u32; 6], usize, ([u32; 6],), i8),
fld1: u64,
fld2: Adt46,
fld3: *mut f64,
fld4: *const (*mut u16, usize),

},
Variant2{
fld0: *mut i32,
fld1: i128,
fld2: u8,
fld3: *const usize,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: [u16; 5],
fld1: [u8; 4],
fld2: (u64, i32, *mut i32, u32, u16, *const i128),
fld3: [char; 4],
fld4: *mut (bool, *mut u16),
fld5: *const (*mut u16, usize),

},
Variant1{
fld0: (u64, i32, *mut i32, u32, u16, *const i128),
fld1: *mut (bool, *mut u16),
fld2: *const i64,

},
Variant2{
fld0: bool,
fld1: *const (*mut u16, usize),
fld2: isize,
fld3: u8,

},
Variant3{
fld0: [u32; 6],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: i128,
fld1: *mut u16,
fld2: [bool; 7],
fld3: [u16; 5],
fld4: [u32; 6],
fld5: [i64; 6],
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: [i64; 6],
fld1: Adt43,
fld2: Adt48,

},
Variant1{
fld0: u64,

},
Variant2{
fld0: *mut f64,
fld1: i16,
fld2: *const i128,

},
Variant3{
fld0: [i16; 4],
fld1: Adt44,
fld2: f64,
fld3: Adt49,
fld4: u128,
fld5: *mut i32,

}}
#[derive(Debug)]
pub struct Adt51 {
fld0: Adt50,
fld1: char,
fld2: [u8; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: (bool, *mut u16),
fld1: ([u32; 6],),
fld2: u64,
fld3: usize,
fld4: [u8; 7],
fld5: u8,
fld6: f32,
fld7: *const i64,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: [u16; 5],

},
Variant1{
fld0: usize,
fld1: *const i64,
fld2: [u8; 7],
fld3: [u16; 5],
fld4: [i16; 4],
fld5: Adt45,
fld6: u128,

},
Variant2{
fld0: ([u32; 6],),

},
Variant3{
fld0: [u16; 5],
fld1: [char; 4],
fld2: [i16; 4],
fld3: *mut f64,
fld4: u16,
fld5: [u32; 6],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: *mut usize,
fld1: usize,
fld2: (u64, i32, *mut i32, u32, u16, *const i128),
fld3: Adt47,
fld4: u128,

},
Variant1{
fld0: [char; 4],
fld1: Adt52,
fld2: Adt53,
fld3: *const i64,
fld4: f64,
fld5: u128,

},
Variant2{
fld0: *mut u16,
fld1: char,
fld2: Adt50,
fld3: [u8; 7],
fld4: Adt51,
fld5: u8,
fld6: u16,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt54,

},
Variant1{
fld0: ([u8; 7], i16, ([u32; 6], usize, ([u32; 6],), i8), i128),
fld1: *mut u16,
fld2: (bool, *mut u16),
fld3: *mut usize,

},
Variant2{
fld0: *mut (bool, *mut u16),
fld1: [u16; 5],
fld2: isize,
fld3: Adt50,
fld4: *mut u16,
fld5: [u8; 4],
fld6: u16,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: bool,
fld1: i64,
fld2: ([u8; 4], *const i64, [u32; 6], (u64, i32, *mut i32, u32, u16, *const i128)),

},
Variant1{
fld0: Adt43,
fld1: char,
fld2: *const (*mut u16, usize),
fld3: *const i64,
fld4: u128,
fld5: Adt51,
fld6: [u8; 7],
fld7: *mut usize,

},
Variant2{
fld0: Adt49,

}}
#[derive(Debug)]
pub struct Adt57 {
fld0: Adt53,
fld1: *mut i32,
fld2: [u8; 7],
fld3: i8,
fld4: i16,
fld5: u128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt58 {
fld0: *const i128,
}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: *mut usize,
fld1: Adt49,
fld2: u8,
fld3: (bool, *mut u16),
fld4: Adt45,
fld5: *const i128,
fld6: *mut (bool, *mut u16),

},
Variant1{
fld0: [char; 4],
fld1: f32,
fld2: i64,
fld3: Adt47,

},
Variant2{
fld0: f32,
fld1: *mut u16,
fld2: Adt54,
fld3: i8,
fld4: Adt49,

}}

