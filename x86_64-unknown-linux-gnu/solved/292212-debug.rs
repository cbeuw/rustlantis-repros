#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: u128,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u64) -> [isize; 4] {
mir! {
type RET = [isize; 4];
let _12: isize;
let _13: [isize; 4];
let _14: [u128; 4];
let _15: *mut *const [u16; 3];
let _16: Adt56;
let _17: isize;
let _18: [isize; 6];
let _19: isize;
let _20: char;
let _21: i16;
let _22: [isize; 4];
let _23: isize;
let _24: Adt45;
let _25: isize;
let _26: [isize; 4];
let _27: char;
let _28: bool;
let _29: i64;
let _30: isize;
let _31: (usize,);
let _32: f64;
let _33: bool;
let _34: [i16; 5];
let _35: f32;
let _36: [isize; 6];
let _37: *mut i16;
let _38: f32;
let _39: isize;
let _40: f32;
let _41: ();
let _42: ();
{
_3 = (-9223372036854775808_isize) ^ 116_isize;
_8 = 65440588841499718264290410945097111318_i128 & 70244541452022006908137667085811390184_i128;
_4 = 149379504288287099874636193498307029658_u128 >> _8;
_6 = -1818684933_i32;
_9 = !7995166160053545491_usize;
RET = [_3,_3,_3,_3];
_11 = 7658180666425920243_u64 ^ 13925946909915223165_u64;
_1 = false & true;
_9 = 17266536203648521389_usize;
_2 = '\u{b53b6}';
_6 = -965945730_i32;
_5 = (-4059_i16);
_7 = _8 as i64;
Goto(bb1)
}
bb1 = {
_11 = 14617015282013489082_u64 & 16800217930446763099_u64;
_6 = (-1431888706_i32) << _5;
_8 = 93229429880887766419867403040380084259_i128 >> _9;
_3 = 49_isize | (-48_isize);
_12 = _3;
_1 = _8 <= _8;
_8 = 92126409477250547758974610830728721014_i128 << _6;
_2 = '\u{a7975}';
_10 = 167_u8;
_10 = 8_u8;
_12 = _8 as isize;
_2 = '\u{e9112}';
RET = [_12,_12,_3,_12];
_1 = !false;
RET = [_12,_3,_3,_12];
_9 = !4_usize;
_9 = _4 as usize;
_1 = _7 <= _7;
_11 = 4918442562582246086_u64 + 1960282045039666810_u64;
_7 = (-5075936307055468712_i64);
_13 = [_12,_3,_12,_3];
_9 = 5_usize;
_4 = _11 as u128;
RET = [_3,_12,_12,_12];
_10 = 124_u8;
Call(_14 = fn1(RET, _8, _3, _12, _1, _2, RET, _7, _5, _1, _3, _5, _11, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = 4153876759685811180_u64 & 13196652301243873113_u64;
_9 = !2_usize;
RET = [_12,_3,_3,_3];
_13 = RET;
_12 = _3 + _3;
_11 = _10 as u64;
RET = [_12,_12,_12,_12];
_9 = 6_usize | 17251869656487848278_usize;
_3 = _12 * _12;
_7 = (-5867159068820401732_i64) << _12;
_5 = 26155_i16 - (-6636_i16);
_14 = [_4,_4,_4,_4];
_5 = !6602_i16;
_11 = _2 as u64;
_2 = '\u{95725}';
match _10 {
0 => bb1,
1 => bb3,
124 => bb5,
_ => bb4
}
}
bb3 = {
_11 = 14617015282013489082_u64 & 16800217930446763099_u64;
_6 = (-1431888706_i32) << _5;
_8 = 93229429880887766419867403040380084259_i128 >> _9;
_3 = 49_isize | (-48_isize);
_12 = _3;
_1 = _8 <= _8;
_8 = 92126409477250547758974610830728721014_i128 << _6;
_2 = '\u{a7975}';
_10 = 167_u8;
_10 = 8_u8;
_12 = _8 as isize;
_2 = '\u{e9112}';
RET = [_12,_12,_3,_12];
_1 = !false;
RET = [_12,_3,_3,_12];
_9 = !4_usize;
_9 = _4 as usize;
_1 = _7 <= _7;
_11 = 4918442562582246086_u64 + 1960282045039666810_u64;
_7 = (-5075936307055468712_i64);
_13 = [_12,_3,_12,_3];
_9 = 5_usize;
_4 = _11 as u128;
RET = [_3,_12,_12,_12];
_10 = 124_u8;
Call(_14 = fn1(RET, _8, _3, _12, _1, _2, RET, _7, _5, _1, _3, _5, _11, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_13 = [_12,_12,_3,_12];
_14 = [_4,_4,_4,_4];
_12 = _1 as isize;
_8 = _6 as i128;
_7 = _8 as i64;
_12 = -_3;
RET = [_3,_3,_3,_12];
RET = [_12,_3,_12,_12];
_2 = '\u{52c1a}';
_11 = !3856874121971614995_u64;
RET = [_3,_12,_3,_12];
_4 = _10 as u128;
_6 = 1347067203_i32 ^ 622265271_i32;
Goto(bb6)
}
bb6 = {
_3 = _5 as isize;
_17 = _10 as isize;
_17 = _9 as isize;
_14 = [_4,_4,_4,_4];
_11 = 1598625484824383603_u64 << _7;
RET = [_12,_12,_3,_17];
_8 = _5 as i128;
_18 = [_12,_12,_12,_3,_12,_12];
RET = [_12,_12,_12,_3];
_10 = 52_u8;
_4 = _10 as u128;
_2 = '\u{7d026}';
_2 = '\u{f9e9a}';
_20 = _2;
_17 = _5 as isize;
_9 = 6541983384315573376_usize >> _3;
_5 = 28324_i16;
_12 = -_17;
_12 = _3 << _17;
_8 = 75581691384874575724289976696016420539_i128;
_18 = [_3,_12,_12,_3,_17,_12];
Goto(bb7)
}
bb7 = {
_20 = _2;
_11 = 10016603213251836346_u64 >> _4;
_24.fld5 = 2579704538_u32 & 2206402217_u32;
RET = _13;
_23 = _3;
_10 = 110_u8;
_15 = core::ptr::addr_of_mut!(_24.fld7.2);
_12 = (-116_i8) as isize;
_13 = [_12,_17,_17,_3];
_24.fld4 = _5 | _5;
_22 = [_23,_17,_3,_12];
_24.fld7.3 = -_6;
_24.fld0 = _1;
_24.fld4 = _5 ^ _5;
_9 = _4 as usize;
_24.fld5 = !126068359_u32;
_24.fld1 = core::ptr::addr_of!(_1);
_13 = RET;
_7 = (-2274945049220584678_i64) | (-8987004323956562304_i64);
_21 = _7 as i16;
_19 = _3;
_4 = 239089653450430178874345016704522046531_u128;
_1 = !_24.fld0;
_9 = _1 as usize;
_4 = 337393438667033800582794120306465106085_u128 ^ 15538746434025018829198267604950359313_u128;
_24.fld3 = [_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5];
Goto(bb8)
}
bb8 = {
_17 = _19 | _19;
_27 = _20;
_24.fld2 = [_3,_19,_23,_3,_3,_12];
_24.fld7.1 = [_8,_8,_8];
_6 = 8793_u16 as i32;
_25 = 64102_u16 as isize;
_18 = [_17,_3,_23,_17,_25,_19];
_3 = -_17;
_1 = _24.fld0;
_21 = (-79_i8) as i16;
_1 = _21 >= _21;
_3 = _19 >> _21;
RET = _22;
_3 = !_17;
_26 = [_12,_17,_3,_3];
_23 = -_25;
_30 = _24.fld5 as isize;
_4 = 238031649424778454895586866732368948090_u128;
_28 = _24.fld0 > _1;
match _10 {
0 => bb9,
1 => bb10,
2 => bb11,
110 => bb13,
_ => bb12
}
}
bb9 = {
_20 = _2;
_11 = 10016603213251836346_u64 >> _4;
_24.fld5 = 2579704538_u32 & 2206402217_u32;
RET = _13;
_23 = _3;
_10 = 110_u8;
_15 = core::ptr::addr_of_mut!(_24.fld7.2);
_12 = (-116_i8) as isize;
_13 = [_12,_17,_17,_3];
_24.fld4 = _5 | _5;
_22 = [_23,_17,_3,_12];
_24.fld7.3 = -_6;
_24.fld0 = _1;
_24.fld4 = _5 ^ _5;
_9 = _4 as usize;
_24.fld5 = !126068359_u32;
_24.fld1 = core::ptr::addr_of!(_1);
_13 = RET;
_7 = (-2274945049220584678_i64) | (-8987004323956562304_i64);
_21 = _7 as i16;
_19 = _3;
_4 = 239089653450430178874345016704522046531_u128;
_1 = !_24.fld0;
_9 = _1 as usize;
_4 = 337393438667033800582794120306465106085_u128 ^ 15538746434025018829198267604950359313_u128;
_24.fld3 = [_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5];
Goto(bb8)
}
bb10 = {
_3 = _5 as isize;
_17 = _10 as isize;
_17 = _9 as isize;
_14 = [_4,_4,_4,_4];
_11 = 1598625484824383603_u64 << _7;
RET = [_12,_12,_3,_17];
_8 = _5 as i128;
_18 = [_12,_12,_12,_3,_12,_12];
RET = [_12,_12,_12,_3];
_10 = 52_u8;
_4 = _10 as u128;
_2 = '\u{7d026}';
_2 = '\u{f9e9a}';
_20 = _2;
_17 = _5 as isize;
_9 = 6541983384315573376_usize >> _3;
_5 = 28324_i16;
_12 = -_17;
_12 = _3 << _17;
_8 = 75581691384874575724289976696016420539_i128;
_18 = [_3,_12,_12,_3,_17,_12];
Goto(bb7)
}
bb11 = {
_13 = [_12,_12,_3,_12];
_14 = [_4,_4,_4,_4];
_12 = _1 as isize;
_8 = _6 as i128;
_7 = _8 as i64;
_12 = -_3;
RET = [_3,_3,_3,_12];
RET = [_12,_3,_12,_12];
_2 = '\u{52c1a}';
_11 = !3856874121971614995_u64;
RET = [_3,_12,_3,_12];
_4 = _10 as u128;
_6 = 1347067203_i32 ^ 622265271_i32;
Goto(bb6)
}
bb12 = {
_11 = 14617015282013489082_u64 & 16800217930446763099_u64;
_6 = (-1431888706_i32) << _5;
_8 = 93229429880887766419867403040380084259_i128 >> _9;
_3 = 49_isize | (-48_isize);
_12 = _3;
_1 = _8 <= _8;
_8 = 92126409477250547758974610830728721014_i128 << _6;
_2 = '\u{a7975}';
_10 = 167_u8;
_10 = 8_u8;
_12 = _8 as isize;
_2 = '\u{e9112}';
RET = [_12,_12,_3,_12];
_1 = !false;
RET = [_12,_3,_3,_12];
_9 = !4_usize;
_9 = _4 as usize;
_1 = _7 <= _7;
_11 = 4918442562582246086_u64 + 1960282045039666810_u64;
_7 = (-5075936307055468712_i64);
_13 = [_12,_3,_12,_3];
_9 = 5_usize;
_4 = _11 as u128;
RET = [_3,_12,_12,_12];
_10 = 124_u8;
Call(_14 = fn1(RET, _8, _3, _12, _1, _2, RET, _7, _5, _1, _3, _5, _11, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_21 = _17 as i16;
_18 = [_12,_17,_3,_17,_25,_19];
_27 = _2;
_17 = _30 ^ _19;
_24.fld0 = _1;
_31 = (_9,);
_23 = _24.fld7.3 as isize;
_24.fld5 = !1375816610_u32;
_14 = [_4,_4,_4,_4];
_24.fld6 = _4 as f32;
_24.fld5 = 3112216767_u32 + 1443690671_u32;
_15 = core::ptr::addr_of_mut!(_24.fld7.2);
_14 = [_4,_4,_4,_4];
_25 = _3 * _3;
_24.fld6 = _8 as f32;
_18 = _24.fld2;
_8 = (-130102324105192730155435725937034441879_i128) | 59956830836608925030461853735631244730_i128;
_24.fld1 = core::ptr::addr_of!(_1);
_24.fld7.3 = _6;
_34 = [_21,_21,_5,_21,_21];
_21 = -_5;
_30 = -_25;
_24.fld4 = _5;
_17 = _11 as isize;
_24.fld3 = [_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5,_24.fld5];
match _4 {
0 => bb14,
1 => bb15,
238031649424778454895586866732368948090 => bb17,
_ => bb16
}
}
bb14 = {
_11 = 14617015282013489082_u64 & 16800217930446763099_u64;
_6 = (-1431888706_i32) << _5;
_8 = 93229429880887766419867403040380084259_i128 >> _9;
_3 = 49_isize | (-48_isize);
_12 = _3;
_1 = _8 <= _8;
_8 = 92126409477250547758974610830728721014_i128 << _6;
_2 = '\u{a7975}';
_10 = 167_u8;
_10 = 8_u8;
_12 = _8 as isize;
_2 = '\u{e9112}';
RET = [_12,_12,_3,_12];
_1 = !false;
RET = [_12,_3,_3,_12];
_9 = !4_usize;
_9 = _4 as usize;
_1 = _7 <= _7;
_11 = 4918442562582246086_u64 + 1960282045039666810_u64;
_7 = (-5075936307055468712_i64);
_13 = [_12,_3,_12,_3];
_9 = 5_usize;
_4 = _11 as u128;
RET = [_3,_12,_12,_12];
_10 = 124_u8;
Call(_14 = fn1(RET, _8, _3, _12, _1, _2, RET, _7, _5, _1, _3, _5, _11, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_17 = _19 | _19;
_27 = _20;
_24.fld2 = [_3,_19,_23,_3,_3,_12];
_24.fld7.1 = [_8,_8,_8];
_6 = 8793_u16 as i32;
_25 = 64102_u16 as isize;
_18 = [_17,_3,_23,_17,_25,_19];
_3 = -_17;
_1 = _24.fld0;
_21 = (-79_i8) as i16;
_1 = _21 >= _21;
_3 = _19 >> _21;
RET = _22;
_3 = !_17;
_26 = [_12,_17,_3,_3];
_23 = -_25;
_30 = _24.fld5 as isize;
_4 = 238031649424778454895586866732368948090_u128;
_28 = _24.fld0 > _1;
match _10 {
0 => bb9,
1 => bb10,
2 => bb11,
110 => bb13,
_ => bb12
}
}
bb16 = {
_11 = 4153876759685811180_u64 & 13196652301243873113_u64;
_9 = !2_usize;
RET = [_12,_3,_3,_3];
_13 = RET;
_12 = _3 + _3;
_11 = _10 as u64;
RET = [_12,_12,_12,_12];
_9 = 6_usize | 17251869656487848278_usize;
_3 = _12 * _12;
_7 = (-5867159068820401732_i64) << _12;
_5 = 26155_i16 - (-6636_i16);
_14 = [_4,_4,_4,_4];
_5 = !6602_i16;
_11 = _2 as u64;
_2 = '\u{95725}';
match _10 {
0 => bb1,
1 => bb3,
124 => bb5,
_ => bb4
}
}
bb17 = {
_22 = [_12,_3,_23,_12];
_24.fld4 = _5;
_5 = -_24.fld4;
_35 = -_24.fld6;
_24.fld6 = _35 - _35;
_24.fld7.1 = [_8,_8,_8];
_33 = _1;
_39 = _9 as isize;
_9 = _31.0 + _31.0;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(0_usize, 9_usize, Move(_9), 34_usize, Move(_34), 25_usize, Move(_25), 23_usize, Move(_23)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(0_usize, 19_usize, Move(_19), 11_usize, Move(_11), 5_usize, Move(_5), 21_usize, Move(_21)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(0_usize, 17_usize, Move(_17), 1_usize, Move(_1), 13_usize, Move(_13), 20_usize, Move(_20)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_41 = dump_var(0_usize, 14_usize, Move(_14), 26_usize, Move(_26), 18_usize, Move(_18), 42_usize, _42), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [isize; 4],mut _2: i128,mut _3: isize,mut _4: isize,mut _5: bool,mut _6: char,mut _7: [isize; 4],mut _8: i64,mut _9: i16,mut _10: bool,mut _11: isize,mut _12: i16,mut _13: u64,mut _14: [isize; 4]) -> [u128; 4] {
mir! {
type RET = [u128; 4];
let _15: [u16; 3];
let _16: Adt58;
let _17: [i128; 3];
let _18: i8;
let _19: *mut [char; 5];
let _20: isize;
let _21: (((i8, u128, &'static bool), [char; 5]),);
let _22: *const (u8, i8, (i8, u128, &'static bool), char);
let _23: f64;
let _24: char;
let _25: u64;
let _26: [u32; 7];
let _27: f32;
let _28: Adt47;
let _29: *const bool;
let _30: isize;
let _31: (usize,);
let _32: f64;
let _33: f64;
let _34: (usize,);
let _35: isize;
let _36: Adt55;
let _37: char;
let _38: i128;
let _39: Adt56;
let _40: (usize,);
let _41: f64;
let _42: ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _43: ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _44: Adt50;
let _45: f32;
let _46: (*mut [char; 5], [i128; 3], *const [u16; 3], i32);
let _47: i128;
let _48: i128;
let _49: f64;
let _50: f64;
let _51: Adt58;
let _52: isize;
let _53: char;
let _54: [isize; 4];
let _55: ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _56: char;
let _57: [i16; 5];
let _58: Adt55;
let _59: f64;
let _60: Adt45;
let _61: i32;
let _62: isize;
let _63: Adt54;
let _64: isize;
let _65: [isize; 4];
let _66: isize;
let _67: ();
let _68: ();
{
_8 = (-4431124271742766592_i64);
RET = [246534303786860452884188851939603761497_u128,334307324345394080968698362031822538655_u128,49806730309777408971429353608059637490_u128,261059200364266334801388091755083330578_u128];
_1 = _14;
_12 = _9 & _9;
_17 = [_2,_2,_2];
_6 = '\u{12fd4}';
_18 = 500003303_i32 as i8;
RET = [308587235728707614651998210387219119198_u128,173261638657834106407506728934069500522_u128,27786203482005100038005763921450742926_u128,16117098967809595989436692139452322135_u128];
_12 = _6 as i16;
_9 = _13 as i16;
RET = [68851385655720485526097584617182486799_u128,110092395664395472399898153849535733010_u128,216682652331648101632369074755166962126_u128,124727942005464380089466946445783780756_u128];
_8 = -(-2068235712024989208_i64);
_1 = [_3,_4,_4,_4];
_15 = [35529_u16,3365_u16,57316_u16];
_1 = [_4,_11,_11,_4];
RET = [242488259509836540488787904203511007465_u128,315654688678413975280929090983701939761_u128,91361610367894023569627221128375010240_u128,224129236980728645145576304085507930375_u128];
_3 = _4 ^ _4;
_1 = [_3,_3,_11,_4];
_14 = [_3,_3,_3,_3];
_5 = !_10;
_5 = !_10;
_21.0.0.0 = _18;
_10 = _5;
Goto(bb1)
}
bb1 = {
_7 = _14;
_1 = _7;
_21.0.1 = [_6,_6,_6,_6,_6];
_4 = _3;
Goto(bb2)
}
bb2 = {
_21.0.0.1 = _10 as u128;
_17 = [_2,_2,_2];
_19 = core::ptr::addr_of_mut!(_21.0.1);
_10 = _5 & _5;
_26 = [2116982503_u32,3719939812_u32,1707663107_u32,1480885494_u32,3133022785_u32,3212992850_u32,3340678436_u32];
_19 = core::ptr::addr_of_mut!((*_19));
_1 = [_3,_3,_4,_4];
_3 = _4;
_29 = core::ptr::addr_of!(_10);
_8 = 7339111676586798244_i64 >> _21.0.0.1;
_9 = _12 >> _8;
_20 = _4 | _4;
_8 = -5738056822539720898_i64;
Call(_32 = fn2(_5, _9, _29, _1, _4, _14, _11, _29), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = !(*_29);
_25 = _6 as u64;
_24 = _6;
_23 = _32 * _32;
_30 = _20 ^ _3;
_3 = _30 ^ _11;
_16 = Adt58::Variant0 { fld0: 324918945_i32,fld1: _29,fld2: _17 };
_3 = -_20;
place!(Field::<i32>(Variant(_16, 0), 0)) = 7_usize as i32;
_24 = _6;
_26 = [403295001_u32,1427228060_u32,1441321434_u32,3696005306_u32,2128925_u32,2668741106_u32,3482300430_u32];
_31.0 = !2_usize;
_16 = Adt58::Variant0 { fld0: (-278833624_i32),fld1: _29,fld2: _17 };
_1 = _14;
place!(Field::<i32>(Variant(_16, 0), 0)) = 56271230_i32;
_32 = -_23;
_21.0.0.1 = !105375819873684626410952169464366817938_u128;
_21.0.0.2 = &(*_29);
_13 = _25;
_16 = Adt58::Variant0 { fld0: (-1723880214_i32),fld1: _29,fld2: _17 };
_15 = [50209_u16,1454_u16,24367_u16];
_7 = _1;
_21.0.0.1 = 329523486603816906118941999795155471331_u128 << _20;
_27 = _13 as f32;
_20 = _4;
Call(_3 = fn4(Field::<*const bool>(Variant(_16, 0), 1), Move(_21.0), _26, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_37 = _6;
place!(Field::<i32>(Variant(_16, 0), 0)) = 195268023556179656649768537939572270394_u128 as i32;
_31.0 = 4_usize << _11;
_29 = Field::<*const bool>(Variant(_16, 0), 1);
_35 = _30;
_12 = -_9;
_25 = !_13;
_33 = _23 * _32;
_34.0 = _31.0;
_36.fld0 = _10;
_13 = !_25;
_40.0 = _34.0;
_9 = _25 as i16;
_19 = core::ptr::addr_of_mut!((*_19));
_30 = 120473691770294352200038134004228255125_u128 as isize;
_30 = _35 & _35;
_8 = 321517881_u32 as i64;
_36.fld1 = _2 << _12;
_19 = core::ptr::addr_of_mut!((*_19));
_29 = core::ptr::addr_of!(_5);
_21.0.0.0 = _18 | _18;
_21.0.0.2 = &(*_29);
(*_29) = _36.fld0;
place!(Field::<i32>(Variant(_16, 0), 0)) = _12 as i32;
_21.0.0.2 = &(*_29);
_43.4 = _6;
(*_29) = _36.fld0 | _36.fld0;
Goto(bb5)
}
bb5 = {
_37 = _6;
_42.0 = [_35,_30,_30,_30];
_38 = _36.fld1;
_5 = _10;
_34.0 = !_31.0;
_21.0.0.1 = !120068633345999296307135558020640792203_u128;
_36 = Adt55 { fld0: _5,fld1: _38 };
_25 = _13 & _13;
_42.3 = _42.0;
_43.0 = _7;
_28 = Adt47::Variant2 { fld0: 126_u8,fld1: _26 };
_38 = _36.fld1;
_37 = _6;
SetDiscriminant(_16, 0);
_23 = -_32;
_3 = _30 ^ _30;
Goto(bb6)
}
bb6 = {
_43.3 = _1;
place!(Field::<*const bool>(Variant(_16, 0), 1)) = _29;
_28 = Adt47::Variant0 { fld0: 70388746_i32 };
_43.0 = [_35,_3,_3,_30];
_36.fld0 = !_5;
_25 = !_13;
_46.3 = 55514_u16 as i32;
_47 = _38;
_17 = [_36.fld1,_47,_36.fld1];
_36.fld0 = !(*_29);
place!(Field::<*const bool>(Variant(_16, 0), 1)) = core::ptr::addr_of!(_5);
RET = [_21.0.0.1,_21.0.0.1,_21.0.0.1,_21.0.0.1];
_8 = 1731898172714179783_i64 & 2467369743097334621_i64;
place!(Field::<[i128; 3]>(Variant(_16, 0), 2)) = [_36.fld1,_2,_47];
_5 = _38 > _36.fld1;
_17 = Field::<[i128; 3]>(Variant(_16, 0), 2);
_43.4 = _24;
_43.4 = _24;
_43 = (_42.3, _15, _13, _42.0, _6);
_43 = (_42.0, _15, _25, _42.3, _37);
_23 = _33 - _33;
Goto(bb7)
}
bb7 = {
_25 = _43.2;
_46.1 = [_47,_36.fld1,_47];
_45 = _27;
_9 = _27 as i16;
_3 = -_35;
_13 = _46.3 as u64;
_49 = _23 + _32;
_36 = Adt55 { fld0: (*_29),fld1: _38 };
_50 = _33 * _49;
_44.fld0 = core::ptr::addr_of_mut!(_12);
_7 = [_30,_35,_3,_4];
_1 = _7;
_17 = [_38,_36.fld1,_38];
Goto(bb8)
}
bb8 = {
_43.0 = [_35,_35,_30,_4];
_34 = _31;
_42 = _43;
_55.4 = _37;
_46.3 = (-1322051603_i32);
_55.4 = _42.4;
_46.0 = _19;
_21.0.1 = [_37,_37,_24,_37,_55.4];
_32 = 572_u16 as f64;
_21.0.0.2 = &(*_29);
_36.fld1 = _47;
_32 = -_50;
(*_29) = !_36.fld0;
match _46.3 {
0 => bb1,
1 => bb7,
2 => bb6,
340282366920938463463374607430446159853 => bb10,
_ => bb9
}
}
bb9 = {
_5 = !(*_29);
_25 = _6 as u64;
_24 = _6;
_23 = _32 * _32;
_30 = _20 ^ _3;
_3 = _30 ^ _11;
_16 = Adt58::Variant0 { fld0: 324918945_i32,fld1: _29,fld2: _17 };
_3 = -_20;
place!(Field::<i32>(Variant(_16, 0), 0)) = 7_usize as i32;
_24 = _6;
_26 = [403295001_u32,1427228060_u32,1441321434_u32,3696005306_u32,2128925_u32,2668741106_u32,3482300430_u32];
_31.0 = !2_usize;
_16 = Adt58::Variant0 { fld0: (-278833624_i32),fld1: _29,fld2: _17 };
_1 = _14;
place!(Field::<i32>(Variant(_16, 0), 0)) = 56271230_i32;
_32 = -_23;
_21.0.0.1 = !105375819873684626410952169464366817938_u128;
_21.0.0.2 = &(*_29);
_13 = _25;
_16 = Adt58::Variant0 { fld0: (-1723880214_i32),fld1: _29,fld2: _17 };
_15 = [50209_u16,1454_u16,24367_u16];
_7 = _1;
_21.0.0.1 = 329523486603816906118941999795155471331_u128 << _20;
_27 = _13 as f32;
_20 = _4;
Call(_3 = fn4(Field::<*const bool>(Variant(_16, 0), 1), Move(_21.0), _26, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_11 = _35 | _3;
_50 = _32;
_21.0.0.0 = _18 >> _35;
_58.fld1 = -_47;
_55 = (_7, _43.1, _42.2, _1, _42.4);
_17 = [_47,_38,_38];
_58.fld0 = _36.fld0;
_34.0 = !_31.0;
_5 = _36.fld0;
_29 = Field::<*const bool>(Variant(_16, 0), 1);
place!(Field::<i32>(Variant(_28, 0), 0)) = _8 as i32;
_6 = _55.4;
_60.fld5 = !2280614886_u32;
_60.fld1 = core::ptr::addr_of!(_5);
_56 = _6;
_32 = -_33;
_28 = Adt47::Variant0 { fld0: _46.3 };
_46.3 = _45 as i32;
_45 = _9 as f32;
_17 = [_47,_38,_2];
place!(Field::<*const bool>(Variant(_16, 0), 1)) = core::ptr::addr_of!(_10);
_55.2 = !_42.2;
Goto(bb11)
}
bb11 = {
_40 = (_31.0,);
_47 = _2;
_5 = !_36.fld0;
match Field::<i32>(Variant(_28, 0), 0) {
340282366920938463463374607430446159853 => bb12,
_ => bb1
}
}
bb12 = {
_60.fld0 = !_5;
_53 = _43.4;
_3 = _21.0.0.1 as isize;
SetDiscriminant(_28, 2);
_60.fld7.1 = [_36.fld1,_47,_2];
_58.fld0 = _10;
Goto(bb13)
}
bb13 = {
_56 = _24;
_57 = [_12,_12,_12,_12,_12];
_46.3 = (-1764843229_i32);
_19 = _46.0;
_11 = _43.2 as isize;
_36.fld1 = _2;
_3 = -_35;
_2 = _47 + _36.fld1;
_47 = -_2;
_24 = _43.4;
_37 = _43.4;
_52 = _56 as isize;
_17 = [_38,_47,_38];
_12 = _9 + _9;
_54 = [_30,_3,_30,_35];
_60.fld7.3 = _46.3;
Goto(bb14)
}
bb14 = {
_64 = _3 | _35;
_15 = [61984_u16,58868_u16,35809_u16];
_25 = !_42.2;
_60.fld2 = [_30,_4,_4,_4,_64,_30];
_65 = [_20,_35,_64,_20];
_30 = -_64;
_42.3 = [_30,_35,_64,_30];
_4 = !_64;
place!(Field::<*const bool>(Variant(_16, 0), 1)) = core::ptr::addr_of!(_60.fld0);
_31.0 = _40.0 ^ _40.0;
_28 = Adt47::Variant2 { fld0: 123_u8,fld1: _26 };
_60.fld7.0 = _46.0;
_40.0 = _31.0;
_59 = -_50;
_48 = _46.3 as i128;
_58.fld0 = !_5;
_43.3 = [_4,_4,_3,_3];
place!(Field::<i32>(Variant(_16, 0), 0)) = _46.3 & _60.fld7.3;
_28 = Adt47::Variant2 { fld0: 5_u8,fld1: _26 };
_60.fld3 = _26;
_9 = _12;
_62 = _21.0.0.1 as isize;
_14 = _42.0;
Goto(bb15)
}
bb15 = {
Call(_67 = dump_var(1_usize, 48_usize, Move(_48), 34_usize, Move(_34), 24_usize, Move(_24), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_67 = dump_var(1_usize, 52_usize, Move(_52), 11_usize, Move(_11), 57_usize, Move(_57), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_67 = dump_var(1_usize, 37_usize, Move(_37), 13_usize, Move(_13), 62_usize, Move(_62), 64_usize, Move(_64)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_67 = dump_var(1_usize, 26_usize, Move(_26), 25_usize, Move(_25), 20_usize, Move(_20), 12_usize, Move(_12)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_67 = dump_var(1_usize, 14_usize, Move(_14), 38_usize, Move(_38), 55_usize, Move(_55), 43_usize, Move(_43)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: bool,mut _2: i16,mut _3: *const bool,mut _4: [isize; 4],mut _5: isize,mut _6: [isize; 4],mut _7: isize,mut _8: *const bool) -> f64 {
mir! {
type RET = f64;
let _9: Adt51;
let _10: f64;
let _11: usize;
let _12: i64;
let _13: bool;
let _14: [char; 5];
let _15: isize;
let _16: Adt51;
let _17: [i128; 3];
let _18: ();
let _19: ();
{
_2 = 23063_i16;
RET = (-4563551974341348790_i64) as f64;
_1 = false;
_2 = '\u{d1343}' as i16;
_4 = _6;
_6 = [_5,_5,_7,_5];
_7 = _5;
Goto(bb1)
}
bb1 = {
_7 = -_5;
Goto(bb2)
}
bb2 = {
_2 = !20126_i16;
RET = 214433426776408881993829636386587430547_u128 as f64;
_3 = _8;
RET = 131660383496599145686926514487028629300_i128 as f64;
_12 = -(-2201191154558869567_i64);
_7 = _5;
_4 = [_7,_7,_7,_5];
_6 = [_7,_5,_5,_5];
_11 = 61010548291729750449616912119121020566_u128 as usize;
_6 = [_7,_5,_7,_7];
_1 = true & false;
_3 = _8;
_5 = -_7;
_13 = _1 & _1;
_5 = _2 as isize;
_14 = ['\u{9ce0d}','\u{83a13}','\u{12258}','\u{96602}','\u{fc309}'];
_14 = ['\u{e1852}','\u{7021e}','\u{1028c0}','\u{ea5ef}','\u{c144a}'];
_13 = _11 <= _11;
_14 = ['\u{5462d}','\u{a0f3}','\u{a27f4}','\u{419de}','\u{dddbd}'];
_11 = !1_usize;
_11 = _12 as usize;
_7 = -_5;
_10 = 62976546988885311766073686286339727872_i128 as f64;
_10 = RET + RET;
RET = _10;
_14 = ['\u{cf54e}','\u{55cc}','\u{15faf}','\u{3519c}','\u{5a798}'];
_5 = _7 ^ _7;
_8 = _3;
Goto(bb3)
}
bb3 = {
_7 = !_5;
_12 = !8641920346977797743_i64;
_12 = !(-3313782232736326839_i64);
RET = 308224914237607756205480565698872463702_u128 as f64;
_14 = ['\u{932f1}','\u{fe5de}','\u{c00f8}','\u{40038}','\u{e1697}'];
_13 = !_1;
_3 = _8;
_13 = !_1;
_5 = _7 + _7;
_3 = core::ptr::addr_of!(_13);
RET = _10;
_14 = ['\u{7bf1c}','\u{a6a48}','\u{47516}','\u{6b5dc}','\u{4326f}'];
_15 = _7 * _7;
Call(_5 = fn3(_4, _14, _10, _15, _4, _6, _6, _4, _6, _15, _13, _4, _14, _8, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_10 = _5 as f64;
Goto(bb5)
}
bb5 = {
RET = _10 - _10;
_3 = _8;
_14 = ['\u{33c8d}','\u{ed50d}','\u{b3a40}','\u{e7d5f}','\u{10076a}'];
_17 = [146498284675273384304133170752909498524_i128,114125129529141445486337859617321088790_i128,50175946762877513797266645317016200756_i128];
_1 = _5 != _7;
_15 = 4209104645_u32 as isize;
_15 = _7 ^ _5;
Goto(bb6)
}
bb6 = {
Call(_18 = dump_var(2_usize, 17_usize, Move(_17), 5_usize, Move(_5), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_18 = dump_var(2_usize, 15_usize, Move(_15), 14_usize, Move(_14), 19_usize, _19, 19_usize, _19), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [isize; 4],mut _2: [char; 5],mut _3: f64,mut _4: isize,mut _5: [isize; 4],mut _6: [isize; 4],mut _7: [isize; 4],mut _8: [isize; 4],mut _9: [isize; 4],mut _10: isize,mut _11: bool,mut _12: [isize; 4],mut _13: [char; 5],mut _14: *const bool,mut _15: *const bool) -> isize {
mir! {
type RET = isize;
let _16: bool;
let _17: ();
let _18: ();
{
_13 = _2;
RET = _10 ^ _10;
_6 = _12;
_1 = [RET,_10,RET,RET];
_14 = core::ptr::addr_of!(_11);
_15 = core::ptr::addr_of!((*_14));
_4 = RET << _10;
_15 = _14;
RET = !_4;
_15 = _14;
_14 = _15;
_15 = core::ptr::addr_of!(_11);
_14 = core::ptr::addr_of!((*_15));
_8 = [RET,_4,RET,_4];
_5 = [_4,RET,RET,RET];
_8 = [RET,RET,_10,RET];
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(3_usize, 1_usize, Move(_1), 5_usize, Move(_5), 8_usize, Move(_8), 13_usize, Move(_13)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(3_usize, 11_usize, Move(_11), 2_usize, Move(_2), 18_usize, _18, 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: *const bool,mut _2: ((i8, u128, &'static bool), [char; 5]),mut _3: [u32; 7],mut _4: i64) -> isize {
mir! {
type RET = isize;
let _5: isize;
let _6: u64;
let _7: f32;
let _8: isize;
let _9: (i8, usize);
let _10: isize;
let _11: [i128; 3];
let _12: [char; 5];
let _13: (usize,);
let _14: [i16; 5];
let _15: usize;
let _16: f32;
let _17: [isize; 6];
let _18: [isize; 4];
let _19: f64;
let _20: Adt49;
let _21: [u128; 4];
let _22: [char; 5];
let _23: isize;
let _24: *mut *const [u16; 3];
let _25: u128;
let _26: i128;
let _27: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _28: u128;
let _29: [isize; 4];
let _30: i32;
let _31: bool;
let _32: *mut *const [u16; 3];
let _33: ();
let _34: ();
{
_4 = !3168247913761098917_i64;
_3 = [2707373223_u32,2305513471_u32,4022808127_u32,3195390170_u32,1661159708_u32,1410422426_u32,792984_u32];
_2.0.0 = _4 as i8;
_6 = 17096483506286868131_u64 * 12821872832731708163_u64;
_5 = 9223372036854775807_isize;
Call(_6 = core::intrinsics::transmute(_5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = -_5;
_3 = [33470349_u32,113428233_u32,791539573_u32,3771255607_u32,2755653334_u32,1621797744_u32,1458535692_u32];
_2.0.1 = !277517645725259152867757858228496143775_u128;
_2.0.0 = (-3_i8) + (-94_i8);
_5 = !RET;
RET = true as isize;
_5 = RET | RET;
Call(_2.0.0 = fn5(_2.1, _3, _5, _1, _1, _6, _1, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2.1 = ['\u{31799}','\u{83b06}','\u{2f327}','\u{56010}','\u{1e7c4}'];
_7 = 121588437_u32 as f32;
RET = _5;
Call(RET = core::intrinsics::transmute(_5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2.0.1 = 1930311362_u32 as u128;
_2.0.1 = 4635864814810727274210767511737465911_u128;
_4 = 3775785280408489181_i64 << _5;
_2.1 = ['\u{bf2b7}','\u{a00c9}','\u{f802f}','\u{feba6}','\u{9d7e4}'];
Goto(bb4)
}
bb4 = {
_8 = (-5212_i16) as isize;
_7 = 508217363_u32 as f32;
_9.0 = _7 as i8;
_2.1 = ['\u{176e3}','\u{7a31a}','\u{9698d}','\u{10b3ea}','\u{efa0c}'];
_6 = 5226134009605414808_u64;
_6 = 206_u8 as u64;
RET = false as isize;
RET = !_8;
_9.1 = _2.0.1 as usize;
_8 = RET ^ _5;
_10 = !_8;
_3 = [1464317351_u32,1794097523_u32,4041486319_u32,2867789859_u32,2239631799_u32,1728959482_u32,2990174107_u32];
_5 = _8 << _4;
_9 = (_2.0.0, 3_usize);
_2.0.0 = _9.0 >> _5;
_5 = _10;
_9.1 = 0_usize;
RET = 4537_u16 as isize;
_2.0.0 = -_9.0;
_2.1 = ['\u{1f8a5}','\u{fcfbe}','\u{e2b5e}','\u{fe0f9}','\u{416d1}'];
RET = _10 >> _9.0;
RET = -_10;
_12 = _2.1;
_9.0 = _2.0.0 << _10;
_2.0.0 = _9.0 - _9.0;
_11 = [117401136199013901750303903318851894591_i128,130010618822652420258087635945375295309_i128,(-114164279668157686768902397051631696993_i128)];
match _2.0.1 {
4635864814810727274210767511737465911 => bb5,
_ => bb2
}
}
bb5 = {
RET = _10 >> _8;
_12 = _2.1;
_5 = -_10;
_9.0 = _9.1 as i8;
Goto(bb6)
}
bb6 = {
_9.1 = 1_usize;
RET = (-1213213213_i32) as isize;
RET = _10 << _2.0.0;
RET = !_5;
RET = !_10;
_8 = _10 << _10;
_9.1 = !2_usize;
_5 = !_10;
_15 = _9.1;
_9.1 = false as usize;
_6 = 3945607521_u32 as u64;
RET = _8 >> _2.0.0;
_7 = RET as f32;
_7 = 1166715162_u32 as f32;
_4 = 620837631_u32 as i64;
_13.0 = 15639_u16 as usize;
_13 = (_9.1,);
_12 = ['\u{28e9d}','\u{104f83}','\u{aa83c}','\u{931d9}','\u{37e60}'];
_9 = (_2.0.0, _13.0);
RET = _8;
_2.0.0 = _9.0;
_18 = [_5,_8,_8,_8];
_12 = ['\u{10e230}','\u{c536}','\u{594aa}','\u{81b8c}','\u{f4757}'];
_5 = _4 as isize;
_5 = !_10;
_15 = _13.0;
Goto(bb7)
}
bb7 = {
_16 = _7 - _7;
RET = !_5;
_14 = [29110_i16,(-12489_i16),4078_i16,(-12550_i16),(-2972_i16)];
_19 = 57_u8 as f64;
_10 = -RET;
_15 = !_9.1;
_11 = [(-30496819588755920205371606029600140756_i128),(-29947500603927133464848156734567561902_i128),(-37929794287524140174475691038199438131_i128)];
_12 = _2.1;
_3 = [2290581054_u32,2209162798_u32,2270114700_u32,3507037868_u32,4047713111_u32,3373072093_u32,4046157591_u32];
_10 = -RET;
_12 = ['\u{f530e}','\u{e9955}','\u{a7705}','\u{2903a}','\u{8b35c}'];
Goto(bb8)
}
bb8 = {
_5 = -_10;
_13.0 = !_9.1;
_18 = [_8,_8,_5,_10];
_5 = _8;
_13.0 = _9.1 >> _5;
_13.0 = !_15;
_17 = [RET,RET,_8,_5,_8,_5];
_3 = [276384115_u32,1123826182_u32,1641737028_u32,1244224963_u32,1190812185_u32,1415701504_u32,3191988377_u32];
_14 = [27554_i16,19222_i16,(-17943_i16),(-9305_i16),6519_i16];
_14 = [31430_i16,(-32419_i16),(-4572_i16),(-25746_i16),23700_i16];
_18 = [RET,_8,_8,_5];
_2.0.0 = _9.0;
_22 = ['\u{a4f5c}','\u{c44}','\u{e290}','\u{50ffa}','\u{62ce3}'];
_15 = 110_u8 as usize;
_14 = [10824_i16,(-30869_i16),(-21670_i16),(-4751_i16),25717_i16];
_4 = -6115382714066860233_i64;
Goto(bb9)
}
bb9 = {
_10 = _5 & RET;
_10 = !RET;
_13.0 = !_15;
_21 = [_2.0.1,_2.0.1,_2.0.1,_2.0.1];
RET = _10 * _10;
_22 = _2.1;
_27.0.3 = _18;
_27.0.2 = _6 + _6;
_5 = _10;
RET = !_8;
_23 = -_8;
_10 = -RET;
_27.0.0 = [_10,_10,_8,_8];
_25 = _2.0.1;
_4 = !(-9154241960197194708_i64);
_17 = [_8,_10,_23,_23,_23,_23];
_28 = _2.0.1;
_27.0.1 = [49017_u16,48152_u16,19657_u16];
_2.1 = ['\u{6c81a}','\u{c9d62}','\u{d161a}','\u{1bc0}','\u{86d4a}'];
_14 = [24612_i16,2173_i16,14167_i16,10671_i16,(-9582_i16)];
_11 = [(-12627909949533078418465169870348656060_i128),92398684896618264724083854347276156392_i128,(-22044333225963661029939179995043786072_i128)];
_23 = !RET;
Goto(bb10)
}
bb10 = {
_2.0.1 = _25;
_27.0.3 = _18;
_27.0.4 = '\u{34a7}';
_26 = (-84346110026625466119710682732541700727_i128) | (-166236766380027717477203428794535533908_i128);
_27.0.4 = '\u{3d000}';
_28 = _25 * _25;
_3 = [2234889620_u32,2918723864_u32,2826527556_u32,1099692558_u32,2324783302_u32,3925174510_u32,1271542928_u32];
_12 = [_27.0.4,_27.0.4,_27.0.4,_27.0.4,_27.0.4];
_9 = (_2.0.0, _13.0);
_27.0.2 = _6 << _23;
Call(_3 = fn18(_27.0.0, _28, _2.0.0, _27.0.3, _27.0.3, _5, _1, _2.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_3 = [3583864322_u32,3468635406_u32,1081573151_u32,3005786000_u32,2910828574_u32,3927488429_u32,3114618292_u32];
_3 = [2884765219_u32,1077893489_u32,3807390811_u32,1776395503_u32,4288525353_u32,3860534479_u32,2532490824_u32];
_27.0.1 = [32892_u16,4372_u16,50967_u16];
_27.0.0 = _27.0.3;
_25 = !_28;
_13.0 = _4 as usize;
_4 = 4791315931055662367_i64;
_26 = 23485201617711382995713384820690950952_i128 + (-113153015661307221759080812544583770505_i128);
_3 = [2423253406_u32,186392150_u32,3592700792_u32,803594406_u32,2269442386_u32,3612371220_u32,1313529380_u32];
_16 = _7 + _7;
_29 = [_5,RET,RET,_10];
_27.1 = _10 >> _13.0;
_9.1 = !_15;
_9.1 = _15;
_29 = [_27.1,_23,_27.1,_23];
_8 = (-377090823_i32) as isize;
_30 = -(-873848983_i32);
_30 = 1423401896_i32;
_11 = [_26,_26,_26];
match _30 {
0 => bb12,
1423401896 => bb14,
_ => bb13
}
}
bb12 = {
_2.0.1 = _25;
_27.0.3 = _18;
_27.0.4 = '\u{34a7}';
_26 = (-84346110026625466119710682732541700727_i128) | (-166236766380027717477203428794535533908_i128);
_27.0.4 = '\u{3d000}';
_28 = _25 * _25;
_3 = [2234889620_u32,2918723864_u32,2826527556_u32,1099692558_u32,2324783302_u32,3925174510_u32,1271542928_u32];
_12 = [_27.0.4,_27.0.4,_27.0.4,_27.0.4,_27.0.4];
_9 = (_2.0.0, _13.0);
_27.0.2 = _6 << _23;
Call(_3 = fn18(_27.0.0, _28, _2.0.0, _27.0.3, _27.0.3, _5, _1, _2.1), ReturnTo(bb11), UnwindUnreachable())
}
bb13 = {
_9.1 = 1_usize;
RET = (-1213213213_i32) as isize;
RET = _10 << _2.0.0;
RET = !_5;
RET = !_10;
_8 = _10 << _10;
_9.1 = !2_usize;
_5 = !_10;
_15 = _9.1;
_9.1 = false as usize;
_6 = 3945607521_u32 as u64;
RET = _8 >> _2.0.0;
_7 = RET as f32;
_7 = 1166715162_u32 as f32;
_4 = 620837631_u32 as i64;
_13.0 = 15639_u16 as usize;
_13 = (_9.1,);
_12 = ['\u{28e9d}','\u{104f83}','\u{aa83c}','\u{931d9}','\u{37e60}'];
_9 = (_2.0.0, _13.0);
RET = _8;
_2.0.0 = _9.0;
_18 = [_5,_8,_8,_8];
_12 = ['\u{10e230}','\u{c536}','\u{594aa}','\u{81b8c}','\u{f4757}'];
_5 = _4 as isize;
_5 = !_10;
_15 = _13.0;
Goto(bb7)
}
bb14 = {
_23 = RET;
_9.0 = -_2.0.0;
_31 = !false;
_22 = [_27.0.4,_27.0.4,_27.0.4,_27.0.4,_27.0.4];
_29 = _27.0.0;
_10 = !_8;
_2.0.0 = _9.0;
_26 = (-116116423905571819685866557515580637125_i128) + (-166412438456390911259619918887774784389_i128);
_27.0.1 = [36789_u16,56484_u16,44658_u16];
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(4_usize, 6_usize, Move(_6), 15_usize, Move(_15), 17_usize, Move(_17), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(4_usize, 23_usize, Move(_23), 18_usize, Move(_18), 21_usize, Move(_21), 27_usize, Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(4_usize, 29_usize, Move(_29), 10_usize, Move(_10), 30_usize, Move(_30), 14_usize, Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [char; 5],mut _2: [u32; 7],mut _3: isize,mut _4: *const bool,mut _5: *const bool,mut _6: u64,mut _7: *const bool,mut _8: isize) -> i8 {
mir! {
type RET = i8;
let _9: [i128; 3];
let _10: *const [u16; 3];
let _11: [u16; 3];
let _12: f32;
let _13: [i128; 3];
let _14: char;
let _15: *mut *const [u16; 3];
let _16: char;
let _17: [i128; 3];
let _18: (i8, usize);
let _19: *mut *const [u16; 3];
let _20: [isize; 4];
let _21: Adt53;
let _22: [u32; 7];
let _23: [u128; 4];
let _24: *const i32;
let _25: bool;
let _26: f32;
let _27: ();
let _28: ();
{
_3 = _8 - _8;
_2 = [2487710857_u32,3445977661_u32,4055202193_u32,1592084988_u32,2851814707_u32,886344611_u32,968918121_u32];
_3 = false as isize;
Goto(bb1)
}
bb1 = {
_4 = _7;
_2 = [2831395766_u32,3868649013_u32,1380597301_u32,954571726_u32,2195933463_u32,3257312981_u32,2463477635_u32];
_6 = !9557523609375431584_u64;
Goto(bb2)
}
bb2 = {
RET = -33_i8;
RET = (-11_i8) + 75_i8;
_9 = [(-94257643194746284899581320384068239935_i128),148074431503545741751286053420631211750_i128,139582166154986571183428538212468359693_i128];
_7 = _5;
_7 = _5;
RET = -55_i8;
_7 = _4;
_4 = _5;
RET = 271097366_u32 as i8;
_3 = !_8;
_1 = ['\u{e821c}','\u{ee922}','\u{43d2a}','\u{c3a6e}','\u{f30e9}'];
_6 = 11024_i16 as u64;
_6 = 15494123370805236065_u64 + 8938991495606048935_u64;
_2 = [3560443138_u32,2077995408_u32,2107120802_u32,1980811546_u32,4239805162_u32,1673332317_u32,28649826_u32];
_3 = -_8;
_5 = _7;
RET = -(-126_i8);
_2 = [3455175363_u32,3012551152_u32,2556878148_u32,3168962702_u32,625387410_u32,1491300477_u32,1308103188_u32];
_6 = 34742_u16 as u64;
_9 = [(-154104555059439718478816972522643194590_i128),17512303672014220695635733925479663837_i128,35829130418395271645992948162820628165_i128];
_8 = !_3;
_2 = [4171849208_u32,2793527028_u32,3767609915_u32,2670989144_u32,88226903_u32,1015222178_u32,867242406_u32];
_3 = _8 + _8;
_2 = [1260764451_u32,2681570212_u32,2326782487_u32,1204909690_u32,2614610285_u32,1522948591_u32,4158653746_u32];
Call(_2 = fn6(_3, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = 2021454857_u32 as isize;
_5 = _7;
_4 = _7;
RET = (-110_i8) & 38_i8;
_3 = _8;
Goto(bb4)
}
bb4 = {
_10 = core::ptr::addr_of!(_11);
RET = 37_i8 & (-72_i8);
RET = 74743093449804588385352930376678266245_i128 as i8;
_5 = _4;
_3 = !_8;
_4 = _5;
_7 = _5;
_8 = RET as isize;
_7 = _5;
_12 = 32750_u16 as f32;
_12 = _6 as f32;
Call(_6 = core::intrinsics::transmute(_8), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_6 = !13227431378170493193_u64;
RET = !10_i8;
_2 = [1863066695_u32,1247330902_u32,1943574186_u32,2554000323_u32,2681664875_u32,3728951944_u32,3598797288_u32];
_10 = core::ptr::addr_of!((*_10));
_11 = [16756_u16,51737_u16,19183_u16];
_5 = _7;
_2 = [3360438841_u32,4048226356_u32,830170994_u32,2831092151_u32,3074271797_u32,2495890946_u32,3060988275_u32];
_13 = [(-72601390515670000700821241407271653728_i128),84596216260427128796158401279564048143_i128,(-168112698934597703100530909078790075312_i128)];
RET = (-56_i8) | 53_i8;
_14 = '\u{c27d3}';
_11 = [59907_u16,48170_u16,34487_u16];
_3 = _8;
_5 = _7;
_4 = _7;
_9 = _13;
RET = (-45_i8) >> _3;
_15 = core::ptr::addr_of_mut!(_10);
RET = -(-70_i8);
_11 = [48530_u16,9745_u16,60554_u16];
_6 = 8972035320849149189_u64 << _3;
_15 = core::ptr::addr_of_mut!(_10);
Goto(bb6)
}
bb6 = {
_9 = [(-132352034416444942066488693797612632014_i128),113766636772315311274960397518232151904_i128,61737346747392732199494917555053680999_i128];
_8 = 652396352_u32 as isize;
_3 = !_8;
_1 = [_14,_14,_14,_14,_14];
_11 = [49834_u16,52260_u16,40220_u16];
RET = 142337727206057990111794803873179351908_u128 as i8;
_18.0 = -RET;
_17 = [(-126971910330251940661952544052536324428_i128),99787265790613741479140522702328949328_i128,67802269965914913776198638765498964460_i128];
RET = !_18.0;
Goto(bb7)
}
bb7 = {
_14 = '\u{91b52}';
_18.0 = RET;
_18 = (RET, 12966093670644788434_usize);
_14 = '\u{640e7}';
_13 = [30417382246526099151853961320964277686_i128,51266381394832438666173185833207398548_i128,134142753002364345004299980524541564507_i128];
_10 = core::ptr::addr_of!((*_10));
_9 = _17;
_2 = [3806757330_u32,3596766522_u32,1533956976_u32,727277602_u32,1357458706_u32,323870990_u32,130440291_u32];
_13 = [(-110253486086758065853891916375377014244_i128),154771379011829893472378174765589697806_i128,(-143828305130574922760383252949688026914_i128)];
_7 = _4;
_8 = _3 & _3;
_6 = 14736335159809587019_u64 & 11453970594822083574_u64;
_7 = _5;
match _18.1 {
0 => bb1,
1 => bb4,
2 => bb8,
3 => bb9,
12966093670644788434 => bb11,
_ => bb10
}
}
bb8 = {
_9 = [(-132352034416444942066488693797612632014_i128),113766636772315311274960397518232151904_i128,61737346747392732199494917555053680999_i128];
_8 = 652396352_u32 as isize;
_3 = !_8;
_1 = [_14,_14,_14,_14,_14];
_11 = [49834_u16,52260_u16,40220_u16];
RET = 142337727206057990111794803873179351908_u128 as i8;
_18.0 = -RET;
_17 = [(-126971910330251940661952544052536324428_i128),99787265790613741479140522702328949328_i128,67802269965914913776198638765498964460_i128];
RET = !_18.0;
Goto(bb7)
}
bb9 = {
RET = -33_i8;
RET = (-11_i8) + 75_i8;
_9 = [(-94257643194746284899581320384068239935_i128),148074431503545741751286053420631211750_i128,139582166154986571183428538212468359693_i128];
_7 = _5;
_7 = _5;
RET = -55_i8;
_7 = _4;
_4 = _5;
RET = 271097366_u32 as i8;
_3 = !_8;
_1 = ['\u{e821c}','\u{ee922}','\u{43d2a}','\u{c3a6e}','\u{f30e9}'];
_6 = 11024_i16 as u64;
_6 = 15494123370805236065_u64 + 8938991495606048935_u64;
_2 = [3560443138_u32,2077995408_u32,2107120802_u32,1980811546_u32,4239805162_u32,1673332317_u32,28649826_u32];
_3 = -_8;
_5 = _7;
RET = -(-126_i8);
_2 = [3455175363_u32,3012551152_u32,2556878148_u32,3168962702_u32,625387410_u32,1491300477_u32,1308103188_u32];
_6 = 34742_u16 as u64;
_9 = [(-154104555059439718478816972522643194590_i128),17512303672014220695635733925479663837_i128,35829130418395271645992948162820628165_i128];
_8 = !_3;
_2 = [4171849208_u32,2793527028_u32,3767609915_u32,2670989144_u32,88226903_u32,1015222178_u32,867242406_u32];
_3 = _8 + _8;
_2 = [1260764451_u32,2681570212_u32,2326782487_u32,1204909690_u32,2614610285_u32,1522948591_u32,4158653746_u32];
Call(_2 = fn6(_3, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
_3 = 2021454857_u32 as isize;
_5 = _7;
_4 = _7;
RET = (-110_i8) & 38_i8;
_3 = _8;
Goto(bb4)
}
bb11 = {
_12 = (-105112633_i32) as f32;
_14 = '\u{7342d}';
_14 = '\u{934ec}';
_16 = _14;
_15 = core::ptr::addr_of_mut!((*_15));
_18 = (RET, 2_usize);
_16 = _14;
_13 = _17;
_6 = _18.0 as u64;
_2 = [1645229594_u32,3153069627_u32,1616278129_u32,1976215319_u32,2949123084_u32,698494187_u32,1351328742_u32];
RET = _18.0;
_10 = core::ptr::addr_of!((*_10));
_19 = core::ptr::addr_of_mut!((*_15));
_3 = !_8;
_11 = [17873_u16,51831_u16,40349_u16];
_19 = core::ptr::addr_of_mut!((*_15));
_15 = core::ptr::addr_of_mut!((*_19));
_1 = [_16,_16,_14,_16,_16];
RET = _18.0;
_17 = _13;
_8 = _18.0 as isize;
_11 = [15925_u16,49638_u16,10869_u16];
_18.1 = 8834788851319716506_usize >> RET;
_8 = (-364188645_i32) as isize;
_11 = [37561_u16,15373_u16,14554_u16];
_14 = _16;
_20 = [_8,_3,_3,_3];
Call(_9 = fn14((*_15), _7, _12, _7, _10), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_19 = core::ptr::addr_of_mut!((*_15));
_6 = 3612922662_u32 as u64;
_17 = [(-72993001701384153460203977964462016647_i128),(-60638267416507000110311714707694079103_i128),(-107185752244585796860644552662422431227_i128)];
_5 = _4;
_17 = _9;
_19 = _15;
_5 = _4;
_16 = _14;
_18 = (RET, 4743678068669554207_usize);
_22 = _2;
_14 = _16;
_12 = (-7929697580561093709_i64) as f32;
Goto(bb13)
}
bb13 = {
_5 = _7;
_11 = [54308_u16,47781_u16,22289_u16];
_12 = 13702_u16 as f32;
_2 = [2862202960_u32,836535208_u32,3116100470_u32,2469661480_u32,1151962577_u32,3190506047_u32,1099341910_u32];
_9 = _13;
RET = 8408_i16 as i8;
_22 = [2511940467_u32,2284418842_u32,739989062_u32,2607189327_u32,2683762599_u32,3608285273_u32,2059169977_u32];
_18.0 = RET;
Call(_12 = fn17(_17, _2, (*_15), _17, _15, _4, _7, _5, _4, (*_10), (*_15), _4, _4), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_4 = _5;
_6 = !12758005834600646856_u64;
_10 = core::ptr::addr_of!(_11);
RET = -_18.0;
_6 = false as u64;
RET = _18.0 ^ _18.0;
_2 = [3655023889_u32,760019128_u32,1665178873_u32,103391164_u32,3540929708_u32,303278595_u32,830619888_u32];
_23 = [228525576335298882426442199590995350678_u128,291786369632296368687624498862160445932_u128,321125377614701299604191523327172930802_u128,211335248834062518747785570992610218513_u128];
_25 = !true;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(5_usize, 2_usize, Move(_2), 1_usize, Move(_1), 11_usize, Move(_11), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(5_usize, 23_usize, Move(_23), 16_usize, Move(_16), 13_usize, Move(_13), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: *const bool) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _3: i16;
let _4: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _5: i128;
let _6: [i128; 3];
let _7: Adt47;
let _8: Adt47;
let _9: f64;
let _10: Adt58;
let _11: u8;
let _12: isize;
let _13: [u128; 4];
let _14: [i128; 3];
let _15: i16;
let _16: [i16; 5];
let _17: [i128; 3];
let _18: u8;
let _19: bool;
let _20: ();
let _21: ();
{
_1 = !(-9223372036854775808_isize);
RET = [1727409111_u32,3204046795_u32,2319998791_u32,2624605833_u32,636287965_u32,4150290865_u32,3236135518_u32];
RET = [4225557999_u32,295228179_u32,2417567889_u32,2204460458_u32,1733377913_u32,3150643877_u32,1584113189_u32];
RET = [4077033040_u32,1843158824_u32,2416180501_u32,1323629603_u32,4231381128_u32,821383539_u32,2737476389_u32];
_1 = (-9223372036854775808_isize);
RET = [1229126649_u32,3381438642_u32,3473471798_u32,4210102127_u32,137027315_u32,3892423819_u32,256761013_u32];
RET = [912828888_u32,68392134_u32,3294891647_u32,3438909391_u32,3323477232_u32,2682454803_u32,3883269080_u32];
_1 = 9223372036854775807_isize ^ (-1_isize);
Goto(bb1)
}
bb1 = {
_1 = 1_isize;
RET = [2838841759_u32,2053164097_u32,2219677586_u32,986167636_u32,2913106762_u32,3431192855_u32,29920680_u32];
RET = [316552902_u32,353027625_u32,1979714662_u32,661139546_u32,2963111693_u32,984364763_u32,3943955754_u32];
_1 = !(-9223372036854775808_isize);
RET = [354390597_u32,451416389_u32,184716889_u32,4000584999_u32,1570420441_u32,2264122610_u32,1280288163_u32];
RET = [3363154057_u32,811410307_u32,191378068_u32,481644476_u32,3038632409_u32,3109093867_u32,1481328209_u32];
Goto(bb2)
}
bb2 = {
_3 = 12687_i16 + (-22682_i16);
_3 = (-29_i16);
RET = [3477808745_u32,154915152_u32,4162731115_u32,1947156595_u32,1547258594_u32,3477603909_u32,1994531778_u32];
RET = [254336396_u32,2860429961_u32,2159120505_u32,2274799746_u32,2199284324_u32,3031559_u32,2049534142_u32];
_4.0.4 = '\u{2c81e}';
Goto(bb3)
}
bb3 = {
_1 = !9223372036854775807_isize;
_1 = 24_isize >> _3;
_4.0.3 = [_1,_1,_1,_1];
_4.0.1 = [21095_u16,927_u16,11623_u16];
_4.0.1 = [50212_u16,37491_u16,63496_u16];
_4.0.3 = [_1,_1,_1,_1];
_4.0.2 = !7409140424496101753_u64;
RET = [56164529_u32,152066076_u32,2222475323_u32,2251148430_u32,3516471399_u32,3944439664_u32,2683948034_u32];
_4.1 = _1 * _1;
_4.0.4 = '\u{a3e39}';
_3 = !(-30009_i16);
_4.0.2 = 3715942092181347450_u64;
_4.0.4 = '\u{44e16}';
_4.0.0 = [_4.1,_4.1,_1,_4.1];
_4.0.0 = [_4.1,_4.1,_4.1,_4.1];
_4.0.2 = 8425870529977519014_u64 - 10638679863732323825_u64;
_5 = -(-73887140216151993122941843902361938728_i128);
RET = [2557417463_u32,1618450129_u32,1233232830_u32,626770153_u32,2487916840_u32,1974297324_u32,1054521738_u32];
_4.0.3 = [_4.1,_4.1,_4.1,_1];
_3 = _4.0.4 as i16;
_4.0.2 = 6796557392905344529_u64 >> _4.1;
_4.1 = !_1;
_7 = Adt47::Variant0 { fld0: (-986734860_i32) };
_3 = (-1124_i16) >> _4.0.2;
_3 = (-30220_i16);
_7 = Adt47::Variant2 { fld0: 134_u8,fld1: RET };
Goto(bb4)
}
bb4 = {
_4.1 = _1 & _1;
_6 = [_5,_5,_5];
_1 = _4.0.4 as isize;
RET = [2075416510_u32,2876575230_u32,3736379555_u32,908335178_u32,3693303340_u32,2601292136_u32,4217528401_u32];
_4.0.3 = _4.0.0;
_4.0.1 = [51385_u16,16926_u16,16067_u16];
_5 = !68782461978798620411477887254126454134_i128;
_5 = (-115842419048164492784268266229012683489_i128) << _4.0.2;
_6 = [_5,_5,_5];
place!(Field::<[u32; 7]>(Variant(_7, 2), 1)) = [1851472691_u32,943511849_u32,3664476933_u32,3223710943_u32,4274269562_u32,8549489_u32,2888442660_u32];
_6 = [_5,_5,_5];
_4.0.2 = 6990541302994787261_u64 >> _3;
_4.1 = -_1;
RET = [2969422104_u32,3572706685_u32,1571590831_u32,1690980867_u32,354140469_u32,3631865078_u32,2867146743_u32];
_9 = 133170073482135295859018002902311681370_u128 as f64;
Goto(bb5)
}
bb5 = {
_7 = Adt47::Variant2 { fld0: 129_u8,fld1: RET };
_6 = [_5,_5,_5];
_4.0.1 = [52969_u16,58784_u16,12104_u16];
place!(Field::<u8>(Variant(_7, 2), 0)) = !85_u8;
_7 = Adt47::Variant0 { fld0: (-589009864_i32) };
_1 = _4.1;
_12 = _4.1 - _1;
_8 = Adt47::Variant0 { fld0: 1181316897_i32 };
_4.0.2 = !12527892876783334410_u64;
_12 = _4.1 >> _5;
_4.1 = _12 << _3;
_4.1 = _12;
_11 = !161_u8;
_8 = Adt47::Variant2 { fld0: _11,fld1: RET };
match _3 {
0 => bb3,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
340282366920938463463374607431768181236 => bb12,
_ => bb11
}
}
bb6 = {
_4.1 = _1 & _1;
_6 = [_5,_5,_5];
_1 = _4.0.4 as isize;
RET = [2075416510_u32,2876575230_u32,3736379555_u32,908335178_u32,3693303340_u32,2601292136_u32,4217528401_u32];
_4.0.3 = _4.0.0;
_4.0.1 = [51385_u16,16926_u16,16067_u16];
_5 = !68782461978798620411477887254126454134_i128;
_5 = (-115842419048164492784268266229012683489_i128) << _4.0.2;
_6 = [_5,_5,_5];
place!(Field::<[u32; 7]>(Variant(_7, 2), 1)) = [1851472691_u32,943511849_u32,3664476933_u32,3223710943_u32,4274269562_u32,8549489_u32,2888442660_u32];
_6 = [_5,_5,_5];
_4.0.2 = 6990541302994787261_u64 >> _3;
_4.1 = -_1;
RET = [2969422104_u32,3572706685_u32,1571590831_u32,1690980867_u32,354140469_u32,3631865078_u32,2867146743_u32];
_9 = 133170073482135295859018002902311681370_u128 as f64;
Goto(bb5)
}
bb7 = {
_1 = !9223372036854775807_isize;
_1 = 24_isize >> _3;
_4.0.3 = [_1,_1,_1,_1];
_4.0.1 = [21095_u16,927_u16,11623_u16];
_4.0.1 = [50212_u16,37491_u16,63496_u16];
_4.0.3 = [_1,_1,_1,_1];
_4.0.2 = !7409140424496101753_u64;
RET = [56164529_u32,152066076_u32,2222475323_u32,2251148430_u32,3516471399_u32,3944439664_u32,2683948034_u32];
_4.1 = _1 * _1;
_4.0.4 = '\u{a3e39}';
_3 = !(-30009_i16);
_4.0.2 = 3715942092181347450_u64;
_4.0.4 = '\u{44e16}';
_4.0.0 = [_4.1,_4.1,_1,_4.1];
_4.0.0 = [_4.1,_4.1,_4.1,_4.1];
_4.0.2 = 8425870529977519014_u64 - 10638679863732323825_u64;
_5 = -(-73887140216151993122941843902361938728_i128);
RET = [2557417463_u32,1618450129_u32,1233232830_u32,626770153_u32,2487916840_u32,1974297324_u32,1054521738_u32];
_4.0.3 = [_4.1,_4.1,_4.1,_1];
_3 = _4.0.4 as i16;
_4.0.2 = 6796557392905344529_u64 >> _4.1;
_4.1 = !_1;
_7 = Adt47::Variant0 { fld0: (-986734860_i32) };
_3 = (-1124_i16) >> _4.0.2;
_3 = (-30220_i16);
_7 = Adt47::Variant2 { fld0: 134_u8,fld1: RET };
Goto(bb4)
}
bb8 = {
_3 = 12687_i16 + (-22682_i16);
_3 = (-29_i16);
RET = [3477808745_u32,154915152_u32,4162731115_u32,1947156595_u32,1547258594_u32,3477603909_u32,1994531778_u32];
RET = [254336396_u32,2860429961_u32,2159120505_u32,2274799746_u32,2199284324_u32,3031559_u32,2049534142_u32];
_4.0.4 = '\u{2c81e}';
Goto(bb3)
}
bb9 = {
_1 = 1_isize;
RET = [2838841759_u32,2053164097_u32,2219677586_u32,986167636_u32,2913106762_u32,3431192855_u32,29920680_u32];
RET = [316552902_u32,353027625_u32,1979714662_u32,661139546_u32,2963111693_u32,984364763_u32,3943955754_u32];
_1 = !(-9223372036854775808_isize);
RET = [354390597_u32,451416389_u32,184716889_u32,4000584999_u32,1570420441_u32,2264122610_u32,1280288163_u32];
RET = [3363154057_u32,811410307_u32,191378068_u32,481644476_u32,3038632409_u32,3109093867_u32,1481328209_u32];
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET = [3882994620_u32,1750432422_u32,3038064707_u32,3222899015_u32,2531158930_u32,308362350_u32,2638327144_u32];
place!(Field::<i32>(Variant(_7, 0), 0)) = 640266392_i32 | (-1073503297_i32);
_6 = [_5,_5,_5];
_7 = _8;
RET = [1669234988_u32,2871080263_u32,4045656555_u32,1890062205_u32,3345821110_u32,488285740_u32,2368961690_u32];
_4.0.4 = '\u{433b8}';
_15 = 39_i8 as i16;
Call(RET = fn7(_4, _4.0.4, Field::<[u32; 7]>(Variant(_7, 2), 1), _3, _4.1, Field::<[u32; 7]>(Variant(_8, 2), 1), Field::<[u32; 7]>(Variant(_7, 2), 1)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13 = [145724001311870162547256555600983620607_u128,240802029929916894434429354205169770479_u128,67550672364280676362866012295168160132_u128,168979012031755732514500708689783688216_u128];
_14 = [_5,_5,_5];
_16 = [_3,_15,_15,_3,_15];
Goto(bb14)
}
bb14 = {
_19 = _5 <= _5;
_4.0.0 = _4.0.3;
SetDiscriminant(_8, 0);
_4.0.1 = [46393_u16,48274_u16,9913_u16];
Goto(bb15)
}
bb15 = {
Call(_20 = dump_var(6_usize, 13_usize, Move(_13), 6_usize, Move(_6), 15_usize, Move(_15), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_20 = dump_var(6_usize, 14_usize, Move(_14), 5_usize, Move(_5), 21_usize, _21, 21_usize, _21), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _2: char,mut _3: [u32; 7],mut _4: i16,mut _5: isize,mut _6: [u32; 7],mut _7: [u32; 7]) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _8: Adt47;
let _9: [u16; 3];
let _10: (i8, usize);
let _11: i8;
let _12: Adt56;
let _13: u16;
let _14: isize;
let _15: [u16; 3];
let _16: Adt47;
let _17: char;
let _18: char;
let _19: &'static bool;
let _20: Adt44;
let _21: f64;
let _22: i16;
let _23: [i16; 5];
let _24: char;
let _25: [i16; 5];
let _26: [u16; 3];
let _27: char;
let _28: [u16; 3];
let _29: i64;
let _30: [i128; 3];
let _31: (i8, u128, &'static bool);
let _32: u8;
let _33: f32;
let _34: Adt47;
let _35: char;
let _36: [u128; 4];
let _37: i128;
let _38: f64;
let _39: ();
let _40: ();
{
RET = [3925167832_u32,2283029736_u32,2101444885_u32,1019434008_u32,3938152434_u32,1729542034_u32,3017365549_u32];
_1.1 = -_5;
_5 = _1.1 - _1.1;
_1.0.0 = _1.0.3;
_6 = _3;
_4 = !(-3072_i16);
_1.0.0 = [_5,_5,_5,_1.1];
_1.0.3 = _1.0.0;
_1.0.0 = [_5,_1.1,_1.1,_5];
_1.0.3 = [_5,_1.1,_5,_1.1];
_5 = _1.1 ^ _1.1;
_3 = [1464079104_u32,1432859562_u32,2302404572_u32,2767483486_u32,536668386_u32,3375952306_u32,3287459000_u32];
_1.0.1 = [34474_u16,7411_u16,8241_u16];
_2 = _1.0.4;
_7 = _3;
_2 = _1.0.4;
_9 = [60886_u16,57703_u16,30417_u16];
_9 = _1.0.1;
_3 = [156993235_u32,330549793_u32,2290301278_u32,8952954_u32,2736960802_u32,3894584598_u32,3810457520_u32];
_3 = [4221650472_u32,265859803_u32,469763178_u32,229491070_u32,1482655330_u32,2459350660_u32,150852922_u32];
_6 = [2630963424_u32,2906741987_u32,4239549668_u32,3510663206_u32,3894991340_u32,227586083_u32,910173288_u32];
_1.0.1 = [52352_u16,40331_u16,1742_u16];
_6 = [4092679557_u32,2363508747_u32,3662355115_u32,3612109185_u32,3122079057_u32,1422102015_u32,1194761791_u32];
_6 = [3527404506_u32,1521593755_u32,920403007_u32,2766620561_u32,2096725169_u32,1239397943_u32,1501823065_u32];
RET = _6;
_7 = [2960404259_u32,1689997715_u32,1680102719_u32,1403357966_u32,3095159398_u32,3652476519_u32,369857411_u32];
RET = [4077398764_u32,2378104001_u32,1035719578_u32,3098278729_u32,1375446404_u32,3291317872_u32,135312776_u32];
_2 = _1.0.4;
Goto(bb1)
}
bb1 = {
_1.0.2 = 13350405266668442509_u64 << _5;
_3 = [568116576_u32,1402012128_u32,1159947028_u32,3860093970_u32,379710001_u32,3655454998_u32,1575679280_u32];
_1.0.1 = _9;
_1.1 = _5 - _5;
_10 = ((-20_i8), 4_usize);
_1.0.4 = _2;
_8 = Adt47::Variant2 { fld0: 7_u8,fld1: RET };
_11 = _10.0 - _10.0;
_1.0.3 = [_1.1,_5,_5,_1.1];
_10 = (_11, 7_usize);
_10.0 = _11 + _11;
_11 = _10.0;
_9 = _1.0.1;
RET = [3847718201_u32,1659956974_u32,2722531770_u32,1532092697_u32,3193146572_u32,1685732774_u32,2981496947_u32];
Call(_1.0.3 = fn8(_1.1, _10, _3, _1.1, _3, _1.0.4, _10.0, _5, _1.1, _5, _1.0.2, _10.1, _1.0.2, _1.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1.0.4 = _2;
place!(Field::<u8>(Variant(_8, 2), 0)) = !26_u8;
_9 = [50566_u16,64616_u16,39154_u16];
_1.0.2 = 1709654550_u32 as u64;
_13 = 41153_u16 - 1377_u16;
RET = [3845426860_u32,4215472989_u32,3794959763_u32,3620772214_u32,103674336_u32,4004118504_u32,579104100_u32];
_1.0.1 = [_13,_13,_13];
place!(Field::<u8>(Variant(_8, 2), 0)) = 157_u8;
RET = _3;
place!(Field::<[u32; 7]>(Variant(_8, 2), 1)) = [2574226003_u32,3432042995_u32,469196013_u32,3290467190_u32,2565720761_u32,1394228910_u32,2004661622_u32];
_16 = Adt47::Variant0 { fld0: (-1285349935_i32) };
_16 = Adt47::Variant2 { fld0: 165_u8,fld1: _3 };
_11 = !_10.0;
_13 = !48843_u16;
place!(Field::<u8>(Variant(_16, 2), 0)) = 81_u8;
_17 = _1.0.4;
SetDiscriminant(_16, 2);
_4 = 121_u8 as i16;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = _1.0;
_10.1 = 10217126484456378133_usize;
place!(Field::<[u32; 7]>(Variant(_16, 2), 1)) = [1392858575_u32,3729322294_u32,3327003079_u32,797070395_u32,3843025937_u32,1328874158_u32,1312648423_u32];
_14 = _1.1 | _1.1;
_11 = _10.0 << _1.1;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = (_1.0.3, _1.0.1, _1.0.2, _1.0.0, _17);
Goto(bb3)
}
bb3 = {
_1 = (Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1), _14);
_20.fld3.3 = !1341296168_i32;
_17 = Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1).4;
_9 = [_13,_13,_13];
_1.0.1 = Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1).1;
_3 = [2427420907_u32,1874775676_u32,2755578728_u32,2014492011_u32,1163252238_u32,4262772306_u32,3697904610_u32];
_20.fld7 = 22221614100703923171211817456316895247_i128 & (-160791308962772727035008389820415676488_i128);
_17 = Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1).4;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = (_1.0.0, _1.0.1, _1.0.2, _1.0.0, _17);
RET = [4248713286_u32,585431038_u32,2210120666_u32,4172042820_u32,92848336_u32,4123357987_u32,3359261144_u32];
_20.fld0 = !325883950150308185853358787965235910757_u128;
_20.fld6 = (_10.1,);
_20.fld5 = !_20.fld3.3;
_3 = _7;
RET = [234676374_u32,4215970439_u32,566994387_u32,3719109753_u32,1305465696_u32,1651578935_u32,2430126146_u32];
_20.fld1 = 148_u8 as f32;
_20.fld3.1 = [_20.fld7,_20.fld7,_20.fld7];
_20.fld3.2 = core::ptr::addr_of!(_9);
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)).3 = [_1.1,_1.1,_1.1,_14];
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = (_1.0.0, _1.0.1, _1.0.2, _1.0.3, _1.0.4);
_14 = _4 as isize;
_8 = Adt47::Variant2 { fld0: 137_u8,fld1: _3 };
_1.1 = _5 ^ _5;
_14 = _1.1 | _1.1;
_15 = [_13,_13,_13];
place!(Field::<u8>(Variant(_8, 2), 0)) = !41_u8;
_20.fld0 = 38234117771239633533529709737826448913_u128;
Goto(bb4)
}
bb4 = {
_21 = Field::<u8>(Variant(_8, 2), 0) as f64;
_16 = _8;
_13 = 45158_u16 ^ 17343_u16;
_1.0.4 = _2;
_20.fld3.2 = core::ptr::addr_of!(_15);
_3 = [4091077649_u32,3929598751_u32,801185556_u32,1793513171_u32,1521915813_u32,1733499308_u32,395565502_u32];
RET = [912768790_u32,3610943369_u32,449672871_u32,1214874224_u32,3382342496_u32,635329936_u32,2135214928_u32];
_18 = _2;
_1.0.2 = !15541994942310078013_u64;
_1.0.1 = [_13,_13,_13];
_1.0.0 = [_14,_14,_14,_14];
_13 = !23243_u16;
_1.0.0 = _1.0.3;
_1.0.1 = _15;
_20.fld6.0 = _10.1;
_11 = _10.0 + _10.0;
_25 = [_4,_4,_4,_4,_4];
_27 = _17;
RET = _3;
_22 = _4 * _4;
RET = [2121578796_u32,3470761529_u32,1894603340_u32,2500986933_u32,974770954_u32,648734230_u32,2298100912_u32];
_5 = !_14;
Call(_1.1 = fn9(_1.0.3, _3, _14, Field::<[u32; 7]>(Variant(_16, 2), 1), _10.0, _1.0, _8, _1.0.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_16 = Adt47::Variant0 { fld0: _20.fld5 };
_1.1 = _14;
_1.1 = _14 >> _14;
match _10.1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
10217126484456378133 => bb12,
_ => bb11
}
}
bb6 = {
_21 = Field::<u8>(Variant(_8, 2), 0) as f64;
_16 = _8;
_13 = 45158_u16 ^ 17343_u16;
_1.0.4 = _2;
_20.fld3.2 = core::ptr::addr_of!(_15);
_3 = [4091077649_u32,3929598751_u32,801185556_u32,1793513171_u32,1521915813_u32,1733499308_u32,395565502_u32];
RET = [912768790_u32,3610943369_u32,449672871_u32,1214874224_u32,3382342496_u32,635329936_u32,2135214928_u32];
_18 = _2;
_1.0.2 = !15541994942310078013_u64;
_1.0.1 = [_13,_13,_13];
_1.0.0 = [_14,_14,_14,_14];
_13 = !23243_u16;
_1.0.0 = _1.0.3;
_1.0.1 = _15;
_20.fld6.0 = _10.1;
_11 = _10.0 + _10.0;
_25 = [_4,_4,_4,_4,_4];
_27 = _17;
RET = _3;
_22 = _4 * _4;
RET = [2121578796_u32,3470761529_u32,1894603340_u32,2500986933_u32,974770954_u32,648734230_u32,2298100912_u32];
_5 = !_14;
Call(_1.1 = fn9(_1.0.3, _3, _14, Field::<[u32; 7]>(Variant(_16, 2), 1), _10.0, _1.0, _8, _1.0.0), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_1 = (Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1), _14);
_20.fld3.3 = !1341296168_i32;
_17 = Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1).4;
_9 = [_13,_13,_13];
_1.0.1 = Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1).1;
_3 = [2427420907_u32,1874775676_u32,2755578728_u32,2014492011_u32,1163252238_u32,4262772306_u32,3697904610_u32];
_20.fld7 = 22221614100703923171211817456316895247_i128 & (-160791308962772727035008389820415676488_i128);
_17 = Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1).4;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = (_1.0.0, _1.0.1, _1.0.2, _1.0.0, _17);
RET = [4248713286_u32,585431038_u32,2210120666_u32,4172042820_u32,92848336_u32,4123357987_u32,3359261144_u32];
_20.fld0 = !325883950150308185853358787965235910757_u128;
_20.fld6 = (_10.1,);
_20.fld5 = !_20.fld3.3;
_3 = _7;
RET = [234676374_u32,4215970439_u32,566994387_u32,3719109753_u32,1305465696_u32,1651578935_u32,2430126146_u32];
_20.fld1 = 148_u8 as f32;
_20.fld3.1 = [_20.fld7,_20.fld7,_20.fld7];
_20.fld3.2 = core::ptr::addr_of!(_9);
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)).3 = [_1.1,_1.1,_1.1,_14];
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = (_1.0.0, _1.0.1, _1.0.2, _1.0.3, _1.0.4);
_14 = _4 as isize;
_8 = Adt47::Variant2 { fld0: 137_u8,fld1: _3 };
_1.1 = _5 ^ _5;
_14 = _1.1 | _1.1;
_15 = [_13,_13,_13];
place!(Field::<u8>(Variant(_8, 2), 0)) = !41_u8;
_20.fld0 = 38234117771239633533529709737826448913_u128;
Goto(bb4)
}
bb8 = {
_1.0.4 = _2;
place!(Field::<u8>(Variant(_8, 2), 0)) = !26_u8;
_9 = [50566_u16,64616_u16,39154_u16];
_1.0.2 = 1709654550_u32 as u64;
_13 = 41153_u16 - 1377_u16;
RET = [3845426860_u32,4215472989_u32,3794959763_u32,3620772214_u32,103674336_u32,4004118504_u32,579104100_u32];
_1.0.1 = [_13,_13,_13];
place!(Field::<u8>(Variant(_8, 2), 0)) = 157_u8;
RET = _3;
place!(Field::<[u32; 7]>(Variant(_8, 2), 1)) = [2574226003_u32,3432042995_u32,469196013_u32,3290467190_u32,2565720761_u32,1394228910_u32,2004661622_u32];
_16 = Adt47::Variant0 { fld0: (-1285349935_i32) };
SetDiscriminant(_8, 1);
_16 = Adt47::Variant2 { fld0: 165_u8,fld1: _3 };
_11 = !_10.0;
_13 = !48843_u16;
place!(Field::<u8>(Variant(_16, 2), 0)) = 81_u8;
_17 = _1.0.4;
SetDiscriminant(_16, 2);
_4 = 121_u8 as i16;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = _1.0;
_10.1 = 10217126484456378133_usize;
place!(Field::<[u32; 7]>(Variant(_16, 2), 1)) = [1392858575_u32,3729322294_u32,3327003079_u32,797070395_u32,3843025937_u32,1328874158_u32,1312648423_u32];
_14 = _1.1 | _1.1;
_11 = _10.0 << _1.1;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)) = (_1.0.3, _1.0.1, _1.0.2, _1.0.0, _17);
Goto(bb3)
}
bb9 = {
_1.0.2 = 13350405266668442509_u64 << _5;
_3 = [568116576_u32,1402012128_u32,1159947028_u32,3860093970_u32,379710001_u32,3655454998_u32,1575679280_u32];
_1.0.1 = _9;
_1.1 = _5 - _5;
_10 = ((-20_i8), 4_usize);
_1.0.4 = _2;
_8 = Adt47::Variant2 { fld0: 7_u8,fld1: RET };
_11 = _10.0 - _10.0;
_1.0.3 = [_1.1,_5,_5,_1.1];
_10 = (_11, 7_usize);
_10.0 = _11 + _11;
_11 = _10.0;
_9 = _1.0.1;
RET = [3847718201_u32,1659956974_u32,2722531770_u32,1532092697_u32,3193146572_u32,1685732774_u32,2981496947_u32];
Call(_1.0.3 = fn8(_1.1, _10, _3, _1.1, _3, _1.0.4, _10.0, _5, _1.1, _5, _1.0.2, _10.1, _1.0.2, _1.1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_1.0.3 = [_5,_14,_1.1,_5];
place!(Field::<u8>(Variant(_8, 2), 0)) = 51_u8 << _5;
place!(Field::<i32>(Variant(_16, 0), 0)) = _20.fld5;
_20.fld4 = _22 ^ _22;
_20.fld2 = [4213713475_u32,3407542452_u32,251461963_u32,581053569_u32,2943858331_u32,342912956_u32,3542170335_u32];
SetDiscriminant(_8, 2);
_26 = [_13,_13,_13];
Call(_20.fld3.2 = fn10(_1, _1.0, _1.1, _1.0.3, _11, _1.1, _1.0, _1.0, _1, _1.0, _1, _1.0.3, _1.0.3, _14, _1.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_32 = 238_u8 | 73_u8;
_18 = _27;
_15 = [_13,_13,_13];
_14 = _1.1 & _1.1;
_20.fld1 = _20.fld6.0 as f32;
_8 = Adt47::Variant2 { fld0: _32,fld1: _3 };
_30 = _20.fld3.1;
_25 = [_4,_20.fld4,_20.fld4,_22,_20.fld4];
_21 = _20.fld1 as f64;
_1.0.0 = [_1.1,_5,_1.1,_14];
_31.1 = _20.fld0;
_35 = _1.0.4;
_31.0 = -_11;
_3 = _7;
_14 = _1.1 + _1.1;
_2 = _35;
_1.0.0 = _1.0.3;
_20.fld5 = true as i32;
_25 = [_22,_4,_4,_20.fld4,_20.fld4];
RET = [69102503_u32,1023406770_u32,289907533_u32,3723643358_u32,707767011_u32,3204552647_u32,3217350322_u32];
_10.0 = !_31.0;
place!(Field::<i32>(Variant(_16, 0), 0)) = _31.0 as i32;
_20.fld0 = !_31.1;
_29 = true as i64;
_20.fld6 = (_10.1,);
_23 = [_22,_20.fld4,_20.fld4,_20.fld4,_20.fld4];
_33 = _20.fld1;
_3 = [212607887_u32,3906200770_u32,3190950558_u32,1547270146_u32,1607172351_u32,4088271652_u32,2077348929_u32];
Call(RET = fn12(_1, _1, _1.0.3, _1.0, _1, _1, _1, _1.0.0, _1.0.3, _7, _1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
RET = [1522002054_u32,2126899526_u32,605736603_u32,385890153_u32,2803223551_u32,3427675355_u32,2292721759_u32];
_32 = _31.1 as u8;
place!(Field::<[u32; 7]>(Variant(_8, 2), 1)) = [708360233_u32,198745982_u32,3268649234_u32,1738609348_u32,447090161_u32,2380195570_u32,2561350194_u32];
_26 = [_13,_13,_13];
RET = _20.fld2;
_1.0.2 = _20.fld6.0 as u64;
_34 = Adt47::Variant0 { fld0: Field::<i32>(Variant(_16, 0), 0) };
_20.fld7 = (-100950685786344439118950986685043194440_i128) - (-88990171208399503529619140329711483958_i128);
_2 = _27;
_38 = _21;
place!(Field::<([isize; 4], [u16; 3], u64, [isize; 4], char)>(Variant(_8, 1), 1)).1 = [_13,_13,_13];
_10.0 = _31.0 - _31.0;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(7_usize, 9_usize, Move(_9), 10_usize, Move(_10), 25_usize, Move(_25), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(7_usize, 29_usize, Move(_29), 3_usize, Move(_3), 32_usize, Move(_32), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(7_usize, 23_usize, Move(_23), 15_usize, Move(_15), 6_usize, Move(_6), 27_usize, Move(_27)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: (i8, usize),mut _3: [u32; 7],mut _4: isize,mut _5: [u32; 7],mut _6: char,mut _7: i8,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: u64,mut _12: usize,mut _13: u64,mut _14: isize) -> [isize; 4] {
mir! {
type RET = [isize; 4];
let _15: u64;
let _16: i128;
let _17: (((i8, u128, &'static bool), [char; 5]),);
let _18: u32;
let _19: u16;
let _20: isize;
let _21: ();
let _22: ();
{
_2 = (_7, _12);
_14 = 109_u8 as isize;
RET = [_9,_10,_9,_4];
_2.0 = !_7;
_14 = _12 as isize;
_6 = '\u{75d8f}';
_5 = [2508902272_u32,3424183183_u32,2064181774_u32,863152612_u32,2341924909_u32,1984198616_u32,2252769308_u32];
_2.0 = -_7;
_18 = !3388680510_u32;
_5 = [_18,_18,_18,_18,_18,_18,_18];
_6 = '\u{59f16}';
_14 = -_1;
_1 = 124_u8 as isize;
_8 = _18 as isize;
Goto(bb1)
}
bb1 = {
Call(_21 = dump_var(8_usize, 11_usize, Move(_11), 14_usize, Move(_14), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_21 = dump_var(8_usize, 12_usize, Move(_12), 8_usize, Move(_8), 3_usize, Move(_3), 22_usize, _22), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [isize; 4],mut _2: [u32; 7],mut _3: isize,mut _4: [u32; 7],mut _5: i8,mut _6: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _7: Adt47,mut _8: [isize; 4]) -> isize {
mir! {
type RET = isize;
let _9: isize;
let _10: usize;
let _11: &'static bool;
let _12: f64;
let _13: usize;
let _14: char;
let _15: isize;
let _16: (usize,);
let _17: f32;
let _18: ();
let _19: ();
{
_6.3 = [_3,_3,_3,_3];
Goto(bb1)
}
bb1 = {
_7 = Adt47::Variant2 { fld0: 52_u8,fld1: _4 };
_6.2 = _5 as u64;
_1 = _6.0;
_6.4 = '\u{ecbc4}';
_2 = [2995300928_u32,2709207491_u32,3456911594_u32,752907312_u32,3816457950_u32,3797686738_u32,3826792247_u32];
_6.0 = [_3,_3,_3,_3];
place!(Field::<[u32; 7]>(Variant(_7, 2), 1)) = _2;
_10 = 5_usize;
_6.1 = [15411_u16,53235_u16,39945_u16];
RET = _3;
_3 = RET;
_9 = RET;
_6.4 = '\u{96868}';
_6.2 = 16380120699152920856_u64 << _5;
_9 = 176_u8 as isize;
_6.2 = !5008671825895506236_u64;
_4[_10] = _2[_10] & Field::<[u32; 7]>(Variant(_7, 2), 1)[_10];
_10 = 4_usize << _3;
_6.3 = _6.0;
_13 = _10 & _10;
_8 = [_3,RET,RET,_3];
place!(Field::<[u32; 7]>(Variant(_7, 2), 1)) = [2210255254_u32,3950686250_u32,1943262320_u32,1057626572_u32,3705675024_u32,3064148677_u32,3217049009_u32];
_5 = 62_i8;
place!(Field::<u8>(Variant(_7, 2), 0)) = !80_u8;
Goto(bb2)
}
bb2 = {
Call(_18 = dump_var(9_usize, 4_usize, Move(_4), 2_usize, Move(_2), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_18 = dump_var(9_usize, 10_usize, Move(_10), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _2: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _3: isize,mut _4: [isize; 4],mut _5: i8,mut _6: isize,mut _7: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _8: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _9: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _10: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _11: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _12: [isize; 4],mut _13: [isize; 4],mut _14: isize,mut _15: ([isize; 4], [u16; 3], u64, [isize; 4], char)) -> *const [u16; 3] {
mir! {
type RET = *const [u16; 3];
let _16: Adt54;
let _17: ((i8, u128, &'static bool), [char; 5]);
let _18: [u16; 3];
let _19: Adt58;
let _20: ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _21: *mut i16;
let _22: bool;
let _23: [char; 5];
let _24: i128;
let _25: [isize; 6];
let _26: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _27: [char; 5];
let _28: Adt58;
let _29: i16;
let _30: &'static bool;
let _31: bool;
let _32: char;
let _33: ();
let _34: ();
{
_1 = (_11.0, _9.1);
_2.2 = _9.0.2;
_11 = _9;
_8.4 = _11.0.4;
_7.1 = _15.1;
_1.0.4 = _11.0.4;
_15.2 = !_9.0.2;
_15.1 = _11.0.1;
RET = core::ptr::addr_of!(_15.1);
_9.0.3 = _8.3;
_7.4 = _8.4;
_8.0 = _1.0.0;
_13 = [_6,_9.1,_1.1,_1.1];
_1.0.4 = _9.0.4;
_7.4 = _8.4;
_14 = _9.1;
_8.0 = _11.0.0;
_10 = (_13, (*RET), _15.2, _2.3, _11.0.4);
_8 = (_12, _9.0.1, _11.0.2, _4, _7.4);
_17.0.1 = false as u128;
_8 = (_15.3, _9.0.1, _10.2, _1.0.0, _10.4);
_17.0.1 = 44436337379050365538321754502730332746_u128;
_1.0.2 = (-156369523944659090741128000858482883545_i128) as u64;
_1.0.2 = _11.0.2 - _9.0.2;
_2.4 = _11.0.4;
Goto(bb1)
}
bb1 = {
_5 = 111_i8;
_9.0.3 = _11.0.3;
_7.1 = _11.0.1;
_1.0.0 = _8.0;
_2.4 = _9.0.4;
_1.0.2 = !_7.2;
_1.0 = _11.0;
_13 = [_9.1,_14,_1.1,_1.1];
_20.2 = _11.0.2;
_11.0.3 = _1.0.3;
_20.1 = (*RET);
_20.3 = [_1.1,_14,_1.1,_9.1];
_8.2 = (-1015811864_i32) as u64;
_17.1 = [_15.4,_7.4,_15.4,_10.4,_11.0.4];
_1.0.1 = _2.1;
_7 = _1.0;
_20.3 = [_11.1,_11.1,_1.1,_6];
_11.1 = _1.1 | _3;
_7.4 = _8.4;
_11 = (_1.0, _6);
Call(_1.0 = fn11(_10.0, _8.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = _3 - _11.1;
_9.0.1 = _7.1;
_15.1 = [29412_u16,63650_u16,57810_u16];
_9.0.0 = _8.0;
match _17.0.1 {
0 => bb1,
1 => bb3,
2 => bb4,
44436337379050365538321754502730332746 => bb6,
_ => bb5
}
}
bb3 = {
_5 = 111_i8;
_9.0.3 = _11.0.3;
_7.1 = _11.0.1;
_1.0.0 = _8.0;
_2.4 = _9.0.4;
_1.0.2 = !_7.2;
_1.0 = _11.0;
_13 = [_9.1,_14,_1.1,_1.1];
_20.2 = _11.0.2;
_11.0.3 = _1.0.3;
_20.1 = (*RET);
_20.3 = [_1.1,_14,_1.1,_9.1];
_8.2 = (-1015811864_i32) as u64;
_17.1 = [_15.4,_7.4,_15.4,_10.4,_11.0.4];
_1.0.1 = _2.1;
_7 = _1.0;
_20.3 = [_11.1,_11.1,_1.1,_6];
_11.1 = _1.1 | _3;
_7.4 = _8.4;
_11 = (_1.0, _6);
Call(_1.0 = fn11(_10.0, _8.0), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_2.1 = (*RET);
_5 = _1.0.2 as i8;
_12 = _10.3;
_3 = _6;
_3 = _1.1 | _6;
_7.2 = _10.2;
_1.0.3 = _15.3;
_11.0.3 = [_14,_11.1,_14,_3];
_7.4 = _1.0.4;
match _17.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
44436337379050365538321754502730332746 => bb7,
_ => bb5
}
}
bb7 = {
_26 = (_15, _14);
_15.1 = [55578_u16,9798_u16,41676_u16];
_11.0 = _2;
Call(_15.1 = core::intrinsics::transmute(_11.0.1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_1.0.0 = _7.3;
_8.3 = [_6,_3,_26.1,_11.1];
_2 = (_10.3, _1.0.1, _1.0.2, _13, _26.0.4);
_26.0.1 = [20407_u16,58546_u16,2122_u16];
_24 = 142969391596741620986274493154417924208_i128;
_11.1 = _6;
_1.0 = (_26.0.3, _15.1, _7.2, _12, _11.0.4);
_25 = [_26.1,_3,_26.1,_9.1,_26.1,_6];
_23 = _17.1;
_7.4 = _9.0.4;
_26.0.0 = [_6,_1.1,_14,_1.1];
_18 = _11.0.1;
_1.0.0 = [_9.1,_6,_1.1,_11.1];
_2.3 = _12;
_10.4 = _2.4;
_25 = [_9.1,_11.1,_1.1,_11.1,_6,_3];
_20.0 = [_9.1,_1.1,_14,_6];
_2.0 = _1.0.3;
_11.0.4 = _26.0.4;
match _24 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
142969391596741620986274493154417924208 => bb16,
_ => bb15
}
}
bb9 = {
_26 = (_15, _14);
_15.1 = [55578_u16,9798_u16,41676_u16];
_11.0 = _2;
Call(_15.1 = core::intrinsics::transmute(_11.0.1), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_2.1 = (*RET);
_5 = _1.0.2 as i8;
_12 = _10.3;
_3 = _6;
_3 = _1.1 | _6;
_7.2 = _10.2;
_1.0.3 = _15.3;
_11.0.3 = [_14,_11.1,_14,_3];
_7.4 = _1.0.4;
match _17.0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
44436337379050365538321754502730332746 => bb7,
_ => bb5
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_5 = 111_i8;
_9.0.3 = _11.0.3;
_7.1 = _11.0.1;
_1.0.0 = _8.0;
_2.4 = _9.0.4;
_1.0.2 = !_7.2;
_1.0 = _11.0;
_13 = [_9.1,_14,_1.1,_1.1];
_20.2 = _11.0.2;
_11.0.3 = _1.0.3;
_20.1 = (*RET);
_20.3 = [_1.1,_14,_1.1,_9.1];
_8.2 = (-1015811864_i32) as u64;
_17.1 = [_15.4,_7.4,_15.4,_10.4,_11.0.4];
_1.0.1 = _2.1;
_7 = _1.0;
_20.3 = [_11.1,_11.1,_1.1,_6];
_11.1 = _1.1 | _3;
_7.4 = _8.4;
_11 = (_1.0, _6);
Call(_1.0 = fn11(_10.0, _8.0), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_6 = _3 - _11.1;
_9.0.1 = _7.1;
_15.1 = [29412_u16,63650_u16,57810_u16];
_9.0.0 = _8.0;
match _17.0.1 {
0 => bb1,
1 => bb3,
2 => bb4,
44436337379050365538321754502730332746 => bb6,
_ => bb5
}
}
bb15 = {
_5 = 111_i8;
_9.0.3 = _11.0.3;
_7.1 = _11.0.1;
_1.0.0 = _8.0;
_2.4 = _9.0.4;
_1.0.2 = !_7.2;
_1.0 = _11.0;
_13 = [_9.1,_14,_1.1,_1.1];
_20.2 = _11.0.2;
_11.0.3 = _1.0.3;
_20.1 = (*RET);
_20.3 = [_1.1,_14,_1.1,_9.1];
_8.2 = (-1015811864_i32) as u64;
_17.1 = [_15.4,_7.4,_15.4,_10.4,_11.0.4];
_1.0.1 = _2.1;
_7 = _1.0;
_20.3 = [_11.1,_11.1,_1.1,_6];
_11.1 = _1.1 | _3;
_7.4 = _8.4;
_11 = (_1.0, _6);
Call(_1.0 = fn11(_10.0, _8.0), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_10.0 = [_1.1,_26.1,_6,_1.1];
_26 = (_15, _9.1);
_11 = _1;
Goto(bb17)
}
bb17 = {
Call(_33 = dump_var(10_usize, 14_usize, Move(_14), 15_usize, Move(_15), 10_usize, Move(_10), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_33 = dump_var(10_usize, 18_usize, Move(_18), 3_usize, Move(_3), 8_usize, Move(_8), 5_usize, Move(_5)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_33 = dump_var(10_usize, 9_usize, Move(_9), 1_usize, Move(_1), 34_usize, _34, 34_usize, _34), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [isize; 4],mut _2: [isize; 4]) -> ([isize; 4], [u16; 3], u64, [isize; 4], char) {
mir! {
type RET = ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _3: [u32; 7];
let _4: ();
let _5: ();
{
RET.4 = '\u{93729}';
RET.2 = 14666206902520192923_usize as u64;
RET.4 = '\u{cad50}';
RET.0 = [(-102_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET.0 = [9223372036854775807_isize,(-9223372036854775808_isize),(-94_isize),9_isize];
RET.3 = _1;
RET.4 = '\u{10bb5c}';
RET.4 = '\u{2e6a0}';
RET.1 = [54456_u16,47443_u16,58424_u16];
RET.1 = [49285_u16,31067_u16,49466_u16];
Goto(bb1)
}
bb1 = {
Call(_4 = dump_var(11_usize, 2_usize, Move(_2), 5_usize, _5, 5_usize, _5, 5_usize, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _2: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _3: [isize; 4],mut _4: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _5: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _6: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _7: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _8: [isize; 4],mut _9: [isize; 4],mut _10: [u32; 7],mut _11: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize)) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _12: f32;
let _13: &'static bool;
let _14: Adt53;
let _15: i16;
let _16: u32;
let _17: bool;
let _18: f64;
let _19: Adt49;
let _20: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _21: f64;
let _22: f64;
let _23: [isize; 4];
let _24: Adt55;
let _25: bool;
let _26: bool;
let _27: u128;
let _28: i32;
let _29: Adt47;
let _30: i8;
let _31: ((i8, u128, &'static bool), [char; 5]);
let _32: Adt54;
let _33: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _34: u128;
let _35: (usize,);
let _36: [isize; 4];
let _37: [isize; 4];
let _38: u128;
let _39: ();
let _40: ();
{
_2.0.3 = _6.0.3;
_6 = (_1.0, _5.1);
_5.0.1 = _7.0.1;
_1.1 = (-2438402860273519855_i64) as isize;
_11.0.4 = _1.0.4;
_6.0.3 = [_6.1,_11.1,_7.1,_11.1];
_11.0.3 = [_5.1,_11.1,_7.1,_11.1];
_12 = 2006037271_u32 as f32;
_10 = [837301972_u32,1321528357_u32,3869874553_u32,2454386906_u32,2517217117_u32,3042876878_u32,1868889611_u32];
_1 = (_6.0, _5.1);
_2.0.0 = _11.0.3;
_1.0.2 = !_5.0.2;
_2 = _7;
_18 = 117033995618884437307081427538908720201_u128 as f64;
_5.0.1 = [25448_u16,41064_u16,20794_u16];
_20.1 = _11.1 >> _1.1;
_13 = &_17;
_1.0.1 = [2759_u16,58843_u16,10422_u16];
Goto(bb1)
}
bb1 = {
_6.0.1 = [48769_u16,60142_u16,51632_u16];
_20.0.1 = [46130_u16,8878_u16,27840_u16];
_11.0.1 = _4.1;
_17 = !true;
_20.0.3 = _8;
_16 = 1974072915_u32;
_20.0.4 = _5.0.4;
_5 = (_2.0, _7.1);
_7 = (_4, _6.1);
_6.0.3 = [_1.1,_7.1,_2.1,_6.1];
_15 = !(-10334_i16);
_2.0.1 = [36191_u16,19163_u16,63070_u16];
match _16 {
0 => bb2,
1 => bb3,
1974072915 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1.0 = _5.0;
_4.4 = _6.0.4;
RET = [_16,_16,_16,_16,_16,_16,_16];
_16 = !3021961679_u32;
_12 = 114_i8 as f32;
_5.0.0 = [_20.1,_7.1,_11.1,_20.1];
_22 = _18 + _18;
_5 = (_6.0, _20.1);
_3 = _6.0.0;
_20.0.2 = _7.0.2;
_24 = Adt55 { fld0: _17,fld1: 112310002190585610994595904650759708548_i128 };
_1.0.2 = !_7.0.2;
_24 = Adt55 { fld0: _17,fld1: (-113401624273986152904774864147351554686_i128) };
_20.0 = (_6.0.3, _5.0.1, _6.0.2, _2.0.0, _6.0.4);
_2.0 = (_4.3, _6.0.1, _11.0.2, _9, _1.0.4);
_1 = (_11.0, _6.1);
_2 = _20;
_20.0.4 = _7.0.4;
_5.0.4 = _1.0.4;
_2.1 = _6.1;
_1 = (_11.0, _2.1);
_6.0.2 = _7.0.2 >> _6.1;
_11.0.0 = [_1.1,_11.1,_20.1,_5.1];
match _24.fld1 {
0 => bb4,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
226880742646952310558599743284416656770 => bb11,
_ => bb10
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6.0.1 = [48769_u16,60142_u16,51632_u16];
_20.0.1 = [46130_u16,8878_u16,27840_u16];
_11.0.1 = _4.1;
_17 = !true;
_20.0.3 = _8;
_16 = 1974072915_u32;
_20.0.4 = _5.0.4;
_5 = (_2.0, _7.1);
_7 = (_4, _6.1);
_6.0.3 = [_1.1,_7.1,_2.1,_6.1];
_15 = !(-10334_i16);
_2.0.1 = [36191_u16,19163_u16,63070_u16];
match _16 {
0 => bb2,
1 => bb3,
1974072915 => bb5,
_ => bb4
}
}
bb10 = {
Return()
}
bb11 = {
_21 = -_22;
_7.0.2 = !_6.0.2;
_7.0.0 = [_2.1,_5.1,_6.1,_1.1];
_10 = RET;
_28 = 940722635_i32 & 239410665_i32;
_1.0.3 = [_5.1,_20.1,_5.1,_1.1];
_4.1 = _6.0.1;
_23 = [_5.1,_5.1,_11.1,_11.1];
_4.3 = [_2.1,_20.1,_7.1,_2.1];
_11.0.3 = [_2.1,_5.1,_20.1,_20.1];
_2.1 = 103_u8 as isize;
_11.0.4 = _4.4;
_5.0.0 = [_7.1,_5.1,_5.1,_11.1];
_14 = Adt53::Variant2 { fld0: _20.0.0 };
_4.0 = Field::<[isize; 4]>(Variant(_14, 2), 0);
Call(_1.0 = fn13(_8, _11, _5.0, _7.1, _4.0, _4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4.0 = [_7.1,_20.1,_5.1,_20.1];
_4 = _7.0;
_6.0.4 = _20.0.4;
RET = _10;
_7.0.4 = _11.0.4;
_1.0 = (_4.0, _4.1, _6.0.2, _4.0, _7.0.4);
_11.0.3 = _4.3;
_1.0.2 = _4.2;
_24.fld1 = (-62731621655573380954737694128828056419_i128);
_11.0.3 = _8;
_25 = _6.1 > _7.1;
_2.0.2 = _6.0.2 << _20.1;
_5.0.2 = !_1.0.2;
_19 = Adt49::Variant0 { fld0: _25,fld1: _11.0.4,fld2: 7712109870778846579_i64,fld3: (-126_i8),fld4: _24.fld1,fld5: _5.0.3 };
_17 = _25;
_22 = (-99_i8) as f64;
_11.0 = (_3, _1.0.1, _4.2, _7.0.3, _7.0.4);
_20.1 = _11.1;
_7.0.1 = [45349_u16,42979_u16,28460_u16];
place!(Field::<i128>(Variant(_19, 0), 4)) = !_24.fld1;
_33.1 = !_5.1;
Goto(bb13)
}
bb13 = {
_13 = &_24.fld0;
_31.0.2 = &_25;
_27 = 105430896442454351713195987184040128800_u128 * 300448845641044452088935485943646624029_u128;
_21 = _18;
_20.0.0 = [_33.1,_1.1,_6.1,_5.1];
_9 = [_6.1,_20.1,_7.1,_11.1];
_33.0.0 = [_11.1,_6.1,_5.1,_6.1];
_33.0.4 = _4.4;
_7.1 = _11.1;
_31.0.1 = _21 as u128;
_2.0.4 = _20.0.4;
_20.1 = _2.0.4 as isize;
place!(Field::<[isize; 4]>(Variant(_19, 0), 5)) = [_5.1,_7.1,_1.1,_7.1];
_11.0.2 = !_2.0.2;
_2.0.1 = [21622_u16,58025_u16,63285_u16];
_1.0.4 = _20.0.4;
_7.0.1 = [13525_u16,56163_u16,38138_u16];
_3 = _8;
_22 = _21;
_33.0.2 = _2.0.4 as u64;
_7.0.3 = _4.3;
_5 = (_7.0, _11.1);
_11.0.3 = [_1.1,_6.1,_7.1,_11.1];
_13 = Move(_31.0.2);
_4 = (_1.0.0, _7.0.1, _2.0.2, _23, Field::<char>(Variant(_19, 0), 1));
_6.0.2 = _7.0.2;
_7.0.3 = _23;
_22 = _21;
match _24.fld1 {
277550745265365082508636913302940155037 => bb15,
_ => bb14
}
}
bb14 = {
_6.0.1 = [48769_u16,60142_u16,51632_u16];
_20.0.1 = [46130_u16,8878_u16,27840_u16];
_11.0.1 = _4.1;
_17 = !true;
_20.0.3 = _8;
_16 = 1974072915_u32;
_20.0.4 = _5.0.4;
_5 = (_2.0, _7.1);
_7 = (_4, _6.1);
_6.0.3 = [_1.1,_7.1,_2.1,_6.1];
_15 = !(-10334_i16);
_2.0.1 = [36191_u16,19163_u16,63070_u16];
match _16 {
0 => bb2,
1 => bb3,
1974072915 => bb5,
_ => bb4
}
}
bb15 = {
_11.1 = (-8282113124465719014_i64) as isize;
_17 = !Field::<bool>(Variant(_19, 0), 0);
_6.0.2 = _24.fld1 as u64;
_10 = [_16,_16,_16,_16,_16,_16,_16];
_1.0.2 = Field::<char>(Variant(_19, 0), 1) as u64;
SetDiscriminant(_14, 2);
_1.0 = (_20.0.0, _7.0.1, _5.0.2, _3, Field::<char>(Variant(_19, 0), 1));
_11.0.4 = _2.0.4;
RET = _10;
_33.0.4 = _11.0.4;
_15 = !31029_i16;
_5.0 = _7.0;
_17 = !_25;
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(12_usize, 10_usize, Move(_10), 27_usize, Move(_27), 2_usize, Move(_2), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(12_usize, 28_usize, Move(_28), 20_usize, Move(_20), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(12_usize, 9_usize, Move(_9), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [isize; 4],mut _2: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),mut _3: ([isize; 4], [u16; 3], u64, [isize; 4], char),mut _4: isize,mut _5: [isize; 4],mut _6: ([isize; 4], [u16; 3], u64, [isize; 4], char)) -> ([isize; 4], [u16; 3], u64, [isize; 4], char) {
mir! {
type RET = ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _7: isize;
let _8: ();
let _9: ();
{
RET.1 = [57290_u16,19579_u16,39865_u16];
RET.1 = [4760_u16,10794_u16,61057_u16];
_3.1 = RET.1;
RET.4 = _3.4;
RET.2 = _6.2 | _2.0.2;
_6.0 = [_2.1,_4,_2.1,_4];
RET.3 = _6.0;
RET.1 = _2.0.1;
_3.1 = [35624_u16,5461_u16,37635_u16];
RET = (_3.3, _3.1, _3.2, _3.3, _3.4);
RET = _3;
_3.3 = _1;
_2.0.2 = 51929_u16 as u64;
_6.1 = [13104_u16,34073_u16,15748_u16];
RET.3 = [_2.1,_2.1,_2.1,_2.1];
_6.4 = _2.0.4;
RET.0 = [_2.1,_4,_2.1,_4];
RET.3 = [_4,_2.1,_4,_4];
_6.1 = [17260_u16,9330_u16,39282_u16];
_2.0.3 = [_2.1,_4,_2.1,_2.1];
_2.1 = 5480456888697597971_usize as isize;
_3.0 = [_4,_4,_4,_4];
_3.3 = [_4,_4,_4,_4];
RET = (_3.3, _6.1, _3.2, _5, _6.4);
_2.0.2 = _3.2 >> _4;
_2.0.0 = [_4,_4,_4,_4];
_2.0.0 = [_4,_4,_2.1,_4];
_6.2 = !_2.0.2;
RET.1 = [4888_u16,64339_u16,27640_u16];
_3.0 = _3.3;
Goto(bb1)
}
bb1 = {
Call(_8 = dump_var(13_usize, 5_usize, Move(_5), 4_usize, Move(_4), 3_usize, Move(_3), 9_usize, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: *const [u16; 3],mut _2: *const bool,mut _3: f32,mut _4: *const bool,mut _5: *const [u16; 3]) -> [i128; 3] {
mir! {
type RET = [i128; 3];
let _6: i8;
let _7: char;
let _8: usize;
let _9: *const bool;
let _10: i64;
let _11: Adt51;
let _12: [u128; 4];
let _13: *const bool;
let _14: f64;
let _15: isize;
let _16: char;
let _17: isize;
let _18: isize;
let _19: char;
let _20: Adt52;
let _21: u32;
let _22: f64;
let _23: [u128; 4];
let _24: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _25: [char; 5];
let _26: i16;
let _27: *const bool;
let _28: isize;
let _29: isize;
let _30: Adt43;
let _31: ();
let _32: ();
{
RET = [(-140308243018567459230648956443013440089_i128),59102549589702200540963510005163799287_i128,90278481059537296931088428225310101803_i128];
_3 = 122837529131887461503901045476605307131_i128 as f32;
_1 = _5;
_7 = '\u{a399e}';
_9 = _2;
_6 = 2313512965_u32 as i8;
Goto(bb1)
}
bb1 = {
_2 = _9;
_2 = _4;
_10 = 742870880697019559_i64;
_9 = _2;
_2 = _4;
_7 = '\u{7f75e}';
_5 = _1;
_8 = 74998083111170711018392454926998172045_u128 as usize;
_3 = _8 as f32;
_7 = '\u{eee4}';
_10 = 1374542852393804891_i64 << _8;
_8 = _3 as usize;
RET = [63379567300460949605128191086550430267_i128,(-50652694166843112623396587690431581504_i128),35995539983498936970635956306928472088_i128];
Goto(bb2)
}
bb2 = {
_8 = _6 as usize;
RET = [23797542665787383882163450181526607344_i128,117942325195689999535499012750773404771_i128,(-60969877138211721426158021148137885848_i128)];
_10 = 16968672644167630509_u64 as i64;
_13 = _9;
_10 = true as i64;
_12 = [15880698698519643514817524292074933072_u128,279576013997641707689818414370138369490_u128,248160592604650346295620267102596409121_u128,56658499307742873703543819562440201785_u128];
_2 = _13;
_4 = _9;
_14 = (-39_isize) as f64;
_9 = _4;
_9 = _2;
RET = [(-163075432386375520581727083896073548923_i128),30752215908748193402344751876436771064_i128,(-19277687773837069642331707317385835729_i128)];
RET = [(-19614261715153334419590154527203824767_i128),(-103608819637058069792271878894707019259_i128),43225088430741869787980547044446137888_i128];
RET = [127645981202549351173748304355063261443_i128,43788178011288083887400512050710212085_i128,23981275767575369524928795770867432588_i128];
RET = [103170309397278249362996588669360397142_i128,(-110376840008428492531603469545281798180_i128),(-52834328903292472244989588034231878767_i128)];
_9 = _4;
_13 = _4;
_1 = _5;
RET = [(-102803516750476433456455104558592221319_i128),162314257384674744443458284423681226940_i128,73684710568095977197196478835028142562_i128];
_15 = _8 as isize;
_12 = [299924509267050363620794913173508126086_u128,159757522621804230321524647807443893646_u128,312571280235793810256462938838862957810_u128,2227728798265547085547639153604743342_u128];
_3 = 10788809030536328104_u64 as f32;
Goto(bb3)
}
bb3 = {
_8 = !1_usize;
RET = [(-7650578941903827237577757498969297922_i128),138431695610261156096203125266076954965_i128,(-30071047274801192032940935760371489279_i128)];
_9 = _4;
_6 = (-81_i8);
_12 = [254827214781843721689138939598075340305_u128,176986940207468550164011974876980932035_u128,175888305866199385430537356386348719527_u128,199287429252207867048519136164454766691_u128];
match _6 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
340282366920938463463374607431768211375 => bb10,
_ => bb9
}
}
bb4 = {
_8 = _6 as usize;
RET = [23797542665787383882163450181526607344_i128,117942325195689999535499012750773404771_i128,(-60969877138211721426158021148137885848_i128)];
_10 = 16968672644167630509_u64 as i64;
_13 = _9;
_10 = true as i64;
_12 = [15880698698519643514817524292074933072_u128,279576013997641707689818414370138369490_u128,248160592604650346295620267102596409121_u128,56658499307742873703543819562440201785_u128];
_2 = _13;
_4 = _9;
_14 = (-39_isize) as f64;
_9 = _4;
_9 = _2;
RET = [(-163075432386375520581727083896073548923_i128),30752215908748193402344751876436771064_i128,(-19277687773837069642331707317385835729_i128)];
RET = [(-19614261715153334419590154527203824767_i128),(-103608819637058069792271878894707019259_i128),43225088430741869787980547044446137888_i128];
RET = [127645981202549351173748304355063261443_i128,43788178011288083887400512050710212085_i128,23981275767575369524928795770867432588_i128];
RET = [103170309397278249362996588669360397142_i128,(-110376840008428492531603469545281798180_i128),(-52834328903292472244989588034231878767_i128)];
_9 = _4;
_13 = _4;
_1 = _5;
RET = [(-102803516750476433456455104558592221319_i128),162314257384674744443458284423681226940_i128,73684710568095977197196478835028142562_i128];
_15 = _8 as isize;
_12 = [299924509267050363620794913173508126086_u128,159757522621804230321524647807443893646_u128,312571280235793810256462938838862957810_u128,2227728798265547085547639153604743342_u128];
_3 = 10788809030536328104_u64 as f32;
Goto(bb3)
}
bb5 = {
_2 = _9;
_2 = _4;
_10 = 742870880697019559_i64;
_9 = _2;
_2 = _4;
_7 = '\u{7f75e}';
_5 = _1;
_8 = 74998083111170711018392454926998172045_u128 as usize;
_3 = _8 as f32;
_7 = '\u{eee4}';
_10 = 1374542852393804891_i64 << _8;
_8 = _3 as usize;
RET = [63379567300460949605128191086550430267_i128,(-50652694166843112623396587690431581504_i128),35995539983498936970635956306928472088_i128];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_12 = [93450645002176186054154100150732918177_u128,103751294101140436460235489129718355853_u128,241620349894189439434398113251543873728_u128,129631954978843209525025028890897473482_u128];
_4 = _2;
_3 = 252_u8 as f32;
_6 = 80415621025831840836277870123569327092_u128 as i8;
_3 = 3271_u16 as f32;
_8 = 0_usize;
_18 = true as isize;
_10 = !5616890382919415060_i64;
_17 = !_18;
_17 = !_18;
_8 = 17590025447635279982_usize;
_18 = _15 * _15;
Call(RET = fn15(_5, _12, _18, _15, _18), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_16 = _7;
_17 = (-2255_i16) as isize;
_9 = _2;
_12 = [333382410844610337542002217464577277129_u128,83211475416981105881631219492859988192_u128,148299540196539224685120401241552859033_u128,182604321184483322276932460938667301919_u128];
_5 = _1;
_14 = _3 as f64;
_18 = 71476647772459363675235152910601896888_u128 as isize;
_18 = _17 >> _15;
_18 = _17;
RET = [21465116478153877090246525559102092320_i128,(-6265563200631701779674803320112933969_i128),(-165464424576808839104843599147817664897_i128)];
_21 = !2200819155_u32;
_23 = _12;
_22 = _14 - _14;
_23 = _12;
RET = [(-148508797481513319762104263205228191056_i128),14359855305989790461160825020243443481_i128,32939736844635114757705214074328837362_i128];
_3 = _8 as f32;
_19 = _7;
match _8 {
0 => bb8,
1 => bb3,
17590025447635279982 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_4 = _13;
RET = [121825427396763724956634268542198472800_i128,(-120493820138414675099456875825106693084_i128),(-7495211211376350333380792412519851993_i128)];
_25 = [_7,_16,_16,_16,_7];
_8 = (-3701_i16) as usize;
_24.0.2 = !6809028652880270892_u64;
_2 = _4;
_17 = (-686575211_i32) as isize;
_24.1 = !_18;
_2 = _9;
_9 = _4;
_16 = _7;
_18 = _17 ^ _15;
_24.0.1 = [62608_u16,12882_u16,25599_u16];
_9 = _13;
_26 = 1506_i16;
_24.0.2 = true as u64;
_21 = !1501527653_u32;
_24.0.0 = [_18,_15,_24.1,_17];
_24.0.3 = [_15,_24.1,_24.1,_15];
_27 = _4;
_6 = _8 as i8;
_24.0.1 = [26139_u16,15989_u16,57061_u16];
Goto(bb14)
}
bb14 = {
_17 = _24.1;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(14_usize, 26_usize, Move(_26), 25_usize, Move(_25), 19_usize, Move(_19), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(14_usize, 17_usize, Move(_17), 16_usize, Move(_16), 7_usize, Move(_7), 32_usize, _32), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: *const [u16; 3],mut _2: [u128; 4],mut _3: isize,mut _4: isize,mut _5: isize) -> [i128; 3] {
mir! {
type RET = [i128; 3];
let _6: isize;
let _7: isize;
let _8: (usize,);
let _9: f64;
let _10: isize;
let _11: Adt47;
let _12: (i8, usize);
let _13: f32;
let _14: (i8, u128, &'static bool);
let _15: (i8, u128, &'static bool);
let _16: Adt43;
let _17: isize;
let _18: [isize; 4];
let _19: i32;
let _20: ();
let _21: ();
{
_3 = -_5;
RET = [(-167627694049779633561124311086879659648_i128),152183282412110778475277430005514182424_i128,39817830019218436213784972178529452656_i128];
_5 = _4;
_3 = _5 + _4;
_3 = (-19211_i16) as isize;
_4 = _5;
_5 = _3;
Call(_6 = fn16(_5, _3, _1, _5, _1, _3, _5, _3, _1, _2, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = 132_u8 as isize;
_2 = [126250579964550451405471890307560077214_u128,204103799177268723966996766589650722003_u128,209588353692944290349307057841900965543_u128,269320921958121840939101731438766313675_u128];
RET = [(-68288053623307395712270105710956903447_i128),(-65345649642964791265675696544555225390_i128),(-43506879200501774860244210713187709224_i128)];
_6 = _3 << _3;
_5 = _4 * _4;
_2 = [198008520907922642204576191977929292232_u128,36000072927131940167837656277150762927_u128,237170926127525374675524113957965264183_u128,279861287703899411238121956439233437125_u128];
_6 = _3 - _3;
_4 = _5 + _6;
RET = [132110150421691368346587168752322369808_i128,161926547894562126608444556819254534436_i128,(-86181791233499852400742579922902647913_i128)];
RET = [19923870737413171581759627192650763234_i128,147033541876276836772408043822874036365_i128,(-60283929072422085546810334440823186991_i128)];
_4 = -_5;
_2 = [31029302883452258909680728003122110284_u128,201258097056671608709444178368533856324_u128,11409809900805392532287366852339774163_u128,243798656880598942215331712108496874123_u128];
_2 = [286808777289124641820153998826423397789_u128,22156693430854903624943933641629416150_u128,217966205706779034210547719043630518652_u128,138759549837144004464655177880924707527_u128];
_5 = 157_u8 as isize;
_4 = 146452364137066660712127728656303123336_u128 as isize;
RET = [(-162028465357691305558940817605732721896_i128),24932134888629017912070513109607074421_i128,29765441554434896350323468621840196090_i128];
RET = [(-14985961814602451935352375933040390412_i128),(-41801260125055159817392310947442960611_i128),(-66523824870406867045490243322580085295_i128)];
RET = [132142209229088349885645002178141649999_i128,16103520981675120693912193873021559546_i128,140523685332542347965264063291826359492_i128];
Goto(bb2)
}
bb2 = {
_6 = _5;
_3 = _5;
_6 = _5;
_5 = _6 & _3;
_6 = !_3;
RET = [(-138068819276468710364215253400827993861_i128),(-25349196952252692359805146326506121038_i128),9125246474592819706257127472553229691_i128];
_4 = _3 + _3;
RET = [(-82121297359208027449210805495819564173_i128),35246102037036610109856596279315553969_i128,(-27839033279312534741370566693004988503_i128)];
Goto(bb3)
}
bb3 = {
_2 = [37121611456918499874720950350383859101_u128,199967711940979882968386961174793657034_u128,134551198508768487942716714787060713789_u128,127975885987342018044362965845885063907_u128];
_2 = [226137512166488173643422464085704696842_u128,111214934361392529470530934799824098528_u128,79702524060718344646051486405602953732_u128,34604261976384875810345375898268957877_u128];
RET = [(-59970196186045276143105141600763305501_i128),(-68351552062444475360701888474746958752_i128),153422798968491958096905354762561846346_i128];
_6 = '\u{eb36b}' as isize;
_3 = -_4;
_6 = _4 ^ _5;
RET = [(-64478078159458130346581678979507600619_i128),63772606476660700270021852459381962900_i128,(-152322038954588138724729895887895361646_i128)];
_7 = _6 - _6;
_7 = _6;
Goto(bb4)
}
bb4 = {
_4 = _5;
_7 = 220848735_i32 as isize;
_4 = -_7;
_5 = _7 - _6;
Goto(bb5)
}
bb5 = {
_7 = -_4;
_4 = _3 << _5;
_8.0 = !6_usize;
_5 = (-4816263895175407355_i64) as isize;
_3 = _7;
_2 = [299486831278505446687861287400960810986_u128,6350656746089573508156153807655195803_u128,260715331935414298280155804111224753594_u128,114027319063627815767437509123729651816_u128];
RET = [(-1137845166967878000546724691314134932_i128),164064366414371784387055848148820475595_i128,11394450942239449878517160164665060147_i128];
_4 = _6;
_6 = (-40729080415582472660604523316655600285_i128) as isize;
_2 = [322268063512232561404460652059128070647_u128,286939915914880762669088501779227328088_u128,110456467917793820385878363290352192054_u128,73943304040338676504275901045057656767_u128];
Goto(bb6)
}
bb6 = {
_5 = 8055_u16 as isize;
RET = [(-57380260143394085531060389066385829480_i128),(-93239545489919596059500339544778085112_i128),(-135647355872364854228443189877515379911_i128)];
_8 = (4_usize,);
_10 = _4 >> _6;
_9 = (-8108534217204099095_i64) as f64;
_2 = [117563966612798897916297084687491157332_u128,338105216809470559734961824436701173901_u128,269915235059815536556928539088900138116_u128,20017435222968946718022023964608913898_u128];
RET = [(-67816124721595642032386953602900479397_i128),(-70715698097301440442468788478176302299_i128),46228488958886377321166265698116720926_i128];
_7 = _10 | _5;
_6 = -_10;
_9 = 78256448423834625268445005227313386757_u128 as f64;
_8 = (7_usize,);
_6 = (-15_i8) as isize;
_3 = _10 >> _4;
_4 = -_10;
match _8.0 {
0 => bb4,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
7 => bb12,
_ => bb11
}
}
bb7 = {
_7 = -_4;
_4 = _3 << _5;
_8.0 = !6_usize;
_5 = (-4816263895175407355_i64) as isize;
_3 = _7;
_2 = [299486831278505446687861287400960810986_u128,6350656746089573508156153807655195803_u128,260715331935414298280155804111224753594_u128,114027319063627815767437509123729651816_u128];
RET = [(-1137845166967878000546724691314134932_i128),164064366414371784387055848148820475595_i128,11394450942239449878517160164665060147_i128];
_4 = _6;
_6 = (-40729080415582472660604523316655600285_i128) as isize;
_2 = [322268063512232561404460652059128070647_u128,286939915914880762669088501779227328088_u128,110456467917793820385878363290352192054_u128,73943304040338676504275901045057656767_u128];
Goto(bb6)
}
bb8 = {
_4 = _5;
_7 = 220848735_i32 as isize;
_4 = -_7;
_5 = _7 - _6;
Goto(bb5)
}
bb9 = {
_2 = [37121611456918499874720950350383859101_u128,199967711940979882968386961174793657034_u128,134551198508768487942716714787060713789_u128,127975885987342018044362965845885063907_u128];
_2 = [226137512166488173643422464085704696842_u128,111214934361392529470530934799824098528_u128,79702524060718344646051486405602953732_u128,34604261976384875810345375898268957877_u128];
RET = [(-59970196186045276143105141600763305501_i128),(-68351552062444475360701888474746958752_i128),153422798968491958096905354762561846346_i128];
_6 = '\u{eb36b}' as isize;
_3 = -_4;
_6 = _4 ^ _5;
RET = [(-64478078159458130346581678979507600619_i128),63772606476660700270021852459381962900_i128,(-152322038954588138724729895887895361646_i128)];
_7 = _6 - _6;
_7 = _6;
Goto(bb4)
}
bb10 = {
_6 = _5;
_3 = _5;
_6 = _5;
_5 = _6 & _3;
_6 = !_3;
RET = [(-138068819276468710364215253400827993861_i128),(-25349196952252692359805146326506121038_i128),9125246474592819706257127472553229691_i128];
_4 = _3 + _3;
RET = [(-82121297359208027449210805495819564173_i128),35246102037036610109856596279315553969_i128,(-27839033279312534741370566693004988503_i128)];
Goto(bb3)
}
bb11 = {
_3 = 132_u8 as isize;
_2 = [126250579964550451405471890307560077214_u128,204103799177268723966996766589650722003_u128,209588353692944290349307057841900965543_u128,269320921958121840939101731438766313675_u128];
RET = [(-68288053623307395712270105710956903447_i128),(-65345649642964791265675696544555225390_i128),(-43506879200501774860244210713187709224_i128)];
_6 = _3 << _3;
_5 = _4 * _4;
_2 = [198008520907922642204576191977929292232_u128,36000072927131940167837656277150762927_u128,237170926127525374675524113957965264183_u128,279861287703899411238121956439233437125_u128];
_6 = _3 - _3;
_4 = _5 + _6;
RET = [132110150421691368346587168752322369808_i128,161926547894562126608444556819254534436_i128,(-86181791233499852400742579922902647913_i128)];
RET = [19923870737413171581759627192650763234_i128,147033541876276836772408043822874036365_i128,(-60283929072422085546810334440823186991_i128)];
_4 = -_5;
_2 = [31029302883452258909680728003122110284_u128,201258097056671608709444178368533856324_u128,11409809900805392532287366852339774163_u128,243798656880598942215331712108496874123_u128];
_2 = [286808777289124641820153998826423397789_u128,22156693430854903624943933641629416150_u128,217966205706779034210547719043630518652_u128,138759549837144004464655177880924707527_u128];
_5 = 157_u8 as isize;
_4 = 146452364137066660712127728656303123336_u128 as isize;
RET = [(-162028465357691305558940817605732721896_i128),24932134888629017912070513109607074421_i128,29765441554434896350323468621840196090_i128];
RET = [(-14985961814602451935352375933040390412_i128),(-41801260125055159817392310947442960611_i128),(-66523824870406867045490243322580085295_i128)];
RET = [132142209229088349885645002178141649999_i128,16103520981675120693912193873021559546_i128,140523685332542347965264063291826359492_i128];
Goto(bb2)
}
bb12 = {
RET = [(-14820527330419958602243865271724898095_i128),(-117804840676459576906775665473145321593_i128),(-154231528831646357968762270003046863737_i128)];
_8.0 = 5_usize + 6495886203755816093_usize;
_3 = _10 - _7;
_3 = _4 << _8.0;
RET = [158832282248623445479097183664332109141_i128,116821481285945886771987702923865577719_i128,9973744308505833811289623208861876398_i128];
_8.0 = !122919109565649888_usize;
RET = [90538962121294976825185939626584023575_i128,10274687465590524743045696816193027856_i128,(-37356860308237630386881320386444101805_i128)];
_9 = 7538451272042372779_i64 as f64;
_2 = [295823862064784411761893630818128463128_u128,132547948080049537849415010025681110111_u128,99950835432624101563564838727820815696_u128,81510518890865549044708182821143534427_u128];
_12 = ((-119_i8), _8.0);
_11 = Adt47::Variant0 { fld0: 770711580_i32 };
_12.1 = 157209329541615087176118717023532474910_u128 as usize;
place!(Field::<i32>(Variant(_11, 0), 0)) = (-1279340598_i32);
RET = [25569033773539254994001605535486628158_i128,159314052233927663034874322282633030587_i128,(-21132250264333444835499578008335519696_i128)];
place!(Field::<i32>(Variant(_11, 0), 0)) = 1530615338_i32 | (-1523280186_i32);
_9 = _10 as f64;
RET = [(-132759054112935323479635355630163475711_i128),(-71848715708297434254926274905943719618_i128),(-42359128197804022889341311778749583935_i128)];
_12 = ((-46_i8), _8.0);
match _12.0 {
340282366920938463463374607431768211410 => bb13,
_ => bb10
}
}
bb13 = {
place!(Field::<i32>(Variant(_11, 0), 0)) = !506253838_i32;
_8 = (_12.1,);
_12.0 = 690_u16 as i8;
_8.0 = _12.1;
place!(Field::<i32>(Variant(_11, 0), 0)) = (-1710444092_i32);
match Field::<i32>(Variant(_11, 0), 0) {
0 => bb6,
1 => bb2,
2 => bb5,
3 => bb14,
4 => bb15,
5 => bb16,
340282366920938463463374607430057767364 => bb18,
_ => bb17
}
}
bb14 = {
RET = [(-14820527330419958602243865271724898095_i128),(-117804840676459576906775665473145321593_i128),(-154231528831646357968762270003046863737_i128)];
_8.0 = 5_usize + 6495886203755816093_usize;
_3 = _10 - _7;
_3 = _4 << _8.0;
RET = [158832282248623445479097183664332109141_i128,116821481285945886771987702923865577719_i128,9973744308505833811289623208861876398_i128];
_8.0 = !122919109565649888_usize;
RET = [90538962121294976825185939626584023575_i128,10274687465590524743045696816193027856_i128,(-37356860308237630386881320386444101805_i128)];
_9 = 7538451272042372779_i64 as f64;
_2 = [295823862064784411761893630818128463128_u128,132547948080049537849415010025681110111_u128,99950835432624101563564838727820815696_u128,81510518890865549044708182821143534427_u128];
_12 = ((-119_i8), _8.0);
_11 = Adt47::Variant0 { fld0: 770711580_i32 };
_12.1 = 157209329541615087176118717023532474910_u128 as usize;
place!(Field::<i32>(Variant(_11, 0), 0)) = (-1279340598_i32);
RET = [25569033773539254994001605535486628158_i128,159314052233927663034874322282633030587_i128,(-21132250264333444835499578008335519696_i128)];
place!(Field::<i32>(Variant(_11, 0), 0)) = 1530615338_i32 | (-1523280186_i32);
_9 = _10 as f64;
RET = [(-132759054112935323479635355630163475711_i128),(-71848715708297434254926274905943719618_i128),(-42359128197804022889341311778749583935_i128)];
_12 = ((-46_i8), _8.0);
match _12.0 {
340282366920938463463374607431768211410 => bb13,
_ => bb10
}
}
bb15 = {
_5 = 8055_u16 as isize;
RET = [(-57380260143394085531060389066385829480_i128),(-93239545489919596059500339544778085112_i128),(-135647355872364854228443189877515379911_i128)];
_8 = (4_usize,);
_10 = _4 >> _6;
_9 = (-8108534217204099095_i64) as f64;
_2 = [117563966612798897916297084687491157332_u128,338105216809470559734961824436701173901_u128,269915235059815536556928539088900138116_u128,20017435222968946718022023964608913898_u128];
RET = [(-67816124721595642032386953602900479397_i128),(-70715698097301440442468788478176302299_i128),46228488958886377321166265698116720926_i128];
_7 = _10 | _5;
_6 = -_10;
_9 = 78256448423834625268445005227313386757_u128 as f64;
_8 = (7_usize,);
_6 = (-15_i8) as isize;
_3 = _10 >> _4;
_4 = -_10;
match _8.0 {
0 => bb4,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
7 => bb12,
_ => bb11
}
}
bb16 = {
_6 = _5;
_3 = _5;
_6 = _5;
_5 = _6 & _3;
_6 = !_3;
RET = [(-138068819276468710364215253400827993861_i128),(-25349196952252692359805146326506121038_i128),9125246474592819706257127472553229691_i128];
_4 = _3 + _3;
RET = [(-82121297359208027449210805495819564173_i128),35246102037036610109856596279315553969_i128,(-27839033279312534741370566693004988503_i128)];
Goto(bb3)
}
bb17 = {
_4 = _5;
_7 = 220848735_i32 as isize;
_4 = -_7;
_5 = _7 - _6;
Goto(bb5)
}
bb18 = {
_2 = [74887584475600357937307327969600751941_u128,305000449045410532796505736857738896443_u128,19406431593699116267197057114767214158_u128,183373658571970064365867759063073198469_u128];
_13 = 693105087_u32 as f32;
_13 = _12.1 as f32;
SetDiscriminant(_11, 0);
place!(Field::<i32>(Variant(_11, 0), 0)) = (-1043957945_i32) + 1831024434_i32;
_12.0 = Field::<i32>(Variant(_11, 0), 0) as i8;
RET = [57662210416638819660091904810849930076_i128,(-132993603239749645582247742557350523903_i128),83217421990865777461000970706405595848_i128];
_15.1 = 18363711690419381265_u64 as u128;
_15.0 = !_12.0;
_3 = _4;
_6 = -_4;
_14.1 = _7 as u128;
_14.1 = _15.1 | _15.1;
_14.0 = -_12.0;
_2 = [_14.1,_14.1,_15.1,_14.1];
_9 = _10 as f64;
_4 = -_7;
_15.0 = !_14.0;
_10 = _4;
_10 = _4 ^ _7;
_9 = (-131075227559668696495349023385811239633_i128) as f64;
_13 = 31983_i16 as f32;
_14.1 = Field::<i32>(Variant(_11, 0), 0) as u128;
_5 = _15.0 as isize;
_12.0 = _14.0;
Goto(bb19)
}
bb19 = {
Call(_20 = dump_var(15_usize, 2_usize, Move(_2), 10_usize, Move(_10), 5_usize, Move(_5), 12_usize, Move(_12)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: isize,mut _2: isize,mut _3: *const [u16; 3],mut _4: isize,mut _5: *const [u16; 3],mut _6: isize,mut _7: isize,mut _8: isize,mut _9: *const [u16; 3],mut _10: [u128; 4],mut _11: [i128; 3]) -> isize {
mir! {
type RET = isize;
let _12: isize;
let _13: [u16; 3];
let _14: ((i8, u128, &'static bool), [char; 5]);
let _15: [u16; 3];
let _16: *const bool;
let _17: char;
let _18: u128;
let _19: bool;
let _20: u128;
let _21: u8;
let _22: *mut [char; 5];
let _23: (i8, usize);
let _24: Adt55;
let _25: Adt44;
let _26: Adt43;
let _27: Adt47;
let _28: i16;
let _29: (((i8, u128, &'static bool), [char; 5]),);
let _30: bool;
let _31: [u32; 7];
let _32: [isize; 4];
let _33: *mut *const [u16; 3];
let _34: f32;
let _35: u16;
let _36: bool;
let _37: *mut [char; 5];
let _38: isize;
let _39: i64;
let _40: u64;
let _41: [char; 5];
let _42: (usize,);
let _43: isize;
let _44: Adt56;
let _45: ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _46: i128;
let _47: *const [u16; 3];
let _48: u32;
let _49: ();
let _50: ();
{
_4 = !_1;
_8 = _6 * _4;
Goto(bb1)
}
bb1 = {
RET = _7;
_2 = !_7;
_14.0.0 = (-80_i8) >> _8;
_14.0.0 = '\u{9c392}' as i8;
_15 = [25980_u16,21911_u16,59556_u16];
_5 = core::ptr::addr_of!(_15);
_1 = _6;
_5 = _9;
_13 = [45281_u16,50551_u16,15517_u16];
_2 = 432813888_u32 as isize;
_14.1 = ['\u{34c94}','\u{d13a2}','\u{aa4c3}','\u{c264d}','\u{cbcd1}'];
_4 = 271586672067992847723574384036235657230_u128 as isize;
Goto(bb2)
}
bb2 = {
_14.0.1 = 134993334975681785749899292193847590249_u128 - 242463996122482324199390008728358613750_u128;
_12 = _8;
_16 = core::ptr::addr_of!(_19);
_11 = [(-132616397952829373306148972645138502065_i128),29557284837122016412042301784778638834_i128,24415846397934676056272177681559362388_i128];
_17 = '\u{87697}';
Goto(bb3)
}
bb3 = {
_14.0.2 = &(*_16);
(*_16) = _14.0.1 > _14.0.1;
_3 = _9;
_11 = [(-25952437513845974433078796182796697002_i128),124231967439026849926620826330179052961_i128,67729857259667870648167889377531097592_i128];
_14.0.2 = &(*_16);
_15 = [52220_u16,47694_u16,38246_u16];
_5 = _9;
_22 = core::ptr::addr_of_mut!(_14.1);
RET = _8;
_23.1 = 7_usize | 7908422398157856180_usize;
_25.fld3.0 = _22;
_23.0 = _14.0.0 | _14.0.0;
_21 = _14.0.0 as u8;
_16 = core::ptr::addr_of!((*_16));
_18 = !_14.0.1;
Call(_20 = core::intrinsics::transmute(_18), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_14.0.2 = &_19;
_25.fld5 = 1607231059_i32 >> _21;
_23 = (_14.0.0, 7_usize);
_22 = _25.fld3.0;
_20 = _14.0.1 - _18;
_4 = _17 as isize;
_24 = Adt55 { fld0: (*_16),fld1: 13788552232259720771015266096671520135_i128 };
_25.fld6.0 = _23.1 - _23.1;
_8 = _6;
_18 = _20;
_6 = (-21580_i16) as isize;
_29.0.0.0 = 23848_u16 as i8;
_29.0.1 = _14.1;
_25.fld1 = _18 as f32;
Goto(bb5)
}
bb5 = {
_15 = _13;
_29.0.0.1 = !_20;
_25.fld6 = (_23.1,);
_24.fld1 = (-80045994696705823255483920122922076043_i128) & 45424383088891134857059882880639706693_i128;
_25.fld7 = _25.fld6.0 as i128;
_25.fld3.2 = _3;
_1 = !_12;
_21 = 5_u8 & 83_u8;
_34 = _23.0 as f32;
_5 = core::ptr::addr_of!(_15);
_14.1 = _29.0.1;
_20 = !_29.0.0.1;
_4 = _8 * _12;
_25.fld2 = [1459318960_u32,1361676269_u32,3393451956_u32,1964668261_u32,2491277347_u32,637531035_u32,3039864038_u32];
match _23.1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
7 => bb12,
_ => bb11
}
}
bb6 = {
_14.0.2 = &_19;
_25.fld5 = 1607231059_i32 >> _21;
_23 = (_14.0.0, 7_usize);
_22 = _25.fld3.0;
_20 = _14.0.1 - _18;
_4 = _17 as isize;
_24 = Adt55 { fld0: (*_16),fld1: 13788552232259720771015266096671520135_i128 };
_25.fld6.0 = _23.1 - _23.1;
_8 = _6;
_18 = _20;
_6 = (-21580_i16) as isize;
_29.0.0.0 = 23848_u16 as i8;
_29.0.1 = _14.1;
_25.fld1 = _18 as f32;
Goto(bb5)
}
bb7 = {
_14.0.2 = &(*_16);
(*_16) = _14.0.1 > _14.0.1;
_3 = _9;
_11 = [(-25952437513845974433078796182796697002_i128),124231967439026849926620826330179052961_i128,67729857259667870648167889377531097592_i128];
_14.0.2 = &(*_16);
_15 = [52220_u16,47694_u16,38246_u16];
_5 = _9;
_22 = core::ptr::addr_of_mut!(_14.1);
RET = _8;
_23.1 = 7_usize | 7908422398157856180_usize;
_25.fld3.0 = _22;
_23.0 = _14.0.0 | _14.0.0;
_21 = _14.0.0 as u8;
_16 = core::ptr::addr_of!((*_16));
_18 = !_14.0.1;
Call(_20 = core::intrinsics::transmute(_18), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_14.0.1 = 134993334975681785749899292193847590249_u128 - 242463996122482324199390008728358613750_u128;
_12 = _8;
_16 = core::ptr::addr_of!(_19);
_11 = [(-132616397952829373306148972645138502065_i128),29557284837122016412042301784778638834_i128,24415846397934676056272177681559362388_i128];
_17 = '\u{87697}';
Goto(bb3)
}
bb9 = {
RET = _7;
_2 = !_7;
_14.0.0 = (-80_i8) >> _8;
_14.0.0 = '\u{9c392}' as i8;
_15 = [25980_u16,21911_u16,59556_u16];
_5 = core::ptr::addr_of!(_15);
_1 = _6;
_5 = _9;
_13 = [45281_u16,50551_u16,15517_u16];
_2 = 432813888_u32 as isize;
_14.1 = ['\u{34c94}','\u{d13a2}','\u{aa4c3}','\u{c264d}','\u{cbcd1}'];
_4 = 271586672067992847723574384036235657230_u128 as isize;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_26 = Adt43::Variant2 { fld0: (*_16),fld1: _25.fld5,fld2: _13,fld3: (-17103_i16) };
_14.0.1 = !_18;
_1 = _4 | _4;
_25.fld3.1 = [_24.fld1,_25.fld7,_25.fld7];
_15 = Field::<[u16; 3]>(Variant(_26, 2), 2);
_14.0.2 = &(*_16);
_16 = core::ptr::addr_of!(_24.fld0);
_24 = Adt55 { fld0: _19,fld1: _25.fld7 };
_24 = Adt55 { fld0: Field::<bool>(Variant(_26, 2), 0),fld1: _25.fld7 };
match _25.fld6.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
7 => bb18,
_ => bb17
}
}
bb13 = {
Return()
}
bb14 = {
_14.0.2 = &_19;
_25.fld5 = 1607231059_i32 >> _21;
_23 = (_14.0.0, 7_usize);
_22 = _25.fld3.0;
_20 = _14.0.1 - _18;
_4 = _17 as isize;
_24 = Adt55 { fld0: (*_16),fld1: 13788552232259720771015266096671520135_i128 };
_25.fld6.0 = _23.1 - _23.1;
_8 = _6;
_18 = _20;
_6 = (-21580_i16) as isize;
_29.0.0.0 = 23848_u16 as i8;
_29.0.1 = _14.1;
_25.fld1 = _18 as f32;
Goto(bb5)
}
bb15 = {
_14.0.2 = &_19;
_25.fld5 = 1607231059_i32 >> _21;
_23 = (_14.0.0, 7_usize);
_22 = _25.fld3.0;
_20 = _14.0.1 - _18;
_4 = _17 as isize;
_24 = Adt55 { fld0: (*_16),fld1: 13788552232259720771015266096671520135_i128 };
_25.fld6.0 = _23.1 - _23.1;
_8 = _6;
_18 = _20;
_6 = (-21580_i16) as isize;
_29.0.0.0 = 23848_u16 as i8;
_29.0.1 = _14.1;
_25.fld1 = _18 as f32;
Goto(bb5)
}
bb16 = {
_14.0.1 = 134993334975681785749899292193847590249_u128 - 242463996122482324199390008728358613750_u128;
_12 = _8;
_16 = core::ptr::addr_of!(_19);
_11 = [(-132616397952829373306148972645138502065_i128),29557284837122016412042301784778638834_i128,24415846397934676056272177681559362388_i128];
_17 = '\u{87697}';
Goto(bb3)
}
bb17 = {
_14.0.1 = 134993334975681785749899292193847590249_u128 - 242463996122482324199390008728358613750_u128;
_12 = _8;
_16 = core::ptr::addr_of!(_19);
_11 = [(-132616397952829373306148972645138502065_i128),29557284837122016412042301784778638834_i128,24415846397934676056272177681559362388_i128];
_17 = '\u{87697}';
Goto(bb3)
}
bb18 = {
_42 = _25.fld6;
_31 = [2422231978_u32,3661465783_u32,3409211691_u32,3858037103_u32,3877341967_u32,319997098_u32,2619141308_u32];
place!(Field::<i16>(Variant(_26, 2), 3)) = _42.0 as i16;
_42 = _25.fld6;
_39 = (-1791124445826072558_i64);
_29.0.1 = [_17,_17,_17,_17,_17];
_25.fld1 = _34 - _34;
_23 = (_14.0.0, _25.fld6.0);
_35 = !22427_u16;
_26 = Adt43::Variant2 { fld0: (*_16),fld1: _25.fld5,fld2: (*_5),fld3: 20613_i16 };
_42 = _25.fld6;
_9 = core::ptr::addr_of!((*_5));
_40 = 13500069018126354050_u64 & 8468927575013113482_u64;
_5 = core::ptr::addr_of!(_15);
_17 = '\u{44ba5}';
_28 = 13430_i16 & (-1258_i16);
Goto(bb19)
}
bb19 = {
Call(_49 = dump_var(16_usize, 20_usize, Move(_20), 21_usize, Move(_21), 40_usize, Move(_40), 28_usize, Move(_28)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_49 = dump_var(16_usize, 18_usize, Move(_18), 35_usize, Move(_35), 42_usize, Move(_42), 12_usize, Move(_12)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_49 = dump_var(16_usize, 19_usize, Move(_19), 10_usize, Move(_10), 13_usize, Move(_13), 50_usize, _50), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [i128; 3],mut _2: [u32; 7],mut _3: *const [u16; 3],mut _4: [i128; 3],mut _5: *mut *const [u16; 3],mut _6: *const bool,mut _7: *const bool,mut _8: *const bool,mut _9: *const bool,mut _10: [u16; 3],mut _11: *const [u16; 3],mut _12: *const bool,mut _13: *const bool) -> f32 {
mir! {
type RET = f32;
let _14: i64;
let _15: Adt46;
let _16: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize);
let _17: [u128; 4];
let _18: [u16; 3];
let _19: u128;
let _20: [u16; 3];
let _21: [u32; 7];
let _22: isize;
let _23: usize;
let _24: ();
let _25: ();
{
_11 = _3;
RET = (-62319121594764935465330069770402890380_i128) as f32;
_12 = _8;
RET = (-30816_i16) as f32;
_6 = _12;
_11 = _3;
_5 = core::ptr::addr_of_mut!(_11);
_11 = core::ptr::addr_of!(_10);
Goto(bb1)
}
bb1 = {
_14 = (-7814167753627206196_i64) >> 35073_u16;
_5 = core::ptr::addr_of_mut!(_3);
_6 = _8;
_8 = _7;
_7 = _13;
_6 = _9;
_13 = _7;
_11 = (*_5);
_8 = _13;
_16.0.4 = '\u{427a}';
_16.0.3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_3 = core::ptr::addr_of!(_10);
_14 = (-4357700750685351171_i64);
_16.0.1 = [49052_u16,27939_u16,19174_u16];
_16.0.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),22_isize,(-9223372036854775808_isize)];
_10 = [720_u16,24408_u16,51552_u16];
_2 = [1558774416_u32,760687391_u32,4210378862_u32,4254819195_u32,730972031_u32,2281369934_u32,2539393485_u32];
_16.0.2 = 14130295314053104229_u64 >> _14;
match _14 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463459016906681082860285 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_16.0.3 = [9223372036854775807_isize,49_isize,12_isize,(-9223372036854775808_isize)];
_10 = _16.0.1;
_16.0.3 = [9223372036854775807_isize,(-119_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9 = _12;
_4 = _1;
_9 = _12;
_16.1 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_2 = [1245152568_u32,1868579718_u32,3117401108_u32,2889122466_u32,183932481_u32,2876762040_u32,4250552771_u32];
_4 = [(-122034513699986963085495244614546082705_i128),112271711703085183624809341044233443627_i128,(-1153712181018076496434342446984934330_i128)];
_14 = -(-8816050654526932291_i64);
Goto(bb11)
}
bb11 = {
_7 = _8;
_16.0.0 = [_16.1,_16.1,_16.1,_16.1];
_16.0.0 = [_16.1,_16.1,_16.1,_16.1];
_16.0.4 = '\u{4885b}';
Goto(bb12)
}
bb12 = {
_18 = [64075_u16,37452_u16,42777_u16];
_18 = [27634_u16,51206_u16,64296_u16];
_16.0.4 = '\u{ea2dc}';
_13 = _6;
_17 = [15600623329897508145117362199146721277_u128,127692680870803705345716031445122100405_u128,187558667034523812481849032761278174778_u128,42541751874756916394315947938525043956_u128];
_12 = _13;
_19 = 1360420639_u32 as u128;
_9 = _7;
_11 = core::ptr::addr_of!(_10);
_1 = _4;
_16.0.4 = '\u{106df}';
_19 = 23575_i16 as u128;
_18 = [60187_u16,59593_u16,10847_u16];
_7 = _8;
_20 = [23954_u16,58958_u16,58232_u16];
_16.1 = 9223372036854775807_isize;
_7 = _6;
_12 = _8;
_13 = _12;
_8 = _6;
_16.0.1 = _18;
_16.0.0 = _16.0.3;
_2 = [3475302064_u32,2922279013_u32,1101599339_u32,152248549_u32,4283117269_u32,1654618663_u32,1598296540_u32];
match _16.1 {
0 => bb6,
1 => bb13,
2 => bb14,
3 => bb15,
9223372036854775807 => bb17,
_ => bb16
}
}
bb13 = {
_7 = _8;
_16.0.0 = [_16.1,_16.1,_16.1,_16.1];
_16.0.0 = [_16.1,_16.1,_16.1,_16.1];
_16.0.4 = '\u{4885b}';
Goto(bb12)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_7 = _13;
_3 = _11;
_20 = (*_11);
_16.0.3 = _16.0.0;
_5 = core::ptr::addr_of_mut!(_3);
_16.0.2 = 16273435747858135057_u64;
_9 = _8;
_3 = core::ptr::addr_of!((*_11));
_11 = _3;
RET = _19 as f32;
_3 = _11;
_10 = [53486_u16,41064_u16,40781_u16];
_6 = _13;
_8 = _7;
_11 = (*_5);
_16.0.2 = !16822915451640171065_u64;
_16.1 = _19 as isize;
_16.0.1 = _10;
_22 = RET as isize;
_8 = _13;
_17 = [_19,_19,_19,_19];
_17 = [_19,_19,_19,_19];
_1 = _4;
Goto(bb18)
}
bb18 = {
Call(_24 = dump_var(17_usize, 2_usize, Move(_2), 16_usize, Move(_16), 18_usize, Move(_18), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_24 = dump_var(17_usize, 17_usize, Move(_17), 25_usize, _25, 25_usize, _25, 25_usize, _25), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [isize; 4],mut _2: u128,mut _3: i8,mut _4: [isize; 4],mut _5: [isize; 4],mut _6: isize,mut _7: *const bool,mut _8: [char; 5]) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _9: *const (u8, i8, (i8, u128, &'static bool), char);
let _10: (i8, usize);
let _11: Adt47;
let _12: isize;
let _13: (usize,);
let _14: [u128; 4];
let _15: *const (u8, i8, (i8, u128, &'static bool), char);
let _16: bool;
let _17: bool;
let _18: u8;
let _19: bool;
let _20: ([isize; 4], [u16; 3], u64, [isize; 4], char);
let _21: f64;
let _22: [isize; 6];
let _23: [char; 5];
let _24: *mut i16;
let _25: (i8, usize);
let _26: (i8, usize);
let _27: ();
let _28: ();
{
_8 = ['\u{21de5}','\u{99760}','\u{f7e9c}','\u{9106b}','\u{bde5f}'];
RET = [133402467_u32,2933256655_u32,4183513934_u32,3770925958_u32,1032611431_u32,3887943552_u32,2193772410_u32];
_4 = _5;
_6 = !(-37_isize);
_5 = [_6,_6,_6,_6];
_8 = ['\u{a7c64}','\u{44769}','\u{1658b}','\u{fadf0}','\u{1d4f8}'];
Goto(bb1)
}
bb1 = {
_5 = [_6,_6,_6,_6];
_10.0 = _3;
_8 = ['\u{59f82}','\u{a2a15}','\u{41a39}','\u{52b79}','\u{f232b}'];
RET = [1585315539_u32,3214503046_u32,1780512195_u32,4003994317_u32,3623675267_u32,755399364_u32,3142483129_u32];
Goto(bb2)
}
bb2 = {
_10.1 = 5792653304315679889_usize >> _10.0;
_12 = _6 & _6;
RET = [1143974548_u32,4210138379_u32,1524531326_u32,2377519158_u32,352846696_u32,4225224026_u32,3658706574_u32];
_5 = [_12,_6,_12,_12];
_12 = 109_u8 as isize;
_2 = 169973100405954265463878361274943367370_u128;
Goto(bb3)
}
bb3 = {
match _2 {
0 => bb4,
1 => bb5,
2 => bb6,
169973100405954265463878361274943367370 => bb8,
_ => bb7
}
}
bb4 = {
_10.1 = 5792653304315679889_usize >> _10.0;
_12 = _6 & _6;
RET = [1143974548_u32,4210138379_u32,1524531326_u32,2377519158_u32,352846696_u32,4225224026_u32,3658706574_u32];
_5 = [_12,_6,_12,_12];
_12 = 109_u8 as isize;
_2 = 169973100405954265463878361274943367370_u128;
Goto(bb3)
}
bb5 = {
_5 = [_6,_6,_6,_6];
_10.0 = _3;
_8 = ['\u{59f82}','\u{a2a15}','\u{41a39}','\u{52b79}','\u{f232b}'];
RET = [1585315539_u32,3214503046_u32,1780512195_u32,4003994317_u32,3623675267_u32,755399364_u32,3142483129_u32];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_13 = (_10.1,);
_10.0 = _3;
_13.0 = _10.1;
_1 = [_6,_12,_12,_12];
RET = [4157614094_u32,2083662220_u32,2171167029_u32,3218298291_u32,3464833498_u32,3346060316_u32,211367556_u32];
_3 = !_10.0;
_14 = [_2,_2,_2,_2];
_6 = (-1936620227_i32) as isize;
_10.0 = !_3;
_6 = -_12;
_14 = [_2,_2,_2,_2];
RET = [3308154449_u32,3726637608_u32,1562848027_u32,1404236042_u32,4042271796_u32,709214297_u32,982896972_u32];
_10 = (_3, _13.0);
Goto(bb9)
}
bb9 = {
_13.0 = !_10.1;
Goto(bb10)
}
bb10 = {
_3 = !_10.0;
Goto(bb11)
}
bb11 = {
_18 = 3_u8;
_6 = !_12;
_17 = true;
_6 = _13.0 as isize;
_3 = _10.0 - _10.0;
_5 = _4;
_11 = Adt47::Variant0 { fld0: 1875439815_i32 };
_3 = !_10.0;
_10 = (_3, _13.0);
_13.0 = _6 as usize;
_14 = [_2,_2,_2,_2];
_17 = false ^ false;
Goto(bb12)
}
bb12 = {
_20.4 = '\u{485bf}';
_18 = !26_u8;
RET = [1879708023_u32,3385999024_u32,2081643561_u32,439857621_u32,477532143_u32,2055103065_u32,3254845786_u32];
_2 = !225149810288062938169599381921984743578_u128;
_20.1 = [27597_u16,31044_u16,45747_u16];
Goto(bb13)
}
bb13 = {
_11 = Adt47::Variant2 { fld0: _18,fld1: RET };
_5 = _4;
_20.3 = _4;
Goto(bb14)
}
bb14 = {
_20.1 = [3556_u16,37058_u16,49553_u16];
_20.2 = _3 as u64;
_3 = _10.0;
_16 = !_17;
_13 = (_10.1,);
_25.1 = _10.1;
_14 = [_2,_2,_2,_2];
_20.1 = [47659_u16,12554_u16,11341_u16];
_21 = _20.2 as f64;
SetDiscriminant(_11, 2);
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(18_usize, 10_usize, Move(_10), 12_usize, Move(_12), 1_usize, Move(_1), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(18_usize, 6_usize, Move(_6), 4_usize, Move(_4), 3_usize, Move(_3), 28_usize, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{714e7}'), std::hint::black_box(8_isize), std::hint::black_box(252589893588955907254502171425299314509_u128), std::hint::black_box(5111_i16), std::hint::black_box(1559534690_i32), std::hint::black_box(98110626963381666_i64), std::hint::black_box((-143569979917280104865400440348832097140_i128)), std::hint::black_box(5_usize), std::hint::black_box(124_u8), std::hint::black_box(7103007744330109398_u64));
                
            }
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),
fld1: (i8, usize),
fld2: i128,
fld3: [isize; 6],
fld4: i16,
fld5: [isize; 4],

},
Variant1{
fld0: u64,
fld1: *mut i16,
fld2: isize,
fld3: (usize,),
fld4: u128,
fld5: [u16; 3],
fld6: *const [u16; 3],

},
Variant2{
fld0: bool,
fld1: i32,
fld2: [u16; 3],
fld3: i16,

}}
#[derive(Debug)]
pub struct Adt44 {
fld0: u128,
fld1: f32,
fld2: [u32; 7],
fld3: (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld4: i16,
fld5: i32,
fld6: (usize,),
fld7: i128,
}
#[derive(Debug)]
pub struct Adt45 {
fld0: bool,
fld1: *const bool,
fld2: [isize; 6],
fld3: [u32; 7],
fld4: i16,
fld5: u32,
fld6: f32,
fld7: (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
}
#[derive(Debug,Copy,Clone)]
pub enum Adt46 {
Variant0{
fld0: [isize; 6],
fld1: u32,
fld2: *const bool,
fld3: *mut (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld4: [u128; 4],

},
Variant1{
fld0: *mut [char; 5],

},
Variant2{
fld0: bool,
fld1: char,
fld2: usize,
fld3: *const i32,
fld4: *mut [char; 5],
fld5: (usize,),
fld6: *const bool,
fld7: f64,

},
Variant3{
fld0: *mut *const [u16; 3],
fld1: *mut [char; 5],
fld2: [isize; 4],
fld3: u16,
fld4: [i128; 3],
fld5: [i16; 5],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt47 {
Variant0{
fld0: i32,

},
Variant1{
fld0: [i16; 5],
fld1: ([isize; 4], [u16; 3], u64, [isize; 4], char),

},
Variant2{
fld0: u8,
fld1: [u32; 7],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: (usize,),
fld1: [u32; 7],
fld2: Adt46,

},
Variant1{
fld0: bool,
fld1: (i8, usize),
fld2: i128,
fld3: f32,
fld4: *const bool,
fld5: i32,
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: bool,
fld1: char,
fld2: i64,
fld3: i8,
fld4: i128,
fld5: [isize; 4],

},
Variant1{
fld0: Adt45,
fld1: [isize; 4],
fld2: *mut (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld3: Adt46,
fld4: i16,
fld5: ([isize; 4], [u16; 3], u64, [isize; 4], char),
fld6: [u128; 4],
fld7: usize,

},
Variant2{
fld0: Adt44,
fld1: *const [u16; 3],
fld2: (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld3: *mut *const [u16; 3],
fld4: [u16; 3],
fld5: [i128; 3],

},
Variant3{
fld0: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),
fld1: Adt44,
fld2: [i128; 3],
fld3: i8,
fld4: [u32; 7],
fld5: Adt48,
fld6: i64,

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: *mut i16,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [i16; 5],
fld1: char,
fld2: Adt43,
fld3: u64,
fld4: i16,
fld5: *mut (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld6: f32,

},
Variant1{
fld0: Adt46,
fld1: [char; 5],
fld2: u64,
fld3: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),
fld4: (i8, usize),
fld5: f32,
fld6: u8,
fld7: [isize; 6],

},
Variant2{
fld0: Adt48,
fld1: *mut i16,
fld2: f64,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: [char; 5],
fld1: Adt46,
fld2: *const [u16; 3],
fld3: [u16; 3],
fld4: f64,

},
Variant1{
fld0: bool,
fld1: ([isize; 4], [u16; 3], u64, [isize; 4], char),
fld2: Adt51,
fld3: Adt50,
fld4: [isize; 6],
fld5: u128,
fld6: f32,

},
Variant2{
fld0: f64,
fld1: Adt45,
fld2: *mut [char; 5],
fld3: Adt47,
fld4: i16,
fld5: Adt43,
fld6: Adt44,
fld7: Adt48,

},
Variant3{
fld0: bool,
fld1: char,
fld2: isize,
fld3: ([isize; 4], [u16; 3], u64, [isize; 4], char),
fld4: *mut (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld5: i32,
fld6: (usize,),
fld7: [i128; 3],

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: Adt50,
fld1: (i8, usize),
fld2: *const bool,

},
Variant1{
fld0: Adt51,
fld1: f64,
fld2: i16,
fld3: [i16; 5],

},
Variant2{
fld0: [isize; 4],

},
Variant3{
fld0: ([isize; 4], [u16; 3], u64, [isize; 4], char),
fld1: [i16; 5],
fld2: [u16; 3],
fld3: Adt46,
fld4: i16,
fld5: [char; 5],
fld6: Adt43,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt49,
fld1: usize,
fld2: [i16; 5],
fld3: i8,
fld4: [u16; 3],

},
Variant1{
fld0: bool,
fld1: [u16; 3],
fld2: u16,
fld3: f32,
fld4: *const i32,

},
Variant2{
fld0: f32,
fld1: *const bool,
fld2: (([isize; 4], [u16; 3], u64, [isize; 4], char), isize),
fld3: i8,
fld4: f64,
fld5: Adt46,
fld6: Adt50,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: bool,
fld1: i128,
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *mut *const [u16; 3],
fld1: Adt53,
fld2: *const [u16; 3],

},
Variant1{
fld0: Adt52,
fld1: i32,
fld2: isize,

},
Variant2{
fld0: *mut [char; 5],
fld1: Adt54,
fld2: u64,
fld3: u8,
fld4: f32,
fld5: Adt49,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: [u128; 4],
fld1: u128,
fld2: Adt44,
fld3: [u32; 7],
fld4: Adt50,
fld5: i32,

},
Variant1{
fld0: [i128; 3],
fld1: Adt51,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: i32,
fld1: *const bool,
fld2: [i128; 3],

},
Variant1{
fld0: u128,
fld1: Adt43,
fld2: (i8, usize),

},
Variant2{
fld0: Adt44,
fld1: *mut *const [u16; 3],
fld2: *mut i16,
fld3: [i16; 5],
fld4: *mut (*mut [char; 5], [i128; 3], *const [u16; 3], i32),
fld5: Adt57,
fld6: f32,

},
Variant3{
fld0: Adt45,
fld1: [isize; 4],
fld2: Adt43,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: Adt52,
fld1: u128,
fld2: [i16; 5],
fld3: i8,
fld4: u64,
fld5: u32,

},
Variant1{
fld0: Adt43,
fld1: *mut *const [u16; 3],

}}

