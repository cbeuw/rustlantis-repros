#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u64,mut _2: i128) -> isize {
mir! {
type RET = isize;
let _3: *mut *mut (f64, u16);
let _4: char;
let _5: [isize; 3];
let _6: (*const u8, [i64; 5]);
let _7: *mut (f64, u16);
let _8: usize;
let _9: u8;
let _10: [u64; 7];
let _11: [u128; 5];
let _12: *const *const u8;
let _13: *const *const u8;
let _14: (u128, i32);
let _15: (f64, u16);
let _16: *const [u64; 7];
let _17: isize;
let _18: isize;
let _19: *const *const [u64; 7];
let _20: (u128, i32);
let _21: bool;
let _22: [i32; 4];
let _23: i32;
let _24: Adt63;
let _25: *const bool;
let _26: *const [u64; 7];
let _27: ();
let _28: ();
{
RET = (-82_isize) & 9223372036854775807_isize;
RET = !107_isize;
_1 = 3854053901306017591_u64;
_2 = 6722448841721079274_usize as i128;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3854053901306017591 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
RET = 68_isize >> _1;
_1 = 10249114569840456142_u64 * 17313995392028257759_u64;
_2 = 29_u8 as i128;
_2 = (-106527491359699804475856223930691022418_i128) << _1;
RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
RET = 131_u8 as isize;
_2 = !55237633392325615821383563366998591489_i128;
RET = (-9223372036854775808_isize);
_2 = 17227595606612832677572651570782355660_i128 + (-77336976436443619936717609433547904155_i128);
RET = (-79_isize) >> _1;
_1 = 16142961230518641226_u64 << _2;
_2 = 1834_i16 as i128;
_2 = (-4925530679877308940981154484788695902_i128);
RET = 9223372036854775807_isize;
_2 = 6121779010248595129_i64 as i128;
_2 = 1580696853_i32 as i128;
_1 = 2998876412212037425_u64 % 4702582460999481699_u64;
_5 = [91_isize,(-9223372036854775808_isize),56_isize];
_1 = 6013042401503035602_u64;
_2 = (-38448696948987464583940276036578132948_i128) - (-71882481380587789217273936164229359516_i128);
RET = -(-9223372036854775808_isize);
Call(_5 = fn1(_1, _1, _1, _1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_1 = 13074891234796137915_u64;
_3 = core::ptr::addr_of_mut!(_7);
_6.1 = [5634089927673090813_i64,4200398836366549794_i64,3075799691619346906_i64,5335725024506399259_i64,(-627543303605554159_i64)];
_1 = _2 as u64;
_4 = '\u{7ca65}';
RET = 120_isize;
_8 = !16337520542888222518_usize;
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = 10103713669847040584_u64;
RET = -15_isize;
_4 = '\u{dbe80}';
_5 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = core::ptr::addr_of_mut!(_7);
match _1 {
0 => bb4,
1 => bb5,
10103713669847040584 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_6.0 = core::ptr::addr_of!(_9);
_11 = [281358807773110425753546295538804214514_u128,307773412490189184028252809557594724095_u128,34813968876226526782222763617910241634_u128,197723464432120186950124590695448738644_u128,224464511195519641896536196414868442506_u128];
_8 = 14133197674775936259_usize * 1_usize;
_1 = 8450344708201014918_u64 % 15384890622637316460_u64;
_4 = '\u{940b4}';
_12 = core::ptr::addr_of!(_6.0);
(*_12) = core::ptr::addr_of!(_9);
_14 = (156229414025636025264384832476856202664_u128, (-567636705_i32));
_9 = 69_u8 | 241_u8;
_15.1 = 9428_u16 + 55656_u16;
match _14.0 {
0 => bb1,
1 => bb3,
2 => bb9,
156229414025636025264384832476856202664 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_6.0 = core::ptr::addr_of!(_9);
_4 = '\u{ccd8f}';
_6.1 = [7122206627963286126_i64,(-5236996125068187848_i64),1944857650759448368_i64,4856925370170381068_i64,5460260941220932357_i64];
RET = _2 as isize;
_12 = core::ptr::addr_of!((*_12));
(*_12) = core::ptr::addr_of!(_9);
_9 = 139_u8 & 140_u8;
RET = -(-9223372036854775808_isize);
_8 = 0_usize;
_13 = _12;
_15.0 = _2 as f64;
Goto(bb12)
}
bb12 = {
_14.1 = (-22670_i16) as i32;
(*_13) = core::ptr::addr_of!(_9);
_14.0 = !_11[_8];
_10 = [_1,_1,_1,_1,_1,_1,_1];
_15.0 = _9 as f64;
Goto(bb13)
}
bb13 = {
_5 = [9223372036854775807_isize,9_isize,(-9223372036854775808_isize)];
_6.0 = core::ptr::addr_of!(_9);
_14 = (_11[_8], 1151333900_i32);
_13 = core::ptr::addr_of!((*_12));
_12 = _13;
(*_3) = core::ptr::addr_of_mut!(_15);
_6.0 = core::ptr::addr_of!(_9);
_6.1[_8] = 1339063677744384357_i64 ^ 6667424136536021683_i64;
_5 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_4 = '\u{af617}';
match _14.1 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
1151333900 => bb21,
_ => bb20
}
}
bb14 = {
_14.1 = (-22670_i16) as i32;
(*_13) = core::ptr::addr_of!(_9);
_14.0 = !_11[_8];
_10 = [_1,_1,_1,_1,_1,_1,_1];
_15.0 = _9 as f64;
Goto(bb13)
}
bb15 = {
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_6.0 = core::ptr::addr_of!(_9);
_4 = '\u{ccd8f}';
_6.1 = [7122206627963286126_i64,(-5236996125068187848_i64),1944857650759448368_i64,4856925370170381068_i64,5460260941220932357_i64];
RET = _2 as isize;
_12 = core::ptr::addr_of!((*_12));
(*_12) = core::ptr::addr_of!(_9);
_9 = 139_u8 & 140_u8;
RET = -(-9223372036854775808_isize);
_8 = 0_usize;
_13 = _12;
_15.0 = _2 as f64;
Goto(bb12)
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
_1 = 13074891234796137915_u64;
_3 = core::ptr::addr_of_mut!(_7);
_6.1 = [5634089927673090813_i64,4200398836366549794_i64,3075799691619346906_i64,5335725024506399259_i64,(-627543303605554159_i64)];
_1 = _2 as u64;
_4 = '\u{7ca65}';
RET = 120_isize;
_8 = !16337520542888222518_usize;
_5 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = 10103713669847040584_u64;
RET = -15_isize;
_4 = '\u{dbe80}';
_5 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = core::ptr::addr_of_mut!(_7);
match _1 {
0 => bb4,
1 => bb5,
10103713669847040584 => bb8,
_ => bb7
}
}
bb21 = {
_14 = (_11[_8], (-1692958285_i32));
RET = _5[_8];
_12 = core::ptr::addr_of!((*_12));
(*_3) = core::ptr::addr_of_mut!((*_7));
(*_3) = core::ptr::addr_of_mut!((*_7));
_12 = _13;
_13 = _12;
_13 = _12;
_5[_8] = (-9223372036854775808_isize);
_5[_8] = (-9223372036854775808_isize);
_20.1 = _5[_8] as i32;
_14.1 = _20.1 | _20.1;
(*_12) = core::ptr::addr_of!(_9);
(*_12) = core::ptr::addr_of!(_9);
(*_7).0 = 390461793_u32 as f64;
(*_7).1 = 45721_u16 + 62271_u16;
_10[_8] = !_1;
(*_7).1 = (-36_i8) as u16;
_20 = (_14.0, _14.1);
_6.0 = core::ptr::addr_of!(_9);
Goto(bb22)
}
bb22 = {
Call(_27 = dump_var(0_usize, 8_usize, Move(_8), 5_usize, Move(_5), 20_usize, Move(_20), 4_usize, Move(_4)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_27 = dump_var(0_usize, 1_usize, Move(_1), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u64,mut _2: u64,mut _3: u64,mut _4: u64) -> [isize; 3] {
mir! {
type RET = [isize; 3];
let _5: (u128, i32);
let _6: *const *const u8;
let _7: f32;
let _8: bool;
let _9: f32;
let _10: i64;
let _11: (f64, usize, [u32; 7]);
let _12: ((u128, i32), bool, i16);
let _13: [isize; 3];
let _14: ([u64; 7],);
let _15: [u128; 5];
let _16: Adt53;
let _17: f32;
let _18: [i64; 5];
let _19: bool;
let _20: f32;
let _21: Adt50;
let _22: i32;
let _23: (u128, i32);
let _24: i32;
let _25: [u128; 1];
let _26: [u128; 5];
let _27: u32;
let _28: isize;
let _29: [u64; 7];
let _30: u8;
let _31: char;
let _32: f64;
let _33: i64;
let _34: ([u64; 7],);
let _35: *mut (f64, u16);
let _36: isize;
let _37: *mut u64;
let _38: f32;
let _39: char;
let _40: char;
let _41: i128;
let _42: *const (f64, u16);
let _43: u32;
let _44: i32;
let _45: *const *const [u64; 7];
let _46: *const *const [u64; 7];
let _47: char;
let _48: Adt51;
let _49: ();
let _50: ();
{
_3 = _2;
RET = [(-9223372036854775808_isize),(-94_isize),(-9223372036854775808_isize)];
_2 = _4;
RET = [(-125_isize),9223372036854775807_isize,9223372036854775807_isize];
_1 = _3;
_1 = !_2;
_2 = 85_isize as u64;
RET = [(-43_isize),(-47_isize),(-9223372036854775808_isize)];
_5 = (173880953742831950146166860933867776052_u128, 587624658_i32);
_4 = !_2;
Call(_1 = core::intrinsics::bswap(_3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5.1 = (-606644777_i32) + 1883258681_i32;
_3 = 3104886597234308946_usize as u64;
_3 = (-69090040194374360952686718584385948676_i128) as u64;
_7 = _2 as f32;
_1 = _4 ^ _4;
_7 = 118_isize as f32;
_5.1 = -1729523276_i32;
_2 = _3;
_2 = !_1;
_5.0 = !148487318098231119001262937584667755548_u128;
_2 = 58312_u16 as u64;
_2 = !_1;
RET = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_11.0 = 2431455017_u32 as f64;
_8 = false;
_8 = _1 == _1;
_5 = (16842832737916462457371721536957476108_u128, 1921505823_i32);
_9 = -_7;
_5 = (137524220720140746643842023272593679569_u128, 2130365721_i32);
_3 = _2;
Goto(bb2)
}
bb2 = {
_10 = _8 as i64;
RET = [(-9223372036854775808_isize),9223372036854775807_isize,(-52_isize)];
_8 = false;
_10 = (-8387227795214400456_i64);
Call(_11 = fn2(_5.1, _5.1, _5, _10, _5.1, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = _11.1 as u64;
RET = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_8 = _7 > _9;
_12 = (_5, _8, (-32563_i16));
_2 = _1 ^ _1;
_5.1 = _12.0.1;
_12.0.0 = _5.0;
_3 = _12.2 as u64;
_5.1 = _12.0.1;
_7 = _9 * _9;
_12.2 = !11912_i16;
_9 = (-58_i8) as f32;
_12.0.1 = _5.1;
_11.0 = _11.1 as f64;
match _12.0.0 {
0 => bb1,
137524220720140746643842023272593679569 => bb4,
_ => bb2
}
}
bb4 = {
_12.2 = (-26658_i16);
_10 = -(-5308588705863739495_i64);
_11.2 = [126065197_u32,3017622111_u32,1003314964_u32,1742117134_u32,3144001015_u32,2356967798_u32,3286626553_u32];
_5.0 = _12.0.0;
_12.0.0 = _5.0;
_12.0 = (_5.0, _5.1);
_10 = -9016837690528004416_i64;
_14.0 = [_3,_3,_3,_3,_3,_3,_3];
_1 = 2863662632_u32 as u64;
_15 = [_5.0,_12.0.0,_5.0,_12.0.0,_12.0.0];
_5.1 = !_12.0.1;
_11.0 = 42301_u16 as f64;
_12.1 = _8 ^ _8;
_11.0 = _3 as f64;
_15 = [_5.0,_5.0,_12.0.0,_12.0.0,_5.0];
_12 = (_5, _8, 11585_i16);
_4 = 1613_u16 as u64;
_16.fld0 = (_5.0, _5.1);
_16.fld2 = [_5.0,_12.0.0,_5.0,_12.0.0,_16.fld0.0];
match _12.2 {
11585 => bb5,
_ => bb2
}
}
bb5 = {
_12.2 = (-20248_i16) + 30515_i16;
_12 = (_5, _8, 9880_i16);
_8 = _9 >= _9;
_11.2 = [3042973958_u32,1341064322_u32,1156786350_u32,3845552883_u32,1031812659_u32,316244656_u32,2066702331_u32];
_16.fld2 = [_5.0,_5.0,_16.fld0.0,_16.fld0.0,_5.0];
_17 = _7 / 1_f32;
_5 = (_12.0.0, _12.0.1);
_8 = _5.1 != _16.fld0.1;
_12.0 = _16.fld0;
_12 = (_5, _8, 27969_i16);
_5.0 = _12.0.0;
_5.1 = _12.0.1 & _16.fld0.1;
RET = [27_isize,(-126_isize),105_isize];
_5.1 = _9 as i32;
_4 = _2;
_3 = _2 * _4;
_12.0.1 = !_5.1;
_16.fld1 = core::ptr::addr_of!(_14.0);
_16.fld1 = core::ptr::addr_of!(_14.0);
_19 = _4 >= _4;
_12.0.1 = 4679_u16 as i32;
_20 = 202_u8 as f32;
_17 = _7;
_12.0 = (_16.fld0.0, _16.fld0.1);
_11.0 = _12.2 as f64;
_14.0 = [_2,_4,_2,_4,_3,_2,_2];
_5 = (_12.0.0, _16.fld0.1);
Call(_21 = fn3(_2, _16.fld1, _12.1, _16, _12.0.1, _19, _16, _3, _7, _14, _11, _9, _12.1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_2 = !_3;
_4 = _2;
_14.0 = [_3,_2,_3,_3,_4,_3,_3];
_7 = _20 - _20;
_1 = _2;
_14.0 = [_2,_2,_4,_4,_4,_2,_4];
_21.fld3 = [_16.fld0.0];
_5.0 = !_12.0.0;
_17 = _9;
_23.1 = '\u{23cd7}' as i32;
_23.0 = 224_u8 as u128;
_4 = _2 + _3;
_12.2 = !17928_i16;
_7 = -_9;
_23.0 = _10 as u128;
_11.1 = !6_usize;
_11.0 = _10 as f64;
_6 = core::ptr::addr_of!(_21.fld1);
_23.0 = !_12.0.0;
_23 = _5;
Goto(bb7)
}
bb7 = {
RET = [(-9223372036854775808_isize),117_isize,(-9223372036854775808_isize)];
_16.fld2 = _15;
_11.2 = [3324564788_u32,2744785552_u32,2808691457_u32,1602285826_u32,309790646_u32,4075343545_u32,358050936_u32];
_20 = _9;
_4 = 6_u8 as u64;
_13 = [9223372036854775807_isize,(-128_isize),(-9223372036854775808_isize)];
_18 = [_10,_10,_10,_10,_10];
Call(_27 = core::intrinsics::transmute(_16.fld0.1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
Goto(bb9)
}
bb9 = {
_12 = (_16.fld0, _19, (-31467_i16));
_12 = (_16.fld0, _8, (-15092_i16));
_12.0.1 = !_16.fld0.1;
_24 = _16.fld0.1 - _5.1;
_23.0 = _16.fld0.0 / 308512390249832773493495815780638349243_u128;
_23.1 = -_24;
_25 = [_23.0];
_2 = _1;
RET = _13;
_21.fld3 = [_12.0.0];
_11.2 = [_27,_27,_27,_27,_27,_27,_27];
_23.0 = !_12.0.0;
_24 = _23.1 & _23.1;
_26 = _15;
_13 = [(-9223372036854775808_isize),(-67_isize),9223372036854775807_isize];
match _12.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463463374607431768196364 => bb10,
_ => bb8
}
}
bb10 = {
RET = _13;
_17 = -_7;
_5.0 = _23.0 / 172379321855098831815719535308865581073_u128;
_5 = _23;
_30 = _12.0.0 as u8;
_22 = _24;
_12.0.0 = _16.fld0.0;
_1 = 60541068561100905225425644956847920133_i128 as u64;
_11.2 = [_27,_27,_27,_27,_27,_27,_27];
_23.0 = !_16.fld0.0;
_4 = _2 - _2;
_5.0 = _16.fld0.0 ^ _23.0;
_17 = _7;
_29 = [_4,_2,_4,_3,_4,_2,_4];
_12.0.1 = _11.1 as i32;
_5 = (_12.0.0, _22);
_19 = _12.1;
_33 = _10;
_25 = _21.fld3;
_10 = _23.0 as i64;
_11.0 = (-62_isize) as f64;
Goto(bb11)
}
bb11 = {
_3 = _24 as u64;
_16.fld0 = _23;
match _12.2 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
6 => bb7,
340282366920938463463374607431768196364 => bb13,
_ => bb12
}
}
bb12 = {
RET = [(-9223372036854775808_isize),117_isize,(-9223372036854775808_isize)];
_16.fld2 = _15;
_11.2 = [3324564788_u32,2744785552_u32,2808691457_u32,1602285826_u32,309790646_u32,4075343545_u32,358050936_u32];
_20 = _9;
_4 = 6_u8 as u64;
_13 = [9223372036854775807_isize,(-128_isize),(-9223372036854775808_isize)];
_18 = [_10,_10,_10,_10,_10];
Call(_27 = core::intrinsics::transmute(_16.fld0.1), ReturnTo(bb8), UnwindUnreachable())
}
bb13 = {
_12.0 = (_23.0, _5.1);
_21.fld1 = core::ptr::addr_of!(_30);
_19 = !_8;
_23.0 = !_12.0.0;
_21.fld1 = core::ptr::addr_of!(_30);
_34.0 = [_4,_1,_4,_2,_3,_2,_2];
_11.0 = _22 as f64;
_23 = (_5.0, _24);
_12 = (_16.fld0, _8, 3513_i16);
_2 = _4 * _4;
_6 = core::ptr::addr_of!(_21.fld1);
_29 = [_2,_1,_2,_4,_4,_2,_3];
_11.2 = [_27,_27,_27,_27,_27,_27,_27];
_39 = '\u{d39e8}';
_29 = [_2,_4,_2,_2,_2,_2,_4];
_16.fld0.0 = _7 as u128;
_6 = core::ptr::addr_of!((*_6));
_31 = _39;
_16.fld0.0 = !_5.0;
Call(_23.0 = core::intrinsics::bswap(_16.fld0.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_34.0 = [_3,_4,_2,_4,_2,_2,_3];
_36 = 9223372036854775807_isize;
_16.fld1 = core::ptr::addr_of!(_29);
_33 = -_10;
_5 = (_23.0, _12.0.1);
_38 = _12.0.0 as f32;
_40 = _31;
_12.0 = (_5.0, _22);
_11.0 = _11.1 as f64;
_31 = _39;
RET = _13;
_11.2 = [_27,_27,_27,_27,_27,_27,_27];
_22 = !_23.1;
_15 = [_16.fld0.0,_5.0,_12.0.0,_16.fld0.0,_12.0.0];
_16.fld2 = _26;
(*_6) = core::ptr::addr_of!(_30);
_19 = _5.1 > _16.fld0.1;
_12 = (_23, _8, (-27553_i16));
_16.fld1 = core::ptr::addr_of!(_29);
_28 = -_36;
_23.0 = _5.0 % 132116433389788627916018676261978883307_u128;
_27 = 1093106590_u32;
_37 = core::ptr::addr_of_mut!(_1);
_8 = !_12.1;
_47 = _40;
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(1_usize, 23_usize, Move(_23), 29_usize, Move(_29), 8_usize, Move(_8), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(1_usize, 14_usize, Move(_14), 40_usize, Move(_40), 18_usize, Move(_18), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(1_usize, 47_usize, Move(_47), 36_usize, Move(_36), 33_usize, Move(_33), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(1_usize, 27_usize, Move(_27), 5_usize, Move(_5), 50_usize, _50, 50_usize, _50), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: i32,mut _2: i32,mut _3: (u128, i32),mut _4: i64,mut _5: i32,mut _6: u64) -> (f64, usize, [u32; 7]) {
mir! {
type RET = (f64, usize, [u32; 7]);
let _7: char;
let _8: Adt61;
let _9: i64;
let _10: Adt63;
let _11: u8;
let _12: u16;
let _13: i64;
let _14: u32;
let _15: u128;
let _16: bool;
let _17: f32;
let _18: u64;
let _19: [i32; 4];
let _20: bool;
let _21: ();
let _22: ();
{
RET.0 = 77_u8 as f64;
RET.0 = _6 as f64;
RET.2 = [3739231467_u32,3139408763_u32,3487388084_u32,3742531769_u32,853847802_u32,4256349930_u32,2231200231_u32];
_4 = _6 as i64;
_1 = _5 * _2;
RET.0 = _4 as f64;
RET.1 = !374627215296779331_usize;
RET.2 = [226484264_u32,1586768677_u32,3656937310_u32,3345680691_u32,338682576_u32,3643534101_u32,810869440_u32];
_6 = !3789100668546752117_u64;
RET.2 = [3041795997_u32,4057129072_u32,4058745306_u32,3411904193_u32,3451894153_u32,3692696094_u32,3907865891_u32];
_2 = _3.1;
_6 = !16835568212262525646_u64;
RET.2 = [3623965679_u32,4204348376_u32,317538080_u32,3552535605_u32,706386643_u32,1628343385_u32,4241441055_u32];
Goto(bb1)
}
bb1 = {
RET.0 = 160938662147523619297971915823065467004_i128 as f64;
RET.0 = 5_usize as f64;
_8.fld0.fld6.fld2 = _6;
_8.fld1 = '\u{35940}';
RET.1 = !14852892356476655439_usize;
RET.2 = [294576432_u32,3446873777_u32,1642850629_u32,416709004_u32,56861862_u32,4209019617_u32,1783542050_u32];
match _3.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
2130365721 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_7 = _8.fld1;
RET.2 = [3779540881_u32,2456777158_u32,3837086340_u32,460148196_u32,109346592_u32,3870034878_u32,2382094130_u32];
_8.fld0.fld1 = (-2921_i16) as i128;
_8.fld2.fld4.fld0.1 = _1;
_3.1 = !_1;
_8.fld0.fld1 = (-119708637182295190781106283084369168897_i128);
_7 = _8.fld1;
_8.fld2.fld4.fld0.0 = _3.0 << _3.1;
RET.1 = 6_usize >> _8.fld2.fld4.fld0.1;
_8.fld1 = _7;
_8.fld0.fld4 = core::ptr::addr_of!(_8.fld2.fld4.fld1);
_12 = _8.fld2.fld4.fld0.0 as u16;
_8.fld2.fld1.fld2 = core::ptr::addr_of!(_8.fld0.fld3);
_8.fld2.fld4.fld0 = _3;
_8.fld0.fld5 = _8.fld0.fld6.fld2 | _6;
RET.1 = _3.1 as usize;
_8.fld2.fld0.0 = _8.fld2.fld4.fld0.0;
_3.1 = _2 * _2;
_8.fld3 = 3001524927_u32;
_8.fld0.fld4 = core::ptr::addr_of!(_8.fld2.fld4.fld1);
RET.2 = [_8.fld3,_8.fld3,_8.fld3,_8.fld3,_8.fld3,_8.fld3,_8.fld3];
_3 = (_8.fld2.fld0.0, _1);
Goto(bb8)
}
bb8 = {
_8.fld1 = _7;
_2 = _8.fld2.fld4.fld0.1 - _5;
_13 = -_4;
RET.0 = 58_i8 as f64;
_8.fld0.fld3 = [_3.0,_3.0,_8.fld2.fld0.0,_8.fld2.fld0.0];
_8.fld2.fld4.fld2 = [_8.fld2.fld0.0,_8.fld2.fld0.0,_8.fld2.fld0.0,_8.fld2.fld4.fld0.0,_8.fld2.fld0.0];
_15 = _3.0 | _8.fld2.fld4.fld0.0;
_8.fld0.fld4 = core::ptr::addr_of!(_8.fld2.fld4.fld1);
_8.fld2.fld3.0 = [_8.fld0.fld5,_8.fld0.fld6.fld2,_8.fld0.fld6.fld2,_8.fld0.fld5,_8.fld0.fld6.fld2,_8.fld0.fld6.fld2,_8.fld0.fld5];
_8.fld0.fld6.fld1 = 169_u8 as i8;
_14 = _8.fld3 / 1157272801_u32;
_18 = _8.fld3 as u64;
RET.1 = !5_usize;
_8.fld2.fld0.1 = _4 as i32;
_8.fld2.fld3.0 = [_8.fld0.fld6.fld2,_8.fld0.fld6.fld2,_8.fld0.fld5,_8.fld0.fld5,_8.fld0.fld6.fld2,_8.fld0.fld5,_8.fld0.fld5];
match _3.0 {
0 => bb6,
1 => bb2,
2 => bb4,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
137524220720140746643842023272593679569 => bb14,
_ => bb13
}
}
bb9 = {
_7 = _8.fld1;
RET.2 = [3779540881_u32,2456777158_u32,3837086340_u32,460148196_u32,109346592_u32,3870034878_u32,2382094130_u32];
_8.fld0.fld1 = (-2921_i16) as i128;
_8.fld2.fld4.fld0.1 = _1;
_3.1 = !_1;
_8.fld0.fld1 = (-119708637182295190781106283084369168897_i128);
_7 = _8.fld1;
_8.fld2.fld4.fld0.0 = _3.0 << _3.1;
RET.1 = 6_usize >> _8.fld2.fld4.fld0.1;
_8.fld1 = _7;
_8.fld0.fld4 = core::ptr::addr_of!(_8.fld2.fld4.fld1);
_12 = _8.fld2.fld4.fld0.0 as u16;
_8.fld2.fld1.fld2 = core::ptr::addr_of!(_8.fld0.fld3);
_8.fld2.fld4.fld0 = _3;
_8.fld0.fld5 = _8.fld0.fld6.fld2 | _6;
RET.1 = _3.1 as usize;
_8.fld2.fld0.0 = _8.fld2.fld4.fld0.0;
_3.1 = _2 * _2;
_8.fld3 = 3001524927_u32;
_8.fld0.fld4 = core::ptr::addr_of!(_8.fld2.fld4.fld1);
RET.2 = [_8.fld3,_8.fld3,_8.fld3,_8.fld3,_8.fld3,_8.fld3,_8.fld3];
_3 = (_8.fld2.fld0.0, _1);
Goto(bb8)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_2 = (-34_isize) as i32;
_4 = true as i64;
_8.fld2.fld0.0 = !_15;
_8.fld2.fld4.fld0 = (_8.fld2.fld0.0, _3.1);
_8.fld0.fld6.fld1 = (-108_i8);
_8.fld0.fld3 = [_8.fld2.fld4.fld0.0,_8.fld2.fld0.0,_8.fld2.fld4.fld0.0,_15];
_8.fld0.fld3 = [_8.fld2.fld0.0,_15,_8.fld2.fld0.0,_15];
_2 = _8.fld2.fld4.fld0.1 - _8.fld2.fld4.fld0.1;
_19 = [_8.fld2.fld0.1,_2,_8.fld2.fld4.fld0.1,_8.fld2.fld0.1];
Goto(bb15)
}
bb15 = {
Call(_21 = dump_var(2_usize, 19_usize, Move(_19), 18_usize, Move(_18), 4_usize, Move(_4), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_21 = dump_var(2_usize, 14_usize, Move(_14), 15_usize, Move(_15), 22_usize, _22, 22_usize, _22), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: u64,mut _2: *const [u64; 7],mut _3: bool,mut _4: Adt53,mut _5: i32,mut _6: bool,mut _7: Adt53,mut _8: u64,mut _9: f32,mut _10: ([u64; 7],),mut _11: (f64, usize, [u32; 7]),mut _12: f32,mut _13: bool) -> Adt50 {
mir! {
type RET = Adt50;
let _14: [u64; 2];
let _15: Adt63;
let _16: i8;
let _17: ((u128, i32), u128);
let _18: i64;
let _19: f64;
let _20: u16;
let _21: [i32; 4];
let _22: *mut [u64; 2];
let _23: [u128; 4];
let _24: i32;
let _25: i64;
let _26: f32;
let _27: *const bool;
let _28: char;
let _29: [u128; 5];
let _30: isize;
let _31: *const *const u8;
let _32: ([u64; 7],);
let _33: u32;
let _34: Adt59;
let _35: isize;
let _36: *const *const u8;
let _37: i32;
let _38: [i32; 4];
let _39: [u32; 7];
let _40: f64;
let _41: [u128; 4];
let _42: [isize; 3];
let _43: char;
let _44: char;
let _45: isize;
let _46: f32;
let _47: Adt50;
let _48: bool;
let _49: f64;
let _50: i32;
let _51: f64;
let _52: isize;
let _53: i128;
let _54: [isize; 3];
let _55: i128;
let _56: u16;
let _57: f64;
let _58: u8;
let _59: f64;
let _60: f64;
let _61: [u128; 5];
let _62: i32;
let _63: (*const [u128; 4], f64, u8, *mut *mut (f64, u16));
let _64: [i64; 5];
let _65: [u128; 1];
let _66: [u128; 5];
let _67: *mut [u64; 2];
let _68: isize;
let _69: [u128; 4];
let _70: f64;
let _71: *mut [u64; 2];
let _72: Adt54;
let _73: Adt62;
let _74: u8;
let _75: [u128; 1];
let _76: char;
let _77: isize;
let _78: ((u128, i32), bool, i16);
let _79: [u64; 2];
let _80: *mut *mut (f64, u16);
let _81: (u128, i32);
let _82: bool;
let _83: i64;
let _84: [u32; 7];
let _85: [isize; 3];
let _86: f32;
let _87: (u128, i32);
let _88: ((u128, i32), bool, i16);
let _89: Adt64;
let _90: f32;
let _91: u64;
let _92: [u128; 1];
let _93: isize;
let _94: (*const [u128; 4], f64, u8, *mut *mut (f64, u16));
let _95: *mut (f64, u16);
let _96: (u128, i32);
let _97: ([u64; 7],);
let _98: char;
let _99: [isize; 3];
let _100: f32;
let _101: isize;
let _102: f32;
let _103: Adt58;
let _104: f64;
let _105: Adt63;
let _106: bool;
let _107: ();
let _108: ();
{
_4.fld0 = (_7.fld0.0, _5);
_4.fld0.0 = (-111403895564102211429308796219593487760_i128) as u128;
_7.fld1 = core::ptr::addr_of!(_10.0);
_11.1 = (-14427_i16) as usize;
_7.fld0.0 = _4.fld0.0;
_7.fld2 = [_4.fld0.0,_7.fld0.0,_4.fld0.0,_7.fld0.0,_4.fld0.0];
_5 = !_7.fld0.1;
_11.0 = 10354_i16 as f64;
_13 = _6 ^ _3;
RET.fld3 = [_7.fld0.0];
_4 = Adt53 { fld0: _7.fld0,fld1: _7.fld1,fld2: _7.fld2 };
_7.fld0.0 = _4.fld0.0;
(*_2) = [_1,_8,_8,_8,_8,_8,_1];
_11.2 = [973010696_u32,4165179258_u32,1961863919_u32,852838105_u32,2351406981_u32,3918863928_u32,2078289195_u32];
(*_2) = _10.0;
_4.fld0 = _7.fld0;
_7 = Adt53 { fld0: _4.fld0,fld1: _2,fld2: _4.fld2 };
_7.fld0.0 = _4.fld0.0 >> _1;
_4.fld0.0 = !_7.fld0.0;
_11.2 = [3185171242_u32,2402546057_u32,2584393364_u32,2537362725_u32,1731722148_u32,3229775073_u32,4199320525_u32];
_7.fld0.1 = -_5;
_12 = _9;
_11.1 = (-6245_i16) as usize;
_4.fld0.1 = _5 | _7.fld0.1;
_10 = ((*_2),);
(*_2) = [_1,_1,_8,_1,_8,_1,_8];
Goto(bb1)
}
bb1 = {
_5 = !_4.fld0.1;
_9 = _12 / 1_f32;
_7.fld2 = _4.fld2;
_7 = _4;
_14 = [_8,_8];
_7.fld0.1 = (-56613946132066633558611392391948293370_i128) as i32;
_4.fld0 = (_7.fld0.0, _5);
_4.fld0.1 = _5;
(*_2) = _10.0;
_4.fld0.1 = _5 >> _1;
_7.fld0.0 = _8 as u128;
(*_2) = _10.0;
_14 = [_8,_8];
_16 = (-77_i8);
(*_2) = [_1,_8,_1,_8,_8,_8,_1];
_7 = Adt53 { fld0: _4.fld0,fld1: _2,fld2: _4.fld2 };
_3 = _6;
_11.0 = 248_u8 as f64;
_15.fld1 = _11.2;
_11.1 = 4703750876780782058_usize | 3_usize;
match _16 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768211379 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_14 = [_1,_8];
_10 = ((*_2),);
_14 = [_8,_8];
RET.fld3 = [_7.fld0.0];
_4.fld0 = (_7.fld0.0, _7.fld0.1);
_2 = core::ptr::addr_of!((*_2));
RET.fld3 = [_4.fld0.0];
_18 = 18587819054420586045554639602808794283_i128 as i64;
_6 = _3;
_17.0.0 = _7.fld0.0 | _4.fld0.0;
_4.fld0.0 = _17.0.0 * _17.0.0;
_12 = _9;
_17.0.0 = _4.fld0.0 << _4.fld0.0;
_19 = _11.0;
_21 = [_4.fld0.1,_4.fld0.1,_5,_4.fld0.1];
_7.fld0.1 = _9 as i32;
_10 = ((*_2),);
(*_2) = [_8,_1,_8,_1,_8,_8,_8];
_4.fld0.1 = _5;
_20 = _6 as u16;
RET.fld2 = core::ptr::addr_of!(_23);
_15.fld0 = [(-52_isize),67_isize,9223372036854775807_isize];
_11.1 = 12441848240123477910_usize / 5_usize;
(*_2) = [_8,_1,_8,_8,_1,_8,_8];
_17.0 = (_4.fld0.0, _5);
RET.fld2 = core::ptr::addr_of!(_23);
_22 = core::ptr::addr_of_mut!(_14);
_23 = [_17.0.0,_4.fld0.0,_4.fld0.0,_17.0.0];
match _16 {
0 => bb2,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
340282366920938463463374607431768211379 => bb16,
_ => bb15
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_5 = !_4.fld0.1;
_9 = _12 / 1_f32;
_7.fld2 = _4.fld2;
_7 = _4;
_14 = [_8,_8];
_7.fld0.1 = (-56613946132066633558611392391948293370_i128) as i32;
_4.fld0 = (_7.fld0.0, _5);
_4.fld0.1 = _5;
(*_2) = _10.0;
_4.fld0.1 = _5 >> _1;
_7.fld0.0 = _8 as u128;
(*_2) = _10.0;
_14 = [_8,_8];
_16 = (-77_i8);
(*_2) = [_1,_8,_1,_8,_8,_8,_1];
_7 = Adt53 { fld0: _4.fld0,fld1: _2,fld2: _4.fld2 };
_3 = _6;
_11.0 = 248_u8 as f64;
_15.fld1 = _11.2;
_11.1 = 4703750876780782058_usize | 3_usize;
match _16 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768211379 => bb8,
_ => bb7
}
}
bb16 = {
_1 = 233_u8 as u64;
_11.2 = [3875702180_u32,3255386047_u32,2911858463_u32,1029096141_u32,45462253_u32,279878753_u32,3972228297_u32];
_9 = _12 + _12;
_6 = !_3;
_7.fld0.0 = _19 as u128;
_12 = _9 * _9;
_17 = (_4.fld0, _4.fld0.0);
match _16 {
0 => bb17,
1 => bb18,
2 => bb19,
340282366920938463463374607431768211379 => bb21,
_ => bb20
}
}
bb17 = {
_5 = !_4.fld0.1;
_9 = _12 / 1_f32;
_7.fld2 = _4.fld2;
_7 = _4;
_14 = [_8,_8];
_7.fld0.1 = (-56613946132066633558611392391948293370_i128) as i32;
_4.fld0 = (_7.fld0.0, _5);
_4.fld0.1 = _5;
(*_2) = _10.0;
_4.fld0.1 = _5 >> _1;
_7.fld0.0 = _8 as u128;
(*_2) = _10.0;
_14 = [_8,_8];
_16 = (-77_i8);
(*_2) = [_1,_8,_1,_8,_8,_8,_1];
_7 = Adt53 { fld0: _4.fld0,fld1: _2,fld2: _4.fld2 };
_3 = _6;
_11.0 = 248_u8 as f64;
_15.fld1 = _11.2;
_11.1 = 4703750876780782058_usize | 3_usize;
match _16 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768211379 => bb8,
_ => bb7
}
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
(*_22) = [_8,_8];
_25 = _20 as i64;
_12 = _5 as f32;
_3 = _13;
_4.fld0 = (_17.1, _7.fld0.1);
_16 = '\u{dad5d}' as i8;
_26 = -_12;
RET.fld3 = [_4.fld0.0];
_17.0.1 = 113979388911076286665412805477537494447_i128 as i32;
_14 = [_1,_8];
_27 = core::ptr::addr_of!(_6);
_7.fld0.0 = !_4.fld0.0;
_7.fld2 = [_7.fld0.0,_4.fld0.0,_7.fld0.0,_7.fld0.0,_4.fld0.0];
_15.fld1 = [812933240_u32,1507229335_u32,1105744937_u32,1057921819_u32,2483747614_u32,1968080396_u32,3733537663_u32];
_17.0 = (_4.fld0.0, _5);
_4.fld0.0 = _17.1;
(*_22) = [_8,_1];
_23 = [_17.1,_7.fld0.0,_17.1,_4.fld0.0];
_4.fld1 = core::ptr::addr_of!(_10.0);
_21 = [_4.fld0.1,_17.0.1,_5,_7.fld0.1];
_18 = _8 as i64;
_26 = _9 - _9;
_27 = core::ptr::addr_of!(_6);
_29 = [_17.0.0,_4.fld0.0,_4.fld0.0,_17.0.0,_4.fld0.0];
_3 = _4.fld0.0 >= _7.fld0.0;
_6 = !_13;
_17.0.1 = _4.fld0.1 * _7.fld0.1;
(*_27) = !_13;
Goto(bb22)
}
bb22 = {
RET.fld2 = core::ptr::addr_of!(_23);
_16 = (-74_i8) | (-1_i8);
_4.fld0.0 = _11.1 as u128;
_25 = -_18;
_28 = '\u{c1f2e}';
_20 = 19018_u16 | 36141_u16;
_6 = !_3;
_23 = [_17.1,_17.1,_7.fld0.0,_17.0.0];
(*_22) = [_8,_8];
_21 = [_17.0.1,_5,_17.0.1,_5];
_28 = '\u{1056f9}';
_10 = ((*_2),);
RET.fld3 = [_7.fld0.0];
_3 = _6;
_15.fld0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_4.fld0.0 = _7.fld0.0;
_4.fld0.1 = _17.0.1;
_28 = '\u{36efa}';
_15.fld0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),80_isize];
_32 = _10;
_20 = 21830_u16 % 25893_u16;
_15.fld0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-12_isize)];
_4.fld2 = [_17.1,_7.fld0.0,_17.1,_7.fld0.0,_7.fld0.0];
Goto(bb23)
}
bb23 = {
_17.0.0 = _9 as u128;
_17.0.1 = _26 as i32;
_34.fld4.fld0.0 = _7.fld0.0;
_22 = core::ptr::addr_of_mut!((*_22));
_4.fld2 = _29;
_34.fld3 = ((*_2),);
_17.0 = _7.fld0;
_36 = core::ptr::addr_of!(_34.fld1.fld1);
_11.0 = _19;
RET.fld2 = core::ptr::addr_of!(_23);
_17.0.1 = !_4.fld0.1;
_21 = [_17.0.1,_5,_5,_4.fld0.1];
_10.0 = [_8,_8,_8,_8,_1,_8,_8];
_32.0 = [_8,_8,_1,_8,_8,_8,_8];
_35 = !46_isize;
_7.fld2 = [_17.1,_17.1,_17.1,_34.fld4.fld0.0,_34.fld4.fld0.0];
_23 = [_17.1,_4.fld0.0,_17.1,_17.0.0];
_31 = core::ptr::addr_of!((*_36));
_34.fld1.fld3 = [_17.0.0];
_12 = _11.0 as f32;
_26 = -_9;
Goto(bb24)
}
bb24 = {
_34.fld0 = _17.0;
Call(_7.fld0.0 = core::intrinsics::transmute(_4.fld0.0), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_11 = (_19, 7_usize, _15.fld1);
_8 = _1;
_4.fld2 = [_7.fld0.0,_7.fld0.0,_17.1,_34.fld4.fld0.0,_4.fld0.0];
_16 = 117_i8 * (-115_i8);
_9 = _1 as f32;
_32 = _34.fld3;
_34.fld4.fld0.1 = _4.fld0.1 - _34.fld0.1;
_34.fld4.fld2 = _4.fld2;
RET.fld3 = [_34.fld0.0];
RET.fld2 = core::ptr::addr_of!(_23);
_22 = core::ptr::addr_of_mut!((*_22));
_35 = 9223372036854775807_isize * 92_isize;
_20 = 22584_u16 >> _34.fld0.0;
_25 = _20 as i64;
_17.0.0 = _34.fld4.fld0.0;
(*_22) = [_8,_1];
_14 = [_1,_1];
_15.fld1 = [3485060279_u32,1424645881_u32,475254348_u32,2770717679_u32,1413429174_u32,2203734523_u32,3219620180_u32];
Goto(bb26)
}
bb26 = {
_24 = !_17.0.1;
(*_2) = [_8,_8,_1,_1,_8,_8,_1];
_6 = _3 | _3;
_22 = core::ptr::addr_of_mut!((*_22));
_17 = (_4.fld0, _4.fld0.0);
Goto(bb27)
}
bb27 = {
_34.fld3.0 = _32.0;
_4.fld0.0 = _28 as u128;
_14 = [_8,_8];
_18 = _25 & _25;
_7 = Adt53 { fld0: _17.0,fld1: _4.fld1,fld2: _34.fld4.fld2 };
_17.1 = _20 as u128;
_8 = _1;
(*_22) = [_8,_1];
_21 = [_24,_17.0.1,_4.fld0.1,_5];
Goto(bb28)
}
bb28 = {
_8 = _1 + _1;
(*_27) = _25 != _18;
_17.0.1 = _7.fld0.1;
_15.fld1 = [4040737398_u32,1773607087_u32,4030049799_u32,1538947369_u32,1641289109_u32,3685814350_u32,143491484_u32];
RET.fld2 = core::ptr::addr_of!(_23);
(*_2) = _32.0;
Call(_34.fld0 = fn4(_15, _2, _17), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_4.fld0.0 = _34.fld4.fld0.0 / 155001696327865353147604525277662882206_u128;
_6 = _13;
(*_2) = [_8,_8,_8,_8,_8,_8,_8];
(*_27) = _13;
_4.fld0.0 = _19 as u128;
_15.fld0 = [_35,_35,_35];
_41 = _23;
_34.fld1.fld2 = core::ptr::addr_of!(_41);
_34.fld0.1 = 3971405335_u32 as i32;
_17.0 = _34.fld0;
_33 = 4263744811_u32;
_23 = [_34.fld4.fld0.0,_17.1,_7.fld0.0,_34.fld4.fld0.0];
_2 = _4.fld1;
(*_27) = _3;
_34.fld2 = core::ptr::addr_of_mut!(_14);
_34.fld4 = Adt53 { fld0: _34.fld0,fld1: _4.fld1,fld2: _29 };
_44 = _28;
Call(RET.fld1 = fn5(_19, _15, _34.fld4.fld0, (*_27), (*_27), _14, _9, _7.fld0, _12, _4.fld2, _22, _4.fld0.1, _7.fld2, _25), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
_7.fld0.0 = _17.0.0;
_38 = _21;
_2 = core::ptr::addr_of!(_32.0);
_4.fld0.1 = _44 as i32;
_19 = -_11.0;
Goto(bb31)
}
bb31 = {
_39 = [_33,_33,_33,_33,_33,_33,_33];
_24 = _35 as i32;
_33 = !3072731651_u32;
_28 = _44;
_34.fld4.fld0.0 = _8 as u128;
_13 = !(*_27);
_4.fld0.0 = _34.fld0.0;
_32 = _34.fld3;
_4 = _34.fld4;
_7.fld2 = [_17.1,_34.fld4.fld0.0,_17.0.0,_34.fld0.0,_7.fld0.0];
_30 = _35;
_48 = _13;
_9 = _17.1 as f32;
_34.fld4.fld2 = [_7.fld0.0,_7.fld0.0,_17.0.0,_34.fld0.0,_17.1];
_35 = _30;
_44 = _28;
Goto(bb32)
}
bb32 = {
(*_27) = _3 != _48;
_1 = _8;
_18 = _25 ^ _25;
Goto(bb33)
}
bb33 = {
_15.fld1 = [_33,_33,_33,_33,_33,_33,_33];
_45 = (*_27) as isize;
(*_2) = [_1,_1,_1,_8,_1,_8,_8];
_4.fld0 = (_17.1, _7.fld0.1);
_33 = !24799552_u32;
match _11.1 {
7 => bb35,
_ => bb34
}
}
bb34 = {
_1 = 233_u8 as u64;
_11.2 = [3875702180_u32,3255386047_u32,2911858463_u32,1029096141_u32,45462253_u32,279878753_u32,3972228297_u32];
_9 = _12 + _12;
_6 = !_3;
_7.fld0.0 = _19 as u128;
_12 = _9 * _9;
_17 = (_4.fld0, _4.fld0.0);
match _16 {
0 => bb17,
1 => bb18,
2 => bb19,
340282366920938463463374607431768211379 => bb21,
_ => bb20
}
}
bb35 = {
_14 = [_1,_8];
RET.fld3 = [_34.fld0.0];
_34.fld0 = (_17.0.0, _5);
_28 = _44;
_52 = _45;
_37 = _45 as i32;
RET.fld3 = [_4.fld0.0];
_47.fld3 = _34.fld1.fld3;
Goto(bb36)
}
bb36 = {
_21 = _38;
_2 = _4.fld1;
_47.fld3 = [_7.fld0.0];
(*_27) = !_13;
_34.fld3.0 = (*_2);
_2 = _34.fld4.fld1;
_42 = [_45,_45,_45];
_55 = (-115631813899235919785831124988459829193_i128);
Goto(bb37)
}
bb37 = {
_34.fld0 = _34.fld4.fld0;
RET.fld1 = core::ptr::addr_of!(_58);
_34.fld2 = core::ptr::addr_of_mut!((*_22));
_34.fld4.fld0.1 = !_34.fld0.1;
(*_31) = core::ptr::addr_of!(_58);
_7 = _34.fld4;
(*_27) = _13;
_58 = !219_u8;
_40 = _11.0 / 1_f64;
_35 = -_45;
_34.fld4.fld0 = (_17.1, _37);
Goto(bb38)
}
bb38 = {
_29 = _34.fld4.fld2;
_11 = (_40, 3_usize, _15.fld1);
_55 = 16625182128431185414764628205507588204_i128 ^ (-58165005166306669936125686888299960749_i128);
_7.fld2 = [_4.fld0.0,_17.0.0,_17.0.0,_34.fld4.fld0.0,_17.0.0];
_34.fld4.fld0.1 = _37;
_54 = [_52,_45,_52];
_59 = _19;
_57 = _55 as f64;
_44 = _28;
RET.fld1 = core::ptr::addr_of!(_58);
(*_36) = core::ptr::addr_of!(_58);
(*_22) = [_1,_8];
_18 = _20 as i64;
_7.fld2 = _29;
(*_22) = [_1,_8];
_47.fld1 = core::ptr::addr_of!(_58);
_40 = _25 as f64;
_4.fld0.1 = _34.fld4.fld0.1 ^ _37;
Goto(bb39)
}
bb39 = {
_43 = _28;
_6 = _52 > _35;
_53 = _55 & _55;
_47.fld2 = _34.fld1.fld2;
_34.fld4.fld0.0 = _17.1 * _17.0.0;
_4.fld1 = core::ptr::addr_of!(_10.0);
_60 = _11.0;
_34.fld3.0 = [_8,_1,_1,_1,_8,_8,_1];
_7.fld2 = _34.fld4.fld2;
_43 = _44;
_13 = !(*_27);
_61 = [_17.0.0,_34.fld4.fld0.0,_34.fld4.fld0.0,_34.fld4.fld0.0,_34.fld4.fld0.0];
_20 = !35539_u16;
_10 = (_34.fld3.0,);
_62 = -_34.fld4.fld0.1;
_46 = _40 as f32;
_11.1 = 12112912251753419478_usize;
_47.fld2 = core::ptr::addr_of!(_23);
Call(_63.0 = core::intrinsics::arith_offset(_47.fld2, (-9223372036854775808_isize)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
_39 = [_33,_33,_33,_33,_33,_33,_33];
(*_36) = core::ptr::addr_of!(_63.2);
_17.0.1 = _4.fld0.1;
_7.fld2 = [_4.fld0.0,_34.fld4.fld0.0,_17.1,_34.fld4.fld0.0,_17.0.0];
_51 = -_40;
_17 = (_34.fld4.fld0, _34.fld4.fld0.0);
_29 = _61;
_4.fld0.0 = _33 as u128;
_34.fld4.fld0 = _4.fld0;
_35 = _11.0 as isize;
Goto(bb41)
}
bb41 = {
_16 = 48_i8 + 63_i8;
_17 = (_34.fld4.fld0, _34.fld4.fld0.0);
_17.0.0 = _7.fld0.0 >> _62;
_15.fld0 = [_52,_52,_52];
_51 = _40;
_4.fld0.1 = _17.0.1 * _17.0.1;
_17 = (_4.fld0, _34.fld4.fld0.0);
_34.fld0.1 = _34.fld4.fld0.1 - _24;
_11 = (_51, 3_usize, _39);
_10 = (_32.0,);
_34.fld4.fld2 = [_17.0.0,_7.fld0.0,_34.fld0.0,_34.fld0.0,_34.fld0.0];
_62 = !_34.fld4.fld0.1;
RET.fld3 = _34.fld1.fld3;
_34.fld1.fld1 = core::ptr::addr_of!(_63.2);
_23 = _41;
_41 = [_7.fld0.0,_4.fld0.0,_34.fld0.0,_7.fld0.0];
_49 = -_51;
_28 = _43;
_34.fld1.fld1 = _47.fld1;
_51 = _11.1 as f64;
(*_36) = core::ptr::addr_of!(_63.2);
_14 = [_1,_8];
_65 = [_34.fld0.0];
_64 = [_18,_25,_25,_18,_18];
_34.fld0 = (_4.fld0.0, _17.0.1);
match _11.1 {
3 => bb43,
_ => bb42
}
}
bb42 = {
Return()
}
bb43 = {
_15.fld1 = _11.2;
_11.2 = [_33,_33,_33,_33,_33,_33,_33];
_66 = [_7.fld0.0,_34.fld4.fld0.0,_34.fld0.0,_17.0.0,_34.fld4.fld0.0];
_17.0.0 = _33 as u128;
_57 = _49 - _11.0;
_11.1 = 0_usize << _52;
_64 = [_18,_25,_18,_18,_18];
_17 = (_4.fld0, _34.fld4.fld0.0);
_25 = _18;
_30 = _45 << _25;
_42 = [_45,_30,_52];
_13 = (*_27);
_15.fld0 = _54;
_51 = -_11.0;
_10.0 = _34.fld3.0;
_53 = _55;
Goto(bb44)
}
bb44 = {
_15.fld0 = _54;
_8 = !_1;
_4.fld0 = (_7.fld0.0, _34.fld4.fld0.1);
_63.1 = -_57;
_62 = _17.0.1;
Goto(bb45)
}
bb45 = {
_15.fld0 = [_52,_30,_45];
(*_36) = _47.fld1;
_4.fld0.0 = _7.fld0.0;
(*_2) = [_1,_1,_8,_8,_1,_8,_1];
_34.fld0.1 = -_4.fld0.1;
_61 = [_4.fld0.0,_17.1,_34.fld4.fld0.0,_4.fld0.0,_4.fld0.0];
_73.fld2 = _30;
(*_27) = _48;
_73.fld0 = core::ptr::addr_of!(_53);
_4.fld2 = [_4.fld0.0,_34.fld4.fld0.0,_7.fld0.0,_17.1,_34.fld0.0];
_34.fld4.fld2 = [_17.1,_4.fld0.0,_17.0.0,_34.fld0.0,_4.fld0.0];
_73.fld0 = core::ptr::addr_of!(_53);
_73.fld3 = core::ptr::addr_of_mut!(_73.fld0);
RET.fld2 = core::ptr::addr_of!(_69);
_52 = _73.fld2 | _30;
Goto(bb46)
}
bb46 = {
_72.fld0.fld3 = [_4.fld0.0];
_34.fld4.fld0.1 = _4.fld0.1 ^ _62;
_45 = -_73.fld2;
_34.fld0.1 = !_17.0.1;
_34.fld4.fld0.1 = _34.fld4.fld0.0 as i32;
_4.fld2 = [_7.fld0.0,_4.fld0.0,_17.0.0,_34.fld4.fld0.0,_17.1];
_57 = _16 as f64;
_73.fld6.fld3 = _16 << _7.fld0.0;
_41 = _23;
Goto(bb47)
}
bb47 = {
_67 = _34.fld2;
_68 = _45 << _34.fld0.1;
(*_67) = [_1,_1];
_73.fld6.fld0 = !_11.1;
_48 = (*_27);
RET.fld1 = (*_36);
_4 = Adt53 { fld0: _17.0,fld1: _2,fld2: _34.fld4.fld2 };
Goto(bb48)
}
bb48 = {
_32.0 = (*_2);
RET.fld1 = (*_36);
Goto(bb49)
}
bb49 = {
_43 = _44;
_40 = _34.fld4.fld0.0 as f64;
_15 = Adt63 { fld0: _42,fld1: _39 };
_55 = _45 as i128;
_76 = _43;
_72.fld2 = [_5,_34.fld0.1,_62,_37];
(*_22) = [_8,_8];
_17 = (_34.fld0, _34.fld4.fld0.0);
_27 = core::ptr::addr_of!((*_27));
_7.fld1 = _4.fld1;
_34.fld4.fld1 = core::ptr::addr_of!(_10.0);
_78.1 = _6;
_17.0 = _34.fld0;
_76 = _43;
_7.fld0.0 = !_17.0.0;
_38 = [_34.fld0.1,_37,_37,_34.fld0.1];
_32 = (_10.0,);
_16 = _73.fld6.fld3 >> _45;
_28 = _44;
_64 = [_25,_18,_25,_18,_25];
_68 = _30;
Call(_33 = core::intrinsics::transmute(_44), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
_22 = _67;
_69 = _23;
_17.1 = _17.0.0;
Goto(bb51)
}
bb51 = {
_72.fld6 = core::ptr::addr_of!((*_2));
_73.fld6.fld5 = core::ptr::addr_of!(_72.fld6);
_73.fld6.fld6 = !_58;
_72.fld3 = _16;
_72.fld0.fld2 = core::ptr::addr_of!(_41);
_78.0.1 = !_34.fld0.1;
_38 = [_78.0.1,_4.fld0.1,_62,_34.fld0.1];
_73.fld5 = _17.0.0;
_34.fld0 = (_17.0.0, _37);
_10 = _34.fld3;
_64 = [_25,_25,_18,_18,_18];
_81.0 = !_73.fld5;
_4.fld1 = _7.fld1;
Call(_84 = core::intrinsics::transmute(_11.2), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
_81 = (_73.fld5, _78.0.1);
_47.fld3 = [_34.fld4.fld0.0];
_87.0 = _72.fld3 as u128;
_34.fld4.fld0 = (_87.0, _62);
_34.fld2 = _22;
_73.fld6.fld2.fld2 = _27;
_72.fld0.fld3 = [_34.fld4.fld0.0];
_79 = (*_22);
_61 = [_87.0,_34.fld4.fld0.0,_87.0,_34.fld4.fld0.0,_34.fld4.fld0.0];
_73.fld6.fld1 = core::ptr::addr_of!(_58);
_7.fld0.0 = _34.fld4.fld0.0 & _87.0;
_63.2 = !_73.fld6.fld6;
_2 = _7.fld1;
_87.1 = _11.1 as i32;
_34.fld3.0 = [_8,_1,_8,_1,_1,_8,_1];
Goto(bb53)
}
bb53 = {
_89.fld1 = _55 as i32;
_17.1 = !_7.fld0.0;
_72.fld7 = core::ptr::addr_of_mut!(_8);
_59 = -_51;
_89 = Adt64 { fld0: _78.1,fld1: _4.fld0.1,fld2: _73.fld6.fld5 };
_25 = _18 & _18;
_4 = Adt53 { fld0: _7.fld0,fld1: _72.fld6,fld2: _7.fld2 };
_34.fld0.0 = _87.0;
_88 = (_34.fld0, _13, (-24511_i16));
_69 = [_4.fld0.0,_34.fld4.fld0.0,_17.1,_7.fld0.0];
_82 = _78.1;
_51 = -_11.0;
_3 = _88.1 ^ _6;
_17.0.1 = -_34.fld0.1;
_70 = _49 - _51;
_7.fld2 = [_87.0,_88.0.0,_7.fld0.0,_88.0.0,_87.0];
_7.fld0 = (_4.fld0.0, _17.0.1);
_47.fld3 = [_17.1];
_63.3 = core::ptr::addr_of_mut!(_95);
_94.2 = !_63.2;
_73.fld5 = _33 as u128;
_89.fld2 = core::ptr::addr_of!(_2);
_89.fld0 = _34.fld4.fld0.1 != _87.1;
_4 = _34.fld4;
_88 = (_7.fld0, _78.1, 19659_i16);
match _88.2 {
0 => bb1,
1 => bb30,
2 => bb41,
3 => bb4,
4 => bb54,
5 => bb55,
19659 => bb57,
_ => bb56
}
}
bb54 = {
_34.fld3.0 = _32.0;
_4.fld0.0 = _28 as u128;
_14 = [_8,_8];
_18 = _25 & _25;
_7 = Adt53 { fld0: _17.0,fld1: _4.fld1,fld2: _34.fld4.fld2 };
_17.1 = _20 as u128;
_8 = _1;
(*_22) = [_8,_1];
_21 = [_24,_17.0.1,_4.fld0.1,_5];
Goto(bb28)
}
bb55 = {
_4.fld0.0 = _34.fld4.fld0.0 / 155001696327865353147604525277662882206_u128;
_6 = _13;
(*_2) = [_8,_8,_8,_8,_8,_8,_8];
(*_27) = _13;
_4.fld0.0 = _19 as u128;
_15.fld0 = [_35,_35,_35];
_41 = _23;
_34.fld1.fld2 = core::ptr::addr_of!(_41);
_34.fld0.1 = 3971405335_u32 as i32;
_17.0 = _34.fld0;
_33 = 4263744811_u32;
_23 = [_34.fld4.fld0.0,_17.1,_7.fld0.0,_34.fld4.fld0.0];
_2 = _4.fld1;
(*_27) = _3;
_34.fld2 = core::ptr::addr_of_mut!(_14);
_34.fld4 = Adt53 { fld0: _34.fld0,fld1: _4.fld1,fld2: _29 };
_44 = _28;
Call(RET.fld1 = fn5(_19, _15, _34.fld4.fld0, (*_27), (*_27), _14, _9, _7.fld0, _12, _4.fld2, _22, _4.fld0.1, _7.fld2, _25), ReturnTo(bb30), UnwindUnreachable())
}
bb56 = {
_15.fld0 = _54;
_8 = !_1;
_4.fld0 = (_7.fld0.0, _34.fld4.fld0.1);
_63.1 = -_57;
_62 = _17.0.1;
Goto(bb45)
}
bb57 = {
(*_22) = [_1,_8];
_75 = [_17.1];
match _88.2 {
0 => bb35,
1 => bb41,
2 => bb12,
3 => bb58,
4 => bb59,
19659 => bb61,
_ => bb60
}
}
bb58 = {
_8 = _1 + _1;
(*_27) = _25 != _18;
_17.0.1 = _7.fld0.1;
_15.fld1 = [4040737398_u32,1773607087_u32,4030049799_u32,1538947369_u32,1641289109_u32,3685814350_u32,143491484_u32];
RET.fld2 = core::ptr::addr_of!(_23);
(*_2) = _32.0;
Call(_34.fld0 = fn4(_15, _2, _17), ReturnTo(bb29), UnwindUnreachable())
}
bb59 = {
_7.fld0.0 = _17.0.0;
_38 = _21;
_2 = core::ptr::addr_of!(_32.0);
_4.fld0.1 = _44 as i32;
_19 = -_11.0;
Goto(bb31)
}
bb60 = {
_67 = _34.fld2;
_68 = _45 << _34.fld0.1;
(*_67) = [_1,_1];
_73.fld6.fld0 = !_11.1;
_48 = (*_27);
RET.fld1 = (*_36);
_4 = Adt53 { fld0: _17.0,fld1: _2,fld2: _34.fld4.fld2 };
Goto(bb48)
}
bb61 = {
_93 = _52 + _52;
_50 = _6 as i32;
_69 = [_4.fld0.0,_17.1,_34.fld4.fld0.0,_34.fld4.fld0.0];
_91 = _1 / 5425956442417952132_u64;
_7.fld0 = (_88.0.0, _17.0.1);
_73.fld1 = [_25,_25,_25,_18,_25];
_97 = (_34.fld3.0,);
_55 = !_53;
_17.0 = (_4.fld0.0, _62);
_22 = core::ptr::addr_of_mut!((*_67));
_96.0 = _17.0.0 | _17.1;
_47.fld2 = core::ptr::addr_of!(_41);
_34.fld3.0 = [_91,_8,_1,_91,_1,_8,_1];
match _88.2 {
0 => bb48,
1 => bb47,
2 => bb27,
19659 => bb63,
_ => bb62
}
}
bb62 = {
_34.fld0 = _17.0;
Call(_7.fld0.0 = core::intrinsics::transmute(_4.fld0.0), ReturnTo(bb25), UnwindUnreachable())
}
bb63 = {
_26 = _9 - _46;
_94 = _63;
_52 = _68 >> _72.fld3;
RET.fld0 = core::ptr::addr_of_mut!(_95);
_47.fld3 = _75;
_11 = (_59, _73.fld6.fld0, _39);
_72.fld1 = core::ptr::addr_of_mut!(_95);
_96.1 = _17.0.1;
_73.fld4 = core::ptr::addr_of_mut!((*_22));
_65 = [_4.fld0.0];
_83 = _25 & _25;
_4.fld0.0 = _96.0 & _34.fld4.fld0.0;
Goto(bb64)
}
bb64 = {
Call(_107 = dump_var(3_usize, 5_usize, Move(_5), 81_usize, Move(_81), 39_usize, Move(_39), 83_usize, Move(_83)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_107 = dump_var(3_usize, 53_usize, Move(_53), 10_usize, Move(_10), 6_usize, Move(_6), 32_usize, Move(_32)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_107 = dump_var(3_usize, 55_usize, Move(_55), 21_usize, Move(_21), 25_usize, Move(_25), 84_usize, Move(_84)), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Call(_107 = dump_var(3_usize, 16_usize, Move(_16), 43_usize, Move(_43), 24_usize, Move(_24), 17_usize, Move(_17)), ReturnTo(bb68), UnwindUnreachable())
}
bb68 = {
Call(_107 = dump_var(3_usize, 82_usize, Move(_82), 14_usize, Move(_14), 96_usize, Move(_96), 97_usize, Move(_97)), ReturnTo(bb69), UnwindUnreachable())
}
bb69 = {
Call(_107 = dump_var(3_usize, 28_usize, Move(_28), 91_usize, Move(_91), 61_usize, Move(_61), 37_usize, Move(_37)), ReturnTo(bb70), UnwindUnreachable())
}
bb70 = {
Call(_107 = dump_var(3_usize, 93_usize, Move(_93), 8_usize, Move(_8), 52_usize, Move(_52), 87_usize, Move(_87)), ReturnTo(bb71), UnwindUnreachable())
}
bb71 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: Adt63,mut _2: *const [u64; 7],mut _3: ((u128, i32), u128)) -> (u128, i32) {
mir! {
type RET = (u128, i32);
let _4: isize;
let _5: [i32; 4];
let _6: char;
let _7: i128;
let _8: char;
let _9: ();
let _10: ();
{
_1.fld0 = [(-9223372036854775808_isize),35_isize,(-9223372036854775808_isize)];
RET.1 = -_3.0.1;
_3.0.1 = 2850015909151088486_u64 as i32;
RET = (_3.0.0, _3.0.1);
_4 = 9223372036854775807_isize + (-8_isize);
_3.0 = (_3.1, 1778201826_i32);
_1.fld1 = [2559451458_u32,578770434_u32,1478249318_u32,1417541547_u32,2008171721_u32,2567603516_u32,2083762695_u32];
(*_2) = [16212377455297505135_u64,14376216238997694167_u64,15630644432637860377_u64,8453358533698045463_u64,16046820463394376477_u64,6882245818734034278_u64,13812702985516287040_u64];
RET = (_3.1, _3.0.1);
RET = _3.0;
_3.0.1 = (-1613626431_i32);
_3.0 = (_3.1, (-227110710_i32));
_3.0.0 = 6659889855872063175_u64 as u128;
_7 = (-159922098096842375021968121523483760044_i128) >> _3.1;
_1.fld0 = [_4,_4,_4];
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(4_usize, 3_usize, Move(_3), 10_usize, _10, 10_usize, _10, 10_usize, _10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: f64,mut _2: Adt63,mut _3: (u128, i32),mut _4: bool,mut _5: bool,mut _6: [u64; 2],mut _7: f32,mut _8: (u128, i32),mut _9: f32,mut _10: [u128; 5],mut _11: *mut [u64; 2],mut _12: i32,mut _13: [u128; 5],mut _14: i64) -> *const u8 {
mir! {
type RET = *const u8;
let _15: (f64, u16);
let _16: bool;
let _17: i64;
let _18: [i64; 5];
let _19: isize;
let _20: bool;
let _21: isize;
let _22: Adt48;
let _23: i32;
let _24: Adt61;
let _25: [i64; 5];
let _26: ([u64; 7],);
let _27: [u32; 7];
let _28: [u128; 4];
let _29: f32;
let _30: f32;
let _31: isize;
let _32: Adt63;
let _33: isize;
let _34: i128;
let _35: u64;
let _36: usize;
let _37: Adt55;
let _38: *const *const [u64; 7];
let _39: f32;
let _40: char;
let _41: Adt63;
let _42: f64;
let _43: [u128; 5];
let _44: (f64, usize, [u32; 7]);
let _45: f64;
let _46: i64;
let _47: (f64, u16);
let _48: bool;
let _49: Adt63;
let _50: isize;
let _51: (f64, usize, [u32; 7]);
let _52: *mut *mut (f64, u16);
let _53: u32;
let _54: *const i128;
let _55: [u32; 7];
let _56: [u128; 4];
let _57: isize;
let _58: char;
let _59: *mut *mut (f64, u16);
let _60: char;
let _61: f64;
let _62: [u32; 7];
let _63: isize;
let _64: [isize; 3];
let _65: Adt53;
let _66: [isize; 3];
let _67: (*const u8, [i64; 5]);
let _68: i32;
let _69: u16;
let _70: Adt57;
let _71: f64;
let _72: Adt48;
let _73: isize;
let _74: ();
let _75: ();
{
_2.fld1 = [3211625443_u32,2467545322_u32,2993363054_u32,1606969042_u32,731053942_u32,126402648_u32,2446120646_u32];
_8 = (_3.0, _12);
Goto(bb1)
}
bb1 = {
(*_11) = [4137490433938359465_u64,9948784094433128776_u64];
_8.1 = _12;
_8.1 = _12 >> _3.0;
Goto(bb2)
}
bb2 = {
_3.0 = !_8.0;
_13 = _10;
_3 = (_8.0, _8.1);
_15 = (_1, 9269_u16);
_6 = [12262572349912195433_u64,12681224892409660768_u64];
_13 = [_8.0,_8.0,_8.0,_8.0,_8.0];
_13 = [_8.0,_8.0,_3.0,_3.0,_8.0];
_5 = _12 >= _8.1;
_3.0 = _8.0 & _8.0;
_17 = _9 as i64;
_15.1 = 17166_u16 / 18057_u16;
Goto(bb3)
}
bb3 = {
_4 = _5;
_7 = 1984697103_u32 as f32;
_12 = _8.1;
_3.0 = _8.0 ^ _8.0;
_16 = !_4;
(*_11) = _6;
_12 = _8.1;
Call(_14 = fn6(_2, _3, _8.0, _11, _1, _11, _11, _6, _12, _2.fld0, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_14 = _17 & _17;
_13 = _10;
_18 = [_14,_14,_14,_14,_14];
_19 = -9223372036854775807_isize;
_14 = _17 * _17;
_22.fld0 = [21777190590826853_u64,14609711407359606298_u64,10939195262053743001_u64,6517890420335790849_u64,7393709950152575657_u64,5567303506730868095_u64,16556007606492733637_u64];
(*_11) = [11579605068447063078_u64,4579862361767140896_u64];
_24.fld2.fld4.fld0 = (_3.0, _12);
_24.fld0.fld6.fld1 = (-88_i8);
_20 = !_5;
_24.fld0.fld0 = _4 <= _5;
_24.fld2.fld0.1 = _12;
_24.fld2.fld0.0 = (-18355_i16) as u128;
_13 = [_24.fld2.fld4.fld0.0,_3.0,_3.0,_24.fld2.fld4.fld0.0,_8.0];
_24.fld2.fld1.fld3 = [_24.fld2.fld4.fld0.0];
_24.fld2.fld0.1 = _8.1 - _8.1;
_24.fld2.fld2 = core::ptr::addr_of_mut!((*_11));
_24.fld1 = '\u{62def}';
_22.fld1.1 = _18;
_1 = _15.0 + _15.0;
(*_11) = _6;
_3.0 = _24.fld0.fld6.fld1 as u128;
_12 = _3.1 & _24.fld2.fld4.fld0.1;
_12 = 16660314181404376769_u64 as i32;
Goto(bb5)
}
bb5 = {
_24.fld0.fld1 = (-117502672326747579698619715698289213471_i128);
_26 = (_22.fld0,);
_20 = _5 & _16;
_3.1 = _7 as i32;
_24.fld0.fld6.fld2 = !4842969558261308171_u64;
_16 = !_4;
_24.fld2.fld3 = (_22.fld0,);
_24.fld2.fld0.0 = _8.0 / 73765822907756720650831512881394019317_u128;
_24.fld2.fld3 = _26;
match _24.fld0.fld6.fld1 {
0 => bb1,
1 => bb4,
340282366920938463463374607431768211368 => bb6,
_ => bb3
}
}
bb6 = {
_24.fld2.fld3 = _26;
_3.0 = _24.fld2.fld4.fld0.0;
_24.fld2.fld4.fld2 = [_24.fld2.fld4.fld0.0,_24.fld2.fld4.fld0.0,_3.0,_8.0,_24.fld2.fld4.fld0.0];
_24.fld0.fld0 = _4 & _4;
_12 = _8.1 - _24.fld2.fld4.fld0.1;
_15.0 = _1 * _1;
_24.fld4 = _17;
_24.fld4 = _17;
_24.fld2.fld1.fld2 = core::ptr::addr_of!(_28);
_3.0 = _24.fld2.fld0.0 & _8.0;
_29 = _15.1 as f32;
_24.fld0.fld1 = !(-35498720727218946207638386589777517539_i128);
_24.fld4 = -_17;
_26.0 = [_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2];
_24.fld3 = _14 as u32;
_24.fld0.fld4 = core::ptr::addr_of!(_24.fld2.fld4.fld1);
_24.fld2.fld0 = (_24.fld2.fld4.fld0.0, _12);
_24.fld2.fld4.fld2 = _13;
_24.fld4 = _12 as i64;
match _24.fld0.fld6.fld1 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
340282366920938463463374607431768211368 => bb14,
_ => bb13
}
}
bb7 = {
_24.fld0.fld1 = (-117502672326747579698619715698289213471_i128);
_26 = (_22.fld0,);
_20 = _5 & _16;
_3.1 = _7 as i32;
_24.fld0.fld6.fld2 = !4842969558261308171_u64;
_16 = !_4;
_24.fld2.fld3 = (_22.fld0,);
_24.fld2.fld0.0 = _8.0 / 73765822907756720650831512881394019317_u128;
_24.fld2.fld3 = _26;
match _24.fld0.fld6.fld1 {
0 => bb1,
1 => bb4,
340282366920938463463374607431768211368 => bb6,
_ => bb3
}
}
bb8 = {
_14 = _17 & _17;
_13 = _10;
_18 = [_14,_14,_14,_14,_14];
_19 = -9223372036854775807_isize;
_14 = _17 * _17;
_22.fld0 = [21777190590826853_u64,14609711407359606298_u64,10939195262053743001_u64,6517890420335790849_u64,7393709950152575657_u64,5567303506730868095_u64,16556007606492733637_u64];
(*_11) = [11579605068447063078_u64,4579862361767140896_u64];
_24.fld2.fld4.fld0 = (_3.0, _12);
_24.fld0.fld6.fld1 = (-88_i8);
_20 = !_5;
_24.fld0.fld0 = _4 <= _5;
_24.fld2.fld0.1 = _12;
_24.fld2.fld0.0 = (-18355_i16) as u128;
_13 = [_24.fld2.fld4.fld0.0,_3.0,_3.0,_24.fld2.fld4.fld0.0,_8.0];
_24.fld2.fld1.fld3 = [_24.fld2.fld4.fld0.0];
_24.fld2.fld0.1 = _8.1 - _8.1;
_24.fld2.fld2 = core::ptr::addr_of_mut!((*_11));
_24.fld1 = '\u{62def}';
_22.fld1.1 = _18;
_1 = _15.0 + _15.0;
(*_11) = _6;
_3.0 = _24.fld0.fld6.fld1 as u128;
_12 = _3.1 & _24.fld2.fld4.fld0.1;
_12 = 16660314181404376769_u64 as i32;
Goto(bb5)
}
bb9 = {
_4 = _5;
_7 = 1984697103_u32 as f32;
_12 = _8.1;
_3.0 = _8.0 ^ _8.0;
_16 = !_4;
(*_11) = _6;
_12 = _8.1;
Call(_14 = fn6(_2, _3, _8.0, _11, _1, _11, _11, _6, _12, _2.fld0, _9), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_3.0 = !_8.0;
_13 = _10;
_3 = (_8.0, _8.1);
_15 = (_1, 9269_u16);
_6 = [12262572349912195433_u64,12681224892409660768_u64];
_13 = [_8.0,_8.0,_8.0,_8.0,_8.0];
_13 = [_8.0,_8.0,_3.0,_3.0,_8.0];
_5 = _12 >= _8.1;
_3.0 = _8.0 & _8.0;
_17 = _9 as i64;
_15.1 = 17166_u16 / 18057_u16;
Goto(bb3)
}
bb11 = {
(*_11) = [4137490433938359465_u64,9948784094433128776_u64];
_8.1 = _12;
_8.1 = _12 >> _3.0;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_25 = [_24.fld4,_24.fld4,_14,_24.fld4,_17];
_21 = _24.fld2.fld4.fld0.0 as isize;
_28 = [_24.fld2.fld4.fld0.0,_8.0,_24.fld2.fld4.fld0.0,_24.fld2.fld4.fld0.0];
_24.fld2.fld0.1 = 2823397276371328932_usize as i32;
_19 = _21 >> _3.0;
_2.fld0 = [_21,_21,_19];
_31 = _15.0 as isize;
_16 = _4 > _5;
_24.fld2.fld0 = _24.fld2.fld4.fld0;
_24.fld0.fld6.fld1 = _24.fld4 as i8;
_24.fld2.fld4.fld0 = _24.fld2.fld0;
_24.fld2.fld0.0 = _3.0;
_22.fld0 = [_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2];
_24.fld2.fld4.fld0.1 = _24.fld2.fld0.1;
_24.fld0.fld5 = 2678473799879692442_usize as u64;
_18 = [_24.fld4,_24.fld4,_24.fld4,_24.fld4,_24.fld4];
_24.fld0.fld5 = !_24.fld0.fld6.fld2;
_17 = _24.fld4 << _24.fld2.fld0.0;
_28 = [_3.0,_24.fld2.fld0.0,_8.0,_24.fld2.fld0.0];
_24.fld2.fld4.fld1 = core::ptr::addr_of!(_26.0);
_5 = !_20;
_27 = [_24.fld3,_24.fld3,_24.fld3,_24.fld3,_24.fld3,_24.fld3,_24.fld3];
_9 = _29;
_24.fld2.fld4.fld2 = [_3.0,_3.0,_24.fld2.fld0.0,_24.fld2.fld4.fld0.0,_24.fld2.fld0.0];
Goto(bb15)
}
bb15 = {
_24.fld0.fld0 = _16 ^ _20;
_24.fld2.fld1.fld3 = [_24.fld2.fld4.fld0.0];
Goto(bb16)
}
bb16 = {
_24.fld2.fld4.fld2 = _13;
_24.fld2.fld0 = (_3.0, _12);
_32 = _2;
_2.fld1 = _27;
_21 = _19;
_24.fld2.fld3.0 = [_24.fld0.fld5,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld5,_24.fld0.fld5,_24.fld0.fld5,_24.fld0.fld6.fld2];
_3 = (_24.fld2.fld4.fld0.0, _12);
(*_11) = _6;
_37.fld1 = -_24.fld0.fld1;
_24.fld0.fld1 = _37.fld1;
_10 = [_24.fld2.fld4.fld0.0,_24.fld2.fld0.0,_24.fld2.fld0.0,_8.0,_24.fld2.fld0.0];
_4 = !_20;
_1 = _15.0;
_1 = _24.fld2.fld0.1 as f64;
_37.fld3 = [_24.fld2.fld0.0,_24.fld2.fld0.0,_24.fld2.fld4.fld0.0,_8.0];
_30 = -_29;
_2 = Adt63 { fld0: _32.fld0,fld1: _27 };
_2 = Adt63 { fld0: _32.fld0,fld1: _32.fld1 };
_15.1 = !11679_u16;
_41.fld0 = _2.fld0;
_9 = _7 - _30;
Goto(bb17)
}
bb17 = {
_23 = _12;
_2 = Adt63 { fld0: _41.fld0,fld1: _32.fld1 };
_22.fld1.1 = [_17,_17,_17,_17,_17];
_37.fld3 = [_24.fld2.fld0.0,_24.fld2.fld4.fld0.0,_3.0,_24.fld2.fld4.fld0.0];
_38 = core::ptr::addr_of!(_24.fld2.fld4.fld1);
_37.fld5 = _24.fld0.fld5;
_42 = _1;
_41.fld0 = [_19,_21,_21];
_20 = _24.fld0.fld0 & _4;
_24.fld3 = 1004323833_u32;
_36 = _37.fld5 as usize;
_33 = _21 | _19;
_31 = _24.fld2.fld0.0 as isize;
_46 = _36 as i64;
_12 = _24.fld2.fld0.1;
_40 = _24.fld1;
_24.fld2.fld1.fld3 = [_24.fld2.fld0.0];
match _24.fld3 {
0 => bb5,
1 => bb18,
2 => bb19,
3 => bb20,
4 => bb21,
1004323833 => bb23,
_ => bb22
}
}
bb18 = {
_3.0 = !_8.0;
_13 = _10;
_3 = (_8.0, _8.1);
_15 = (_1, 9269_u16);
_6 = [12262572349912195433_u64,12681224892409660768_u64];
_13 = [_8.0,_8.0,_8.0,_8.0,_8.0];
_13 = [_8.0,_8.0,_3.0,_3.0,_8.0];
_5 = _12 >= _8.1;
_3.0 = _8.0 & _8.0;
_17 = _9 as i64;
_15.1 = 17166_u16 / 18057_u16;
Goto(bb3)
}
bb19 = {
(*_11) = [4137490433938359465_u64,9948784094433128776_u64];
_8.1 = _12;
_8.1 = _12 >> _3.0;
Goto(bb2)
}
bb20 = {
_25 = [_24.fld4,_24.fld4,_14,_24.fld4,_17];
_21 = _24.fld2.fld4.fld0.0 as isize;
_28 = [_24.fld2.fld4.fld0.0,_8.0,_24.fld2.fld4.fld0.0,_24.fld2.fld4.fld0.0];
_24.fld2.fld0.1 = 2823397276371328932_usize as i32;
_19 = _21 >> _3.0;
_2.fld0 = [_21,_21,_19];
_31 = _15.0 as isize;
_16 = _4 > _5;
_24.fld2.fld0 = _24.fld2.fld4.fld0;
_24.fld0.fld6.fld1 = _24.fld4 as i8;
_24.fld2.fld4.fld0 = _24.fld2.fld0;
_24.fld2.fld0.0 = _3.0;
_22.fld0 = [_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2,_24.fld0.fld6.fld2];
_24.fld2.fld4.fld0.1 = _24.fld2.fld0.1;
_24.fld0.fld5 = 2678473799879692442_usize as u64;
_18 = [_24.fld4,_24.fld4,_24.fld4,_24.fld4,_24.fld4];
_24.fld0.fld5 = !_24.fld0.fld6.fld2;
_17 = _24.fld4 << _24.fld2.fld0.0;
_28 = [_3.0,_24.fld2.fld0.0,_8.0,_24.fld2.fld0.0];
_24.fld2.fld4.fld1 = core::ptr::addr_of!(_26.0);
_5 = !_20;
_27 = [_24.fld3,_24.fld3,_24.fld3,_24.fld3,_24.fld3,_24.fld3,_24.fld3];
_9 = _29;
_24.fld2.fld4.fld2 = [_3.0,_3.0,_24.fld2.fld0.0,_24.fld2.fld4.fld0.0,_24.fld2.fld0.0];
Goto(bb15)
}
bb21 = {
(*_11) = [4137490433938359465_u64,9948784094433128776_u64];
_8.1 = _12;
_8.1 = _12 >> _3.0;
Goto(bb2)
}
bb22 = {
_24.fld0.fld1 = (-117502672326747579698619715698289213471_i128);
_26 = (_22.fld0,);
_20 = _5 & _16;
_3.1 = _7 as i32;
_24.fld0.fld6.fld2 = !4842969558261308171_u64;
_16 = !_4;
_24.fld2.fld3 = (_22.fld0,);
_24.fld2.fld0.0 = _8.0 / 73765822907756720650831512881394019317_u128;
_24.fld2.fld3 = _26;
match _24.fld0.fld6.fld1 {
0 => bb1,
1 => bb4,
340282366920938463463374607431768211368 => bb6,
_ => bb3
}
}
bb23 = {
_24.fld2.fld3.0 = _22.fld0;
_24.fld0.fld3 = _37.fld3;
_30 = _7;
_44.1 = _40 as usize;
_24.fld0.fld1 = _37.fld1 - _37.fld1;
_44.0 = _42 * _1;
_39 = -_9;
_45 = _24.fld2.fld4.fld0.0 as f64;
_45 = _44.0 - _44.0;
_32.fld1 = _27;
_37.fld6.fld2 = 21_u8 as u64;
(*_11) = [_24.fld0.fld5,_24.fld0.fld5];
_47.1 = _15.1;
_18 = _22.fld1.1;
_2 = Adt63 { fld0: _32.fld0,fld1: _32.fld1 };
_15.1 = _47.1 / 23345_u16;
Goto(bb24)
}
bb24 = {
_48 = _4 & _16;
_24.fld3 = _24.fld2.fld4.fld0.0 as u32;
_24.fld2.fld4.fld0.0 = _24.fld2.fld0.0;
_24.fld2.fld4.fld0.0 = !_3.0;
_37.fld1 = !_24.fld0.fld1;
_3.0 = _24.fld2.fld0.0 * _24.fld2.fld0.0;
_33 = _21 + _21;
_26.0 = [_24.fld0.fld6.fld2,_37.fld6.fld2,_24.fld0.fld5,_37.fld6.fld2,_24.fld0.fld5,_24.fld0.fld5,_24.fld0.fld5];
_24.fld0.fld6.fld1 = (-45_i8);
_47 = (_44.0, _15.1);
_24.fld2.fld2 = core::ptr::addr_of_mut!(_6);
_12 = _9 as i32;
_35 = _47.1 as u64;
_2 = Adt63 { fld0: _41.fld0,fld1: _32.fld1 };
_47.0 = -_44.0;
Goto(bb25)
}
bb25 = {
_37.fld0 = _48;
_32.fld0 = _41.fld0;
_54 = core::ptr::addr_of!(_24.fld0.fld1);
_44.0 = _42 / f64::NAN;
_1 = -_42;
(*_11) = [_24.fld0.fld6.fld2,_37.fld5];
_17 = _24.fld4;
_24.fld2.fld3.0 = [_37.fld5,_24.fld0.fld6.fld2,_37.fld5,_37.fld6.fld2,_35,_35,_37.fld5];
_26.0 = [_37.fld6.fld2,_24.fld0.fld6.fld2,_37.fld5,_35,_24.fld0.fld6.fld2,_35,_24.fld0.fld5];
_47.1 = _15.1;
_55 = _32.fld1;
_6 = [_24.fld0.fld5,_24.fld0.fld5];
_51.0 = _24.fld3 as f64;
_2.fld0 = [_19,_21,_33];
_8 = (_3.0, _24.fld2.fld4.fld0.1);
_44.2 = _32.fld1;
_24.fld4 = _17;
_51.0 = -_1;
_51.0 = _42;
_51.2 = _27;
_37.fld6.fld1 = !_24.fld0.fld6.fld1;
_51 = _44;
match _24.fld0.fld6.fld1 {
0 => bb14,
1 => bb2,
2 => bb26,
3 => bb27,
340282366920938463463374607431768211411 => bb29,
_ => bb28
}
}
bb26 = {
_3.0 = !_8.0;
_13 = _10;
_3 = (_8.0, _8.1);
_15 = (_1, 9269_u16);
_6 = [12262572349912195433_u64,12681224892409660768_u64];
_13 = [_8.0,_8.0,_8.0,_8.0,_8.0];
_13 = [_8.0,_8.0,_3.0,_3.0,_8.0];
_5 = _12 >= _8.1;
_3.0 = _8.0 & _8.0;
_17 = _9 as i64;
_15.1 = 17166_u16 / 18057_u16;
Goto(bb3)
}
bb27 = {
_24.fld0.fld1 = (-117502672326747579698619715698289213471_i128);
_26 = (_22.fld0,);
_20 = _5 & _16;
_3.1 = _7 as i32;
_24.fld0.fld6.fld2 = !4842969558261308171_u64;
_16 = !_4;
_24.fld2.fld3 = (_22.fld0,);
_24.fld2.fld0.0 = _8.0 / 73765822907756720650831512881394019317_u128;
_24.fld2.fld3 = _26;
match _24.fld0.fld6.fld1 {
0 => bb1,
1 => bb4,
340282366920938463463374607431768211368 => bb6,
_ => bb3
}
}
bb28 = {
_3.0 = !_8.0;
_13 = _10;
_3 = (_8.0, _8.1);
_15 = (_1, 9269_u16);
_6 = [12262572349912195433_u64,12681224892409660768_u64];
_13 = [_8.0,_8.0,_8.0,_8.0,_8.0];
_13 = [_8.0,_8.0,_3.0,_3.0,_8.0];
_5 = _12 >= _8.1;
_3.0 = _8.0 & _8.0;
_17 = _9 as i64;
_15.1 = 17166_u16 / 18057_u16;
Goto(bb3)
}
bb29 = {
_24.fld0.fld3 = [_24.fld2.fld4.fld0.0,_8.0,_8.0,_8.0];
_24.fld2.fld3.0 = [_35,_37.fld6.fld2,_24.fld0.fld5,_35,_35,_37.fld5,_35];
_30 = _9;
_33 = !_21;
_24.fld2.fld0.1 = _36 as i32;
_20 = _16;
_47.1 = _15.1;
_37.fld6.fld0.0 = core::ptr::addr_of_mut!(_54);
_31 = !_33;
_37.fld2 = core::ptr::addr_of_mut!(_54);
_24.fld0.fld5 = !_24.fld0.fld6.fld2;
_45 = _44.0 - _47.0;
_24.fld0.fld0 = _21 < _31;
_24.fld0.fld1 = !_37.fld1;
_37.fld1 = -(*_54);
_49 = Adt63 { fld0: _32.fld0,fld1: _55 };
_60 = _24.fld1;
_49 = Adt63 { fld0: _2.fld0,fld1: _2.fld1 };
_30 = _9 * _9;
_24.fld0 = Adt55 { fld0: _48,fld1: _37.fld1,fld2: _37.fld6.fld0.0,fld3: _28,fld4: _38,fld5: _37.fld6.fld2,fld6: Move(_37.fld6) };
_2.fld1 = _49.fld1;
_36 = _44.1;
_43 = [_24.fld2.fld4.fld0.0,_24.fld2.fld4.fld0.0,_3.0,_24.fld2.fld4.fld0.0,_3.0];
_4 = !_24.fld0.fld0;
_41.fld0 = [_33,_31,_33];
Goto(bb30)
}
bb30 = {
_40 = _24.fld1;
_3.0 = !_8.0;
_26.0 = _24.fld2.fld3.0;
Goto(bb31)
}
bb31 = {
_24.fld2.fld3.0 = [_37.fld5,_37.fld5,_35,_37.fld5,_24.fld0.fld5,_35,_35];
_55 = _27;
_36 = !_51.1;
_53 = _24.fld3;
_48 = _4 | _20;
_32.fld0 = _49.fld0;
_49.fld0 = _32.fld0;
_3.1 = _24.fld2.fld4.fld0.1;
Goto(bb32)
}
bb32 = {
_3 = (_24.fld2.fld0.0, _23);
_27 = [_24.fld3,_53,_24.fld3,_53,_24.fld3,_24.fld3,_24.fld3];
_32.fld0 = _41.fld0;
_44 = (_45, _36, _27);
_42 = _17 as f64;
_51.1 = !_36;
(*_38) = core::ptr::addr_of!(_24.fld2.fld3.0);
_65.fld0.1 = _3.1;
_24.fld3 = !_53;
RET = core::ptr::addr_of!(_70.fld1.2);
_24.fld0.fld2 = core::ptr::addr_of_mut!(_54);
(*_54) = _37.fld1;
_32 = _2;
_24.fld4 = _17;
(*RET) = 247_u8 ^ 17_u8;
_24.fld0.fld2 = core::ptr::addr_of_mut!(_54);
_24.fld3 = !_53;
Goto(bb33)
}
bb33 = {
Call(_74 = dump_var(5_usize, 23_usize, Move(_23), 8_usize, Move(_8), 48_usize, Move(_48), 21_usize, Move(_21)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_74 = dump_var(5_usize, 4_usize, Move(_4), 5_usize, Move(_5), 28_usize, Move(_28), 13_usize, Move(_13)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Call(_74 = dump_var(5_usize, 3_usize, Move(_3), 27_usize, Move(_27), 31_usize, Move(_31), 18_usize, Move(_18)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_74 = dump_var(5_usize, 6_usize, Move(_6), 36_usize, Move(_36), 16_usize, Move(_16), 75_usize, _75), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: Adt63,mut _2: (u128, i32),mut _3: u128,mut _4: *mut [u64; 2],mut _5: f64,mut _6: *mut [u64; 2],mut _7: *mut [u64; 2],mut _8: [u64; 2],mut _9: i32,mut _10: [isize; 3],mut _11: f32) -> i64 {
mir! {
type RET = i64;
let _12: usize;
let _13: char;
let _14: [i64; 5];
let _15: [u128; 1];
let _16: i16;
let _17: Adt56;
let _18: isize;
let _19: isize;
let _20: u128;
let _21: (*const [u128; 4], f64, u8, *mut *mut (f64, u16));
let _22: (f64, usize, [u32; 7]);
let _23: Adt62;
let _24: f32;
let _25: Adt49;
let _26: *mut u64;
let _27: usize;
let _28: i128;
let _29: i32;
let _30: isize;
let _31: ([u64; 7],);
let _32: Adt52;
let _33: (f64, u16);
let _34: f64;
let _35: isize;
let _36: f32;
let _37: isize;
let _38: ((u128, i32), bool, i16);
let _39: f64;
let _40: u8;
let _41: f64;
let _42: *mut u64;
let _43: [u128; 4];
let _44: i16;
let _45: char;
let _46: (u128, i32);
let _47: ();
let _48: ();
{
RET = !(-5192763748412169980_i64);
RET = -5766815220615071814_i64;
(*_6) = [2692206956046397292_u64,4624453129371590189_u64];
_3 = _11 as u128;
_1.fld0 = [9223372036854775807_isize,(-9223372036854775808_isize),(-97_isize)];
(*_6) = [7260100316263958242_u64,8358423650975553598_u64];
(*_4) = _8;
Goto(bb1)
}
bb1 = {
_2.1 = _9 << _2.0;
_7 = _6;
(*_7) = [12604300264218570677_u64,5139624136349696941_u64];
_3 = _2.0;
_13 = '\u{74712}';
(*_6) = [4603975851531076434_u64,16867901708079983188_u64];
_12 = _3 as usize;
_11 = 102_i8 as f32;
_13 = '\u{3a270}';
_1.fld1 = [3482620376_u32,3329560203_u32,2285721686_u32,4230679929_u32,2217157663_u32,3993901370_u32,1529511583_u32];
Goto(bb2)
}
bb2 = {
_9 = (-9223372036854775808_isize) as i32;
RET = 2019241389947994741_i64;
_6 = core::ptr::addr_of_mut!((*_7));
_6 = core::ptr::addr_of_mut!((*_4));
_11 = 48_i8 as f32;
RET = (-6462891155926656271_i64) | (-2493747715246598011_i64);
_1.fld0 = _10;
_14 = [(-3890746032737889493_i64),(-6593982397263405853_i64),(-3014992655141918497_i64),1101714055829426021_i64,(-1275763529658745895_i64)];
(*_7) = [8199751503182868850_u64,8782748621318115982_u64];
(*_4) = _8;
_5 = (-23873676862159311774428069030426821529_i128) as f64;
_7 = _4;
(*_7) = [14339331349360093358_u64,8073350347684320525_u64];
(*_4) = [1879209624423512604_u64,7176298233252579387_u64];
_11 = 9223372036854775807_isize as f32;
_2 = (_3, _9);
_11 = (-25007_i16) as f32;
(*_6) = [4664657950594555014_u64,5706606020617993122_u64];
_14 = [23469167539289475_i64,7774688826587262309_i64,(-5895241753095520526_i64),(-615227613573697409_i64),6817532484865225665_i64];
_17.fld0.fld2 = _2.1 as u64;
Goto(bb3)
}
bb3 = {
(*_7) = [_17.fld0.fld2,_17.fld0.fld2];
(*_7) = _8;
_16 = -(-24354_i16);
_16 = !(-21552_i16);
_7 = core::ptr::addr_of_mut!((*_7));
(*_4) = [_17.fld0.fld2,_17.fld0.fld2];
_14 = [(-2794379204166021616_i64),94436948518329145_i64,4556318010323584808_i64,6802870719999382645_i64,(-6081817357902978744_i64)];
_2 = (_3, _9);
_17.fld0.fld1 = -(-123_i8);
_7 = core::ptr::addr_of_mut!(_8);
_6 = core::ptr::addr_of_mut!((*_7));
(*_6) = [_17.fld0.fld2,_17.fld0.fld2];
_5 = 9223372036854775807_isize as f64;
_21.1 = 135155950_u32 as f64;
_1.fld0 = _10;
_9 = _2.1 << _12;
Call(_19 = fn7(_17.fld0.fld1, _1, _2, _4, _8, _2.1, _10, (*_4), _16, _13, _1, _1.fld1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_17.fld0.fld2 = _16 as u64;
_20 = _3 + _3;
_18 = _19 << _20;
_17.fld0.fld2 = !16760468319834889636_u64;
_2.1 = _9;
_21.1 = _5 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000396508223539302_f64);
_17.fld0.fld0.0 = core::ptr::addr_of_mut!(_23.fld0);
_17.fld0.fld2 = 79210944316181315_u64 - 16303908298998351784_u64;
(*_6) = [_17.fld0.fld2,_17.fld0.fld2];
_15 = [_3];
_23.fld4 = core::ptr::addr_of_mut!((*_6));
_15 = [_3];
_16 = 1440_i16;
_25.fld1 = _17.fld0.fld1 - _17.fld0.fld1;
_21.2 = 120_u8 % 102_u8;
_15 = [_3];
_22.1 = _12 & _12;
_23.fld6.fld2.fld0 = (-80538448322397834449792460299554265290_i128) >> _2.0;
(*_6) = [_17.fld0.fld2,_17.fld0.fld2];
match _16 {
0 => bb1,
1 => bb2,
1440 => bb5,
_ => bb3
}
}
bb5 = {
_22.2 = _1.fld1;
_23.fld5 = !_2.0;
_26 = core::ptr::addr_of_mut!(_25.fld2);
Goto(bb6)
}
bb6 = {
_1.fld1 = _22.2;
(*_26) = _17.fld0.fld2 | _17.fld0.fld2;
_1.fld1 = [3193371754_u32,3841502778_u32,776450309_u32,975398596_u32,1665095041_u32,921000778_u32,626513796_u32];
_22.1 = !_12;
_7 = _4;
match _19 {
0 => bb7,
114 => bb9,
_ => bb8
}
}
bb7 = {
_9 = (-9223372036854775808_isize) as i32;
RET = 2019241389947994741_i64;
_6 = core::ptr::addr_of_mut!((*_7));
_6 = core::ptr::addr_of_mut!((*_4));
_11 = 48_i8 as f32;
RET = (-6462891155926656271_i64) | (-2493747715246598011_i64);
_1.fld0 = _10;
_14 = [(-3890746032737889493_i64),(-6593982397263405853_i64),(-3014992655141918497_i64),1101714055829426021_i64,(-1275763529658745895_i64)];
(*_7) = [8199751503182868850_u64,8782748621318115982_u64];
(*_4) = _8;
_5 = (-23873676862159311774428069030426821529_i128) as f64;
_7 = _4;
(*_7) = [14339331349360093358_u64,8073350347684320525_u64];
(*_4) = [1879209624423512604_u64,7176298233252579387_u64];
_11 = 9223372036854775807_isize as f32;
_2 = (_3, _9);
_11 = (-25007_i16) as f32;
(*_6) = [4664657950594555014_u64,5706606020617993122_u64];
_14 = [23469167539289475_i64,7774688826587262309_i64,(-5895241753095520526_i64),(-615227613573697409_i64),6817532484865225665_i64];
_17.fld0.fld2 = _2.1 as u64;
Goto(bb3)
}
bb8 = {
_2.1 = _9 << _2.0;
_7 = _6;
(*_7) = [12604300264218570677_u64,5139624136349696941_u64];
_3 = _2.0;
_13 = '\u{74712}';
(*_6) = [4603975851531076434_u64,16867901708079983188_u64];
_12 = _3 as usize;
_11 = 102_i8 as f32;
_13 = '\u{3a270}';
_1.fld1 = [3482620376_u32,3329560203_u32,2285721686_u32,4230679929_u32,2217157663_u32,3993901370_u32,1529511583_u32];
Goto(bb2)
}
bb9 = {
RET = (-8516179531902211539_i64) ^ 7181699846826607765_i64;
(*_7) = [(*_26),(*_26)];
_25.fld0.0 = core::ptr::addr_of_mut!(_23.fld0);
RET = 2605907358018736538_i64 << _2.1;
RET = _23.fld6.fld2.fld0 as i64;
_2 = (_20, _9);
_22 = (_5, _12, _1.fld1);
_23.fld1 = [4317369558531323433_i64,(-2215559305368204894_i64),2251756799177789517_i64,4770411429477282605_i64,(-3869225775297435363_i64)];
_8 = [_25.fld2,_17.fld0.fld2];
_8 = [_25.fld2,(*_26)];
_31.0 = [_25.fld2,_25.fld2,(*_26),_25.fld2,(*_26),(*_26),(*_26)];
RET = !(-194452041252332457_i64);
_23.fld6.fld0 = _3 as usize;
_23.fld6.fld6 = _22.1 as u8;
_24 = _11;
Call((*_6) = core::intrinsics::transmute((*_7)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_23.fld0 = core::ptr::addr_of!(_32.fld0);
_12 = _22.1 / 3319567203143909763_usize;
_2.1 = -_9;
_33.1 = 36330_u16;
_23.fld4 = core::ptr::addr_of_mut!((*_7));
_23.fld6.fld1 = core::ptr::addr_of!(_23.fld6.fld6);
_32.fld3 = core::ptr::addr_of!(_33);
_4 = core::ptr::addr_of_mut!((*_7));
_27 = _23.fld6.fld0;
_32.fld0 = _23.fld6.fld2.fld0;
_22.2 = _1.fld1;
_23.fld6.fld0 = _17.fld0.fld1 as usize;
_25.fld2 = !_17.fld0.fld2;
RET = 7291540821674004826_i64;
_23.fld0 = core::ptr::addr_of!(_23.fld6.fld2.fld0);
_4 = core::ptr::addr_of_mut!(_8);
_33.0 = _22.0 - _5;
_23.fld6.fld0 = _22.1 & _22.1;
_17.fld0.fld1 = _33.1 as i8;
_18 = !_19;
RET = (-7509495806291209800_i64) >> _23.fld6.fld6;
RET = 8828833373808359541_i64;
_19 = _18 * _18;
_20 = _23.fld6.fld6 as u128;
match _16 {
0 => bb5,
1 => bb11,
1440 => bb13,
_ => bb12
}
}
bb11 = {
(*_7) = [_17.fld0.fld2,_17.fld0.fld2];
(*_7) = _8;
_16 = -(-24354_i16);
_16 = !(-21552_i16);
_7 = core::ptr::addr_of_mut!((*_7));
(*_4) = [_17.fld0.fld2,_17.fld0.fld2];
_14 = [(-2794379204166021616_i64),94436948518329145_i64,4556318010323584808_i64,6802870719999382645_i64,(-6081817357902978744_i64)];
_2 = (_3, _9);
_17.fld0.fld1 = -(-123_i8);
_7 = core::ptr::addr_of_mut!(_8);
_6 = core::ptr::addr_of_mut!((*_7));
(*_6) = [_17.fld0.fld2,_17.fld0.fld2];
_5 = 9223372036854775807_isize as f64;
_21.1 = 135155950_u32 as f64;
_1.fld0 = _10;
_9 = _2.1 << _12;
Call(_19 = fn7(_17.fld0.fld1, _1, _2, _4, _8, _2.1, _10, (*_4), _16, _13, _1, _1.fld1), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
_2.1 = _9 << _2.0;
_7 = _6;
(*_7) = [12604300264218570677_u64,5139624136349696941_u64];
_3 = _2.0;
_13 = '\u{74712}';
(*_6) = [4603975851531076434_u64,16867901708079983188_u64];
_12 = _3 as usize;
_11 = 102_i8 as f32;
_13 = '\u{3a270}';
_1.fld1 = [3482620376_u32,3329560203_u32,2285721686_u32,4230679929_u32,2217157663_u32,3993901370_u32,1529511583_u32];
Goto(bb2)
}
bb13 = {
_16 = 28558_i16;
_23.fld3 = _17.fld0.fld0.0;
_37 = _18 ^ _18;
_11 = -_24;
_23.fld2 = false as isize;
_2.0 = !_20;
_19 = _37;
(*_26) = !_17.fld0.fld2;
_21.1 = -_33.0;
_32.fld3 = core::ptr::addr_of!(_33);
_39 = _16 as f64;
_17.fld0.fld2 = _16 as u64;
_32.fld1 = [2002808161_u32,2411375931_u32,3153780063_u32,3726318890_u32,3623959035_u32,2930199963_u32,1792308324_u32];
_38 = (_2, true, _16);
match _16 {
0 => bb14,
1 => bb15,
2 => bb16,
28558 => bb18,
_ => bb17
}
}
bb14 = {
_1.fld1 = _22.2;
(*_26) = _17.fld0.fld2 | _17.fld0.fld2;
_1.fld1 = [3193371754_u32,3841502778_u32,776450309_u32,975398596_u32,1665095041_u32,921000778_u32,626513796_u32];
_22.1 = !_12;
_7 = _4;
match _19 {
0 => bb7,
114 => bb9,
_ => bb8
}
}
bb15 = {
_9 = (-9223372036854775808_isize) as i32;
RET = 2019241389947994741_i64;
_6 = core::ptr::addr_of_mut!((*_7));
_6 = core::ptr::addr_of_mut!((*_4));
_11 = 48_i8 as f32;
RET = (-6462891155926656271_i64) | (-2493747715246598011_i64);
_1.fld0 = _10;
_14 = [(-3890746032737889493_i64),(-6593982397263405853_i64),(-3014992655141918497_i64),1101714055829426021_i64,(-1275763529658745895_i64)];
(*_7) = [8199751503182868850_u64,8782748621318115982_u64];
(*_4) = _8;
_5 = (-23873676862159311774428069030426821529_i128) as f64;
_7 = _4;
(*_7) = [14339331349360093358_u64,8073350347684320525_u64];
(*_4) = [1879209624423512604_u64,7176298233252579387_u64];
_11 = 9223372036854775807_isize as f32;
_2 = (_3, _9);
_11 = (-25007_i16) as f32;
(*_6) = [4664657950594555014_u64,5706606020617993122_u64];
_14 = [23469167539289475_i64,7774688826587262309_i64,(-5895241753095520526_i64),(-615227613573697409_i64),6817532484865225665_i64];
_17.fld0.fld2 = _2.1 as u64;
Goto(bb3)
}
bb16 = {
_17.fld0.fld2 = _16 as u64;
_20 = _3 + _3;
_18 = _19 << _20;
_17.fld0.fld2 = !16760468319834889636_u64;
_2.1 = _9;
_21.1 = _5 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000396508223539302_f64);
_17.fld0.fld0.0 = core::ptr::addr_of_mut!(_23.fld0);
_17.fld0.fld2 = 79210944316181315_u64 - 16303908298998351784_u64;
(*_6) = [_17.fld0.fld2,_17.fld0.fld2];
_15 = [_3];
_23.fld4 = core::ptr::addr_of_mut!((*_6));
_15 = [_3];
_16 = 1440_i16;
_25.fld1 = _17.fld0.fld1 - _17.fld0.fld1;
_21.2 = 120_u8 % 102_u8;
_15 = [_3];
_22.1 = _12 & _12;
_23.fld6.fld2.fld0 = (-80538448322397834449792460299554265290_i128) >> _2.0;
(*_6) = [_17.fld0.fld2,_17.fld0.fld2];
match _16 {
0 => bb1,
1 => bb2,
1440 => bb5,
_ => bb3
}
}
bb17 = {
_22.2 = _1.fld1;
_23.fld5 = !_2.0;
_26 = core::ptr::addr_of_mut!(_25.fld2);
Goto(bb6)
}
bb18 = {
_23.fld6.fld2.fld3 = core::ptr::addr_of!(_33);
_34 = _21.1 * _22.0;
_27 = _24 as usize;
_21.1 = _25.fld2 as f64;
_38 = (_2, false, _16);
_1 = Adt63 { fld0: _10,fld1: _22.2 };
_32.fld2 = core::ptr::addr_of!(_38.1);
_17.fld0.fld2 = 1085022994_u32 as u64;
_44 = _23.fld6.fld0 as i16;
_23.fld6.fld2.fld3 = core::ptr::addr_of!(_33);
_23.fld6.fld2.fld2 = _32.fld2;
_17.fld0 = Move(_25);
_17.fld0.fld0 = (_23.fld3,);
_39 = -_21.1;
_15 = [_38.0.0];
_8 = [_17.fld0.fld2,_17.fld0.fld2];
_19 = _23.fld6.fld6 as isize;
_29 = _12 as i32;
Goto(bb19)
}
bb19 = {
Call(_47 = dump_var(6_usize, 38_usize, Move(_38), 13_usize, Move(_13), 20_usize, Move(_20), 44_usize, Move(_44)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_47 = dump_var(6_usize, 31_usize, Move(_31), 16_usize, Move(_16), 19_usize, Move(_19), 37_usize, Move(_37)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_47 = dump_var(6_usize, 9_usize, Move(_9), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: i8,mut _2: Adt63,mut _3: (u128, i32),mut _4: *mut [u64; 2],mut _5: [u64; 2],mut _6: i32,mut _7: [isize; 3],mut _8: [u64; 2],mut _9: i16,mut _10: char,mut _11: Adt63,mut _12: [u32; 7]) -> isize {
mir! {
type RET = isize;
let _13: u8;
let _14: [u64; 7];
let _15: i128;
let _16: bool;
let _17: Adt54;
let _18: *mut *mut (f64, u16);
let _19: f32;
let _20: [u64; 2];
let _21: f64;
let _22: [i32; 4];
let _23: [isize; 3];
let _24: f64;
let _25: isize;
let _26: char;
let _27: *const *const u8;
let _28: Adt60;
let _29: ([u64; 7],);
let _30: *const i128;
let _31: Adt53;
let _32: u32;
let _33: Adt55;
let _34: u8;
let _35: [i32; 4];
let _36: i128;
let _37: isize;
let _38: f64;
let _39: [u128; 5];
let _40: i32;
let _41: bool;
let _42: f32;
let _43: Adt63;
let _44: u8;
let _45: (f64, u16);
let _46: i8;
let _47: i8;
let _48: ();
let _49: ();
{
_7 = _2.fld0;
_8 = (*_4);
_11.fld1 = _2.fld1;
_11.fld0 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
(*_4) = [9874177201884394972_u64,799351214792172800_u64];
_5 = _8;
RET = 9223372036854775807_isize;
(*_4) = _8;
(*_4) = _5;
_2 = Adt63 { fld0: _11.fld0,fld1: _12 };
(*_4) = [14110394406244992402_u64,7182394521788253725_u64];
_13 = !89_u8;
_11.fld0 = _2.fld0;
_6 = _3.1 - _3.1;
_3.1 = -_6;
_2.fld1 = _11.fld1;
_4 = core::ptr::addr_of_mut!((*_4));
_12 = [3220762363_u32,1685510874_u32,4174939712_u32,2823590761_u32,542798889_u32,1864862_u32,2178529149_u32];
_12 = [3752847907_u32,1089235811_u32,1720917228_u32,2749937805_u32,2828994745_u32,2987065935_u32,576340619_u32];
_1 = 16499_u16 as i8;
_10 = '\u{edcf9}';
RET = -(-20_isize);
_3.0 = _10 as u128;
_11.fld0 = [9223372036854775807_isize,64_isize,61_isize];
_2.fld0 = [(-40_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET = (-9223372036854775808_isize);
_3.0 = (-120949480558031619976339268203264887413_i128) as u128;
_7 = [(-9223372036854775808_isize),9223372036854775807_isize,30_isize];
Call(_3 = fn8(_11.fld0, _9, _12, (*_4), _8, _5, _2.fld1, _7, _9, _11, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = [3705555703_u32,3424011179_u32,842246356_u32,2894263475_u32,1230137302_u32,647118203_u32,4059267712_u32];
_11.fld0 = [(-108_isize),102_isize,(-13_isize)];
_9 = 10428_i16 & 25373_i16;
RET = -(-96_isize);
_13 = 175_u8 & 135_u8;
_3.1 = _6;
_2.fld0 = _11.fld0;
_7 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = Adt63 { fld0: _2.fld0,fld1: _2.fld1 };
_7 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2.fld1 = _11.fld1;
_9 = (-19933_i16);
_4 = core::ptr::addr_of_mut!((*_4));
_2.fld1 = _12;
RET = !(-92_isize);
_9 = 100_isize as i16;
_14 = [7599414200648039371_u64,509061346128179300_u64,6267536031899941618_u64,16870258917416227576_u64,1766139232245161981_u64,4669515218357765590_u64,13637235811312395980_u64];
_11.fld1 = [3146994753_u32,383134905_u32,2513156134_u32,1729014170_u32,335723018_u32,2261076496_u32,3975371986_u32];
_16 = !false;
_2 = _11;
Call(_6 = core::intrinsics::transmute(_3.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = 1277739332_u32 as i8;
_15 = !(-141906497043215105033703334939848926737_i128);
_10 = '\u{cfcf4}';
_7 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-48_isize)];
_14 = [3960307680116046771_u64,10844647372422454422_u64,16407091381053109424_u64,3192818349745716294_u64,4429484262589721144_u64,13382748257759691447_u64,6385637054132503786_u64];
_6 = -_3.1;
_11 = Adt63 { fld0: _7,fld1: _12 };
_11.fld1 = [3523387970_u32,3881903030_u32,1934686912_u32,865164561_u32,1674813488_u32,726976102_u32,1561859185_u32];
_17.fld0.fld3 = [_3.0];
_19 = _13 as f32;
_2.fld0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-92_isize)];
_17.fld0.fld1 = core::ptr::addr_of!(_13);
_17.fld4 = [_3.0,_3.0,_3.0,_3.0,_3.0];
_11 = _2;
_14 = [13218395380463889577_u64,7720280096310286063_u64,16644799675843185544_u64,4834986033682745347_u64,4056697736963304521_u64,7693706715397819326_u64,11513616135119780107_u64];
_2.fld1 = _12;
_17.fld3 = 51334_u16 as i8;
Goto(bb3)
}
bb3 = {
_17.fld4 = [_3.0,_3.0,_3.0,_3.0,_3.0];
_22 = [_6,_6,_6,_6];
_11.fld1 = [976695507_u32,1904541818_u32,1421754956_u32,134892328_u32,450641195_u32,279133750_u32,2831064066_u32];
_22 = [_6,_6,_6,_6];
_14 = [2728525230214140215_u64,3943007718428312878_u64,11319332951494096437_u64,8985281509870523407_u64,5745006399160452383_u64,8246756871904365437_u64,15550733352351132788_u64];
_3.0 = _9 as u128;
_11.fld0 = [9223372036854775807_isize,(-9223372036854775808_isize),(-28_isize)];
_17.fld0.fld3 = [_3.0];
_14 = [15154348555569103919_u64,806892276266853448_u64,2165451837123809558_u64,11301209553269052500_u64,16264766467352559515_u64,12899246569723945577_u64,259952679685235038_u64];
_20 = (*_4);
_24 = _15 as f64;
Goto(bb4)
}
bb4 = {
_5 = [11026102034508627546_u64,14792951580891405531_u64];
_1 = 1011538539_u32 as i8;
_24 = _6 as f64;
_11.fld0 = [123_isize,9223372036854775807_isize,9223372036854775807_isize];
_29 = (_14,);
_23 = [(-9223372036854775808_isize),(-10_isize),(-9223372036854775808_isize)];
_17.fld6 = core::ptr::addr_of!(_14);
RET = 9223372036854775807_isize;
_23 = [115_isize,(-9223372036854775808_isize),45_isize];
_31.fld0.0 = !_3.0;
Goto(bb5)
}
bb5 = {
_26 = _10;
_10 = _26;
_13 = 53_u8 >> _1;
_3 = (_31.fld0.0, _6);
_17.fld0.fld1 = core::ptr::addr_of!(_13);
_6 = _16 as i32;
_17.fld2 = [_6,_6,_3.1,_6];
_16 = !true;
Goto(bb6)
}
bb6 = {
_28.fld2 = [(-4699180649318746305_i64),(-4503975579636163831_i64),4472387991914247297_i64,3567277400845254568_i64,2639467654163774515_i64];
_33.fld6.fld1 = _1 >> _13;
_16 = !false;
_30 = core::ptr::addr_of!(_15);
_33.fld2 = core::ptr::addr_of_mut!(_30);
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_17.fld6 = core::ptr::addr_of!(_14);
(*_30) = !(-92326573899959572448433157670398706546_i128);
_5 = (*_4);
_33.fld6.fld1 = !_17.fld3;
_33.fld6.fld2 = (*_30) as u64;
_27 = core::ptr::addr_of!(_17.fld0.fld1);
_28.fld5 = _17.fld2;
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_28.fld3 = _33.fld6.fld1 + _33.fld6.fld1;
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_33.fld5 = _33.fld6.fld2;
Goto(bb7)
}
bb7 = {
_28.fld5 = [_31.fld0.1,_6,_31.fld0.1,_31.fld0.1];
_28.fld4 = [_3.0,_31.fld0.0,_3.0,_31.fld0.0];
RET = -9223372036854775807_isize;
_35 = _17.fld2;
_31.fld0.0 = _33.fld5 as u128;
RET = (-9223372036854775808_isize) + 9223372036854775807_isize;
_33.fld0 = _1 == _1;
_33.fld1 = (*_30) & _15;
_9 = (-27789_i16) | 7994_i16;
_11.fld0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_9 = !(-29665_i16);
_17.fld7 = core::ptr::addr_of_mut!(_33.fld6.fld2);
_2 = Adt63 { fld0: _23,fld1: _11.fld1 };
_2.fld1 = [2573975838_u32,1554553064_u32,1429306450_u32,37960084_u32,3506894829_u32,1619513484_u32,4075901837_u32];
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_11 = Adt63 { fld0: _7,fld1: _2.fld1 };
Goto(bb8)
}
bb8 = {
_33.fld3 = [_31.fld0.0,_31.fld0.0,_31.fld0.0,_3.0];
_35 = [_6,_3.1,_6,_3.1];
RET = 114_isize;
_27 = core::ptr::addr_of!((*_27));
(*_30) = _33.fld6.fld2 as i128;
_21 = _24;
_33.fld6.fld0.0 = core::ptr::addr_of_mut!(_30);
_24 = 24272_u16 as f64;
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_20 = (*_4);
_32 = _19 as u32;
(*_30) = !_33.fld1;
Goto(bb9)
}
bb9 = {
_17.fld2 = [_6,_6,_3.1,_31.fld0.1];
_33.fld2 = core::ptr::addr_of_mut!(_30);
_17.fld0.fld3 = [_31.fld0.0];
_26 = _10;
_32 = 573814041_u32;
_40 = _3.1 >> _33.fld1;
_38 = _21;
match _32 {
0 => bb7,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
573814041 => bb12,
_ => bb11
}
}
bb10 = {
_33.fld3 = [_31.fld0.0,_31.fld0.0,_31.fld0.0,_3.0];
_35 = [_6,_3.1,_6,_3.1];
RET = 114_isize;
_27 = core::ptr::addr_of!((*_27));
(*_30) = _33.fld6.fld2 as i128;
_21 = _24;
_33.fld6.fld0.0 = core::ptr::addr_of_mut!(_30);
_24 = 24272_u16 as f64;
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_20 = (*_4);
_32 = _19 as u32;
(*_30) = !_33.fld1;
Goto(bb9)
}
bb11 = {
_28.fld2 = [(-4699180649318746305_i64),(-4503975579636163831_i64),4472387991914247297_i64,3567277400845254568_i64,2639467654163774515_i64];
_33.fld6.fld1 = _1 >> _13;
_16 = !false;
_30 = core::ptr::addr_of!(_15);
_33.fld2 = core::ptr::addr_of_mut!(_30);
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_17.fld6 = core::ptr::addr_of!(_14);
(*_30) = !(-92326573899959572448433157670398706546_i128);
_5 = (*_4);
_33.fld6.fld1 = !_17.fld3;
_33.fld6.fld2 = (*_30) as u64;
_27 = core::ptr::addr_of!(_17.fld0.fld1);
_28.fld5 = _17.fld2;
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_28.fld3 = _33.fld6.fld1 + _33.fld6.fld1;
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_33.fld5 = _33.fld6.fld2;
Goto(bb7)
}
bb12 = {
_23 = _7;
_38 = -_21;
_25 = -9223372036854775807_isize;
_29 = (_14,);
(*_4) = [_33.fld5,_33.fld5];
_39 = [_3.0,_3.0,_31.fld0.0,_31.fld0.0,_31.fld0.0];
_9 = 5_usize as i16;
_43 = Adt63 { fld0: _11.fld0,fld1: _11.fld1 };
_9 = !(-11207_i16);
_3.1 = _40;
_41 = _33.fld0;
_39 = _17.fld4;
_21 = _33.fld6.fld2 as f64;
_10 = _26;
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_1 = _28.fld3;
(*_27) = core::ptr::addr_of!(_44);
_39 = _17.fld4;
_17.fld5 = core::ptr::addr_of!(_13);
_30 = core::ptr::addr_of!(_36);
_33.fld0 = !_16;
match _32 {
0 => bb3,
1 => bb13,
2 => bb14,
3 => bb15,
573814041 => bb17,
_ => bb16
}
}
bb13 = {
_28.fld2 = [(-4699180649318746305_i64),(-4503975579636163831_i64),4472387991914247297_i64,3567277400845254568_i64,2639467654163774515_i64];
_33.fld6.fld1 = _1 >> _13;
_16 = !false;
_30 = core::ptr::addr_of!(_15);
_33.fld2 = core::ptr::addr_of_mut!(_30);
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_17.fld6 = core::ptr::addr_of!(_14);
(*_30) = !(-92326573899959572448433157670398706546_i128);
_5 = (*_4);
_33.fld6.fld1 = !_17.fld3;
_33.fld6.fld2 = (*_30) as u64;
_27 = core::ptr::addr_of!(_17.fld0.fld1);
_28.fld5 = _17.fld2;
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_28.fld3 = _33.fld6.fld1 + _33.fld6.fld1;
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_33.fld5 = _33.fld6.fld2;
Goto(bb7)
}
bb14 = {
_33.fld3 = [_31.fld0.0,_31.fld0.0,_31.fld0.0,_3.0];
_35 = [_6,_3.1,_6,_3.1];
RET = 114_isize;
_27 = core::ptr::addr_of!((*_27));
(*_30) = _33.fld6.fld2 as i128;
_21 = _24;
_33.fld6.fld0.0 = core::ptr::addr_of_mut!(_30);
_24 = 24272_u16 as f64;
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_20 = (*_4);
_32 = _19 as u32;
(*_30) = !_33.fld1;
Goto(bb9)
}
bb15 = {
_17.fld2 = [_6,_6,_3.1,_31.fld0.1];
_33.fld2 = core::ptr::addr_of_mut!(_30);
_17.fld0.fld3 = [_31.fld0.0];
_26 = _10;
_32 = 573814041_u32;
_40 = _3.1 >> _33.fld1;
_38 = _21;
match _32 {
0 => bb7,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
573814041 => bb12,
_ => bb11
}
}
bb16 = {
_28.fld5 = [_31.fld0.1,_6,_31.fld0.1,_31.fld0.1];
_28.fld4 = [_3.0,_31.fld0.0,_3.0,_31.fld0.0];
RET = -9223372036854775807_isize;
_35 = _17.fld2;
_31.fld0.0 = _33.fld5 as u128;
RET = (-9223372036854775808_isize) + 9223372036854775807_isize;
_33.fld0 = _1 == _1;
_33.fld1 = (*_30) & _15;
_9 = (-27789_i16) | 7994_i16;
_11.fld0 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_9 = !(-29665_i16);
_17.fld7 = core::ptr::addr_of_mut!(_33.fld6.fld2);
_2 = Adt63 { fld0: _23,fld1: _11.fld1 };
_2.fld1 = [2573975838_u32,1554553064_u32,1429306450_u32,37960084_u32,3506894829_u32,1619513484_u32,4075901837_u32];
_31 = Adt53 { fld0: _3,fld1: _17.fld6,fld2: _17.fld4 };
_11 = Adt63 { fld0: _7,fld1: _2.fld1 };
Goto(bb8)
}
bb17 = {
_17.fld0.fld2 = core::ptr::addr_of!(_28.fld4);
_28.fld5 = [_31.fld0.1,_3.1,_40,_3.1];
_33.fld3 = [_31.fld0.0,_31.fld0.0,_31.fld0.0,_3.0];
(*_30) = _16 as i128;
_11.fld1 = _12;
_17.fld3 = _28.fld3 * _33.fld6.fld1;
_2 = _43;
_2 = _43;
_3 = (_31.fld0.0, _31.fld0.1);
_45.0 = _24;
_28.fld2 = [8035172354554300635_i64,(-3625166646789337720_i64),(-4147771288297690012_i64),(-287392015857322928_i64),(-7921181448093998215_i64)];
_28.fld3 = -_1;
_33.fld4 = core::ptr::addr_of!(_31.fld1);
_4 = core::ptr::addr_of_mut!((*_4));
_43 = Adt63 { fld0: _11.fld0,fld1: _12 };
_12 = [_32,_32,_32,_32,_32,_32,_32];
_37 = _25;
Goto(bb18)
}
bb18 = {
Call(_48 = dump_var(7_usize, 41_usize, Move(_41), 20_usize, Move(_20), 6_usize, Move(_6), 36_usize, Move(_36)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_48 = dump_var(7_usize, 29_usize, Move(_29), 22_usize, Move(_22), 25_usize, Move(_25), 13_usize, Move(_13)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_48 = dump_var(7_usize, 7_usize, Move(_7), 35_usize, Move(_35), 9_usize, Move(_9), 40_usize, Move(_40)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_48 = dump_var(7_usize, 15_usize, Move(_15), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [isize; 3],mut _2: i16,mut _3: [u32; 7],mut _4: [u64; 2],mut _5: [u64; 2],mut _6: [u64; 2],mut _7: [u32; 7],mut _8: [isize; 3],mut _9: i16,mut _10: Adt63,mut _11: *mut [u64; 2]) -> (u128, i32) {
mir! {
type RET = (u128, i32);
let _12: [u32; 7];
let _13: (u128, i32);
let _14: Adt55;
let _15: Adt51;
let _16: bool;
let _17: isize;
let _18: [u128; 1];
let _19: char;
let _20: (u128, i32);
let _21: ((u128, i32), u128);
let _22: i64;
let _23: u8;
let _24: f32;
let _25: *const (f64, u16);
let _26: isize;
let _27: [u64; 7];
let _28: usize;
let _29: bool;
let _30: [u128; 4];
let _31: *const [u64; 7];
let _32: bool;
let _33: ([u64; 7],);
let _34: u8;
let _35: f32;
let _36: isize;
let _37: isize;
let _38: [u128; 4];
let _39: [isize; 3];
let _40: ([u64; 7],);
let _41: u8;
let _42: bool;
let _43: i16;
let _44: isize;
let _45: [isize; 3];
let _46: Adt53;
let _47: (f64, u16);
let _48: u64;
let _49: i64;
let _50: isize;
let _51: ();
let _52: ();
{
RET.0 = 115509697065020088423603377328109845268_u128 & 36901677703494179281829667108089834473_u128;
_12 = [4144103304_u32,4119068794_u32,879269779_u32,3771622117_u32,1380091676_u32,2544835231_u32,4152397340_u32];
RET.0 = !198646794542459502254504267724965952313_u128;
(*_11) = [18360531892945282988_u64,11084674733201476751_u64];
_3 = [3107405314_u32,4054752658_u32,747325186_u32,617066772_u32,927319712_u32,1525601601_u32,2414159685_u32];
_13 = (10708836486313993097084445506586365699_u128, 1465277524_i32);
_14.fld0 = !true;
_4 = [6898498613804286745_u64,14963496470675819003_u64];
Goto(bb1)
}
bb1 = {
_14.fld5 = 16751611887341553989_u64 & 12095517099636704111_u64;
RET = _13;
_13.0 = 135193490700639267525080067074188597051_u128 >> _13.1;
RET.1 = !_13.1;
RET.1 = !_13.1;
_14.fld3 = [_13.0,_13.0,_13.0,_13.0];
_10 = Adt63 { fld0: _1,fld1: _7 };
_15.fld4 = core::ptr::addr_of!(_14.fld3);
(*_11) = [_14.fld5,_14.fld5];
_14.fld0 = _13.0 == _13.0;
_16 = _14.fld0;
_15.fld2 = _13.0 as f64;
_14.fld1 = -98793786102010806620736407519589974039_i128;
_14.fld6.fld1 = 102_i8;
_10.fld0 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_15.fld1.fld3 = [_13.0];
_12 = _10.fld1;
_14.fld5 = 18309316840705996931_u64 ^ 17003372223745030716_u64;
_21 = (_13, _13.0);
_13.1 = '\u{102e03}' as i32;
_12 = [301458461_u32,3540558591_u32,1358403165_u32,2758621459_u32,4005791834_u32,1948620301_u32,4229320886_u32];
_18 = [_13.0];
Goto(bb2)
}
bb2 = {
_11 = core::ptr::addr_of_mut!(_4);
_15.fld3 = !2_usize;
_15.fld1.fld1 = core::ptr::addr_of!(_23);
_23 = !13_u8;
_14.fld6.fld1 = (-96_i8);
_13.1 = _21.0.1 + _21.0.1;
Goto(bb3)
}
bb3 = {
_21.0.0 = !_21.1;
_14.fld3 = [_13.0,_21.0.0,_21.0.0,_13.0];
_10.fld1 = _3;
_14.fld1 = _15.fld2 as i128;
_24 = _14.fld5 as f32;
_14.fld6.fld2 = _14.fld5 - _14.fld5;
_20.0 = '\u{f5c1a}' as u128;
_21 = (_13, _20.0);
_21.0.0 = !_13.0;
_13.1 = !_21.0.1;
_22 = -5907874335043096705_i64;
_10 = Adt63 { fld0: _1,fld1: _12 };
_15.fld5 = [_21.0.0,_21.0.0,_13.0,_13.0];
_26 = -9223372036854775807_isize;
_19 = '\u{4fcd6}';
_10.fld1 = [2312694613_u32,3878876297_u32,3429350356_u32,969256902_u32,3167742467_u32,1805996179_u32,2731674231_u32];
_19 = '\u{8f18f}';
_15.fld2 = _26 as f64;
(*_11) = [_14.fld6.fld2,_14.fld6.fld2];
RET = _13;
_27 = [_14.fld5,_14.fld6.fld2,_14.fld6.fld2,_14.fld6.fld2,_14.fld6.fld2,_14.fld6.fld2,_14.fld5];
_11 = core::ptr::addr_of_mut!(_6);
Call(_14 = fn9(_10, _7, (*_11), _8, _16, _12, _9, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_14.fld3 = [_21.0.0,_13.0,_21.0.0,_13.0];
_5 = [_14.fld6.fld2,_14.fld6.fld2];
_14.fld1 = (-75324506981950050808541073821435357116_i128) << _21.0.1;
_28 = _15.fld3;
_10.fld1 = [2426051406_u32,1014977501_u32,3144874182_u32,3194896468_u32,921221084_u32,984075661_u32,282801189_u32];
_14.fld5 = !_14.fld6.fld2;
_23 = !43_u8;
_13.0 = _21.1 * _21.1;
_6 = [_14.fld5,_14.fld5];
_15.fld1.fld2 = _15.fld4;
_21.0.1 = !_13.1;
_17 = _26;
RET = (_13.0, _13.1);
_29 = _14.fld6.fld1 < _14.fld6.fld1;
_4 = _6;
_14.fld4 = core::ptr::addr_of!(_31);
_14.fld6.fld1 = 56_i8 >> _21.0.1;
_19 = '\u{7a77c}';
_32 = _14.fld0 & _16;
_2 = _9 << _14.fld6.fld1;
_20.1 = _15.fld3 as i32;
_9 = _2 ^ _2;
RET.1 = !_21.0.1;
_14.fld6.fld1 = (-33_i8);
_8 = [_17,_17,_26];
Goto(bb5)
}
bb5 = {
RET.0 = 19485_u16 as u128;
_21.0.1 = _13.1;
_31 = core::ptr::addr_of!(_27);
_2 = _13.0 as i16;
_12 = [3671222292_u32,1976513840_u32,3620138750_u32,2717832070_u32,2775044696_u32,3359458574_u32,315337050_u32];
_14.fld6.fld1 = (-40_i8) & (-100_i8);
_15.fld1.fld3 = [_21.0.0];
_26 = !_17;
_26 = _17 >> _9;
_22 = _14.fld1 as i64;
_20.1 = _21.0.1;
_32 = _14.fld0;
_13 = _20;
(*_31) = [_14.fld6.fld2,_14.fld5,_14.fld5,_14.fld5,_14.fld6.fld2,_14.fld6.fld2,_14.fld6.fld2];
_8 = _10.fld0;
_33 = ((*_31),);
_33.0 = [_14.fld5,_14.fld5,_14.fld6.fld2,_14.fld5,_14.fld5,_14.fld5,_14.fld5];
_9 = _2;
_9 = -_2;
Goto(bb6)
}
bb6 = {
_32 = !_14.fld0;
_10 = Adt63 { fld0: _1,fld1: _12 };
RET.1 = -_21.0.1;
_14.fld3 = [_20.0,_21.1,_21.0.0,_21.1];
_18 = [_21.0.0];
_11 = core::ptr::addr_of_mut!(_4);
_6 = [_14.fld5,_14.fld6.fld2];
_15.fld3 = _22 as usize;
_27 = [_14.fld5,_14.fld6.fld2,_14.fld5,_14.fld5,_14.fld5,_14.fld5,_14.fld5];
_16 = _32;
_14.fld3 = [_21.0.0,_13.0,_21.0.0,_21.0.0];
_10.fld0 = _8;
_14.fld1 = (-127015737056772607580930625678155477973_i128) & 70071414459165875749773176945274214384_i128;
_14.fld4 = core::ptr::addr_of!(_31);
_14.fld0 = _32;
RET.1 = _21.0.1 ^ _20.1;
_10.fld1 = [2845256617_u32,1513872638_u32,633490007_u32,2978084831_u32,300962011_u32,1737977906_u32,1543204974_u32];
_10.fld0 = _1;
Goto(bb7)
}
bb7 = {
_23 = !95_u8;
Goto(bb8)
}
bb8 = {
_29 = _32 <= _14.fld0;
_36 = _26;
_13 = (_21.0.0, _21.0.1);
RET = (_20.0, _21.0.1);
_15.fld5 = [_21.1,_13.0,_13.0,_13.0];
_38 = _15.fld5;
RET = _20;
_21.0 = _13;
_16 = _14.fld0 ^ _29;
_31 = core::ptr::addr_of!(_27);
_19 = '\u{101711}';
_8 = _1;
_34 = _23;
_30 = [_20.0,_20.0,_13.0,_21.0.0];
_14.fld5 = _14.fld6.fld2 - _14.fld6.fld2;
RET.0 = _13.0;
RET.1 = -_21.0.1;
(*_11) = [_14.fld5,_14.fld6.fld2];
_21.0 = _20;
RET.1 = -_21.0.1;
_39 = [_26,_26,_26];
_29 = !_14.fld0;
_15.fld1.fld1 = core::ptr::addr_of!(_23);
Goto(bb9)
}
bb9 = {
RET.1 = _15.fld2 as i32;
_20 = (_13.0, _21.0.1);
RET.0 = _14.fld6.fld1 as u128;
_40.0 = (*_31);
_13.1 = !_21.0.1;
RET = _20;
_5 = (*_11);
Goto(bb10)
}
bb10 = {
_36 = _26 << _15.fld3;
_15.fld1.fld1 = core::ptr::addr_of!(_41);
_14.fld0 = _16;
_15.fld5 = [_21.1,_21.0.0,_21.1,_21.1];
_11 = core::ptr::addr_of_mut!(_4);
_6 = (*_11);
_23 = _26 as u8;
_7 = [1187027253_u32,502868903_u32,1261189040_u32,760452881_u32,1287948675_u32,111608141_u32,3510111823_u32];
_40 = (_27,);
_21.1 = _20.0;
Goto(bb11)
}
bb11 = {
_2 = _9 >> _36;
_1 = [_26,_36,_26];
_15.fld1.fld2 = core::ptr::addr_of!(_30);
_38 = _14.fld3;
_11 = core::ptr::addr_of_mut!((*_11));
Goto(bb12)
}
bb12 = {
_14.fld0 = _14.fld5 < _14.fld5;
_44 = _36 ^ _36;
_34 = _23 % 196_u8;
_17 = _16 as isize;
_3 = _12;
_42 = !_16;
_46.fld0 = _21.0;
_14.fld5 = _14.fld6.fld2;
Goto(bb13)
}
bb13 = {
_7 = [993347985_u32,2345749706_u32,1927640915_u32,3719827010_u32,2123565384_u32,887460007_u32,3219395622_u32];
_42 = _16;
_31 = core::ptr::addr_of!((*_31));
_6 = (*_11);
_15.fld5 = _38;
_15.fld1.fld2 = core::ptr::addr_of!(_15.fld5);
_4 = [_14.fld5,_14.fld5];
_18 = [_21.1];
_1 = [_44,_44,_44];
_21 = (_46.fld0, _20.0);
RET.1 = _46.fld0.1 - _46.fld0.1;
_15.fld1.fld1 = core::ptr::addr_of!(_23);
_46.fld2 = [_13.0,_21.0.0,_20.0,_13.0,_20.0];
_3 = [1480490958_u32,1389859855_u32,507129628_u32,3782256662_u32,2392549758_u32,15305313_u32,3580978675_u32];
RET = (_21.1, _21.0.1);
_13.1 = _46.fld0.1 >> _36;
_47.0 = _15.fld2;
_33.0 = [_14.fld5,_14.fld6.fld2,_14.fld5,_14.fld6.fld2,_14.fld6.fld2,_14.fld5,_14.fld6.fld2];
Goto(bb14)
}
bb14 = {
_45 = [_36,_44,_44];
_35 = _24 - _24;
_15.fld3 = _23 as usize;
_43 = 1294015873_u32 as i16;
_14.fld4 = core::ptr::addr_of!(_46.fld1);
_14.fld3 = _38;
_40 = (_33.0,);
_46.fld0 = (_13.0, _13.1);
_25 = core::ptr::addr_of!(_47);
_39 = _10.fld0;
_46.fld0.1 = _21.0.1 - _13.1;
(*_25) = (_15.fld2, 49334_u16);
(*_25).0 = -_15.fld2;
_43 = _2 * _2;
_13.0 = _21.1;
_28 = !_15.fld3;
_21.1 = (*_25).0 as u128;
(*_25).0 = _15.fld2 * _15.fld2;
_17 = _44;
_21.0.0 = _13.0;
Goto(bb15)
}
bb15 = {
Call(_51 = dump_var(8_usize, 3_usize, Move(_3), 36_usize, Move(_36), 32_usize, Move(_32), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_51 = dump_var(8_usize, 45_usize, Move(_45), 23_usize, Move(_23), 6_usize, Move(_6), 44_usize, Move(_44)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(8_usize, 18_usize, Move(_18), 43_usize, Move(_43), 27_usize, Move(_27), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_51 = dump_var(8_usize, 19_usize, Move(_19), 8_usize, Move(_8), 17_usize, Move(_17), 40_usize, Move(_40)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_51 = dump_var(8_usize, 22_usize, Move(_22), 52_usize, _52, 52_usize, _52, 52_usize, _52), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: Adt63,mut _2: [u32; 7],mut _3: [u64; 2],mut _4: [isize; 3],mut _5: bool,mut _6: [u32; 7],mut _7: i16,mut _8: bool) -> Adt55 {
mir! {
type RET = Adt55;
let _9: Adt58;
let _10: isize;
let _11: char;
let _12: (f64, u16);
let _13: bool;
let _14: ((u128, i32), u128);
let _15: f32;
let _16: [u128; 1];
let _17: bool;
let _18: u32;
let _19: f32;
let _20: Adt62;
let _21: bool;
let _22: *mut *mut (f64, u16);
let _23: char;
let _24: f32;
let _25: ((u128, i32), bool, i16);
let _26: *const i128;
let _27: Adt59;
let _28: *const [u64; 7];
let _29: Adt54;
let _30: isize;
let _31: f32;
let _32: (u128, i32);
let _33: char;
let _34: i16;
let _35: isize;
let _36: [u128; 4];
let _37: f64;
let _38: bool;
let _39: ();
let _40: ();
{
_9.fld2.fld0 = !124205649260489914152333923223192062428_i128;
RET.fld3 = [110698819017481748475726464138283061242_u128,20725476396122814775390527552316084006_u128,202548867018326037851013870704079220818_u128,16483671749572514862455302912179769207_u128];
RET.fld6.fld2 = !13172730972403953587_u64;
_9.fld1 = core::ptr::addr_of!(_9.fld6);
_9.fld3 = 66_i8 >> _7;
RET.fld3 = [82614110278717023779267325498463714040_u128,222065056659550209585297157447210513359_u128,93790857419683592839452383767262276353_u128,195373456427157285358929548931777367235_u128];
_9.fld2.fld0 = (-138510175892796475215753281107038214976_i128);
Call(RET.fld6.fld1 = fn10(_4, _9.fld2.fld0, _1.fld0, _3, _1.fld0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.fld5 = _9.fld2.fld0 as u64;
_2 = [896679648_u32,2584871151_u32,1371198787_u32,3320033663_u32,2275143198_u32,3580353824_u32,3827826413_u32];
RET.fld0 = !_8;
_9.fld2.fld2 = core::ptr::addr_of!(_5);
RET.fld0 = _8 & _8;
_9.fld3 = 42_i8;
_2 = _1.fld1;
_9.fld0 = 0_usize << _9.fld2.fld0;
_9.fld2.fld2 = core::ptr::addr_of!(_8);
_1.fld1 = _6;
RET.fld1 = _9.fld2.fld0;
RET.fld5 = 7027115157626374537_u64 >> _7;
_6 = _2;
_1.fld0 = [112_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9.fld4 = [213833624472218712249626195251940818546_u128];
_7 = -(-14904_i16);
_6 = [3101829270_u32,1741502478_u32,580047756_u32,912915436_u32,486179309_u32,906135920_u32,1616629236_u32];
RET.fld0 = _5 ^ _8;
RET.fld3 = [190872528950268601225529613762390510937_u128,37306892419872058463491984874660281080_u128,23520700048435125742197712545390858242_u128,152605899289726094069348195853647329009_u128];
RET.fld1 = _9.fld2.fld0 ^ _9.fld2.fld0;
_9.fld6 = !247_u8;
_7 = 3024_i16;
_3 = [12766533215589795145_u64,4637141320591267027_u64];
RET.fld6.fld2 = !11277667673801466678_u64;
RET.fld5 = _9.fld3 as u64;
RET.fld6.fld1 = -_9.fld3;
RET.fld1 = _9.fld2.fld0;
_1.fld1 = _2;
_5 = !_8;
_9.fld2.fld0 = (-28244783464271101754925348910299781427_i128);
match _9.fld2.fld0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
312037583456667361708449258521468430029 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_7 = _9.fld6 as i16;
_1.fld0 = [(-126_isize),89_isize,(-80_isize)];
_1 = Adt63 { fld0: _4,fld1: _6 };
_9.fld2.fld1 = _2;
_9.fld2.fld2 = core::ptr::addr_of!(_8);
_1 = Adt63 { fld0: _4,fld1: _9.fld2.fld1 };
_9.fld2.fld0 = -8743491172644999487729680587954325809_i128;
_7 = -(-30920_i16);
RET.fld0 = _5 | _5;
RET.fld6.fld2 = 3493596231060484375_u64 >> _9.fld0;
_12.1 = !24205_u16;
_9.fld2.fld3 = core::ptr::addr_of!(_12);
_6 = [3497912105_u32,462813269_u32,1099843830_u32,2393185774_u32,2464124634_u32,382469313_u32,2143895513_u32];
_7 = (-6759_i16) * 16433_i16;
_13 = !_5;
_1 = Adt63 { fld0: _4,fld1: _6 };
match _9.fld3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
42 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_14.1 = 96186261024137249860150466614791825156_u128;
_1 = Adt63 { fld0: _4,fld1: _6 };
RET.fld6.fld1 = -_9.fld3;
_12.0 = 2795906210_u32 as f64;
_9.fld2.fld1 = [1602086624_u32,3026306571_u32,1213378067_u32,4091022361_u32,1879542424_u32,1263454546_u32,3653378477_u32];
_11 = '\u{66760}';
_7 = -(-4330_i16);
RET.fld5 = !2711760695839354019_u64;
_14.0.1 = _9.fld3 as i32;
_6 = _9.fld2.fld1;
Goto(bb12)
}
bb12 = {
RET.fld3 = [_14.1,_14.1,_14.1,_14.1];
_9.fld2.fld2 = core::ptr::addr_of!(_5);
_17 = _8;
_1.fld0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5 = _17;
_9.fld2.fld0 = (-161061247738498336751555017416706482814_i128);
RET.fld3 = [_14.1,_14.1,_14.1,_14.1];
_14.0 = (_14.1, (-1940009951_i32));
_17 = _13;
Goto(bb13)
}
bb13 = {
RET.fld6.fld1 = _9.fld3;
_16 = [_14.0.0];
_9.fld2.fld0 = 133175348888139393033784934871503166566_i128 << _14.0.0;
_15 = _7 as f32;
RET.fld2 = core::ptr::addr_of_mut!(_20.fld0);
_14.0.1 = _9.fld2.fld0 as i32;
_20.fld6.fld2.fld1 = _6;
RET.fld1 = _9.fld2.fld0 >> _9.fld0;
_16 = [_14.1];
_20.fld7 = !_12.1;
Goto(bb14)
}
bb14 = {
_20.fld6.fld6 = _9.fld3 as u8;
_14.0.1 = _13 as i32;
_9.fld4 = [_14.1];
match _14.0.0 {
0 => bb1,
1 => bb11,
2 => bb12,
96186261024137249860150466614791825156 => bb15,
_ => bb4
}
}
bb15 = {
_20.fld2 = 12_isize;
_19 = _15;
_20.fld6.fld2.fld2 = core::ptr::addr_of!(_17);
_1.fld0 = [_20.fld2,_20.fld2,_20.fld2];
_17 = _13 | _5;
_11 = '\u{22c21}';
match _20.fld2 {
0 => bb8,
12 => bb16,
_ => bb11
}
}
bb16 = {
RET.fld1 = !_9.fld2.fld0;
_27.fld4.fld1 = core::ptr::addr_of!(_27.fld3.0);
RET.fld6.fld0.0 = core::ptr::addr_of_mut!(_26);
_20.fld6.fld6 = !_9.fld6;
_14.0.0 = _14.1;
_20.fld6.fld5 = core::ptr::addr_of!(_27.fld4.fld1);
_25.2 = _7;
_27.fld3.0 = [11765531923433165215_u64,17978322990250966776_u64,13713045838290674439_u64,16989020355070291736_u64,13555450447261929063_u64,7130583781946079296_u64,14568520180664354193_u64];
_1 = Adt63 { fld0: _4,fld1: _2 };
_13 = _17;
_27.fld4.fld0.1 = !_14.0.1;
_20.fld6.fld2 = Adt52 { fld0: _9.fld2.fld0,fld1: _2,fld2: _9.fld2.fld2,fld3: _9.fld2.fld3 };
match _9.fld3 {
0 => bb7,
1 => bb9,
2 => bb4,
3 => bb17,
4 => bb18,
5 => bb19,
42 => bb21,
_ => bb20
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
RET.fld3 = [_14.1,_14.1,_14.1,_14.1];
_9.fld2.fld2 = core::ptr::addr_of!(_5);
_17 = _8;
_1.fld0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5 = _17;
_9.fld2.fld0 = (-161061247738498336751555017416706482814_i128);
RET.fld3 = [_14.1,_14.1,_14.1,_14.1];
_14.0 = (_14.1, (-1940009951_i32));
_17 = _13;
Goto(bb13)
}
bb21 = {
RET.fld6.fld1 = _9.fld3;
_29.fld4 = [_14.1,_14.1,_14.0.0,_14.1,_14.1];
RET.fld0 = _13;
_29.fld2 = [_14.0.1,_14.0.1,_27.fld4.fld0.1,_27.fld4.fld0.1];
_25.0.0 = 1501068407_u32 as u128;
_16 = [_25.0.0];
_20.fld6.fld3 = -_9.fld3;
_32 = (_14.0.0, _14.0.1);
_9.fld2.fld2 = _20.fld6.fld2.fld2;
_1.fld0 = [_20.fld2,_20.fld2,_20.fld2];
_28 = core::ptr::addr_of!(_27.fld3.0);
RET.fld6.fld2 = 11085639775205749624_u64 - 17957571152264344246_u64;
_24 = _15;
_14 = (_32, _32.0);
_29.fld3 = _14.1 as i8;
_20.fld6.fld1 = core::ptr::addr_of!(_20.fld6.fld6);
_20.fld3 = core::ptr::addr_of_mut!(_20.fld0);
match _9.fld3 {
0 => bb1,
1 => bb13,
42 => bb22,
_ => bb7
}
}
bb22 = {
_10 = _9.fld3 as isize;
_29.fld6 = core::ptr::addr_of!(_27.fld3.0);
_29.fld0.fld1 = core::ptr::addr_of!(_9.fld6);
_30 = !_10;
_27.fld4.fld0.0 = _14.1;
RET.fld3 = [_27.fld4.fld0.0,_14.1,_32.0,_32.0];
_24 = _19;
_9.fld6 = _24 as u8;
_10 = _9.fld6 as isize;
_35 = _30;
RET.fld5 = 5437688871491466936_u64;
_10 = _12.0 as isize;
RET.fld4 = _20.fld6.fld5;
_27.fld1.fld1 = core::ptr::addr_of!(_20.fld6.fld6);
_30 = -_35;
_20.fld1 = [6727994161076202004_i64,1358108002270070874_i64,(-4625499131667963715_i64),(-8789403929265505246_i64),(-4828573030166636364_i64)];
(*_28) = [29981468995608377_u64,10179907578209192809_u64,3361170223808341442_u64,1601140515473911020_u64,4389529146724149373_u64,3792339616365171091_u64,11182761358203757980_u64];
_27.fld1.fld3 = [_32.0];
(*_28) = [3283614661912697273_u64,2414027603529583325_u64,14954565912175349997_u64,10785363715353828629_u64,16832017515268460003_u64,9529483753893610596_u64,17668917549709822491_u64];
_32 = (_14.1, _27.fld4.fld0.1);
_20.fld6.fld2.fld0 = -_9.fld2.fld0;
Goto(bb23)
}
bb23 = {
Call(_39 = dump_var(9_usize, 30_usize, Move(_30), 35_usize, Move(_35), 32_usize, Move(_32), 17_usize, Move(_17)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_39 = dump_var(9_usize, 14_usize, Move(_14), 7_usize, Move(_7), 3_usize, Move(_3), 10_usize, Move(_10)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [isize; 3],mut _2: i128,mut _3: [isize; 3],mut _4: [u64; 2],mut _5: [isize; 3]) -> i8 {
mir! {
type RET = i8;
let _6: Adt48;
let _7: [u32; 7];
let _8: f64;
let _9: Adt49;
let _10: *mut *mut (f64, u16);
let _11: [u64; 2];
let _12: [u128; 1];
let _13: u64;
let _14: (u128, i32);
let _15: isize;
let _16: [u128; 4];
let _17: u128;
let _18: f64;
let _19: [u128; 4];
let _20: [u64; 7];
let _21: ((u128, i32), u128);
let _22: *mut [u64; 2];
let _23: bool;
let _24: ((u128, i32), u128);
let _25: ();
let _26: ();
{
_2 = (-58914655799185397999269632572229908164_i128);
RET = -(-43_i8);
RET = (-70_i8);
_6.fld1.1 = [1677026838254201403_i64,522760206163072149_i64,(-4847577440830424126_i64),8113818149533357498_i64,(-4052528491343979327_i64)];
Goto(bb1)
}
bb1 = {
_5 = _3;
_2 = (-100790408657952685936167636811639811503_i128) & 17615531368625653001443836864053253392_i128;
_1 = _5;
_5 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_7 = [3366093663_u32,3114062213_u32,2942733487_u32,2776516652_u32,37150800_u32,991206908_u32,3918979936_u32];
_7 = [4160900771_u32,2212077518_u32,3368126443_u32,1262297459_u32,2427119316_u32,3002600701_u32,2567749674_u32];
_4 = [15064791078827186320_u64,1192232789161105710_u64];
_5 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
RET = 52_i8 - 31_i8;
_4 = [14104511872050155915_u64,14395806808552895605_u64];
_6.fld0 = [123160178092092331_u64,17218735193385621606_u64,16269111824483231412_u64,8571246075207338299_u64,5792484037331195907_u64,3477555158820708113_u64,3717544250669833138_u64];
_2 = -(-46550371039781077060100428161369534535_i128);
_3 = [(-61_isize),(-43_isize),9223372036854775807_isize];
_2 = (-75849553952721606617398117923272973015_i128);
match _2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
264432812968216856845976489508495238441 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8 = 48088_u16 as f64;
_8 = 191_u8 as f64;
_2 = 5048633301839923579_usize as i128;
_3 = [(-69_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2 = -(-108862925681980476987179534301361614964_i128);
_5 = _3;
_2 = 163200694937475101654572652462157554156_i128 - 34592833954311969966507873005118640696_i128;
RET = 119_i8 & (-54_i8);
_6.fld0 = [15925394492193870007_u64,9359904058036593862_u64,7160463185453573538_u64,4890074380987364159_u64,14849756405670908879_u64,10931330784825634194_u64,3859300404139370668_u64];
_2 = 100357721322387011801845876161644407722_i128;
_6.fld0 = [2441886975179672082_u64,14177283778566458225_u64,13761584414435251960_u64,554336017573329378_u64,7969574640927380689_u64,4398278210014899113_u64,15167071833293413181_u64];
_2 = 16629063495217842697_usize as i128;
Call(_3 = fn11(_7, _6.fld1.1, _1, _6.fld1.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_6.fld1.1 = [(-262490102796355603_i64),(-4599018689750198486_i64),5338127621406611225_i64,4623881807719448708_i64,1073382629072905789_i64];
_2 = 49604_u16 as i128;
_7 = [2023172066_u32,1251552137_u32,1580170442_u32,3619402193_u32,1249150406_u32,1104399884_u32,2014822917_u32];
RET = (-124_i8);
_2 = 145910379067107187993967701466759103678_i128;
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_9.fld1 = (-108_i8) & (-7_i8);
_4 = [1808560611204037562_u64,17400294980147439872_u64];
RET = true as i8;
_9.fld2 = false as u64;
_1 = _3;
_3 = [9223372036854775807_isize,(-9223372036854775808_isize),(-7_isize)];
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9.fld1 = -(-75_i8);
_11 = _4;
_6.fld0 = [_9.fld2,_9.fld2,_9.fld2,_9.fld2,_9.fld2,_9.fld2,_9.fld2];
RET = !_9.fld1;
_9.fld2 = 15568213566627739913_u64 >> _9.fld1;
_9.fld2 = !7762789972308286447_u64;
RET = _9.fld1 - _9.fld1;
_8 = 8977784667993807788_i64 as f64;
_2 = (-64589988189951680322376421803119667896_i128) >> _9.fld1;
_12 = [95989267354194288027423703189425995381_u128];
Goto(bb12)
}
bb12 = {
_6.fld0 = [_9.fld2,_9.fld2,_9.fld2,_9.fld2,_9.fld2,_9.fld2,_9.fld2];
Call(_6.fld0 = fn16(_4, _5, _6.fld1.1, _3, _11, _4, _7, _9.fld1, _7, _5, _12, _2, _12, _6.fld1.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_14.0 = 56223786459874262448964705525888942961_u128 + 248245063698362305368433713558659135421_u128;
_9.fld2 = 7462714721192407601_u64 - 1239600685479581118_u64;
_13 = !_9.fld2;
_9.fld2 = _13;
_2 = !(-160865378855635823583834811506860242398_i128);
_12 = [_14.0];
_2 = 17779827856572085222544228771742577373_i128;
_14 = (21083232847017931436771614350189809268_u128, 1417626994_i32);
_14 = (141222265564837983834643229473831696526_u128, (-1509653929_i32));
_9.fld2 = !_13;
_11 = [_13,_13];
_5 = [(-9223372036854775808_isize),80_isize,(-9223372036854775808_isize)];
_12 = [_14.0];
_5 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_15 = (-9223372036854775808_isize);
_13 = false as u64;
_8 = 4172827923_u32 as f64;
_18 = _8 - _8;
_8 = _9.fld2 as f64;
_9.fld1 = 30_i8 + 43_i8;
_16 = [_14.0,_14.0,_14.0,_14.0];
RET = _9.fld1 & _9.fld1;
_18 = 11537_i16 as f64;
_8 = _18;
_12 = [_14.0];
_20 = [_9.fld2,_9.fld2,_13,_9.fld2,_9.fld2,_13,_9.fld2];
Goto(bb14)
}
bb14 = {
_17 = '\u{48e6f}' as u128;
_21.1 = _14.1 as u128;
_21.1 = _14.0;
_8 = _18;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(10_usize, 2_usize, Move(_2), 14_usize, Move(_14), 11_usize, Move(_11), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(10_usize, 16_usize, Move(_16), 3_usize, Move(_3), 20_usize, Move(_20), 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [u32; 7],mut _2: [i64; 5],mut _3: [isize; 3],mut _4: [i64; 5]) -> [isize; 3] {
mir! {
type RET = [isize; 3];
let _5: f64;
let _6: [u128; 1];
let _7: [u64; 2];
let _8: [u128; 5];
let _9: u8;
let _10: *const [u64; 7];
let _11: u64;
let _12: isize;
let _13: (f64, u16);
let _14: Adt52;
let _15: bool;
let _16: [u64; 7];
let _17: [u64; 2];
let _18: f32;
let _19: i32;
let _20: *const u8;
let _21: Adt64;
let _22: Adt51;
let _23: *const (f64, u16);
let _24: Adt62;
let _25: Adt63;
let _26: i32;
let _27: i16;
let _28: ();
let _29: ();
{
_4 = _2;
_1 = [2556411028_u32,668835737_u32,3836481868_u32,130620112_u32,1177919499_u32,1884189313_u32,2719468271_u32];
RET = [88_isize,(-9223372036854775808_isize),92_isize];
_3 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_2 = _4;
_2 = _4;
RET = _3;
RET = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = [9223372036854775807_isize,(-75_isize),(-9223372036854775808_isize)];
_2 = [(-1250445232313105051_i64),(-6573737982039289476_i64),(-6466400906728951568_i64),(-7774934680930420383_i64),(-1891891053633747800_i64)];
_5 = 5448022759484002185_u64 as f64;
_6 = [134762319418678226458529589126329413664_u128];
_3 = [118_isize,9223372036854775807_isize,9223372036854775807_isize];
Goto(bb1)
}
bb1 = {
_4 = [431052648424463427_i64,5685045826706628285_i64,(-1868310774946514182_i64),5759045692616239244_i64,(-5089201029618467540_i64)];
_1 = [3328173300_u32,3020618719_u32,1907807153_u32,214491611_u32,1048609662_u32,1692057775_u32,776319104_u32];
_6 = [162085693623342917676445174134556135286_u128];
_4 = [(-7569764761545473596_i64),5929830170531816932_i64,2065401044747605744_i64,3491178514990553358_i64,8270206529965834672_i64];
_1 = [3176975169_u32,2515679547_u32,1513769544_u32,1296118113_u32,4184610650_u32,3599850097_u32,1881894451_u32];
_1 = [2935878037_u32,4102331079_u32,2406020613_u32,1762384306_u32,1138767626_u32,3859419755_u32,481629976_u32];
_8 = [117160230627686968357982306189019015978_u128,237304380899407416901692135274521663610_u128,157927282485993632313760428517219478535_u128,185351017223476352251709978992290965448_u128,89432177950801622142606119873777770635_u128];
_3 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_7 = [4234947035496939006_u64,18076448375350665162_u64];
RET = [9223372036854775807_isize,(-111_isize),9223372036854775807_isize];
_5 = 3_usize as f64;
_11 = '\u{6a307}' as u64;
_2 = _4;
_3 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = [247318503425705245017527740639676984018_u128,92166563873954116073400520977027854609_u128,45010350506974327190122922435739319840_u128,128963385470529398902137830713755088935_u128,92462975617014002398719093096190382347_u128];
_9 = 144719010452446628455997181903089304961_i128 as u8;
_5 = (-24684906899529549406479892534753155214_i128) as f64;
Goto(bb2)
}
bb2 = {
_7 = [_11,_11];
_1 = [3965513246_u32,1413956478_u32,460344830_u32,4235797884_u32,1155522132_u32,2323662601_u32,1475461580_u32];
_7 = [_11,_11];
_3 = [9223372036854775807_isize,9223372036854775807_isize,(-104_isize)];
_4 = [2018983669811594989_i64,8183316266672814901_i64,(-9159164075239902140_i64),8741448435424121329_i64,(-5332268299109010492_i64)];
RET = [(-58_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6 = [88231121384563333603885364981169214111_u128];
_12 = 61976_u16 as isize;
_9 = 653495298_i32 as u8;
_13.0 = _5 * _5;
_11 = !1296516130816485752_u64;
_14.fld1 = [2230322877_u32,2118451347_u32,327236508_u32,1649813267_u32,3269219606_u32,3355640230_u32,1538696435_u32];
RET = _3;
_15 = !false;
_14.fld1 = [1039102512_u32,3230930007_u32,1574344126_u32,1915968369_u32,958596027_u32,2623150296_u32,2960978488_u32];
_15 = _5 == _13.0;
_13 = (_5, 58641_u16);
_14.fld2 = core::ptr::addr_of!(_15);
_5 = -_13.0;
_9 = !178_u8;
_14.fld3 = core::ptr::addr_of!(_13);
_13.1 = 42472_u16 | 53080_u16;
_14.fld0 = _15 as i128;
_13 = (_5, 52520_u16);
RET = [_12,_12,_12];
_11 = 2442534055_u32 as u64;
_8 = [131895519710086923175388313846580785670_u128,66974648325845755209088653067584846295_u128,37762978060437942144686402891782821451_u128,219592711131577935736049592397360785589_u128,188204344607483074084555540603247250961_u128];
_3 = [_12,_12,_12];
_11 = !2593225816486856858_u64;
Goto(bb3)
}
bb3 = {
_14.fld1 = _1;
_11 = !3344300496598788573_u64;
RET = _3;
_15 = !true;
RET = [_12,_12,_12];
_14.fld2 = core::ptr::addr_of!(_15);
_11 = 17736405592573398357_u64 ^ 11039631191863932131_u64;
_4 = [(-8287744979303337728_i64),(-1151721080780774186_i64),1546896559064725040_i64,(-2112051270431501336_i64),8330134508292581416_i64];
_9 = !115_u8;
_4 = _2;
_13.1 = 49742_u16;
Goto(bb4)
}
bb4 = {
_5 = -_13.0;
_4 = [2897849697902833304_i64,7199083788867450529_i64,(-3645099286602868999_i64),819476786911920745_i64,1658072573731270380_i64];
_2 = [(-1723805584929235812_i64),6670388421460384308_i64,8509444283120464139_i64,5590110680398636257_i64,1615253178007676494_i64];
_8 = [49945638725040417215046774277062229501_u128,118821881639123075430081779197483422925_u128,153759637162923338217820254066184644671_u128,35172419359315374884045672746127224981_u128,45549849806347281790406729691565160747_u128];
_3 = [_12,_12,_12];
RET = _3;
_8 = [206925023871337349714600482296054449095_u128,195738495752837741888645931961108260592_u128,174159682573773525323958230190713155869_u128,5267878710764645080734646162544644825_u128,305214647699399925025129801386784103849_u128];
Goto(bb5)
}
bb5 = {
_14.fld0 = _12 as i128;
_7 = [_11,_11];
_4 = [(-1286614643798774498_i64),6124075123513747268_i64,5417773812924187121_i64,6876307426017956924_i64,(-3022707075266703154_i64)];
_12 = -(-9223372036854775808_isize);
_13.1 = 44116_u16 ^ 26461_u16;
RET = [_12,_12,_12];
_9 = 172_u8 << _12;
_14.fld0 = 45432836760001075725467861419360366147_i128 & 8584521098851083818814847819976659404_i128;
_2 = [1771771226229489438_i64,3801208947238315858_i64,3916361121793149222_i64,(-8062745241031682678_i64),567127726320950947_i64];
_9 = 40_u8 & 168_u8;
_12 = 9223372036854775807_isize;
_16 = [_11,_11,_11,_11,_11,_11,_11];
_12 = !(-75_isize);
_14.fld0 = 1917256549_i32 as i128;
_13.0 = 15168361598104130801484615625356456314_u128 as f64;
_3 = [_12,_12,_12];
_4 = _2;
_14.fld1 = [3678421835_u32,2074136900_u32,264661652_u32,3973401763_u32,760626627_u32,3368241223_u32,3144841445_u32];
_12 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_14.fld1 = [3227629314_u32,1755958763_u32,3068257682_u32,3684474953_u32,2112016682_u32,3732124242_u32,1623944219_u32];
_8 = [95607062770408474809798482359313666048_u128,202047815642311173851906534725782224884_u128,95690724803302600646403604002408845275_u128,320512516657223003297861670533706407841_u128,289990744991296294623818088056564852553_u128];
_14.fld0 = !12240268472215309316177562899808756012_i128;
Call(_4 = core::intrinsics::transmute(_2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_10 = core::ptr::addr_of!(_16);
_6 = [220973416977954316534245040749866109182_u128];
_17 = [_11,_11];
_1 = _14.fld1;
_14.fld2 = core::ptr::addr_of!(_15);
RET = _3;
_17 = [_11,_11];
_14.fld3 = core::ptr::addr_of!(_13);
_17 = [_11,_11];
_18 = _13.1 as f32;
_7 = _17;
RET = [_12,_12,_12];
Goto(bb7)
}
bb7 = {
_13 = (_5, 52489_u16);
RET = [_12,_12,_12];
_2 = [2958559651659910583_i64,2757581439954141981_i64,1382031334103973356_i64,2687622216602633100_i64,1066374568379330657_i64];
_6 = [290197530409472163727448569818129293686_u128];
_7 = _17;
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_10 = core::ptr::addr_of!((*_10));
_6 = [290559248778963775004927280578257534804_u128];
_2 = _4;
_16 = [_11,_11,_11,_11,_11,_11,_11];
_3 = [_12,_12,_12];
RET = [_12,_12,_12];
Goto(bb8)
}
bb8 = {
_3 = [_12,_12,_12];
_13.0 = _5 / f64::NAN;
_12 = _18 as isize;
_5 = _13.0 / 1_f64;
_2 = [7865106215943891895_i64,4154692951063455847_i64,(-6636689879305640749_i64),(-4666776636081789574_i64),7778749416570960991_i64];
_13.0 = _5 / f64::NAN;
_12 = 266535772102832267049670665524418677380_u128 as isize;
_15 = !false;
_14.fld3 = core::ptr::addr_of!(_13);
_13.0 = _9 as f64;
_15 = true;
_2 = [(-8057456974990840486_i64),4989094184197513766_i64,(-7714697766075674414_i64),2127250026138974840_i64,(-2961279677752741179_i64)];
RET = [_12,_12,_12];
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_7 = [_11,_11];
_15 = _18 >= _18;
_20 = core::ptr::addr_of!(_9);
RET = [_12,_12,_12];
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_13 = (_5, 49834_u16);
RET = [_12,_12,_12];
_1 = _14.fld1;
_20 = core::ptr::addr_of!(_9);
RET = [_12,_12,_12];
_18 = _11 as f32;
_16 = [_11,_11,_11,_11,_11,_11,_11];
Call((*_20) = fn12(_20, _11, _14.fld3, _1, _20, _4, _5, _3, _13.1, _20, _4), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_14.fld3 = core::ptr::addr_of!(_13);
_18 = 24718_i16 as f32;
_20 = core::ptr::addr_of!((*_20));
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_9 = _12 as u8;
_14.fld2 = core::ptr::addr_of!(_15);
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
RET = [_12,_12,_12];
_20 = core::ptr::addr_of!((*_20));
_19 = (*_20) as i32;
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_21.fld2 = core::ptr::addr_of!(_10);
_3 = [_12,_12,_12];
Call(_17 = fn15(_14.fld3, Move(_14), (*_20), _20, (*_10), _20, _7, _1, _20, (*_20), _19, _15, _2, _21.fld2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
RET = _3;
_21.fld0 = _9 >= (*_20);
_15 = !_21.fld0;
_21.fld1 = !_19;
_6 = [85753447905882129964646759395102319045_u128];
_4 = _2;
match _13.1 {
0 => bb6,
1 => bb7,
2 => bb3,
3 => bb11,
4 => bb12,
29339 => bb14,
_ => bb13
}
}
bb11 = {
_14.fld3 = core::ptr::addr_of!(_13);
_18 = 24718_i16 as f32;
_20 = core::ptr::addr_of!((*_20));
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_9 = _12 as u8;
_14.fld2 = core::ptr::addr_of!(_15);
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
RET = [_12,_12,_12];
_20 = core::ptr::addr_of!((*_20));
_19 = (*_20) as i32;
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_21.fld2 = core::ptr::addr_of!(_10);
_3 = [_12,_12,_12];
Call(_17 = fn15(_14.fld3, Move(_14), (*_20), _20, (*_10), _20, _7, _1, _20, (*_20), _19, _15, _2, _21.fld2), ReturnTo(bb10), UnwindUnreachable())
}
bb12 = {
_3 = [_12,_12,_12];
_13.0 = _5 / f64::NAN;
_12 = _18 as isize;
_5 = _13.0 / 1_f64;
_2 = [7865106215943891895_i64,4154692951063455847_i64,(-6636689879305640749_i64),(-4666776636081789574_i64),7778749416570960991_i64];
_13.0 = _5 / f64::NAN;
_12 = 266535772102832267049670665524418677380_u128 as isize;
_15 = !false;
_14.fld3 = core::ptr::addr_of!(_13);
_13.0 = _9 as f64;
_15 = true;
_2 = [(-8057456974990840486_i64),4989094184197513766_i64,(-7714697766075674414_i64),2127250026138974840_i64,(-2961279677752741179_i64)];
RET = [_12,_12,_12];
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_7 = [_11,_11];
_15 = _18 >= _18;
_20 = core::ptr::addr_of!(_9);
RET = [_12,_12,_12];
(*_10) = [_11,_11,_11,_11,_11,_11,_11];
_13 = (_5, 49834_u16);
RET = [_12,_12,_12];
_1 = _14.fld1;
_20 = core::ptr::addr_of!(_9);
RET = [_12,_12,_12];
_18 = _11 as f32;
_16 = [_11,_11,_11,_11,_11,_11,_11];
Call((*_20) = fn12(_20, _11, _14.fld3, _1, _20, _4, _5, _3, _13.1, _20, _4), ReturnTo(bb9), UnwindUnreachable())
}
bb13 = {
_5 = -_13.0;
_4 = [2897849697902833304_i64,7199083788867450529_i64,(-3645099286602868999_i64),819476786911920745_i64,1658072573731270380_i64];
_2 = [(-1723805584929235812_i64),6670388421460384308_i64,8509444283120464139_i64,5590110680398636257_i64,1615253178007676494_i64];
_8 = [49945638725040417215046774277062229501_u128,118821881639123075430081779197483422925_u128,153759637162923338217820254066184644671_u128,35172419359315374884045672746127224981_u128,45549849806347281790406729691565160747_u128];
_3 = [_12,_12,_12];
RET = _3;
_8 = [206925023871337349714600482296054449095_u128,195738495752837741888645931961108260592_u128,174159682573773525323958230190713155869_u128,5267878710764645080734646162544644825_u128,305214647699399925025129801386784103849_u128];
Goto(bb5)
}
bb14 = {
_13.0 = -_5;
_3 = [_12,_12,_12];
_6 = [302358672008552840522402814197789239664_u128];
_22.fld1.fld2 = core::ptr::addr_of!(_22.fld5);
_3 = [_12,_12,_12];
_3 = [_12,_12,_12];
_22.fld1.fld2 = core::ptr::addr_of!(_22.fld5);
_24.fld6.fld0 = !12302710018278999999_usize;
_25.fld0 = [_12,_12,_12];
_3 = [_12,_12,_12];
_24.fld6.fld2.fld0 = 116457774215090343473640038562104290357_i128 | (-25478623145735299416447523461999202760_i128);
_24.fld6.fld2.fld3 = core::ptr::addr_of!(_13);
_22.fld4 = core::ptr::addr_of!(_22.fld5);
_21.fld1 = !_19;
_24.fld6.fld0 = 462_i16 as usize;
(*_20) = !50_u8;
_13.0 = _5 - _5;
_23 = core::ptr::addr_of!(_13);
_24.fld6.fld1 = core::ptr::addr_of!((*_20));
_22.fld2 = _13.0;
_15 = !_21.fld0;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(11_usize, 9_usize, Move(_9), 12_usize, Move(_12), 19_usize, Move(_19), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(11_usize, 16_usize, Move(_16), 15_usize, Move(_15), 8_usize, Move(_8), 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: *const u8,mut _2: u64,mut _3: *const (f64, u16),mut _4: [u32; 7],mut _5: *const u8,mut _6: [i64; 5],mut _7: f64,mut _8: [isize; 3],mut _9: u16,mut _10: *const u8,mut _11: [i64; 5]) -> u8 {
mir! {
type RET = u8;
let _12: isize;
let _13: isize;
let _14: *const [u64; 7];
let _15: Adt64;
let _16: f32;
let _17: isize;
let _18: (u128, i32);
let _19: f64;
let _20: ([u64; 7],);
let _21: u8;
let _22: Adt51;
let _23: [u128; 1];
let _24: *const *const u8;
let _25: u32;
let _26: isize;
let _27: [i64; 5];
let _28: f64;
let _29: Adt63;
let _30: usize;
let _31: Adt56;
let _32: bool;
let _33: (f64, u16);
let _34: Adt56;
let _35: bool;
let _36: ((u128, i32), u128);
let _37: [i64; 5];
let _38: [u128; 1];
let _39: usize;
let _40: i64;
let _41: (f64, u16);
let _42: f64;
let _43: u128;
let _44: (f64, u16);
let _45: (f64, usize, [u32; 7]);
let _46: f32;
let _47: (f64, usize, [u32; 7]);
let _48: isize;
let _49: u8;
let _50: Adt58;
let _51: isize;
let _52: Adt61;
let _53: i64;
let _54: u8;
let _55: Adt64;
let _56: bool;
let _57: *mut u64;
let _58: bool;
let _59: [u128; 5];
let _60: [u128; 5];
let _61: Adt48;
let _62: ();
let _63: ();
{
_1 = _5;
RET = (-9223372036854775808_isize) as u8;
RET = 245_u8;
_1 = _10;
_11 = [(-2855978181693994878_i64),8896087487002576331_i64,4629011543137781178_i64,(-6061744522870939422_i64),4672128821838247720_i64];
_5 = _10;
(*_3).1 = !_9;
(*_3).0 = _7 + _7;
(*_3).0 = -_7;
_6 = _11;
(*_3).1 = 200694956012709568195371120391965471068_u128 as u16;
_11 = [(-454636419998913219_i64),(-5791113450071400306_i64),4600795359345687291_i64,(-5049607309703270488_i64),(-6661186445869496397_i64)];
_4 = [3159885373_u32,1457025582_u32,1482416402_u32,850368601_u32,3971419048_u32,3917088628_u32,1650422193_u32];
_6 = [1121271234373171452_i64,(-7769108689776453497_i64),(-5239841554641043034_i64),(-8336308124737372466_i64),(-7750461127038029738_i64)];
(*_3).1 = (-4826_i16) as u16;
_9 = 500928307_i32 as u16;
_12 = '\u{8f2a3}' as isize;
_3 = core::ptr::addr_of!((*_3));
(*_3).0 = 2638220875_u32 as f64;
_4 = [2629427173_u32,4138824350_u32,1225064350_u32,2601234628_u32,2230317660_u32,925278689_u32,1385486459_u32];
_15.fld1 = !2028142031_i32;
RET = (-125722933218519497503718914852300450080_i128) as u8;
_1 = _5;
RET = !142_u8;
_5 = _10;
(*_3) = (_7, _9);
(*_3) = (_7, _9);
_3 = core::ptr::addr_of!((*_3));
Goto(bb1)
}
bb1 = {
_4 = [2190933145_u32,2646390320_u32,3307776074_u32,466404861_u32,2803503039_u32,1714443220_u32,1768634156_u32];
_10 = _5;
(*_3) = (_7, _9);
_15.fld1 = !(-418738469_i32);
_15.fld1 = 113728642_i32;
_9 = !(*_3).1;
Call(RET = core::intrinsics::bswap(82_u8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_3).0 = _7;
(*_3).0 = _7;
(*_3).0 = _7 - _7;
_7 = (*_3).0 + (*_3).0;
RET = 14_u8;
(*_3).0 = _15.fld1 as f64;
_3 = core::ptr::addr_of!((*_3));
_15.fld1 = 152474404_i32 - (-1081256127_i32);
_15.fld1 = -1614798056_i32;
_6 = _11;
_16 = _15.fld1 as f32;
_2 = 17525973201169605055_u64;
_15.fld0 = !true;
Call((*_3).0 = fn13(_10, _10, _4, _8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_3) = (_7, _9);
(*_3).0 = -_7;
_3 = core::ptr::addr_of!((*_3));
_19 = _2 as f64;
_4 = [3087700353_u32,629114393_u32,1149749858_u32,1910935066_u32,4000704313_u32,2424910540_u32,1823416173_u32];
_20.0 = [_2,_2,_2,_2,_2,_2,_2];
_18 = (127351451777761163748311954105572521218_u128, _15.fld1);
_2 = 4967614759253932474_u64 * 7860479713178474726_u64;
_16 = _9 as f32;
_15.fld2 = core::ptr::addr_of!(_14);
_3 = core::ptr::addr_of!((*_3));
_14 = core::ptr::addr_of!(_20.0);
RET = !133_u8;
Goto(bb4)
}
bb4 = {
_13 = !_12;
_12 = !_13;
_22.fld1.fld2 = core::ptr::addr_of!(_22.fld5);
_22.fld4 = core::ptr::addr_of!(_22.fld5);
_8 = [_12,_13,_13];
_15.fld1 = _18.1 - _18.1;
_10 = core::ptr::addr_of!(_21);
_25 = 555746747_u32 >> (*_3).1;
_3 = core::ptr::addr_of!((*_3));
_22.fld5 = [_18.0,_18.0,_18.0,_18.0];
(*_10) = 23_u8 << _12;
_16 = (*_3).1 as f32;
_4 = [_25,_25,_25,_25,_25,_25,_25];
_17 = _13;
_1 = core::ptr::addr_of!(_21);
_2 = !6180924998242699808_u64;
(*_3) = (_7, _9);
_15.fld2 = core::ptr::addr_of!(_14);
_22.fld4 = core::ptr::addr_of!(_22.fld5);
Goto(bb5)
}
bb5 = {
_22.fld3 = !2059049323758170681_usize;
match _18.0 {
0 => bb1,
1 => bb2,
2 => bb3,
127351451777761163748311954105572521218 => bb6,
_ => bb4
}
}
bb6 = {
_3 = core::ptr::addr_of!((*_3));
_27 = _6;
_22.fld2 = (*_3).0;
_9 = !(*_3).1;
_1 = core::ptr::addr_of!(_21);
_26 = (-86200008673930862018350010094951887094_i128) as isize;
RET = (*_1);
_18.1 = -_15.fld1;
_22.fld1.fld1 = _5;
(*_3).0 = _22.fld2 * _22.fld2;
_21 = 52_u8;
_1 = _5;
_29.fld1 = [_25,_25,_25,_25,_25,_25,_25];
_20.0 = [_2,_2,_2,_2,_2,_2,_2];
_21 = 104_u8 % 165_u8;
_16 = _2 as f32;
_29.fld0 = [_13,_17,_17];
_30 = _22.fld3;
_34.fld0.fld2 = _2;
_15.fld1 = _18.1 ^ _18.1;
_22.fld3 = 97_i8 as usize;
_34.fld0.fld1 = -46_i8;
_5 = core::ptr::addr_of!((*_10));
_29.fld1 = [_25,_25,_25,_25,_25,_25,_25];
Goto(bb7)
}
bb7 = {
(*_5) = 120_u8 & 15_u8;
_34.fld0.fld2 = !_2;
_17 = _18.1 as isize;
_5 = core::ptr::addr_of!((*_10));
_36.1 = _18.0 & _18.0;
_22.fld1.fld3 = [_36.1];
_29 = Adt63 { fld0: _8,fld1: _4 };
Goto(bb8)
}
bb8 = {
_40 = 8205549363231781019_i64 * 5380937091788970403_i64;
_26 = _17;
_7 = -(*_3).0;
_23 = [_36.1];
_36.1 = _18.0;
_20.0 = [_2,_2,_2,_2,_34.fld0.fld2,_2,_34.fld0.fld2];
(*_10) = 83_u8;
_33.1 = !(*_3).1;
_23 = [_36.1];
_36.0 = (_18.0, _15.fld1);
_34.fld0.fld2 = _2 | _2;
_8 = _29.fld0;
_34.fld0.fld2 = !_2;
_15.fld1 = !_36.0.1;
_35 = _15.fld0;
_43 = _36.1;
_43 = _36.0.0 & _36.0.0;
_36.0.0 = _40 as u128;
(*_10) = 115_u8 ^ 5_u8;
_23 = [_43];
_45.0 = (*_3).0;
Goto(bb9)
}
bb9 = {
_29.fld1 = _4;
_29.fld1 = [_25,_25,_25,_25,_25,_25,_25];
_13 = _17;
_16 = _45.0 as f32;
_44 = (_7, (*_3).1);
RET = _36.0.0 as u8;
(*_3).1 = _15.fld1 as u16;
_42 = (*_3).0;
_22.fld2 = (-15126_i16) as f64;
_45.2 = [_25,_25,_25,_25,_25,_25,_25];
_38 = [_36.1];
_33.0 = _45.0;
_25 = _34.fld0.fld2 as u32;
_37 = [_40,_40,_40,_40,_40];
_33.0 = -_42;
_32 = _15.fld0;
_46 = _34.fld0.fld1 as f32;
_21 = 12_u8;
_33.1 = _34.fld0.fld1 as u16;
(*_3).1 = _44.1 ^ _33.1;
(*_5) = !10_u8;
_24 = core::ptr::addr_of!(_22.fld1.fld1);
_31.fld0.fld2 = !_2;
(*_3) = (_33.0, _9);
_44.1 = !(*_3).1;
_47 = (_45.0, _30, _45.2);
_39 = _22.fld3 + _47.1;
Goto(bb10)
}
bb10 = {
_32 = !_35;
_45.2 = _47.2;
_1 = (*_24);
(*_3) = (_44.0, _9);
_9 = _33.1 - _44.1;
_36 = (_18, _43);
_37 = [_40,_40,_40,_40,_40];
Goto(bb11)
}
bb11 = {
_29.fld0 = _8;
_18 = _36.0;
_50.fld2.fld3 = _3;
(*_14) = [_31.fld0.fld2,_31.fld0.fld2,_2,_2,_31.fld0.fld2,_34.fld0.fld2,_31.fld0.fld2];
_52.fld2.fld0 = _18;
_43 = 67769799545451486868998805646544840074_i128 as u128;
_47.1 = _39;
_52.fld2.fld4.fld0.0 = !_52.fld2.fld0.0;
_18.0 = _36.1 * _52.fld2.fld0.0;
Goto(bb12)
}
bb12 = {
(*_14) = [_34.fld0.fld2,_31.fld0.fld2,_34.fld0.fld2,_34.fld0.fld2,_31.fld0.fld2,_34.fld0.fld2,_2];
_15.fld2 = core::ptr::addr_of!(_14);
_10 = core::ptr::addr_of!(_50.fld6);
_51 = 17105_i16 as isize;
_49 = _47.0 as u8;
_41.0 = _44.0 - _45.0;
_52.fld0.fld5 = !_34.fld0.fld2;
_11 = [_40,_40,_40,_40,_40];
_50.fld4 = [_36.0.0];
_50.fld3 = _34.fld0.fld1;
_15.fld1 = _18.1;
_52.fld1 = '\u{364f1}';
_50.fld3 = _34.fld0.fld1;
_50.fld1 = core::ptr::addr_of!(_54);
_31.fld0.fld1 = _50.fld3 ^ _50.fld3;
_52.fld4 = _40;
(*_10) = _49 / 3_u8;
_16 = _52.fld4 as f32;
_15.fld0 = !_32;
_52.fld2.fld0.1 = -_36.0.1;
_55.fld0 = _35;
Goto(bb13)
}
bb13 = {
_55 = Adt64 { fld0: _32,fld1: _36.0.1,fld2: _15.fld2 };
Goto(bb14)
}
bb14 = {
_52.fld0.fld0 = _55.fld0;
_55.fld2 = core::ptr::addr_of!(_52.fld2.fld4.fld1);
_45 = _47;
_7 = _52.fld2.fld4.fld0.0 as f64;
_31.fld0.fld1 = _13 as i8;
Goto(bb15)
}
bb15 = {
Call(_62 = dump_var(12_usize, 49_usize, Move(_49), 20_usize, Move(_20), 21_usize, Move(_21), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_62 = dump_var(12_usize, 8_usize, Move(_8), 39_usize, Move(_39), 23_usize, Move(_23), 37_usize, Move(_37)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_62 = dump_var(12_usize, 35_usize, Move(_35), 26_usize, Move(_26), 13_usize, Move(_13), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_62 = dump_var(12_usize, 6_usize, Move(_6), 63_usize, _63, 63_usize, _63, 63_usize, _63), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: *const u8,mut _2: *const u8,mut _3: [u32; 7],mut _4: [isize; 3]) -> f64 {
mir! {
type RET = f64;
let _5: isize;
let _6: i128;
let _7: Adt57;
let _8: (f64, u16);
let _9: Adt60;
let _10: [u64; 2];
let _11: [i32; 4];
let _12: bool;
let _13: usize;
let _14: [i64; 5];
let _15: Adt61;
let _16: ((u128, i32), u128);
let _17: isize;
let _18: u128;
let _19: f32;
let _20: f64;
let _21: Adt64;
let _22: bool;
let _23: (f64, u16);
let _24: (f64, u16);
let _25: [u128; 4];
let _26: Adt55;
let _27: [u128; 1];
let _28: *const (f64, u16);
let _29: (f64, u16);
let _30: *const (f64, u16);
let _31: isize;
let _32: *mut *const i128;
let _33: i16;
let _34: u32;
let _35: [i64; 5];
let _36: (f64, usize, [u32; 7]);
let _37: *const i128;
let _38: [u32; 7];
let _39: [u32; 7];
let _40: f64;
let _41: [i64; 5];
let _42: ((u128, i32), bool, i16);
let _43: bool;
let _44: [u128; 4];
let _45: [u128; 4];
let _46: [u64; 2];
let _47: bool;
let _48: ();
let _49: ();
{
RET = 3731287016929258223_usize as f64;
_7.fld1.1 = 106_u8 as f64;
RET = _7.fld1.1 * _7.fld1.1;
_7.fld5 = 7735946628376532562_i64 << 9223372036854775807_isize;
_2 = core::ptr::addr_of!(_7.fld1.2);
_8.0 = _7.fld1.1;
RET = -_8.0;
_4 = [(-79_isize),(-28_isize),(-9223372036854775808_isize)];
Call(_8.1 = core::intrinsics::bswap(38854_u16), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = 3819_u16 as f64;
_2 = _1;
_7.fld5 = 1689726355_i32 as i64;
_7.fld4 = '\u{223b0}' as u32;
_7.fld1.0 = core::ptr::addr_of!(_9.fld4);
RET = _7.fld1.1;
_10 = [3120973811888857004_u64,7740314630593838475_u64];
Call(_7.fld0 = fn14(_1, _2, _1, _1, _8.0, _8.0, _2, _3, _1, _3, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = [912728982_i32,1073469611_i32,767937348_i32,147329582_i32];
_15.fld2.fld4.fld1 = core::ptr::addr_of!(_7.fld3);
_15.fld2.fld0 = (94504972395481630353749531178291720450_u128, 1968827759_i32);
_6 = -(-37761739789995077446927144879111379085_i128);
_15.fld0.fld5 = 6124902730410417318_u64;
_15.fld2.fld4.fld0.1 = true as i32;
_15.fld2.fld4.fld2 = [_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0];
_15.fld2.fld1.fld1 = _2;
_15.fld2.fld2 = core::ptr::addr_of_mut!(_10);
_3 = [_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4];
_1 = core::ptr::addr_of!(_7.fld1.2);
_15.fld2.fld4.fld0 = _15.fld2.fld0;
_14 = [_7.fld5,_7.fld5,_7.fld5,_7.fld5,_7.fld5];
_9.fld0 = core::ptr::addr_of!(_8);
_13 = !5_usize;
_9.fld4 = [_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld4.fld0.0,_15.fld2.fld0.0];
_10 = [_15.fld0.fld5,_15.fld0.fld5];
_9.fld0 = core::ptr::addr_of!(_8);
_7.fld5 = -8551466961216416738_i64;
Goto(bb3)
}
bb3 = {
_17 = 6_isize >> _15.fld0.fld5;
_9.fld4 = [_15.fld2.fld4.fld0.0,_15.fld2.fld4.fld0.0,_15.fld2.fld0.0,_15.fld2.fld4.fld0.0];
_7.fld5 = 6324869013968285812_i64 | (-2558876445320851552_i64);
_15.fld0.fld6.fld2 = _15.fld0.fld5;
_15.fld0.fld6.fld2 = _6 as u64;
_1 = core::ptr::addr_of!((*_1));
_7.fld3 = [_15.fld0.fld6.fld2,_15.fld0.fld5,_15.fld0.fld6.fld2,_15.fld0.fld6.fld2,_15.fld0.fld6.fld2,_15.fld0.fld5,_15.fld0.fld5];
_1 = core::ptr::addr_of!((*_1));
_11 = [_15.fld2.fld0.1,_15.fld2.fld0.1,_15.fld2.fld4.fld0.1,_15.fld2.fld0.1];
_15.fld2.fld3 = (_7.fld3,);
_15.fld2.fld0 = (_15.fld2.fld4.fld0.0, _15.fld2.fld4.fld0.1);
_7.fld1.0 = core::ptr::addr_of!(_15.fld0.fld3);
_11 = [_15.fld2.fld0.1,_15.fld2.fld4.fld0.1,_15.fld2.fld0.1,_15.fld2.fld0.1];
_15.fld2.fld1.fld3 = [_15.fld2.fld0.0];
_15.fld0.fld6.fld2 = _15.fld0.fld5 << _15.fld2.fld0.1;
_2 = core::ptr::addr_of!(_7.fld1.2);
_10 = [_15.fld0.fld6.fld2,_15.fld0.fld6.fld2];
(*_1) = 122_u8 | 148_u8;
_15.fld0.fld1 = _7.fld5 as i128;
_16.0.0 = _15.fld2.fld4.fld0.0 % 205414007940248967291519541695442354792_u128;
_15.fld2.fld1.fld2 = core::ptr::addr_of!(_9.fld4);
_9.fld5 = _11;
_16.0.0 = _13 as u128;
_12 = false;
_7.fld2 = core::ptr::addr_of!(_15.fld2.fld1.fld1);
match _15.fld2.fld4.fld0.0 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
94504972395481630353749531178291720450 => bb9,
_ => bb8
}
}
bb4 = {
_11 = [912728982_i32,1073469611_i32,767937348_i32,147329582_i32];
_15.fld2.fld4.fld1 = core::ptr::addr_of!(_7.fld3);
_15.fld2.fld0 = (94504972395481630353749531178291720450_u128, 1968827759_i32);
_6 = -(-37761739789995077446927144879111379085_i128);
_15.fld0.fld5 = 6124902730410417318_u64;
_15.fld2.fld4.fld0.1 = true as i32;
_15.fld2.fld4.fld2 = [_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0];
_15.fld2.fld1.fld1 = _2;
_15.fld2.fld2 = core::ptr::addr_of_mut!(_10);
_3 = [_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4];
_1 = core::ptr::addr_of!(_7.fld1.2);
_15.fld2.fld4.fld0 = _15.fld2.fld0;
_14 = [_7.fld5,_7.fld5,_7.fld5,_7.fld5,_7.fld5];
_9.fld0 = core::ptr::addr_of!(_8);
_13 = !5_usize;
_9.fld4 = [_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld4.fld0.0,_15.fld2.fld0.0];
_10 = [_15.fld0.fld5,_15.fld0.fld5];
_9.fld0 = core::ptr::addr_of!(_8);
_7.fld5 = -8551466961216416738_i64;
Goto(bb3)
}
bb5 = {
RET = 3819_u16 as f64;
_2 = _1;
_7.fld5 = 1689726355_i32 as i64;
_7.fld4 = '\u{223b0}' as u32;
_7.fld1.0 = core::ptr::addr_of!(_9.fld4);
RET = _7.fld1.1;
_10 = [3120973811888857004_u64,7740314630593838475_u64];
Call(_7.fld0 = fn14(_1, _2, _1, _1, _8.0, _8.0, _2, _3, _1, _3, _2, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_16.1 = _15.fld2.fld0.0 << _16.0.0;
_15.fld2.fld4.fld0.0 = _17 as u128;
_15.fld2.fld4.fld2 = [_16.1,_16.1,_15.fld2.fld0.0,_16.0.0,_15.fld2.fld4.fld0.0];
_15.fld0.fld6.fld2 = 7102_u16 as u64;
_15.fld0.fld3 = [_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0,_15.fld2.fld4.fld0.0];
_7.fld1.2 = 18_u8 % 79_u8;
_15.fld0.fld4 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_15.fld2.fld3 = (_7.fld3,);
_15.fld2.fld0 = (_15.fld2.fld4.fld0.0, _15.fld2.fld4.fld0.1);
_15.fld0.fld3 = [_16.1,_16.1,_15.fld2.fld0.0,_15.fld2.fld4.fld0.0];
_15.fld0.fld3 = [_15.fld2.fld4.fld0.0,_15.fld2.fld4.fld0.0,_15.fld2.fld0.0,_15.fld2.fld0.0];
_6 = !_15.fld0.fld1;
_5 = _12 as isize;
_8.1 = 54707_u16 / 19143_u16;
_9.fld5 = [_15.fld2.fld0.1,_15.fld2.fld0.1,_15.fld2.fld4.fld0.1,_15.fld2.fld0.1];
_7.fld0 = [_16.1,_15.fld2.fld0.0,_16.1,_16.0.0];
Goto(bb10)
}
bb10 = {
(*_1) = _13 as u8;
_21.fld2 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_15.fld2.fld3.0 = _7.fld3;
_16 = (_15.fld2.fld0, _15.fld2.fld4.fld0.0);
_12 = !false;
_15.fld2.fld4.fld0 = (_16.1, _15.fld2.fld0.1);
_20 = _8.0 + _8.0;
_15.fld2.fld3 = (_7.fld3,);
(*_1) = 93_u8 & 109_u8;
_7.fld5 = (-4460156800431031446_i64);
_2 = core::ptr::addr_of!(_7.fld1.2);
_18 = !_16.0.0;
Goto(bb11)
}
bb11 = {
_8.1 = 5706_u16 % 60325_u16;
_14 = [_7.fld5,_7.fld5,_7.fld5,_7.fld5,_7.fld5];
_2 = core::ptr::addr_of!((*_1));
_15.fld0.fld4 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_21.fld1 = _15.fld2.fld4.fld0.1 << _16.0.1;
_10 = [_15.fld0.fld6.fld2,_15.fld0.fld5];
_15.fld0.fld1 = _6;
_23.1 = _8.1 ^ _8.1;
_15.fld2.fld0 = (_16.0.0, _21.fld1);
_15.fld2.fld4.fld0.1 = _5 as i32;
_23.0 = _20;
_23.1 = !_8.1;
_21.fld1 = _15.fld0.fld5 as i32;
_26.fld5 = !_15.fld0.fld5;
_7.fld0 = [_16.1,_15.fld2.fld0.0,_16.1,_16.1];
_19 = _23.1 as f32;
_15.fld2.fld0.0 = !_16.0.0;
_26.fld6.fld1 = _19 as i8;
_26.fld4 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_21.fld2 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_7.fld2 = core::ptr::addr_of!(_1);
Goto(bb12)
}
bb12 = {
_9.fld5 = [_15.fld2.fld0.1,_16.0.1,_15.fld2.fld0.1,_16.0.1];
_9.fld2 = [_7.fld5,_7.fld5,_7.fld5,_7.fld5,_7.fld5];
_15.fld2.fld0.1 = _7.fld4 as i32;
_16.0.1 = _15.fld2.fld4.fld0.1 & _15.fld2.fld4.fld0.1;
_22 = !_12;
_26.fld6.fld1 = 41_i8 << _15.fld2.fld4.fld0.0;
_28 = _9.fld0;
_15.fld4 = _7.fld5;
_23.0 = -_20;
_9.fld3 = _12 as i8;
(*_28) = (_23.0, _23.1);
_15.fld2.fld3.0 = _7.fld3;
_15.fld0.fld4 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_24 = ((*_28).0, (*_28).1);
_15.fld2.fld1.fld1 = core::ptr::addr_of!((*_2));
Goto(bb13)
}
bb13 = {
(*_28) = (_20, _24.1);
_14 = [_15.fld4,_15.fld4,_15.fld4,_7.fld5,_15.fld4];
_19 = _15.fld4 as f32;
_27 = [_15.fld2.fld4.fld0.0];
_31 = _17;
_21.fld0 = (*_28).1 != (*_28).1;
_5 = -_17;
_29.0 = _8.0 - _23.0;
_26.fld3 = _15.fld0.fld3;
_21.fld0 = !_22;
_26.fld3 = [_15.fld2.fld4.fld0.0,_16.0.0,_18,_15.fld2.fld0.0];
(*_1) = 8_u8;
_38 = [_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4,_7.fld4];
_19 = _15.fld0.fld5 as f32;
_15.fld2.fld4.fld1 = core::ptr::addr_of!(_7.fld3);
_8 = _23;
_32 = core::ptr::addr_of_mut!(_37);
(*_1) = !96_u8;
(*_1) = 78_u8 << _15.fld2.fld4.fld0.0;
_36 = ((*_28).0, _13, _3);
_15.fld2.fld4.fld0.0 = _19 as u128;
Goto(bb14)
}
bb14 = {
_16 = (_15.fld2.fld4.fld0, _15.fld2.fld4.fld0.0);
_7.fld4 = 3030275830_u32;
_34 = _7.fld4;
_26.fld3 = _9.fld4;
_29.1 = (*_28).1 % 7766_u16;
_36.0 = -_29.0;
_42.0 = (_16.1, _16.0.1);
_12 = !_22;
_42 = (_15.fld2.fld0, _21.fld0, (-11849_i16));
_9.fld3 = _26.fld6.fld1;
_15.fld0.fld6.fld0.0 = core::ptr::addr_of_mut!(_37);
_26.fld0 = !_21.fld0;
_34 = _6 as u32;
_35 = [_15.fld4,_15.fld4,_15.fld4,_7.fld5,_7.fld5];
_13 = _20 as usize;
_26.fld2 = core::ptr::addr_of_mut!((*_32));
_8.1 = !_24.1;
_21.fld0 = _12;
_30 = _28;
_26.fld4 = _15.fld0.fld4;
_26.fld4 = core::ptr::addr_of!(_15.fld2.fld4.fld1);
_43 = _26.fld0;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(13_usize, 42_usize, Move(_42), 12_usize, Move(_12), 22_usize, Move(_22), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(13_usize, 14_usize, Move(_14), 17_usize, Move(_17), 5_usize, Move(_5), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(13_usize, 16_usize, Move(_16), 18_usize, Move(_18), 49_usize, _49, 49_usize, _49), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: *const u8,mut _2: *const u8,mut _3: *const u8,mut _4: *const u8,mut _5: f64,mut _6: f64,mut _7: *const u8,mut _8: [u32; 7],mut _9: *const u8,mut _10: [u32; 7],mut _11: *const u8,mut _12: [u32; 7]) -> [u128; 4] {
mir! {
type RET = [u128; 4];
let _13: [u128; 4];
let _14: Adt55;
let _15: [i32; 4];
let _16: Adt57;
let _17: char;
let _18: f64;
let _19: Adt48;
let _20: (*const [u128; 4], f64, u8, *mut *mut (f64, u16));
let _21: isize;
let _22: Adt55;
let _23: Adt50;
let _24: u64;
let _25: (*const u8, [i64; 5]);
let _26: isize;
let _27: isize;
let _28: char;
let _29: i8;
let _30: f64;
let _31: bool;
let _32: [i32; 4];
let _33: f64;
let _34: i64;
let _35: *const [u128; 4];
let _36: isize;
let _37: ();
let _38: ();
{
_12 = [2868193778_u32,226111543_u32,600806276_u32,479834626_u32,1505388423_u32,3862656229_u32,3626148193_u32];
_3 = _9;
_10 = [3050330056_u32,2442717417_u32,1189582311_u32,1968219287_u32,4155717484_u32,2335402225_u32,3108833424_u32];
_12 = _10;
RET = [5872142986049092617844659170694987959_u128,216549903883901312223540991317789929630_u128,149222126881136012561353572714962068286_u128,106582419690127145139375251887966845068_u128];
_9 = _2;
_2 = _4;
_14.fld1 = 160348438066870530681244091200142111052_i128 - 35868159145524857524248209096800954480_i128;
_14.fld0 = true;
_14.fld6.fld1 = (-116_i8) * (-65_i8);
_9 = _1;
_14.fld5 = 16911668136886819626_u64 + 8684681076359463280_u64;
_14.fld6.fld2 = _14.fld5 << _14.fld5;
_16.fld1.0 = core::ptr::addr_of!(_13);
_17 = '\u{14c57}';
_14.fld1 = (-42032070333970534043715098553780361592_i128) - (-7383804044809843467165249277874340069_i128);
_16.fld1.2 = !164_u8;
_16.fld1.0 = core::ptr::addr_of!(_14.fld3);
Goto(bb1)
}
bb1 = {
_14.fld5 = _14.fld6.fld2 & _14.fld6.fld2;
RET = [118926844563005938706742335752319601987_u128,63543091465298569077700841342109565186_u128,164399715121508006546983047093007709457_u128,30910704124031917415572061952847979733_u128];
_13 = [210163411899181018977124057061136780035_u128,65820482617883420175435914287936216943_u128,53498294401312990593569361473552621370_u128,109784512928106776982692405730379464038_u128];
_16.fld3 = [_14.fld6.fld2,_14.fld5,_14.fld6.fld2,_14.fld5,_14.fld6.fld2,_14.fld6.fld2,_14.fld6.fld2];
_19.fld0 = [_14.fld5,_14.fld5,_14.fld5,_14.fld5,_14.fld5,_14.fld5,_14.fld5];
RET = _13;
_16.fld1.0 = core::ptr::addr_of!(_13);
_16.fld1.0 = core::ptr::addr_of!(_13);
_19.fld1.0 = core::ptr::addr_of!(_20.2);
_15 = [1547954987_i32,(-1614531049_i32),(-1623832036_i32),1855748483_i32];
_14.fld1 = 65231712364602661096101987493935714339_i128;
_6 = _5 * _5;
_10 = _8;
_14.fld6.fld2 = _14.fld5 ^ _14.fld5;
match _14.fld1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
65231712364602661096101987493935714339 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_14.fld1 = _6 as i128;
_13 = [138272368415538378368032786788986955957_u128,143518095686429738452311992627697686450_u128,188445851561555891009559826884155578590_u128,125074713943059641872807540621548199326_u128];
_14.fld0 = !true;
_6 = _5 + _5;
_22.fld0 = _14.fld0;
_15 = [703805536_i32,677196622_i32,(-13325544_i32),1953982405_i32];
_22.fld1 = _22.fld0 as i128;
_23.fld3 = [104602388174240396577282019592436726870_u128];
_16.fld0 = _13;
_4 = core::ptr::addr_of!(_16.fld1.2);
_4 = _11;
_13 = [178367187421140642733530562584782984900_u128,277965369810615220063274342368732906026_u128,215432892942207788956324427763102605396_u128,123288556378739963789477141856309320689_u128];
_20.0 = core::ptr::addr_of!(_22.fld3);
_2 = core::ptr::addr_of!(_20.2);
_17 = '\u{13e50}';
_22.fld6.fld2 = _14.fld5 & _14.fld5;
_22.fld5 = !_22.fld6.fld2;
_16.fld4 = 308737681_u32;
_6 = 7_usize as f64;
_1 = core::ptr::addr_of!(_20.2);
_16.fld0 = [36276382194322789650000971549660937073_u128,223940449617143027166554342352734108922_u128,304974821859854422396379205625765432709_u128,225328987066215342677802099401278955359_u128];
_13 = [238246833918609020489719125230546621295_u128,199866569088735444361615153628252816820_u128,238149245975316594146075117136112933272_u128,57695620967030671933728109666858920650_u128];
_20.2 = (-235528135_i32) as u8;
Goto(bb8)
}
bb8 = {
_18 = _5 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001922297546577834_f64;
_27 = !(-9223372036854775808_isize);
_20.1 = _6;
_18 = _14.fld6.fld1 as f64;
(*_1) = _16.fld4 as u8;
_22.fld3 = _16.fld0;
_18 = _14.fld1 as f64;
_24 = _22.fld6.fld2 * _22.fld6.fld2;
_10 = [_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4];
_26 = _27;
_10 = [_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4];
_16.fld5 = -(-1750689298954690112_i64);
(*_1) = _16.fld1.2 % 171_u8;
_29 = !_14.fld6.fld1;
_29 = !_14.fld6.fld1;
_19.fld0 = [_24,_14.fld5,_24,_24,_24,_24,_24];
Goto(bb9)
}
bb9 = {
_33 = (-13065_i16) as f64;
_25.0 = core::ptr::addr_of!((*_2));
_20.2 = _16.fld1.2 >> _24;
_32 = [(-1852567909_i32),(-539331030_i32),544629012_i32,636982392_i32];
(*_1) = !_16.fld1.2;
_9 = core::ptr::addr_of!(_16.fld1.2);
RET = [34751869405999234105110421545302926913_u128,122228760227208454322991514059408621764_u128,161527867257503326902157961871206421936_u128,104278470017189987416507023015068184431_u128];
_30 = _5 - _20.1;
match _16.fld4 {
0 => bb1,
1 => bb4,
2 => bb3,
308737681 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_33 = -_18;
RET = [198901479832177756432955245706090957359_u128,176924743265563271122378572340249509764_u128,80725283511257342221484992682866707549_u128,301605803828867351283270448503562936499_u128];
_14.fld3 = [294217211833756680579901981383340246189_u128,228246244601174169408487709049138223761_u128,270516782548917387002045606996566265416_u128,203968271115824128459802887640986126330_u128];
Goto(bb12)
}
bb12 = {
_16.fld1.1 = _33 - _30;
_29 = _14.fld6.fld1;
_14.fld0 = !_22.fld0;
_16.fld2 = core::ptr::addr_of!(_1);
_16.fld3 = [_22.fld6.fld2,_24,_22.fld5,_14.fld5,_22.fld5,_22.fld5,_24];
_20.1 = _6 * _30;
_14.fld3 = _13;
_11 = core::ptr::addr_of!((*_1));
_19.fld1.1 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_29 = _14.fld6.fld1;
(*_2) = 6273_u16 as u8;
_3 = core::ptr::addr_of!((*_1));
_3 = core::ptr::addr_of!((*_11));
(*_1) = (*_9) - _16.fld1.2;
_1 = _2;
_36 = _26;
_19.fld1.1 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_28 = _17;
_34 = -_16.fld5;
_19.fld0 = _16.fld3;
_16.fld2 = core::ptr::addr_of!(_4);
Goto(bb13)
}
bb13 = {
_13 = [240918077271442060511066250710216906597_u128,22288717273649079522412618464896341130_u128,33570029934406842108453540375072643278_u128,312516781846473490413753134743669172813_u128];
_25 = _19.fld1;
_29 = _14.fld6.fld1;
_19 = Adt48 { fld0: _16.fld3,fld1: _25 };
_6 = _30 * _16.fld1.1;
_22.fld6.fld1 = _14.fld6.fld1 | _14.fld6.fld1;
match _16.fld4 {
0 => bb12,
1 => bb2,
2 => bb3,
308737681 => bb15,
_ => bb14
}
}
bb14 = {
_33 = -_18;
RET = [198901479832177756432955245706090957359_u128,176924743265563271122378572340249509764_u128,80725283511257342221484992682866707549_u128,301605803828867351283270448503562936499_u128];
_14.fld3 = [294217211833756680579901981383340246189_u128,228246244601174169408487709049138223761_u128,270516782548917387002045606996566265416_u128,203968271115824128459802887640986126330_u128];
Goto(bb12)
}
bb15 = {
_22.fld3 = _13;
_27 = _26 << _24;
_8 = [_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4];
Goto(bb16)
}
bb16 = {
Call(_37 = dump_var(14_usize, 24_usize, Move(_24), 26_usize, Move(_26), 12_usize, Move(_12), 34_usize, Move(_34)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(14_usize, 8_usize, Move(_8), 27_usize, Move(_27), 32_usize, Move(_32), 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: *const (f64, u16),mut _2: Adt52,mut _3: u8,mut _4: *const u8,mut _5: [u64; 7],mut _6: *const u8,mut _7: [u64; 2],mut _8: [u32; 7],mut _9: *const u8,mut _10: u8,mut _11: i32,mut _12: bool,mut _13: [i64; 5],mut _14: *const *const [u64; 7]) -> [u64; 2] {
mir! {
type RET = [u64; 2];
let _15: bool;
let _16: (f64, usize, [u32; 7]);
let _17: isize;
let _18: Adt56;
let _19: i8;
let _20: isize;
let _21: [u32; 7];
let _22: Adt49;
let _23: (f64, u16);
let _24: isize;
let _25: f64;
let _26: [isize; 3];
let _27: Adt51;
let _28: [u128; 1];
let _29: [i32; 4];
let _30: [i64; 5];
let _31: bool;
let _32: *mut [u64; 2];
let _33: isize;
let _34: isize;
let _35: ([u64; 7],);
let _36: (f64, u16);
let _37: [isize; 3];
let _38: f32;
let _39: *mut *const i128;
let _40: u128;
let _41: f32;
let _42: *mut *const i128;
let _43: Adt57;
let _44: *mut *mut (f64, u16);
let _45: Adt61;
let _46: *const [u64; 7];
let _47: [u128; 5];
let _48: (*mut *const i128,);
let _49: Adt56;
let _50: *const u8;
let _51: Adt54;
let _52: isize;
let _53: *const *const u8;
let _54: [u128; 4];
let _55: Adt54;
let _56: ();
let _57: ();
{
_5 = [9169020628177361309_u64,13632452216340946646_u64,16175680765247067712_u64,17950417717153137149_u64,4287602712966974142_u64,13169469591716716118_u64,6429963263552126405_u64];
_1 = _2.fld3;
(*_1).1 = !38358_u16;
_6 = core::ptr::addr_of!((*_6));
_2.fld0 = (-134538467303548418133911379426203207472_i128) >> _3;
_1 = _2.fld3;
_4 = core::ptr::addr_of!((*_4));
_3 = _10;
(*_1).0 = (-742484060858554577_i64) as f64;
_6 = core::ptr::addr_of!((*_6));
(*_1).1 = !36170_u16;
_1 = core::ptr::addr_of!((*_1));
_2.fld3 = _1;
_5 = [8697337909678989552_u64,7647080911921302724_u64,17663902586349323045_u64,12347092971094982780_u64,5502025849158580746_u64,3790608901351641232_u64,2306746115220815847_u64];
Goto(bb1)
}
bb1 = {
(*_1).1 = 51780_u16;
_16.0 = (*_1).0 + (*_1).0;
_16.0 = (-6703547527099910483_i64) as f64;
(*_1) = (_16.0, 16946_u16);
(*_6) = _3 ^ _10;
_1 = core::ptr::addr_of!((*_1));
RET = _7;
_6 = core::ptr::addr_of!(_10);
(*_9) = (*_6) << _2.fld0;
_16.2 = [2222775058_u32,459614647_u32,3458112000_u32,3929905969_u32,3418307681_u32,2454355286_u32,2915045038_u32];
_19 = (-125_i8);
_18.fld0.fld1 = _19;
(*_14) = core::ptr::addr_of!(_5);
(*_1).1 = 5_usize as u16;
(*_6) = (*_9) / 255_u8;
_17 = (-32301_i16) as isize;
(*_14) = core::ptr::addr_of!(_5);
(*_6) = (*_9) + (*_4);
_3 = (*_6);
_16.0 = -(*_1).0;
(*_9) = _3;
_2.fld0 = 5_usize as i128;
_2.fld2 = core::ptr::addr_of!(_15);
match _18.fld0.fld1 {
340282366920938463463374607431768211331 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
(*_6) = (*_4) & (*_4);
(*_14) = core::ptr::addr_of!(_5);
Goto(bb4)
}
bb4 = {
_10 = (*_9);
_18.fld0.fld2 = _19 as u64;
RET = _7;
_15 = _3 <= (*_6);
_12 = _15;
Goto(bb5)
}
bb5 = {
_25 = (*_1).0 + _16.0;
_18.fld0.fld1 = _19 >> (*_1).1;
_22.fld2 = !_18.fld0.fld2;
_19 = _18.fld0.fld1;
_27.fld1.fld3 = [176421919380808138851718284641110465640_u128];
_27.fld1.fld1 = core::ptr::addr_of!((*_6));
_22.fld1 = _18.fld0.fld1 | _19;
_23.0 = -_25;
_10 = !_3;
RET = _7;
Goto(bb6)
}
bb6 = {
RET = [_22.fld2,_18.fld0.fld2];
_26 = [_17,_17,_17];
_21 = _8;
(*_4) = !(*_6);
(*_1).0 = _23.0;
_16.1 = 2_usize;
RET = [_22.fld2,_18.fld0.fld2];
(*_4) = (*_6);
_24 = _17 ^ _17;
(*_4) = !_10;
_7 = [_18.fld0.fld2,_18.fld0.fld2];
_27.fld1.fld3 = [52425170129381372667151368427366508481_u128];
_32 = core::ptr::addr_of_mut!(_7);
_28 = _27.fld1.fld3;
(*_32) = [_22.fld2,_18.fld0.fld2];
_14 = core::ptr::addr_of!((*_14));
(*_14) = core::ptr::addr_of!(_5);
_27.fld1.fld2 = core::ptr::addr_of!(_27.fld5);
Goto(bb7)
}
bb7 = {
_17 = _24 * _24;
_35.0 = [_22.fld2,_18.fld0.fld2,_22.fld2,_22.fld2,_18.fld0.fld2,_18.fld0.fld2,_22.fld2];
_7 = [_22.fld2,_22.fld2];
_18.fld0.fld2 = _22.fld2;
_36.0 = -_25;
_27.fld1.fld1 = _6;
_30 = [(-8715306788197915653_i64),4967386987553300773_i64,5201556990728925066_i64,2677457350641902257_i64,(-589562941469256598_i64)];
_27.fld2 = _2.fld0 as f64;
_22.fld1 = _19;
_16.0 = (*_1).0 + _27.fld2;
(*_1) = (_27.fld2, 29339_u16);
_10 = (*_4);
_2.fld1 = _8;
_36 = (*_1);
_38 = _16.0 as f32;
_29 = [_11,_11,_11,_11];
(*_14) = core::ptr::addr_of!(_5);
_19 = (*_6) as i8;
match _36.1 {
0 => bb5,
1 => bb3,
29339 => bb9,
_ => bb8
}
}
bb8 = {
RET = [_22.fld2,_18.fld0.fld2];
_26 = [_17,_17,_17];
_21 = _8;
(*_4) = !(*_6);
(*_1).0 = _23.0;
_16.1 = 2_usize;
RET = [_22.fld2,_18.fld0.fld2];
(*_4) = (*_6);
_24 = _17 ^ _17;
(*_4) = !_10;
_7 = [_18.fld0.fld2,_18.fld0.fld2];
_27.fld1.fld3 = [52425170129381372667151368427366508481_u128];
_32 = core::ptr::addr_of_mut!(_7);
_28 = _27.fld1.fld3;
(*_32) = [_22.fld2,_18.fld0.fld2];
_14 = core::ptr::addr_of!((*_14));
(*_14) = core::ptr::addr_of!(_5);
_27.fld1.fld2 = core::ptr::addr_of!(_27.fld5);
Goto(bb7)
}
bb9 = {
_6 = _27.fld1.fld1;
_36 = (_16.0, (*_1).1);
_33 = _24;
_16.2 = [1015391865_u32,459389820_u32,19529912_u32,1201737988_u32,4253852607_u32,357072097_u32,2362662367_u32];
Goto(bb10)
}
bb10 = {
_27.fld1.fld3 = _28;
(*_32) = [_22.fld2,_22.fld2];
_32 = core::ptr::addr_of_mut!((*_32));
_16.0 = (*_1).1 as f64;
_41 = 998393000_u32 as f32;
(*_1).0 = _16.0;
_23 = (_16.0, _36.1);
(*_32) = [_18.fld0.fld2,_22.fld2];
(*_1).0 = _25 * _16.0;
_36.1 = (*_1).1;
_22.fld2 = _18.fld0.fld2;
_41 = -_38;
_43.fld1.2 = (*_4);
_9 = _27.fld1.fld1;
(*_14) = core::ptr::addr_of!(_5);
_37 = [_24,_17,_24];
_2.fld0 = '\u{99723}' as i128;
(*_1).0 = _36.0 / f64::NAN;
(*_32) = [_22.fld2,_22.fld2];
_14 = core::ptr::addr_of!((*_14));
_41 = -_38;
_23.1 = _36.1;
(*_14) = core::ptr::addr_of!(_35.0);
_13 = [9045400714168433790_i64,1281322063274802377_i64,(-5748908948156107298_i64),(-5297693697458062094_i64),(-5424461421524763311_i64)];
_27.fld1.fld3 = [255027892753414490439704634277233885488_u128];
_16.0 = -_36.0;
_24 = _19 as isize;
Goto(bb11)
}
bb11 = {
_43.fld2 = core::ptr::addr_of!(_45.fld2.fld1.fld1);
_45.fld2.fld4.fld0.1 = _18.fld0.fld2 as i32;
_45.fld0.fld5 = !_18.fld0.fld2;
_27.fld5 = [44285088848933410499431178136081681915_u128,181485277599903145483471777332625759028_u128,239066506982158672626793368651823668989_u128,81980300622753190516390640319498953069_u128];
_45.fld2.fld0 = (197521245075128962354227551908303359478_u128, _45.fld2.fld4.fld0.1);
(*_6) = '\u{f94ca}' as u8;
_22.fld2 = _18.fld0.fld2;
_45.fld0.fld3 = [_45.fld2.fld0.0,_45.fld2.fld0.0,_45.fld2.fld0.0,_45.fld2.fld0.0];
_45.fld2.fld4.fld0 = (_45.fld2.fld0.0, _11);
_45.fld2.fld1.fld3 = [_45.fld2.fld4.fld0.0];
match _23.1 {
29339 => bb12,
_ => bb7
}
}
bb12 = {
_27.fld4 = core::ptr::addr_of!(_43.fld0);
_31 = !_15;
_16.1 = 2_usize ^ 18234396551004253388_usize;
_45.fld2.fld4.fld1 = (*_14);
_10 = _3 % 20_u8;
_45.fld1 = '\u{10ce08}';
_45.fld2.fld2 = core::ptr::addr_of_mut!((*_32));
(*_4) = !(*_6);
_21 = _8;
(*_9) = 23496_i16 as u8;
_27.fld3 = _12 as usize;
_45.fld2.fld4.fld0 = (_45.fld2.fld0.0, _45.fld2.fld0.1);
_36 = ((*_1).0, _23.1);
_34 = (-24601_i16) as isize;
Goto(bb13)
}
bb13 = {
_43.fld1.1 = -(*_1).0;
_26 = [_17,_24,_17];
(*_6) = (-27811_i16) as u8;
match _23.1 {
0 => bb5,
29339 => bb14,
_ => bb2
}
}
bb14 = {
(*_6) = (*_4);
_49.fld0.fld1 = !_19;
_45.fld2.fld4.fld0.0 = 6505544769065733832_i64 as u128;
_41 = _38 * _38;
(*_1).0 = _23.0;
Goto(bb15)
}
bb15 = {
Call(_56 = dump_var(15_usize, 7_usize, Move(_7), 3_usize, Move(_3), 10_usize, Move(_10), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_56 = dump_var(15_usize, 19_usize, Move(_19), 24_usize, Move(_24), 35_usize, Move(_35), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_56 = dump_var(15_usize, 21_usize, Move(_21), 30_usize, Move(_30), 13_usize, Move(_13), 57_usize, _57), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [u64; 2],mut _2: [isize; 3],mut _3: [i64; 5],mut _4: [isize; 3],mut _5: [u64; 2],mut _6: [u64; 2],mut _7: [u32; 7],mut _8: i8,mut _9: [u32; 7],mut _10: [isize; 3],mut _11: [u128; 1],mut _12: i128,mut _13: [u128; 1],mut _14: [i64; 5]) -> [u64; 7] {
mir! {
type RET = [u64; 7];
let _15: [u64; 2];
let _16: [u64; 7];
let _17: f32;
let _18: i64;
let _19: *const bool;
let _20: ((u128, i32), bool, i16);
let _21: [u128; 4];
let _22: i8;
let _23: [u128; 5];
let _24: [u128; 4];
let _25: [u128; 4];
let _26: f64;
let _27: i8;
let _28: [u128; 5];
let _29: isize;
let _30: Adt49;
let _31: u64;
let _32: i64;
let _33: bool;
let _34: u8;
let _35: [u64; 7];
let _36: isize;
let _37: Adt58;
let _38: u64;
let _39: u128;
let _40: (u128, i32);
let _41: (f64, usize, [u32; 7]);
let _42: [u128; 1];
let _43: Adt59;
let _44: ();
let _45: ();
{
_10 = _4;
_4 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5 = [2306954909942758606_u64,9619241819551105806_u64];
_14 = [(-2828814518003361555_i64),6354807654185726823_i64,(-3199219300719382398_i64),(-1844628626193508616_i64),7520940053217751389_i64];
_7 = [2043996074_u32,2545965024_u32,843988241_u32,521255409_u32,17385265_u32,1712724418_u32,1028462485_u32];
_1 = [7036213058328115113_u64,11974915241476840526_u64];
_5 = _6;
_10 = _4;
_1 = [10067793266457491166_u64,2057687290807927659_u64];
Call(_10 = fn17(_5, _8, _2, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = [1127511492_u32,2417869989_u32,152091224_u32,3398982946_u32,20002934_u32,1149469925_u32,1461123724_u32];
RET = [4169201215464727059_u64,3104151377637139315_u64,15101901618950342780_u64,11782169162171654603_u64,17190138913579255003_u64,9059746045716502014_u64,8112206166257122136_u64];
RET = [3234205121576926054_u64,2845958636971558750_u64,15014405475598308572_u64,4786919361021941010_u64,16848217045152221476_u64,13062138380333819663_u64,15363628083622378572_u64];
RET = [4013555824354073003_u64,16682625200485965736_u64,4694230159371449950_u64,9689637459499767227_u64,13095594545440759230_u64,6025629451004068657_u64,11329525503692003115_u64];
_2 = [39_isize,9223372036854775807_isize,9223372036854775807_isize];
_12 = 84082049348696794279996726473458687724_i128;
RET = [7680621534883515516_u64,1190855111897976351_u64,9152102574137601607_u64,16469093085785336722_u64,8114014373490969580_u64,9942989455121041313_u64,12776153690397045469_u64];
_2 = [9223372036854775807_isize,9223372036854775807_isize,76_isize];
_5 = [7029329208122264589_u64,9336628920781703964_u64];
_6 = [2418262848067708407_u64,4953111725499130952_u64];
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-106_isize)];
_15 = [9214248929543708606_u64,9987700459154734893_u64];
match _12 {
0 => bb2,
84082049348696794279996726473458687724 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_4 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_6 = [8206737453078457401_u64,17686261520690282820_u64];
RET = [6070644318612737781_u64,7671425646409947365_u64,12356024928598910656_u64,1295805332809078601_u64,5714675064726266138_u64,7202023069729402107_u64,2801118012980582620_u64];
_9 = [275517796_u32,1886571754_u32,3825470247_u32,2100745028_u32,3556746333_u32,3281715042_u32,2762783575_u32];
_3 = _14;
_9 = [2410346432_u32,1818602902_u32,2470036814_u32,1047267034_u32,2463997840_u32,3641908918_u32,773198759_u32];
_15 = [17453563203273398001_u64,17609346943345384192_u64];
_3 = [(-3717279153372115759_i64),8886250999787596824_i64,(-4560149594225191797_i64),1494166636716013918_i64,2528158210023949116_i64];
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_17 = 6262987808855470526_i64 as f32;
_16 = [4303371944543289662_u64,1239822338080195214_u64,18091540332831654559_u64,1663207525685426831_u64,15349668079210081727_u64,10773690145023941936_u64,14054560531156479957_u64];
RET = _16;
_5 = _1;
_2 = _10;
_17 = (-522922201_i32) as f32;
_18 = 4070457219330473027_i64;
_2 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_6 = [15152494706910396458_u64,11499201570039015574_u64];
_12 = !32472404716678653981588976517380709378_i128;
_17 = 52_u8 as f32;
_7 = _9;
_17 = _12 as f32;
_20.0.0 = 126287453950684582332197333800048541631_u128 - 88867936499758149656551212454913331897_u128;
match _18 {
4070457219330473027 => bb5,
_ => bb2
}
}
bb5 = {
_5 = [758335995908905986_u64,2442835885562225135_u64];
_10 = [47_isize,(-58_isize),100_isize];
_13 = [_20.0.0];
_5 = _6;
_20.2 = (-27696_i16) * 9618_i16;
_9 = _7;
_14 = [_18,_18,_18,_18,_18];
_6 = _5;
_13 = [_20.0.0];
_21 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_6 = _1;
_22 = !_8;
_12 = !140731312236808875302069907031910231508_i128;
_20.1 = !true;
_11 = [_20.0.0];
RET = [11521182875557432811_u64,7723049646969887210_u64,769624488582256055_u64,17983535557762107855_u64,18270672406961678523_u64,1414919954130672511_u64,12959096106680433239_u64];
_24 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_20.0.0 = !218546219272672242160760873616872102948_u128;
_24 = _21;
_11 = _13;
RET = [7882360673489669805_u64,4702775594134604891_u64,3696300680025890005_u64,11894681832769692443_u64,10713970554095092216_u64,12875740252647672741_u64,7767137146618670627_u64];
Call(_1 = fn18(_4, _15, _6, _4, _21, _4, _16, _20.1, _10, _18, _22, _2, _10, _11, _6), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_7 = _9;
_4 = [9223372036854775807_isize,70_isize,(-9223372036854775808_isize)];
_20.0.1 = _20.0.0 as i32;
Goto(bb7)
}
bb7 = {
_20.0 = (212104390148100847085682196653204619875_u128, 1090094468_i32);
_25 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_15 = [9322661752903856427_u64,8597967346717354896_u64];
_20.0.0 = 310136898826852930208404147305616882449_u128 / 83019071978715912941759816053325082992_u128;
_26 = 65_u8 as f64;
_13 = [_20.0.0];
_6 = _15;
_19 = core::ptr::addr_of!(_20.1);
Goto(bb8)
}
bb8 = {
_19 = core::ptr::addr_of!((*_19));
_22 = _8 ^ _8;
_16 = [5992433904577700569_u64,13363622361576063165_u64,10364242576431499348_u64,11871736170903567340_u64,9623723914148215619_u64,4183134259092752827_u64,11873155000118770983_u64];
_6 = [15365778551176680700_u64,17506578056841101407_u64];
_23 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_18 = !8796905655664978458_i64;
_20.0.0 = !268896176677868366613703404970113164904_u128;
_1 = [16911802739886336317_u64,11549766429525206184_u64];
_27 = _22;
_23 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_21 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
RET = [11362426917115045497_u64,8071563696616272110_u64,16904131204409873122_u64,13860349442531542592_u64,11036930782328000667_u64,16255298404813543175_u64,12073396595311680166_u64];
Call(_16 = fn19(_20.0, _18, _26, _20.1, _6, _20.0, _24, _2, _24, _13, _20.0.1, (*_19), _23), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_11 = _13;
_13 = [_20.0.0];
_14 = [_18,_18,_18,_18,_18];
_6 = _15;
RET = _16;
(*_19) = !false;
_9 = [2260616740_u32,1415310992_u32,3517050538_u32,3992515302_u32,3432215121_u32,2568399324_u32,3440140379_u32];
Goto(bb10)
}
bb10 = {
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_6 = [16801457508612700536_u64,12303337927445688983_u64];
_5 = _6;
_9 = [3245727109_u32,3561165701_u32,2887915015_u32,2767809744_u32,242322104_u32,1456678918_u32,391318754_u32];
_5 = _15;
(*_19) = true ^ true;
match _20.0.1 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb7,
4 => bb5,
1090094468 => bb11,
_ => bb9
}
}
bb11 = {
(*_19) = false;
_4 = [9223372036854775807_isize,(-75_isize),83_isize];
_10 = [59_isize,(-63_isize),9223372036854775807_isize];
_17 = _27 as f32;
_32 = -_18;
_1 = [16187328615302086017_u64,3362842934744681752_u64];
_14 = [_32,_18,_32,_32,_18];
_26 = 3814473284248075746_u64 as f64;
_18 = _32 ^ _32;
_33 = !(*_19);
_1 = _6;
_10 = _2;
_26 = _20.0.0 as f64;
_8 = !_27;
(*_19) = _33 & _33;
_27 = _22 + _22;
_12 = 20330170893321183517523609923825486230_i128;
match _20.0.1 {
1090094468 => bb12,
_ => bb9
}
}
bb12 = {
_20.1 = _27 > _27;
_24 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_3 = _14;
_13 = [_20.0.0];
_7 = [3433681591_u32,3642889917_u32,1645540712_u32,1686997841_u32,1473853320_u32,2501033769_u32,1137946890_u32];
_2 = _4;
_20.1 = _33;
_35 = [15790699090532797819_u64,12189913730846972947_u64,3727475887959346981_u64,7150925165143220252_u64,18355483928232800860_u64,11531084975386957800_u64,6514531546687591068_u64];
_28 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_9 = [3127117540_u32,3024728434_u32,3307135001_u32,803774737_u32,3499215400_u32,596413982_u32,2766241147_u32];
_15 = [4361868223643908399_u64,7988676874636156413_u64];
_3 = _14;
_28 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_16 = [4776888318549178921_u64,2651389590085425910_u64,12690127922487756573_u64,7875794140447319877_u64,3586459038808818072_u64,9652958187456137580_u64,7767016842171493900_u64];
_1 = _15;
(*_19) = !_33;
_21 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_3 = [_32,_18,_18,_18,_32];
_8 = !_27;
_13 = [_20.0.0];
match _20.0.1 {
0 => bb9,
1 => bb2,
2 => bb4,
3 => bb13,
4 => bb14,
1090094468 => bb16,
_ => bb15
}
}
bb13 = {
(*_19) = false;
_4 = [9223372036854775807_isize,(-75_isize),83_isize];
_10 = [59_isize,(-63_isize),9223372036854775807_isize];
_17 = _27 as f32;
_32 = -_18;
_1 = [16187328615302086017_u64,3362842934744681752_u64];
_14 = [_32,_18,_32,_32,_18];
_26 = 3814473284248075746_u64 as f64;
_18 = _32 ^ _32;
_33 = !(*_19);
_1 = _6;
_10 = _2;
_26 = _20.0.0 as f64;
_8 = !_27;
(*_19) = _33 & _33;
_27 = _22 + _22;
_12 = 20330170893321183517523609923825486230_i128;
match _20.0.1 {
1090094468 => bb12,
_ => bb9
}
}
bb14 = {
_7 = [1127511492_u32,2417869989_u32,152091224_u32,3398982946_u32,20002934_u32,1149469925_u32,1461123724_u32];
RET = [4169201215464727059_u64,3104151377637139315_u64,15101901618950342780_u64,11782169162171654603_u64,17190138913579255003_u64,9059746045716502014_u64,8112206166257122136_u64];
RET = [3234205121576926054_u64,2845958636971558750_u64,15014405475598308572_u64,4786919361021941010_u64,16848217045152221476_u64,13062138380333819663_u64,15363628083622378572_u64];
RET = [4013555824354073003_u64,16682625200485965736_u64,4694230159371449950_u64,9689637459499767227_u64,13095594545440759230_u64,6025629451004068657_u64,11329525503692003115_u64];
_2 = [39_isize,9223372036854775807_isize,9223372036854775807_isize];
_12 = 84082049348696794279996726473458687724_i128;
RET = [7680621534883515516_u64,1190855111897976351_u64,9152102574137601607_u64,16469093085785336722_u64,8114014373490969580_u64,9942989455121041313_u64,12776153690397045469_u64];
_2 = [9223372036854775807_isize,9223372036854775807_isize,76_isize];
_5 = [7029329208122264589_u64,9336628920781703964_u64];
_6 = [2418262848067708407_u64,4953111725499130952_u64];
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-106_isize)];
_15 = [9214248929543708606_u64,9987700459154734893_u64];
match _12 {
0 => bb2,
84082049348696794279996726473458687724 => bb4,
_ => bb3
}
}
bb15 = {
Return()
}
bb16 = {
_37.fld6 = 100_u8;
_37.fld0 = 13671621985347342382_usize << _27;
_37.fld1 = core::ptr::addr_of!(_37.fld6);
_19 = core::ptr::addr_of!((*_19));
(*_19) = _37.fld0 != _37.fld0;
_26 = _12 as f64;
_27 = _22 << _37.fld0;
_37.fld0 = !578245721283839774_usize;
_36 = (-9223372036854775808_isize);
_35 = [71368281237664574_u64,8626858820929485416_u64,10752102373001999706_u64,3060898516560790793_u64,2853961170844205051_u64,17844034473446192447_u64,2208594128486921489_u64];
_33 = _20.1 & _20.1;
_37.fld2.fld0 = _20.0.0 as i128;
_37.fld4 = [_20.0.0];
_41.2 = [2543875728_u32,3915476454_u32,1738276257_u32,3777109510_u32,400556418_u32,609769626_u32,2026529961_u32];
_28 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_35 = [3055993045963103063_u64,5560641250477961147_u64,14099181377166928294_u64,14179648276778116262_u64,17819297847251639365_u64,17397869635916288573_u64,7690424846011509233_u64];
Goto(bb17)
}
bb17 = {
Call(_44 = dump_var(16_usize, 1_usize, Move(_1), 18_usize, Move(_18), 21_usize, Move(_21), 23_usize, Move(_23)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(16_usize, 20_usize, Move(_20), 6_usize, Move(_6), 22_usize, Move(_22), 16_usize, Move(_16)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_44 = dump_var(16_usize, 7_usize, Move(_7), 9_usize, Move(_9), 13_usize, Move(_13), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_44 = dump_var(16_usize, 25_usize, Move(_25), 12_usize, Move(_12), 45_usize, _45, 45_usize, _45), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [u64; 2],mut _2: i8,mut _3: [isize; 3],mut _4: [i64; 5]) -> [isize; 3] {
mir! {
type RET = [isize; 3];
let _5: [i32; 4];
let _6: (u128, i32);
let _7: f64;
let _8: isize;
let _9: [i32; 4];
let _10: [u64; 2];
let _11: char;
let _12: [u128; 5];
let _13: Adt48;
let _14: [u32; 7];
let _15: i64;
let _16: [u128; 1];
let _17: Adt54;
let _18: [isize; 3];
let _19: [u32; 7];
let _20: i16;
let _21: bool;
let _22: isize;
let _23: i128;
let _24: usize;
let _25: i16;
let _26: *mut [u64; 2];
let _27: Adt60;
let _28: ((u128, i32), u128);
let _29: [u32; 7];
let _30: f32;
let _31: [u128; 5];
let _32: bool;
let _33: Adt57;
let _34: Adt62;
let _35: f32;
let _36: bool;
let _37: [u64; 7];
let _38: f32;
let _39: [u128; 1];
let _40: f64;
let _41: usize;
let _42: f32;
let _43: u32;
let _44: [i32; 4];
let _45: i64;
let _46: [u128; 4];
let _47: [u128; 1];
let _48: ();
let _49: ();
{
_1 = [3443999826003254117_u64,7859401443006995794_u64];
RET = [(-9223372036854775808_isize),9223372036854775807_isize,(-50_isize)];
RET = _3;
_5 = [1898580186_i32,(-514119962_i32),984645712_i32,(-1079451782_i32)];
_6 = (65283807510758654567876037564000267756_u128, (-752465014_i32));
_4 = [(-3937601396044736106_i64),1382677791335782302_i64,4957213178356114379_i64,(-4587258270753518899_i64),4354324996255011332_i64];
_4 = [(-7284879642967886795_i64),9196199909849547833_i64,(-5503123278694880755_i64),(-1111017340232943720_i64),(-7340841705557267150_i64)];
RET = [(-76_isize),125_isize,(-126_isize)];
_3 = [(-41_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_4 = [8043194044225406938_i64,9061797667946305574_i64,(-964761265622079603_i64),(-7408833992396596545_i64),4296666633910835116_i64];
_2 = 1288698563_u32 as i8;
_8 = !(-9223372036854775808_isize);
_3 = [_8,_8,_8];
_6 = (54542010812638708420926920938797922942_u128, 1368557157_i32);
_6.1 = 1439566185_i32;
_6.0 = 83484113235175738870846528161640865905_u128 * 115926431345637791230555459656495628554_u128;
_8 = 4178_i16 as isize;
_10 = _1;
_12 = [_6.0,_6.0,_6.0,_6.0,_6.0];
Goto(bb1)
}
bb1 = {
_9 = _5;
_5 = _9;
_10 = _1;
_13.fld0 = [4242367080660238952_u64,7120344417674193023_u64,6983806584654139391_u64,1496671757996266391_u64,10191974703716607454_u64,3205087362147855285_u64,455582138463119209_u64];
_9 = [_6.1,_6.1,_6.1,_6.1];
_9 = [_6.1,_6.1,_6.1,_6.1];
_6.0 = 75930490460109032426885066841980378036_u128;
_14 = [2849317541_u32,55064243_u32,3185098616_u32,862896793_u32,2948881747_u32,413500152_u32,3376954401_u32];
_6.0 = !296458336660155475614315215829596035946_u128;
_2 = -90_i8;
_17.fld4 = [_6.0,_6.0,_6.0,_6.0,_6.0];
_11 = '\u{e30b5}';
_17.fld2 = _5;
_6 = (299203359019122680714396944444677128163_u128, 187828628_i32);
_15 = 1074315186842995220_i64 * (-7835448582878034123_i64);
_9 = [_6.1,_6.1,_6.1,_6.1];
_7 = 30919_u16 as f64;
_9 = _17.fld2;
_10 = _1;
_1 = [1795396542692798739_u64,9767904530291318836_u64];
_19 = [1572023046_u32,3879479039_u32,1836468537_u32,1819347307_u32,1137888240_u32,2211859615_u32,2616482513_u32];
Goto(bb2)
}
bb2 = {
_18 = [_8,_8,_8];
_8 = 9223372036854775807_isize;
_7 = (-14226_i16) as f64;
_6.1 = (-478001423_i32);
_14 = [4001157335_u32,3660929748_u32,2674768971_u32,1403122764_u32,3290493863_u32,478137943_u32,2300662441_u32];
_17.fld3 = _2;
_3 = _18;
_13.fld1.1 = [_15,_15,_15,_15,_15];
_6.0 = 223537998193285137318198183616907512466_u128;
_9 = [_6.1,_6.1,_6.1,_6.1];
_13.fld0 = [7760608466291965580_u64,4042565935547105051_u64,12412027768207839113_u64,2150863986562951903_u64,16942635992694579094_u64,8419689928628274668_u64,5190617599841076180_u64];
_10 = [17033519544905306311_u64,741526379555994180_u64];
_14 = _19;
_15 = !(-5728122200182309705_i64);
_6.1 = 705515475_i32;
_7 = 21634_u16 as f64;
_5 = [_6.1,_6.1,_6.1,_6.1];
_3 = [_8,_8,_8];
_8 = !54_isize;
_21 = !false;
_20 = !16807_i16;
Goto(bb3)
}
bb3 = {
_17.fld6 = core::ptr::addr_of!(_13.fld0);
_17.fld0.fld3 = [_6.0];
_8 = (-9223372036854775808_isize);
_23 = _6.1 as i128;
_14 = [915527918_u32,3738943731_u32,216699908_u32,2752096603_u32,760517056_u32,2684017755_u32,3985906231_u32];
_16 = [_6.0];
_15 = !6465242823409543278_i64;
_17.fld0.fld2 = core::ptr::addr_of!(_27.fld4);
_23 = 160529549787329063482218715401507867954_i128 & (-145012128174755498787978614858226303691_i128);
Goto(bb4)
}
bb4 = {
_13.fld0 = [11715763794029184601_u64,11845339714122623098_u64,2587095958725325781_u64,5008231455318147921_u64,4500957523513509508_u64,11138804740755549777_u64,11549003973372648172_u64];
_17.fld3 = _6.1 as i8;
_27.fld3 = _2;
_17.fld6 = core::ptr::addr_of!(_13.fld0);
_28.0.1 = _6.1 + _6.1;
_27.fld4 = [_6.0,_6.0,_6.0,_6.0];
_16 = [_6.0];
_27.fld4 = [_6.0,_6.0,_6.0,_6.0];
_28.1 = _6.0 >> _17.fld3;
_27.fld2 = [_15,_15,_15,_15,_15];
_7 = _28.0.1 as f64;
_33.fld4 = 4244337317_u32 & 3573962545_u32;
_17.fld0.fld1 = core::ptr::addr_of!(_33.fld1.2);
_26 = core::ptr::addr_of_mut!(_1);
_33.fld5 = _15 & _15;
_22 = _21 as isize;
_29 = [_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4];
_8 = _22;
Goto(bb5)
}
bb5 = {
_17.fld6 = core::ptr::addr_of!(_33.fld3);
_3 = [_22,_22,_22];
_1 = [13114417495485636770_u64,7679085789618172389_u64];
_34.fld6.fld4 = _17.fld0.fld3;
_28.0 = _6;
_27.fld2 = [_15,_15,_15,_33.fld5,_15];
_34.fld6.fld2.fld0 = 49455_u16 as i128;
_33.fld0 = [_28.1,_28.1,_28.1,_6.0];
match _28.0.0 {
0 => bb6,
223537998193285137318198183616907512466 => bb8,
_ => bb7
}
}
bb6 = {
_18 = [_8,_8,_8];
_8 = 9223372036854775807_isize;
_7 = (-14226_i16) as f64;
_6.1 = (-478001423_i32);
_14 = [4001157335_u32,3660929748_u32,2674768971_u32,1403122764_u32,3290493863_u32,478137943_u32,2300662441_u32];
_17.fld3 = _2;
_3 = _18;
_13.fld1.1 = [_15,_15,_15,_15,_15];
_6.0 = 223537998193285137318198183616907512466_u128;
_9 = [_6.1,_6.1,_6.1,_6.1];
_13.fld0 = [7760608466291965580_u64,4042565935547105051_u64,12412027768207839113_u64,2150863986562951903_u64,16942635992694579094_u64,8419689928628274668_u64,5190617599841076180_u64];
_10 = [17033519544905306311_u64,741526379555994180_u64];
_14 = _19;
_15 = !(-5728122200182309705_i64);
_6.1 = 705515475_i32;
_7 = 21634_u16 as f64;
_5 = [_6.1,_6.1,_6.1,_6.1];
_3 = [_8,_8,_8];
_8 = !54_isize;
_21 = !false;
_20 = !16807_i16;
Goto(bb3)
}
bb7 = {
_17.fld6 = core::ptr::addr_of!(_13.fld0);
_17.fld0.fld3 = [_6.0];
_8 = (-9223372036854775808_isize);
_23 = _6.1 as i128;
_14 = [915527918_u32,3738943731_u32,216699908_u32,2752096603_u32,760517056_u32,2684017755_u32,3985906231_u32];
_16 = [_6.0];
_15 = !6465242823409543278_i64;
_17.fld0.fld2 = core::ptr::addr_of!(_27.fld4);
_23 = 160529549787329063482218715401507867954_i128 & (-145012128174755498787978614858226303691_i128);
Goto(bb4)
}
bb8 = {
_13.fld1.0 = core::ptr::addr_of!(_33.fld1.2);
RET = [_8,_8,_8];
_6 = (_28.1, _28.0.1);
_34.fld6.fld4 = [_6.0];
RET = _18;
_34.fld6.fld5 = core::ptr::addr_of!(_17.fld6);
_36 = !_21;
_28.0 = (_6.0, _6.1);
Goto(bb9)
}
bb9 = {
_34.fld3 = core::ptr::addr_of_mut!(_34.fld0);
_4 = _13.fld1.1;
_33.fld5 = !_15;
_30 = _28.0.1 as f32;
_28.0.0 = !_6.0;
Goto(bb10)
}
bb10 = {
_33.fld2 = core::ptr::addr_of!(_17.fld0.fld1);
_33.fld0 = _27.fld4;
Goto(bb11)
}
bb11 = {
_34.fld6.fld6 = 15595625769761913053_usize as u8;
_34.fld6.fld2.fld1 = [_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4,_33.fld4];
_17.fld3 = !_27.fld3;
_17.fld4 = [_6.0,_28.1,_28.0.0,_28.0.0,_6.0];
RET = _3;
_17.fld5 = core::ptr::addr_of!(_33.fld1.2);
_34.fld6.fld5 = core::ptr::addr_of!(_17.fld6);
_22 = _8;
_9 = _17.fld2;
_11 = '\u{76043}';
_17.fld0.fld1 = core::ptr::addr_of!(_33.fld1.2);
_34.fld6.fld4 = [_6.0];
_5 = [_6.1,_6.1,_6.1,_28.0.1];
_13.fld1.0 = core::ptr::addr_of!(_33.fld1.2);
_33.fld5 = _15;
_17.fld0.fld3 = [_28.1];
_20 = -26562_i16;
_17.fld0.fld1 = core::ptr::addr_of!(_33.fld1.2);
_12 = _17.fld4;
_7 = 7495757611492610445_u64 as f64;
_8 = _22;
_34.fld6.fld0 = 57179_u16 as usize;
_41 = !_34.fld6.fld0;
_17.fld0.fld1 = core::ptr::addr_of!(_33.fld1.2);
_17.fld3 = _27.fld3 | _2;
_31 = _17.fld4;
Goto(bb12)
}
bb12 = {
_34.fld0 = core::ptr::addr_of!(_34.fld6.fld2.fld0);
_7 = _20 as f64;
_20 = (-14396_i16) - 22279_i16;
_42 = 17266287026561871270_u64 as f32;
_6.1 = !_28.0.1;
_34.fld2 = _8 | _22;
_7 = _2 as f64;
_16 = [_6.0];
_34.fld6.fld3 = _2;
_27.fld5 = _5;
_17.fld2 = [_28.0.1,_28.0.1,_28.0.1,_6.1];
_28.0.1 = _6.1;
_34.fld1 = [_15,_33.fld5,_15,_33.fld5,_15];
Goto(bb13)
}
bb13 = {
_43 = _33.fld4;
_40 = -_7;
_33.fld2 = core::ptr::addr_of!(_13.fld1.0);
_34.fld6.fld6 = 55_u8 << _43;
_11 = '\u{c65d1}';
Goto(bb14)
}
bb14 = {
_34.fld0 = core::ptr::addr_of!(_34.fld6.fld2.fld0);
_34.fld6.fld6 = 228_u8 + 195_u8;
_23 = _34.fld6.fld2.fld0;
_30 = -_42;
_3 = [_34.fld2,_34.fld2,_34.fld2];
_34.fld1 = _13.fld1.1;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(17_usize, 20_usize, Move(_20), 41_usize, Move(_41), 1_usize, Move(_1), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(17_usize, 8_usize, Move(_8), 43_usize, Move(_43), 23_usize, Move(_23), 36_usize, Move(_36)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(17_usize, 29_usize, Move(_29), 3_usize, Move(_3), 21_usize, Move(_21), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(17_usize, 19_usize, Move(_19), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [isize; 3],mut _2: [u64; 2],mut _3: [u64; 2],mut _4: [isize; 3],mut _5: [u128; 4],mut _6: [isize; 3],mut _7: [u64; 7],mut _8: bool,mut _9: [isize; 3],mut _10: i64,mut _11: i8,mut _12: [isize; 3],mut _13: [isize; 3],mut _14: [u128; 1],mut _15: [u64; 2]) -> [u64; 2] {
mir! {
type RET = [u64; 2];
let _16: ([u64; 7],);
let _17: i128;
let _18: f64;
let _19: [i32; 4];
let _20: u64;
let _21: [u64; 7];
let _22: usize;
let _23: ([u64; 7],);
let _24: bool;
let _25: u32;
let _26: u8;
let _27: f32;
let _28: u32;
let _29: i128;
let _30: [u64; 7];
let _31: isize;
let _32: *mut u64;
let _33: u32;
let _34: [u64; 7];
let _35: ();
let _36: ();
{
_12 = [37_isize,93_isize,9223372036854775807_isize];
_14 = [78660234040163714408428437747435922325_u128];
RET = [12198127495536181580_u64,6502099397118393402_u64];
_11 = (-82_i8);
_7 = [7580754358222321952_u64,17156376358314546068_u64,9003307849335523008_u64,15239993133152896116_u64,13212369682303477885_u64,14020744715954663644_u64,17109288047753278323_u64];
_3 = [7182290606153968590_u64,2985900286929853068_u64];
_15 = _3;
_12 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = _15;
_16 = (_7,);
_17 = (-72241129815782447091828248209987900431_i128);
_6 = [(-9223372036854775808_isize),(-9223372036854775808_isize),39_isize];
_13 = [(-64_isize),(-9223372036854775808_isize),103_isize];
_15 = [11440988147957717897_u64,5709939282137294399_u64];
_15 = _2;
_9 = _6;
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_3 = _15;
_17 = (-353372122_i32) as i128;
_5 = [245967737749027606087197656363801016027_u128,29204035260161336890024691318275590979_u128,1915262427643442391898927232749783373_u128,327219394016290851920082905563135754304_u128];
Goto(bb1)
}
bb1 = {
_2 = [16495651758687761514_u64,2039529615470190145_u64];
_7 = [12470597283847335066_u64,12479852368713091007_u64,13360267476098241060_u64,6763467904729906672_u64,499300747507403816_u64,9653143380735248798_u64,3102631264277444099_u64];
_18 = (-9223372036854775808_isize) as f64;
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_19 = [(-14468294_i32),(-545163931_i32),(-539261767_i32),1873896945_i32];
_1 = [97_isize,9223372036854775807_isize,9223372036854775807_isize];
_16.0 = _7;
_20 = 3811233066648655440_u64;
_12 = [(-97_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16.0 = [_20,_20,_20,_20,_20,_20,_20];
_21 = [_20,_20,_20,_20,_20,_20,_20];
_4 = _1;
RET = _2;
_15 = _2;
_19 = [(-387606205_i32),1332888451_i32,(-985266404_i32),1445358532_i32];
match _10 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
4070457219330473027 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_20 = 1878490744135595342_u64;
_23 = (_16.0,);
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-69_isize)];
_16 = (_7,);
RET = [_20,_20];
_13 = [(-9223372036854775808_isize),107_isize,9223372036854775807_isize];
_22 = 1520312031_i32 as usize;
_12 = _1;
_3 = _15;
_25 = 1547155416_u32;
_4 = _12;
_6 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_20 = 6988809174458047010_u64;
_24 = !_8;
_24 = !_8;
_15 = [_20,_20];
_27 = _18 as f32;
_17 = _10 as i128;
_8 = _22 > _22;
Goto(bb10)
}
bb10 = {
_3 = _2;
_16 = (_7,);
_15 = [_20,_20];
_11 = (-113_i8) * (-6_i8);
_17 = 214495022720553862547954194547941781_i128;
_16.0 = [_20,_20,_20,_20,_20,_20,_20];
RET = [_20,_20];
_22 = 2857275931121320570_usize;
_9 = [(-9223372036854775808_isize),12_isize,(-9223372036854775808_isize)];
_16 = _23;
_7 = [_20,_20,_20,_20,_20,_20,_20];
_3 = [_20,_20];
Call(_26 = core::intrinsics::bswap(155_u8), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_11 = (-96_i8) >> _10;
_11 = _24 as i8;
Call(_10 = core::intrinsics::transmute(_22), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
RET = _3;
_20 = 9223372036854775807_isize as u64;
RET = [_20,_20];
_15 = [_20,_20];
_14 = [134916705086905032721490813039317860665_u128];
RET = _15;
_1 = _9;
_5 = [164021781165297173714657037908955273437_u128,303067914819991237026338295587979571670_u128,116362302556717346783112390164940781233_u128,54600195887550333545153467033013577009_u128];
_10 = _24 as i64;
_3 = _15;
_29 = '\u{c8cb8}' as i128;
_10 = (-1643724324697060421_i64) - (-9199449331161819944_i64);
_16.0 = [_20,_20,_20,_20,_20,_20,_20];
_3 = [_20,_20];
match _22 {
0 => bb9,
1 => bb2,
2 => bb10,
3 => bb4,
4 => bb5,
2857275931121320570 => bb13,
_ => bb6
}
}
bb13 = {
_3 = _2;
_14 = [240824299563804791592742292975648487765_u128];
_6 = [(-9223372036854775808_isize),101_isize,(-9223372036854775808_isize)];
_30 = _21;
_10 = 6968014641277292906_i64;
_23.0 = _21;
_15 = _3;
_1 = [9223372036854775807_isize,(-15_isize),9223372036854775807_isize];
_10 = 9223372036854775807_isize as i64;
_6 = [(-100_isize),(-46_isize),25_isize];
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),(-59_isize)];
_28 = _25;
_31 = !(-94_isize);
_26 = !56_u8;
_23.0 = _7;
match _17 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
214495022720553862547954194547941781 => bb20,
_ => bb19
}
}
bb14 = {
_2 = [16495651758687761514_u64,2039529615470190145_u64];
_7 = [12470597283847335066_u64,12479852368713091007_u64,13360267476098241060_u64,6763467904729906672_u64,499300747507403816_u64,9653143380735248798_u64,3102631264277444099_u64];
_18 = (-9223372036854775808_isize) as f64;
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_19 = [(-14468294_i32),(-545163931_i32),(-539261767_i32),1873896945_i32];
_1 = [97_isize,9223372036854775807_isize,9223372036854775807_isize];
_16.0 = _7;
_20 = 3811233066648655440_u64;
_12 = [(-97_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16.0 = [_20,_20,_20,_20,_20,_20,_20];
_21 = [_20,_20,_20,_20,_20,_20,_20];
_4 = _1;
RET = _2;
_15 = _2;
_19 = [(-387606205_i32),1332888451_i32,(-985266404_i32),1445358532_i32];
match _10 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
4070457219330473027 => bb9,
_ => bb8
}
}
bb15 = {
_11 = (-96_i8) >> _10;
_11 = _24 as i8;
Call(_10 = core::intrinsics::transmute(_22), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
Return()
}
bb17 = {
_20 = 1878490744135595342_u64;
_23 = (_16.0,);
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-69_isize)];
_16 = (_7,);
RET = [_20,_20];
_13 = [(-9223372036854775808_isize),107_isize,9223372036854775807_isize];
_22 = 1520312031_i32 as usize;
_12 = _1;
_3 = _15;
_25 = 1547155416_u32;
_4 = _12;
_6 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_20 = 6988809174458047010_u64;
_24 = !_8;
_24 = !_8;
_15 = [_20,_20];
_27 = _18 as f32;
_17 = _10 as i128;
_8 = _22 > _22;
Goto(bb10)
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
_34 = _16.0;
Goto(bb21)
}
bb21 = {
Call(_35 = dump_var(18_usize, 7_usize, Move(_7), 6_usize, Move(_6), 25_usize, Move(_25), 14_usize, Move(_14)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_35 = dump_var(18_usize, 2_usize, Move(_2), 17_usize, Move(_17), 28_usize, Move(_28), 10_usize, Move(_10)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_35 = dump_var(18_usize, 30_usize, Move(_30), 31_usize, Move(_31), 26_usize, Move(_26), 19_usize, Move(_19)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_35 = dump_var(18_usize, 21_usize, Move(_21), 3_usize, Move(_3), 1_usize, Move(_1), 36_usize, _36), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: (u128, i32),mut _2: i64,mut _3: f64,mut _4: bool,mut _5: [u64; 2],mut _6: (u128, i32),mut _7: [u128; 4],mut _8: [isize; 3],mut _9: [u128; 4],mut _10: [u128; 1],mut _11: i32,mut _12: bool,mut _13: [u128; 5]) -> [u64; 7] {
mir! {
type RET = [u64; 7];
let _14: Adt48;
let _15: i32;
let _16: [i64; 5];
let _17: u64;
let _18: (f64, u16);
let _19: [u128; 4];
let _20: isize;
let _21: bool;
let _22: *const (f64, u16);
let _23: Adt53;
let _24: u64;
let _25: [isize; 3];
let _26: f32;
let _27: i8;
let _28: [i64; 5];
let _29: ();
let _30: ();
{
_3 = 9223372036854775807_isize as f64;
_1 = (_6.0, _11);
_1.0 = !_6.0;
_6.0 = _1.0 % 152847279886267197278699390701713505343_u128;
_6 = (_1.0, _1.1);
RET = [411364513610600763_u64,4970836342645285005_u64,11898732939766596895_u64,9158118150177066152_u64,7891903005513192598_u64,16341548265936157335_u64,1686032353635809905_u64];
_7 = [_1.0,_6.0,_6.0,_6.0];
_13 = [_6.0,_6.0,_6.0,_6.0,_6.0];
_1.0 = 36907_u16 as u128;
RET = [11253926602067598822_u64,15951275265847095937_u64,16165598042815229985_u64,13924544119480649979_u64,9682235189795527705_u64,14814197904541035795_u64,5446522472871596933_u64];
_1.1 = -_6.1;
_14.fld0 = [4723337452336335834_u64,1915616131654362318_u64,104363749134242708_u64,13716480007576083724_u64,18262673837638321230_u64,13383592410127174338_u64,1733955901947481338_u64];
_10 = [_1.0];
_6 = _1;
_7 = [_6.0,_1.0,_1.0,_6.0];
_15 = -_1.1;
_14.fld1.1 = [_2,_2,_2,_2,_2];
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
1090094468 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_6.1 = 4905219090068959761_u64 as i32;
_1.0 = _2 as u128;
_10 = [_6.0];
_14.fld0 = [2757394871983020330_u64,3779011392978650806_u64,13621852354989743092_u64,12819754372461099057_u64,3864987711673143761_u64,16566744860781788517_u64,12331534594720850937_u64];
_12 = !_4;
_6 = _1;
_6 = (_1.0, _11);
_4 = !_12;
_12 = _4;
_12 = !_4;
_16 = _14.fld1.1;
Goto(bb6)
}
bb6 = {
_13 = [_6.0,_1.0,_6.0,_6.0,_6.0];
_4 = _12 & _12;
_10 = [_6.0];
_11 = _15;
RET = [9290208656644612302_u64,4428107338354729467_u64,10888718187014203213_u64,7936224730513794359_u64,8553478074013190902_u64,570727500353702271_u64,17601621356236659787_u64];
_4 = _12;
_14.fld1.1 = [_2,_2,_2,_2,_2];
_6.0 = !_1.0;
_1.1 = _6.1;
_18.0 = -_3;
_19 = _7;
_17 = 10902219836041495121_u64;
RET = [_17,_17,_17,_17,_17,_17,_17];
_11 = _6.1 & _1.1;
_4 = _12;
_6 = (_1.0, _11);
match _1.1 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb8,
6 => bb9,
1090094468 => bb11,
_ => bb10
}
}
bb7 = {
_6.1 = 4905219090068959761_u64 as i32;
_1.0 = _2 as u128;
_10 = [_6.0];
_14.fld0 = [2757394871983020330_u64,3779011392978650806_u64,13621852354989743092_u64,12819754372461099057_u64,3864987711673143761_u64,16566744860781788517_u64,12331534594720850937_u64];
_12 = !_4;
_6 = _1;
_6 = (_1.0, _11);
_4 = !_12;
_12 = _4;
_12 = !_4;
_16 = _14.fld1.1;
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_21 = !_4;
_14.fld1.1 = [_2,_2,_2,_2,_2];
_8 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_14.fld1.1 = [_2,_2,_2,_2,_2];
_22 = core::ptr::addr_of!(_18);
_23.fld0.1 = -_6.1;
Goto(bb12)
}
bb12 = {
_23.fld0.1 = !_11;
(*_22).0 = 47307_u16 as f64;
_1 = (_6.0, _23.fld0.1);
Goto(bb13)
}
bb13 = {
_23.fld2 = _13;
_23.fld1 = core::ptr::addr_of!(_14.fld0);
(*_22).1 = _1.0 as u16;
_23.fld0.0 = !_1.0;
_15 = _6.1 - _1.1;
_19 = _9;
_22 = core::ptr::addr_of!((*_22));
(*_22).1 = !47637_u16;
_4 = _12 ^ _21;
RET = [_17,_17,_17,_17,_17,_17,_17];
_20 = (-9223372036854775808_isize);
_23.fld0.1 = 4003157826392969822924485281426163069_i128 as i32;
_1.0 = !_6.0;
_8 = [_20,_20,_20];
Goto(bb14)
}
bb14 = {
_24 = _17 << _15;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(19_usize, 9_usize, Move(_9), 8_usize, Move(_8), 11_usize, Move(_11), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(19_usize, 13_usize, Move(_13), 2_usize, Move(_2), 12_usize, Move(_12), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(19_usize, 1_usize, Move(_1), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(12308450685603612619_u64), std::hint::black_box(153226679474038710188002688297006711332_i128));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt48 {
fld0: [u64; 7],
fld1: (*const u8, [i64; 5]),
}
#[derive(Debug)]
pub struct Adt49 {
fld0: (*mut *const i128,),
fld1: i8,
fld2: u64,
}
#[derive(Debug)]
pub struct Adt50 {
fld0: *mut *mut (f64, u16),
fld1: *const u8,
fld2: *const [u128; 4],
fld3: [u128; 1],
}
#[derive(Debug)]
pub struct Adt51 {
fld0: *mut *mut (f64, u16),
fld1: Adt50,
fld2: f64,
fld3: usize,
fld4: *const [u128; 4],
fld5: [u128; 4],
}
#[derive(Debug)]
pub struct Adt52 {
fld0: i128,
fld1: [u32; 7],
fld2: *const bool,
fld3: *const (f64, u16),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: (u128, i32),
fld1: *const [u64; 7],
fld2: [u128; 5],
}
#[derive(Debug)]
pub struct Adt54 {
fld0: Adt50,
fld1: *mut *mut (f64, u16),
fld2: [i32; 4],
fld3: i8,
fld4: [u128; 5],
fld5: *const u8,
fld6: *const [u64; 7],
fld7: *mut u64,
}
#[derive(Debug)]
pub struct Adt55 {
fld0: bool,
fld1: i128,
fld2: *mut *const i128,
fld3: [u128; 4],
fld4: *const *const [u64; 7],
fld5: u64,
fld6: Adt49,
}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt49,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: [u128; 4],
fld1: (*const [u128; 4], f64, u8, *mut *mut (f64, u16)),
fld2: *const *const u8,
fld3: [u64; 7],
fld4: u32,
fld5: i64,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: usize,
fld1: *const u8,
fld2: Adt52,
fld3: i8,
fld4: [u128; 1],
fld5: *const *const [u64; 7],
fld6: u8,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: (u128, i32),
fld1: Adt50,
fld2: *mut [u64; 2],
fld3: ([u64; 7],),
fld4: Adt53,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: *const (f64, u16),
fld1: *mut *mut (f64, u16),
fld2: [i64; 5],
fld3: i8,
fld4: [u128; 4],
fld5: [i32; 4],
}
#[derive(Debug)]
pub struct Adt61 {
fld0: Adt55,
fld1: char,
fld2: Adt59,
fld3: u32,
fld4: i64,
}
#[derive(Debug)]
pub struct Adt62 {
fld0: *const i128,
fld1: [i64; 5],
fld2: isize,
fld3: *mut *const i128,
fld4: *mut [u64; 2],
fld5: u128,
fld6: Adt58,
fld7: u16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt63 {
fld0: [isize; 3],
fld1: [u32; 7],
}
#[derive(Debug)]
pub struct Adt64 {
fld0: bool,
fld1: i32,
fld2: *const *const [u64; 7],
}

