#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u8,mut _2: i128,mut _3: i32) -> Adt44 {
mir! {
type RET = Adt44;
let _4: isize;
let _5: char;
let _6: i64;
let _7: u16;
let _8: [i8; 7];
let _9: *const &'static *mut u16;
let _10: Adt43;
let _11: Adt50;
let _12: bool;
let _13: [u16; 7];
let _14: u16;
let _15: Adt45;
let _16: *const &'static *mut u16;
let _17: f32;
let _18: [i8; 7];
let _19: isize;
let _20: Adt52;
let _21: isize;
let _22: [u128; 2];
let _23: [u128; 2];
let _24: Adt49;
let _25: bool;
let _26: i8;
let _27: [u128; 8];
let _28: i32;
let _29: f64;
let _30: Adt46;
let _31: *const i32;
let _32: (i32, i16, f32, i8, u128);
let _33: u64;
let _34: [u16; 4];
let _35: [i32; 5];
let _36: [u16; 4];
let _37: [i32; 5];
let _38: usize;
let _39: bool;
let _40: *const i128;
let _41: [u64; 5];
let _42: f64;
let _43: Adt58;
let _44: Adt43;
let _45: [i16; 4];
let _46: usize;
let _47: *mut u128;
let _48: i16;
let _49: ([i32; 5],);
let _50: isize;
let _51: usize;
let _52: f64;
let _53: i64;
let _54: ();
let _55: ();
{
_2 = -(-98914735390023967236508323216510969481_i128);
_1 = 6985072516110926419_usize as u8;
_3 = 1111650418_i32;
_2 = 68675277509565603039545079699999996175_i128;
_1 = 178_u8 << _2;
_3 = 1772495909_i32;
_3 = !(-412335437_i32);
_1 = !151_u8;
_3 = -508199755_i32;
_2 = -(-82768183715107685218779297549388444606_i128);
_3 = -224752785_i32;
Call(_1 = fn1(_2, _3, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 146804724818101531844002096115932509464_i128;
_1 = 143_u8;
_2 = 14863262070235619545184281181195999120_i128 >> _3;
_3 = (-2121573104_i32) | 2029822480_i32;
_2 = 3006030953_u32 as i128;
_1 = 19973_u16 as u8;
_1 = 9223372036854775807_isize as u8;
_3 = -(-1186430821_i32);
_2 = (-26639036069699180303937023864191413475_i128);
Goto(bb2)
}
bb2 = {
_2 = 164398875441257452061309484413382565869_i128 - (-18209990818992756437702508663990770042_i128);
_2 = 45385267759936683972192699764880367899_u128 as i128;
_1 = 226_u8;
_2 = 21550_u16 as i128;
_2 = true as i128;
_4 = !72_isize;
_4 = !9223372036854775807_isize;
Goto(bb3)
}
bb3 = {
_4 = 9223372036854775807_isize | 9223372036854775807_isize;
_3 = !(-955541167_i32);
_1 = 2135303681_u32 as u8;
_1 = !71_u8;
_2 = (-164676274642708231942047563353255255041_i128) & (-19965904717974610097436298914665050746_i128);
_2 = -159447538526948124281823484313705522110_i128;
_4 = 9223372036854775807_isize;
_4 = 9223372036854775807_isize + 85_isize;
_1 = 4098387325174878328_u64 as u8;
_3 = 903548732_i32 ^ 344425902_i32;
_3 = (-218687525_i32);
_5 = '\u{cdd48}';
_2 = -(-154436441411588828998913902515138147714_i128);
_3 = (-130349657_i32);
_3 = _2 as i32;
_6 = 698980334423418401_i64 + 1174178061755906707_i64;
_7 = !57063_u16;
_8 = [(-80_i8),(-6_i8),63_i8,(-31_i8),(-98_i8),121_i8,(-83_i8)];
_5 = '\u{509dd}';
Call(_3 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = [7_i8,(-107_i8),(-103_i8),(-68_i8),14_i8,(-105_i8),79_i8];
_7 = 37131_u16 << _6;
_2 = -(-59529548107688415816119106377350878598_i128);
_3 = !1223329518_i32;
_1 = 270240801459596895501722396914754284043_u128 as u8;
_5 = '\u{100def}';
_5 = '\u{6fdb5}';
_1 = 5_u8;
_6 = -(-4609987998106507699_i64);
_4 = 9223372036854775807_isize;
_8 = [(-87_i8),47_i8,(-64_i8),(-83_i8),8_i8,33_i8,14_i8];
_7 = 21879_u16;
match _1 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb11,
_ => bb10
}
}
bb5 = {
_4 = 9223372036854775807_isize | 9223372036854775807_isize;
_3 = !(-955541167_i32);
_1 = 2135303681_u32 as u8;
_1 = !71_u8;
_2 = (-164676274642708231942047563353255255041_i128) & (-19965904717974610097436298914665050746_i128);
_2 = -159447538526948124281823484313705522110_i128;
_4 = 9223372036854775807_isize;
_4 = 9223372036854775807_isize + 85_isize;
_1 = 4098387325174878328_u64 as u8;
_3 = 903548732_i32 ^ 344425902_i32;
_3 = (-218687525_i32);
_5 = '\u{cdd48}';
_2 = -(-154436441411588828998913902515138147714_i128);
_3 = (-130349657_i32);
_3 = _2 as i32;
_6 = 698980334423418401_i64 + 1174178061755906707_i64;
_7 = !57063_u16;
_8 = [(-80_i8),(-6_i8),63_i8,(-31_i8),(-98_i8),121_i8,(-83_i8)];
_5 = '\u{509dd}';
Call(_3 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_2 = 164398875441257452061309484413382565869_i128 - (-18209990818992756437702508663990770042_i128);
_2 = 45385267759936683972192699764880367899_u128 as i128;
_1 = 226_u8;
_2 = 21550_u16 as i128;
_2 = true as i128;
_4 = !72_isize;
_4 = !9223372036854775807_isize;
Goto(bb3)
}
bb7 = {
_2 = 146804724818101531844002096115932509464_i128;
_1 = 143_u8;
_2 = 14863262070235619545184281181195999120_i128 >> _3;
_3 = (-2121573104_i32) | 2029822480_i32;
_2 = 3006030953_u32 as i128;
_1 = 19973_u16 as u8;
_1 = 9223372036854775807_isize as u8;
_3 = -(-1186430821_i32);
_2 = (-26639036069699180303937023864191413475_i128);
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = _4 as u8;
_7 = 23451_u16 + 43676_u16;
_7 = !48410_u16;
_5 = '\u{64b16}';
_13 = [_7,_7,_7,_7,_7,_7,_7];
_6 = 676368269377394201_usize as i64;
_1 = 147_u8 << _7;
_4 = 3177427226_u32 as isize;
_5 = '\u{3733a}';
_2 = 150003673120905271086795640714501989605_i128;
_13 = [_7,_7,_7,_7,_7,_7,_7];
_4 = -9223372036854775807_isize;
_7 = 43154_u16;
match _7 {
0 => bb6,
43154 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_8 = [(-111_i8),(-127_i8),10_i8,121_i8,115_i8,106_i8,35_i8];
Goto(bb14)
}
bb14 = {
_6 = -3109182175728606742_i64;
_4 = -9223372036854775807_isize;
_1 = 16_u8 | 136_u8;
_12 = _6 != _6;
_14 = _7;
_2 = (-3967402966284245591149645993292099324_i128);
_7 = _5 as u16;
_15 = Adt45::Variant2 { fld0: 32435_i16 };
_5 = '\u{3035a}';
_12 = !true;
_15 = Adt45::Variant2 { fld0: (-23794_i16) };
_12 = false;
place!(Field::<i16>(Variant(_15, 2), 0)) = 6583_i16 + (-25145_i16);
_17 = _2 as f32;
_2 = !158919240576185782013518070797279048578_i128;
SetDiscriminant(_15, 1);
place!(Field::<i8>(Variant(_15, 1), 3)) = 104_i8;
_6 = (-2511572433493960988_i64) - 6846339344076551496_i64;
_8 = [Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3)];
_3 = (-1993335829_i32) | 703166089_i32;
_7 = !_14;
_12 = !false;
place!(Field::<i16>(Variant(_15, 1), 4)) = (-26161_i16) - 9626_i16;
_17 = _1 as f32;
_7 = _14 - _14;
_5 = '\u{8092}';
_14 = Field::<i8>(Variant(_15, 1), 3) as u16;
_13 = [_14,_7,_14,_7,_14,_7,_7];
Goto(bb15)
}
bb15 = {
_2 = 80317175110415558215430534319389529178_u128 as i128;
_4 = 48_isize;
place!(Field::<u8>(Variant(_15, 1), 5)) = _1;
_2 = 169431247794817635605009956431986537979_i128;
_5 = '\u{bcf00}';
_2 = (-53665864752419680954770862549285152615_i128);
_5 = '\u{d51f6}';
_6 = 8029748083624101343_i64;
match _2 {
0 => bb11,
1 => bb14,
286616502168518782508603744882483058841 => bb17,
_ => bb16
}
}
bb16 = {
_6 = -3109182175728606742_i64;
_4 = -9223372036854775807_isize;
_1 = 16_u8 | 136_u8;
_12 = _6 != _6;
_14 = _7;
_2 = (-3967402966284245591149645993292099324_i128);
_7 = _5 as u16;
_15 = Adt45::Variant2 { fld0: 32435_i16 };
_5 = '\u{3035a}';
_12 = !true;
_15 = Adt45::Variant2 { fld0: (-23794_i16) };
_12 = false;
place!(Field::<i16>(Variant(_15, 2), 0)) = 6583_i16 + (-25145_i16);
_17 = _2 as f32;
_2 = !158919240576185782013518070797279048578_i128;
SetDiscriminant(_15, 1);
place!(Field::<i8>(Variant(_15, 1), 3)) = 104_i8;
_6 = (-2511572433493960988_i64) - 6846339344076551496_i64;
_8 = [Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3)];
_3 = (-1993335829_i32) | 703166089_i32;
_7 = !_14;
_12 = !false;
place!(Field::<i16>(Variant(_15, 1), 4)) = (-26161_i16) - 9626_i16;
_17 = _1 as f32;
_7 = _14 - _14;
_5 = '\u{8092}';
_14 = Field::<i8>(Variant(_15, 1), 3) as u16;
_13 = [_14,_7,_14,_7,_14,_7,_7];
Goto(bb15)
}
bb17 = {
_2 = -60549748463608787163143212442304359015_i128;
place!(Field::<i128>(Variant(_15, 1), 2)) = _2;
place!(Field::<u8>(Variant(_15, 1), 5)) = _1 | _1;
place!(Field::<*const i32>(Variant(_15, 1), 1)) = core::ptr::addr_of!(_3);
_7 = 4073988718_u32 as u16;
_12 = false;
_1 = !Field::<u8>(Variant(_15, 1), 5);
_18 = [Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3)];
place!(Field::<i16>(Variant(_15, 1), 4)) = 2615545535_u32 as i16;
_19 = _5 as isize;
place!(Field::<i16>(Variant(_15, 1), 4)) = (-32531_i16) - 15099_i16;
place!(Field::<i8>(Variant(_15, 1), 3)) = !(-37_i8);
place!(Field::<i128>(Variant(_15, 1), 2)) = _2;
place!(Field::<i128>(Variant(_15, 1), 2)) = _2 >> _6;
_21 = !_4;
Goto(bb18)
}
bb18 = {
place!(Field::<i8>(Variant(_15, 1), 3)) = (-103_i8) & 16_i8;
place!(Field::<*const i32>(Variant(_15, 1), 1)) = core::ptr::addr_of!(_3);
_7 = !_14;
_4 = !_21;
place!(Field::<i16>(Variant(_15, 1), 4)) = 4510_i16;
_4 = _21;
_1 = !Field::<u8>(Variant(_15, 1), 5);
Goto(bb19)
}
bb19 = {
_2 = Field::<i128>(Variant(_15, 1), 2) << _1;
place!(Field::<*const i32>(Variant(_15, 1), 1)) = core::ptr::addr_of!(_3);
_7 = Field::<i16>(Variant(_15, 1), 4) as u16;
_6 = _21 as i64;
_17 = _14 as f32;
_6 = _17 as i64;
_17 = Field::<i16>(Variant(_15, 1), 4) as f32;
_22 = [331934479674189764368050627075738995170_u128,95624058979885849866950194548970043070_u128];
_14 = _7;
_21 = 14856074333138260532_u64 as isize;
_1 = Field::<u8>(Variant(_15, 1), 5) * Field::<u8>(Variant(_15, 1), 5);
Goto(bb20)
}
bb20 = {
place!(Field::<i16>(Variant(_15, 1), 4)) = _12 as i16;
_4 = _19;
_18 = [Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3)];
_13 = [_14,_7,_14,_14,_14,_7,_14];
_25 = _12 | _12;
_17 = _6 as f32;
_2 = Field::<i128>(Variant(_15, 1), 2) & Field::<i128>(Variant(_15, 1), 2);
_17 = _21 as f32;
_23 = _22;
_23 = [151281151741346539472650610048677651282_u128,195568188813281823828101634137685836329_u128];
_23 = _22;
_7 = _17 as u16;
_25 = _1 == Field::<u8>(Variant(_15, 1), 5);
place!(Field::<i16>(Variant(_15, 1), 4)) = Field::<i8>(Variant(_15, 1), 3) as i16;
_1 = Field::<u8>(Variant(_15, 1), 5) - Field::<u8>(Variant(_15, 1), 5);
Goto(bb21)
}
bb21 = {
_5 = '\u{50197}';
place!(Field::<*const i32>(Variant(_15, 1), 1)) = core::ptr::addr_of!(_3);
place!(Field::<*const i32>(Variant(_15, 1), 1)) = core::ptr::addr_of!(_3);
_26 = Field::<i16>(Variant(_15, 1), 4) as i8;
_17 = Field::<i16>(Variant(_15, 1), 4) as f32;
_6 = (-2742490748863623095_i64);
_5 = '\u{10b30e}';
_3 = _25 as i32;
_5 = '\u{1441e}';
place!(Field::<u8>(Variant(_15, 1), 5)) = _17 as u8;
_28 = -_3;
_3 = _28;
_25 = _3 < _3;
match _6 {
0 => bb12,
1 => bb18,
2 => bb8,
3 => bb17,
4 => bb22,
5 => bb23,
340282366920938463460632116682904588361 => bb25,
_ => bb24
}
}
bb22 = {
_6 = -3109182175728606742_i64;
_4 = -9223372036854775807_isize;
_1 = 16_u8 | 136_u8;
_12 = _6 != _6;
_14 = _7;
_2 = (-3967402966284245591149645993292099324_i128);
_7 = _5 as u16;
_15 = Adt45::Variant2 { fld0: 32435_i16 };
_5 = '\u{3035a}';
_12 = !true;
_15 = Adt45::Variant2 { fld0: (-23794_i16) };
_12 = false;
place!(Field::<i16>(Variant(_15, 2), 0)) = 6583_i16 + (-25145_i16);
_17 = _2 as f32;
_2 = !158919240576185782013518070797279048578_i128;
SetDiscriminant(_15, 1);
place!(Field::<i8>(Variant(_15, 1), 3)) = 104_i8;
_6 = (-2511572433493960988_i64) - 6846339344076551496_i64;
_8 = [Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3)];
_3 = (-1993335829_i32) | 703166089_i32;
_7 = !_14;
_12 = !false;
place!(Field::<i16>(Variant(_15, 1), 4)) = (-26161_i16) - 9626_i16;
_17 = _1 as f32;
_7 = _14 - _14;
_5 = '\u{8092}';
_14 = Field::<i8>(Variant(_15, 1), 3) as u16;
_13 = [_14,_7,_14,_7,_14,_7,_7];
Goto(bb15)
}
bb23 = {
_2 = 164398875441257452061309484413382565869_i128 - (-18209990818992756437702508663990770042_i128);
_2 = 45385267759936683972192699764880367899_u128 as i128;
_1 = 226_u8;
_2 = 21550_u16 as i128;
_2 = true as i128;
_4 = !72_isize;
_4 = !9223372036854775807_isize;
Goto(bb3)
}
bb24 = {
_4 = 9223372036854775807_isize | 9223372036854775807_isize;
_3 = !(-955541167_i32);
_1 = 2135303681_u32 as u8;
_1 = !71_u8;
_2 = (-164676274642708231942047563353255255041_i128) & (-19965904717974610097436298914665050746_i128);
_2 = -159447538526948124281823484313705522110_i128;
_4 = 9223372036854775807_isize;
_4 = 9223372036854775807_isize + 85_isize;
_1 = 4098387325174878328_u64 as u8;
_3 = 903548732_i32 ^ 344425902_i32;
_3 = (-218687525_i32);
_5 = '\u{cdd48}';
_2 = -(-154436441411588828998913902515138147714_i128);
_3 = (-130349657_i32);
_3 = _2 as i32;
_6 = 698980334423418401_i64 + 1174178061755906707_i64;
_7 = !57063_u16;
_8 = [(-80_i8),(-6_i8),63_i8,(-31_i8),(-98_i8),121_i8,(-83_i8)];
_5 = '\u{509dd}';
Call(_3 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb25 = {
_28 = _3;
_28 = !_3;
_27 = [255977942800789836670538862940266679482_u128,7565173142802290703710050927667738889_u128,147044615725063466743142772039426053176_u128,93613194917654236529265053485102923442_u128,259934709447949845837090787620824010749_u128,79434809483760320659219325669688631565_u128,33564596379136023094544858660608684556_u128,319604731186572805335223870297072518085_u128];
_27 = [60256986310540399495932232878847945378_u128,225611081715430025739994799425894219838_u128,176339299018914298874531685240856824893_u128,64735803757009536891652257866914079077_u128,81613802445748225674411756401693429691_u128,233628910199061159688013149429413447439_u128,68599649497711845164520995331574667935_u128,154979422925032882853282314353404575543_u128];
_2 = !Field::<i128>(Variant(_15, 1), 2);
_7 = !_14;
_21 = -_19;
_12 = Field::<i16>(Variant(_15, 1), 4) <= Field::<i16>(Variant(_15, 1), 4);
_18 = [Field::<i8>(Variant(_15, 1), 3),_26,Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),_26,Field::<i8>(Variant(_15, 1), 3),_26];
_18 = _8;
_8 = [_26,_26,_26,Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),_26,_26];
_28 = !_3;
_28 = _3 + _3;
_8 = [_26,_26,Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),_26,Field::<i8>(Variant(_15, 1), 3)];
_26 = Field::<i8>(Variant(_15, 1), 3);
_5 = '\u{da7c7}';
_8 = [Field::<i8>(Variant(_15, 1), 3),_26,Field::<i8>(Variant(_15, 1), 3),Field::<i8>(Variant(_15, 1), 3),_26,_26,Field::<i8>(Variant(_15, 1), 3)];
place!(Field::<i128>(Variant(_15, 1), 2)) = Field::<i16>(Variant(_15, 1), 4) as i128;
_18 = [_26,_26,Field::<i8>(Variant(_15, 1), 3),_26,Field::<i8>(Variant(_15, 1), 3),_26,Field::<i8>(Variant(_15, 1), 3)];
_27 = [214247620969623091598664677625101008052_u128,297339067021508811177917612404296039155_u128,271338201333299582479980485238788836275_u128,169234886524429035802128983840313282447_u128,230728747525546883356517828167258874575_u128,246555007916379710656108819573484629236_u128,176932108430898416072211355158224935066_u128,62942382328420293470654895615086040709_u128];
_21 = _4 - _4;
_17 = _2 as f32;
_6 = Field::<i128>(Variant(_15, 1), 2) as i64;
Goto(bb26)
}
bb26 = {
_5 = '\u{3032a}';
_2 = Field::<i128>(Variant(_15, 1), 2) | Field::<i128>(Variant(_15, 1), 2);
_8 = _18;
_6 = (-2210679276480297319_i64);
_14 = !_7;
_25 = !_12;
match _6 {
0 => bb13,
1 => bb19,
340282366920938463461163928155287914137 => bb28,
_ => bb27
}
}
bb27 = {
_4 = 9223372036854775807_isize | 9223372036854775807_isize;
_3 = !(-955541167_i32);
_1 = 2135303681_u32 as u8;
_1 = !71_u8;
_2 = (-164676274642708231942047563353255255041_i128) & (-19965904717974610097436298914665050746_i128);
_2 = -159447538526948124281823484313705522110_i128;
_4 = 9223372036854775807_isize;
_4 = 9223372036854775807_isize + 85_isize;
_1 = 4098387325174878328_u64 as u8;
_3 = 903548732_i32 ^ 344425902_i32;
_3 = (-218687525_i32);
_5 = '\u{cdd48}';
_2 = -(-154436441411588828998913902515138147714_i128);
_3 = (-130349657_i32);
_3 = _2 as i32;
_6 = 698980334423418401_i64 + 1174178061755906707_i64;
_7 = !57063_u16;
_8 = [(-80_i8),(-6_i8),63_i8,(-31_i8),(-98_i8),121_i8,(-83_i8)];
_5 = '\u{509dd}';
Call(_3 = core::intrinsics::transmute(_5), ReturnTo(bb4), UnwindUnreachable())
}
bb28 = {
_17 = _21 as f32;
_29 = _17 as f64;
place!(Field::<u8>(Variant(_15, 1), 5)) = _1 - _1;
_25 = _12;
_2 = 61473376628579664432799482676815878474_u128 as i128;
_15 = Adt45::Variant2 { fld0: 19411_i16 };
_4 = _19 & _19;
_32.0 = _3;
_13 = [_14,_14,_14,_14,_14,_7,_7];
_6 = _2 as i64;
_1 = !75_u8;
Goto(bb29)
}
bb29 = {
_17 = _1 as f32;
_32.2 = _26 as f32;
_29 = _2 as f64;
_21 = _4;
_29 = _32.2 as f64;
_19 = _21;
_2 = (-12861199121355311697080208408909986775_i128) & 157871194577775696107165389917322238711_i128;
Goto(bb30)
}
bb30 = {
_17 = _19 as f32;
Goto(bb31)
}
bb31 = {
_21 = _4 ^ _4;
_26 = (-32_i8);
_25 = !_12;
_35 = [_32.0,_32.0,_28,_28,_32.0];
_32.3 = _32.0 as i8;
_34 = [_7,_14,_14,_7];
_32 = (_28, (-30150_i16), _17, _26, 102429946841161194079824229588306726482_u128);
_6 = !1052528781929777500_i64;
_23 = [_32.4,_32.4];
_24 = Adt49::Variant2 { fld0: _34,fld1: _35,fld2: _29 };
_35 = [_32.0,_28,_32.0,_28,_28];
place!(Field::<f64>(Variant(_24, 2), 2)) = _29;
SetDiscriminant(_24, 2);
RET = Adt44::Variant0 { fld0: _32.4,fld1: _6,fld2: _32.1,fld3: _32 };
RET = Adt44::Variant1 { fld0: _27 };
place!(Field::<[u16; 4]>(Variant(_24, 2), 0)) = [_14,_14,_14,_14];
SetDiscriminant(RET, 0);
_5 = '\u{43c46}';
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)) = (_3, _32.1, _32.2, _26, _32.4);
place!(Field::<i16>(Variant(_15, 2), 0)) = _32.1;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)) = (_28, _32.1, _32.2, _32.3, _32.4);
Goto(bb32)
}
bb32 = {
_34 = [_14,_7,_7,_14];
_14 = !_7;
_15 = Adt45::Variant2 { fld0: _32.1 };
_26 = _32.3;
_6 = 8623717501914223669_i64 >> _19;
_1 = 9677888527037623638_u64 as u8;
_32.3 = -_26;
Call(place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).4 = fn18(_23, _32.1, Field::<i16>(Variant(_15, 2), 0), _32.1, _2, _32.4, Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).1, Field::<i16>(Variant(_15, 2), 0), _32.1, _32, _28, Field::<i16>(Variant(_15, 2), 0), _32.0, _15, Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).1, _15), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_12 = _25;
place!(Field::<i64>(Variant(RET, 0), 1)) = -_6;
_25 = Field::<i16>(Variant(_15, 2), 0) <= Field::<i16>(Variant(_15, 2), 0);
_32.0 = _17 as i32;
_37 = _35;
match _32.4 {
102429946841161194079824229588306726482 => bb35,
_ => bb34
}
}
bb34 = {
Return()
}
bb35 = {
_22 = [Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,_32.4];
_41 = [11494480539789335706_u64,1089034166982061779_u64,10451457627411528057_u64,14391689873827973160_u64,11498224571522104301_u64];
_38 = 4_usize;
_40 = core::ptr::addr_of!(_2);
_40 = core::ptr::addr_of!(_2);
_43.fld2 = _1 + _1;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).4 = _32.1 as u128;
_27 = [_32.4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,_32.4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,_32.4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4];
_42 = _29;
_32.0 = -Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0;
_42 = _38 as f64;
_13[_38] = _14;
_43.fld2 = _1 & _1;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)) = (_35[_38], Field::<i16>(Variant(_15, 2), 0), _17, _18[_38], _32.4);
Goto(bb36)
}
bb36 = {
place!(Field::<f64>(Variant(_24, 2), 2)) = _29;
_46 = _38 % _38;
_35[_38] = _26 as i32;
_42 = _37[_38] as f64;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).2 = _17 - _32.2;
_23 = _22;
_34 = Field::<[u16; 4]>(Variant(_24, 2), 0);
place!(Field::<[i32; 5]>(Variant(_24, 2), 1)) = [_37[_38],_28,_3,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,_28];
_27[_38] = _32.4;
place!(Field::<i16>(Variant(RET, 0), 2)) = -Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).1;
_4 = (*_40) as isize;
_37 = [_35[_38],Field::<[i32; 5]>(Variant(_24, 2), 1)[_38],_28,_32.0,Field::<[i32; 5]>(Variant(_24, 2), 1)[_38]];
_23 = [_27[_38],_27[_38]];
_41[_38] = _5 as u64;
SetDiscriminant(_24, 1);
_37[_38] = Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0 + _32.0;
_27 = [Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,_32.4,_32.4,_32.4,_32.4,_32.4,_32.4];
Goto(bb37)
}
bb37 = {
RET = Adt44::Variant0 { fld0: _27[_38],fld1: _6,fld2: Field::<i16>(Variant(_15, 2), 0),fld3: _32 };
_39 = _25;
_31 = core::ptr::addr_of!(place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).0);
_49.0 = [_37[_38],_3,_37[_38],_37[_38],_28];
_37[_38] = -_28;
_36 = [_14,_14,_14,_14];
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).0 = Field::<i64>(Variant(RET, 0), 1) as i32;
_35 = _49.0;
_38 = !_46;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).3 = Field::<u128>(Variant(RET, 0), 0) as i8;
_4 = -_21;
_43.fld0 = [_14,_7,_7,_14,_14,_14,_7];
_43.fld2 = _1;
_38 = _46;
_4 = _32.4 as isize;
_26 = -Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).3;
_32.0 = -_3;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)) = _32;
_1 = _32.2 as u8;
_43.fld1 = Adt44::Variant1 { fld0: _27 };
_50 = _4;
_32.3 = _7 as i8;
_41 = [1945142479270961244_u64,10840881019703034_u64,2151862718950052181_u64,13081127971966730293_u64,8888740312745461596_u64];
_41 = [14634525802832026456_u64,4431826249975208580_u64,13986055872755229578_u64,2596216639226468227_u64,9480795763227938662_u64];
_4 = _32.0 as isize;
place!(Field::<i16>(Variant(_15, 2), 0)) = !_32.1;
_5 = '\u{d9f64}';
Goto(bb38)
}
bb38 = {
Call(_54 = dump_var(0_usize, 6_usize, Move(_6), 41_usize, Move(_41), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_54 = dump_var(0_usize, 3_usize, Move(_3), 19_usize, Move(_19), 27_usize, Move(_27), 34_usize, Move(_34)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_54 = dump_var(0_usize, 13_usize, Move(_13), 23_usize, Move(_23), 22_usize, Move(_22), 38_usize, Move(_38)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_54 = dump_var(0_usize, 35_usize, Move(_35), 46_usize, Move(_46), 2_usize, Move(_2), 55_usize, _55), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i128,mut _2: i32,mut _3: i32) -> u8 {
mir! {
type RET = u8;
let _4: usize;
let _5: Adt46;
let _6: f32;
let _7: i8;
let _8: f32;
let _9: isize;
let _10: isize;
let _11: *const u8;
let _12: isize;
let _13: [u128; 2];
let _14: Adt51;
let _15: (u8, u32);
let _16: f32;
let _17: isize;
let _18: u32;
let _19: i64;
let _20: [char; 4];
let _21: Adt49;
let _22: (char, u32, [u32; 2]);
let _23: bool;
let _24: [char; 7];
let _25: Adt54;
let _26: isize;
let _27: f64;
let _28: ();
let _29: ();
{
RET = 238_u8;
RET = 209_u8 - 18_u8;
RET = 231_u8;
_2 = -_3;
RET = 109_u8;
RET = 117_u8;
_4 = (-47_i8) as usize;
_3 = false as i32;
_2 = 49_i8 as i32;
_1 = '\u{103105}' as i128;
_4 = !6_usize;
_1 = -(-15635505125236508706917270006386025253_i128);
RET = 162_u8;
RET = 226_u8;
RET = _1 as u8;
RET = 216_u8;
_3 = _2 & _2;
_4 = RET as usize;
RET = 190_u8;
_4 = !5_usize;
RET = 13452_u16 as u8;
RET = 157_u8 & 35_u8;
_7 = (-2253938437279893103_i64) as i8;
_4 = !17599379905157777983_usize;
_6 = 25850_i16 as f32;
RET = 136_u8 - 225_u8;
_1 = -(-95689286907485689928476300906485157509_i128);
Call(RET = fn2(_7, _3, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = 39_i8 ^ 46_i8;
_1 = true as i128;
_3 = RET as i32;
RET = 130_u8 | 124_u8;
_3 = -_2;
_3 = _2;
_8 = _4 as f32;
RET = 98_u8 | 222_u8;
_6 = 9223372036854775807_isize as f32;
RET = _7 as u8;
RET = !100_u8;
RET = !42_u8;
_7 = 105_i8 >> _1;
_2 = 2345218727574632001_i64 as i32;
_8 = _6;
_2 = !_3;
RET = 50_u8 - 196_u8;
_2 = _3 >> _1;
_4 = _2 as usize;
_2 = _3 ^ _3;
_8 = (-9223372036854775808_isize) as f32;
Goto(bb2)
}
bb2 = {
RET = !62_u8;
_9 = (-9223372036854775808_isize) >> _1;
_2 = RET as i32;
_2 = !_3;
_2 = !_3;
RET = 71_u8;
_2 = 577098906_u32 as i32;
RET = 87_u8;
_1 = '\u{ea431}' as i128;
_9 = 9223372036854775807_isize;
_8 = -_6;
_10 = !_9;
_7 = (-76_i8);
_1 = (-161768383431517662595855234746627213624_i128) << _2;
_7 = '\u{13486}' as i8;
_4 = 12096983012094526618_usize - 6_usize;
_11 = core::ptr::addr_of!(RET);
_7 = 127_i8;
_6 = _8 + _8;
_4 = !1_usize;
_3 = !_2;
_10 = -_9;
_7 = 92_i8;
Call(_6 = core::intrinsics::transmute(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = !7761887808042643113_usize;
_6 = -_8;
Call(_5 = fn17(_11, _6, (*_11), (*_11), _9, _4, (*_11), _4, (*_11), _6, _9, _1, _3, _2, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = (-70_i8);
RET = 141465562008527491811372787508775967016_u128 as u8;
SetDiscriminant(_5, 2);
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _2 as u32;
place!(Field::<i32>(Variant(_5, 2), 5)) = !_3;
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).0 = _10 as u8;
_15 = ((*_11), Field::<(u8, u32)>(Variant(_5, 2), 2).1);
_13 = [211054764723385423160245496032249925946_u128,205550960239963644258909052198070033862_u128];
_11 = core::ptr::addr_of!(RET);
_4 = 10234117237317165682_usize;
place!(Field::<*const u8>(Variant(_5, 2), 4)) = core::ptr::addr_of!((*_11));
RET = _15.0 | _15.0;
_13 = [35548669411490488761616578177922068109_u128,142691037161393844194433737968059776402_u128];
Goto(bb5)
}
bb5 = {
RET = _15.0 + Field::<(u8, u32)>(Variant(_5, 2), 2).0;
RET = !_15.0;
_12 = -_10;
place!(Field::<f64>(Variant(_5, 2), 6)) = _8 as f64;
_12 = -_10;
RET = 40774_u16 as u8;
_12 = 16884_u16 as isize;
place!(Field::<i8>(Variant(_5, 2), 3)) = Field::<(u8, u32)>(Variant(_5, 2), 2).1 as i8;
place!(Field::<[i16; 4]>(Variant(_5, 2), 0)) = [31876_i16,(-22942_i16),(-832_i16),(-21515_i16)];
_11 = core::ptr::addr_of!(_15.0);
_18 = !_15.1;
_4 = !4_usize;
_22.0 = '\u{76d37}';
_3 = Field::<i32>(Variant(_5, 2), 5);
_7 = Field::<i8>(Variant(_5, 2), 3) >> _15.0;
Goto(bb6)
}
bb6 = {
_8 = -_6;
RET = !Field::<(u8, u32)>(Variant(_5, 2), 2).0;
_4 = _8 as usize;
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _18;
_22.2 = [_15.1,Field::<(u8, u32)>(Variant(_5, 2), 2).1];
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _15.1 >> RET;
_19 = -(-3306569157714098546_i64);
_1 = 79065381851248095010537197691307167521_i128 << _12;
_16 = -_8;
RET = _15.0 & (*_11);
_11 = core::ptr::addr_of!(RET);
_20 = [_22.0,_22.0,_22.0,_22.0];
_6 = _8 + _8;
_3 = Field::<i32>(Variant(_5, 2), 5) - _2;
_22.2 = [Field::<(u8, u32)>(Variant(_5, 2), 2).1,Field::<(u8, u32)>(Variant(_5, 2), 2).1];
place!(Field::<*const u8>(Variant(_5, 2), 4)) = core::ptr::addr_of!(RET);
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).0 = RET - (*_11);
RET = Field::<(u8, u32)>(Variant(_5, 2), 2).0 - Field::<(u8, u32)>(Variant(_5, 2), 2).0;
_6 = _16 + _16;
_3 = Field::<(u8, u32)>(Variant(_5, 2), 2).1 as i32;
match _9 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
9223372036854775807 => bb13,
_ => bb12
}
}
bb7 = {
RET = _15.0 + Field::<(u8, u32)>(Variant(_5, 2), 2).0;
RET = !_15.0;
_12 = -_10;
place!(Field::<f64>(Variant(_5, 2), 6)) = _8 as f64;
_12 = -_10;
RET = 40774_u16 as u8;
_12 = 16884_u16 as isize;
place!(Field::<i8>(Variant(_5, 2), 3)) = Field::<(u8, u32)>(Variant(_5, 2), 2).1 as i8;
place!(Field::<[i16; 4]>(Variant(_5, 2), 0)) = [31876_i16,(-22942_i16),(-832_i16),(-21515_i16)];
_11 = core::ptr::addr_of!(_15.0);
_18 = !_15.1;
_4 = !4_usize;
_22.0 = '\u{76d37}';
_3 = Field::<i32>(Variant(_5, 2), 5);
_7 = Field::<i8>(Variant(_5, 2), 3) >> _15.0;
Goto(bb6)
}
bb8 = {
_7 = (-70_i8);
RET = 141465562008527491811372787508775967016_u128 as u8;
SetDiscriminant(_5, 2);
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _2 as u32;
place!(Field::<i32>(Variant(_5, 2), 5)) = !_3;
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).0 = _10 as u8;
_15 = ((*_11), Field::<(u8, u32)>(Variant(_5, 2), 2).1);
_13 = [211054764723385423160245496032249925946_u128,205550960239963644258909052198070033862_u128];
_11 = core::ptr::addr_of!(RET);
_4 = 10234117237317165682_usize;
place!(Field::<*const u8>(Variant(_5, 2), 4)) = core::ptr::addr_of!((*_11));
RET = _15.0 | _15.0;
_13 = [35548669411490488761616578177922068109_u128,142691037161393844194433737968059776402_u128];
Goto(bb5)
}
bb9 = {
_4 = !7761887808042643113_usize;
_6 = -_8;
Call(_5 = fn17(_11, _6, (*_11), (*_11), _9, _4, (*_11), _4, (*_11), _6, _9, _1, _3, _2, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
RET = !62_u8;
_9 = (-9223372036854775808_isize) >> _1;
_2 = RET as i32;
_2 = !_3;
_2 = !_3;
RET = 71_u8;
_2 = 577098906_u32 as i32;
RET = 87_u8;
_1 = '\u{ea431}' as i128;
_9 = 9223372036854775807_isize;
_8 = -_6;
_10 = !_9;
_7 = (-76_i8);
_1 = (-161768383431517662595855234746627213624_i128) << _2;
_7 = '\u{13486}' as i8;
_4 = 12096983012094526618_usize - 6_usize;
_11 = core::ptr::addr_of!(RET);
_7 = 127_i8;
_6 = _8 + _8;
_4 = !1_usize;
_3 = !_2;
_10 = -_9;
_7 = 92_i8;
Call(_6 = core::intrinsics::transmute(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_7 = 39_i8 ^ 46_i8;
_1 = true as i128;
_3 = RET as i32;
RET = 130_u8 | 124_u8;
_3 = -_2;
_3 = _2;
_8 = _4 as f32;
RET = 98_u8 | 222_u8;
_6 = 9223372036854775807_isize as f32;
RET = _7 as u8;
RET = !100_u8;
RET = !42_u8;
_7 = 105_i8 >> _1;
_2 = 2345218727574632001_i64 as i32;
_8 = _6;
_2 = !_3;
RET = 50_u8 - 196_u8;
_2 = _3 >> _1;
_4 = _2 as usize;
_2 = _3 ^ _3;
_8 = (-9223372036854775808_isize) as f32;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_2 = Field::<i32>(Variant(_5, 2), 5);
match _9 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
9223372036854775807 => bb21,
_ => bb20
}
}
bb14 = {
RET = !62_u8;
_9 = (-9223372036854775808_isize) >> _1;
_2 = RET as i32;
_2 = !_3;
_2 = !_3;
RET = 71_u8;
_2 = 577098906_u32 as i32;
RET = 87_u8;
_1 = '\u{ea431}' as i128;
_9 = 9223372036854775807_isize;
_8 = -_6;
_10 = !_9;
_7 = (-76_i8);
_1 = (-161768383431517662595855234746627213624_i128) << _2;
_7 = '\u{13486}' as i8;
_4 = 12096983012094526618_usize - 6_usize;
_11 = core::ptr::addr_of!(RET);
_7 = 127_i8;
_6 = _8 + _8;
_4 = !1_usize;
_3 = !_2;
_10 = -_9;
_7 = 92_i8;
Call(_6 = core::intrinsics::transmute(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_7 = 39_i8 ^ 46_i8;
_1 = true as i128;
_3 = RET as i32;
RET = 130_u8 | 124_u8;
_3 = -_2;
_3 = _2;
_8 = _4 as f32;
RET = 98_u8 | 222_u8;
_6 = 9223372036854775807_isize as f32;
RET = _7 as u8;
RET = !100_u8;
RET = !42_u8;
_7 = 105_i8 >> _1;
_2 = 2345218727574632001_i64 as i32;
_8 = _6;
_2 = !_3;
RET = 50_u8 - 196_u8;
_2 = _3 >> _1;
_4 = _2 as usize;
_2 = _3 ^ _3;
_8 = (-9223372036854775808_isize) as f32;
Goto(bb2)
}
bb16 = {
RET = !62_u8;
_9 = (-9223372036854775808_isize) >> _1;
_2 = RET as i32;
_2 = !_3;
_2 = !_3;
RET = 71_u8;
_2 = 577098906_u32 as i32;
RET = 87_u8;
_1 = '\u{ea431}' as i128;
_9 = 9223372036854775807_isize;
_8 = -_6;
_10 = !_9;
_7 = (-76_i8);
_1 = (-161768383431517662595855234746627213624_i128) << _2;
_7 = '\u{13486}' as i8;
_4 = 12096983012094526618_usize - 6_usize;
_11 = core::ptr::addr_of!(RET);
_7 = 127_i8;
_6 = _8 + _8;
_4 = !1_usize;
_3 = !_2;
_10 = -_9;
_7 = 92_i8;
Call(_6 = core::intrinsics::transmute(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_4 = !7761887808042643113_usize;
_6 = -_8;
Call(_5 = fn17(_11, _6, (*_11), (*_11), _9, _4, (*_11), _4, (*_11), _6, _9, _1, _3, _2, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb18 = {
_7 = (-70_i8);
RET = 141465562008527491811372787508775967016_u128 as u8;
SetDiscriminant(_5, 2);
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _2 as u32;
place!(Field::<i32>(Variant(_5, 2), 5)) = !_3;
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).0 = _10 as u8;
_15 = ((*_11), Field::<(u8, u32)>(Variant(_5, 2), 2).1);
_13 = [211054764723385423160245496032249925946_u128,205550960239963644258909052198070033862_u128];
_11 = core::ptr::addr_of!(RET);
_4 = 10234117237317165682_usize;
place!(Field::<*const u8>(Variant(_5, 2), 4)) = core::ptr::addr_of!((*_11));
RET = _15.0 | _15.0;
_13 = [35548669411490488761616578177922068109_u128,142691037161393844194433737968059776402_u128];
Goto(bb5)
}
bb19 = {
RET = _15.0 + Field::<(u8, u32)>(Variant(_5, 2), 2).0;
RET = !_15.0;
_12 = -_10;
place!(Field::<f64>(Variant(_5, 2), 6)) = _8 as f64;
_12 = -_10;
RET = 40774_u16 as u8;
_12 = 16884_u16 as isize;
place!(Field::<i8>(Variant(_5, 2), 3)) = Field::<(u8, u32)>(Variant(_5, 2), 2).1 as i8;
place!(Field::<[i16; 4]>(Variant(_5, 2), 0)) = [31876_i16,(-22942_i16),(-832_i16),(-21515_i16)];
_11 = core::ptr::addr_of!(_15.0);
_18 = !_15.1;
_4 = !4_usize;
_22.0 = '\u{76d37}';
_3 = Field::<i32>(Variant(_5, 2), 5);
_7 = Field::<i8>(Variant(_5, 2), 3) >> _15.0;
Goto(bb6)
}
bb20 = {
_8 = -_6;
RET = !Field::<(u8, u32)>(Variant(_5, 2), 2).0;
_4 = _8 as usize;
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _18;
_22.2 = [_15.1,Field::<(u8, u32)>(Variant(_5, 2), 2).1];
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).1 = _15.1 >> RET;
_19 = -(-3306569157714098546_i64);
_1 = 79065381851248095010537197691307167521_i128 << _12;
_16 = -_8;
RET = _15.0 & (*_11);
_11 = core::ptr::addr_of!(RET);
_20 = [_22.0,_22.0,_22.0,_22.0];
_6 = _8 + _8;
_3 = Field::<i32>(Variant(_5, 2), 5) - _2;
_22.2 = [Field::<(u8, u32)>(Variant(_5, 2), 2).1,Field::<(u8, u32)>(Variant(_5, 2), 2).1];
place!(Field::<*const u8>(Variant(_5, 2), 4)) = core::ptr::addr_of!(RET);
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)).0 = RET - (*_11);
RET = Field::<(u8, u32)>(Variant(_5, 2), 2).0 - Field::<(u8, u32)>(Variant(_5, 2), 2).0;
_6 = _16 + _16;
_3 = Field::<(u8, u32)>(Variant(_5, 2), 2).1 as i32;
match _9 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
9223372036854775807 => bb13,
_ => bb12
}
}
bb21 = {
_15 = (RET, Field::<(u8, u32)>(Variant(_5, 2), 2).1);
_8 = 11863276766647255071_u64 as f32;
_7 = Field::<i8>(Variant(_5, 2), 3);
_13 = [193150476528943425269110967500902710201_u128,173473751360591470985734082145578037736_u128];
_8 = -_6;
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)) = (_15.0, _15.1);
_11 = Field::<*const u8>(Variant(_5, 2), 4);
place!(Field::<(u8, u32)>(Variant(_5, 2), 2)) = (RET, _15.1);
_24 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
RET = Field::<(u8, u32)>(Variant(_5, 2), 2).0;
_22.1 = !Field::<(u8, u32)>(Variant(_5, 2), 2).1;
_25.fld0.1 = _22.1 | _22.1;
_25.fld5.0 = [_2,Field::<i32>(Variant(_5, 2), 5),_3,_2,_3];
_20 = [_22.0,_22.0,_22.0,_22.0];
_25.fld0.0 = _22.0;
_25.fld1 = _25.fld5.0;
_22.2 = [_15.1,_22.1];
Goto(bb22)
}
bb22 = {
Call(_28 = dump_var(1_usize, 24_usize, Move(_24), 7_usize, Move(_7), 2_usize, Move(_2), 22_usize, Move(_22)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_28 = dump_var(1_usize, 19_usize, Move(_19), 1_usize, Move(_1), 10_usize, Move(_10), 29_usize, _29), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: i8,mut _2: i32,mut _3: i32) -> u8 {
mir! {
type RET = u8;
let _4: f64;
let _5: Adt56;
let _6: char;
let _7: *mut u128;
let _8: u64;
let _9: u128;
let _10: Adt45;
let _11: isize;
let _12: isize;
let _13: u8;
let _14: [char; 7];
let _15: Adt44;
let _16: isize;
let _17: i32;
let _18: [u64; 5];
let _19: ();
let _20: ();
{
RET = 192_u8 & 124_u8;
_1 = (-30_i8);
RET = 17_u8 - 197_u8;
_2 = _3;
_3 = _2 | _2;
_2 = '\u{4133b}' as i32;
RET = 134_u8;
_3 = _2;
RET = true as u8;
RET = 2618475790112016294_i64 as u8;
_2 = _3 << _3;
_2 = _3;
_4 = 18638383633943113075774635628858651615_u128 as f64;
_3 = _2;
_1 = (-45_i8) << RET;
_6 = '\u{381e9}';
_1 = 4_i8;
_4 = 18202_u16 as f64;
_1 = 52_i8;
_1 = (-3592960541947661010_i64) as i8;
RET = 101_u8;
RET = 25_u8;
_4 = 13022862170931779282835937618743786175_i128 as f64;
RET = 113_u8;
Call(_4 = fn3(_6, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = (-4_isize) as i8;
_6 = '\u{27ebd}';
_6 = '\u{cb2ea}';
_8 = 14611143195461210992_u64 + 2389589570347443622_u64;
_8 = 3742414032280901503_u64;
RET = !28_u8;
_3 = 3794324776_u32 as i32;
RET = 248_u8;
_7 = core::ptr::addr_of_mut!(_9);
_8 = 53229_u16 as u64;
_2 = _3;
_11 = (-7709_i16) as isize;
_10 = Adt45::Variant2 { fld0: 14769_i16 };
_2 = _3 & _3;
_8 = 50049_u16 as u64;
_9 = !252906765052637028427827893411599518535_u128;
_6 = '\u{4cebd}';
_8 = !3389475369589768337_u64;
_6 = '\u{601c2}';
match RET {
0 => bb2,
1 => bb3,
248 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_12 = _3 as isize;
_13 = RET;
_3 = !_2;
RET = _13;
_2 = _3;
_3 = !_2;
_12 = _8 as isize;
_3 = _4 as i32;
place!(Field::<i16>(Variant(_10, 2), 0)) = (-28596_i16);
match _13 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
248 => bb13,
_ => bb12
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = (-4_isize) as i8;
_6 = '\u{27ebd}';
_6 = '\u{cb2ea}';
_8 = 14611143195461210992_u64 + 2389589570347443622_u64;
_8 = 3742414032280901503_u64;
RET = !28_u8;
_3 = 3794324776_u32 as i32;
RET = 248_u8;
_7 = core::ptr::addr_of_mut!(_9);
_8 = 53229_u16 as u64;
_2 = _3;
_11 = (-7709_i16) as isize;
_10 = Adt45::Variant2 { fld0: 14769_i16 };
_2 = _3 & _3;
_8 = 50049_u16 as u64;
_9 = !252906765052637028427827893411599518535_u128;
_6 = '\u{4cebd}';
_8 = !3389475369589768337_u64;
_6 = '\u{601c2}';
match RET {
0 => bb2,
1 => bb3,
248 => bb5,
_ => bb4
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_14 = [_6,_6,_6,_6,_6,_6,_6];
_2 = _3 << _9;
RET = _13 + _13;
_1 = _8 as i8;
_12 = -_11;
_7 = core::ptr::addr_of_mut!((*_7));
RET = _13;
place!(Field::<i16>(Variant(_10, 2), 0)) = 249_i16 * (-16995_i16);
_8 = 1072443622_u32 as u64;
_2 = !_3;
_14 = [_6,_6,_6,_6,_6,_6,_6];
_4 = Field::<i16>(Variant(_10, 2), 0) as f64;
_13 = !RET;
_14 = [_6,_6,_6,_6,_6,_6,_6];
_2 = !_3;
RET = 61868338655748202276079200316558058792_i128 as u8;
_7 = core::ptr::addr_of_mut!((*_7));
_16 = _11 ^ _11;
Goto(bb14)
}
bb14 = {
_3 = _2 << _9;
_13 = RET | RET;
_7 = core::ptr::addr_of_mut!((*_7));
_14 = [_6,_6,_6,_6,_6,_6,_6];
_9 = 238337353133780618105373460932126701316_u128 & 260719453766424461583336310203600981463_u128;
RET = _13;
_12 = _16;
_6 = '\u{90f2a}';
RET = _13;
_8 = _1 as u64;
_16 = _12;
_14 = [_6,_6,_6,_6,_6,_6,_6];
_11 = _12 * _12;
RET = _13;
_4 = _8 as f64;
RET = _13;
Goto(bb15)
}
bb15 = {
Call(_19 = dump_var(2_usize, 12_usize, Move(_12), 9_usize, Move(_9), 14_usize, Move(_14), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_19 = dump_var(2_usize, 2_usize, Move(_2), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: char,mut _2: char) -> f64 {
mir! {
type RET = f64;
let _3: [u16; 4];
let _4: [i16; 4];
let _5: [i32; 5];
let _6: bool;
let _7: i8;
let _8: u16;
let _9: [i16; 4];
let _10: (char, u32, [u32; 2]);
let _11: [i16; 4];
let _12: i8;
let _13: f64;
let _14: u16;
let _15: Adt49;
let _16: [u32; 2];
let _17: u8;
let _18: Adt52;
let _19: i16;
let _20: *mut char;
let _21: [i8; 7];
let _22: f32;
let _23: ([i32; 5],);
let _24: char;
let _25: [u64; 5];
let _26: f32;
let _27: char;
let _28: [u16; 7];
let _29: [i16; 4];
let _30: [u64; 5];
let _31: i8;
let _32: isize;
let _33: isize;
let _34: i32;
let _35: Adt56;
let _36: ();
let _37: ();
{
_2 = _1;
RET = (-6371931611535809580_i64) as f64;
RET = 52123363316997122_i64 as f64;
RET = 19034116454761548836305279434204865982_i128 as f64;
_1 = _2;
RET = 3768210435_u32 as f64;
_2 = _1;
Goto(bb1)
}
bb1 = {
RET = (-95_isize) as f64;
RET = 236_u8 as f64;
_1 = _2;
_1 = _2;
RET = (-29141_i16) as f64;
RET = 326788632237353438131720924434929908760_u128 as f64;
RET = 2_usize as f64;
RET = (-52_i8) as f64;
_2 = _1;
RET = 9223372036854775807_isize as f64;
_2 = _1;
RET = 202109221935062299572853486125608791863_u128 as f64;
_2 = _1;
_1 = _2;
RET = 3905075765925347016_u64 as f64;
_2 = _1;
_2 = _1;
_3 = [39593_u16,58247_u16,21769_u16,32834_u16];
RET = 83168639056548390782089306628128350571_i128 as f64;
_4 = [19327_i16,11004_i16,19342_i16,(-1445_i16)];
_1 = _2;
RET = 7_usize as f64;
_3 = [8984_u16,35189_u16,15047_u16,55118_u16];
Call(_4 = fn4(RET, _3, _1, _2, _3, _1, _2, RET, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = (-92_i8) as f64;
_3 = [64411_u16,27743_u16,3333_u16,17889_u16];
_2 = _1;
RET = (-98_i8) as f64;
_1 = _2;
RET = (-36268952634954723662133589557645061120_i128) as f64;
_2 = _1;
RET = (-83186923407254649954920934049377881774_i128) as f64;
_3 = [55098_u16,5907_u16,39063_u16,34305_u16];
_1 = _2;
_3 = [2899_u16,10749_u16,28554_u16,53705_u16];
_4 = [20246_i16,(-18724_i16),21017_i16,27937_i16];
_2 = _1;
_1 = _2;
RET = (-9747_i16) as f64;
RET = 2927345837_u32 as f64;
Goto(bb3)
}
bb3 = {
_5 = [(-1680191056_i32),(-252010217_i32),(-325777441_i32),1395381493_i32,(-1217742310_i32)];
Goto(bb4)
}
bb4 = {
RET = (-122_i8) as f64;
_3 = [49398_u16,40994_u16,46650_u16,25388_u16];
_5 = [(-149200451_i32),1004533324_i32,(-38199536_i32),778212740_i32,409479567_i32];
_1 = _2;
_7 = 71_i8;
_1 = _2;
_7 = (-16706_i16) as i8;
_7 = 10_i8 >> (-127875985739249113609698040801850257051_i128);
_7 = 34_i8 | 109_i8;
_5 = [711426819_i32,(-595958039_i32),(-2073392669_i32),1865351381_i32,980819337_i32];
_7 = (-1289296085_i32) as i8;
Call(_6 = fn7(_5, RET, _7, _5, _4, _5), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_4 = [(-19907_i16),(-5580_i16),(-19659_i16),(-32695_i16)];
_5 = [206509310_i32,1372158832_i32,2009815494_i32,(-1632722470_i32),(-277826984_i32)];
_4 = [(-32087_i16),(-4241_i16),(-32250_i16),(-12744_i16)];
_4 = [21598_i16,(-32698_i16),18529_i16,25545_i16];
RET = 22956_u16 as f64;
_8 = 13176_u16 & 51649_u16;
_4 = [4121_i16,(-10523_i16),(-14694_i16),(-19213_i16)];
_6 = true ^ true;
_8 = 5829321729637665916_i64 as u16;
_6 = true;
_3 = [_8,_8,_8,_8];
_7 = 620194234_u32 as i8;
_7 = 36_i8 ^ (-97_i8);
RET = (-6574_i16) as f64;
_5 = [(-1553502555_i32),494743639_i32,1205691593_i32,949260271_i32,1780979348_i32];
_9 = _4;
_10.0 = _2;
_4 = [(-27196_i16),(-7395_i16),(-17877_i16),30264_i16];
_11 = _4;
_2 = _1;
_6 = true;
_4 = _11;
Goto(bb6)
}
bb6 = {
_10.2 = [2705442266_u32,288632540_u32];
_11 = [(-8484_i16),(-340_i16),(-6383_i16),(-2399_i16)];
RET = 986969866_i32 as f64;
_11 = _4;
_10.1 = !1651691443_u32;
_4 = [13623_i16,10098_i16,21154_i16,13628_i16];
_3 = [_8,_8,_8,_8];
_7 = (-75_i8);
_10.0 = _2;
_2 = _10.0;
_7 = (-77_i8);
_12 = _7;
RET = 11178146607190657064_u64 as f64;
_10.0 = _1;
_7 = _12;
_6 = !false;
_13 = -RET;
_9 = [(-32597_i16),20867_i16,(-13509_i16),31687_i16];
_14 = _10.1 as u16;
match _7 {
0 => bb5,
1 => bb4,
2 => bb3,
340282366920938463463374607431768211379 => bb8,
_ => bb7
}
}
bb7 = {
RET = (-95_isize) as f64;
RET = 236_u8 as f64;
_1 = _2;
_1 = _2;
RET = (-29141_i16) as f64;
RET = 326788632237353438131720924434929908760_u128 as f64;
RET = 2_usize as f64;
RET = (-52_i8) as f64;
_2 = _1;
RET = 9223372036854775807_isize as f64;
_2 = _1;
RET = 202109221935062299572853486125608791863_u128 as f64;
_2 = _1;
_1 = _2;
RET = 3905075765925347016_u64 as f64;
_2 = _1;
_2 = _1;
_3 = [39593_u16,58247_u16,21769_u16,32834_u16];
RET = 83168639056548390782089306628128350571_i128 as f64;
_4 = [19327_i16,11004_i16,19342_i16,(-1445_i16)];
_1 = _2;
RET = 7_usize as f64;
_3 = [8984_u16,35189_u16,15047_u16,55118_u16];
Call(_4 = fn4(RET, _3, _1, _2, _3, _1, _2, RET, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
RET = -_13;
_4 = _11;
_16 = [_10.1,_10.1];
_1 = _2;
_15 = Adt49::Variant2 { fld0: _3,fld1: _5,fld2: _13 };
place!(Field::<[i32; 5]>(Variant(_15, 2), 1)) = [(-1485277037_i32),(-207710996_i32),575799297_i32,(-1970363620_i32),(-1459439757_i32)];
_3 = [_8,_8,_14,_14];
_10.2 = _16;
_10.0 = _1;
RET = 154561032263250587626190430434409599753_i128 as f64;
_10.2 = [_10.1,_10.1];
_8 = !_14;
RET = -_13;
_14 = _8 | _8;
_16 = [_10.1,_10.1];
_8 = _14;
_3 = [_14,_14,_8,_14];
place!(Field::<[u16; 4]>(Variant(_15, 2), 0)) = _3;
RET = Field::<f64>(Variant(_15, 2), 2);
RET = -_13;
_13 = -Field::<f64>(Variant(_15, 2), 2);
_10 = (_2, 875032948_u32, _16);
_3 = Field::<[u16; 4]>(Variant(_15, 2), 0);
_11 = _4;
_18 = Adt52::Variant2 { fld0: 185_u8 };
_10 = (_2, 2310837055_u32, _16);
match _10.1 {
0 => bb9,
1 => bb10,
2 => bb11,
2310837055 => bb13,
_ => bb12
}
}
bb9 = {
RET = (-95_isize) as f64;
RET = 236_u8 as f64;
_1 = _2;
_1 = _2;
RET = (-29141_i16) as f64;
RET = 326788632237353438131720924434929908760_u128 as f64;
RET = 2_usize as f64;
RET = (-52_i8) as f64;
_2 = _1;
RET = 9223372036854775807_isize as f64;
_2 = _1;
RET = 202109221935062299572853486125608791863_u128 as f64;
_2 = _1;
_1 = _2;
RET = 3905075765925347016_u64 as f64;
_2 = _1;
_2 = _1;
_3 = [39593_u16,58247_u16,21769_u16,32834_u16];
RET = 83168639056548390782089306628128350571_i128 as f64;
_4 = [19327_i16,11004_i16,19342_i16,(-1445_i16)];
_1 = _2;
RET = 7_usize as f64;
_3 = [8984_u16,35189_u16,15047_u16,55118_u16];
Call(_4 = fn4(RET, _3, _1, _2, _3, _1, _2, RET, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_10.2 = [2705442266_u32,288632540_u32];
_11 = [(-8484_i16),(-340_i16),(-6383_i16),(-2399_i16)];
RET = 986969866_i32 as f64;
_11 = _4;
_10.1 = !1651691443_u32;
_4 = [13623_i16,10098_i16,21154_i16,13628_i16];
_3 = [_8,_8,_8,_8];
_7 = (-75_i8);
_10.0 = _2;
_2 = _10.0;
_7 = (-77_i8);
_12 = _7;
RET = 11178146607190657064_u64 as f64;
_10.0 = _1;
_7 = _12;
_6 = !false;
_13 = -RET;
_9 = [(-32597_i16),20867_i16,(-13509_i16),31687_i16];
_14 = _10.1 as u16;
match _7 {
0 => bb5,
1 => bb4,
2 => bb3,
340282366920938463463374607431768211379 => bb8,
_ => bb7
}
}
bb11 = {
_4 = [(-19907_i16),(-5580_i16),(-19659_i16),(-32695_i16)];
_5 = [206509310_i32,1372158832_i32,2009815494_i32,(-1632722470_i32),(-277826984_i32)];
_4 = [(-32087_i16),(-4241_i16),(-32250_i16),(-12744_i16)];
_4 = [21598_i16,(-32698_i16),18529_i16,25545_i16];
RET = 22956_u16 as f64;
_8 = 13176_u16 & 51649_u16;
_4 = [4121_i16,(-10523_i16),(-14694_i16),(-19213_i16)];
_6 = true ^ true;
_8 = 5829321729637665916_i64 as u16;
_6 = true;
_3 = [_8,_8,_8,_8];
_7 = 620194234_u32 as i8;
_7 = 36_i8 ^ (-97_i8);
RET = (-6574_i16) as f64;
_5 = [(-1553502555_i32),494743639_i32,1205691593_i32,949260271_i32,1780979348_i32];
_9 = _4;
_10.0 = _2;
_4 = [(-27196_i16),(-7395_i16),(-17877_i16),30264_i16];
_11 = _4;
_2 = _1;
_6 = true;
_4 = _11;
Goto(bb6)
}
bb12 = {
RET = (-95_isize) as f64;
RET = 236_u8 as f64;
_1 = _2;
_1 = _2;
RET = (-29141_i16) as f64;
RET = 326788632237353438131720924434929908760_u128 as f64;
RET = 2_usize as f64;
RET = (-52_i8) as f64;
_2 = _1;
RET = 9223372036854775807_isize as f64;
_2 = _1;
RET = 202109221935062299572853486125608791863_u128 as f64;
_2 = _1;
_1 = _2;
RET = 3905075765925347016_u64 as f64;
_2 = _1;
_2 = _1;
_3 = [39593_u16,58247_u16,21769_u16,32834_u16];
RET = 83168639056548390782089306628128350571_i128 as f64;
_4 = [19327_i16,11004_i16,19342_i16,(-1445_i16)];
_1 = _2;
RET = 7_usize as f64;
_3 = [8984_u16,35189_u16,15047_u16,55118_u16];
Call(_4 = fn4(RET, _3, _1, _2, _3, _1, _2, RET, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_7 = !_12;
_10.1 = 471203023_u32;
_20 = core::ptr::addr_of_mut!(_1);
place!(Field::<[u16; 4]>(Variant(_15, 2), 0)) = [_14,_14,_8,_14];
place!(Field::<u8>(Variant(_18, 2), 0)) = 9223372036854775807_isize as u8;
_7 = _12;
_10 = (_1, 4133762130_u32, _16);
_21 = [_7,_7,_7,_7,_7,_12,_7];
_10 = ((*_20), 2193728398_u32, _16);
_1 = _2;
_8 = _14 + _14;
place!(Field::<[i32; 5]>(Variant(_15, 2), 1)) = _5;
_10.2 = [_10.1,_10.1];
_10 = ((*_20), 2042570157_u32, _16);
_14 = _8;
_7 = _12;
_10.2 = _16;
_10.2 = _16;
SetDiscriminant(_15, 2);
SetDiscriminant(_18, 1);
place!(Field::<[i32; 5]>(Variant(_15, 2), 1)) = [1320614988_i32,(-59569557_i32),(-1727922730_i32),1964010078_i32,1354367698_i32];
_5 = [(-818948338_i32),(-777525068_i32),445932979_i32,2045605332_i32,(-627643298_i32)];
match _10.1 {
0 => bb10,
1 => bb2,
2042570157 => bb15,
_ => bb14
}
}
bb14 = {
RET = -_13;
_4 = _11;
_16 = [_10.1,_10.1];
_1 = _2;
_15 = Adt49::Variant2 { fld0: _3,fld1: _5,fld2: _13 };
place!(Field::<[i32; 5]>(Variant(_15, 2), 1)) = [(-1485277037_i32),(-207710996_i32),575799297_i32,(-1970363620_i32),(-1459439757_i32)];
_3 = [_8,_8,_14,_14];
_10.2 = _16;
_10.0 = _1;
RET = 154561032263250587626190430434409599753_i128 as f64;
_10.2 = [_10.1,_10.1];
_8 = !_14;
RET = -_13;
_14 = _8 | _8;
_16 = [_10.1,_10.1];
_8 = _14;
_3 = [_14,_14,_8,_14];
place!(Field::<[u16; 4]>(Variant(_15, 2), 0)) = _3;
RET = Field::<f64>(Variant(_15, 2), 2);
RET = -_13;
_13 = -Field::<f64>(Variant(_15, 2), 2);
_10 = (_2, 875032948_u32, _16);
_3 = Field::<[u16; 4]>(Variant(_15, 2), 0);
_11 = _4;
_18 = Adt52::Variant2 { fld0: 185_u8 };
_10 = (_2, 2310837055_u32, _16);
match _10.1 {
0 => bb9,
1 => bb10,
2 => bb11,
2310837055 => bb13,
_ => bb12
}
}
bb15 = {
_24 = _10.0;
_1 = _2;
_12 = _7;
_21 = [_7,_12,_12,_7,_7,_7,_12];
_24 = _10.0;
_26 = (-13078_i16) as f32;
_10 = ((*_20), 1402568445_u32, _16);
_31 = _12 - _12;
_30 = [2691994016391086680_u64,5359709487281011362_u64,7759389498398389377_u64,6528099565694126440_u64,4607153487191087875_u64];
_4 = _9;
_16 = [_10.1,_10.1];
_34 = 518241220_i32;
_30 = [11592673765225189240_u64,4040562908960020433_u64,10055763877923613792_u64,1738485413131424646_u64,3124965818087943517_u64];
_31 = _12 | _7;
_31 = _7 ^ _7;
Goto(bb16)
}
bb16 = {
Call(_36 = dump_var(3_usize, 2_usize, Move(_2), 3_usize, Move(_3), 14_usize, Move(_14), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(3_usize, 9_usize, Move(_9), 12_usize, Move(_12), 5_usize, Move(_5), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(3_usize, 11_usize, Move(_11), 37_usize, _37, 37_usize, _37, 37_usize, _37), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: f64,mut _2: [u16; 4],mut _3: char,mut _4: char,mut _5: [u16; 4],mut _6: char,mut _7: char,mut _8: f64,mut _9: [u16; 4],mut _10: [u16; 4]) -> [i16; 4] {
mir! {
type RET = [i16; 4];
let _11: Adt54;
let _12: (char, u32, [u32; 2]);
let _13: [i8; 7];
let _14: [u16; 4];
let _15: Adt43;
let _16: u32;
let _17: i16;
let _18: isize;
let _19: isize;
let _20: *const &'static *mut u16;
let _21: Adt57;
let _22: i128;
let _23: isize;
let _24: &'static *mut u16;
let _25: bool;
let _26: [u16; 4];
let _27: u8;
let _28: [u128; 2];
let _29: [u128; 8];
let _30: Adt46;
let _31: u16;
let _32: ([i32; 5],);
let _33: u64;
let _34: [u16; 4];
let _35: ();
let _36: ();
{
_7 = _4;
RET = [(-7567_i16),(-26561_i16),3748_i16,(-9917_i16)];
_4 = _6;
_2 = [28211_u16,48766_u16,24058_u16,40863_u16];
_11.fld1 = [2048949835_i32,364554580_i32,1811332943_i32,285231044_i32,203722787_i32];
_7 = _6;
_3 = _4;
_12.2 = [3254260943_u32,3422342688_u32];
_12.2 = [1148495620_u32,1867839861_u32];
_11.fld0 = (_4, 653277035_u32, _12.2);
_11.fld5 = (_11.fld1,);
_11.fld0.0 = _6;
RET = [(-5055_i16),(-15821_i16),18192_i16,18775_i16];
_12 = _11.fld0;
_3 = _7;
_5 = [30093_u16,41637_u16,38291_u16,48465_u16];
_11.fld0.2 = _12.2;
_13 = [(-72_i8),(-23_i8),(-61_i8),(-121_i8),103_i8,(-52_i8),97_i8];
_4 = _11.fld0.0;
_10 = [63491_u16,8145_u16,58867_u16,21395_u16];
RET = [(-23317_i16),(-30994_i16),7050_i16,(-25493_i16)];
_11.fld0 = _12;
_11.fld1 = [(-1285339995_i32),(-534747772_i32),1127712292_i32,778191977_i32,(-1974497088_i32)];
_6 = _7;
_11.fld0.2 = _12.2;
_11.fld4 = [98_i8,(-33_i8),(-38_i8),(-63_i8),63_i8,(-122_i8),32_i8];
Goto(bb1)
}
bb1 = {
_11.fld4 = [(-87_i8),50_i8,121_i8,(-114_i8),(-99_i8),(-17_i8),98_i8];
_11.fld0.1 = !_12.1;
_12.0 = _4;
Goto(bb2)
}
bb2 = {
_10 = _9;
RET = [31702_i16,(-14603_i16),(-15967_i16),12762_i16];
_13 = [(-98_i8),26_i8,(-79_i8),(-117_i8),111_i8,(-64_i8),(-37_i8)];
_14 = _10;
_11.fld2 = [_11.fld0.1,_12.1];
_3 = _11.fld0.0;
_9 = [37154_u16,61442_u16,42275_u16,24859_u16];
_11.fld2 = _11.fld0.2;
_12.0 = _3;
_11.fld5.0 = [946808456_i32,1367931923_i32,399151472_i32,1466457697_i32,(-1737790721_i32)];
_12.0 = _7;
_12.2 = _11.fld0.2;
_11.fld3 = Adt49::Variant2 { fld0: _10,fld1: _11.fld5.0,fld2: _8 };
_1 = Field::<f64>(Variant(_11.fld3, 2), 2);
_9 = [23891_u16,17850_u16,15326_u16,64466_u16];
_12.2 = [_12.1,_11.fld0.1];
_11.fld0.2 = [_11.fld0.1,_11.fld0.1];
RET = [(-11019_i16),(-10663_i16),(-17686_i16),(-8746_i16)];
_11.fld5 = (Field::<[i32; 5]>(Variant(_11.fld3, 2), 1),);
_16 = !_11.fld0.1;
_3 = _4;
_3 = _4;
_11.fld0 = _12;
_1 = Field::<f64>(Variant(_11.fld3, 2), 2) * Field::<f64>(Variant(_11.fld3, 2), 2);
_11.fld5 = (_11.fld1,);
_13 = [(-86_i8),(-71_i8),(-24_i8),50_i8,(-34_i8),50_i8,48_i8];
_4 = _3;
SetDiscriminant(_11.fld3, 0);
match _12.1 {
0 => bb3,
1 => bb4,
653277035 => bb6,
_ => bb5
}
}
bb3 = {
_11.fld4 = [(-87_i8),50_i8,121_i8,(-114_i8),(-99_i8),(-17_i8),98_i8];
_11.fld0.1 = !_12.1;
_12.0 = _4;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
place!(Field::<[i16; 4]>(Variant(_11.fld3, 0), 3)) = [9036_i16,(-31016_i16),(-15485_i16),3659_i16];
_2 = _5;
_11.fld3 = Adt49::Variant2 { fld0: _10,fld1: _11.fld1,fld2: _8 };
_11.fld0.2 = [_11.fld0.1,_11.fld0.1];
_9 = [11237_u16,24196_u16,14300_u16,5690_u16];
match _12.1 {
0 => bb1,
1 => bb4,
2 => bb7,
3 => bb8,
653277035 => bb10,
_ => bb9
}
}
bb7 = {
_11.fld4 = [(-87_i8),50_i8,121_i8,(-114_i8),(-99_i8),(-17_i8),98_i8];
_11.fld0.1 = !_12.1;
_12.0 = _4;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_11.fld4 = [(-87_i8),50_i8,121_i8,(-114_i8),(-99_i8),(-17_i8),98_i8];
_11.fld0.1 = !_12.1;
_12.0 = _4;
Goto(bb2)
}
bb10 = {
_19 = 9223372036854775807_isize + 29_isize;
_6 = _11.fld0.0;
Goto(bb11)
}
bb11 = {
_1 = 40560010460029341263624251883101068968_i128 as f64;
_19 = (-9223372036854775808_isize) - (-61_isize);
_11.fld0.0 = _4;
_10 = [23393_u16,23784_u16,29617_u16,37193_u16];
_12.1 = _11.fld0.1 & _11.fld0.1;
RET = [(-28516_i16),25929_i16,(-12098_i16),16381_i16];
_16 = _12.1 / _11.fld0.1;
_8 = _1;
_8 = Field::<f64>(Variant(_11.fld3, 2), 2) - _1;
_14 = _5;
_4 = _3;
Goto(bb12)
}
bb12 = {
_20 = core::ptr::addr_of!(_24);
_4 = _11.fld0.0;
_10 = _14;
_17 = !7405_i16;
place!(Field::<[i32; 5]>(Variant(_11.fld3, 2), 1)) = [519119642_i32,1988137217_i32,(-1185264354_i32),(-1727392752_i32),(-340865505_i32)];
_18 = _19 - _19;
_11.fld4 = _13;
place!(Field::<f64>(Variant(_11.fld3, 2), 2)) = _1;
Call(_13 = fn5(_11.fld0.1, _11.fld0.1, Move(_11.fld3), _11.fld0.1, _11.fld0, _10, _5, _9, _11.fld0.1, _11.fld0.0, _12, _18), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_12 = (_7, _16, _11.fld0.2);
_11.fld5 = (_11.fld1,);
_13 = _11.fld4;
_27 = !164_u8;
_23 = _17 as isize;
_17 = 3195_i16 & (-22940_i16);
_11.fld3 = Adt49::Variant2 { fld0: _14,fld1: _11.fld1,fld2: _8 };
_1 = -Field::<f64>(Variant(_11.fld3, 2), 2);
Goto(bb14)
}
bb14 = {
_25 = true;
_22 = 93348205251365915458996953510952955355_i128;
_11.fld1 = [(-691107766_i32),622355147_i32,808438602_i32,1138855340_i32,2039933259_i32];
_26 = _10;
_19 = 1770282566_i32 as isize;
_11.fld0 = (_3, _12.1, _11.fld2);
_11.fld4 = [58_i8,68_i8,(-125_i8),(-40_i8),(-94_i8),(-69_i8),0_i8];
_11.fld1 = _11.fld5.0;
_17 = 27150_i16 << _12.1;
RET = [_17,_17,_17,_17];
_11.fld1 = [2031709597_i32,(-977632131_i32),1568160641_i32,361811862_i32,1202511049_i32];
_11.fld1 = [(-470794387_i32),768878152_i32,(-14090068_i32),1348496014_i32,1488468808_i32];
_17 = (-31444_i16);
_11.fld1 = [(-1652732813_i32),(-1494468564_i32),(-912994017_i32),(-1588360089_i32),(-204337782_i32)];
_25 = true;
_26 = _10;
_12.2 = [_12.1,_11.fld0.1];
_29 = [129067266692059074291046932918006051433_u128,167945260372606670318321359146076798964_u128,301497010598551756032778165678598721513_u128,65625527238440121048909338231386785539_u128,232554688063939161192659489875950294663_u128,60701476236963527872216201567010916152_u128,324952015479952598189609623082064598684_u128,234854567437160699740878009330178621012_u128];
_11.fld2 = _12.2;
_12.1 = _16;
_18 = _23 << _11.fld0.1;
_12.2 = [_11.fld0.1,_11.fld0.1];
_19 = !_18;
_28 = [266451517028629815987618356149521250689_u128,335790033994310038253657389884798161648_u128];
_23 = !_19;
SetDiscriminant(_11.fld3, 2);
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(4_usize, 26_usize, Move(_26), 7_usize, Move(_7), 13_usize, Move(_13), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(4_usize, 10_usize, Move(_10), 6_usize, Move(_6), 22_usize, Move(_22), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(4_usize, 25_usize, Move(_25), 3_usize, Move(_3), 12_usize, Move(_12), 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u32,mut _2: u32,mut _3: Adt49,mut _4: u32,mut _5: (char, u32, [u32; 2]),mut _6: [u16; 4],mut _7: [u16; 4],mut _8: [u16; 4],mut _9: u32,mut _10: char,mut _11: (char, u32, [u32; 2]),mut _12: isize) -> [i8; 7] {
mir! {
type RET = [i8; 7];
let _13: isize;
let _14: [u16; 7];
let _15: (i32, i16, f32, i8, u128);
let _16: Adt44;
let _17: Adt44;
let _18: [u16; 4];
let _19: isize;
let _20: isize;
let _21: u64;
let _22: Adt48;
let _23: [u16; 7];
let _24: i64;
let _25: *const i32;
let _26: (i32, i16, f32, i8, u128);
let _27: [char; 4];
let _28: Adt44;
let _29: f32;
let _30: i16;
let _31: ();
let _32: ();
{
_11.2 = [_2,_5.1];
_11.1 = _2 << _4;
_1 = _9;
_1 = _11.1 | _5.1;
_5 = _11;
_5 = (_10, _1, _11.2);
place!(Field::<[u16; 4]>(Variant(_3, 2), 0)) = [35686_u16,4659_u16,42521_u16,314_u16];
SetDiscriminant(_3, 2);
_14 = [43637_u16,11905_u16,6810_u16,21341_u16,2580_u16,37419_u16,60392_u16];
RET = [81_i8,115_i8,(-99_i8),23_i8,(-35_i8),86_i8,92_i8];
_6 = [48297_u16,29491_u16,62195_u16,21759_u16];
_12 = 9223372036854775807_isize;
_5.1 = _1;
_15.1 = !(-30816_i16);
place!(Field::<f64>(Variant(_3, 2), 2)) = _11.1 as f64;
_14 = [16763_u16,8730_u16,60648_u16,52914_u16,51660_u16,40112_u16,19414_u16];
_15.2 = (-4693581853013240646_i64) as f32;
_14 = [9719_u16,32072_u16,64053_u16,61015_u16,17722_u16,47181_u16,62720_u16];
_13 = Field::<f64>(Variant(_3, 2), 2) as isize;
Call(_11 = fn6(Field::<f64>(Variant(_3, 2), 2), _14, _5.1, RET, _4, _13, _1, _1, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = [18256_u16,63403_u16,49629_u16,52718_u16];
_14 = [63591_u16,54069_u16,14777_u16,15330_u16,41116_u16,43522_u16,30928_u16];
_15.4 = Field::<f64>(Variant(_3, 2), 2) as u128;
_13 = -_12;
place!(Field::<f64>(Variant(_3, 2), 2)) = 5589110683893437020_i64 as f64;
_15.4 = 24423285112094656357410523337236278019_u128 * 295357492392547057866656282802127790178_u128;
_2 = !_1;
_10 = _5.0;
_18 = [35604_u16,65319_u16,7466_u16,4039_u16];
_5.1 = _15.1 as u32;
place!(Field::<[i32; 5]>(Variant(_3, 2), 1)) = [(-1866703922_i32),(-1695347080_i32),(-304418123_i32),(-1502035312_i32),(-1240758107_i32)];
_15.0 = 52_i8 as i32;
_15.2 = 11_u8 as f32;
place!(Field::<[i32; 5]>(Variant(_3, 2), 1)) = [_15.0,_15.0,_15.0,_15.0,_15.0];
_4 = _1;
_6 = _18;
_15.1 = Field::<f64>(Variant(_3, 2), 2) as i16;
_2 = _1 & _1;
_15.3 = (-16_i8);
_11.0 = _10;
_12 = _13 - _13;
_5.0 = _11.0;
_21 = 4972501440145892090_u64 * 11599768169961897096_u64;
_6 = [49753_u16,3138_u16,58980_u16,4621_u16];
Goto(bb2)
}
bb2 = {
_21 = 2428967868409936021_i64 as u64;
place!(Field::<f64>(Variant(_3, 2), 2)) = 110_u8 as f64;
_16 = Adt44::Variant0 { fld0: _15.4,fld1: 8241647715729222985_i64,fld2: _15.1,fld3: _15 };
_14 = [25152_u16,25719_u16,28412_u16,60494_u16,51186_u16,32650_u16,55599_u16];
_15.3 = -Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).3;
_15 = Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3);
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3)) = _15;
_15.3 = Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).3;
_1 = _13 as u32;
place!(Field::<i64>(Variant(_16, 0), 1)) = !(-1174364856246675629_i64);
_6 = [3059_u16,29013_u16,23512_u16,33525_u16];
place!(Field::<[u16; 4]>(Variant(_3, 2), 0)) = _6;
_11.0 = _10;
_15.2 = Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).2;
Goto(bb3)
}
bb3 = {
_26 = (_15.0, _15.1, Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).2, _15.3, _15.4);
SetDiscriminant(_16, 1);
_11.0 = _5.0;
_10 = _11.0;
_5.0 = _10;
_17 = Adt44::Variant0 { fld0: _26.4,fld1: (-5281217070776158720_i64),fld2: _15.1,fld3: _15 };
_11.1 = Field::<(i32, i16, f32, i8, u128)>(Variant(_17, 0), 3).2 as u32;
_24 = !(-7247376397433083788_i64);
place!(Field::<i64>(Variant(_17, 0), 1)) = _24 * _24;
_11.2 = [_9,_2];
place!(Field::<u128>(Variant(_17, 0), 0)) = Field::<(i32, i16, f32, i8, u128)>(Variant(_17, 0), 3).1 as u128;
_15 = (_26.0, _26.1, Field::<(i32, i16, f32, i8, u128)>(Variant(_17, 0), 3).2, _26.3, _26.4);
_28 = _17;
_11.1 = Field::<u128>(Variant(_17, 0), 0) as u32;
_20 = -_12;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_28, 0), 3)).3 = 220_u8 as i8;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_17, 0), 3)) = Field::<(i32, i16, f32, i8, u128)>(Variant(_28, 0), 3);
_15.1 = !Field::<i16>(Variant(_17, 0), 2);
_15.4 = 194_u8 as u128;
place!(Field::<i64>(Variant(_28, 0), 1)) = Field::<i64>(Variant(_17, 0), 1) * _24;
SetDiscriminant(_17, 0);
_24 = !Field::<i64>(Variant(_28, 0), 1);
match _9 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
653277035 => bb8,
_ => bb7
}
}
bb4 = {
_21 = 2428967868409936021_i64 as u64;
place!(Field::<f64>(Variant(_3, 2), 2)) = 110_u8 as f64;
_16 = Adt44::Variant0 { fld0: _15.4,fld1: 8241647715729222985_i64,fld2: _15.1,fld3: _15 };
_14 = [25152_u16,25719_u16,28412_u16,60494_u16,51186_u16,32650_u16,55599_u16];
_15.3 = -Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).3;
_15 = Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3);
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3)) = _15;
_15.3 = Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).3;
_1 = _13 as u32;
place!(Field::<i64>(Variant(_16, 0), 1)) = !(-1174364856246675629_i64);
_6 = [3059_u16,29013_u16,23512_u16,33525_u16];
place!(Field::<[u16; 4]>(Variant(_3, 2), 0)) = _6;
_11.0 = _10;
_15.2 = Field::<(i32, i16, f32, i8, u128)>(Variant(_16, 0), 3).2;
Goto(bb3)
}
bb5 = {
_8 = [18256_u16,63403_u16,49629_u16,52718_u16];
_14 = [63591_u16,54069_u16,14777_u16,15330_u16,41116_u16,43522_u16,30928_u16];
_15.4 = Field::<f64>(Variant(_3, 2), 2) as u128;
_13 = -_12;
place!(Field::<f64>(Variant(_3, 2), 2)) = 5589110683893437020_i64 as f64;
_15.4 = 24423285112094656357410523337236278019_u128 * 295357492392547057866656282802127790178_u128;
_2 = !_1;
_10 = _5.0;
_18 = [35604_u16,65319_u16,7466_u16,4039_u16];
_5.1 = _15.1 as u32;
place!(Field::<[i32; 5]>(Variant(_3, 2), 1)) = [(-1866703922_i32),(-1695347080_i32),(-304418123_i32),(-1502035312_i32),(-1240758107_i32)];
_15.0 = 52_i8 as i32;
_15.2 = 11_u8 as f32;
place!(Field::<[i32; 5]>(Variant(_3, 2), 1)) = [_15.0,_15.0,_15.0,_15.0,_15.0];
_4 = _1;
_6 = _18;
_15.1 = Field::<f64>(Variant(_3, 2), 2) as i16;
_2 = _1 & _1;
_15.3 = (-16_i8);
_11.0 = _10;
_12 = _13 - _13;
_5.0 = _11.0;
_21 = 4972501440145892090_u64 * 11599768169961897096_u64;
_6 = [49753_u16,3138_u16,58980_u16,4621_u16];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
SetDiscriminant(_28, 1);
place!(Field::<[u128; 8]>(Variant(_16, 1), 0)) = [_15.4,_15.4,_26.4,_26.4,_26.4,_26.4,_26.4,_15.4];
_17 = Adt44::Variant1 { fld0: Field::<[u128; 8]>(Variant(_16, 1), 0) };
_27 = [_11.0,_10,_5.0,_10];
_26 = (_15.0, _15.1, _15.2, _15.3, _15.4);
place!(Field::<[u128; 8]>(Variant(_28, 1), 0)) = [_15.4,_15.4,_15.4,_15.4,_15.4,_26.4,_26.4,_26.4];
_15.3 = _26.3 >> _4;
RET = [_15.3,_15.3,_15.3,_15.3,_15.3,_15.3,_15.3];
_26.2 = _15.2;
_28 = Adt44::Variant0 { fld0: _15.4,fld1: _24,fld2: _26.1,fld3: _15 };
Goto(bb9)
}
bb9 = {
Call(_31 = dump_var(5_usize, 8_usize, Move(_8), 9_usize, Move(_9), 20_usize, Move(_20), 2_usize, Move(_2)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_31 = dump_var(5_usize, 11_usize, Move(_11), 14_usize, Move(_14), 21_usize, Move(_21), 13_usize, Move(_13)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_31 = dump_var(5_usize, 1_usize, Move(_1), 32_usize, _32, 32_usize, _32, 32_usize, _32), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: f64,mut _2: [u16; 7],mut _3: u32,mut _4: [i8; 7],mut _5: u32,mut _6: isize,mut _7: u32,mut _8: u32,mut _9: u32) -> (char, u32, [u32; 2]) {
mir! {
type RET = (char, u32, [u32; 2]);
let _10: i32;
let _11: isize;
let _12: *mut char;
let _13: isize;
let _14: (u8, u32);
let _15: Adt42;
let _16: [u128; 2];
let _17: Adt42;
let _18: [char; 8];
let _19: ();
let _20: ();
{
_6 = (-121_isize);
RET.0 = '\u{100fb8}';
RET.2 = [_3,_7];
RET.1 = !_8;
RET.1 = _3;
_7 = false as u32;
_6 = -(-9223372036854775808_isize);
_3 = RET.1 + _9;
_14.0 = 36_u8;
_14 = (30_u8, RET.1);
_12 = core::ptr::addr_of_mut!(RET.0);
_11 = -_6;
_14 = (83_u8, RET.1);
_13 = -_11;
_4 = [98_i8,(-77_i8),77_i8,(-47_i8),76_i8,(-27_i8),38_i8];
_13 = 22877783811897814959587725458758711546_i128 as isize;
_4 = [(-52_i8),31_i8,74_i8,(-58_i8),(-43_i8),(-72_i8),51_i8];
_16 = [55150879782769783159545862868389210327_u128,20767667188534616311598752720460182549_u128];
Goto(bb1)
}
bb1 = {
Call(_19 = dump_var(6_usize, 11_usize, Move(_11), 5_usize, Move(_5), 6_usize, Move(_6), 9_usize, Move(_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_19 = dump_var(6_usize, 2_usize, Move(_2), 14_usize, Move(_14), 20_usize, _20, 20_usize, _20), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [i32; 5],mut _2: f64,mut _3: i8,mut _4: [i32; 5],mut _5: [i16; 4],mut _6: [i32; 5]) -> bool {
mir! {
type RET = bool;
let _7: bool;
let _8: Adt44;
let _9: [char; 7];
let _10: [u128; 2];
let _11: (char, u32, [u32; 2]);
let _12: i128;
let _13: [u32; 2];
let _14: i16;
let _15: u128;
let _16: (i32, i16, f32, i8, u128);
let _17: Adt47;
let _18: [char; 4];
let _19: Adt42;
let _20: [i32; 5];
let _21: isize;
let _22: Adt54;
let _23: [char; 4];
let _24: Adt42;
let _25: [u128; 2];
let _26: (i32, i16, f32, i8, u128);
let _27: [u16; 7];
let _28: (char, u32, [u32; 2]);
let _29: Adt48;
let _30: [u32; 2];
let _31: Adt52;
let _32: [u128; 2];
let _33: Adt49;
let _34: Adt49;
let _35: [u128; 8];
let _36: ([i32; 5],);
let _37: i64;
let _38: [u128; 8];
let _39: [i8; 7];
let _40: Adt55;
let _41: usize;
let _42: ();
let _43: ();
{
RET = true;
RET = _3 >= _3;
RET = !true;
_4 = _1;
_3 = 11394024518253906709_u64 as i8;
RET = !true;
_1 = [4038721_i32,(-318934246_i32),(-422380965_i32),14113938_i32,957548372_i32];
Call(_2 = fn8(_1, _6, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = !RET;
_4 = [(-1407768357_i32),609391443_i32,(-1280757591_i32),963319294_i32,(-1911669383_i32)];
RET = _7;
_2 = 55515_u16 as f64;
_1 = [(-392826498_i32),479283632_i32,1574988284_i32,(-542948427_i32),(-1259901015_i32)];
_4 = [(-361316683_i32),1870836249_i32,(-1542887269_i32),1089244313_i32,(-1818387108_i32)];
RET = _7;
_4 = _6;
_1 = _6;
_4 = [(-1157431606_i32),878437541_i32,698121978_i32,1319961783_i32,(-808938047_i32)];
_9 = ['\u{c2f36}','\u{102a3a}','\u{b4af1}','\u{abda0}','\u{f1373}','\u{5d5e7}','\u{f433e}'];
_2 = (-26752_i16) as f64;
_10 = [211269639926739767078848007433428118381_u128,165597480700579156364261484742547971060_u128];
_3 = 1_usize as i8;
_6 = [1163237647_i32,(-1400824787_i32),403697604_i32,1897949105_i32,492575094_i32];
_2 = 3638435087_u32 as f64;
_7 = RET ^ RET;
_1 = [893483281_i32,(-1115222063_i32),(-2064442998_i32),799991939_i32,1034253435_i32];
_7 = RET;
_11.2 = [249288420_u32,1014234769_u32];
Goto(bb2)
}
bb2 = {
_11.1 = 1373758269_u32 & 1865517711_u32;
_6 = [228266086_i32,997023780_i32,(-1580627918_i32),258518067_i32,(-1357279726_i32)];
_11.0 = '\u{dc66d}';
_9 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_10 = [315337246316364029106751182446219482317_u128,303121302760288894613911790984354232720_u128];
_4 = [930408480_i32,(-1540864289_i32),945973414_i32,(-952946333_i32),2095918182_i32];
_7 = RET;
_3 = (-77_i8) | (-92_i8);
_11.0 = '\u{cd74}';
_3 = -52_i8;
_7 = RET | RET;
_12 = (-85401437870624736744118322823892238524_i128);
_2 = (-42336458_i32) as f64;
_3 = -(-125_i8);
_4 = _6;
_11.2 = [_11.1,_11.1];
_11.1 = !940960740_u32;
_11.1 = _7 as u32;
_5 = [(-5014_i16),(-28913_i16),15749_i16,(-5214_i16)];
_9 = [_11.0,_11.0,_11.0,_11.0,_11.0,_11.0,_11.0];
_10 = [14949474959609146622074161628165580594_u128,93767362296536676136003355674181352000_u128];
RET = _2 <= _2;
Call(_8 = fn14(_11.1, _4, _1, _10, _5, _4, _6, _11.0, _4, _11, _11.2, _1, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = _3 as f64;
place!(Field::<i16>(Variant(_8, 0), 2)) = -Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).1;
_4 = [Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0];
_1 = [Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0];
_10 = [Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4];
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3)).1 = !Field::<i16>(Variant(_8, 0), 2);
_12 = (-146959056303971400522008232232862700016_i128) << Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3)).2 = 17263254670522387052_usize as f32;
_10 = [Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4];
_11.2 = [_11.1,_11.1];
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3)).3 = RET as i8;
_6 = [Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0];
_13 = [_11.1,_11.1];
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3)).0 = 783529_i32 + 1204514897_i32;
_2 = 4_usize as f64;
place!(Field::<i64>(Variant(_8, 0), 1)) = (-4082331158998951055_i64);
_16.0 = _12 as i32;
_16.0 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0 >> Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).3;
_5 = [Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).1,Field::<i16>(Variant(_8, 0), 2),Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).1,Field::<i16>(Variant(_8, 0), 2)];
RET = _7;
_16.4 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4 ^ Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).4;
_19.fld1 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).0 as f64;
_16 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3);
_16.2 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).2 + Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).2;
match Field::<i64>(Variant(_8, 0), 1) {
340282366920938463459292276272769260401 => bb4,
_ => bb1
}
}
bb4 = {
_5 = [Field::<i16>(Variant(_8, 0), 2),_16.1,Field::<i16>(Variant(_8, 0), 2),Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).1];
_5 = [Field::<i16>(Variant(_8, 0), 2),_16.1,_16.1,Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).1];
_14 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).1;
_16.3 = _16.4 as i8;
_21 = !(-9223372036854775808_isize);
_16.2 = Field::<(i32, i16, f32, i8, u128)>(Variant(_8, 0), 3).2;
_23 = [_11.0,_11.0,_11.0,_11.0];
SetDiscriminant(_8, 1);
_20 = _4;
_16.1 = -_14;
_22.fld0 = (_11.0, _11.1, _11.2);
Goto(bb5)
}
bb5 = {
_26.4 = 17131815032193183104_usize as u128;
_26.2 = _16.1 as f32;
_22.fld0.1 = !_11.1;
_20 = _4;
_22.fld0.2 = [_11.1,_11.1];
_16.4 = !_26.4;
_28.0 = _11.0;
_11.0 = _28.0;
_22.fld4 = [_16.3,_16.3,_16.3,_16.3,_16.3,_16.3,_16.3];
_30 = [_22.fld0.1,_22.fld0.1];
_22.fld5 = (_1,);
RET = _28.0 < _28.0;
_22.fld1 = _22.fld5.0;
_28 = (_11.0, _22.fld0.1, _11.2);
_11.0 = _22.fld0.0;
place!(Field::<[u128; 8]>(Variant(_8, 1), 0)) = [_26.4,_26.4,_26.4,_16.4,_26.4,_26.4,_16.4,_16.4];
_23 = [_11.0,_22.fld0.0,_22.fld0.0,_28.0];
_28.0 = _11.0;
Goto(bb6)
}
bb6 = {
_22.fld0.2 = [_11.1,_28.1];
_22.fld1 = _4;
_26 = _16;
_22.fld1 = [_16.0,_16.0,_26.0,_16.0,_26.0];
RET = _12 < _12;
_27 = [46143_u16,13243_u16,48926_u16,39_u16,38365_u16,15171_u16,42948_u16];
_36.0 = [_16.0,_26.0,_26.0,_26.0,_16.0];
Goto(bb7)
}
bb7 = {
Call(_42 = dump_var(7_usize, 11_usize, Move(_11), 6_usize, Move(_6), 13_usize, Move(_13), 12_usize, Move(_12)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_42 = dump_var(7_usize, 14_usize, Move(_14), 20_usize, Move(_20), 30_usize, Move(_30), 28_usize, Move(_28)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_42 = dump_var(7_usize, 36_usize, Move(_36), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: [i32; 5],mut _2: [i32; 5],mut _3: [i32; 5]) -> f64 {
mir! {
type RET = f64;
let _4: f32;
let _5: Adt54;
let _6: *const &'static *mut u16;
let _7: [u16; 7];
let _8: i64;
let _9: [u32; 2];
let _10: [i8; 7];
let _11: isize;
let _12: i8;
let _13: u128;
let _14: i64;
let _15: usize;
let _16: bool;
let _17: char;
let _18: [u128; 2];
let _19: char;
let _20: ();
let _21: ();
{
RET = 188725106072616245949448032705539354990_u128 as f64;
_3 = [1450745872_i32,(-1904929141_i32),636011065_i32,805672745_i32,(-69786008_i32)];
_3 = [899090038_i32,902042060_i32,(-944788316_i32),(-1806395158_i32),1798825426_i32];
_1 = [(-410801190_i32),(-1892076415_i32),1116782302_i32,122090156_i32,(-155616971_i32)];
_1 = _3;
RET = 16259060287546699282_usize as f64;
_1 = _3;
RET = 2210628193_u32 as f64;
_3 = [(-1951165069_i32),(-1793054577_i32),1339129525_i32,(-1818086460_i32),1032009928_i32];
_3 = _2;
RET = 146_u8 as f64;
_2 = _1;
_2 = _1;
_5.fld5 = (_1,);
_2 = [(-1097726236_i32),1587385489_i32,(-988667354_i32),(-1257142138_i32),746741691_i32];
_5.fld0.0 = '\u{78337}';
_5.fld2 = [3056927440_u32,539050160_u32];
Call(_5.fld1 = fn9(_5.fld0.0, _3, RET, _3, _1, _2, _1, _2, _3, _2, _5.fld0.0, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = [16828_u16,65043_u16,45452_u16,30979_u16,42819_u16,63948_u16,41840_u16];
_5.fld0.0 = '\u{e7e80}';
_5.fld0.2 = [3530710084_u32,111427646_u32];
_5.fld0.0 = '\u{99270}';
_8 = !(-7475021339443932665_i64);
_5.fld4 = [(-50_i8),(-94_i8),48_i8,112_i8,92_i8,101_i8,(-94_i8)];
_5.fld0 = ('\u{88594}', 1430766428_u32, _5.fld2);
_5.fld1 = [835248720_i32,(-1729683838_i32),437538354_i32,1103956770_i32,945117142_i32];
_4 = _5.fld0.1 as f32;
_5.fld5 = (_1,);
_8 = -6403611566221003540_i64;
_9 = [_5.fld0.1,_5.fld0.1];
_10 = [0_i8,(-118_i8),98_i8,13_i8,12_i8,95_i8,(-67_i8)];
_5.fld5 = (_1,);
_5.fld5.0 = _3;
_5.fld5 = (_2,);
_5.fld2 = _5.fld0.2;
_5.fld4 = _10;
_5.fld5.0 = _1;
Goto(bb2)
}
bb2 = {
_11 = (-64_isize);
_5.fld4 = [(-114_i8),(-58_i8),96_i8,(-114_i8),98_i8,(-40_i8),(-70_i8)];
_9 = _5.fld2;
_5.fld5.0 = [(-1410676423_i32),(-1421576834_i32),(-985051380_i32),(-1578662077_i32),347232794_i32];
_5.fld5 = (_5.fld1,);
_7 = [58_u16,20073_u16,25835_u16,9387_u16,22732_u16,23595_u16,45712_u16];
_9 = _5.fld0.2;
_5.fld0 = ('\u{85a1f}', 3677239902_u32, _9);
_5.fld1 = [(-1806644782_i32),883260427_i32,(-1454849356_i32),578635476_i32,2081356288_i32];
_7 = [43019_u16,41664_u16,45681_u16,51841_u16,34355_u16,40881_u16,52026_u16];
_2 = [1750481186_i32,(-1088564829_i32),460222234_i32,876439927_i32,148904707_i32];
_1 = [(-740848484_i32),(-934679515_i32),1437312693_i32,1555673258_i32,(-355111730_i32)];
_5.fld0.2 = _9;
_7 = [52529_u16,51966_u16,14610_u16,48392_u16,32575_u16,26107_u16,54873_u16];
_4 = 6407503822845784034_u64 as f32;
_1 = [(-117054033_i32),(-625206540_i32),1455838684_i32,2003821067_i32,(-2085375317_i32)];
_7 = [24778_u16,44974_u16,61585_u16,61473_u16,64832_u16,1121_u16,55532_u16];
_12 = (-412519269_i32) as i8;
_9 = _5.fld0.2;
_12 = (-107_i8) << _8;
_9 = _5.fld0.2;
match _5.fld0.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3677239902 => bb7,
_ => bb6
}
}
bb3 = {
_7 = [16828_u16,65043_u16,45452_u16,30979_u16,42819_u16,63948_u16,41840_u16];
_5.fld0.0 = '\u{e7e80}';
_5.fld0.2 = [3530710084_u32,111427646_u32];
_5.fld0.0 = '\u{99270}';
_8 = !(-7475021339443932665_i64);
_5.fld4 = [(-50_i8),(-94_i8),48_i8,112_i8,92_i8,101_i8,(-94_i8)];
_5.fld0 = ('\u{88594}', 1430766428_u32, _5.fld2);
_5.fld1 = [835248720_i32,(-1729683838_i32),437538354_i32,1103956770_i32,945117142_i32];
_4 = _5.fld0.1 as f32;
_5.fld5 = (_1,);
_8 = -6403611566221003540_i64;
_9 = [_5.fld0.1,_5.fld0.1];
_10 = [0_i8,(-118_i8),98_i8,13_i8,12_i8,95_i8,(-67_i8)];
_5.fld5 = (_1,);
_5.fld5.0 = _3;
_5.fld5 = (_2,);
_5.fld2 = _5.fld0.2;
_5.fld4 = _10;
_5.fld5.0 = _1;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = 490649938_i32 as f64;
_5.fld5 = (_5.fld1,);
_5.fld0 = ('\u{31459}', 853853424_u32, _9);
_3 = [(-839875502_i32),(-121960841_i32),(-81356872_i32),(-689861190_i32),(-1352812469_i32)];
match _5.fld0.1 {
0 => bb2,
1 => bb8,
2 => bb9,
3 => bb10,
853853424 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11 = (-64_isize);
_5.fld4 = [(-114_i8),(-58_i8),96_i8,(-114_i8),98_i8,(-40_i8),(-70_i8)];
_9 = _5.fld2;
_5.fld5.0 = [(-1410676423_i32),(-1421576834_i32),(-985051380_i32),(-1578662077_i32),347232794_i32];
_5.fld5 = (_5.fld1,);
_7 = [58_u16,20073_u16,25835_u16,9387_u16,22732_u16,23595_u16,45712_u16];
_9 = _5.fld0.2;
_5.fld0 = ('\u{85a1f}', 3677239902_u32, _9);
_5.fld1 = [(-1806644782_i32),883260427_i32,(-1454849356_i32),578635476_i32,2081356288_i32];
_7 = [43019_u16,41664_u16,45681_u16,51841_u16,34355_u16,40881_u16,52026_u16];
_2 = [1750481186_i32,(-1088564829_i32),460222234_i32,876439927_i32,148904707_i32];
_1 = [(-740848484_i32),(-934679515_i32),1437312693_i32,1555673258_i32,(-355111730_i32)];
_5.fld0.2 = _9;
_7 = [52529_u16,51966_u16,14610_u16,48392_u16,32575_u16,26107_u16,54873_u16];
_4 = 6407503822845784034_u64 as f32;
_1 = [(-117054033_i32),(-625206540_i32),1455838684_i32,2003821067_i32,(-2085375317_i32)];
_7 = [24778_u16,44974_u16,61585_u16,61473_u16,64832_u16,1121_u16,55532_u16];
_12 = (-412519269_i32) as i8;
_9 = _5.fld0.2;
_12 = (-107_i8) << _8;
_9 = _5.fld0.2;
match _5.fld0.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3677239902 => bb7,
_ => bb6
}
}
bb11 = {
_7 = [16828_u16,65043_u16,45452_u16,30979_u16,42819_u16,63948_u16,41840_u16];
_5.fld0.0 = '\u{e7e80}';
_5.fld0.2 = [3530710084_u32,111427646_u32];
_5.fld0.0 = '\u{99270}';
_8 = !(-7475021339443932665_i64);
_5.fld4 = [(-50_i8),(-94_i8),48_i8,112_i8,92_i8,101_i8,(-94_i8)];
_5.fld0 = ('\u{88594}', 1430766428_u32, _5.fld2);
_5.fld1 = [835248720_i32,(-1729683838_i32),437538354_i32,1103956770_i32,945117142_i32];
_4 = _5.fld0.1 as f32;
_5.fld5 = (_1,);
_8 = -6403611566221003540_i64;
_9 = [_5.fld0.1,_5.fld0.1];
_10 = [0_i8,(-118_i8),98_i8,13_i8,12_i8,95_i8,(-67_i8)];
_5.fld5 = (_1,);
_5.fld5.0 = _3;
_5.fld5 = (_2,);
_5.fld2 = _5.fld0.2;
_5.fld4 = _10;
_5.fld5.0 = _1;
Goto(bb2)
}
bb12 = {
_5.fld5.0 = _1;
_13 = !234672903867608011591821565267637772186_u128;
_12 = 10904257937198323013_usize as i8;
_2 = _3;
_10 = [_12,_12,_12,_12,_12,_12,_12];
_2 = [(-1641468013_i32),216345792_i32,1310164859_i32,846560638_i32,(-577892048_i32)];
RET = 5402498654361562535_usize as f64;
_5.fld0 = ('\u{43cad}', 2433538350_u32, _5.fld2);
_5.fld5.0 = [(-1198899245_i32),599268385_i32,716667926_i32,1955167101_i32,(-1283000030_i32)];
_5.fld0.1 = _12 as u32;
_1 = [(-493137302_i32),796979725_i32,(-1355509782_i32),388311924_i32,674720491_i32];
_3 = [538657807_i32,937734070_i32,1680576215_i32,(-128326324_i32),1708086207_i32];
_2 = [(-201277449_i32),(-1218278266_i32),(-135108919_i32),(-225752449_i32),899738553_i32];
_5.fld5.0 = [(-1248337072_i32),838435299_i32,169071339_i32,(-1732137209_i32),1686350237_i32];
_5.fld5.0 = [326643846_i32,(-1863987923_i32),(-849435272_i32),1652497950_i32,1862194553_i32];
Goto(bb13)
}
bb13 = {
_8 = -(-816592036160403490_i64);
_14 = _8 ^ _8;
_5.fld0.2 = _5.fld2;
_5.fld1 = [637935169_i32,202530436_i32,381824378_i32,(-463798527_i32),(-938554993_i32)];
_5.fld4 = [_12,_12,_12,_12,_12,_12,_12];
_7 = [34434_u16,11547_u16,35786_u16,30508_u16,42648_u16,54997_u16,26394_u16];
_10 = [_12,_12,_12,_12,_12,_12,_12];
_5.fld5 = (_5.fld1,);
match _11 {
0 => bb14,
1 => bb15,
340282366920938463463374607431768211392 => bb17,
_ => bb16
}
}
bb14 = {
_11 = (-64_isize);
_5.fld4 = [(-114_i8),(-58_i8),96_i8,(-114_i8),98_i8,(-40_i8),(-70_i8)];
_9 = _5.fld2;
_5.fld5.0 = [(-1410676423_i32),(-1421576834_i32),(-985051380_i32),(-1578662077_i32),347232794_i32];
_5.fld5 = (_5.fld1,);
_7 = [58_u16,20073_u16,25835_u16,9387_u16,22732_u16,23595_u16,45712_u16];
_9 = _5.fld0.2;
_5.fld0 = ('\u{85a1f}', 3677239902_u32, _9);
_5.fld1 = [(-1806644782_i32),883260427_i32,(-1454849356_i32),578635476_i32,2081356288_i32];
_7 = [43019_u16,41664_u16,45681_u16,51841_u16,34355_u16,40881_u16,52026_u16];
_2 = [1750481186_i32,(-1088564829_i32),460222234_i32,876439927_i32,148904707_i32];
_1 = [(-740848484_i32),(-934679515_i32),1437312693_i32,1555673258_i32,(-355111730_i32)];
_5.fld0.2 = _9;
_7 = [52529_u16,51966_u16,14610_u16,48392_u16,32575_u16,26107_u16,54873_u16];
_4 = 6407503822845784034_u64 as f32;
_1 = [(-117054033_i32),(-625206540_i32),1455838684_i32,2003821067_i32,(-2085375317_i32)];
_7 = [24778_u16,44974_u16,61585_u16,61473_u16,64832_u16,1121_u16,55532_u16];
_12 = (-412519269_i32) as i8;
_9 = _5.fld0.2;
_12 = (-107_i8) << _8;
_9 = _5.fld0.2;
match _5.fld0.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3677239902 => bb7,
_ => bb6
}
}
bb15 = {
_7 = [16828_u16,65043_u16,45452_u16,30979_u16,42819_u16,63948_u16,41840_u16];
_5.fld0.0 = '\u{e7e80}';
_5.fld0.2 = [3530710084_u32,111427646_u32];
_5.fld0.0 = '\u{99270}';
_8 = !(-7475021339443932665_i64);
_5.fld4 = [(-50_i8),(-94_i8),48_i8,112_i8,92_i8,101_i8,(-94_i8)];
_5.fld0 = ('\u{88594}', 1430766428_u32, _5.fld2);
_5.fld1 = [835248720_i32,(-1729683838_i32),437538354_i32,1103956770_i32,945117142_i32];
_4 = _5.fld0.1 as f32;
_5.fld5 = (_1,);
_8 = -6403611566221003540_i64;
_9 = [_5.fld0.1,_5.fld0.1];
_10 = [0_i8,(-118_i8),98_i8,13_i8,12_i8,95_i8,(-67_i8)];
_5.fld5 = (_1,);
_5.fld5.0 = _3;
_5.fld5 = (_2,);
_5.fld2 = _5.fld0.2;
_5.fld4 = _10;
_5.fld5.0 = _1;
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
_13 = 101600566800839439285536464358841111175_u128;
_17 = _5.fld0.0;
_8 = _14;
_5.fld0.0 = _17;
_4 = _5.fld0.1 as f32;
_5.fld0 = (_17, 3667452191_u32, _9);
_5.fld0.1 = 284605567_u32;
_5.fld4 = [_12,_12,_12,_12,_12,_12,_12];
RET = 10660340351599012527_usize as f64;
_13 = 250663438710720070291655725193636636608_u128;
_5.fld5.0 = _2;
RET = 17856737134302175688_usize as f64;
_9 = [_5.fld0.1,_5.fld0.1];
_10 = [_12,_12,_12,_12,_12,_12,_12];
Goto(bb18)
}
bb18 = {
Call(_20 = dump_var(8_usize, 13_usize, Move(_13), 11_usize, Move(_11), 17_usize, Move(_17), 8_usize, Move(_8)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_20 = dump_var(8_usize, 7_usize, Move(_7), 1_usize, Move(_1), 21_usize, _21, 21_usize, _21), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: char,mut _2: [i32; 5],mut _3: f64,mut _4: [i32; 5],mut _5: [i32; 5],mut _6: [i32; 5],mut _7: [i32; 5],mut _8: [i32; 5],mut _9: [i32; 5],mut _10: [i32; 5],mut _11: char,mut _12: [i32; 5]) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _13: isize;
let _14: [i8; 7];
let _15: [i32; 5];
let _16: isize;
let _17: [i16; 4];
let _18: (u8, u32);
let _19: *mut u16;
let _20: char;
let _21: char;
let _22: isize;
let _23: i8;
let _24: f32;
let _25: Adt57;
let _26: i128;
let _27: bool;
let _28: [i16; 4];
let _29: *const u32;
let _30: char;
let _31: i64;
let _32: [u16; 4];
let _33: Adt44;
let _34: Adt47;
let _35: [char; 4];
let _36: *const i128;
let _37: i32;
let _38: u16;
let _39: u64;
let _40: char;
let _41: i8;
let _42: char;
let _43: f64;
let _44: isize;
let _45: isize;
let _46: [u32; 2];
let _47: Adt43;
let _48: [char; 7];
let _49: [i8; 7];
let _50: ();
let _51: ();
{
_1 = _11;
_8 = [(-994463632_i32),(-1422206608_i32),1279566909_i32,726472261_i32,(-360575125_i32)];
_10 = _2;
_9 = _2;
_11 = _1;
_5 = [359176497_i32,(-1976418959_i32),285503416_i32,(-2026647118_i32),1843420677_i32];
_3 = 21580_i16 as f64;
RET = [1684922965_i32,2085563614_i32,(-2093128003_i32),187328720_i32,258667497_i32];
_1 = _11;
_4 = _10;
_1 = _11;
_15 = [1433546076_i32,1688297022_i32,130641676_i32,701049857_i32,1883531663_i32];
_1 = _11;
_8 = _9;
RET = _10;
_9 = [(-209012333_i32),(-1313926936_i32),(-377086603_i32),26118234_i32,1997966052_i32];
_15 = _4;
_15 = [(-1983048605_i32),(-753615660_i32),1319361031_i32,(-154748323_i32),9150089_i32];
_4 = [(-1419328216_i32),841782704_i32,729989082_i32,(-1280733974_i32),1539181108_i32];
_2 = [414492085_i32,(-1595410787_i32),151272958_i32,1525178014_i32,(-681434090_i32)];
_14 = [(-65_i8),73_i8,(-68_i8),(-55_i8),79_i8,(-51_i8),(-103_i8)];
_16 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_13 = _16 << _16;
_9 = _12;
RET = [(-1164571814_i32),1773421907_i32,324051614_i32,2125904858_i32,2070940097_i32];
_8 = RET;
Goto(bb1)
}
bb1 = {
_10 = _2;
_13 = _16;
_9 = [(-845922972_i32),(-196108931_i32),(-1779612997_i32),1993194118_i32,1232073235_i32];
_4 = _5;
_15 = [(-1526435710_i32),144530998_i32,(-21833877_i32),(-356638120_i32),(-1787862176_i32)];
RET = _2;
_18.0 = (-6866694839866510814_i64) as u8;
_11 = _1;
_11 = _1;
_18 = (169_u8, 3370262676_u32);
match _18.0 {
169 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_15 = [1925135578_i32,(-2110811865_i32),(-771395368_i32),(-1712714933_i32),1238527677_i32];
_18 = (187_u8, 3287307723_u32);
_2 = _4;
_13 = _18.0 as isize;
_18 = (56_u8, 3425823566_u32);
_7 = [328247593_i32,(-2089246735_i32),(-405286446_i32),1372154915_i32,488677287_i32];
_18.0 = 91_u8;
_21 = _11;
_18.1 = !1007147328_u32;
_22 = -_16;
_16 = -_13;
_9 = [(-459820472_i32),1708390794_i32,(-102739521_i32),1063849266_i32,1451119724_i32];
_17 = [17269_i16,3472_i16,(-18304_i16),28387_i16];
_4 = [654008442_i32,593284776_i32,(-451422849_i32),(-2033810143_i32),1012599117_i32];
_12 = [5137712_i32,(-162621881_i32),1946038980_i32,(-116500149_i32),14308809_i32];
_18.1 = 3883284291_u32;
_17 = [1445_i16,20462_i16,(-22814_i16),(-22228_i16)];
Call(_24 = fn10(_8, _4, _15, _22), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_2 = _12;
_17 = [(-22610_i16),(-12006_i16),16557_i16,(-24572_i16)];
_23 = (-88_i8);
_3 = 11196145656774662082_usize as f64;
_23 = 55_i8 << _13;
_6 = [(-1498419106_i32),744793953_i32,148019950_i32,544327111_i32,(-1213040695_i32)];
_18.0 = 252_u8 & 45_u8;
_24 = _18.1 as f32;
_26 = (-114796008308861378181151713325577343132_i128) - (-136603174028390949073656286035477105273_i128);
_26 = 922903107863220861720427847905788287_i128;
_15 = _10;
_27 = true;
_7 = [1453053729_i32,1737196443_i32,(-1372719402_i32),1392991218_i32,1733988089_i32];
_12 = [917526767_i32,(-106656651_i32),(-600370253_i32),1123145956_i32,1932067719_i32];
_27 = false;
match _18.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
3883284291 => bb7,
_ => bb6
}
}
bb5 = {
_15 = [1925135578_i32,(-2110811865_i32),(-771395368_i32),(-1712714933_i32),1238527677_i32];
_18 = (187_u8, 3287307723_u32);
_2 = _4;
_13 = _18.0 as isize;
_18 = (56_u8, 3425823566_u32);
_7 = [328247593_i32,(-2089246735_i32),(-405286446_i32),1372154915_i32,488677287_i32];
_18.0 = 91_u8;
_21 = _11;
_18.1 = !1007147328_u32;
_22 = -_16;
_16 = -_13;
_9 = [(-459820472_i32),1708390794_i32,(-102739521_i32),1063849266_i32,1451119724_i32];
_17 = [17269_i16,3472_i16,(-18304_i16),28387_i16];
_4 = [654008442_i32,593284776_i32,(-451422849_i32),(-2033810143_i32),1012599117_i32];
_12 = [5137712_i32,(-162621881_i32),1946038980_i32,(-116500149_i32),14308809_i32];
_18.1 = 3883284291_u32;
_17 = [1445_i16,20462_i16,(-22814_i16),(-22228_i16)];
Call(_24 = fn10(_8, _4, _15, _22), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_10 = [(-1290106591_i32),(-1640792844_i32),876896915_i32,1538625474_i32,(-1959387991_i32)];
_6 = _10;
_10 = [(-875071213_i32),1270044591_i32,(-1194250763_i32),(-1203871571_i32),(-1863211010_i32)];
_8 = _10;
_12 = _5;
_26 = 59114316378973076246662782944502201113_i128 + 137096620227516686226810377877143445801_i128;
_24 = _26 as f32;
_15 = _4;
_4 = _10;
_12 = [(-856509275_i32),1954891240_i32,(-886760123_i32),1219931353_i32,(-1416028786_i32)];
_2 = [2078581168_i32,161452044_i32,1949125955_i32,(-1913172726_i32),1411534833_i32];
_31 = -(-7438213591969243575_i64);
_30 = _1;
_27 = true ^ true;
_16 = _13;
Goto(bb8)
}
bb8 = {
_31 = !6688670482291733238_i64;
_1 = _30;
_26 = -(-111275927375470683331301403276286778181_i128);
_17 = [(-28752_i16),14512_i16,(-29432_i16),(-30766_i16)];
_20 = _1;
_26 = 33859446275649214901084966098156511043_i128;
Goto(bb9)
}
bb9 = {
_20 = _30;
_23 = 86_i8;
_32 = [7668_u16,14802_u16,58091_u16,47211_u16];
_2 = [1550111670_i32,1550454584_i32,(-307283939_i32),(-1232343135_i32),(-1845993205_i32)];
_30 = _20;
_22 = !_16;
_18.1 = 436189100_u32 ^ 3002236441_u32;
_3 = 6679225681564786630_u64 as f64;
_3 = 11366_u16 as f64;
_15 = [170999643_i32,1977623745_i32,(-124550046_i32),135071958_i32,824553801_i32];
_21 = _30;
_30 = _11;
_23 = (-89_i8) ^ 90_i8;
_28 = [(-22572_i16),(-2904_i16),(-8057_i16),(-15189_i16)];
_29 = core::ptr::addr_of!(_18.1);
_13 = _16;
_16 = _22;
_16 = -_22;
_5 = RET;
_32 = [46340_u16,4233_u16,15039_u16,24269_u16];
_10 = [1433879665_i32,1496875127_i32,412598543_i32,1842933602_i32,1896778877_i32];
Call(_7 = core::intrinsics::transmute(_15), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_23 = _26 as i8;
_28 = _17;
_10 = _6;
_35 = [_1,_30,_20,_20];
_1 = _30;
_18.0 = !28_u8;
_31 = (-1862013277_i32) as i64;
_18.0 = 134_u8;
_1 = _21;
_8 = [(-955731514_i32),423989647_i32,296421042_i32,769419332_i32,(-2004373199_i32)];
RET = _12;
_41 = _23 << _23;
_16 = !_13;
_32 = [13566_u16,13339_u16,43209_u16,23122_u16];
_12 = _2;
_24 = _26 as f32;
RET = [904288584_i32,691006570_i32,(-1546128534_i32),1383210659_i32,1036664927_i32];
_29 = core::ptr::addr_of!((*_29));
_16 = -_22;
Call(_17 = core::intrinsics::transmute(_22), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_40 = _20;
_6 = [1758269733_i32,352434075_i32,(-1874765803_i32),837499942_i32,1555121979_i32];
_38 = !6537_u16;
_27 = _23 >= _23;
_18.1 = !3486026677_u32;
_20 = _11;
_26 = _31 as i128;
_17 = [(-11741_i16),(-12795_i16),(-20043_i16),(-8499_i16)];
_42 = _20;
_24 = _26 as f32;
_4 = [781433131_i32,(-1428420460_i32),932104301_i32,47730665_i32,119473348_i32];
_15 = [(-412880983_i32),(-847843095_i32),1943104418_i32,364433580_i32,1018691837_i32];
_38 = _26 as u16;
_32 = [_38,_38,_38,_38];
match _18.0 {
0 => bb6,
134 => bb13,
_ => bb12
}
}
bb12 = {
_20 = _30;
_23 = 86_i8;
_32 = [7668_u16,14802_u16,58091_u16,47211_u16];
_2 = [1550111670_i32,1550454584_i32,(-307283939_i32),(-1232343135_i32),(-1845993205_i32)];
_30 = _20;
_22 = !_16;
_18.1 = 436189100_u32 ^ 3002236441_u32;
_3 = 6679225681564786630_u64 as f64;
_3 = 11366_u16 as f64;
_15 = [170999643_i32,1977623745_i32,(-124550046_i32),135071958_i32,824553801_i32];
_21 = _30;
_30 = _11;
_23 = (-89_i8) ^ 90_i8;
_28 = [(-22572_i16),(-2904_i16),(-8057_i16),(-15189_i16)];
_29 = core::ptr::addr_of!(_18.1);
_13 = _16;
_16 = _22;
_16 = -_22;
_5 = RET;
_32 = [46340_u16,4233_u16,15039_u16,24269_u16];
_10 = [1433879665_i32,1496875127_i32,412598543_i32,1842933602_i32,1896778877_i32];
Call(_7 = core::intrinsics::transmute(_15), ReturnTo(bb10), UnwindUnreachable())
}
bb13 = {
_16 = _22 << _31;
_17 = [25872_i16,25875_i16,(-7198_i16),(-3717_i16)];
_37 = 1272801644_i32 ^ (-1035719632_i32);
_13 = _16 << (*_29);
_42 = _21;
RET = _6;
_44 = _13 >> _18.0;
_36 = core::ptr::addr_of!(_26);
_20 = _21;
_18 = (63_u8, 1809395627_u32);
_31 = _30 as i64;
_18 = (160_u8, 1048295798_u32);
_41 = _23;
_11 = _21;
RET = [_37,_37,_37,_37,_37];
_30 = _42;
_16 = 89091563670480167238240869193432557968_u128 as isize;
_43 = _3;
_31 = 2033799276981092473_i64;
_39 = 3582414102299245631_u64 ^ 895751407780262300_u64;
_24 = _41 as f32;
_46 = [(*_29),_18.1];
_6 = [_37,_37,_37,_37,_37];
_18.1 = 9467019_u32;
Goto(bb14)
}
bb14 = {
_30 = _1;
_49 = _14;
_43 = -_3;
_39 = !8149704045608431598_u64;
Goto(bb15)
}
bb15 = {
Call(_50 = dump_var(9_usize, 17_usize, Move(_17), 46_usize, Move(_46), 30_usize, Move(_30), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_50 = dump_var(9_usize, 15_usize, Move(_15), 44_usize, Move(_44), 11_usize, Move(_11), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_50 = dump_var(9_usize, 23_usize, Move(_23), 32_usize, Move(_32), 13_usize, Move(_13), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_50 = dump_var(9_usize, 27_usize, Move(_27), 35_usize, Move(_35), 18_usize, Move(_18), 37_usize, Move(_37)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_50 = dump_var(9_usize, 2_usize, Move(_2), 40_usize, Move(_40), 51_usize, _51, 51_usize, _51), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: [i32; 5],mut _2: [i32; 5],mut _3: [i32; 5],mut _4: isize) -> f32 {
mir! {
type RET = f32;
let _5: *const u32;
let _6: bool;
let _7: Adt55;
let _8: [char; 4];
let _9: (u8, u32);
let _10: f64;
let _11: [char; 8];
let _12: *const &'static *mut u16;
let _13: i32;
let _14: Adt54;
let _15: u16;
let _16: bool;
let _17: ();
let _18: ();
{
RET = 182_u8 as f32;
_1 = _2;
RET = (-9863_i16) as f32;
RET = (-5363139829933375394_i64) as f32;
_4 = -(-78_isize);
_1 = [2079664742_i32,(-471857455_i32),(-1078286622_i32),(-1212861082_i32),(-1013561322_i32)];
_1 = [(-1843523245_i32),(-1420158005_i32),(-1931858755_i32),1854273474_i32,2004661014_i32];
_4 = !(-75_isize);
_3 = _1;
RET = 38235622575015607926723529062143601315_i128 as f32;
RET = 5228557010420151865_usize as f32;
_1 = _3;
RET = 221_u8 as f32;
_2 = [(-56276212_i32),(-1021337024_i32),1867749698_i32,(-1626078007_i32),(-2092503732_i32)];
_2 = _3;
RET = 225684214723861811260764153988501871645_u128 as f32;
RET = 15091705576632161454_u64 as f32;
_8 = ['\u{17942}','\u{46191}','\u{61d44}','\u{107b7b}'];
_1 = [(-407093309_i32),1107011678_i32,1782757750_i32,1036675719_i32,(-639612278_i32)];
RET = (-153642806871600862831702730497156047614_i128) as f32;
Call(_6 = fn11(_1, _8, _8, _2, _3, _4, _2, _3, _8, _3, _2, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = core::ptr::addr_of!(_9.1);
RET = 3118_i16 as f32;
_2 = [760987185_i32,836711578_i32,1188312565_i32,(-377761509_i32),566780555_i32];
_10 = 5_i8 as f64;
RET = 6416031333627035784_i64 as f32;
_1 = _3;
_6 = true;
_1 = [(-119480192_i32),(-1398898689_i32),1201170205_i32,1294860109_i32,1834693877_i32];
_9.1 = !836844188_u32;
_9.0 = 198_u8;
_6 = _9.0 == _9.0;
_11 = ['\u{70b0c}','\u{4bd1e}','\u{9d429}','\u{10c027}','\u{b9bbe}','\u{d7317}','\u{106987}','\u{4af21}'];
_4 = _10 as isize;
_1 = _2;
_11 = ['\u{d4e0e}','\u{8cd79}','\u{1e2e0}','\u{5dac4}','\u{a6e87}','\u{b61ed}','\u{3783e}','\u{7e652}'];
_9 = (55_u8, 1924367807_u32);
_5 = core::ptr::addr_of!((*_5));
match (*_5) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
1924367807 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = 1110384441789439417_i64 as f32;
_9.0 = 26_u8 | 217_u8;
_6 = _4 > _4;
_3 = [1806006005_i32,2102987231_i32,2085367324_i32,(-1853157169_i32),132766563_i32];
RET = (*_5) as f32;
RET = 50951382168197414745615546232644584389_i128 as f32;
_4 = (-9223372036854775808_isize);
RET = _10 as f32;
_10 = RET as f64;
_4 = -58_isize;
_1 = _2;
RET = 11164_i16 as f32;
_9.1 = !1146169912_u32;
RET = 4_usize as f32;
RET = _9.0 as f32;
_13 = 299081583_i32 + 106903665_i32;
_9 = (228_u8, 1568874988_u32);
_3 = [_13,_13,_13,_13,_13];
_9.0 = (*_5) as u8;
_1 = [_13,_13,_13,_13,_13];
RET = 3095_i16 as f32;
_9.0 = 11_u8;
_2 = [_13,_13,_13,_13,_13];
_2 = [_13,_13,_13,_13,_13];
_14.fld2 = [(*_5),(*_5)];
match _9.0 {
0 => bb3,
1 => bb5,
2 => bb10,
3 => bb11,
4 => bb12,
11 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_9.1 = !3890335774_u32;
_9 = (109_u8, 2904372516_u32);
_14.fld4 = [110_i8,53_i8,(-66_i8),(-95_i8),(-48_i8),100_i8,(-65_i8)];
_14.fld4 = [(-77_i8),(-85_i8),(-118_i8),123_i8,(-45_i8),14_i8,(-9_i8)];
_9 = (127_u8, 827434327_u32);
_2 = [_13,_13,_13,_13,_13];
_5 = core::ptr::addr_of!(_14.fld0.1);
_4 = 9223372036854775807_isize;
_16 = !_6;
Goto(bb15)
}
bb15 = {
Call(_17 = dump_var(10_usize, 13_usize, Move(_13), 3_usize, Move(_3), 9_usize, Move(_9), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_17 = dump_var(10_usize, 1_usize, Move(_1), 18_usize, _18, 18_usize, _18, 18_usize, _18), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [i32; 5],mut _2: [char; 4],mut _3: [char; 4],mut _4: [i32; 5],mut _5: [i32; 5],mut _6: isize,mut _7: [i32; 5],mut _8: [i32; 5],mut _9: [char; 4],mut _10: [i32; 5],mut _11: [i32; 5],mut _12: [i32; 5]) -> bool {
mir! {
type RET = bool;
let _13: u64;
let _14: f32;
let _15: [u16; 4];
let _16: bool;
let _17: i128;
let _18: Adt47;
let _19: u64;
let _20: bool;
let _21: [char; 8];
let _22: char;
let _23: char;
let _24: i16;
let _25: (char, u32, [u32; 2]);
let _26: [u128; 2];
let _27: isize;
let _28: i16;
let _29: [u128; 8];
let _30: [i8; 7];
let _31: [char; 4];
let _32: Adt44;
let _33: *mut u16;
let _34: [u32; 2];
let _35: isize;
let _36: ();
let _37: ();
{
_6 = 10023032424531350354180939192197239613_i128 as isize;
Goto(bb1)
}
bb1 = {
_1 = _11;
_3 = ['\u{19d7d}','\u{3dbe2}','\u{73dbf}','\u{a13cd}'];
RET = !false;
_11 = [552487016_i32,953905590_i32,(-340779244_i32),940648468_i32,1097248285_i32];
RET = _6 < _6;
_6 = 53_isize;
_1 = [626930951_i32,(-1044278147_i32),2123064236_i32,(-1488742934_i32),977626550_i32];
_10 = _4;
_3 = _9;
_4 = _12;
_14 = _6 as f32;
_9 = _2;
_7 = [1705960915_i32,(-1120268505_i32),(-388699782_i32),(-1545308236_i32),937912890_i32];
_4 = _1;
_15 = [64752_u16,58601_u16,17150_u16,9179_u16];
Call(RET = fn12(_3, _10, _7, _9, _1, _4, _12, _8, _12, _4, _6, _12, _6, _9, _2, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5 = [(-1487532135_i32),(-1842300863_i32),(-691646981_i32),2054362838_i32,(-1137149363_i32)];
_6 = 9223372036854775807_isize;
_7 = [1534023232_i32,(-321237304_i32),1442775995_i32,(-951040875_i32),(-518117633_i32)];
_5 = _4;
_14 = (-925563196_i32) as f32;
_16 = _14 > _14;
_12 = [(-2141023816_i32),773104661_i32,681964471_i32,943705765_i32,(-443283063_i32)];
_12 = [(-1773096234_i32),2079405446_i32,1063587004_i32,497712564_i32,884944683_i32];
_2 = ['\u{88c4e}','\u{6ece9}','\u{c3de5}','\u{17178}'];
_10 = [553503985_i32,(-1999019179_i32),1318428758_i32,1674142997_i32,(-1743746249_i32)];
_17 = (-25493781992549579570718463880127748724_i128);
_13 = 96_u8 as u64;
RET = _13 < _13;
_9 = ['\u{131be}','\u{826ff}','\u{eab5a}','\u{dfba2}'];
_7 = [1794281750_i32,(-1292678096_i32),(-275909843_i32),1933462416_i32,1181275261_i32];
_12 = _5;
_1 = _8;
_14 = 6510663899533029135_i64 as f32;
_11 = _8;
_14 = _6 as f32;
_15 = [61255_u16,24524_u16,3460_u16,52939_u16];
_11 = [2104310077_i32,458192985_i32,(-1299556957_i32),1950459164_i32,(-1540782802_i32)];
match _17 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
314788584928388883892656143551640462732 => bb9,
_ => bb8
}
}
bb3 = {
_1 = _11;
_3 = ['\u{19d7d}','\u{3dbe2}','\u{73dbf}','\u{a13cd}'];
RET = !false;
_11 = [552487016_i32,953905590_i32,(-340779244_i32),940648468_i32,1097248285_i32];
RET = _6 < _6;
_6 = 53_isize;
_1 = [626930951_i32,(-1044278147_i32),2123064236_i32,(-1488742934_i32),977626550_i32];
_10 = _4;
_3 = _9;
_4 = _12;
_14 = _6 as f32;
_9 = _2;
_7 = [1705960915_i32,(-1120268505_i32),(-388699782_i32),(-1545308236_i32),937912890_i32];
_4 = _1;
_15 = [64752_u16,58601_u16,17150_u16,9179_u16];
Call(RET = fn12(_3, _10, _7, _9, _1, _4, _12, _8, _12, _4, _6, _12, _6, _9, _2, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_21 = ['\u{c1813}','\u{23c10}','\u{31c70}','\u{99453}','\u{f670d}','\u{f40b2}','\u{a7e96}','\u{4e7cf}'];
_17 = 16810040920901477619527993789000478906_i128;
_20 = !RET;
_15 = [34877_u16,96_u16,27845_u16,29788_u16];
_1 = [(-1069716385_i32),(-1851168709_i32),352035616_i32,1571288753_i32,(-173212260_i32)];
_1 = [(-1911394691_i32),(-471046840_i32),(-1756948373_i32),602063889_i32,1588296492_i32];
_6 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_4 = [1924401290_i32,(-59382277_i32),(-766748017_i32),(-830597104_i32),1744473105_i32];
_22 = '\u{aab09}';
_24 = _14 as i16;
_22 = '\u{f02ba}';
Goto(bb10)
}
bb10 = {
_24 = 17789170940332197444_usize as i16;
_25.0 = _22;
_25.2 = [3622287342_u32,2222933389_u32];
_2 = _9;
_1 = [2144750483_i32,(-50484173_i32),722145351_i32,(-104338509_i32),365794666_i32];
RET = _16;
_15 = [32213_u16,47102_u16,5843_u16,46592_u16];
_21 = [_22,_22,_25.0,_22,_25.0,_22,_25.0,_22];
_20 = !RET;
_19 = !_13;
_8 = [(-1138635850_i32),1145578408_i32,475031912_i32,(-871624868_i32),184181525_i32];
_11 = [(-1773106503_i32),739945193_i32,(-1146761948_i32),2004315849_i32,(-1102689981_i32)];
_12 = [(-56405072_i32),(-994783263_i32),(-1372527600_i32),1779383589_i32,1149820220_i32];
_20 = _16;
_25.0 = _22;
_5 = [(-1756601926_i32),486642462_i32,(-91345059_i32),966960279_i32,1256450539_i32];
_13 = _19 << _17;
_26 = [31696841083398115080779778373484778962_u128,223181284435724782947934976869379674768_u128];
_27 = _6;
_25.2 = [2149417433_u32,3286302230_u32];
_27 = -_6;
_15 = [58280_u16,35667_u16,9577_u16,5721_u16];
_6 = _24 as isize;
match _17 {
16810040920901477619527993789000478906 => bb11,
_ => bb3
}
}
bb11 = {
_9 = _3;
_24 = _19 as i16;
_9 = [_22,_25.0,_22,_25.0];
_23 = _25.0;
_5 = [(-1981775536_i32),8105092_i32,111786021_i32,(-774719339_i32),1462817111_i32];
_22 = _23;
_29 = [259868972904015924261413086103946227516_u128,164834983750647552376956014794734452132_u128,239735354301600687552782334904602254698_u128,329073652523212665495494197761405314898_u128,176766150321538145754005047751091181710_u128,7543185463175971624353041140519328783_u128,200755409378676119458786129935412688622_u128,332946253385978950410311398091476957906_u128];
_25.1 = 2143992489_u32 & 2562805361_u32;
_27 = _6 << _13;
_4 = [(-983063657_i32),1957455362_i32,(-953228064_i32),532971050_i32,(-1025393649_i32)];
_17 = -101351129500185168307437515413614270171_i128;
_22 = _25.0;
_8 = [(-1658597015_i32),57836752_i32,(-2101981602_i32),(-1712329377_i32),(-2000080134_i32)];
_10 = [1468053739_i32,(-1867398666_i32),(-807145149_i32),1528993640_i32,(-1446810942_i32)];
_17 = (-89202910613116824360060876316456129572_i128) ^ (-74469961856951020440205682330851222234_i128);
_5 = [(-56041066_i32),(-1483534992_i32),69989629_i32,1697497527_i32,(-606110988_i32)];
_21 = [_23,_25.0,_23,_23,_23,_25.0,_23,_25.0];
_29 = [256703139591971645462407791570095870514_u128,287392441006282289797010755355811948567_u128,58150680825820756578451400546512132742_u128,249630987852729441117440317008315019857_u128,119824850403582294701594754444268125744_u128,281191140220370001421786390932526386649_u128,172969138814154138076415771432101117484_u128,225999331985141555231809497818318788365_u128];
_30 = [118_i8,79_i8,70_i8,19_i8,(-98_i8),47_i8,78_i8];
RET = _20 & _20;
Call(_25 = fn13(_2, _11, _19, _5, _30, _10, _3, _4, _15, _4, _12), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20 = RET;
_26 = [311068259616454023146488852480766939312_u128,280041278833937575137766741232524468523_u128];
_21 = [_23,_22,_22,_23,_25.0,_22,_25.0,_22];
_19 = _13 ^ _13;
_29 = [25000697252122403214043109817452309346_u128,102318885477239970842483483212573153252_u128,250614334064977172816884777154925855907_u128,295850597626095069566276914804896181142_u128,314651156646624979095269886287390282750_u128,135189230542446896416848736107364049767_u128,223401112724221773463500554912899902887_u128,62326746056367264888288644586170912014_u128];
_6 = !_27;
_5 = _7;
_1 = [922618945_i32,1944093529_i32,(-24583242_i32),158666544_i32,328316462_i32];
_22 = _25.0;
_5 = _11;
_20 = !_16;
_3 = [_22,_22,_22,_22];
_29 = [271973230123120841856721004349447894727_u128,88408160813584673360844080311274060240_u128,269317144629298415819415862238747883847_u128,132285861892077670145472041255516416853_u128,43515296835742162940685775779284978346_u128,159277146497048449771354283622727232717_u128,119269908507223154981994783496229319035_u128,14823106779243266988011423481762190524_u128];
_16 = !_20;
Goto(bb13)
}
bb13 = {
_25.2 = [_25.1,_25.1];
_25.0 = _23;
_16 = RET >= _20;
_32 = Adt44::Variant1 { fld0: _29 };
_8 = [368953389_i32,(-556122684_i32),1635275676_i32,153411410_i32,(-133863873_i32)];
_10 = [1704620525_i32,601265352_i32,1776885658_i32,(-1765050145_i32),(-1148672611_i32)];
Goto(bb14)
}
bb14 = {
_26 = [156932464695493835069369378645970483754_u128,70682484307716026454161959114079392494_u128];
_17 = (-121818636689373348847647981651633137333_i128) & (-103997600818106075356045369063557281619_i128);
_31 = _2;
_34 = _25.2;
RET = !_20;
_25 = (_23, 1072005605_u32, _34);
SetDiscriminant(_32, 0);
_35 = !_27;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(11_usize, 6_usize, Move(_6), 34_usize, Move(_34), 24_usize, Move(_24), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(11_usize, 20_usize, Move(_20), 30_usize, Move(_30), 17_usize, Move(_17), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(11_usize, 15_usize, Move(_15), 8_usize, Move(_8), 31_usize, Move(_31), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(11_usize, 11_usize, Move(_11), 12_usize, Move(_12), 7_usize, Move(_7), 37_usize, _37), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [char; 4],mut _2: [i32; 5],mut _3: [i32; 5],mut _4: [char; 4],mut _5: [i32; 5],mut _6: [i32; 5],mut _7: [i32; 5],mut _8: [i32; 5],mut _9: [i32; 5],mut _10: [i32; 5],mut _11: isize,mut _12: [i32; 5],mut _13: isize,mut _14: [char; 4],mut _15: [char; 4],mut _16: [i32; 5]) -> bool {
mir! {
type RET = bool;
let _17: u128;
let _18: char;
let _19: (u8, u32);
let _20: [u16; 4];
let _21: [u32; 2];
let _22: isize;
let _23: (i32, i16, f32, i8, u128);
let _24: u64;
let _25: u16;
let _26: Adt48;
let _27: i128;
let _28: [u16; 4];
let _29: Adt44;
let _30: [char; 4];
let _31: ([i32; 5],);
let _32: i128;
let _33: Adt44;
let _34: Adt49;
let _35: ();
let _36: ();
{
_3 = [700971232_i32,1222643337_i32,(-1302259615_i32),(-1805247533_i32),445118736_i32];
_3 = [(-1457306119_i32),(-1681529225_i32),1891634652_i32,234525693_i32,(-99295158_i32)];
_18 = '\u{2959}';
_8 = _3;
RET = !true;
_1 = [_18,_18,_18,_18];
_11 = 53_i8 as isize;
_18 = '\u{6c0cd}';
_11 = _13 & _13;
_6 = [(-2133870741_i32),233792829_i32,137260591_i32,(-1356156552_i32),(-127105791_i32)];
_1 = [_18,_18,_18,_18];
_15 = [_18,_18,_18,_18];
RET = true | true;
_13 = 1398924315_u32 as isize;
_15 = _14;
_17 = 228289809457446085077316021150314781410_u128;
_3 = [(-1315011398_i32),(-1406255339_i32),1596048346_i32,(-961026633_i32),(-224877542_i32)];
_6 = [(-805310140_i32),1267952180_i32,(-1917262340_i32),(-861260897_i32),819619469_i32];
_19 = (49_u8, 1509760824_u32);
_15 = _4;
_9 = [1729891897_i32,2045373631_i32,(-174429639_i32),(-988310586_i32),1854545848_i32];
Goto(bb1)
}
bb1 = {
_9 = [(-460008239_i32),(-1776877826_i32),(-393044313_i32),(-1748517633_i32),559838770_i32];
_5 = [2006717195_i32,193880733_i32,(-333255487_i32),275745358_i32,289382977_i32];
_20 = [34301_u16,31277_u16,45029_u16,51348_u16];
_19.1 = !1980220413_u32;
_20 = [5472_u16,46124_u16,27321_u16,37663_u16];
_19.1 = !1435836121_u32;
_15 = _4;
_5 = [960433422_i32,1753156277_i32,(-1707731786_i32),(-39054_i32),(-469587075_i32)];
_15 = _14;
match _17 {
0 => bb2,
1 => bb3,
228289809457446085077316021150314781410 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_3 = [12256916_i32,(-284341232_i32),(-1349871878_i32),(-871920780_i32),370839683_i32];
_20 = [46686_u16,5956_u16,9192_u16,48009_u16];
_22 = -_11;
Goto(bb6)
}
bb6 = {
_9 = _5;
_17 = !293197437201754098791869048188689880479_u128;
_21 = [_19.1,_19.1];
_19.1 = 45913752_u32;
_5 = [(-751899680_i32),(-277639560_i32),552327135_i32,(-1413478827_i32),(-304902934_i32)];
_10 = _9;
_21 = [_19.1,_19.1];
_23.1 = 141830443170734518430140475236312226188_i128 as i16;
_6 = _9;
_9 = [(-1032583999_i32),258988949_i32,393903532_i32,(-1487025949_i32),(-1154192722_i32)];
_19.1 = 2533947867_u32 << _22;
_22 = _13 + _11;
RET = false;
_23.2 = _13 as f32;
RET = false | false;
_1 = _14;
_4 = [_18,_18,_18,_18];
_11 = _22;
_23.0 = (-1674900656_i32);
_14 = [_18,_18,_18,_18];
_6 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_19 = (81_u8, 3402751179_u32);
RET = _19.1 <= _19.1;
_3 = [_23.0,_23.0,_23.0,_23.0,_23.0];
Goto(bb7)
}
bb7 = {
_12 = _2;
_13 = _11;
_19 = (33_u8, 1656174208_u32);
_19.1 = 3070063399_u32 & 3442292542_u32;
_13 = _22 & _11;
match _19.0 {
0 => bb1,
1 => bb2,
33 => bb8,
_ => bb5
}
}
bb8 = {
_17 = _23.0 as u128;
_15 = [_18,_18,_18,_18];
_19.1 = 2496811361_u32 | 2429772251_u32;
_5 = _2;
_9 = _2;
_25 = 28370_u16 + 10513_u16;
_22 = !_13;
_15 = _1;
_19 = (99_u8, 3074712553_u32);
_23.1 = 5127_i16;
_25 = !20019_u16;
_15 = [_18,_18,_18,_18];
_27 = _23.1 as i128;
_8 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_23.1 = -(-19102_i16);
RET = true;
_28 = _20;
_10 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_30 = [_18,_18,_18,_18];
_15 = _30;
match _23.0 {
0 => bb4,
1 => bb2,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
340282366920938463463374607430093310800 => bb15,
_ => bb14
}
}
bb9 = {
_12 = _2;
_13 = _11;
_19 = (33_u8, 1656174208_u32);
_19.1 = 3070063399_u32 & 3442292542_u32;
_13 = _22 & _11;
match _19.0 {
0 => bb1,
1 => bb2,
33 => bb8,
_ => bb5
}
}
bb10 = {
_9 = _5;
_17 = !293197437201754098791869048188689880479_u128;
_21 = [_19.1,_19.1];
_19.1 = 45913752_u32;
_5 = [(-751899680_i32),(-277639560_i32),552327135_i32,(-1413478827_i32),(-304902934_i32)];
_10 = _9;
_21 = [_19.1,_19.1];
_23.1 = 141830443170734518430140475236312226188_i128 as i16;
_6 = _9;
_9 = [(-1032583999_i32),258988949_i32,393903532_i32,(-1487025949_i32),(-1154192722_i32)];
_19.1 = 2533947867_u32 << _22;
_22 = _13 + _11;
RET = false;
_23.2 = _13 as f32;
RET = false | false;
_1 = _14;
_4 = [_18,_18,_18,_18];
_11 = _22;
_23.0 = (-1674900656_i32);
_14 = [_18,_18,_18,_18];
_6 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_19 = (81_u8, 3402751179_u32);
RET = _19.1 <= _19.1;
_3 = [_23.0,_23.0,_23.0,_23.0,_23.0];
Goto(bb7)
}
bb11 = {
_3 = [12256916_i32,(-284341232_i32),(-1349871878_i32),(-871920780_i32),370839683_i32];
_20 = [46686_u16,5956_u16,9192_u16,48009_u16];
_22 = -_11;
Goto(bb6)
}
bb12 = {
Return()
}
bb13 = {
_9 = [(-460008239_i32),(-1776877826_i32),(-393044313_i32),(-1748517633_i32),559838770_i32];
_5 = [2006717195_i32,193880733_i32,(-333255487_i32),275745358_i32,289382977_i32];
_20 = [34301_u16,31277_u16,45029_u16,51348_u16];
_19.1 = !1980220413_u32;
_20 = [5472_u16,46124_u16,27321_u16,37663_u16];
_19.1 = !1435836121_u32;
_15 = _4;
_5 = [960433422_i32,1753156277_i32,(-1707731786_i32),(-39054_i32),(-469587075_i32)];
_15 = _14;
match _17 {
0 => bb2,
1 => bb3,
228289809457446085077316021150314781410 => bb5,
_ => bb4
}
}
bb14 = {
Return()
}
bb15 = {
_23.4 = _17;
_10 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_20 = [_25,_25,_25,_25];
_4 = _30;
_23.1 = (-7023_i16) & (-19183_i16);
_19 = (136_u8, 1129883906_u32);
_19.0 = !165_u8;
_8 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_17 = _23.4 + _23.4;
_20 = [_25,_25,_25,_25];
_9 = _12;
_13 = _22;
RET = false;
_31.0 = [_23.0,_23.0,_23.0,_23.0,_23.0];
_24 = !7032582968092710224_u64;
_30 = [_18,_18,_18,_18];
_1 = _15;
_27 = (-141171761920335688047992705429319558112_i128);
_23.2 = _24 as f32;
_28 = [_25,_25,_25,_25];
Goto(bb16)
}
bb16 = {
Call(_35 = dump_var(12_usize, 15_usize, Move(_15), 31_usize, Move(_31), 10_usize, Move(_10), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(12_usize, 5_usize, Move(_5), 20_usize, Move(_20), 17_usize, Move(_17), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(12_usize, 21_usize, Move(_21), 3_usize, Move(_3), 25_usize, Move(_25), 18_usize, Move(_18)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_35 = dump_var(12_usize, 11_usize, Move(_11), 8_usize, Move(_8), 36_usize, _36, 36_usize, _36), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [char; 4],mut _2: [i32; 5],mut _3: u64,mut _4: [i32; 5],mut _5: [i8; 7],mut _6: [i32; 5],mut _7: [char; 4],mut _8: [i32; 5],mut _9: [u16; 4],mut _10: [i32; 5],mut _11: [i32; 5]) -> (char, u32, [u32; 2]) {
mir! {
type RET = (char, u32, [u32; 2]);
let _12: i64;
let _13: char;
let _14: i16;
let _15: [char; 4];
let _16: char;
let _17: char;
let _18: char;
let _19: i16;
let _20: isize;
let _21: f64;
let _22: i8;
let _23: u16;
let _24: u8;
let _25: Adt58;
let _26: i32;
let _27: f32;
let _28: (char, u32, [u32; 2]);
let _29: u8;
let _30: f64;
let _31: char;
let _32: char;
let _33: ();
let _34: ();
{
_7 = ['\u{20144}','\u{7ebd7}','\u{bd7ad}','\u{3c8b5}'];
RET.2 = [1424404384_u32,242854172_u32];
_6 = [459012121_i32,421237902_i32,1289458472_i32,94570816_i32,(-1414946500_i32)];
_6 = _2;
RET.1 = !1950790259_u32;
_1 = _7;
RET.0 = '\u{10b1cf}';
RET.2 = [RET.1,RET.1];
Goto(bb1)
}
bb1 = {
_5 = [(-19_i8),(-104_i8),16_i8,(-108_i8),86_i8,(-116_i8),126_i8];
_8 = [(-2078091703_i32),2073029911_i32,(-92341110_i32),(-1555939557_i32),1009515104_i32];
RET.0 = '\u{97d71}';
RET.1 = 205341731_u32;
RET.2 = [RET.1,RET.1];
_1 = _7;
RET.0 = '\u{62ba7}';
_8 = [(-2050257649_i32),(-2000774978_i32),71247031_i32,(-483861056_i32),195815268_i32];
match RET.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
205341731 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_4 = [(-1658036485_i32),687368196_i32,(-1045694985_i32),(-446763102_i32),1512266133_i32];
RET.1 = 3544739239_u32;
_5 = [(-27_i8),(-126_i8),(-29_i8),22_i8,(-23_i8),(-46_i8),66_i8];
_10 = [1686207910_i32,(-1082940320_i32),(-846492121_i32),(-413315876_i32),2000114026_i32];
_3 = !17201638079654717583_u64;
_9 = [23000_u16,42282_u16,1670_u16,2997_u16];
_4 = _11;
match RET.1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb7,
3544739239 => bb9,
_ => bb5
}
}
bb9 = {
_5 = [(-106_i8),39_i8,(-26_i8),78_i8,(-117_i8),(-59_i8),31_i8];
RET.1 = !54345755_u32;
_14 = (-18909_i16) | 21672_i16;
_4 = [(-897222279_i32),(-1514804250_i32),707758272_i32,(-2047032136_i32),(-151637523_i32)];
RET.0 = '\u{19ac0}';
_13 = RET.0;
_9 = [30906_u16,58539_u16,27836_u16,37587_u16];
Goto(bb10)
}
bb10 = {
_5 = [38_i8,(-113_i8),(-13_i8),(-51_i8),(-70_i8),(-99_i8),(-77_i8)];
_11 = [(-432571874_i32),89287750_i32,(-562945743_i32),(-763850378_i32),977350368_i32];
_4 = [(-680393225_i32),(-1056238422_i32),139611228_i32,(-67492390_i32),1625113461_i32];
RET.2 = [RET.1,RET.1];
_13 = RET.0;
_15 = _7;
RET.1 = !2685029172_u32;
_21 = 5566_u16 as f64;
_19 = 4407936729561291886_usize as i16;
RET.0 = _13;
_19 = 20489216360515197253583064012401338419_i128 as i16;
_20 = 9223372036854775807_isize;
match _20 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb6,
6 => bb7,
9223372036854775807 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
RET.2 = [RET.1,RET.1];
_21 = _3 as f64;
Goto(bb13)
}
bb13 = {
RET.2 = [RET.1,RET.1];
_21 = _20 as f64;
_7 = _1;
_25.fld2 = _3 as u8;
_24 = _25.fld2 << _3;
_3 = RET.0 as u64;
_21 = (-164258472011630177252208186157337763526_i128) as f64;
match _20 {
0 => bb12,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
9223372036854775807 => bb21,
_ => bb20
}
}
bb14 = {
Return()
}
bb15 = {
_5 = [(-19_i8),(-104_i8),16_i8,(-108_i8),86_i8,(-116_i8),126_i8];
_8 = [(-2078091703_i32),2073029911_i32,(-92341110_i32),(-1555939557_i32),1009515104_i32];
RET.0 = '\u{97d71}';
RET.1 = 205341731_u32;
RET.2 = [RET.1,RET.1];
_1 = _7;
RET.0 = '\u{62ba7}';
_8 = [(-2050257649_i32),(-2000774978_i32),71247031_i32,(-483861056_i32),195815268_i32];
match RET.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
205341731 => bb8,
_ => bb7
}
}
bb16 = {
_5 = [38_i8,(-113_i8),(-13_i8),(-51_i8),(-70_i8),(-99_i8),(-77_i8)];
_11 = [(-432571874_i32),89287750_i32,(-562945743_i32),(-763850378_i32),977350368_i32];
_4 = [(-680393225_i32),(-1056238422_i32),139611228_i32,(-67492390_i32),1625113461_i32];
RET.2 = [RET.1,RET.1];
_13 = RET.0;
_15 = _7;
RET.1 = !2685029172_u32;
_21 = 5566_u16 as f64;
_19 = 4407936729561291886_usize as i16;
RET.0 = _13;
_19 = 20489216360515197253583064012401338419_i128 as i16;
_20 = 9223372036854775807_isize;
match _20 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb6,
6 => bb7,
9223372036854775807 => bb12,
_ => bb11
}
}
bb17 = {
Return()
}
bb18 = {
_4 = [(-1658036485_i32),687368196_i32,(-1045694985_i32),(-446763102_i32),1512266133_i32];
RET.1 = 3544739239_u32;
_5 = [(-27_i8),(-126_i8),(-29_i8),22_i8,(-23_i8),(-46_i8),66_i8];
_10 = [1686207910_i32,(-1082940320_i32),(-846492121_i32),(-413315876_i32),2000114026_i32];
_3 = !17201638079654717583_u64;
_9 = [23000_u16,42282_u16,1670_u16,2997_u16];
_4 = _11;
match RET.1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb7,
3544739239 => bb9,
_ => bb5
}
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
_15 = _7;
_12 = !1535450558767468022_i64;
_18 = _13;
_20 = (-9223372036854775808_isize);
_20 = (-44_isize) >> _24;
RET.0 = _18;
_4 = [(-1507063408_i32),(-158789371_i32),(-130667628_i32),(-689170844_i32),(-266906212_i32)];
RET.2 = [RET.1,RET.1];
_25.fld0 = [58753_u16,31047_u16,7997_u16,153_u16,35812_u16,59659_u16,60226_u16];
_3 = 10413968120900882145_u64 >> _20;
_20 = 86_isize ^ (-9223372036854775808_isize);
_16 = _13;
_28 = (_13, RET.1, RET.2);
_16 = _28.0;
_29 = (-799053227_i32) as u8;
RET = (_13, _28.1, _28.2);
_14 = _19 * _19;
_27 = _20 as f32;
_9 = [25483_u16,44516_u16,38789_u16,40925_u16];
_8 = [(-362458613_i32),947941859_i32,120669459_i32,1343702168_i32,2040044334_i32];
_30 = _21 + _21;
_19 = _14 + _14;
Goto(bb22)
}
bb22 = {
Call(_33 = dump_var(13_usize, 4_usize, Move(_4), 13_usize, Move(_13), 19_usize, Move(_19), 7_usize, Move(_7)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_33 = dump_var(13_usize, 15_usize, Move(_15), 9_usize, Move(_9), 20_usize, Move(_20), 8_usize, Move(_8)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_33 = dump_var(13_usize, 16_usize, Move(_16), 6_usize, Move(_6), 29_usize, Move(_29), 34_usize, _34), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: u32,mut _2: [i32; 5],mut _3: [i32; 5],mut _4: [u128; 2],mut _5: [i16; 4],mut _6: [i32; 5],mut _7: [i32; 5],mut _8: char,mut _9: [i32; 5],mut _10: (char, u32, [u32; 2]),mut _11: [u32; 2],mut _12: [i32; 5],mut _13: [i32; 5]) -> Adt44 {
mir! {
type RET = Adt44;
let _14: *const &'static *mut u16;
let _15: u128;
let _16: Adt54;
let _17: bool;
let _18: u16;
let _19: bool;
let _20: i8;
let _21: Adt57;
let _22: f64;
let _23: (u8, u32);
let _24: [u128; 8];
let _25: i64;
let _26: [u16; 7];
let _27: u128;
let _28: u32;
let _29: i8;
let _30: i64;
let _31: f32;
let _32: bool;
let _33: (char, u32, [u32; 2]);
let _34: ([i32; 5],);
let _35: isize;
let _36: u64;
let _37: i128;
let _38: char;
let _39: bool;
let _40: Adt57;
let _41: bool;
let _42: ([i32; 5],);
let _43: isize;
let _44: ([i32; 5],);
let _45: ();
let _46: ();
{
_10.1 = _1;
_12 = _9;
_4 = [239956087478154811098246698348689318698_u128,263210216535127062029506683735112193601_u128];
_10.0 = _8;
_10.2 = _11;
_4 = [311490948344319018859578976741238306812_u128,101394146936058199713243577212510560973_u128];
_10 = (_8, _1, _11);
_12 = [(-1696840217_i32),(-1210778524_i32),(-597169769_i32),(-2117534890_i32),1067376316_i32];
_5 = [(-9430_i16),(-13926_i16),29031_i16,3685_i16];
_8 = _10.0;
_9 = _7;
_2 = [1151805836_i32,2112064178_i32,172876624_i32,(-1625070670_i32),1108420438_i32];
_7 = _6;
_7 = [(-1159368541_i32),1114633725_i32,(-1989916373_i32),218232592_i32,1870160705_i32];
_16.fld0.1 = (-508153918_i32) as u32;
_16.fld5.0 = _6;
_18 = 10143_u16;
_10 = (_8, _16.fld0.1, _11);
_16.fld5.0 = [(-2062299499_i32),1101725235_i32,(-1542920184_i32),(-512741052_i32),(-890697385_i32)];
_7 = [(-1802833634_i32),171510224_i32,(-2124375233_i32),529073141_i32,129888559_i32];
_16.fld4 = [(-109_i8),(-18_i8),30_i8,(-73_i8),9_i8,1_i8,(-48_i8)];
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
10143 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_10.0 = _8;
_15 = 29122_i16 as u128;
_16.fld2 = [_10.1,_16.fld0.1];
_10.1 = !_1;
_16.fld0.0 = _8;
_6 = [1852909367_i32,(-2076394206_i32),(-923391174_i32),(-380486442_i32),2120354505_i32];
_10.0 = _16.fld0.0;
_19 = false & true;
_16.fld0 = (_10.0, _1, _10.2);
_16.fld4 = [113_i8,25_i8,(-1_i8),66_i8,(-33_i8),123_i8,28_i8];
_16.fld5 = (_6,);
_16.fld4 = [28_i8,(-28_i8),58_i8,(-45_i8),7_i8,85_i8,(-128_i8)];
_16.fld2 = _10.2;
_16.fld5.0 = [600715743_i32,(-955998524_i32),2100486624_i32,(-1356239279_i32),809715333_i32];
_23 = (218_u8, _1);
_3 = [1119562501_i32,(-1193503874_i32),1049560737_i32,719551423_i32,1766958637_i32];
_10.1 = 15792477629371880534_usize as u32;
_16.fld5 = (_9,);
_16.fld0 = (_10.0, _23.1, _11);
_16.fld5 = (_6,);
_12 = _9;
_16.fld0.1 = _23.1 * _10.1;
Goto(bb9)
}
bb9 = {
match _23.0 {
0 => bb10,
218 => bb12,
_ => bb11
}
}
bb10 = {
_10.0 = _8;
_15 = 29122_i16 as u128;
_16.fld2 = [_10.1,_16.fld0.1];
_10.1 = !_1;
_16.fld0.0 = _8;
_6 = [1852909367_i32,(-2076394206_i32),(-923391174_i32),(-380486442_i32),2120354505_i32];
_10.0 = _16.fld0.0;
_19 = false & true;
_16.fld0 = (_10.0, _1, _10.2);
_16.fld4 = [113_i8,25_i8,(-1_i8),66_i8,(-33_i8),123_i8,28_i8];
_16.fld5 = (_6,);
_16.fld4 = [28_i8,(-28_i8),58_i8,(-45_i8),7_i8,85_i8,(-128_i8)];
_16.fld2 = _10.2;
_16.fld5.0 = [600715743_i32,(-955998524_i32),2100486624_i32,(-1356239279_i32),809715333_i32];
_23 = (218_u8, _1);
_3 = [1119562501_i32,(-1193503874_i32),1049560737_i32,719551423_i32,1766958637_i32];
_10.1 = 15792477629371880534_usize as u32;
_16.fld5 = (_9,);
_16.fld0 = (_10.0, _23.1, _11);
_16.fld5 = (_6,);
_12 = _9;
_16.fld0.1 = _23.1 * _10.1;
Goto(bb9)
}
bb11 = {
Return()
}
bb12 = {
_20 = 15781665145743451304_u64 as i8;
_23.0 = !130_u8;
_13 = [(-153299651_i32),1667904097_i32,81166815_i32,2130981424_i32,(-1855579002_i32)];
_19 = false;
_24 = [_15,_15,_15,_15,_15,_15,_15,_15];
_4 = [_15,_15];
_16.fld0.1 = !_23.1;
_15 = 208657754749847850303022604044380241149_u128;
_18 = 26875_u16;
_16.fld0.1 = 22280_i16 as u32;
_4 = [_15,_15];
_3 = [1231332281_i32,1071086554_i32,55496532_i32,(-1721518717_i32),2009008131_i32];
Call(_15 = core::intrinsics::bswap(321393695803038636429611290853483582083_u128), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_27 = _15;
_28 = !_23.1;
_16.fld0.0 = _8;
_24 = [_27,_27,_15,_27,_27,_15,_15,_27];
_8 = _10.0;
_10.1 = !_23.1;
_16.fld0.1 = !_28;
_4 = [_15,_27];
_23 = (128_u8, _28);
_2 = _6;
_16.fld0.1 = 829463810463533517_i64 as u32;
_29 = _20 >> _23.0;
RET = Adt44::Variant1 { fld0: _24 };
_16.fld0.1 = _1;
_16.fld1 = _2;
_10 = (_8, _1, _11);
_22 = (-132393966021306143896279484784449278916_i128) as f64;
_16.fld0.2 = _10.2;
Goto(bb14)
}
bb14 = {
_26 = [_18,_18,_18,_18,_18,_18,_18];
RET = Adt44::Variant1 { fld0: _24 };
_32 = !_19;
_18 = 17253_u16 & 37089_u16;
_16.fld2 = _16.fld0.2;
SetDiscriminant(RET, 0);
_30 = 3_usize as i64;
_10.0 = _8;
_16.fld5 = (_3,);
_34 = _16.fld5;
_16.fld0.1 = _18 as u32;
_4 = [_27,_27];
_11 = [_1,_1];
_28 = !_10.1;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).2 = _20 as f32;
place!(Field::<u128>(Variant(RET, 0), 0)) = 38552111751411600373044737703823983684_i128 as u128;
_25 = _23.0 as i64;
_11 = [_1,_28];
_16.fld1 = [1862602184_i32,(-161810596_i32),(-319935739_i32),(-1497106635_i32),(-1279314721_i32)];
_9 = [(-1714604492_i32),1141275351_i32,1539088066_i32,365459544_i32,(-1452426848_i32)];
_2 = [(-1310434413_i32),505024006_i32,(-1920141663_i32),(-731232335_i32),335287394_i32];
_10.1 = _28 + _23.1;
Goto(bb15)
}
bb15 = {
_35 = _18 as isize;
_11 = [_16.fld0.1,_16.fld0.1];
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).4 = _25 as u128;
_36 = !7034491744206093263_u64;
_31 = -Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).2;
Call(_33.1 = core::intrinsics::transmute(_10.1), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).0 = _10.1 as i32;
_23.1 = _33.1 + _10.1;
place!(Field::<i16>(Variant(RET, 0), 2)) = !(-8406_i16);
_13 = _16.fld5.0;
_24 = [Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,Field::<u128>(Variant(RET, 0), 0),_15,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,_27,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4,_15];
_25 = !_30;
_29 = _20;
_27 = !Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).4;
_29 = !_20;
_19 = !_32;
place!(Field::<i64>(Variant(RET, 0), 1)) = _28 as i64;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).0 = (-138516098_i32);
_33.0 = _8;
_16.fld1 = [Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0];
Call(_28 = fn15(_6, _13, _23, _24, _1, _16.fld2, _23.1, _16.fld5.0, _23.0, _24, _6, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_16.fld1 = _3;
_42.0 = [Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0];
_15 = _27 >> _23.1;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)) = (311632323_i32, Field::<i16>(Variant(RET, 0), 2), _31, _20, _15);
_10.0 = _8;
_9 = [Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0,Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).0];
_27 = !_15;
_41 = _25 != Field::<i64>(Variant(RET, 0), 1);
_23.0 = !89_u8;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).0 = !1698477050_i32;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).3 = !_20;
place!(Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3)).0 = (-1987631033_i32);
_23.0 = _28 as u8;
_33.2 = [_1,_23.1];
place!(Field::<i16>(Variant(RET, 0), 2)) = Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).1 | Field::<(i32, i16, f32, i8, u128)>(Variant(RET, 0), 3).1;
_23 = (77_u8, _28);
_33.1 = _23.0 as u32;
Goto(bb18)
}
bb18 = {
Call(_45 = dump_var(14_usize, 9_usize, Move(_9), 29_usize, Move(_29), 34_usize, Move(_34), 27_usize, Move(_27)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_45 = dump_var(14_usize, 10_usize, Move(_10), 13_usize, Move(_13), 11_usize, Move(_11), 33_usize, Move(_33)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_45 = dump_var(14_usize, 5_usize, Move(_5), 20_usize, Move(_20), 32_usize, Move(_32), 42_usize, Move(_42)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_45 = dump_var(14_usize, 23_usize, Move(_23), 4_usize, Move(_4), 41_usize, Move(_41), 25_usize, Move(_25)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [i32; 5],mut _2: [i32; 5],mut _3: (u8, u32),mut _4: [u128; 8],mut _5: u32,mut _6: [u32; 2],mut _7: u32,mut _8: [i32; 5],mut _9: u8,mut _10: [u128; 8],mut _11: [i32; 5],mut _12: (u8, u32)) -> u32 {
mir! {
type RET = u32;
let _13: [i8; 7];
let _14: u8;
let _15: [i32; 5];
let _16: char;
let _17: char;
let _18: char;
let _19: [u32; 2];
let _20: bool;
let _21: f32;
let _22: f32;
let _23: char;
let _24: [u128; 8];
let _25: Adt49;
let _26: ();
let _27: ();
{
_3.0 = _9;
_12.1 = _3.1 | _3.1;
_3.0 = !_9;
RET = _7;
_5 = _12.1;
_1 = _11;
match _12.0 {
0 => bb1,
1 => bb2,
2 => bb3,
128 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
RET = !_3.1;
_3.0 = _12.0;
_5 = _7 ^ _12.1;
_9 = (-9223372036854775808_isize) as u8;
_3 = (_12.0, _5);
_11 = _2;
_6 = [RET,_5];
_13 = [(-104_i8),(-115_i8),69_i8,107_i8,(-93_i8),(-27_i8),(-25_i8)];
_5 = !_12.1;
_12.0 = _9;
_6 = [RET,_3.1];
_3.0 = !_9;
_5 = _7 - _3.1;
_3.0 = _12.0;
_4 = _10;
_1 = _2;
_12 = _3;
_14 = _3.0;
Goto(bb6)
}
bb6 = {
_3 = _12;
_16 = '\u{59a1e}';
_5 = !_3.1;
RET = (-61637003812299132648726947296141109329_i128) as u32;
_13 = [40_i8,98_i8,(-76_i8),123_i8,66_i8,100_i8,94_i8];
_10 = _4;
_14 = _12.0;
_16 = '\u{9694b}';
_8 = [453365468_i32,(-1867898279_i32),198465003_i32,424941413_i32,2073405538_i32];
_13 = [127_i8,6_i8,41_i8,87_i8,24_i8,84_i8,(-53_i8)];
_12.1 = _7;
_7 = _5;
_11 = [(-235042110_i32),1898191109_i32,1412171763_i32,1597213251_i32,1522334340_i32];
_11 = [(-2074114003_i32),(-1535312108_i32),(-1563129643_i32),1908279944_i32,121316388_i32];
_3 = (_9, _7);
_19 = [_7,_7];
_3.1 = _7;
_12.1 = _7;
_17 = _16;
_13 = [(-39_i8),(-101_i8),(-65_i8),17_i8,33_i8,(-87_i8),25_i8];
_7 = 50720_u16 as u32;
Call(_3.1 = fn16(_12.1, _5, _6, _17, _6, _12.1, _12.1, _16), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_12 = _3;
_18 = _16;
_21 = 7_usize as f32;
_11 = _2;
_1 = [(-1760387935_i32),1310884026_i32,72115699_i32,40060927_i32,1074188323_i32];
_14 = _3.0;
_19 = [_5,_3.1];
_2 = _1;
_6 = [_5,_12.1];
Call(_10 = core::intrinsics::transmute(_4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_13 = [(-124_i8),39_i8,(-91_i8),44_i8,90_i8,(-88_i8),20_i8];
_22 = _21;
_6 = [_3.1,_5];
_2 = [(-237429493_i32),502187903_i32,536600265_i32,212629763_i32,1510896653_i32];
_16 = _18;
_20 = true;
_16 = _17;
_12 = (_14, _3.1);
_7 = _5 | _3.1;
_12.0 = !_14;
_15 = [(-157983540_i32),870425536_i32,(-1679629758_i32),(-2093901743_i32),(-1501706558_i32)];
_14 = _9 ^ _12.0;
_16 = _17;
RET = !_12.1;
_22 = _21 - _21;
_12.1 = _7 - _7;
_9 = 127_isize as u8;
_3 = (_14, _7);
_4 = [326817752514090921256439102628965916794_u128,300789074732575656223471404224234482858_u128,94856723511061902728447574577110418589_u128,62318438119886865780109639625325945822_u128,311594875299297201876454329813373995519_u128,190866579207049112740446967533754949035_u128,179343078769225679904328217046625439140_u128,78493718505133375932532377609843926223_u128];
_3.1 = _7;
Goto(bb9)
}
bb9 = {
Call(_26 = dump_var(15_usize, 7_usize, Move(_7), 13_usize, Move(_13), 17_usize, Move(_17), 8_usize, Move(_8)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_26 = dump_var(15_usize, 3_usize, Move(_3), 18_usize, Move(_18), 1_usize, Move(_1), 15_usize, Move(_15)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_26 = dump_var(15_usize, 12_usize, Move(_12), 6_usize, Move(_6), 27_usize, _27, 27_usize, _27), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: u32,mut _2: u32,mut _3: [u32; 2],mut _4: char,mut _5: [u32; 2],mut _6: u32,mut _7: u32,mut _8: char) -> u32 {
mir! {
type RET = u32;
let _9: Adt57;
let _10: Adt44;
let _11: ();
let _12: ();
{
_8 = _4;
_6 = !_1;
RET = !_6;
_7 = _2 ^ _1;
_3 = _5;
_7 = 2445_u16 as u32;
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(16_usize, 3_usize, Move(_3), 4_usize, Move(_4), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: *const u8,mut _2: f32,mut _3: u8,mut _4: u8,mut _5: isize,mut _6: usize,mut _7: u8,mut _8: usize,mut _9: u8,mut _10: f32,mut _11: isize,mut _12: i128,mut _13: i32,mut _14: i32,mut _15: isize) -> Adt46 {
mir! {
type RET = Adt46;
let _16: f64;
let _17: isize;
let _18: [u64; 5];
let _19: Adt55;
let _20: i128;
let _21: [i16; 4];
let _22: isize;
let _23: f64;
let _24: (char, u32, [u32; 2]);
let _25: bool;
let _26: [u128; 2];
let _27: *const i32;
let _28: usize;
let _29: isize;
let _30: [u16; 4];
let _31: [u16; 4];
let _32: isize;
let _33: usize;
let _34: ();
let _35: ();
{
_12 = 3937313474671519936_i64 as i128;
_16 = _2 as f64;
_5 = !_11;
_12 = (-78275888270306132052563644488206480842_i128);
_9 = _3 / _7;
_14 = _13 - _13;
_15 = _11 + _11;
_15 = 33856_u16 as isize;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
87 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_10 = _2 * _2;
_6 = _8 & _8;
_15 = -_11;
_6 = _8;
_12 = (-131171608173366292758124240677833661211_i128) ^ (-81380921353452404404463011651957094887_i128);
_16 = _12 as f64;
_9 = _7;
_12 = -(-9084121057601534939172988978487343841_i128);
match _7 {
0 => bb4,
1 => bb2,
2 => bb3,
87 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_17 = -_15;
_7 = _4 >> _13;
_8 = !_6;
_12 = _16 as i128;
_21 = [22953_i16,2793_i16,11227_i16,(-12848_i16)];
_18 = [9442997999257975088_u64,6979791718440998274_u64,17305159936792072594_u64,11641071471490562118_u64,5254469806659328367_u64];
_18 = [908914186614740846_u64,3813593282459103470_u64,3590847718119533739_u64,17134769075369868198_u64,2114143179217222315_u64];
_13 = _14;
_10 = _2 * _2;
_13 = _14 | _14;
_6 = _8;
_15 = _17 + _5;
_22 = _15 & _5;
_16 = (-4597_i16) as f64;
_18 = [14919086927377441894_u64,12672666648424527502_u64,633617708844162723_u64,8141643482702284875_u64,6568176094881680437_u64];
_18 = [15926510334534393126_u64,12950586063252180277_u64,16489074975495395041_u64,16218623177057302158_u64,18319587332490821738_u64];
_20 = !_12;
match _9 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
87 => bb14,
_ => bb13
}
}
bb9 = {
Return()
}
bb10 = {
_10 = _2 * _2;
_6 = _8 & _8;
_15 = -_11;
_6 = _8;
_12 = (-131171608173366292758124240677833661211_i128) ^ (-81380921353452404404463011651957094887_i128);
_16 = _12 as f64;
_9 = _7;
_12 = -(-9084121057601534939172988978487343841_i128);
match _7 {
0 => bb4,
1 => bb2,
2 => bb3,
87 => bb8,
_ => bb7
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_24.0 = '\u{80816}';
_8 = 13361_u16 as usize;
_11 = _3 as isize;
_17 = _20 as isize;
_24.0 = '\u{f4d25}';
_13 = _14 + _14;
_7 = _9 * _4;
_23 = _16 - _16;
_23 = -_16;
_24.2 = [3588941404_u32,25609146_u32];
_24.2 = [2727638967_u32,2822851019_u32];
_2 = _6 as f32;
Goto(bb15)
}
bb15 = {
_12 = _3 as i128;
_24.1 = !546590616_u32;
_25 = true;
_13 = _14 & _14;
_24.2 = [_24.1,_24.1];
_14 = _10 as i32;
_11 = _17;
_10 = _2;
_24.2 = [_24.1,_24.1];
_16 = _8 as f64;
_24.1 = 1557466058_u32;
_24.1 = !2709013784_u32;
_9 = _23 as u8;
_2 = -_10;
_23 = _16;
_13 = !_14;
_4 = !_3;
_13 = _14;
_29 = -_11;
_28 = 166110270421626708507174625389861752536_u128 as usize;
_5 = _22;
_4 = !_3;
_27 = core::ptr::addr_of!(_13);
_26 = [334677303282640469797003051992240033497_u128,115327142973387164349677388009064389190_u128];
_7 = _4 / _3;
_18 = [3420092365906844587_u64,6335768508107477802_u64,4980549746922705167_u64,229716431769820111_u64,804695621755239871_u64];
match _3 {
0 => bb4,
1 => bb7,
2 => bb16,
87 => bb18,
_ => bb17
}
}
bb16 = {
_24.0 = '\u{80816}';
_8 = 13361_u16 as usize;
_11 = _3 as isize;
_17 = _20 as isize;
_24.0 = '\u{f4d25}';
_13 = _14 + _14;
_7 = _9 * _4;
_23 = _16 - _16;
_23 = -_16;
_24.2 = [3588941404_u32,25609146_u32];
_24.2 = [2727638967_u32,2822851019_u32];
_2 = _6 as f32;
Goto(bb15)
}
bb17 = {
Return()
}
bb18 = {
_3 = _7;
_8 = _2 as usize;
_17 = _11;
RET = Adt46::Variant0 { fld0: _26 };
SetDiscriminant(RET, 0);
_1 = core::ptr::addr_of!(_7);
_4 = (*_1);
_12 = _20 >> (*_27);
_26 = [209894052843692698493580978276332625466_u128,147478980278715324484891539147184322001_u128];
_31 = [27186_u16,34606_u16,28511_u16,344_u16];
_30 = _31;
_6 = 287673919361283592833292617093677172574_u128 as usize;
_21 = [(-19178_i16),20200_i16,30737_i16,144_i16];
_2 = _10;
_6 = !_8;
RET = Adt46::Variant0 { fld0: _26 };
_24.0 = '\u{1fe47}';
_10 = _2;
place!(Field::<[u128; 2]>(Variant(RET, 0), 0)) = [304428925310078581139049600349573972659_u128,139899662462261732602003956327616687371_u128];
Goto(bb19)
}
bb19 = {
Call(_34 = dump_var(17_usize, 29_usize, Move(_29), 5_usize, Move(_5), 3_usize, Move(_3), 12_usize, Move(_12)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_34 = dump_var(17_usize, 7_usize, Move(_7), 21_usize, Move(_21), 13_usize, Move(_13), 25_usize, Move(_25)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_34 = dump_var(17_usize, 31_usize, Move(_31), 9_usize, Move(_9), 6_usize, Move(_6), 26_usize, Move(_26)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [u128; 2],mut _2: i16,mut _3: i16,mut _4: i16,mut _5: i128,mut _6: u128,mut _7: i16,mut _8: i16,mut _9: i16,mut _10: (i32, i16, f32, i8, u128),mut _11: i32,mut _12: i16,mut _13: i32,mut _14: Adt45,mut _15: i16,mut _16: Adt45) -> u128 {
mir! {
type RET = u128;
let _17: u64;
let _18: u16;
let _19: f32;
let _20: u16;
let _21: Adt51;
let _22: (i32, i16, f32, i8, u128);
let _23: ();
let _24: ();
{
_8 = _10.1;
Call(_6 = core::intrinsics::transmute(_10.4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10.0 = _13;
_9 = _8 + _12;
_10.3 = -113_i8;
RET = 110_u8 as u128;
_10.1 = _9;
place!(Field::<i16>(Variant(_14, 2), 0)) = _4;
place!(Field::<i16>(Variant(_14, 2), 0)) = Field::<i16>(Variant(_16, 2), 0);
_14 = _16;
place!(Field::<i16>(Variant(_14, 2), 0)) = !_15;
SetDiscriminant(_14, 2);
place!(Field::<i16>(Variant(_16, 2), 0)) = '\u{9987a}' as i16;
_18 = !33435_u16;
_17 = 6348644376994343629_u64;
_10.2 = _5 as f32;
place!(Field::<i16>(Variant(_14, 2), 0)) = !_3;
_15 = -_2;
Call(_9 = core::intrinsics::transmute(_4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14 = _16;
_17 = 12207580361124991652_u64;
_19 = _10.2;
_3 = !_8;
_10.2 = _19;
_5 = 11019642278160311048412209620732905983_i128 ^ (-251608368957664463033739997922841573_i128);
_16 = _14;
_5 = !25610211584919527846433791690574888769_i128;
RET = 5_usize as u128;
_22.3 = _10.3;
_1 = [_6,_6];
_2 = _12;
RET = _6 >> _6;
_10.4 = '\u{3d253}' as u128;
_6 = !RET;
Goto(bb3)
}
bb3 = {
Call(_23 = dump_var(18_usize, 18_usize, Move(_18), 9_usize, Move(_9), 6_usize, Move(_6), 3_usize, Move(_3)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_23 = dump_var(18_usize, 13_usize, Move(_13), 12_usize, Move(_12), 1_usize, Move(_1), 24_usize, _24), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(228_u8), std::hint::black_box((-123842687271281834906320476568453420129_i128)), std::hint::black_box(2088242547_i32));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt42 {
fld0: *mut u16,
fld1: f64,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: [i32; 5],
fld1: [u128; 8],

},
Variant1{
fld0: bool,
fld1: char,
fld2: [u32; 2],
fld3: u16,
fld4: *const i128,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt44 {
Variant0{
fld0: u128,
fld1: i64,
fld2: i16,
fld3: (i32, i16, f32, i8, u128),

},
Variant1{
fld0: [u128; 8],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt45 {
Variant0{
fld0: bool,
fld1: f64,
fld2: [i32; 5],
fld3: i8,
fld4: *const u8,
fld5: [u16; 4],

},
Variant1{
fld0: Adt43,
fld1: *const i32,
fld2: i128,
fld3: i8,
fld4: i16,
fld5: u8,

},
Variant2{
fld0: i16,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt46 {
Variant0{
fld0: [u128; 2],

},
Variant1{
fld0: [char; 7],
fld1: *const u8,
fld2: isize,
fld3: usize,
fld4: [u32; 2],
fld5: ([i32; 5],),
fld6: i64,

},
Variant2{
fld0: [i16; 4],
fld1: Adt45,
fld2: (u8, u32),
fld3: i8,
fld4: *const u8,
fld5: i32,
fld6: f64,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: ([i32; 5],),
fld1: f64,
fld2: [i32; 5],
fld3: [u16; 4],
fld4: i16,
fld5: *const u8,

},
Variant1{
fld0: *const u32,
fld1: Adt43,
fld2: [u64; 5],
fld3: [u16; 4],

},
Variant2{
fld0: bool,
fld1: *const u8,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: *const i128,
fld1: i16,
fld2: [char; 8],
fld3: *mut u16,

},
Variant1{
fld0: i8,
fld1: *mut char,
fld2: isize,

},
Variant2{
fld0: Adt46,
fld1: [u16; 7],
fld2: [i16; 4],
fld3: i8,
fld4: i16,
fld5: [i8; 7],
fld6: i64,
fld7: *const i32,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [u64; 5],
fld1: [u16; 7],
fld2: isize,
fld3: [i16; 4],
fld4: [u128; 2],
fld5: [char; 8],
fld6: Adt42,
fld7: [char; 4],

},
Variant1{
fld0: *mut u128,
fld1: [u128; 2],
fld2: Adt45,

},
Variant2{
fld0: [u16; 4],
fld1: [i32; 5],
fld2: f64,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: Adt49,
fld1: (u8, u32),
fld2: Adt47,
fld3: u32,
fld4: *const i32,
fld5: f32,
fld6: [u128; 8],
fld7: [u32; 2],

},
Variant1{
fld0: [u128; 2],
fld1: [u16; 4],
fld2: Adt48,
fld3: [u128; 8],
fld4: f64,
fld5: usize,
fld6: *mut char,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt42,
fld1: [u128; 2],
fld2: isize,
fld3: [i16; 4],

},
Variant1{
fld0: bool,
fld1: char,
fld2: isize,
fld3: usize,
fld4: *mut char,
fld5: f32,

},
Variant2{
fld0: [u128; 8],
fld1: ([i32; 5],),
fld2: Adt45,
fld3: i8,

},
Variant3{
fld0: *const i32,
fld1: [u64; 5],
fld2: Adt49,
fld3: Adt42,
fld4: *mut char,
fld5: [u128; 2],
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: usize,
fld2: [char; 4],
fld3: [u16; 7],
fld4: i128,
fld5: Adt47,
fld6: Adt45,

},
Variant1{
fld0: [u64; 5],
fld1: Adt44,
fld2: Adt43,

},
Variant2{
fld0: u8,

},
Variant3{
fld0: Adt47,
fld1: [char; 4],
fld2: Adt49,
fld3: *const i128,
fld4: u128,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: [u128; 2],
fld1: [u16; 4],
fld2: *const u8,

},
Variant1{
fld0: *const u32,
fld1: *const i128,
fld2: *mut u16,
fld3: *const i32,
fld4: i16,
fld5: [i8; 7],

},
Variant2{
fld0: ([i32; 5],),

},
Variant3{
fld0: Adt45,

}}
#[derive(Debug)]
pub struct Adt54 {
fld0: (char, u32, [u32; 2]),
fld1: [i32; 5],
fld2: [u32; 2],
fld3: Adt49,
fld4: [i8; 7],
fld5: ([i32; 5],),
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt53,
fld1: ([i32; 5],),
fld2: isize,
fld3: [i16; 4],

},
Variant1{
fld0: bool,
fld1: char,
fld2: u16,
fld3: [u128; 8],
fld4: Adt47,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *const u32,
fld1: char,
fld2: f32,
fld3: Adt44,
fld4: ([i32; 5],),

},
Variant1{
fld0: i64,
fld1: *const u8,
fld2: Adt53,

},
Variant2{
fld0: *const i32,
fld1: char,
fld2: Adt52,
fld3: [i16; 4],
fld4: [char; 4],

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt46,
fld1: *const i32,
fld2: [i8; 7],
fld3: i8,
fld4: u128,
fld5: [char; 7],
fld6: Adt44,

},
Variant1{
fld0: Adt43,
fld1: [u128; 8],
fld2: (i32, i16, f32, i8, u128),
fld3: *mut u128,
fld4: usize,
fld5: f64,
fld6: u8,
fld7: i128,

}}
#[derive(Debug)]
pub struct Adt58 {
fld0: [u16; 7],
fld1: Adt44,
fld2: u8,
fld3: Adt50,
fld4: *const i32,
}

