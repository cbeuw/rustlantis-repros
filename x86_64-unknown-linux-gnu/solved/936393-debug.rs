#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: i128,mut _3: isize,mut _4: i8,mut _5: u16,mut _6: u64) -> u32 {
mir! {
type RET = u32;
let _7: [i32; 2];
let _8: i8;
let _9: isize;
let _10: f64;
let _11: f64;
let _12: ([u128; 3], f64, [u16; 5]);
let _13: f64;
let _14: [i16; 8];
let _15: isize;
let _16: [isize; 6];
let _17: [i32; 2];
let _18: [u128; 3];
let _19: [i32; 2];
let _20: [i32; 2];
let _21: bool;
let _22: *mut ([u16; 5],);
let _23: char;
let _24: f64;
let _25: isize;
let _26: f32;
let _27: ([u16; 3],);
let _28: *const u128;
let _29: i128;
let _30: f32;
let _31: [i16; 8];
let _32: Adt40;
let _33: ();
let _34: ();
{
_4 = !(-107_i8);
RET = (-136541385954858102440591559223502957719_i128) as u32;
_5 = 5144_u16 | 25639_u16;
_2 = (-60233764454733079688292960986158378358_i128) >> _5;
_9 = !(-9223372036854775808_isize);
_3 = _9 >> _5;
_1 = true;
_8 = _4 ^ _4;
_4 = _8 * _8;
_6 = !14964379766888260585_u64;
_1 = _3 <= _3;
_7 = [1889212071_i32,1114477558_i32];
_5 = !11429_u16;
_10 = _3 as f64;
_9 = _3;
_4 = _8 ^ _8;
_9 = 57_u8 as isize;
_10 = 283305561638449952041853325414598280122_u128 as f64;
_7 = [(-2134892977_i32),1851957753_i32];
_9 = 914720048_i32 as isize;
_11 = -_10;
Call(_12.2 = fn1(_3, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 117121323938994110842349841429206076466_i128 << _4;
RET = 2470906467_u32;
_5 = !11653_u16;
Goto(bb2)
}
bb2 = {
_13 = _11 - _11;
_4 = _1 as i8;
match RET {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
2470906467 => bb10,
_ => bb9
}
}
bb3 = {
_2 = 117121323938994110842349841429206076466_i128 << _4;
RET = 2470906467_u32;
_5 = !11653_u16;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8 = 3_usize as i8;
_4 = _8 ^ _8;
_15 = !_3;
_17 = _7;
_12.1 = 6_usize as f64;
_16 = [_3,_15,_9,_3,_15,_15];
_3 = -_15;
_6 = (-3364206974602496823_i64) as u64;
_15 = !_9;
_14 = [(-4664_i16),(-15202_i16),5131_i16,(-13596_i16),21843_i16,453_i16,(-27602_i16),27286_i16];
_12.0 = [162412512342503598916335422808025187217_u128,106897522651232371894745649569307806119_u128,282510681632464673000783392173434221787_u128];
_15 = 336077106657180828520333219812373370732_u128 as isize;
_3 = -_9;
_18 = [48837972155026001245395934905542270761_u128,256598391986658534331797668167062268633_u128,52444684858130491611361867595394518135_u128];
_4 = !_8;
_18 = _12.0;
_7 = [(-293027083_i32),(-978701667_i32)];
_12.0 = _18;
_8 = _4 << _2;
Goto(bb11)
}
bb11 = {
_16 = [_15,_15,_15,_15,_9,_9];
RET = !3841844776_u32;
_10 = _12.1 + _13;
_4 = -_8;
_15 = _3;
_12.2 = [_5,_5,_5,_5,_5];
RET = '\u{f4f56}' as u32;
_21 = _1;
_15 = _9 << _8;
_13 = -_11;
_6 = _15 as u64;
_19 = _7;
_23 = '\u{44a4a}';
_7 = [1386773534_i32,(-592150938_i32)];
_23 = '\u{3971b}';
_9 = !_15;
_3 = (-1771024767_i32) as isize;
_11 = -_10;
_20 = [1301612219_i32,799646503_i32];
_9 = _15;
Goto(bb12)
}
bb12 = {
_7 = [(-1459862449_i32),(-674338996_i32)];
_10 = -_12.1;
_21 = _1 | _1;
_6 = !16365371788937934843_u64;
_8 = !_4;
_21 = _23 >= _23;
Goto(bb13)
}
bb13 = {
_20 = _7;
_20 = _7;
_12.1 = _8 as f64;
_26 = 88865830754027922633454228914793820086_u128 as f32;
_24 = _10;
_12.1 = -_11;
RET = 618000051_u32;
_17 = [1072421517_i32,177217402_i32];
_24 = _13;
_3 = RET as isize;
_3 = -_9;
_18 = [17973750550218233601718752881600532332_u128,293039033951548984092409318171240926964_u128,77597603196872008111718198670672169179_u128];
_12.1 = -_11;
_9 = _3;
Goto(bb14)
}
bb14 = {
_19 = [(-1868075949_i32),(-484386213_i32)];
_12.2 = [_5,_5,_5,_5,_5];
_21 = _9 <= _9;
_15 = _23 as isize;
_20 = [615015122_i32,1043537067_i32];
_25 = 1612924603_i32 as isize;
_17 = [1650881588_i32,1668149100_i32];
_26 = _13 as f32;
_9 = _3;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(0_usize, 23_usize, Move(_23), 19_usize, Move(_19), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(0_usize, 16_usize, Move(_16), 21_usize, Move(_21), 1_usize, Move(_1), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(0_usize, 7_usize, Move(_7), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: isize,mut _2: isize) -> [u16; 5] {
mir! {
type RET = [u16; 5];
let _3: Adt49;
let _4: [i32; 2];
let _5: ([u128; 3], f64, [u16; 5]);
let _6: isize;
let _7: Adt56;
let _8: isize;
let _9: isize;
let _10: Adt50;
let _11: [u128; 3];
let _12: i128;
let _13: ([isize; 6],);
let _14: *mut u16;
let _15: *mut i8;
let _16: isize;
let _17: Adt53;
let _18: f64;
let _19: Adt44;
let _20: u64;
let _21: [isize; 6];
let _22: i64;
let _23: char;
let _24: isize;
let _25: Adt48;
let _26: ((i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), [u128; 3], isize, i128, bool);
let _27: u8;
let _28: f64;
let _29: ([isize; 6],);
let _30: ();
let _31: ();
{
RET = [56981_u16,24097_u16,9457_u16,24724_u16,32520_u16];
RET = [8659_u16,57144_u16,43535_u16,15875_u16,7912_u16];
_2 = !_1;
RET = [50905_u16,47557_u16,18611_u16,55910_u16,47061_u16];
RET = [20231_u16,27814_u16,30759_u16,44058_u16,28334_u16];
_2 = _1;
_3 = Adt49::Variant1 { fld0: 9769963160289626205_u64 };
_3 = Adt49::Variant1 { fld0: 1663279920808433324_u64 };
place!(Field::<u64>(Variant(_3, 1), 0)) = 5370177467964111107_u64;
RET = [18969_u16,38675_u16,52364_u16,15390_u16,37810_u16];
RET = [56796_u16,20967_u16,41140_u16,50790_u16,20106_u16];
Goto(bb1)
}
bb1 = {
_2 = _1;
_1 = _2;
_2 = _1;
match Field::<u64>(Variant(_3, 1), 0) {
0 => bb2,
1 => bb3,
5370177467964111107 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1 = !_2;
_4 = [1377115562_i32,(-1431939999_i32)];
RET = [4861_u16,42394_u16,59306_u16,14402_u16,36319_u16];
_4 = [(-1111472191_i32),(-1986434564_i32)];
_5.0 = [223946909197420086792518886506889661895_u128,282181465562888794190104792874318796826_u128,181119824029197011563497299872974897987_u128];
_4 = [(-222856736_i32),(-27554063_i32)];
_4 = [(-553384510_i32),(-370375284_i32)];
RET = [41143_u16,8882_u16,13630_u16,5783_u16,32486_u16];
_5.0 = [270881394623110474771745086394758136147_u128,120144437817792886994009765344686452736_u128,220663101477578178129174416985272224176_u128];
place!(Field::<u64>(Variant(_3, 1), 0)) = 7921129961270100830_u64 >> _1;
_2 = _1 | _1;
Call(_7.fld5 = fn2(_2, _2, Field::<u64>(Variant(_3, 1), 0), _1, Field::<u64>(Variant(_3, 1), 0), _5.0, _2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_7.fld0 = 702740577_u32;
_8 = _2 ^ _2;
place!(Field::<([u16; 5],)>(Variant(_7.fld5, 0), 4)).0 = RET;
place!(Field::<f64>(Variant(_7.fld5, 0), 2)) = (-125_i8) as f64;
SetDiscriminant(_3, 1);
RET = [35116_u16,25373_u16,2667_u16,46045_u16,26926_u16];
_7.fld4.0 = (-4130471150027814837_i64) - 7493171275370082520_i64;
RET = [41187_u16,61033_u16,2961_u16,36638_u16,48986_u16];
_5 = (Field::<[u128; 3]>(Variant(_7.fld5, 0), 0), Field::<f64>(Variant(_7.fld5, 0), 2), RET);
place!(Field::<[u128; 3]>(Variant(_7.fld5, 0), 0)) = [Field::<u128>(Variant(_7.fld5, 0), 3),Field::<u128>(Variant(_7.fld5, 0), 3),Field::<u128>(Variant(_7.fld5, 0), 3)];
_7.fld4 = ((-5963602735136507400_i64),);
place!(Field::<([u16; 5],)>(Variant(_7.fld5, 0), 4)).0 = _5.2;
_5 = (Field::<[u128; 3]>(Variant(_7.fld5, 0), 0), Field::<f64>(Variant(_7.fld5, 0), 2), Field::<([u16; 5],)>(Variant(_7.fld5, 0), 4).0);
RET = [42267_u16,20640_u16,6253_u16,61320_u16,48244_u16];
SetDiscriminant(_7.fld5, 1);
Goto(bb7)
}
bb7 = {
place!(Field::<i32>(Variant(_7.fld5, 1), 5)) = -(-926616730_i32);
_5.1 = (-90_i8) as f64;
_8 = _1 & _2;
_7.fld4.0 = -7713071851835740497_i64;
match _7.fld0 {
0 => bb3,
1 => bb8,
2 => bb9,
702740577 => bb11,
_ => bb10
}
}
bb8 = {
_2 = _1;
_1 = _2;
_2 = _1;
match Field::<u64>(Variant(_3, 1), 0) {
0 => bb2,
1 => bb3,
5370177467964111107 => bb5,
_ => bb4
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_11 = [302516918133773497623203658777840775118_u128,198373515276023793828147530610616061099_u128,150818207200368323352271313519286644353_u128];
_5.0 = _11;
_9 = _1 << _8;
place!(Field::<isize>(Variant(_7.fld5, 1), 2)) = _2 << _9;
place!(Field::<u64>(Variant(_7.fld5, 1), 3)) = 12470405726467361023_u64;
_5.1 = _7.fld4.0 as f64;
_7.fld1 = [Field::<i32>(Variant(_7.fld5, 1), 5),Field::<i32>(Variant(_7.fld5, 1), 5)];
_7.fld0 = !2462910501_u32;
place!(Field::<(i16,)>(Variant(_7.fld5, 1), 7)) = ((-27574_i16),);
_6 = _7.fld0 as isize;
_11 = [330468201592016700336064531428702394242_u128,289631973706511191927637884537098575206_u128,183393424502057278971679769447008348072_u128];
_9 = 52674473090162184253637623543607064112_u128 as isize;
_20 = _7.fld4.0 as u64;
_4 = [Field::<i32>(Variant(_7.fld5, 1), 5),Field::<i32>(Variant(_7.fld5, 1), 5)];
_15 = core::ptr::addr_of_mut!(_7.fld3);
match Field::<u64>(Variant(_7.fld5, 1), 3) {
0 => bb1,
1 => bb10,
2 => bb9,
3 => bb4,
12470405726467361023 => bb12,
_ => bb5
}
}
bb12 = {
_13.0 = [Field::<isize>(Variant(_7.fld5, 1), 2),_1,_2,Field::<isize>(Variant(_7.fld5, 1), 2),_2,_8];
_5.2 = [960_u16,28529_u16,24186_u16,16615_u16,49033_u16];
_22 = _7.fld4.0 << _1;
place!(Field::<i64>(Variant(_7.fld5, 1), 6)) = -_22;
_17 = Adt53::Variant0 { fld0: _20 };
_4 = _7.fld1;
SetDiscriminant(_17, 2);
place!(Field::<isize>(Variant(_7.fld5, 1), 2)) = -_2;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_17, 2), 2)).0 = _5.0;
place!(Field::<*const i64>(Variant(_7.fld5, 1), 0)) = core::ptr::addr_of!(_7.fld4.0);
_2 = !_9;
_16 = -_2;
_26.1.1 = '\u{1035f5}';
_12 = (-108268371754705749091752075389340186455_i128) - (-28490701389950171949265919600231234725_i128);
_6 = _7.fld0 as isize;
place!(Field::<([u16; 5],)>(Variant(_17, 2), 1)).0 = [44741_u16,51276_u16,6248_u16,47581_u16,29623_u16];
place!(Field::<u64>(Variant(_3, 1), 0)) = !_20;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_17, 2), 2)).0 = _11;
_7.fld4 = (_22,);
_26.1.1 = '\u{3f39d}';
_26.1.5.2 = 25861_u16 as u64;
_22 = _7.fld4.0 << _6;
match Field::<u64>(Variant(_7.fld5, 1), 3) {
0 => bb9,
1 => bb10,
2 => bb13,
12470405726467361023 => bb15,
_ => bb14
}
}
bb13 = {
_11 = [302516918133773497623203658777840775118_u128,198373515276023793828147530610616061099_u128,150818207200368323352271313519286644353_u128];
_5.0 = _11;
_9 = _1 << _8;
place!(Field::<isize>(Variant(_7.fld5, 1), 2)) = _2 << _9;
place!(Field::<u64>(Variant(_7.fld5, 1), 3)) = 12470405726467361023_u64;
_5.1 = _7.fld4.0 as f64;
_7.fld1 = [Field::<i32>(Variant(_7.fld5, 1), 5),Field::<i32>(Variant(_7.fld5, 1), 5)];
_7.fld0 = !2462910501_u32;
place!(Field::<(i16,)>(Variant(_7.fld5, 1), 7)) = ((-27574_i16),);
_6 = _7.fld0 as isize;
_11 = [330468201592016700336064531428702394242_u128,289631973706511191927637884537098575206_u128,183393424502057278971679769447008348072_u128];
_9 = 52674473090162184253637623543607064112_u128 as isize;
_20 = _7.fld4.0 as u64;
_4 = [Field::<i32>(Variant(_7.fld5, 1), 5),Field::<i32>(Variant(_7.fld5, 1), 5)];
_15 = core::ptr::addr_of_mut!(_7.fld3);
match Field::<u64>(Variant(_7.fld5, 1), 3) {
0 => bb1,
1 => bb10,
2 => bb9,
3 => bb4,
12470405726467361023 => bb12,
_ => bb5
}
}
bb14 = {
_7.fld0 = 702740577_u32;
_8 = _2 ^ _2;
place!(Field::<([u16; 5],)>(Variant(_7.fld5, 0), 4)).0 = RET;
place!(Field::<f64>(Variant(_7.fld5, 0), 2)) = (-125_i8) as f64;
SetDiscriminant(_3, 1);
RET = [35116_u16,25373_u16,2667_u16,46045_u16,26926_u16];
_7.fld4.0 = (-4130471150027814837_i64) - 7493171275370082520_i64;
RET = [41187_u16,61033_u16,2961_u16,36638_u16,48986_u16];
_5 = (Field::<[u128; 3]>(Variant(_7.fld5, 0), 0), Field::<f64>(Variant(_7.fld5, 0), 2), RET);
place!(Field::<[u128; 3]>(Variant(_7.fld5, 0), 0)) = [Field::<u128>(Variant(_7.fld5, 0), 3),Field::<u128>(Variant(_7.fld5, 0), 3),Field::<u128>(Variant(_7.fld5, 0), 3)];
_7.fld4 = ((-5963602735136507400_i64),);
place!(Field::<([u16; 5],)>(Variant(_7.fld5, 0), 4)).0 = _5.2;
_5 = (Field::<[u128; 3]>(Variant(_7.fld5, 0), 0), Field::<f64>(Variant(_7.fld5, 0), 2), Field::<([u16; 5],)>(Variant(_7.fld5, 0), 4).0);
RET = [42267_u16,20640_u16,6253_u16,61320_u16,48244_u16];
SetDiscriminant(_7.fld5, 1);
Goto(bb7)
}
bb15 = {
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_17, 2), 2)) = (_11, _5.1, RET);
_26.0.1 = _26.1.1;
_7.fld1 = [Field::<i32>(Variant(_7.fld5, 1), 5),Field::<i32>(Variant(_7.fld5, 1), 5)];
_7.fld4.0 = _22;
_28 = _5.1;
_26.1.3 = !137_u8;
_26.1.5.0 = &place!(Field::<(i16,)>(Variant(_7.fld5, 1), 7));
Goto(bb16)
}
bb16 = {
Call(_30 = dump_var(1_usize, 1_usize, Move(_1), 22_usize, Move(_22), 8_usize, Move(_8), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(1_usize, 9_usize, Move(_9), 20_usize, Move(_20), 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: isize,mut _2: isize,mut _3: u64,mut _4: isize,mut _5: u64,mut _6: [u128; 3],mut _7: isize) -> Adt42 {
mir! {
type RET = Adt42;
let _8: f32;
let _9: isize;
let _10: Adt49;
let _11: ((i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), [u128; 3], isize, i128, bool);
let _12: u8;
let _13: *mut i8;
let _14: bool;
let _15: Adt44;
let _16: u128;
let _17: Adt46;
let _18: [i16; 8];
let _19: Adt55;
let _20: f32;
let _21: i8;
let _22: f64;
let _23: isize;
let _24: f32;
let _25: (&'static (i16,), f64, u64);
let _26: char;
let _27: bool;
let _28: *mut isize;
let _29: i128;
let _30: (i64,);
let _31: Adt42;
let _32: [isize; 6];
let _33: isize;
let _34: f64;
let _35: [isize; 6];
let _36: ([u16; 5],);
let _37: *mut i8;
let _38: f32;
let _39: [u128; 3];
let _40: [i16; 8];
let _41: f32;
let _42: Adt44;
let _43: isize;
let _44: [u128; 3];
let _45: isize;
let _46: [u16; 5];
let _47: [i16; 8];
let _48: isize;
let _49: u16;
let _50: Adt54;
let _51: isize;
let _52: f32;
let _53: [i16; 8];
let _54: isize;
let _55: isize;
let _56: char;
let _57: ([u16; 3],);
let _58: *mut u16;
let _59: usize;
let _60: Adt48;
let _61: (i16,);
let _62: [u16; 5];
let _63: usize;
let _64: u128;
let _65: u8;
let _66: Adt46;
let _67: Adt55;
let _68: ([u16; 5],);
let _69: u128;
let _70: usize;
let _71: Adt56;
let _72: ([isize; 6],);
let _73: f64;
let _74: ([isize; 6],);
let _75: [u128; 3];
let _76: (&'static (i16,), f64, u64);
let _77: Adt45;
let _78: *mut ([u16; 5],);
let _79: (i16,);
let _80: isize;
let _81: [u16; 5];
let _82: (&'static (i16,), f64, u64);
let _83: u16;
let _84: ([u16; 3],);
let _85: [i32; 2];
let _86: f32;
let _87: [isize; 6];
let _88: ((i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), [u128; 3], isize, i128, bool);
let _89: char;
let _90: isize;
let _91: &'static (i16,);
let _92: ([isize; 6],);
let _93: ([u16; 5],);
let _94: bool;
let _95: i64;
let _96: char;
let _97: Adt45;
let _98: *const char;
let _99: [u128; 3];
let _100: i32;
let _101: bool;
let _102: isize;
let _103: Adt41;
let _104: isize;
let _105: f32;
let _106: [u128; 3];
let _107: ((i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), [u128; 3], isize, i128, bool);
let _108: [u16; 3];
let _109: [i32; 2];
let _110: Adt50;
let _111: isize;
let _112: isize;
let _113: f32;
let _114: [u128; 3];
let _115: i16;
let _116: i16;
let _117: isize;
let _118: *const i64;
let _119: Adt42;
let _120: u32;
let _121: ([u128; 3], f64, [u16; 5]);
let _122: Adt40;
let _123: ([u16; 3],);
let _124: f32;
let _125: [u16; 3];
let _126: i8;
let _127: [u128; 3];
let _128: Adt55;
let _129: Adt46;
let _130: Adt46;
let _131: f32;
let _132: f32;
let _133: i16;
let _134: ();
let _135: ();
{
_2 = _7 >> _1;
_1 = _4;
_5 = !_3;
_2 = !_4;
_5 = _4 as u64;
_5 = !_3;
_1 = !_4;
_3 = (-1303565286_i32) as u64;
_4 = _7;
_5 = !_3;
_3 = _5 - _5;
_8 = 8627_u16 as f32;
_9 = _7;
_5 = _3;
_1 = _9 - _9;
_1 = (-32_i8) as isize;
_1 = _8 as isize;
_2 = _9 * _7;
_8 = 49522_u16 as f32;
_3 = _5 & _5;
_5 = !_3;
_6 = [273193597161666918729933447742703694070_u128,307357674052196539573482924451136969107_u128,300691654105788616125213636707523102997_u128];
Goto(bb1)
}
bb1 = {
_9 = _2 - _7;
_10 = Adt49::Variant1 { fld0: _3 };
_11.0.3 = 133539837475050823085551636315952939243_i128 as u8;
_11.1.5.1 = _11.0.3 as f64;
_3 = Field::<u64>(Variant(_10, 1), 0) | Field::<u64>(Variant(_10, 1), 0);
place!(Field::<u64>(Variant(_10, 1), 0)) = !_5;
_11.3 = 1628860628_u32 as isize;
_11.1.1 = '\u{e194d}';
_11.0.5.1 = _11.1.5.1;
_11.3 = _9 - _9;
_11.1.0 = !(-15650_i16);
_2 = -_11.3;
_11.2 = [293419357415487894704811405203477917150_u128,163896954830972909071779159951648239550_u128,33127262018916773728740401022169059289_u128];
SetDiscriminant(_10, 0);
place!(Field::<*mut u16>(Variant(_10, 0), 1)) = core::ptr::addr_of_mut!(_11.0.4);
_11.5 = true;
_11.1.0 = -(-12935_i16);
Goto(bb2)
}
bb2 = {
_2 = _11.3 >> _9;
_11.1.4 = !63217_u16;
_9 = _11.1.0 as isize;
_11.1.1 = '\u{889f0}';
_11.0.5.1 = _11.1.5.1 * _11.1.5.1;
_11.0.2 = [_11.1.4,_11.1.4,_11.1.4,_11.1.4,_11.1.4];
_11.0.3 = !167_u8;
_11.0.5.0 = &place!(Field::<(i16,)>(Variant(_10, 0), 0));
_3 = _5;
_14 = !_11.5;
_4 = (-120107007057730838843097639714308322819_i128) as isize;
_11.0.2 = [_11.1.4,_11.1.4,_11.1.4,_11.1.4,_11.1.4];
_11.1.5 = (Move(_11.0.5.0), _11.0.5.1, _3);
_11.0.1 = _11.1.1;
_11.0.4 = _11.0.3 as u16;
_10 = Adt49::Variant1 { fld0: _11.1.5.2 };
_11.1.3 = !_11.0.3;
Goto(bb3)
}
bb3 = {
_11.4 = 2573929914_u32 as i128;
_11.1.1 = _11.0.1;
_12 = !_11.0.3;
SetDiscriminant(_10, 1);
_11.1.4 = !_11.0.4;
_11.1.5.2 = _3;
_8 = 198318415858473720463187821609286621061_u128 as f32;
place!(Field::<u64>(Variant(_10, 1), 0)) = _5 - _3;
_16 = !336925802033125422776608252670912029995_u128;
_13 = core::ptr::addr_of_mut!(_21);
_11.1.2 = [_11.0.4,_11.0.4,_11.0.4,_11.1.4,_11.1.4];
_9 = -_11.3;
_11.0.5.1 = 2143546182_i32 as f64;
_23 = !_11.3;
_11.1.0 = -32574_i16;
_4 = _9;
Goto(bb4)
}
bb4 = {
_2 = Field::<u64>(Variant(_10, 1), 0) as isize;
Call(_9 = fn3(_11.3, _23, _23, _4), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_11.0.5.1 = _11.1.5.1;
_11.0.5.2 = !_5;
_22 = -_11.0.5.1;
_24 = _8 * _8;
place!(Field::<u64>(Variant(_10, 1), 0)) = !_11.1.5.2;
_11.0.0 = _11.1.0 << _9;
_11.0.1 = _11.1.1;
_11.1.5.2 = _5;
Goto(bb6)
}
bb6 = {
_12 = !_11.0.3;
_11.1.5.1 = _22 * _22;
_11.3 = _9;
_25.2 = _3 + _5;
_11.1.3 = _11.4 as u8;
_20 = _11.1.3 as f32;
_25.1 = 827866274_i32 as f64;
_11.0.3 = _12 + _11.1.3;
_11.1.0 = _11.0.0;
_11.0.2 = [_11.1.4,_11.0.4,_11.1.4,_11.0.4,_11.0.4];
Goto(bb7)
}
bb7 = {
_1 = !_9;
_11.0.0 = !_11.1.0;
_11.0.5.1 = _11.1.5.1 + _11.1.5.1;
_30 = (6841957842010476951_i64,);
_11.5 = _14;
_11.3 = !_9;
Goto(bb8)
}
bb8 = {
_11.0.4 = _11.1.4 ^ _11.1.4;
_24 = _20 * _20;
_11.0.5.2 = _5 << _4;
_11.1.3 = (-1398885675_i32) as u8;
_11.0.5.1 = _11.1.5.1;
_11.0.5.1 = _22 * _25.1;
_20 = -_8;
_28 = core::ptr::addr_of_mut!(_4);
_33 = _1;
_11.0.3 = !_11.1.3;
_18 = [_11.0.0,_11.1.0,_11.1.0,_11.1.0,_11.1.0,_11.0.0,_11.1.0,_11.0.0];
_11.0.1 = _11.1.1;
_26 = _11.0.1;
_11.1.2 = [_11.0.4,_11.0.4,_11.1.4,_11.0.4,_11.0.4];
_11.1.1 = _26;
_34 = _11.0.5.2 as f64;
match _30.0 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb4,
6841957842010476951 => bb10,
_ => bb9
}
}
bb9 = {
_1 = !_9;
_11.0.0 = !_11.1.0;
_11.0.5.1 = _11.1.5.1 + _11.1.5.1;
_30 = (6841957842010476951_i64,);
_11.5 = _14;
_11.3 = !_9;
Goto(bb8)
}
bb10 = {
_35 = [_9,_11.3,_1,(*_28),_11.3,_23];
_22 = _34;
place!(Field::<u64>(Variant(_10, 1), 0)) = _11.0.5.2;
_8 = _20;
_37 = core::ptr::addr_of_mut!((*_13));
_34 = _25.1 - _11.0.5.1;
_36.0 = [_11.0.4,_11.0.4,_11.0.4,_11.1.4,_11.0.4];
_11.1.5.1 = _22 + _22;
_21 = -(-126_i8);
_3 = !Field::<u64>(Variant(_10, 1), 0);
_38 = _20;
_10 = Adt49::Variant1 { fld0: _11.0.5.2 };
_6 = _11.2;
_11.1.2 = [_11.1.4,_11.1.4,_11.1.4,_11.0.4,_11.1.4];
_11.0.4 = !_11.1.4;
_6 = _11.2;
match _30.0 {
0 => bb11,
1 => bb12,
6841957842010476951 => bb14,
_ => bb13
}
}
bb11 = {
_1 = !_9;
_11.0.0 = !_11.1.0;
_11.0.5.1 = _11.1.5.1 + _11.1.5.1;
_30 = (6841957842010476951_i64,);
_11.5 = _14;
_11.3 = !_9;
Goto(bb8)
}
bb12 = {
_12 = !_11.0.3;
_11.1.5.1 = _22 * _22;
_11.3 = _9;
_25.2 = _3 + _5;
_11.1.3 = _11.4 as u8;
_20 = _11.1.3 as f32;
_25.1 = 827866274_i32 as f64;
_11.0.3 = _12 + _11.1.3;
_11.1.0 = _11.0.0;
_11.0.2 = [_11.1.4,_11.0.4,_11.1.4,_11.0.4,_11.0.4];
Goto(bb7)
}
bb13 = {
_11.0.5.1 = _11.1.5.1;
_11.0.5.2 = !_5;
_22 = -_11.0.5.1;
_24 = _8 * _8;
place!(Field::<u64>(Variant(_10, 1), 0)) = !_11.1.5.2;
_11.0.0 = _11.1.0 << _9;
_11.0.1 = _11.1.1;
_11.1.5.2 = _5;
Goto(bb6)
}
bb14 = {
_11.2 = [_16,_16,_16];
_16 = 24799926473942438973463406254342494005_u128 & 79555359027247754886985361866473006002_u128;
_36 = (_11.1.2,);
_11.1.4 = _11.0.4;
_1 = _23 * _33;
_27 = _11.5;
_11.2 = [_16,_16,_16];
_40 = [_11.0.0,_11.1.0,_11.1.0,_11.1.0,_11.1.0,_11.1.0,_11.0.0,_11.0.0];
_38 = _24;
_29 = -_11.4;
_11.0.2 = _36.0;
_38 = _24 * _24;
_26 = _11.1.1;
_11.0.0 = _11.1.0 * _11.1.0;
Call(place!(Field::<u64>(Variant(_10, 1), 0)) = core::intrinsics::bswap(_11.0.5.2), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_24 = 2_usize as f32;
_11.5 = _11.0.3 < _12;
_11.0.2 = _36.0;
_12 = _11.0.3;
_11.4 = _29;
_38 = _8;
Call(_17.fld0.0 = fn4(_35, _11.1.0, _10, _28, _23, _22, _4, _35, (*_28), _11.0.4, _11.1.0, _1, _22), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_47 = _18;
_11.0.1 = _11.1.1;
_11.1.1 = _26;
_37 = core::ptr::addr_of_mut!((*_37));
_25.2 = !_3;
_46 = _11.1.2;
_11.1.4 = _11.0.4 * _11.0.4;
_30.0 = (-8973646552195595968_i64) & 4902084387985568098_i64;
_21 = -(-82_i8);
_11.3 = _11.0.1 as isize;
_18 = [_11.0.0,_11.0.0,_11.1.0,_11.0.0,_11.0.0,_11.0.0,_11.1.0,_11.0.0];
SetDiscriminant(_10, 1);
_41 = -_38;
_27 = _11.5;
_32 = [_9,_7,_33,_4,_9,(*_28)];
_5 = _11.0.5.2 >> _33;
_6 = _11.2;
_18 = [_11.0.0,_11.0.0,_11.1.0,_11.0.0,_11.1.0,_11.1.0,_11.0.0,_11.0.0];
_53 = [_11.0.0,_11.1.0,_11.1.0,_11.0.0,_11.0.0,_11.1.0,_11.0.0,_11.0.0];
_11.5 = _27;
_34 = -_11.1.5.1;
_21 = (-61_i8) >> _9;
_52 = _8;
Goto(bb17)
}
bb17 = {
_11.0.2 = [_11.1.4,_11.0.4,_11.1.4,_11.1.4,_11.1.4];
_25.2 = !_5;
_44 = _6;
_11.1.5.1 = _11.1.0 as f64;
_38 = -_41;
_20 = _38;
_23 = _11.1.4 as isize;
_5 = 3199121942_u32 as u64;
_11.1.0 = (-771428937_i32) as i16;
_30.0 = _11.1.4 as i64;
_56 = _11.0.1;
_48 = -_33;
_36 = (_11.0.2,);
_53 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_57.0 = [_11.1.4,_11.1.4,_11.0.4];
_1 = !(*_28);
_55 = _33 | _48;
_7 = _29 as isize;
_58 = core::ptr::addr_of_mut!(_11.1.4);
_20 = _11.0.3 as f32;
Goto(bb18)
}
bb18 = {
_13 = core::ptr::addr_of_mut!(_21);
_52 = _24;
_58 = core::ptr::addr_of_mut!((*_58));
_3 = !_25.2;
_23 = _26 as isize;
_49 = (*_58) ^ _11.0.4;
_2 = (*_28) | _33;
_38 = _16 as f32;
_11.1.5.2 = _25.2 * _11.0.5.2;
_55 = (*_28) | _9;
_52 = -_41;
_51 = _48 >> _11.0.0;
_11.2 = _6;
_25.2 = _11.0.3 as u64;
_36.0 = [(*_58),(*_58),(*_58),(*_58),(*_58)];
_25.0 = &_61;
Call(_11.2 = core::intrinsics::transmute(_35), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
_11.1 = (_11.0.0, _56, _46, _12, _49, Move(_25));
_4 = !_1;
_66.fld0 = (_17.fld0.0,);
_65 = 7_usize as u8;
_54 = -_1;
_6 = [_16,_16,_16];
_62 = _36.0;
_18 = [_11.1.0,_11.1.0,_11.1.0,_11.0.0,_11.1.0,_11.0.0,_11.0.0,_11.1.0];
_59 = 15004409398440763933_usize + 4674415159340301921_usize;
_11.0.3 = _11.1.3;
_11.1.5.0 = &_61;
_68 = (_62,);
_45 = _11.1.0 as isize;
_25.0 = &_61;
_11.1.5.2 = _3 & _11.0.5.2;
_68.0 = [(*_58),_11.1.4,(*_58),(*_58),(*_58)];
_38 = _20;
_13 = core::ptr::addr_of_mut!(_21);
_32 = [_2,_51,_48,_2,_33,_45];
_35 = _66.fld0.0;
Goto(bb20)
}
bb20 = {
_37 = _13;
_58 = core::ptr::addr_of_mut!((*_58));
_11.4 = -_29;
place!(Field::<u64>(Variant(_10, 1), 0)) = !_3;
_1 = _52 as isize;
_70 = !_59;
_25 = Move(_11.1.5);
_25.0 = &_61;
_30 = ((-6075023378732452650_i64),);
_71.fld7 = _11.4 - _29;
SetDiscriminant(_10, 1);
_74.0 = [_9,(*_28),_55,_2,_55,_54];
_30 = ((-3956157160244806119_i64),);
_41 = -_24;
_74.0 = _35;
_62 = [(*_58),_49,_49,_49,_11.1.4];
_43 = _51;
_11.2 = [_16,_16,_16];
Call(_77 = fn5(_48, _74.0, Move(_17), Move(_66), (*_13), _74, _11.0.3, (*_28), _25.2, Move(_25), _37, _11.1.0, _2, _28), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_65 = _12;
_27 = (*_28) <= _2;
_14 = Field::<bool>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 0) ^ _27;
_25.1 = Field::<([u128; 3], f64, [u16; 5])>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 1).1;
_74.0 = [_51,_55,_43,_48,_48,_4];
place!(Field::<bool>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 0)) = _33 < _9;
_61.0 = !_11.1.0;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 1)).0 = Field::<[u128; 3]>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 3);
_18 = [_11.1.0,_61.0,Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,_11.0.0,_61.0,_61.0,_11.0.0,_11.0.0];
_11.5 = _27;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 1)).2 = _62;
match _30.0 {
0 => bb14,
1 => bb11,
2 => bb3,
3 => bb10,
4 => bb5,
5 => bb6,
340282366920938463459418450271523405337 => bb23,
_ => bb22
}
}
bb22 = {
_24 = 2_usize as f32;
_11.5 = _11.0.3 < _12;
_11.0.2 = _36.0;
_12 = _11.0.3;
_11.4 = _29;
_38 = _8;
Call(_17.fld0.0 = fn4(_35, _11.1.0, _10, _28, _23, _22, _4, _35, (*_28), _11.0.4, _11.1.0, _1, _22), ReturnTo(bb16), UnwindUnreachable())
}
bb23 = {
match _30.0 {
0 => bb24,
1 => bb25,
2 => bb26,
3 => bb27,
4 => bb28,
340282366920938463459418450271523405337 => bb30,
_ => bb29
}
}
bb24 = {
_47 = _18;
_11.0.1 = _11.1.1;
_11.1.1 = _26;
_37 = core::ptr::addr_of_mut!((*_37));
_25.2 = !_3;
_46 = _11.1.2;
_11.1.4 = _11.0.4 * _11.0.4;
_30.0 = (-8973646552195595968_i64) & 4902084387985568098_i64;
_21 = -(-82_i8);
_11.3 = _11.0.1 as isize;
_18 = [_11.0.0,_11.0.0,_11.1.0,_11.0.0,_11.0.0,_11.0.0,_11.1.0,_11.0.0];
SetDiscriminant(_10, 1);
_41 = -_38;
_27 = _11.5;
_32 = [_9,_7,_33,_4,_9,(*_28)];
_5 = _11.0.5.2 >> _33;
_6 = _11.2;
_18 = [_11.0.0,_11.0.0,_11.1.0,_11.0.0,_11.1.0,_11.1.0,_11.0.0,_11.0.0];
_53 = [_11.0.0,_11.1.0,_11.1.0,_11.0.0,_11.0.0,_11.1.0,_11.0.0,_11.0.0];
_11.5 = _27;
_34 = -_11.1.5.1;
_21 = (-61_i8) >> _9;
_52 = _8;
Goto(bb17)
}
bb25 = {
_12 = !_11.0.3;
_11.1.5.1 = _22 * _22;
_11.3 = _9;
_25.2 = _3 + _5;
_11.1.3 = _11.4 as u8;
_20 = _11.1.3 as f32;
_25.1 = 827866274_i32 as f64;
_11.0.3 = _12 + _11.1.3;
_11.1.0 = _11.0.0;
_11.0.2 = [_11.1.4,_11.0.4,_11.1.4,_11.0.4,_11.0.4];
Goto(bb7)
}
bb26 = {
_37 = _13;
_58 = core::ptr::addr_of_mut!((*_58));
_11.4 = -_29;
place!(Field::<u64>(Variant(_10, 1), 0)) = !_3;
_1 = _52 as isize;
_70 = !_59;
_25 = Move(_11.1.5);
_25.0 = &_61;
_30 = ((-6075023378732452650_i64),);
_71.fld7 = _11.4 - _29;
SetDiscriminant(_10, 1);
_74.0 = [_9,(*_28),_55,_2,_55,_54];
_30 = ((-3956157160244806119_i64),);
_41 = -_24;
_74.0 = _35;
_62 = [(*_58),_49,_49,_49,_11.1.4];
_43 = _51;
_11.2 = [_16,_16,_16];
Call(_77 = fn5(_48, _74.0, Move(_17), Move(_66), (*_13), _74, _11.0.3, (*_28), _25.2, Move(_25), _37, _11.1.0, _2, _28), ReturnTo(bb21), UnwindUnreachable())
}
bb27 = {
_1 = !_9;
_11.0.0 = !_11.1.0;
_11.0.5.1 = _11.1.5.1 + _11.1.5.1;
_30 = (6841957842010476951_i64,);
_11.5 = _14;
_11.3 = !_9;
Goto(bb8)
}
bb28 = {
_13 = core::ptr::addr_of_mut!(_21);
_52 = _24;
_58 = core::ptr::addr_of_mut!((*_58));
_3 = !_25.2;
_23 = _26 as isize;
_49 = (*_58) ^ _11.0.4;
_2 = (*_28) | _33;
_38 = _16 as f32;
_11.1.5.2 = _25.2 * _11.0.5.2;
_55 = (*_28) | _9;
_52 = -_41;
_51 = _48 >> _11.0.0;
_11.2 = _6;
_25.2 = _11.0.3 as u64;
_36.0 = [(*_58),(*_58),(*_58),(*_58),(*_58)];
_25.0 = &_61;
Call(_11.2 = core::intrinsics::transmute(_35), ReturnTo(bb19), UnwindUnreachable())
}
bb29 = {
_1 = !_9;
_11.0.0 = !_11.1.0;
_11.0.5.1 = _11.1.5.1 + _11.1.5.1;
_30 = (6841957842010476951_i64,);
_11.5 = _14;
_11.3 = !_9;
Goto(bb8)
}
bb30 = {
_25.0 = &_61;
_71.fld4 = (Field::<i64>(Variant(_77, 1), 6),);
_25.2 = Field::<u64>(Variant(_77, 1), 1);
_47 = [_61.0,_11.0.0,_11.0.0,_61.0,_11.0.0,_11.1.0,_11.0.0,_11.0.0];
_11.0.2 = [(*_58),_11.1.4,(*_58),(*_58),_11.1.4];
_18 = [_11.1.0,_61.0,_61.0,_61.0,_11.1.0,_11.1.0,_61.0,_11.0.0];
place!(Field::<u64>(Variant(_10, 1), 0)) = (*_58) as u64;
_25.2 = _45 as u64;
_30 = _71.fld4;
_55 = _43 ^ _2;
_11.1.5.2 = _11.0.5.2;
_84 = _57;
_59 = Field::<usize>(Variant(_77, 1), 3);
place!(Field::<[i32; 2]>(Variant(_77, 1), 2)) = [Field::<i32>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 5),Field::<i32>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 5)];
_84.0 = _57.0;
_76.2 = _25.2;
_15 = Adt44::Variant2 { fld0: _11.0.3,fld1: _37,fld2: _71.fld4,fld3: (*_13),fld4: _11.0.0,fld5: Field::<([u128; 3], f64, [u16; 5])>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 1),fld6: _74 };
_29 = !_11.4;
Goto(bb31)
}
bb31 = {
_56 = _11.0.1;
SetDiscriminant(Field::<Adt40>(Variant(_77, 1), 5), 3);
_82.1 = -_25.1;
_79.0 = _49 as i16;
_63 = _33 as usize;
_61 = _79;
_72.0 = Field::<([isize; 6],)>(Variant(_15, 2), 6).0;
place!(Field::<(i64,)>(Variant(_15, 2), 2)).0 = _71.fld4.0 + _71.fld4.0;
_71.fld6 = Adt41::Variant1 { fld0: _84,fld1: _18,fld2: _2,fld3: Field::<[i32; 2]>(Variant(_77, 1), 2) };
place!(Field::<[u128; 3]>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 3), 1)) = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_71.fld4.0 = !_30.0;
_13 = _37;
_11.0.2 = [(*_58),(*_58),(*_58),(*_58),(*_58)];
Goto(bb32)
}
bb32 = {
place!(Field::<i8>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 3), 3)) = _21 >> Field::<isize>(Variant(_71.fld6, 1), 2);
_11.0.5.0 = &_61;
place!(Field::<usize>(Variant(_77, 1), 3)) = _63 + _63;
_82.0 = &_61;
_81 = [(*_58),(*_58),(*_58),_11.1.4,(*_58)];
_37 = core::ptr::addr_of_mut!(_71.fld3);
_68.0 = _11.0.2;
SetDiscriminant(_10, 1);
_32 = [(*_28),_45,(*_28),_45,_2,_51];
_50 = Adt54::Variant2 { fld0: _46,fld1: Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5) };
_76.1 = _34 * Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5).1;
_57 = (Field::<([u16; 3],)>(Variant(_71.fld6, 1), 0).0,);
_11.1.3 = _65 | _65;
_88.0.5.1 = Field::<u128>(Variant(_77, 1), 4) as f64;
_11.1.5.0 = &_79;
Call(_11.1.5.1 = core::intrinsics::fmaf64(_76.1, _76.1, Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1).1), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_88.0.5.2 = Field::<u64>(Variant(_77, 1), 1);
_50 = Adt54::Variant2 { fld0: _11.0.2,fld1: Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5) };
_12 = 308536919_i32 as u8;
_88.0.2 = [_11.1.4,(*_58),_11.1.4,_11.1.4,_11.1.4];
_5 = !_3;
_76.0 = Move(_11.0.5.0);
_88.0.0 = -Field::<i16>(Variant(_15, 2), 4);
_88.0 = Move(_11.1);
_88.1.1 = _11.0.1;
_88.0.4 = 4168285826_u32 as u16;
place!(Field::<([u16; 3],)>(Variant(_71.fld6, 1), 0)) = (_84.0,);
place!(Field::<[i32; 2]>(Variant(_77, 1), 2)) = [(-1724844398_i32),(-757365112_i32)];
_88.0.5 = (Move(_82.0), _76.1, _76.2);
_47 = [_88.0.0,Field::<i16>(Variant(_15, 2), 4),_88.0.0,Field::<i16>(Variant(_15, 2), 4),_11.0.0,_11.0.0,_88.0.0,_11.0.0];
_47 = [Field::<i16>(Variant(_15, 2), 4),Field::<i16>(Variant(_15, 2), 4),_11.0.0,Field::<i16>(Variant(_15, 2), 4),_11.0.0,_88.0.0,_79.0,_11.0.0];
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1)).0 = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_82.0 = &_61;
_88.0.5.0 = Move(_82.0);
place!(Field::<f32>(Variant(_77, 1), 0)) = -_8;
_26 = _11.0.1;
_11.1.5.0 = &_79;
place!(Field::<([u16; 3],)>(Variant(_71.fld6, 1), 0)).0 = [_49,_11.0.4,_49];
_11.5 = !_14;
_17.fld0 = (Field::<([isize; 6],)>(Variant(_15, 2), 6).0,);
_10 = Adt49::Variant1 { fld0: _76.2 };
Goto(bb34)
}
bb34 = {
_25.2 = Field::<usize>(Variant(_77, 1), 3) as u64;
_88.0.5.0 = &_79;
_92.0 = [_33,_54,_43,_45,Field::<isize>(Variant(_71.fld6, 1), 2),Field::<isize>(Variant(_71.fld6, 1), 2)];
place!(Field::<Adt40>(Variant(_77, 1), 5)) = Adt40::Variant2 { fld0: 114709499_u32,fld1: _49 };
_20 = _8;
_71.fld7 = 3074379292_u32 as i128;
place!(Field::<u32>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 2), 0)) = 4063108669_u32;
SetDiscriminant(_71.fld6, 1);
_94 = Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5).1 <= Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1).1;
match Field::<u32>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 2), 0) {
0 => bb20,
1 => bb35,
2 => bb36,
3 => bb37,
4063108669 => bb39,
_ => bb38
}
}
bb35 = {
_37 = _13;
_58 = core::ptr::addr_of_mut!((*_58));
_11.4 = -_29;
place!(Field::<u64>(Variant(_10, 1), 0)) = !_3;
_1 = _52 as isize;
_70 = !_59;
_25 = Move(_11.1.5);
_25.0 = &_61;
_30 = ((-6075023378732452650_i64),);
_71.fld7 = _11.4 - _29;
SetDiscriminant(_10, 1);
_74.0 = [_9,(*_28),_55,_2,_55,_54];
_30 = ((-3956157160244806119_i64),);
_41 = -_24;
_74.0 = _35;
_62 = [(*_58),_49,_49,_49,_11.1.4];
_43 = _51;
_11.2 = [_16,_16,_16];
Call(_77 = fn5(_48, _74.0, Move(_17), Move(_66), (*_13), _74, _11.0.3, (*_28), _25.2, Move(_25), _37, _11.1.0, _2, _28), ReturnTo(bb21), UnwindUnreachable())
}
bb36 = {
_11.0.5.1 = _11.1.5.1;
_11.0.5.2 = !_5;
_22 = -_11.0.5.1;
_24 = _8 * _8;
place!(Field::<u64>(Variant(_10, 1), 0)) = !_11.1.5.2;
_11.0.0 = _11.1.0 << _9;
_11.0.1 = _11.1.1;
_11.1.5.2 = _5;
Goto(bb6)
}
bb37 = {
_11.4 = 2573929914_u32 as i128;
_11.1.1 = _11.0.1;
_12 = !_11.0.3;
SetDiscriminant(_10, 1);
_11.1.4 = !_11.0.4;
_11.1.5.2 = _3;
_8 = 198318415858473720463187821609286621061_u128 as f32;
place!(Field::<u64>(Variant(_10, 1), 0)) = _5 - _3;
_16 = !336925802033125422776608252670912029995_u128;
_13 = core::ptr::addr_of_mut!(_21);
_11.1.2 = [_11.0.4,_11.0.4,_11.0.4,_11.1.4,_11.1.4];
_9 = -_11.3;
_11.0.5.1 = 2143546182_i32 as f64;
_23 = !_11.3;
_11.1.0 = -32574_i16;
_4 = _9;
Goto(bb4)
}
bb38 = {
match _30.0 {
0 => bb24,
1 => bb25,
2 => bb26,
3 => bb27,
4 => bb28,
340282366920938463459418450271523405337 => bb30,
_ => bb29
}
}
bb39 = {
place!(Field::<[i32; 2]>(Variant(_71.fld6, 1), 3)) = Field::<[i32; 2]>(Variant(_77, 1), 2);
_11.0.5 = Move(_88.0.5);
_17.fld0 = (_72.0,);
place!(Field::<isize>(Variant(_71.fld6, 1), 2)) = -_45;
_88.0.5.0 = &_61;
_21 = Field::<i8>(Variant(_15, 2), 3);
Goto(bb40)
}
bb40 = {
_71.fld0 = _54 as u32;
_66 = Move(_17);
match Field::<u32>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 2), 0) {
0 => bb39,
1 => bb11,
2 => bb22,
4063108669 => bb41,
_ => bb29
}
}
bb41 = {
_11.0.1 = _88.1.1;
_39 = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_11.0.2 = _88.0.2;
_88.1.2 = [Field::<u16>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 2), 1),_49,_49,Field::<u16>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 2), 1),_11.0.4];
_3 = _29 as u64;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5)).2 = Field::<[u16; 5]>(Variant(_50, 2), 0);
place!(Field::<([u16; 3],)>(Variant(_71.fld6, 1), 0)) = (_84.0,);
_88.0.5.2 = _25.2 + _11.0.5.2;
_57 = (_84.0,);
place!(Field::<[u16; 5]>(Variant(_50, 2), 0)) = [_88.0.4,_11.0.4,_49,_49,_88.0.4];
Call(_2 = core::intrinsics::transmute(_33), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
_83 = Field::<u16>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 2), 1);
_63 = Field::<usize>(Variant(_77, 1), 3);
SetDiscriminant(Field::<Adt40>(Variant(_77, 1), 5), 1);
_88.1.3 = _88.0.3 + Field::<u8>(Variant(_15, 2), 0);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1)).1 = -_76.1;
place!(Field::<[u128; 3]>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 3)) = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_90 = _88.0.0 as isize;
_11.2 = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_65 = !_88.1.3;
_45 = Field::<isize>(Variant(_71.fld6, 1), 2);
place!(Field::<[i16; 8]>(Variant(_71.fld6, 1), 1)) = _40;
Goto(bb43)
}
bb43 = {
_88.3 = Field::<isize>(Variant(_71.fld6, 1), 2);
_102 = _21 as isize;
_19 = Adt55::Variant2 { fld0: _83,fld1: Move(_66) };
Goto(bb44)
}
bb44 = {
place!(Field::<(i16,)>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 4)) = (_11.0.0,);
_103 = Move(_71.fld6);
_38 = _52;
Goto(bb45)
}
bb45 = {
_10 = Adt49::Variant1 { fld0: _88.0.5.2 };
_36.0 = [_83,Field::<u16>(Variant(_19, 2), 0),_49,_49,_11.0.4];
_88.0.0 = (-469867571_i32) as i16;
_66 = Move(Field::<Adt46>(Variant(_19, 2), 1));
place!(Field::<i64>(Variant(_77, 1), 6)) = _71.fld4.0 << _2;
_92 = _66.fld0;
place!(Field::<bool>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 0)) = Field::<(i64,)>(Variant(_15, 2), 2).0 <= _71.fld4.0;
_88.5 = !_94;
_21 = -Field::<i8>(Variant(_15, 2), 3);
_76.0 = &place!(Field::<(i16,)>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 4));
_71.fld3 = Field::<i8>(Variant(_15, 2), 3) - Field::<i8>(Variant(_15, 2), 3);
_35 = [(*_28),_9,_45,_48,_2,_90];
_88.1.0 = !Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5)) = (_39, _34, _11.0.2);
_25.2 = _88.0.1 as u64;
_88.0.5.0 = &place!(Field::<(i16,)>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 4));
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_15, 2), 5)) = (Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1).0, Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1).1, _88.0.2);
_88.0.5.0 = &_61;
Goto(bb46)
}
bb46 = {
_71.fld2 = Adt55::Variant2 { fld0: Field::<u16>(Variant(_19, 2), 0),fld1: Move(_66) };
_25.1 = -_82.1;
_24 = -_38;
_107.1.5.0 = &_61;
_88.1.4 = !_49;
_12 = Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1).1 as u8;
_57.0 = _84.0;
_75 = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_112 = -_54;
_76 = (Move(_107.1.5.0), _34, _88.0.5.2);
_10 = Adt49::Variant0 { fld0: Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4),fld1: _58 };
_11.1.0 = _11.0.0;
_71.fld1 = [(-604354978_i32),(-1196831530_i32)];
Goto(bb47)
}
bb47 = {
_111 = Field::<i64>(Variant(_77, 1), 6) as isize;
place!(Field::<Adt46>(Variant(_19, 2), 1)).fld0.0 = [_88.3,_33,_88.3,_2,_48,_102];
_48 = Field::<isize>(Variant(_103, 1), 2) - _90;
Goto(bb48)
}
bb48 = {
_85 = Field::<[i32; 2]>(Variant(_77, 1), 2);
_25.0 = &place!(Field::<(i16,)>(Variant(_10, 0), 0));
_74.0 = [_51,_45,_51,_48,_33,_88.3];
place!(Field::<Adt46>(Variant(_71.fld2, 2), 1)).fld0 = (_32,);
_114 = _75;
_10 = Adt49::Variant1 { fld0: _76.2 };
SetDiscriminant(_15, 0);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_50, 2), 1)).2 = _62;
_66 = Adt46 { fld0: Field::<Adt46>(Variant(_19, 2), 1).fld0 };
_20 = _12 as f32;
_99 = _11.2;
_2 = -_112;
_67 = Adt55::Variant2 { fld0: _83,fld1: Move(_66) };
Goto(bb49)
}
bb49 = {
_11.1.5.0 = &_79;
_11.1.5.0 = &place!(Field::<(i16,)>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 4));
_107.0.3 = _12;
_104 = _45 - _9;
place!(Field::<usize>(Variant(_77, 1), 3)) = !_63;
_17 = Adt46 { fld0: _92 };
_109 = [(-1558975416_i32),563830019_i32];
_71.fld7 = _48 as i128;
_11.2 = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_31 = Adt42::Variant2 { fld0: Move(_103),fld1: Field::<usize>(Variant(_77, 1), 3),fld2: _82.1,fld3: (*_37),fld4: _11.1.0 };
place!(Field::<[i16; 8]>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 2)) = [Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,_11.0.0,Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,Field::<i16>(Variant(_31, 2), 4),_11.1.0];
Goto(bb50)
}
bb50 = {
_106 = [Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4),Field::<u128>(Variant(_77, 1), 4)];
_64 = _71.fld7 as u128;
_87 = [Field::<isize>(Variant(Field::<Adt41>(Variant(_31, 2), 0), 1), 2),_48,_45,_55,_112,_9];
place!(Field::<u16>(Variant(_71.fld2, 2), 0)) = !Field::<u16>(Variant(_19, 2), 0);
SetDiscriminant(Field::<Adt41>(Variant(_31, 2), 0), 1);
SetDiscriminant(_10, 0);
_105 = _20 * _20;
_101 = !_27;
_107.1.0 = _71.fld7 as i16;
_74.0 = [_55,_33,_51,_4,_45,_55];
place!(Field::<i8>(Variant(_31, 2), 3)) = (*_37) - _21;
Goto(bb51)
}
bb51 = {
SetDiscriminant(_71.fld2, 0);
_51 = -_54;
place!(Field::<[i32; 2]>(Variant(_77, 1), 2)) = [1011224180_i32,47307753_i32];
_100 = (-1585931121_i32) - 478063417_i32;
_107.0.3 = _12;
_11.0.3 = !_107.0.3;
Goto(bb52)
}
bb52 = {
_120 = _88.0.5.2 as u32;
_34 = _22 + Field::<f64>(Variant(_31, 2), 2);
_66.fld0 = (_35,);
_88.0.5.0 = &place!(Field::<(i16,)>(Variant(_10, 0), 0));
_104 = _45 << (*_28);
_88.1.0 = _71.fld7 as i16;
_88.4 = _71.fld7 + _71.fld7;
_93.0 = _36.0;
_69 = Field::<u128>(Variant(_77, 1), 4);
_11.0.5.1 = _76.1;
place!(Field::<*mut isize>(Variant(_71.fld2, 0), 0)) = core::ptr::addr_of_mut!(_90);
_88.1.5.2 = !_88.0.5.2;
place!(Field::<[u16; 5]>(Variant(_50, 2), 0)) = _68.0;
_82.2 = _88.0.5.2 - Field::<u64>(Variant(_77, 1), 1);
SetDiscriminant(_19, 1);
_124 = -_105;
place!(Field::<Adt43>(Variant(_19, 1), 0)).fld7 = _66.fld0;
_92.0 = [_102,_112,_33,_90,_111,_48];
place!(Field::<Adt43>(Variant(_19, 1), 0)).fld5.0 = [_64,Field::<u128>(Variant(_77, 1), 4),_64];
_11.5 = Field::<bool>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 0);
_88.3 = _45 + _2;
_11.0.1 = _88.0.1;
_88.3 = _43 << _88.0.5.2;
_11.1.5.0 = &place!(Field::<(i16,)>(Variant(_10, 0), 0));
_11.1.5.1 = _34 + _82.1;
_107.0.1 = _11.0.1;
Goto(bb53)
}
bb53 = {
_50 = Adt54::Variant1 { fld0: _58 };
_85 = [_100,_100];
_43 = -_48;
_25.0 = &_61;
_78 = core::ptr::addr_of_mut!(_93);
SetDiscriminant(_50, 0);
_107.0.0 = (*_37) as i16;
place!(Field::<i32>(Variant(_71.fld2, 0), 1)) = _69 as i32;
place!(Field::<Adt43>(Variant(_50, 0), 3)).fld5.2 = [_88.1.4,_83,_49,_83,_83];
_40 = [_88.1.0,_107.1.0,Field::<i16>(Variant(_31, 2), 4),_88.1.0,_107.0.0,Field::<i16>(Variant(_31, 2), 4),_11.1.0,_11.0.0];
_115 = Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0 & _11.0.0;
_49 = !_83;
_60 = Adt48::Variant0 { fld0: _58,fld1: _78,fld2: _57.0 };
_86 = -_20;
_76.2 = _11.0.5.2;
_76 = (Move(_25.0), _82.1, _5);
_17.fld0.0 = _92.0;
_11.1.5.2 = _88.0.5.2 ^ _76.2;
_92.0 = [_111,_45,_43,_54,_102,_4];
_71.fld1 = [Field::<i32>(Variant(_71.fld2, 0), 1),Field::<i32>(Variant(_71.fld2, 0), 1)];
_71.fld0 = _120;
_96 = _107.0.1;
Goto(bb54)
}
bb54 = {
SetDiscriminant(_60, 0);
_88.0.4 = _83;
place!(Field::<Adt43>(Variant(_19, 1), 0)).fld5.0 = [_64,_64,Field::<u128>(Variant(_77, 1), 4)];
SetDiscriminant(_67, 2);
place!(Field::<(i64,)>(Variant(_15, 0), 1)) = (_30.0,);
_88.1.4 = _11.0.4 & _49;
_36 = ((*_78).0,);
_25.0 = &place!(Field::<(i16,)>(Variant(place!(Field::<Adt40>(Variant(_77, 1), 5)), 1), 4));
Call(_107.1.5.2 = core::intrinsics::bswap(_11.1.5.2), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
_95 = _71.fld4.0;
_23 = !_111;
_11.1.5 = Move(_25);
_83 = _88.1.4 - _88.1.4;
_111 = -_4;
place!(Field::<Adt43>(Variant(_50, 0), 3)).fld3 = _30.0 as f64;
_121.1 = -_11.1.5.1;
place!(Field::<Adt43>(Variant(_50, 0), 3)).fld5.1 = _82.1;
_11.1.1 = _96;
_64 = !Field::<u128>(Variant(_77, 1), 4);
_54 = _51;
_11.1.3 = _88.1.3;
_11.1.5.1 = -_22;
_107.1.5.2 = Field::<(i64,)>(Variant(_15, 0), 1).0 as u64;
place!(Field::<u16>(Variant(_67, 2), 0)) = _88.1.1 as u16;
_127 = [_69,_69,Field::<u128>(Variant(_77, 1), 4)];
Goto(bb56)
}
bb56 = {
_107.0.5.1 = _88.1.0 as f64;
_71.fld5 = Adt42::Variant0 { fld0: _11.2,fld1: _87,fld2: Field::<f64>(Variant(_31, 2), 2),fld3: Field::<u128>(Variant(_77, 1), 4),fld4: _68,fld5: _78 };
RET = Move(_71.fld5);
place!(Field::<usize>(Variant(_77, 1), 3)) = _63 * Field::<usize>(Variant(_31, 2), 1);
place!(Field::<char>(Variant(_50, 0), 1)) = _88.1.1;
_25.1 = _11.1.5.1;
place!(Field::<Adt43>(Variant(_50, 0), 3)).fld0 = core::ptr::addr_of_mut!(_107.1.4);
_16 = _64;
_57 = (_84.0,);
_98 = core::ptr::addr_of!(_89);
place!(Field::<[i16; 8]>(Variant(_50, 0), 2)) = [_79.0,Field::<(i16,)>(Variant(Field::<Adt40>(Variant(_77, 1), 5), 1), 4).0,Field::<i16>(Variant(_31, 2), 4),_11.1.0,Field::<i16>(Variant(_31, 2), 4),_115,_115,_107.1.0];
_51 = _104 << _43;
_91 = &_61;
_88.0.5.1 = -_107.0.5.1;
_72.0 = [_88.3,_88.3,_102,_9,_51,_51];
place!(Field::<Adt43>(Variant(_50, 0), 3)).fld7.0 = _72.0;
_109 = [Field::<i32>(Variant(_71.fld2, 0), 1),Field::<i32>(Variant(_71.fld2, 0), 1)];
Goto(bb57)
}
bb57 = {
Call(_134 = dump_var(2_usize, 56_usize, Move(_56), 6_usize, Move(_6), 63_usize, Move(_63), 115_usize, Move(_115)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_134 = dump_var(2_usize, 101_usize, Move(_101), 44_usize, Move(_44), 102_usize, Move(_102), 30_usize, Move(_30)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_134 = dump_var(2_usize, 120_usize, Move(_120), 55_usize, Move(_55), 83_usize, Move(_83), 32_usize, Move(_32)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_134 = dump_var(2_usize, 9_usize, Move(_9), 3_usize, Move(_3), 40_usize, Move(_40), 16_usize, Move(_16)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_134 = dump_var(2_usize, 62_usize, Move(_62), 96_usize, Move(_96), 49_usize, Move(_49), 65_usize, Move(_65)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_134 = dump_var(2_usize, 61_usize, Move(_61), 53_usize, Move(_53), 2_usize, Move(_2), 5_usize, Move(_5)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_134 = dump_var(2_usize, 69_usize, Move(_69), 90_usize, Move(_90), 94_usize, Move(_94), 57_usize, Move(_57)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_134 = dump_var(2_usize, 29_usize, Move(_29), 14_usize, Move(_14), 59_usize, Move(_59), 99_usize, Move(_99)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_134 = dump_var(2_usize, 68_usize, Move(_68), 95_usize, Move(_95), 23_usize, Move(_23), 47_usize, Move(_47)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_134 = dump_var(2_usize, 43_usize, Move(_43), 135_usize, _135, 135_usize, _135, 135_usize, _135), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize) -> isize {
mir! {
type RET = isize;
let _5: Adt51;
let _6: f32;
let _7: [i16; 8];
let _8: (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64));
let _9: [i16; 8];
let _10: (i16,);
let _11: [u16; 3];
let _12: u16;
let _13: ();
let _14: ();
{
RET = -_4;
RET = _2;
_1 = _4;
_2 = 11513540169576416733_usize as isize;
_6 = 201_u8 as f32;
_5.fld0 = [63179_u16,48875_u16,62248_u16];
_1 = !RET;
_5.fld4 = 561980799_u32 as i16;
_8.5.2 = 8770509941244473599_u64 + 13983830715531315241_u64;
_3 = _1 << _4;
_5.fld0 = [55944_u16,21231_u16,51303_u16];
_9 = [_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4];
_9 = [_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4];
RET = _3 ^ _1;
_5.fld3 = Adt49::Variant1 { fld0: _8.5.2 };
_8.1 = '\u{50c33}';
_8.4 = 1179756945_u32 as u16;
_8.3 = 145_u8;
_9 = [_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4,_5.fld4];
_8.5.1 = (-112_i8) as f64;
_8.4 = 47425_u16 | 3615_u16;
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(3_usize, 1_usize, Move(_1), 2_usize, Move(_2), 14_usize, _14, 14_usize, _14), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [isize; 6],mut _2: i16,mut _3: Adt49,mut _4: *mut isize,mut _5: isize,mut _6: f64,mut _7: isize,mut _8: [isize; 6],mut _9: isize,mut _10: u16,mut _11: i16,mut _12: isize,mut _13: f64) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _14: f32;
let _15: *mut ([u16; 5],);
let _16: char;
let _17: Adt44;
let _18: *mut isize;
let _19: [u16; 5];
let _20: u64;
let _21: ();
let _22: ();
{
_7 = Field::<u64>(Variant(_3, 1), 0) as isize;
SetDiscriminant(_3, 1);
place!(Field::<u64>(Variant(_3, 1), 0)) = 570155280586246030_u64 + 17283250995947206525_u64;
_7 = _12 * _5;
_9 = 2571428730_u32 as isize;
_6 = _13 * _13;
_1 = [_7,_5,_7,_7,_7,_12];
_14 = _6 as f32;
_13 = _6 + _6;
RET = _1;
RET = _1;
RET = [_12,_12,_7,_7,_12,_12];
Goto(bb1)
}
bb1 = {
Call(_21 = dump_var(4_usize, 1_usize, Move(_1), 8_usize, Move(_8), 10_usize, Move(_10), 11_usize, Move(_11)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: [isize; 6],mut _3: Adt46,mut _4: Adt46,mut _5: i8,mut _6: ([isize; 6],),mut _7: u8,mut _8: isize,mut _9: u64,mut _10: (&'static (i16,), f64, u64),mut _11: *mut i8,mut _12: i16,mut _13: isize,mut _14: *mut isize) -> Adt45 {
mir! {
type RET = Adt45;
let _15: [i16; 8];
let _16: (i64,);
let _17: f64;
let _18: f64;
let _19: u128;
let _20: char;
let _21: isize;
let _22: f32;
let _23: [i16; 8];
let _24: bool;
let _25: i8;
let _26: Adt54;
let _27: *const u128;
let _28: Adt52;
let _29: Adt46;
let _30: isize;
let _31: f32;
let _32: i128;
let _33: (i16,);
let _34: [isize; 6];
let _35: bool;
let _36: Adt43;
let _37: i16;
let _38: isize;
let _39: u16;
let _40: (&'static (i16,), f64, u64);
let _41: Adt54;
let _42: i32;
let _43: f32;
let _44: bool;
let _45: bool;
let _46: u32;
let _47: ((i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), [u128; 3], isize, i128, bool);
let _48: char;
let _49: ([u16; 5],);
let _50: isize;
let _51: bool;
let _52: [i32; 2];
let _53: (&'static (i16,), f64, u64);
let _54: isize;
let _55: f32;
let _56: [u16; 3];
let _57: isize;
let _58: [i32; 2];
let _59: u16;
let _60: u16;
let _61: (i64,);
let _62: [u16; 3];
let _63: bool;
let _64: f32;
let _65: Adt49;
let _66: char;
let _67: *const u128;
let _68: isize;
let _69: f32;
let _70: f64;
let _71: ([u16; 3],);
let _72: (i16,);
let _73: ([isize; 6],);
let _74: [u128; 3];
let _75: f64;
let _76: [i32; 2];
let _77: [isize; 6];
let _78: *const i64;
let _79: bool;
let _80: isize;
let _81: (i64,);
let _82: i32;
let _83: bool;
let _84: Adt46;
let _85: isize;
let _86: f32;
let _87: [u16; 3];
let _88: char;
let _89: Adt51;
let _90: Adt46;
let _91: isize;
let _92: Adt40;
let _93: (i64,);
let _94: ([isize; 6],);
let _95: [u16; 3];
let _96: *mut isize;
let _97: ([u16; 5],);
let _98: u8;
let _99: char;
let _100: isize;
let _101: *mut i8;
let _102: [u16; 5];
let _103: char;
let _104: f64;
let _105: Adt45;
let _106: bool;
let _107: [i32; 2];
let _108: [isize; 6];
let _109: isize;
let _110: u128;
let _111: (i16,);
let _112: Adt46;
let _113: [i16; 8];
let _114: char;
let _115: [u128; 3];
let _116: Adt46;
let _117: i128;
let _118: [u16; 5];
let _119: (i64,);
let _120: [u128; 3];
let _121: [isize; 6];
let _122: [isize; 6];
let _123: i8;
let _124: ();
let _125: ();
{
_6.0 = _3.fld0.0;
_12 = 6721_i16 >> _5;
_5 = (-2_i8) >> _9;
_3.fld0.0 = [_1,_13,_8,_1,_13,_1];
_6 = (_4.fld0.0,);
_9 = _10.2 + _10.2;
_10.2 = !_9;
_3.fld0 = (_2,);
_10.2 = !_9;
_1 = -_8;
_16.0 = -(-3057372866150891128_i64);
_4.fld0 = _6;
_7 = !196_u8;
_15 = [_12,_12,_12,_12,_12,_12,_12,_12];
_7 = 111_u8;
_1 = _13 << _12;
_4.fld0.0 = _6.0;
_17 = _10.1;
_14 = core::ptr::addr_of_mut!(_1);
_10.2 = _9;
_6.0 = [_1,_1,_13,_8,(*_14),_8];
_16 = ((-5610980898173248239_i64),);
_16.0 = (-2248067695311336093_i64);
_14 = core::ptr::addr_of_mut!(_13);
_14 = core::ptr::addr_of_mut!((*_14));
_7 = 79_u8;
_3 = Adt46 { fld0: _4.fld0 };
Call(_17 = fn6(_4.fld0.0, _4.fld0.0, _6, _5, _15, _2, Move(_4), (*_14), _8, (*_14), _1, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = _12 as u8;
_13 = !_1;
Goto(bb2)
}
bb2 = {
_4 = Adt46 { fld0: _6 };
_4.fld0 = _3.fld0;
_4 = Move(_3);
Goto(bb3)
}
bb3 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_21 = _16.0 as isize;
_3 = Adt46 { fld0: _6 };
_16.0 = 2391085469539900270_i64;
_12 = _9 as i16;
_7 = !4_u8;
_22 = _19 as f32;
_9 = _10.2;
_8 = (*_14);
_11 = core::ptr::addr_of_mut!(_5);
_1 = -(*_14);
_6 = _3.fld0;
_6.0 = [_1,(*_14),(*_14),_1,_1,(*_14)];
_9 = _10.2 ^ _10.2;
_2 = _6.0;
_18 = -_10.1;
_3 = Adt46 { fld0: _6 };
_14 = core::ptr::addr_of_mut!(_8);
_1 = _12 as isize;
_6.0 = [(*_14),_8,_8,(*_14),(*_14),_8];
_3.fld0.0 = _2;
_16 = (4097956638718074200_i64,);
_5 = 27_i8;
_3.fld0 = _6;
_17 = _18 + _18;
Goto(bb5)
}
bb5 = {
_4.fld0.0 = [_13,(*_14),_13,_13,(*_14),(*_14)];
_13 = 51769_u16 as isize;
_8 = _1;
_23 = [_12,_12,_12,_12,_12,_12,_12,_12];
_13 = (*_14) << _9;
_9 = _10.2;
_22 = _7 as f32;
_4.fld0.0 = [(*_14),(*_14),_8,_1,_8,_8];
_10.1 = _17;
_3.fld0 = (_6.0,);
_4.fld0.0 = [_13,(*_14),_8,_1,_8,_8];
_17 = 89246048541249665491311102005591985633_i128 as f64;
_12 = '\u{51567}' as i16;
_15 = [_12,_12,_12,_12,_12,_12,_12,_12];
Call(_4.fld0.0 = fn8(_2, _14, Move(_3), _13, _14, _6, _6.0, _2, _6, _8, _10.2, _13), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_23 = _15;
_10.2 = !_9;
_10.1 = _7 as f64;
_4.fld0.0 = [_1,_13,_8,_13,(*_14),(*_14)];
_14 = core::ptr::addr_of_mut!(_1);
_29.fld0.0 = [(*_14),_13,_13,(*_14),(*_14),(*_14)];
_5 = 34_i8;
_6 = (_2,);
_17 = 146793933012307179328730512897572657576_i128 as f64;
_19 = 39680710323178063574481530779082051230_u128 >> _13;
_13 = (*_14);
_3.fld0.0 = [_13,_8,_13,_8,_13,(*_14)];
match (*_11) {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb9,
34 => bb11,
_ => bb10
}
}
bb7 = {
_4.fld0.0 = [_13,(*_14),_13,_13,(*_14),(*_14)];
_13 = 51769_u16 as isize;
_8 = _1;
_23 = [_12,_12,_12,_12,_12,_12,_12,_12];
_13 = (*_14) << _9;
_9 = _10.2;
_22 = _7 as f32;
_4.fld0.0 = [(*_14),(*_14),_8,_1,_8,_8];
_10.1 = _17;
_3.fld0 = (_6.0,);
_4.fld0.0 = [_13,(*_14),_8,_1,_8,_8];
_17 = 89246048541249665491311102005591985633_i128 as f64;
_12 = '\u{51567}' as i16;
_15 = [_12,_12,_12,_12,_12,_12,_12,_12];
Call(_4.fld0.0 = fn8(_2, _14, Move(_3), _13, _14, _6, _6.0, _2, _6, _8, _10.2, _13), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_21 = _16.0 as isize;
_3 = Adt46 { fld0: _6 };
_16.0 = 2391085469539900270_i64;
_12 = _9 as i16;
_7 = !4_u8;
_22 = _19 as f32;
_9 = _10.2;
_8 = (*_14);
_11 = core::ptr::addr_of_mut!(_5);
_1 = -(*_14);
_6 = _3.fld0;
_6.0 = [_1,(*_14),(*_14),_1,_1,(*_14)];
_9 = _10.2 ^ _10.2;
_2 = _6.0;
_18 = -_10.1;
_3 = Adt46 { fld0: _6 };
_14 = core::ptr::addr_of_mut!(_8);
_1 = _12 as isize;
_6.0 = [(*_14),_8,_8,(*_14),(*_14),_8];
_3.fld0.0 = _2;
_16 = (4097956638718074200_i64,);
_5 = 27_i8;
_3.fld0 = _6;
_17 = _18 + _18;
Goto(bb5)
}
bb9 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_4 = Adt46 { fld0: _6 };
_4.fld0 = _3.fld0;
_4 = Move(_3);
Goto(bb3)
}
bb11 = {
_25 = (*_14) as i8;
_4.fld0.0 = [(*_14),(*_14),(*_14),_13,_1,_8];
_24 = !false;
Goto(bb12)
}
bb12 = {
_3.fld0 = (_2,);
_1 = -_8;
_6 = _3.fld0;
_29.fld0.0 = _3.fld0.0;
_19 = 254100617987822916152244004502644959172_u128;
_13 = (*_14);
_4 = Move(_3);
_1 = -_8;
_19 = !235459075357782415849123932693621330023_u128;
_27 = core::ptr::addr_of!(_19);
_16.0 = !(-2244479072449657997_i64);
_10.2 = _25 as u64;
_18 = (*_27) as f64;
_30 = _16.0 as isize;
_31 = (-59447494867336294215713798948607755059_i128) as f32;
_31 = -_22;
match (*_11) {
0 => bb1,
1 => bb10,
2 => bb5,
3 => bb7,
4 => bb13,
5 => bb14,
6 => bb15,
34 => bb17,
_ => bb16
}
}
bb13 = {
_4.fld0.0 = [_13,(*_14),_13,_13,(*_14),(*_14)];
_13 = 51769_u16 as isize;
_8 = _1;
_23 = [_12,_12,_12,_12,_12,_12,_12,_12];
_13 = (*_14) << _9;
_9 = _10.2;
_22 = _7 as f32;
_4.fld0.0 = [(*_14),(*_14),_8,_1,_8,_8];
_10.1 = _17;
_3.fld0 = (_6.0,);
_4.fld0.0 = [_13,(*_14),_8,_1,_8,_8];
_17 = 89246048541249665491311102005591985633_i128 as f64;
_12 = '\u{51567}' as i16;
_15 = [_12,_12,_12,_12,_12,_12,_12,_12];
Call(_4.fld0.0 = fn8(_2, _14, Move(_3), _13, _14, _6, _6.0, _2, _6, _8, _10.2, _13), ReturnTo(bb6), UnwindUnreachable())
}
bb14 = {
_7 = _12 as u8;
_13 = !_1;
Goto(bb2)
}
bb15 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb16 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb17 = {
_29.fld0 = (_4.fld0.0,);
_11 = core::ptr::addr_of_mut!(_25);
_29 = Adt46 { fld0: _6 };
_3.fld0 = (_29.fld0.0,);
_17 = _18;
_4.fld0 = (_6.0,);
_19 = 165214363191526715074629446926343105825_u128 & 146955558372801293979521653601235677148_u128;
_29 = Adt46 { fld0: _3.fld0 };
_29.fld0 = (_6.0,);
_4.fld0.0 = [_1,_13,_8,_13,(*_14),(*_14)];
_33.0 = _12 + _12;
_11 = core::ptr::addr_of_mut!((*_11));
_24 = !true;
_13 = !(*_14);
_3 = Adt46 { fld0: _4.fld0 };
_29.fld0 = _3.fld0;
_2 = [_1,(*_14),_8,_13,_1,(*_14)];
_20 = '\u{697b3}';
_36.fld6 = core::ptr::addr_of_mut!(_21);
_36.fld3 = -_18;
_36.fld5.2 = [40594_u16,17674_u16,18836_u16,16932_u16,34229_u16];
Goto(bb18)
}
bb18 = {
_4.fld0 = (_3.fld0.0,);
_12 = 63655_u16 as i16;
_36.fld5.0 = [_19,(*_27),(*_27)];
_1 = _13 & _8;
_29.fld0 = (_4.fld0.0,);
_10.2 = _9 ^ _9;
match _5 {
34 => bb19,
_ => bb8
}
}
bb19 = {
_5 = (*_11) & (*_11);
_36.fld5.1 = _18;
_25 = _5;
_36.fld7.0 = _4.fld0.0;
_10.1 = _17;
_5 = (*_11);
_11 = core::ptr::addr_of_mut!(_25);
_36.fld3 = _17 - _10.1;
_25 = _5 & _5;
Call(_7 = fn9(Move(_4), _36.fld7, _9, _6.0, _13, _6.0, _29.fld0, _25), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
_30 = _8 & _1;
_5 = _25 & (*_11);
_3.fld0.0 = [_1,_8,_8,_8,(*_14),_8];
_39 = !51064_u16;
_36.fld5.0 = [_19,(*_27),_19];
_36.fld5.1 = _17 * _17;
_36.fld0 = core::ptr::addr_of_mut!(_39);
_38 = _8 | _13;
_36.fld5.2 = [_39,_39,_39,_39,_39];
_16.0 = (-6643257287987362376_i64) | 4844277517460741069_i64;
_36.fld7.0 = [_38,(*_14),(*_14),_38,_38,_1];
_40.2 = _20 as u64;
_5 = _7 as i8;
_37 = -_33.0;
_4.fld0 = _36.fld7;
_36.fld7.0 = [_13,_1,(*_14),_30,_8,(*_14)];
_37 = _33.0;
_36.fld4 = Adt40::Variant2 { fld0: 399367471_u32,fld1: _39 };
_40.1 = _36.fld5.1;
_36.fld0 = core::ptr::addr_of_mut!(_39);
_40.2 = !_10.2;
_36.fld5.2 = [Field::<u16>(Variant(_36.fld4, 2), 1),Field::<u16>(Variant(_36.fld4, 2), 1),Field::<u16>(Variant(_36.fld4, 2), 1),_39,Field::<u16>(Variant(_36.fld4, 2), 1)];
_14 = core::ptr::addr_of_mut!(_21);
_33 = (_37,);
_36.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_36.fld4, 2), 1)));
_8 = _38;
_3.fld0.0 = [_8,_1,_13,_13,_8,_13];
Call(_6.0 = fn10(_3.fld0, _13, _30, _8, _30, _36.fld7.0, _36.fld7, _29.fld0, _4.fld0, _30, _25, _36.fld7.0, _29.fld0, _3.fld0, Move(_4), _29.fld0), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_10.0 = &_33;
_36.fld5.0 = [_19,_19,(*_27)];
_36.fld5.1 = _18;
_36.fld5.0 = [_19,_19,(*_27)];
_25 = _5 ^ _5;
_16 = ((-4841765992513470175_i64),);
_36.fld5.0 = [(*_27),(*_27),_19];
_47.0.5.2 = !_9;
_15 = _23;
_36.fld6 = core::ptr::addr_of_mut!(_13);
_46 = 2400744199_u32 + 3868586896_u32;
_47.0.3 = _7 >> _30;
_47.0.3 = _7 - _7;
_38 = _1 >> _30;
_42 = _16.0 as i32;
_47.1.5.1 = _36.fld3;
_47.0.5 = (Move(_10.0), _47.1.5.1, _40.2);
_47.1.2 = [_39,Field::<u16>(Variant(_36.fld4, 2), 1),_39,_39,_39];
match _16.0 {
0 => bb22,
1 => bb23,
2 => bb24,
3 => bb25,
4 => bb26,
340282366920938463458532841439254741281 => bb28,
_ => bb27
}
}
bb22 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb23 = {
_4.fld0.0 = [_13,(*_14),_13,_13,(*_14),(*_14)];
_13 = 51769_u16 as isize;
_8 = _1;
_23 = [_12,_12,_12,_12,_12,_12,_12,_12];
_13 = (*_14) << _9;
_9 = _10.2;
_22 = _7 as f32;
_4.fld0.0 = [(*_14),(*_14),_8,_1,_8,_8];
_10.1 = _17;
_3.fld0 = (_6.0,);
_4.fld0.0 = [_13,(*_14),_8,_1,_8,_8];
_17 = 89246048541249665491311102005591985633_i128 as f64;
_12 = '\u{51567}' as i16;
_15 = [_12,_12,_12,_12,_12,_12,_12,_12];
Call(_4.fld0.0 = fn8(_2, _14, Move(_3), _13, _14, _6, _6.0, _2, _6, _8, _10.2, _13), ReturnTo(bb6), UnwindUnreachable())
}
bb24 = {
_4.fld0 = (_3.fld0.0,);
_12 = 63655_u16 as i16;
_36.fld5.0 = [_19,(*_27),(*_27)];
_1 = _13 & _8;
_29.fld0 = (_4.fld0.0,);
_10.2 = _9 ^ _9;
match _5 {
34 => bb19,
_ => bb8
}
}
bb25 = {
_21 = _16.0 as isize;
_3 = Adt46 { fld0: _6 };
_16.0 = 2391085469539900270_i64;
_12 = _9 as i16;
_7 = !4_u8;
_22 = _19 as f32;
_9 = _10.2;
_8 = (*_14);
_11 = core::ptr::addr_of_mut!(_5);
_1 = -(*_14);
_6 = _3.fld0;
_6.0 = [_1,(*_14),(*_14),_1,_1,(*_14)];
_9 = _10.2 ^ _10.2;
_2 = _6.0;
_18 = -_10.1;
_3 = Adt46 { fld0: _6 };
_14 = core::ptr::addr_of_mut!(_8);
_1 = _12 as isize;
_6.0 = [(*_14),_8,_8,(*_14),(*_14),_8];
_3.fld0.0 = _2;
_16 = (4097956638718074200_i64,);
_5 = 27_i8;
_3.fld0 = _6;
_17 = _18 + _18;
Goto(bb5)
}
bb26 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb27 = {
_3.fld0 = _4.fld0;
_6.0 = [_13,(*_14),_8,_1,_13,(*_14)];
_16 = (7787336304415978744_i64,);
_4 = Adt46 { fld0: _3.fld0 };
_3 = Adt46 { fld0: _6 };
_4 = Adt46 { fld0: _6 };
_17 = _10.1 - _10.1;
_9 = !_10.2;
_4.fld0 = (_2,);
_10.2 = _9 & _9;
_19 = 155011289774041575700454210882303089820_u128;
_4.fld0.0 = [(*_14),(*_14),(*_14),_1,(*_14),(*_14)];
_3.fld0 = (_4.fld0.0,);
Call(_13 = fn7(Move(_4), _10.2, _1, _6, Move(_3), _7, _2, _8, _9, _14, _14, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb28 = {
_47.1.3 = _7 - _47.0.3;
_1 = !_8;
_26 = Adt54::Variant2 { fld0: _36.fld5.2,fld1: _36.fld5 };
_40.1 = -_36.fld5.1;
_36.fld7 = _6;
_23 = [_37,_37,_37,_37,_33.0,_37,_33.0,_12];
_16.0 = 8798276641085490084_i64;
_40.2 = !_10.2;
_40.2 = _10.2;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_26, 2), 1)).1 = -_18;
_22 = -_31;
_32 = (*_27) as i128;
_47.0.1 = _20;
_11 = core::ptr::addr_of_mut!(_25);
_47.0.4 = _39;
_36.fld5.1 = _30 as f64;
_1 = _47.0.3 as isize;
_16.0 = (-759272791606685770_i64);
_4.fld0.0 = [_38,_30,_38,_13,_30,_8];
_47.5 = _24 | _24;
_49.0 = [Field::<u16>(Variant(_36.fld4, 2), 1),_47.0.4,_47.0.4,Field::<u16>(Variant(_36.fld4, 2), 1),_39];
place!(Field::<u16>(Variant(_36.fld4, 2), 1)) = !_39;
_47.2 = _36.fld5.0;
_51 = _24;
_36.fld0 = core::ptr::addr_of_mut!(_47.1.4);
_47.3 = _8 & _30;
_47.0.2 = _49.0;
Goto(bb29)
}
bb29 = {
_36.fld5.0 = [(*_27),_19,_19];
_29.fld0 = _6;
_2 = [_13,_47.3,_30,_47.3,_30,_1];
_47.1.2 = [_47.0.4,Field::<u16>(Variant(_36.fld4, 2), 1),_39,_39,_47.0.4];
_2 = _4.fld0.0;
_47.3 = _33.0 as isize;
_5 = 4932101270888328006_usize as i8;
_47.0.0 = _47.5 as i16;
_40.1 = _36.fld5.1;
_41 = Move(_26);
_36.fld7 = (_2,);
_47.0.5.1 = _22 as f64;
Goto(bb30)
}
bb30 = {
_4.fld0.0 = [_30,_13,_13,_38,_13,_8];
_41 = Adt54::Variant2 { fld0: _47.0.2,fld1: _36.fld5 };
_19 = _30 as u128;
_29.fld0 = _4.fld0;
_54 = _13;
_33 = (_47.0.0,);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_41, 2), 1)).0 = _47.2;
place!(Field::<u16>(Variant(_36.fld4, 2), 1)) = _47.0.4;
_5 = (*_11) >> _40.2;
_36.fld4 = Adt40::Variant1 { fld0: _47.5,fld1: _36.fld5,fld2: _23,fld3: _36.fld5.0,fld4: _33,fld5: _42 };
_24 = _40.2 == _9;
_47.1.2 = _47.0.2;
_40.1 = _47.0.5.2 as f64;
_61.0 = _20 as i64;
Call(_13 = core::intrinsics::bswap(_54), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
_47.1.5.2 = !_9;
_47.1.5.0 = &place!(Field::<(i16,)>(Variant(_36.fld4, 1), 4));
_48 = _47.0.1;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_36.fld4, 1), 1)).1 = _47.0.4 as f64;
place!(Field::<[u128; 3]>(Variant(_36.fld4, 1), 3)) = [(*_27),(*_27),(*_27)];
_36.fld7.0 = _4.fld0.0;
_38 = _47.0.5.2 as isize;
_53.0 = &_33;
_36.fld5.0 = [(*_27),(*_27),(*_27)];
_16 = _61;
_29.fld0 = _6;
Goto(bb32)
}
bb32 = {
_60 = _47.0.4 & _47.0.4;
_24 = _5 < _5;
_40.0 = &_33;
_22 = -_31;
Goto(bb33)
}
bb33 = {
_4.fld0 = (_6.0,);
_40.2 = _9 & _9;
_20 = _47.0.1;
_9 = _47.1.5.2 | _47.0.5.2;
_47.0.5 = Move(_47.1.5);
_66 = _47.0.1;
_47.1 = (_33.0, _20, Field::<([u128; 3], f64, [u16; 5])>(Variant(_36.fld4, 1), 1).2, _47.0.3, _39, Move(_40));
_71.0 = [_60,_60,_47.1.4];
_36.fld5.0 = [_19,_19,_19];
_36.fld5.1 = Field::<([u128; 3], f64, [u16; 5])>(Variant(_41, 2), 1).1 * Field::<([u128; 3], f64, [u16; 5])>(Variant(_41, 2), 1).1;
_47.0.5.0 = Move(_53.0);
_62 = [_47.1.4,_47.1.4,_39];
_21 = 2_usize as isize;
_40.0 = &_72;
_16.0 = _39 as i64;
_40.2 = _47.1.5.2 ^ _47.1.5.2;
_8 = _38 * _30;
_35 = _24 > _47.5;
_44 = _24;
_29.fld0.0 = [_54,_54,_8,_38,_38,_54];
_45 = _35 >= _35;
Goto(bb34)
}
bb34 = {
_47.0.1 = _47.1.1;
_52 = [_42,_42];
_10.2 = _22 as u64;
SetDiscriminant(_36.fld4, 3);
_72.0 = !_12;
SetDiscriminant(_41, 0);
_6 = (_3.fld0.0,);
_69 = _22;
_68 = -_54;
_58 = _52;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5 = (_36.fld5.0, _47.1.5.1, _49.0);
place!(Field::<[isize; 6]>(Variant(_36.fld4, 3), 2)) = _29.fld0.0;
_43 = _22 + _22;
_4.fld0.0 = [_8,_8,_13,_30,_8,_30];
_10.0 = &_33;
_3.fld0.0 = [_8,_38,_30,_54,_38,_38];
_61 = (_16.0,);
_72 = (_33.0,);
_36.fld3 = _47.1.5.1 * _47.1.5.1;
_47.0.2 = [_60,_60,_39,_39,_60];
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld3 = Field::<Adt43>(Variant(_41, 0), 3).fld5.1;
_72 = (_37,);
_73 = (Field::<[isize; 6]>(Variant(_36.fld4, 3), 2),);
place!(Field::<u64>(Variant(_36.fld4, 3), 0)) = _39 as u64;
_40.1 = -_36.fld5.1;
_40.0 = Move(_10.0);
_41 = Adt54::Variant2 { fld0: _47.1.2,fld1: _36.fld5 };
_40.0 = &_33;
Goto(bb35)
}
bb35 = {
_47.1.4 = _39;
_31 = _19 as f32;
_47.0.5.2 = _47.1.5.2;
_6.0 = [_30,_68,_54,_13,_38,_38];
_47.1.3 = _47.0.3;
_56 = [_39,_47.1.4,_47.1.4];
_53.0 = Move(_40.0);
_64 = (*_27) as f32;
_53.1 = _42 as f64;
_31 = _64;
_47.1.4 = !_60;
_77 = [_68,_30,_54,_13,_8,_30];
Goto(bb36)
}
bb36 = {
_36.fld7.0 = [_13,_13,_8,_13,_8,_68];
SetDiscriminant(_41, 2);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_41, 2), 1)).2 = [_60,_60,_47.0.4,_60,_60];
_22 = -_31;
_14 = _36.fld6;
_34 = [_8,_30,_30,_30,_30,_30];
_72 = (_47.1.0,);
_68 = _42 as isize;
_75 = -_36.fld3;
_14 = _36.fld6;
place!(Field::<i16>(Variant(_36.fld4, 3), 4)) = _33.0;
_66 = _47.1.1;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_41, 2), 1)).1 = _36.fld3;
_77 = Field::<[isize; 6]>(Variant(_36.fld4, 3), 2);
_39 = _47.0.4 << _30;
_49.0 = [_39,_39,_39,_39,_39];
_39 = _47.0.5.2 as u16;
_36.fld4 = Adt40::Variant1 { fld0: _35,fld1: _36.fld5,fld2: _23,fld3: _36.fld5.0,fld4: _72,fld5: _42 };
_14 = core::ptr::addr_of_mut!(_50);
_13 = _39 as isize;
SetDiscriminant(_36.fld4, 0);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_41, 2), 1)).1 = -_36.fld5.1;
_2 = [_13,_30,_13,_30,_54,_54];
_57 = _39 as isize;
_47.0.0 = _37;
_47.1.2 = [_39,_39,_39,_39,_39];
_47.1.5.1 = -_75;
_20 = _66;
_79 = !_45;
Goto(bb37)
}
bb37 = {
_47.1.5.0 = &_33;
_72.0 = -_37;
Call(_51 = fn11(_44, _9, _57, (*_27), _3.fld0, _79, _9, _6.0, _31, _3.fld0, _57, _36.fld6), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
_36.fld5 = (_47.2, _40.1, _49.0);
_56 = [_39,_39,_39];
_61.0 = !_16.0;
_32 = -(-54601362952000597396481472872752044243_i128);
_18 = _36.fld3;
_40 = (Move(_47.1.5.0), _18, _9);
Goto(bb39)
}
bb39 = {
_3.fld0.0 = [_57,_38,_54,_54,_30,_38];
_47.0.5.0 = &_72;
_47.1.5.2 = _9 * _9;
Goto(bb40)
}
bb40 = {
_29.fld0 = (_2,);
_7 = !_47.1.3;
_47.1.2 = _49.0;
_78 = core::ptr::addr_of!(_16.0);
_53.2 = _39 as u64;
_57 = _37 as isize;
_41 = Adt54::Variant1 { fld0: _36.fld0 };
_53 = Move(_47.0.5);
_36.fld5 = (_47.2, _40.1, _49.0);
_47.1.5.0 = &_72;
_36.fld3 = -_47.1.5.1;
Call(_21 = core::intrinsics::bswap(_30), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
_47.0.5.0 = Move(_47.1.5.0);
_24 = _35;
_78 = core::ptr::addr_of!(_81.0);
_51 = _44;
_79 = _54 != _54;
_47.0.5.2 = _42 as u64;
_84.fld0.0 = [_30,_30,_38,_13,_30,_54];
SetDiscriminant(_41, 0);
_30 = _13 | _13;
_47.1.5.2 = !_40.2;
_20 = _47.0.1;
_4.fld0.0 = _3.fld0.0;
_27 = core::ptr::addr_of!((*_27));
Goto(bb42)
}
bb42 = {
_8 = _54 << _40.2;
_36.fld5.0 = [(*_27),_19,(*_27)];
_64 = _22;
Goto(bb43)
}
bb43 = {
_47.1.2 = _49.0;
_24 = !_35;
_16.0 = _39 as i64;
_81.0 = _16.0;
_72.0 = _37;
_75 = _40.1 + _47.1.5.1;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5 = (_36.fld5.0, _36.fld5.1, _36.fld5.2);
_39 = _46 as u16;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4 = Adt40::Variant2 { fld0: _46,fld1: _47.0.4 };
_84.fld0.0 = [_30,_13,_54,_38,_30,_30];
_15 = [_37,_12,_47.1.0,_37,_47.1.0,_12,_37,_47.1.0];
_47.1.5.0 = &_72;
Call(_59 = core::intrinsics::bswap(_39), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
_89.fld2 = core::ptr::addr_of!((*_27));
_2 = [_8,_13,_54,_13,_30,_8];
_47.1.5.2 = !_9;
_47.1.0 = !_37;
place!(Field::<f64>(Variant(_36.fld4, 0), 0)) = _18 * _40.1;
place!(Field::<f64>(Variant(_36.fld4, 0), 0)) = _42 as f64;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld7.0 = [_38,_13,_54,_8,_30,_38];
_4.fld0 = (_84.fld0.0,);
_78 = core::ptr::addr_of!(_81.0);
_47.1.3 = _7 & _7;
_47.3 = _8 >> _8;
_82 = _42 >> _40.2;
_47.3 = !_38;
_53.2 = _9;
_77 = [_30,_8,_13,_47.3,_38,_13];
_88 = _47.1.1;
RET = Adt45::Variant1 { fld0: _64,fld1: _9,fld2: _52,fld3: 2_usize,fld4: (*_27),fld5: Move(_36.fld4),fld6: (*_78) };
Goto(bb45)
}
bb45 = {
place!(Field::<char>(Variant(_41, 0), 1)) = _20;
_89.fld1 = [_82,_82];
Goto(bb46)
}
bb46 = {
_64 = Field::<u32>(Variant(Field::<Adt43>(Variant(_41, 0), 3).fld4, 2), 0) as f32;
_40.1 = _7 as f64;
_71 = (_56,);
_24 = _44;
_47.1.5.1 = _82 as f64;
_25 = _5 * _5;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5 = _36.fld5;
_43 = -_22;
_72 = (_47.0.0,);
_19 = _32 as u128;
_82 = -_42;
place!(Field::<[i16; 8]>(Variant(_41, 0), 2)) = [_72.0,_72.0,_37,_37,_37,_47.1.0,_47.0.0,_37];
_29.fld0.0 = [_54,_38,_54,_47.3,_38,_30];
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5.0 = [Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4)];
_47.0.5.1 = -_36.fld5.1;
_55 = _22 + _22;
place!(Field::<Adt40>(Variant(RET, 1), 5)) = Adt40::Variant1 { fld0: _44,fld1: Field::<Adt43>(Variant(_41, 0), 3).fld5,fld2: _15,fld3: Field::<Adt43>(Variant(_41, 0), 3).fld5.0,fld4: _33,fld5: _82 };
_63 = !_35;
_36.fld1 = Adt41::Variant1 { fld0: _71,fld1: Field::<[i16; 8]>(Variant(Field::<Adt40>(Variant(RET, 1), 5), 1), 2),fld2: _47.3,fld3: _89.fld1 };
_90.fld0 = _6;
_36.fld6 = core::ptr::addr_of_mut!(_57);
_63 = _45;
_47.1.1 = _47.0.1;
SetDiscriminant(Field::<Adt43>(Variant(_41, 0), 3).fld4, 1);
Call(place!(Field::<Adt40>(Variant(RET, 1), 5)) = fn12(Move(_84), _71, Field::<Adt43>(Variant(_41, 0), 3).fld5.0, _5, _71, _11, _71.0, Field::<Adt43>(Variant(_41, 0), 3).fld5.2, Field::<Adt43>(Variant(_41, 0), 3).fld5, _3.fld0.0, _8, _44, _29.fld0, Field::<Adt43>(Variant(_41, 0), 3).fld7.0, _73.0, _49), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
place!(Field::<usize>(Variant(RET, 1), 3)) = 2_usize + 6_usize;
_36.fld4 = Move(Field::<Adt40>(Variant(RET, 1), 5));
SetDiscriminant(_36.fld4, 1);
_94 = _73;
place!(Field::<bool>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4, 1), 0)) = !_35;
_89.fld4 = Field::<usize>(Variant(RET, 1), 3) as i16;
_93.0 = -_16.0;
_75 = _81.0 as f64;
SetDiscriminant(_36.fld1, 0);
_10.1 = _36.fld5.1;
Goto(bb48)
}
bb48 = {
_88 = _66;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5.2 = [_47.0.4,_39,_47.1.4,_39,_60];
place!(Field::<i32>(Variant(_36.fld4, 1), 5)) = _42;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld3 = _39 as f64;
_47.1.3 = _7;
place!(Field::<(i16,)>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4, 1), 4)).0 = !_47.0.0;
_39 = _47.1.4;
place!(Field::<[u128; 3]>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4, 1), 3)) = _36.fld5.0;
place!(Field::<(i16,)>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4, 1), 4)) = _72;
place!(Field::<f64>(Variant(_41, 0), 6)) = Field::<u128>(Variant(RET, 1), 4) as f64;
place!(Field::<i32>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4, 1), 5)) = _82;
_81 = (_93.0,);
_36.fld1 = Adt41::Variant1 { fld0: _71,fld1: _15,fld2: _13,fld3: _89.fld1 };
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5.2 = [_60,_47.0.4,_47.1.4,_39,_47.1.4];
place!(Field::<u128>(Variant(RET, 1), 4)) = (*_27) >> _25;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld4 = Adt40::Variant3 { fld0: _40.2,fld1: _36.fld5.0,fld2: _73.0,fld3: _25,fld4: _47.1.0,fld5: _89.fld2 };
_40.0 = &_33;
_36.fld3 = _75;
_84.fld0 = (_73.0,);
_32 = (-144715185599481101776337100961931746907_i128) - 168225443199204560844537233750270147301_i128;
_97 = _49;
SetDiscriminant(_36.fld1, 0);
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5 = _36.fld5;
_47.0.2 = [_47.0.4,_39,_60,_47.1.4,_39];
Goto(bb49)
}
bb49 = {
_53.1 = -Field::<Adt43>(Variant(_41, 0), 3).fld5.1;
place!(Field::<u16>(Variant(_41, 0), 4)) = _46 as u16;
place!(Field::<i64>(Variant(RET, 1), 6)) = _81.0 ^ (*_78);
_23 = [_12,_72.0,_33.0,_12,_89.fld4,Field::<i16>(Variant(Field::<Adt43>(Variant(_41, 0), 3).fld4, 3), 4),_89.fld4,_89.fld4];
_15 = [_37,_89.fld4,_47.1.0,_33.0,_33.0,_72.0,_47.1.0,_89.fld4];
_83 = !_51;
_47.1 = (_89.fld4, _88, Field::<Adt43>(Variant(_41, 0), 3).fld5.2, _7, _47.0.4, Move(_40));
_76 = [Field::<i32>(Variant(_36.fld4, 1), 5),Field::<i32>(Variant(_36.fld4, 1), 5)];
_10.0 = &_33;
Goto(bb50)
}
bb50 = {
_44 = _51 & _24;
_55 = _22 * Field::<f32>(Variant(RET, 1), 0);
SetDiscriminant(Field::<Adt43>(Variant(_41, 0), 3).fld4, 2);
_47.1.2 = Field::<Adt43>(Variant(_41, 0), 3).fld5.2;
_75 = _82 as f64;
_81.0 = Field::<i64>(Variant(RET, 1), 6) | _16.0;
_10.0 = &place!(Field::<(i16,)>(Variant(_36.fld4, 1), 4));
place!(Field::<char>(Variant(_41, 0), 1)) = _66;
_106 = _35;
place!(Field::<Adt53>(Variant(_41, 0), 0)) = Adt53::Variant0 { fld0: _53.2 };
_39 = (*_11) as u16;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld6 = _36.fld6;
_22 = _39 as f32;
_60 = _39 | _39;
_102 = _36.fld5.2;
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld3 = -_36.fld5.1;
Call(_90 = fn15(_54, _84.fld0.0, _36.fld3, _84.fld0, _47.3, _60, _4.fld0.0, _6, _36.fld3, _25, _38), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
SetDiscriminant(Field::<Adt53>(Variant(_41, 0), 0), 2);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(place!(Field::<Adt53>(Variant(_41, 0), 0)), 2), 2)).2 = [_39,_39,_39,_60,_60];
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld7.0 = [_54,_13,_47.3,_30,_54,_30];
_89.fld2 = _27;
_74 = [Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4)];
_89.fld0 = [_39,_60,_39];
_89.fld3 = Adt49::Variant0 { fld0: _72,fld1: _36.fld0 };
_23 = [_47.0.0,_47.1.0,_37,_37,_47.0.0,_37,Field::<(i16,)>(Variant(_89.fld3, 0), 0).0,Field::<(i16,)>(Variant(_89.fld3, 0), 0).0];
place!(Field::<char>(Variant(_41, 0), 1)) = _47.0.1;
_64 = _13 as f32;
_96 = core::ptr::addr_of_mut!(_13);
Call(place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_36.fld4, 1), 1)).0 = fn16(_73, _9, (*_11), Field::<f64>(Variant(_41, 0), 6), (*_78), Field::<Adt43>(Variant(_41, 0), 3).fld5.0, Field::<u64>(Variant(RET, 1), 1), (*_96), _6.0, _11, _2, _18, Field::<f32>(Variant(RET, 1), 0), Move(_29)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
_84.fld0.0 = _34;
SetDiscriminant(_89.fld3, 1);
Call(place!(Field::<Adt43>(Variant(_41, 0), 3)) = fn17(_94.0, _47.1.2), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
place!(Field::<f32>(Variant(RET, 1), 0)) = _55;
_91 = _37 as isize;
_90 = Move(_84);
_113 = [_12,_72.0,_89.fld4,_33.0,_37,_37,_33.0,_47.0.0];
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(place!(Field::<Adt53>(Variant(_41, 0), 0)), 2), 2)).1 = Field::<f64>(Variant(Field::<Adt43>(Variant(_41, 0), 3).fld2, 0), 2);
_51 = !_63;
_112.fld0 = _3.fld0;
Goto(bb54)
}
bb54 = {
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5.0 = [Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4)];
_7 = !_47.1.3;
_98 = !_47.1.3;
_75 = _47.0.5.1;
Goto(bb55)
}
bb55 = {
_47.1.5.0 = &_111;
_47.3 = !_54;
place!(Field::<bool>(Variant(_36.fld4, 1), 0)) = _55 > _31;
_53 = Move(_47.1.5);
_36.fld7.0 = _4.fld0.0;
_36.fld3 = Field::<u128>(Variant(RET, 1), 4) as f64;
_55 = _22;
_40.0 = &place!(Field::<(i16,)>(Variant(_36.fld4, 1), 4));
_100 = -_47.3;
_47.2 = [Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4)];
_36.fld5.2 = [_60,_39,_60,_39,Field::<u16>(Variant(_41, 0), 4)];
_47.1.3 = _100 as u8;
_36.fld6 = _96;
_40.0 = &_111;
_45 = _36.fld3 > _18;
SetDiscriminant(Field::<Adt43>(Variant(_41, 0), 3).fld4, 2);
_47.1.5.0 = &place!(Field::<(i16,)>(Variant(_36.fld4, 1), 4));
_36.fld1 = Move(Field::<Adt43>(Variant(_41, 0), 3).fld1);
_36.fld3 = -Field::<f64>(Variant(Field::<Adt43>(Variant(_41, 0), 3).fld2, 0), 2);
SetDiscriminant(_36.fld1, 0);
_29 = Adt46 { fld0: _36.fld7 };
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(place!(Field::<Adt53>(Variant(_41, 0), 0)), 2), 2)).0 = [Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4),Field::<u128>(Variant(RET, 1), 4)];
_110 = Field::<u128>(Variant(RET, 1), 4) ^ Field::<u128>(Variant(RET, 1), 4);
place!(Field::<(i16,)>(Variant(_36.fld4, 1), 4)) = (_47.0.0,);
_1 = !_47.3;
Goto(bb56)
}
bb56 = {
_5 = (*_11) >> Field::<u128>(Variant(RET, 1), 4);
_32 = -13726449140033641285619842408045027560_i128;
place!(Field::<*const i64>(Variant(_36.fld1, 0), 1)) = _78;
_89.fld3 = Adt49::Variant1 { fld0: Field::<u64>(Variant(RET, 1), 1) };
place!(Field::<Adt43>(Variant(_41, 0), 3)).fld5.0 = [Field::<u128>(Variant(RET, 1), 4),_110,_110];
_33.0 = _89.fld4;
place!(Field::<[u128; 3]>(Variant(_36.fld4, 1), 3)) = [_110,_110,Field::<u128>(Variant(RET, 1), 4)];
_77 = [_38,_30,_13,_68,(*_96),_38];
place!(Field::<Adt40>(Variant(RET, 1), 5)) = Adt40::Variant1 { fld0: _63,fld1: Field::<([u128; 3], f64, [u16; 5])>(Variant(Field::<Adt53>(Variant(_41, 0), 0), 2), 2),fld2: _113,fld3: Field::<([u128; 3], f64, [u16; 5])>(Variant(_36.fld4, 1), 1).0,fld4: _33,fld5: Field::<i32>(Variant(_36.fld4, 1), 5) };
_89.fld4 = -_72.0;
_48 = _47.1.1;
_21 = _30 * _54;
place!(Field::<*mut ([u16; 5],)>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld2, 0), 5)) = core::ptr::addr_of_mut!(place!(Field::<([u16; 5],)>(Variant(place!(Field::<Adt43>(Variant(_41, 0), 3)).fld2, 0), 4)));
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_36.fld4, 1), 1)).2 = [_39,_60,_60,_39,_39];
_91 = _8 | (*_96);
_47.0.5.0 = &place!(Field::<(i16,)>(Variant(_36.fld4, 1), 4));
_18 = _32 as f64;
_36.fld1 = Adt41::Variant0 { fld0: Field::<Adt43>(Variant(_41, 0), 3).fld0,fld1: _78 };
_53.1 = _75 * _47.0.5.1;
_95 = _56;
_107 = [Field::<i32>(Variant(Field::<Adt40>(Variant(RET, 1), 5), 1), 5),_82];
_72 = (_89.fld4,);
_62 = _95;
_84 = Adt46 { fld0: _94 };
_104 = Field::<u128>(Variant(RET, 1), 4) as f64;
place!(Field::<i32>(Variant(place!(Field::<Adt40>(Variant(RET, 1), 5)), 1), 5)) = _82;
Goto(bb57)
}
bb57 = {
Call(_124 = dump_var(5_usize, 54_usize, Move(_54), 83_usize, Move(_83), 81_usize, Move(_81), 24_usize, Move(_24)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_124 = dump_var(5_usize, 73_usize, Move(_73), 16_usize, Move(_16), 6_usize, Move(_6), 72_usize, Move(_72)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_124 = dump_var(5_usize, 74_usize, Move(_74), 21_usize, Move(_21), 19_usize, Move(_19), 97_usize, Move(_97)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_124 = dump_var(5_usize, 12_usize, Move(_12), 52_usize, Move(_52), 13_usize, Move(_13), 95_usize, Move(_95)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_124 = dump_var(5_usize, 51_usize, Move(_51), 48_usize, Move(_48), 2_usize, Move(_2), 62_usize, Move(_62)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_124 = dump_var(5_usize, 35_usize, Move(_35), 7_usize, Move(_7), 91_usize, Move(_91), 107_usize, Move(_107)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_124 = dump_var(5_usize, 88_usize, Move(_88), 79_usize, Move(_79), 110_usize, Move(_110), 100_usize, Move(_100)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_124 = dump_var(5_usize, 93_usize, Move(_93), 30_usize, Move(_30), 102_usize, Move(_102), 57_usize, Move(_57)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_124 = dump_var(5_usize, 98_usize, Move(_98), 125_usize, _125, 125_usize, _125, 125_usize, _125), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [isize; 6],mut _2: [isize; 6],mut _3: ([isize; 6],),mut _4: i8,mut _5: [i16; 8],mut _6: [isize; 6],mut _7: Adt46,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: [isize; 6]) -> f64 {
mir! {
type RET = f64;
let _13: i8;
let _14: Adt47;
let _15: ();
let _16: ();
{
_6 = _3.0;
_7.fld0.0 = [_9,_10,_11,_8,_9,_10];
_6 = _12;
_10 = 66_u8 as isize;
_8 = -_11;
_6 = [_8,_8,_8,_11,_11,_11];
_7.fld0.0 = [_10,_11,_8,_11,_8,_8];
_1 = _6;
RET = 14074_u16 as f64;
_9 = -_8;
_6 = [_8,_9,_8,_9,_9,_9];
_12 = _2;
_6 = [_8,_9,_8,_9,_11,_8];
_12 = [_8,_9,_9,_9,_11,_9];
_7.fld0.0 = [_8,_11,_9,_9,_8,_11];
_3.0 = _1;
_3.0 = [_9,_9,_11,_8,_8,_8];
_7.fld0 = (_3.0,);
_13 = 131969849101416184_i64 as i8;
_6 = [_8,_9,_11,_8,_11,_11];
_10 = _8;
RET = _11 as f64;
_3 = _7.fld0;
_1 = [_8,_8,_10,_10,_11,_10];
_14.fld4 = [615548828_i32,(-1209009676_i32)];
_14.fld5 = 1327295698_u32 - 2929430920_u32;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(6_usize, 1_usize, Move(_1), 6_usize, Move(_6), 12_usize, Move(_12), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(6_usize, 13_usize, Move(_13), 4_usize, Move(_4), 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: Adt46,mut _2: u64,mut _3: isize,mut _4: ([isize; 6],),mut _5: Adt46,mut _6: u8,mut _7: [isize; 6],mut _8: isize,mut _9: u64,mut _10: *mut isize,mut _11: *mut isize,mut _12: u8) -> isize {
mir! {
type RET = isize;
let _13: *const u128;
let _14: [u16; 3];
let _15: ();
let _16: ();
{
_1.fld0 = (_7,);
RET = (-20_i8) as isize;
_12 = _6;
_1 = Adt46 { fld0: _4 };
_2 = 1297328003_i32 as u64;
RET = true as isize;
_5 = Adt46 { fld0: _1.fld0 };
_5.fld0 = (_1.fld0.0,);
_5.fld0.0 = [_3,_3,_8,_8,_3,_3];
_10 = core::ptr::addr_of_mut!(_3);
_5.fld0.0 = [(*_10),(*_10),(*_10),_3,(*_10),_3];
RET = (*_10) + (*_10);
_5 = Adt46 { fld0: _1.fld0 };
_10 = core::ptr::addr_of_mut!((*_10));
_8 = -(*_10);
_9 = (-21703_i16) as u64;
_6 = !_12;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(7_usize, 7_usize, Move(_7), 6_usize, Move(_6), 2_usize, Move(_2), 9_usize, Move(_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [isize; 6],mut _2: *mut isize,mut _3: Adt46,mut _4: isize,mut _5: *mut isize,mut _6: ([isize; 6],),mut _7: [isize; 6],mut _8: [isize; 6],mut _9: ([isize; 6],),mut _10: isize,mut _11: u64,mut _12: isize) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _13: ([u16; 5],);
let _14: Adt46;
let _15: char;
let _16: ();
let _17: ();
{
_3.fld0 = _9;
RET = [_12,_10,_10,_10,_10,_12];
_10 = _4;
_7 = [_12,_12,_4,_4,_12,_12];
_1 = [_4,_4,_10,_12,_12,_4];
RET = [_4,_10,_10,_10,_12,_12];
RET = _3.fld0.0;
_13.0 = [46458_u16,55588_u16,48048_u16,9215_u16,54059_u16];
_14.fld0.0 = [_10,_12,_4,_10,_12,_12];
_12 = _4 - _10;
_8 = _1;
_3 = Move(_14);
_14.fld0 = _9;
_12 = _4;
_15 = '\u{e6b3a}';
Goto(bb1)
}
bb1 = {
Call(_16 = dump_var(8_usize, 10_usize, Move(_10), 12_usize, Move(_12), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_16 = dump_var(8_usize, 1_usize, Move(_1), 17_usize, _17, 17_usize, _17, 17_usize, _17), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: Adt46,mut _2: ([isize; 6],),mut _3: u64,mut _4: [isize; 6],mut _5: isize,mut _6: [isize; 6],mut _7: ([isize; 6],),mut _8: i8) -> u8 {
mir! {
type RET = u8;
let _9: f64;
let _10: [u128; 3];
let _11: [i32; 2];
let _12: ([u16; 5],);
let _13: f32;
let _14: Adt40;
let _15: isize;
let _16: ([u16; 5],);
let _17: Adt49;
let _18: ([u16; 5],);
let _19: isize;
let _20: [u16; 3];
let _21: [i32; 2];
let _22: f64;
let _23: bool;
let _24: Adt48;
let _25: f64;
let _26: ([u128; 3], f64, [u16; 5]);
let _27: Adt56;
let _28: ();
let _29: ();
{
RET = !61_u8;
_1.fld0.0 = _4;
_7 = (_4,);
_6 = [_5,_5,_5,_5,_5,_5];
Goto(bb1)
}
bb1 = {
_4 = _6;
RET = 13_u8 ^ 29_u8;
_1.fld0 = (_2.0,);
_10 = [181868821982918017349745487637467436180_u128,61129118968663815865751994050385062599_u128,52479632272798865044732790897858579350_u128];
_4 = [_5,_5,_5,_5,_5,_5];
RET = 225_u8;
_2 = (_1.fld0.0,);
_9 = (-6747_i16) as f64;
_2.0 = [_5,_5,_5,_5,_5,_5];
_7.0 = _2.0;
_8 = -(-59_i8);
_2.0 = _4;
_1.fld0 = (_2.0,);
_7 = (_2.0,);
_4 = [_5,_5,_5,_5,_5,_5];
_6 = _2.0;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
225 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2.0 = _7.0;
_12.0 = [15357_u16,14897_u16,51853_u16,61370_u16,37766_u16];
_10 = [160461945170150666380299283305883441689_u128,283359822834321824447559457364624927769_u128,226595465164513472418052782907073130658_u128];
_12.0 = [24164_u16,42348_u16,60518_u16,15577_u16,40565_u16];
_4 = [_5,_5,_5,_5,_5,_5];
_1.fld0 = (_2.0,);
_12.0 = [9073_u16,29738_u16,30742_u16,44275_u16,59993_u16];
_7 = (_2.0,);
_13 = _3 as f32;
_9 = _13 as f64;
RET = false as u8;
RET = (-108520541897648241412267798771572982568_i128) as u8;
_8 = 1_i8 ^ 80_i8;
_10 = [204386250590341063876308838501518845854_u128,254964309570998429216640930408960455315_u128,95186424318913466085369630506221679761_u128];
_1 = Adt46 { fld0: _2 };
_12.0 = [25676_u16,40092_u16,61310_u16,46348_u16,63918_u16];
_9 = _5 as f64;
_1.fld0.0 = _7.0;
RET = '\u{d357e}' as u8;
Goto(bb10)
}
bb10 = {
_11 = [(-1603822489_i32),906296981_i32];
_3 = 11328583207030073013_u64;
_4 = [_5,_5,_5,_5,_5,_5];
_8 = !23_i8;
_7.0 = _1.fld0.0;
_8 = _13 as i8;
_14 = Adt40::Variant2 { fld0: 2627429725_u32,fld1: 21740_u16 };
RET = 254_u8;
_15 = _5 << _5;
_12.0 = [46640_u16,14710_u16,28863_u16,9965_u16,37538_u16];
_7 = _1.fld0;
_10 = [314165902330491202549231240277149408925_u128,1672337995312017050287663534196202648_u128,328076934211893674293996556913100784137_u128];
place!(Field::<u16>(Variant(_14, 2), 1)) = 48121_u16 ^ 10234_u16;
_8 = 117892991980775181831978394496350911347_u128 as i8;
_6 = _4;
RET = _9 as u8;
_14 = Adt40::Variant0 { fld0: _9 };
_15 = _5 | _5;
_5 = 18717_u16 as isize;
RET = !70_u8;
match _3 {
0 => bb5,
1 => bb11,
11328583207030073013 => bb13,
_ => bb12
}
}
bb11 = {
_4 = _6;
RET = 13_u8 ^ 29_u8;
_1.fld0 = (_2.0,);
_10 = [181868821982918017349745487637467436180_u128,61129118968663815865751994050385062599_u128,52479632272798865044732790897858579350_u128];
_4 = [_5,_5,_5,_5,_5,_5];
RET = 225_u8;
_2 = (_1.fld0.0,);
_9 = (-6747_i16) as f64;
_2.0 = [_5,_5,_5,_5,_5,_5];
_7.0 = _2.0;
_8 = -(-59_i8);
_2.0 = _4;
_1.fld0 = (_2.0,);
_7 = (_2.0,);
_4 = [_5,_5,_5,_5,_5,_5];
_6 = _2.0;
match RET {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
225 => bb9,
_ => bb8
}
}
bb12 = {
Return()
}
bb13 = {
place!(Field::<f64>(Variant(_14, 0), 0)) = _9 + _9;
_4 = _7.0;
_13 = (-9400_i16) as f32;
SetDiscriminant(_14, 1);
_7 = (_1.fld0.0,);
place!(Field::<(i16,)>(Variant(_14, 1), 4)) = ((-20563_i16),);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_14, 1), 1)).2 = [23924_u16,41382_u16,34032_u16,57134_u16,5983_u16];
place!(Field::<(i16,)>(Variant(_14, 1), 4)) = ((-12897_i16),);
_5 = _8 as isize;
place!(Field::<(i16,)>(Variant(_14, 1), 4)).0 = -(-15110_i16);
_20 = [294_u16,65111_u16,23482_u16];
_14 = Adt40::Variant2 { fld0: 2920301525_u32,fld1: 10704_u16 };
_16.0 = _12.0;
Goto(bb14)
}
bb14 = {
_19 = _15 - _15;
_25 = -_9;
RET = !222_u8;
_2.0 = [_19,_15,_19,_19,_15,_15];
_26.2 = _16.0;
place!(Field::<u32>(Variant(_14, 2), 0)) = !3811421362_u32;
RET = !227_u8;
place!(Field::<u16>(Variant(_14, 2), 1)) = !38181_u16;
_18 = (_12.0,);
_22 = 6478389084215523451_usize as f64;
_27.fld7 = -(-117530458860461043042680903956378584563_i128);
_4 = [_15,_19,_15,_15,_15,_15];
_25 = Field::<u32>(Variant(_14, 2), 0) as f64;
_5 = 153218345071589684791842762695022886084_u128 as isize;
_3 = 7109411660640074086_u64 ^ 9649069833741098256_u64;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(9_usize, 2_usize, Move(_2), 5_usize, Move(_5), 11_usize, Move(_11), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(9_usize, 16_usize, Move(_16), 4_usize, Move(_4), 3_usize, Move(_3), 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: ([isize; 6],),mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: [isize; 6],mut _7: ([isize; 6],),mut _8: ([isize; 6],),mut _9: ([isize; 6],),mut _10: isize,mut _11: i8,mut _12: [isize; 6],mut _13: ([isize; 6],),mut _14: ([isize; 6],),mut _15: Adt46,mut _16: ([isize; 6],)) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _17: ((i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64)), [u128; 3], isize, i128, bool);
let _18: ();
let _19: ();
{
_10 = _4;
_12 = _15.fld0.0;
_15 = Adt46 { fld0: _8 };
_13 = _1;
RET = [_2,_2,_10,_10,_10,_5];
_16.0 = _13.0;
_5 = _2 | _3;
_7 = _1;
_2 = 247568266750078723399871730121782718222_u128 as isize;
_17.2 = [217516063162296986404402797822475144704_u128,268463899482488878452468488274018070979_u128,290515865945172738407404515719569688197_u128];
_15.fld0 = (_8.0,);
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(10_usize, 12_usize, Move(_12), 11_usize, Move(_11), 6_usize, Move(_6), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_18 = dump_var(10_usize, 10_usize, Move(_10), 2_usize, Move(_2), 3_usize, Move(_3), 19_usize, _19), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: bool,mut _2: u64,mut _3: isize,mut _4: u128,mut _5: ([isize; 6],),mut _6: bool,mut _7: u64,mut _8: [isize; 6],mut _9: f32,mut _10: ([isize; 6],),mut _11: isize,mut _12: *mut isize) -> bool {
mir! {
type RET = bool;
let _13: Adt50;
let _14: ();
let _15: ();
{
_11 = _3 - _3;
_12 = core::ptr::addr_of_mut!(_11);
Goto(bb1)
}
bb1 = {
_6 = !_1;
_12 = core::ptr::addr_of_mut!(_3);
_11 = '\u{21b87}' as isize;
_7 = !_2;
_6 = _9 == _9;
_5.0 = [(*_12),(*_12),(*_12),_3,(*_12),(*_12)];
RET = _1 == _1;
_9 = 29352_u16 as f32;
_5.0 = _10.0;
_6 = !_1;
Goto(bb2)
}
bb2 = {
Call(_14 = dump_var(11_usize, 5_usize, Move(_5), 8_usize, Move(_8), 4_usize, Move(_4), 7_usize, Move(_7)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_14 = dump_var(11_usize, 2_usize, Move(_2), 15_usize, _15, 15_usize, _15, 15_usize, _15), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: Adt46,mut _2: ([u16; 3],),mut _3: [u128; 3],mut _4: i8,mut _5: ([u16; 3],),mut _6: *mut i8,mut _7: [u16; 3],mut _8: [u16; 5],mut _9: ([u128; 3], f64, [u16; 5]),mut _10: [isize; 6],mut _11: isize,mut _12: bool,mut _13: ([isize; 6],),mut _14: [isize; 6],mut _15: [isize; 6],mut _16: ([u16; 5],)) -> Adt40 {
mir! {
type RET = Adt40;
let _17: isize;
let _18: char;
let _19: bool;
let _20: f32;
let _21: (i64,);
let _22: *const char;
let _23: [i16; 8];
let _24: i8;
let _25: &'static (i16,);
let _26: (&'static (i16,), f64, u64);
let _27: [u128; 3];
let _28: i8;
let _29: u8;
let _30: f32;
let _31: (i64,);
let _32: &'static (i16,);
let _33: ([u128; 3], f64, [u16; 5]);
let _34: Adt52;
let _35: u8;
let _36: bool;
let _37: isize;
let _38: char;
let _39: isize;
let _40: ([u16; 5],);
let _41: isize;
let _42: *const char;
let _43: Adt54;
let _44: f32;
let _45: Adt44;
let _46: isize;
let _47: Adt56;
let _48: ();
let _49: ();
{
_11 = 7566641864941463936_i64 as isize;
_17 = 20_u8 as isize;
_8 = [31824_u16,11569_u16,55535_u16,34083_u16,21402_u16];
_17 = 4005265022_u32 as isize;
_11 = _17;
_10 = _15;
_17 = _12 as isize;
_17 = -_11;
_13 = (_15,);
_5.0 = [4669_u16,17866_u16,45912_u16];
_6 = core::ptr::addr_of_mut!(_4);
_8 = [5797_u16,45701_u16,51964_u16,54439_u16,58155_u16];
_1.fld0 = (_15,);
_14 = [_17,_17,_17,_17,_11,_17];
_2.0 = _7;
_13 = (_1.fld0.0,);
_20 = 24538_i16 as f32;
_13 = (_1.fld0.0,);
_1 = Adt46 { fld0: _13 };
_14 = _10;
_2 = _5;
_3 = [330772720159076894243427949420795901597_u128,59399451774558345753568963054077212773_u128,79578284569607410207426481813904484948_u128];
_4 = 2476593789_u32 as i8;
_11 = _20 as isize;
_5.0 = _7;
Goto(bb1)
}
bb1 = {
Call(_20 = fn13(_9.2, _9.2, _16.0, _10, _1.fld0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_20 = 142028965319910112169120958172649256947_u128 as f32;
_6 = core::ptr::addr_of_mut!((*_6));
_5.0 = _7;
_1.fld0 = (_10,);
_18 = '\u{4532d}';
_21.0 = !3041144756900808052_i64;
_22 = core::ptr::addr_of!(_18);
_20 = _21.0 as f32;
_16 = (_9.2,);
_14 = [_11,_11,_17,_17,_11,_11];
_5.0 = _7;
_3 = _9.0;
_19 = !_12;
_8 = [7382_u16,20445_u16,50718_u16,578_u16,11401_u16];
_19 = _12 & _12;
_17 = _11 ^ _11;
_16 = (_9.2,);
Call(_15 = fn14(_9.2, _9, _1.fld0.0, _1.fld0, Move(_1), _5.0, _9.1, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_12 = _19;
_7 = _2.0;
_5 = (_2.0,);
_17 = _11;
_14 = _13.0;
Goto(bb4)
}
bb4 = {
_13 = (_14,);
_16 = (_9.2,);
_1 = Adt46 { fld0: _13 };
_16 = (_9.2,);
_10 = _15;
_15 = _14;
_18 = '\u{6ed69}';
_13.0 = _1.fld0.0;
_16.0 = [21895_u16,3251_u16,20187_u16,58207_u16,24865_u16];
_16.0 = [415_u16,20204_u16,62868_u16,5459_u16,25075_u16];
_29 = !234_u8;
_15 = [_11,_11,_11,_17,_17,_11];
_8 = [42008_u16,15438_u16,11424_u16,11000_u16,49800_u16];
_23 = [(-2727_i16),(-13119_i16),(-32393_i16),(-15048_i16),32244_i16,11245_i16,(-12142_i16),(-7818_i16)];
_8 = [20341_u16,433_u16,46742_u16,49279_u16,55886_u16];
_5.0 = [30163_u16,45760_u16,21098_u16];
_12 = _19 <= _19;
_21 = (2570008080887163711_i64,);
_19 = _12;
Goto(bb5)
}
bb5 = {
_16 = (_9.2,);
_1.fld0 = (_13.0,);
_5.0 = [37709_u16,46211_u16,34637_u16];
RET = Adt40::Variant0 { fld0: _9.1 };
_4 = !29_i8;
_12 = _19;
_28 = 38297_u16 as i8;
_27 = [324674937067748099650470383980952198285_u128,262693587807585166064517248991535675293_u128,23838440577070186006435701156519730937_u128];
_17 = _11;
_29 = _21.0 as u8;
_31 = (_21.0,);
_13.0 = _14;
_6 = core::ptr::addr_of_mut!((*_6));
SetDiscriminant(RET, 1);
match _21.0 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb8,
2570008080887163711 => bb10,
_ => bb9
}
}
bb6 = {
_13 = (_14,);
_16 = (_9.2,);
_1 = Adt46 { fld0: _13 };
_16 = (_9.2,);
_10 = _15;
_15 = _14;
_18 = '\u{6ed69}';
_13.0 = _1.fld0.0;
_16.0 = [21895_u16,3251_u16,20187_u16,58207_u16,24865_u16];
_16.0 = [415_u16,20204_u16,62868_u16,5459_u16,25075_u16];
_29 = !234_u8;
_15 = [_11,_11,_11,_17,_17,_11];
_8 = [42008_u16,15438_u16,11424_u16,11000_u16,49800_u16];
_23 = [(-2727_i16),(-13119_i16),(-32393_i16),(-15048_i16),32244_i16,11245_i16,(-12142_i16),(-7818_i16)];
_8 = [20341_u16,433_u16,46742_u16,49279_u16,55886_u16];
_5.0 = [30163_u16,45760_u16,21098_u16];
_12 = _19 <= _19;
_21 = (2570008080887163711_i64,);
_19 = _12;
Goto(bb5)
}
bb7 = {
_12 = _19;
_7 = _2.0;
_5 = (_2.0,);
_17 = _11;
_14 = _13.0;
Goto(bb4)
}
bb8 = {
_20 = 142028965319910112169120958172649256947_u128 as f32;
_6 = core::ptr::addr_of_mut!((*_6));
_5.0 = _7;
_1.fld0 = (_10,);
_18 = '\u{4532d}';
_21.0 = !3041144756900808052_i64;
_22 = core::ptr::addr_of!(_18);
_20 = _21.0 as f32;
_16 = (_9.2,);
_14 = [_11,_11,_17,_17,_11,_11];
_5.0 = _7;
_3 = _9.0;
_19 = !_12;
_8 = [7382_u16,20445_u16,50718_u16,578_u16,11401_u16];
_19 = _12 & _12;
_17 = _11 ^ _11;
_16 = (_9.2,);
Call(_15 = fn14(_9.2, _9, _1.fld0.0, _1.fld0, Move(_1), _5.0, _9.1, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
Call(_20 = fn13(_9.2, _9.2, _16.0, _10, _1.fld0), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
place!(Field::<(i16,)>(Variant(RET, 1), 4)) = (10562_i16,);
place!(Field::<i32>(Variant(RET, 1), 5)) = (-467513283_i32);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET, 1), 1)).0 = [145188601335259884934087587009937617511_u128,80868201639014787934142946601208607846_u128,63349619622558078503652878000938464524_u128];
_23 = [Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0];
_33.1 = -_9.1;
_2.0 = [55484_u16,42444_u16,45290_u16];
place!(Field::<[i16; 8]>(Variant(RET, 1), 2)) = [Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0,Field::<(i16,)>(Variant(RET, 1), 4).0];
_13 = (_14,);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET, 1), 1)).1 = -_9.1;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET, 1), 1)).1 = -_9.1;
RET = Adt40::Variant2 { fld0: 1251131511_u32,fld1: 18540_u16 };
_33.2 = [44596_u16,4223_u16,62709_u16,64485_u16,31070_u16];
_2.0 = [42550_u16,26855_u16,45051_u16];
_33.0 = [227336587170183230141869963500856979804_u128,287858516195594662344951351758959369778_u128,242992987166205451024902234610157148694_u128];
_33.2 = [327_u16,31323_u16,54504_u16,47556_u16,6061_u16];
_33.1 = _9.1;
_30 = 15323619646415243286270528478426638424_i128 as f32;
_15 = _13.0;
_26.2 = 3034874032370081094_u64;
_27 = [132842621662094514796309990704583879327_u128,296485588689086502291188007668691755434_u128,337197896394835494633775946032640039475_u128];
_9.2 = [25065_u16,63881_u16,39444_u16,32983_u16,57209_u16];
place!(Field::<u32>(Variant(RET, 2), 0)) = 2484367209_u32 << _28;
match _31.0 {
0 => bb1,
2570008080887163711 => bb11,
_ => bb6
}
}
bb11 = {
_30 = _26.2 as f32;
_1.fld0 = (_13.0,);
_33.2 = [25717_u16,42902_u16,60890_u16,28056_u16,35611_u16];
_13.0 = [_11,_11,_17,_17,_11,_17];
_33.1 = _9.1;
place!(Field::<u32>(Variant(RET, 2), 0)) = !497994016_u32;
_5 = (_7,);
place!(Field::<u16>(Variant(RET, 2), 1)) = !49247_u16;
_22 = core::ptr::addr_of!((*_22));
_2.0 = _5.0;
_26.1 = _30 as f64;
_26.1 = _26.2 as f64;
_1 = Adt46 { fld0: _13 };
_10 = [_11,_11,_11,_17,_17,_17];
_9.0 = [234045376564396161389101374440639589676_u128,162274192329270523809018787251831801436_u128,131809417344714819468070767664729472839_u128];
SetDiscriminant(RET, 3);
_27 = _3;
_33.0 = [335502006195908858700777069050521199807_u128,222657878736850331423966717105184952607_u128,260255146788607170283839763583160860552_u128];
_1.fld0 = _13;
_38 = _18;
_10 = [_17,_17,_11,_11,_11,_17];
_33 = (_27, _9.1, _16.0);
place!(Field::<i16>(Variant(RET, 3), 4)) = _21.0 as i16;
_14 = _15;
Goto(bb12)
}
bb12 = {
_13 = _1.fld0;
place!(Field::<[isize; 6]>(Variant(RET, 3), 2)) = [_17,_17,_11,_11,_17,_11];
_2 = (_5.0,);
_4 = _28;
_36 = _12;
_33.2 = [23640_u16,29156_u16,42017_u16,25283_u16,64322_u16];
_9.1 = -_33.1;
_40 = _16;
_16.0 = [32112_u16,52544_u16,63054_u16,4593_u16,57337_u16];
_18 = _38;
place!(Field::<[u128; 3]>(Variant(RET, 3), 1)) = _27;
Goto(bb13)
}
bb13 = {
place!(Field::<u64>(Variant(RET, 3), 0)) = !_26.2;
_2.0 = [40532_u16,5115_u16,29460_u16];
_39 = _38 as isize;
RET = Adt40::Variant0 { fld0: _33.1 };
_44 = _20;
_23 = [(-19497_i16),(-29507_i16),(-27051_i16),10433_i16,17854_i16,(-9257_i16),(-21235_i16),(-26347_i16)];
_45 = Adt44::Variant2 { fld0: _29,fld1: _6,fld2: _31,fld3: (*_6),fld4: 10880_i16,fld5: _9,fld6: _1.fld0 };
_17 = (*_6) as isize;
place!(Field::<i16>(Variant(_45, 2), 4)) = (-14298_i16) * (-24483_i16);
SetDiscriminant(RET, 3);
_3 = _27;
RET = Adt40::Variant0 { fld0: Field::<([u128; 3], f64, [u16; 5])>(Variant(_45, 2), 5).1 };
_21.0 = _31.0;
_11 = _17;
_47.fld4 = (Field::<(i64,)>(Variant(_45, 2), 2).0,);
_13 = (_15,);
_35 = Field::<u8>(Variant(_45, 2), 0) >> (*_6);
Goto(bb14)
}
bb14 = {
Call(_48 = dump_var(12_usize, 40_usize, Move(_40), 39_usize, Move(_39), 13_usize, Move(_13), 8_usize, Move(_8)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_48 = dump_var(12_usize, 17_usize, Move(_17), 15_usize, Move(_15), 2_usize, Move(_2), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(12_usize, 4_usize, Move(_4), 28_usize, Move(_28), 7_usize, Move(_7), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(12_usize, 31_usize, Move(_31), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [u16; 5],mut _2: [u16; 5],mut _3: [u16; 5],mut _4: [isize; 6],mut _5: ([isize; 6],)) -> f32 {
mir! {
type RET = f32;
let _6: i8;
let _7: u8;
let _8: isize;
let _9: bool;
let _10: [i16; 8];
let _11: [isize; 6];
let _12: bool;
let _13: u64;
let _14: Adt50;
let _15: bool;
let _16: Adt51;
let _17: [u128; 3];
let _18: ([u128; 3], f64, [u16; 5]);
let _19: i32;
let _20: u16;
let _21: (i16,);
let _22: isize;
let _23: [u16; 5];
let _24: [i16; 8];
let _25: i8;
let _26: Adt43;
let _27: (&'static (i16,), f64, u64);
let _28: [i32; 2];
let _29: isize;
let _30: Adt49;
let _31: f64;
let _32: ([u16; 3],);
let _33: [i32; 2];
let _34: ();
let _35: ();
{
RET = (-86415437655577578207761097803011691335_i128) as f32;
_2 = [56278_u16,20819_u16,13279_u16,13984_u16,29882_u16];
_2 = _1;
_5.0 = [9223372036854775807_isize,(-38_isize),(-9223372036854775808_isize),(-107_isize),21_isize,(-9223372036854775808_isize)];
_5 = (_4,);
_5.0 = _4;
_5 = (_4,);
_1 = [29971_u16,16990_u16,50189_u16,7351_u16,58449_u16];
_5 = (_4,);
_5 = (_4,);
RET = 595_i16 as f32;
_1 = [21877_u16,10593_u16,56621_u16,59933_u16,64683_u16];
_4 = _5.0;
_6 = (-103_i8);
RET = 14773_u16 as f32;
_3 = [47244_u16,32878_u16,28880_u16,37390_u16,24445_u16];
_5 = (_4,);
_5.0 = _4;
Goto(bb1)
}
bb1 = {
_7 = 186_u8;
_5 = (_4,);
RET = _7 as f32;
_2 = [41975_u16,40530_u16,21367_u16,7640_u16,16484_u16];
_2 = _3;
_5.0 = [(-101_isize),14_isize,13_isize,(-9223372036854775808_isize),(-1_isize),(-9223372036854775808_isize)];
_3 = _2;
_3 = [32805_u16,29610_u16,43830_u16,33785_u16,41131_u16];
_6 = false as i8;
match _7 {
0 => bb2,
1 => bb3,
2 => bb4,
186 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_2 = _3;
_2 = [12699_u16,45713_u16,63232_u16,52444_u16,49576_u16];
RET = _6 as f32;
_5.0 = [(-104_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),112_isize];
_9 = false;
_2 = [7932_u16,2625_u16,62467_u16,2319_u16,41273_u16];
_2 = [23031_u16,17168_u16,35508_u16,56611_u16,21963_u16];
_3 = _1;
_4 = _5.0;
RET = 49036053878466592285845876492942832799_i128 as f32;
_4 = [46_isize,9223372036854775807_isize,9223372036854775807_isize,45_isize,9223372036854775807_isize,9223372036854775807_isize];
_7 = !117_u8;
Goto(bb7)
}
bb7 = {
_9 = true;
RET = (-1624831285_i32) as f32;
_6 = -(-80_i8);
_8 = -(-9223372036854775808_isize);
_3 = _1;
_10 = [(-25468_i16),(-20687_i16),(-28947_i16),14423_i16,1691_i16,13542_i16,22652_i16,(-6750_i16)];
Goto(bb8)
}
bb8 = {
_5.0 = [_8,_8,_8,_8,_8,_8];
_8 = _9 as isize;
RET = _7 as f32;
RET = 35643_u16 as f32;
RET = 27700_i16 as f32;
_3 = [32383_u16,3860_u16,12453_u16,49783_u16,18011_u16];
_3 = _1;
_8 = (-115_isize) << _6;
_4 = _5.0;
_2 = _1;
_2 = [45410_u16,57710_u16,33489_u16,12465_u16,18887_u16];
_3 = [24386_u16,55371_u16,56280_u16,30491_u16,30367_u16];
_10 = [(-17192_i16),3475_i16,6062_i16,20834_i16,32097_i16,20256_i16,(-256_i16),11647_i16];
_9 = !false;
_1 = [30106_u16,2199_u16,55929_u16,61280_u16,62084_u16];
_2 = [44010_u16,61717_u16,49497_u16,35927_u16,9505_u16];
_3 = [60008_u16,17041_u16,20417_u16,64299_u16,59470_u16];
_12 = _9;
_11 = _4;
_15 = _8 != _8;
_13 = 7871_u16 as u64;
_10 = [(-8625_i16),25863_i16,(-25411_i16),27357_i16,25799_i16,(-15083_i16),11173_i16,21851_i16];
_4 = [_8,_8,_8,_8,_8,_8];
_16.fld4 = 22023_i16;
Goto(bb9)
}
bb9 = {
_10 = [_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4];
_16.fld3 = Adt49::Variant1 { fld0: _13 };
SetDiscriminant(_16.fld3, 0);
place!(Field::<(i16,)>(Variant(_16.fld3, 0), 0)) = (_16.fld4,);
_5.0 = _4;
RET = _6 as f32;
_12 = _15 | _15;
_6 = 598601257912489488_i64 as i8;
_16.fld1 = [1143548717_i32,1507675670_i32];
_16.fld4 = Field::<(i16,)>(Variant(_16.fld3, 0), 0).0 & Field::<(i16,)>(Variant(_16.fld3, 0), 0).0;
_3 = [59321_u16,23357_u16,51494_u16,9967_u16,54121_u16];
_3 = [22862_u16,22173_u16,24676_u16,7952_u16,19926_u16];
_17 = [305965995421967683288468996965451792991_u128,39015931467234541147545733673794844340_u128,263620333606365331552714824788260804574_u128];
_12 = _15;
_3 = [23389_u16,17498_u16,60709_u16,43962_u16,15630_u16];
_11 = [_8,_8,_8,_8,_8,_8];
_1 = _3;
place!(Field::<*mut u16>(Variant(_16.fld3, 0), 1)) = core::ptr::addr_of_mut!(_20);
_7 = 2048070215_u32 as u8;
SetDiscriminant(_16.fld3, 0);
_6 = _16.fld4 as i8;
_12 = _9 | _15;
Goto(bb10)
}
bb10 = {
place!(Field::<*mut u16>(Variant(_16.fld3, 0), 1)) = core::ptr::addr_of_mut!(_20);
_18.1 = 45235_u16 as f64;
_16.fld0 = [10995_u16,3445_u16,4075_u16];
_22 = _8 ^ _8;
_12 = !_15;
_18.1 = _7 as f64;
_3 = [31853_u16,57261_u16,3103_u16,58051_u16,55230_u16];
_11 = [_22,_22,_8,_22,_22,_22];
_5 = (_4,);
_13 = !12140880992360603175_u64;
_24 = [_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4];
_18.2 = _1;
_10 = [_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4,_16.fld4];
place!(Field::<*mut u16>(Variant(_16.fld3, 0), 1)) = core::ptr::addr_of_mut!(_20);
_23 = [47052_u16,1427_u16,22360_u16,30703_u16,27362_u16];
_18.0 = _17;
_16.fld4 = !(-24762_i16);
_27.0 = &_21;
_20 = 38215_u16 & 10309_u16;
Goto(bb11)
}
bb11 = {
_4 = _5.0;
_2 = _23;
_21 = (_16.fld4,);
_28 = _16.fld1;
_26.fld5.2 = [_20,_20,_20,_20,_20];
_8 = _22 ^ _22;
_15 = !_12;
_26.fld5 = _18;
_25 = !_6;
_19 = 18330083921570290464_usize as i32;
_5 = (_11,);
place!(Field::<(i16,)>(Variant(_16.fld3, 0), 0)).0 = _16.fld4;
_26.fld3 = -_18.1;
_27.1 = -_18.1;
_26.fld6 = core::ptr::addr_of_mut!(_29);
_4 = _5.0;
_29 = !_22;
_5 = (_11,);
_26.fld0 = Field::<*mut u16>(Variant(_16.fld3, 0), 1);
Goto(bb12)
}
bb12 = {
_27.2 = _13 >> _8;
Goto(bb13)
}
bb13 = {
_26.fld4 = Adt40::Variant0 { fld0: _27.1 };
_18 = (_26.fld5.0, _26.fld3, _23);
_24 = [_16.fld4,Field::<(i16,)>(Variant(_16.fld3, 0), 0).0,Field::<(i16,)>(Variant(_16.fld3, 0), 0).0,_21.0,Field::<(i16,)>(Variant(_16.fld3, 0), 0).0,_21.0,Field::<(i16,)>(Variant(_16.fld3, 0), 0).0,_21.0];
_26.fld7.0 = [_8,_29,_8,_8,_22,_22];
_22 = _29 | _29;
place!(Field::<*mut u16>(Variant(_16.fld3, 0), 1)) = core::ptr::addr_of_mut!(_20);
place!(Field::<f64>(Variant(_26.fld4, 0), 0)) = 1997605620579892802_usize as f64;
_25 = _6 ^ _6;
_4 = _26.fld7.0;
_26.fld0 = Field::<*mut u16>(Variant(_16.fld3, 0), 1);
_26.fld5.0 = [277189058913568005672678946653815042642_u128,86403112829541140886978009036487660563_u128,126636440491307917169493484332738850307_u128];
_1 = [_20,_20,_20,_20,_20];
_26.fld7 = (_4,);
_21.0 = _13 as i16;
_20 = '\u{301ec}' as u16;
_18.0 = [153539842727352863524740134225097478593_u128,154939703072649791798315927786151911364_u128,129639212974656575627916491432716760660_u128];
_2 = [_20,_20,_20,_20,_20];
RET = _27.1 as f32;
_26.fld5.2 = [_20,_20,_20,_20,_20];
_26.fld0 = core::ptr::addr_of_mut!(_20);
_18.1 = -_27.1;
SetDiscriminant(_16.fld3, 1);
_23 = _18.2;
_7 = !227_u8;
SetDiscriminant(_26.fld4, 0);
Call(_6 = core::intrinsics::bswap(_25), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_10 = [_16.fld4,_21.0,_16.fld4,_16.fld4,_16.fld4,_21.0,_16.fld4,_21.0];
_30 = Adt49::Variant1 { fld0: _27.2 };
_27.2 = !Field::<u64>(Variant(_30, 1), 0);
_23 = [_20,_20,_20,_20,_20];
_31 = -_26.fld5.1;
_22 = _18.1 as isize;
SetDiscriminant(_30, 1);
_10 = [_16.fld4,_16.fld4,_21.0,_21.0,_21.0,_21.0,_21.0,_21.0];
place!(Field::<u64>(Variant(_16.fld3, 1), 0)) = _13;
_21 = (_16.fld4,);
_6 = !_25;
_5.0 = [_29,_29,_8,_22,_29,_29];
_18 = (_26.fld5.0, _26.fld5.1, _23);
_32.0 = [_20,_20,_20];
_28 = [_19,_19];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(13_usize, 32_usize, Move(_32), 28_usize, Move(_28), 21_usize, Move(_21), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(13_usize, 9_usize, Move(_9), 29_usize, Move(_29), 1_usize, Move(_1), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(13_usize, 8_usize, Move(_8), 15_usize, Move(_15), 7_usize, Move(_7), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [u16; 5],mut _2: ([u128; 3], f64, [u16; 5]),mut _3: [isize; 6],mut _4: ([isize; 6],),mut _5: Adt46,mut _6: [u16; 3],mut _7: f64,mut _8: ([u16; 5],)) -> [isize; 6] {
mir! {
type RET = [isize; 6];
let _9: [isize; 6];
let _10: [i32; 2];
let _11: [u16; 3];
let _12: ();
let _13: ();
{
_4 = (_3,);
_8.0 = _1;
_3 = [(-57_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,5_isize,(-78_isize)];
_8 = (_1,);
RET = _4.0;
_3 = [9223372036854775807_isize,9223372036854775807_isize,3_isize,9223372036854775807_isize,(-23_isize),35_isize];
_4.0 = [21_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-19_isize),9223372036854775807_isize];
_6 = [12139_u16,39185_u16,59615_u16];
_6 = [60423_u16,35966_u16,63942_u16];
_8.0 = [40401_u16,45968_u16,19496_u16,59811_u16,7091_u16];
_4 = (_5.fld0.0,);
_11 = [32029_u16,57342_u16,38877_u16];
_2.1 = _7 * _7;
_6 = _11;
_11 = _6;
_9 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),59_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_8 = (_1,);
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(14_usize, 11_usize, Move(_11), 3_usize, Move(_3), 1_usize, Move(_1), 13_usize, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: isize,mut _2: [isize; 6],mut _3: f64,mut _4: ([isize; 6],),mut _5: isize,mut _6: u16,mut _7: [isize; 6],mut _8: ([isize; 6],),mut _9: f64,mut _10: i8,mut _11: isize) -> Adt46 {
mir! {
type RET = Adt46;
let _12: Adt55;
let _13: u8;
let _14: Adt41;
let _15: ();
let _16: ();
{
RET.fld0.0 = [_5,_11,_11,_5,_5,_11];
RET = Adt46 { fld0: _4 };
_1 = -_5;
_6 = 61202_u16;
_6 = 8885_u16;
_8.0 = _4.0;
_6 = (-153218070249766307975245443491865335269_i128) as u16;
_4 = _8;
_3 = 1453108428_u32 as f64;
_9 = -_3;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(15_usize, 8_usize, Move(_8), 2_usize, Move(_2), 11_usize, Move(_11), 10_usize, Move(_10)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: ([isize; 6],),mut _2: u64,mut _3: i8,mut _4: f64,mut _5: i64,mut _6: [u128; 3],mut _7: u64,mut _8: isize,mut _9: [isize; 6],mut _10: *mut i8,mut _11: [isize; 6],mut _12: f64,mut _13: f32,mut _14: Adt46) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _15: i32;
let _16: [u128; 3];
let _17: u16;
let _18: i8;
let _19: ();
let _20: ();
{
_14.fld0.0 = _1.0;
_8 = !(-54_isize);
_13 = 46_u8 as f32;
_2 = !_7;
_4 = _12 - _12;
_5 = (-5082560876174191106_i64);
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463458292046555594020350 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_12 = 126_u8 as f64;
RET = _6;
_4 = (-21583997188064021244408674360610105265_i128) as f64;
_10 = core::ptr::addr_of_mut!(_3);
_14 = Adt46 { fld0: _1 };
_12 = 1145866294_i32 as f64;
_12 = _4 + _4;
_8 = (-9223372036854775808_isize);
_5 = !(-5152485463518990414_i64);
_2 = '\u{38d9f}' as u64;
_1.0 = [_8,_8,_8,_8,_8,_8];
_9 = [_8,_8,_8,_8,_8,_8];
_14 = Adt46 { fld0: _1 };
_16 = [184382731889311054790932321756347347489_u128,39064351376417944844559136786720097391_u128,152419112466894734531772058702479763300_u128];
RET = [163848547550458788311978819460800699413_u128,58112719924315224335645991377577378003_u128,30869128776214291461157599354317939057_u128];
RET = _6;
_4 = _12 + _12;
_2 = _7;
_4 = _12 - _12;
Goto(bb10)
}
bb10 = {
Call(_19 = dump_var(16_usize, 7_usize, Move(_7), 3_usize, Move(_3), 2_usize, Move(_2), 11_usize, Move(_11)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_19 = dump_var(16_usize, 5_usize, Move(_5), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: [isize; 6],mut _2: [u16; 5]) -> Adt43 {
mir! {
type RET = Adt43;
let _3: char;
let _4: usize;
let _5: isize;
let _6: [isize; 6];
let _7: isize;
let _8: isize;
let _9: (i16,);
let _10: [isize; 6];
let _11: isize;
let _12: (i16,);
let _13: [u16; 3];
let _14: isize;
let _15: f64;
let _16: [u16; 5];
let _17: char;
let _18: isize;
let _19: [i16; 8];
let _20: u16;
let _21: Adt46;
let _22: [u16; 3];
let _23: Adt54;
let _24: Adt52;
let _25: u8;
let _26: Adt40;
let _27: Adt54;
let _28: ([u16; 5],);
let _29: ([u16; 3],);
let _30: *mut ([u16; 5],);
let _31: [u16; 5];
let _32: u8;
let _33: *mut isize;
let _34: u8;
let _35: f32;
let _36: i16;
let _37: f64;
let _38: [u16; 3];
let _39: f32;
let _40: isize;
let _41: isize;
let _42: f64;
let _43: Adt54;
let _44: usize;
let _45: isize;
let _46: bool;
let _47: [u16; 3];
let _48: isize;
let _49: Adt56;
let _50: char;
let _51: Adt45;
let _52: i8;
let _53: ([isize; 6],);
let _54: f32;
let _55: bool;
let _56: [u128; 3];
let _57: char;
let _58: u128;
let _59: bool;
let _60: u8;
let _61: Adt46;
let _62: isize;
let _63: [isize; 6];
let _64: bool;
let _65: isize;
let _66: (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64));
let _67: u32;
let _68: [isize; 6];
let _69: ([isize; 6],);
let _70: [isize; 6];
let _71: char;
let _72: isize;
let _73: Adt42;
let _74: i16;
let _75: isize;
let _76: f32;
let _77: ([isize; 6],);
let _78: *mut i8;
let _79: f32;
let _80: Adt40;
let _81: u32;
let _82: [u16; 5];
let _83: char;
let _84: ([u128; 3], f64, [u16; 5]);
let _85: bool;
let _86: i32;
let _87: ([u16; 5],);
let _88: (i64,);
let _89: u128;
let _90: ([u128; 3], f64, [u16; 5]);
let _91: Adt46;
let _92: ();
let _93: ();
{
RET.fld5.2 = [19928_u16,36137_u16,2702_u16,7405_u16,36179_u16];
RET.fld7.0 = [(-68_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,6_isize,99_isize];
RET.fld7 = (_1,);
RET.fld3 = 570249943_u32 as f64;
Goto(bb1)
}
bb1 = {
RET.fld7.0 = [(-77_isize),(-53_isize),(-9223372036854775808_isize),34_isize,44_isize,45_isize];
RET.fld5.0 = [107899130258676625882763492544596553933_u128,26463961899999338611342098585533731089_u128,33349546879656583990771326225959619395_u128];
RET.fld7 = (_1,);
RET.fld5.0 = [123697365984704419690581253353008513108_u128,29470026543333005288799234782413388286_u128,136410024962314278735427837037171989638_u128];
_3 = '\u{fbfdd}';
RET.fld5.1 = -RET.fld3;
RET.fld3 = 73535030892690336482412853200287550712_u128 as f64;
RET.fld7.0 = _1;
RET.fld7.0 = _1;
_3 = '\u{f5f15}';
RET.fld7.0 = [(-9223372036854775808_isize),(-54_isize),9223372036854775807_isize,9223372036854775807_isize,79_isize,(-90_isize)];
RET.fld5.1 = (-13519_i16) as f64;
RET.fld5.0 = [52004150986844517352623647596224886664_u128,304057263096705137991784968200991388640_u128,42166354956762374080537358436387288684_u128];
RET.fld5.2 = [54066_u16,58008_u16,51401_u16,24771_u16,8188_u16];
RET.fld7.0 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize),9223372036854775807_isize,93_isize,9223372036854775807_isize];
RET.fld5.0 = [306262761378323674802747475496696744712_u128,123901266358228731030630033617878449616_u128,116512301365590652474013165452357056585_u128];
RET.fld3 = 1011163651507333038_u64 as f64;
_3 = '\u{31a09}';
Goto(bb2)
}
bb2 = {
_1 = [(-73_isize),9223372036854775807_isize,9223372036854775807_isize,(-20_isize),92_isize,(-9223372036854775808_isize)];
RET.fld7.0 = _1;
RET.fld5.0 = [48604763840658042788764447212509144192_u128,114572833942469815386439062910778001326_u128,270913349007467417843720142796154523611_u128];
RET.fld7 = (_1,);
RET.fld5.0 = [145989491144955138295328937234689270423_u128,9530318743565912743589994271876729274_u128,291105115505999552560932133924550338269_u128];
RET.fld5.2 = _2;
RET.fld5.0 = [52390888474732458556391994445415115514_u128,17362179029695097612301147374840962728_u128,120229947610588635527163798655429328372_u128];
_3 = '\u{d812b}';
_4 = 3_usize - 1599757210295842230_usize;
RET.fld7.0 = [126_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-48_isize),67_isize];
Call(RET.fld4 = fn18(RET.fld5.2, _2, _2, RET.fld5, RET.fld5, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET.fld7.0 = [11_isize,(-9223372036854775808_isize),9223372036854775807_isize,55_isize,9223372036854775807_isize,9223372036854775807_isize];
RET.fld6 = core::ptr::addr_of_mut!(_7);
_3 = '\u{8a873}';
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
_2 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
RET.fld3 = RET.fld5.1 - RET.fld5.1;
_7 = 9223372036854775807_isize;
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 2273589146_u32 | 1683198233_u32;
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 95465350614517707932471668784019125987_u128 as u32;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = RET.fld3 as u16;
match _7 {
9223372036854775807 => bb5,
_ => bb4
}
}
bb4 = {
RET.fld7.0 = [(-77_isize),(-53_isize),(-9223372036854775808_isize),34_isize,44_isize,45_isize];
RET.fld5.0 = [107899130258676625882763492544596553933_u128,26463961899999338611342098585533731089_u128,33349546879656583990771326225959619395_u128];
RET.fld7 = (_1,);
RET.fld5.0 = [123697365984704419690581253353008513108_u128,29470026543333005288799234782413388286_u128,136410024962314278735427837037171989638_u128];
_3 = '\u{fbfdd}';
RET.fld5.1 = -RET.fld3;
RET.fld3 = 73535030892690336482412853200287550712_u128 as f64;
RET.fld7.0 = _1;
RET.fld7.0 = _1;
_3 = '\u{f5f15}';
RET.fld7.0 = [(-9223372036854775808_isize),(-54_isize),9223372036854775807_isize,9223372036854775807_isize,79_isize,(-90_isize)];
RET.fld5.1 = (-13519_i16) as f64;
RET.fld5.0 = [52004150986844517352623647596224886664_u128,304057263096705137991784968200991388640_u128,42166354956762374080537358436387288684_u128];
RET.fld5.2 = [54066_u16,58008_u16,51401_u16,24771_u16,8188_u16];
RET.fld7.0 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize),9223372036854775807_isize,93_isize,9223372036854775807_isize];
RET.fld5.0 = [306262761378323674802747475496696744712_u128,123901266358228731030630033617878449616_u128,116512301365590652474013165452357056585_u128];
RET.fld3 = 1011163651507333038_u64 as f64;
_3 = '\u{31a09}';
Goto(bb2)
}
bb5 = {
_5 = _7;
RET.fld7 = (_1,);
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = 34873_u16;
RET.fld4 = Adt40::Variant0 { fld0: RET.fld3 };
_7 = (-1254924978_i32) as isize;
match _5 {
0 => bb3,
1 => bb2,
2 => bb6,
3 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb6 = {
RET.fld7.0 = [(-77_isize),(-53_isize),(-9223372036854775808_isize),34_isize,44_isize,45_isize];
RET.fld5.0 = [107899130258676625882763492544596553933_u128,26463961899999338611342098585533731089_u128,33349546879656583990771326225959619395_u128];
RET.fld7 = (_1,);
RET.fld5.0 = [123697365984704419690581253353008513108_u128,29470026543333005288799234782413388286_u128,136410024962314278735427837037171989638_u128];
_3 = '\u{fbfdd}';
RET.fld5.1 = -RET.fld3;
RET.fld3 = 73535030892690336482412853200287550712_u128 as f64;
RET.fld7.0 = _1;
RET.fld7.0 = _1;
_3 = '\u{f5f15}';
RET.fld7.0 = [(-9223372036854775808_isize),(-54_isize),9223372036854775807_isize,9223372036854775807_isize,79_isize,(-90_isize)];
RET.fld5.1 = (-13519_i16) as f64;
RET.fld5.0 = [52004150986844517352623647596224886664_u128,304057263096705137991784968200991388640_u128,42166354956762374080537358436387288684_u128];
RET.fld5.2 = [54066_u16,58008_u16,51401_u16,24771_u16,8188_u16];
RET.fld7.0 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize),9223372036854775807_isize,93_isize,9223372036854775807_isize];
RET.fld5.0 = [306262761378323674802747475496696744712_u128,123901266358228731030630033617878449616_u128,116512301365590652474013165452357056585_u128];
RET.fld3 = 1011163651507333038_u64 as f64;
_3 = '\u{31a09}';
Goto(bb2)
}
bb7 = {
RET.fld7.0 = [11_isize,(-9223372036854775808_isize),9223372036854775807_isize,55_isize,9223372036854775807_isize,9223372036854775807_isize];
RET.fld6 = core::ptr::addr_of_mut!(_7);
_3 = '\u{8a873}';
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
_2 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
RET.fld3 = RET.fld5.1 - RET.fld5.1;
_7 = 9223372036854775807_isize;
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 2273589146_u32 | 1683198233_u32;
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 95465350614517707932471668784019125987_u128 as u32;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = RET.fld3 as u16;
match _7 {
9223372036854775807 => bb5,
_ => bb4
}
}
bb8 = {
_1 = [(-73_isize),9223372036854775807_isize,9223372036854775807_isize,(-20_isize),92_isize,(-9223372036854775808_isize)];
RET.fld7.0 = _1;
RET.fld5.0 = [48604763840658042788764447212509144192_u128,114572833942469815386439062910778001326_u128,270913349007467417843720142796154523611_u128];
RET.fld7 = (_1,);
RET.fld5.0 = [145989491144955138295328937234689270423_u128,9530318743565912743589994271876729274_u128,291105115505999552560932133924550338269_u128];
RET.fld5.2 = _2;
RET.fld5.0 = [52390888474732458556391994445415115514_u128,17362179029695097612301147374840962728_u128,120229947610588635527163798655429328372_u128];
_3 = '\u{d812b}';
_4 = 3_usize - 1599757210295842230_usize;
RET.fld7.0 = [126_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-48_isize),67_isize];
Call(RET.fld4 = fn18(RET.fld5.2, _2, _2, RET.fld5, RET.fld5, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
RET.fld3 = Field::<f64>(Variant(RET.fld4, 0), 0) * Field::<f64>(Variant(RET.fld4, 0), 0);
_1 = RET.fld7.0;
_5 = _7;
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld7.0 = [_5,_7,_7,_7,_5,_7];
RET.fld5.1 = 4157972289_u32 as f64;
RET.fld5.2 = [391_u16,27734_u16,10167_u16,39613_u16,12564_u16];
_8 = _7;
_6 = _1;
_9.0 = !(-20350_i16);
_6 = [_8,_8,_7,_8,_5,_7];
RET.fld5.1 = 191781457194118606138924046087418859542_u128 as f64;
RET.fld7 = (_1,);
RET.fld6 = core::ptr::addr_of_mut!(_8);
_3 = '\u{2a7d1}';
RET.fld5.1 = RET.fld3;
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld7.0 = [_5,_7,_7,_8,_5,_7];
RET.fld6 = core::ptr::addr_of_mut!(_7);
Goto(bb10)
}
bb10 = {
_7 = 10412550600569696276770850104033313577_u128 as isize;
RET.fld5.0 = [259532330970273459572475656591120465840_u128,209393374686364228073521870769789751009_u128,233719723282261630299438500779290310099_u128];
_10 = [_5,_8,_7,_8,_7,_8];
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = -RET.fld3;
_2 = [2004_u16,7306_u16,26053_u16,34871_u16,4627_u16];
RET.fld5.1 = -Field::<f64>(Variant(RET.fld4, 0), 0);
_3 = '\u{f9ba3}';
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = RET.fld3;
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = 8227_u16 as f64;
RET.fld7 = (_1,);
RET.fld5.0 = [254841352557191187874083099569851625929_u128,25116890972158522511284088879317359260_u128,64457546727779574788084337667154196034_u128];
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld5.2 = [59326_u16,1214_u16,2971_u16,25587_u16,48082_u16];
_3 = '\u{6d9a5}';
_8 = !_7;
_1 = [_5,_5,_8,_5,_5,_7];
RET.fld5.0 = [337363108016699808808771299544664389707_u128,95030306717304691897694416591515731224_u128,304323429467566354918528596871084964355_u128];
RET.fld5.2 = [46801_u16,32131_u16,62651_u16,28665_u16,41009_u16];
_12 = (_9.0,);
_10 = RET.fld7.0;
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = RET.fld5.1 - RET.fld3;
SetDiscriminant(RET.fld4, 3);
place!(Field::<u64>(Variant(RET.fld4, 3), 0)) = 3892700853479675662_u64 ^ 10834795139550666643_u64;
RET.fld5.1 = RET.fld3 * RET.fld3;
Call(_12.0 = core::intrinsics::transmute(_9.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_12 = (_9.0,);
place!(Field::<[u128; 3]>(Variant(RET.fld4, 3), 1)) = RET.fld5.0;
_2 = [49881_u16,2198_u16,38730_u16,23483_u16,6222_u16];
_8 = _7 << _7;
_8 = 2217357329_u32 as isize;
place!(Field::<u64>(Variant(RET.fld4, 3), 0)) = 16934491030687251765_u64 ^ 3440855205186490224_u64;
place!(Field::<i8>(Variant(RET.fld4, 3), 3)) = !(-75_i8);
RET.fld6 = core::ptr::addr_of_mut!(_7);
_3 = '\u{1a9be}';
RET.fld5.0 = [120547054126878472901399047621544370960_u128,97099430052053750346572635192489529178_u128,6750021010223921202153822873100180074_u128];
Goto(bb12)
}
bb12 = {
RET.fld4 = Adt40::Variant2 { fld0: 1758832094_u32,fld1: 57009_u16 };
RET.fld7.0 = [_7,_8,_5,_7,_8,_5];
RET.fld3 = RET.fld5.1 + RET.fld5.1;
RET.fld5.1 = 330592119911875314949207209091375757288_u128 as f64;
_3 = '\u{ed699}';
_15 = RET.fld3;
RET.fld7 = (_10,);
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 2651010357_u32;
_16 = [9612_u16,57824_u16,7498_u16,40236_u16,62816_u16];
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = 63483_u16 >> _4;
_7 = (-2640478810278706543_i64) as isize;
_14 = _5 * _7;
_17 = _3;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = 1260_u16;
RET.fld7 = (_6,);
_4 = Field::<u16>(Variant(RET.fld4, 2), 1) as usize;
RET.fld3 = _15 - _15;
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
_3 = _17;
_15 = RET.fld3;
RET.fld3 = _15 + _15;
RET.fld7 = (_10,);
_6 = [_14,_8,_5,_8,_7,_14];
RET.fld5.0 = [12556890532173294565069458100706163352_u128,114583807665938211240747660545368907922_u128,210980236671695237330632466608010482920_u128];
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
_9.0 = _12.0 << _7;
match Field::<u16>(Variant(RET.fld4, 2), 1) {
0 => bb4,
1260 => bb13,
_ => bb11
}
}
bb13 = {
_9 = (_12.0,);
_11 = _8 * _5;
RET.fld5.1 = _4 as f64;
_12 = (_9.0,);
_8 = -_14;
match Field::<u16>(Variant(RET.fld4, 2), 1) {
0 => bb9,
1 => bb2,
2 => bb14,
1260 => bb16,
_ => bb15
}
}
bb14 = {
_7 = 10412550600569696276770850104033313577_u128 as isize;
RET.fld5.0 = [259532330970273459572475656591120465840_u128,209393374686364228073521870769789751009_u128,233719723282261630299438500779290310099_u128];
_10 = [_5,_8,_7,_8,_7,_8];
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = -RET.fld3;
_2 = [2004_u16,7306_u16,26053_u16,34871_u16,4627_u16];
RET.fld5.1 = -Field::<f64>(Variant(RET.fld4, 0), 0);
_3 = '\u{f9ba3}';
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = RET.fld3;
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = 8227_u16 as f64;
RET.fld7 = (_1,);
RET.fld5.0 = [254841352557191187874083099569851625929_u128,25116890972158522511284088879317359260_u128,64457546727779574788084337667154196034_u128];
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld5.2 = [59326_u16,1214_u16,2971_u16,25587_u16,48082_u16];
_3 = '\u{6d9a5}';
_8 = !_7;
_1 = [_5,_5,_8,_5,_5,_7];
RET.fld5.0 = [337363108016699808808771299544664389707_u128,95030306717304691897694416591515731224_u128,304323429467566354918528596871084964355_u128];
RET.fld5.2 = [46801_u16,32131_u16,62651_u16,28665_u16,41009_u16];
_12 = (_9.0,);
_10 = RET.fld7.0;
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = RET.fld5.1 - RET.fld3;
SetDiscriminant(RET.fld4, 3);
place!(Field::<u64>(Variant(RET.fld4, 3), 0)) = 3892700853479675662_u64 ^ 10834795139550666643_u64;
RET.fld5.1 = RET.fld3 * RET.fld3;
Call(_12.0 = core::intrinsics::transmute(_9.0), ReturnTo(bb11), UnwindUnreachable())
}
bb15 = {
RET.fld7.0 = [11_isize,(-9223372036854775808_isize),9223372036854775807_isize,55_isize,9223372036854775807_isize,9223372036854775807_isize];
RET.fld6 = core::ptr::addr_of_mut!(_7);
_3 = '\u{8a873}';
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
_2 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
RET.fld3 = RET.fld5.1 - RET.fld5.1;
_7 = 9223372036854775807_isize;
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 2273589146_u32 | 1683198233_u32;
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 95465350614517707932471668784019125987_u128 as u32;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = RET.fld3 as u16;
match _7 {
9223372036854775807 => bb5,
_ => bb4
}
}
bb16 = {
RET.fld5.1 = _12.0 as f64;
_2 = _16;
_5 = _11;
RET.fld7.0 = [_8,_8,_8,_5,_11,_8];
match Field::<u16>(Variant(RET.fld4, 2), 1) {
1260 => bb17,
_ => bb5
}
}
bb17 = {
_18 = -_7;
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = 2497512068_u32 ^ 624060556_u32;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = 231_u8 as u16;
RET.fld3 = _15;
RET.fld5.2 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
RET.fld7.0 = _6;
RET.fld7.0 = _1;
_5 = _11 + _11;
RET.fld0 = core::ptr::addr_of_mut!(_20);
_6 = [_5,_5,_5,_5,_7,_8];
RET.fld7.0 = [_18,_18,_8,_5,_5,_7];
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = !17953_u16;
RET.fld5.2 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
_7 = !_14;
_12.0 = _9.0;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = 20381_u16 >> _5;
_21.fld0 = (RET.fld7.0,);
RET.fld5.2 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
Goto(bb18)
}
bb18 = {
_16 = [Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1),Field::<u16>(Variant(RET.fld4, 2), 1)];
SetDiscriminant(RET.fld4, 2);
_12.0 = -_9.0;
RET.fld5.0 = [73310398120430350927589201013063496250_u128,257533364807360097083804790147807668592_u128,57917750818025613872133799208906230091_u128];
_5 = _15 as isize;
RET.fld5.2 = _16;
_21.fld0 = RET.fld7;
RET.fld7 = (_6,);
_8 = !_5;
Goto(bb19)
}
bb19 = {
_15 = RET.fld3;
place!(Field::<u32>(Variant(RET.fld4, 2), 0)) = !3752699258_u32;
_20 = !98_u16;
_22 = [_20,_20,_20];
_4 = 12426334677133099464_u64 as usize;
Goto(bb20)
}
bb20 = {
_19 = [_12.0,_9.0,_9.0,_12.0,_12.0,_12.0,_12.0,_9.0];
_12 = (_9.0,);
_13 = [_20,_20,_20];
Goto(bb21)
}
bb21 = {
_9.0 = 2948447002575650335_i64 as i16;
_29.0 = [_20,_20,_20];
RET.fld5.1 = _15 + _15;
_20 = !15029_u16;
_23 = Adt54::Variant2 { fld0: _2,fld1: RET.fld5 };
_26 = Adt40::Variant2 { fld0: Field::<u32>(Variant(RET.fld4, 2), 0),fld1: _20 };
_9 = _12;
_21.fld0.0 = [_8,_5,_11,_8,_5,_8];
SetDiscriminant(_26, 3);
_21 = Adt46 { fld0: RET.fld7 };
_26 = Adt40::Variant0 { fld0: Field::<([u128; 3], f64, [u16; 5])>(Variant(_23, 2), 1).1 };
_32 = !33_u8;
place!(Field::<u16>(Variant(RET.fld4, 2), 1)) = !_20;
RET.fld0 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(RET.fld4, 2), 1)));
_23 = Adt54::Variant2 { fld0: _2,fld1: RET.fld5 };
_11 = (-6505465325212977070_i64) as isize;
_9 = (_12.0,);
Goto(bb22)
}
bb22 = {
_9 = (_12.0,);
_34 = _32;
_30 = core::ptr::addr_of_mut!(_28);
SetDiscriminant(RET.fld4, 2);
_35 = 4020218298668180537_u64 as f32;
_29 = (_22,);
RET.fld6 = core::ptr::addr_of_mut!(_5);
RET.fld4 = Move(_26);
_27 = Move(_23);
_36 = 3302953543_u32 as i16;
place!(Field::<f64>(Variant(RET.fld4, 0), 0)) = _15;
SetDiscriminant(RET.fld4, 3);
_25 = _34;
RET.fld0 = core::ptr::addr_of_mut!(_20);
_18 = _5 >> _8;
RET.fld5.2 = [_20,_20,_20,_20,_20];
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1)).0 = [80271939481299309487542914303319816533_u128,231606661115173830005324452536536041413_u128,11785216162101727473893268823406257061_u128];
place!(Field::<i8>(Variant(RET.fld4, 3), 3)) = (-77_i8) | (-85_i8);
RET.fld5.2 = [_20,_20,_20,_20,_20];
RET.fld4 = Adt40::Variant1 { fld0: false,fld1: Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1),fld2: _19,fld3: RET.fld5.0,fld4: _9,fld5: (-870678477_i32) };
place!(Field::<i32>(Variant(RET.fld4, 1), 5)) = -(-1412260477_i32);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)).2 = [_20,_20,_20,_20,_20];
place!(Field::<i32>(Variant(RET.fld4, 1), 5)) = -1472322266_i32;
Goto(bb23)
}
bb23 = {
_31 = [_20,_20,_20,_20,_20];
_34 = !_32;
_31 = [_20,_20,_20,_20,_20];
_37 = RET.fld5.1 * Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).1;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)).0 = [60360919611383796960366890273448738622_u128,311358037899754863677531361488592262775_u128,7123797007500474150835193911366768582_u128];
RET.fld4 = Adt40::Variant1 { fld0: false,fld1: Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1),fld2: _19,fld3: Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).0,fld4: _9,fld5: (-1452660317_i32) };
place!(Field::<[i16; 8]>(Variant(RET.fld4, 1), 2)) = _19;
RET.fld7.0 = [_8,_8,_5,_18,_5,_18];
RET.fld5 = (Field::<[u128; 3]>(Variant(RET.fld4, 1), 3), Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).1, _16);
place!(Field::<i32>(Variant(RET.fld4, 1), 5)) = -892710075_i32;
place!(Field::<[i16; 8]>(Variant(RET.fld4, 1), 2)) = _19;
_23 = Adt54::Variant1 { fld0: RET.fld0 };
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)) = RET.fld5;
Goto(bb24)
}
bb24 = {
_27 = Adt54::Variant2 { fld0: RET.fld5.2,fld1: Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1) };
_6 = [_5,_8,_18,_8,_18,_18];
RET.fld4 = Adt40::Variant1 { fld0: true,fld1: RET.fld5,fld2: _19,fld3: Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).0,fld4: _12,fld5: (-212484376_i32) };
SetDiscriminant(_27, 2);
_40 = _18 * _5;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1)).0 = [120938352604919331414700148753687641410_u128,180869892810264592072957963281654193430_u128,92269673235720895093663632863657836866_u128];
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)).0 = [166075483033247897927904250211731934019_u128,99090077832170911970386570726771783902_u128,184039805534828854924884375085937516679_u128];
RET.fld7.0 = _10;
RET.fld6 = core::ptr::addr_of_mut!(_18);
Goto(bb25)
}
bb25 = {
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1)).1 = (-466036545_i32) as f64;
_22 = [_20,_20,_20];
_45 = _5;
_44 = _36 as usize;
_36 = _12.0 << _40;
RET.fld6 = core::ptr::addr_of_mut!(_45);
RET.fld3 = _37 + RET.fld5.1;
_14 = -_40;
RET.fld7.0 = [_14,_18,_40,_45,_14,_18];
_38 = [_20,_20,_20];
_27 = Adt54::Variant2 { fld0: _2,fld1: RET.fld5 };
place!(Field::<(i16,)>(Variant(RET.fld4, 1), 4)).0 = _36;
_28.0 = [_20,_20,_20,_20,_20];
place!(Field::<(i16,)>(Variant(RET.fld4, 1), 4)) = (_36,);
_25 = !_34;
place!(Field::<i32>(Variant(RET.fld4, 1), 5)) = !(-1721555999_i32);
RET.fld0 = Field::<*mut u16>(Variant(_23, 1), 0);
RET.fld3 = Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).1;
RET.fld7 = _21.fld0;
_21.fld0 = RET.fld7;
_37 = Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1).1 - Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).1;
_26 = Adt40::Variant0 { fld0: _15 };
Goto(bb26)
}
bb26 = {
_21.fld0 = (_6,);
_39 = _35 + _35;
_47 = [_20,_20,_20];
_21.fld0 = (_10,);
_47 = [_20,_20,_20];
_3 = _17;
RET.fld7.0 = [_14,_14,_40,_40,_14,_40];
_20 = 13168_u16;
_41 = -_8;
_46 = !true;
_20 = !42089_u16;
RET.fld5 = (Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).0, Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1).1, Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1).2);
place!(Field::<bool>(Variant(RET.fld4, 1), 0)) = _46;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1)) = (Field::<[u128; 3]>(Variant(RET.fld4, 1), 3), _37, _2);
_12.0 = Field::<(i16,)>(Variant(RET.fld4, 1), 4).0;
RET.fld7 = (_6,);
_39 = _41 as f32;
place!(Field::<[u128; 3]>(Variant(RET.fld4, 1), 3)) = Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1).0;
_45 = RET.fld3 as isize;
Goto(bb27)
}
bb27 = {
RET.fld0 = Field::<*mut u16>(Variant(_23, 1), 0);
place!(Field::<(i16,)>(Variant(RET.fld4, 1), 4)).0 = -_36;
_18 = !_40;
_49.fld7 = (-17052409022631083938770780232099781096_i128) - (-76723623217084953231473522814296074729_i128);
Goto(bb28)
}
bb28 = {
_14 = _18 << _18;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)).2 = [_20,_20,_20,_20,_20];
_3 = _17;
SetDiscriminant(RET.fld4, 3);
_9.0 = _20 as i16;
place!(Field::<i8>(Variant(RET.fld4, 3), 3)) = -(-52_i8);
_49.fld3 = Field::<i8>(Variant(RET.fld4, 3), 3);
place!(Field::<[u128; 3]>(Variant(RET.fld4, 3), 1)) = [96148179865628301455052138371301058165_u128,91337685374647216103820345268245400890_u128,176613629669216613957323167117379389000_u128];
_49.fld4 = (857608067119032129_i64,);
_49.fld0 = 1954907575_u32 >> _40;
place!(Field::<i16>(Variant(RET.fld4, 3), 4)) = _49.fld7 as i16;
_20 = _46 as u16;
_49.fld1 = [(-867872833_i32),(-1672370537_i32)];
_21.fld0.0 = _6;
_28.0 = Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).2;
RET.fld5.2 = _28.0;
place!(Field::<[isize; 6]>(Variant(RET.fld4, 3), 2)) = [_18,_41,_18,_40,_41,_14];
SetDiscriminant(_26, 3);
RET.fld1 = Adt41::Variant1 { fld0: _29,fld1: _19,fld2: _41,fld3: _49.fld1 };
Goto(bb29)
}
bb29 = {
_29 = (_13,);
place!(Field::<[i32; 2]>(Variant(RET.fld1, 1), 3)) = [1032347966_i32,1731443627_i32];
Goto(bb30)
}
bb30 = {
_49.fld4.0 = !8381920850956988274_i64;
_53.0 = [_8,_14,_40,_5,_14,_40];
_38 = [_20,_20,_20];
_9.0 = _12.0 * _12.0;
_2 = [_20,_20,_20,_20,_20];
place!(Field::<[isize; 6]>(Variant(_26, 3), 2)) = Field::<[isize; 6]>(Variant(RET.fld4, 3), 2);
_49.fld6 = Move(RET.fld1);
_41 = _18;
_3 = _17;
RET.fld2 = Adt42::Variant2 { fld0: Move(_49.fld6),fld1: _44,fld2: RET.fld5.1,fld3: _49.fld3,fld4: _9.0 };
_54 = Field::<i8>(Variant(RET.fld2, 2), 3) as f32;
_41 = !_40;
_17 = _3;
RET.fld4 = Adt40::Variant1 { fld0: _46,fld1: RET.fld5,fld2: _19,fld3: Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).0,fld4: _9,fld5: (-1954514997_i32) };
place!(Field::<i32>(Variant(RET.fld4, 1), 5)) = (-2028830304_i32);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1)).0 = [139241952549752202779201412502463828794_u128,281306327774193272150654342406390058512_u128,338025378049156024692878295164521352957_u128];
Goto(bb31)
}
bb31 = {
RET.fld7 = (Field::<[isize; 6]>(Variant(_26, 3), 2),);
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)) = (Field::<[u128; 3]>(Variant(RET.fld4, 1), 3), Field::<f64>(Variant(RET.fld2, 2), 2), (*_30).0);
place!(Field::<isize>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 2)) = _18 & _41;
_61 = Adt46 { fld0: _53 };
place!(Field::<i16>(Variant(RET.fld2, 2), 4)) = Field::<i8>(Variant(RET.fld2, 2), 3) as i16;
_15 = -RET.fld3;
_55 = Field::<bool>(Variant(RET.fld4, 1), 0);
place!(Field::<f64>(Variant(RET.fld2, 2), 2)) = -Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1).1;
SetDiscriminant(Field::<Adt41>(Variant(RET.fld2, 2), 0), 1);
_20 = 54829_u16 >> _41;
place!(Field::<[i32; 2]>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 3)) = [Field::<i32>(Variant(RET.fld4, 1), 5),Field::<i32>(Variant(RET.fld4, 1), 5)];
place!(Field::<i8>(Variant(_26, 3), 3)) = _49.fld3;
place!(Field::<i8>(Variant(RET.fld2, 2), 3)) = _49.fld3 << _14;
SetDiscriminant(RET.fld4, 2);
_64 = _46;
_50 = _17;
_60 = !_32;
place!(Field::<[i32; 2]>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 3)) = _49.fld1;
place!(Field::<f64>(Variant(RET.fld2, 2), 2)) = _39 as f64;
_28 = (_31,);
RET.fld4 = Adt40::Variant0 { fld0: _15 };
_53.0 = [_40,_8,_14,_40,_45,_40];
_26 = Move(RET.fld4);
_29 = (_22,);
place!(Field::<usize>(Variant(RET.fld2, 2), 1)) = _44;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1)).0 = RET.fld5.0;
_27 = Move(_23);
Goto(bb32)
}
bb32 = {
_38 = [_20,_20,_20];
_66.5.1 = Field::<f64>(Variant(_26, 0), 0) * RET.fld3;
place!(Field::<([u16; 3],)>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 0)) = (_38,);
_42 = _15 + _37;
_49.fld6 = Adt41::Variant1 { fld0: Field::<([u16; 3],)>(Variant(Field::<Adt41>(Variant(RET.fld2, 2), 0), 1), 0),fld1: _19,fld2: _40,fld3: _49.fld1 };
_49.fld3 = Field::<i8>(Variant(RET.fld2, 2), 3);
_66.4 = !_20;
_21.fld0 = (_61.fld0.0,);
_49.fld5 = Adt42::Variant2 { fld0: Move(_49.fld6),fld1: _44,fld2: _15,fld3: _49.fld3,fld4: _9.0 };
place!(Field::<isize>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 2)) = _49.fld4.0 as isize;
_48 = _41;
_66.5.2 = 12499272310784299317_u64;
SetDiscriminant(Field::<Adt41>(Variant(_49.fld5, 2), 0), 1);
RET.fld3 = _44 as f64;
place!(Field::<usize>(Variant(_49.fld5, 2), 1)) = !Field::<usize>(Variant(RET.fld2, 2), 1);
RET.fld5.2 = (*_30).0;
_48 = !_41;
_66.0 = -Field::<i16>(Variant(_49.fld5, 2), 4);
_49.fld2 = Adt55::Variant2 { fld0: _66.4,fld1: Move(_21) };
_58 = 292799570896689303740907220993910966219_u128 | 92444710144271072115886878026743765118_u128;
Goto(bb33)
}
bb33 = {
_67 = _60 as u32;
_66.5.0 = &_12;
_40 = _8;
_53 = Field::<Adt46>(Variant(_49.fld2, 2), 1).fld0;
SetDiscriminant(_49.fld2, 3);
place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld5.2 = [_66.4,_20,_66.4,_20,_20];
_66.1 = _17;
_57 = _66.1;
RET.fld5.0 = [_58,_58,_58];
_66.5.2 = _49.fld7 as u64;
_63 = [_48,_14,_5,_8,_18,_8];
RET.fld5.1 = Field::<i8>(Variant(_49.fld5, 2), 3) as f64;
RET.fld6 = core::ptr::addr_of_mut!(_40);
_66.2 = [_20,_20,_66.4,_66.4,_20];
_23 = Move(_27);
place!(Field::<[i16; 8]>(Variant(place!(Field::<Adt41>(Variant(_49.fld5, 2), 0)), 1), 1)) = [_36,_36,_66.0,Field::<i16>(Variant(_49.fld5, 2), 4),_9.0,_9.0,_12.0,_66.0];
_66.4 = _58 as u16;
place!(Field::<usize>(Variant(_49.fld5, 2), 1)) = !Field::<usize>(Variant(RET.fld2, 2), 1);
_71 = _3;
place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld2 = Adt42::Variant0 { fld0: RET.fld5.0,fld1: _63,fld2: RET.fld5.1,fld3: _58,fld4: (*_30),fld5: _30 };
SetDiscriminant(Field::<Adt43>(Variant(_49.fld2, 3), 1).fld2, 1);
_66.5.0 = &_12;
place!(Field::<u64>(Variant(place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld2, 1), 3)) = _66.5.2 | _66.5.2;
Goto(bb34)
}
bb34 = {
_37 = (-622788024_i32) as f64;
RET.fld5.0 = [_58,_58,_58];
RET.fld5.0 = [_58,_58,_58];
_36 = _49.fld4.0 as i16;
_75 = -_41;
place!(Field::<f64>(Variant(place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld2, 1), 4)) = _66.5.1 - Field::<f64>(Variant(_26, 0), 0);
Goto(bb35)
}
bb35 = {
_21 = Adt46 { fld0: RET.fld7 };
_16 = [_20,_20,_20,_20,_20];
_19 = Field::<[i16; 8]>(Variant(Field::<Adt41>(Variant(_49.fld5, 2), 0), 1), 1);
place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)) = Adt41::Variant1 { fld0: _29,fld1: Field::<[i16; 8]>(Variant(Field::<Adt41>(Variant(_49.fld5, 2), 0), 1), 1),fld2: _41,fld3: _49.fld1 };
_67 = !_49.fld0;
_66.5.1 = Field::<f64>(Variant(Field::<Adt43>(Variant(_49.fld2, 3), 1).fld2, 1), 4) - _15;
_76 = _67 as f32;
place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld2 = Adt42::Variant0 { fld0: RET.fld5.0,fld1: _21.fld0.0,fld2: _15,fld3: _58,fld4: _28,fld5: _30 };
_5 = !Field::<isize>(Variant(Field::<Adt41>(Variant(RET.fld2, 2), 0), 1), 2);
_33 = RET.fld6;
_66.1 = _57;
_21.fld0.0 = _63;
_3 = _50;
_66.0 = _12.0 >> _48;
_69.0 = _61.fld0.0;
RET.fld0 = Field::<*mut u16>(Variant(_23, 1), 0);
place!(Field::<[i32; 2]>(Variant(place!(Field::<Adt41>(Variant(_49.fld5, 2), 0)), 1), 3)) = [(-1681434415_i32),1603896249_i32];
SetDiscriminant(Field::<Adt41>(Variant(RET.fld2, 2), 0), 1);
RET.fld5.1 = _66.5.1 + _66.5.1;
place!(Field::<f64>(Variant(_26, 0), 0)) = _66.5.1;
_54 = Field::<u128>(Variant(Field::<Adt43>(Variant(_49.fld2, 3), 1).fld2, 0), 3) as f32;
_70 = _21.fld0.0;
place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld0 = core::ptr::addr_of_mut!(_20);
place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld6 = RET.fld6;
place!(Field::<i16>(Variant(_49.fld5, 2), 4)) = _12.0;
_49.fld3 = Field::<i8>(Variant(RET.fld2, 2), 3);
Call(_44 = core::intrinsics::bswap(_4), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_15 = Field::<f64>(Variant(RET.fld2, 2), 2);
RET.fld4 = Move(_26);
_8 = _18 | _48;
_11 = _8 << _20;
place!(Field::<([u16; 5],)>(Variant(place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld2, 0), 4)).0 = [_20,_20,_20,_20,_20];
_65 = Field::<f64>(Variant(_49.fld5, 2), 2) as isize;
place!(Field::<Adt47>(Variant(_49.fld2, 3), 0)).fld2 = -_49.fld4.0;
_27 = Move(_23);
place!(Field::<([u16; 3],)>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 0)).0 = _38;
place!(Field::<[i32; 2]>(Variant(place!(Field::<Adt41>(Variant(_49.fld5, 2), 0)), 1), 3)) = [2102525569_i32,(-1250855110_i32)];
place!(Field::<Adt43>(Variant(_49.fld2, 3), 1)).fld7.0 = [_8,_14,_48,_14,_5,_45];
_49.fld0 = _67 + _67;
_49.fld2 = Adt55::Variant2 { fld0: _20,fld1: Move(_21) };
_10 = [_18,_48,_41,_41,_14,_41];
RET.fld7 = (_69.0,);
_56 = [_58,_58,_58];
_49.fld6 = Adt41::Variant1 { fld0: Field::<([u16; 3],)>(Variant(Field::<Adt41>(Variant(RET.fld2, 2), 0), 1), 0),fld1: Field::<[i16; 8]>(Variant(Field::<Adt41>(Variant(_49.fld5, 2), 0), 1), 1),fld2: _41,fld3: Field::<[i32; 2]>(Variant(Field::<Adt41>(Variant(_49.fld5, 2), 0), 1), 3) };
_79 = _76 + _76;
RET.fld7 = Field::<Adt46>(Variant(_49.fld2, 2), 1).fld0;
place!(Field::<([u16; 3],)>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 0)).0 = [Field::<u16>(Variant(_49.fld2, 2), 0),Field::<u16>(Variant(_49.fld2, 2), 0),_20];
RET.fld2 = Adt42::Variant2 { fld0: Move(_49.fld6),fld1: Field::<usize>(Variant(_49.fld5, 2), 1),fld2: Field::<f64>(Variant(_49.fld5, 2), 2),fld3: _49.fld3,fld4: _12.0 };
place!(Field::<([u16; 3],)>(Variant(place!(Field::<Adt41>(Variant(_49.fld5, 2), 0)), 1), 0)) = Field::<([u16; 3],)>(Variant(Field::<Adt41>(Variant(RET.fld2, 2), 0), 1), 0);
place!(Field::<i16>(Variant(_49.fld5, 2), 4)) = _20 as i16;
Goto(bb37)
}
bb37 = {
place!(Field::<isize>(Variant(place!(Field::<Adt41>(Variant(RET.fld2, 2), 0)), 1), 2)) = !_14;
place!(Field::<i8>(Variant(RET.fld2, 2), 3)) = Field::<u16>(Variant(_49.fld2, 2), 0) as i8;
place!(Field::<i16>(Variant(RET.fld2, 2), 4)) = _12.0;
_59 = _46;
_68 = [_41,_18,_5,_11,_75,_41];
SetDiscriminant(RET.fld2, 2);
_76 = _79;
RET.fld6 = _33;
RET.fld5.1 = -Field::<f64>(Variant(_49.fld5, 2), 2);
_52 = _49.fld3;
_21 = Adt46 { fld0: _53 };
_49.fld0 = !_67;
RET.fld6 = core::ptr::addr_of_mut!(_7);
place!(Field::<([u16; 3],)>(Variant(place!(Field::<Adt41>(Variant(_49.fld5, 2), 0)), 1), 0)).0 = [_20,Field::<u16>(Variant(_49.fld2, 2), 0),_20];
place!(Field::<usize>(Variant(RET.fld2, 2), 1)) = !Field::<usize>(Variant(_49.fld5, 2), 1);
_21.fld0.0 = Field::<Adt46>(Variant(_49.fld2, 2), 1).fld0.0;
_49.fld4 = ((-3968200768017915006_i64),);
match _49.fld4.0 {
0 => bb1,
1 => bb24,
2 => bb38,
3 => bb39,
340282366920938463459406406663750296450 => bb41,
_ => bb40
}
}
bb38 = {
_14 = _18 << _18;
place!(Field::<([u128; 3], f64, [u16; 5])>(Variant(RET.fld4, 1), 1)).2 = [_20,_20,_20,_20,_20];
_3 = _17;
SetDiscriminant(RET.fld4, 3);
_9.0 = _20 as i16;
place!(Field::<i8>(Variant(RET.fld4, 3), 3)) = -(-52_i8);
_49.fld3 = Field::<i8>(Variant(RET.fld4, 3), 3);
place!(Field::<[u128; 3]>(Variant(RET.fld4, 3), 1)) = [96148179865628301455052138371301058165_u128,91337685374647216103820345268245400890_u128,176613629669216613957323167117379389000_u128];
_49.fld4 = (857608067119032129_i64,);
_49.fld0 = 1954907575_u32 >> _40;
place!(Field::<i16>(Variant(RET.fld4, 3), 4)) = _49.fld7 as i16;
_20 = _46 as u16;
_49.fld1 = [(-867872833_i32),(-1672370537_i32)];
_21.fld0.0 = _6;
_28.0 = Field::<([u128; 3], f64, [u16; 5])>(Variant(_27, 2), 1).2;
RET.fld5.2 = _28.0;
place!(Field::<[isize; 6]>(Variant(RET.fld4, 3), 2)) = [_18,_41,_18,_40,_41,_14];
SetDiscriminant(_26, 3);
RET.fld1 = Adt41::Variant1 { fld0: _29,fld1: _19,fld2: _41,fld3: _49.fld1 };
Goto(bb29)
}
bb39 = {
_12 = (_9.0,);
place!(Field::<[u128; 3]>(Variant(RET.fld4, 3), 1)) = RET.fld5.0;
_2 = [49881_u16,2198_u16,38730_u16,23483_u16,6222_u16];
_8 = _7 << _7;
_8 = 2217357329_u32 as isize;
place!(Field::<u64>(Variant(RET.fld4, 3), 0)) = 16934491030687251765_u64 ^ 3440855205186490224_u64;
place!(Field::<i8>(Variant(RET.fld4, 3), 3)) = !(-75_i8);
RET.fld6 = core::ptr::addr_of_mut!(_7);
_3 = '\u{1a9be}';
RET.fld5.0 = [120547054126878472901399047621544370960_u128,97099430052053750346572635192489529178_u128,6750021010223921202153822873100180074_u128];
Goto(bb12)
}
bb40 = {
RET.fld7.0 = [(-77_isize),(-53_isize),(-9223372036854775808_isize),34_isize,44_isize,45_isize];
RET.fld5.0 = [107899130258676625882763492544596553933_u128,26463961899999338611342098585533731089_u128,33349546879656583990771326225959619395_u128];
RET.fld7 = (_1,);
RET.fld5.0 = [123697365984704419690581253353008513108_u128,29470026543333005288799234782413388286_u128,136410024962314278735427837037171989638_u128];
_3 = '\u{fbfdd}';
RET.fld5.1 = -RET.fld3;
RET.fld3 = 73535030892690336482412853200287550712_u128 as f64;
RET.fld7.0 = _1;
RET.fld7.0 = _1;
_3 = '\u{f5f15}';
RET.fld7.0 = [(-9223372036854775808_isize),(-54_isize),9223372036854775807_isize,9223372036854775807_isize,79_isize,(-90_isize)];
RET.fld5.1 = (-13519_i16) as f64;
RET.fld5.0 = [52004150986844517352623647596224886664_u128,304057263096705137991784968200991388640_u128,42166354956762374080537358436387288684_u128];
RET.fld5.2 = [54066_u16,58008_u16,51401_u16,24771_u16,8188_u16];
RET.fld7.0 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize),9223372036854775807_isize,93_isize,9223372036854775807_isize];
RET.fld5.0 = [306262761378323674802747475496696744712_u128,123901266358228731030630033617878449616_u128,116512301365590652474013165452357056585_u128];
RET.fld3 = 1011163651507333038_u64 as f64;
_3 = '\u{31a09}';
Goto(bb2)
}
bb41 = {
RET.fld0 = Field::<*mut u16>(Variant(_27, 1), 0);
_75 = _11 - _48;
_49.fld5 = Adt42::Variant0 { fld0: RET.fld5.0,fld1: Field::<Adt46>(Variant(_49.fld2, 2), 1).fld0.0,fld2: Field::<f64>(Variant(RET.fld4, 0), 0),fld3: _58,fld4: _28,fld5: _30 };
RET.fld1 = Adt41::Variant1 { fld0: _29,fld1: _19,fld2: _8,fld3: _49.fld1 };
Call(_66.4 = fn19(Field::<isize>(Variant(RET.fld1, 1), 2), (*_30).0, _53, _10, _42, _12.0, _6, _75), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
_77.0 = [Field::<isize>(Variant(RET.fld1, 1), 2),_48,_8,_14,_75,_7];
RET.fld2 = Move(_49.fld5);
_19 = Field::<[i16; 8]>(Variant(RET.fld1, 1), 1);
_87 = _28;
_18 = Field::<u128>(Variant(RET.fld2, 0), 3) as isize;
_8 = _5;
place!(Field::<Adt46>(Variant(_49.fld2, 2), 1)).fld0 = (_69.0,);
_60 = _71 as u8;
_82 = _16;
place!(Field::<u16>(Variant(_49.fld2, 2), 0)) = _20 ^ _20;
RET.fld1 = Adt41::Variant1 { fld0: _29,fld1: _19,fld2: _75,fld3: _49.fld1 };
_26 = Adt40::Variant2 { fld0: _49.fld0,fld1: _20 };
_53.0 = [_11,Field::<isize>(Variant(RET.fld1, 1), 2),_11,_48,_48,Field::<isize>(Variant(RET.fld1, 1), 2)];
_48 = _12.0 as isize;
_87.0 = [_66.4,Field::<u16>(Variant(_49.fld2, 2), 0),_20,_20,Field::<u16>(Variant(_26, 2), 1)];
_48 = _5;
place!(Field::<f64>(Variant(RET.fld2, 0), 2)) = _79 as f64;
_76 = _39 + _79;
place!(Field::<([u16; 5],)>(Variant(RET.fld2, 0), 4)) = (_87.0,);
RET.fld5.0 = [Field::<u128>(Variant(RET.fld2, 0), 3),_58,_58];
_64 = !_46;
_42 = _66.0 as f64;
_68 = _6;
_86 = (-570753344_i32) << _20;
_41 = _75 * _14;
_5 = !_48;
_77.0 = [_41,Field::<isize>(Variant(RET.fld1, 1), 2),_65,_11,_48,_5];
Goto(bb43)
}
bb43 = {
Call(_92 = dump_var(17_usize, 55_usize, Move(_55), 4_usize, Move(_4), 71_usize, Move(_71), 13_usize, Move(_13)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_92 = dump_var(17_usize, 69_usize, Move(_69), 47_usize, Move(_47), 45_usize, Move(_45), 28_usize, Move(_28)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_92 = dump_var(17_usize, 38_usize, Move(_38), 53_usize, Move(_53), 59_usize, Move(_59), 17_usize, Move(_17)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_92 = dump_var(17_usize, 68_usize, Move(_68), 6_usize, Move(_6), 8_usize, Move(_8), 75_usize, Move(_75)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_92 = dump_var(17_usize, 16_usize, Move(_16), 58_usize, Move(_58), 57_usize, Move(_57), 36_usize, Move(_36)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_92 = dump_var(17_usize, 77_usize, Move(_77), 67_usize, Move(_67), 41_usize, Move(_41), 34_usize, Move(_34)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Call(_92 = dump_var(17_usize, 9_usize, Move(_9), 1_usize, Move(_1), 52_usize, Move(_52), 12_usize, Move(_12)), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [u16; 5],mut _2: [u16; 5],mut _3: [u16; 5],mut _4: ([u128; 3], f64, [u16; 5]),mut _5: ([u128; 3], f64, [u16; 5]),mut _6: [u16; 5]) -> Adt40 {
mir! {
type RET = Adt40;
let _7: [u128; 3];
let _8: (i64,);
let _9: isize;
let _10: isize;
let _11: [u16; 3];
let _12: f64;
let _13: Adt46;
let _14: [isize; 6];
let _15: [isize; 6];
let _16: Adt44;
let _17: bool;
let _18: [u128; 3];
let _19: [u16; 3];
let _20: isize;
let _21: char;
let _22: isize;
let _23: [u16; 3];
let _24: [i16; 8];
let _25: (i16, char, [u16; 5], u8, u16, (&'static (i16,), f64, u64));
let _26: [i32; 2];
let _27: f32;
let _28: Adt48;
let _29: ([u16; 5],);
let _30: f64;
let _31: [u16; 5];
let _32: f64;
let _33: char;
let _34: ([u128; 3], f64, [u16; 5]);
let _35: char;
let _36: Adt53;
let _37: isize;
let _38: [u16; 3];
let _39: f32;
let _40: u64;
let _41: ([isize; 6],);
let _42: f64;
let _43: f64;
let _44: char;
let _45: char;
let _46: ([isize; 6],);
let _47: isize;
let _48: ([u128; 3], f64, [u16; 5]);
let _49: isize;
let _50: ([u16; 3],);
let _51: ([isize; 6],);
let _52: ();
let _53: ();
{
RET = Adt40::Variant0 { fld0: _4.1 };
_4 = (_5.0, _5.1, _6);
_8.0 = 8160306169434748205_i64;
_3 = _4.2;
_6 = _4.2;
_5.0 = _4.0;
place!(Field::<f64>(Variant(RET, 0), 0)) = _4.1;
_2 = [44124_u16,63610_u16,50326_u16,51234_u16,2199_u16];
_4.0 = [245679003586276616778261198114582341966_u128,148477860997571935568254611757986841416_u128,320044699681158970384125820650869626938_u128];
SetDiscriminant(RET, 2);
place!(Field::<u16>(Variant(RET, 2), 1)) = !41025_u16;
_5.1 = _4.1;
place!(Field::<u16>(Variant(RET, 2), 1)) = 25374_u16;
_7 = [270522903697562540498619393344187793767_u128,148765443408385552744361760503107332386_u128,101035106451008280782746307168906032305_u128];
place!(Field::<u32>(Variant(RET, 2), 0)) = 2646763565_u32 + 1448959845_u32;
_5.0 = [327056768506834288864785493877919333678_u128,13369171182364404849286036655475093151_u128,235655601693936777710741723706119465196_u128];
_5.1 = -_4.1;
_13.fld0.0 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-94_isize),9223372036854775807_isize,(-9223372036854775808_isize),74_isize];
_12 = -_5.1;
_4.0 = [14229216246186520420194887940820143312_u128,37675068482394394523470194844762402479_u128,52758559721350243673893628019690826207_u128];
_5 = (_7, _4.1, _1);
match Field::<u16>(Variant(RET, 2), 1) {
0 => bb1,
1 => bb2,
25374 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
SetDiscriminant(RET, 0);
_4.2 = [12182_u16,56836_u16,55316_u16,29244_u16,2980_u16];
_8.0 = !(-3825650203048597107_i64);
_5 = (_4.0, _12, _3);
place!(Field::<f64>(Variant(RET, 0), 0)) = (-120600636706604488886629650797686488311_i128) as f64;
_13.fld0.0 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-79_isize)];
_14 = [9223372036854775807_isize,23_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-58_isize)];
_2 = [46606_u16,64019_u16,10276_u16,20309_u16,42096_u16];
_10 = 9223372036854775807_isize - (-57_isize);
_11 = [45500_u16,2976_u16,2722_u16];
_14 = [_10,_10,_10,_10,_10,_10];
_15 = [_10,_10,_10,_10,_10,_10];
_8.0 = 7565538648224333930_i64 ^ 9021659286334732725_i64;
_5.1 = _4.1 + Field::<f64>(Variant(RET, 0), 0);
SetDiscriminant(RET, 0);
_13.fld0 = (_14,);
RET = Adt40::Variant0 { fld0: _5.1 };
_3 = _1;
_5.1 = Field::<f64>(Variant(RET, 0), 0) + _4.1;
place!(Field::<f64>(Variant(RET, 0), 0)) = (-36955852155237615487885002769969805164_i128) as f64;
_4.1 = -_5.1;
_5 = (_7, Field::<f64>(Variant(RET, 0), 0), _3);
_3 = [41848_u16,29460_u16,49319_u16,6682_u16,34192_u16];
_13.fld0 = (_14,);
_9 = !_10;
Goto(bb5)
}
bb5 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb6 = {
_1 = [11964_u16,29922_u16,49653_u16,35251_u16,35372_u16];
_5.1 = _4.1 + _4.1;
_11 = [41964_u16,23528_u16,25961_u16];
_20 = _10;
_8 = ((-6039958956594288412_i64),);
_8.0 = _17 as i64;
_5 = (_4.0, _4.1, _6);
_8 = ((-4924218326421420842_i64),);
_5.2 = _6;
_20 = _9;
_5.2 = [36726_u16,53616_u16,27282_u16,59414_u16,14650_u16];
Goto(bb7)
}
bb7 = {
_13.fld0 = (_15,);
_9 = 15196_u16 as isize;
place!(Field::<f64>(Variant(RET, 0), 0)) = _5.1;
_24 = [15597_i16,(-21774_i16),(-16470_i16),11212_i16,(-28802_i16),(-6292_i16),11428_i16,9679_i16];
_3 = [2625_u16,56978_u16,34958_u16,21469_u16,27577_u16];
_20 = _9;
_15 = [_10,_9,_10,_10,_20,_20];
SetDiscriminant(RET, 2);
_4 = (_5.0, _5.1, _6);
_19 = _11;
_25.5.2 = 3415653532299960613_u64;
_25.5.2 = 4108283358008787691_u64 << _9;
_21 = '\u{51d77}';
_15 = [_10,_20,_10,_10,_9,_20];
RET = Adt40::Variant2 { fld0: 1159479099_u32,fld1: 13487_u16 };
_4.0 = _7;
_6 = [5056_u16,55115_u16,22753_u16,2368_u16,57409_u16];
_23 = [41015_u16,52778_u16,13728_u16];
_12 = _4.1;
_5 = (_4.0, _12, _6);
match _8.0 {
0 => bb6,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463458450389105346790614 => bb12,
_ => bb11
}
}
bb8 = {
_1 = [11964_u16,29922_u16,49653_u16,35251_u16,35372_u16];
_5.1 = _4.1 + _4.1;
_11 = [41964_u16,23528_u16,25961_u16];
_20 = _10;
_8 = ((-6039958956594288412_i64),);
_8.0 = _17 as i64;
_5 = (_4.0, _4.1, _6);
_8 = ((-4924218326421420842_i64),);
_5.2 = _6;
_20 = _9;
_5.2 = [36726_u16,53616_u16,27282_u16,59414_u16,14650_u16];
Goto(bb7)
}
bb9 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb10 = {
SetDiscriminant(RET, 0);
_4.2 = [12182_u16,56836_u16,55316_u16,29244_u16,2980_u16];
_8.0 = !(-3825650203048597107_i64);
_5 = (_4.0, _12, _3);
place!(Field::<f64>(Variant(RET, 0), 0)) = (-120600636706604488886629650797686488311_i128) as f64;
_13.fld0.0 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-79_isize)];
_14 = [9223372036854775807_isize,23_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-58_isize)];
_2 = [46606_u16,64019_u16,10276_u16,20309_u16,42096_u16];
_10 = 9223372036854775807_isize - (-57_isize);
_11 = [45500_u16,2976_u16,2722_u16];
_14 = [_10,_10,_10,_10,_10,_10];
_15 = [_10,_10,_10,_10,_10,_10];
_8.0 = 7565538648224333930_i64 ^ 9021659286334732725_i64;
_5.1 = _4.1 + Field::<f64>(Variant(RET, 0), 0);
SetDiscriminant(RET, 0);
_13.fld0 = (_14,);
RET = Adt40::Variant0 { fld0: _5.1 };
_3 = _1;
_5.1 = Field::<f64>(Variant(RET, 0), 0) + _4.1;
place!(Field::<f64>(Variant(RET, 0), 0)) = (-36955852155237615487885002769969805164_i128) as f64;
_4.1 = -_5.1;
_5 = (_7, Field::<f64>(Variant(RET, 0), 0), _3);
_3 = [41848_u16,29460_u16,49319_u16,6682_u16,34192_u16];
_13.fld0 = (_14,);
_9 = !_10;
Goto(bb5)
}
bb11 = {
Return()
}
bb12 = {
_5.2 = _4.2;
_14 = _13.fld0.0;
_27 = _25.5.2 as f32;
_1 = [38438_u16,15074_u16,1891_u16,11954_u16,28394_u16];
_17 = false;
_29.0 = [43502_u16,56890_u16,40624_u16,1174_u16,34493_u16];
_22 = _20;
_7 = [154918521961892910836162801833351482465_u128,274749714414502072610873086361752841724_u128,146637664838629199225575218450548746930_u128];
_6 = [11528_u16,19094_u16,33105_u16,59357_u16,51558_u16];
_25.1 = _21;
_32 = (-21222_i16) as f64;
_18 = _5.0;
_30 = -_12;
match _8.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
340282366920938463458450389105346790614 => bb19,
_ => bb18
}
}
bb13 = {
Return()
}
bb14 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb15 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb16 = {
_1 = [11964_u16,29922_u16,49653_u16,35251_u16,35372_u16];
_5.1 = _4.1 + _4.1;
_11 = [41964_u16,23528_u16,25961_u16];
_20 = _10;
_8 = ((-6039958956594288412_i64),);
_8.0 = _17 as i64;
_5 = (_4.0, _4.1, _6);
_8 = ((-4924218326421420842_i64),);
_5.2 = _6;
_20 = _9;
_5.2 = [36726_u16,53616_u16,27282_u16,59414_u16,14650_u16];
Goto(bb7)
}
bb17 = {
_13.fld0 = (_15,);
_9 = 15196_u16 as isize;
place!(Field::<f64>(Variant(RET, 0), 0)) = _5.1;
_24 = [15597_i16,(-21774_i16),(-16470_i16),11212_i16,(-28802_i16),(-6292_i16),11428_i16,9679_i16];
_3 = [2625_u16,56978_u16,34958_u16,21469_u16,27577_u16];
_20 = _9;
_15 = [_10,_9,_10,_10,_20,_20];
SetDiscriminant(RET, 2);
_4 = (_5.0, _5.1, _6);
_19 = _11;
_25.5.2 = 3415653532299960613_u64;
_25.5.2 = 4108283358008787691_u64 << _9;
_21 = '\u{51d77}';
_15 = [_10,_20,_10,_10,_9,_20];
RET = Adt40::Variant2 { fld0: 1159479099_u32,fld1: 13487_u16 };
_4.0 = _7;
_6 = [5056_u16,55115_u16,22753_u16,2368_u16,57409_u16];
_23 = [41015_u16,52778_u16,13728_u16];
_12 = _4.1;
_5 = (_4.0, _12, _6);
match _8.0 {
0 => bb6,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463458450389105346790614 => bb12,
_ => bb11
}
}
bb18 = {
Return()
}
bb19 = {
_25.1 = _21;
_25.2 = _5.2;
_5.2 = _4.2;
_25.1 = _21;
place!(Field::<u32>(Variant(RET, 2), 0)) = 3569360113_u32 << _8.0;
_5.1 = _30 - _12;
_31 = [22079_u16,39330_u16,57391_u16,1398_u16,3844_u16];
_14 = [_20,_22,_20,_10,_22,_9];
_31 = _5.2;
_27 = _32 as f32;
_20 = _9 & _10;
_25.0 = -(-22492_i16);
_19 = _23;
_36 = Adt53::Variant0 { fld0: _25.5.2 };
Goto(bb20)
}
bb20 = {
_35 = _21;
_27 = 27_i8 as f32;
_25.2 = [448_u16,26259_u16,32129_u16,31617_u16,54746_u16];
_31 = [3108_u16,65069_u16,22870_u16,59869_u16,41881_u16];
_34 = _4;
_25.3 = 125_u8;
SetDiscriminant(_36, 3);
RET = Adt40::Variant2 { fld0: 1650683345_u32,fld1: 17116_u16 };
_11 = _23;
_24 = [_25.0,_25.0,_25.0,_25.0,_25.0,_25.0,_25.0,_25.0];
_25.5.2 = !5162537065505454191_u64;
_8.0 = -(-7032462573109468766_i64);
_37 = _20 ^ _10;
_25.0 = 3869_i16 - (-4440_i16);
_3 = _4.2;
place!(Field::<u32>(Variant(RET, 2), 0)) = 23_i8 as u32;
_38 = [62112_u16,50856_u16,51401_u16];
match _25.3 {
0 => bb13,
1 => bb21,
2 => bb22,
125 => bb24,
_ => bb23
}
}
bb21 = {
Return()
}
bb22 = {
Return()
}
bb23 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb24 = {
_8 = ((-4921432882829949822_i64),);
_21 = _35;
_8 = (2447475193271806380_i64,);
_24 = [_25.0,_25.0,_25.0,_25.0,_25.0,_25.0,_25.0,_25.0];
_33 = _25.1;
_34 = (_4.0, _4.1, _3);
_19 = [45355_u16,62595_u16,22323_u16];
_31 = [56910_u16,32166_u16,56964_u16,25365_u16,35363_u16];
place!(Field::<u16>(Variant(RET, 2), 1)) = 17640_u16 >> _10;
_18 = [184772117563022843276612227984059951361_u128,215739399648432769136534598536505690952_u128,153630748993893069081876067308540103641_u128];
place!(Field::<u16>(Variant(RET, 2), 1)) = 59713_u16 >> _37;
_37 = _20;
SetDiscriminant(RET, 2);
_18 = [314846220624190697863016161013742297981_u128,144589742968674475697472048806838992171_u128,204343963079965621090216059002997961092_u128];
_25.1 = _35;
_26 = [(-1412367776_i32),831288010_i32];
_27 = _8.0 as f32;
_20 = _9 ^ _37;
_13.fld0.0 = _14;
_33 = _21;
Goto(bb25)
}
bb25 = {
_13.fld0 = (_15,);
_25.2 = [27761_u16,18237_u16,64747_u16,50257_u16,18384_u16];
_37 = _20 - _10;
_7 = [39134729169858088639144247522362105405_u128,176282332816000906128239432377774004392_u128,322976031129739637177626443418619186386_u128];
_42 = -_30;
_37 = _17 as isize;
_25.5.2 = !7311291766344036531_u64;
_34 = (_7, _30, _5.2);
_34 = _5;
_25.1 = _35;
_34.1 = _5.1 * _30;
_25.4 = _27 as u16;
_8.0 = 1922415346437683297_i64 | 6652234445499701974_i64;
place!(Field::<u16>(Variant(RET, 2), 1)) = _25.4;
_5 = (_4.0, _32, _4.2);
_27 = 61_i8 as f32;
_40 = _25.5.2 & _25.5.2;
_41 = (_14,);
_29.0 = [Field::<u16>(Variant(RET, 2), 1),Field::<u16>(Variant(RET, 2), 1),Field::<u16>(Variant(RET, 2), 1),_25.4,_25.4];
_30 = 48892163036624376172225562770358166630_u128 as f64;
match _25.3 {
0 => bb23,
1 => bb24,
2 => bb3,
3 => bb26,
4 => bb27,
125 => bb29,
_ => bb28
}
}
bb26 = {
_25.1 = _21;
_25.2 = _5.2;
_5.2 = _4.2;
_25.1 = _21;
place!(Field::<u32>(Variant(RET, 2), 0)) = 3569360113_u32 << _8.0;
_5.1 = _30 - _12;
_31 = [22079_u16,39330_u16,57391_u16,1398_u16,3844_u16];
_14 = [_20,_22,_20,_10,_22,_9];
_31 = _5.2;
_27 = _32 as f32;
_20 = _9 & _10;
_25.0 = -(-22492_i16);
_19 = _23;
_36 = Adt53::Variant0 { fld0: _25.5.2 };
Goto(bb20)
}
bb27 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb28 = {
_13.fld0.0 = [_9,_9,_10,_9,_9,_9];
place!(Field::<f64>(Variant(RET, 0), 0)) = -_12;
_9 = true as isize;
_5 = (_4.0, _4.1, _6);
_9 = -_10;
_5.1 = Field::<f64>(Variant(RET, 0), 0);
_5 = (_4.0, _4.1, _6);
_17 = !false;
SetDiscriminant(RET, 2);
_10 = !_9;
_13.fld0.0 = _14;
RET = Adt40::Variant0 { fld0: _12 };
_5 = _4;
Goto(bb6)
}
bb29 = {
_32 = _42;
_8 = ((-6039885490452294555_i64),);
place!(Field::<u32>(Variant(RET, 2), 0)) = _27 as u32;
_34 = _4;
_35 = _33;
_5.2 = [Field::<u16>(Variant(RET, 2), 1),_25.4,_25.4,_25.4,Field::<u16>(Variant(RET, 2), 1)];
place!(Field::<u16>(Variant(RET, 2), 1)) = !_25.4;
_3 = [_25.4,_25.4,_25.4,_25.4,_25.4];
_22 = 68296150616549609826744227545023332339_u128 as isize;
_23 = _19;
place!(Field::<u16>(Variant(RET, 2), 1)) = _25.4;
_33 = _21;
_25.5.2 = _40;
_34.2 = [_25.4,_25.4,_25.4,_25.4,Field::<u16>(Variant(RET, 2), 1)];
place!(Field::<u32>(Variant(RET, 2), 0)) = 4175580235_u32 & 2566026777_u32;
_48.1 = -_34.1;
_4 = (_18, _5.1, _31);
_38 = [_25.4,Field::<u16>(Variant(RET, 2), 1),Field::<u16>(Variant(RET, 2), 1)];
_5 = (_7, _48.1, _31);
_34 = (_4.0, _5.1, _4.2);
_51.0 = [_20,_20,_20,_20,_20,_22];
_49 = _17 as isize;
_41 = _13.fld0;
_5 = (_4.0, _48.1, _25.2);
Goto(bb30)
}
bb30 = {
Call(_52 = dump_var(18_usize, 8_usize, Move(_8), 31_usize, Move(_31), 18_usize, Move(_18), 29_usize, Move(_29)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_52 = dump_var(18_usize, 26_usize, Move(_26), 35_usize, Move(_35), 6_usize, Move(_6), 38_usize, Move(_38)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_52 = dump_var(18_usize, 22_usize, Move(_22), 11_usize, Move(_11), 10_usize, Move(_10), 15_usize, Move(_15)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Call(_52 = dump_var(18_usize, 9_usize, Move(_9), 23_usize, Move(_23), 33_usize, Move(_33), 53_usize, _53), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: isize,mut _2: [u16; 5],mut _3: ([isize; 6],),mut _4: [isize; 6],mut _5: f64,mut _6: i16,mut _7: [isize; 6],mut _8: isize) -> u16 {
mir! {
type RET = u16;
let _9: ([u128; 3], f64, [u16; 5]);
let _10: i16;
let _11: ();
let _12: ();
{
_3 = (_7,);
_7 = [_8,_1,_1,_8,_1,_1];
_2 = [1705_u16,58215_u16,34195_u16,25282_u16,45806_u16];
Goto(bb1)
}
bb1 = {
RET = 29280_u16 - 26635_u16;
RET = 31336_u16 + 4650_u16;
RET = 33148_u16 | 28569_u16;
_5 = _8 as f64;
Goto(bb2)
}
bb2 = {
_5 = 149237249436445313259798357953992539854_u128 as f64;
RET = 23185_u16 >> _8;
RET = 5084_u16;
_2 = [RET,RET,RET,RET,RET];
_1 = 76406342_u32 as isize;
_2 = [RET,RET,RET,RET,RET];
_3.0 = [_8,_8,_8,_8,_8,_8];
_8 = _1 << _6;
_7 = [_8,_8,_8,_8,_8,_8];
_2 = [RET,RET,RET,RET,RET];
RET = 19697_u16 - 31731_u16;
_3 = (_4,);
RET = !59260_u16;
_4 = _7;
_3.0 = [_8,_8,_8,_8,_8,_8];
_5 = 42205643536362171214382882150876469496_i128 as f64;
_4 = [_8,_8,_8,_8,_8,_8];
_2 = [RET,RET,RET,RET,RET];
_5 = RET as f64;
_9.2 = _2;
RET = _8 as u16;
Goto(bb3)
}
bb3 = {
Call(_11 = dump_var(19_usize, 2_usize, Move(_2), 6_usize, Move(_6), 8_usize, Move(_8), 12_usize, _12), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(152415998954208100330393445216892249975_i128), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box((-13_i8)), std::hint::black_box(58825_u16), std::hint::black_box(5022709260148117602_u64));
                
            }
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: f64,

},
Variant1{
fld0: bool,
fld1: ([u128; 3], f64, [u16; 5]),
fld2: [i16; 8],
fld3: [u128; 3],
fld4: (i16,),
fld5: i32,

},
Variant2{
fld0: u32,
fld1: u16,

},
Variant3{
fld0: u64,
fld1: [u128; 3],
fld2: [isize; 6],
fld3: i8,
fld4: i16,
fld5: *const u128,

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: *mut u16,
fld1: *const i64,

},
Variant1{
fld0: ([u16; 3],),
fld1: [i16; 8],
fld2: isize,
fld3: [i32; 2],

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: [u128; 3],
fld1: [isize; 6],
fld2: f64,
fld3: u128,
fld4: ([u16; 5],),
fld5: *mut ([u16; 5],),

},
Variant1{
fld0: *const i64,
fld1: *mut ([u16; 5],),
fld2: isize,
fld3: u64,
fld4: f64,
fld5: i32,
fld6: i64,
fld7: (i16,),

},
Variant2{
fld0: Adt41,
fld1: usize,
fld2: f64,
fld3: i8,
fld4: i16,

}}
#[derive(Debug)]
pub struct Adt43 {
fld0: *mut u16,
fld1: Adt41,
fld2: Adt42,
fld3: f64,
fld4: Adt40,
fld5: ([u128; 3], f64, [u16; 5]),
fld6: *mut isize,
fld7: ([isize; 6],),
}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: Adt42,
fld1: (i64,),

},
Variant1{
fld0: u8,
fld1: [i32; 2],
fld2: (i64,),
fld3: *mut ([u16; 5],),
fld4: [u128; 3],
fld5: (i16,),

},
Variant2{
fld0: u8,
fld1: *mut i8,
fld2: (i64,),
fld3: i8,
fld4: i16,
fld5: ([u128; 3], f64, [u16; 5]),
fld6: ([isize; 6],),

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: f32,
fld1: *mut u16,
fld2: *mut isize,
fld3: *mut i8,
fld4: u64,
fld5: Adt44,
fld6: i64,

},
Variant1{
fld0: f32,
fld1: u64,
fld2: [i32; 2],
fld3: usize,
fld4: u128,
fld5: Adt40,
fld6: i64,

}}
#[derive(Debug)]
pub struct Adt46 {
fld0: ([isize; 6],),
}
#[derive(Debug)]
pub struct Adt47 {
fld0: Adt44,
fld1: f32,
fld2: i64,
fld3: [isize; 6],
fld4: [i32; 2],
fld5: u32,
}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: *mut u16,
fld1: *mut ([u16; 5],),
fld2: [u16; 3],

},
Variant1{
fld0: [i32; 2],
fld1: Adt41,

},
Variant2{
fld0: u32,
fld1: *const u128,
fld2: Adt41,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: (i16,),
fld1: *mut u16,

},
Variant1{
fld0: u64,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: Adt43,
fld1: char,
fld2: [u16; 3],
fld3: *const i64,
fld4: Adt40,
fld5: i128,
fld6: Adt42,

},
Variant1{
fld0: f64,
fld1: Adt46,
fld2: ([isize; 6],),
fld3: (i64,),
fld4: Adt47,
fld5: Adt44,
fld6: i64,
fld7: i128,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: [u16; 3],
fld1: [i32; 2],
fld2: *const u128,
fld3: Adt49,
fld4: i16,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: (i16,),
fld2: [u128; 3],
fld3: Adt50,
fld4: [isize; 6],
fld5: Adt48,

},
Variant1{
fld0: Adt43,
fld1: *const char,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u64,

},
Variant1{
fld0: *const char,
fld1: *mut isize,

},
Variant2{
fld0: *mut u16,
fld1: ([u16; 5],),
fld2: ([u128; 3], f64, [u16; 5]),

},
Variant3{
fld0: Adt50,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt53,
fld1: char,
fld2: [i16; 8],
fld3: Adt43,
fld4: u16,
fld5: i32,
fld6: f64,

},
Variant1{
fld0: *mut u16,

},
Variant2{
fld0: [u16; 5],
fld1: ([u128; 3], f64, [u16; 5]),

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: *mut isize,
fld1: i32,
fld2: *const i64,
fld3: i8,

},
Variant1{
fld0: Adt43,
fld1: *const u128,
fld2: Adt40,

},
Variant2{
fld0: u16,
fld1: Adt46,

},
Variant3{
fld0: Adt47,
fld1: Adt43,
fld2: [isize; 6],
fld3: *const i64,
fld4: Adt53,

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: u32,
fld1: [i32; 2],
fld2: Adt55,
fld3: i8,
fld4: (i64,),
fld5: Adt42,
fld6: Adt41,
fld7: i128,
}

