#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32) -> i16 {
mir! {
type RET = i16;
let _13: u8;
let _14: ([u32; 1],);
let _15: *const bool;
let _16: Adt62;
let _17: *mut u8;
let _18: char;
let _19: char;
let _20: [u16; 1];
let _21: [char; 4];
let _22: char;
let _23: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _24: [u32; 1];
let _25: isize;
let _26: (f32, u16, char, i16);
let _27: bool;
let _28: u64;
let _29: [char; 5];
let _30: bool;
let _31: ([i32; 7], u64, i16, i8);
let _32: [u8; 1];
let _33: Adt65;
let _34: ();
let _35: ();
{
_10 = 105_u8;
_4 = !(-117_i8);
_9 = (-14644_i16) as usize;
_12 = 3767617322_u32;
_10 = 72_u8;
_2 = '\u{20284}';
RET = -6909_i16;
_1 = false | false;
_11 = !5574_u16;
_8 = (-78991578297331597695407058367384832476_i128);
_12 = 8073244393222796560_i64 as u32;
_4 = _12 as i8;
_10 = 152_u8;
RET = 19527_i16;
_8 = 153896988321235405256614170113144725_i128;
_9 = 3521065337663414132_usize - 7358561397984697683_usize;
_6 = !1171132953_i32;
_5 = (-32006_i16);
RET = _5 ^ _5;
_13 = _8 as u8;
_2 = '\u{f16a8}';
_12 = 3172782997_u32 >> _6;
RET = _5;
_1 = !false;
_14.0 = [_12];
Call(_2 = fn1(_5, _4, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = '\u{b53d5}';
_5 = _13 as i16;
_14.0 = [_12];
_1 = true;
_9 = _5 as usize;
_16.fld3.fld1 = (_8, _6);
_17 = core::ptr::addr_of_mut!(_13);
RET = _5 + _5;
_3 = 9223372036854775807_isize;
_16.fld3.fld3 = _4 >> _16.fld3.fld1.1;
_18 = _2;
_16.fld2.0 = [_11];
_9 = 5065917387431197069_usize / 4_usize;
_16.fld2.1 = !_1;
_16.fld3.fld1 = (_8, _6);
_3 = (-9223372036854775808_isize) >> _8;
_16.fld3.fld4 = _16.fld2.0;
_16.fld2.2 = !_3;
_16.fld2.0 = [_11];
_12 = !2545456660_u32;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld3.fld4);
_18 = _2;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld2.0);
_16.fld3.fld4 = [_11];
match _8 {
0 => bb2,
153896988321235405256614170113144725 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
(*_17) = _6 as u8;
_9 = !0_usize;
_16.fld2.2 = !_3;
_15 = core::ptr::addr_of!(_16.fld2.1);
_16.fld0 = _8;
_16.fld2.2 = _3;
_16.fld4 = _5 >> (*_17);
_3 = _10 as isize;
_13 = _10;
_16.fld3.fld3 = 8732849020093951006_i64 as i8;
_15 = core::ptr::addr_of!(_16.fld2.1);
(*_17) = _11 as u8;
_10 = _13;
_23.2.0 = (*_17) as f32;
(*_15) = _1;
_22 = _18;
_19 = _18;
_16.fld3.fld1.0 = _16.fld0 * _8;
Goto(bb5)
}
bb5 = {
_16.fld2 = (_16.fld3.fld4, _1, _3);
_4 = -_16.fld3.fld3;
_23.1 = !7678534458003429466_i64;
_19 = _18;
_23.2.3 = !_16.fld4;
_16.fld0 = (*_15) as i128;
match _8 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
153896988321235405256614170113144725 => bb13,
_ => bb12
}
}
bb6 = {
(*_17) = _6 as u8;
_9 = !0_usize;
_16.fld2.2 = !_3;
_15 = core::ptr::addr_of!(_16.fld2.1);
_16.fld0 = _8;
_16.fld2.2 = _3;
_16.fld4 = _5 >> (*_17);
_3 = _10 as isize;
_13 = _10;
_16.fld3.fld3 = 8732849020093951006_i64 as i8;
_15 = core::ptr::addr_of!(_16.fld2.1);
(*_17) = _11 as u8;
_10 = _13;
_23.2.0 = (*_17) as f32;
(*_15) = _1;
_22 = _18;
_19 = _18;
_16.fld3.fld1.0 = _16.fld0 * _8;
Goto(bb5)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = '\u{b53d5}';
_5 = _13 as i16;
_14.0 = [_12];
_1 = true;
_9 = _5 as usize;
_16.fld3.fld1 = (_8, _6);
_17 = core::ptr::addr_of_mut!(_13);
RET = _5 + _5;
_3 = 9223372036854775807_isize;
_16.fld3.fld3 = _4 >> _16.fld3.fld1.1;
_18 = _2;
_16.fld2.0 = [_11];
_9 = 5065917387431197069_usize / 4_usize;
_16.fld2.1 = !_1;
_16.fld3.fld1 = (_8, _6);
_3 = (-9223372036854775808_isize) >> _8;
_16.fld3.fld4 = _16.fld2.0;
_16.fld2.2 = !_3;
_16.fld2.0 = [_11];
_12 = !2545456660_u32;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld3.fld4);
_18 = _2;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld2.0);
_16.fld3.fld4 = [_11];
match _8 {
0 => bb2,
153896988321235405256614170113144725 => bb4,
_ => bb3
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_26.1 = _11;
_23.2.3 = _16.fld3.fld3 as i16;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld2.0);
_9 = 4702665047193835007_u64 as usize;
_22 = _19;
_16.fld3.fld1 = (_16.fld0, _6);
_16.fld2.0 = _16.fld3.fld4;
_21 = [_19,_2,_18,_19];
_7 = _23.1;
_23.1 = _7 + _7;
_16.fld2 = (_16.fld3.fld4, _1, _3);
_16.fld3.fld1.1 = _6;
match _8 {
0 => bb12,
1 => bb6,
2 => bb10,
3 => bb11,
153896988321235405256614170113144725 => bb14,
_ => bb7
}
}
bb14 = {
_23.0 = _16.fld3.fld1.1 < _6;
_11 = 336055960541972938377520787261364322075_u128 as u16;
_28 = 16543678639359857859_u64;
(*_17) = _10;
_6 = _16.fld3.fld1.1;
_9 = 2_usize - 2887770507385315416_usize;
_11 = _26.1 >> _16.fld3.fld1.1;
_9 = !2_usize;
_20 = _16.fld2.0;
_3 = !_16.fld2.2;
_26.1 = !_11;
_3 = _16.fld2.2 >> _16.fld3.fld3;
_7 = -_23.1;
_4 = _16.fld3.fld3;
_14.0 = [_12];
_18 = _2;
_32 = [_13];
_31.0 = [_6,_16.fld3.fld1.1,_16.fld3.fld1.1,_6,_6,_6,_6];
_2 = _18;
_31.0 = [_6,_6,_6,_6,_16.fld3.fld1.1,_6,_16.fld3.fld1.1];
_33.fld0 = Adt61 { fld0: _31.0 };
_31.1 = _23.2.0 as u64;
_27 = (*_15) & _23.0;
_5 = _16.fld4;
_23.2.1 = !_26.1;
_17 = core::ptr::addr_of_mut!((*_17));
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(0_usize, 27_usize, Move(_27), 6_usize, Move(_6), 32_usize, Move(_32), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(0_usize, 20_usize, Move(_20), 2_usize, Move(_2), 7_usize, Move(_7), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(0_usize, 14_usize, Move(_14), 13_usize, Move(_13), 3_usize, Move(_3), 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i16,mut _2: i8,mut _3: i16) -> char {
mir! {
type RET = char;
let _4: f64;
let _5: isize;
let _6: u64;
let _7: bool;
let _8: char;
let _9: [u8; 1];
let _10: (u32,);
let _11: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _12: [i32; 6];
let _13: [i32; 6];
let _14: [i32; 7];
let _15: (i128, i32);
let _16: u32;
let _17: f64;
let _18: Adt52;
let _19: (i128, i32);
let _20: u128;
let _21: [i128; 4];
let _22: i16;
let _23: bool;
let _24: f32;
let _25: u8;
let _26: bool;
let _27: ([u32; 1],);
let _28: ([u16; 1], bool, isize);
let _29: *mut *const f32;
let _30: [u8; 1];
let _31: u8;
let _32: ([i32; 7], u64, i16, i8);
let _33: [u8; 1];
let _34: *const f32;
let _35: Adt57;
let _36: char;
let _37: ();
let _38: ();
{
RET = '\u{6d855}';
_5 = (-9223372036854775808_isize) >> _3;
_3 = 159919749_u32 as i16;
RET = '\u{7516b}';
_4 = 3752809097_u32 as f64;
_6 = 14657397529099936573_u64 | 4883659620775263028_u64;
_3 = false as i16;
_6 = 890157792446929525_u64 % 2216875461846520801_u64;
_6 = 195059658843332937257875240040478881482_u128 as u64;
_6 = 17697871812763586484_u64 + 14229407265764163923_u64;
_6 = 1_usize as u64;
RET = '\u{d9b5f}';
_1 = true as i16;
_1 = _3 + _3;
_2 = 87_i8 & (-54_i8);
_4 = _6 as f64;
_6 = !10658255545472171333_u64;
_5 = !9223372036854775807_isize;
_1 = -_3;
_1 = -_3;
_4 = 2057793600_i32 as f64;
_5 = 1225935345_u32 as isize;
Goto(bb1)
}
bb1 = {
_8 = '\u{2380e}';
_8 = '\u{59b5b}';
_7 = false;
_5 = 51_isize | (-9223372036854775808_isize);
_7 = false;
_7 = _6 != _6;
_1 = !_3;
RET = _8;
_4 = 72601794_u32 as f64;
RET = _8;
_5 = 865_u16 as isize;
_1 = _3;
_6 = !3609783192604216354_u64;
_7 = false | false;
_3 = -_1;
RET = _8;
_5 = 124278182755650837096409406439214098603_i128 as isize;
_4 = 162190215166675971772177303456353642955_i128 as f64;
RET = _8;
Call(_2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11.0 = _7;
_6 = 14353090250691783463_u64 % 8035523120360180951_u64;
_4 = 32724252417245464337696284950181935938_i128 as f64;
_3 = -_1;
_11.0 = !_7;
_11.3 = [4036193356_u32];
_7 = _4 > _4;
_11.2.0 = _4 as f32;
Call(_6 = fn2(_11.2.0, _3, _1, _3, _2, _4, _11.0, _1, _3, _8, _7, _8, _4, _7, _2, _11.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_13 = [1533931090_i32,568340200_i32,(-5983809_i32),(-2097887107_i32),1015515283_i32,977016541_i32];
_11.2.0 = 58_u8 as f32;
_15.0 = (-91296843490590753243014574389269884550_i128) * 105330995563719836291680924640356336186_i128;
_10.0 = 669057687_u32 ^ 3662351674_u32;
_11.2.2 = _8;
_12 = [1648425989_i32,(-471552912_i32),(-856553447_i32),(-1482076083_i32),(-532772774_i32),(-356361720_i32)];
_7 = _11.0;
_9 = [87_u8];
_11.3 = [_10.0];
_9 = [154_u8];
_18.fld4 = [18918_u16];
_11.2.1 = !50740_u16;
_16 = !_10.0;
_13 = [1966067411_i32,(-1110496399_i32),174516012_i32,(-1803215783_i32),1581630631_i32,866969711_i32];
_17 = _4 * _4;
_18.fld1 = (_15.0, (-1333166740_i32));
_11.2.3 = _3 >> _10.0;
_11.2.1 = 44547_u16 * 8089_u16;
_5 = 64945351914430837236759597716681394979_u128 as isize;
_15.1 = _18.fld1.1 | _18.fld1.1;
_19.0 = !_15.0;
_14 = [_15.1,_15.1,_18.fld1.1,_15.1,_15.1,_18.fld1.1,_18.fld1.1];
_9 = [168_u8];
Goto(bb4)
}
bb4 = {
RET = _8;
_1 = _11.2.3;
_11.1 = !(-1220502521397824830_i64);
_18.fld1 = (_15.0, _15.1);
_11.2.0 = 4_usize as f32;
_23 = !_7;
_11.2.1 = _16 as u16;
_19 = _18.fld1;
_11.2.3 = _3 & _1;
_15.0 = _19.0 - _19.0;
_11.1 = 847746806826016111_i64;
_11.2.2 = _8;
_20 = !76527358770296856709013336460618646520_u128;
_11.2.1 = 4820_u16;
_21 = [_15.0,_15.0,_19.0,_15.0];
_21 = [_19.0,_19.0,_18.fld1.0,_19.0];
_5 = (-9223372036854775808_isize) << _15.0;
_22 = _16 as i16;
_15.1 = _19.1 + _18.fld1.1;
_19.1 = !_15.1;
_18.fld4 = [_11.2.1];
_18.fld3 = 13749829195838420384_usize as i8;
_11.0 = !_23;
_15.1 = _19.1 ^ _18.fld1.1;
_18.fld3 = -_2;
_19.0 = _18.fld1.0;
Call(_5 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_5 = (-68_isize);
_18.fld1.1 = _15.1 * _19.1;
_17 = _4;
_11.2.1 = _18.fld3 as u16;
_19.1 = _15.0 as i32;
_28 = (_18.fld4, _7, _5);
_3 = -_22;
_9 = [194_u8];
_27.0 = _11.3;
RET = _8;
_11.2.3 = _3 - _22;
_11.1 = 7_usize as i64;
_30 = _9;
_24 = _11.2.0;
_20 = !192766408453357314761666305909856207950_u128;
_2 = _18.fld3;
_10.0 = !_16;
_24 = -_11.2.0;
_26 = !_23;
_18.fld2 = core::ptr::addr_of_mut!(_18.fld4);
Call(_25 = fn18(_4, _8), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_12 = [_15.1,_18.fld1.1,_18.fld1.1,_15.1,_18.fld1.1,_18.fld1.1];
_14 = [_15.1,_15.1,_15.1,_19.1,_18.fld1.1,_19.1,_18.fld1.1];
_28 = (_18.fld4, _26, _5);
RET = _11.2.2;
_31 = !_25;
_21 = [_15.0,_15.0,_15.0,_15.0];
match _25 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
63 => bb12,
_ => bb11
}
}
bb7 = {
_5 = (-68_isize);
_18.fld1.1 = _15.1 * _19.1;
_17 = _4;
_11.2.1 = _18.fld3 as u16;
_19.1 = _15.0 as i32;
_28 = (_18.fld4, _7, _5);
_3 = -_22;
_9 = [194_u8];
_27.0 = _11.3;
RET = _8;
_11.2.3 = _3 - _22;
_11.1 = 7_usize as i64;
_30 = _9;
_24 = _11.2.0;
_20 = !192766408453357314761666305909856207950_u128;
_2 = _18.fld3;
_10.0 = !_16;
_24 = -_11.2.0;
_26 = !_23;
_18.fld2 = core::ptr::addr_of_mut!(_18.fld4);
Call(_25 = fn18(_4, _8), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
RET = _8;
_1 = _11.2.3;
_11.1 = !(-1220502521397824830_i64);
_18.fld1 = (_15.0, _15.1);
_11.2.0 = 4_usize as f32;
_23 = !_7;
_11.2.1 = _16 as u16;
_19 = _18.fld1;
_11.2.3 = _3 & _1;
_15.0 = _19.0 - _19.0;
_11.1 = 847746806826016111_i64;
_11.2.2 = _8;
_20 = !76527358770296856709013336460618646520_u128;
_11.2.1 = 4820_u16;
_21 = [_15.0,_15.0,_19.0,_15.0];
_21 = [_19.0,_19.0,_18.fld1.0,_19.0];
_5 = (-9223372036854775808_isize) << _15.0;
_22 = _16 as i16;
_15.1 = _19.1 + _18.fld1.1;
_19.1 = !_15.1;
_18.fld4 = [_11.2.1];
_18.fld3 = 13749829195838420384_usize as i8;
_11.0 = !_23;
_15.1 = _19.1 ^ _18.fld1.1;
_18.fld3 = -_2;
_19.0 = _18.fld1.0;
Call(_5 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_13 = [1533931090_i32,568340200_i32,(-5983809_i32),(-2097887107_i32),1015515283_i32,977016541_i32];
_11.2.0 = 58_u8 as f32;
_15.0 = (-91296843490590753243014574389269884550_i128) * 105330995563719836291680924640356336186_i128;
_10.0 = 669057687_u32 ^ 3662351674_u32;
_11.2.2 = _8;
_12 = [1648425989_i32,(-471552912_i32),(-856553447_i32),(-1482076083_i32),(-532772774_i32),(-356361720_i32)];
_7 = _11.0;
_9 = [87_u8];
_11.3 = [_10.0];
_9 = [154_u8];
_18.fld4 = [18918_u16];
_11.2.1 = !50740_u16;
_16 = !_10.0;
_13 = [1966067411_i32,(-1110496399_i32),174516012_i32,(-1803215783_i32),1581630631_i32,866969711_i32];
_17 = _4 * _4;
_18.fld1 = (_15.0, (-1333166740_i32));
_11.2.3 = _3 >> _10.0;
_11.2.1 = 44547_u16 * 8089_u16;
_5 = 64945351914430837236759597716681394979_u128 as isize;
_15.1 = _18.fld1.1 | _18.fld1.1;
_19.0 = !_15.0;
_14 = [_15.1,_15.1,_18.fld1.1,_15.1,_15.1,_18.fld1.1,_18.fld1.1];
_9 = [168_u8];
Goto(bb4)
}
bb10 = {
_11.0 = _7;
_6 = 14353090250691783463_u64 % 8035523120360180951_u64;
_4 = 32724252417245464337696284950181935938_i128 as f64;
_3 = -_1;
_11.0 = !_7;
_11.3 = [4036193356_u32];
_7 = _4 > _4;
_11.2.0 = _4 as f32;
Call(_6 = fn2(_11.2.0, _3, _1, _3, _2, _4, _11.0, _1, _3, _8, _7, _8, _4, _7, _2, _11.0), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_8 = '\u{2380e}';
_8 = '\u{59b5b}';
_7 = false;
_5 = 51_isize | (-9223372036854775808_isize);
_7 = false;
_7 = _6 != _6;
_1 = !_3;
RET = _8;
_4 = 72601794_u32 as f64;
RET = _8;
_5 = 865_u16 as isize;
_1 = _3;
_6 = !3609783192604216354_u64;
_7 = false | false;
_3 = -_1;
RET = _8;
_5 = 124278182755650837096409406439214098603_i128 as isize;
_4 = 162190215166675971772177303456353642955_i128 as f64;
RET = _8;
Call(_2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_19.1 = _15.1 ^ _18.fld1.1;
_30 = [_31];
_11.0 = _23;
_3 = 13629900350944330902_usize as i16;
_32.1 = _5 as u64;
_24 = _11.2.0 / 1_f32;
_19.1 = _18.fld1.1;
_33 = [_25];
_27.0 = _11.3;
_29 = core::ptr::addr_of_mut!(_34);
_20 = !264538612806207260070567588594274656383_u128;
_18.fld1 = (_15.0, _15.1);
_28.1 = _11.0;
_32.3 = -_2;
_13 = [_19.1,_15.1,_19.1,_18.fld1.1,_15.1,_19.1];
(*_29) = core::ptr::addr_of!(_24);
_21 = [_15.0,_18.fld1.0,_15.0,_15.0];
_34 = core::ptr::addr_of!((*_34));
_11.2 = (_24, 19174_u16, _8, _1);
_10 = (_16,);
_35.fld0.2 = _11.2.2;
_32.3 = _15.0 as i8;
match _25 {
0 => bb6,
1 => bb9,
63 => bb14,
_ => bb13
}
}
bb13 = {
_13 = [1533931090_i32,568340200_i32,(-5983809_i32),(-2097887107_i32),1015515283_i32,977016541_i32];
_11.2.0 = 58_u8 as f32;
_15.0 = (-91296843490590753243014574389269884550_i128) * 105330995563719836291680924640356336186_i128;
_10.0 = 669057687_u32 ^ 3662351674_u32;
_11.2.2 = _8;
_12 = [1648425989_i32,(-471552912_i32),(-856553447_i32),(-1482076083_i32),(-532772774_i32),(-356361720_i32)];
_7 = _11.0;
_9 = [87_u8];
_11.3 = [_10.0];
_9 = [154_u8];
_18.fld4 = [18918_u16];
_11.2.1 = !50740_u16;
_16 = !_10.0;
_13 = [1966067411_i32,(-1110496399_i32),174516012_i32,(-1803215783_i32),1581630631_i32,866969711_i32];
_17 = _4 * _4;
_18.fld1 = (_15.0, (-1333166740_i32));
_11.2.3 = _3 >> _10.0;
_11.2.1 = 44547_u16 * 8089_u16;
_5 = 64945351914430837236759597716681394979_u128 as isize;
_15.1 = _18.fld1.1 | _18.fld1.1;
_19.0 = !_15.0;
_14 = [_15.1,_15.1,_18.fld1.1,_15.1,_15.1,_18.fld1.1,_18.fld1.1];
_9 = [168_u8];
Goto(bb4)
}
bb14 = {
_1 = _22;
_32.2 = -_3;
_35.fld0.1 = _11.2.1;
_33 = [_25];
_6 = !_32.1;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(1_usize, 22_usize, Move(_22), 31_usize, Move(_31), 9_usize, Move(_9), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(1_usize, 13_usize, Move(_13), 30_usize, Move(_30), 28_usize, Move(_28), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(1_usize, 1_usize, Move(_1), 21_usize, Move(_21), 26_usize, Move(_26), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(1_usize, 12_usize, Move(_12), 38_usize, _38, 38_usize, _38, 38_usize, _38), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: f32,mut _2: i16,mut _3: i16,mut _4: i16,mut _5: i8,mut _6: f64,mut _7: bool,mut _8: i16,mut _9: i16,mut _10: char,mut _11: bool,mut _12: char,mut _13: f64,mut _14: bool,mut _15: i8,mut _16: bool) -> u64 {
mir! {
type RET = u64;
let _17: u128;
let _18: f64;
let _19: *const f32;
let _20: Adt60;
let _21: ([u32; 1],);
let _22: Adt53;
let _23: *mut *const f32;
let _24: u128;
let _25: f64;
let _26: [i32; 6];
let _27: i64;
let _28: [u64; 5];
let _29: f32;
let _30: ([u32; 1],);
let _31: bool;
let _32: f32;
let _33: [u8; 7];
let _34: usize;
let _35: Adt51;
let _36: i128;
let _37: char;
let _38: *const f32;
let _39: Adt64;
let _40: i8;
let _41: isize;
let _42: bool;
let _43: i32;
let _44: *const *mut u8;
let _45: [char; 5];
let _46: i8;
let _47: (([u32; 1],), u32, u16, u64);
let _48: i32;
let _49: [i32; 6];
let _50: ();
let _51: ();
{
_13 = _6 / f64::NAN;
_1 = 9223372036854775807_isize as f32;
RET = 7741950562632748747_u64 + 89456375977024570_u64;
RET = !6383494479888924484_u64;
_14 = _11 ^ _16;
_15 = _5 << _3;
RET = _15 as u64;
_4 = _8 - _9;
_7 = _11 ^ _14;
_8 = _4;
RET = 15934803217093521083_u64 >> _4;
_13 = 42_u8 as f64;
_13 = _6 + _6;
_8 = _2 + _2;
Call(_20.fld1 = fn3(_7, _15, _5, _12, _2, _12, _4, _10, _12, _16, _8, _15, _5, _12), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_21.0 = [2912604414_u32];
_20.fld1.fld0.1.0 = [(-611936116_i32),1642727185_i32,1971860244_i32,875249780_i32,835388036_i32,1103790815_i32,1828852275_i32];
_18 = _13;
_8 = _9;
_20.fld1.fld0.1.3 = _18 as i8;
_18 = _13;
_10 = _12;
_17 = 309412995341955550854367203415578866046_u128 << _20.fld1.fld0.1.1;
_8 = _3 + _9;
_21.0 = [315059679_u32];
_16 = !_7;
_22.fld2 = [924889824_i32,(-329920202_i32),(-924935523_i32),(-1132176565_i32),(-756251240_i32),1757455501_i32];
_20.fld1.fld0.1.2 = _3;
_14 = _4 > _9;
_23 = core::ptr::addr_of_mut!(_19);
_19 = core::ptr::addr_of!(_22.fld1);
(*_23) = core::ptr::addr_of!(_22.fld1);
(*_19) = _1;
_20.fld1.fld0.3 = _20.fld1.fld0.1.1 | _20.fld1.fld0.1.1;
_5 = _15;
_20.fld1.fld0.0 = core::ptr::addr_of_mut!(_20.fld1.fld0.2);
_20.fld1.fld0.2 = (-108357428202665847602150342041391162422_i128) << _20.fld1.fld0.3;
(*_23) = core::ptr::addr_of!(_22.fld1);
RET = _20.fld1.fld0.1.2 as u64;
_16 = !_14;
match _20.fld1.fld0.1.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
891712969340187628 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_20.fld1.fld0.1.2 = _3 & _4;
_13 = _20.fld1.fld0.2 as f64;
_20.fld1.fld0.1.0 = [(-660880597_i32),(-988561886_i32),(-578010923_i32),244462005_i32,(-486510505_i32),(-1761520893_i32),(-2056016625_i32)];
Goto(bb9)
}
bb9 = {
_25 = _13;
_22.fld2 = [(-2136835901_i32),664738154_i32,(-57710429_i32),1125948940_i32,(-1415196823_i32),(-1978434689_i32)];
_20.fld0 = (-4305365482589749567_i64);
(*_23) = core::ptr::addr_of!((*_19));
_9 = _4;
_16 = _7;
_16 = _7 & _7;
_1 = (*_19) * (*_19);
_2 = 3689961909_u32 as i16;
_26 = [(-1015340209_i32),(-2065796875_i32),465523177_i32,(-990954942_i32),(-1315503550_i32),(-1520084781_i32)];
_1 = -(*_19);
_24 = _17;
_10 = _12;
_8 = _3;
_15 = _5;
_22.fld0 = [198_u8];
_22.fld1 = _1;
_20.fld1.fld0.0 = core::ptr::addr_of_mut!(_20.fld1.fld0.2);
_22.fld1 = _20.fld1.fld0.1.3 as f32;
Goto(bb10)
}
bb10 = {
_28 = [_20.fld1.fld0.1.1,_20.fld1.fld0.3,_20.fld1.fld0.3,_20.fld1.fld0.1.1,_20.fld1.fld0.1.1];
_5 = _20.fld1.fld0.1.3 << _20.fld1.fld0.3;
RET = _20.fld1.fld0.1.1;
_2 = _16 as i16;
_30.0 = [210320292_u32];
(*_19) = -_1;
_31 = _16;
_15 = -_5;
_25 = _13;
_20.fld1.fld0.1.0 = [432389058_i32,(-1301854728_i32),(-1838399773_i32),858907210_i32,1627768642_i32,1456842397_i32,1372187306_i32];
_35.fld4 = _8;
(*_19) = 23_isize as f32;
_11 = _16;
_35.fld2 = !491159309_u32;
_20.fld1.fld0.1.3 = _15;
_20.fld1.fld0.1.0 = [(-173741189_i32),(-1274634836_i32),(-617228266_i32),(-2108108731_i32),(-2087408769_i32),1719806852_i32,(-411872218_i32)];
_35.fld4 = !_2;
_27 = _20.fld1.fld0.3 as i64;
_20.fld1.fld0.1.3 = _5;
_20.fld1.fld1 = core::ptr::addr_of_mut!(_20.fld1.fld2);
_33 = [140_u8,33_u8,205_u8,1_u8,8_u8,25_u8,131_u8];
_22.fld2 = _26;
Goto(bb11)
}
bb11 = {
_22.fld2 = _26;
_34 = _27 as usize;
_20.fld1.fld1 = core::ptr::addr_of_mut!(_20.fld1.fld2);
_35.fld3 = -_25;
_37 = _12;
_18 = _17 as f64;
_39.fld1.fld0 = _25 > _35.fld3;
_29 = _22.fld1 - _22.fld1;
_21 = _30;
_39.fld1.fld2 = core::ptr::addr_of!(_20.fld1.fld0);
_22.fld2 = [(-2059735491_i32),706684410_i32,66092192_i32,1347860683_i32,760653738_i32,1561021418_i32];
_3 = !_35.fld4;
_39.fld3 = _1 as i32;
_20.fld1.fld0.0 = core::ptr::addr_of_mut!(_36);
_18 = -_25;
_39.fld4 = [_39.fld3,_39.fld3,_39.fld3,_39.fld3,_39.fld3,_39.fld3,_39.fld3];
_43 = _39.fld3 - _39.fld3;
(*_23) = core::ptr::addr_of!(_1);
_30 = (_21.0,);
match _20.fld1.fld0.1.1 {
0 => bb9,
1 => bb10,
2 => bb5,
3 => bb4,
4 => bb12,
891712969340187628 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
_25 = _13;
_22.fld2 = [(-2136835901_i32),664738154_i32,(-57710429_i32),1125948940_i32,(-1415196823_i32),(-1978434689_i32)];
_20.fld0 = (-4305365482589749567_i64);
(*_23) = core::ptr::addr_of!((*_19));
_9 = _4;
_16 = _7;
_16 = _7 & _7;
_1 = (*_19) * (*_19);
_2 = 3689961909_u32 as i16;
_26 = [(-1015340209_i32),(-2065796875_i32),465523177_i32,(-990954942_i32),(-1315503550_i32),(-1520084781_i32)];
_1 = -(*_19);
_24 = _17;
_10 = _12;
_8 = _3;
_15 = _5;
_22.fld0 = [198_u8];
_22.fld1 = _1;
_20.fld1.fld0.0 = core::ptr::addr_of_mut!(_20.fld1.fld0.2);
_22.fld1 = _20.fld1.fld0.1.3 as f32;
Goto(bb10)
}
bb14 = {
_4 = _2;
_18 = _27 as f64;
_23 = core::ptr::addr_of_mut!((*_23));
_12 = _37;
_21.0 = [_35.fld2];
_49 = [_39.fld3,_43,_43,_43,_43,_43];
_39.fld2 = [_35.fld2];
_20.fld1.fld1 = core::ptr::addr_of_mut!(_20.fld1.fld2);
_20.fld1.fld0.1 = (_39.fld4, _20.fld1.fld0.3, _2, _15);
_22.fld2 = [_43,_39.fld3,_43,_43,_39.fld3,_39.fld3];
_29 = (*_19);
RET = _20.fld1.fld0.3;
Goto(bb15)
}
bb15 = {
Call(_50 = dump_var(2_usize, 17_usize, Move(_17), 4_usize, Move(_4), 24_usize, Move(_24), 43_usize, Move(_43)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_50 = dump_var(2_usize, 9_usize, Move(_9), 49_usize, Move(_49), 11_usize, Move(_11), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_50 = dump_var(2_usize, 31_usize, Move(_31), 34_usize, Move(_34), 27_usize, Move(_27), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_50 = dump_var(2_usize, 26_usize, Move(_26), 51_usize, _51, 51_usize, _51, 51_usize, _51), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: bool,mut _2: i8,mut _3: i8,mut _4: char,mut _5: i16,mut _6: char,mut _7: i16,mut _8: char,mut _9: char,mut _10: bool,mut _11: i16,mut _12: i8,mut _13: i8,mut _14: char) -> Adt54 {
mir! {
type RET = Adt54;
let _15: [u64; 5];
let _16: [u8; 7];
let _17: f32;
let _18: *mut i128;
let _19: (([u32; 1],), u32, u16, u64);
let _20: [i32; 6];
let _21: ([u16; 1], bool, isize);
let _22: isize;
let _23: (u32,);
let _24: f64;
let _25: ([u32; 1],);
let _26: [u8; 7];
let _27: bool;
let _28: [u16; 1];
let _29: bool;
let _30: (i128, i32);
let _31: Adt56;
let _32: (u32,);
let _33: isize;
let _34: (u32,);
let _35: u32;
let _36: [u32; 1];
let _37: u8;
let _38: *mut u8;
let _39: (u32,);
let _40: [i32; 7];
let _41: f64;
let _42: [u8; 1];
let _43: *const (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _44: *mut *const [u32; 1];
let _45: [u8; 1];
let _46: u32;
let _47: f32;
let _48: f32;
let _49: Adt49;
let _50: u64;
let _51: ([u32; 1],);
let _52: [u8; 1];
let _53: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _54: (f32, u16, char, i16);
let _55: isize;
let _56: char;
let _57: f64;
let _58: f32;
let _59: char;
let _60: [char; 4];
let _61: *const [i32; 6];
let _62: char;
let _63: f32;
let _64: ();
let _65: ();
{
RET.fld0.1.2 = _7 | _11;
_6 = _4;
_6 = _14;
RET.fld0.1.3 = _12 << _7;
_14 = _4;
RET.fld0.1.0 = [(-1508431507_i32),(-1729260452_i32),117347039_i32,333892996_i32,(-611332392_i32),(-1973595407_i32),(-1070563352_i32)];
RET.fld0.1.1 = 13191478857841300695_u64 ^ 14054047678805672258_u64;
_15 = [13891076271306408468_u64,5105580739138005079_u64,860358316019009376_u64,6212950475195804625_u64,9389277263347504625_u64];
RET.fld0.3 = !14229312674632493421_u64;
_4 = _9;
_6 = _14;
Goto(bb1)
}
bb1 = {
_15 = [8442298263904299171_u64,9489833869935263134_u64,1363604301754769474_u64,10181458687131461300_u64,17497433031554091463_u64];
_9 = _6;
_4 = _9;
_5 = _7 & _11;
_19.0.0 = [3413037476_u32];
_17 = 3282319933961853867_usize as f32;
_19.1 = !1034084704_u32;
RET.fld0.3 = 605071464264663982_u64 << _7;
RET.fld0.3 = 627727438970939146_u64 + 15822098426541757501_u64;
_2 = _3;
_19.0.0 = [_19.1];
_19.3 = 15463938174356219176_u64;
_19.2 = _19.1 as u16;
RET.fld0.3 = 96923263835463849475289004675343895864_u128 as u64;
_9 = _6;
_8 = _4;
RET.fld0.1.2 = -_7;
_19.0.0 = [_19.1];
RET.fld0.1.0 = [(-465182167_i32),1397860740_i32,(-1788708239_i32),(-280621910_i32),1229587538_i32,1100418980_i32,(-868016379_i32)];
_10 = _13 > _2;
RET.fld0.3 = _19.3;
RET.fld2 = core::ptr::addr_of!(_19.0.0);
_21.2 = (-9223372036854775808_isize) >> _13;
RET.fld0.2 = -88298575164749371386488085585419526822_i128;
Goto(bb2)
}
bb2 = {
RET.fld2 = core::ptr::addr_of!(_19.0.0);
_12 = _2;
_21.1 = _10;
RET.fld0.1.1 = _14 as u64;
_9 = _6;
RET.fld0.1.0 = [357791475_i32,2088116254_i32,468665263_i32,991773959_i32,(-1099633042_i32),1218847061_i32,1519995435_i32];
_20 = [1427660078_i32,(-534892721_i32),(-592847122_i32),(-571100167_i32),(-1821959544_i32),(-1359363148_i32)];
_1 = _10;
RET.fld0.2 = (-110225558675907689_i64) as i128;
_21.0 = [_19.2];
RET.fld0.1.0 = [512790591_i32,(-1438098828_i32),(-2013882544_i32),(-816941826_i32),(-1093278133_i32),368237012_i32,1628407848_i32];
_12 = _13;
_22 = _19.2 as isize;
RET.fld0.3 = (-17848183529949348189783294713796100319_i128) as u64;
_7 = _19.1 as i16;
_17 = _21.2 as f32;
RET.fld0.1.0 = [211231198_i32,976318846_i32,2042366136_i32,163694166_i32,(-1294518373_i32),(-494718901_i32),369869959_i32];
_21.2 = _22;
match _19.3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
15463938174356219176 => bb10,
_ => bb9
}
}
bb3 = {
_15 = [8442298263904299171_u64,9489833869935263134_u64,1363604301754769474_u64,10181458687131461300_u64,17497433031554091463_u64];
_9 = _6;
_4 = _9;
_5 = _7 & _11;
_19.0.0 = [3413037476_u32];
_17 = 3282319933961853867_usize as f32;
_19.1 = !1034084704_u32;
RET.fld0.3 = 605071464264663982_u64 << _7;
RET.fld0.3 = 627727438970939146_u64 + 15822098426541757501_u64;
_2 = _3;
_19.0.0 = [_19.1];
_19.3 = 15463938174356219176_u64;
_19.2 = _19.1 as u16;
RET.fld0.3 = 96923263835463849475289004675343895864_u128 as u64;
_9 = _6;
_8 = _4;
RET.fld0.1.2 = -_7;
_19.0.0 = [_19.1];
RET.fld0.1.0 = [(-465182167_i32),1397860740_i32,(-1788708239_i32),(-280621910_i32),1229587538_i32,1100418980_i32,(-868016379_i32)];
_10 = _13 > _2;
RET.fld0.3 = _19.3;
RET.fld2 = core::ptr::addr_of!(_19.0.0);
_21.2 = (-9223372036854775808_isize) >> _13;
RET.fld0.2 = -88298575164749371386488085585419526822_i128;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_17 = _19.1 as f32;
_23.0 = _19.1 >> _12;
_23 = (_19.1,);
_8 = _9;
RET.fld0.2 = (-128661371682008082024982795939569285838_i128);
_19.2 = 61198_u16;
_2 = _13;
_5 = _14 as i16;
RET.fld0.1.3 = 1_usize as i8;
_8 = _6;
RET.fld0.2 = 119790511804926416408361315178685102516_i128 | 56253803558613117090010238873854299068_i128;
_6 = _4;
RET.fld0.1.1 = _19.3 / 14459772781913196263_u64;
_9 = _6;
RET.fld0.1.3 = _2 - _2;
_15 = [_19.3,_19.3,_19.3,_19.3,_19.3];
_6 = _8;
RET.fld0.3 = _19.3 % 601463185999862166_u64;
RET.fld0.3 = !_19.3;
_16 = [222_u8,225_u8,81_u8,170_u8,26_u8,67_u8,115_u8];
_19.3 = 11345229590665084683_u64;
RET.fld2 = core::ptr::addr_of!(_19.0.0);
_17 = _21.2 as f32;
_2 = _19.3 as i8;
_25.0 = _19.0.0;
_25.0 = _19.0.0;
_19.0 = _25;
_17 = 131451984799493268112601388732574871976_i128 as f32;
_8 = _6;
Call(RET.fld1 = fn4(_6, _2, _20, _21, _19.3, _21.2, _1, _22, _21.2, _8), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
RET.fld0.3 = (-104001031878140469436365386286611622459_i128) as u64;
_4 = _9;
_19.0 = (_25.0,);
_8 = _9;
_1 = _21.1 ^ _10;
_25.0 = [_19.1];
_21.2 = (-6860094356101011564_i64) as isize;
RET.fld0.1.2 = -_11;
RET.fld0.2 = (-79696148533911461939324137258400444796_i128) * 144640444616854908712657734924916534491_i128;
_11 = !_5;
RET.fld0.3 = !_19.3;
_26 = [209_u8,62_u8,242_u8,86_u8,95_u8,43_u8,164_u8];
_15 = [_19.3,_19.3,_19.3,_19.3,_19.3];
_25.0 = [_19.1];
RET.fld0.1.2 = _7;
_19 = (_25, _23.0, 44943_u16, 8080875777989482494_u64);
_4 = _8;
_19 = (_25, _23.0, 10599_u16, 3712903737482008509_u64);
_24 = _19.2 as f64;
_10 = !_21.1;
Goto(bb12)
}
bb12 = {
_15 = [_19.3,_19.3,_19.3,_19.3,_19.3];
RET.fld2 = core::ptr::addr_of!(_25.0);
_5 = _7;
_23.0 = _19.1 % 1485271547_u32;
_19 = (_25, _23.0, 13649_u16, 17160759531770701682_u64);
_23 = (_19.1,);
_1 = _21.1;
_19.3 = 13966527483863782877_u64;
RET.fld0.3 = (-149944336361574835023450885278860644164_i128) as u64;
_6 = _9;
_1 = _21.2 >= _21.2;
_8 = _4;
_26 = _16;
_19.0 = (_25.0,);
_14 = _4;
RET.fld0.1.1 = _19.3;
Goto(bb13)
}
bb13 = {
_23 = (_19.1,);
RET.fld0.1.3 = _3;
_27 = !_10;
_19 = (_25, _23.0, 15544_u16, 11048847648383237849_u64);
_17 = _2 as f32;
_21.2 = _22;
RET.fld0.1.3 = !_3;
RET.fld0.1.0 = [(-516133047_i32),(-621428273_i32),(-1545471308_i32),607658242_i32,(-2070099630_i32),1869093252_i32,(-2094821525_i32)];
RET.fld0.1.0 = [2056207403_i32,(-1073523678_i32),(-1121801428_i32),(-41747236_i32),468276941_i32,1668014590_i32,790366717_i32];
RET.fld0.1.3 = _23.0 as i8;
_19.2 = 47441_u16 >> _3;
_25.0 = [_23.0];
RET.fld0.3 = !_19.3;
_20 = [(-1863552006_i32),(-291249421_i32),(-318724117_i32),(-993011435_i32),(-1800981651_i32),(-746367992_i32)];
_9 = _6;
_10 = _27;
_19.2 = 31746_u16;
_25.0 = [_19.1];
_11 = _5 | _7;
Goto(bb14)
}
bb14 = {
_23 = (_19.1,);
RET.fld0.1.3 = -_13;
_28 = [_19.2];
_19.1 = !_23.0;
_3 = _14 as i8;
RET.fld0.1.0 = [1148634644_i32,1703128779_i32,503775677_i32,1616288628_i32,(-1950585365_i32),(-2014581265_i32),1688340500_i32];
_13 = -_12;
_19.2 = 46127_u16;
_26 = [139_u8,213_u8,213_u8,15_u8,64_u8,188_u8,116_u8];
_22 = -_21.2;
_4 = _14;
_1 = _27;
_11 = _5 | _7;
_19.0 = (_25.0,);
_31.fld0.fld6.1 = (-3532176442524583534_i64) * (-8016269527352079708_i64);
_31.fld0.fld6.2.0 = _17 * _17;
_6 = _9;
_31.fld2 = 8753695086066922928_usize;
_30.1 = -701179797_i32;
Goto(bb15)
}
bb15 = {
_30.1 = !(-895289981_i32);
_33 = _22;
_19.1 = _23.0;
_7 = -_5;
_21.2 = !_22;
_30.0 = (-27423544183405498361869283382893650719_i128) ^ 25150762323837118271868602239100835812_i128;
_10 = !_1;
_31.fld0.fld6.2.2 = _14;
_31.fld0.fld6.0 = _10;
_31.fld5 = !_30.1;
_19 = (_25, _23.0, 50739_u16, 7061969707972715822_u64);
_31.fld0.fld6.3 = _19.0.0;
match _31.fld2 {
0 => bb10,
1 => bb2,
2 => bb3,
3 => bb13,
4 => bb5,
5 => bb6,
6 => bb7,
8753695086066922928 => bb17,
_ => bb16
}
}
bb16 = {
_17 = _19.1 as f32;
_23.0 = _19.1 >> _12;
_23 = (_19.1,);
_8 = _9;
RET.fld0.2 = (-128661371682008082024982795939569285838_i128);
_19.2 = 61198_u16;
_2 = _13;
_5 = _14 as i16;
RET.fld0.1.3 = 1_usize as i8;
_8 = _6;
RET.fld0.2 = 119790511804926416408361315178685102516_i128 | 56253803558613117090010238873854299068_i128;
_6 = _4;
RET.fld0.1.1 = _19.3 / 14459772781913196263_u64;
_9 = _6;
RET.fld0.1.3 = _2 - _2;
_15 = [_19.3,_19.3,_19.3,_19.3,_19.3];
_6 = _8;
RET.fld0.3 = _19.3 % 601463185999862166_u64;
RET.fld0.3 = !_19.3;
_16 = [222_u8,225_u8,81_u8,170_u8,26_u8,67_u8,115_u8];
_19.3 = 11345229590665084683_u64;
RET.fld2 = core::ptr::addr_of!(_19.0.0);
_17 = _21.2 as f32;
_2 = _19.3 as i8;
_25.0 = _19.0.0;
_25.0 = _19.0.0;
_19.0 = _25;
_17 = 131451984799493268112601388732574871976_i128 as f32;
_8 = _6;
Call(RET.fld1 = fn4(_6, _2, _20, _21, _19.3, _21.2, _1, _22, _21.2, _8), ReturnTo(bb11), UnwindUnreachable())
}
bb17 = {
RET.fld0.3 = 166269439861203951869289046432180248289_u128 as u64;
_37 = 220_u8;
_31.fld1.0 = _19.1;
RET.fld0.2 = _30.0;
_21 = (_28, _10, _22);
_29 = _21.1 != _31.fld0.fld6.0;
_31.fld0.fld0 = -_31.fld0.fld6.2.0;
_16 = [_37,_37,_37,_37,_37,_37,_37];
_31.fld0.fld4 = [_19.3,_19.3,_19.3,_19.3,_19.3];
_4 = _6;
_31.fld0.fld0 = _21.2 as f32;
RET.fld0.1.0 = [_31.fld5,_31.fld5,_31.fld5,_30.1,_31.fld5,_30.1,_31.fld5];
RET.fld0.1.3 = _12 - _13;
_35 = !_23.0;
_27 = _21.1;
_22 = _24 as isize;
RET.fld0.1.1 = !_19.3;
_31.fld4 = core::ptr::addr_of!(_20);
_8 = _6;
RET.fld0.1.3 = !_12;
_33 = _22;
Goto(bb18)
}
bb18 = {
_19 = (_25, _23.0, 1368_u16, 891712969340187628_u64);
_31.fld0.fld4 = [_19.3,_19.3,_19.3,_19.3,_19.3];
_31.fld0.fld1 = core::ptr::addr_of_mut!(_19);
_31.fld3.2 = -_22;
_24 = _37 as f64;
_29 = !_31.fld0.fld6.0;
_31.fld0.fld6.2.2 = _14;
_33 = _31.fld3.2 << _31.fld1.0;
_31.fld0.fld4 = [_19.3,_19.3,_19.3,_19.3,_19.3];
_31.fld0.fld6.2.3 = _5 & _11;
Goto(bb19)
}
bb19 = {
_18 = core::ptr::addr_of_mut!(_30.0);
_31.fld0.fld6.2 = (_31.fld0.fld0, _19.2, _14, _11);
RET.fld0.1.3 = _3 | _13;
RET.fld0.1.0 = [_30.1,_31.fld5,_30.1,_30.1,_30.1,_30.1,_30.1];
_45 = [_37];
RET.fld0.1.0 = [_30.1,_30.1,_30.1,_31.fld5,_30.1,_31.fld5,_31.fld5];
_38 = core::ptr::addr_of_mut!(_37);
(*_18) = !(-120765927960792862065072282125496733240_i128);
_23.0 = _17 as u32;
_12 = !_3;
_7 = _11 | _31.fld0.fld6.2.3;
_49.fld1 = _38;
_42 = [(*_38)];
_31.fld0.fld6.3 = [_19.1];
_31.fld0.fld1 = core::ptr::addr_of_mut!(_19);
_44 = core::ptr::addr_of_mut!(_49.fld4);
_36 = [_23.0];
RET.fld0.1.1 = _19.3;
_17 = -_31.fld0.fld0;
_44 = core::ptr::addr_of_mut!((*_44));
_49.fld2 = core::ptr::addr_of_mut!(_21.0);
_31.fld3.2 = _33;
Goto(bb20)
}
bb20 = {
_31.fld0.fld6.0 = _21.1 & _21.1;
_54.1 = _19.2 + _31.fld0.fld6.2.1;
_54 = (_31.fld0.fld6.2.0, _19.2, _31.fld0.fld6.2.2, _11);
_31.fld0.fld6.0 = !_1;
_51 = _25;
_23 = (_31.fld1.0,);
_51 = _25;
_19.2 = !_31.fld0.fld6.2.1;
(*_44) = core::ptr::addr_of!(_36);
_13 = _3 & _12;
_49.fld5.3 = !_2;
_53.1 = !_31.fld0.fld6.1;
RET.fld0.3 = !_19.3;
_49.fld7 = !(*_18);
_52 = [(*_38)];
_31.fld0.fld6.0 = _27;
_31.fld0.fld2 = _22;
Call(_30.0 = core::intrinsics::bswap(_49.fld7), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Goto(bb22)
}
bb22 = {
_31.fld0.fld6 = (_10, _53.1, _54, _19.0.0);
_19.2 = _54.1;
_4 = _14;
_58 = -_54.0;
_39.0 = _23.0 | _35;
_23 = _31.fld1;
_34.0 = _39.0 * _39.0;
_49.fld2 = core::ptr::addr_of_mut!(_21.0);
_49.fld5.1 = !_19.3;
_31.fld3.1 = _31.fld0.fld6.0;
_30 = (_49.fld7, _31.fld5);
_57 = _24;
RET.fld0.0 = _18;
_32.0 = !_39.0;
_53.3 = _31.fld0.fld6.3;
_23 = (_39.0,);
_11 = _7 * _54.3;
_60 = [_14,_31.fld0.fld6.2.2,_8,_6];
(*_18) = _31.fld0.fld6.1 as i128;
Goto(bb23)
}
bb23 = {
Call(_64 = dump_var(3_usize, 10_usize, Move(_10), 16_usize, Move(_16), 23_usize, Move(_23), 39_usize, Move(_39)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_64 = dump_var(3_usize, 4_usize, Move(_4), 11_usize, Move(_11), 30_usize, Move(_30), 13_usize, Move(_13)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_64 = dump_var(3_usize, 28_usize, Move(_28), 21_usize, Move(_21), 15_usize, Move(_15), 45_usize, Move(_45)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_64 = dump_var(3_usize, 25_usize, Move(_25), 37_usize, Move(_37), 12_usize, Move(_12), 22_usize, Move(_22)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_64 = dump_var(3_usize, 19_usize, Move(_19), 29_usize, Move(_29), 26_usize, Move(_26), 65_usize, _65), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: char,mut _2: i8,mut _3: [i32; 6],mut _4: ([u16; 1], bool, isize),mut _5: u64,mut _6: isize,mut _7: bool,mut _8: isize,mut _9: isize,mut _10: char) -> *mut *const [u32; 1] {
mir! {
type RET = *mut *const [u32; 1];
let _11: isize;
let _12: usize;
let _13: (([u32; 1],), u32, u16, u64);
let _14: i32;
let _15: isize;
let _16: usize;
let _17: isize;
let _18: f64;
let _19: [u64; 5];
let _20: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _21: Adt52;
let _22: isize;
let _23: char;
let _24: Adt64;
let _25: i8;
let _26: Adt51;
let _27: Adt64;
let _28: bool;
let _29: ([i32; 7], u64, i16, i8);
let _30: [u8; 7];
let _31: isize;
let _32: isize;
let _33: bool;
let _34: *mut bool;
let _35: isize;
let _36: Adt52;
let _37: [i32; 7];
let _38: *mut bool;
let _39: Adt56;
let _40: [i128; 4];
let _41: u64;
let _42: ();
let _43: ();
{
_5 = 3399148364159638241_u64;
_3 = [(-1354847782_i32),1588207793_i32,(-1167189107_i32),(-892047313_i32),873002176_i32,1455584705_i32];
_2 = -50_i8;
_3 = [157272668_i32,(-820804106_i32),1245227612_i32,(-307081829_i32),(-681927510_i32),590455759_i32];
_4.1 = _7 == _7;
_4.1 = _10 < _10;
_5 = !3273162701325602724_u64;
_10 = _1;
_2 = !0_i8;
Goto(bb1)
}
bb1 = {
_13.3 = !_5;
_4.1 = _7;
_5 = !_13.3;
_4.2 = (-5324921176243232421_i64) as isize;
_13.2 = !11346_u16;
_11 = _8 << _13.3;
_13.3 = _5 - _5;
_7 = _6 != _11;
_3 = [(-776184282_i32),(-274441902_i32),654900151_i32,(-590943837_i32),(-2077287918_i32),(-718542050_i32)];
_12 = 1767572098727745568_usize * 17632311271830221395_usize;
_5 = _13.3;
_17 = !_11;
_2 = (-125_i8);
_15 = _17 + _11;
_13.2 = !58224_u16;
_11 = _4.2;
_14 = (-911923346_i32) | (-301938812_i32);
_10 = _1;
_18 = 47072488980321760815822211555676375280_i128 as f64;
_6 = !_15;
_1 = _10;
_13.3 = _5;
_15 = _6;
_8 = _15 | _6;
_10 = _1;
match _2 {
0 => bb2,
340282366920938463463374607431768211331 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_19 = [_5,_13.3,_5,_5,_5];
_8 = _11;
_11 = -_15;
_10 = _1;
_1 = _10;
_4.2 = !_6;
Goto(bb5)
}
bb5 = {
_19 = [_13.3,_5,_5,_5,_5];
_20.2.2 = _10;
_9 = !_15;
_13.1 = 2356501561_u32 - 2032020051_u32;
_19 = [_5,_13.3,_13.3,_5,_13.3];
_20.1 = (-6752922798076383433_i64) & (-5373209720543876094_i64);
_8 = _15;
_10 = _20.2.2;
_11 = _18 as isize;
_10 = _20.2.2;
_13.0.0 = [_13.1];
_16 = !_12;
_12 = _20.1 as usize;
_12 = _2 as usize;
_20.2.1 = _13.2 >> _20.1;
_20.2.0 = _13.1 as f32;
_21.fld2 = core::ptr::addr_of_mut!(_4.0);
_2 = 43_i8 | (-32_i8);
_9 = !_8;
_5 = _13.3 * _13.3;
_13.0.0 = [_13.1];
_21.fld1.0 = 6397351490773627624502624801882135659_i128;
_12 = _16 ^ _16;
_3 = [_14,_14,_14,_14,_14,_14];
Call(_23 = fn5(_4.2, _4.1, _13.0, _8), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17 = _15 & _6;
_24.fld1.fld1 = _21.fld2;
match _21.fld1.0 {
0 => bb4,
1 => bb2,
6397351490773627624502624801882135659 => bb7,
_ => bb3
}
}
bb7 = {
_18 = _16 as f64;
_13.1 = 209515596_u32 / 2305613647_u32;
_20.0 = _6 != _4.2;
_18 = _5 as f64;
_19 = [_5,_5,_13.3,_5,_13.3];
Goto(bb8)
}
bb8 = {
_10 = _20.2.2;
_2 = (-88_i8);
_24.fld3 = _14;
Call(RET = fn11(_13.0, _11, _14, _11, _13.3, _11, _15, _8, _4.0, _12, _20.1, _13.3, _6, _4.1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_18 = 48_u8 as f64;
_20.1 = !394352661567535402_i64;
_26.fld4 = !(-7866_i16);
_22 = _9;
match _21.fld1.0 {
0 => bb1,
1 => bb8,
2 => bb6,
6397351490773627624502624801882135659 => bb10,
_ => bb5
}
}
bb10 = {
_27.fld0 = !_12;
_27.fld1.fld0 = _20.0;
_21.fld1 = ((-49036248810868246703296455279763840056_i128), _24.fld3);
_23 = _1;
_24.fld4 = [_24.fld3,_14,_21.fld1.1,_21.fld1.1,_24.fld3,_21.fld1.1,_21.fld1.1];
_27.fld4 = _24.fld4;
_20.1 = (-9191837033979732877_i64) >> _9;
_18 = _20.2.0 as f64;
_27.fld4 = [_21.fld1.1,_14,_21.fld1.1,_24.fld3,_14,_14,_24.fld3];
_24.fld1.fld0 = _20.0;
_26.fld4 = _2 as i16;
_22 = _24.fld1.fld0 as isize;
_21.fld2 = core::ptr::addr_of_mut!(_21.fld4);
_21.fld1 = (78686505013983173708461459544661329160_i128, _14);
_21.fld1.0 = !24927358679755328042072009083417706868_i128;
_24.fld4 = [_24.fld3,_24.fld3,_21.fld1.1,_14,_14,_14,_14];
_24.fld4 = _27.fld4;
_24.fld0 = !_27.fld0;
_20.3 = [_13.1];
_20.2.3 = _26.fld4 - _26.fld4;
_26.fld3 = _5 as f64;
_1 = _23;
_8 = _17 * _22;
_26.fld2 = _20.2.1 as u32;
_4.1 = _20.2.0 == _20.2.0;
_23 = _10;
match _2 {
340282366920938463463374607431768211368 => bb11,
_ => bb1
}
}
bb11 = {
_14 = _18 as i32;
_27.fld2 = [_13.1];
_13.3 = _5 + _5;
_21.fld4 = [_20.2.1];
_4.1 = _23 == _23;
_21.fld1.1 = _14 & _14;
_13.2 = !_20.2.1;
Call(_24.fld4 = core::intrinsics::transmute(_27.fld4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_21.fld3 = !_2;
_27.fld2 = [_26.fld2];
_20.2.1 = _13.2;
_20.2.0 = _12 as f32;
_27.fld2 = [_26.fld2];
_13.2 = _20.2.1;
_29.3 = _21.fld1.1 as i8;
_21.fld1.1 = -_24.fld3;
_10 = _1;
_29 = (_27.fld4, _5, _26.fld4, _2);
_29 = (_27.fld4, _5, _20.2.3, _21.fld3);
_32 = _8;
_25 = _21.fld3;
_24.fld2 = [_13.1];
Goto(bb13)
}
bb13 = {
_20.3 = [_26.fld2];
_32 = _8 ^ _6;
_10 = _23;
_26.fld0 = _29.0;
_20.3 = [_26.fld2];
_33 = _27.fld0 != _27.fld0;
_18 = _20.2.0 as f64;
_27.fld1.fld1 = core::ptr::addr_of_mut!(_21.fld4);
_14 = _21.fld1.1 * _24.fld3;
_27.fld0 = !_12;
_12 = !_24.fld0;
_24.fld4 = [_14,_14,_21.fld1.1,_24.fld3,_21.fld1.1,_14,_14];
_36.fld2 = _21.fld2;
_21.fld1.1 = _24.fld3;
match _2 {
0 => bb9,
1 => bb2,
2 => bb12,
3 => bb4,
4 => bb14,
340282366920938463463374607431768211368 => bb16,
_ => bb15
}
}
bb14 = {
_21.fld3 = !_2;
_27.fld2 = [_26.fld2];
_20.2.1 = _13.2;
_20.2.0 = _12 as f32;
_27.fld2 = [_26.fld2];
_13.2 = _20.2.1;
_29.3 = _21.fld1.1 as i8;
_21.fld1.1 = -_24.fld3;
_10 = _1;
_29 = (_27.fld4, _5, _26.fld4, _2);
_29 = (_27.fld4, _5, _20.2.3, _21.fld3);
_32 = _8;
_25 = _21.fld3;
_24.fld2 = [_13.1];
Goto(bb13)
}
bb15 = {
_10 = _20.2.2;
_2 = (-88_i8);
_24.fld3 = _14;
Call(RET = fn11(_13.0, _11, _14, _11, _13.3, _11, _15, _8, _4.0, _12, _20.1, _13.3, _6, _4.1), ReturnTo(bb9), UnwindUnreachable())
}
bb16 = {
_34 = core::ptr::addr_of_mut!(_24.fld1.fld0);
_29.1 = _29.2 as u64;
_30 = [39_u8,50_u8,24_u8,1_u8,39_u8,113_u8,9_u8];
_27.fld3 = _24.fld3;
_20.2.3 = !_29.2;
_24.fld0 = _27.fld0;
_37 = [_14,_21.fld1.1,_14,_14,_24.fld3,_27.fld3,_14];
_31 = _22 + _8;
_27.fld4 = [_14,_14,_14,_27.fld3,_21.fld1.1,_24.fld3,_14];
_39.fld0.fld6.0 = _9 <= _32;
_14 = _25 as i32;
_29.3 = -_25;
_24.fld3 = -_14;
_24.fld0 = _16;
_36.fld1.0 = _39.fld0.fld6.0 as i128;
Goto(bb17)
}
bb17 = {
Call(_42 = dump_var(4_usize, 1_usize, Move(_1), 5_usize, Move(_5), 29_usize, Move(_29), 31_usize, Move(_31)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(4_usize, 23_usize, Move(_23), 3_usize, Move(_3), 16_usize, Move(_16), 22_usize, Move(_22)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_42 = dump_var(4_usize, 2_usize, Move(_2), 14_usize, Move(_14), 37_usize, Move(_37), 19_usize, Move(_19)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(4_usize, 6_usize, Move(_6), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: bool,mut _3: ([u32; 1],),mut _4: isize) -> char {
mir! {
type RET = char;
let _5: Adt61;
let _6: u64;
let _7: (f32, u16, char, i16);
let _8: *mut (([u32; 1],), u32, u16, u64);
let _9: isize;
let _10: [i32; 7];
let _11: isize;
let _12: i128;
let _13: *mut u8;
let _14: *const f32;
let _15: *mut u8;
let _16: Adt65;
let _17: u128;
let _18: bool;
let _19: char;
let _20: [i32; 7];
let _21: [char; 4];
let _22: Adt49;
let _23: u128;
let _24: f64;
let _25: Adt65;
let _26: f32;
let _27: isize;
let _28: [u32; 1];
let _29: isize;
let _30: Adt52;
let _31: *const [i32; 6];
let _32: *const [i32; 6];
let _33: Adt59;
let _34: i16;
let _35: [i32; 7];
let _36: *mut i128;
let _37: Adt52;
let _38: [u8; 1];
let _39: *const bool;
let _40: bool;
let _41: ([u16; 1], bool, isize);
let _42: ();
let _43: ();
{
_5.fld0 = [(-1997378123_i32),868614503_i32,(-436626085_i32),356170307_i32,(-1197957129_i32),(-516410260_i32),(-658349814_i32)];
_3.0 = [1488052153_u32];
RET = '\u{e5ee3}';
RET = '\u{455db}';
_3.0 = [157330197_u32];
_1 = !_4;
RET = '\u{79dec}';
_3.0 = [4291059107_u32];
_4 = _1;
_4 = -_1;
_7.0 = 0_usize as f32;
_7.3 = 12533_i16;
RET = '\u{caf03}';
_7.3 = _2 as i16;
_4 = _1;
_1 = -_4;
_5.fld0 = [2038468418_i32,871874189_i32,1665081468_i32,1930498870_i32,(-350076507_i32),1659610281_i32,(-1852214272_i32)];
Goto(bb1)
}
bb1 = {
_9 = _1;
_6 = 6622608374713285571_u64 * 16236143869194601522_u64;
_5.fld0 = [(-6760626_i32),1455358778_i32,(-1534670255_i32),2077309950_i32,(-494339432_i32),(-552900117_i32),1311849717_i32];
_7.0 = 477088515_i32 as f32;
_7.1 = !52700_u16;
_9 = _4 >> _7.3;
_4 = _9;
RET = '\u{8e785}';
_11 = _4 * _1;
RET = '\u{560f3}';
_10 = [(-837117909_i32),334461472_i32,(-2087155465_i32),1160315190_i32,(-1157042093_i32),1368249383_i32,1019647132_i32];
_12 = '\u{c9247}' as i128;
_11 = _9;
_6 = (-1650094585_i32) as u64;
_9 = 4583859405228241713_i64 as isize;
_7.2 = '\u{25394}';
_9 = _12 as isize;
_4 = _1 * _11;
_5 = Adt61 { fld0: _10 };
_10 = [(-544088566_i32),(-1786359950_i32),(-434029041_i32),67689021_i32,(-1790713296_i32),641362617_i32,341435000_i32];
_12 = 136770495040333090743076206692526145758_i128;
_7.0 = _12 as f32;
Goto(bb2)
}
bb2 = {
_10 = [59687569_i32,(-196330513_i32),1469479797_i32,296636221_i32,(-1839962984_i32),(-1796492129_i32),828471791_i32];
_7.0 = 131_u8 as f32;
_6 = 14626202120856086651_u64 + 7608817583604963378_u64;
_11 = _4 + _4;
_3.0 = [2892183901_u32];
_5.fld0 = [1422817477_i32,(-1510813681_i32),(-1485467919_i32),799731705_i32,(-1927622487_i32),218388770_i32,1782567806_i32];
_1 = _11;
_10 = [(-2062759931_i32),(-1835566086_i32),885442456_i32,1251115104_i32,350596541_i32,(-606870006_i32),(-632693820_i32)];
_4 = _11;
_7.3 = !(-23196_i16);
_14 = core::ptr::addr_of!(_7.0);
_7.1 = !45258_u16;
RET = _7.2;
_2 = !false;
_11 = _1;
_2 = true;
_7.2 = '\u{665f7}';
_4 = _11 - _1;
(*_14) = 7497755759475668573_usize as f32;
_16 = Adt65 { fld0: _5 };
RET = _7.2;
_16.fld0.fld0 = [(-1214610106_i32),(-1815358345_i32),(-1737922553_i32),(-1953404467_i32),1842298086_i32,(-506182745_i32),1328860520_i32];
_7.0 = _7.1 as f32;
Call(_1 = fn6(_7.3, _5, _11, _16.fld0, _5.fld0, _4, _12, _3.0, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18 = _2;
_7.2 = '\u{7d759}';
_17 = _7.1 as u128;
_2 = _18;
_2 = !_18;
_7.0 = _6 as f32;
_6 = 17117313862390243138_u64;
_2 = !_18;
_1 = _4;
_4 = _1 | _1;
_11 = _1;
(*_14) = _11 as f32;
_7.3 = 3218_i16;
_11 = _1 * _4;
(*_14) = _7.1 as f32;
_16.fld0 = Adt61 { fld0: _5.fld0 };
(*_14) = _7.1 as f32;
_6 = !6282209479389418411_u64;
_21 = [_7.2,_7.2,_7.2,_7.2];
_22.fld5.0 = [36867958_i32,(-1998711455_i32),(-1166415828_i32),1082761063_i32,(-498267847_i32),1110083665_i32,216106616_i32];
_22.fld5.3 = -123_i8;
_22.fld5.1 = 5625320716341649819_usize as u64;
Goto(bb4)
}
bb4 = {
_19 = _7.2;
_22.fld5 = (_10, _6, _7.3, 47_i8);
_22.fld6 = (-2217203301205391086_i64) * (-7270759803744334690_i64);
_24 = _7.3 as f64;
RET = _19;
_16.fld0.fld0 = [(-1292006526_i32),375901815_i32,1227971932_i32,105018935_i32,(-1522219276_i32),1126584542_i32,(-738536152_i32)];
_22.fld5.1 = _6 % 12821347221856786537_u64;
_26 = 236_u8 as f32;
_7.1 = 61328_u16;
Goto(bb5)
}
bb5 = {
(*_14) = _26;
_7.0 = _26 * _26;
_7.0 = _7.1 as f32;
_25.fld0.fld0 = _5.fld0;
RET = _7.2;
_2 = !_18;
_11 = _4;
_22.fld5.2 = _7.3;
_5 = Adt61 { fld0: _16.fld0.fld0 };
_22.fld4 = core::ptr::addr_of!(_28);
_25.fld0.fld0 = [1138037104_i32,2077792084_i32,2145986045_i32,(-1367167553_i32),1565535350_i32,1312698392_i32,15313013_i32];
Call(_24 = fn7(_5, (*_14), _3.0, _5, _19, _22.fld5.3, _22.fld5, _25.fld0.fld0, _22.fld4, _18), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_1 = !_4;
_25.fld0 = Adt61 { fld0: _22.fld5.0 };
_27 = _11;
_22.fld3 = core::ptr::addr_of_mut!(_2);
Goto(bb7)
}
bb7 = {
_25.fld0.fld0 = [(-1562572062_i32),1129394327_i32,(-1035461398_i32),1403455775_i32,1333073982_i32,255693209_i32,1185515042_i32];
_2 = _18;
_11 = _27 | _27;
_30.fld1 = (_12, 2034362842_i32);
_7.0 = 655568216_u32 as f32;
_23 = 17690459937920386115_usize as u128;
_30.fld4 = [_7.1];
_2 = !_18;
_1 = _27;
_14 = core::ptr::addr_of!(_7.0);
Call(RET = fn8(_27, _27), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_33.fld0.fld0.3 = !_22.fld5.1;
_4 = _11 - _1;
_33.fld0.fld0.1.3 = !_22.fld5.3;
_33.fld0.fld0.1.0 = _22.fld5.0;
_16 = Adt65 { fld0: _5 };
_16 = Adt65 { fld0: _5 };
_33.fld0.fld0.1.2 = -_7.3;
_33.fld0.fld2 = core::ptr::addr_of!(_28);
_14 = core::ptr::addr_of!(_26);
_27 = -_11;
_30.fld1.1 = -1895237758_i32;
_25.fld0.fld0 = _10;
_33.fld4 = !_33.fld0.fld0.1.2;
_26 = -_7.0;
_33.fld0.fld0.2 = _12 & _12;
_33.fld0.fld0.1 = (_16.fld0.fld0, _22.fld5.1, _22.fld5.2, _22.fld5.3);
_6 = _22.fld6 as u64;
_27 = _1;
_34 = _33.fld4 + _33.fld4;
Goto(bb9)
}
bb9 = {
_3.0 = [1768154162_u32];
Goto(bb10)
}
bb10 = {
_22.fld3 = core::ptr::addr_of_mut!(_18);
_22.fld0 = _18 & _18;
_22.fld7 = -_12;
_28 = [879083738_u32];
_5.fld0 = [_30.fld1.1,_30.fld1.1,_30.fld1.1,_30.fld1.1,_30.fld1.1,_30.fld1.1,_30.fld1.1];
_22.fld5.1 = _30.fld1.1 as u64;
_26 = _7.0 / f32::NAN;
_22.fld2 = core::ptr::addr_of_mut!(_30.fld4);
_37.fld3 = -_33.fld0.fld0.1.3;
_4 = _27 & _27;
_5.fld0 = _10;
_11 = _27;
_22.fld6 = (*_14) as i64;
_37.fld2 = core::ptr::addr_of_mut!(_37.fld4);
_36 = core::ptr::addr_of_mut!(_30.fld1.0);
_22.fld5.3 = !_33.fld0.fld0.1.3;
match _22.fld5.2 {
0 => bb9,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
3218 => bb17,
_ => bb16
}
}
bb11 = {
_3.0 = [1768154162_u32];
Goto(bb10)
}
bb12 = {
_33.fld0.fld0.3 = !_22.fld5.1;
_4 = _11 - _1;
_33.fld0.fld0.1.3 = !_22.fld5.3;
_33.fld0.fld0.1.0 = _22.fld5.0;
_16 = Adt65 { fld0: _5 };
_16 = Adt65 { fld0: _5 };
_33.fld0.fld0.1.2 = -_7.3;
_33.fld0.fld2 = core::ptr::addr_of!(_28);
_14 = core::ptr::addr_of!(_26);
_27 = -_11;
_30.fld1.1 = -1895237758_i32;
_25.fld0.fld0 = _10;
_33.fld4 = !_33.fld0.fld0.1.2;
_26 = -_7.0;
_33.fld0.fld0.2 = _12 & _12;
_33.fld0.fld0.1 = (_16.fld0.fld0, _22.fld5.1, _22.fld5.2, _22.fld5.3);
_6 = _22.fld6 as u64;
_27 = _1;
_34 = _33.fld4 + _33.fld4;
Goto(bb9)
}
bb13 = {
_25.fld0.fld0 = [(-1562572062_i32),1129394327_i32,(-1035461398_i32),1403455775_i32,1333073982_i32,255693209_i32,1185515042_i32];
_2 = _18;
_11 = _27 | _27;
_30.fld1 = (_12, 2034362842_i32);
_7.0 = 655568216_u32 as f32;
_23 = 17690459937920386115_usize as u128;
_30.fld4 = [_7.1];
_2 = !_18;
_1 = _27;
_14 = core::ptr::addr_of!(_7.0);
Call(RET = fn8(_27, _27), ReturnTo(bb8), UnwindUnreachable())
}
bb14 = {
_1 = !_4;
_25.fld0 = Adt61 { fld0: _22.fld5.0 };
_27 = _11;
_22.fld3 = core::ptr::addr_of_mut!(_2);
Goto(bb7)
}
bb15 = {
(*_14) = _26;
_7.0 = _26 * _26;
_7.0 = _7.1 as f32;
_25.fld0.fld0 = _5.fld0;
RET = _7.2;
_2 = !_18;
_11 = _4;
_22.fld5.2 = _7.3;
_5 = Adt61 { fld0: _16.fld0.fld0 };
_22.fld4 = core::ptr::addr_of!(_28);
_25.fld0.fld0 = [1138037104_i32,2077792084_i32,2145986045_i32,(-1367167553_i32),1565535350_i32,1312698392_i32,15313013_i32];
Call(_24 = fn7(_5, (*_14), _3.0, _5, _19, _22.fld5.3, _22.fld5, _25.fld0.fld0, _22.fld4, _18), ReturnTo(bb6), UnwindUnreachable())
}
bb16 = {
_19 = _7.2;
_22.fld5 = (_10, _6, _7.3, 47_i8);
_22.fld6 = (-2217203301205391086_i64) * (-7270759803744334690_i64);
_24 = _7.3 as f64;
RET = _19;
_16.fld0.fld0 = [(-1292006526_i32),375901815_i32,1227971932_i32,105018935_i32,(-1522219276_i32),1126584542_i32,(-738536152_i32)];
_22.fld5.1 = _6 % 12821347221856786537_u64;
_26 = 236_u8 as f32;
_7.1 = 61328_u16;
Goto(bb5)
}
bb17 = {
_10 = _22.fld5.0;
_30.fld1.0 = _24 as i128;
_20 = _22.fld5.0;
_33.fld0.fld0 = (_36, _22.fld5, _30.fld1.0, _6);
(*_36) = !_12;
(*_14) = _7.0;
_30.fld2 = core::ptr::addr_of_mut!(_37.fld4);
_36 = core::ptr::addr_of_mut!(_37.fld1.0);
Goto(bb18)
}
bb18 = {
Call(_42 = dump_var(5_usize, 27_usize, Move(_27), 11_usize, Move(_11), 12_usize, Move(_12), 18_usize, Move(_18)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_42 = dump_var(5_usize, 9_usize, Move(_9), 1_usize, Move(_1), 19_usize, Move(_19), 20_usize, Move(_20)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(5_usize, 17_usize, Move(_17), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: i16,mut _2: Adt61,mut _3: isize,mut _4: Adt61,mut _5: [i32; 7],mut _6: isize,mut _7: i128,mut _8: [u32; 1],mut _9: [i32; 7]) -> isize {
mir! {
type RET = isize;
let _10: bool;
let _11: Adt51;
let _12: ();
let _13: ();
{
_5 = _4.fld0;
RET = -_6;
_6 = _3 * _3;
_2.fld0 = [(-5525930_i32),(-1406559546_i32),(-428232932_i32),(-538185853_i32),322440647_i32,(-821892107_i32),(-784948384_i32)];
_10 = true;
_8 = [1411673338_u32];
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(6_usize, 9_usize, Move(_9), 10_usize, Move(_10), 8_usize, Move(_8), 1_usize, Move(_1)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: Adt61,mut _2: f32,mut _3: [u32; 1],mut _4: Adt61,mut _5: char,mut _6: i8,mut _7: ([i32; 7], u64, i16, i8),mut _8: [i32; 7],mut _9: *const [u32; 1],mut _10: bool) -> f64 {
mir! {
type RET = f64;
let _11: *const bool;
let _12: *mut i128;
let _13: [u8; 7];
let _14: bool;
let _15: isize;
let _16: f64;
let _17: isize;
let _18: f64;
let _19: i16;
let _20: char;
let _21: *const bool;
let _22: Adt57;
let _23: Adt57;
let _24: isize;
let _25: *mut u8;
let _26: ();
let _27: ();
{
_2 = 1330_u16 as f32;
_5 = '\u{e4bfa}';
_1 = Adt61 { fld0: _4.fld0 };
(*_9) = [3556841880_u32];
match _6 {
47 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_7.1 = !7158442314745744248_u64;
_10 = false;
_1.fld0 = [(-506423267_i32),18226949_i32,(-2135090748_i32),(-620954401_i32),1440894934_i32,(-863957252_i32),1423499909_i32];
_5 = '\u{b8a09}';
RET = 2_usize as f64;
_4.fld0 = [(-224862306_i32),737358195_i32,2087267256_i32,26296820_i32,(-1710156338_i32),(-212631824_i32),2135530262_i32];
_11 = core::ptr::addr_of!(_10);
_7.3 = _6;
_4.fld0 = [1144801867_i32,1862579879_i32,913120507_i32,(-1289256921_i32),(-1669943966_i32),690813056_i32,(-160607111_i32)];
_7.2 = !30309_i16;
_6 = -_7.3;
_2 = 984224207_u32 as f32;
_5 = '\u{8df58}';
_13 = [187_u8,142_u8,164_u8,164_u8,246_u8,87_u8,88_u8];
_17 = 133029759539355243182687213283162433457_i128 as isize;
_4 = Adt61 { fld0: _7.0 };
_13 = [216_u8,78_u8,141_u8,85_u8,203_u8,128_u8,167_u8];
_16 = 2248278974_u32 as f64;
_7.1 = 9967775489357956585_u64 << _17;
_7.0 = _8;
_18 = _6 as f64;
_1.fld0 = [(-859912801_i32),(-1257620288_i32),(-672264773_i32),1470050905_i32,(-1939233035_i32),905490851_i32,(-1791871183_i32)];
_18 = _16;
_4.fld0 = [(-1061054328_i32),(-493368571_i32),(-1516558848_i32),201351300_i32,(-1284700477_i32),440746490_i32,(-1303509734_i32)];
match _7.3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
47 => bb10,
_ => bb9
}
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11 = core::ptr::addr_of!((*_11));
Goto(bb11)
}
bb11 = {
_4.fld0 = _7.0;
_3 = (*_9);
(*_11) = !true;
RET = 3935114619_u32 as f64;
_1 = _4;
(*_9) = [987752186_u32];
_10 = false;
_8 = [(-1306983223_i32),920209149_i32,(-996488871_i32),(-888675609_i32),891137119_i32,1269601585_i32,96799515_i32];
_15 = _7.1 as isize;
RET = _16 + _18;
_17 = _15 ^ _15;
_19 = _7.2 ^ _7.2;
_7.0 = [(-99546342_i32),(-732917881_i32),(-1254603748_i32),302349899_i32,1770052818_i32,(-1705479650_i32),754059114_i32];
_22.fld1 = core::ptr::addr_of!((*_11));
_14 = _18 <= _16;
_7.0 = [1034933930_i32,2116599982_i32,(-2068759794_i32),1203233793_i32,268526238_i32,1249524309_i32,(-417556877_i32)];
_7.1 = (-143063487882492632503798032668063829019_i128) as u64;
_7.1 = 3178309577681227115_u64 >> _7.3;
_3 = (*_9);
match _7.3 {
0 => bb9,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
47 => bb19,
_ => bb18
}
}
bb12 = {
_11 = core::ptr::addr_of!((*_11));
Goto(bb11)
}
bb13 = {
_7.1 = !7158442314745744248_u64;
_10 = false;
_1.fld0 = [(-506423267_i32),18226949_i32,(-2135090748_i32),(-620954401_i32),1440894934_i32,(-863957252_i32),1423499909_i32];
_5 = '\u{b8a09}';
RET = 2_usize as f64;
_4.fld0 = [(-224862306_i32),737358195_i32,2087267256_i32,26296820_i32,(-1710156338_i32),(-212631824_i32),2135530262_i32];
_11 = core::ptr::addr_of!(_10);
_7.3 = _6;
_4.fld0 = [1144801867_i32,1862579879_i32,913120507_i32,(-1289256921_i32),(-1669943966_i32),690813056_i32,(-160607111_i32)];
_7.2 = !30309_i16;
_6 = -_7.3;
_2 = 984224207_u32 as f32;
_5 = '\u{8df58}';
_13 = [187_u8,142_u8,164_u8,164_u8,246_u8,87_u8,88_u8];
_17 = 133029759539355243182687213283162433457_i128 as isize;
_4 = Adt61 { fld0: _7.0 };
_13 = [216_u8,78_u8,141_u8,85_u8,203_u8,128_u8,167_u8];
_16 = 2248278974_u32 as f64;
_7.1 = 9967775489357956585_u64 << _17;
_7.0 = _8;
_18 = _6 as f64;
_1.fld0 = [(-859912801_i32),(-1257620288_i32),(-672264773_i32),1470050905_i32,(-1939233035_i32),905490851_i32,(-1791871183_i32)];
_18 = _16;
_4.fld0 = [(-1061054328_i32),(-493368571_i32),(-1516558848_i32),201351300_i32,(-1284700477_i32),440746490_i32,(-1303509734_i32)];
match _7.3 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
47 => bb10,
_ => bb9
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Goto(bb20)
}
bb20 = {
Call(_26 = dump_var(7_usize, 7_usize, Move(_7), 14_usize, Move(_14), 8_usize, Move(_8), 3_usize, Move(_3)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_26 = dump_var(7_usize, 17_usize, Move(_17), 27_usize, _27, 27_usize, _27, 27_usize, _27), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: isize) -> char {
mir! {
type RET = char;
let _3: u64;
let _4: ([i32; 7], u64, i16, i8);
let _5: [i128; 4];
let _6: Adt55;
let _7: bool;
let _8: f64;
let _9: f32;
let _10: ([i32; 7], u64, i16, i8);
let _11: *const f32;
let _12: isize;
let _13: [u64; 5];
let _14: (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _15: (([u32; 1],), u32, u16, u64);
let _16: Adt54;
let _17: ();
let _18: ();
{
Goto(bb1)
}
bb1 = {
_2 = _1;
RET = '\u{3e23e}';
RET = '\u{7d6d6}';
_2 = 13379315291137697031_u64 as isize;
_3 = !5596267159256339877_u64;
_3 = 15521865875575841711_u64;
RET = '\u{8fb59}';
_4.1 = '\u{b8138}' as u64;
_1 = _4.1 as isize;
_4.0 = [2131773911_i32,264125488_i32,835420790_i32,(-1547991578_i32),231279514_i32,2026493728_i32,2036191844_i32];
_4.0 = [(-69019232_i32),(-485720554_i32),899884648_i32,355182478_i32,(-1636531513_i32),(-1808837737_i32),1634418732_i32];
_4.0 = [1887315990_i32,1398101281_i32,(-697531274_i32),916297441_i32,(-1534446622_i32),209979922_i32,(-1848041277_i32)];
_2 = _1;
_6.fld3 = 43_u8 - 233_u8;
_6.fld2.1 = 2_usize as u32;
_2 = _3 as isize;
_2 = 336180167057713937124139070955767275431_u128 as isize;
_6.fld2.0.0 = [_6.fld2.1];
_6.fld2.3 = _3 >> _3;
RET = '\u{561bf}';
_6.fld0 = false;
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
15521865875575841711 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8 = 24953_i16 as f64;
Goto(bb11)
}
bb11 = {
_1 = _6.fld2.3 as isize;
_6.fld1 = [(-839734520_i32),1803910467_i32,(-1945404181_i32),194213775_i32,1389213804_i32,(-1512961253_i32)];
_1 = _2;
_7 = _6.fld0;
_5 = [(-61916633502801912873560941686595833197_i128),(-40940988480811257897018533117672372917_i128),4667128330175936641303688303774059834_i128,(-99659010910700509240007250033338910635_i128)];
_6.fld0 = !_7;
_4.3 = 5388090124717339379_i64 as i8;
_3 = _2 as u64;
_4.3 = -(-109_i8);
_6.fld2.0.0 = [_6.fld2.1];
Call(_4 = fn9(_6.fld2.3, _6.fld2.3, _6.fld1, _6.fld0, _6.fld1, _6.fld1, _1, _6.fld2.0.0, _5, _6.fld2.0.0, _6.fld1, _1, _6.fld2.0.0, _7, _5), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4.0 = [(-305714563_i32),770796372_i32,(-89548296_i32),(-1391676331_i32),1898996296_i32,(-1225190068_i32),530961081_i32];
_8 = _6.fld2.1 as f64;
_6.fld2.2 = _4.1 as u16;
_10.3 = _4.3 & _4.3;
_4.1 = _8 as u64;
Call(_7 = fn10(_6.fld3, _3, _6), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_6.fld2.1 = _6.fld2.2 as u32;
_8 = 1319905923_i32 as f64;
_10 = (_4.0, _6.fld2.3, _4.2, _4.3);
Goto(bb14)
}
bb14 = {
_10.1 = _4.1;
_9 = _10.2 as f32;
_12 = (-6022262581440251520_i64) as isize;
RET = '\u{a411b}';
_6.fld2.0.0 = [_6.fld2.1];
_6.fld0 = !_7;
_2 = _1;
_11 = core::ptr::addr_of!(_9);
_6.fld2.2 = !8613_u16;
_4.2 = _10.2;
_6.fld0 = _7 ^ _7;
_14.1 = _10;
_13 = [_3,_14.1.1,_14.1.1,_3,_6.fld2.3];
_10.1 = !_4.1;
_14.0 = core::ptr::addr_of_mut!(_14.2);
_15.3 = !_14.1.1;
_15.3 = _6.fld2.3;
_15.2 = _6.fld2.2 ^ _6.fld2.2;
_6.fld2.2 = !_15.2;
_13 = [_14.1.1,_15.3,_6.fld2.3,_15.3,_3];
(*_11) = _6.fld3 as f32;
_6.fld2.3 = !_3;
_4.0 = _14.1.0;
Goto(bb15)
}
bb15 = {
Call(_17 = dump_var(8_usize, 12_usize, Move(_12), 13_usize, Move(_13), 1_usize, Move(_1), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: u64,mut _2: u64,mut _3: [i32; 6],mut _4: bool,mut _5: [i32; 6],mut _6: [i32; 6],mut _7: isize,mut _8: [u32; 1],mut _9: [i128; 4],mut _10: [u32; 1],mut _11: [i32; 6],mut _12: isize,mut _13: [u32; 1],mut _14: bool,mut _15: [i128; 4]) -> ([i32; 7], u64, i16, i8) {
mir! {
type RET = ([i32; 7], u64, i16, i8);
let _16: Adt65;
let _17: *mut (([u32; 1],), u32, u16, u64);
let _18: Adt49;
let _19: [char; 4];
let _20: [char; 4];
let _21: char;
let _22: ();
let _23: ();
{
_12 = _7 >> _2;
_2 = !_1;
RET.0 = [784017772_i32,(-42709212_i32),1425893610_i32,912443899_i32,(-482377801_i32),831682085_i32,(-1878248977_i32)];
RET.1 = _1 ^ _1;
_14 = _4 & _4;
RET.2 = !(-15331_i16);
_9 = _15;
_15 = [27349360382188332363002843535111557269_i128,(-148087849003715874055569148062221730097_i128),(-142958048820559002152399190579991503975_i128),152032379636251388289610361125921170158_i128];
_16.fld0.fld0 = [1688539491_i32,866237933_i32,(-1142747490_i32),(-926349810_i32),(-1013635590_i32),1305018000_i32,1528777334_i32];
_5 = [(-299613836_i32),1121952817_i32,(-1239668823_i32),1759707001_i32,2100460629_i32,(-1828289615_i32)];
_11 = [(-1231275068_i32),(-1663200597_i32),(-187912884_i32),895835810_i32,1394806036_i32,1252845882_i32];
_9 = [111402603903450178195951846715533913992_i128,(-74994862035417226831234148558041187937_i128),(-18201218209472498806091471641157323121_i128),(-148581874996335556879731875460227000931_i128)];
RET = (_16.fld0.fld0, _1, 14434_i16, (-110_i8));
_18.fld4 = core::ptr::addr_of!(_13);
_18.fld5 = (_16.fld0.fld0, _2, 11577_i16, 68_i8);
_18.fld5.0 = [1189883941_i32,(-1743681671_i32),(-38071172_i32),(-1149319817_i32),1302025371_i32,701499623_i32,(-1698113609_i32)];
_11 = _5;
RET.3 = _18.fld5.3 << _18.fld5.3;
_18.fld5.2 = -18548_i16;
RET.0 = _18.fld5.0;
_18.fld0 = _14;
_1 = !_2;
_18.fld5.1 = !_1;
_14 = _18.fld0;
RET.2 = !_18.fld5.2;
_15 = [(-167583319658583910786045748288685397268_i128),39836262423404334795017258828717108661_i128,(-33974713346999232571795581104363682276_i128),14915920659005506469839266356404515943_i128];
Goto(bb1)
}
bb1 = {
Call(_22 = dump_var(9_usize, 7_usize, Move(_7), 4_usize, Move(_4), 3_usize, Move(_3), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_22 = dump_var(9_usize, 1_usize, Move(_1), 2_usize, Move(_2), 9_usize, Move(_9), 23_usize, _23), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: u8,mut _2: u64,mut _3: Adt55) -> bool {
mir! {
type RET = bool;
let _4: *mut *const f32;
let _5: [u16; 1];
let _6: isize;
let _7: isize;
let _8: f64;
let _9: [u8; 1];
let _10: Adt61;
let _11: bool;
let _12: f32;
let _13: i32;
let _14: [char; 5];
let _15: Adt56;
let _16: *mut *const [u32; 1];
let _17: i32;
let _18: Adt60;
let _19: Adt56;
let _20: f64;
let _21: i32;
let _22: u32;
let _23: char;
let _24: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _25: isize;
let _26: [char; 5];
let _27: usize;
let _28: [u16; 1];
let _29: [u32; 1];
let _30: isize;
let _31: [i32; 7];
let _32: ();
let _33: ();
{
_3.fld0 = false;
_3.fld3 = '\u{8d438}' as u8;
_2 = !_3.fld2.3;
_3.fld1 = [(-1053460246_i32),1265738793_i32,1813918272_i32,894134992_i32,(-405930836_i32),(-556307266_i32)];
_7 = 9223372036854775807_isize >> _3.fld3;
_7 = (-103_isize);
_8 = _1 as f64;
Goto(bb1)
}
bb1 = {
_3.fld2.0.0 = [_3.fld2.1];
_2 = _3.fld2.3;
_6 = !_7;
RET = _3.fld0;
_3.fld2.0.0 = [_3.fld2.1];
_9 = [_1];
RET = !_3.fld0;
_7 = _6;
_8 = (-81_i8) as f64;
_5 = [_3.fld2.2];
_3.fld2.1 = 877713334_u32;
RET = _3.fld0;
_5 = [_3.fld2.2];
RET = _3.fld0;
_10.fld0 = [(-501656235_i32),(-929705648_i32),985132092_i32,1401257567_i32,(-511455139_i32),1000520132_i32,790337017_i32];
_3.fld1 = [(-429091535_i32),(-1373386561_i32),(-1462715625_i32),(-1611241661_i32),(-1429743988_i32),1818641781_i32];
RET = _2 >= _3.fld2.3;
_9 = [_3.fld3];
_9 = [_3.fld3];
_3.fld0 = !false;
Goto(bb2)
}
bb2 = {
_8 = (-36525751855468422366879093736575591781_i128) as f64;
_7 = _6 ^ _6;
_11 = _3.fld0;
_3.fld2.2 = 64064_u16 << _3.fld2.3;
_3.fld3 = !_1;
Goto(bb3)
}
bb3 = {
RET = _11;
_12 = 11997_i16 as f32;
_7 = _6 + _6;
_3.fld1 = [2060869827_i32,(-148021656_i32),1360257392_i32,1079337069_i32,2091550022_i32,(-120998307_i32)];
_3.fld2.1 = 308674046140815292611124383218394721670_u128 as u32;
_5 = [_3.fld2.2];
_3.fld0 = _11 | _11;
_3.fld2.2 = _3.fld3 as u16;
_13 = -459067186_i32;
_14 = ['\u{cee72}','\u{d1ea}','\u{549b1}','\u{822a}','\u{10d873}'];
_5 = [_3.fld2.2];
_5 = [_3.fld2.2];
_3.fld2.3 = _2 + _2;
_8 = _13 as f64;
_11 = !_3.fld0;
_3.fld2.3 = '\u{bad9e}' as u64;
Goto(bb4)
}
bb4 = {
_5 = [_3.fld2.2];
_15.fld0.fld6.0 = _3.fld0;
_3.fld3 = _1;
_15.fld5 = !_13;
_15.fld1 = (_3.fld2.1,);
_3.fld0 = _11 >= _15.fld0.fld6.0;
_10.fld0 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_13,_15.fld5,_13];
_15.fld0.fld6.2.2 = '\u{91a9b}';
_17 = _13 | _13;
_19.fld4 = core::ptr::addr_of!(_3.fld1);
Goto(bb5)
}
bb5 = {
_15.fld0.fld0 = -_12;
_15.fld1 = (_3.fld2.1,);
_19.fld1.0 = _15.fld1.0 & _3.fld2.1;
_18.fld1.fld0.1 = (_10.fld0, _2, (-1518_i16), (-111_i8));
_18.fld1.fld0.1 = (_10.fld0, _3.fld2.3, (-3218_i16), 30_i8);
_10 = Adt61 { fld0: _18.fld1.fld0.1.0 };
_15.fld0.fld6.3 = _3.fld2.0.0;
_3.fld2.0 = (_15.fld0.fld6.3,);
_18.fld1.fld1 = core::ptr::addr_of_mut!(_18.fld1.fld2);
match _18.fld1.fld0.1.3 {
0 => bb1,
1 => bb4,
2 => bb6,
30 => bb8,
_ => bb7
}
}
bb6 = {
_8 = (-36525751855468422366879093736575591781_i128) as f64;
_7 = _6 ^ _6;
_11 = _3.fld0;
_3.fld2.2 = 64064_u16 << _3.fld2.3;
_3.fld3 = !_1;
Goto(bb3)
}
bb7 = {
RET = _11;
_12 = 11997_i16 as f32;
_7 = _6 + _6;
_3.fld1 = [2060869827_i32,(-148021656_i32),1360257392_i32,1079337069_i32,2091550022_i32,(-120998307_i32)];
_3.fld2.1 = 308674046140815292611124383218394721670_u128 as u32;
_5 = [_3.fld2.2];
_3.fld0 = _11 | _11;
_3.fld2.2 = _3.fld3 as u16;
_13 = -459067186_i32;
_14 = ['\u{cee72}','\u{d1ea}','\u{549b1}','\u{822a}','\u{10d873}'];
_5 = [_3.fld2.2];
_5 = [_3.fld2.2];
_3.fld2.3 = _2 + _2;
_8 = _13 as f64;
_11 = !_3.fld0;
_3.fld2.3 = '\u{bad9e}' as u64;
Goto(bb4)
}
bb8 = {
_20 = _13 as f64;
_17 = 1473447523416269263_usize as i32;
_19.fld0.fld6.1 = 15182716831764040019756258300585479032_i128 as i64;
_13 = _17 & _15.fld5;
_15.fld1 = (_3.fld2.1,);
_21 = _13;
match _18.fld1.fld0.1.2 {
0 => bb6,
340282366920938463463374607431768208238 => bb10,
_ => bb9
}
}
bb9 = {
_8 = (-36525751855468422366879093736575591781_i128) as f64;
_7 = _6 ^ _6;
_11 = _3.fld0;
_3.fld2.2 = 64064_u16 << _3.fld2.3;
_3.fld3 = !_1;
Goto(bb3)
}
bb10 = {
_15.fld5 = _3.fld2.3 as i32;
_15.fld3.2 = _17 as isize;
_15.fld3.0 = [_3.fld2.2];
_19.fld5 = _13;
_13 = -_17;
match _18.fld1.fld0.1.3 {
30 => bb11,
_ => bb7
}
}
bb11 = {
_19.fld3.2 = -_7;
_19.fld0.fld6.1 = 5322761800694452064_i64;
_19.fld0.fld6.2.3 = _3.fld2.1 as i16;
RET = _18.fld1.fld0.1.2 != _18.fld1.fld0.1.2;
_21 = _15.fld5;
_3.fld1 = [_21,_15.fld5,_15.fld5,_15.fld5,_17,_13];
_19.fld3.0 = _15.fld3.0;
_18.fld1.fld1 = core::ptr::addr_of_mut!(_18.fld1.fld2);
_18.fld1.fld0.3 = _3.fld2.3;
_18.fld1.fld0.1 = (_10.fld0, _18.fld1.fld0.3, _19.fld0.fld6.2.3, (-22_i8));
_25 = _19.fld3.2 * _19.fld3.2;
_15.fld0.fld6.2.3 = _19.fld0.fld6.2.3;
_19.fld1 = (_3.fld2.1,);
_15.fld0.fld6.1 = -_19.fld0.fld6.1;
_7 = _15.fld3.2 ^ _19.fld3.2;
_18.fld1.fld0.1.1 = 12878850577132388003_usize as u64;
_19.fld0.fld6.2.3 = _15.fld0.fld6.2.3;
_10.fld0 = [_19.fld5,_17,_15.fld5,_13,_15.fld5,_15.fld5,_15.fld5];
_3.fld0 = _11;
_19.fld0.fld6.0 = !_11;
_15.fld0.fld6.0 = _3.fld0;
_15.fld2 = !2_usize;
_15.fld0.fld2 = _25 | _25;
_19.fld0.fld6.2.2 = _15.fld0.fld6.2.2;
match _18.fld1.fld0.1.3 {
0 => bb1,
1 => bb2,
2 => bb10,
3 => bb8,
4 => bb9,
5 => bb12,
6 => bb13,
340282366920938463463374607431768211434 => bb15,
_ => bb14
}
}
bb12 = {
_15.fld5 = _3.fld2.3 as i32;
_15.fld3.2 = _17 as isize;
_15.fld3.0 = [_3.fld2.2];
_19.fld5 = _13;
_13 = -_17;
match _18.fld1.fld0.1.3 {
30 => bb11,
_ => bb7
}
}
bb13 = {
_8 = (-36525751855468422366879093736575591781_i128) as f64;
_7 = _6 ^ _6;
_11 = _3.fld0;
_3.fld2.2 = 64064_u16 << _3.fld2.3;
_3.fld3 = !_1;
Goto(bb3)
}
bb14 = {
_3.fld2.0.0 = [_3.fld2.1];
_2 = _3.fld2.3;
_6 = !_7;
RET = _3.fld0;
_3.fld2.0.0 = [_3.fld2.1];
_9 = [_1];
RET = !_3.fld0;
_7 = _6;
_8 = (-81_i8) as f64;
_5 = [_3.fld2.2];
_3.fld2.1 = 877713334_u32;
RET = _3.fld0;
_5 = [_3.fld2.2];
RET = _3.fld0;
_10.fld0 = [(-501656235_i32),(-929705648_i32),985132092_i32,1401257567_i32,(-511455139_i32),1000520132_i32,790337017_i32];
_3.fld1 = [(-429091535_i32),(-1373386561_i32),(-1462715625_i32),(-1611241661_i32),(-1429743988_i32),1818641781_i32];
RET = _2 >= _3.fld2.3;
_9 = [_3.fld3];
_9 = [_3.fld3];
_3.fld0 = !false;
Goto(bb2)
}
bb15 = {
_18.fld1.fld0.1.2 = _19.fld0.fld6.2.3 - _19.fld0.fld6.2.3;
_3.fld2.2 = !27825_u16;
_18.fld1.fld0.1.0 = [_21,_15.fld5,_21,_13,_13,_15.fld5,_13];
_20 = _3.fld3 as f64;
_15.fld0.fld4 = [_2,_18.fld1.fld0.1.1,_18.fld1.fld0.1.1,_3.fld2.3,_18.fld1.fld0.3];
_24.1 = _3.fld2.2 as i64;
_19.fld0.fld6.2.0 = -_12;
_15.fld0.fld3 = _3.fld3 - _1;
_24.2.3 = _15.fld0.fld3 as i16;
_24.2.0 = _3.fld2.1 as f32;
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(10_usize, 9_usize, Move(_9), 2_usize, Move(_2), 11_usize, Move(_11), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(10_usize, 17_usize, Move(_17), 7_usize, Move(_7), 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: ([u32; 1],),mut _2: isize,mut _3: i32,mut _4: isize,mut _5: u64,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: [u16; 1],mut _10: usize,mut _11: i64,mut _12: u64,mut _13: isize,mut _14: bool) -> *mut *const [u32; 1] {
mir! {
type RET = *mut *const [u32; 1];
let _15: *mut [u16; 1];
let _16: u32;
let _17: Adt49;
let _18: f32;
let _19: Adt57;
let _20: Adt50;
let _21: char;
let _22: i128;
let _23: usize;
let _24: (u32,);
let _25: Adt65;
let _26: f32;
let _27: char;
let _28: [u32; 1];
let _29: [u64; 5];
let _30: (f32, u16, char, i16);
let _31: usize;
let _32: f64;
let _33: isize;
let _34: f64;
let _35: *const f32;
let _36: *const *mut u8;
let _37: *mut *const [u32; 1];
let _38: f64;
let _39: [u32; 1];
let _40: (f32, u16, char, i16);
let _41: bool;
let _42: isize;
let _43: *const [i32; 6];
let _44: isize;
let _45: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _46: u32;
let _47: [u8; 7];
let _48: [u16; 1];
let _49: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _50: u32;
let _51: [u16; 1];
let _52: ();
let _53: ();
{
_8 = -_13;
_2 = _8;
_10 = 4906002496748854687_usize + 1_usize;
_2 = _13;
_5 = _12 + _12;
_12 = _5 >> _3;
_12 = _11 as u64;
_17.fld3 = core::ptr::addr_of_mut!(_17.fld0);
RET = core::ptr::addr_of_mut!(_17.fld4);
_17.fld5.3 = -(-41_i8);
_18 = (-153165323576399396124595585696239507848_i128) as f32;
(*RET) = core::ptr::addr_of!(_1.0);
_20.fld6.2.1 = 32938_u16 ^ 53250_u16;
_2 = _8 & _13;
_17.fld5.2 = _18 as i16;
(*RET) = core::ptr::addr_of!(_1.0);
_19.fld0.2 = '\u{d442e}';
Call(_20.fld0 = core::intrinsics::transmute(_19.fld0.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*RET) = core::ptr::addr_of!(_1.0);
_17.fld7 = !86583767143097025895006483239058195026_i128;
_3 = 14335470_i32 | 227825492_i32;
(*RET) = core::ptr::addr_of!(_20.fld6.3);
_20.fld2 = _11 as isize;
_20.fld4 = [_5,_5,_5,_12,_5];
_20.fld0 = _18;
_20.fld6.2.2 = _19.fld0.2;
_12 = !_5;
_22 = _17.fld7 + _17.fld7;
_17.fld2 = core::ptr::addr_of_mut!(_9);
_2 = -_13;
(*RET) = core::ptr::addr_of!(_1.0);
_17.fld4 = core::ptr::addr_of!(_20.fld6.3);
Goto(bb2)
}
bb2 = {
_19.fld1 = core::ptr::addr_of!(_14);
_20.fld6.2.2 = _19.fld0.2;
_20.fld6.2 = (_18, 30608_u16, _19.fld0.2, _17.fld5.2);
_17.fld1 = core::ptr::addr_of_mut!(_20.fld3);
_17.fld6 = !_11;
_17.fld5.3 = 13_i8 << _20.fld2;
_17.fld5.3 = (-67_i8) & 90_i8;
_4 = _20.fld6.2.3 as isize;
_4 = _19.fld0.2 as isize;
_20.fld2 = _2;
_17.fld0 = _14;
_14 = _3 != _3;
_10 = 12769118992113564916_usize - 0_usize;
_19.fld0.1 = 174_u8 as u16;
match _20.fld6.2.1 {
30608 => bb4,
_ => bb3
}
}
bb3 = {
(*RET) = core::ptr::addr_of!(_1.0);
_17.fld7 = !86583767143097025895006483239058195026_i128;
_3 = 14335470_i32 | 227825492_i32;
(*RET) = core::ptr::addr_of!(_20.fld6.3);
_20.fld2 = _11 as isize;
_20.fld4 = [_5,_5,_5,_12,_5];
_20.fld0 = _18;
_20.fld6.2.2 = _19.fld0.2;
_12 = !_5;
_22 = _17.fld7 + _17.fld7;
_17.fld2 = core::ptr::addr_of_mut!(_9);
_2 = -_13;
(*RET) = core::ptr::addr_of!(_1.0);
_17.fld4 = core::ptr::addr_of!(_20.fld6.3);
Goto(bb2)
}
bb4 = {
_17.fld1 = core::ptr::addr_of_mut!(_20.fld3);
_5 = _3 as u64;
(*RET) = core::ptr::addr_of!(_20.fld6.3);
_23 = _10 >> _11;
_21 = _20.fld6.2.2;
_20.fld2 = !_8;
_19.fld0.0 = _20.fld6.2.0 / (-0.0000000000000000000000000000000000000042864865231632916_f32);
_19.fld0.0 = _20.fld2 as f32;
_19.fld0.1 = _20.fld6.2.2 as u16;
_19.fld0 = _20.fld6.2;
_21 = _19.fld0.2;
_20.fld0 = -_18;
(*RET) = core::ptr::addr_of!(_20.fld6.3);
(*RET) = core::ptr::addr_of!(_28);
_17.fld5.1 = _12 % 8889344577933552966_u64;
_20.fld6.2.1 = _19.fld0.1 % 62337_u16;
match _19.fld0.1 {
0 => bb1,
1 => bb2,
2 => bb3,
30608 => bb6,
_ => bb5
}
}
bb5 = {
_19.fld1 = core::ptr::addr_of!(_14);
_20.fld6.2.2 = _19.fld0.2;
_20.fld6.2 = (_18, 30608_u16, _19.fld0.2, _17.fld5.2);
_17.fld1 = core::ptr::addr_of_mut!(_20.fld3);
_17.fld6 = !_11;
_17.fld5.3 = 13_i8 << _20.fld2;
_17.fld5.3 = (-67_i8) & 90_i8;
_4 = _20.fld6.2.3 as isize;
_4 = _19.fld0.2 as isize;
_20.fld2 = _2;
_17.fld0 = _14;
_14 = _3 != _3;
_10 = 12769118992113564916_usize - 0_usize;
_19.fld0.1 = 174_u8 as u16;
match _20.fld6.2.1 {
30608 => bb4,
_ => bb3
}
}
bb6 = {
_17.fld5.0 = [_3,_3,_3,_3,_3,_3,_3];
_24 = (1998138398_u32,);
_29 = [_12,_17.fld5.1,_12,_12,_17.fld5.1];
_24 = (875955038_u32,);
_6 = _20.fld2 + _2;
_20.fld3 = !0_u8;
match _19.fld0.1 {
0 => bb3,
30608 => bb8,
_ => bb7
}
}
bb7 = {
(*RET) = core::ptr::addr_of!(_1.0);
_17.fld7 = !86583767143097025895006483239058195026_i128;
_3 = 14335470_i32 | 227825492_i32;
(*RET) = core::ptr::addr_of!(_20.fld6.3);
_20.fld2 = _11 as isize;
_20.fld4 = [_5,_5,_5,_12,_5];
_20.fld0 = _18;
_20.fld6.2.2 = _19.fld0.2;
_12 = !_5;
_22 = _17.fld7 + _17.fld7;
_17.fld2 = core::ptr::addr_of_mut!(_9);
_2 = -_13;
(*RET) = core::ptr::addr_of!(_1.0);
_17.fld4 = core::ptr::addr_of!(_20.fld6.3);
Goto(bb2)
}
bb8 = {
_20.fld4 = [_5,_12,_12,_12,_12];
_17.fld5.2 = _12 as i16;
_17.fld5.3 = _17.fld5.2 as i8;
_30 = (_20.fld6.2.0, _19.fld0.1, _21, _17.fld5.2);
_25.fld0 = Adt61 { fld0: _17.fld5.0 };
Goto(bb9)
}
bb9 = {
_32 = _24.0 as f64;
_13 = -_6;
_35 = core::ptr::addr_of!(_30.0);
_20.fld5 = core::ptr::addr_of_mut!(_35);
_30.3 = _17.fld5.2 & _20.fld6.2.3;
_20.fld6.2.3 = _17.fld5.3 as i16;
_17.fld0 = _14 | _14;
RET = core::ptr::addr_of_mut!((*RET));
_21 = _20.fld6.2.2;
_24.0 = 4249604072_u32 << _6;
_20.fld6.0 = _2 < _13;
_38 = -_32;
Goto(bb10)
}
bb10 = {
_17.fld5.3 = (-48_i8);
_20.fld6 = (_17.fld0, _11, _19.fld0, _1.0);
_26 = 66624783327220992210069238279762543058_u128 as f32;
(*RET) = core::ptr::addr_of!(_39);
_20.fld6.1 = !_11;
RET = core::ptr::addr_of_mut!((*RET));
_35 = core::ptr::addr_of!(_19.fld0.0);
_39 = [_24.0];
_40.0 = _18;
_20.fld6.3 = _39;
_30 = (_26, _19.fld0.1, _21, _20.fld6.2.3);
_3 = !(-248537866_i32);
_17.fld5.0 = [_3,_3,_3,_3,_3,_3,_3];
_40.2 = _21;
_17.fld5 = (_25.fld0.fld0, _12, _30.3, 73_i8);
_28 = _20.fld6.3;
_17.fld5.0 = [_3,_3,_3,_3,_3,_3,_3];
_30.0 = -(*_35);
_41 = _10 <= _23;
_20.fld3 = !88_u8;
_1 = (_39,);
_20.fld2 = _8 & _6;
_39 = [_24.0];
_17.fld1 = core::ptr::addr_of_mut!(_20.fld3);
_17.fld1 = core::ptr::addr_of_mut!(_20.fld3);
_17.fld5 = (_25.fld0.fld0, _5, _19.fld0.3, 84_i8);
_34 = _11 as f64;
_23 = 115306177939526256507146739897021327614_u128 as usize;
Call(_16 = fn12(_29, _17.fld5.3, _3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_30 = _20.fld6.2;
_33 = _20.fld2 & _20.fld2;
_13 = _33;
_30.3 = _5 as i16;
(*_35) = _17.fld5.3 as f32;
_29 = _20.fld4;
_37 = core::ptr::addr_of_mut!(_17.fld4);
_17.fld5.0 = [_3,_3,_3,_3,_3,_3,_3];
_19.fld0 = (_20.fld6.2.0, _20.fld6.2.1, _30.2, _17.fld5.2);
_20.fld6.0 = _41;
_17.fld5.3 = !113_i8;
Goto(bb12)
}
bb12 = {
_38 = -_34;
_40.3 = _17.fld5.2;
_38 = _32;
_17.fld6 = _20.fld6.1;
_17.fld7 = _22 * _22;
_20.fld6.2 = (_19.fld0.0, _30.1, _30.2, _30.3);
_20.fld3 = 7_u8 % 165_u8;
_45.2.3 = !_20.fld6.2.3;
Goto(bb13)
}
bb13 = {
_24 = (_16,);
_13 = -_2;
_5 = _12 % 5573053642816747742_u64;
_35 = core::ptr::addr_of!(_18);
_46 = _3 as u32;
(*_37) = core::ptr::addr_of!(_1.0);
_21 = _40.2;
(*_35) = _26;
_26 = _19.fld0.0 * (*_35);
Call(_28 = core::intrinsics::transmute(_20.fld6.2.2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_17.fld5.3 = _30.1 as i8;
_36 = core::ptr::addr_of!(_17.fld1);
_36 = core::ptr::addr_of!((*_36));
_45.2.3 = _3 as i16;
_11 = _20.fld6.1;
_45.2.3 = _17.fld5.2 >> _22;
_26 = _30.0;
_20.fld2 = _4 << _33;
_20.fld6.2 = _30;
_20.fld6.0 = !_41;
(*RET) = core::ptr::addr_of!(_49.3);
_45.2 = _30;
_40.3 = -_17.fld5.2;
_45.3 = [_46];
(*_37) = core::ptr::addr_of!(_45.3);
_25.fld0.fld0 = _17.fld5.0;
_40.3 = _21 as i16;
_44 = _32 as isize;
Goto(bb15)
}
bb15 = {
Call(_52 = dump_var(11_usize, 4_usize, Move(_4), 24_usize, Move(_24), 44_usize, Move(_44), 5_usize, Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_52 = dump_var(11_usize, 28_usize, Move(_28), 21_usize, Move(_21), 12_usize, Move(_12), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_52 = dump_var(11_usize, 29_usize, Move(_29), 1_usize, Move(_1), 33_usize, Move(_33), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_52 = dump_var(11_usize, 8_usize, Move(_8), 53_usize, _53, 53_usize, _53, 53_usize, _53), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [u64; 5],mut _2: i8,mut _3: i32) -> u32 {
mir! {
type RET = u32;
let _4: [i32; 7];
let _5: f64;
let _6: *mut i128;
let _7: *const f32;
let _8: char;
let _9: [u8; 1];
let _10: bool;
let _11: [i32; 6];
let _12: char;
let _13: u16;
let _14: Adt52;
let _15: bool;
let _16: Adt63;
let _17: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _18: bool;
let _19: [u8; 1];
let _20: ();
let _21: ();
{
RET = !1122920129_u32;
RET = 2639702436_u32;
RET = 1287433775_u32 >> _2;
RET = 2068588991_u32;
_2 = -8_i8;
_2 = !101_i8;
RET = 792723484_u32 + 4188950116_u32;
Call(_3 = fn13(_1, _2, _1, _2, _1, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
Goto(bb2)
}
bb2 = {
RET = 17_isize as u32;
_4 = [_3,_3,_3,_3,_3,_3,_3];
_5 = (-127299586304470036261131812692367702571_i128) as f64;
_4 = [_3,_3,_3,_3,_3,_3,_3];
_9 = [115_u8];
_8 = '\u{7256a}';
_4 = [_3,_3,_3,_3,_3,_3,_3];
RET = 601282170_u32 * 1576706809_u32;
Goto(bb3)
}
bb3 = {
_9 = [222_u8];
RET = 1899093929_u32 % 907419839_u32;
_2 = !15_i8;
_8 = '\u{cae09}';
_9 = [176_u8];
_10 = !true;
_10 = true;
Goto(bb4)
}
bb4 = {
RET = 6821146336771574312_i64 as u32;
_11 = [_3,_3,_3,_3,_3,_3];
_15 = _10;
_2 = 36_i8;
match _2 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
36 => bb10,
_ => bb9
}
}
bb5 = {
_9 = [222_u8];
RET = 1899093929_u32 % 907419839_u32;
_2 = !15_i8;
_8 = '\u{cae09}';
_9 = [176_u8];
_10 = !true;
_10 = true;
Goto(bb4)
}
bb6 = {
RET = 17_isize as u32;
_4 = [_3,_3,_3,_3,_3,_3,_3];
_5 = (-127299586304470036261131812692367702571_i128) as f64;
_4 = [_3,_3,_3,_3,_3,_3,_3];
_9 = [115_u8];
_8 = '\u{7256a}';
_4 = [_3,_3,_3,_3,_3,_3,_3];
RET = 601282170_u32 * 1576706809_u32;
Goto(bb3)
}
bb7 = {
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14.fld4 = [12604_u16];
RET = _8 as u32;
_13 = !21430_u16;
_14.fld3 = _2;
_8 = '\u{10841f}';
_1 = [13198981006087904292_u64,12878311192824296988_u64,5353752126832573225_u64,2614277336482635842_u64,5881984142307840626_u64];
_5 = (-18186_i16) as f64;
_16.fld3 = core::ptr::addr_of!(_10);
_14.fld1.0 = (-57172943538172097184082303615525068689_i128);
match _14.fld1.0 {
0 => bb9,
1 => bb8,
2 => bb5,
3 => bb11,
283109423382766366279292303816243142767 => bb13,
_ => bb12
}
}
bb11 = {
_9 = [222_u8];
RET = 1899093929_u32 % 907419839_u32;
_2 = !15_i8;
_8 = '\u{cae09}';
_9 = [176_u8];
_10 = !true;
_10 = true;
Goto(bb4)
}
bb12 = {
RET = 6821146336771574312_i64 as u32;
_11 = [_3,_3,_3,_3,_3,_3];
_15 = _10;
_2 = 36_i8;
match _2 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
36 => bb10,
_ => bb9
}
}
bb13 = {
_16.fld1 = _5 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000559027187002094_f64);
_12 = _8;
_17.2.3 = _13 as i16;
_17.2.0 = 18345647473775197813_u64 as f32;
_17.2.3 = _13 as i16;
_17.0 = _13 < _13;
_16.fld0 = Adt61 { fld0: _4 };
_2 = -_14.fld3;
_7 = core::ptr::addr_of!(_17.2.0);
match _14.fld1.0 {
0 => bb14,
283109423382766366279292303816243142767 => bb16,
_ => bb15
}
}
bb14 = {
RET = 17_isize as u32;
_4 = [_3,_3,_3,_3,_3,_3,_3];
_5 = (-127299586304470036261131812692367702571_i128) as f64;
_4 = [_3,_3,_3,_3,_3,_3,_3];
_9 = [115_u8];
_8 = '\u{7256a}';
_4 = [_3,_3,_3,_3,_3,_3,_3];
RET = 601282170_u32 * 1576706809_u32;
Goto(bb3)
}
bb15 = {
_9 = [222_u8];
RET = 1899093929_u32 % 907419839_u32;
_2 = !15_i8;
_8 = '\u{cae09}';
_9 = [176_u8];
_10 = !true;
_10 = true;
Goto(bb4)
}
bb16 = {
_16.fld2 = !_13;
Goto(bb17)
}
bb17 = {
Call(_20 = dump_var(12_usize, 11_usize, Move(_11), 12_usize, Move(_12), 10_usize, Move(_10), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_20 = dump_var(12_usize, 15_usize, Move(_15), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: [u64; 5],mut _2: i8,mut _3: [u64; 5],mut _4: i8,mut _5: [u64; 5],mut _6: i8) -> i32 {
mir! {
type RET = i32;
let _7: char;
let _8: Adt53;
let _9: isize;
let _10: Adt62;
let _11: Adt65;
let _12: Adt61;
let _13: i8;
let _14: Adt63;
let _15: *const [i32; 6];
let _16: isize;
let _17: Adt57;
let _18: Adt54;
let _19: (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _20: ([u16; 1], bool, isize);
let _21: i64;
let _22: (i128, i32);
let _23: u32;
let _24: u64;
let _25: char;
let _26: Adt60;
let _27: Adt61;
let _28: [i32; 6];
let _29: *mut [u16; 1];
let _30: Adt51;
let _31: u128;
let _32: *mut [u16; 1];
let _33: Adt58;
let _34: bool;
let _35: ([i32; 7], u64, i16, i8);
let _36: [u16; 1];
let _37: ();
let _38: ();
{
RET = 858415558_i32;
_5 = [8314773605968767556_u64,17666384085601680519_u64,9075661072679248953_u64,1351126269198015970_u64,11123093569576836388_u64];
_4 = (-1939008888_i32) as i8;
_6 = !_2;
_1 = [9982282539162508528_u64,15507724460681100569_u64,8253058788194148874_u64,2283451319037880253_u64,12943191204650409519_u64];
_5 = [3497943294415834782_u64,12681543511675151184_u64,17360604119308717615_u64,10304818207006046336_u64,11339059182812797192_u64];
RET = -1797566239_i32;
RET = (-212107804_i32);
_5 = _1;
_2 = _6;
RET = 144359975_i32 + (-298443759_i32);
_2 = (-9223372036854775808_isize) as i8;
RET = -459906522_i32;
RET = -(-279074806_i32);
_5 = [12976287758841026424_u64,15858634965673623694_u64,5223337999943207405_u64,15057139299464267614_u64,16001727011290754314_u64];
_5 = [15488062878442902729_u64,9109254718312706249_u64,17951148616028246695_u64,100308715292772518_u64,2753887872268655280_u64];
RET = !(-1640669172_i32);
RET = (-2061588207_i32);
_3 = [12422488311957914187_u64,11868671396407928473_u64,2558567804417877416_u64,6621193546595981593_u64,4009183357223360060_u64];
_7 = '\u{184b6}';
_7 = '\u{1071fa}';
_5 = [15505280895398185606_u64,3345874857215501643_u64,8929754802214808359_u64,19596413807433235_u64,13112872432580217029_u64];
_8.fld2 = [405539886_i32,(-604069872_i32),(-529766184_i32),(-687410197_i32),(-676704100_i32),1336599370_i32];
_6 = _4;
Goto(bb1)
}
bb1 = {
_1 = [6399338963632973528_u64,17932700282957395031_u64,12017746577757616675_u64,10993516856710054060_u64,542601915601052858_u64];
RET = !798846102_i32;
_9 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_3 = [9597616551160278088_u64,13989407988070291260_u64,4371608751665721030_u64,13554079468512456675_u64,1379445832666958049_u64];
_1 = [2817669861575464545_u64,5748166796155732161_u64,1160512610460859823_u64,11054018477770338242_u64,2231335352822600967_u64];
RET = -1871776602_i32;
RET = 739912618_i32 * (-247293688_i32);
_8.fld1 = _9 as f32;
_1 = _5;
_9 = (-34_isize);
Goto(bb2)
}
bb2 = {
_1 = [3370590497667443711_u64,9302380850227814604_u64,3856394516538343058_u64,9029817489657846344_u64,16123298493267247532_u64];
_6 = !_4;
RET = (-1065968997_i32) & 346335592_i32;
_8.fld2 = [1419643536_i32,1346555730_i32,1223843501_i32,(-648488464_i32),(-248176010_i32),498113387_i32];
_1 = [14830950662143418269_u64,4894437216133873437_u64,14376833916515696358_u64,1003865945397122144_u64,11583958997140870008_u64];
_8.fld2 = [1933933029_i32,(-1934849940_i32),904166317_i32,(-312529600_i32),(-1025820154_i32),(-2145150399_i32)];
_10.fld2.0 = [36470_u16];
_10.fld3.fld2 = core::ptr::addr_of_mut!(_10.fld3.fld4);
_3 = [17042077199577234175_u64,13714643711936581280_u64,7060915858423075058_u64,630779033531263906_u64,3108569962397752064_u64];
_7 = '\u{be87b}';
_8.fld2 = [(-1947662074_i32),(-53985556_i32),(-434134217_i32),(-2010184111_i32),(-1581591753_i32),(-52017982_i32)];
_10.fld3.fld1.0 = !(-156785311929456231383376514168771961350_i128);
_8.fld0 = [198_u8];
_10.fld4 = false as i16;
_14.fld0.fld0 = [716549537_i32,573853744_i32,(-78395287_i32),(-138145580_i32),1045273333_i32,1296727739_i32,492851411_i32];
_3 = [3612446714792150983_u64,1071938487608496960_u64,16332679327579071909_u64,18280896963560651421_u64,9206722028390304206_u64];
_2 = -_4;
_10.fld3.fld1.1 = !(-2074678944_i32);
_14.fld3 = core::ptr::addr_of!(_10.fld2.1);
_10.fld4 = !(-9097_i16);
_8.fld2 = [_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1];
_17.fld0.2 = _7;
_8.fld0 = [36_u8];
match _9 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431768211422 => bb9,
_ => bb8
}
}
bb3 = {
_1 = [6399338963632973528_u64,17932700282957395031_u64,12017746577757616675_u64,10993516856710054060_u64,542601915601052858_u64];
RET = !798846102_i32;
_9 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_3 = [9597616551160278088_u64,13989407988070291260_u64,4371608751665721030_u64,13554079468512456675_u64,1379445832666958049_u64];
_1 = [2817669861575464545_u64,5748166796155732161_u64,1160512610460859823_u64,11054018477770338242_u64,2231335352822600967_u64];
RET = -1871776602_i32;
RET = 739912618_i32 * (-247293688_i32);
_8.fld1 = _9 as f32;
_1 = _5;
_9 = (-34_isize);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14.fld2 = 25861_u16 & 61513_u16;
_1 = _3;
_10.fld3.fld4 = [_14.fld2];
_18.fld0.1.1 = _9 as u64;
_7 = _17.fld0.2;
_10.fld3.fld0 = core::ptr::addr_of_mut!(_18.fld2);
_14.fld3 = core::ptr::addr_of!(_10.fld2.1);
_11 = Adt65 { fld0: _14.fld0 };
_12 = Adt61 { fld0: _11.fld0.fld0 };
_18.fld0.2 = _10.fld3.fld1.0;
_19.1.2 = _10.fld4 | _10.fld4;
_10.fld4 = _19.1.2 >> _14.fld2;
_17.fld0.0 = -_8.fld1;
_12 = _14.fld0;
_11 = Adt65 { fld0: _14.fld0 };
_18.fld0.1.0 = [_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1];
_19.0 = core::ptr::addr_of_mut!(_10.fld0);
_14.fld1 = _2 as f64;
_12 = Adt61 { fld0: _14.fld0.fld0 };
_19.1 = (_11.fld0.fld0, _18.fld0.1.1, _10.fld4, _6);
_14.fld3 = core::ptr::addr_of!(_10.fld2.1);
_11 = Adt65 { fld0: _12 };
_19.1.2 = _10.fld4 + _10.fld4;
_11 = Adt65 { fld0: _14.fld0 };
Call(_17.fld1 = fn14(_14.fld0, Move(_11), _1, _14.fld2, _10.fld3.fld1.1, _19.1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_13 = _2;
_19.3 = false as u64;
_18.fld0.1.1 = (-5580063624708506218_i64) as u64;
_10.fld2.0 = [_14.fld2];
_17.fld0.1 = _14.fld2;
_20 = (_10.fld2.0, true, _9);
_22 = (_10.fld3.fld1.0, _10.fld3.fld1.1);
_17.fld1 = core::ptr::addr_of!(_20.1);
_14.fld0 = Adt61 { fld0: _19.1.0 };
_15 = core::ptr::addr_of!(_8.fld2);
_8.fld1 = 7288795688557531521_i64 as f32;
_18.fld0.1.1 = _7 as u64;
_3 = [_18.fld0.1.1,_19.1.1,_19.3,_18.fld0.1.1,_19.1.1];
_10.fld2.0 = [_14.fld2];
_10.fld1 = core::ptr::addr_of!(_18.fld0);
_19.2 = _10.fld3.fld1.0;
_8.fld1 = _17.fld0.0 + _17.fld0.0;
_15 = core::ptr::addr_of!((*_15));
_18.fld0.1.0 = _19.1.0;
_18.fld0.0 = core::ptr::addr_of_mut!(_18.fld0.2);
_20.0 = _10.fld2.0;
_5 = _1;
_17.fld0 = (_8.fld1, _14.fld2, _7, _10.fld4);
_17.fld0.2 = _7;
_18.fld0.1 = (_12.fld0, _19.3, _19.1.2, _2);
_8.fld0 = [13_u8];
_14.fld2 = !_17.fld0.1;
Goto(bb11)
}
bb11 = {
_9 = _20.2;
_19.3 = !_19.1.1;
(*_15) = [_22.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_22.1,_10.fld3.fld1.1];
_10.fld0 = _10.fld3.fld1.0;
_19.1 = (_18.fld0.1.0, _19.3, _18.fld0.1.2, _2);
_20.1 = false ^ false;
_10.fld2.2 = _20.1 as isize;
_21 = 2222828957505173665_i64;
_23 = !2981936195_u32;
_9 = _20.2 & _10.fld2.2;
_18.fld0 = (_19.0, _19.1, _10.fld0, _19.3);
_22.0 = _18.fld0.2 << _18.fld0.1.2;
_10.fld2.1 = _20.1;
_3 = [_19.1.1,_18.fld0.3,_19.1.1,_18.fld0.1.1,_19.3];
_8.fld0 = [44_u8];
_14.fld3 = core::ptr::addr_of!(_10.fld2.1);
_20.0 = [_17.fld0.1];
_3 = _5;
_18.fld0.1.1 = _19.1.1 * _18.fld0.3;
_26.fld1.fld0.2 = _22.0 * _22.0;
_25 = _17.fld0.2;
_14.fld0.fld0 = _12.fld0;
_19.1.1 = _18.fld0.1.1;
Goto(bb12)
}
bb12 = {
_8.fld0 = [83_u8];
_26.fld1.fld0.1 = _18.fld0.1;
_12 = Adt61 { fld0: _19.1.0 };
_8.fld1 = _21 as f32;
_10.fld3.fld4 = [_17.fld0.1];
_17.fld0.3 = !_18.fld0.1.2;
_25 = _17.fld0.2;
_26.fld0 = _21;
_10.fld3.fld3 = _19.1.3;
Call(_10.fld3.fld1.0 = core::intrinsics::transmute(_18.fld0.2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_26.fld1.fld0 = (_19.0, _19.1, _22.0, _19.3);
_10.fld3.fld1 = (_26.fld1.fld0.2, _22.1);
_10.fld2 = (_20.0, _20.1, _9);
_6 = _2 + _2;
_16 = _14.fld1 as isize;
_10.fld3.fld1 = (_26.fld1.fld0.2, _22.1);
_10.fld3.fld1 = (_22.0, _22.1);
_22.0 = _26.fld1.fld0.2 + _26.fld1.fld0.2;
_18.fld0.1.2 = -_19.1.2;
_18.fld0.1.0 = _19.1.0;
_26.fld1.fld0.3 = !_18.fld0.1.1;
(*_15) = [_22.1,_10.fld3.fld1.1,_22.1,_10.fld3.fld1.1,_22.1,_10.fld3.fld1.1];
_14.fld2 = !_17.fld0.1;
_20.1 = !_10.fld2.1;
_26.fld1.fld0.1 = _19.1;
_19.1.2 = _17.fld0.3 + _10.fld4;
_26.fld1.fld0.1 = (_12.fld0, _26.fld1.fld0.3, _17.fld0.3, _10.fld3.fld3);
Goto(bb14)
}
bb14 = {
_29 = core::ptr::addr_of_mut!(_10.fld3.fld4);
_26.fld1.fld0.1.0 = [_10.fld3.fld1.1,_22.1,_10.fld3.fld1.1,_22.1,_10.fld3.fld1.1,_10.fld3.fld1.1,_10.fld3.fld1.1];
_8.fld0 = [201_u8];
_1 = [_19.3,_26.fld1.fld0.3,_19.3,_19.1.1,_19.1.1];
_18.fld0.3 = !_26.fld1.fld0.3;
_10.fld3.fld1.0 = 327708733002076005735981979326413558775_u128 as i128;
_26.fld1.fld0.1 = (_14.fld0.fld0, _18.fld0.3, _18.fld0.1.2, _4);
_27 = Adt61 { fld0: _19.1.0 };
_19.1.1 = _18.fld0.1.1;
_20.2 = -_9;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(13_usize, 1_usize, Move(_1), 23_usize, Move(_23), 2_usize, Move(_2), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(13_usize, 22_usize, Move(_22), 5_usize, Move(_5), 21_usize, Move(_21), 38_usize, _38), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: Adt61,mut _2: Adt65,mut _3: [u64; 5],mut _4: u16,mut _5: i32,mut _6: ([i32; 7], u64, i16, i8)) -> *const bool {
mir! {
type RET = *const bool;
let _7: char;
let _8: Adt62;
let _9: [i32; 6];
let _10: f64;
let _11: [u16; 1];
let _12: Adt53;
let _13: [u32; 1];
let _14: Adt53;
let _15: (f32, u16, char, i16);
let _16: Adt62;
let _17: *const (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _18: char;
let _19: (([u32; 1],), u32, u16, u64);
let _20: [char; 4];
let _21: Adt61;
let _22: u32;
let _23: bool;
let _24: isize;
let _25: f32;
let _26: u16;
let _27: [i32; 7];
let _28: [char; 5];
let _29: [u32; 1];
let _30: [u32; 1];
let _31: bool;
let _32: [u16; 1];
let _33: *mut (([u32; 1],), u32, u16, u64);
let _34: [u32; 1];
let _35: Adt58;
let _36: (u32,);
let _37: Adt58;
let _38: u64;
let _39: Adt53;
let _40: i32;
let _41: *mut *const f32;
let _42: Adt60;
let _43: [i128; 4];
let _44: isize;
let _45: [u64; 5];
let _46: *const *mut u8;
let _47: *const (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _48: bool;
let _49: *mut i128;
let _50: (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _51: u128;
let _52: [i32; 7];
let _53: *mut *const f32;
let _54: f64;
let _55: Adt61;
let _56: u16;
let _57: ();
let _58: ();
{
_3 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_6.0 = _1.fld0;
_3 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_3 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_6.0 = [_5,_5,_5,_5,_5,_5,_5];
_7 = '\u{bf484}';
_8.fld4 = _6.2;
Goto(bb1)
}
bb1 = {
_9 = [_5,_5,_5,_5,_5,_5];
_8.fld2.1 = true;
_6.2 = _5 as i16;
_8.fld3.fld3 = _6.1 as i8;
_8.fld3.fld1.1 = _7 as i32;
_8.fld3.fld1 = ((-86108342571496485534345300056294614947_i128), _5);
_8.fld2.0 = [_4];
_7 = '\u{b1c7a}';
_8.fld2.1 = !false;
_6.2 = _8.fld4;
_8.fld3.fld4 = [_4];
_6.1 = 0_usize as u64;
_7 = '\u{12ddb}';
_8.fld3.fld1.0 = (-15406802245561631124754412537074670813_i128);
_8.fld2.0 = _8.fld3.fld4;
_8.fld2.0 = _8.fld3.fld4;
_8.fld2.2 = -34_isize;
Call(_8.fld3 = fn15(_6, _8.fld2.1, _8.fld2.0, _1, _4, _8.fld2.1, _6.1, _8.fld2, _8.fld2.2, _3, _6.0, _8.fld2.1, Move(_2), _7, _8.fld2.2, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8.fld3.fld2 = core::ptr::addr_of_mut!(_8.fld2.0);
_8.fld0 = -_8.fld3.fld1.0;
_6.3 = _8.fld3.fld3 & _8.fld3.fld3;
_8.fld0 = _8.fld3.fld1.0;
Goto(bb3)
}
bb3 = {
RET = core::ptr::addr_of!(_8.fld2.1);
Goto(bb4)
}
bb4 = {
(*RET) = !false;
_1 = Adt61 { fld0: _6.0 };
_6.2 = _8.fld4 ^ _8.fld4;
_8.fld3.fld1.0 = _8.fld0;
_6.1 = !10067457886336116421_u64;
_8.fld2.0 = _8.fld3.fld4;
_12.fld1 = _8.fld3.fld3 as f32;
_6.3 = -_8.fld3.fld3;
Call(_8.fld2.2 = core::intrinsics::transmute(_6.1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_15.2 = _7;
_15.3 = 3501701842337333767_i64 as i16;
_6 = (_1.fld0, 16042521199969244854_u64, _8.fld4, _8.fld3.fld3);
_14.fld2 = [_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1];
_10 = _8.fld3.fld3 as f64;
_16.fld0 = _8.fld3.fld1.0 >> _8.fld4;
_19.1 = !346111147_u32;
_18 = _7;
(*RET) = _8.fld2.2 > _8.fld2.2;
_1.fld0 = _6.0;
_7 = _18;
_8.fld4 = _15.2 as i16;
_19.1 = 124183405017798467156441815166875882762_u128 as u32;
_8.fld2.0 = [_4];
RET = core::ptr::addr_of!(_16.fld2.1);
_3 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_8.fld3.fld2 = core::ptr::addr_of_mut!(_8.fld2.0);
(*RET) = _8.fld0 <= _16.fld0;
Goto(bb6)
}
bb6 = {
_16.fld3.fld1.1 = _8.fld4 as i32;
_16.fld4 = _6.2 << _16.fld0;
_6.2 = _16.fld4;
_16.fld3.fld1.1 = _8.fld3.fld1.1;
_8.fld2.2 = _10 as isize;
_16.fld3.fld1.0 = _12.fld1 as i128;
_16.fld3.fld2 = _8.fld3.fld2;
_16.fld2 = (_8.fld3.fld4, _8.fld2.1, _8.fld2.2);
_12.fld0 = [80_u8];
_14.fld1 = 40199009817798465492524641319849810962_u128 as f32;
_16.fld2.0 = _8.fld3.fld4;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld2.0);
_15.0 = _12.fld1;
Goto(bb7)
}
bb7 = {
_3 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_6.0 = _1.fld0;
_19.3 = _6.1 | _6.1;
_23 = (*RET) ^ _16.fld2.1;
_16.fld3.fld4 = _8.fld2.0;
_14.fld2 = [_16.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_16.fld3.fld1.1,_8.fld3.fld1.1];
(*RET) = !_8.fld2.1;
_11 = [_4];
_21 = Adt61 { fld0: _6.0 };
_21.fld0 = [_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_16.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1];
_15.1 = _16.fld4 as u16;
_13 = [_19.1];
_28 = [_18,_18,_15.2,_15.2,_18];
(*RET) = !_23;
_26 = _6.2 as u16;
match _8.fld3.fld1.0 {
0 => bb1,
158099857233961680325473280554057054693 => bb8,
_ => bb6
}
}
bb8 = {
_13 = [_19.1];
_8.fld2.0 = [_26];
_19.0 = (_13,);
_39.fld1 = -_12.fld1;
_16.fld3.fld4 = [_26];
_6.0 = _21.fld0;
_35.fld2 = core::ptr::addr_of!(_42.fld1.fld0);
_8.fld3.fld4 = _8.fld2.0;
_39.fld0 = _12.fld0;
_37.fld0 = _16.fld2.1 & _16.fld2.1;
_42.fld1.fld0.1.0 = [_16.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1,_8.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1];
RET = core::ptr::addr_of!(_23);
_39 = Adt53 { fld0: _12.fld0,fld1: _14.fld1,fld2: _14.fld2 };
_40 = _16.fld3.fld1.1;
_18 = _15.2;
Goto(bb9)
}
bb9 = {
_19.3 = _6.1 / 8644443844958771517_u64;
_42.fld1.fld1 = core::ptr::addr_of_mut!(_42.fld1.fld2);
_22 = _7 as u32;
_31 = !_37.fld0;
_21.fld0 = [_8.fld3.fld1.1,_40,_40,_40,_8.fld3.fld1.1,_16.fld3.fld1.1,_8.fld3.fld1.1];
_14.fld0 = [127_u8];
_16.fld3.fld1.0 = -_8.fld0;
_35.fld1 = _8.fld3.fld2;
RET = core::ptr::addr_of!(_8.fld2.1);
_8.fld3.fld4 = [_26];
_19.0 = (_13,);
_36 = (_22,);
_42.fld1.fld0.3 = _6.1 << _16.fld3.fld1.1;
_16.fld3.fld4 = _8.fld2.0;
_31 = _16.fld2.1;
_39.fld1 = _14.fld1 * _12.fld1;
_15 = (_14.fld1, _26, _7, _16.fld4);
_16.fld3.fld0 = core::ptr::addr_of_mut!(_42.fld1.fld2);
_8.fld3.fld1.1 = !_40;
_15 = (_14.fld1, _26, _18, _16.fld4);
Goto(bb10)
}
bb10 = {
_37 = Adt58 { fld0: _23,fld1: _8.fld3.fld2,fld2: _35.fld2 };
(*RET) = _37.fld0;
_12.fld1 = _39.fld1;
_36 = (_19.1,);
_42.fld1.fld0.1.2 = -_6.2;
_37 = Adt58 { fld0: _31,fld1: _8.fld3.fld2,fld2: _35.fld2 };
_27 = _6.0;
_16.fld1 = _35.fld2;
_39.fld1 = -_12.fld1;
_8.fld3.fld3 = _31 as i8;
_8.fld2 = (_16.fld3.fld4, _31, _16.fld2.2);
_44 = -_16.fld2.2;
_12.fld2 = [_16.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1,_40,_8.fld3.fld1.1,_40];
_17 = core::ptr::addr_of!(_42.fld1.fld0);
_19.2 = _26;
_15.0 = _42.fld1.fld0.3 as f32;
_24 = -_44;
_15.0 = _39.fld1 / 0.000000000000000000000000000000000000004555698378935518_f32;
_42.fld1.fld0.1.2 = -_6.2;
(*_17).0 = core::ptr::addr_of_mut!((*_17).2);
_47 = _37.fld2;
_28 = [_18,_15.2,_7,_18,_18];
_20 = [_7,_15.2,_18,_18];
_17 = _35.fld2;
Goto(bb11)
}
bb11 = {
_43 = [_16.fld0,_8.fld0,_8.fld0,_16.fld0];
(*_47).1.1 = _42.fld1.fld0.3 >> (*_47).3;
_37 = Adt58 { fld0: _8.fld2.1,fld1: _8.fld3.fld2,fld2: _16.fld1 };
_35 = Move(_37);
_16.fld1 = core::ptr::addr_of!(_50);
_6.3 = _8.fld3.fld3 * _8.fld3.fld3;
_19.3 = (*_47).3 & (*_47).3;
_5 = _40;
_42.fld0 = 5819504860255943209_i64 >> _42.fld1.fld0.1.1;
(*_17).1.2 = (*_47).1.1 as i16;
_19.3 = !(*_47).3;
match _8.fld0 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
158099857233961680325473280554057054693 => bb20,
_ => bb19
}
}
bb12 = {
_37 = Adt58 { fld0: _23,fld1: _8.fld3.fld2,fld2: _35.fld2 };
(*RET) = _37.fld0;
_12.fld1 = _39.fld1;
_36 = (_19.1,);
_42.fld1.fld0.1.2 = -_6.2;
_37 = Adt58 { fld0: _31,fld1: _8.fld3.fld2,fld2: _35.fld2 };
_27 = _6.0;
_16.fld1 = _35.fld2;
_39.fld1 = -_12.fld1;
_8.fld3.fld3 = _31 as i8;
_8.fld2 = (_16.fld3.fld4, _31, _16.fld2.2);
_44 = -_16.fld2.2;
_12.fld2 = [_16.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1,_40,_8.fld3.fld1.1,_40];
_17 = core::ptr::addr_of!(_42.fld1.fld0);
_19.2 = _26;
_15.0 = _42.fld1.fld0.3 as f32;
_24 = -_44;
_15.0 = _39.fld1 / 0.000000000000000000000000000000000000004555698378935518_f32;
_42.fld1.fld0.1.2 = -_6.2;
(*_17).0 = core::ptr::addr_of_mut!((*_17).2);
_47 = _37.fld2;
_28 = [_18,_15.2,_7,_18,_18];
_20 = [_7,_15.2,_18,_18];
_17 = _35.fld2;
Goto(bb11)
}
bb13 = {
_8.fld3.fld2 = core::ptr::addr_of_mut!(_8.fld2.0);
_8.fld0 = -_8.fld3.fld1.0;
_6.3 = _8.fld3.fld3 & _8.fld3.fld3;
_8.fld0 = _8.fld3.fld1.0;
Goto(bb3)
}
bb14 = {
_13 = [_19.1];
_8.fld2.0 = [_26];
_19.0 = (_13,);
_39.fld1 = -_12.fld1;
_16.fld3.fld4 = [_26];
_6.0 = _21.fld0;
_35.fld2 = core::ptr::addr_of!(_42.fld1.fld0);
_8.fld3.fld4 = _8.fld2.0;
_39.fld0 = _12.fld0;
_37.fld0 = _16.fld2.1 & _16.fld2.1;
_42.fld1.fld0.1.0 = [_16.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1,_8.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1,_16.fld3.fld1.1];
RET = core::ptr::addr_of!(_23);
_39 = Adt53 { fld0: _12.fld0,fld1: _14.fld1,fld2: _14.fld2 };
_40 = _16.fld3.fld1.1;
_18 = _15.2;
Goto(bb9)
}
bb15 = {
_9 = [_5,_5,_5,_5,_5,_5];
_8.fld2.1 = true;
_6.2 = _5 as i16;
_8.fld3.fld3 = _6.1 as i8;
_8.fld3.fld1.1 = _7 as i32;
_8.fld3.fld1 = ((-86108342571496485534345300056294614947_i128), _5);
_8.fld2.0 = [_4];
_7 = '\u{b1c7a}';
_8.fld2.1 = !false;
_6.2 = _8.fld4;
_8.fld3.fld4 = [_4];
_6.1 = 0_usize as u64;
_7 = '\u{12ddb}';
_8.fld3.fld1.0 = (-15406802245561631124754412537074670813_i128);
_8.fld2.0 = _8.fld3.fld4;
_8.fld2.0 = _8.fld3.fld4;
_8.fld2.2 = -34_isize;
Call(_8.fld3 = fn15(_6, _8.fld2.1, _8.fld2.0, _1, _4, _8.fld2.1, _6.1, _8.fld2, _8.fld2.2, _3, _6.0, _8.fld2.1, Move(_2), _7, _8.fld2.2, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_16.fld3.fld1.1 = _8.fld4 as i32;
_16.fld4 = _6.2 << _16.fld0;
_6.2 = _16.fld4;
_16.fld3.fld1.1 = _8.fld3.fld1.1;
_8.fld2.2 = _10 as isize;
_16.fld3.fld1.0 = _12.fld1 as i128;
_16.fld3.fld2 = _8.fld3.fld2;
_16.fld2 = (_8.fld3.fld4, _8.fld2.1, _8.fld2.2);
_12.fld0 = [80_u8];
_14.fld1 = 40199009817798465492524641319849810962_u128 as f32;
_16.fld2.0 = _8.fld3.fld4;
_16.fld3.fld2 = core::ptr::addr_of_mut!(_16.fld2.0);
_15.0 = _12.fld1;
Goto(bb7)
}
bb17 = {
_15.2 = _7;
_15.3 = 3501701842337333767_i64 as i16;
_6 = (_1.fld0, 16042521199969244854_u64, _8.fld4, _8.fld3.fld3);
_14.fld2 = [_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1,_8.fld3.fld1.1];
_10 = _8.fld3.fld3 as f64;
_16.fld0 = _8.fld3.fld1.0 >> _8.fld4;
_19.1 = !346111147_u32;
_18 = _7;
(*RET) = _8.fld2.2 > _8.fld2.2;
_1.fld0 = _6.0;
_7 = _18;
_8.fld4 = _15.2 as i16;
_19.1 = 124183405017798467156441815166875882762_u128 as u32;
_8.fld2.0 = [_4];
RET = core::ptr::addr_of!(_16.fld2.1);
_3 = [_6.1,_6.1,_6.1,_6.1,_6.1];
_8.fld3.fld2 = core::ptr::addr_of_mut!(_8.fld2.0);
(*RET) = _8.fld0 <= _16.fld0;
Goto(bb6)
}
bb18 = {
(*RET) = !false;
_1 = Adt61 { fld0: _6.0 };
_6.2 = _8.fld4 ^ _8.fld4;
_8.fld3.fld1.0 = _8.fld0;
_6.1 = !10067457886336116421_u64;
_8.fld2.0 = _8.fld3.fld4;
_12.fld1 = _8.fld3.fld3 as f32;
_6.3 = -_8.fld3.fld3;
Call(_8.fld2.2 = core::intrinsics::transmute(_6.1), ReturnTo(bb5), UnwindUnreachable())
}
bb19 = {
RET = core::ptr::addr_of!(_8.fld2.1);
Goto(bb4)
}
bb20 = {
(*_17).0 = core::ptr::addr_of_mut!(_50.2);
_42.fld1.fld1 = core::ptr::addr_of_mut!(_42.fld1.fld2);
_50.1.0 = [_16.fld3.fld1.1,_5,_5,_40,_40,_5,_16.fld3.fld1.1];
_50.1 = _6;
_29 = [_36.0];
_17 = core::ptr::addr_of!((*_47));
(*_47).2 = -_8.fld0;
_19.1 = _36.0 ^ _36.0;
_13 = [_36.0];
_52 = _42.fld1.fld0.1.0;
(*_47).1.0 = _50.1.0;
_6.1 = _42.fld1.fld0.3;
_7 = _18;
_21 = Adt61 { fld0: (*_17).1.0 };
_49 = core::ptr::addr_of_mut!((*_47).2);
_32 = [_26];
(*_17).1 = (_27, (*_17).3, _50.1.2, _6.3);
_16.fld3.fld3 = -_50.1.3;
_50 = (*_47);
_25 = _26 as f32;
_35.fld0 = !_16.fld2.1;
_4 = !_19.2;
Goto(bb21)
}
bb21 = {
Call(_57 = dump_var(14_usize, 32_usize, Move(_32), 44_usize, Move(_44), 4_usize, Move(_4), 24_usize, Move(_24)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_57 = dump_var(14_usize, 3_usize, Move(_3), 22_usize, Move(_22), 28_usize, Move(_28), 31_usize, Move(_31)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_57 = dump_var(14_usize, 19_usize, Move(_19), 23_usize, Move(_23), 6_usize, Move(_6), 20_usize, Move(_20)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: ([i32; 7], u64, i16, i8),mut _2: bool,mut _3: [u16; 1],mut _4: Adt61,mut _5: u16,mut _6: bool,mut _7: u64,mut _8: ([u16; 1], bool, isize),mut _9: isize,mut _10: [u64; 5],mut _11: [i32; 7],mut _12: bool,mut _13: Adt65,mut _14: char,mut _15: isize,mut _16: i32) -> Adt52 {
mir! {
type RET = Adt52;
let _17: ([i32; 7], u64, i16, i8);
let _18: i64;
let _19: *mut [u16; 1];
let _20: isize;
let _21: Adt65;
let _22: f32;
let _23: char;
let _24: char;
let _25: *mut [u16; 1];
let _26: ([u32; 1],);
let _27: bool;
let _28: ([u16; 1], bool, isize);
let _29: ([i32; 7], u64, i16, i8);
let _30: [u8; 7];
let _31: i8;
let _32: i32;
let _33: [u64; 5];
let _34: f32;
let _35: Adt56;
let _36: char;
let _37: u16;
let _38: u128;
let _39: i8;
let _40: isize;
let _41: ([i32; 7], u64, i16, i8);
let _42: *mut i128;
let _43: Adt58;
let _44: char;
let _45: Adt57;
let _46: [i32; 7];
let _47: Adt51;
let _48: Adt58;
let _49: ([u32; 1],);
let _50: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _51: *mut (([u32; 1],), u32, u16, u64);
let _52: *mut [u16; 1];
let _53: char;
let _54: ([i32; 7], u64, i16, i8);
let _55: Adt61;
let _56: ([i32; 7], u64, i16, i8);
let _57: [i32; 7];
let _58: *mut u8;
let _59: char;
let _60: i16;
let _61: Adt52;
let _62: bool;
let _63: Adt61;
let _64: *const *mut u8;
let _65: *mut [u16; 1];
let _66: bool;
let _67: *mut bool;
let _68: Adt52;
let _69: Adt54;
let _70: usize;
let _71: bool;
let _72: Adt60;
let _73: f64;
let _74: *mut *const f32;
let _75: ();
let _76: ();
{
RET.fld3 = !_1.3;
_17 = _1;
_17.2 = _1.2;
RET.fld1.0 = 7_usize as i128;
RET.fld4 = [_5];
_4.fld0 = _13.fld0.fld0;
RET.fld1.1 = _16 + _16;
_7 = _16 as u64;
_1 = (_13.fld0.fld0, _17.1, _17.2, _17.3);
RET.fld3 = _1.3 * _1.3;
_12 = _2;
_18 = 945219300517769520_i64 - (-8914461818251476079_i64);
_10 = [_1.1,_1.1,_1.1,_17.1,_7];
_8 = (_3, _12, _9);
_8.0 = _3;
_12 = _1.3 == _1.3;
_16 = -968103717_i32;
_15 = _8.2;
_19 = core::ptr::addr_of_mut!(_3);
_21 = Adt65 { fld0: _13.fld0 };
_9 = -_8.2;
_17.0 = _4.fld0;
RET.fld1.0 = 49308163263692021128379577075596178098_i128;
RET.fld4 = [_5];
_17.0 = [_16,_16,_16,_16,_16,_16,_16];
Goto(bb1)
}
bb1 = {
_4.fld0 = [_16,_16,_16,_16,_16,_16,_16];
Call(_1.1 = core::intrinsics::bswap(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET.fld4 = [_5];
_23 = _14;
_4.fld0 = [_16,_16,_16,_16,_16,_16,_16];
_8.1 = _2;
_10 = [_7,_1.1,_7,_1.1,_7];
_17.1 = _7 * _1.1;
_7 = _17.1;
_12 = !_2;
_1.3 = _17.3 & _17.3;
RET.fld1.0 = -4899144878946882813087058578784922537_i128;
_23 = _14;
RET.fld3 = _17.3 * _1.3;
RET.fld2 = _19;
_8.2 = _15;
RET.fld1 = ((-111847845214306643542143192137961344370_i128), _16);
RET.fld4 = [_5];
_7 = !_17.1;
(*_19) = _8.0;
(*_19) = [_5];
Goto(bb3)
}
bb3 = {
RET.fld1.1 = !_16;
_1.2 = _17.2 & _17.2;
_20 = 121221379955806304441482238424167815621_u128 as isize;
RET.fld4 = [_5];
_6 = !_8.1;
(*_19) = [_5];
_13.fld0 = Adt61 { fld0: _21.fld0.fld0 };
Goto(bb4)
}
bb4 = {
_17.2 = _1.2;
_10 = [_17.1,_17.1,_17.1,_7,_17.1];
_3 = [_5];
_25 = _19;
_8.0 = (*_19);
RET.fld3 = _17.3 << _1.2;
_23 = _14;
_23 = _14;
_10 = [_7,_17.1,_17.1,_7,_17.1];
_1.0 = [_16,_16,_16,_16,_16,_16,_16];
_29.2 = _17.2 - _17.2;
_22 = 140265521918692108902660729638708936530_i128 as f32;
RET.fld1.1 = !_16;
Call(_29 = fn16(_1.0, _1, _5, _17, _13.fld0.fld0, _17.2, _17.0, _1.0, _10, _23, _25), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET.fld2 = _25;
RET.fld1.0 = -70865014689867233418072732984025592220_i128;
_27 = _12;
_1.2 = _17.2 + _29.2;
_31 = _1.3;
_18 = !8512540291743450662_i64;
RET.fld4 = (*_25);
_23 = _14;
_28.1 = _12;
_25 = _19;
Goto(bb6)
}
bb6 = {
_29.0 = [_16,_16,_16,_16,_16,_16,_16];
RET.fld3 = _20 as i8;
_2 = _1.2 > _1.2;
_10 = [_7,_1.1,_7,_7,_1.1];
_13 = Adt65 { fld0: _21.fld0 };
_20 = !_9;
_21.fld0 = Adt61 { fld0: _13.fld0.fld0 };
_5 = !320_u16;
RET.fld1.0 = _2 as i128;
_8.1 = _2 ^ _2;
_4.fld0 = _17.0;
_9 = _8.2 - _20;
_12 = _8.1;
(*_19) = _8.0;
_2 = _8.1;
_33 = [_7,_29.1,_17.1,_7,_7];
RET.fld1.1 = _2 as i32;
_11 = _13.fld0.fld0;
_28.1 = _8.1 ^ _12;
RET.fld2 = core::ptr::addr_of_mut!(_28.0);
_19 = core::ptr::addr_of_mut!(_28.0);
_23 = _14;
_35.fld0.fld6.2.0 = _22 * _22;
(*_19) = [_5];
_6 = !_8.1;
_35.fld0.fld2 = -_9;
Call(_35.fld0.fld6.1 = core::intrinsics::transmute(_7), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_32 = -_16;
_28 = ((*_25), _6, _8.2);
_13.fld0 = Adt61 { fld0: _11 };
_35.fld0.fld0 = _35.fld0.fld6.2.0;
Goto(bb8)
}
bb8 = {
_35.fld0.fld2 = _9 - _9;
_35.fld0.fld6.1 = _18 >> _17.2;
RET.fld1 = ((-71070282969481069884066266006964198362_i128), _32);
_21.fld0 = _13.fld0;
_8.0 = [_5];
_17.1 = _1.2 as u64;
_35.fld0.fld6.3 = [1666418132_u32];
_39 = !_17.3;
_35.fld3.0 = [_5];
_34 = 1221466554_u32 as f32;
_28.0 = [_5];
_35.fld5 = 57252106731543735780153846352898624030_u128 as i32;
Call(_5 = core::intrinsics::bswap(51159_u16), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_17.1 = _29.1 + _7;
_24 = _23;
_45.fld0.3 = !_1.2;
_10 = [_17.1,_17.1,_1.1,_7,_17.1];
_10 = _33;
_36 = _23;
_15 = 1893684569_u32 as isize;
_45.fld0.1 = _5;
_45.fld1 = core::ptr::addr_of!(_12);
_9 = -_35.fld0.fld2;
_35.fld2 = 2_usize;
_8.0 = [_45.fld0.1];
_45.fld0.3 = 47207641269121701885749505161021400742_i128 as i16;
_8.1 = _12;
_43.fld0 = _2;
Goto(bb10)
}
bb10 = {
_41.2 = -_29.2;
_35.fld0.fld6.2 = (_35.fld0.fld0, _5, _14, _17.2);
_17.0 = [_32,_16,_16,_16,_35.fld5,_16,_32];
match _35.fld2 {
0 => bb11,
2 => bb13,
_ => bb12
}
}
bb11 = {
_4.fld0 = [_16,_16,_16,_16,_16,_16,_16];
Call(_1.1 = core::intrinsics::bswap(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
RET.fld2 = _25;
RET.fld1.0 = -70865014689867233418072732984025592220_i128;
_27 = _12;
_1.2 = _17.2 + _29.2;
_31 = _1.3;
_18 = !8512540291743450662_i64;
RET.fld4 = (*_25);
_23 = _14;
_28.1 = _12;
_25 = _19;
Goto(bb6)
}
bb13 = {
RET.fld2 = core::ptr::addr_of_mut!(_3);
_38 = 97246613290380801651225432388095618603_u128 | 247900636550744727414917293549510437950_u128;
_8 = _28;
_13 = Move(_21);
_47.fld4 = _29.2 & _29.2;
_47.fld3 = _5 as f64;
RET.fld1.0 = -29252069869865058483518937347688569368_i128;
_9 = _20;
_8.1 = !_28.1;
_1.0 = _11;
_35.fld3 = ((*_19), _12, _35.fld0.fld2);
_29.1 = _17.3 as u64;
_41.0 = _11;
_35.fld0.fld6.2.2 = _36;
_50.3 = _35.fld0.fld6.3;
_7 = _17.1 / 4521477433885835898_u64;
match _35.fld2 {
0 => bb9,
1 => bb14,
2 => bb16,
_ => bb15
}
}
bb14 = {
_41.2 = -_29.2;
_35.fld0.fld6.2 = (_35.fld0.fld0, _5, _14, _17.2);
_17.0 = [_32,_16,_16,_16,_35.fld5,_16,_32];
match _35.fld2 {
0 => bb11,
2 => bb13,
_ => bb12
}
}
bb15 = {
_32 = -_16;
_28 = ((*_25), _6, _8.2);
_13.fld0 = Adt61 { fld0: _11 };
_35.fld0.fld0 = _35.fld0.fld6.2.0;
Goto(bb8)
}
bb16 = {
RET.fld1 = (141460057747639510516984448704158530429_i128, _16);
_49.0 = [4259278155_u32];
_35.fld3.2 = -_35.fld0.fld2;
(*_19) = [_45.fld0.1];
RET.fld1 = ((-134108923863168669026450681258759872463_i128), _32);
_38 = 181846722572707854910258320493444984043_u128;
Call(_5 = fn17((*_19), _1.3, _28.2, _6, _14), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_39 = !_1.3;
_45.fld0.1 = _5;
_1.3 = _17.3 << _41.2;
_41 = (_1.0, _17.1, _35.fld0.fld6.2.3, _1.3);
_33 = [_17.1,_7,_7,_41.1,_7];
_28.2 = _35.fld3.2;
_36 = _23;
_36 = _23;
_35.fld0.fld4 = [_17.1,_1.1,_7,_7,_17.1];
_58 = core::ptr::addr_of_mut!(_35.fld0.fld3);
_1 = (_41.0, _41.1, _17.2, _41.3);
_35.fld0.fld6.0 = _8.1;
_10 = _35.fld0.fld4;
_59 = _36;
_48.fld0 = _41.2 == _29.2;
_48.fld0 = _35.fld0.fld6.0;
_54.1 = !_7;
_35.fld5 = _32 << _17.2;
Goto(bb18)
}
bb18 = {
_37 = _6 as u16;
_46 = _13.fld0.fld0;
_4.fld0 = [_35.fld5,_35.fld5,_35.fld5,_35.fld5,_35.fld5,_35.fld5,_35.fld5];
_45.fld0.2 = _14;
_47.fld4 = _41.2 << _1.2;
_60 = _47.fld4 + _17.2;
RET.fld1.0 = 74788760295714912958397475808989670113_i128;
_43.fld0 = _2 < _48.fld0;
_48.fld0 = !_12;
_45.fld0.1 = _37;
_2 = !_6;
_54 = _17;
_61.fld1 = (158099857233961680325473280554057054693_i128, _35.fld5);
_56.0 = [_61.fld1.1,_61.fld1.1,_61.fld1.1,_61.fld1.1,_35.fld5,_35.fld5,_35.fld5];
_56 = (_13.fld0.fld0, _1.1, _1.2, _41.3);
match _61.fld1.0 {
0 => bb19,
1 => bb20,
2 => bb21,
3 => bb22,
4 => bb23,
158099857233961680325473280554057054693 => bb25,
_ => bb24
}
}
bb19 = {
_4.fld0 = [_16,_16,_16,_16,_16,_16,_16];
Call(_1.1 = core::intrinsics::bswap(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb20 = {
RET.fld2 = _25;
RET.fld1.0 = -70865014689867233418072732984025592220_i128;
_27 = _12;
_1.2 = _17.2 + _29.2;
_31 = _1.3;
_18 = !8512540291743450662_i64;
RET.fld4 = (*_25);
_23 = _14;
_28.1 = _12;
_25 = _19;
Goto(bb6)
}
bb21 = {
RET.fld1.1 = !_16;
_1.2 = _17.2 & _17.2;
_20 = 121221379955806304441482238424167815621_u128 as isize;
RET.fld4 = [_5];
_6 = !_8.1;
(*_19) = [_5];
_13.fld0 = Adt61 { fld0: _21.fld0.fld0 };
Goto(bb4)
}
bb22 = {
_41.2 = -_29.2;
_35.fld0.fld6.2 = (_35.fld0.fld0, _5, _14, _17.2);
_17.0 = [_32,_16,_16,_16,_35.fld5,_16,_32];
match _35.fld2 {
0 => bb11,
2 => bb13,
_ => bb12
}
}
bb23 = {
RET.fld2 = core::ptr::addr_of_mut!(_3);
_38 = 97246613290380801651225432388095618603_u128 | 247900636550744727414917293549510437950_u128;
_8 = _28;
_13 = Move(_21);
_47.fld4 = _29.2 & _29.2;
_47.fld3 = _5 as f64;
RET.fld1.0 = -29252069869865058483518937347688569368_i128;
_9 = _20;
_8.1 = !_28.1;
_1.0 = _11;
_35.fld3 = ((*_19), _12, _35.fld0.fld2);
_29.1 = _17.3 as u64;
_41.0 = _11;
_35.fld0.fld6.2.2 = _36;
_50.3 = _35.fld0.fld6.3;
_7 = _17.1 / 4521477433885835898_u64;
match _35.fld2 {
0 => bb9,
1 => bb14,
2 => bb16,
_ => bb15
}
}
bb24 = {
_4.fld0 = [_16,_16,_16,_16,_16,_16,_16];
Call(_1.1 = core::intrinsics::bswap(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb25 = {
(*_25) = (*_19);
_49.0 = [3665227466_u32];
_35.fld0.fld3 = 120_u8 & 30_u8;
_1.3 = _43.fld0 as i8;
_56.1 = !_17.1;
_50.2.0 = _35.fld0.fld6.2.0;
_7 = _1.1;
_45.fld0.1 = _35.fld0.fld6.1 as u16;
_47.fld2 = 3571976253_u32;
_17.3 = _35.fld0.fld6.0 as i8;
_13 = Adt65 { fld0: _4 };
_13 = Adt65 { fld0: _4 };
_43.fld1 = _19;
_47.fld3 = _37 as f64;
_66 = _48.fld0 <= _6;
_49 = (_50.3,);
_45.fld0 = (_35.fld0.fld6.2.0, _37, _23, _1.2);
_63 = Adt61 { fld0: _11 };
_4 = Adt61 { fld0: _41.0 };
Goto(bb26)
}
bb26 = {
_30 = [(*_58),(*_58),(*_58),_35.fld0.fld3,(*_58),_35.fld0.fld3,(*_58)];
_68.fld1.1 = _38 as i32;
_69.fld0.1.0 = [_35.fld5,_35.fld5,_61.fld1.1,_35.fld5,_61.fld1.1,_61.fld1.1,_35.fld5];
_8.2 = _61.fld1.0 as isize;
RET.fld1 = _61.fld1;
_50.1 = !_18;
_55 = Adt61 { fld0: _46 };
_65 = _43.fld1;
RET.fld0 = core::ptr::addr_of_mut!(_69.fld2);
Goto(bb27)
}
bb27 = {
Call(_75 = dump_var(15_usize, 32_usize, Move(_32), 56_usize, Move(_56), 8_usize, Move(_8), 31_usize, Move(_31)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_75 = dump_var(15_usize, 46_usize, Move(_46), 59_usize, Move(_59), 17_usize, Move(_17), 28_usize, Move(_28)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_75 = dump_var(15_usize, 5_usize, Move(_5), 18_usize, Move(_18), 27_usize, Move(_27), 6_usize, Move(_6)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_75 = dump_var(15_usize, 49_usize, Move(_49), 41_usize, Move(_41), 29_usize, Move(_29), 24_usize, Move(_24)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_75 = dump_var(15_usize, 30_usize, Move(_30), 36_usize, Move(_36), 20_usize, Move(_20), 76_usize, _76), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [i32; 7],mut _2: ([i32; 7], u64, i16, i8),mut _3: u16,mut _4: ([i32; 7], u64, i16, i8),mut _5: [i32; 7],mut _6: i16,mut _7: [i32; 7],mut _8: [i32; 7],mut _9: [u64; 5],mut _10: char,mut _11: *mut [u16; 1]) -> ([i32; 7], u64, i16, i8) {
mir! {
type RET = ([i32; 7], u64, i16, i8);
let _12: isize;
let _13: i8;
let _14: char;
let _15: ();
let _16: ();
{
_4 = _2;
RET = (_5, _4.1, _4.2, _4.3);
_9 = [_4.1,_2.1,_4.1,_2.1,_2.1];
_8 = [(-1801491742_i32),1640930336_i32,1669927368_i32,1543242343_i32,769936943_i32,(-750646931_i32),(-1077766222_i32)];
(*_11) = [_3];
_4.2 = 1133170561_u32 as i16;
(*_11) = [_3];
(*_11) = [_3];
RET.3 = -_4.3;
_12 = 14314635874025233817768572535986300808_i128 as isize;
RET.0 = [(-74933267_i32),848414160_i32,344480820_i32,817762919_i32,(-407903856_i32),(-700144324_i32),(-2044547924_i32)];
_4.3 = 8606878193989053626_i64 as i8;
_2 = (_8, _4.1, _6, _4.3);
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(16_usize, 10_usize, Move(_10), 2_usize, Move(_2), 12_usize, Move(_12), 9_usize, Move(_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(16_usize, 6_usize, Move(_6), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [u16; 1],mut _2: i8,mut _3: isize,mut _4: bool,mut _5: char) -> u16 {
mir! {
type RET = u16;
let _6: u8;
let _7: char;
let _8: f32;
let _9: ([u32; 1],);
let _10: [u8; 1];
let _11: f64;
let _12: u64;
let _13: Adt55;
let _14: Adt52;
let _15: f32;
let _16: ([i32; 7], u64, i16, i8);
let _17: Adt63;
let _18: *mut *const f32;
let _19: [i128; 4];
let _20: *mut u8;
let _21: u128;
let _22: u64;
let _23: (bool, i64, (f32, u16, char, i16), [u32; 1]);
let _24: Adt53;
let _25: (*mut i128, ([i32; 7], u64, i16, i8), i128, u64);
let _26: (i128, i32);
let _27: f64;
let _28: ();
let _29: ();
{
_2 = -(-116_i8);
_3 = (-9223372036854775808_isize);
_1 = [6770_u16];
_2 = (-81_i8);
RET = !19623_u16;
_1 = [53907_u16];
_5 = '\u{69e06}';
_2 = -66_i8;
_3 = !(-9223372036854775808_isize);
_3 = (-55_isize) - (-9223372036854775808_isize);
RET = (-4479120444534594772_i64) as u16;
RET = _2 as u16;
_7 = _5;
RET = !23793_u16;
_1 = [44651_u16];
RET = (-926233099_i32) as u16;
RET = 12810_u16 + 63424_u16;
_6 = !10_u8;
_3 = !9223372036854775807_isize;
_8 = 18352221754857648983_u64 as f32;
_8 = _3 as f32;
_6 = !232_u8;
_8 = (-17225_i16) as f32;
Goto(bb1)
}
bb1 = {
_12 = !4561250322219111975_u64;
_1 = [42870_u16];
_6 = 246_u8;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
246 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_13.fld0 = !_4;
match _6 {
0 => bb9,
1 => bb10,
246 => bb12,
_ => bb11
}
}
bb9 = {
_12 = !4561250322219111975_u64;
_1 = [42870_u16];
_6 = 246_u8;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
246 => bb8,
_ => bb7
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_6 = (-7539_i16) as u8;
_1 = [29320_u16];
_13.fld2.0.0 = [1739438430_u32];
_4 = _13.fld0;
_3 = !(-9223372036854775808_isize);
_12 = 1586968760550418081_u64 / 813269609723749989_u64;
_1 = [13949_u16];
_12 = 18010390112028954700_u64;
_14.fld4 = [30000_u16];
_13.fld2.3 = !_12;
_13.fld2.2 = 14381_u16;
_8 = _6 as f32;
_14.fld4 = [_13.fld2.2];
_13.fld2.0.0 = [3582279574_u32];
_13.fld0 = _4;
_13.fld2.0.0 = [196308886_u32];
_14.fld1.0 = (-94393414911220570259984403045881459722_i128) & 166340483094745995642501712930334185631_i128;
_13.fld2.2 = _8 as u16;
_7 = _5;
_13.fld3 = _6;
_14.fld1 = ((-165829127210369697164223433158507739030_i128), (-407687514_i32));
_9 = _13.fld2.0;
_14.fld1.0 = _13.fld2.3 as i128;
_13.fld2.0 = _9;
_14.fld1.1 = _13.fld2.3 as i32;
Goto(bb13)
}
bb13 = {
_13.fld2 = (_9, 3265269416_u32, 63730_u16, _12);
_6 = !_13.fld3;
RET = (-18474_i16) as u16;
_13.fld2.3 = !_12;
_10 = [_6];
_15 = _8 / f32::NEG_INFINITY;
_11 = _14.fld1.0 as f64;
_16.0 = [_14.fld1.1,_14.fld1.1,_14.fld1.1,_14.fld1.1,_14.fld1.1,_14.fld1.1,_14.fld1.1];
_8 = _11 as f32;
RET = _13.fld2.2;
_14.fld1.1 = _15 as i32;
_19 = [_14.fld1.0,_14.fld1.0,_14.fld1.0,_14.fld1.0];
_14.fld1.0 = (-28256741445194779201689193248993742329_i128) - (-95612430670380965706233561446407368780_i128);
_6 = _14.fld1.0 as u8;
_14.fld1.1 = 144018812_i32;
_17.fld0 = Adt61 { fld0: _16.0 };
_17.fld2 = _13.fld2.2 * _13.fld2.2;
_17.fld0 = Adt61 { fld0: _16.0 };
_1 = [_13.fld2.2];
_17.fld3 = core::ptr::addr_of!(_13.fld0);
Goto(bb14)
}
bb14 = {
_26 = (_14.fld1.0, _14.fld1.1);
_13.fld2.0.0 = _9.0;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(17_usize, 1_usize, Move(_1), 7_usize, Move(_7), 6_usize, Move(_6), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(17_usize, 10_usize, Move(_10), 26_usize, Move(_26), 29_usize, _29, 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: f64,mut _2: char) -> u8 {
mir! {
type RET = u8;
let _3: [u8; 7];
let _4: i32;
let _5: *mut i128;
let _6: i128;
let _7: f64;
let _8: i32;
let _9: f64;
let _10: (i128, i32);
let _11: u16;
let _12: bool;
let _13: *const f32;
let _14: [u16; 1];
let _15: bool;
let _16: *const *mut u8;
let _17: [u8; 7];
let _18: u64;
let _19: [u32; 1];
let _20: bool;
let _21: u64;
let _22: u128;
let _23: usize;
let _24: f64;
let _25: u64;
let _26: char;
let _27: isize;
let _28: Adt65;
let _29: [char; 4];
let _30: *const f32;
let _31: f64;
let _32: (u32,);
let _33: *const *mut u8;
let _34: [i128; 4];
let _35: [u16; 1];
let _36: Adt61;
let _37: ();
let _38: ();
{
_2 = '\u{500da}';
_1 = 1063328430_u32 as f64;
RET = !117_u8;
RET = 215_u8 + 225_u8;
_3 = [233_u8,237_u8,32_u8,44_u8,73_u8,77_u8,208_u8];
_1 = 5762274824307415082_usize as f64;
_3 = [151_u8,101_u8,2_u8,143_u8,243_u8,15_u8,248_u8];
_4 = 2532166032_u32 as i32;
_1 = (-4237_i16) as f64;
RET = !10_u8;
RET = 16146_i16 as u8;
_1 = 8200038281546304671923569358733134543_i128 as f64;
_2 = '\u{e8287}';
_2 = '\u{b6d8e}';
_1 = 22392_u16 as f64;
_3 = [90_u8,143_u8,194_u8,226_u8,221_u8,228_u8,137_u8];
Goto(bb1)
}
bb1 = {
_1 = 260696000242173119659573895204101082759_u128 as f64;
_4 = -1969253667_i32;
_3 = [164_u8,205_u8,174_u8,57_u8,199_u8,31_u8,11_u8];
RET = 196_u8 * 0_u8;
_4 = 217_u8 as i32;
RET = 212_u8;
_3 = [136_u8,109_u8,26_u8,73_u8,210_u8,126_u8,88_u8];
_2 = '\u{f276f}';
_4 = false as i32;
_1 = 18287715993703881807_usize as f64;
_2 = '\u{5aa7d}';
_6 = (-103614508430643291984049467190059161403_i128) << _4;
_1 = 25072170146272088623180304507609882046_u128 as f64;
_5 = core::ptr::addr_of_mut!(_6);
Goto(bb2)
}
bb2 = {
RET = !50_u8;
(*_5) = 25445729732522666445742171448368949007_i128 ^ 18195807183573088448082284548611700329_i128;
(*_5) = (-8901756264486062535620546241104460064_i128) - 153634400238509353030697471490611770179_i128;
_1 = _6 as f64;
RET = (-54_i8) as u8;
_1 = 7415789359768359115_u64 as f64;
_5 = core::ptr::addr_of_mut!((*_5));
_6 = (-82386123249769305861295896401910557908_i128) + (-15369222328283795737412102182145459888_i128);
(*_5) = !(-136601145722395318937234168852129285009_i128);
_4 = !(-161368534_i32);
_8 = _4;
_10 = (_6, _8);
RET = 22_u8 - 112_u8;
_7 = 648833302_u32 as f64;
_11 = !36041_u16;
Call((*_5) = core::intrinsics::transmute(_10.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = [68_u8,29_u8,20_u8,243_u8,26_u8,119_u8,147_u8];
_10 = (_6, _4);
_10.0 = (*_5) & (*_5);
_3 = [5_u8,162_u8,56_u8,151_u8,73_u8,235_u8,67_u8];
_10.1 = _4 * _4;
_1 = (-68_i8) as f64;
RET = 0_u8;
(*_5) = 2477192037976736497_i64 as i128;
_2 = '\u{9e2db}';
_15 = !true;
RET = !131_u8;
_5 = core::ptr::addr_of_mut!(_10.0);
_11 = _4 as u16;
_10.1 = _4;
_10.0 = _6;
RET = _11 as u8;
_6 = !(*_5);
_11 = 16919_u16;
_11 = !11290_u16;
Goto(bb4)
}
bb4 = {
_14 = [_11];
_8 = 61707703857938289350267127694596635617_u128 as i32;
RET = _4 as u8;
_3 = [176_u8,58_u8,13_u8,2_u8,161_u8,34_u8,18_u8];
Goto(bb5)
}
bb5 = {
_6 = (*_5) | _10.0;
_5 = core::ptr::addr_of_mut!((*_5));
_4 = _2 as i32;
_17 = _3;
_6 = (*_5) - _10.0;
_9 = -_7;
_7 = -_9;
_5 = core::ptr::addr_of_mut!(_10.0);
_12 = _15;
_4 = (*_5) as i32;
_3 = _17;
_19 = [3732728886_u32];
_10.0 = _6;
_8 = _4 | _4;
_8 = 6013797010876018688_u64 as i32;
_19 = [48884929_u32];
RET = !201_u8;
Goto(bb6)
}
bb6 = {
_5 = core::ptr::addr_of_mut!(_6);
_2 = '\u{5b2a7}';
Goto(bb7)
}
bb7 = {
_18 = !17328779306969400268_u64;
Goto(bb8)
}
bb8 = {
_4 = (-56_i8) as i32;
_10 = ((*_5), _4);
_10.0 = (*_5);
_12 = _15;
_19 = [1762140612_u32];
_14 = [_11];
_4 = _8;
_3 = [32_u8,237_u8,63_u8,133_u8,115_u8,179_u8,148_u8];
_19 = [3849631627_u32];
_10.1 = !_4;
_18 = 17085534713644573549_u64 % 1674148204486461078_u64;
_2 = '\u{da3cb}';
_5 = core::ptr::addr_of_mut!((*_5));
_15 = _9 != _1;
_17 = [74_u8,189_u8,161_u8,78_u8,209_u8,193_u8,120_u8];
_19 = [896867397_u32];
_8 = _2 as i32;
_15 = _12;
_4 = _18 as i32;
_20 = _15 | _15;
_10 = ((*_5), _8);
_15 = !_12;
_9 = 127241536707943784551831601614328625858_u128 as f64;
_7 = _6 as f64;
_10 = ((*_5), _8);
_10.0 = _6;
_24 = _9 + _1;
RET = _18 as u8;
Goto(bb9)
}
bb9 = {
_21 = _18;
_8 = -_4;
_5 = core::ptr::addr_of_mut!(_10.0);
(*_5) = _6 & _6;
_10.1 = !_4;
_7 = _24;
RET = _21 as u8;
_24 = _9 + _7;
(*_5) = _6;
_22 = 9223372036854775807_isize as u128;
RET = 196_u8;
_23 = 152_u8 as usize;
RET = !133_u8;
Goto(bb10)
}
bb10 = {
_23 = 2_usize;
_1 = 9223372036854775807_isize as f64;
_10 = (_6, _4);
_10 = (_6, _8);
_8 = -_4;
_11 = 41323_u16 ^ 25851_u16;
_26 = _2;
RET = _3[_23] + _3[_23];
_17[_23] = !_3[_23];
_26 = _2;
_17 = [_3[_23],_3[_23],_3[_23],_3[_23],_3[_23],_3[_23],_3[_23]];
_6 = !_10.0;
_24 = (-9223372036854775808_isize) as f64;
_19 = [1903860799_u32];
_27 = 9223372036854775807_isize;
_10.0 = _27 as i128;
RET = !_3[_23];
RET = _17[_23];
_22 = 264846891092327137363517129185981833852_u128 * 281312154896511594417929864767572636948_u128;
_19 = [2758512618_u32];
Goto(bb11)
}
bb11 = {
RET = _17[_23];
_3[_23] = _12 as u8;
_29[_23] = _26;
_6 = _10.0 ^ (*_5);
_27 = 54_isize;
_2 = _29[_23];
_3[_23] = _11 as u8;
_4 = 1392153046_u32 as i32;
_32.0 = !1183644258_u32;
_10.1 = _8;
_5 = core::ptr::addr_of_mut!(_10.0);
(*_5) = _10.1 as i128;
_26 = _2;
_8 = _10.1 << _21;
Call(_8 = core::intrinsics::bswap(_10.1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_8 = _6 as i32;
_3[_23] = _17[_23] * _17[_23];
_3 = [_17[_23],_17[_23],_17[_23],_17[_23],_17[_23],_17[_23],_17[_23]];
_27 = (-39_i8) as isize;
_3[_23] = !_17[_23];
Goto(bb13)
}
bb13 = {
_6 = (*_5);
_5 = core::ptr::addr_of_mut!(_6);
_22 = !31063130291681189036600012831313826935_u128;
_28.fld0.fld0[_23] = _8;
_29 = [_26,_2,_2,_26];
_4 = _8;
_29 = [_2,_26,_2,_26];
(*_5) = _27 as i128;
_19 = [_32.0];
_28.fld0.fld0 = [_4,_8,_10.1,_10.1,_10.1,_10.1,_4];
_22 = 225958500991287038593252395420074586581_u128;
_17 = [_3[_23],_3[_23],_3[_23],_3[_23],_3[_23],_3[_23],_3[_23]];
_32 = (2595796765_u32,);
_21 = _18;
_11 = _22 as u16;
_32 = (185248746_u32,);
Call((*_5) = core::intrinsics::transmute(_22), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_15 = _12;
_10.1 = _4 ^ _4;
_9 = -_1;
_34 = [_10.0,_6,_10.0,_6];
(*_5) = _29[_23] as i128;
_34[_23] = _6;
_12 = !_20;
_21 = _18 + _18;
_10.0 = _11 as i128;
_23 = _15 as usize;
_17 = _3;
_32.0 = _10.0 as u32;
_25 = _11 as u64;
_9 = -_7;
_32 = (3583468217_u32,);
_10 = (_6, _4);
_21 = !_25;
(*_5) = _10.0 << _25;
_28.fld0.fld0 = [_4,_4,_10.1,_10.1,_4,_4,_4];
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(18_usize, 15_usize, Move(_15), 10_usize, Move(_10), 29_usize, Move(_29), 34_usize, Move(_34)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(18_usize, 11_usize, Move(_11), 25_usize, Move(_25), 20_usize, Move(_20), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(18_usize, 22_usize, Move(_22), 18_usize, Move(_18), 6_usize, Move(_6), 38_usize, _38), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(false), std::hint::black_box('\u{13bae}'), std::hint::black_box((-18_isize)), std::hint::black_box((-27_i8)), std::hint::black_box((-12202_i16)), std::hint::black_box((-1165105749_i32)), std::hint::black_box((-8436161365085469102_i64)), std::hint::black_box(119323754588924046780753174130521923819_i128), std::hint::black_box(6_usize), std::hint::black_box(53_u8), std::hint::black_box(60379_u16), std::hint::black_box(1748987574_u32)));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: bool,
fld1: *mut u8,
fld2: *mut [u16; 1],
fld3: *mut bool,
fld4: *const [u32; 1],
fld5: ([i32; 7], u64, i16, i8),
fld6: i64,
fld7: i128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: f32,
fld1: *mut (([u32; 1],), u32, u16, u64),
fld2: isize,
fld3: u8,
fld4: [u64; 5],
fld5: *mut *const f32,
fld6: (bool, i64, (f32, u16, char, i16), [u32; 1]),
}
#[derive(Debug)]
pub struct Adt51 {
fld0: [i32; 7],
fld1: *const *mut u8,
fld2: u32,
fld3: f64,
fld4: i16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: *mut *const [u32; 1],
fld1: (i128, i32),
fld2: *mut [u16; 1],
fld3: i8,
fld4: [u16; 1],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: [u8; 1],
fld1: f32,
fld2: [i32; 6],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: (*mut i128, ([i32; 7], u64, i16, i8), i128, u64),
fld1: *mut *const [u32; 1],
fld2: *const [u32; 1],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: bool,
fld1: [i32; 6],
fld2: (([u32; 1],), u32, u16, u64),
fld3: u8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: Adt50,
fld1: (u32,),
fld2: usize,
fld3: ([u16; 1], bool, isize),
fld4: *const [i32; 6],
fld5: i32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: (f32, u16, char, i16),
fld1: *const bool,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: bool,
fld1: *mut [u16; 1],
fld2: *const (*mut i128, ([i32; 7], u64, i16, i8), i128, u64),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: Adt54,
fld1: [char; 5],
fld2: i32,
fld3: usize,
fld4: i16,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: i64,
fld1: Adt54,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: [i32; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt62 {
fld0: i128,
fld1: *const (*mut i128, ([i32; 7], u64, i16, i8), i128, u64),
fld2: ([u16; 1], bool, isize),
fld3: Adt52,
fld4: i16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt63 {
fld0: Adt61,
fld1: f64,
fld2: u16,
fld3: *const bool,
}
#[derive(Debug)]
pub struct Adt64 {
fld0: usize,
fld1: Adt58,
fld2: [u32; 1],
fld3: i32,
fld4: [i32; 7],
}
#[derive(Debug)]
pub struct Adt65 {
fld0: Adt61,
}

