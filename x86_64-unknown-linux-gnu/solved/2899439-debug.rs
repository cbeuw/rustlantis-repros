#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u32,mut _2: char,mut _3: u128,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16) -> i64 {
mir! {
type RET = i64;
let _12: u64;
let _13: f32;
let _14: u8;
let _15: i64;
let _16: [i64; 3];
let _17: Adt53;
let _18: Adt47;
let _19: [i8; 4];
let _20: i128;
let _21: [i64; 3];
let _22: u16;
let _23: Adt52;
let _24: [i64; 3];
let _25: u128;
let _26: ([i64; 8],);
let _27: (i16,);
let _28: Adt41;
let _29: Adt43;
let _30: Adt44;
let _31: ([i64; 8],);
let _32: *mut i32;
let _33: Adt41;
let _34: (i16,);
let _35: Adt57;
let _36: f32;
let _37: [bool; 7];
let _38: isize;
let _39: *const bool;
let _40: isize;
let _41: ();
let _42: ();
{
_5 = !20352_i16;
_10 = 6230012090536492195_u64 as u8;
_3 = 266614356173380678717607126288611171661_u128 - 207414487031319098336121247753881552260_u128;
_10 = !108_u8;
RET = 3_usize as i64;
_13 = RET as f32;
_12 = !14258001867992417711_u64;
RET = 5558433314236703245_i64;
_6 = 30537_u16 as i32;
_8 = _10 as i128;
_16 = [RET,RET,RET];
_8 = (-91079818562069009949561827579848414913_i128) | 51902369567816340203115973692960665343_i128;
_2 = '\u{e4a0c}';
_1 = true as u32;
_6 = (-1853879545_i32);
_12 = !6533107855249983127_u64;
_7 = RET;
_14 = !_10;
_12 = 36821_u16 as u64;
Call(_4 = fn1(_10, _1, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_11 = 59238_u16 - 17599_u16;
RET = _7;
_15 = _7;
Call(_11 = core::intrinsics::bswap(16720_u16), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10 = 7185796362900013203_usize as u8;
_15 = RET ^ RET;
_7 = _15;
_16 = [_7,_15,_15];
_5 = (-19012_i16) << _1;
RET = _12 as i64;
_11 = _6 as u16;
_5 = (-9886_i16) + (-14473_i16);
_16 = [RET,_7,_15];
_3 = _10 as u128;
_9 = _7 as usize;
_4 = (-128_i8) - (-128_i8);
_14 = !_10;
_5 = (-13246_i16) + 1660_i16;
_16 = [_15,RET,RET];
_14 = !_10;
_15 = !RET;
_9 = 9265816844414215897_usize;
_5 = -17062_i16;
_5 = (-24556_i16) >> RET;
RET = _7 | _15;
_2 = '\u{e978c}';
match _9 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
9265816844414215897 => bb9,
_ => bb8
}
}
bb3 = {
_11 = 59238_u16 - 17599_u16;
RET = _7;
_15 = _7;
Call(_11 = core::intrinsics::bswap(16720_u16), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = -1677629088_i32;
_11 = !37035_u16;
_13 = _12 as f32;
_10 = _12 as u8;
_11 = _6 as u16;
_20 = -_8;
_19 = [_4,_4,_4,_4];
_2 = '\u{e35a5}';
_12 = 8285262830847072487_u64 << _14;
_9 = !1_usize;
_12 = 14895016232486014031_u64 >> _6;
_3 = 29547116079074616413684465386868592053_u128;
_4 = -(-49_i8);
_1 = !4273237605_u32;
_8 = _20;
_5 = RET as i16;
RET = 42_isize as i64;
RET = _5 as i64;
_7 = RET + RET;
RET = _7;
RET = _7 & _7;
_20 = _12 as i128;
RET = _7;
_6 = 1924055695_i32 * (-96001042_i32);
RET = _7;
_24 = _16;
_2 = '\u{cfbb0}';
Goto(bb10)
}
bb10 = {
_22 = false as u16;
_21 = [RET,RET,RET];
_5 = (-6064_i16) >> _9;
_8 = _20 >> RET;
_6 = !896286790_i32;
_25 = _3;
_14 = _10 << _8;
_14 = _5 as u8;
_1 = 1814954824_u32 * 3983087724_u32;
_22 = _11 - _11;
_15 = _5 as i64;
_27 = (_5,);
match _25 {
0 => bb4,
29547116079074616413684465386868592053 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_12 = _5 as u64;
_28.fld3.0 = _25;
_28.fld2 = _9 as f64;
_21 = [_15,_15,RET];
_21 = [RET,RET,RET];
_28.fld2 = _6 as f64;
_28.fld4 = !_14;
_8 = !_20;
_13 = _1 as f32;
_6 = -193325239_i32;
_16 = [_7,_7,_7];
_8 = _20;
_12 = 9544830954421003726_u64;
_28.fld3.1 = false as u16;
_33.fld4 = _4 as u8;
_31.0 = [RET,RET,_7,_7,_15,RET,RET,RET];
_23 = Adt52::Variant3 { fld0: _13,fld1: _2,fld2: _31.0 };
_33.fld3 = _28.fld3;
SetDiscriminant(_23, 0);
_33.fld1 = _2;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld3.1 = _6;
place!(Field::<Adt49>(Variant(_23, 0), 5)).fld1 = (_31.0,);
_26 = (_31.0,);
_31 = (Field::<Adt49>(Variant(_23, 0), 5).fld1.0,);
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld3.0.1 = _5 as u16;
place!(Field::<Adt49>(Variant(_23, 0), 5)).fld3.1 = _2 as i32;
Goto(bb13)
}
bb13 = {
place!(Field::<(u32,)>(Variant(_23, 0), 2)).0 = _1 + _1;
_19 = [_4,_4,_4,_4];
place!(Field::<bool>(Variant(_23, 0), 0)) = _28.fld4 < _33.fld4;
_9 = 3_usize >> RET;
_28.fld1 = _33.fld1;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld3.0.1 = _11;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld3.0 = (_33.fld3.0, _22);
_2 = _28.fld1;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld3.0.1 = !_28.fld3.1;
place!(Field::<bool>(Variant(_23, 0), 0)) = !false;
_27 = (_5,);
_15 = RET;
_33.fld1 = _2;
_28.fld3 = (Field::<Adt51>(Variant(_23, 0), 4).fld3.fld3.0.0, Field::<Adt51>(Variant(_23, 0), 4).fld3.fld3.0.1);
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld6 = _7;
_28.fld3 = (_3, _22);
_28.fld1 = _33.fld1;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld1 = _26;
place!(Field::<bool>(Variant(_23, 0), 0)) = false ^ false;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld3.3 = _9 * _9;
place!(Field::<Adt49>(Variant(_23, 0), 5)).fld1 = (Field::<Adt51>(Variant(_23, 0), 4).fld3.fld1.0,);
_33.fld1 = _2;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld3.fld1 = (Field::<Adt49>(Variant(_23, 0), 5).fld1.0,);
_19 = [_4,_4,_4,_4];
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld0.0.1 = _28.fld3.1;
RET = _7;
match _25 {
0 => bb14,
29547116079074616413684465386868592053 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
_22 = false as u16;
_21 = [RET,RET,RET];
_5 = (-6064_i16) >> _9;
_8 = _20 >> RET;
_6 = !896286790_i32;
_25 = _3;
_14 = _10 << _8;
_14 = _5 as u8;
_1 = 1814954824_u32 * 3983087724_u32;
_22 = _11 - _11;
_15 = _5 as i64;
_27 = (_5,);
match _25 {
0 => bb4,
29547116079074616413684465386868592053 => bb12,
_ => bb11
}
}
bb16 = {
place!(Field::<Adt49>(Variant(_23, 0), 5)).fld3.3 = _22 as usize;
_16 = [_7,_7,_7];
_37 = [Field::<bool>(Variant(_23, 0), 0),Field::<bool>(Variant(_23, 0), 0),Field::<bool>(Variant(_23, 0), 0),Field::<bool>(Variant(_23, 0), 0),Field::<bool>(Variant(_23, 0), 0),Field::<bool>(Variant(_23, 0), 0),Field::<bool>(Variant(_23, 0), 0)];
_34 = (_27.0,);
_15 = -_7;
place!(Field::<Adt51>(Variant(_23, 0), 4)).fld0.2 = _12;
Goto(bb17)
}
bb17 = {
Call(_41 = dump_var(0_usize, 34_usize, Move(_34), 6_usize, Move(_6), 19_usize, Move(_19), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(0_usize, 2_usize, Move(_2), 10_usize, Move(_10), 31_usize, Move(_31), 9_usize, Move(_9)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(0_usize, 21_usize, Move(_21), 15_usize, Move(_15), 1_usize, Move(_1), 25_usize, Move(_25)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(0_usize, 20_usize, Move(_20), 42_usize, _42, 42_usize, _42, 42_usize, _42), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u8,mut _2: u32,mut _3: u8) -> i8 {
mir! {
type RET = i8;
let _4: ([i64; 8],);
let _5: f32;
let _6: isize;
let _7: u128;
let _8: Adt44;
let _9: f32;
let _10: [usize; 2];
let _11: ([i64; 8],);
let _12: [usize; 2];
let _13: isize;
let _14: (u32,);
let _15: ([i64; 8],);
let _16: *mut u16;
let _17: isize;
let _18: Adt48;
let _19: ();
let _20: ();
{
RET = (-72_i8) ^ 116_i8;
RET = (-5_i8);
RET = (-9223372036854775808_isize) as i8;
_4.0 = [(-604267299117968317_i64),(-3465676229334234986_i64),(-3708859743311409327_i64),(-8897949450951611525_i64),(-6784220734405515617_i64),1599746880293210337_i64,(-7771091530206858880_i64),(-3345491562641770462_i64)];
RET = !17_i8;
_2 = !1121666980_u32;
_3 = _1 & _1;
_4.0 = [5725763764297317229_i64,(-7052132163693857_i64),(-4196785476099328273_i64),(-2119040481413834457_i64),8759755936320147091_i64,(-4683548788637360899_i64),(-6878495040276038549_i64),5603745791801574893_i64];
_4.0 = [4871813172148104240_i64,5746011491710409902_i64,2771411778629239513_i64,1393253662186561389_i64,60044078256509631_i64,(-3479559304584309066_i64),(-7699061705816389043_i64),145680121385920092_i64];
_6 = 9223372036854775807_isize;
RET = (-20_i8);
_4.0 = [(-5146256655968559357_i64),(-5425761764613556420_i64),4328472669995406894_i64,(-8853063924919696979_i64),1732958427231155408_i64,1162558054894476824_i64,8150533153407596172_i64,(-2960497446302286807_i64)];
_3 = _1;
Call(_3 = fn2(_4.0, _4, _4, _4, _6, _4, _4.0, RET, _4, _4.0, _6, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = false as u128;
_2 = !1259626304_u32;
_1 = _3 ^ _3;
_5 = _2 as f32;
_6 = (-21_isize) | (-9223372036854775808_isize);
_2 = 2796647585_u32 - 1410482343_u32;
_7 = RET as u128;
RET = (-60_i8) * 39_i8;
_7 = (-48102031345025075905493936927386312360_i128) as u128;
RET = 61662_u16 as i8;
Goto(bb2)
}
bb2 = {
_6 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_5 = (-6689086777088508943_i64) as f32;
_3 = _1 + _1;
_1 = _6 as u8;
Goto(bb3)
}
bb3 = {
_7 = 105282205946613017726679147011601843962_u128;
_11 = (_4.0,);
_4 = _11;
match _7 {
0 => bb1,
105282205946613017726679147011601843962 => bb5,
_ => bb4
}
}
bb4 = {
_7 = false as u128;
_2 = !1259626304_u32;
_1 = _3 ^ _3;
_5 = _2 as f32;
_6 = (-21_isize) | (-9223372036854775808_isize);
_2 = 2796647585_u32 - 1410482343_u32;
_7 = RET as u128;
RET = (-60_i8) * 39_i8;
_7 = (-48102031345025075905493936927386312360_i128) as u128;
RET = 61662_u16 as i8;
Goto(bb2)
}
bb5 = {
_1 = _3 | _3;
_9 = 692132474924684730_u64 as f32;
_4.0 = [933297120121721012_i64,(-7065354466367818609_i64),(-602286884572302330_i64),6568063418812268926_i64,(-2526559015952581758_i64),(-3519804280726792440_i64),(-3364404841261301600_i64),468850214215290958_i64];
_3 = !_1;
match _7 {
0 => bb4,
1 => bb6,
2 => bb7,
3 => bb8,
105282205946613017726679147011601843962 => bb10,
_ => bb9
}
}
bb6 = {
_7 = false as u128;
_2 = !1259626304_u32;
_1 = _3 ^ _3;
_5 = _2 as f32;
_6 = (-21_isize) | (-9223372036854775808_isize);
_2 = 2796647585_u32 - 1410482343_u32;
_7 = RET as u128;
RET = (-60_i8) * 39_i8;
_7 = (-48102031345025075905493936927386312360_i128) as u128;
RET = 61662_u16 as i8;
Goto(bb2)
}
bb7 = {
_7 = 105282205946613017726679147011601843962_u128;
_11 = (_4.0,);
_4 = _11;
match _7 {
0 => bb1,
105282205946613017726679147011601843962 => bb5,
_ => bb4
}
}
bb8 = {
_6 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_5 = (-6689086777088508943_i64) as f32;
_3 = _1 + _1;
_1 = _6 as u8;
Goto(bb3)
}
bb9 = {
_7 = false as u128;
_2 = !1259626304_u32;
_1 = _3 ^ _3;
_5 = _2 as f32;
_6 = (-21_isize) | (-9223372036854775808_isize);
_2 = 2796647585_u32 - 1410482343_u32;
_7 = RET as u128;
RET = (-60_i8) * 39_i8;
_7 = (-48102031345025075905493936927386312360_i128) as u128;
RET = 61662_u16 as i8;
Goto(bb2)
}
bb10 = {
_11.0 = _4.0;
_1 = _3 * _3;
_1 = !_3;
_9 = -_5;
RET = (-95_i8);
_2 = !414663929_u32;
_10 = [6595092805626270342_usize,9411180655504709964_usize];
RET = (-82_i8);
_1 = _7 as u8;
RET = 7653205118983476390_i64 as i8;
_11.0 = [(-6284328974140868539_i64),8972794861647441394_i64,(-7190732657700398539_i64),8380645715258950202_i64,(-6760408061289472396_i64),6299879057293070126_i64,(-5838459069490505460_i64),(-8272653238534083315_i64)];
RET = -9_i8;
_5 = _9 + _9;
_1 = _3 + _3;
_11 = (_4.0,);
_6 = !(-21_isize);
_6 = (-9223372036854775808_isize) * (-103_isize);
_12 = _10;
_3 = !_1;
_11.0 = _4.0;
_5 = 10837408516486120532_usize as f32;
_5 = _9 * _9;
RET = (-93_i8);
_10 = _12;
_4 = _11;
_9 = _6 as f32;
RET = 62_i8 | (-127_i8);
match _7 {
0 => bb11,
1 => bb12,
105282205946613017726679147011601843962 => bb14,
_ => bb13
}
}
bb11 = {
_7 = false as u128;
_2 = !1259626304_u32;
_1 = _3 ^ _3;
_5 = _2 as f32;
_6 = (-21_isize) | (-9223372036854775808_isize);
_2 = 2796647585_u32 - 1410482343_u32;
_7 = RET as u128;
RET = (-60_i8) * 39_i8;
_7 = (-48102031345025075905493936927386312360_i128) as u128;
RET = 61662_u16 as i8;
Goto(bb2)
}
bb12 = {
_7 = false as u128;
_2 = !1259626304_u32;
_1 = _3 ^ _3;
_5 = _2 as f32;
_6 = (-21_isize) | (-9223372036854775808_isize);
_2 = 2796647585_u32 - 1410482343_u32;
_7 = RET as u128;
RET = (-60_i8) * 39_i8;
_7 = (-48102031345025075905493936927386312360_i128) as u128;
RET = 61662_u16 as i8;
Goto(bb2)
}
bb13 = {
_7 = 105282205946613017726679147011601843962_u128;
_11 = (_4.0,);
_4 = _11;
match _7 {
0 => bb1,
105282205946613017726679147011601843962 => bb5,
_ => bb4
}
}
bb14 = {
_4.0 = _11.0;
_12 = _10;
_12 = _10;
_13 = 5981441895074043864_i64 as isize;
_13 = !_6;
_2 = 2408273953_u32;
_2 = 2019252210_u32;
_12 = [6_usize,1467331150962223931_usize];
_6 = _13;
_1 = (-23641_i16) as u8;
_9 = _5;
_11.0 = [(-2572552328655125449_i64),6412574483681883712_i64,1095331504908296044_i64,(-1827201508812971849_i64),1371612536336711771_i64,(-1157785715690324872_i64),(-7896096597426168884_i64),(-2275086902483429567_i64)];
_14.0 = _2;
_9 = _5;
_10 = [6_usize,6644841843649582516_usize];
_3 = !_1;
_12 = [13289631734202665102_usize,6_usize];
_13 = 13612_u16 as isize;
Goto(bb15)
}
bb15 = {
Call(_19 = dump_var(1_usize, 12_usize, Move(_12), 7_usize, Move(_7), 1_usize, Move(_1), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_19 = dump_var(1_usize, 11_usize, Move(_11), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [i64; 8],mut _2: ([i64; 8],),mut _3: ([i64; 8],),mut _4: ([i64; 8],),mut _5: isize,mut _6: ([i64; 8],),mut _7: [i64; 8],mut _8: i8,mut _9: ([i64; 8],),mut _10: [i64; 8],mut _11: isize,mut _12: ([i64; 8],)) -> u8 {
mir! {
type RET = u8;
let _13: f64;
let _14: [isize; 2];
let _15: f64;
let _16: f64;
let _17: f32;
let _18: bool;
let _19: f64;
let _20: [isize; 2];
let _21: [usize; 2];
let _22: Adt56;
let _23: isize;
let _24: bool;
let _25: f32;
let _26: bool;
let _27: f64;
let _28: ((u128, u16), i32, u64, usize, *mut i32);
let _29: isize;
let _30: ();
let _31: ();
{
_11 = _5;
_10 = [(-5457935647603283956_i64),3587311767270823117_i64,8028713884401111830_i64,935653097480518341_i64,(-5689038246529169351_i64),7905913097505577348_i64,(-3645156265144943353_i64),(-6337500417717810459_i64)];
RET = !93_u8;
_8 = (-8725006313553193315_i64) as i8;
_12 = (_4.0,);
_9.0 = [4192148044435462626_i64,(-5577493438621856157_i64),3505027686988108079_i64,(-4573036805685549368_i64),3276857360814771686_i64,7496481358673651952_i64,6114398808953779029_i64,(-3089757085341510814_i64)];
_9.0 = _2.0;
_12 = (_10,);
_9.0 = _12.0;
_9 = (_4.0,);
_12.0 = [(-3819587680231531059_i64),(-7457513193588744907_i64),(-3495261580114716090_i64),8357047090648690261_i64,8553243922563173115_i64,9189631832047815222_i64,(-3511024015569773023_i64),(-869666370748348879_i64)];
RET = 4624_i16 as u8;
_3.0 = [(-5905002056201672502_i64),(-511693372467678065_i64),1994449240949493748_i64,4244552801996427689_i64,6424726131231267525_i64,7518652065572759799_i64,(-578047323355693430_i64),7625789168023756695_i64];
_12.0 = _9.0;
_1 = [80058262986505087_i64,4677492016271761772_i64,(-8415053111848872475_i64),9072985759668051142_i64,(-3995878638638177483_i64),5492759505192550210_i64,4703171959560746446_i64,496280532585794512_i64];
_6 = _12;
_4.0 = [1820844117349824736_i64,7175801119161461265_i64,3719972782692204716_i64,2923528328719827595_i64,(-5882114902282483414_i64),(-2295834947971777662_i64),(-8974796199908463402_i64),607547925982606848_i64];
_6 = (_10,);
_1 = _9.0;
_7 = [8279396463494817071_i64,7154925474943537179_i64,(-8268026948368541109_i64),(-2516190979476595401_i64),(-7451946555689538802_i64),6411866040994433170_i64,1271883554998869912_i64,(-7618115530977968573_i64)];
_14 = [_5,_11];
_10 = [(-4109500617005932769_i64),2210620346557115818_i64,5671668757022145305_i64,(-5321339292575460663_i64),3044046567802574383_i64,3731643740505197663_i64,(-1397571358591832906_i64),7200833347500767349_i64];
RET = !74_u8;
_1 = [(-6758700451073316850_i64),(-1296648106977928277_i64),6016030381760975684_i64,323856386302300634_i64,(-3688440908537184313_i64),(-6289994208511952747_i64),(-1602141861718074188_i64),(-3100300029207251514_i64)];
_5 = !_11;
_10 = [(-1908438146828926126_i64),8768409744999925344_i64,452305431730005853_i64,(-1985831835015182306_i64),1037342274587999841_i64,(-4128429717225052628_i64),3335596852664789689_i64,(-1482711752853268857_i64)];
_10 = _6.0;
_12 = _3;
Goto(bb1)
}
bb1 = {
_4.0 = [(-5894096029569781179_i64),(-6327486840666008635_i64),(-4891319578691128216_i64),(-4662431410422516221_i64),2677846754694748577_i64,(-8534371824296654497_i64),8281553952695678620_i64,3778813068674307722_i64];
match _11 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_12 = _4;
_13 = _8 as f64;
_4 = (_3.0,);
_4.0 = _3.0;
_4 = _12;
_2.0 = [4233600362996032412_i64,(-104613215135704660_i64),7600846169786543793_i64,4853783325448111025_i64,4415097505317017226_i64,8407129269123499954_i64,7864832072309429696_i64,3539615161925449808_i64];
_1 = [4604710827216084205_i64,(-5050859797662462261_i64),(-1152453328396737426_i64),618014868558384165_i64,(-2163380939509393999_i64),(-1169787408605343328_i64),3390054352080809946_i64,4602467289725426214_i64];
_4 = (_7,);
_12 = _4;
_13 = 3875_i16 as f64;
_2 = (_12.0,);
_4 = (_6.0,);
_17 = 47632_u16 as f32;
_14 = [_5,_5];
_7 = _10;
_10 = [4275670632863070639_i64,4673283938837725440_i64,(-5346420026647424913_i64),(-3028960976414010650_i64),(-6999937824586657694_i64),(-2997602497578382777_i64),(-1593239949260692234_i64),5710171871423248078_i64];
RET = 150_u8 >> _5;
_15 = 1934185477_u32 as f64;
_9 = (_3.0,);
_16 = (-18102_i16) as f64;
_4 = _6;
_11 = 25338_u16 as isize;
_1 = [(-6172516281055898168_i64),6178794970907907361_i64,(-4384758597786488019_i64),7623540291921903146_i64,(-6433596453013161951_i64),(-2130256452072791961_i64),(-6848822774349212561_i64),1181995676430044261_i64];
_10 = [4750762548462225774_i64,2660371908984573420_i64,(-4604658670995338371_i64),8700128250185571512_i64,(-1331188565001420135_i64),5404774700893791535_i64,(-6272080342521160811_i64),(-7627913854508328860_i64)];
_3.0 = [4588201778419330995_i64,(-51273656138941887_i64),(-3247836475519088038_i64),8791133296587107035_i64,5656750782776338532_i64,7864812867378363149_i64,(-8127559649035853349_i64),6149222144245164561_i64];
_17 = 225311587025906363_u64 as f32;
Goto(bb5)
}
bb5 = {
_8 = (-44_i8);
_7 = _1;
_9 = (_7,);
_18 = !true;
_13 = -_15;
_12 = (_1,);
_16 = _13;
Call(_1 = fn3(_2.0, _12.0, _12, _2, _8, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_9.0 = [(-9145061554570378792_i64),6069749923981360683_i64,(-2344201968475758584_i64),8066974006799413465_i64,(-2149413295875656201_i64),(-3203801322986765445_i64),(-2196956523079423940_i64),(-2194490843310219824_i64)];
RET = !35_u8;
_14 = [_11,_5];
_22.fld3 = (408048429_u32,);
_12 = (_2.0,);
Call(_9.0 = fn17(_4.0, _12, _22.fld3.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_10 = _12.0;
Call(_20 = core::intrinsics::transmute(_14), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_22.fld2.4 = core::ptr::addr_of_mut!(_22.fld2.1);
_7 = _4.0;
_6.0 = [(-5890412328222918513_i64),275613335689760811_i64,2780102191299237068_i64,1663967293699556452_i64,(-5054431348334258970_i64),621155004266478666_i64,5539371137737347940_i64,8776498374531825150_i64];
_22.fld2.0 = (6966934978843658072026199516834121375_u128, 33508_u16);
_20 = [_5,_11];
_23 = _5 & _11;
_22.fld2.2 = _22.fld2.0.1 as u64;
_3.0 = [(-6443730113643447171_i64),7990423031307426935_i64,7277103883015059741_i64,(-9140961806182433276_i64),(-1921003322915683647_i64),(-4317307288087706379_i64),7824308541767365078_i64,2975525522987407367_i64];
_5 = _23;
_5 = 46657314631475801769671506850350651934_i128 as isize;
_16 = _13;
_12.0 = _4.0;
_22.fld3 = (1053037782_u32,);
_4.0 = [(-7767088642446509425_i64),1216294620503827990_i64,7734878728130343065_i64,7175713326135610348_i64,152351131795940822_i64,2236798133629948055_i64,3126427616573482754_i64,7129705660993528380_i64];
_19 = -_15;
RET = 33_u8;
_12 = (_1,);
_12 = _9;
_16 = _19 + _13;
_9.0 = [(-7084374777387660556_i64),3877892081575084957_i64,3492660071714550459_i64,767372654652221917_i64,(-3213426641101723116_i64),(-1818087226486773698_i64),(-8373110398030406626_i64),446472256774458149_i64];
_22.fld2.2 = 17072_i16 as u64;
_22.fld2.1 = 180813091_i32 + 1559736956_i32;
_22.fld2.0.1 = _19 as u16;
_17 = RET as f32;
_19 = _15;
_6.0 = [(-2480453539912224004_i64),8718542522523073704_i64,6792669764335071988_i64,990257373936266273_i64,5778858402325605372_i64,9016824021965944286_i64,(-3746732848526062125_i64),(-3194832331436102055_i64)];
_6 = _4;
_8 = !(-62_i8);
_6.0 = [(-3397022525227908838_i64),(-7647345864333001692_i64),(-1543732406351501966_i64),49391263382842472_i64,8303097362658002204_i64,(-5516880438822315373_i64),4161141628022268722_i64,(-6778905748058946_i64)];
_19 = -_16;
match _22.fld2.0.0 {
0 => bb4,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
6966934978843658072026199516834121375 => bb16,
_ => bb15
}
}
bb9 = {
_10 = _12.0;
Call(_20 = core::intrinsics::transmute(_14), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_9.0 = [(-9145061554570378792_i64),6069749923981360683_i64,(-2344201968475758584_i64),8066974006799413465_i64,(-2149413295875656201_i64),(-3203801322986765445_i64),(-2196956523079423940_i64),(-2194490843310219824_i64)];
RET = !35_u8;
_14 = [_11,_5];
_22.fld3 = (408048429_u32,);
_12 = (_2.0,);
Call(_9.0 = fn17(_4.0, _12, _22.fld3.0), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_8 = (-44_i8);
_7 = _1;
_9 = (_7,);
_18 = !true;
_13 = -_15;
_12 = (_1,);
_16 = _13;
Call(_1 = fn3(_2.0, _12.0, _12, _2, _8, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb12 = {
_12 = _4;
_13 = _8 as f64;
_4 = (_3.0,);
_4.0 = _3.0;
_4 = _12;
_2.0 = [4233600362996032412_i64,(-104613215135704660_i64),7600846169786543793_i64,4853783325448111025_i64,4415097505317017226_i64,8407129269123499954_i64,7864832072309429696_i64,3539615161925449808_i64];
_1 = [4604710827216084205_i64,(-5050859797662462261_i64),(-1152453328396737426_i64),618014868558384165_i64,(-2163380939509393999_i64),(-1169787408605343328_i64),3390054352080809946_i64,4602467289725426214_i64];
_4 = (_7,);
_12 = _4;
_13 = 3875_i16 as f64;
_2 = (_12.0,);
_4 = (_6.0,);
_17 = 47632_u16 as f32;
_14 = [_5,_5];
_7 = _10;
_10 = [4275670632863070639_i64,4673283938837725440_i64,(-5346420026647424913_i64),(-3028960976414010650_i64),(-6999937824586657694_i64),(-2997602497578382777_i64),(-1593239949260692234_i64),5710171871423248078_i64];
RET = 150_u8 >> _5;
_15 = 1934185477_u32 as f64;
_9 = (_3.0,);
_16 = (-18102_i16) as f64;
_4 = _6;
_11 = 25338_u16 as isize;
_1 = [(-6172516281055898168_i64),6178794970907907361_i64,(-4384758597786488019_i64),7623540291921903146_i64,(-6433596453013161951_i64),(-2130256452072791961_i64),(-6848822774349212561_i64),1181995676430044261_i64];
_10 = [4750762548462225774_i64,2660371908984573420_i64,(-4604658670995338371_i64),8700128250185571512_i64,(-1331188565001420135_i64),5404774700893791535_i64,(-6272080342521160811_i64),(-7627913854508328860_i64)];
_3.0 = [4588201778419330995_i64,(-51273656138941887_i64),(-3247836475519088038_i64),8791133296587107035_i64,5656750782776338532_i64,7864812867378363149_i64,(-8127559649035853349_i64),6149222144245164561_i64];
_17 = 225311587025906363_u64 as f32;
Goto(bb5)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_4.0 = [(-5894096029569781179_i64),(-6327486840666008635_i64),(-4891319578691128216_i64),(-4662431410422516221_i64),2677846754694748577_i64,(-8534371824296654497_i64),8281553952695678620_i64,3778813068674307722_i64];
match _11 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb16 = {
_22.fld3 = (2821303459_u32,);
_22.fld2.0 = (83271174618552777692957601863931624728_u128, 11462_u16);
_24 = _18;
_17 = 10072706800509608899_usize as f32;
RET = _19 as u8;
_16 = _23 as f64;
_22.fld2.0.1 = RET as u16;
_22.fld2.0.0 = 0_usize as u128;
_20 = _14;
_18 = !_24;
_20 = [_23,_11];
_22.fld2.4 = core::ptr::addr_of_mut!(_22.fld2.1);
_24 = !_18;
_14 = _20;
_9.0 = _12.0;
_2.0 = [(-298467397151329286_i64),(-6197013919682694844_i64),7057801664032801386_i64,(-959709020890664781_i64),(-2352635166083170770_i64),(-6215855534233636391_i64),3792208012611895657_i64,(-5723858313622875215_i64)];
_23 = _22.fld2.0.1 as isize;
_22.fld2.1 = -(-699285840_i32);
_9 = (_7,);
Goto(bb17)
}
bb17 = {
Call(_30 = dump_var(2_usize, 23_usize, Move(_23), 14_usize, Move(_14), 3_usize, Move(_3), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(2_usize, 10_usize, Move(_10), 12_usize, Move(_12), 18_usize, Move(_18), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i64; 8],mut _2: [i64; 8],mut _3: ([i64; 8],),mut _4: ([i64; 8],),mut _5: i8,mut _6: ([i64; 8],)) -> [i64; 8] {
mir! {
type RET = [i64; 8];
let _7: Adt43;
let _8: isize;
let _9: usize;
let _10: bool;
let _11: i16;
let _12: isize;
let _13: u64;
let _14: Adt46;
let _15: isize;
let _16: (u128, u16);
let _17: [i64; 3];
let _18: Adt44;
let _19: [usize; 2];
let _20: (i16,);
let _21: ([i64; 8],);
let _22: char;
let _23: [i8; 4];
let _24: f32;
let _25: bool;
let _26: [i8; 4];
let _27: [i64; 3];
let _28: [bool; 7];
let _29: isize;
let _30: (u128, u16);
let _31: Adt42;
let _32: bool;
let _33: u32;
let _34: (u128, u16);
let _35: ([i64; 8],);
let _36: isize;
let _37: *mut ([i64; 8],);
let _38: bool;
let _39: f32;
let _40: ();
let _41: ();
{
_1 = [(-8454080068203048978_i64),(-6090853650862783415_i64),7128781615288187839_i64,(-3216928624807062872_i64),(-4139540762092250313_i64),5708509584310728654_i64,8880303878067150883_i64,7755588201178428450_i64];
_4 = (_6.0,);
RET = [(-6269954293424055382_i64),(-1105304351950168053_i64),587327017007174727_i64,(-6347255201663223668_i64),(-6695794812580311515_i64),(-4698594872423214642_i64),6283298039879855215_i64,(-405578145024312801_i64)];
_4.0 = _2;
_4.0 = [8065934228031676316_i64,2220158637863098596_i64,7141106106573828366_i64,7132049703077585245_i64,887873274535445278_i64,(-4624760776348280244_i64),7839961656577774057_i64,8900481238554307511_i64];
_5 = -(-40_i8);
_6.0 = [8153086746499052893_i64,6273969190331627572_i64,80080281626160634_i64,(-6332308504620147211_i64),7815169223111207813_i64,1524221845885639812_i64,(-1681387785013974406_i64),(-3798686644922982986_i64)];
_6.0 = [(-110647783662935395_i64),3601432060312137014_i64,(-2040700646846723016_i64),(-5907894347169091504_i64),6204458766734572998_i64,5245112547351091899_i64,(-102197774134011471_i64),(-5470972894904050188_i64)];
_3 = (_1,);
_6.0 = [614792027120413010_i64,5371672206436840320_i64,9142333446345094646_i64,6848505573749290548_i64,9063122829717741458_i64,(-9068021094293131761_i64),(-7677452098679649426_i64),(-3202239995350455296_i64)];
RET = [(-6892849369979674641_i64),(-1637130472765288055_i64),(-2881366107328389942_i64),(-506239363428052206_i64),(-4839498823673048900_i64),5861807356864533969_i64,(-2957592142742781487_i64),3366871096630342286_i64];
_3.0 = [(-2644831097727919978_i64),(-3948673326724447906_i64),2476639629582610925_i64,1634630703865020915_i64,1290140964911976457_i64,(-8819039771943182471_i64),(-6094950051530345521_i64),2005255468396677493_i64];
_2 = _1;
_2 = [(-5196087044869099439_i64),3121931999618084687_i64,(-6579279868085782637_i64),(-1579488766719805006_i64),4324070028013292826_i64,(-9174660374758680725_i64),4426691502738415100_i64,(-6715764783312955164_i64)];
RET = [(-7822939365138889720_i64),(-67387833135731431_i64),(-491506002056976800_i64),(-5898578758618804480_i64),672923610303639698_i64,(-756235537097033147_i64),5253287202651052469_i64,(-2031300832326402183_i64)];
_4.0 = _2;
_6 = (_4.0,);
_3 = (_4.0,);
_2 = [(-3740222038488292401_i64),(-4591598547053337049_i64),5674153471124942392_i64,7249644606810685699_i64,6805209968516784460_i64,(-6083144996792609969_i64),997961641346214647_i64,(-3250883390513942697_i64)];
_3.0 = _6.0;
_9 = !6_usize;
_5 = 59_i8;
RET = [(-6786540304090737606_i64),4177803278625875547_i64,(-2694160529878996116_i64),6419636948387343438_i64,(-6533251869475405344_i64),(-2029859577892313925_i64),2319584794947051842_i64,(-1948072614345423428_i64)];
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
59 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_5 = 29_i8;
_3 = _4;
_6 = (_2,);
_6.0 = [8190010926041671475_i64,(-3335681099016761943_i64),(-4135352847086981494_i64),7385713230882087684_i64,(-1764027537214729115_i64),5236415381900283455_i64,(-3901158081824781892_i64),(-250090495317897042_i64)];
_6.0 = [(-863875028896721796_i64),9164263535668832234_i64,(-1258794972230211911_i64),(-8468198190160038594_i64),(-8561104556149010551_i64),(-3645125050089387152_i64),(-6153317218657182306_i64),5921389675705896945_i64];
RET = [8886519546487802778_i64,6954780055563768031_i64,(-1748029108191541535_i64),(-155681616563310587_i64),(-6615567295961634541_i64),6104068979270938200_i64,(-4487471480786891237_i64),5648375239310977544_i64];
_3 = (_2,);
RET = [9166505733745930252_i64,(-7599846763768860508_i64),(-165501284706997463_i64),4284376635760747509_i64,6871681792177125786_i64,(-8298099849203139585_i64),(-1446367689337676311_i64),3647457266664689979_i64];
_10 = _5 == _5;
_13 = 3708040712384599341_u64;
_14.fld3.0.0 = !292417393292528982772760265301819920325_u128;
_4 = (RET,);
_4.0 = [(-7591819615833249030_i64),(-7408321000139882613_i64),(-1056819653836967804_i64),7364938507861919718_i64,(-5853999484166245237_i64),2824238561300986844_i64,4901708353982500449_i64,5500239623913081379_i64];
RET = _4.0;
_13 = 2085739560638737235_u64 + 3533250920650521209_u64;
_14.fld4.0 = [(-7861762824748442141_i64),7330802799579553481_i64,(-2931291317262156494_i64),(-3636938139575528650_i64),(-1199586812574757934_i64),1237892686176448792_i64,1396793653299985452_i64,6900953823945658789_i64];
Call(_14.fld1 = fn4(_2, _14.fld4.0, _10, _5, _14.fld4.0, RET, _14.fld4, _6, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_6 = (RET,);
_14.fld7 = 159537429_i32 as i128;
_14.fld0 = _14.fld1 >= _14.fld1;
_14.fld3.1 = (-1500693345_i32);
_5 = (-31_i8) << _13;
_14.fld2 = [145_u8,8_u8,185_u8,114_u8,145_u8];
_6 = (_4.0,);
_5 = (-92_i8);
_11 = _14.fld1 as i16;
_14.fld4 = (RET,);
_14.fld3.3 = !_9;
_10 = !_14.fld0;
Call(_15 = core::intrinsics::transmute(_13), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_14.fld1 = '\u{ac816}';
_8 = _15 - _15;
_4.0 = [5776678237105626556_i64,619566869863441797_i64,3114240585433284886_i64,8432914928403855315_i64,176404190262881810_i64,(-7396009508240516297_i64),(-8678537247973473893_i64),1708190477682610309_i64];
_12 = 233_u8 as isize;
_16.1 = _14.fld3.1 as u16;
Goto(bb9)
}
bb9 = {
_14.fld3.0 = (212328877700894073006335079561193826843_u128, _16.1);
_14.fld3.1 = 248568090_i32;
_14.fld3.2 = !_13;
_14.fld5.0 = _11;
_9 = _14.fld3.3;
_19 = [_14.fld3.3,_14.fld3.3];
_14.fld6 = [(-8649844936521079856_i64),(-8436995879054826441_i64),(-4342889952338990823_i64)];
_14.fld7 = -(-141226895006506623276258374250571506024_i128);
_5 = (-92_i8) & 105_i8;
_20 = _14.fld5;
_14.fld3.4 = core::ptr::addr_of_mut!(_14.fld3.1);
Goto(bb10)
}
bb10 = {
_20 = (_14.fld5.0,);
_14.fld3.0.0 = 37005589324023230843430548022230881849_u128 - 186301375392512077173665165440442592711_u128;
match _14.fld3.1 {
0 => bb9,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
248568090 => bb11,
_ => bb6
}
}
bb11 = {
_16.1 = _14.fld3.1 as u16;
_14.fld6 = [(-1255883613496165371_i64),8812633825651681401_i64,(-3695339389775641675_i64)];
_14.fld7 = _20.0 as i128;
_6.0 = [2575594765420072149_i64,439419438631876268_i64,(-8906754765893773705_i64),7076233333675299547_i64,(-4265490819421582548_i64),4830920799257610296_i64,(-6701016816502488775_i64),(-6886178543026574346_i64)];
_19 = [_9,_9];
_14.fld4.0 = [(-693630179816326349_i64),8725542427449303579_i64,2358202158649240374_i64,(-3763065983162177616_i64),7297227604816550055_i64,(-5511046512427430844_i64),5136676588210659081_i64,(-6097022178968078281_i64)];
_11 = _20.0;
Goto(bb12)
}
bb12 = {
_16 = (_14.fld3.0.0, _14.fld3.0.1);
_21.0 = _2;
_14.fld4.0 = [1966221932203500872_i64,(-1359184240901980765_i64),(-8511444969959896838_i64),(-3969181983605628405_i64),3531709159891032308_i64,9037430782814666095_i64,(-162588982747345262_i64),(-8015509783088795748_i64)];
_2 = _21.0;
_14.fld3.0.1 = _16.1 - _16.1;
_14.fld4.0 = RET;
_12 = _8;
_5 = 109_i8;
_14.fld5 = (_11,);
_23 = [_5,_5,_5,_5];
match _5 {
0 => bb11,
1 => bb2,
2 => bb3,
3 => bb6,
109 => bb13,
_ => bb5
}
}
bb13 = {
_21 = (_2,);
_14.fld2 = [231_u8,6_u8,115_u8,162_u8,179_u8];
_17 = _14.fld6;
_23 = [_5,_5,_5,_5];
_14.fld3.0 = _16;
_14.fld2 = [205_u8,140_u8,13_u8,47_u8,16_u8];
_1 = [(-6825294273251173123_i64),8404187360623457404_i64,(-8375294504482490163_i64),(-695750262007205071_i64),(-4601122706219622965_i64),1014324272312826914_i64,8821788219351440410_i64,7250677402949766548_i64];
_14.fld3.0 = (_16.0, _16.1);
_14.fld7 = _14.fld3.3 as i128;
_11 = !_20.0;
_16.1 = !_14.fld3.0.1;
_12 = _8 - _8;
_21.0 = _3.0;
_13 = !_14.fld3.2;
_14.fld0 = _10;
Goto(bb14)
}
bb14 = {
_14.fld1 = '\u{109825}';
_26 = [_5,_5,_5,_5];
_16 = _14.fld3.0;
_22 = _14.fld1;
_11 = !_14.fld5.0;
_28 = [_14.fld0,_14.fld0,_10,_10,_10,_14.fld0,_10];
_29 = _12;
_6.0 = [(-1678545112021013147_i64),7653537284398992238_i64,7138825544355298170_i64,(-4383176932531325912_i64),(-121198697441760889_i64),4359987091426647917_i64,(-2895057631903067077_i64),2992034300619390143_i64];
_14.fld5.0 = _11;
_5 = !81_i8;
_14.fld0 = !_10;
_19 = [_14.fld3.3,_14.fld3.3];
_6.0 = [(-6518597758387532471_i64),(-2858313811017297555_i64),3741283374023301002_i64,(-4384416762972108165_i64),(-194352040867552166_i64),1006058595257875316_i64,(-8853623980859502652_i64),1965008642844580030_i64];
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(3_usize, 5_usize, Move(_5), 2_usize, Move(_2), 12_usize, Move(_12), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(3_usize, 16_usize, Move(_16), 26_usize, Move(_26), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(3_usize, 21_usize, Move(_21), 23_usize, Move(_23), 29_usize, Move(_29), 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [i64; 8],mut _2: [i64; 8],mut _3: bool,mut _4: i8,mut _5: [i64; 8],mut _6: [i64; 8],mut _7: ([i64; 8],),mut _8: ([i64; 8],),mut _9: [i64; 8]) -> char {
mir! {
type RET = char;
let _10: [isize; 2];
let _11: *mut bool;
let _12: (u32,);
let _13: f32;
let _14: bool;
let _15: Adt49;
let _16: f64;
let _17: (u32,);
let _18: f32;
let _19: *const bool;
let _20: [i8; 4];
let _21: (u128, u16);
let _22: Adt45;
let _23: [usize; 2];
let _24: u32;
let _25: i16;
let _26: [bool; 7];
let _27: i8;
let _28: Adt57;
let _29: u32;
let _30: ();
let _31: ();
{
_6 = [(-7751297072122732626_i64),(-2194636840167614642_i64),5552175806294460710_i64,(-353290605727929196_i64),(-4507566734905500016_i64),5469869998864605840_i64,5678106543914302644_i64,5438880105426927859_i64];
_7 = _8;
RET = '\u{2d661}';
_5 = _6;
_6 = _7.0;
_3 = RET > RET;
RET = '\u{7fd2b}';
_11 = core::ptr::addr_of_mut!(_3);
_7.0 = [1305795781652964890_i64,(-5939449100286681946_i64),438712372681995394_i64,(-2910694800795390792_i64),(-5601368521924158752_i64),(-6723638073181715910_i64),(-2453129254537764447_i64),2520490108340629241_i64];
_7 = (_8.0,);
_10 = [3_isize,(-9223372036854775808_isize)];
_2 = [(-4681716080299738967_i64),(-4083397546157118254_i64),8491743168072498051_i64,(-1032558358819194295_i64),(-8302653921377371317_i64),(-2684505158072908127_i64),(-4907339541584396924_i64),4677224074752665222_i64];
_1 = [(-111777652649519307_i64),5480656471141102645_i64,3175874478796898808_i64,1166410020430001469_i64,6467215926588432118_i64,(-290000809522058509_i64),(-1860771422925727006_i64),(-3093076447508218440_i64)];
_11 = core::ptr::addr_of_mut!((*_11));
_7 = _8;
_12.0 = 1437323058_u32 & 3197461259_u32;
_8.0 = [4737371154685676335_i64,5543299396178732004_i64,(-6350797918424980101_i64),7180047739750921260_i64,8068230638568659882_i64,737731380038492909_i64,(-7158773282914446364_i64),(-7801573922327270091_i64)];
_8 = (_7.0,);
_12.0 = _4 as u32;
_11 = core::ptr::addr_of_mut!((*_11));
_9 = _1;
_1 = _9;
_12.0 = 1648560315_u32;
Call(_7.0 = core::intrinsics::transmute(_9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = !true;
RET = '\u{101810}';
_12.0 = 4_usize as u32;
_12.0 = !928085530_u32;
_3 = !true;
_4 = (-115_i8);
_5 = _6;
_3 = false ^ true;
_2 = _6;
_11 = core::ptr::addr_of_mut!(_3);
_1 = [(-2957190500493140851_i64),178020852399550531_i64,8508638706163119377_i64,8544399528280647687_i64,8933088091327791907_i64,3668203055445977560_i64,(-8873653961617115303_i64),3161311450664447596_i64];
_3 = true;
match _4 {
0 => bb2,
340282366920938463463374607431768211341 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_11 = core::ptr::addr_of_mut!(_3);
_9 = [(-6112951913842471344_i64),(-2081293277490178235_i64),(-2977873069486211870_i64),4922582702457896689_i64,(-5120792013988692907_i64),(-5725239465138957735_i64),(-4843328563984813374_i64),5174273114867848236_i64];
Call(_5 = fn5(_10, _7, _2, _1, _9), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_13 = 1273066717355754672_u64 as f32;
_5 = [(-3215060814221553225_i64),(-2726072608138299910_i64),(-8991405614840794519_i64),(-4459055600510913709_i64),929811607194429363_i64,(-413539317360728452_i64),(-595482441796100983_i64),(-1085279740603763565_i64)];
_10 = [9223372036854775807_isize,77_isize];
_7 = _8;
_12 = (1801207985_u32,);
_13 = _12.0 as f32;
_2 = [(-6745582688341811567_i64),(-6591642280954511427_i64),(-5658988902443974279_i64),(-6302540075046743975_i64),(-1347800437787767617_i64),2654740428925518090_i64,1941060224454800053_i64,(-5835716816753403762_i64)];
_8.0 = [6528186363423279267_i64,(-7927281765889711094_i64),(-8147004372643223090_i64),5084056859706626784_i64,809876147227613632_i64,(-6154248550036060541_i64),8632995297814236196_i64,(-8272721206316813610_i64)];
_9 = [7241148553580327092_i64,4220100219379158407_i64,1501421697906131737_i64,7550020751225263162_i64,(-6198170519107145492_i64),(-8072346437696607833_i64),5107721132462180957_i64,(-5070644788658455427_i64)];
_12.0 = 2547522547_u32;
Goto(bb6)
}
bb6 = {
_15.fld3.1 = (-225636335_i32);
_12 = (3268693758_u32,);
_8.0 = [8653532717779499585_i64,6161393031527948168_i64,2487589142827433029_i64,(-1269438161589075514_i64),6699768519270101954_i64,(-5202346098240934924_i64),(-8098076059926941812_i64),(-6620418669647903883_i64)];
RET = '\u{f65ff}';
_15.fld3.0.1 = 28116_u16;
_2 = _6;
_11 = core::ptr::addr_of_mut!(_3);
_15.fld1 = _7;
_8.0 = _15.fld1.0;
_15.fld3.4 = core::ptr::addr_of_mut!(_15.fld3.1);
_15.fld3.0.0 = 73922921838093190349020998106354963726_u128;
_15.fld3.1 = 1605588520_i32;
_13 = _12.0 as f32;
_15.fld3.0.0 = 8937932417127788737701372177162158965_u128 & 61275628630932479301437003232834104915_u128;
RET = '\u{84de4}';
_15.fld1 = (_6,);
match _15.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
1605588520 => bb9,
_ => bb8
}
}
bb7 = {
_13 = 1273066717355754672_u64 as f32;
_5 = [(-3215060814221553225_i64),(-2726072608138299910_i64),(-8991405614840794519_i64),(-4459055600510913709_i64),929811607194429363_i64,(-413539317360728452_i64),(-595482441796100983_i64),(-1085279740603763565_i64)];
_10 = [9223372036854775807_isize,77_isize];
_7 = _8;
_12 = (1801207985_u32,);
_13 = _12.0 as f32;
_2 = [(-6745582688341811567_i64),(-6591642280954511427_i64),(-5658988902443974279_i64),(-6302540075046743975_i64),(-1347800437787767617_i64),2654740428925518090_i64,1941060224454800053_i64,(-5835716816753403762_i64)];
_8.0 = [6528186363423279267_i64,(-7927281765889711094_i64),(-8147004372643223090_i64),5084056859706626784_i64,809876147227613632_i64,(-6154248550036060541_i64),8632995297814236196_i64,(-8272721206316813610_i64)];
_9 = [7241148553580327092_i64,4220100219379158407_i64,1501421697906131737_i64,7550020751225263162_i64,(-6198170519107145492_i64),(-8072346437696607833_i64),5107721132462180957_i64,(-5070644788658455427_i64)];
_12.0 = 2547522547_u32;
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
_15.fld1.0 = [(-3816176509743915151_i64),(-8094739720738105755_i64),1479296546708428940_i64,5728896364399248640_i64,4908995663812743889_i64,7686709735129539667_i64,(-6469107776048538190_i64),381920607953600487_i64];
_7.0 = [(-2815287067964054130_i64),(-2306365109306124731_i64),(-6929739991074192557_i64),1423741083272311657_i64,(-4877176868417435566_i64),(-4398477207533982485_i64),(-6306028874850268685_i64),(-4546762289570741243_i64)];
_21 = (_15.fld3.0.0, _15.fld3.0.1);
_12.0 = _4 as u32;
_2 = _1;
_13 = _15.fld3.1 as f32;
Goto(bb10)
}
bb10 = {
_15.fld3.4 = core::ptr::addr_of_mut!(_15.fld3.1);
_15.fld1 = (_8.0,);
_21.0 = !_15.fld3.0.0;
_6 = [(-4037682950069935664_i64),1628207839492282476_i64,5524689593850423162_i64,5612319547993457131_i64,(-5292965304918003748_i64),(-4800095242078650998_i64),(-4661971463115563316_i64),405976878696960952_i64];
_15.fld1 = (_2,);
_10 = [(-29_isize),(-9223372036854775808_isize)];
_4 = (-94_i8);
_10 = [(-9223372036854775808_isize),9223372036854775807_isize];
_15.fld2 = core::ptr::addr_of_mut!(_15.fld3.3);
_12.0 = 1027798439_u32;
_15.fld3.1 = (-1073216898_i32);
_21 = _15.fld3.0;
_15.fld3.0.1 = 4536057351970054027_usize as u16;
_20 = [_4,_4,_4,_4];
_15.fld1.0 = _8.0;
_1 = [(-6035814280911107517_i64),8298141920959237557_i64,3430730837606735669_i64,(-3999664348846668146_i64),(-9104254894960796387_i64),208710618416613814_i64,2103891385070331291_i64,368326374146373381_i64];
match _15.fld3.1 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb6,
4 => bb5,
340282366920938463463374607430694994558 => bb12,
_ => bb11
}
}
bb11 = {
_15.fld3.1 = (-225636335_i32);
_12 = (3268693758_u32,);
_8.0 = [8653532717779499585_i64,6161393031527948168_i64,2487589142827433029_i64,(-1269438161589075514_i64),6699768519270101954_i64,(-5202346098240934924_i64),(-8098076059926941812_i64),(-6620418669647903883_i64)];
RET = '\u{f65ff}';
_15.fld3.0.1 = 28116_u16;
_2 = _6;
_11 = core::ptr::addr_of_mut!(_3);
_15.fld1 = _7;
_8.0 = _15.fld1.0;
_15.fld3.4 = core::ptr::addr_of_mut!(_15.fld3.1);
_15.fld3.0.0 = 73922921838093190349020998106354963726_u128;
_15.fld3.1 = 1605588520_i32;
_13 = _12.0 as f32;
_15.fld3.0.0 = 8937932417127788737701372177162158965_u128 & 61275628630932479301437003232834104915_u128;
RET = '\u{84de4}';
_15.fld1 = (_6,);
match _15.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
1605588520 => bb9,
_ => bb8
}
}
bb12 = {
_15.fld2 = core::ptr::addr_of_mut!(_15.fld3.3);
_2 = _1;
_15.fld2 = core::ptr::addr_of_mut!(_15.fld3.3);
RET = '\u{81313}';
_8 = (_5,);
_10 = [(-61_isize),(-101_isize)];
_7 = (_15.fld1.0,);
_14 = (*_11);
_24 = _15.fld3.1 as u32;
_18 = _13;
_9 = _15.fld1.0;
_11 = core::ptr::addr_of_mut!((*_11));
_3 = _14;
_19 = core::ptr::addr_of!(_3);
_15.fld3.0.1 = _21.1 / _21.1;
_17 = _12;
_25 = RET as i16;
_12 = _17;
_15.fld3.1 = 1601457251_i32 + (-1892698418_i32);
_20 = [_4,_4,_4,_4];
_20 = [_4,_4,_4,_4];
_24 = !_12.0;
_6 = [(-2124844009987284995_i64),6413083530500883443_i64,(-5497851915483079073_i64),(-6228715859422186678_i64),(-7622642555496875951_i64),(-4861369327270256600_i64),(-2373066931046509866_i64),7478854278975731093_i64];
match _12.0 {
0 => bb9,
1 => bb13,
1027798439 => bb15,
_ => bb14
}
}
bb13 = {
_15.fld3.1 = (-225636335_i32);
_12 = (3268693758_u32,);
_8.0 = [8653532717779499585_i64,6161393031527948168_i64,2487589142827433029_i64,(-1269438161589075514_i64),6699768519270101954_i64,(-5202346098240934924_i64),(-8098076059926941812_i64),(-6620418669647903883_i64)];
RET = '\u{f65ff}';
_15.fld3.0.1 = 28116_u16;
_2 = _6;
_11 = core::ptr::addr_of_mut!(_3);
_15.fld1 = _7;
_8.0 = _15.fld1.0;
_15.fld3.4 = core::ptr::addr_of_mut!(_15.fld3.1);
_15.fld3.0.0 = 73922921838093190349020998106354963726_u128;
_15.fld3.1 = 1605588520_i32;
_13 = _12.0 as f32;
_15.fld3.0.0 = 8937932417127788737701372177162158965_u128 & 61275628630932479301437003232834104915_u128;
RET = '\u{84de4}';
_15.fld1 = (_6,);
match _15.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
1605588520 => bb9,
_ => bb8
}
}
bb14 = {
Return()
}
bb15 = {
_14 = _3;
_15.fld3.2 = 4587618239434121588_u64;
Goto(bb16)
}
bb16 = {
Call(_30 = dump_var(4_usize, 2_usize, Move(_2), 5_usize, Move(_5), 4_usize, Move(_4), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(4_usize, 24_usize, Move(_24), 10_usize, Move(_10), 9_usize, Move(_9), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [isize; 2],mut _2: ([i64; 8],),mut _3: [i64; 8],mut _4: [i64; 8],mut _5: [i64; 8]) -> [i64; 8] {
mir! {
type RET = [i64; 8];
let _6: [u8; 5];
let _7: i64;
let _8: Adt56;
let _9: char;
let _10: (u32,);
let _11: i128;
let _12: *const i8;
let _13: [i8; 4];
let _14: [bool; 7];
let _15: f32;
let _16: f32;
let _17: bool;
let _18: u128;
let _19: i128;
let _20: u64;
let _21: Adt46;
let _22: (u128, u16);
let _23: (u32,);
let _24: [i8; 4];
let _25: [i64; 3];
let _26: Adt41;
let _27: ();
let _28: ();
{
RET = [4494922408184403795_i64,(-6168420343205166503_i64),(-3472670139442764190_i64),(-9038027659018893151_i64),2694030040220571649_i64,(-8682835040647669717_i64),2737084320528571832_i64,(-5325415368271489170_i64)];
_2.0 = _5;
_2 = (_5,);
_4 = [4252170754065290963_i64,(-8311634963227448206_i64),(-2059967566203286161_i64),4662263399691111796_i64,277988669008733228_i64,1459319417724475675_i64,(-5754340739436133753_i64),(-2860792838615366635_i64)];
RET = [(-4692871366785784102_i64),(-4182302135172542274_i64),5828800544730114164_i64,7405640705095139793_i64,3176534233734789931_i64,1746823555941216672_i64,(-9044757714519398680_i64),(-8482489184773144315_i64)];
_1 = [9223372036854775807_isize,(-113_isize)];
_1 = [9223372036854775807_isize,9223372036854775807_isize];
_6 = [25_u8,24_u8,66_u8,34_u8,126_u8];
_5 = [(-4130075824875953979_i64),3422509503865753768_i64,785058046021157809_i64,5210067748015070601_i64,(-7233895586859690009_i64),(-254451346254792134_i64),7501347522595655519_i64,(-6104447951931059019_i64)];
_2 = (_4,);
_6 = [219_u8,10_u8,151_u8,120_u8,221_u8];
_5 = [7011556462854158833_i64,(-7991133658582045402_i64),(-1888042787298703239_i64),1485159282043065919_i64,5369380524403390386_i64,147640906093036215_i64,(-9067738883194179164_i64),(-1098671614437996678_i64)];
_6 = [241_u8,64_u8,27_u8,27_u8,153_u8];
_7 = !(-8788837690585172217_i64);
_7 = 714227665_i32 as i64;
RET = _4;
_1 = [9223372036854775807_isize,(-51_isize)];
_8.fld2.0 = (225458283066781432844998855673776669469_u128, 10184_u16);
Goto(bb1)
}
bb1 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_8.fld3 = (2610308618_u32,);
_8.fld2.0 = (51932996485802874230159755469630814897_u128, 21375_u16);
_8.fld2.3 = 5958847949145957940_usize & 7_usize;
_1 = [1_isize,(-107_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0.1 = _8.fld3.0 as u16;
RET = _3;
_1 = [9223372036854775807_isize,(-54_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0 = (39324031794628788468664449212754218040_u128, 46155_u16);
_8.fld2.0.1 = !39973_u16;
_8.fld2.2 = !9383762263702730272_u64;
_1 = [(-9223372036854775808_isize),(-99_isize)];
_8.fld2.0 = (104330974623138535520913360502807756087_u128, 18303_u16);
_10 = _8.fld3;
_11 = (-66519468973127291773701458348201462115_i128) | (-154436036181666649637594778498771554002_i128);
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_13 = fn6(_4, _8.fld2.0.0, _5, _8.fld2.3, _8.fld3.0, _2, _5, _8.fld2.0.1, RET, _4, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8.fld2.0.1 = 23067_u16 + 52246_u16;
_8.fld0 = !_8.fld2.3;
_3 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2 = (_5,);
_8.fld0 = _11 as usize;
_8.fld3 = (_10.0,);
_8.fld2.1 = 848174784_i32 >> _8.fld2.2;
_14 = [false,true,true,false,true,false,true];
_8.fld2.0.0 = 185_u8 as u128;
_4 = _2.0;
_8.fld2.2 = 356825719217987196_u64;
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.2 = 16759490392650050596_u64;
_8.fld2.1 = 260442066_i32 * 1436877939_i32;
_9 = '\u{dce76}';
_10 = _8.fld3;
_8.fld2.3 = _8.fld0;
_2 = (_4,);
_8.fld2.0.1 = 63973_u16 >> _11;
_8.fld2.0 = (35699845902983528650205179269270214811_u128, 60323_u16);
_4 = [_7,_7,_7,_7,_7,_7,_7,_7];
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
match _8.fld3.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
2610308618 => bb8,
_ => bb7
}
}
bb3 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_8.fld3 = (2610308618_u32,);
_8.fld2.0 = (51932996485802874230159755469630814897_u128, 21375_u16);
_8.fld2.3 = 5958847949145957940_usize & 7_usize;
_1 = [1_isize,(-107_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0.1 = _8.fld3.0 as u16;
RET = _3;
_1 = [9223372036854775807_isize,(-54_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0 = (39324031794628788468664449212754218040_u128, 46155_u16);
_8.fld2.0.1 = !39973_u16;
_8.fld2.2 = !9383762263702730272_u64;
_1 = [(-9223372036854775808_isize),(-99_isize)];
_8.fld2.0 = (104330974623138535520913360502807756087_u128, 18303_u16);
_10 = _8.fld3;
_11 = (-66519468973127291773701458348201462115_i128) | (-154436036181666649637594778498771554002_i128);
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_13 = fn6(_4, _8.fld2.0.0, _5, _8.fld2.3, _8.fld3.0, _2, _5, _8.fld2.0.1, RET, _4, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_14 = [false,true,false,false,false,true,false];
_3 = [_7,_7,_7,_7,_7,_7,_7,_7];
_8.fld2.0 = (234202381768005818873240924001307998487_u128, 53924_u16);
_8.fld2.0 = (153440876752951713020916847450077668387_u128, 45545_u16);
_3 = [_7,_7,_7,_7,_7,_7,_7,_7];
_16 = (-73_i8) as f32;
_15 = -_16;
_8.fld2.3 = _8.fld0;
_13 = [(-121_i8),(-20_i8),(-44_i8),(-105_i8)];
_5 = _2.0;
RET = _5;
_18 = _8.fld2.0.0;
_7 = (-8307566363350488490_i64);
Call(_8.fld2.2 = fn7(_18, _18, RET, RET, RET, _8.fld2.0.0, _11, _2.0, _8.fld2.0.1, _2, _2.0, RET, _9, _11, _5), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_19 = _11;
_16 = _7 as f32;
_8.fld3.0 = _8.fld2.0.1 as u32;
_2.0 = RET;
_8.fld0 = _8.fld2.3;
_10 = (_8.fld3.0,);
_21.fld3.4 = core::ptr::addr_of_mut!(_21.fld3.1);
_21.fld6 = [_7,_7,_7];
_7 = (-1476438825523180051_i64) * 2908817563504244564_i64;
match _18 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
153440876752951713020916847450077668387 => bb11,
_ => bb10
}
}
bb10 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_8.fld3 = (2610308618_u32,);
_8.fld2.0 = (51932996485802874230159755469630814897_u128, 21375_u16);
_8.fld2.3 = 5958847949145957940_usize & 7_usize;
_1 = [1_isize,(-107_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0.1 = _8.fld3.0 as u16;
RET = _3;
_1 = [9223372036854775807_isize,(-54_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0 = (39324031794628788468664449212754218040_u128, 46155_u16);
_8.fld2.0.1 = !39973_u16;
_8.fld2.2 = !9383762263702730272_u64;
_1 = [(-9223372036854775808_isize),(-99_isize)];
_8.fld2.0 = (104330974623138535520913360502807756087_u128, 18303_u16);
_10 = _8.fld3;
_11 = (-66519468973127291773701458348201462115_i128) | (-154436036181666649637594778498771554002_i128);
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_13 = fn6(_4, _8.fld2.0.0, _5, _8.fld2.3, _8.fld3.0, _2, _5, _8.fld2.0.1, RET, _4, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_21.fld3.0 = (_8.fld2.0.0, _8.fld2.0.1);
_21.fld3.4 = _8.fld2.4;
_21.fld7 = 108_isize as i128;
_21.fld7 = true as i128;
_8.fld2.2 = _8.fld2.0.0 as u64;
_24 = _13;
Goto(bb12)
}
bb12 = {
_22.1 = _8.fld2.0.1 >> _8.fld2.3;
_21.fld5 = (2898_i16,);
_21.fld3.2 = _7 as u64;
_8.fld2.1 = (-711156961_i32);
_21.fld0 = true;
_21.fld4.0 = [_7,_7,_7,_7,_7,_7,_7,_7];
_25 = [_7,_7,_7];
_13 = [(-38_i8),11_i8,5_i8,(-127_i8)];
_20 = _21.fld3.0.0 as u64;
match _8.fld2.0.0 {
153440876752951713020916847450077668387 => bb14,
_ => bb13
}
}
bb13 = {
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
_8.fld3 = (2610308618_u32,);
_8.fld2.0 = (51932996485802874230159755469630814897_u128, 21375_u16);
_8.fld2.3 = 5958847949145957940_usize & 7_usize;
_1 = [1_isize,(-107_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0.1 = _8.fld3.0 as u16;
RET = _3;
_1 = [9223372036854775807_isize,(-54_isize)];
_8.fld2.4 = core::ptr::addr_of_mut!(_8.fld2.1);
_8.fld2.0 = (39324031794628788468664449212754218040_u128, 46155_u16);
_8.fld2.0.1 = !39973_u16;
_8.fld2.2 = !9383762263702730272_u64;
_1 = [(-9223372036854775808_isize),(-99_isize)];
_8.fld2.0 = (104330974623138535520913360502807756087_u128, 18303_u16);
_10 = _8.fld3;
_11 = (-66519468973127291773701458348201462115_i128) | (-154436036181666649637594778498771554002_i128);
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_13 = fn6(_4, _8.fld2.0.0, _5, _8.fld2.3, _8.fld3.0, _2, _5, _8.fld2.0.1, RET, _4, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_10.0 = !_8.fld3.0;
_21.fld3.3 = _8.fld2.3 + _8.fld0;
_7 = !(-129964398025370866_i64);
_21.fld1 = _9;
_21.fld3.1 = !_8.fld2.1;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(5_usize, 19_usize, Move(_19), 1_usize, Move(_1), 14_usize, Move(_14), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(5_usize, 25_usize, Move(_25), 10_usize, Move(_10), 2_usize, Move(_2), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [i64; 8],mut _2: u128,mut _3: [i64; 8],mut _4: usize,mut _5: u32,mut _6: ([i64; 8],),mut _7: [i64; 8],mut _8: u16,mut _9: [i64; 8],mut _10: [i64; 8],mut _11: [i64; 8]) -> [i8; 4] {
mir! {
type RET = [i8; 4];
let _12: u128;
let _13: isize;
let _14: [isize; 2];
let _15: *mut ([i64; 8],);
let _16: Adt47;
let _17: [usize; 2];
let _18: [i8; 4];
let _19: &'static u64;
let _20: [isize; 2];
let _21: [i8; 4];
let _22: Adt42;
let _23: i16;
let _24: Adt46;
let _25: char;
let _26: *mut ([i64; 8],);
let _27: bool;
let _28: isize;
let _29: isize;
let _30: Adt49;
let _31: Adt44;
let _32: [u8; 5];
let _33: (i16,);
let _34: i16;
let _35: ();
let _36: ();
{
_1 = [3484322590103175132_i64,6421913958396372036_i64,(-1308595832568530609_i64),5016068458724312266_i64,8472342629132081653_i64,(-4578710633263897751_i64),(-7250224227152392651_i64),8073799350054379982_i64];
RET = [(-2_i8),111_i8,85_i8,90_i8];
Goto(bb1)
}
bb1 = {
_6.0 = [(-7115477246596157417_i64),(-8756790756376903293_i64),1990206366184762158_i64,(-1788084409007999663_i64),8233038819433479269_i64,(-6155500551609222732_i64),(-3374970976109055735_i64),4261139838042265525_i64];
_12 = !_2;
_8 = '\u{e2dc3}' as u16;
match _5 {
0 => bb2,
2610308618 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_5 = 3925013642_u32;
RET = [(-124_i8),(-3_i8),(-58_i8),(-41_i8)];
_13 = !(-9223372036854775808_isize);
_6 = (_3,);
RET = [49_i8,(-4_i8),86_i8,(-25_i8)];
_12 = _2 + _2;
_14 = [_13,_13];
_8 = 835602696_i32 as u16;
_5 = !1996570110_u32;
_13 = 26_i8 as isize;
_3 = _10;
_17 = [_4,_4];
_15 = core::ptr::addr_of_mut!(_6);
RET = [(-120_i8),(-115_i8),124_i8,66_i8];
_11 = [(-1770277950864702670_i64),1992816280136568961_i64,(-5830475640610323808_i64),(-4035506029639667266_i64),8892159249933944799_i64,3858932230985579408_i64,2595437334792544355_i64,6215345658100311402_i64];
_8 = !60575_u16;
_13 = (-5714349432041677073_i64) as isize;
_17 = [_4,_4];
_12 = !_2;
RET = [(-48_i8),(-44_i8),(-41_i8),78_i8];
_1 = [3860712500748446311_i64,(-5939613769328505133_i64),1914314384820360209_i64,(-360824151706225780_i64),(-7908390698473636003_i64),(-4667458930503113487_i64),665948217951760494_i64,(-1843321548505023117_i64)];
_5 = 3864059203_u32;
_7 = (*_15).0;
_20 = [_13,_13];
_11 = [4056401732715965299_i64,8597310761234224265_i64,3358583057778652506_i64,(-3250787576087949325_i64),170559867193980127_i64,4064811892921427636_i64,5851875235445220275_i64,9190445043035333863_i64];
Goto(bb5)
}
bb5 = {
_14 = _20;
_6 = (_3,);
_5 = 1213794705_u32;
_8 = 70587299705704175685127103950490580630_i128 as u16;
_20 = [_13,_13];
_4 = (-29611_i16) as usize;
_1 = [(-5904262384540259685_i64),(-5333538659180762866_i64),265611169570582715_i64,(-4264488449888589190_i64),(-3434537128869636208_i64),7715264200860516301_i64,2279574374759676962_i64,4702529664871113107_i64];
_15 = core::ptr::addr_of_mut!(_6);
_4 = !2_usize;
_1 = [8529736289764784033_i64,6883024415169067520_i64,(-4705624564168358899_i64),739893593303459689_i64,8833766105388930824_i64,(-8025566916700855167_i64),8427052532852364961_i64,(-2191295488608918458_i64)];
_18 = [87_i8,(-1_i8),(-107_i8),24_i8];
_6 = (_7,);
_17 = [_4,_4];
_24.fld4.0 = _3;
_24.fld6 = [4925827633268690592_i64,4431802329192610003_i64,(-4059058169377870012_i64)];
_24.fld3.0.1 = !_8;
_24.fld1 = '\u{b9f9d}';
_4 = 2_usize + 7647161209633599889_usize;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
1213794705 => bb9,
_ => bb8
}
}
bb6 = {
_5 = 3925013642_u32;
RET = [(-124_i8),(-3_i8),(-58_i8),(-41_i8)];
_13 = !(-9223372036854775808_isize);
_6 = (_3,);
RET = [49_i8,(-4_i8),86_i8,(-25_i8)];
_12 = _2 + _2;
_14 = [_13,_13];
_8 = 835602696_i32 as u16;
_5 = !1996570110_u32;
_13 = 26_i8 as isize;
_3 = _10;
_17 = [_4,_4];
_15 = core::ptr::addr_of_mut!(_6);
RET = [(-120_i8),(-115_i8),124_i8,66_i8];
_11 = [(-1770277950864702670_i64),1992816280136568961_i64,(-5830475640610323808_i64),(-4035506029639667266_i64),8892159249933944799_i64,3858932230985579408_i64,2595437334792544355_i64,6215345658100311402_i64];
_8 = !60575_u16;
_13 = (-5714349432041677073_i64) as isize;
_17 = [_4,_4];
_12 = !_2;
RET = [(-48_i8),(-44_i8),(-41_i8),78_i8];
_1 = [3860712500748446311_i64,(-5939613769328505133_i64),1914314384820360209_i64,(-360824151706225780_i64),(-7908390698473636003_i64),(-4667458930503113487_i64),665948217951760494_i64,(-1843321548505023117_i64)];
_5 = 3864059203_u32;
_7 = (*_15).0;
_20 = [_13,_13];
_11 = [4056401732715965299_i64,8597310761234224265_i64,3358583057778652506_i64,(-3250787576087949325_i64),170559867193980127_i64,4064811892921427636_i64,5851875235445220275_i64,9190445043035333863_i64];
Goto(bb5)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_24.fld3.0.0 = _2 - _12;
_24.fld3.0.0 = _2 | _2;
_7 = _24.fld4.0;
_24.fld6 = [4322920883789721628_i64,(-2850442448992305333_i64),7202263664071996384_i64];
_23 = -24448_i16;
_24.fld5 = (_23,);
_21 = [42_i8,88_i8,(-123_i8),(-84_i8)];
_14 = [_13,_13];
Goto(bb10)
}
bb10 = {
_24.fld2 = [226_u8,119_u8,124_u8,41_u8,62_u8];
_4 = 8499462959868647464_usize << _24.fld3.0.0;
_24.fld3.1 = -2053307662_i32;
_28 = 205_u8 as isize;
match _5 {
0 => bb4,
1213794705 => bb12,
_ => bb11
}
}
bb11 = {
_24.fld3.0.0 = _2 - _12;
_24.fld3.0.0 = _2 | _2;
_7 = _24.fld4.0;
_24.fld6 = [4322920883789721628_i64,(-2850442448992305333_i64),7202263664071996384_i64];
_23 = -24448_i16;
_24.fld5 = (_23,);
_21 = [42_i8,88_i8,(-123_i8),(-84_i8)];
_14 = [_13,_13];
Goto(bb10)
}
bb12 = {
_27 = !true;
_30.fld1 = (_7,);
_30.fld1 = (*_15);
_30.fld3.2 = !612737327517888159_u64;
_19 = &_30.fld3.2;
match _2 {
0 => bb1,
1 => bb10,
2 => bb11,
3 => bb4,
104330974623138535520913360502807756087 => bb13,
_ => bb5
}
}
bb13 = {
_19 = &(*_19);
_2 = _24.fld3.0.0 + _12;
_30.fld2 = core::ptr::addr_of_mut!(_24.fld3.3);
_30.fld3.0 = _24.fld3.0;
_29 = !_28;
_24.fld3.0.1 = !_30.fld3.0.1;
_24.fld1 = '\u{c5a1f}';
_11 = [(-5845256814445809506_i64),(-6171728065876192129_i64),7625470201133642727_i64,(-7852957174368559401_i64),4971543703094704267_i64,(-2629986813119041950_i64),(-444213865619207124_i64),(-341820017547973562_i64)];
_6 = (_10,);
_24.fld5.0 = !_23;
_24.fld3.4 = core::ptr::addr_of_mut!(_24.fld3.1);
_20 = [_13,_13];
_8 = _30.fld3.0.1;
_4 = 0_usize & 3_usize;
Goto(bb14)
}
bb14 = {
_26 = _15;
_16 = Adt47::Variant1 { fld0: _24.fld2,fld1: _23,fld2: _24.fld6 };
_7 = [272686379185227083_i64,(-7555584761367862110_i64),(-5360174639622556896_i64),5251652994662840848_i64,(-7252890062769077629_i64),(-5727083263757206702_i64),816605012846134966_i64,(-8161331954875264520_i64)];
place!(Field::<[u8; 5]>(Variant(_16, 1), 0)) = [89_u8,84_u8,185_u8,45_u8,109_u8];
_24.fld3.2 = _30.fld3.2;
_20 = [_13,_13];
_10 = _24.fld4.0;
_21 = _18;
_12 = !_2;
_7 = [4406218254651899071_i64,6538615656991815462_i64,(-6721418901131882761_i64),145929053570184163_i64,693265651761653005_i64,6435758052025205264_i64,6287527679439646993_i64,(-6637833188271813290_i64)];
_24.fld3.0.1 = !_30.fld3.0.1;
_30.fld3.0.0 = (-555010550098206243_i64) as u128;
_30.fld3.3 = _5 as usize;
_30.fld3 = (_24.fld3.0, _24.fld3.1, _24.fld3.2, _4, _24.fld3.4);
_24.fld7 = 57374766689019498463386708611588703804_i128;
_30.fld3.0 = (_12, _24.fld3.0.1);
_29 = !_13;
_6.0 = [8862054896153005640_i64,(-8135637208843645870_i64),(-5794981998020739941_i64),(-780219236225312807_i64),(-2913374298302935076_i64),3760189149893884844_i64,4290376935209359820_i64,(-229628669550588606_i64)];
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(6_usize, 1_usize, Move(_1), 3_usize, Move(_3), 6_usize, Move(_6), 27_usize, Move(_27)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(6_usize, 29_usize, Move(_29), 21_usize, Move(_21), 20_usize, Move(_20), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(6_usize, 4_usize, Move(_4), 17_usize, Move(_17), 7_usize, Move(_7), 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: u128,mut _2: u128,mut _3: [i64; 8],mut _4: [i64; 8],mut _5: [i64; 8],mut _6: u128,mut _7: i128,mut _8: [i64; 8],mut _9: u16,mut _10: ([i64; 8],),mut _11: [i64; 8],mut _12: [i64; 8],mut _13: char,mut _14: i128,mut _15: [i64; 8]) -> u64 {
mir! {
type RET = u64;
let _16: [u8; 5];
let _17: ([u8; 5], *mut u128, u32, i32);
let _18: (u32,);
let _19: (u128, u16);
let _20: (i16,);
let _21: char;
let _22: isize;
let _23: f32;
let _24: [i64; 3];
let _25: (u128, u16);
let _26: *mut u16;
let _27: f32;
let _28: [u8; 5];
let _29: Adt51;
let _30: f32;
let _31: (i16,);
let _32: ([i64; 8],);
let _33: Adt42;
let _34: bool;
let _35: char;
let _36: f32;
let _37: ([i64; 8],);
let _38: Adt44;
let _39: u16;
let _40: char;
let _41: [usize; 2];
let _42: i8;
let _43: i8;
let _44: char;
let _45: Adt56;
let _46: u8;
let _47: [i8; 4];
let _48: [bool; 7];
let _49: f32;
let _50: bool;
let _51: *const i8;
let _52: char;
let _53: isize;
let _54: (i16,);
let _55: (i16,);
let _56: [isize; 2];
let _57: [bool; 7];
let _58: isize;
let _59: Adt46;
let _60: u8;
let _61: u64;
let _62: f32;
let _63: Adt42;
let _64: [isize; 2];
let _65: i64;
let _66: [i8; 4];
let _67: u8;
let _68: Adt48;
let _69: Adt45;
let _70: i16;
let _71: f64;
let _72: Adt43;
let _73: [usize; 2];
let _74: isize;
let _75: [isize; 2];
let _76: ();
let _77: ();
{
_7 = _14 & _14;
_1 = !_2;
RET = _9 as u64;
_1 = _2 + _6;
_8 = _10.0;
RET = 6552377529768254661_u64;
_10.0 = _8;
_11 = _10.0;
_10 = (_8,);
_11 = [(-413491421819762792_i64),8329560519520662489_i64,7080984875810041338_i64,4873790436730421390_i64,(-2833602574027920776_i64),(-9180576266963413591_i64),(-4762932382318631236_i64),2753494412807002282_i64];
_8 = [6958543911841035051_i64,5169857673687380042_i64,(-567759467219881847_i64),851013697427270677_i64,8300007439995467290_i64,1494907896110834156_i64,(-1093700243084940098_i64),1353254763983109545_i64];
RET = !3403884965908651396_u64;
_10 = (_3,);
_10.0 = [(-474489945966527254_i64),8241938622543830720_i64,(-8738284074608536503_i64),(-3874924571544350201_i64),(-5443873920701689025_i64),(-7903157781464411805_i64),(-3921897454306273609_i64),(-1881194498020328732_i64)];
_3 = _10.0;
_4 = _5;
_10.0 = [(-2157665017340613705_i64),(-3730058868527873035_i64),(-5266512965959029455_i64),7869494533606059943_i64,(-2960846675194754363_i64),(-4240304966515429183_i64),6079092492191483692_i64,(-749988520602656824_i64)];
_6 = _1;
_11 = _15;
_2 = _6;
RET = (-9223372036854775808_isize) as u64;
_6 = _1;
Goto(bb1)
}
bb1 = {
_7 = !_14;
_17.2 = !1774599330_u32;
_8 = [(-1927586920815199697_i64),4412265686662133784_i64,2670416783043312193_i64,(-3558493274027096849_i64),2117603562225726494_i64,(-2948512630752263375_i64),(-354318783678149381_i64),(-2588895882551779282_i64)];
_7 = (-15_i8) as i128;
_17.0 = [173_u8,105_u8,249_u8,211_u8,221_u8];
_19.0 = !_6;
_18.0 = _17.2 * _17.2;
_1 = _2 ^ _6;
RET = _13 as u64;
_10.0 = [1839925689343019897_i64,3689367671658619649_i64,(-6921124055401129074_i64),1664863930799004470_i64,(-6483877071061216940_i64),(-3794286187194460398_i64),85335585512652345_i64,4443356153151202798_i64];
_16 = [208_u8,109_u8,190_u8,149_u8,218_u8];
_21 = _13;
_14 = 32215_i16 as i128;
_9 = 44229_u16 | 12861_u16;
_6 = _1 - _1;
_8 = _3;
_4 = [(-4263218353827696606_i64),(-4532832747620066099_i64),(-2234037086541948537_i64),(-1138567808999909637_i64),7573603022538376551_i64,5276445497562312845_i64,(-1271700553590382067_i64),9187792689036888455_i64];
_3 = _8;
_17.1 = core::ptr::addr_of_mut!(_6);
Goto(bb2)
}
bb2 = {
_19 = (_1, _9);
_18.0 = !_17.2;
_22 = _17.2 as isize;
_12 = [(-3468370571171596165_i64),1649377184205146591_i64,8347771066771521892_i64,(-3035303047863320898_i64),(-8513436004484305336_i64),8400608425121032351_i64,4148423704382648790_i64,(-1201761535761728234_i64)];
RET = !9034062477477313296_u64;
_29.fld3.fld3.3 = _22 as usize;
_29.fld6 = !4077796142198721665_i64;
_29.fld3.fld2 = core::ptr::addr_of_mut!(_29.fld3.fld3.3);
_27 = _1 as f32;
_29.fld0.0.0 = _17.2 as u128;
RET = _18.0 as u64;
_29.fld3.fld3.0.1 = _29.fld0.0.0 as u16;
_32.0 = _12;
_8 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_29.fld3.fld3.0 = (_6, _9);
_29.fld5 = _29.fld3.fld3.3 >> RET;
_29.fld0.0 = (_29.fld3.fld3.0.0, _29.fld3.fld3.0.1);
Goto(bb3)
}
bb3 = {
_10.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_19 = (_2, _9);
_29.fld3.fld3.4 = core::ptr::addr_of_mut!(_29.fld0.1);
_29.fld0.4 = core::ptr::addr_of_mut!(_17.3);
_17.3 = 1464375109_i32 << _29.fld0.0.0;
_29.fld3.fld1 = _32;
_29.fld0.2 = RET;
_29.fld0.0 = (_2, _29.fld3.fld3.0.1);
_29.fld0.0.0 = 213_u8 as u128;
_29.fld3.fld3.2 = RET;
_28 = _17.0;
_26 = core::ptr::addr_of_mut!(_29.fld3.fld3.0.1);
_26 = core::ptr::addr_of_mut!(_19.1);
_29.fld6 = _1 as i64;
Call(_35 = fn8(_15, _29.fld0.4, _29.fld3.fld1.0, _26, _6, _32.0, _29.fld3.fld3.0.0, _29.fld3.fld3.0.0, _29.fld0.4, _17.3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_29.fld3.fld3.2 = true as u64;
_36 = -_27;
_29.fld3.fld3.0 = (_6, _9);
_17.3 = !(-74916620_i32);
Goto(bb5)
}
bb5 = {
_29.fld2 = _29.fld0.4;
_29.fld0.0.1 = (*_26) * _29.fld3.fld3.0.1;
_24 = [_29.fld6,_29.fld6,_29.fld6];
_34 = _6 >= _29.fld3.fld3.0.0;
_37.0 = _12;
_21 = _13;
_25.0 = _6 - _19.0;
_20 = (429_i16,);
_17.1 = core::ptr::addr_of_mut!(_29.fld3.fld3.0.0);
_31 = (_20.0,);
_29.fld0.0.1 = _9;
RET = !_29.fld0.2;
_25 = (_6, (*_26));
_5 = _29.fld3.fld1.0;
_18 = (_17.2,);
_29.fld0.1 = _29.fld6 as i32;
_29.fld0.0.0 = _9 as u128;
_29.fld3.fld3.2 = !_29.fld0.2;
_25.1 = !_9;
_20.0 = RET as i16;
_29.fld3.fld3.1 = _29.fld0.1;
_29.fld0.3 = !_29.fld5;
Goto(bb6)
}
bb6 = {
_18 = (_17.2,);
_21 = _35;
_29.fld2 = core::ptr::addr_of_mut!(_29.fld0.1);
_27 = _36;
_31 = (_20.0,);
_6 = _29.fld3.fld3.0.0 ^ _29.fld3.fld3.0.0;
_29.fld3.fld3.0.1 = !_9;
_29.fld3.fld3.4 = core::ptr::addr_of_mut!(_29.fld3.fld3.1);
_41 = [_29.fld0.3,_29.fld3.fld3.3];
_29.fld0 = (_29.fld3.fld3.0, _29.fld3.fld3.1, _29.fld3.fld3.2, _29.fld5, _29.fld3.fld3.4);
_19 = (_2, _9);
_26 = core::ptr::addr_of_mut!(_39);
_29.fld3.fld3 = _29.fld0;
_29.fld3.fld3.0 = (_29.fld0.0.0, _29.fld0.0.1);
_8 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_8 = _3;
_45.fld2.1 = _25.1 as i32;
_39 = _29.fld3.fld3.0.1;
_29.fld3.fld2 = core::ptr::addr_of_mut!(_29.fld5);
_30 = _7 as f32;
_45.fld2.0.1 = _29.fld6 as u16;
_23 = 53_i8 as f32;
_45.fld2.0 = (_25.0, (*_26));
Call(_41 = fn15(_29.fld2, _2, _34, _27, _29.fld0.0.0, _29.fld0.0, _17, _21, _29.fld3.fld3.0.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_10.0 = _5;
_21 = _35;
_10 = _32;
Goto(bb8)
}
bb8 = {
_29.fld3.fld2 = core::ptr::addr_of_mut!(_45.fld0);
_37 = (_10.0,);
_32 = _37;
_4 = _10.0;
_29.fld6 = !681571065214333228_i64;
_47 = [8_i8,(-76_i8),38_i8,2_i8];
_29.fld1 = _29.fld6 as f64;
_29.fld4 = core::ptr::addr_of_mut!(_29.fld3.fld1);
_17.1 = core::ptr::addr_of_mut!(_25.0);
_4 = _29.fld3.fld1.0;
_45.fld0 = _29.fld5 & _29.fld0.3;
_49 = _29.fld1 as f32;
_29.fld0.0.1 = _19.1 >> _6;
_29.fld5 = !_45.fld0;
_19 = (_6, _29.fld0.0.1);
_10.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_15 = _29.fld3.fld1.0;
_48 = [_34,_34,_34,_34,_34,_34,_34];
RET = _29.fld0.2 | _29.fld0.2;
_37.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_4 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_1 = _6;
_46 = 209_u8 << _19.1;
_15 = _8;
_45.fld3 = (_17.2,);
_29.fld0.4 = _29.fld2;
Goto(bb9)
}
bb9 = {
_31.0 = _20.0;
_8 = _10.0;
_30 = _29.fld0.1 as f32;
_18 = (_17.2,);
_24 = [_29.fld6,_29.fld6,_29.fld6];
_35 = _21;
_41 = [_29.fld5,_45.fld0];
_19 = (_1, _29.fld0.0.1);
_29.fld4 = core::ptr::addr_of_mut!(_10);
_43 = 5_i8 >> _25.0;
_4 = _11;
_45.fld2.4 = _29.fld2;
_14 = _30 as i128;
_29.fld3.fld3.0.1 = !_29.fld0.0.1;
_22 = 28_isize;
_14 = _7;
_16 = [_46,_46,_46,_46,_46];
_29.fld0.0.1 = _19.1 >> _29.fld3.fld3.0.1;
_30 = _27;
_14 = _7;
_25.0 = _29.fld0.0.0;
_27 = _45.fld3.0 as f32;
Goto(bb10)
}
bb10 = {
_7 = !_14;
_29.fld0.3 = !_45.fld0;
_52 = _21;
Goto(bb11)
}
bb11 = {
_29.fld0.0.1 = (*_26);
_45.fld0 = _29.fld5;
_26 = core::ptr::addr_of_mut!((*_26));
_29.fld0.1 = _31.0 as i32;
_26 = core::ptr::addr_of_mut!(_25.1);
_12 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_29.fld0 = (_19, _29.fld3.fld3.1, _29.fld3.fld3.2, _29.fld3.fld3.3, _29.fld2);
_7 = _20.0 as i128;
_29.fld3.fld3 = (_19, _29.fld0.1, RET, _45.fld0, _29.fld2);
_55 = (_20.0,);
_29.fld0.4 = core::ptr::addr_of_mut!(_45.fld2.1);
_37.0 = _8;
_3 = _4;
_45.fld2.2 = RET << _29.fld3.fld3.3;
_29.fld0.2 = _45.fld2.2;
_59.fld3.2 = _22 as u64;
_59.fld5.0 = _36 as i16;
_22 = -9223372036854775807_isize;
_44 = _35;
_32 = (_4,);
_29.fld3.fld3.2 = !RET;
Goto(bb12)
}
bb12 = {
_59.fld1 = _44;
_8 = _29.fld3.fld1.0;
_14 = _7;
_45.fld2.3 = _45.fld3.0 as usize;
_25 = (_19.0, _29.fld0.0.1);
_59 = Adt46 { fld0: _34,fld1: _52,fld2: _16,fld3: _29.fld3.fld3,fld4: _29.fld3.fld1,fld5: _31,fld6: _24,fld7: _14 };
_29.fld0.0.0 = _17.2 as u128;
_59.fld3.1 = _29.fld3.fld3.2 as i32;
_29.fld4 = core::ptr::addr_of_mut!(_29.fld3.fld1);
_5 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_48 = [_34,_34,_59.fld0,_34,_59.fld0,_34,_59.fld0];
_54 = (_55.0,);
_57 = [_34,_34,_34,_34,_34,_34,_59.fld0];
_62 = _29.fld1 as f32;
_29.fld3.fld3.0.0 = _19.0;
_37.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_29.fld0.0.1 = _52 as u16;
_29.fld3.fld3.2 = _45.fld2.2 ^ RET;
_32.0 = _15;
_30 = _36 * _36;
_45.fld1 = Adt47::Variant1 { fld0: _16,fld1: _54.0,fld2: _24 };
Goto(bb13)
}
bb13 = {
_19.0 = _25.0 << _46;
_37.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_59.fld6 = [_29.fld6,_29.fld6,_29.fld6];
_45.fld0 = _29.fld5;
RET = _29.fld0.1 as u64;
_45.fld2.0.1 = !(*_26);
_59.fld3.0 = _19;
_29.fld0.0.1 = _29.fld1 as u16;
_12 = _8;
_59.fld3.0.1 = (*_26) << _29.fld3.fld3.0.1;
_23 = _30 - _36;
place!(Field::<[u8; 5]>(Variant(_45.fld1, 1), 0)) = [_46,_46,_46,_46,_46];
_31 = (Field::<i16>(Variant(_45.fld1, 1), 1),);
_64 = [_22,_22];
_59.fld4 = (_10.0,);
_3 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_25.1 = _19.1;
_45.fld2.4 = core::ptr::addr_of_mut!(_59.fld3.1);
_61 = _29.fld3.fld3.2;
_37.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_29.fld3.fld2 = core::ptr::addr_of_mut!(_45.fld2.3);
_69 = Adt45::Variant1 { fld0: _34,fld1: _19.0,fld2: _36 };
_10 = (_11,);
Goto(bb14)
}
bb14 = {
_7 = _14;
_46 = !143_u8;
_10 = (_12,);
_29.fld3.fld3.0.0 = _1 - _6;
_59.fld3.3 = _45.fld2.3;
_45.fld0 = _43 as usize;
_21 = _13;
place!(Field::<[i64; 3]>(Variant(_45.fld1, 1), 2)) = _24;
RET = !_61;
_11 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6];
_30 = -_36;
SetDiscriminant(_69, 0);
_35 = _59.fld1;
_65 = _22 as i64;
SetDiscriminant(_45.fld1, 0);
_54 = (_31.0,);
_34 = !_59.fld0;
_17.3 = _59.fld7 as i32;
_10.0 = [_29.fld6,_29.fld6,_29.fld6,_29.fld6,_29.fld6,_65,_65,_29.fld6];
RET = !_29.fld0.2;
_10 = _32;
place!(Field::<u32>(Variant(_45.fld1, 0), 0)) = _55.0 as u32;
Goto(bb15)
}
bb15 = {
Call(_76 = dump_var(7_usize, 37_usize, Move(_37), 5_usize, Move(_5), 13_usize, Move(_13), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_76 = dump_var(7_usize, 43_usize, Move(_43), 35_usize, Move(_35), 34_usize, Move(_34), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_76 = dump_var(7_usize, 3_usize, Move(_3), 15_usize, Move(_15), 44_usize, Move(_44), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_76 = dump_var(7_usize, 41_usize, Move(_41), 24_usize, Move(_24), 4_usize, Move(_4), 64_usize, Move(_64)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_76 = dump_var(7_usize, 16_usize, Move(_16), 61_usize, Move(_61), 31_usize, Move(_31), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_76 = dump_var(7_usize, 10_usize, Move(_10), 77_usize, _77, 77_usize, _77, 77_usize, _77), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [i64; 8],mut _2: *mut i32,mut _3: [i64; 8],mut _4: *mut u16,mut _5: u128,mut _6: [i64; 8],mut _7: u128,mut _8: u128,mut _9: *mut i32,mut _10: i32) -> char {
mir! {
type RET = char;
let _11: f64;
let _12: (i16,);
let _13: [bool; 7];
let _14: i32;
let _15: i16;
let _16: [usize; 2];
let _17: Adt57;
let _18: isize;
let _19: isize;
let _20: isize;
let _21: isize;
let _22: f32;
let _23: (u128, u16);
let _24: i16;
let _25: isize;
let _26: i16;
let _27: usize;
let _28: [i64; 8];
let _29: char;
let _30: [u8; 5];
let _31: char;
let _32: isize;
let _33: [u8; 5];
let _34: char;
let _35: [bool; 7];
let _36: i128;
let _37: f32;
let _38: (u32,);
let _39: Adt44;
let _40: *mut usize;
let _41: bool;
let _42: char;
let _43: f64;
let _44: isize;
let _45: Adt42;
let _46: ();
let _47: ();
{
_8 = 15178564349641424210_u64 as u128;
_3 = [(-3043690658878027151_i64),(-1826761438439127856_i64),1529200457614266223_i64,4768949503508258958_i64,(-2262735944573181796_i64),(-9186797496233703533_i64),3159089452712165581_i64,8114809609876282942_i64];
_8 = !_5;
_12.0 = (-9223372036854775808_isize) as i16;
_12.0 = (-21854_i16) | 9697_i16;
RET = '\u{10910}';
RET = '\u{f587c}';
_11 = 15970_u16 as f64;
_6 = [(-7868099528624102178_i64),(-8795773341527761836_i64),8984531574876967170_i64,5639153801021705_i64,(-3140386949791112950_i64),9017035410992816248_i64,(-4487365479004569097_i64),(-3112774914966797674_i64)];
_13 = [false,true,false,false,true,false,true];
_3 = [5196320476935434951_i64,6076215431663037640_i64,(-1889527390947886844_i64),(-3331963760899228658_i64),(-5175402491196045404_i64),1820777648839532083_i64,(-5264282130379474638_i64),(-6463789848776492813_i64)];
_13 = [true,false,false,false,true,true,false];
_1 = [900737423804772187_i64,6856632125357695864_i64,7928220387313041661_i64,4118254518809426096_i64,566348845274944689_i64,(-1749582017632414183_i64),2104820595311615969_i64,(-1458620507878066339_i64)];
_12.0 = 18060_i16 * (-22761_i16);
_9 = _2;
_9 = core::ptr::addr_of_mut!(_10);
_12 = ((-5175_i16),);
Call(_9 = fn9(_5, _12.0, _10, _1, _3, _10, _8, _3, _2, _1, _2, _8, (*_9), _2, (*_9)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12.0 = !(-2359_i16);
_10 = true as i32;
_10 = -(-2086449037_i32);
_11 = 2237404630_u32 as f64;
_1 = _3;
_17.fld0 = 495909953_u32;
_16 = [1064006676176641969_usize,7313850683686722876_usize];
_10 = !(-1049921676_i32);
_15 = _12.0 & _12.0;
_11 = 1_usize as f64;
RET = '\u{7aeca}';
RET = '\u{82381}';
_17.fld0 = 3975006985_u32;
_13 = [false,true,false,false,false,false,false];
_9 = core::ptr::addr_of_mut!(_10);
_3 = _1;
_10 = 1_usize as i32;
RET = '\u{8fbfe}';
_15 = (-9223372036854775808_isize) as i16;
_13 = [true,false,true,false,true,true,false];
_12.0 = _15 - _15;
_19 = 9223372036854775807_isize >> _5;
_14 = _10;
Call(_3 = fn10(_7, (*_9), _19, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13 = [false,true,true,false,false,true,true];
_12.0 = -_15;
_20 = _19 >> _7;
_15 = _12.0 - _12.0;
_12.0 = -_15;
_18 = _12.0 as isize;
_17.fld0 = 2143280734_u32;
_12 = (_15,);
_13 = [true,true,true,false,false,true,true];
_13 = [false,false,false,true,false,true,true];
_23.1 = _11 as u16;
_22 = _17.fld0 as f32;
_5 = !_7;
_24 = 16873259279129615170_u64 as i16;
_10 = _14;
_14 = 6429941495202240412_u64 as i32;
_12 = (_15,);
_5 = _12.0 as u128;
_23.0 = _8;
match _17.fld0 {
2143280734 => bb4,
_ => bb3
}
}
bb3 = {
_12.0 = !(-2359_i16);
_10 = true as i32;
_10 = -(-2086449037_i32);
_11 = 2237404630_u32 as f64;
_1 = _3;
_17.fld0 = 495909953_u32;
_16 = [1064006676176641969_usize,7313850683686722876_usize];
_10 = !(-1049921676_i32);
_15 = _12.0 & _12.0;
_11 = 1_usize as f64;
RET = '\u{7aeca}';
RET = '\u{82381}';
_17.fld0 = 3975006985_u32;
_13 = [false,true,false,false,false,false,false];
_9 = core::ptr::addr_of_mut!(_10);
_3 = _1;
_10 = 1_usize as i32;
RET = '\u{8fbfe}';
_15 = (-9223372036854775808_isize) as i16;
_13 = [true,false,true,false,true,true,false];
_12.0 = _15 - _15;
_19 = 9223372036854775807_isize >> _5;
_14 = _10;
Call(_3 = fn10(_7, (*_9), _19, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_5 = _23.0 & _23.0;
_10 = _14;
_5 = _22 as u128;
_20 = -_18;
_7 = _8;
_11 = _23.0 as f64;
_22 = _12.0 as f32;
_23.1 = !6587_u16;
_29 = RET;
_12.0 = _24 - _15;
_23.1 = 65009_u16;
_18 = _19;
_13 = [true,true,true,true,true,false,true];
_3 = [4057507549055778646_i64,(-2918349422836829802_i64),(-8822952429392246836_i64),894286094427930762_i64,8936447052987067139_i64,14890645463401298_i64,5864293817942510449_i64,(-637045172272646164_i64)];
_20 = _19;
_11 = 12820365056109631310_u64 as f64;
_23 = (_8, 3403_u16);
_32 = _17.fld0 as isize;
_5 = _17.fld0 as u128;
_26 = _24 | _12.0;
RET = _29;
_27 = !5_usize;
_23 = (_8, 17523_u16);
Goto(bb5)
}
bb5 = {
_24 = !_26;
_20 = !_18;
_25 = _20;
_2 = core::ptr::addr_of_mut!(_14);
_7 = _23.0 ^ _23.0;
_24 = _26;
_22 = _23.1 as f32;
_3 = [6403523601895078728_i64,(-7540548032483277742_i64),(-6721295873304404636_i64),5803926297494438867_i64,(-889763797560139726_i64),3158075322527006565_i64,(-1455601796912708369_i64),(-598476364612750843_i64)];
_1 = [(-766088912731515378_i64),(-7060786199622994201_i64),4036942080425072543_i64,4618640556389547130_i64,(-5337667771856988555_i64),767164163520815024_i64,4816356847112920073_i64,(-2548521932290720626_i64)];
_31 = _29;
_23.0 = !_8;
_17.fld0 = 215055199_u32 | 3616432552_u32;
Goto(bb6)
}
bb6 = {
_6 = [(-8632889764176655312_i64),4632120124766161667_i64,(-2614725053216269279_i64),3561322484205837126_i64,8840056762091566296_i64,(-8196541188089586372_i64),2149393748975817109_i64,(-8554623010495483769_i64)];
_8 = _7;
_12.0 = _15;
_24 = _12.0 + _12.0;
_22 = _19 as f32;
_28 = [7986646009031769705_i64,(-8999679586862464899_i64),(-2684841078028198335_i64),(-5318582086919778441_i64),6196293779543324760_i64,6641277643293419142_i64,(-3703208354764283967_i64),(-6161680123198122587_i64)];
_31 = RET;
_25 = _32;
_33 = [47_u8,229_u8,76_u8,26_u8,165_u8];
_25 = -_19;
_6 = [6162634044378678517_i64,(-1409991731509215133_i64),(-3216845879013026531_i64),(-1391978330586555821_i64),1597840559176091421_i64,1678883583008697901_i64,3643756627428601152_i64,(-6087269111647656203_i64)];
_9 = core::ptr::addr_of_mut!((*_2));
_21 = _19 - _20;
_12.0 = _24 << _23.0;
_34 = _31;
_16 = [_27,_27];
_28 = _1;
_26 = _24;
_7 = _8;
_23.0 = _8 * _8;
Goto(bb7)
}
bb7 = {
_29 = _34;
_18 = -_21;
_22 = (*_9) as f32;
_23 = (_7, 29966_u16);
_9 = core::ptr::addr_of_mut!((*_2));
_19 = _18 << _7;
_7 = !_23.0;
_4 = core::ptr::addr_of_mut!(_23.1);
_37 = _22 * _22;
_4 = core::ptr::addr_of_mut!((*_4));
_3 = [(-4069975244560186685_i64),(-4891312064966191332_i64),(-4722864212968061054_i64),1162828926638463629_i64,(-3197143949723659201_i64),2116715139620148601_i64,8943586965622516509_i64,(-5915889247684353607_i64)];
Goto(bb8)
}
bb8 = {
_36 = 106367296824832565766004478218512284977_i128;
_30 = [240_u8,55_u8,196_u8,71_u8,20_u8];
_9 = _2;
_14 = _11 as i32;
_19 = _21 * _21;
_4 = core::ptr::addr_of_mut!(_23.1);
_9 = _2;
_17.fld0 = 1075143048_u32;
_16 = [_27,_27];
_30 = [22_u8,168_u8,42_u8,145_u8,19_u8];
_12.0 = _21 as i16;
_8 = _31 as u128;
match _23.1 {
0 => bb6,
1 => bb5,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb10,
6 => bb11,
29966 => bb13,
_ => bb12
}
}
bb9 = {
_29 = _34;
_18 = -_21;
_22 = (*_9) as f32;
_23 = (_7, 29966_u16);
_9 = core::ptr::addr_of_mut!((*_2));
_19 = _18 << _7;
_7 = !_23.0;
_4 = core::ptr::addr_of_mut!(_23.1);
_37 = _22 * _22;
_4 = core::ptr::addr_of_mut!((*_4));
_3 = [(-4069975244560186685_i64),(-4891312064966191332_i64),(-4722864212968061054_i64),1162828926638463629_i64,(-3197143949723659201_i64),2116715139620148601_i64,8943586965622516509_i64,(-5915889247684353607_i64)];
Goto(bb8)
}
bb10 = {
_6 = [(-8632889764176655312_i64),4632120124766161667_i64,(-2614725053216269279_i64),3561322484205837126_i64,8840056762091566296_i64,(-8196541188089586372_i64),2149393748975817109_i64,(-8554623010495483769_i64)];
_8 = _7;
_12.0 = _15;
_24 = _12.0 + _12.0;
_22 = _19 as f32;
_28 = [7986646009031769705_i64,(-8999679586862464899_i64),(-2684841078028198335_i64),(-5318582086919778441_i64),6196293779543324760_i64,6641277643293419142_i64,(-3703208354764283967_i64),(-6161680123198122587_i64)];
_31 = RET;
_25 = _32;
_33 = [47_u8,229_u8,76_u8,26_u8,165_u8];
_25 = -_19;
_6 = [6162634044378678517_i64,(-1409991731509215133_i64),(-3216845879013026531_i64),(-1391978330586555821_i64),1597840559176091421_i64,1678883583008697901_i64,3643756627428601152_i64,(-6087269111647656203_i64)];
_9 = core::ptr::addr_of_mut!((*_2));
_21 = _19 - _20;
_12.0 = _24 << _23.0;
_34 = _31;
_16 = [_27,_27];
_28 = _1;
_26 = _24;
_7 = _8;
_23.0 = _8 * _8;
Goto(bb7)
}
bb11 = {
_12.0 = !(-2359_i16);
_10 = true as i32;
_10 = -(-2086449037_i32);
_11 = 2237404630_u32 as f64;
_1 = _3;
_17.fld0 = 495909953_u32;
_16 = [1064006676176641969_usize,7313850683686722876_usize];
_10 = !(-1049921676_i32);
_15 = _12.0 & _12.0;
_11 = 1_usize as f64;
RET = '\u{7aeca}';
RET = '\u{82381}';
_17.fld0 = 3975006985_u32;
_13 = [false,true,false,false,false,false,false];
_9 = core::ptr::addr_of_mut!(_10);
_3 = _1;
_10 = 1_usize as i32;
RET = '\u{8fbfe}';
_15 = (-9223372036854775808_isize) as i16;
_13 = [true,false,true,false,true,true,false];
_12.0 = _15 - _15;
_19 = 9223372036854775807_isize >> _5;
_14 = _10;
Call(_3 = fn10(_7, (*_9), _19, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_5 = _23.0 & _23.0;
_10 = _14;
_5 = _22 as u128;
_20 = -_18;
_7 = _8;
_11 = _23.0 as f64;
_22 = _12.0 as f32;
_23.1 = !6587_u16;
_29 = RET;
_12.0 = _24 - _15;
_23.1 = 65009_u16;
_18 = _19;
_13 = [true,true,true,true,true,false,true];
_3 = [4057507549055778646_i64,(-2918349422836829802_i64),(-8822952429392246836_i64),894286094427930762_i64,8936447052987067139_i64,14890645463401298_i64,5864293817942510449_i64,(-637045172272646164_i64)];
_20 = _19;
_11 = 12820365056109631310_u64 as f64;
_23 = (_8, 3403_u16);
_32 = _17.fld0 as isize;
_5 = _17.fld0 as u128;
_26 = _24 | _12.0;
RET = _29;
_27 = !5_usize;
_23 = (_8, 17523_u16);
Goto(bb5)
}
bb13 = {
_38.0 = _17.fld0 >> _21;
_38.0 = _17.fld0;
_24 = _12.0;
_17.fld0 = !_38.0;
_34 = _31;
_40 = core::ptr::addr_of_mut!(_27);
Call(_43 = fn11(_28, _21, _23, _12.0, _24, _1, _21), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_41 = false ^ false;
_21 = (*_40) as isize;
_38 = (_17.fld0,);
_4 = core::ptr::addr_of_mut!((*_4));
_23.0 = _7 >> _7;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(8_usize, 6_usize, Move(_6), 18_usize, Move(_18), 3_usize, Move(_3), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(8_usize, 16_usize, Move(_16), 10_usize, Move(_10), 20_usize, Move(_20), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(8_usize, 13_usize, Move(_13), 26_usize, Move(_26), 31_usize, Move(_31), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(8_usize, 8_usize, Move(_8), 15_usize, Move(_15), 1_usize, Move(_1), 47_usize, _47), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: u128,mut _2: i16,mut _3: i32,mut _4: [i64; 8],mut _5: [i64; 8],mut _6: i32,mut _7: u128,mut _8: [i64; 8],mut _9: *mut i32,mut _10: [i64; 8],mut _11: *mut i32,mut _12: u128,mut _13: i32,mut _14: *mut i32,mut _15: i32) -> *mut i32 {
mir! {
type RET = *mut i32;
let _16: (u32,);
let _17: f32;
let _18: ();
let _19: ();
{
_10 = [6248696085250595129_i64,(-7601492805545953029_i64),3559359820061616062_i64,(-6709870103048973488_i64),(-9002606927929276396_i64),(-6827809265231632656_i64),1315109634158549831_i64,3400120822419169561_i64];
_10 = _4;
_10 = [(-8191089140225576166_i64),(-401872506639593128_i64),1737910019277026491_i64,5584718728079868474_i64,(-4292272524245716421_i64),(-4737846903082005831_i64),(-5648115131741948956_i64),8132861041507678192_i64];
_14 = _11;
_10 = [(-4924212349965658181_i64),(-8846028725343985427_i64),1072238210862013557_i64,7812184098433377151_i64,710959119000949863_i64,(-1262919927865370597_i64),(-4164865138796453194_i64),(-8722574939377830766_i64)];
_4 = [649337811760883777_i64,773207898400675359_i64,4280783343211794020_i64,(-7975190052109391629_i64),(-7527261281030212869_i64),3905858453645183346_i64,6174571661163531992_i64,(-2330691864421107473_i64)];
_3 = (-2198230321570853952_i64) as i32;
RET = _14;
_5 = [3175388676671491148_i64,(-6779816623729678664_i64),(-7685123271049998988_i64),(-5864686749475173517_i64),(-5550447931154179565_i64),(-1356167689785085768_i64),6817192207494013149_i64,(-7719497808150213158_i64)];
_11 = RET;
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(9_usize, 13_usize, Move(_13), 1_usize, Move(_1), 12_usize, Move(_12), 3_usize, Move(_3)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_18 = dump_var(9_usize, 10_usize, Move(_10), 7_usize, Move(_7), 19_usize, _19, 19_usize, _19), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: u128,mut _2: i32,mut _3: isize,mut _4: *mut i32) -> [i64; 8] {
mir! {
type RET = [i64; 8];
let _5: i128;
let _6: i16;
let _7: *mut ([i64; 8],);
let _8: i128;
let _9: u128;
let _10: isize;
let _11: *mut u16;
let _12: i64;
let _13: Adt45;
let _14: [i8; 4];
let _15: isize;
let _16: f32;
let _17: bool;
let _18: Adt52;
let _19: u16;
let _20: *const i8;
let _21: isize;
let _22: f32;
let _23: ();
let _24: ();
{
RET = [(-6806598953333960964_i64),2469969660185088043_i64,2206050409958396033_i64,480513146046902574_i64,(-4805066134734614092_i64),6232878078190671884_i64,1381846752979572683_i64,6414484091591000790_i64];
RET = [(-8618468736528262050_i64),(-3318574659862982041_i64),(-980387486688312657_i64),(-7018646403814035471_i64),(-6759385870962589039_i64),8321800976038241425_i64,(-5993959813181747164_i64),(-8574414452270594088_i64)];
_2 = _1 as i32;
_2 = 1555884268_i32;
_2 = 501225965_i32 >> _1;
RET = [(-5041855422494727193_i64),(-6500814355090169384_i64),(-7700537518317217478_i64),4707724605492864713_i64,(-1272052492004343823_i64),(-4502578660140098393_i64),(-3477981592110784569_i64),(-6499503981053201478_i64)];
RET = [3706769581761062248_i64,(-5373999354405726327_i64),(-1241198433660833075_i64),932442356926814095_i64,7521330936581489006_i64,2727420143133127517_i64,5754328371686477066_i64,(-564746173371816119_i64)];
RET = [(-8325306802108444982_i64),6859622390327218338_i64,1375150510134346128_i64,(-39946502724009694_i64),365200163873921379_i64,(-3039996802963362489_i64),(-1868410693380479465_i64),3388215055644734761_i64];
_3 = !(-9223372036854775808_isize);
RET = [(-3356631535532396664_i64),5732338040636632250_i64,7392962796298942801_i64,(-7206860623366399411_i64),(-97574219212300581_i64),8388317713705320626_i64,(-2816559381863663706_i64),2650624918328181191_i64];
_3 = '\u{5021c}' as isize;
RET = [(-2446583842039934077_i64),8094217257968967483_i64,(-4866897596540421600_i64),(-3339973613494551310_i64),(-1569344159079560349_i64),773994788641282165_i64,2996365799955531210_i64,(-1084370969634028529_i64)];
_3 = '\u{84221}' as isize;
_5 = !77228566901364895792428789889831026414_i128;
_6 = (-1086_i16);
_1 = 15898692850622623084_u64 as u128;
_4 = core::ptr::addr_of_mut!(_2);
_4 = core::ptr::addr_of_mut!((*_4));
_6 = 20_i8 as i16;
_2 = 1720041959_i32;
_5 = 5456143105004916605_u64 as i128;
_2 = 5945384565394856006_u64 as i32;
Goto(bb1)
}
bb1 = {
_4 = core::ptr::addr_of_mut!((*_4));
_4 = core::ptr::addr_of_mut!((*_4));
_5 = (*_4) as i128;
_4 = core::ptr::addr_of_mut!((*_4));
_2 = _1 as i32;
_3 = 121_isize;
_5 = !84380153783501150805180846570093587188_i128;
_4 = core::ptr::addr_of_mut!(_2);
RET = [1555703000636228125_i64,6051222183792239881_i64,727511839186442840_i64,2638221438776079883_i64,(-4418789834967134575_i64),(-2160689420031386600_i64),6227980308961112878_i64,(-7339479003324154057_i64)];
_9 = _1;
_2 = 16904025484290339943_usize as i32;
_3 = 9223372036854775807_isize;
_5 = !105129675262683142920614258227501296733_i128;
_3 = -(-9223372036854775808_isize);
_1 = _5 as u128;
RET = [(-6340042145321210490_i64),1192547979763105486_i64,8879475406236700021_i64,740303435141653025_i64,4306720385499617092_i64,(-5063755334540260420_i64),9001505782276535772_i64,6070236305268366949_i64];
RET = [(-2606379876034465906_i64),5306081403151074940_i64,(-7053427532591433722_i64),5802376521289351161_i64,(-2533348573274782797_i64),(-2377886748491162243_i64),6818447515964891561_i64,(-3414000848411401297_i64)];
_6 = (-2116_i16) * 20474_i16;
_4 = core::ptr::addr_of_mut!((*_4));
_8 = -_5;
_10 = _3;
_6 = 9856_i16 * (-7134_i16);
_12 = (-4383414612106976866_i64) & 6892129397273419463_i64;
_9 = _1;
_10 = _3;
_10 = 9428936932571773642_u64 as isize;
Goto(bb2)
}
bb2 = {
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
_5 = _8;
_4 = core::ptr::addr_of_mut!(_2);
_3 = 217_u8 as isize;
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
_12 = 3090515167142952277_i64 << (*_4);
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
_12 = !401946740647435649_i64;
_12 = (-3468516838173000211_i64);
_4 = core::ptr::addr_of_mut!(_2);
_3 = _10 ^ _10;
_14 = [(-125_i8),92_i8,(-5_i8),(-33_i8)];
_5 = _8;
_10 = -_3;
_14 = [69_i8,35_i8,(-110_i8),73_i8];
match _12 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463459906090593595211245 => bb11,
_ => bb10
}
}
bb3 = {
_4 = core::ptr::addr_of_mut!((*_4));
_4 = core::ptr::addr_of_mut!((*_4));
_5 = (*_4) as i128;
_4 = core::ptr::addr_of_mut!((*_4));
_2 = _1 as i32;
_3 = 121_isize;
_5 = !84380153783501150805180846570093587188_i128;
_4 = core::ptr::addr_of_mut!(_2);
RET = [1555703000636228125_i64,6051222183792239881_i64,727511839186442840_i64,2638221438776079883_i64,(-4418789834967134575_i64),(-2160689420031386600_i64),6227980308961112878_i64,(-7339479003324154057_i64)];
_9 = _1;
_2 = 16904025484290339943_usize as i32;
_3 = 9223372036854775807_isize;
_5 = !105129675262683142920614258227501296733_i128;
_3 = -(-9223372036854775808_isize);
_1 = _5 as u128;
RET = [(-6340042145321210490_i64),1192547979763105486_i64,8879475406236700021_i64,740303435141653025_i64,4306720385499617092_i64,(-5063755334540260420_i64),9001505782276535772_i64,6070236305268366949_i64];
RET = [(-2606379876034465906_i64),5306081403151074940_i64,(-7053427532591433722_i64),5802376521289351161_i64,(-2533348573274782797_i64),(-2377886748491162243_i64),6818447515964891561_i64,(-3414000848411401297_i64)];
_6 = (-2116_i16) * 20474_i16;
_4 = core::ptr::addr_of_mut!((*_4));
_8 = -_5;
_10 = _3;
_6 = 9856_i16 * (-7134_i16);
_12 = (-4383414612106976866_i64) & 6892129397273419463_i64;
_9 = _1;
_10 = _3;
_10 = 9428936932571773642_u64 as isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_9 = _8 as u128;
_5 = 4_usize as i128;
_3 = _10;
_10 = 174_u8 as isize;
_4 = core::ptr::addr_of_mut!(_2);
_15 = (-13_i8) as isize;
_1 = !_9;
Goto(bb12)
}
bb12 = {
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
_5 = _8;
_6 = (-18860_i16);
_2 = (-67306998_i32);
_12 = !4582299708687080064_i64;
_4 = core::ptr::addr_of_mut!((*_4));
_16 = 15795979527070564619_u64 as f32;
_12 = _1 as i64;
_10 = _3 << _8;
Goto(bb13)
}
bb13 = {
_14 = [(-47_i8),(-117_i8),24_i8,124_i8];
_16 = _9 as f32;
_12 = !(-2987883909143241440_i64);
_5 = _8;
_16 = 66_u8 as f32;
_6 = (-11510_i16);
_16 = _15 as f32;
RET = [_12,_12,_12,_12,_12,_12,_12,_12];
_4 = core::ptr::addr_of_mut!((*_4));
_14 = [60_i8,(-27_i8),36_i8,114_i8];
_17 = _10 < _10;
_19 = !45905_u16;
_11 = core::ptr::addr_of_mut!(_19);
_12 = 1316204512937116149_i64;
_4 = core::ptr::addr_of_mut!((*_4));
_9 = !_1;
Call(_1 = core::intrinsics::bswap(_9), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_10 = !_15;
_6 = -(-32285_i16);
_11 = core::ptr::addr_of_mut!((*_11));
_4 = core::ptr::addr_of_mut!((*_4));
_8 = _5 - _5;
_5 = _8;
_19 = 31973_u16;
_8 = _5;
_16 = 104_i8 as f32;
_22 = -_16;
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(10_usize, 2_usize, Move(_2), 12_usize, Move(_12), 14_usize, Move(_14), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(10_usize, 9_usize, Move(_9), 19_usize, Move(_19), 24_usize, _24, 24_usize, _24), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [i64; 8],mut _2: isize,mut _3: (u128, u16),mut _4: i16,mut _5: i16,mut _6: [i64; 8],mut _7: isize) -> f64 {
mir! {
type RET = f64;
let _8: isize;
let _9: char;
let _10: Adt53;
let _11: (u32,);
let _12: (u32,);
let _13: [bool; 7];
let _14: i8;
let _15: [isize; 2];
let _16: char;
let _17: Adt45;
let _18: [i64; 8];
let _19: ([i64; 8],);
let _20: i32;
let _21: bool;
let _22: bool;
let _23: ([i64; 8],);
let _24: usize;
let _25: ([i64; 8],);
let _26: Adt46;
let _27: (u32,);
let _28: i16;
let _29: Adt51;
let _30: i128;
let _31: isize;
let _32: Adt48;
let _33: [u8; 5];
let _34: [bool; 7];
let _35: ();
let _36: ();
{
_6 = [(-2059222506023963790_i64),3916923844371296598_i64,(-2652518597234084214_i64),(-5962118171622172142_i64),(-8323537608281043115_i64),(-5910999060450987124_i64),9020899194615381715_i64,5822032625291657207_i64];
_3 = (6355429013134805033224101938629075932_u128, 1332_u16);
_7 = 1_usize as isize;
_8 = (-8038032693049654437_i64) as isize;
RET = 150563980966183563033240040126752371908_i128 as f64;
_2 = 151_u8 as isize;
_2 = _7 | _7;
_4 = !_5;
_8 = -_7;
_3.0 = 147884773052337758621518982517404839357_u128 - 316559770944059132208482404849423907835_u128;
_9 = '\u{29e}';
_3.0 = 109371786304374637150223064067770764457_u128 << _4;
_6 = [2342131184773423850_i64,1144036327788529149_i64,1948625474717222841_i64,(-6816346439706563822_i64),6564339118396327082_i64,8077137248302673705_i64,(-3612333432884821374_i64),(-1480156767228066171_i64)];
match _3.1 {
1332 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_3 = (274244162600187162156181294173437788233_u128, 21842_u16);
_3.0 = 113630762054755278645072823464029813401_u128;
_3.1 = !52679_u16;
_3.1 = !7709_u16;
_3 = (145059110586376797183668079523364014952_u128, 47743_u16);
_1 = [(-3516979291027030330_i64),5536083551978542245_i64,(-7688097341136712477_i64),(-5566976288491794381_i64),3960630398008497740_i64,7008764864528176140_i64,(-1522023754461764100_i64),1410269091546331184_i64];
_4 = _5 ^ _5;
_11 = (2721602552_u32,);
_12.0 = _11.0;
_6 = [(-8564250431660050038_i64),(-3624714045213744356_i64),(-1958586614547210145_i64),(-673837966076844784_i64),4632692479655304882_i64,(-925441671633227629_i64),3845714191358177473_i64,(-533903746660963118_i64)];
_12 = (_11.0,);
_11 = _12;
Goto(bb3)
}
bb3 = {
_4 = 91893951223558451670262376579954948108_i128 as i16;
_3 = (17312259297333254103668004772861576327_u128, 35691_u16);
_6 = _1;
_7 = _2 + _2;
_4 = 991090303926493483_i64 as i16;
_8 = -_2;
RET = 13560165232592681958_u64 as f64;
_3.0 = !26518930459472952027412845830791403195_u128;
_8 = 113_u8 as isize;
_6 = [(-6692607492476748489_i64),387147514121532344_i64,(-8142518402779818214_i64),8605034774362265262_i64,(-2887790009193438331_i64),6332231882226259646_i64,(-1391550869537392624_i64),(-767948818839704529_i64)];
_3 = (198509452609470638651452097163912874424_u128, 63122_u16);
_3 = (42042179140094048495589295353140968192_u128, 27995_u16);
_7 = _2;
_11 = _12;
_12.0 = _11.0 << _5;
_11 = _12;
_1 = [(-8974221364109067934_i64),(-1087006909302426529_i64),(-2492112635473001107_i64),(-7697076172317903168_i64),6825290894975508973_i64,(-1412688372386392422_i64),(-9214644866707962809_i64),(-3932183993357763322_i64)];
_12.0 = !_11.0;
_13 = [true,true,false,true,true,true,true];
_4 = _5 | _5;
_8 = _2;
_4 = _5 * _5;
_8 = !_7;
_11 = (_12.0,);
_3 = (83408063348494808932326689027006980452_u128, 9146_u16);
_4 = !_5;
_5 = _4 * _4;
_1 = [1171868053542593728_i64,9017293500000402801_i64,5195402795944027856_i64,7164403985327369132_i64,2458415030968828150_i64,(-7007634615505784629_i64),7932096902644423997_i64,(-7584601777911000200_i64)];
_14 = _3.1 as i8;
Goto(bb4)
}
bb4 = {
_11.0 = _14 as u32;
_15 = [_7,_2];
_12 = (_11.0,);
_16 = _9;
_12.0 = !_11.0;
_8 = !_7;
_16 = _9;
_11.0 = !_12.0;
_4 = _8 as i16;
_14 = -107_i8;
_11.0 = _12.0;
_3.1 = 3970_u16 ^ 17996_u16;
RET = _2 as f64;
_8 = _7;
_3.1 = 41784_u16 ^ 7993_u16;
_18 = _1;
_1 = [6329020651561153670_i64,(-6030436725810976285_i64),533338495396609705_i64,(-2761202914998503475_i64),2790278633004035189_i64,2043907343885311170_i64,408608642431219093_i64,(-3723287439396758049_i64)];
_3 = (267507456039154365187674920794355121965_u128, 1072_u16);
_2 = _8 + _8;
_12.0 = _11.0 ^ _11.0;
_3.0 = !196479557753707147836776710648128257985_u128;
_4 = -_5;
_1 = [2011112974704261279_i64,(-3257757328958685993_i64),3191498730709816799_i64,(-2702026146589588431_i64),(-1689561574171509416_i64),(-8804245300978406839_i64),6145316853312366077_i64,(-2642057588187529311_i64)];
_14 = 59_i8 >> _5;
_8 = !_2;
Goto(bb5)
}
bb5 = {
RET = _8 as f64;
_22 = _5 >= _5;
_12.0 = 550847478276095346_i64 as u32;
_3.1 = 56877_u16;
_3.1 = !13856_u16;
_19 = (_1,);
_23 = _19;
_11.0 = _12.0 - _12.0;
_9 = _16;
Call(_26.fld3.0.0 = fn12(_22, _22, _5, _8, _2, _14, _4, _19.0, _22, _14, _5, _4, _23.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_26.fld4 = (_6,);
RET = 6054342927301088103_u64 as f64;
_26.fld3.1 = !1634323881_i32;
_26.fld5.0 = _5;
_26.fld5 = (_4,);
_26.fld3.3 = 5_usize << _4;
_26.fld3.0.1 = RET as u16;
_25.0 = [(-1026167102887765755_i64),3460400156327024253_i64,9017482901727529213_i64,6645179544457229930_i64,5005635874042256356_i64,2525128235603914761_i64,4904922045396444382_i64,2273159308530328947_i64];
_3.0 = _26.fld3.0.0 >> _14;
_19.0 = [(-5559155447903486385_i64),(-1232329798935026373_i64),8752847280340702939_i64,(-7324556276443525007_i64),(-6150599184557477205_i64),5416760094572667906_i64,5573492888085181914_i64,(-7156891167582072382_i64)];
_8 = _9 as isize;
_29.fld2 = core::ptr::addr_of_mut!(_20);
_29.fld0.0.0 = _3.0 | _3.0;
_26.fld3.4 = core::ptr::addr_of_mut!(_29.fld0.1);
_29.fld3.fld1 = (_25.0,);
_29.fld0.2 = 2443172863103434948_u64 << _4;
_29.fld3.fld3.0.0 = _3.0;
_29.fld0.0.1 = _26.fld3.0.1;
RET = _4 as f64;
_30 = (-109232807387886044017202716508501580378_i128) >> _5;
Goto(bb7)
}
bb7 = {
Call(_35 = dump_var(11_usize, 3_usize, Move(_3), 8_usize, Move(_8), 23_usize, Move(_23), 25_usize, Move(_25)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_35 = dump_var(11_usize, 4_usize, Move(_4), 14_usize, Move(_14), 16_usize, Move(_16), 22_usize, Move(_22)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_35 = dump_var(11_usize, 18_usize, Move(_18), 1_usize, Move(_1), 36_usize, _36, 36_usize, _36), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: bool,mut _2: bool,mut _3: i16,mut _4: isize,mut _5: isize,mut _6: i8,mut _7: i16,mut _8: [i64; 8],mut _9: bool,mut _10: i8,mut _11: i16,mut _12: i16,mut _13: [i64; 8]) -> u128 {
mir! {
type RET = u128;
let _14: [usize; 2];
let _15: (i16,);
let _16: [i64; 3];
let _17: i8;
let _18: [u8; 5];
let _19: f64;
let _20: bool;
let _21: bool;
let _22: [i8; 4];
let _23: Adt49;
let _24: f32;
let _25: [isize; 2];
let _26: f32;
let _27: i64;
let _28: [i64; 3];
let _29: *const bool;
let _30: usize;
let _31: u64;
let _32: ([i64; 8],);
let _33: &'static u64;
let _34: [i64; 8];
let _35: char;
let _36: usize;
let _37: Adt51;
let _38: ();
let _39: ();
{
RET = 162_u8 as u128;
_10 = _6;
_2 = !_1;
_10 = -_6;
_11 = -_7;
_10 = _6 | _6;
_3 = _12 - _11;
_1 = _9 ^ _2;
RET = 25367667242865458168646775095264243067_u128;
RET = 95409968198098937485763936392463897258_u128;
RET = 3660442839567949108_u64 as u128;
_14 = [6462270124185400591_usize,7_usize];
_7 = _10 as i16;
RET = 72233768188593122355458158864305243894_u128;
_3 = _12;
_6 = RET as i8;
_4 = !_5;
_14 = [16776804792711660306_usize,1884463560788543196_usize];
_13 = _8;
_8 = [(-1879991988933506163_i64),3861091136772220064_i64,(-5962413302255945380_i64),6465992542786278866_i64,(-213133793805171535_i64),(-8134859501326342621_i64),(-2264099525780439622_i64),(-7608776838853385698_i64)];
_2 = _1;
RET = 321894376703552343012591862549266664345_u128 & 62714199038446313676435635906431019998_u128;
_8 = [9050469714647869196_i64,(-3033320125167992604_i64),(-5948930526068454415_i64),4969665251253433732_i64,7466174028508830681_i64,(-7003522606259322306_i64),(-5095253918349884618_i64),7734538250282152208_i64];
_6 = _10;
Goto(bb1)
}
bb1 = {
RET = !114073983105252734134218542143931352780_u128;
Call(_14 = core::intrinsics::transmute(RET), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = -_12;
_5 = _7 as isize;
_3 = 11660158080454540041_u64 as i16;
Call(_16 = fn13(_10, _10, _7, _1, _5, _1, _7, _2, _5, _7, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_11 = -_7;
_14 = [7_usize,12073948081354966534_usize];
_7 = _11;
_15.0 = 8486085682548608278_u64 as i16;
_11 = _12 | _12;
_5 = -_4;
_14 = [3508118506088194271_usize,3_usize];
_6 = _10;
_10 = '\u{90612}' as i8;
_9 = !_1;
_6 = !_10;
Goto(bb4)
}
bb4 = {
_18 = [208_u8,211_u8,31_u8,49_u8,171_u8];
_2 = _1;
_18 = [25_u8,252_u8,104_u8,241_u8,15_u8];
_16 = [(-8324622166047761770_i64),(-6879190198511774275_i64),(-2696730609968481615_i64)];
_13 = [(-6154503550003486402_i64),8636606664649429990_i64,7238045371388907005_i64,(-7061240440044794668_i64),4617577367455959311_i64,(-2045084261562272130_i64),(-3743389885691120509_i64),2003701603939837142_i64];
_8 = [2482590908335573870_i64,(-1326690567786811001_i64),2555970288586273766_i64,7798790839445488863_i64,(-7791045972874462902_i64),1475869465292917551_i64,4521499098950946632_i64,3832264658085817264_i64];
_9 = _2 | _2;
_16 = [(-7129445191160144229_i64),8141219223696537131_i64,(-7778313653342064616_i64)];
RET = 87511735170696095836555541764711165406_u128;
_5 = _4 * _4;
_7 = _11 - _12;
_19 = RET as f64;
_13 = [4158182743993392874_i64,(-2646273626851104870_i64),1565342849435714903_i64,(-813421174107513035_i64),3294967557075654761_i64,5724530283922799293_i64,3747197338484821595_i64,(-595845115541751738_i64)];
RET = (-1593970353_i32) as u128;
_20 = !_2;
_23.fld3.0.1 = RET as u16;
_16 = [(-944504647854201757_i64),(-5726398202474906606_i64),4443863257679696875_i64];
_23.fld3.3 = 1_u8 as usize;
_16 = [(-3485814746546366001_i64),(-7443036841249216435_i64),1360034739659678867_i64];
_23.fld2 = core::ptr::addr_of_mut!(_23.fld3.3);
_11 = !_12;
_12 = _11;
_23.fld3.3 = !4_usize;
Goto(bb5)
}
bb5 = {
_16 = [(-8594669574353665915_i64),(-4860662019153098221_i64),(-1351731065434344614_i64)];
Call(_3 = core::intrinsics::transmute(_11), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_23.fld1 = (_8,);
_12 = !_7;
_5 = _4;
_22 = [_6,_10,_6,_10];
_23.fld1 = (_13,);
_26 = _5 as f32;
_19 = 94_u8 as f64;
_8 = [5495185634629592287_i64,(-5331581429268740695_i64),7253888586630449012_i64,(-5370449044181509101_i64),(-4225650731041595104_i64),2518943329993282629_i64,2948469581464539473_i64,7719464823295041086_i64];
Call(_5 = core::intrinsics::transmute(_4), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_26 = 2061973317_i32 as f32;
_3 = _11;
_2 = _9 & _20;
_3 = _12;
_24 = -_26;
_22 = [_6,_10,_10,_10];
_23.fld3.0 = (RET, 35615_u16);
_15.0 = _7 - _7;
_2 = _9;
_23.fld1.0 = [6962726063450567196_i64,1859508132915618415_i64,8428273930990806149_i64,4169360687910170078_i64,5573821209153316806_i64,8871855308999163535_i64,(-3136649140128462406_i64),2957079021050325062_i64];
_12 = _15.0;
_26 = -_24;
_23.fld3.4 = core::ptr::addr_of_mut!(_23.fld3.1);
_20 = _2 >= _1;
_28 = [(-4064814361251996916_i64),(-5170542832433501510_i64),1649231931410993576_i64];
_25 = [_5,_5];
_23.fld3.1 = !1332802270_i32;
_1 = _2;
_30 = !_23.fld3.3;
_22 = [_6,_6,_6,_6];
Goto(bb8)
}
bb8 = {
_13 = [3543575635409075333_i64,(-7934506074185397116_i64),(-4153853913855397420_i64),4508559138007643495_i64,5507152125075203914_i64,(-1676078063949529343_i64),836323882318014549_i64,(-6259842723593604322_i64)];
_14 = [_23.fld3.3,_23.fld3.3];
_4 = 855818990_u32 as isize;
_1 = _2;
Goto(bb9)
}
bb9 = {
_31 = _24 as u64;
_26 = _5 as f32;
_28 = [5520955255708615533_i64,3674004940958176793_i64,304764046273034628_i64];
_32.0 = [(-7394441619668378090_i64),3795614681935398992_i64,8383920925106231173_i64,3022189267264018597_i64,(-4939531888578351529_i64),8918879586563960807_i64,(-8029047758889126730_i64),1972493356739050648_i64];
_16 = [1035481824798230223_i64,(-714284340612347263_i64),(-3269526260515008080_i64)];
_24 = _26 + _26;
_4 = _5;
_23.fld1 = _32;
_17 = RET as i8;
_22 = [_10,_10,_10,_6];
_7 = _12 + _3;
_16 = [(-6401893995706117572_i64),8440709246056839183_i64,(-4857226324728305408_i64)];
_11 = _15.0 | _15.0;
_13 = [(-1841082366443348739_i64),(-3024607664031775561_i64),(-3174623203184084243_i64),2238073114254171077_i64,2165405007233884449_i64,2153381934422430411_i64,3103150864324585199_i64,(-8921947447495547050_i64)];
_18 = [77_u8,233_u8,113_u8,176_u8,181_u8];
_29 = core::ptr::addr_of!(_1);
_8 = [4820921533660188946_i64,(-5879257712554368148_i64),3942328539285054038_i64,4962985993793723368_i64,(-8281472814468145566_i64),2214579572395349553_i64,9043940901471126010_i64,1989583132619871317_i64];
_9 = _2;
_10 = _6;
_22 = [_10,_6,_17,_17];
_6 = _26 as i8;
_3 = _11;
_32.0 = [(-2142383653180817934_i64),1295539223156530239_i64,3425318061951876522_i64,6320157674730384963_i64,5180854467121986022_i64,7494008443346889051_i64,(-5702116417057594553_i64),1540006092880038607_i64];
match _23.fld3.0.1 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
35615 => bb15,
_ => bb14
}
}
bb10 = {
_13 = [3543575635409075333_i64,(-7934506074185397116_i64),(-4153853913855397420_i64),4508559138007643495_i64,5507152125075203914_i64,(-1676078063949529343_i64),836323882318014549_i64,(-6259842723593604322_i64)];
_14 = [_23.fld3.3,_23.fld3.3];
_4 = 855818990_u32 as isize;
_1 = _2;
Goto(bb9)
}
bb11 = {
RET = !114073983105252734134218542143931352780_u128;
Call(_14 = core::intrinsics::transmute(RET), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_23.fld1 = (_8,);
_12 = !_7;
_5 = _4;
_22 = [_6,_10,_6,_10];
_23.fld1 = (_13,);
_26 = _5 as f32;
_19 = 94_u8 as f64;
_8 = [5495185634629592287_i64,(-5331581429268740695_i64),7253888586630449012_i64,(-5370449044181509101_i64),(-4225650731041595104_i64),2518943329993282629_i64,2948469581464539473_i64,7719464823295041086_i64];
Call(_5 = core::intrinsics::transmute(_4), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
_16 = [(-8594669574353665915_i64),(-4860662019153098221_i64),(-1351731065434344614_i64)];
Call(_3 = core::intrinsics::transmute(_11), ReturnTo(bb6), UnwindUnreachable())
}
bb14 = {
_7 = -_12;
_5 = _7 as isize;
_3 = 11660158080454540041_u64 as i16;
Call(_16 = fn13(_10, _10, _7, _1, _5, _1, _7, _2, _5, _7, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_23.fld1 = (_13,);
RET = _23.fld3.0.0;
_20 = _15.0 == _11;
RET = _23.fld3.0.0;
_25 = [_5,_4];
_35 = '\u{2d089}';
_7 = -_12;
_6 = _4 as i8;
_31 = !6473306689738908945_u64;
_27 = (-6897593143070905360_i64);
_27 = RET as i64;
_3 = _11;
_32 = _23.fld1;
_18 = [73_u8,192_u8,212_u8,188_u8,177_u8];
_25 = [_4,_4];
_37.fld3.fld3.1 = _35 as i32;
_15 = (_11,);
_10 = _6;
_15.0 = _3;
_37.fld5 = _30;
_8 = [_27,_27,_27,_27,_27,_27,_27,_27];
_37.fld0.0.0 = _23.fld3.0.0 - RET;
Goto(bb16)
}
bb16 = {
Call(_38 = dump_var(12_usize, 17_usize, Move(_17), 5_usize, Move(_5), 32_usize, Move(_32), 30_usize, Move(_30)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(12_usize, 10_usize, Move(_10), 4_usize, Move(_4), 25_usize, Move(_25), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(12_usize, 15_usize, Move(_15), 9_usize, Move(_9), 12_usize, Move(_12), 20_usize, Move(_20)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_38 = dump_var(12_usize, 18_usize, Move(_18), 39_usize, _39, 39_usize, _39, 39_usize, _39), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: i8,mut _2: i8,mut _3: i16,mut _4: bool,mut _5: isize,mut _6: bool,mut _7: i16,mut _8: bool,mut _9: isize,mut _10: i16,mut _11: isize) -> [i64; 3] {
mir! {
type RET = [i64; 3];
let _12: *mut i128;
let _13: f32;
let _14: [u8; 5];
let _15: Adt41;
let _16: bool;
let _17: [bool; 7];
let _18: [u8; 5];
let _19: f32;
let _20: bool;
let _21: i128;
let _22: (u32,);
let _23: ([i64; 8],);
let _24: char;
let _25: isize;
let _26: [i64; 8];
let _27: Adt41;
let _28: i16;
let _29: bool;
let _30: [i64; 8];
let _31: (u128, u16);
let _32: ();
let _33: ();
{
_6 = _8;
_8 = _4;
_1 = (-170102660234171459843291541138753365802_i128) as i8;
_1 = -_2;
_10 = -_3;
_6 = _8;
_11 = _9 * _5;
RET = [(-5393715799530648025_i64),7766976797472702721_i64,1059818716880028738_i64];
_6 = _4;
_13 = 34_u8 as f32;
_5 = _9 & _9;
_7 = !_10;
_2 = _1 + _1;
RET = [(-6353732785346513720_i64),7966452824743038936_i64,(-6561705341632169073_i64)];
_11 = _5 ^ _5;
_6 = !_8;
_6 = _2 >= _2;
_13 = 6361417130362493776_u64 as f32;
_14 = [47_u8,67_u8,59_u8,152_u8,245_u8];
_6 = _4;
RET = [8182419023123303579_i64,(-887520159940552447_i64),(-4845816961551120576_i64)];
_4 = !_8;
_3 = _10;
RET = [(-3001626079373901801_i64),3446535178161403682_i64,2711277206454545393_i64];
_2 = _1 ^ _1;
_9 = _5;
_10 = !_7;
Goto(bb1)
}
bb1 = {
_3 = _7 - _7;
_7 = 13393970289578196019_u64 as i16;
RET = [2278031559744144135_i64,5402828645549719080_i64,4984589655954449457_i64];
_1 = !_2;
_11 = _6 as isize;
_1 = _2;
_15.fld3.0 = !35905766061376916314710090193694537720_u128;
_4 = !_8;
_8 = _4;
_3 = _10 >> _9;
_15.fld4 = 613802364183966931_u64 as u8;
_15.fld3 = (328240180259571232623721562367921591511_u128, 20935_u16);
_13 = _15.fld4 as f32;
_14 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_15.fld3.1 = 38579_u16 << _11;
RET = [8131490879085670560_i64,3012906008813431493_i64,8286410983999640055_i64];
_10 = 168832002901659579069088139174758740369_i128 as i16;
_8 = _6 | _6;
Goto(bb2)
}
bb2 = {
_15.fld3.0 = 21242257801481007795827791562584469680_u128;
_15.fld3.1 = 2401_u16 | 15962_u16;
_17 = [_4,_4,_4,_8,_6,_8,_6];
Call(_8 = fn14(_5, _2, _5, _2, _2, _5, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_17 = [_8,_8,_8,_8,_6,_4,_6];
_15.fld3.1 = 50818_u16;
_9 = _15.fld3.1 as isize;
_17 = [_6,_8,_6,_8,_4,_6,_8];
match _15.fld3.0 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
21242257801481007795827791562584469680 => bb8,
_ => bb7
}
}
bb4 = {
_15.fld3.0 = 21242257801481007795827791562584469680_u128;
_15.fld3.1 = 2401_u16 | 15962_u16;
_17 = [_4,_4,_4,_8,_6,_8,_6];
Call(_8 = fn14(_5, _2, _5, _2, _2, _5, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_3 = _7 - _7;
_7 = 13393970289578196019_u64 as i16;
RET = [2278031559744144135_i64,5402828645549719080_i64,4984589655954449457_i64];
_1 = !_2;
_11 = _6 as isize;
_1 = _2;
_15.fld3.0 = !35905766061376916314710090193694537720_u128;
_4 = !_8;
_8 = _4;
_3 = _10 >> _9;
_15.fld4 = 613802364183966931_u64 as u8;
_15.fld3 = (328240180259571232623721562367921591511_u128, 20935_u16);
_13 = _15.fld4 as f32;
_14 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_15.fld3.1 = 38579_u16 << _11;
RET = [8131490879085670560_i64,3012906008813431493_i64,8286410983999640055_i64];
_10 = 168832002901659579069088139174758740369_i128 as i16;
_8 = _6 | _6;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = [6570674322112006873_i64,232621466135985653_i64,9009069528519421628_i64];
_15.fld0 = core::ptr::addr_of_mut!(_15.fld3.0);
match _15.fld3.1 {
0 => bb7,
1 => bb2,
50818 => bb9,
_ => bb3
}
}
bb9 = {
_20 = !_4;
_5 = -_11;
_21 = !56087460728523430866080789608502028166_i128;
_16 = _20 > _8;
_22 = (510079190_u32,);
Call(_15.fld2 = core::intrinsics::transmute(_11), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_6 = _8 | _16;
_22 = (1696032235_u32,);
_12 = core::ptr::addr_of_mut!(_21);
_15.fld2 = _2 as f64;
_9 = !_11;
_12 = core::ptr::addr_of_mut!((*_12));
_17 = [_8,_20,_4,_6,_16,_16,_6];
_8 = _6;
_14 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_10 = (*_12) as i16;
_20 = !_4;
_18 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_25 = 13415841620986207834_u64 as isize;
_1 = _2 + _2;
_4 = _20;
_1 = _2 * _2;
_21 = !(-34989266499153299843274412506186760476_i128);
_6 = _8 | _8;
_23.0 = [2997956211891249238_i64,(-3506370335950638751_i64),(-1791710084901002894_i64),(-6951601042195229721_i64),(-327612483446834436_i64),5183460464590499755_i64,2032033127720171452_i64,(-8790400430788483399_i64)];
_18 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_15.fld3.1 = !1517_u16;
match _22.0 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
1696032235 => bb17,
_ => bb16
}
}
bb11 = {
_17 = [_8,_8,_8,_8,_6,_4,_6];
_15.fld3.1 = 50818_u16;
_9 = _15.fld3.1 as isize;
_17 = [_6,_8,_6,_8,_4,_6,_8];
match _15.fld3.0 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
21242257801481007795827791562584469680 => bb8,
_ => bb7
}
}
bb12 = {
RET = [6570674322112006873_i64,232621466135985653_i64,9009069528519421628_i64];
_15.fld0 = core::ptr::addr_of_mut!(_15.fld3.0);
match _15.fld3.1 {
0 => bb7,
1 => bb2,
50818 => bb9,
_ => bb3
}
}
bb13 = {
_3 = _7 - _7;
_7 = 13393970289578196019_u64 as i16;
RET = [2278031559744144135_i64,5402828645549719080_i64,4984589655954449457_i64];
_1 = !_2;
_11 = _6 as isize;
_1 = _2;
_15.fld3.0 = !35905766061376916314710090193694537720_u128;
_4 = !_8;
_8 = _4;
_3 = _10 >> _9;
_15.fld4 = 613802364183966931_u64 as u8;
_15.fld3 = (328240180259571232623721562367921591511_u128, 20935_u16);
_13 = _15.fld4 as f32;
_14 = [_15.fld4,_15.fld4,_15.fld4,_15.fld4,_15.fld4];
_15.fld3.1 = 38579_u16 << _11;
RET = [8131490879085670560_i64,3012906008813431493_i64,8286410983999640055_i64];
_10 = 168832002901659579069088139174758740369_i128 as i16;
_8 = _6 | _6;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
_15.fld3.0 = 21242257801481007795827791562584469680_u128;
_15.fld3.1 = 2401_u16 | 15962_u16;
_17 = [_4,_4,_4,_8,_6,_8,_6];
Call(_8 = fn14(_5, _2, _5, _2, _2, _5, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_15.fld3.0 = 21242257801481007795827791562584469680_u128;
_15.fld3.1 = 2401_u16 | 15962_u16;
_17 = [_4,_4,_4,_8,_6,_8,_6];
Call(_8 = fn14(_5, _2, _5, _2, _2, _5, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_22 = (1730730316_u32,);
_3 = _10 ^ _7;
_22 = (2997692118_u32,);
Goto(bb18)
}
bb18 = {
Call(_32 = dump_var(13_usize, 3_usize, Move(_3), 25_usize, Move(_25), 10_usize, Move(_10), 2_usize, Move(_2)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(13_usize, 7_usize, Move(_7), 18_usize, Move(_18), 4_usize, Move(_4), 23_usize, Move(_23)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_32 = dump_var(13_usize, 6_usize, Move(_6), 14_usize, Move(_14), 33_usize, _33, 33_usize, _33), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: isize,mut _2: i8,mut _3: isize,mut _4: i8,mut _5: i8,mut _6: isize,mut _7: isize,mut _8: isize) -> bool {
mir! {
type RET = bool;
let _9: ();
let _10: ();
{
_7 = _8;
RET = _3 >= _3;
_6 = 3_usize as isize;
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(14_usize, 8_usize, Move(_8), 1_usize, Move(_1), 5_usize, Move(_5), 3_usize, Move(_3)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: *mut i32,mut _2: u128,mut _3: bool,mut _4: f32,mut _5: u128,mut _6: (u128, u16),mut _7: ([u8; 5], *mut u128, u32, i32),mut _8: char,mut _9: u128) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _10: i64;
let _11: f64;
let _12: u16;
let _13: u32;
let _14: char;
let _15: Adt41;
let _16: (i16,);
let _17: f64;
let _18: char;
let _19: bool;
let _20: char;
let _21: ([i64; 8],);
let _22: ();
let _23: ();
{
_4 = 3939497681762893284_i64 as f32;
_6 = (_9, 11961_u16);
RET = [0_usize,5509740819687874090_usize];
_6 = (_9, 49992_u16);
_6.1 = 16175_u16 - 3004_u16;
_1 = core::ptr::addr_of_mut!(_7.3);
_6.0 = _2 - _9;
RET = [9469199692811415389_usize,7_usize];
_7.3 = !(-869442640_i32);
_7.0 = [177_u8,229_u8,24_u8,149_u8,20_u8];
_2 = _9 >> _6.1;
_7.1 = core::ptr::addr_of_mut!(_2);
RET = [4663930249225518081_usize,0_usize];
_6.1 = 37586_u16;
_11 = (*_1) as f64;
_7.3 = (-1570317881_i32) & 1812191414_i32;
_9 = (*_1) as u128;
_5 = !_2;
_7.2 = 2132594195_u32;
RET = [4_usize,6761971974948884039_usize];
_6 = (_5, 47829_u16);
RET = [8154116200242950116_usize,5_usize];
_8 = '\u{ed7e9}';
_12 = _6.1;
_11 = 15714_i16 as f64;
_2 = 8156343256083861699_usize as u128;
Call(_6 = fn16(_7, _3, _3, _12, _12, _12, _3, _11, _7.1, _12, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = core::ptr::addr_of_mut!((*_1));
_7.0 = [255_u8,33_u8,125_u8,119_u8,195_u8];
RET = [1_usize,4_usize];
RET = [5_usize,994884063730024838_usize];
_5 = _6.0 - _6.0;
_2 = !_5;
_15.fld3 = (_2, _12);
_15.fld1 = _8;
_5 = 4228455842699953160_u64 as u128;
_15 = Adt41 { fld0: _7.1,fld1: _8,fld2: _11,fld3: _6,fld4: 213_u8 };
_15.fld3.0 = _6.0 >> _7.3;
_10 = !978945265152071664_i64;
_12 = !_6.1;
match _15.fld4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
213 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_15.fld2 = _7.2 as f64;
_6.1 = _15.fld3.1 - _15.fld3.1;
_11 = _15.fld2 - _15.fld2;
_7.3 = (-812785623_i32) >> _2;
_9 = _2 | _2;
_16.0 = 17698865867629512514_u64 as i16;
_8 = _15.fld1;
_6.1 = _15.fld3.1 & _15.fld3.1;
Goto(bb11)
}
bb11 = {
_15.fld3 = (_2, _6.1);
_7.2 = 346151074_u32 | 548232439_u32;
Goto(bb12)
}
bb12 = {
_2 = _9 + _9;
_16 = (5770_i16,);
_5 = !_9;
_3 = _15.fld4 >= _15.fld4;
_14 = _8;
_3 = _6.0 <= _9;
_2 = !_6.0;
_13 = _7.2 << _15.fld3.0;
_7.2 = _13 - _13;
_15.fld1 = _8;
_17 = _10 as f64;
_19 = !_3;
_18 = _15.fld1;
_8 = _14;
_16.0 = (-599_i16) + (-12804_i16);
_15 = Adt41 { fld0: _7.1,fld1: _14,fld2: _11,fld3: _6,fld4: 239_u8 };
RET = [504882391993387152_usize,5803447138818773244_usize];
_1 = core::ptr::addr_of_mut!((*_1));
_16 = ((-11667_i16),);
_15.fld3.0 = !_9;
Call(_7.3 = core::intrinsics::bswap(673242329_i32), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Goto(bb14)
}
bb14 = {
_13 = _4 as u32;
_15.fld2 = _11 * _11;
_15.fld1 = _8;
_20 = _18;
_15.fld3.0 = _9;
_15.fld4 = !113_u8;
_15.fld0 = _7.1;
_13 = _7.2 - _7.2;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(15_usize, 20_usize, Move(_20), 5_usize, Move(_5), 8_usize, Move(_8), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(15_usize, 12_usize, Move(_12), 6_usize, Move(_6), 2_usize, Move(_2), 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: ([u8; 5], *mut u128, u32, i32),mut _2: bool,mut _3: bool,mut _4: u16,mut _5: u16,mut _6: u16,mut _7: bool,mut _8: f64,mut _9: *mut u128,mut _10: u16,mut _11: u128) -> (u128, u16) {
mir! {
type RET = (u128, u16);
let _12: char;
let _13: u16;
let _14: i8;
let _15: (u128, u16);
let _16: u32;
let _17: [u8; 5];
let _18: u128;
let _19: [isize; 2];
let _20: ();
let _21: ();
{
RET.0 = _11 & _11;
_7 = _11 != _11;
_11 = RET.0 | RET.0;
_10 = _5;
RET.1 = _1.2 as u16;
_4 = _5;
_12 = '\u{d3e1d}';
_1.2 = !3383083192_u32;
_1.1 = core::ptr::addr_of_mut!(RET.0);
_5 = RET.1 + _6;
_3 = _7;
_15 = (_11, _4);
_17 = _1.0;
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(16_usize, 4_usize, Move(_4), 15_usize, Move(_15), 11_usize, Move(_11), 6_usize, Move(_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(16_usize, 3_usize, Move(_3), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [i64; 8],mut _2: ([i64; 8],),mut _3: u32) -> [i64; 8] {
mir! {
type RET = [i64; 8];
let _4: *mut u128;
let _5: usize;
let _6: i128;
let _7: [u8; 5];
let _8: *mut u128;
let _9: Adt44;
let _10: i16;
let _11: Adt57;
let _12: *mut i128;
let _13: bool;
let _14: [bool; 7];
let _15: *const bool;
let _16: bool;
let _17: [i64; 3];
let _18: bool;
let _19: bool;
let _20: ([i64; 8],);
let _21: isize;
let _22: isize;
let _23: Adt53;
let _24: f32;
let _25: Adt47;
let _26: *const i8;
let _27: char;
let _28: Adt43;
let _29: Adt42;
let _30: [usize; 2];
let _31: u32;
let _32: [bool; 7];
let _33: (u32,);
let _34: char;
let _35: (u128, u16);
let _36: *mut i32;
let _37: [usize; 2];
let _38: [i64; 8];
let _39: ();
let _40: ();
{
_2 = (_1,);
_1 = _2.0;
_1 = [(-5014687562219923172_i64),(-3552352113137349936_i64),(-5643342574022262745_i64),(-4759674748792692531_i64),5368520267203995490_i64,9049392559346474469_i64,(-5762135994232500079_i64),(-1429116075526850568_i64)];
_2.0 = _1;
RET = [(-5067311878704568990_i64),(-854702218960337065_i64),737939158570583873_i64,(-6878325881867072340_i64),3004757693402636677_i64,(-6575388604243136251_i64),7284530309368437762_i64,6249732770900271997_i64];
_1 = [(-5818811046801215_i64),(-1321145809260151409_i64),2835448443498079235_i64,6887005694546756595_i64,4931460586555987767_i64,(-1397186970179787751_i64),2855990381468646953_i64,3278884821538665133_i64];
_1 = [9150100818095733791_i64,2592708344983116720_i64,(-3961819866879476186_i64),916560716703991642_i64,7831760432352061150_i64,(-8746473657008267565_i64),4829069779386838499_i64,(-2970454130141068950_i64)];
_2.0 = [1502227211370498990_i64,(-8238530580091487527_i64),6676661662629648131_i64,8363129281888491166_i64,(-5675103358318743578_i64),6326231206325798138_i64,(-6763172797011507589_i64),1384581631141097846_i64];
_3 = 497987577_u32;
_2 = (RET,);
_1 = RET;
_5 = 4654_i16 as usize;
_2 = (_1,);
_2 = (_1,);
_1 = [8607830711349343415_i64,6714943357403053309_i64,(-4327334235630644425_i64),8590133461688112182_i64,(-3354580509358982527_i64),7284432624662028817_i64,(-567853046285347614_i64),3810558787212469988_i64];
RET = _1;
match _3 {
0 => bb1,
497987577 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_6 = 4536393002302638955823088017396842961_i128 << _3;
_1 = [(-5540025928345309915_i64),(-3141682225847719371_i64),784890690079631737_i64,(-5737233074345102601_i64),(-4549911780601637164_i64),(-1787510910656669487_i64),(-7044536876612593515_i64),8657021934122989984_i64];
_7 = [238_u8,217_u8,202_u8,55_u8,105_u8];
_6 = !82514422673855713768860161270988942925_i128;
_2 = (RET,);
_2 = (RET,);
_6 = !92459465276119862099354859111507270751_i128;
_2 = (_1,);
_10 = (-18234_i16) & (-19286_i16);
_2.0 = [(-8613474560230044199_i64),7052453356945761499_i64,5042079250432846724_i64,(-1662342440277857769_i64),(-8669722570122186931_i64),(-8817428671990749880_i64),(-1554087904522140946_i64),(-1386800660748624834_i64)];
_1 = [(-2750319744647496568_i64),5248538293243408470_i64,(-6826872952866823344_i64),(-3271545189504401480_i64),6852160710274154369_i64,(-3428541931661305494_i64),953120908840346574_i64,8606968669759676341_i64];
_1 = _2.0;
_6 = 144288633552234532624961970233316607011_i128 * (-103269932792652638573980645606620661047_i128);
_5 = _10 as usize;
_6 = !95742145793564234034693838016015532337_i128;
RET = [(-8683399448176069988_i64),3555888219028117561_i64,(-4523890182169677097_i64),(-623475039770321678_i64),389798571452591616_i64,8697159514010960204_i64,8106786307630809165_i64,6036301306929213245_i64];
_10 = -(-3960_i16);
RET = [(-1741907205725304779_i64),6987447861936370689_i64,(-7397901466026094841_i64),(-8283462752885465491_i64),5719915679792517105_i64,(-4740688381502647761_i64),7733515907457726678_i64,(-1097040974564154464_i64)];
RET = [(-4750367179656350132_i64),(-5307035500031372870_i64),8160401733066056835_i64,4244571572466820439_i64,(-1486555394185795082_i64),(-5526430071444214967_i64),4606012528957753684_i64,8690364114706951553_i64];
RET = [(-5597189223465151662_i64),7459326349198066260_i64,(-422314380360175327_i64),4778376675972768274_i64,(-5538193030720145146_i64),2445907606197441597_i64,3775068761073422122_i64,(-7377788081350798265_i64)];
match _3 {
497987577 => bb4,
_ => bb1
}
}
bb4 = {
RET = _1;
_7 = [219_u8,141_u8,200_u8,67_u8,175_u8];
_6 = _3 as i128;
_2 = (_1,);
RET = [3763972026267095587_i64,6189203793839708093_i64,2753339539268597882_i64,(-1468877075059342986_i64),(-7243697067937526879_i64),(-8816600093230440389_i64),6600207085553515921_i64,(-368730498940160771_i64)];
_11.fld0 = !_3;
_2 = (_1,);
_11.fld0 = _3 / _3;
_3 = !_11.fld0;
_10 = (-31190_i16) << _5;
_11.fld0 = '\u{39284}' as u32;
_12 = core::ptr::addr_of_mut!(_6);
_5 = 0_usize & 17842861948444596121_usize;
_6 = _5 as i128;
_6 = 170099257637676396214014067734305386281_i128;
_13 = false;
_12 = core::ptr::addr_of_mut!((*_12));
_10 = (-7829_i16);
_6 = 94528390403605232712186833201539371507_i128 * (-68448839087192394042165228602685342241_i128);
_3 = _11.fld0 & _11.fld0;
_10 = -(-24685_i16);
_7 = [228_u8,15_u8,103_u8,114_u8,101_u8];
Goto(bb5)
}
bb5 = {
_5 = 2699900931215260645_usize * 2_usize;
RET = _1;
RET = [414624516842331173_i64,9155038661760398812_i64,3669692642838070397_i64,(-298227641623516005_i64),218664005433065618_i64,(-7226232659782100612_i64),(-5423953771290696138_i64),(-6560921645193929263_i64)];
_13 = !false;
_2.0 = [8954230587729837673_i64,8137070325714797059_i64,(-4444845585953965837_i64),8280061159366521074_i64,(-796780658542166823_i64),(-1582687114632464604_i64),(-7001963912231315951_i64),4727294709466629932_i64];
_14 = [_13,_13,_13,_13,_13,_13,_13];
_10 = 1177_i16 << (*_12);
_10 = 4475_i16 * (-12030_i16);
_3 = _11.fld0;
_16 = _3 >= _3;
RET = _1;
_13 = _6 >= (*_12);
_11.fld0 = !_3;
_1 = [(-7561731822509000785_i64),(-715409584827087497_i64),(-3174665016536864022_i64),(-4372371061241864002_i64),1124029217614037656_i64,1195593581292057857_i64,(-8048982597497232477_i64),(-4078811962584548775_i64)];
_2 = (RET,);
_17 = [(-8659679326727716021_i64),(-2516321316460511906_i64),3779943566102419022_i64];
RET = [3949602247718782415_i64,(-2717614721220305333_i64),1816205169380008332_i64,(-240500169296512568_i64),(-6014195500972281505_i64),1790431925139677539_i64,(-3230162284484728973_i64),822145166154144276_i64];
_7 = [228_u8,69_u8,222_u8,115_u8,226_u8];
_12 = core::ptr::addr_of_mut!((*_12));
_15 = core::ptr::addr_of!(_18);
_6 = 145886650652046511058662983659524619184_i128;
_16 = (*_12) < (*_12);
_16 = _13 | _13;
_3 = !_11.fld0;
RET = _2.0;
match (*_12) {
0 => bb4,
145886650652046511058662983659524619184 => bb6,
_ => bb3
}
}
bb6 = {
_12 = core::ptr::addr_of_mut!(_6);
_20 = _2;
_12 = core::ptr::addr_of_mut!((*_12));
_6 = 177329101481701951742734487953772653009_u128 as i128;
_16 = _13 & _13;
_7 = [228_u8,80_u8,144_u8,22_u8,214_u8];
RET = _2.0;
_18 = !_16;
_19 = !(*_15);
_22 = -(-1_isize);
_7 = [213_u8,200_u8,178_u8,41_u8,182_u8];
_7 = [242_u8,158_u8,110_u8,69_u8,126_u8];
_6 = -(-24994883039998248492796127528866308178_i128);
_13 = (*_15) & _16;
_6 = -133560849019464365864236782464055998369_i128;
RET = [(-5908704526056388152_i64),(-4882551030459843439_i64),6338244822327377527_i64,(-8731258907178110043_i64),877549111497215387_i64,4493489936169269477_i64,8814469664934304175_i64,(-4491991478313450080_i64)];
_18 = _16 == _13;
_24 = _22 as f32;
_17 = [(-605491559854733216_i64),826094313295458065_i64,(-6882479407573447916_i64)];
_2.0 = [8766555107859213695_i64,(-1641351886278529923_i64),(-6670631445902251023_i64),6738931450072188746_i64,7716302251613359576_i64,(-1981285785933432761_i64),(-7839796518383442541_i64),7074344337853765408_i64];
_16 = (*_15);
_7 = [54_u8,65_u8,207_u8,153_u8,188_u8];
_18 = !_16;
_2 = _20;
Goto(bb7)
}
bb7 = {
_2 = (_1,);
_24 = 53537_u16 as f32;
_2.0 = RET;
_13 = (*_15);
_21 = !_22;
_21 = _22;
RET = _20.0;
_24 = 172692894813096241658109163595578423441_u128 as f32;
_6 = 50989505009870890515158511804318680996_i128;
_17 = [(-1721056985295612040_i64),2578171296986970210_i64,(-8778996401852391295_i64)];
_14 = [_19,(*_15),(*_15),_16,_13,(*_15),_13];
_24 = (-2016547192_i32) as f32;
_22 = _21 * _21;
_16 = (*_15);
RET = [(-1148154662814680876_i64),(-4717250880069375394_i64),7789068027909604043_i64,(-5279207084807291579_i64),5641290664868315120_i64,(-8267691599991747032_i64),(-2515060124785382466_i64),4716357244165317104_i64];
_18 = _13 != _19;
RET = [5893276192079930112_i64,(-3312350039883112923_i64),2041816897677363132_i64,6004537835706118837_i64,(-3603263342599725796_i64),(-9217878333491503375_i64),(-8241682755510963199_i64),(-4482129703771467696_i64)];
_21 = _22;
_5 = 19216162071936322213092366156384570072_u128 as usize;
_15 = core::ptr::addr_of!((*_15));
_27 = '\u{92f8c}';
_20 = _2;
RET = [(-6017771450613989628_i64),6399579781788217259_i64,(-440996342284608948_i64),2665763636136487302_i64,7829519134433669067_i64,(-5431007788930688382_i64),(-8293561887240521218_i64),(-1814353955621843792_i64)];
_19 = !_18;
_16 = (*_15);
match (*_12) {
0 => bb1,
1 => bb3,
2 => bb8,
50989505009870890515158511804318680996 => bb10,
_ => bb9
}
}
bb8 = {
Return()
}
bb9 = {
RET = _1;
_7 = [219_u8,141_u8,200_u8,67_u8,175_u8];
_6 = _3 as i128;
_2 = (_1,);
RET = [3763972026267095587_i64,6189203793839708093_i64,2753339539268597882_i64,(-1468877075059342986_i64),(-7243697067937526879_i64),(-8816600093230440389_i64),6600207085553515921_i64,(-368730498940160771_i64)];
_11.fld0 = !_3;
_2 = (_1,);
_11.fld0 = _3 / _3;
_3 = !_11.fld0;
_10 = (-31190_i16) << _5;
_11.fld0 = '\u{39284}' as u32;
_12 = core::ptr::addr_of_mut!(_6);
_5 = 0_usize & 17842861948444596121_usize;
_6 = _5 as i128;
_6 = 170099257637676396214014067734305386281_i128;
_13 = false;
_12 = core::ptr::addr_of_mut!((*_12));
_10 = (-7829_i16);
_6 = 94528390403605232712186833201539371507_i128 * (-68448839087192394042165228602685342241_i128);
_3 = _11.fld0 & _11.fld0;
_10 = -(-24685_i16);
_7 = [228_u8,15_u8,103_u8,114_u8,101_u8];
Goto(bb5)
}
bb10 = {
_21 = _24 as isize;
_16 = (*_15);
_13 = (*_15);
_20.0 = [2433275155027158083_i64,7080408677705345308_i64,(-8976601100386374621_i64),6283128107750176750_i64,6419263964259505252_i64,5754966026182898762_i64,418469193569533200_i64,5520548428996845769_i64];
_17 = [4883098647594894042_i64,(-54669734127121606_i64),7587854033604537120_i64];
_6 = _24 as i128;
_3 = _11.fld0;
_27 = '\u{7a8a}';
_16 = !(*_15);
_15 = core::ptr::addr_of!((*_15));
_35 = (219558779941345642729647534564472116416_u128, 17795_u16);
_17 = [(-3205155862138755394_i64),(-5509368431522709455_i64),4911848373037283206_i64];
_35.0 = _35.1 as u128;
_35 = (321761393051052571172828451828929378315_u128, 50609_u16);
_33 = (_3,);
_20.0 = _1;
_34 = _27;
_38 = [4998029162774217556_i64,1293601359373411548_i64,(-5173411784828432958_i64),7336403223581729058_i64,(-6263120243446050837_i64),(-4263572019652128704_i64),(-2741952906014986031_i64),(-1675974445546487972_i64)];
_6 = 151304990064275938786822967400969193448_i128;
_31 = _3;
_31 = 10867619696702872541_u64 as u32;
match (*_12) {
0 => bb11,
1 => bb12,
2 => bb13,
151304990064275938786822967400969193448 => bb15,
_ => bb14
}
}
bb11 = {
_6 = 4536393002302638955823088017396842961_i128 << _3;
_1 = [(-5540025928345309915_i64),(-3141682225847719371_i64),784890690079631737_i64,(-5737233074345102601_i64),(-4549911780601637164_i64),(-1787510910656669487_i64),(-7044536876612593515_i64),8657021934122989984_i64];
_7 = [238_u8,217_u8,202_u8,55_u8,105_u8];
_6 = !82514422673855713768860161270988942925_i128;
_2 = (RET,);
_2 = (RET,);
_6 = !92459465276119862099354859111507270751_i128;
_2 = (_1,);
_10 = (-18234_i16) & (-19286_i16);
_2.0 = [(-8613474560230044199_i64),7052453356945761499_i64,5042079250432846724_i64,(-1662342440277857769_i64),(-8669722570122186931_i64),(-8817428671990749880_i64),(-1554087904522140946_i64),(-1386800660748624834_i64)];
_1 = [(-2750319744647496568_i64),5248538293243408470_i64,(-6826872952866823344_i64),(-3271545189504401480_i64),6852160710274154369_i64,(-3428541931661305494_i64),953120908840346574_i64,8606968669759676341_i64];
_1 = _2.0;
_6 = 144288633552234532624961970233316607011_i128 * (-103269932792652638573980645606620661047_i128);
_5 = _10 as usize;
_6 = !95742145793564234034693838016015532337_i128;
RET = [(-8683399448176069988_i64),3555888219028117561_i64,(-4523890182169677097_i64),(-623475039770321678_i64),389798571452591616_i64,8697159514010960204_i64,8106786307630809165_i64,6036301306929213245_i64];
_10 = -(-3960_i16);
RET = [(-1741907205725304779_i64),6987447861936370689_i64,(-7397901466026094841_i64),(-8283462752885465491_i64),5719915679792517105_i64,(-4740688381502647761_i64),7733515907457726678_i64,(-1097040974564154464_i64)];
RET = [(-4750367179656350132_i64),(-5307035500031372870_i64),8160401733066056835_i64,4244571572466820439_i64,(-1486555394185795082_i64),(-5526430071444214967_i64),4606012528957753684_i64,8690364114706951553_i64];
RET = [(-5597189223465151662_i64),7459326349198066260_i64,(-422314380360175327_i64),4778376675972768274_i64,(-5538193030720145146_i64),2445907606197441597_i64,3775068761073422122_i64,(-7377788081350798265_i64)];
match _3 {
497987577 => bb4,
_ => bb1
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
RET = _1;
_7 = [219_u8,141_u8,200_u8,67_u8,175_u8];
_6 = _3 as i128;
_2 = (_1,);
RET = [3763972026267095587_i64,6189203793839708093_i64,2753339539268597882_i64,(-1468877075059342986_i64),(-7243697067937526879_i64),(-8816600093230440389_i64),6600207085553515921_i64,(-368730498940160771_i64)];
_11.fld0 = !_3;
_2 = (_1,);
_11.fld0 = _3 / _3;
_3 = !_11.fld0;
_10 = (-31190_i16) << _5;
_11.fld0 = '\u{39284}' as u32;
_12 = core::ptr::addr_of_mut!(_6);
_5 = 0_usize & 17842861948444596121_usize;
_6 = _5 as i128;
_6 = 170099257637676396214014067734305386281_i128;
_13 = false;
_12 = core::ptr::addr_of_mut!((*_12));
_10 = (-7829_i16);
_6 = 94528390403605232712186833201539371507_i128 * (-68448839087192394042165228602685342241_i128);
_3 = _11.fld0 & _11.fld0;
_10 = -(-24685_i16);
_7 = [228_u8,15_u8,103_u8,114_u8,101_u8];
Goto(bb5)
}
bb15 = {
_32 = [(*_15),_18,(*_15),_18,_19,_13,_18];
_35.1 = !2384_u16;
_2 = (_20.0,);
_37 = [_5,_5];
_2 = _20;
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(17_usize, 27_usize, Move(_27), 33_usize, Move(_33), 7_usize, Move(_7), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(17_usize, 19_usize, Move(_19), 3_usize, Move(_3), 38_usize, Move(_38), 37_usize, Move(_37)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(17_usize, 31_usize, Move(_31), 32_usize, Move(_32), 16_usize, Move(_16), 35_usize, Move(_35)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(2982285420_u32), std::hint::black_box('\u{10bac4}'), std::hint::black_box(247352324057610475975057443143750627753_u128), std::hint::black_box((-128_i8)), std::hint::black_box(14021_i16), std::hint::black_box((-470454518_i32)), std::hint::black_box(6607648167659701534_i64), std::hint::black_box(153661048581288663227954852477278122101_i128), std::hint::black_box(4902193390730757618_usize), std::hint::black_box(103_u8), std::hint::black_box(50304_u16));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt41 {
fld0: *mut u128,
fld1: char,
fld2: f64,
fld3: (u128, u16),
fld4: u8,
}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: i128,
fld1: char,
fld2: (*mut i128,),
fld3: u16,
fld4: [u8; 5],
fld5: [isize; 2],
fld6: Adt41,

},
Variant1{
fld0: (*mut i128,),

},
Variant2{
fld0: u128,
fld1: *mut i128,
fld2: isize,
fld3: (u32,),
fld4: i16,
fld5: ([i64; 8],),
fld6: u32,

},
Variant3{
fld0: *const i8,
fld1: *mut bool,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: [i64; 3],
fld1: *mut usize,
fld2: isize,
fld3: *mut ([i64; 8],),
fld4: [bool; 7],
fld5: Adt41,
fld6: i64,

},
Variant1{
fld0: [usize; 2],
fld1: *mut ([i64; 8],),
fld2: u64,
fld3: f32,
fld4: i16,
fld5: *mut bool,
fld6: *const i8,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: [bool; 7],
fld1: char,
fld2: Adt41,
fld3: i64,
fld4: u64,
fld5: ([i64; 8],),

},
Variant1{
fld0: (*mut i128,),
fld1: (i16,),
fld2: *mut i32,
fld3: u128,
fld4: i16,
fld5: Adt43,
fld6: i64,
fld7: *mut bool,

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: Adt42,

},
Variant1{
fld0: bool,
fld1: u128,
fld2: f32,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt46 {
fld0: bool,
fld1: char,
fld2: [u8; 5],
fld3: ((u128, u16), i32, u64, usize, *mut i32),
fld4: ([i64; 8],),
fld5: (i16,),
fld6: [i64; 3],
fld7: i128,
}
#[derive(Debug,Copy,Clone)]
pub enum Adt47 {
Variant0{
fld0: u32,
fld1: char,
fld2: isize,
fld3: Adt46,
fld4: *mut u16,
fld5: usize,
fld6: u128,

},
Variant1{
fld0: [u8; 5],
fld1: i16,
fld2: [i64; 3],

},
Variant2{
fld0: ([u8; 5], *mut u128, u32, i32),
fld1: Adt43,
fld2: *const i8,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: [i64; 3],
fld1: char,
fld2: (u128, u16),
fld3: u8,
fld4: *mut i32,
fld5: Adt47,

},
Variant1{
fld0: *mut ([i64; 8],),
fld1: u16,
fld2: isize,
fld3: u8,
fld4: *mut u16,
fld5: *const bool,

},
Variant2{
fld0: u64,
fld1: [u8; 5],
fld2: *mut bool,

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: Adt42,
fld1: ([i64; 8],),
fld2: *mut usize,
fld3: ((u128, u16), i32, u64, usize, *mut i32),
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: u128,
fld1: [usize; 2],
fld2: isize,
fld3: usize,
fld4: Adt42,
fld5: [isize; 2],
fld6: (u32,),
fld7: ([u8; 5], *mut u128, u32, i32),

},
Variant1{
fld0: u64,
fld1: [i64; 3],
fld2: Adt42,
fld3: ([i64; 8],),

},
Variant2{
fld0: [i64; 3],
fld1: [u8; 5],
fld2: [i64; 8],
fld3: *mut u16,
fld4: i128,

}}
#[derive(Debug)]
pub struct Adt51 {
fld0: ((u128, u16), i32, u64, usize, *mut i32),
fld1: f64,
fld2: *mut i32,
fld3: Adt49,
fld4: *mut ([i64; 8],),
fld5: usize,
fld6: i64,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: *mut u16,
fld2: (u32,),
fld3: f32,
fld4: Adt51,
fld5: Adt49,

},
Variant1{
fld0: *mut bool,
fld1: *const bool,
fld2: isize,
fld3: Adt50,
fld4: (*mut i128,),
fld5: Adt48,
fld6: *mut u16,

},
Variant2{
fld0: (u128, u16),

},
Variant3{
fld0: f32,
fld1: char,
fld2: [i64; 8],

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: bool,
fld1: char,
fld2: Adt44,
fld3: Adt43,
fld4: [isize; 2],
fld5: Adt41,
fld6: *mut i32,

},
Variant1{
fld0: *mut u128,
fld1: char,
fld2: [bool; 7],
fld3: usize,
fld4: Adt50,
fld5: *const i8,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [u8; 5],
fld1: char,
fld2: [bool; 7],
fld3: i32,

},
Variant1{
fld0: (u32,),
fld1: [bool; 7],
fld2: u32,
fld3: usize,
fld4: [isize; 2],
fld5: *mut u128,

},
Variant2{
fld0: Adt52,
fld1: *mut i128,
fld2: [usize; 2],
fld3: [bool; 7],
fld4: (u32,),
fld5: i32,
fld6: Adt53,

},
Variant3{
fld0: *mut u128,
fld1: [isize; 2],
fld2: Adt53,
fld3: Adt46,
fld4: *const i8,
fld5: Adt43,
fld6: i64,
fld7: *mut i32,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt48,
fld1: Adt46,
fld2: [i64; 3],

},
Variant1{
fld0: *mut bool,
fld1: [bool; 7],
fld2: Adt43,
fld3: i8,
fld4: u32,
fld5: i128,
fld6: *mut ([i64; 8],),

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: usize,
fld1: Adt47,
fld2: ((u128, u16), i32, u64, usize, *mut i32),
fld3: (u32,),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: u32,
fld1: Adt43,
}

