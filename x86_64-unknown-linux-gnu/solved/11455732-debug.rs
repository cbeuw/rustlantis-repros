#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u128) -> u8 {
mir! {
type RET = u8;
let _14: bool;
let _15: Adt61;
let _16: i64;
let _17: isize;
let _18: Adt57;
let _19: ();
let _20: ();
{
_13 = 280989473611496470646663653608966931976_u128;
_14 = !true;
RET = 205_u8;
Call(_15.fld1 = fn1(_13, _14, _13, _13, _14, _13, _14, _13, _14, _13, _13), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_15.fld3 = [2485_u16,44226_u16];
_15.fld2 = !763704603_u32;
_9 = 402673151943156403_usize;
_13 = !142761910116186221718992726923805891609_u128;
_2 = '\u{6529e}';
RET = !78_u8;
_3 = (-41_isize) >> _13;
_11 = !59928_u16;
_4 = !(-72_i8);
_6 = 131165239_i32;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
131165239 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_1 = !_14;
RET = 65_u8;
RET = !21_u8;
_7 = _9 as i64;
Goto(bb11)
}
bb11 = {
_2 = '\u{bc99d}';
_5 = 18119_i16 & 31197_i16;
_12 = _15.fld2;
Goto(bb12)
}
bb12 = {
_10 = !140_u8;
_15.fld2 = _12;
_14 = _1 | _1;
_8 = (-160913083153212566189163470144806316910_i128);
_9 = 8998419034712723219_usize;
_15.fld1 = [_8,_8,_8,_8];
match _6 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
131165239 => bb19,
_ => bb18
}
}
bb13 = {
Return()
}
bb14 = {
_1 = !_14;
RET = 65_u8;
RET = !21_u8;
_7 = _9 as i64;
Goto(bb11)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_15.fld3 = [2485_u16,44226_u16];
_15.fld2 = !763704603_u32;
_9 = 402673151943156403_usize;
_13 = !142761910116186221718992726923805891609_u128;
_2 = '\u{6529e}';
RET = !78_u8;
_3 = (-41_isize) >> _13;
_11 = !59928_u16;
_4 = !(-72_i8);
_6 = 131165239_i32;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
131165239 => bb10,
_ => bb9
}
}
bb18 = {
Return()
}
bb19 = {
_17 = _3;
_15.fld2 = !_12;
_15.fld1 = [_8,_8,_8,_8];
_18.fld1 = [_6,_6,_6,_6];
_18.fld0 = !14956363441500775921_u64;
Goto(bb20)
}
bb20 = {
Call(_19 = dump_var(0_usize, 1_usize, Move(_1), 9_usize, Move(_9), 7_usize, Move(_7), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_19 = dump_var(0_usize, 3_usize, Move(_3), 2_usize, Move(_2), 11_usize, Move(_11), 20_usize, _20), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u128,mut _2: bool,mut _3: u128,mut _4: u128,mut _5: bool,mut _6: u128,mut _7: bool,mut _8: u128,mut _9: bool,mut _10: u128,mut _11: u128) -> [i128; 4] {
mir! {
type RET = [i128; 4];
let _12: f64;
let _13: bool;
let _14: (f64, f32);
let _15: Adt53;
let _16: [i32; 4];
let _17: f32;
let _18: Adt51;
let _19: Adt56;
let _20: (i128, f64);
let _21: char;
let _22: Adt57;
let _23: [u128; 8];
let _24: Adt64;
let _25: isize;
let _26: isize;
let _27: ((i128, f64), isize, (u32,), f32, u32);
let _28: f32;
let _29: Adt51;
let _30: (i128, f64);
let _31: u64;
let _32: (i128, i128, i32);
let _33: (i8, i128, *mut u8, usize);
let _34: f64;
let _35: f32;
let _36: [isize; 7];
let _37: u128;
let _38: u128;
let _39: u32;
let _40: f64;
let _41: isize;
let _42: ();
let _43: ();
{
_13 = !_7;
_7 = _9;
_2 = _9;
_9 = !_5;
_8 = _6;
_11 = (-6443840488339015009051409953782688238_i128) as u128;
RET = [(-113175252834777341245445924477626514142_i128),155454409846099312275796825476036684515_i128,(-133397621331747508866191196715544276016_i128),66868919502162926435912408840582134402_i128];
RET = [60862095220208830414404295395527385958_i128,87353662850566708255175971178716105243_i128,6772221936592346853466482046888451033_i128,141509511132953482401575242407307054785_i128];
_10 = _4;
_9 = _2 == _5;
_3 = (-5102530460416367716_i64) as u128;
_14.1 = 1_usize as f32;
_1 = _8 >> _8;
RET = [(-15536353268660018303654120781004488342_i128),(-100756888438544251563888804680148898832_i128),(-109951955190713210651877027514134926763_i128),(-141848859567146067706079723847287000644_i128)];
Call(RET = fn2(_8, _13), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = _2;
_4 = 9997_u16 as u128;
_5 = _13;
_12 = (-41_i8) as f64;
_3 = _6 ^ _11;
_12 = 20_u8 as f64;
_9 = !_5;
_14.0 = -_12;
_3 = _11 | _11;
_1 = '\u{68e48}' as u128;
_14.1 = 2017167211_u32 as f32;
_15.fld3 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-79_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_7 = _13;
_10 = !_6;
_2 = _9 >= _13;
_15.fld2.fld2 = [12681218478760356279_usize];
_16 = [1630722959_i32,(-647614585_i32),40485639_i32,(-416167644_i32)];
Goto(bb2)
}
bb2 = {
_15.fld1.2 = (3400660283_u32,);
_18.fld1 = 15_i8;
_5 = !_9;
_15.fld2.fld1.0 = _15.fld1.2.0;
_15.fld1.0.1 = 61476189593678965882048367858563004347_i128 as f64;
_19.fld1.fld2 = 1960473171981989240_u64 % 8436382581355243078_u64;
_11 = _15.fld1.2.0 as u128;
_15.fld2.fld6 = core::ptr::addr_of_mut!(_15.fld2.fld1.2);
_18.fld0 = [_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld1.2.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld1.2.0];
_19.fld1.fld0 = [_15.fld1.2.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld1.2.0];
_18 = Adt51 { fld0: _19.fld1.fld0,fld1: (-26_i8),fld2: _19.fld1.fld2 };
_1 = !_10;
_1 = _8 % 226390111414743185186714706962650888665_u128;
_19.fld1 = _18;
_15.fld1.0.0 = !142735853280642677226071774968293253547_i128;
_15.fld2.fld7 = core::ptr::addr_of!(_14);
_18.fld2 = '\u{14a5d}' as u64;
_4 = _8 >> _19.fld1.fld2;
_15.fld2.fld6 = core::ptr::addr_of_mut!(_15.fld2.fld1.2);
Call(_15.fld2.fld0 = fn3(_8, _14.0, _19.fld1.fld1, _18.fld1, _11, _15.fld2.fld7, _12, _3, _14, _14.0, _18, _19.fld1.fld1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_12 = _14.0 + _14.0;
_22 = Adt57 { fld0: _19.fld1.fld2,fld1: _16 };
_15.fld2.fld2 = [2_usize];
_17 = -_14.1;
_15.fld1.0.1 = -_15.fld2.fld0;
_15.fld1.4 = _15.fld1.2.0 / 3499135773_u32;
_19.fld1.fld0 = [_15.fld2.fld1.0,_15.fld1.2.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld1.4,_15.fld1.4,_15.fld1.2.0,_15.fld1.4];
_15.fld2.fld1.0 = '\u{1009ce}' as u32;
_19 = Adt56 { fld0: _5,fld1: _18 };
_14.0 = -_15.fld1.0.1;
_18 = Adt51 { fld0: _19.fld1.fld0,fld1: _19.fld1.fld1,fld2: _22.fld0 };
_15.fld1.3 = 51_u8 as f32;
_15.fld1.2 = (_15.fld2.fld1.0,);
_15.fld2.fld1.1 = 18_u8;
_21 = '\u{ab841}';
_10 = (-1304239189_i32) as u128;
_15.fld1.3 = _14.1 - _14.1;
_23 = [_8,_1,_6,_6,_4,_1,_3,_1];
_22.fld1 = _16;
_24.fld2.1 = !_15.fld2.fld1.1;
_24.fld1 = Adt56 { fld0: _5,fld1: _19.fld1 };
_20.1 = _15.fld2.fld0;
_24.fld0.0 = _15.fld1.4 * _15.fld1.2.0;
match _8 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
280989473611496470646663653608966931976 => bb8,
_ => bb7
}
}
bb4 = {
_15.fld1.2 = (3400660283_u32,);
_18.fld1 = 15_i8;
_5 = !_9;
_15.fld2.fld1.0 = _15.fld1.2.0;
_15.fld1.0.1 = 61476189593678965882048367858563004347_i128 as f64;
_19.fld1.fld2 = 1960473171981989240_u64 % 8436382581355243078_u64;
_11 = _15.fld1.2.0 as u128;
_15.fld2.fld6 = core::ptr::addr_of_mut!(_15.fld2.fld1.2);
_18.fld0 = [_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld1.2.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld1.2.0];
_19.fld1.fld0 = [_15.fld1.2.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_15.fld1.2.0,_15.fld2.fld1.0,_15.fld1.2.0];
_18 = Adt51 { fld0: _19.fld1.fld0,fld1: (-26_i8),fld2: _19.fld1.fld2 };
_1 = !_10;
_1 = _8 % 226390111414743185186714706962650888665_u128;
_19.fld1 = _18;
_15.fld1.0.0 = !142735853280642677226071774968293253547_i128;
_15.fld2.fld7 = core::ptr::addr_of!(_14);
_18.fld2 = '\u{14a5d}' as u64;
_4 = _8 >> _19.fld1.fld2;
_15.fld2.fld6 = core::ptr::addr_of_mut!(_15.fld2.fld1.2);
Call(_15.fld2.fld0 = fn3(_8, _14.0, _19.fld1.fld1, _18.fld1, _11, _15.fld2.fld7, _12, _3, _14, _14.0, _18, _19.fld1.fld1), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_7 = _2;
_4 = 9997_u16 as u128;
_5 = _13;
_12 = (-41_i8) as f64;
_3 = _6 ^ _11;
_12 = 20_u8 as f64;
_9 = !_5;
_14.0 = -_12;
_3 = _11 | _11;
_1 = '\u{68e48}' as u128;
_14.1 = 2017167211_u32 as f32;
_15.fld3 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-79_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_7 = _13;
_10 = !_6;
_2 = _9 >= _13;
_15.fld2.fld2 = [12681218478760356279_usize];
_16 = [1630722959_i32,(-647614585_i32),40485639_i32,(-416167644_i32)];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_14.0 = (-9223372036854775808_isize) as f64;
_15.fld1.1 = -(-9223372036854775808_isize);
_24.fld3 = !_15.fld1.4;
_15.fld2.fld3 = core::ptr::addr_of_mut!(_24.fld5);
_8 = _3;
_14.1 = _15.fld1.3;
_24.fld0.0 = _15.fld1.4;
_24.fld2.0 = 4_usize as u32;
_24.fld2 = (_15.fld1.4, _15.fld2.fld1.1, _15.fld2.fld1.1);
Goto(bb9)
}
bb9 = {
_27.2 = (_24.fld3,);
_24.fld1.fld1.fld1 = _18.fld1 * _18.fld1;
_29 = Adt51 { fld0: _24.fld1.fld1.fld0,fld1: _18.fld1,fld2: _18.fld2 };
_15.fld2.fld4 = 18145_i16 & (-28104_i16);
_24.fld4 = _15.fld1.0.0 as i16;
_24.fld0.0 = !_24.fld2.0;
_27.0 = (_15.fld1.0.0, _15.fld2.fld0);
_27.3 = _15.fld1.1 as f32;
_24.fld4 = _15.fld2.fld4;
_24.fld0.0 = _8 as u32;
Goto(bb10)
}
bb10 = {
_15.fld2.fld1.1 = !_24.fld2.1;
_29.fld0 = [_24.fld3,_15.fld1.4,_24.fld2.0,_15.fld2.fld1.0,_15.fld2.fld1.0,_24.fld3,_15.fld1.2.0,_15.fld1.4];
_25 = -_15.fld1.1;
_15.fld5 = _15.fld2.fld1.1;
_1 = _4;
_15.fld2.fld7 = core::ptr::addr_of!(_14);
_15.fld2.fld1.0 = _24.fld2.0 * _15.fld1.2.0;
_15.fld2.fld5 = _14.1 * _14.1;
_28 = _15.fld2.fld5;
_24.fld0.0 = _18.fld2 as u32;
Call(_24.fld2 = fn5(_15.fld5, _19, _19.fld1.fld1, _15.fld1, _27.0.1, _6), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Goto(bb12)
}
bb12 = {
_6 = _3 >> _4;
RET = [_15.fld1.0.0,_27.0.0,_15.fld1.0.0,_27.0.0];
_27.0 = (_15.fld1.0.0, _20.1);
_15.fld2.fld4 = _24.fld4 + _24.fld4;
_32.0 = _15.fld1.0.0 ^ _15.fld1.0.0;
_27.1 = 15522811246615561578_usize as isize;
Goto(bb13)
}
bb13 = {
_19 = Adt56 { fld0: _5,fld1: _24.fld1.fld1 };
_33.3 = 2152343417789838881_usize;
_15.fld5 = _5 as u8;
_27 = (_15.fld1.0, _15.fld1.1, _24.fld0, _15.fld2.fld5, _15.fld2.fld1.0);
_24.fld1.fld1 = Adt51 { fld0: _19.fld1.fld0,fld1: _29.fld1,fld2: _19.fld1.fld2 };
_24.fld1.fld1.fld1 = _15.fld2.fld0 as i8;
_27.3 = (-1621561754_i32) as f32;
_6 = _21 as u128;
_24.fld1.fld0 = _9 ^ _5;
_29 = _24.fld1.fld1;
_29.fld1 = _6 as i8;
_5 = _15.fld1.0.1 < _12;
_14.0 = _27.0.1;
_33.1 = _15.fld2.fld1.0 as i128;
_29.fld1 = -_18.fld1;
_37 = _21 as u128;
_19.fld1 = _24.fld1.fld1;
_4 = _37;
_15.fld2.fld5 = _1 as f32;
_29.fld1 = _18.fld1;
Call(_24.fld0 = fn6(_10, _15.fld1.2, _15.fld2.fld2, _19.fld1.fld0, _21, _22.fld1, _29.fld0, _29, _9, _22.fld0, _11, _10, _24.fld3), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_30.1 = _20.1 + _20.1;
_33.0 = _15.fld1.0.1 as i8;
_36 = _15.fld3;
_15.fld2.fld0 = -_12;
_15.fld1.1 = _33.1 as isize;
_22.fld1 = [(-372923108_i32),(-1712960333_i32),(-2055162195_i32),28179848_i32];
_15.fld2.fld1 = (_24.fld0.0, _15.fld5, _24.fld2.2);
_35 = _14.1;
_40 = _30.1 - _30.1;
_19.fld1 = Adt51 { fld0: _29.fld0,fld1: _18.fld1,fld2: _22.fld0 };
_18.fld2 = 7550696751859500657_i64 as u64;
_27.0 = (_33.1, _40);
RET = [_32.0,_27.0.0,_27.0.0,_27.0.0];
_35 = (-980908852639318541_i64) as f32;
_20 = (_27.0.0, _40);
RET = [_27.0.0,_20.0,_33.1,_32.0];
_17 = _28;
_24.fld1.fld1.fld1 = _27.2.0 as i8;
_15.fld2.fld7 = core::ptr::addr_of!(_14);
_16 = _22.fld1;
_32.2 = 1541823002_i32;
_23 = [_4,_10,_3,_1,_11,_1,_10,_37];
_27.0.1 = -_20.1;
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(1_usize, 1_usize, Move(_1), 16_usize, Move(_16), 21_usize, Move(_21), 25_usize, Move(_25)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(1_usize, 5_usize, Move(_5), 8_usize, Move(_8), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(1_usize, 37_usize, Move(_37), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: u128,mut _2: bool) -> [i128; 4] {
mir! {
type RET = [i128; 4];
let _3: [u16; 4];
let _4: *mut i16;
let _5: bool;
let _6: *mut u8;
let _7: isize;
let _8: f32;
let _9: Adt61;
let _10: Adt62;
let _11: bool;
let _12: Adt60;
let _13: i32;
let _14: Adt49;
let _15: (i128, i128, i32);
let _16: char;
let _17: Adt51;
let _18: char;
let _19: [usize; 1];
let _20: isize;
let _21: i8;
let _22: *const (i128, f64);
let _23: u8;
let _24: *mut i16;
let _25: ((i128, f64), isize, (u32,), f32, u32);
let _26: Adt65;
let _27: u128;
let _28: f32;
let _29: (i8, i128, *mut u8, usize);
let _30: [i128; 6];
let _31: isize;
let _32: [isize; 7];
let _33: Adt61;
let _34: ((i8, (i128, i128, i32), u128, i16),);
let _35: ();
let _36: ();
{
RET = [(-90871432854453091213785157707677664949_i128),6809418194903620520108514657149372237_i128,(-165304561749244195847768312652314570942_i128),(-111370345021047566451736336262907329798_i128)];
RET = [152487924106700165823390678228504972455_i128,(-17259819475284652758467927568838907186_i128),143459119008700928773589411088904176961_i128,(-1192008394802735159663629422610839142_i128)];
_3 = [52822_u16,31241_u16,2460_u16,41998_u16];
_1 = !45739766062421079934976512120056885319_u128;
RET = [87081887882188128257267619298673633958_i128,82551403425288539035095247718866064380_i128,25878656066525572748433007433088173785_i128,114049668625400131957818427394496302238_i128];
_1 = !132149719613116831817620218591876136434_u128;
_2 = true;
_3 = [34704_u16,44366_u16,12364_u16,24737_u16];
_5 = !_2;
_1 = 301047939100165733677197326649064548047_u128;
_1 = !176556242243630146373769277982889230999_u128;
_3 = [53398_u16,20092_u16,16210_u16,30577_u16];
_10.fld1 = 56014_u16 as f32;
_10.fld2 = 3546966596_u32 ^ 2082857184_u32;
_12.fld3.fld1.fld1 = (-9_i8) ^ 122_i8;
_13 = !1697530087_i32;
_10.fld0 = (_10.fld2,);
_12.fld3.fld1.fld1 = -32_i8;
Goto(bb1)
}
bb1 = {
_12.fld3.fld1.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2,_10.fld2,_10.fld0.0];
_5 = _10.fld0.0 <= _10.fld0.0;
_10.fld0.0 = 66939267985448997296046397315933956816_i128 as u32;
Goto(bb2)
}
bb2 = {
_12.fld3.fld1.fld0 = [_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2];
_3 = [31624_u16,65116_u16,32972_u16,35439_u16];
_10.fld2 = _10.fld0.0 >> _12.fld3.fld1.fld1;
RET = [(-40915474009169568881945232152286823760_i128),25576528695868974866946892621440080115_i128,119601470298480732711531991277125099494_i128,(-104818224739926401902965838704465959607_i128)];
_12.fld1 = [1_usize];
_7 = 9223372036854775807_isize;
_14.fld6.2 = 65063_u16 * 38944_u16;
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
Goto(bb3)
}
bb3 = {
_8 = _1 as f32;
_12.fld3.fld1.fld2 = !14210466160930892564_u64;
_9.fld0 = -_13;
_17.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_14.fld6 = (2257393682960803159_i64, _10.fld1, 15759_u16);
_9.fld0 = _13;
_16 = '\u{6711a}';
_11 = _5;
_2 = _5 >= _11;
_10.fld0 = (_10.fld2,);
_19 = [4_usize];
_14.fld6.0 = !1010142743723864784_i64;
_12.fld0 = [_14.fld6.2,_14.fld6.2,_14.fld6.2,_14.fld6.2];
_17 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _12.fld3.fld1.fld1,fld2: _12.fld3.fld1.fld2 };
_9.fld1 = [106690291876434375245552256490463317117_i128,(-55277050880394391053568771717844682288_i128),(-83400099907435560220268003939808604784_i128),124531607279422545658769088519688948198_i128];
_12.fld1 = [7_usize];
_14.fld6.1 = -_8;
Goto(bb4)
}
bb4 = {
_14.fld3 = _17.fld2;
_22 = core::ptr::addr_of!(_25.0);
_10.fld2 = _10.fld0.0;
_25.3 = -_14.fld6.1;
_14.fld5 = core::ptr::addr_of_mut!(_23);
_12.fld3.fld1.fld1 = _17.fld1;
_14.fld6.1 = _8 / f32::NAN;
_14.fld0 = [_14.fld6.2,_14.fld6.2,_14.fld6.2,_14.fld6.2];
_26.fld0.0 = _17.fld1;
_14.fld6.0 = 5511630391144434666_i64 << _12.fld3.fld1.fld2;
_25.3 = _13 as f32;
_26.fld4.fld2.fld5 = 27886546047735444872165207673913623683_i128 as f32;
_26.fld4.fld4 = core::ptr::addr_of!(_14.fld6.0);
_15 = (71668028801525638040562384743807268531_i128, 33648470840266482114563484685451687593_i128, _13);
_25.0.0 = _15.1;
_25.1 = _14.fld6.2 as isize;
_12.fld3 = Adt56 { fld0: _11,fld1: _17 };
_14.fld6 = ((-3808724993027819607_i64), _10.fld1, 22057_u16);
_26.fld4.fld4 = core::ptr::addr_of!(_14.fld6.0);
_26.fld3.fld3 = _26.fld4.fld4;
_15.2 = _13 + _9.fld0;
_20 = _25.1 * _25.1;
_26.fld0.2 = core::ptr::addr_of_mut!(_26.fld4.fld2.fld1.1);
_19 = [4_usize];
_9.fld1 = [_25.0.0,_15.1,_15.0,(*_22).0];
_26.fld0.3 = 7_usize - 10788182360792248519_usize;
match _15.1 {
0 => bb5,
1 => bb6,
33648470840266482114563484685451687593 => bb8,
_ => bb7
}
}
bb5 = {
_8 = _1 as f32;
_12.fld3.fld1.fld2 = !14210466160930892564_u64;
_9.fld0 = -_13;
_17.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_14.fld6 = (2257393682960803159_i64, _10.fld1, 15759_u16);
_9.fld0 = _13;
_16 = '\u{6711a}';
_11 = _5;
_2 = _5 >= _11;
_10.fld0 = (_10.fld2,);
_19 = [4_usize];
_14.fld6.0 = !1010142743723864784_i64;
_12.fld0 = [_14.fld6.2,_14.fld6.2,_14.fld6.2,_14.fld6.2];
_17 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _12.fld3.fld1.fld1,fld2: _12.fld3.fld1.fld2 };
_9.fld1 = [106690291876434375245552256490463317117_i128,(-55277050880394391053568771717844682288_i128),(-83400099907435560220268003939808604784_i128),124531607279422545658769088519688948198_i128];
_12.fld1 = [7_usize];
_14.fld6.1 = -_8;
Goto(bb4)
}
bb6 = {
_12.fld3.fld1.fld0 = [_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2];
_3 = [31624_u16,65116_u16,32972_u16,35439_u16];
_10.fld2 = _10.fld0.0 >> _12.fld3.fld1.fld1;
RET = [(-40915474009169568881945232152286823760_i128),25576528695868974866946892621440080115_i128,119601470298480732711531991277125099494_i128,(-104818224739926401902965838704465959607_i128)];
_12.fld1 = [1_usize];
_7 = 9223372036854775807_isize;
_14.fld6.2 = 65063_u16 * 38944_u16;
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
Goto(bb3)
}
bb7 = {
_12.fld3.fld1.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2,_10.fld2,_10.fld0.0];
_5 = _10.fld0.0 <= _10.fld0.0;
_10.fld0.0 = 66939267985448997296046397315933956816_i128 as u32;
Goto(bb2)
}
bb8 = {
_14.fld6 = (6270390128155374574_i64, _25.3, 22253_u16);
_9.fld2 = _14.fld6.2 as u32;
_25.4 = _9.fld2;
_26.fld4.fld2.fld1.1 = !115_u8;
_25.0.1 = _12.fld3.fld1.fld2 as f64;
match _14.fld6.0 {
0 => bb3,
1 => bb9,
2 => bb10,
6270390128155374574 => bb12,
_ => bb11
}
}
bb9 = {
_8 = _1 as f32;
_12.fld3.fld1.fld2 = !14210466160930892564_u64;
_9.fld0 = -_13;
_17.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_14.fld6 = (2257393682960803159_i64, _10.fld1, 15759_u16);
_9.fld0 = _13;
_16 = '\u{6711a}';
_11 = _5;
_2 = _5 >= _11;
_10.fld0 = (_10.fld2,);
_19 = [4_usize];
_14.fld6.0 = !1010142743723864784_i64;
_12.fld0 = [_14.fld6.2,_14.fld6.2,_14.fld6.2,_14.fld6.2];
_17 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _12.fld3.fld1.fld1,fld2: _12.fld3.fld1.fld2 };
_9.fld1 = [106690291876434375245552256490463317117_i128,(-55277050880394391053568771717844682288_i128),(-83400099907435560220268003939808604784_i128),124531607279422545658769088519688948198_i128];
_12.fld1 = [7_usize];
_14.fld6.1 = -_8;
Goto(bb4)
}
bb10 = {
_12.fld3.fld1.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2,_10.fld2,_10.fld0.0];
_5 = _10.fld0.0 <= _10.fld0.0;
_10.fld0.0 = 66939267985448997296046397315933956816_i128 as u32;
Goto(bb2)
}
bb11 = {
_8 = _1 as f32;
_12.fld3.fld1.fld2 = !14210466160930892564_u64;
_9.fld0 = -_13;
_17.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_14.fld6 = (2257393682960803159_i64, _10.fld1, 15759_u16);
_9.fld0 = _13;
_16 = '\u{6711a}';
_11 = _5;
_2 = _5 >= _11;
_10.fld0 = (_10.fld2,);
_19 = [4_usize];
_14.fld6.0 = !1010142743723864784_i64;
_12.fld0 = [_14.fld6.2,_14.fld6.2,_14.fld6.2,_14.fld6.2];
_17 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _12.fld3.fld1.fld1,fld2: _12.fld3.fld1.fld2 };
_9.fld1 = [106690291876434375245552256490463317117_i128,(-55277050880394391053568771717844682288_i128),(-83400099907435560220268003939808604784_i128),124531607279422545658769088519688948198_i128];
_12.fld1 = [7_usize];
_14.fld6.1 = -_8;
Goto(bb4)
}
bb12 = {
(*_22).1 = _25.1 as f64;
_12.fld3.fld1.fld0 = [_10.fld0.0,_25.4,_9.fld2,_9.fld2,_25.4,_10.fld2,_10.fld0.0,_10.fld2];
match (*_22).0 {
0 => bb11,
1 => bb9,
2 => bb8,
3 => bb13,
4 => bb14,
33648470840266482114563484685451687593 => bb16,
_ => bb15
}
}
bb13 = {
_12.fld3.fld1.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld0.0,_10.fld2,_10.fld2,_10.fld2,_10.fld0.0];
_5 = _10.fld0.0 <= _10.fld0.0;
_10.fld0.0 = 66939267985448997296046397315933956816_i128 as u32;
Goto(bb2)
}
bb14 = {
_14.fld6 = (6270390128155374574_i64, _25.3, 22253_u16);
_9.fld2 = _14.fld6.2 as u32;
_25.4 = _9.fld2;
_26.fld4.fld2.fld1.1 = !115_u8;
_25.0.1 = _12.fld3.fld1.fld2 as f64;
match _14.fld6.0 {
0 => bb3,
1 => bb9,
2 => bb10,
6270390128155374574 => bb12,
_ => bb11
}
}
bb15 = {
_8 = _1 as f32;
_12.fld3.fld1.fld2 = !14210466160930892564_u64;
_9.fld0 = -_13;
_17.fld0 = [_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2,_10.fld2];
_14.fld1 = core::ptr::addr_of_mut!(_12.fld2);
_14.fld6 = (2257393682960803159_i64, _10.fld1, 15759_u16);
_9.fld0 = _13;
_16 = '\u{6711a}';
_11 = _5;
_2 = _5 >= _11;
_10.fld0 = (_10.fld2,);
_19 = [4_usize];
_14.fld6.0 = !1010142743723864784_i64;
_12.fld0 = [_14.fld6.2,_14.fld6.2,_14.fld6.2,_14.fld6.2];
_17 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _12.fld3.fld1.fld1,fld2: _12.fld3.fld1.fld2 };
_9.fld1 = [106690291876434375245552256490463317117_i128,(-55277050880394391053568771717844682288_i128),(-83400099907435560220268003939808604784_i128),124531607279422545658769088519688948198_i128];
_12.fld1 = [7_usize];
_14.fld6.1 = -_8;
Goto(bb4)
}
bb16 = {
_24 = core::ptr::addr_of_mut!(_26.fld4.fld2.fld4);
_31 = _20;
_12.fld3.fld1 = Adt51 { fld0: _17.fld0,fld1: _26.fld0.0,fld2: _14.fld3 };
_26.fld4.fld1.4 = !_9.fld2;
_9.fld3 = [_14.fld6.2,_14.fld6.2];
_12.fld3 = Adt56 { fld0: _5,fld1: _17 };
_26.fld3.fld4.1 = (_15.0, _25.0.0, _13);
_26.fld3.fld0 = _9.fld2;
_26.fld4.fld0 = core::ptr::addr_of!(_34);
(*_24) = -16187_i16;
_15 = ((*_22).0, _25.0.0, _13);
Goto(bb17)
}
bb17 = {
Call(_35 = dump_var(2_usize, 5_usize, Move(_5), 20_usize, Move(_20), 7_usize, Move(_7), 15_usize, Move(_15)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(2_usize, 13_usize, Move(_13), 11_usize, Move(_11), 36_usize, _36, 36_usize, _36), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: u128,mut _2: f64,mut _3: i8,mut _4: i8,mut _5: u128,mut _6: *const (f64, f32),mut _7: f64,mut _8: u128,mut _9: (f64, f32),mut _10: f64,mut _11: Adt51,mut _12: i8) -> f64 {
mir! {
type RET = f64;
let _13: *mut i16;
let _14: Adt62;
let _15: (i8, i128, *mut u8, usize);
let _16: Adt50;
let _17: i8;
let _18: ((i8, (i128, i128, i32), u128, i16),);
let _19: u16;
let _20: [i128; 4];
let _21: u128;
let _22: isize;
let _23: *const (f64, f32);
let _24: Adt52;
let _25: (i128, i128, i32);
let _26: u32;
let _27: [u32; 8];
let _28: (u32, u8, u8);
let _29: ((i8, (i128, i128, i32), u128, i16), usize);
let _30: Adt65;
let _31: bool;
let _32: i64;
let _33: [isize; 7];
let _34: Adt50;
let _35: isize;
let _36: u128;
let _37: i32;
let _38: ();
let _39: ();
{
_11.fld2 = !17299995370546624307_u64;
_9 = (*_6);
_11.fld1 = _3 & _4;
(*_6).1 = _9.1;
(*_6).1 = -_9.1;
_9 = (_2, (*_6).1);
_9 = (_7, (*_6).1);
_10 = (*_6).0 / f64::NAN;
(*_6) = _9;
_14.fld0.0 = 3279825163_u32 & 1639305464_u32;
RET = (*_6).1 as f64;
_14.fld0 = (3967782830_u32,);
_6 = core::ptr::addr_of!((*_6));
RET = -_2;
(*_6).1 = _9.1 / (-0.000000000000000000000000000000000000007416716841861318_f32);
_9.0 = _2 * (*_6).0;
RET = (*_6).0 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000058097287299633_f64);
Goto(bb1)
}
bb1 = {
_9.0 = _14.fld0.0 as f64;
(*_6).1 = _9.1 - _9.1;
_16.fld4 = 14343_i16;
_1 = _5;
_4 = -_11.fld1;
_16.fld2 = [12984757980463687215_usize];
_9.1 = -(*_6).1;
_15.1 = -45849349450771860166231234135841182565_i128;
_16.fld1.2 = 216_u8;
RET = _9.0;
_8 = !_5;
(*_6) = (_9.0, _9.1);
_9 = (*_6);
RET = (*_6).0;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11.fld0 = [_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0];
(*_6) = (_2, _9.1);
_8 = _15.1 as u128;
_16.fld0 = _10;
_11.fld2 = 17278097668525104168_u64 | 17533034872315616747_u64;
_15.0 = (-605093503_i32) as i8;
_16.fld7 = core::ptr::addr_of!((*_6));
_18.0.2 = _1;
_16.fld6 = core::ptr::addr_of_mut!(_16.fld1.1);
_15.2 = core::ptr::addr_of_mut!(_16.fld1.2);
_18.0.1.1 = _16.fld1.2 as i128;
_17 = (*_6).1 as i8;
_12 = -_3;
_16.fld4 = -10448_i16;
RET = -_9.0;
_2 = -_16.fld0;
_16.fld1 = (_14.fld0.0, 126_u8, 216_u8);
match _16.fld1.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
126 => bb9,
_ => bb8
}
}
bb3 = {
_9.0 = _14.fld0.0 as f64;
(*_6).1 = _9.1 - _9.1;
_16.fld4 = 14343_i16;
_1 = _5;
_4 = -_11.fld1;
_16.fld2 = [12984757980463687215_usize];
_9.1 = -(*_6).1;
_15.1 = -45849349450771860166231234135841182565_i128;
_16.fld1.2 = 216_u8;
RET = _9.0;
_8 = !_5;
(*_6) = (_9.0, _9.1);
_9 = (*_6);
RET = (*_6).0;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = _7 / f64::NEG_INFINITY;
RET = (*_6).0 + _2;
_15.1 = _18.0.1.1 | _18.0.1.1;
_14.fld1 = _9.1 * _9.1;
_18.0.3 = !_16.fld4;
_16.fld1 = (_14.fld0.0, 21_u8, 20_u8);
_15.3 = 7_usize % 1103624898361220596_usize;
_16.fld2 = [_15.3];
Call(_22 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_13 = core::ptr::addr_of_mut!(_18.0.3);
_26 = _14.fld0.0 + _14.fld0.0;
_16.fld5 = -_9.1;
_16.fld6 = _15.2;
_16.fld1.1 = !_16.fld1.2;
match _16.fld1.0 {
3967782830 => bb11,
_ => bb5
}
}
bb11 = {
(*_6).0 = -_10;
_18.0.1 = (_15.1, _15.1, (-272388550_i32));
_11.fld2 = 4943525280577099705_u64;
_29.0.0 = -_4;
_9 = (_16.fld0, (*_6).1);
_27 = [_16.fld1.0,_14.fld0.0,_16.fld1.0,_26,_14.fld0.0,_14.fld0.0,_26,_14.fld0.0];
(*_6) = (_2, _16.fld5);
(*_6).0 = _10;
_29.0.1.0 = _18.0.1.1;
_2 = _7 + (*_6).0;
_18.0.1.1 = _18.0.1.0 << (*_13);
_18.0.3 = _16.fld4 >> _16.fld1.2;
RET = _10 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002363534623926655_f64);
_9.0 = _10;
_28.1 = !_16.fld1.1;
(*_13) = _16.fld4 * _16.fld4;
_28.1 = _16.fld1.2 * _16.fld1.2;
_20 = [_18.0.1.0,_29.0.1.0,_18.0.1.0,_29.0.1.0];
RET = _16.fld0;
Goto(bb12)
}
bb12 = {
_16.fld1.2 = _16.fld1.1;
_11 = Adt51 { fld0: _27,fld1: _3,fld2: 8140922652411814788_u64 };
_30.fld0.0 = !_11.fld1;
_30.fld0.3 = _15.3 & _15.3;
_16.fld3 = core::ptr::addr_of_mut!(_30.fld4.fld4);
_30.fld3.fld6 = ['\u{11bdc}'];
_29.0.3 = _11.fld2 as i16;
_30.fld4.fld2.fld1.0 = _16.fld1.0;
Call(_30.fld4.fld2.fld1.0 = fn4(_16, _3, _9.1, _14.fld1, _27, _1, _18.0.3, _16.fld5, _16.fld3, _3, _1, (*_6).1, _18.0.1.2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_9.1 = _14.fld1 + _14.fld1;
_30.fld3.fld4.1.0 = _18.0.1.1 ^ _29.0.1.0;
_16.fld4 = _29.0.3 * _29.0.3;
_30.fld4.fld2.fld6 = core::ptr::addr_of_mut!(_30.fld4.fld5);
_30.fld3.fld4.1.2 = -_18.0.1.2;
_23 = core::ptr::addr_of!(_9);
_30.fld0.3 = !_15.3;
_30.fld3.fld4.3 = _26 as i16;
(*_6) = ((*_23).0, _9.1);
_22 = -(-9223372036854775808_isize);
_15 = (_3, _18.0.1.1, _16.fld6, _30.fld0.3);
_30.fld1 = core::ptr::addr_of_mut!(_30.fld4.fld2.fld1.1);
_5 = _1;
_16.fld3 = core::ptr::addr_of_mut!(_30.fld4.fld4);
RET = (*_6).0 + _2;
_30.fld2 = [_18.0.2,_1,_1,_5,_1,_5,_1,_18.0.2];
_30.fld0.2 = _15.2;
_30.fld4.fld4 = core::ptr::addr_of!(_32);
_30.fld4.fld2.fld0 = -(*_6).0;
_14.fld0 = (_30.fld4.fld2.fld1.0,);
_34 = _16;
_34.fld3 = core::ptr::addr_of_mut!(_30.fld3.fld3);
match _18.0.1.2 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
340282366920938463463374607431495822906 => bb20,
_ => bb19
}
}
bb14 = {
_16.fld1.2 = _16.fld1.1;
_11 = Adt51 { fld0: _27,fld1: _3,fld2: 8140922652411814788_u64 };
_30.fld0.0 = !_11.fld1;
_30.fld0.3 = _15.3 & _15.3;
_16.fld3 = core::ptr::addr_of_mut!(_30.fld4.fld4);
_30.fld3.fld6 = ['\u{11bdc}'];
_29.0.3 = _11.fld2 as i16;
_30.fld4.fld2.fld1.0 = _16.fld1.0;
Call(_30.fld4.fld2.fld1.0 = fn4(_16, _3, _9.1, _14.fld1, _27, _1, _18.0.3, _16.fld5, _16.fld3, _3, _1, (*_6).1, _18.0.1.2), ReturnTo(bb13), UnwindUnreachable())
}
bb15 = {
_9.0 = _14.fld0.0 as f64;
(*_6).1 = _9.1 - _9.1;
_16.fld4 = 14343_i16;
_1 = _5;
_4 = -_11.fld1;
_16.fld2 = [12984757980463687215_usize];
_9.1 = -(*_6).1;
_15.1 = -45849349450771860166231234135841182565_i128;
_16.fld1.2 = 216_u8;
RET = _9.0;
_8 = !_5;
(*_6) = (_9.0, _9.1);
_9 = (*_6);
RET = (*_6).0;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_11.fld0 = [_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0,_14.fld0.0];
(*_6) = (_2, _9.1);
_8 = _15.1 as u128;
_16.fld0 = _10;
_11.fld2 = 17278097668525104168_u64 | 17533034872315616747_u64;
_15.0 = (-605093503_i32) as i8;
_16.fld7 = core::ptr::addr_of!((*_6));
_18.0.2 = _1;
_16.fld6 = core::ptr::addr_of_mut!(_16.fld1.1);
_15.2 = core::ptr::addr_of_mut!(_16.fld1.2);
_18.0.1.1 = _16.fld1.2 as i128;
_17 = (*_6).1 as i8;
_12 = -_3;
_16.fld4 = -10448_i16;
RET = -_9.0;
_2 = -_16.fld0;
_16.fld1 = (_14.fld0.0, 126_u8, 216_u8);
match _16.fld1.1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
126 => bb9,
_ => bb8
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
_16.fld2 = [_15.3];
_29.0.3 = !_18.0.3;
_17 = _4;
_16.fld1.2 = !_28.1;
_30.fld3.fld4.1 = (_29.0.1.0, _29.0.1.0, _18.0.1.2);
_30.fld4.fld0 = core::ptr::addr_of!(_18);
_30.fld4.fld4 = core::ptr::addr_of!(_32);
_18.0.1.2 = true as i32;
_16.fld5 = 8857153212946675899_i64 as f32;
_9 = (_2, _14.fld1);
_4 = _29.0.0 >> _34.fld4;
_29.0.1.2 = _30.fld3.fld4.1.2 * _30.fld3.fld4.1.2;
_30.fld4.fld1.0.0 = _29.0.1.0 & _18.0.1.0;
(*_6) = (_16.fld0, _14.fld1);
_21 = _1 - _5;
_30.fld4.fld1.4 = _26;
_30.fld4.fld1.2.0 = !_34.fld1.0;
_30.fld4.fld1.3 = -_14.fld1;
_37 = -_29.0.1.2;
_13 = core::ptr::addr_of_mut!(_16.fld4);
_19 = false as u16;
_27 = [_14.fld0.0,_30.fld4.fld2.fld1.0,_30.fld4.fld2.fld1.0,_30.fld4.fld1.2.0,_14.fld0.0,_30.fld4.fld2.fld1.0,_30.fld4.fld2.fld1.0,_30.fld4.fld2.fld1.0];
_16.fld4 = _34.fld4 & _34.fld4;
Goto(bb21)
}
bb21 = {
Call(_38 = dump_var(3_usize, 17_usize, Move(_17), 4_usize, Move(_4), 26_usize, Move(_26), 12_usize, Move(_12)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_38 = dump_var(3_usize, 21_usize, Move(_21), 5_usize, Move(_5), 19_usize, Move(_19), 39_usize, _39), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: Adt50,mut _2: i8,mut _3: f32,mut _4: f32,mut _5: [u32; 8],mut _6: u128,mut _7: i16,mut _8: f32,mut _9: *mut *const i64,mut _10: i8,mut _11: u128,mut _12: f32,mut _13: i32) -> u32 {
mir! {
type RET = u32;
let _14: Adt55;
let _15: (i128, f64);
let _16: Adt57;
let _17: ((i8, (i128, i128, i32), u128, i16),);
let _18: [i128; 6];
let _19: char;
let _20: Adt64;
let _21: (i8, i128, *mut u8, usize);
let _22: [i32; 4];
let _23: i64;
let _24: *mut i16;
let _25: f32;
let _26: [isize; 7];
let _27: char;
let _28: isize;
let _29: bool;
let _30: i8;
let _31: *mut *const i64;
let _32: Adt50;
let _33: *const (i128, f64);
let _34: Adt65;
let _35: i32;
let _36: *mut i16;
let _37: ();
let _38: ();
{
_14.fld6 = ['\u{f1956}'];
_14.fld2 = 6_usize - 3_usize;
_14.fld5 = [9223372036854775807_isize,(-9223372036854775808_isize),(-41_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_1.fld1.1 = _1.fld1.2;
_1.fld1.1 = !_1.fld1.2;
_1.fld6 = core::ptr::addr_of_mut!(_1.fld1.1);
_5 = [_1.fld1.0,_1.fld1.0,_1.fld1.0,_1.fld1.0,_1.fld1.0,_1.fld1.0,_1.fld1.0,_1.fld1.0];
_1.fld1.1 = _7 as u8;
_8 = _4;
_8 = _12;
_14.fld5 = [9223372036854775807_isize,(-44_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,21_isize,9223372036854775807_isize];
_8 = _4 * _1.fld5;
match _10 {
0 => bb1,
340282366920938463463374607431768211430 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_1.fld1.1 = _1.fld1.2 << _1.fld1.0;
_15.1 = -_1.fld0;
_7 = _1.fld4 << _13;
_15.0 = !51304481158016436889859181836123669049_i128;
_14.fld4.3 = -_7;
_14.fld4.1.2 = (-9223372036854775808_isize) as i32;
_17.0.3 = _7 >> _7;
_14.fld4.0 = _2;
_17.0.1.1 = _15.0;
_17.0.2 = !_6;
_17.0.0 = _6 as i8;
_17.0.1.0 = !_15.0;
_17.0.1.1 = false as i128;
_14.fld0 = _1.fld1.0 | _1.fld1.0;
_14.fld0 = _14.fld2 as u32;
_18 = [_15.0,_17.0.1.1,_15.0,_17.0.1.1,_17.0.1.1,_15.0];
_14.fld6 = ['\u{ff408}'];
_7 = _17.0.3 + _1.fld4;
_20.fld1.fld1.fld1 = 5557276610744936675_i64 as i8;
_20.fld1.fld1.fld1 = _10;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _2,fld2: 2827442912018898830_u64 };
RET = _20.fld1.fld1.fld1 as u32;
_16.fld0 = _1.fld0 as u64;
_14.fld4.2 = _11;
_1.fld3 = core::ptr::addr_of_mut!((*_9));
_1.fld0 = _15.1;
_1.fld0 = _15.1 - _15.1;
_15.1 = _1.fld0 * _1.fld0;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _10,fld2: _16.fld0 };
_1.fld1.2 = _14.fld2 as u8;
Goto(bb4)
}
bb4 = {
_20.fld0 = (_14.fld0,);
_12 = _17.0.3 as f32;
_1.fld4 = _17.0.3;
_17.0.2 = !_11;
_1.fld1.1 = _1.fld1.2 << _13;
_21.3 = _14.fld2;
_17.0.1.2 = _13 - _13;
_20.fld0 = (_1.fld1.0,);
_12 = -_8;
_14.fld4.1.0 = !_15.0;
_20.fld2.2 = _1.fld1.1;
_17.0.1 = (_14.fld4.1.0, _15.0, _13);
match _13 {
340282366920938463463374607431495822906 => bb6,
_ => bb5
}
}
bb5 = {
_1.fld1.1 = _1.fld1.2 << _1.fld1.0;
_15.1 = -_1.fld0;
_7 = _1.fld4 << _13;
_15.0 = !51304481158016436889859181836123669049_i128;
_14.fld4.3 = -_7;
_14.fld4.1.2 = (-9223372036854775808_isize) as i32;
_17.0.3 = _7 >> _7;
_14.fld4.0 = _2;
_17.0.1.1 = _15.0;
_17.0.2 = !_6;
_17.0.0 = _6 as i8;
_17.0.1.0 = !_15.0;
_17.0.1.1 = false as i128;
_14.fld0 = _1.fld1.0 | _1.fld1.0;
_14.fld0 = _14.fld2 as u32;
_18 = [_15.0,_17.0.1.1,_15.0,_17.0.1.1,_17.0.1.1,_15.0];
_14.fld6 = ['\u{ff408}'];
_7 = _17.0.3 + _1.fld4;
_20.fld1.fld1.fld1 = 5557276610744936675_i64 as i8;
_20.fld1.fld1.fld1 = _10;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _2,fld2: 2827442912018898830_u64 };
RET = _20.fld1.fld1.fld1 as u32;
_16.fld0 = _1.fld0 as u64;
_14.fld4.2 = _11;
_1.fld3 = core::ptr::addr_of_mut!((*_9));
_1.fld0 = _15.1;
_1.fld0 = _15.1 - _15.1;
_15.1 = _1.fld0 * _1.fld0;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _10,fld2: _16.fld0 };
_1.fld1.2 = _14.fld2 as u8;
Goto(bb4)
}
bb6 = {
_20.fld4 = _1.fld4;
_21.0 = '\u{ceb9e}' as i8;
_19 = '\u{2213e}';
_1.fld1.1 = _20.fld2.2;
_20.fld1.fld1.fld1 = _10;
_22 = [_13,_17.0.1.2,_14.fld4.1.2,_13];
_14.fld4.3 = _20.fld4 + _7;
_24 = core::ptr::addr_of_mut!(_20.fld4);
_13 = _17.0.1.2 | _17.0.1.2;
_21 = (_14.fld4.0, _15.0, _1.fld6, _14.fld2);
_20.fld3 = _20.fld0.0 + _14.fld0;
_20.fld3 = 41615_u16 as u32;
_20.fld2 = (_14.fld0, _1.fld1.1, _1.fld1.1);
_1.fld5 = -_4;
_9 = core::ptr::addr_of_mut!(_20.fld5);
_14.fld0 = _20.fld1.fld1.fld2 as u32;
_14.fld1 = core::ptr::addr_of!(_15.1);
_20.fld0.0 = !_14.fld0;
_1.fld1 = (_14.fld0, _20.fld2.2, _20.fld2.2);
match _2 {
0 => bb5,
1 => bb2,
2 => bb4,
3 => bb7,
4 => bb8,
340282366920938463463374607431768211430 => bb10,
_ => bb9
}
}
bb7 = {
Return()
}
bb8 = {
_20.fld0 = (_14.fld0,);
_12 = _17.0.3 as f32;
_1.fld4 = _17.0.3;
_17.0.2 = !_11;
_1.fld1.1 = _1.fld1.2 << _13;
_21.3 = _14.fld2;
_17.0.1.2 = _13 - _13;
_20.fld0 = (_1.fld1.0,);
_12 = -_8;
_14.fld4.1.0 = !_15.0;
_20.fld2.2 = _1.fld1.1;
_17.0.1 = (_14.fld4.1.0, _15.0, _13);
match _13 {
340282366920938463463374607431495822906 => bb6,
_ => bb5
}
}
bb9 = {
Return()
}
bb10 = {
_1.fld3 = core::ptr::addr_of_mut!((*_9));
_5 = [_20.fld0.0,_1.fld1.0,_20.fld2.0,_20.fld0.0,_20.fld0.0,_20.fld2.0,_14.fld0,_20.fld3];
_14.fld4.1.1 = _11 as i128;
_21.3 = _14.fld2 & _14.fld2;
(*_9) = core::ptr::addr_of!(_23);
_20.fld2.1 = !_1.fld1.2;
_27 = _19;
_17.0.2 = _11;
_17.0.1.1 = _14.fld4.1.0 & _21.1;
_29 = !true;
_16 = Adt57 { fld0: _20.fld1.fld1.fld2,fld1: _22 };
(*_9) = core::ptr::addr_of!(_23);
_17.0.1.1 = !_15.0;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _14.fld4.0,fld2: _16.fld0 };
_20.fld4 = _14.fld4.3 | _14.fld4.3;
_2 = _20.fld1.fld1.fld1;
_14.fld3 = core::ptr::addr_of!(_23);
match _17.0.1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
340282366920938463463374607431495822906 => bb11,
_ => bb6
}
}
bb11 = {
_16.fld1 = [_13,_13,_13,_17.0.1.2];
_14.fld6 = [_19];
_20.fld5 = core::ptr::addr_of!(_23);
_17.0 = (_21.0, _14.fld4.1, _6, (*_24));
_28 = 15_isize << (*_24);
_1.fld0 = _15.1;
_26 = [_28,_28,_28,_28,_28,_28,_28];
_32.fld3 = core::ptr::addr_of_mut!((*_9));
_21.3 = _14.fld2;
_27 = _19;
_20.fld3 = !_1.fld1.0;
_31 = core::ptr::addr_of_mut!(_20.fld5);
_5 = [_14.fld0,_20.fld3,_20.fld2.0,_20.fld0.0,_20.fld2.0,_1.fld1.0,_14.fld0,_20.fld0.0];
_1.fld0 = _1.fld1.1 as f64;
_1.fld1.2 = _20.fld2.2 % 222_u8;
_20.fld1.fld1.fld0 = [_20.fld3,_20.fld2.0,_20.fld0.0,_20.fld3,_20.fld2.0,_1.fld1.0,_20.fld2.0,_20.fld0.0];
(*_31) = core::ptr::addr_of!(_23);
_20.fld1.fld1.fld1 = !_21.0;
_26 = _14.fld5;
_32.fld1.0 = _29 as u32;
_7 = _20.fld4;
match _14.fld4.0 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
340282366920938463463374607431768211430 => bb20,
_ => bb19
}
}
bb12 = {
_1.fld3 = core::ptr::addr_of_mut!((*_9));
_5 = [_20.fld0.0,_1.fld1.0,_20.fld2.0,_20.fld0.0,_20.fld0.0,_20.fld2.0,_14.fld0,_20.fld3];
_14.fld4.1.1 = _11 as i128;
_21.3 = _14.fld2 & _14.fld2;
(*_9) = core::ptr::addr_of!(_23);
_20.fld2.1 = !_1.fld1.2;
_27 = _19;
_17.0.2 = _11;
_17.0.1.1 = _14.fld4.1.0 & _21.1;
_29 = !true;
_16 = Adt57 { fld0: _20.fld1.fld1.fld2,fld1: _22 };
(*_9) = core::ptr::addr_of!(_23);
_17.0.1.1 = !_15.0;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _14.fld4.0,fld2: _16.fld0 };
_20.fld4 = _14.fld4.3 | _14.fld4.3;
_2 = _20.fld1.fld1.fld1;
_14.fld3 = core::ptr::addr_of!(_23);
match _17.0.1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
340282366920938463463374607431495822906 => bb11,
_ => bb6
}
}
bb13 = {
Return()
}
bb14 = {
_20.fld0 = (_14.fld0,);
_12 = _17.0.3 as f32;
_1.fld4 = _17.0.3;
_17.0.2 = !_11;
_1.fld1.1 = _1.fld1.2 << _13;
_21.3 = _14.fld2;
_17.0.1.2 = _13 - _13;
_20.fld0 = (_1.fld1.0,);
_12 = -_8;
_14.fld4.1.0 = !_15.0;
_20.fld2.2 = _1.fld1.1;
_17.0.1 = (_14.fld4.1.0, _15.0, _13);
match _13 {
340282366920938463463374607431495822906 => bb6,
_ => bb5
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_1.fld1.1 = _1.fld1.2 << _1.fld1.0;
_15.1 = -_1.fld0;
_7 = _1.fld4 << _13;
_15.0 = !51304481158016436889859181836123669049_i128;
_14.fld4.3 = -_7;
_14.fld4.1.2 = (-9223372036854775808_isize) as i32;
_17.0.3 = _7 >> _7;
_14.fld4.0 = _2;
_17.0.1.1 = _15.0;
_17.0.2 = !_6;
_17.0.0 = _6 as i8;
_17.0.1.0 = !_15.0;
_17.0.1.1 = false as i128;
_14.fld0 = _1.fld1.0 | _1.fld1.0;
_14.fld0 = _14.fld2 as u32;
_18 = [_15.0,_17.0.1.1,_15.0,_17.0.1.1,_17.0.1.1,_15.0];
_14.fld6 = ['\u{ff408}'];
_7 = _17.0.3 + _1.fld4;
_20.fld1.fld1.fld1 = 5557276610744936675_i64 as i8;
_20.fld1.fld1.fld1 = _10;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _2,fld2: 2827442912018898830_u64 };
RET = _20.fld1.fld1.fld1 as u32;
_16.fld0 = _1.fld0 as u64;
_14.fld4.2 = _11;
_1.fld3 = core::ptr::addr_of_mut!((*_9));
_1.fld0 = _15.1;
_1.fld0 = _15.1 - _15.1;
_15.1 = _1.fld0 * _1.fld0;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _10,fld2: _16.fld0 };
_1.fld1.2 = _14.fld2 as u8;
Goto(bb4)
}
bb18 = {
Return()
}
bb19 = {
_1.fld1.1 = _1.fld1.2 << _1.fld1.0;
_15.1 = -_1.fld0;
_7 = _1.fld4 << _13;
_15.0 = !51304481158016436889859181836123669049_i128;
_14.fld4.3 = -_7;
_14.fld4.1.2 = (-9223372036854775808_isize) as i32;
_17.0.3 = _7 >> _7;
_14.fld4.0 = _2;
_17.0.1.1 = _15.0;
_17.0.2 = !_6;
_17.0.0 = _6 as i8;
_17.0.1.0 = !_15.0;
_17.0.1.1 = false as i128;
_14.fld0 = _1.fld1.0 | _1.fld1.0;
_14.fld0 = _14.fld2 as u32;
_18 = [_15.0,_17.0.1.1,_15.0,_17.0.1.1,_17.0.1.1,_15.0];
_14.fld6 = ['\u{ff408}'];
_7 = _17.0.3 + _1.fld4;
_20.fld1.fld1.fld1 = 5557276610744936675_i64 as i8;
_20.fld1.fld1.fld1 = _10;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _2,fld2: 2827442912018898830_u64 };
RET = _20.fld1.fld1.fld1 as u32;
_16.fld0 = _1.fld0 as u64;
_14.fld4.2 = _11;
_1.fld3 = core::ptr::addr_of_mut!((*_9));
_1.fld0 = _15.1;
_1.fld0 = _15.1 - _15.1;
_15.1 = _1.fld0 * _1.fld0;
_20.fld1.fld1 = Adt51 { fld0: _5,fld1: _10,fld2: _16.fld0 };
_1.fld1.2 = _14.fld2 as u8;
Goto(bb4)
}
bb20 = {
_16.fld1 = [_13,_13,_13,_13];
_18 = [_14.fld4.1.0,_17.0.1.0,_14.fld4.1.1,_21.1,_17.0.1.0,_17.0.1.0];
_1.fld4 = -(*_24);
_32.fld1.1 = 46570_u16 as u8;
_34.fld4.fld2.fld4 = _11 as i16;
_34.fld4.fld1.2.0 = _1.fld1.2 as u32;
_34.fld0 = (_21.0, _21.1, _1.fld6, _14.fld2);
(*_24) = !_1.fld4;
_34.fld3 = Move(_14);
_34.fld3.fld6 = [_19];
_34.fld3.fld4.1.1 = _16.fld0 as i128;
Goto(bb21)
}
bb21 = {
Call(_37 = dump_var(4_usize, 11_usize, Move(_11), 19_usize, Move(_19), 2_usize, Move(_2), 27_usize, Move(_27)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_37 = dump_var(4_usize, 29_usize, Move(_29), 5_usize, Move(_5), 18_usize, Move(_18), 38_usize, _38), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: u8,mut _2: Adt56,mut _3: i8,mut _4: ((i128, f64), isize, (u32,), f32, u32),mut _5: f64,mut _6: u128) -> (u32, u8, u8) {
mir! {
type RET = (u32, u8, u8);
let _7: *const (f64, f32);
let _8: (i128, i128, i32);
let _9: Adt60;
let _10: *const bool;
let _11: (i8, i128, *mut u8, usize);
let _12: Adt50;
let _13: Adt62;
let _14: [char; 1];
let _15: [i128; 6];
let _16: Adt59;
let _17: [u16; 4];
let _18: isize;
let _19: f32;
let _20: f32;
let _21: ();
let _22: ();
{
_1 = 49_u8;
RET.2 = !_1;
_3 = _2.fld1.fld1;
RET = (_4.2.0, _1, _1);
match _2.fld1.fld1 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768211430 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
RET = (_4.4, _1, _1);
RET.0 = _4.4 >> _3;
_4.2 = (_4.4,);
_4.4 = !_4.2.0;
RET.1 = _5 as u8;
RET = (_4.4, _1, _1);
_2.fld1.fld0 = [_4.4,_4.4,_4.4,_4.4,_4.4,_4.2.0,_4.4,_4.2.0];
_4.0.0 = 142410363712946978031394608925409554955_i128 * (-43589950767325843609167521159419737184_i128);
_4.0.1 = -_5;
RET.2 = _1 >> _2.fld1.fld1;
_4.2 = (_4.4,);
RET.0 = _4.2.0;
Goto(bb5)
}
bb5 = {
_3 = !_2.fld1.fld1;
RET.2 = _1;
RET.1 = _1 - _1;
_8 = (_4.0.0, _4.0.0, (-396381057_i32));
_9.fld3 = Adt56 { fld0: _2.fld0,fld1: _2.fld1 };
_2 = _9.fld3;
_5 = _4.0.1;
_4.4 = !_4.2.0;
Goto(bb6)
}
bb6 = {
_9.fld3 = Adt56 { fld0: _2.fld0,fld1: _2.fld1 };
RET = (_4.2.0, _1, _1);
_2 = _9.fld3;
_4.0.1 = -_5;
_9.fld3.fld1.fld0 = [_4.2.0,_4.2.0,_4.2.0,_4.2.0,_4.4,_4.4,_4.2.0,_4.4];
RET.2 = _6 as u8;
_11.3 = 4_usize;
_4.2.0 = !_4.4;
_8.2 = '\u{72404}' as i32;
_9.fld3.fld1 = Adt51 { fld0: _2.fld1.fld0,fld1: _2.fld1.fld1,fld2: _2.fld1.fld2 };
RET.2 = _1 * _1;
RET.2 = _1 ^ _1;
_11.0 = _11.3 as i8;
RET.1 = _1;
_12.fld0 = _5;
_12.fld4 = 7050_i16 * (-24001_i16);
_12.fld1 = (_4.2.0, _1, _1);
_12.fld3 = core::ptr::addr_of_mut!(_9.fld2);
_4.0 = (_8.0, _5);
_4.0.1 = _12.fld0;
_9.fld3.fld1.fld2 = _2.fld1.fld2;
match _1 {
0 => bb7,
1 => bb8,
2 => bb9,
49 => bb11,
_ => bb10
}
}
bb7 = {
Return()
}
bb8 = {
RET = (_4.4, _1, _1);
RET.0 = _4.4 >> _3;
_4.2 = (_4.4,);
_4.4 = !_4.2.0;
RET.1 = _5 as u8;
RET = (_4.4, _1, _1);
_2.fld1.fld0 = [_4.4,_4.4,_4.4,_4.4,_4.4,_4.2.0,_4.4,_4.2.0];
_4.0.0 = 142410363712946978031394608925409554955_i128 * (-43589950767325843609167521159419737184_i128);
_4.0.1 = -_5;
RET.2 = _1 >> _2.fld1.fld1;
_4.2 = (_4.4,);
RET.0 = _4.2.0;
Goto(bb5)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_5 = -_12.fld0;
_13.fld0.0 = !_12.fld1.0;
_5 = _12.fld0 - _4.0.1;
_14 = ['\u{dacba}'];
_9.fld3.fld1.fld1 = -_11.0;
_13.fld0.0 = _8.2 as u32;
_13 = Adt62 { fld0: _4.2,fld1: _4.3,fld2: _4.4 };
_11.3 = 3_usize % 7_usize;
Call(RET.1 = core::intrinsics::bswap(_12.fld1.2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_11.3 = _13.fld1 as usize;
_10 = core::ptr::addr_of!(_2.fld0);
_8.1 = _2.fld0 as i128;
_2.fld1.fld0 = _9.fld3.fld1.fld0;
_9.fld3.fld1.fld0 = _2.fld1.fld0;
_17 = [34455_u16,4946_u16,23785_u16,61907_u16];
_15 = [_8.0,_4.0.0,_8.0,_4.0.0,_8.0,_4.0.0];
_14 = ['\u{908ad}'];
match _2.fld1.fld1 {
340282366920938463463374607431768211430 => bb14,
_ => bb13
}
}
bb13 = {
Return()
}
bb14 = {
_13.fld2 = '\u{67113}' as u32;
_16.fld2.fld1 = _2.fld1;
_13.fld0 = _4.2;
Goto(bb15)
}
bb15 = {
Call(_21 = dump_var(5_usize, 1_usize, Move(_1), 15_usize, Move(_15), 6_usize, Move(_6), 22_usize, _22), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: u128,mut _2: (u32,),mut _3: [usize; 1],mut _4: [u32; 8],mut _5: char,mut _6: [i32; 4],mut _7: [u32; 8],mut _8: Adt51,mut _9: bool,mut _10: u64,mut _11: u128,mut _12: u128,mut _13: u32) -> (u32,) {
mir! {
type RET = (u32,);
let _14: (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _15: Adt65;
let _16: usize;
let _17: i16;
let _18: Adt58;
let _19: u16;
let _20: f32;
let _21: isize;
let _22: isize;
let _23: i32;
let _24: i32;
let _25: Adt57;
let _26: [u16; 4];
let _27: bool;
let _28: Adt60;
let _29: Adt52;
let _30: f32;
let _31: char;
let _32: f32;
let _33: Adt53;
let _34: i8;
let _35: isize;
let _36: f64;
let _37: [usize; 1];
let _38: ();
let _39: ();
{
RET.0 = _8.fld2 as u32;
_5 = '\u{e3f92}';
_2 = (_13,);
_6 = [(-1719898282_i32),975503209_i32,(-905551415_i32),795008802_i32];
_5 = '\u{af240}';
_4 = [_2.0,_13,_2.0,_13,_2.0,_13,_13,_2.0];
RET = (_2.0,);
_11 = !_12;
_2 = (_13,);
_2 = (_13,);
_8.fld2 = _10 + _10;
Goto(bb1)
}
bb1 = {
_8.fld1 = 111_i8;
_4 = [_13,_2.0,_13,_13,_2.0,_2.0,_2.0,_2.0];
_5 = '\u{85a23}';
_15.fld0.3 = !17309565656802362000_usize;
_15.fld1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.2);
_15.fld4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,26_isize,(-9223372036854775808_isize),82_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_14.3 = [57302_u16,48821_u16];
_18.fld0.0 = _8.fld1;
_18.fld0.2 = 180_u8 as u128;
Call(_14.2 = fn7(_9, _8, _10, _4, _6, _6, _8, _14.3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = [_2.0,_2.0,_2.0,_2.0,_13,_13,_13,_2.0];
_19 = 34447_u16;
_1 = _11;
_15.fld4.fld5 = 175_u8 >> _18.fld0.2;
_15.fld2 = [_18.fld0.2,_11,_18.fld0.2,_18.fld0.2,_11,_12,_18.fld0.2,_12];
_15.fld4.fld1.0 = ((-108933396690504839203189565522246044385_i128), _14.2.1.0);
_14.1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.1);
_16 = 234687500_i32 as usize;
_15.fld3.fld4.1.2 = _11 as i32;
_18.fld0.0 = _15.fld3.fld4.1.2 as i8;
_15.fld4.fld1.0 = (69900058163108719342570186051287366714_i128, _14.2.1.0);
_15.fld4.fld1.3 = _8.fld2 as f32;
_15.fld4.fld1.2.0 = _15.fld4.fld5 as u32;
_15.fld4.fld1.2 = _2;
_13 = _15.fld4.fld1.2.0 * _2.0;
_18.fld0.1.0 = -_15.fld4.fld1.0.0;
_15.fld4.fld1.1 = _14.2.0 | _14.2.0;
_13 = _2.0 + _2.0;
_11 = !_18.fld0.2;
_18.fld0.1 = (_15.fld4.fld1.0.0, _15.fld4.fld1.0.0, _15.fld3.fld4.1.2);
_15.fld3.fld4.1 = (_18.fld0.1.0, _18.fld0.1.1, _18.fld0.1.2);
_15.fld0.0 = -_8.fld1;
_18.fld0.3 = (-29684_i16);
_21 = _14.2.0 - _15.fld4.fld1.1;
_7 = _4;
_14.5 = _18.fld0.0;
Call(_15.fld0.1 = core::intrinsics::bswap(_18.fld0.1.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _2;
_17 = _18.fld0.3;
_5 = '\u{45502}';
_14.1 = core::ptr::addr_of_mut!(_15.fld4.fld5);
_18.fld0.1.0 = _18.fld0.1.1 * _15.fld3.fld4.1.0;
_15.fld3.fld5 = _15.fld4.fld3;
_15.fld4.fld2.fld1.0 = !_13;
_10 = !_8.fld2;
_23 = _21 as i32;
_14.4 = core::ptr::addr_of!(_14.2.1);
_15.fld3.fld2 = !_16;
_15.fld4.fld3 = _15.fld3.fld5;
_8.fld1 = _18.fld0.2 as i8;
_15.fld4.fld2.fld3 = core::ptr::addr_of_mut!(_15.fld3.fld3);
_24 = _15.fld3.fld4.1.2 ^ _23;
_15.fld4.fld2.fld4 = _18.fld0.3;
RET = (_15.fld4.fld2.fld1.0,);
_15.fld3.fld6 = [_5];
_5 = '\u{1cd01}';
_8.fld2 = _10;
_15.fld3.fld5 = [_21,_21,_15.fld4.fld1.1,_21,_21,_21,_15.fld4.fld1.1];
_15.fld3.fld4.1.0 = !_18.fld0.1.1;
_18.fld0.1 = _15.fld3.fld4.1;
_14.2.1 = (_15.fld4.fld1.0.1, _15.fld4.fld1.3);
_3 = [_15.fld3.fld2];
_15.fld3.fld4.2 = _1 / 156548751212624131618596222250554616091_u128;
_15.fld4.fld5 = !2_u8;
match _15.fld4.fld1.0.0 {
0 => bb2,
1 => bb4,
2 => bb5,
69900058163108719342570186051287366714 => bb7,
_ => bb6
}
}
bb4 = {
_7 = [_2.0,_2.0,_2.0,_2.0,_13,_13,_13,_2.0];
_19 = 34447_u16;
_1 = _11;
_15.fld4.fld5 = 175_u8 >> _18.fld0.2;
_15.fld2 = [_18.fld0.2,_11,_18.fld0.2,_18.fld0.2,_11,_12,_18.fld0.2,_12];
_15.fld4.fld1.0 = ((-108933396690504839203189565522246044385_i128), _14.2.1.0);
_14.1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.1);
_16 = 234687500_i32 as usize;
_15.fld3.fld4.1.2 = _11 as i32;
_18.fld0.0 = _15.fld3.fld4.1.2 as i8;
_15.fld4.fld1.0 = (69900058163108719342570186051287366714_i128, _14.2.1.0);
_15.fld4.fld1.3 = _8.fld2 as f32;
_15.fld4.fld1.2.0 = _15.fld4.fld5 as u32;
_15.fld4.fld1.2 = _2;
_13 = _15.fld4.fld1.2.0 * _2.0;
_18.fld0.1.0 = -_15.fld4.fld1.0.0;
_15.fld4.fld1.1 = _14.2.0 | _14.2.0;
_13 = _2.0 + _2.0;
_11 = !_18.fld0.2;
_18.fld0.1 = (_15.fld4.fld1.0.0, _15.fld4.fld1.0.0, _15.fld3.fld4.1.2);
_15.fld3.fld4.1 = (_18.fld0.1.0, _18.fld0.1.1, _18.fld0.1.2);
_15.fld0.0 = -_8.fld1;
_18.fld0.3 = (-29684_i16);
_21 = _14.2.0 - _15.fld4.fld1.1;
_7 = _4;
_14.5 = _18.fld0.0;
Call(_15.fld0.1 = core::intrinsics::bswap(_18.fld0.1.1), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_8.fld1 = 111_i8;
_4 = [_13,_2.0,_13,_13,_2.0,_2.0,_2.0,_2.0];
_5 = '\u{85a23}';
_15.fld0.3 = !17309565656802362000_usize;
_15.fld1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.2);
_15.fld4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,26_isize,(-9223372036854775808_isize),82_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_14.3 = [57302_u16,48821_u16];
_18.fld0.0 = _8.fld1;
_18.fld0.2 = 180_u8 as u128;
Call(_14.2 = fn7(_9, _8, _10, _4, _6, _6, _8, _14.3), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_25.fld0 = !_8.fld2;
_15.fld4.fld2.fld6 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.1);
_15.fld4.fld2.fld1.1 = !_15.fld4.fld5;
_15.fld0.2 = core::ptr::addr_of_mut!(_15.fld4.fld5);
_14.2.1.0 = _15.fld4.fld1.0.1;
_15.fld3.fld4.3 = _25.fld0 as i16;
_15.fld4.fld2.fld5 = -_14.2.1.1;
_12 = _1 | _15.fld3.fld4.2;
_14.1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.1);
_5 = '\u{edbff}';
_15.fld4.fld2.fld0 = _14.2.1.0;
_18.fld0.1.2 = _24;
_7 = _8.fld0;
_15.fld4.fld2.fld3 = core::ptr::addr_of_mut!(_28.fld2);
_4 = _7;
_15.fld4.fld1.4 = !_2.0;
_14.0 = _15.fld3.fld4.2 as i16;
_23 = _15.fld4.fld5 as i32;
_14.0 = _15.fld3.fld4.3;
Goto(bb8)
}
bb8 = {
_27 = _14.0 > _17;
_15.fld3.fld4.3 = _14.0 >> _25.fld0;
_15.fld3.fld5 = _15.fld4.fld3;
_28.fld3 = Adt56 { fld0: _27,fld1: _8 };
_18.fld0.3 = _15.fld3.fld4.3;
_15.fld0.1 = _15.fld3.fld4.1.1;
_27 = _28.fld3.fld0;
_28.fld3.fld1.fld1 = _18.fld0.0;
_15.fld3.fld1 = core::ptr::addr_of!(_15.fld4.fld1.0.1);
_16 = _2.0 as usize;
match _15.fld3.fld4.1.1 {
0 => bb9,
69900058163108719342570186051287366714 => bb11,
_ => bb10
}
}
bb9 = {
_8.fld1 = 111_i8;
_4 = [_13,_2.0,_13,_13,_2.0,_2.0,_2.0,_2.0];
_5 = '\u{85a23}';
_15.fld0.3 = !17309565656802362000_usize;
_15.fld1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.2);
_15.fld4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,26_isize,(-9223372036854775808_isize),82_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_14.3 = [57302_u16,48821_u16];
_18.fld0.0 = _8.fld1;
_18.fld0.2 = 180_u8 as u128;
Call(_14.2 = fn7(_9, _8, _10, _4, _6, _6, _8, _14.3), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_8.fld1 = 111_i8;
_4 = [_13,_2.0,_13,_13,_2.0,_2.0,_2.0,_2.0];
_5 = '\u{85a23}';
_15.fld0.3 = !17309565656802362000_usize;
_15.fld1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.2);
_15.fld4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,26_isize,(-9223372036854775808_isize),82_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_14.3 = [57302_u16,48821_u16];
_18.fld0.0 = _8.fld1;
_18.fld0.2 = 180_u8 as u128;
Call(_14.2 = fn7(_9, _8, _10, _4, _6, _6, _8, _14.3), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_29.fld0 = [_2.0,_15.fld4.fld1.4,_13,_15.fld4.fld2.fld1.0,_13,_15.fld4.fld1.2.0,_15.fld4.fld1.4,_2.0];
_29.fld3 = [_19,_19];
_2.0 = _15.fld4.fld1.2.0;
_15.fld3.fld4 = (_8.fld1, _18.fld0.1, _12, _14.0);
_15.fld3.fld4 = (_14.5, _18.fld0.1, _12, _15.fld4.fld2.fld4);
_31 = _5;
_33.fld2.fld5 = _15.fld4.fld2.fld5;
_25 = Adt57 { fld0: _28.fld3.fld1.fld2,fld1: _6 };
_33.fld1.0 = _15.fld4.fld1.0;
_15.fld4.fld1 = (_33.fld1.0, _21, _2, _33.fld2.fld5, _2.0);
_24 = -_23;
_15.fld4.fld1.0 = (_18.fld0.1.1, _33.fld1.0.1);
_15.fld4.fld5 = _15.fld3.fld4.0 as u8;
_27 = _28.fld3.fld0;
_33.fld2.fld3 = core::ptr::addr_of_mut!(_15.fld4.fld4);
_7 = [_13,_15.fld4.fld1.4,_15.fld4.fld2.fld1.0,_15.fld4.fld2.fld1.0,_15.fld4.fld1.4,_15.fld4.fld1.2.0,_13,_13];
_15.fld4.fld2.fld2 = [_16];
_15.fld3.fld0 = _28.fld3.fld0 as u32;
Goto(bb12)
}
bb12 = {
_33.fld2.fld7 = core::ptr::addr_of!(_14.2.1);
_15.fld4.fld1.3 = _15.fld4.fld2.fld5 + _15.fld4.fld2.fld5;
_20 = -_15.fld4.fld1.3;
_1 = _18.fld0.2;
_18 = Adt58 { fld0: _15.fld3.fld4 };
_30 = _15.fld4.fld5 as f32;
_15.fld4.fld3 = [_21,_21,_21,_21,_21,_21,_21];
_15.fld3.fld4.1.2 = -_18.fld0.1.2;
_17 = _15.fld3.fld4.3;
_15.fld0.2 = _14.1;
_15.fld4.fld2.fld3 = core::ptr::addr_of_mut!(_15.fld3.fld3);
RET.0 = _27 as u32;
match _15.fld4.fld1.0.0 {
0 => bb7,
1 => bb10,
2 => bb3,
3 => bb6,
4 => bb5,
69900058163108719342570186051287366714 => bb14,
_ => bb13
}
}
bb13 = {
_8.fld1 = 111_i8;
_4 = [_13,_2.0,_13,_13,_2.0,_2.0,_2.0,_2.0];
_5 = '\u{85a23}';
_15.fld0.3 = !17309565656802362000_usize;
_15.fld1 = core::ptr::addr_of_mut!(_15.fld4.fld2.fld1.2);
_15.fld4.fld3 = [(-9223372036854775808_isize),9223372036854775807_isize,26_isize,(-9223372036854775808_isize),82_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_14.3 = [57302_u16,48821_u16];
_18.fld0.0 = _8.fld1;
_18.fld0.2 = 180_u8 as u128;
Call(_14.2 = fn7(_9, _8, _10, _4, _6, _6, _8, _14.3), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_33.fld1 = (_15.fld4.fld1.0, _15.fld4.fld1.1, _2, _15.fld4.fld2.fld5, _15.fld3.fld0);
_18.fld0.1 = (_15.fld4.fld1.0.0, _15.fld3.fld4.1.1, _15.fld3.fld4.1.2);
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(6_usize, 12_usize, Move(_12), 13_usize, Move(_13), 7_usize, Move(_7), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(6_usize, 21_usize, Move(_21), 5_usize, Move(_5), 4_usize, Move(_4), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(6_usize, 31_usize, Move(_31), 9_usize, Move(_9), 39_usize, _39, 39_usize, _39), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: bool,mut _2: Adt51,mut _3: u64,mut _4: [u32; 8],mut _5: [i32; 4],mut _6: [i32; 4],mut _7: Adt51,mut _8: [u16; 2]) -> (isize, (f64, f32)) {
mir! {
type RET = (isize, (f64, f32));
let _9: *const (i128, f64);
let _10: usize;
let _11: bool;
let _12: Adt60;
let _13: ((i128, f64), isize, (u32,), f32, u32);
let _14: Adt64;
let _15: isize;
let _16: usize;
let _17: Adt50;
let _18: (i64, f32, u16);
let _19: (f64, f32);
let _20: Adt61;
let _21: [char; 1];
let _22: *const bool;
let _23: i32;
let _24: Adt56;
let _25: Adt61;
let _26: Adt56;
let _27: u128;
let _28: isize;
let _29: Adt58;
let _30: Adt63;
let _31: i16;
let _32: (i8, i128, *mut u8, usize);
let _33: u32;
let _34: [usize; 1];
let _35: *const ((i8, (i128, i128, i32), u128, i16),);
let _36: Adt54;
let _37: bool;
let _38: ((i8, (i128, i128, i32), u128, i16), usize);
let _39: i8;
let _40: [i32; 4];
let _41: [usize; 1];
let _42: (i128, i128, i32);
let _43: f64;
let _44: Adt64;
let _45: *const (i128, f64);
let _46: ();
let _47: ();
{
_7.fld1 = _2.fld1;
_7.fld2 = _3 ^ _3;
RET.1.0 = _2.fld1 as f64;
_7.fld2 = _3 ^ _2.fld2;
_5 = [1646882878_i32,1606713456_i32,(-1138499873_i32),1279310563_i32];
RET.1.0 = 77029161132474014371045491059627384286_u128 as f64;
Call(RET = fn8(_2.fld1, _6, _2.fld1, _7.fld1, _7.fld2, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7.fld0 = [3885506444_u32,3717333784_u32,3511262015_u32,475167287_u32,1935323289_u32,1102676930_u32,526268319_u32,1238602718_u32];
_2.fld0 = _7.fld0;
_2.fld0 = [3609301880_u32,30708966_u32,1136959656_u32,2945616037_u32,3176529827_u32,3112091145_u32,3217686910_u32,3464511856_u32];
RET.1.1 = (-6871822538802747571_i64) as f32;
RET.0 = 191939707610272220336255439534168255551_u128 as isize;
_4 = [4151159595_u32,2825089349_u32,1563419247_u32,2381945847_u32,1246195265_u32,3729089376_u32,3988069255_u32,1138582890_u32];
RET.1.0 = (-647499368_i32) as f64;
RET.0 = (-9223372036854775808_isize);
_7.fld0 = [345746288_u32,659972349_u32,1955629069_u32,3850619548_u32,4117457535_u32,1309781102_u32,836657725_u32,3939965209_u32];
_7.fld1 = -_2.fld1;
RET.1.1 = (-10377_i16) as f32;
_2 = Adt51 { fld0: _4,fld1: _7.fld1,fld2: _3 };
RET.0 = (-109_isize);
_11 = _1 & _1;
_2.fld2 = !_7.fld2;
_2.fld1 = 2063104997_u32 as i8;
_14.fld1 = Adt56 { fld0: _1,fld1: _2 };
_12.fld3.fld1.fld0 = _2.fld0;
RET.0 = (-5_isize);
_14.fld1.fld0 = _1;
Goto(bb2)
}
bb2 = {
_13.0.0 = _14.fld1.fld1.fld2 as i128;
RET.0 = (-9223372036854775808_isize) * (-9223372036854775808_isize);
_13.0.0 = !49125582059905213877352718269097855737_i128;
_14.fld0.0 = 4244392425_u32;
_14.fld0 = (2045268015_u32,);
_10 = 3729409680176162715_usize << _14.fld1.fld1.fld2;
_14.fld3 = _14.fld0.0 + _14.fld0.0;
_14.fld1 = Adt56 { fld0: _11,fld1: _2 };
_13.2.0 = _13.0.0 as u32;
_9 = core::ptr::addr_of!(_13.0);
_14.fld1.fld1 = _7;
match _14.fld0.0 {
0 => bb1,
1 => bb3,
2045268015 => bb5,
_ => bb4
}
}
bb3 = {
_7.fld0 = [3885506444_u32,3717333784_u32,3511262015_u32,475167287_u32,1935323289_u32,1102676930_u32,526268319_u32,1238602718_u32];
_2.fld0 = _7.fld0;
_2.fld0 = [3609301880_u32,30708966_u32,1136959656_u32,2945616037_u32,3176529827_u32,3112091145_u32,3217686910_u32,3464511856_u32];
RET.1.1 = (-6871822538802747571_i64) as f32;
RET.0 = 191939707610272220336255439534168255551_u128 as isize;
_4 = [4151159595_u32,2825089349_u32,1563419247_u32,2381945847_u32,1246195265_u32,3729089376_u32,3988069255_u32,1138582890_u32];
RET.1.0 = (-647499368_i32) as f64;
RET.0 = (-9223372036854775808_isize);
_7.fld0 = [345746288_u32,659972349_u32,1955629069_u32,3850619548_u32,4117457535_u32,1309781102_u32,836657725_u32,3939965209_u32];
_7.fld1 = -_2.fld1;
RET.1.1 = (-10377_i16) as f32;
_2 = Adt51 { fld0: _4,fld1: _7.fld1,fld2: _3 };
RET.0 = (-109_isize);
_11 = _1 & _1;
_2.fld2 = !_7.fld2;
_2.fld1 = 2063104997_u32 as i8;
_14.fld1 = Adt56 { fld0: _1,fld1: _2 };
_12.fld3.fld1.fld0 = _2.fld0;
RET.0 = (-5_isize);
_14.fld1.fld0 = _1;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
RET.0 = !22_isize;
_14.fld2.2 = (-8704640407699084232_i64) as u8;
_15 = 9223372036854775807_isize;
_14.fld2.0 = _14.fld3 * _14.fld0.0;
_12.fld3.fld1 = Adt51 { fld0: _2.fld0,fld1: _2.fld1,fld2: _7.fld2 };
_17.fld2 = [_10];
_17.fld1.2 = _11 as u8;
_22 = core::ptr::addr_of!(_14.fld1.fld0);
_6 = [(-667382575_i32),1732827416_i32,747401214_i32,1527841439_i32];
_14.fld0.0 = _14.fld3 - _13.2.0;
_14.fld4 = (-1269636492196527487_i64) as i16;
_13.4 = !_14.fld2.0;
_2.fld1 = (*_22) as i8;
_23 = (-1888953950_i32) - 825965402_i32;
RET.1.1 = 7535807064031681751_i64 as f32;
_18.1 = _12.fld3.fld1.fld1 as f32;
_12.fld1 = [_10];
_12.fld2 = core::ptr::addr_of!(_18.0);
_21 = ['\u{fde99}'];
_17.fld2 = [_10];
_14.fld2 = (_13.4, _17.fld1.2, _17.fld1.2);
_13.0.1 = (*_9).0 as f64;
_7 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _2.fld1,fld2: _12.fld3.fld1.fld2 };
_20.fld3 = [16996_u16,63249_u16];
Goto(bb6)
}
bb6 = {
(*_9).1 = _14.fld4 as f64;
_12.fld0 = [50847_u16,24200_u16,51173_u16,24140_u16];
_17.fld4 = _14.fld4;
_17.fld6 = core::ptr::addr_of_mut!(_14.fld2.1);
(*_9).1 = 25845_u16 as f64;
_18.2 = 53851_u16 & 1302_u16;
_13.3 = 8272791338853250195_i64 as f32;
_12.fld3.fld1.fld2 = _7.fld2 & _2.fld2;
_14.fld5 = core::ptr::addr_of!(_18.0);
_18.1 = _13.3 / f32::NAN;
RET.1 = ((*_9).1, _13.3);
_2 = Adt51 { fld0: _4,fld1: _14.fld1.fld1.fld1,fld2: _12.fld3.fld1.fld2 };
Call(_13.3 = core::intrinsics::transmute(_14.fld2.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_26.fld1.fld0 = [_14.fld3,_14.fld2.0,_14.fld0.0,_13.2.0,_14.fld0.0,_14.fld0.0,_13.4,_14.fld0.0];
_18.0 = -6524483685559485147_i64;
_15 = _18.0 as isize;
_26.fld1.fld2 = _7.fld2;
_29.fld0.3 = _14.fld4;
_26.fld1 = _7;
_26.fld1.fld1 = _13.3 as i8;
Goto(bb8)
}
bb8 = {
(*_9).0 = _18.2 as i128;
_30.fld1.fld0.0 = -_26.fld1.fld1;
_20.fld2 = _13.4 * _14.fld3;
_30.fld2.fld2 = !_14.fld0.0;
(*_9).1 = _23 as f64;
_19 = ((*_9).1, _13.3);
_14.fld1.fld1.fld1 = _14.fld2.2 as i8;
_24.fld1.fld2 = _7.fld2 << _7.fld2;
_7.fld1 = _18.1 as i8;
_24 = Adt56 { fld0: _1,fld1: _2 };
_7.fld2 = !_14.fld1.fld1.fld2;
_30.fld6 = Adt56 { fld0: _11,fld1: _2 };
Call(_19.0 = core::intrinsics::transmute(_26.fld1.fld2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_25.fld0 = _23;
_32 = (_7.fld1, _13.0.0, _17.fld6, _10);
_14.fld1.fld1 = Adt51 { fld0: _30.fld6.fld1.fld0,fld1: _24.fld1.fld1,fld2: _24.fld1.fld2 };
_24.fld1.fld0 = _30.fld6.fld1.fld0;
_30.fld1.fld0.1.0 = !_13.0.0;
_25.fld3 = [_18.2,_18.2];
_14.fld3 = _14.fld2.0;
_25.fld1 = [_32.1,_13.0.0,_30.fld1.fld0.1.0,(*_9).0];
_14.fld1.fld0 = _24.fld0;
_17.fld1 = (_13.4, _14.fld2.1, _14.fld2.2);
_30.fld3 = [_25.fld0,_23,_23,_23];
_17.fld3 = core::ptr::addr_of_mut!(_14.fld5);
_14.fld1.fld1 = Adt51 { fld0: _7.fld0,fld1: _26.fld1.fld1,fld2: _26.fld1.fld2 };
_21 = ['\u{ab99a}'];
_30.fld5 = -_25.fld0;
_26.fld1.fld1 = _18.0 as i8;
(*_9) = (_30.fld1.fld0.1.0, _19.0);
(*_9).1 = -_19.0;
_30.fld2.fld1 = _25.fld1;
_14.fld1.fld1 = _26.fld1;
_17.fld3 = core::ptr::addr_of_mut!(_14.fld5);
Goto(bb10)
}
bb10 = {
_38.0.1 = (_30.fld1.fld0.1.0, _13.0.0, _30.fld5);
_30.fld1.fld0 = (_26.fld1.fld1, _38.0.1, 141351933605414938985037602804188447829_u128, _29.fld0.3);
_38.0.0 = _24.fld1.fld1 + _24.fld1.fld1;
_39 = _14.fld2.1 as i8;
Goto(bb11)
}
bb11 = {
RET.1.0 = -_13.0.1;
_13.2.0 = !_20.fld2;
_17.fld7 = core::ptr::addr_of!(_19);
_24 = Adt56 { fld0: _11,fld1: _30.fld6.fld1 };
_29.fld0.1 = (_38.0.1.1, _30.fld1.fld0.1.0, _25.fld0);
_38.0.2 = _30.fld1.fld0.2;
_36.fld0 = _17.fld7;
_25.fld2 = _15 as u32;
_13.0.1 = _19.0 + _19.0;
_30.fld6.fld1 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _32.0,fld2: _2.fld2 };
_37 = _1;
_31 = -_14.fld4;
_29.fld0 = (_39, _30.fld1.fld0.1, _30.fld1.fld0.2, _31);
_38.0.1 = _30.fld1.fld0.1;
_12.fld3.fld1.fld2 = _3 % 14800540793288591194_u64;
match _38.0.2 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb12,
141351933605414938985037602804188447829 => bb14,
_ => bb13
}
}
bb12 = {
RET.0 = !22_isize;
_14.fld2.2 = (-8704640407699084232_i64) as u8;
_15 = 9223372036854775807_isize;
_14.fld2.0 = _14.fld3 * _14.fld0.0;
_12.fld3.fld1 = Adt51 { fld0: _2.fld0,fld1: _2.fld1,fld2: _7.fld2 };
_17.fld2 = [_10];
_17.fld1.2 = _11 as u8;
_22 = core::ptr::addr_of!(_14.fld1.fld0);
_6 = [(-667382575_i32),1732827416_i32,747401214_i32,1527841439_i32];
_14.fld0.0 = _14.fld3 - _13.2.0;
_14.fld4 = (-1269636492196527487_i64) as i16;
_13.4 = !_14.fld2.0;
_2.fld1 = (*_22) as i8;
_23 = (-1888953950_i32) - 825965402_i32;
RET.1.1 = 7535807064031681751_i64 as f32;
_18.1 = _12.fld3.fld1.fld1 as f32;
_12.fld1 = [_10];
_12.fld2 = core::ptr::addr_of!(_18.0);
_21 = ['\u{fde99}'];
_17.fld2 = [_10];
_14.fld2 = (_13.4, _17.fld1.2, _17.fld1.2);
_13.0.1 = (*_9).0 as f64;
_7 = Adt51 { fld0: _12.fld3.fld1.fld0,fld1: _2.fld1,fld2: _12.fld3.fld1.fld2 };
_20.fld3 = [16996_u16,63249_u16];
Goto(bb6)
}
bb13 = {
_25.fld0 = _23;
_32 = (_7.fld1, _13.0.0, _17.fld6, _10);
_14.fld1.fld1 = Adt51 { fld0: _30.fld6.fld1.fld0,fld1: _24.fld1.fld1,fld2: _24.fld1.fld2 };
_24.fld1.fld0 = _30.fld6.fld1.fld0;
_30.fld1.fld0.1.0 = !_13.0.0;
_25.fld3 = [_18.2,_18.2];
_14.fld3 = _14.fld2.0;
_25.fld1 = [_32.1,_13.0.0,_30.fld1.fld0.1.0,(*_9).0];
_14.fld1.fld0 = _24.fld0;
_17.fld1 = (_13.4, _14.fld2.1, _14.fld2.2);
_30.fld3 = [_25.fld0,_23,_23,_23];
_17.fld3 = core::ptr::addr_of_mut!(_14.fld5);
_14.fld1.fld1 = Adt51 { fld0: _7.fld0,fld1: _26.fld1.fld1,fld2: _26.fld1.fld2 };
_21 = ['\u{ab99a}'];
_30.fld5 = -_25.fld0;
_26.fld1.fld1 = _18.0 as i8;
(*_9) = (_30.fld1.fld0.1.0, _19.0);
(*_9).1 = -_19.0;
_30.fld2.fld1 = _25.fld1;
_14.fld1.fld1 = _26.fld1;
_17.fld3 = core::ptr::addr_of_mut!(_14.fld5);
Goto(bb10)
}
bb14 = {
_30.fld1.fld0.1.0 = !_38.0.1.1;
_29.fld0.1 = (_38.0.1.1, _13.0.0, _25.fld0);
_13.0.0 = _30.fld1.fld0.1.1;
_33 = _18.0 as u32;
_14.fld2.1 = _14.fld2.2;
_44.fld1.fld1.fld2 = !_2.fld2;
_30.fld1.fld0 = (_29.fld0.0, _38.0.1, _29.fld0.2, _29.fld0.3);
_14.fld2 = (_20.fld2, _17.fld1.1, _17.fld1.2);
_17.fld7 = _36.fld0;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(7_usize, 3_usize, Move(_3), 5_usize, Move(_5), 6_usize, Move(_6), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(7_usize, 8_usize, Move(_8), 23_usize, Move(_23), 37_usize, Move(_37), 47_usize, _47), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: i8,mut _2: [i32; 4],mut _3: i8,mut _4: i8,mut _5: u64,mut _6: [i32; 4]) -> (isize, (f64, f32)) {
mir! {
type RET = (isize, (f64, f32));
let _7: (i8, i128, *mut u8, usize);
let _8: [u32; 8];
let _9: (i128, i128, i32);
let _10: f32;
let _11: i8;
let _12: isize;
let _13: [u16; 2];
let _14: Adt64;
let _15: Adt54;
let _16: isize;
let _17: Adt65;
let _18: isize;
let _19: bool;
let _20: u64;
let _21: i32;
let _22: *mut u8;
let _23: f64;
let _24: bool;
let _25: i16;
let _26: i8;
let _27: [i128; 6];
let _28: isize;
let _29: Adt61;
let _30: Adt53;
let _31: i16;
let _32: ();
let _33: ();
{
RET.0 = 174_u8 as isize;
_5 = !9598931064102404787_u64;
RET.1.0 = _1 as f64;
_4 = _3 - _1;
Call(RET.0 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = _2;
RET.1.0 = 9353736738382789046417132730681154818_i128 as f64;
_6 = [703178141_i32,770120313_i32,(-1303048315_i32),(-1555866199_i32)];
RET.1.0 = 1963521739_u32 as f64;
RET.0 = (-9223372036854775808_isize);
RET.1.1 = (-22077_i16) as f32;
RET.1.0 = 5225559093052912860_i64 as f64;
Call(RET.1.1 = fn9(_5, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET.0 = -60_isize;
_4 = !_1;
_5 = 6826664245977872155_usize as u64;
RET.1.0 = 754176964261822300_i64 as f64;
_3 = -_1;
_2 = [221857520_i32,1629479860_i32,1108665477_i32,581201591_i32];
_8 = [4230852412_u32,1844574148_u32,805385919_u32,1169307058_u32,60538377_u32,1115703316_u32,998572583_u32,3202048260_u32];
RET.1.0 = 239748091994437734_i64 as f64;
_6 = _2;
_2 = [1701835553_i32,(-40022359_i32),(-524075209_i32),(-1729472431_i32)];
_10 = 47839_u16 as f32;
_7.0 = -_1;
_7.3 = 10121454415735838015_usize ^ 9967386512588574258_usize;
_9.0 = (-2095490797_i32) as i128;
match _1 {
0 => bb1,
1 => bb3,
111 => bb5,
_ => bb4
}
}
bb3 = {
_6 = _2;
RET.1.0 = 9353736738382789046417132730681154818_i128 as f64;
_6 = [703178141_i32,770120313_i32,(-1303048315_i32),(-1555866199_i32)];
RET.1.0 = 1963521739_u32 as f64;
RET.0 = (-9223372036854775808_isize);
RET.1.1 = (-22077_i16) as f32;
RET.1.0 = 5225559093052912860_i64 as f64;
Call(RET.1.1 = fn9(_5, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_5 = 73649895_u32 as u64;
_2 = _6;
_5 = !8587896047568443369_u64;
_1 = !_4;
Goto(bb6)
}
bb6 = {
_7.0 = !_1;
_1 = _4 ^ _4;
_14.fld2 = (565108358_u32, 131_u8, 167_u8);
_7.1 = 18775_i16 as i128;
_14.fld0.0 = !_14.fld2.0;
_14.fld1.fld1.fld2 = _5;
_14.fld3 = !_14.fld2.0;
RET.1.0 = (-1790300532_i32) as f64;
RET.1.0 = _1 as f64;
_9.1 = _9.0;
_14.fld4 = 31976_i16 << _14.fld0.0;
_9 = (_7.1, _7.1, (-579387380_i32));
_17.fld3.fld4.1 = (_9.1, _7.1, _9.2);
_14.fld1.fld0 = true;
_17.fld4.fld2.fld5 = _10 - _10;
_17.fld3.fld4.1.2 = _9.2 - _9.2;
_17.fld4.fld2.fld4 = _14.fld4;
_17.fld4.fld2.fld0 = _17.fld3.fld4.1.2 as f64;
_17.fld4.fld2.fld1 = (_14.fld2.0, _14.fld2.1, _14.fld2.2);
Call(_12 = fn18(_14.fld1.fld0, _4, _7.3, _17.fld4.fld2.fld4), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_17.fld3.fld5 = [_12,_12,_12,_12,_12,_12,_12];
_17.fld3.fld0 = _5 as u32;
_14.fld0.0 = _17.fld4.fld2.fld1.0 >> _17.fld4.fld2.fld1.2;
_17.fld3.fld4.3 = _17.fld4.fld2.fld4 * _17.fld4.fld2.fld4;
_14.fld2 = (_14.fld0.0, _17.fld4.fld2.fld1.1, _17.fld4.fld2.fld1.1);
_14.fld1.fld1.fld1 = _17.fld4.fld2.fld1.0 as i8;
_17.fld0.0 = _4;
_17.fld3.fld4 = (_14.fld1.fld1.fld1, _9, 244436652531116089928641470111011101553_u128, _14.fld4);
_9 = (_17.fld3.fld4.1.1, _7.1, _17.fld3.fld4.1.2);
_17.fld2 = [_17.fld3.fld4.2,_17.fld3.fld4.2,_17.fld3.fld4.2,_17.fld3.fld4.2,_17.fld3.fld4.2,_17.fld3.fld4.2,_17.fld3.fld4.2,_17.fld3.fld4.2];
RET.1.0 = _17.fld4.fld2.fld0;
_15.fld1 = _5;
_17.fld0.2 = core::ptr::addr_of_mut!(_14.fld2.2);
_1 = -_14.fld1.fld1.fld1;
_17.fld0.1 = _7.1;
_11 = _1 - _7.0;
RET.1.1 = -_17.fld4.fld2.fld5;
_20 = _17.fld3.fld4.2 as u64;
_14.fld1.fld1 = Adt51 { fld0: _8,fld1: _11,fld2: _20 };
_17.fld4.fld1.0.1 = _17.fld3.fld4.3 as f64;
_17.fld4.fld1.4 = _17.fld4.fld2.fld5 as u32;
_17.fld4.fld1.1 = _12 ^ _12;
_13 = [16817_u16,23034_u16];
_15.fld1 = !_20;
_7.2 = _17.fld0.2;
_18 = !_17.fld4.fld1.1;
Goto(bb8)
}
bb8 = {
_17.fld4.fld2.fld4 = _17.fld3.fld4.3;
RET.0 = !_18;
_19 = _17.fld3.fld4.1.0 != _9.0;
RET.1.0 = _17.fld4.fld2.fld0;
_17.fld4.fld2.fld1.0 = !_14.fld3;
_17.fld4.fld2.fld6 = _17.fld0.2;
_17.fld4.fld2.fld1 = _14.fld2;
_20 = _15.fld1 >> _12;
_28 = _15.fld1 as isize;
_9.2 = _17.fld3.fld4.1.2;
match _14.fld2.1 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb6,
131 => bb10,
_ => bb9
}
}
bb9 = {
_7.0 = !_1;
_1 = _4 ^ _4;
_14.fld2 = (565108358_u32, 131_u8, 167_u8);
_7.1 = 18775_i16 as i128;
_14.fld0.0 = !_14.fld2.0;
_14.fld1.fld1.fld2 = _5;
_14.fld3 = !_14.fld2.0;
RET.1.0 = (-1790300532_i32) as f64;
RET.1.0 = _1 as f64;
_9.1 = _9.0;
_14.fld4 = 31976_i16 << _14.fld0.0;
_9 = (_7.1, _7.1, (-579387380_i32));
_17.fld3.fld4.1 = (_9.1, _7.1, _9.2);
_14.fld1.fld0 = true;
_17.fld4.fld2.fld5 = _10 - _10;
_17.fld3.fld4.1.2 = _9.2 - _9.2;
_17.fld4.fld2.fld4 = _14.fld4;
_17.fld4.fld2.fld0 = _17.fld3.fld4.1.2 as f64;
_17.fld4.fld2.fld1 = (_14.fld2.0, _14.fld2.1, _14.fld2.2);
Call(_12 = fn18(_14.fld1.fld0, _4, _7.3, _17.fld4.fld2.fld4), ReturnTo(bb7), UnwindUnreachable())
}
bb10 = {
_17.fld3.fld4.1.1 = -_17.fld3.fld4.1.0;
RET.1 = (_17.fld4.fld2.fld0, _17.fld4.fld2.fld5);
RET.1.0 = _17.fld3.fld4.2 as f64;
_17.fld4.fld2.fld4 = _7.3 as i16;
_17.fld4.fld3 = [_28,_28,_28,_28,_28,_28,_28];
_17.fld0.2 = _17.fld4.fld2.fld6;
_17.fld4.fld1.0.0 = _17.fld0.1 * _9.1;
_14.fld4 = _17.fld3.fld4.3;
_17.fld4.fld2.fld6 = core::ptr::addr_of_mut!(_30.fld2.fld1.1);
_30.fld1.0.1 = -_17.fld4.fld1.0.1;
_7 = (_1, _17.fld3.fld4.1.0, _17.fld0.2, 14887594048436401038_usize);
_30.fld2.fld3 = core::ptr::addr_of_mut!(_14.fld5);
_17.fld4.fld2.fld1 = (_14.fld2.0, _14.fld2.1, _14.fld2.2);
_14.fld0.0 = _17.fld4.fld2.fld1.0 / 605224476_u32;
_7.3 = !11497943047100476275_usize;
_4 = _11;
_15.fld1 = _19 as u64;
_25 = _14.fld4 << _14.fld2.0;
_14.fld2.2 = _17.fld4.fld2.fld1.2;
_7.3 = 5_usize + 2_usize;
RET.1.0 = _17.fld4.fld2.fld0 + _17.fld4.fld2.fld0;
_30.fld2.fld1.2 = !_14.fld2.1;
_17.fld3.fld4.3 = -_25;
_14.fld1.fld1.fld2 = _7.3 as u64;
Goto(bb11)
}
bb11 = {
Call(_32 = dump_var(8_usize, 28_usize, Move(_28), 25_usize, Move(_25), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_32 = dump_var(8_usize, 12_usize, Move(_12), 9_usize, Move(_9), 18_usize, Move(_18), 3_usize, Move(_3)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: u64,mut _2: i8,mut _3: i8) -> f32 {
mir! {
type RET = f32;
let _4: *const f64;
let _5: (i64, f32, u16);
let _6: Adt51;
let _7: [u16; 2];
let _8: [char; 1];
let _9: (i128, i128, i32);
let _10: char;
let _11: [u128; 8];
let _12: f32;
let _13: [u16; 2];
let _14: *const i64;
let _15: bool;
let _16: isize;
let _17: u8;
let _18: f32;
let _19: i8;
let _20: (i8, i128, *mut u8, usize);
let _21: (i64, f32, u16);
let _22: i32;
let _23: Adt59;
let _24: i8;
let _25: Adt57;
let _26: *mut *const i64;
let _27: isize;
let _28: *mut u8;
let _29: Adt59;
let _30: Adt51;
let _31: Adt60;
let _32: Adt56;
let _33: (i64, f32, u16);
let _34: Adt50;
let _35: ((i8, (i128, i128, i32), u128, i16),);
let _36: *mut *const i64;
let _37: char;
let _38: ();
let _39: ();
{
RET = (-9223372036854775808_isize) as f32;
_3 = _2;
_2 = !_3;
_1 = 3882219415531178465_u64;
RET = (-9223372036854775808_isize) as f32;
_1 = 7071719468680067294_u64 >> _2;
Goto(bb1)
}
bb1 = {
RET = 1640163173_i32 as f32;
RET = 121_u8 as f32;
_3 = -_2;
_1 = 111_u8 as u64;
_3 = _2;
_3 = _2 & _2;
RET = 198087073_i32 as f32;
_2 = -_3;
_5.0 = (-1012860275565708427_i64) >> _2;
_3 = -_2;
_3 = 1267058012_u32 as i8;
_1 = 30382_i16 as u64;
_5.1 = 32_u8 as f32;
_5.0 = 6263713912536696475_i64 - 5670924875004180493_i64;
_1 = 4418255547509617714_u64 - 17125895853888925368_u64;
_1 = 46977438309678457435014206015682113029_u128 as u64;
_5.0 = 1945034404507050808_i64 + 35670836598340989_i64;
_7 = [53978_u16,14887_u16];
_5.2 = 206_u8 as u16;
_1 = 15959337786645541034_u64;
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
15959337786645541034 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5.2 = !55060_u16;
_6.fld2 = _1 * _1;
_5.0 = (-8125775311032929677_i64) * (-7004428529798407056_i64);
_5.2 = 29236_u16 + 8724_u16;
_6.fld1 = !_2;
_9.2 = 798330213_i32 >> _5.2;
_8 = ['\u{95b9}'];
_5.2 = '\u{107dc7}' as u16;
_7 = [_5.2,_5.2];
_6.fld0 = [210401371_u32,897070066_u32,3741608350_u32,3860230874_u32,401808311_u32,2369186533_u32,1137336576_u32,4141319349_u32];
_5.1 = 66868167790808435332224290754728522751_i128 as f32;
_9.2 = (-1210329_i32) << _5.0;
_13 = _7;
RET = _5.1 / f32::NAN;
_12 = _5.1;
_5.2 = !62094_u16;
_11 = [141280313744229583309923062451630069380_u128,149533844247475389427283938226482642010_u128,34523064102493480120391063180040376458_u128,255106503795701004610340617156772803442_u128,177492413519374949309630040795096526261_u128,172246990180153518539253861517968616200_u128,310001564817802826755977442249843612771_u128,35805281252673233955300361826773153838_u128];
_6.fld2 = !_1;
_14 = core::ptr::addr_of!(_5.0);
_6.fld1 = !_3;
_6.fld2 = _1 + _1;
_6.fld2 = _6.fld1 as u64;
_10 = '\u{f1ab6}';
_9 = (151286366238188607372876869246945450319_i128, 68715075957615789900379396481272116597_i128, (-582161506_i32));
Goto(bb8)
}
bb8 = {
_6.fld0 = [3287245059_u32,3846881744_u32,1052898994_u32,917436485_u32,3679203274_u32,2284363909_u32,1281846709_u32,1880508249_u32];
RET = _5.1 - _12;
_6.fld2 = _1 | _1;
_14 = core::ptr::addr_of!(_5.0);
_5.0 = !(-2300788589946650554_i64);
_5.0 = (-4377056706560799096_i64);
_10 = '\u{c6087}';
RET = 6110_i16 as f32;
_9.0 = -_9.1;
Call(_9.2 = core::intrinsics::bswap(323251109_i32), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_12 = _5.1;
_15 = false;
_5 = (1044213543839465998_i64, _12, 62221_u16);
_8 = [_10];
_8 = [_10];
(*_14) = 6060385169732941327_i64;
Call(_9.0 = core::intrinsics::transmute(_9.1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_15 = !true;
_12 = _5.2 as f32;
_6.fld1 = _15 as i8;
_9.2 = (-10459783_i32);
_9.0 = !_9.1;
(*_14) = 189_u8 as i64;
_15 = !true;
_17 = _9.2 as u8;
_6.fld2 = _1 % 11932388981122866624_u64;
_5.0 = !7009154392805825305_i64;
_15 = true;
_5 = (6316823937409504536_i64, _12, 60547_u16);
_12 = -_5.1;
_16 = 9223372036854775807_isize;
_5.0 = (-6455458663327826340_i64) | (-12010712134849375_i64);
_2 = _3 | _6.fld1;
_12 = _5.1 + _5.1;
_9.2 = _15 as i32;
_9.2 = 2341587214_u32 as i32;
_17 = 67_u8 % 70_u8;
_5.0 = _9.0 as i64;
_19 = 11084049119866104529_usize as i8;
_13 = _7;
_5.0 = (-5047876364896529927_i64);
RET = _2 as f32;
_9.0 = _10 as i128;
Goto(bb11)
}
bb11 = {
_15 = true ^ false;
Goto(bb12)
}
bb12 = {
_14 = core::ptr::addr_of!((*_14));
_21.0 = -_5.0;
_21 = ((*_14), _5.1, _5.2);
_20.2 = core::ptr::addr_of_mut!(_17);
_2 = _19 << _6.fld2;
_19 = _2 & _2;
_9 = ((-79827827067836366940883208100086260707_i128), 113313363918798175681567228749938218094_i128, (-2061223793_i32));
_23.fld1.1.2 = _17 as i32;
_20.2 = core::ptr::addr_of_mut!(_17);
_5.1 = -_21.1;
(*_14) = (-5410_i16) as i64;
(*_14) = -_21.0;
_23.fld1.0 = -_2;
_22 = _9.2;
_18 = _21.1 + _12;
_5.2 = !_21.2;
_23.fld3.2.0 = _16;
_23.fld2 = Adt56 { fld0: _15,fld1: _6 };
_29.fld3.2.1.1 = _5.0 as f32;
Call(_23.fld3 = fn10(_23.fld2, _9.1, _22, _5.1, _14, _10, _12, _2, _10, _23.fld2, _9, _23.fld2.fld1.fld0, _21.0, _21, _16, _13), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_29.fld3.4 = core::ptr::addr_of!(_29.fld3.2.1);
_29.fld3.1 = _23.fld3.1;
_30 = Adt51 { fld0: _23.fld2.fld1.fld0,fld1: _19,fld2: _1 };
_29.fld4 = _23.fld3.0 & _23.fld3.0;
_23.fld1.1.1 = 2710585141_u32 as i128;
_30.fld0 = [1902917389_u32,1499140097_u32,712631563_u32,220942186_u32,2305980402_u32,2395160223_u32,3855789753_u32,851024876_u32];
_5.1 = 157615483166207691102300074618642073903_u128 as f32;
_23.fld2.fld1 = Adt51 { fld0: _6.fld0,fld1: _30.fld1,fld2: _1 };
_12 = -_18;
_12 = _18 + _18;
_4 = core::ptr::addr_of!(_29.fld3.2.1.0);
_23.fld2.fld1 = _6;
_29.fld1 = (_23.fld1.0, _9, 141575287274141228175453323496414870249_u128, _29.fld4);
_20 = (_30.fld1, _29.fld1.1.1, _29.fld3.1, 7856878796871778916_usize);
_32.fld1.fld1 = _29.fld1.2 as i8;
_32.fld1.fld2 = _6.fld2 & _30.fld2;
_29.fld2.fld0 = !_15;
Goto(bb14)
}
bb14 = {
_29.fld2.fld0 = _23.fld2.fld0;
_33.1 = -_12;
_29.fld1.3 = _29.fld4 ^ _29.fld4;
_18 = _21.0 as f32;
_31.fld3 = Adt56 { fld0: _15,fld1: _23.fld2.fld1 };
_29.fld1.1.1 = -_9.0;
_31.fld3.fld0 = _23.fld2.fld0;
_32.fld1 = Adt51 { fld0: _23.fld2.fld1.fld0,fld1: _20.0,fld2: _6.fld2 };
_29.fld1.2 = 50602508420490248784835644980259146837_u128 - 121692150152693275172258740540115933840_u128;
_35.0.2 = _5.2 as u128;
_23.fld1.2 = !_29.fld1.2;
_32.fld0 = !_29.fld2.fld0;
_23.fld3.2.0 = _29.fld1.2 as isize;
_29.fld1.1.2 = _23.fld1.1.2 * _9.2;
_35 = (_29.fld1,);
_29 = Adt59 { fld0: _12,fld1: _35.0,fld2: _23.fld2,fld3: _23.fld3,fld4: _35.0.3 };
_35.0.2 = !_23.fld1.2;
_34.fld5 = _35.0.2 as f32;
_33.2 = _21.2;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(9_usize, 9_usize, Move(_9), 16_usize, Move(_16), 35_usize, Move(_35), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(9_usize, 10_usize, Move(_10), 19_usize, Move(_19), 15_usize, Move(_15), 39_usize, _39), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: Adt56,mut _2: i128,mut _3: i32,mut _4: f32,mut _5: *const i64,mut _6: char,mut _7: f32,mut _8: i8,mut _9: char,mut _10: Adt56,mut _11: (i128, i128, i32),mut _12: [u32; 8],mut _13: i64,mut _14: (i64, f32, u16),mut _15: isize,mut _16: [u16; 2]) -> (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8) {
mir! {
type RET = (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _17: [u128; 8];
let _18: (i128, f64);
let _19: Adt57;
let _20: *const bool;
let _21: Adt49;
let _22: bool;
let _23: [i32; 4];
let _24: isize;
let _25: u32;
let _26: f64;
let _27: isize;
let _28: i8;
let _29: (i128, i128, i32);
let _30: f32;
let _31: i8;
let _32: Adt51;
let _33: u16;
let _34: Adt49;
let _35: *const (i128, f64);
let _36: i128;
let _37: Adt50;
let _38: u128;
let _39: i128;
let _40: Adt53;
let _41: [i128; 6];
let _42: Adt63;
let _43: *const (i128, f64);
let _44: char;
let _45: [isize; 7];
let _46: Adt62;
let _47: i64;
let _48: isize;
let _49: f64;
let _50: i128;
let _51: (u32,);
let _52: *const ((i8, (i128, i128, i32), u128, i16),);
let _53: u64;
let _54: *mut u8;
let _55: char;
let _56: i128;
let _57: Adt63;
let _58: *const (i128, f64);
let _59: [i128; 6];
let _60: ();
let _61: ();
{
_14 = ((*_5), _4, 36315_u16);
_6 = _9;
match _3 {
0 => bb1,
1 => bb2,
340282366920938463463374607429706987663 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
(*_5) = !_14.0;
RET.2.0 = _15;
_4 = _14.1 / f32::INFINITY;
_19.fld0 = 82_u8 as u64;
_9 = _6;
RET.0 = _14.0 as i16;
(*_5) = _14.0;
match _11.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
340282366920938463463374607429706987663 => bb8,
_ => bb7
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET.5 = -_10.fld1.fld1;
_10.fld1 = _1.fld1;
_10.fld1.fld2 = !_19.fld0;
_5 = core::ptr::addr_of!(_14.0);
_18.1 = _11.1 as f64;
RET.3 = [_14.2,_14.2];
RET.2.1.1 = -_4;
_1 = Adt56 { fld0: _10.fld0,fld1: _10.fld1 };
_15 = (-9223372036854775808_isize);
RET.2.1.1 = _4;
RET.5 = _8;
RET.3 = [_14.2,_14.2];
_11.2 = _4 as i32;
RET.2.1 = (_18.1, _4);
_10.fld0 = _18.1 == _18.1;
_11.0 = _2;
_6 = _9;
RET.5 = -_8;
_10.fld1.fld0 = [3874239633_u32,3598501998_u32,1560861990_u32,1257737691_u32,3217646345_u32,3635615410_u32,1395738833_u32,1498593371_u32];
_5 = core::ptr::addr_of!(_21.fld6.0);
_19.fld0 = _15 as u64;
_21.fld6.0 = 183_u8 as i64;
match _2 {
0 => bb5,
1 => bb4,
2 => bb9,
3 => bb10,
4 => bb11,
113313363918798175681567228749938218094 => bb13,
_ => bb12
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
(*_5) = !_14.0;
RET.2.0 = _15;
_4 = _14.1 / f32::INFINITY;
_19.fld0 = 82_u8 as u64;
_9 = _6;
RET.0 = _14.0 as i16;
(*_5) = _14.0;
match _11.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
340282366920938463463374607429706987663 => bb8,
_ => bb7
}
}
bb13 = {
_8 = 315824435723192152382103110122348695584_u128 as i8;
_10.fld1 = _1.fld1;
_16 = [_14.2,_14.2];
_21.fld6.1 = _7 * _14.1;
_23 = [_11.2,_11.2,_3,_11.2];
_18.0 = -_11.0;
_17 = [65267756004309678226323961323604580466_u128,214147616228614340204970023884808424658_u128,115972534012506264967687784151885493911_u128,6727885638498555875990526794166544380_u128,138532742122588322934010015680278162761_u128,17607879822984286037939059227172925230_u128,300317866927595140161407516391230910097_u128,184603860681002126836507439201903247839_u128];
_23 = [_11.2,_11.2,_3,_3];
_19 = Adt57 { fld0: _10.fld1.fld2,fld1: _23 };
RET.2.1 = (_18.1, _21.fld6.1);
_14.0 = _13;
_19 = Adt57 { fld0: _1.fld1.fld2,fld1: _23 };
_1.fld1.fld0 = [1430906659_u32,3255958783_u32,1351597373_u32,48270755_u32,2608516648_u32,3628783540_u32,587515120_u32,933808982_u32];
_24 = _15 ^ _15;
_11.1 = _18.0;
_1.fld1.fld1 = _8;
RET.2.1.0 = _18.1;
Call(_27 = fn11(_21.fld6.1, _7, _11.0, _10.fld1.fld0, _10.fld0, _7, _17), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_21.fld0 = [_14.2,_14.2,_14.2,_14.2];
_21.fld2 = _27 - _24;
_24 = -_21.fld2;
RET.2.1.0 = -_18.1;
_29 = _11;
_21.fld6.1 = _7;
_23 = [_11.2,_29.2,_3,_11.2];
Goto(bb15)
}
bb15 = {
_1.fld1.fld0 = [2220309497_u32,1630442273_u32,4067301382_u32,3688860455_u32,2093312001_u32,4115845102_u32,2164479246_u32,2395396922_u32];
_17 = [296814006322735896948498437642026521495_u128,204086132942014682222751681037306300991_u128,144912995840446467819659542025304638928_u128,175659515757693440108825904928965670947_u128,183151953319430094514789279970240743806_u128,212124803780901603751579829223610328133_u128,196247601554518392331114803538227414699_u128,223781585257898628894756457659551702674_u128];
_22 = _10.fld0;
_23 = [_3,_3,_11.2,_11.2];
_25 = 3717632063_u32;
_4 = -_21.fld6.1;
_32.fld2 = (-7296_i16) as u64;
_11 = _29;
_32.fld0 = [_25,_25,_25,_25,_25,_25,_25,_25];
RET.2.1.0 = -_18.1;
_10 = Adt56 { fld0: _22,fld1: _1.fld1 };
_1 = Adt56 { fld0: _10.fld0,fld1: _10.fld1 };
_20 = core::ptr::addr_of!(_10.fld0);
_32.fld0 = [_25,_25,_25,_25,_25,_25,_25,_25];
RET.2.0 = _21.fld2;
_21.fld1 = core::ptr::addr_of_mut!(_5);
_26 = -_18.1;
Goto(bb16)
}
bb16 = {
_34.fld0 = [_14.2,_14.2,_14.2,_14.2];
(*_5) = _27 as i64;
_33 = !_14.2;
_34.fld6.0 = _21.fld6.0;
_34.fld3 = !_10.fld1.fld2;
_28 = _10.fld1.fld1 | _10.fld1.fld1;
_19.fld1 = _23;
_1.fld0 = _29.1 != _18.0;
_22 = (*_20) != _10.fld0;
_34.fld6 = _14;
_1.fld0 = !_10.fld0;
_14.0 = !_13;
_1.fld1.fld2 = _7 as u64;
RET.2.1 = (_26, _4);
RET.2.0 = -_27;
_35 = core::ptr::addr_of!(_18);
RET.2.1 = ((*_35).1, _21.fld6.1);
(*_35).1 = _26;
_12 = [_25,_25,_25,_25,_25,_25,_25,_25];
_32.fld1 = _28;
RET.3 = [_14.2,_14.2];
_34.fld2 = _24 & _27;
(*_35) = (_2, _26);
_11.0 = _29.0 & _29.0;
_11.1 = !(*_35).0;
_21.fld6 = _14;
_34.fld6.0 = _13 | _21.fld6.0;
RET.2.1.1 = _7;
Goto(bb17)
}
bb17 = {
_17 = [325087760607794577252771004415025428066_u128,77987323561150398343577857687358641858_u128,152957129436471750484089648046612557207_u128,184657325212804467895877219262279296217_u128,302681484705222899957780221972078551462_u128,197218460988614639798293976877780666601_u128,249553111876614002279884473146935551010_u128,245254814424941518186027162911700935598_u128];
_29.1 = 6699_i16 as i128;
RET.2.1 = (_18.1, _14.1);
_14.2 = 129983503092548775830804506359746281297_u128 as u16;
_21.fld6.1 = (-9909_i16) as f32;
_22 = !_10.fld0;
_34.fld4 = [2_usize];
_37.fld1.0 = _13 as u32;
_12 = _10.fld1.fld0;
(*_35).0 = _11.0 << _11.1;
(*_35) = (_11.0, _26);
_10.fld1.fld0 = [_37.fld1.0,_37.fld1.0,_25,_25,_37.fld1.0,_37.fld1.0,_37.fld1.0,_25];
_27 = -_24;
_2 = !_11.0;
_5 = core::ptr::addr_of!((*_5));
_9 = _6;
_18 = (_11.0, _26);
_19 = Adt57 { fld0: _1.fld1.fld2,fld1: _23 };
RET.1 = core::ptr::addr_of_mut!(_37.fld1.1);
_34.fld6.1 = _7;
_4 = 2_usize as f32;
_38 = !6972440079282105254866044301243683054_u128;
_37.fld6 = core::ptr::addr_of_mut!(_37.fld1.2);
_21.fld6.1 = -_7;
_17 = [_38,_38,_38,_38,_38,_38,_38,_38];
_37.fld6 = core::ptr::addr_of_mut!(_37.fld1.1);
_21.fld0 = [_34.fld6.2,_34.fld6.2,_14.2,_33];
RET.1 = core::ptr::addr_of_mut!(_37.fld1.1);
match _34.fld6.2 {
0 => bb2,
36315 => bb19,
_ => bb18
}
}
bb18 = {
_1.fld1.fld0 = [2220309497_u32,1630442273_u32,4067301382_u32,3688860455_u32,2093312001_u32,4115845102_u32,2164479246_u32,2395396922_u32];
_17 = [296814006322735896948498437642026521495_u128,204086132942014682222751681037306300991_u128,144912995840446467819659542025304638928_u128,175659515757693440108825904928965670947_u128,183151953319430094514789279970240743806_u128,212124803780901603751579829223610328133_u128,196247601554518392331114803538227414699_u128,223781585257898628894756457659551702674_u128];
_22 = _10.fld0;
_23 = [_3,_3,_11.2,_11.2];
_25 = 3717632063_u32;
_4 = -_21.fld6.1;
_32.fld2 = (-7296_i16) as u64;
_11 = _29;
_32.fld0 = [_25,_25,_25,_25,_25,_25,_25,_25];
RET.2.1.0 = -_18.1;
_10 = Adt56 { fld0: _22,fld1: _1.fld1 };
_1 = Adt56 { fld0: _10.fld0,fld1: _10.fld1 };
_20 = core::ptr::addr_of!(_10.fld0);
_32.fld0 = [_25,_25,_25,_25,_25,_25,_25,_25];
RET.2.0 = _21.fld2;
_21.fld1 = core::ptr::addr_of_mut!(_5);
_26 = -_18.1;
Goto(bb16)
}
bb19 = {
_40.fld2.fld0 = _26;
_29.2 = _11.2;
RET.2.0 = -_27;
_28 = _32.fld1;
_40.fld2.fld1.1 = !191_u8;
RET.3 = [_33,_21.fld6.2];
_40.fld4 = core::ptr::addr_of!(_21.fld6.0);
_42.fld1.fld0.3 = !(-1790_i16);
_10.fld1.fld2 = _6 as u64;
_1 = Adt56 { fld0: _22,fld1: _32 };
_14.0 = _32.fld1 as i64;
_39 = _29.0 | _29.0;
_34.fld5 = core::ptr::addr_of_mut!(_37.fld1.1);
_1.fld1.fld2 = _19.fld0 & _34.fld3;
_9 = _6;
_34.fld6.2 = !_33;
RET.5 = _32.fld1 >> _21.fld6.2;
_1 = _10;
_10 = Adt56 { fld0: _22,fld1: _32 };
_32.fld2 = !_19.fld0;
_37.fld4 = _42.fld1.fld0.3 * _42.fld1.fld0.3;
Goto(bb20)
}
bb20 = {
RET.5 = _28;
_10 = Adt56 { fld0: _1.fld0,fld1: _32 };
_42.fld1.fld0.1.1 = _39;
_40.fld1.2.0 = !_25;
_40.fld2.fld1 = (_40.fld1.2.0, 246_u8, 202_u8);
_34.fld0 = [_34.fld6.2,_34.fld6.2,_21.fld6.2,_33];
_38 = _26 as u128;
_10.fld1.fld0 = [_37.fld1.0,_40.fld2.fld1.0,_40.fld1.2.0,_37.fld1.0,_40.fld2.fld1.0,_37.fld1.0,_40.fld1.2.0,_40.fld1.2.0];
_42.fld2.fld0 = _11.2;
_10.fld1.fld0 = _1.fld1.fld0;
_21.fld6 = _34.fld6;
_40.fld1.4 = !_40.fld1.2.0;
_10.fld0 = !_1.fld0;
Call(_37.fld2 = fn12(_5, _11.1, _32, _21.fld6, _40.fld1.2.0, _21.fld6.0), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_42.fld1.fld0.2 = _38;
_37.fld0 = (*_35).1 - _40.fld2.fld0;
_14 = _21.fld6;
_37.fld5 = -_14.1;
_48 = _6 as isize;
(*_35) = (_29.0, _40.fld2.fld0);
_40.fld1.4 = _37.fld1.0 / 1491031919_u32;
_34.fld3 = _19.fld0;
_21.fld4 = _37.fld2;
_42.fld1.fld0 = (_1.fld1.fld1, _29, _38, _37.fld4);
_42.fld6.fld1.fld2 = _32.fld2 % 16708363539590938606_u64;
Goto(bb22)
}
bb22 = {
_1 = Adt56 { fld0: _22,fld1: _10.fld1 };
_42.fld6.fld1.fld1 = _28 & _28;
_42.fld6.fld0 = _1.fld0;
_37.fld1 = (_25, _40.fld2.fld1.1, _40.fld2.fld1.1);
_46.fld0 = (_37.fld1.0,);
_14.2 = !_21.fld6.2;
_34.fld3 = _27 as u64;
_43 = core::ptr::addr_of!(_40.fld1.0);
_37.fld5 = -_21.fld6.1;
RET.2.0 = _34.fld2 - _34.fld2;
_9 = _6;
_13 = _14.0;
_27 = _34.fld2 * _24;
RET.3 = [_14.2,_33];
_40.fld1.3 = _21.fld2 as f32;
(*_43).1 = _11.2 as f64;
Call(RET = fn14(_37.fld0, _42.fld1.fld0.1, _29, _16, (*_20), _13, _15, _40.fld2.fld1, _25, _40.fld1.0.1, (*_20), (*_43).1, _43, _15, _21.fld4, _14.2), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_37.fld1.1 = _37.fld1.2;
_31 = _40.fld1.0.1 as i8;
_41 = [(*_43).0,_40.fld1.0.0,_29.1,(*_43).0,_40.fld1.0.0,_11.0];
_25 = _40.fld2.fld1.0 - _46.fld0.0;
_42.fld4 = [_37.fld1.0,_40.fld1.4,_40.fld1.2.0,_40.fld2.fld1.0,_46.fld0.0,_40.fld1.4,_40.fld1.4,_40.fld1.4];
_34.fld6.0 = _1.fld0 as i64;
Goto(bb24)
}
bb24 = {
Call(_60 = dump_var(10_usize, 48_usize, Move(_48), 11_usize, Move(_11), 39_usize, Move(_39), 22_usize, Move(_22)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_60 = dump_var(10_usize, 23_usize, Move(_23), 31_usize, Move(_31), 16_usize, Move(_16), 3_usize, Move(_3)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_60 = dump_var(10_usize, 33_usize, Move(_33), 25_usize, Move(_25), 8_usize, Move(_8), 17_usize, Move(_17)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: f32,mut _2: f32,mut _3: i128,mut _4: [u32; 8],mut _5: bool,mut _6: f32,mut _7: [u128; 8]) -> isize {
mir! {
type RET = isize;
let _8: isize;
let _9: Adt54;
let _10: ((i8, (i128, i128, i32), u128, i16), usize);
let _11: (i8, i128, *mut u8, usize);
let _12: char;
let _13: Adt60;
let _14: isize;
let _15: *const ((i8, (i128, i128, i32), u128, i16),);
let _16: Adt51;
let _17: *mut u8;
let _18: usize;
let _19: i8;
let _20: i32;
let _21: char;
let _22: f32;
let _23: bool;
let _24: isize;
let _25: Adt54;
let _26: u8;
let _27: [char; 1];
let _28: f32;
let _29: char;
let _30: *const bool;
let _31: (i128, f64);
let _32: ();
let _33: ();
{
_3 = -120684248874844271749149489187449760853_i128;
_1 = -_6;
RET = 9223372036854775807_isize << _3;
_4 = [1696519090_u32,3678120450_u32,15108126_u32,197018596_u32,4102670571_u32,4012211036_u32,1547680426_u32,935360164_u32];
_10.0.0 = (-44_i8);
RET = _3 as isize;
RET = 109_isize;
_9.fld1 = !4099478843818268279_u64;
RET = (-9223372036854775808_isize) << _3;
_10.0.1.1 = _10.0.0 as i128;
_1 = -_2;
_10.1 = _6 as usize;
_6 = _2 / 1_f32;
_10.0.0 = !(-120_i8);
_4 = [3603400920_u32,1911813524_u32,2757268060_u32,2362632533_u32,1279318392_u32,945137767_u32,568554810_u32,2528769914_u32];
_11.3 = !_10.1;
_13.fld3.fld0 = !_5;
_12 = '\u{fcb4e}';
RET = _9.fld1 as isize;
RET = !9223372036854775807_isize;
Goto(bb1)
}
bb1 = {
RET = !82_isize;
_10.0.1.0 = _10.0.1.1 >> _10.1;
_13.fld3.fld1 = Adt51 { fld0: _4,fld1: _10.0.0,fld2: _9.fld1 };
_10.0.1.0 = _3 * _10.0.1.1;
_10.0.0 = !_13.fld3.fld1.fld1;
_16.fld0 = [2268658912_u32,3102730499_u32,679185592_u32,1691348640_u32,1982519742_u32,333490003_u32,649787933_u32,73462557_u32];
_10.0.2 = 44337111989077991244959045452956326278_u128;
_12 = '\u{30dae}';
_13.fld3.fld0 = _5;
_8 = !(-9223372036854775808_isize);
_11.0 = _13.fld3.fld1.fld1;
RET = _2 as isize;
_8 = !34_isize;
_13.fld1 = [_11.3];
_16.fld2 = _9.fld1 % 4203818440733601248_u64;
_13.fld3.fld1 = Adt51 { fld0: _4,fld1: _11.0,fld2: _9.fld1 };
_19 = _10.0.0 << _11.3;
_19 = _10.0.2 as i8;
_16.fld2 = _10.0.2 as u64;
Goto(bb2)
}
bb2 = {
_16.fld0 = _4;
_10.1 = _11.3;
_10.0.1.2 = !378024911_i32;
_11.1 = _10.0.1.1 << _10.1;
_14 = _8 - _8;
Goto(bb3)
}
bb3 = {
_16 = Adt51 { fld0: _13.fld3.fld1.fld0,fld1: _11.0,fld2: _13.fld3.fld1.fld2 };
_8 = _12 as isize;
_14 = _8;
_6 = _2;
_18 = _19 as usize;
_11.0 = _10.0.0;
_13.fld3.fld1.fld2 = _16.fld2 * _9.fld1;
_13.fld1 = [_10.1];
_11.3 = _10.1 & _10.1;
_13.fld3.fld1.fld1 = !_19;
_13.fld3.fld1.fld0 = [4181575922_u32,4026205729_u32,243048898_u32,4144843598_u32,3442394613_u32,2158991196_u32,743461991_u32,1629280651_u32];
_12 = '\u{84162}';
_10.0.1.2 = !(-312537369_i32);
_5 = !_13.fld3.fld0;
_11.1 = !_3;
_1 = _2 + _2;
_16.fld2 = _14 as u64;
_21 = _12;
_5 = !_13.fld3.fld0;
_13.fld0 = [31006_u16,36549_u16,16117_u16,43936_u16];
_6 = 192_u8 as f32;
_11.3 = _10.1 * _18;
match _10.0.2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
44337111989077991244959045452956326278 => bb11,
_ => bb10
}
}
bb4 = {
_16.fld0 = _4;
_10.1 = _11.3;
_10.0.1.2 = !378024911_i32;
_11.1 = _10.0.1.1 << _10.1;
_14 = _8 - _8;
Goto(bb3)
}
bb5 = {
RET = !82_isize;
_10.0.1.0 = _10.0.1.1 >> _10.1;
_13.fld3.fld1 = Adt51 { fld0: _4,fld1: _10.0.0,fld2: _9.fld1 };
_10.0.1.0 = _3 * _10.0.1.1;
_10.0.0 = !_13.fld3.fld1.fld1;
_16.fld0 = [2268658912_u32,3102730499_u32,679185592_u32,1691348640_u32,1982519742_u32,333490003_u32,649787933_u32,73462557_u32];
_10.0.2 = 44337111989077991244959045452956326278_u128;
_12 = '\u{30dae}';
_13.fld3.fld0 = _5;
_8 = !(-9223372036854775808_isize);
_11.0 = _13.fld3.fld1.fld1;
RET = _2 as isize;
_8 = !34_isize;
_13.fld1 = [_11.3];
_16.fld2 = _9.fld1 % 4203818440733601248_u64;
_13.fld3.fld1 = Adt51 { fld0: _4,fld1: _11.0,fld2: _9.fld1 };
_19 = _10.0.0 << _11.3;
_19 = _10.0.2 as i8;
_16.fld2 = _10.0.2 as u64;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_10.0.3 = -(-21602_i16);
_23 = _5 | _5;
_10.1 = _21 as usize;
_10.0.3 = 30624_i16 >> _11.3;
_13.fld3.fld0 = _23;
_8 = _14;
_6 = _2;
_11.2 = core::ptr::addr_of_mut!(_26);
_10.0.2 = 248820729958906216862393736510242871315_u128;
_6 = _10.0.1.0 as f32;
_18 = !_10.1;
_26 = (-6758041646287019388_i64) as u8;
_13.fld3.fld0 = _23;
_12 = _21;
_11.1 = -_10.0.1.1;
_11.3 = !_18;
_10.0.1.0 = _10.0.3 as i128;
Goto(bb12)
}
bb12 = {
_22 = -_1;
_26 = !139_u8;
_11.1 = _10.0.1.0 >> _10.0.3;
_25.fld1 = !_13.fld3.fld1.fld2;
Goto(bb13)
}
bb13 = {
_23 = !_5;
_10.0.1 = (_11.1, _11.1, (-1926796774_i32));
_28 = _1 / f32::NAN;
_10.0.1.0 = _10.0.1.1 * _10.0.1.1;
_10.0.1.0 = _10.0.1.1 | _11.1;
_13.fld1 = [_18];
_21 = _12;
_13.fld3.fld1.fld2 = !_16.fld2;
_10.0.0 = -_19;
_13.fld3.fld1.fld1 = -_16.fld1;
_24 = -_8;
_11.1 = _11.3 as i128;
_13.fld3.fld0 = !_23;
match _10.0.1.2 {
0 => bb8,
340282366920938463463374607429841414682 => bb15,
_ => bb14
}
}
bb14 = {
RET = !82_isize;
_10.0.1.0 = _10.0.1.1 >> _10.1;
_13.fld3.fld1 = Adt51 { fld0: _4,fld1: _10.0.0,fld2: _9.fld1 };
_10.0.1.0 = _3 * _10.0.1.1;
_10.0.0 = !_13.fld3.fld1.fld1;
_16.fld0 = [2268658912_u32,3102730499_u32,679185592_u32,1691348640_u32,1982519742_u32,333490003_u32,649787933_u32,73462557_u32];
_10.0.2 = 44337111989077991244959045452956326278_u128;
_12 = '\u{30dae}';
_13.fld3.fld0 = _5;
_8 = !(-9223372036854775808_isize);
_11.0 = _13.fld3.fld1.fld1;
RET = _2 as isize;
_8 = !34_isize;
_13.fld1 = [_11.3];
_16.fld2 = _9.fld1 % 4203818440733601248_u64;
_13.fld3.fld1 = Adt51 { fld0: _4,fld1: _11.0,fld2: _9.fld1 };
_19 = _10.0.0 << _11.3;
_19 = _10.0.2 as i8;
_16.fld2 = _10.0.2 as u64;
Goto(bb2)
}
bb15 = {
_18 = !_11.3;
_18 = _2 as usize;
_28 = _26 as f32;
_28 = _1 / 1_f32;
_10.0.1.0 = _10.0.3 as i128;
_6 = -_22;
_24 = -_8;
_12 = _21;
_24 = _8;
_11.1 = _10.0.1.0;
_23 = !_5;
_31.0 = _10.0.1.1;
_16.fld1 = -_13.fld3.fld1.fld1;
_11.2 = core::ptr::addr_of_mut!(_26);
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(11_usize, 12_usize, Move(_12), 4_usize, Move(_4), 7_usize, Move(_7), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(11_usize, 23_usize, Move(_23), 5_usize, Move(_5), 18_usize, Move(_18), 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: *const i64,mut _2: i128,mut _3: Adt51,mut _4: (i64, f32, u16),mut _5: u32,mut _6: i64) -> [usize; 1] {
mir! {
type RET = [usize; 1];
let _7: bool;
let _8: Adt57;
let _9: Adt55;
let _10: u16;
let _11: *const (f64, f32);
let _12: (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _13: u64;
let _14: isize;
let _15: isize;
let _16: u16;
let _17: (i128, f64);
let _18: Adt49;
let _19: isize;
let _20: u8;
let _21: Adt56;
let _22: char;
let _23: *mut *const i64;
let _24: [isize; 7];
let _25: *const (f64, f32);
let _26: char;
let _27: isize;
let _28: Adt54;
let _29: ();
let _30: ();
{
_1 = core::ptr::addr_of!((*_1));
_4.0 = (*_1) ^ _6;
(*_1) = !_4.0;
_6 = _3.fld2 as i64;
RET = [6_usize];
RET = [2567286102102200933_usize];
(*_1) = _6 * _4.0;
_3.fld1 = (-96_i8) * (-47_i8);
_3.fld0 = [_5,_5,_5,_5,_5,_5,_5,_5];
_4.0 = (*_1);
_4.0 = (*_1) - (*_1);
_4.0 = '\u{8d84b}' as i64;
_4.2 = (-9929_i16) as u16;
_4.0 = (*_1);
(*_1) = _6;
_1 = core::ptr::addr_of!((*_1));
_7 = (*_1) <= _4.0;
RET = [7_usize];
(*_1) = -_4.0;
_5 = _4.1 as u32;
_8.fld0 = !_3.fld2;
_9.fld4.1.0 = !_2;
_4.1 = _9.fld4.1.0 as f32;
Call(_7 = fn13(_6, _3.fld2, _4.0, _2, _6, _4.0, _4.2, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9.fld4.1 = (_2, _2, 964545014_i32);
_8.fld1 = [_9.fld4.1.2,_9.fld4.1.2,_9.fld4.1.2,_9.fld4.1.2];
_9.fld6 = ['\u{804d}'];
_5 = 3068914117_u32 >> (*_1);
RET = [7_usize];
(*_1) = _9.fld4.1.2 as i64;
Call(_10 = core::intrinsics::transmute(_4.2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3.fld1 = _9.fld4.1.0 as i8;
Goto(bb3)
}
bb3 = {
_9.fld0 = _5;
_9.fld2 = _4.2 as usize;
_9.fld3 = core::ptr::addr_of!((*_1));
(*_1) = !_4.0;
_9.fld5 = [9223372036854775807_isize,9223372036854775807_isize,43_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,7_isize];
_9.fld4.3 = -(-11927_i16);
_4.0 = -(*_1);
(*_1) = _4.0;
_12.2.1.1 = -_4.1;
_12.2.0 = 9223372036854775807_isize;
_11 = core::ptr::addr_of!(_12.2.1);
(*_1) = _4.0 * _4.0;
_4.2 = _2 as u16;
_9.fld6 = ['\u{1b45b}'];
_9.fld6 = ['\u{cde74}'];
match _9.fld4.1.2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
964545014 => bb12,
_ => bb11
}
}
bb4 = {
_3.fld1 = _9.fld4.1.0 as i8;
Goto(bb3)
}
bb5 = {
_9.fld4.1 = (_2, _2, 964545014_i32);
_8.fld1 = [_9.fld4.1.2,_9.fld4.1.2,_9.fld4.1.2,_9.fld4.1.2];
_9.fld6 = ['\u{804d}'];
_5 = 3068914117_u32 >> (*_1);
RET = [7_usize];
(*_1) = _9.fld4.1.2 as i64;
Call(_10 = core::intrinsics::transmute(_4.2), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_9.fld4.1 = (_2, _2, (-1279949536_i32));
_12.4 = _11;
(*_11).1 = _4.1 / 1_f32;
_9.fld6 = ['\u{ba900}'];
(*_1) = -_4.0;
RET = [_9.fld2];
_12.5 = _3.fld1;
_9.fld4.2 = 320096269912914246940023641356577319899_u128 ^ 154142134945197794460512979790314201568_u128;
_4 = (_6, (*_11).1, _10);
_7 = true ^ true;
_1 = core::ptr::addr_of!(_6);
_5 = !_9.fld0;
_12.4 = core::ptr::addr_of!(_12.2.1);
_18.fld1 = core::ptr::addr_of_mut!(_9.fld3);
_18.fld2 = !_12.2.0;
_9.fld0 = !_5;
match _9.fld4.1.2 {
340282366920938463463374607430488261920 => bb13,
_ => bb3
}
}
bb13 = {
_12.2.1.0 = _18.fld2 as f64;
(*_1) = _4.0 + _4.0;
_18.fld0 = [_4.2,_4.2,_10,_4.2];
_2 = !_9.fld4.1.1;
_8.fld1 = [_9.fld4.1.2,_9.fld4.1.2,_9.fld4.1.2,_9.fld4.1.2];
_4.0 = _6;
RET = [_9.fld2];
RET = [_9.fld2];
_17 = (_9.fld4.1.0, _12.2.1.0);
_17.1 = _12.5 as f64;
_17.0 = _9.fld4.1.0 - _9.fld4.1.0;
_18.fld6.1 = (*_11).1 - _12.2.1.1;
_14 = -_18.fld2;
_18.fld6.2 = _10;
_12.1 = core::ptr::addr_of_mut!(_20);
(*_11).1 = _4.1;
_12.2.1.0 = -_17.1;
(*_11).0 = _17.1;
_9.fld0 = !_5;
_9.fld2 = _4.1 as usize;
_18.fld1 = core::ptr::addr_of_mut!(_9.fld3);
_5 = !_9.fld0;
_2 = _9.fld4.1.1;
_18.fld4 = [_9.fld2];
_1 = _9.fld3;
match _12.2.0 {
0 => bb11,
1 => bb2,
2 => bb8,
3 => bb14,
4 => bb15,
9223372036854775807 => bb17,
_ => bb16
}
}
bb14 = {
_9.fld0 = _5;
_9.fld2 = _4.2 as usize;
_9.fld3 = core::ptr::addr_of!((*_1));
(*_1) = !_4.0;
_9.fld5 = [9223372036854775807_isize,9223372036854775807_isize,43_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,7_isize];
_9.fld4.3 = -(-11927_i16);
_4.0 = -(*_1);
(*_1) = _4.0;
_12.2.1.1 = -_4.1;
_12.2.0 = 9223372036854775807_isize;
_11 = core::ptr::addr_of!(_12.2.1);
(*_1) = _4.0 * _4.0;
_4.2 = _2 as u16;
_9.fld6 = ['\u{1b45b}'];
_9.fld6 = ['\u{cde74}'];
match _9.fld4.1.2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
964545014 => bb12,
_ => bb11
}
}
bb15 = {
Return()
}
bb16 = {
_3.fld1 = _9.fld4.1.0 as i8;
Goto(bb3)
}
bb17 = {
_15 = '\u{3b820}' as isize;
_4.1 = _9.fld4.3 as f32;
_17.0 = !_2;
_23 = _18.fld1;
_9.fld4.2 = 23109550822310892558811011188542136231_u128;
_2 = _9.fld4.1.0 | _9.fld4.1.0;
_12.2.1 = (_17.1, _18.fld6.1);
_19 = _4.2 as isize;
_20 = !42_u8;
_16 = _10;
_21.fld1.fld2 = _3.fld2 >> _9.fld4.2;
_12.2.0 = _17.0 as isize;
_9.fld4.1.2 = (*_11).0 as i32;
_21.fld1.fld0 = [_5,_9.fld0,_9.fld0,_5,_5,_9.fld0,_5,_9.fld0];
_12.3 = [_18.fld6.2,_16];
(*_11) = (_17.1, _18.fld6.1);
_24 = [_14,_19,_19,_12.2.0,_15,_19,_14];
_12.2.1.1 = _18.fld6.1;
_27 = _12.2.0 * _12.2.0;
_22 = '\u{ab98}';
_14 = _27 ^ _27;
RET = _18.fld4;
_4.1 = _9.fld4.2 as f32;
Goto(bb18)
}
bb18 = {
Call(_29 = dump_var(12_usize, 7_usize, Move(_7), 2_usize, Move(_2), 16_usize, Move(_16), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_29 = dump_var(12_usize, 10_usize, Move(_10), 27_usize, Move(_27), 30_usize, _30, 30_usize, _30), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: i64,mut _2: u64,mut _3: i64,mut _4: i128,mut _5: i64,mut _6: i64,mut _7: u16,mut _8: i64) -> bool {
mir! {
type RET = bool;
let _9: (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _10: u8;
let _11: isize;
let _12: u128;
let _13: bool;
let _14: [isize; 7];
let _15: bool;
let _16: Adt54;
let _17: f64;
let _18: Adt65;
let _19: Adt65;
let _20: Adt49;
let _21: i8;
let _22: [u128; 8];
let _23: f64;
let _24: usize;
let _25: i8;
let _26: Adt62;
let _27: f64;
let _28: (isize, (f64, f32));
let _29: i64;
let _30: [isize; 7];
let _31: Adt62;
let _32: *mut i16;
let _33: u16;
let _34: isize;
let _35: u128;
let _36: Adt65;
let _37: *const (f64, f32);
let _38: *const (i128, f64);
let _39: isize;
let _40: u64;
let _41: (isize, (f64, f32));
let _42: Adt64;
let _43: *const i64;
let _44: u64;
let _45: f64;
let _46: f32;
let _47: ();
let _48: ();
{
_3 = _8;
Goto(bb1)
}
bb1 = {
_7 = !36789_u16;
_8 = _1 << _5;
RET = true;
_2 = 3588923306920037273_u64;
_9.0 = !(-16543_i16);
_9.4 = core::ptr::addr_of!(_9.2.1);
_6 = _8;
_9.2.1.1 = _4 as f32;
_9.2.1.1 = _7 as f32;
_10 = 63_i8 as u8;
_9.1 = core::ptr::addr_of_mut!(_10);
_6 = 1247046521_u32 as i64;
_8 = 121417532938580334332043921076016953029_u128 as i64;
_9.2.1.1 = 8075090893843500416_usize as f32;
_9.2.0 = -113_isize;
_9.2.1.1 = _4 as f32;
_6 = _1 >> _1;
_8 = -_1;
_9.2.1.0 = _10 as f64;
_9.2.1.1 = _3 as f32;
_11 = _2 as isize;
RET = !true;
_5 = _6;
_13 = !false;
_4 = (-623923989031670077474485615515044800_i128);
_9.0 = 24408_i16 - 31854_i16;
Goto(bb2)
}
bb2 = {
_6 = _5;
_6 = _5;
_12 = 199659081292325130076325299256839282895_u128;
_2 = 17698684287660944079_u64;
_1 = _5;
Goto(bb3)
}
bb3 = {
_8 = '\u{1f50b}' as i64;
_11 = _9.2.0 | _9.2.0;
_14 = [_11,_11,_11,_11,_11,_11,_11];
_8 = _1 & _1;
_12 = 133264488379710709657435160967206561261_u128 % 144099708435282259691525649862853193621_u128;
_9.3 = [_7,_7];
_9.2.1.1 = 416066570_i32 as f32;
_11 = _9.2.1.1 as isize;
_14 = [_11,_9.2.0,_11,_11,_11,_11,_9.2.0];
_9.2.1.1 = 123_i8 as f32;
_9.5 = _11 as i8;
_13 = false;
_13 = !true;
RET = _13;
RET = _5 <= _6;
_12 = 177528310071997605237365349089316275530_u128;
RET = _13;
_9.0 = -148_i16;
_15 = _13 | _13;
_3 = _5;
_2 = !3188383549009641026_u64;
_5 = _6;
_14 = [_11,_9.2.0,_9.2.0,_11,_11,_11,_9.2.0];
_9.3 = [_7,_7];
_9.3 = [_7,_7];
Goto(bb4)
}
bb4 = {
_9.0 = 28809_i16 ^ 21417_i16;
_15 = _4 >= _4;
_9.2.0 = _11 & _11;
_1 = _8;
_9.5 = (-36_i8);
_12 = 133218637315905880114996441733459743571_u128;
Goto(bb5)
}
bb5 = {
_14 = [_9.2.0,_11,_11,_11,_9.2.0,_9.2.0,_9.2.0];
_9.2.0 = _15 as isize;
_11 = !_9.2.0;
_9.0 = (-29930_i16);
_17 = -_9.2.1.0;
_18.fld4.fld2.fld6 = core::ptr::addr_of_mut!(_18.fld4.fld2.fld1.2);
_18.fld4.fld2.fld1.0 = _12 as u32;
_19.fld4.fld2.fld1 = (_18.fld4.fld2.fld1.0, _10, _10);
_18.fld4.fld1.0.1 = _17;
_18.fld4.fld1.2 = (_19.fld4.fld2.fld1.0,);
_19.fld4.fld2.fld1.2 = _19.fld4.fld2.fld1.1;
_16.fld0 = _9.4;
_18.fld4.fld2.fld1.2 = _19.fld4.fld2.fld1.2;
Goto(bb6)
}
bb6 = {
_19.fld0 = (_9.5, _4, _9.1, 4703289141952466385_usize);
_19.fld4.fld1.1 = -_11;
_21 = -_19.fld0.0;
_6 = _3;
_4 = -_19.fld0.1;
_19.fld1 = _19.fld0.2;
_20.fld0 = [_7,_7,_7,_7];
_18.fld3.fld4.1.0 = -_19.fld0.1;
_18.fld4.fld2.fld1 = (_19.fld4.fld2.fld1.0, _19.fld4.fld2.fld1.1, _19.fld4.fld2.fld1.2);
_19.fld4.fld1.0 = (_19.fld0.1, _18.fld4.fld1.0.1);
_18.fld4.fld4 = core::ptr::addr_of!(_1);
Goto(bb7)
}
bb7 = {
_16 = Adt54 { fld0: _9.4,fld1: _2 };
_9.2.1.1 = _7 as f32;
_20.fld6.0 = _6 & _1;
_6 = _1;
_14 = [_11,_19.fld4.fld1.1,_11,_19.fld4.fld1.1,_9.2.0,_9.2.0,_19.fld4.fld1.1];
_18.fld0 = (_9.5, _18.fld3.fld4.1.0, _19.fld1, _19.fld0.3);
_18.fld3.fld6 = ['\u{db868}'];
_19.fld3.fld2 = _19.fld0.3;
_19.fld3.fld4.1.2 = -(-1397606553_i32);
_22 = [_12,_12,_12,_12,_12,_12,_12,_12];
_18.fld3.fld5 = [_9.2.0,_11,_9.2.0,_19.fld4.fld1.1,_19.fld4.fld1.1,_19.fld4.fld1.1,_9.2.0];
_18.fld3.fld0 = _19.fld4.fld2.fld1.2 as u32;
_19.fld4.fld1.0.0 = -_19.fld0.1;
_26 = Adt62 { fld0: _18.fld4.fld1.2,fld1: _9.2.1.1,fld2: _18.fld4.fld1.2.0 };
_16 = Adt54 { fld0: _9.4,fld1: _2 };
_20.fld6 = (_1, _9.2.1.1, _7);
_19.fld3.fld1 = core::ptr::addr_of!(_19.fld4.fld2.fld0);
_19.fld4.fld3 = _18.fld3.fld5;
_18.fld4.fld1.4 = _18.fld4.fld1.2.0;
_13 = _15;
_24 = !_19.fld3.fld2;
_19.fld3.fld4.1.0 = _19.fld4.fld1.0.0 << _8;
Goto(bb8)
}
bb8 = {
_25 = _9.5;
_20.fld3 = _2;
_18.fld3.fld4.0 = _19.fld0.0 - _21;
_19.fld4.fld3 = _14;
_18.fld3.fld3 = core::ptr::addr_of!(_8);
_6 = _1 - _3;
_19.fld3.fld0 = !_18.fld4.fld1.4;
_19.fld4.fld1.2 = (_26.fld0.0,);
_19.fld4.fld1.2.0 = '\u{f9b2f}' as u32;
_18.fld4.fld5 = _19.fld4.fld2.fld1.1;
_18.fld0 = (_9.5, _19.fld3.fld4.1.0, _9.1, _24);
_9.4 = _16.fld0;
_18.fld0.0 = _9.5;
_9.1 = _18.fld0.2;
_29 = _8;
_18.fld4.fld2.fld3 = core::ptr::addr_of_mut!(_19.fld4.fld4);
_9.3 = [_7,_7];
_5 = _20.fld6.0 + _29;
_19.fld0.0 = -_18.fld3.fld4.0;
_19.fld0 = _18.fld0;
_19.fld3.fld4.2 = _19.fld3.fld4.1.0 as u128;
_18.fld3.fld5 = [_11,_9.2.0,_19.fld4.fld1.1,_19.fld4.fld1.1,_9.2.0,_11,_9.2.0];
_19.fld3.fld0 = !_18.fld4.fld1.4;
match _18.fld0.0 {
0 => bb7,
1 => bb5,
2 => bb3,
3 => bb9,
340282366920938463463374607431768211420 => bb11,
_ => bb10
}
}
bb9 = {
_6 = _5;
_6 = _5;
_12 = 199659081292325130076325299256839282895_u128;
_2 = 17698684287660944079_u64;
_1 = _5;
Goto(bb3)
}
bb10 = {
_7 = !36789_u16;
_8 = _1 << _5;
RET = true;
_2 = 3588923306920037273_u64;
_9.0 = !(-16543_i16);
_9.4 = core::ptr::addr_of!(_9.2.1);
_6 = _8;
_9.2.1.1 = _4 as f32;
_9.2.1.1 = _7 as f32;
_10 = 63_i8 as u8;
_9.1 = core::ptr::addr_of_mut!(_10);
_6 = 1247046521_u32 as i64;
_8 = 121417532938580334332043921076016953029_u128 as i64;
_9.2.1.1 = 8075090893843500416_usize as f32;
_9.2.0 = -113_isize;
_9.2.1.1 = _4 as f32;
_6 = _1 >> _1;
_8 = -_1;
_9.2.1.0 = _10 as f64;
_9.2.1.1 = _3 as f32;
_11 = _2 as isize;
RET = !true;
_5 = _6;
_13 = !false;
_4 = (-623923989031670077474485615515044800_i128);
_9.0 = 24408_i16 - 31854_i16;
Goto(bb2)
}
bb11 = {
Goto(bb12)
}
bb12 = {
_18.fld4.fld2.fld0 = _18.fld4.fld1.0.1 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002572569881201535_f64;
_19.fld3.fld4.0 = _18.fld3.fld4.0 << _29;
_18.fld4.fld3 = [_11,_19.fld4.fld1.1,_11,_9.2.0,_19.fld4.fld1.1,_11,_9.2.0];
_20.fld5 = core::ptr::addr_of_mut!(_18.fld4.fld5);
_19.fld4.fld1.2 = (_26.fld2,);
_19.fld3.fld4.1 = (_19.fld0.1, _19.fld0.1, 1631750025_i32);
_19.fld3.fld6 = ['\u{c643e}'];
Goto(bb13)
}
bb13 = {
_31.fld2 = _26.fld2;
_31.fld0 = (_19.fld4.fld1.2.0,);
_18.fld3.fld4.0 = _19.fld3.fld4.0 + _19.fld3.fld4.0;
_19.fld2 = [_19.fld3.fld4.2,_19.fld3.fld4.2,_19.fld3.fld4.2,_19.fld3.fld4.2,_19.fld3.fld4.2,_19.fld3.fld4.2,_19.fld3.fld4.2,_19.fld3.fld4.2];
_20.fld2 = -_19.fld4.fld1.1;
_13 = _15;
_20.fld1 = core::ptr::addr_of_mut!(_18.fld3.fld3);
_18.fld4.fld1.0.1 = _9.2.1.0;
_36.fld4.fld4 = _18.fld3.fld3;
match _19.fld3.fld4.1.2 {
1631750025 => bb15,
_ => bb14
}
}
bb14 = {
_7 = !36789_u16;
_8 = _1 << _5;
RET = true;
_2 = 3588923306920037273_u64;
_9.0 = !(-16543_i16);
_9.4 = core::ptr::addr_of!(_9.2.1);
_6 = _8;
_9.2.1.1 = _4 as f32;
_9.2.1.1 = _7 as f32;
_10 = 63_i8 as u8;
_9.1 = core::ptr::addr_of_mut!(_10);
_6 = 1247046521_u32 as i64;
_8 = 121417532938580334332043921076016953029_u128 as i64;
_9.2.1.1 = 8075090893843500416_usize as f32;
_9.2.0 = -113_isize;
_9.2.1.1 = _4 as f32;
_6 = _1 >> _1;
_8 = -_1;
_9.2.1.0 = _10 as f64;
_9.2.1.1 = _3 as f32;
_11 = _2 as isize;
RET = !true;
_5 = _6;
_13 = !false;
_4 = (-623923989031670077474485615515044800_i128);
_9.0 = 24408_i16 - 31854_i16;
Goto(bb2)
}
bb15 = {
_36.fld4.fld1.1 = !_9.2.0;
_36.fld4.fld2.fld7 = core::ptr::addr_of!(_28.1);
_16.fld0 = core::ptr::addr_of!(_28.1);
_28.1.1 = _9.2.1.1 - _9.2.1.1;
_36.fld3.fld2 = _20.fld6.2 as usize;
_36.fld4.fld2.fld0 = -_9.2.1.0;
_36.fld4.fld1.3 = -_9.2.1.1;
_36.fld4.fld2.fld1 = _18.fld4.fld2.fld1;
_19.fld1 = core::ptr::addr_of_mut!(_36.fld4.fld5);
_18.fld1 = core::ptr::addr_of_mut!(_18.fld4.fld5);
_23 = -_18.fld4.fld2.fld0;
_19.fld4.fld1.3 = _9.2.1.1 - _9.2.1.1;
_41.1.1 = _18.fld3.fld0 as f32;
_18.fld4.fld2.fld5 = _9.2.1.1;
_36.fld0.0 = !_18.fld3.fld4.0;
_18.fld1 = _20.fld5;
_18.fld3.fld4.2 = _16.fld1 as u128;
Goto(bb16)
}
bb16 = {
Call(_47 = dump_var(13_usize, 2_usize, Move(_2), 12_usize, Move(_12), 21_usize, Move(_21), 29_usize, Move(_29)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(13_usize, 14_usize, Move(_14), 7_usize, Move(_7), 10_usize, Move(_10), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(13_usize, 3_usize, Move(_3), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: f64,mut _2: (i128, i128, i32),mut _3: (i128, i128, i32),mut _4: [u16; 2],mut _5: bool,mut _6: i64,mut _7: isize,mut _8: (u32, u8, u8),mut _9: u32,mut _10: f64,mut _11: bool,mut _12: f64,mut _13: *const (i128, f64),mut _14: isize,mut _15: [usize; 1],mut _16: u16) -> (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8) {
mir! {
type RET = (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _17: *mut u8;
let _18: [u128; 8];
let _19: u64;
let _20: char;
let _21: isize;
let _22: Adt57;
let _23: f64;
let _24: f64;
let _25: u32;
let _26: isize;
let _27: bool;
let _28: Adt53;
let _29: usize;
let _30: (u32, u8, u8);
let _31: f64;
let _32: [i128; 4];
let _33: u8;
let _34: [usize; 1];
let _35: Adt61;
let _36: u8;
let _37: [i32; 4];
let _38: bool;
let _39: i8;
let _40: bool;
let _41: char;
let _42: isize;
let _43: [isize; 7];
let _44: i8;
let _45: f32;
let _46: (u32,);
let _47: u64;
let _48: ((i8, (i128, i128, i32), u128, i16), usize);
let _49: bool;
let _50: f64;
let _51: isize;
let _52: Adt57;
let _53: *const i64;
let _54: *mut i16;
let _55: char;
let _56: i128;
let _57: (i8, (i128, i128, i32), u128, i16);
let _58: *mut i16;
let _59: f64;
let _60: f64;
let _61: [i128; 4];
let _62: f32;
let _63: Adt55;
let _64: isize;
let _65: u128;
let _66: isize;
let _67: u64;
let _68: usize;
let _69: i16;
let _70: u128;
let _71: i8;
let _72: [u16; 4];
let _73: Adt65;
let _74: Adt51;
let _75: Adt50;
let _76: i16;
let _77: Adt51;
let _78: (i8, (i128, i128, i32), u128, i16);
let _79: Adt50;
let _80: (i8, (i128, i128, i32), u128, i16);
let _81: u128;
let _82: f32;
let _83: i16;
let _84: isize;
let _85: (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _86: bool;
let _87: f64;
let _88: Adt65;
let _89: isize;
let _90: bool;
let _91: Adt51;
let _92: (isize, (f64, f32));
let _93: f64;
let _94: i128;
let _95: isize;
let _96: isize;
let _97: Adt62;
let _98: bool;
let _99: [isize; 7];
let _100: Adt60;
let _101: Adt50;
let _102: ();
let _103: ();
{
(*_13).1 = 31572_i16 as f64;
_2.1 = !_2.0;
_7 = _14;
RET.1 = core::ptr::addr_of_mut!(_8.1);
(*_13).0 = _2.0 | _3.0;
_7 = _14 >> _3.2;
_2.0 = 408_i16 as i128;
_10 = _8.2 as f64;
RET.3 = [_16,_16];
(*_13).0 = _3.0;
_19 = 12185433983802306940656228252887669945_u128 as u64;
_18 = [300132789091315219554382210804054668959_u128,35285731011423050977950259454138060545_u128,75681400632868301549052285865503354591_u128,333918164468120882005360616675738136190_u128,149692305621179012568906907094695582756_u128,148882873046185837590560115554295028380_u128,81852713267194260323450294897072843785_u128,20943759084942466485881474595676431927_u128];
_9 = _8.0 >> _3.2;
RET.5 = 125_i8 * 42_i8;
_20 = '\u{107ecc}';
_3.1 = _19 as i128;
_2.0 = _7 as i128;
RET.1 = core::ptr::addr_of_mut!(_8.1);
_22.fld1 = [_2.2,_3.2,_3.2,_3.2];
_22.fld0 = _19;
Goto(bb1)
}
bb1 = {
_3.0 = (*_13).0;
RET.1 = core::ptr::addr_of_mut!(_8.2);
match _8.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
246 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_9 = _8.0 | _8.0;
RET.2.0 = !_7;
_16 = 53489_u16;
_13 = core::ptr::addr_of!((*_13));
RET.2.1.0 = -(*_13).1;
RET.0 = -(-23044_i16);
_9 = _8.0;
(*_13).0 = _7 as i128;
_2 = ((*_13).0, (*_13).0, _3.2);
_24 = -_10;
_15 = [492372196711064621_usize];
RET.3 = _4;
_27 = _1 <= _1;
_23 = -(*_13).1;
_19 = !_22.fld0;
RET.0 = 8728_i16 << (*_13).0;
RET.5 = -1_i8;
_22.fld0 = _19 / 6395189807321623921_u64;
_21 = _7;
RET.1 = core::ptr::addr_of_mut!(_8.1);
_12 = -(*_13).1;
match _8.1 {
0 => bb1,
1 => bb5,
246 => bb10,
_ => bb8
}
}
bb10 = {
_17 = core::ptr::addr_of_mut!(_8.2);
RET.1 = _17;
Goto(bb11)
}
bb11 = {
_22.fld1 = [_2.2,_3.2,_3.2,_3.2];
_3 = ((*_13).0, (*_13).0, _2.2);
_28.fld2.fld1.0 = _9;
_3.1 = (*_13).0;
_20 = '\u{f0680}';
_29 = !6_usize;
_16 = _10 as u16;
match _8.2 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
202 => bb18,
_ => bb17
}
}
bb12 = {
_17 = core::ptr::addr_of_mut!(_8.2);
RET.1 = _17;
Goto(bb11)
}
bb13 = {
_9 = _8.0 | _8.0;
RET.2.0 = !_7;
_16 = 53489_u16;
_13 = core::ptr::addr_of!((*_13));
RET.2.1.0 = -(*_13).1;
RET.0 = -(-23044_i16);
_9 = _8.0;
(*_13).0 = _7 as i128;
_2 = ((*_13).0, (*_13).0, _3.2);
_24 = -_10;
_15 = [492372196711064621_usize];
RET.3 = _4;
_27 = _1 <= _1;
_23 = -(*_13).1;
_19 = !_22.fld0;
RET.0 = 8728_i16 << (*_13).0;
RET.5 = -1_i8;
_22.fld0 = _19 / 6395189807321623921_u64;
_21 = _7;
RET.1 = core::ptr::addr_of_mut!(_8.1);
_12 = -(*_13).1;
match _8.1 {
0 => bb1,
1 => bb5,
246 => bb10,
_ => bb8
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_3.0 = (*_13).0;
RET.1 = core::ptr::addr_of_mut!(_8.2);
match _8.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
246 => bb9,
_ => bb8
}
}
bb17 = {
Return()
}
bb18 = {
RET.5 = !(-89_i8);
_5 = _27 & _27;
_28.fld1.4 = 266870560048508799436227869029566918559_u128 as u32;
_28.fld1.1 = _7 * _21;
_8 = (_28.fld2.fld1.0, 35_u8, 60_u8);
_30.2 = _29 as u8;
_28.fld1.0.1 = _10;
_3.0 = -(*_13).0;
_28.fld2.fld5 = _29 as f32;
_30.2 = (*_17) * _8.2;
_26 = _21 | _28.fld1.1;
_5 = _11;
_19 = _22.fld0 - _22.fld0;
RET.2.0 = _26 << _6;
RET.0 = !29098_i16;
(*_17) = _8.1 + _30.2;
_28.fld2.fld1 = _8;
_25 = !_28.fld2.fld1.0;
RET.5 = (-60_i8);
RET.2.1.1 = _28.fld2.fld5;
_28.fld2.fld3 = core::ptr::addr_of_mut!(_28.fld4);
_8.2 = _28.fld2.fld1.2;
_28.fld2.fld4 = -(-26692_i16);
_2 = ((*_13).0, _3.0, _3.2);
_28.fld2.fld1.0 = _29 as u32;
Goto(bb19)
}
bb19 = {
_28.fld4 = core::ptr::addr_of!(_6);
_8.0 = _28.fld2.fld1.0;
_12 = _24 - _1;
_2.0 = 223853252603741179990940650262900670089_u128 as i128;
_22.fld1 = [_3.2,_3.2,_2.2,_2.2];
_2.0 = _28.fld1.1 as i128;
_33 = _8.2 | _8.2;
_14 = _28.fld2.fld1.0 as isize;
_28.fld2.fld1.0 = 8_i8 as u32;
_28.fld2.fld2 = _15;
(*_13).0 = _6 as i128;
_1 = _28.fld2.fld4 as f64;
Goto(bb20)
}
bb20 = {
RET.3 = [_16,_16];
_28.fld1.0.0 = !(*_13).0;
RET.2.0 = _26;
_12 = _24;
RET.2.0 = -_28.fld1.1;
_28.fld1.0.1 = _8.2 as f64;
_5 = !_11;
Goto(bb21)
}
bb21 = {
_30.0 = _3.2 as u32;
_28.fld2.fld2 = [_29];
RET.1 = _17;
_2 = ((*_13).0, _28.fld1.0.0, _3.2);
_28.fld3 = [_28.fld1.1,_21,_26,_28.fld1.1,_26,_26,_26];
_28.fld2.fld6 = core::ptr::addr_of_mut!(_28.fld2.fld1.2);
_2.0 = _3.1;
_24 = _22.fld0 as f64;
_3.0 = (*_13).0;
RET.2.0 = !_28.fld1.1;
_37 = [_3.2,_2.2,_3.2,_3.2];
_35.fld0 = (*_13).0 as i32;
_28.fld5 = _8.2 / 210_u8;
RET.2.1.1 = _30.0 as f32;
_28.fld2.fld1 = _8;
match _8.1 {
0 => bb22,
35 => bb24,
_ => bb23
}
}
bb22 = {
Return()
}
bb23 = {
Return()
}
bb24 = {
_11 = !_5;
_8.2 = _28.fld5 % 161_u8;
_9 = _6 as u32;
(*_17) = _30.2;
_40 = _11;
_26 = _33 as isize;
RET.2.1.0 = _28.fld1.0.1;
RET.2.1 = (_12, _28.fld2.fld5);
_17 = core::ptr::addr_of_mut!((*_17));
_35.fld2 = _16 as u32;
_3.0 = _21 as i128;
RET.2.1.0 = _12;
_2.1 = (*_13).0 >> _28.fld5;
RET.2.1.1 = _28.fld2.fld5 - _28.fld2.fld5;
RET.3 = [_16,_16];
_39 = (-26_i8) & 65_i8;
_28.fld1.0.0 = (*_13).0 & (*_13).0;
_26 = !_28.fld1.1;
_2 = ((*_13).0, _28.fld1.0.0, _3.2);
Call(_3.2 = core::intrinsics::bswap(_2.2), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_2.2 = _26 as i32;
_26 = _28.fld1.1 & _21;
_23 = _24 + _28.fld1.0.1;
_22.fld0 = _11 as u64;
_35.fld3 = [_16,_16];
_28.fld2.fld3 = core::ptr::addr_of_mut!(_28.fld4);
RET.2.1.0 = -_23;
_2 = _3;
_28.fld1.1 = _26;
_49 = !_5;
_7 = _6 as isize;
_30.1 = !_33;
RET.2.0 = -_28.fld1.1;
(*_13).1 = _23 + _23;
match _8.1 {
0 => bb1,
1 => bb20,
2 => bb26,
3 => bb27,
35 => bb29,
_ => bb28
}
}
bb26 = {
Return()
}
bb27 = {
_3.0 = (*_13).0;
RET.1 = core::ptr::addr_of_mut!(_8.2);
match _8.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
246 => bb9,
_ => bb8
}
}
bb28 = {
Return()
}
bb29 = {
_40 = _5;
_48.0 = (_39, _3, 215746769434835639884817634268243337576_u128, _28.fld2.fld4);
_46 = (_9,);
_39 = -_48.0.0;
_49 = !_27;
_51 = !_28.fld1.1;
_48.0.1.1 = (*_13).0;
_50 = _28.fld1.0.1;
_17 = core::ptr::addr_of_mut!(_8.1);
_24 = -(*_13).1;
_8.0 = _29 as u32;
_28.fld1.4 = _9 << _35.fld0;
_47 = _19;
_57.1.2 = _35.fld0 >> _48.0.1.1;
_48.0.1 = _2;
_45 = _28.fld2.fld5 - _28.fld2.fld5;
_28.fld1 = ((*_13), _51, _46, _45, _30.0);
_57.3 = _48.0.3;
_4 = [_16,_16];
(*_13).1 = _24;
match _48.0.2 {
0 => bb27,
1 => bb23,
2 => bb26,
3 => bb30,
4 => bb31,
215746769434835639884817634268243337576 => bb33,
_ => bb32
}
}
bb30 = {
_11 = !_5;
_8.2 = _28.fld5 % 161_u8;
_9 = _6 as u32;
(*_17) = _30.2;
_40 = _11;
_26 = _33 as isize;
RET.2.1.0 = _28.fld1.0.1;
RET.2.1 = (_12, _28.fld2.fld5);
_17 = core::ptr::addr_of_mut!((*_17));
_35.fld2 = _16 as u32;
_3.0 = _21 as i128;
RET.2.1.0 = _12;
_2.1 = (*_13).0 >> _28.fld5;
RET.2.1.1 = _28.fld2.fld5 - _28.fld2.fld5;
RET.3 = [_16,_16];
_39 = (-26_i8) & 65_i8;
_28.fld1.0.0 = (*_13).0 & (*_13).0;
_26 = !_28.fld1.1;
_2 = ((*_13).0, _28.fld1.0.0, _3.2);
Call(_3.2 = core::intrinsics::bswap(_2.2), ReturnTo(bb25), UnwindUnreachable())
}
bb31 = {
Return()
}
bb32 = {
Return()
}
bb33 = {
_4 = _35.fld3;
_57.0 = -_48.0.0;
_7 = _51 >> _28.fld2.fld1.2;
_28.fld2.fld1.2 = _28.fld1.3 as u8;
_30.0 = _29 as u32;
_47 = !_19;
RET.3 = _35.fld3;
_28.fld2.fld5 = -_45;
_9 = !_28.fld1.2.0;
_22 = Adt57 { fld0: _19,fld1: _37 };
_30.1 = _48.0.0 as u8;
_28.fld2.fld0 = _51 as f64;
_9 = _28.fld1.4;
Goto(bb34)
}
bb34 = {
_23 = _28.fld1.0.1;
_9 = _28.fld1.2.0;
RET.2.1.0 = -_23;
_47 = _19 << _33;
_38 = !_5;
_44 = _39 ^ _57.0;
Goto(bb35)
}
bb35 = {
RET.2.1.1 = _28.fld1.3;
_28.fld1.2 = (_35.fld2,);
_30.2 = _28.fld2.fld1.1;
_57.1.0 = !_2.1;
_28.fld2.fld2 = _15;
_9 = _35.fld2 << _48.0.1.0;
_28.fld2.fld1.1 = _20 as u8;
_28.fld1 = ((*_13), _26, _46, _45, _46.0);
_8.1 = _29 as u8;
_53 = core::ptr::addr_of!(_6);
match _48.0.2 {
0 => bb23,
1 => bb12,
2 => bb4,
3 => bb36,
4 => bb37,
215746769434835639884817634268243337576 => bb39,
_ => bb38
}
}
bb36 = {
Return()
}
bb37 = {
RET.5 = !(-89_i8);
_5 = _27 & _27;
_28.fld1.4 = 266870560048508799436227869029566918559_u128 as u32;
_28.fld1.1 = _7 * _21;
_8 = (_28.fld2.fld1.0, 35_u8, 60_u8);
_30.2 = _29 as u8;
_28.fld1.0.1 = _10;
_3.0 = -(*_13).0;
_28.fld2.fld5 = _29 as f32;
_30.2 = (*_17) * _8.2;
_26 = _21 | _28.fld1.1;
_5 = _11;
_19 = _22.fld0 - _22.fld0;
RET.2.0 = _26 << _6;
RET.0 = !29098_i16;
(*_17) = _8.1 + _30.2;
_28.fld2.fld1 = _8;
_25 = !_28.fld2.fld1.0;
RET.5 = (-60_i8);
RET.2.1.1 = _28.fld2.fld5;
_28.fld2.fld3 = core::ptr::addr_of_mut!(_28.fld4);
_8.2 = _28.fld2.fld1.2;
_28.fld2.fld4 = -(-26692_i16);
_2 = ((*_13).0, _3.0, _3.2);
_28.fld2.fld1.0 = _29 as u32;
Goto(bb19)
}
bb38 = {
_17 = core::ptr::addr_of_mut!(_8.2);
RET.1 = _17;
Goto(bb11)
}
bb39 = {
_28.fld5 = _33 % 176_u8;
_46.0 = _28.fld1.4 | _28.fld1.2.0;
RET.2.0 = !_7;
_41 = _20;
_58 = core::ptr::addr_of_mut!(_28.fld2.fld4);
_36 = _28.fld5 | _8.2;
match _48.0.2 {
0 => bb1,
1 => bb8,
2 => bb18,
3 => bb17,
4 => bb11,
5 => bb12,
6 => bb40,
215746769434835639884817634268243337576 => bb42,
_ => bb41
}
}
bb40 = {
Return()
}
bb41 = {
RET.5 = !(-89_i8);
_5 = _27 & _27;
_28.fld1.4 = 266870560048508799436227869029566918559_u128 as u32;
_28.fld1.1 = _7 * _21;
_8 = (_28.fld2.fld1.0, 35_u8, 60_u8);
_30.2 = _29 as u8;
_28.fld1.0.1 = _10;
_3.0 = -(*_13).0;
_28.fld2.fld5 = _29 as f32;
_30.2 = (*_17) * _8.2;
_26 = _21 | _28.fld1.1;
_5 = _11;
_19 = _22.fld0 - _22.fld0;
RET.2.0 = _26 << _6;
RET.0 = !29098_i16;
(*_17) = _8.1 + _30.2;
_28.fld2.fld1 = _8;
_25 = !_28.fld2.fld1.0;
RET.5 = (-60_i8);
RET.2.1.1 = _28.fld2.fld5;
_28.fld2.fld3 = core::ptr::addr_of_mut!(_28.fld4);
_8.2 = _28.fld2.fld1.2;
_28.fld2.fld4 = -(-26692_i16);
_2 = ((*_13).0, _3.0, _3.2);
_28.fld2.fld1.0 = _29 as u32;
Goto(bb19)
}
bb42 = {
_48.0.2 = !250583747126640726102230338277920675869_u128;
_30.0 = _28.fld2.fld5 as u32;
_48.0.3 = _57.3;
_52.fld0 = !_47;
_51 = _48.0.2 as isize;
RET.1 = core::ptr::addr_of_mut!(_33);
_10 = -_24;
_22.fld1 = [_35.fld0,_57.1.2,_48.0.1.2,_2.2];
_21 = _7;
_54 = core::ptr::addr_of_mut!(_48.0.3);
_52 = _22;
_56 = _39 as i128;
_31 = -_28.fld1.0.1;
_8 = (_28.fld1.4, _36, _28.fld5);
_31 = _12 * (*_13).1;
_30 = _8;
(*_58) = _3.2 as i16;
_46 = (_30.0,);
_44 = -_57.0;
_61 = [_48.0.1.0,_48.0.1.1,_28.fld1.0.0,(*_13).0];
_28.fld2.fld6 = core::ptr::addr_of_mut!((*_17));
Call(_30.0 = core::intrinsics::transmute(_3.2), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
_13 = core::ptr::addr_of!(_28.fld1.0);
_57.1 = (_28.fld1.0.0, _3.0, _35.fld0);
_2.0 = (*_13).0 + (*_13).0;
_63.fld4.1.1 = _35.fld2 as i128;
_6 = -5442833167967040202_i64;
RET.2.1 = (_28.fld2.fld0, _28.fld2.fld5);
Goto(bb44)
}
bb44 = {
_30.2 = _10 as u8;
_63.fld5 = _28.fld3;
_36 = !_28.fld5;
(*_13).0 = _48.0.2 as i128;
_2.0 = _48.0.1.0;
_1 = -_28.fld2.fld0;
_60 = (*_13).1;
_47 = !_52.fld0;
_63.fld4.3 = _28.fld2.fld4;
_63.fld4 = (_48.0.0, _57.1, _48.0.2, _48.0.3);
RET.0 = _48.0.3;
_3.1 = _57.3 as i128;
RET.2.1.0 = (*_13).1 / 1_f64;
_51 = _28.fld1.1;
_2.1 = _63.fld4.1.0 ^ _57.1.0;
RET.0 = _28.fld2.fld4;
_59 = -_60;
_63.fld4.1.2 = _48.0.2 as i32;
Call(_11 = fn15(_3.0, (*_13), _30.1, _28.fld2.fld4, _28.fld2.fld6, _28.fld1.0, _63.fld5, _35.fld0), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
_48.0.1.1 = !_2.1;
_63.fld5 = [_51,_26,_21,_28.fld1.1,_7,_26,_51];
_18 = [_63.fld4.2,_63.fld4.2,_48.0.2,_48.0.2,_48.0.2,_63.fld4.2,_48.0.2,_48.0.2];
_28.fld2.fld1 = (_46.0, _30.2, _36);
(*_17) = _36 >> _21;
Goto(bb46)
}
bb46 = {
RET.0 = (*_13).1 as i16;
RET.2.0 = _28.fld5 as isize;
_59 = _60 + _24;
_43 = _28.fld3;
_18 = [_48.0.2,_48.0.2,_63.fld4.2,_63.fld4.2,_48.0.2,_48.0.2,_48.0.2,_48.0.2];
_35.fld0 = -_57.1.2;
(*_53) = _48.0.2 as i64;
_3.0 = !_57.1.1;
_45 = -_28.fld2.fld5;
_31 = -(*_13).1;
_63.fld5 = _28.fld3;
_29 = (*_13).1 as usize;
_35.fld2 = _30.0;
_17 = core::ptr::addr_of_mut!((*_17));
_21 = _28.fld2.fld1.0 as isize;
_9 = _28.fld1.4 | _46.0;
(*_13).0 = _48.0.1.1 + _48.0.1.1;
_63.fld3 = core::ptr::addr_of!(_6);
_30.0 = !_28.fld2.fld1.0;
_42 = _28.fld2.fld4 as isize;
_28.fld2.fld1.0 = _30.0;
_71 = _44;
_35.fld1 = [(*_13).0,_28.fld1.0.0,_56,_63.fld4.1.1];
_28.fld2.fld1.0 = _59 as u32;
_73.fld4.fld1.3 = -_45;
Goto(bb47)
}
bb47 = {
_10 = _50;
_57.1.1 = _22.fld0 as i128;
Goto(bb48)
}
bb48 = {
_73.fld2 = _18;
_57.2 = _31 as u128;
_35.fld1 = [_28.fld1.0.0,_48.0.1.1,(*_13).0,_2.0];
_73.fld0.1 = (*_17) as i128;
_48 = (_57, _29);
_73.fld4.fld1.1 = -_21;
_52.fld1 = _22.fld1;
_73.fld0.2 = core::ptr::addr_of_mut!((*_17));
_35 = Adt61 { fld0: _57.1.2,fld1: _61,fld2: _28.fld1.4,fld3: _4 };
_74.fld2 = _22.fld0 + _52.fld0;
_80.1.2 = _48.0.1.2 & _48.0.1.2;
_69 = !_57.3;
_44 = -_48.0.0;
_73.fld3.fld4.3 = (*_58) + (*_58);
_34 = [_48.1];
_73.fld4.fld2.fld1.0 = _41 as u32;
_73.fld3.fld4 = (_48.0.0, _3, _57.2, _69);
RET.2.1.0 = _73.fld4.fld1.3 as f64;
_73.fld0.1 = !(*_13).0;
_12 = _7 as f64;
_40 = _5;
_73.fld4.fld1.2 = _28.fld1.2;
Goto(bb49)
}
bb49 = {
_31 = _39 as f64;
_67 = !_52.fld0;
_75.fld1 = _8;
_63.fld4.1.1 = (*_13).0;
(*_53) = 7452706147105782972_i64 | 5463558248205671967_i64;
(*_54) = (*_58) ^ (*_58);
_78 = _63.fld4;
_75.fld5 = _28.fld2.fld5;
_63.fld4.1.0 = _63.fld4.1.1;
_22.fld1 = [_48.0.1.2,_80.1.2,_80.1.2,_80.1.2];
_74.fld2 = _19;
_32 = [_73.fld0.1,(*_13).0,_28.fld1.0.0,_78.1.1];
_28.fld1.2.0 = !_28.fld2.fld1.0;
_2.0 = _44 as i128;
_63.fld3 = _53;
_66 = _7 & _7;
_7 = _66;
_3 = (_73.fld0.1, _2.1, _35.fld0);
_73.fld4.fld1.2 = (_9,);
_39 = _48.0.0 >> _28.fld2.fld1.0;
_73.fld4.fld2.fld1.2 = (*_17) % 158_u8;
_73.fld4.fld5 = _33;
_80.2 = _48.0.2 - _57.2;
_28.fld1.4 = !_28.fld1.2.0;
_27 = _40;
(*_53) = 6253929903842989987_i64;
_73.fld4.fld1.0 = (*_13);
_30.0 = _8.0;
Goto(bb50)
}
bb50 = {
_31 = _73.fld3.fld4.2 as f64;
_38 = !_49;
_79.fld1 = _8;
_75.fld0 = _73.fld4.fld1.0.0 as f64;
_4 = _35.fld3;
_58 = core::ptr::addr_of_mut!(_73.fld3.fld4.3);
_27 = !_49;
_56 = _63.fld4.1.0;
_30.1 = !_73.fld4.fld2.fld1.2;
_88.fld4.fld1.4 = !_28.fld2.fld1.0;
_75.fld7 = core::ptr::addr_of!(_85.2.1);
_88.fld4.fld1.2.0 = _41 as u32;
_61 = [_28.fld1.0.0,_3.1,(*_13).0,_28.fld1.0.0];
_57.3 = (*_54);
_88.fld3.fld4.1.2 = _80.1.2 | _3.2;
_75.fld3 = core::ptr::addr_of_mut!(_53);
_88.fld3.fld4 = _78;
_72 = [_16,_16,_16,_16];
_79.fld2 = _34;
Call(_80.2 = core::intrinsics::bswap(_48.0.2), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
_63.fld4.0 = _39;
_73.fld4.fld2.fld2 = [_29];
_48.0 = (_39, _88.fld3.fld4.1, _73.fld3.fld4.2, _78.3);
_82 = -_73.fld4.fld1.3;
_88.fld4.fld2.fld4 = _48.1 as i16;
_48.0.1.2 = _80.1.2;
_75.fld5 = -_45;
_73.fld3.fld5 = _43;
_70 = _57.2 + _73.fld3.fld4.2;
_73.fld2 = [_80.2,_48.0.2,_63.fld4.2,_57.2,_80.2,_48.0.2,_80.2,_80.2];
_63.fld0 = _28.fld2.fld1.0 & _8.0;
_77.fld2 = (*_13).0 as u64;
_28.fld1.4 = _20 as u32;
_92.0 = _28.fld1.1 | _7;
_96 = _8.1 as isize;
_63.fld5 = [_66,_96,_7,_7,_66,_26,_92.0];
_30.0 = (*_13).1 as u32;
_30.0 = _47 as u32;
_72 = [_16,_16,_16,_16];
_61 = _32;
_10 = _16 as f64;
_2.0 = !_78.1.0;
_43 = [_73.fld4.fld1.1,_7,_51,_92.0,_96,_28.fld1.1,_96];
_63.fld5 = [_92.0,_73.fld4.fld1.1,_66,_66,_66,_96,_66];
_24 = _30.1 as f64;
Call(_79.fld1.1 = core::intrinsics::transmute(_79.fld1.2), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
_79.fld6 = _28.fld2.fld6;
_88.fld4.fld2.fld0 = -_31;
Goto(bb53)
}
bb53 = {
_84 = _7;
match (*_53) {
0 => bb17,
6253929903842989987 => bb54,
_ => bb9
}
}
bb54 = {
_79.fld4 = _77.fld2 as i16;
(*_13).0 = _60 as i128;
_97.fld1 = _29 as f32;
_75.fld2 = [_29];
_88.fld1 = _73.fld0.2;
_100.fld1 = [_29];
_15 = _79.fld2;
_92.1.0 = -_23;
_85.2.1.1 = _16 as f32;
_48.0.3 = _88.fld4.fld2.fld4 - _79.fld4;
(*_58) = _48.0.3;
_10 = -_50;
_88.fld3.fld4.2 = _70 - _80.2;
match _6 {
0 => bb21,
1 => bb8,
2 => bb55,
3 => bb56,
6253929903842989987 => bb58,
_ => bb57
}
}
bb55 = {
Return()
}
bb56 = {
RET.5 = !(-89_i8);
_5 = _27 & _27;
_28.fld1.4 = 266870560048508799436227869029566918559_u128 as u32;
_28.fld1.1 = _7 * _21;
_8 = (_28.fld2.fld1.0, 35_u8, 60_u8);
_30.2 = _29 as u8;
_28.fld1.0.1 = _10;
_3.0 = -(*_13).0;
_28.fld2.fld5 = _29 as f32;
_30.2 = (*_17) * _8.2;
_26 = _21 | _28.fld1.1;
_5 = _11;
_19 = _22.fld0 - _22.fld0;
RET.2.0 = _26 << _6;
RET.0 = !29098_i16;
(*_17) = _8.1 + _30.2;
_28.fld2.fld1 = _8;
_25 = !_28.fld2.fld1.0;
RET.5 = (-60_i8);
RET.2.1.1 = _28.fld2.fld5;
_28.fld2.fld3 = core::ptr::addr_of_mut!(_28.fld4);
_8.2 = _28.fld2.fld1.2;
_28.fld2.fld4 = -(-26692_i16);
_2 = ((*_13).0, _3.0, _3.2);
_28.fld2.fld1.0 = _29 as u32;
Goto(bb19)
}
bb57 = {
_4 = _35.fld3;
_57.0 = -_48.0.0;
_7 = _51 >> _28.fld2.fld1.2;
_28.fld2.fld1.2 = _28.fld1.3 as u8;
_30.0 = _29 as u32;
_47 = !_19;
RET.3 = _35.fld3;
_28.fld2.fld5 = -_45;
_9 = !_28.fld1.2.0;
_22 = Adt57 { fld0: _19,fld1: _37 };
_30.1 = _48.0.0 as u8;
_28.fld2.fld0 = _51 as f64;
_9 = _28.fld1.4;
Goto(bb34)
}
bb58 = {
_73.fld4.fld3 = [_21,_96,_66,_7,_28.fld1.1,_96,_7];
_45 = _97.fld1 - _85.2.1.1;
_79.fld2 = _100.fld1;
Call(_88.fld4.fld1.2.0 = core::intrinsics::bswap(_73.fld4.fld1.2.0), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
_92.1.0 = -_59;
_28.fld1.2 = (_28.fld2.fld1.0,);
_88.fld4.fld2.fld6 = core::ptr::addr_of_mut!(_8.2);
_80.3 = _1 as i16;
_85.3 = _35.fld3;
_90 = !_49;
_88.fld0.0 = _48.0.0 | _48.0.0;
_77.fld2 = _79.fld1.0 as u64;
_88.fld4.fld2.fld1.1 = _77.fld2 as u8;
_100.fld1 = _79.fld2;
_88.fld4.fld2.fld7 = core::ptr::addr_of!(_85.2.1);
_12 = _88.fld0.0 as f64;
_48.0 = _73.fld3.fld4;
_96 = _28.fld1.1;
_73.fld3.fld4.0 = _88.fld0.0;
_88.fld1 = core::ptr::addr_of_mut!(_30.2);
_73.fld4.fld1.3 = _45;
_80.1.0 = !_73.fld4.fld1.0.0;
_88.fld0 = (_63.fld4.0, _73.fld4.fld1.0.0, _88.fld1, _29);
_48.0.1.0 = -_3.1;
_99 = [_73.fld4.fld1.1,_66,_7,_92.0,_84,_21,_84];
_87 = _24 + _28.fld2.fld0;
_19 = !_67;
_73.fld4.fld2.fld0 = _73.fld3.fld4.0 as f64;
_15 = _100.fld1;
RET.4 = core::ptr::addr_of!(_92.1);
_88.fld4.fld1.0.1 = _3.0 as f64;
_41 = _20;
_75.fld7 = core::ptr::addr_of!(_92.1);
Goto(bb60)
}
bb60 = {
Call(_102 = dump_var(14_usize, 33_usize, Move(_33), 46_usize, Move(_46), 38_usize, Move(_38), 47_usize, Move(_47)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_102 = dump_var(14_usize, 48_usize, Move(_48), 70_usize, Move(_70), 37_usize, Move(_37), 72_usize, Move(_72)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_102 = dump_var(14_usize, 71_usize, Move(_71), 26_usize, Move(_26), 49_usize, Move(_49), 18_usize, Move(_18)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_102 = dump_var(14_usize, 4_usize, Move(_4), 96_usize, Move(_96), 36_usize, Move(_36), 15_usize, Move(_15)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_102 = dump_var(14_usize, 42_usize, Move(_42), 2_usize, Move(_2), 3_usize, Move(_3), 14_usize, Move(_14)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_102 = dump_var(14_usize, 11_usize, Move(_11), 5_usize, Move(_5), 56_usize, Move(_56), 39_usize, Move(_39)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_102 = dump_var(14_usize, 44_usize, Move(_44), 27_usize, Move(_27), 103_usize, _103, 103_usize, _103), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: i128,mut _2: (i128, f64),mut _3: u8,mut _4: i16,mut _5: *mut u8,mut _6: (i128, f64),mut _7: [isize; 7],mut _8: i32) -> bool {
mir! {
type RET = bool;
let _9: Adt53;
let _10: isize;
let _11: f64;
let _12: (i128, f64);
let _13: f64;
let _14: i8;
let _15: u16;
let _16: i8;
let _17: isize;
let _18: isize;
let _19: [u16; 2];
let _20: f32;
let _21: f64;
let _22: isize;
let _23: isize;
let _24: *const bool;
let _25: isize;
let _26: f64;
let _27: Adt52;
let _28: ();
let _29: ();
{
_2.1 = _6.1 - _6.1;
_9.fld2.fld4 = _4;
_6.0 = 9223372036854775807_isize as i128;
_2.1 = _6.1 + _6.1;
_9.fld2.fld1.1 = (*_5) - _3;
_9.fld1.2.0 = (-4094183712725818628_i64) as u32;
_9.fld2.fld1.2 = _9.fld2.fld1.1;
Goto(bb1)
}
bb1 = {
_9.fld5 = _2.0 as u8;
_9.fld1.0 = _2;
_9.fld2.fld1 = (_9.fld1.2.0, (*_5), (*_5));
_9.fld2.fld1.0 = 10606728212326137466_usize as u32;
_9.fld2.fld3 = core::ptr::addr_of_mut!(_9.fld4);
_9.fld1.0.0 = _6.0;
_2.0 = _1;
_11 = 170005019862369923224535540028581668119_u128 as f64;
RET = false;
_9.fld2.fld2 = [12338132952639769727_usize];
_9.fld1.2.0 = !_9.fld2.fld1.0;
_9.fld2.fld5 = 46_i8 as f32;
_1 = (-9223372036854775808_isize) as i128;
_9.fld1.4 = _9.fld2.fld1.0 ^ _9.fld1.2.0;
_9.fld2.fld1.0 = _9.fld1.4;
_13 = _2.1 * _9.fld1.0.1;
_12 = (_1, _13);
_2.0 = -_12.0;
RET = false;
_9.fld5 = _3 << _8;
_15 = 25679_u16 - 12950_u16;
_9.fld1.0.1 = _13 - _13;
Goto(bb2)
}
bb2 = {
_12.0 = _6.0;
_9.fld3 = _7;
_16 = 29_i8;
_9.fld2.fld3 = core::ptr::addr_of_mut!(_9.fld4);
_12.0 = _9.fld1.0.0;
_9.fld2.fld2 = [5_usize];
_9.fld1.3 = _9.fld1.4 as f32;
_2.0 = '\u{ba79}' as i128;
_7 = [9223372036854775807_isize,43_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_10 = (-23_isize) - 9223372036854775807_isize;
_6 = (_1, _13);
_9.fld3 = [_10,_10,_10,_10,_10,_10,_10];
_12.0 = _9.fld1.0.0 + _1;
_9.fld2.fld0 = -_6.1;
_9.fld3 = _7;
_9.fld2.fld1.1 = _3 * _9.fld5;
_9.fld2.fld5 = _13 as f32;
_2 = _12;
_4 = -_9.fld2.fld4;
_2.1 = -_13;
_6 = (_2.0, _12.1);
match _16 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
29 => bb11,
_ => bb10
}
}
bb3 = {
_9.fld5 = _2.0 as u8;
_9.fld1.0 = _2;
_9.fld2.fld1 = (_9.fld1.2.0, (*_5), (*_5));
_9.fld2.fld1.0 = 10606728212326137466_usize as u32;
_9.fld2.fld3 = core::ptr::addr_of_mut!(_9.fld4);
_9.fld1.0.0 = _6.0;
_2.0 = _1;
_11 = 170005019862369923224535540028581668119_u128 as f64;
RET = false;
_9.fld2.fld2 = [12338132952639769727_usize];
_9.fld1.2.0 = !_9.fld2.fld1.0;
_9.fld2.fld5 = 46_i8 as f32;
_1 = (-9223372036854775808_isize) as i128;
_9.fld1.4 = _9.fld2.fld1.0 ^ _9.fld1.2.0;
_9.fld2.fld1.0 = _9.fld1.4;
_13 = _2.1 * _9.fld1.0.1;
_12 = (_1, _13);
_2.0 = -_12.0;
RET = false;
_9.fld5 = _3 << _8;
_15 = 25679_u16 - 12950_u16;
_9.fld1.0.1 = _13 - _13;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_9.fld2.fld5 = -_9.fld1.3;
_5 = core::ptr::addr_of_mut!(_9.fld5);
_1 = _6.0;
_9.fld1.1 = '\u{8b345}' as isize;
_9.fld2.fld5 = -_9.fld1.3;
_9.fld2.fld5 = _9.fld1.3 + _9.fld1.3;
_9.fld1.0.0 = _6.0;
Call(_2.0 = fn16(_9.fld3, _3, _12.0, (*_5), _9.fld2.fld0, _9.fld1.2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
(*_5) = !_9.fld2.fld1.1;
_9.fld1.0.1 = _16 as f64;
_12.1 = -_9.fld2.fld0;
_9.fld1.3 = _9.fld2.fld5 - _9.fld2.fld5;
_3 = !(*_5);
_9.fld2.fld3 = core::ptr::addr_of_mut!(_9.fld4);
_12.1 = _9.fld2.fld0 / 1_f64;
_2.0 = -_6.0;
_6.0 = _1;
_9.fld2.fld6 = core::ptr::addr_of_mut!(_9.fld2.fld1.2);
_9.fld2.fld2 = [7_usize];
_9.fld2.fld2 = [0_usize];
RET = false | false;
_12.1 = _13;
_9.fld2.fld0 = _6.1 + _6.1;
_18 = -_10;
_1 = -_2.0;
_18 = _9.fld1.1 ^ _9.fld1.1;
_9.fld2.fld5 = _9.fld1.3;
_9.fld5 = _15 as u8;
_15 = 64703_u16 + 30260_u16;
Goto(bb13)
}
bb13 = {
RET = true;
_22 = -_9.fld1.1;
_9.fld2.fld6 = core::ptr::addr_of_mut!(_9.fld2.fld1.1);
_23 = _22;
Goto(bb14)
}
bb14 = {
_9.fld1.3 = _9.fld2.fld5;
_4 = _9.fld2.fld4 - _9.fld2.fld4;
_9.fld1.2 = (_9.fld2.fld1.0,);
_17 = _15 as isize;
_2.1 = _9.fld2.fld0 * _9.fld2.fld0;
_2 = _12;
_6 = (_12.0, _9.fld2.fld0);
_6 = (_1, _13);
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(15_usize, 17_usize, Move(_17), 3_usize, Move(_3), 15_usize, Move(_15), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(15_usize, 7_usize, Move(_7), 18_usize, Move(_18), 29_usize, _29, 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [isize; 7],mut _2: u8,mut _3: i128,mut _4: u8,mut _5: f64,mut _6: (u32,)) -> i128 {
mir! {
type RET = i128;
let _7: isize;
let _8: f32;
let _9: ((i8, (i128, i128, i32), u128, i16), usize);
let _10: i32;
let _11: char;
let _12: u16;
let _13: (i128, i128, i32);
let _14: [u128; 8];
let _15: (u32,);
let _16: u16;
let _17: isize;
let _18: Adt55;
let _19: [u128; 8];
let _20: char;
let _21: (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8);
let _22: f64;
let _23: [i32; 4];
let _24: u32;
let _25: Adt53;
let _26: ();
let _27: ();
{
_6 = (1438685770_u32,);
RET = _3 >> _4;
_1 = [(-88_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-93_isize),(-9223372036854775808_isize)];
_2 = !_4;
_4 = _2;
_1 = [9223372036854775807_isize,9223372036854775807_isize,(-17_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-81_isize),34_isize];
RET = 2_usize as i128;
_6.0 = !4222764061_u32;
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,67_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-12_isize)];
RET = (-2055573727_i32) as i128;
_4 = 62_i8 as u8;
_2 = _4 % 26_u8;
_7 = 9223372036854775807_isize << _4;
_7 = 34920981999956495931992314415229316068_u128 as isize;
_2 = !_4;
_5 = 112142852500969040168921445192136420255_u128 as f64;
RET = _3;
_3 = 94187350144268210001299874212010478396_i128;
RET = _3;
_7 = !9223372036854775807_isize;
_8 = _5 as f32;
_7 = _3 as isize;
_8 = 4127316060317857013_u64 as f32;
Call(_3 = fn17(_5, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = _5 as f32;
RET = _3;
_9.0.1.2 = (-961347476_i32) - 214497212_i32;
_9.0.1.1 = _3;
_4 = _2;
_9.0.1.2 = 1249199345_i32;
_10 = !_9.0.1.2;
_9.0.1 = (_3, _3, _10);
_9.1 = _2 as usize;
_9.1 = 4751576423267916339_usize;
_12 = 47176_u16 & 22369_u16;
_13 = _9.0.1;
_9.0.0 = -31_i8;
_6 = (1193423560_u32,);
_10 = _9.0.1.2 ^ _9.0.1.2;
_13.2 = _5 as i32;
_9.0.1.0 = _3 - _13.0;
_9.0.0 = _9.1 as i8;
_6 = (2338340077_u32,);
_9.0.3 = 11835_i16 * 20359_i16;
_6.0 = 501166951_u32;
_5 = _7 as f64;
_9.0.1 = (_13.1, _3, _10);
_10 = _9.0.1.2;
_13.2 = -_10;
Call(_15.0 = core::intrinsics::bswap(_6.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14 = [71964462860257013582208833315972402482_u128,214624964560929975539263009425061034774_u128,289405832085027520971363937476387902601_u128,31767911942369477384317713047835121934_u128,282491168170392686690774506342338824837_u128,3433295301283971117715709582954952771_u128,291140132877180925595070289865193048119_u128,216859042007026143067696951300751222121_u128];
_9.0.1.1 = _9.0.1.0 | _9.0.1.0;
_9.0.1.2 = _10;
_14 = [195555704910235650307008875654082016654_u128,51482959992330596228590223393695685751_u128,318392391870095241904021432392011445338_u128,11601388648693931055316787844859786752_u128,38185011639926427903771908687548203782_u128,318601568091805015337687441766206804842_u128,56059513077529995038605773593644742226_u128,50402954491634065462319212073744188194_u128];
_9.1 = 7725751211834875126_usize | 5_usize;
_6 = (942189447_u32,);
_9.0.0 = 49_i8 | 6_i8;
_3 = -_9.0.1.1;
_16 = _12 - _12;
_4 = false as u8;
_9.0.2 = 135491448141733215292606980302953190293_u128 * 71658823282658469817813158598041015564_u128;
_11 = '\u{31b37}';
_8 = _5 as f32;
_10 = _13.2;
_13 = _9.0.1;
_9.0.2 = 262048624998922652108636808264489113228_u128 ^ 145498981877111673423226230570458686959_u128;
Goto(bb3)
}
bb3 = {
_6 = (2330063557_u32,);
_3 = _8 as i128;
match _6.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
2330063557 => bb10,
_ => bb9
}
}
bb4 = {
_14 = [71964462860257013582208833315972402482_u128,214624964560929975539263009425061034774_u128,289405832085027520971363937476387902601_u128,31767911942369477384317713047835121934_u128,282491168170392686690774506342338824837_u128,3433295301283971117715709582954952771_u128,291140132877180925595070289865193048119_u128,216859042007026143067696951300751222121_u128];
_9.0.1.1 = _9.0.1.0 | _9.0.1.0;
_9.0.1.2 = _10;
_14 = [195555704910235650307008875654082016654_u128,51482959992330596228590223393695685751_u128,318392391870095241904021432392011445338_u128,11601388648693931055316787844859786752_u128,38185011639926427903771908687548203782_u128,318601568091805015337687441766206804842_u128,56059513077529995038605773593644742226_u128,50402954491634065462319212073744188194_u128];
_9.1 = 7725751211834875126_usize | 5_usize;
_6 = (942189447_u32,);
_9.0.0 = 49_i8 | 6_i8;
_3 = -_9.0.1.1;
_16 = _12 - _12;
_4 = false as u8;
_9.0.2 = 135491448141733215292606980302953190293_u128 * 71658823282658469817813158598041015564_u128;
_11 = '\u{31b37}';
_8 = _5 as f32;
_10 = _13.2;
_13 = _9.0.1;
_9.0.2 = 262048624998922652108636808264489113228_u128 ^ 145498981877111673423226230570458686959_u128;
Goto(bb3)
}
bb5 = {
_8 = _5 as f32;
RET = _3;
_9.0.1.2 = (-961347476_i32) - 214497212_i32;
_9.0.1.1 = _3;
_4 = _2;
_9.0.1.2 = 1249199345_i32;
_10 = !_9.0.1.2;
_9.0.1 = (_3, _3, _10);
_9.1 = _2 as usize;
_9.1 = 4751576423267916339_usize;
_12 = 47176_u16 & 22369_u16;
_13 = _9.0.1;
_9.0.0 = -31_i8;
_6 = (1193423560_u32,);
_10 = _9.0.1.2 ^ _9.0.1.2;
_13.2 = _5 as i32;
_9.0.1.0 = _3 - _13.0;
_9.0.0 = _9.1 as i8;
_6 = (2338340077_u32,);
_9.0.3 = 11835_i16 * 20359_i16;
_6.0 = 501166951_u32;
_5 = _7 as f64;
_9.0.1 = (_13.1, _3, _10);
_10 = _9.0.1.2;
_13.2 = -_10;
Call(_15.0 = core::intrinsics::bswap(_6.0), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_18.fld4.1 = (_13.1, _13.0, _9.0.1.2);
_18.fld2 = _16 as usize;
_12 = !_16;
_17 = _7;
_13.1 = _18.fld4.1.0;
_9.0 = (112_i8, _13, 83747024294078798972372348396421191179_u128, 9346_i16);
_6.0 = _9.0.0 as u32;
_7 = _17 * _17;
_9.0.1 = (_13.0, _13.1, _18.fld4.1.2);
_21.4 = core::ptr::addr_of!(_21.2.1);
_13.0 = -_9.0.1.1;
_18.fld6 = [_11];
_20 = _11;
_13.2 = _9.0.1.2;
_14 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_13.0 = _20 as i128;
_21.2.1.1 = _8 - _8;
_15.0 = _9.0.1.1 as u32;
_18.fld5 = [_17,_7,_7,_7,_7,_7,_17];
match _9.0.2 {
0 => bb6,
83747024294078798972372348396421191179 => bb11,
_ => bb8
}
}
bb11 = {
_21.4 = core::ptr::addr_of!(_21.2.1);
_21.2.0 = _7;
_18.fld0 = _6.0;
_9.0.1 = (_13.1, _13.1, _10);
_21.1 = core::ptr::addr_of_mut!(_4);
_13.2 = _10;
_21.2.1.1 = _8 * _8;
_14 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_18.fld4.3 = -_9.0.3;
_18.fld5 = [_7,_7,_21.2.0,_21.2.0,_17,_17,_17];
_21.0 = _9.0.3;
_9.0.2 = 77812724477640526824608674945472937118_u128;
_18.fld6 = [_20];
_21.3 = [_12,_12];
_16 = !_12;
_22 = _18.fld2 as f64;
_19 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
Call(_17 = core::intrinsics::transmute(_9.1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_18.fld4.2 = false as u128;
match _9.0.3 {
0 => bb1,
1 => bb7,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
9346 => bb18,
_ => bb17
}
}
bb13 = {
_14 = [71964462860257013582208833315972402482_u128,214624964560929975539263009425061034774_u128,289405832085027520971363937476387902601_u128,31767911942369477384317713047835121934_u128,282491168170392686690774506342338824837_u128,3433295301283971117715709582954952771_u128,291140132877180925595070289865193048119_u128,216859042007026143067696951300751222121_u128];
_9.0.1.1 = _9.0.1.0 | _9.0.1.0;
_9.0.1.2 = _10;
_14 = [195555704910235650307008875654082016654_u128,51482959992330596228590223393695685751_u128,318392391870095241904021432392011445338_u128,11601388648693931055316787844859786752_u128,38185011639926427903771908687548203782_u128,318601568091805015337687441766206804842_u128,56059513077529995038605773593644742226_u128,50402954491634065462319212073744188194_u128];
_9.1 = 7725751211834875126_usize | 5_usize;
_6 = (942189447_u32,);
_9.0.0 = 49_i8 | 6_i8;
_3 = -_9.0.1.1;
_16 = _12 - _12;
_4 = false as u8;
_9.0.2 = 135491448141733215292606980302953190293_u128 * 71658823282658469817813158598041015564_u128;
_11 = '\u{31b37}';
_8 = _5 as f32;
_10 = _13.2;
_13 = _9.0.1;
_9.0.2 = 262048624998922652108636808264489113228_u128 ^ 145498981877111673423226230570458686959_u128;
Goto(bb3)
}
bb14 = {
_18.fld4.1 = (_13.1, _13.0, _9.0.1.2);
_18.fld2 = _16 as usize;
_12 = !_16;
_17 = _7;
_13.1 = _18.fld4.1.0;
_9.0 = (112_i8, _13, 83747024294078798972372348396421191179_u128, 9346_i16);
_6.0 = _9.0.0 as u32;
_7 = _17 * _17;
_9.0.1 = (_13.0, _13.1, _18.fld4.1.2);
_21.4 = core::ptr::addr_of!(_21.2.1);
_13.0 = -_9.0.1.1;
_18.fld6 = [_11];
_20 = _11;
_13.2 = _9.0.1.2;
_14 = [_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2,_9.0.2];
_13.0 = _20 as i128;
_21.2.1.1 = _8 - _8;
_15.0 = _9.0.1.1 as u32;
_18.fld5 = [_17,_7,_7,_7,_7,_7,_17];
match _9.0.2 {
0 => bb6,
83747024294078798972372348396421191179 => bb11,
_ => bb8
}
}
bb15 = {
_14 = [71964462860257013582208833315972402482_u128,214624964560929975539263009425061034774_u128,289405832085027520971363937476387902601_u128,31767911942369477384317713047835121934_u128,282491168170392686690774506342338824837_u128,3433295301283971117715709582954952771_u128,291140132877180925595070289865193048119_u128,216859042007026143067696951300751222121_u128];
_9.0.1.1 = _9.0.1.0 | _9.0.1.0;
_9.0.1.2 = _10;
_14 = [195555704910235650307008875654082016654_u128,51482959992330596228590223393695685751_u128,318392391870095241904021432392011445338_u128,11601388648693931055316787844859786752_u128,38185011639926427903771908687548203782_u128,318601568091805015337687441766206804842_u128,56059513077529995038605773593644742226_u128,50402954491634065462319212073744188194_u128];
_9.1 = 7725751211834875126_usize | 5_usize;
_6 = (942189447_u32,);
_9.0.0 = 49_i8 | 6_i8;
_3 = -_9.0.1.1;
_16 = _12 - _12;
_4 = false as u8;
_9.0.2 = 135491448141733215292606980302953190293_u128 * 71658823282658469817813158598041015564_u128;
_11 = '\u{31b37}';
_8 = _5 as f32;
_10 = _13.2;
_13 = _9.0.1;
_9.0.2 = 262048624998922652108636808264489113228_u128 ^ 145498981877111673423226230570458686959_u128;
Goto(bb3)
}
bb16 = {
_8 = _5 as f32;
RET = _3;
_9.0.1.2 = (-961347476_i32) - 214497212_i32;
_9.0.1.1 = _3;
_4 = _2;
_9.0.1.2 = 1249199345_i32;
_10 = !_9.0.1.2;
_9.0.1 = (_3, _3, _10);
_9.1 = _2 as usize;
_9.1 = 4751576423267916339_usize;
_12 = 47176_u16 & 22369_u16;
_13 = _9.0.1;
_9.0.0 = -31_i8;
_6 = (1193423560_u32,);
_10 = _9.0.1.2 ^ _9.0.1.2;
_13.2 = _5 as i32;
_9.0.1.0 = _3 - _13.0;
_9.0.0 = _9.1 as i8;
_6 = (2338340077_u32,);
_9.0.3 = 11835_i16 * 20359_i16;
_6.0 = 501166951_u32;
_5 = _7 as f64;
_9.0.1 = (_13.1, _3, _10);
_10 = _9.0.1.2;
_13.2 = -_10;
Call(_15.0 = core::intrinsics::bswap(_6.0), ReturnTo(bb2), UnwindUnreachable())
}
bb17 = {
_6 = (2330063557_u32,);
_3 = _8 as i128;
match _6.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
2330063557 => bb10,
_ => bb9
}
}
bb18 = {
_9.0.1.1 = _20 as i128;
_18.fld0 = _6.0 << _13.1;
_11 = _20;
_9.0.1 = (_18.fld4.1.0, _3, _10);
_12 = _16;
_17 = _20 as isize;
_9.0.0 = _16 as i8;
_5 = _9.0.2 as f64;
_25.fld2.fld4 = _9.0.3 >> _12;
_18.fld4.1.1 = _13.0;
_19 = [_9.0.2,_18.fld4.2,_9.0.2,_9.0.2,_18.fld4.2,_9.0.2,_18.fld4.2,_18.fld4.2];
_24 = _18.fld0 & _6.0;
_18.fld4.1.0 = _25.fld2.fld4 as i128;
_9.0.1.1 = -_9.0.1.0;
_18.fld4.0 = _9.0.0;
_25.fld5 = _4;
_9.0.1.1 = !_9.0.1.0;
_9.0.1 = (_13.1, _18.fld4.1.0, _10);
_13 = _9.0.1;
_18.fld4.1.0 = !_13.0;
_13.1 = -_18.fld4.1.0;
_6.0 = _10 as u32;
_25.fld3 = [_17,_17,_21.2.0,_7,_21.2.0,_21.2.0,_7];
_19 = [_9.0.2,_18.fld4.2,_18.fld4.2,_18.fld4.2,_18.fld4.2,_18.fld4.2,_9.0.2,_9.0.2];
_18.fld4.2 = !_9.0.2;
_20 = _11;
_25.fld1.2 = _15;
_25.fld2.fld1.1 = !_2;
_9.1 = !_18.fld2;
Goto(bb19)
}
bb19 = {
Call(_26 = dump_var(16_usize, 15_usize, Move(_15), 10_usize, Move(_10), 20_usize, Move(_20), 3_usize, Move(_3)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_26 = dump_var(16_usize, 1_usize, Move(_1), 13_usize, Move(_13), 19_usize, Move(_19), 6_usize, Move(_6)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_26 = dump_var(16_usize, 11_usize, Move(_11), 27_usize, _27, 27_usize, _27, 27_usize, _27), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: f64,mut _2: [isize; 7],mut _3: [isize; 7]) -> i128 {
mir! {
type RET = i128;
let _4: usize;
let _5: (isize, (f64, f32));
let _6: Adt63;
let _7: u128;
let _8: i128;
let _9: f32;
let _10: f64;
let _11: f64;
let _12: Adt56;
let _13: *const f64;
let _14: u16;
let _15: char;
let _16: (u32,);
let _17: usize;
let _18: f64;
let _19: char;
let _20: f32;
let _21: *const i64;
let _22: f64;
let _23: usize;
let _24: f64;
let _25: [u16; 2];
let _26: isize;
let _27: *const (i128, f64);
let _28: bool;
let _29: ();
let _30: ();
{
RET = (-124949614884570559173065673573037816602_i128) - (-8741051864617063644912940551119836253_i128);
_3 = [(-9223372036854775808_isize),124_isize,(-41_isize),(-9223372036854775808_isize),9223372036854775807_isize,96_isize,19_isize];
_3 = _2;
_3 = [(-9223372036854775808_isize),9223372036854775807_isize,8_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,41_isize];
RET = 120519519867821188295624556146055979958_i128;
_4 = !6_usize;
RET = -(-139957815994898793324147336542383847643_i128);
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),73_isize,70_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
Goto(bb1)
}
bb1 = {
_1 = (-1587943170_i32) as f64;
RET = true as i128;
RET = 63366668348338821764335983991198080300_i128 * (-125768074476255063439154108838624364673_i128);
RET = (-9643913887350796858475094446844902657_i128);
_1 = (-4329000783945003954_i64) as f64;
RET = (-25922016650764495928725433001823462917_i128) | (-162568067206322445351555140397594314946_i128);
_1 = 6890488260951746753_u64 as f64;
_1 = 1_i8 as f64;
_2 = [9_isize,9223372036854775807_isize,9223372036854775807_isize,(-69_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9_isize)];
_3 = [(-103_isize),(-38_isize),9223372036854775807_isize,9223372036854775807_isize,53_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_4 = !10430911514319512532_usize;
_3 = [(-9223372036854775808_isize),35_isize,9223372036854775807_isize,9223372036854775807_isize,(-79_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5.1.1 = 641749115235925030_i64 as f32;
_2 = _3;
_2 = _3;
_2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5.1.1 = 4294_i16 as f32;
_5.0 = (-9223372036854775808_isize);
_5.1.0 = _1;
_5.1.1 = 15522254367336476051_u64 as f32;
_2 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_3 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_3 = _2;
_2 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_3 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
Goto(bb2)
}
bb2 = {
_6.fld7 = !3308586702_u32;
_5.1.1 = _5.0 as f32;
_6.fld1.fld0.1 = (133988978815893880941743961537933796158_i128, (-12417123814702992633296681530121418725_i128), (-1111041251_i32));
_5.1.1 = 11765617369099387266_u64 as f32;
_6.fld4 = [_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7];
_6.fld1.fld0.1 = ((-92040890369444726168289346589623650608_i128), 12644458750058240592913951401767457107_i128, (-1293006351_i32));
_6.fld6.fld1.fld0 = _6.fld4;
_6.fld6.fld1.fld2 = 5646122793683409999_u64 & 3129124706183514863_u64;
_6.fld6.fld0 = _6.fld1.fld0.1.0 <= _6.fld1.fld0.1.0;
_6.fld6.fld1 = Adt51 { fld0: _6.fld4,fld1: (-116_i8),fld2: 14041434755411323182_u64 };
_6.fld0 = core::ptr::addr_of!(_1);
_1 = _5.1.0 - _5.1.0;
_5.1.1 = _6.fld1.fld0.1.2 as f32;
_6.fld1.fld0.1 = ((-107967758442837615695595812672564809414_i128), (-153205296207752436384304846762572340324_i128), (-1496138971_i32));
_5.0 = 30_isize + 9223372036854775807_isize;
_5.1.1 = 159988916750836312513660329270110551272_u128 as f32;
_6.fld1.fld0.2 = !220541926254133304427203119274553681833_u128;
_6.fld1.fld0.3 = 531_i16 >> _6.fld1.fld0.1.0;
_7 = _6.fld1.fld0.2 - _6.fld1.fld0.2;
_6.fld5 = _6.fld1.fld0.1.2 - _6.fld1.fld0.1.2;
_6.fld1.fld0.1.0 = -_6.fld1.fld0.1.1;
_6.fld6.fld1.fld0 = _6.fld4;
_5.1.1 = _6.fld1.fld0.1.1 as f32;
Call(_5.0 = core::intrinsics::bswap((-46_isize)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6.fld1.fld0.1.0 = _5.0 as i128;
_6.fld2.fld3 = [31749_u16,59112_u16];
Goto(bb4)
}
bb4 = {
_6.fld6.fld1.fld0 = [_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7];
_2 = _3;
_3 = _2;
_6.fld1.fld0.1.0 = (-3105956322265755392_i64) as i128;
_6.fld1.fld0.1.0 = _6.fld6.fld1.fld2 as i128;
_6.fld2.fld2 = _6.fld7;
_12.fld1.fld0 = [_6.fld7,_6.fld7,_6.fld2.fld2,_6.fld7,_6.fld2.fld2,_6.fld2.fld2,_6.fld2.fld2,_6.fld2.fld2];
_12.fld1 = Adt51 { fld0: _6.fld4,fld1: _6.fld6.fld1.fld1,fld2: _6.fld6.fld1.fld2 };
_6.fld4 = _12.fld1.fld0;
_6.fld6 = Adt56 { fld0: false,fld1: _12.fld1 };
_6.fld6.fld1.fld2 = !_12.fld1.fld2;
_6.fld5 = -_6.fld1.fld0.1.2;
match _6.fld1.fld0.1.1 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
187077070713186027079069760669195871132 => bb12,
_ => bb11
}
}
bb5 = {
_6.fld1.fld0.1.0 = _5.0 as i128;
_6.fld2.fld3 = [31749_u16,59112_u16];
Goto(bb4)
}
bb6 = {
_6.fld7 = !3308586702_u32;
_5.1.1 = _5.0 as f32;
_6.fld1.fld0.1 = (133988978815893880941743961537933796158_i128, (-12417123814702992633296681530121418725_i128), (-1111041251_i32));
_5.1.1 = 11765617369099387266_u64 as f32;
_6.fld4 = [_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7,_6.fld7];
_6.fld1.fld0.1 = ((-92040890369444726168289346589623650608_i128), 12644458750058240592913951401767457107_i128, (-1293006351_i32));
_6.fld6.fld1.fld0 = _6.fld4;
_6.fld6.fld1.fld2 = 5646122793683409999_u64 & 3129124706183514863_u64;
_6.fld6.fld0 = _6.fld1.fld0.1.0 <= _6.fld1.fld0.1.0;
_6.fld6.fld1 = Adt51 { fld0: _6.fld4,fld1: (-116_i8),fld2: 14041434755411323182_u64 };
_6.fld0 = core::ptr::addr_of!(_1);
_1 = _5.1.0 - _5.1.0;
_5.1.1 = _6.fld1.fld0.1.2 as f32;
_6.fld1.fld0.1 = ((-107967758442837615695595812672564809414_i128), (-153205296207752436384304846762572340324_i128), (-1496138971_i32));
_5.0 = 30_isize + 9223372036854775807_isize;
_5.1.1 = 159988916750836312513660329270110551272_u128 as f32;
_6.fld1.fld0.2 = !220541926254133304427203119274553681833_u128;
_6.fld1.fld0.3 = 531_i16 >> _6.fld1.fld0.1.0;
_7 = _6.fld1.fld0.2 - _6.fld1.fld0.2;
_6.fld5 = _6.fld1.fld0.1.2 - _6.fld1.fld0.1.2;
_6.fld1.fld0.1.0 = -_6.fld1.fld0.1.1;
_6.fld6.fld1.fld0 = _6.fld4;
_5.1.1 = _6.fld1.fld0.1.1 as f32;
Call(_5.0 = core::intrinsics::bswap((-46_isize)), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_1 = (-1587943170_i32) as f64;
RET = true as i128;
RET = 63366668348338821764335983991198080300_i128 * (-125768074476255063439154108838624364673_i128);
RET = (-9643913887350796858475094446844902657_i128);
_1 = (-4329000783945003954_i64) as f64;
RET = (-25922016650764495928725433001823462917_i128) | (-162568067206322445351555140397594314946_i128);
_1 = 6890488260951746753_u64 as f64;
_1 = 1_i8 as f64;
_2 = [9_isize,9223372036854775807_isize,9223372036854775807_isize,(-69_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9_isize)];
_3 = [(-103_isize),(-38_isize),9223372036854775807_isize,9223372036854775807_isize,53_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_4 = !10430911514319512532_usize;
_3 = [(-9223372036854775808_isize),35_isize,9223372036854775807_isize,9223372036854775807_isize,(-79_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5.1.1 = 641749115235925030_i64 as f32;
_2 = _3;
_2 = _3;
_2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_5.1.1 = 4294_i16 as f32;
_5.0 = (-9223372036854775808_isize);
_5.1.0 = _1;
_5.1.1 = 15522254367336476051_u64 as f32;
_2 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_3 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_3 = _2;
_2 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_3 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_1 = _5.1.0 / f64::NAN;
_12 = Adt56 { fld0: _6.fld6.fld0,fld1: _6.fld6.fld1 };
_5.1.0 = _1;
_10 = -_1;
_6.fld1.fld0.1.2 = _6.fld7 as i32;
_6.fld3 = [_6.fld5,_6.fld1.fld0.1.2,_6.fld1.fld0.1.2,_6.fld5];
_6.fld1.fld0.1.0 = -_6.fld1.fld0.1.1;
_6.fld6.fld1.fld1 = _12.fld1.fld1 & _12.fld1.fld1;
_3 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_13 = core::ptr::addr_of!(_5.1.0);
_15 = '\u{8d936}';
_6.fld1.fld0.2 = _15 as u128;
_6.fld1.fld0.1.1 = _6.fld7 as i128;
_6.fld2.fld1 = [_6.fld1.fld0.1.1,_6.fld1.fld0.1.1,_6.fld1.fld0.1.0,_6.fld1.fld0.1.0];
_4 = _6.fld2.fld2 as usize;
_6.fld0 = core::ptr::addr_of!(_5.1.0);
_19 = _15;
_17 = !_4;
_16.0 = _6.fld7 % 2860518189_u32;
_18 = (*_13) - (*_13);
_5.0 = (-9223372036854775808_isize) << _12.fld1.fld1;
_6.fld2.fld3 = [18073_u16,36003_u16];
Goto(bb13)
}
bb13 = {
_5.0 = _12.fld0 as isize;
_8 = _6.fld1.fld0.1.0;
_16 = (_6.fld2.fld2,);
_16 = (_6.fld2.fld2,);
_20 = -_5.1.1;
_6.fld6.fld1.fld2 = !_12.fld1.fld2;
RET = !_6.fld1.fld0.1.1;
_2 = [_5.0,_5.0,_5.0,_5.0,_5.0,_5.0,_5.0];
_14 = !57348_u16;
_6.fld1.fld0.1.2 = _6.fld5;
_6.fld2.fld2 = (*_13) as u32;
_14 = 18643_u16 << _12.fld1.fld1;
_6.fld0 = _13;
RET = _6.fld1.fld0.1.0 | _6.fld1.fld0.1.1;
_5.1.1 = _14 as f32;
_6.fld6.fld1.fld0 = [_16.0,_6.fld2.fld2,_16.0,_6.fld7,_6.fld2.fld2,_6.fld7,_6.fld2.fld2,_6.fld2.fld2];
_6.fld7 = _6.fld2.fld2;
_10 = -_18;
Goto(bb14)
}
bb14 = {
_6.fld2.fld3 = [_14,_14];
_6.fld1.fld0.0 = !_12.fld1.fld1;
_13 = _6.fld0;
_12.fld1.fld1 = _6.fld6.fld1.fld1 & _6.fld1.fld0.0;
_5.0 = !(-75_isize);
_6.fld6.fld1.fld0 = _12.fld1.fld0;
_4 = (-4635644663284589377_i64) as usize;
_11 = _18;
_6.fld7 = !_6.fld2.fld2;
_9 = _7 as f32;
_13 = _6.fld0;
_25 = _6.fld2.fld3;
_6.fld1.fld0.1.1 = _8;
_5.1 = (_11, _20);
_18 = _6.fld6.fld1.fld1 as f64;
_17 = _4;
_15 = _19;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(17_usize, 7_usize, Move(_7), 3_usize, Move(_3), 16_usize, Move(_16), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(17_usize, 4_usize, Move(_4), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: bool,mut _2: i8,mut _3: usize,mut _4: i16) -> isize {
mir! {
type RET = isize;
let _5: (i128, i128, i32);
let _6: f32;
let _7: usize;
let _8: [u128; 8];
let _9: Adt62;
let _10: bool;
let _11: f64;
let _12: i8;
let _13: usize;
let _14: Adt64;
let _15: Adt60;
let _16: i128;
let _17: Adt58;
let _18: Adt58;
let _19: ();
let _20: ();
{
RET = (-9223372036854775808_isize) + (-9223372036854775808_isize);
RET = !(-73_isize);
_3 = 8063336861229932672_usize | 6138919156486736322_usize;
Goto(bb1)
}
bb1 = {
RET = 83_isize ^ 9223372036854775807_isize;
_2 = 37_i8 & 22_i8;
_1 = !false;
_5.0 = (-154309576077676405672985961967836048826_i128);
_5.2 = -(-1082958016_i32);
_5.1 = !_5.0;
_5 = (80477905852443045644523501679395029403_i128, 31723019066945485189554654824032915659_i128, 1741151798_i32);
_4 = !911_i16;
_5 = (10822216953394529908000909899138987615_i128, (-35342377065891153132845644398902158927_i128), 61579116_i32);
_1 = true & true;
_7 = _3;
_4 = (-30023_i16) ^ (-3132_i16);
_4 = (-19335_i16);
Goto(bb2)
}
bb2 = {
_3 = !_7;
_5.0 = !_5.1;
_8 = [168606664276010061432488507806607552786_u128,94164363501024253722825615944394003133_u128,209796577689697923287318692533103812309_u128,157297651680054373877166495256711080567_u128,62200030217207936108747005912127423693_u128,259287638866261051955156278155701319065_u128,297896728121248035053506058846257795833_u128,316690824491056533803970730363017313474_u128];
_7 = _5.2 as usize;
match _5.2 {
0 => bb3,
61579116 => bb5,
_ => bb4
}
}
bb3 = {
RET = 83_isize ^ 9223372036854775807_isize;
_2 = 37_i8 & 22_i8;
_1 = !false;
_5.0 = (-154309576077676405672985961967836048826_i128);
_5.2 = -(-1082958016_i32);
_5.1 = !_5.0;
_5 = (80477905852443045644523501679395029403_i128, 31723019066945485189554654824032915659_i128, 1741151798_i32);
_4 = !911_i16;
_5 = (10822216953394529908000909899138987615_i128, (-35342377065891153132845644398902158927_i128), 61579116_i32);
_1 = true & true;
_7 = _3;
_4 = (-30023_i16) ^ (-3132_i16);
_4 = (-19335_i16);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_9.fld0.0 = 3120719897_u32;
_1 = false | false;
_6 = 17249102437245257603_u64 as f32;
_9.fld0.0 = 2402853694_u32 & 4083155893_u32;
_4 = _1 as i16;
_7 = _3;
_9.fld1 = _7 as f32;
_9.fld0 = (3295849664_u32,);
_9.fld1 = 7058484021136441682468976379622174387_u128 as f32;
_10 = _1;
_9.fld0 = (763710077_u32,);
_9.fld2 = 7159_u16 as u32;
_11 = _9.fld0.0 as f64;
Goto(bb6)
}
bb6 = {
_5 = ((-166886047362561105646737279415374952072_i128), 5291740445793390346255091002329813332_i128, (-288661250_i32));
Call(_5.0 = core::intrinsics::bswap(_5.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_1 = _2 != _2;
_9.fld0.0 = _9.fld2 ^ _9.fld2;
RET = -(-9223372036854775808_isize);
_5 = (111413245536743306965869062223283209155_i128, 138285067797028139836031953204216647945_i128, (-155030696_i32));
_9.fld1 = _6 * _6;
_9.fld0 = (_9.fld2,);
_11 = _5.0 as f64;
_2 = 305816159785483283896927676462351163467_u128 as i8;
_11 = 280297211666040394700860423174017427284_u128 as f64;
_12 = _4 as i8;
_2 = _12;
_9.fld0 = (_9.fld2,);
_11 = 6882118002467999582_u64 as f64;
_4 = (-8608_i16) >> _5.0;
_7 = _3 / 17164834655649700161_usize;
_14.fld2.2 = _9.fld0.0 as u8;
_1 = !_10;
RET = -(-6_isize);
_15.fld3.fld0 = !_10;
_14.fld1.fld1.fld0 = [_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld2,_9.fld2,_9.fld0.0,_9.fld0.0,_9.fld0.0];
_15.fld1 = [_7];
_15.fld0 = [39305_u16,38578_u16,64582_u16,9828_u16];
_14.fld1.fld1.fld2 = 17905575401834176631_u64 % 18165323229731536289_u64;
_17.fld0.1 = (_5.1, _5.0, _5.2);
_14.fld2.0 = _7 as u32;
Goto(bb8)
}
bb8 = {
_1 = _15.fld3.fld0;
_14.fld1.fld1.fld2 = _2 as u64;
_14.fld3 = !_14.fld2.0;
match _17.fld0.1.1 {
0 => bb6,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
111413245536743306965869062223283209155 => bb16,
_ => bb15
}
}
bb9 = {
_1 = _2 != _2;
_9.fld0.0 = _9.fld2 ^ _9.fld2;
RET = -(-9223372036854775808_isize);
_5 = (111413245536743306965869062223283209155_i128, 138285067797028139836031953204216647945_i128, (-155030696_i32));
_9.fld1 = _6 * _6;
_9.fld0 = (_9.fld2,);
_11 = _5.0 as f64;
_2 = 305816159785483283896927676462351163467_u128 as i8;
_11 = 280297211666040394700860423174017427284_u128 as f64;
_12 = _4 as i8;
_2 = _12;
_9.fld0 = (_9.fld2,);
_11 = 6882118002467999582_u64 as f64;
_4 = (-8608_i16) >> _5.0;
_7 = _3 / 17164834655649700161_usize;
_14.fld2.2 = _9.fld0.0 as u8;
_1 = !_10;
RET = -(-6_isize);
_15.fld3.fld0 = !_10;
_14.fld1.fld1.fld0 = [_9.fld0.0,_9.fld0.0,_9.fld0.0,_9.fld2,_9.fld2,_9.fld0.0,_9.fld0.0,_9.fld0.0];
_15.fld1 = [_7];
_15.fld0 = [39305_u16,38578_u16,64582_u16,9828_u16];
_14.fld1.fld1.fld2 = 17905575401834176631_u64 % 18165323229731536289_u64;
_17.fld0.1 = (_5.1, _5.0, _5.2);
_14.fld2.0 = _7 as u32;
Goto(bb8)
}
bb10 = {
_5 = ((-166886047362561105646737279415374952072_i128), 5291740445793390346255091002329813332_i128, (-288661250_i32));
Call(_5.0 = core::intrinsics::bswap(_5.1), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_9.fld0.0 = 3120719897_u32;
_1 = false | false;
_6 = 17249102437245257603_u64 as f32;
_9.fld0.0 = 2402853694_u32 & 4083155893_u32;
_4 = _1 as i16;
_7 = _3;
_9.fld1 = _7 as f32;
_9.fld0 = (3295849664_u32,);
_9.fld1 = 7058484021136441682468976379622174387_u128 as f32;
_10 = _1;
_9.fld0 = (763710077_u32,);
_9.fld2 = 7159_u16 as u32;
_11 = _9.fld0.0 as f64;
Goto(bb6)
}
bb12 = {
Return()
}
bb13 = {
RET = 83_isize ^ 9223372036854775807_isize;
_2 = 37_i8 & 22_i8;
_1 = !false;
_5.0 = (-154309576077676405672985961967836048826_i128);
_5.2 = -(-1082958016_i32);
_5.1 = !_5.0;
_5 = (80477905852443045644523501679395029403_i128, 31723019066945485189554654824032915659_i128, 1741151798_i32);
_4 = !911_i16;
_5 = (10822216953394529908000909899138987615_i128, (-35342377065891153132845644398902158927_i128), 61579116_i32);
_1 = true & true;
_7 = _3;
_4 = (-30023_i16) ^ (-3132_i16);
_4 = (-19335_i16);
Goto(bb2)
}
bb14 = {
_3 = !_7;
_5.0 = !_5.1;
_8 = [168606664276010061432488507806607552786_u128,94164363501024253722825615944394003133_u128,209796577689697923287318692533103812309_u128,157297651680054373877166495256711080567_u128,62200030217207936108747005912127423693_u128,259287638866261051955156278155701319065_u128,297896728121248035053506058846257795833_u128,316690824491056533803970730363017313474_u128];
_7 = _5.2 as usize;
match _5.2 {
0 => bb3,
61579116 => bb5,
_ => bb4
}
}
bb15 = {
RET = 83_isize ^ 9223372036854775807_isize;
_2 = 37_i8 & 22_i8;
_1 = !false;
_5.0 = (-154309576077676405672985961967836048826_i128);
_5.2 = -(-1082958016_i32);
_5.1 = !_5.0;
_5 = (80477905852443045644523501679395029403_i128, 31723019066945485189554654824032915659_i128, 1741151798_i32);
_4 = !911_i16;
_5 = (10822216953394529908000909899138987615_i128, (-35342377065891153132845644398902158927_i128), 61579116_i32);
_1 = true & true;
_7 = _3;
_4 = (-30023_i16) ^ (-3132_i16);
_4 = (-19335_i16);
Goto(bb2)
}
bb16 = {
_9.fld1 = _6 - _6;
_17.fld0.1.1 = -_17.fld0.1.0;
_8 = [120138158521490363755906740100386328183_u128,6521555726408169698606229307488224055_u128,70847971205933699318135771475084036504_u128,46981062569840477998798590165587076367_u128,146012118098328061662997824207453861989_u128,251687041218411673251966439267480156910_u128,276568484311344189873522933542555934922_u128,304289099793307202334343837826348779898_u128];
_15.fld3.fld1 = Adt51 { fld0: _14.fld1.fld1.fld0,fld1: _2,fld2: _14.fld1.fld1.fld2 };
_17.fld0.1.1 = _5.1;
_15.fld3.fld0 = _17.fld0.1.1 <= _17.fld0.1.0;
_10 = !_15.fld3.fld0;
_14.fld2.2 = 85_u8 << _7;
_15.fld3.fld1.fld1 = _12;
_2 = _15.fld3.fld1.fld1 - _15.fld3.fld1.fld1;
_17.fld0.2 = 223321951214246860889443973741563190257_u128;
_14.fld2.1 = _11 as u8;
_17.fld0 = (_2, _5, 194764292171714120043900575268383230594_u128, _4);
_14.fld2.0 = _14.fld3 * _14.fld3;
_12 = !_17.fld0.0;
_18 = Move(_17);
_14.fld1.fld1.fld1 = !_2;
Goto(bb17)
}
bb17 = {
Call(_19 = dump_var(18_usize, 7_usize, Move(_7), 2_usize, Move(_2), 5_usize, Move(_5), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{9f48c}'), std::hint::black_box(98_isize), std::hint::black_box(80_i8), std::hint::black_box((-4436_i16)), std::hint::black_box((-1218061338_i32)), std::hint::black_box((-1921358478596022189_i64)), std::hint::black_box(169648006827082211337032653148313336935_i128), std::hint::black_box(1_usize), std::hint::black_box(228_u8), std::hint::black_box(59805_u16), std::hint::black_box(2939256464_u32), std::hint::black_box(40812773949316260198764306782257834076_u128));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: [u16; 4],
fld1: *mut *const i64,
fld2: isize,
fld3: u64,
fld4: [usize; 1],
fld5: *mut u8,
fld6: (i64, f32, u16),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: f64,
fld1: (u32, u8, u8),
fld2: [usize; 1],
fld3: *mut *const i64,
fld4: i16,
fld5: f32,
fld6: *mut u8,
fld7: *const (f64, f32),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: [u32; 8],
fld1: i8,
fld2: u64,
}
#[derive(Debug)]
pub struct Adt52 {
fld0: [u32; 8],
fld1: [i32; 4],
fld2: [u16; 4],
fld3: [u16; 2],
}
#[derive(Debug)]
pub struct Adt53 {
fld0: *const ((i8, (i128, i128, i32), u128, i16),),
fld1: ((i128, f64), isize, (u32,), f32, u32),
fld2: Adt50,
fld3: [isize; 7],
fld4: *const i64,
fld5: u8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: *const (f64, f32),
fld1: u64,
}
#[derive(Debug)]
pub struct Adt55 {
fld0: u32,
fld1: *const f64,
fld2: usize,
fld3: *const i64,
fld4: (i8, (i128, i128, i32), u128, i16),
fld5: [isize; 7],
fld6: [char; 1],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: bool,
fld1: Adt51,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: u64,
fld1: [i32; 4],
}
#[derive(Debug)]
pub struct Adt58 {
fld0: (i8, (i128, i128, i32), u128, i16),
}
#[derive(Debug)]
pub struct Adt59 {
fld0: f32,
fld1: (i8, (i128, i128, i32), u128, i16),
fld2: Adt56,
fld3: (i16, *mut u8, (isize, (f64, f32)), [u16; 2], *const (f64, f32), i8),
fld4: i16,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: [u16; 4],
fld1: [usize; 1],
fld2: *const i64,
fld3: Adt56,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: i32,
fld1: [i128; 4],
fld2: u32,
fld3: [u16; 2],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt62 {
fld0: (u32,),
fld1: f32,
fld2: u32,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: *const f64,
fld1: Adt58,
fld2: Adt61,
fld3: [i32; 4],
fld4: [u32; 8],
fld5: i32,
fld6: Adt56,
fld7: u32,
}
#[derive(Debug)]
pub struct Adt64 {
fld0: (u32,),
fld1: Adt56,
fld2: (u32, u8, u8),
fld3: u32,
fld4: i16,
fld5: *const i64,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: (i8, i128, *mut u8, usize),
fld1: *mut u8,
fld2: [u128; 8],
fld3: Adt55,
fld4: Adt53,
}

