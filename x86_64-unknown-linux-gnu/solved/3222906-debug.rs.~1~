#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u8) -> f64 {
mir! {
type RET = f64;
let _3: u64;
let _4: Adt53;
let _5: f64;
let _6: [u32; 1];
let _7: i16;
let _8: [i128; 4];
let _9: [i32; 8];
let _10: bool;
let _11: isize;
let _12: *const bool;
let _13: Adt56;
let _14: f32;
let _15: [i8; 4];
let _16: bool;
let _17: (char, *mut i8);
let _18: u16;
let _19: (*const i8,);
let _20: *const bool;
let _21: f32;
let _22: (*const i8,);
let _23: f64;
let _24: char;
let _25: i16;
let _26: isize;
let _27: i128;
let _28: u32;
let _29: i32;
let _30: Adt55;
let _31: u128;
let _32: isize;
let _33: ([i16; 2], isize, (isize,));
let _34: Adt52;
let _35: i16;
let _36: [u16; 5];
let _37: ();
let _38: ();
{
_2 = 81_u8 & 7_u8;
RET = _2 as f64;
_2 = 6_u8 + 143_u8;
RET = 4827728345390440247_usize as f64;
_2 = (-85_isize) as u8;
_3 = 12210866389028657584_u64 << _2;
_1 = _3 <= _3;
RET = (-7543574765833965869_i64) as f64;
_1 = true;
_3 = 17968381488440306689_u64;
_3 = 7357224044893503853_u64;
_2 = !40_u8;
_2 = 20_u8;
_3 = !7464233041816991342_u64;
_1 = !false;
RET = 907649278_u32 as f64;
_2 = 177_u8 / 167_u8;
RET = 22207_i16 as f64;
_2 = _1 as u8;
Goto(bb1)
}
bb1 = {
RET = 307952429778652015654943723125916895021_u128 as f64;
_2 = !162_u8;
_4.fld0 = 95069115240824541539705989719083392111_u128 as usize;
_1 = true;
_4.fld0 = 14070039488603880484_usize;
_4.fld0 = (-112528889673371057001163953204724808779_i128) as usize;
RET = (-46560595838598308413754325816811835738_i128) as f64;
_4.fld0 = 9087723752351850848_usize;
_4.fld0 = !2445493501434759556_usize;
_2 = _1 as u8;
_1 = !false;
RET = (-24434_i16) as f64;
_1 = !true;
_2 = 3099917644_u32 as u8;
RET = 18345804949782507469161485423765643520_i128 as f64;
_3 = !9974585673407707430_u64;
RET = _4.fld0 as f64;
Call(_3 = fn1(_4.fld0, _4.fld0, _2, _2, _2, _4.fld0, _1, _2, _1, _2, _2, _4.fld0, _4.fld0), bb2, UnwindUnreachable())
}
bb2 = {
_4.fld0 = 1744546827824828105_usize << _3;
RET = 3521373673496730326_i64 as f64;
RET = 24_i8 as f64;
_4.fld0 = 13921683614405713502_usize;
_5 = (-9220_i16) as f64;
_1 = !false;
RET = _5 - _5;
_4.fld0 = !5_usize;
RET = -_5;
_5 = 16176_u16 as f64;
_4.fld0 = 676986487_i32 as usize;
_7 = 17554_i16;
_6 = [4079476031_u32];
_3 = 17961686786075465961_u64;
RET = _2 as f64;
_4.fld0 = 10391544185414639509_usize / 4033599149559744344_usize;
_3 = !1669300716355482203_u64;
_7 = 9223372036854775807_isize as i16;
_6 = [1653225650_u32];
RET = _5 / (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002376155769897666_f64);
_8 = [(-60434753439797169258580142137544323422_i128),(-78927601459598645287480480882849277912_i128),45450006404608522721172874668562524358_i128,167592407745304741737921103211469854524_i128];
_6 = [503035008_u32];
_6 = [2472886884_u32];
_6 = [1292181904_u32];
_1 = !false;
_3 = !2797943299456306874_u64;
_2 = 61_u8 * 32_u8;
_5 = 143540809734907959301442748511553300408_u128 as f64;
_4.fld0 = 15598753104037378696_usize - 12148011461315622098_usize;
Goto(bb3)
}
bb3 = {
_5 = 31645_u16 as f64;
_1 = true;
_6 = [1546343577_u32];
_3 = 12491749221002561687_u64 * 4909189466826125977_u64;
_1 = false;
_4.fld0 = 42_i8 as usize;
_7 = !(-7988_i16);
_4.fld0 = !12383402309381328116_usize;
Goto(bb4)
}
bb4 = {
_8 = [112498020746848585653098108355855049531_i128,(-30837108671433320793954079515111726481_i128),79105375323325434236942338995773622636_i128,(-161393508333570127200086186724867806199_i128)];
_6 = [3959136766_u32];
_2 = 208_u8;
_8 = [(-159914511850785449094197006790468191588_i128),169354188530595840724168976542203057974_i128,10412175453887992347185815252786849194_i128,98567638824871836203033791611754152072_i128];
_8 = [20973342687418382259619732154762951724_i128,123136296679885784510465926047890081709_i128,28177865522922716007078843583611623659_i128,98571854600697799377721762850265630274_i128];
_6 = [2921498251_u32];
RET = _5 / f64::INFINITY;
_4.fld0 = 0_usize;
RET = _2 as f64;
Goto(bb5)
}
bb5 = {
_9 = [(-1468817247_i32),1785618301_i32,2091068476_i32,749594569_i32,(-1085295112_i32),(-841739008_i32),(-340800455_i32),1912555246_i32];
_3 = 10455_u16 as u64;
_4.fld0 = 3_usize;
Goto(bb6)
}
bb6 = {
_5 = 65457_u16 as f64;
_9 = [(-1209707126_i32),1935185429_i32,874973988_i32,1433290812_i32,769969420_i32,(-150816121_i32),(-1235826333_i32),(-512068640_i32)];
_8 = [(-56656701084014531105685283408712230879_i128),(-86806643218246579516673692704935745936_i128),80245580671029377489907331467827568571_i128,(-37099780091950059681590150568726322905_i128)];
_11 = _4.fld0 as isize;
_2 = 65_u8;
_10 = _2 >= _2;
RET = _5;
_7 = 18270_i16;
_4.fld0 = 1818089829159908326_usize;
_12 = core::ptr::addr_of!(_10);
_7 = !(-20280_i16);
Goto(bb7)
}
bb7 = {
_12 = core::ptr::addr_of!((*_12));
match _4.fld0 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb4,
4 => bb5,
1818089829159908326 => bb9,
_ => bb8
}
}
bb8 = {
_8 = [112498020746848585653098108355855049531_i128,(-30837108671433320793954079515111726481_i128),79105375323325434236942338995773622636_i128,(-161393508333570127200086186724867806199_i128)];
_6 = [3959136766_u32];
_2 = 208_u8;
_8 = [(-159914511850785449094197006790468191588_i128),169354188530595840724168976542203057974_i128,10412175453887992347185815252786849194_i128,98567638824871836203033791611754152072_i128];
_8 = [20973342687418382259619732154762951724_i128,123136296679885784510465926047890081709_i128,28177865522922716007078843583611623659_i128,98571854600697799377721762850265630274_i128];
_6 = [2921498251_u32];
RET = _5 / f64::INFINITY;
_4.fld0 = 0_usize;
RET = _2 as f64;
Goto(bb5)
}
bb9 = {
_1 = _10;
_15 = [(-11_i8),(-7_i8),(-43_i8),26_i8];
_13.fld0 = [147946618191325894819607246173821407655_i128,11403161414750377934308773639427038687_i128,129417516116189629757459410583412872123_i128,(-1697873342278298892122959557527223445_i128)];
_14 = _3 as f32;
_13 = Adt56 { fld0: _8,fld1: 3686393482_u32 };
_1 = _10 <= (*_12);
_3 = !5095406545267523892_u64;
_11 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_6 = [_13.fld1];
_7 = !5300_i16;
Call(_13.fld0 = fn14(_11, _3, _13.fld1, _4.fld0, _13.fld1, (*_12), _12, _2, _4.fld0), bb10, UnwindUnreachable())
}
bb10 = {
_15 = [(-109_i8),(-62_i8),(-20_i8),(-60_i8)];
_17.0 = '\u{337e0}';
_17.0 = '\u{29413}';
_1 = (*_12) > _10;
_17.0 = '\u{103798}';
_17.0 = '\u{e1a77}';
_11 = (-9223372036854775808_isize);
_15 = [(-70_i8),(-25_i8),(-44_i8),4_i8];
_16 = _1 <= _10;
_15 = [116_i8,(-98_i8),(-65_i8),(-91_i8)];
_3 = 13387257469939158449_u64;
_6 = [_13.fld1];
_18 = 46078_u16 >> _3;
_16 = !_1;
_6 = [_13.fld1];
_7 = (-149_i16) << _11;
_15 = [108_i8,(-60_i8),4_i8,82_i8];
_21 = _14;
match _13.fld1 {
0 => bb9,
1 => bb7,
3686393482 => bb12,
_ => bb11
}
}
bb11 = {
_1 = _10;
_15 = [(-11_i8),(-7_i8),(-43_i8),26_i8];
_13.fld0 = [147946618191325894819607246173821407655_i128,11403161414750377934308773639427038687_i128,129417516116189629757459410583412872123_i128,(-1697873342278298892122959557527223445_i128)];
_14 = _3 as f32;
_13 = Adt56 { fld0: _8,fld1: 3686393482_u32 };
_1 = _10 <= (*_12);
_3 = !5095406545267523892_u64;
_11 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_6 = [_13.fld1];
_7 = !5300_i16;
Call(_13.fld0 = fn14(_11, _3, _13.fld1, _4.fld0, _13.fld1, (*_12), _12, _2, _4.fld0), bb10, UnwindUnreachable())
}
bb12 = {
_14 = -_21;
_12 = core::ptr::addr_of!(_10);
_20 = _12;
(*_20) = _16;
_13 = Adt56 { fld0: _8,fld1: 3015002038_u32 };
_13.fld1 = 3060036212_u32;
RET = -_5;
_10 = _1;
(*_12) = _4.fld0 > _4.fld0;
_20 = _12;
(*_12) = _16;
_21 = _14;
(*_12) = _16;
_1 = !(*_12);
(*_12) = !_1;
_13.fld1 = (-1056807464190368335_i64) as u32;
_9 = [704434607_i32,323674195_i32,1638290066_i32,(-94403664_i32),(-2116228387_i32),(-1844020122_i32),(-1507017126_i32),599458643_i32];
_9 = [1497067287_i32,1738362020_i32,(-19638221_i32),(-1660978747_i32),1870497334_i32,(-1636521857_i32),(-1096299062_i32),(-1883660016_i32)];
(*_20) = !_1;
match _4.fld0 {
1818089829159908326 => bb13,
_ => bb1
}
}
bb13 = {
(*_20) = !_1;
_4.fld0 = 6_usize | 2_usize;
_8 = [(-115681669325069006573495787118500135128_i128),39599359388633832666874468619666035051_i128,(-146472402997272058276273866210738801361_i128),(-129181347778398963723210167304195977135_i128)];
_26 = _4.fld0 as isize;
(*_20) = !_16;
_7 = !(-29034_i16);
_29 = 1368053886_i32;
_15 = [55_i8,11_i8,(-71_i8),88_i8];
_16 = !(*_12);
_1 = (*_12);
(*_12) = _1;
_28 = _13.fld1;
_11 = _26 << _26;
_6 = [_13.fld1];
_13 = Adt56 { fld0: _8,fld1: _28 };
_4.fld0 = (-31_i8) as usize;
_13.fld1 = _28;
_28 = _13.fld1;
(*_20) = _1;
_30.fld1 = [_28];
match _2 {
0 => bb7,
1 => bb2,
2 => bb6,
3 => bb12,
4 => bb14,
65 => bb16,
_ => bb15
}
}
bb14 = {
_5 = 65457_u16 as f64;
_9 = [(-1209707126_i32),1935185429_i32,874973988_i32,1433290812_i32,769969420_i32,(-150816121_i32),(-1235826333_i32),(-512068640_i32)];
_8 = [(-56656701084014531105685283408712230879_i128),(-86806643218246579516673692704935745936_i128),80245580671029377489907331467827568571_i128,(-37099780091950059681590150568726322905_i128)];
_11 = _4.fld0 as isize;
_2 = 65_u8;
_10 = _2 >= _2;
RET = _5;
_7 = 18270_i16;
_4.fld0 = 1818089829159908326_usize;
_12 = core::ptr::addr_of!(_10);
_7 = !(-20280_i16);
Goto(bb7)
}
bb15 = {
_1 = _10;
_15 = [(-11_i8),(-7_i8),(-43_i8),26_i8];
_13.fld0 = [147946618191325894819607246173821407655_i128,11403161414750377934308773639427038687_i128,129417516116189629757459410583412872123_i128,(-1697873342278298892122959557527223445_i128)];
_14 = _3 as f32;
_13 = Adt56 { fld0: _8,fld1: 3686393482_u32 };
_1 = _10 <= (*_12);
_3 = !5095406545267523892_u64;
_11 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_6 = [_13.fld1];
_7 = !5300_i16;
Call(_13.fld0 = fn14(_11, _3, _13.fld1, _4.fld0, _13.fld1, (*_12), _12, _2, _4.fld0), bb10, UnwindUnreachable())
}
bb16 = {
_5 = 60975330831942388118241822371764076233_u128 as f64;
_30.fld3 = _18 << _13.fld1;
_24 = _17.0;
_6 = _30.fld1;
_17.0 = _24;
_32 = _11;
_32 = -_26;
_10 = !_1;
_33.0 = [_7,_7];
_24 = _17.0;
_34.fld1.0.0 = _11 << _26;
_16 = _10;
_4.fld0 = !6_usize;
_33.0 = [_7,_7];
_5 = _18 as f64;
_30.fld0 = [_28,_28,_28,_28,_28,_28,_28];
_27 = -57735401309294963321593754660444874579_i128;
_23 = -_5;
_29 = (-1697588682_i32);
_30.fld0 = [_13.fld1,_28,_13.fld1,_13.fld1,_28,_28,_28];
(*_12) = !_1;
_7 = 22538_i16 ^ 15901_i16;
_27 = _26 as i128;
_33.1 = _11;
RET = _13.fld1 as f64;
_7 = 28187_i16 ^ (-17149_i16);
Goto(bb17)
}
bb17 = {
Call(_37 = dump_var(0_usize, 26_usize, Move(_26), 32_usize, Move(_32), 15_usize, Move(_15), 29_usize, Move(_29)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(0_usize, 24_usize, Move(_24), 28_usize, Move(_28), 10_usize, Move(_10), 3_usize, Move(_3)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_37 = dump_var(0_usize, 11_usize, Move(_11), 38_usize, _38, 38_usize, _38, 38_usize, _38), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: usize,mut _2: usize,mut _3: u8,mut _4: u8,mut _5: u8,mut _6: usize,mut _7: bool,mut _8: u8,mut _9: bool,mut _10: u8,mut _11: u8,mut _12: usize,mut _13: usize) -> u64 {
mir! {
type RET = u64;
let _14: [u32; 1];
let _15: (char, *mut i8);
let _16: Adt54;
let _17: Adt59;
let _18: u64;
let _19: u16;
let _20: char;
let _21: Adt63;
let _22: [i128; 4];
let _23: Adt52;
let _24: isize;
let _25: [i16; 4];
let _26: f64;
let _27: isize;
let _28: Adt59;
let _29: usize;
let _30: u32;
let _31: (char, *mut i8);
let _32: Adt65;
let _33: *const i8;
let _34: [usize; 3];
let _35: bool;
let _36: Adt55;
let _37: bool;
let _38: (u128, u128, u32, usize, char, i8);
let _39: i128;
let _40: bool;
let _41: isize;
let _42: (isize,);
let _43: i64;
let _44: [u8; 6];
let _45: Adt54;
let _46: f32;
let _47: ();
let _48: ();
{
_11 = '\u{4d5ab}' as u8;
_4 = 41476_u16 as u8;
_11 = _8 & _5;
RET = 15359928105297671177_u64 * 2782869395533033156_u64;
Call(_1 = core::intrinsics::bswap(_6), bb1, UnwindUnreachable())
}
bb1 = {
_2 = !_13;
_13 = 5920426293031678420_i64 as usize;
_16.fld3.1 = core::ptr::addr_of!(_16.fld3.2);
_11 = _5;
_8 = !_4;
_16.fld0 = [2208982412_u32,4260328894_u32,2261135089_u32,2840158954_u32,1651250966_u32,3550199823_u32,2646815613_u32];
_9 = !_7;
Goto(bb2)
}
bb2 = {
_17.fld0.fld1 = [747645648_u32];
_17.fld0.fld0.fld1 = core::ptr::addr_of!(_16.fld3.2);
_16.fld3.2 = (-6853_i16) as i8;
_17.fld0.fld1 = [1286338386_u32];
_18 = 16775669445657464772_u64 ^ 4137719063899172916_u64;
_17.fld5.fld1 = 2855894800_u32 as i128;
_17.fld5.fld5 = [_6,_12,_2];
_14 = [1669399242_u32];
RET = !_18;
_19 = 43881_u16 | 4881_u16;
_15.1 = core::ptr::addr_of_mut!(_16.fld3.2);
_3 = !_10;
_21.fld5.0 = -18746_i16;
_11 = _3;
Call(_23.fld2 = fn2(_17.fld5.fld5, _9, _15.1, _14, _1, _17.fld5.fld1, _1, _17.fld5.fld5, _6, _19, _16.fld0, _3, _17.fld0.fld1, _18, _16.fld3.2, _10), bb3, UnwindUnreachable())
}
bb3 = {
_21.fld2.fld1.0.0 = 39_isize;
_21.fld2.fld2 = (_16.fld3.1,);
_21.fld5.1.2 = (-2084358780_i32) as u32;
_21.fld2.fld0 = core::ptr::addr_of!(_21.fld5.1);
Call(_16.fld3.2 = fn4(_13, _15.1, _12, _23.fld2.0, _21.fld2.fld1.0, _21.fld2.fld1.0.0, _17.fld0.fld0.fld1), bb4, UnwindUnreachable())
}
bb4 = {
_21.fld2.fld3 = [76747214_i32,(-1714388491_i32),(-673814526_i32),(-1727386354_i32),(-274349028_i32),(-781975902_i32),(-1895986839_i32),846913665_i32];
_25 = [_21.fld5.0,_21.fld5.0,_21.fld5.0,_21.fld5.0];
_16.fld1 = [5010324929298776350_i64,891719154920710743_i64,(-2755581594040457782_i64),(-9103233722445321598_i64),(-7350907429262238567_i64),597849218223046064_i64,150414733228988980_i64];
_28.fld0.fld2 = 107455058491322066629715588406207641977_u128;
_17.fld5.fld2 = [_10,_4,_8,_3,_11,_8];
_28.fld3 = [_19,_19,_19,_19,_19];
_27 = _21.fld2.fld1.0.0;
_21.fld3 = 7541574485766653871_i64 as f64;
_28.fld0.fld2 = _21.fld3 as u128;
RET = !_18;
_26 = -_21.fld3;
_21.fld5.1.2 = !3022524517_u32;
_16.fld0 = [_21.fld5.1.2,_21.fld5.1.2,_21.fld5.1.2,_21.fld5.1.2,_21.fld5.1.2,_21.fld5.1.2,_21.fld5.1.2];
_17.fld5.fld2 = [_10,_4,_3,_11,_8,_4];
Goto(bb5)
}
bb5 = {
_17.fld0.fld3 = [_16.fld3.2,_16.fld3.2,_16.fld3.2,_16.fld3.2];
_21.fld2.fld2 = (_23.fld2.0,);
_21.fld3 = 7330486520969154817_i64 as f64;
_28.fld5.fld5 = _17.fld5.fld5;
Call(_17.fld0.fld2 = fn8(_8, _21.fld2.fld2.0, _7, _26, _16.fld3.1, _16.fld0, _27), bb6, UnwindUnreachable())
}
bb6 = {
_16.fld2 = _17.fld0.fld3;
_17.fld0.fld1 = [_21.fld5.1.2];
_21.fld5.2.2 = _21.fld5.0 as u128;
_17.fld5.fld6 = _18 as f32;
_17.fld0.fld0.fld0 = !_1;
_21.fld5.2.1 = _5 >> _21.fld5.2.2;
_23 = _21.fld2;
_28.fld0.fld4 = ('\u{6ab93}', _15.1);
_21.fld5.1.0 = _21.fld5.2.1 as u128;
_17.fld0.fld0.fld1 = core::ptr::addr_of!(_16.fld3.2);
_28.fld1 = [1822051624_i32,(-1534746285_i32),1789287494_i32,630907249_i32,1551938662_i32,(-24537029_i32),1680483667_i32,2114967989_i32];
_32.fld0 = (_27,);
_28.fld0.fld0.fld1 = core::ptr::addr_of!(_21.fld5.1.5);
_23.fld2.0 = _16.fld3.1;
_28.fld5.fld1 = !_17.fld5.fld1;
_28.fld5.fld2 = _17.fld5.fld2;
_21.fld5.1.1 = _17.fld0.fld2 * _17.fld0.fld2;
_17.fld0.fld4.0 = _28.fld0.fld4.0;
_23 = Adt52 { fld0: _21.fld2.fld0,fld1: _21.fld2.fld1,fld2: _21.fld2.fld2,fld3: _21.fld2.fld3 };
_17.fld5.fld3.0 = _17.fld0.fld4.0;
_21.fld5.2.0.0 = _32.fld0;
_28.fld5.fld3.1 = core::ptr::addr_of_mut!(_21.fld5.1.5);
_32.fld2.2.0 = !_21.fld2.fld1.0.0;
_15 = (_17.fld0.fld4.0, _28.fld0.fld4.1);
_21.fld2.fld2.0 = core::ptr::addr_of!(_16.fld3.2);
_25 = [_21.fld5.0,_21.fld5.0,_21.fld5.0,_21.fld5.0];
_32.fld1 = [_6,_13,_17.fld0.fld0.fld0];
Goto(bb7)
}
bb7 = {
_21.fld5.1.3 = _12;
_17.fld0.fld4 = (_17.fld5.fld3.0, _15.1);
_32.fld0 = (_32.fld2.2.0,);
_28.fld0.fld0 = Adt53 { fld0: _21.fld5.1.3,fld1: _23.fld2.0 };
_23.fld2.0 = core::ptr::addr_of!(_21.fld5.1.5);
_16.fld3.0 = [_16.fld3.2,_16.fld3.2,_16.fld3.2,_16.fld3.2];
_28.fld3 = [_19,_19,_19,_19,_19];
_17.fld3 = [_19,_19,_19,_19,_19];
_21.fld2.fld3 = [(-991014800_i32),684724584_i32,(-1910301917_i32),(-1104860358_i32),1929344427_i32,(-1356915625_i32),240924805_i32,(-566923363_i32)];
_21.fld5.1.5 = _16.fld3.2;
_23.fld3 = [724569704_i32,(-415281129_i32),216841839_i32,(-965461544_i32),(-2057329810_i32),2128653036_i32,(-591540702_i32),1052295797_i32];
_28.fld0.fld1 = [_21.fld5.1.2];
_36.fld1 = _14;
_17.fld5.fld1 = _17.fld5.fld6 as i128;
_37 = _9;
_4 = _8;
RET = !_18;
_32.fld2.0 = [_21.fld5.0,_21.fld5.0];
_17.fld1 = [1391110920_i32,(-251016578_i32),1887346090_i32,(-457304330_i32),(-1671490583_i32),505944954_i32,1166431575_i32,(-181231822_i32)];
_38.5 = -_21.fld5.1.5;
_38.4 = _28.fld0.fld4.0;
_38.5 = _21.fld5.1.5;
_21.fld2.fld0 = core::ptr::addr_of!(_21.fld5.1);
_36.fld2 = _26;
_28.fld0.fld3 = [_16.fld3.2,_21.fld5.1.5,_21.fld5.1.5,_16.fld3.2];
Goto(bb8)
}
bb8 = {
_5 = _21.fld5.1.2 as u8;
Goto(bb9)
}
bb9 = {
_1 = _2 + _28.fld0.fld0.fld0;
_36.fld0 = _16.fld0;
_21.fld5.2.0.0.0 = -_21.fld2.fld1.0.0;
_28.fld0 = Adt57 { fld0: _17.fld0.fld0,fld1: _14,fld2: _21.fld5.1.1,fld3: _16.fld2,fld4: _15 };
_17.fld0.fld3 = [_16.fld3.2,_16.fld3.2,_21.fld5.1.5,_16.fld3.2];
_28.fld5.fld3.0 = _28.fld0.fld4.0;
_21.fld5.1.2 = _36.fld2 as u32;
_34 = [_1,_12,_1];
_27 = _21.fld5.1.5 as isize;
_28.fld4 = _28.fld5.fld3.1;
_21.fld5.1.2 = 643101102_u32;
_38.5 = _27 as i8;
_38.2 = !_21.fld5.1.2;
RET = !_18;
_17.fld5.fld2 = _28.fld5.fld2;
_21.fld5.2.0 = _21.fld2.fld1;
_17.fld5.fld2 = [_4,_8,_10,_4,_3,_11];
_35 = !_37;
_17.fld2 = _21.fld5.2.0.0.0 | _27;
_17.fld1 = _28.fld1;
_31 = _28.fld5.fld3;
_21.fld4 = _17.fld5.fld1;
_38.3 = !_28.fld0.fld0.fld0;
Goto(bb10)
}
bb10 = {
_28.fld5.fld0 = [_21.fld5.0,_21.fld5.0];
_17.fld5.fld3 = (_17.fld0.fld4.0, _17.fld0.fld4.1);
_16.fld0 = [_38.2,_21.fld5.1.2,_21.fld5.1.2,_38.2,_21.fld5.1.2,_38.2,_38.2];
_23.fld1 = (_21.fld5.2.0.0,);
_17.fld5.fld3.0 = _38.4;
_16.fld3.0 = _16.fld2;
_28.fld0.fld4 = (_17.fld0.fld4.0, _15.1);
_28.fld0.fld4 = (_17.fld5.fld3.0, _17.fld5.fld3.1);
Call(_28.fld5.fld2 = core::intrinsics::transmute(_17.fld5.fld2), bb11, UnwindUnreachable())
}
bb11 = {
_36.fld0 = [_21.fld5.1.2,_38.2,_21.fld5.1.2,_21.fld5.1.2,_38.2,_38.2,_21.fld5.1.2];
_32.fld0 = (_21.fld5.2.0.0.0,);
_34 = [_21.fld5.1.3,_1,_28.fld0.fld0.fld0];
_21.fld5.2.0 = _21.fld2.fld1;
_12 = 6473573769074624003_i64 as usize;
_28.fld0.fld0.fld0 = !_13;
_31.0 = _38.4;
match _21.fld5.1.2 {
0 => bb1,
1 => bb8,
2 => bb7,
3 => bb4,
4 => bb9,
5 => bb12,
6 => bb13,
643101102 => bb15,
_ => bb14
}
}
bb12 = {
_2 = !_13;
_13 = 5920426293031678420_i64 as usize;
_16.fld3.1 = core::ptr::addr_of!(_16.fld3.2);
_11 = _5;
_8 = !_4;
_16.fld0 = [2208982412_u32,4260328894_u32,2261135089_u32,2840158954_u32,1651250966_u32,3550199823_u32,2646815613_u32];
_9 = !_7;
Goto(bb2)
}
bb13 = {
_1 = _2 + _28.fld0.fld0.fld0;
_36.fld0 = _16.fld0;
_21.fld5.2.0.0.0 = -_21.fld2.fld1.0.0;
_28.fld0 = Adt57 { fld0: _17.fld0.fld0,fld1: _14,fld2: _21.fld5.1.1,fld3: _16.fld2,fld4: _15 };
_17.fld0.fld3 = [_16.fld3.2,_16.fld3.2,_21.fld5.1.5,_16.fld3.2];
_28.fld5.fld3.0 = _28.fld0.fld4.0;
_21.fld5.1.2 = _36.fld2 as u32;
_34 = [_1,_12,_1];
_27 = _21.fld5.1.5 as isize;
_28.fld4 = _28.fld5.fld3.1;
_21.fld5.1.2 = 643101102_u32;
_38.5 = _27 as i8;
_38.2 = !_21.fld5.1.2;
RET = !_18;
_17.fld5.fld2 = _28.fld5.fld2;
_21.fld5.2.0 = _21.fld2.fld1;
_17.fld5.fld2 = [_4,_8,_10,_4,_3,_11];
_35 = !_37;
_17.fld2 = _21.fld5.2.0.0.0 | _27;
_17.fld1 = _28.fld1;
_31 = _28.fld5.fld3;
_21.fld4 = _17.fld5.fld1;
_38.3 = !_28.fld0.fld0.fld0;
Goto(bb10)
}
bb14 = {
_21.fld2.fld1.0.0 = 39_isize;
_21.fld2.fld2 = (_16.fld3.1,);
_21.fld5.1.2 = (-2084358780_i32) as u32;
_21.fld2.fld0 = core::ptr::addr_of!(_21.fld5.1);
Call(_16.fld3.2 = fn4(_13, _15.1, _12, _23.fld2.0, _21.fld2.fld1.0, _21.fld2.fld1.0.0, _17.fld0.fld0.fld1), bb4, UnwindUnreachable())
}
bb15 = {
_6 = !_2;
_14 = [_38.2];
_32.fld2.2 = (_17.fld2,);
_27 = _21.fld5.1.1 as isize;
_28.fld5.fld3.1 = _17.fld0.fld4.1;
_35 = _9;
_20 = _15.0;
_28.fld5.fld2 = _17.fld5.fld2;
_21.fld1 = _17.fld0.fld1;
_38.3 = _17.fld0.fld0.fld0;
_21.fld2.fld0 = core::ptr::addr_of!(_21.fld5.1);
_38.1 = !_28.fld0.fld2;
_28.fld2 = _27 >> _28.fld0.fld2;
_16.fld1 = [7194855397300458811_i64,(-8651534444505972330_i64),(-2637156242176862249_i64),5770956253069916258_i64,(-4156118760591320652_i64),(-2135045947728544120_i64),(-3246108267521768847_i64)];
_21.fld2.fld1 = (_32.fld2.2,);
_22 = [_21.fld4,_28.fld5.fld1,_17.fld5.fld1,_28.fld5.fld1];
_31.0 = _28.fld0.fld4.0;
_28.fld2 = !_27;
_28.fld0.fld0 = Adt53 { fld0: _21.fld5.1.3,fld1: _16.fld3.1 };
_17.fld5.fld4 = [_19,_19,_19,_19,_19];
_21.fld5.1.3 = _6 / 8110715817827826317_usize;
Goto(bb16)
}
bb16 = {
Call(_47 = dump_var(1_usize, 25_usize, Move(_25), 5_usize, Move(_5), 4_usize, Move(_4), 19_usize, Move(_19)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_47 = dump_var(1_usize, 1_usize, Move(_1), 37_usize, Move(_37), 11_usize, Move(_11), 35_usize, Move(_35)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(1_usize, 22_usize, Move(_22), 10_usize, Move(_10), 7_usize, Move(_7), 48_usize, _48), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [usize; 3],mut _2: bool,mut _3: *mut i8,mut _4: [u32; 1],mut _5: usize,mut _6: i128,mut _7: usize,mut _8: [usize; 3],mut _9: usize,mut _10: u16,mut _11: [u32; 7],mut _12: u8,mut _13: [u32; 1],mut _14: u64,mut _15: i8,mut _16: u8) -> (*const i8,) {
mir! {
type RET = (*const i8,);
let _17: i32;
let _18: isize;
let _19: *const (u128, u128, u32, usize, char, i8);
let _20: f64;
let _21: Adt61;
let _22: f64;
let _23: (((isize,),), u8, u128);
let _24: Adt64;
let _25: bool;
let _26: isize;
let _27: *const (u128, u128, u32, usize, char, i8);
let _28: *const bool;
let _29: *mut [u16; 5];
let _30: [u32; 7];
let _31: f64;
let _32: u8;
let _33: bool;
let _34: [i8; 4];
let _35: isize;
let _36: ();
let _37: ();
{
_11 = [498819448_u32,754400102_u32,2051782993_u32,3260189606_u32,3564725001_u32,4077369474_u32,109531894_u32];
RET.0 = core::ptr::addr_of!((*_3));
_11 = [1777850880_u32,305957526_u32,1406353906_u32,1136286609_u32,1545048226_u32,3488379868_u32,4121314885_u32];
(*_3) = 1807420759_u32 as i8;
RET.0 = core::ptr::addr_of!((*_3));
_7 = _5;
RET.0 = core::ptr::addr_of!((*_3));
RET.0 = core::ptr::addr_of!((*_3));
_18 = _10 as isize;
_21.fld0.fld0 = [(-1085562795_i32),1363436272_i32,(-659817635_i32)];
_21.fld0.fld1.1 = 315735509552971507279241155568985164301_u128 & 290495450580939196395320013956628108459_u128;
_14 = _6 as u64;
_21.fld0.fld1.0 = _21.fld0.fld1.1;
_23.1 = _12;
_12 = !_16;
Goto(bb1)
}
bb1 = {
_23.1 = _12;
_21.fld0.fld1.5 = (-18348_i16) as i8;
_23.0.0 = (_18,);
_21.fld0.fld1.0 = _21.fld0.fld1.1 / 41266774564625331564124214516800275913_u128;
_24.fld2.fld5.2.1 = !_23.1;
_24.fld2.fld5.1 = (_21.fld0.fld1.0, _21.fld0.fld1.1, 364026303_u32, _9, '\u{5d468}', _21.fld0.fld1.5);
_24.fld4 = _10;
_24.fld2.fld3 = _18 as f64;
_21.fld0.fld1.1 = !_24.fld2.fld5.1.0;
_24.fld6.fld1 = core::ptr::addr_of!(_21.fld0.fld1.5);
_24.fld2.fld5.2.0.0.0 = !_23.0.0.0;
_21.fld0.fld1.3 = _5 / 2_usize;
_19 = core::ptr::addr_of!(_21.fld0.fld1);
_23.0 = (_24.fld2.fld5.2.0.0,);
(*_19).2 = !_24.fld2.fld5.1.2;
_12 = _24.fld2.fld5.2.1 / 194_u8;
_23 = (_24.fld2.fld5.2.0, _24.fld2.fld5.2.1, _24.fld2.fld5.1.0);
RET.0 = core::ptr::addr_of!((*_3));
_23.1 = 6697062230470521965_i64 as u8;
_19 = core::ptr::addr_of!(_24.fld2.fld5.1);
match (*_19).2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
364026303 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_21.fld0.fld2 = _24.fld2.fld5.2.1 as isize;
(*_19).3 = _5 | _21.fld0.fld1.3;
_24.fld0.fld0 = [_6,_6,_6,_6];
_24.fld1.fld1.4 = (*_19).4;
_24.fld1.fld1 = (*_19);
_24.fld1 = Adt58 { fld0: _21.fld0.fld0,fld1: _24.fld2.fld5.1,fld2: _23.0.0.0 };
_21.fld0.fld1.2 = !_24.fld2.fld5.1.2;
_24.fld2.fld2.fld2 = (_24.fld6.fld1,);
(*_19).2 = (*_19).1 as u32;
_24.fld0.fld0 = [_6,_6,_6,_6];
_20 = _24.fld2.fld3;
(*_19).2 = !_24.fld1.fld1.2;
_21.fld0.fld1.1 = _24.fld1.fld1.0;
_24.fld2.fld5.1.0 = _21.fld0.fld1.0;
(*_19).1 = _24.fld1.fld1.1;
_21.fld0.fld2 = _23.0.0.0;
_20 = _24.fld2.fld3 * _24.fld2.fld3;
(*_19) = (_24.fld1.fld1.1, _24.fld1.fld1.0, _24.fld1.fld1.2, _24.fld1.fld1.3, _24.fld1.fld1.4, _21.fld0.fld1.5);
_21.fld0 = Adt58 { fld0: _24.fld1.fld0,fld1: (*_19),fld2: _18 };
_24.fld2.fld2.fld1 = (_24.fld2.fld5.2.0.0,);
_21.fld0.fld1.2 = !(*_19).2;
_24.fld2.fld5.2.1 = _23.1 << _21.fld0.fld1.2;
_24.fld2.fld2.fld0 = core::ptr::addr_of!(_24.fld1.fld1);
_24.fld1.fld1.1 = _21.fld0.fld1.0;
Call(_30 = fn3(_24.fld2.fld2.fld0, (*_19), _23.0.0.0, _24.fld2.fld5.2.0.0.0, _24.fld2.fld5.1, _24.fld1.fld2, _24.fld1.fld1.3, _21.fld0.fld0, _21.fld0.fld1, _24.fld2.fld5.2.1, _24.fld2.fld5.2.0.0, (*_19).2, _21.fld0, _8, _11), bb9, UnwindUnreachable())
}
bb9 = {
_21.fld2 = _24.fld0.fld0;
(*_3) = _6 as i8;
_28 = core::ptr::addr_of!(_25);
_24.fld2.fld1 = _13;
_24.fld3 = !_14;
_27 = _19;
_21.fld3 = [_24.fld4,_10,_24.fld4,_10,_10];
_21.fld2 = [_6,_6,_6,_6];
_24.fld2.fld2.fld3 = [249716643_i32,1340523268_i32,(-1034649501_i32),36167996_i32,(-46761314_i32),1985543061_i32,1043779354_i32,(-770880246_i32)];
(*_19).5 = _15;
_24.fld2.fld5.2.2 = _24.fld4 as u128;
match _24.fld2.fld5.1.2 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
364026303 => bb17,
_ => bb16
}
}
bb10 = {
_21.fld0.fld2 = _24.fld2.fld5.2.1 as isize;
(*_19).3 = _5 | _21.fld0.fld1.3;
_24.fld0.fld0 = [_6,_6,_6,_6];
_24.fld1.fld1.4 = (*_19).4;
_24.fld1.fld1 = (*_19);
_24.fld1 = Adt58 { fld0: _21.fld0.fld0,fld1: _24.fld2.fld5.1,fld2: _23.0.0.0 };
_21.fld0.fld1.2 = !_24.fld2.fld5.1.2;
_24.fld2.fld2.fld2 = (_24.fld6.fld1,);
(*_19).2 = (*_19).1 as u32;
_24.fld0.fld0 = [_6,_6,_6,_6];
_20 = _24.fld2.fld3;
(*_19).2 = !_24.fld1.fld1.2;
_21.fld0.fld1.1 = _24.fld1.fld1.0;
_24.fld2.fld5.1.0 = _21.fld0.fld1.0;
(*_19).1 = _24.fld1.fld1.1;
_21.fld0.fld2 = _23.0.0.0;
_20 = _24.fld2.fld3 * _24.fld2.fld3;
(*_19) = (_24.fld1.fld1.1, _24.fld1.fld1.0, _24.fld1.fld1.2, _24.fld1.fld1.3, _24.fld1.fld1.4, _21.fld0.fld1.5);
_21.fld0 = Adt58 { fld0: _24.fld1.fld0,fld1: (*_19),fld2: _18 };
_24.fld2.fld2.fld1 = (_24.fld2.fld5.2.0.0,);
_21.fld0.fld1.2 = !(*_19).2;
_24.fld2.fld5.2.1 = _23.1 << _21.fld0.fld1.2;
_24.fld2.fld2.fld0 = core::ptr::addr_of!(_24.fld1.fld1);
_24.fld1.fld1.1 = _21.fld0.fld1.0;
Call(_30 = fn3(_24.fld2.fld2.fld0, (*_19), _23.0.0.0, _24.fld2.fld5.2.0.0.0, _24.fld2.fld5.1, _24.fld1.fld2, _24.fld1.fld1.3, _21.fld0.fld0, _21.fld0.fld1, _24.fld2.fld5.2.1, _24.fld2.fld5.2.0.0, (*_19).2, _21.fld0, _8, _11), bb9, UnwindUnreachable())
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_23.1 = _12;
_21.fld0.fld1.5 = (-18348_i16) as i8;
_23.0.0 = (_18,);
_21.fld0.fld1.0 = _21.fld0.fld1.1 / 41266774564625331564124214516800275913_u128;
_24.fld2.fld5.2.1 = !_23.1;
_24.fld2.fld5.1 = (_21.fld0.fld1.0, _21.fld0.fld1.1, 364026303_u32, _9, '\u{5d468}', _21.fld0.fld1.5);
_24.fld4 = _10;
_24.fld2.fld3 = _18 as f64;
_21.fld0.fld1.1 = !_24.fld2.fld5.1.0;
_24.fld6.fld1 = core::ptr::addr_of!(_21.fld0.fld1.5);
_24.fld2.fld5.2.0.0.0 = !_23.0.0.0;
_21.fld0.fld1.3 = _5 / 2_usize;
_19 = core::ptr::addr_of!(_21.fld0.fld1);
_23.0 = (_24.fld2.fld5.2.0.0,);
(*_19).2 = !_24.fld2.fld5.1.2;
_12 = _24.fld2.fld5.2.1 / 194_u8;
_23 = (_24.fld2.fld5.2.0, _24.fld2.fld5.2.1, _24.fld2.fld5.1.0);
RET.0 = core::ptr::addr_of!((*_3));
_23.1 = 6697062230470521965_i64 as u8;
_19 = core::ptr::addr_of!(_24.fld2.fld5.1);
match (*_19).2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
364026303 => bb8,
_ => bb7
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
(*_19).5 = _24.fld1.fld1.5;
(*_19).4 = _21.fld0.fld1.4;
RET = _24.fld2.fld2.fld2;
_24.fld2.fld5.1 = (_24.fld2.fld5.2.2, _24.fld1.fld1.1, _21.fld0.fld1.2, _24.fld1.fld1.3, _24.fld1.fld1.4, _24.fld1.fld1.5);
(*_27).2 = _21.fld0.fld1.2 / 3750703288_u32;
_32 = _14 as u8;
_23 = _24.fld2.fld5.2;
_12 = (-526138162_i32) as u8;
_24.fld2.fld0 = [_24.fld1.fld1.3,_24.fld2.fld5.1.3,(*_19).3];
(*_27).5 = _24.fld1.fld1.5;
_24.fld2.fld2.fld0 = core::ptr::addr_of!((*_19));
(*_19).2 = !_24.fld1.fld1.2;
_21.fld0.fld1.3 = (*_19).3;
_24.fld1.fld1.2 = !_24.fld2.fld5.1.2;
_23.0.0.0 = _24.fld2.fld2.fld1.0.0 & _18;
_24.fld2.fld4 = _24.fld2.fld5.2.2 as i128;
_1 = _24.fld2.fld0;
Goto(bb18)
}
bb18 = {
Call(_36 = dump_var(2_usize, 5_usize, Move(_5), 12_usize, Move(_12), 13_usize, Move(_13), 30_usize, Move(_30)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_36 = dump_var(2_usize, 10_usize, Move(_10), 11_usize, Move(_11), 7_usize, Move(_7), 15_usize, Move(_15)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_36 = dump_var(2_usize, 1_usize, Move(_1), 37_usize, _37, 37_usize, _37, 37_usize, _37), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: *const (u128, u128, u32, usize, char, i8),mut _2: (u128, u128, u32, usize, char, i8),mut _3: isize,mut _4: isize,mut _5: (u128, u128, u32, usize, char, i8),mut _6: isize,mut _7: usize,mut _8: [i32; 3],mut _9: (u128, u128, u32, usize, char, i8),mut _10: u8,mut _11: (isize,),mut _12: u32,mut _13: Adt58,mut _14: [usize; 3],mut _15: [u32; 7]) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _16: (((isize,),), u8, u128);
let _17: [u16; 5];
let _18: [u32; 7];
let _19: [u32; 7];
let _20: ();
let _21: ();
{
(*_1).3 = 13741500236815017126_u64 as usize;
_9.5 = !_2.5;
match (*_1).2 {
0 => bb1,
1 => bb2,
2 => bb3,
364026303 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5.2 = (*_1).2 | (*_1).2;
(*_1) = _5;
_16.2 = (*_1).1;
(*_1).4 = _2.4;
RET = [_12,_2.2,(*_1).2,(*_1).2,_2.2,(*_1).2,_9.2];
_9.3 = _13.fld1.3;
_5.3 = _9.3;
_9.2 = !_5.2;
_11 = (_3,);
_16.0 = (_11,);
_16.1 = _10 >> _7;
_9.4 = _13.fld1.4;
_2 = (*_1);
_9.3 = _2.3;
Goto(bb6)
}
bb6 = {
Call(_20 = dump_var(3_usize, 12_usize, Move(_12), 9_usize, Move(_9), 10_usize, Move(_10), 2_usize, Move(_2)), bb7, UnwindUnreachable())
}
bb7 = {
Call(_20 = dump_var(3_usize, 16_usize, Move(_16), 15_usize, Move(_15), 7_usize, Move(_7), 21_usize, _21), bb8, UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: usize,mut _2: *mut i8,mut _3: usize,mut _4: *const i8,mut _5: (isize,),mut _6: isize,mut _7: *const i8) -> i8 {
mir! {
type RET = i8;
let _8: [i16; 4];
let _9: (*const i8,);
let _10: isize;
let _11: Adt65;
let _12: [u32; 7];
let _13: Adt63;
let _14: Adt64;
let _15: *mut i8;
let _16: Adt51;
let _17: isize;
let _18: Adt65;
let _19: [u8; 6];
let _20: *mut i8;
let _21: usize;
let _22: (char, *mut i8);
let _23: bool;
let _24: Adt52;
let _25: Adt65;
let _26: [i32; 3];
let _27: u16;
let _28: i16;
let _29: f64;
let _30: (u32, [i16; 2], [u16; 5]);
let _31: i64;
let _32: u64;
let _33: ();
let _34: ();
{
_8 = [13668_i16,(-19947_i16),(-29720_i16),691_i16];
_7 = _4;
RET = (-114_i8) - 80_i8;
_5 = (_6,);
_5 = (_6,);
_9 = (_7,);
RET = 23_u8 as i8;
_3 = _1 >> _1;
_9.0 = _4;
RET = (-98_i8);
_3 = _1 ^ _1;
_6 = _5.0;
_11.fld2.2 = _5;
_11.fld0.0 = _5.0 * _5.0;
Goto(bb1)
}
bb1 = {
_13.fld2.fld1.0 = _11.fld0;
_7 = core::ptr::addr_of!(_13.fld5.1.5);
(*_7) = (-109_i8) * (-52_i8);
_13.fld5.1 = (148713610189292621606552699163999594950_u128, 10380328467274462528140416339225401600_u128, 2212263899_u32, _3, '\u{16b38}', (-71_i8));
_14.fld2.fld5.2.0.0.0 = _11.fld0.0 * _13.fld2.fld1.0.0;
_14.fld1.fld1.0 = !_13.fld5.1.1;
Goto(bb2)
}
bb2 = {
_14.fld1.fld0 = [(-1960593830_i32),(-1682150690_i32),(-1911994937_i32)];
_14.fld1.fld1.1 = _13.fld5.1.1 / 12977272342119060377313859470895115841_u128;
_11.fld2.2.0 = (-2671419502393250742_i64) as isize;
_13.fld5.1.0 = !_13.fld5.1.1;
_14.fld2.fld4 = (-1106471169_i32) as i128;
_4 = _7;
match (*_4) {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
340282366920938463463374607431768211385 => bb8,
_ => bb7
}
}
bb3 = {
_13.fld2.fld1.0 = _11.fld0;
_7 = core::ptr::addr_of!(_13.fld5.1.5);
(*_7) = (-109_i8) * (-52_i8);
_13.fld5.1 = (148713610189292621606552699163999594950_u128, 10380328467274462528140416339225401600_u128, 2212263899_u32, _3, '\u{16b38}', (-71_i8));
_14.fld2.fld5.2.0.0.0 = _11.fld0.0 * _13.fld2.fld1.0.0;
_14.fld1.fld1.0 = !_13.fld5.1.1;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = [_13.fld5.1.2,_13.fld5.1.2,_13.fld5.1.2,_13.fld5.1.2,_13.fld5.1.2,_13.fld5.1.2,_13.fld5.1.2];
_14.fld1.fld1.0 = _13.fld5.1.0;
_14.fld1.fld1.5 = 113_u8 as i8;
_14.fld2.fld5.1.5 = (*_4) << _13.fld2.fld1.0.0;
_14.fld2.fld2.fld1.0 = (_14.fld2.fld5.2.0.0.0,);
_13.fld2.fld2.0 = core::ptr::addr_of!(_14.fld2.fld5.1.5);
_13.fld5.2.1 = !233_u8;
_14.fld2.fld2.fld2 = _13.fld2.fld2;
_14.fld2.fld5.2 = (_14.fld2.fld2.fld1, _13.fld5.2.1, _13.fld5.1.1);
_4 = _7;
_15 = core::ptr::addr_of_mut!(_14.fld1.fld1.5);
_13.fld3 = _14.fld1.fld1.1 as f64;
_4 = core::ptr::addr_of!(_14.fld2.fld5.1.5);
_11.fld2.1 = !_14.fld2.fld2.fld1.0.0;
_13.fld2.fld1.0.0 = (-10840_i16) as isize;
(*_4) = _14.fld2.fld4 as i8;
_14.fld6.fld0 = _1 - _3;
_13.fld5.2.1 = !_14.fld2.fld5.2.1;
_14.fld6 = Adt53 { fld0: _3,fld1: _7 };
Call(_13.fld5.2.0 = fn5((*_7), _14.fld2.fld2.fld1.0, _13.fld5.1.1, _5.0, _13.fld2.fld1.0, _15, _13.fld5.1.4, _13.fld2.fld2, _11.fld2.2, _4, _11.fld2.2.0, _14.fld2.fld2.fld1, _13.fld5.1.5, _14.fld1.fld1.0, _14.fld2.fld2.fld1.0), bb9, UnwindUnreachable())
}
bb9 = {
_14.fld2.fld5.0 = _14.fld2.fld2.fld1.0.0 as i16;
_14.fld2.fld5.1.4 = _13.fld5.1.4;
_22 = (_13.fld5.1.4, _2);
_13.fld0 = [_14.fld6.fld0,_3,_14.fld6.fld0];
_13.fld5.1.5 = (*_15);
_22.0 = _14.fld2.fld5.1.4;
_14.fld1.fld1 = (_14.fld2.fld5.2.2, _13.fld5.1.0, _13.fld5.1.2, _13.fld5.1.3, _13.fld5.1.4, (*_4));
_18.fld1 = _13.fld0;
(*_7) = (*_15) >> _14.fld1.fld1.1;
_25.fld2.2 = _11.fld0;
_18.fld2.0 = [_14.fld2.fld5.0,_14.fld2.fld5.0];
(*_4) = (*_7) & (*_7);
_14.fld2.fld2.fld0 = core::ptr::addr_of!(_14.fld1.fld1);
_26 = [477571056_i32,1216825490_i32,842573357_i32];
_11.fld1 = _13.fld0;
_18.fld0 = (_13.fld2.fld1.0.0,);
_13.fld5.2.2 = (-4922332075939040511_i64) as u128;
_12 = [_14.fld1.fld1.2,_14.fld1.fld1.2,_13.fld5.1.2,_14.fld1.fld1.2,_13.fld5.1.2,_13.fld5.1.2,_13.fld5.1.2];
Call(_10 = fn7(_5.0, _6, _9.0, _14.fld2.fld5.2.0, _13.fld5.2.0.0), bb10, UnwindUnreachable())
}
bb10 = {
_24.fld1.0.0 = -_10;
_13.fld1 = [_14.fld1.fld1.2];
_14.fld2.fld3 = -_13.fld3;
_14.fld1.fld2 = _14.fld2.fld2.fld1.0.0 - _13.fld5.2.0.0.0;
_20 = _2;
match _14.fld1.fld1.0 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb8,
4 => bb11,
10380328467274462528140416339225401600 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
_14.fld1.fld0 = [(-1960593830_i32),(-1682150690_i32),(-1911994937_i32)];
_14.fld1.fld1.1 = _13.fld5.1.1 / 12977272342119060377313859470895115841_u128;
_11.fld2.2.0 = (-2671419502393250742_i64) as isize;
_13.fld5.1.0 = !_13.fld5.1.1;
_14.fld2.fld4 = (-1106471169_i32) as i128;
_4 = _7;
match (*_4) {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
340282366920938463463374607431768211385 => bb8,
_ => bb7
}
}
bb13 = {
_13.fld2.fld0 = core::ptr::addr_of!(_14.fld2.fld5.1);
_22 = (_14.fld1.fld1.4, _2);
match _14.fld1.fld1.0 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
10380328467274462528140416339225401600 => bb21,
_ => bb20
}
}
bb14 = {
_14.fld1.fld0 = [(-1960593830_i32),(-1682150690_i32),(-1911994937_i32)];
_14.fld1.fld1.1 = _13.fld5.1.1 / 12977272342119060377313859470895115841_u128;
_11.fld2.2.0 = (-2671419502393250742_i64) as isize;
_13.fld5.1.0 = !_13.fld5.1.1;
_14.fld2.fld4 = (-1106471169_i32) as i128;
_4 = _7;
match (*_4) {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
340282366920938463463374607431768211385 => bb8,
_ => bb7
}
}
bb15 = {
Return()
}
bb16 = {
_24.fld1.0.0 = -_10;
_13.fld1 = [_14.fld1.fld1.2];
_14.fld2.fld3 = -_13.fld3;
_14.fld1.fld2 = _14.fld2.fld2.fld1.0.0 - _13.fld5.2.0.0.0;
_20 = _2;
match _14.fld1.fld1.0 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb8,
4 => bb11,
10380328467274462528140416339225401600 => bb13,
_ => bb12
}
}
bb17 = {
Return()
}
bb18 = {
_13.fld2.fld1.0 = _11.fld0;
_7 = core::ptr::addr_of!(_13.fld5.1.5);
(*_7) = (-109_i8) * (-52_i8);
_13.fld5.1 = (148713610189292621606552699163999594950_u128, 10380328467274462528140416339225401600_u128, 2212263899_u32, _3, '\u{16b38}', (-71_i8));
_14.fld2.fld5.2.0.0.0 = _11.fld0.0 * _13.fld2.fld1.0.0;
_14.fld1.fld1.0 = !_13.fld5.1.1;
Goto(bb2)
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
_30.1 = [_14.fld2.fld5.0,_14.fld2.fld5.0];
_30.2 = [9538_u16,18007_u16,1638_u16,37760_u16,37704_u16];
_11.fld2.1 = _14.fld1.fld2;
_25.fld2.1 = !_14.fld1.fld2;
_11.fld2.2.0 = _13.fld5.2.1 as isize;
_13.fld5.2.2 = !_13.fld5.1.0;
_11.fld2 = (_30.1, _14.fld2.fld5.2.0.0.0, _25.fld2.2);
_13.fld5.2.0.0.0 = _25.fld2.1;
_14.fld1.fld2 = (-1858753349_i32) as isize;
_14.fld2.fld5 = (31037_i16, _13.fld5.1, _13.fld5.2);
_13.fld4 = _14.fld2.fld4;
_27 = _14.fld2.fld5.0 as u16;
_14.fld2.fld2.fld3 = [(-574920210_i32),(-491988298_i32),(-434141919_i32),(-2068634594_i32),(-1610215709_i32),(-1433250943_i32),1767361351_i32,2095213198_i32];
Goto(bb22)
}
bb22 = {
Call(_33 = dump_var(4_usize, 6_usize, Move(_6), 10_usize, Move(_10), 3_usize, Move(_3), 12_usize, Move(_12)), bb23, UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: i8,mut _2: (isize,),mut _3: u128,mut _4: isize,mut _5: (isize,),mut _6: *mut i8,mut _7: char,mut _8: (*const i8,),mut _9: (isize,),mut _10: *const i8,mut _11: isize,mut _12: ((isize,),),mut _13: i8,mut _14: u128,mut _15: (isize,)) -> ((isize,),) {
mir! {
type RET = ((isize,),);
let _16: Adt62;
let _17: [u32; 7];
let _18: [i16; 2];
let _19: char;
let _20: f64;
let _21: i16;
let _22: (u32, [i16; 2], [u16; 5]);
let _23: (isize,);
let _24: [i32; 8];
let _25: Adt54;
let _26: [i32; 8];
let _27: [i32; 3];
let _28: bool;
let _29: [i128; 4];
let _30: *mut (u128, u128, u32, usize, char, i8);
let _31: isize;
let _32: ();
let _33: ();
{
_12.0.0 = !_15.0;
RET.0.0 = (-1630932437_i32) as isize;
_2 = _9;
_12.0.0 = _15.0 - _15.0;
_12 = (_15,);
_11 = -_15.0;
_13 = _7 as i8;
_9 = _12.0;
_4 = !_9.0;
_7 = '\u{cadd2}';
RET.0 = (_12.0.0,);
RET.0.0 = _14 as isize;
_3 = _14;
_16.fld5.0 = 4_u8 as isize;
_16.fld4.0.0 = _12.0;
_16.fld3.fld5 = [17855643545061941460_usize,17920310963139815098_usize,7_usize];
_1 = -(*_10);
Goto(bb1)
}
bb1 = {
RET.0 = _12.0;
_16.fld0 = _6;
_16.fld3.fld6 = 15291093124042343160_u64 as f32;
_5 = (_11,);
_16.fld3.fld3 = (_7, _16.fld0);
_16.fld1.fld1 = [5297098131682084798_i64,(-3237527450948799258_i64),(-2007660412659456239_i64),1180939694643001578_i64,7224159419202737854_i64,(-2897999396541048561_i64),7492636525123525481_i64];
_13 = (*_10) & _1;
_9.0 = !_5.0;
_18 = [(-22605_i16),1298_i16];
_10 = core::ptr::addr_of!((*_6));
_16.fld6 = 26621_u16 as f64;
_16.fld1.fld0 = [3688132202_u32,3563631244_u32,170455654_u32,1270698676_u32,1121883591_u32,96224265_u32,4043441959_u32];
_16.fld5.0 = (-3331_i16) as isize;
_7 = _16.fld3.fld3.0;
_15 = _12.0;
_16.fld1.fld2 = [_1,(*_10),(*_6),(*_6)];
_16.fld3.fld0 = [(-12334_i16),(-31010_i16)];
_16.fld5.0 = !_16.fld4.0.0.0;
_16.fld3.fld6 = _5.0 as f32;
_16.fld1.fld3 = (_16.fld1.fld2, _8.0, _13);
_11 = 27_u8 as isize;
_16.fld4.2 = _3;
_16.fld1.fld1 = [5055418185874061208_i64,4724947982549719376_i64,5037962329112972251_i64,7570499314049437970_i64,(-2269622318828972079_i64),(-6172604491801510317_i64),(-2305585148275063080_i64)];
_7 = _16.fld3.fld3.0;
RET = (_12.0,);
_16.fld3.fld2 = [206_u8,84_u8,108_u8,91_u8,210_u8,54_u8];
Call(_7 = fn6(_16.fld1.fld0, _16.fld3.fld3.0, _16.fld4.0.0, _16.fld1.fld3.1, _15, _14, _9.0), bb2, UnwindUnreachable())
}
bb2 = {
_23.0 = _16.fld4.0.0.0 >> _14;
_17 = [4244440351_u32,1171032035_u32,1305502826_u32,2747229773_u32,3380982872_u32,2987716135_u32,2272470556_u32];
_16.fld2 = (-119771074071758831183612536268675527494_i128) >> _23.0;
_16.fld2 = !(-48971020563469327452331605133761153720_i128);
_8 = (_10,);
_9.0 = _5.0;
_19 = _16.fld3.fld3.0;
_16.fld3.fld6 = (-4457160482989150768_i64) as f32;
_16.fld4.1 = !123_u8;
_22.2 = [26540_u16,19035_u16,20315_u16,31102_u16,9432_u16];
(*_6) = _13 & _16.fld1.fld3.2;
_24 = [1167938430_i32,(-626297974_i32),(-2059560111_i32),(-492177686_i32),1366623169_i32,(-1746491286_i32),(-689334395_i32),(-625816457_i32)];
_16.fld4.0 = _12;
RET.0.0 = _5.0;
_16.fld3.fld3 = (_7, _16.fld0);
_16.fld3.fld1 = -_16.fld2;
_22.0 = 3130412900_u32;
_16.fld3.fld3.0 = _19;
_20 = -_16.fld6;
_16.fld3.fld3 = (_7, _6);
RET.0 = (_23.0,);
RET = _16.fld4.0;
_16.fld1.fld3.0 = [(*_10),(*_10),(*_10),(*_6)];
_16.fld3.fld3.0 = _19;
_11 = _16.fld6 as isize;
RET = (_12.0,);
_16.fld5 = _23;
Goto(bb3)
}
bb3 = {
_16.fld1.fld1 = [6813267803317870626_i64,6981622783758232697_i64,(-2372223908124598057_i64),(-4736491955395396389_i64),1453365448609490000_i64,6292639513073206871_i64,4238402948961524992_i64];
_16.fld3.fld3.0 = _19;
_16.fld3.fld3.1 = core::ptr::addr_of_mut!((*_10));
match _22.0 {
0 => bb1,
1 => bb2,
2 => bb4,
3130412900 => bb6,
_ => bb5
}
}
bb4 = {
_23.0 = _16.fld4.0.0.0 >> _14;
_17 = [4244440351_u32,1171032035_u32,1305502826_u32,2747229773_u32,3380982872_u32,2987716135_u32,2272470556_u32];
_16.fld2 = (-119771074071758831183612536268675527494_i128) >> _23.0;
_16.fld2 = !(-48971020563469327452331605133761153720_i128);
_8 = (_10,);
_9.0 = _5.0;
_19 = _16.fld3.fld3.0;
_16.fld3.fld6 = (-4457160482989150768_i64) as f32;
_16.fld4.1 = !123_u8;
_22.2 = [26540_u16,19035_u16,20315_u16,31102_u16,9432_u16];
(*_6) = _13 & _16.fld1.fld3.2;
_24 = [1167938430_i32,(-626297974_i32),(-2059560111_i32),(-492177686_i32),1366623169_i32,(-1746491286_i32),(-689334395_i32),(-625816457_i32)];
_16.fld4.0 = _12;
RET.0.0 = _5.0;
_16.fld3.fld3 = (_7, _16.fld0);
_16.fld3.fld1 = -_16.fld2;
_22.0 = 3130412900_u32;
_16.fld3.fld3.0 = _19;
_20 = -_16.fld6;
_16.fld3.fld3 = (_7, _6);
RET.0 = (_23.0,);
RET = _16.fld4.0;
_16.fld1.fld3.0 = [(*_10),(*_10),(*_10),(*_6)];
_16.fld3.fld3.0 = _19;
_11 = _16.fld6 as isize;
RET = (_12.0,);
_16.fld5 = _23;
Goto(bb3)
}
bb5 = {
RET.0 = _12.0;
_16.fld0 = _6;
_16.fld3.fld6 = 15291093124042343160_u64 as f32;
_5 = (_11,);
_16.fld3.fld3 = (_7, _16.fld0);
_16.fld1.fld1 = [5297098131682084798_i64,(-3237527450948799258_i64),(-2007660412659456239_i64),1180939694643001578_i64,7224159419202737854_i64,(-2897999396541048561_i64),7492636525123525481_i64];
_13 = (*_10) & _1;
_9.0 = !_5.0;
_18 = [(-22605_i16),1298_i16];
_10 = core::ptr::addr_of!((*_6));
_16.fld6 = 26621_u16 as f64;
_16.fld1.fld0 = [3688132202_u32,3563631244_u32,170455654_u32,1270698676_u32,1121883591_u32,96224265_u32,4043441959_u32];
_16.fld5.0 = (-3331_i16) as isize;
_7 = _16.fld3.fld3.0;
_15 = _12.0;
_16.fld1.fld2 = [_1,(*_10),(*_6),(*_6)];
_16.fld3.fld0 = [(-12334_i16),(-31010_i16)];
_16.fld5.0 = !_16.fld4.0.0.0;
_16.fld3.fld6 = _5.0 as f32;
_16.fld1.fld3 = (_16.fld1.fld2, _8.0, _13);
_11 = 27_u8 as isize;
_16.fld4.2 = _3;
_16.fld1.fld1 = [5055418185874061208_i64,4724947982549719376_i64,5037962329112972251_i64,7570499314049437970_i64,(-2269622318828972079_i64),(-6172604491801510317_i64),(-2305585148275063080_i64)];
_7 = _16.fld3.fld3.0;
RET = (_12.0,);
_16.fld3.fld2 = [206_u8,84_u8,108_u8,91_u8,210_u8,54_u8];
Call(_7 = fn6(_16.fld1.fld0, _16.fld3.fld3.0, _16.fld4.0.0, _16.fld1.fld3.1, _15, _14, _9.0), bb2, UnwindUnreachable())
}
bb6 = {
_25 = _16.fld1;
(*_10) = _13;
_21 = 25140_i16 + (-31790_i16);
_26 = [(-95785477_i32),(-2069016400_i32),(-671979340_i32),(-1556110301_i32),52224975_i32,(-1404248198_i32),1023557640_i32,(-1011602799_i32)];
RET.0.0 = _9.0 << _12.0.0;
_16.fld3.fld3.0 = _7;
RET = (_9,);
_4 = _16.fld5.0;
_16.fld6 = -_20;
_16.fld1.fld1 = [3347200163688480471_i64,(-1168165026735486398_i64),(-2695716912032458141_i64),(-3530779052683772036_i64),7974982621789385551_i64,(-7319436203900263803_i64),(-6470100068859002838_i64)];
_16.fld1 = Adt54 { fld0: _25.fld0,fld1: _25.fld1,fld2: _25.fld3.0,fld3: _25.fld3 };
_29 = [_16.fld2,_16.fld3.fld1,_16.fld3.fld1,_16.fld3.fld1];
_16.fld3.fld0 = _18;
_6 = core::ptr::addr_of_mut!(_16.fld1.fld3.2);
_16.fld3.fld4 = [48812_u16,41652_u16,40518_u16,17295_u16,36445_u16];
_16.fld1.fld3.2 = (*_10);
RET.0 = (_23.0,);
_16.fld1.fld1 = [905953001030855487_i64,1144083689081285581_i64,5897504939609263851_i64,1761280884885983334_i64,(-1016051889053714216_i64),8662280910775112719_i64,(-7664099111538274782_i64)];
Goto(bb7)
}
bb7 = {
Call(_32 = dump_var(5_usize, 9_usize, Move(_9), 13_usize, Move(_13), 7_usize, Move(_7), 4_usize, Move(_4)), bb8, UnwindUnreachable())
}
bb8 = {
Call(_32 = dump_var(5_usize, 1_usize, Move(_1), 18_usize, Move(_18), 26_usize, Move(_26), 17_usize, Move(_17)), bb9, UnwindUnreachable())
}
bb9 = {
Call(_32 = dump_var(5_usize, 24_usize, Move(_24), 19_usize, Move(_19), 33_usize, _33, 33_usize, _33), bb10, UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [u32; 7],mut _2: char,mut _3: (isize,),mut _4: *const i8,mut _5: (isize,),mut _6: u128,mut _7: isize) -> char {
mir! {
type RET = char;
let _8: [i32; 3];
let _9: isize;
let _10: Adt55;
let _11: u64;
let _12: Adt55;
let _13: i128;
let _14: isize;
let _15: isize;
let _16: f32;
let _17: char;
let _18: Adt57;
let _19: f32;
let _20: *mut [u16; 5];
let _21: [i32; 3];
let _22: (u128, u128, u32, usize, char, i8);
let _23: *mut (u128, u128, u32, usize, char, i8);
let _24: ();
let _25: ();
{
_5 = (_7,);
_5.0 = _6 as isize;
_3 = (_7,);
(*_4) = 11210302510332302563_u64 as i8;
Goto(bb1)
}
bb1 = {
_5.0 = -_7;
_6 = !65673507007825422529069392943817156314_u128;
_2 = '\u{618a1}';
_6 = 113186864100230912792624753989299859051_u128;
_5 = _3;
RET = _2;
_2 = '\u{638e4}';
_2 = '\u{fc69b}';
RET = _2;
_8 = [(-684243777_i32),911343845_i32,(-664479404_i32)];
_8 = [(-1573333356_i32),1348283717_i32,(-870133798_i32)];
_8 = [(-2033046353_i32),(-695408283_i32),(-508044668_i32)];
_5 = (_7,);
(*_4) = 82_i8;
(*_4) = (-19_i8) >> _5.0;
_4 = core::ptr::addr_of!((*_4));
_5.0 = _7 << _3.0;
_7 = !_5.0;
_3.0 = 3036954480_u32 as isize;
RET = _2;
RET = _2;
(*_4) = 92381282499113973847685764879436598568_i128 as i8;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
113186864100230912792624753989299859051 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_3 = (_7,);
(*_4) = (-94_i8);
_10.fld0 = [4012987693_u32,2109226486_u32,2664449261_u32,2350315726_u32,4133388806_u32,1580566924_u32,1497422242_u32];
_7 = _5.0;
(*_4) = (-42_i8) & 44_i8;
_2 = '\u{8761d}';
_3.0 = _5.0;
_10.fld2 = _5.0 as f64;
Goto(bb11)
}
bb11 = {
_7 = !_3.0;
_9 = -_5.0;
RET = _2;
_3.0 = !_5.0;
_11 = 2432576506_u32 as u64;
(*_4) = !(-39_i8);
RET = _2;
_1 = [288686531_u32,571683343_u32,899583623_u32,1957100497_u32,3619892154_u32,2958303205_u32,1729184078_u32];
_5.0 = _3.0 ^ _9;
(*_4) = !(-96_i8);
_10.fld1 = [2040215193_u32];
(*_4) = !80_i8;
_3.0 = _5.0 >> _5.0;
_12.fld0 = _1;
_10.fld0 = _1;
_5.0 = _7 ^ _3.0;
_12.fld1 = [1249000787_u32];
_1 = _10.fld0;
Goto(bb12)
}
bb12 = {
_2 = '\u{8bb55}';
_9 = 4283835576202689151_usize as isize;
_13 = 16779253363181032854849131775138766347_i128;
_12.fld0 = [1227899975_u32,928957495_u32,3852968682_u32,925465835_u32,2820622917_u32,3084753288_u32,1150652411_u32];
_10.fld0 = [4205799355_u32,4036517482_u32,4255426790_u32,3226819228_u32,312548533_u32,4059346368_u32,2822766964_u32];
_3.0 = 2603707200_u32 as isize;
match _13 {
0 => bb5,
1 => bb13,
16779253363181032854849131775138766347 => bb15,
_ => bb14
}
}
bb13 = {
_5.0 = -_7;
_6 = !65673507007825422529069392943817156314_u128;
_2 = '\u{618a1}';
_6 = 113186864100230912792624753989299859051_u128;
_5 = _3;
RET = _2;
_2 = '\u{638e4}';
_2 = '\u{fc69b}';
RET = _2;
_8 = [(-684243777_i32),911343845_i32,(-664479404_i32)];
_8 = [(-1573333356_i32),1348283717_i32,(-870133798_i32)];
_8 = [(-2033046353_i32),(-695408283_i32),(-508044668_i32)];
_5 = (_7,);
(*_4) = 82_i8;
(*_4) = (-19_i8) >> _5.0;
_4 = core::ptr::addr_of!((*_4));
_5.0 = _7 << _3.0;
_7 = !_5.0;
_3.0 = 3036954480_u32 as isize;
RET = _2;
RET = _2;
(*_4) = 92381282499113973847685764879436598568_i128 as i8;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
113186864100230912792624753989299859051 => bb10,
_ => bb9
}
}
bb14 = {
Return()
}
bb15 = {
_10.fld3 = 44462_u16;
_7 = true as isize;
_12.fld0 = [895553343_u32,2664092349_u32,4126186073_u32,1344198628_u32,958113335_u32,2605454138_u32,1523301109_u32];
_18.fld4.0 = _2;
_17 = _2;
_18.fld4.0 = _17;
_12.fld2 = _10.fld2 - _10.fld2;
_14 = _5.0 - _5.0;
_10.fld0 = [925079571_u32,3949665607_u32,3222875910_u32,4107196851_u32,2266326436_u32,455003130_u32,1364908089_u32];
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(6_usize, 1_usize, Move(_1), 2_usize, Move(_2), 17_usize, Move(_17), 7_usize, Move(_7)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(6_usize, 5_usize, Move(_5), 13_usize, Move(_13), 25_usize, _25, 25_usize, _25), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: isize,mut _2: isize,mut _3: *const i8,mut _4: ((isize,),),mut _5: (isize,)) -> isize {
mir! {
type RET = isize;
let _6: *const bool;
let _7: f64;
let _8: u32;
let _9: ();
let _10: ();
{
RET = _5.0;
_2 = _5.0 << _5.0;
_4 = (_5,);
_2 = _4.0.0;
_4.0 = (_5.0,);
_5.0 = _2;
_1 = -_5.0;
RET = _4.0.0;
_4.0 = (_5.0,);
_4.0 = (_5.0,);
_7 = 1154197598_u32 as f64;
_5.0 = _1;
_5.0 = _4.0.0;
_1 = _2;
_8 = 2818868582_u32 & 4137837424_u32;
_4.0.0 = _2;
_7 = _8 as f64;
_5.0 = 24_i8 as isize;
_4 = (_5,);
_4 = (_5,);
_4.0 = (_2,);
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(7_usize, 4_usize, Move(_4), 2_usize, Move(_2), 10_usize, _10, 10_usize, _10), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: u8,mut _2: *const i8,mut _3: bool,mut _4: f64,mut _5: *const i8,mut _6: [u32; 7],mut _7: isize) -> u128 {
mir! {
type RET = u128;
let _8: (char, *mut i8);
let _9: (isize,);
let _10: [u16; 5];
let _11: isize;
let _12: Adt49;
let _13: f64;
let _14: Adt50;
let _15: *mut (u128, u128, u32, usize, char, i8);
let _16: *mut [u16; 5];
let _17: (u128, u128, u32, usize, char, i8);
let _18: (u32, [i16; 2], [u16; 5]);
let _19: (char, *mut i8);
let _20: Adt57;
let _21: ([i16; 2], isize, (isize,));
let _22: Adt49;
let _23: (u128, u128, u32, usize, char, i8);
let _24: [i128; 4];
let _25: f64;
let _26: char;
let _27: Adt50;
let _28: (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128));
let _29: f32;
let _30: Adt59;
let _31: Adt56;
let _32: isize;
let _33: isize;
let _34: bool;
let _35: f64;
let _36: char;
let _37: bool;
let _38: [i32; 8];
let _39: Adt50;
let _40: i16;
let _41: Adt65;
let _42: isize;
let _43: i8;
let _44: isize;
let _45: i128;
let _46: ([i8; 4], *const i8, i8);
let _47: isize;
let _48: (((isize,),), u8, u128);
let _49: u8;
let _50: isize;
let _51: u64;
let _52: [i64; 7];
let _53: ();
let _54: ();
{
RET = 301142562082926626475410549462272501913_u128;
_8.1 = core::ptr::addr_of_mut!((*_5));
_2 = _5;
_4 = _7 as f64;
(*_2) = (-109_i8);
(*_2) = (-2439412911895815843_i64) as i8;
_4 = _1 as f64;
_3 = !false;
Goto(bb1)
}
bb1 = {
_9.0 = _7;
_9 = (_7,);
RET = 171205486797588595087568705166460246797_u128;
_4 = 814505741_u32 as f64;
RET = 155960758145540574596387153001841097315_u128;
_8.0 = '\u{85897}';
_7 = _9.0;
_6 = [1831307296_u32,990086992_u32,3717849179_u32,346678570_u32,2802490265_u32,828203916_u32,4090966684_u32];
_6 = [1913367638_u32,3207830770_u32,292293483_u32,3476040200_u32,2005336767_u32,2191998330_u32,675633764_u32];
_6 = [82473929_u32,1820982120_u32,2816250629_u32,3492157913_u32,1246251629_u32,2833982743_u32,2271132170_u32];
RET = 10697129742657365897_usize as u128;
(*_5) = (-2874844659136503508_i64) as i8;
_4 = _1 as f64;
RET = 280807553918663769963357550156600472938_u128 >> _9.0;
_7 = !_9.0;
_12.fld3.0 = _8.0;
_12.fld3.1 = core::ptr::addr_of_mut!((*_2));
_12.fld0 = [(-1448_i16),(-16039_i16)];
_10 = [54022_u16,30589_u16,35544_u16,17405_u16,42092_u16];
_12.fld2 = [_1,_1,_1,_1,_1,_1];
_10 = [37194_u16,27504_u16,47251_u16,29481_u16,934_u16];
Goto(bb2)
}
bb2 = {
_14.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_12.fld6 = _1 as f32;
_12.fld3.0 = _8.0;
_3 = true;
_12.fld4 = [19233_u16,41478_u16,36662_u16,17308_u16,47051_u16];
_14.fld0 = _6;
(*_2) = !(-59_i8);
_13 = _4;
Call((*_5) = fn9(_5, _7, _12.fld3.1, _12.fld3.1), bb3, UnwindUnreachable())
}
bb3 = {
_12.fld3 = _8;
_8.0 = _12.fld3.0;
(*_2) = (-1_i8) >> _9.0;
_11 = _7;
_12.fld3.1 = core::ptr::addr_of_mut!((*_2));
_12.fld5 = [3_usize,0_usize,7_usize];
_5 = _2;
_17.4 = _12.fld3.0;
Call(_12 = fn12(_5, _2, _3, (*_2), (*_2), _11, _11, _14, _3, _2, _3, _2, _14.fld1, _9.0, _14.fld1, _6), bb4, UnwindUnreachable())
}
bb4 = {
_9 = (_7,);
_15 = core::ptr::addr_of_mut!(_17);
_17.3 = !0_usize;
(*_15).1 = !223682022366581484435130283863201273515_u128;
_17.2 = 3258686213_u32;
(*_2) = !(-106_i8);
(*_15).4 = _8.0;
_6 = [_17.2,(*_15).2,(*_15).2,_17.2,_17.2,_17.2,_17.2];
(*_15).4 = _8.0;
_18.0 = !(*_15).2;
_5 = core::ptr::addr_of!((*_15).5);
(*_5) = -(*_2);
(*_2) = (*_15).2 as i8;
_4 = (*_15).2 as f64;
_6 = [_18.0,(*_15).2,(*_15).2,_17.2,_18.0,_18.0,(*_15).2];
(*_15) = (187709570819965190103396323970163691730_u128, 74985777573041756342703917115133884570_u128, _18.0, 2_usize, _8.0, (*_2));
(*_15).1 = (*_15).0 / 254660920422630203538306549296796547635_u128;
_17 = (192616992662574278890522962485595418327_u128, 103782262172078595878486841050680349006_u128, _18.0, 15749271475959460710_usize, _12.fld3.0, (*_2));
_19 = (_12.fld3.0, _8.1);
_18.1 = [29119_i16,24984_i16];
_9 = (_11,);
_18 = (_17.2, _12.fld0, _12.fld4);
(*_15) = (254177036653727430780466652181840226314_u128, 32868101149500804509899042727319887096_u128, _18.0, 10541134097316455330_usize, _19.0, (*_2));
_4 = 910848422062810057_u64 as f64;
_20.fld3 = [(*_2),(*_2),_17.5,(*_2)];
_14.fld1 = core::ptr::addr_of_mut!(_12.fld4);
Goto(bb5)
}
bb5 = {
(*_15).5 = (*_2);
RET = (-6466_i16) as u128;
_12.fld4 = [17274_u16,54074_u16,29841_u16,42264_u16,10028_u16];
RET = (-2085655821_i32) as u128;
_17.5 = !(*_2);
_20.fld1 = [(*_15).2];
(*_15) = (300935221160884798495483238237071948347_u128, 119299067260551537626919599014352692354_u128, _18.0, 0_usize, _12.fld3.0, (*_2));
(*_2) = (*_15).5 & (*_15).5;
_20.fld0.fld1 = core::ptr::addr_of!((*_5));
RET = _17.1;
(*_15).2 = _18.0;
_20.fld4.0 = _17.4;
_20.fld0 = Adt53 { fld0: (*_15).3,fld1: _2 };
_21.0 = [21576_i16,11477_i16];
_20.fld4 = (_8.0, _19.1);
_24 = [_12.fld1,_12.fld1,_12.fld1,_12.fld1];
Goto(bb6)
}
bb6 = {
_3 = !true;
_22.fld3 = _12.fld3;
_20.fld4.1 = core::ptr::addr_of_mut!((*_2));
_16 = core::ptr::addr_of_mut!(_12.fld4);
_23.3 = 9012034561833924096_u64 as usize;
_24 = [_12.fld1,_12.fld1,_12.fld1,_12.fld1];
(*_15).1 = _17.0 % 125212230585819973828371591338223934267_u128;
_22.fld3.1 = core::ptr::addr_of_mut!(_23.5);
_18.1 = [(-11880_i16),22852_i16];
_22.fld5 = _12.fld5;
_20.fld0.fld1 = _2;
(*_15).4 = _22.fld3.0;
_20.fld4 = ((*_15).4, _8.1);
_19.0 = _22.fld3.0;
_23.2 = _18.0 % 1863008721_u32;
_25 = _13 / 1_f64;
_25 = _4 - _4;
_12.fld5 = [(*_15).3,_17.3,_17.3];
_25 = -_4;
_23.5 = _23.3 as i8;
match (*_15).0 {
0 => bb1,
1 => bb4,
2 => bb3,
300935221160884798495483238237071948347 => bb8,
_ => bb7
}
}
bb7 = {
_12.fld3 = _8;
_8.0 = _12.fld3.0;
(*_2) = (-1_i8) >> _9.0;
_11 = _7;
_12.fld3.1 = core::ptr::addr_of_mut!((*_2));
_12.fld5 = [3_usize,0_usize,7_usize];
_5 = _2;
_17.4 = _12.fld3.0;
Call(_12 = fn12(_5, _2, _3, (*_2), (*_2), _11, _11, _14, _3, _2, _3, _2, _14.fld1, _9.0, _14.fld1, _6), bb4, UnwindUnreachable())
}
bb8 = {
_18.2 = (*_16);
_28.1.0 = (-531199011_i32) as u128;
_12.fld5 = _22.fld5;
_19.0 = _22.fld3.0;
_17.1 = _22.fld3.0 as u128;
_20.fld1 = [_18.0];
_22.fld2 = _12.fld2;
_30.fld5.fld4 = [53705_u16,16166_u16,17977_u16,60293_u16,1283_u16];
Goto(bb9)
}
bb9 = {
_2 = core::ptr::addr_of!((*_5));
_30.fld0.fld0.fld1 = core::ptr::addr_of!((*_5));
_29 = _12.fld6;
_5 = _20.fld0.fld1;
_23.2 = _12.fld1 as u32;
(*_5) = (*_2) ^ (*_2);
_23.4 = _12.fld3.0;
(*_15).2 = _1 as u32;
_31 = Adt56 { fld0: _24,fld1: (*_15).2 };
_13 = _25 - _4;
_18.2 = [44323_u16,64147_u16,35424_u16,39926_u16,16128_u16];
_30.fld5.fld1 = !_12.fld1;
_28.1.0 = _17.0;
_30.fld0.fld0.fld0 = (*_15).3 & (*_15).3;
(*_15).5 = (*_5) >> _30.fld0.fld0.fld0;
_22.fld6 = -_12.fld6;
_2 = core::ptr::addr_of!((*_15).5);
Call(_20.fld2 = core::intrinsics::transmute(_28.1.0), bb10, UnwindUnreachable())
}
bb10 = {
_23.1 = _4 as u128;
_30.fld0.fld0 = Adt53 { fld0: _20.fld0.fld0,fld1: _2 };
_20.fld4.0 = _17.4;
_12.fld1 = _30.fld5.fld1;
_23.5 = _1 as i8;
_35 = _25 + _25;
_28.2.0.0 = _9;
_30.fld5.fld6 = _29 / 0.000000000000000000000000000000000000007202086962573008_f32;
(*_5) = (*_15).5 ^ (*_2);
_22.fld2 = _12.fld2;
RET = !(*_15).0;
_25 = 1281660446408979181_u64 as f64;
_19 = _12.fld3;
(*_5) = _12.fld3.0 as i8;
(*_15).2 = !_23.2;
_27 = Adt50 { fld0: _14.fld0,fld1: _14.fld1 };
_30.fld5.fld3.1 = _22.fld3.1;
_36 = (*_15).4;
_23.4 = _20.fld4.0;
_30.fld5.fld3.1 = core::ptr::addr_of_mut!((*_15).5);
_31.fld0 = _24;
_22 = Move(_12);
_28.2.1 = _1 - _1;
Goto(bb11)
}
bb11 = {
_28.1.3 = 2143602892103275145_u64 as usize;
_28.2.2 = 2884306258274701139_u64 as u128;
_31 = Adt56 { fld0: _24,fld1: _18.0 };
_30.fld1 = [153865411_i32,(-1318625586_i32),(-899216576_i32),(-299814175_i32),1431636875_i32,1095417833_i32,(-1760520031_i32),(-746490795_i32)];
_20.fld0.fld0 = (*_15).3;
_26 = _22.fld3.0;
_23.3 = (*_15).2 as usize;
_22.fld0 = [4116_i16,30286_i16];
_30.fld5.fld3.1 = core::ptr::addr_of_mut!(_23.5);
_30.fld5.fld5 = _22.fld5;
_30.fld4 = core::ptr::addr_of_mut!(_28.1.5);
_28.2.1 = _1;
_27.fld1 = core::ptr::addr_of_mut!(_22.fld4);
_28.2.0.0 = (_7,);
match (*_15).0 {
0 => bb10,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb12,
300935221160884798495483238237071948347 => bb14,
_ => bb13
}
}
bb12 = {
(*_15).5 = (*_2);
RET = (-6466_i16) as u128;
_12.fld4 = [17274_u16,54074_u16,29841_u16,42264_u16,10028_u16];
RET = (-2085655821_i32) as u128;
_17.5 = !(*_2);
_20.fld1 = [(*_15).2];
(*_15) = (300935221160884798495483238237071948347_u128, 119299067260551537626919599014352692354_u128, _18.0, 0_usize, _12.fld3.0, (*_2));
(*_2) = (*_15).5 & (*_15).5;
_20.fld0.fld1 = core::ptr::addr_of!((*_5));
RET = _17.1;
(*_15).2 = _18.0;
_20.fld4.0 = _17.4;
_20.fld0 = Adt53 { fld0: (*_15).3,fld1: _2 };
_21.0 = [21576_i16,11477_i16];
_20.fld4 = (_8.0, _19.1);
_24 = [_12.fld1,_12.fld1,_12.fld1,_12.fld1];
Goto(bb6)
}
bb13 = {
_2 = core::ptr::addr_of!((*_5));
_30.fld0.fld0.fld1 = core::ptr::addr_of!((*_5));
_29 = _12.fld6;
_5 = _20.fld0.fld1;
_23.2 = _12.fld1 as u32;
(*_5) = (*_2) ^ (*_2);
_23.4 = _12.fld3.0;
(*_15).2 = _1 as u32;
_31 = Adt56 { fld0: _24,fld1: (*_15).2 };
_13 = _25 - _4;
_18.2 = [44323_u16,64147_u16,35424_u16,39926_u16,16128_u16];
_30.fld5.fld1 = !_12.fld1;
_28.1.0 = _17.0;
_30.fld0.fld0.fld0 = (*_15).3 & (*_15).3;
(*_15).5 = (*_5) >> _30.fld0.fld0.fld0;
_22.fld6 = -_12.fld6;
_2 = core::ptr::addr_of!((*_15).5);
Call(_20.fld2 = core::intrinsics::transmute(_28.1.0), bb10, UnwindUnreachable())
}
bb14 = {
_48.0.0.0 = _7;
_41.fld1 = [(*_15).3,(*_15).3,(*_15).3];
_45 = -_30.fld5.fld1;
_41.fld0 = (_7,);
_17.5 = (*_5) - (*_5);
_30.fld0.fld1 = [_23.2];
_39.fld0 = _27.fld0;
_15 = core::ptr::addr_of_mut!((*_15));
(*_15).3 = _20.fld0.fld0 + _23.3;
_30.fld5.fld0 = _22.fld0;
Goto(bb15)
}
bb15 = {
Call(_53 = dump_var(8_usize, 7_usize, Move(_7), 9_usize, Move(_9), 24_usize, Move(_24), 6_usize, Move(_6)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_53 = dump_var(8_usize, 11_usize, Move(_11), 3_usize, Move(_3), 54_usize, _54, 54_usize, _54), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *const i8,mut _2: isize,mut _3: *mut i8,mut _4: *mut i8) -> i8 {
mir! {
type RET = i8;
let _5: i64;
let _6: Adt50;
let _7: i64;
let _8: Adt56;
let _9: Adt62;
let _10: (*const i8,);
let _11: [u8; 6];
let _12: isize;
let _13: usize;
let _14: isize;
let _15: i128;
let _16: i128;
let _17: u128;
let _18: i64;
let _19: (char, *mut i8);
let _20: Adt63;
let _21: Adt63;
let _22: Adt60;
let _23: [i16; 4];
let _24: Adt54;
let _25: [i32; 3];
let _26: char;
let _27: u128;
let _28: bool;
let _29: ();
let _30: ();
{
RET = 98_i8;
RET = !(-53_i8);
_2 = !(-9223372036854775808_isize);
_3 = _4;
_5 = 1216452947598150945_i64;
RET = _5 as i8;
RET = 4837563563811950612_usize as i8;
_4 = _3;
_2 = '\u{3d384}' as isize;
RET = (-60_i8) << _5;
_4 = _3;
Goto(bb1)
}
bb1 = {
_4 = _3;
RET = !(-6_i8);
RET = 34_i8 ^ (-25_i8);
_4 = _3;
_2 = 108_i8 as isize;
RET = 55909_u16 as i8;
RET = !(-52_i8);
_4 = _3;
_6.fld0 = [3026954059_u32,2360064348_u32,2672796265_u32,332960472_u32,1981352835_u32,1991233845_u32,2543656765_u32];
_4 = _3;
RET = 11395_u16 as i8;
Goto(bb2)
}
bb2 = {
_4 = _3;
_4 = _3;
RET = 64439_u16 as i8;
match _5 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
1216452947598150945 => bb10,
_ => bb9
}
}
bb3 = {
_4 = _3;
RET = !(-6_i8);
RET = 34_i8 ^ (-25_i8);
_4 = _3;
_2 = 108_i8 as isize;
RET = 55909_u16 as i8;
RET = !(-52_i8);
_4 = _3;
_6.fld0 = [3026954059_u32,2360064348_u32,2672796265_u32,332960472_u32,1981352835_u32,1991233845_u32,2543656765_u32];
_4 = _3;
RET = 11395_u16 as i8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = _3;
_5 = (-3216185525514574432_i64) - (-3752998687365358543_i64);
_8.fld1 = 1232088051_u32;
_4 = _3;
_5 = -(-1686168184666216178_i64);
_4 = _3;
_8.fld1 = 639467126_u32 << _5;
RET = (-110_i8) * 82_i8;
_7 = 139_u8 as i64;
_8.fld0 = [28940894000942049969620400821587102363_i128,(-140495568751186867349268432566953611793_i128),51836793218269706606015041122623839817_i128,(-96912613755197585155499275875083081071_i128)];
_4 = _3;
_6.fld0 = [_8.fld1,_8.fld1,_8.fld1,_8.fld1,_8.fld1,_8.fld1,_8.fld1];
RET = 188_u8 as i8;
_8.fld1 = !2311360341_u32;
_6.fld0 = [_8.fld1,_8.fld1,_8.fld1,_8.fld1,_8.fld1,_8.fld1,_8.fld1];
_7 = _5 >> _2;
RET = 22882_u16 as i8;
RET = 25_i8;
_4 = _3;
_9.fld3.fld2 = [193_u8,84_u8,61_u8,171_u8,22_u8,21_u8];
_11 = [190_u8,155_u8,203_u8,150_u8,144_u8,33_u8];
_9.fld1.fld2 = [39_i8,(-108_i8),28_i8,(-113_i8)];
Goto(bb11)
}
bb11 = {
_12 = _2;
_9.fld3.fld3 = ('\u{1009e7}', _3);
_9.fld1.fld2 = [7_i8,99_i8,(-40_i8),35_i8];
_9.fld3.fld6 = 8137551329461237990_usize as f32;
RET = 86_i8;
_9.fld1.fld3 = (_9.fld1.fld2, _1, 96_i8);
_9.fld3.fld5 = [0_usize,5_usize,5_usize];
_9.fld3.fld0 = [(-32752_i16),6110_i16];
_9.fld1.fld3.1 = core::ptr::addr_of!(_9.fld1.fld3.2);
match _9.fld1.fld3.2 {
0 => bb1,
1 => bb7,
2 => bb9,
96 => bb12,
_ => bb4
}
}
bb12 = {
_9.fld5 = (_2,);
_9.fld1.fld3.2 = 66_i8 >> _9.fld5.0;
_9.fld0 = core::ptr::addr_of_mut!(_9.fld1.fld3.2);
_9.fld3.fld1 = 157552346643922269635309507127365384394_i128;
RET = _9.fld1.fld3.2 * _9.fld1.fld3.2;
_9.fld1.fld1 = [_7,_7,_7,_7,_5,_5,_5];
_9.fld1.fld3.1 = core::ptr::addr_of!(_9.fld1.fld3.2);
_12 = !_2;
_9.fld3.fld4 = [7703_u16,15149_u16,23259_u16,45349_u16,61911_u16];
_9.fld1.fld0 = _6.fld0;
_17 = 12907559204368795872275358804655719259_u128 & 54804313478547690662193901201298006788_u128;
_1 = core::ptr::addr_of!(_9.fld1.fld3.2);
_13 = _9.fld3.fld6 as usize;
_14 = (-1629440724_i32) as isize;
_9.fld2 = _8.fld1 as i128;
_13 = _7 as usize;
_9.fld4.2 = _17 ^ _17;
_9.fld6 = 4828_u16 as f64;
_9.fld3.fld0 = [(-32117_i16),(-2082_i16)];
_9.fld0 = _4;
_9.fld0 = core::ptr::addr_of_mut!(_9.fld1.fld3.2);
_9.fld4.0.0 = (_2,);
_9.fld3.fld1 = 17885_u16 as i128;
Call(_20.fld5.2.0.0.0 = fn10(_9.fld1.fld3.0, _9.fld2, _1, _9.fld4.0, _17, _8, _14, _9.fld5, _1), bb13, UnwindUnreachable())
}
bb13 = {
_11 = [137_u8,116_u8,242_u8,45_u8,119_u8,83_u8];
_10 = (_1,);
_20.fld5.1.5 = -(*_1);
_21.fld5.1.5 = _9.fld1.fld3.2 & _9.fld1.fld3.2;
_20.fld3 = _9.fld6 - _9.fld6;
_20.fld5.1.2 = !_8.fld1;
_9.fld1.fld3 = (_9.fld1.fld2, _1, _21.fld5.1.5);
_21.fld5.2.1 = _9.fld2 as u8;
_19.0 = _9.fld3.fld3.0;
_20.fld5.2.2 = !_9.fld4.2;
_21.fld2.fld3 = [(-951435825_i32),(-773930082_i32),2052669786_i32,1552187982_i32,990579586_i32,1365303329_i32,(-406519443_i32),(-726129625_i32)];
_22 = Adt60 { fld0: _21.fld2.fld3 };
_21.fld2.fld2 = _10;
_9.fld1.fld2 = [_21.fld5.1.5,_21.fld5.1.5,_20.fld5.1.5,(*_1)];
_21.fld5.1 = (_9.fld4.2, _9.fld4.2, _20.fld5.1.2, _13, _9.fld3.fld3.0, (*_1));
_20.fld5.1.0 = _21.fld5.1.3 as u128;
_20.fld2.fld1.0.0 = _20.fld5.2.0.0.0;
_21.fld5.2.0.0.0 = _2;
Goto(bb14)
}
bb14 = {
_21.fld3 = _13 as f64;
_9.fld1.fld0 = _6.fld0;
_23 = [30055_i16,(-25001_i16),9898_i16,(-20805_i16)];
_21.fld5.2.2 = _20.fld5.2.2;
_24.fld1 = _9.fld1.fld1;
_9.fld5.0 = _20.fld5.2.0.0.0 << _12;
(*_1) = _21.fld5.1.5 | _21.fld5.1.5;
_20.fld5.2.1 = _9.fld3.fld1 as u8;
_24.fld0 = [_21.fld5.1.2,_20.fld5.1.2,_21.fld5.1.2,_20.fld5.1.2,_20.fld5.1.2,_20.fld5.1.2,_8.fld1];
_20.fld5.1 = (_21.fld5.1.1, _21.fld5.1.0, _21.fld5.1.2, _13, _19.0, (*_1));
_9.fld1.fld0 = [_21.fld5.1.2,_20.fld5.1.2,_8.fld1,_21.fld5.1.2,_8.fld1,_20.fld5.1.2,_20.fld5.1.2];
_2 = _5 as isize;
_7 = _5;
_21.fld5.2.0.0.0 = -_20.fld5.2.0.0.0;
_16 = _9.fld2 >> _20.fld5.2.2;
_8.fld0 = [_16,_16,_9.fld3.fld1,_16];
(*_1) = _20.fld5.1.5 ^ _20.fld5.1.5;
_21.fld4 = _16;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(9_usize, 14_usize, Move(_14), 7_usize, Move(_7), 2_usize, Move(_2), 13_usize, Move(_13)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(9_usize, 11_usize, Move(_11), 30_usize, _30, 30_usize, _30, 30_usize, _30), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [i8; 4],mut _2: i128,mut _3: *const i8,mut _4: ((isize,),),mut _5: u128,mut _6: Adt56,mut _7: isize,mut _8: (isize,),mut _9: *const i8) -> isize {
mir! {
type RET = isize;
let _10: (*const bool, [u32; 1], [i16; 2]);
let _11: isize;
let _12: char;
let _13: ([i8; 4], *const i8, i8);
let _14: u64;
let _15: [u16; 5];
let _16: f64;
let _17: f64;
let _18: Adt62;
let _19: *mut (u128, u128, u32, usize, char, i8);
let _20: Adt60;
let _21: (char, *mut i8);
let _22: f64;
let _23: char;
let _24: *mut *mut i8;
let _25: f32;
let _26: ();
let _27: ();
{
RET = false as isize;
_6.fld0 = [_2,_2,_2,_2];
RET = -_4.0.0;
_4.0 = (_8.0,);
_4.0.0 = -_8.0;
_6.fld0 = [_2,_2,_2,_2];
Goto(bb1)
}
bb1 = {
_10.1 = [_6.fld1];
Goto(bb2)
}
bb2 = {
_6.fld0 = [_2,_2,_2,_2];
_4.0.0 = 32_u8 as isize;
_5 = 170929936946337542433407586609589618370_u128 | 132141088830481491843946050172528403297_u128;
_4.0.0 = !_8.0;
_5 = 83377959437916775912932430976947179231_u128 - 6650554010688832239613763116286096309_u128;
_8.0 = 11933086852166173850_u64 as isize;
_4.0.0 = 0_usize as isize;
RET = _4.0.0 | _4.0.0;
(*_3) = 107_i8;
_1 = [(*_3),(*_3),(*_9),(*_3)];
_4.0.0 = _7;
(*_9) = 182_u8 as i8;
_10.1 = [_6.fld1];
_7 = _8.0 + _8.0;
_10.2 = [(-31346_i16),5525_i16];
_10.1 = [_6.fld1];
_4.0 = (_7,);
Goto(bb3)
}
bb3 = {
_10.1 = [_6.fld1];
_8 = (_7,);
_1 = [(*_9),(*_3),(*_3),(*_3)];
_11 = 147_u8 as isize;
Call(_7 = core::intrinsics::bswap(_8.0), bb4, UnwindUnreachable())
}
bb4 = {
_13.0 = [(*_9),(*_3),(*_3),(*_9)];
_13.1 = core::ptr::addr_of!((*_3));
_12 = '\u{e1560}';
_8 = (_11,);
_7 = -_4.0.0;
_13 = (_1, _9, (*_9));
RET = 38_u8 as isize;
_4.0.0 = _13.2 as isize;
_3 = core::ptr::addr_of!((*_3));
_5 = !71919145377462267806950371020653390242_u128;
_15 = [58031_u16,43546_u16,25813_u16,45764_u16,22218_u16];
_5 = 92550571868454253063022310571776389980_u128 & 239429384757089963258547152940782025921_u128;
Goto(bb5)
}
bb5 = {
_1 = _13.0;
_4.0 = (_7,);
_3 = core::ptr::addr_of!((*_9));
_1 = [(*_3),(*_3),(*_9),_13.2];
_4.0 = _8;
_13.1 = core::ptr::addr_of!((*_9));
_1 = [(*_3),(*_3),(*_9),(*_3)];
_1 = [(*_3),(*_3),(*_9),(*_3)];
_8 = _4.0;
_4.0 = (_7,);
(*_9) = _13.2 & _13.2;
_12 = '\u{f5786}';
Goto(bb6)
}
bb6 = {
_8 = (_4.0.0,);
_6.fld0 = [_2,_2,_2,_2];
_13.1 = _3;
_12 = '\u{336a4}';
(*_3) = -_13.2;
_6.fld1 = 1670538151_u32;
(*_9) = _13.2 | _13.2;
_13.1 = _3;
_2 = -(-29832912631227569215695438830210490432_i128);
(*_3) = -_13.2;
_12 = '\u{10ad0b}';
_14 = 5831949854781694067_u64 + 7947971602001089562_u64;
_3 = _9;
_2 = 9_u8 as i128;
_16 = 35057_u16 as f64;
_15 = [2554_u16,11913_u16,50592_u16,42442_u16,36810_u16];
_13.2 = !(*_3);
_15 = [6368_u16,42831_u16,13923_u16,19612_u16,8113_u16];
_13.2 = (*_3);
_10.1 = [_6.fld1];
_13.2 = _16 as i8;
(*_3) = _13.2;
_2 = 6008948002300376928_i64 as i128;
(*_9) = _16 as i8;
_4.0 = _8;
_15 = [64055_u16,735_u16,58440_u16,49395_u16,62086_u16];
_13 = (_1, _9, (*_3));
Goto(bb7)
}
bb7 = {
_10.2 = [(-16082_i16),30185_i16];
match _6.fld1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb8,
5 => bb9,
1670538151 => bb11,
_ => bb10
}
}
bb8 = {
_6.fld0 = [_2,_2,_2,_2];
_4.0.0 = 32_u8 as isize;
_5 = 170929936946337542433407586609589618370_u128 | 132141088830481491843946050172528403297_u128;
_4.0.0 = !_8.0;
_5 = 83377959437916775912932430976947179231_u128 - 6650554010688832239613763116286096309_u128;
_8.0 = 11933086852166173850_u64 as isize;
_4.0.0 = 0_usize as isize;
RET = _4.0.0 | _4.0.0;
(*_3) = 107_i8;
_1 = [(*_3),(*_3),(*_9),(*_3)];
_4.0.0 = _7;
(*_9) = 182_u8 as i8;
_10.1 = [_6.fld1];
_7 = _8.0 + _8.0;
_10.2 = [(-31346_i16),5525_i16];
_10.1 = [_6.fld1];
_4.0 = (_7,);
Goto(bb3)
}
bb9 = {
_10.1 = [_6.fld1];
Goto(bb2)
}
bb10 = {
_13.0 = [(*_9),(*_3),(*_3),(*_9)];
_13.1 = core::ptr::addr_of!((*_3));
_12 = '\u{e1560}';
_8 = (_11,);
_7 = -_4.0.0;
_13 = (_1, _9, (*_9));
RET = 38_u8 as isize;
_4.0.0 = _13.2 as isize;
_3 = core::ptr::addr_of!((*_3));
_5 = !71919145377462267806950371020653390242_u128;
_15 = [58031_u16,43546_u16,25813_u16,45764_u16,22218_u16];
_5 = 92550571868454253063022310571776389980_u128 & 239429384757089963258547152940782025921_u128;
Goto(bb5)
}
bb11 = {
_18.fld3.fld5 = [5_usize,7_usize,13189945583015844309_usize];
_18.fld0 = core::ptr::addr_of_mut!(_18.fld1.fld3.2);
_18.fld3.fld2 = [35_u8,116_u8,186_u8,157_u8,94_u8,130_u8];
_4.0 = (_7,);
_18.fld3.fld6 = _2 as f32;
_4.0 = _8;
_18.fld1.fld3 = _13;
_18.fld1.fld2 = [(*_9),(*_9),(*_3),(*_9)];
_18.fld3.fld5 = [5_usize,3_usize,13297499738977345811_usize];
_18.fld3.fld3.1 = _18.fld0;
_18.fld3.fld1 = _2;
_18.fld4.0.0 = (_8.0,);
RET = _4.0.0 + _4.0.0;
_18.fld3.fld3.1 = _18.fld0;
_6.fld1 = !1250180195_u32;
_10.2 = [(-8832_i16),12711_i16];
_18.fld6 = _5 as f64;
_18.fld5 = (_8.0,);
_18.fld4.1 = (-8454578559730839088_i64) as u8;
Call(_18.fld6 = fn11(_13.1, _13.0, _8.0), bb12, UnwindUnreachable())
}
bb12 = {
_4.0.0 = _7 ^ _8.0;
(*_9) = _13.2;
_10.2 = [25908_i16,15280_i16];
_18.fld0 = _18.fld3.fld3.1;
_18.fld1.fld1 = [2380394881737221219_i64,(-4757263546932522403_i64),(-8445938776125313247_i64),(-7668201969043411824_i64),8926678706201108130_i64,(-8402932271384287430_i64),(-5382825364613916501_i64)];
_12 = '\u{dde0c}';
_13.2 = -_18.fld1.fld3.2;
_8 = _4.0;
_2 = _18.fld3.fld1 & _18.fld3.fld1;
_18.fld3.fld0 = _10.2;
_18.fld3.fld1 = _2;
_18.fld1.fld1 = [(-4061846928947594350_i64),3745249129444109618_i64,(-8695419844300420818_i64),(-1319898279423741370_i64),(-8079456094584013434_i64),9129667316800685051_i64,(-5959125409654967548_i64)];
_1 = [_18.fld1.fld3.2,_13.2,(*_3),_18.fld1.fld3.2];
_18.fld0 = core::ptr::addr_of_mut!((*_9));
_18.fld3.fld5 = [5_usize,109165526505098647_usize,11327246556294208700_usize];
_16 = -_18.fld6;
_18.fld3.fld3 = (_12, _18.fld0);
Call(_18.fld3.fld4 = core::intrinsics::transmute(_15), bb13, UnwindUnreachable())
}
bb13 = {
_21.1 = core::ptr::addr_of_mut!((*_3));
_12 = _18.fld3.fld3.0;
_18.fld3.fld3 = (_12, _18.fld0);
_2 = _4.0.0 as i128;
_18.fld2 = !_2;
_10.2 = _18.fld3.fld0;
_18.fld0 = core::ptr::addr_of_mut!(_18.fld1.fld3.2);
_18.fld1.fld3.2 = 60132_u16 as i8;
_18.fld1.fld2 = _1;
Call((*_3) = core::intrinsics::transmute(_18.fld4.1), bb14, UnwindUnreachable())
}
bb14 = {
_18.fld1.fld3.1 = _13.1;
_2 = _18.fld3.fld1;
_24 = core::ptr::addr_of_mut!(_21.1);
_18.fld3.fld6 = _18.fld4.0.0.0 as f32;
_18.fld5 = (_8.0,);
_18.fld3.fld1 = _2 & _2;
_14 = 14505487762712029322_u64 - 16798826212759932066_u64;
_4.0 = (_18.fld5.0,);
_8.0 = _18.fld5.0;
_12 = _18.fld3.fld3.0;
_22 = _18.fld4.1 as f64;
_18.fld3.fld3.1 = core::ptr::addr_of_mut!(_13.2);
_6.fld1 = 3342306447_u32;
_14 = 7914818301868106320_u64;
_1 = [_18.fld1.fld3.2,_18.fld1.fld3.2,(*_3),_13.2];
_23 = _18.fld3.fld3.0;
_8.0 = !_18.fld5.0;
_20.fld0 = [(-577216069_i32),49642576_i32,1905710675_i32,1241736310_i32,(-433009982_i32),(-337209765_i32),1069665509_i32,(-2011825222_i32)];
_24 = core::ptr::addr_of_mut!((*_24));
_21 = (_18.fld3.fld3.0, _18.fld3.fld3.1);
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(10_usize, 23_usize, Move(_23), 15_usize, Move(_15), 7_usize, Move(_7), 12_usize, Move(_12)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(10_usize, 4_usize, Move(_4), 27_usize, _27, 27_usize, _27, 27_usize, _27), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: *const i8,mut _2: [i8; 4],mut _3: isize) -> f64 {
mir! {
type RET = f64;
let _4: [i16; 4];
let _5: u8;
let _6: (((isize,),), u8, u128);
let _7: (*const i8,);
let _8: u64;
let _9: u16;
let _10: Adt54;
let _11: Adt53;
let _12: Adt60;
let _13: *const i8;
let _14: [i16; 4];
let _15: i8;
let _16: f32;
let _17: Adt51;
let _18: i64;
let _19: ();
let _20: ();
{
_2 = [(*_1),(*_1),(*_1),(*_1)];
_3 = !(-33_isize);
_3 = 9223372036854775807_isize;
(*_1) = (-22_i8) | (-122_i8);
_5 = 63224_u16 as u8;
_5 = 24_u8 / 242_u8;
(*_1) = 13_i8;
_4 = [(-457_i16),(-6830_i16),(-1757_i16),21583_i16];
_5 = 140_u8;
(*_1) = 123_i8;
_1 = core::ptr::addr_of!((*_1));
_6.2 = 136598367633801832247280517136423586119_u128 % 250571538177081828794766211219728687314_u128;
_6.2 = 123915848013481331902151903924930061160_u128 & 159787754560256620632756286308257223956_u128;
_6.0.0.0 = '\u{16dfd}' as isize;
RET = (-6624074388786188317_i64) as f64;
_4 = [(-10610_i16),5715_i16,(-20572_i16),10059_i16];
RET = (-4399_i16) as f64;
(*_1) = 102_i8;
_6.2 = (-1669566079_i32) as u128;
_3 = _6.0.0.0 * _6.0.0.0;
_3 = _6.0.0.0;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
140 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_6.2 = 289969273684861359455516952565645809345_u128 << (*_1);
_3 = !_6.0.0.0;
_6.0.0.0 = 109027398791388253609788280824779388978_i128 as isize;
(*_1) = _6.2 as i8;
Call((*_1) = core::intrinsics::bswap(71_i8), bb9, UnwindUnreachable())
}
bb9 = {
RET = _5 as f64;
_7.0 = core::ptr::addr_of!((*_1));
_2 = [(*_1),(*_1),(*_1),(*_1)];
_1 = core::ptr::addr_of!((*_1));
_8 = 10825842515387471864_u64 + 2739410381116951078_u64;
_6.0.0 = (_3,);
_5 = !2_u8;
_6.1 = 13960976936861263135_usize as u8;
_9 = 33713_u16 * 47027_u16;
_7 = (_1,);
_10.fld3 = (_2, _7.0, (*_1));
_6.2 = 232768367119606819393288610672946745431_u128;
_9 = 6679746792577435160_i64 as u16;
Goto(bb10)
}
bb10 = {
_6.0.0 = (_3,);
match _6.2 {
0 => bb3,
1 => bb11,
2 => bb12,
232768367119606819393288610672946745431 => bb14,
_ => bb13
}
}
bb11 = {
RET = _5 as f64;
_7.0 = core::ptr::addr_of!((*_1));
_2 = [(*_1),(*_1),(*_1),(*_1)];
_1 = core::ptr::addr_of!((*_1));
_8 = 10825842515387471864_u64 + 2739410381116951078_u64;
_6.0.0 = (_3,);
_5 = !2_u8;
_6.1 = 13960976936861263135_usize as u8;
_9 = 33713_u16 * 47027_u16;
_7 = (_1,);
_10.fld3 = (_2, _7.0, (*_1));
_6.2 = 232768367119606819393288610672946745431_u128;
_9 = 6679746792577435160_i64 as u16;
Goto(bb10)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
(*_1) = _10.fld3.2 << _5;
_11.fld0 = _8 as usize;
RET = _8 as f64;
_11.fld0 = '\u{952fe}' as usize;
_10.fld1 = [(-8250463409811994460_i64),1865750838392131517_i64,(-7591827418020817744_i64),4834284135778274792_i64,(-7292771928600878747_i64),(-2862628696823856397_i64),(-13762878128918668_i64)];
_11 = Adt53 { fld0: 2453757327948031062_usize,fld1: _1 };
RET = (-30454_i16) as f64;
_14 = _4;
(*_1) = _10.fld3.2;
(*_1) = (-110121708207778149023077737552107363775_i128) as i8;
_11.fld1 = core::ptr::addr_of!((*_1));
_10.fld2 = [_10.fld3.2,_10.fld3.2,(*_1),(*_1)];
_6.1 = _5 << _11.fld0;
(*_1) = '\u{10028}' as i8;
_15 = 2807268340_u32 as i8;
_13 = _1;
_6.0.0 = (_3,);
_10.fld0 = [3343758749_u32,2024108084_u32,237458794_u32,2882538650_u32,3273190836_u32,364454947_u32,184361003_u32];
RET = _6.1 as f64;
_9 = 23503_u16 | 44451_u16;
(*_1) = _15 << _5;
_6.0.0 = (_3,);
_16 = _6.0.0.0 as f32;
_10.fld3 = (_10.fld2, _11.fld1, (*_13));
_14 = [(-26854_i16),(-2564_i16),2965_i16,24767_i16];
Goto(bb15)
}
bb15 = {
Call(_19 = dump_var(11_usize, 6_usize, Move(_6), 5_usize, Move(_5), 14_usize, Move(_14), 9_usize, Move(_9)), bb16, UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: *const i8,mut _2: *const i8,mut _3: bool,mut _4: i8,mut _5: i8,mut _6: isize,mut _7: isize,mut _8: Adt50,mut _9: bool,mut _10: *const i8,mut _11: bool,mut _12: *const i8,mut _13: *mut [u16; 5],mut _14: isize,mut _15: *mut [u16; 5],mut _16: [u32; 7]) -> Adt49 {
mir! {
type RET = Adt49;
let _17: char;
let _18: ([usize; 3], (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)), [u16; 5]);
let _19: f32;
let _20: isize;
let _21: Adt58;
let _22: f32;
let _23: (*const bool, [u32; 1], [i16; 2]);
let _24: (*const i8,);
let _25: (u32, [i16; 2], [u16; 5]);
let _26: isize;
let _27: [u32; 7];
let _28: Adt58;
let _29: Adt60;
let _30: isize;
let _31: ([usize; 3], (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)), [u16; 5]);
let _32: f32;
let _33: Adt56;
let _34: f32;
let _35: ([usize; 3], (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)), [u16; 5]);
let _36: [i8; 4];
let _37: isize;
let _38: (isize,);
let _39: bool;
let _40: u8;
let _41: [i16; 4];
let _42: u128;
let _43: ([usize; 3], (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)), [u16; 5]);
let _44: ();
let _45: ();
{
(*_12) = 8812076889950705132_u64 as i8;
RET.fld1 = 73844256086980035989834131015947338908_i128 >> (*_2);
RET.fld5 = [2_usize,6_usize,3_usize];
RET.fld3.1 = core::ptr::addr_of_mut!(_4);
_4 = (*_2) * (*_12);
_14 = _6;
RET.fld0 = [29165_i16,(-21725_i16)];
RET.fld3.0 = '\u{72c25}';
RET.fld2 = [244_u8,227_u8,10_u8,34_u8,120_u8,236_u8];
RET.fld3.0 = '\u{fd8ee}';
_11 = _9;
Goto(bb1)
}
bb1 = {
RET.fld6 = 88_u8 as f32;
_17 = '\u{75115}';
_14 = _7;
RET.fld5 = [4_usize,1_usize,5_usize];
_11 = !_9;
_18.1.2.0.0 = (_14,);
_18.1.1.4 = _17;
_18.1.1.5 = _4;
_18.1.1 = (185162848697329332710282684548756965766_u128, 330110603424099376763358644204014092759_u128, 3924150323_u32, 7_usize, _17, (*_2));
_21.fld0 = [57117590_i32,(-233345236_i32),1648022865_i32];
_21.fld2 = -_14;
RET.fld4 = [54517_u16,59632_u16,31009_u16,60938_u16,63934_u16];
_18.1.2.0.0.0 = _7;
_18.1.2.1 = _18.1.1.0 as u8;
_21.fld1.3 = _18.1.1.2 as usize;
_21.fld1.5 = (*_1) + (*_10);
_18.1.2.2 = _18.1.1.0;
Goto(bb2)
}
bb2 = {
_18.1.1.2 = 683331019_u32;
RET.fld5 = [_21.fld1.3,_18.1.1.3,_18.1.1.3];
RET.fld0 = [(-3345_i16),(-26803_i16)];
_18.1.2.1 = !111_u8;
(*_1) = _21.fld1.5;
RET.fld3.0 = _17;
Goto(bb3)
}
bb3 = {
_22 = _18.1.1.2 as f32;
_18.1.1 = (_18.1.2.2, _18.1.2.2, 1161003638_u32, _21.fld1.3, _17, (*_12));
_21.fld2 = !_6;
RET.fld6 = _18.1.2.1 as f32;
(*_10) = !_18.1.1.5;
_18.1.1.5 = (*_2) * (*_1);
_23.0 = core::ptr::addr_of!(_9);
(*_1) = _18.1.2.2 as i8;
_4 = (*_12);
RET.fld6 = _22;
_18.1.1.4 = _17;
_25.1 = [828_i16,20534_i16];
_1 = _10;
_18.1.0 = (-1505_i16);
_18.1.1 = (_18.1.2.2, _18.1.2.2, 1299231879_u32, _21.fld1.3, _17, (*_10));
_21.fld1.5 = -_4;
RET.fld5 = [_18.1.1.3,_21.fld1.3,_21.fld1.3];
RET.fld0 = [_18.1.0,_18.1.0];
_21.fld1.5 = _5 ^ _18.1.1.5;
_20 = _7;
RET.fld3.1 = core::ptr::addr_of_mut!((*_10));
RET.fld0 = [_18.1.0,_18.1.0];
_25.2 = [61496_u16,19134_u16,28033_u16,35145_u16,26826_u16];
RET.fld6 = _18.1.0 as f32;
(*_12) = _18.1.1.5 | _5;
Goto(bb4)
}
bb4 = {
_19 = _21.fld1.5 as f32;
match _18.1.2.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
185162848697329332710282684548756965766 => bb10,
_ => bb9
}
}
bb5 = {
_22 = _18.1.1.2 as f32;
_18.1.1 = (_18.1.2.2, _18.1.2.2, 1161003638_u32, _21.fld1.3, _17, (*_12));
_21.fld2 = !_6;
RET.fld6 = _18.1.2.1 as f32;
(*_10) = !_18.1.1.5;
_18.1.1.5 = (*_2) * (*_1);
_23.0 = core::ptr::addr_of!(_9);
(*_1) = _18.1.2.2 as i8;
_4 = (*_12);
RET.fld6 = _22;
_18.1.1.4 = _17;
_25.1 = [828_i16,20534_i16];
_1 = _10;
_18.1.0 = (-1505_i16);
_18.1.1 = (_18.1.2.2, _18.1.2.2, 1299231879_u32, _21.fld1.3, _17, (*_10));
_21.fld1.5 = -_4;
RET.fld5 = [_18.1.1.3,_21.fld1.3,_21.fld1.3];
RET.fld0 = [_18.1.0,_18.1.0];
_21.fld1.5 = _5 ^ _18.1.1.5;
_20 = _7;
RET.fld3.1 = core::ptr::addr_of_mut!((*_10));
RET.fld0 = [_18.1.0,_18.1.0];
_25.2 = [61496_u16,19134_u16,28033_u16,35145_u16,26826_u16];
RET.fld6 = _18.1.0 as f32;
(*_12) = _18.1.1.5 | _5;
Goto(bb4)
}
bb6 = {
_18.1.1.2 = 683331019_u32;
RET.fld5 = [_21.fld1.3,_18.1.1.3,_18.1.1.3];
RET.fld0 = [(-3345_i16),(-26803_i16)];
_18.1.2.1 = !111_u8;
(*_1) = _21.fld1.5;
RET.fld3.0 = _17;
Goto(bb3)
}
bb7 = {
RET.fld6 = 88_u8 as f32;
_17 = '\u{75115}';
_14 = _7;
RET.fld5 = [4_usize,1_usize,5_usize];
_11 = !_9;
_18.1.2.0.0 = (_14,);
_18.1.1.4 = _17;
_18.1.1.5 = _4;
_18.1.1 = (185162848697329332710282684548756965766_u128, 330110603424099376763358644204014092759_u128, 3924150323_u32, 7_usize, _17, (*_2));
_21.fld0 = [57117590_i32,(-233345236_i32),1648022865_i32];
_21.fld2 = -_14;
RET.fld4 = [54517_u16,59632_u16,31009_u16,60938_u16,63934_u16];
_18.1.2.0.0.0 = _7;
_18.1.2.1 = _18.1.1.0 as u8;
_21.fld1.3 = _18.1.1.2 as usize;
_21.fld1.5 = (*_1) + (*_10);
_18.1.2.2 = _18.1.1.0;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_7 = _18.1.1.3 as isize;
_24 = (_2,);
_5 = _19 as i8;
_10 = core::ptr::addr_of!((*_1));
_28 = Adt58 { fld0: _21.fld0,fld1: _18.1.1,fld2: _7 };
_31.1 = (_18.1.0, _28.fld1, _18.1.2);
Goto(bb11)
}
bb11 = {
_22 = -_19;
_27 = _8.fld0;
_18.0 = [_21.fld1.3,_18.1.1.3,_28.fld1.3];
_21.fld1.4 = _31.1.1.4;
_12 = core::ptr::addr_of!((*_12));
RET.fld2 = [_31.1.2.1,_31.1.2.1,_31.1.2.1,_18.1.2.1,_18.1.2.1,_31.1.2.1];
_31.1.2.0 = (_18.1.2.0.0,);
_31.1.1.5 = -_28.fld1.5;
_28.fld0 = _21.fld0;
_9 = _11 | _11;
_31.2 = [17957_u16,8903_u16,64569_u16,33756_u16,41659_u16];
_31.0 = [_28.fld1.3,_28.fld1.3,_21.fld1.3];
_21.fld2 = _20 * _28.fld2;
(*_12) = _5;
_35.1.1.3 = _31.1.1.3;
_18.1.2 = _31.1.2;
_35 = (_18.0, _31.1, _25.2);
_23.2 = [_18.1.0,_18.1.0];
_18.1.2.0.0.0 = _7 + _7;
RET.fld2 = [_35.1.2.1,_31.1.2.1,_35.1.2.1,_31.1.2.1,_35.1.2.1,_31.1.2.1];
_18 = _31;
_28.fld2 = _22 as isize;
_31 = _18;
RET.fld6 = -_19;
Call(_28 = fn13(_18.1.2.0.0.0, (*_12), _31.1.2.1), bb12, UnwindUnreachable())
}
bb12 = {
RET.fld3.0 = _31.1.1.4;
_18.1.1.5 = !(*_12);
RET.fld2 = [_18.1.2.1,_31.1.2.1,_18.1.2.1,_18.1.2.1,_31.1.2.1,_31.1.2.1];
Goto(bb13)
}
bb13 = {
match _31.1.1.2 {
1299231879 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_37 = _7;
_8.fld0 = _27;
_33.fld1 = _18.1.1.2 ^ _31.1.1.2;
(*_12) = _31.1.1.5 >> _28.fld1.2;
(*_2) = _28.fld2 as i8;
_21.fld1 = (_35.1.2.2, _35.1.2.2, _35.1.1.2, _28.fld1.3, _35.1.1.4, (*_12));
_35.1.2.0.0 = _18.1.2.0.0;
_35.1.1.4 = _17;
(*_2) = _4 | _28.fld1.5;
_19 = _7 as f32;
_31.1.2 = (_18.1.2.0, _35.1.2.1, _18.1.1.1);
_31.1.1.3 = (*_10) as usize;
_35.1 = (_18.1.0, _21.fld1, _31.1.2);
RET.fld3.1 = core::ptr::addr_of_mut!((*_1));
_39 = !_3;
_39 = !_9;
_24.0 = core::ptr::addr_of!((*_1));
_28.fld1 = (_21.fld1.0, _31.1.1.0, _18.1.1.2, _31.1.1.3, _35.1.1.4, (*_1));
_43.1.1.3 = _28.fld1.3;
(*_10) = _33.fld1 as i8;
_31.1.1.1 = _28.fld1.1;
_30 = _37;
_17 = _21.fld1.4;
_35 = (_31.0, _18.1, _25.2);
_43.1.1.0 = !_31.1.2.2;
Goto(bb16)
}
bb16 = {
Call(_44 = dump_var(12_usize, 7_usize, Move(_7), 17_usize, Move(_17), 31_usize, Move(_31), 5_usize, Move(_5)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(12_usize, 27_usize, Move(_27), 35_usize, Move(_35), 37_usize, Move(_37), 4_usize, Move(_4)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(12_usize, 3_usize, Move(_3), 45_usize, _45, 45_usize, _45, 45_usize, _45), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: isize,mut _2: i8,mut _3: u8) -> Adt58 {
mir! {
type RET = Adt58;
let _4: (((isize,),), u8, u128);
let _5: isize;
let _6: bool;
let _7: isize;
let _8: u32;
let _9: char;
let _10: ();
let _11: ();
{
RET.fld1.4 = '\u{9d442}';
RET.fld2 = _1 << _1;
Goto(bb1)
}
bb1 = {
_4.0.0.0 = _1 ^ _1;
_4.2 = 3_usize as u128;
RET.fld1 = (_4.2, _4.2, 4186511507_u32, 3_usize, '\u{42074}', _2);
_4.1 = _3 * _3;
_4.1 = !_3;
_5 = 31521_i16 as isize;
RET.fld1.4 = '\u{f364c}';
_3 = !_4.1;
_7 = _4.0.0.0 - _4.0.0.0;
RET.fld0 = [1127174001_i32,1861751899_i32,(-1610768652_i32)];
_6 = false;
RET.fld1.1 = _4.2;
Goto(bb2)
}
bb2 = {
Call(_10 = dump_var(13_usize, 4_usize, Move(_4), 1_usize, Move(_1), 2_usize, Move(_2), 11_usize, _11), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: u64,mut _3: u32,mut _4: usize,mut _5: u32,mut _6: bool,mut _7: *const bool,mut _8: u8,mut _9: usize) -> [i128; 4] {
mir! {
type RET = [i128; 4];
let _10: i16;
let _11: u8;
let _12: Adt49;
let _13: [i16; 2];
let _14: isize;
let _15: f32;
let _16: [i32; 8];
let _17: i128;
let _18: [i128; 4];
let _19: *const i8;
let _20: Adt50;
let _21: (u128, u128, u32, usize, char, i8);
let _22: bool;
let _23: char;
let _24: Adt63;
let _25: f32;
let _26: bool;
let _27: Adt56;
let _28: [i64; 7];
let _29: i8;
let _30: i32;
let _31: Adt51;
let _32: [u32; 7];
let _33: (((isize,),), u8, u128);
let _34: isize;
let _35: bool;
let _36: i128;
let _37: i64;
let _38: ();
let _39: ();
{
_5 = !_3;
_4 = _9 % 16822407975082242010_usize;
_4 = _9;
_9 = !_4;
_2 = 3153509146137054671_i64 as u64;
RET = [112806181575482177740075556401814182911_i128,(-66956548995638472625260861885228114077_i128),(-43592285050276597719275466442737478251_i128),136410209588261467872756419671290926593_i128];
_4 = (-112326991081200595_i64) as usize;
_9 = _4;
RET = [(-61714926489147773342716480726966572808_i128),165374404214980657137942752109942380425_i128,99742144171841870780123107325967048966_i128,94064924772039384002140568440670756792_i128];
(*_7) = !_6;
_6 = !(*_7);
_5 = _3;
RET = [9883700954896579053707727336205199286_i128,59851177159300812233268169743285020419_i128,34385733168319167006527954836355122799_i128,(-8614223161686026061412482341413606231_i128)];
_12.fld4 = [16159_u16,62827_u16,20987_u16,62423_u16,49427_u16];
_11 = _8 | _8;
_12.fld3.0 = '\u{4cc03}';
_12.fld3.0 = '\u{b262b}';
_11 = _8 & _8;
_12.fld0 = [6211_i16,(-20568_i16)];
RET = [52766159576373550153647363353234264103_i128,87585082654402242108804921476145909758_i128,153199347228161304161206649583449675335_i128,(-165967137561088501008284953633091507364_i128)];
_12.fld6 = _1 as f32;
_12.fld6 = 160415385691905418376990969846966905239_i128 as f32;
_8 = _3 as u8;
_13 = [5878_i16,13416_i16];
_13 = [(-7950_i16),15846_i16];
Goto(bb1)
}
bb1 = {
_13 = [(-15316_i16),(-10774_i16)];
RET = [(-48875255855600166279534999412909276836_i128),118877039182632509734528308232925879097_i128,37423311769702601810915149303312171888_i128,42848271349855354116892079697927193412_i128];
_3 = _5 * _5;
Goto(bb2)
}
bb2 = {
_10 = 6410_i16 * 9523_i16;
_6 = _5 <= _3;
_4 = _9;
_12.fld2 = [_8,_11,_8,_8,_8,_8];
_12.fld3.0 = '\u{74a2d}';
_1 = !9223372036854775807_isize;
_11 = !_8;
_10 = (-13352_i16) | (-31323_i16);
_6 = !(*_7);
_14 = _1 - _1;
Goto(bb3)
}
bb3 = {
_15 = _12.fld6;
RET = [83093579597733938736073389492187662133_i128,(-22612100571286440612473456269979529492_i128),22146514626313235857895041595477178515_i128,31316435667706062356367532434062815270_i128];
_17 = 44943649031428110005014387888288291784_i128 * 4437272919948828608122795514222672250_i128;
_12.fld6 = -_15;
_16 = [(-1099267201_i32),1072523035_i32,1597693899_i32,(-410449969_i32),(-1566086304_i32),1101475652_i32,(-2064614943_i32),(-1715744467_i32)];
_15 = -_12.fld6;
_12.fld5 = [_9,_4,_9];
_12.fld3.0 = '\u{c9f19}';
_12.fld4 = [63242_u16,27746_u16,50550_u16,41347_u16,54554_u16];
_12.fld2 = [_8,_8,_11,_11,_11,_8];
_12.fld5 = [_4,_4,_9];
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_17 = (-86566234400605683001676769270420671464_i128);
_8 = _2 as u8;
_12.fld3.0 = '\u{366b9}';
_21.4 = _12.fld3.0;
Call(_16 = fn15(_14, _9, _14, _14, _8, _12.fld4, _14, _9, _12.fld0), bb4, UnwindUnreachable())
}
bb4 = {
_22 = _6 & _6;
_12.fld5 = [_9,_9,_9];
_21.0 = 327719973614045803834523732857730417618_u128;
_10 = (-31494_i16);
_3 = _5;
RET = [_17,_17,_17,_17];
_21.0 = _14 as u128;
_12.fld4 = [54637_u16,36674_u16,14784_u16,12446_u16,12515_u16];
_21.1 = !_21.0;
Call(_12.fld0 = fn16(_12.fld2, _21.4, _12.fld5, _21.4, _6, _21.4, _20.fld1, _12.fld6, _6, _20.fld1, _21.4, (*_7), _20.fld1, _10, _12.fld4, _21.4), bb5, UnwindUnreachable())
}
bb5 = {
_5 = !_3;
_12.fld3.0 = _21.4;
_18 = [_17,_17,_17,_17];
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_21.3 = _4 + _9;
_24.fld5.1.4 = _21.4;
_21.2 = _6 as u32;
_25 = -_15;
_24.fld0 = [_9,_21.3,_21.3];
_24.fld5.1.3 = _17 as usize;
_24.fld5.1.1 = _17 as u128;
_24.fld4 = _17;
_24.fld2.fld3 = [60635562_i32,1522885506_i32,(-916433824_i32),1958363304_i32,(-258376441_i32),(-532658541_i32),(-1639262920_i32),(-1338451729_i32)];
_20.fld0 = [_3,_5,_21.2,_5,_5,_5,_5];
_12.fld5 = [_24.fld5.1.3,_21.3,_24.fld5.1.3];
_24.fld2.fld0 = core::ptr::addr_of!(_21);
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_24.fld5.2.0.0.0 = !_1;
_24.fld5.1 = (_21.0, _21.1, _3, _9, _21.4, 123_i8);
_13 = _12.fld0;
Goto(bb6)
}
bb6 = {
_5 = _24.fld4 as u32;
_12.fld3.1 = core::ptr::addr_of_mut!(_24.fld5.1.5);
_24.fld2.fld1.0.0 = _24.fld5.2.0.0.0;
_12.fld1 = _17;
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_18 = [_17,_24.fld4,_12.fld1,_12.fld1];
_5 = !_24.fld5.1.2;
Call(_16 = fn19(_24.fld5.1.4, _12.fld1, _20.fld0, _21.4, _24.fld5.2.0.0), bb7, UnwindUnreachable())
}
bb7 = {
_6 = (*_7);
_24.fld5.2.1 = (*_7) as u8;
_11 = _24.fld5.2.1;
_21 = _24.fld5.1;
_12.fld0 = [_10,_10];
(*_7) = !_22;
(*_7) = _22;
_24.fld0 = [_24.fld5.1.3,_21.3,_4];
_28 = [(-3679981277536433_i64),(-1246965200910803888_i64),(-3745919870786126649_i64),2571363637459746667_i64,(-8637443763085797321_i64),(-7084130795414659185_i64),568049770200465639_i64];
_24.fld5.1.5 = !_21.5;
match _21.2 {
0 => bb1,
1 => bb2,
2 => bb8,
3686393482 => bb10,
_ => bb9
}
}
bb8 = {
_15 = _12.fld6;
RET = [83093579597733938736073389492187662133_i128,(-22612100571286440612473456269979529492_i128),22146514626313235857895041595477178515_i128,31316435667706062356367532434062815270_i128];
_17 = 44943649031428110005014387888288291784_i128 * 4437272919948828608122795514222672250_i128;
_12.fld6 = -_15;
_16 = [(-1099267201_i32),1072523035_i32,1597693899_i32,(-410449969_i32),(-1566086304_i32),1101475652_i32,(-2064614943_i32),(-1715744467_i32)];
_15 = -_12.fld6;
_12.fld5 = [_9,_4,_9];
_12.fld3.0 = '\u{c9f19}';
_12.fld4 = [63242_u16,27746_u16,50550_u16,41347_u16,54554_u16];
_12.fld2 = [_8,_8,_11,_11,_11,_8];
_12.fld5 = [_4,_4,_9];
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_17 = (-86566234400605683001676769270420671464_i128);
_8 = _2 as u8;
_12.fld3.0 = '\u{366b9}';
_21.4 = _12.fld3.0;
Call(_16 = fn15(_14, _9, _14, _14, _8, _12.fld4, _14, _9, _12.fld0), bb4, UnwindUnreachable())
}
bb9 = {
_10 = 6410_i16 * 9523_i16;
_6 = _5 <= _3;
_4 = _9;
_12.fld2 = [_8,_11,_8,_8,_8,_8];
_12.fld3.0 = '\u{74a2d}';
_1 = !9223372036854775807_isize;
_11 = !_8;
_10 = (-13352_i16) | (-31323_i16);
_6 = !(*_7);
_14 = _1 - _1;
Goto(bb3)
}
bb10 = {
_12.fld6 = _2 as f32;
_19 = core::ptr::addr_of!(_24.fld5.1.5);
_27 = Adt56 { fld0: _18,fld1: _21.2 };
_12.fld6 = _25 * _15;
_19 = core::ptr::addr_of!(_21.5);
_24.fld2.fld2.0 = _19;
_20.fld0 = [_3,_3,_27.fld1,_5,_24.fld5.1.2,_3,_5];
_24.fld5.1 = (_21.1, _21.0, _27.fld1, _9, _21.4, (*_19));
_24.fld2.fld0 = core::ptr::addr_of!(_24.fld5.1);
_29 = _24.fld5.1.5;
_24.fld5.2.0.0.0 = _24.fld5.1.1 as isize;
match _24.fld5.1.5 {
123 => bb11,
_ => bb4
}
}
bb11 = {
Goto(bb12)
}
bb12 = {
_26 = !(*_7);
_2 = 15114006190590477022_u64 | 12928085881690940113_u64;
_27 = Adt56 { fld0: _18,fld1: _3 };
_31.fld0 = [(-8224080598619239045_i64),(-6677422271832885138_i64),5976997171285700296_i64,(-8379005996350729329_i64),1978300857864460485_i64,(-3738270225867968316_i64),661916680658579455_i64];
_24.fld5.1.4 = _21.4;
_31 = Adt51 { fld0: _28 };
(*_19) = !_29;
_21.0 = _24.fld5.1.1;
_20.fld0 = [_24.fld5.1.2,_3,_3,_21.2,_27.fld1,_21.2,_27.fld1];
_24.fld5.1.5 = _21.5;
_19 = core::ptr::addr_of!(_24.fld5.1.5);
_21.5 = _29 >> _21.2;
_19 = core::ptr::addr_of!(_29);
_19 = _24.fld2.fld2.0;
_11 = _24.fld5.2.1;
_21.3 = !_9;
_5 = !_27.fld1;
Call(_24.fld5.1.3 = core::intrinsics::transmute(_4), bb13, UnwindUnreachable())
}
bb13 = {
_1 = _21.4 as isize;
_29 = -(*_19);
_24.fld5.2.0 = _24.fld2.fld1;
_12.fld3.1 = core::ptr::addr_of_mut!(_21.5);
_14 = _24.fld2.fld1.0.0 << _5;
_23 = _12.fld3.0;
_21.2 = !_3;
_11 = _24.fld5.2.1;
_24.fld5.0 = !_10;
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_22 = _26;
_33.2 = (-2110997227_i32) as u128;
(*_7) = _26;
_30 = -1594412282_i32;
_24.fld2.fld2.0 = core::ptr::addr_of!(_29);
_2 = _21.5 as u64;
_1 = _24.fld2.fld1.0.0;
_19 = _24.fld2.fld2.0;
_17 = _24.fld4 * _24.fld4;
match _27.fld1 {
0 => bb11,
1 => bb12,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb10,
6 => bb7,
3686393482 => bb15,
_ => bb14
}
}
bb14 = {
_15 = _12.fld6;
RET = [83093579597733938736073389492187662133_i128,(-22612100571286440612473456269979529492_i128),22146514626313235857895041595477178515_i128,31316435667706062356367532434062815270_i128];
_17 = 44943649031428110005014387888288291784_i128 * 4437272919948828608122795514222672250_i128;
_12.fld6 = -_15;
_16 = [(-1099267201_i32),1072523035_i32,1597693899_i32,(-410449969_i32),(-1566086304_i32),1101475652_i32,(-2064614943_i32),(-1715744467_i32)];
_15 = -_12.fld6;
_12.fld5 = [_9,_4,_9];
_12.fld3.0 = '\u{c9f19}';
_12.fld4 = [63242_u16,27746_u16,50550_u16,41347_u16,54554_u16];
_12.fld2 = [_8,_8,_11,_11,_11,_8];
_12.fld5 = [_4,_4,_9];
_20.fld1 = core::ptr::addr_of_mut!(_12.fld4);
_17 = (-86566234400605683001676769270420671464_i128);
_8 = _2 as u8;
_12.fld3.0 = '\u{366b9}';
_21.4 = _12.fld3.0;
Call(_16 = fn15(_14, _9, _14, _14, _8, _12.fld4, _14, _9, _12.fld0), bb4, UnwindUnreachable())
}
bb15 = {
_8 = 4547236329316342237_i64 as u8;
_12.fld3.1 = core::ptr::addr_of_mut!((*_19));
_33.0.0 = (_14,);
_33.1 = _6 as u8;
RET = _27.fld0;
_32 = _20.fld0;
_24.fld2.fld2.0 = core::ptr::addr_of!(_21.5);
_20.fld0 = [_3,_3,_21.2,_5,_27.fld1,_3,_24.fld5.1.2];
(*_7) = _6;
_12.fld6 = _15;
_12.fld3.0 = _23;
_21.2 = _5 ^ _27.fld1;
_24.fld1 = [_5];
_21.0 = !_21.1;
_34 = !_33.0.0.0;
_24.fld2.fld0 = core::ptr::addr_of!(_21);
_24.fld2.fld1 = _33.0;
_24.fld5.1.0 = _21.4 as u128;
_7 = core::ptr::addr_of!((*_7));
_24.fld5.1.0 = _33.1 as u128;
_31.fld0 = _28;
_24.fld5.0 = _10;
_26 = !(*_7);
Goto(bb16)
}
bb16 = {
Call(_38 = dump_var(14_usize, 34_usize, Move(_34), 18_usize, Move(_18), 33_usize, Move(_33), 26_usize, Move(_26)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(14_usize, 17_usize, Move(_17), 10_usize, Move(_10), 30_usize, Move(_30), 16_usize, Move(_16)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(14_usize, 4_usize, Move(_4), 28_usize, Move(_28), 2_usize, Move(_2), 14_usize, Move(_14)), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: isize,mut _2: usize,mut _3: isize,mut _4: isize,mut _5: u8,mut _6: [u16; 5],mut _7: isize,mut _8: usize,mut _9: [i16; 2]) -> [i32; 8] {
mir! {
type RET = [i32; 8];
let _10: ((isize,),);
let _11: (u128, u128, u32, usize, char, i8);
let _12: *mut [u16; 5];
let _13: [u32; 1];
let _14: f32;
let _15: isize;
let _16: Adt59;
let _17: ((isize,),);
let _18: Adt58;
let _19: *mut i8;
let _20: Adt64;
let _21: i16;
let _22: *const (u128, u128, u32, usize, char, i8);
let _23: i32;
let _24: u32;
let _25: f64;
let _26: [i8; 4];
let _27: isize;
let _28: char;
let _29: isize;
let _30: char;
let _31: char;
let _32: i64;
let _33: ([usize; 3], (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)), [u16; 5]);
let _34: isize;
let _35: bool;
let _36: [u32; 1];
let _37: ();
let _38: ();
{
RET = [(-1573118608_i32),417893273_i32,(-567558663_i32),(-471023065_i32),1702068189_i32,1699985975_i32,(-676980797_i32),(-511176421_i32)];
_9 = [17487_i16,14927_i16];
_10.0.0 = false as isize;
_8 = _2 % 3_usize;
_6 = [42290_u16,11416_u16,45321_u16,43272_u16,39429_u16];
_8 = _2;
_3 = _4 + _7;
_11 = (123919655125102462818472453545600784107_u128, 233599373173464257339800078515321206770_u128, 665339406_u32, _2, '\u{9f120}', (-2_i8));
_11.1 = !_11.0;
RET = [1726261196_i32,1234925675_i32,(-1491837466_i32),907990224_i32,(-453813761_i32),304034001_i32,431309277_i32,1892037219_i32];
_1 = 41169_u16 as isize;
_1 = _3 & _10.0.0;
_11.5 = (-126_i8) - 6_i8;
_10.0.0 = (-577603431_i32) as isize;
_8 = !_2;
_9 = [(-17092_i16),26796_i16];
_1 = _4;
_3 = _4 ^ _7;
_3 = _11.4 as isize;
_3 = _10.0.0 << _4;
RET = [1368490766_i32,681647726_i32,260436818_i32,625425456_i32,(-453947201_i32),1553347715_i32,(-1171492225_i32),389812540_i32];
_3 = _7 | _4;
_11.2 = 2975502456_u32 << _11.3;
Goto(bb1)
}
bb1 = {
_11.1 = _11.0 | _11.0;
_11.3 = _11.5 as usize;
RET = [(-581003619_i32),259942115_i32,330507436_i32,806087039_i32,(-1598116092_i32),1208644991_i32,(-56757482_i32),1269769986_i32];
_6 = [41786_u16,255_u16,6679_u16,7057_u16,24433_u16];
_9 = [(-1694_i16),14633_i16];
_12 = core::ptr::addr_of_mut!(_6);
_2 = _11.3 % 8045874400557459540_usize;
_8 = _2;
RET = [(-1538455604_i32),(-1977238917_i32),213225333_i32,(-2033852049_i32),(-759472121_i32),(-596484310_i32),835297182_i32,(-1408828080_i32)];
_9 = [11634_i16,(-1011_i16)];
(*_12) = [54924_u16,54054_u16,27904_u16,56484_u16,12376_u16];
Call(_4 = core::intrinsics::bswap(_3), bb2, UnwindUnreachable())
}
bb2 = {
_14 = _5 as f32;
_12 = core::ptr::addr_of_mut!(_6);
_9 = [(-9708_i16),28180_i16];
_11.1 = _11.0;
_15 = _11.4 as isize;
_5 = !93_u8;
Goto(bb3)
}
bb3 = {
(*_12) = [33794_u16,494_u16,34854_u16,15947_u16,24809_u16];
Goto(bb4)
}
bb4 = {
_16.fld1 = [517270230_i32,718712195_i32,(-2106230181_i32),(-262900105_i32),370735992_i32,(-1078341483_i32),(-119150246_i32),(-1398411446_i32)];
_10.0 = (_3,);
_11.1 = _11.0;
_1 = !_15;
_20.fld2.fld5.2 = (_10, _5, _11.1);
_13 = [_11.2];
_17.0.0 = _11.5 as isize;
_16.fld5.fld2 = [_5,_5,_20.fld2.fld5.2.1,_20.fld2.fld5.2.1,_5,_20.fld2.fld5.2.1];
_16.fld5.fld2 = [_20.fld2.fld5.2.1,_20.fld2.fld5.2.1,_5,_20.fld2.fld5.2.1,_5,_20.fld2.fld5.2.1];
_16.fld4 = core::ptr::addr_of_mut!(_11.5);
_22 = core::ptr::addr_of!(_20.fld2.fld5.1);
_26 = [_11.5,_11.5,_11.5,_11.5];
(*_22).0 = _3 as u128;
_20.fld6.fld0 = !_2;
match _11.1 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
123919655125102462818472453545600784107 => bb12,
_ => bb11
}
}
bb5 = {
(*_12) = [33794_u16,494_u16,34854_u16,15947_u16,24809_u16];
Goto(bb4)
}
bb6 = {
_14 = _5 as f32;
_12 = core::ptr::addr_of_mut!(_6);
_9 = [(-9708_i16),28180_i16];
_11.1 = _11.0;
_15 = _11.4 as isize;
_5 = !93_u8;
Goto(bb3)
}
bb7 = {
_11.1 = _11.0 | _11.0;
_11.3 = _11.5 as usize;
RET = [(-581003619_i32),259942115_i32,330507436_i32,806087039_i32,(-1598116092_i32),1208644991_i32,(-56757482_i32),1269769986_i32];
_6 = [41786_u16,255_u16,6679_u16,7057_u16,24433_u16];
_9 = [(-1694_i16),14633_i16];
_12 = core::ptr::addr_of_mut!(_6);
_2 = _11.3 % 8045874400557459540_usize;
_8 = _2;
RET = [(-1538455604_i32),(-1977238917_i32),213225333_i32,(-2033852049_i32),(-759472121_i32),(-596484310_i32),835297182_i32,(-1408828080_i32)];
_9 = [11634_i16,(-1011_i16)];
(*_12) = [54924_u16,54054_u16,27904_u16,56484_u16,12376_u16];
Call(_4 = core::intrinsics::bswap(_3), bb2, UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_20.fld1.fld1.3 = !_20.fld6.fld0;
(*_22).2 = _11.2 - _11.2;
_13 = [(*_22).2];
_20.fld2.fld5.1.0 = _11.0 | _11.0;
_11.1 = !(*_22).0;
_20.fld2.fld5.1.1 = _20.fld2.fld5.2.2 + (*_22).0;
_20.fld2.fld2.fld2.0 = core::ptr::addr_of!(_20.fld1.fld1.5);
_20.fld2.fld5.2.0 = (_10.0,);
_20.fld0.fld0 = [(-1950920307551204981031086193885097177_i128),(-132590669207256459879595201733450960716_i128),49352660429673227243741254308195168947_i128,99389470822438036813362921179655851160_i128];
_27 = !_1;
_20.fld1.fld1.1 = (*_22).1 | _20.fld2.fld5.1.1;
_20.fld1.fld1.0 = _20.fld1.fld1.1;
_20.fld2.fld5.2.2 = (*_22).1 - _20.fld1.fld1.1;
Goto(bb13)
}
bb13 = {
_16.fld5.fld5 = [_20.fld6.fld0,_11.3,_2];
_11.5 = -19_i8;
_3 = false as isize;
(*_22).1 = _20.fld1.fld1.1;
_9 = [(-8670_i16),20679_i16];
_20.fld2.fld5.2.0.0.0 = -_10.0.0;
_16.fld0.fld0.fld1 = core::ptr::addr_of!((*_22).5);
(*_12) = [63508_u16,46589_u16,15350_u16,55864_u16,16049_u16];
_19 = core::ptr::addr_of_mut!(_20.fld2.fld5.1.5);
_8 = _11.3;
match _11.0 {
0 => bb11,
1 => bb4,
123919655125102462818472453545600784107 => bb14,
_ => bb3
}
}
bb14 = {
_15 = _3;
_20.fld2.fld5.0 = (-30954_i16) ^ 31637_i16;
_9 = [_20.fld2.fld5.0,_20.fld2.fld5.0];
(*_22).0 = (*_22).1;
_33.0 = _16.fld5.fld5;
_16.fld5.fld3.0 = _11.4;
_20.fld2.fld5.2.1 = _5;
_33.1.1.4 = _16.fld5.fld3.0;
_26 = [_11.5,_11.5,_11.5,_11.5];
_27 = _3;
_30 = _16.fld5.fld3.0;
_33.2 = [55242_u16,50562_u16,8873_u16,65480_u16,13234_u16];
_16.fld5.fld6 = 37644_u16 as f32;
_16.fld0.fld0.fld1 = core::ptr::addr_of!((*_22).5);
_20.fld6.fld1 = core::ptr::addr_of!((*_19));
_33.1.2.0 = (_10.0,);
_33.1.2.0.0.0 = _7 ^ _10.0.0;
_20.fld2.fld2.fld0 = core::ptr::addr_of!(_20.fld2.fld5.1);
_33.1.2.1 = _5;
_20.fld3 = !6847566810255637576_u64;
_20.fld1.fld0 = [1506402013_i32,(-1843306477_i32),(-1665722885_i32)];
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(15_usize, 3_usize, Move(_3), 13_usize, Move(_13), 26_usize, Move(_26), 10_usize, Move(_10)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(15_usize, 9_usize, Move(_9), 5_usize, Move(_5), 7_usize, Move(_7), 6_usize, Move(_6)), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [u8; 6],mut _2: char,mut _3: [usize; 3],mut _4: char,mut _5: bool,mut _6: char,mut _7: *mut [u16; 5],mut _8: f32,mut _9: bool,mut _10: *mut [u16; 5],mut _11: char,mut _12: bool,mut _13: *mut [u16; 5],mut _14: i16,mut _15: [u16; 5],mut _16: char) -> [i16; 2] {
mir! {
type RET = [i16; 2];
let _17: [i64; 7];
let _18: f64;
let _19: [u8; 6];
let _20: Adt59;
let _21: f64;
let _22: Adt50;
let _23: [i32; 3];
let _24: Adt56;
let _25: f32;
let _26: *const bool;
let _27: u32;
let _28: [i16; 2];
let _29: isize;
let _30: f32;
let _31: u16;
let _32: f64;
let _33: (*const i8,);
let _34: Adt55;
let _35: u64;
let _36: usize;
let _37: u64;
let _38: ();
let _39: ();
{
_13 = core::ptr::addr_of_mut!((*_7));
_2 = _16;
(*_13) = _15;
Call(RET = core::intrinsics::transmute(_11), bb1, UnwindUnreachable())
}
bb1 = {
(*_10) = _15;
_17 = [327390767151235024_i64,5052815983728576161_i64,(-7792931026898618755_i64),4546899658708374191_i64,(-11465759681697997_i64),8855274995758392933_i64,6434273343538290122_i64];
_6 = _11;
match _14 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463463374607431768179962 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_18 = _8 as f64;
RET = [_14,_14];
_6 = _11;
_7 = core::ptr::addr_of_mut!(_15);
_16 = _6;
_3 = [6_usize,5043494034161031818_usize,10316795963262460803_usize];
_15 = (*_10);
(*_13) = _15;
_20.fld0.fld3 = [(-100_i8),(-65_i8),(-92_i8),95_i8];
_20.fld5.fld5 = _3;
_20.fld0.fld1 = [3694467494_u32];
_20.fld0.fld0.fld0 = (-123688614366952051195225605512288345766_i128) as usize;
_16 = _4;
_20.fld0.fld1 = [1519838382_u32];
_3 = [_20.fld0.fld0.fld0,_20.fld0.fld0.fld0,_20.fld0.fld0.fld0];
_20.fld2 = 9223372036854775807_isize & 9223372036854775807_isize;
_17 = [(-6990685178966831203_i64),4400556904195318720_i64,(-7801161590632086389_i64),(-2579718183146148082_i64),1732937937375860978_i64,1882706495006676212_i64,(-7824436920774917132_i64)];
_20.fld5.fld2 = _1;
_13 = core::ptr::addr_of_mut!(_15);
_9 = _12;
_18 = _20.fld0.fld0.fld0 as f64;
Call(_19 = fn17(_14, _8), bb7, UnwindUnreachable())
}
bb7 = {
_20.fld5.fld0 = [_14,_14];
_20.fld5.fld3.0 = _4;
_7 = core::ptr::addr_of_mut!(_20.fld3);
_20.fld5.fld4 = [56521_u16,28118_u16,63362_u16,60944_u16,63120_u16];
_20.fld1 = [882673647_i32,(-1854794229_i32),(-587236781_i32),(-995768199_i32),(-544247073_i32),(-1854763620_i32),(-534814309_i32),1819917305_i32];
_20.fld5.fld3.0 = _2;
_20.fld0.fld0.fld0 = 1_usize;
RET = [_14,_14];
_18 = _14 as f64;
_13 = _10;
_24.fld0 = [60557302199733948996463301610284143607_i128,52406055443575554921878447901275594001_i128,16537522361012770688027099600842191604_i128,(-158220422464097469649494313664040017188_i128)];
_11 = _16;
(*_13) = [42914_u16,56576_u16,7723_u16,16040_u16,61500_u16];
(*_13) = _20.fld5.fld4;
_3 = _20.fld5.fld5;
_20.fld0.fld2 = 5239410159171672588631127192421677472_u128 - 25868591733365741874727382509783784178_u128;
_4 = _20.fld5.fld3.0;
_20.fld5.fld6 = 1206917072_u32 as f32;
_25 = 58148904046367576921800514459121148324_i128 as f32;
_20.fld5.fld5 = [_20.fld0.fld0.fld0,_20.fld0.fld0.fld0,_20.fld0.fld0.fld0];
_22.fld0 = [691744351_u32,150244083_u32,3125967584_u32,1042659568_u32,206145691_u32,1829390418_u32,973979243_u32];
_28 = [_14,_14];
_15 = _20.fld5.fld4;
_20.fld0.fld3 = [61_i8,44_i8,32_i8,83_i8];
Goto(bb8)
}
bb8 = {
RET = [_14,_14];
_26 = core::ptr::addr_of!(_5);
_20.fld0.fld2 = !321376399547160614296526934130005119984_u128;
_20.fld5.fld6 = 162_u8 as f32;
(*_7) = (*_13);
_21 = -_18;
match _14 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb9,
6 => bb10,
340282366920938463463374607431768179962 => bb12,
_ => bb11
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_34.fld1 = [1532066786_u32];
_15 = (*_10);
_20.fld0.fld2 = 42839_u16 as u128;
_31 = 50300_u16;
_29 = _14 as isize;
Goto(bb13)
}
bb13 = {
_20.fld3 = _20.fld5.fld4;
_20.fld3 = _15;
_34.fld0 = [2607961505_u32,2687363089_u32,98369311_u32,896916533_u32,1521397886_u32,640377638_u32,754493008_u32];
_24.fld1 = 2854487012_u32 * 2538873184_u32;
_34.fld2 = _21;
_24.fld1 = _8 as u32;
_20.fld5.fld1 = 125135895355899096496355009672730147200_i128 >> _20.fld0.fld0.fld0;
_16 = _20.fld5.fld3.0;
Goto(bb14)
}
bb14 = {
_32 = _34.fld2 / f64::NAN;
_20.fld0.fld2 = !17704483845345612370506083552271552033_u128;
(*_13) = [_31,_31,_31,_31,_31];
_9 = (*_26);
_10 = core::ptr::addr_of_mut!((*_13));
_20.fld0.fld0.fld0 = 17973529833672563486_usize;
_11 = _2;
_13 = _7;
_34.fld2 = (-1420657_i32) as f64;
_16 = _2;
_4 = _6;
_16 = _6;
_34 = Adt55 { fld0: _22.fld0,fld1: _20.fld0.fld1,fld2: _21,fld3: _31 };
_22.fld0 = _34.fld0;
_22.fld0 = _34.fld0;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(16_usize, 1_usize, Move(_1), 17_usize, Move(_17), 3_usize, Move(_3), 31_usize, Move(_31)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(16_usize, 9_usize, Move(_9), 16_usize, Move(_16), 15_usize, Move(_15), 2_usize, Move(_2)), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: i16,mut _2: f32) -> [u8; 6] {
mir! {
type RET = [u8; 6];
let _3: Adt50;
let _4: isize;
let _5: [i16; 2];
let _6: isize;
let _7: u8;
let _8: bool;
let _9: [bool; 6];
let _10: isize;
let _11: bool;
let _12: isize;
let _13: char;
let _14: [i16; 2];
let _15: (char, *mut i8);
let _16: *mut i8;
let _17: f64;
let _18: u16;
let _19: u8;
let _20: [bool; 6];
let _21: Adt61;
let _22: Adt50;
let _23: [i16; 4];
let _24: usize;
let _25: i32;
let _26: f64;
let _27: bool;
let _28: ();
let _29: ();
{
_2 = 3_usize as f32;
_3.fld0 = [560076528_u32,1531184688_u32,1526940894_u32,3033020763_u32,1341204538_u32,2324587651_u32,1864103854_u32];
_2 = 129392556385325720715759631294703117823_u128 as f32;
RET = [162_u8,137_u8,129_u8,165_u8,107_u8,43_u8];
_1 = (-19028_i16);
_4 = (-9223372036854775808_isize) >> _1;
RET = [92_u8,220_u8,139_u8,254_u8,198_u8,85_u8];
_5 = [_1,_1];
_5 = [_1,_1];
_5 = [_1,_1];
_6 = !_4;
Call(_4 = fn18(_6, _6, _6, _5, _1, _3.fld0, _6, _3.fld0, _1, _6, _1, _1, _6, _3.fld0, _5, _2), bb1, UnwindUnreachable())
}
bb1 = {
_1 = -(-17818_i16);
_3.fld0 = [2282865789_u32,3371156250_u32,3509079726_u32,2415969487_u32,2133555268_u32,3104236527_u32,3321658888_u32];
_1 = -(-1477_i16);
_3.fld0 = [286130558_u32,552547154_u32,1239439106_u32,1518640285_u32,1828840933_u32,2516775213_u32,3636276072_u32];
_4 = _6;
_5 = [_1,_1];
_4 = _6 << _6;
_7 = '\u{24358}' as u8;
RET = [_7,_7,_7,_7,_7,_7];
_6 = _4 + _4;
Goto(bb2)
}
bb2 = {
_3.fld0 = [3267966920_u32,2272318718_u32,313650397_u32,1642588601_u32,4000790004_u32,2893907689_u32,2705131535_u32];
RET = [_7,_7,_7,_7,_7,_7];
_2 = (-41_i8) as f32;
_1 = 18304_i16;
_7 = 238_u8 / 184_u8;
_6 = !_4;
_6 = false as isize;
_3.fld0 = [4106515565_u32,662561669_u32,2259784229_u32,1399518402_u32,1871716397_u32,248155519_u32,149017089_u32];
_3.fld0 = [1393086243_u32,3396436366_u32,3675638945_u32,3567603330_u32,3152868314_u32,3327662609_u32,815187645_u32];
_8 = true ^ false;
_6 = _4 | _4;
_3.fld0 = [1278154688_u32,884939167_u32,3940918049_u32,1153437751_u32,4065914572_u32,2143933700_u32,1319481454_u32];
_1 = -(-29833_i16);
RET = [_7,_7,_7,_7,_7,_7];
_4 = _6;
RET = [_7,_7,_7,_7,_7,_7];
_7 = 77_u8 << _6;
_11 = !_8;
_2 = _7 as f32;
_1 = 17114_i16;
RET = [_7,_7,_7,_7,_7,_7];
_10 = _6;
_9 = [_11,_8,_11,_11,_11,_8];
RET = [_7,_7,_7,_7,_7,_7];
_8 = _11;
_4 = _6 ^ _6;
RET = [_7,_7,_7,_7,_7,_7];
match _1 {
0 => bb3,
17114 => bb5,
_ => bb4
}
}
bb3 = {
_1 = -(-17818_i16);
_3.fld0 = [2282865789_u32,3371156250_u32,3509079726_u32,2415969487_u32,2133555268_u32,3104236527_u32,3321658888_u32];
_1 = -(-1477_i16);
_3.fld0 = [286130558_u32,552547154_u32,1239439106_u32,1518640285_u32,1828840933_u32,2516775213_u32,3636276072_u32];
_4 = _6;
_5 = [_1,_1];
_4 = _6 << _6;
_7 = '\u{24358}' as u8;
RET = [_7,_7,_7,_7,_7,_7];
_6 = _4 + _4;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_6 = _4;
_5 = [_1,_1];
_7 = !131_u8;
_13 = '\u{d9c15}';
_7 = 288168474_i32 as u8;
_13 = '\u{c06a}';
_1 = -(-9938_i16);
_5 = [_1,_1];
_6 = !_4;
_12 = -_4;
_3.fld0 = [520925723_u32,570829442_u32,248654334_u32,4164613890_u32,2403024376_u32,3207105000_u32,1990496209_u32];
Goto(bb6)
}
bb6 = {
_1 = 3365618660_u32 as i16;
_3.fld0 = [3501749685_u32,2553535487_u32,2087939488_u32,2928506143_u32,2181426796_u32,714430975_u32,490408445_u32];
_3.fld0 = [3563327279_u32,1973550735_u32,1827067279_u32,3670226000_u32,1940315285_u32,2932429623_u32,2630993265_u32];
_1 = (-2098_i16) - 2886_i16;
_4 = _12 >> _6;
_3.fld0 = [3750236468_u32,3457442168_u32,3248233078_u32,2294163919_u32,1097905325_u32,1231205199_u32,2924964855_u32];
_1 = (-15203_i16) >> _12;
_9 = [_11,_8,_8,_11,_8,_11];
_4 = _6;
_1 = 2901_i16 + (-29878_i16);
_1 = (-8582_i16);
_8 = _11;
_6 = !_4;
match _1 {
0 => bb1,
340282366920938463463374607431768202874 => bb7,
_ => bb4
}
}
bb7 = {
_11 = _8 | _8;
_7 = !110_u8;
_14 = _5;
_5 = _14;
RET = [_7,_7,_7,_7,_7,_7];
_1 = !(-7183_i16);
_7 = 234_u8;
_12 = -_10;
_4 = 7740514171067393456_i64 as isize;
_1 = 23855_i16 << _12;
_15.0 = _13;
_10 = 14461983711009329881_u64 as isize;
_9 = [_11,_11,_8,_8,_8,_8];
_8 = _11;
Goto(bb8)
}
bb8 = {
RET = [_7,_7,_7,_7,_7,_7];
_8 = _11;
_10 = _6 - _6;
_1 = 10633_i16 * 23331_i16;
_4 = (-172008240_i32) as isize;
_3.fld0 = [3560645625_u32,920104666_u32,3624433041_u32,1650167919_u32,528761699_u32,2422552600_u32,2973754378_u32];
_2 = 93225933389859153088376071233361286704_i128 as f32;
_12 = _10 << _10;
_12 = _10 & _6;
_15.0 = _13;
_15.0 = _13;
_17 = 36087_u16 as f64;
_4 = _12 * _12;
_19 = _7 - _7;
_8 = !_11;
_2 = 60044896_i32 as f32;
RET = [_19,_7,_19,_19,_7,_7];
_1 = (-21973_i16);
_21.fld1.fld0 = [4296763057822640126_i64,(-7864189384514780442_i64),(-5954606894940602750_i64),4353185472606645057_i64,2462212836285091317_i64,(-513573817019436551_i64),(-6565866822680057847_i64)];
match _1 {
0 => bb3,
1 => bb4,
340282366920938463463374607431768189483 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_7 = 488436978181149704_i64 as u8;
_21.fld2 = [(-36900631935640093046388334245973755709_i128),(-72502494081828746682846298097189187253_i128),12950859089091483492843104428526472208_i128,(-13170410411672214858712149501170845512_i128)];
_3.fld1 = core::ptr::addr_of_mut!(_21.fld3);
_2 = 8319451392275435110_i64 as f32;
_21.fld0.fld1.5 = _15.0 as i8;
_4 = !_12;
_17 = _2 as f64;
_21.fld0.fld1.0 = !93119966393595178223143453961385210756_u128;
_21.fld3 = [16775_u16,469_u16,55472_u16,49022_u16,26887_u16];
_11 = _8;
_15.0 = _13;
_15.1 = core::ptr::addr_of_mut!(_21.fld0.fld1.5);
_5 = [_1,_1];
_21.fld1.fld0 = [(-6625411216408313140_i64),2428736835637062348_i64,(-1097234387261256315_i64),(-8772243817213674850_i64),6541986546259876770_i64,1033443416952888979_i64,(-4198198812065594314_i64)];
_21.fld0.fld1.2 = 2525924333_u32 | 60621221_u32;
_3.fld0 = [_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2];
_21.fld0.fld1.3 = 4_usize;
RET = [_19,_19,_19,_19,_19,_19];
_9 = [_11,_11,_11,_8,_8,_11];
_21.fld0.fld1.1 = !_21.fld0.fld1.0;
_18 = _4 as u16;
match _1 {
340282366920938463463374607431768189483 => bb11,
_ => bb8
}
}
bb11 = {
_9 = [_11,_8,_8,_8,_8,_11];
_21.fld0.fld1.4 = _13;
_3.fld1 = core::ptr::addr_of_mut!(_21.fld3);
_16 = core::ptr::addr_of_mut!(_21.fld0.fld1.5);
match _1 {
0 => bb4,
1 => bb12,
340282366920938463463374607431768189483 => bb14,
_ => bb13
}
}
bb12 = {
_1 = -(-17818_i16);
_3.fld0 = [2282865789_u32,3371156250_u32,3509079726_u32,2415969487_u32,2133555268_u32,3104236527_u32,3321658888_u32];
_1 = -(-1477_i16);
_3.fld0 = [286130558_u32,552547154_u32,1239439106_u32,1518640285_u32,1828840933_u32,2516775213_u32,3636276072_u32];
_4 = _6;
_5 = [_1,_1];
_4 = _6 << _6;
_7 = '\u{24358}' as u8;
RET = [_7,_7,_7,_7,_7,_7];
_6 = _4 + _4;
Goto(bb2)
}
bb13 = {
_3.fld0 = [3267966920_u32,2272318718_u32,313650397_u32,1642588601_u32,4000790004_u32,2893907689_u32,2705131535_u32];
RET = [_7,_7,_7,_7,_7,_7];
_2 = (-41_i8) as f32;
_1 = 18304_i16;
_7 = 238_u8 / 184_u8;
_6 = !_4;
_6 = false as isize;
_3.fld0 = [4106515565_u32,662561669_u32,2259784229_u32,1399518402_u32,1871716397_u32,248155519_u32,149017089_u32];
_3.fld0 = [1393086243_u32,3396436366_u32,3675638945_u32,3567603330_u32,3152868314_u32,3327662609_u32,815187645_u32];
_8 = true ^ false;
_6 = _4 | _4;
_3.fld0 = [1278154688_u32,884939167_u32,3940918049_u32,1153437751_u32,4065914572_u32,2143933700_u32,1319481454_u32];
_1 = -(-29833_i16);
RET = [_7,_7,_7,_7,_7,_7];
_4 = _6;
RET = [_7,_7,_7,_7,_7,_7];
_7 = 77_u8 << _6;
_11 = !_8;
_2 = _7 as f32;
_1 = 17114_i16;
RET = [_7,_7,_7,_7,_7,_7];
_10 = _6;
_9 = [_11,_8,_11,_11,_11,_8];
RET = [_7,_7,_7,_7,_7,_7];
_8 = _11;
_4 = _6 ^ _6;
RET = [_7,_7,_7,_7,_7,_7];
match _1 {
0 => bb3,
17114 => bb5,
_ => bb4
}
}
bb14 = {
_22.fld1 = core::ptr::addr_of_mut!(_21.fld3);
_15.1 = core::ptr::addr_of_mut!((*_16));
_22.fld0 = [_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2,_21.fld0.fld1.2];
(*_16) = 53_i8 << _4;
(*_16) = (-79_i8);
_8 = _11;
_11 = _8;
(*_16) = (-47_i8);
_6 = -_4;
_21.fld0.fld0 = [841896186_i32,(-1807260871_i32),(-562757135_i32)];
_21.fld0.fld2 = _18 as isize;
_24 = (-50240309320411328290370056742607282545_i128) as usize;
_2 = _17 as f32;
_6 = _13 as isize;
_15.1 = core::ptr::addr_of_mut!((*_16));
_21.fld0.fld1.0 = _21.fld0.fld1.1;
_22 = Adt50 { fld0: _3.fld0,fld1: _3.fld1 };
_21.fld1.fld0 = [(-3684583516395081344_i64),2445944826729292183_i64,5216483133950262841_i64,2978685229213275923_i64,(-1258847653429166931_i64),(-1139928419304664410_i64),160138593720164121_i64];
_21.fld0.fld1.5 = 114_i8 - (-84_i8);
_23 = [_1,_1,_1,_1];
RET = [_19,_7,_19,_19,_19,_19];
_13 = _15.0;
_5 = _14;
(*_16) = _21.fld0.fld1.2 as i8;
_21.fld0.fld1.3 = _24 * _24;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(17_usize, 12_usize, Move(_12), 1_usize, Move(_1), 13_usize, Move(_13), 18_usize, Move(_18)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(17_usize, 23_usize, Move(_23), 6_usize, Move(_6), 24_usize, Move(_24), 11_usize, Move(_11)), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: [i16; 2],mut _5: i16,mut _6: [u32; 7],mut _7: isize,mut _8: [u32; 7],mut _9: i16,mut _10: isize,mut _11: i16,mut _12: i16,mut _13: isize,mut _14: [u32; 7],mut _15: [i16; 2],mut _16: f32) -> isize {
mir! {
type RET = isize;
let _17: i64;
let _18: isize;
let _19: isize;
let _20: u128;
let _21: isize;
let _22: i8;
let _23: bool;
let _24: u16;
let _25: [i32; 3];
let _26: i8;
let _27: isize;
let _28: f64;
let _29: i32;
let _30: (isize,);
let _31: f32;
let _32: (u128, u128, u32, usize, char, i8);
let _33: (((isize,),), u8, u128);
let _34: usize;
let _35: Adt62;
let _36: [u32; 7];
let _37: f64;
let _38: ();
let _39: ();
{
_7 = _10 << _2;
_14 = [975612625_u32,2460299020_u32,302534716_u32,2553397858_u32,1112446460_u32,3968126440_u32,1282427657_u32];
_1 = _10;
_16 = 13990235757903272902_u64 as f32;
RET = _13;
_4 = _15;
_13 = (-47197523447832596905251113208494430795_i128) as isize;
_7 = 45653_u16 as isize;
RET = _2 & _2;
_12 = '\u{648b4}' as i16;
_9 = _5;
_4 = [_11,_5];
RET = _3 - _10;
_10 = _2;
_14 = [1179037581_u32,986740461_u32,2611660417_u32,1176866624_u32,1669586283_u32,1346776976_u32,3628335930_u32];
_6 = _8;
_8 = _6;
RET = _13 | _1;
_14 = _6;
RET = !_10;
_6 = _14;
_18 = !_10;
Goto(bb1)
}
bb1 = {
_4 = [_5,_5];
_16 = 1358193166_i32 as f32;
_19 = 1912285442_u32 as isize;
_18 = _2;
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463463374607431768192428 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_11 = _12 * _9;
_17 = 5514345160082314327_i64;
_19 = -_10;
_15 = [_11,_9];
_20 = 161434841076009128624018336767102229192_u128;
_1 = 63999_u16 as isize;
_22 = 59_i8;
_3 = true as isize;
_13 = _19;
_4 = _15;
_17 = '\u{4ab82}' as i64;
_19 = -_10;
_10 = -_13;
_3 = _18 ^ _13;
_21 = _13 << _3;
_2 = _18 >> _1;
_25 = [740085407_i32,(-1804484198_i32),32184788_i32];
_27 = -_1;
RET = -_13;
_20 = 78764783568939692676350451506067421335_u128 >> _21;
_28 = (-2087603875_i32) as f64;
_8 = [669204587_u32,1862558411_u32,220619209_u32,540487030_u32,56451417_u32,781752990_u32,1445423411_u32];
match _22 {
0 => bb3,
1 => bb2,
2 => bb7,
3 => bb8,
59 => bb10,
_ => bb9
}
}
bb7 = {
Return()
}
bb8 = {
_4 = [_5,_5];
_16 = 1358193166_i32 as f32;
_19 = 1912285442_u32 as isize;
_18 = _2;
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463463374607431768192428 => bb6,
_ => bb5
}
}
bb9 = {
Return()
}
bb10 = {
_8 = [2920647324_u32,445337110_u32,2214364601_u32,3996124780_u32,3675756059_u32,1378763866_u32,3398131542_u32];
_6 = [2093420313_u32,3991903989_u32,2129362026_u32,3768788539_u32,2807835718_u32,3470045945_u32,3980598583_u32];
_5 = 2436991288244462839_u64 as i16;
_28 = 3865009013_u32 as f64;
_30.0 = _2 ^ _27;
_8 = [2785824413_u32,727594252_u32,3047733412_u32,1377370503_u32,1553215954_u32,1379797920_u32,641761701_u32];
_13 = -_3;
_26 = 1132652661397643659_usize as i8;
_30 = (_19,);
_32.5 = true as i8;
_33.0 = (_30,);
_18 = _19;
match _9 {
0 => bb4,
1 => bb2,
2 => bb9,
3 => bb11,
340282366920938463463374607431768192428 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_1 = !_13;
_35.fld4.0 = (_30,);
_32.0 = _20;
RET = _2;
_5 = _12 ^ _12;
_35.fld4.0 = (_33.0.0,);
_35.fld0 = core::ptr::addr_of_mut!(_26);
_26 = _17 as i8;
_5 = !_11;
_35.fld3.fld3.0 = '\u{99e35}';
match _9 {
0 => bb5,
1 => bb11,
2 => bb12,
3 => bb4,
4 => bb14,
5 => bb15,
6 => bb16,
340282366920938463463374607431768192428 => bb18,
_ => bb17
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_8 = [2920647324_u32,445337110_u32,2214364601_u32,3996124780_u32,3675756059_u32,1378763866_u32,3398131542_u32];
_6 = [2093420313_u32,3991903989_u32,2129362026_u32,3768788539_u32,2807835718_u32,3470045945_u32,3980598583_u32];
_5 = 2436991288244462839_u64 as i16;
_28 = 3865009013_u32 as f64;
_30.0 = _2 ^ _27;
_8 = [2785824413_u32,727594252_u32,3047733412_u32,1377370503_u32,1553215954_u32,1379797920_u32,641761701_u32];
_13 = -_3;
_26 = 1132652661397643659_usize as i8;
_30 = (_19,);
_32.5 = true as i8;
_33.0 = (_30,);
_18 = _19;
match _9 {
0 => bb4,
1 => bb2,
2 => bb9,
3 => bb11,
340282366920938463463374607431768192428 => bb13,
_ => bb12
}
}
bb17 = {
Return()
}
bb18 = {
_35.fld5.0 = _21;
_35.fld3.fld3 = ('\u{cc99d}', _35.fld0);
_14 = [1273451270_u32,1171691793_u32,4045551196_u32,2693792353_u32,349779064_u32,1306331088_u32,522160473_u32];
_5 = _11;
_35.fld4 = (_33.0, 151_u8, _32.0);
_20 = _35.fld4.2 * _35.fld4.2;
_37 = _28;
Goto(bb19)
}
bb19 = {
Call(_38 = dump_var(18_usize, 5_usize, Move(_5), 18_usize, Move(_18), 30_usize, Move(_30), 12_usize, Move(_12)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_38 = dump_var(18_usize, 26_usize, Move(_26), 3_usize, Move(_3), 6_usize, Move(_6), 17_usize, Move(_17)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_38 = dump_var(18_usize, 9_usize, Move(_9), 1_usize, Move(_1), 4_usize, Move(_4), 27_usize, Move(_27)), bb22, UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: char,mut _2: i128,mut _3: [u32; 7],mut _4: char,mut _5: (isize,)) -> [i32; 8] {
mir! {
type RET = [i32; 8];
let _6: *mut i8;
let _7: *mut i8;
let _8: ([usize; 3], (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)), [u16; 5]);
let _9: i128;
let _10: i128;
let _11: ((isize,),);
let _12: i64;
let _13: f64;
let _14: *const (u128, u128, u32, usize, char, i8);
let _15: Adt58;
let _16: (char, *mut i8);
let _17: usize;
let _18: [u8; 6];
let _19: u64;
let _20: Adt55;
let _21: [usize; 3];
let _22: Adt62;
let _23: [i128; 4];
let _24: [u16; 5];
let _25: isize;
let _26: ();
let _27: ();
{
_2 = (-91817206247961653794750675186973583493_i128);
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
248465160672976809668623932244794627963 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_5 = (9223372036854775807_isize,);
RET = [1415605900_i32,(-2114062093_i32),(-1381975698_i32),(-1714474259_i32),(-1716691009_i32),674014797_i32,(-492105144_i32),682109359_i32];
RET = [69206304_i32,451472103_i32,(-510114193_i32),1517625104_i32,(-339126645_i32),1905451003_i32,275306736_i32,(-285251788_i32)];
_5 = (9223372036854775807_isize,);
_5 = (9223372036854775807_isize,);
RET = [1840695699_i32,1259577176_i32,(-46686529_i32),(-1663155366_i32),(-1750928912_i32),(-220603769_i32),(-1720827173_i32),1843325793_i32];
_1 = _4;
_1 = _4;
_5 = (9223372036854775807_isize,);
_4 = _1;
_4 = _1;
_2 = !(-29439521980073534550826214878723190344_i128);
_5 = ((-9223372036854775808_isize),);
_1 = _4;
_5 = ((-9223372036854775808_isize),);
_5.0 = 9223372036854775807_isize;
_2 = 34338767029416718473942032201499672313_i128 ^ (-157258101416082583149199161702433578026_i128);
_3 = [3226251361_u32,4001864525_u32,4004771430_u32,1861582273_u32,1928576758_u32,4059207490_u32,3683963708_u32];
_5.0 = (-41_isize);
RET = [(-225896204_i32),(-925346701_i32),1194598415_i32,(-661052562_i32),(-906877784_i32),767212881_i32,364114983_i32,(-1535250591_i32)];
_5 = ((-9223372036854775808_isize),);
_2 = 31168091352294264167742952415342351916_i128 & 53491183289313114412495817232912109597_i128;
match _5.0 {
0 => bb6,
1 => bb7,
2 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8.1.1.1 = 247_u8 as u128;
RET = [(-1778893668_i32),(-890424410_i32),132087516_i32,1100193706_i32,133040949_i32,2056189496_i32,(-846154857_i32),2018866542_i32];
_8.1.1.3 = 10167174843655934602_usize % 3051652277339048477_usize;
_8.1.1 = (137736600186007504701521117981462960027_u128, 253167596581576019888604701616996554920_u128, 3609631128_u32, 6_usize, _4, 56_i8);
_3 = [_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2];
_8.1.2.1 = 38_u8 + 4_u8;
_1 = _8.1.1.4;
_8.1.2.0.0.0 = -_5.0;
_8.1.2.0.0 = _5;
match _8.1.1.3 {
0 => bb5,
6 => bb11,
_ => bb4
}
}
bb11 = {
_12 = 606439808583757578_i64 | (-1303802012552421880_i64);
_13 = (-305319266_i32) as f64;
_6 = core::ptr::addr_of_mut!(_8.1.1.5);
_8.1.1.2 = !1293861305_u32;
Goto(bb12)
}
bb12 = {
_4 = _8.1.1.4;
_5 = (_8.1.2.0.0.0,);
(*_6) = 4_i8;
_15.fld1.1 = _12 as u128;
_16.1 = _6;
_5 = (_8.1.2.0.0.0,);
(*_6) = !106_i8;
_10 = _8.1.1.4 as i128;
_16 = (_4, _6);
_15.fld1.5 = _8.1.1.5;
_15.fld2 = _5.0 * _8.1.2.0.0.0;
_3 = [_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2,_8.1.1.2];
_18 = [_8.1.2.1,_8.1.2.1,_8.1.2.1,_8.1.2.1,_8.1.2.1,_8.1.2.1];
_15.fld1.2 = _4 as u32;
_11 = _8.1.2.0;
Goto(bb13)
}
bb13 = {
RET = [(-405545522_i32),(-1176034611_i32),(-1252424894_i32),(-634047311_i32),(-967580612_i32),(-1299903467_i32),220237494_i32,1730544876_i32];
_8.1.1.4 = _16.0;
_8.1.2.2 = !_8.1.1.0;
_8.1.2.1 = 104_u8 + 41_u8;
_20.fld2 = _13;
_17 = _4 as usize;
RET = [(-913164110_i32),1472495364_i32,683871784_i32,(-1094796037_i32),(-1372006615_i32),1882080841_i32,1811911055_i32,(-1734709799_i32)];
(*_6) = (-1880903678_i32) as i8;
_3 = [_15.fld1.2,_8.1.1.2,_15.fld1.2,_8.1.1.2,_15.fld1.2,_8.1.1.2,_15.fld1.2];
_4 = _8.1.1.4;
_22.fld4.0.0 = (_15.fld2,);
_14 = core::ptr::addr_of!(_8.1.1);
_21 = [(*_14).3,(*_14).3,(*_14).3];
_22.fld1.fld3.1 = core::ptr::addr_of!(_15.fld1.5);
_22.fld1.fld3.0 = [_8.1.1.5,(*_6),_8.1.1.5,(*_14).5];
_8.1.1.1 = _8.1.2.2 * _8.1.1.0;
_22.fld0 = _6;
_16 = (_1, _6);
_22.fld3.fld5 = [_8.1.1.3,(*_14).3,_17];
match (*_14).3 {
0 => bb12,
1 => bb2,
2 => bb3,
6 => bb14,
_ => bb9
}
}
bb14 = {
_22.fld4.2 = _8.1.1.2 as u128;
_15.fld1.3 = !_8.1.1.3;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(19_usize, 2_usize, Move(_2), 3_usize, Move(_3), 4_usize, Move(_4), 11_usize, Move(_11)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(19_usize, 21_usize, Move(_21), 27_usize, _27, 27_usize, _27, 27_usize, _27), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(false), std::hint::black_box(55_u8)));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: [i16; 2],
fld1: i128,
fld2: [u8; 6],
fld3: (char, *mut i8),
fld4: [u16; 5],
fld5: [usize; 3],
fld6: f32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt50 {
fld0: [u32; 7],
fld1: *mut [u16; 5],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: [i64; 7],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt52 {
fld0: *const (u128, u128, u32, usize, char, i8),
fld1: ((isize,),),
fld2: (*const i8,),
fld3: [i32; 8],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: usize,
fld1: *const i8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt54 {
fld0: [u32; 7],
fld1: [i64; 7],
fld2: [i8; 4],
fld3: ([i8; 4], *const i8, i8),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: [u32; 7],
fld1: [u32; 1],
fld2: f64,
fld3: u16,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: [i128; 4],
fld1: u32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt57 {
fld0: Adt53,
fld1: [u32; 1],
fld2: u128,
fld3: [i8; 4],
fld4: (char, *mut i8),
}
#[derive(Debug,Copy,Clone)]
pub struct Adt58 {
fld0: [i32; 3],
fld1: (u128, u128, u32, usize, char, i8),
fld2: isize,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: Adt57,
fld1: [i32; 8],
fld2: isize,
fld3: [u16; 5],
fld4: *mut i8,
fld5: Adt49,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt60 {
fld0: [i32; 8],
}
#[derive(Debug)]
pub struct Adt61 {
fld0: Adt58,
fld1: Adt51,
fld2: [i128; 4],
fld3: [u16; 5],
fld4: [i64; 7],
}
#[derive(Debug)]
pub struct Adt62 {
fld0: *mut i8,
fld1: Adt54,
fld2: i128,
fld3: Adt49,
fld4: (((isize,),), u8, u128),
fld5: (isize,),
fld6: f64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt63 {
fld0: [usize; 3],
fld1: [u32; 1],
fld2: Adt52,
fld3: f64,
fld4: i128,
fld5: (i16, (u128, u128, u32, usize, char, i8), (((isize,),), u8, u128)),
}
#[derive(Debug)]
pub struct Adt64 {
fld0: Adt56,
fld1: Adt58,
fld2: Adt63,
fld3: u64,
fld4: u16,
fld5: *mut (u128, u128, u32, usize, char, i8),
fld6: Adt53,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: (isize,),
fld1: [usize; 3],
fld2: ([i16; 2], isize, (isize,)),
}

