#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: u64,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: u128,mut _10: u16) -> f32 {
mir! {
type RET = f32;
let _11: ([i64; 7], i16, f64, [i64; 7], bool);
let _12: i32;
let _13: ([i64; 7], i16, f64, [i64; 7], bool);
let _14: isize;
let _15: Adt44;
let _16: ([i64; 7], i16, f64, [i64; 7], bool);
let _17: bool;
let _18: f64;
let _19: f32;
let _20: i128;
let _21: Adt56;
let _22: bool;
let _23: [u128; 3];
let _24: [u16; 3];
let _25: i32;
let _26: f64;
let _27: (([u128; 5], f64, i16), [u32; 6]);
let _28: isize;
let _29: i128;
let _30: Adt41;
let _31: f32;
let _32: isize;
let _33: (u8,);
let _34: u128;
let _35: ([u128; 5], *const u64);
let _36: Adt54;
let _37: isize;
let _38: Adt45;
let _39: i32;
let _40: char;
let _41: ();
let _42: ();
{
_8 = (-67502162826192070514899384156337897838_i128);
RET = (-3053119295591019090_i64) as f32;
_11.3 = [(-6594904005629126263_i64),(-2983660641431017084_i64),522340763465593780_i64,(-915411217133005263_i64),4661156070684905927_i64,7025881629121010975_i64,8887267955009970278_i64];
_3 = 147_u8 as u64;
_11.4 = RET <= RET;
_1 = _11.4 == _11.4;
_11.1 = _8 as i16;
_5 = !_11.1;
_8 = 144740837026390471866650237927484062496_i128 - 116304487388706473918904488204510816435_i128;
_12 = !623325987_i32;
_8 = -52602150279176126101457140145366928292_i128;
_11.1 = -_5;
_10 = !19108_u16;
_13.0 = _11.3;
RET = _12 as f32;
_13.4 = !_11.4;
Call(_10 = fn1(_11.4, _11.1, _11.3, _11.3, _11.4, _11.4, _13.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_11.2 = RET as f64;
RET = (-9223372036854775808_isize) as f32;
_16 = (_13.0, _5, _11.2, _11.3, _1);
_6 = -_12;
_13.2 = (-1716034766258680419_i64) as f64;
_13 = _16;
_11.1 = _5;
_11 = _16;
_13.0 = [(-1578076220020219061_i64),(-7718586247250527756_i64),(-2568761516886269749_i64),(-5551283170854023835_i64),7339648070722445306_i64,(-7281634475263403994_i64),8777661580002373940_i64];
_11 = _13;
_10 = 54496_u16;
_11.0 = [7944285015108478960_i64,6057659235007451286_i64,(-4405862639408281507_i64),(-7133780249220801004_i64),2394703992484548442_i64,(-5463917380241836011_i64),(-3364863961191692593_i64)];
_13.0 = _16.0;
_11.4 = !_16.4;
_6 = _13.4 as i32;
_16.3 = _11.0;
_7 = 2451880847_u32 as i64;
_11.0 = [_7,_7,_7,_7,_7,_7,_7];
_13.1 = _11.1 >> _5;
_18 = _16.2 - _16.2;
_14 = (-25_i8) as isize;
_14 = _10 as isize;
_2 = '\u{d60ce}';
match _10 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
54496 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_21.fld0 = _10;
_12 = -_6;
_10 = 94456626257395447919617651234108933994_u128 as u16;
_16.0 = _16.3;
_16.0 = _11.3;
_9 = !241543047028661731445086576916308579927_u128;
_16.2 = _11.2;
_17 = !_13.4;
_23 = [_9,_9,_9];
_7 = -(-9195364036786587073_i64);
Call(_20 = core::intrinsics::transmute(_9), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_17 = !_11.4;
_16.4 = _1 | _13.4;
_11.1 = _16.1 + _16.1;
_24 = [_10,_21.fld0,_21.fld0];
_11.1 = !_16.1;
_11.0 = _11.3;
_27.0.0 = [_9,_9,_9,_9,_9];
RET = _14 as f32;
_26 = _18;
_27.0.2 = _5 << _11.1;
_16 = _13;
_16.3 = [_7,_7,_7,_7,_7,_7,_7];
_11.0 = [_7,_7,_7,_7,_7,_7,_7];
_27.0.1 = _18;
_16.4 = !_11.4;
_22 = _13.4;
_9 = 18436949583486597228113274545850671418_u128 << _21.fld0;
_13 = _11;
_18 = _11.2 * _16.2;
_27.1 = [3047645898_u32,1699745567_u32,3988767099_u32,257024740_u32,3617903944_u32,850436003_u32];
_27.0.1 = -_18;
_20 = !_8;
_16.2 = -_27.0.1;
_27.0.1 = _18 * _16.2;
match _21.fld0 {
54496 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_13.2 = -_27.0.1;
_21.fld0 = !_10;
_3 = 4_usize as u64;
RET = _8 as f32;
_4 = RET as i8;
_13 = _11;
_11.0 = [_7,_7,_7,_7,_7,_7,_7];
_11 = _13;
_19 = RET * RET;
_31 = RET + _19;
_5 = _16.1;
_27.0.0 = [_9,_9,_9,_9,_9];
_16.4 = !_1;
_12 = _6;
_27.0.2 = _17 as i16;
_11.4 = _16.1 >= _16.1;
Goto(bb13)
}
bb13 = {
_29 = _10 as i128;
_13.1 = -_5;
_17 = !_16.4;
_30.fld0 = [_1,_11.4,_13.4,_11.4,_16.4,_1];
Call(_29 = core::intrinsics::bswap(_20), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_33.0 = !223_u8;
_16.2 = _18 - _26;
_4 = -1_i8;
_11.4 = !_22;
_25 = _6;
_16.4 = !_22;
_22 = _13.4 | _16.4;
_17 = _21.fld0 != _21.fld0;
_3 = !12059277827557559437_u64;
_37 = -_14;
_14 = _37;
_16.3 = [_7,_7,_7,_7,_7,_7,_7];
_33 = (41_u8,);
_27.0.2 = _5;
_26 = -_13.2;
_5 = _37 as i16;
_18 = _26 * _11.2;
_16.3 = [_7,_7,_7,_7,_7,_7,_7];
Goto(bb15)
}
bb15 = {
Call(_41 = dump_var(0_usize, 22_usize, Move(_22), 25_usize, Move(_25), 20_usize, Move(_20), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_41 = dump_var(0_usize, 33_usize, Move(_33), 29_usize, Move(_29), 4_usize, Move(_4), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(0_usize, 14_usize, Move(_14), 2_usize, Move(_2), 42_usize, _42, 42_usize, _42), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: bool,mut _2: i16,mut _3: [i64; 7],mut _4: [i64; 7],mut _5: bool,mut _6: bool,mut _7: [i64; 7]) -> u16 {
mir! {
type RET = u16;
let _8: char;
let _9: f64;
let _10: Adt46;
let _11: *mut ([i64; 6], (i32, &'static u64, i64, i16, char));
let _12: u16;
let _13: isize;
let _14: Adt49;
let _15: [isize; 4];
let _16: char;
let _17: Adt46;
let _18: char;
let _19: f64;
let _20: isize;
let _21: isize;
let _22: u32;
let _23: Adt43;
let _24: usize;
let _25: f32;
let _26: i32;
let _27: ([i64; 6], (i32, &'static u64, i64, i16, char));
let _28: (i128,);
let _29: Adt50;
let _30: [i64; 7];
let _31: (u8,);
let _32: Adt55;
let _33: i64;
let _34: f32;
let _35: Adt42;
let _36: [u16; 3];
let _37: [u16; 3];
let _38: [bool; 6];
let _39: [u128; 5];
let _40: [i64; 7];
let _41: isize;
let _42: usize;
let _43: ();
let _44: ();
{
RET = 33929_u16;
_8 = '\u{bee37}';
_6 = _8 < _8;
_2 = 2608558366_u32 as i16;
_8 = '\u{11dd}';
RET = (-71_i8) as u16;
_3 = [786784925633405346_i64,6031583419761959275_i64,4948928386314863997_i64,6357232790858067009_i64,4229088886845097941_i64,7321430434403953906_i64,6292517446054409505_i64];
RET = 46683_u16 >> _2;
RET = !30467_u16;
_1 = _5 ^ _5;
_6 = _5 > _1;
_9 = 9223372036854775807_isize as f64;
_3 = _4;
_1 = _5;
_5 = !_6;
_7 = [2136114130173425064_i64,(-4411873512857575963_i64),(-3231339747685026763_i64),(-3939336413947588897_i64),395949494523279079_i64,2320474916383195748_i64,(-8636271676326725321_i64)];
RET = 38665_u16;
_8 = '\u{8317f}';
RET = 39469_u16;
_6 = _5 & _5;
_4 = [(-6634247532129582616_i64),(-138265288894123708_i64),(-8963726607333310900_i64),3632076075798601432_i64,(-3385531600297532484_i64),4329345093098474688_i64,(-5031958902523197040_i64)];
_6 = !_1;
_2 = (-9851_i16);
_9 = _2 as f64;
Call(_9 = fn2(_3, _7, _5, _4, _2, RET, _4, _4, _3, _5, _1, _1, _5, _3, _7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _3;
_2 = 24106_i16;
_2 = (-8266_i16);
_2 = 6363_i16 | 23410_i16;
_5 = _2 != _2;
_2 = (-30522_i16);
_3 = [7144620040119075273_i64,5989337277739174365_i64,825576839814844066_i64,7821290956579890392_i64,4711762610973408618_i64,7694985345620190179_i64,7436341223226199286_i64];
_7 = _4;
_3 = [887385038271317603_i64,(-6050782887091058648_i64),(-2421724975834823313_i64),(-1214783127324813970_i64),(-5766512637765594323_i64),(-7509258454099054466_i64),8883186775056107462_i64];
_1 = !_6;
RET = _1 as u16;
_3 = _4;
_2 = 5177_i16 ^ (-1092_i16);
_6 = _5 <= _1;
_3 = [7009732834420780524_i64,1465918033979559373_i64,(-2045040334311906512_i64),9128046851633577587_i64,(-310276107072281299_i64),(-3246390810532426780_i64),(-2277128703176877082_i64)];
_1 = _6 & _5;
Goto(bb2)
}
bb2 = {
_7 = [7413560828300647524_i64,6141476994050420592_i64,8278993306327054431_i64,3890919477066730855_i64,7358653864596180082_i64,(-7131185657111680886_i64),857285477176435848_i64];
_12 = RET;
_8 = '\u{404cd}';
Goto(bb3)
}
bb3 = {
RET = !_12;
_4 = [(-5473135730378996038_i64),(-6923416320091673394_i64),7209579670568246105_i64,3568817033172711695_i64,(-8285494498990523519_i64),(-118269952312772400_i64),(-3660631147763522586_i64)];
_7 = [7398122174072748824_i64,(-356721257274389586_i64),8993931768549587317_i64,(-547700092449524835_i64),89776657480332393_i64,(-4666835524609505482_i64),(-1193926588928202428_i64)];
Goto(bb4)
}
bb4 = {
_1 = _6;
_13 = !(-20_isize);
_15 = [_13,_13,_13,_13];
_15 = [_13,_13,_13,_13];
_6 = _1;
RET = 90_i8 as u16;
_3 = [(-6857529176925208940_i64),(-8856380184941763834_i64),5866481124323490983_i64,(-5777837694901228824_i64),4153488420942119741_i64,(-3728477664651764355_i64),(-8187870190397191151_i64)];
_9 = 8427954014412001925_i64 as f64;
_6 = !_1;
_8 = '\u{3e4c7}';
_16 = _8;
_8 = _16;
Goto(bb5)
}
bb5 = {
RET = _12;
_13 = 9223372036854775807_isize << RET;
_5 = _1 | _1;
_15 = [_13,_13,_13,_13];
RET = !_12;
_1 = _5;
_16 = _8;
_7 = [(-3272315091831676832_i64),1992442227576054781_i64,(-1218302983649839356_i64),(-4145950646536548751_i64),1406680420604013123_i64,4275437862917709609_i64,(-353416347864854402_i64)];
_18 = _8;
_5 = _6;
_8 = _18;
_8 = _18;
RET = _18 as u16;
_15 = [_13,_13,_13,_13];
_4 = _3;
_2 = 122_i8 as i16;
_15 = [_13,_13,_13,_13];
Goto(bb6)
}
bb6 = {
_7 = [(-2904290646115839987_i64),6543550285382764788_i64,(-2185333344513922141_i64),3434563910091344448_i64,7060964595125061774_i64,4003602062685730803_i64,8218432528648106776_i64];
_3 = _7;
_6 = _1;
_2 = -(-17541_i16);
_13 = 9223372036854775807_isize;
_2 = 540501158_i32 as i16;
_13 = (-10_isize) >> _12;
_19 = 48399940673258290764086422280003541782_i128 as f64;
_8 = _18;
_20 = _13;
_4 = [6841610102093718338_i64,(-9010563390496308180_i64),3817201986813226652_i64,7466846094152195967_i64,(-5605842547989607747_i64),4488438384902764114_i64,(-822277722307132714_i64)];
_7 = [(-3240132742380107506_i64),5329600102983710953_i64,2395895850951329058_i64,4350506617064953388_i64,(-2653678758491269507_i64),5687498027252555051_i64,(-4364435996148473823_i64)];
_1 = !_6;
_16 = _8;
Goto(bb7)
}
bb7 = {
_4 = _7;
_4 = _7;
_15 = [_13,_20,_13,_20];
_15 = [_20,_13,_20,_13];
_18 = _16;
_9 = -_19;
_9 = 289483952689093871016469107250034063191_u128 as f64;
RET = 117_u8 as u16;
_7 = [(-608001189192669135_i64),5229700269379754743_i64,507164783200364630_i64,4295396604531957078_i64,(-2107381741114642851_i64),(-921008467717946078_i64),6016573130312735707_i64];
_12 = RET;
_12 = 9210703118193549454_i64 as u16;
_18 = _8;
_8 = _18;
_7 = [(-5723728514736605525_i64),6998159071404101104_i64,81801445631267903_i64,(-6089550637093935686_i64),(-910448301769229601_i64),4198830596104797117_i64,(-4428247575714429091_i64)];
_7 = [(-1718912206638931371_i64),(-2622849536916941794_i64),(-922050870446115246_i64),(-7361634480728499561_i64),5769739855645267538_i64,6924681531524122535_i64,(-1598409313068319499_i64)];
_6 = _1;
RET = _12;
_21 = _12 as isize;
_4 = [2394960912339319764_i64,74712015397046274_i64,1053996212596699960_i64,6190029101047178513_i64,(-8752398198255494113_i64),4615152853002976907_i64,(-2692882051222715985_i64)];
_24 = !744552819212218685_usize;
_22 = 3865742748_u32;
_1 = _6;
_11 = core::ptr::addr_of_mut!(_27);
_26 = (-295277256_i32) * 958760926_i32;
_27.0 = [(-1232404204048281685_i64),(-8906255846119612658_i64),7687418785951098165_i64,6144558757975606265_i64,8957623043557882234_i64,(-1970010251147615679_i64)];
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
3865742748 => bb9,
_ => bb8
}
}
bb8 = {
_1 = _6;
_13 = !(-20_isize);
_15 = [_13,_13,_13,_13];
_15 = [_13,_13,_13,_13];
_6 = _1;
RET = 90_i8 as u16;
_3 = [(-6857529176925208940_i64),(-8856380184941763834_i64),5866481124323490983_i64,(-5777837694901228824_i64),4153488420942119741_i64,(-3728477664651764355_i64),(-8187870190397191151_i64)];
_9 = 8427954014412001925_i64 as f64;
_6 = !_1;
_8 = '\u{3e4c7}';
_16 = _8;
_8 = _16;
Goto(bb5)
}
bb9 = {
_25 = (-7842251209669059108_i64) as f32;
_27.1.2 = (-8513102822546328259_i64) | (-4288948642459600549_i64);
_29.fld4 = _27.1.2 << _2;
Goto(bb10)
}
bb10 = {
_13 = _20;
_12 = !RET;
_28.0 = !(-160306234707481011525745037870603727886_i128);
_20 = _22 as isize;
_15 = [_13,_13,_13,_13];
_29.fld1 = Adt46::Variant0 { fld0: _27.0 };
_30 = _3;
_27.1.4 = _18;
_29.fld0 = Adt43::Variant2 { fld0: _28 };
_19 = -_9;
RET = Field::<(i128,)>(Variant(_29.fld0, 2), 0).0 as u16;
_29.fld1 = Adt46::Variant0 { fld0: _27.0 };
_2 = -12156_i16;
_7 = [_29.fld4,(*_11).1.2,(*_11).1.2,(*_11).1.2,_29.fld4,_29.fld4,_29.fld4];
_31.0 = !93_u8;
Goto(bb11)
}
bb11 = {
_28.0 = Field::<(i128,)>(Variant(_29.fld0, 2), 0).0 | Field::<(i128,)>(Variant(_29.fld0, 2), 0).0;
_29.fld4 = _27.1.2;
_22 = Field::<(i128,)>(Variant(_29.fld0, 2), 0).0 as u32;
_29.fld2 = -_19;
_29.fld3.0 = [79118596952826480526426822312035486061_u128,214130297994673988018089871546934181954_u128,314334764873375051904616764605083292418_u128,45227530802502551368267172927613862639_u128,226928337519659096672001920965146765019_u128];
_29.fld3.0 = [35944369720905821475632006792923115677_u128,94872106920095129087223440390987738402_u128,305804803062561103294296568336265050321_u128,146835354133178337528932849356429071614_u128,11921016175827821128790256444181023049_u128];
_12 = RET << _28.0;
_17 = Adt46::Variant0 { fld0: Field::<[i64; 6]>(Variant(_29.fld1, 0), 0) };
_31 = (202_u8,);
_34 = 291858357031822953360398121683937192841_u128 as f32;
_10 = Adt46::Variant1 { fld0: _29.fld3.0 };
_6 = _1;
_27.1.4 = _8;
_8 = _27.1.4;
_3 = [(*_11).1.2,(*_11).1.2,_27.1.2,(*_11).1.2,_29.fld4,_27.1.2,_27.1.2];
_29.fld1 = Move(_10);
_8 = _16;
_10 = Adt46::Variant0 { fld0: (*_11).0 };
_12 = !RET;
_10 = Adt46::Variant0 { fld0: Field::<[i64; 6]>(Variant(_17, 0), 0) };
match _31.0 {
0 => bb7,
1 => bb10,
202 => bb13,
_ => bb12
}
}
bb12 = {
RET = _12;
_13 = 9223372036854775807_isize << RET;
_5 = _1 | _1;
_15 = [_13,_13,_13,_13];
RET = !_12;
_1 = _5;
_16 = _8;
_7 = [(-3272315091831676832_i64),1992442227576054781_i64,(-1218302983649839356_i64),(-4145950646536548751_i64),1406680420604013123_i64,4275437862917709609_i64,(-353416347864854402_i64)];
_18 = _8;
_5 = _6;
_8 = _18;
_8 = _18;
RET = _18 as u16;
_15 = [_13,_13,_13,_13];
_4 = _3;
_2 = 122_i8 as i16;
_15 = [_13,_13,_13,_13];
Goto(bb6)
}
bb13 = {
_31.0 = 67_u8 - 224_u8;
Call(_36 = fn16(_1, _29.fld3.0, _29.fld0, _26, Field::<[i64; 6]>(Variant(_10, 0), 0), Field::<[i64; 6]>(Variant(_17, 0), 0), Field::<[i64; 6]>(Variant(_17, 0), 0), Field::<[i64; 6]>(Variant(_10, 0), 0), _31, _25, _29.fld3.0, _26, _1, _13, _1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_28 = Field::<(i128,)>(Variant(_29.fld0, 2), 0);
_31 = (38_u8,);
_28 = (Field::<(i128,)>(Variant(_29.fld0, 2), 0).0,);
_27.1.3 = _2 >> (*_11).1.2;
_23 = _29.fld0;
_21 = _13 + _13;
_33 = _6 as i64;
_4 = [_33,_33,_29.fld4,_33,_33,_29.fld4,_33];
_31.0 = _22 as u8;
_16 = _18;
_27.1.4 = _16;
_30 = _4;
_27.0 = [_33,(*_11).1.2,_33,_27.1.2,_33,_33];
_7 = _4;
_17 = Move(_29.fld1);
_34 = -_25;
_2 = -(*_11).1.3;
_8 = _18;
SetDiscriminant(_10, 1);
_41 = -_21;
place!(Field::<[u128; 5]>(Variant(_10, 1), 0)) = _29.fld3.0;
_11 = core::ptr::addr_of_mut!((*_11));
_19 = _9;
_4 = [_33,_27.1.2,(*_11).1.2,_33,_27.1.2,_33,_33];
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(1_usize, 26_usize, Move(_26), 18_usize, Move(_18), 6_usize, Move(_6), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(1_usize, 2_usize, Move(_2), 31_usize, Move(_31), 28_usize, Move(_28), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(1_usize, 36_usize, Move(_36), 8_usize, Move(_8), 7_usize, Move(_7), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [i64; 7],mut _2: [i64; 7],mut _3: bool,mut _4: [i64; 7],mut _5: i16,mut _6: u16,mut _7: [i64; 7],mut _8: [i64; 7],mut _9: [i64; 7],mut _10: bool,mut _11: bool,mut _12: bool,mut _13: bool,mut _14: [i64; 7],mut _15: [i64; 7]) -> f64 {
mir! {
type RET = f64;
let _16: isize;
let _17: [u128; 3];
let _18: [u32; 2];
let _19: i8;
let _20: (u8,);
let _21: Adt47;
let _22: [i64; 6];
let _23: f32;
let _24: *const u64;
let _25: (i128,);
let _26: Adt54;
let _27: Adt46;
let _28: (([u128; 5], f64, i16), [u32; 6]);
let _29: f64;
let _30: f32;
let _31: char;
let _32: u32;
let _33: f32;
let _34: (i128,);
let _35: Adt48;
let _36: u64;
let _37: ();
let _38: ();
{
_2 = [(-6112587693509858552_i64),6426760627851384846_i64,8361189197838920735_i64,3582408854252947385_i64,(-8982830018409640886_i64),(-321407381535008233_i64),2001707377965702515_i64];
_12 = _3;
_1 = [(-4651909337177270699_i64),(-7848745612674126570_i64),(-7432757713230138650_i64),(-143380930713578624_i64),4049453182696363299_i64,5828424136375671134_i64,3526235588136777098_i64];
_2 = _1;
_11 = _3 <= _3;
_7 = [(-5740590540942593730_i64),(-7457621735233131500_i64),(-4510230219863068493_i64),6689277020284908647_i64,(-8915329934265185953_i64),4643171339569675216_i64,(-8824840174491836729_i64)];
_6 = !38_u16;
_11 = _13 != _3;
_15 = _7;
_17 = [286409522422618304259974797407130809903_u128,169328234150590795615094852511658208016_u128,237372778370522944225578365346886750354_u128];
_3 = _10 > _13;
_12 = !_3;
_19 = (-56_i8);
_7 = [(-8882929932985356764_i64),2073522260265638580_i64,(-9010100521644251299_i64),6280989028596842091_i64,(-5374963151602288262_i64),(-3433736872280889553_i64),(-67558489609939553_i64)];
RET = (-9223372036854775808_isize) as f64;
_14 = [1698417548567742853_i64,(-7263433016576087067_i64),4001846317516191957_i64,(-6981255397520234740_i64),(-6631101637893518730_i64),(-5489399905495566186_i64),3637660259974263237_i64];
RET = 42965337_u32 as f64;
match _5 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768201605 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_11 = !_10;
_12 = !_11;
_5 = '\u{2986}' as i16;
_20 = (196_u8,);
_2 = _7;
_3 = _5 < _5;
_16 = _20.0 as isize;
_20 = (233_u8,);
_18 = [887362474_u32,4157094723_u32];
_5 = -6750_i16;
match _19 {
0 => bb1,
340282366920938463463374607431768211400 => bb5,
_ => bb3
}
}
bb5 = {
_11 = _13 != _10;
_10 = _11 != _3;
_16 = 9223372036854775807_isize;
_8 = [(-8234674003825844833_i64),7066108947192194917_i64,3126313082606704026_i64,8067322807436454901_i64,5643834534229852098_i64,8720600672466983243_i64,7426611794371413090_i64];
_2 = [4608087902195589137_i64,(-5978155576874292246_i64),(-6297417762456764717_i64),2463108186000164922_i64,4740846915458319725_i64,(-2464090350355833879_i64),5106635142180444657_i64];
_10 = _3 ^ _12;
_11 = _13 ^ _13;
_3 = _11 <= _11;
_12 = _11;
_5 = 15120_i16;
_12 = _3;
_17 = [97828599706654172468264723260973008800_u128,151640577504006833479223844418827189979_u128,201138219508576401300274786588010074801_u128];
_3 = _13 == _12;
_15 = [6560934330661547021_i64,3795045016797892654_i64,116689724313078389_i64,(-5761667446185678033_i64),(-6344007945799624980_i64),1517700240819787851_i64,7217739015598403125_i64];
_16 = 9223372036854775807_isize;
_10 = _3 < _12;
_6 = !6388_u16;
_11 = !_10;
_12 = _10;
_16 = 18193857173406772755_u64 as isize;
_17 = [236057262523163419848125431648568371100_u128,258110615498074280503272835984829565459_u128,74561083426548627737344219193193196676_u128];
_3 = _11 & _10;
_15 = _8;
_15 = _4;
_9 = _7;
_5 = 14213_i16 >> _19;
_4 = _9;
_16 = 8925628914992318093_usize as isize;
Call(_17 = fn3(_8, _3, _10, _12, _10, _3, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_11 = _3 | _3;
_6 = 1528_u16 + 40200_u16;
_5 = 4164547277_u32 as i16;
_11 = _10;
_20.0 = !109_u8;
_17 = [142810168025562159822982248635962535515_u128,222204340621763482256504322425546664023_u128,114156973149498687866967645613647862714_u128];
_2 = [(-2420545741475864557_i64),(-2683466336342720557_i64),8231555177954989855_i64,(-1248348912035703368_i64),3739987373626010435_i64,2083577553606923127_i64,8224610141858000712_i64];
_21 = Adt47::Variant2 { fld0: _20 };
RET = 283657082972485035723659283550658117178_u128 as f64;
_14 = [8430658705573051919_i64,6702658743720497725_i64,(-3501750537977636391_i64),(-5908119644923463185_i64),(-6049387564637420503_i64),6128997426085873891_i64,(-2048429592409523012_i64)];
_14 = _2;
_17 = [184108871939097990201655523680499336029_u128,11565830820314449846709731096005011538_u128,331358197024645113946437437316233117596_u128];
_10 = _11 ^ _3;
_12 = _10;
_22 = [(-6679500926767796134_i64),(-1676999670792242714_i64),(-7596270557972613781_i64),2387106702838653904_i64,796182469644190571_i64,(-5160423482579143660_i64)];
_6 = 10629_u16 | 22130_u16;
_1 = _2;
SetDiscriminant(_21, 0);
match _19 {
0 => bb1,
340282366920938463463374607431768211400 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_20.0 = !139_u8;
_25 = (120715704679402534917461365543548482259_i128,);
_13 = _3;
_25.0 = (-107738504697025694161924617123142258546_i128) + 133560027405628935620125211368568330914_i128;
_4 = [2580481152263708781_i64,(-1359542876857741562_i64),8730849092907599867_i64,(-903989897274299790_i64),(-5890434584242481684_i64),(-6097847804459642894_i64),3217283192932263614_i64];
_23 = _19 as f32;
place!(Field::<char>(Variant(_21, 0), 1)) = '\u{ec76e}';
_8 = _7;
match _19 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463463374607431768211400 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_27 = Adt46::Variant0 { fld0: _22 };
_1 = [(-3025117928649478150_i64),5533210175986692355_i64,(-2544202019502543000_i64),(-6925166604893355896_i64),(-6014607978340037948_i64),3671122657495688406_i64,257986675685186339_i64];
RET = _20.0 as f64;
RET = 3_usize as f64;
SetDiscriminant(_27, 1);
_28.0.1 = RET - RET;
place!(Field::<Adt41>(Variant(_21, 0), 4)).fld0 = [_10,_13,_12,_10,_10,_12];
_28.1 = [2306096500_u32,19840557_u32,373430537_u32,266199331_u32,1435489444_u32,2306759069_u32];
_1 = [(-713259547722056869_i64),3322829045370225627_i64,8191175207497949955_i64,(-8672829231294052731_i64),(-6931970276416447685_i64),(-7203337685464824246_i64),7410154563662158305_i64];
Call(_13 = fn15(Field::<Adt41>(Variant(_21, 0), 4), Field::<Adt41>(Variant(_21, 0), 4), _3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
place!(Field::<u128>(Variant(_21, 0), 7)) = _25.0 as u128;
_14 = [3356715322273915007_i64,(-9174581301224214990_i64),(-8199323853458426648_i64),(-5015696180187405309_i64),2587726964426959830_i64,(-3168432999172560256_i64),(-2420288125913368859_i64)];
place!(Field::<i64>(Variant(_21, 0), 6)) = 1956759040719598459_i64;
place!(Field::<(u8,)>(Variant(_21, 0), 0)).0 = Field::<u128>(Variant(_21, 0), 7) as u8;
_20 = Field::<(u8,)>(Variant(_21, 0), 0);
RET = -_28.0.1;
_18 = [3828317258_u32,2030755403_u32];
_15 = [Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6)];
place!(Field::<(i16, u8)>(Variant(_21, 0), 3)) = (_5, Field::<(u8,)>(Variant(_21, 0), 0).0);
_28.1 = [975479763_u32,297772916_u32,1858405811_u32,1007924207_u32,3812747531_u32,2460274473_u32];
Goto(bb12)
}
bb12 = {
_19 = (-39_i8) | 95_i8;
_1 = [Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6)];
_25 = (47397607257624233210788159287720056690_i128,);
place!(Field::<[i64; 6]>(Variant(_21, 0), 5)) = [Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6)];
place!(Field::<char>(Variant(_21, 0), 1)) = '\u{eb9}';
_8 = [Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6)];
_29 = (-274701800_i32) as f64;
_10 = _13 == _12;
_30 = 17390002548992557601_u64 as f32;
_22 = Field::<[i64; 6]>(Variant(_21, 0), 5);
_30 = -_23;
_30 = -_23;
place!(Field::<[u128; 5]>(Variant(_27, 1), 0)) = [Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7)];
place!(Field::<[i64; 7]>(Variant(_21, 0), 2)) = _7;
place!(Field::<(i16, u8)>(Variant(_21, 0), 3)) = (_5, Field::<(u8,)>(Variant(_21, 0), 0).0);
place!(Field::<(i16, u8)>(Variant(_21, 0), 3)).0 = Field::<u128>(Variant(_21, 0), 7) as i16;
_28.1 = [2993554405_u32,2052219834_u32,2811893936_u32,2880627082_u32,1003241054_u32,1049951900_u32];
Goto(bb13)
}
bb13 = {
_28.0.1 = RET;
_32 = !440188701_u32;
Goto(bb14)
}
bb14 = {
place!(Field::<[u128; 5]>(Variant(_27, 1), 0)) = [Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7),Field::<u128>(Variant(_21, 0), 7)];
place!(Field::<(u8,)>(Variant(_21, 0), 0)) = _20;
_25 = ((-110038142420334265548732062265652922112_i128),);
_1 = [Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6)];
_29 = RET - _28.0.1;
_31 = Field::<char>(Variant(_21, 0), 1);
place!(Field::<(i16, u8)>(Variant(_21, 0), 3)).0 = _5 ^ _5;
_33 = _30 + _23;
_15 = [Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6),Field::<i64>(Variant(_21, 0), 6)];
RET = -_29;
_34 = _25;
_32 = !229416038_u32;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(2_usize, 7_usize, Move(_7), 31_usize, Move(_31), 25_usize, Move(_25), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(2_usize, 14_usize, Move(_14), 2_usize, Move(_2), 5_usize, Move(_5), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(2_usize, 10_usize, Move(_10), 3_usize, Move(_3), 11_usize, Move(_11), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i64; 7],mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _8: isize;
let _9: [u128; 3];
let _10: Adt52;
let _11: (([u128; 5], f64, i16), [u32; 6]);
let _12: f64;
let _13: char;
let _14: (i32, &'static u64, i64, i16, char);
let _15: char;
let _16: [usize; 8];
let _17: u64;
let _18: Adt50;
let _19: (u8,);
let _20: usize;
let _21: (i16, u8);
let _22: [i64; 7];
let _23: f64;
let _24: (i32, &'static u64, i64, i16, char);
let _25: f64;
let _26: ();
let _27: ();
{
RET = [97708601403845596473777299955997683437_u128,164692745406098658948637122908534104718_u128,217231011713527071635953869306164986760_u128];
_7 = _2 > _5;
_2 = _6;
_5 = !_6;
_3 = _6;
_6 = !_5;
_6 = !_2;
RET = [189775484843511815768227005416146163653_u128,150199114410712827368600370060012842569_u128,265972306377528668726460153082069357075_u128];
_8 = '\u{443ab}' as isize;
_6 = _2 < _3;
_2 = !_7;
_7 = _3;
_2 = _5;
_7 = !_2;
_5 = _2 <= _3;
_4 = !_3;
_9 = [276044787392189270566907609357570283167_u128,320693682440010322464884435673908385804_u128,223339524473574283712833438964368475397_u128];
_4 = _2 != _6;
_3 = !_2;
_5 = !_2;
RET = _9;
_7 = _4 > _5;
_6 = !_4;
Goto(bb1)
}
bb1 = {
RET = [64492340161516586625985813856906283061_u128,185003828810062315895209663645661108859_u128,337437545352701599674554405348625280969_u128];
RET = _9;
Goto(bb2)
}
bb2 = {
_7 = _4 > _5;
_7 = _3;
_4 = _2 >= _3;
_7 = !_3;
_2 = _5 & _3;
RET = [276374914474413894719900051115372522341_u128,59382997059101823165003087021600806204_u128,42891138796658647292068181489235593560_u128];
_4 = !_5;
_6 = _4 & _3;
_6 = _5 >= _5;
RET = _9;
RET = [128432570447027923167088208653085254024_u128,46678492631410197832648988661259800021_u128,44355791790266931599206941924307544100_u128];
RET = [210194446404399497210515436581460991697_u128,130050357406791989900141782633951367295_u128,247816931939594109289006860451255243950_u128];
Call(RET = fn4(_4, _2, _3, _3, _2, _5, _6, _4, _6, _4, _4, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = _3;
_2 = _7;
_9 = [278176417684662050896237115025853155179_u128,58441320934215979173995201608118880680_u128,186274549491532418236381325392336238493_u128];
RET = [9283258481473169990323642001533982489_u128,124456779282686750118632962465588124992_u128,126036990483488789224572801586259092444_u128];
_3 = _4 <= _4;
_9 = [280429579316716905959028028972275343361_u128,224798431779724897418584172529464132962_u128,132051889769112424549935841962723287950_u128];
_7 = !_3;
_8 = 91_isize;
RET = [129594910340012014359208306024769209055_u128,54031338959520634894940023074271526436_u128,312564501888896522269445270462042213502_u128];
RET = _9;
_7 = _6 != _5;
RET = _9;
_4 = _2 | _6;
_7 = _2;
_5 = !_2;
_5 = !_4;
_8 = _5 as isize;
_1 = [7215816426677001329_i64,2178972399462126571_i64,6401923951229601798_i64,9056754660059012886_i64,(-5009188894160931448_i64),(-5017184120923678894_i64),(-2089895451296932254_i64)];
_3 = !_6;
_8 = (-104_isize);
_1 = [(-6120217893441254469_i64),(-7832751107234041177_i64),(-7628108369666675028_i64),(-1723041056409330_i64),1852636393881876428_i64,(-603605372068348971_i64),(-3740392682870898776_i64)];
Call(_7 = fn13(_6, _2, _3, _6, _8, _6, _6, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = RET;
_4 = !_7;
_3 = _2;
_5 = _3 >= _2;
_5 = _6;
_9 = RET;
RET = [200431468711136941471871305511869915153_u128,191934043807195739312377784185638223407_u128,190727998152710055329875757494259445927_u128];
_5 = _2 >= _4;
_4 = _5;
_4 = _5 ^ _2;
_2 = !_7;
_6 = _7 > _4;
_11.0.0 = [54720596819921954605102519140409308461_u128,201238033919762440211371735110696447578_u128,295980866751300137342729999735980793895_u128,186713956924524133649828702035317305563_u128,310846414477880440769279749313329018426_u128];
_7 = !_6;
RET = _9;
RET = [335232378318770099880991142219666814267_u128,6606364663106069294760168244611511605_u128,22987963107864179719865878244425503416_u128];
_11.1 = [3538716946_u32,3346018893_u32,2545221047_u32,3868483375_u32,3474524743_u32,1746895886_u32];
_5 = _4 < _7;
_11.0.2 = !(-7593_i16);
_3 = !_4;
Goto(bb5)
}
bb5 = {
_8 = 9223372036854775807_isize;
_2 = _4 < _4;
match _8 {
0 => bb1,
1 => bb4,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb6 = {
_9 = RET;
_4 = !_7;
_3 = _2;
_5 = _3 >= _2;
_5 = _6;
_9 = RET;
RET = [200431468711136941471871305511869915153_u128,191934043807195739312377784185638223407_u128,190727998152710055329875757494259445927_u128];
_5 = _2 >= _4;
_4 = _5;
_4 = _5 ^ _2;
_2 = !_7;
_6 = _7 > _4;
_11.0.0 = [54720596819921954605102519140409308461_u128,201238033919762440211371735110696447578_u128,295980866751300137342729999735980793895_u128,186713956924524133649828702035317305563_u128,310846414477880440769279749313329018426_u128];
_7 = !_6;
RET = _9;
RET = [335232378318770099880991142219666814267_u128,6606364663106069294760168244611511605_u128,22987963107864179719865878244425503416_u128];
_11.1 = [3538716946_u32,3346018893_u32,2545221047_u32,3868483375_u32,3474524743_u32,1746895886_u32];
_5 = _4 < _7;
_11.0.2 = !(-7593_i16);
_3 = !_4;
Goto(bb5)
}
bb7 = {
_6 = _3;
_2 = _7;
_9 = [278176417684662050896237115025853155179_u128,58441320934215979173995201608118880680_u128,186274549491532418236381325392336238493_u128];
RET = [9283258481473169990323642001533982489_u128,124456779282686750118632962465588124992_u128,126036990483488789224572801586259092444_u128];
_3 = _4 <= _4;
_9 = [280429579316716905959028028972275343361_u128,224798431779724897418584172529464132962_u128,132051889769112424549935841962723287950_u128];
_7 = !_3;
_8 = 91_isize;
RET = [129594910340012014359208306024769209055_u128,54031338959520634894940023074271526436_u128,312564501888896522269445270462042213502_u128];
RET = _9;
_7 = _6 != _5;
RET = _9;
_4 = _2 | _6;
_7 = _2;
_5 = !_2;
_5 = !_4;
_8 = _5 as isize;
_1 = [7215816426677001329_i64,2178972399462126571_i64,6401923951229601798_i64,9056754660059012886_i64,(-5009188894160931448_i64),(-5017184120923678894_i64),(-2089895451296932254_i64)];
_3 = !_6;
_8 = (-104_isize);
_1 = [(-6120217893441254469_i64),(-7832751107234041177_i64),(-7628108369666675028_i64),(-1723041056409330_i64),1852636393881876428_i64,(-603605372068348971_i64),(-3740392682870898776_i64)];
Call(_7 = fn13(_6, _2, _3, _6, _8, _6, _6, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_7 = _4 > _5;
_7 = _3;
_4 = _2 >= _3;
_7 = !_3;
_2 = _5 & _3;
RET = [276374914474413894719900051115372522341_u128,59382997059101823165003087021600806204_u128,42891138796658647292068181489235593560_u128];
_4 = !_5;
_6 = _4 & _3;
_6 = _5 >= _5;
RET = _9;
RET = [128432570447027923167088208653085254024_u128,46678492631410197832648988661259800021_u128,44355791790266931599206941924307544100_u128];
RET = [210194446404399497210515436581460991697_u128,130050357406791989900141782633951367295_u128,247816931939594109289006860451255243950_u128];
Call(RET = fn4(_4, _2, _3, _3, _2, _5, _6, _4, _6, _4, _4, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
RET = [64492340161516586625985813856906283061_u128,185003828810062315895209663645661108859_u128,337437545352701599674554405348625280969_u128];
RET = _9;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET = _9;
_9 = [40041763562445337953100623284732987101_u128,128570050003010775210521916546395893464_u128,166463353875256076648497854525920780694_u128];
_7 = _4;
RET = [131760340103026404142373746033217802951_u128,106787698683650891933634486253705684405_u128,71769483097260926682886393878992868914_u128];
_11.1 = [2538368817_u32,455523127_u32,2263640665_u32,2583073720_u32,1698730386_u32,1588879114_u32];
_9 = [234564757244924679759479464150617879923_u128,89846638982977725600265228686008676500_u128,276322380254271236888167205628528162481_u128];
_12 = _11.0.2 as f64;
_11.1 = [3911203666_u32,835436558_u32,965720291_u32,2396692750_u32,1639596104_u32,2277904623_u32];
_4 = !_3;
_8 = 54_u8 as isize;
_11.1 = [883427677_u32,1145545427_u32,1497178278_u32,2614844875_u32,565856784_u32,2564254340_u32];
_5 = _4 & _3;
_1 = [(-4063272740037854065_i64),(-5796668894691058779_i64),(-7585312690987496519_i64),5098294177541931286_i64,5066078749524390420_i64,3686321518704182892_i64,(-8159610210495191589_i64)];
_11.1 = [927469475_u32,4259077173_u32,894955818_u32,738950435_u32,1890027251_u32,1025127696_u32];
_5 = _6 ^ _6;
_12 = (-153605851_i32) as f64;
_6 = !_4;
_11.0.2 = (-5435_i16);
_5 = _6;
_8 = (-9223372036854775808_isize);
_13 = '\u{102d3}';
_11.0.2 = 3579867026543620482_u64 as i16;
RET = [46306262083456116623957065683714998703_u128,300153280740565440237749860358092525065_u128,146182691169980381465612988732810154272_u128];
RET = [335348856774300914428294662910872154322_u128,12785509700498562047175551549153280963_u128,7049993290061621291644665680428447138_u128];
_7 = _5 == _2;
RET = _9;
_11.0.2 = (-24842_i16);
_12 = 81681169238810309244045720886709284561_i128 as f64;
_11.0.0 = [97631795688109591630623593718561005541_u128,337873365460246826362307845213309660106_u128,104427943687156099381631209151819748580_u128,102719883275206287093630488429238852911_u128,243445391152174595909392208073430800472_u128];
_11.0.1 = _12;
_11.1 = [407635715_u32,2270112385_u32,2653679088_u32,782140838_u32,2136708425_u32,457096901_u32];
Goto(bb13)
}
bb13 = {
_9 = [229723498596600819327283686170916507852_u128,316211095424107066498338822764070572804_u128,214831102621198308679286577313270103267_u128];
_11.1 = [1050831272_u32,1298527840_u32,153449606_u32,2806589133_u32,1875255084_u32,478977712_u32];
_12 = 1781_u16 as f64;
_14.2 = -1120626914766796958_i64;
_11.0.0 = [254176927519416554790981785801880082511_u128,71506554561581795051066128023652803289_u128,272954335812693371922023187279492587739_u128,329539691764780666619598844248696538425_u128,7295633758456438215222436167209499785_u128];
_2 = _4;
_11.0.0 = [41236880506454223302310618943010797698_u128,232331328093451849988767106423974249994_u128,265623351962495174169481379842578160284_u128,161566850936346116021779198379155417755_u128,282302313312269192078176459440769967171_u128];
_1 = [_14.2,_14.2,_14.2,_14.2,_14.2,_14.2,_14.2];
_11.0.0 = [26508192615513795765507467951955171618_u128,213506059934140438923080527946499427367_u128,309597314053196698588914619612905359286_u128,149656925576479197718370987840291629164_u128,211316965425351476772765955578829676422_u128];
_14.4 = _13;
_14.3 = -_11.0.2;
_11.1 = [2184155099_u32,2146444425_u32,2681002285_u32,2451402359_u32,3818481069_u32,275756221_u32];
_14.1 = &_17;
_14.0 = (-1819066635_i32) >> _14.2;
_16 = [3_usize,3096950309917883549_usize,1_usize,12610709123615406418_usize,2_usize,6490717665148127768_usize,2_usize,3_usize];
_21.0 = 64415_u16 as i16;
_21 = (_14.3, 134_u8);
_1 = [_14.2,_14.2,_14.2,_14.2,_14.2,_14.2,_14.2];
_19 = (_21.1,);
_21.1 = _19.0;
_11.0.1 = 32654371365827729738257413222804867209_i128 as f64;
Call(_6 = fn14(_3, _3, _5, _7, _4, _7, _4), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_2 = _7;
_24.2 = _14.2;
_18.fld2 = -_11.0.1;
_23 = _11.0.2 as f64;
_5 = _6 > _7;
_6 = _4 | _5;
_11.1 = [1610491078_u32,812131309_u32,1115686669_u32,3108054994_u32,2021653947_u32,670661828_u32];
_24.2 = _14.2 >> _19.0;
_24.0 = !_14.0;
_24.1 = &_17;
_21 = (_14.3, _19.0);
_11.0.2 = _14.3;
_16 = [3_usize,3_usize,6_usize,6_usize,16648211420467511343_usize,4_usize,0_usize,5_usize];
_25 = _11.0.1;
_19 = (_21.1,);
_5 = _7;
_21 = (_11.0.2, _19.0);
_11.0.2 = -_14.3;
_1 = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(3_usize, 7_usize, Move(_7), 21_usize, Move(_21), 4_usize, Move(_4), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(3_usize, 5_usize, Move(_5), 1_usize, Move(_1), 27_usize, _27, 27_usize, _27), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool,mut _13: bool) -> [u128; 3] {
mir! {
type RET = [u128; 3];
let _14: Adt50;
let _15: Adt45;
let _16: Adt51;
let _17: u32;
let _18: u64;
let _19: i16;
let _20: ([u128; 5], f64, i16);
let _21: f32;
let _22: Adt52;
let _23: Adt40;
let _24: (u64, [i64; 7], [i64; 7], isize);
let _25: [i64; 7];
let _26: i64;
let _27: ([i64; 7], i16, f64, [i64; 7], bool);
let _28: [isize; 4];
let _29: u16;
let _30: (u64, [i64; 7], [i64; 7], isize);
let _31: (u8,);
let _32: i16;
let _33: ([i64; 7], i16, f64, [i64; 7], bool);
let _34: isize;
let _35: u32;
let _36: [usize; 8];
let _37: [u32; 2];
let _38: [u128; 5];
let _39: [u32; 6];
let _40: f32;
let _41: (i16, u8);
let _42: Adt45;
let _43: isize;
let _44: [u128; 5];
let _45: *const u64;
let _46: [u16; 3];
let _47: isize;
let _48: ();
let _49: ();
{
_4 = !_1;
_11 = !_13;
_7 = _5;
_12 = !_6;
_6 = !_9;
_1 = _4 <= _3;
_14.fld4 = 51633255346891536810504165331597277831_i128 as i64;
RET = [156245213221383623656707089068236235569_u128,126546843334319993082432263159562477949_u128,63080264329138056573650730821707699892_u128];
_7 = !_12;
_17 = 2357625031_u32 ^ 1528020124_u32;
_3 = _8 == _8;
_4 = _11;
_14.fld3.0 = [316079825568040815405365465406803328761_u128,324031115645465369510337400804649988155_u128,90498757616387957016405977094001655067_u128,305275980018558173844876498824308457598_u128,229932430498466481895744231830683380191_u128];
RET = [221109361754848362059150051097133022319_u128,220256232772356034932764170696698280118_u128,27837557539266522735387991280043949064_u128];
_14.fld3.1 = core::ptr::addr_of!(_18);
_14.fld2 = 9223372036854775807_isize as f64;
_2 = _7;
_12 = _8 & _13;
Call(_5 = fn5(_13, _13, _6, _8, _12, _2, _6, _2, _13, _14.fld3, _12, _7, _2, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14.fld1 = Adt46::Variant1 { fld0: _14.fld3.0 };
_20.0 = [188829294843776941142259992572380854645_u128,75365401556428884245716476960827855461_u128,311678820053353141565504168380686455250_u128,149796744809769802263505987783103804537_u128,140673027638294406742720395818830787339_u128];
_20.1 = 88_i8 as f64;
_20.2 = -27649_i16;
_1 = _13;
_2 = !_11;
_7 = !_5;
_19 = _17 as i16;
_10 = _11 < _3;
_19 = _20.2;
Goto(bb2)
}
bb2 = {
_2 = _1;
_8 = _9 == _11;
_21 = _19 as f32;
_10 = _7 > _4;
_18 = 12179759096722420562_u64 & 15776465115121447393_u64;
_14.fld3.0 = _20.0;
RET = [138019730001475672602519309618253158092_u128,189627701139808094685574357749933276691_u128,196045232931629808587693586847773173592_u128];
RET = [282354441177885395156836353341533736664_u128,99272396492761892949068707923126399012_u128,105426430125287118912818187488725213506_u128];
_14.fld2 = (-128_isize) as f64;
_4 = !_6;
_5 = !_10;
_7 = !_1;
SetDiscriminant(_14.fld1, 1);
_5 = _4 != _1;
place!(Field::<[u128; 5]>(Variant(_14.fld1, 1), 0)) = [185019479927372422756578381410843659785_u128,256026244550472720742103214472388392282_u128,292311086248641088969820013472486511499_u128,280452763509795363574271261781072572703_u128,247812190987471020828683645795550017753_u128];
SetDiscriminant(_14.fld1, 0);
_14.fld3.1 = core::ptr::addr_of!(_18);
_1 = !_11;
_24.0 = !_18;
_1 = _10 >= _5;
_14.fld2 = _20.1 * _20.1;
_18 = _24.0 & _24.0;
_1 = _2 <= _12;
place!(Field::<[i64; 6]>(Variant(_14.fld1, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_20 = (_14.fld3.0, _14.fld2, _19);
_17 = 423133438_u32 & 2764556085_u32;
_24.0 = _18;
Goto(bb3)
}
bb3 = {
_12 = _7 >= _13;
_19 = 302139529775689838056029734847833686074_u128 as i16;
_14.fld2 = _20.1 + _20.1;
_24.3 = (-9223372036854775808_isize);
RET = [133256189628817214243416947149620499043_u128,44515175750689176740881971420875314837_u128,263787413737721351830978924598111607822_u128];
_24.2 = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_7 = _4;
place!(Field::<[i64; 6]>(Variant(_14.fld1, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_23 = Adt40::Variant3 { fld0: '\u{fd8b}' };
_27.2 = _14.fld2;
_19 = !_20.2;
_27.2 = _20.1 - _14.fld2;
_25 = _24.2;
RET = [200345418730599837807583888898520402529_u128,150656050148686686100104249311729261797_u128,232329602057620964450408547053087851334_u128];
_6 = !_13;
_27 = (_24.2, _19, _14.fld2, _24.2, _13);
RET = [219417282185240312645953324045166151326_u128,72759183359769603597232088129446625870_u128,72460912125894195234580153017970534556_u128];
place!(Field::<char>(Variant(_23, 3), 0)) = '\u{2881}';
_27.3 = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_24.0 = !_18;
_25 = _27.3;
_10 = _2 != _2;
_24.3 = _21 as isize;
_2 = _7 <= _3;
place!(Field::<[i64; 6]>(Variant(_14.fld1, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_24 = (_18, _25, _27.3, 9223372036854775807_isize);
Call(_14.fld0 = fn6(_14.fld3.1, _3, _13, _5, _27, _10, _6, _27, _8, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_5 = _10;
_28 = [_24.3,_24.3,_24.3,_24.3];
_14.fld2 = _27.2 * _27.2;
place!(Field::<([u128; 5], *const u64)>(Variant(_14.fld0, 1), 3)) = _14.fld3;
_3 = _6 | _27.4;
SetDiscriminant(_23, 2);
_24.3 = (-83_isize);
_11 = _7;
place!(Field::<isize>(Variant(_23, 2), 2)) = !_24.3;
place!(Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3)).0 = _14.fld3.0;
_13 = _6;
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_23, 2), 1)).1 = [_17,_17,_17,_17,_17,_17];
Goto(bb5)
}
bb5 = {
SetDiscriminant(_14.fld0, 2);
_3 = !_13;
_20.0 = [170857632466917691980335562694266657102_u128,306322400395517572603630855610478887642_u128,322163296730585875449497879680658694097_u128,316723889700692488604673092801720763331_u128,229783410426143996123873809774203951963_u128];
_26 = _14.fld4 & _14.fld4;
place!(Field::<[u128; 5]>(Variant(_23, 2), 0)) = _20.0;
place!(Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3)).1 = _14.fld2 - _14.fld2;
_17 = _21 as u32;
_30 = (_18, _24.2, _27.3, _24.3);
place!(Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3)) = (Field::<[u128; 5]>(Variant(_23, 2), 0), _20.1, _27.1);
_14.fld3.0 = [323847317574303014503709399568321662424_u128,118221078912160112907486215624314440098_u128,69516776791261911285451729406403254432_u128,55131597005766453944300555682212740242_u128,194225028061818662996975224811129066415_u128];
_7 = !_27.4;
_33 = (_27.0, _19, _20.1, _27.0, _1);
_31.0 = Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3).2 as u8;
_21 = _14.fld2 as f32;
_6 = _13 >= _10;
_33.4 = _1;
_29 = _21 as u16;
_4 = _6;
match _24.3 {
0 => bb6,
1 => bb7,
2 => bb8,
340282366920938463463374607431768211373 => bb10,
_ => bb9
}
}
bb6 = {
_5 = _10;
_28 = [_24.3,_24.3,_24.3,_24.3];
_14.fld2 = _27.2 * _27.2;
place!(Field::<([u128; 5], *const u64)>(Variant(_14.fld0, 1), 3)) = _14.fld3;
_3 = _6 | _27.4;
SetDiscriminant(_23, 2);
_24.3 = (-83_isize);
_11 = _7;
place!(Field::<isize>(Variant(_23, 2), 2)) = !_24.3;
place!(Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3)).0 = _14.fld3.0;
_13 = _6;
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_23, 2), 1)).1 = [_17,_17,_17,_17,_17,_17];
Goto(bb5)
}
bb7 = {
_12 = _7 >= _13;
_19 = 302139529775689838056029734847833686074_u128 as i16;
_14.fld2 = _20.1 + _20.1;
_24.3 = (-9223372036854775808_isize);
RET = [133256189628817214243416947149620499043_u128,44515175750689176740881971420875314837_u128,263787413737721351830978924598111607822_u128];
_24.2 = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_7 = _4;
place!(Field::<[i64; 6]>(Variant(_14.fld1, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_23 = Adt40::Variant3 { fld0: '\u{fd8b}' };
_27.2 = _14.fld2;
_19 = !_20.2;
_27.2 = _20.1 - _14.fld2;
_25 = _24.2;
RET = [200345418730599837807583888898520402529_u128,150656050148686686100104249311729261797_u128,232329602057620964450408547053087851334_u128];
_6 = !_13;
_27 = (_24.2, _19, _14.fld2, _24.2, _13);
RET = [219417282185240312645953324045166151326_u128,72759183359769603597232088129446625870_u128,72460912125894195234580153017970534556_u128];
place!(Field::<char>(Variant(_23, 3), 0)) = '\u{2881}';
_27.3 = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_24.0 = !_18;
_25 = _27.3;
_10 = _2 != _2;
_24.3 = _21 as isize;
_2 = _7 <= _3;
place!(Field::<[i64; 6]>(Variant(_14.fld1, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_24 = (_18, _25, _27.3, 9223372036854775807_isize);
Call(_14.fld0 = fn6(_14.fld3.1, _3, _13, _5, _27, _10, _6, _27, _8, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_2 = _1;
_8 = _9 == _11;
_21 = _19 as f32;
_10 = _7 > _4;
_18 = 12179759096722420562_u64 & 15776465115121447393_u64;
_14.fld3.0 = _20.0;
RET = [138019730001475672602519309618253158092_u128,189627701139808094685574357749933276691_u128,196045232931629808587693586847773173592_u128];
RET = [282354441177885395156836353341533736664_u128,99272396492761892949068707923126399012_u128,105426430125287118912818187488725213506_u128];
_14.fld2 = (-128_isize) as f64;
_4 = !_6;
_5 = !_10;
_7 = !_1;
SetDiscriminant(_14.fld1, 1);
_5 = _4 != _1;
place!(Field::<[u128; 5]>(Variant(_14.fld1, 1), 0)) = [185019479927372422756578381410843659785_u128,256026244550472720742103214472388392282_u128,292311086248641088969820013472486511499_u128,280452763509795363574271261781072572703_u128,247812190987471020828683645795550017753_u128];
SetDiscriminant(_14.fld1, 0);
_14.fld3.1 = core::ptr::addr_of!(_18);
_1 = !_11;
_24.0 = !_18;
_1 = _10 >= _5;
_14.fld2 = _20.1 * _20.1;
_18 = _24.0 & _24.0;
_1 = _2 <= _12;
place!(Field::<[i64; 6]>(Variant(_14.fld1, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_20 = (_14.fld3.0, _14.fld2, _19);
_17 = 423133438_u32 & 2764556085_u32;
_24.0 = _18;
Goto(bb3)
}
bb9 = {
_14.fld1 = Adt46::Variant1 { fld0: _14.fld3.0 };
_20.0 = [188829294843776941142259992572380854645_u128,75365401556428884245716476960827855461_u128,311678820053353141565504168380686455250_u128,149796744809769802263505987783103804537_u128,140673027638294406742720395818830787339_u128];
_20.1 = 88_i8 as f64;
_20.2 = -27649_i16;
_1 = _13;
_2 = !_11;
_7 = !_5;
_19 = _17 as i16;
_10 = _11 < _3;
_19 = _20.2;
Goto(bb2)
}
bb10 = {
_21 = 7250466812118972040811784048310870931_i128 as f32;
place!(Field::<isize>(Variant(_23, 2), 2)) = !_24.3;
_24 = (_30.0, _25, _30.2, _30.3);
_24 = (_30.0, _30.2, _30.2, Field::<isize>(Variant(_23, 2), 2));
_24.0 = !_18;
_10 = _3;
match _30.3 {
0 => bb7,
1 => bb5,
2 => bb6,
3 => bb9,
340282366920938463463374607431768211373 => bb12,
_ => bb11
}
}
bb11 = {
_14.fld1 = Adt46::Variant1 { fld0: _14.fld3.0 };
_20.0 = [188829294843776941142259992572380854645_u128,75365401556428884245716476960827855461_u128,311678820053353141565504168380686455250_u128,149796744809769802263505987783103804537_u128,140673027638294406742720395818830787339_u128];
_20.1 = 88_i8 as f64;
_20.2 = -27649_i16;
_1 = _13;
_2 = !_11;
_7 = !_5;
_19 = _17 as i16;
_10 = _11 < _3;
_19 = _20.2;
Goto(bb2)
}
bb12 = {
place!(Field::<(i128,)>(Variant(_14.fld0, 2), 0)) = (113095748212446128715720797541539074704_i128,);
_9 = _10 < _13;
place!(Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3)).1 = _14.fld2 + _14.fld2;
_30.2 = [_26,_26,_26,_14.fld4,_26,_14.fld4,_14.fld4];
place!(Field::<[u128; 5]>(Variant(_23, 2), 0)) = [239979462988413758010567872479442077112_u128,313882382354184021766988523050176823945_u128,122918843452999047053550888233674147344_u128,32612604642244123955353940829399507755_u128,89895594071098209706779442920413471420_u128];
_34 = Field::<isize>(Variant(_23, 2), 2);
_36 = [7042572445656697269_usize,1_usize,3554782619149008752_usize,4_usize,6_usize,15790171050638450585_usize,3_usize,1_usize];
_27 = (_30.1, _20.2, Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3).1, _30.2, _4);
_14.fld1 = Adt46::Variant1 { fld0: _20.0 };
place!(Field::<([u128; 5], f64, i16)>(Variant(_23, 2), 3)).1 = 210067175574405561563413855778489119724_u128 as f64;
_8 = _3 <= _2;
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_23, 2), 1)).0.0 = _14.fld3.0;
_30.3 = _34 + _24.3;
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_23, 2), 1)).0 = _20;
_24.3 = _30.3 << _29;
_30 = (_18, _33.3, _27.3, _24.3);
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_23, 2), 1)).0.1 = -_27.2;
_37 = [_17,_17];
_28 = [_24.3,_30.3,_24.3,_24.3];
Call(_27.4 = fn12(_11, _11, _6, _10, _14.fld0, _33, _30, Move(_23), _2, _14.fld0, _33, Move(_14)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13 = _5;
_30.0 = _18;
_7 = _27.4;
_35 = _17;
_31.0 = 125_u8 | 78_u8;
_33.3 = _27.0;
_6 = _4 ^ _8;
_33.4 = !_9;
_18 = !_30.0;
_41.1 = _27.2 as u8;
_35 = !_17;
_2 = _8 & _10;
_3 = _13 | _7;
_24.3 = _29 as isize;
_14.fld3.0 = [281353024676273073443691835765801869886_u128,287922656967263878119868296410429271719_u128,66062393923056160850554966533348253970_u128,289431223279939929311341984536569989975_u128,251267494925409481055897204974634879394_u128];
_27.1 = _20.2 - _33.1;
_24.3 = !_30.3;
Call(_30.0 = core::intrinsics::transmute(_34), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_27.1 = _20.2;
_1 = _27.4;
_32 = _20.2 >> _24.3;
_20 = (_14.fld3.0, _27.2, _32);
_31 = (_41.1,);
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(4_usize, 18_usize, Move(_18), 30_usize, Move(_30), 32_usize, Move(_32), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(4_usize, 17_usize, Move(_17), 3_usize, Move(_3), 29_usize, Move(_29), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(4_usize, 37_usize, Move(_37), 19_usize, Move(_19), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(4_usize, 1_usize, Move(_1), 26_usize, Move(_26), 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: ([u128; 5], *const u64),mut _11: bool,mut _12: bool,mut _13: bool,mut _14: bool,mut _15: bool) -> bool {
mir! {
type RET = bool;
let _16: i128;
let _17: ();
let _18: ();
{
_5 = _11 | _3;
_1 = !_9;
_13 = _2 | _14;
RET = _14 | _8;
_5 = !_14;
_6 = _5 >= _11;
RET = _5 ^ _5;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(5_usize, 13_usize, Move(_13), 15_usize, Move(_15), 9_usize, Move(_9), 3_usize, Move(_3)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(5_usize, 7_usize, Move(_7), 5_usize, Move(_5), 11_usize, Move(_11), 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: *const u64,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: ([i64; 7], i16, f64, [i64; 7], bool),mut _6: bool,mut _7: bool,mut _8: ([i64; 7], i16, f64, [i64; 7], bool),mut _9: bool,mut _10: bool) -> Adt43 {
mir! {
type RET = Adt43;
let _11: [u32; 2];
let _12: (u8,);
let _13: u8;
let _14: Adt50;
let _15: Adt46;
let _16: isize;
let _17: char;
let _18: Adt55;
let _19: &'static u64;
let _20: char;
let _21: ([i64; 7], i16, f64, [i64; 7], bool);
let _22: i16;
let _23: (([u128; 5], f64, i16), [u32; 6]);
let _24: (i32, &'static u64, i64, i16, char);
let _25: u64;
let _26: Adt44;
let _27: &'static u64;
let _28: (i32, &'static u64, i64, i16, char);
let _29: Adt56;
let _30: Adt46;
let _31: f64;
let _32: [bool; 6];
let _33: f32;
let _34: u8;
let _35: [u32; 2];
let _36: isize;
let _37: Adt53;
let _38: Adt47;
let _39: (u64, [i64; 7], [i64; 7], isize);
let _40: Adt49;
let _41: [i64; 6];
let _42: bool;
let _43: char;
let _44: char;
let _45: isize;
let _46: ([u128; 5], f64, i16);
let _47: (i128,);
let _48: ([u128; 5], *const u64);
let _49: Adt43;
let _50: [bool; 6];
let _51: ();
let _52: ();
{
_8.4 = _6 >= _5.4;
_8.0 = _5.0;
_7 = !_4;
Goto(bb1)
}
bb1 = {
_3 = _2;
_3 = !_2;
_5 = _8;
_6 = _9;
_5.2 = _8.2 - _8.2;
_5.4 = _6 <= _7;
_5.1 = !_8.1;
_9 = _6;
_11 = [1824792393_u32,2599493239_u32];
_5.2 = _8.2 + _8.2;
_5 = (_8.3, _8.1, _8.2, _8.3, _3);
_10 = _7;
_12 = (82_u8,);
_5.4 = _9 >= _3;
_6 = _4 == _3;
_8 = (_5.3, _5.1, _5.2, _5.3, _7);
_3 = _5.4 ^ _4;
Goto(bb2)
}
bb2 = {
_12.0 = 5333795115056301354_u64 as u8;
_5.3 = _8.0;
_14.fld2 = _5.2 + _5.2;
_12 = (43_u8,);
Goto(bb3)
}
bb3 = {
_14.fld3.0 = [13550359679934031560225606708160609879_u128,193066466513289694587591685299327972481_u128,205109308810403543819757007513953829164_u128,80032444680054356897474259541566710365_u128,230919799144500526807012588001713257504_u128];
_16 = 63_isize & (-72_isize);
_12 = (126_u8,);
_11 = [4148316695_u32,12828493_u32];
_14.fld4 = 15426_u16 as i64;
_8 = (_5.3, _5.1, _14.fld2, _5.3, _9);
_17 = '\u{10f200}';
_14.fld2 = _8.2;
_21.3 = _8.3;
Call(_9 = fn7(_8.4, _5.2, _8, _6, _5, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_5.4 = !_7;
_23.0.1 = _8.2 - _14.fld2;
_8.4 = _3 | _7;
_10 = !_6;
_21.2 = _23.0.1;
match _12.0 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
126 => bb12,
_ => bb11
}
}
bb5 = {
_14.fld3.0 = [13550359679934031560225606708160609879_u128,193066466513289694587591685299327972481_u128,205109308810403543819757007513953829164_u128,80032444680054356897474259541566710365_u128,230919799144500526807012588001713257504_u128];
_16 = 63_isize & (-72_isize);
_12 = (126_u8,);
_11 = [4148316695_u32,12828493_u32];
_14.fld4 = 15426_u16 as i64;
_8 = (_5.3, _5.1, _14.fld2, _5.3, _9);
_17 = '\u{10f200}';
_14.fld2 = _8.2;
_21.3 = _8.3;
Call(_9 = fn7(_8.4, _5.2, _8, _6, _5, _3), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_12.0 = 5333795115056301354_u64 as u8;
_5.3 = _8.0;
_14.fld2 = _5.2 + _5.2;
_12 = (43_u8,);
Goto(bb3)
}
bb7 = {
_3 = _2;
_3 = !_2;
_5 = _8;
_6 = _9;
_5.2 = _8.2 - _8.2;
_5.4 = _6 <= _7;
_5.1 = !_8.1;
_9 = _6;
_11 = [1824792393_u32,2599493239_u32];
_5.2 = _8.2 + _8.2;
_5 = (_8.3, _8.1, _8.2, _8.3, _3);
_10 = _7;
_12 = (82_u8,);
_5.4 = _9 >= _3;
_6 = _4 == _3;
_8 = (_5.3, _5.1, _5.2, _5.3, _7);
_3 = _5.4 ^ _4;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_21.4 = _8.4 == _7;
_13 = _12.0 & _12.0;
_14.fld4 = !3662232733669853261_i64;
_5.3 = [_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4,_14.fld4];
_14.fld3.0 = [226553650595212883276449431773255393408_u128,264253541410234082518397208611691117883_u128,229707138208568030256552867013228707345_u128,208255158415681840386746307213842733343_u128,229239447694193478820076010701027632367_u128];
_3 = !_2;
_14.fld3.0 = [314090432459694410659669926096399284116_u128,47059217841801414495132662555727026616_u128,33718108422906563307540861217542063181_u128,120305822556484649264247185508886022889_u128,71923402146042621971771218664778844512_u128];
_23.0.2 = _6 as i16;
_23.0.2 = 19268_u16 as i16;
_24.4 = _17;
_24.2 = 1628759340209015525_usize as i64;
_12.0 = _16 as u8;
_2 = !_8.4;
_15 = Adt46::Variant1 { fld0: _14.fld3.0 };
_24.3 = _8.1;
_23.0 = (Field::<[u128; 5]>(Variant(_15, 1), 0), _21.2, _24.3);
_14.fld3.1 = core::ptr::addr_of!(_25);
_25 = 8406617666775995958_u64;
_21.3 = _8.3;
_21 = (_8.0, _23.0.2, _23.0.1, _5.3, _3);
Call(_2 = fn8(_1, _3, _23.0.1, _12, _7, _6, _21.4, _10, _10, _3, _6, _3, _5, _5, _5, _23.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_3 = _10;
_14.fld3 = (_23.0.0, _1);
_12.0 = _13 >> _5.1;
_21 = (_5.3, _24.3, _23.0.1, _5.3, _4);
_28.4 = _17;
_5.4 = _3 > _6;
match _25 {
0 => bb12,
1 => bb6,
2 => bb5,
3 => bb4,
8406617666775995958 => bb15,
_ => bb14
}
}
bb14 = {
_5.4 = !_7;
_23.0.1 = _8.2 - _14.fld2;
_8.4 = _3 | _7;
_10 = !_6;
_21.2 = _23.0.1;
match _12.0 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
126 => bb12,
_ => bb11
}
}
bb15 = {
_28.0 = (-378300728_i32);
_28.1 = &_25;
_21.4 = _9 >= _4;
_24.1 = &_25;
SetDiscriminant(_15, 0);
_14.fld3.1 = core::ptr::addr_of!(_25);
place!(Field::<[i64; 6]>(Variant(_15, 0), 0)) = [_14.fld4,_14.fld4,_14.fld4,_24.2,_14.fld4,_24.2];
_13 = _12.0;
Call(_8.4 = fn9(_3, _10, _10, _7, _6, _2, _7, _6, _21.4, _21), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_10 = _21.4 | _9;
_12 = (_13,);
_9 = !_21.4;
_19 = Move(_28.1);
Goto(bb17)
}
bb17 = {
_5.0 = [_14.fld4,_14.fld4,_24.2,_14.fld4,_14.fld4,_24.2,_14.fld4];
_1 = core::ptr::addr_of!(_25);
_16 = 9223372036854775807_isize;
_28.4 = _17;
_21.2 = -_23.0.1;
_17 = _24.4;
place!(Field::<[i64; 6]>(Variant(_15, 0), 0)) = [_24.2,_14.fld4,_14.fld4,_24.2,_24.2,_24.2];
_12.0 = _13 ^ _13;
_31 = _23.0.1 - _8.2;
_28.3 = 68177865433363771014668813191132616698_u128 as i16;
_8 = _5;
SetDiscriminant(_15, 1);
_32 = [_5.4,_3,_10,_9,_3,_10];
_5.3 = _21.0;
_22 = !_28.3;
_14.fld1 = Adt46::Variant1 { fld0: _23.0.0 };
_14.fld3.0 = [109334592894394011930718241900564879829_u128,251161593482329591974728472374360696719_u128,25558560068767262973337301961194615553_u128,24171351668550365434900314569866451581_u128,256969729996869783013148565798080854461_u128];
_24.4 = _17;
Call(_1 = fn10(_21.4, _5, _5.4, _8, _9, _2, _8, _32, _5, _22, _5, _5.4, _6, _2), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
SetDiscriminant(_14.fld1, 1);
_5.4 = _7;
_23.1 = [4237133041_u32,118219927_u32,2332186984_u32,2354888900_u32,4204986224_u32,3194343176_u32];
_5.4 = _21.4 ^ _4;
_20 = _24.4;
_7 = !_3;
_13 = (-116094080275705331700770201898132520278_i128) as u8;
place!(Field::<[u128; 5]>(Variant(_15, 1), 0)) = _23.0.0;
place!(Field::<[u128; 5]>(Variant(_15, 1), 0)) = [139948390444251939835889588633646279093_u128,323449723346529085406857333829235557394_u128,193002499805320163778857571988834085582_u128,93379474890539431180112610208200219795_u128,306261108926749033642250363236489771983_u128];
_14.fld0 = Adt43::Variant1 { fld0: 86211766090822824451592539070469799415_i128,fld1: _14.fld3.0,fld2: _23.1,fld3: _14.fld3 };
_3 = _2 < _7;
_27 = Move(_24.1);
_23.0.1 = _21.2;
_34 = !_13;
_14.fld0 = Adt43::Variant1 { fld0: 126083026429649143665867961168874583454_i128,fld1: Field::<[u128; 5]>(Variant(_15, 1), 0),fld2: _23.1,fld3: _14.fld3 };
_28.2 = -_14.fld4;
_15 = Adt46::Variant1 { fld0: _14.fld3.0 };
_39.1 = [_24.2,_28.2,_24.2,_28.2,_24.2,_14.fld4,_28.2];
_36 = _25 as isize;
_14.fld3 = (Field::<[u128; 5]>(Variant(_15, 1), 0), _1);
Goto(bb19)
}
bb19 = {
_28.1 = &_25;
_29.fld0 = _5.4 as u16;
place!(Field::<([u128; 5], *const u64)>(Variant(_14.fld0, 1), 3)) = (_14.fld3.0, _14.fld3.1);
_7 = !_8.4;
_29.fld1 = Adt44::Variant0 { fld0: _29.fld0,fld1: _32,fld2: _23.0.1,fld3: _28.0,fld4: _23.0 };
_24.3 = _5.4 as i16;
_15 = Adt46::Variant1 { fld0: Field::<([u128; 5], f64, i16)>(Variant(_29.fld1, 0), 4).0 };
Goto(bb20)
}
bb20 = {
_8.1 = _24.3;
_39.2 = [_28.2,_14.fld4,_28.2,_24.2,_14.fld4,_24.2,_24.2];
place!(Field::<[u128; 5]>(Variant(_14.fld0, 1), 1)) = _14.fld3.0;
_39.0 = _25;
_44 = _24.4;
_14.fld3.1 = _1;
Goto(bb21)
}
bb21 = {
_48.0 = [219610860197394116662018736185614564005_u128,261742166873150500109816008347928120049_u128,78482936880498421626908905878528169141_u128,39296176412032355394349594938866918205_u128,55024828702956030998030818655512430133_u128];
_47.0 = 126291728529651299805819930678538685547_i128 >> _29.fld0;
_8.3 = [_14.fld4,_28.2,_28.2,_28.2,_24.2,_28.2,_14.fld4];
_22 = _24.3 - _24.3;
_24.0 = _16 as i32;
SetDiscriminant(_29.fld1, 1);
_17 = _24.4;
_10 = !_5.4;
_29.fld1 = Adt44::Variant3 { fld0: _47 };
_8.0 = [_24.2,_14.fld4,_14.fld4,_24.2,_28.2,_24.2,_14.fld4];
RET = Adt43::Variant1 { fld0: _47.0,fld1: Field::<[u128; 5]>(Variant(_15, 1), 0),fld2: Field::<[u32; 6]>(Variant(_14.fld0, 1), 2),fld3: Field::<([u128; 5], *const u64)>(Variant(_14.fld0, 1), 3) };
place!(Field::<([u128; 5], *const u64)>(Variant(_14.fld0, 1), 3)) = (Field::<[u128; 5]>(Variant(_14.fld0, 1), 1), Field::<([u128; 5], *const u64)>(Variant(RET, 1), 3).1);
SetDiscriminant(_15, 0);
_23.1 = [4104401779_u32,2751309939_u32,1201281579_u32,2479897875_u32,3368039889_u32,3111179053_u32];
_24.0 = _12.0 as i32;
_46.2 = -_22;
_28.0 = -_24.0;
_35 = _11;
_21.3 = [_14.fld4,_14.fld4,_24.2,_24.2,_24.2,_14.fld4,_14.fld4];
_37 = Adt53::Variant0 { fld0: _47.0,fld1: _28.0,fld2: _14.fld3.1 };
Goto(bb22)
}
bb22 = {
Call(_51 = dump_var(6_usize, 25_usize, Move(_25), 20_usize, Move(_20), 34_usize, Move(_34), 47_usize, Move(_47)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_51 = dump_var(6_usize, 44_usize, Move(_44), 17_usize, Move(_17), 22_usize, Move(_22), 32_usize, Move(_32)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_51 = dump_var(6_usize, 4_usize, Move(_4), 3_usize, Move(_3), 52_usize, _52, 52_usize, _52), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: bool,mut _2: f64,mut _3: ([i64; 7], i16, f64, [i64; 7], bool),mut _4: bool,mut _5: ([i64; 7], i16, f64, [i64; 7], bool),mut _6: bool) -> bool {
mir! {
type RET = bool;
let _7: Adt42;
let _8: f32;
let _9: i8;
let _10: ([u128; 5], f64, i16);
let _11: ();
let _12: ();
{
_5.3 = [(-338780047221730186_i64),4250652032504285149_i64,(-6872816926099281356_i64),2576591627639667524_i64,(-4624434478900944511_i64),1932197553170959790_i64,2710833373013834730_i64];
RET = _5.4 >= _1;
_3.4 = RET <= _6;
_5.3 = _3.0;
RET = _1;
_3.3 = _5.0;
_5.0 = [(-5075077585249255228_i64),(-5365400441864295874_i64),2431178731711891040_i64,898969063608149244_i64,2936678487997205396_i64,(-8974585789546236421_i64),1572337380843625454_i64];
_3 = (_5.0, _5.1, _2, _5.0, _6);
_5 = (_3.0, _3.1, _3.2, _3.3, _4);
_1 = _3.4 != RET;
_8 = (-132414891312879412000171992548065133099_i128) as f32;
_4 = _5.4 > RET;
_5.2 = 82525157046591182893903154383824577092_u128 as f64;
_8 = 12820685041350464582_u64 as f32;
_6 = _4 <= RET;
_3.4 = _6 < _5.4;
_9 = (-93_i8);
_5 = (_3.0, _3.1, _3.2, _3.3, RET);
RET = !_5.4;
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(7_usize, 6_usize, Move(_6), 9_usize, Move(_9), 12_usize, _12, 12_usize, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: *const u64,mut _2: bool,mut _3: f64,mut _4: (u8,),mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool,mut _13: ([i64; 7], i16, f64, [i64; 7], bool),mut _14: ([i64; 7], i16, f64, [i64; 7], bool),mut _15: ([i64; 7], i16, f64, [i64; 7], bool),mut _16: ([u128; 5], f64, i16)) -> bool {
mir! {
type RET = bool;
let _17: (u8,);
let _18: [bool; 6];
let _19: i128;
let _20: ();
let _21: ();
{
_14.2 = _16.1;
_13.3 = [5830507664294470201_i64,4902320582253052837_i64,(-4252421857112595719_i64),7306881035742674259_i64,(-7294656338282130173_i64),5486374332343786891_i64,3624958858824979534_i64];
_13.3 = [(-3435545011063247927_i64),(-3686348067359076527_i64),(-7446524289321963233_i64),2509740052462674195_i64,8160145594808251989_i64,2723492382106462236_i64,(-5403880287760834491_i64)];
_13.2 = -_14.2;
_13.3 = [(-9169136600910037531_i64),(-7266303968762911557_i64),(-2640536413413496566_i64),4552446237130294209_i64,(-3498508179711957041_i64),891573755276928094_i64,(-3963829231723651665_i64)];
RET = _13.4;
_13.4 = _15.4;
_15.1 = 46805_u16 as i16;
_18 = [_11,_2,_14.4,_13.4,_2,_7];
_9 = _10;
_15.4 = _7;
_16.1 = _3 - _14.2;
_14.3 = _13.3;
_14.4 = !_13.4;
_19 = _15.1 as i128;
_15.0 = _14.3;
_4.0 = 74_u8 ^ 185_u8;
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(8_usize, 10_usize, Move(_10), 7_usize, Move(_7), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(8_usize, 18_usize, Move(_18), 6_usize, Move(_6), 21_usize, _21, 21_usize, _21), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: ([i64; 7], i16, f64, [i64; 7], bool)) -> bool {
mir! {
type RET = bool;
let _11: *mut ([i64; 6], (i32, &'static u64, i64, i16, char));
let _12: ();
let _13: ();
{
_3 = !_4;
_6 = !_10.4;
_6 = !_10.4;
_3 = _9 > _8;
RET = !_6;
_10.3 = [(-2731561171881076858_i64),(-7102925983457297934_i64),6971491146214913321_i64,1819820530675877453_i64,3095934867515120593_i64,4477697733040699214_i64,(-3050868433004691534_i64)];
_3 = _6;
_6 = !_10.4;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(9_usize, 3_usize, Move(_3), 9_usize, Move(_9), 6_usize, Move(_6), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: ([i64; 7], i16, f64, [i64; 7], bool),mut _3: bool,mut _4: ([i64; 7], i16, f64, [i64; 7], bool),mut _5: bool,mut _6: bool,mut _7: ([i64; 7], i16, f64, [i64; 7], bool),mut _8: [bool; 6],mut _9: ([i64; 7], i16, f64, [i64; 7], bool),mut _10: i16,mut _11: ([i64; 7], i16, f64, [i64; 7], bool),mut _12: bool,mut _13: bool,mut _14: bool) -> *const u64 {
mir! {
type RET = *const u64;
let _15: Adt41;
let _16: [u16; 3];
let _17: [u128; 5];
let _18: (i128,);
let _19: f64;
let _20: char;
let _21: Adt43;
let _22: [usize; 8];
let _23: [u32; 2];
let _24: [i64; 6];
let _25: Adt50;
let _26: (i32, &'static u64, i64, i16, char);
let _27: (u64, [i64; 7], [i64; 7], isize);
let _28: u32;
let _29: Adt44;
let _30: f32;
let _31: (i16, u8);
let _32: Adt54;
let _33: Adt48;
let _34: Adt47;
let _35: f32;
let _36: isize;
let _37: ([i64; 7], i16, f64, [i64; 7], bool);
let _38: bool;
let _39: Adt43;
let _40: i8;
let _41: bool;
let _42: ();
let _43: ();
{
_2.1 = !_10;
_2.4 = _5;
_14 = !_13;
_7.3 = [(-4881389346779633325_i64),5000030126778817286_i64,(-5451008277289404262_i64),5034291548556220160_i64,(-5783032847286411333_i64),8341217896021216660_i64,2872505049117816438_i64];
_7.2 = -_9.2;
_2.0 = _9.3;
_9.1 = 96_i8 as i16;
_14 = !_1;
_15 = Adt41 { fld0: _8 };
_11.1 = _4.1;
_4 = (_7.3, _7.1, _2.2, _7.0, _9.4);
_4.0 = [(-4283345477358296736_i64),(-3044919451409365003_i64),4624208985779371980_i64,8346884342676597964_i64,(-4439377414534981216_i64),7466935426240303362_i64,(-6366509892377845727_i64)];
_15.fld0 = [_11.4,_7.4,_12,_12,_2.4,_9.4];
_20 = '\u{10b7ad}';
_16 = [4726_u16,44538_u16,28320_u16];
_3 = _14 >= _9.4;
_7.2 = -_4.2;
_6 = _1;
_20 = '\u{10ca3e}';
_9 = (_7.3, _2.1, _11.2, _4.0, _13);
_7.1 = _7.2 as i16;
_14 = _2.4 == _3;
Goto(bb1)
}
bb1 = {
_2.0 = _9.0;
_17 = [235756358218118617317877111476466857381_u128,313621760473222341912227094327076439000_u128,208405779388289374622204567161572312938_u128,190142542554996849998372881806251909037_u128,214734655886348770478858008049313221900_u128];
_11.1 = 1730489640_i32 as i16;
_11.1 = !_7.1;
_15.fld0 = [_12,_4.4,_11.4,_9.4,_7.4,_9.4];
_4.0 = _4.3;
_2 = (_9.0, _7.1, _4.2, _4.0, _13);
_4.4 = _9.4 & _13;
Goto(bb2)
}
bb2 = {
_18 = ((-163969877924161844758951523170157921651_i128),);
_11.2 = _2.2;
_7 = (_9.0, _11.1, _9.2, _2.0, _6);
_7.3 = [(-5137816628397029614_i64),(-7776619411083263869_i64),4369205394458608725_i64,8540410936419437213_i64,7064970035163436064_i64,434659331324867327_i64,(-8430823675086221088_i64)];
_1 = _6;
_4 = (_7.3, _11.1, _9.2, _7.0, _13);
_21 = Adt43::Variant2 { fld0: _18 };
match _18.0 {
0 => bb3,
1 => bb4,
176312488996776618704423084261610289805 => bb6,
_ => bb5
}
}
bb3 = {
_2.0 = _9.0;
_17 = [235756358218118617317877111476466857381_u128,313621760473222341912227094327076439000_u128,208405779388289374622204567161572312938_u128,190142542554996849998372881806251909037_u128,214734655886348770478858008049313221900_u128];
_11.1 = 1730489640_i32 as i16;
_11.1 = !_7.1;
_15.fld0 = [_12,_4.4,_11.4,_9.4,_7.4,_9.4];
_4.0 = _4.3;
_2 = (_9.0, _7.1, _4.2, _4.0, _13);
_4.4 = _9.4 & _13;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
SetDiscriminant(_21, 1);
_11.0 = [(-1323906571076861238_i64),1330215161954343322_i64,(-6840889660324172371_i64),5050530038879588010_i64,5105781376836096121_i64,4179142248928225699_i64,5449076561210550991_i64];
_14 = _2.4 != _7.4;
_7.3 = [(-1803754101896166130_i64),(-1322782496465855367_i64),(-324774969941608676_i64),8994375106705910810_i64,(-5645899167337141077_i64),(-9499403633525539_i64),697766757078648084_i64];
_18.0 = (-8066491256939554794_i64) as i128;
_7.1 = -_11.1;
_3 = !_11.4;
place!(Field::<i128>(Variant(_21, 1), 0)) = -_18.0;
_9.0 = [2454959355950608700_i64,(-8001704196321309375_i64),(-8634495842424500535_i64),8449166680517487289_i64,(-2671662726631694107_i64),4021480584013303432_i64,8008861164999919114_i64];
_11.3 = [6611007447386754651_i64,(-4468137263589127408_i64),(-6049992964537777774_i64),(-940317165153240507_i64),7775796991885302638_i64,(-276027481306948783_i64),7839645185809297007_i64];
_23 = [1581834807_u32,1244988932_u32];
_22 = [4_usize,16154437824268879633_usize,2233708558287619083_usize,0_usize,6_usize,7470121215972466870_usize,5_usize,16008791303764016743_usize];
_2.4 = !_5;
_9.1 = _7.1;
_11.2 = _7.2;
_25.fld2 = Field::<i128>(Variant(_21, 1), 0) as f64;
_4.3 = [(-812777393733987512_i64),(-2724249217185052148_i64),6082145010456780181_i64,(-1822327189872596943_i64),(-8252235716960148078_i64),3951733388191361634_i64,(-3031745514767148164_i64)];
_19 = _4.2;
_15.fld0 = _8;
_9.0 = _7.0;
_9 = (_7.0, _4.1, _7.2, _7.0, _2.4);
place!(Field::<[u32; 6]>(Variant(_21, 1), 2)) = [1797931187_u32,150541743_u32,573402384_u32,3896975176_u32,493484327_u32,1912846075_u32];
_15.fld0 = [_3,_2.4,_1,_11.4,_7.4,_2.4];
_25.fld3.0 = _17;
_9.4 = _3 ^ _7.4;
place!(Field::<i128>(Variant(_21, 1), 0)) = _18.0 | _18.0;
Call(_13 = fn11(_7.4, _4.4, _4.4, _4, _2.4, _8, _8, _4, _6, _7.4, _12, _15, _14, _9.4, _9.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_15.fld0 = [_7.4,_11.4,_7.4,_1,_6,_13];
_5 = !_11.4;
_2.0 = [(-7916284494856463549_i64),(-5565808647892695902_i64),(-2822561303242754645_i64),(-8957987932223335591_i64),(-7899311142164879904_i64),5142943401789983088_i64,2188258989890017549_i64];
_25.fld4 = (-4640478779576413064_i64) * 545679988958699320_i64;
_26.3 = 9223372036854775807_isize as i16;
_26.2 = -_25.fld4;
_9.0 = [_25.fld4,_25.fld4,_25.fld4,_26.2,_26.2,_25.fld4,_26.2];
_25.fld3.1 = core::ptr::addr_of!(_27.0);
_9.0 = [_26.2,_26.2,_25.fld4,_26.2,_26.2,_26.2,_26.2];
RET = core::ptr::addr_of!(_27.0);
_26.4 = _20;
_26.1 = &(*RET);
_11 = (_2.0, _7.1, _4.2, _4.0, _13);
_26.0 = _26.2 as i32;
Goto(bb8)
}
bb8 = {
_4.3 = _7.0;
_25.fld0 = Adt43::Variant1 { fld0: Field::<i128>(Variant(_21, 1), 0),fld1: _25.fld3.0,fld2: Field::<[u32; 6]>(Variant(_21, 1), 2),fld3: _25.fld3 };
_2.3 = _4.0;
_7.0 = [_25.fld4,_25.fld4,_25.fld4,_26.2,_26.2,_26.2,_25.fld4];
_7.0 = [_26.2,_25.fld4,_26.2,_25.fld4,_25.fld4,_25.fld4,_26.2];
place!(Field::<([u128; 5], *const u64)>(Variant(_21, 1), 3)).1 = core::ptr::addr_of!(_27.0);
_31 = (_7.1, 83_u8);
_16 = [12045_u16,21142_u16,43765_u16];
_27.1 = _9.3;
place!(Field::<[u128; 5]>(Variant(_25.fld0, 1), 1)) = [173062828918804012880834134882281137316_u128,72810391361585259540589953181502004415_u128,323588221465099689425271852557732375937_u128,4477518832920557980432039182768131788_u128,327912274020439949632888039974522265844_u128];
_26.3 = 55881_u16 as i16;
_11.1 = 9223372036854775807_isize as i16;
_31.0 = _11.1 ^ _2.1;
_25.fld3 = Field::<([u128; 5], *const u64)>(Variant(_25.fld0, 1), 3);
(*RET) = 7955219077633182617_u64;
_30 = 1603720270_u32 as f32;
_7.0 = _4.0;
Goto(bb9)
}
bb9 = {
_9 = (_27.1, _4.1, _2.2, _11.3, _2.4);
place!(Field::<[u32; 6]>(Variant(_21, 1), 2)) = Field::<[u32; 6]>(Variant(_25.fld0, 1), 2);
_15.fld0 = _8;
match _27.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb7,
7955219077633182617 => bb11,
_ => bb10
}
}
bb10 = {
SetDiscriminant(_21, 1);
_11.0 = [(-1323906571076861238_i64),1330215161954343322_i64,(-6840889660324172371_i64),5050530038879588010_i64,5105781376836096121_i64,4179142248928225699_i64,5449076561210550991_i64];
_14 = _2.4 != _7.4;
_7.3 = [(-1803754101896166130_i64),(-1322782496465855367_i64),(-324774969941608676_i64),8994375106705910810_i64,(-5645899167337141077_i64),(-9499403633525539_i64),697766757078648084_i64];
_18.0 = (-8066491256939554794_i64) as i128;
_7.1 = -_11.1;
_3 = !_11.4;
place!(Field::<i128>(Variant(_21, 1), 0)) = -_18.0;
_9.0 = [2454959355950608700_i64,(-8001704196321309375_i64),(-8634495842424500535_i64),8449166680517487289_i64,(-2671662726631694107_i64),4021480584013303432_i64,8008861164999919114_i64];
_11.3 = [6611007447386754651_i64,(-4468137263589127408_i64),(-6049992964537777774_i64),(-940317165153240507_i64),7775796991885302638_i64,(-276027481306948783_i64),7839645185809297007_i64];
_23 = [1581834807_u32,1244988932_u32];
_22 = [4_usize,16154437824268879633_usize,2233708558287619083_usize,0_usize,6_usize,7470121215972466870_usize,5_usize,16008791303764016743_usize];
_2.4 = !_5;
_9.1 = _7.1;
_11.2 = _7.2;
_25.fld2 = Field::<i128>(Variant(_21, 1), 0) as f64;
_4.3 = [(-812777393733987512_i64),(-2724249217185052148_i64),6082145010456780181_i64,(-1822327189872596943_i64),(-8252235716960148078_i64),3951733388191361634_i64,(-3031745514767148164_i64)];
_19 = _4.2;
_15.fld0 = _8;
_9.0 = _7.0;
_9 = (_7.0, _4.1, _7.2, _7.0, _2.4);
place!(Field::<[u32; 6]>(Variant(_21, 1), 2)) = [1797931187_u32,150541743_u32,573402384_u32,3896975176_u32,493484327_u32,1912846075_u32];
_15.fld0 = [_3,_2.4,_1,_11.4,_7.4,_2.4];
_25.fld3.0 = _17;
_9.4 = _3 ^ _7.4;
place!(Field::<i128>(Variant(_21, 1), 0)) = _18.0 | _18.0;
Call(_13 = fn11(_7.4, _4.4, _4.4, _4, _2.4, _8, _8, _4, _6, _7.4, _12, _15, _14, _9.4, _9.1), ReturnTo(bb7), UnwindUnreachable())
}
bb11 = {
_26.4 = _20;
_7.0 = [_25.fld4,_26.2,_25.fld4,_26.2,_26.2,_25.fld4,_26.2];
_31 = (_7.1, 249_u8);
place!(Field::<[u128; 5]>(Variant(_25.fld0, 1), 1)) = Field::<([u128; 5], *const u64)>(Variant(_25.fld0, 1), 3).0;
Call(_11.2 = core::intrinsics::transmute(_23), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_12 = _5 >= _13;
_29 = Adt44::Variant3 { fld0: _18 };
_8 = [_3,_7.4,_11.4,_9.4,_2.4,_2.4];
_27.1 = [_26.2,_25.fld4,_25.fld4,_26.2,_25.fld4,_25.fld4,_26.2];
SetDiscriminant(_25.fld0, 1);
_9.3 = [_26.2,_25.fld4,_25.fld4,_25.fld4,_25.fld4,_25.fld4,_25.fld4];
place!(Field::<([u128; 5], *const u64)>(Variant(_21, 1), 3)).0 = [266882155238029609697020877414091832760_u128,297785017791219190318796419296864493036_u128,28576261463351280268857518284494930784_u128,316196747798376973806879109715245880457_u128,38990943238177813966790383281342582041_u128];
place!(Field::<[u128; 5]>(Variant(_21, 1), 1)) = [154205837672800609219412197752294269260_u128,204283959870404846435597848893880362805_u128,184647638008146723913252954021067619790_u128,280405801848011435325691574929253025501_u128,48486958091918423065910924093709076796_u128];
place!(Field::<([u128; 5], *const u64)>(Variant(_21, 1), 3)) = _25.fld3;
_31.0 = _10;
SetDiscriminant(_21, 0);
_2 = (_11.0, _7.1, _9.2, _4.3, _9.4);
_9.2 = _31.1 as f64;
place!(Field::<([u128; 5], f64, i16)>(Variant(_21, 0), 1)).2 = _4.1;
Goto(bb13)
}
bb13 = {
_2.4 = !_3;
match _31.1 {
0 => bb1,
1 => bb2,
2 => bb11,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb12,
249 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
place!(Field::<(i128,)>(Variant(_29, 3), 0)).0 = _27.0 as i128;
_24 = [_26.2,_25.fld4,_26.2,_26.2,_25.fld4,_25.fld4];
_9.4 = _12;
_6 = _3 >= _7.4;
_7.3 = _11.3;
place!(Field::<([u128; 5], *const u64)>(Variant(_25.fld0, 1), 3)) = (_25.fld3.0, RET);
_9.3 = [_26.2,_25.fld4,_26.2,_26.2,_26.2,_26.2,_26.2];
_15.fld0 = [_3,_5,_14,_7.4,_2.4,_11.4];
SetDiscriminant(_29, 3);
_7.4 = !_11.4;
_15.fld0 = _8;
_18.0 = 163169352833598988548283985884997797810_i128 | (-46885802358076920223936616432484437725_i128);
_5 = _2.4 & _7.4;
_37.3 = _4.3;
_38 = _6 < _6;
_27 = (951488751844008388_u64, _7.3, _37.3, (-9223372036854775808_isize));
_11 = (_27.1, _9.1, _9.2, _9.0, _2.4);
_28 = _30 as u32;
_18.0 = 157346431400050863186253569872927272535_i128 & (-131184616605453427618250156613650373558_i128);
_36 = 104344294955942491987739476543473171083_u128 as isize;
_11 = _4;
place!(Field::<(i128,)>(Variant(_21, 0), 2)) = _18;
Goto(bb16)
}
bb16 = {
Call(_42 = dump_var(10_usize, 14_usize, Move(_14), 31_usize, Move(_31), 28_usize, Move(_28), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(10_usize, 3_usize, Move(_3), 5_usize, Move(_5), 1_usize, Move(_1), 12_usize, Move(_12)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(10_usize, 16_usize, Move(_16), 23_usize, Move(_23), 43_usize, _43, 43_usize, _43), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: ([i64; 7], i16, f64, [i64; 7], bool),mut _5: bool,mut _6: [bool; 6],mut _7: [bool; 6],mut _8: ([i64; 7], i16, f64, [i64; 7], bool),mut _9: bool,mut _10: bool,mut _11: bool,mut _12: Adt41,mut _13: bool,mut _14: bool,mut _15: i16) -> bool {
mir! {
type RET = bool;
let _16: i8;
let _17: i8;
let _18: char;
let _19: Adt46;
let _20: ();
let _21: ();
{
_8.0 = _8.3;
_10 = _8.4;
_12 = Adt41 { fld0: _6 };
_16 = (-51_i8);
_7 = _12.fld0;
_10 = _9;
_5 = !_4.4;
RET = _11 ^ _14;
_2 = !_13;
_4.2 = -_8.2;
_5 = _4.4;
_17 = _16;
_3 = _2;
_4 = (_8.0, _15, _8.2, _8.0, RET);
_8.4 = _13 <= _13;
_17 = _16 | _16;
_7 = [_1,_11,_3,_14,_3,_14];
_8.3 = _8.0;
_18 = '\u{f4327}';
_14 = _3;
_1 = _10;
_4.1 = !_8.1;
_11 = _1;
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(11_usize, 11_usize, Move(_11), 14_usize, Move(_14), 2_usize, Move(_2), 16_usize, Move(_16)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(11_usize, 10_usize, Move(_10), 13_usize, Move(_13), 3_usize, Move(_3), 21_usize, _21), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: Adt43,mut _6: ([i64; 7], i16, f64, [i64; 7], bool),mut _7: (u64, [i64; 7], [i64; 7], isize),mut _8: Adt40,mut _9: bool,mut _10: Adt43,mut _11: ([i64; 7], i16, f64, [i64; 7], bool),mut _12: Adt50) -> bool {
mir! {
type RET = bool;
let _13: [u128; 5];
let _14: ([u128; 5], f64, i16);
let _15: ([u128; 5], f64, i16);
let _16: char;
let _17: ([i64; 7], i16, f64, [i64; 7], bool);
let _18: ();
let _19: ();
{
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_8, 2), 1)).0 = (Field::<[u128; 5]>(Variant(_8, 2), 0), _12.fld2, _6.1);
SetDiscriminant(_10, 1);
_11 = _6;
_5 = Adt43::Variant1 { fld0: Field::<(i128,)>(Variant(_12.fld0, 2), 0).0,fld1: Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_8, 2), 1).0.0,fld2: Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_8, 2), 1).1,fld3: _12.fld3 };
SetDiscriminant(_12.fld0, 1);
place!(Field::<([u128; 5], *const u64)>(Variant(_12.fld0, 1), 3)) = Field::<([u128; 5], *const u64)>(Variant(_5, 1), 3);
place!(Field::<[u128; 5]>(Variant(_12.fld0, 1), 1)) = Field::<([u128; 5], *const u64)>(Variant(_12.fld0, 1), 3).0;
RET = _9;
place!(Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_8, 2), 1)).1 = [3537885098_u32,2772968488_u32,775874225_u32,1551084998_u32,2948239678_u32,3229234436_u32];
_11.2 = Field::<(([u128; 5], f64, i16), [u32; 6])>(Variant(_8, 2), 1).0.1;
_12.fld4 = -(-5084638145227532936_i64);
SetDiscriminant(_12.fld1, 1);
place!(Field::<[u32; 6]>(Variant(_10, 1), 2)) = [1354643269_u32,1454568156_u32,101829316_u32,1740130587_u32,1010415214_u32,1550916038_u32];
place!(Field::<i128>(Variant(_12.fld0, 1), 0)) = Field::<i128>(Variant(_5, 1), 0) & Field::<i128>(Variant(_5, 1), 0);
place!(Field::<([u128; 5], *const u64)>(Variant(_5, 1), 3)).0 = _12.fld3.0;
place!(Field::<[u128; 5]>(Variant(_10, 1), 1)) = [291668700534472415688141411329872884330_u128,329012414013612464886346621657699921911_u128,313838519242295168678033879542879099791_u128,227423561249938096073457691374474054183_u128,103462842458949391962139864990120469279_u128];
place!(Field::<([u128; 5], *const u64)>(Variant(_12.fld0, 1), 3)) = (Field::<([u128; 5], f64, i16)>(Variant(_8, 2), 3).0, _12.fld3.1);
_14.1 = _12.fld2;
_11.0 = _7.1;
place!(Field::<([u128; 5], *const u64)>(Variant(_10, 1), 3)) = Field::<([u128; 5], *const u64)>(Variant(_5, 1), 3);
SetDiscriminant(_5, 2);
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(12_usize, 9_usize, Move(_9), 2_usize, Move(_2), 4_usize, Move(_4), 19_usize, _19), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: isize,mut _6: bool,mut _7: bool,mut _8: bool) -> bool {
mir! {
type RET = bool;
let _9: Adt46;
let _10: isize;
let _11: Adt47;
let _12: Adt41;
let _13: ();
let _14: ();
{
RET = !_8;
_6 = _7;
RET = !_8;
_6 = _3 | _8;
_8 = !_6;
_6 = _2 | RET;
RET = _2 > _2;
_1 = _7 > RET;
RET = _4;
RET = _2 != _6;
_6 = _2;
_7 = _4 != _4;
_1 = !_8;
_5 = -(-9223372036854775808_isize);
_4 = _1 >= _2;
_2 = _7 > _6;
RET = !_4;
_4 = _7;
_12.fld0 = [RET,_7,_4,_7,_3,RET];
_4 = _6 <= _7;
_12.fld0 = [_4,RET,RET,_3,_1,_8];
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(13_usize, 4_usize, Move(_4), 3_usize, Move(_3), 7_usize, Move(_7), 1_usize, Move(_1)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool) -> bool {
mir! {
type RET = bool;
let _8: u16;
let _9: Adt49;
let _10: f64;
let _11: [usize; 8];
let _12: ();
let _13: ();
{
_5 = !_6;
RET = _2;
_7 = _6 | RET;
_6 = !_7;
RET = _3 ^ _5;
_6 = _4 == _3;
_4 = !_1;
RET = _2;
RET = _6 >= _1;
_2 = _1;
_1 = !RET;
_7 = _2;
_10 = 28976_u16 as f64;
_7 = _1;
_7 = _2 >= _5;
_5 = RET | RET;
_11 = [0_usize,7_usize,8907052068813253208_usize,3783039588552176016_usize,5083866298646592482_usize,3_usize,16076942462697350524_usize,10321682551149439273_usize];
_4 = _2 != _2;
_2 = _5;
_2 = !_3;
_11 = [1_usize,14724417502371623904_usize,10844147761078018415_usize,15816599689752822166_usize,10107711496462830947_usize,1548898274221851674_usize,8925828976327698683_usize,2606759529900507891_usize];
_5 = !RET;
Goto(bb1)
}
bb1 = {
Call(_12 = dump_var(14_usize, 4_usize, Move(_4), 2_usize, Move(_2), 1_usize, Move(_1), 6_usize, Move(_6)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: Adt41,mut _2: Adt41,mut _3: bool) -> bool {
mir! {
type RET = bool;
let _4: bool;
let _5: bool;
let _6: isize;
let _7: isize;
let _8: [i64; 7];
let _9: Adt49;
let _10: ();
let _11: ();
{
_1 = Adt41 { fld0: _2.fld0 };
_4 = _3;
RET = _3 == _4;
_1.fld0 = [_4,_3,_4,_3,RET,_3];
_3 = RET > _4;
_8 = [(-5712303491276834511_i64),(-2189524614495913776_i64),(-6792385817945497039_i64),5586719345045320880_i64,3881866425984013103_i64,(-658175422907821318_i64),(-3343803458637450443_i64)];
_6 = (-9223372036854775808_isize);
_7 = -_6;
_3 = RET;
_5 = _4;
_1 = Adt41 { fld0: _2.fld0 };
_1 = Adt41 { fld0: _2.fld0 };
_6 = _7;
_1 = Adt41 { fld0: _2.fld0 };
_5 = _3 == _3;
_1.fld0 = _2.fld0;
_2.fld0 = [RET,_5,RET,_3,_4,_4];
RET = !_5;
_4 = _3;
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(15_usize, 8_usize, Move(_8), 3_usize, Move(_3), 5_usize, Move(_5), 11_usize, _11), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: bool,mut _2: [u128; 5],mut _3: Adt43,mut _4: i32,mut _5: [i64; 6],mut _6: [i64; 6],mut _7: [i64; 6],mut _8: [i64; 6],mut _9: (u8,),mut _10: f32,mut _11: [u128; 5],mut _12: i32,mut _13: bool,mut _14: isize,mut _15: bool) -> [u16; 3] {
mir! {
type RET = [u16; 3];
let _16: isize;
let _17: (u64, [i64; 7], [i64; 7], isize);
let _18: u32;
let _19: Adt44;
let _20: f64;
let _21: f32;
let _22: [u32; 6];
let _23: i8;
let _24: i32;
let _25: bool;
let _26: f32;
let _27: Adt42;
let _28: f32;
let _29: i64;
let _30: f32;
let _31: ([u128; 5], f64, i16);
let _32: (i128,);
let _33: isize;
let _34: u16;
let _35: [i64; 7];
let _36: u64;
let _37: (u64, [i64; 7], [i64; 7], isize);
let _38: ([u128; 5], f64, i16);
let _39: Adt46;
let _40: f64;
let _41: ([i64; 7], i16, f64, [i64; 7], bool);
let _42: f64;
let _43: (i16, u8);
let _44: ();
let _45: ();
{
_9.0 = 160_u8;
_9 = (88_u8,);
place!(Field::<(i128,)>(Variant(_3, 2), 0)) = ((-49802055565489674841861750680115017705_i128),);
_2 = _11;
RET = [35132_u16,37272_u16,14965_u16];
_10 = (-4675_i16) as f32;
place!(Field::<(i128,)>(Variant(_3, 2), 0)).0 = -25533621233751330128908451830201960719_i128;
_8 = [5170644564675995014_i64,(-7732496012438179600_i64),2404227378402271439_i64,(-6327929900438159092_i64),(-320819019289155153_i64),(-1338783053948450108_i64)];
_14 = 9223372036854775807_isize;
_1 = _13 < _15;
Goto(bb1)
}
bb1 = {
_12 = _4 << _14;
RET = [40481_u16,38253_u16,53575_u16];
_15 = _1 > _1;
_6 = [(-8610121419793352765_i64),2301224504605477586_i64,6499119226838112289_i64,5478483288061743693_i64,7967926130231906920_i64,9221414264875638022_i64];
_10 = (-41_i8) as f32;
_17.2 = [6614063107013990379_i64,4253317358356491559_i64,5131434961555477751_i64,398618352696619402_i64,4942182794687768321_i64,(-6067481351024523549_i64),(-8257663145546219489_i64)];
_16 = !_14;
SetDiscriminant(_3, 0);
place!(Field::<(i128,)>(Variant(_3, 0), 2)).0 = 8240_i16 as i128;
_13 = _15;
_8 = [8587701397067215861_i64,1776814909778848045_i64,2977500489162054832_i64,(-1216872119429036854_i64),2980559895456801885_i64,(-2055076609220370858_i64)];
_17.0 = !3371251854888512181_u64;
_17.3 = -_14;
place!(Field::<(i128,)>(Variant(_3, 0), 2)).0 = (-118206257379470002884556330729719460458_i128) + 45639311994664436907585477462975767423_i128;
place!(Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1)).0 = [137962172760722596093200284748213006882_u128,332452056485318333704923375315457774782_u128,121096189760582052436903337393997967525_u128,322204919052740381365494315218360278414_u128,107190576690830654999186834173622575781_u128];
_9 = (9_u8,);
place!(Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1)).2 = (-13119_i16) >> Field::<(i128,)>(Variant(_3, 0), 2).0;
Call(place!(Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1)).0 = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_18 = !1807256042_u32;
place!(Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1)).1 = _18 as f64;
_2 = [221859043326723980926865257073005578419_u128,16369533103585395082194248321934426517_u128,277971287175744437923725337776779433783_u128,152387128933231276953056017166641114488_u128,193588312917491496037147625814744690228_u128];
place!(Field::<i32>(Variant(_3, 0), 0)) = _4 | _12;
RET = [52774_u16,60244_u16,51552_u16];
_10 = 450982084016442614_usize as f32;
_17.0 = 19679_u16 as u64;
_17.3 = _16;
_9.0 = 30_i8 as u8;
_17.2 = [(-4282989165620222258_i64),(-7937393366558211418_i64),3547465659899545676_i64,(-52436599325469310_i64),(-5339439388001086120_i64),8633362889741721363_i64,293982989737281995_i64];
RET = [55987_u16,24857_u16,33568_u16];
Goto(bb3)
}
bb3 = {
place!(Field::<(i128,)>(Variant(_3, 0), 2)).0 = Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1).1 as i128;
_2 = [149870380941406260331089182942807905292_u128,304594826028160967590874046807328975384_u128,132005717193464208006551528483085576555_u128,38627374763440034670818625830847250692_u128,3338236054517189554609511775027595020_u128];
_17.1 = _17.2;
_18 = !2437159108_u32;
_17.2 = _17.1;
place!(Field::<i16>(Variant(_3, 0), 4)) = 11126577046018420789_usize as i16;
_20 = -Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1).1;
_21 = -_10;
_14 = _16 << _12;
_19 = Adt44::Variant3 { fld0: Field::<(i128,)>(Variant(_3, 0), 2) };
place!(Field::<i128>(Variant(_3, 0), 3)) = Field::<(i128,)>(Variant(_3, 0), 2).0;
place!(Field::<i16>(Variant(_3, 0), 4)) = Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1).2;
SetDiscriminant(_3, 2);
RET = [44584_u16,55564_u16,711_u16];
place!(Field::<(i128,)>(Variant(_3, 2), 0)).0 = !Field::<(i128,)>(Variant(_19, 3), 0).0;
RET = [14612_u16,16103_u16,58569_u16];
_11 = [249988777535461340045421359727650401284_u128,210065104138081390431093918765117262331_u128,229872417517965157651149207503035269924_u128,253489997653730442804974509520627603986_u128,89636979445787963077771884345083379289_u128];
_10 = _14 as f32;
place!(Field::<(i128,)>(Variant(_19, 3), 0)) = Field::<(i128,)>(Variant(_3, 2), 0);
RET = [41429_u16,31980_u16,47672_u16];
_11 = [152859589775149225305525557535077215889_u128,111839660976486021546455822257356816818_u128,1089390445858077284268158553922441523_u128,133894526197488759500414522563408681969_u128,124804155445050953639099006654407091725_u128];
RET = [53121_u16,10627_u16,29631_u16];
_17.0 = !14865836561298576645_u64;
Goto(bb4)
}
bb4 = {
_12 = _4;
_16 = 1063625683282291078_usize as isize;
RET = [9441_u16,42026_u16,34687_u16];
_20 = _17.0 as f64;
_9 = (91_u8,);
_17.2 = _17.1;
place!(Field::<(i128,)>(Variant(_3, 2), 0)).0 = -Field::<(i128,)>(Variant(_19, 3), 0).0;
_9.0 = 113_u8 * 133_u8;
_14 = _17.0 as isize;
_14 = -_16;
_24 = 13022711583755367803112527896309394188_u128 as i32;
_7 = _6;
_24 = _21 as i32;
_9.0 = 236_u8 | 235_u8;
Goto(bb5)
}
bb5 = {
SetDiscriminant(_19, 1);
place!(Field::<i128>(Variant(_19, 1), 0)) = 7808_u16 as i128;
_9.0 = 126_u8 - 17_u8;
_4 = _24 + _24;
Goto(bb6)
}
bb6 = {
_17.2 = [(-5830009636276069669_i64),(-5551319022249951624_i64),(-2138058209357145034_i64),1480421337566502625_i64,(-3293531475438907660_i64),(-4304167996668367969_i64),1339415819496962542_i64];
place!(Field::<(i128,)>(Variant(_3, 2), 0)) = (Field::<i128>(Variant(_19, 1), 0),);
place!(Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4)).1 = 1767736400870942309_usize as f64;
_17.0 = 10094638221297155255_u64 - 6190115338537423120_u64;
_11 = [23023586190308186375950891147140987955_u128,234273061538542116434572947665928755442_u128,68022264986359256551781328440446983778_u128,90253588323616787606859973305132713558_u128,102481911725385756824315705780611711113_u128];
SetDiscriminant(_3, 1);
place!(Field::<[u32; 6]>(Variant(_3, 1), 2)) = [_18,_18,_18,_18,_18,_18];
_11 = [235784450503859851464615248309902121770_u128,315954465948349747809437169554861912976_u128,245670867006294522541927002049822646232_u128,321209597140459285082878651140228109872_u128,260248412603094348190396175190444542205_u128];
place!(Field::<([u128; 5], *const u64)>(Variant(_3, 1), 3)).0 = [186774678031930997365799144491374378905_u128,10447507133942355276648600645873959981_u128,64660612092742131977800847617962899079_u128,110737671828032789009956186726283528451_u128,198363975428997572468020623651136814791_u128];
place!(Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4)) = (_2, _20, (-1243_i16));
_7 = _8;
_15 = _1;
_30 = -_10;
_14 = _17.3 >> _16;
_1 = _13 >= _13;
_9 = (207_u8,);
_33 = -_14;
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [213060823572447628561245119475526385414_u128,26998291946105564452311245650092929820_u128,247071603046011887823812030272325363464_u128,51777408746152378129090024697460760003_u128,136008185518221091891931198499965556103_u128];
_8 = _7;
Goto(bb7)
}
bb7 = {
_34 = 7111_u16 | 30774_u16;
_1 = !_15;
match Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4).2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
340282366920938463463374607431768210213 => bb10,
_ => bb9
}
}
bb8 = {
_12 = _4;
_16 = 1063625683282291078_usize as isize;
RET = [9441_u16,42026_u16,34687_u16];
_20 = _17.0 as f64;
_9 = (91_u8,);
_17.2 = _17.1;
place!(Field::<(i128,)>(Variant(_3, 2), 0)).0 = -Field::<(i128,)>(Variant(_19, 3), 0).0;
_9.0 = 113_u8 * 133_u8;
_14 = _17.0 as isize;
_14 = -_16;
_24 = 13022711583755367803112527896309394188_u128 as i32;
_7 = _6;
_24 = _21 as i32;
_9.0 = 236_u8 | 235_u8;
Goto(bb5)
}
bb9 = {
SetDiscriminant(_19, 1);
place!(Field::<i128>(Variant(_19, 1), 0)) = 7808_u16 as i128;
_9.0 = 126_u8 - 17_u8;
_4 = _24 + _24;
Goto(bb6)
}
bb10 = {
_9.0 = 111_u8;
_29 = Field::<i128>(Variant(_19, 1), 0) as i64;
place!(Field::<i128>(Variant(_19, 1), 0)) = -(-160321354023637496764087581433494248168_i128);
match Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4).2 {
340282366920938463463374607431768210213 => bb12,
_ => bb11
}
}
bb11 = {
_12 = _4;
_16 = 1063625683282291078_usize as isize;
RET = [9441_u16,42026_u16,34687_u16];
_20 = _17.0 as f64;
_9 = (91_u8,);
_17.2 = _17.1;
place!(Field::<(i128,)>(Variant(_3, 2), 0)).0 = -Field::<(i128,)>(Variant(_19, 3), 0).0;
_9.0 = 113_u8 * 133_u8;
_14 = _17.0 as isize;
_14 = -_16;
_24 = 13022711583755367803112527896309394188_u128 as i32;
_7 = _6;
_24 = _21 as i32;
_9.0 = 236_u8 | 235_u8;
Goto(bb5)
}
bb12 = {
_28 = _10;
_32 = (Field::<i128>(Variant(_19, 1), 0),);
RET = [_34,_34,_34];
_35 = _17.1;
match Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4).2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb11,
4 => bb5,
5 => bb13,
6 => bb14,
340282366920938463463374607431768210213 => bb16,
_ => bb15
}
}
bb13 = {
_17.2 = [(-5830009636276069669_i64),(-5551319022249951624_i64),(-2138058209357145034_i64),1480421337566502625_i64,(-3293531475438907660_i64),(-4304167996668367969_i64),1339415819496962542_i64];
place!(Field::<(i128,)>(Variant(_3, 2), 0)) = (Field::<i128>(Variant(_19, 1), 0),);
place!(Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4)).1 = 1767736400870942309_usize as f64;
_17.0 = 10094638221297155255_u64 - 6190115338537423120_u64;
_11 = [23023586190308186375950891147140987955_u128,234273061538542116434572947665928755442_u128,68022264986359256551781328440446983778_u128,90253588323616787606859973305132713558_u128,102481911725385756824315705780611711113_u128];
SetDiscriminant(_3, 1);
place!(Field::<[u32; 6]>(Variant(_3, 1), 2)) = [_18,_18,_18,_18,_18,_18];
_11 = [235784450503859851464615248309902121770_u128,315954465948349747809437169554861912976_u128,245670867006294522541927002049822646232_u128,321209597140459285082878651140228109872_u128,260248412603094348190396175190444542205_u128];
place!(Field::<([u128; 5], *const u64)>(Variant(_3, 1), 3)).0 = [186774678031930997365799144491374378905_u128,10447507133942355276648600645873959981_u128,64660612092742131977800847617962899079_u128,110737671828032789009956186726283528451_u128,198363975428997572468020623651136814791_u128];
place!(Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4)) = (_2, _20, (-1243_i16));
_7 = _8;
_15 = _1;
_30 = -_10;
_14 = _17.3 >> _16;
_1 = _13 >= _13;
_9 = (207_u8,);
_33 = -_14;
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [213060823572447628561245119475526385414_u128,26998291946105564452311245650092929820_u128,247071603046011887823812030272325363464_u128,51777408746152378129090024697460760003_u128,136008185518221091891931198499965556103_u128];
_8 = _7;
Goto(bb7)
}
bb14 = {
place!(Field::<(i128,)>(Variant(_3, 0), 2)).0 = Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1).1 as i128;
_2 = [149870380941406260331089182942807905292_u128,304594826028160967590874046807328975384_u128,132005717193464208006551528483085576555_u128,38627374763440034670818625830847250692_u128,3338236054517189554609511775027595020_u128];
_17.1 = _17.2;
_18 = !2437159108_u32;
_17.2 = _17.1;
place!(Field::<i16>(Variant(_3, 0), 4)) = 11126577046018420789_usize as i16;
_20 = -Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1).1;
_21 = -_10;
_14 = _16 << _12;
_19 = Adt44::Variant3 { fld0: Field::<(i128,)>(Variant(_3, 0), 2) };
place!(Field::<i128>(Variant(_3, 0), 3)) = Field::<(i128,)>(Variant(_3, 0), 2).0;
place!(Field::<i16>(Variant(_3, 0), 4)) = Field::<([u128; 5], f64, i16)>(Variant(_3, 0), 1).2;
SetDiscriminant(_3, 2);
RET = [44584_u16,55564_u16,711_u16];
place!(Field::<(i128,)>(Variant(_3, 2), 0)).0 = !Field::<(i128,)>(Variant(_19, 3), 0).0;
RET = [14612_u16,16103_u16,58569_u16];
_11 = [249988777535461340045421359727650401284_u128,210065104138081390431093918765117262331_u128,229872417517965157651149207503035269924_u128,253489997653730442804974509520627603986_u128,89636979445787963077771884345083379289_u128];
_10 = _14 as f32;
place!(Field::<(i128,)>(Variant(_19, 3), 0)) = Field::<(i128,)>(Variant(_3, 2), 0);
RET = [41429_u16,31980_u16,47672_u16];
_11 = [152859589775149225305525557535077215889_u128,111839660976486021546455822257356816818_u128,1089390445858077284268158553922441523_u128,133894526197488759500414522563408681969_u128,124804155445050953639099006654407091725_u128];
RET = [53121_u16,10627_u16,29631_u16];
_17.0 = !14865836561298576645_u64;
Goto(bb4)
}
bb15 = {
SetDiscriminant(_19, 1);
place!(Field::<i128>(Variant(_19, 1), 0)) = 7808_u16 as i128;
_9.0 = 126_u8 - 17_u8;
_4 = _24 + _24;
Goto(bb6)
}
bb16 = {
place!(Field::<[u128; 5]>(Variant(_3, 1), 1)) = [285341656160948308485389380048685913263_u128,169227082389825757006814304846093798065_u128,283033493975430508377552894264152507172_u128,119858121926201658439787061959274755955_u128,339377989441261410132590888474697195247_u128];
place!(Field::<[u32; 6]>(Variant(_3, 1), 2)) = [_18,_18,_18,_18,_18,_18];
_29 = !1835051736841634308_i64;
_39 = Adt46::Variant0 { fld0: _6 };
_37.2 = [_29,_29,_29,_29,_29,_29,_29];
_17.1 = _35;
_40 = -Field::<([u128; 5], f64, i16)>(Variant(_19, 1), 4).1;
Goto(bb17)
}
bb17 = {
Call(_44 = dump_var(16_usize, 16_usize, Move(_16), 13_usize, Move(_13), 12_usize, Move(_12), 29_usize, Move(_29)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(16_usize, 32_usize, Move(_32), 9_usize, Move(_9), 33_usize, Move(_33), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_44 = dump_var(16_usize, 24_usize, Move(_24), 7_usize, Move(_7), 34_usize, Move(_34), 45_usize, _45), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{a3602}'), std::hint::black_box(11414951215231077274_u64), std::hint::black_box(79_i8), std::hint::black_box(25492_i16), std::hint::black_box(1024115408_i32), std::hint::black_box(6434905414315935872_i64), std::hint::black_box((-76883147869281066744132251771173437090_i128)), std::hint::black_box(49035038660215315511356905177697156821_u128), std::hint::black_box(490_u16));
                
            }
#[derive(Debug)]
pub enum Adt40 {
Variant0{
fld0: ([i64; 7], i16, f64, [i64; 7], bool),
fld1: char,
fld2: ([u128; 5], *const u64),
fld3: u16,
fld4: (([u128; 5], f64, i16), [u32; 6]),
fld5: [u128; 5],
fld6: usize,
fld7: [i64; 7],

},
Variant1{
fld0: [bool; 6],
fld1: (i128,),
fld2: isize,
fld3: ([u128; 5], f64, i16),

},
Variant2{
fld0: [u128; 5],
fld1: (([u128; 5], f64, i16), [u32; 6]),
fld2: isize,
fld3: ([u128; 5], f64, i16),

},
Variant3{
fld0: char,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt41 {
fld0: [bool; 6],
}
#[derive(Debug,Copy,Clone)]
pub enum Adt42 {
Variant0{
fld0: i128,
fld1: (([u128; 5], f64, i16), [u32; 6]),
fld2: u128,
fld3: f64,
fld4: *const u64,
fld5: i32,

},
Variant1{
fld0: [u128; 5],
fld1: (u64, [i64; 7], [i64; 7], isize),
fld2: u32,
fld3: i8,
fld4: f64,
fld5: ([u128; 5], f64, i16),
fld6: u128,
fld7: usize,

},
Variant2{
fld0: bool,
fld1: char,
fld2: (([u128; 5], f64, i16), [u32; 6]),
fld3: ([u128; 5], *const u64),
fld4: i16,
fld5: [i64; 7],
fld6: u64,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: i32,
fld1: ([u128; 5], f64, i16),
fld2: (i128,),
fld3: i128,
fld4: i16,

},
Variant1{
fld0: i128,
fld1: [u128; 5],
fld2: [u32; 6],
fld3: ([u128; 5], *const u64),

},
Variant2{
fld0: (i128,),

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: u16,
fld1: [bool; 6],
fld2: f64,
fld3: i32,
fld4: ([u128; 5], f64, i16),

},
Variant1{
fld0: i128,
fld1: char,
fld2: Adt40,
fld3: f64,
fld4: ([u128; 5], f64, i16),
fld5: Adt42,

},
Variant2{
fld0: u8,
fld1: [isize; 4],
fld2: isize,
fld3: u64,

},
Variant3{
fld0: (i128,),

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: Adt43,
fld1: char,
fld2: [u32; 2],
fld3: (i128,),
fld4: Adt40,
fld5: Adt41,
fld6: i64,
fld7: u64,

},
Variant1{
fld0: (u8,),
fld1: [u16; 3],
fld2: isize,
fld3: ([u128; 5], f64, i16),
fld4: Adt42,
fld5: (u64, [i64; 7], [i64; 7], isize),
fld6: [u32; 2],

},
Variant2{
fld0: *const u64,
fld1: (u8,),

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: [i64; 6],

},
Variant1{
fld0: [u128; 5],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (u8,),
fld1: char,
fld2: [i64; 7],
fld3: (i16, u8),
fld4: Adt41,
fld5: [i64; 6],
fld6: i64,
fld7: u128,

},
Variant1{
fld0: [i64; 7],
fld1: char,
fld2: Adt43,
fld3: f32,
fld4: [u32; 2],
fld5: [usize; 8],
fld6: (u64, [i64; 7], [i64; 7], isize),

},
Variant2{
fld0: (u8,),

},
Variant3{
fld0: u128,
fld1: Adt43,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: u16,
fld1: (u8,),
fld2: Adt42,
fld3: ([i64; 7], i16, f64, [i64; 7], bool),
fld4: i128,
fld5: [bool; 6],

},
Variant1{
fld0: Adt42,

},
Variant2{
fld0: [u32; 2],
fld1: [i64; 6],

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: Adt48,
fld1: char,
fld2: isize,
fld3: i8,
fld4: Adt40,
fld5: Adt42,
fld6: Adt41,

},
Variant1{
fld0: Adt44,
fld1: u64,
fld2: Adt42,
fld3: *const u64,
fld4: (u8,),

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: Adt43,
fld1: Adt46,
fld2: f64,
fld3: ([u128; 5], *const u64),
fld4: i64,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: Adt45,
fld1: f64,
fld2: usize,

},
Variant1{
fld0: (i16, u8),
fld1: [bool; 6],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: ([u128; 5], *const u64),
fld1: [bool; 6],
fld2: Adt48,
fld3: [u128; 5],

},
Variant1{
fld0: Adt46,
fld1: [u128; 5],
fld2: Adt47,
fld3: i8,
fld4: [bool; 6],
fld5: ([u128; 5], *const u64),
fld6: f32,
fld7: [u128; 3],

},
Variant2{
fld0: usize,
fld1: Adt41,
fld2: Adt47,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt53 {
Variant0{
fld0: i128,
fld1: i32,
fld2: *const u64,

},
Variant1{
fld0: (([u128; 5], f64, i16), [u32; 6]),
fld1: [i64; 7],
fld2: u128,
fld3: usize,
fld4: [u32; 6],
fld5: f32,
fld6: (u8,),
fld7: [i64; 6],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [u128; 5],
fld1: Adt46,
fld2: [isize; 4],
fld3: ([i64; 7], i16, f64, [i64; 7], bool),

},
Variant1{
fld0: (u8,),
fld1: [i64; 7],
fld2: isize,
fld3: [bool; 6],
fld4: *const u64,
fld5: [u128; 3],
fld6: Adt48,
fld7: Adt40,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: Adt41,
fld1: u32,

},
Variant1{
fld0: Adt41,
fld1: Adt47,
fld2: u16,

},
Variant2{
fld0: f64,
fld1: [bool; 6],
fld2: Adt48,
fld3: i32,

},
Variant3{
fld0: ([u128; 5], f64, i16),
fld1: char,
fld2: f64,
fld3: ([u128; 5], *const u64),

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: u16,
fld1: Adt44,
}

