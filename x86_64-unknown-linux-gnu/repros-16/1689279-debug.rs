#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> f32 {
mir! {
type RET = f32;
let _15: u8;
let _16: i32;
let _17: (u16, char, &'static i64, char);
let _18: f32;
let _19: Adt42;
let _20: isize;
let _21: f32;
let _22: ([i64; 5],);
let _23: bool;
let _24: Adt43;
let _25: *const &'static i64;
let _26: f32;
let _27: [i64; 5];
let _28: [i64; 5];
let _29: f32;
let _30: Adt56;
let _31: [i64; 5];
let _32: isize;
let _33: &'static i64;
let _34: ();
let _35: ();
{
_13 = !14097823929709025729_u64;
_14 = (-48_i8) as u128;
_3 = 2359021314_u32 as isize;
RET = 27690_i16 as f32;
_1 = !true;
_9 = 1925327210849353951_usize;
_4 = 48_i8;
_17.0 = 53_u8 as u16;
_7 = (-4377973019480222253_i64) * (-2323268471808119266_i64);
_10 = 112_u8;
_3 = 9223372036854775807_isize;
_18 = RET;
_2 = '\u{c1bc1}';
_17.0 = 40527587058437645919913945837261660614_i128 as u16;
_20 = -_3;
_5 = -7328_i16;
_8 = 96196978191628409535051517503905347071_i128;
_17.2 = &_7;
_14 = 88069585349050069582870505119432687456_u128;
_3 = _17.0 as isize;
_21 = -RET;
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
96196978191628409535051517503905347071 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11 = _17.0 >> _17.0;
_12 = 2398443963_u32;
_15 = !_10;
_3 = !_20;
_18 = _8 as f32;
_8 = 93082931904911106929509756892433894112_i128;
_1 = _7 <= _7;
_6 = -(-715406205_i32);
_13 = 2167481466287079995_u64 ^ 17237684785227447956_u64;
_20 = _8 as isize;
_4 = -(-115_i8);
Call(_17.3 = fn1(_7, _1, _1, _20, _14, _5, _2, _20, _14, _20, _10, _2, Move(_17.2), _15, _11), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_15 = _10;
_16 = _4 as i32;
_10 = _15;
_20 = _3 & _3;
_18 = _20 as f32;
_2 = _17.3;
_16 = _4 as i32;
_22.0 = [_7,_7,_7,_7,_7];
_3 = -_20;
_17.2 = &_7;
_7 = _15 as i64;
_5 = 5380_i16;
_23 = _1 ^ _1;
_21 = _11 as f32;
_17.0 = _16 as u16;
_17.1 = _17.3;
_5 = 25848_i16;
_19 = Adt42::Variant1 { fld0: _22 };
_17.2 = &_7;
_17.1 = _2;
Goto(bb9)
}
bb9 = {
_7 = _5 as i64;
_21 = _18 * RET;
_17.1 = _17.3;
_17.1 = _17.3;
_22.0 = [_7,_7,_7,_7,_7];
_7 = !(-7203953730700187494_i64);
_9 = 15390627993804380790_usize;
place!(Field::<([i64; 5],)>(Variant(_19, 1), 0)).0 = [_7,_7,_7,_7,_7];
_17.3 = _17.1;
RET = _18;
_17.3 = _2;
_22.0 = Field::<([i64; 5],)>(Variant(_19, 1), 0).0;
SetDiscriminant(_19, 3);
place!(Field::<i8>(Variant(_19, 3), 3)) = _4 | _4;
place!(Field::<[i64; 5]>(Variant(_19, 3), 1)) = [_7,_7,_7,_7,_7];
_12 = 574261888_u32 >> _20;
_17.0 = _6 as u16;
_22.0 = [_7,_7,_7,_7,_7];
place!(Field::<u8>(Variant(_19, 3), 0)) = _10;
place!(Field::<u8>(Variant(_19, 3), 0)) = Field::<i8>(Variant(_19, 3), 3) as u8;
_23 = _7 <= _7;
_4 = Field::<i8>(Variant(_19, 3), 3);
_17.0 = _11;
Goto(bb10)
}
bb10 = {
_15 = _10;
_19 = Adt42::Variant1 { fld0: _22 };
_22.0 = Field::<([i64; 5],)>(Variant(_19, 1), 0).0;
_2 = _17.1;
_23 = !_1;
_17.2 = &_7;
_8 = (-109062109346122161038385040949223266873_i128);
_3 = -_20;
_17.0 = _11 ^ _11;
_4 = 45_i8;
_1 = _17.0 != _17.0;
_2 = _17.3;
RET = _21 - _21;
_15 = !_10;
SetDiscriminant(_19, 2);
_2 = _17.1;
_15 = !_10;
_21 = RET;
RET = _13 as f32;
_31 = _22.0;
_19 = Adt42::Variant1 { fld0: _22 };
Goto(bb11)
}
bb11 = {
_2 = _17.3;
_13 = _18 as u64;
SetDiscriminant(_19, 1);
place!(Field::<([i64; 5],)>(Variant(_19, 1), 0)).0 = [_7,_7,_7,_7,_7];
_17.0 = !_11;
_13 = _8 as u64;
_28 = [_7,_7,_7,_7,_7];
_2 = _17.3;
_32 = _3 * _20;
_22 = (_28,);
SetDiscriminant(_19, 0);
_5 = !9566_i16;
_8 = (-63505813616735913762281834680874324050_i128) + (-56726381015426244243107043679440745334_i128);
_8 = 99006001462400829297274601774901486334_i128 >> _9;
_14 = !103738877792906430608088160146704306612_u128;
match _10 {
0 => bb12,
1 => bb13,
112 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
_11 = _17.0 >> _17.0;
_12 = 2398443963_u32;
_15 = !_10;
_3 = !_20;
_18 = _8 as f32;
_8 = 93082931904911106929509756892433894112_i128;
_1 = _7 <= _7;
_6 = -(-715406205_i32);
_13 = 2167481466287079995_u64 ^ 17237684785227447956_u64;
_20 = _8 as isize;
_4 = -(-115_i8);
Call(_17.3 = fn1(_7, _1, _1, _20, _14, _5, _2, _20, _14, _20, _10, _2, Move(_17.2), _15, _11), ReturnTo(bb8), UnwindUnreachable())
}
bb14 = {
_15 = _10;
_16 = _4 as i32;
_10 = _15;
_20 = _3 & _3;
_18 = _20 as f32;
_2 = _17.3;
_16 = _4 as i32;
_22.0 = [_7,_7,_7,_7,_7];
_3 = -_20;
_17.2 = &_7;
_7 = _15 as i64;
_5 = 5380_i16;
_23 = _1 ^ _1;
_21 = _11 as f32;
_17.0 = _16 as u16;
_17.1 = _17.3;
_5 = 25848_i16;
_19 = Adt42::Variant1 { fld0: _22 };
_17.2 = &_7;
_17.1 = _2;
Goto(bb9)
}
bb15 = {
place!(Field::<u32>(Variant(_19, 0), 0)) = !_12;
_3 = _20 * _32;
place!(Field::<isize>(Variant(_19, 0), 2)) = _17.1 as isize;
place!(Field::<*const i128>(Variant(_19, 0), 3)) = core::ptr::addr_of!(_8);
_23 = _1;
_17.1 = _17.3;
_20 = _3;
place!(Field::<*const i128>(Variant(_19, 0), 3)) = core::ptr::addr_of!(_8);
_20 = _11 as isize;
_15 = _10;
_21 = _3 as f32;
_18 = RET;
_17.0 = _11 * _11;
_33 = Move(_17.2);
_16 = -_6;
_9 = _32 as usize;
Goto(bb16)
}
bb16 = {
Call(_34 = dump_var(0_usize, 11_usize, Move(_11), 13_usize, Move(_13), 28_usize, Move(_28), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(0_usize, 5_usize, Move(_5), 9_usize, Move(_9), 1_usize, Move(_1), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_34 = dump_var(0_usize, 10_usize, Move(_10), 4_usize, Move(_4), 2_usize, Move(_2), 35_usize, _35), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i64,mut _2: bool,mut _3: bool,mut _4: isize,mut _5: u128,mut _6: i16,mut _7: char,mut _8: isize,mut _9: u128,mut _10: isize,mut _11: u8,mut _12: char,mut _13: &'static i64,mut _14: u8,mut _15: u16) -> char {
mir! {
type RET = char;
let _16: [u32; 6];
let _17: u8;
let _18: char;
let _19: char;
let _20: Adt47;
let _21: f32;
let _22: Adt51;
let _23: isize;
let _24: i16;
let _25: [u64; 2];
let _26: f64;
let _27: *const [u64; 2];
let _28: [i64; 5];
let _29: i32;
let _30: [u32; 7];
let _31: f32;
let _32: isize;
let _33: bool;
let _34: (isize, (u16, char, &'static i64, char), f64);
let _35: isize;
let _36: Adt40;
let _37: Adt46;
let _38: isize;
let _39: Adt54;
let _40: [i64; 5];
let _41: ();
let _42: ();
{
_7 = _12;
RET = _7;
_6 = 25659_i16;
_7 = RET;
_17 = _8 as u8;
Goto(bb1)
}
bb1 = {
_19 = _7;
_13 = &_1;
_14 = _11 >> _9;
_13 = &(*_13);
_20.fld2 = _10;
_11 = _14;
_20.fld0 = [_17,_11,_14,_14,_11,_11];
_20.fld4 = [3005042975_u32,2771058690_u32,610193317_u32,3331856675_u32,2492900966_u32,2432545323_u32,3600879026_u32];
_17 = !_14;
_11 = 5086922591869107003_usize as u8;
Call(_20.fld0 = fn2(_4, (*_13), _20.fld4, _2, _4, _8, _14, _17, _1, _20.fld4, _2, _7, _5, _3, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5 = _3 as u128;
_1 = (-658749860096136887_i64);
_19 = _7;
_21 = 504778596071024960_usize as f32;
_20.fld4 = [1838914248_u32,394206892_u32,3464359124_u32,568367714_u32,483881976_u32,1196095250_u32,1942514879_u32];
_15 = 8462759040788220084_u64 as u16;
_20.fld0 = [_11,_11,_17,_14,_14,_11];
_8 = !_20.fld2;
_10 = _1 as isize;
RET = _12;
_20.fld3 = [14944188213772445928_u64,11567104001870847576_u64];
_20.fld3 = [12013512694217974271_u64,12373908533335194681_u64];
_20.fld0 = [_11,_14,_17,_17,_14,_11];
match _1 {
0 => bb3,
340282366920938463462715857571672074569 => bb5,
_ => bb4
}
}
bb3 = {
_19 = _7;
_13 = &_1;
_14 = _11 >> _9;
_13 = &(*_13);
_20.fld2 = _10;
_11 = _14;
_20.fld0 = [_17,_11,_14,_14,_11,_11];
_20.fld4 = [3005042975_u32,2771058690_u32,610193317_u32,3331856675_u32,2492900966_u32,2432545323_u32,3600879026_u32];
_17 = !_14;
_11 = 5086922591869107003_usize as u8;
Call(_20.fld0 = fn2(_4, (*_13), _20.fld4, _2, _4, _8, _14, _17, _1, _20.fld4, _2, _7, _5, _3, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_18 = _19;
_11 = _14 + _14;
_17 = _11 ^ _11;
_9 = _6 as u128;
_14 = _2 as u8;
_1 = !3363143040060229200_i64;
_10 = !_20.fld2;
_26 = _6 as f64;
_9 = 120_i8 as u128;
_19 = RET;
_6 = 20164_i16 * 31715_i16;
_6 = 23214_i16;
_20.fld3 = [18040247221878769796_u64,16562874911805292510_u64];
_5 = _9;
_24 = 2626154438_u32 as i16;
_28 = [_1,_1,_1,_1,_1];
_10 = _8 + _4;
_5 = 37368495590874121245554867044602929264_i128 as u128;
_24 = _19 as i16;
_20.fld4 = [3102217359_u32,1431000561_u32,1129684892_u32,896072113_u32,804297943_u32,1937752219_u32,3899961310_u32];
_6 = _24;
_23 = _8;
_11 = _17;
_19 = RET;
_6 = _24;
_20.fld4 = [1021038817_u32,823161434_u32,4145023152_u32,545424082_u32,693225601_u32,700570330_u32,499323616_u32];
_21 = 2948857924649038213_u64 as f32;
Goto(bb6)
}
bb6 = {
_23 = _8 - _20.fld2;
_16 = [2980218256_u32,2538136150_u32,3177792315_u32,1957097270_u32,169855346_u32,2828391240_u32];
_20.fld0 = [_14,_14,_11,_17,_17,_17];
_7 = _12;
_1 = (-5879555548028829447_i64);
_14 = !_17;
_28 = [_1,_1,_1,_1,_1];
_19 = _7;
Goto(bb7)
}
bb7 = {
_3 = _2 | _2;
RET = _7;
_20.fld0 = [_17,_17,_11,_14,_14,_14];
_23 = _10;
_30 = [159145942_u32,367209955_u32,2775866369_u32,1465084119_u32,677863479_u32,3152559327_u32,2906801310_u32];
_20.fld2 = -_23;
_25 = [7030810528810940446_u64,2180722756273932154_u64];
_7 = _12;
_31 = _15 as f32;
_10 = _5 as isize;
_26 = _11 as f64;
_17 = _14 * _14;
RET = _12;
_9 = _5 ^ _5;
_33 = _17 < _17;
_20.fld1 = _9 as i32;
RET = _12;
_16 = [2118080083_u32,1804892920_u32,2604701645_u32,3153157858_u32,353838468_u32,3241403839_u32];
_34.2 = 3043993932_u32 as f64;
_30 = [2615125677_u32,2553783833_u32,571404272_u32,2013812817_u32,1464322659_u32,1570272271_u32,2886374300_u32];
_6 = _24;
_34.1.3 = RET;
_34.1.1 = _34.1.3;
Call(_6 = fn19(Move(_20), _33), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_20.fld0 = [_11,_17,_14,_14,_17,_14];
_34.1.3 = _19;
_34.1.3 = _7;
_23 = _31 as isize;
_32 = _4;
_34.0 = _23;
_30 = [2086997221_u32,373298414_u32,1294086148_u32,3044422628_u32,3896584312_u32,2948528393_u32,1980028390_u32];
_20.fld3 = _25;
_18 = _19;
RET = _19;
_34.2 = _11 as f64;
_27 = core::ptr::addr_of!(_25);
_31 = _21;
_10 = -_8;
_17 = _14;
_35 = !_32;
_33 = _2;
Goto(bb9)
}
bb9 = {
_20.fld2 = _34.0 << _11;
_1 = _18 as i64;
_13 = &_1;
_24 = 75_i8 as i16;
RET = _19;
_34.1.0 = _15 << _14;
_20.fld0 = [_17,_14,_11,_17,_17,_14];
_20.fld1 = !(-1496707805_i32);
_30 = [533079218_u32,1930879268_u32,990637564_u32,2217329138_u32,2942125876_u32,606025651_u32,2241109443_u32];
_20.fld2 = 63377932298021835659336213105472388297_i128 as isize;
_1 = 8354745927765057415_i64;
Call(_20.fld2 = core::intrinsics::bswap(_23), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_34.1.1 = _7;
_20.fld3 = (*_27);
Goto(bb11)
}
bb11 = {
_17 = !_11;
_29 = -_20.fld1;
_33 = !_3;
_24 = _6;
_30 = [930315894_u32,4192670443_u32,3517629980_u32,2307522354_u32,2991180803_u32,2100559051_u32,3465402217_u32];
_26 = _34.2 + _34.2;
_28 = [_1,_1,_1,_1,_1];
_9 = _5;
_13 = &_1;
_20.fld4 = [3430329240_u32,3256262308_u32,2098201681_u32,2129813830_u32,2950735585_u32,1340565984_u32,3540675687_u32];
_34.1.2 = &_1;
_17 = _11;
_35 = _20.fld2 << _1;
_34.1 = (_15, _18, Move(_13), _7);
_21 = -_31;
_20.fld3 = (*_27);
_38 = _4;
_14 = (-90_i8) as u8;
_5 = _9 >> _6;
_26 = -_34.2;
RET = _18;
_20.fld3 = [16770493857415061902_u64,12712458006021974882_u64];
match _1 {
0 => bb1,
1 => bb2,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
8354745927765057415 => bb17,
_ => bb16
}
}
bb12 = {
_18 = _19;
_11 = _14 + _14;
_17 = _11 ^ _11;
_9 = _6 as u128;
_14 = _2 as u8;
_1 = !3363143040060229200_i64;
_10 = !_20.fld2;
_26 = _6 as f64;
_9 = 120_i8 as u128;
_19 = RET;
_6 = 20164_i16 * 31715_i16;
_6 = 23214_i16;
_20.fld3 = [18040247221878769796_u64,16562874911805292510_u64];
_5 = _9;
_24 = 2626154438_u32 as i16;
_28 = [_1,_1,_1,_1,_1];
_10 = _8 + _4;
_5 = 37368495590874121245554867044602929264_i128 as u128;
_24 = _19 as i16;
_20.fld4 = [3102217359_u32,1431000561_u32,1129684892_u32,896072113_u32,804297943_u32,1937752219_u32,3899961310_u32];
_6 = _24;
_23 = _8;
_11 = _17;
_19 = RET;
_6 = _24;
_20.fld4 = [1021038817_u32,823161434_u32,4145023152_u32,545424082_u32,693225601_u32,700570330_u32,499323616_u32];
_21 = 2948857924649038213_u64 as f32;
Goto(bb6)
}
bb13 = {
_20.fld2 = _34.0 << _11;
_1 = _18 as i64;
_13 = &_1;
_24 = 75_i8 as i16;
RET = _19;
_34.1.0 = _15 << _14;
_20.fld0 = [_17,_14,_11,_17,_17,_14];
_20.fld1 = !(-1496707805_i32);
_30 = [533079218_u32,1930879268_u32,990637564_u32,2217329138_u32,2942125876_u32,606025651_u32,2241109443_u32];
_20.fld2 = 63377932298021835659336213105472388297_i128 as isize;
_1 = 8354745927765057415_i64;
Call(_20.fld2 = core::intrinsics::bswap(_23), ReturnTo(bb10), UnwindUnreachable())
}
bb14 = {
_5 = _3 as u128;
_1 = (-658749860096136887_i64);
_19 = _7;
_21 = 504778596071024960_usize as f32;
_20.fld4 = [1838914248_u32,394206892_u32,3464359124_u32,568367714_u32,483881976_u32,1196095250_u32,1942514879_u32];
_15 = 8462759040788220084_u64 as u16;
_20.fld0 = [_11,_11,_17,_14,_14,_11];
_8 = !_20.fld2;
_10 = _1 as isize;
RET = _12;
_20.fld3 = [14944188213772445928_u64,11567104001870847576_u64];
_20.fld3 = [12013512694217974271_u64,12373908533335194681_u64];
_20.fld0 = [_11,_14,_17,_17,_14,_11];
match _1 {
0 => bb3,
340282366920938463462715857571672074569 => bb5,
_ => bb4
}
}
bb15 = {
_3 = _2 | _2;
RET = _7;
_20.fld0 = [_17,_17,_11,_14,_14,_14];
_23 = _10;
_30 = [159145942_u32,367209955_u32,2775866369_u32,1465084119_u32,677863479_u32,3152559327_u32,2906801310_u32];
_20.fld2 = -_23;
_25 = [7030810528810940446_u64,2180722756273932154_u64];
_7 = _12;
_31 = _15 as f32;
_10 = _5 as isize;
_26 = _11 as f64;
_17 = _14 * _14;
RET = _12;
_9 = _5 ^ _5;
_33 = _17 < _17;
_20.fld1 = _9 as i32;
RET = _12;
_16 = [2118080083_u32,1804892920_u32,2604701645_u32,3153157858_u32,353838468_u32,3241403839_u32];
_34.2 = 3043993932_u32 as f64;
_30 = [2615125677_u32,2553783833_u32,571404272_u32,2013812817_u32,1464322659_u32,1570272271_u32,2886374300_u32];
_6 = _24;
_34.1.3 = RET;
_34.1.1 = _34.1.3;
Call(_6 = fn19(Move(_20), _33), ReturnTo(bb8), UnwindUnreachable())
}
bb16 = {
Return()
}
bb17 = {
_6 = _24 + _24;
_29 = _6 as i32;
_30 = [2323093870_u32,370738120_u32,3174448131_u32,2018440749_u32,788316205_u32,866806225_u32,1315467754_u32];
_5 = _9 | _9;
_33 = !_3;
RET = _19;
_35 = !_23;
_38 = -_35;
_2 = !_33;
_3 = _33;
_11 = _17 ^ _17;
_3 = !_2;
RET = _19;
_2 = _11 <= _11;
_34.2 = _34.1.0 as f64;
_31 = _21;
_25 = [10421298289919779739_u64,11089432635931323437_u64];
_7 = _18;
_34.2 = -_26;
_14 = _11;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(1_usize, 12_usize, Move(_12), 25_usize, Move(_25), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(1_usize, 10_usize, Move(_10), 23_usize, Move(_23), 38_usize, Move(_38), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(1_usize, 9_usize, Move(_9), 17_usize, Move(_17), 18_usize, Move(_18), 15_usize, Move(_15)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_41 = dump_var(1_usize, 19_usize, Move(_19), 4_usize, Move(_4), 42_usize, _42, 42_usize, _42), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: isize,mut _2: i64,mut _3: [u32; 7],mut _4: bool,mut _5: isize,mut _6: isize,mut _7: u8,mut _8: u8,mut _9: i64,mut _10: [u32; 7],mut _11: bool,mut _12: char,mut _13: u128,mut _14: bool,mut _15: u128) -> [u8; 6] {
mir! {
type RET = [u8; 6];
let _16: Adt44;
let _17: i128;
let _18: *mut (isize, (u16, char, &'static i64, char), f64);
let _19: u32;
let _20: i32;
let _21: f32;
let _22: isize;
let _23: ([i64; 5],);
let _24: u8;
let _25: u32;
let _26: *const *const &'static i64;
let _27: f32;
let _28: [u32; 7];
let _29: isize;
let _30: isize;
let _31: isize;
let _32: (*const &'static i64, u16, (&'static i64, u8), *const i128, ([u32; 6], *const *const &'static i64, bool, *const i128), i128);
let _33: u64;
let _34: isize;
let _35: Adt47;
let _36: [u32; 7];
let _37: Adt55;
let _38: ();
let _39: ();
{
_4 = _11;
_12 = '\u{68682}';
_3 = [476081069_u32,1527632235_u32,44095082_u32,4084298340_u32,2717155434_u32,4043016933_u32,3099109610_u32];
RET = [_8,_7,_8,_7,_7,_8];
_13 = !_15;
_2 = (-126529559161215367745405627308386170029_i128) as i64;
_2 = -_9;
_17 = !(-72405970175229730541585377374329477460_i128);
_15 = _13;
_12 = '\u{892f5}';
_7 = _8 * _8;
_2 = _9;
_10 = [4050011684_u32,1896424161_u32,4050412111_u32,1963898572_u32,3411955345_u32,3471582442_u32,3600044218_u32];
_10 = _3;
_1 = _6;
_8 = !_7;
RET = [_7,_7,_8,_7,_7,_7];
_13 = _15;
_19 = !2877827078_u32;
_15 = _17 as u128;
_2 = _9 >> _8;
_6 = _1 ^ _1;
_2 = _4 as i64;
_9 = _2;
_7 = _15 as u8;
_6 = _1;
Call(RET = fn3(_7, _11, _15, _12, _3, _2, _10, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8 = _7;
_15 = _13 | _13;
_9 = !_2;
_5 = (-20336_i16) as isize;
_12 = '\u{f7d56}';
_17 = 58028933353839525458003528605251105987_i128 * (-105709197931767042739683116875500792150_i128);
_10 = _3;
_6 = _5;
_1 = 6783612016144555555_usize as isize;
_20 = 123844214_i32 & 1928870228_i32;
Call(_17 = fn17(_10, _3, _9, _5, _5, _14, _2, _20, _3, _19, _11, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13 = _12 as u128;
_6 = _1 + _5;
_2 = _9 & _9;
_6 = _5 ^ _5;
_3 = _10;
_5 = _6;
_7 = _8;
_6 = !_5;
_21 = 9776_u16 as f32;
_6 = _5 + _5;
_19 = _5 as u32;
_11 = _14 | _14;
_10 = [_19,_19,_19,_19,_19,_19,_19];
_11 = _14;
_13 = !_15;
_8 = !_7;
RET = [_8,_8,_8,_8,_8,_8];
Goto(bb3)
}
bb3 = {
_8 = _7 ^ _7;
_19 = !2499437074_u32;
_8 = _7 >> _2;
_9 = !_2;
_20 = (-683120016_i32);
_2 = _9;
_20 = !(-1776430725_i32);
_10 = _3;
_14 = _4;
RET = [_7,_8,_8,_8,_8,_8];
RET = [_8,_8,_8,_8,_8,_8];
RET = [_8,_8,_8,_8,_8,_8];
_20 = 4_usize as i32;
_9 = (-10566_i16) as i64;
_1 = _6 | _6;
_22 = _1;
_4 = !_11;
_14 = _11 | _4;
_2 = _1 as i64;
_22 = _14 as isize;
_8 = !_7;
_13 = !_15;
Goto(bb4)
}
bb4 = {
_23.0 = [_2,_2,_2,_2,_2];
_24 = _8 + _8;
_15 = _13;
_4 = _17 >= _17;
_25 = _12 as u32;
_19 = _25;
_6 = _24 as isize;
_17 = 57439331193871480899336635925506126895_i128;
_2 = _9 * _9;
_24 = _12 as u8;
_8 = !_7;
Goto(bb5)
}
bb5 = {
RET = [_24,_24,_24,_7,_7,_24];
_10 = [_19,_19,_19,_19,_25,_19,_25];
_3 = [_19,_25,_25,_19,_25,_25,_25];
_9 = !_2;
_27 = _21;
_6 = _1;
_25 = 840012278872877833_u64 as u32;
_27 = _21 * _21;
_28 = [_25,_19,_19,_19,_19,_25,_19];
_6 = 18123_u16 as isize;
_23.0 = [_2,_9,_9,_2,_2];
_9 = _2;
_30 = -_6;
_14 = _4 > _4;
_11 = !_4;
_15 = 6422_i16 as u128;
_34 = 21123_i16 as isize;
_31 = -_1;
_32.3 = core::ptr::addr_of!(_32.5);
_30 = _1;
_30 = _5;
_1 = -_22;
_32.0 = core::ptr::addr_of!(_32.2.0);
Goto(bb6)
}
bb6 = {
_19 = _25 | _25;
_31 = _1;
_29 = (-93_i8) as isize;
_5 = (-46_i8) as isize;
_30 = -_31;
_4 = _11;
_30 = _17 as isize;
_32.5 = _17;
_1 = -_31;
_33 = !4766202946481830193_u64;
_26 = core::ptr::addr_of!(_32.0);
_32.4.2 = _14;
_32.1 = !256_u16;
_27 = -_21;
Call(_32.2.1 = core::intrinsics::transmute(_14), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_14 = _11;
_35.fld0 = RET;
_15 = !_13;
_32.2.0 = &_9;
_28 = _3;
_32.2.0 = &_2;
_3 = [_19,_19,_19,_19,_19,_25,_19];
_20 = _17 as i32;
_32.4.1 = Move(_26);
_32.3 = core::ptr::addr_of!(_32.5);
_21 = -_27;
_35.fld4 = [_19,_19,_19,_25,_19,_25,_25];
_5 = _22;
_5 = 1980446095706436585_usize as isize;
_27 = _21;
_15 = _13;
_35.fld1 = _20;
_26 = core::ptr::addr_of!(_32.0);
_26 = core::ptr::addr_of!((*_26));
_32.0 = core::ptr::addr_of!(_32.2.0);
RET = [_32.2.1,_32.2.1,_32.2.1,_32.2.1,_32.2.1,_32.2.1];
_32.2.1 = _8 ^ _24;
_7 = _8 & _24;
_4 = !_14;
_21 = _8 as f32;
_12 = '\u{1f226}';
_33 = !11531200474204823592_u64;
_15 = _12 as u128;
_32.2.1 = !_24;
Goto(bb8)
}
bb8 = {
Call(_38 = dump_var(2_usize, 28_usize, Move(_28), 8_usize, Move(_8), 12_usize, Move(_12), 7_usize, Move(_7)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_38 = dump_var(2_usize, 23_usize, Move(_23), 11_usize, Move(_11), 17_usize, Move(_17), 14_usize, Move(_14)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_38 = dump_var(2_usize, 33_usize, Move(_33), 22_usize, Move(_22), 19_usize, Move(_19), 20_usize, Move(_20)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(2_usize, 2_usize, Move(_2), 34_usize, Move(_34), 39_usize, _39, 39_usize, _39), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u8,mut _2: bool,mut _3: u128,mut _4: char,mut _5: [u32; 7],mut _6: i64,mut _7: [u32; 7],mut _8: [u32; 7]) -> [u8; 6] {
mir! {
type RET = [u8; 6];
let _9: u16;
let _10: [i64; 5];
let _11: [u32; 6];
let _12: Adt41;
let _13: i64;
let _14: Adt46;
let _15: [char; 6];
let _16: Adt54;
let _17: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _18: usize;
let _19: f32;
let _20: bool;
let _21: isize;
let _22: [u32; 7];
let _23: u64;
let _24: Adt54;
let _25: Adt47;
let _26: ();
let _27: ();
{
_7 = _5;
Goto(bb1)
}
bb1 = {
RET = [_1,_1,_1,_1,_1,_1];
_8 = [3741495463_u32,824678266_u32,3141310673_u32,3332720365_u32,3472221646_u32,2228006952_u32,2396176032_u32];
_2 = _4 > _4;
_6 = (-783381669463957364_i64);
_2 = true;
_7 = [3895833055_u32,341280085_u32,3347994743_u32,3955567965_u32,1942677398_u32,1626593808_u32,752365296_u32];
_6 = 7963746377136571682_i64 | 379944674456048261_i64;
_2 = !true;
_3 = 217005632841135514548034532206933486442_u128 * 22283757125995921455776595263235354660_u128;
_3 = !163527226220833502173450143068797583305_u128;
_3 = _1 as u128;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = 287219666592686280290353827851551150545_u128;
_7 = _8;
RET = [_1,_1,_1,_1,_1,_1];
_8 = [870985713_u32,3219688501_u32,1241299604_u32,557641481_u32,844658715_u32,992226888_u32,3775283613_u32];
_9 = 1887_u16;
_2 = true & true;
RET = [_1,_1,_1,_1,_1,_1];
_1 = 40_u8;
_8 = [35096469_u32,4198387010_u32,3780007309_u32,3556833006_u32,68921659_u32,592160124_u32,2245570211_u32];
_4 = '\u{10f04b}';
_8 = [1957917696_u32,124006756_u32,3188790626_u32,3297497941_u32,4195206286_u32,683982004_u32,3494397496_u32];
_8 = [1158374575_u32,1992269919_u32,1772773787_u32,1822283856_u32,951540370_u32,3935586050_u32,1970763498_u32];
_7 = [1646277206_u32,1773083160_u32,365449276_u32,3056679051_u32,2034734447_u32,2945043703_u32,736003380_u32];
match _9 {
0 => bb1,
1 => bb3,
1887 => bb5,
_ => bb4
}
}
bb3 = {
RET = [_1,_1,_1,_1,_1,_1];
_8 = [3741495463_u32,824678266_u32,3141310673_u32,3332720365_u32,3472221646_u32,2228006952_u32,2396176032_u32];
_2 = _4 > _4;
_6 = (-783381669463957364_i64);
_2 = true;
_7 = [3895833055_u32,341280085_u32,3347994743_u32,3955567965_u32,1942677398_u32,1626593808_u32,752365296_u32];
_6 = 7963746377136571682_i64 | 379944674456048261_i64;
_2 = !true;
_3 = 217005632841135514548034532206933486442_u128 * 22283757125995921455776595263235354660_u128;
_3 = !163527226220833502173450143068797583305_u128;
_3 = _1 as u128;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
RET = [_1,_1,_1,_1,_1,_1];
_11 = [2438796046_u32,1525540893_u32,1476601826_u32,1923240927_u32,2013251925_u32,1990210150_u32];
_2 = false;
_1 = !95_u8;
_8 = [309143567_u32,3268671349_u32,2324325279_u32,1206983193_u32,3766802913_u32,2177366822_u32,4024037501_u32];
_4 = '\u{5afd}';
_6 = !(-7288048268873383189_i64);
_3 = 251837781131603221732709848907050606095_u128;
RET = [_1,_1,_1,_1,_1,_1];
_1 = 59_u8 ^ 215_u8;
_6 = 4_usize as i64;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
251837781131603221732709848907050606095 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
RET = [_1,_1,_1,_1,_1,_1];
_8 = [3741495463_u32,824678266_u32,3141310673_u32,3332720365_u32,3472221646_u32,2228006952_u32,2396176032_u32];
_2 = _4 > _4;
_6 = (-783381669463957364_i64);
_2 = true;
_7 = [3895833055_u32,341280085_u32,3347994743_u32,3955567965_u32,1942677398_u32,1626593808_u32,752365296_u32];
_6 = 7963746377136571682_i64 | 379944674456048261_i64;
_2 = !true;
_3 = 217005632841135514548034532206933486442_u128 * 22283757125995921455776595263235354660_u128;
_3 = !163527226220833502173450143068797583305_u128;
_3 = _1 as u128;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
RET = [_1,_1,_1,_1,_1,_1];
_8 = [3741495463_u32,824678266_u32,3141310673_u32,3332720365_u32,3472221646_u32,2228006952_u32,2396176032_u32];
_2 = _4 > _4;
_6 = (-783381669463957364_i64);
_2 = true;
_7 = [3895833055_u32,341280085_u32,3347994743_u32,3955567965_u32,1942677398_u32,1626593808_u32,752365296_u32];
_6 = 7963746377136571682_i64 | 379944674456048261_i64;
_2 = !true;
_3 = 217005632841135514548034532206933486442_u128 * 22283757125995921455776595263235354660_u128;
_3 = !163527226220833502173450143068797583305_u128;
_3 = _1 as u128;
Call(_8 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_5 = [3167497154_u32,1685190456_u32,3233371847_u32,2494770721_u32,88173935_u32,1741558888_u32,2630834085_u32];
_8 = _7;
RET = [_1,_1,_1,_1,_1,_1];
_6 = (-920852810_i32) as i64;
_8 = [2778393465_u32,456099813_u32,2922898290_u32,3386759433_u32,2663442189_u32,4046322629_u32,261745421_u32];
RET = [_1,_1,_1,_1,_1,_1];
_10 = [_6,_6,_6,_6,_6];
_15 = [_4,_4,_4,_4,_4,_4];
_1 = _4 as u8;
_15 = [_4,_4,_4,_4,_4,_4];
_8 = _7;
_5 = [1343693347_u32,2315734515_u32,3448551749_u32,436676573_u32,2305905249_u32,1230132989_u32,182477330_u32];
_16.fld1 = 768307448748664019_usize << _3;
_11 = [333428278_u32,145261918_u32,2255191552_u32,881486478_u32,1888371412_u32,1296803124_u32];
_4 = '\u{dc8e9}';
_17.3 = (-6105_i16) as u32;
RET = [_1,_1,_1,_1,_1,_1];
_17.3 = 127074961906951407795990292101819161508_i128 as u32;
_5 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_13 = _6 + _6;
_17.0 = _1 as f64;
_17.1 = _16.fld1 as u16;
match _3 {
251837781131603221732709848907050606095 => bb10,
_ => bb7
}
}
bb10 = {
_8 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_1 = !197_u8;
_8 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_12 = Adt41::Variant2 { fld0: 138871683308676071627598585031427724413_i128,fld1: _1,fld2: 9223372036854775807_isize,fld3: (-19634_i16) };
_3 = 162700967038515780010941408766283831612_u128 >> _16.fld1;
_10 = [_13,_6,_13,_13,_13];
_18 = _16.fld1;
_9 = !_17.1;
Call(RET = fn4(_18, _7, Field::<u8>(Variant(_12, 2), 1), _9, _7, _3, _11, _7), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_11 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_15 = [_4,_4,_4,_4,_4,_4];
_18 = _16.fld1;
_13 = _6 & _6;
_17.4 = Field::<u8>(Variant(_12, 2), 1) as f64;
_10 = [_13,_13,_13,_6,_6];
_2 = !false;
_10 = [_6,_13,_13,_6,_6];
_16.fld1 = _17.3 as usize;
_3 = !162362302854058910038491066934336408872_u128;
_1 = !Field::<u8>(Variant(_12, 2), 1);
_17.3 = 3583954286_u32;
_8 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_13 = !_6;
_1 = _17.4 as u8;
place!(Field::<isize>(Variant(_12, 2), 2)) = (-9223372036854775808_isize) | 9223372036854775807_isize;
_20 = !_2;
place!(Field::<i16>(Variant(_12, 2), 3)) = -25759_i16;
_19 = 1850501964_i32 as f32;
_17.3 = _16.fld1 as u32;
_8 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
place!(Field::<i16>(Variant(_12, 2), 3)) = !(-1241_i16);
Goto(bb12)
}
bb12 = {
_9 = !_17.1;
place!(Field::<u8>(Variant(_12, 2), 1)) = !_1;
_21 = Field::<isize>(Variant(_12, 2), 2);
_3 = _17.0 as u128;
_17.0 = _13 as f64;
_6 = (-1620307034_i32) as i64;
place!(Field::<i128>(Variant(_12, 2), 0)) = !(-22843028022930454304273668531955011597_i128);
Goto(bb13)
}
bb13 = {
_17.3 = _21 as u32;
_17.1 = Field::<i16>(Variant(_12, 2), 3) as u16;
place!(Field::<i16>(Variant(_12, 2), 3)) = -28757_i16;
_6 = Field::<isize>(Variant(_12, 2), 2) as i64;
_19 = _6 as f32;
Goto(bb14)
}
bb14 = {
RET = [Field::<u8>(Variant(_12, 2), 1),Field::<u8>(Variant(_12, 2), 1),_1,Field::<u8>(Variant(_12, 2), 1),_1,Field::<u8>(Variant(_12, 2), 1)];
_25.fld0 = [Field::<u8>(Variant(_12, 2), 1),_1,_1,Field::<u8>(Variant(_12, 2), 1),Field::<u8>(Variant(_12, 2), 1),_1];
_25.fld4 = _7;
_17.0 = _17.4;
_16.fld1 = _18 ^ _18;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(3_usize, 11_usize, Move(_11), 21_usize, Move(_21), 15_usize, Move(_15), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(3_usize, 10_usize, Move(_10), 6_usize, Move(_6), 4_usize, Move(_4), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: usize,mut _2: [u32; 7],mut _3: u8,mut _4: u16,mut _5: [u32; 7],mut _6: u128,mut _7: [u32; 6],mut _8: [u32; 7]) -> [u8; 6] {
mir! {
type RET = [u8; 6];
let _9: Adt47;
let _10: f32;
let _11: [u64; 2];
let _12: [u64; 2];
let _13: Adt47;
let _14: u16;
let _15: isize;
let _16: *const *const &'static i64;
let _17: isize;
let _18: [char; 6];
let _19: Adt47;
let _20: f64;
let _21: [u64; 2];
let _22: isize;
let _23: bool;
let _24: isize;
let _25: isize;
let _26: [u32; 6];
let _27: bool;
let _28: u64;
let _29: f32;
let _30: isize;
let _31: *const *const &'static i64;
let _32: [u32; 6];
let _33: u64;
let _34: isize;
let _35: ([i64; 5],);
let _36: [u32; 7];
let _37: [u32; 6];
let _38: f64;
let _39: isize;
let _40: Adt47;
let _41: bool;
let _42: ((i16, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), f32, [i64; 5], u16, &'static i64, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), (u16, char, &'static i64, char)),);
let _43: [u64; 2];
let _44: ();
let _45: ();
{
RET = [_3,_3,_3,_3,_3,_3];
_3 = 143_u8;
_3 = 188_u8;
_8 = _5;
_5 = _2;
_8 = [628195841_u32,35296355_u32,4180627645_u32,2484740104_u32,1822098001_u32,3126917757_u32,2159717569_u32];
_3 = !116_u8;
Goto(bb1)
}
bb1 = {
_5 = [2673685402_u32,160729311_u32,2010189934_u32,3583545088_u32,2306407993_u32,3060239779_u32,537181675_u32];
_5 = [686006068_u32,2500582847_u32,963613333_u32,2187948195_u32,2143590397_u32,3137478560_u32,2411037515_u32];
_9.fld2 = _6 as isize;
_7 = [3077318201_u32,1473073364_u32,3890027839_u32,3671050121_u32,3965166921_u32,3025474472_u32];
_9.fld2 = !9223372036854775807_isize;
_9.fld3 = [12704527727649592009_u64,16414367332100124317_u64];
_9.fld2 = -(-9223372036854775808_isize);
_7 = [2079294621_u32,2606557517_u32,1565964769_u32,289252568_u32,2152913550_u32,3011907527_u32];
_10 = _6 as f32;
_9.fld1 = -1684890806_i32;
_11 = [10010401250271734684_u64,10249309417501715367_u64];
_9.fld4 = [1858033248_u32,2079877375_u32,3149299412_u32,1773848247_u32,1352612469_u32,1438951353_u32,767461432_u32];
_13.fld4 = [3951487815_u32,2598565397_u32,1775343064_u32,3273506153_u32,225979267_u32,1861855588_u32,3865140772_u32];
_13.fld2 = _9.fld2;
_13.fld2 = _9.fld2;
_13.fld3 = [9125328522702356019_u64,12157956140796210198_u64];
_14 = !_4;
_13 = Adt47 { fld0: RET,fld1: _9.fld1,fld2: _9.fld2,fld3: _9.fld3,fld4: _2 };
_13 = Adt47 { fld0: RET,fld1: _9.fld1,fld2: _9.fld2,fld3: _11,fld4: _2 };
_9 = Adt47 { fld0: RET,fld1: _13.fld1,fld2: _13.fld2,fld3: _11,fld4: _13.fld4 };
Goto(bb2)
}
bb2 = {
_13.fld1 = !_9.fld1;
_9.fld1 = -_13.fld1;
_9.fld2 = !_13.fld2;
_17 = !_9.fld2;
_15 = !_17;
_13.fld0 = [_3,_3,_3,_3,_3,_3];
_15 = -_9.fld2;
_12 = [15159688270969490811_u64,13624398979785739878_u64];
_13 = Adt47 { fld0: RET,fld1: _9.fld1,fld2: _17,fld3: _9.fld3,fld4: _9.fld4 };
_13.fld0 = [_3,_3,_3,_3,_3,_3];
_9.fld2 = _13.fld2 + _15;
_4 = !_14;
_18 = ['\u{98b57}','\u{3490}','\u{b3242}','\u{101419}','\u{92fe6}','\u{64476}'];
_10 = _3 as f32;
_9.fld4 = [2154590395_u32,4101582565_u32,4074359048_u32,637989264_u32,2831576505_u32,965723876_u32,1601612293_u32];
_9.fld3 = _12;
_3 = 88_u8 * 242_u8;
_13.fld4 = [2967160446_u32,2448578904_u32,2747355190_u32,270473505_u32,2557392986_u32,228931462_u32,2846833084_u32];
_2 = [4154813116_u32,1296919515_u32,174574173_u32,2385285720_u32,188318481_u32,1098238107_u32,2164434823_u32];
Goto(bb3)
}
bb3 = {
_13.fld2 = !_17;
_6 = 176450969319445089477797379118296056396_u128;
_13.fld1 = _3 as i32;
_21 = _11;
_11 = _21;
_13.fld0 = RET;
_3 = _1 as u8;
_2 = [1480031388_u32,2539123193_u32,2572683329_u32,475740691_u32,3947422795_u32,1279452261_u32,3632673793_u32];
_10 = _1 as f32;
_13.fld3 = [9310961811840639581_u64,4120248565962206428_u64];
_22 = _1 as isize;
_19.fld2 = _22 & _15;
_1 = (-154939781525929946732585336376746904062_i128) as usize;
_17 = !_13.fld2;
RET = [_3,_3,_3,_3,_3,_3];
_2 = _5;
_9.fld1 = -_13.fld1;
_10 = 3132748016_u32 as f32;
_7 = [4106332851_u32,856200423_u32,3150287387_u32,474295698_u32,3932346147_u32,15653128_u32];
_19.fld1 = _13.fld1 << _9.fld1;
_19.fld2 = _9.fld2;
_19.fld3 = [7010244406169809057_u64,9134537712374007561_u64];
_10 = _1 as f32;
_13.fld3 = _21;
Call(_19.fld2 = fn5(_5, _2, _9.fld2, RET, Move(_13), _18, _4, _4, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_13 = Adt47 { fld0: _9.fld0,fld1: _9.fld1,fld2: _9.fld2,fld3: _19.fld3,fld4: _9.fld4 };
_14 = _4;
_13 = Move(_9);
_24 = 1219581780_u32 as isize;
_21 = [947776906690343909_u64,1326379624823267496_u64];
_20 = _19.fld1 as f64;
_26 = [3816474895_u32,1709975736_u32,3878187152_u32,3699354146_u32,2518834057_u32,4276372733_u32];
_9.fld2 = _15 >> _14;
_18 = ['\u{71df4}','\u{6d364}','\u{31fa2}','\u{d0690}','\u{ee2e}','\u{a9a54}'];
_9 = Move(_13);
_11 = _19.fld3;
_25 = _9.fld2;
_5 = [169680350_u32,1135139785_u32,2302945178_u32,919594407_u32,3559092385_u32,3910959002_u32,2013017855_u32];
_13.fld0 = [_3,_3,_3,_3,_3,_3];
Goto(bb5)
}
bb5 = {
_24 = _22;
Call(_26 = core::intrinsics::transmute(_18), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_23 = false;
_13.fld4 = [1961835830_u32,2363718301_u32,2207095552_u32,1303400881_u32,425408745_u32,128682503_u32,1558686779_u32];
_19.fld2 = _22;
_13 = Adt47 { fld0: _9.fld0,fld1: _19.fld1,fld2: _9.fld2,fld3: _19.fld3,fld4: _9.fld4 };
_13.fld0 = [_3,_3,_3,_3,_3,_3];
match _6 {
0 => bb1,
1 => bb2,
2 => bb4,
176450969319445089477797379118296056396 => bb8,
_ => bb7
}
}
bb7 = {
_24 = _22;
Call(_26 = core::intrinsics::transmute(_18), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_26 = [1520353845_u32,1526258930_u32,3808443815_u32,633539099_u32,1330088441_u32,1205419742_u32];
_27 = _23 | _23;
_27 = !_23;
_18 = ['\u{837a0}','\u{ab915}','\u{e0b00}','\u{1aab3}','\u{b79aa}','\u{a12ac}'];
_11 = [3376464060121029981_u64,4627243384744643909_u64];
_19.fld4 = [1486436837_u32,1204790227_u32,2136338571_u32,2766540206_u32,2899022618_u32,3706298026_u32,2792893651_u32];
RET = [_3,_3,_3,_3,_3,_3];
_9.fld2 = _22;
_24 = 4220775764864435877_u64 as isize;
_12 = _21;
_9.fld3 = _21;
match _6 {
176450969319445089477797379118296056396 => bb10,
_ => bb9
}
}
bb9 = {
_24 = _22;
Call(_26 = core::intrinsics::transmute(_18), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_13.fld1 = !_19.fld1;
RET = _13.fld0;
_13.fld0 = [_3,_3,_3,_3,_3,_3];
_7 = [3258048914_u32,615305427_u32,1163864546_u32,2407349472_u32,445554610_u32,2286530562_u32];
_19 = Adt47 { fld0: _13.fld0,fld1: _13.fld1,fld2: _25,fld3: _21,fld4: _13.fld4 };
_9.fld0 = _19.fld0;
_13.fld3 = [308594549522780566_u64,2086641411480539836_u64];
_19.fld2 = -_25;
_35.0 = [174844647161032449_i64,8990347514170437352_i64,1782219242693364917_i64,(-8437411697304973023_i64),8990421704321286051_i64];
_35.0 = [5971757928946529001_i64,5779910647175490953_i64,(-3224864592480713878_i64),(-4847886895919161804_i64),(-734842947709375308_i64)];
_27 = _20 != _20;
_34 = _9.fld2;
_4 = _14;
_11 = [17445941516940202903_u64,1811546555273822717_u64];
_23 = !_27;
_21 = _13.fld3;
Goto(bb11)
}
bb11 = {
_29 = 4066737960_u32 as f32;
match _6 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb6,
176450969319445089477797379118296056396 => bb12,
_ => bb10
}
}
bb12 = {
_15 = _1 as isize;
_3 = 129_u8;
_23 = !_27;
_13.fld4 = [1683756635_u32,1903106807_u32,2714579414_u32,1000842862_u32,2565792035_u32,3318795954_u32,3031418282_u32];
_27 = _23;
_37 = _7;
_38 = _20 - _20;
_9 = Move(_13);
_37 = _26;
_10 = -_29;
_9.fld0 = [_3,_3,_3,_3,_3,_3];
_6 = 266437177309430956192118239231817766944_u128 >> _4;
_1 = 580623488458894132_usize;
_5 = [3104393928_u32,2096832119_u32,3908701192_u32,1091031140_u32,1435202861_u32,2617550488_u32,73150461_u32];
_34 = _19.fld2 * _24;
_38 = _20 - _20;
Goto(bb13)
}
bb13 = {
_32 = [1455392389_u32,1401150754_u32,1856620770_u32,114649636_u32,3270655575_u32,3644334430_u32];
_13.fld1 = '\u{a936a}' as i32;
_19.fld4 = [3697768634_u32,527969573_u32,1119097507_u32,2376402127_u32,4030226977_u32,1871084484_u32,3824557611_u32];
RET = [_3,_3,_3,_3,_3,_3];
_33 = !14704825809937310090_u64;
_25 = (-4958964012846789486_i64) as isize;
_28 = _33 << _14;
_22 = _34 - _34;
_40.fld3 = [_28,_33];
_13.fld4 = [1311440450_u32,3909152738_u32,1764651659_u32,1385722076_u32,3582082483_u32,515892911_u32,3877729649_u32];
Goto(bb14)
}
bb14 = {
_13.fld0 = [_3,_3,_3,_3,_3,_3];
_13.fld2 = 2039238147827733640_i64 as isize;
_12 = [_28,_28];
_35.0 = [7555120122157969889_i64,831378691891216908_i64,(-5434635391984986257_i64),4032018434063757002_i64,4114974809276356137_i64];
_19.fld0 = [_3,_3,_3,_3,_3,_3];
_35.0 = [(-3518471209161082653_i64),3244249702120000926_i64,1715835582537074491_i64,(-3647277488631689969_i64),(-7487436666428508469_i64)];
_39 = !_34;
_9.fld4 = [4086037119_u32,1671848111_u32,670147532_u32,3030146092_u32,1350222106_u32,1819353790_u32,2101398801_u32];
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(4_usize, 21_usize, Move(_21), 8_usize, Move(_8), 24_usize, Move(_24), 39_usize, Move(_39)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(4_usize, 25_usize, Move(_25), 18_usize, Move(_18), 32_usize, Move(_32), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(4_usize, 33_usize, Move(_33), 17_usize, Move(_17), 23_usize, Move(_23), 22_usize, Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(4_usize, 15_usize, Move(_15), 3_usize, Move(_3), 45_usize, _45, 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [u32; 7],mut _2: [u32; 7],mut _3: isize,mut _4: [u8; 6],mut _5: Adt47,mut _6: [char; 6],mut _7: u16,mut _8: u16,mut _9: [u32; 7]) -> isize {
mir! {
type RET = isize;
let _10: *const i128;
let _11: *mut (isize, (u16, char, &'static i64, char), f64);
let _12: i16;
let _13: f32;
let _14: [i64; 5];
let _15: ([i64; 5],);
let _16: f32;
let _17: u8;
let _18: f32;
let _19: ([i64; 5],);
let _20: *const i128;
let _21: [u8; 6];
let _22: u128;
let _23: i8;
let _24: f64;
let _25: char;
let _26: f64;
let _27: [i64; 5];
let _28: f64;
let _29: usize;
let _30: f64;
let _31: *const i128;
let _32: char;
let _33: ();
let _34: ();
{
_9 = [3241974509_u32,2547504791_u32,3761582606_u32,3039662501_u32,1234575054_u32,930168339_u32,1570157869_u32];
_1 = _2;
_5.fld3 = [16737007618867266412_u64,12471797131693314243_u64];
_3 = _5.fld2;
_5.fld3 = [8263469896367379394_u64,14379208792992125623_u64];
_4 = _5.fld0;
_9 = [2032562188_u32,741044262_u32,319867810_u32,1402707016_u32,1689974259_u32,2447887309_u32,2733324700_u32];
RET = _5.fld2;
_7 = !_8;
RET = _3;
_9 = [1393690496_u32,2756627587_u32,4143634349_u32,1836864276_u32,3219319926_u32,166234163_u32,1627973957_u32];
Goto(bb1)
}
bb1 = {
_5.fld4 = _9;
RET = (-106_i8) as isize;
_3 = -RET;
_5.fld0 = _4;
_8 = _7 * _7;
_5.fld0 = [77_u8,187_u8,68_u8,116_u8,25_u8,17_u8];
RET = _5.fld1 as isize;
_4 = [169_u8,47_u8,19_u8,113_u8,161_u8,29_u8];
_4 = _5.fld0;
_3 = _5.fld2;
_6 = ['\u{6c86}','\u{baf22}','\u{5da6f}','\u{87818}','\u{fdd79}','\u{bb08}'];
Call(_10 = fn6(_8, RET, _5.fld4, Move(_5), _6, _6, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5.fld1 = (-972885725_i32);
_8 = _7 & _7;
_5.fld2 = '\u{d3f75}' as isize;
Goto(bb3)
}
bb3 = {
_1 = _2;
_1 = _2;
_5.fld0 = _4;
_8 = _7 >> _5.fld2;
RET = -_5.fld2;
_14 = [(-1597412892538717878_i64),(-5521610378953237884_i64),(-4410213854250220316_i64),(-4979209275097085571_i64),262906248009642669_i64];
_14 = [(-5582941655626678971_i64),(-3996266650208901852_i64),(-7475304220939697233_i64),(-3190500733506942859_i64),(-6547651053178711614_i64)];
_8 = !_7;
_14 = [(-3099652263736278568_i64),5317803196455657254_i64,(-5492868760189289914_i64),4964699560997043751_i64,792340844058706761_i64];
_5.fld3 = [11945103957145775436_u64,88690221621527736_u64];
_5.fld4 = _9;
_14 = [(-4586595132742439581_i64),(-2579341740236806556_i64),5986199338027823259_i64,(-1196718452041590643_i64),(-6810117163902820545_i64)];
_12 = 244_u8 as i16;
_5.fld4 = [2492111018_u32,2183898627_u32,2533964989_u32,3522747189_u32,559482046_u32,2633720853_u32,1793096383_u32];
RET = 28762837_u32 as isize;
_16 = _12 as f32;
_13 = _16 + _16;
_4 = [116_u8,85_u8,91_u8,116_u8,117_u8,242_u8];
_15 = (_14,);
_3 = !_5.fld2;
_15 = (_14,);
_5.fld3 = [6475649214777016875_u64,14956052881055190933_u64];
_15.0 = [(-4003721722433239676_i64),515704890135915857_i64,(-966133212509367900_i64),(-3918245204298371320_i64),5543525103577581304_i64];
_3 = -RET;
Goto(bb4)
}
bb4 = {
_5.fld3 = [18048187437075521060_u64,12030378845456441899_u64];
_15 = (_14,);
_15 = (_14,);
_19 = _15;
match _5.fld1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607430795325731 => bb9,
_ => bb8
}
}
bb5 = {
_1 = _2;
_1 = _2;
_5.fld0 = _4;
_8 = _7 >> _5.fld2;
RET = -_5.fld2;
_14 = [(-1597412892538717878_i64),(-5521610378953237884_i64),(-4410213854250220316_i64),(-4979209275097085571_i64),262906248009642669_i64];
_14 = [(-5582941655626678971_i64),(-3996266650208901852_i64),(-7475304220939697233_i64),(-3190500733506942859_i64),(-6547651053178711614_i64)];
_8 = !_7;
_14 = [(-3099652263736278568_i64),5317803196455657254_i64,(-5492868760189289914_i64),4964699560997043751_i64,792340844058706761_i64];
_5.fld3 = [11945103957145775436_u64,88690221621527736_u64];
_5.fld4 = _9;
_14 = [(-4586595132742439581_i64),(-2579341740236806556_i64),5986199338027823259_i64,(-1196718452041590643_i64),(-6810117163902820545_i64)];
_12 = 244_u8 as i16;
_5.fld4 = [2492111018_u32,2183898627_u32,2533964989_u32,3522747189_u32,559482046_u32,2633720853_u32,1793096383_u32];
RET = 28762837_u32 as isize;
_16 = _12 as f32;
_13 = _16 + _16;
_4 = [116_u8,85_u8,91_u8,116_u8,117_u8,242_u8];
_15 = (_14,);
_3 = !_5.fld2;
_15 = (_14,);
_5.fld3 = [6475649214777016875_u64,14956052881055190933_u64];
_15.0 = [(-4003721722433239676_i64),515704890135915857_i64,(-966133212509367900_i64),(-3918245204298371320_i64),5543525103577581304_i64];
_3 = -RET;
Goto(bb4)
}
bb6 = {
_5.fld1 = (-972885725_i32);
_8 = _7 & _7;
_5.fld2 = '\u{d3f75}' as isize;
Goto(bb3)
}
bb7 = {
_5.fld4 = _9;
RET = (-106_i8) as isize;
_3 = -RET;
_5.fld0 = _4;
_8 = _7 * _7;
_5.fld0 = [77_u8,187_u8,68_u8,116_u8,25_u8,17_u8];
RET = _5.fld1 as isize;
_4 = [169_u8,47_u8,19_u8,113_u8,161_u8,29_u8];
_4 = _5.fld0;
_3 = _5.fld2;
_6 = ['\u{6c86}','\u{baf22}','\u{5da6f}','\u{87818}','\u{fdd79}','\u{bb08}'];
Call(_10 = fn6(_8, RET, _5.fld4, Move(_5), _6, _6, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_5.fld1 = 1182414633_u32 as i32;
_18 = _13;
Call(RET = fn16(_15.0, _1, _1, Move(_5), _19, _2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_5.fld0 = [233_u8,238_u8,17_u8,18_u8,44_u8,183_u8];
_17 = !19_u8;
_12 = RET as i16;
_16 = _18 + _18;
_4 = _5.fld0;
_5.fld1 = (-142340612_i32);
RET = -_3;
_13 = _16 + _16;
_8 = (-4615971937159450024_i64) as u16;
_8 = _5.fld1 as u16;
_5.fld3 = [16183723438058671544_u64,16314600696406129113_u64];
_5.fld2 = RET;
_4 = [_17,_17,_17,_17,_17,_17];
_8 = !_7;
_17 = !211_u8;
_14 = _15.0;
_5.fld1 = '\u{1dce6}' as i32;
_4 = [_17,_17,_17,_17,_17,_17];
Goto(bb11)
}
bb11 = {
_14 = [4911821038621400753_i64,1310831122537881975_i64,(-2138325359819259427_i64),(-6958543239413677317_i64),6458968247930260658_i64];
_16 = 24866404818462399314674130113021032070_u128 as f32;
_18 = _13 + _13;
_24 = 10328898489655673557_u64 as f64;
_2 = [1028074174_u32,2579058329_u32,3474548846_u32,3473011977_u32,2029342103_u32,1031829275_u32,3299323489_u32];
_3 = _5.fld2;
_5.fld2 = _3;
_9 = _1;
_18 = -_13;
_15 = _19;
_21 = _5.fld0;
_23 = (-29_i8) ^ 58_i8;
_25 = '\u{ae5d9}';
_14 = [(-864343781911034291_i64),(-6630931246404952728_i64),3264760627537820596_i64,5969643392075423253_i64,(-5004808100638046806_i64)];
Goto(bb12)
}
bb12 = {
_21 = [_17,_17,_17,_17,_17,_17];
_23 = 49_i8 & (-66_i8);
_20 = _10;
_18 = -_13;
_16 = -_18;
_5.fld3 = [13167414884008562434_u64,13530600463008131633_u64];
_27 = _19.0;
_6 = [_25,_25,_25,_25,_25,_25];
Goto(bb13)
}
bb13 = {
_28 = _24;
_20 = _10;
_8 = !_7;
_22 = 195789848886519833963377499633255610816_u128;
_8 = !_7;
_1 = [402682123_u32,3321111219_u32,1728392525_u32,3695660170_u32,4108099862_u32,525664343_u32,30047972_u32];
_5.fld3 = [3581918341316867090_u64,5665415776042425756_u64];
_21 = [_17,_17,_17,_17,_17,_17];
_22 = !2240090444070023595047071750531994106_u128;
_23 = 1_usize as i8;
_6 = [_25,_25,_25,_25,_25,_25];
_6 = [_25,_25,_25,_25,_25,_25];
_22 = 290545267998626028913219509809031872643_u128 - 94356238595311056507054927493118413619_u128;
_3 = RET;
_4 = [_17,_17,_17,_17,_17,_17];
_24 = _28 + _28;
_26 = _22 as f64;
_18 = 3_usize as f32;
RET = _5.fld2 << _22;
_7 = _8;
_2 = [3533721701_u32,3989233073_u32,4209051368_u32,3577965532_u32,3162323007_u32,2584993376_u32,1895877186_u32];
_20 = _10;
_4 = [_17,_17,_17,_17,_17,_17];
_10 = _20;
_5.fld0 = _4;
_30 = _24 - _28;
Call(RET = core::intrinsics::transmute(_5.fld2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_29 = 6729265128343270609_usize | 1_usize;
_1 = _2;
_4 = [_17,_17,_17,_17,_17,_17];
_4 = _5.fld0;
_19.0 = _27;
_5.fld1 = _17 as i32;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(5_usize, 12_usize, Move(_12), 29_usize, Move(_29), 9_usize, Move(_9), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(5_usize, 21_usize, Move(_21), 6_usize, Move(_6), 17_usize, Move(_17), 27_usize, Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(5_usize, 23_usize, Move(_23), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: u16,mut _2: isize,mut _3: [u32; 7],mut _4: Adt47,mut _5: [char; 6],mut _6: [char; 6],mut _7: [u32; 7]) -> *const i128 {
mir! {
type RET = *const i128;
let _8: u32;
let _9: *const [u64; 2];
let _10: char;
let _11: [i64; 5];
let _12: bool;
let _13: char;
let _14: [i64; 5];
let _15: char;
let _16: f64;
let _17: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _18: Adt48;
let _19: Adt40;
let _20: char;
let _21: Adt54;
let _22: Adt53;
let _23: Adt40;
let _24: u32;
let _25: Adt48;
let _26: *const i128;
let _27: Adt47;
let _28: Adt41;
let _29: isize;
let _30: [u8; 6];
let _31: [i64; 5];
let _32: Adt55;
let _33: u128;
let _34: isize;
let _35: usize;
let _36: *const &'static i64;
let _37: i128;
let _38: isize;
let _39: i64;
let _40: bool;
let _41: f32;
let _42: [u32; 7];
let _43: [u32; 7];
let _44: isize;
let _45: [u32; 7];
let _46: char;
let _47: i8;
let _48: [u8; 6];
let _49: [u64; 2];
let _50: u8;
let _51: f64;
let _52: f64;
let _53: ((*const &'static i64, u16, (&'static i64, u8), *const i128, ([u32; 6], *const *const &'static i64, bool, *const i128), i128),);
let _54: ([i64; 5],);
let _55: Adt41;
let _56: [i64; 5];
let _57: i128;
let _58: f32;
let _59: i32;
let _60: ();
let _61: ();
{
_6 = ['\u{8903b}','\u{31a01}','\u{e350}','\u{c579c}','\u{86de2}','\u{dec57}'];
_7 = [1678587535_u32,4237631130_u32,1104460530_u32,146268317_u32,1025270669_u32,1101770003_u32,2509125274_u32];
_1 = (-4486_i16) as u16;
_6 = _5;
_6 = ['\u{c617b}','\u{8223}','\u{9a16f}','\u{6ae28}','\u{61c03}','\u{fe947}'];
_4.fld3 = [14359100862733228834_u64,10800916656922795332_u64];
_8 = 1589499156_u32 - 2593164943_u32;
_10 = '\u{6c4ba}';
_4.fld0 = [137_u8,39_u8,133_u8,39_u8,60_u8,126_u8];
_4.fld0 = [242_u8,103_u8,181_u8,46_u8,136_u8,134_u8];
_10 = '\u{bdd9e}';
_4.fld2 = _2 | _2;
_2 = _4.fld2 & _4.fld2;
_5 = [_10,_10,_10,_10,_10,_10];
_1 = !7065_u16;
_1 = (-85_i8) as u16;
_4.fld3 = [10403741276521021298_u64,17201392751589967209_u64];
_10 = '\u{dd31a}';
_9 = core::ptr::addr_of!(_4.fld3);
_4.fld3 = [8361366498088464060_u64,12922555350626081392_u64];
_4.fld3 = [3081654088341740166_u64,9632911716222085524_u64];
_12 = !true;
_4.fld2 = !_2;
_5 = _6;
_6 = [_10,_10,_10,_10,_10,_10];
Goto(bb1)
}
bb1 = {
_2 = !_4.fld2;
_1 = 45386_u16 ^ 9345_u16;
_8 = !3341753613_u32;
_4.fld1 = -2125036084_i32;
_3 = [_8,_8,_8,_8,_8,_8,_8];
_15 = _10;
_2 = (-48_i8) as isize;
_2 = _4.fld2 * _4.fld2;
_1 = 6781499758974994104_u64 as u16;
_16 = _4.fld1 as f64;
_2 = _4.fld2;
_7 = [_8,_8,_8,_8,_8,_8,_8];
_13 = _10;
_4.fld3 = [14189269549588007012_u64,9667932946749797240_u64];
_17.0 = _16;
_5 = [_15,_13,_13,_13,_15,_10];
_12 = _13 == _10;
_10 = _15;
_4.fld3 = [17479220121651020739_u64,8954087221684075339_u64];
_11 = [4693559468941330674_i64,3632048833563038485_i64,(-3476694689689941569_i64),(-243639602036078105_i64),6736276110263470909_i64];
_9 = core::ptr::addr_of!((*_9));
_12 = _4.fld2 != _4.fld2;
_16 = -_17.0;
_6 = [_13,_13,_13,_15,_15,_10];
_4.fld2 = _2;
_12 = true;
Goto(bb2)
}
bb2 = {
_17.3 = (-8008419692772385106_i64) as u32;
_4.fld1 = -952811758_i32;
_4.fld0 = [36_u8,3_u8,205_u8,49_u8,222_u8,60_u8];
_7 = [_8,_8,_8,_8,_17.3,_8,_17.3];
_4.fld0 = [117_u8,177_u8,25_u8,67_u8,104_u8,39_u8];
_20 = _15;
_13 = _10;
_12 = !false;
_1 = 57310_u16 | 50385_u16;
_12 = true;
_17.1 = _1;
_14 = [7056478696085686577_i64,(-6623728157813899992_i64),9162707299089718463_i64,(-2256875008645597598_i64),(-1171961492978111721_i64)];
_14 = [(-5327418425522366105_i64),(-1016558091168299104_i64),(-4504499704773389242_i64),(-411684914178285888_i64),(-829564470748317858_i64)];
_13 = _10;
_12 = false;
_8 = _17.3 ^ _17.3;
_8 = 25642_i16 as u32;
Goto(bb3)
}
bb3 = {
_12 = true;
_13 = _10;
_7 = [_17.3,_8,_17.3,_17.3,_17.3,_17.3,_17.3];
_17.4 = _16;
_21.fld0 = Adt42::Variant3 { fld0: 128_u8,fld1: _14,fld2: _9,fld3: 57_i8 };
_13 = _15;
_9 = core::ptr::addr_of!((*_9));
_5 = [_13,_13,_13,_15,_15,_20];
_15 = _10;
_2 = -_4.fld2;
_24 = _8;
place!(Field::<*const [u64; 2]>(Variant(_21.fld0, 3), 2)) = _9;
place!(Field::<i8>(Variant(_21.fld0, 3), 3)) = (-72_i8);
_27.fld4 = [_24,_17.3,_8,_24,_17.3,_8,_24];
_31 = _14;
Goto(bb4)
}
bb4 = {
_17.3 = _24;
_21.fld1 = !979334045677888265_usize;
_4.fld4 = [_17.3,_17.3,_8,_8,_17.3,_24,_8];
_6 = [_10,_13,_20,_10,_20,_15];
_5 = [_13,_20,_13,_10,_15,_13];
_27.fld4 = [_8,_24,_17.3,_24,_17.3,_17.3,_8];
_28 = Adt41::Variant0 { fld0: _24,fld1: (*_9),fld2: _17.0 };
_17.3 = _24;
_27.fld3 = [10918633128953504842_u64,11417972041410366729_u64];
_17.3 = !_24;
_29 = -_4.fld2;
place!(Field::<u8>(Variant(_21.fld0, 3), 0)) = 75_u8;
place!(Field::<u32>(Variant(_28, 0), 0)) = _8 * _17.3;
_8 = !Field::<u32>(Variant(_28, 0), 0);
_17.3 = !_24;
place!(Field::<[i64; 5]>(Variant(_21.fld0, 3), 1)) = _11;
place!(Field::<[u64; 2]>(Variant(_28, 0), 1)) = _27.fld3;
_27.fld1 = 11605694245071630638_u64 as i32;
_4.fld1 = Field::<f64>(Variant(_28, 0), 2) as i32;
_27 = Adt47 { fld0: _4.fld0,fld1: _4.fld1,fld2: _29,fld3: _4.fld3,fld4: _7 };
_17.1 = _1 | _1;
place!(Field::<u32>(Variant(_28, 0), 0)) = _24;
_21.fld0 = Adt42::Variant3 { fld0: 97_u8,fld1: _31,fld2: _9,fld3: 105_i8 };
_17.3 = !_24;
_34 = _2 + _27.fld2;
SetDiscriminant(_28, 0);
Call(_4.fld4 = fn7(_34, _29, _34, _34, _2, Field::<[i64; 5]>(Variant(_21.fld0, 3), 1), _34, Move(_27), _4.fld2, _34, _34, _29), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_37 = (-149387521887787838227117039563086229651_i128) * (-43793380595078892247901618463249436449_i128);
place!(Field::<i8>(Variant(_21.fld0, 3), 3)) = _15 as i8;
_4.fld0 = [45_u8,246_u8,112_u8,138_u8,192_u8,233_u8];
_27.fld4 = [_8,_24,_8,_17.3,_8,_8,_24];
_17.3 = !_24;
place!(Field::<*const [u64; 2]>(Variant(_21.fld0, 3), 2)) = core::ptr::addr_of!((*_9));
_27.fld3 = [13227477068296876263_u64,10755282167690827692_u64];
_4.fld2 = _29 | _34;
_21.fld1 = 6_usize | 13889474152001838555_usize;
_4.fld4 = _7;
_9 = Field::<*const [u64; 2]>(Variant(_21.fld0, 3), 2);
_17.0 = _17.4 * _17.4;
_27.fld0 = [66_u8,55_u8,188_u8,0_u8,68_u8,152_u8];
Goto(bb6)
}
bb6 = {
_26 = core::ptr::addr_of!(_37);
_20 = _15;
_14 = [4408349112903364030_i64,(-5688752320673404120_i64),2994188871226564108_i64,(-4270801896384897236_i64),(-2402621154500132697_i64)];
_1 = !_17.1;
_27.fld1 = _4.fld1 & _4.fld1;
_27.fld2 = !_34;
_16 = _17.0 * _17.0;
place!(Field::<u8>(Variant(_21.fld0, 3), 0)) = _1 as u8;
place!(Field::<[i64; 5]>(Variant(_21.fld0, 3), 1)) = [(-2690221809879506572_i64),(-338258198222643212_i64),(-8443293063562699676_i64),(-3250612612077650421_i64),(-7511201983763544493_i64)];
_27.fld2 = _34;
_7 = [_17.3,_24,_8,_8,_17.3,_17.3,_24];
place!(Field::<u32>(Variant(_28, 0), 0)) = !_8;
_35 = _21.fld1 * _21.fld1;
place!(Field::<i8>(Variant(_21.fld0, 3), 3)) = _17.0 as i8;
_4.fld1 = _29 as i32;
Goto(bb7)
}
bb7 = {
_4.fld0 = [Field::<u8>(Variant(_21.fld0, 3), 0),Field::<u8>(Variant(_21.fld0, 3), 0),Field::<u8>(Variant(_21.fld0, 3), 0),Field::<u8>(Variant(_21.fld0, 3), 0),Field::<u8>(Variant(_21.fld0, 3), 0),Field::<u8>(Variant(_21.fld0, 3), 0)];
place!(Field::<f64>(Variant(_28, 0), 2)) = _16;
_27.fld3 = [16669578014237163635_u64,7624010578466274275_u64];
_39 = _1 as i64;
_14 = Field::<[i64; 5]>(Variant(_21.fld0, 3), 1);
place!(Field::<u8>(Variant(_21.fld0, 3), 0)) = 233_u8 & 35_u8;
_41 = Field::<i8>(Variant(_21.fld0, 3), 3) as f32;
_20 = _15;
_23 = Adt40::Variant1 { fld0: _3,fld1: Field::<u8>(Variant(_21.fld0, 3), 0),fld2: _39,fld3: Field::<*const [u64; 2]>(Variant(_21.fld0, 3), 2),fld4: _26,fld5: Field::<u32>(Variant(_28, 0), 0) };
_9 = core::ptr::addr_of!(_27.fld3);
_33 = !190966321228129858022772790695044295683_u128;
_20 = _10;
place!(Field::<u32>(Variant(_23, 1), 5)) = _2 as u32;
_17.1 = _39 as u16;
place!(Field::<u32>(Variant(_23, 1), 5)) = _24;
RET = Field::<*const i128>(Variant(_23, 1), 4);
_39 = -Field::<i64>(Variant(_23, 1), 2);
_19 = Adt40::Variant1 { fld0: _7,fld1: Field::<u8>(Variant(_23, 1), 1),fld2: _39,fld3: Field::<*const [u64; 2]>(Variant(_23, 1), 3),fld4: _26,fld5: _24 };
place!(Field::<[u64; 2]>(Variant(_28, 0), 1)) = (*_9);
_37 = !(-147646585102693869895763470368405687076_i128);
_33 = 249389881739622549535086455977466244760_u128;
_4.fld2 = !_34;
_42 = _27.fld4;
place!(Field::<u32>(Variant(_19, 1), 5)) = !Field::<u32>(Variant(_28, 0), 0);
_43 = [Field::<u32>(Variant(_23, 1), 5),Field::<u32>(Variant(_19, 1), 5),_17.3,_17.3,Field::<u32>(Variant(_28, 0), 0),Field::<u32>(Variant(_28, 0), 0),_24];
_27.fld2 = _33 as isize;
_38 = _13 as isize;
_40 = _4.fld1 > _27.fld1;
place!(Field::<*const [u64; 2]>(Variant(_19, 1), 3)) = Field::<*const [u64; 2]>(Variant(_23, 1), 3);
Goto(bb8)
}
bb8 = {
_42 = _7;
_27.fld4 = [_17.3,_8,_8,_17.3,_8,Field::<u32>(Variant(_28, 0), 0),Field::<u32>(Variant(_19, 1), 5)];
_27.fld2 = !_2;
place!(Field::<f64>(Variant(_28, 0), 2)) = _8 as f64;
_10 = _13;
SetDiscriminant(_21.fld0, 2);
Call(_4.fld1 = fn9(_17.0, _23, _35, Move(_27), _31, _14, _23, _29, _12, _4.fld2, _20), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_16 = -_17.4;
place!(Field::<*const i128>(Variant(_19, 1), 4)) = RET;
_29 = Field::<u8>(Variant(_23, 1), 1) as isize;
_21.fld0 = Adt42::Variant3 { fld0: Field::<u8>(Variant(_23, 1), 1),fld1: _11,fld2: Field::<*const [u64; 2]>(Variant(_19, 1), 3),fld3: (-114_i8) };
_37 = (-21893805977547265377242981008621851213_i128) << Field::<i64>(Variant(_19, 1), 2);
place!(Field::<[i64; 5]>(Variant(_21.fld0, 3), 1)) = [Field::<i64>(Variant(_19, 1), 2),Field::<i64>(Variant(_23, 1), 2),Field::<i64>(Variant(_23, 1), 2),Field::<i64>(Variant(_19, 1), 2),Field::<i64>(Variant(_23, 1), 2)];
_19 = Adt40::Variant1 { fld0: _4.fld4,fld1: Field::<u8>(Variant(_23, 1), 1),fld2: _39,fld3: Field::<*const [u64; 2]>(Variant(_23, 1), 3),fld4: RET,fld5: _17.3 };
_27.fld2 = _4.fld2 & _29;
_10 = _20;
Goto(bb10)
}
bb10 = {
_4.fld4 = [_8,Field::<u32>(Variant(_28, 0), 0),Field::<u32>(Variant(_23, 1), 5),_8,_24,_17.3,_17.3];
_21.fld0 = Adt42::Variant0 { fld0: _8,fld1: Field::<u8>(Variant(_23, 1), 1),fld2: _4.fld2,fld3: RET,fld4: _33,fld5: _9,fld6: Move(_28),fld7: _19 };
_27.fld4 = [_17.3,Field::<u32>(Variant(_21.fld0, 0), 0),_17.3,Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),Field::<u32>(Variant(_23, 1), 5),_24];
_37 = Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5) as i128;
_6 = [_15,_20,_10,_13,_20,_10];
place!(Field::<u8>(Variant(place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)), 1), 1)) = Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5) as u8;
_45 = [Field::<u32>(Variant(Field::<Adt41>(Variant(_21.fld0, 0), 6), 0), 0),Field::<u32>(Variant(Field::<Adt41>(Variant(_21.fld0, 0), 6), 0), 0),Field::<u32>(Variant(_21.fld0, 0), 0),Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),_17.3,Field::<u32>(Variant(_21.fld0, 0), 0),Field::<u32>(Variant(Field::<Adt41>(Variant(_21.fld0, 0), 6), 0), 0)];
_23 = Field::<Adt40>(Variant(_21.fld0, 0), 7);
_30 = [Field::<u8>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 1),Field::<u8>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 1),Field::<u8>(Variant(_23, 1), 1),Field::<u8>(Variant(_23, 1), 1),Field::<u8>(Variant(_19, 1), 1),Field::<u8>(Variant(_23, 1), 1)];
_27.fld3 = [3471004382139291991_u64,1155041227139059517_u64];
SetDiscriminant(_19, 0);
Goto(bb11)
}
bb11 = {
place!(Field::<f64>(Variant(_19, 0), 5)) = Field::<f64>(Variant(Field::<Adt41>(Variant(_21.fld0, 0), 6), 0), 2);
_15 = _20;
_31 = [Field::<i64>(Variant(_23, 1), 2),_39,_39,Field::<i64>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 2),Field::<i64>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 2)];
_27.fld0 = [Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 1),Field::<u8>(Variant(_23, 1), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_21.fld0, 0), 1)];
place!(Field::<u32>(Variant(place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)), 1), 5)) = !_24;
_3 = [_17.3,_24,Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),_8,Field::<u32>(Variant(_21.fld0, 0), 0),_17.3,Field::<u32>(Variant(_21.fld0, 0), 0)];
_5 = _6;
_2 = _27.fld2 >> _8;
place!(Field::<isize>(Variant(_21.fld0, 0), 2)) = _2;
_30 = [Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_23, 1), 1),Field::<u8>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 1),Field::<u8>(Variant(_21.fld0, 0), 1)];
place!(Field::<u32>(Variant(place!(Field::<Adt41>(Variant(_21.fld0, 0), 6)), 0), 0)) = !_8;
place!(Field::<[u64; 2]>(Variant(_19, 0), 6)) = [2278108402731254889_u64,5667599007445125745_u64];
place!(Field::<[u8; 6]>(Variant(_19, 0), 7)) = [Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_21.fld0, 0), 1),Field::<u8>(Variant(_23, 1), 1)];
Call(_50 = core::intrinsics::transmute(_40), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
place!(Field::<u128>(Variant(_19, 0), 4)) = !_33;
_45 = [Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),Field::<u32>(Variant(Field::<Adt41>(Variant(_21.fld0, 0), 6), 0), 0),Field::<u32>(Variant(Field::<Adt41>(Variant(_21.fld0, 0), 6), 0), 0),Field::<u32>(Variant(_23, 1), 5),Field::<u32>(Variant(_23, 1), 5),Field::<u32>(Variant(_21.fld0, 0), 0),Field::<u32>(Variant(_23, 1), 5)];
place!(Field::<*const [u64; 2]>(Variant(place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)), 1), 3)) = Field::<*const [u64; 2]>(Variant(_23, 1), 3);
_53.0.2.0 = &place!(Field::<i64>(Variant(place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)), 1), 2));
place!(Field::<i64>(Variant(place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)), 1), 2)) = -Field::<i64>(Variant(_23, 1), 2);
place!(Field::<f64>(Variant(place!(Field::<Adt41>(Variant(_21.fld0, 0), 6)), 0), 2)) = -Field::<f64>(Variant(_19, 0), 5);
_44 = Field::<u8>(Variant(_23, 1), 1) as isize;
_17.0 = -Field::<f64>(Variant(_19, 0), 5);
place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)) = Adt40::Variant1 { fld0: _7,fld1: Field::<u8>(Variant(_21.fld0, 0), 1),fld2: _39,fld3: Field::<*const [u64; 2]>(Variant(_23, 1), 3),fld4: RET,fld5: _8 };
place!(Field::<[u64; 2]>(Variant(_19, 0), 6)) = _27.fld3;
_19 = _23;
SetDiscriminant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1);
place!(Field::<u32>(Variant(_19, 1), 5)) = Field::<u32>(Variant(_21.fld0, 0), 0);
_36 = core::ptr::addr_of!(_53.0.2.0);
_55 = Adt41::Variant2 { fld0: _37,fld1: _50,fld2: _34,fld3: 11588_i16 };
_52 = _17.4;
place!(Field::<*const i128>(Variant(_21.fld0, 0), 3)) = core::ptr::addr_of!(_53.0.5);
_47 = (-13_i8) - 102_i8;
_4.fld2 = Field::<isize>(Variant(_21.fld0, 0), 2) >> Field::<u32>(Variant(_19, 1), 5);
place!(Field::<*const [u64; 2]>(Variant(place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)), 1), 3)) = Field::<*const [u64; 2]>(Variant(_19, 1), 3);
Goto(bb13)
}
bb13 = {
place!(Field::<u32>(Variant(place!(Field::<Adt41>(Variant(_21.fld0, 0), 6)), 0), 0)) = Field::<u32>(Variant(_21.fld0, 0), 0) + Field::<u32>(Variant(_19, 1), 5);
_28 = Move(Field::<Adt41>(Variant(_21.fld0, 0), 6));
_17.0 = _17.4;
_10 = _13;
_9 = Field::<*const [u64; 2]>(Variant(_19, 1), 3);
_29 = Field::<isize>(Variant(_55, 2), 2);
_4.fld4 = _45;
_8 = Field::<u32>(Variant(_28, 0), 0);
match Field::<u128>(Variant(_21.fld0, 0), 4) {
0 => bb14,
1 => bb15,
249389881739622549535086455977466244760 => bb17,
_ => bb16
}
}
bb14 = {
_12 = true;
_13 = _10;
_7 = [_17.3,_8,_17.3,_17.3,_17.3,_17.3,_17.3];
_17.4 = _16;
_21.fld0 = Adt42::Variant3 { fld0: 128_u8,fld1: _14,fld2: _9,fld3: 57_i8 };
_13 = _15;
_9 = core::ptr::addr_of!((*_9));
_5 = [_13,_13,_13,_15,_15,_20];
_15 = _10;
_2 = -_4.fld2;
_24 = _8;
place!(Field::<*const [u64; 2]>(Variant(_21.fld0, 3), 2)) = _9;
place!(Field::<i8>(Variant(_21.fld0, 3), 3)) = (-72_i8);
_27.fld4 = [_24,_17.3,_8,_24,_17.3,_8,_24];
_31 = _14;
Goto(bb4)
}
bb15 = {
_17.3 = _24;
_21.fld1 = !979334045677888265_usize;
_4.fld4 = [_17.3,_17.3,_8,_8,_17.3,_24,_8];
_6 = [_10,_13,_20,_10,_20,_15];
_5 = [_13,_20,_13,_10,_15,_13];
_27.fld4 = [_8,_24,_17.3,_24,_17.3,_17.3,_8];
_28 = Adt41::Variant0 { fld0: _24,fld1: (*_9),fld2: _17.0 };
_17.3 = _24;
_27.fld3 = [10918633128953504842_u64,11417972041410366729_u64];
_17.3 = !_24;
_29 = -_4.fld2;
place!(Field::<u8>(Variant(_21.fld0, 3), 0)) = 75_u8;
place!(Field::<u32>(Variant(_28, 0), 0)) = _8 * _17.3;
_8 = !Field::<u32>(Variant(_28, 0), 0);
_17.3 = !_24;
place!(Field::<[i64; 5]>(Variant(_21.fld0, 3), 1)) = _11;
place!(Field::<[u64; 2]>(Variant(_28, 0), 1)) = _27.fld3;
_27.fld1 = 11605694245071630638_u64 as i32;
_4.fld1 = Field::<f64>(Variant(_28, 0), 2) as i32;
_27 = Adt47 { fld0: _4.fld0,fld1: _4.fld1,fld2: _29,fld3: _4.fld3,fld4: _7 };
_17.1 = _1 | _1;
place!(Field::<u32>(Variant(_28, 0), 0)) = _24;
_21.fld0 = Adt42::Variant3 { fld0: 97_u8,fld1: _31,fld2: _9,fld3: 105_i8 };
_17.3 = !_24;
_34 = _2 + _27.fld2;
SetDiscriminant(_28, 0);
Call(_4.fld4 = fn7(_34, _29, _34, _34, _2, Field::<[i64; 5]>(Variant(_21.fld0, 3), 1), _34, Move(_27), _4.fld2, _34, _34, _29), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_16 = -_17.4;
place!(Field::<*const i128>(Variant(_19, 1), 4)) = RET;
_29 = Field::<u8>(Variant(_23, 1), 1) as isize;
_21.fld0 = Adt42::Variant3 { fld0: Field::<u8>(Variant(_23, 1), 1),fld1: _11,fld2: Field::<*const [u64; 2]>(Variant(_19, 1), 3),fld3: (-114_i8) };
_37 = (-21893805977547265377242981008621851213_i128) << Field::<i64>(Variant(_19, 1), 2);
place!(Field::<[i64; 5]>(Variant(_21.fld0, 3), 1)) = [Field::<i64>(Variant(_19, 1), 2),Field::<i64>(Variant(_23, 1), 2),Field::<i64>(Variant(_23, 1), 2),Field::<i64>(Variant(_19, 1), 2),Field::<i64>(Variant(_23, 1), 2)];
_19 = Adt40::Variant1 { fld0: _4.fld4,fld1: Field::<u8>(Variant(_23, 1), 1),fld2: _39,fld3: Field::<*const [u64; 2]>(Variant(_23, 1), 3),fld4: RET,fld5: _17.3 };
_27.fld2 = _4.fld2 & _29;
_10 = _20;
Goto(bb10)
}
bb17 = {
_19 = _23;
place!(Field::<u128>(Variant(_21.fld0, 0), 4)) = _17.1 as u128;
place!(Field::<i16>(Variant(_55, 2), 3)) = _40 as i16;
_57 = (*_26) - (*_26);
_53.0.2.1 = Field::<u8>(Variant(_23, 1), 1);
place!(Field::<i64>(Variant(_23, 1), 2)) = -Field::<i64>(Variant(_19, 1), 2);
_54 = (_31,);
place!(Field::<*const i128>(Variant(_19, 1), 4)) = core::ptr::addr_of!(_53.0.5);
place!(Field::<*const i128>(Variant(_19, 1), 4)) = RET;
_38 = Field::<isize>(Variant(_21.fld0, 0), 2);
place!(Field::<Adt40>(Variant(_21.fld0, 0), 7)) = Adt40::Variant1 { fld0: Field::<[u32; 7]>(Variant(_19, 1), 0),fld1: Field::<u8>(Variant(_21.fld0, 0), 1),fld2: _39,fld3: _9,fld4: Field::<*const i128>(Variant(_19, 1), 4),fld5: Field::<u32>(Variant(_28, 0), 0) };
_58 = _41 - _41;
_20 = _13;
place!(Field::<[u32; 7]>(Variant(_19, 1), 0)) = [Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),Field::<u32>(Variant(_23, 1), 5),_8,Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5),Field::<u32>(Variant(_28, 0), 0),Field::<u32>(Variant(_28, 0), 0),Field::<u32>(Variant(Field::<Adt40>(Variant(_21.fld0, 0), 7), 1), 5)];
place!(Field::<*const [u64; 2]>(Variant(_19, 1), 3)) = core::ptr::addr_of!(_4.fld3);
place!(Field::<[u32; 7]>(Variant(_23, 1), 0)) = _43;
place!(Field::<f64>(Variant(_28, 0), 2)) = _17.0 * _16;
_27.fld1 = !_4.fld1;
_40 = !_12;
Goto(bb18)
}
bb18 = {
Call(_60 = dump_var(6_usize, 33_usize, Move(_33), 2_usize, Move(_2), 3_usize, Move(_3), 57_usize, Move(_57)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_60 = dump_var(6_usize, 37_usize, Move(_37), 1_usize, Move(_1), 31_usize, Move(_31), 43_usize, Move(_43)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_60 = dump_var(6_usize, 5_usize, Move(_5), 12_usize, Move(_12), 29_usize, Move(_29), 54_usize, Move(_54)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_60 = dump_var(6_usize, 34_usize, Move(_34), 44_usize, Move(_44), 40_usize, Move(_40), 38_usize, Move(_38)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: [i64; 5],mut _7: isize,mut _8: Adt47,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: isize) -> [u32; 7] {
mir! {
type RET = [u32; 7];
let _13: *const [u64; 2];
let _14: isize;
let _15: char;
let _16: [u32; 7];
let _17: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _18: (u16, char, &'static i64, char);
let _19: ([i64; 5],);
let _20: f64;
let _21: Adt41;
let _22: [char; 6];
let _23: [u32; 7];
let _24: [char; 6];
let _25: u64;
let _26: [u8; 6];
let _27: Adt43;
let _28: u16;
let _29: f32;
let _30: bool;
let _31: [i64; 5];
let _32: (i16, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), f32, [i64; 5], u16, &'static i64, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), (u16, char, &'static i64, char));
let _33: [u64; 2];
let _34: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _35: u32;
let _36: [char; 6];
let _37: *const &'static i64;
let _38: u64;
let _39: ((i16, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), f32, [i64; 5], u16, &'static i64, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), (u16, char, &'static i64, char)),);
let _40: f32;
let _41: Adt52;
let _42: f32;
let _43: bool;
let _44: (isize, (u16, char, &'static i64, char), f64);
let _45: f64;
let _46: [char; 6];
let _47: [i64; 5];
let _48: Adt47;
let _49: u32;
let _50: char;
let _51: char;
let _52: u16;
let _53: f32;
let _54: Adt42;
let _55: [u8; 6];
let _56: f32;
let _57: ();
let _58: ();
{
_2 = _5 ^ _9;
_12 = _1;
_7 = 322994517682579298271629418835685412957_u128 as isize;
_7 = _12;
RET = _8.fld4;
_8.fld4 = [2062177969_u32,100616711_u32,3080343469_u32,818568829_u32,1850123233_u32,2927315415_u32,2206488460_u32];
_11 = 72598438747944629_i64 as isize;
RET = [3822747504_u32,3010120153_u32,3666522444_u32,1279062920_u32,3669709076_u32,783696461_u32,495533410_u32];
_5 = _8.fld2;
_9 = (-13605_i16) as isize;
_3 = !_5;
_6 = [(-6363027973698560110_i64),3142635791290226456_i64,(-3543577213010116187_i64),7318735007015997437_i64,(-7856284315215882684_i64)];
_8.fld1 = (-602072958_i32);
_8.fld2 = _2;
_7 = 12779_u16 as isize;
_7 = _4 + _1;
_7 = _2 & _5;
_9 = _8.fld1 as isize;
Goto(bb1)
}
bb1 = {
_13 = core::ptr::addr_of!(_8.fld3);
_11 = _7 - _2;
_17.4 = 4_usize as f64;
_17.3 = 931609885_u32 + 4108408252_u32;
_18.3 = '\u{9317b}';
_8.fld2 = _10;
_15 = _18.3;
_17.1 = 11065475823798775532_usize as u16;
_18.1 = _15;
_1 = 15169370645512975066_usize as isize;
RET = _8.fld4;
_8.fld2 = !_3;
_6 = [4545837461399560028_i64,(-263239623346885899_i64),2274190463568191243_i64,(-5390558476442167911_i64),5661664295591067279_i64];
_17.3 = 3600085624_u32 & 2948953800_u32;
_19 = (_6,);
_18.0 = _17.1;
_20 = _17.4;
_12 = _11 + _11;
_18.1 = _18.3;
_9 = !_5;
_8.fld0 = [67_u8,223_u8,59_u8,44_u8,67_u8,181_u8];
_22 = [_18.3,_18.1,_18.1,_18.1,_18.1,_18.1];
_13 = core::ptr::addr_of!((*_13));
_8.fld1 = 791107363_i32 + (-503009085_i32);
_5 = _11;
Goto(bb2)
}
bb2 = {
_17.0 = 13832947875933594767_u64 as f64;
_1 = (-3971617438358595959_i64) as isize;
_8.fld2 = -_10;
_5 = _12;
_20 = _17.0 * _17.0;
_8.fld1 = -(-554914510_i32);
_14 = _12 << _5;
_17.1 = _15 as u16;
Goto(bb3)
}
bb3 = {
_11 = 48255093723892792099276958083702163609_u128 as isize;
_17.1 = _18.0 ^ _18.0;
_22 = [_18.1,_18.3,_18.1,_18.1,_15,_18.3];
_24 = [_15,_18.1,_18.3,_18.1,_18.1,_18.3];
_21 = Adt41::Variant2 { fld0: (-124053279804675246841847430966467324444_i128),fld1: 33_u8,fld2: _14,fld3: 4848_i16 };
_21 = Adt41::Variant2 { fld0: 133683596845527530261503250116182608242_i128,fld1: 13_u8,fld2: _7,fld3: 29244_i16 };
_1 = (-150373908646304249471947903799307581039_i128) as isize;
_8.fld0 = [181_u8,87_u8,117_u8,71_u8,254_u8,119_u8];
Goto(bb4)
}
bb4 = {
_29 = 148507003152183742013779903660141093929_i128 as f32;
_17.1 = _18.0 | _18.0;
_18.1 = _18.3;
place!(Field::<isize>(Variant(_21, 2), 2)) = _14 * _12;
_4 = _8.fld2 ^ _7;
place!(Field::<u8>(Variant(_21, 2), 1)) = !89_u8;
_18.0 = !_17.1;
_32.7.1 = _15;
_32.7.0 = _17.1;
_4 = -_12;
_32.3 = _19.0;
RET = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_32.7.1 = _18.1;
_19 = (_6,);
Goto(bb5)
}
bb5 = {
_32.2 = 15159883103089367963_u64 as f32;
_32.7.1 = _15;
_32.1.1 = _32.7.0 - _17.1;
RET = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_8.fld0 = [Field::<u8>(Variant(_21, 2), 1),Field::<u8>(Variant(_21, 2), 1),Field::<u8>(Variant(_21, 2), 1),Field::<u8>(Variant(_21, 2), 1),Field::<u8>(Variant(_21, 2), 1),Field::<u8>(Variant(_21, 2), 1)];
_32.6.1 = _32.7.0 + _32.1.1;
_22 = [_32.7.1,_18.1,_18.1,_32.7.1,_18.1,_18.1];
_32.2 = _29;
_21 = Adt41::Variant2 { fld0: (-7665371501999424578656732732706900824_i128),fld1: 221_u8,fld2: _4,fld3: 23429_i16 };
_32.0 = _29 as i16;
_23 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_23 = [_17.3,_17.3,_17.3,_17.3,_17.3,_17.3,_17.3];
_17.3 = !2523847867_u32;
_5 = _9 << _4;
place!(Field::<i16>(Variant(_21, 2), 3)) = _32.0 * _32.0;
_35 = _17.3 ^ _17.3;
_9 = _3;
_25 = (-107308068100316879124713867570045833445_i128) as u64;
_31 = _19.0;
_32.1.3 = !_35;
_34.3 = _25 as u32;
_12 = _5 ^ _4;
_29 = _32.2 + _32.2;
_27 = Adt43::Variant1 { fld0: 91_u8,fld1: (-4460747079806944556_i64) };
_8.fld0 = [196_u8,55_u8,64_u8,52_u8,16_u8,70_u8];
Goto(bb6)
}
bb6 = {
_13 = core::ptr::addr_of!((*_13));
_24 = [_18.3,_18.1,_18.3,_18.1,_18.1,_18.3];
_37 = core::ptr::addr_of!(_32.5);
place!(Field::<i16>(Variant(_21, 2), 3)) = _32.0 | _32.0;
_32.6.4 = _25 as f64;
place!(Field::<u8>(Variant(_27, 1), 0)) = 157_u8;
_16 = [_32.1.3,_17.3,_35,_17.3,_34.3,_17.3,_35];
_28 = 35_i8 as u16;
_8.fld2 = !_12;
_26 = [Field::<u8>(Variant(_27, 1), 0),Field::<u8>(Variant(_27, 1), 0),Field::<u8>(Variant(_27, 1), 0),Field::<u8>(Variant(_27, 1), 0),Field::<u8>(Variant(_27, 1), 0),Field::<u8>(Variant(_27, 1), 0)];
_23 = [_17.3,_34.3,_32.1.3,_35,_32.1.3,_34.3,_17.3];
_32.1.4 = _17.0;
_39.0.6.3 = _32.1.4 as u32;
Call(_32.6.3 = fn8(_12, _7, _14, _5), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_39.0.0 = _20 as i16;
_35 = !_32.6.3;
_39.0.6.4 = -_20;
_17.3 = _35 << _8.fld2;
_32.1.4 = _17.0 + _20;
_39.0.1.3 = !_17.3;
_18.3 = _32.7.1;
place!(Field::<i64>(Variant(_27, 1), 1)) = (-4300782258095169622_i64);
_39.0.7.2 = &place!(Field::<i64>(Variant(_27, 1), 1));
_39.0.5 = Move(_39.0.7.2);
_44.1.2 = &place!(Field::<i64>(Variant(_27, 1), 1));
place!(Field::<i128>(Variant(_21, 2), 0)) = (-55513297661802312608596799558000948493_i128) | (-48629776290907953679452729899727130604_i128);
_32.4 = _32.0 as u16;
RET = _16;
_7 = _8.fld2 - _12;
Goto(bb8)
}
bb8 = {
_34.3 = 312201488297697744724120569275163552558_u128 as u32;
_12 = _4 ^ _8.fld2;
_43 = false;
_34.4 = _32.6.4 * _17.4;
_18.2 = &place!(Field::<i64>(Variant(_27, 1), 1));
_39.0.0 = _8.fld1 as i16;
_44.1.3 = _18.3;
_33 = [_25,_25];
_34.1 = _8.fld1 as u16;
SetDiscriminant(_27, 0);
_39.0.6.3 = _39.0.1.3;
_34.2 = core::ptr::addr_of_mut!(_44);
_39.0.1 = (_39.0.6.4, _32.7.0, Move(_34.2), _32.6.3, _32.1.4);
_5 = _14 * _8.fld2;
_32.1.0 = _39.0.1.0;
_17.0 = _39.0.1.4;
_45 = _39.0.1.4 - _39.0.6.4;
Goto(bb9)
}
bb9 = {
_34.4 = _45 - _32.1.4;
_24 = [_18.1,_32.7.1,_18.1,_32.7.1,_18.3,_32.7.1];
_39.0.1.2 = core::ptr::addr_of_mut!(_44);
_8.fld2 = _18.1 as isize;
_39.0.7.3 = _32.7.1;
_44.1.1 = _32.7.1;
_52 = _32.6.1 + _34.1;
_39.0.0 = Field::<i16>(Variant(_21, 2), 3) + _32.0;
Goto(bb10)
}
bb10 = {
_32.1.4 = _45;
_39.0.1.1 = _32.6.1;
_34.4 = _32.6.4;
_38 = _25;
_46 = [_44.1.3,_44.1.1,_18.1,_39.0.7.3,_44.1.3,_15];
_39.0.1.3 = !_17.3;
_50 = _32.7.1;
_44.2 = _39.0.1.3 as f64;
_18.1 = _39.0.7.3;
_15 = _44.1.1;
_43 = true | true;
_44.1.0 = _32.6.1 + _32.1.1;
_39.0.6.0 = -_44.2;
place!(Field::<usize>(Variant(_27, 0), 5)) = _38 as usize;
RET = [_32.6.3,_35,_32.6.3,_35,_17.3,_32.6.3,_35];
_53 = _29;
_39.0.1.0 = -_39.0.6.0;
Goto(bb11)
}
bb11 = {
Call(_57 = dump_var(7_usize, 35_usize, Move(_35), 14_usize, Move(_14), 25_usize, Move(_25), 33_usize, Move(_33)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_57 = dump_var(7_usize, 16_usize, Move(_16), 50_usize, Move(_50), 9_usize, Move(_9), 22_usize, Move(_22)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_57 = dump_var(7_usize, 46_usize, Move(_46), 4_usize, Move(_4), 19_usize, Move(_19), 26_usize, Move(_26)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_57 = dump_var(7_usize, 5_usize, Move(_5), 11_usize, Move(_11), 58_usize, _58, 58_usize, _58), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize) -> u32 {
mir! {
type RET = u32;
let _5: [u8; 6];
let _6: (isize, (u16, char, &'static i64, char), f64);
let _7: [u32; 7];
let _8: u16;
let _9: [u32; 6];
let _10: [u32; 6];
let _11: ();
let _12: ();
{
_3 = _1;
_2 = -_3;
_3 = _4;
RET = (-6406281384238800641_i64) as u32;
_3 = _2 >> _1;
_4 = !_3;
_5 = [34_u8,180_u8,6_u8,254_u8,114_u8,132_u8];
_6.1.3 = '\u{f743c}';
Goto(bb1)
}
bb1 = {
_6.0 = _2 >> _3;
_5 = [7_u8,55_u8,130_u8,98_u8,33_u8,101_u8];
_6.2 = (-2087502967_i32) as f64;
_6.1.0 = !32649_u16;
_6.1.1 = _6.1.3;
_2 = 16495_i16 as isize;
_6.2 = 111504813865910694326048497202562116387_i128 as f64;
_2 = -_1;
_6.0 = _6.1.1 as isize;
_5 = [45_u8,102_u8,83_u8,188_u8,208_u8,241_u8];
_6.1.1 = _6.1.3;
_6.1.3 = _6.1.1;
_1 = _3;
_6.0 = _3 * _1;
_6.0 = !_4;
RET = 3719559180_u32 | 3016073232_u32;
_8 = !_6.1.0;
_6.1.1 = _6.1.3;
_8 = _6.1.0 | _6.1.0;
_7 = [RET,RET,RET,RET,RET,RET,RET];
_7 = [RET,RET,RET,RET,RET,RET,RET];
_7 = [RET,RET,RET,RET,RET,RET,RET];
_2 = _1 & _6.0;
_9 = [RET,RET,RET,RET,RET,RET];
RET = !908932600_u32;
_6.0 = 11630456425170335551_u64 as isize;
_6.2 = _8 as f64;
RET = 4218697850_u32 >> _3;
_1 = 192003972000481101115958436260478789373_u128 as isize;
Goto(bb2)
}
bb2 = {
Call(_11 = dump_var(8_usize, 5_usize, Move(_5), 8_usize, Move(_8), 7_usize, Move(_7), 9_usize, Move(_9)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: f64,mut _2: Adt40,mut _3: usize,mut _4: Adt47,mut _5: [i64; 5],mut _6: [i64; 5],mut _7: Adt40,mut _8: isize,mut _9: bool,mut _10: isize,mut _11: char) -> i32 {
mir! {
type RET = i32;
let _12: isize;
let _13: *const i128;
let _14: [u32; 7];
let _15: [u32; 6];
let _16: char;
let _17: i8;
let _18: f64;
let _19: isize;
let _20: [u8; 6];
let _21: isize;
let _22: &'static i64;
let _23: bool;
let _24: [u32; 7];
let _25: f32;
let _26: f32;
let _27: char;
let _28: [u64; 2];
let _29: isize;
let _30: &'static i64;
let _31: [u64; 2];
let _32: isize;
let _33: Adt41;
let _34: [u8; 6];
let _35: i128;
let _36: Adt43;
let _37: [u32; 6];
let _38: [i64; 5];
let _39: isize;
let _40: [u8; 6];
let _41: [u8; 6];
let _42: ([i64; 5],);
let _43: [char; 6];
let _44: isize;
let _45: Adt40;
let _46: [u64; 2];
let _47: isize;
let _48: isize;
let _49: isize;
let _50: *const i128;
let _51: [u32; 6];
let _52: isize;
let _53: Adt44;
let _54: ();
let _55: ();
{
place!(Field::<u32>(Variant(_7, 1), 5)) = !Field::<u32>(Variant(_2, 1), 5);
place!(Field::<[u32; 7]>(Variant(_2, 1), 0)) = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
_10 = !_4.fld2;
RET = !_4.fld1;
_4.fld4 = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
_9 = false;
_11 = '\u{d418a}';
_8 = _4.fld2;
_10 = _8;
place!(Field::<u8>(Variant(_7, 1), 1)) = Field::<u8>(Variant(_2, 1), 1);
place!(Field::<i64>(Variant(_7, 1), 2)) = -Field::<i64>(Variant(_2, 1), 2);
place!(Field::<u8>(Variant(_7, 1), 1)) = Field::<u8>(Variant(_2, 1), 1) & Field::<u8>(Variant(_2, 1), 1);
_4.fld3 = [3829330554100914259_u64,7793146311491570577_u64];
place!(Field::<u8>(Variant(_2, 1), 1)) = Field::<u8>(Variant(_7, 1), 1);
RET = -_4.fld1;
place!(Field::<i64>(Variant(_7, 1), 2)) = !Field::<i64>(Variant(_2, 1), 2);
_2 = Adt40::Variant1 { fld0: Field::<[u32; 7]>(Variant(_7, 1), 0),fld1: Field::<u8>(Variant(_7, 1), 1),fld2: Field::<i64>(Variant(_7, 1), 2),fld3: Field::<*const [u64; 2]>(Variant(_7, 1), 3),fld4: Field::<*const i128>(Variant(_7, 1), 4),fld5: Field::<u32>(Variant(_7, 1), 5) };
SetDiscriminant(_2, 0);
Call(_4.fld0 = fn10(Field::<i64>(Variant(_7, 1), 2), _10, _4.fld2, _8, _8, _6, _8, _7, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
place!(Field::<u128>(Variant(_2, 0), 4)) = _8 as u128;
place!(Field::<char>(Variant(_2, 0), 1)) = _11;
RET = -_4.fld1;
place!(Field::<u32>(Variant(_7, 1), 5)) = 1000531636_u32 + 2818077652_u32;
_4.fld3 = [10723731385225195751_u64,16142847716833748740_u64];
place!(Field::<f64>(Variant(_2, 0), 5)) = 118555162009552251228101553872026894850_i128 as f64;
_8 = _4.fld2;
place!(Field::<f64>(Variant(_2, 0), 5)) = -_1;
_18 = Field::<f64>(Variant(_2, 0), 5);
place!(Field::<*const u32>(Variant(_2, 0), 2)) = core::ptr::addr_of!(place!(Field::<u32>(Variant(_7, 1), 5)));
place!(Field::<[u8; 6]>(Variant(_2, 0), 7)) = _4.fld0;
_16 = _11;
_15 = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
place!(Field::<i64>(Variant(_7, 1), 2)) = !7897240818112748017_i64;
_9 = _10 >= _4.fld2;
_3 = 4_usize << Field::<u8>(Variant(_7, 1), 1);
RET = -_4.fld1;
_15 = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
_13 = Field::<*const i128>(Variant(_7, 1), 4);
_10 = _4.fld2 | _8;
place!(Field::<[i64; 5]>(Variant(_2, 0), 3)) = [Field::<i64>(Variant(_7, 1), 2),Field::<i64>(Variant(_7, 1), 2),Field::<i64>(Variant(_7, 1), 2),Field::<i64>(Variant(_7, 1), 2),Field::<i64>(Variant(_7, 1), 2)];
_12 = _10 | _8;
_2 = _7;
_12 = _10;
_16 = _11;
Call(_5 = fn13(Move(_4), _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4.fld4 = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5)];
_11 = _16;
_1 = -_18;
_20 = [Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1)];
_4.fld1 = RET - RET;
_4.fld2 = _8 * _12;
_14 = Field::<[u32; 7]>(Variant(_7, 1), 0);
place!(Field::<[u32; 7]>(Variant(_2, 1), 0)) = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
_14 = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
Goto(bb3)
}
bb3 = {
_12 = _4.fld2 & _10;
_5 = [Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2)];
_4.fld0 = _20;
_4.fld3 = [8898059125118928473_u64,6594897783207004996_u64];
_4.fld3 = [15650980565505027600_u64,12786034527865772077_u64];
_13 = Field::<*const i128>(Variant(_2, 1), 4);
_6 = _5;
_25 = _3 as f32;
_17 = _9 as i8;
_29 = _12;
_22 = &place!(Field::<i64>(Variant(_7, 1), 2));
Goto(bb4)
}
bb4 = {
SetDiscriminant(_2, 0);
_20 = _4.fld0;
RET = 233926389872357106801028236416321247305_u128 as i32;
_2 = _7;
_13 = Field::<*const i128>(Variant(_7, 1), 4);
_1 = -_18;
_28 = [17211421976058605300_u64,9370567463712228302_u64];
_7 = _2;
SetDiscriminant(_7, 1);
_20 = [Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1)];
_25 = _17 as f32;
_12 = _4.fld2 - _8;
_27 = _16;
place!(Field::<[u32; 7]>(Variant(_2, 1), 0)) = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5)];
_7 = _2;
Call(_19 = core::intrinsics::transmute(_29), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Goto(bb6)
}
bb6 = {
_26 = _25 * _25;
Goto(bb7)
}
bb7 = {
_4.fld0 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1)];
place!(Field::<i64>(Variant(_2, 1), 2)) = 65053_u16 as i64;
Goto(bb8)
}
bb8 = {
RET = _4.fld1 | _4.fld1;
_9 = !false;
_18 = _1;
_40 = _20;
_20 = [Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1)];
_4.fld2 = _29;
place!(Field::<[u32; 7]>(Variant(_2, 1), 0)) = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5)];
_38 = _6;
_24 = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5)];
place!(Field::<[u32; 7]>(Variant(_2, 1), 0)) = _14;
place!(Field::<[u32; 7]>(Variant(_2, 1), 0)) = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
_9 = !false;
place!(Field::<u32>(Variant(_2, 1), 5)) = Field::<u32>(Variant(_7, 1), 5);
_23 = !_9;
_7 = _2;
_41 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1)];
_21 = -_10;
_12 = _29 << _4.fld2;
Call(place!(Field::<u32>(Variant(_7, 1), 5)) = core::intrinsics::transmute(RET), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
place!(Field::<u8>(Variant(_7, 1), 1)) = Field::<u8>(Variant(_2, 1), 1);
Goto(bb10)
}
bb10 = {
_22 = &place!(Field::<i64>(Variant(_7, 1), 2));
_39 = _4.fld2;
place!(Field::<*const i128>(Variant(_2, 1), 4)) = Field::<*const i128>(Variant(_7, 1), 4);
Goto(bb11)
}
bb11 = {
_30 = &(*_22);
_24 = [Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
Goto(bb12)
}
bb12 = {
_35 = !138511973206350658795919992944021855348_i128;
_24 = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_2, 1), 5),Field::<u32>(Variant(_2, 1), 5)];
_32 = !_39;
_34 = _40;
_20 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_2, 1), 1)];
_31 = [16856616264489185359_u64,6932425214552093977_u64];
_7 = _2;
_27 = _16;
_7 = _2;
_34 = _41;
Goto(bb13)
}
bb13 = {
_17 = 104_i8;
_44 = _12 + _12;
SetDiscriminant(_2, 0);
_30 = &place!(Field::<i64>(Variant(_7, 1), 2));
place!(Field::<[u64; 2]>(Variant(_2, 0), 6)) = _28;
_24 = [Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5),Field::<u32>(Variant(_7, 1), 5)];
RET = !_4.fld1;
_41 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1)];
place!(Field::<*const i128>(Variant(_7, 1), 4)) = core::ptr::addr_of!(_35);
_41 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1)];
_42 = (_5,);
_47 = _4.fld2;
place!(Field::<char>(Variant(_2, 0), 1)) = _11;
SetDiscriminant(_7, 0);
_8 = _47 & _19;
_15 = [3215206727_u32,153146399_u32,1614604117_u32,3637531654_u32,2581747908_u32,573478713_u32];
place!(Field::<[u8; 6]>(Variant(_2, 0), 7)) = [35_u8,100_u8,51_u8,146_u8,215_u8,166_u8];
_25 = -_26;
place!(Field::<[i64; 5]>(Variant(_7, 0), 3)) = [3145010123083455664_i64,6353185816359499456_i64,(-5932560331038460392_i64),(-3506866806058120437_i64),(-7614247072638214907_i64)];
Goto(bb14)
}
bb14 = {
_4.fld4 = [1647554701_u32,2856592295_u32,3110156561_u32,1028726661_u32,412491500_u32,3940744966_u32,2465474615_u32];
_39 = _12 | _44;
_50 = core::ptr::addr_of!(_35);
place!(Field::<[i64; 5]>(Variant(_2, 0), 3)) = [2639534046252014794_i64,(-8500304813993712067_i64),(-3913515001612928569_i64),6402746803269135732_i64,(-5359810557331267578_i64)];
_42.0 = [6897828458354946361_i64,850572256466060349_i64,(-8411211954175265242_i64),9129898894239974706_i64,5863743919379378387_i64];
place!(Field::<[i64; 5]>(Variant(_7, 0), 3)) = Field::<[i64; 5]>(Variant(_2, 0), 3);
_20 = [81_u8,7_u8,114_u8,5_u8,119_u8,10_u8];
_4.fld1 = 15090851523195156154_u64 as i32;
_6 = [(-8027875092528395185_i64),(-2759990085914797125_i64),3678005298639208732_i64,(-513143493685078640_i64),2653346438332168946_i64];
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(9_usize, 12_usize, Move(_12), 41_usize, Move(_41), 11_usize, Move(_11), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(9_usize, 40_usize, Move(_40), 39_usize, Move(_39), 28_usize, Move(_28), 31_usize, Move(_31)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(9_usize, 3_usize, Move(_3), 16_usize, Move(_16), 24_usize, Move(_24), 35_usize, Move(_35)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(9_usize, 17_usize, Move(_17), 42_usize, Move(_42), 5_usize, Move(_5), 55_usize, _55), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: i64,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: [i64; 5],mut _7: isize,mut _8: Adt40,mut _9: isize) -> [u8; 6] {
mir! {
type RET = [u8; 6];
let _10: *const &'static i64;
let _11: [i64; 5];
let _12: (*const &'static i64, u16, (&'static i64, u8), *const i128, ([u32; 6], *const *const &'static i64, bool, *const i128), i128);
let _13: [u64; 2];
let _14: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _15: isize;
let _16: i64;
let _17: i64;
let _18: Adt43;
let _19: Adt50;
let _20: i128;
let _21: usize;
let _22: ();
let _23: ();
{
_4 = _2;
Goto(bb1)
}
bb1 = {
_4 = 1039476080_i32 as isize;
_3 = -_7;
place!(Field::<[u32; 7]>(Variant(_8, 1), 0)) = [Field::<u32>(Variant(_8, 1), 5),Field::<u32>(Variant(_8, 1), 5),Field::<u32>(Variant(_8, 1), 5),Field::<u32>(Variant(_8, 1), 5),Field::<u32>(Variant(_8, 1), 5),Field::<u32>(Variant(_8, 1), 5),Field::<u32>(Variant(_8, 1), 5)];
Call(_3 = core::intrinsics::transmute(_9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = [Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2)];
_4 = -_9;
Goto(bb3)
}
bb3 = {
_5 = !_3;
Call(_3 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
place!(Field::<u8>(Variant(_8, 1), 1)) = 242_u8 >> Field::<i64>(Variant(_8, 1), 2);
_7 = _5;
_1 = Field::<i64>(Variant(_8, 1), 2);
_9 = _3;
_12.2.0 = &place!(Field::<i64>(Variant(_8, 1), 2));
_12.0 = core::ptr::addr_of!(_12.2.0);
_12.4.1 = core::ptr::addr_of!(_10);
_12.4.2 = false;
place!(Field::<*const i128>(Variant(_8, 1), 4)) = core::ptr::addr_of!(_12.5);
_3 = _2;
_13 = [11216376735585589834_u64,6916594391313677363_u64];
_12.3 = core::ptr::addr_of!(_12.5);
_12.5 = -(-92113850772998554262518626324282386428_i128);
_6 = [Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2),Field::<i64>(Variant(_8, 1), 2),_1];
_12.0 = core::ptr::addr_of!(_12.2.0);
Goto(bb5)
}
bb5 = {
_5 = 17353786022709213749_u64 as isize;
_10 = Move(_12.0);
_11 = [_1,Field::<i64>(Variant(_8, 1), 2),_1,Field::<i64>(Variant(_8, 1), 2),_1];
_4 = 23_i8 as isize;
_9 = 1396314810_i32 as isize;
_14.1 = 33071_u16;
Call(_12.2.1 = fn11(_9, _3, _8, _7, _6, _8, Move(_12.2.0), _7, _1, _2, Move(_12.4.1), _8, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
SetDiscriminant(_8, 0);
_17 = -_1;
place!(Field::<[u64; 2]>(Variant(_8, 0), 6)) = [441480971773944711_u64,7924967503406858542_u64];
_12.4.2 = _17 <= _17;
_5 = -_3;
_14.4 = 6475_i16 as f64;
_14.4 = 232839135323051462150194728076231491158_u128 as f64;
_12.2.0 = &_1;
_12.4.0 = [2524548623_u32,1057313967_u32,3040092170_u32,386525734_u32,2582110419_u32,2630569981_u32];
RET = [_12.2.1,_12.2.1,_12.2.1,_12.2.1,_12.2.1,_12.2.1];
_12.4.3 = _12.3;
place!(Field::<u128>(Variant(_8, 0), 4)) = !12464784544329775192404241727861906548_u128;
Goto(bb7)
}
bb7 = {
Call(_22 = dump_var(10_usize, 1_usize, Move(_1), 17_usize, Move(_17), 9_usize, Move(_9), 11_usize, Move(_11)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_22 = dump_var(10_usize, 6_usize, Move(_6), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize,mut _2: isize,mut _3: Adt40,mut _4: isize,mut _5: [i64; 5],mut _6: Adt40,mut _7: &'static i64,mut _8: isize,mut _9: i64,mut _10: isize,mut _11: *const *const &'static i64,mut _12: Adt40,mut _13: isize) -> u8 {
mir! {
type RET = u8;
let _14: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _15: Adt41;
let _16: i64;
let _17: [i64; 5];
let _18: [u32; 7];
let _19: isize;
let _20: ();
let _21: ();
{
place!(Field::<u8>(Variant(_12, 1), 1)) = _1 as u8;
_3 = _6;
place!(Field::<[u32; 7]>(Variant(_12, 1), 0)) = [Field::<u32>(Variant(_3, 1), 5),Field::<u32>(Variant(_3, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_6, 1), 5),Field::<u32>(Variant(_3, 1), 5),Field::<u32>(Variant(_12, 1), 5)];
_10 = !_13;
RET = _4 as u8;
place!(Field::<u32>(Variant(_6, 1), 5)) = Field::<u32>(Variant(_12, 1), 5);
place!(Field::<*const [u64; 2]>(Variant(_3, 1), 3)) = Field::<*const [u64; 2]>(Variant(_6, 1), 3);
_9 = Field::<i64>(Variant(_12, 1), 2) & Field::<i64>(Variant(_3, 1), 2);
place!(Field::<*const i128>(Variant(_6, 1), 4)) = Field::<*const i128>(Variant(_12, 1), 4);
place!(Field::<*const i128>(Variant(_3, 1), 4)) = Field::<*const i128>(Variant(_6, 1), 4);
RET = !Field::<u8>(Variant(_6, 1), 1);
SetDiscriminant(_3, 1);
place!(Field::<*const [u64; 2]>(Variant(_3, 1), 3)) = Field::<*const [u64; 2]>(Variant(_12, 1), 3);
Call(RET = fn12(_6, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = !Field::<i64>(Variant(_6, 1), 2);
_9 = true as i64;
_7 = &place!(Field::<i64>(Variant(_12, 1), 2));
place!(Field::<[u32; 7]>(Variant(_3, 1), 0)) = Field::<[u32; 7]>(Variant(_6, 1), 0);
Goto(bb2)
}
bb2 = {
place!(Field::<*const i128>(Variant(_3, 1), 4)) = Field::<*const i128>(Variant(_12, 1), 4);
place!(Field::<*const [u64; 2]>(Variant(_6, 1), 3)) = Field::<*const [u64; 2]>(Variant(_12, 1), 3);
place!(Field::<i64>(Variant(_6, 1), 2)) = !(*_7);
Goto(bb3)
}
bb3 = {
_8 = Field::<u8>(Variant(_6, 1), 1) as isize;
_12 = _6;
place!(Field::<*const [u64; 2]>(Variant(_12, 1), 3)) = Field::<*const [u64; 2]>(Variant(_3, 1), 3);
place!(Field::<u32>(Variant(_12, 1), 5)) = Field::<u32>(Variant(_6, 1), 5) | Field::<u32>(Variant(_6, 1), 5);
_4 = _8;
SetDiscriminant(_6, 1);
place!(Field::<[u32; 7]>(Variant(_12, 1), 0)) = [Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5)];
place!(Field::<u8>(Variant(_3, 1), 1)) = _10 as u8;
_7 = &_9;
_14.1 = 16439_u16 - 40363_u16;
place!(Field::<[u32; 7]>(Variant(_6, 1), 0)) = [Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5),Field::<u32>(Variant(_12, 1), 5)];
_7 = &_9;
place!(Field::<i64>(Variant(_6, 1), 2)) = (-51_i8) as i64;
_1 = !_4;
_1 = _2 >> _13;
_15 = Adt41::Variant2 { fld0: (-95604580644189079524932663631346029673_i128),fld1: Field::<u8>(Variant(_12, 1), 1),fld2: _1,fld3: (-16311_i16) };
RET = Field::<u8>(Variant(_3, 1), 1) ^ Field::<u8>(Variant(_3, 1), 1);
_7 = &(*_7);
_2 = _1 | _10;
_15 = Adt41::Variant2 { fld0: (-108715069092973615548405263409722682425_i128),fld1: RET,fld2: _4,fld3: (-9232_i16) };
Goto(bb4)
}
bb4 = {
Call(_20 = dump_var(11_usize, 13_usize, Move(_13), 9_usize, Move(_9), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: Adt40,mut _2: i64) -> u8 {
mir! {
type RET = u8;
let _3: isize;
let _4: i32;
let _5: isize;
let _6: bool;
let _7: u64;
let _8: f64;
let _9: Adt41;
let _10: [i64; 5];
let _11: Adt47;
let _12: [i64; 5];
let _13: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _14: isize;
let _15: f32;
let _16: [u32; 7];
let _17: [i64; 5];
let _18: Adt55;
let _19: (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64);
let _20: [u32; 6];
let _21: Adt42;
let _22: ();
let _23: ();
{
place!(Field::<u32>(Variant(_1, 1), 5)) = 398956974_u32;
_2 = 27023_u16 as i64;
RET = Field::<u8>(Variant(_1, 1), 1);
RET = Field::<u8>(Variant(_1, 1), 1);
RET = !Field::<u8>(Variant(_1, 1), 1);
place!(Field::<[u32; 7]>(Variant(_1, 1), 0)) = [Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5)];
place!(Field::<u32>(Variant(_1, 1), 5)) = 439845006_u32;
_3 = -89_isize;
RET = !Field::<u8>(Variant(_1, 1), 1);
place!(Field::<u8>(Variant(_1, 1), 1)) = (-15607_i16) as u8;
_2 = (-57_i8) as i64;
_4 = (-1812088824_i32) >> RET;
Goto(bb1)
}
bb1 = {
place!(Field::<u8>(Variant(_1, 1), 1)) = RET + RET;
_3 = 106_isize;
place!(Field::<i64>(Variant(_1, 1), 2)) = 115_i8 as i64;
RET = !Field::<u8>(Variant(_1, 1), 1);
place!(Field::<i64>(Variant(_1, 1), 2)) = _2;
RET = Field::<u8>(Variant(_1, 1), 1);
_7 = 4129380423340112361_u64 | 9440827407138323834_u64;
place!(Field::<u32>(Variant(_1, 1), 5)) = 3088581121_u32 & 1670138856_u32;
place!(Field::<u32>(Variant(_1, 1), 5)) = 216001707_u32 | 3599294620_u32;
place!(Field::<u32>(Variant(_1, 1), 5)) = _3 as u32;
_5 = 16255595969086363508_usize as isize;
Goto(bb2)
}
bb2 = {
_2 = -Field::<i64>(Variant(_1, 1), 2);
_4 = 14985_u16 as i32;
place!(Field::<[u32; 7]>(Variant(_1, 1), 0)) = [Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5)];
_6 = false & true;
_6 = !true;
_4 = (-1661744386_i32) + 737084519_i32;
_6 = !true;
match _3 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
106 => bb8,
_ => bb7
}
}
bb3 = {
place!(Field::<u8>(Variant(_1, 1), 1)) = RET + RET;
_3 = 106_isize;
place!(Field::<i64>(Variant(_1, 1), 2)) = 115_i8 as i64;
RET = !Field::<u8>(Variant(_1, 1), 1);
place!(Field::<i64>(Variant(_1, 1), 2)) = _2;
RET = Field::<u8>(Variant(_1, 1), 1);
_7 = 4129380423340112361_u64 | 9440827407138323834_u64;
place!(Field::<u32>(Variant(_1, 1), 5)) = 3088581121_u32 & 1670138856_u32;
place!(Field::<u32>(Variant(_1, 1), 5)) = 216001707_u32 | 3599294620_u32;
place!(Field::<u32>(Variant(_1, 1), 5)) = _3 as u32;
_5 = 16255595969086363508_usize as isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
place!(Field::<i64>(Variant(_1, 1), 2)) = _2 >> RET;
_3 = _5 ^ _5;
_2 = Field::<i64>(Variant(_1, 1), 2) & Field::<i64>(Variant(_1, 1), 2);
place!(Field::<i64>(Variant(_1, 1), 2)) = _3 as i64;
_3 = _5;
_2 = Field::<i64>(Variant(_1, 1), 2);
SetDiscriminant(_1, 0);
place!(Field::<[u8; 6]>(Variant(_1, 0), 7)) = [RET,RET,RET,RET,RET,RET];
_11.fld3 = [_7,_7];
_11.fld1 = _4;
RET = !131_u8;
place!(Field::<bool>(Variant(_1, 0), 0)) = !_6;
_13.4 = (-23385_i16) as f64;
_11.fld0 = [RET,RET,RET,RET,RET,RET];
_8 = _13.4;
Goto(bb9)
}
bb9 = {
_11.fld2 = -_3;
place!(Field::<u128>(Variant(_1, 0), 4)) = 306878088080035311611971012230122698289_u128;
_8 = 18040555046144389915226566398925366719_i128 as f64;
Goto(bb10)
}
bb10 = {
_14 = !_3;
match Field::<u128>(Variant(_1, 0), 4) {
0 => bb1,
1 => bb6,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
306878088080035311611971012230122698289 => bb16,
_ => bb15
}
}
bb11 = {
_11.fld2 = -_3;
place!(Field::<u128>(Variant(_1, 0), 4)) = 306878088080035311611971012230122698289_u128;
_8 = 18040555046144389915226566398925366719_i128 as f64;
Goto(bb10)
}
bb12 = {
place!(Field::<i64>(Variant(_1, 1), 2)) = _2 >> RET;
_3 = _5 ^ _5;
_2 = Field::<i64>(Variant(_1, 1), 2) & Field::<i64>(Variant(_1, 1), 2);
place!(Field::<i64>(Variant(_1, 1), 2)) = _3 as i64;
_3 = _5;
_2 = Field::<i64>(Variant(_1, 1), 2);
SetDiscriminant(_1, 0);
place!(Field::<[u8; 6]>(Variant(_1, 0), 7)) = [RET,RET,RET,RET,RET,RET];
_11.fld3 = [_7,_7];
_11.fld1 = _4;
RET = !131_u8;
place!(Field::<bool>(Variant(_1, 0), 0)) = !_6;
_13.4 = (-23385_i16) as f64;
_11.fld0 = [RET,RET,RET,RET,RET,RET];
_8 = _13.4;
Goto(bb9)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_2 = -Field::<i64>(Variant(_1, 1), 2);
_4 = 14985_u16 as i32;
place!(Field::<[u32; 7]>(Variant(_1, 1), 0)) = [Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5),Field::<u32>(Variant(_1, 1), 5)];
_6 = false & true;
_6 = !true;
_4 = (-1661744386_i32) + 737084519_i32;
_6 = !true;
match _3 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
106 => bb8,
_ => bb7
}
}
bb16 = {
_11.fld1 = -_4;
_13.3 = !1131332813_u32;
place!(Field::<u128>(Variant(_1, 0), 4)) = 139514079802654239043231619484216041545_u128;
_12 = [_2,_2,_2,_2,_2];
Goto(bb17)
}
bb17 = {
Call(_22 = dump_var(12_usize, 14_usize, Move(_14), 6_usize, Move(_6), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: Adt47,mut _2: Adt40) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _3: ([i64; 5],);
let _4: ((i16, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), f32, [i64; 5], u16, &'static i64, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), (u16, char, &'static i64, char)),);
let _5: (i16, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), f32, [i64; 5], u16, &'static i64, (f64, u16, *mut (isize, (u16, char, &'static i64, char), f64), u32, f64), (u16, char, &'static i64, char));
let _6: [u32; 6];
let _7: [u32; 7];
let _8: i64;
let _9: Adt56;
let _10: usize;
let _11: ();
let _12: ();
{
_1.fld4 = Field::<[u32; 7]>(Variant(_2, 1), 0);
_1.fld2 = 93_i8 as isize;
_1.fld3 = [16496007939207045138_u64,17676226727400610041_u64];
place!(Field::<i64>(Variant(_2, 1), 2)) = -(-7020677628298859703_i64);
place!(Field::<i64>(Variant(_2, 1), 2)) = (-117_i8) as i64;
place!(Field::<i64>(Variant(_2, 1), 2)) = 584037489043735088_i64 * (-8833139179775970937_i64);
place!(Field::<u32>(Variant(_2, 1), 5)) = 1796640925_u32;
RET = [Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2)];
RET = [Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2)];
_1.fld1 = -(-703836722_i32);
_1.fld1 = _1.fld2 as i32;
place!(Field::<u8>(Variant(_2, 1), 1)) = 200_u8;
_1.fld2 = 6109_i16 as isize;
RET = [Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2),Field::<i64>(Variant(_2, 1), 2)];
_1.fld1 = Field::<u32>(Variant(_2, 1), 5) as i32;
_1.fld0 = [Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1),Field::<u8>(Variant(_2, 1), 1)];
_4.0.7.0 = 23177_u16;
_4.0.3 = RET;
_1.fld2 = (-9223372036854775808_isize);
SetDiscriminant(_2, 0);
_4.0.7.0 = (-849_i16) as u16;
_4.0.1.3 = !2680880024_u32;
_3 = (RET,);
place!(Field::<char>(Variant(_2, 0), 1)) = '\u{10f517}';
Goto(bb1)
}
bb1 = {
place!(Field::<u128>(Variant(_2, 0), 4)) = 175505240242261325692186251851472646157_u128;
_4.0.4 = !_4.0.7.0;
place!(Field::<*const u32>(Variant(_2, 0), 2)) = core::ptr::addr_of!(_4.0.1.3);
_4.0.6.0 = Field::<u128>(Variant(_2, 0), 4) as f64;
match Field::<u128>(Variant(_2, 0), 4) {
0 => bb2,
1 => bb3,
2 => bb4,
175505240242261325692186251851472646157 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
place!(Field::<[u8; 6]>(Variant(_2, 0), 7)) = [183_u8,201_u8,3_u8,236_u8,217_u8,52_u8];
place!(Field::<bool>(Variant(_2, 0), 0)) = !true;
place!(Field::<bool>(Variant(_2, 0), 0)) = !true;
_4.0.1.4 = _4.0.6.0 * _4.0.6.0;
_1.fld2 = 9223372036854775807_isize;
_4.0.3 = [(-5493628660371794089_i64),8900430351523660985_i64,(-5592438968808188592_i64),3196833553669931557_i64,7180687533056266661_i64];
_1.fld4 = [_4.0.1.3,_4.0.1.3,_4.0.1.3,_4.0.1.3,_4.0.1.3,_4.0.1.3,_4.0.1.3];
match _1.fld2 {
0 => bb3,
1 => bb7,
2 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
place!(Field::<u128>(Variant(_2, 0), 4)) = 175505240242261325692186251851472646157_u128;
_4.0.4 = !_4.0.7.0;
place!(Field::<*const u32>(Variant(_2, 0), 2)) = core::ptr::addr_of!(_4.0.1.3);
_4.0.6.0 = Field::<u128>(Variant(_2, 0), 4) as f64;
match Field::<u128>(Variant(_2, 0), 4) {
0 => bb2,
1 => bb3,
2 => bb4,
175505240242261325692186251851472646157 => bb6,
_ => bb5
}
}
bb10 = {
Call(_4.0.2 = fn14(Field::<bool>(Variant(_2, 0), 0), _4.0.6.0, _4.0.3, _1.fld2, Field::<u128>(Variant(_2, 0), 4), _1.fld0, Field::<[u8; 6]>(Variant(_2, 0), 7), Field::<u128>(Variant(_2, 0), 4), RET, _3.0, Field::<[u8; 6]>(Variant(_2, 0), 7), _1.fld3, _4.0.7.0, _4.0.7.0, _4.0.3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_4.0.1.1 = 9_i8 as u16;
_5.6.4 = _4.0.1.4;
place!(Field::<char>(Variant(_2, 0), 1)) = '\u{6a316}';
_3 = (_4.0.3,);
_5.6.1 = _4.0.2 as u16;
_5.5 = &_8;
_5.7.3 = Field::<char>(Variant(_2, 0), 1);
_4.0.5 = &_8;
_8 = 1141284096439645458_i64;
_4.0.2 = (-16259_i16) as f32;
_5.6.0 = _5.6.4 - _5.6.4;
_4.0.7.2 = &_8;
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_5.1.1 = _1.fld1 as u16;
_4.0.6.3 = _4.0.1.3 << _4.0.1.3;
_1.fld3 = [11810801003314883133_u64,2215655421817419733_u64];
_5.1.3 = _4.0.6.3;
_5.1.4 = _4.0.6.0;
Goto(bb12)
}
bb12 = {
_5.1.4 = _4.0.1.4;
Goto(bb13)
}
bb13 = {
_4.0.1.0 = -_5.6.0;
_3 = (_4.0.3,);
_1.fld0 = [204_u8,4_u8,165_u8,189_u8,248_u8,62_u8];
_7 = [_5.1.3,_5.1.3,_4.0.6.3,_4.0.6.3,_5.1.3,_5.1.3,_5.1.3];
_4.0.6.4 = _4.0.1.4 + _4.0.1.0;
match _1.fld2 {
0 => bb7,
1 => bb10,
2 => bb3,
9223372036854775807 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_5.6.1 = _5.1.1 ^ _4.0.4;
Goto(bb16)
}
bb16 = {
Call(_11 = dump_var(13_usize, 7_usize, Move(_7), 12_usize, _12, 12_usize, _12, 12_usize, _12), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: bool,mut _2: f64,mut _3: [i64; 5],mut _4: isize,mut _5: u128,mut _6: [u8; 6],mut _7: [u8; 6],mut _8: u128,mut _9: [i64; 5],mut _10: [i64; 5],mut _11: [u8; 6],mut _12: [u64; 2],mut _13: u16,mut _14: u16,mut _15: [i64; 5]) -> f32 {
mir! {
type RET = f32;
let _16: f32;
let _17: u32;
let _18: [char; 6];
let _19: f64;
let _20: isize;
let _21: Adt43;
let _22: f64;
let _23: i64;
let _24: Adt47;
let _25: [i64; 5];
let _26: ((*const &'static i64, u16, (&'static i64, u8), *const i128, ([u32; 6], *const *const &'static i64, bool, *const i128), i128),);
let _27: bool;
let _28: isize;
let _29: i16;
let _30: f64;
let _31: [u64; 2];
let _32: [u64; 2];
let _33: bool;
let _34: f64;
let _35: (&'static i64, u8);
let _36: Adt54;
let _37: bool;
let _38: [u32; 6];
let _39: u16;
let _40: Adt55;
let _41: isize;
let _42: u128;
let _43: ();
let _44: ();
{
_14 = _13 >> _4;
Call(_2 = fn15(_7, _7, _5, _10, _10, _15, _5, _7, _7, _14, _13, _6, _4, _15, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
Goto(bb2)
}
bb2 = {
_7 = [177_u8,195_u8,135_u8,15_u8,27_u8,142_u8];
RET = _4 as f32;
_13 = _14 - _14;
_9 = _3;
_13 = _14 << _4;
_7 = [91_u8,245_u8,71_u8,31_u8,248_u8,225_u8];
_16 = -RET;
_12 = [3345073788685377160_u64,6460741131911493893_u64];
_17 = 124471462_u32;
_13 = 33_u8 as u16;
_6 = [4_u8,51_u8,246_u8,253_u8,219_u8,189_u8];
_7 = [130_u8,193_u8,98_u8,65_u8,247_u8,227_u8];
_9 = _15;
_11 = _6;
_10 = [8702002840828171676_i64,6079630135272770688_i64,(-5061301978368960756_i64),(-6286224476612005710_i64),6663163143245381198_i64];
_11 = [21_u8,118_u8,41_u8,224_u8,62_u8,228_u8];
_15 = _10;
_6 = [36_u8,223_u8,0_u8,209_u8,224_u8,135_u8];
_9 = _15;
_3 = [(-2396699239357184836_i64),(-6904715148877429182_i64),4783588592542654375_i64,5338140955051928816_i64,3953376033809084748_i64];
Goto(bb3)
}
bb3 = {
RET = -_16;
_12 = [14629408323810963589_u64,15037261290476370049_u64];
_10 = [(-2953454250997559492_i64),(-8775343434970024649_i64),(-6691979961429670063_i64),7177085866797707877_i64,(-4394431160904896988_i64)];
_4 = (-49_isize);
_10 = _15;
_5 = _16 as u128;
_6 = [217_u8,54_u8,142_u8,249_u8,13_u8,216_u8];
RET = _16;
_9 = [6490690062207623400_i64,9177768604956567179_i64,4403315430061032594_i64,5815588509750324039_i64,(-8590307811041578941_i64)];
_6 = [24_u8,46_u8,255_u8,62_u8,252_u8,191_u8];
RET = -_16;
_8 = _5 - _5;
_13 = (-19639_i16) as u16;
_5 = !_8;
_15 = _3;
_20 = -_4;
_9 = _15;
_18 = ['\u{8e8e7}','\u{f6fe5}','\u{b9dcf}','\u{a11c5}','\u{7eda5}','\u{82664}'];
_7 = _11;
_16 = _2 as f32;
_12 = [1609701626956525712_u64,102211102747673131_u64];
_4 = _8 as isize;
_3 = [6467455750629563520_i64,(-2180717921763801709_i64),(-2682084736557771041_i64),6934224376476423964_i64,3997435373616980328_i64];
_4 = _20 ^ _20;
_24.fld0 = [90_u8,235_u8,140_u8,162_u8,219_u8,4_u8];
Goto(bb4)
}
bb4 = {
_10 = _9;
_24.fld0 = [200_u8,255_u8,120_u8,59_u8,118_u8,51_u8];
_8 = 109_i8 as u128;
_1 = false;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
_19 = _2 * _2;
_5 = _8;
_17 = (-21_i8) as u32;
_25 = _15;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
_8 = _5 * _5;
_26.0.2.1 = '\u{40142}' as u8;
Goto(bb5)
}
bb5 = {
_26.0.4.1 = core::ptr::addr_of!(_26.0.0);
_3 = [(-5225557625214327161_i64),(-834488993430420373_i64),106167273950038861_i64,(-8605857793422084225_i64),4346954231311046817_i64];
_24.fld2 = !_4;
_24.fld1 = !(-321908468_i32);
_13 = _14;
_27 = !_1;
_28 = 12212808617234409065_u64 as isize;
_10 = [503959775703292507_i64,3104559474424653344_i64,8513547234318878040_i64,(-5881534742743554370_i64),4133308058810878739_i64];
_21 = Adt43::Variant1 { fld0: _26.0.2.1,fld1: 7437560858021933202_i64 };
_26.0.4.0 = [_17,_17,_17,_17,_17,_17];
_28 = -_24.fld2;
_24.fld3 = _12;
_26.0.3 = core::ptr::addr_of!(_26.0.5);
_29 = -13592_i16;
_22 = _19;
_24.fld1 = _13 as i32;
_24.fld0 = [_26.0.2.1,_26.0.2.1,Field::<u8>(Variant(_21, 1), 0),_26.0.2.1,_26.0.2.1,_26.0.2.1];
Goto(bb6)
}
bb6 = {
_25 = [(-7612439309859618021_i64),4196054494633820619_i64,(-6450929110595727527_i64),9071503822909155521_i64,3058272114564711092_i64];
_6 = [Field::<u8>(Variant(_21, 1), 0),_26.0.2.1,Field::<u8>(Variant(_21, 1), 0),_26.0.2.1,Field::<u8>(Variant(_21, 1), 0),_26.0.2.1];
_12 = _24.fld3;
_4 = _28 + _24.fld2;
_12 = [11134651268729284796_u64,6578706911002442342_u64];
_2 = _8 as f64;
_30 = 13109689158338806714_u64 as f64;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
_31 = [13749357696720885995_u64,1553603253877734735_u64];
_26.0.2.0 = &_23;
_12 = [17033129970941088715_u64,3086199785190760539_u64];
_17 = 2737703843_u32 ^ 3725305543_u32;
_28 = _17 as isize;
_26.0.4.3 = core::ptr::addr_of!(_26.0.5);
_26.0.4.2 = !_1;
Call(_32 = core::intrinsics::transmute(_8), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
place!(Field::<u8>(Variant(_21, 1), 0)) = 600236814188991788_usize as u8;
_14 = _17 as u16;
_26.0.4.2 = _1;
_32 = [7749010279712025750_u64,6541076471271083554_u64];
_2 = _22;
_30 = _14 as f64;
_16 = -RET;
_17 = !661753594_u32;
_9 = [(-9141590440850338511_i64),3077451667517196467_i64,393970522717694829_i64,1068782009787302429_i64,6115554169334750551_i64];
Goto(bb8)
}
bb8 = {
_26.0.2.0 = &place!(Field::<i64>(Variant(_21, 1), 1));
_15 = [6574118935597454731_i64,8776715315468297021_i64,(-6602112574235279163_i64),(-5770328354549077045_i64),8672752432363747495_i64];
_26.0.2.1 = 12522583332332899006_u64 as u8;
_26.0.2.0 = &_23;
_18 = ['\u{84f41}','\u{d461c}','\u{32852}','\u{8309e}','\u{58053}','\u{668cd}'];
_24.fld3 = [10483961512565027564_u64,10167571313274042570_u64];
_26.0.2.0 = &_23;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
place!(Field::<i64>(Variant(_21, 1), 1)) = 4186106060408196431_i64;
_6 = _7;
Goto(bb9)
}
bb9 = {
_34 = _2;
_26.0.2.1 = Field::<u8>(Variant(_21, 1), 0);
_32 = [11425732409821292922_u64,3521457005129658168_u64];
match Field::<i64>(Variant(_21, 1), 1) {
0 => bb4,
1 => bb7,
2 => bb10,
3 => bb11,
4186106060408196431 => bb13,
_ => bb12
}
}
bb10 = {
_26.0.2.0 = &place!(Field::<i64>(Variant(_21, 1), 1));
_15 = [6574118935597454731_i64,8776715315468297021_i64,(-6602112574235279163_i64),(-5770328354549077045_i64),8672752432363747495_i64];
_26.0.2.1 = 12522583332332899006_u64 as u8;
_26.0.2.0 = &_23;
_18 = ['\u{84f41}','\u{d461c}','\u{32852}','\u{8309e}','\u{58053}','\u{668cd}'];
_24.fld3 = [10483961512565027564_u64,10167571313274042570_u64];
_26.0.2.0 = &_23;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
place!(Field::<i64>(Variant(_21, 1), 1)) = 4186106060408196431_i64;
_6 = _7;
Goto(bb9)
}
bb11 = {
_7 = [177_u8,195_u8,135_u8,15_u8,27_u8,142_u8];
RET = _4 as f32;
_13 = _14 - _14;
_9 = _3;
_13 = _14 << _4;
_7 = [91_u8,245_u8,71_u8,31_u8,248_u8,225_u8];
_16 = -RET;
_12 = [3345073788685377160_u64,6460741131911493893_u64];
_17 = 124471462_u32;
_13 = 33_u8 as u16;
_6 = [4_u8,51_u8,246_u8,253_u8,219_u8,189_u8];
_7 = [130_u8,193_u8,98_u8,65_u8,247_u8,227_u8];
_9 = _15;
_11 = _6;
_10 = [8702002840828171676_i64,6079630135272770688_i64,(-5061301978368960756_i64),(-6286224476612005710_i64),6663163143245381198_i64];
_11 = [21_u8,118_u8,41_u8,224_u8,62_u8,228_u8];
_15 = _10;
_6 = [36_u8,223_u8,0_u8,209_u8,224_u8,135_u8];
_9 = _15;
_3 = [(-2396699239357184836_i64),(-6904715148877429182_i64),4783588592542654375_i64,5338140955051928816_i64,3953376033809084748_i64];
Goto(bb3)
}
bb12 = {
_25 = [(-7612439309859618021_i64),4196054494633820619_i64,(-6450929110595727527_i64),9071503822909155521_i64,3058272114564711092_i64];
_6 = [Field::<u8>(Variant(_21, 1), 0),_26.0.2.1,Field::<u8>(Variant(_21, 1), 0),_26.0.2.1,Field::<u8>(Variant(_21, 1), 0),_26.0.2.1];
_12 = _24.fld3;
_4 = _28 + _24.fld2;
_12 = [11134651268729284796_u64,6578706911002442342_u64];
_2 = _8 as f64;
_30 = 13109689158338806714_u64 as f64;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
_31 = [13749357696720885995_u64,1553603253877734735_u64];
_26.0.2.0 = &_23;
_12 = [17033129970941088715_u64,3086199785190760539_u64];
_17 = 2737703843_u32 ^ 3725305543_u32;
_28 = _17 as isize;
_26.0.4.3 = core::ptr::addr_of!(_26.0.5);
_26.0.4.2 = !_1;
Call(_32 = core::intrinsics::transmute(_8), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
_27 = _1;
_27 = _1;
_24.fld4 = [_17,_17,_17,_17,_17,_17,_17];
_26.0.5 = 142669921463182132804501374124454370862_i128 ^ (-92515109931364988272342860372673090275_i128);
_9 = [Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1)];
_33 = !_26.0.4.2;
_14 = _13 ^ _13;
_8 = !_5;
_28 = _4;
_34 = RET as f64;
_16 = -RET;
_8 = _5;
_10 = [Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1),Field::<i64>(Variant(_21, 1), 1)];
_24.fld3 = [4949983462184927933_u64,6391546202713746206_u64];
place!(Field::<i64>(Variant(_21, 1), 1)) = 2_usize as i64;
_14 = _13 * _13;
_26.0.4.1 = core::ptr::addr_of!(_26.0.0);
RET = _16 + _16;
_26.0.0 = core::ptr::addr_of!(_35.0);
_26.0.1 = _14;
_26.0.3 = _26.0.4.3;
Goto(bb14)
}
bb14 = {
_8 = _26.0.5 as u128;
_26.0.4.2 = !_33;
SetDiscriminant(_21, 1);
place!(Field::<i64>(Variant(_21, 1), 1)) = (-8851219933298299053_i64) & 4387471502411687500_i64;
_28 = _14 as isize;
_26.0.4.2 = !_27;
_23 = Field::<i64>(Variant(_21, 1), 1) << _8;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(14_usize, 20_usize, Move(_20), 18_usize, Move(_18), 10_usize, Move(_10), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(14_usize, 4_usize, Move(_4), 12_usize, Move(_12), 13_usize, Move(_13), 31_usize, Move(_31)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(14_usize, 3_usize, Move(_3), 6_usize, Move(_6), 17_usize, Move(_17), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [u8; 6],mut _2: [u8; 6],mut _3: u128,mut _4: [i64; 5],mut _5: [i64; 5],mut _6: [i64; 5],mut _7: u128,mut _8: [u8; 6],mut _9: [u8; 6],mut _10: u16,mut _11: u16,mut _12: [u8; 6],mut _13: isize,mut _14: [i64; 5],mut _15: [u8; 6]) -> f64 {
mir! {
type RET = f64;
let _16: f32;
let _17: bool;
let _18: [u64; 2];
let _19: Adt54;
let _20: Adt50;
let _21: f64;
let _22: Adt47;
let _23: Adt41;
let _24: f32;
let _25: char;
let _26: f64;
let _27: [char; 6];
let _28: f64;
let _29: f64;
let _30: bool;
let _31: isize;
let _32: [i64; 5];
let _33: isize;
let _34: u32;
let _35: [u8; 6];
let _36: f32;
let _37: *const u32;
let _38: char;
let _39: i8;
let _40: i32;
let _41: u64;
let _42: Adt41;
let _43: Adt45;
let _44: ();
let _45: ();
{
_10 = !_11;
_1 = [230_u8,108_u8,101_u8,119_u8,50_u8,241_u8];
_14 = _6;
_5 = [(-1596704668417330647_i64),(-4173312441688790120_i64),1055900491782482967_i64,2140580408139777023_i64,(-2131886367787992085_i64)];
_3 = _7;
RET = 79_i8 as f64;
RET = _13 as f64;
_7 = 219_u8 as u128;
_8 = [65_u8,216_u8,88_u8,149_u8,176_u8,224_u8];
_11 = _10;
_18 = [16208989536687331413_u64,4145617781701730694_u64];
_1 = [175_u8,165_u8,226_u8,29_u8,156_u8,142_u8];
_16 = (-12491_i16) as f32;
_9 = _1;
_15 = [85_u8,56_u8,162_u8,156_u8,76_u8,199_u8];
_10 = _7 as u16;
_11 = (-6528845700041900542_i64) as u16;
Goto(bb1)
}
bb1 = {
_3 = _7 - _7;
_16 = 2572426454_u32 as f32;
_17 = true;
_19.fld1 = !13853346042946865649_usize;
_22.fld1 = 925456237_i32 | 43220939_i32;
RET = 65_u8 as f64;
_22.fld4 = [4111479228_u32,921236551_u32,3528592838_u32,1219568586_u32,1078349401_u32,2391328201_u32,3764924561_u32];
_12 = _2;
_22.fld0 = _2;
_22.fld2 = _13;
_14 = [4480765045274645181_i64,1363272224457048680_i64,2744940327774130730_i64,(-8669043151835245407_i64),(-1205264709547659533_i64)];
_5 = [(-2664863116111336163_i64),(-2002338949439202342_i64),7711134906558809722_i64,(-6283642892902725704_i64),8939102634001291384_i64];
_12 = _15;
_9 = _8;
_16 = 220473390_u32 as f32;
_22.fld3 = [5558360788065452163_u64,6909081414972651197_u64];
_16 = RET as f32;
match _13 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_14 = [3462408428235456338_i64,(-2088035376841971246_i64),(-6557949937589750969_i64),(-4353292683069044879_i64),6244653443102509862_i64];
_23 = Adt41::Variant2 { fld0: (-109233322476744106895887370425746480366_i128),fld1: 227_u8,fld2: _22.fld2,fld3: 3952_i16 };
_28 = RET;
place!(Field::<i16>(Variant(_23, 2), 3)) = -(-15802_i16);
_25 = '\u{67af8}';
_3 = _7;
_15 = [99_u8,136_u8,6_u8,127_u8,236_u8,99_u8];
_25 = '\u{f93f7}';
_23 = Adt41::Variant0 { fld0: 3937672423_u32,fld1: _18,fld2: RET };
_13 = _22.fld2 - _22.fld2;
_5 = _6;
_22.fld4 = [639238007_u32,1533902007_u32,291637831_u32,1498338355_u32,373484951_u32,689813384_u32,3409735882_u32];
place!(Field::<u32>(Variant(_23, 0), 0)) = 3420591004_u32;
_8 = [165_u8,49_u8,63_u8,112_u8,8_u8,180_u8];
SetDiscriminant(_23, 0);
_7 = _25 as u128;
_21 = -RET;
_1 = [80_u8,119_u8,203_u8,166_u8,63_u8,88_u8];
_29 = -_21;
_4 = [4628513486331464199_i64,(-1091259241964640615_i64),(-439736579148182008_i64),(-3579160428530127399_i64),(-3754791500890757403_i64)];
_14 = [(-3658068899394184038_i64),(-3157136240271847199_i64),8873524211182575804_i64,6018265110275788004_i64,4505037210842917186_i64];
_12 = [130_u8,142_u8,87_u8,220_u8,62_u8,39_u8];
_22.fld1 = 698160743_i32;
_28 = _29;
place!(Field::<u32>(Variant(_23, 0), 0)) = 1345460147_u32 ^ 633138437_u32;
place!(Field::<f64>(Variant(_23, 0), 2)) = -RET;
_2 = _9;
match _22.fld2 {
0 => bb8,
1 => bb5,
2 => bb3,
9223372036854775807 => bb10,
_ => bb7
}
}
bb10 = {
_28 = -_21;
_22.fld1 = (-1950078885_i32);
_27 = [_25,_25,_25,_25,_25,_25];
_17 = true;
_22.fld4 = [Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0)];
_18 = _22.fld3;
_3 = (-5536893555065968805_i64) as u128;
match _22.fld2 {
9223372036854775807 => bb11,
_ => bb9
}
}
bb11 = {
_13 = _22.fld1 as isize;
_22.fld3 = _18;
_31 = _13;
place!(Field::<[u64; 2]>(Variant(_23, 0), 1)) = _18;
_27 = [_25,_25,_25,_25,_25,_25];
_26 = _28;
_17 = false | false;
_32 = _14;
_18 = [6161313599092905908_u64,18039657931560143540_u64];
_18 = [10562465272858546400_u64,14036544060839238444_u64];
_32 = [(-4964582770147546531_i64),2354277693067088023_i64,6395349630215033073_i64,6893118914799782160_i64,4678250764371013783_i64];
_8 = _9;
_30 = _17;
_5 = [(-9060367208692564586_i64),(-8663772886408084805_i64),8008401187527613323_i64,(-2121017533365938090_i64),(-3693497174805163388_i64)];
_22.fld0 = [138_u8,200_u8,153_u8,12_u8,120_u8,197_u8];
place!(Field::<u32>(Variant(_23, 0), 0)) = 2135556585_u32 - 4168712398_u32;
_22.fld3 = _18;
_3 = _7 | _7;
SetDiscriminant(_23, 0);
_26 = _29 - _28;
_6 = [(-7368320893666417253_i64),314347789256857650_i64,7024254524233448286_i64,3041788296456818568_i64,4907225812027807224_i64];
match _22.fld1 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb10,
4 => bb9,
5 => bb6,
6 => bb7,
340282366920938463463374607429818132571 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_22.fld4 = [2414017390_u32,3272714174_u32,2040054088_u32,1136271197_u32,4217542482_u32,4061959840_u32,469070452_u32];
place!(Field::<u32>(Variant(_23, 0), 0)) = !864812801_u32;
_28 = _22.fld1 as f64;
_24 = -_16;
_23 = Adt41::Variant2 { fld0: 148019091764508608964628947904628822670_i128,fld1: 76_u8,fld2: _22.fld2,fld3: 9729_i16 };
_35 = _22.fld0;
_29 = _21;
_21 = -_26;
_37 = core::ptr::addr_of!(_34);
_35 = [182_u8,103_u8,89_u8,110_u8,10_u8,237_u8];
_21 = -_26;
_2 = [40_u8,77_u8,127_u8,6_u8,40_u8,189_u8];
_18 = [8682437489830464605_u64,12310639205130124451_u64];
place!(Field::<i16>(Variant(_23, 2), 3)) = (-21063_i16);
_34 = 1250343192_u32;
RET = _24 as f64;
place!(Field::<u8>(Variant(_23, 2), 1)) = 59_u8;
_38 = _25;
_4 = [7670277439833459326_i64,7362547240933149718_i64,7317090827769563928_i64,5234477726411151599_i64,3701409855352250398_i64];
_15 = [Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1)];
_35 = [Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1),Field::<u8>(Variant(_23, 2), 1)];
_30 = !_17;
_41 = _25 as u64;
match _22.fld2 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
9223372036854775807 => bb21,
_ => bb20
}
}
bb14 = {
Return()
}
bb15 = {
_13 = _22.fld1 as isize;
_22.fld3 = _18;
_31 = _13;
place!(Field::<[u64; 2]>(Variant(_23, 0), 1)) = _18;
_27 = [_25,_25,_25,_25,_25,_25];
_26 = _28;
_17 = false | false;
_32 = _14;
_18 = [6161313599092905908_u64,18039657931560143540_u64];
_18 = [10562465272858546400_u64,14036544060839238444_u64];
_32 = [(-4964582770147546531_i64),2354277693067088023_i64,6395349630215033073_i64,6893118914799782160_i64,4678250764371013783_i64];
_8 = _9;
_30 = _17;
_5 = [(-9060367208692564586_i64),(-8663772886408084805_i64),8008401187527613323_i64,(-2121017533365938090_i64),(-3693497174805163388_i64)];
_22.fld0 = [138_u8,200_u8,153_u8,12_u8,120_u8,197_u8];
place!(Field::<u32>(Variant(_23, 0), 0)) = 2135556585_u32 - 4168712398_u32;
_22.fld3 = _18;
_3 = _7 | _7;
SetDiscriminant(_23, 0);
_26 = _29 - _28;
_6 = [(-7368320893666417253_i64),314347789256857650_i64,7024254524233448286_i64,3041788296456818568_i64,4907225812027807224_i64];
match _22.fld1 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb10,
4 => bb9,
5 => bb6,
6 => bb7,
340282366920938463463374607429818132571 => bb13,
_ => bb12
}
}
bb16 = {
_28 = -_21;
_22.fld1 = (-1950078885_i32);
_27 = [_25,_25,_25,_25,_25,_25];
_17 = true;
_22.fld4 = [Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0),Field::<u32>(Variant(_23, 0), 0)];
_18 = _22.fld3;
_3 = (-5536893555065968805_i64) as u128;
match _22.fld2 {
9223372036854775807 => bb11,
_ => bb9
}
}
bb17 = {
_3 = _7 - _7;
_16 = 2572426454_u32 as f32;
_17 = true;
_19.fld1 = !13853346042946865649_usize;
_22.fld1 = 925456237_i32 | 43220939_i32;
RET = 65_u8 as f64;
_22.fld4 = [4111479228_u32,921236551_u32,3528592838_u32,1219568586_u32,1078349401_u32,2391328201_u32,3764924561_u32];
_12 = _2;
_22.fld0 = _2;
_22.fld2 = _13;
_14 = [4480765045274645181_i64,1363272224457048680_i64,2744940327774130730_i64,(-8669043151835245407_i64),(-1205264709547659533_i64)];
_5 = [(-2664863116111336163_i64),(-2002338949439202342_i64),7711134906558809722_i64,(-6283642892902725704_i64),8939102634001291384_i64];
_12 = _15;
_9 = _8;
_16 = 220473390_u32 as f32;
_22.fld3 = [5558360788065452163_u64,6909081414972651197_u64];
_16 = RET as f32;
match _13 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
_36 = -_24;
_4 = [(-7620250103767746112_i64),6765557884738378631_i64,1221278379910826460_i64,(-6423008626068802508_i64),(-7157423092273672804_i64)];
_33 = !_22.fld2;
_5 = _6;
_41 = 4765493829062413659_u64;
_39 = 40_i8 + (-34_i8);
_36 = _24 + _16;
_14 = [(-8782564746784633162_i64),6689437075127196042_i64,(-6926289157467119641_i64),7815796574590827735_i64,1976353274135633341_i64];
Goto(bb22)
}
bb22 = {
Call(_44 = dump_var(15_usize, 6_usize, Move(_6), 31_usize, Move(_31), 3_usize, Move(_3), 25_usize, Move(_25)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_44 = dump_var(15_usize, 30_usize, Move(_30), 4_usize, Move(_4), 5_usize, Move(_5), 14_usize, Move(_14)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_44 = dump_var(15_usize, 39_usize, Move(_39), 13_usize, Move(_13), 7_usize, Move(_7), 1_usize, Move(_1)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_44 = dump_var(15_usize, 35_usize, Move(_35), 27_usize, Move(_27), 45_usize, _45, 45_usize, _45), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [i64; 5],mut _2: [u32; 7],mut _3: [u32; 7],mut _4: Adt47,mut _5: ([i64; 5],),mut _6: [u32; 7]) -> isize {
mir! {
type RET = isize;
let _7: ([u32; 6], *const *const &'static i64, bool, *const i128);
let _8: [u64; 2];
let _9: [u64; 2];
let _10: i32;
let _11: isize;
let _12: Adt56;
let _13: &'static i64;
let _14: [u64; 2];
let _15: Adt47;
let _16: i16;
let _17: [u8; 6];
let _18: [u64; 2];
let _19: [u32; 7];
let _20: isize;
let _21: isize;
let _22: char;
let _23: char;
let _24: isize;
let _25: *const i128;
let _26: i16;
let _27: f64;
let _28: f64;
let _29: i128;
let _30: [char; 6];
let _31: &'static i64;
let _32: u16;
let _33: char;
let _34: bool;
let _35: i16;
let _36: ([i64; 5],);
let _37: u8;
let _38: *mut (isize, (u16, char, &'static i64, char), f64);
let _39: ();
let _40: ();
{
_8 = _4.fld3;
RET = !_4.fld2;
_8 = _4.fld3;
_3 = [1030276527_u32,3108344481_u32,3474455251_u32,2860313583_u32,2021219307_u32,299994224_u32,952917734_u32];
_4.fld1 = -(-1770607273_i32);
_4.fld2 = RET;
_9 = [7822903991656250191_u64,10788235759696170496_u64];
_4.fld0 = [230_u8,186_u8,214_u8,202_u8,246_u8,203_u8];
_3 = _6;
_4.fld1 = -(-213316890_i32);
_2 = _6;
RET = _4.fld2 ^ _4.fld2;
RET = !_4.fld2;
_7.2 = false;
_5 = (_1,);
_4.fld2 = RET;
_8 = [10566962613326342237_u64,11169032730003121025_u64];
_9 = _4.fld3;
_6 = [347761190_u32,873924329_u32,3770496774_u32,2769549358_u32,924970412_u32,3761536947_u32,3039974603_u32];
_4.fld1 = (-1616154191_i32) >> _4.fld2;
Goto(bb1)
}
bb1 = {
_5.0 = [(-5750462038499494654_i64),(-9142897583459920473_i64),1383486756521284715_i64,6673356255997589488_i64,5832915673885959403_i64];
_7.0 = [4243130344_u32,3971901536_u32,3643815685_u32,60496284_u32,3054477627_u32,442727039_u32];
_2 = _6;
_2 = [870726693_u32,2128301277_u32,3723506795_u32,3526820633_u32,3113440172_u32,715442246_u32,1870897276_u32];
_5.0 = [830690755664824848_i64,1802444693511911426_i64,(-7038416784689459934_i64),4588133191013568635_i64,220801810764730715_i64];
_9 = [16767059925853219081_u64,9871368876232056994_u64];
_4.fld2 = _7.2 as isize;
_4.fld4 = _6;
_2 = [4104205078_u32,246324803_u32,1919325971_u32,3964134619_u32,3901900197_u32,963926258_u32,3450176517_u32];
_1 = [5786655124454048376_i64,8566942874094007984_i64,1008568325695614435_i64,(-6693604669141429675_i64),1657872053957019999_i64];
_4.fld0 = [130_u8,212_u8,125_u8,182_u8,166_u8,34_u8];
_4.fld2 = 26_u8 as isize;
_8 = [3617270794948155857_u64,4679134716021884691_u64];
_10 = 65480_u16 as i32;
_4.fld1 = _10;
RET = _4.fld2 & _4.fld2;
_5.0 = [1794877170370950857_i64,(-6297182538423290410_i64),(-5770366280849548334_i64),(-1327624880710292555_i64),438401684483340912_i64];
_5.0 = [7304132322911750311_i64,3068386637918204026_i64,3710428287032204169_i64,267600645836520825_i64,(-9090376111768266106_i64)];
Goto(bb2)
}
bb2 = {
_5 = (_1,);
_4.fld4 = [1131530567_u32,3834672071_u32,1687121403_u32,64831063_u32,629199210_u32,1720374019_u32,2511622549_u32];
RET = _4.fld2 ^ _4.fld2;
RET = _4.fld2 * _4.fld2;
RET = 3088803746_u32 as isize;
_4.fld4 = _3;
_11 = -RET;
_4.fld1 = !_10;
_10 = _4.fld1;
_4.fld3 = [5705905003424125609_u64,11387383723454845282_u64];
_6 = [522005493_u32,2595095473_u32,1721613517_u32,2146707605_u32,2022137979_u32,2030586333_u32,902720795_u32];
_7.2 = false;
_4.fld2 = (-22580_i16) as isize;
_11 = _4.fld2;
_10 = 24739_u16 as i32;
_4.fld4 = [4168104933_u32,2762959691_u32,214541032_u32,3944789726_u32,2445372899_u32,286127205_u32,1335953998_u32];
_3 = [3374865984_u32,4127842973_u32,109650593_u32,439439589_u32,1141652304_u32,359624611_u32,3623258145_u32];
_8 = [8514079018513595740_u64,9756159183874156132_u64];
_12 = Adt56::Variant1 { fld0: (-24286_i16),fld1: _10 };
_4.fld2 = 4121693836844201688_u64 as isize;
RET = 19_i8 as isize;
_12 = Adt56::Variant1 { fld0: 4126_i16,fld1: _10 };
RET = _4.fld2;
_7.0 = [3918176973_u32,4241353536_u32,656745567_u32,2808910255_u32,2185654555_u32,3186542698_u32];
place!(Field::<i32>(Variant(_12, 1), 1)) = _10;
Goto(bb3)
}
bb3 = {
_14 = _4.fld3;
_15 = Adt47 { fld0: _4.fld0,fld1: Field::<i32>(Variant(_12, 1), 1),fld2: _11,fld3: _9,fld4: _3 };
_15.fld3 = [2101961481478202896_u64,1854847352806037240_u64];
_4.fld2 = _15.fld2 & _11;
Goto(bb4)
}
bb4 = {
_2 = _6;
_4.fld4 = [1558479099_u32,2552868030_u32,2652179691_u32,1624502264_u32,1481446099_u32,1640736343_u32,2368827527_u32];
place!(Field::<i16>(Variant(_12, 1), 0)) = 28768_i16;
_5.0 = [(-4347524081765103784_i64),4927109092606094615_i64,(-264236690486595310_i64),4851938575527143512_i64,7102492782212319702_i64];
Goto(bb5)
}
bb5 = {
_15.fld4 = [1866069787_u32,982054646_u32,1148091001_u32,3497034831_u32,672645402_u32,2699259926_u32,271431598_u32];
_17 = [48_u8,233_u8,46_u8,131_u8,184_u8,242_u8];
_14 = _15.fld3;
RET = -_4.fld2;
_14 = [16771789999413439052_u64,5451283301400782845_u64];
_4 = Adt47 { fld0: _17,fld1: _15.fld1,fld2: _11,fld3: _9,fld4: _6 };
_18 = [2106025847433653739_u64,9333040976184690200_u64];
_15.fld1 = Field::<i32>(Variant(_12, 1), 1) & Field::<i32>(Variant(_12, 1), 1);
_11 = _15.fld2;
_4.fld3 = [9419701888335768506_u64,11249172811270781222_u64];
_5 = (_1,);
_15.fld3 = [4470452713951411897_u64,4100396911636785887_u64];
_7.2 = _15.fld1 != _15.fld1;
SetDiscriminant(_12, 1);
_15.fld2 = _4.fld2;
_1 = [(-515174240193187574_i64),(-1291312972533348335_i64),(-4072403240229044902_i64),8366673190556848243_i64,5789675215766411990_i64];
_1 = [(-5332906406351715983_i64),(-8211059238069307177_i64),1005422311951362579_i64,(-3687471121832227653_i64),4368280550968626293_i64];
_7.2 = !false;
_15.fld0 = [82_u8,79_u8,229_u8,184_u8,217_u8,40_u8];
Goto(bb6)
}
bb6 = {
_1 = _5.0;
place!(Field::<i16>(Variant(_12, 1), 0)) = 30353_i16;
RET = -_11;
_4.fld2 = !RET;
_11 = !_15.fld2;
place!(Field::<i32>(Variant(_12, 1), 1)) = _4.fld1;
_4.fld4 = [2248576559_u32,961555647_u32,2078633822_u32,1118888174_u32,930739320_u32,3301798821_u32,592263341_u32];
_18 = [18192004386006267509_u64,5350574314626361600_u64];
_15.fld0 = [160_u8,165_u8,11_u8,150_u8,199_u8,58_u8];
_19 = [3573308864_u32,2602792982_u32,2503471273_u32,2778806445_u32,3429376294_u32,4232874730_u32,2410513491_u32];
_4.fld1 = -_15.fld1;
SetDiscriminant(_12, 2);
_10 = _4.fld1 - _4.fld1;
_16 = 16832_i16 - 5050_i16;
_18 = [10276280698572686035_u64,12525445061808502904_u64];
place!(Field::<*const [u64; 2]>(Variant(_12, 2), 0)) = core::ptr::addr_of!(_4.fld3);
_4.fld0 = _15.fld0;
_3 = _6;
Goto(bb7)
}
bb7 = {
_5.0 = [(-2210026363432113841_i64),3638996619308658773_i64,5876665257409835805_i64,2764649145350884375_i64,1331789147576531855_i64];
place!(Field::<*const [u64; 2]>(Variant(_12, 2), 0)) = core::ptr::addr_of!(_4.fld3);
RET = -_4.fld2;
_11 = 28114_u16 as isize;
_22 = '\u{89dcf}';
_2 = _3;
_4.fld0 = [165_u8,118_u8,136_u8,231_u8,222_u8,194_u8];
_21 = 8747156428301684154_i64 as isize;
_4.fld4 = [1986178335_u32,2070107358_u32,252680007_u32,864499720_u32,1551261090_u32,3341412468_u32,1673316929_u32];
_4.fld4 = [3064816356_u32,2117363910_u32,2543000078_u32,357408835_u32,2986299010_u32,2198839017_u32,3978150848_u32];
_23 = _22;
_4.fld3 = [7088983541433419476_u64,3446882951009216768_u64];
place!(Field::<*const [u64; 2]>(Variant(_12, 2), 0)) = core::ptr::addr_of!(_4.fld3);
_5.0 = [5276000372136176565_i64,(-8367633912837168706_i64),7101398233077694258_i64,(-2089458053461571640_i64),(-721311595583195283_i64)];
_15.fld4 = _6;
_1 = [(-6160598633767279824_i64),(-4793886939210331835_i64),1830043643883140218_i64,(-337713052997036062_i64),5199806577301591423_i64];
_15.fld0 = _4.fld0;
_4.fld2 = _15.fld2 + _11;
Goto(bb8)
}
bb8 = {
_14 = _18;
_20 = _4.fld2 ^ _11;
_4.fld0 = [51_u8,0_u8,177_u8,54_u8,223_u8,38_u8];
place!(Field::<*const [u64; 2]>(Variant(_12, 2), 0)) = core::ptr::addr_of!(_18);
_19 = _6;
_4.fld2 = 3_usize as isize;
_14 = _8;
_4.fld0 = [21_u8,91_u8,0_u8,7_u8,10_u8,91_u8];
_4.fld4 = [2464964489_u32,710029963_u32,2014240864_u32,3253378400_u32,1034595008_u32,2178324839_u32,2974470000_u32];
_14 = _18;
Goto(bb9)
}
bb9 = {
_5 = (_1,);
_18 = [796286973591513656_u64,16686494604305929917_u64];
_26 = _16 - _16;
_24 = _4.fld2;
_4.fld3 = [5351892755301808880_u64,10858776007765902910_u64];
_15.fld2 = -_20;
RET = _15.fld2;
_17 = _15.fld0;
Goto(bb10)
}
bb10 = {
_3 = [3143554381_u32,405602115_u32,1211902422_u32,856171772_u32,866566340_u32,2158486127_u32,595477763_u32];
_27 = _10 as f64;
_1 = _5.0;
_4.fld0 = [220_u8,174_u8,64_u8,51_u8,229_u8,114_u8];
_9 = _8;
_22 = _23;
Goto(bb11)
}
bb11 = {
_28 = _27 - _27;
_17 = _4.fld0;
_22 = _23;
Call(_2 = core::intrinsics::transmute(_6), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
RET = _4.fld2 >> _26;
_21 = _15.fld2 - _20;
_15.fld3 = _9;
_4.fld4 = [1648479625_u32,374742488_u32,95410676_u32,2845135451_u32,4202226280_u32,3188813407_u32,4074853845_u32];
_7.3 = core::ptr::addr_of!(_29);
_24 = 179300766660972681067046104219196157131_u128 as isize;
_15.fld3 = _9;
_29 = 209520449720761469402369484669141748181_u128 as i128;
_4.fld0 = [1_u8,200_u8,244_u8,223_u8,54_u8,25_u8];
_26 = -_16;
_8 = [11106848187853272504_u64,4146309912268184605_u64];
_7.3 = core::ptr::addr_of!(_29);
_12 = Adt56::Variant1 { fld0: _26,fld1: _15.fld1 };
_15.fld4 = _4.fld4;
_29 = (-67444437568023925465668391223644530276_i128) ^ 101080126443734021803174653703939109607_i128;
place!(Field::<i32>(Variant(_12, 1), 1)) = _15.fld1;
_17 = [116_u8,20_u8,91_u8,12_u8,83_u8,144_u8];
SetDiscriminant(_12, 1);
_2 = [2946416408_u32,1174092679_u32,2445725010_u32,1070924434_u32,3016628567_u32,3901113167_u32,276731235_u32];
_4 = Adt47 { fld0: _15.fld0,fld1: _10,fld2: _21,fld3: _15.fld3,fld4: _15.fld4 };
_32 = 7063_u16;
_20 = RET & _4.fld2;
match _32 {
0 => bb13,
7063 => bb15,
_ => bb14
}
}
bb13 = {
_28 = _27 - _27;
_17 = _4.fld0;
_22 = _23;
Call(_2 = core::intrinsics::transmute(_6), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
_1 = _5.0;
place!(Field::<i16>(Variant(_12, 1), 0)) = 30353_i16;
RET = -_11;
_4.fld2 = !RET;
_11 = !_15.fld2;
place!(Field::<i32>(Variant(_12, 1), 1)) = _4.fld1;
_4.fld4 = [2248576559_u32,961555647_u32,2078633822_u32,1118888174_u32,930739320_u32,3301798821_u32,592263341_u32];
_18 = [18192004386006267509_u64,5350574314626361600_u64];
_15.fld0 = [160_u8,165_u8,11_u8,150_u8,199_u8,58_u8];
_19 = [3573308864_u32,2602792982_u32,2503471273_u32,2778806445_u32,3429376294_u32,4232874730_u32,2410513491_u32];
_4.fld1 = -_15.fld1;
SetDiscriminant(_12, 2);
_10 = _4.fld1 - _4.fld1;
_16 = 16832_i16 - 5050_i16;
_18 = [10276280698572686035_u64,12525445061808502904_u64];
place!(Field::<*const [u64; 2]>(Variant(_12, 2), 0)) = core::ptr::addr_of!(_4.fld3);
_4.fld0 = _15.fld0;
_3 = _6;
Goto(bb7)
}
bb15 = {
_14 = [3737436972445133193_u64,13347113696951597556_u64];
_5 = (_1,);
place!(Field::<i16>(Variant(_12, 1), 0)) = -_26;
_25 = core::ptr::addr_of!(_29);
_28 = 2588064985350895249_usize as f64;
RET = _4.fld1 as isize;
_15.fld1 = _10 >> _21;
_36 = _5;
_34 = _7.2 & _7.2;
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(16_usize, 6_usize, Move(_6), 23_usize, Move(_23), 34_usize, Move(_34), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(16_usize, 29_usize, Move(_29), 24_usize, Move(_24), 10_usize, Move(_10), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(16_usize, 5_usize, Move(_5), 19_usize, Move(_19), 2_usize, Move(_2), 17_usize, Move(_17)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [u32; 7],mut _2: [u32; 7],mut _3: i64,mut _4: isize,mut _5: isize,mut _6: bool,mut _7: i64,mut _8: i32,mut _9: [u32; 7],mut _10: u32,mut _11: bool,mut _12: i64) -> i128 {
mir! {
type RET = i128;
let _13: u16;
let _14: u32;
let _15: [char; 6];
let _16: ((*const &'static i64, u16, (&'static i64, u8), *const i128, ([u32; 6], *const *const &'static i64, bool, *const i128), i128),);
let _17: Adt55;
let _18: f32;
let _19: u32;
let _20: *const u32;
let _21: f32;
let _22: Adt55;
let _23: [u32; 6];
let _24: [i64; 5];
let _25: u16;
let _26: Adt54;
let _27: u16;
let _28: ();
let _29: ();
{
_6 = _11;
_9 = [_10,_10,_10,_10,_10,_10,_10];
_5 = -_4;
_11 = _6 | _6;
_7 = _12 + _3;
_7 = _3 * _3;
_8 = 105_i8 as i32;
_1 = [_10,_10,_10,_10,_10,_10,_10];
_9 = _2;
_6 = _11;
_6 = _11;
RET = 105_i8 as i128;
_12 = _3;
_6 = _11;
_3 = _7;
RET = -(-146529025721171347531520439261759952708_i128);
_1 = _9;
_5 = RET as isize;
_7 = _3;
_1 = _9;
_5 = _4 - _4;
RET = 111211717785756836607073997592771890492_i128 ^ (-29928841187368623637190847887143761175_i128);
_12 = _7 << _3;
_7 = _3 >> _12;
_7 = 57178_u16 as i64;
_5 = 5450597030571213994_u64 as isize;
_10 = 1447648466_u32 | 821383857_u32;
_12 = _7;
_10 = !399489784_u32;
_11 = !_6;
_11 = !_6;
Goto(bb1)
}
bb1 = {
_9 = _2;
_5 = _4 | _4;
_2 = _9;
_7 = _5 as i64;
_13 = 70_i8 as u16;
_1 = [_10,_10,_10,_10,_10,_10,_10];
_13 = 292253152115918794900312020258786447833_u128 as u16;
_11 = _6;
_13 = !46856_u16;
_14 = !_10;
_8 = 401928722_i32 * (-1020357285_i32);
_16.0.1 = (-92_i8) as u16;
_16.0.2.1 = !165_u8;
_16.0.5 = _14 as i128;
_16.0.4.0 = [_14,_10,_14,_14,_10,_14];
_1 = _2;
_12 = _14 as i64;
Call(_6 = fn18(_2, _16.0.4.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_16.0.3 = core::ptr::addr_of!(RET);
_3 = 14_i8 as i64;
_16.0.4.0 = [_10,_10,_10,_14,_14,_10];
_16.0.4.3 = _16.0.3;
_15 = ['\u{f5663}','\u{8744d}','\u{1025ad}','\u{70e6b}','\u{10043e}','\u{3742b}'];
_15 = ['\u{66946}','\u{4607c}','\u{58485}','\u{fd142}','\u{10b51d}','\u{793f}'];
_16.0.2.0 = &_3;
_15 = ['\u{10c93d}','\u{2ca3}','\u{e259f}','\u{853c5}','\u{f339a}','\u{6e372}'];
_16.0.4.2 = _6;
_16.0.4.1 = core::ptr::addr_of!(_16.0.0);
_9 = _1;
RET = -_16.0.5;
_4 = _5;
_5 = -_4;
_16.0.3 = core::ptr::addr_of!(RET);
_16.0.2.1 = 7198740351662144735_u64 as u8;
_16.0.2.1 = _13 as u8;
_4 = _5 + _5;
Goto(bb3)
}
bb3 = {
_3 = !_7;
_16.0.5 = _8 as i128;
_18 = 4717_i16 as f32;
_16.0.4.1 = core::ptr::addr_of!(_16.0.0);
_3 = _12 << _5;
_16.0.1 = _13 << _3;
_10 = _14;
_16.0.4.0 = [_14,_10,_14,_10,_10,_14];
_16.0.4.2 = !_11;
_16.0.5 = RET >> _4;
Call(_16.0.4.3 = core::intrinsics::arith_offset(_16.0.3, 9223372036854775807_isize), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_16.0.0 = core::ptr::addr_of!(_16.0.2.0);
Goto(bb5)
}
bb5 = {
_16.0.4.2 = _6 & _6;
RET = _16.0.5 | _16.0.5;
_16.0.5 = RET;
_19 = 107_i8 as u32;
_16.0.5 = RET;
_4 = _5 ^ _5;
_23 = [_19,_10,_14,_10,_10,_10];
_16.0.4.2 = !_6;
_20 = core::ptr::addr_of!(_19);
_19 = !_14;
Goto(bb6)
}
bb6 = {
_6 = _16.0.4.2 ^ _11;
_19 = _10 << RET;
_3 = _7;
RET = _16.0.5 & _16.0.5;
_24 = [_7,_3,_7,_12,_7];
_13 = !_16.0.1;
_18 = 223695187726043663528418490487773600822_u128 as f32;
_4 = _5 & _5;
_10 = !(*_20);
_6 = _16.0.1 != _16.0.1;
_8 = 2069598777_i32;
Goto(bb7)
}
bb7 = {
Call(_28 = dump_var(17_usize, 10_usize, Move(_10), 4_usize, Move(_4), 12_usize, Move(_12), 23_usize, Move(_23)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_28 = dump_var(17_usize, 1_usize, Move(_1), 3_usize, Move(_3), 2_usize, Move(_2), 15_usize, Move(_15)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_28 = dump_var(17_usize, 13_usize, Move(_13), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [u32; 7],mut _2: [u32; 6]) -> bool {
mir! {
type RET = bool;
let _3: bool;
let _4: f64;
let _5: bool;
let _6: f64;
let _7: ([i64; 5],);
let _8: char;
let _9: ();
let _10: ();
{
RET = !false;
RET = 28104_i16 >= (-1605_i16);
_2 = [1764384778_u32,3880000886_u32,2238412319_u32,2967598086_u32,1924298217_u32,3333384451_u32];
RET = 15199288094094499908_u64 >= 15342955140925712383_u64;
RET = !true;
_1 = [2225665000_u32,2195526071_u32,1176314896_u32,2423798402_u32,556758273_u32,3923939546_u32,1450568670_u32];
RET = 743752039_u32 <= 1539865222_u32;
RET = 5110105614838787616_i64 > 4188666246277483109_i64;
_3 = RET;
_1 = [1940604594_u32,1698683046_u32,1434168561_u32,2991131995_u32,2828235378_u32,2515460564_u32,1678941118_u32];
_1 = [4293985424_u32,854037008_u32,738035756_u32,509711254_u32,1221243907_u32,1443800_u32,780695229_u32];
RET = _3 | _3;
_1 = [4127979442_u32,910402602_u32,3806049708_u32,1120098323_u32,3875774829_u32,4216589664_u32,920934493_u32];
_1 = [2744508044_u32,2319149147_u32,1419324261_u32,2973662427_u32,814441277_u32,852515409_u32,2627455732_u32];
RET = !_3;
_3 = RET;
_1 = [4057594606_u32,1153216534_u32,1030149759_u32,1113050076_u32,1970373962_u32,3929551262_u32,3080764353_u32];
_2 = [2963192794_u32,327049172_u32,3349098325_u32,2291347363_u32,3674232114_u32,3615146793_u32];
RET = _3 > _3;
_1 = [2250293124_u32,2672512145_u32,427451328_u32,4183529175_u32,1772499294_u32,2745749469_u32,405764814_u32];
_1 = [4127390673_u32,2351084602_u32,4243326539_u32,2198077483_u32,1641219561_u32,3654440527_u32,4256449647_u32];
_5 = _3 < RET;
_1 = [3951391631_u32,3954535239_u32,726951614_u32,3542992622_u32,1296189952_u32,3497015211_u32,2108421568_u32];
_2 = [3126630083_u32,1417811528_u32,3834121307_u32,2482051570_u32,1748096528_u32,262654487_u32];
_2 = [500073204_u32,2697894788_u32,2588002015_u32,2180317466_u32,3638555017_u32,2024290682_u32];
_7.0 = [5249281659554626744_i64,(-8328038771941417112_i64),(-455833313679196923_i64),(-4904358357998209496_i64),(-1877679593580969916_i64)];
_6 = 14_i8 as f64;
Goto(bb1)
}
bb1 = {
_7.0 = [(-4628693927835298060_i64),(-7069305043390519522_i64),(-3401132661706241946_i64),(-4353622270863002277_i64),4209955177505329124_i64];
Goto(bb2)
}
bb2 = {
RET = _3 & _5;
_6 = 283405557425052145100152866190360930859_u128 as f64;
_2 = [654582939_u32,679657931_u32,1370541033_u32,1632579048_u32,3296963088_u32,2846876844_u32];
_5 = RET;
RET = _5 > _5;
_3 = RET != RET;
_1 = [2752016993_u32,662162417_u32,3229194662_u32,132695245_u32,1550850176_u32,3275741826_u32,3079006552_u32];
_4 = _6 - _6;
_2 = [2719342618_u32,202524630_u32,1038081651_u32,2026264900_u32,2828623356_u32,3276235793_u32];
_3 = !RET;
_8 = '\u{216b5}';
_6 = -_4;
_2 = [1842955619_u32,2716952724_u32,2629012723_u32,1914640228_u32,52601749_u32,727821438_u32];
_6 = -_4;
_3 = _5;
_2 = [3862188690_u32,2107194089_u32,3015624495_u32,659402984_u32,588888874_u32,4209309236_u32];
Goto(bb3)
}
bb3 = {
Call(_9 = dump_var(18_usize, 2_usize, Move(_2), 8_usize, Move(_8), 1_usize, Move(_1), 10_usize, _10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: Adt47,mut _2: bool) -> i16 {
mir! {
type RET = i16;
let _3: isize;
let _4: char;
let _5: ([i64; 5],);
let _6: u16;
let _7: isize;
let _8: (*const &'static i64, u16, (&'static i64, u8), *const i128, ([u32; 6], *const *const &'static i64, bool, *const i128), i128);
let _9: ([i64; 5],);
let _10: char;
let _11: i16;
let _12: isize;
let _13: u16;
let _14: Adt45;
let _15: bool;
let _16: isize;
let _17: f32;
let _18: [u64; 2];
let _19: Adt44;
let _20: [u32; 6];
let _21: i128;
let _22: Adt43;
let _23: char;
let _24: ();
let _25: ();
{
_1.fld3 = [12865913741958692462_u64,2664419539541855531_u64];
_1.fld3 = [1442624513905780351_u64,17693739399663961637_u64];
RET = (-29483_i16) | (-22158_i16);
Goto(bb1)
}
bb1 = {
_1.fld1 = 350742182_i32;
_1.fld4 = [800682850_u32,2977555625_u32,3739610449_u32,1589723811_u32,2934893245_u32,3068519073_u32,1548640114_u32];
RET = !(-6839_i16);
_1.fld0 = [203_u8,216_u8,240_u8,236_u8,201_u8,170_u8];
RET = (-4712737610775841198_i64) as i16;
_4 = '\u{19edf}';
_1.fld4 = [946443462_u32,1000218597_u32,2985290550_u32,3117228493_u32,559932809_u32,3377261576_u32,184009854_u32];
RET = 7316_i16 & 22468_i16;
_1.fld2 = (-9223372036854775808_isize);
RET = (-5087_i16);
_3 = 15552216380583096340_u64 as isize;
_6 = 37151_u16;
_6 = !36709_u16;
_1.fld3 = [16963289141445360246_u64,8648243887167567444_u64];
RET = (-30678_i16);
_8.3 = core::ptr::addr_of!(_8.5);
_8.5 = 8156889645927506079_u64 as i128;
_5.0 = [4368626092068881286_i64,24665909491052211_i64,(-1521893339523446734_i64),3419764993182349232_i64,(-685018079057700566_i64)];
_8.4.1 = core::ptr::addr_of!(_8.0);
Call(_9.0 = core::intrinsics::transmute(_5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8.4.3 = _8.3;
_1.fld4 = [2723354292_u32,1083063988_u32,1319134664_u32,3982955356_u32,3144028599_u32,4034392289_u32,4287905258_u32];
_8.4.1 = core::ptr::addr_of!(_8.0);
_5 = (_9.0,);
_8.3 = core::ptr::addr_of!(_8.5);
_2 = _1.fld1 == _1.fld1;
_8.0 = core::ptr::addr_of!(_8.2.0);
_7 = !_1.fld2;
_5.0 = [7345288534439674123_i64,(-573100917416399931_i64),(-8628334251599657834_i64),416894932577938998_i64,5452162325453948875_i64];
_7 = _3;
_11 = RET;
_8.3 = _8.4.3;
_8.2.1 = _6 as u8;
_8.4.2 = _2;
_10 = _4;
_1.fld0 = [_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1];
_1.fld2 = _6 as isize;
_13 = _1.fld1 as u16;
Call(_6 = core::intrinsics::bswap(_13), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8.1 = _6 + _13;
_8.3 = core::ptr::addr_of!(_8.5);
_8.4.2 = _2;
_8.4.0 = [2389430208_u32,60095625_u32,540177610_u32,2729597922_u32,379610138_u32,962260473_u32];
_6 = _8.1;
_2 = _8.4.2;
_1.fld3 = [11471795953444348979_u64,14598882261333058343_u64];
_3 = _11 as isize;
RET = -_11;
_9.0 = [(-1175423610183339672_i64),1752223614999438423_i64,4085648725383354492_i64,(-733194389168319336_i64),9196382462776902752_i64];
_3 = !_1.fld2;
_12 = -_1.fld2;
_15 = _8.4.2 != _2;
_5.0 = [(-349751522452792841_i64),(-8032470993744430022_i64),(-2523809934126498530_i64),4199082468194123929_i64,7418734406449228489_i64];
match _11 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
340282366920938463463374607431768180778 => bb12,
_ => bb11
}
}
bb4 = {
_8.4.3 = _8.3;
_1.fld4 = [2723354292_u32,1083063988_u32,1319134664_u32,3982955356_u32,3144028599_u32,4034392289_u32,4287905258_u32];
_8.4.1 = core::ptr::addr_of!(_8.0);
_5 = (_9.0,);
_8.3 = core::ptr::addr_of!(_8.5);
_2 = _1.fld1 == _1.fld1;
_8.0 = core::ptr::addr_of!(_8.2.0);
_7 = !_1.fld2;
_5.0 = [7345288534439674123_i64,(-573100917416399931_i64),(-8628334251599657834_i64),416894932577938998_i64,5452162325453948875_i64];
_7 = _3;
_11 = RET;
_8.3 = _8.4.3;
_8.2.1 = _6 as u8;
_8.4.2 = _2;
_10 = _4;
_1.fld0 = [_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1];
_1.fld2 = _6 as isize;
_13 = _1.fld1 as u16;
Call(_6 = core::intrinsics::bswap(_13), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_1.fld1 = 350742182_i32;
_1.fld4 = [800682850_u32,2977555625_u32,3739610449_u32,1589723811_u32,2934893245_u32,3068519073_u32,1548640114_u32];
RET = !(-6839_i16);
_1.fld0 = [203_u8,216_u8,240_u8,236_u8,201_u8,170_u8];
RET = (-4712737610775841198_i64) as i16;
_4 = '\u{19edf}';
_1.fld4 = [946443462_u32,1000218597_u32,2985290550_u32,3117228493_u32,559932809_u32,3377261576_u32,184009854_u32];
RET = 7316_i16 & 22468_i16;
_1.fld2 = (-9223372036854775808_isize);
RET = (-5087_i16);
_3 = 15552216380583096340_u64 as isize;
_6 = 37151_u16;
_6 = !36709_u16;
_1.fld3 = [16963289141445360246_u64,8648243887167567444_u64];
RET = (-30678_i16);
_8.3 = core::ptr::addr_of!(_8.5);
_8.5 = 8156889645927506079_u64 as i128;
_5.0 = [4368626092068881286_i64,24665909491052211_i64,(-1521893339523446734_i64),3419764993182349232_i64,(-685018079057700566_i64)];
_8.4.1 = core::ptr::addr_of!(_8.0);
Call(_9.0 = core::intrinsics::transmute(_5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_9 = (_5.0,);
_15 = _2;
_5 = (_9.0,);
_1.fld2 = !_3;
_4 = _10;
_9.0 = _5.0;
_3 = _1.fld2 & _7;
Goto(bb13)
}
bb13 = {
_1.fld4 = [873279997_u32,685402540_u32,362121313_u32,1856737551_u32,2375615963_u32,2281664280_u32,3937089375_u32];
_1.fld1 = _11 as i32;
_6 = _13 & _13;
_8.5 = _8.1 as i128;
_5 = (_9.0,);
_16 = _1.fld2 * _1.fld2;
_17 = 3831154912_u32 as f32;
_16 = -_12;
_3 = _16;
_8.0 = core::ptr::addr_of!(_8.2.0);
RET = 17624143874836461942_u64 as i16;
_9 = _5;
_18 = _1.fld3;
_21 = _8.5 * _8.5;
_8.4.2 = _15;
_1.fld0 = [_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1];
_18 = _1.fld3;
_5 = _9;
_6 = 11096225642773747523_u64 as u16;
_12 = -_7;
_8.3 = core::ptr::addr_of!(_8.5);
_7 = _8.2.1 as isize;
_20 = [3407875107_u32,374782161_u32,2173694632_u32,184484080_u32,3091160649_u32,2782229843_u32];
RET = !_11;
_8.0 = core::ptr::addr_of!(_8.2.0);
_14 = Adt45::Variant0 { fld0: _20,fld1: _4,fld2: 14687511690681156513_u64,fld3: _1.fld4,fld4: _1.fld0,fld5: 105929930746724577268755037868104308029_u128 };
match _11 {
0 => bb9,
1 => bb12,
2 => bb10,
340282366920938463463374607431768180778 => bb15,
_ => bb14
}
}
bb14 = {
_8.4.3 = _8.3;
_1.fld4 = [2723354292_u32,1083063988_u32,1319134664_u32,3982955356_u32,3144028599_u32,4034392289_u32,4287905258_u32];
_8.4.1 = core::ptr::addr_of!(_8.0);
_5 = (_9.0,);
_8.3 = core::ptr::addr_of!(_8.5);
_2 = _1.fld1 == _1.fld1;
_8.0 = core::ptr::addr_of!(_8.2.0);
_7 = !_1.fld2;
_5.0 = [7345288534439674123_i64,(-573100917416399931_i64),(-8628334251599657834_i64),416894932577938998_i64,5452162325453948875_i64];
_7 = _3;
_11 = RET;
_8.3 = _8.4.3;
_8.2.1 = _6 as u8;
_8.4.2 = _2;
_10 = _4;
_1.fld0 = [_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1,_8.2.1];
_1.fld2 = _6 as isize;
_13 = _1.fld1 as u16;
Call(_6 = core::intrinsics::bswap(_13), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
place!(Field::<[u32; 6]>(Variant(_14, 0), 0)) = [4157532123_u32,1261543062_u32,1005512852_u32,739946946_u32,4086744030_u32,24620017_u32];
_8.5 = _3 as i128;
_23 = Field::<char>(Variant(_14, 0), 1);
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(19_usize, 9_usize, Move(_9), 21_usize, Move(_21), 2_usize, Move(_2), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(19_usize, 10_usize, Move(_10), 3_usize, Move(_3), 16_usize, Move(_16), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{ca99}'), std::hint::black_box((-107_isize)), std::hint::black_box(47_i8), std::hint::black_box(30487_i16), std::hint::black_box(1642471560_i32), std::hint::black_box((-3088099355350354853_i64)), std::hint::black_box((-92250468018360930725099671004256506780_i128)), std::hint::black_box(15404508560330954434_usize), std::hint::black_box(81_u8), std::hint::black_box(54552_u16), std::hint::black_box(684932349_u32), std::hint::black_box(16952858050815824304_u64), std::hint::black_box(175831299162155953469340680168072015384_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt40 {
Variant0{
fld0: bool,
fld1: char,
fld2: *const u32,
fld3: [i64; 5],
fld4: u128,
fld5: f64,
fld6: [u64; 2],
fld7: [u8; 6],

},
Variant1{
fld0: [u32; 7],
fld1: u8,
fld2: i64,
fld3: *const [u64; 2],
fld4: *const i128,
fld5: u32,

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: u32,
fld1: [u64; 2],
fld2: f64,

},
Variant1{
fld0: bool,
fld1: f64,
fld2: ([i64; 5],),
fld3: usize,
fld4: i16,

},
Variant2{
fld0: i128,
fld1: u8,
fld2: isize,
fld3: i16,

}}
#[derive(Debug)]
pub enum Adt42 {
Variant0{
fld0: u32,
fld1: u8,
fld2: isize,
fld3: *const i128,
fld4: u128,
fld5: *const [u64; 2],
fld6: Adt41,
fld7: Adt40,

},
Variant1{
fld0: ([i64; 5],),

},
Variant2{
fld0: i64,
fld1: *const u32,
fld2: Adt41,
fld3: [u64; 2],
fld4: u16,

},
Variant3{
fld0: u8,
fld1: [i64; 5],
fld2: *const [u64; 2],
fld3: i8,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: bool,
fld1: u128,
fld2: Adt40,
fld3: [i64; 5],
fld4: f64,
fld5: usize,

},
Variant1{
fld0: u8,
fld1: i64,

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: i32,
fld1: i8,
fld2: Adt43,

},
Variant1{
fld0: Adt43,
fld1: *const i128,
fld2: isize,
fld3: u32,
fld4: [u8; 6],
fld5: Adt41,

},
Variant2{
fld0: u8,
fld1: *const u32,
fld2: isize,
fld3: i128,
fld4: Adt40,
fld5: [u32; 7],
fld6: [u8; 6],

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: [u32; 6],
fld1: char,
fld2: u64,
fld3: [u32; 7],
fld4: [u8; 6],
fld5: u128,

},
Variant1{
fld0: [char; 6],

},
Variant2{
fld0: Adt40,
fld1: ([i64; 5],),
fld2: isize,
fld3: [u32; 6],
fld4: Adt42,
fld5: u128,

},
Variant3{
fld0: u16,
fld1: Adt42,
fld2: isize,
fld3: i8,
fld4: *const i128,

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: [u32; 7],
fld1: u16,
fld2: i64,
fld3: u8,
fld4: *const [u64; 2],
fld5: *const u32,

},
Variant1{
fld0: usize,
fld1: Adt45,

},
Variant2{
fld0: ([i64; 5],),
fld1: char,
fld2: isize,
fld3: f32,
fld4: Adt42,

},
Variant3{
fld0: u32,
fld1: Adt45,
fld2: isize,
fld3: [i64; 5],
fld4: [u64; 2],
fld5: *const u32,
fld6: usize,

}}
#[derive(Debug)]
pub struct Adt47 {
fld0: [u8; 6],
fld1: i32,
fld2: isize,
fld3: [u64; 2],
fld4: [u32; 7],
}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: ([i64; 5],),
fld1: Adt40,
fld2: Adt47,
fld3: [u32; 7],
fld4: i16,
fld5: i32,
fld6: Adt44,

},
Variant1{
fld0: *const u32,
fld1: ([i64; 5],),

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: bool,

},
Variant1{
fld0: f32,
fld1: Adt44,
fld2: [i64; 5],

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: i128,
fld1: Adt45,
fld2: [u8; 6],
fld3: usize,
fld4: Adt41,
fld5: u128,

},
Variant1{
fld0: *const [u64; 2],
fld1: *const u32,
fld2: [u32; 7],
fld3: i8,
fld4: u8,
fld5: Adt44,

},
Variant2{
fld0: Adt40,

},
Variant3{
fld0: Adt47,
fld1: Adt44,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: u16,
fld1: *const i128,
fld2: [i64; 5],
fld3: i8,
fld4: u64,

},
Variant1{
fld0: [u32; 6],
fld1: char,
fld2: isize,
fld3: Adt44,
fld4: [i64; 5],

},
Variant2{
fld0: u16,
fld1: *const u32,
fld2: u32,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: Adt48,
fld1: f64,
fld2: isize,
fld3: Adt50,
fld4: [char; 6],
fld5: Adt44,
fld6: i64,

},
Variant1{
fld0: Adt46,
fld1: usize,
fld2: Adt47,
fld3: [u8; 6],

},
Variant2{
fld0: u64,
fld1: Adt47,
fld2: isize,
fld3: Adt46,
fld4: ([i64; 5],),
fld5: u32,

},
Variant3{
fld0: [u64; 2],
fld1: Adt51,
fld2: usize,
fld3: Adt46,
fld4: Adt40,
fld5: u32,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: Adt46,
fld1: i64,
fld2: usize,
fld3: Adt49,
fld4: i16,
fld5: ([i64; 5],),

},
Variant1{
fld0: bool,
fld1: Adt51,
fld2: Adt48,
fld3: i8,
fld4: i16,
fld5: Adt49,
fld6: usize,

},
Variant2{
fld0: Adt42,
fld1: Adt40,
fld2: isize,
fld3: i64,
fld4: Adt43,
fld5: i32,

}}
#[derive(Debug)]
pub struct Adt54 {
fld0: Adt42,
fld1: usize,
fld2: Adt53,
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: [u8; 6],
fld1: u128,
fld2: isize,
fld3: ([i64; 5],),
fld4: [u32; 6],
fld5: u32,
fld6: i64,
fld7: u8,

},
Variant1{
fld0: [u64; 2],
fld1: Adt43,
fld2: u32,
fld3: *const [u64; 2],
fld4: *const u32,
fld5: i32,
fld6: Adt50,
fld7: [u32; 7],

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: Adt47,
fld1: usize,
fld2: [i64; 5],
fld3: u16,
fld4: i64,
fld5: Adt53,

},
Variant1{
fld0: i16,
fld1: i32,

},
Variant2{
fld0: *const [u64; 2],
fld1: Adt52,
fld2: Adt48,

}}

