#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u32,mut _2: u128,mut _3: isize,mut _4: i16) -> i64 {
mir! {
type RET = i64;
let _5: u8;
let _6: Adt46;
let _7: bool;
let _8: &'static *mut i64;
let _9: i8;
let _10: f32;
let _11: bool;
let _12: [char; 6];
let _13: [i8; 1];
let _14: [u128; 2];
let _15: Adt53;
let _16: Adt45;
let _17: (i64,);
let _18: Adt49;
let _19: [i8; 7];
let _20: f64;
let _21: f64;
let _22: u128;
let _23: f32;
let _24: isize;
let _25: [u128; 2];
let _26: [u128; 2];
let _27: i16;
let _28: f32;
let _29: Adt50;
let _30: u32;
let _31: f64;
let _32: isize;
let _33: [usize; 7];
let _34: char;
let _35: [bool; 6];
let _36: isize;
let _37: u8;
let _38: [u128; 2];
let _39: [u16; 8];
let _40: i16;
let _41: [i64; 6];
let _42: u32;
let _43: [bool; 6];
let _44: isize;
let _45: char;
let _46: ([i8; 7], [i64; 6]);
let _47: f32;
let _48: isize;
let _49: u32;
let _50: i16;
let _51: f32;
let _52: (f64, [u128; 2], [usize; 7]);
let _53: &'static *mut i64;
let _54: ();
let _55: ();
{
_3 = !9223372036854775807_isize;
RET = 2860400539_u32 as i64;
_4 = 15545_i16;
_4 = 207345945936161075142760877609749761742_u128 as i16;
RET = -(-3710466754634521374_i64);
RET = -6228204266650451472_i64;
_2 = 170478428833557304118677925065218649732_u128 * 39415778887284983653773200412493585033_u128;
_1 = _2 as u32;
RET = 5328535262657798062_i64;
_1 = (-101_i8) as u32;
RET = (-789016845362626226_i64);
_4 = !(-17833_i16);
_5 = _4 as u8;
RET = 11643837620360067795_u64 as i64;
_5 = 74_u8;
RET = !(-7077980969501917989_i64);
RET = (-6688472283171209781_i64);
_6.fld3 = [41140_u16,20670_u16,1689_u16,24660_u16,19195_u16,56157_u16,5523_u16,36362_u16];
_4 = -12298_i16;
RET = (-2690099179761765250_i64);
_5 = 188_u8;
_6.fld3 = [43666_u16,11342_u16,25094_u16,44622_u16,5039_u16,21328_u16,18261_u16,28582_u16];
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_5 = 137_u8 >> _2;
_6.fld2 = RET as i128;
_6.fld3 = [22799_u16,17221_u16,46035_u16,7757_u16,1675_u16,60084_u16,64788_u16,12619_u16];
_6.fld3 = [22751_u16,22654_u16,14747_u16,24740_u16,30207_u16,55907_u16,53362_u16,54784_u16];
_6.fld1 = [_2,_2];
RET = 3945595134149115965_i64 * (-3428688122493499806_i64);
Call(RET = fn1(_6.fld1, _6.fld3, _6, _6, _6.fld3, _2, _4, _6, _6.fld3, _6, _6, _5, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6.fld1 = [_2,_2];
_3 = 9223372036854775807_isize;
_2 = 246574585083845150072523449495851024724_u128;
_6.fld3 = [31480_u16,16889_u16,29082_u16,59149_u16,14122_u16,48608_u16,9651_u16,41652_u16];
_6.fld2 = 60294292540677476063103394684939830738_i128 & (-109768253449071792843489425699112168602_i128);
RET = _6.fld2 as i64;
RET = 4556145470971021998_i64;
_4 = (-27358_i16);
_1 = 3600277374_u32;
RET = _1 as i64;
_3 = (-18_i8) as isize;
_7 = false | false;
_2 = 194840768359772981636165975248944500077_u128;
RET = 6353070996904182825_i64 & 4014627331976214202_i64;
_1 = _2 as u32;
_7 = false | false;
_6.fld2 = 26281972140184307998888054317024525846_i128 << _5;
_6.fld2 = 141726481793152018549427336706663760796_i128 * 133752063320467025979404714837591038719_i128;
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_7 = RET != RET;
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_6.fld1 = [_2,_2];
RET = 3560352130418854465_i64 & 6482827082486662372_i64;
Goto(bb2)
}
bb2 = {
_7 = true;
_10 = _4 as f32;
_5 = !205_u8;
_1 = 2407848527_u32;
_6.fld2 = (-25486517105781183656337210396609687535_i128);
_10 = _1 as f32;
_5 = !182_u8;
_5 = !243_u8;
_9 = 2_usize as i8;
_9 = !(-99_i8);
_6.fld1 = [_2,_2];
RET = 5623305892065173653_i64 >> _5;
_1 = !2354606932_u32;
RET = '\u{10cd7b}' as i64;
RET = (-7865187999165913614_i64) | (-215937528207033168_i64);
_7 = false;
_4 = -2074_i16;
_1 = RET as u32;
_4 = 431_i16 >> RET;
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_6.fld1 = [_2,_2];
_9 = 39_i8 + 91_i8;
_6.fld1 = [_2,_2];
RET = (-5666586064578913268_i64) * (-2919626594797139517_i64);
_6.fld1 = [_2,_2];
Call(_3 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6.fld1 = [_2,_2];
_13 = [_9];
_6.fld0 = [RET,RET,RET,RET,RET,RET];
RET = 390688410677964537_i64 << _1;
_11 = _7;
_3 = 50579_u16 as isize;
_10 = RET as f32;
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_14 = [_2,_2];
_7 = RET <= RET;
_2 = 222817961530389880312167697066415354697_u128 * 245493069822421334558412642771911758000_u128;
_6.fld2 = 14073180760517057475715533545265245208_i128;
Goto(bb4)
}
bb4 = {
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_13 = [_9];
_14 = _6.fld1;
_12 = ['\u{ff8cf}','\u{cf905}','\u{40e05}','\u{10f250}','\u{a6777}','\u{fb92}'];
_16 = Adt45::Variant1 { fld0: _6.fld3 };
_14 = _6.fld1;
SetDiscriminant(_16, 1);
Goto(bb5)
}
bb5 = {
_6.fld1 = [_2,_2];
_1 = 4063123374_u32 - 1224649330_u32;
_17.0 = !RET;
_13 = [_9];
_7 = _11;
_9 = 126_i8;
RET = _6.fld2 as i64;
_18.fld2 = _10 as usize;
_18.fld4 = [_9];
_2 = 189777485197441674889155132494968062965_u128;
_17 = (RET,);
_11 = _7;
_6.fld3 = [6910_u16,40441_u16,15522_u16,60556_u16,49003_u16,51888_u16,8709_u16,22244_u16];
place!(Field::<[u16; 8]>(Variant(_16, 1), 0)) = _6.fld3;
_10 = _3 as f32;
_19 = [_9,_9,_9,_9,_9,_9,_9];
_1 = 3435725704_u32;
_14 = [_2,_2];
_4 = -14244_i16;
place!(Field::<[u16; 8]>(Variant(_16, 1), 0)) = [60220_u16,20328_u16,51474_u16,6463_u16,20108_u16,15172_u16,6218_u16,24110_u16];
_21 = _3 as f64;
_21 = _5 as f64;
_21 = _1 as f64;
SetDiscriminant(_16, 0);
place!(Field::<(i64,)>(Variant(_16, 0), 0)).0 = RET << _1;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
189777485197441674889155132494968062965 => bb7,
_ => bb6
}
}
bb6 = {
_7 = true;
_10 = _4 as f32;
_5 = !205_u8;
_1 = 2407848527_u32;
_6.fld2 = (-25486517105781183656337210396609687535_i128);
_10 = _1 as f32;
_5 = !182_u8;
_5 = !243_u8;
_9 = 2_usize as i8;
_9 = !(-99_i8);
_6.fld1 = [_2,_2];
RET = 5623305892065173653_i64 >> _5;
_1 = !2354606932_u32;
RET = '\u{10cd7b}' as i64;
RET = (-7865187999165913614_i64) | (-215937528207033168_i64);
_7 = false;
_4 = -2074_i16;
_1 = RET as u32;
_4 = 431_i16 >> RET;
_6.fld0 = [RET,RET,RET,RET,RET,RET];
_6.fld1 = [_2,_2];
_9 = 39_i8 + 91_i8;
_6.fld1 = [_2,_2];
RET = (-5666586064578913268_i64) * (-2919626594797139517_i64);
_6.fld1 = [_2,_2];
Call(_3 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_6.fld1 = [_2,_2];
_9 = (-85_i8) ^ 95_i8;
_19 = [_9,_9,_9,_9,_9,_9,_9];
_18.fld3 = (-1562885093_i32) as i8;
_7 = _11;
Goto(bb8)
}
bb8 = {
_18.fld4 = _13;
_12 = ['\u{bd0f2}','\u{1ed0}','\u{2fb58}','\u{625cf}','\u{73051}','\u{99d3d}'];
_12 = ['\u{9328b}','\u{3409c}','\u{b1a02}','\u{c51bb}','\u{22751}','\u{7eaee}'];
_18.fld4 = [_18.fld3];
_22 = !_2;
_25 = [_2,_2];
_9 = _18.fld3 & _18.fld3;
_6.fld3 = [37709_u16,53799_u16,11681_u16,21715_u16,35926_u16,12962_u16,16668_u16,9984_u16];
_6.fld3 = [30519_u16,45251_u16,22427_u16,9452_u16,49544_u16,42234_u16,56706_u16,20296_u16];
_12 = ['\u{58f8b}','\u{104544}','\u{f72f0}','\u{a73dd}','\u{d1fb}','\u{efb21}'];
_3 = 9223372036854775807_isize & 62_isize;
_28 = _6.fld2 as f32;
Call(_5 = core::intrinsics::transmute(_9), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_18.fld0 = _21 - _21;
_18.fld3 = -_9;
_11 = _7;
_24 = _3;
_7 = !_11;
_18.fld2 = 4776881864472264870_usize;
_18.fld3 = _9;
_12 = ['\u{ea13c}','\u{10bc13}','\u{74e90}','\u{7c1e1}','\u{65153}','\u{10f4d7}'];
RET = _17.0 >> _9;
_18.fld0 = -_21;
_10 = _1 as f32;
_13 = _18.fld4;
_6.fld2 = -(-59194381161159341996365531321386699074_i128);
_7 = _18.fld0 > _21;
_17.0 = RET;
_17 = (RET,);
_1 = !170695446_u32;
_18.fld0 = -_21;
_17.0 = _21 as i64;
_9 = _18.fld3 & _18.fld3;
Goto(bb10)
}
bb10 = {
_19 = [_9,_9,_18.fld3,_9,_9,_9,_9];
_22 = _2;
_24 = _3 * _3;
_27 = _4;
_17.0 = !Field::<(i64,)>(Variant(_16, 0), 0).0;
_2 = _10 as u128;
_23 = _2 as f32;
_6.fld0 = [_17.0,_17.0,RET,_17.0,_17.0,Field::<(i64,)>(Variant(_16, 0), 0).0];
_6.fld1 = _25;
_4 = '\u{4afee}' as i16;
_30 = _11 as u32;
place!(Field::<*mut [i8; 7]>(Variant(_16, 0), 1)) = core::ptr::addr_of_mut!(_19);
_21 = _18.fld0;
_26 = [_2,_2];
_20 = _18.fld0;
_18.fld0 = -_20;
_31 = _18.fld0;
Goto(bb11)
}
bb11 = {
_33 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_6.fld1 = [_22,_22];
_6.fld1 = _25;
RET = !_17.0;
_7 = _11 < _11;
_5 = _27 as u8;
_21 = _31;
_22 = _2 << _5;
_6.fld0 = [_17.0,RET,Field::<(i64,)>(Variant(_16, 0), 0).0,Field::<(i64,)>(Variant(_16, 0), 0).0,Field::<(i64,)>(Variant(_16, 0), 0).0,_17.0];
_3 = _9 as isize;
_26 = [_22,_22];
_28 = RET as f32;
_18.fld2 = 8650883419390827434_usize ^ 2_usize;
_22 = _6.fld2 as u128;
_20 = -_18.fld0;
_33 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_18.fld2 = !8061080959066905263_usize;
_27 = _4 ^ _4;
_17 = (Field::<(i64,)>(Variant(_16, 0), 0).0,);
_14 = [_2,_22];
_24 = _3 >> _5;
_1 = _30;
Goto(bb12)
}
bb12 = {
_17 = (Field::<(i64,)>(Variant(_16, 0), 0).0,);
_20 = 1495660826_i32 as f64;
_41 = [_17.0,_17.0,Field::<(i64,)>(Variant(_16, 0), 0).0,Field::<(i64,)>(Variant(_16, 0), 0).0,_17.0,Field::<(i64,)>(Variant(_16, 0), 0).0];
_34 = '\u{191fa}';
_13 = [_9];
_37 = _5;
place!(Field::<(i64,)>(Variant(_16, 0), 0)) = (RET,);
_3 = _24 | _24;
_37 = _5;
_22 = _2 + _2;
_43 = [_7,_11,_7,_11,_7,_7];
_4 = _27 + _27;
_34 = '\u{743e4}';
_38 = _6.fld1;
_6.fld1 = [_22,_22];
Goto(bb13)
}
bb13 = {
_5 = !_37;
_32 = _3;
_19 = [_9,_18.fld3,_18.fld3,_18.fld3,_9,_18.fld3,_18.fld3];
SetDiscriminant(_16, 1);
Call(_37 = core::intrinsics::transmute(_13), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_34 = '\u{10c8b6}';
_32 = _22 as isize;
place!(Field::<[u16; 8]>(Variant(_16, 1), 0)) = _6.fld3;
SetDiscriminant(_16, 1);
_46.1 = [_17.0,RET,_17.0,RET,_17.0,RET];
_52.2 = _33;
place!(Field::<[u16; 8]>(Variant(_16, 1), 0)) = _6.fld3;
_41 = [_17.0,RET,RET,_17.0,RET,_17.0];
SetDiscriminant(_16, 0);
_44 = _3;
_52 = (_18.fld0, _26, _33);
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(0_usize, 5_usize, Move(_5), 4_usize, Move(_4), 32_usize, Move(_32), 44_usize, Move(_44)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(0_usize, 25_usize, Move(_25), 7_usize, Move(_7), 2_usize, Move(_2), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(0_usize, 34_usize, Move(_34), 37_usize, Move(_37), 22_usize, Move(_22), 26_usize, Move(_26)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(0_usize, 41_usize, Move(_41), 55_usize, _55, 55_usize, _55, 55_usize, _55), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: [u128; 2],mut _2: [u16; 8],mut _3: Adt46,mut _4: Adt46,mut _5: [u16; 8],mut _6: u128,mut _7: i16,mut _8: Adt46,mut _9: [u16; 8],mut _10: Adt46,mut _11: Adt46,mut _12: u8,mut _13: Adt46) -> i64 {
mir! {
type RET = i64;
let _14: Adt46;
let _15: isize;
let _16: f64;
let _17: f32;
let _18: Adt51;
let _19: u32;
let _20: *mut [i8; 7];
let _21: Adt43;
let _22: [u16; 8];
let _23: isize;
let _24: i8;
let _25: Adt50;
let _26: usize;
let _27: i32;
let _28: *mut (char, *mut [i8; 7], i16);
let _29: *mut (char, *mut [i8; 7], i16);
let _30: (u128,);
let _31: [u128; 2];
let _32: (i32,);
let _33: [char; 6];
let _34: Adt50;
let _35: [char; 6];
let _36: isize;
let _37: Adt50;
let _38: (u128,);
let _39: &'static *mut i64;
let _40: Adt43;
let _41: (char, *mut [i8; 7], i16);
let _42: ();
let _43: ();
{
_10.fld3 = _8.fld3;
_14.fld2 = _10.fld2;
_8 = Adt46 { fld0: _10.fld0,fld1: _3.fld1,fld2: _3.fld2,fld3: _2 };
_7 = 25908_i16 ^ (-23279_i16);
_14 = _3;
Call(_10.fld0 = fn2(_13.fld3, _14.fld2, _3.fld1, _2, _8.fld1, _14.fld3, _3.fld3, _14, _14, _2, _14.fld3, _11, _13.fld3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = _13;
_11.fld3 = _10.fld3;
Goto(bb2)
}
bb2 = {
_3.fld0 = [1792502030624441173_i64,9036730661885620805_i64,4179147664034979904_i64,3790019389371301966_i64,2537836622791491924_i64,7095635464373165157_i64];
_3 = _8;
_16 = _7 as f64;
_8.fld3 = [54534_u16,5990_u16,20824_u16,19646_u16,51415_u16,31887_u16,2932_u16,16190_u16];
_14.fld1 = _8.fld1;
_14.fld1 = _11.fld1;
_11.fld1 = [_6,_6];
Goto(bb3)
}
bb3 = {
_10 = _3;
_8.fld3 = [14504_u16,55423_u16,26205_u16,9213_u16,7339_u16,61020_u16,42156_u16,8645_u16];
_11.fld2 = _13.fld2 - _3.fld2;
_8.fld0 = [(-7794685774557904483_i64),8924609994767023975_i64,3529019428925803639_i64,5339991272892767142_i64,8872167232932687718_i64,7689399612857991742_i64];
_8.fld3 = [64570_u16,37657_u16,39428_u16,32338_u16,17646_u16,46102_u16,58897_u16,20623_u16];
_13 = Adt46 { fld0: _11.fld0,fld1: _14.fld1,fld2: _4.fld2,fld3: _9 };
_19 = 150300505_u32 * 1707249737_u32;
Goto(bb4)
}
bb4 = {
_5 = [23996_u16,37049_u16,7556_u16,54737_u16,54917_u16,48833_u16,2671_u16,46046_u16];
_10.fld3 = [17615_u16,31419_u16,43159_u16,59137_u16,45658_u16,23336_u16,26748_u16,20592_u16];
_21.fld2 = !3963531978885341738_usize;
_4 = Adt46 { fld0: _3.fld0,fld1: _3.fld1,fld2: _8.fld2,fld3: _14.fld3 };
_4.fld3 = [59896_u16,59789_u16,25709_u16,52438_u16,59785_u16,24349_u16,27899_u16,26758_u16];
_8 = _4;
_10.fld0 = [1527523449508028869_i64,(-8532113298938579000_i64),6523245454989650430_i64,4187575477933406743_i64,(-1793813829440272798_i64),(-1127630470265948519_i64)];
_14.fld1 = [_6,_6];
_21.fld2 = 113_isize as usize;
_22 = _8.fld3;
_13.fld1 = _8.fld1;
Goto(bb5)
}
bb5 = {
_6 = 229378724363070789152387435890132877722_u128 | 293482996728979516882837682333854139613_u128;
_22 = [54478_u16,37650_u16,5906_u16,42411_u16,12021_u16,55548_u16,17834_u16,32694_u16];
_15 = !(-9223372036854775808_isize);
_17 = 571904759338727357_u64 as f32;
_7 = _6 as i16;
_22 = [1560_u16,38357_u16,32395_u16,487_u16,9470_u16,9201_u16,52807_u16,40953_u16];
_6 = 53663268175146405296839489616212649070_u128;
_13.fld2 = !_4.fld2;
_21.fld1 = [24140_u16,6923_u16,33834_u16,62433_u16,25096_u16,58341_u16,11656_u16,33047_u16];
Goto(bb6)
}
bb6 = {
RET = -(-8097392459201039353_i64);
_21.fld2 = 8361919671035939474_usize;
_3 = _8;
_7 = _16 as i16;
_22 = [53242_u16,38019_u16,36381_u16,7978_u16,19425_u16,52383_u16,26814_u16,61221_u16];
_26 = !_21.fld2;
_2 = _22;
Goto(bb7)
}
bb7 = {
_17 = _8.fld2 as f32;
_14.fld0 = _10.fld0;
_14.fld0 = [RET,RET,RET,RET,RET,RET];
_13.fld2 = _19 as i128;
_3.fld3 = _14.fld3;
_8.fld1 = [_6,_6];
_11.fld2 = -_3.fld2;
_11 = _8;
_12 = 58_u8 >> _13.fld2;
_31 = [_6,_6];
_33 = ['\u{95c9a}','\u{4af0b}','\u{48c56}','\u{10c35c}','\u{d433}','\u{47cde}'];
_4.fld3 = [44080_u16,9801_u16,27850_u16,53067_u16,38374_u16,40194_u16,28304_u16,56073_u16];
_10.fld2 = _4.fld2 ^ _13.fld2;
_15 = false as isize;
_28 = core::ptr::addr_of_mut!(_21.fld0);
_32.0 = (-2042082209_i32);
RET = _19 as i64;
_10.fld1 = _4.fld1;
_7 = _10.fld2 as i16;
_1 = _3.fld1;
_8 = Adt46 { fld0: _11.fld0,fld1: _13.fld1,fld2: _14.fld2,fld3: _2 };
match _32.0 {
340282366920938463463374607429726129247 => bb9,
_ => bb8
}
}
bb8 = {
RET = -(-8097392459201039353_i64);
_21.fld2 = 8361919671035939474_usize;
_3 = _8;
_7 = _16 as i16;
_22 = [53242_u16,38019_u16,36381_u16,7978_u16,19425_u16,52383_u16,26814_u16,61221_u16];
_26 = !_21.fld2;
_2 = _22;
Goto(bb7)
}
bb9 = {
_29 = core::ptr::addr_of_mut!(_21.fld0);
_11 = _4;
_3.fld0 = _4.fld0;
_21.fld0.0 = '\u{ec47a}';
_32 = (1816124105_i32,);
_7 = (-3826_i16) | (-32755_i16);
_16 = _15 as f64;
_11.fld0 = [RET,RET,RET,RET,RET,RET];
_6 = 62682707767847161678772281482409689157_u128;
_1 = [_6,_6];
_17 = _32.0 as f32;
_4.fld3 = [19195_u16,53970_u16,61330_u16,6883_u16,4975_u16,32832_u16,47431_u16,21460_u16];
_11.fld3 = [40839_u16,1831_u16,34493_u16,32115_u16,27059_u16,1606_u16,45172_u16,60657_u16];
_8 = Adt46 { fld0: _11.fld0,fld1: _4.fld1,fld2: _10.fld2,fld3: _3.fld3 };
_30 = (_6,);
_4 = Adt46 { fld0: _11.fld0,fld1: _8.fld1,fld2: _8.fld2,fld3: _3.fld3 };
_5 = [29971_u16,17489_u16,9523_u16,27558_u16,3476_u16,40552_u16,30255_u16,65147_u16];
_1 = _10.fld1;
match _21.fld2 {
0 => bb8,
1 => bb7,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
8361919671035939474 => bb15,
_ => bb14
}
}
bb10 = {
_10 = _3;
_8.fld3 = [14504_u16,55423_u16,26205_u16,9213_u16,7339_u16,61020_u16,42156_u16,8645_u16];
_11.fld2 = _13.fld2 - _3.fld2;
_8.fld0 = [(-7794685774557904483_i64),8924609994767023975_i64,3529019428925803639_i64,5339991272892767142_i64,8872167232932687718_i64,7689399612857991742_i64];
_8.fld3 = [64570_u16,37657_u16,39428_u16,32338_u16,17646_u16,46102_u16,58897_u16,20623_u16];
_13 = Adt46 { fld0: _11.fld0,fld1: _14.fld1,fld2: _4.fld2,fld3: _9 };
_19 = 150300505_u32 * 1707249737_u32;
Goto(bb4)
}
bb11 = {
_17 = _8.fld2 as f32;
_14.fld0 = _10.fld0;
_14.fld0 = [RET,RET,RET,RET,RET,RET];
_13.fld2 = _19 as i128;
_3.fld3 = _14.fld3;
_8.fld1 = [_6,_6];
_11.fld2 = -_3.fld2;
_11 = _8;
_12 = 58_u8 >> _13.fld2;
_31 = [_6,_6];
_33 = ['\u{95c9a}','\u{4af0b}','\u{48c56}','\u{10c35c}','\u{d433}','\u{47cde}'];
_4.fld3 = [44080_u16,9801_u16,27850_u16,53067_u16,38374_u16,40194_u16,28304_u16,56073_u16];
_10.fld2 = _4.fld2 ^ _13.fld2;
_15 = false as isize;
_28 = core::ptr::addr_of_mut!(_21.fld0);
_32.0 = (-2042082209_i32);
RET = _19 as i64;
_10.fld1 = _4.fld1;
_7 = _10.fld2 as i16;
_1 = _3.fld1;
_8 = Adt46 { fld0: _11.fld0,fld1: _13.fld1,fld2: _14.fld2,fld3: _2 };
match _32.0 {
340282366920938463463374607429726129247 => bb9,
_ => bb8
}
}
bb12 = {
RET = -(-8097392459201039353_i64);
_21.fld2 = 8361919671035939474_usize;
_3 = _8;
_7 = _16 as i16;
_22 = [53242_u16,38019_u16,36381_u16,7978_u16,19425_u16,52383_u16,26814_u16,61221_u16];
_26 = !_21.fld2;
_2 = _22;
Goto(bb7)
}
bb13 = {
_3.fld0 = [1792502030624441173_i64,9036730661885620805_i64,4179147664034979904_i64,3790019389371301966_i64,2537836622791491924_i64,7095635464373165157_i64];
_3 = _8;
_16 = _7 as f64;
_8.fld3 = [54534_u16,5990_u16,20824_u16,19646_u16,51415_u16,31887_u16,2932_u16,16190_u16];
_14.fld1 = _8.fld1;
_14.fld1 = _11.fld1;
_11.fld1 = [_6,_6];
Goto(bb3)
}
bb14 = {
_4 = _13;
_11.fld3 = _10.fld3;
Goto(bb2)
}
bb15 = {
_21.fld0.2 = (-82_i8) as i16;
_30.0 = !_6;
_32 = ((-1685326356_i32),);
_36 = true as isize;
_4.fld0 = _10.fld0;
_8 = Adt46 { fld0: _11.fld0,fld1: _14.fld1,fld2: _10.fld2,fld3: _14.fld3 };
_9 = [39832_u16,4445_u16,14246_u16,44622_u16,58586_u16,49213_u16,60266_u16,59246_u16];
_11.fld1 = _14.fld1;
_10 = Adt46 { fld0: _4.fld0,fld1: _14.fld1,fld2: _11.fld2,fld3: _21.fld1 };
_14.fld1 = [_6,_30.0];
_21.fld0.0 = '\u{8042d}';
_4.fld3 = _9;
_24 = !103_i8;
_13.fld3 = [58651_u16,43128_u16,18410_u16,63441_u16,59115_u16,17450_u16,25709_u16,35028_u16];
_26 = !_21.fld2;
_32.0 = (*_29).0 as i32;
_24 = !51_i8;
_14.fld0 = [RET,RET,RET,RET,RET,RET];
Goto(bb16)
}
bb16 = {
Call(_42 = dump_var(1_usize, 15_usize, Move(_15), 24_usize, Move(_24), 31_usize, Move(_31), 32_usize, Move(_32)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(1_usize, 22_usize, Move(_22), 9_usize, Move(_9), 36_usize, Move(_36), 33_usize, Move(_33)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [u16; 8],mut _2: i128,mut _3: [u128; 2],mut _4: [u16; 8],mut _5: [u128; 2],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: Adt46,mut _9: Adt46,mut _10: [u16; 8],mut _11: [u16; 8],mut _12: Adt46,mut _13: [u16; 8]) -> [i64; 6] {
mir! {
type RET = [i64; 6];
let _14: bool;
let _15: Adt57;
let _16: isize;
let _17: f64;
let _18: isize;
let _19: bool;
let _20: (u32,);
let _21: [usize; 7];
let _22: f64;
let _23: i16;
let _24: f64;
let _25: f32;
let _26: Adt46;
let _27: Adt44;
let _28: char;
let _29: i128;
let _30: ();
let _31: ();
{
_9.fld0 = _8.fld0;
_8 = _9;
_10 = _11;
_10 = _7;
_14 = _2 >= _12.fld2;
_12.fld1 = [142523280858500410072311667276300832305_u128,165373607416206900282092545602317224004_u128];
_12.fld0 = [(-3347131250058198310_i64),1000555085606489697_i64,786246733850509408_i64,(-5484552796286199819_i64),(-5750048106385610092_i64),(-7854915136013381822_i64)];
_13 = [40039_u16,59434_u16,22269_u16,30258_u16,37077_u16,60737_u16,43386_u16,57125_u16];
_8 = Adt46 { fld0: _12.fld0,fld1: _5,fld2: _12.fld2,fld3: _10 };
_9.fld3 = _13;
_9.fld2 = 1883529148_i32 as i128;
_12.fld0 = [7951658583624599317_i64,7335687659955513501_i64,2316112062812265767_i64,(-7264247712226537849_i64),8305805879534335058_i64,(-3464938006282692086_i64)];
_12.fld1 = _9.fld1;
_13 = [8847_u16,12194_u16,53849_u16,290_u16,32256_u16,49700_u16,44977_u16,54570_u16];
_9.fld3 = [63424_u16,15183_u16,53654_u16,38675_u16,11598_u16,10998_u16,8971_u16,54205_u16];
_9.fld0 = [5558429425755096840_i64,(-2695129779056848326_i64),(-3707276476590812275_i64),8600665334386350190_i64,3641213248750379128_i64,1594712453313228667_i64];
_9 = Adt46 { fld0: _12.fld0,fld1: _5,fld2: _2,fld3: _6 };
_9.fld3 = [27131_u16,33975_u16,50654_u16,9100_u16,15081_u16,17998_u16,37596_u16,48283_u16];
Goto(bb1)
}
bb1 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8.fld1 = _3;
RET = [(-3109705391254083963_i64),(-122836703464070884_i64),(-5844071995352683810_i64),(-8134520217527814681_i64),322701956521627945_i64,4050813736624871331_i64];
_4 = [35356_u16,5412_u16,45137_u16,45387_u16,50209_u16,4801_u16,25610_u16,11023_u16];
_18 = _16;
match _16 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb3 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_8.fld3 = [44954_u16,55611_u16,61916_u16,11046_u16,21517_u16,37103_u16,42903_u16,9493_u16];
_16 = _18;
_17 = _12.fld2 as f64;
_12.fld1 = [27045383033866344941580068773525804218_u128,39696929037856894015801597380413194635_u128];
_8 = Adt46 { fld0: _12.fld0,fld1: _12.fld1,fld2: _12.fld2,fld3: _9.fld3 };
_13 = _9.fld3;
_7 = [8769_u16,43200_u16,30274_u16,12222_u16,34398_u16,43802_u16,10006_u16,59433_u16];
_6 = _8.fld3;
_5 = [152674961308974802849024833337988326741_u128,165702976128840290147974164001565969414_u128];
_12.fld0 = [3641175710230637284_i64,5307204259045873885_i64,(-2500654172797794816_i64),(-8335150620343492818_i64),(-6810677657039695601_i64),(-2279844775882418670_i64)];
_9.fld3 = _7;
_1 = _6;
_4 = [20914_u16,9932_u16,57651_u16,38664_u16,9913_u16,5871_u16,59814_u16,24453_u16];
_10 = [27382_u16,34683_u16,16762_u16,63345_u16,3775_u16,28727_u16,50230_u16,63127_u16];
RET = _12.fld0;
_9.fld2 = _12.fld2;
_6 = [3251_u16,4750_u16,7402_u16,47960_u16,64311_u16,20778_u16,12263_u16,19738_u16];
_20.0 = '\u{fc8c5}' as u32;
_8 = _9;
_20 = (3225611894_u32,);
_8.fld1 = _12.fld1;
_9 = Adt46 { fld0: RET,fld1: _8.fld1,fld2: _12.fld2,fld3: _12.fld3 };
_12 = _9;
_17 = 44599_u16 as f64;
_16 = _18;
Call(_17 = fn3(_9, _11, _12, _9.fld0, _13, _8.fld2, _8.fld1, _10, _8, _4, _12.fld3, _8.fld2, _8.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_19 = !_14;
Goto(bb6)
}
bb6 = {
_12.fld2 = _9.fld2;
_13 = [23460_u16,37347_u16,13560_u16,45417_u16,50260_u16,26991_u16,59875_u16,29814_u16];
_3 = [181337815567326816391646911621311067389_u128,37090851966676052395280160666036904275_u128];
_22 = -_17;
_13 = [56284_u16,54243_u16,51405_u16,58358_u16,25180_u16,59825_u16,58312_u16,21665_u16];
_8.fld3 = [32429_u16,42268_u16,19606_u16,48442_u16,23223_u16,9909_u16,62265_u16,57813_u16];
_8.fld1 = _9.fld1;
_12.fld3 = _13;
_4 = [32580_u16,56982_u16,44614_u16,45011_u16,65076_u16,32962_u16,62448_u16,46799_u16];
match _16 {
0 => bb4,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb7 = {
_19 = !_14;
Goto(bb6)
}
bb8 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_8.fld1 = _3;
RET = [(-3109705391254083963_i64),(-122836703464070884_i64),(-5844071995352683810_i64),(-8134520217527814681_i64),322701956521627945_i64,4050813736624871331_i64];
_4 = [35356_u16,5412_u16,45137_u16,45387_u16,50209_u16,4801_u16,25610_u16,11023_u16];
_18 = _16;
match _16 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb11 = {
_23 = 7555_i16 >> _2;
_7 = [8489_u16,28023_u16,53491_u16,55619_u16,39348_u16,5597_u16,53526_u16,11692_u16];
_9.fld3 = _12.fld3;
match _20.0 {
0 => bb6,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
3225611894 => bb19,
_ => bb18
}
}
bb12 = {
_8.fld1 = _3;
RET = [(-3109705391254083963_i64),(-122836703464070884_i64),(-5844071995352683810_i64),(-8134520217527814681_i64),322701956521627945_i64,4050813736624871331_i64];
_4 = [35356_u16,5412_u16,45137_u16,45387_u16,50209_u16,4801_u16,25610_u16,11023_u16];
_18 = _16;
match _16 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb13 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_8.fld1 = _3;
RET = [(-3109705391254083963_i64),(-122836703464070884_i64),(-5844071995352683810_i64),(-8134520217527814681_i64),322701956521627945_i64,4050813736624871331_i64];
_4 = [35356_u16,5412_u16,45137_u16,45387_u16,50209_u16,4801_u16,25610_u16,11023_u16];
_18 = _16;
match _16 {
0 => bb1,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb16 = {
_12.fld2 = _9.fld2;
_13 = [23460_u16,37347_u16,13560_u16,45417_u16,50260_u16,26991_u16,59875_u16,29814_u16];
_3 = [181337815567326816391646911621311067389_u128,37090851966676052395280160666036904275_u128];
_22 = -_17;
_13 = [56284_u16,54243_u16,51405_u16,58358_u16,25180_u16,59825_u16,58312_u16,21665_u16];
_8.fld3 = [32429_u16,42268_u16,19606_u16,48442_u16,23223_u16,9909_u16,62265_u16,57813_u16];
_8.fld1 = _9.fld1;
_12.fld3 = _13;
_4 = [32580_u16,56982_u16,44614_u16,45011_u16,65076_u16,32962_u16,62448_u16,46799_u16];
match _16 {
0 => bb4,
1 => bb2,
2 => bb5,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb17 = {
_7 = [39770_u16,32985_u16,39249_u16,35826_u16,41615_u16,21784_u16,46886_u16,21535_u16];
_10 = _13;
_2 = _12.fld2 - _8.fld2;
_8.fld2 = !_9.fld2;
RET = _12.fld0;
_16 = (-9223372036854775808_isize);
_18 = !_16;
_17 = 906068559500207420_i64 as f64;
_18 = _16;
_2 = _8.fld2;
_6 = _9.fld3;
_9.fld2 = _8.fld2 ^ _8.fld2;
_9.fld3 = [27150_u16,26698_u16,61916_u16,57419_u16,3970_u16,48495_u16,63476_u16,8521_u16];
Call(_12.fld2 = core::intrinsics::transmute(_7), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_8.fld3 = [44954_u16,55611_u16,61916_u16,11046_u16,21517_u16,37103_u16,42903_u16,9493_u16];
_16 = _18;
_17 = _12.fld2 as f64;
_12.fld1 = [27045383033866344941580068773525804218_u128,39696929037856894015801597380413194635_u128];
_8 = Adt46 { fld0: _12.fld0,fld1: _12.fld1,fld2: _12.fld2,fld3: _9.fld3 };
_13 = _9.fld3;
_7 = [8769_u16,43200_u16,30274_u16,12222_u16,34398_u16,43802_u16,10006_u16,59433_u16];
_6 = _8.fld3;
_5 = [152674961308974802849024833337988326741_u128,165702976128840290147974164001565969414_u128];
_12.fld0 = [3641175710230637284_i64,5307204259045873885_i64,(-2500654172797794816_i64),(-8335150620343492818_i64),(-6810677657039695601_i64),(-2279844775882418670_i64)];
_9.fld3 = _7;
_1 = _6;
_4 = [20914_u16,9932_u16,57651_u16,38664_u16,9913_u16,5871_u16,59814_u16,24453_u16];
_10 = [27382_u16,34683_u16,16762_u16,63345_u16,3775_u16,28727_u16,50230_u16,63127_u16];
RET = _12.fld0;
_9.fld2 = _12.fld2;
_6 = [3251_u16,4750_u16,7402_u16,47960_u16,64311_u16,20778_u16,12263_u16,19738_u16];
_20.0 = '\u{fc8c5}' as u32;
_8 = _9;
_20 = (3225611894_u32,);
_8.fld1 = _12.fld1;
_9 = Adt46 { fld0: RET,fld1: _8.fld1,fld2: _12.fld2,fld3: _12.fld3 };
_12 = _9;
_17 = 44599_u16 as f64;
_16 = _18;
Call(_17 = fn3(_9, _11, _12, _9.fld0, _13, _8.fld2, _8.fld1, _10, _8, _4, _12.fld3, _8.fld2, _8.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb19 = {
_9.fld2 = !_2;
_18 = !_16;
_7 = _8.fld3;
_24 = _17 + _22;
_19 = _14 | _14;
_21 = [7_usize,13531575554100805688_usize,1_usize,2875904300157534070_usize,0_usize,1_usize,6757938619931471293_usize];
_25 = _12.fld2 as f32;
_26.fld3 = _7;
_26 = Adt46 { fld0: _12.fld0,fld1: _9.fld1,fld2: _8.fld2,fld3: _12.fld3 };
_23 = !19701_i16;
_8.fld1 = _9.fld1;
_8 = Adt46 { fld0: _26.fld0,fld1: _12.fld1,fld2: _12.fld2,fld3: _12.fld3 };
_16 = _18 | _18;
_25 = (-354418342_i32) as f32;
_8.fld2 = _12.fld2;
_18 = !_16;
_16 = -_18;
Goto(bb20)
}
bb20 = {
Call(_30 = dump_var(2_usize, 7_usize, Move(_7), 5_usize, Move(_5), 6_usize, Move(_6), 14_usize, Move(_14)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_30 = dump_var(2_usize, 11_usize, Move(_11), 10_usize, Move(_10), 4_usize, Move(_4), 19_usize, Move(_19)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: Adt46,mut _2: [u16; 8],mut _3: Adt46,mut _4: [i64; 6],mut _5: [u16; 8],mut _6: i128,mut _7: [u128; 2],mut _8: [u16; 8],mut _9: Adt46,mut _10: [u16; 8],mut _11: [u16; 8],mut _12: i128,mut _13: [i64; 6]) -> f64 {
mir! {
type RET = f64;
let _14: (char, *mut [i8; 7], i16);
let _15: isize;
let _16: Adt43;
let _17: Adt45;
let _18: f64;
let _19: i32;
let _20: [usize; 7];
let _21: (i64, (char, *mut [i8; 7], i16), (i64,), u8);
let _22: [usize; 7];
let _23: [i8; 7];
let _24: i32;
let _25: isize;
let _26: i16;
let _27: [u128; 2];
let _28: ();
let _29: ();
{
RET = (-4745_i16) as f64;
_13 = [5196193341443016_i64,(-5052531676050391908_i64),2086748790328378852_i64,5487570523565718397_i64,7493746387439524524_i64,2073181370410560933_i64];
_6 = _9.fld2 ^ _3.fld2;
_9.fld3 = [34462_u16,16671_u16,57777_u16,9648_u16,8944_u16,38238_u16,61246_u16,20923_u16];
_3.fld2 = true as i128;
_3 = _9;
_3.fld2 = _12;
_3.fld3 = [50707_u16,5932_u16,18143_u16,22694_u16,53690_u16,30389_u16,12588_u16,58822_u16];
_7 = _1.fld1;
_2 = [58837_u16,36979_u16,10859_u16,9408_u16,40147_u16,11724_u16,26606_u16,63164_u16];
_9 = Adt46 { fld0: _13,fld1: _1.fld1,fld2: _6,fld3: _2 };
_4 = [2243189963972594627_i64,(-5544038378140651193_i64),7593244701538649406_i64,(-1066698051865171656_i64),(-8346130463885241262_i64),(-8782960182590002375_i64)];
_9.fld2 = _1.fld2;
_9.fld1 = [113697110405366394424655568606112740553_u128,269105391285674637639129965514119046863_u128];
Call(_10 = fn4(_3.fld2, _9, _11, _1.fld3, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [19658_u16,49849_u16,59953_u16,60441_u16,25532_u16,5146_u16,29430_u16,12430_u16];
_10 = [60459_u16,23204_u16,23277_u16,63999_u16,32786_u16,4783_u16,33876_u16,38209_u16];
_9.fld0 = _1.fld0;
_12 = _9.fld2 ^ _1.fld2;
_9.fld0 = [6657859631185364497_i64,(-3717722379170048228_i64),8440784566142009351_i64,(-1035722112968267534_i64),(-7195309725579266530_i64),(-8667225823919754586_i64)];
_9.fld1 = _7;
_9.fld0 = [(-2506041989120836000_i64),(-1599103735947706108_i64),(-1108747125813649883_i64),(-7514431090976544756_i64),(-3830369144011555434_i64),(-6966869194350443426_i64)];
_9 = _3;
_15 = (-121_isize);
_16.fld0.0 = '\u{38e18}';
_3.fld2 = _6;
_9 = Adt46 { fld0: _4,fld1: _1.fld1,fld2: _6,fld3: _3.fld3 };
_16.fld2 = 4207611000996161070_usize;
_16.fld2 = _6 as usize;
_16.fld0.2 = 10725_i16;
_1.fld0 = [7209095328082515295_i64,4664379658162632243_i64,5728882160286087567_i64,(-4010805826914116263_i64),(-5808253562753872498_i64),8140033241130005840_i64];
_14.0 = _16.fld0.0;
RET = 196448027402971374292252008391873726790_u128 as f64;
_6 = !_12;
_14.0 = _16.fld0.0;
_13 = _4;
Goto(bb2)
}
bb2 = {
_3.fld0 = _4;
_16.fld2 = 6_usize * 1_usize;
_3.fld1 = [329764363354808706479184121811078561641_u128,259842017691806928055721034826276043582_u128];
_17 = Adt45::Variant1 { fld0: _3.fld3 };
_16.fld1 = [34361_u16,52570_u16,41210_u16,59139_u16,64203_u16,51675_u16,11422_u16,51721_u16];
_9.fld3 = [18212_u16,34958_u16,47043_u16,16422_u16,34175_u16,37174_u16,57907_u16,46103_u16];
_21.1.2 = -_16.fld0.2;
_21.2 = (3501570552282012801_i64,);
_21.3 = 17719209423574596853_u64 as u8;
_18 = RET;
_3 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _5 };
_1.fld2 = _3.fld2 * _3.fld2;
_20 = [_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2];
_19 = (-2091027235_i32) & 571903305_i32;
_1.fld1 = _9.fld1;
_16.fld0.2 = _21.1.2;
_6 = _9.fld2 - _9.fld2;
_14.1 = core::ptr::addr_of_mut!(_23);
_9.fld2 = _12;
_9.fld3 = [26092_u16,61981_u16,38506_u16,36067_u16,19588_u16,50107_u16,22029_u16,57278_u16];
Goto(bb3)
}
bb3 = {
_16.fld2 = 7545497557590845458_usize | 10537630848356349963_usize;
_11 = Field::<[u16; 8]>(Variant(_17, 1), 0);
_4 = _9.fld0;
_21.1.1 = core::ptr::addr_of_mut!(_23);
_16.fld1 = [29069_u16,54736_u16,40264_u16,33992_u16,25259_u16,17078_u16,45159_u16,42465_u16];
_16.fld2 = !7346931194750301368_usize;
_22 = _20;
_14.1 = core::ptr::addr_of_mut!(_23);
_1.fld1 = [119602136243681125259203993127024847552_u128,247862751007156136824445544417244264879_u128];
_5 = [24171_u16,52359_u16,55310_u16,11814_u16,16499_u16,2855_u16,34405_u16,17453_u16];
_1.fld0 = _9.fld0;
_16.fld1 = _10;
_16.fld0.0 = _14.0;
SetDiscriminant(_17, 0);
_9.fld3 = _16.fld1;
_16.fld0.1 = core::ptr::addr_of_mut!(_23);
_3.fld3 = [17915_u16,12021_u16,22387_u16,33126_u16,38510_u16,39715_u16,8829_u16,846_u16];
match _15 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607431768211335 => bb9,
_ => bb8
}
}
bb4 = {
_3.fld0 = _4;
_16.fld2 = 6_usize * 1_usize;
_3.fld1 = [329764363354808706479184121811078561641_u128,259842017691806928055721034826276043582_u128];
_17 = Adt45::Variant1 { fld0: _3.fld3 };
_16.fld1 = [34361_u16,52570_u16,41210_u16,59139_u16,64203_u16,51675_u16,11422_u16,51721_u16];
_9.fld3 = [18212_u16,34958_u16,47043_u16,16422_u16,34175_u16,37174_u16,57907_u16,46103_u16];
_21.1.2 = -_16.fld0.2;
_21.2 = (3501570552282012801_i64,);
_21.3 = 17719209423574596853_u64 as u8;
_18 = RET;
_3 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _5 };
_1.fld2 = _3.fld2 * _3.fld2;
_20 = [_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2];
_19 = (-2091027235_i32) & 571903305_i32;
_1.fld1 = _9.fld1;
_16.fld0.2 = _21.1.2;
_6 = _9.fld2 - _9.fld2;
_14.1 = core::ptr::addr_of_mut!(_23);
_9.fld2 = _12;
_9.fld3 = [26092_u16,61981_u16,38506_u16,36067_u16,19588_u16,50107_u16,22029_u16,57278_u16];
Goto(bb3)
}
bb5 = {
_2 = [19658_u16,49849_u16,59953_u16,60441_u16,25532_u16,5146_u16,29430_u16,12430_u16];
_10 = [60459_u16,23204_u16,23277_u16,63999_u16,32786_u16,4783_u16,33876_u16,38209_u16];
_9.fld0 = _1.fld0;
_12 = _9.fld2 ^ _1.fld2;
_9.fld0 = [6657859631185364497_i64,(-3717722379170048228_i64),8440784566142009351_i64,(-1035722112968267534_i64),(-7195309725579266530_i64),(-8667225823919754586_i64)];
_9.fld1 = _7;
_9.fld0 = [(-2506041989120836000_i64),(-1599103735947706108_i64),(-1108747125813649883_i64),(-7514431090976544756_i64),(-3830369144011555434_i64),(-6966869194350443426_i64)];
_9 = _3;
_15 = (-121_isize);
_16.fld0.0 = '\u{38e18}';
_3.fld2 = _6;
_9 = Adt46 { fld0: _4,fld1: _1.fld1,fld2: _6,fld3: _3.fld3 };
_16.fld2 = 4207611000996161070_usize;
_16.fld2 = _6 as usize;
_16.fld0.2 = 10725_i16;
_1.fld0 = [7209095328082515295_i64,4664379658162632243_i64,5728882160286087567_i64,(-4010805826914116263_i64),(-5808253562753872498_i64),8140033241130005840_i64];
_14.0 = _16.fld0.0;
RET = 196448027402971374292252008391873726790_u128 as f64;
_6 = !_12;
_14.0 = _16.fld0.0;
_13 = _4;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_10 = _16.fld1;
Call(_9.fld0 = core::intrinsics::transmute(_13), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
match _15 {
0 => bb6,
1 => bb8,
2 => bb11,
3 => bb12,
340282366920938463463374607431768211335 => bb14,
_ => bb13
}
}
bb11 = {
_3.fld0 = _4;
_16.fld2 = 6_usize * 1_usize;
_3.fld1 = [329764363354808706479184121811078561641_u128,259842017691806928055721034826276043582_u128];
_17 = Adt45::Variant1 { fld0: _3.fld3 };
_16.fld1 = [34361_u16,52570_u16,41210_u16,59139_u16,64203_u16,51675_u16,11422_u16,51721_u16];
_9.fld3 = [18212_u16,34958_u16,47043_u16,16422_u16,34175_u16,37174_u16,57907_u16,46103_u16];
_21.1.2 = -_16.fld0.2;
_21.2 = (3501570552282012801_i64,);
_21.3 = 17719209423574596853_u64 as u8;
_18 = RET;
_3 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _5 };
_1.fld2 = _3.fld2 * _3.fld2;
_20 = [_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2,_16.fld2];
_19 = (-2091027235_i32) & 571903305_i32;
_1.fld1 = _9.fld1;
_16.fld0.2 = _21.1.2;
_6 = _9.fld2 - _9.fld2;
_14.1 = core::ptr::addr_of_mut!(_23);
_9.fld2 = _12;
_9.fld3 = [26092_u16,61981_u16,38506_u16,36067_u16,19588_u16,50107_u16,22029_u16,57278_u16];
Goto(bb3)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_21.1.2 = 14631_u16 as i16;
_21.1.1 = core::ptr::addr_of_mut!(_23);
_24 = 217231466309034604954579327497671589705_u128 as i32;
_16.fld2 = true as usize;
_14.0 = _16.fld0.0;
_6 = 1141327758_u32 as i128;
_25 = _21.1.2 as isize;
_21.0 = _16.fld0.0 as i64;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(3_usize, 25_usize, Move(_25), 12_usize, Move(_12), 13_usize, Move(_13), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(3_usize, 5_usize, Move(_5), 19_usize, Move(_19), 20_usize, Move(_20), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: i128,mut _2: Adt46,mut _3: [u16; 8],mut _4: [u16; 8],mut _5: [u16; 8]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _6: f32;
let _7: *mut u16;
let _8: bool;
let _9: [u128; 2];
let _10: [i128; 6];
let _11: Adt59;
let _12: ([i8; 7], [i64; 6]);
let _13: i32;
let _14: isize;
let _15: Adt56;
let _16: [char; 6];
let _17: (u32,);
let _18: Adt51;
let _19: isize;
let _20: (f64, i8, [usize; 7], usize, i8);
let _21: [i128; 6];
let _22: (i64,);
let _23: *mut u16;
let _24: i8;
let _25: isize;
let _26: f32;
let _27: (i64, (char, *mut [i8; 7], i16), (i64,), u8);
let _28: ();
let _29: ();
{
_6 = 2694998413_u32 as f32;
_6 = (-615349695247693332_i64) as f32;
_4 = [63599_u16,3501_u16,21645_u16,34069_u16,45922_u16,40764_u16,39758_u16,2353_u16];
_3 = [56017_u16,32385_u16,60_u16,61164_u16,14766_u16,34328_u16,34911_u16,33092_u16];
RET = [50181_u16,3140_u16,59579_u16,48341_u16,48313_u16,52514_u16,13417_u16,38226_u16];
RET = _5;
_6 = 1444119613_u32 as f32;
_2.fld1 = [57527878360381999336997969742262172446_u128,128197417447679856127175571579424776694_u128];
_2.fld3 = [24346_u16,53610_u16,50365_u16,32931_u16,5996_u16,35104_u16,44632_u16,7857_u16];
_2.fld1 = [273350512512476394783246464123674850774_u128,237696651563456473518414313187074261518_u128];
_2.fld2 = _1;
_3 = _2.fld3;
_2.fld1 = [54461437661858681883656056677503066240_u128,95494845850913370419323282067438310727_u128];
_4 = [39627_u16,43387_u16,12128_u16,62289_u16,19150_u16,65166_u16,32966_u16,61860_u16];
RET = [14001_u16,37636_u16,40519_u16,2732_u16,31889_u16,55874_u16,220_u16,19278_u16];
RET = _2.fld3;
_2.fld1 = [252032828364545961483920912861245353835_u128,188825091358175396745099109527988029058_u128];
RET = [9574_u16,52644_u16,35103_u16,15098_u16,40469_u16,17630_u16,47715_u16,21250_u16];
_4 = [2691_u16,15444_u16,64215_u16,9591_u16,6810_u16,27233_u16,30752_u16,20177_u16];
_1 = 17690351011573668440_usize as i128;
_3 = [3002_u16,21907_u16,32505_u16,55369_u16,43727_u16,14786_u16,1048_u16,7457_u16];
_5 = _2.fld3;
_4 = [42345_u16,7425_u16,27482_u16,19957_u16,19878_u16,34964_u16,24368_u16,27795_u16];
_8 = _2.fld2 > _2.fld2;
_3 = [59336_u16,14699_u16,40651_u16,26032_u16,18842_u16,15687_u16,10902_u16,15456_u16];
_4 = [47641_u16,28666_u16,33812_u16,63530_u16,60388_u16,37420_u16,51147_u16,63759_u16];
_1 = !_2.fld2;
_2.fld0 = [(-2291404436224438804_i64),2968926504180958100_i64,2401328368456083380_i64,9102762033482388430_i64,5836960713318349633_i64,(-8477552867488896403_i64)];
_4 = [9186_u16,17289_u16,3280_u16,22146_u16,21601_u16,64522_u16,60913_u16,12541_u16];
Call(_6 = fn5(_1, _8, _5, _8, _2.fld2, _8, _8, _3, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2.fld0 = [(-2803336742746592823_i64),(-125176131107915721_i64),5512823352964364447_i64,2404604827654695702_i64,(-141164398272991020_i64),(-1942635824780398179_i64)];
_3 = [61427_u16,33633_u16,32530_u16,13297_u16,61565_u16,48450_u16,4411_u16,7739_u16];
_10 = [_2.fld2,_1,_1,_1,_2.fld2,_2.fld2];
_9 = [2112497137727857571211997339353133277_u128,279482861666168431200368413285451729423_u128];
_9 = [120642238928749613226571391889755039024_u128,131533191179375166421728675983255297962_u128];
RET = [43381_u16,8313_u16,376_u16,15460_u16,27482_u16,21740_u16,19474_u16,10978_u16];
_5 = _4;
Goto(bb2)
}
bb2 = {
_2.fld1 = _9;
_4 = _2.fld3;
_2.fld2 = _6 as i128;
_1 = _2.fld2;
_3 = [318_u16,40690_u16,28830_u16,23352_u16,36375_u16,11146_u16,58406_u16,29928_u16];
RET = _2.fld3;
_5 = [37895_u16,29836_u16,44678_u16,23994_u16,58353_u16,10322_u16,25902_u16,54833_u16];
_2.fld0 = [(-7021323649376158060_i64),3152777783940651526_i64,(-1139924029786200055_i64),(-8174339298447766218_i64),(-8185817217052245694_i64),1706738171324889544_i64];
_13 = (-1975723861_i32);
_14 = (-2036_i16) as isize;
_1 = _2.fld2;
_1 = !_2.fld2;
_6 = 2340276790_u32 as f32;
_8 = !true;
_14 = (-6451639010229936557_i64) as isize;
_3 = [3040_u16,31247_u16,52162_u16,8297_u16,53945_u16,53745_u16,11701_u16,16076_u16];
_10 = [_2.fld2,_1,_2.fld2,_1,_2.fld2,_1];
_12.0 = [(-100_i8),(-102_i8),(-46_i8),72_i8,92_i8,44_i8,33_i8];
_17.0 = !1214370996_u32;
_1 = _2.fld2 | _2.fld2;
_2.fld0 = [(-2294796274805638125_i64),5497143795551133319_i64,(-7214236918531805607_i64),(-8173359781108851922_i64),5965361608213075844_i64,(-3780564710138759096_i64)];
Goto(bb3)
}
bb3 = {
_8 = !false;
_13 = (-1640699448_i32) - (-1689150889_i32);
_2.fld1 = _9;
_17 = (8268206_u32,);
_5 = _2.fld3;
_12.1 = _2.fld0;
_1 = _2.fld2;
RET = [25146_u16,5912_u16,54095_u16,55066_u16,4516_u16,21087_u16,24524_u16,43608_u16];
_12.0 = [65_i8,(-122_i8),(-1_i8),3_i8,(-76_i8),(-44_i8),112_i8];
Call(_9 = fn7(_17.0, _12.0, _2, _2, _10, _3, RET, _2.fld2, _1, _2.fld0, _1, _2.fld0, _2, _4, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_20.4 = 43_i8 >> _2.fld2;
_9 = _2.fld1;
_12.0 = [_20.4,_20.4,_20.4,_20.4,_20.4,_20.4,_20.4];
_1 = -_2.fld2;
Goto(bb5)
}
bb5 = {
_20.2 = [0_usize,6_usize,5304320845638873494_usize,5_usize,16339152168174188144_usize,1_usize,5504175879541691627_usize];
RET = _4;
_19 = 107_u8 as isize;
_20.4 = (-55_i8);
_20.2 = [3_usize,4785442845485530504_usize,0_usize,1_usize,6_usize,14132127167271029271_usize,0_usize];
_2.fld2 = _1 & _1;
_2 = Adt46 { fld0: _12.1,fld1: _9,fld2: _1,fld3: _4 };
_14 = _19 - _19;
_8 = !false;
_20.2 = [1112980962325556975_usize,5_usize,1005095086476842595_usize,0_usize,2_usize,1_usize,11093201096272632070_usize];
_22 = (7119624642824067478_i64,);
_22.0 = 7076162040869614963_i64 & 5429598598171449190_i64;
_10 = [_1,_2.fld2,_1,_2.fld2,_1,_1];
_20.1 = _20.4;
_9 = [112708934389011632925760816273957454979_u128,295921538896985880077130718703600215737_u128];
_22.0 = (-1247328151317659383_i64);
_5 = [29962_u16,7382_u16,13245_u16,35089_u16,34628_u16,37213_u16,47015_u16,31403_u16];
_20.3 = 2_usize | 6_usize;
_17.0 = 2307383265_u32;
_20.0 = 16628_u16 as f64;
RET = [1219_u16,19725_u16,64560_u16,5397_u16,23743_u16,62786_u16,9669_u16,4786_u16];
_8 = false | false;
_21 = [_2.fld2,_1,_2.fld2,_1,_1,_1];
RET = _5;
match _22.0 {
0 => bb4,
1 => bb3,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
340282366920938463462127279280450552073 => bb12,
_ => bb11
}
}
bb6 = {
_20.4 = 43_i8 >> _2.fld2;
_9 = _2.fld1;
_12.0 = [_20.4,_20.4,_20.4,_20.4,_20.4,_20.4,_20.4];
_1 = -_2.fld2;
Goto(bb5)
}
bb7 = {
_8 = !false;
_13 = (-1640699448_i32) - (-1689150889_i32);
_2.fld1 = _9;
_17 = (8268206_u32,);
_5 = _2.fld3;
_12.1 = _2.fld0;
_1 = _2.fld2;
RET = [25146_u16,5912_u16,54095_u16,55066_u16,4516_u16,21087_u16,24524_u16,43608_u16];
_12.0 = [65_i8,(-122_i8),(-1_i8),3_i8,(-76_i8),(-44_i8),112_i8];
Call(_9 = fn7(_17.0, _12.0, _2, _2, _10, _3, RET, _2.fld2, _1, _2.fld0, _1, _2.fld0, _2, _4, _5), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_2.fld1 = _9;
_4 = _2.fld3;
_2.fld2 = _6 as i128;
_1 = _2.fld2;
_3 = [318_u16,40690_u16,28830_u16,23352_u16,36375_u16,11146_u16,58406_u16,29928_u16];
RET = _2.fld3;
_5 = [37895_u16,29836_u16,44678_u16,23994_u16,58353_u16,10322_u16,25902_u16,54833_u16];
_2.fld0 = [(-7021323649376158060_i64),3152777783940651526_i64,(-1139924029786200055_i64),(-8174339298447766218_i64),(-8185817217052245694_i64),1706738171324889544_i64];
_13 = (-1975723861_i32);
_14 = (-2036_i16) as isize;
_1 = _2.fld2;
_1 = !_2.fld2;
_6 = 2340276790_u32 as f32;
_8 = !true;
_14 = (-6451639010229936557_i64) as isize;
_3 = [3040_u16,31247_u16,52162_u16,8297_u16,53945_u16,53745_u16,11701_u16,16076_u16];
_10 = [_2.fld2,_1,_2.fld2,_1,_2.fld2,_1];
_12.0 = [(-100_i8),(-102_i8),(-46_i8),72_i8,92_i8,44_i8,33_i8];
_17.0 = !1214370996_u32;
_1 = _2.fld2 | _2.fld2;
_2.fld0 = [(-2294796274805638125_i64),5497143795551133319_i64,(-7214236918531805607_i64),(-8173359781108851922_i64),5965361608213075844_i64,(-3780564710138759096_i64)];
Goto(bb3)
}
bb9 = {
_2.fld0 = [(-2803336742746592823_i64),(-125176131107915721_i64),5512823352964364447_i64,2404604827654695702_i64,(-141164398272991020_i64),(-1942635824780398179_i64)];
_3 = [61427_u16,33633_u16,32530_u16,13297_u16,61565_u16,48450_u16,4411_u16,7739_u16];
_10 = [_2.fld2,_1,_1,_1,_2.fld2,_2.fld2];
_9 = [2112497137727857571211997339353133277_u128,279482861666168431200368413285451729423_u128];
_9 = [120642238928749613226571391889755039024_u128,131533191179375166421728675983255297962_u128];
RET = [43381_u16,8313_u16,376_u16,15460_u16,27482_u16,21740_u16,19474_u16,10978_u16];
_5 = _4;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET = _5;
_2 = Adt46 { fld0: _12.1,fld1: _9,fld2: _1,fld3: RET };
_24 = _2.fld2 as i8;
_20.1 = !_24;
_22.0 = 5805553817880374294_i64 + (-1000636154296438248_i64);
_2.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_20.0 = _17.0 as f64;
_9 = [84319996633624281283208456277015860567_u128,125383812252152918102927980609614143534_u128];
_1 = !_2.fld2;
_1 = _20.3 as i128;
_20.3 = 5_usize << _19;
Call(_21 = core::intrinsics::transmute(_10), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_13 = 20642_u16 as i32;
_13 = (-617582517_i32);
_21 = _10;
_20.4 = 5831_i16 as i8;
_20.1 = -_24;
_8 = false & false;
Goto(bb14)
}
bb14 = {
_17 = (4275282234_u32,);
_27.2 = (_22.0,);
_2.fld1 = [134398633827922303665747715818929228336_u128,306892679540909098371355339145586630735_u128];
_20.1 = _8 as i8;
_24 = _20.0 as i8;
_22 = (_27.2.0,);
_20.4 = _14 as i8;
_27.1.0 = '\u{f68fe}';
_16 = [_27.1.0,_27.1.0,_27.1.0,_27.1.0,_27.1.0,_27.1.0];
_21 = [_2.fld2,_1,_2.fld2,_2.fld2,_2.fld2,_2.fld2];
_8 = true;
_27.1.1 = core::ptr::addr_of_mut!(_12.0);
_22.0 = _27.2.0 << _2.fld2;
_13 = !(-27659783_i32);
_2.fld0 = _12.1;
_26 = _6 - _6;
_27.3 = !192_u8;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(4_usize, 1_usize, Move(_1), 9_usize, Move(_9), 10_usize, Move(_10), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(4_usize, 14_usize, Move(_14), 24_usize, Move(_24), 22_usize, Move(_22), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: i128,mut _2: bool,mut _3: [u16; 8],mut _4: bool,mut _5: i128,mut _6: bool,mut _7: bool,mut _8: [u16; 8],mut _9: Adt46) -> f32 {
mir! {
type RET = f32;
let _10: isize;
let _11: [u128; 2];
let _12: f32;
let _13: (u32,);
let _14: [bool; 6];
let _15: i64;
let _16: Adt53;
let _17: bool;
let _18: isize;
let _19: Adt47;
let _20: i32;
let _21: u32;
let _22: bool;
let _23: isize;
let _24: (u128,);
let _25: isize;
let _26: [usize; 7];
let _27: ();
let _28: ();
{
RET = 38073_u16 as f32;
_9.fld1 = [189145366452144162252134925752728430189_u128,315438358300894785486899482319191348906_u128];
_9.fld3 = [6992_u16,12350_u16,15416_u16,26228_u16,64774_u16,4178_u16,8961_u16,45388_u16];
_10 = 3_isize * (-81_isize);
_3 = [24397_u16,24773_u16,12318_u16,36895_u16,62493_u16,47573_u16,8593_u16,7508_u16];
_6 = !_7;
RET = _10 as f32;
_12 = 23225_i16 as f32;
_11 = [272545106258281000562990915946539617186_u128,237733784028573432638919643571335811518_u128];
RET = _12;
_13.0 = 3967065419_u32;
_13.0 = 2485927735_u32;
_9.fld3 = [12649_u16,44678_u16,4153_u16,4753_u16,55007_u16,4316_u16,52973_u16,3615_u16];
_6 = _4 >= _7;
Call(_10 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = _1 >= _5;
_11 = [184498946314322261201773750543258727122_u128,17485820629278855684672392737549856849_u128];
_8 = [15989_u16,18488_u16,20961_u16,20121_u16,26770_u16,45405_u16,47418_u16,8997_u16];
_9.fld3 = _3;
_14 = [_7,_6,_6,_6,_6,_2];
_15 = _9.fld2 as i64;
_9.fld3 = _8;
_15 = _10 as i64;
_9.fld3 = [43015_u16,43084_u16,32352_u16,25724_u16,17687_u16,24205_u16,30772_u16,21180_u16];
_1 = _9.fld2;
_6 = !_4;
_10 = (-9223372036854775808_isize);
_4 = _7 <= _7;
_9.fld0 = [_15,_15,_15,_15,_15,_15];
RET = _12;
_1 = 22562_i16 as i128;
_4 = _7;
_13.0 = !987446608_u32;
_8 = [17779_u16,16393_u16,57188_u16,33935_u16,48251_u16,6674_u16,60024_u16,52386_u16];
_11 = _9.fld1;
_9.fld3 = [39453_u16,50242_u16,24754_u16,14762_u16,12552_u16,45030_u16,16292_u16,16758_u16];
RET = _15 as f32;
_2 = _7;
_9.fld1 = [78535275315448014878864740609407179447_u128,73374236317125863128030746667264566074_u128];
Call(_9.fld3 = core::intrinsics::transmute(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13.0 = !302598489_u32;
_13 = (538648033_u32,);
_9.fld1 = [9231087803657132169457455994007212806_u128,241496893741099614991799810282405743715_u128];
RET = _12 + _12;
RET = _12;
_13 = (887726832_u32,);
_11 = _9.fld1;
_11 = [242434541503408979429518980957197917401_u128,270589731269773545481385043604222806789_u128];
_8 = [24466_u16,8856_u16,5707_u16,17231_u16,50417_u16,13706_u16,48213_u16,52594_u16];
_9.fld1 = _11;
_9.fld0 = [_15,_15,_15,_15,_15,_15];
_9.fld2 = _1 & _5;
_4 = !_6;
_4 = _9.fld2 <= _5;
_1 = _5 | _5;
_18 = _10;
_7 = _6;
_17 = _4;
_14 = [_6,_7,_17,_2,_2,_2];
_5 = _13.0 as i128;
_9.fld0 = [_15,_15,_15,_15,_15,_15];
_13 = (643656050_u32,);
Call(_9.fld2 = fn6(_1, _1, _9.fld3, _13.0, _7, _4, _2, _7, RET, _4, _17, _17), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = -_18;
_10 = -_18;
_8 = _9.fld3;
_4 = !_2;
_1 = _9.fld2;
_12 = RET + RET;
_1 = _9.fld2 | _9.fld2;
_13 = (3567812735_u32,);
_9.fld1 = _11;
_21 = _13.0;
_15 = 141_u8 as i64;
_13 = (_21,);
_2 = _4 ^ _4;
_21 = !_13.0;
_20 = 1988065829_i32 | 1909248813_i32;
_6 = _2;
_5 = _9.fld2;
_13 = (_21,);
_15 = (-4307477325734705759_i64);
_7 = _6 > _6;
_2 = _17 != _7;
_15 = 277508408485309214729086349538468654131_u128 as i64;
_9.fld2 = 6_usize as i128;
match _18 {
0 => bb1,
1 => bb2,
340282366920938463454151235394913435648 => bb5,
_ => bb4
}
}
bb4 = {
_6 = _1 >= _5;
_11 = [184498946314322261201773750543258727122_u128,17485820629278855684672392737549856849_u128];
_8 = [15989_u16,18488_u16,20961_u16,20121_u16,26770_u16,45405_u16,47418_u16,8997_u16];
_9.fld3 = _3;
_14 = [_7,_6,_6,_6,_6,_2];
_15 = _9.fld2 as i64;
_9.fld3 = _8;
_15 = _10 as i64;
_9.fld3 = [43015_u16,43084_u16,32352_u16,25724_u16,17687_u16,24205_u16,30772_u16,21180_u16];
_1 = _9.fld2;
_6 = !_4;
_10 = (-9223372036854775808_isize);
_4 = _7 <= _7;
_9.fld0 = [_15,_15,_15,_15,_15,_15];
RET = _12;
_1 = 22562_i16 as i128;
_4 = _7;
_13.0 = !987446608_u32;
_8 = [17779_u16,16393_u16,57188_u16,33935_u16,48251_u16,6674_u16,60024_u16,52386_u16];
_11 = _9.fld1;
_9.fld3 = [39453_u16,50242_u16,24754_u16,14762_u16,12552_u16,45030_u16,16292_u16,16758_u16];
RET = _15 as f32;
_2 = _7;
_9.fld1 = [78535275315448014878864740609407179447_u128,73374236317125863128030746667264566074_u128];
Call(_9.fld3 = core::intrinsics::transmute(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
_1 = _5 + _9.fld2;
RET = 307520077225080879761013745107580880848_u128 as f32;
_9.fld1 = _11;
_15 = _1 as i64;
_6 = !_7;
_9.fld1 = _11;
_12 = RET + RET;
_15 = RET as i64;
_15 = (-7716402691182255051_i64);
_4 = _7;
_9.fld1 = [127113409952130849268166682262475888484_u128,141636173436546284999126605841646863603_u128];
RET = _12;
_22 = _4 & _2;
_12 = RET;
_14 = [_7,_22,_2,_7,_22,_4];
_21 = RET as u32;
_3 = [17522_u16,40264_u16,62418_u16,12515_u16,2365_u16,59707_u16,34726_u16,40383_u16];
_18 = _10;
_4 = _2 | _22;
_2 = _22 == _7;
_21 = _17 as u32;
RET = _5 as f32;
_17 = _4 & _2;
_4 = _17;
_3 = _9.fld3;
_9.fld0 = [_15,_15,_15,_15,_15,_15];
_17 = _2;
Goto(bb6)
}
bb6 = {
Call(_27 = dump_var(5_usize, 18_usize, Move(_18), 3_usize, Move(_3), 17_usize, Move(_17), 20_usize, Move(_20)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_27 = dump_var(5_usize, 15_usize, Move(_15), 2_usize, Move(_2), 21_usize, Move(_21), 10_usize, Move(_10)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_27 = dump_var(5_usize, 6_usize, Move(_6), 28_usize, _28, 28_usize, _28, 28_usize, _28), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: i128,mut _2: i128,mut _3: [u16; 8],mut _4: u32,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: f32,mut _10: bool,mut _11: bool,mut _12: bool) -> i128 {
mir! {
type RET = i128;
let _13: isize;
let _14: [u16; 8];
let _15: i16;
let _16: Adt46;
let _17: ();
let _18: ();
{
RET = !_1;
_3 = [14214_u16,11233_u16,64457_u16,31181_u16,48557_u16,50655_u16,28937_u16,17528_u16];
RET = 170144901713710560864346016348175380773_u128 as i128;
_9 = 4478_u16 as f32;
_10 = _7;
_14 = _3;
_4 = !911921087_u32;
_13 = !(-9223372036854775808_isize);
_2 = !_1;
_2 = -_1;
RET = -_2;
_4 = !1056360971_u32;
_3 = [54945_u16,62169_u16,20605_u16,42960_u16,53235_u16,34662_u16,56410_u16,3050_u16];
_6 = !_12;
_16.fld0 = [4328206299615074544_i64,1203913864854711179_i64,(-4429984307515471733_i64),(-3553776752575857486_i64),7038703998335672573_i64,8432205048210064007_i64];
_13 = _9 as isize;
_16.fld0 = [6903572853010665927_i64,(-2356444596032069106_i64),(-4171901357934379771_i64),6247921202287192840_i64,(-1322526521188236457_i64),5880849724874961816_i64];
_3 = _14;
_7 = RET != _2;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(6_usize, 13_usize, Move(_13), 12_usize, Move(_12), 11_usize, Move(_11), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_17 = dump_var(6_usize, 4_usize, Move(_4), 5_usize, Move(_5), 18_usize, _18, 18_usize, _18), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: u32,mut _2: [i8; 7],mut _3: Adt46,mut _4: Adt46,mut _5: [i128; 6],mut _6: [u16; 8],mut _7: [u16; 8],mut _8: i128,mut _9: i128,mut _10: [i64; 6],mut _11: i128,mut _12: [i64; 6],mut _13: Adt46,mut _14: [u16; 8],mut _15: [u16; 8]) -> [u128; 2] {
mir! {
type RET = [u128; 2];
let _16: *mut u16;
let _17: (char, *mut [i8; 7], i16);
let _18: [bool; 6];
let _19: (u32,);
let _20: isize;
let _21: bool;
let _22: f32;
let _23: (i64, (char, *mut [i8; 7], i16), (i64,), u8);
let _24: (f64, i8, [usize; 7], usize, i8);
let _25: [i64; 6];
let _26: (u32,);
let _27: Adt48;
let _28: Adt55;
let _29: (f64, i8, [usize; 7], usize, i8);
let _30: char;
let _31: bool;
let _32: Adt54;
let _33: [u16; 8];
let _34: u32;
let _35: Adt47;
let _36: [bool; 6];
let _37: isize;
let _38: [bool; 6];
let _39: i8;
let _40: [char; 6];
let _41: u64;
let _42: Adt58;
let _43: Adt46;
let _44: [u16; 8];
let _45: ();
let _46: ();
{
_3.fld1 = [287284191437222256740381986145168717557_u128,239059744600013879761338112632730237034_u128];
_13.fld3 = [16853_u16,6055_u16,29834_u16,44764_u16,42266_u16,30338_u16,1078_u16,6353_u16];
_4.fld1 = [302507052762523344944962854828789105841_u128,220650613827771664282982596130800620228_u128];
_4.fld2 = !_3.fld2;
RET = _13.fld1;
_13 = _4;
_18 = [false,true,true,true,true,false];
_14 = [1445_u16,25336_u16,50012_u16,32641_u16,47234_u16,44599_u16,7560_u16,15173_u16];
_5 = [_13.fld2,_11,_4.fld2,_3.fld2,_8,_3.fld2];
_3.fld3 = _6;
_4.fld0 = [3844966714513230426_i64,3644562241446424111_i64,5431804085322261581_i64,(-7893209118363057063_i64),(-6662512689733165069_i64),(-1251421869824492888_i64)];
Call(_6 = fn8(_15, _4.fld3, _12, _13.fld3, _3.fld2, _13.fld2, _4, _13.fld2, _12, _3, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3.fld0 = [(-1090477742451738985_i64),2552320741580428350_i64,(-6446161378068220515_i64),(-7567438469452669689_i64),1901620302542881182_i64,(-678468953375392429_i64)];
_1 = !703139370_u32;
_4 = _3;
_8 = -_11;
_17.2 = 18130_i16 ^ 1683_i16;
_13.fld0 = [142022459731374111_i64,(-5523184963416342598_i64),(-3230186097193738152_i64),6538067269391517344_i64,7826915920028361464_i64,(-2627028618967231544_i64)];
_19.0 = _13.fld2 as u32;
_4.fld0 = _3.fld0;
_17.2 = 32230_i16;
Goto(bb2)
}
bb2 = {
_12 = [(-2089867176322299289_i64),(-5373061348832035376_i64),(-4592904066489896434_i64),(-5149002817326198945_i64),5382987151960113699_i64,4042951065186774446_i64];
_12 = [(-109203773799263408_i64),(-8205727735074222789_i64),1487008975897289803_i64,4123831856096951204_i64,6684751179737284010_i64,(-2604057086075674471_i64)];
_18 = [false,false,false,false,true,true];
_19 = (_1,);
Goto(bb3)
}
bb3 = {
_3 = _13;
_9 = 34_i8 as i128;
_4 = _3;
_4.fld3 = _15;
_4.fld2 = -_8;
_4.fld1 = RET;
_1 = !_19.0;
_11 = _13.fld2 + _8;
_18 = [false,false,false,false,false,true];
_13 = Adt46 { fld0: _12,fld1: _4.fld1,fld2: _8,fld3: _4.fld3 };
_4.fld0 = _12;
_15 = [43949_u16,40890_u16,514_u16,4235_u16,42094_u16,63527_u16,28917_u16,42381_u16];
_24.0 = (-118_isize) as f64;
_4.fld2 = 54_i8 as i128;
_19.0 = 1796807281905441711_i64 as u32;
_10 = _12;
_19 = (_1,);
_6 = [22041_u16,64522_u16,43457_u16,32464_u16,50621_u16,12618_u16,20386_u16,33794_u16];
_23.1.0 = '\u{8527c}';
_23.2 = ((-296820506575153946_i64),);
_18 = [false,false,true,false,false,false];
_19.0 = 70_i8 as u32;
Goto(bb4)
}
bb4 = {
_21 = true;
_9 = _8 >> _11;
_6 = [1016_u16,50978_u16,58740_u16,19291_u16,25929_u16,57346_u16,23238_u16,10445_u16];
_1 = _19.0;
_23.1.2 = _17.2;
_24.1 = 641184005_i32 as i8;
_24.0 = _23.1.2 as f64;
_13.fld2 = _11 ^ _9;
_23.0 = _23.2.0;
_27.fld1.2 = [2_usize,17861578352666803413_usize,14564183299776538193_usize,3_usize,7520439193607139006_usize,16781687395013227234_usize,0_usize];
_6 = _4.fld3;
_27.fld5 = 243042308_i32 & (-1184808527_i32);
_29.3 = !3_usize;
_24.3 = 18443176326694589366_u64 as usize;
_29 = (_24.0, _24.1, _27.fld1.2, _24.3, _24.1);
RET = _13.fld1;
_24.2 = [_24.3,_24.3,_29.3,_29.3,_24.3,_29.3,_29.3];
_29.3 = 42_u8 as usize;
Goto(bb5)
}
bb5 = {
_23.2.0 = -_23.0;
_21 = _13.fld2 < _13.fld2;
_23.3 = _21 as u8;
_24.1 = _23.3 as i8;
_27.fld4 = _23.1.2;
_24.4 = _23.3 as i8;
_27.fld0 = [231309057171100370305875731767921819439_u128,52701894010428812465318344953488059030_u128];
_27.fld1.1 = [249631615156100671076989206547828336657_u128,221819152807718155131774464382097335232_u128];
_27.fld1.0 = _29.0 * _24.0;
_17.0 = _23.1.0;
_31 = _24.1 <= _24.4;
_30 = _17.0;
_27.fld2 = -_9;
_26 = (_19.0,);
Call(_10 = fn18(_21, _27.fld2, _31, _31, _27.fld2, _13, _21, _27.fld5, _11, _24.4, _9, _13.fld2, _5), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_4.fld2 = _9 | _13.fld2;
_24.3 = _29.3 << _23.3;
_13 = Adt46 { fld0: _4.fld0,fld1: _3.fld1,fld2: _27.fld2,fld3: _14 };
_3.fld1 = [102949133917067495059991657773233179381_u128,93300911576387996787575642306863816279_u128];
match _17.2 {
0 => bb1,
1 => bb3,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
32230 => bb12,
_ => bb11
}
}
bb7 = {
_23.2.0 = -_23.0;
_21 = _13.fld2 < _13.fld2;
_23.3 = _21 as u8;
_24.1 = _23.3 as i8;
_27.fld4 = _23.1.2;
_24.4 = _23.3 as i8;
_27.fld0 = [231309057171100370305875731767921819439_u128,52701894010428812465318344953488059030_u128];
_27.fld1.1 = [249631615156100671076989206547828336657_u128,221819152807718155131774464382097335232_u128];
_27.fld1.0 = _29.0 * _24.0;
_17.0 = _23.1.0;
_31 = _24.1 <= _24.4;
_30 = _17.0;
_27.fld2 = -_9;
_26 = (_19.0,);
Call(_10 = fn18(_21, _27.fld2, _31, _31, _27.fld2, _13, _21, _27.fld5, _11, _24.4, _9, _13.fld2, _5), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_21 = true;
_9 = _8 >> _11;
_6 = [1016_u16,50978_u16,58740_u16,19291_u16,25929_u16,57346_u16,23238_u16,10445_u16];
_1 = _19.0;
_23.1.2 = _17.2;
_24.1 = 641184005_i32 as i8;
_24.0 = _23.1.2 as f64;
_13.fld2 = _11 ^ _9;
_23.0 = _23.2.0;
_27.fld1.2 = [2_usize,17861578352666803413_usize,14564183299776538193_usize,3_usize,7520439193607139006_usize,16781687395013227234_usize,0_usize];
_6 = _4.fld3;
_27.fld5 = 243042308_i32 & (-1184808527_i32);
_29.3 = !3_usize;
_24.3 = 18443176326694589366_u64 as usize;
_29 = (_24.0, _24.1, _27.fld1.2, _24.3, _24.1);
RET = _13.fld1;
_24.2 = [_24.3,_24.3,_29.3,_29.3,_24.3,_29.3,_29.3];
_29.3 = 42_u8 as usize;
Goto(bb5)
}
bb9 = {
_3 = _13;
_9 = 34_i8 as i128;
_4 = _3;
_4.fld3 = _15;
_4.fld2 = -_8;
_4.fld1 = RET;
_1 = !_19.0;
_11 = _13.fld2 + _8;
_18 = [false,false,false,false,false,true];
_13 = Adt46 { fld0: _12,fld1: _4.fld1,fld2: _8,fld3: _4.fld3 };
_4.fld0 = _12;
_15 = [43949_u16,40890_u16,514_u16,4235_u16,42094_u16,63527_u16,28917_u16,42381_u16];
_24.0 = (-118_isize) as f64;
_4.fld2 = 54_i8 as i128;
_19.0 = 1796807281905441711_i64 as u32;
_10 = _12;
_19 = (_1,);
_6 = [22041_u16,64522_u16,43457_u16,32464_u16,50621_u16,12618_u16,20386_u16,33794_u16];
_23.1.0 = '\u{8527c}';
_23.2 = ((-296820506575153946_i64),);
_18 = [false,false,true,false,false,false];
_19.0 = 70_i8 as u32;
Goto(bb4)
}
bb10 = {
_12 = [(-2089867176322299289_i64),(-5373061348832035376_i64),(-4592904066489896434_i64),(-5149002817326198945_i64),5382987151960113699_i64,4042951065186774446_i64];
_12 = [(-109203773799263408_i64),(-8205727735074222789_i64),1487008975897289803_i64,4123831856096951204_i64,6684751179737284010_i64,(-2604057086075674471_i64)];
_18 = [false,false,false,false,true,true];
_19 = (_1,);
Goto(bb3)
}
bb11 = {
_3.fld0 = [(-1090477742451738985_i64),2552320741580428350_i64,(-6446161378068220515_i64),(-7567438469452669689_i64),1901620302542881182_i64,(-678468953375392429_i64)];
_1 = !703139370_u32;
_4 = _3;
_8 = -_11;
_17.2 = 18130_i16 ^ 1683_i16;
_13.fld0 = [142022459731374111_i64,(-5523184963416342598_i64),(-3230186097193738152_i64),6538067269391517344_i64,7826915920028361464_i64,(-2627028618967231544_i64)];
_19.0 = _13.fld2 as u32;
_4.fld0 = _3.fld0;
_17.2 = 32230_i16;
Goto(bb2)
}
bb12 = {
_27.fld3.1 = !_17.2;
_22 = _27.fld4 as f32;
_27.fld1 = (_24.0, _4.fld1, _29.2);
_23.1.0 = _30;
_29.0 = -_27.fld1.0;
_39 = -_24.1;
_23.1.2 = _27.fld4 ^ _27.fld3.1;
_27.fld2 = _13.fld2 + _4.fld2;
_30 = _17.0;
_26 = _19;
_24.2 = _27.fld1.2;
_24 = (_29.0, _39, _27.fld1.2, _29.3, _39);
_17.2 = _27.fld3.1 << _8;
_25 = [_23.0,_23.2.0,_23.0,_23.0,_23.0,_23.0];
_29 = (_24.0, _24.4, _24.2, _24.3, _24.4);
_39 = !_24.4;
_13.fld0 = [_23.2.0,_23.0,_23.2.0,_23.0,_23.0,_23.2.0];
_9 = _4.fld2;
_13.fld3 = [38556_u16,53479_u16,53583_u16,19771_u16,19847_u16,32054_u16,43850_u16,57978_u16];
_23.1.1 = core::ptr::addr_of_mut!(_2);
_27.fld1.2 = [_24.3,_24.3,_29.3,_29.3,_29.3,_29.3,_24.3];
_17 = (_30, _23.1.1, _23.1.2);
_1 = _19.0;
_17.1 = core::ptr::addr_of_mut!(_2);
_37 = -(-9223372036854775808_isize);
_4.fld3 = [57388_u16,8746_u16,62446_u16,1959_u16,63313_u16,19012_u16,18154_u16,56817_u16];
_23.1.2 = 58302_u16 as i16;
match _23.0 {
0 => bb9,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
340282366920938463463077786925193057510 => bb18,
_ => bb17
}
}
bb13 = {
_3.fld0 = [(-1090477742451738985_i64),2552320741580428350_i64,(-6446161378068220515_i64),(-7567438469452669689_i64),1901620302542881182_i64,(-678468953375392429_i64)];
_1 = !703139370_u32;
_4 = _3;
_8 = -_11;
_17.2 = 18130_i16 ^ 1683_i16;
_13.fld0 = [142022459731374111_i64,(-5523184963416342598_i64),(-3230186097193738152_i64),6538067269391517344_i64,7826915920028361464_i64,(-2627028618967231544_i64)];
_19.0 = _13.fld2 as u32;
_4.fld0 = _3.fld0;
_17.2 = 32230_i16;
Goto(bb2)
}
bb14 = {
_12 = [(-2089867176322299289_i64),(-5373061348832035376_i64),(-4592904066489896434_i64),(-5149002817326198945_i64),5382987151960113699_i64,4042951065186774446_i64];
_12 = [(-109203773799263408_i64),(-8205727735074222789_i64),1487008975897289803_i64,4123831856096951204_i64,6684751179737284010_i64,(-2604057086075674471_i64)];
_18 = [false,false,false,false,true,true];
_19 = (_1,);
Goto(bb3)
}
bb15 = {
_4.fld2 = _9 | _13.fld2;
_24.3 = _29.3 << _23.3;
_13 = Adt46 { fld0: _4.fld0,fld1: _3.fld1,fld2: _27.fld2,fld3: _14 };
_3.fld1 = [102949133917067495059991657773233179381_u128,93300911576387996787575642306863816279_u128];
match _17.2 {
0 => bb1,
1 => bb3,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
32230 => bb12,
_ => bb11
}
}
bb16 = {
_12 = [(-2089867176322299289_i64),(-5373061348832035376_i64),(-4592904066489896434_i64),(-5149002817326198945_i64),5382987151960113699_i64,4042951065186774446_i64];
_12 = [(-109203773799263408_i64),(-8205727735074222789_i64),1487008975897289803_i64,4123831856096951204_i64,6684751179737284010_i64,(-2604057086075674471_i64)];
_18 = [false,false,false,false,true,true];
_19 = (_1,);
Goto(bb3)
}
bb17 = {
_23.2.0 = -_23.0;
_21 = _13.fld2 < _13.fld2;
_23.3 = _21 as u8;
_24.1 = _23.3 as i8;
_27.fld4 = _23.1.2;
_24.4 = _23.3 as i8;
_27.fld0 = [231309057171100370305875731767921819439_u128,52701894010428812465318344953488059030_u128];
_27.fld1.1 = [249631615156100671076989206547828336657_u128,221819152807718155131774464382097335232_u128];
_27.fld1.0 = _29.0 * _24.0;
_17.0 = _23.1.0;
_31 = _24.1 <= _24.4;
_30 = _17.0;
_27.fld2 = -_9;
_26 = (_19.0,);
Call(_10 = fn18(_21, _27.fld2, _31, _31, _27.fld2, _13, _21, _27.fld5, _11, _24.4, _9, _13.fld2, _5), ReturnTo(bb6), UnwindUnreachable())
}
bb18 = {
_40 = [_30,_17.0,_23.1.0,_23.1.0,_17.0,_30];
_36 = [_31,_21,_31,_31,_21,_31];
_24.1 = 34400_u16 as i8;
_4.fld3 = _7;
_8 = -_4.fld2;
_27.fld3.0 = core::ptr::addr_of_mut!(_23.0);
_42.fld0 = core::ptr::addr_of_mut!(_23.1.1);
_42.fld3.1 = _17.0;
_43.fld1 = [322207002296036558213429298466270267612_u128,253779488153029875452870259109455687389_u128];
_42.fld2 = !_27.fld3.1;
_42.fld3.3 = [141679801195818576033499309630797306220_u128,307272773410760578066277509589505061191_u128];
_42.fld3.4 = [_23.2.0,_23.2.0,_23.0,_23.2.0,_23.2.0,_23.2.0];
_19.0 = 5304318399828232885_u64 as u32;
Goto(bb19)
}
bb19 = {
Call(_45 = dump_var(7_usize, 11_usize, Move(_11), 2_usize, Move(_2), 25_usize, Move(_25), 15_usize, Move(_15)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_45 = dump_var(7_usize, 37_usize, Move(_37), 12_usize, Move(_12), 26_usize, Move(_26), 14_usize, Move(_14)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_45 = dump_var(7_usize, 40_usize, Move(_40), 8_usize, Move(_8), 21_usize, Move(_21), 46_usize, _46), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [i64; 6],mut _4: [u16; 8],mut _5: i128,mut _6: i128,mut _7: Adt46,mut _8: i128,mut _9: [i64; 6],mut _10: Adt46,mut _11: i128) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _12: [char; 6];
let _13: u16;
let _14: char;
let _15: char;
let _16: [i8; 1];
let _17: Adt45;
let _18: f64;
let _19: u64;
let _20: ();
let _21: ();
{
_4 = [60514_u16,49329_u16,49820_u16,51592_u16,52778_u16,25225_u16,28818_u16,63711_u16];
_10 = Adt46 { fld0: _7.fld0,fld1: _7.fld1,fld2: _5,fld3: _7.fld3 };
_10.fld1 = _7.fld1;
RET = [3934_u16,23318_u16,26071_u16,37940_u16,17206_u16,1498_u16,15660_u16,37217_u16];
_10.fld1 = [35990341934469648796515790714621887705_u128,250929346885885656926743967600511092560_u128];
_7.fld0 = [8305913268492838760_i64,(-5541621422349563286_i64),(-3924635455256278743_i64),5238428686559589074_i64,(-4453023544833754984_i64),1194492726157523185_i64];
RET = _4;
_10.fld3 = [50779_u16,16878_u16,49262_u16,25300_u16,35399_u16,11936_u16,13718_u16,9381_u16];
_10.fld3 = [15279_u16,4064_u16,35565_u16,23399_u16,48171_u16,557_u16,56026_u16,59934_u16];
Goto(bb1)
}
bb1 = {
_1 = _2;
_12 = ['\u{59762}','\u{10e46b}','\u{caa29}','\u{a3718}','\u{b099b}','\u{63693}'];
_7.fld3 = [14730_u16,31108_u16,56894_u16,2736_u16,6803_u16,30120_u16,10567_u16,34629_u16];
_2 = [33688_u16,12817_u16,9966_u16,40421_u16,52390_u16,16035_u16,43342_u16,19691_u16];
_7.fld2 = _6;
_7.fld0 = [6606081061998806738_i64,7599149463017548321_i64,3904011004712205074_i64,7853162025275135010_i64,5156701596395964037_i64,290129667240901254_i64];
Call(_10.fld1 = fn9(_8, _7.fld2, _7.fld1, _7.fld2, _7.fld2, _10.fld2, _7.fld2, _7, _5, _11, _7, _8, _8, _11), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = _4;
_1 = _7.fld3;
_13 = 47894_u16;
_3 = _7.fld0;
_1 = [_13,_13,_13,_13,_13,_13,_13,_13];
_7.fld0 = [5667263490384896718_i64,(-8945695871971814410_i64),(-7715906718440383992_i64),(-8298355357249571078_i64),8333501464801238643_i64,6357322990213676406_i64];
_10.fld3 = [_13,_13,_13,_13,_13,_13,_13,_13];
_10.fld0 = [(-3160763576535146335_i64),3737214217254473850_i64,(-3647373627246813285_i64),(-6238821194770407006_i64),(-4049136934691231459_i64),(-1945892163844864785_i64)];
_15 = '\u{89cfd}';
_13 = 64254_u16 << _8;
_15 = '\u{2d01c}';
_11 = 228930577830415807742996963310868376478_u128 as i128;
_15 = '\u{d082f}';
_5 = _7.fld2 | _10.fld2;
_4 = [_13,_13,_13,_13,_13,_13,_13,_13];
Goto(bb3)
}
bb3 = {
_7.fld1 = [251893809257960606093234240455924714758_u128,17536685800394066055142569816985064580_u128];
_6 = 2373852710518603955_u64 as i128;
RET = [_13,_13,_13,_13,_13,_13,_13,_13];
RET = [_13,_13,_13,_13,_13,_13,_13,_13];
_10.fld0 = [(-4876417174870667767_i64),(-8907695806132431475_i64),(-4794719015218435627_i64),65362133733287292_i64,7364701813180127575_i64,1143529057073662011_i64];
_14 = _15;
_6 = -_10.fld2;
Goto(bb4)
}
bb4 = {
Call(_20 = dump_var(8_usize, 11_usize, Move(_11), 4_usize, Move(_4), 14_usize, Move(_14), 8_usize, Move(_8)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_20 = dump_var(8_usize, 13_usize, Move(_13), 1_usize, Move(_1), 21_usize, _21, 21_usize, _21), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: i128,mut _2: i128,mut _3: [u128; 2],mut _4: i128,mut _5: i128,mut _6: i128,mut _7: i128,mut _8: Adt46,mut _9: i128,mut _10: i128,mut _11: Adt46,mut _12: i128,mut _13: i128,mut _14: i128) -> [u128; 2] {
mir! {
type RET = [u128; 2];
let _15: i64;
let _16: i64;
let _17: isize;
let _18: isize;
let _19: i8;
let _20: f64;
let _21: f32;
let _22: u32;
let _23: (i64,);
let _24: (f64, [u128; 2], [usize; 7]);
let _25: Adt43;
let _26: [u128; 2];
let _27: (u32,);
let _28: Adt44;
let _29: i128;
let _30: usize;
let _31: [i8; 1];
let _32: Adt58;
let _33: u128;
let _34: Adt54;
let _35: (u32,);
let _36: isize;
let _37: (i64, (char, *mut [i8; 7], i16), (i64,), u8);
let _38: isize;
let _39: Adt43;
let _40: (u128,);
let _41: i128;
let _42: ();
let _43: ();
{
_5 = false as i128;
_11 = Adt46 { fld0: _8.fld0,fld1: _3,fld2: _14,fld3: _8.fld3 };
_4 = 6937_u16 as i128;
_6 = true as i128;
_1 = _8.fld2;
RET = [137561220643600108587910993035833701552_u128,217021408515119905611662568767088718796_u128];
_4 = !_11.fld2;
_8 = _11;
_8 = _11;
_9 = 196_u8 as i128;
_7 = 1340233679_u32 as i128;
_8.fld0 = [8357222605273266419_i64,(-6939488782633340093_i64),761483630776586710_i64,(-2536931658599244988_i64),(-1421656072960033333_i64),(-1795679248068762206_i64)];
_7 = -_2;
_11 = Adt46 { fld0: _8.fld0,fld1: _8.fld1,fld2: _1,fld3: _8.fld3 };
_8.fld0 = [2732147377133571413_i64,6654543977608625697_i64,8365834715032421650_i64,(-6124063351953339477_i64),1938843141109186827_i64,(-7630577286969729086_i64)];
_11.fld2 = !_4;
_11 = Adt46 { fld0: _8.fld0,fld1: _3,fld2: _14,fld3: _8.fld3 };
_3 = [100761054202879063624821686019087773118_u128,322759859765607909346978280553888739309_u128];
_16 = 9223372036854775807_isize as i64;
_8.fld0 = _11.fld0;
_4 = _14 - _13;
_11.fld2 = _10 + _1;
_15 = 129_u8 as i64;
_10 = !_8.fld2;
Goto(bb1)
}
bb1 = {
_11.fld1 = _3;
Goto(bb2)
}
bb2 = {
_16 = _15;
_8.fld3 = [6061_u16,15511_u16,13008_u16,12292_u16,21179_u16,35475_u16,45530_u16,23451_u16];
_8 = Adt46 { fld0: _11.fld0,fld1: _3,fld2: _1,fld3: _11.fld3 };
_15 = _16;
_11 = Adt46 { fld0: _8.fld0,fld1: _8.fld1,fld2: _14,fld3: _8.fld3 };
_8.fld3 = _11.fld3;
_3 = _8.fld1;
_11.fld3 = _8.fld3;
_15 = _16;
_8.fld3 = [61469_u16,30552_u16,8612_u16,9133_u16,2318_u16,474_u16,14997_u16,5079_u16];
_16 = _15 + _15;
_13 = _7 & _4;
Call(_20 = fn10(_11, _12, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = _4 * _8.fld2;
_8.fld3 = [15152_u16,27638_u16,6990_u16,40559_u16,56937_u16,29168_u16,48416_u16,8656_u16];
_6 = _10;
_22 = !4238529257_u32;
Goto(bb4)
}
bb4 = {
_21 = _20 as f32;
_11.fld3 = [45190_u16,7035_u16,47123_u16,19448_u16,61446_u16,19259_u16,21073_u16,9338_u16];
_11.fld0 = _8.fld0;
_12 = _7 ^ _7;
_8 = _11;
_8.fld2 = _12;
_17 = !9223372036854775807_isize;
_11.fld0 = [_16,_16,_16,_16,_15,_15];
_11.fld2 = _8.fld2;
_13 = _8.fld2;
_23 = (_16,);
_1 = !_13;
_14 = _12 | _1;
_13 = !_11.fld2;
_23 = (_16,);
_24.1 = _8.fld1;
_1 = _14 | _11.fld2;
_8.fld2 = 163574190928634287853570100698300761791_u128 as i128;
_23.0 = _16;
Goto(bb5)
}
bb5 = {
_16 = _15 | _15;
_19 = _11.fld2 as i8;
_25.fld2 = _20 as usize;
RET = [222705095144766881751282594252393060832_u128,86935913998380631087643712566852595310_u128];
_24.2 = [_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2,_25.fld2];
_9 = false as i128;
_1 = 63_u8 as i128;
_15 = _23.0;
_22 = !3586264787_u32;
_25.fld1 = _8.fld3;
_25.fld0.2 = 13176_i16 ^ 11989_i16;
Goto(bb6)
}
bb6 = {
_5 = _13 + _12;
_13 = _2 << _7;
_28.fld3 = [_19,_19,_19,_19,_19,_19,_19];
_25.fld0.0 = '\u{d17ba}';
_14 = (-1688761823_i32) as i128;
_27 = (_22,);
_6 = _11.fld2;
_26 = [124923310508757050537546581655748457477_u128,189755704529403281119988403142819691514_u128];
Goto(bb7)
}
bb7 = {
_11.fld1 = [298866187741100486967777432059060448131_u128,228087444723500633650422621262959649487_u128];
_29 = _27.0 as i128;
_1 = -_11.fld2;
_13 = -_4;
_5 = _1;
_14 = _21 as i128;
_24.0 = _20 - _20;
_6 = 223_u8 as i128;
_28.fld2 = 67_u8;
_17 = -(-9223372036854775808_isize);
_20 = _24.0;
_16 = _23.0 - _23.0;
_16 = _15;
_24.1 = _26;
_7 = _5;
_22 = _20 as u32;
RET = [174976920691470105268085588211684830485_u128,316520909600013656801354931733262198172_u128];
match _28.fld2 {
0 => bb2,
1 => bb8,
2 => bb9,
67 => bb11,
_ => bb10
}
}
bb8 = {
_7 = _4 * _8.fld2;
_8.fld3 = [15152_u16,27638_u16,6990_u16,40559_u16,56937_u16,29168_u16,48416_u16,8656_u16];
_6 = _10;
_22 = !4238529257_u32;
Goto(bb4)
}
bb9 = {
_16 = _15;
_8.fld3 = [6061_u16,15511_u16,13008_u16,12292_u16,21179_u16,35475_u16,45530_u16,23451_u16];
_8 = Adt46 { fld0: _11.fld0,fld1: _3,fld2: _1,fld3: _11.fld3 };
_15 = _16;
_11 = Adt46 { fld0: _8.fld0,fld1: _8.fld1,fld2: _14,fld3: _8.fld3 };
_8.fld3 = _11.fld3;
_3 = _8.fld1;
_11.fld3 = _8.fld3;
_15 = _16;
_8.fld3 = [61469_u16,30552_u16,8612_u16,9133_u16,2318_u16,474_u16,14997_u16,5079_u16];
_16 = _15 + _15;
_13 = _7 & _4;
Call(_20 = fn10(_11, _12, _10), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
_11.fld1 = _3;
Goto(bb2)
}
bb11 = {
_11 = _8;
_16 = _23.0 & _23.0;
Goto(bb12)
}
bb12 = {
_25.fld0.2 = (-14247_i16);
_22 = _27.0 * _27.0;
_30 = !_25.fld2;
_30 = 27202_u16 as usize;
_25.fld1 = [26564_u16,22587_u16,51634_u16,48701_u16,50143_u16,36542_u16,3688_u16,64365_u16];
_25.fld1 = [11805_u16,11018_u16,25055_u16,50032_u16,56472_u16,3518_u16,31218_u16,19608_u16];
_25.fld0.0 = '\u{cfcf3}';
_28.fld4.2 = _25.fld0.2;
_25.fld0.1 = core::ptr::addr_of_mut!(_28.fld3);
_28.fld4.0 = _25.fld0.0;
RET = [184377867582486564837051064027528296084_u128,107248120543800221601457040301120912971_u128];
_32.fld3.3 = [258011576237567910426387315023892053023_u128,175635483907363900071795357734592516467_u128];
_25.fld1 = [59587_u16,15315_u16,63492_u16,41854_u16,54221_u16,27142_u16,39314_u16,37302_u16];
_32.fld3.4 = [_16,_16,_16,_23.0,_15,_15];
_32.fld3.2 = core::ptr::addr_of_mut!(_23.0);
_25.fld1 = _11.fld3;
Goto(bb13)
}
bb13 = {
_28.fld1 = _25.fld0.0;
_25.fld1 = _11.fld3;
_31 = [_19];
_4 = _21 as i128;
_3 = [15207550727962979907041012929455776772_u128,230467791836754055320376599420877485872_u128];
_32.fld3.1 = _25.fld0.0;
_28.fld4.0 = _32.fld3.1;
_32.fld0 = core::ptr::addr_of_mut!(_28.fld4.1);
_32.fld3.0 = [264406554921268787000607579847263571950_u128,175595609183995440500496073142164303767_u128];
_10 = _1;
_14 = _10 - _10;
RET = [43923138617123233454659740251274595448_u128,95679886238494486262095742744772865616_u128];
_39.fld0 = _25.fld0;
match _28.fld2 {
0 => bb3,
1 => bb12,
67 => bb15,
_ => bb14
}
}
bb14 = {
_7 = _4 * _8.fld2;
_8.fld3 = [15152_u16,27638_u16,6990_u16,40559_u16,56937_u16,29168_u16,48416_u16,8656_u16];
_6 = _10;
_22 = !4238529257_u32;
Goto(bb4)
}
bb15 = {
_15 = !_16;
_37.0 = !_15;
_8 = Adt46 { fld0: _32.fld3.4,fld1: _3,fld2: _1,fld3: _11.fld3 };
_15 = !_16;
_37.1.2 = _28.fld4.2 + _28.fld4.2;
_22 = _16 as u32;
_32.fld3.2 = core::ptr::addr_of_mut!(_37.2.0);
_32.fld3.3 = [105518714074440393288121240673379134522_u128,23603706110476505641182781926285325523_u128];
_25.fld0 = (_32.fld3.1, _39.fld0.1, _28.fld4.2);
_27.0 = !_22;
_30 = !_25.fld2;
_11.fld3 = [20635_u16,47733_u16,45769_u16,17004_u16,48900_u16,53209_u16,21778_u16,48633_u16];
_33 = !40834932579336054337848623434912949710_u128;
_22 = _27.0;
_32.fld3.5 = _25.fld2;
_37.0 = _5 as i64;
Goto(bb16)
}
bb16 = {
Call(_42 = dump_var(9_usize, 12_usize, Move(_12), 10_usize, Move(_10), 29_usize, Move(_29), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(9_usize, 15_usize, Move(_15), 14_usize, Move(_14), 6_usize, Move(_6), 22_usize, Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(9_usize, 7_usize, Move(_7), 33_usize, Move(_33), 4_usize, Move(_4), 30_usize, Move(_30)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: Adt46,mut _2: i128,mut _3: i128) -> f64 {
mir! {
type RET = f64;
let _4: (*mut i64, i16);
let _5: f32;
let _6: [usize; 7];
let _7: Adt46;
let _8: [u16; 8];
let _9: Adt51;
let _10: (char, *mut [i8; 7], i16);
let _11: bool;
let _12: isize;
let _13: Adt46;
let _14: u16;
let _15: [u16; 8];
let _16: bool;
let _17: Adt56;
let _18: u32;
let _19: u32;
let _20: i128;
let _21: u128;
let _22: isize;
let _23: (i64,);
let _24: char;
let _25: [i8; 1];
let _26: [i128; 6];
let _27: (i32,);
let _28: bool;
let _29: *mut [i8; 7];
let _30: (u128,);
let _31: (u32,);
let _32: (i32,);
let _33: [bool; 6];
let _34: Adt53;
let _35: ();
let _36: ();
{
RET = 9727515079502862060_u64 as f64;
Goto(bb1)
}
bb1 = {
_5 = 27781_u16 as f32;
_4.1 = true as i16;
_3 = false as i128;
_2 = 3794296130_u32 as i128;
_1.fld3 = [52264_u16,7541_u16,15161_u16,12201_u16,6926_u16,4586_u16,12936_u16,44864_u16];
_5 = 124084389747000529167027152404157200295_u128 as f32;
RET = 19_u8 as f64;
RET = 99_i8 as f64;
_1.fld0 = [(-4597291658865086285_i64),803089474664007070_i64,138220921681703105_i64,(-1035633802014670732_i64),2368740266824409038_i64,(-4732183802026186109_i64)];
Call(_3 = fn11(_5, _1.fld3, _1.fld3, _4.1, _1.fld2, _1.fld2, _1.fld3, _1.fld2, _1.fld2, RET, _1.fld2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1.fld1 = [193267176281528129748081616795671349358_u128,291733626359170516684641583777343645289_u128];
_6 = [5_usize,7_usize,6_usize,0_usize,15682224114894570716_usize,11294410070664391504_usize,14983528148786685064_usize];
_1.fld2 = _3 << _3;
_7.fld3 = [56340_u16,59362_u16,49433_u16,65447_u16,33688_u16,38240_u16,30083_u16,55753_u16];
RET = 81526396528528510372245324396149166344_u128 as f64;
_1.fld3 = [37308_u16,44625_u16,32988_u16,33013_u16,10488_u16,57309_u16,11580_u16,46432_u16];
_2 = _3 & _1.fld2;
_1.fld3 = _7.fld3;
_4.1 = (-23499_i16) & 18064_i16;
_7.fld0 = [(-5211473473922299323_i64),6986390811537848513_i64,(-7075566413277431737_i64),5569284920891786558_i64,(-8102861464220677252_i64),6918334735747466669_i64];
_1.fld3 = _7.fld3;
_7 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _1.fld3 };
_7 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _2,fld3: _1.fld3 };
_1.fld1 = [16694085449388025848682502635462728408_u128,276104349799177697550092901543847895784_u128];
_2 = -_3;
_6 = [7_usize,3025641765400742561_usize,5_usize,3630502298847134071_usize,13273652977101710590_usize,4514689026173528563_usize,5_usize];
_1 = Adt46 { fld0: _7.fld0,fld1: _7.fld1,fld2: _7.fld2,fld3: _7.fld3 };
Call(_7.fld3 = core::intrinsics::transmute(_7.fld2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = 1267334346_u32 as f64;
_5 = (-7600483633080247420_i64) as f32;
_5 = 9223372036854775807_isize as f32;
_7.fld3 = _1.fld3;
_1.fld1 = [232363096020304080975966832370054188558_u128,142497355370282642084531029645747868463_u128];
_11 = false;
_10.2 = 105755585900624361112385510971581279240_u128 as i16;
_2 = _7.fld2;
_4.1 = _10.2;
_11 = false | false;
_7.fld3 = [43640_u16,62370_u16,50823_u16,9540_u16,58846_u16,41037_u16,45581_u16,9139_u16];
_1.fld2 = 15940852383491507932_u64 as i128;
_7 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _2,fld3: _1.fld3 };
_7.fld1 = _1.fld1;
_8 = [32374_u16,1080_u16,39267_u16,63042_u16,41931_u16,14625_u16,22342_u16,64201_u16];
Goto(bb4)
}
bb4 = {
_7.fld3 = [39739_u16,61998_u16,9965_u16,52169_u16,34492_u16,60341_u16,38680_u16,10730_u16];
_1.fld2 = _7.fld2;
RET = 8026388095960176205_usize as f64;
_1 = Adt46 { fld0: _7.fld0,fld1: _7.fld1,fld2: _2,fld3: _7.fld3 };
_1 = Adt46 { fld0: _7.fld0,fld1: _7.fld1,fld2: _7.fld2,fld3: _8 };
Goto(bb5)
}
bb5 = {
_5 = _4.1 as f32;
_10.0 = '\u{aaa07}';
_1.fld1 = [220641480049400402208758430443945429646_u128,275813036301041540580905248005968308636_u128];
_8 = [45545_u16,27239_u16,62347_u16,59417_u16,53483_u16,44573_u16,36774_u16,26245_u16];
Goto(bb6)
}
bb6 = {
_5 = (-5864890761453510140_i64) as f32;
RET = 28336_u16 as f64;
_14 = _10.0 as u16;
_12 = _11 as isize;
_13 = _1;
_1.fld2 = !_7.fld2;
RET = _14 as f64;
_10.2 = _4.1 + _4.1;
_8 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10.2 = _4.1;
_10.0 = '\u{85d18}';
_2 = _1.fld2;
_2 = !_1.fld2;
_4.1 = _10.2;
_13.fld2 = -_1.fld2;
RET = 8551512313566920175_u64 as f64;
_7.fld1 = [70371219885178938737879341656689840278_u128,271162554704348280361547308398681169882_u128];
Goto(bb7)
}
bb7 = {
_13.fld2 = _3 & _7.fld2;
_2 = _13.fld2 + _1.fld2;
_14 = !18355_u16;
_13.fld0 = [(-3655640094833060822_i64),6897103117185325920_i64,(-6367111359861139607_i64),(-5200720592045857494_i64),1777299171377693363_i64,(-7743380208976547065_i64)];
Call(_4.1 = fn12(_13.fld2, _13, _1.fld2, _7, _1, _2, _13), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_18 = 431761713_u32;
_12 = 9223372036854775807_isize ^ (-44_isize);
_12 = 868944262_i32 as isize;
RET = _18 as f64;
_16 = _11 & _11;
_13.fld1 = _1.fld1;
Call(_2 = core::intrinsics::bswap(_13.fld2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_13.fld1 = _7.fld1;
_7.fld1 = [58919998340334476694981630133895603071_u128,37545171340679057177030769231076653969_u128];
_5 = _12 as f32;
_7.fld0 = [8137207870037683410_i64,(-6111937240395611273_i64),574541958072239002_i64,3038736314569846698_i64,(-3341578478358486979_i64),(-631614772886009440_i64)];
_5 = 1798007488779019464_u64 as f32;
_13.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_20 = _2 - _2;
_3 = _2 | _2;
_6 = [7934752087093980595_usize,6_usize,6_usize,0_usize,8623120552089835013_usize,2_usize,5853303945813614057_usize];
_18 = !458229159_u32;
Call(_18 = core::intrinsics::transmute(_10.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_20 = -_3;
_14 = 40107_u16;
_19 = 5_usize as u32;
_13.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_7.fld2 = -_3;
_1.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10.2 = _12 as i16;
_23.0 = 1593592497959251501_i64 << _20;
_22 = _12;
match _14 {
0 => bb1,
1 => bb2,
2 => bb9,
40107 => bb12,
_ => bb11
}
}
bb11 = {
_5 = 27781_u16 as f32;
_4.1 = true as i16;
_3 = false as i128;
_2 = 3794296130_u32 as i128;
_1.fld3 = [52264_u16,7541_u16,15161_u16,12201_u16,6926_u16,4586_u16,12936_u16,44864_u16];
_5 = 124084389747000529167027152404157200295_u128 as f32;
RET = 19_u8 as f64;
RET = 99_i8 as f64;
_1.fld0 = [(-4597291658865086285_i64),803089474664007070_i64,138220921681703105_i64,(-1035633802014670732_i64),2368740266824409038_i64,(-4732183802026186109_i64)];
Call(_3 = fn11(_5, _1.fld3, _1.fld3, _4.1, _1.fld2, _1.fld2, _1.fld3, _1.fld2, _1.fld2, RET, _1.fld2), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_7.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_13.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_1.fld2 = _2;
_3 = _13.fld2 - _7.fld2;
_1.fld2 = _14 as i128;
_10.2 = _4.1 * _4.1;
_21 = 166695859045651215171243591721929445172_u128 + 23475417641213308228822598927247061360_u128;
_11 = _20 <= _2;
_27 = ((-1105681555_i32),);
_10.2 = _4.1;
_10.2 = !_4.1;
_1.fld1 = _7.fld1;
_1 = _7;
_14 = 52417_u16 & 18186_u16;
_27 = ((-523734558_i32),);
_20 = _13.fld2 - _3;
_19 = !_18;
_11 = _16 | _16;
_7.fld3 = _13.fld3;
Goto(bb13)
}
bb13 = {
_13.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_25 = [(-83_i8)];
_7 = _1;
_6 = [10852147674678479821_usize,5_usize,6_usize,6422744326185646191_usize,0_usize,17261853781919008062_usize,7_usize];
_1.fld2 = _2;
_15 = _7.fld3;
_6 = [5169867011876013778_usize,1738636680065221065_usize,15346151980959451868_usize,6068586100788700283_usize,8224407110208139706_usize,2527044446184933585_usize,5179423581275878061_usize];
_7.fld2 = -_1.fld2;
_7.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_26 = [_7.fld2,_13.fld2,_3,_2,_20,_20];
_20 = !_13.fld2;
_7 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _20,fld3: _1.fld3 };
_12 = _18 as isize;
_1.fld0 = _7.fld0;
_10.2 = _4.1 + _4.1;
_27 = ((-1464075863_i32),);
_4.0 = core::ptr::addr_of_mut!(_23.0);
_27.0 = 820814130_i32;
_19 = _18;
match _27.0 {
0 => bb12,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb14,
820814130 => bb16,
_ => bb15
}
}
bb14 = {
_20 = -_3;
_14 = 40107_u16;
_19 = 5_usize as u32;
_13.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_7.fld2 = -_3;
_1.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_10.2 = _12 as i16;
_23.0 = 1593592497959251501_i64 << _20;
_22 = _12;
match _14 {
0 => bb1,
1 => bb2,
2 => bb9,
40107 => bb12,
_ => bb11
}
}
bb15 = {
_5 = 27781_u16 as f32;
_4.1 = true as i16;
_3 = false as i128;
_2 = 3794296130_u32 as i128;
_1.fld3 = [52264_u16,7541_u16,15161_u16,12201_u16,6926_u16,4586_u16,12936_u16,44864_u16];
_5 = 124084389747000529167027152404157200295_u128 as f32;
RET = 19_u8 as f64;
RET = 99_i8 as f64;
_1.fld0 = [(-4597291658865086285_i64),803089474664007070_i64,138220921681703105_i64,(-1035633802014670732_i64),2368740266824409038_i64,(-4732183802026186109_i64)];
Call(_3 = fn11(_5, _1.fld3, _1.fld3, _4.1, _1.fld2, _1.fld2, _1.fld3, _1.fld2, _1.fld2, RET, _1.fld2), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_1.fld3 = [_14,_14,_14,_14,_14,_14,_14,_14];
_6 = [6_usize,13595607590649420343_usize,14171078647098909397_usize,6726508929535781036_usize,6_usize,5410049843516336694_usize,12470107039307982404_usize];
_10.2 = _4.1;
_7.fld1 = _1.fld1;
_23 = (4158094234287375459_i64,);
_13 = _1;
_30.0 = _21;
_21 = !_30.0;
_1.fld1 = [_21,_30.0];
_3 = 18329765993215522043_u64 as i128;
_21 = _30.0;
_11 = _1.fld2 >= _7.fld2;
_1 = _7;
_32 = (_27.0,);
_10.0 = '\u{7146d}';
_1 = _7;
_12 = 4146763109811938334_usize as isize;
_23 = (1596398483025198180_i64,);
_4.1 = _23.0 as i16;
_1.fld0 = _7.fld0;
_24 = _10.0;
Goto(bb17)
}
bb17 = {
Call(_35 = dump_var(10_usize, 11_usize, Move(_11), 21_usize, Move(_21), 19_usize, Move(_19), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(10_usize, 32_usize, Move(_32), 8_usize, Move(_8), 25_usize, Move(_25), 2_usize, Move(_2)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_35 = dump_var(10_usize, 20_usize, Move(_20), 27_usize, Move(_27), 36_usize, _36, 36_usize, _36), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: f32,mut _2: [u16; 8],mut _3: [u16; 8],mut _4: i16,mut _5: i128,mut _6: i128,mut _7: [u16; 8],mut _8: i128,mut _9: i128,mut _10: f64,mut _11: i128) -> i128 {
mir! {
type RET = i128;
let _12: isize;
let _13: f32;
let _14: (i32,);
let _15: ();
let _16: ();
{
_7 = _3;
_4 = _10 as i16;
_12 = (-1_isize) ^ (-9223372036854775808_isize);
_13 = 28_i8 as f32;
_9 = _6;
_9 = _6 ^ _11;
_14 = ((-617621763_i32),);
_9 = -_6;
_1 = 15081821881295021593_u64 as f32;
_12 = 9223372036854775807_isize ^ 67_isize;
_11 = _6;
_9 = _8;
RET = _9;
_2 = _3;
_14.0 = 1692526948_i32;
_1 = 3609082841_u32 as f32;
_2 = _3;
_14.0 = (-2029602012_i32) | (-252132453_i32);
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(11_usize, 12_usize, Move(_12), 4_usize, Move(_4), 11_usize, Move(_11), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(11_usize, 7_usize, Move(_7), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: i128,mut _2: Adt46,mut _3: i128,mut _4: Adt46,mut _5: Adt46,mut _6: i128,mut _7: Adt46) -> i16 {
mir! {
type RET = i16;
let _8: i16;
let _9: f64;
let _10: bool;
let _11: *mut *mut [i8; 7];
let _12: i128;
let _13: Adt46;
let _14: i64;
let _15: Adt49;
let _16: u16;
let _17: u128;
let _18: Adt52;
let _19: f64;
let _20: (i64, (char, *mut [i8; 7], i16), (i64,), u8);
let _21: f64;
let _22: bool;
let _23: char;
let _24: char;
let _25: [i8; 1];
let _26: Adt43;
let _27: f64;
let _28: i16;
let _29: u64;
let _30: isize;
let _31: Adt58;
let _32: f32;
let _33: (f64, [u128; 2], [usize; 7]);
let _34: Adt43;
let _35: f32;
let _36: *mut *mut [i8; 7];
let _37: isize;
let _38: (i64,);
let _39: [u128; 2];
let _40: Adt50;
let _41: bool;
let _42: ();
let _43: ();
{
_3 = _1;
_7.fld3 = [25796_u16,63996_u16,15163_u16,45067_u16,14926_u16,28295_u16,40342_u16,20849_u16];
_8 = (-87_i8) as i16;
_8 = -11143_i16;
_2.fld3 = _7.fld3;
_6 = -_7.fld2;
_4.fld1 = [336292529606404496365164052810790367818_u128,229068652765468790033219533914875124776_u128];
Goto(bb1)
}
bb1 = {
_7.fld1 = [236250304818109000906803085243357803507_u128,77423281912747702959849053041986758957_u128];
_13.fld3 = _7.fld3;
_5.fld3 = [15105_u16,11737_u16,20604_u16,27844_u16,26864_u16,3821_u16,52234_u16,54474_u16];
_6 = _3 | _3;
_7 = Adt46 { fld0: _2.fld0,fld1: _5.fld1,fld2: _4.fld2,fld3: _4.fld3 };
_10 = true;
_2.fld2 = _3;
_12 = _1;
Goto(bb2)
}
bb2 = {
_14 = (-3872336945863753017_i64) * 1813909212848735874_i64;
RET = 4_usize as i16;
RET = 69_i8 as i16;
_1 = 1468123962_i32 as i128;
_13 = Adt46 { fld0: _4.fld0,fld1: _2.fld1,fld2: _6,fld3: _5.fld3 };
_15.fld3 = (-22_i8) * (-112_i8);
_5.fld3 = [11253_u16,55095_u16,5018_u16,57254_u16,48808_u16,26010_u16,59687_u16,63803_u16];
_2.fld2 = 10427635129609005595_u64 as i128;
Call(_4 = fn13(_7.fld2, _5, RET, _2.fld3, _3, _3, _13.fld2, _13, _13.fld2, _3, _6, _5.fld2, _5.fld3, _13), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15.fld4 = [_15.fld3];
_7.fld0 = [_14,_14,_14,_14,_14,_14];
_2.fld0 = _5.fld0;
_2.fld1 = [118164345196117724478106022801373532489_u128,194148640208514227012494431079720938713_u128];
_5.fld0 = _2.fld0;
_15.fld1 = core::ptr::addr_of_mut!(_16);
_5.fld1 = [283182061388443543925619889138706290793_u128,251729674715900855796531538741463358319_u128];
Goto(bb4)
}
bb4 = {
_4.fld1 = [63941844197080567418102974814703394124_u128,258704482658141771253653112754474067851_u128];
_13 = _4;
_4.fld3 = [45356_u16,16711_u16,28862_u16,25670_u16,12906_u16,38688_u16,56345_u16,35096_u16];
_18.fld0.2 = core::ptr::addr_of_mut!(_14);
_13 = Adt46 { fld0: _7.fld0,fld1: _5.fld1,fld2: _4.fld2,fld3: _7.fld3 };
_18.fld0.5 = 3_usize >> _13.fld2;
_15.fld2 = !_18.fld0.5;
_15.fld4 = [_15.fld3];
_15.fld2 = _18.fld0.5 << _4.fld2;
_12 = !_5.fld2;
_18.fld0.4 = _7.fld0;
_15.fld1 = core::ptr::addr_of_mut!(_16);
RET = _8 + _8;
_15.fld0 = (-88_isize) as f64;
_15.fld4 = [_15.fld3];
_20.1.2 = -RET;
_15.fld0 = _4.fld2 as f64;
_2.fld3 = [21696_u16,42005_u16,5957_u16,32910_u16,57920_u16,48928_u16,34890_u16,29530_u16];
_18.fld0.3 = _7.fld1;
_12 = 4271789692_u32 as i128;
_18.fld0.0 = [50268881216648046517703706298602027728_u128,52317090924368466673515582803748387922_u128];
_3 = _6 + _5.fld2;
_3 = 2497802415_u32 as i128;
_20.3 = _10 as u8;
_15.fld4 = [_15.fld3];
_22 = _18.fld0.5 <= _18.fld0.5;
Call(_16 = core::intrinsics::transmute(_8), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET = !_20.1.2;
_18.fld3 = _20.1.2 - _20.1.2;
_20.0 = _14 & _14;
Call(_1 = core::intrinsics::transmute(_13.fld3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
RET = _18.fld3 & _8;
_13 = Adt46 { fld0: _4.fld0,fld1: _4.fld1,fld2: _4.fld2,fld3: _2.fld3 };
_7.fld3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_17 = _18.fld3 as u128;
_23 = '\u{7febd}';
_5 = Adt46 { fld0: _7.fld0,fld1: _13.fld1,fld2: _4.fld2,fld3: _4.fld3 };
_5.fld0 = _2.fld0;
_9 = _15.fld0 - _15.fld0;
_10 = _22;
_4.fld1 = _2.fld1;
_7 = Adt46 { fld0: _18.fld0.4,fld1: _4.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_27 = 11413075177882285221_u64 as f64;
_18.fld0.2 = core::ptr::addr_of_mut!(_20.0);
_26.fld0.0 = _23;
_4.fld1 = [_17,_17];
_22 = _10 >= _10;
Call(_26.fld0.1 = fn14(_4, _5, _15, _18.fld0.5, _13), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_4.fld2 = _6;
_7.fld1 = _2.fld1;
_20.1.1 = core::ptr::addr_of_mut!(_18.fld2.0);
_26.fld0.1 = core::ptr::addr_of_mut!(_18.fld2.0);
Call(_19 = core::intrinsics::fmaf64(_15.fld0, _15.fld0, _15.fld0), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_26.fld3 = core::ptr::addr_of_mut!(_16);
_16 = 10151_u16;
_20.2.0 = _20.0;
_9 = _15.fld0;
_22 = !_10;
_20.1.0 = _23;
_2.fld2 = _4.fld2;
_11 = core::ptr::addr_of_mut!(_26.fld0.1);
_5.fld3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_5.fld3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_17 = !159104954654484055722883662534022182543_u128;
_31.fld3.5 = !_18.fld0.5;
_20.1.1 = core::ptr::addr_of_mut!(_18.fld2.0);
_1 = _22 as i128;
_13.fld3 = _4.fld3;
Goto(bb9)
}
bb9 = {
_27 = 10390651357221961193_u64 as f64;
_1 = _5.fld2;
_25 = _15.fld4;
_30 = (-45_isize) - (-112_isize);
_20.2 = (_14,);
_13 = Adt46 { fld0: _4.fld0,fld1: _4.fld1,fld2: _2.fld2,fld3: _4.fld3 };
_18.fld2.1 = [_20.0,_20.2.0,_20.0,_14,_20.0,_14];
_31.fld3.2 = core::ptr::addr_of_mut!(_20.2.0);
_31.fld3.4 = [_20.0,_14,_20.2.0,_20.0,_20.0,_20.0];
_26.fld0 = _20.1;
_26.fld0.2 = _18.fld3;
_31.fld3 = (_13.fld1, _23, _18.fld0.2, _7.fld1, _18.fld2.1, _18.fld0.5);
_18.fld1 = [_18.fld0.5,_31.fld3.5,_18.fld0.5,_15.fld2,_31.fld3.5,_15.fld2,_18.fld0.5];
_31.fld2 = _30 as i16;
_13 = Adt46 { fld0: _18.fld2.1,fld1: _4.fld1,fld2: _7.fld2,fld3: _7.fld3 };
match _16 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
10151 => bb18,
_ => bb17
}
}
bb10 = {
_26.fld3 = core::ptr::addr_of_mut!(_16);
_16 = 10151_u16;
_20.2.0 = _20.0;
_9 = _15.fld0;
_22 = !_10;
_20.1.0 = _23;
_2.fld2 = _4.fld2;
_11 = core::ptr::addr_of_mut!(_26.fld0.1);
_5.fld3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_5.fld3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_17 = !159104954654484055722883662534022182543_u128;
_31.fld3.5 = !_18.fld0.5;
_20.1.1 = core::ptr::addr_of_mut!(_18.fld2.0);
_1 = _22 as i128;
_13.fld3 = _4.fld3;
Goto(bb9)
}
bb11 = {
_4.fld2 = _6;
_7.fld1 = _2.fld1;
_20.1.1 = core::ptr::addr_of_mut!(_18.fld2.0);
_26.fld0.1 = core::ptr::addr_of_mut!(_18.fld2.0);
Call(_19 = core::intrinsics::fmaf64(_15.fld0, _15.fld0, _15.fld0), ReturnTo(bb8), UnwindUnreachable())
}
bb12 = {
RET = _18.fld3 & _8;
_13 = Adt46 { fld0: _4.fld0,fld1: _4.fld1,fld2: _4.fld2,fld3: _2.fld3 };
_7.fld3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_17 = _18.fld3 as u128;
_23 = '\u{7febd}';
_5 = Adt46 { fld0: _7.fld0,fld1: _13.fld1,fld2: _4.fld2,fld3: _4.fld3 };
_5.fld0 = _2.fld0;
_9 = _15.fld0 - _15.fld0;
_10 = _22;
_4.fld1 = _2.fld1;
_7 = Adt46 { fld0: _18.fld0.4,fld1: _4.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_27 = 11413075177882285221_u64 as f64;
_18.fld0.2 = core::ptr::addr_of_mut!(_20.0);
_26.fld0.0 = _23;
_4.fld1 = [_17,_17];
_22 = _10 >= _10;
Call(_26.fld0.1 = fn14(_4, _5, _15, _18.fld0.5, _13), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
RET = !_20.1.2;
_18.fld3 = _20.1.2 - _20.1.2;
_20.0 = _14 & _14;
Call(_1 = core::intrinsics::transmute(_13.fld3), ReturnTo(bb6), UnwindUnreachable())
}
bb14 = {
_4.fld1 = [63941844197080567418102974814703394124_u128,258704482658141771253653112754474067851_u128];
_13 = _4;
_4.fld3 = [45356_u16,16711_u16,28862_u16,25670_u16,12906_u16,38688_u16,56345_u16,35096_u16];
_18.fld0.2 = core::ptr::addr_of_mut!(_14);
_13 = Adt46 { fld0: _7.fld0,fld1: _5.fld1,fld2: _4.fld2,fld3: _7.fld3 };
_18.fld0.5 = 3_usize >> _13.fld2;
_15.fld2 = !_18.fld0.5;
_15.fld4 = [_15.fld3];
_15.fld2 = _18.fld0.5 << _4.fld2;
_12 = !_5.fld2;
_18.fld0.4 = _7.fld0;
_15.fld1 = core::ptr::addr_of_mut!(_16);
RET = _8 + _8;
_15.fld0 = (-88_isize) as f64;
_15.fld4 = [_15.fld3];
_20.1.2 = -RET;
_15.fld0 = _4.fld2 as f64;
_2.fld3 = [21696_u16,42005_u16,5957_u16,32910_u16,57920_u16,48928_u16,34890_u16,29530_u16];
_18.fld0.3 = _7.fld1;
_12 = 4271789692_u32 as i128;
_18.fld0.0 = [50268881216648046517703706298602027728_u128,52317090924368466673515582803748387922_u128];
_3 = _6 + _5.fld2;
_3 = 2497802415_u32 as i128;
_20.3 = _10 as u8;
_15.fld4 = [_15.fld3];
_22 = _18.fld0.5 <= _18.fld0.5;
Call(_16 = core::intrinsics::transmute(_8), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_15.fld4 = [_15.fld3];
_7.fld0 = [_14,_14,_14,_14,_14,_14];
_2.fld0 = _5.fld0;
_2.fld1 = [118164345196117724478106022801373532489_u128,194148640208514227012494431079720938713_u128];
_5.fld0 = _2.fld0;
_15.fld1 = core::ptr::addr_of_mut!(_16);
_5.fld1 = [283182061388443543925619889138706290793_u128,251729674715900855796531538741463358319_u128];
Goto(bb4)
}
bb16 = {
_14 = (-3872336945863753017_i64) * 1813909212848735874_i64;
RET = 4_usize as i16;
RET = 69_i8 as i16;
_1 = 1468123962_i32 as i128;
_13 = Adt46 { fld0: _4.fld0,fld1: _2.fld1,fld2: _6,fld3: _5.fld3 };
_15.fld3 = (-22_i8) * (-112_i8);
_5.fld3 = [11253_u16,55095_u16,5018_u16,57254_u16,48808_u16,26010_u16,59687_u16,63803_u16];
_2.fld2 = 10427635129609005595_u64 as i128;
Call(_4 = fn13(_7.fld2, _5, RET, _2.fld3, _3, _3, _13.fld2, _13, _13.fld2, _3, _6, _5.fld2, _5.fld3, _13), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_7.fld1 = [236250304818109000906803085243357803507_u128,77423281912747702959849053041986758957_u128];
_13.fld3 = _7.fld3;
_5.fld3 = [15105_u16,11737_u16,20604_u16,27844_u16,26864_u16,3821_u16,52234_u16,54474_u16];
_6 = _3 | _3;
_7 = Adt46 { fld0: _2.fld0,fld1: _5.fld1,fld2: _4.fld2,fld3: _4.fld3 };
_10 = true;
_2.fld2 = _3;
_12 = _1;
Goto(bb2)
}
bb18 = {
_5 = _13;
_30 = -(-9223372036854775808_isize);
_34.fld1 = [_16,_16,_16,_16,_16,_16,_16,_16];
_34.fld0.2 = _26.fld0.2;
_2.fld1 = _13.fld1;
_18.fld2.1 = [_20.0,_20.2.0,_20.0,_14,_14,_14];
_26.fld3 = _15.fld1;
_31.fld3.0 = _7.fld1;
_23 = _31.fld3.1;
_7.fld3 = _5.fld3;
_21 = -_9;
_31.fld3.4 = _5.fld0;
Goto(bb19)
}
bb19 = {
Call(_42 = dump_var(12_usize, 25_usize, Move(_25), 22_usize, Move(_22), 23_usize, Move(_23), 30_usize, Move(_30)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(12_usize, 14_usize, Move(_14), 10_usize, Move(_10), 43_usize, _43, 43_usize, _43), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: i128,mut _2: Adt46,mut _3: i16,mut _4: [u16; 8],mut _5: i128,mut _6: i128,mut _7: i128,mut _8: Adt46,mut _9: i128,mut _10: i128,mut _11: i128,mut _12: i128,mut _13: [u16; 8],mut _14: Adt46) -> Adt46 {
mir! {
type RET = Adt46;
let _15: Adt55;
let _16: u32;
let _17: [i128; 6];
let _18: usize;
let _19: [usize; 7];
let _20: u128;
let _21: [i64; 6];
let _22: (f64, i8, [usize; 7], usize, i8);
let _23: ();
let _24: ();
{
_8.fld3 = _2.fld3;
RET.fld1 = [215126719120447214683045113433462528146_u128,15199614029561057038698841366033832792_u128];
_14.fld0 = [(-3155779454129270707_i64),8371258819191209500_i64,5578631328592549921_i64,(-759229449032448317_i64),1033571481906607751_i64,8697367427661804494_i64];
RET.fld1 = _14.fld1;
RET = Adt46 { fld0: _2.fld0,fld1: _2.fld1,fld2: _1,fld3: _14.fld3 };
RET.fld2 = 3357751083_u32 as i128;
_14.fld0 = [(-7612917648099351177_i64),8748428929435380401_i64,(-3860594352634623481_i64),3896670285783576883_i64,398735349840647239_i64,1823357852409583230_i64];
_14.fld3 = _8.fld3;
_6 = 17928738480340615368_u64 as i128;
_14.fld0 = [(-6000128899264332480_i64),2846325584253402603_i64,(-2961754972629584781_i64),5120519054674847293_i64,(-4196661917678629006_i64),6021611478564776069_i64];
_14.fld2 = _10;
RET.fld1 = _2.fld1;
_14 = _8;
_2.fld1 = [285726353558090689136384627812149979834_u128,241241198399056376519810046572577817867_u128];
_17 = [_7,_14.fld2,_9,_11,_7,_12];
_14.fld0 = RET.fld0;
_1 = !_11;
_1 = _9 * _8.fld2;
_3 = 66471889896158080608957419392415238787_u128 as i16;
RET.fld2 = 1_usize as i128;
_3 = (-32486_i16);
RET.fld3 = [4822_u16,52376_u16,27778_u16,10473_u16,62706_u16,46426_u16,20366_u16,57611_u16];
match _3 {
340282366920938463463374607431768178970 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_8.fld2 = _14.fld2 + _7;
RET.fld2 = _9 & _2.fld2;
_8 = _2;
_19 = [135793855262612641_usize,2_usize,4_usize,2508243228245073165_usize,2_usize,3_usize,11228278989490126690_usize];
_2 = RET;
_14.fld2 = RET.fld2;
_7 = _1;
_14.fld2 = false as i128;
_3 = '\u{7f996}' as i16;
Goto(bb3)
}
bb3 = {
Call(_23 = dump_var(13_usize, 10_usize, Move(_10), 12_usize, Move(_12), 6_usize, Move(_6), 11_usize, Move(_11)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_23 = dump_var(13_usize, 4_usize, Move(_4), 19_usize, Move(_19), 24_usize, _24, 24_usize, _24), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: Adt46,mut _2: Adt46,mut _3: Adt49,mut _4: usize,mut _5: Adt46) -> *mut [i8; 7] {
mir! {
type RET = *mut [i8; 7];
let _6: isize;
let _7: i16;
let _8: *mut [i8; 7];
let _9: [i64; 6];
let _10: Adt55;
let _11: f32;
let _12: i8;
let _13: (i32,);
let _14: u32;
let _15: char;
let _16: isize;
let _17: [bool; 6];
let _18: isize;
let _19: bool;
let _20: (f64, i8, [usize; 7], usize, i8);
let _21: *mut [i8; 7];
let _22: u32;
let _23: (i32,);
let _24: bool;
let _25: ();
let _26: ();
{
_5 = Adt46 { fld0: _2.fld0,fld1: _1.fld1,fld2: _2.fld2,fld3: _1.fld3 };
_3.fld0 = 15245615987967983186_u64 as f64;
_4 = !_3.fld2;
_5 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _1.fld3 };
_2.fld3 = [52743_u16,61334_u16,23666_u16,56603_u16,26114_u16,11739_u16,23929_u16,22288_u16];
_1 = Adt46 { fld0: _5.fld0,fld1: _2.fld1,fld2: _5.fld2,fld3: _2.fld3 };
_3.fld0 = _3.fld2 as f64;
_2.fld2 = '\u{8d40b}' as i128;
_5.fld3 = [30932_u16,51794_u16,11269_u16,47295_u16,23623_u16,43601_u16,53404_u16,59759_u16];
_2.fld0 = [(-6371997696674835809_i64),1160378624047434944_i64,4921146946179028924_i64,4783341026683414560_i64,(-598302195512671498_i64),(-862057970695809403_i64)];
Goto(bb1)
}
bb1 = {
_3.fld2 = !_4;
Goto(bb2)
}
bb2 = {
_1.fld1 = [60655755300407253948076759278298183636_u128,111394675646570530668106664876912470176_u128];
_3.fld4 = [_3.fld3];
_1.fld0 = [1257543639151419157_i64,3982188953421268962_i64,(-7687356483537281431_i64),(-5741154392016281517_i64),7250560679238426424_i64,5022699086401447916_i64];
_1 = _5;
_1.fld1 = _5.fld1;
Goto(bb3)
}
bb3 = {
_1.fld0 = [(-6439923120389464267_i64),(-2667302487999085220_i64),3347840082815536163_i64,(-834072315130286145_i64),(-3520881093964855527_i64),(-4370599096587145994_i64)];
_2.fld1 = [116733902602933058819245557800675134220_u128,38902503651254849904278864218206176876_u128];
_6 = !(-9223372036854775808_isize);
_1 = Adt46 { fld0: _2.fld0,fld1: _2.fld1,fld2: _5.fld2,fld3: _2.fld3 };
_2.fld1 = [97886235795666949124831005722548715395_u128,277442769947577582500554540142678809631_u128];
_3.fld4 = [_3.fld3];
_1.fld1 = _5.fld1;
_5.fld3 = [21901_u16,30491_u16,22305_u16,61728_u16,22757_u16,58467_u16,7324_u16,61102_u16];
_5 = Adt46 { fld0: _1.fld0,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_9 = [(-2454125558055626091_i64),(-1451367361218366384_i64),3640984477786688450_i64,8738863169041212747_i64,4656537958451081128_i64,(-2275095870735844236_i64)];
_5 = _1;
_1.fld2 = _5.fld2;
_7 = 10464_i16;
_5.fld0 = [338085728934220650_i64,(-1500888933316478633_i64),1716377790863482967_i64,(-843610660579252724_i64),7960470959515343320_i64,(-6587141212771329839_i64)];
_11 = _5.fld2 as f32;
_2.fld2 = _5.fld2 << _1.fld2;
_1.fld2 = _3.fld0 as i128;
_6 = 46_isize;
_2.fld3 = [61032_u16,47945_u16,30490_u16,18972_u16,6588_u16,11564_u16,7993_u16,4889_u16];
_1.fld2 = -_5.fld2;
_4 = !_3.fld2;
Goto(bb4)
}
bb4 = {
_13 = (1250683455_i32,);
_2.fld0 = [8798837731380332841_i64,(-5360027540463931438_i64),1406525289877094196_i64,2786693289010236279_i64,6221074104996901134_i64,8739265736898051520_i64];
_1.fld0 = [4932625870709406864_i64,489733876978956250_i64,4586735290979054153_i64,344434613432474953_i64,4073127832446399599_i64,8677719419745488062_i64];
_5.fld2 = _1.fld2 >> _4;
_4 = _3.fld2;
_2 = Adt46 { fld0: _5.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _1.fld3 };
_9 = [380135769053618764_i64,(-6998503824894175284_i64),(-54975786802843354_i64),4170755426891859429_i64,(-2900485214295232868_i64),(-3203469261351432538_i64)];
_2.fld1 = _1.fld1;
_13 = ((-877626034_i32),);
_5.fld2 = _1.fld2 << _2.fld2;
_14 = !2094875947_u32;
_3.fld3 = '\u{6c15a}' as i8;
_2.fld0 = [741103663602572894_i64,2742859426016483400_i64,(-2060797854160717638_i64),8649058642947272355_i64,6757156576954751708_i64,5304549107104542661_i64];
_5.fld1 = [107174053365805078684029413359560272433_u128,30988844548313044708752623267312836302_u128];
_1.fld3 = _2.fld3;
_15 = '\u{2db08}';
_1.fld3 = [10580_u16,62517_u16,10836_u16,4967_u16,2574_u16,19367_u16,56079_u16,56637_u16];
_1.fld2 = _11 as i128;
_2 = _5;
_4 = _3.fld2 << _1.fld2;
_5.fld2 = !_1.fld2;
_11 = 6227786962077409927_i64 as f32;
_6 = (-82_isize);
_2.fld1 = [134068013832321069294289378497864717951_u128,327200603423785869236440915824220208935_u128];
_2 = Adt46 { fld0: _5.fld0,fld1: _1.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_11 = 22146_u16 as f32;
_1.fld2 = 58_u8 as i128;
Goto(bb5)
}
bb5 = {
_2.fld1 = _1.fld1;
_14 = !1081057767_u32;
_1.fld2 = !_5.fld2;
_16 = !_6;
_5.fld0 = [347374224872908564_i64,3018667596793295831_i64,2336382506177873596_i64,(-3275339337209301427_i64),(-8715071270596498582_i64),(-1055964097382302152_i64)];
_7 = 593_i16 << _2.fld2;
_1.fld3 = [29907_u16,34924_u16,22967_u16,32028_u16,11473_u16,52655_u16,30838_u16,23317_u16];
_7 = 26693_i16;
_17 = [true,false,true,true,true,false];
_1.fld3 = [63680_u16,21146_u16,52770_u16,52765_u16,41228_u16,44445_u16,39600_u16,14266_u16];
_16 = !_6;
_5.fld1 = [157346791849517940348876635215092308382_u128,118788191482228392783797272654814747258_u128];
_11 = 23342129086688037119825474589150916026_u128 as f32;
_15 = '\u{42274}';
_5.fld3 = [26079_u16,50045_u16,5967_u16,47787_u16,40940_u16,60643_u16,32069_u16,1169_u16];
_16 = _6 >> _3.fld2;
_1 = Adt46 { fld0: _5.fld0,fld1: _5.fld1,fld2: _5.fld2,fld3: _2.fld3 };
_5 = _1;
_1.fld2 = !_5.fld2;
_7 = 2359588166368184247_u64 as i16;
_12 = _3.fld3 | _3.fld3;
_3.fld2 = _4;
_5.fld3 = [22535_u16,13879_u16,37492_u16,61514_u16,41772_u16,62076_u16,24876_u16,20555_u16];
_5.fld1 = _2.fld1;
_3.fld3 = _12 - _12;
_20.0 = _3.fld0 - _3.fld0;
Call(_1.fld1 = core::intrinsics::transmute(_2.fld1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_20.2 = [_4,_3.fld2,_3.fld2,_4,_4,_3.fld2,_3.fld2];
_6 = _16 * _16;
_17 = [false,false,false,false,true,true];
_1.fld0 = [8359829795696307543_i64,5656412401537873188_i64,(-4420105533071023358_i64),(-1274190434930872020_i64),(-5278794279139703141_i64),(-4615949241427880199_i64)];
_18 = 687538516880285274_u64 as isize;
_9 = [462784045144925938_i64,8643108126638812271_i64,(-1431451287825433735_i64),(-3904756967210355447_i64),9182787780423931094_i64,(-8210488519940944076_i64)];
_5.fld0 = [(-2520846044225907543_i64),849502285702378942_i64,51708571807301194_i64,(-703659871625428670_i64),(-8466642818092568729_i64),(-991629635243708255_i64)];
_2 = _1;
_20.3 = _15 as usize;
_2.fld0 = [(-7867310249830607801_i64),(-621235136301480361_i64),(-6489154417976221181_i64),(-7490327688966372131_i64),6989547068910613306_i64,3768607777403422409_i64];
_2.fld0 = _5.fld0;
_7 = -(-22914_i16);
_20.0 = _3.fld0;
_5 = Adt46 { fld0: _2.fld0,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_1 = Adt46 { fld0: _9,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_20.1 = _3.fld3 & _3.fld3;
_9 = [7495165755858360314_i64,8312477964946930775_i64,6467337994840006601_i64,(-256866049878679582_i64),(-5121456767954581594_i64),(-3580824403485546857_i64)];
_1.fld2 = _7 as i128;
_13.0 = 419352152_i32;
_2 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_3.fld0 = _20.0;
_6 = _16;
Call(_21 = fn15(_16, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_8 = _21;
_3.fld2 = _14 as usize;
_1.fld2 = -_5.fld2;
RET = _8;
_20.4 = _3.fld3;
_14 = 3982140854_u32 ^ 1485876853_u32;
_16 = !_6;
_5.fld1 = [31028593906827849434801192803029112715_u128,222765862750877291516386067623777469428_u128];
_23 = (_13.0,);
_21 = RET;
match _13.0 {
419352152 => bb9,
_ => bb8
}
}
bb8 = {
_20.2 = [_4,_3.fld2,_3.fld2,_4,_4,_3.fld2,_3.fld2];
_6 = _16 * _16;
_17 = [false,false,false,false,true,true];
_1.fld0 = [8359829795696307543_i64,5656412401537873188_i64,(-4420105533071023358_i64),(-1274190434930872020_i64),(-5278794279139703141_i64),(-4615949241427880199_i64)];
_18 = 687538516880285274_u64 as isize;
_9 = [462784045144925938_i64,8643108126638812271_i64,(-1431451287825433735_i64),(-3904756967210355447_i64),9182787780423931094_i64,(-8210488519940944076_i64)];
_5.fld0 = [(-2520846044225907543_i64),849502285702378942_i64,51708571807301194_i64,(-703659871625428670_i64),(-8466642818092568729_i64),(-991629635243708255_i64)];
_2 = _1;
_20.3 = _15 as usize;
_2.fld0 = [(-7867310249830607801_i64),(-621235136301480361_i64),(-6489154417976221181_i64),(-7490327688966372131_i64),6989547068910613306_i64,3768607777403422409_i64];
_2.fld0 = _5.fld0;
_7 = -(-22914_i16);
_20.0 = _3.fld0;
_5 = Adt46 { fld0: _2.fld0,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_1 = Adt46 { fld0: _9,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_20.1 = _3.fld3 & _3.fld3;
_9 = [7495165755858360314_i64,8312477964946930775_i64,6467337994840006601_i64,(-256866049878679582_i64),(-5121456767954581594_i64),(-3580824403485546857_i64)];
_1.fld2 = _7 as i128;
_13.0 = 419352152_i32;
_2 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_3.fld0 = _20.0;
_6 = _16;
Call(_21 = fn15(_16, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb9 = {
_19 = true & true;
_1 = _2;
_22 = _14 - _14;
_3.fld3 = _20.1 << _6;
_1.fld3 = [5929_u16,7734_u16,504_u16,5044_u16,10272_u16,59023_u16,10183_u16,13109_u16];
match _13.0 {
0 => bb7,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
419352152 => bb16,
_ => bb15
}
}
bb10 = {
_1.fld1 = [60655755300407253948076759278298183636_u128,111394675646570530668106664876912470176_u128];
_3.fld4 = [_3.fld3];
_1.fld0 = [1257543639151419157_i64,3982188953421268962_i64,(-7687356483537281431_i64),(-5741154392016281517_i64),7250560679238426424_i64,5022699086401447916_i64];
_1 = _5;
_1.fld1 = _5.fld1;
Goto(bb3)
}
bb11 = {
_3.fld2 = !_4;
Goto(bb2)
}
bb12 = {
_20.2 = [_4,_3.fld2,_3.fld2,_4,_4,_3.fld2,_3.fld2];
_6 = _16 * _16;
_17 = [false,false,false,false,true,true];
_1.fld0 = [8359829795696307543_i64,5656412401537873188_i64,(-4420105533071023358_i64),(-1274190434930872020_i64),(-5278794279139703141_i64),(-4615949241427880199_i64)];
_18 = 687538516880285274_u64 as isize;
_9 = [462784045144925938_i64,8643108126638812271_i64,(-1431451287825433735_i64),(-3904756967210355447_i64),9182787780423931094_i64,(-8210488519940944076_i64)];
_5.fld0 = [(-2520846044225907543_i64),849502285702378942_i64,51708571807301194_i64,(-703659871625428670_i64),(-8466642818092568729_i64),(-991629635243708255_i64)];
_2 = _1;
_20.3 = _15 as usize;
_2.fld0 = [(-7867310249830607801_i64),(-621235136301480361_i64),(-6489154417976221181_i64),(-7490327688966372131_i64),6989547068910613306_i64,3768607777403422409_i64];
_2.fld0 = _5.fld0;
_7 = -(-22914_i16);
_20.0 = _3.fld0;
_5 = Adt46 { fld0: _2.fld0,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_1 = Adt46 { fld0: _9,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_20.1 = _3.fld3 & _3.fld3;
_9 = [7495165755858360314_i64,8312477964946930775_i64,6467337994840006601_i64,(-256866049878679582_i64),(-5121456767954581594_i64),(-3580824403485546857_i64)];
_1.fld2 = _7 as i128;
_13.0 = 419352152_i32;
_2 = Adt46 { fld0: _1.fld0,fld1: _1.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_3.fld0 = _20.0;
_6 = _16;
Call(_21 = fn15(_16, _6), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
_2.fld1 = _1.fld1;
_14 = !1081057767_u32;
_1.fld2 = !_5.fld2;
_16 = !_6;
_5.fld0 = [347374224872908564_i64,3018667596793295831_i64,2336382506177873596_i64,(-3275339337209301427_i64),(-8715071270596498582_i64),(-1055964097382302152_i64)];
_7 = 593_i16 << _2.fld2;
_1.fld3 = [29907_u16,34924_u16,22967_u16,32028_u16,11473_u16,52655_u16,30838_u16,23317_u16];
_7 = 26693_i16;
_17 = [true,false,true,true,true,false];
_1.fld3 = [63680_u16,21146_u16,52770_u16,52765_u16,41228_u16,44445_u16,39600_u16,14266_u16];
_16 = !_6;
_5.fld1 = [157346791849517940348876635215092308382_u128,118788191482228392783797272654814747258_u128];
_11 = 23342129086688037119825474589150916026_u128 as f32;
_15 = '\u{42274}';
_5.fld3 = [26079_u16,50045_u16,5967_u16,47787_u16,40940_u16,60643_u16,32069_u16,1169_u16];
_16 = _6 >> _3.fld2;
_1 = Adt46 { fld0: _5.fld0,fld1: _5.fld1,fld2: _5.fld2,fld3: _2.fld3 };
_5 = _1;
_1.fld2 = !_5.fld2;
_7 = 2359588166368184247_u64 as i16;
_12 = _3.fld3 | _3.fld3;
_3.fld2 = _4;
_5.fld3 = [22535_u16,13879_u16,37492_u16,61514_u16,41772_u16,62076_u16,24876_u16,20555_u16];
_5.fld1 = _2.fld1;
_3.fld3 = _12 - _12;
_20.0 = _3.fld0 - _3.fld0;
Call(_1.fld1 = core::intrinsics::transmute(_2.fld1), ReturnTo(bb6), UnwindUnreachable())
}
bb14 = {
_13 = (1250683455_i32,);
_2.fld0 = [8798837731380332841_i64,(-5360027540463931438_i64),1406525289877094196_i64,2786693289010236279_i64,6221074104996901134_i64,8739265736898051520_i64];
_1.fld0 = [4932625870709406864_i64,489733876978956250_i64,4586735290979054153_i64,344434613432474953_i64,4073127832446399599_i64,8677719419745488062_i64];
_5.fld2 = _1.fld2 >> _4;
_4 = _3.fld2;
_2 = Adt46 { fld0: _5.fld0,fld1: _1.fld1,fld2: _1.fld2,fld3: _1.fld3 };
_9 = [380135769053618764_i64,(-6998503824894175284_i64),(-54975786802843354_i64),4170755426891859429_i64,(-2900485214295232868_i64),(-3203469261351432538_i64)];
_2.fld1 = _1.fld1;
_13 = ((-877626034_i32),);
_5.fld2 = _1.fld2 << _2.fld2;
_14 = !2094875947_u32;
_3.fld3 = '\u{6c15a}' as i8;
_2.fld0 = [741103663602572894_i64,2742859426016483400_i64,(-2060797854160717638_i64),8649058642947272355_i64,6757156576954751708_i64,5304549107104542661_i64];
_5.fld1 = [107174053365805078684029413359560272433_u128,30988844548313044708752623267312836302_u128];
_1.fld3 = _2.fld3;
_15 = '\u{2db08}';
_1.fld3 = [10580_u16,62517_u16,10836_u16,4967_u16,2574_u16,19367_u16,56079_u16,56637_u16];
_1.fld2 = _11 as i128;
_2 = _5;
_4 = _3.fld2 << _1.fld2;
_5.fld2 = !_1.fld2;
_11 = 6227786962077409927_i64 as f32;
_6 = (-82_isize);
_2.fld1 = [134068013832321069294289378497864717951_u128,327200603423785869236440915824220208935_u128];
_2 = Adt46 { fld0: _5.fld0,fld1: _1.fld1,fld2: _5.fld2,fld3: _5.fld3 };
_11 = 22146_u16 as f32;
_1.fld2 = 58_u8 as i128;
Goto(bb5)
}
bb15 = {
_1.fld0 = [(-6439923120389464267_i64),(-2667302487999085220_i64),3347840082815536163_i64,(-834072315130286145_i64),(-3520881093964855527_i64),(-4370599096587145994_i64)];
_2.fld1 = [116733902602933058819245557800675134220_u128,38902503651254849904278864218206176876_u128];
_6 = !(-9223372036854775808_isize);
_1 = Adt46 { fld0: _2.fld0,fld1: _2.fld1,fld2: _5.fld2,fld3: _2.fld3 };
_2.fld1 = [97886235795666949124831005722548715395_u128,277442769947577582500554540142678809631_u128];
_3.fld4 = [_3.fld3];
_1.fld1 = _5.fld1;
_5.fld3 = [21901_u16,30491_u16,22305_u16,61728_u16,22757_u16,58467_u16,7324_u16,61102_u16];
_5 = Adt46 { fld0: _1.fld0,fld1: _2.fld1,fld2: _2.fld2,fld3: _2.fld3 };
_9 = [(-2454125558055626091_i64),(-1451367361218366384_i64),3640984477786688450_i64,8738863169041212747_i64,4656537958451081128_i64,(-2275095870735844236_i64)];
_5 = _1;
_1.fld2 = _5.fld2;
_7 = 10464_i16;
_5.fld0 = [338085728934220650_i64,(-1500888933316478633_i64),1716377790863482967_i64,(-843610660579252724_i64),7960470959515343320_i64,(-6587141212771329839_i64)];
_11 = _5.fld2 as f32;
_2.fld2 = _5.fld2 << _1.fld2;
_1.fld2 = _3.fld0 as i128;
_6 = 46_isize;
_2.fld3 = [61032_u16,47945_u16,30490_u16,18972_u16,6588_u16,11564_u16,7993_u16,4889_u16];
_1.fld2 = -_5.fld2;
_4 = !_3.fld2;
Goto(bb4)
}
bb16 = {
_8 = RET;
_15 = '\u{6c863}';
_18 = _16;
_14 = _22 << _18;
_23 = (_13.0,);
Goto(bb17)
}
bb17 = {
Call(_25 = dump_var(14_usize, 4_usize, Move(_4), 9_usize, Move(_9), 16_usize, Move(_16), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_25 = dump_var(14_usize, 15_usize, Move(_15), 6_usize, Move(_6), 14_usize, Move(_14), 26_usize, _26), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: isize,mut _2: isize) -> *mut [i8; 7] {
mir! {
type RET = *mut [i8; 7];
let _3: ([i8; 7], [i64; 6]);
let _4: [u128; 2];
let _5: usize;
let _6: Adt57;
let _7: u128;
let _8: i128;
let _9: (f64, [u128; 2], [usize; 7]);
let _10: isize;
let _11: (i32,);
let _12: u128;
let _13: f64;
let _14: u128;
let _15: char;
let _16: i32;
let _17: u8;
let _18: f64;
let _19: char;
let _20: f64;
let _21: bool;
let _22: f64;
let _23: bool;
let _24: Adt57;
let _25: i8;
let _26: [i128; 6];
let _27: char;
let _28: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize);
let _29: u64;
let _30: i64;
let _31: Adt53;
let _32: (u128,);
let _33: isize;
let _34: Adt45;
let _35: [u128; 2];
let _36: u16;
let _37: f32;
let _38: Adt55;
let _39: (*mut i64, i16);
let _40: u8;
let _41: bool;
let _42: ();
let _43: ();
{
_2 = 8894353430894308539_u64 as isize;
_1 = -_2;
_1 = !_2;
_1 = _2 - _2;
_2 = _1;
_2 = (-7877459998350008794_i64) as isize;
Goto(bb1)
}
bb1 = {
_3.0 = [90_i8,(-34_i8),(-44_i8),(-93_i8),47_i8,(-8_i8),(-21_i8)];
_3.1 = [1043028881915897958_i64,7132850512452354361_i64,704174032173520741_i64,925688363415384917_i64,(-3962800191242106573_i64),(-4544769653080002126_i64)];
_3.1 = [4645625448087005506_i64,7836055155260666166_i64,(-9195219381808809524_i64),(-1309955034650514362_i64),3096094991839261317_i64,(-8425933085262674838_i64)];
RET = core::ptr::addr_of_mut!(_3.0);
_1 = _2;
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
_3.0 = [24_i8,46_i8,93_i8,13_i8,(-54_i8),(-108_i8),110_i8];
_3.1 = [3819291345766951070_i64,(-1996747304119823043_i64),(-5053184006345359252_i64),6439580740994015650_i64,8249502513174896914_i64,6930568077418483497_i64];
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!(_3.0);
_3.0 = [(-17_i8),(-13_i8),(-94_i8),107_i8,117_i8,110_i8,93_i8];
Goto(bb2)
}
bb2 = {
_4 = [308117320889070926826519772289469038382_u128,47163887987426566059628920919441507235_u128];
RET = core::ptr::addr_of_mut!(_3.0);
_3.0 = [(-44_i8),(-128_i8),(-12_i8),17_i8,(-104_i8),(-62_i8),(-75_i8)];
_5 = 2_usize & 14650119275448291126_usize;
_3.1 = [(-8633164414100094049_i64),3985111473505997008_i64,(-8531856601591885014_i64),(-3893471378537166988_i64),9072530703090076576_i64,(-2489633853646668833_i64)];
Goto(bb3)
}
bb3 = {
_4 = [314520222107866954109842611539839498252_u128,298647069715021148065950127991496358288_u128];
_4 = [20968156453040196520293579624813541905_u128,51831033050177557277053006556655721160_u128];
_3.1 = [(-5137614400771595117_i64),(-8939082153472402942_i64),(-5473344854772913464_i64),(-4205472023867576923_i64),5630753706705334418_i64,7954799793188744492_i64];
RET = core::ptr::addr_of_mut!((*RET));
_5 = 2922036497380063302_usize + 1_usize;
_3.1 = [(-1954590682059438058_i64),(-8579739571619762381_i64),(-4780359494203620102_i64),(-8387809054944352623_i64),1107932746432875607_i64,4893560861667156062_i64];
_7 = 192491750696271683182081173003275282378_u128;
RET = core::ptr::addr_of_mut!((*RET));
_3.1 = [(-6802109016010480335_i64),(-3811090791707092977_i64),(-7872979636372028629_i64),5207058078255914894_i64,4723717730336020497_i64,3597717915047342585_i64];
_2 = _1 << _1;
_7 = !329032711423190606381891724559977827417_u128;
RET = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
_4 = [_7,_7];
_3.0 = [(-80_i8),51_i8,13_i8,70_i8,87_i8,(-126_i8),9_i8];
_1 = _2;
_7 = 45788_u16 as u128;
_4 = [_7,_7];
_3.0 = [(-58_i8),(-3_i8),33_i8,13_i8,(-108_i8),(-113_i8),(-95_i8)];
_8 = '\u{ed6c8}' as i128;
_2 = _1;
Goto(bb4)
}
bb4 = {
_9.0 = 2410788871_u32 as f64;
_10 = _2 ^ _1;
_1 = _2 >> _10;
_9.2 = [_5,_5,_5,_5,_5,_5,_5];
RET = core::ptr::addr_of_mut!(_3.0);
_9.0 = 15636909829941414240_u64 as f64;
_7 = 139898570891658500744830719257325415529_u128 + 274681756801187086424010673739679621534_u128;
_9.0 = _5 as f64;
_11 = ((-1781537388_i32),);
_7 = 3476466463911823487_i64 as u128;
_11.0 = -568558414_i32;
_1 = '\u{107eb9}' as isize;
_4 = [_7,_7];
_9.0 = _11.0 as f64;
_1 = _2;
_9.0 = _1 as f64;
_9.0 = 172_u8 as f64;
Goto(bb5)
}
bb5 = {
_2 = !_10;
RET = core::ptr::addr_of_mut!((*RET));
_11.0 = 244831873_u32 as i32;
_9.1 = [_7,_7];
_7 = 257097262985113885410301933377941135570_u128;
_11.0 = true as i32;
_3.0 = [106_i8,113_i8,(-70_i8),60_i8,(-24_i8),(-68_i8),(-113_i8)];
_8 = (-101367962237279715173440059968667635566_i128);
_13 = -_9.0;
Call(_5 = core::intrinsics::bswap(6_usize), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_7 = !260187874411448550437325769597003541255_u128;
_5 = 4_usize;
_9.2[_5] = _5 ^ _5;
Call(_10 = fn16(RET, _1, (*RET)[_5], _3.1[_5], _2, (*RET)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_14 = '\u{67629}' as u128;
_15 = '\u{20be3}';
_15 = '\u{2fa94}';
_16 = (-26362_i16) as i32;
_9.0 = _14 as f64;
_5 = _15 as usize;
RET = core::ptr::addr_of_mut!((*RET));
_16 = _15 as i32;
_8 = 9297777439724080295428834305953838900_i128;
_13 = _9.0;
_11 = (_16,);
_4 = [_14,_7];
_1 = _2 | _10;
RET = core::ptr::addr_of_mut!((*RET));
_9.1 = _4;
_3.1 = [(-2720735224766350809_i64),(-4016586936343463959_i64),5588813712881501943_i64,(-4090324952224482049_i64),(-1383306483105220583_i64),(-4750456855212600969_i64)];
_19 = _15;
_19 = _15;
_4 = [_7,_7];
RET = core::ptr::addr_of_mut!((*RET));
_7 = !_14;
_7 = _14 & _14;
_2 = 164668791282519315_i64 as isize;
_12 = _15 as u128;
match _8 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
5 => bb8,
6 => bb9,
9297777439724080295428834305953838900 => bb11,
_ => bb10
}
}
bb8 = {
_7 = !260187874411448550437325769597003541255_u128;
_5 = 4_usize;
_9.2[_5] = _5 ^ _5;
Call(_10 = fn16(RET, _1, (*RET)[_5], _3.1[_5], _2, (*RET)), ReturnTo(bb7), UnwindUnreachable())
}
bb9 = {
_2 = !_10;
RET = core::ptr::addr_of_mut!((*RET));
_11.0 = 244831873_u32 as i32;
_9.1 = [_7,_7];
_7 = 257097262985113885410301933377941135570_u128;
_11.0 = true as i32;
_3.0 = [106_i8,113_i8,(-70_i8),60_i8,(-24_i8),(-68_i8),(-113_i8)];
_8 = (-101367962237279715173440059968667635566_i128);
_13 = -_9.0;
Call(_5 = core::intrinsics::bswap(6_usize), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_4 = [308117320889070926826519772289469038382_u128,47163887987426566059628920919441507235_u128];
RET = core::ptr::addr_of_mut!(_3.0);
_3.0 = [(-44_i8),(-128_i8),(-12_i8),17_i8,(-104_i8),(-62_i8),(-75_i8)];
_5 = 2_usize & 14650119275448291126_usize;
_3.1 = [(-8633164414100094049_i64),3985111473505997008_i64,(-8531856601591885014_i64),(-3893471378537166988_i64),9072530703090076576_i64,(-2489633853646668833_i64)];
Goto(bb3)
}
bb11 = {
_3.1 = [(-5828883691902834334_i64),(-4783168619382084958_i64),(-5671100875632708742_i64),7565381149254420884_i64,8652446258524909503_i64,5084438743991193435_i64];
_8 = !132555833838395370156507750128925158482_i128;
_9.2 = [_5,_5,_5,_5,_5,_5,_5];
_1 = !_10;
_26 = [_8,_8,_8,_8,_8,_8];
_10 = _8 as isize;
_23 = false;
_12 = !_7;
_22 = _13 * _9.0;
_9.1 = [_14,_12];
RET = core::ptr::addr_of_mut!((*RET));
_3.1 = [3743722148691605854_i64,(-378632746264236806_i64),1499573750394791597_i64,4776984581584680241_i64,551787342165550700_i64,7092511174405350114_i64];
Goto(bb12)
}
bb12 = {
_27 = _15;
_10 = !_1;
_21 = !_23;
_13 = _22 - _22;
_18 = _13;
_14 = _7;
_2 = !_1;
_27 = _19;
_26 = [_8,_8,_8,_8,_8,_8];
RET = core::ptr::addr_of_mut!((*RET));
_28.5 = _8 as usize;
_28.1 = _19;
_2 = !_10;
RET = core::ptr::addr_of_mut!((*RET));
_21 = !_23;
_28.3 = _4;
_5 = _21 as usize;
_3.0 = [96_i8,78_i8,(-33_i8),17_i8,(-110_i8),94_i8,(-82_i8)];
_28.4 = _3.1;
_20 = 12143_u16 as f64;
_28.1 = _19;
_32 = (_12,);
_3.0 = [(-68_i8),71_i8,32_i8,54_i8,(-53_i8),19_i8,(-113_i8)];
_11.0 = _16 - _16;
_25 = -(-88_i8);
Goto(bb13)
}
bb13 = {
_5 = _8 as usize;
_10 = -_2;
_14 = 1757161852_u32 as u128;
_9.0 = -_13;
_33 = 8593801604506609796_u64 as isize;
_28.0 = [_12,_14];
_2 = _10 | _10;
_11.0 = _16 ^ _16;
_13 = _11.0 as f64;
_27 = _15;
_35 = [_32.0,_14];
_9.0 = -_18;
_22 = _8 as f64;
_9.1 = [_12,_12];
_36 = 12758_u16;
_30 = 3383451436101332305_i64;
_28.4 = [_30,_30,_30,_30,_30,_30];
_2 = _1;
_11.0 = _14 as i32;
_4 = [_32.0,_32.0];
Goto(bb14)
}
bb14 = {
_28.2 = core::ptr::addr_of_mut!(_30);
RET = core::ptr::addr_of_mut!(_3.0);
_32 = (_12,);
_21 = _32.0 < _32.0;
_26 = [_8,_8,_8,_8,_8,_8];
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(15_usize, 10_usize, Move(_10), 19_usize, Move(_19), 27_usize, Move(_27), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(15_usize, 25_usize, Move(_25), 15_usize, Move(_15), 23_usize, Move(_23), 33_usize, Move(_33)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(15_usize, 8_usize, Move(_8), 3_usize, Move(_3), 26_usize, Move(_26), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: *mut [i8; 7],mut _2: isize,mut _3: i8,mut _4: i64,mut _5: isize,mut _6: [i8; 7]) -> isize {
mir! {
type RET = isize;
let _7: bool;
let _8: isize;
let _9: [i8; 7];
let _10: isize;
let _11: f32;
let _12: (f64, i8, [usize; 7], usize, i8);
let _13: u128;
let _14: [i128; 6];
let _15: Adt59;
let _16: f32;
let _17: f64;
let _18: ([i8; 7], [i64; 6]);
let _19: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize);
let _20: Adt45;
let _21: char;
let _22: bool;
let _23: (i32,);
let _24: char;
let _25: bool;
let _26: i32;
let _27: f32;
let _28: Adt57;
let _29: [u128; 2];
let _30: [i64; 6];
let _31: char;
let _32: [char; 6];
let _33: (u32,);
let _34: Adt44;
let _35: Adt55;
let _36: f64;
let _37: ();
let _38: ();
{
RET = _5;
_5 = _2 + RET;
RET = _3 as isize;
_4 = 1261914783_u32 as i64;
Goto(bb1)
}
bb1 = {
RET = _5 * _5;
_5 = -_2;
_1 = core::ptr::addr_of_mut!(_6);
_5 = RET ^ RET;
_3 = (-726811250_i32) as i8;
RET = -_5;
_1 = core::ptr::addr_of_mut!((*_1));
_4 = 32799_u16 as i64;
_5 = '\u{6ccb9}' as isize;
_3 = 54_i8;
_7 = !true;
_3 = 154550602839364358422081118591989723032_u128 as i8;
_6 = [_3,_3,_3,_3,_3,_3,_3];
_6 = [_3,_3,_3,_3,_3,_3,_3];
_1 = core::ptr::addr_of_mut!(_6);
_7 = false ^ true;
_2 = 10170300160454782849_u64 as isize;
_4 = 48195_u16 as i64;
_6 = [_3,_3,_3,_3,_3,_3,_3];
_7 = !false;
RET = 3_usize as isize;
_4 = (-452456391_i32) as i64;
RET = _5 | _5;
_1 = core::ptr::addr_of_mut!((*_1));
_3 = 12766944692650298982_u64 as i8;
_5 = RET;
Call(_3 = fn17(RET, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = 185_u8 as isize;
_4 = 6714745057529651600_i64 * 63963601790572976_i64;
_9 = [_3,_3,_3,_3,_3,_3,_3];
_6 = [_3,_3,_3,_3,_3,_3,_3];
_10 = -_5;
RET = _5 + _2;
_5 = _4 as isize;
_12.4 = 29506_u16 as i8;
Goto(bb3)
}
bb3 = {
RET = !_5;
_7 = false;
_4 = (-439145122372976076_i64) >> _2;
_7 = !false;
_8 = _10;
_10 = _8;
_12.2 = [1_usize,0_usize,9401892065223603305_usize,14099690231429462149_usize,15756581138662784984_usize,3_usize,5_usize];
_5 = -RET;
_11 = 70522954381444725055879821556529056819_i128 as f32;
_5 = -_8;
_6 = _9;
RET = 267227571071181872719787033161985740748_u128 as isize;
_12.3 = !7_usize;
_6 = _9;
_9 = [_12.4,_12.4,_12.4,_12.4,_12.4,_12.4,_12.4];
_9 = [_12.4,_3,_12.4,_3,_12.4,_12.4,_3];
_12.0 = 1229826256_u32 as f64;
_1 = core::ptr::addr_of_mut!((*_1));
_12.4 = !_3;
RET = _8 & _8;
_10 = 5654_u16 as isize;
_13 = 152571404915687589997047633661155441315_u128 - 38066054975798098649205174941462889416_u128;
_14 = [(-12001771436614835377106042154507424544_i128),54818758299059231522831141857005725190_i128,(-163463953029434360774967725468063390116_i128),(-110990272608247399354357473046758560392_i128),(-169652317427184130691105280075863882187_i128),(-83574267459755815637099667537378756105_i128)];
_4 = _3 as i64;
_2 = _10;
_7 = _12.0 != _12.0;
_7 = false ^ false;
_12.4 = -_3;
Call(_12.1 = core::intrinsics::bswap(_3), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
RET = _5;
_4 = 136315903616502860759058149629240295897_i128 as i64;
_10 = -_2;
_4 = !8889247020164990062_i64;
_1 = core::ptr::addr_of_mut!(_9);
_11 = 1100925938_i32 as f32;
_8 = RET;
_12.2 = [_12.3,_12.3,_12.3,_12.3,_12.3,_12.3,_12.3];
_2 = _5 * _5;
RET = _5 << _2;
_12.4 = _3 << _4;
_14 = [(-61147487893125136748091872211358326518_i128),131512086036174121860162218656651431027_i128,(-47880619532905432812293173859306847378_i128),101499537465197811323972724767479768493_i128,(-130181295381331480349314595249418402764_i128),(-140787747849810680076510884143801257690_i128)];
_14 = [(-3303770584916679630491567159351470221_i128),(-54852331093167258396879093318293437431_i128),(-126974114821386930947231948468117969362_i128),8977602999104322926386469555854997092_i128,(-54418392843909548144109272096096603401_i128),58305554181702906295109667418098251027_i128];
_3 = -_12.4;
_12.4 = _12.3 as i8;
_14 = [(-101359039393830998234701462519050715514_i128),(-111369420258656147546916319481973331078_i128),54173996045486066774733814360853392386_i128,8879406476322754271615734334004305938_i128,52417898078621074412144486404857864993_i128,100388167591518342360186738276119024984_i128];
_14 = [75369240432130166447655315015114659816_i128,(-13959757259914836063704556407138931024_i128),(-68842790763428772670683284735323821207_i128),(-140370212514912219126371581231928317951_i128),(-38320429490849690122577397141961288806_i128),66637029927981571289318218204678995299_i128];
_13 = 329749104420157835810659222144353435939_u128;
_2 = RET;
_13 = _4 as u128;
_9 = _6;
_12.0 = 44701_u16 as f64;
RET = 949028999_u32 as isize;
_11 = 14845261949200704012_u64 as f32;
_14 = [131630641436796299401043775686190540178_i128,(-142108534566902527419815898708043857835_i128),64745759993419521907350912545833857423_i128,112143287916426134023024347879130780442_i128,(-146937971637155964096679466661684505059_i128),(-124107365951693554827148030277339647994_i128)];
_14 = [143463046495610607213488843091436443937_i128,(-80470468661697452497865991344201314731_i128),120183112867395766542590213151651718712_i128,(-2559493760654422738088919422165600440_i128),(-44462100706421097832885805072987643743_i128),111427482684692395156032473037983572123_i128];
RET = _5;
Goto(bb5)
}
bb5 = {
_12.2 = [_12.3,_12.3,_12.3,_12.3,_12.3,_12.3,_12.3];
RET = _8 >> _12.3;
_12.4 = _3;
_2 = -RET;
_4 = 5557162011984834097_i64;
_6 = (*_1);
_2 = !RET;
_4 = '\u{37401}' as i64;
_12.2 = [_12.3,_12.3,_12.3,_12.3,_12.3,_12.3,_12.3];
_14 = [6580639893112213130987874786601989802_i128,46099079733045797132890082541075083332_i128,157038752042295001652672012173008148414_i128,(-149754791455916231700826177018133235241_i128),(-75608186431995411381055113191794316502_i128),69652136879668754254632841521959503890_i128];
_19.2 = core::ptr::addr_of_mut!(_4);
Goto(bb6)
}
bb6 = {
_11 = 2111360743_u32 as f32;
Goto(bb7)
}
bb7 = {
_3 = _12.4 << _13;
_7 = _2 <= RET;
_16 = _11;
_19.5 = _12.3 | _12.3;
_17 = _12.0;
_5 = _8 >> _12.4;
_14 = [(-45936093104217345120960270115150151724_i128),146171507400732667179982843909938482444_i128,121692932257095482936234397228730324893_i128,18460150137904363733368856459003109157_i128,(-132145980010988240682552305517901953305_i128),(-101945832226027330218522508232918630687_i128)];
_6 = [_3,_3,_3,_12.4,_12.4,_3,_3];
_1 = core::ptr::addr_of_mut!(_18.0);
_6 = _9;
_8 = 15981942769798657105_u64 as isize;
_19.0 = [_13,_13];
_16 = _11 * _11;
_19.5 = !_12.3;
_12.1 = _16 as i8;
_19.5 = _12.3;
_12.1 = _3;
_12.3 = !_19.5;
_19.5 = _12.3;
_13 = !377072005786575654140583305468181067_u128;
_12.2 = [_19.5,_12.3,_12.3,_12.3,_19.5,_12.3,_19.5];
_17 = _12.0 + _12.0;
_17 = _12.0 - _12.0;
_17 = -_12.0;
Goto(bb8)
}
bb8 = {
_12.0 = _17;
RET = !_5;
_14 = [158832923352270419684659227200818250441_i128,64961848997776113621703941537240220961_i128,(-18947738995770838929295787077387729183_i128),(-38634465810632019354933327561163403087_i128),(-56753365739708124120483238185887809008_i128),(-102490880297749805860358266442922439375_i128)];
_21 = '\u{9dae0}';
_7 = !true;
_12.4 = _3 - _3;
_7 = true ^ true;
_12.1 = _12.4;
_2 = !RET;
_22 = _7 | _7;
_18.0 = [_12.1,_12.4,_12.4,_3,_12.4,_12.4,_12.1];
_18.0 = [_12.4,_12.1,_12.1,_12.4,_12.4,_12.4,_3];
_18.0 = _9;
_24 = _21;
Goto(bb9)
}
bb9 = {
_9 = [_12.1,_12.4,_12.4,_12.4,_12.4,_3,_12.4];
_19.3 = [_13,_13];
_1 = core::ptr::addr_of_mut!((*_1));
_25 = !_22;
_10 = _4 as isize;
_10 = 92328324056463703960435592066241992152_i128 as isize;
_23 = ((-1843301293_i32),);
_18.1 = [_4,_4,_4,_4,_4,_4];
_19.1 = _21;
_12.4 = _4 as i8;
RET = _5;
_26 = _23.0 << _8;
_12.3 = !_19.5;
_18.1 = [_4,_4,_4,_4,_4,_4];
_27 = (-148292867780040542712281154458056421085_i128) as f32;
_8 = 14199_u16 as isize;
_24 = _21;
_13 = !312149060818512482101028714191944769913_u128;
_2 = _5 - RET;
_23.0 = _26;
_19.3 = [_13,_13];
_14 = [153443596733382947190923183391668538987_i128,29899799188863526793923697150437908257_i128,(-2963402086102647426392826494781807424_i128),(-125293801662994905232099127274062000759_i128),(-166059373090296570351795371377722468687_i128),(-27857627612021793845747274137911237816_i128)];
_10 = -_2;
RET = -_10;
Goto(bb10)
}
bb10 = {
_19.2 = core::ptr::addr_of_mut!(_4);
_4 = (-637039097610927395_i64) - 1863279702450104654_i64;
_18.0 = [_3,_12.1,_12.1,_12.1,_12.1,_3,_12.1];
_1 = core::ptr::addr_of_mut!((*_1));
_14 = [(-111299011315159356043690844358525172479_i128),148969577414464606307413804520872104312_i128,(-90187951918827241301133839295441062405_i128),86348555136603825230653454329218030667_i128,73746011817799254729468768515245873265_i128,39472105418250657575467345781898193518_i128];
_23.0 = _27 as i32;
_8 = _22 as isize;
_31 = _19.1;
_7 = _22;
_32 = [_19.1,_31,_19.1,_21,_24,_24];
_12.4 = _12.1 & _3;
_32 = [_19.1,_24,_19.1,_24,_24,_19.1];
_19.0 = [_13,_13];
_18.0 = [_12.4,_12.1,_12.4,_12.4,_12.4,_12.1,_12.1];
_24 = _21;
_33.0 = 1873870264_u32;
_25 = _22 & _22;
_34.fld3 = [_12.4,_12.1,_12.1,_12.1,_12.1,_12.4,_12.4];
_29 = [_13,_13];
match _33.0 {
0 => bb4,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
1873870264 => bb16,
_ => bb15
}
}
bb11 = {
RET = _5;
_4 = 136315903616502860759058149629240295897_i128 as i64;
_10 = -_2;
_4 = !8889247020164990062_i64;
_1 = core::ptr::addr_of_mut!(_9);
_11 = 1100925938_i32 as f32;
_8 = RET;
_12.2 = [_12.3,_12.3,_12.3,_12.3,_12.3,_12.3,_12.3];
_2 = _5 * _5;
RET = _5 << _2;
_12.4 = _3 << _4;
_14 = [(-61147487893125136748091872211358326518_i128),131512086036174121860162218656651431027_i128,(-47880619532905432812293173859306847378_i128),101499537465197811323972724767479768493_i128,(-130181295381331480349314595249418402764_i128),(-140787747849810680076510884143801257690_i128)];
_14 = [(-3303770584916679630491567159351470221_i128),(-54852331093167258396879093318293437431_i128),(-126974114821386930947231948468117969362_i128),8977602999104322926386469555854997092_i128,(-54418392843909548144109272096096603401_i128),58305554181702906295109667418098251027_i128];
_3 = -_12.4;
_12.4 = _12.3 as i8;
_14 = [(-101359039393830998234701462519050715514_i128),(-111369420258656147546916319481973331078_i128),54173996045486066774733814360853392386_i128,8879406476322754271615734334004305938_i128,52417898078621074412144486404857864993_i128,100388167591518342360186738276119024984_i128];
_14 = [75369240432130166447655315015114659816_i128,(-13959757259914836063704556407138931024_i128),(-68842790763428772670683284735323821207_i128),(-140370212514912219126371581231928317951_i128),(-38320429490849690122577397141961288806_i128),66637029927981571289318218204678995299_i128];
_13 = 329749104420157835810659222144353435939_u128;
_2 = RET;
_13 = _4 as u128;
_9 = _6;
_12.0 = 44701_u16 as f64;
RET = 949028999_u32 as isize;
_11 = 14845261949200704012_u64 as f32;
_14 = [131630641436796299401043775686190540178_i128,(-142108534566902527419815898708043857835_i128),64745759993419521907350912545833857423_i128,112143287916426134023024347879130780442_i128,(-146937971637155964096679466661684505059_i128),(-124107365951693554827148030277339647994_i128)];
_14 = [143463046495610607213488843091436443937_i128,(-80470468661697452497865991344201314731_i128),120183112867395766542590213151651718712_i128,(-2559493760654422738088919422165600440_i128),(-44462100706421097832885805072987643743_i128),111427482684692395156032473037983572123_i128];
RET = _5;
Goto(bb5)
}
bb12 = {
_12.0 = _17;
RET = !_5;
_14 = [158832923352270419684659227200818250441_i128,64961848997776113621703941537240220961_i128,(-18947738995770838929295787077387729183_i128),(-38634465810632019354933327561163403087_i128),(-56753365739708124120483238185887809008_i128),(-102490880297749805860358266442922439375_i128)];
_21 = '\u{9dae0}';
_7 = !true;
_12.4 = _3 - _3;
_7 = true ^ true;
_12.1 = _12.4;
_2 = !RET;
_22 = _7 | _7;
_18.0 = [_12.1,_12.4,_12.4,_3,_12.4,_12.4,_12.1];
_18.0 = [_12.4,_12.1,_12.1,_12.4,_12.4,_12.4,_3];
_18.0 = _9;
_24 = _21;
Goto(bb9)
}
bb13 = {
_3 = _12.4 << _13;
_7 = _2 <= RET;
_16 = _11;
_19.5 = _12.3 | _12.3;
_17 = _12.0;
_5 = _8 >> _12.4;
_14 = [(-45936093104217345120960270115150151724_i128),146171507400732667179982843909938482444_i128,121692932257095482936234397228730324893_i128,18460150137904363733368856459003109157_i128,(-132145980010988240682552305517901953305_i128),(-101945832226027330218522508232918630687_i128)];
_6 = [_3,_3,_3,_12.4,_12.4,_3,_3];
_1 = core::ptr::addr_of_mut!(_18.0);
_6 = _9;
_8 = 15981942769798657105_u64 as isize;
_19.0 = [_13,_13];
_16 = _11 * _11;
_19.5 = !_12.3;
_12.1 = _16 as i8;
_19.5 = _12.3;
_12.1 = _3;
_12.3 = !_19.5;
_19.5 = _12.3;
_13 = !377072005786575654140583305468181067_u128;
_12.2 = [_19.5,_12.3,_12.3,_12.3,_19.5,_12.3,_19.5];
_17 = _12.0 + _12.0;
_17 = _12.0 - _12.0;
_17 = -_12.0;
Goto(bb8)
}
bb14 = {
_11 = 2111360743_u32 as f32;
Goto(bb7)
}
bb15 = {
RET = !_5;
_7 = false;
_4 = (-439145122372976076_i64) >> _2;
_7 = !false;
_8 = _10;
_10 = _8;
_12.2 = [1_usize,0_usize,9401892065223603305_usize,14099690231429462149_usize,15756581138662784984_usize,3_usize,5_usize];
_5 = -RET;
_11 = 70522954381444725055879821556529056819_i128 as f32;
_5 = -_8;
_6 = _9;
RET = 267227571071181872719787033161985740748_u128 as isize;
_12.3 = !7_usize;
_6 = _9;
_9 = [_12.4,_12.4,_12.4,_12.4,_12.4,_12.4,_12.4];
_9 = [_12.4,_3,_12.4,_3,_12.4,_12.4,_3];
_12.0 = 1229826256_u32 as f64;
_1 = core::ptr::addr_of_mut!((*_1));
_12.4 = !_3;
RET = _8 & _8;
_10 = 5654_u16 as isize;
_13 = 152571404915687589997047633661155441315_u128 - 38066054975798098649205174941462889416_u128;
_14 = [(-12001771436614835377106042154507424544_i128),54818758299059231522831141857005725190_i128,(-163463953029434360774967725468063390116_i128),(-110990272608247399354357473046758560392_i128),(-169652317427184130691105280075863882187_i128),(-83574267459755815637099667537378756105_i128)];
_4 = _3 as i64;
_2 = _10;
_7 = _12.0 != _12.0;
_7 = false ^ false;
_12.4 = -_3;
Call(_12.1 = core::intrinsics::bswap(_3), ReturnTo(bb4), UnwindUnreachable())
}
bb16 = {
_11 = -_27;
_33.0 = !3381571966_u32;
_2 = -RET;
_34.fld2 = !87_u8;
_12.4 = 13443809153725492531_u64 as i8;
_34.fld4 = (_24, _1, (-31442_i16));
_8 = _10;
_12.3 = !_19.5;
_5 = RET;
_36 = -_12.0;
_14 = [149926298582941805106431621718117530636_i128,155098178397544761847413226292301637035_i128,(-44349396520593523126924306656437972464_i128),(-118379101614644568877015696704446191261_i128),(-80477948254088903641740949365721734174_i128),24833154187498483627679429899535083540_i128];
_32 = [_24,_24,_34.fld4.0,_21,_34.fld4.0,_31];
_19.2 = core::ptr::addr_of_mut!(_4);
_23 = (_26,);
_23 = (_26,);
_12.3 = !_19.5;
_34.fld0 = [33208_u16,55061_u16,43490_u16,48037_u16,35661_u16,36395_u16,23283_u16,25850_u16];
Goto(bb17)
}
bb17 = {
Call(_37 = dump_var(16_usize, 3_usize, Move(_3), 31_usize, Move(_31), 21_usize, Move(_21), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_37 = dump_var(16_usize, 32_usize, Move(_32), 6_usize, Move(_6), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_37 = dump_var(16_usize, 14_usize, Move(_14), 22_usize, Move(_22), 29_usize, Move(_29), 38_usize, _38), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: isize,mut _2: bool) -> i8 {
mir! {
type RET = i8;
let _3: [i64; 6];
let _4: Adt50;
let _5: (u128,);
let _6: Adt56;
let _7: [i64; 6];
let _8: i128;
let _9: Adt45;
let _10: (f64, i8, [usize; 7], usize, i8);
let _11: char;
let _12: i64;
let _13: Adt46;
let _14: [bool; 6];
let _15: bool;
let _16: i32;
let _17: bool;
let _18: Adt43;
let _19: (i64,);
let _20: isize;
let _21: [u128; 2];
let _22: (f64, i8, [usize; 7], usize, i8);
let _23: [i8; 1];
let _24: i128;
let _25: bool;
let _26: [usize; 7];
let _27: ();
let _28: ();
{
_2 = false;
RET = -90_i8;
Goto(bb1)
}
bb1 = {
_1 = (-9223372036854775808_isize);
RET = (-2_i8) >> _1;
_1 = 9223372036854775807_isize;
_5.0 = 148378637970822558399564433380597426283_u128 - 33935028313394285316177087553515666922_u128;
_5 = (132210545457829487085598472898097506385_u128,);
_1 = 22256_i16 as isize;
_5.0 = 144251570082793489374850159436545529224_u128;
RET = -53_i8;
_5.0 = 305208350714425928995717910232353243608_u128 * 226779595046255393255102242349472321072_u128;
_2 = !false;
_7 = [(-2250755695429580714_i64),(-4663683263066971773_i64),(-3953839736562408872_i64),5206977483059110255_i64,(-6954904828393717469_i64),(-2278296906572958837_i64)];
_5 = (27228283994646157163560295523971981937_u128,);
_10.1 = _5.0 as i8;
_10.2 = [12770666185492997244_usize,13986068472959524476_usize,4_usize,285807359934287623_usize,7_usize,13135266753717092840_usize,5_usize];
_10.3 = 1115351094012416228_usize;
_10.0 = 663085498_i32 as f64;
_10.1 = !RET;
_1 = !79_isize;
_1 = 85_isize;
RET = _10.1 & _10.1;
_10.4 = 47328_u16 as i8;
RET = !_10.1;
_10.0 = _5.0 as f64;
_11 = '\u{5339a}';
match _1 {
0 => bb2,
85 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_10.2 = [_10.3,_10.3,_10.3,_10.3,_10.3,_10.3,_10.3];
_3 = [7781008775556007233_i64,(-5256040400270257576_i64),(-3445605435969743341_i64),(-1493379843679221884_i64),6008054988674219913_i64,4439209965917232644_i64];
_11 = '\u{60962}';
_8 = 150393144170708772256021250639103259435_i128;
Goto(bb5)
}
bb5 = {
RET = _1 as i8;
_10.4 = _10.3 as i8;
_12 = 815214683462393519_i64;
match _12 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
815214683462393519 => bb12,
_ => bb11
}
}
bb6 = {
_10.2 = [_10.3,_10.3,_10.3,_10.3,_10.3,_10.3,_10.3];
_3 = [7781008775556007233_i64,(-5256040400270257576_i64),(-3445605435969743341_i64),(-1493379843679221884_i64),6008054988674219913_i64,4439209965917232644_i64];
_11 = '\u{60962}';
_8 = 150393144170708772256021250639103259435_i128;
Goto(bb5)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = (-9223372036854775808_isize);
RET = (-2_i8) >> _1;
_1 = 9223372036854775807_isize;
_5.0 = 148378637970822558399564433380597426283_u128 - 33935028313394285316177087553515666922_u128;
_5 = (132210545457829487085598472898097506385_u128,);
_1 = 22256_i16 as isize;
_5.0 = 144251570082793489374850159436545529224_u128;
RET = -53_i8;
_5.0 = 305208350714425928995717910232353243608_u128 * 226779595046255393255102242349472321072_u128;
_2 = !false;
_7 = [(-2250755695429580714_i64),(-4663683263066971773_i64),(-3953839736562408872_i64),5206977483059110255_i64,(-6954904828393717469_i64),(-2278296906572958837_i64)];
_5 = (27228283994646157163560295523971981937_u128,);
_10.1 = _5.0 as i8;
_10.2 = [12770666185492997244_usize,13986068472959524476_usize,4_usize,285807359934287623_usize,7_usize,13135266753717092840_usize,5_usize];
_10.3 = 1115351094012416228_usize;
_10.0 = 663085498_i32 as f64;
_10.1 = !RET;
_1 = !79_isize;
_1 = 85_isize;
RET = _10.1 & _10.1;
_10.4 = 47328_u16 as i8;
RET = !_10.1;
_10.0 = _5.0 as f64;
_11 = '\u{5339a}';
match _1 {
0 => bb2,
85 => bb4,
_ => bb3
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_2 = false;
_10.1 = _2 as i8;
_13.fld2 = _12 as i128;
_13.fld3 = [9579_u16,16984_u16,48258_u16,9436_u16,33709_u16,31639_u16,1080_u16,37255_u16];
_13.fld0 = _7;
_10.3 = _11 as usize;
_1 = (-37_isize) + (-9223372036854775808_isize);
_10.1 = _12 as i8;
_14 = [_2,_2,_2,_2,_2,_2];
RET = _10.1;
_5.0 = 309841001494393510966846447611554070775_u128 ^ 295535520737940666073014299980765259216_u128;
_8 = -_13.fld2;
_10.4 = !_10.1;
_7 = [_12,_12,_12,_12,_12,_12];
_13.fld1 = [_5.0,_5.0];
_15 = _2;
_17 = !_2;
RET = _10.4;
_13.fld1 = [_5.0,_5.0];
_18.fld1 = _13.fld3;
_9 = Adt45::Variant1 { fld0: _18.fld1 };
_18.fld0.0 = _11;
_16 = (-1280037801_i32) * 1300279966_i32;
SetDiscriminant(_9, 1);
Goto(bb13)
}
bb13 = {
_10.4 = _16 as i8;
_22.2 = _10.2;
_17 = _2;
match _12 {
0 => bb8,
815214683462393519 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_14 = [_17,_15,_15,_2,_17,_15];
_22 = (_10.0, _10.4, _10.2, _10.3, _10.4);
_18.fld2 = _1 as usize;
_19 = (_12,);
_13.fld0 = [_19.0,_12,_12,_12,_12,_12];
_22.1 = _10.1 ^ _22.4;
_10.1 = _10.4 | RET;
_12 = _19.0;
_22.0 = -_10.0;
_16 = -(-1171121295_i32);
_8 = -_13.fld2;
_24 = !_13.fld2;
_9 = Adt45::Variant1 { fld0: _13.fld3 };
SetDiscriminant(_9, 0);
place!(Field::<(i64,)>(Variant(_9, 0), 0)) = (_12,);
_10 = _22;
_25 = _2;
_19 = (Field::<(i64,)>(Variant(_9, 0), 0).0,);
_22.1 = _11 as i8;
_19 = Field::<(i64,)>(Variant(_9, 0), 0);
_13.fld0 = [_12,Field::<(i64,)>(Variant(_9, 0), 0).0,_19.0,_12,_19.0,_19.0];
_18.fld0.2 = 2242371046577938830_u64 as i16;
place!(Field::<(i64,)>(Variant(_9, 0), 0)).0 = _5.0 as i64;
_21 = [_5.0,_5.0];
_22 = (_10.0, RET, _10.2, _10.3, _10.1);
Goto(bb16)
}
bb16 = {
Call(_27 = dump_var(17_usize, 12_usize, Move(_12), 25_usize, Move(_25), 19_usize, Move(_19), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_27 = dump_var(17_usize, 24_usize, Move(_24), 5_usize, Move(_5), 15_usize, Move(_15), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: bool,mut _2: i128,mut _3: bool,mut _4: bool,mut _5: i128,mut _6: Adt46,mut _7: bool,mut _8: i32,mut _9: i128,mut _10: i8,mut _11: i128,mut _12: i128,mut _13: [i128; 6]) -> [i64; 6] {
mir! {
type RET = [i64; 6];
let _14: isize;
let _15: bool;
let _16: Adt46;
let _17: i16;
let _18: Adt43;
let _19: [usize; 7];
let _20: [i8; 7];
let _21: u16;
let _22: [bool; 6];
let _23: (u32,);
let _24: char;
let _25: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize);
let _26: u32;
let _27: (i32,);
let _28: f32;
let _29: (*mut i64, i16);
let _30: usize;
let _31: char;
let _32: isize;
let _33: (i64,);
let _34: *mut [i8; 7];
let _35: u64;
let _36: [u128; 2];
let _37: i16;
let _38: [i8; 7];
let _39: [usize; 7];
let _40: Adt58;
let _41: ([i8; 7], [i64; 6]);
let _42: [i8; 7];
let _43: [bool; 6];
let _44: bool;
let _45: f64;
let _46: ();
let _47: ();
{
_4 = _3;
RET = [(-6504650756511474250_i64),(-4095459620289152037_i64),6255774077734943844_i64,(-8438469025889089466_i64),2988326289292933581_i64,7061836941365325000_i64];
_8 = (-1006104591_i32);
RET = [4785076293065770215_i64,4736928889026490772_i64,(-2293805715878366891_i64),6777292369351721859_i64,1889533012472835863_i64,(-1768187613372176016_i64)];
_4 = _3;
_1 = _7;
RET = [(-6049678338028276577_i64),(-1129875338700814148_i64),(-5653698514691444807_i64),(-1337156974583828102_i64),9098648900433338112_i64,(-3210656306493252500_i64)];
_14 = (-14_isize);
_14 = 9223372036854775807_isize * (-44_isize);
_5 = !_2;
RET = _6.fld0;
_12 = (-1853628382064141885_i64) as i128;
_5 = !_9;
_11 = _6.fld2;
_9 = _11 >> _2;
_15 = !_3;
_15 = _3;
_3 = _1;
_5 = _9 + _9;
Goto(bb1)
}
bb1 = {
_5 = !_6.fld2;
_16.fld3 = [8469_u16,33322_u16,60231_u16,40136_u16,51338_u16,5523_u16,13373_u16,31415_u16];
_9 = !_5;
_16.fld0 = RET;
_18.fld1 = _6.fld3;
_6.fld1 = [50797055384898705017158015981925896273_u128,114122661792449845568952527315481291491_u128];
_18.fld0.0 = '\u{787c8}';
_2 = _11;
_14 = !9223372036854775807_isize;
Goto(bb2)
}
bb2 = {
_18.fld0.0 = '\u{1c47a}';
_15 = !_1;
_21 = !33600_u16;
_13 = [_9,_5,_2,_11,_11,_5];
_15 = _3 ^ _1;
_16.fld2 = _5;
_6.fld0 = _16.fld0;
_16.fld1 = _6.fld1;
_23.0 = 2338834633_u32;
_1 = _3;
_17 = 4978_i16;
match _17 {
0 => bb1,
1 => bb3,
4978 => bb5,
_ => bb4
}
}
bb3 = {
_5 = !_6.fld2;
_16.fld3 = [8469_u16,33322_u16,60231_u16,40136_u16,51338_u16,5523_u16,13373_u16,31415_u16];
_9 = !_5;
_16.fld0 = RET;
_18.fld1 = _6.fld3;
_6.fld1 = [50797055384898705017158015981925896273_u128,114122661792449845568952527315481291491_u128];
_18.fld0.0 = '\u{787c8}';
_2 = _11;
_14 = !9223372036854775807_isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_8 = 10351867053910176324_usize as i32;
_18.fld2 = _14 as usize;
_20 = [_10,_10,_10,_10,_10,_10,_10];
_16.fld1 = [36238547860520606218545912946667989115_u128,238968776912832509668545623952147649248_u128];
match _17 {
4978 => bb7,
_ => bb6
}
}
bb6 = {
_5 = !_6.fld2;
_16.fld3 = [8469_u16,33322_u16,60231_u16,40136_u16,51338_u16,5523_u16,13373_u16,31415_u16];
_9 = !_5;
_16.fld0 = RET;
_18.fld1 = _6.fld3;
_6.fld1 = [50797055384898705017158015981925896273_u128,114122661792449845568952527315481291491_u128];
_18.fld0.0 = '\u{787c8}';
_2 = _11;
_14 = !9223372036854775807_isize;
Goto(bb2)
}
bb7 = {
_6.fld1 = [93778622340223979731778914673914111803_u128,330261798733824860460349454853323393002_u128];
_16.fld1 = [188822333180632134392593481555231319831_u128,302242197069326712676332035702446952662_u128];
_22 = [_15,_1,_4,_15,_15,_7];
_18.fld0.1 = core::ptr::addr_of_mut!(_20);
_18.fld0.1 = core::ptr::addr_of_mut!(_20);
_18.fld3 = core::ptr::addr_of_mut!(_21);
_24 = _18.fld0.0;
_23 = (4221689758_u32,);
_25.0 = [31792900572060617139650160950997208387_u128,194046288506821078647340563942979441525_u128];
_25.3 = _25.0;
_28 = 6712290510495564380_u64 as f32;
_27 = (_8,);
match _17 {
0 => bb1,
1 => bb6,
4978 => bb8,
_ => bb3
}
}
bb8 = {
_25.4 = _16.fld0;
_7 = _15;
_30 = _18.fld2 ^ _18.fld2;
_16.fld1 = [148412200872998947855958915297132887237_u128,322782293570999258949675905363086755421_u128];
_18.fld0.1 = core::ptr::addr_of_mut!(_20);
_21 = 40513_u16 - 51800_u16;
_17 = !(-8005_i16);
Goto(bb9)
}
bb9 = {
_19 = [_30,_30,_30,_18.fld2,_30,_30,_18.fld2];
_9 = _6.fld2;
_16.fld2 = -_11;
RET = _16.fld0;
RET = [(-993546507019994227_i64),4133245463201488690_i64,(-287413729117418750_i64),(-6446909836168203078_i64),(-4555877499295893533_i64),596037434825238062_i64];
_25.0 = [70011178824135725617222052304314421959_u128,269401570393472579286677032371136723157_u128];
_21 = !16445_u16;
_3 = _4 ^ _1;
_25.1 = _18.fld0.0;
_29.1 = _17 ^ _17;
_18.fld0.2 = _29.1;
_27.0 = _8;
_33.0 = _23.0 as i64;
_25.4 = [_33.0,_33.0,_33.0,_33.0,_33.0,_33.0];
_18.fld1 = [_21,_21,_21,_21,_21,_21,_21,_21];
_18.fld1 = [_21,_21,_21,_21,_21,_21,_21,_21];
Goto(bb10)
}
bb10 = {
_18.fld0.1 = core::ptr::addr_of_mut!(_20);
_34 = _18.fld0.1;
RET = [_33.0,_33.0,_33.0,_33.0,_33.0,_33.0];
_18.fld0.1 = _34;
_36 = _16.fld1;
_4 = _1;
_8 = !_27.0;
_2 = _16.fld2;
_37 = _18.fld0.2;
_1 = _4 & _4;
match _23.0 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
4221689758 => bb17,
_ => bb16
}
}
bb11 = {
_5 = !_6.fld2;
_16.fld3 = [8469_u16,33322_u16,60231_u16,40136_u16,51338_u16,5523_u16,13373_u16,31415_u16];
_9 = !_5;
_16.fld0 = RET;
_18.fld1 = _6.fld3;
_6.fld1 = [50797055384898705017158015981925896273_u128,114122661792449845568952527315481291491_u128];
_18.fld0.0 = '\u{787c8}';
_2 = _11;
_14 = !9223372036854775807_isize;
Goto(bb2)
}
bb12 = {
_25.4 = _16.fld0;
_7 = _15;
_30 = _18.fld2 ^ _18.fld2;
_16.fld1 = [148412200872998947855958915297132887237_u128,322782293570999258949675905363086755421_u128];
_18.fld0.1 = core::ptr::addr_of_mut!(_20);
_21 = 40513_u16 - 51800_u16;
_17 = !(-8005_i16);
Goto(bb9)
}
bb13 = {
_5 = !_6.fld2;
_16.fld3 = [8469_u16,33322_u16,60231_u16,40136_u16,51338_u16,5523_u16,13373_u16,31415_u16];
_9 = !_5;
_16.fld0 = RET;
_18.fld1 = _6.fld3;
_6.fld1 = [50797055384898705017158015981925896273_u128,114122661792449845568952527315481291491_u128];
_18.fld0.0 = '\u{787c8}';
_2 = _11;
_14 = !9223372036854775807_isize;
Goto(bb2)
}
bb14 = {
_5 = !_6.fld2;
_16.fld3 = [8469_u16,33322_u16,60231_u16,40136_u16,51338_u16,5523_u16,13373_u16,31415_u16];
_9 = !_5;
_16.fld0 = RET;
_18.fld1 = _6.fld3;
_6.fld1 = [50797055384898705017158015981925896273_u128,114122661792449845568952527315481291491_u128];
_18.fld0.0 = '\u{787c8}';
_2 = _11;
_14 = !9223372036854775807_isize;
Goto(bb2)
}
bb15 = {
_18.fld0.0 = '\u{1c47a}';
_15 = !_1;
_21 = !33600_u16;
_13 = [_9,_5,_2,_11,_11,_5];
_15 = _3 ^ _1;
_16.fld2 = _5;
_6.fld0 = _16.fld0;
_16.fld1 = _6.fld1;
_23.0 = 2338834633_u32;
_1 = _3;
_17 = 4978_i16;
match _17 {
0 => bb1,
1 => bb3,
4978 => bb5,
_ => bb4
}
}
bb16 = {
Return()
}
bb17 = {
_25.5 = _30 | _30;
_3 = !_4;
_35 = _28 as u64;
_6.fld1 = [51508781681085907055810446178141358834_u128,308838540389631887830231624541658326871_u128];
_16.fld2 = !_2;
_10 = 112_i8 | 111_i8;
_41.1 = [_33.0,_33.0,_33.0,_33.0,_33.0,_33.0];
_18.fld0.0 = _24;
_16.fld0 = [_33.0,_33.0,_33.0,_33.0,_33.0,_33.0];
_6.fld1 = [322861490621185440997496211815122246969_u128,100272772946058916308434116053319538891_u128];
_26 = _23.0 * _23.0;
_6.fld3 = _16.fld3;
_25.4 = _6.fld0;
_21 = 8122_u16 + 3988_u16;
_18.fld0 = (_24, _34, _29.1);
_18.fld0.1 = _34;
_9 = _10 as i128;
_40.fld3.4 = [_33.0,_33.0,_33.0,_33.0,_33.0,_33.0];
_40.fld2 = _6.fld2 as i16;
_35 = !13150890031869554009_u64;
_22 = [_1,_7,_1,_4,_3,_7];
_25.2 = core::ptr::addr_of_mut!(_33.0);
_40.fld3.1 = _25.1;
Goto(bb18)
}
bb18 = {
Call(_46 = dump_var(18_usize, 14_usize, Move(_14), 19_usize, Move(_19), 33_usize, Move(_33), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_46 = dump_var(18_usize, 17_usize, Move(_17), 10_usize, Move(_10), 24_usize, Move(_24), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_46 = dump_var(18_usize, 37_usize, Move(_37), 7_usize, Move(_7), 15_usize, Move(_15), 13_usize, Move(_13)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_46 = dump_var(18_usize, 11_usize, Move(_11), 9_usize, Move(_9), 47_usize, _47, 47_usize, _47), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(3564906878_u32), std::hint::black_box(246968820749769064829824563107689801942_u128), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(16257_i16));
                
            }
#[derive(Debug)]
pub struct Adt43 {
fld0: (char, *mut [i8; 7], i16),
fld1: [u16; 8],
fld2: usize,
fld3: *mut u16,
}
#[derive(Debug)]
pub struct Adt44 {
fld0: [u16; 8],
fld1: char,
fld2: u8,
fld3: [i8; 7],
fld4: (char, *mut [i8; 7], i16),
}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: (i64,),
fld1: *mut [i8; 7],

},
Variant1{
fld0: [u16; 8],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt46 {
fld0: [i64; 6],
fld1: [u128; 2],
fld2: i128,
fld3: [u16; 8],
}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (u128,),
fld1: [bool; 6],
fld2: [char; 6],
fld3: Adt46,
fld4: i16,

},
Variant1{
fld0: u16,
fld1: (i64,),

},
Variant2{
fld0: bool,
fld1: *mut (char, *mut [i8; 7], i16),
fld2: (u32,),
fld3: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize),
fld4: *mut i64,
fld5: (i32,),
fld6: [char; 6],
fld7: *mut u16,

},
Variant3{
fld0: [u16; 8],
fld1: ([i8; 7], [i64; 6]),
fld2: Adt46,
fld3: *mut u16,
fld4: (f64, i8, [usize; 7], usize, i8),
fld5: (i32,),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt48 {
fld0: [u128; 2],
fld1: (f64, [u128; 2], [usize; 7]),
fld2: i128,
fld3: (*mut i64, i16),
fld4: i16,
fld5: i32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt49 {
fld0: f64,
fld1: *mut u16,
fld2: usize,
fld3: i8,
fld4: [i8; 1],
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: [u128; 2],
fld1: Adt45,
fld2: Adt44,
fld3: i128,

},
Variant1{
fld0: Adt46,
fld1: (f64, [u128; 2], [usize; 7]),

},
Variant2{
fld0: ([i8; 7], [i64; 6]),
fld1: Adt46,

},
Variant3{
fld0: (f64, [u128; 2], [usize; 7]),
fld1: [i128; 6],
fld2: (i64,),
fld3: [u16; 8],
fld4: *mut u16,
fld5: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize),
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: *mut *mut [i8; 7],
fld1: char,
fld2: (i32,),
fld3: Adt48,
fld4: i16,
fld5: *mut i64,
fld6: u16,
fld7: [i8; 7],

},
Variant1{
fld0: (i64, (char, *mut [i8; 7], i16), (i64,), u8),
fld1: [u128; 2],

},
Variant2{
fld0: (char, *mut [i8; 7], i16),
fld1: char,
fld2: usize,
fld3: [i64; 6],

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize),
fld1: [usize; 7],
fld2: ([i8; 7], [i64; 6]),
fld3: i16,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: i8,
fld1: (i64, (char, *mut [i8; 7], i16), (i64,), u8),

},
Variant1{
fld0: [u16; 8],
fld1: char,
fld2: Adt44,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt49,
fld1: Adt52,
fld2: i128,
fld3: Adt48,
fld4: [usize; 7],

},
Variant1{
fld0: bool,

},
Variant2{
fld0: i128,
fld1: *mut (char, *mut [i8; 7], i16),

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: bool,
fld1: (f64, i8, [usize; 7], usize, i8),
fld2: Adt53,
fld3: u128,
fld4: Adt48,
fld5: i32,
fld6: (u32,),
fld7: i128,

},
Variant1{
fld0: (i64, (char, *mut [i8; 7], i16), (i64,), u8),
fld1: Adt49,
fld2: f32,
fld3: ([i8; 7], [i64; 6]),
fld4: (u128,),
fld5: (char, *mut [i8; 7], i16),
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: Adt48,
fld1: char,
fld2: u32,
fld3: u128,
fld4: f64,
fld5: i32,
fld6: f32,

},
Variant1{
fld0: Adt52,
fld1: i64,
fld2: [bool; 6],
fld3: *mut u16,
fld4: i16,
fld5: (u32,),

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: (i32,),
fld1: *mut u16,
fld2: (f64, i8, [usize; 7], usize, i8),
fld3: Adt47,
fld4: ([i8; 7], [i64; 6]),
fld5: i32,
fld6: f64,
fld7: u64,

},
Variant1{
fld0: Adt51,
fld1: [usize; 7],
fld2: Adt48,
fld3: [i8; 7],
fld4: i16,
fld5: i32,

}}
#[derive(Debug)]
pub struct Adt58 {
fld0: *mut *mut [i8; 7],
fld1: Adt55,
fld2: i16,
fld3: ([u128; 2], char, *mut i64, [u128; 2], [i64; 6], usize),
}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: i128,
fld1: Adt51,
fld2: (u128,),

},
Variant1{
fld0: Adt55,

},
Variant2{
fld0: *mut (char, *mut [i8; 7], i16),
fld1: Adt44,
fld2: isize,
fld3: f64,
fld4: (i32,),
fld5: (u128,),
fld6: i64,

},
Variant3{
fld0: u32,
fld1: (char, *mut [i8; 7], i16),
fld2: (f64, i8, [usize; 7], usize, i8),
fld3: [char; 6],

}}

