#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::collections::hash_map::DefaultHasher;
    use std::hash::{Hash, Hasher};

    static mut H: DefaultHasher = DefaultHasher::new();

    #[inline(never)]
    fn dump_var(
        val0: impl Hash,
        val1: impl Hash,
        val2: impl Hash,
        val3: impl Hash,
    ) {
        unsafe {
            val0.hash(&mut H);
            val1.hash(&mut H);
            val2.hash(&mut H);
            val3.hash(&mut H);
        }
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u128,mut _2: i32,mut _3: isize,mut _4: i8) -> f64 {
mir! {
type RET = f64;
let _5: [u8; 1];
let _6: char;
let _7: f64;
let _8: Adt45;
let _9: (u64, [usize; 1], bool, f64, i16);
let _10: *mut bool;
let _11: bool;
let _12: (u64, [usize; 1], bool, f64, i16);
let _13: [u64; 6];
let _14: f64;
let _15: ();
let _16: ();
{
_1 = !246442045712291929716084424694836734841_u128;
RET = (-93_isize) as f64;
_2 = 569790256_i32 | 1858533205_i32;
_3 = 9223372036854775807_isize;
_4 = (-8979590765620370665_i64) as i8;
_4 = 124_u8 as i8;
RET = _2 as f64;
_2 = (-25788163096929481958235635439819050131_i128) as i32;
RET = (-25007020025672021100106636440339520481_i128) as f64;
Call(_5 = fn1(_3, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = (-396871867_i32) - 1853829126_i32;
_1 = 101637001614302061341846447449728493956_u128;
_3 = -(-9223372036854775808_isize);
_4 = (-2_i8) - (-85_i8);
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
101637001614302061341846447449728493956 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = 1_usize as f64;
RET = 17619011464119415096_usize as f64;
_4 = 76_i8 + (-97_i8);
_7 = -RET;
_3 = !(-9223372036854775808_isize);
_6 = '\u{a73f2}';
_7 = RET * RET;
RET = -_7;
_6 = '\u{e90bc}';
RET = _2 as f64;
_4 = !91_i8;
_3 = (-40_isize);
match _1 {
0 => bb8,
1 => bb9,
2 => bb10,
101637001614302061341846447449728493956 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_2 = 641769957_i32;
RET = _7 + _7;
_4 = 77_i8 | (-122_i8);
RET = (-7290_i16) as f64;
_2 = 544439536_i32 ^ (-188966639_i32);
_4 = !102_i8;
_9.4 = (-2387_i16) + 18576_i16;
_2 = (-1505405843_i32) & (-2141574630_i32);
_9.4 = 19328_i16;
RET = _4 as f64;
_9.1 = [9951184255713904033_usize];
Goto(bb13)
}
bb13 = {
RET = -_7;
_9.3 = RET;
_7 = RET;
RET = _9.3;
_10 = core::ptr::addr_of_mut!(_9.2);
RET = _9.3 + _9.3;
_9.0 = 41905051393005316305791139669858852785_i128 as u64;
_6 = '\u{d84dc}';
_7 = 1631736164_u32 as f64;
_11 = RET == _7;
_9.3 = -RET;
_9.2 = _11;
_10 = core::ptr::addr_of_mut!((*_10));
_9.2 = _11;
_2 = 1727912050_i32;
Call(RET = fn19(_4, _3, _10, (*_10), _4, _3, _3, (*_10), _9, _7), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_9.0 = 12747340744729389712_u64 * 7114146394927078000_u64;
_9.3 = _9.4 as f64;
_7 = _9.3 * _9.3;
RET = _9.3;
_5 = [112_u8];
_5 = [196_u8];
_9.4 = !(-9613_i16);
_4 = -106_i8;
_13 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
RET = _7 * _9.3;
_12.2 = _11;
_13 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
_12.1 = [10850718920925463796_usize];
_12 = (_9.0, _9.1, (*_10), RET, _9.4);
RET = _12.3 - _12.3;
_9.0 = _12.0 & _12.0;
_5 = [243_u8];
_12.2 = _11 ^ (*_10);
_12.0 = _9.0 | _9.0;
_12 = (_9.0, _9.1, (*_10), _7, _9.4);
RET = _2 as f64;
_12.3 = _7;
_9.3 = RET + _7;
_12.0 = 4238384745_u32 as u64;
_12.2 = (*_10);
_14 = 38094_u16 as f64;
_6 = '\u{58f75}';
Goto(bb15)
}
bb15 = {
Call(_15 = dump_var(Move(_1), Move(_11), Move(_13), Move(_5)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: isize,mut _2: u128) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _3: Adt52;
let _4: (u64, *const bool);
let _5: [u8; 1];
let _6: isize;
let _7: char;
let _8: isize;
let _9: (u64, [usize; 1], bool, f64, i16);
let _10: u128;
let _11: isize;
let _12: u128;
let _13: Adt47;
let _14: Adt53;
let _15: &'static [u8; 1];
let _16: [u64; 6];
let _17: Adt57;
let _18: *const bool;
let _19: [u16; 5];
let _20: Adt52;
let _21: *mut u32;
let _22: [isize; 3];
let _23: (f64, [isize; 3], *mut u32, [i128; 6]);
let _24: [i128; 6];
let _25: Adt49;
let _26: [u8; 1];
let _27: u128;
let _28: isize;
let _29: f64;
let _30: [i8; 8];
let _31: Adt51;
let _32: u8;
let _33: char;
let _34: usize;
let _35: [usize; 1];
let _36: usize;
let _37: Adt51;
let _38: char;
let _39: [i32; 5];
let _40: Adt47;
let _41: isize;
let _42: ();
let _43: ();
{
_1 = 9223372036854775807_isize << _2;
RET = [237_u8];
_2 = 287106595364812804687330898825993049179_u128 * 206288270571352605173051756662306414642_u128;
_2 = 281138375598784164910436621758285376013_u128 | 111085539489758691157616539695697092651_u128;
_2 = !243739567894920050447725356752695016101_u128;
RET = [250_u8];
RET = [224_u8];
RET = [103_u8];
Goto(bb1)
}
bb1 = {
RET = [250_u8];
_4.0 = _2 as u64;
RET = [208_u8];
_2 = !2111957053130367358550638994850148341_u128;
RET = [107_u8];
RET = [232_u8];
_1 = -(-9223372036854775808_isize);
_2 = !293039511770747849293761724301065603212_u128;
_1 = _4.0 as isize;
_2 = _1 as u128;
_1 = 99_isize;
_5 = RET;
_1 = (-9223372036854775808_isize);
_6 = 16_i8 as isize;
_9.2 = false;
_9.0 = 30_u8 as u64;
Call(_5 = fn2(_9.2, _2, _1, _1, _9.2, _2, _2, _2, _4.0, _1, _1, _2, _6, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5 = RET;
_9.3 = _4.0 as f64;
RET = _5;
_4.0 = _6 as u64;
_9.1 = [3750140678579836115_usize];
_9.0 = _9.3 as u64;
_8 = _6 * _1;
_7 = '\u{a1fbc}';
_12 = (-8977387358786571923_i64) as u128;
_9.1 = [11229508610419050236_usize];
_10 = _6 as u128;
RET = [213_u8];
_7 = '\u{28d0}';
_6 = _1;
_4.1 = core::ptr::addr_of!(_9.2);
_6 = _1;
_5 = [25_u8];
_11 = _8;
_13.fld0 = [_4.0,_4.0,_9.0,_9.0,_4.0,_9.0];
_5 = RET;
Call(_9.0 = core::intrinsics::transmute(_8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = [245_u8];
_8 = _4.0 as isize;
_4.0 = (-147051783775115905048731453031825348701_i128) as u64;
_13.fld0 = [_9.0,_9.0,_4.0,_4.0,_4.0,_9.0];
_4.0 = !_9.0;
_7 = '\u{8384}';
_9.0 = _4.0 + _4.0;
_9.1 = [12205306398778371853_usize];
_9.0 = (-22_i8) as u64;
_9.4 = 9680430025587043944_usize as i16;
_8 = _11 + _1;
_10 = _6 as u128;
_4.1 = core::ptr::addr_of!(_9.2);
_12 = _8 as u128;
_7 = '\u{70cb0}';
RET = _5;
Goto(bb4)
}
bb4 = {
_9.2 = _7 > _7;
_10 = !_12;
_2 = 153_u8 as u128;
_9.0 = _4.0 >> _9.4;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463454151235394913435648 => bb6,
_ => bb5
}
}
bb5 = {
RET = [245_u8];
_8 = _4.0 as isize;
_4.0 = (-147051783775115905048731453031825348701_i128) as u64;
_13.fld0 = [_9.0,_9.0,_4.0,_4.0,_4.0,_9.0];
_4.0 = !_9.0;
_7 = '\u{8384}';
_9.0 = _4.0 + _4.0;
_9.1 = [12205306398778371853_usize];
_9.0 = (-22_i8) as u64;
_9.4 = 9680430025587043944_usize as i16;
_8 = _11 + _1;
_10 = _6 as u128;
_4.1 = core::ptr::addr_of!(_9.2);
_12 = _8 as u128;
_7 = '\u{70cb0}';
RET = _5;
Goto(bb4)
}
bb6 = {
_4.1 = core::ptr::addr_of!(_9.2);
_7 = '\u{8bb53}';
_9.0 = _9.2 as u64;
_9.4 = -14665_i16;
_12 = _10;
_5 = RET;
_4.0 = _9.0 >> _11;
_8 = 18223633267310220092_usize as isize;
_9.0 = !_4.0;
_1 = _6;
RET = _5;
_8 = 770126291_u32 as isize;
Goto(bb7)
}
bb7 = {
_18 = _4.1;
_9.3 = 1_usize as f64;
_9.4 = (-25528_i16) + (-16920_i16);
Goto(bb8)
}
bb8 = {
_9.4 = (-149135374848072803949919541784551848558_i128) as i16;
_6 = !_8;
_2 = !_10;
_10 = _2 * _12;
_19 = [12285_u16,12302_u16,50606_u16,32013_u16,1062_u16];
RET = [219_u8];
_15 = &RET;
_2 = _10;
_19 = [22784_u16,50437_u16,54863_u16,64859_u16,8813_u16];
_9.3 = (-300016024_i32) as f64;
Goto(bb9)
}
bb9 = {
_19 = [4887_u16,37123_u16,41670_u16,6889_u16,12985_u16];
_7 = '\u{a6ced}';
_6 = 48372_u16 as isize;
_4 = (_9.0, _18);
_13.fld0 = [_9.0,_4.0,_4.0,_4.0,_9.0,_9.0];
_4 = (_9.0, _18);
_10 = _2 ^ _2;
_22 = [_11,_1,_11];
_7 = '\u{2c411}';
_7 = '\u{6ff8d}';
_19 = [12702_u16,14335_u16,62633_u16,15514_u16,22139_u16];
_24 = [56582961334897093643599917583297583870_i128,(-72108773505114737579426741337197665241_i128),(-161781633859965728444006965780168737277_i128),44728100941978639966159616831736429848_i128,(-165634139796702552402992340294255972094_i128),53472654428907200193419293568223252373_i128];
_9.0 = _8 as u64;
_18 = _4.1;
_12 = 121_u8 as u128;
_8 = !_11;
_11 = -_8;
Goto(bb10)
}
bb10 = {
_8 = !_11;
_23.0 = _9.3 - _9.3;
RET = [123_u8];
_23.0 = _9.3 - _9.3;
_23.1 = _22;
_19 = [26849_u16,63751_u16,63416_u16,50115_u16,6615_u16];
_11 = _6;
_16 = [_4.0,_4.0,_9.0,_4.0,_4.0,_4.0];
Call(_13 = fn17(_6, _4, _2, _4, _23.1, _23.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_4.1 = core::ptr::addr_of!(_9.2);
_13.fld0 = [_4.0,_4.0,_4.0,_4.0,_9.0,_9.0];
_28 = !_11;
_13 = Adt47 { fld0: _16 };
_31 = Adt51::Variant0 { fld0: _13.fld0 };
_29 = _4.0 as f64;
_26 = [127_u8];
_13.fld0 = [_4.0,_4.0,_9.0,_4.0,_4.0,_4.0];
_28 = _9.4 as isize;
_22 = [_11,_1,_1];
_10 = (-7839899641210049808_i64) as u128;
_27 = (-27097523912945924183696851043094249887_i128) as u128;
_32 = 0_u8 + 193_u8;
_19 = [41202_u16,46913_u16,20872_u16,34766_u16,49012_u16];
SetDiscriminant(_31, 0);
_15 = &_5;
_31 = Adt51::Variant0 { fld0: _16 };
place!(Field::<[u64; 6]>(Variant(_31, 0), 0)) = [_4.0,_4.0,_9.0,_4.0,_4.0,_4.0];
_1 = _8 - _6;
_4 = (_9.0, _18);
_15 = &_5;
_13.fld0 = _16;
_30 = [84_i8,75_i8,(-67_i8),(-4_i8),(-107_i8),46_i8,(-58_i8),52_i8];
_30 = [(-117_i8),(-42_i8),(-28_i8),35_i8,(-126_i8),46_i8,89_i8,(-117_i8)];
_7 = '\u{f868b}';
_8 = _28 >> _11;
Call(RET = fn18(_28, _30, _8, _19, _4, _4, Move(_31), _13, _9.0, _24, (*_15), _4, _19, _30, _30, _4.1), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_27 = _2;
_23.3 = [(-151754808889076448172329273962690897821_i128),(-11398013576181856141397164332553062531_i128),41487772654201331400275297978371947599_i128,(-53379299965831426204991478566638850526_i128),(-7805160770706981244825640755964174563_i128),(-18791684261526683290421607063750435347_i128)];
_19 = [36099_u16,26556_u16,1090_u16,13976_u16,48680_u16];
_6 = _8 ^ _8;
Goto(bb13)
}
bb13 = {
_23.3 = _24;
_23.0 = 587429436_i32 as f64;
_34 = 2361299324601784777_usize >> _4.0;
_32 = 30_u8;
_15 = &RET;
_10 = !_27;
_11 = -_6;
_23.1 = [_11,_8,_11];
_10 = !_27;
_7 = '\u{a5cf5}';
_4 = (_9.0, _18);
_4 = (_9.0, _18);
_7 = '\u{e386b}';
_9.0 = _4.0;
_7 = '\u{57bf5}';
_9.0 = _4.0;
_19 = [12940_u16,40668_u16,24507_u16,27120_u16,65511_u16];
_36 = _34;
_4.1 = _18;
_29 = _9.3 + _9.3;
_18 = _4.1;
Goto(bb14)
}
bb14 = {
_8 = _9.2 as isize;
_15 = &_26;
_11 = _8 * _28;
_29 = (-2486071862382744822_i64) as f64;
_5 = [_32];
_13.fld0 = _16;
_34 = _36;
_26 = [_32];
_23.3 = _24;
_27 = _9.0 as u128;
_33 = _7;
_1 = _11 + _6;
_38 = _7;
_28 = _8 >> _32;
RET = [_32];
_33 = _7;
_18 = core::ptr::addr_of!(_9.2);
_30 = [(-67_i8),(-124_i8),(-74_i8),(-40_i8),116_i8,(-41_i8),27_i8,3_i8];
_35 = _9.1;
_9.3 = -_23.0;
_23.0 = _29 + _9.3;
_15 = &_5;
_4 = (_9.0, _18);
_1 = _11;
_24 = [(-70857353602650117310228440528085608207_i128),(-139416673122480398382290567990417840917_i128),(-168225167483014886569087495090263932620_i128),56003928287474375136203177849919431536_i128,(-131106971726985350896307458777399335316_i128),(-104417231004907729307031628412016738084_i128)];
_9.4 = (*_18) as i16;
_13 = Adt47 { fld0: _16 };
_19 = [42066_u16,29616_u16,13251_u16,12738_u16,47400_u16];
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(Move(_27), Move(_33), Move(_24), Move(_38)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(Move(_34), Move(_5), Move(_2), Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(Move(_22), Move(_6), Move(_12), _43), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: bool,mut _2: u128,mut _3: isize,mut _4: isize,mut _5: bool,mut _6: u128,mut _7: u128,mut _8: u128,mut _9: u64,mut _10: isize,mut _11: isize,mut _12: u128,mut _13: isize,mut _14: [u8; 1]) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _15: f32;
let _16: [i128; 6];
let _17: u16;
let _18: Adt42;
let _19: Adt55;
let _20: [i8; 3];
let _21: *const f32;
let _22: [isize; 3];
let _23: f32;
let _24: Adt56;
let _25: [i8; 8];
let _26: f32;
let _27: [i8; 3];
let _28: [u16; 6];
let _29: [i32; 5];
let _30: i16;
let _31: i128;
let _32: [i128; 6];
let _33: [u16; 5];
let _34: (u64, [usize; 1], bool, f64, i16);
let _35: Adt47;
let _36: f64;
let _37: Adt47;
let _38: [i8; 8];
let _39: Adt56;
let _40: char;
let _41: f64;
let _42: (i32, u16, i8, i8, f64);
let _43: [u16; 5];
let _44: [usize; 1];
let _45: isize;
let _46: *mut u32;
let _47: f64;
let _48: *mut u32;
let _49: bool;
let _50: [u16; 6];
let _51: u32;
let _52: i128;
let _53: *mut bool;
let _54: [i128; 6];
let _55: Adt53;
let _56: isize;
let _57: isize;
let _58: (u64, [usize; 1], bool, f64, i16);
let _59: f64;
let _60: [i32; 5];
let _61: *mut u32;
let _62: [isize; 3];
let _63: [u16; 6];
let _64: Adt47;
let _65: i8;
let _66: char;
let _67: (f64, [isize; 3], *mut u32, [i128; 6]);
let _68: isize;
let _69: u64;
let _70: (isize, &'static [u8; 1], f64);
let _71: [i8; 8];
let _72: usize;
let _73: f64;
let _74: bool;
let _75: Adt47;
let _76: isize;
let _77: isize;
let _78: (u64, [usize; 1], bool, f64, i16);
let _79: i64;
let _80: [i8; 3];
let _81: [u64; 6];
let _82: isize;
let _83: [u8; 1];
let _84: [i8; 8];
let _85: i8;
let _86: ();
let _87: ();
{
_14 = [78_u8];
RET = [126_u8];
_12 = _10 as u128;
_10 = _3;
RET = _14;
_1 = _5 ^ _5;
RET = [137_u8];
_14 = [184_u8];
RET = [91_u8];
_7 = _6;
_14 = RET;
_11 = '\u{a71eb}' as isize;
_13 = _10 << _12;
_7 = _2;
_4 = _13;
_15 = 372937490103860524_usize as f32;
_6 = !_7;
_2 = !_8;
match _10 {
340282366920938463454151235394913435648 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_17 = 974832897_u32 as u16;
_18.fld5.1 = [_10,_4,_13];
_3 = !_13;
_18.fld1 = core::ptr::addr_of_mut!(_18.fld0);
_11 = !_10;
_20 = [(-112_i8),(-5_i8),120_i8];
_18.fld5.3 = [138149391161921419035132469237679814739_i128,(-143000262832956891898996643350129230829_i128),67362288359160438236912384189531175619_i128,74958542599995458289519344510834545805_i128,147635410321674694945335298387556622862_i128,76834491716737439700585466154580046160_i128];
_18.fld7 = core::ptr::addr_of!(_15);
_9 = 5496_i16 as u64;
_14 = [248_u8];
_18.fld4 = 244_u8 as usize;
RET = _14;
_11 = !_3;
Goto(bb3)
}
bb3 = {
_5 = _12 >= _8;
_18.fld6 = _1 as u32;
_18.fld5.1 = [_4,_11,_10];
_18.fld5.1 = [_11,_13,_3];
_10 = !_11;
_22 = [_13,_10,_10];
_23 = _15 + _15;
_18.fld5.2 = core::ptr::addr_of_mut!(_18.fld6);
_5 = _1;
_18.fld1 = core::ptr::addr_of_mut!(_5);
_18.fld1 = core::ptr::addr_of_mut!(_1);
_8 = _7;
_18.fld5.1 = _22;
_18.fld1 = core::ptr::addr_of_mut!(_1);
RET = [86_u8];
_2 = 30606_i16 as u128;
_9 = 10981222270691513451_u64;
_18.fld3 = 104_i8 + 114_i8;
_18.fld2 = _18.fld4 as f64;
_18.fld0 = _8 < _7;
_3 = -_10;
_18.fld5.3 = [106145470053362599825742441887446144329_i128,(-52877288830871692577705839566697119699_i128),(-170064255565440590614746686345175508510_i128),(-121782061222609915638824979170691798695_i128),53049101335097700445500415700596264159_i128,41769474720100020976964640355703612266_i128];
_14 = RET;
_9 = 3728238350829274533_u64 + 9860928767596435749_u64;
_25 = [_18.fld3,_18.fld3,_18.fld3,_18.fld3,_18.fld3,_18.fld3,_18.fld3,_18.fld3];
_5 = !_18.fld0;
_18.fld0 = !_1;
Goto(bb4)
}
bb4 = {
_18.fld7 = core::ptr::addr_of!(_23);
_18.fld0 = !_5;
_10 = _13;
_21 = _18.fld7;
_10 = -_3;
_16 = _18.fld5.3;
_18.fld2 = _9 as f64;
_18.fld0 = !_1;
_5 = _10 != _4;
_18.fld3 = (-38293512657188349_i64) as i8;
_11 = _3;
_23 = _15 * _15;
_11 = _10;
_8 = !_12;
_23 = _15 * _15;
_8 = 841509638_i32 as u128;
RET = [214_u8];
Call(_26 = fn3(_18.fld7, _18.fld2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_23 = _26 + _26;
_18.fld5.0 = _18.fld2;
_4 = _18.fld2 as isize;
_4 = _10 - _3;
_18.fld1 = core::ptr::addr_of_mut!(_1);
_21 = core::ptr::addr_of!(_23);
_17 = _18.fld6 as u16;
_22 = _18.fld5.1;
_18.fld1 = core::ptr::addr_of_mut!(_18.fld0);
_16 = [109962314542913279310736101160233362775_i128,136198736241949131383027573112940113508_i128,(-150286207935865575811038312171816630384_i128),(-76902432080690385180832549684080962620_i128),7063604860945970188738374897961918358_i128,(-18377637649350463914998129090563374013_i128)];
_26 = -(*_21);
_12 = _18.fld2 as u128;
_8 = !_12;
_11 = !_4;
_18.fld1 = core::ptr::addr_of_mut!(_1);
_8 = !_7;
_26 = (*_21);
_29 = [(-263911955_i32),275167053_i32,(-1021492269_i32),762597074_i32,440536092_i32];
_12 = _2;
Goto(bb6)
}
bb6 = {
_18.fld0 = !_5;
_4 = _11 & _11;
_18.fld3 = _18.fld6 as i8;
_18.fld5.0 = _18.fld4 as f64;
_30 = _9 as i16;
_33 = [_17,_17,_17,_17,_17];
RET = _14;
_34.0 = _10 as u64;
_16 = _18.fld5.3;
_34.3 = _18.fld4 as f64;
_34.2 = _26 > _23;
_15 = (-907548395269692066_i64) as f32;
_31 = (-137321678449466428453298584483917428290_i128) ^ (-52108686988781987270564674079807996116_i128);
_18.fld4 = !11120928732270184073_usize;
_18.fld7 = _21;
Call(_37 = fn7(_18.fld7, _18.fld1, _21, _21, _13, _18, _21, _20, _18.fld2, _18.fld5), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_21 = _18.fld7;
_6 = !_2;
Goto(bb8)
}
bb8 = {
_35 = _37;
_40 = '\u{58c20}';
_18.fld5.1 = _22;
_34.2 = _18.fld0;
_16 = [_31,_31,_31,_31,_31,_31];
_6 = _4 as u128;
_34.3 = -_18.fld2;
_18.fld5.0 = -_34.3;
_18.fld1 = core::ptr::addr_of_mut!(_1);
Goto(bb9)
}
bb9 = {
_16 = _18.fld5.3;
_33 = [_17,_17,_17,_17,_17];
_37 = Adt47 { fld0: _35.fld0 };
_44 = [_18.fld4];
_37 = Adt47 { fld0: _35.fld0 };
_47 = _18.fld2 + _18.fld2;
_30 = -(-11014_i16);
_22 = [_4,_4,_11];
_11 = _40 as isize;
_46 = _18.fld5.2;
_42.2 = _18.fld3;
_18.fld0 = !_1;
_36 = _18.fld5.0 + _47;
_42.3 = _18.fld3;
Goto(bb10)
}
bb10 = {
_43 = [_17,_17,_17,_17,_17];
_18.fld5.2 = core::ptr::addr_of_mut!(_18.fld6);
_47 = _34.3;
_38 = _25;
_42.2 = 1089222024_i32 as i8;
_17 = !24969_u16;
_18.fld5.2 = _46;
_38 = _25;
_36 = -_47;
_35 = Adt47 { fld0: _37.fld0 };
_18.fld5.3 = [_31,_31,_31,_31,_31,_31];
_29 = [350140222_i32,(-1761154406_i32),765621714_i32,(-752385518_i32),857821982_i32];
_48 = core::ptr::addr_of_mut!(_51);
_34.1 = [_18.fld4];
_15 = _23;
_53 = core::ptr::addr_of_mut!(_5);
_46 = core::ptr::addr_of_mut!((*_48));
_37.fld0 = _35.fld0;
_42 = ((-2090682767_i32), _17, _18.fld3, _18.fld3, _36);
Goto(bb11)
}
bb11 = {
_18.fld2 = _34.3;
_44 = [_18.fld4];
_42.4 = _36 - _47;
_4 = _10;
_52 = _31;
_42 = (1503129809_i32, _17, _18.fld3, _18.fld3, _18.fld2);
_56 = _3;
_34.4 = _30 + _30;
_15 = _2 as f32;
_34.3 = _18.fld4 as f64;
_7 = _30 as u128;
_62 = [_10,_3,_56];
RET = [172_u8];
_27 = [_42.2,_18.fld3,_18.fld3];
_37 = Adt47 { fld0: _35.fld0 };
_38 = [_42.3,_42.2,_42.3,_42.3,_18.fld3,_42.2,_42.3,_42.2];
_37 = Adt47 { fld0: _35.fld0 };
_50 = [_42.1,_17,_42.1,_42.1,_17,_42.1];
_57 = -_13;
_61 = core::ptr::addr_of_mut!(_51);
_34.1 = [_18.fld4];
_37.fld0 = [_9,_34.0,_34.0,_9,_9,_9];
_20 = _27;
_18.fld2 = _18.fld5.0 + _47;
Goto(bb12)
}
bb12 = {
_58 = (_9, _34.1, _1, _36, _30);
_58.1 = [_18.fld4];
_40 = '\u{de22f}';
_42.3 = !_42.2;
_64 = Adt47 { fld0: _37.fld0 };
_58.2 = _18.fld0;
_15 = _34.0 as f32;
_18.fld3 = _42.3 - _42.2;
_32 = [_52,_52,_31,_31,_31,_52];
_53 = _18.fld1;
_4 = !_57;
_27 = _20;
_59 = _18.fld2;
_51 = !_18.fld6;
RET = _14;
_58 = _34;
_67.2 = _18.fld5.2;
_37.fld0 = _64.fld0;
_67.1 = [_3,_13,_56];
Goto(bb13)
}
bb13 = {
_70.1 = &RET;
_72 = _58.4 as usize;
_16 = _32;
_44 = _34.1;
_15 = _23;
_47 = _36 + _42.4;
_3 = _10 - _57;
_68 = _18.fld3 as isize;
_45 = -_68;
match _42.0 {
0 => bb8,
1 => bb2,
2 => bb12,
3 => bb10,
4 => bb5,
5 => bb6,
1503129809 => bb15,
_ => bb14
}
}
bb14 = {
_23 = _26 + _26;
_18.fld5.0 = _18.fld2;
_4 = _18.fld2 as isize;
_4 = _10 - _3;
_18.fld1 = core::ptr::addr_of_mut!(_1);
_21 = core::ptr::addr_of!(_23);
_17 = _18.fld6 as u16;
_22 = _18.fld5.1;
_18.fld1 = core::ptr::addr_of_mut!(_18.fld0);
_16 = [109962314542913279310736101160233362775_i128,136198736241949131383027573112940113508_i128,(-150286207935865575811038312171816630384_i128),(-76902432080690385180832549684080962620_i128),7063604860945970188738374897961918358_i128,(-18377637649350463914998129090563374013_i128)];
_26 = -(*_21);
_12 = _18.fld2 as u128;
_8 = !_12;
_11 = !_4;
_18.fld1 = core::ptr::addr_of_mut!(_1);
_8 = !_7;
_26 = (*_21);
_29 = [(-263911955_i32),275167053_i32,(-1021492269_i32),762597074_i32,440536092_i32];
_12 = _2;
Goto(bb6)
}
bb15 = {
_69 = _34.0;
_34.1 = [_72];
_67.2 = _46;
_64.fld0 = [_69,_9,_9,_34.0,_34.0,_58.0];
_7 = _15 as u128;
_4 = _34.2 as isize;
_35 = Adt47 { fld0: _64.fld0 };
_46 = core::ptr::addr_of_mut!((*_46));
_67.1 = [_13,_13,_45];
_59 = -_36;
_17 = _42.1;
_18.fld5 = (_18.fld2, _67.1, _61, _16);
_18.fld1 = _53;
_58.1 = [_18.fld4];
_2 = _34.4 as u128;
_22 = [_45,_11,_3];
_49 = _57 == _57;
_34.4 = _58.4 ^ _58.4;
_26 = _15 - _15;
_54 = [_31,_31,_31,_31,_52,_31];
_16 = _18.fld5.3;
_38 = _25;
_70.2 = _58.4 as f64;
_72 = _26 as usize;
_57 = !_4;
Goto(bb16)
}
bb16 = {
Call(_86 = dump_var(Move(_1), Move(_7), Move(_12), Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_86 = dump_var(Move(_44), Move(_27), Move(_72), Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_86 = dump_var(Move(_8), Move(_3), Move(_22), Move(_17)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_86 = dump_var(Move(_33), Move(_11), Move(_16), Move(_32)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_86 = dump_var(Move(_62), Move(_68), Move(_38), Move(_45)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: *const f32,mut _2: f64) -> f32 {
mir! {
type RET = f32;
let _3: [u8; 1];
let _4: [isize; 3];
let _5: f64;
let _6: f32;
let _7: i32;
let _8: [isize; 3];
let _9: [i32; 5];
let _10: Adt48;
let _11: Adt47;
let _12: char;
let _13: [usize; 1];
let _14: u32;
let _15: u32;
let _16: *mut isize;
let _17: u128;
let _18: [i128; 6];
let _19: [i32; 5];
let _20: [u16; 5];
let _21: isize;
let _22: Adt56;
let _23: u16;
let _24: [u64; 6];
let _25: ();
let _26: ();
{
_2 = 1_usize as f64;
RET = 6_usize as f32;
RET = (-91523578709428624098830407750424027901_i128) as f32;
_3 = [21_u8];
RET = 5_usize as f32;
_1 = core::ptr::addr_of!(RET);
_3 = [54_u8];
RET = 1284882472_u32 as f32;
_5 = _2 * _2;
_4 = [(-90_isize),(-103_isize),(-106_isize)];
_1 = core::ptr::addr_of!((*_1));
_6 = (*_1) + (*_1);
_1 = core::ptr::addr_of!(_6);
_3 = [151_u8];
_1 = core::ptr::addr_of!(RET);
_4 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-71_isize)];
Goto(bb1)
}
bb1 = {
RET = _6;
_5 = -_2;
_2 = (*_1) as f64;
_7 = (-1576085530_i32) * (-1891293112_i32);
_1 = core::ptr::addr_of!((*_1));
_8 = [(-128_isize),(-9223372036854775808_isize),92_isize];
_9 = [_7,_7,_7,_7,_7];
_7 = (-1656166801_i32);
_3 = [153_u8];
_2 = -_5;
RET = _6;
RET = -_6;
Call(_4 = core::intrinsics::transmute(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = [_7,_7,_7,_7,_7];
_7 = !1731649068_i32;
_7 = !(-1372592107_i32);
_2 = (-62257573569417798717740363392773353821_i128) as f64;
_1 = core::ptr::addr_of!((*_1));
_7 = 30974_i16 as i32;
_7 = (-9223372036854775808_isize) as i32;
Goto(bb3)
}
bb3 = {
_7 = 1720654351_i32;
_8 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize)];
RET = _7 as f32;
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_13 = [621915211648100505_usize];
_12 = '\u{b7d61}';
_2 = _5;
RET = 247969758305015780916334024671029640852_u128 as f32;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11.fld0 = [10783537170597681804_u64,12142750559169436244_u64,16882360916050309981_u64,3672181937493237467_u64,18111410032165629875_u64,16552868441820122274_u64];
_11.fld0 = [3954313477179894728_u64,7147519222858231758_u64,4818859207628427981_u64,12856854645585146467_u64,17490900099124783378_u64,5258486542285369316_u64];
_11.fld0 = [14310618942051040416_u64,1662750640861946552_u64,8925492536222923770_u64,4864415365152878494_u64,11105858793097125070_u64,1746981051924334849_u64];
_15 = 723951817_u32 & 1731685700_u32;
_8 = [34_isize,(-54_isize),(-9223372036854775808_isize)];
RET = _6 - _6;
_5 = -_2;
Call(_3 = fn4((*_1), _11, RET, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_4 = _8;
_9 = [_7,_7,_7,_7,_7];
_3 = [73_u8];
match _7 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
1720654351 => bb9,
_ => bb8
}
}
bb5 = {
_7 = 1720654351_i32;
_8 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize)];
RET = _7 as f32;
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_13 = [621915211648100505_usize];
_12 = '\u{b7d61}';
_2 = _5;
RET = 247969758305015780916334024671029640852_u128 as f32;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11.fld0 = [10783537170597681804_u64,12142750559169436244_u64,16882360916050309981_u64,3672181937493237467_u64,18111410032165629875_u64,16552868441820122274_u64];
_11.fld0 = [3954313477179894728_u64,7147519222858231758_u64,4818859207628427981_u64,12856854645585146467_u64,17490900099124783378_u64,5258486542285369316_u64];
_11.fld0 = [14310618942051040416_u64,1662750640861946552_u64,8925492536222923770_u64,4864415365152878494_u64,11105858793097125070_u64,1746981051924334849_u64];
_15 = 723951817_u32 & 1731685700_u32;
_8 = [34_isize,(-54_isize),(-9223372036854775808_isize)];
RET = _6 - _6;
_5 = -_2;
Call(_3 = fn4((*_1), _11, RET, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_9 = [_7,_7,_7,_7,_7];
_7 = !1731649068_i32;
_7 = !(-1372592107_i32);
_2 = (-62257573569417798717740363392773353821_i128) as f64;
_1 = core::ptr::addr_of!((*_1));
_7 = 30974_i16 as i32;
_7 = (-9223372036854775808_isize) as i32;
Goto(bb3)
}
bb7 = {
RET = _6;
_5 = -_2;
_2 = (*_1) as f64;
_7 = (-1576085530_i32) * (-1891293112_i32);
_1 = core::ptr::addr_of!((*_1));
_8 = [(-128_isize),(-9223372036854775808_isize),92_isize];
_9 = [_7,_7,_7,_7,_7];
_7 = (-1656166801_i32);
_3 = [153_u8];
_2 = -_5;
RET = _6;
RET = -_6;
Call(_4 = core::intrinsics::transmute(_8), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_11.fld0 = [16337369097485473222_u64,2516139966196065741_u64,1063718065459475534_u64,13568848176744502821_u64,9700154368846517125_u64,13787868702185427644_u64];
_14 = _15;
_14 = !_15;
_9 = [_7,_7,_7,_7,_7];
_15 = _14 << _14;
_8 = [102_isize,9223372036854775807_isize,9223372036854775807_isize];
_11.fld0 = [5142699950037563929_u64,12927876029418351926_u64,5758087983532447791_u64,630982416276843006_u64,10148379691204185650_u64,15252656095808740901_u64];
_15 = _14 & _14;
_13 = [0_usize];
_4 = _8;
_5 = -_2;
RET = _6 - _6;
_18 = [123501138513259532539040965974806116393_i128,30880362618189614980971083208742652045_i128,(-39560159976608654158450364647864024680_i128),46471018481376558171796562878619590437_i128,(-61663665831961061023056545100053449230_i128),(-145772703932572343521965807065697934333_i128)];
_13 = [12979138009888961823_usize];
_15 = (-18502628804508906461057404540253380152_i128) as u32;
_3 = [32_u8];
_15 = _14;
_8 = _4;
Goto(bb10)
}
bb10 = {
_17 = 48323863187879771830734759868112044107_u128 * 244502433163800854939462928786430491233_u128;
_15 = !_14;
_9 = [_7,_7,_7,_7,_7];
_3 = [167_u8];
_18 = [75133694186478737803916860621511568451_i128,(-32044085758088773981205255486432741651_i128),82102843807476814106264007563852386084_i128,164498186769568637637999976196096284132_i128,(-165447139369547133126321225064305230007_i128),(-62179275678699924213313893836394247238_i128)];
_8 = _4;
_3 = [51_u8];
_20 = [30939_u16,593_u16,54602_u16,8023_u16,46794_u16];
_9 = [_7,_7,_7,_7,_7];
_19 = [_7,_7,_7,_7,_7];
_1 = core::ptr::addr_of!((*_1));
_16 = core::ptr::addr_of_mut!(_21);
_15 = _14;
_1 = core::ptr::addr_of!((*_1));
_8 = [64_isize,(-99_isize),9223372036854775807_isize];
_16 = core::ptr::addr_of_mut!((*_16));
_17 = (-140161938096835621516016240412901440823_i128) as u128;
_8 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_21 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
RET = _6;
_1 = core::ptr::addr_of!(_6);
_18 = [75317091688971105272316602365257386950_i128,(-56637940963499250374826570380139933677_i128),(-140713663344962107075384160801736395313_i128),165555885681182396078757663140731358153_i128,(-152353728574293786035112503671826983143_i128),146233611107510043150340790413562567520_i128];
_3 = [86_u8];
RET = _6;
_20 = [9564_u16,26898_u16,35516_u16,60785_u16,32999_u16];
_16 = core::ptr::addr_of_mut!((*_16));
_7 = 225212787_i32;
match _7 {
0 => bb11,
1 => bb12,
225212787 => bb14,
_ => bb13
}
}
bb11 = {
_4 = _8;
_9 = [_7,_7,_7,_7,_7];
_3 = [73_u8];
match _7 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
1720654351 => bb9,
_ => bb8
}
}
bb12 = {
_7 = 1720654351_i32;
_8 = [9223372036854775807_isize,(-72_isize),(-9223372036854775808_isize)];
RET = _7 as f32;
_4 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_13 = [621915211648100505_usize];
_12 = '\u{b7d61}';
_2 = _5;
RET = 247969758305015780916334024671029640852_u128 as f32;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11.fld0 = [10783537170597681804_u64,12142750559169436244_u64,16882360916050309981_u64,3672181937493237467_u64,18111410032165629875_u64,16552868441820122274_u64];
_11.fld0 = [3954313477179894728_u64,7147519222858231758_u64,4818859207628427981_u64,12856854645585146467_u64,17490900099124783378_u64,5258486542285369316_u64];
_11.fld0 = [14310618942051040416_u64,1662750640861946552_u64,8925492536222923770_u64,4864415365152878494_u64,11105858793097125070_u64,1746981051924334849_u64];
_15 = 723951817_u32 & 1731685700_u32;
_8 = [34_isize,(-54_isize),(-9223372036854775808_isize)];
RET = _6 - _6;
_5 = -_2;
Call(_3 = fn4((*_1), _11, RET, _8), ReturnTo(bb4), UnwindUnreachable())
}
bb13 = {
_9 = [_7,_7,_7,_7,_7];
_7 = !1731649068_i32;
_7 = !(-1372592107_i32);
_2 = (-62257573569417798717740363392773353821_i128) as f64;
_1 = core::ptr::addr_of!((*_1));
_7 = 30974_i16 as i32;
_7 = (-9223372036854775808_isize) as i32;
Goto(bb3)
}
bb14 = {
_1 = core::ptr::addr_of!((*_1));
_5 = _2;
_13 = [4_usize];
_16 = core::ptr::addr_of_mut!(_21);
RET = (*_1) + _6;
_11.fld0 = [14124482191319695385_u64,15668800918118751513_u64,14874979430331912880_u64,3469673521144596943_u64,13686690320929517676_u64,265533176933179495_u64];
_24 = [5822706592246908686_u64,6074536059980510955_u64,15287602243924138231_u64,7036740715993454514_u64,11577852434024039145_u64,14593201997308361238_u64];
_11.fld0 = [15147647157580320933_u64,12496935059287610765_u64,3257566226672300363_u64,16422071601411545768_u64,18269425753349869165_u64,874941816821425720_u64];
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(Move(_12), Move(_19), Move(_18), Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(Move(_9), Move(_4), Move(_3), _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: f32,mut _2: Adt47,mut _3: f32,mut _4: [isize; 3]) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _5: u16;
let _6: (isize, &'static [u8; 1], f64);
let _7: char;
let _8: char;
let _9: bool;
let _10: Adt47;
let _11: bool;
let _12: f64;
let _13: Adt53;
let _14: (u64, [usize; 1], bool, f64, i16);
let _15: *const bool;
let _16: u32;
let _17: usize;
let _18: Adt57;
let _19: f64;
let _20: isize;
let _21: (i32, u16, i8, i8, f64);
let _22: [i8; 3];
let _23: f32;
let _24: [u64; 6];
let _25: [i128; 6];
let _26: u32;
let _27: f32;
let _28: i8;
let _29: usize;
let _30: char;
let _31: *const f32;
let _32: bool;
let _33: i128;
let _34: u64;
let _35: [u64; 6];
let _36: char;
let _37: ();
let _38: ();
{
_1 = 9574305105814693865_u64 as f32;
Goto(bb1)
}
bb1 = {
_2.fld0 = [6865306385858744892_u64,10778571030222395662_u64,4992376671626267336_u64,137733704919401211_u64,11145249962437001918_u64,11522129086244066593_u64];
_4 = [9223372036854775807_isize,117_isize,(-9223372036854775808_isize)];
_4 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET = [243_u8];
_4 = [(-9223372036854775808_isize),39_isize,92_isize];
_5 = 17883_u16;
_2.fld0 = [17712232134489965533_u64,5628230577605410959_u64,800940830152608806_u64,758101475285143610_u64,18413830608932722465_u64,12157585228436001621_u64];
Goto(bb2)
}
bb2 = {
_5 = 27605_u16 + 39055_u16;
_4 = [86_isize,(-45_isize),70_isize];
_3 = -_1;
RET = [40_u8];
_3 = (-125087726978969702916775106133073162742_i128) as f32;
_3 = _1 - _1;
_3 = -_1;
_3 = _1;
RET = [5_u8];
_3 = _1 - _1;
RET = [118_u8];
_4 = [(-9223372036854775808_isize),(-49_isize),9223372036854775807_isize];
RET = [232_u8];
_3 = _1 - _1;
RET = [206_u8];
_6.0 = (-2321515735122341015_i64) as isize;
_6.2 = (-6678076002976130317_i64) as f64;
_5 = 2038299541_i32 as u16;
_6.1 = &RET;
_5 = 58445_u16;
RET = [67_u8];
_7 = '\u{e8826}';
_8 = _7;
_6.1 = &RET;
_6.1 = &RET;
RET = [242_u8];
_5 = 13328_u16 << _6.0;
_3 = 3_usize as f32;
_8 = _7;
Goto(bb3)
}
bb3 = {
RET = [191_u8];
_6.1 = &RET;
_1 = _3;
Goto(bb4)
}
bb4 = {
_9 = true ^ false;
_4 = [_6.0,_6.0,_6.0];
_5 = 25450_u16;
_6.0 = 18_isize;
_6.2 = 3914380150424326774_i64 as f64;
RET = [37_u8];
_6.2 = 1878610273_i32 as f64;
Call(_6.2 = fn5(_3, _8, _2.fld0, _4, _2, _2, _2.fld0, _2, _1, _3, _6.0, _9, _2, _2.fld0, _6.0, _2.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_2.fld0 = [15838527948717421941_u64,8610199003650995936_u64,18113717247520402336_u64,14660983244968191109_u64,16515728208659208379_u64,1159400078868862266_u64];
_10 = Adt47 { fld0: _2.fld0 };
_6.2 = 17089542325094990555_u64 as f64;
_5 = (-117865372251066997361332913217844896355_i128) as u16;
_5 = !27618_u16;
RET = [16_u8];
_10 = Adt47 { fld0: _2.fld0 };
RET = [183_u8];
_2 = Adt47 { fld0: _10.fld0 };
_6.1 = &RET;
_11 = _8 == _8;
_7 = _8;
Goto(bb6)
}
bb6 = {
_2 = _10;
_11 = !_9;
match _6.0 {
18 => bb8,
_ => bb7
}
}
bb7 = {
_9 = true ^ false;
_4 = [_6.0,_6.0,_6.0];
_5 = 25450_u16;
_6.0 = 18_isize;
_6.2 = 3914380150424326774_i64 as f64;
RET = [37_u8];
_6.2 = 1878610273_i32 as f64;
Call(_6.2 = fn5(_3, _8, _2.fld0, _4, _2, _2, _2.fld0, _2, _1, _3, _6.0, _9, _2, _2.fld0, _6.0, _2.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb8 = {
_14.3 = 3316_i16 as f64;
_8 = _7;
_1 = _3;
_16 = (-5703933649082417868_i64) as u32;
_16 = 2238006619_u32;
_16 = (-30018_i16) as u32;
_21 = (1131627766_i32, _5, (-21_i8), (-13_i8), _14.3);
RET = [63_u8];
_14.2 = _9;
_9 = _14.2;
_6.0 = _21.3 as isize;
_21.0 = (-1450766507_i32) ^ 644959676_i32;
_10.fld0 = _2.fld0;
_11 = !_9;
_8 = _7;
_6.0 = (-45_isize);
_14.3 = _21.0 as f64;
_21.3 = _21.2 - _21.2;
_7 = _8;
RET = [162_u8];
Goto(bb9)
}
bb9 = {
_14.4 = _3 as i16;
_6.2 = (-90994145947466213047609412430811596763_i128) as f64;
_11 = !_14.2;
_6.0 = 73_u8 as isize;
_12 = -_6.2;
_14.1 = [13533425319537732316_usize];
_24 = [4119283241782637922_u64,6926708712136769502_u64,1864145717966233501_u64,15769161602208536869_u64,4095769108097283503_u64,6762352606580576230_u64];
RET = [147_u8];
_6.2 = _14.3;
_10.fld0 = [16387982653665610854_u64,12473362779891886963_u64,16864291383610152367_u64,8323222909074628285_u64,14757676074727081122_u64,17851397865685976868_u64];
_15 = core::ptr::addr_of!(_11);
_6.2 = 598409831862364235_usize as f64;
_21.2 = _14.3 as i8;
Goto(bb10)
}
bb10 = {
_10.fld0 = _2.fld0;
_21 = ((-375515557_i32), _5, (-68_i8), 124_i8, _12);
_14.0 = !14341719960690124304_u64;
_20 = !_6.0;
_6.1 = &RET;
_21.3 = _21.2 + _21.2;
_12 = _6.2 * _14.3;
_23 = _1;
_27 = _14.3 as f32;
_6.0 = _7 as isize;
_15 = core::ptr::addr_of!(_14.2);
_25 = [79298712430824774435302524158597026963_i128,(-8840182665518212775826196326243634049_i128),164679447553565120946772230426054559766_i128,(-119420610834286612697118300872550387642_i128),15766000666150494381864464151297461396_i128,59068480734507549710238935954636767819_i128];
_22 = [_21.3,_21.3,_21.2];
_11 = (*_15);
_2.fld0 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
RET = [83_u8];
_21.2 = !_21.3;
_21.1 = _5;
_20 = -_6.0;
_5 = _6.0 as u16;
match _21.0 {
0 => bb7,
1 => bb6,
2 => bb11,
3 => bb12,
340282366920938463463374607431392695899 => bb14,
_ => bb13
}
}
bb11 = {
_14.4 = _3 as i16;
_6.2 = (-90994145947466213047609412430811596763_i128) as f64;
_11 = !_14.2;
_6.0 = 73_u8 as isize;
_12 = -_6.2;
_14.1 = [13533425319537732316_usize];
_24 = [4119283241782637922_u64,6926708712136769502_u64,1864145717966233501_u64,15769161602208536869_u64,4095769108097283503_u64,6762352606580576230_u64];
RET = [147_u8];
_6.2 = _14.3;
_10.fld0 = [16387982653665610854_u64,12473362779891886963_u64,16864291383610152367_u64,8323222909074628285_u64,14757676074727081122_u64,17851397865685976868_u64];
_15 = core::ptr::addr_of!(_11);
_6.2 = 598409831862364235_usize as f64;
_21.2 = _14.3 as i8;
Goto(bb10)
}
bb12 = {
_14.3 = 3316_i16 as f64;
_8 = _7;
_1 = _3;
_16 = (-5703933649082417868_i64) as u32;
_16 = 2238006619_u32;
_16 = (-30018_i16) as u32;
_21 = (1131627766_i32, _5, (-21_i8), (-13_i8), _14.3);
RET = [63_u8];
_14.2 = _9;
_9 = _14.2;
_6.0 = _21.3 as isize;
_21.0 = (-1450766507_i32) ^ 644959676_i32;
_10.fld0 = _2.fld0;
_11 = !_9;
_8 = _7;
_6.0 = (-45_isize);
_14.3 = _21.0 as f64;
_21.3 = _21.2 - _21.2;
_7 = _8;
RET = [162_u8];
Goto(bb9)
}
bb13 = {
_2.fld0 = [6865306385858744892_u64,10778571030222395662_u64,4992376671626267336_u64,137733704919401211_u64,11145249962437001918_u64,11522129086244066593_u64];
_4 = [9223372036854775807_isize,117_isize,(-9223372036854775808_isize)];
_4 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET = [243_u8];
_4 = [(-9223372036854775808_isize),39_isize,92_isize];
_5 = 17883_u16;
_2.fld0 = [17712232134489965533_u64,5628230577605410959_u64,800940830152608806_u64,758101475285143610_u64,18413830608932722465_u64,12157585228436001621_u64];
Goto(bb2)
}
bb14 = {
_14.2 = _11;
_6.2 = _12 - _12;
_10.fld0 = _24;
_33 = 35135972825598682868333069995509191629_i128;
_19 = _21.0 as f64;
_16 = !4037672632_u32;
_17 = !17848287586890337725_usize;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(Move(_9), Move(_7), Move(_11), Move(_25)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(Move(_4), Move(_17), _38, _38), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: f32,mut _2: char,mut _3: [u64; 6],mut _4: [isize; 3],mut _5: Adt47,mut _6: Adt47,mut _7: [u64; 6],mut _8: Adt47,mut _9: f32,mut _10: f32,mut _11: isize,mut _12: bool,mut _13: Adt47,mut _14: [u64; 6],mut _15: isize,mut _16: [u64; 6]) -> f64 {
mir! {
type RET = f64;
let _17: [i32; 5];
let _18: char;
let _19: [i8; 3];
let _20: char;
let _21: usize;
let _22: (u64, [usize; 1], bool, f64, i16);
let _23: [u16; 6];
let _24: Adt58;
let _25: [usize; 1];
let _26: isize;
let _27: u8;
let _28: char;
let _29: Adt58;
let _30: ();
let _31: ();
{
RET = 9579_i16 as f64;
_11 = 3_u8 as isize;
_16 = [2332602940564345334_u64,6642173735261993333_u64,6337202782878525848_u64,420547074755926156_u64,2573612541810734873_u64,7728666734479167061_u64];
_16 = _6.fld0;
_3 = [6837453460215704146_u64,9772229967297188067_u64,16446205835995614884_u64,98601333563761575_u64,17454330990302157100_u64,18232661231809410888_u64];
_10 = 7155150148194654535_u64 as f32;
_10 = 11067_u16 as f32;
_5 = Adt47 { fld0: _16 };
_6.fld0 = _13.fld0;
_8.fld0 = [7332525931126306772_u64,9167099183131633617_u64,10415517639876776156_u64,7783128885490578731_u64,17940305337206734080_u64,11027898967303992957_u64];
_2 = '\u{2b2d5}';
_14 = [1838649725058315390_u64,16662652382506969041_u64,11501271208675667144_u64,14051038341392776173_u64,2778083464147734341_u64,2820856770573128034_u64];
_2 = '\u{36dd7}';
_11 = _15;
_17 = [(-1295209102_i32),(-588796141_i32),(-1371995150_i32),845804935_i32,1363281293_i32];
_9 = _10;
_13 = Adt47 { fld0: _7 };
_1 = -_10;
_4 = [_15,_11,_11];
_10 = (-20947_i16) as f32;
Goto(bb1)
}
bb1 = {
_1 = _10 * _10;
_13.fld0 = [8070973999026311172_u64,258330873351523615_u64,14544400095280871857_u64,3021242739185837670_u64,9899336924454660599_u64,10115659191456103095_u64];
_6 = Adt47 { fld0: _8.fld0 };
Goto(bb2)
}
bb2 = {
_13.fld0 = _14;
_2 = '\u{3133d}';
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
18 => bb8,
_ => bb7
}
}
bb3 = {
_1 = _10 * _10;
_13.fld0 = [8070973999026311172_u64,258330873351523615_u64,14544400095280871857_u64,3021242739185837670_u64,9899336924454660599_u64,10115659191456103095_u64];
_6 = Adt47 { fld0: _8.fld0 };
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_13 = Adt47 { fld0: _3 };
_13 = _5;
_17 = [2141669622_i32,(-381307556_i32),(-653555150_i32),(-654059427_i32),1349752137_i32];
_12 = false;
_17 = [1001078262_i32,1783062993_i32,1037699303_i32,(-1606134927_i32),1149596508_i32];
_1 = _10 * _10;
_13 = Adt47 { fld0: _14 };
_14 = _8.fld0;
_5.fld0 = _7;
_2 = '\u{74a78}';
_7 = [18040803735540652597_u64,13626435979006365324_u64,10257174465346411014_u64,12222133793196822221_u64,368906467385663300_u64,12840787568972113371_u64];
_14 = [6999397550318882466_u64,4734614431348016749_u64,1865271710468239616_u64,5239430213389893051_u64,4282295283569135614_u64,16145574411474199878_u64];
_18 = _2;
_20 = _2;
_22.2 = !_12;
_22.3 = RET;
_8 = Adt47 { fld0: _3 };
RET = -_22.3;
_4 = [_15,_11,_15];
_8.fld0 = [6898936969746130567_u64,14779993323464064236_u64,7362515569928777244_u64,15130279019083854448_u64,4517523185535300828_u64,5089963500431490573_u64];
Call(_9 = core::intrinsics::transmute(_2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_23 = [53875_u16,64754_u16,38739_u16,22753_u16,15433_u16,23113_u16];
_20 = _2;
_21 = 1773054412741410927_usize;
_14 = _7;
RET = (-14853_i16) as f64;
_9 = -_1;
_23 = [6579_u16,4289_u16,35945_u16,9370_u16,37064_u16,65304_u16];
_10 = -_1;
_1 = 10359122834400598032_u64 as f32;
_18 = _2;
Call(_6 = fn6(_15, _1, _23, _8, _5, _5.fld0, _1, _11, _12, _13, _7, _3, _16, _15), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_14 = [17414658457977711539_u64,5215236810100514757_u64,17075308825195345035_u64,13620442101860286278_u64,489090857206404341_u64,4472747308967160131_u64];
_5.fld0 = [10468872400239164033_u64,11019727596675595953_u64,15344776641793328836_u64,14205536159068765641_u64,12273202924529098674_u64,14117940884199530781_u64];
_23 = [54271_u16,33127_u16,2236_u16,34355_u16,42811_u16,6806_u16];
_5.fld0 = [7623424433972410623_u64,9345863416468245742_u64,3765057281344623875_u64,6494898049519040913_u64,13616456951131206016_u64,7949159856761656973_u64];
_6 = _5;
RET = _9 as f64;
_12 = _22.2;
_12 = _22.2;
_22.4 = 24124_i16 - (-14432_i16);
_12 = RET > RET;
_17 = [523753878_i32,1633125128_i32,1988859238_i32,(-347843224_i32),1865930221_i32];
_5.fld0 = [323382221375602046_u64,151584481401353184_u64,9193689605435994831_u64,7223036826772262189_u64,10562344347633036270_u64,9548937817664910669_u64];
_22.0 = 9537512190498197538_u64 >> _11;
_21 = !13334120928644029277_usize;
_5.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_1 = -_10;
_22.1 = [_21];
_22.3 = RET;
Goto(bb11)
}
bb11 = {
_25 = [_21];
_2 = _18;
_23 = [46957_u16,15140_u16,41201_u16,49808_u16,11244_u16,37018_u16];
_22.0 = !6606825371603407308_u64;
_4 = [_15,_11,_11];
_9 = _1 * _10;
_5 = _13;
_23 = [27648_u16,7902_u16,19780_u16,41215_u16,7470_u16,21109_u16];
match _15 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
18 => bb20,
_ => bb19
}
}
bb12 = {
_1 = _10 * _10;
_13.fld0 = [8070973999026311172_u64,258330873351523615_u64,14544400095280871857_u64,3021242739185837670_u64,9899336924454660599_u64,10115659191456103095_u64];
_6 = Adt47 { fld0: _8.fld0 };
Goto(bb2)
}
bb13 = {
_23 = [53875_u16,64754_u16,38739_u16,22753_u16,15433_u16,23113_u16];
_20 = _2;
_21 = 1773054412741410927_usize;
_14 = _7;
RET = (-14853_i16) as f64;
_9 = -_1;
_23 = [6579_u16,4289_u16,35945_u16,9370_u16,37064_u16,65304_u16];
_10 = -_1;
_1 = 10359122834400598032_u64 as f32;
_18 = _2;
Call(_6 = fn6(_15, _1, _23, _8, _5, _5.fld0, _1, _11, _12, _13, _7, _3, _16, _15), ReturnTo(bb10), UnwindUnreachable())
}
bb14 = {
_13 = Adt47 { fld0: _3 };
_13 = _5;
_17 = [2141669622_i32,(-381307556_i32),(-653555150_i32),(-654059427_i32),1349752137_i32];
_12 = false;
_17 = [1001078262_i32,1783062993_i32,1037699303_i32,(-1606134927_i32),1149596508_i32];
_1 = _10 * _10;
_13 = Adt47 { fld0: _14 };
_14 = _8.fld0;
_5.fld0 = _7;
_2 = '\u{74a78}';
_7 = [18040803735540652597_u64,13626435979006365324_u64,10257174465346411014_u64,12222133793196822221_u64,368906467385663300_u64,12840787568972113371_u64];
_14 = [6999397550318882466_u64,4734614431348016749_u64,1865271710468239616_u64,5239430213389893051_u64,4282295283569135614_u64,16145574411474199878_u64];
_18 = _2;
_20 = _2;
_22.2 = !_12;
_22.3 = RET;
_8 = Adt47 { fld0: _3 };
RET = -_22.3;
_4 = [_15,_11,_15];
_8.fld0 = [6898936969746130567_u64,14779993323464064236_u64,7362515569928777244_u64,15130279019083854448_u64,4517523185535300828_u64,5089963500431490573_u64];
Call(_9 = core::intrinsics::transmute(_2), ReturnTo(bb9), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_1 = _10 * _10;
_13.fld0 = [8070973999026311172_u64,258330873351523615_u64,14544400095280871857_u64,3021242739185837670_u64,9899336924454660599_u64,10115659191456103095_u64];
_6 = Adt47 { fld0: _8.fld0 };
Goto(bb2)
}
bb20 = {
_16 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_6.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
RET = _22.3 + _22.3;
_4 = [_15,_15,_11];
_1 = -_9;
_13 = Adt47 { fld0: _5.fld0 };
_8 = Adt47 { fld0: _7 };
_22.3 = RET * RET;
_17 = [1178778631_i32,(-876747933_i32),(-906538008_i32),(-107551747_i32),2080582457_i32];
_23 = [61234_u16,1595_u16,60338_u16,11903_u16,26141_u16,13459_u16];
_22.2 = !_12;
_17 = [50508679_i32,1171393582_i32,1035985929_i32,(-100277403_i32),(-719978586_i32)];
_5.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_9 = _10 - _1;
RET = -_22.3;
_1 = _9 - _10;
_26 = _11;
_6.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_15 = _26 >> _11;
_22.1 = [_21];
_22.2 = RET > RET;
_1 = _9;
Goto(bb21)
}
bb21 = {
Call(_30 = dump_var(Move(_18), Move(_17), Move(_21), Move(_12)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_30 = dump_var(Move(_7), Move(_25), Move(_3), Move(_15)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: f32,mut _3: [u16; 6],mut _4: Adt47,mut _5: Adt47,mut _6: [u64; 6],mut _7: f32,mut _8: isize,mut _9: bool,mut _10: Adt47,mut _11: [u64; 6],mut _12: [u64; 6],mut _13: [u64; 6],mut _14: isize) -> Adt47 {
mir! {
type RET = Adt47;
let _15: isize;
let _16: i16;
let _17: f32;
let _18: f32;
let _19: char;
let _20: Adt48;
let _21: u8;
let _22: Adt47;
let _23: u8;
let _24: isize;
let _25: ();
let _26: ();
{
RET.fld0 = _11;
RET = _10;
_2 = 55376_u16 as f32;
_12 = [2233710820883308631_u64,13397408376896915419_u64,2704268886324969385_u64,12099063155934166304_u64,17901391431255001782_u64,1415922296042121174_u64];
_5 = Adt47 { fld0: _4.fld0 };
_14 = !_1;
_15 = !_1;
_4.fld0 = _12;
match _8 {
18 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_10 = Adt47 { fld0: _6 };
RET.fld0 = [16724053918840373359_u64,2693045672804794845_u64,8769444872387261780_u64,8451465265300019484_u64,6501859298330470546_u64,4879877116927604468_u64];
_10 = Adt47 { fld0: _11 };
RET = _10;
_5.fld0 = [14937282173412124128_u64,2084963391970144176_u64,1693751668739886342_u64,8388024182412270741_u64,5389975464606284659_u64,16474434435057784320_u64];
_16 = !(-6863_i16);
_16 = -10412_i16;
_7 = _2;
_6 = _12;
RET = Adt47 { fld0: _12 };
_8 = -_15;
_11 = _4.fld0;
RET = Adt47 { fld0: _10.fld0 };
_4.fld0 = [16546782595721737923_u64,11341593064798450341_u64,12355877349512670552_u64,16471540480589412140_u64,3686765674889232292_u64,13430732523050164510_u64];
_16 = (-17162_i16) | 23122_i16;
Goto(bb3)
}
bb3 = {
_14 = _15 >> _16;
_16 = (-20392_i16) * (-3958_i16);
_15 = _9 as isize;
_2 = -_7;
_10.fld0 = _5.fld0;
_5.fld0 = [15910390060676481152_u64,14409765261568567203_u64,4178548058517826659_u64,526219830431076601_u64,11661555780350795402_u64,2354527996479762538_u64];
_14 = _1;
_8 = -_15;
_12 = [14515336129729570062_u64,16363552830270276051_u64,2689191936600931227_u64,743444136517889339_u64,4550416403550357326_u64,14883509523236872063_u64];
RET.fld0 = [1209488356744635541_u64,6748740212737240237_u64,9257649221747399268_u64,2959786074824072312_u64,17542372932277248486_u64,1765033723244144432_u64];
_5 = _4;
_17 = _7 * _7;
Goto(bb4)
}
bb4 = {
_12 = [1098735153085481766_u64,3520121469952927934_u64,1046823999466790787_u64,8542545148635167220_u64,16696056737726563729_u64,9551082916059003172_u64];
_4 = Adt47 { fld0: _12 };
_9 = false | true;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
18 => bb9,
_ => bb8
}
}
bb5 = {
_14 = _15 >> _16;
_16 = (-20392_i16) * (-3958_i16);
_15 = _9 as isize;
_2 = -_7;
_10.fld0 = _5.fld0;
_5.fld0 = [15910390060676481152_u64,14409765261568567203_u64,4178548058517826659_u64,526219830431076601_u64,11661555780350795402_u64,2354527996479762538_u64];
_14 = _1;
_8 = -_15;
_12 = [14515336129729570062_u64,16363552830270276051_u64,2689191936600931227_u64,743444136517889339_u64,4550416403550357326_u64,14883509523236872063_u64];
RET.fld0 = [1209488356744635541_u64,6748740212737240237_u64,9257649221747399268_u64,2959786074824072312_u64,17542372932277248486_u64,1765033723244144432_u64];
_5 = _4;
_17 = _7 * _7;
Goto(bb4)
}
bb6 = {
_10 = Adt47 { fld0: _6 };
RET.fld0 = [16724053918840373359_u64,2693045672804794845_u64,8769444872387261780_u64,8451465265300019484_u64,6501859298330470546_u64,4879877116927604468_u64];
_10 = Adt47 { fld0: _11 };
RET = _10;
_5.fld0 = [14937282173412124128_u64,2084963391970144176_u64,1693751668739886342_u64,8388024182412270741_u64,5389975464606284659_u64,16474434435057784320_u64];
_16 = !(-6863_i16);
_16 = -10412_i16;
_7 = _2;
_6 = _12;
RET = Adt47 { fld0: _12 };
_8 = -_15;
_11 = _4.fld0;
RET = Adt47 { fld0: _10.fld0 };
_4.fld0 = [16546782595721737923_u64,11341593064798450341_u64,12355877349512670552_u64,16471540480589412140_u64,3686765674889232292_u64,13430732523050164510_u64];
_16 = (-17162_i16) | 23122_i16;
Goto(bb3)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = _17 + _17;
_4.fld0 = [13926880759745745145_u64,13204141715277686536_u64,18086931755086633716_u64,1187185911410017725_u64,18132422288986563715_u64,17527664616494236629_u64];
_15 = _14 | _8;
_10 = Adt47 { fld0: _12 };
_4.fld0 = [11757455935515701139_u64,15184850398304065951_u64,9335226468208246331_u64,1031648598978065904_u64,13112316368377529974_u64,7138063627273857595_u64];
_5 = _10;
_8 = _2 as isize;
_5.fld0 = [469259147204460795_u64,1922161759434626304_u64,7980849378983805990_u64,1429015265640418977_u64,320989675224577931_u64,1062753128752576999_u64];
RET.fld0 = _12;
_8 = _1;
_9 = false;
_7 = -_2;
_10.fld0 = _12;
_5 = Adt47 { fld0: _4.fld0 };
_14 = _8 >> _1;
_19 = '\u{e3947}';
Goto(bb10)
}
bb10 = {
_6 = RET.fld0;
_15 = !_8;
_3 = [43321_u16,41299_u16,20570_u16,62327_u16,37240_u16,28664_u16];
_18 = -_2;
RET = Adt47 { fld0: _6 };
_15 = (-3641248355083822795_i64) as isize;
_10 = Adt47 { fld0: _5.fld0 };
_22.fld0 = [18149342624721358487_u64,11066308553328321358_u64,17771563092973718557_u64,2690628133660601233_u64,5662281799860197270_u64,3093438384374488493_u64];
_18 = _2;
match _1 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
18 => bb16,
_ => bb15
}
}
bb11 = {
Return()
}
bb12 = {
_12 = [1098735153085481766_u64,3520121469952927934_u64,1046823999466790787_u64,8542545148635167220_u64,16696056737726563729_u64,9551082916059003172_u64];
_4 = Adt47 { fld0: _12 };
_9 = false | true;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
18 => bb9,
_ => bb8
}
}
bb13 = {
Return()
}
bb14 = {
_10 = Adt47 { fld0: _6 };
RET.fld0 = [16724053918840373359_u64,2693045672804794845_u64,8769444872387261780_u64,8451465265300019484_u64,6501859298330470546_u64,4879877116927604468_u64];
_10 = Adt47 { fld0: _11 };
RET = _10;
_5.fld0 = [14937282173412124128_u64,2084963391970144176_u64,1693751668739886342_u64,8388024182412270741_u64,5389975464606284659_u64,16474434435057784320_u64];
_16 = !(-6863_i16);
_16 = -10412_i16;
_7 = _2;
_6 = _12;
RET = Adt47 { fld0: _12 };
_8 = -_15;
_11 = _4.fld0;
RET = Adt47 { fld0: _10.fld0 };
_4.fld0 = [16546782595721737923_u64,11341593064798450341_u64,12355877349512670552_u64,16471540480589412140_u64,3686765674889232292_u64,13430732523050164510_u64];
_16 = (-17162_i16) | 23122_i16;
Goto(bb3)
}
bb15 = {
_14 = _15 >> _16;
_16 = (-20392_i16) * (-3958_i16);
_15 = _9 as isize;
_2 = -_7;
_10.fld0 = _5.fld0;
_5.fld0 = [15910390060676481152_u64,14409765261568567203_u64,4178548058517826659_u64,526219830431076601_u64,11661555780350795402_u64,2354527996479762538_u64];
_14 = _1;
_8 = -_15;
_12 = [14515336129729570062_u64,16363552830270276051_u64,2689191936600931227_u64,743444136517889339_u64,4550416403550357326_u64,14883509523236872063_u64];
RET.fld0 = [1209488356744635541_u64,6748740212737240237_u64,9257649221747399268_u64,2959786074824072312_u64,17542372932277248486_u64,1765033723244144432_u64];
_5 = _4;
_17 = _7 * _7;
Goto(bb4)
}
bb16 = {
_5 = _4;
_18 = 1227906747_i32 as f32;
Goto(bb17)
}
bb17 = {
Call(_25 = dump_var(Move(_19), Move(_12), Move(_14), Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_25 = dump_var(Move(_16), Move(_13), _26, _26), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *const f32,mut _2: *mut bool,mut _3: *const f32,mut _4: *const f32,mut _5: isize,mut _6: Adt42,mut _7: *const f32,mut _8: [i8; 3],mut _9: f64,mut _10: (f64, [isize; 3], *mut u32, [i128; 6])) -> Adt47 {
mir! {
type RET = Adt47;
let _11: bool;
let _12: i8;
let _13: i128;
let _14: i8;
let _15: [u16; 6];
let _16: [u8; 1];
let _17: Adt50;
let _18: *const [i8; 3];
let _19: [u8; 1];
let _20: *const f32;
let _21: isize;
let _22: (u64, [usize; 1], bool, f64, i16);
let _23: i8;
let _24: [isize; 3];
let _25: u8;
let _26: [u64; 6];
let _27: char;
let _28: u128;
let _29: Adt48;
let _30: u128;
let _31: [i32; 5];
let _32: [i32; 5];
let _33: [i8; 8];
let _34: i128;
let _35: ();
let _36: ();
{
_10.0 = 13291_u16 as f64;
_6.fld5.2 = core::ptr::addr_of_mut!(_6.fld6);
_6.fld3 = 71_i8;
_5 = -9223372036854775807_isize;
RET.fld0 = [17995264163620239303_u64,1860720027952773837_u64,12977397865094443346_u64,14788062988581658074_u64,5980153143851024214_u64,6717225750189294659_u64];
_3 = _1;
_6.fld1 = core::ptr::addr_of_mut!(_11);
_13 = (-1560811375_i32) as i128;
_1 = _3;
_6.fld0 = !false;
_6.fld5.3 = [_13,_13,_13,_13,_13,_13];
_10 = (_6.fld2, _6.fld5.1, _6.fld5.2, _6.fld5.3);
_14 = _6.fld3 << _6.fld6;
_6 = Adt42 { fld0: false,fld1: _2,fld2: _10.0,fld3: _14,fld4: 1651142027840497555_usize,fld5: _10,fld6: 3041018125_u32,fld7: _1 };
_10.1 = [_5,_5,_5];
_11 = _6.fld0 >= _6.fld0;
_10.3 = [_13,_13,_13,_13,_13,_13];
_9 = _6.fld2;
_11 = _6.fld0;
match _6.fld4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
1651142027840497555 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6.fld5.1 = _10.1;
RET.fld0 = [14618508934056736705_u64,12617883041193697799_u64,17294126830502720993_u64,3084243505459613247_u64,10922460719404519388_u64,3355906496588273712_u64];
_6.fld5.2 = core::ptr::addr_of_mut!(_6.fld6);
_10.1 = [_5,_5,_5];
_6.fld5 = _10;
_10.3 = [_13,_13,_13,_13,_13,_13];
match _6.fld4 {
0 => bb7,
1 => bb2,
2 => bb3,
1651142027840497555 => bb10,
_ => bb4
}
}
bb10 = {
_10.3 = [_13,_13,_13,_13,_13,_13];
_22.1 = [_6.fld4];
_23 = _6.fld6 as i8;
_10.1 = _6.fld5.1;
_22.0 = 3518363510510038250_u64;
_7 = _6.fld7;
_10 = _6.fld5;
_10.3 = [_13,_13,_13,_13,_13,_13];
_10.2 = core::ptr::addr_of_mut!(_6.fld6);
_6.fld5.0 = _6.fld2;
_2 = _6.fld1;
_6.fld3 = _23 | _23;
_24 = _6.fld5.1;
_22.0 = 14370730103134900366_u64 * 18294396324004016529_u64;
_18 = core::ptr::addr_of!(_8);
_6.fld5 = _10;
_1 = _7;
_24 = [_5,_5,_5];
_11 = !_6.fld0;
_6.fld5.2 = _10.2;
_21 = _6.fld4 as isize;
_8 = [_6.fld3,_6.fld3,_6.fld3];
_15 = [47052_u16,53243_u16,37991_u16,3158_u16,13830_u16,48986_u16];
_22.3 = 49_u8 as f64;
_3 = _1;
Goto(bb11)
}
bb11 = {
_23 = _6.fld3;
_10.1 = _6.fld5.1;
_8 = [_6.fld3,_23,_23];
RET.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
_6.fld5.0 = -_10.0;
_19 = [171_u8];
_5 = -_21;
_16 = _19;
Call(_16 = fn8(_3, _6.fld7, _6.fld4, _10, (*_18), _10.2, _6.fld5, _6, _6, _6, _1, (*_18), _6, _18), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_1 = _3;
_6.fld3 = -_23;
_16 = _19;
_10.3 = _6.fld5.3;
_22.4 = 25268_i16 << _6.fld4;
_11 = !_6.fld0;
_19 = [209_u8];
_4 = _1;
_10.3 = [_13,_13,_13,_13,_13,_13];
_10.0 = _6.fld2 + _22.3;
_23 = !_6.fld3;
_20 = _1;
Goto(bb13)
}
bb13 = {
_4 = _7;
_8 = [_23,_23,_23];
match _6.fld4 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb14,
1651142027840497555 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_6.fld1 = core::ptr::addr_of_mut!(_6.fld0);
_30 = !243410617257636001571449202033787083054_u128;
_31 = [942187632_i32,(-2096074211_i32),985754864_i32,296288039_i32,106893024_i32];
_21 = _6.fld4 as isize;
_6.fld2 = -_10.0;
_10 = (_6.fld2, _24, _6.fld5.2, _6.fld5.3);
_22.3 = -_6.fld2;
_6.fld5 = (_22.3, _10.1, _10.2, _10.3);
_22.0 = !15744740841314698785_u64;
_22.2 = _22.4 == _22.4;
_3 = _1;
_13 = !69399282717237732485829112006135844798_i128;
_17 = Adt50::Variant2 { fld0: _10 };
_2 = core::ptr::addr_of_mut!(_22.2);
_6.fld2 = (-519455795_i32) as f64;
_2 = core::ptr::addr_of_mut!(_6.fld0);
RET.fld0 = [_22.0,_22.0,_22.0,_22.0,_22.0,_22.0];
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_17, 2), 0)).3 = [_13,_13,_13,_13,_13,_13];
Goto(bb17)
}
bb17 = {
Call(_35 = dump_var(Move(_19), Move(_30), Move(_11), Move(_14)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_35 = dump_var(Move(_5), Move(_16), _36, _36), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: *const f32,mut _2: *const f32,mut _3: usize,mut _4: (f64, [isize; 3], *mut u32, [i128; 6]),mut _5: [i8; 3],mut _6: *mut u32,mut _7: (f64, [isize; 3], *mut u32, [i128; 6]),mut _8: Adt42,mut _9: Adt42,mut _10: Adt42,mut _11: *const f32,mut _12: [i8; 3],mut _13: Adt42,mut _14: *const [i8; 3]) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _15: (u64, [usize; 1], bool, f64, i16);
let _16: isize;
let _17: [i32; 5];
let _18: bool;
let _19: [isize; 3];
let _20: f64;
let _21: u128;
let _22: Adt55;
let _23: i8;
let _24: Adt51;
let _25: f64;
let _26: f64;
let _27: i16;
let _28: bool;
let _29: [i128; 6];
let _30: *const f32;
let _31: i128;
let _32: Adt47;
let _33: [i8; 3];
let _34: [i128; 6];
let _35: isize;
let _36: u16;
let _37: isize;
let _38: [i8; 8];
let _39: char;
let _40: usize;
let _41: [i8; 8];
let _42: i16;
let _43: [i8; 3];
let _44: isize;
let _45: bool;
let _46: [u16; 6];
let _47: ();
let _48: ();
{
_10.fld7 = _9.fld7;
_13.fld0 = _8.fld0 ^ _10.fld0;
_2 = _8.fld7;
_4.3 = [(-18224405494735738805406271085889871339_i128),131933444993047133054760277205827881902_i128,36559002666097198049824632161208423601_i128,157434661869611780184302867011919452770_i128,93243055228927271225298135607193918816_i128,41981121098038226281017036509399676969_i128];
_10.fld0 = !_9.fld0;
_13.fld3 = -_10.fld3;
_8.fld5 = (_9.fld5.0, _7.1, _6, _10.fld5.3);
_2 = _8.fld7;
_15.0 = _9.fld6 as u64;
_10 = _8;
RET = [222_u8];
_8.fld5.0 = _8.fld2 * _8.fld2;
_10.fld5.2 = _4.2;
_14 = core::ptr::addr_of!(_12);
_15.3 = -_10.fld5.0;
_5 = [_9.fld3,_8.fld3,_13.fld3];
_18 = _8.fld0;
_13.fld5.2 = core::ptr::addr_of_mut!(_13.fld6);
_18 = _13.fld0 | _13.fld0;
_10 = Adt42 { fld0: _13.fld0,fld1: _9.fld1,fld2: _13.fld5.0,fld3: _8.fld3,fld4: _9.fld4,fld5: _7,fld6: _8.fld6,fld7: _8.fld7 };
_9.fld1 = _8.fld1;
_8.fld2 = _7.0 - _15.3;
Call(_10.fld3 = fn9(_9.fld5.2, _8, _8.fld5, _8, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_8.fld0 = !_18;
_13.fld6 = !_10.fld6;
_13.fld0 = !_8.fld0;
_9 = _8;
_9.fld5.3 = [(-144195202539827812034155737935694832431_i128),7889539028730805390909233014810333479_i128,(-5871098202476851046966596309933454344_i128),67842180678665580363645326851105114148_i128,50076915051709236080247496757696685024_i128,26958686501538384732838621968716886841_i128];
_13 = Adt42 { fld0: _8.fld0,fld1: _10.fld1,fld2: _10.fld2,fld3: _9.fld3,fld4: _8.fld4,fld5: _9.fld5,fld6: _10.fld6,fld7: _1 };
_16 = 9223372036854775807_isize;
_13.fld2 = -_8.fld5.0;
_10.fld2 = _8.fld5.0 * _8.fld2;
_15.1 = [_13.fld4];
_17 = [1701786300_i32,153391154_i32,1237288276_i32,755556698_i32,(-522272368_i32)];
Goto(bb2)
}
bb2 = {
_9.fld5.0 = _13.fld2;
_10.fld4 = _13.fld4 - _13.fld4;
_1 = _11;
_15.1 = [_10.fld4];
_15.3 = _10.fld6 as f64;
_7.0 = _13.fld4 as f64;
_7.3 = [140146003866107988605779925430253367865_i128,17692516348815755729377944645306794845_i128,(-29555712800748564872968279746720869705_i128),(-102635193573568891307304299445654911534_i128),(-1473404834047470427543907044278030613_i128),46736685485655935207929773307988102540_i128];
_13.fld1 = core::ptr::addr_of_mut!(_13.fld0);
RET = [13_u8];
_8.fld0 = _18 ^ _18;
_17 = [1079666753_i32,181929716_i32,80152552_i32,(-836655377_i32),(-662861406_i32)];
_10.fld5.3 = [54042570884414752672225581114077778814_i128,90830150526521391990420306061728784413_i128,(-131719489399204476482266114273656940586_i128),39503964315382259154447928462535453529_i128,(-20687441784897285311311395139989456095_i128),109978495507970774314449453031168202663_i128];
_9.fld5.1 = _10.fld5.1;
Call(_5 = fn10(_10.fld2, _8.fld5, _7.2, _13.fld1, _8, _9, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_20 = _16 as f64;
_15.1 = [_3];
_8.fld5.1 = [_16,_16,_16];
_10.fld2 = _7.0;
_1 = _2;
_10.fld1 = _13.fld1;
Goto(bb4)
}
bb4 = {
_7 = (_13.fld2, _4.1, _4.2, _13.fld5.3);
_23 = _8.fld3;
_9.fld2 = -_10.fld2;
_4.3 = [(-135572010543619640593056460880220454011_i128),(-95579657234022507706353252465318990484_i128),28769555541774450391354353597547529368_i128,77566367089985629364473134382847016614_i128,(-152419387771281234554680604053504242483_i128),59626354541758724134512052871368314270_i128];
_8.fld7 = _2;
_12 = [_8.fld3,_9.fld3,_8.fld3];
_15.0 = !10733234096840793981_u64;
_10 = _8;
_8.fld3 = _10.fld0 as i8;
_8.fld5.1 = _7.1;
_10.fld5 = _9.fld5;
Goto(bb5)
}
bb5 = {
Call(_9.fld2 = fn11(_10, _13, _9.fld4, _13.fld6, _3, _7, _10, _8, _9.fld6, _10.fld5, _5, _10, _13.fld0, _10, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_10.fld5.1 = _4.1;
_8.fld6 = _13.fld6;
_15.2 = _8.fld0 ^ _10.fld0;
_20 = _9.fld2 + _9.fld2;
_10.fld5.1 = [_16,_16,_16];
_8.fld5.1 = [_16,_16,_16];
_20 = _15.3;
_10.fld5 = (_10.fld2, _4.1, _6, _9.fld5.3);
_12 = [_8.fld3,_10.fld3,_8.fld3];
_30 = _13.fld7;
_8.fld5.1 = _4.1;
_8 = Adt42 { fld0: _10.fld0,fld1: _13.fld1,fld2: _9.fld2,fld3: _13.fld3,fld4: _3,fld5: _7,fld6: _9.fld6,fld7: _10.fld7 };
_8.fld5 = _10.fld5;
_10.fld0 = !_8.fld0;
_9.fld0 = _8.fld5.0 > _10.fld2;
_9.fld5.2 = _7.2;
_15.3 = 1272_i16 as f64;
_17 = [1387453737_i32,1668917002_i32,(-1098849228_i32),300510005_i32,1925987468_i32];
_9.fld0 = !_8.fld0;
_12 = [_23,_8.fld3,_23];
_27 = _16 as i16;
_3 = !_10.fld4;
_12 = [_8.fld3,_9.fld3,_13.fld3];
_4.0 = _8.fld2 * _9.fld2;
_9.fld6 = _10.fld6 / _8.fld6;
_21 = 194468308313846097213106059544478167414_u128;
_10.fld6 = _21 as u32;
match _8.fld4 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb7,
4 => bb8,
1651142027840497555 => bb10,
_ => bb9
}
}
bb7 = {
Call(_9.fld2 = fn11(_10, _13, _9.fld4, _13.fld6, _3, _7, _10, _8, _9.fld6, _10.fld5, _5, _10, _13.fld0, _10, _10), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_9.fld5.0 = _13.fld2;
_10.fld4 = _13.fld4 - _13.fld4;
_1 = _11;
_15.1 = [_10.fld4];
_15.3 = _10.fld6 as f64;
_7.0 = _13.fld4 as f64;
_7.3 = [140146003866107988605779925430253367865_i128,17692516348815755729377944645306794845_i128,(-29555712800748564872968279746720869705_i128),(-102635193573568891307304299445654911534_i128),(-1473404834047470427543907044278030613_i128),46736685485655935207929773307988102540_i128];
_13.fld1 = core::ptr::addr_of_mut!(_13.fld0);
RET = [13_u8];
_8.fld0 = _18 ^ _18;
_17 = [1079666753_i32,181929716_i32,80152552_i32,(-836655377_i32),(-662861406_i32)];
_10.fld5.3 = [54042570884414752672225581114077778814_i128,90830150526521391990420306061728784413_i128,(-131719489399204476482266114273656940586_i128),39503964315382259154447928462535453529_i128,(-20687441784897285311311395139989456095_i128),109978495507970774314449453031168202663_i128];
_9.fld5.1 = _10.fld5.1;
Call(_5 = fn10(_10.fld2, _8.fld5, _7.2, _13.fld1, _8, _9, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_20 = _16 as f64;
_15.1 = [_3];
_8.fld5.1 = [_16,_16,_16];
_10.fld2 = _7.0;
_1 = _2;
_10.fld1 = _13.fld1;
Goto(bb4)
}
bb10 = {
_13.fld5 = (_9.fld2, _8.fld5.1, _4.2, _8.fld5.3);
_8.fld2 = _9.fld4 as f64;
_19 = _13.fld5.1;
_10.fld7 = _1;
_8.fld6 = _27 as u32;
_33 = [_8.fld3,_8.fld3,_23];
_27 = (-1175835922_i32) as i16;
Goto(bb11)
}
bb11 = {
_10.fld3 = _13.fld3 | _23;
_13.fld0 = _15.2;
_37 = _16;
_16 = !_37;
Goto(bb12)
}
bb12 = {
_13.fld7 = _10.fld7;
_10.fld5 = _13.fld5;
_36 = 43801_u16;
_9.fld5.1 = _7.1;
_8.fld5.0 = (-68336293375548039555397184234790825103_i128) as f64;
_13.fld0 = !_18;
_8.fld5.0 = _10.fld5.0 * _10.fld5.0;
_11 = _13.fld7;
_9.fld5 = (_10.fld5.0, _13.fld5.1, _6, _7.3);
_17 = [1719306178_i32,(-734740372_i32),332439929_i32,1524132022_i32,1651692169_i32];
_8.fld7 = _10.fld7;
_33 = (*_14);
_6 = _10.fld5.2;
RET = [136_u8];
Call(RET = fn12(_13, _3, _8, _23, _9.fld5.0, _10.fld0, _9, _10.fld5, _10, _9, _9.fld5, _13, _9.fld6), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_8.fld3 = !_13.fld3;
match _8.fld4 {
0 => bb12,
1651142027840497555 => bb14,
_ => bb4
}
}
bb14 = {
_36 = !28312_u16;
_3 = !_13.fld4;
_25 = _13.fld5.0 - _8.fld2;
_15.1 = [_9.fld4];
_8.fld5.1 = _9.fld5.1;
_21 = !238723590305146940249522723759068897385_u128;
_9.fld0 = !_18;
_8.fld1 = _10.fld1;
_7.3 = [(-93547210792845798140105662111822564955_i128),(-133833578948679474266327872935281085874_i128),135830011215434879405478173449473898964_i128,(-48138298924872754773637403743839753061_i128),83819063807927777702153712958701535416_i128,(-133220276360878178757245503552822665497_i128)];
_9.fld5.2 = _13.fld5.2;
_15.4 = (-495667448_i32) as i16;
_42 = _15.4;
_2 = _10.fld7;
_14 = core::ptr::addr_of!(_5);
_8.fld0 = _13.fld3 > _10.fld3;
_5 = _12;
_13.fld6 = _9.fld6 + _9.fld6;
_8.fld6 = _13.fld6 + _13.fld6;
_26 = _4.0;
_15.4 = -_27;
_9.fld4 = 1364477272_i32 as usize;
_3 = _13.fld4;
Goto(bb15)
}
bb15 = {
Call(_47 = dump_var(Move(_18), Move(_17), Move(_23), Move(_36)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_47 = dump_var(Move(_19), Move(_16), Move(_42), _48), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *mut u32,mut _2: Adt42,mut _3: (f64, [isize; 3], *mut u32, [i128; 6]),mut _4: Adt42,mut _5: Adt42) -> i8 {
mir! {
type RET = i8;
let _6: (i32, u16, i8, i8, f64);
let _7: [usize; 1];
let _8: char;
let _9: i32;
let _10: ();
let _11: ();
{
_5.fld5 = (_2.fld2, _2.fld5.1, _2.fld5.2, _3.3);
_4.fld5.2 = _5.fld5.2;
_2.fld7 = _5.fld7;
_3.2 = core::ptr::addr_of_mut!(_4.fld6);
_4.fld5.2 = core::ptr::addr_of_mut!(_5.fld6);
_5.fld5.0 = _4.fld2 - _4.fld5.0;
_6 = ((-828256943_i32), 65008_u16, _2.fld3, _5.fld3, _5.fld5.0);
_6.0 = -1918720702_i32;
_4.fld3 = -_2.fld3;
_6.1 = _2.fld0 as u16;
_3.2 = _1;
_2.fld5 = (_3.0, _3.1, _3.2, _5.fld5.3);
_2.fld5.1 = _4.fld5.1;
_7 = [_4.fld4];
_2.fld5.0 = _4.fld2 * _6.4;
_5.fld2 = _6.4;
_5.fld3 = _4.fld3;
Call(_5.fld5.1 = core::intrinsics::transmute(_4.fld5.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5.fld0 = !_2.fld0;
RET = !_4.fld3;
_4.fld5.3 = _3.3;
_4.fld2 = -_2.fld5.0;
_5.fld0 = !_4.fld0;
_2.fld5 = (_6.4, _4.fld5.1, _5.fld5.2, _5.fld5.3);
_3.0 = _6.4 - _4.fld5.0;
_2.fld6 = _5.fld6 ^ _4.fld6;
Goto(bb2)
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: f64,mut _2: (f64, [isize; 3], *mut u32, [i128; 6]),mut _3: *mut u32,mut _4: *mut bool,mut _5: Adt42,mut _6: Adt42,mut _7: f64) -> [i8; 3] {
mir! {
type RET = [i8; 3];
let _8: [i128; 6];
let _9: f32;
let _10: isize;
let _11: isize;
let _12: Adt58;
let _13: ();
let _14: ();
{
_6.fld5.3 = _5.fld5.3;
_6.fld5.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),28_isize];
_7 = _1 - _5.fld2;
_6.fld5.1 = [9223372036854775807_isize,(-113_isize),55_isize];
_6.fld1 = _4;
_6.fld5.2 = core::ptr::addr_of_mut!(_6.fld6);
_6.fld7 = _5.fld7;
_5.fld4 = 2805782927251862206_u64 as usize;
_9 = 46_u8 as f32;
_5.fld1 = core::ptr::addr_of_mut!(_6.fld0);
_6.fld5.0 = _5.fld2 + _1;
_5.fld5.1 = _6.fld5.1;
Call(_7 = core::intrinsics::transmute(_6.fld4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
match _5.fld6 {
0 => bb2,
1 => bb3,
2 => bb4,
3041018125 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
RET = [_5.fld3,_6.fld3,_5.fld3];
_6.fld6 = _5.fld6;
_5.fld5.2 = core::ptr::addr_of_mut!(_5.fld6);
_2.0 = -_5.fld2;
_5.fld5.2 = core::ptr::addr_of_mut!(_5.fld6);
_5.fld3 = -_6.fld3;
_5.fld5.1 = [9223372036854775807_isize,(-9223372036854775808_isize),24_isize];
_5.fld4 = 5317_u16 as usize;
_2 = (_7, _6.fld5.1, _5.fld5.2, _5.fld5.3);
RET = [_6.fld3,_5.fld3,_5.fld3];
_5.fld5.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_10 = 9223372036854775807_isize;
_8 = [(-35397107387412275900332370492870372690_i128),(-114817514856256860752921375677428581787_i128),148950834944981417537352428876403561740_i128,83466475661577558476031210673481488342_i128,27137823152481321815552087665588042421_i128,(-74622890354442250266217242017881454994_i128)];
_5.fld5.0 = _1 * _7;
_6.fld5.0 = 96581221765163260347488209266973815407_u128 as f64;
RET = [_5.fld3,_5.fld3,_5.fld3];
_6.fld5 = (_2.0, _5.fld5.1, _2.2, _8);
_2.2 = core::ptr::addr_of_mut!(_6.fld6);
Goto(bb7)
}
bb7 = {
Call(_13 = dump_var(Move(_10), _14, _14, _14), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: Adt42,mut _2: Adt42,mut _3: usize,mut _4: u32,mut _5: usize,mut _6: (f64, [isize; 3], *mut u32, [i128; 6]),mut _7: Adt42,mut _8: Adt42,mut _9: u32,mut _10: (f64, [isize; 3], *mut u32, [i128; 6]),mut _11: [i8; 3],mut _12: Adt42,mut _13: bool,mut _14: Adt42,mut _15: Adt42) -> f64 {
mir! {
type RET = f64;
let _16: bool;
let _17: (i32, u16, i8, i8, f64);
let _18: bool;
let _19: (u64, [usize; 1], bool, f64, i16);
let _20: [u16; 6];
let _21: *const u64;
let _22: Adt47;
let _23: Adt57;
let _24: (i32, u16, i8, i8, f64);
let _25: char;
let _26: Adt44;
let _27: char;
let _28: isize;
let _29: u64;
let _30: Adt42;
let _31: Adt53;
let _32: [i128; 6];
let _33: [u16; 5];
let _34: Adt42;
let _35: isize;
let _36: Adt58;
let _37: bool;
let _38: ();
let _39: ();
{
_2.fld5.1 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_2 = _7;
_1.fld5.2 = _10.2;
_15.fld7 = _2.fld7;
_2.fld5.1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_19.1 = [_14.fld4];
_7.fld5.3 = [(-10536261957334103256921229926462864548_i128),140350249920767468940737962250488416425_i128,163693679139418803588145627598644352067_i128,(-104727127400904625130710470399484916552_i128),93821452057936982156418093222239967298_i128,63579978349302520840947379088189830913_i128];
_2.fld0 = !_12.fld0;
_12.fld4 = _15.fld0 as usize;
_16 = _12.fld0 >= _8.fld0;
_15.fld5.0 = 9223372036854775807_isize as f64;
_10.1 = [(-22_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_13 = _14.fld6 <= _15.fld6;
_12.fld1 = core::ptr::addr_of_mut!(_7.fld0);
_15.fld0 = _14.fld0 ^ _14.fld0;
_10.3 = [148662632180981787031882175129681265586_i128,(-15564262833086795582204214407022625526_i128),32324320902370032816611744916080401850_i128,79998446719477874446025442737101525384_i128,(-9422892174191507165146089545064385022_i128),64679123299495635710288914813316244586_i128];
_10.0 = _15.fld5.0 * _15.fld2;
_8.fld5.3 = [24093783515091652524682284184005125308_i128,(-95264731088637791200998349681423240186_i128),146303378947357203800333840889630243671_i128,(-124798112020405236706721600713597436364_i128),42180935548763120584348485220521807572_i128,(-127802137110793949537938525021465187543_i128)];
_7.fld5.2 = core::ptr::addr_of_mut!(_15.fld6);
_2.fld5.1 = _1.fld5.1;
_15.fld2 = -_12.fld5.0;
_8.fld5.3 = _6.3;
_14.fld0 = _1.fld0 ^ _2.fld0;
match _2.fld4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
1651142027840497555 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_18 = _2.fld0 < _8.fld0;
_3 = !_12.fld4;
_7.fld5.2 = _12.fld5.2;
_12.fld5.2 = core::ptr::addr_of_mut!(_15.fld6);
_27 = '\u{dc5da}';
_6 = (_8.fld2, _10.1, _10.2, _14.fld5.3);
_24.3 = _8.fld3 >> _1.fld3;
_8.fld1 = core::ptr::addr_of_mut!(_16);
_14.fld5.1 = [(-9223372036854775808_isize),9223372036854775807_isize,42_isize];
_24 = (1107899105_i32, 9538_u16, _8.fld3, _8.fld3, _8.fld5.0);
_7.fld4 = _12.fld4;
_5 = (-273_i16) as usize;
_28 = !4_isize;
_8 = _15;
_24.1 = !23864_u16;
_6.0 = _12.fld2;
Goto(bb8)
}
bb8 = {
_17.2 = 163445730823615220509323375644409484403_i128 as i8;
_2.fld5 = (_24.4, _6.1, _1.fld5.2, _8.fld5.3);
_17.0 = _24.0;
_20 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
_2.fld7 = _1.fld7;
_24.4 = -_12.fld5.0;
_24.0 = _17.0;
_15.fld4 = !_3;
_1.fld4 = !_12.fld4;
_14.fld1 = core::ptr::addr_of_mut!(_14.fld0);
_17.3 = !_12.fld3;
_1.fld5.0 = _15.fld5.0;
_1.fld5.1 = [_28,_28,_28];
Call(_2.fld5.0 = core::intrinsics::transmute(_1.fld4), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_30.fld5.1 = _10.1;
_8.fld7 = _2.fld7;
_30.fld6 = _7.fld4 as u32;
_17.0 = -_24.0;
_8 = Adt42 { fld0: _16,fld1: _14.fld1,fld2: _12.fld2,fld3: _1.fld3,fld4: _7.fld4,fld5: _2.fld5,fld6: _2.fld6,fld7: _2.fld7 };
_2.fld5.3 = [135021568740977756973102881244937360069_i128,(-148825612581836129775103793541561283994_i128),14090325983851361184561661223585308017_i128,(-120558450755496671833959523483927880306_i128),(-123462058296548737680551539019861989931_i128),21233882416561291738439236994959832331_i128];
_34.fld5.1 = _14.fld5.1;
_34.fld7 = _14.fld7;
RET = -_2.fld5.0;
_10 = (_2.fld5.0, _30.fld5.1, _8.fld5.2, _8.fld5.3);
_30.fld2 = RET;
_24.4 = _8.fld5.0 - _30.fld2;
_34.fld6 = _30.fld6 & _15.fld6;
_30.fld5.2 = core::ptr::addr_of_mut!(_2.fld6);
_8.fld5 = _2.fld5;
_17 = (_24.0, _24.1, _24.3, _7.fld3, _2.fld5.0);
_2.fld3 = -_24.3;
_34.fld5.1 = [_28,_28,_28];
Goto(bb10)
}
bb10 = {
Call(_38 = dump_var(Move(_9), Move(_3), Move(_4), Move(_16)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(Move(_28), _39, _39, _39), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: Adt42,mut _2: usize,mut _3: Adt42,mut _4: i8,mut _5: f64,mut _6: bool,mut _7: Adt42,mut _8: (f64, [isize; 3], *mut u32, [i128; 6]),mut _9: Adt42,mut _10: Adt42,mut _11: (f64, [isize; 3], *mut u32, [i128; 6]),mut _12: Adt42,mut _13: u32) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _14: char;
let _15: Adt53;
let _16: f64;
let _17: *mut isize;
let _18: (i32, u16, i8, i8, f64);
let _19: isize;
let _20: char;
let _21: bool;
let _22: (f64, [isize; 3], *mut u32, [i128; 6]);
let _23: bool;
let _24: Adt43;
let _25: usize;
let _26: f64;
let _27: [u16; 6];
let _28: bool;
let _29: *const f32;
let _30: isize;
let _31: f32;
let _32: [u16; 6];
let _33: u32;
let _34: i128;
let _35: usize;
let _36: i32;
let _37: i8;
let _38: isize;
let _39: u64;
let _40: char;
let _41: f64;
let _42: f32;
let _43: *mut [u8; 1];
let _44: char;
let _45: (u64, [usize; 1], bool, f64, i16);
let _46: [i32; 5];
let _47: isize;
let _48: [usize; 1];
let _49: isize;
let _50: u128;
let _51: u32;
let _52: u16;
let _53: f64;
let _54: [i32; 5];
let _55: f64;
let _56: bool;
let _57: (i32, u16, i8, i8, f64);
let _58: i64;
let _59: *mut isize;
let _60: Adt47;
let _61: ();
let _62: ();
{
_7.fld5.3 = _9.fld5.3;
_1.fld1 = _12.fld1;
_1.fld5.2 = _9.fld5.2;
_12 = Adt42 { fld0: _10.fld0,fld1: _3.fld1,fld2: _1.fld5.0,fld3: _3.fld3,fld4: _9.fld4,fld5: _11,fld6: _7.fld6,fld7: _7.fld7 };
_1.fld5.3 = _10.fld5.3;
_10.fld6 = !_13;
_10.fld7 = _1.fld7;
Call(_7.fld7 = fn13(_9.fld4, _9.fld5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9.fld1 = _3.fld1;
RET = [233_u8];
_9.fld5.0 = _7.fld2 + _5;
_10.fld7 = _3.fld7;
_10.fld5.1 = _7.fld5.1;
_9.fld1 = _12.fld1;
_10.fld0 = !_1.fld0;
_7.fld5.3 = _11.3;
_1.fld2 = _10.fld2;
_9.fld1 = _3.fld1;
_12.fld1 = core::ptr::addr_of_mut!(_9.fld0);
_1.fld7 = _9.fld7;
_7.fld5.1 = _10.fld5.1;
_7.fld1 = core::ptr::addr_of_mut!(_9.fld0);
Goto(bb2)
}
bb2 = {
_12.fld5 = (_10.fld5.0, _10.fld5.1, _10.fld5.2, _11.3);
_1.fld4 = !_2;
_7.fld6 = !_1.fld6;
_10.fld4 = 35_u8 as usize;
_22.2 = core::ptr::addr_of_mut!(_3.fld6);
_18.2 = _9.fld3 << _2;
_1.fld0 = _6;
_10.fld5 = (_12.fld5.0, _7.fld5.1, _11.2, _11.3);
_10.fld4 = !_1.fld4;
_7.fld7 = _10.fld7;
_11.1 = [(-9223372036854775808_isize),118_isize,(-9223372036854775808_isize)];
_23 = _9.fld0;
_25 = _1.fld4;
_25 = _9.fld4 >> _12.fld4;
_1.fld7 = _7.fld7;
_7.fld5.2 = _8.2;
_21 = _7.fld0 & _10.fld0;
_14 = '\u{593e1}';
_18.0 = 1787911260_i32;
_21 = !_12.fld0;
_4 = 16777659403447421386_u64 as i8;
_24 = Adt43::Variant2 { fld0: _18.0 };
_10.fld2 = (-9223372036854775808_isize) as f64;
SetDiscriminant(_24, 2);
_3.fld7 = _7.fld7;
match _1.fld6 {
3041018125 => bb3,
_ => bb1
}
}
bb3 = {
_9.fld7 = _1.fld7;
_8.2 = core::ptr::addr_of_mut!(_9.fld6);
_3.fld4 = _2 & _7.fld4;
_18.4 = _5;
_22.3 = _7.fld5.3;
_9.fld1 = _12.fld1;
_10.fld7 = _12.fld7;
_1.fld5 = (_7.fld2, _7.fld5.1, _11.2, _22.3);
_7.fld5 = (_18.4, _8.1, _3.fld5.2, _3.fld5.3);
_22.2 = core::ptr::addr_of_mut!(_9.fld6);
_9.fld4 = _12.fld4 << _9.fld3;
place!(Field::<i32>(Variant(_24, 2), 0)) = -_18.0;
_7.fld5.2 = _9.fld5.2;
SetDiscriminant(_24, 0);
_10.fld0 = _3.fld5.0 != _9.fld5.0;
_7.fld0 = _21 != _1.fld0;
_19 = 27_isize - 9_isize;
_23 = _10.fld0;
_7 = Adt42 { fld0: _23,fld1: _9.fld1,fld2: _9.fld5.0,fld3: _18.2,fld4: _25,fld5: _3.fld5,fld6: _12.fld6,fld7: _12.fld7 };
_21 = !_12.fld0;
_3.fld2 = _1.fld2;
_3.fld0 = !_21;
_1.fld6 = !_7.fld6;
_25 = _1.fld4;
Goto(bb4)
}
bb4 = {
_12.fld7 = _9.fld7;
_12.fld6 = _13;
_7.fld1 = _9.fld1;
_30 = 5564466073986606654_u64 as isize;
_31 = 106875864060828009435455411101684907576_i128 as f32;
_1.fld2 = -_5;
_12.fld2 = 252768554264565088094581944536089379600_u128 as f64;
_16 = _3.fld5.0 - _7.fld2;
place!(Field::<[u16; 6]>(Variant(_24, 0), 1)) = [10301_u16,36572_u16,47331_u16,27885_u16,40308_u16,56029_u16];
_9.fld6 = _1.fld6;
_18.4 = 11_u8 as f64;
_9.fld5.0 = -_1.fld5.0;
_3 = Adt42 { fld0: _10.fld0,fld1: _1.fld1,fld2: _9.fld5.0,fld3: _18.2,fld4: _25,fld5: _1.fld5,fld6: _7.fld6,fld7: _9.fld7 };
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)) = (_16, _8.1, _8.2, _12.fld5.3);
_27 = Field::<[u16; 6]>(Variant(_24, 0), 1);
_28 = _18.2 <= _9.fld3;
_10.fld5.2 = core::ptr::addr_of_mut!(_13);
_22.1 = [_19,_19,_30];
place!(Field::<*mut u32>(Variant(_24, 0), 4)) = core::ptr::addr_of_mut!(_12.fld6);
_10.fld6 = _3.fld6 & _1.fld6;
_32 = [32994_u16,34178_u16,45926_u16,20010_u16,30891_u16,54071_u16];
_22.0 = 6665711736473701265_u64 as f64;
_7.fld7 = _12.fld7;
_10.fld2 = _30 as f64;
_18.1 = 37_u8 as u16;
_12.fld4 = _3.fld6 as usize;
_9.fld5.2 = Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0).2;
Call(_8.1 = core::intrinsics::transmute(_22.1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_7.fld5 = _3.fld5;
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).3 = [83954652069028740779165490048060102558_i128,80579162268000417901683285393187327481_i128,(-132456746440652761604045169284694484118_i128),(-127613028496594754398990724843699422614_i128),115062902542199010842789712971702325914_i128,(-47203576942817672926067080043058603338_i128)];
_3.fld5 = _10.fld5;
_10.fld6 = _1.fld6 | _9.fld6;
_12 = Adt42 { fld0: _10.fld0,fld1: _3.fld1,fld2: _16,fld3: _18.2,fld4: _25,fld5: _7.fld5,fld6: _7.fld6,fld7: _3.fld7 };
_11.2 = core::ptr::addr_of_mut!(_7.fld6);
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).2 = _9.fld5.2;
_9.fld5 = _1.fld5;
_7.fld5.1 = _12.fld5.1;
_6 = _21;
_3.fld5.3 = [135294855161255969588683508599118776547_i128,73521074142454509730293429859797776870_i128,(-8085876276457653652851356708841390716_i128),(-58069248137508821850038429985947065398_i128),59172759086712232852965741711233501097_i128,(-9070964819775300879934098994591434979_i128)];
_12.fld4 = _1.fld4 & _3.fld4;
_3.fld6 = _10.fld6 >> _10.fld6;
_7.fld5.3 = [(-134257284024276394136689653385480687434_i128),(-114588158297241360798469272101738197627_i128),(-61916549863266867248771535298940991014_i128),(-82611165651626721736130258615352802229_i128),52863614776995249631577761067770701459_i128,29057964182293216158332520138453841319_i128];
_18.0 = -1037442430_i32;
_7.fld7 = _3.fld7;
Goto(bb6)
}
bb6 = {
_3.fld0 = !_23;
_18.3 = _12.fld3 + _18.2;
_9.fld4 = _2;
_3.fld7 = _10.fld7;
_22.1 = [_19,_30,_19];
_9.fld5.2 = core::ptr::addr_of_mut!(_1.fld6);
_29 = core::ptr::addr_of!(_31);
_13 = _3.fld4 as u32;
_3.fld3 = !_7.fld3;
RET = [212_u8];
_10.fld1 = core::ptr::addr_of_mut!(_9.fld0);
_8.0 = _11.0;
_11.3 = Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0).3;
Goto(bb7)
}
bb7 = {
_7.fld5.1 = Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0).1;
_19 = _30;
_22.3 = [(-94952105858905237481316870713093525015_i128),50798354262185972605392729114742713137_i128,44238494177137972660109379577392912783_i128,(-118998512352464498148284160551591618594_i128),(-168704635881522627352680529696729605184_i128),(-157057709242046994917455391821513866632_i128)];
RET = [134_u8];
_35 = 10100959668109492824_u64 as usize;
_27 = [_18.1,_18.1,_18.1,_18.1,_18.1,_18.1];
_37 = !_12.fld3;
_7.fld4 = !_10.fld4;
Call(_9.fld7 = core::intrinsics::arith_offset(_29, (-9223372036854775808_isize)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_3.fld5 = (_12.fld2, _22.1, _9.fld5.2, _10.fld5.3);
_9.fld5.3 = [(-61562438000583766573215620202006620535_i128),(-69706179832514054626830235719145539252_i128),(-169843889163438107053778639120784599003_i128),(-143725477806531962652480626145229105266_i128),37556315290667883231431533424401130197_i128,44762263963837708860242079453918961119_i128];
_7.fld3 = _18.2 + _18.3;
_1.fld5.0 = 31141698191020754475856771019507994893_u128 as f64;
_1.fld7 = core::ptr::addr_of!(_42);
_1.fld2 = _9.fld6 as f64;
_12 = _7;
_3.fld4 = _2;
_9.fld5.1 = _11.1;
_8.0 = _3.fld5.0;
_12.fld1 = core::ptr::addr_of_mut!(_45.2);
_28 = _3.fld6 >= _7.fld6;
_1.fld5 = (_12.fld2, _10.fld5.1, _11.2, _8.3);
_41 = _3.fld6 as f64;
_10 = Adt42 { fld0: _9.fld0,fld1: _9.fld1,fld2: _8.0,fld3: _37,fld4: _9.fld4,fld5: _3.fld5,fld6: _1.fld6,fld7: _3.fld7 };
_10.fld1 = core::ptr::addr_of_mut!(_3.fld0);
_1.fld5 = _11;
place!(Field::<*mut u32>(Variant(_24, 0), 4)) = core::ptr::addr_of_mut!(_7.fld6);
Goto(bb9)
}
bb9 = {
_1.fld7 = core::ptr::addr_of!((*_29));
_45.3 = (-66566445792807195746418673840458162045_i128) as f64;
_7.fld7 = core::ptr::addr_of!((*_29));
_1.fld5.1 = [_19,_30,_30];
_12.fld5.0 = _3.fld5.0;
_30 = _19;
_18.0 = (-1350460386_i32) ^ (-1766527876_i32);
_7.fld5.3 = [(-49266429635787809982014273160947186959_i128),(-134116650017686146187454672123179636471_i128),90639197844919084069746881405012937483_i128,(-57324102814783022506926414373181727644_i128),133792827230023780960607538708420726026_i128,(-111370956911405968633451124740420873961_i128)];
_32 = Field::<[u16; 6]>(Variant(_24, 0), 1);
_20 = _14;
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)) = _11;
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).3 = [(-100786982378846710731415853547189903978_i128),(-39216657795468122049622098288558368503_i128),115698315725023974301741540001810072954_i128,(-23244221746737312340900650356412390004_i128),112857669539805061410442779376392557043_i128,(-151494596501674503350519629304324480920_i128)];
_22.3 = [(-23501979742408048464653305392916572648_i128),56515246873814922418223739864680039912_i128,(-71246440954894915627792165145807662182_i128),84897522280013020210408396423490952185_i128,(-114577025572432219579641566949929369723_i128),75332108550339514345818116842120425699_i128];
_1.fld5.0 = _8.0 - _5;
_24 = Adt43::Variant2 { fld0: _18.0 };
_8.0 = _30 as f64;
_10 = Adt42 { fld0: _7.fld0,fld1: _9.fld1,fld2: _7.fld2,fld3: _12.fld3,fld4: _1.fld4,fld5: _1.fld5,fld6: _13,fld7: _12.fld7 };
Call(_1.fld7 = core::intrinsics::arith_offset(_12.fld7, 9223372036854775807_isize), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_10.fld5.0 = _7.fld5.0 - _12.fld5.0;
_5 = _12.fld5.0;
_12.fld5.3 = [(-18588279712294760514948302648668986876_i128),166812558991636529419665359462551428280_i128,168502819743827758358931089402868743809_i128,43590987328936258821078466941362841171_i128,13764941934030994539872356330105782432_i128,(-66606980529983395175086492509233211738_i128)];
_10.fld4 = _3.fld4;
_49 = _19;
_12.fld1 = _9.fld1;
_28 = _41 > _7.fld5.0;
_5 = 282941264111462985685810874365045330958_u128 as f64;
_7.fld0 = _1.fld0;
_45.0 = _19 as u64;
Goto(bb11)
}
bb11 = {
_37 = _9.fld0 as i8;
_11.2 = _9.fld5.2;
_25 = _9.fld4 >> _1.fld6;
_7.fld5 = _9.fld5;
_1.fld3 = !_10.fld3;
_12.fld2 = _49 as f64;
_37 = -_7.fld3;
_20 = _14;
_6 = _3.fld0;
_39 = _19 as u64;
_46 = [_18.0,Field::<i32>(Variant(_24, 2), 0),Field::<i32>(Variant(_24, 2), 0),Field::<i32>(Variant(_24, 2), 0),_18.0];
_3.fld1 = core::ptr::addr_of_mut!(_7.fld0);
_14 = _20;
_9.fld1 = _1.fld1;
_8.1 = [_49,_19,_19];
_7.fld4 = _3.fld4;
_27 = [_18.1,_18.1,_18.1,_18.1,_18.1,_18.1];
RET = [44_u8];
Goto(bb12)
}
bb12 = {
_1.fld0 = !_12.fld0;
_12 = Adt42 { fld0: _3.fld0,fld1: _3.fld1,fld2: _9.fld5.0,fld3: _18.2,fld4: _25,fld5: _11,fld6: _1.fld6,fld7: _1.fld7 };
_42 = 20237526613174282889111933898856686335_i128 as f32;
SetDiscriminant(_24, 0);
_45.1 = [_25];
Call(_56 = fn16(_28, _11, _9.fld5, _9, _7.fld5, _28, _10.fld5, _9.fld5.2, _10.fld5, _1.fld3, _11.2, _12.fld0, _9.fld5), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).0 = _16 * _3.fld2;
_7.fld6 = !_1.fld6;
_57.1 = !_18.1;
_20 = _14;
_9.fld5.3 = [58857258248164039790045167358910866161_i128,157789865511817983884479602620269737663_i128,131801262054499732906893170648186389722_i128,143892554585868104917427192976845177185_i128,104110586273813163174274593797046563561_i128,(-68624577060310597513884669962801888525_i128)];
_57.0 = _49 as i32;
_57.2 = _18.2 >> _18.1;
_39 = 146397339171844100589939362972592969322_i128 as u64;
_12.fld5.3 = [(-135637705275585237753919223906092013314_i128),(-59278175328127873057916925330654189405_i128),165150581142919146045023449475437288396_i128,(-159334081892295561373276577419966248614_i128),62383142680250978207688108505405534829_i128,(-169305749551403364995686674625956511818_i128)];
_9 = Adt42 { fld0: _21,fld1: _12.fld1,fld2: _41,fld3: _10.fld3,fld4: _1.fld4,fld5: _12.fld5,fld6: _12.fld6,fld7: _10.fld7 };
_40 = _20;
_34 = 154602478939950046316494384074974605530_i128 + 59541702531913891770280969359763776404_i128;
_22 = (_41, _7.fld5.1, _9.fld5.2, _10.fld5.3);
_12.fld1 = _10.fld1;
_1.fld0 = _56;
_1.fld0 = !_21;
_59 = core::ptr::addr_of_mut!(_47);
Call(_9.fld5.0 = core::intrinsics::transmute(_45.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_25 = _9.fld4;
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).0 = _7.fld2;
_29 = core::ptr::addr_of!(_42);
_41 = _7.fld2;
_7.fld3 = -_37;
_3.fld5.2 = _12.fld5.2;
_11 = _3.fld5;
_26 = _7.fld2;
_45.4 = -(-12816_i16);
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).2 = _3.fld5.2;
_1.fld6 = _18.1 as u32;
_10.fld7 = _9.fld7;
_33 = !_13;
_12.fld5.3 = [_34,_34,_34,_34,_34,_34];
_12.fld1 = core::ptr::addr_of_mut!(_23);
_3.fld0 = !_23;
_8.2 = _7.fld5.2;
_58 = 4777889629225369290_i64 & 3813930933165897357_i64;
_18.0 = _57.0 ^ _57.0;
_12 = _10;
_9.fld7 = core::ptr::addr_of!((*_29));
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_24, 0), 0)).1 = _12.fld5.1;
_7 = _1;
_18.3 = -_37;
Goto(bb15)
}
bb15 = {
Call(_61 = dump_var(Move(_20), Move(_13), Move(_21), Move(_39)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_61 = dump_var(Move(_19), Move(_40), Move(_49), Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_61 = dump_var(Move(_37), Move(_14), Move(_58), Move(_35)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: usize,mut _2: (f64, [isize; 3], *mut u32, [i128; 6])) -> *const f32 {
mir! {
type RET = *const f32;
let _3: isize;
let _4: Adt47;
let _5: [u64; 6];
let _6: isize;
let _7: Adt50;
let _8: (u64, [usize; 1], bool, f64, i16);
let _9: [usize; 1];
let _10: Adt47;
let _11: [i8; 8];
let _12: [i8; 8];
let _13: Adt43;
let _14: i64;
let _15: Adt43;
let _16: isize;
let _17: [u64; 6];
let _18: isize;
let _19: [i8; 8];
let _20: *mut u32;
let _21: f64;
let _22: Adt47;
let _23: isize;
let _24: [i128; 6];
let _25: i8;
let _26: (i32, u16, i8, i8, f64);
let _27: isize;
let _28: [u16; 6];
let _29: u16;
let _30: [i32; 5];
let _31: [i8; 8];
let _32: bool;
let _33: char;
let _34: *const f32;
let _35: f32;
let _36: i16;
let _37: Adt50;
let _38: Adt49;
let _39: ();
let _40: ();
{
_2.3 = [30978391377734171782645210538811601036_i128,139167933791390124081757280026194138847_i128,(-112400768493739615116671926727735399029_i128),87924354982652142520905242315114194677_i128,116505968669316418583647875347343835356_i128,(-167967206735829290669735803289960033829_i128)];
match _1 {
0 => bb1,
1651142027840497555 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_1 = 14872434280764047232_usize;
_2.0 = 735310751_i32 as f64;
_2.0 = 244372809313008562098039912416410829637_u128 as f64;
_1 = 3380769309745386619_u64 as usize;
_4.fld0 = [5622022906906951770_u64,13095995834067301197_u64,1586234419132522567_u64,1347961771451211300_u64,10272195983975006733_u64,5872995291038217131_u64];
_1 = !7_usize;
_2.0 = _1 as f64;
Goto(bb4)
}
bb4 = {
_5 = _4.fld0;
_4.fld0 = _5;
_5 = _4.fld0;
_5 = [18120785117393088591_u64,10423253403436554_u64,15823082712256307085_u64,12316894549414129224_u64,7616722265424506100_u64,14904700583918669245_u64];
_4.fld0 = [9343174885134686806_u64,5961960452381508478_u64,5909784904704242562_u64,18249398481063992326_u64,3724047987009723197_u64,323883051623530275_u64];
_3 = 9223372036854775807_isize;
_6 = -_3;
_4 = Adt47 { fld0: _5 };
_1 = 8942978128084763303_u64 as usize;
_2.3 = [(-130963805833383832258886143372377932739_i128),169710337608288258322396731027109352676_i128,(-24262641493869971887715138077223233032_i128),(-130097674419071014412962826602487901784_i128),(-99309618123894878278429837719730696923_i128),(-76389440967978136406995059055120768002_i128)];
_2.3 = [(-125166046109166218251720784394959009146_i128),(-16412892049689783743894913319861070662_i128),(-129250761930493823349224434101127247958_i128),125625418380190438677317714640777073093_i128,69543940818592714779495137863394579418_i128,(-72811002300264826057728039390396165571_i128)];
_2.3 = [(-141032659314617761190323811906181251070_i128),(-168797008304942295968681453286455757183_i128),57680903179652271697411612345257086219_i128,(-42727237988625250020159839262852244486_i128),(-129652509049068977154261423551997480924_i128),(-49139318362965626889191194329864925014_i128)];
_4 = Adt47 { fld0: _5 };
_5 = [13782263766853972068_u64,6211035407605710677_u64,1452274490877289414_u64,13097292549279534219_u64,15529077688405966635_u64,15116827573373959785_u64];
_4 = Adt47 { fld0: _5 };
_2.3 = [(-17818685338464115468200907762476029836_i128),148018777438843532901009045486660629130_i128,164089991268105077307742009267454884383_i128,45924372193872033592181253785146829424_i128,(-115060811217989423550404619948841429085_i128),(-9547306470785716029731252011399933628_i128)];
_2.0 = 62935_u16 as f64;
_5 = [14260275903640404728_u64,7006548594043344153_u64,11549914074217661192_u64,176249532258400431_u64,7383868745467212018_u64,14397803588284356166_u64];
_8.2 = true;
_3 = _6 | _6;
_2.0 = 1950455491_u32 as f64;
_8.1 = [_1];
Call(_8 = fn14(_2, _2.2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_2.0 = _8.3;
_8.3 = _8.0 as f64;
_8.2 = !false;
_10 = Adt47 { fld0: _5 };
_2.1 = [_6,_6,_6];
_8.2 = true;
_10 = Adt47 { fld0: _5 };
_6 = -_3;
_10.fld0 = _5;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_2.0 = 60964_u16 as f64;
_11 = [90_i8,(-14_i8),24_i8,11_i8,(-57_i8),5_i8,103_i8,9_i8];
_8.1 = [_1];
_9 = [_1];
Goto(bb6)
}
bb6 = {
_10.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_8.3 = _2.0 + _2.0;
_2.1 = [_3,_3,_3];
_11 = [(-117_i8),(-32_i8),69_i8,(-16_i8),123_i8,70_i8,3_i8,(-110_i8)];
_2.1 = [_6,_3,_6];
_9 = _8.1;
_2.1 = [_6,_3,_3];
_12 = _11;
match _8.0 {
0 => bb7,
1 => bb8,
2 => bb9,
9538779012586795350 => bb11,
_ => bb10
}
}
bb7 = {
_2.0 = _8.3;
_8.3 = _8.0 as f64;
_8.2 = !false;
_10 = Adt47 { fld0: _5 };
_2.1 = [_6,_6,_6];
_8.2 = true;
_10 = Adt47 { fld0: _5 };
_6 = -_3;
_10.fld0 = _5;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_2.0 = 60964_u16 as f64;
_11 = [90_i8,(-14_i8),24_i8,11_i8,(-57_i8),5_i8,103_i8,9_i8];
_8.1 = [_1];
_9 = [_1];
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
_1 = 14872434280764047232_usize;
_2.0 = 735310751_i32 as f64;
_2.0 = 244372809313008562098039912416410829637_u128 as f64;
_1 = 3380769309745386619_u64 as usize;
_4.fld0 = [5622022906906951770_u64,13095995834067301197_u64,1586234419132522567_u64,1347961771451211300_u64,10272195983975006733_u64,5872995291038217131_u64];
_1 = !7_usize;
_2.0 = _1 as f64;
Goto(bb4)
}
bb10 = {
Return()
}
bb11 = {
_2.0 = _8.3 - _8.3;
_9 = [_1];
_8.0 = 4407776265035119493_u64 >> _8.4;
_8.3 = _2.0 - _2.0;
_3 = _6;
_10.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_4 = Adt47 { fld0: _5 };
Goto(bb12)
}
bb12 = {
_8.0 = 12471394278415016616_u64 + 13528351983528125037_u64;
_8.3 = _3 as f64;
_2.0 = _8.3 - _8.3;
_6 = _3 + _3;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_2.0 = _8.3;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_3 = -_6;
_2.0 = _8.3;
_10.fld0 = _5;
_2.1 = [_3,_6,_6];
_13 = Adt43::Variant2 { fld0: 581775054_i32 };
_8.2 = _3 < _6;
_10 = _4;
_11 = _12;
_8.2 = _8.3 <= _8.3;
_8.1 = [_1];
_1 = 4701999412102077810_usize * 7_usize;
Goto(bb13)
}
bb13 = {
_4 = Adt47 { fld0: _5 };
_11 = [110_i8,(-88_i8),5_i8,50_i8,112_i8,37_i8,10_i8,23_i8];
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_14 = 5626252923618456370_i64;
_8.3 = -_2.0;
_4 = Adt47 { fld0: _5 };
_8.4 = _2.0 as i16;
_3 = 125_i8 as isize;
_2.1 = [_6,_3,_6];
_12 = _11;
_2.3 = [(-41814930286478356482069778175764742446_i128),93682683520039992222666867328322620323_i128,67714741630374452904397704227155269847_i128,140077000113095980666438983923450031977_i128,79797326986777247519419419611072124100_i128,(-128897747192444785148813173473300134338_i128)];
_2.1 = [_6,_6,_6];
_2.3 = [(-123786957337993638960848888635672117305_i128),136682674501717566040462159373028520012_i128,(-130851448019708859137248895607769019959_i128),76327891474983095375317372956635233223_i128,(-132666363397471483262747040326419210055_i128),(-105763535939149502416982119328428375658_i128)];
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_9 = [_1];
_16 = -_6;
_5 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_3 = (-39_i8) as isize;
_6 = _8.4 as isize;
_1 = 16_u8 as usize;
Goto(bb14)
}
bb14 = {
_8.4 = (-12759_i16);
Call(_1 = core::intrinsics::bswap(9982816853541065938_usize), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
place!(Field::<i32>(Variant(_13, 2), 0)) = _16 as i32;
_1 = !2_usize;
_8.1 = [_1];
_16 = _3 >> Field::<i32>(Variant(_13, 2), 0);
_18 = _16;
_20 = _2.2;
match _14 {
0 => bb10,
1 => bb2,
5626252923618456370 => bb17,
_ => bb16
}
}
bb16 = {
_8.0 = 12471394278415016616_u64 + 13528351983528125037_u64;
_8.3 = _3 as f64;
_2.0 = _8.3 - _8.3;
_6 = _3 + _3;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_2.0 = _8.3;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_3 = -_6;
_2.0 = _8.3;
_10.fld0 = _5;
_2.1 = [_3,_6,_6];
_13 = Adt43::Variant2 { fld0: 581775054_i32 };
_8.2 = _3 < _6;
_10 = _4;
_11 = _12;
_8.2 = _8.3 <= _8.3;
_8.1 = [_1];
_1 = 4701999412102077810_usize * 7_usize;
Goto(bb13)
}
bb17 = {
_8 = (17754192487336587960_u64, _9, true, _2.0, 8744_i16);
place!(Field::<i32>(Variant(_13, 2), 0)) = (-2029523764_i32);
_8.2 = true;
_2.2 = _20;
SetDiscriminant(_13, 2);
_17 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_8 = (3796209544469259242_u64, _9, false, _2.0, (-14441_i16));
_10.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_19 = [112_i8,81_i8,(-73_i8),(-115_i8),62_i8,31_i8,13_i8,50_i8];
_19 = [98_i8,126_i8,(-93_i8),102_i8,(-125_i8),(-123_i8),36_i8,(-63_i8)];
_8.0 = 18332575112037585634_u64 >> _18;
_8 = (7075560494767386912_u64, _9, true, _2.0, 9490_i16);
_21 = _2.0;
_13 = Adt43::Variant2 { fld0: 1411490621_i32 };
_6 = _3;
_8.3 = -_2.0;
_13 = Adt43::Variant2 { fld0: 347577160_i32 };
place!(Field::<i32>(Variant(_13, 2), 0)) = (-1058405919_i32) | (-1039722102_i32);
_8.1 = [_1];
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_15 = Move(_13);
_8.1 = _9;
_4 = Adt47 { fld0: _17 };
Goto(bb18)
}
bb18 = {
_8.1 = [_1];
_8.4 = 21833_i16;
_2.1 = [_16,_16,_18];
_8.4 = (-28958_i16);
_22 = _4;
_13 = Adt43::Variant2 { fld0: Field::<i32>(Variant(_15, 2), 0) };
_14 = 7942437279898877179_i64 - 1161245869798717756_i64;
_8.2 = _21 <= _8.3;
_2.2 = _20;
_2.0 = _14 as f64;
_22 = Adt47 { fld0: _4.fld0 };
_8.4 = 3613_i16;
_16 = 40_i8 as isize;
place!(Field::<i32>(Variant(_15, 2), 0)) = !Field::<i32>(Variant(_13, 2), 0);
SetDiscriminant(_15, 1);
_15 = Move(_13);
_15 = Adt43::Variant2 { fld0: 747686959_i32 };
_16 = _18;
match _8.0 {
0 => bb13,
1 => bb15,
2 => bb11,
3 => bb19,
7075560494767386912 => bb21,
_ => bb20
}
}
bb19 = {
_10.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_8.3 = _2.0 + _2.0;
_2.1 = [_3,_3,_3];
_11 = [(-117_i8),(-32_i8),69_i8,(-16_i8),123_i8,70_i8,3_i8,(-110_i8)];
_2.1 = [_6,_3,_6];
_9 = _8.1;
_2.1 = [_6,_3,_3];
_12 = _11;
match _8.0 {
0 => bb7,
1 => bb8,
2 => bb9,
9538779012586795350 => bb11,
_ => bb10
}
}
bb20 = {
_8.0 = 12471394278415016616_u64 + 13528351983528125037_u64;
_8.3 = _3 as f64;
_2.0 = _8.3 - _8.3;
_6 = _3 + _3;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_2.0 = _8.3;
_4.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_3 = -_6;
_2.0 = _8.3;
_10.fld0 = _5;
_2.1 = [_3,_6,_6];
_13 = Adt43::Variant2 { fld0: 581775054_i32 };
_8.2 = _3 < _6;
_10 = _4;
_11 = _12;
_8.2 = _8.3 <= _8.3;
_8.1 = [_1];
_1 = 4701999412102077810_usize * 7_usize;
Goto(bb13)
}
bb21 = {
_1 = _8.0 as usize;
_13 = Adt43::Variant2 { fld0: (-2033856483_i32) };
_1 = 7_usize ^ 1385782350251363994_usize;
_26 = ((-921439957_i32), 1478_u16, 103_i8, (-89_i8), _8.3);
_15 = Adt43::Variant2 { fld0: _26.0 };
_5 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_4.fld0 = _17;
SetDiscriminant(_15, 2);
Goto(bb22)
}
bb22 = {
_13 = Adt43::Variant2 { fld0: _26.0 };
_10 = Adt47 { fld0: _22.fld0 };
_14 = -(-3292910739839935456_i64);
_4 = Adt47 { fld0: _17 };
_25 = _26.3;
_8.0 = 10272607836200588693_u64;
place!(Field::<i32>(Variant(_15, 2), 0)) = -Field::<i32>(Variant(_13, 2), 0);
_2.1 = [_18,_16,_18];
_10 = Adt47 { fld0: _5 };
_18 = 106320085672275029303667666275981658606_i128 as isize;
_2.0 = _26.3 as f64;
_10 = _4;
_6 = !_16;
_22.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_15 = Move(_13);
_2.3 = [(-57955630954324472110460939048071186969_i128),(-34205714249288826907680317795779812903_i128),(-66149618651865850616179931460235524155_i128),61251951059810491565488465066240136173_i128,11934439611132712542907259703580683194_i128,(-156888385341213733991955967754337017569_i128)];
place!(Field::<i32>(Variant(_15, 2), 0)) = _26.0;
_25 = _26.2;
_22.fld0 = [_8.0,_8.0,_8.0,_8.0,_8.0,_8.0];
_26.2 = -_25;
_26 = (Field::<i32>(Variant(_15, 2), 0), 56547_u16, _25, _25, _21);
_8.0 = !2656034949584298699_u64;
_17 = _5;
_23 = _16 + _16;
match _26.1 {
0 => bb14,
1 => bb2,
2 => bb10,
3 => bb23,
56547 => bb25,
_ => bb24
}
}
bb23 = {
Return()
}
bb24 = {
_1 = 14872434280764047232_usize;
_2.0 = 735310751_i32 as f64;
_2.0 = 244372809313008562098039912416410829637_u128 as f64;
_1 = 3380769309745386619_u64 as usize;
_4.fld0 = [5622022906906951770_u64,13095995834067301197_u64,1586234419132522567_u64,1347961771451211300_u64,10272195983975006733_u64,5872995291038217131_u64];
_1 = !7_usize;
_2.0 = _1 as f64;
Goto(bb4)
}
bb25 = {
_20 = _2.2;
_27 = -_6;
_8.3 = -_2.0;
Call(_17 = core::intrinsics::transmute(_4.fld0), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_2.3 = [(-35928544222167851636010923256462558420_i128),67574442941471094526291166415216868365_i128,(-133615344098303916643436640670918861367_i128),132238622919222371105644417350750431121_i128,(-83923328803767481477290013772341651972_i128),89083068332967264138561239457242480778_i128];
_26.0 = !Field::<i32>(Variant(_15, 2), 0);
_14 = (-8197501066018215460_i64);
_22 = Adt47 { fld0: _10.fld0 };
_28 = [_26.1,_26.1,_26.1,_26.1,_26.1,_26.1];
match _26.1 {
0 => bb17,
1 => bb14,
2 => bb21,
3 => bb23,
4 => bb8,
5 => bb18,
56547 => bb27,
_ => bb25
}
}
bb27 = {
_26.0 = Field::<i32>(Variant(_15, 2), 0) + Field::<i32>(Variant(_15, 2), 0);
_26.1 = 17452_u16;
_8.0 = !9412000755609782146_u64;
_1 = 3_usize;
_26.0 = Field::<i32>(Variant(_15, 2), 0);
_2.3[_1] = (-22538721646130110977856557211690238801_i128);
Call(_2.3 = fn15(_10.fld0, _11[_1], _11[_1], _4.fld0[_1], _4), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
SetDiscriminant(_15, 1);
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4)).0 = !_26.0;
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld2 = -_21;
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld0 = _8.3 < _2.0;
place!(Field::<bool>(Variant(_15, 1), 0)) = Field::<Adt42>(Variant(_15, 1), 6).fld0;
_31 = [_25,_25,_26.3,_26.3,_25,_26.3,_25,_26.3];
place!(Field::<i8>(Variant(_15, 1), 3)) = _26.3;
place!(Field::<u32>(Variant(_15, 1), 7)) = !3150294251_u32;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4)).4 = _8.3 + _21;
_31 = [_26.3,Field::<i8>(Variant(_15, 1), 3),_26.2,Field::<i8>(Variant(_15, 1), 3),_26.2,_26.3,Field::<i8>(Variant(_15, 1), 3),_25];
_22 = _10;
_6 = _23 * _23;
_24 = [(-168996164128917607585606025936761785975_i128),90800157578894308704297802175775996879_i128,(-84526225956109073690302132745742202445_i128),(-54366534148655757985700962531580843044_i128),(-133995803113445607387310425780529527556_i128),(-70017963248884394312030903550691965801_i128)];
_29 = _26.1 - _26.1;
_26.3 = !_26.2;
_25 = -Field::<i8>(Variant(_15, 1), 3);
_30 = [Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).0,Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).0,_26.0,Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).0,_26.0];
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld2 = _8.4 as f64;
place!(Field::<u32>(Variant(_15, 1), 7)) = 1538396327_u32;
_8.0 = 8209264100179592971_u64 << _6;
place!(Field::<i8>(Variant(_15, 1), 3)) = 122937047283068717144572316409729651036_u128 as i8;
_4 = _22;
_8.3 = _8.0 as f64;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4)) = (_26.0, _29, _26.3, _26.3, _2.0);
_8.3 = Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).4 + _26.4;
Goto(bb29)
}
bb29 = {
_18 = _6;
_4 = _10;
_10.fld0 = _4.fld0;
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld5.0 = -_21;
_33 = '\u{9d15e}';
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4)) = (_26.0, _29, _26.2, _25, Field::<Adt42>(Variant(_15, 1), 6).fld5.0);
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld5.2 = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_15, 1), 7)));
_35 = Field::<u32>(Variant(_15, 1), 7) as f32;
_26.1 = _29 << _8.0;
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld4 = _1;
_3 = !_23;
_37 = Adt50::Variant2 { fld0: _2 };
_10.fld0 = _22.fld0;
place!(Field::<[i8; 3]>(Variant(_15, 1), 2)) = [Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).2,_26.2,Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).3];
_8.4 = _35 as i16;
RET = core::ptr::addr_of!(_35);
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld3 = Field::<(i32, u16, i8, i8, f64)>(Variant(_15, 1), 4).2;
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld7 = core::ptr::addr_of!((*RET));
_3 = -_23;
_2.2 = Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_37, 2), 0).2;
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_37, 2), 0)).3 = _24;
place!(Field::<(f64, [isize; 3], *mut u32, [i128; 6])>(Variant(_37, 2), 0)).0 = -_8.3;
_31 = _19;
place!(Field::<Adt42>(Variant(_15, 1), 6)).fld5.0 = _8.4 as f64;
_6 = -_18;
Goto(bb30)
}
bb30 = {
Call(_39 = dump_var(Move(_5), Move(_14), Move(_1), Move(_18)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_39 = dump_var(Move(_17), Move(_9), Move(_27), Move(_33)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_39 = dump_var(Move(_24), Move(_6), _40, _40), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: (f64, [isize; 3], *mut u32, [i128; 6]),mut _2: *mut u32) -> (u64, [usize; 1], bool, f64, i16) {
mir! {
type RET = (u64, [usize; 1], bool, f64, i16);
let _3: i8;
let _4: u32;
let _5: (i32, u16, i8, i8, f64);
let _6: i16;
let _7: [isize; 3];
let _8: char;
let _9: u16;
let _10: [i32; 5];
let _11: u128;
let _12: *mut *mut u32;
let _13: [usize; 1];
let _14: i128;
let _15: f64;
let _16: f32;
let _17: Adt52;
let _18: char;
let _19: *mut [u8; 1];
let _20: u32;
let _21: [i8; 8];
let _22: u8;
let _23: (isize, &'static [u8; 1], f64);
let _24: [u16; 6];
let _25: char;
let _26: char;
let _27: ();
let _28: ();
{
RET.3 = _1.0 * _1.0;
RET.1 = [4_usize];
RET.2 = false ^ true;
RET.0 = 10398742365766740571_u64 + 1026695706766659396_u64;
RET.3 = -_1.0;
RET.2 = !false;
RET.1 = [2_usize];
RET.0 = !8706182206044509244_u64;
RET.1 = [4426216587909052771_usize];
_1.1 = [(-9223372036854775808_isize),9223372036854775807_isize,90_isize];
RET.1 = [1_usize];
RET.4 = 15790_i16;
RET.4 = 20093_i16 * 20374_i16;
RET.4 = -(-16527_i16);
RET.1 = [12992169157243907291_usize];
_1.2 = _2;
_4 = (-2850113226765664224_i64) as u32;
RET.2 = false | true;
RET.4 = 6499_i16;
RET.4 = 127229061592187855850089671779104412795_i128 as i16;
Goto(bb1)
}
bb1 = {
RET.0 = _1.0 as u64;
RET.3 = 6_usize as f64;
RET.1 = [259520272884278303_usize];
RET.0 = 9036512741556067249_u64;
RET.1 = [7_usize];
_3 = -(-23_i8);
RET.2 = false & true;
_5.4 = RET.3 * _1.0;
_5.2 = '\u{66290}' as i8;
RET.2 = RET.3 < _5.4;
_8 = '\u{4ec89}';
_5 = (755627294_i32, 10968_u16, _3, _3, RET.3);
RET.0 = 2571361256855876865_u64 | 7719541995131164597_u64;
_5.1 = !4341_u16;
_9 = _5.1 & _5.1;
_1.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = 3891319368_u32;
RET.0 = !15954313006550272212_u64;
_3 = _5.3;
_1.0 = _4 as f64;
Goto(bb2)
}
bb2 = {
_1.2 = _2;
RET.3 = -_1.0;
_1.0 = _5.4;
_1.3 = [(-140516153257504708725327774206193353500_i128),(-133657384499552844504298133938381380213_i128),(-29176957182856500516768793542159518079_i128),(-100821640722497683508722528026520737288_i128),(-49076963929261425562793099974419126527_i128),150904059008962356484195364284126780692_i128];
RET.1 = [5_usize];
RET.0 = RET.2 as u64;
_5.1 = !_9;
RET.3 = (-2362282315169869013_i64) as f64;
_5 = (974874528_i32, _9, _3, _3, _1.0);
RET.0 = (-142508677669340706725022754061889049550_i128) as u64;
_5.3 = _5.2;
_1.2 = _2;
_4 = !404549785_u32;
RET.0 = 2812882643254177981_u64 >> RET.4;
RET.3 = _5.4;
RET.4 = !(-16798_i16);
_5.2 = _8 as i8;
_5.2 = -_3;
_6 = 252554424039073317896113547208577193023_u128 as i16;
_3 = 5390758375878914848_i64 as i8;
_2 = _1.2;
match _5.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
974874528 => bb11,
_ => bb10
}
}
bb3 = {
RET.0 = _1.0 as u64;
RET.3 = 6_usize as f64;
RET.1 = [259520272884278303_usize];
RET.0 = 9036512741556067249_u64;
RET.1 = [7_usize];
_3 = -(-23_i8);
RET.2 = false & true;
_5.4 = RET.3 * _1.0;
_5.2 = '\u{66290}' as i8;
RET.2 = RET.3 < _5.4;
_8 = '\u{4ec89}';
_5 = (755627294_i32, 10968_u16, _3, _3, RET.3);
RET.0 = 2571361256855876865_u64 | 7719541995131164597_u64;
_5.1 = !4341_u16;
_9 = _5.1 & _5.1;
_1.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = 3891319368_u32;
RET.0 = !15954313006550272212_u64;
_3 = _5.3;
_1.0 = _4 as f64;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_5.1 = _9 - _9;
_13 = [9607010130760287147_usize];
_10 = [_5.0,_5.0,_5.0,_5.0,_5.0];
_5.3 = _3 | _3;
_10 = [_5.0,_5.0,_5.0,_5.0,_5.0];
_5 = (906218689_i32, _9, _3, _3, RET.3);
_11 = RET.4 as u128;
Goto(bb12)
}
bb12 = {
RET.0 = 1760127460907667186_u64 | 9712199740385373465_u64;
_5.4 = -_1.0;
_3 = _5.4 as i8;
RET.1 = _13;
_14 = 117790801299005400760482465758240965102_i128;
_7 = _1.1;
RET.3 = _1.0;
_12 = core::ptr::addr_of_mut!(_2);
_14 = 34145566428936656672139437759095223277_i128 | 67335962585740878235595521315327212939_i128;
_12 = core::ptr::addr_of_mut!((*_12));
RET.3 = -_1.0;
Goto(bb13)
}
bb13 = {
_5.4 = RET.3;
_10 = [_5.0,_5.0,_5.0,_5.0,_5.0];
_5.1 = _9 + _9;
_15 = -RET.3;
_5.0 = 122875950_i32;
RET.1 = _13;
_12 = core::ptr::addr_of_mut!(_1.2);
RET.3 = _1.0;
_5 = (1208650559_i32, _9, _3, _3, RET.3);
Goto(bb14)
}
bb14 = {
_4 = RET.2 as u32;
_5.4 = _1.0 + RET.3;
_4 = 40_u8 as u32;
_12 = core::ptr::addr_of_mut!(_2);
_2 = _1.2;
RET = (9538779012586795350_u64, _13, true, _1.0, _6);
_12 = core::ptr::addr_of_mut!(_2);
_5.4 = -_1.0;
_20 = _4;
_7 = [(-113_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_5.0 = 12923905958269652972_usize as i32;
_1.3 = [_14,_14,_14,_14,_14,_14];
_5.1 = _9;
_3 = _5.2 & _5.2;
_1.2 = (*_12);
RET.3 = _1.0;
_25 = _8;
_23.0 = -(-9223372036854775808_isize);
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(Move(_20), Move(_10), Move(_8), Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(Move(_7), Move(_9), _28, _28), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [u64; 6],mut _2: i8,mut _3: i8,mut _4: u64,mut _5: Adt47) -> [i128; 6] {
mir! {
type RET = [i128; 6];
let _6: u32;
let _7: Adt53;
let _8: i32;
let _9: [u64; 6];
let _10: [u64; 6];
let _11: i32;
let _12: [u16; 6];
let _13: [u16; 5];
let _14: u64;
let _15: f32;
let _16: (u64, *const bool);
let _17: u16;
let _18: char;
let _19: [u16; 6];
let _20: [u16; 5];
let _21: [i8; 3];
let _22: u32;
let _23: i64;
let _24: i128;
let _25: *mut u32;
let _26: [u16; 6];
let _27: [isize; 3];
let _28: isize;
let _29: isize;
let _30: [u16; 6];
let _31: (u64, [usize; 1], bool, f64, i16);
let _32: isize;
let _33: bool;
let _34: [isize; 3];
let _35: i128;
let _36: u8;
let _37: i128;
let _38: [isize; 3];
let _39: [i128; 6];
let _40: u16;
let _41: i16;
let _42: Adt55;
let _43: [i32; 5];
let _44: Adt55;
let _45: i32;
let _46: ();
let _47: ();
{
_5.fld0 = [_4,_4,_4,_4,_4,_4];
_6 = 1839122002_u32;
_3 = _2 ^ _2;
RET = [8491045608365379123060570932274992778_i128,68334601809700166483535390688134476385_i128,29872464687529632041206540808808699313_i128,(-75484749924622630240886154330795883033_i128),159125761393965557878853272952800182582_i128,(-79404286869017783545281117395152177858_i128)];
_4 = 12415533760875260062_u64 * 13523614070616427636_u64;
_6 = 3207394201_u32 * 4194149144_u32;
_2 = _3;
RET = [38355620727224567673935929013080527633_i128,(-73051357173582142476637190176793210261_i128),69957394794028366884276241511231197545_i128,12234090800853453137363234190132129153_i128,127774625682591370313283334359531985522_i128,74930514961955475085577906231181738340_i128];
_9 = [_4,_4,_4,_4,_4,_4];
_5 = Adt47 { fld0: _1 };
_8 = (-1815127912_i32);
_4 = 2339928562407964228_u64 - 363788348859327380_u64;
RET = [125898630912854499231859578050885316080_i128,120938199661314534978235884084440537713_i128,6680748311620932929791634141687335892_i128,163892517823889422144020917041929503659_i128,(-103977438368593477619105788353728493078_i128),16988923110216657426311383589263683414_i128];
_9 = _5.fld0;
_3 = _2 << _2;
Goto(bb1)
}
bb1 = {
_14 = !_4;
RET = [105266948482134558259359679422576989273_i128,(-98825846494035713193343137780570113855_i128),86543417112468656030856904125207599843_i128,115051195108615336133098714907349817302_i128,(-90001449255465108291585403456029019853_i128),80722887120554062197902716059692958240_i128];
_9 = [_14,_4,_14,_14,_14,_14];
_12 = [20042_u16,4342_u16,54773_u16,47750_u16,8555_u16,49098_u16];
_13 = [5917_u16,40418_u16,14307_u16,63347_u16,62452_u16];
Goto(bb2)
}
bb2 = {
_4 = _14;
_9 = [_14,_14,_4,_14,_4,_4];
_1 = [_4,_14,_4,_14,_14,_14];
_10 = [_14,_4,_4,_4,_4,_4];
_16.0 = false as u64;
_2 = _3 + _3;
_13 = [17374_u16,37064_u16,50795_u16,3149_u16,28995_u16];
RET = [169870304376072260758386194593604588804_i128,98447223703430146536653165213111011512_i128,93798642616480385856218219731349874367_i128,(-147601877563373983623864569969578669768_i128),15332064863658585546731728471925848377_i128,(-115127866626500037816144868533868057720_i128)];
RET = [56421120830767033102899179426472490208_i128,156396763644086905148353833163433439007_i128,102227760746703753852128718197213359656_i128,(-153505344038051382752128902297752056057_i128),(-147278043532366932368549395440209901400_i128),106160731322466956742098833997259119613_i128];
RET = [148855467871053242251366007249067409947_i128,(-97316557370833405799836628907174583014_i128),6040828604384134109098394262710418312_i128,7409776788810328026199397119439774706_i128,124241644763064755320052894181789286732_i128,133962976868301002387601032655240697820_i128];
RET = [(-103881573047316436922850763308953232993_i128),(-159820858479027225179048185446929738787_i128),(-72481955854773396099084085430307157501_i128),(-146422455468444556900504603509156304221_i128),105877161516204830487118166303907182843_i128,43272462119745262201720636743673372722_i128];
_5.fld0 = [_16.0,_14,_14,_4,_4,_4];
_2 = !_3;
_9 = [_16.0,_4,_14,_16.0,_4,_4];
_16.0 = _4 | _14;
_3 = !_2;
_15 = _8 as f32;
_9 = [_4,_16.0,_14,_4,_4,_14];
RET = [(-166398073823114079577882130663753169310_i128),7356832431884482329537347052103687937_i128,104021074409519690998806375950374713439_i128,14740558670586119608118809525028074591_i128,(-18964869404702368608772325886232941434_i128),(-161357194787236005792939916015683406310_i128)];
_6 = !1428731558_u32;
Goto(bb3)
}
bb3 = {
RET = [74112393748118457638258183105222836715_i128,49834800448911393213810795509236631972_i128,68822093854558221010342551956469022689_i128,(-161166179452749945032742358980223990353_i128),142981854779169676669205077141261879094_i128,132349983516938267465707625409589356826_i128];
_5.fld0 = _1;
_15 = 3483_i16 as f32;
_2 = _3;
_13 = [34955_u16,48169_u16,29717_u16,5401_u16,38960_u16];
_15 = 16601_u16 as f32;
_12 = [49675_u16,50928_u16,54437_u16,29922_u16,9646_u16,28171_u16];
_11 = !_8;
RET = [76473758369142092991722871952311015900_i128,90309131727708799196019190006317630978_i128,49493145522600128702205671711881800049_i128,87007325069521795498457726697369343917_i128,57566471831597086767806714007749670524_i128,97378158294798632795946428783917947709_i128];
RET = [147795290663836887085917355534371949997_i128,33514685139975782398037329145341664026_i128,(-107234842683612422750069150592528539108_i128),156620290759164524100771381617689452614_i128,8839716220566342991414378055935696080_i128,(-9359134502418247090465106938809438907_i128)];
_19 = _12;
_5.fld0 = [_16.0,_4,_4,_16.0,_16.0,_16.0];
_13 = [8866_u16,2314_u16,20612_u16,35793_u16,3698_u16];
_21 = [_3,_3,_3];
_21 = [_3,_2,_2];
Goto(bb4)
}
bb4 = {
_21 = [_2,_3,_3];
_21 = [_3,_2,_3];
_20 = [43027_u16,52769_u16,65257_u16,56100_u16,63800_u16];
_8 = _11;
_21 = [_3,_3,_2];
_18 = '\u{efcbf}';
_5 = Adt47 { fld0: _10 };
_13 = [47468_u16,14524_u16,43845_u16,56978_u16,43127_u16];
_17 = !21349_u16;
_12 = [_17,_17,_17,_17,_17,_17];
Goto(bb5)
}
bb5 = {
_3 = _16.0 as i8;
_6 = 339269240_u32;
RET = [(-105972500379192795162412840793777192051_i128),(-94822318671593134956951316033478573592_i128),(-13116887081901979708924745657237224585_i128),147626273270590218054818766300527153593_i128,95914096438492329831715334082007154812_i128,69912452028813087371925666594769306941_i128];
_5.fld0 = [_14,_4,_14,_14,_16.0,_16.0];
_16.0 = _4 >> _2;
_14 = !_16.0;
_9 = _10;
_5.fld0 = _10;
_15 = 188363150569423115945248739013596198223_u128 as f32;
RET = [22309376799011836815686151642254872775_i128,(-82979160759370751293528545116388262776_i128),(-79752891533345585601158628303676464236_i128),(-9108914376706418943847017571857638426_i128),146352057076724576552092111918426329373_i128,(-154561592617465544273554231017010400227_i128)];
_16.0 = false as u64;
RET = [119845162351107221173635360341369371702_i128,(-11075858444629689705090078521044762458_i128),(-45686571151182871765764469531413859569_i128),57703962941993264103345556402839751681_i128,(-155463449625143877561967066340899223991_i128),124700115297144087840739390194524759250_i128];
_12 = [_17,_17,_17,_17,_17,_17];
_8 = -_11;
_17 = 12379_u16 >> _11;
_24 = _17 as i128;
_17 = false as u16;
_20 = [_17,_17,_17,_17,_17];
_9 = [_14,_14,_14,_14,_14,_14];
_2 = _17 as i8;
_26 = [_17,_17,_17,_17,_17,_17];
RET = [_24,_24,_24,_24,_24,_24];
_27 = [9223372036854775807_isize,(-2_isize),(-9223372036854775808_isize)];
Goto(bb6)
}
bb6 = {
_1 = [_14,_14,_14,_4,_14,_14];
_16.0 = !_14;
_2 = -_3;
_24 = !95506921958741507139233516765518096826_i128;
_10 = [_16.0,_16.0,_16.0,_16.0,_14,_14];
_22 = !_6;
_28 = !(-9223372036854775808_isize);
_23 = 4598151100604282812_i64;
_14 = _18 as u64;
_26 = _19;
_27 = [_28,_28,_28];
_13 = _20;
_24 = _11 as i128;
RET = [_24,_24,_24,_24,_24,_24];
_22 = _6;
_10 = [_16.0,_16.0,_16.0,_14,_16.0,_16.0];
_31.1 = [14356978913832363524_usize];
Goto(bb7)
}
bb7 = {
_20 = [_17,_17,_17,_17,_17];
_18 = '\u{479df}';
_14 = _16.0 - _16.0;
_23 = true as i64;
_25 = core::ptr::addr_of_mut!(_22);
_30 = _19;
_4 = _16.0 * _16.0;
_23 = (-5176231685365008717_i64) * (-8888672544463877421_i64);
_14 = _2 as u64;
_8 = _11 | _11;
_22 = !_6;
_30 = [_17,_17,_17,_17,_17,_17];
_9 = [_4,_4,_16.0,_4,_4,_4];
RET = [_24,_24,_24,_24,_24,_24];
_25 = core::ptr::addr_of_mut!((*_25));
_29 = _28 ^ _28;
_31.0 = _16.0;
_13 = [_17,_17,_17,_17,_17];
RET = [_24,_24,_24,_24,_24,_24];
_25 = core::ptr::addr_of_mut!((*_25));
_31.3 = _15 as f64;
_9 = [_16.0,_16.0,_4,_31.0,_4,_31.0];
Call(_31.1 = core::intrinsics::transmute(_4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_35 = _24;
_13 = [_17,_17,_17,_17,_17];
_10 = [_4,_4,_4,_31.0,_4,_16.0];
_24 = _23 as i128;
_18 = '\u{cf539}';
_2 = -_3;
_11 = _8;
_9 = [_4,_31.0,_16.0,_31.0,_4,_4];
_11 = _8 * _8;
_29 = _28;
_29 = !_28;
_13 = [_17,_17,_17,_17,_17];
_21 = [_2,_2,_2];
_29 = _28;
_6 = !_22;
_13 = [_17,_17,_17,_17,_17];
RET = [_35,_24,_35,_35,_24,_24];
_22 = !_6;
_4 = _16.0;
_18 = '\u{668c1}';
_18 = '\u{3c3dc}';
_11 = !_8;
_18 = '\u{f0811}';
_17 = 16288_u16 * 56185_u16;
RET = [_35,_24,_24,_24,_35,_24];
Call(_15 = core::intrinsics::transmute(_18), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_30 = _26;
_6 = !(*_25);
_31.0 = _4;
_31.3 = _17 as f64;
_26 = [_17,_17,_17,_17,_17,_17];
_27 = [_28,_28,_28];
_25 = core::ptr::addr_of_mut!((*_25));
_6 = (*_25);
_31.0 = _4;
_23 = 2450869400745302307_i64 >> _31.0;
_16.0 = _11 as u64;
_24 = -_35;
_13 = [_17,_17,_17,_17,_17];
_8 = _11;
Goto(bb10)
}
bb10 = {
Call(_4 = core::intrinsics::bswap(_31.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_31.3 = _15 as f64;
RET = [_24,_24,_35,_35,_35,_35];
_31.2 = !true;
_25 = core::ptr::addr_of_mut!(_6);
_5.fld0 = [_31.0,_31.0,_4,_31.0,_4,_4];
_9 = _5.fld0;
_40 = _23 as u16;
_31.4 = _18 as i16;
_31.3 = 11835504294632524903_usize as f64;
_17 = !_40;
_1 = [_4,_31.0,_31.0,_31.0,_31.0,_4];
_35 = -_24;
_31.0 = _4 | _14;
_37 = _31.3 as i128;
_18 = '\u{7d68b}';
_1 = [_4,_31.0,_4,_31.0,_14,_4];
_12 = [_40,_17,_40,_40,_17,_17];
_38 = _27;
_40 = !_17;
_17 = _40 * _40;
_18 = '\u{10f255}';
Goto(bb12)
}
bb12 = {
_15 = (*_25) as f32;
_41 = _23 as i16;
_41 = -_31.4;
_31.1 = [7121074017538635722_usize];
_39 = RET;
_3 = 173851513300598161746290322636778648952_u128 as i8;
_10 = _5.fld0;
_5.fld0 = [_16.0,_4,_31.0,_31.0,_31.0,_31.0];
_29 = _35 as isize;
RET = [_37,_37,_24,_37,_37,_24];
_24 = -_37;
_36 = 147_u8;
_24 = _2 as i128;
_3 = -_2;
Goto(bb13)
}
bb13 = {
_6 = _22;
_5.fld0 = [_4,_31.0,_4,_4,_31.0,_14];
_2 = _3;
_33 = _31.2;
_10 = [_4,_4,_14,_31.0,_4,_31.0];
_8 = _11;
_29 = _28;
_39 = [_35,_24,_37,_24,_24,_24];
_32 = _28 + _28;
_18 = '\u{17888}';
_36 = 222_u8;
Goto(bb14)
}
bb14 = {
RET = _39;
_28 = _32 ^ _29;
_30 = [_17,_40,_40,_17,_40,_17];
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(Move(_26), Move(_18), Move(_2), Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(Move(_10), Move(_28), Move(_29), Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(Move(_12), Move(_19), Move(_1), Move(_22)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(Move(_9), Move(_17), Move(_35), Move(_30)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_46 = dump_var(Move(_41), _47, _47, _47), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: bool,mut _2: (f64, [isize; 3], *mut u32, [i128; 6]),mut _3: (f64, [isize; 3], *mut u32, [i128; 6]),mut _4: Adt42,mut _5: (f64, [isize; 3], *mut u32, [i128; 6]),mut _6: bool,mut _7: (f64, [isize; 3], *mut u32, [i128; 6]),mut _8: *mut u32,mut _9: (f64, [isize; 3], *mut u32, [i128; 6]),mut _10: i8,mut _11: *mut u32,mut _12: bool,mut _13: (f64, [isize; 3], *mut u32, [i128; 6])) -> bool {
mir! {
type RET = bool;
let _14: Adt56;
let _15: usize;
let _16: isize;
let _17: ();
let _18: ();
{
_8 = _9.2;
_2.2 = _13.2;
_4.fld0 = !_12;
_13.2 = _9.2;
_7.0 = (-465792112_i32) as f64;
_10 = -_4.fld3;
_4.fld5.0 = -_3.0;
_1 = !_4.fld0;
_2.2 = _11;
_2.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),68_isize];
_7.0 = 159088344694023476242447341162969201858_u128 as f64;
Goto(bb1)
}
bb1 = {
_7.3 = _4.fld5.3;
_4.fld0 = _1;
_2.1 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize)];
_11 = _5.2;
_2 = (_4.fld5.0, _5.1, _8, _4.fld5.3);
_5 = (_13.0, _3.1, _9.2, _2.3);
_9.0 = -_4.fld5.0;
_2.0 = _9.0;
_4.fld5.1 = _3.1;
Call(_3.1 = core::intrinsics::transmute(_2.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_4.fld4 = 4_usize;
_3.1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
RET = _4.fld0;
Goto(bb3)
}
bb3 = {
Call(_17 = dump_var(Move(_1), Move(_6), _18, _18), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: isize,mut _2: (u64, *const bool),mut _3: u128,mut _4: (u64, *const bool),mut _5: [isize; 3],mut _6: [isize; 3]) -> Adt47 {
mir! {
type RET = Adt47;
let _7: [u16; 5];
let _8: isize;
let _9: bool;
let _10: [i128; 6];
let _11: bool;
let _12: *const bool;
let _13: f32;
let _14: u128;
let _15: f64;
let _16: char;
let _17: [usize; 1];
let _18: Adt55;
let _19: i128;
let _20: (f64, [isize; 3], *mut u32, [i128; 6]);
let _21: ();
let _22: ();
{
_4.0 = _2.0 | _2.0;
RET.fld0 = [_4.0,_4.0,_2.0,_4.0,_4.0,_2.0];
_2.0 = (-394928566_i32) as u64;
_6 = _5;
_7 = [64858_u16,16455_u16,57736_u16,14343_u16,48777_u16];
RET.fld0 = [_2.0,_2.0,_4.0,_4.0,_4.0,_4.0];
_2 = (_4.0, _4.1);
_5 = [_1,_1,_1];
_4.1 = _2.1;
_2 = (_4.0, _4.1);
Call(_8 = core::intrinsics::bswap(_1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.fld0 = [_2.0,_4.0,_2.0,_2.0,_2.0,_4.0];
_2 = _4;
_2.0 = !_4.0;
_9 = true;
_10 = [(-63277263051333179498459724732200151310_i128),(-65995491666483572889004537092081270352_i128),(-31963454960941213977160614225117113016_i128),(-101533135973008221939460994689830968950_i128),(-114137904496673385532141550542436195812_i128),(-167677654971390289595560737244281120071_i128)];
_2.1 = core::ptr::addr_of!(_9);
_2.1 = core::ptr::addr_of!(_9);
_6 = [_1,_1,_1];
_10 = [(-44673151460734970702116456330035120539_i128),162020412492282667903405742093095587080_i128,(-133903042252127253883371348663642003194_i128),(-134781631707113167803617558523000321097_i128),(-148497806217807578938094698683668797363_i128),(-57853440502785595686643423373989816003_i128)];
_4.1 = _2.1;
_9 = _3 != _3;
_2.1 = _4.1;
_8 = -_1;
RET.fld0 = [_4.0,_2.0,_2.0,_2.0,_2.0,_2.0];
_12 = core::ptr::addr_of!(_9);
_2.0 = !_4.0;
Call(_3 = core::intrinsics::bswap(279572718786855875234581247775675839820_u128), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = (-49_i8) as isize;
_2.0 = (-2535199475944339629_i64) as u64;
_2.0 = _4.0 * _4.0;
_7 = [60073_u16,10940_u16,24383_u16,42359_u16,57147_u16];
_3 = 138603477436805904495346929946575239833_u128;
_4.0 = _2.0;
_4.0 = _2.0;
RET.fld0 = [_4.0,_2.0,_2.0,_4.0,_4.0,_2.0];
RET.fld0 = [_2.0,_4.0,_2.0,_4.0,_2.0,_2.0];
_13 = (-375550899_i32) as f32;
_14 = _3;
_14 = _3 & _3;
_12 = core::ptr::addr_of!(_9);
_11 = !(*_12);
_14 = _3 << _4.0;
_2.0 = !_4.0;
_4.0 = !_2.0;
_1 = -_8;
_15 = _1 as f64;
_3 = 2594346487_u32 as u128;
_13 = 46119_u16 as f32;
_17 = [5_usize];
_3 = _14 >> _4.0;
Goto(bb3)
}
bb3 = {
Call(_21 = dump_var(Move(_14), Move(_1), Move(_17), Move(_10)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_21 = dump_var(Move(_11), _22, _22, _22), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: isize,mut _2: [i8; 8],mut _3: isize,mut _4: [u16; 5],mut _5: (u64, *const bool),mut _6: (u64, *const bool),mut _7: Adt51,mut _8: Adt47,mut _9: u64,mut _10: [i128; 6],mut _11: [u8; 1],mut _12: (u64, *const bool),mut _13: [u16; 5],mut _14: [i8; 8],mut _15: [i8; 8],mut _16: *const bool) -> [u8; 1] {
mir! {
type RET = [u8; 1];
let _17: Adt43;
let _18: u64;
let _19: f64;
let _20: *const u64;
let _21: Adt54;
let _22: usize;
let _23: i64;
let _24: isize;
let _25: bool;
let _26: isize;
let _27: usize;
let _28: f32;
let _29: char;
let _30: isize;
let _31: isize;
let _32: Adt52;
let _33: u8;
let _34: char;
let _35: f64;
let _36: *mut isize;
let _37: isize;
let _38: i64;
let _39: bool;
let _40: ();
let _41: ();
{
SetDiscriminant(_7, 1);
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).3 = (-1_i8) * (-4_i8);
_14 = [Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3];
place!(Field::<[u64; 6]>(Variant(_7, 1), 2)) = _8.fld0;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).2 = Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3;
_5.1 = _12.1;
Call(RET = core::intrinsics::transmute(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = [(-83116004427352122260917734486641273901_i128),131983140680439130448227548099364984571_i128,101420170212551407422103190538994850674_i128,91074463268836416997884826996488713748_i128,87829414652722976428627886651664909245_i128,(-42183150127351284150532048734004583437_i128)];
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).0 = (-1880164655_i32) >> _3;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).1 = 40770_u16;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).4 = (-45328875934343226845153159617347983161_i128) as f64;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).1 = 2618324199_u32 as u16;
place!(Field::<bool>(Variant(_7, 1), 0)) = true;
_8 = Adt47 { fld0: Field::<[u64; 6]>(Variant(_7, 1), 2) };
place!(Field::<bool>(Variant(_7, 1), 0)) = !false;
_6 = (_12.0, _16);
place!(Field::<[u64; 6]>(Variant(_7, 1), 2)) = [_9,_6.0,_12.0,_9,_12.0,_12.0];
Goto(bb2)
}
bb2 = {
_6.1 = core::ptr::addr_of!(place!(Field::<bool>(Variant(_7, 1), 0)));
_8.fld0 = [_6.0,_6.0,_6.0,_12.0,_9,_9];
place!(Field::<[u16; 6]>(Variant(_7, 1), 3)) = [Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1];
_4 = _13;
_13 = _4;
_4 = _13;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).3 = !Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2;
_25 = Field::<bool>(Variant(_7, 1), 0);
place!(Field::<bool>(Variant(_7, 1), 0)) = !_25;
_19 = -Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).4;
_16 = _12.1;
_9 = _12.0 - _6.0;
_4 = [Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1];
_24 = _3;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).0 = 3275900835_u32 as i32;
place!(Field::<f32>(Variant(_7, 1), 5)) = _9 as f32;
Goto(bb3)
}
bb3 = {
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).3 = Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2 + Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2;
_5 = (_9, _12.1);
Goto(bb4)
}
bb4 = {
_18 = _12.0;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).3 = !Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).0 = (-460406510_i32) ^ (-1730942492_i32);
RET = [120_u8];
_20 = core::ptr::addr_of!(_9);
_22 = 12597682382694365945_usize;
_5.0 = !(*_20);
RET = [226_u8];
_14 = [Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).3];
_5 = ((*_20), _12.1);
_27 = _22 >> _3;
RET = _11;
_12.1 = core::ptr::addr_of!(place!(Field::<bool>(Variant(_7, 1), 0)));
_12 = (_5.0, _6.1);
_12.0 = 23371_i16 as u64;
match _22 {
12597682382694365945 => bb5,
_ => bb2
}
}
bb5 = {
_9 = !_18;
_22 = 126_u8 as usize;
_6.0 = _12.0 & (*_20);
_6.0 = !_9;
place!(Field::<bool>(Variant(_7, 1), 0)) = _25 & _25;
place!(Field::<f32>(Variant(_7, 1), 5)) = _27 as f32;
_15 = _2;
_7 = Adt51::Variant0 { fld0: _8.fld0 };
_3 = (-533310295_i32) as isize;
SetDiscriminant(_7, 1);
_11 = RET;
Goto(bb6)
}
bb6 = {
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).1 = 1354_u16;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).4 = _19;
_20 = core::ptr::addr_of!((*_20));
_31 = _24;
_18 = !_6.0;
_26 = _24 ^ _31;
_25 = _9 > _5.0;
RET = [156_u8];
_20 = core::ptr::addr_of!((*_20));
_29 = '\u{16bf2}';
_22 = 75_i8 as usize;
Call(place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).2 = core::intrinsics::bswap((-27_i8)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Goto(bb8)
}
bb8 = {
place!(Field::<[u16; 6]>(Variant(_7, 1), 3)) = [Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1,Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1];
place!(Field::<[u64; 6]>(Variant(_7, 1), 2)) = [_18,_5.0,(*_20),_18,(*_20),_9];
Call(_23 = core::intrinsics::bswap((-8985181547310748712_i64)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_20 = core::ptr::addr_of!(_9);
Goto(bb10)
}
bb10 = {
_29 = '\u{107bff}';
_13 = _4;
_6 = (_5.0, _12.1);
_31 = -_26;
_2 = _15;
_22 = !_27;
place!(Field::<bool>(Variant(_7, 1), 0)) = !_25;
match Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).1 {
0 => bb5,
1 => bb11,
2 => bb12,
1354 => bb14,
_ => bb13
}
}
bb11 = {
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).3 = Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2 + Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4).2;
_5 = (_9, _12.1);
Goto(bb4)
}
bb12 = {
_9 = !_18;
_22 = 126_u8 as usize;
_6.0 = _12.0 & (*_20);
_6.0 = !_9;
place!(Field::<bool>(Variant(_7, 1), 0)) = _25 & _25;
place!(Field::<f32>(Variant(_7, 1), 5)) = _27 as f32;
_15 = _2;
_7 = Adt51::Variant0 { fld0: _8.fld0 };
_3 = (-533310295_i32) as isize;
SetDiscriminant(_7, 1);
_11 = RET;
Goto(bb6)
}
bb13 = {
Goto(bb8)
}
bb14 = {
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).3 = (-9547_i16) as i8;
_17 = Adt43::Variant2 { fld0: 361952458_i32 };
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).0 = 5232335170240141957_i64 as i32;
place!(Field::<i32>(Variant(_17, 2), 0)) = 114589132952803974773116524391408311532_i128 as i32;
_5.0 = !(*_20);
_9 = _6.0 * _12.0;
place!(Field::<f32>(Variant(_7, 1), 5)) = 3791761004009650286_i64 as f32;
_6.1 = _5.1;
place!(Field::<(i32, u16, i8, i8, f64)>(Variant(_7, 1), 4)).1 = 37493_u16;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(Move(_24), Move(_9), Move(_25), Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(Move(_11), Move(_29), Move(_23), Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(Move(_4), _41, _41, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: i8,mut _2: isize,mut _3: *mut bool,mut _4: bool,mut _5: i8,mut _6: isize,mut _7: isize,mut _8: bool,mut _9: (u64, [usize; 1], bool, f64, i16),mut _10: f64) -> f64 {
mir! {
type RET = f64;
let _11: isize;
let _12: [isize; 3];
let _13: Adt47;
let _14: (i32, u16, i8, i8, f64);
let _15: (f64, [isize; 3], *mut u32, [i128; 6]);
let _16: isize;
let _17: Adt48;
let _18: i32;
let _19: i32;
let _20: char;
let _21: u64;
let _22: char;
let _23: bool;
let _24: [isize; 3];
let _25: *const bool;
let _26: u8;
let _27: isize;
let _28: i128;
let _29: [u16; 6];
let _30: Adt43;
let _31: f64;
let _32: f64;
let _33: ();
let _34: ();
{
_8 = !_9.2;
_4 = !_8;
_9.1 = [11835280711936251560_usize];
RET = -_9.3;
_8 = _4 < _9.2;
_1 = 2266873342_u32 as i8;
_8 = !_4;
_9.1 = [0_usize];
RET = -_10;
_2 = -_6;
_10 = -_9.3;
_6 = !_7;
_5 = _1;
_7 = 134024421_u32 as isize;
_9.0 = !6643058241985403083_u64;
RET = _10;
_12 = [_2,_7,_2];
_9.0 = 10208801515510173349_u64;
_11 = '\u{d0b7f}' as isize;
_1 = _5;
_1 = -_5;
_11 = _7;
_12 = [_2,_7,_11];
_9.3 = 280193201939060718830242217999661072492_u128 as f64;
Goto(bb1)
}
bb1 = {
_3 = core::ptr::addr_of_mut!(_8);
_11 = !_6;
_14 = (1517448107_i32, 62579_u16, _1, _5, _9.3);
_14.0 = 35754377209791941083101658152770767577_i128 as i32;
_3 = core::ptr::addr_of_mut!(_4);
_15.0 = RET;
_6 = _9.4 as isize;
_14.0 = !439313353_i32;
_14.0 = !1257426855_i32;
_1 = _14.3 + _5;
_16 = !_6;
_4 = _8 | _9.2;
_9.1 = [1_usize];
_14.4 = _14.0 as f64;
_9.0 = _10 as u64;
RET = _15.0;
_2 = 1126272252_u32 as isize;
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
Call(RET = core::intrinsics::fmaf64(_15.0, _15.0, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14.2 = _9.4 as i8;
_10 = -RET;
_10 = RET * _15.0;
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
_15.3 = [167975286698765707080777387857703869381_i128,100819102468307022787608568618553888681_i128,7831763065401500604614135926377848083_i128,(-10265848027367803209099821650722010065_i128),(-46705863004157428248979678082650839193_i128),(-37072629456432280930292309788056320151_i128)];
_9.3 = _10 * _10;
_9.0 = !8803057370053335365_u64;
_3 = core::ptr::addr_of_mut!(_4);
_7 = !_16;
_14.0 = (-1778992463_i32) << _11;
_4 = !_8;
_14 = (2122861823_i32, 34381_u16, _1, _1, _15.0);
_14.1 = _14.0 as u16;
_11 = _16 * _2;
_14.0 = 1_usize as i32;
_18 = _14.0 >> _1;
_9.0 = 3784108049831810960_u64;
RET = _14.0 as f64;
_9.4 = (-21599_i16);
_8 = !_9.2;
_1 = -_14.3;
RET = -_15.0;
_14.1 = 35061_u16 | 31650_u16;
_14.1 = !32022_u16;
_9.3 = _14.4 - _14.4;
_14 = (_18, 48975_u16, _5, _1, _9.3);
Goto(bb3)
}
bb3 = {
_14.1 = !36755_u16;
_19 = _18 >> _14.3;
_9.4 = _19 as i16;
_16 = -_6;
_20 = '\u{d6199}';
_14.3 = 2759166973_u32 as i8;
_9.3 = _14.0 as f64;
_14 = (_18, 12295_u16, _1, _1, RET);
_11 = -_7;
_16 = _11 + _6;
_9.1 = [10610737212990572004_usize];
_4 = _9.2;
_14.3 = _14.2 & _1;
_8 = _9.2;
Goto(bb4)
}
bb4 = {
_14.1 = _14.0 as u16;
_9.3 = _9.0 as f64;
_5 = _14.2;
_18 = 115_u8 as i32;
_15.0 = _10 + _14.4;
Call(_11 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_9.2 = _4;
_10 = _15.0;
_1 = (-2516942853769826710_i64) as i8;
_15.0 = RET;
match _9.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
3784108049831810960 => bb9,
_ => bb8
}
}
bb6 = {
_14.1 = _14.0 as u16;
_9.3 = _9.0 as f64;
_5 = _14.2;
_18 = 115_u8 as i32;
_15.0 = _10 + _14.4;
Call(_11 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
_14.1 = !36755_u16;
_19 = _18 >> _14.3;
_9.4 = _19 as i16;
_16 = -_6;
_20 = '\u{d6199}';
_14.3 = 2759166973_u32 as i8;
_9.3 = _14.0 as f64;
_14 = (_18, 12295_u16, _1, _1, RET);
_11 = -_7;
_16 = _11 + _6;
_9.1 = [10610737212990572004_usize];
_4 = _9.2;
_14.3 = _14.2 & _1;
_8 = _9.2;
Goto(bb4)
}
bb8 = {
_3 = core::ptr::addr_of_mut!(_8);
_11 = !_6;
_14 = (1517448107_i32, 62579_u16, _1, _5, _9.3);
_14.0 = 35754377209791941083101658152770767577_i128 as i32;
_3 = core::ptr::addr_of_mut!(_4);
_15.0 = RET;
_6 = _9.4 as isize;
_14.0 = !439313353_i32;
_14.0 = !1257426855_i32;
_1 = _14.3 + _5;
_16 = !_6;
_4 = _8 | _9.2;
_9.1 = [1_usize];
_14.4 = _14.0 as f64;
_9.0 = _10 as u64;
RET = _15.0;
_2 = 1126272252_u32 as isize;
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
Call(RET = core::intrinsics::fmaf64(_15.0, _15.0, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_7 = -_6;
_11 = 4089397828235427651_i64 as isize;
_9.0 = !3276417200210355611_u64;
_14.2 = _5 << _14.0;
_14.0 = _19 + _19;
_9.1 = [12951914100681319480_usize];
_9.1 = [7_usize];
_10 = RET + _9.3;
_15.1 = [_16,_16,_16];
_6 = !_2;
_14 = (_19, 15582_u16, _5, _5, _10);
RET = _14.4 * _10;
_15.0 = _5 as f64;
_15.1 = [_7,_6,_11];
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
_14.4 = RET - RET;
RET = 155647527720720002124998787782557899623_u128 as f64;
_16 = _7;
_9.4 = -(-2942_i16);
_7 = _2 * _2;
_24 = [_11,_6,_16];
Goto(bb10)
}
bb10 = {
_21 = !_9.0;
_12 = [_11,_7,_6];
_9.3 = _14.4 + _14.4;
_15.1 = _12;
_11 = _16;
_9.3 = 3_usize as f64;
_28 = 120816206534524189675390003943373722766_i128 ^ (-14202702221388128428632064174316888361_i128);
match _14.1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
15582 => bb11,
_ => bb6
}
}
bb11 = {
_9.0 = _21;
_20 = '\u{b8a05}';
_29 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_8 = !_9.2;
_18 = -_19;
_19 = !_14.0;
_9.1 = [0_usize];
_22 = _20;
_16 = _7;
_15.3 = [_28,_28,_28,_28,_28,_28];
_10 = _14.4 + _14.4;
_25 = core::ptr::addr_of!(_23);
_15.0 = _14.4;
_23 = !_9.2;
_27 = _2 - _7;
Goto(bb12)
}
bb12 = {
_23 = _9.2;
_21 = 15_u8 as u64;
_19 = _18 >> _6;
_15.0 = _10 * _14.4;
_24 = [_16,_7,_27];
_31 = _18 as f64;
_2 = _27 ^ _16;
_26 = !208_u8;
_15.1 = [_7,_6,_2];
_14.0 = -_18;
_9.0 = 2136803019_u32 as u64;
match _14.1 {
0 => bb6,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
15582 => bb20,
_ => bb19
}
}
bb13 = {
_9.0 = _21;
_20 = '\u{b8a05}';
_29 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_8 = !_9.2;
_18 = -_19;
_19 = !_14.0;
_9.1 = [0_usize];
_22 = _20;
_16 = _7;
_15.3 = [_28,_28,_28,_28,_28,_28];
_10 = _14.4 + _14.4;
_25 = core::ptr::addr_of!(_23);
_15.0 = _14.4;
_23 = !_9.2;
_27 = _2 - _7;
Goto(bb12)
}
bb14 = {
_21 = !_9.0;
_12 = [_11,_7,_6];
_9.3 = _14.4 + _14.4;
_15.1 = _12;
_11 = _16;
_9.3 = 3_usize as f64;
_28 = 120816206534524189675390003943373722766_i128 ^ (-14202702221388128428632064174316888361_i128);
match _14.1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
15582 => bb11,
_ => bb6
}
}
bb15 = {
_7 = -_6;
_11 = 4089397828235427651_i64 as isize;
_9.0 = !3276417200210355611_u64;
_14.2 = _5 << _14.0;
_14.0 = _19 + _19;
_9.1 = [12951914100681319480_usize];
_9.1 = [7_usize];
_10 = RET + _9.3;
_15.1 = [_16,_16,_16];
_6 = !_2;
_14 = (_19, 15582_u16, _5, _5, _10);
RET = _14.4 * _10;
_15.0 = _5 as f64;
_15.1 = [_7,_6,_11];
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
_14.4 = RET - RET;
RET = 155647527720720002124998787782557899623_u128 as f64;
_16 = _7;
_9.4 = -(-2942_i16);
_7 = _2 * _2;
_24 = [_11,_6,_16];
Goto(bb10)
}
bb16 = {
_3 = core::ptr::addr_of_mut!(_8);
_11 = !_6;
_14 = (1517448107_i32, 62579_u16, _1, _5, _9.3);
_14.0 = 35754377209791941083101658152770767577_i128 as i32;
_3 = core::ptr::addr_of_mut!(_4);
_15.0 = RET;
_6 = _9.4 as isize;
_14.0 = !439313353_i32;
_14.0 = !1257426855_i32;
_1 = _14.3 + _5;
_16 = !_6;
_4 = _8 | _9.2;
_9.1 = [1_usize];
_14.4 = _14.0 as f64;
_9.0 = _10 as u64;
RET = _15.0;
_2 = 1126272252_u32 as isize;
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
Call(RET = core::intrinsics::fmaf64(_15.0, _15.0, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb17 = {
_14.1 = _14.0 as u16;
_9.3 = _9.0 as f64;
_5 = _14.2;
_18 = 115_u8 as i32;
_15.0 = _10 + _14.4;
Call(_11 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb18 = {
_3 = core::ptr::addr_of_mut!(_8);
_11 = !_6;
_14 = (1517448107_i32, 62579_u16, _1, _5, _9.3);
_14.0 = 35754377209791941083101658152770767577_i128 as i32;
_3 = core::ptr::addr_of_mut!(_4);
_15.0 = RET;
_6 = _9.4 as isize;
_14.0 = !439313353_i32;
_14.0 = !1257426855_i32;
_1 = _14.3 + _5;
_16 = !_6;
_4 = _8 | _9.2;
_9.1 = [1_usize];
_14.4 = _14.0 as f64;
_9.0 = _10 as u64;
RET = _15.0;
_2 = 1126272252_u32 as isize;
_13.fld0 = [_9.0,_9.0,_9.0,_9.0,_9.0,_9.0];
Call(RET = core::intrinsics::fmaf64(_15.0, _15.0, _15.0), ReturnTo(bb2), UnwindUnreachable())
}
bb19 = {
_9.2 = _4;
_10 = _15.0;
_1 = (-2516942853769826710_i64) as i8;
_15.0 = RET;
match _9.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
3784108049831810960 => bb9,
_ => bb8
}
}
bb20 = {
_18 = _14.0;
Goto(bb21)
}
bb21 = {
Call(_33 = dump_var(Move(_12), Move(_23), Move(_24), Move(_16)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_33 = dump_var(Move(_26), Move(_21), Move(_20), Move(_27)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_33 = dump_var(Move(_18), Move(_29), _34, _34), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(241190013780181446756637853348318553199_u128), std::hint::black_box((-1785535928_i32)), std::hint::black_box(41_isize), std::hint::black_box(113_i8));
                
                unsafe {
                    println!("hash: {}", H.finish());
                }
            
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt42 {
fld0: bool,
fld1: *mut bool,
fld2: f64,
fld3: i8,
fld4: usize,
fld5: (f64, [isize; 3], *mut u32, [i128; 6]),
fld6: u32,
fld7: *const f32,
}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: (f64, [isize; 3], *mut u32, [i128; 6]),
fld1: [u16; 6],
fld2: *const bool,
fld3: i8,
fld4: *mut u32,
fld5: u8,

},
Variant1{
fld0: bool,
fld1: *const u64,
fld2: [i8; 3],
fld3: i8,
fld4: (i32, u16, i8, i8, f64),
fld5: i32,
fld6: Adt42,
fld7: u32,

},
Variant2{
fld0: i32,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt44 {
Variant0{
fld0: [i8; 8],
fld1: i64,
fld2: isize,
fld3: usize,

},
Variant1{
fld0: bool,
fld1: *mut u32,
fld2: [i128; 6],
fld3: [i32; 5],
fld4: *const u64,
fld5: f64,
fld6: *const f32,

},
Variant2{
fld0: f64,
fld1: *const [i8; 3],

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: (u64, *const bool),
fld1: f64,
fld2: [i8; 8],
fld3: *mut isize,
fld4: f32,

},
Variant1{
fld0: *const u64,
fld1: *mut bool,
fld2: [u8; 1],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt46 {
fld0: u64,
fld1: f64,
fld2: u8,
fld3: (i32, u16, i8, i8, f64),
fld4: (u64, [usize; 1], bool, f64, i16),
fld5: [u64; 6],
fld6: *mut *mut u32,
fld7: [i32; 5],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt47 {
fld0: [u64; 6],
}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: [u16; 5],
fld1: Adt46,
fld2: u32,
fld3: Adt47,
fld4: i64,
fld5: (u64, *const bool),

},
Variant1{
fld0: Adt46,
fld1: [i8; 8],
fld2: *mut bool,
fld3: i8,
fld4: *mut [u8; 1],
fld5: *mut *mut u32,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: [u16; 5],
fld1: Adt44,
fld2: isize,
fld3: [i8; 8],
fld4: [i128; 6],

},
Variant1{
fld0: f64,
fld1: [isize; 3],
fld2: Adt42,
fld3: *const bool,
fld4: [usize; 1],
fld5: u64,
fld6: Adt45,
fld7: *const u64,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: f64,
fld1: *mut isize,
fld2: usize,
fld3: i8,
fld4: (u64, *const bool),
fld5: Adt49,

},
Variant1{
fld0: *mut isize,
fld1: (i32, u16, i8, i8, f64),
fld2: isize,
fld3: i64,
fld4: Adt46,

},
Variant2{
fld0: (f64, [isize; 3], *mut u32, [i128; 6]),

},
Variant3{
fld0: Adt44,
fld1: f64,
fld2: Adt45,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [u64; 6],

},
Variant1{
fld0: bool,
fld1: *const f32,
fld2: [u64; 6],
fld3: [u16; 6],
fld4: (i32, u16, i8, i8, f64),
fld5: f32,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: f32,
fld1: *const bool,
fld2: f64,
fld3: *mut [u8; 1],
fld4: [i32; 5],
fld5: i32,

},
Variant1{
fld0: u64,
fld1: Adt43,
fld2: (f64, [isize; 3], *mut u32, [i128; 6]),
fld3: *mut isize,
fld4: Adt49,
fld5: Adt51,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: Adt46,
fld1: *const bool,
fld2: u128,
fld3: f64,
fld4: [i32; 5],

},
Variant1{
fld0: Adt52,
fld1: u64,
fld2: i128,
fld3: *mut isize,
fld4: [i128; 6],
fld5: i32,
fld6: [u16; 6],

},
Variant2{
fld0: [i8; 3],
fld1: char,
fld2: [u8; 1],
fld3: (i32, u16, i8, i8, f64),
fld4: *const f32,
fld5: [usize; 1],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: bool,
fld1: [u16; 5],
fld2: *const u64,
fld3: *mut u32,
fld4: [i32; 5],

},
Variant1{
fld0: *const f32,
fld1: [i8; 8],

},
Variant2{
fld0: [u8; 1],
fld1: Adt51,
fld2: u8,
fld3: [u64; 6],
fld4: (i32, u16, i8, i8, f64),
fld5: u32,

},
Variant3{
fld0: u128,
fld1: u8,
fld2: isize,
fld3: (u64, *const bool),
fld4: *const f32,
fld5: *const bool,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: [usize; 1],
fld1: [i8; 8],

},
Variant1{
fld0: *mut u32,
fld1: (i32, u16, i8, i8, f64),
fld2: isize,
fld3: *mut *mut u32,
fld4: i16,
fld5: usize,

},
Variant2{
fld0: [i8; 8],
fld1: [u16; 6],
fld2: Adt53,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: [i8; 3],
fld1: [isize; 3],
fld2: usize,
fld3: *const u64,
fld4: i16,
fld5: Adt45,
fld6: u16,

},
Variant1{
fld0: [i8; 8],
fld1: u8,
fld2: [usize; 1],
fld3: Adt51,
fld4: Adt50,
fld5: f64,
fld6: *mut [u8; 1],

},
Variant2{
fld0: Adt47,
fld1: char,
fld2: Adt43,
fld3: [u8; 1],
fld4: i16,
fld5: *mut [u8; 1],

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: u64,
fld1: Adt43,
fld2: Adt46,

},
Variant1{
fld0: u128,
fld1: Adt50,
fld2: isize,
fld3: Adt49,
fld4: [i8; 3],
fld5: Adt44,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: *const u64,
fld1: [i128; 6],
fld2: [isize; 3],
fld3: *mut u32,
fld4: *mut [u8; 1],
fld5: f64,
fld6: Adt55,

},
Variant1{
fld0: Adt52,
fld1: *mut isize,
fld2: f32,
fld3: (u64, *const bool),

},
Variant2{
fld0: [isize; 3],
fld1: [i32; 5],
fld2: Adt46,
fld3: i8,

},
Variant3{
fld0: f32,

}}

