#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: u128,mut _4: i8,mut _5: u64,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16) -> u32 {
mir! {
type RET = u32;
let _12: [i64; 4];
let _13: *const f32;
let _14: char;
let _15: *const *const u32;
let _16: isize;
let _17: i128;
let _18: (u8,);
let _19: i32;
let _20: (u8,);
let _21: char;
let _22: isize;
let _23: u64;
let _24: Adt42;
let _25: [i16; 3];
let _26: (u8,);
let _27: [i64; 4];
let _28: Adt54;
let _29: usize;
let _30: (*const u16, ([i64; 4],));
let _31: u16;
let _32: *const &'static i16;
let _33: [i64; 3];
let _34: i8;
let _35: i32;
let _36: *mut (u8,);
let _37: [usize; 6];
let _38: (u8,);
let _39: f32;
let _40: char;
let _41: char;
let _42: u8;
let _43: (u8,);
let _44: ();
let _45: ();
{
_9 = 10801189270671968442_usize;
_3 = 122817225001508749327520683462984058655_u128;
_4 = 111_i8;
_3 = 564227312123850799330807670457468403_u128 ^ 56398485291310459005472619674213358674_u128;
_8 = _9 as i128;
_5 = !7171049678689889291_u64;
_12 = [52635670939659363_i64,(-8780337494477478722_i64),(-5003808503217881592_i64),9109412000891365346_i64];
_7 = !8144907516009213516_i64;
_1 = _4 >= _4;
_4 = 56_u8 as i8;
_3 = !76345970716854361624010505809215572552_u128;
RET = 1175697964_u32 << _4;
Goto(bb1)
}
bb1 = {
_4 = _1 as i8;
_4 = (-100_i8) | (-85_i8);
RET = !44695193_u32;
_6 = _9 as i32;
_5 = !1172060887767589280_u64;
_1 = true;
Goto(bb2)
}
bb2 = {
_5 = 2349479021393189480_u64 | 12884887074142210504_u64;
_4 = !91_i8;
_11 = _3 as u16;
_3 = !301175906691121374357419982419807402341_u128;
_16 = -9223372036854775807_isize;
_16 = -(-9223372036854775808_isize);
_9 = !6_usize;
_6 = 1140473166_i32 - 61192690_i32;
_14 = '\u{998c3}';
_3 = 300063103704352055941476294629840947466_u128;
_16 = _1 as isize;
_9 = 954371574799776648_usize + 2253121572341435662_usize;
RET = _16 as u32;
_5 = _11 as u64;
_10 = !232_u8;
_11 = 58671_u16;
_3 = 295889102785926616624789178362714217207_u128;
RET = !1215284339_u32;
_1 = !true;
_5 = 15092055023551762816_u64 << _3;
_2 = _14;
_10 = _5 as u8;
_12 = [_7,_7,_7,_7];
RET = 1429930167_u32;
_3 = (-5433_i16) as u128;
_5 = 4932932385725495432_u64;
_4 = 75_i8;
Goto(bb3)
}
bb3 = {
_5 = !16513594029081585318_u64;
_17 = _3 as i128;
_8 = _17 ^ _17;
_10 = 18172_i16 as u8;
RET = 3846679193_u32 | 1546221581_u32;
_8 = !_17;
_6 = -(-1544827304_i32);
_1 = false;
_20.0 = _16 as u8;
_18 = (_10,);
_18.0 = _20.0;
_8 = _17 >> RET;
RET = 1607920362_u32 << _8;
_11 = !18125_u16;
_4 = 2353_i16 as i8;
_2 = _14;
Call(_4 = core::intrinsics::transmute(_20.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = _17 & _17;
_23 = !_5;
_9 = 3_usize - 0_usize;
_5 = _23;
RET = 3168848205_u32;
_20.0 = _6 as u8;
_14 = _2;
match RET {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
3168848205 => bb8,
_ => bb7
}
}
bb5 = {
_5 = !16513594029081585318_u64;
_17 = _3 as i128;
_8 = _17 ^ _17;
_10 = 18172_i16 as u8;
RET = 3846679193_u32 | 1546221581_u32;
_8 = !_17;
_6 = -(-1544827304_i32);
_1 = false;
_20.0 = _16 as u8;
_18 = (_10,);
_18.0 = _20.0;
_8 = _17 >> RET;
RET = 1607920362_u32 << _8;
_11 = !18125_u16;
_4 = 2353_i16 as i8;
_2 = _14;
Call(_4 = core::intrinsics::transmute(_20.0), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_5 = 2349479021393189480_u64 | 12884887074142210504_u64;
_4 = !91_i8;
_11 = _3 as u16;
_3 = !301175906691121374357419982419807402341_u128;
_16 = -9223372036854775807_isize;
_16 = -(-9223372036854775808_isize);
_9 = !6_usize;
_6 = 1140473166_i32 - 61192690_i32;
_14 = '\u{998c3}';
_3 = 300063103704352055941476294629840947466_u128;
_16 = _1 as isize;
_9 = 954371574799776648_usize + 2253121572341435662_usize;
RET = _16 as u32;
_5 = _11 as u64;
_10 = !232_u8;
_11 = 58671_u16;
_3 = 295889102785926616624789178362714217207_u128;
RET = !1215284339_u32;
_1 = !true;
_5 = 15092055023551762816_u64 << _3;
_2 = _14;
_10 = _5 as u8;
_12 = [_7,_7,_7,_7];
RET = 1429930167_u32;
_3 = (-5433_i16) as u128;
_5 = 4932932385725495432_u64;
_4 = 75_i8;
Goto(bb3)
}
bb7 = {
_4 = _1 as i8;
_4 = (-100_i8) | (-85_i8);
RET = !44695193_u32;
_6 = _9 as i32;
_5 = !1172060887767589280_u64;
_1 = true;
Goto(bb2)
}
bb8 = {
_7 = !(-6026299324571478284_i64);
_2 = _14;
_17 = _8;
_19 = -_6;
_9 = !4443673273440436190_usize;
Goto(bb9)
}
bb9 = {
_24.fld4 = -2815_i16;
_18 = (_10,);
_7 = -(-2041619354474348329_i64);
_18 = (_10,);
_23 = _5 & _5;
_24.fld5 = [_7,_7,_7];
_24.fld2 = _16 >> _24.fld4;
_24.fld5 = [_7,_7,_7];
RET = _16 as u32;
_25 = [_24.fld4,_24.fld4,_24.fld4];
_2 = _14;
Goto(bb10)
}
bb10 = {
_26 = _20;
_20.0 = !_10;
_14 = _2;
_22 = _24.fld2 >> _8;
_12 = [_7,_7,_7,_7];
_24.fld3 = _3 & _3;
_20 = (_26.0,);
Call(_8 = fn1(_23, _2, _19, _19), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_16 = _14 as isize;
_5 = _6 as u64;
_24.fld0 = [_8,_17];
RET = 3317136627_u32 >> _7;
_26 = _18;
_5 = !_23;
_11 = 32372_u16 << _24.fld4;
_24.fld5 = [_7,_7,_7];
_17 = -_8;
_25 = [_24.fld4,_24.fld4,_24.fld4];
_18.0 = !_26.0;
_11 = 35577_u16 & 31294_u16;
_2 = _14;
_24.fld2 = _22 & _22;
_12 = [_7,_7,_7,_7];
_14 = _2;
_25 = [_24.fld4,_24.fld4,_24.fld4];
_23 = !_5;
_28.fld2 = core::ptr::addr_of!(_11);
_27 = [_7,_7,_7,_7];
_24.fld3 = _3;
Goto(bb12)
}
bb12 = {
_11 = 61889_u16;
_29 = !_9;
_11 = 8407_u16;
_9 = !_29;
_28.fld0 = _24.fld2 == _24.fld2;
_28.fld4 = _8 as u64;
_30.1 = (_27,);
_7 = -(-4604500306220445050_i64);
_28.fld1 = _25;
RET = 3964135232_u32;
Goto(bb13)
}
bb13 = {
_2 = _14;
Goto(bb14)
}
bb14 = {
_22 = _9 as isize;
_24.fld5 = [_7,_7,_7];
_19 = _6;
_31 = _24.fld3 as u16;
_27 = [_7,_7,_7,_7];
_28.fld4 = RET as u64;
_38 = _18;
_37 = [_29,_9,_29,_29,_9,_29];
_7 = (-8659261773460725425_i64);
_28.fld1 = _25;
_29 = _9;
_34 = _24.fld2 as i8;
_28.fld1 = [_24.fld4,_24.fld4,_24.fld4];
_36 = core::ptr::addr_of_mut!(_26);
_27 = [_7,_7,_7,_7];
_38.0 = _18.0 >> _24.fld2;
_39 = _7 as f32;
_40 = _2;
_1 = !_28.fld0;
_28.fld4 = !_5;
_28.fld0 = _1;
_12 = _30.1.0;
_39 = _4 as f32;
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(0_usize, 14_usize, Move(_14), 17_usize, Move(_17), 7_usize, Move(_7), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(0_usize, 11_usize, Move(_11), 2_usize, Move(_2), 10_usize, Move(_10), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(0_usize, 20_usize, Move(_20), 40_usize, Move(_40), 19_usize, Move(_19), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(0_usize, 3_usize, Move(_3), 37_usize, Move(_37), 45_usize, _45, 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u64,mut _2: char,mut _3: i32,mut _4: i32) -> i128 {
mir! {
type RET = i128;
let _5: [usize; 1];
let _6: [usize; 1];
let _7: ([i64; 4],);
let _8: [i64; 4];
let _9: u128;
let _10: [usize; 1];
let _11: [i64; 4];
let _12: [i128; 2];
let _13: bool;
let _14: [usize; 6];
let _15: [i64; 3];
let _16: isize;
let _17: ();
let _18: ();
{
RET = 67_i8 as i128;
_2 = '\u{419d3}';
RET = 119865979582889740546684611662944674143_i128;
_4 = 182_u8 as i32;
RET = (-111140788146812369294069596589486338622_i128);
_4 = 6939649176203967135_i64 as i32;
_1 = !1446920802868295822_u64;
_1 = 1847611649936473646_i64 as u64;
RET = 89794635789406437819034421332486298654_i128;
_3 = 3384371709_u32 as i32;
_5 = [2922444350083230040_usize];
_4 = _3;
_4 = _3;
_5 = [1_usize];
_2 = '\u{c01ca}';
_1 = 13041471978886646899_u64;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
89794635789406437819034421332486298654 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_3 = 10543778930884266111201494132198089910_u128 as i32;
_4 = _3 * _3;
RET = (-30234973494550004452978685668195602753_i128) & 152212991934341570213159580655399484277_i128;
_3 = 110_i8 as i32;
Call(_4 = fn2(_1, _2, _3, RET, RET, _3, RET, _5, _3, _2, _3, _2, _5, _1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6 = [4_usize];
_2 = '\u{a865b}';
_9 = 245235853292882641499066470806530014103_u128;
_5 = [4106286732651233687_usize];
_8 = [3866741483853535118_i64,(-6958163587601922496_i64),(-131253312026695017_i64),(-3808161659067562392_i64)];
match _9 {
245235853292882641499066470806530014103 => bb9,
_ => bb1
}
}
bb9 = {
_7 = (_8,);
_7.0 = [(-5292423364945735032_i64),(-3957420788574608378_i64),8717523890594074132_i64,(-1684294516725822331_i64)];
_8 = [95604758780313115_i64,(-8567906652447476502_i64),(-7583698564932167951_i64),(-862285996738702348_i64)];
_2 = '\u{8c684}';
_4 = _2 as i32;
_2 = '\u{35d56}';
_6 = [3_usize];
_5 = _6;
_7 = (_8,);
_3 = 32245_u16 as i32;
_1 = 8091351802243335853_u64;
_4 = _3 * _3;
RET = 18871093560480307079743124333949278005_i128;
_9 = 146_u8 as u128;
RET = (-151581996214136013091265278083966239014_i128) | 87617672764073893474426585017882507040_i128;
_6 = _5;
_8 = [(-2800313339113688725_i64),(-1710914026802901642_i64),3226750525408864684_i64,(-307008336949499047_i64)];
_10 = [14922007402730686800_usize];
_6 = [1_usize];
_10 = [15912162243469139538_usize];
_3 = 126_u8 as i32;
_11 = [266244449385760327_i64,4512442334488984133_i64,(-7956189783895695247_i64),(-1440688065649330914_i64)];
_10 = _5;
_12 = [RET,RET];
_1 = !17499505073756719528_u64;
_7.0 = [4118321661737349158_i64,(-7507398998811233083_i64),(-3164500162979590593_i64),3222292738944695254_i64];
_6 = [18259036550854384293_usize];
_9 = 125842855288967223131059704647450197271_u128;
match _9 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb11,
6 => bb12,
125842855288967223131059704647450197271 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
_3 = 10543778930884266111201494132198089910_u128 as i32;
_4 = _3 * _3;
RET = (-30234973494550004452978685668195602753_i128) & 152212991934341570213159580655399484277_i128;
_3 = 110_i8 as i32;
Call(_4 = fn2(_1, _2, _3, RET, RET, _3, RET, _5, _3, _2, _3, _2, _5, _1), ReturnTo(bb8), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_11 = [3226973652581753033_i64,4899078157471616077_i64,5614979504995397815_i64,3772576506978599236_i64];
_1 = RET as u64;
RET = -106618270910790594073076012451138942375_i128;
RET = 129029895135963096844585440358813266240_i128 | (-38535221019743924527050253926007159225_i128);
_6 = [4_usize];
_12 = [RET,RET];
RET = !(-5484194107068745023295593391993057063_i128);
_7.0 = _11;
_11 = [1563376672775598115_i64,1898563427078489388_i64,(-4902954641182767999_i64),1516359405911637777_i64];
RET = _3 as i128;
_11 = [(-7808013770951212966_i64),1626555476883082494_i64,3830514189233546457_i64,9109225123662569946_i64];
_3 = 29_u8 as i32;
_6 = [11048693713403307268_usize];
_13 = RET <= RET;
_1 = 388795839_u32 as u64;
_9 = _13 as u128;
_7.0 = [2590973998391123301_i64,4530396863189545027_i64,3891190724467641911_i64,(-3394311218246489918_i64)];
_7.0 = [6845079859243170347_i64,6640098444437888421_i64,(-617564139163637579_i64),8203582322891299616_i64];
RET = (-11_i8) as i128;
_1 = _13 as u64;
_10 = _5;
_7 = (_8,);
Goto(bb15)
}
bb15 = {
Call(_17 = dump_var(1_usize, 5_usize, Move(_5), 1_usize, Move(_1), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_17 = dump_var(1_usize, 12_usize, Move(_12), 11_usize, Move(_11), 18_usize, _18, 18_usize, _18), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u64,mut _2: char,mut _3: i32,mut _4: i128,mut _5: i128,mut _6: i32,mut _7: i128,mut _8: [usize; 1],mut _9: i32,mut _10: char,mut _11: i32,mut _12: char,mut _13: [usize; 1],mut _14: u64) -> i32 {
mir! {
type RET = i32;
let _15: char;
let _16: [i64; 3];
let _17: [i64; 4];
let _18: &'static i16;
let _19: isize;
let _20: (f32, &'static i16, char, isize, char, (u8,));
let _21: isize;
let _22: isize;
let _23: (u8,);
let _24: bool;
let _25: *const u16;
let _26: u128;
let _27: f64;
let _28: Adt54;
let _29: u8;
let _30: isize;
let _31: Adt52;
let _32: [usize; 1];
let _33: [usize; 1];
let _34: [i64; 4];
let _35: isize;
let _36: Adt50;
let _37: u32;
let _38: [i64; 3];
let _39: isize;
let _40: ();
let _41: ();
{
_6 = 118_i8 as i32;
_14 = _1 << _5;
_6 = _9;
_1 = _14 >> _7;
RET = 307803703742704915767366661411631656954_u128 as i32;
_2 = _10;
_17 = [532827192234899304_i64,(-1679338440597522465_i64),(-2244939781154927985_i64),(-6326634283498912568_i64)];
_7 = _5;
RET = -_6;
Call(_4 = fn3(_17, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_15 = _10;
_4 = _7;
_17 = [3845396916485608982_i64,(-2827426338580550267_i64),(-6488542078390025992_i64),5859011721699246389_i64];
_2 = _12;
_20.2 = _12;
_16 = [(-4603680869533606463_i64),(-5326779071838059588_i64),(-6965498048356019227_i64)];
_20.0 = 232074162500159251836747057015413105870_u128 as f32;
_1 = _14 ^ _14;
_20.2 = _12;
_8 = [433134506104787867_usize];
_20.0 = _1 as f32;
_7 = _5;
_15 = _2;
_12 = _20.2;
_20.4 = _15;
_14 = _1;
_16 = [(-4829618000481730838_i64),(-4089280726279649_i64),2555356546268488132_i64];
_15 = _2;
_2 = _12;
_20.5 = (24_u8,);
_20.3 = (-95_isize);
_17 = [7496678093187577747_i64,(-5897511202415392290_i64),7197208203351811765_i64,(-3086539720968791839_i64)];
_23.0 = !_20.5.0;
_2 = _20.4;
Goto(bb2)
}
bb2 = {
_20.4 = _10;
_3 = _9 + _9;
_1 = _14 - _14;
_23.0 = _20.4 as u8;
_15 = _2;
_21 = _20.3;
_10 = _12;
_7 = _4 + _4;
_21 = _20.3;
_7 = _4 | _4;
_20.2 = _10;
_24 = true | false;
_26 = _15 as u128;
_24 = !true;
_23 = _20.5;
RET = (-110_i8) as i32;
RET = !_3;
_22 = _21;
_26 = 26051_u16 as u128;
Call(_14 = core::intrinsics::transmute(_1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = _15;
_28.fld4 = 3836438196662486166_usize as u64;
_20.5.0 = 32707_u16 as u8;
_28.fld0 = _24;
_22 = !_20.3;
match _23.0 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
24 => bb10,
_ => bb9
}
}
bb4 = {
_20.4 = _10;
_3 = _9 + _9;
_1 = _14 - _14;
_23.0 = _20.4 as u8;
_15 = _2;
_21 = _20.3;
_10 = _12;
_7 = _4 + _4;
_21 = _20.3;
_7 = _4 | _4;
_20.2 = _10;
_24 = true | false;
_26 = _15 as u128;
_24 = !true;
_23 = _20.5;
RET = (-110_i8) as i32;
RET = !_3;
_22 = _21;
_26 = 26051_u16 as u128;
Call(_14 = core::intrinsics::transmute(_1), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_15 = _10;
_4 = _7;
_17 = [3845396916485608982_i64,(-2827426338580550267_i64),(-6488542078390025992_i64),5859011721699246389_i64];
_2 = _12;
_20.2 = _12;
_16 = [(-4603680869533606463_i64),(-5326779071838059588_i64),(-6965498048356019227_i64)];
_20.0 = 232074162500159251836747057015413105870_u128 as f32;
_1 = _14 ^ _14;
_20.2 = _12;
_8 = [433134506104787867_usize];
_20.0 = _1 as f32;
_7 = _5;
_15 = _2;
_12 = _20.2;
_20.4 = _15;
_14 = _1;
_16 = [(-4829618000481730838_i64),(-4089280726279649_i64),2555356546268488132_i64];
_15 = _2;
_2 = _12;
_20.5 = (24_u8,);
_20.3 = (-95_isize);
_17 = [7496678093187577747_i64,(-5897511202415392290_i64),7197208203351811765_i64,(-3086539720968791839_i64)];
_23.0 = !_20.5.0;
_2 = _20.4;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_28.fld5 = 25618_u16 as f64;
_20.2 = _2;
_31.fld3 = 3841135812_u32 as f64;
_17 = [5393555832986471748_i64,(-662710431128441487_i64),(-7463124459132435504_i64),(-3213956981241557432_i64)];
_31.fld1.0 = _20.5.0 - _20.5.0;
_31.fld0 = [_4,_7];
_14 = _31.fld3 as u64;
_20.4 = _10;
_31.fld2 = _21 + _22;
_31.fld1.0 = _23.0 ^ _23.0;
_1 = _28.fld4 & _28.fld4;
_31.fld2 = 3325419496_u32 as isize;
_16 = [3404512570534128514_i64,7525091038950987465_i64,299638315142835693_i64];
_28.fld1 = [(-28708_i16),(-6769_i16),(-24499_i16)];
_15 = _20.4;
_31.fld1.0 = !_20.5.0;
match _23.0 {
0 => bb5,
1 => bb2,
24 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_4 = _7;
_1 = _28.fld4;
_20.5 = (_31.fld1.0,);
_31.fld3 = _28.fld5;
_5 = _1 as i128;
_22 = _21;
_20.3 = _21;
_20.0 = _31.fld3 as f32;
_10 = _12;
_23 = (_20.5.0,);
Call(_12 = fn18(_7, _17, _22, _20.4, _9, _4, _7), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_34 = [(-5796362723306087082_i64),(-5506757563586257859_i64),41839018980424893_i64,1217040952900514303_i64];
_35 = _22 ^ _31.fld2;
_9 = -RET;
_11 = _6 + _6;
_22 = -_20.3;
_31.fld6 = [12416_i16,13002_i16,(-21777_i16)];
_37 = 1500860383_u32 & 2866762252_u32;
Goto(bb14)
}
bb14 = {
_31.fld3 = _28.fld5 - _28.fld5;
_9 = _6 ^ _11;
_8 = [6_usize];
_31.fld1 = _20.5;
_31.fld1 = _23;
_21 = -_31.fld2;
_21 = _14 as isize;
_20.3 = _22;
_28.fld4 = _1;
_22 = (-8111470039263198568_i64) as isize;
_7 = -_4;
_20.4 = _2;
_20.4 = _15;
_30 = !_20.3;
_30 = _20.0 as isize;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(2_usize, 7_usize, Move(_7), 2_usize, Move(_2), 30_usize, Move(_30), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(2_usize, 1_usize, Move(_1), 24_usize, Move(_24), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(2_usize, 12_usize, Move(_12), 22_usize, Move(_22), 37_usize, Move(_37), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(2_usize, 26_usize, Move(_26), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i64; 4],mut _2: [usize; 1]) -> i128 {
mir! {
type RET = i128;
let _3: [i128; 2];
let _4: char;
let _5: f32;
let _6: u128;
let _7: isize;
let _8: u16;
let _9: Adt41;
let _10: [usize; 1];
let _11: usize;
let _12: char;
let _13: bool;
let _14: Adt46;
let _15: (u8,);
let _16: ();
let _17: ();
{
RET = 79981332460292715793360707872631674810_i128;
_1 = [(-3536188500774829463_i64),(-7232572607680765186_i64),8869142910018010039_i64,(-6268915511510638098_i64)];
RET = (-59918594968712209661664210216470752399_i128);
_1 = [(-7885652715107119716_i64),(-988716043375658602_i64),3583956707942475763_i64,(-6454034107343396446_i64)];
RET = -30051587773835800737573537126041479247_i128;
RET = !(-71434076778578014992768158508840937978_i128);
_1 = [(-8605843897855369324_i64),4841053314214651749_i64,(-6186465080748672670_i64),960406960859674005_i64];
_3 = [RET,RET];
RET = -108699891504121139855413200419466358152_i128;
RET = 6022736564434619408177200624546398934_i128 | (-17912363370858935102591709775098345917_i128);
_3 = [RET,RET];
RET = -44315197783213220596675917808136006297_i128;
_3 = [RET,RET];
RET = !(-58921312007052390898324560683977854915_i128);
RET = 10521401395656145704248322787515261232_i128;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
10521401395656145704248322787515261232 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = 144872500266210101595302476447669118729_i128;
_2 = [7_usize];
RET = 36233873704747947850282809577505228665_i128 * (-137001117605333772212096588798845482211_i128);
RET = 151831666057077577555442083204117454637_i128;
_1 = [6111989347655856275_i64,1621581861869466594_i64,5731955627929161014_i64,2734124150313002384_i64];
_3 = [RET,RET];
_3 = [RET,RET];
RET = -156782300968122893245631804951229273069_i128;
_3 = [RET,RET];
_4 = '\u{3c363}';
RET = !32957835105582795321939681751806446916_i128;
_5 = 24141_i16 as f32;
RET = !(-121767810446549313411514790027099273904_i128);
_2 = [3_usize];
_1 = [(-3684432728121979240_i64),2945709044641406_i64,(-6996355158345893533_i64),8668742915078015011_i64];
_5 = 61412_u16 as f32;
_2 = [4112746781365577212_usize];
_3 = [RET,RET];
_2 = [7465229259022324987_usize];
_2 = [3_usize];
RET = 29151454779990988121093299176154704630_i128 * (-124531506430817669064569955777058612034_i128);
RET = (-43295505442590919481873044716599651346_i128) - 54090574843732105594893565566647276800_i128;
Call(_1 = fn4(_4, _5, RET, _4, RET, _3, _4, _5, _4), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_3 = [RET,RET];
_1 = [(-8714590262829431882_i64),(-1124124373090947419_i64),(-3204356211704997223_i64),8352333141435975887_i64];
_6 = 292190803942957790477910451830530312972_u128;
RET = (-50742027104856796372013905765876659034_i128) - (-57008173575075704048505351231810881484_i128);
_2 = [5569784989126089742_usize];
_4 = '\u{55b76}';
_6 = 317601694707198646312368078237305492819_u128;
_4 = '\u{a06f1}';
RET = _5 as i128;
_1 = [(-490737598429686179_i64),(-2863225082811851434_i64),(-4326058120853563612_i64),(-1623342915311419193_i64)];
_7 = -(-125_isize);
_6 = _4 as u128;
Call(_1 = core::intrinsics::transmute(_3), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_2 = [14298292971819416578_usize];
Goto(bb10)
}
bb10 = {
RET = 121049405319061299579988262319271829213_i128 - 65663455630239926190125335760681977179_i128;
_6 = !162729588615631663219682006106730878531_u128;
_8 = 8565_u16;
_2 = [5513787355237443501_usize];
_4 = '\u{ab228}';
_8 = 37039_u16;
_5 = 10881_i16 as f32;
_10 = [6_usize];
_2 = [14681876502053099106_usize];
_10 = _2;
_6 = !209353153206452036601008392836299711117_u128;
RET = !(-56636648977945626498271223947135393271_i128);
_2 = [1_usize];
_7 = !(-9223372036854775808_isize);
_3 = [RET,RET];
match _8 {
0 => bb7,
1 => bb11,
2 => bb12,
37039 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
_3 = [RET,RET];
_1 = [(-8714590262829431882_i64),(-1124124373090947419_i64),(-3204356211704997223_i64),8352333141435975887_i64];
_6 = 292190803942957790477910451830530312972_u128;
RET = (-50742027104856796372013905765876659034_i128) - (-57008173575075704048505351231810881484_i128);
_2 = [5569784989126089742_usize];
_4 = '\u{55b76}';
_6 = 317601694707198646312368078237305492819_u128;
_4 = '\u{a06f1}';
RET = _5 as i128;
_1 = [(-490737598429686179_i64),(-2863225082811851434_i64),(-4326058120853563612_i64),(-1623342915311419193_i64)];
_7 = -(-125_isize);
_6 = _4 as u128;
Call(_1 = core::intrinsics::transmute(_3), ReturnTo(bb9), UnwindUnreachable())
}
bb13 = {
Return()
}
bb14 = {
_10 = [1_usize];
_8 = 53718_u16 ^ 26061_u16;
_6 = !212373602917380697992110579166461051182_u128;
_5 = 15837_i16 as f32;
_12 = _4;
_7 = 72_i8 as isize;
_4 = _12;
_5 = _6 as f32;
_13 = !false;
_6 = 198513392720080905922482312144724601062_u128;
_15.0 = !176_u8;
_15 = (200_u8,);
_11 = 2630224866751074587_usize & 7489530428988038552_usize;
_2 = [_11];
_15.0 = 9644467484043219257_u64 as u8;
RET = !119303763185537706848355923103665775329_i128;
_7 = -(-96_isize);
_5 = _7 as f32;
Goto(bb15)
}
bb15 = {
Call(_16 = dump_var(3_usize, 3_usize, Move(_3), 4_usize, Move(_4), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_16 = dump_var(3_usize, 15_usize, Move(_15), 10_usize, Move(_10), 17_usize, _17, 17_usize, _17), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: char,mut _2: f32,mut _3: i128,mut _4: char,mut _5: i128,mut _6: [i128; 2],mut _7: char,mut _8: f32,mut _9: char) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _10: [usize; 6];
let _11: isize;
let _12: [usize; 6];
let _13: f32;
let _14: u16;
let _15: char;
let _16: u32;
let _17: [i128; 2];
let _18: bool;
let _19: f64;
let _20: f64;
let _21: u128;
let _22: [i64; 3];
let _23: [usize; 6];
let _24: Adt49;
let _25: u16;
let _26: *const f32;
let _27: [usize; 1];
let _28: isize;
let _29: [i16; 3];
let _30: (u8,);
let _31: i64;
let _32: [i64; 3];
let _33: ();
let _34: ();
{
RET = [(-2028857236129255451_i64),5178609674327400235_i64,(-2820756131378404011_i64),(-3011343963536013254_i64)];
_6 = [_3,_3];
_8 = _2;
_3 = _5 ^ _5;
RET = [8649808034913911709_i64,(-5133999469459276510_i64),(-2770887230124354477_i64),8219406705087984925_i64];
_7 = _4;
RET = [1409709298045462318_i64,4635708669698870464_i64,(-8053010246193424813_i64),2450751550232383607_i64];
_4 = _7;
RET = [(-3444859354492887898_i64),(-6755448270446754433_i64),7520741035940392909_i64,(-7637294652113405830_i64)];
_7 = _1;
_11 = 133_u8 as isize;
_2 = 11596368449029391724_u64 as f32;
_1 = _9;
_2 = _8 + _8;
Call(_3 = fn5(_11, _7, _7, RET, _5, _1, _6, _6, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_10 = [2_usize,8024145730881197716_usize,8532714159691049837_usize,11218101444447722288_usize,5_usize,0_usize];
RET = [8396062602314713634_i64,(-5303942648474222062_i64),973672871702160615_i64,(-1755300469712049537_i64)];
_5 = _3 | _3;
_12 = [3_usize,12644013104121825034_usize,0_usize,4_usize,1_usize,16310478974111857608_usize];
_4 = _1;
_9 = _7;
_7 = _9;
_1 = _9;
RET = [(-7159214827009551182_i64),(-6846571188649410123_i64),(-1526276408273148757_i64),1033599662288132471_i64];
_7 = _4;
_4 = _7;
_15 = _4;
RET = [5765162520754833346_i64,(-1556752632344384813_i64),8148634917979650242_i64,6529241729068720584_i64];
Goto(bb2)
}
bb2 = {
_15 = _4;
Goto(bb3)
}
bb3 = {
_9 = _1;
_18 = _8 != _2;
Call(_14 = fn7(_2, _4, _10, _15, _12, _18, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_9 = _7;
_16 = 3313460787_u32 >> _5;
_8 = 108_i8 as f32;
RET = [(-3125049975851736436_i64),8221425652036954731_i64,(-5233230646589056549_i64),7120212602017209775_i64];
_20 = 30468_i16 as f64;
_16 = _4 as u32;
_17 = [_3,_5];
_17 = [_3,_5];
RET = [(-4292410917263364255_i64),(-1048346417308597855_i64),4637125411945867553_i64,(-534130219854585270_i64)];
_10 = [7_usize,6574125402930424656_usize,6_usize,3215226667759808675_usize,9814065824290424930_usize,17533884039550596442_usize];
_11 = (-9223372036854775808_isize);
_13 = _8;
_7 = _1;
_4 = _7;
_16 = 1341889923_u32;
_22 = [6220776611372454109_i64,(-8232304308383769069_i64),(-1594533602909042380_i64)];
_4 = _9;
_15 = _1;
_7 = _1;
RET = [(-6774231205453423347_i64),(-494104051435748762_i64),8916654891413039137_i64,(-5406611721105099429_i64)];
_19 = _20;
_12 = [1_usize,7_usize,1653651042238066053_usize,5_usize,14430182557329584107_usize,13285053243515032632_usize];
match _11 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb5 = {
_9 = _1;
_18 = _8 != _2;
Call(_14 = fn7(_2, _4, _10, _15, _12, _18, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_15 = _4;
Goto(bb3)
}
bb7 = {
_10 = [2_usize,8024145730881197716_usize,8532714159691049837_usize,11218101444447722288_usize,5_usize,0_usize];
RET = [8396062602314713634_i64,(-5303942648474222062_i64),973672871702160615_i64,(-1755300469712049537_i64)];
_5 = _3 | _3;
_12 = [3_usize,12644013104121825034_usize,0_usize,4_usize,1_usize,16310478974111857608_usize];
_4 = _1;
_9 = _7;
_7 = _9;
_1 = _9;
RET = [(-7159214827009551182_i64),(-6846571188649410123_i64),(-1526276408273148757_i64),1033599662288132471_i64];
_7 = _4;
_4 = _7;
_15 = _4;
RET = [5765162520754833346_i64,(-1556752632344384813_i64),8148634917979650242_i64,6529241729068720584_i64];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_20 = (-4956148371040673943_i64) as f64;
_21 = !244813949838534116614580489598534865055_u128;
_19 = -_20;
_28 = _11 >> _3;
_5 = -_3;
_11 = _20 as isize;
_29 = [3353_i16,5393_i16,(-28109_i16)];
_29 = [19565_i16,(-15513_i16),16685_i16];
_20 = _19;
_18 = _28 == _11;
_25 = _14 >> _5;
_6 = [_3,_5];
RET = [2857398131411725266_i64,(-6825366549200127873_i64),(-6621483335629331014_i64),3161638925328444363_i64];
_4 = _7;
_26 = core::ptr::addr_of!(_13);
_4 = _7;
_21 = 68_u8 as u128;
_26 = core::ptr::addr_of!((*_26));
match _16 {
1341889923 => bb12,
_ => bb7
}
}
bb12 = {
_14 = _25 ^ _25;
_2 = _13;
_13 = _8 * _2;
_1 = _4;
_27 = [7_usize];
_25 = _14;
_4 = _7;
_24 = Adt49::Variant0 { fld0: (*_26),fld1: _25 };
_12 = [0_usize,16672021132956197354_usize,3216294657039017794_usize,10092107025547318199_usize,2_usize,4_usize];
_1 = _4;
SetDiscriminant(_24, 3);
place!(Field::<*const u16>(Variant(_24, 3), 2)) = core::ptr::addr_of!(_14);
_20 = _19 + _19;
_10 = [4223756684217424442_usize,3_usize,4_usize,14937632775164734777_usize,2265056387742458642_usize,4_usize];
_14 = _2 as u16;
_30.0 = !58_u8;
place!(Field::<*mut u8>(Variant(_24, 3), 1)) = core::ptr::addr_of_mut!(_30.0);
_21 = 49434574816721808747740367746119327062_u128;
match _21 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb10,
4 => bb9,
5 => bb11,
6 => bb13,
49434574816721808747740367746119327062 => bb15,
_ => bb14
}
}
bb13 = {
_9 = _1;
_18 = _8 != _2;
Call(_14 = fn7(_2, _4, _10, _15, _12, _18, _7), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_15 = _4;
Goto(bb3)
}
bb15 = {
_9 = _1;
place!(Field::<*const u16>(Variant(_24, 3), 2)) = core::ptr::addr_of!(_14);
_11 = _28 ^ _28;
_26 = core::ptr::addr_of!(_8);
_25 = _14 & _14;
_4 = _1;
_23 = [7_usize,8500096529083736066_usize,13208233311652966980_usize,7624951278366549735_usize,9722687407167017869_usize,2_usize];
_19 = _21 as f64;
_20 = _21 as f64;
_22 = [6794907935343717131_i64,(-2386189887309083306_i64),(-8573071385099000774_i64)];
Goto(bb16)
}
bb16 = {
Call(_33 = dump_var(4_usize, 9_usize, Move(_9), 3_usize, Move(_3), 15_usize, Move(_15), 27_usize, Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(4_usize, 16_usize, Move(_16), 17_usize, Move(_17), 12_usize, Move(_12), 29_usize, Move(_29)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_33 = dump_var(4_usize, 30_usize, Move(_30), 1_usize, Move(_1), 25_usize, Move(_25), 34_usize, _34), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: char,mut _3: char,mut _4: [i64; 4],mut _5: i128,mut _6: char,mut _7: [i128; 2],mut _8: [i128; 2],mut _9: f32) -> i128 {
mir! {
type RET = i128;
let _10: usize;
let _11: [i64; 3];
let _12: f32;
let _13: ([i64; 4],);
let _14: [usize; 6];
let _15: [i128; 2];
let _16: Adt53;
let _17: *const bool;
let _18: bool;
let _19: isize;
let _20: [usize; 6];
let _21: i32;
let _22: isize;
let _23: isize;
let _24: *const i16;
let _25: char;
let _26: bool;
let _27: f32;
let _28: Adt50;
let _29: u16;
let _30: bool;
let _31: f64;
let _32: &'static i16;
let _33: Adt39;
let _34: [i64; 4];
let _35: ();
let _36: ();
{
RET = _5;
_1 = (-13_isize) * 22_isize;
_6 = _3;
_9 = 7834_i16 as f32;
RET = _1 as i128;
_3 = _2;
_4 = [7884529996854336476_i64,(-4146352194985195001_i64),321986506627311228_i64,(-4707995590092353255_i64)];
_1 = _9 as isize;
_7 = _8;
_1 = !(-24_isize);
_2 = _3;
RET = !_5;
_8 = [_5,RET];
_2 = _3;
_2 = _3;
_7 = _8;
_8 = [_5,_5];
_10 = 53628_u16 as usize;
_6 = _3;
_12 = -_9;
Call(RET = core::intrinsics::bswap(_5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = -_12;
RET = -_5;
_9 = -_12;
_3 = _2;
_11 = [(-2150193037032473863_i64),6698556568084992408_i64,(-7211852811442742288_i64)];
_12 = -_9;
Goto(bb2)
}
bb2 = {
_6 = _3;
_4 = [4578472487292112443_i64,3005109005320235534_i64,5297879958695195768_i64,(-7373651157825684714_i64)];
_9 = 818242988_i32 as f32;
_4 = [(-514629259445701677_i64),8963727389272340678_i64,(-3067257781715570677_i64),(-2272899506642565965_i64)];
_4 = [(-9116132449127300731_i64),(-4824399339880991083_i64),8454612406408577591_i64,(-7483204440327387756_i64)];
RET = _5;
_1 = (-9223372036854775808_isize);
_13 = (_4,);
_1 = (-9_isize);
_3 = _2;
_8 = _7;
_11 = [798159153379861795_i64,(-7760781141177551016_i64),4146621400978486955_i64];
RET = _5 ^ _5;
_9 = -_12;
_13 = (_4,);
RET = _5;
_5 = -RET;
_6 = _3;
_6 = _2;
_2 = _6;
_2 = _6;
_10 = true as usize;
_10 = 1_usize >> _5;
_14 = [_10,_10,_10,_10,_10,_10];
_6 = _2;
_13.0 = _4;
_3 = _6;
_6 = _3;
_6 = _2;
_11 = [(-6294168840477460380_i64),(-7722171203625451909_i64),(-2734109042173882109_i64)];
match _1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463463374607431768211447 => bb8,
_ => bb7
}
}
bb3 = {
_9 = -_12;
RET = -_5;
_9 = -_12;
_3 = _2;
_11 = [(-2150193037032473863_i64),6698556568084992408_i64,(-7211852811442742288_i64)];
_12 = -_9;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_3 = _2;
_8 = _7;
_12 = _9;
_6 = _2;
_12 = -_9;
_11 = [(-8480996126815714250_i64),(-3609474877668208469_i64),2234968836171532540_i64];
_9 = _12;
_16.fld0.fld3 = 1467_i16 as u128;
_16.fld1 = _12 as i64;
_16.fld0.fld0 = _7;
_6 = _2;
match _1 {
340282366920938463463374607431768211447 => bb9,
_ => bb7
}
}
bb9 = {
_10 = 7_usize;
_12 = -_9;
_14 = [_10,_10,_10,_10,_10,_10];
_16.fld0.fld2 = _1;
Goto(bb10)
}
bb10 = {
_7 = _8;
_16.fld0.fld2 = 36877_u16 as isize;
_5 = RET;
_15 = [_5,_5];
_6 = _3;
_16.fld0.fld4 = -18067_i16;
_16.fld0.fld3 = 217150490975519321177960652894310470635_u128 - 87000992242325048024582832311189874919_u128;
_16.fld1 = (-3856350789235167432_i64) ^ (-7217662456429514126_i64);
_7 = _8;
Goto(bb11)
}
bb11 = {
_2 = _3;
_16.fld0.fld5 = _11;
_11 = _16.fld0.fld5;
_5 = RET & RET;
_2 = _6;
_21 = !(-870382115_i32);
_16.fld0.fld3 = 244312375765983631105605320548912966109_u128;
RET = _5 ^ _5;
_16.fld0.fld3 = 54224_u16 as u128;
RET = _5;
_22 = false as isize;
_18 = true;
_20 = [_10,_10,_10,_10,_10,_10];
_16.fld0.fld5 = _11;
_23 = 202_u8 as isize;
_2 = _6;
_16.fld0.fld2 = !_23;
_16.fld0.fld4 = 21668_i16 + 12212_i16;
_14 = [_10,_10,_10,_10,_10,_10];
_25 = _6;
_24 = core::ptr::addr_of!(_16.fld0.fld4);
Goto(bb12)
}
bb12 = {
_5 = RET;
_13 = (_4,);
_26 = _18 ^ _18;
_27 = -_9;
_6 = _2;
_2 = _25;
_16.fld0.fld3 = 313975024194683372811425888468218357617_u128;
_21 = 161607700_i32;
_29 = !29396_u16;
_16.fld0.fld5 = _11;
Goto(bb13)
}
bb13 = {
_23 = !_1;
_17 = core::ptr::addr_of!(_26);
_25 = _3;
_16.fld0.fld3 = _25 as u128;
_19 = _22 + _1;
_17 = core::ptr::addr_of!((*_17));
_19 = _1;
_16.fld0.fld5 = [_16.fld1,_16.fld1,_16.fld1];
_9 = 1077174265_u32 as f32;
_25 = _2;
_32 = &(*_24);
_33.fld2 = _13;
_8 = [RET,RET];
_29 = _22 as u16;
_9 = -_27;
_22 = -_19;
_25 = _3;
_16.fld0.fld4 = 32766_i16;
_30 = _18 & (*_17);
_25 = _2;
_4 = [_16.fld1,_16.fld1,_16.fld1,_16.fld1];
Call(_17 = fn6(_19, RET, _19, (*_24), _4, _9, _13, _33.fld2, _33.fld2.0, _16.fld1, _10, _13.0, (*_24), _22), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_23 = _19 << _16.fld1;
_13 = (_4,);
_8 = [RET,_5];
_5 = RET;
_33.fld1 = core::ptr::addr_of!(_29);
_26 = _30;
_3 = _6;
_23 = !_16.fld0.fld2;
_31 = 178_u8 as f64;
_29 = 6427_u16 - 30052_u16;
_31 = _16.fld1 as f64;
_29 = 21_u8 as u16;
_10 = 13683815476514599196_usize;
_30 = RET >= _5;
_13 = (_33.fld2.0,);
_26 = _5 >= RET;
_19 = _16.fld0.fld2;
_26 = !_18;
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(5_usize, 21_usize, Move(_21), 14_usize, Move(_14), 25_usize, Move(_25), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(5_usize, 22_usize, Move(_22), 26_usize, Move(_26), 23_usize, Move(_23), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(5_usize, 19_usize, Move(_19), 2_usize, Move(_2), 1_usize, Move(_1), 36_usize, _36), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: i128,mut _3: isize,mut _4: i16,mut _5: [i64; 4],mut _6: f32,mut _7: ([i64; 4],),mut _8: ([i64; 4],),mut _9: [i64; 4],mut _10: i64,mut _11: usize,mut _12: [i64; 4],mut _13: i16,mut _14: isize) -> *const bool {
mir! {
type RET = *const bool;
let _15: *const f32;
let _16: *const f32;
let _17: i16;
let _18: f32;
let _19: [i64; 4];
let _20: *const &'static i16;
let _21: f32;
let _22: isize;
let _23: [i64; 3];
let _24: [i16; 3];
let _25: i64;
let _26: (u8,);
let _27: ([i64; 4],);
let _28: *const bool;
let _29: *const (*const u16, ([i64; 4],));
let _30: [usize; 6];
let _31: isize;
let _32: Adt55;
let _33: [usize; 1];
let _34: ();
let _35: ();
{
_9 = [_10,_10,_10,_10];
_7 = (_8.0,);
_10 = (-3472060544505497482_i64);
_9 = [_10,_10,_10,_10];
_6 = _13 as f32;
_4 = _13 - _13;
_13 = _4;
_15 = core::ptr::addr_of!(_6);
_11 = !13840588675643802679_usize;
_4 = _13;
_8.0 = _7.0;
_3 = -_1;
_14 = _1;
_7 = (_5,);
_15 = core::ptr::addr_of!(_6);
_7 = _8;
_8.0 = [_10,_10,_10,_10];
_4 = (-110_i8) as i16;
_14 = -_1;
_7.0 = [_10,_10,_10,_10];
Goto(bb1)
}
bb1 = {
_13 = _14 as i16;
_16 = _15;
_9 = _5;
_1 = 150122575403849255409648384725407152259_u128 as isize;
_3 = -_14;
_8 = _7;
_7 = (_12,);
_11 = '\u{4874d}' as usize;
_17 = !_13;
_7.0 = _8.0;
_15 = _16;
_19 = [_10,_10,_10,_10];
_7.0 = _9;
_15 = core::ptr::addr_of!(_6);
_8.0 = _12;
_4 = _13 << _2;
_7 = (_8.0,);
_10 = 1184241098506493734_i64 + 8469189002453273543_i64;
_12 = [_10,_10,_10,_10];
_17 = -_13;
_4 = -_17;
_4 = _11 as i16;
_4 = _17 >> _17;
_7.0 = [_10,_10,_10,_10];
_9 = [_10,_10,_10,_10];
_17 = _2 as i16;
_14 = -_3;
_2 = (-2048207595_i32) as i128;
Goto(bb2)
}
bb2 = {
_17 = -_4;
_10 = (-3939612073055897583_i64);
_14 = (*_15) as isize;
_14 = _3 * _1;
_19 = [_10,_10,_10,_10];
_15 = core::ptr::addr_of!(_6);
_14 = _3;
_12 = _8.0;
_18 = -(*_15);
_3 = _14 + _14;
_11 = !5927756299699707323_usize;
_8.0 = [_10,_10,_10,_10];
match _10 {
340282366920938463459434995358712313873 => bb4,
_ => bb3
}
}
bb3 = {
_13 = _14 as i16;
_16 = _15;
_9 = _5;
_1 = 150122575403849255409648384725407152259_u128 as isize;
_3 = -_14;
_8 = _7;
_7 = (_12,);
_11 = '\u{4874d}' as usize;
_17 = !_13;
_7.0 = _8.0;
_15 = _16;
_19 = [_10,_10,_10,_10];
_7.0 = _9;
_15 = core::ptr::addr_of!(_6);
_8.0 = _12;
_4 = _13 << _2;
_7 = (_8.0,);
_10 = 1184241098506493734_i64 + 8469189002453273543_i64;
_12 = [_10,_10,_10,_10];
_17 = -_13;
_4 = -_17;
_4 = _11 as i16;
_4 = _17 >> _17;
_7.0 = [_10,_10,_10,_10];
_9 = [_10,_10,_10,_10];
_17 = _2 as i16;
_14 = -_3;
_2 = (-2048207595_i32) as i128;
Goto(bb2)
}
bb4 = {
_16 = _15;
_23 = [_10,_10,_10];
_19 = [_10,_10,_10,_10];
_8 = _7;
_12 = _8.0;
_23 = [_10,_10,_10];
_21 = -_18;
_9 = _7.0;
_17 = -_13;
_19 = [_10,_10,_10,_10];
_12 = [_10,_10,_10,_10];
_13 = _4;
_1 = _14 - _3;
_25 = _10 >> _1;
_21 = -(*_15);
_26.0 = (-121_i8) as u8;
_8.0 = _7.0;
match _10 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
340282366920938463459434995358712313873 => bb12,
_ => bb11
}
}
bb5 = {
_13 = _14 as i16;
_16 = _15;
_9 = _5;
_1 = 150122575403849255409648384725407152259_u128 as isize;
_3 = -_14;
_8 = _7;
_7 = (_12,);
_11 = '\u{4874d}' as usize;
_17 = !_13;
_7.0 = _8.0;
_15 = _16;
_19 = [_10,_10,_10,_10];
_7.0 = _9;
_15 = core::ptr::addr_of!(_6);
_8.0 = _12;
_4 = _13 << _2;
_7 = (_8.0,);
_10 = 1184241098506493734_i64 + 8469189002453273543_i64;
_12 = [_10,_10,_10,_10];
_17 = -_13;
_4 = -_17;
_4 = _11 as i16;
_4 = _17 >> _17;
_7.0 = [_10,_10,_10,_10];
_9 = [_10,_10,_10,_10];
_17 = _2 as i16;
_14 = -_3;
_2 = (-2048207595_i32) as i128;
Goto(bb2)
}
bb6 = {
_17 = -_4;
_10 = (-3939612073055897583_i64);
_14 = (*_15) as isize;
_14 = _3 * _1;
_19 = [_10,_10,_10,_10];
_15 = core::ptr::addr_of!(_6);
_14 = _3;
_12 = _8.0;
_18 = -(*_15);
_3 = _14 + _14;
_11 = !5927756299699707323_usize;
_8.0 = [_10,_10,_10,_10];
match _10 {
340282366920938463459434995358712313873 => bb4,
_ => bb3
}
}
bb7 = {
_13 = _14 as i16;
_16 = _15;
_9 = _5;
_1 = 150122575403849255409648384725407152259_u128 as isize;
_3 = -_14;
_8 = _7;
_7 = (_12,);
_11 = '\u{4874d}' as usize;
_17 = !_13;
_7.0 = _8.0;
_15 = _16;
_19 = [_10,_10,_10,_10];
_7.0 = _9;
_15 = core::ptr::addr_of!(_6);
_8.0 = _12;
_4 = _13 << _2;
_7 = (_8.0,);
_10 = 1184241098506493734_i64 + 8469189002453273543_i64;
_12 = [_10,_10,_10,_10];
_17 = -_13;
_4 = -_17;
_4 = _11 as i16;
_4 = _17 >> _17;
_7.0 = [_10,_10,_10,_10];
_9 = [_10,_10,_10,_10];
_17 = _2 as i16;
_14 = -_3;
_2 = (-2048207595_i32) as i128;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_18 = -_6;
_24 = [_13,_4,_4];
_5 = [_25,_10,_10,_10];
_12 = [_25,_25,_25,_25];
_9 = _19;
_4 = !_13;
_8 = (_7.0,);
_15 = core::ptr::addr_of!((*_15));
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb9,
6 => bb7,
340282366920938463459434995358712313873 => bb13,
_ => bb8
}
}
bb13 = {
_22 = _14 + _1;
_22 = _3;
_9 = [_25,_25,_25,_25];
_8.0 = _9;
_19 = [_25,_25,_25,_25];
_26.0 = !56_u8;
_13 = -_4;
_3 = _14;
match _10 {
0 => bb7,
1 => bb5,
2 => bb9,
3 => bb14,
4 => bb15,
340282366920938463459434995358712313873 => bb17,
_ => bb16
}
}
bb14 = {
_18 = -_6;
_24 = [_13,_4,_4];
_5 = [_25,_10,_10,_10];
_12 = [_25,_25,_25,_25];
_9 = _19;
_4 = !_13;
_8 = (_7.0,);
_15 = core::ptr::addr_of!((*_15));
match _10 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb9,
6 => bb7,
340282366920938463459434995358712313873 => bb13,
_ => bb8
}
}
bb15 = {
_17 = -_4;
_10 = (-3939612073055897583_i64);
_14 = (*_15) as isize;
_14 = _3 * _1;
_19 = [_10,_10,_10,_10];
_15 = core::ptr::addr_of!(_6);
_14 = _3;
_12 = _8.0;
_18 = -(*_15);
_3 = _14 + _14;
_11 = !5927756299699707323_usize;
_8.0 = [_10,_10,_10,_10];
match _10 {
340282366920938463459434995358712313873 => bb4,
_ => bb3
}
}
bb16 = {
_13 = _14 as i16;
_16 = _15;
_9 = _5;
_1 = 150122575403849255409648384725407152259_u128 as isize;
_3 = -_14;
_8 = _7;
_7 = (_12,);
_11 = '\u{4874d}' as usize;
_17 = !_13;
_7.0 = _8.0;
_15 = _16;
_19 = [_10,_10,_10,_10];
_7.0 = _9;
_15 = core::ptr::addr_of!(_6);
_8.0 = _12;
_4 = _13 << _2;
_7 = (_8.0,);
_10 = 1184241098506493734_i64 + 8469189002453273543_i64;
_12 = [_10,_10,_10,_10];
_17 = -_13;
_4 = -_17;
_4 = _11 as i16;
_4 = _17 >> _17;
_7.0 = [_10,_10,_10,_10];
_9 = [_10,_10,_10,_10];
_17 = _2 as i16;
_14 = -_3;
_2 = (-2048207595_i32) as i128;
Goto(bb2)
}
bb17 = {
_27 = _7;
Goto(bb18)
}
bb18 = {
_9 = [_10,_25,_10,_25];
_3 = _14 >> _4;
_22 = _3;
_24 = [_4,_4,_13];
_26 = (25_u8,);
_16 = core::ptr::addr_of!((*_15));
_6 = _18 * _21;
RET = core::ptr::addr_of!(_32.fld4.fld0);
_17 = _13;
_8 = _27;
_32.fld2 = _2 >> _3;
Goto(bb19)
}
bb19 = {
Call(_34 = dump_var(6_usize, 19_usize, Move(_19), 7_usize, Move(_7), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_34 = dump_var(6_usize, 4_usize, Move(_4), 8_usize, Move(_8), 10_usize, Move(_10), 17_usize, Move(_17)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_34 = dump_var(6_usize, 12_usize, Move(_12), 22_usize, Move(_22), 35_usize, _35, 35_usize, _35), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: f32,mut _2: char,mut _3: [usize; 6],mut _4: char,mut _5: [usize; 6],mut _6: bool,mut _7: char) -> u16 {
mir! {
type RET = u16;
let _8: isize;
let _9: [usize; 1];
let _10: [usize; 1];
let _11: f64;
let _12: [i128; 2];
let _13: bool;
let _14: u32;
let _15: u8;
let _16: ([i64; 4],);
let _17: Adt40;
let _18: u64;
let _19: i32;
let _20: Adt41;
let _21: [usize; 6];
let _22: bool;
let _23: Adt41;
let _24: Adt48;
let _25: [usize; 1];
let _26: Adt54;
let _27: f32;
let _28: *const u16;
let _29: u64;
let _30: [i64; 4];
let _31: f32;
let _32: u64;
let _33: Adt42;
let _34: bool;
let _35: char;
let _36: f32;
let _37: [usize; 6];
let _38: *const u32;
let _39: i128;
let _40: [i64; 4];
let _41: isize;
let _42: [usize; 6];
let _43: ();
let _44: ();
{
_5 = [12411198724423136099_usize,9357415288006560811_usize,4_usize,14699180784088021067_usize,14266600882906149468_usize,15753802025442095548_usize];
Goto(bb1)
}
bb1 = {
_3 = [10440456792669161973_usize,1_usize,14050996714319515035_usize,2845689252042930620_usize,6_usize,3_usize];
_8 = (-9223372036854775808_isize) | (-122_isize);
_3 = [4264007163058580536_usize,6_usize,16483149153095428098_usize,1363458751055778126_usize,1_usize,3_usize];
_4 = _7;
_4 = _2;
_6 = _1 >= _1;
_4 = _2;
RET = 33831_u16 * 22453_u16;
_9 = [12557207130777123405_usize];
_3 = [11562125520045481611_usize,5_usize,2_usize,5_usize,4_usize,7_usize];
_8 = 176_u8 as isize;
_9 = [5_usize];
_8 = 9223372036854775807_isize;
_8 = 67258269155566173088387075080623894516_u128 as isize;
_10 = [3_usize];
Goto(bb2)
}
bb2 = {
_5 = [1_usize,5453594898474147379_usize,17654331900924640645_usize,10638042409870768418_usize,8778309646911929772_usize,7_usize];
_7 = _4;
RET = 41374_u16;
RET = 4973261845403723326_usize as u16;
RET = 39_u8 as u16;
RET = 33263_u16;
_11 = 85_u8 as f64;
_9 = _10;
_8 = 56_isize * (-9223372036854775808_isize);
_2 = _7;
_9 = _10;
_2 = _7;
_9 = _10;
_1 = 202562817330599255629581673941830928007_u128 as f32;
RET = 59042_u16;
_7 = _2;
_1 = 75223075765874792658449810009271618200_u128 as f32;
_9 = [3_usize];
_3 = _5;
RET = 8774_u16 + 45304_u16;
RET = 10991_u16 << _8;
_12 = [(-96528095295275014534021040250076317054_i128),(-108842019556148680540649348514005644128_i128)];
_12 = [129014665646541966560704919749307445270_i128,163825071684669304582508693949636159256_i128];
_6 = RET >= RET;
_8 = (-9223372036854775808_isize);
_13 = !_6;
RET = _1 as u16;
_12 = [(-108658391080149892273291157710267748516_i128),13327567847855281752383028526722727747_i128];
Call(_7 = fn8(_2, _5, _3, _2, _3, _9, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = !_13;
_12 = [(-115443763322872988805492887763423322059_i128),(-40419735586895819131295986416416892637_i128)];
_13 = _6;
_5 = [7_usize,5_usize,6494153807299358170_usize,2_usize,2_usize,7_usize];
_8 = 9_isize & (-9223372036854775808_isize);
_3 = [13642949980881532809_usize,880532220561701101_usize,2368742237057461148_usize,10232223046599512414_usize,12450359170184525844_usize,1_usize];
_8 = (-8721_i16) as isize;
_9 = [5274844886588130575_usize];
_1 = RET as f32;
Goto(bb4)
}
bb4 = {
_5 = [0_usize,5_usize,3691100625269312207_usize,3354157495083582530_usize,2257317507481903519_usize,7_usize];
_8 = !9223372036854775807_isize;
_7 = _2;
_16.0 = [5676680407146133969_i64,(-5802456208460911219_i64),(-5528531905500371229_i64),(-4471679916983411179_i64)];
_16.0 = [2091272679915940356_i64,(-5971901153150410089_i64),(-6770659265862737127_i64),1289147645951805732_i64];
_14 = 774240541_u32 - 4224835683_u32;
_10 = _9;
_5 = [1630458546050499562_usize,1555244484770975962_usize,8944615204013215569_usize,17228787989923382071_usize,3767689089082051322_usize,7_usize];
_15 = 5259_i16 as u8;
_4 = _7;
_5 = _3;
_9 = _10;
_12 = [99471716560220539733586138960398697516_i128,(-149539355172476980732554055486461551170_i128)];
_19 = 97803614_i32 + (-1895451972_i32);
_1 = _8 as f32;
_5 = _3;
_18 = !13925033393580291387_u64;
Call(_21 = fn10(_13, _6), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET = !63234_u16;
_22 = _13 > _13;
_10 = _9;
_5 = [10069966976790865243_usize,18108004904455487987_usize,18283593758163281259_usize,13852411777935612649_usize,1513982516440318310_usize,0_usize];
_16.0 = [5391103621320294027_i64,4170153668046816442_i64,7967241298928556971_i64,(-6511875312672991871_i64)];
_4 = _2;
_7 = _4;
_1 = 84207890581850211943351788070915145316_u128 as f32;
_4 = _2;
_9 = [3_usize];
_19 = 26442_i16 as i32;
_5 = [14529823066937030022_usize,17597486369184442403_usize,18052633228760801186_usize,2_usize,15254375378762560994_usize,14615915825257672380_usize];
_18 = 16406107095797630847_u64;
_7 = _2;
_26.fld1 = [(-5383_i16),(-22847_i16),28614_i16];
_26.fld5 = _11;
_25 = [4_usize];
_18 = 13666990388241838262_u64;
_11 = 32_i8 as f64;
_11 = _26.fld5 * _26.fld5;
_25 = _10;
_11 = _26.fld5 + _26.fld5;
Call(_27 = core::intrinsics::transmute(_2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_22 = _6;
_18 = 1537525286703718874_u64;
_28 = core::ptr::addr_of!(RET);
_2 = _7;
_9 = [7_usize];
_26.fld0 = !_22;
_2 = _4;
_1 = -_27;
_4 = _2;
RET = 44659_u16;
_6 = !_22;
_18 = (-46582776462200492420377543127451858423_i128) as u64;
_18 = 10236082560204459394_u64 << RET;
_26.fld4 = _18;
Goto(bb7)
}
bb7 = {
_16.0 = [1219563614157066379_i64,1272411537224813259_i64,8508396116540884162_i64,(-1689512383880181270_i64)];
_9 = [7_usize];
_3 = _5;
match RET {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb9,
6 => bb10,
44659 => bb12,
_ => bb11
}
}
bb8 = {
_3 = [10440456792669161973_usize,1_usize,14050996714319515035_usize,2845689252042930620_usize,6_usize,3_usize];
_8 = (-9223372036854775808_isize) | (-122_isize);
_3 = [4264007163058580536_usize,6_usize,16483149153095428098_usize,1363458751055778126_usize,1_usize,3_usize];
_4 = _7;
_4 = _2;
_6 = _1 >= _1;
_4 = _2;
RET = 33831_u16 * 22453_u16;
_9 = [12557207130777123405_usize];
_3 = [11562125520045481611_usize,5_usize,2_usize,5_usize,4_usize,7_usize];
_8 = 176_u8 as isize;
_9 = [5_usize];
_8 = 9223372036854775807_isize;
_8 = 67258269155566173088387075080623894516_u128 as isize;
_10 = [3_usize];
Goto(bb2)
}
bb9 = {
RET = !63234_u16;
_22 = _13 > _13;
_10 = _9;
_5 = [10069966976790865243_usize,18108004904455487987_usize,18283593758163281259_usize,13852411777935612649_usize,1513982516440318310_usize,0_usize];
_16.0 = [5391103621320294027_i64,4170153668046816442_i64,7967241298928556971_i64,(-6511875312672991871_i64)];
_4 = _2;
_7 = _4;
_1 = 84207890581850211943351788070915145316_u128 as f32;
_4 = _2;
_9 = [3_usize];
_19 = 26442_i16 as i32;
_5 = [14529823066937030022_usize,17597486369184442403_usize,18052633228760801186_usize,2_usize,15254375378762560994_usize,14615915825257672380_usize];
_18 = 16406107095797630847_u64;
_7 = _2;
_26.fld1 = [(-5383_i16),(-22847_i16),28614_i16];
_26.fld5 = _11;
_25 = [4_usize];
_18 = 13666990388241838262_u64;
_11 = 32_i8 as f64;
_11 = _26.fld5 * _26.fld5;
_25 = _10;
_11 = _26.fld5 + _26.fld5;
Call(_27 = core::intrinsics::transmute(_2), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_5 = [0_usize,5_usize,3691100625269312207_usize,3354157495083582530_usize,2257317507481903519_usize,7_usize];
_8 = !9223372036854775807_isize;
_7 = _2;
_16.0 = [5676680407146133969_i64,(-5802456208460911219_i64),(-5528531905500371229_i64),(-4471679916983411179_i64)];
_16.0 = [2091272679915940356_i64,(-5971901153150410089_i64),(-6770659265862737127_i64),1289147645951805732_i64];
_14 = 774240541_u32 - 4224835683_u32;
_10 = _9;
_5 = [1630458546050499562_usize,1555244484770975962_usize,8944615204013215569_usize,17228787989923382071_usize,3767689089082051322_usize,7_usize];
_15 = 5259_i16 as u8;
_4 = _7;
_5 = _3;
_9 = _10;
_12 = [99471716560220539733586138960398697516_i128,(-149539355172476980732554055486461551170_i128)];
_19 = 97803614_i32 + (-1895451972_i32);
_1 = _8 as f32;
_5 = _3;
_18 = !13925033393580291387_u64;
Call(_21 = fn10(_13, _6), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_6 = !_13;
_12 = [(-115443763322872988805492887763423322059_i128),(-40419735586895819131295986416416892637_i128)];
_13 = _6;
_5 = [7_usize,5_usize,6494153807299358170_usize,2_usize,2_usize,7_usize];
_8 = 9_isize & (-9223372036854775808_isize);
_3 = [13642949980881532809_usize,880532220561701101_usize,2368742237057461148_usize,10232223046599512414_usize,12450359170184525844_usize,1_usize];
_8 = (-8721_i16) as isize;
_9 = [5274844886588130575_usize];
_1 = RET as f32;
Goto(bb4)
}
bb12 = {
_26.fld0 = !_6;
_22 = _26.fld0 | _13;
_11 = _26.fld5 - _26.fld5;
_29 = _18 + _26.fld4;
_33.fld3 = 99050930186261676539843283222218861922_u128;
_33.fld5 = [607657440689106914_i64,6753636381262125474_i64,1910439301336399973_i64];
_16.0 = [4614951640223417532_i64,2598924141472300331_i64,1491935873752042075_i64,6268167415347235046_i64];
_33.fld0 = [(-52405405574421842136954817015035604973_i128),(-161217822283252834814477793121442178428_i128)];
_26.fld1 = [9757_i16,(-17006_i16),(-14345_i16)];
_33.fld3 = (-111_i8) as u128;
_25 = [15659978517944984776_usize];
_7 = _2;
_33.fld4 = -(-5278_i16);
_12 = [157769608186872048183038904313141198424_i128,(-168822497007240828967238803993104129595_i128)];
_3 = _5;
_3 = [5317779569625039205_usize,4370526418769482131_usize,5_usize,2037338237892534659_usize,2_usize,3_usize];
_14 = 1160786873_u32;
_33.fld3 = 93100602700077574328566637684749141640_i128 as u128;
_21 = _3;
_9 = [8898833236881818669_usize];
Call(_21 = core::intrinsics::transmute(_5), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_33.fld5 = [(-6283947937304094621_i64),8246636704522701130_i64,5464015612971266270_i64];
_33.fld2 = _8;
_26.fld4 = _29;
_36 = _1;
_33.fld0 = [75709500954660733045004625235013120780_i128,(-144267238230685693980358857756988556518_i128)];
_34 = _6;
_27 = _1 * _36;
_26.fld2 = _28;
_7 = _2;
RET = 77063778515212358832951277181987756043_i128 as u16;
_30 = [(-4945928287426375477_i64),6309613437185468094_i64,(-5925539497243820580_i64),4620398791277382429_i64];
_36 = _1;
_16.0 = [7944583017205037001_i64,(-5341538313372743780_i64),4089345386625323578_i64,(-4458577891596658672_i64)];
_6 = !_34;
_10 = _25;
_19 = (-69055034_i32) ^ 57601759_i32;
_38 = core::ptr::addr_of!(_14);
_19 = 6_usize as i32;
_37 = _3;
_10 = [15486015331040249127_usize];
_4 = _2;
RET = !58732_u16;
_33.fld3 = 24724178315948183305450052485262247215_u128 << _26.fld4;
_31 = -_27;
match (*_38) {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
1160786873 => bb20,
_ => bb19
}
}
bb14 = {
_5 = [0_usize,5_usize,3691100625269312207_usize,3354157495083582530_usize,2257317507481903519_usize,7_usize];
_8 = !9223372036854775807_isize;
_7 = _2;
_16.0 = [5676680407146133969_i64,(-5802456208460911219_i64),(-5528531905500371229_i64),(-4471679916983411179_i64)];
_16.0 = [2091272679915940356_i64,(-5971901153150410089_i64),(-6770659265862737127_i64),1289147645951805732_i64];
_14 = 774240541_u32 - 4224835683_u32;
_10 = _9;
_5 = [1630458546050499562_usize,1555244484770975962_usize,8944615204013215569_usize,17228787989923382071_usize,3767689089082051322_usize,7_usize];
_15 = 5259_i16 as u8;
_4 = _7;
_5 = _3;
_9 = _10;
_12 = [99471716560220539733586138960398697516_i128,(-149539355172476980732554055486461551170_i128)];
_19 = 97803614_i32 + (-1895451972_i32);
_1 = _8 as f32;
_5 = _3;
_18 = !13925033393580291387_u64;
Call(_21 = fn10(_13, _6), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_6 = !_13;
_12 = [(-115443763322872988805492887763423322059_i128),(-40419735586895819131295986416416892637_i128)];
_13 = _6;
_5 = [7_usize,5_usize,6494153807299358170_usize,2_usize,2_usize,7_usize];
_8 = 9_isize & (-9223372036854775808_isize);
_3 = [13642949980881532809_usize,880532220561701101_usize,2368742237057461148_usize,10232223046599512414_usize,12450359170184525844_usize,1_usize];
_8 = (-8721_i16) as isize;
_9 = [5274844886588130575_usize];
_1 = RET as f32;
Goto(bb4)
}
bb16 = {
_5 = [1_usize,5453594898474147379_usize,17654331900924640645_usize,10638042409870768418_usize,8778309646911929772_usize,7_usize];
_7 = _4;
RET = 41374_u16;
RET = 4973261845403723326_usize as u16;
RET = 39_u8 as u16;
RET = 33263_u16;
_11 = 85_u8 as f64;
_9 = _10;
_8 = 56_isize * (-9223372036854775808_isize);
_2 = _7;
_9 = _10;
_2 = _7;
_9 = _10;
_1 = 202562817330599255629581673941830928007_u128 as f32;
RET = 59042_u16;
_7 = _2;
_1 = 75223075765874792658449810009271618200_u128 as f32;
_9 = [3_usize];
_3 = _5;
RET = 8774_u16 + 45304_u16;
RET = 10991_u16 << _8;
_12 = [(-96528095295275014534021040250076317054_i128),(-108842019556148680540649348514005644128_i128)];
_12 = [129014665646541966560704919749307445270_i128,163825071684669304582508693949636159256_i128];
_6 = RET >= RET;
_8 = (-9223372036854775808_isize);
_13 = !_6;
RET = _1 as u16;
_12 = [(-108658391080149892273291157710267748516_i128),13327567847855281752383028526722727747_i128];
Call(_7 = fn8(_2, _5, _3, _2, _3, _9, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb17 = {
_22 = _6;
_18 = 1537525286703718874_u64;
_28 = core::ptr::addr_of!(RET);
_2 = _7;
_9 = [7_usize];
_26.fld0 = !_22;
_2 = _4;
_1 = -_27;
_4 = _2;
RET = 44659_u16;
_6 = !_22;
_18 = (-46582776462200492420377543127451858423_i128) as u64;
_18 = 10236082560204459394_u64 << RET;
_26.fld4 = _18;
Goto(bb7)
}
bb18 = {
_6 = !_13;
_12 = [(-115443763322872988805492887763423322059_i128),(-40419735586895819131295986416416892637_i128)];
_13 = _6;
_5 = [7_usize,5_usize,6494153807299358170_usize,2_usize,2_usize,7_usize];
_8 = 9_isize & (-9223372036854775808_isize);
_3 = [13642949980881532809_usize,880532220561701101_usize,2368742237057461148_usize,10232223046599512414_usize,12450359170184525844_usize,1_usize];
_8 = (-8721_i16) as isize;
_9 = [5274844886588130575_usize];
_1 = RET as f32;
Goto(bb4)
}
bb19 = {
_3 = [10440456792669161973_usize,1_usize,14050996714319515035_usize,2845689252042930620_usize,6_usize,3_usize];
_8 = (-9223372036854775808_isize) | (-122_isize);
_3 = [4264007163058580536_usize,6_usize,16483149153095428098_usize,1363458751055778126_usize,1_usize,3_usize];
_4 = _7;
_4 = _2;
_6 = _1 >= _1;
_4 = _2;
RET = 33831_u16 * 22453_u16;
_9 = [12557207130777123405_usize];
_3 = [11562125520045481611_usize,5_usize,2_usize,5_usize,4_usize,7_usize];
_8 = 176_u8 as isize;
_9 = [5_usize];
_8 = 9223372036854775807_isize;
_8 = 67258269155566173088387075080623894516_u128 as isize;
_10 = [3_usize];
Goto(bb2)
}
bb20 = {
Goto(bb21)
}
bb21 = {
Call(_43 = dump_var(7_usize, 5_usize, Move(_5), 14_usize, Move(_14), 2_usize, Move(_2), 12_usize, Move(_12)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_43 = dump_var(7_usize, 19_usize, Move(_19), 10_usize, Move(_10), 18_usize, Move(_18), 34_usize, Move(_34)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_43 = dump_var(7_usize, 8_usize, Move(_8), 15_usize, Move(_15), 13_usize, Move(_13), 44_usize, _44), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: char,mut _2: [usize; 6],mut _3: [usize; 6],mut _4: char,mut _5: [usize; 6],mut _6: [usize; 1],mut _7: char) -> char {
mir! {
type RET = char;
let _8: [usize; 6];
let _9: [i128; 2];
let _10: [i64; 4];
let _11: bool;
let _12: ([i64; 4],);
let _13: bool;
let _14: *const u32;
let _15: u16;
let _16: u128;
let _17: Adt51;
let _18: f32;
let _19: bool;
let _20: *const i16;
let _21: [i16; 3];
let _22: Adt39;
let _23: ([i64; 4],);
let _24: f32;
let _25: [usize; 6];
let _26: char;
let _27: [usize; 6];
let _28: i64;
let _29: ();
let _30: ();
{
_6 = [6_usize];
_2 = [3395923516046697475_usize,7_usize,6_usize,1_usize,6_usize,7_usize];
_4 = _7;
RET = _1;
_2 = _5;
_2 = _3;
_4 = _1;
_1 = _7;
_4 = _7;
_10 = [(-487651919280729187_i64),1609259018841226467_i64,1673538480701779301_i64,1085985542157734360_i64];
_9 = [119720901187028391483624282993336895693_i128,(-99291478622596787628512339266270639548_i128)];
_9 = [87269823390737048819011917366130467370_i128,134766584439798766479498630945522351069_i128];
_10 = [(-2835086624504958774_i64),(-9008090942980300670_i64),(-8772630341741434834_i64),(-5184955337890575660_i64)];
_8 = _5;
_4 = _1;
RET = _7;
_7 = _1;
RET = _7;
_3 = [15465188466742091432_usize,1_usize,6_usize,2_usize,0_usize,14666084054330053489_usize];
_4 = RET;
_10 = [(-6524453098015082282_i64),8960493040870280715_i64,8833176124035804651_i64,(-6867743727916616984_i64)];
_1 = _4;
_6 = [5388931607133521363_usize];
_13 = !false;
Goto(bb1)
}
bb1 = {
_13 = _7 < _1;
_11 = !_13;
RET = _7;
_8 = _5;
_8 = _2;
_12.0 = [(-7980646264503299604_i64),1371141296479750533_i64,1397023404945220064_i64,(-8138464524615693514_i64)];
Goto(bb2)
}
bb2 = {
_15 = 40396_u16 * 51582_u16;
_17.fld4 = 28528_i16;
_17.fld1.fld2.0 = [8638134855666208493_i64,6384834308026222830_i64,947227265778740577_i64,(-6020027922548672103_i64)];
_5 = _8;
_4 = _1;
_17.fld7 = 42157872041411350382959377432637474151_i128 - 17727049776347716725073509062021841624_i128;
_5 = _3;
_14 = core::ptr::addr_of!(_17.fld3);
match _17.fld4 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
28528 => bb10,
_ => bb9
}
}
bb3 = {
_13 = _7 < _1;
_11 = !_13;
RET = _7;
_8 = _5;
_8 = _2;
_12.0 = [(-7980646264503299604_i64),1371141296479750533_i64,1397023404945220064_i64,(-8138464524615693514_i64)];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_17.fld0 = 7_usize as f32;
_12.0 = [(-7386116771196894504_i64),(-5905773839415764065_i64),8552911956644762592_i64,9204402053235151532_i64];
RET = _1;
RET = _4;
_13 = _11;
_18 = -_17.fld0;
_17.fld0 = _18 - _18;
_17.fld7 = 3669765359824154724071568519175582700_i128;
_2 = [733029815338160384_usize,8120486684356210815_usize,3785542513437420147_usize,5_usize,6_usize,14415427068611818544_usize];
_10 = _12.0;
_17.fld1.fld0 = _6;
_17.fld3 = 3266719951_u32 >> _15;
_17.fld6 = 2941327204960500436_u64 as u8;
_20 = core::ptr::addr_of!(_17.fld4);
_19 = !_13;
_12 = (_17.fld1.fld2.0,);
Call(_8 = fn9(_3, (*_14), RET, _20, _2, (*_14), _1, _20, _14, _11, RET), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
RET = _4;
_3 = [13684017896591852485_usize,14167749297377865320_usize,4_usize,13558902782223057891_usize,3_usize,3_usize];
_10 = [6347798813319768894_i64,1948179015413072279_i64,(-5426940323935303685_i64),(-5821938986628855074_i64)];
_4 = _1;
_4 = _7;
_12.0 = _10;
_13 = !_19;
_22.fld1 = core::ptr::addr_of!(_15);
_5 = [5_usize,1_usize,7_usize,1_usize,2454542358646565580_usize,5892511954953768862_usize];
_18 = _17.fld6 as f32;
_21 = [_17.fld4,(*_20),(*_20)];
_22.fld2 = (_12.0,);
_13 = !_19;
_17.fld4 = (-2899_i16);
_20 = core::ptr::addr_of!((*_20));
_14 = core::ptr::addr_of!((*_14));
_24 = -_17.fld0;
match (*_20) {
0 => bb7,
1 => bb12,
340282366920938463463374607431768208557 => bb14,
_ => bb13
}
}
bb12 = {
_15 = 40396_u16 * 51582_u16;
_17.fld4 = 28528_i16;
_17.fld1.fld2.0 = [8638134855666208493_i64,6384834308026222830_i64,947227265778740577_i64,(-6020027922548672103_i64)];
_5 = _8;
_4 = _1;
_17.fld7 = 42157872041411350382959377432637474151_i128 - 17727049776347716725073509062021841624_i128;
_5 = _3;
_14 = core::ptr::addr_of!(_17.fld3);
match _17.fld4 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
28528 => bb10,
_ => bb9
}
}
bb13 = {
Return()
}
bb14 = {
_24 = (-9223372036854775808_isize) as f32;
_7 = _1;
_17.fld4 = 31923_i16 << _17.fld6;
_17.fld6 = _11 as u8;
_17.fld6 = 27_u8 >> (*_20);
_23 = (_10,);
_12.0 = [5387442027758732358_i64,(-1326813130086417219_i64),(-6173630985939684131_i64),2736712984986452054_i64];
_17.fld1.fld2 = (_10,);
_23.0 = _22.fld2.0;
_23.0 = _17.fld1.fld2.0;
_20 = core::ptr::addr_of!((*_20));
_5 = _3;
_17.fld1.fld2 = _12;
_21 = [(*_20),(*_20),(*_20)];
_17.fld1.fld1 = _22.fld1;
_8 = [7_usize,1_usize,7707772098291038291_usize,0_usize,1307813858143325710_usize,5859646576884246836_usize];
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(8_usize, 12_usize, Move(_12), 15_usize, Move(_15), 23_usize, Move(_23), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(8_usize, 8_usize, Move(_8), 1_usize, Move(_1), 11_usize, Move(_11), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [usize; 6],mut _2: u32,mut _3: char,mut _4: *const i16,mut _5: [usize; 6],mut _6: u32,mut _7: char,mut _8: *const i16,mut _9: *const u32,mut _10: bool,mut _11: char) -> [usize; 6] {
mir! {
type RET = [usize; 6];
let _12: [i128; 2];
let _13: isize;
let _14: [i64; 3];
let _15: u64;
let _16: [i64; 3];
let _17: *const u16;
let _18: Adt51;
let _19: char;
let _20: [i64; 4];
let _21: *const *const u32;
let _22: isize;
let _23: Adt54;
let _24: [i64; 3];
let _25: isize;
let _26: Adt53;
let _27: u32;
let _28: isize;
let _29: i64;
let _30: Adt45;
let _31: [i16; 3];
let _32: f32;
let _33: u32;
let _34: [i64; 3];
let _35: ([i64; 4],);
let _36: (u8,);
let _37: u16;
let _38: [i64; 4];
let _39: i16;
let _40: &'static i16;
let _41: bool;
let _42: ();
let _43: ();
{
_7 = _3;
_11 = _3;
_2 = (-34908634190902157441042793556823415166_i128) as u32;
_5 = [13594763082656866854_usize,17581460594688934880_usize,6_usize,2065922883815388335_usize,2_usize,4538430379427375412_usize];
_3 = _7;
RET = [16844930668297852299_usize,988260813100614704_usize,15157934660965357110_usize,1_usize,7119124265524350956_usize,4427741242227075526_usize];
RET = [5_usize,6446927551938163703_usize,6_usize,0_usize,4_usize,14886866533195425687_usize];
_12 = [107584325250196547362469923693431765100_i128,34818810970214582878121068411885030892_i128];
_12 = [159780107869800926162568101045646546754_i128,70790289054214107663434264679963870297_i128];
_13 = -9223372036854775807_isize;
_8 = _4;
_12 = [(-59979899718521671826057686880680190733_i128),74085550183464685947605376476296344283_i128];
_13 = 9223372036854775807_isize | 9223372036854775807_isize;
_14 = [(-6684573318070030833_i64),112758523405055611_i64,5256501381579021185_i64];
_13 = -9223372036854775807_isize;
_2 = !_6;
_12 = [165403449904071317768799381920235872875_i128,(-13579693192374349339869616636046207735_i128)];
_6 = 17528708636970435176_u64 as u32;
_1 = [1_usize,11657362248701803798_usize,0_usize,12624078460290538901_usize,7_usize,17331830454814457525_usize];
_8 = _4;
_2 = _6 & _6;
_14 = [(-3488583251536180358_i64),6216153539055293506_i64,(-6651272390809256640_i64)];
_11 = _3;
Call(_5 = core::intrinsics::transmute(RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_18.fld3 = _6;
_18.fld4 = 13234_i16;
_12 = [154740700099329299742135089809343445624_i128,(-25583332128293658903413306670265240712_i128)];
_19 = _3;
_14 = [2734541882012786855_i64,(-3954843521515483670_i64),4361880670048850404_i64];
_18.fld4 = 25274_i16;
_15 = !9604555001940955123_u64;
_15 = 3997114706731376030_u64 + 4640831976921592822_u64;
_18.fld7 = !(-137236208266984971515667196083914449354_i128);
_16 = _14;
_4 = core::ptr::addr_of!(_18.fld4);
_14 = [216639617789125312_i64,(-6698807989784664168_i64),498323317888213554_i64];
_22 = -_13;
_8 = _4;
_4 = core::ptr::addr_of!((*_4));
_20 = [(-3664929546217329934_i64),(-6111917057818854318_i64),3873275046561592879_i64,1424849566631604165_i64];
_21 = core::ptr::addr_of!(_9);
RET = [13233200905147241521_usize,5387077868986972419_usize,4_usize,2_usize,5_usize,1_usize];
_23.fld4 = _15 | _15;
_22 = _13;
match _18.fld4 {
0 => bb2,
25274 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_18.fld1.fld2 = (_20,);
_20 = [545159106781816661_i64,(-6936725728464596496_i64),(-6363475110442854335_i64),(-2094548658510653337_i64)];
_8 = core::ptr::addr_of!((*_4));
_16 = _14;
_18.fld1.fld2 = (_20,);
_18.fld1.fld2.0 = _20;
_23.fld0 = !_10;
_3 = _19;
_26.fld0.fld4 = _18.fld7 as i16;
_4 = _8;
_20 = [(-2559786436188685109_i64),(-2152605403521792166_i64),(-3923795072020429289_i64),8749706206869252085_i64];
_9 = core::ptr::addr_of!(_2);
match (*_8) {
0 => bb3,
1 => bb5,
25274 => bb7,
_ => bb6
}
}
bb5 = {
_18.fld3 = _6;
_18.fld4 = 13234_i16;
_12 = [154740700099329299742135089809343445624_i128,(-25583332128293658903413306670265240712_i128)];
_19 = _3;
_14 = [2734541882012786855_i64,(-3954843521515483670_i64),4361880670048850404_i64];
_18.fld4 = 25274_i16;
_15 = !9604555001940955123_u64;
_15 = 3997114706731376030_u64 + 4640831976921592822_u64;
_18.fld7 = !(-137236208266984971515667196083914449354_i128);
_16 = _14;
_4 = core::ptr::addr_of!(_18.fld4);
_14 = [216639617789125312_i64,(-6698807989784664168_i64),498323317888213554_i64];
_22 = -_13;
_8 = _4;
_4 = core::ptr::addr_of!((*_4));
_20 = [(-3664929546217329934_i64),(-6111917057818854318_i64),3873275046561592879_i64,1424849566631604165_i64];
_21 = core::ptr::addr_of!(_9);
RET = [13233200905147241521_usize,5387077868986972419_usize,4_usize,2_usize,5_usize,1_usize];
_23.fld4 = _15 | _15;
_22 = _13;
match _18.fld4 {
0 => bb2,
25274 => bb4,
_ => bb3
}
}
bb6 = {
Return()
}
bb7 = {
_27 = _18.fld3 >> _26.fld0.fld4;
_20 = [(-8170746887020174961_i64),2980428155018896885_i64,(-1906337032043601421_i64),(-6241854276723449003_i64)];
_22 = _7 as isize;
_26.fld1 = -7103630235017455578_i64;
_12 = [_18.fld7,_18.fld7];
_18.fld1.fld0 = [2_usize];
_18.fld4 = _10 as i16;
_26.fld0.fld1 = Adt40::Variant0 { fld0: _18.fld1.fld0,fld1: _3,fld2: RET,fld3: _9,fld4: (*_8),fld5: 37_u8 };
_26.fld0.fld0 = _12;
_19 = Field::<char>(Variant(_26.fld0.fld1, 0), 1);
_1 = Field::<[usize; 6]>(Variant(_26.fld0.fld1, 0), 2);
_18.fld7 = 284132900_i32 as i128;
_24 = [_26.fld1,_26.fld1,_26.fld1];
_16 = _14;
place!(Field::<u8>(Variant(_26.fld0.fld1, 0), 5)) = 177_u8 + 209_u8;
_11 = _19;
_18.fld6 = Field::<u8>(Variant(_26.fld0.fld1, 0), 5);
_18.fld6 = Field::<u8>(Variant(_26.fld0.fld1, 0), 5) >> _23.fld4;
_6 = _2;
_8 = core::ptr::addr_of!(place!(Field::<i16>(Variant(_26.fld0.fld1, 0), 4)));
Goto(bb8)
}
bb8 = {
_28 = -_13;
place!(Field::<u8>(Variant(_26.fld0.fld1, 0), 5)) = !_18.fld6;
SetDiscriminant(_26.fld0.fld1, 1);
place!(Field::<usize>(Variant(_26.fld0.fld1, 1), 2)) = 4806086937960800530_usize;
_29 = -_26.fld1;
_23.fld1 = [_18.fld4,_18.fld4,_18.fld4];
_24 = [_26.fld1,_26.fld1,_29];
_2 = !_6;
_3 = _11;
_26.fld0.fld2 = !_22;
RET = [Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2)];
place!(Field::<usize>(Variant(_26.fld0.fld1, 1), 2)) = 182256911492232499117112849005951014733_u128 as usize;
_23.fld4 = !_15;
_26.fld0.fld0 = [_18.fld7,_18.fld7];
_26.fld0.fld5 = _14;
_23.fld5 = Field::<usize>(Variant(_26.fld0.fld1, 1), 2) as f64;
_22 = _29 as isize;
_12 = [_18.fld7,_18.fld7];
_26.fld0.fld0 = [_18.fld7,_18.fld7];
_15 = _23.fld4;
Call(_26.fld0.fld3 = core::intrinsics::bswap(74026826293397759650980195377060871295_u128), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_26.fld0.fld3 = !305728239307561386141010416546282678587_u128;
_26.fld0.fld2 = _28;
_31 = [_18.fld4,_18.fld4,_26.fld0.fld4];
_26.fld0.fld5 = _14;
_33 = (*_9) ^ (*_9);
_21 = core::ptr::addr_of!(_9);
place!(Field::<usize>(Variant(_26.fld0.fld1, 1), 2)) = !1_usize;
_5 = [Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2)];
_18.fld4 = _26.fld0.fld4;
_7 = _19;
_22 = _23.fld0 as isize;
Call(_25 = core::intrinsics::bswap(_26.fld0.fld2), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_4 = _8;
_18.fld3 = _26.fld1 as u32;
_18.fld0 = (-570644291_i32) as f32;
place!(Field::<*const u32>(Variant(_26.fld0.fld1, 1), 0)) = (*_21);
_6 = 22518_u16 as u32;
_31 = [_18.fld4,_18.fld4,_18.fld4];
_26.fld0.fld3 = 197571658472612540274123110254011816733_u128;
_18.fld1.fld2 = (_20,);
_16 = [_29,_29,_26.fld1];
_12 = _26.fld0.fld0;
_34 = [_26.fld1,_29,_29];
_15 = _23.fld4 & _23.fld4;
_16 = _26.fld0.fld5;
_32 = _18.fld0 - _18.fld0;
_11 = _7;
_18.fld1.fld1 = core::ptr::addr_of!(_37);
_18.fld1.fld1 = core::ptr::addr_of!(_37);
_16 = _14;
_15 = Field::<usize>(Variant(_26.fld0.fld1, 1), 2) as u64;
_15 = _23.fld4;
_35 = (_20,);
place!(Field::<usize>(Variant(_26.fld0.fld1, 1), 2)) = !12969431758191775202_usize;
_17 = core::ptr::addr_of!(_37);
match _26.fld0.fld3 {
197571658472612540274123110254011816733 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_18.fld3 = _33;
_24 = _26.fld0.fld5;
_38 = _35.0;
_26.fld0.fld4 = _18.fld4;
_6 = (-1792214845_i32) as u32;
_23.fld4 = !_15;
place!(Field::<*const u32>(Variant(_26.fld0.fld1, 1), 0)) = core::ptr::addr_of!(_33);
match _26.fld0.fld3 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb9,
4 => bb5,
5 => bb6,
6 => bb13,
197571658472612540274123110254011816733 => bb15,
_ => bb14
}
}
bb13 = {
_26.fld0.fld3 = !305728239307561386141010416546282678587_u128;
_26.fld0.fld2 = _28;
_31 = [_18.fld4,_18.fld4,_26.fld0.fld4];
_26.fld0.fld5 = _14;
_33 = (*_9) ^ (*_9);
_21 = core::ptr::addr_of!(_9);
place!(Field::<usize>(Variant(_26.fld0.fld1, 1), 2)) = !1_usize;
_5 = [Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2)];
_18.fld4 = _26.fld0.fld4;
_7 = _19;
_22 = _23.fld0 as isize;
Call(_25 = core::intrinsics::bswap(_26.fld0.fld2), ReturnTo(bb10), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
_18.fld7 = !99093789840704318550209738333200708100_i128;
_33 = _6;
_18.fld3 = _18.fld7 as u32;
_26.fld0.fld5 = [_26.fld1,_26.fld1,_26.fld1];
_18.fld4 = Field::<usize>(Variant(_26.fld0.fld1, 1), 2) as i16;
_17 = core::ptr::addr_of!((*_17));
_37 = 34472_u16;
_18.fld1.fld2.0 = _20;
_18.fld0 = _32 - _32;
place!(Field::<*const u16>(Variant(_26.fld0.fld1, 1), 1)) = core::ptr::addr_of!(_37);
_10 = _23.fld0;
_5 = [Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2),Field::<usize>(Variant(_26.fld0.fld1, 1), 2)];
_39 = _26.fld0.fld3 as i16;
_41 = !_23.fld0;
_40 = &_26.fld0.fld4;
_37 = 47538_u16;
_12 = [_18.fld7,_18.fld7];
Goto(bb16)
}
bb16 = {
Call(_42 = dump_var(9_usize, 11_usize, Move(_11), 12_usize, Move(_12), 29_usize, Move(_29), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(9_usize, 38_usize, Move(_38), 10_usize, Move(_10), 3_usize, Move(_3), 16_usize, Move(_16)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(9_usize, 35_usize, Move(_35), 13_usize, Move(_13), 31_usize, Move(_31), 33_usize, Move(_33)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_42 = dump_var(9_usize, 20_usize, Move(_20), 34_usize, Move(_34), 43_usize, _43, 43_usize, _43), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: bool,mut _2: bool) -> [usize; 6] {
mir! {
type RET = [usize; 6];
let _3: Adt39;
let _4: ([i64; 4],);
let _5: *mut (u8,);
let _6: ([i64; 4],);
let _7: *const bool;
let _8: [usize; 1];
let _9: usize;
let _10: [i64; 4];
let _11: *const u16;
let _12: f32;
let _13: char;
let _14: i128;
let _15: Adt46;
let _16: [usize; 1];
let _17: u16;
let _18: u16;
let _19: Adt39;
let _20: (u8,);
let _21: *const bool;
let _22: bool;
let _23: [i64; 4];
let _24: [i128; 2];
let _25: (u8,);
let _26: f32;
let _27: isize;
let _28: f32;
let _29: [i128; 2];
let _30: i32;
let _31: i32;
let _32: [i64; 4];
let _33: ();
let _34: ();
{
_1 = _2;
_2 = _1;
_2 = _1;
_1 = _2 >= _2;
_2 = !_1;
RET = [5729566286246040709_usize,9633609791881765200_usize,8247195589031169316_usize,1_usize,11196474376078812864_usize,1_usize];
RET = [4_usize,7_usize,4_usize,2_usize,7760844274999476136_usize,1934733965438425292_usize];
_1 = _2 <= _2;
RET = [4238528199981223613_usize,11200947451543197478_usize,9892197825170903113_usize,8977065370762801908_usize,6_usize,7082875155442326397_usize];
_1 = !_2;
RET = [6648829600817165051_usize,4_usize,7_usize,0_usize,8089064705521690835_usize,7260362937955880128_usize];
_2 = _1;
_1 = _2;
RET = [13701952791518219621_usize,18391368412489718580_usize,8723729826851194764_usize,12433950048111203636_usize,5465325052408832297_usize,4_usize];
_2 = _1;
_3.fld0 = [2_usize];
RET = [1_usize,4_usize,4082159439694750019_usize,3_usize,5247690831985813636_usize,0_usize];
RET = [3_usize,4326197283975625087_usize,0_usize,17179728971799297805_usize,0_usize,4889598050331798760_usize];
_6.0 = [3875775144287875358_i64,5619701855959702033_i64,6991571245125807821_i64,(-2061514022930427701_i64)];
_3.fld2.0 = [6208870702191436155_i64,2185248389978933171_i64,(-4625412660417969503_i64),(-6678858798325462448_i64)];
Goto(bb1)
}
bb1 = {
_6 = (_3.fld2.0,);
_4 = (_6.0,);
RET = [0_usize,2_usize,6661394600567510715_usize,14235789378031029897_usize,4361197900200823294_usize,2_usize];
RET = [4_usize,10117403864687523900_usize,13788923964032219098_usize,11668068023797333718_usize,10193411451428547611_usize,7_usize];
_1 = _2;
_6.0 = [3174016046152187245_i64,(-1652847778306275117_i64),560737130361151824_i64,(-7384398024459400052_i64)];
_3.fld2.0 = _6.0;
_1 = _2;
Call(_3.fld2 = fn11(_2, _2, _1, _6, _1, _1, RET, _1, _6.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = core::ptr::addr_of!(_2);
_6 = (_4.0,);
_6.0 = [(-368990193828843322_i64),(-3949632466161453413_i64),6356623242360156559_i64,5895909382469827669_i64];
_4 = _3.fld2;
_7 = core::ptr::addr_of!(_2);
RET = [8985934887669897427_usize,15177557146702055599_usize,4_usize,3_usize,1_usize,7913867462948134641_usize];
RET = [2_usize,15488012274038324766_usize,2_usize,10975501016851487046_usize,7072657296297537134_usize,1183922750222526820_usize];
_3.fld0 = [9446871674419346713_usize];
_3.fld2 = (_4.0,);
_8 = _3.fld0;
_8 = [6277369865024703110_usize];
_8 = [17244527931925086455_usize];
Goto(bb3)
}
bb3 = {
_2 = !_1;
_4.0 = _3.fld2.0;
_7 = core::ptr::addr_of!(_1);
_1 = !_2;
_6.0 = [4862576625713485528_i64,(-5173037652163852832_i64),(-3022200940330877242_i64),(-4061374290135794930_i64)];
_3.fld2 = _4;
_4.0 = [8204286616660610301_i64,7429258028234873291_i64,(-9148291454354572715_i64),(-6439599603653639801_i64)];
_6.0 = [(-3008370491307603631_i64),(-1847249280618951469_i64),(-4609990883110232058_i64),597952160573886971_i64];
_1 = _2;
_9 = 94930986972089859692588666043951793624_i128 as usize;
_6.0 = [(-5420502001975996971_i64),(-953752745696565367_i64),3224411556690315891_i64,(-866332009141179398_i64)];
_7 = core::ptr::addr_of!(_1);
_9 = 7_usize;
_12 = (-57_i8) as f32;
match _9 {
7 => bb4,
_ => bb2
}
}
bb4 = {
_6.0 = [(-5069912209904540795_i64),9142637317906454795_i64,2190690822034200929_i64,4226260911738794692_i64];
_14 = 5263767108723293170_u64 as i128;
_7 = core::ptr::addr_of!(_2);
_3.fld2.0 = _4.0;
_10 = _4.0;
Goto(bb5)
}
bb5 = {
_14 = 11682530977669284519567405300884390405_i128;
_4.0 = [2453456896913377109_i64,3007116109536759589_i64,(-2012382707154583414_i64),3864314799862929147_i64];
_6.0 = [(-2753144060011088386_i64),2597472437852402105_i64,(-2399704406727315944_i64),(-8699265036270515722_i64)];
_6 = _3.fld2;
_14 = 4546927482355681889_u64 as i128;
_3.fld2.0 = _6.0;
_4.0 = _6.0;
RET = [_9,_9,_9,_9,_9,_9];
_2 = !_1;
_4 = (_6.0,);
_4.0 = _3.fld2.0;
_6.0 = [4139953361650354401_i64,(-8338321413236378839_i64),(-8994282844862327358_i64),6067943395274994168_i64];
_13 = '\u{b9524}';
_1 = (*_7) < (*_7);
_3.fld2 = _6;
_13 = '\u{eb35a}';
_16 = [_9];
_8 = [_9];
_4.0 = [(-3787487235628940873_i64),561576942172770061_i64,(-6070702535555310229_i64),2793454539394776699_i64];
_15 = Adt46::Variant0 { fld0: 84_i8 };
_19.fld0 = [_9];
_14 = -(-17730259188840401503498915551626212752_i128);
_16 = [_9];
_3.fld2.0 = [1058590438932679158_i64,5272364722652608445_i64,(-8452928127440598358_i64),6380590690297554720_i64];
_3.fld2.0 = _10;
_19.fld2.0 = [4173936290576459664_i64,1652024090662757514_i64,(-4946020598686931454_i64),1959835971622168556_i64];
Goto(bb6)
}
bb6 = {
_8 = [_9];
RET = [_9,_9,_9,_9,_9,_9];
_19.fld0 = _8;
_3.fld1 = core::ptr::addr_of!(_17);
_14 = 20257192459987421208698327795751861073_i128;
_7 = core::ptr::addr_of!(_2);
Goto(bb7)
}
bb7 = {
_19.fld2.0 = [(-8905452514613602766_i64),(-5342592153808434772_i64),2126174696699767531_i64,(-6359240027540926706_i64)];
_6.0 = [8093453393117740166_i64,6013534016863575606_i64,(-5760649813852697098_i64),5660304630178037610_i64];
_3.fld1 = core::ptr::addr_of!(_18);
match _14 {
0 => bb4,
20257192459987421208698327795751861073 => bb9,
_ => bb8
}
}
bb8 = {
_8 = [_9];
RET = [_9,_9,_9,_9,_9,_9];
_19.fld0 = _8;
_3.fld1 = core::ptr::addr_of!(_17);
_14 = 20257192459987421208698327795751861073_i128;
_7 = core::ptr::addr_of!(_2);
Goto(bb7)
}
bb9 = {
_14 = !(-1424954614585033423130867456050949506_i128);
_4.0 = [7690853124072582164_i64,(-3534330891540469801_i64),8565646164989111323_i64,(-2308970942779379669_i64)];
_14 = (-5_isize) as i128;
_18 = 9112_u16;
RET = [_9,_9,_9,_9,_9,_9];
_19.fld2.0 = [(-3496641954618692489_i64),(-578454153843924137_i64),5489768580813734411_i64,(-6114880577579070517_i64)];
_4.0 = _19.fld2.0;
_14 = _1 as i128;
_13 = '\u{7452}';
_3.fld2 = _6;
_11 = core::ptr::addr_of!(_18);
_20.0 = 191_u8 - 61_u8;
_2 = _1;
_19.fld2 = (_4.0,);
_22 = _2;
_19.fld1 = _3.fld1;
_16 = _8;
_5 = core::ptr::addr_of_mut!(_20);
RET = [_9,_9,_9,_9,_9,_9];
_8 = [_9];
_3.fld2.0 = [(-2424068849885065169_i64),7384306806314618487_i64,8374130134881628365_i64,8838296653197871496_i64];
_4 = _19.fld2;
Call(_9 = fn12(_22, _7, (*_7), _7, _2, (*_5), _14, _14, _14), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_8 = [_9];
_21 = _7;
_26 = _12;
match (*_11) {
0 => bb1,
1 => bb9,
9112 => bb11,
_ => bb7
}
}
bb11 = {
_23 = [4064443703234521544_i64,(-4667141579260393602_i64),766047718448433199_i64,(-6183754068695538257_i64)];
Call(_3.fld2 = fn16(_1, _1, _21, _2, _19.fld2, _1, _20.0, _5), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_27 = 2_isize << _14;
_21 = _7;
_25.0 = (*_5).0 >> _14;
_20.0 = (-805779072_i32) as u8;
_3.fld2.0 = [2170804534305689198_i64,2031192410454348196_i64,6035701498034130981_i64,(-9010641327192667470_i64)];
_12 = -_26;
_1 = _2 < _2;
_19.fld2 = (_3.fld2.0,);
_25 = _20;
_4 = (_10,);
_19.fld2 = _6;
Goto(bb13)
}
bb13 = {
_7 = _21;
_3.fld0 = [_9];
_8 = _16;
_26 = (-74_i8) as f32;
_24 = [_14,_14];
_6 = (_3.fld2.0,);
_23 = [3346599334237384593_i64,(-4509973648204768371_i64),3973597886666240984_i64,5629501885629445285_i64];
_19.fld2 = (_10,);
Goto(bb14)
}
bb14 = {
place!(Field::<i8>(Variant(_15, 0), 0)) = 4164137204785653258_i64 as i8;
_14 = -(-88986057124318528863613233161068569936_i128);
_5 = core::ptr::addr_of_mut!((*_5));
_22 = _1 >= _1;
_17 = (*_11);
_16 = [_9];
_4.0 = _10;
_3 = _19;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(10_usize, 1_usize, Move(_1), 18_usize, Move(_18), 20_usize, Move(_20), 24_usize, Move(_24)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(10_usize, 27_usize, Move(_27), 13_usize, Move(_13), 23_usize, Move(_23), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(10_usize, 17_usize, Move(_17), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: ([i64; 4],),mut _5: bool,mut _6: bool,mut _7: [usize; 6],mut _8: bool,mut _9: [i64; 4]) -> ([i64; 4],) {
mir! {
type RET = ([i64; 4],);
let _10: u128;
let _11: Adt49;
let _12: i8;
let _13: [usize; 6];
let _14: Adt53;
let _15: char;
let _16: Adt47;
let _17: [i128; 2];
let _18: char;
let _19: [usize; 6];
let _20: char;
let _21: [usize; 6];
let _22: u16;
let _23: [i64; 3];
let _24: Adt55;
let _25: [i64; 3];
let _26: *mut u8;
let _27: u128;
let _28: [i16; 3];
let _29: [usize; 1];
let _30: ();
let _31: ();
{
_1 = !_2;
Goto(bb1)
}
bb1 = {
_5 = _1;
_3 = _8;
_4 = (_9,);
_5 = _2 == _6;
_4 = (_9,);
RET.0 = [(-9173297740774262062_i64),(-6373695630138129463_i64),(-7435212678896593438_i64),912472433910593646_i64];
_8 = !_1;
_4.0 = [(-4930949523803703365_i64),(-6685391475407077436_i64),1869494175593551696_i64,(-6439466950350147454_i64)];
RET = (_4.0,);
_8 = _1;
_7 = [9889694802723283016_usize,8555356416577461932_usize,1_usize,2_usize,3_usize,11609789511507677147_usize];
_5 = _1;
_8 = !_2;
RET.0 = [(-4943071965876223671_i64),3172197838486251750_i64,(-1061918269707926101_i64),(-7775873398870254706_i64)];
Goto(bb2)
}
bb2 = {
_6 = _2;
_4 = RET;
RET.0 = _4.0;
_4 = (RET.0,);
_4 = (_9,);
RET = (_9,);
_4 = (RET.0,);
_6 = _3 | _3;
_3 = _6;
RET = (_9,);
RET = (_9,);
_4 = (_9,);
_8 = !_1;
_12 = (-35_i8) & 81_i8;
_4.0 = [(-5797614479860886688_i64),(-2625528125091484045_i64),3774303645352559415_i64,(-1841070648415154552_i64)];
_3 = _1;
_9 = [4219350282785282903_i64,6985632249955378572_i64,(-3044730691728379565_i64),(-3077914152106737650_i64)];
_5 = _3 & _3;
_2 = _6 != _5;
_5 = _2 & _2;
_3 = _2;
_8 = !_2;
_14.fld0.fld5 = [6063087867442497731_i64,6724553841629315908_i64,(-5628480949174824299_i64)];
Goto(bb3)
}
bb3 = {
_13 = _7;
_14.fld0.fld4 = -(-31020_i16);
RET.0 = [(-1426579999723766211_i64),(-585757633006922906_i64),3029798096635277630_i64,6692645274854685255_i64];
_4.0 = [6268958017905371679_i64,(-1158099094475123777_i64),(-7423151513029605991_i64),3169216891443492666_i64];
_10 = !129509301684302883692629237522075256267_u128;
_4 = (RET.0,);
_2 = !_5;
RET = (_9,);
_14.fld0.fld0 = [(-45744502625273800449193746264586659238_i128),(-30166084321383947148733075746614347058_i128)];
_14.fld0.fld2 = 98_isize;
_14.fld0.fld4 = 8465_i16;
RET.0 = [1280601194766527076_i64,(-5611455993608946496_i64),(-171530815020641292_i64),(-5244818494942684979_i64)];
_13 = _7;
RET.0 = [840177375140068348_i64,(-8565227897885126337_i64),4730309785054932380_i64,(-1602631200452581196_i64)];
_14.fld1 = (-4329947726463865544_i64);
_4 = (_9,);
RET = (_4.0,);
Call(_4.0 = core::intrinsics::transmute(RET.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18 = '\u{e66da}';
_15 = _18;
RET.0 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1];
_8 = _5;
RET = (_4.0,);
_9 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1];
_14.fld0.fld0 = [27251990414352224243158292329254319241_i128,(-72518027348452921663681898115102394992_i128)];
_14.fld0.fld3 = 24_u8 as u128;
_12 = 0_i8 + 11_i8;
_4 = (RET.0,);
_2 = _3;
_17 = _14.fld0.fld0;
_19 = [1_usize,7827494868323825097_usize,1_usize,4_usize,9745629754629887598_usize,3478423578242284296_usize];
_12 = _14.fld1 as i8;
_14.fld0.fld4 = (-16136_i16);
_14.fld0.fld0 = [(-146875155746103220732480404550316914903_i128),167178709438661154350187850323717633089_i128];
_17 = [86957676056447509488714634513211844425_i128,156991114284276997760661986030326849934_i128];
_14.fld0.fld4 = _14.fld0.fld2 as i16;
_8 = !_3;
_22 = 14777284475001769440_u64 as u16;
_14.fld0.fld5 = [_14.fld1,_14.fld1,_14.fld1];
_12 = 753509952_u32 as i8;
_8 = _5;
match _14.fld1 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
340282366920938463459044659705304345912 => bb11,
_ => bb10
}
}
bb5 = {
_13 = _7;
_14.fld0.fld4 = -(-31020_i16);
RET.0 = [(-1426579999723766211_i64),(-585757633006922906_i64),3029798096635277630_i64,6692645274854685255_i64];
_4.0 = [6268958017905371679_i64,(-1158099094475123777_i64),(-7423151513029605991_i64),3169216891443492666_i64];
_10 = !129509301684302883692629237522075256267_u128;
_4 = (RET.0,);
_2 = !_5;
RET = (_9,);
_14.fld0.fld0 = [(-45744502625273800449193746264586659238_i128),(-30166084321383947148733075746614347058_i128)];
_14.fld0.fld2 = 98_isize;
_14.fld0.fld4 = 8465_i16;
RET.0 = [1280601194766527076_i64,(-5611455993608946496_i64),(-171530815020641292_i64),(-5244818494942684979_i64)];
_13 = _7;
RET.0 = [840177375140068348_i64,(-8565227897885126337_i64),4730309785054932380_i64,(-1602631200452581196_i64)];
_14.fld1 = (-4329947726463865544_i64);
_4 = (_9,);
RET = (_4.0,);
Call(_4.0 = core::intrinsics::transmute(RET.0), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_6 = _2;
_4 = RET;
RET.0 = _4.0;
_4 = (RET.0,);
_4 = (_9,);
RET = (_9,);
_4 = (RET.0,);
_6 = _3 | _3;
_3 = _6;
RET = (_9,);
RET = (_9,);
_4 = (_9,);
_8 = !_1;
_12 = (-35_i8) & 81_i8;
_4.0 = [(-5797614479860886688_i64),(-2625528125091484045_i64),3774303645352559415_i64,(-1841070648415154552_i64)];
_3 = _1;
_9 = [4219350282785282903_i64,6985632249955378572_i64,(-3044730691728379565_i64),(-3077914152106737650_i64)];
_5 = _3 & _3;
_2 = _6 != _5;
_5 = _2 & _2;
_3 = _2;
_8 = !_2;
_14.fld0.fld5 = [6063087867442497731_i64,6724553841629315908_i64,(-5628480949174824299_i64)];
Goto(bb3)
}
bb7 = {
_5 = _1;
_3 = _8;
_4 = (_9,);
_5 = _2 == _6;
_4 = (_9,);
RET.0 = [(-9173297740774262062_i64),(-6373695630138129463_i64),(-7435212678896593438_i64),912472433910593646_i64];
_8 = !_1;
_4.0 = [(-4930949523803703365_i64),(-6685391475407077436_i64),1869494175593551696_i64,(-6439466950350147454_i64)];
RET = (_4.0,);
_8 = _1;
_7 = [9889694802723283016_usize,8555356416577461932_usize,1_usize,2_usize,3_usize,11609789511507677147_usize];
_5 = _1;
_8 = !_2;
RET.0 = [(-4943071965876223671_i64),3172197838486251750_i64,(-1061918269707926101_i64),(-7775873398870254706_i64)];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_4 = RET;
_24.fld4.fld0 = _5;
RET = (_4.0,);
_10 = _14.fld0.fld4 as u128;
_14.fld0.fld2 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_14.fld0.fld2 = _22 as isize;
_24.fld4.fld5 = 14954488262420126819_usize as f64;
_9 = _4.0;
_24.fld0.0 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1];
Goto(bb12)
}
bb12 = {
_4.0 = _24.fld0.0;
_24.fld4.fld1 = [_14.fld0.fld4,_14.fld0.fld4,_14.fld0.fld4];
_24.fld0.0 = _9;
_14.fld0.fld2 = (-9223372036854775808_isize);
match _14.fld0.fld2 {
340282366920938463454151235394913435648 => bb13,
_ => bb8
}
}
bb13 = {
_19 = [6_usize,6_usize,5_usize,7_usize,10687155295739127642_usize,1_usize];
_13 = [9578586290216965672_usize,8629479641742681640_usize,1469872700916835754_usize,2234666206241271361_usize,0_usize,3008518375477829678_usize];
_21 = [6_usize,6_usize,17681252887019270314_usize,1_usize,12452942429328756583_usize,0_usize];
_24.fld4.fld4 = !8123587859787828537_u64;
_24.fld4.fld1 = [_14.fld0.fld4,_14.fld0.fld4,_14.fld0.fld4];
_9 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1];
_24.fld4.fld5 = 237_u8 as f64;
_10 = (-164869378990737189077172451180796555069_i128) as u128;
_17 = [(-60690654707019909977552626903416829210_i128),(-125204627641966763601216210260073141457_i128)];
_4.0 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1];
_25 = _14.fld0.fld5;
match _14.fld0.fld2 {
0 => bb5,
1 => bb4,
2 => bb7,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
340282366920938463454151235394913435648 => bb19,
_ => bb18
}
}
bb14 = {
_4.0 = _24.fld0.0;
_24.fld4.fld1 = [_14.fld0.fld4,_14.fld0.fld4,_14.fld0.fld4];
_24.fld0.0 = _9;
_14.fld0.fld2 = (-9223372036854775808_isize);
match _14.fld0.fld2 {
340282366920938463454151235394913435648 => bb13,
_ => bb8
}
}
bb15 = {
_4 = RET;
_24.fld4.fld0 = _5;
RET = (_4.0,);
_10 = _14.fld0.fld4 as u128;
_14.fld0.fld2 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_14.fld0.fld2 = _22 as isize;
_24.fld4.fld5 = 14954488262420126819_usize as f64;
_9 = _4.0;
_24.fld0.0 = [_14.fld1,_14.fld1,_14.fld1,_14.fld1];
Goto(bb12)
}
bb16 = {
Return()
}
bb17 = {
_5 = _1;
_3 = _8;
_4 = (_9,);
_5 = _2 == _6;
_4 = (_9,);
RET.0 = [(-9173297740774262062_i64),(-6373695630138129463_i64),(-7435212678896593438_i64),912472433910593646_i64];
_8 = !_1;
_4.0 = [(-4930949523803703365_i64),(-6685391475407077436_i64),1869494175593551696_i64,(-6439466950350147454_i64)];
RET = (_4.0,);
_8 = _1;
_7 = [9889694802723283016_usize,8555356416577461932_usize,1_usize,2_usize,3_usize,11609789511507677147_usize];
_5 = _1;
_8 = !_2;
RET.0 = [(-4943071965876223671_i64),3172197838486251750_i64,(-1061918269707926101_i64),(-7775873398870254706_i64)];
Goto(bb2)
}
bb18 = {
Return()
}
bb19 = {
_14.fld0.fld4 = -26675_i16;
_9 = _4.0;
_7 = _13;
_14.fld1 = _15 as i64;
_23 = _25;
_20 = _18;
_12 = _14.fld0.fld4 as i8;
_24.fld4.fld4 = !16267871006280550873_u64;
_14.fld0.fld3 = _10;
_12 = (-46_i8) >> _24.fld4.fld4;
_19 = [3_usize,7_usize,6_usize,2_usize,10567144864135217033_usize,6731786183257981698_usize];
_24.fld2 = (-156380450102191400606356056714186368538_i128) + (-118087057700121666369431802800486589980_i128);
_17 = [_24.fld2,_24.fld2];
_4 = (RET.0,);
_20 = _15;
_23 = _25;
RET = _24.fld0;
_24.fld2 = (-163500766267838346607956136161987367426_i128) << _22;
_24.fld4.fld5 = (-2031489285_i32) as f64;
_8 = !_3;
_24.fld4.fld5 = _24.fld4.fld4 as f64;
_24.fld4.fld2 = core::ptr::addr_of!(_22);
_13 = _21;
_4 = (RET.0,);
_24.fld4.fld3 = core::ptr::addr_of!(_26);
RET = (_24.fld0.0,);
_2 = !_24.fld4.fld0;
_13 = _21;
Goto(bb20)
}
bb20 = {
Call(_30 = dump_var(11_usize, 2_usize, Move(_2), 21_usize, Move(_21), 5_usize, Move(_5), 10_usize, Move(_10)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_30 = dump_var(11_usize, 6_usize, Move(_6), 12_usize, Move(_12), 23_usize, Move(_23), 18_usize, Move(_18)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_30 = dump_var(11_usize, 19_usize, Move(_19), 3_usize, Move(_3), 31_usize, _31, 31_usize, _31), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: bool,mut _2: *const bool,mut _3: bool,mut _4: *const bool,mut _5: bool,mut _6: (u8,),mut _7: i128,mut _8: i128,mut _9: i128) -> usize {
mir! {
type RET = usize;
let _10: [usize; 1];
let _11: u128;
let _12: f32;
let _13: (*const u16, ([i64; 4],));
let _14: bool;
let _15: [i128; 2];
let _16: [i16; 3];
let _17: bool;
let _18: f64;
let _19: [i64; 3];
let _20: f64;
let _21: isize;
let _22: *const i16;
let _23: ();
let _24: ();
{
_1 = _5;
_7 = _6.0 as i128;
RET = 3395107760644863601_usize * 15615937194360884561_usize;
_5 = !_3;
RET = 4_usize;
RET = !4017856728605333860_usize;
_5 = _9 < _9;
_8 = _7;
_7 = _9 - _9;
RET = 1_usize;
match RET {
0 => bb1,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
1 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = '\u{670eb}' as usize;
_2 = core::ptr::addr_of!(_3);
_1 = !(*_2);
RET = 16497506208179407893_usize ^ 6615110527982788384_usize;
_6.0 = 147_u8;
RET = 13068302760911035048_usize;
RET = _1 as usize;
_10 = [RET];
RET = (-124_i8) as usize;
_1 = (*_2);
_9 = _7;
RET = 794984949866972745_usize;
RET = !13529353772196397513_usize;
_13.1.0 = [(-1031279437690994349_i64),1107160559275438428_i64,4499267554365277363_i64,1122052581683400582_i64];
Goto(bb9)
}
bb9 = {
_10 = [RET];
_13.1.0 = [6101234749361319645_i64,(-7830739452391358199_i64),1202990498144747787_i64,2538385477889577199_i64];
_10 = [RET];
Goto(bb10)
}
bb10 = {
_12 = RET as f32;
_10 = [RET];
_11 = 142623974343722551315387327854727065320_u128;
_11 = !156419450101052444722383845610090520363_u128;
_13.1.0 = [(-3817204473484459672_i64),7657158817428741387_i64,(-8182823335247714598_i64),(-8482428507323143311_i64)];
RET = 7537591598019840359_usize;
_9 = 4576124239445138659_i64 as i128;
_3 = _5;
RET = !1_usize;
_14 = _3 & _5;
_9 = _12 as i128;
_10 = [RET];
_13.1.0 = [(-3733621422661598812_i64),7475075746583604565_i64,(-4842379500521918866_i64),6410873584551641076_i64];
RET = !5362829749100315401_usize;
_4 = _2;
_14 = (*_2);
_11 = !125511651346706876977687910666406834914_u128;
_6.0 = _7 as u8;
_17 = (*_2);
_4 = _2;
_16 = [497_i16,(-27719_i16),7360_i16];
_8 = _7;
_18 = 10480_u16 as f64;
Call(RET = core::intrinsics::bswap(5_usize), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_6.0 = 181_u8 >> _7;
_5 = _17;
_7 = _8;
Call(_11 = fn13(_6, _6.0, _7, _4, (*_2), _6.0, _6.0, _4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_13.1.0 = [370479761960539972_i64,(-8096914538021955722_i64),(-7583566162997798631_i64),8955688812113828012_i64];
_17 = _6.0 >= _6.0;
_8 = _6.0 as i128;
_19 = [(-6068573386121766211_i64),(-6366132011782232077_i64),(-6468757300589334887_i64)];
_4 = core::ptr::addr_of!(_1);
_18 = 106_i8 as f64;
_9 = _8;
_6 = (208_u8,);
Goto(bb13)
}
bb13 = {
_13.1.0 = [3676556007053898281_i64,(-4104319645176686407_i64),3290093670602052071_i64,(-3813678689656856744_i64)];
_12 = 56_isize as f32;
_9 = _7 ^ _8;
_6 = (135_u8,);
_16 = [(-10898_i16),(-7096_i16),31395_i16];
_16 = [(-24636_i16),(-17022_i16),19938_i16];
_10 = [RET];
_6 = (190_u8,);
_7 = _8;
_17 = !_1;
_3 = (*_4) & _5;
_1 = !_5;
_15 = [_8,_9];
_8 = _9;
_13.1.0 = [(-8032969849669888813_i64),(-6405409691212275188_i64),6095774966674715080_i64,(-2563510669190567873_i64)];
_9 = _7;
_13.1.0 = [3007245010273588725_i64,3040657804494935062_i64,4714006659786125496_i64,5188790920394716707_i64];
_16 = [15674_i16,18111_i16,7704_i16];
_21 = 110_isize + 51_isize;
Goto(bb14)
}
bb14 = {
_8 = _9;
_13.1.0 = [(-548198243628788734_i64),8746532601112969787_i64,(-3603487001147581614_i64),4528743607704012192_i64];
RET = !0_usize;
_2 = core::ptr::addr_of!((*_4));
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(12_usize, 19_usize, Move(_19), 11_usize, Move(_11), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(12_usize, 5_usize, Move(_5), 9_usize, Move(_9), 1_usize, Move(_1), 24_usize, _24), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: (u8,),mut _2: u8,mut _3: i128,mut _4: *const bool,mut _5: bool,mut _6: u8,mut _7: u8,mut _8: *const bool) -> u128 {
mir! {
type RET = u128;
let _9: f32;
let _10: isize;
let _11: [usize; 1];
let _12: f64;
let _13: [usize; 6];
let _14: [i64; 3];
let _15: [usize; 6];
let _16: [i128; 2];
let _17: u32;
let _18: [i128; 2];
let _19: [i64; 3];
let _20: *const f32;
let _21: Adt39;
let _22: isize;
let _23: isize;
let _24: ();
let _25: ();
{
RET = 217042658272902751036681979674337285796_u128;
_1.0 = _7 + _2;
_5 = true;
_9 = _7 as f32;
RET = _5 as u128;
_6 = _1.0;
_7 = 6_usize as u8;
_7 = _1.0 - _2;
_5 = _7 >= _7;
_8 = _4;
_10 = -9223372036854775807_isize;
_6 = '\u{2997f}' as u8;
_3 = 19612348428619036454732384749319091913_i128;
_9 = RET as f32;
_8 = core::ptr::addr_of!(_5);
_10 = (-9223372036854775808_isize);
RET = 249430417688495427531792161499532980587_u128;
_7 = 1290813478_i32 as u8;
_7 = 2582752876558982070_u64 as u8;
_1.0 = _2;
_11 = [5_usize];
_6 = 2096_i16 as u8;
_7 = 9610082354885748877_u64 as u8;
_4 = core::ptr::addr_of!(_5);
_2 = _9 as u8;
Goto(bb1)
}
bb1 = {
_2 = _1.0 >> _1.0;
_7 = (-3465868894231697846_i64) as u8;
_6 = (-11028_i16) as u8;
_12 = RET as f64;
RET = 293471652737144420510432498319534959647_u128 * 56087460395343760619102808003348101645_u128;
_1.0 = 32581_i16 as u8;
_12 = _10 as f64;
_2 = _1.0 + _1.0;
_5 = RET <= RET;
_12 = 62_i8 as f64;
_5 = true;
Goto(bb2)
}
bb2 = {
_3 = '\u{13cc7}' as i128;
_1.0 = _6 + _2;
_7 = _1.0;
_7 = _9 as u8;
_11 = [794906915051851713_usize];
_7 = _1.0;
_5 = false;
_12 = _9 as f64;
_9 = (-1163817009901022753_i64) as f32;
_6 = _7;
_13 = [8170234308275182520_usize,344996147976403797_usize,0_usize,12505550226997216807_usize,0_usize,0_usize];
Call(_7 = fn14(_6, _8, _9, (*_4), (*_4), _8, _10, _1, (*_4), _1.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = !_6;
_1 = (_7,);
_1.0 = _7 - _7;
_15 = [7_usize,4_usize,0_usize,6_usize,2_usize,16985508829806366563_usize];
_13 = [9841808170581982476_usize,5_usize,4492794443729839561_usize,7980571870808849454_usize,6_usize,3_usize];
_16 = [_3,_3];
_12 = 859444572_u32 as f64;
Goto(bb4)
}
bb4 = {
_12 = 1431066018_i32 as f64;
_17 = 1618546795_u32 | 2964995217_u32;
_13 = _15;
_14 = [6924040261615854199_i64,3541991528524844123_i64,3592419608410383785_i64];
_16 = [_3,_3];
_16 = [_3,_3];
_15 = [7534951423207099957_usize,5_usize,7_usize,3_usize,7932265674485599842_usize,4589134699910408687_usize];
match _10 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb5 = {
_7 = !_6;
_1 = (_7,);
_1.0 = _7 - _7;
_15 = [7_usize,4_usize,0_usize,6_usize,2_usize,16985508829806366563_usize];
_13 = [9841808170581982476_usize,5_usize,4492794443729839561_usize,7980571870808849454_usize,6_usize,3_usize];
_16 = [_3,_3];
_12 = 859444572_u32 as f64;
Goto(bb4)
}
bb6 = {
_3 = '\u{13cc7}' as i128;
_1.0 = _6 + _2;
_7 = _1.0;
_7 = _9 as u8;
_11 = [794906915051851713_usize];
_7 = _1.0;
_5 = false;
_12 = _9 as f64;
_9 = (-1163817009901022753_i64) as f32;
_6 = _7;
_13 = [8170234308275182520_usize,344996147976403797_usize,0_usize,12505550226997216807_usize,0_usize,0_usize];
Call(_7 = fn14(_6, _8, _9, (*_4), (*_4), _8, _10, _1, (*_4), _1.0), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_2 = _1.0 >> _1.0;
_7 = (-3465868894231697846_i64) as u8;
_6 = (-11028_i16) as u8;
_12 = RET as f64;
RET = 293471652737144420510432498319534959647_u128 * 56087460395343760619102808003348101645_u128;
_1.0 = 32581_i16 as u8;
_12 = _10 as f64;
_2 = _1.0 + _1.0;
_5 = RET <= RET;
_12 = 62_i8 as f64;
_5 = true;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_14 = [7385508854848884767_i64,(-1657493593787914616_i64),(-694082644241270975_i64)];
RET = !117284746101843669810289677231456426424_u128;
_7 = _1.0 << _1.0;
_10 = (-4371412111884816400_i64) as isize;
RET = 278028471573668577799162970397556321104_u128 + 104397991747068632150195910273085343652_u128;
_3 = -(-37753981224354019929201459421951933352_i128);
_16 = [_3,_3];
_11 = [17250506080309071161_usize];
_2 = 3971246471752482969_u64 as u8;
_8 = _4;
_17 = 3441742613_u32;
_20 = core::ptr::addr_of!(_9);
_21.fld2.0 = [(-5681965806802594372_i64),(-1706728136044102003_i64),(-6325968711812965063_i64),(-6157754098149909615_i64)];
_20 = core::ptr::addr_of!((*_20));
_11 = [0_usize];
_6 = !_7;
_5 = RET <= RET;
_14 = [(-569461240581395458_i64),2726664676101626476_i64,(-7036963694619372061_i64)];
_16 = [_3,_3];
_21.fld2.0 = [8878450382917405083_i64,(-8282205313782122016_i64),2060179655166409701_i64,(-9033589941124018655_i64)];
RET = 276379033210830427243282584603927382350_u128 ^ 161633816866396074546276345281689988944_u128;
_18 = [_3,_3];
match _17 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb4,
3441742613 => bb12,
_ => bb11
}
}
bb11 = {
_3 = '\u{13cc7}' as i128;
_1.0 = _6 + _2;
_7 = _1.0;
_7 = _9 as u8;
_11 = [794906915051851713_usize];
_7 = _1.0;
_5 = false;
_12 = _9 as f64;
_9 = (-1163817009901022753_i64) as f32;
_6 = _7;
_13 = [8170234308275182520_usize,344996147976403797_usize,0_usize,12505550226997216807_usize,0_usize,0_usize];
Call(_7 = fn14(_6, _8, _9, (*_4), (*_4), _8, _10, _1, (*_4), _1.0), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
RET = (*_20) as u128;
_13 = [18233838950656929874_usize,7_usize,4_usize,3_usize,6065888614980582744_usize,7_usize];
_1 = (_7,);
_12 = _17 as f64;
Goto(bb13)
}
bb13 = {
_20 = core::ptr::addr_of!(_9);
_5 = false | false;
_9 = 41201_u16 as f32;
match _17 {
0 => bb10,
3441742613 => bb15,
_ => bb14
}
}
bb14 = {
_7 = !_6;
_1 = (_7,);
_1.0 = _7 - _7;
_15 = [7_usize,4_usize,0_usize,6_usize,2_usize,16985508829806366563_usize];
_13 = [9841808170581982476_usize,5_usize,4492794443729839561_usize,7980571870808849454_usize,6_usize,3_usize];
_16 = [_3,_3];
_12 = 859444572_u32 as f64;
Goto(bb4)
}
bb15 = {
_17 = 1405711654_u32;
_21.fld0 = [16725947645398959776_usize];
_13 = [4_usize,0_usize,2_usize,12485952341226188045_usize,3112499369564741201_usize,3_usize];
_23 = (-7455320643476870360_i64) as isize;
_20 = core::ptr::addr_of!((*_20));
_9 = _12 as f32;
_21.fld2.0 = [(-2102943011276294330_i64),8178402698656729616_i64,2128906538128996268_i64,3861847712948676952_i64];
_1 = (_7,);
_14 = [(-4308910957905078916_i64),(-3812161946836311219_i64),(-865943738271223806_i64)];
_19 = _14;
_14 = _19;
_4 = _8;
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(13_usize, 23_usize, Move(_23), 1_usize, Move(_1), 7_usize, Move(_7), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(13_usize, 10_usize, Move(_10), 2_usize, Move(_2), 17_usize, Move(_17), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: u8,mut _2: *const bool,mut _3: f32,mut _4: bool,mut _5: bool,mut _6: *const bool,mut _7: isize,mut _8: (u8,),mut _9: bool,mut _10: u8) -> u8 {
mir! {
type RET = u8;
let _11: u32;
let _12: [usize; 1];
let _13: ([i64; 4],);
let _14: bool;
let _15: ();
let _16: ();
{
_1 = _10 - _8.0;
_10 = _1;
_5 = _4;
_5 = !_4;
_3 = 229247284_i32 as f32;
_12 = [7_usize];
_2 = core::ptr::addr_of!(_5);
_7 = _3 as isize;
_9 = _4;
_10 = !_1;
_7 = 1_isize;
RET = (*_2) as u8;
_1 = !RET;
_7 = _4 as isize;
_1 = _10;
_9 = _1 < RET;
_3 = (-19_i8) as f32;
Call(_8 = fn15(_1, _9, _1, (*_2), _5, _10, _1, _2, _6, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = core::ptr::addr_of!((*_2));
RET = _8.0;
RET = _10;
RET = _8.0 * _8.0;
_11 = 1088936672_u32;
_10 = RET;
_3 = _11 as f32;
_12 = [0_usize];
_3 = 276536565270300744256617827127347179879_u128 as f32;
_5 = !_9;
Goto(bb2)
}
bb2 = {
Call(_15 = dump_var(14_usize, 5_usize, Move(_5), 12_usize, Move(_12), 9_usize, Move(_9), 8_usize, Move(_8)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: u8,mut _2: bool,mut _3: u8,mut _4: bool,mut _5: bool,mut _6: u8,mut _7: u8,mut _8: *const bool,mut _9: *const bool,mut _10: u8) -> (u8,) {
mir! {
type RET = (u8,);
let _11: ();
let _12: ();
{
RET.0 = _7;
RET.0 = _3 ^ _1;
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(15_usize, 6_usize, Move(_6), 1_usize, Move(_1), 7_usize, Move(_7), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: bool,mut _2: bool,mut _3: *const bool,mut _4: bool,mut _5: ([i64; 4],),mut _6: bool,mut _7: u8,mut _8: *mut (u8,)) -> ([i64; 4],) {
mir! {
type RET = ([i64; 4],);
let _9: &'static i16;
let _10: f32;
let _11: f64;
let _12: (u8,);
let _13: u8;
let _14: i16;
let _15: Adt46;
let _16: char;
let _17: f32;
let _18: (u8,);
let _19: [i16; 3];
let _20: isize;
let _21: [i64; 3];
let _22: [usize; 1];
let _23: isize;
let _24: isize;
let _25: [i128; 2];
let _26: *const *mut u8;
let _27: isize;
let _28: [usize; 1];
let _29: Adt53;
let _30: isize;
let _31: isize;
let _32: ([i64; 4],);
let _33: u32;
let _34: i64;
let _35: u16;
let _36: char;
let _37: isize;
let _38: ([i64; 4],);
let _39: *const bool;
let _40: [i16; 3];
let _41: u128;
let _42: ();
let _43: ();
{
_5.0 = [(-6087053226538925078_i64),(-1634102721195475740_i64),1185309523073171366_i64,(-4618078184628676680_i64)];
_3 = core::ptr::addr_of!(_4);
RET = _5;
_5.0 = [(-3772630797387330967_i64),7077197882147366874_i64,(-8624550036181381650_i64),9044265320347081571_i64];
_5 = (RET.0,);
_5 = (RET.0,);
RET = _5;
_4 = !_1;
_4 = _6;
_5.0 = RET.0;
_7 = !150_u8;
RET.0 = [(-3986399091304960980_i64),(-6749408212943372530_i64),1140221614114781019_i64,6447799675448810158_i64];
_4 = !_2;
_5 = RET;
_10 = (-13714_i16) as f32;
_12 = (_7,);
_12 = (_7,);
_8 = core::ptr::addr_of_mut!(_12);
RET.0 = [6276498430093542289_i64,2861527688635687061_i64,8550282369283491606_i64,(-7428371331684554859_i64)];
Call(_11 = fn17(_2, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = (_7,);
RET.0 = [2445498098136426196_i64,8336650592139182757_i64,4938227007198781918_i64,168619786304871670_i64];
_5.0 = [9214708699463657769_i64,1435993429998351234_i64,8431094730507619022_i64,2687934290658525930_i64];
RET.0 = _5.0;
_6 = _1;
_13 = (*_8).0;
_13 = _12.0 + (*_8).0;
RET.0 = [(-9062319190940964257_i64),2391102454114875788_i64,(-6138504404330744216_i64),(-4155039995882611491_i64)];
RET = _5;
_12 = (_13,);
_12 = (_13,);
RET = (_5.0,);
_7 = !_12.0;
_12 = (_13,);
RET.0 = _5.0;
_16 = '\u{3f460}';
_14 = (-19170_i16) - 22773_i16;
_3 = core::ptr::addr_of!((*_3));
_12 = (_7,);
RET.0 = [7567550408346084436_i64,7093984378729883490_i64,(-2739276780331808805_i64),(-8181585051293549730_i64)];
_9 = &_14;
Goto(bb2)
}
bb2 = {
_3 = core::ptr::addr_of!(_4);
_4 = _6;
RET = (_5.0,);
_8 = core::ptr::addr_of_mut!((*_8));
RET = (_5.0,);
_4 = _1;
_8 = core::ptr::addr_of_mut!((*_8));
_18.0 = (*_8).0 << _13;
_6 = _12.0 <= _18.0;
_15 = Adt46::Variant0 { fld0: (-13_i8) };
_6 = _4;
Goto(bb3)
}
bb3 = {
_6 = _4;
_15 = Adt46::Variant0 { fld0: 120_i8 };
_5 = RET;
RET = (_5.0,);
_6 = _2 | _2;
_10 = 22_i8 as f32;
_19 = [(*_9),(*_9),_14];
_2 = _6;
_4 = _1 | _1;
Goto(bb4)
}
bb4 = {
_6 = (*_3);
_12 = _18;
_4 = _6;
place!(Field::<i8>(Variant(_15, 0), 0)) = (*_3) as i8;
_18.0 = (-655786569_i32) as u8;
RET.0 = [5775129292169596129_i64,(-5839044116399658689_i64),8067899525091296629_i64,(-5820735733199692695_i64)];
_12 = (_13,);
_17 = -_10;
RET = (_5.0,);
_6 = (*_3);
RET = (_5.0,);
_12 = _18;
_14 = (-23938_i16);
Goto(bb5)
}
bb5 = {
RET.0 = [(-2336432707397826765_i64),8778782651689312276_i64,(-7399305927990140060_i64),(-7927642445944376432_i64)];
_1 = (*_3) ^ _2;
place!(Field::<i8>(Variant(_15, 0), 0)) = (-33_i8);
_4 = _6;
_6 = _2 != _1;
_25 = [(-109495768448109421448465633512288918648_i128),151706266181728007288108836712070536074_i128];
_9 = &_14;
_8 = core::ptr::addr_of_mut!((*_8));
_9 = &(*_9);
_21 = [4031470752749146489_i64,3227369389997036768_i64,(-7577423465480306685_i64)];
match (*_9) {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463463374607431768187518 => bb10,
_ => bb9
}
}
bb6 = {
_6 = (*_3);
_12 = _18;
_4 = _6;
place!(Field::<i8>(Variant(_15, 0), 0)) = (*_3) as i8;
_18.0 = (-655786569_i32) as u8;
RET.0 = [5775129292169596129_i64,(-5839044116399658689_i64),8067899525091296629_i64,(-5820735733199692695_i64)];
_12 = (_13,);
_17 = -_10;
RET = (_5.0,);
_6 = (*_3);
RET = (_5.0,);
_12 = _18;
_14 = (-23938_i16);
Goto(bb5)
}
bb7 = {
_6 = _4;
_15 = Adt46::Variant0 { fld0: 120_i8 };
_5 = RET;
RET = (_5.0,);
_6 = _2 | _2;
_10 = 22_i8 as f32;
_19 = [(*_9),(*_9),_14];
_2 = _6;
_4 = _1 | _1;
Goto(bb4)
}
bb8 = {
_3 = core::ptr::addr_of!(_4);
_4 = _6;
RET = (_5.0,);
_8 = core::ptr::addr_of_mut!((*_8));
RET = (_5.0,);
_4 = _1;
_8 = core::ptr::addr_of_mut!((*_8));
_18.0 = (*_8).0 << _13;
_6 = _12.0 <= _18.0;
_15 = Adt46::Variant0 { fld0: (-13_i8) };
_6 = _4;
Goto(bb3)
}
bb9 = {
_12 = (_7,);
RET.0 = [2445498098136426196_i64,8336650592139182757_i64,4938227007198781918_i64,168619786304871670_i64];
_5.0 = [9214708699463657769_i64,1435993429998351234_i64,8431094730507619022_i64,2687934290658525930_i64];
RET.0 = _5.0;
_6 = _1;
_13 = (*_8).0;
_13 = _12.0 + (*_8).0;
RET.0 = [(-9062319190940964257_i64),2391102454114875788_i64,(-6138504404330744216_i64),(-4155039995882611491_i64)];
RET = _5;
_12 = (_13,);
_12 = (_13,);
RET = (_5.0,);
_7 = !_12.0;
_12 = (_13,);
RET.0 = _5.0;
_16 = '\u{3f460}';
_14 = (-19170_i16) - 22773_i16;
_3 = core::ptr::addr_of!((*_3));
_12 = (_7,);
RET.0 = [7567550408346084436_i64,7093984378729883490_i64,(-2739276780331808805_i64),(-8181585051293549730_i64)];
_9 = &_14;
Goto(bb2)
}
bb10 = {
_4 = _2 > _2;
_2 = !_1;
_23 = -(-9223372036854775808_isize);
_5.0 = [1252270688198520589_i64,(-5701759159692504011_i64),7338301226489342253_i64,(-8617072932068852903_i64)];
_9 = &(*_9);
_4 = _2 >= _1;
_17 = _10;
_9 = &(*_9);
_20 = _23 ^ _23;
_18.0 = (-1820225590_i32) as u8;
_19 = [(*_9),(*_9),(*_9)];
_27 = 107451386379473461770790051491456896946_u128 as isize;
_21 = [2280327907612713302_i64,3241253922516596380_i64,2926101406483057280_i64];
_8 = core::ptr::addr_of_mut!(_12);
_20 = _27;
_15 = Adt46::Variant0 { fld0: 104_i8 };
_16 = '\u{d69cf}';
_7 = !_13;
_23 = _27;
_22 = [0_usize];
_6 = !_2;
RET = _5;
_29.fld1 = !9024937077135800771_i64;
Goto(bb11)
}
bb11 = {
place!(Field::<i8>(Variant(_15, 0), 0)) = 89_i8;
_27 = 313943108850826103485233597147926087199_u128 as isize;
SetDiscriminant(_15, 0);
_22 = [1_usize];
_30 = _23;
match _14 {
340282366920938463463374607431768187518 => bb12,
_ => bb5
}
}
bb12 = {
_3 = core::ptr::addr_of!(_1);
_2 = !_1;
_2 = _4 <= _1;
_31 = !_30;
RET = (_5.0,);
_11 = (*_9) as f64;
_28 = [6_usize];
match (*_9) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
340282366920938463463374607431768187518 => bb13,
_ => bb5
}
}
bb13 = {
_33 = 2062923710_u32;
_33 = !1060950441_u32;
_3 = core::ptr::addr_of!(_6);
_32.0 = [_29.fld1,_29.fld1,_29.fld1,_29.fld1];
_34 = _29.fld1 + _29.fld1;
_29.fld0.fld4 = (*_9);
_12 = (_7,);
_29.fld0.fld0 = [(-109500065294569047906183431410640506551_i128),(-2569444593019047014506632891105570664_i128)];
_20 = !_27;
_29.fld0.fld0 = [(-82642741266703370744713549983169496062_i128),70339194743669649468858246688625539061_i128];
_9 = &(*_9);
_2 = _1;
_7 = !_13;
_15 = Adt46::Variant0 { fld0: 44_i8 };
_16 = '\u{f7c09}';
_20 = _11 as isize;
_29.fld0.fld0 = _25;
_35 = 280_u16 << _13;
_8 = core::ptr::addr_of_mut!(_12);
_18 = (_7,);
_19 = [(*_9),(*_9),(*_9)];
Goto(bb14)
}
bb14 = {
_16 = '\u{95593}';
_29.fld0.fld5 = _21;
_38 = _5;
_5.0 = _32.0;
_12 = _18;
_17 = _10 * _10;
_28 = [4_usize];
_6 = _2;
_36 = _16;
_1 = _4;
_37 = _30 | _31;
_25 = [(-119418495495339756224540442081769635213_i128),(-149200507880329669587865660869481345208_i128)];
place!(Field::<i8>(Variant(_15, 0), 0)) = -(-8_i8);
RET = (_38.0,);
SetDiscriminant(_15, 1);
_24 = _20 & _37;
_35 = 29341_u16;
_14 = -_29.fld0.fld4;
_27 = !_37;
_12.0 = _17 as u8;
_38 = (_5.0,);
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(16_usize, 31_usize, Move(_31), 19_usize, Move(_19), 34_usize, Move(_34), 24_usize, Move(_24)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(16_usize, 27_usize, Move(_27), 35_usize, Move(_35), 7_usize, Move(_7), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_42 = dump_var(16_usize, 1_usize, Move(_1), 2_usize, Move(_2), 18_usize, Move(_18), 32_usize, Move(_32)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_42 = dump_var(16_usize, 5_usize, Move(_5), 13_usize, Move(_13), 43_usize, _43, 43_usize, _43), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: bool,mut _2: bool) -> f64 {
mir! {
type RET = f64;
let _3: isize;
let _4: u32;
let _5: *mut (u8,);
let _6: bool;
let _7: [i64; 3];
let _8: bool;
let _9: i128;
let _10: [usize; 6];
let _11: [i128; 2];
let _12: f32;
let _13: u8;
let _14: [i128; 2];
let _15: [i64; 3];
let _16: [i16; 3];
let _17: bool;
let _18: u16;
let _19: Adt53;
let _20: char;
let _21: [i16; 3];
let _22: u128;
let _23: f32;
let _24: (*const u16, ([i64; 4],));
let _25: u8;
let _26: char;
let _27: isize;
let _28: (u8,);
let _29: isize;
let _30: Adt52;
let _31: Adt41;
let _32: Adt39;
let _33: [i128; 2];
let _34: [usize; 1];
let _35: ();
let _36: ();
{
_3 = !(-9223372036854775808_isize);
RET = 24_u8 as f64;
_1 = _2;
_3 = (-13_isize);
_1 = !_2;
_3 = (-9223372036854775808_isize);
RET = (-17220_i16) as f64;
RET = 145_u8 as f64;
_1 = _2 < _2;
_2 = _1;
RET = (-36497424055428714805920190970699612736_i128) as f64;
_1 = _2 > _2;
RET = 28509_u16 as f64;
RET = 143_u8 as f64;
_2 = !_1;
match _3 {
0 => bb1,
340282366920938463454151235394913435648 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
RET = _3 as f64;
RET = _3 as f64;
RET = 12155886359521473549_u64 as f64;
_1 = _2;
_3 = (-103_isize);
_1 = _2;
RET = 8301027486682026585_i64 as f64;
_4 = 4193287062_u32 + 2481860727_u32;
_1 = !_2;
_6 = !_2;
Goto(bb4)
}
bb4 = {
_7 = [1197535277665673329_i64,(-4883266440670614245_i64),2490633201255367094_i64];
_1 = _6;
Goto(bb5)
}
bb5 = {
_2 = !_6;
RET = 174_u8 as f64;
_1 = _6;
_3 = 62_isize;
_4 = !2509893647_u32;
RET = (-16987_i16) as f64;
_6 = _2 ^ _1;
_2 = _1;
RET = (-4117641303640450191_i64) as f64;
_7 = [(-7618237039380371010_i64),(-2178310173237449154_i64),(-694412531103978039_i64)];
_4 = !423762711_u32;
_6 = _2 < _2;
RET = _4 as f64;
_1 = _6 <= _2;
_4 = !1702634458_u32;
_3 = !9223372036854775807_isize;
RET = (-2855_i16) as f64;
RET = 40857_u16 as f64;
RET = 574136483713903239_usize as f64;
RET = 80595243082576896962701686159147452697_i128 as f64;
_1 = _2;
_2 = _6;
_2 = !_1;
_4 = !2825773236_u32;
_8 = _6;
_8 = _1;
_3 = 9223372036854775807_isize;
Goto(bb6)
}
bb6 = {
RET = _3 as f64;
_8 = _1;
RET = 9818003701456187774_u64 as f64;
_2 = !_1;
_8 = _1;
_1 = !_6;
_6 = _8 == _1;
_9 = 20050167328190382488073362676761470124_i128;
_8 = _1;
_1 = _6;
_9 = !(-13784369132010995438142149510324997558_i128);
RET = 9622339107580452866_u64 as f64;
_1 = _6 < _6;
_10 = [12220552022704713935_usize,16519613757563396164_usize,3_usize,8114685242409597566_usize,0_usize,4_usize];
RET = 25_u8 as f64;
_1 = _2;
_8 = !_2;
_4 = 2349054397_u32 - 1500155593_u32;
_4 = 4229302923_u32 & 3710975255_u32;
_1 = _8 <= _8;
match _3 {
0 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb7 = {
Return()
}
bb8 = {
_7 = [1197535277665673329_i64,(-4883266440670614245_i64),2490633201255367094_i64];
_1 = _6;
Goto(bb5)
}
bb9 = {
_11 = [_9,_9];
_10 = [2675950770318675770_usize,3_usize,7496342237850316739_usize,2_usize,7_usize,6807562733105982433_usize];
_1 = !_8;
_3 = -90_isize;
_7 = [(-248849487743722418_i64),6027309315402299125_i64,(-4362455601834171315_i64)];
RET = 27002428476114802242496765391467035778_u128 as f64;
_12 = 67728523714993715405843673916923565021_u128 as f32;
_6 = _8 ^ _2;
_11 = [_9,_9];
_6 = !_2;
_1 = !_6;
_8 = !_1;
_10 = [11811160925450364910_usize,5_usize,5_usize,0_usize,6_usize,5_usize];
_6 = _9 <= _9;
_10 = [6233146867981459668_usize,1_usize,5_usize,6_usize,12483794480286007190_usize,16059102475969467996_usize];
_14 = _11;
_3 = 9223372036854775807_isize;
_7 = [(-3365850110839342851_i64),(-5705160902847063385_i64),(-7944371975023626031_i64)];
Goto(bb10)
}
bb10 = {
RET = _4 as f64;
_10 = [4_usize,441142361271443082_usize,5_usize,7_usize,16739268725589473742_usize,2245907854169301460_usize];
_15 = [89917319465238383_i64,(-8803111458282915862_i64),6850866650654166200_i64];
_7 = _15;
_6 = _8 | _2;
_14 = [_9,_9];
_17 = _2;
_8 = _6;
_7 = [1158132018767630011_i64,439150978824467059_i64,(-6284001909962576435_i64)];
RET = _9 as f64;
_1 = _17;
_16 = [(-23505_i16),(-27555_i16),29318_i16];
_13 = !75_u8;
_19.fld0.fld4 = !153_i16;
_19.fld0.fld4 = (-11010_i16) | (-29933_i16);
_6 = _1 & _1;
_12 = (-5464520817940153416_i64) as f32;
match _3 {
9223372036854775807 => bb11,
_ => bb6
}
}
bb11 = {
_9 = (-133299420682868607873786329495591592148_i128);
_7 = [747219981702146314_i64,2433885518679208349_i64,3632131411138761768_i64];
RET = 74_i8 as f64;
_7 = [(-5291714258980801432_i64),3858471167271327220_i64,9052459359893970761_i64];
_12 = 615595638_i32 as f32;
_17 = !_6;
_19.fld0.fld2 = _3;
_19.fld0.fld0 = [_9,_9];
_6 = !_1;
match _9 {
0 => bb10,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb7,
206982946238069855589588277936176619308 => bb13,
_ => bb12
}
}
bb12 = {
RET = _3 as f64;
_8 = _1;
RET = 9818003701456187774_u64 as f64;
_2 = !_1;
_8 = _1;
_1 = !_6;
_6 = _8 == _1;
_9 = 20050167328190382488073362676761470124_i128;
_8 = _1;
_1 = _6;
_9 = !(-13784369132010995438142149510324997558_i128);
RET = 9622339107580452866_u64 as f64;
_1 = _6 < _6;
_10 = [12220552022704713935_usize,16519613757563396164_usize,3_usize,8114685242409597566_usize,0_usize,4_usize];
RET = 25_u8 as f64;
_1 = _2;
_8 = !_2;
_4 = 2349054397_u32 - 1500155593_u32;
_4 = 4229302923_u32 & 3710975255_u32;
_1 = _8 <= _8;
match _3 {
0 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb13 = {
_19.fld1 = !(-5546229947197819703_i64);
_16 = [_19.fld0.fld4,_19.fld0.fld4,_19.fld0.fld4];
_3 = _19.fld0.fld2;
_19.fld0.fld5 = _7;
_18 = 2308710969775408396_u64 as u16;
_5 = core::ptr::addr_of_mut!(_28);
_22 = 233936251606012122467623807134124307984_u128 + 238988860188711981197782986691435179837_u128;
_19.fld0.fld5 = _7;
_16 = [_19.fld0.fld4,_19.fld0.fld4,_19.fld0.fld4];
_19.fld0.fld0 = _11;
_27 = _13 as isize;
_25 = _13;
_10 = [15196671835112988838_usize,3_usize,14141566292558164333_usize,9406171046401198325_usize,0_usize,5_usize];
_9 = 147535679111026727520829690607703479075_i128;
_22 = 93839427011399203379379270777072887796_u128 & 83726859896418527299601648458529758912_u128;
_29 = !_27;
_8 = _1 != _2;
_24.0 = core::ptr::addr_of!(_18);
_14 = [_9,_9];
_17 = _1;
_28.0 = _18 as u8;
Goto(bb14)
}
bb14 = {
_28 = (_25,);
_8 = !_17;
_30.fld0 = [_9,_9];
_30.fld3 = _4 as f64;
_9 = 168439912833136584671394278727617073007_i128 >> _29;
_32.fld2.0 = [_19.fld1,_19.fld1,_19.fld1,_19.fld1];
_24.0 = core::ptr::addr_of!(_18);
_32.fld2.0 = [_19.fld1,_19.fld1,_19.fld1,_19.fld1];
_30.fld3 = -RET;
_18 = !8709_u16;
RET = _30.fld3 * _30.fld3;
_24.0 = core::ptr::addr_of!(_18);
_6 = _8;
_21 = [_19.fld0.fld4,_19.fld0.fld4,_19.fld0.fld4];
_24.1 = _32.fld2;
_19.fld0.fld0 = _14;
_26 = '\u{a2dac}';
_7 = _19.fld0.fld5;
_30.fld1.0 = !(*_5).0;
_32.fld1 = core::ptr::addr_of!(_18);
_2 = _17;
_21 = [_19.fld0.fld4,_19.fld0.fld4,_19.fld0.fld4];
_20 = _26;
_28.0 = _4 as u8;
_1 = !_17;
_28.0 = _13;
_24.1.0 = [_19.fld1,_19.fld1,_19.fld1,_19.fld1];
_33 = [_9,_9];
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(17_usize, 27_usize, Move(_27), 9_usize, Move(_9), 17_usize, Move(_17), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(17_usize, 11_usize, Move(_11), 15_usize, Move(_15), 21_usize, Move(_21), 29_usize, Move(_29)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(17_usize, 25_usize, Move(_25), 14_usize, Move(_14), 10_usize, Move(_10), 13_usize, Move(_13)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: i128,mut _2: [i64; 4],mut _3: isize,mut _4: char,mut _5: i32,mut _6: i128,mut _7: i128) -> char {
mir! {
type RET = char;
let _8: ([i64; 4],);
let _9: (u8,);
let _10: isize;
let _11: u32;
let _12: bool;
let _13: [i64; 4];
let _14: f32;
let _15: [i16; 3];
let _16: f64;
let _17: (u8,);
let _18: char;
let _19: Adt52;
let _20: f64;
let _21: *const u16;
let _22: i8;
let _23: *mut (u8,);
let _24: [usize; 1];
let _25: *const *const u32;
let _26: *mut u8;
let _27: *const *const u32;
let _28: bool;
let _29: bool;
let _30: u64;
let _31: *const u32;
let _32: f64;
let _33: [usize; 6];
let _34: bool;
let _35: [i128; 2];
let _36: f32;
let _37: [usize; 1];
let _38: Adt46;
let _39: [i64; 4];
let _40: u64;
let _41: ([i64; 4],);
let _42: Adt45;
let _43: ();
let _44: ();
{
_3 = -9223372036854775807_isize;
_7 = _1;
_6 = 56044_u16 as i128;
_5 = (-1401823101_i32) | 1796483384_i32;
_2 = [(-7163404118117812869_i64),(-827327165028213362_i64),8725638074131529760_i64,(-6353925329066672518_i64)];
_7 = !_1;
RET = _4;
_8.0 = [(-4400970260150951925_i64),4567462678830993405_i64,(-7966914748783829831_i64),(-8025217590620176127_i64)];
_1 = -_7;
_2 = [(-189897487624338514_i64),(-9076636984540649022_i64),5414542872656498330_i64,(-6708951445167482572_i64)];
_2 = [(-3457886144328227590_i64),(-193779972720121079_i64),1423901330370526331_i64,(-8209182106318499124_i64)];
_1 = _7 | _7;
Goto(bb1)
}
bb1 = {
_9.0 = (-45_i8) as u8;
_4 = RET;
_11 = !3316099220_u32;
_2 = _8.0;
_1 = _7;
RET = _4;
_6 = !_7;
_8.0 = [(-2917357459101591282_i64),73975676443228059_i64,(-8018238139945998631_i64),2745969614429933533_i64];
_10 = _3 << _1;
_8 = (_2,);
_7 = _1;
RET = _4;
Call(_2 = fn19(_8.0, _4, _10, _10, _5, RET, _8.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = (_2,);
_4 = RET;
_9.0 = (-7782927386296063698_i64) as u8;
_9.0 = 46_u8;
_8 = (_2,);
_8 = (_2,);
_8 = (_2,);
_9.0 = 18_u8;
_8 = (_2,);
_2 = [(-7637965983275894225_i64),2124322947224798257_i64,5153416674898590556_i64,(-8961342865437785020_i64)];
_10 = _3;
_9 = (63_u8,);
_9.0 = !58_u8;
_9 = (191_u8,);
Goto(bb3)
}
bb3 = {
_3 = _5 as isize;
_8.0 = [3859397624859318631_i64,4348878200918611133_i64,4060947943005742509_i64,(-1199735753205294901_i64)];
_3 = -_10;
_11 = 247198178_u32 | 2840743646_u32;
_5 = !122037357_i32;
RET = _4;
_4 = RET;
_10 = -_3;
_14 = 7204338250330154731_usize as f32;
_7 = _6;
_8 = (_2,);
_11 = 3364421949_u32 * 3337991623_u32;
_9.0 = 167_u8;
_10 = _3;
Call(_1 = core::intrinsics::bswap(_7), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_18 = RET;
_5 = (-1946548764_i32);
_1 = !_7;
_15 = [11154_i16,28016_i16,(-9882_i16)];
_3 = -_10;
_17.0 = _14 as u8;
_17.0 = _5 as u8;
_16 = (-122_i8) as f64;
_9.0 = _17.0 ^ _17.0;
_3 = _10 << _9.0;
_1 = _6 - _7;
_12 = !true;
_15 = [4281_i16,8779_i16,(-14742_i16)];
_19.fld6 = [5774_i16,(-21520_i16),(-32631_i16)];
RET = _4;
_19.fld0 = [_6,_1];
_13 = [4095285841405920991_i64,(-5859352805179401309_i64),(-4980369984264963079_i64),(-1660983044825992440_i64)];
_15 = [24403_i16,9955_i16,(-9304_i16)];
_19.fld4 = [3627678799784409317_i64,(-6333811304852942100_i64),(-5376863778838571791_i64)];
_19.fld3 = -_16;
_14 = (-31_i8) as f32;
RET = _4;
_2 = [201801433153964760_i64,(-4733447068228872329_i64),(-2309572449490597425_i64),(-368420709841451437_i64)];
_8.0 = [(-135709201004575233_i64),6793267968173848093_i64,(-1763587673736809949_i64),6053827540148294116_i64];
_19.fld0 = [_1,_6];
match _5 {
340282366920938463463374607429821662692 => bb5,
_ => bb1
}
}
bb5 = {
_20 = _9.0 as f64;
_13 = _8.0;
_19.fld2 = !_3;
_5 = 1513221690_i32;
_3 = _19.fld2;
_17 = (_9.0,);
_9.0 = !_17.0;
_19.fld2 = 112_i8 as isize;
_12 = true;
RET = _4;
_19.fld2 = _3 * _10;
_13 = [1800411496935632919_i64,(-668770062547203154_i64),3185311648191762457_i64,(-935957617792200336_i64)];
_6 = _1;
_17 = (_9.0,);
Goto(bb6)
}
bb6 = {
_17.0 = _12 as u8;
RET = _4;
_19.fld1 = (_9.0,);
_23 = core::ptr::addr_of_mut!(_9);
_8 = (_2,);
_8.0 = [7586948730170357802_i64,7459199223350782454_i64,(-1749905043575521892_i64),(-1677899650325832900_i64)];
_19.fld6 = [(-27909_i16),15751_i16,(-18403_i16)];
_2 = [(-2663090071326024547_i64),(-1834204316863373465_i64),2256898589712509977_i64,6519507964150217535_i64];
_17.0 = _19.fld1.0;
_24 = [18199498984393451750_usize];
_19.fld4 = [5620343826509097774_i64,5693812274772281743_i64,(-7909626141520446768_i64)];
_4 = _18;
_19.fld3 = _20;
_8 = (_2,);
Goto(bb7)
}
bb7 = {
_18 = RET;
_17.0 = (*_23).0;
_17.0 = !(*_23).0;
_18 = RET;
_5 = 896798876_i32;
_3 = !_19.fld2;
Call(_9.0 = core::intrinsics::transmute(_17.0), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_1 = _7;
RET = _4;
_5 = _11 as i32;
_23 = core::ptr::addr_of_mut!(_17);
_17.0 = _5 as u8;
_19.fld6 = [(-22200_i16),28191_i16,30330_i16];
_14 = _3 as f32;
_20 = _16;
_17.0 = !_19.fld1.0;
_30 = 13704927438933375038_u64;
_9 = (_19.fld1.0,);
_22 = _19.fld2 as i8;
_28 = _12;
_31 = core::ptr::addr_of!(_11);
_26 = core::ptr::addr_of_mut!(_19.fld1.0);
_9 = (_19.fld1.0,);
_4 = _18;
_16 = _19.fld3;
Goto(bb9)
}
bb9 = {
RET = _18;
_8 = (_13,);
_9 = (_19.fld1.0,);
_7 = _20 as i128;
_23 = core::ptr::addr_of_mut!(_9);
_1 = 6204_u16 as i128;
_9.0 = _17.0;
_19.fld1.0 = _17.0;
_29 = _12;
match _30 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
13704927438933375038 => bb10,
_ => bb8
}
}
bb10 = {
_18 = _4;
_28 = (*_31) > (*_31);
_12 = !_28;
_1 = _6;
_15 = [(-9116_i16),17114_i16,(-23019_i16)];
_31 = core::ptr::addr_of!((*_31));
_14 = _5 as f32;
_33 = [5_usize,8222850240964171321_usize,17957365235584209033_usize,7456796008094201732_usize,17557703332212422033_usize,81002352542681084_usize];
_5 = 947171303_i32;
_18 = RET;
_19.fld1.0 = !(*_23).0;
_19.fld1.0 = !_9.0;
_31 = core::ptr::addr_of!(_11);
match _30 {
0 => bb2,
1 => bb11,
13704927438933375038 => bb13,
_ => bb12
}
}
bb11 = {
_20 = _9.0 as f64;
_13 = _8.0;
_19.fld2 = !_3;
_5 = 1513221690_i32;
_3 = _19.fld2;
_17 = (_9.0,);
_9.0 = !_17.0;
_19.fld2 = 112_i8 as isize;
_12 = true;
RET = _4;
_19.fld2 = _3 * _10;
_13 = [1800411496935632919_i64,(-668770062547203154_i64),3185311648191762457_i64,(-935957617792200336_i64)];
_6 = _1;
_17 = (_9.0,);
Goto(bb6)
}
bb12 = {
_18 = RET;
_5 = (-1946548764_i32);
_1 = !_7;
_15 = [11154_i16,28016_i16,(-9882_i16)];
_3 = -_10;
_17.0 = _14 as u8;
_17.0 = _5 as u8;
_16 = (-122_i8) as f64;
_9.0 = _17.0 ^ _17.0;
_3 = _10 << _9.0;
_1 = _6 - _7;
_12 = !true;
_15 = [4281_i16,8779_i16,(-14742_i16)];
_19.fld6 = [5774_i16,(-21520_i16),(-32631_i16)];
RET = _4;
_19.fld0 = [_6,_1];
_13 = [4095285841405920991_i64,(-5859352805179401309_i64),(-4980369984264963079_i64),(-1660983044825992440_i64)];
_15 = [24403_i16,9955_i16,(-9304_i16)];
_19.fld4 = [3627678799784409317_i64,(-6333811304852942100_i64),(-5376863778838571791_i64)];
_19.fld3 = -_16;
_14 = (-31_i8) as f32;
RET = _4;
_2 = [201801433153964760_i64,(-4733447068228872329_i64),(-2309572449490597425_i64),(-368420709841451437_i64)];
_8.0 = [(-135709201004575233_i64),6793267968173848093_i64,(-1763587673736809949_i64),6053827540148294116_i64];
_19.fld0 = [_1,_6];
match _5 {
340282366920938463463374607429821662692 => bb5,
_ => bb1
}
}
bb13 = {
_2 = [2063457102503630418_i64,(-8614275021233798089_i64),(-2841651445104226260_i64),7588430252664966947_i64];
_14 = (*_31) as f32;
_26 = core::ptr::addr_of_mut!((*_26));
_19.fld4 = [(-5860229395858838401_i64),(-2355917093124728218_i64),(-7007781173425200733_i64)];
_19.fld6 = _15;
_8 = (_2,);
_23 = core::ptr::addr_of_mut!(_9);
_32 = _16 * _16;
_9.0 = _19.fld2 as u8;
_9.0 = !_17.0;
_20 = _32 * _32;
RET = _18;
_8 = (_13,);
_30 = 7723853446189099817_u64 | 4713131622240774852_u64;
_9 = (_19.fld1.0,);
_9.0 = RET as u8;
_26 = core::ptr::addr_of_mut!(_17.0);
_8.0 = [(-6203273072169136200_i64),(-5361502949060731592_i64),3684282984765208318_i64,868407122381476725_i64];
RET = _18;
_19.fld1 = ((*_26),);
_24 = [6_usize];
_36 = _14;
_28 = _12;
_30 = !13436296591817658552_u64;
_35 = [_1,_1];
_34 = _6 < _1;
match _5 {
0 => bb2,
1 => bb14,
2 => bb15,
947171303 => bb17,
_ => bb16
}
}
bb14 = {
_17.0 = _12 as u8;
RET = _4;
_19.fld1 = (_9.0,);
_23 = core::ptr::addr_of_mut!(_9);
_8 = (_2,);
_8.0 = [7586948730170357802_i64,7459199223350782454_i64,(-1749905043575521892_i64),(-1677899650325832900_i64)];
_19.fld6 = [(-27909_i16),15751_i16,(-18403_i16)];
_2 = [(-2663090071326024547_i64),(-1834204316863373465_i64),2256898589712509977_i64,6519507964150217535_i64];
_17.0 = _19.fld1.0;
_24 = [18199498984393451750_usize];
_19.fld4 = [5620343826509097774_i64,5693812274772281743_i64,(-7909626141520446768_i64)];
_4 = _18;
_19.fld3 = _20;
_8 = (_2,);
Goto(bb7)
}
bb15 = {
_18 = RET;
_5 = (-1946548764_i32);
_1 = !_7;
_15 = [11154_i16,28016_i16,(-9882_i16)];
_3 = -_10;
_17.0 = _14 as u8;
_17.0 = _5 as u8;
_16 = (-122_i8) as f64;
_9.0 = _17.0 ^ _17.0;
_3 = _10 << _9.0;
_1 = _6 - _7;
_12 = !true;
_15 = [4281_i16,8779_i16,(-14742_i16)];
_19.fld6 = [5774_i16,(-21520_i16),(-32631_i16)];
RET = _4;
_19.fld0 = [_6,_1];
_13 = [4095285841405920991_i64,(-5859352805179401309_i64),(-4980369984264963079_i64),(-1660983044825992440_i64)];
_15 = [24403_i16,9955_i16,(-9304_i16)];
_19.fld4 = [3627678799784409317_i64,(-6333811304852942100_i64),(-5376863778838571791_i64)];
_19.fld3 = -_16;
_14 = (-31_i8) as f32;
RET = _4;
_2 = [201801433153964760_i64,(-4733447068228872329_i64),(-2309572449490597425_i64),(-368420709841451437_i64)];
_8.0 = [(-135709201004575233_i64),6793267968173848093_i64,(-1763587673736809949_i64),6053827540148294116_i64];
_19.fld0 = [_1,_6];
match _5 {
340282366920938463463374607429821662692 => bb5,
_ => bb1
}
}
bb16 = {
_18 = _4;
_28 = (*_31) > (*_31);
_12 = !_28;
_1 = _6;
_15 = [(-9116_i16),17114_i16,(-23019_i16)];
_31 = core::ptr::addr_of!((*_31));
_14 = _5 as f32;
_33 = [5_usize,8222850240964171321_usize,17957365235584209033_usize,7456796008094201732_usize,17557703332212422033_usize,81002352542681084_usize];
_5 = 947171303_i32;
_18 = RET;
_19.fld1.0 = !(*_23).0;
_19.fld1.0 = !_9.0;
_31 = core::ptr::addr_of!(_11);
match _30 {
0 => bb2,
1 => bb11,
13704927438933375038 => bb13,
_ => bb12
}
}
bb17 = {
_34 = _12;
_19.fld4 = [458932617515255095_i64,(-3779467734668761028_i64),(-8610683274982756100_i64)];
_11 = _20 as u32;
_35 = [_6,_1];
_8 = (_13,);
_15 = [(-22306_i16),(-14308_i16),(-924_i16)];
_22 = (-112_i8) | (-45_i8);
_29 = _19.fld3 > _16;
_12 = _29;
RET = _18;
_2 = [8922407855942907851_i64,4449719808880216412_i64,3433674841284051112_i64,607891687983549426_i64];
_29 = _34;
_20 = _22 as f64;
_10 = _3 - _3;
_25 = core::ptr::addr_of!(_31);
_5 = -(-985346541_i32);
_8.0 = [1347290699130628404_i64,(-2345630512207199921_i64),(-3612387623425261626_i64),2002554031582801371_i64];
_19.fld2 = !_10;
_19.fld1 = ((*_26),);
_4 = _18;
_22 = RET as i8;
_27 = core::ptr::addr_of!(_31);
_39 = [(-8920495196111149032_i64),3476829543517935519_i64,7814249139111862086_i64,4906579387149911713_i64];
_18 = RET;
_3 = _19.fld2 ^ _10;
Goto(bb18)
}
bb18 = {
Call(_43 = dump_var(18_usize, 5_usize, Move(_5), 29_usize, Move(_29), 9_usize, Move(_9), 13_usize, Move(_13)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_43 = dump_var(18_usize, 24_usize, Move(_24), 17_usize, Move(_17), 18_usize, Move(_18), 15_usize, Move(_15)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_43 = dump_var(18_usize, 4_usize, Move(_4), 11_usize, Move(_11), 2_usize, Move(_2), 22_usize, Move(_22)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [i64; 4],mut _2: char,mut _3: isize,mut _4: isize,mut _5: i32,mut _6: char,mut _7: [i64; 4]) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _8: bool;
let _9: [i128; 2];
let _10: [i64; 4];
let _11: u64;
let _12: Adt44;
let _13: char;
let _14: [i16; 3];
let _15: i64;
let _16: char;
let _17: [usize; 6];
let _18: f64;
let _19: *const bool;
let _20: *mut u8;
let _21: [i128; 2];
let _22: [usize; 1];
let _23: u32;
let _24: char;
let _25: isize;
let _26: Adt51;
let _27: *const u16;
let _28: u128;
let _29: isize;
let _30: (u8,);
let _31: char;
let _32: i32;
let _33: f32;
let _34: u16;
let _35: Adt55;
let _36: *const bool;
let _37: isize;
let _38: *const *const u32;
let _39: char;
let _40: ();
let _41: ();
{
RET = [(-4687629843284075769_i64),(-5365505624508538827_i64),497572633858152423_i64,(-1800621928599430978_i64)];
RET = [6292292090847281522_i64,2988327487270762001_i64,4843280031203707606_i64,2746648090472199279_i64];
_6 = _2;
_1 = [(-7947312505457130665_i64),3958429418715604281_i64,(-586449995556734034_i64),(-5604586367902246363_i64)];
_5 = (-1567492276_i32) & (-462593044_i32);
_5 = -1494949216_i32;
RET = [(-9060113414526372741_i64),(-1704064711831438806_i64),(-963186191340368849_i64),(-7639914497377662259_i64)];
_10 = [(-7905574319455880396_i64),1540055360946910415_i64,5602326438692577083_i64,8988218275875519752_i64];
_7 = RET;
_2 = _6;
_9 = [36965275741597114945955437385183716384_i128,(-33367905764728539370401510039177573426_i128)];
RET = [7098280318340859726_i64,2980827310902092650_i64,3283019782851854776_i64,(-6449444604598180186_i64)];
_2 = _6;
_11 = !15552872514369087241_u64;
_1 = [(-3220176488766227000_i64),2630705296858956464_i64,(-5492259384982880749_i64),(-4940717666218194730_i64)];
_15 = -4440430007534418006_i64;
_7 = [_15,_15,_15,_15];
_9 = [152020776064672601373417245822846157378_i128,(-82886893058300398325678297860255313856_i128)];
_13 = _6;
Goto(bb1)
}
bb1 = {
_3 = _4 * _4;
RET = [_15,_15,_15,_15];
_17 = [8985253167135576564_usize,7_usize,16929478948148076495_usize,2066496519711699570_usize,18291073284350657120_usize,12006820883129314429_usize];
_11 = !9210267086816950294_u64;
_14 = [(-5708_i16),(-5562_i16),(-5246_i16)];
_6 = _13;
_6 = _2;
_16 = _6;
_19 = core::ptr::addr_of!(_8);
_2 = _6;
_14 = [30216_i16,(-18619_i16),31154_i16];
_17 = [1_usize,0_usize,6_usize,3_usize,10787471197722308150_usize,8877364978385527576_usize];
_9 = [36150901040817132193322514459726792371_i128,32388006214550901197390907450561672214_i128];
_8 = false;
_11 = !5143695812283548671_u64;
_11 = 11708547029499229011_u64 + 3029296011852392087_u64;
_18 = 74_i8 as f64;
_6 = _16;
_19 = core::ptr::addr_of!((*_19));
_13 = _16;
_14 = [14324_i16,(-31987_i16),(-3442_i16)];
_21 = [(-33718411974161562202297952904163423467_i128),(-120549596268480243208762399604932860244_i128)];
_21 = [(-165044364477249881573239099761824738710_i128),47897601851775484652308553991463959319_i128];
_3 = (*_19) as isize;
Goto(bb2)
}
bb2 = {
_3 = _18 as isize;
_22 = [6_usize];
_17 = [3918943776945747263_usize,14777326375484160382_usize,13089750098276477160_usize,4_usize,6_usize,6_usize];
_22 = [12907218924676605516_usize];
_4 = 23_i8 as isize;
_22 = [2_usize];
_18 = _15 as f64;
_5 = -2041627263_i32;
_16 = _6;
Goto(bb3)
}
bb3 = {
RET = [_15,_15,_15,_15];
_22 = [7_usize];
_19 = core::ptr::addr_of!((*_19));
_13 = _2;
_5 = -1190934519_i32;
_15 = (-4316983012464431711_i64);
_2 = _6;
_15 = 3720790885_u32 as i64;
RET = _7;
_22 = [0_usize];
_15 = 7586705502458731455_i64;
_16 = _13;
_3 = _4;
_9 = [(-96702321180750982919657756185300488449_i128),(-97823123193075328890148180867765044982_i128)];
_4 = !_3;
_6 = _13;
_19 = core::ptr::addr_of!((*_19));
_6 = _2;
_7 = [_15,_15,_15,_15];
_18 = 181575412669029061975263132165666149734_u128 as f64;
_11 = 1715697935605845918_u64;
_4 = _3;
_6 = _13;
_11 = _5 as u64;
_7 = [_15,_15,_15,_15];
_2 = _13;
_9 = _21;
Goto(bb4)
}
bb4 = {
_4 = 23564_u16 as isize;
_6 = _16;
_1 = [_15,_15,_15,_15];
_26.fld0 = _15 as f32;
_14 = [(-65_i16),31438_i16,(-15174_i16)];
_17 = [14497137419223450306_usize,4_usize,8484049644495373267_usize,4_usize,5_usize,16204014786678309732_usize];
_9 = [69649238694120812576919650392557968966_i128,149496914771789645569311968011782737707_i128];
_25 = !_4;
_26.fld7 = 118560701937381618043472892354329159582_i128;
_14 = [24554_i16,29466_i16,(-12214_i16)];
RET = [_15,_15,_15,_15];
_20 = core::ptr::addr_of_mut!(_26.fld6);
_28 = 7_usize as u128;
_26.fld7 = -7159644968989685446550647899008677996_i128;
match _15 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
7586705502458731455 => bb10,
_ => bb9
}
}
bb5 = {
RET = [_15,_15,_15,_15];
_22 = [7_usize];
_19 = core::ptr::addr_of!((*_19));
_13 = _2;
_5 = -1190934519_i32;
_15 = (-4316983012464431711_i64);
_2 = _6;
_15 = 3720790885_u32 as i64;
RET = _7;
_22 = [0_usize];
_15 = 7586705502458731455_i64;
_16 = _13;
_3 = _4;
_9 = [(-96702321180750982919657756185300488449_i128),(-97823123193075328890148180867765044982_i128)];
_4 = !_3;
_6 = _13;
_19 = core::ptr::addr_of!((*_19));
_6 = _2;
_7 = [_15,_15,_15,_15];
_18 = 181575412669029061975263132165666149734_u128 as f64;
_11 = 1715697935605845918_u64;
_4 = _3;
_6 = _13;
_11 = _5 as u64;
_7 = [_15,_15,_15,_15];
_2 = _13;
_9 = _21;
Goto(bb4)
}
bb6 = {
_3 = _18 as isize;
_22 = [6_usize];
_17 = [3918943776945747263_usize,14777326375484160382_usize,13089750098276477160_usize,4_usize,6_usize,6_usize];
_22 = [12907218924676605516_usize];
_4 = 23_i8 as isize;
_22 = [2_usize];
_18 = _15 as f64;
_5 = -2041627263_i32;
_16 = _6;
Goto(bb3)
}
bb7 = {
_3 = _4 * _4;
RET = [_15,_15,_15,_15];
_17 = [8985253167135576564_usize,7_usize,16929478948148076495_usize,2066496519711699570_usize,18291073284350657120_usize,12006820883129314429_usize];
_11 = !9210267086816950294_u64;
_14 = [(-5708_i16),(-5562_i16),(-5246_i16)];
_6 = _13;
_6 = _2;
_16 = _6;
_19 = core::ptr::addr_of!(_8);
_2 = _6;
_14 = [30216_i16,(-18619_i16),31154_i16];
_17 = [1_usize,0_usize,6_usize,3_usize,10787471197722308150_usize,8877364978385527576_usize];
_9 = [36150901040817132193322514459726792371_i128,32388006214550901197390907450561672214_i128];
_8 = false;
_11 = !5143695812283548671_u64;
_11 = 11708547029499229011_u64 + 3029296011852392087_u64;
_18 = 74_i8 as f64;
_6 = _16;
_19 = core::ptr::addr_of!((*_19));
_13 = _16;
_14 = [14324_i16,(-31987_i16),(-3442_i16)];
_21 = [(-33718411974161562202297952904163423467_i128),(-120549596268480243208762399604932860244_i128)];
_21 = [(-165044364477249881573239099761824738710_i128),47897601851775484652308553991463959319_i128];
_3 = (*_19) as isize;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_19 = core::ptr::addr_of!((*_19));
_3 = !_25;
_26.fld1.fld2 = (_10,);
_17 = [10619549361307006901_usize,18229854525902754323_usize,0_usize,0_usize,7_usize,3139561250913071551_usize];
RET = _26.fld1.fld2.0;
_2 = _16;
_16 = _6;
_29 = _3 * _4;
_11 = 746793795416759369_u64;
_26.fld4 = 16616_i16;
_3 = _25;
_29 = _4;
_26.fld3 = 2980197570_u32;
_30 = (191_u8,);
_29 = 36307_u16 as isize;
_26.fld1.fld2 = (RET,);
_26.fld6 = !_30.0;
_24 = _6;
_20 = core::ptr::addr_of_mut!((*_20));
_25 = _3 + _29;
_7 = [_15,_15,_15,_15];
_21 = [_26.fld7,_26.fld7];
_6 = _24;
_1 = RET;
match _15 {
0 => bb9,
1 => bb5,
7586705502458731455 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_9 = [_26.fld7,_26.fld7];
_26.fld0 = _26.fld4 as f32;
RET = [_15,_15,_15,_15];
_14 = [_26.fld4,_26.fld4,_26.fld4];
_35.fld4.fld4 = !_11;
_35.fld0.0 = [_15,_15,_15,_15];
_27 = core::ptr::addr_of!(_34);
_18 = _28 as f64;
_26.fld1.fld1 = core::ptr::addr_of!((*_27));
_30 = ((*_20),);
_6 = _2;
match _11 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb8,
4 => bb7,
5 => bb6,
6 => bb13,
746793795416759369 => bb15,
_ => bb14
}
}
bb13 = {
_3 = _4 * _4;
RET = [_15,_15,_15,_15];
_17 = [8985253167135576564_usize,7_usize,16929478948148076495_usize,2066496519711699570_usize,18291073284350657120_usize,12006820883129314429_usize];
_11 = !9210267086816950294_u64;
_14 = [(-5708_i16),(-5562_i16),(-5246_i16)];
_6 = _13;
_6 = _2;
_16 = _6;
_19 = core::ptr::addr_of!(_8);
_2 = _6;
_14 = [30216_i16,(-18619_i16),31154_i16];
_17 = [1_usize,0_usize,6_usize,3_usize,10787471197722308150_usize,8877364978385527576_usize];
_9 = [36150901040817132193322514459726792371_i128,32388006214550901197390907450561672214_i128];
_8 = false;
_11 = !5143695812283548671_u64;
_11 = 11708547029499229011_u64 + 3029296011852392087_u64;
_18 = 74_i8 as f64;
_6 = _16;
_19 = core::ptr::addr_of!((*_19));
_13 = _16;
_14 = [14324_i16,(-31987_i16),(-3442_i16)];
_21 = [(-33718411974161562202297952904163423467_i128),(-120549596268480243208762399604932860244_i128)];
_21 = [(-165044364477249881573239099761824738710_i128),47897601851775484652308553991463959319_i128];
_3 = (*_19) as isize;
Goto(bb2)
}
bb14 = {
RET = [_15,_15,_15,_15];
_22 = [7_usize];
_19 = core::ptr::addr_of!((*_19));
_13 = _2;
_5 = -1190934519_i32;
_15 = (-4316983012464431711_i64);
_2 = _6;
_15 = 3720790885_u32 as i64;
RET = _7;
_22 = [0_usize];
_15 = 7586705502458731455_i64;
_16 = _13;
_3 = _4;
_9 = [(-96702321180750982919657756185300488449_i128),(-97823123193075328890148180867765044982_i128)];
_4 = !_3;
_6 = _13;
_19 = core::ptr::addr_of!((*_19));
_6 = _2;
_7 = [_15,_15,_15,_15];
_18 = 181575412669029061975263132165666149734_u128 as f64;
_11 = 1715697935605845918_u64;
_4 = _3;
_6 = _13;
_11 = _5 as u64;
_7 = [_15,_15,_15,_15];
_2 = _13;
_9 = _21;
Goto(bb4)
}
bb15 = {
_22 = [133401002961449170_usize];
_8 = false;
_34 = 1962_u16;
_32 = _5 & _5;
_26.fld6 = _24 as u8;
_23 = _26.fld3 - _26.fld3;
Goto(bb16)
}
bb16 = {
Call(_40 = dump_var(19_usize, 10_usize, Move(_10), 2_usize, Move(_2), 24_usize, Move(_24), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(19_usize, 3_usize, Move(_3), 8_usize, Move(_8), 7_usize, Move(_7), 21_usize, Move(_21)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(19_usize, 34_usize, Move(_34), 30_usize, Move(_30), 9_usize, Move(_9), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_40 = dump_var(19_usize, 23_usize, Move(_23), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{5be84}'), std::hint::black_box(234744362882684106249583622999002316310_u128), std::hint::black_box((-107_i8)), std::hint::black_box(12583442118246460288_u64), std::hint::black_box(378159265_i32), std::hint::black_box((-650862868087146115_i64)), std::hint::black_box(90054391292065187497758911276004407043_i128), std::hint::black_box(1_usize), std::hint::black_box(253_u8), std::hint::black_box(19955_u16));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt39 {
fld0: [usize; 1],
fld1: *const u16,
fld2: ([i64; 4],),
}
#[derive(Debug,Copy,Clone)]
pub enum Adt40 {
Variant0{
fld0: [usize; 1],
fld1: char,
fld2: [usize; 6],
fld3: *const u32,
fld4: i16,
fld5: u8,

},
Variant1{
fld0: *const u32,
fld1: *const u16,
fld2: usize,

},
Variant2{
fld0: *const *mut u8,
fld1: *const u32,
fld2: (*const u16, ([i64; 4],)),
fld3: i8,
fld4: *const bool,
fld5: *const u16,
fld6: usize,

}}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: f32,
fld1: (*const u16, ([i64; 4],)),
fld2: isize,
fld3: *mut u8,
fld4: [usize; 1],
fld5: [i64; 3],
fld6: u16,

},
Variant1{
fld0: *const f32,
fld1: [i64; 3],
fld2: *const *const u32,
fld3: *const *mut u8,
fld4: *const i16,
fld5: (*const u16, ([i64; 4],)),
fld6: f32,
fld7: *const (*const u16, ([i64; 4],)),

},
Variant2{
fld0: [i64; 4],
fld1: *const *const u32,
fld2: [i128; 2],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt42 {
fld0: [i128; 2],
fld1: Adt40,
fld2: isize,
fld3: u128,
fld4: i16,
fld5: [i64; 3],
}
#[derive(Debug,Copy,Clone)]
pub enum Adt43 {
Variant0{
fld0: u128,
fld1: *mut u8,
fld2: *const f32,
fld3: *const (*const u16, ([i64; 4],)),
fld4: f64,

},
Variant1{
fld0: *const *mut u8,
fld1: Adt39,
fld2: *mut u8,
fld3: *const u16,
fld4: u32,
fld5: i32,
fld6: (u8,),

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: bool,
fld1: Adt41,
fld2: u32,
fld3: [i16; 3],
fld4: *const f32,
fld5: *mut (u8,),

},
Variant1{
fld0: *const u16,
fld1: i8,
fld2: *const *mut u8,

},
Variant2{
fld0: bool,
fld1: [i64; 3],
fld2: *const u16,
fld3: ([i64; 4],),
fld4: u128,
fld5: i32,
fld6: *const i16,

},
Variant3{
fld0: *const f32,
fld1: *const *mut u8,
fld2: i128,
fld3: (u8,),
fld4: f64,

}}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: Adt44,
fld1: *const bool,
fld2: u64,
fld3: (*const u16, ([i64; 4],)),
fld4: i16,
fld5: i32,
fld6: *mut (u8,),
fld7: *mut u8,

},
Variant1{
fld0: f32,
fld1: char,
fld2: *const u16,
fld3: *const *const u32,
fld4: [usize; 6],
fld5: Adt39,
fld6: (*const u16, ([i64; 4],)),
fld7: (u8,),

}}
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: i8,

},
Variant1{
fld0: u16,
fld1: *const *const u32,

},
Variant2{
fld0: Adt44,
fld1: *const u32,
fld2: *const (*const u16, ([i64; 4],)),
fld3: [usize; 6],
fld4: [i64; 3],
fld5: i32,
fld6: [i64; 4],
fld7: *const *mut u8,

},
Variant3{
fld0: [usize; 1],
fld1: Adt39,
fld2: isize,
fld3: i8,
fld4: *const u16,
fld5: [i64; 4],

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: u32,
fld1: u16,
fld2: *const u32,
fld3: i8,
fld4: i16,
fld5: *const *const u32,
fld6: *const (*const u16, ([i64; 4],)),
fld7: Adt45,

},
Variant1{
fld0: bool,

},
Variant2{
fld0: *const *const u32,
fld1: (u8,),
fld2: [usize; 6],
fld3: Adt42,
fld4: Adt45,

},
Variant3{
fld0: u128,
fld1: u8,
fld2: i128,
fld3: *const bool,
fld4: [usize; 6],

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: *mut u8,
fld1: usize,
fld2: *const (*const u16, ([i64; 4],)),

},
Variant1{
fld0: [usize; 6],
fld1: (u8,),
fld2: u16,
fld3: i128,
fld4: u32,
fld5: Adt42,
fld6: i64,

},
Variant2{
fld0: *mut (u8,),
fld1: (u8,),
fld2: u16,
fld3: [i64; 4],
fld4: *mut u8,
fld5: i64,

},
Variant3{
fld0: u128,
fld1: char,
fld2: *const f32,
fld3: *const u32,
fld4: Adt46,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: f32,
fld1: u16,

},
Variant1{
fld0: Adt45,
fld1: u32,
fld2: *const f32,
fld3: Adt44,
fld4: [i16; 3],
fld5: usize,

},
Variant2{
fld0: [usize; 6],
fld1: (*const u16, ([i64; 4],)),
fld2: (u8,),
fld3: ([i64; 4],),
fld4: i16,

},
Variant3{
fld0: Adt46,
fld1: *mut u8,
fld2: *const u16,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: f64,
fld1: *mut u8,
fld2: [i64; 3],
fld3: u16,
fld4: *const bool,
fld5: (*const u16, ([i64; 4],)),

},
Variant1{
fld0: Adt47,
fld1: u128,
fld2: i32,
fld3: usize,
fld4: [i64; 4],

},
Variant2{
fld0: *const u16,
fld1: [usize; 1],
fld2: u64,
fld3: Adt46,
fld4: *const (*const u16, ([i64; 4],)),

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: f32,
fld1: Adt39,
fld2: Adt40,
fld3: u32,
fld4: i16,
fld5: *const (*const u16, ([i64; 4],)),
fld6: u8,
fld7: i128,
}
#[derive(Debug)]
pub struct Adt52 {
fld0: [i128; 2],
fld1: (u8,),
fld2: isize,
fld3: f64,
fld4: [i64; 3],
fld5: Adt48,
fld6: [i16; 3],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: Adt42,
fld1: i64,
}
#[derive(Debug)]
pub struct Adt54 {
fld0: bool,
fld1: [i16; 3],
fld2: *const u16,
fld3: *const *mut u8,
fld4: u64,
fld5: f64,
}
#[derive(Debug)]
pub struct Adt55 {
fld0: ([i64; 4],),
fld1: *const u16,
fld2: i128,
fld3: *const *const u32,
fld4: Adt54,
}

