#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: u16,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: u32,mut _8: i128,mut _9: usize) -> usize {
mir! {
type RET = usize;
let _10: Adt56;
let _11: u8;
let _12: Adt47;
let _13: i8;
let _14: [bool; 6];
let _15: f32;
let _16: f64;
let _17: *mut [isize; 8];
let _18: *const u64;
let _19: [i64; 3];
let _20: Adt46;
let _21: Adt46;
let _22: ([isize; 2],);
let _23: f32;
let _24: ([isize; 2],);
let _25: [bool; 6];
let _26: ([isize; 2],);
let _27: isize;
let _28: [usize; 8];
let _29: ();
let _30: ();
{
_2 = '\u{73d5a}';
_3 = 872_u16 - 36710_u16;
_4 = 98_i8 >> _3;
_8 = (-84622964669312907067093294968558517870_i128) >> _3;
_8 = (-7312731465892602192407105133751341545_i128);
_8 = !129264969983601453535485181053515717017_i128;
_1 = false ^ true;
_1 = _3 < _3;
RET = 5_usize;
RET = !2_usize;
_6 = !(-423418278_i32);
_5 = (-8162_i16);
_7 = 3732106268_u32 | 2539126373_u32;
_6 = 115844925393691220999236134882693306371_u128 as i32;
RET = 8992153653818654681_usize;
_7 = 1988477589_u32 & 1216761202_u32;
_2 = '\u{9c89b}';
_3 = !32721_u16;
_3 = 48849_u16 - 54943_u16;
_3 = 15375_u16 ^ 45332_u16;
Call(_6 = fn1(_7, _7, _7, _3, _5, _4, _4, _3, _2, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
Goto(bb2)
}
bb2 = {
RET = !1854935748278298094_usize;
Call(_9 = core::intrinsics::bswap(RET), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _9;
_9 = _5 as usize;
_9 = RET - RET;
_6 = 559431244_i32 >> _9;
RET = _9 | _9;
_9 = RET & RET;
_4 = 53_i8 | (-83_i8);
RET = !_9;
RET = _3 as usize;
_5 = 7348_i16;
_11 = _3 as u8;
_1 = true ^ false;
_6 = _2 as i32;
_9 = RET;
RET = !_9;
Call(_12 = fn2(_3, _11, RET, _3, _6, _2, _7, RET, _8, _6, _11, _4, _4, _1, RET), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_3 = !3526_u16;
place!(Field::<Adt46>(Variant(_12, 0), 0)) = Adt46::Variant1 { fld0: _5 };
_4 = !98_i8;
_14 = [_1,_1,_1,_1,_1,_1];
place!(Field::<f64>(Variant(_12, 0), 1)) = _8 as f64;
_6 = _8 as i32;
place!(Field::<*mut u32>(Variant(_12, 0), 2)) = core::ptr::addr_of_mut!(_7);
place!(Field::<i64>(Variant(_12, 0), 6)) = RET as i64;
_8 = 62639849815556295626292954001463652637_i128;
_1 = Field::<u32>(Variant(_12, 0), 5) != Field::<u32>(Variant(_12, 0), 5);
_2 = '\u{10baa3}';
RET = _9 + _9;
place!(Field::<(u8,)>(Variant(_12, 0), 7)) = (_11,);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7 * _7;
place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(_12, 0), 0)), 1), 0)) = _6 as i16;
_8 = RET as i128;
_9 = RET;
_4 = 7_i8;
place!(Field::<(u8,)>(Variant(_12, 0), 7)) = (_11,);
match _5 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
7348 => bb10,
_ => bb9
}
}
bb5 = {
RET = _9;
_9 = _5 as usize;
_9 = RET - RET;
_6 = 559431244_i32 >> _9;
RET = _9 | _9;
_9 = RET & RET;
_4 = 53_i8 | (-83_i8);
RET = !_9;
RET = _3 as usize;
_5 = 7348_i16;
_11 = _3 as u8;
_1 = true ^ false;
_6 = _2 as i32;
_9 = RET;
RET = !_9;
Call(_12 = fn2(_3, _11, RET, _3, _6, _2, _7, RET, _8, _6, _11, _4, _4, _1, RET), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
RET = !1854935748278298094_usize;
Call(_9 = core::intrinsics::bswap(RET), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = _9;
place!(Field::<f64>(Variant(_12, 0), 1)) = _3 as f64;
_8 = -88501008654206034433840707192603007174_i128;
_13 = _2 as i8;
_1 = false;
SetDiscriminant(Field::<Adt46>(Variant(_12, 0), 0), 0);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7;
place!(Field::<i64>(Variant(_12, 0), 6)) = _6 as i64;
place!(Field::<u8>(Variant(place!(Field::<Adt46>(Variant(_12, 0), 0)), 0), 0)) = !_11;
place!(Field::<*mut u32>(Variant(_12, 0), 2)) = core::ptr::addr_of_mut!(_7);
_16 = -Field::<f64>(Variant(_12, 0), 1);
_6 = 647368947_i32 | (-1162616398_i32);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7;
_7 = !Field::<u32>(Variant(_12, 0), 5);
RET = _2 as usize;
_7 = _1 as u32;
_11 = Field::<(u8,)>(Variant(_12, 0), 7).0 >> _5;
_7 = Field::<u32>(Variant(_12, 0), 5);
place!(Field::<Adt46>(Variant(_12, 0), 0)) = Adt46::Variant1 { fld0: _5 };
place!(Field::<*mut u32>(Variant(_12, 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_12, 0), 5)));
Goto(bb11)
}
bb11 = {
_9 = RET >> Field::<u32>(Variant(_12, 0), 5);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7;
place!(Field::<(u8,)>(Variant(_12, 0), 7)) = (_11,);
place!(Field::<f64>(Variant(_12, 0), 1)) = _3 as f64;
_16 = 9223372036854775807_isize as f64;
_6 = -(-1564689437_i32);
place!(Field::<u32>(Variant(_12, 0), 5)) = Field::<i64>(Variant(_12, 0), 6) as u32;
_13 = -_4;
SetDiscriminant(_12, 1);
_8 = 15936418958845463204218076045476194813_i128 + 141475667856368415114325744748836636255_i128;
_9 = RET;
place!(Field::<(u8,)>(Variant(_12, 1), 2)).0 = !_11;
_3 = !11326_u16;
place!(Field::<[u32; 6]>(Variant(_12, 1), 0)) = [_7,_7,_7,_7,_7,_7];
RET = !_9;
_6 = (-2002688270_i32);
_3 = 9223372036854775807_isize as u16;
_19 = [5895480071250693744_i64,(-5476078443413544206_i64),8639553847277727019_i64];
_1 = !false;
place!(Field::<[u32; 6]>(Variant(_12, 1), 0)) = [_7,_7,_7,_7,_7,_7];
_3 = 8851_u16 + 23362_u16;
RET = !_9;
_16 = _9 as f64;
match _6 {
0 => bb1,
1 => bb9,
2 => bb5,
340282366920938463463374607429765523186 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
RET = _9;
_20 = Adt46::Variant0 { fld0: _11,fld1: _2 };
_22.0 = [(-9223372036854775808_isize),9223372036854775807_isize];
_6 = -(-230794739_i32);
_9 = 232674600795453477623315422270850703836_u128 as usize;
_9 = RET;
place!(Field::<*mut u16>(Variant(_12, 1), 3)) = core::ptr::addr_of_mut!(_3);
_23 = _16 as f32;
_23 = _16 as f32;
_21 = Adt46::Variant1 { fld0: _5 };
place!(Field::<*mut u16>(Variant(_12, 1), 3)) = core::ptr::addr_of_mut!(_3);
RET = 57_isize as usize;
place!(Field::<char>(Variant(_20, 0), 1)) = _2;
_11 = Field::<(u8,)>(Variant(_12, 1), 2).0;
_3 = 26397_u16;
_6 = !1399199616_i32;
RET = !_9;
_7 = 2936025034_u32 ^ 2035190125_u32;
_3 = _1 as u16;
_19 = [4213387502827919720_i64,(-4049958224851225446_i64),(-3225228079284403199_i64)];
_15 = _23 * _23;
match _4 {
0 => bb1,
1 => bb4,
2 => bb9,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
7 => bb19,
_ => bb18
}
}
bb14 = {
RET = _9;
_9 = _5 as usize;
_9 = RET - RET;
_6 = 559431244_i32 >> _9;
RET = _9 | _9;
_9 = RET & RET;
_4 = 53_i8 | (-83_i8);
RET = !_9;
RET = _3 as usize;
_5 = 7348_i16;
_11 = _3 as u8;
_1 = true ^ false;
_6 = _2 as i32;
_9 = RET;
RET = !_9;
Call(_12 = fn2(_3, _11, RET, _3, _6, _2, _7, RET, _8, _6, _11, _4, _4, _1, RET), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_9 = RET >> Field::<u32>(Variant(_12, 0), 5);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7;
place!(Field::<(u8,)>(Variant(_12, 0), 7)) = (_11,);
place!(Field::<f64>(Variant(_12, 0), 1)) = _3 as f64;
_16 = 9223372036854775807_isize as f64;
_6 = -(-1564689437_i32);
place!(Field::<u32>(Variant(_12, 0), 5)) = Field::<i64>(Variant(_12, 0), 6) as u32;
_13 = -_4;
SetDiscriminant(_12, 1);
_8 = 15936418958845463204218076045476194813_i128 + 141475667856368415114325744748836636255_i128;
_9 = RET;
place!(Field::<(u8,)>(Variant(_12, 1), 2)).0 = !_11;
_3 = !11326_u16;
place!(Field::<[u32; 6]>(Variant(_12, 1), 0)) = [_7,_7,_7,_7,_7,_7];
RET = !_9;
_6 = (-2002688270_i32);
_3 = 9223372036854775807_isize as u16;
_19 = [5895480071250693744_i64,(-5476078443413544206_i64),8639553847277727019_i64];
_1 = !false;
place!(Field::<[u32; 6]>(Variant(_12, 1), 0)) = [_7,_7,_7,_7,_7,_7];
_3 = 8851_u16 + 23362_u16;
RET = !_9;
_16 = _9 as f64;
match _6 {
0 => bb1,
1 => bb9,
2 => bb5,
340282366920938463463374607429765523186 => bb13,
_ => bb12
}
}
bb16 = {
RET = _9;
place!(Field::<f64>(Variant(_12, 0), 1)) = _3 as f64;
_8 = -88501008654206034433840707192603007174_i128;
_13 = _2 as i8;
_1 = false;
SetDiscriminant(Field::<Adt46>(Variant(_12, 0), 0), 0);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7;
place!(Field::<i64>(Variant(_12, 0), 6)) = _6 as i64;
place!(Field::<u8>(Variant(place!(Field::<Adt46>(Variant(_12, 0), 0)), 0), 0)) = !_11;
place!(Field::<*mut u32>(Variant(_12, 0), 2)) = core::ptr::addr_of_mut!(_7);
_16 = -Field::<f64>(Variant(_12, 0), 1);
_6 = 647368947_i32 | (-1162616398_i32);
place!(Field::<u32>(Variant(_12, 0), 5)) = _7;
_7 = !Field::<u32>(Variant(_12, 0), 5);
RET = _2 as usize;
_7 = _1 as u32;
_11 = Field::<(u8,)>(Variant(_12, 0), 7).0 >> _5;
_7 = Field::<u32>(Variant(_12, 0), 5);
place!(Field::<Adt46>(Variant(_12, 0), 0)) = Adt46::Variant1 { fld0: _5 };
place!(Field::<*mut u32>(Variant(_12, 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(_12, 0), 5)));
Goto(bb11)
}
bb17 = {
RET = !1854935748278298094_usize;
Call(_9 = core::intrinsics::bswap(RET), ReturnTo(bb3), UnwindUnreachable())
}
bb18 = {
RET = _9;
_9 = _5 as usize;
_9 = RET - RET;
_6 = 559431244_i32 >> _9;
RET = _9 | _9;
_9 = RET & RET;
_4 = 53_i8 | (-83_i8);
RET = !_9;
RET = _3 as usize;
_5 = 7348_i16;
_11 = _3 as u8;
_1 = true ^ false;
_6 = _2 as i32;
_9 = RET;
RET = !_9;
Call(_12 = fn2(_3, _11, RET, _3, _6, _2, _7, RET, _8, _6, _11, _4, _4, _1, RET), ReturnTo(bb4), UnwindUnreachable())
}
bb19 = {
place!(Field::<i16>(Variant(_21, 1), 0)) = _5 & _5;
_6 = 13267885214207763326_u64 as i32;
place!(Field::<*mut u16>(Variant(_12, 1), 3)) = core::ptr::addr_of_mut!(_3);
_16 = Field::<u8>(Variant(_20, 0), 0) as f64;
_21 = Adt46::Variant0 { fld0: Field::<u8>(Variant(_20, 0), 0),fld1: Field::<char>(Variant(_20, 0), 1) };
_24.0 = [(-9223372036854775808_isize),(-24_isize)];
_6 = (-148480445_i32) & (-1818977878_i32);
place!(Field::<*const isize>(Variant(_12, 1), 1)) = core::ptr::addr_of!(_27);
_26.0 = _22.0;
_27 = 9223372036854775807_isize & (-98_isize);
_9 = _23 as usize;
_4 = _27 as i8;
place!(Field::<(u8,)>(Variant(_12, 1), 2)).0 = Field::<u8>(Variant(_21, 0), 0);
_7 = 3955679517_u32 + 773111346_u32;
_24.0 = _26.0;
_16 = _4 as f64;
_26.0 = _24.0;
Goto(bb20)
}
bb20 = {
Call(_29 = dump_var(0_usize, 11_usize, Move(_11), 1_usize, Move(_1), 14_usize, Move(_14), 27_usize, Move(_27)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_29 = dump_var(0_usize, 8_usize, Move(_8), 13_usize, Move(_13), 24_usize, Move(_24), 2_usize, Move(_2)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u32,mut _2: u32,mut _3: u32,mut _4: u16,mut _5: i16,mut _6: i8,mut _7: i8,mut _8: u16,mut _9: char,mut _10: usize) -> i32 {
mir! {
type RET = i32;
let _11: [bool; 5];
let _12: *mut [isize; 8];
let _13: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _14: bool;
let _15: (u16,);
let _16: f64;
let _17: isize;
let _18: i16;
let _19: f32;
let _20: ([isize; 2],);
let _21: u16;
let _22: i128;
let _23: i8;
let _24: u16;
let _25: *const isize;
let _26: i128;
let _27: ((u16,), bool, [bool; 6], i8);
let _28: u128;
let _29: *const isize;
let _30: *mut f64;
let _31: Adt56;
let _32: i8;
let _33: i32;
let _34: ([isize; 2],);
let _35: (u16,);
let _36: ();
let _37: ();
{
_2 = _3;
_2 = _1 & _3;
_3 = _1;
_3 = !_2;
_10 = (-7707828650425629812_i64) as usize;
_11 = [false,true,true,false,false];
_4 = (-166372316059108110331884541188173573658_i128) as u16;
RET = !(-552818950_i32);
_1 = !_2;
_7 = false as i8;
RET = 362222676_i32;
_7 = _6 >> _3;
_2 = _3 << _1;
_7 = -_6;
match _5 {
0 => bb1,
340282366920938463463374607431768203294 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_3 = _10 as u32;
_5 = !8802_i16;
RET = 268926194_i32 >> _7;
_9 = '\u{bc918}';
_5 = (-23843_i16) << _6;
_4 = _8;
_1 = !_2;
_15.0 = _8;
_2 = RET as u32;
_10 = _5 as usize;
_4 = !_15.0;
_13.1 = _1;
_13.2 = [true,false,true,false,true,true];
_6 = -_7;
_14 = _1 == _13.1;
_13.2 = [_14,_14,_14,_14,_14,_14];
_2 = RET as u32;
_9 = '\u{10ab7c}';
_13.2 = [_14,_14,_14,_14,_14,_14];
_17 = 121_isize;
_4 = !_15.0;
_4 = _15.0;
Call(_2 = core::intrinsics::transmute(_1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_7 = -_6;
_16 = 1356925362975464309_i64 as f64;
_8 = _10 as u16;
RET = (-22458279408810235716289462456683256231_i128) as i32;
_6 = !_7;
_13.0 = [(-3712029355037933216_i64),(-6837905224138582066_i64),8223273386167636688_i64];
Goto(bb5)
}
bb5 = {
_5 = _9 as i16;
_2 = _1 | _13.1;
_14 = true & true;
_13.1 = !_2;
_11 = [_14,_14,_14,_14,_14];
_10 = 15254284510855061815_usize;
_15 = (_4,);
_8 = _4 ^ _4;
_18 = _5;
_7 = _6 * _6;
_17 = 9223372036854775807_isize | (-121_isize);
RET = _15.0 as i32;
_17 = !(-20_isize);
_3 = 6016145812172430696_u64 as u32;
_21 = _4;
_19 = _10 as f32;
_8 = _15.0;
_17 = 9223372036854775807_isize - 9223372036854775807_isize;
match _10 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb6,
4 => bb7,
15254284510855061815 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
_3 = _10 as u32;
_5 = !8802_i16;
RET = 268926194_i32 >> _7;
_9 = '\u{bc918}';
_5 = (-23843_i16) << _6;
_4 = _8;
_1 = !_2;
_15.0 = _8;
_2 = RET as u32;
_10 = _5 as usize;
_4 = !_15.0;
_13.1 = _1;
_13.2 = [true,false,true,false,true,true];
_6 = -_7;
_14 = _1 == _13.1;
_13.2 = [_14,_14,_14,_14,_14,_14];
_2 = RET as u32;
_9 = '\u{10ab7c}';
_13.2 = [_14,_14,_14,_14,_14,_14];
_17 = 121_isize;
_4 = !_15.0;
_4 = _15.0;
Call(_2 = core::intrinsics::transmute(_1), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_4 = _8;
_4 = _15.0 >> _13.1;
_13.0 = [3496343105399581523_i64,8842142684286109075_i64,26214954681588300_i64];
RET = 1781032377_i32 & (-2044247380_i32);
_4 = _21;
_7 = !_6;
_18 = 6669159509023449640_u64 as i16;
_6 = _7 ^ _7;
_5 = _19 as i16;
_3 = _2 >> _2;
_15 = (_21,);
_9 = '\u{d4588}';
_22 = (-142099586777398400239154358035562234352_i128) & 12542907247235930550092548862754583488_i128;
_23 = _6 - _7;
_8 = _3 as u16;
_13.0 = [8325974571313052828_i64,4713164108011530774_i64,(-9098589103393237134_i64)];
_13.1 = _17 as u32;
_8 = _4;
_18 = _5;
RET = 1245492012_i32 | (-1692234833_i32);
_27.1 = _14;
RET = !(-844662984_i32);
_13.3 = [_17,_17];
_13.2 = [_14,_27.1,_27.1,_27.1,_27.1,_14];
match _10 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
15254284510855061815 => bb15,
_ => bb14
}
}
bb10 = {
_3 = _10 as u32;
_5 = !8802_i16;
RET = 268926194_i32 >> _7;
_9 = '\u{bc918}';
_5 = (-23843_i16) << _6;
_4 = _8;
_1 = !_2;
_15.0 = _8;
_2 = RET as u32;
_10 = _5 as usize;
_4 = !_15.0;
_13.1 = _1;
_13.2 = [true,false,true,false,true,true];
_6 = -_7;
_14 = _1 == _13.1;
_13.2 = [_14,_14,_14,_14,_14,_14];
_2 = RET as u32;
_9 = '\u{10ab7c}';
_13.2 = [_14,_14,_14,_14,_14,_14];
_17 = 121_isize;
_4 = !_15.0;
_4 = _15.0;
Call(_2 = core::intrinsics::transmute(_1), ReturnTo(bb4), UnwindUnreachable())
}
bb11 = {
_3 = _10 as u32;
_5 = !8802_i16;
RET = 268926194_i32 >> _7;
_9 = '\u{bc918}';
_5 = (-23843_i16) << _6;
_4 = _8;
_1 = !_2;
_15.0 = _8;
_2 = RET as u32;
_10 = _5 as usize;
_4 = !_15.0;
_13.1 = _1;
_13.2 = [true,false,true,false,true,true];
_6 = -_7;
_14 = _1 == _13.1;
_13.2 = [_14,_14,_14,_14,_14,_14];
_2 = RET as u32;
_9 = '\u{10ab7c}';
_13.2 = [_14,_14,_14,_14,_14,_14];
_17 = 121_isize;
_4 = !_15.0;
_4 = _15.0;
Call(_2 = core::intrinsics::transmute(_1), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
_5 = _9 as i16;
_2 = _1 | _13.1;
_14 = true & true;
_13.1 = !_2;
_11 = [_14,_14,_14,_14,_14];
_10 = 15254284510855061815_usize;
_15 = (_4,);
_8 = _4 ^ _4;
_18 = _5;
_7 = _6 * _6;
_17 = 9223372036854775807_isize | (-121_isize);
RET = _15.0 as i32;
_17 = !(-20_isize);
_3 = 6016145812172430696_u64 as u32;
_21 = _4;
_19 = _10 as f32;
_8 = _15.0;
_17 = 9223372036854775807_isize - 9223372036854775807_isize;
match _10 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb6,
4 => bb7,
15254284510855061815 => bb9,
_ => bb8
}
}
bb14 = {
_7 = -_6;
_16 = 1356925362975464309_i64 as f64;
_8 = _10 as u16;
RET = (-22458279408810235716289462456683256231_i128) as i32;
_6 = !_7;
_13.0 = [(-3712029355037933216_i64),(-6837905224138582066_i64),8223273386167636688_i64];
Goto(bb5)
}
bb15 = {
_27.1 = _14;
_20 = (_13.3,);
_24 = _8;
_6 = 144_u8 as i8;
_21 = _24 - _24;
_28 = 99021783617183217152082033578956716946_u128;
_17 = 61_isize;
_16 = 5028276630789825903_i64 as f64;
_6 = RET as i8;
_32 = _23 | _23;
_25 = core::ptr::addr_of!(_17);
_34.0 = _13.3;
_5 = _14 as i16;
_28 = 154225489021222378749987940922876295257_u128;
_24 = !_21;
_27.0.0 = !_8;
_13.3 = [_17,_17];
Goto(bb16)
}
bb16 = {
Call(_36 = dump_var(1_usize, 6_usize, Move(_6), 10_usize, Move(_10), 17_usize, Move(_17), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(1_usize, 34_usize, Move(_34), 15_usize, Move(_15), 7_usize, Move(_7), 28_usize, Move(_28)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(1_usize, 4_usize, Move(_4), 3_usize, Move(_3), 32_usize, Move(_32), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u16,mut _2: u8,mut _3: usize,mut _4: u16,mut _5: i32,mut _6: char,mut _7: u32,mut _8: usize,mut _9: i128,mut _10: i32,mut _11: u8,mut _12: i8,mut _13: i8,mut _14: bool,mut _15: usize) -> Adt47 {
mir! {
type RET = Adt47;
let _16: f32;
let _17: Adt57;
let _18: *mut i16;
let _19: i32;
let _20: Adt50;
let _21: (u8,);
let _22: bool;
let _23: f64;
let _24: isize;
let _25: i16;
let _26: [isize; 2];
let _27: *const u64;
let _28: isize;
let _29: u32;
let _30: &'static i64;
let _31: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _32: bool;
let _33: u8;
let _34: i16;
let _35: [bool; 6];
let _36: Adt60;
let _37: bool;
let _38: i16;
let _39: f32;
let _40: i128;
let _41: *mut i64;
let _42: [i64; 3];
let _43: [bool; 5];
let _44: [u32; 6];
let _45: f64;
let _46: bool;
let _47: char;
let _48: [bool; 6];
let _49: char;
let _50: u32;
let _51: bool;
let _52: u8;
let _53: ([isize; 2],);
let _54: bool;
let _55: (u8,);
let _56: isize;
let _57: f32;
let _58: *mut [isize; 8];
let _59: isize;
let _60: u64;
let _61: Adt59;
let _62: Adt62;
let _63: Adt58;
let _64: Adt62;
let _65: Adt46;
let _66: u64;
let _67: f64;
let _68: f64;
let _69: isize;
let _70: i16;
let _71: u16;
let _72: u16;
let _73: Adt56;
let _74: isize;
let _75: usize;
let _76: bool;
let _77: [u32; 6];
let _78: f32;
let _79: f32;
let _80: isize;
let _81: isize;
let _82: bool;
let _83: usize;
let _84: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _85: u64;
let _86: char;
let _87: f32;
let _88: Adt55;
let _89: (u8,);
let _90: isize;
let _91: i64;
let _92: f32;
let _93: i16;
let _94: bool;
let _95: f32;
let _96: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _97: [bool; 5];
let _98: (u8,);
let _99: ([isize; 2], [bool; 6], [isize; 2]);
let _100: u128;
let _101: char;
let _102: *mut u32;
let _103: usize;
let _104: *mut ([isize; 2], [bool; 6], [isize; 2]);
let _105: f32;
let _106: (u16,);
let _107: ([isize; 2], [bool; 6], [isize; 2]);
let _108: [bool; 8];
let _109: isize;
let _110: [isize; 8];
let _111: f32;
let _112: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _113: f64;
let _114: *mut i64;
let _115: (u16,);
let _116: (u16,);
let _117: Adt59;
let _118: [i64; 3];
let _119: isize;
let _120: char;
let _121: bool;
let _122: [u32; 6];
let _123: u8;
let _124: i64;
let _125: bool;
let _126: ();
let _127: ();
{
_3 = _10 as usize;
_1 = _10 as u16;
_14 = _13 <= _13;
_16 = _7 as f32;
_1 = _9 as u16;
_5 = _10;
_14 = false;
_15 = _8 ^ _8;
_7 = 400779365_u32;
Goto(bb1)
}
bb1 = {
_1 = !_4;
_6 = '\u{1ee9b}';
_13 = _12;
_15 = !_8;
Goto(bb2)
}
bb2 = {
_12 = _13;
_5 = _10 | _10;
_1 = _4;
_7 = 1291129816_u32 << _15;
_12 = _16 as i8;
_2 = 9223372036854775807_isize as u8;
_16 = _5 as f32;
_11 = _16 as u8;
Goto(bb3)
}
bb3 = {
_7 = !3233891905_u32;
_1 = _4;
_20.fld2 = (-9223372036854775808_isize) >> _15;
_21 = (_11,);
_21 = (_11,);
_13 = _4 as i8;
_6 = '\u{13c14}';
_20.fld0 = (_11,);
_16 = _7 as f32;
_20.fld0 = (_11,);
_22 = _14;
_2 = !_11;
_5 = _21.0 as i32;
_11 = _2;
_7 = 4945944609024125742_u64 as u32;
_5 = _14 as i32;
_20.fld0 = (_21.0,);
_5 = _10 ^ _10;
_7 = !3816147661_u32;
_21.0 = _20.fld0.0;
Call(_11 = core::intrinsics::bswap(_21.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_21 = (_20.fld0.0,);
_1 = !_4;
_19 = _5;
_15 = _8;
_10 = 13080852510898483892_u64 as i32;
_22 = _5 != _10;
_25 = 30761_i16 * (-24982_i16);
_2 = _21.0;
_5 = _19;
_12 = -_13;
_26 = [_20.fld2,_20.fld2];
_18 = core::ptr::addr_of_mut!(_25);
_21.0 = !_11;
_9 = 120416039139983228741273950935090878102_i128;
_5 = (-2552583034565556698_i64) as i32;
_4 = _1 ^ _1;
_29 = !_7;
_1 = !_4;
_3 = _15;
_19 = -_5;
_20.fld2 = _9 as isize;
match _9 {
0 => bb5,
1 => bb6,
2 => bb7,
120416039139983228741273950935090878102 => bb9,
_ => bb8
}
}
bb5 = {
_7 = !3233891905_u32;
_1 = _4;
_20.fld2 = (-9223372036854775808_isize) >> _15;
_21 = (_11,);
_21 = (_11,);
_13 = _4 as i8;
_6 = '\u{13c14}';
_20.fld0 = (_11,);
_16 = _7 as f32;
_20.fld0 = (_11,);
_22 = _14;
_2 = !_11;
_5 = _21.0 as i32;
_11 = _2;
_7 = 4945944609024125742_u64 as u32;
_5 = _14 as i32;
_20.fld0 = (_21.0,);
_5 = _10 ^ _10;
_7 = !3816147661_u32;
_21.0 = _20.fld0.0;
Call(_11 = core::intrinsics::bswap(_21.0), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_12 = _13;
_5 = _10 | _10;
_1 = _4;
_7 = 1291129816_u32 << _15;
_12 = _16 as i8;
_2 = 9223372036854775807_isize as u8;
_16 = _5 as f32;
_11 = _16 as u8;
Goto(bb3)
}
bb7 = {
_1 = !_4;
_6 = '\u{1ee9b}';
_13 = _12;
_15 = !_8;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
_6 = '\u{bc51f}';
_20.fld0 = (_21.0,);
_23 = 45256579520241534913648595716926267313_u128 as f64;
_5 = _6 as i32;
_2 = !_11;
_29 = _13 as u32;
Goto(bb10)
}
bb10 = {
_4 = !_1;
_20.fld2 = !9_isize;
_24 = _2 as isize;
_10 = _19 | _19;
_10 = !_5;
_2 = _11 ^ _20.fld0.0;
_20.fld0.0 = 15992341567781562096_u64 as u8;
_5 = !_19;
_4 = _1 >> _20.fld2;
_21.0 = !_2;
_2 = _11;
_5 = _20.fld0.0 as i32;
_20.fld0.0 = _6 as u8;
_2 = !_20.fld0.0;
_31.2 = [_22,_14,_22,_22,_22,_22];
_2 = _20.fld0.0;
_24 = _20.fld2;
_14 = _22;
_24 = _20.fld2;
_14 = _22;
_5 = _10;
_31.0 = [(-8040373984665279547_i64),684945715353547695_i64,5760025186054170421_i64];
_1 = _3 as u16;
_15 = _13 as usize;
_28 = -_24;
_8 = _15 | _3;
_21.0 = _11 * _2;
Call(_24 = fn3(_4, _14, _21.0, _29, _31.0, _13, _21.0, _26, (*_18)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_5 = _19;
_34 = !_25;
_12 = _13;
_19 = _5 - _5;
_25 = _19 as i16;
_21 = _20.fld0;
_25 = _34;
_31.3 = _26;
_7 = _29 ^ _29;
_1 = _4 * _4;
_25 = _16 as i16;
_35 = [_22,_14,_22,_22,_14,_14];
_33 = _2 & _11;
_8 = !_3;
_21 = (_33,);
_11 = _33 | _33;
_24 = -_28;
_2 = _14 as u8;
_20.fld2 = _24;
_13 = !_12;
_12 = 7617633194398574256_i64 as i8;
_22 = !_14;
_10 = -_19;
_13 = -_12;
_14 = !_22;
_1 = _4;
_19 = _5 & _5;
match _9 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb6,
120416039139983228741273950935090878102 => bb12,
_ => bb5
}
}
bb12 = {
_13 = _12;
_24 = _28;
_15 = !_8;
_34 = _25;
_33 = _11;
_12 = _7 as i8;
_10 = _29 as i32;
_37 = _21.0 == _11;
_21 = (_11,);
_8 = !_15;
_5 = _19 & _10;
_20.fld0.0 = _21.0;
_22 = !_37;
_21 = _20.fld0;
_35 = [_22,_37,_22,_22,_37,_22];
_18 = core::ptr::addr_of_mut!((*_18));
_8 = _7 as usize;
_28 = _15 as isize;
_13 = _12 | _12;
_20.fld0.0 = !_33;
_13 = 5536753823580900123_i64 as i8;
_31.1 = _7 >> _4;
_9 = 52874459777358586935732432118078583034_i128 >> _5;
_23 = _5 as f64;
_18 = core::ptr::addr_of_mut!(_38);
_19 = _10;
_23 = _9 as f64;
Goto(bb13)
}
bb13 = {
_9 = 107704387700267260146896122358714551379_i128;
_15 = _8;
_10 = _5;
_18 = core::ptr::addr_of_mut!(_34);
_40 = _6 as i128;
_22 = !_37;
_21.0 = !_20.fld0.0;
_20.fld0.0 = _19 as u8;
_8 = !_15;
_28 = _20.fld2 & _24;
match _9 {
0 => bb7,
1 => bb5,
2 => bb6,
3 => bb14,
4 => bb15,
5 => bb16,
107704387700267260146896122358714551379 => bb18,
_ => bb17
}
}
bb14 = {
_7 = !3233891905_u32;
_1 = _4;
_20.fld2 = (-9223372036854775808_isize) >> _15;
_21 = (_11,);
_21 = (_11,);
_13 = _4 as i8;
_6 = '\u{13c14}';
_20.fld0 = (_11,);
_16 = _7 as f32;
_20.fld0 = (_11,);
_22 = _14;
_2 = !_11;
_5 = _21.0 as i32;
_11 = _2;
_7 = 4945944609024125742_u64 as u32;
_5 = _14 as i32;
_20.fld0 = (_21.0,);
_5 = _10 ^ _10;
_7 = !3816147661_u32;
_21.0 = _20.fld0.0;
Call(_11 = core::intrinsics::bswap(_21.0), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
_12 = _13;
_5 = _10 | _10;
_1 = _4;
_7 = 1291129816_u32 << _15;
_12 = _16 as i8;
_2 = 9223372036854775807_isize as u8;
_16 = _5 as f32;
_11 = _16 as u8;
Goto(bb3)
}
bb17 = {
_21 = (_20.fld0.0,);
_1 = !_4;
_19 = _5;
_15 = _8;
_10 = 13080852510898483892_u64 as i32;
_22 = _5 != _10;
_25 = 30761_i16 * (-24982_i16);
_2 = _21.0;
_5 = _19;
_12 = -_13;
_26 = [_20.fld2,_20.fld2];
_18 = core::ptr::addr_of_mut!(_25);
_21.0 = !_11;
_9 = 120416039139983228741273950935090878102_i128;
_5 = (-2552583034565556698_i64) as i32;
_4 = _1 ^ _1;
_29 = !_7;
_1 = !_4;
_3 = _15;
_19 = -_5;
_20.fld2 = _9 as isize;
match _9 {
0 => bb5,
1 => bb6,
2 => bb7,
120416039139983228741273950935090878102 => bb9,
_ => bb8
}
}
bb18 = {
_31.1 = _7 | _7;
_10 = _19;
_7 = _12 as u32;
_7 = _28 as u32;
_16 = _33 as f32;
_29 = _31.1;
_38 = 3585227436463745143_u64 as i16;
_12 = -_13;
_14 = _16 != _16;
_42 = _31.0;
_2 = 7166705001725764939_i64 as u8;
_12 = !_13;
_13 = _20.fld0.0 as i8;
_26 = [_24,_28];
_43 = [_14,_14,_14,_37,_14];
_21.0 = _11 & _2;
match _9 {
0 => bb3,
107704387700267260146896122358714551379 => bb20,
_ => bb19
}
}
bb19 = {
Return()
}
bb20 = {
_32 = _14;
_37 = _23 > _23;
match _9 {
0 => bb6,
1 => bb17,
2 => bb21,
3 => bb22,
107704387700267260146896122358714551379 => bb24,
_ => bb23
}
}
bb21 = {
_12 = _13;
_5 = _10 | _10;
_1 = _4;
_7 = 1291129816_u32 << _15;
_12 = _16 as i8;
_2 = 9223372036854775807_isize as u8;
_16 = _5 as f32;
_11 = _16 as u8;
Goto(bb3)
}
bb22 = {
_1 = !_4;
_6 = '\u{1ee9b}';
_13 = _12;
_15 = !_8;
Goto(bb2)
}
bb23 = {
_1 = !_4;
_6 = '\u{1ee9b}';
_13 = _12;
_15 = !_8;
Goto(bb2)
}
bb24 = {
_14 = _32 | _32;
_43 = [_14,_32,_22,_32,_14];
_18 = core::ptr::addr_of_mut!((*_18));
_12 = _13 * _13;
_37 = !_14;
_10 = !_5;
_9 = _40 & _40;
_31.3 = _26;
_3 = _24 as usize;
_34 = _38;
_24 = _37 as isize;
_19 = _10 >> _24;
Goto(bb25)
}
bb25 = {
_1 = _12 as u16;
_34 = !_25;
_11 = (-8090830096300621075_i64) as u8;
_45 = -_23;
_25 = !(*_18);
_10 = _5 - _5;
_31.0 = _42;
_21.0 = _14 as u8;
_22 = !_14;
_44 = [_29,_29,_31.1,_29,_31.1,_29];
_35 = [_37,_32,_22,_22,_14,_22];
_43 = [_14,_32,_22,_22,_22];
_15 = !_8;
_25 = _34 >> _19;
_21 = (_20.fld0.0,);
_32 = _14 | _22;
_43 = [_22,_14,_32,_37,_32];
_13 = _12;
_6 = '\u{fd7b4}';
_7 = !_29;
_45 = _23;
_46 = _14 & _32;
_7 = _31.1;
_25 = _31.1 as i16;
Goto(bb26)
}
bb26 = {
_11 = _33;
_16 = _9 as f32;
_21.0 = _11 * _11;
_31.3 = _26;
_13 = _12;
_34 = _25 | _25;
_50 = _10 as u32;
_21.0 = _11;
_31.1 = _33 as u32;
_26 = _31.3;
_50 = !_7;
_26 = [_24,_24];
_1 = _15 as u16;
_13 = _12 ^ _12;
_24 = _7 as isize;
_9 = _23 as i128;
_3 = _29 as usize;
_5 = _19 << _3;
_29 = _50;
_21 = (_11,);
_47 = _6;
Goto(bb27)
}
bb27 = {
_50 = _29 << _19;
_45 = _23 + _23;
_26 = [_24,_28];
_29 = _50 | _31.1;
_42 = [953658173589399356_i64,2273213120907650735_i64,(-1049823143799850720_i64)];
_21 = _20.fld0;
_29 = _50 * _50;
_9 = _40 & _40;
_51 = _22 < _37;
_5 = _29 as i32;
_50 = _29;
_52 = _50 as u8;
_8 = _3;
_24 = (*_18) as isize;
_37 = !_22;
_21.0 = !_52;
_28 = -_24;
_8 = _3 >> _10;
_39 = _16 + _16;
Goto(bb28)
}
bb28 = {
_2 = _21.0 - _52;
_48 = [_51,_46,_51,_51,_32,_37];
_39 = _16 * _16;
_43 = [_46,_32,_37,_32,_46];
_5 = _19 - _19;
_2 = !_21.0;
_31.2 = _35;
_31.1 = !_50;
_10 = _5 * _19;
_45 = _23 * _23;
_55 = _21;
_38 = _13 as i16;
Goto(bb29)
}
bb29 = {
_55 = _21;
_22 = _14;
_20.fld0.0 = !_21.0;
_35 = [_46,_22,_32,_32,_32,_32];
Goto(bb30)
}
bb30 = {
_46 = _37 < _32;
_53.0 = [_28,_24];
_8 = !_3;
_31.2 = _35;
_22 = !_46;
_8 = _3 >> _21.0;
_31.3 = _53.0;
_4 = !_1;
_31.3 = [_24,_24];
_48 = _35;
Goto(bb31)
}
bb31 = {
_44 = [_50,_31.1,_29,_29,_50,_29];
_49 = _6;
_20.fld0.0 = !_2;
_51 = !_22;
_50 = !_31.1;
_15 = !_8;
_50 = !_29;
_3 = _15;
_11 = !_52;
_57 = _39 + _39;
_20.fld0 = (_11,);
_20.fld0 = _55;
_48 = _31.2;
_5 = -_10;
_47 = _49;
_6 = _49;
Goto(bb32)
}
bb32 = {
_55.0 = !_2;
_34 = _25;
_31 = (_42, _7, _48, _53.0);
_1 = _4;
Goto(bb33)
}
bb33 = {
_21.0 = _57 as u8;
_54 = _22 & _46;
_35 = _31.2;
_56 = -_24;
_53 = (_26,);
_44 = [_7,_29,_7,_50,_29,_50];
_18 = core::ptr::addr_of_mut!((*_18));
_27 = core::ptr::addr_of!(_60);
_42 = [2835094879530069383_i64,(-4429695931520183302_i64),(-7253230513881135523_i64)];
_32 = _46;
_53.0 = _26;
_14 = !_51;
_6 = _49;
_11 = _5 as u8;
_54 = !_51;
_19 = _5 | _10;
_23 = -_45;
_60 = (-8515343904735858853_i64) as u64;
_31.3 = [_56,_28];
_57 = _39;
_4 = _49 as u16;
_38 = (*_18);
_20.fld0.0 = !_52;
_47 = _49;
_51 = _32;
Goto(bb34)
}
bb34 = {
_12 = -_13;
_44 = [_29,_31.1,_50,_29,_50,_50];
_20.fld2 = _24;
_20.fld0 = (_52,);
_29 = !_50;
_5 = _19;
_11 = !_33;
_31.3 = [_56,_28];
_38 = _25;
_50 = _29;
_19 = !_10;
_59 = _56;
_68 = _23 - _23;
_25 = (*_18);
_18 = core::ptr::addr_of_mut!(_34);
_11 = (*_27) as u8;
_27 = core::ptr::addr_of!((*_27));
_20.fld0.0 = _55.0 - _2;
_27 = core::ptr::addr_of!(_66);
_19 = _5;
Call(_19 = core::intrinsics::bswap(_5), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
_40 = !_9;
_56 = _24;
_12 = _24 as i8;
_13 = _12;
_12 = _13;
_23 = _45;
_14 = _33 < _2;
_24 = _16 as isize;
_20.fld0.0 = _39 as u8;
_72 = _14 as u16;
_45 = -_68;
_48 = [_14,_32,_46,_32,_14,_54];
_74 = _20.fld2;
_76 = !_22;
_60 = 6277719092085253190_u64 << _28;
_15 = !_3;
_19 = _5;
_69 = -_56;
_9 = _40;
_28 = _20.fld2 << _72;
Goto(bb36)
}
bb36 = {
_75 = _8;
_18 = core::ptr::addr_of_mut!((*_18));
_4 = _72 + _72;
_7 = !_29;
_76 = !_51;
_31.3 = _53.0;
_70 = _34;
_18 = core::ptr::addr_of_mut!(_25);
_8 = !_3;
_6 = _49;
_54 = _10 <= _5;
Goto(bb37)
}
bb37 = {
_43 = [_32,_14,_76,_51,_54];
_70 = (*_18);
_44 = [_7,_29,_7,_29,_50,_7];
_54 = _46;
_66 = 5915860444157090299_i64 as u64;
_82 = _14 ^ _22;
_67 = _45;
_31.1 = !_50;
_4 = 223422662324787685406405299243876428767_u128 as u16;
_59 = _28 ^ _28;
_83 = _13 as usize;
_31.0 = [(-4771884890841593799_i64),5585786301138483974_i64,5484537077391148541_i64];
_59 = _28 | _74;
_81 = _57 as isize;
_84.2 = _31.2;
_22 = _14 < _32;
Call(_13 = core::intrinsics::transmute(_55.0), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
_8 = !_3;
_10 = _5 + _5;
_7 = !_50;
_78 = (*_18) as f32;
_20.fld0 = _55;
_55.0 = _20.fld0.0;
Goto(bb39)
}
bb39 = {
_5 = _10;
_86 = _6;
_65 = Adt46::Variant0 { fld0: _20.fld0.0,fld1: _49 };
_24 = _3 as isize;
_28 = _24;
Goto(bb40)
}
bb40 = {
_18 = core::ptr::addr_of_mut!(_38);
_55.0 = _51 as u8;
_27 = core::ptr::addr_of!(_60);
_85 = !(*_27);
_57 = _39 - _16;
Goto(bb41)
}
bb41 = {
_48 = [_51,_14,_14,_14,_14,_46];
_77 = [_29,_50,_7,_50,_29,_31.1];
_82 = _14 ^ _14;
_87 = -_39;
place!(Field::<char>(Variant(_65, 0), 1)) = _86;
_21 = (Field::<u8>(Variant(_65, 0), 0),);
_1 = _72 - _72;
_39 = _87 + _87;
_24 = -_28;
SetDiscriminant(_65, 1);
_27 = core::ptr::addr_of!(_60);
_55 = (_20.fld0.0,);
place!(Field::<i16>(Variant(_65, 1), 0)) = _38;
_47 = _49;
_84.0 = [2118269078674128979_i64,7423215023999977884_i64,(-1462037289506180320_i64)];
_4 = !_1;
_52 = _21.0 & _55.0;
_18 = core::ptr::addr_of_mut!(_38);
_1 = !_4;
_59 = !_56;
_2 = !_55.0;
_88.fld0 = core::ptr::addr_of!(_86);
_28 = _69 >> _24;
_90 = !_74;
_20.fld0.0 = _52 * _55.0;
_38 = -_25;
_50 = !_29;
Call(_3 = core::intrinsics::bswap(_15), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
_81 = _28 ^ _28;
_54 = _76 < _14;
_81 = _24;
_14 = _15 != _15;
_46 = _14 & _54;
_79 = _39;
_84.3 = [_90,_69];
_39 = _87 - _79;
_89 = (_55.0,);
_56 = _81 * _81;
_92 = -_79;
_33 = _78 as u8;
Goto(bb43)
}
bb43 = {
_72 = !_1;
_11 = _20.fld0.0;
_59 = _28;
_31.2 = _35;
SetDiscriminant(_65, 1);
_96.1 = !_31.1;
_39 = -_79;
_14 = !_51;
_20.fld0 = (_89.0,);
_80 = 180179377772301314727506972856948581469_u128 as isize;
_86 = _6;
_70 = !(*_18);
_71 = _1;
Goto(bb44)
}
bb44 = {
_34 = (*_18) | (*_18);
Goto(bb45)
}
bb45 = {
_98.0 = !_2;
place!(Field::<i16>(Variant(_65, 1), 0)) = _68 as i16;
_56 = _7 as isize;
_12 = _13 + _13;
_23 = -_68;
_60 = _52 as u64;
_91 = _75 as i64;
_2 = Field::<i16>(Variant(_65, 1), 0) as u8;
_93 = _34 >> _21.0;
_96.2 = [_54,_14,_54,_46,_14,_76];
_52 = _98.0 + _11;
_19 = _10 & _10;
_24 = _59;
_42 = [_91,_91,_91];
_31 = (_42, _7, _35, _53.0);
_100 = 305201106494998133426016873684174786000_u128 << _55.0;
Goto(bb46)
}
bb46 = {
_30 = &_91;
_89.0 = _21.0;
_21 = (_55.0,);
_55.0 = !_89.0;
_84.3 = _26;
_76 = !_22;
_31.1 = _12 as u32;
_22 = _11 == _11;
_2 = _57 as u8;
_99.0 = _31.3;
_60 = _85;
_4 = _15 as u16;
_84 = _31;
Call(_59 = core::intrinsics::bswap(_28), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
_96 = (_42, _31.1, _48, _99.0);
_1 = _71 & _71;
_14 = _7 >= _31.1;
_6 = _86;
_84.1 = _93 as u32;
SetDiscriminant(_65, 0);
_96.2 = _35;
_54 = _81 < _24;
_46 = !_54;
place!(Field::<u8>(Variant(_65, 0), 0)) = _55.0 << (*_27);
_96.0 = _84.0;
_84.0 = _31.0;
_72 = _71 - _1;
_104 = core::ptr::addr_of_mut!(_99);
_84.0 = [(*_30),(*_30),_91];
_23 = _68 - _45;
_38 = !_93;
_103 = _50 as usize;
_65 = Adt46::Variant0 { fld0: _20.fld0.0,fld1: _86 };
SetDiscriminant(_65, 0);
place!(Field::<char>(Variant(_65, 0), 1)) = _47;
_20.fld0 = _89;
Goto(bb48)
}
bb48 = {
_96.2 = _35;
_11 = _89.0 - _89.0;
_44 = [_7,_31.1,_31.1,_29,_50,_50];
_11 = _2 * _55.0;
_20.fld0 = (_52,);
_54 = _76;
_19 = _5 | _10;
_4 = _71 - _71;
_97 = [_32,_82,_14,_22,_22];
_15 = _3;
_51 = _76 | _54;
_84.3 = [_59,_20.fld2];
_7 = _31.1 - _96.1;
_31 = (_96.0, _29, _48, _84.3);
_53 = (_26,);
_42 = [(*_30),_91,(*_30)];
Goto(bb49)
}
bb49 = {
_50 = !_7;
_20.fld1 = core::ptr::addr_of_mut!((*_30));
_95 = _57 - _79;
_95 = _40 as f32;
_18 = core::ptr::addr_of_mut!((*_18));
_18 = core::ptr::addr_of_mut!(_93);
_108 = [_32,_51,_51,_76,_22,_76,_76,_54];
_19 = _5;
_5 = _10;
_24 = _92 as isize;
_12 = !_13;
place!(Field::<u8>(Variant(_65, 0), 0)) = _52;
_99.2 = [_81,_59];
_107.1 = _96.2;
_94 = _60 >= (*_27);
_88.fld0 = core::ptr::addr_of!(_6);
_16 = _87;
_22 = _59 >= _81;
_27 = core::ptr::addr_of!(_85);
_107.0 = _31.3;
Call(_53.0 = core::intrinsics::transmute(_31.3), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
_51 = !_54;
_106.0 = !_72;
_101 = _86;
Goto(bb51)
}
bb51 = {
_52 = !_55.0;
_32 = !_51;
_37 = _82 & _54;
place!(Field::<u8>(Variant(_65, 0), 0)) = !_55.0;
_107 = (_84.3, _35, _31.3);
_100 = (*_27) as u128;
_102 = core::ptr::addr_of_mut!(_96.1);
_29 = _7 & (*_102);
_112.3 = (*_104).2;
_38 = _74 as i16;
Goto(bb52)
}
bb52 = {
_84 = (_31.0, _50, _96.2, _107.0);
_96.0 = _42;
_85 = _60 + _60;
SetDiscriminant(_65, 0);
_23 = -_68;
_99 = _107;
_14 = _10 != _10;
_100 = 156629971763335072434566322302112941963_u128 & 300638737521367450595901997368946912179_u128;
_107 = (*_104);
place!(Field::<char>(Variant(_65, 0), 1)) = _49;
_96.1 = (*_30) as u32;
_94 = _32 | _82;
_27 = core::ptr::addr_of!(_60);
_31.3 = [_56,_28];
_45 = _67;
Goto(bb53)
}
bb53 = {
_99.2 = [_59,_20.fld2];
_112.0 = [(*_30),(*_30),_91];
_89.0 = !_21.0;
_90 = _10 as isize;
_79 = (*_18) as f32;
_34 = (*_18) * _93;
_116 = (_106.0,);
_82 = _32;
_9 = !_40;
_112.2 = [_54,_22,_94,_14,_37,_14];
_33 = (*_18) as u8;
_20.fld0.0 = !_52;
_95 = _9 as f32;
_36 = Adt60::Variant0 { fld0: (*_104).2,fld1: _102 };
SetDiscriminant(_36, 1);
_19 = _10 - _10;
_103 = _3;
_108 = [_37,_46,_32,_54,_14,_22,_94,_46];
place!(Field::<Adt54>(Variant(_36, 1), 2)) = Adt54::Variant1 { fld0: _108 };
_112.1 = !(*_102);
_76 = _56 <= _81;
Goto(bb54)
}
bb54 = {
_99.2 = [_69,_56];
_12 = !_13;
place!(Field::<[isize; 8]>(Variant(_36, 1), 4)) = [_81,_90,_56,_69,_28,_69,_56,_90];
_70 = _25;
_25 = (*_18) & (*_18);
_107 = (*_104);
place!(Field::<u8>(Variant(_65, 0), 0)) = _32 as u8;
_6 = _47;
_17 = Adt57::Variant1 { fld0: _102,fld1: _108 };
_112.3 = (*_104).2;
_81 = (*_18) as isize;
_48 = [_54,_54,_82,_14,_46,_76];
Call(_1 = core::intrinsics::bswap(_71), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
RET = Adt47::Variant0 { fld0: Move(_65),fld1: _67,fld2: Field::<*mut u32>(Variant(_17, 1), 0),fld3: _18,fld4: _100,fld5: _7,fld6: (*_30),fld7: _89 };
place!(Field::<([i64; 3], u32, [bool; 6], [isize; 2])>(Variant(_36, 1), 1)).1 = _50 + (*_102);
place!(Field::<([isize; 2], [bool; 6], [isize; 2])>(Variant(_36, 1), 5)) = (_84.3, (*_104).1, _84.3);
_41 = core::ptr::addr_of_mut!((*_30));
_115 = (_71,);
_40 = _9;
_111 = -_79;
place!(Field::<*mut f64>(Variant(_36, 1), 3)) = core::ptr::addr_of_mut!(place!(Field::<f64>(Variant(RET, 0), 1)));
place!(Field::<*mut u32>(Variant(RET, 0), 2)) = core::ptr::addr_of_mut!(_31.1);
_31.3 = (*_104).2;
_120 = _49;
place!(Field::<char>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 0), 1)) = _47;
_25 = _93;
_7 = _96.1 & Field::<u32>(Variant(RET, 0), 5);
place!(Field::<([i64; 3], u32, [bool; 6], [isize; 2])>(Variant(_36, 1), 1)).1 = !_7;
_65 = Adt46::Variant0 { fld0: _21.0,fld1: _101 };
_109 = -_56;
place!(Field::<Adt46>(Variant(RET, 0), 0)) = Adt46::Variant0 { fld0: _89.0,fld1: _47 };
_119 = _90 >> Field::<u8>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0);
_20.fld0.0 = Field::<u8>(Variant(_65, 0), 0) - _11;
_14 = _76 ^ _37;
place!(Field::<([isize; 2], [bool; 6], [isize; 2])>(Variant(_36, 1), 5)).0 = _112.3;
_119 = -_56;
_107.0 = [_81,_90];
place!(Field::<u8>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 0), 0)) = _11;
_60 = _12 as u64;
_123 = _46 as u8;
_112.0 = [(*_41),(*_41),(*_30)];
Goto(bb56)
}
bb56 = {
Call(_126 = dump_var(2_usize, 80_usize, Move(_80), 81_usize, Move(_81), 97_usize, Move(_97), 38_usize, Move(_38)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_126 = dump_var(2_usize, 56_usize, Move(_56), 123_usize, Move(_123), 51_usize, Move(_51), 112_usize, Move(_112)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_126 = dump_var(2_usize, 6_usize, Move(_6), 54_usize, Move(_54), 22_usize, Move(_22), 91_usize, Move(_91)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_126 = dump_var(2_usize, 44_usize, Move(_44), 8_usize, Move(_8), 29_usize, Move(_29), 1_usize, Move(_1)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_126 = dump_var(2_usize, 7_usize, Move(_7), 4_usize, Move(_4), 74_usize, Move(_74), 34_usize, Move(_34)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_126 = dump_var(2_usize, 115_usize, Move(_115), 40_usize, Move(_40), 10_usize, Move(_10), 37_usize, Move(_37)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_126 = dump_var(2_usize, 42_usize, Move(_42), 60_usize, Move(_60), 35_usize, Move(_35), 77_usize, Move(_77)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_126 = dump_var(2_usize, 3_usize, Move(_3), 84_usize, Move(_84), 53_usize, Move(_53), 75_usize, Move(_75)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_126 = dump_var(2_usize, 82_usize, Move(_82), 43_usize, Move(_43), 31_usize, Move(_31), 48_usize, Move(_48)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_126 = dump_var(2_usize, 76_usize, Move(_76), 59_usize, Move(_59), 106_usize, Move(_106), 69_usize, Move(_69)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_126 = dump_var(2_usize, 24_usize, Move(_24), 26_usize, Move(_26), 127_usize, _127, 127_usize, _127), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u16,mut _2: bool,mut _3: u8,mut _4: u32,mut _5: [i64; 3],mut _6: i8,mut _7: u8,mut _8: [isize; 2],mut _9: i16) -> isize {
mir! {
type RET = isize;
let _10: isize;
let _11: Adt46;
let _12: isize;
let _13: char;
let _14: f32;
let _15: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _16: (u8,);
let _17: bool;
let _18: Adt47;
let _19: f32;
let _20: u16;
let _21: (u8,);
let _22: isize;
let _23: [u32; 6];
let _24: i16;
let _25: Adt48;
let _26: u128;
let _27: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _28: (u16,);
let _29: isize;
let _30: u16;
let _31: u64;
let _32: ();
let _33: ();
{
_1 = 161929421095322070749203044964836699390_i128 as u16;
_9 = _6 as i16;
_8 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
RET = -(-9223372036854775808_isize);
_9 = (-26330_i16);
RET = !(-9223372036854775808_isize);
_4 = !2766526103_u32;
_9 = (-17434_i16);
_4 = 1677103204_u32 & 3990518474_u32;
_1 = 10446_u16;
RET = 14124873449882008288_usize as isize;
_5 = [(-388188443009867557_i64),(-3368717414725900521_i64),(-7906741230087094204_i64)];
_8 = [RET,RET];
RET = _1 as isize;
_10 = _1 as isize;
RET = !_10;
_6 = 18_i8 >> _3;
_10 = !RET;
_3 = !_7;
_3 = !_7;
_5 = [(-5038080622153462020_i64),(-2259362664803967247_i64),(-5626539619283932018_i64)];
_5 = [3100532159914188842_i64,(-6232487699967777555_i64),(-6110832401903025706_i64)];
_8 = [_10,RET];
_3 = _7;
_6 = 124_i8;
RET = _10 >> _7;
_8 = [RET,RET];
Goto(bb1)
}
bb1 = {
_8 = [_10,RET];
_3 = _7;
_1 = 58535_u16 << _4;
_7 = !_3;
_8 = [RET,RET];
_7 = _3;
_5 = [(-3265124301692142526_i64),(-7259091725233181014_i64),(-532100468826430442_i64)];
_3 = !_7;
_8 = [RET,RET];
_5 = [1672425834704669327_i64,(-110039068537442601_i64),1950291284668427065_i64];
_3 = _7;
_5 = [(-6332899699783011146_i64),(-5380162357087964233_i64),6479340991098136265_i64];
_7 = 7192979642663816530_u64 as u8;
_2 = false | true;
_2 = true ^ false;
RET = (-14207946728798337152979183352000052043_i128) as isize;
_3 = !_7;
_3 = 184228623151979553891085204480169444848_u128 as u8;
_6 = _1 as i8;
_8 = [_10,RET];
_12 = RET & _10;
_7 = 89319213182005096524834198432260446288_u128 as u8;
_1 = !9212_u16;
_7 = _3 * _3;
Goto(bb2)
}
bb2 = {
_14 = (-2145667899_i32) as f32;
_7 = (-815279292992765004_i64) as u8;
_9 = 13614_i16;
_9 = 12051_i16;
_13 = '\u{c849e}';
_11 = Adt46::Variant1 { fld0: _9 };
_8 = [_10,_10];
_13 = '\u{54e82}';
RET = _12 << _4;
_15.0 = [6960482970280339913_i64,2596761377849260311_i64,8185393680381268697_i64];
_5 = [8974854879473849984_i64,(-6867287368039157466_i64),(-4703925130801236517_i64)];
_4 = RET as u32;
RET = _10;
_1 = !36235_u16;
_17 = _4 <= _4;
_15.2 = [_17,_2,_17,_17,_17,_17];
_15.2 = [_17,_2,_17,_17,_17,_17];
_2 = _17 < _17;
_17 = _2 != _2;
_15.1 = _1 as u32;
_15.3 = _8;
RET = _4 as isize;
_4 = _15.1 * _15.1;
_4 = !_15.1;
_8 = [RET,_12];
Goto(bb3)
}
bb3 = {
_1 = 58080_u16;
_15.0 = [8222179259711096778_i64,365788795549433909_i64,(-7421362611363741891_i64)];
_1 = !41596_u16;
_15.1 = !_4;
_16 = (_7,);
RET = _10 ^ _12;
_17 = _2;
_8 = [_10,_10];
_19 = _14 + _14;
_21 = (_3,);
_1 = 46205_u16 | 51959_u16;
_22 = _10 * RET;
_17 = _2;
_13 = '\u{335c2}';
_22 = RET | _10;
_3 = _7;
_11 = Adt46::Variant0 { fld0: _16.0,fld1: _13 };
_14 = 13621636137623819606_usize as f32;
_23 = [_4,_4,_4,_4,_15.1,_4];
match _9 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
12051 => bb11,
_ => bb10
}
}
bb4 = {
_14 = (-2145667899_i32) as f32;
_7 = (-815279292992765004_i64) as u8;
_9 = 13614_i16;
_9 = 12051_i16;
_13 = '\u{c849e}';
_11 = Adt46::Variant1 { fld0: _9 };
_8 = [_10,_10];
_13 = '\u{54e82}';
RET = _12 << _4;
_15.0 = [6960482970280339913_i64,2596761377849260311_i64,8185393680381268697_i64];
_5 = [8974854879473849984_i64,(-6867287368039157466_i64),(-4703925130801236517_i64)];
_4 = RET as u32;
RET = _10;
_1 = !36235_u16;
_17 = _4 <= _4;
_15.2 = [_17,_2,_17,_17,_17,_17];
_15.2 = [_17,_2,_17,_17,_17,_17];
_2 = _17 < _17;
_17 = _2 != _2;
_15.1 = _1 as u32;
_15.3 = _8;
RET = _4 as isize;
_4 = _15.1 * _15.1;
_4 = !_15.1;
_8 = [RET,_12];
Goto(bb3)
}
bb5 = {
_8 = [_10,RET];
_3 = _7;
_1 = 58535_u16 << _4;
_7 = !_3;
_8 = [RET,RET];
_7 = _3;
_5 = [(-3265124301692142526_i64),(-7259091725233181014_i64),(-532100468826430442_i64)];
_3 = !_7;
_8 = [RET,RET];
_5 = [1672425834704669327_i64,(-110039068537442601_i64),1950291284668427065_i64];
_3 = _7;
_5 = [(-6332899699783011146_i64),(-5380162357087964233_i64),6479340991098136265_i64];
_7 = 7192979642663816530_u64 as u8;
_2 = false | true;
_2 = true ^ false;
RET = (-14207946728798337152979183352000052043_i128) as isize;
_3 = !_7;
_3 = 184228623151979553891085204480169444848_u128 as u8;
_6 = _1 as i8;
_8 = [_10,RET];
_12 = RET & _10;
_7 = 89319213182005096524834198432260446288_u128 as u8;
_1 = !9212_u16;
_7 = _3 * _3;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_15.0 = _5;
_8 = _15.3;
_6 = (-117_i8);
_6 = 81980670625661244704457264354038100167_i128 as i8;
_5 = [2343289681286332530_i64,4572384163993894908_i64,4628600817515636183_i64];
_12 = _22 ^ _22;
_15.3 = _8;
_15.1 = !_4;
_22 = RET * _10;
_20 = _1;
_4 = _15.1;
RET = _12;
_15.1 = _4 - _4;
_27.0 = [(-2357166551146471607_i64),5341956069298435392_i64,(-9201011831330336284_i64)];
_20 = !_1;
_27 = (_15.0, _15.1, _15.2, _15.3);
place!(Field::<u8>(Variant(_11, 0), 0)) = _3;
_24 = _9;
_3 = 5133845513685113891_u64 as u8;
_30 = !_1;
RET = _22;
_2 = _17 | _17;
SetDiscriminant(_11, 1);
Call(_2 = fn4(_12, _15.1, _17, _15, _15, RET, _12), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_6 = (-38_i8) ^ 44_i8;
_16 = (_3,);
place!(Field::<i16>(Variant(_11, 1), 0)) = _24 ^ _24;
_17 = _2;
_29 = _22;
_4 = _16.0 as u32;
_15 = (_5, _4, _27.2, _8);
_21 = (_7,);
_22 = -RET;
_11 = Adt46::Variant1 { fld0: _24 };
_15 = (_5, _27.1, _27.2, _8);
_27.1 = _15.1 + _15.1;
_28 = (_20,);
match Field::<i16>(Variant(_11, 1), 0) {
0 => bb4,
1 => bb7,
2 => bb13,
3 => bb14,
4 => bb15,
12051 => bb17,
_ => bb16
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_24 = _16.0 as i16;
_26 = !200409397499291596564712252829137159155_u128;
_28 = (_1,);
_29 = _6 as isize;
_21 = (_7,);
_23 = [_27.1,_27.1,_4,_27.1,_15.1,_27.1];
_20 = _28.0;
_15.1 = _27.1 - _27.1;
_5 = [9202595862877589437_i64,(-9047407598198428740_i64),(-2811173647503638589_i64)];
_3 = _7 & _21.0;
_4 = _7 as u32;
_23 = [_15.1,_15.1,_15.1,_27.1,_15.1,_15.1];
_11 = Adt46::Variant0 { fld0: _7,fld1: _13 };
_11 = Adt46::Variant1 { fld0: _24 };
_22 = RET & _29;
_22 = _12 ^ _12;
RET = _12;
_27 = (_5, _15.1, _15.2, _15.3);
_1 = _24 as u16;
_31 = 12538363319075831179_u64 | 4315118676471143329_u64;
Goto(bb18)
}
bb18 = {
Call(_32 = dump_var(3_usize, 28_usize, Move(_28), 29_usize, Move(_29), 20_usize, Move(_20), 24_usize, Move(_24)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(3_usize, 2_usize, Move(_2), 3_usize, Move(_3), 21_usize, Move(_21), 23_usize, Move(_23)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_32 = dump_var(3_usize, 17_usize, Move(_17), 10_usize, Move(_10), 1_usize, Move(_1), 22_usize, Move(_22)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_32 = dump_var(3_usize, 8_usize, Move(_8), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: isize,mut _2: u32,mut _3: bool,mut _4: ([i64; 3], u32, [bool; 6], [isize; 2]),mut _5: ([i64; 3], u32, [bool; 6], [isize; 2]),mut _6: isize,mut _7: isize) -> bool {
mir! {
type RET = bool;
let _8: usize;
let _9: f64;
let _10: isize;
let _11: i128;
let _12: f64;
let _13: Adt55;
let _14: [isize; 8];
let _15: u128;
let _16: [i64; 3];
let _17: [isize; 8];
let _18: Adt47;
let _19: f32;
let _20: Adt61;
let _21: u8;
let _22: Adt46;
let _23: u16;
let _24: u64;
let _25: u8;
let _26: u8;
let _27: f32;
let _28: [isize; 2];
let _29: i128;
let _30: [isize; 2];
let _31: isize;
let _32: *mut u32;
let _33: *mut f64;
let _34: u128;
let _35: i32;
let _36: u8;
let _37: Adt59;
let _38: [isize; 2];
let _39: ();
let _40: ();
{
_3 = true ^ false;
_3 = _1 <= _7;
_3 = true | true;
RET = _3 | _3;
_5.1 = _4.1 & _2;
_8 = 1017381111582842866_usize * 5_usize;
RET = _6 >= _7;
_5.0 = [(-7843482866662807264_i64),(-4070233145861327082_i64),8728819901945539944_i64];
_2 = _5.1;
_6 = _1 - _7;
_5.3 = _4.3;
_4 = (_5.0, _2, _5.2, _5.3);
_4.0 = _5.0;
_4.2 = _5.2;
_4 = _5;
_6 = 11761018475881442129_u64 as isize;
_5.2 = _4.2;
_8 = !5_usize;
_4.1 = _5.1 << _6;
RET = !_3;
_9 = 56099_u16 as f64;
Call(_4 = fn5(_1, _5.1, _5.0, _1, _1, _5.1, _5.2, _1, _5, _5, _5, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = (_5.0, _2, _5.2, _5.3);
_2 = !_5.1;
RET = _3;
_2 = !_4.1;
_4.3 = [_7,_7];
RET = _3;
_2 = _4.1;
_11 = (-20993537636662140888550938468303222036_i128) | 91580195531674701014163730768694812195_i128;
_5.3 = [_7,_1];
_1 = _7 - _7;
_10 = 245817102762294417827147612764443426013_u128 as isize;
_14 = [_1,_1,_7,_1,_1,_1,_7,_1];
_4 = _5;
_1 = _7 ^ _7;
_12 = 63827_u16 as f64;
_5.0 = _4.0;
_4.3 = [_1,_1];
_7 = !_1;
_15 = 213336918931114095661141980532972221048_u128;
RET = _3;
match _15 {
0 => bb2,
1 => bb3,
213336918931114095661141980532972221048 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Call(_4.1 = core::intrinsics::bswap(_2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_12 = _9 - _9;
_1 = (-1741626239_i32) as isize;
_7 = !_10;
_17 = [_1,_7,_6,_1,_10,_10,_10,_6];
_4 = (_5.0, _5.1, _5.2, _5.3);
_5.1 = _4.1;
_6 = -_1;
_5.0 = _4.0;
_4.3 = [_10,_10];
_5 = (_4.0, _2, _4.2, _4.3);
RET = !_3;
_2 = _7 as u32;
_5.0 = [(-704496908925357865_i64),(-6841088010915782806_i64),6367244603545622054_i64];
RET = _12 != _9;
RET = !_3;
_11 = !82473227969050879857534004493743617858_i128;
_5.3 = [_10,_7];
_5.2 = [RET,_3,RET,RET,RET,_3];
RET = _5.1 <= _4.1;
_19 = 1162995829498778150_i64 as f32;
match _15 {
0 => bb1,
213336918931114095661141980532972221048 => bb7,
_ => bb3
}
}
bb7 = {
RET = _3;
_12 = _9 * _9;
_14 = _17;
_4.0 = _5.0;
_11 = (-36812538360220586577275052227125125192_i128) - 20350455467354414033577745325298544803_i128;
_16 = [(-6124386747693741378_i64),(-6578607267543459498_i64),6837346951211506762_i64];
_12 = _8 as f64;
_19 = 21259_i16 as f32;
_4.1 = !_5.1;
_5.3 = _4.3;
_3 = !RET;
Goto(bb8)
}
bb8 = {
_5.1 = _12 as u32;
RET = _7 < _10;
_22 = Adt46::Variant1 { fld0: (-17751_i16) };
_5.0 = _4.0;
_14 = _17;
_4.2 = [RET,_3,RET,RET,RET,RET];
_2 = (-121_i8) as u32;
RET = _3;
_24 = 16671600315526428636_u64 | 6032260800285732654_u64;
_3 = RET | RET;
_5.3 = [_7,_7];
RET = _3;
_3 = !RET;
Goto(bb9)
}
bb9 = {
_10 = RET as isize;
_1 = !_10;
_23 = (-5449139256611989767_i64) as u16;
Call(_18 = fn6(_7, _4.1, _7, _3, _4, _4.3, _24, _7), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_11 = 67055354000138881418545335214315746787_i128;
place!(Field::<u32>(Variant(_18, 0), 5)) = !_4.1;
place!(Field::<f64>(Variant(_18, 0), 1)) = -_12;
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = _8 as u8;
_10 = -_1;
_7 = _6 ^ _10;
_4.3 = [_7,_10];
_22 = Adt46::Variant1 { fld0: Field::<i16>(Variant(Field::<Adt46>(Variant(_18, 0), 0), 1), 0) };
_5 = (_16, _2, _4.2, _4.3);
_22 = Adt46::Variant0 { fld0: Field::<(u8,)>(Variant(_18, 0), 7).0,fld1: '\u{10b587}' };
SetDiscriminant(Field::<Adt46>(Variant(_18, 0), 0), 1);
_26 = Field::<(u8,)>(Variant(_18, 0), 7).0;
_11 = (-54807839170549668022852822166379189202_i128) >> _7;
_25 = RET as u8;
_23 = !30004_u16;
_10 = -_6;
place!(Field::<*mut u32>(Variant(_18, 0), 2)) = core::ptr::addr_of_mut!(_4.1);
_9 = _12;
place!(Field::<i64>(Variant(_18, 0), 6)) = (-6178502445154665716_i64);
_17 = [_1,_7,_7,_7,_7,_10,_7,_1];
_27 = _19;
place!(Field::<Adt46>(Variant(_18, 0), 0)) = Adt46::Variant1 { fld0: 5611_i16 };
_2 = _4.1 << Field::<u32>(Variant(_18, 0), 5);
Goto(bb11)
}
bb11 = {
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = _25 - _25;
_13.fld0 = core::ptr::addr_of!(place!(Field::<char>(Variant(_22, 0), 1)));
_5.0 = [Field::<i64>(Variant(_18, 0), 6),Field::<i64>(Variant(_18, 0), 6),Field::<i64>(Variant(_18, 0), 6)];
RET = _3;
_19 = Field::<f64>(Variant(_18, 0), 1) as f32;
place!(Field::<Adt46>(Variant(_18, 0), 0)) = Adt46::Variant0 { fld0: _25,fld1: '\u{7d3f4}' };
_28 = [_6,_10];
place!(Field::<u8>(Variant(_22, 0), 0)) = Field::<(u8,)>(Variant(_18, 0), 7).0 & _25;
_5.0 = [Field::<i64>(Variant(_18, 0), 6),Field::<i64>(Variant(_18, 0), 6),Field::<i64>(Variant(_18, 0), 6)];
_3 = !RET;
place!(Field::<char>(Variant(place!(Field::<Adt46>(Variant(_18, 0), 0)), 0), 1)) = '\u{5fe4e}';
_4.0 = [Field::<i64>(Variant(_18, 0), 6),Field::<i64>(Variant(_18, 0), 6),Field::<i64>(Variant(_18, 0), 6)];
_3 = RET;
Call(_4.0 = core::intrinsics::transmute(_16), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_21 = !Field::<u8>(Variant(Field::<Adt46>(Variant(_18, 0), 0), 0), 0);
_12 = Field::<f64>(Variant(_18, 0), 1);
_19 = _27;
_24 = _11 as u64;
_5.2 = [RET,_3,_3,_3,_3,RET];
_8 = (-41_i8) as usize;
place!(Field::<i64>(Variant(_18, 0), 6)) = (-5300356865498314940_i64) & (-2705133713158082466_i64);
SetDiscriminant(_18, 0);
_13.fld0 = core::ptr::addr_of!(place!(Field::<char>(Variant(_22, 0), 1)));
_3 = RET;
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = _15 as u8;
_15 = 254865385973515877316501075394798221329_u128 & 333199867538068461745052378931813790941_u128;
_29 = _11 | _11;
_30 = _4.3;
place!(Field::<f64>(Variant(_18, 0), 1)) = _27 as f64;
_10 = _1;
_9 = -Field::<f64>(Variant(_18, 0), 1);
_27 = _19 + _19;
_5 = _4;
_5.1 = _4.1;
place!(Field::<*mut u32>(Variant(_18, 0), 2)) = core::ptr::addr_of_mut!(_5.1);
Goto(bb13)
}
bb13 = {
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = _21 | Field::<u8>(Variant(_22, 0), 0);
_4.1 = _2;
_13.fld0 = core::ptr::addr_of!(place!(Field::<char>(Variant(_22, 0), 1)));
_25 = _2 as u8;
place!(Field::<Adt46>(Variant(_18, 0), 0)) = Adt46::Variant0 { fld0: Field::<u8>(Variant(_22, 0), 0),fld1: '\u{b4fb4}' };
_27 = -_19;
_4.2 = [_3,_3,RET,RET,_3,_3];
_10 = _7;
_14 = [_7,_7,_7,_10,_6,_1,_7,_6];
place!(Field::<char>(Variant(_22, 0), 1)) = '\u{dcc7c}';
_10 = 7807239606406612305_i64 as isize;
place!(Field::<char>(Variant(place!(Field::<Adt46>(Variant(_18, 0), 0)), 0), 1)) = Field::<char>(Variant(_22, 0), 1);
SetDiscriminant(_22, 1);
place!(Field::<Adt46>(Variant(_18, 0), 0)) = Adt46::Variant1 { fld0: 9656_i16 };
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = _25;
_29 = _24 as i128;
_5.1 = _4.1;
Goto(bb14)
}
bb14 = {
_26 = (-21389_i16) as u8;
_34 = _15 & _15;
_28 = [_1,_7];
place!(Field::<*mut i16>(Variant(_18, 0), 3)) = core::ptr::addr_of_mut!(place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(_18, 0), 0)), 1), 0)));
place!(Field::<Adt46>(Variant(_18, 0), 0)) = Adt46::Variant0 { fld0: _21,fld1: '\u{75642}' };
RET = !_3;
_34 = 2670_i16 as u128;
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = 49_i8 as u8;
_21 = !_25;
_4.2 = [RET,RET,_3,_3,_3,_3];
_30 = [_7,_7];
place!(Field::<f64>(Variant(_18, 0), 1)) = _9;
place!(Field::<u32>(Variant(_18, 0), 5)) = _2 | _4.1;
place!(Field::<*mut i16>(Variant(_18, 0), 3)) = core::ptr::addr_of_mut!(place!(Field::<i16>(Variant(_22, 1), 0)));
place!(Field::<(u8,)>(Variant(_18, 0), 7)).0 = Field::<u8>(Variant(Field::<Adt46>(Variant(_18, 0), 0), 0), 0);
_8 = !7_usize;
_4.3 = [_7,_1];
RET = _21 != _25;
_12 = _9 - _9;
_8 = 16433093203493508746_usize;
_1 = _7;
RET = !_3;
_24 = _3 as u64;
RET = !_3;
_1 = _7 >> _7;
place!(Field::<char>(Variant(place!(Field::<Adt46>(Variant(_18, 0), 0)), 0), 1)) = '\u{51bee}';
_7 = !_1;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(4_usize, 26_usize, Move(_26), 15_usize, Move(_15), 4_usize, Move(_4), 8_usize, Move(_8)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(4_usize, 16_usize, Move(_16), 7_usize, Move(_7), 21_usize, Move(_21), 23_usize, Move(_23)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(4_usize, 34_usize, Move(_34), 5_usize, Move(_5), 3_usize, Move(_3), 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: isize,mut _2: u32,mut _3: [i64; 3],mut _4: isize,mut _5: isize,mut _6: u32,mut _7: [bool; 6],mut _8: isize,mut _9: ([i64; 3], u32, [bool; 6], [isize; 2]),mut _10: ([i64; 3], u32, [bool; 6], [isize; 2]),mut _11: ([i64; 3], u32, [bool; 6], [isize; 2]),mut _12: ([i64; 3], u32, [bool; 6], [isize; 2])) -> ([i64; 3], u32, [bool; 6], [isize; 2]) {
mir! {
type RET = ([i64; 3], u32, [bool; 6], [isize; 2]);
let _13: char;
let _14: ([isize; 2],);
let _15: [usize; 8];
let _16: *mut i64;
let _17: ((u16,), bool, [bool; 6], i8);
let _18: ([isize; 2], [bool; 6], [isize; 2]);
let _19: ();
let _20: ();
{
_4 = _1;
_10.0 = _12.0;
_8 = 44475_u16 as isize;
RET.0 = [(-3890490895913677682_i64),(-6362160252222513714_i64),7016494058688082092_i64];
RET.1 = !_11.1;
RET.2 = [false,true,true,false,true,false];
RET.2 = [false,true,false,true,false,false];
_2 = _6 + _10.1;
_10.2 = _7;
_11.1 = 62743_u16 as u32;
_1 = _4 & _4;
_9.2 = [true,true,false,false,true,false];
_12.2 = [true,true,false,false,true,true];
RET.0 = [(-2659196431658856605_i64),1074091318501881481_i64,(-7670940684053665086_i64)];
_11.1 = _6;
RET.3 = _12.3;
RET.1 = !_9.1;
_11.3 = RET.3;
RET = (_11.0, _11.1, _12.2, _9.3);
_12 = _9;
_9.0 = [(-6681024261052839667_i64),911241505000520199_i64,(-5762935434339164816_i64)];
Goto(bb1)
}
bb1 = {
_12 = _11;
_8 = 14090613023267858718_usize as isize;
_8 = (-103133576606560756274246390459604419531_i128) as isize;
_12.2 = _7;
_11 = (_10.0, _10.1, _10.2, RET.3);
_12.0 = RET.0;
RET.1 = _11.1;
_10.0 = [3137681675386557212_i64,(-1603207320384150495_i64),8714568225750142497_i64];
_9.1 = 64589_u16 as u32;
RET.0 = [2396448364632231307_i64,6835876268393245349_i64,4899552359025784529_i64];
_12.3 = _9.3;
Goto(bb2)
}
bb2 = {
_13 = '\u{101c32}';
RET.3 = [_4,_1];
_12.2 = [true,false,false,true,false,false];
RET = _11;
_15 = [15877007667627603329_usize,2_usize,7_usize,6_usize,6627654167530864981_usize,17106438330247440715_usize,4_usize,6_usize];
_9.1 = _11.1 & _11.1;
RET.3 = [_8,_1];
RET.0 = [6580209458110115069_i64,(-271834589110393063_i64),1352343977293937654_i64];
_10.1 = 10998866860595569338_usize as u32;
_9.3 = RET.3;
_12.1 = _11.1 >> _1;
_9.2 = [false,true,false,true,false,true];
RET = _12;
_12.2 = [true,true,true,false,false,false];
_14.0 = [_8,_1];
_9.1 = !RET.1;
_17.3 = 51_u8 as i8;
_13 = '\u{bf73f}';
_17.3 = RET.1 as i8;
_10 = (_11.0, RET.1, _11.2, RET.3);
_17.1 = true;
_14.0 = _9.3;
RET = (_12.0, _9.1, _11.2, _14.0);
_4 = 12161_u16 as isize;
_5 = _1 << _12.1;
_12.3 = [_5,_5];
Goto(bb3)
}
bb3 = {
Call(_19 = dump_var(5_usize, 12_usize, Move(_12), 4_usize, Move(_4), 14_usize, Move(_14), 2_usize, Move(_2)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_19 = dump_var(5_usize, 7_usize, Move(_7), 6_usize, Move(_6), 1_usize, Move(_1), 20_usize, _20), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: u32,mut _3: isize,mut _4: bool,mut _5: ([i64; 3], u32, [bool; 6], [isize; 2]),mut _6: [isize; 2],mut _7: u64,mut _8: isize) -> Adt47 {
mir! {
type RET = Adt47;
let _9: [u32; 6];
let _10: Adt58;
let _11: ([isize; 2],);
let _12: i32;
let _13: f32;
let _14: i8;
let _15: *mut i16;
let _16: f32;
let _17: i16;
let _18: [bool; 5];
let _19: i16;
let _20: ([isize; 2], [bool; 6], [isize; 2]);
let _21: [u32; 6];
let _22: f64;
let _23: isize;
let _24: i128;
let _25: bool;
let _26: *mut f64;
let _27: i16;
let _28: u128;
let _29: i32;
let _30: *const isize;
let _31: i64;
let _32: [isize; 2];
let _33: *const char;
let _34: [isize; 2];
let _35: isize;
let _36: u32;
let _37: bool;
let _38: [bool; 5];
let _39: Adt48;
let _40: usize;
let _41: u16;
let _42: *const isize;
let _43: f32;
let _44: u32;
let _45: isize;
let _46: Adt61;
let _47: Adt52;
let _48: ([isize; 2], [bool; 6], [isize; 2]);
let _49: [isize; 2];
let _50: bool;
let _51: f32;
let _52: ();
let _53: ();
{
_5.3 = [_8,_3];
_7 = 5363022646751757891_u64 ^ 6094775315174513635_u64;
_4 = !false;
_8 = -_3;
_1 = _8;
_5.0 = [130350795478095091_i64,(-2837844292554856289_i64),(-2122253251760311277_i64)];
_7 = _4 as u64;
_9 = [_2,_5.1,_5.1,_5.1,_5.1,_5.1];
_7 = _4 as u64;
_5.0 = [6746691849277547135_i64,1054509219366859376_i64,(-4537773466054452835_i64)];
_7 = 16477929704762193132_u64;
_9 = [_5.1,_2,_2,_2,_2,_2];
_3 = !_8;
_5.2 = [_4,_4,_4,_4,_4,_4];
_5.3 = [_8,_1];
_5.1 = 1312004410729278212_i64 as u32;
_4 = true | false;
_3 = !_1;
_5.0 = [8186839618810366648_i64,7524086338671620147_i64,7012629824914986209_i64];
_8 = 142_u8 as isize;
Goto(bb1)
}
bb1 = {
_8 = (-8091116770834024579_i64) as isize;
_7 = 283376584192489881474031639144400495789_u128 as u64;
_1 = !_8;
_2 = _5.1;
_11 = (_5.3,);
_2 = _5.1;
_3 = _8 & _8;
_5.3 = _6;
_9 = [_5.1,_2,_2,_5.1,_5.1,_5.1];
_1 = _3 + _8;
_5.1 = _2;
_16 = (-45588155815317803013146853938319959807_i128) as f32;
_6 = _5.3;
_7 = 14468092906345270764_u64;
_7 = '\u{14d13}' as u64;
_8 = _7 as isize;
_16 = 261631104004889956556036397973282216773_u128 as f32;
_14 = 59094_u16 as i8;
Goto(bb2)
}
bb2 = {
_12 = (-2046068309_i32);
_12 = 729555389_i32;
_4 = !true;
_16 = _14 as f32;
_16 = (-12479_i16) as f32;
_13 = _16 + _16;
_16 = -_13;
_16 = _13 * _13;
_6 = _5.3;
_5.3 = [_3,_1];
_8 = 9931524815542474476_usize as isize;
_17 = !20502_i16;
_3 = _8 ^ _1;
_13 = _14 as f32;
_4 = false | true;
_15 = core::ptr::addr_of_mut!(_17);
_3 = _1;
_7 = !6987436274096702305_u64;
Call(_1 = core::intrinsics::bswap(_8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = _16 as isize;
_17 = _3 as i16;
_20 = (_6, _5.2, _6);
_20.2 = [_3,_1];
_20.1 = [_4,_4,_4,_4,_4,_4];
_18 = [_4,_4,_4,_4,_4];
match _12 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
729555389 => bb8,
_ => bb7
}
}
bb4 = {
_12 = (-2046068309_i32);
_12 = 729555389_i32;
_4 = !true;
_16 = _14 as f32;
_16 = (-12479_i16) as f32;
_13 = _16 + _16;
_16 = -_13;
_16 = _13 * _13;
_6 = _5.3;
_5.3 = [_3,_1];
_8 = 9931524815542474476_usize as isize;
_17 = !20502_i16;
_3 = _8 ^ _1;
_13 = _14 as f32;
_4 = false | true;
_15 = core::ptr::addr_of_mut!(_17);
_3 = _1;
_7 = !6987436274096702305_u64;
Call(_1 = core::intrinsics::bswap(_8), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_8 = (-8091116770834024579_i64) as isize;
_7 = 283376584192489881474031639144400495789_u128 as u64;
_1 = !_8;
_2 = _5.1;
_11 = (_5.3,);
_2 = _5.1;
_3 = _8 & _8;
_5.3 = _6;
_9 = [_5.1,_2,_2,_5.1,_5.1,_5.1];
_1 = _3 + _8;
_5.1 = _2;
_16 = (-45588155815317803013146853938319959807_i128) as f32;
_6 = _5.3;
_7 = 14468092906345270764_u64;
_7 = '\u{14d13}' as u64;
_8 = _7 as isize;
_16 = 261631104004889956556036397973282216773_u128 as f32;
_14 = 59094_u16 as i8;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_22 = _12 as f64;
_19 = (*_15);
_23 = _3 & _3;
_24 = (-92925322888140427763952164370540192318_i128);
_24 = (-168514238742030871978774122637203349356_i128) * (-23620361534867456374086451271167432041_i128);
_1 = _8 & _23;
_3 = _8 >> _1;
_7 = !1139114069969068064_u64;
_24 = -164814777900708052738145163933982904245_i128;
_20 = (_11.0, _5.2, _5.3);
_24 = 1395411658033075270_i64 as i128;
_26 = core::ptr::addr_of_mut!(_22);
_5.3 = [_3,_1];
_5.2 = [_4,_4,_4,_4,_4,_4];
_17 = 86_u8 as i16;
_27 = 28666_u16 as i16;
_2 = _5.1;
_19 = '\u{f0758}' as i16;
_24 = 135027634477678440162981207921265703318_i128;
_29 = _12 << _1;
_28 = !10746005340128280004644339293636353618_u128;
_25 = !_4;
_20.0 = [_23,_1];
_6 = _5.3;
_19 = (*_15);
Call(_5.0 = core::intrinsics::transmute(_9), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_1 = !_23;
_13 = _7 as f32;
_5.0 = [900112040492698200_i64,(-469525878438983439_i64),(-4597066863628609310_i64)];
_1 = -_3;
_2 = _5.1;
_5.2 = [_25,_4,_25,_25,_25,_4];
_11.0 = [_1,_23];
_29 = _12;
_20 = (_6, _5.2, _11.0);
_22 = _12 as f64;
_3 = _23;
_2 = _5.1;
_31 = -1501913302283064771_i64;
_7 = !8127260277642877584_u64;
_24 = 30348292744835619380333702414148747823_i128 + (-111513947799531428101305893118213938569_i128);
_20.1 = _5.2;
Goto(bb10)
}
bb10 = {
_35 = _3 - _23;
_20.1 = _5.2;
_29 = -_12;
_34 = [_3,_1];
_30 = core::ptr::addr_of!(_3);
_22 = _28 as f64;
_32 = [_35,(*_30)];
_17 = _19 * _19;
_16 = _13 + _13;
_29 = 41361_u16 as i32;
_11.0 = [_23,_1];
_5.1 = _2;
_21 = [_2,_2,_2,_2,_2,_2];
_5.0 = [_31,_31,_31];
_11.0 = [_35,_23];
_11.0 = [(*_30),(*_30)];
_8 = _35 >> _7;
_28 = !43378145648621257612162055642968812780_u128;
_11.0 = [_8,(*_30)];
_17 = _19;
_12 = _1 as i32;
_18 = [_4,_4,_4,_4,_25];
_6 = [(*_30),_8];
_24 = (-124535253918858404126036326100653802513_i128);
_11.0 = [_8,(*_30)];
_5.3 = [_23,_35];
_23 = -_35;
Goto(bb11)
}
bb11 = {
_19 = (*_15);
_8 = (*_30);
_5.3 = [_23,_8];
_23 = _28 as isize;
_16 = _13;
_5.2 = [_25,_4,_4,_4,_4,_25];
_20 = (_11.0, _5.2, _6);
_13 = _16;
_36 = _5.1;
_4 = _25;
_22 = (*_15) as f64;
Goto(bb12)
}
bb12 = {
_5.0 = [_31,_31,_31];
_30 = core::ptr::addr_of!(_1);
_25 = _3 != _35;
_20.1 = _5.2;
_40 = 12664565135458159909_usize - 1_usize;
_35 = _3;
_29 = _19 as i32;
_26 = core::ptr::addr_of_mut!((*_26));
_44 = _5.1 * _36;
_43 = _16;
_38 = [_25,_25,_25,_25,_25];
_21 = _9;
_1 = _3;
_38 = [_25,_25,_25,_25,_25];
Goto(bb13)
}
bb13 = {
_20.0 = _34;
_9 = [_44,_44,_44,_44,_44,_5.1];
_22 = _7 as f64;
_43 = _16;
_7 = _14 as u64;
_35 = (*_30);
_13 = _16;
_7 = 6186156024546447364_u64 + 15643781518631912557_u64;
_7 = _31 as u64;
_31 = 119_u8 as i64;
_44 = _36;
_3 = !_1;
_31 = -(-5755309652415145104_i64);
_41 = 35869_u16;
_22 = _2 as f64;
_2 = _44;
_34 = [_3,(*_30)];
_32 = _5.3;
_21 = [_44,_36,_5.1,_36,_2,_44];
_35 = (*_30);
_14 = (-108_i8) | 9_i8;
_30 = core::ptr::addr_of!(_23);
_48.2 = [_35,_8];
_43 = _16;
_19 = _17 | (*_15);
Goto(bb14)
}
bb14 = {
_20 = (_5.3, _5.2, _34);
_41 = 64944_u16;
Call(RET = fn7(_1, _5.3, _3, _20.0, _12, _20.0, _32, _6, (*_30), _20, _11.0), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_6 = [_3,_8];
place!(Field::<u32>(Variant(RET, 0), 5)) = _5.1;
_36 = !_2;
_20.0 = [_1,_35];
_41 = !17034_u16;
_24 = (-48918175152052875041347945109316874611_i128) >> _3;
place!(Field::<*mut u32>(Variant(RET, 0), 2)) = core::ptr::addr_of_mut!(place!(Field::<u32>(Variant(RET, 0), 5)));
_4 = !_25;
_15 = Field::<*mut i16>(Variant(RET, 0), 3);
_20 = (_32, _5.2, _32);
_14 = 84_i8 & 46_i8;
place!(Field::<i64>(Variant(RET, 0), 6)) = _24 as i64;
_15 = core::ptr::addr_of_mut!(_17);
_45 = -_3;
place!(Field::<f64>(Variant(RET, 0), 1)) = _7 as f64;
_32 = _11.0;
place!(Field::<i64>(Variant(RET, 0), 6)) = _31 - _31;
_24 = (-103398838816967833677952484494817141209_i128) * 168980016165452190610223631235439213826_i128;
place!(Field::<f64>(Variant(RET, 0), 1)) = (*_26);
place!(Field::<(u8,)>(Variant(RET, 0), 7)).0 = 108_u8 << _12;
Goto(bb16)
}
bb16 = {
Call(_52 = dump_var(6_usize, 12_usize, Move(_12), 4_usize, Move(_4), 18_usize, Move(_18), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_52 = dump_var(6_usize, 23_usize, Move(_23), 5_usize, Move(_5), 6_usize, Move(_6), 21_usize, Move(_21)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_52 = dump_var(6_usize, 25_usize, Move(_25), 20_usize, Move(_20), 24_usize, Move(_24), 41_usize, Move(_41)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_52 = dump_var(6_usize, 31_usize, Move(_31), 27_usize, Move(_27), 34_usize, Move(_34), 8_usize, Move(_8)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: isize,mut _2: [isize; 2],mut _3: isize,mut _4: [isize; 2],mut _5: i32,mut _6: [isize; 2],mut _7: [isize; 2],mut _8: [isize; 2],mut _9: isize,mut _10: ([isize; 2], [bool; 6], [isize; 2]),mut _11: [isize; 2]) -> Adt47 {
mir! {
type RET = Adt47;
let _12: (u8,);
let _13: u64;
let _14: char;
let _15: [u32; 6];
let _16: (u16,);
let _17: ([isize; 2], [bool; 6], [isize; 2]);
let _18: [bool; 6];
let _19: i64;
let _20: [u32; 6];
let _21: [bool; 5];
let _22: bool;
let _23: ((u16,), bool, [bool; 6], i8);
let _24: ([isize; 2],);
let _25: i64;
let _26: isize;
let _27: [isize; 2];
let _28: char;
let _29: Adt47;
let _30: i64;
let _31: isize;
let _32: isize;
let _33: [isize; 2];
let _34: &'static i64;
let _35: f64;
let _36: isize;
let _37: char;
let _38: f32;
let _39: *mut i32;
let _40: [i64; 3];
let _41: u128;
let _42: char;
let _43: ([isize; 2],);
let _44: &'static i64;
let _45: [bool; 5];
let _46: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _47: *mut u16;
let _48: ([isize; 2],);
let _49: f64;
let _50: Adt61;
let _51: ((u16,), bool, [bool; 6], i8);
let _52: *mut u32;
let _53: ([isize; 2],);
let _54: i8;
let _55: u16;
let _56: u8;
let _57: ();
let _58: ();
{
_10.2 = [_1,_1];
_10.1 = [false,false,false,false,true,false];
_11 = [_3,_3];
_12.0 = 180_u8 ^ 110_u8;
_10.1 = [true,false,false,true,false,true];
_1 = !_3;
_6 = [_1,_1];
_10.0 = [_3,_3];
_10.0 = _10.2;
_10.0 = [_1,_1];
_3 = _1 + _1;
_16.0 = 65373_u16 - 36072_u16;
_9 = 15771664906742582881_usize as isize;
_12.0 = !38_u8;
_17 = (_10.0, _10.1, _11);
_14 = '\u{e9c28}';
_10.2 = _4;
_10 = (_17.2, _17.1, _4);
_18 = _17.1;
_5 = 925125125_i32 >> _3;
_17 = (_4, _18, _7);
Goto(bb1)
}
bb1 = {
_12.0 = !239_u8;
_10.2 = [_3,_3];
_17.1 = [false,false,false,false,true,false];
_9 = _3;
Call(_10.0 = core::intrinsics::transmute(_4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_10.2 = [_3,_1];
_9 = _16.0 as isize;
_10.2 = _17.2;
_16.0 = 45397_u16 | 15414_u16;
_12 = (197_u8,);
_19 = _14 as i64;
_16.0 = 37986613415554860379822296403356750148_u128 as u16;
_23 = (_16, false, _10.1, (-72_i8));
_12.0 = !106_u8;
_20 = [2523216073_u32,1087755128_u32,3986184620_u32,253464169_u32,1077632001_u32,1506427670_u32];
_1 = _23.0.0 as isize;
_13 = !14382695788980988038_u64;
_16.0 = _23.0.0;
_9 = _19 as isize;
_7 = [_3,_3];
_21 = [_23.1,_23.1,_23.1,_23.1,_23.1];
_24.0 = _10.0;
_25 = -_19;
_20 = [206946943_u32,222450376_u32,569516583_u32,2930535704_u32,1070528767_u32,2039329550_u32];
_12.0 = 173_u8;
_16 = _23.0;
match _23.3 {
0 => bb3,
1 => bb4,
2 => bb5,
340282366920938463463374607431768211384 => bb7,
_ => bb6
}
}
bb3 = {
_12.0 = !239_u8;
_10.2 = [_3,_3];
_17.1 = [false,false,false,false,true,false];
_9 = _3;
Call(_10.0 = core::intrinsics::transmute(_4), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_23 = (_16, true, _18, (-48_i8));
_7 = _8;
_28 = _14;
_17.2 = [_3,_3];
_26 = !_3;
_5 = (-1120989062_i32) - (-1948695525_i32);
_23.1 = !true;
_16.0 = !_23.0.0;
_12.0 = 242_u8 & 198_u8;
match _23.3 {
340282366920938463463374607431768211408 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
_23.1 = false;
_19 = _14 as i64;
_13 = 5022835173166840449_u64 - 10853502385978945156_u64;
_24.0 = [_3,_26];
_24 = (_6,);
_27 = [_26,_3];
_23.3 = (-48_i8);
_23.0.0 = _16.0 & _16.0;
_7 = [_3,_26];
_24.0 = [_26,_26];
_28 = _14;
_18 = _23.2;
_15 = [939110880_u32,1291642057_u32,405079452_u32,4220509482_u32,1429043525_u32,1198154469_u32];
_1 = _26 + _26;
_4 = _10.2;
_20 = _15;
_23.2 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_16.0 = !_23.0.0;
_10.2 = [_1,_1];
_25 = !_19;
_18 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_23 = (_16, false, _10.1, 10_i8);
_13 = 8243646834597018392_u64;
_5 = (-312462482_i32) - (-1151362176_i32);
_10.2 = _7;
_15 = _20;
_25 = !_19;
_23.0.0 = !_16.0;
_23.1 = false;
_13 = !1508680512261992820_u64;
match _23.3 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb5,
5 => bb6,
10 => bb10,
_ => bb7
}
}
bb10 = {
_19 = !_25;
_25 = _19;
_4 = [_1,_1];
_8 = _7;
_17.1 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_22 = !_23.1;
_7 = [_26,_1];
_24.0 = _17.2;
_25 = _19;
_33 = _7;
_34 = &_30;
_22 = !_23.1;
_14 = _28;
_25 = (-7101_i16) as i64;
_1 = _26 & _3;
_17.1 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_17.1 = [_23.1,_23.1,_23.1,_23.1,_22,_23.1];
_25 = !_19;
_33 = [_3,_3];
_10.2 = [_1,_3];
_17 = (_4, _23.2, _6);
_26 = _1 + _9;
match _23.3 {
0 => bb4,
10 => bb12,
_ => bb11
}
}
bb11 = {
_23.1 = false;
_19 = _14 as i64;
_13 = 5022835173166840449_u64 - 10853502385978945156_u64;
_24.0 = [_3,_26];
_24 = (_6,);
_27 = [_26,_3];
_23.3 = (-48_i8);
_23.0.0 = _16.0 & _16.0;
_7 = [_3,_26];
_24.0 = [_26,_26];
_28 = _14;
_18 = _23.2;
_15 = [939110880_u32,1291642057_u32,405079452_u32,4220509482_u32,1429043525_u32,1198154469_u32];
_1 = _26 + _26;
_4 = _10.2;
_20 = _15;
_23.2 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_16.0 = !_23.0.0;
_10.2 = [_1,_1];
_25 = !_19;
_18 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_23 = (_16, false, _10.1, 10_i8);
_13 = 8243646834597018392_u64;
_5 = (-312462482_i32) - (-1151362176_i32);
_10.2 = _7;
_15 = _20;
_25 = !_19;
_23.0.0 = !_16.0;
_23.1 = false;
_13 = !1508680512261992820_u64;
match _23.3 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb5,
5 => bb6,
10 => bb10,
_ => bb7
}
}
bb12 = {
_34 = &(*_34);
_12 = (253_u8,);
_30 = _19 >> _1;
_23.2 = [_22,_22,_23.1,_22,_22,_23.1];
_12 = (44_u8,);
_23 = (_16, _22, _10.1, (-101_i8));
_23.0 = (_16.0,);
_31 = _26;
_8 = [_26,_31];
_18 = [_23.1,_22,_22,_22,_23.1,_23.1];
_23.1 = _31 != _3;
_2 = _7;
_10.1 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_32 = _3;
_35 = (-31825_i16) as f64;
_34 = &_25;
_17 = (_33, _10.1, _7);
_23.0.0 = _16.0 ^ _16.0;
_10 = _17;
_16 = _23.0;
_1 = _14 as isize;
_4 = [_31,_3];
_36 = _12.0 as isize;
_24 = (_7,);
_16 = _23.0;
_30 = -_25;
_10.2 = _2;
Call(_19 = fn8(_26, _4, _23.1, _31, _31, _2), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_11 = [_26,_3];
_12.0 = !43_u8;
_31 = _32;
_3 = -_32;
_22 = !_23.1;
_37 = _14;
_9 = _31 * _32;
_23.2 = [_22,_22,_23.1,_23.1,_23.1,_22];
_22 = _23.1;
_17.2 = [_9,_26];
_28 = _37;
_40 = [_19,_19,_19];
_37 = _14;
_38 = _23.0.0 as f32;
_23.3 = (-96_i8) | 46_i8;
_22 = !_23.1;
Goto(bb14)
}
bb14 = {
_32 = _26 ^ _9;
_10.0 = [_26,_26];
_6 = [_32,_9];
_27 = [_32,_32];
_23.3 = 91_i8 + 55_i8;
_23 = (_16, _22, _17.1, 66_i8);
_5 = (-1221952386_i32);
_17.1 = _10.1;
_13 = 10609290975456771879_u64;
_20 = _15;
_36 = _32 << _23.3;
_32 = -_36;
_23.0.0 = _16.0;
_10.1 = [_22,_22,_23.1,_23.1,_23.1,_23.1];
_13 = 429801985876450637_u64 ^ 13658083709102915326_u64;
Goto(bb15)
}
bb15 = {
_10 = _17;
_34 = &_30;
_1 = _13 as isize;
_12 = (17_u8,);
_39 = core::ptr::addr_of_mut!(_5);
_44 = &(*_34);
_10.1 = [_22,_23.1,_22,_22,_22,_22];
_18 = [_23.1,_23.1,_22,_22,_22,_23.1];
_4 = [_3,_36];
_3 = -_26;
_43 = (_27,);
_1 = _12.0 as isize;
_23.0.0 = _16.0 * _16.0;
_13 = 8932894478324985587_u64 << _31;
_23.0.0 = _36 as u16;
match _23.3 {
0 => bb1,
1 => bb7,
2 => bb12,
3 => bb4,
4 => bb8,
5 => bb6,
66 => bb17,
_ => bb16
}
}
bb16 = {
_19 = !_25;
_25 = _19;
_4 = [_1,_1];
_8 = _7;
_17.1 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_22 = !_23.1;
_7 = [_26,_1];
_24.0 = _17.2;
_25 = _19;
_33 = _7;
_34 = &_30;
_22 = !_23.1;
_14 = _28;
_25 = (-7101_i16) as i64;
_1 = _26 & _3;
_17.1 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_17.1 = [_23.1,_23.1,_23.1,_23.1,_22,_23.1];
_25 = !_19;
_33 = [_3,_3];
_10.2 = [_1,_3];
_17 = (_4, _23.2, _6);
_26 = _1 + _9;
match _23.3 {
0 => bb4,
10 => bb12,
_ => bb11
}
}
bb17 = {
_10.2 = [_9,_32];
_17.1 = [_23.1,_23.1,_23.1,_22,_22,_22];
_33 = [_32,_32];
_2 = [_32,_32];
_24 = _43;
_15 = [3114754022_u32,1797186096_u32,1760783923_u32,3135130308_u32,1415261447_u32,2933165623_u32];
_27 = [_3,_36];
_19 = _25;
_17.1 = [_22,_23.1,_22,_22,_22,_23.1];
_37 = _28;
_5 = 1869237699_i32 * (-2020200931_i32);
_47 = core::ptr::addr_of_mut!(_16.0);
_15 = [3964359597_u32,2917424366_u32,1095894730_u32,1075751870_u32,3207482890_u32,99429557_u32];
_9 = _32 ^ _36;
_31 = _32;
_26 = !_9;
_13 = 7698305758205470617_u64 & 15004891355781653960_u64;
_38 = _23.3 as f32;
_18 = [_22,_22,_23.1,_22,_23.1,_22];
Call(RET = fn9(_32, _38, _43.0, _32, _22, _10.2, _24.0, _36, _24.0, _27), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
_10.0 = [_9,_31];
_36 = _31 - _9;
place!(Field::<f64>(Variant(RET, 0), 1)) = _35 - _35;
_46.2 = [_23.1,_22,_23.1,_22,_23.1,_22];
place!(Field::<u32>(Variant(RET, 0), 5)) = !3406621463_u32;
_12.0 = !Field::<u8>(Variant(Field::<Adt46>(Variant(RET, 0), 0), 0), 0);
SetDiscriminant(Field::<Adt46>(Variant(RET, 0), 0), 0);
_44 = &place!(Field::<i64>(Variant(RET, 0), 6));
_6 = _4;
_26 = Field::<(u8,)>(Variant(RET, 0), 7).0 as isize;
_35 = -Field::<f64>(Variant(RET, 0), 1);
_22 = !_23.1;
_43 = _24;
place!(Field::<u32>(Variant(RET, 0), 5)) = !2386225861_u32;
_46.1 = Field::<u32>(Variant(RET, 0), 5) * Field::<u32>(Variant(RET, 0), 5);
place!(Field::<i64>(Variant(RET, 0), 6)) = _19;
_30 = !_19;
_50 = Adt61::Variant0 { fld0: _23.0 };
place!(Field::<(u8,)>(Variant(RET, 0), 7)).0 = _12.0 | _12.0;
_38 = _23.3 as f32;
_43 = _24;
_42 = _14;
_23 = (Field::<(u16,)>(Variant(_50, 0), 0), _22, _17.1, 85_i8);
place!(Field::<u8>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 0), 0)) = Field::<(u8,)>(Variant(RET, 0), 7).0 ^ _12.0;
_44 = &_19;
Goto(bb19)
}
bb19 = {
_34 = Move(_44);
place!(Field::<Adt46>(Variant(RET, 0), 0)) = Adt46::Variant1 { fld0: (-30600_i16) };
_46.0 = [_19,_25,_30];
_13 = !3801785383294598142_u64;
_40 = _46.0;
place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 1), 0)) = -(-22401_i16);
place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 1), 0)) = _14 as i16;
_43 = (_17.0,);
_12 = (Field::<(u8,)>(Variant(RET, 0), 7).0,);
place!(Field::<u128>(Variant(RET, 0), 4)) = 47474645613554303873514259959593551733_u128;
_46.0 = [Field::<i64>(Variant(RET, 0), 6),Field::<i64>(Variant(RET, 0), 6),_30];
_13 = 6171759002500904092_u64;
place!(Field::<(u8,)>(Variant(RET, 0), 7)) = _12;
place!(Field::<(u8,)>(Variant(RET, 0), 7)) = (_12.0,);
place!(Field::<(u8,)>(Variant(RET, 0), 7)) = (_12.0,);
place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(RET, 0), 0)), 1), 0)) = (-21318_i16) << _9;
place!(Field::<f64>(Variant(RET, 0), 1)) = _35;
_12 = (Field::<(u8,)>(Variant(RET, 0), 7).0,);
place!(Field::<u32>(Variant(RET, 0), 5)) = _46.1 - _46.1;
_17.2 = [_31,_36];
_29 = Move(RET);
_34 = &place!(Field::<i64>(Variant(_29, 0), 6));
Goto(bb20)
}
bb20 = {
_25 = _30;
place!(Field::<u128>(Variant(_29, 0), 4)) = !115298801063683403485227330956940539218_u128;
_44 = &(*_34);
_46.1 = !Field::<u32>(Variant(_29, 0), 5);
_20 = [Field::<u32>(Variant(_29, 0), 5),Field::<u32>(Variant(_29, 0), 5),Field::<u32>(Variant(_29, 0), 5),_46.1,Field::<u32>(Variant(_29, 0), 5),Field::<u32>(Variant(_29, 0), 5)];
_51.3 = (*_34) as i8;
_51.0 = ((*_47),);
Goto(bb21)
}
bb21 = {
place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(_29, 0), 0)), 1), 0)) = _23.3 as i16;
place!(Field::<i16>(Variant(place!(Field::<Adt46>(Variant(_29, 0), 0)), 1), 0)) = Field::<(u8,)>(Variant(_29, 0), 7).0 as i16;
RET = Move(_29);
_49 = -_35;
_5 = (-1688854153_i32);
_21 = [_23.1,_23.1,_22,_23.1,_22];
Goto(bb22)
}
bb22 = {
Call(_57 = dump_var(7_usize, 22_usize, Move(_22), 4_usize, Move(_4), 32_usize, Move(_32), 42_usize, Move(_42)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_57 = dump_var(7_usize, 2_usize, Move(_2), 24_usize, Move(_24), 14_usize, Move(_14), 23_usize, Move(_23)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_57 = dump_var(7_usize, 11_usize, Move(_11), 31_usize, Move(_31), 5_usize, Move(_5), 25_usize, Move(_25)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_57 = dump_var(7_usize, 3_usize, Move(_3), 20_usize, Move(_20), 26_usize, Move(_26), 9_usize, Move(_9)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_57 = dump_var(7_usize, 7_usize, Move(_7), 27_usize, Move(_27), 58_usize, _58, 58_usize, _58), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize,mut _2: [isize; 2],mut _3: bool,mut _4: isize,mut _5: isize,mut _6: [isize; 2]) -> i64 {
mir! {
type RET = i64;
let _7: f32;
let _8: isize;
let _9: isize;
let _10: *mut i32;
let _11: [usize; 8];
let _12: ((u16,), bool, [bool; 6], i8);
let _13: [u32; 6];
let _14: [isize; 2];
let _15: ();
let _16: ();
{
RET = !(-3182492687329891373_i64);
_5 = _1 & _4;
RET = (-5191177660429603961_i64);
_6 = [_5,_4];
_6 = _2;
_5 = _4 & _4;
_6 = [_5,_1];
_8 = _1;
RET = !(-1048820177836626128_i64);
Goto(bb1)
}
bb1 = {
_8 = _5;
_2 = _6;
_5 = !_8;
_5 = _4;
_3 = _5 != _1;
_2 = [_4,_4];
_12.0.0 = 222437407821786119883215977051551065411_u128 as u16;
_8 = _4;
_7 = _4 as f32;
_9 = _4 >> _1;
_11 = [13204861566841679109_usize,8395708047222975464_usize,10342991021540099702_usize,4_usize,7_usize,4631038230564679728_usize,12916862230252887694_usize,9276401903777563561_usize];
_12.1 = _3;
_6 = [_5,_8];
_12.2 = [_3,_12.1,_3,_12.1,_12.1,_3];
RET = (-2307452546343312336_i64) << _1;
_7 = 16952866796267153545_usize as f32;
_9 = 1035880477_u32 as isize;
_5 = !_1;
_8 = _5;
_12.3 = !40_i8;
_12.3 = RET as i8;
_13 = [545669432_u32,1384751667_u32,3544413567_u32,1473457081_u32,101372825_u32,32180108_u32];
Goto(bb2)
}
bb2 = {
Call(_15 = dump_var(8_usize, 6_usize, Move(_6), 12_usize, Move(_12), 3_usize, Move(_3), 8_usize, Move(_8)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_15 = dump_var(8_usize, 5_usize, Move(_5), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: isize,mut _2: f32,mut _3: [isize; 2],mut _4: isize,mut _5: bool,mut _6: [isize; 2],mut _7: [isize; 2],mut _8: isize,mut _9: [isize; 2],mut _10: [isize; 2]) -> Adt47 {
mir! {
type RET = Adt47;
let _11: *mut i16;
let _12: (u8,);
let _13: i32;
let _14: [i64; 3];
let _15: u128;
let _16: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _17: ((u16,), bool, [bool; 6], i8);
let _18: i16;
let _19: u8;
let _20: ((u16,), bool, [bool; 6], i8);
let _21: isize;
let _22: u8;
let _23: ([isize; 2], [bool; 6], [isize; 2]);
let _24: (u16,);
let _25: bool;
let _26: isize;
let _27: f32;
let _28: isize;
let _29: f64;
let _30: char;
let _31: (bool, i16, *const char, *mut i64, [bool; 8]);
let _32: isize;
let _33: u64;
let _34: u8;
let _35: [i64; 3];
let _36: Adt46;
let _37: Adt61;
let _38: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _39: i32;
let _40: u32;
let _41: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _42: *mut u32;
let _43: isize;
let _44: ([isize; 2], [bool; 6], [isize; 2]);
let _45: isize;
let _46: bool;
let _47: [bool; 8];
let _48: isize;
let _49: ((u16,), bool, [bool; 6], i8);
let _50: Adt59;
let _51: (u16,);
let _52: (u16,);
let _53: [isize; 2];
let _54: isize;
let _55: u64;
let _56: f32;
let _57: ([isize; 2],);
let _58: bool;
let _59: ();
let _60: ();
{
_7 = [_8,_1];
_4 = -_8;
_10 = _9;
_4 = 217078910826412384961553243151524478579_u128 as isize;
_3 = [_1,_1];
_1 = !_8;
_7 = [_8,_8];
_2 = (-585538234_i32) as f32;
_1 = (-92_i8) as isize;
_6 = [_8,_8];
_12 = (22_u8,);
_3 = [_8,_8];
_1 = _8 + _8;
_6 = _10;
_1 = _8 + _8;
_1 = _8 * _8;
_3 = [_1,_1];
_6 = _9;
_2 = 5344337971666808845_u64 as f32;
_4 = _1;
Goto(bb1)
}
bb1 = {
_2 = 44587_u16 as f32;
match _12.0 {
22 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_8 = 159157325636841345860942598393064315187_u128 as isize;
_9 = _10;
_13 = (-1579999199_i32);
_3 = [_1,_1];
_6 = _9;
_6 = [_4,_4];
Goto(bb4)
}
bb4 = {
_12.0 = 52_u8;
_14 = [5242107198804487136_i64,688543032560833297_i64,7987571928689172217_i64];
_12 = (224_u8,);
_5 = false;
_6 = [_1,_4];
_14 = [(-4093067612928433900_i64),(-5580809328650416578_i64),7674339957587812703_i64];
_2 = 63204187903991420275280645076754565093_i128 as f32;
_3 = _9;
_16.0 = _14;
_1 = '\u{99078}' as isize;
_12 = (136_u8,);
_3 = [_4,_4];
Goto(bb5)
}
bb5 = {
_13 = -623160329_i32;
_13 = (-2066495250_i32);
Goto(bb6)
}
bb6 = {
_16.1 = 4218338477_u32;
_15 = 140699326755558639304184291086843283033_u128 << _4;
_17.3 = (-108_i8) - (-97_i8);
_1 = _4 - _4;
_4 = _1;
_8 = _1 + _1;
_17.1 = !_5;
_11 = core::ptr::addr_of_mut!(_18);
_3 = _10;
_17.0.0 = _4 as u16;
_19 = !_12.0;
_16.2 = [_17.1,_17.1,_17.1,_5,_5,_17.1];
_20.1 = !_17.1;
_7 = _10;
_15 = 304592007827880611895007473215643372230_u128 >> _17.0.0;
_20.0.0 = _17.0.0;
_20 = (_17.0, _5, _16.2, _17.3);
_16.2 = [_17.1,_20.1,_20.1,_20.1,_5,_20.1];
_23.2 = [_1,_8];
_17 = _20;
_17.0.0 = _20.0.0;
_22 = _19;
_4 = 5219793938021982350_i64 as isize;
_20 = (_17.0, _5, _17.2, _17.3);
Goto(bb7)
}
bb7 = {
_17.1 = _20.1;
_18 = !(-10472_i16);
_4 = _15 as isize;
_22 = _12.0 | _12.0;
_1 = 12531682057926768628_u64 as isize;
_6 = [_8,_8];
Call(_8 = fn10(_20.0.0, _7, _11, _7, _17, _20.0, _23.2, _10, _23.2, _10, _6, _23.2, _23.2, _20.0, _17, _15), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6 = [_4,_4];
_16.0 = [(-2556697336019053467_i64),(-2394720488189680584_i64),3821142625418849105_i64];
_20.2 = _16.2;
_21 = _4 * _4;
_23.1 = [_5,_17.1,_20.1,_5,_20.1,_20.1];
_9 = _7;
_20.0 = _17.0;
_16.1 = _2 as u32;
_24 = (_20.0.0,);
_20.1 = _5;
_17.1 = !_20.1;
_17.0.0 = 7_usize as u16;
_20.0 = (_24.0,);
_17.0.0 = _24.0 | _24.0;
_6 = [_21,_21];
_8 = _21;
_16 = (_14, 1456952109_u32, _20.2, _7);
_23.0 = _6;
_21 = _8;
Call(_20.0.0 = core::intrinsics::transmute(_24.0), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_14 = [8269064687410459751_i64,562714562822793937_i64,7657503138756890840_i64];
_10 = [_21,_4];
_22 = !_19;
_7 = [_8,_4];
_16 = (_14, 2910088178_u32, _17.2, _9);
_2 = 7901160793802370037_usize as f32;
_23.2 = [_21,_8];
_16.3 = _6;
_6 = [_21,_8];
_16.1 = !3256494842_u32;
_18 = !3910_i16;
_25 = !_5;
_18 = 29242_i16;
_17 = _20;
_16 = (_14, 2912240334_u32, _23.1, _10);
_27 = -_2;
_23.1 = _17.2;
_19 = _22 / _12.0;
_23.1 = [_17.1,_5,_17.1,_17.1,_17.1,_5];
_22 = _18 as u8;
_6 = _16.3;
_20.3 = -_17.3;
_16.0 = _14;
_20.2 = _17.2;
match _16.1 {
2912240334 => bb10,
_ => bb8
}
}
bb10 = {
_16.0 = [(-6456345684944254757_i64),5162993687302956173_i64,(-6716892117165598836_i64)];
_15 = !306280621738818512302574170261623445410_u128;
_31.4 = [_25,_5,_17.1,_25,_5,_20.1,_17.1,_17.1];
_13 = !253418596_i32;
_16.1 = !303879694_u32;
_22 = !_19;
_31.4 = [_5,_5,_5,_25,_17.1,_17.1,_5,_17.1];
_14 = [5259751149292411316_i64,(-6206112127086098458_i64),(-4552980339702401176_i64)];
_26 = _21 >> _8;
_24 = _20.0;
_14 = [(-990004623210429273_i64),(-5755872998918218313_i64),(-36490761959180010_i64)];
_31.1 = (*_11) & _18;
_32 = _8;
_2 = -_27;
_31.4 = [_20.1,_25,_5,_20.1,_25,_17.1,_25,_20.1];
_14 = _16.0;
_33 = _24.0 as u64;
match (*_11) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb5,
5 => bb11,
6 => bb12,
29242 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
_8 = 159157325636841345860942598393064315187_u128 as isize;
_9 = _10;
_13 = (-1579999199_i32);
_3 = [_1,_1];
_6 = _9;
_6 = [_4,_4];
Goto(bb4)
}
bb13 = {
_17.1 = _20.1;
_18 = !(-10472_i16);
_4 = _15 as isize;
_22 = _12.0 | _12.0;
_1 = 12531682057926768628_u64 as isize;
_6 = [_8,_8];
Call(_8 = fn10(_20.0.0, _7, _11, _7, _17, _20.0, _23.2, _10, _23.2, _10, _6, _23.2, _23.2, _20.0, _17, _15), ReturnTo(bb8), UnwindUnreachable())
}
bb14 = {
_23.0 = [_26,_8];
_17.1 = _33 > _33;
_34 = _19;
_8 = !_21;
_27 = (-1201942008214252907_i64) as f32;
_9 = [_4,_32];
_24 = _20.0;
Goto(bb15)
}
bb15 = {
_20 = _17;
_17.0 = _24;
_23.0 = [_26,_32];
_31.0 = _17.1;
_29 = _27 as f64;
_30 = '\u{4c0a8}';
_17 = (_24, _20.1, _16.2, _20.3);
_26 = !_32;
_23 = (_6, _17.2, _3);
_19 = !_22;
_7 = _23.0;
_36 = Adt46::Variant1 { fld0: (*_11) };
_38.1 = _16.1 - _16.1;
_38.3 = [_4,_4];
_13 = -(-399495970_i32);
_41.1 = !_16.1;
_34 = 17834154917976670961_usize as u8;
SetDiscriminant(_36, 1);
_23.2 = [_32,_21];
Goto(bb16)
}
bb16 = {
_17 = _20;
_29 = _33 as f64;
_11 = core::ptr::addr_of_mut!((*_11));
_43 = _32 + _8;
_44 = (_16.3, _17.2, _16.3);
_38 = (_16.0, _41.1, _44.1, _3);
_44.2 = _7;
_41 = _16;
_4 = _8 - _43;
_28 = _43;
_23.0 = [_4,_8];
match _18 {
29242 => bb17,
_ => bb7
}
}
bb17 = {
_16.2 = [_17.1,_20.1,_20.1,_20.1,_31.0,_17.1];
_41 = (_38.0, _38.1, _16.2, _6);
_20.0.0 = _24.0;
_43 = _32;
_37 = Adt61::Variant0 { fld0: _17.0 };
_4 = _8 & _32;
_5 = !_31.0;
_40 = _20.3 as u32;
_3 = _44.2;
_27 = _2 + _2;
_16 = (_38.0, _40, _41.2, _38.3);
_1 = _29 as isize;
_24 = _20.0;
_44.2 = [_43,_26];
_17.0.0 = Field::<(u16,)>(Variant(_37, 0), 0).0 * Field::<(u16,)>(Variant(_37, 0), 0).0;
Goto(bb18)
}
bb18 = {
_44.2 = [_4,_28];
_17.1 = !_5;
_41 = (_16.0, _16.1, _16.2, _10);
_16.3 = [_28,_26];
_17.3 = _38.1 as i8;
_45 = !_21;
_17.2 = [_20.1,_5,_20.1,_5,_17.1,_5];
_38.3 = [_21,_28];
SetDiscriminant(_37, 1);
_30 = '\u{a81c0}';
_41.3 = [_26,_28];
_42 = core::ptr::addr_of_mut!(_16.1);
_16.2 = [_5,_17.1,_5,_17.1,_20.1,_5];
_41.0 = _16.0;
_31.2 = core::ptr::addr_of!(_30);
_16.2 = _41.2;
_8 = _27 as isize;
place!(Field::<([isize; 2], [bool; 6], [isize; 2])>(Variant(_37, 1), 0)) = _23;
place!(Field::<[isize; 8]>(Variant(_37, 1), 1)) = [_45,_43,_28,_1,_43,_4,_1,_1];
_20.2 = _17.2;
_48 = _4;
_11 = core::ptr::addr_of_mut!(_31.1);
_28 = _32;
_49.0 = (_24.0,);
_17.0.0 = !_24.0;
match _18 {
0 => bb19,
1 => bb20,
2 => bb21,
29242 => bb23,
_ => bb22
}
}
bb19 = {
Return()
}
bb20 = {
_12.0 = 52_u8;
_14 = [5242107198804487136_i64,688543032560833297_i64,7987571928689172217_i64];
_12 = (224_u8,);
_5 = false;
_6 = [_1,_4];
_14 = [(-4093067612928433900_i64),(-5580809328650416578_i64),7674339957587812703_i64];
_2 = 63204187903991420275280645076754565093_i128 as f32;
_3 = _9;
_16.0 = _14;
_1 = '\u{99078}' as isize;
_12 = (136_u8,);
_3 = [_4,_4];
Goto(bb5)
}
bb21 = {
_20 = _17;
_17.0 = _24;
_23.0 = [_26,_32];
_31.0 = _17.1;
_29 = _27 as f64;
_30 = '\u{4c0a8}';
_17 = (_24, _20.1, _16.2, _20.3);
_26 = !_32;
_23 = (_6, _17.2, _3);
_19 = !_22;
_7 = _23.0;
_36 = Adt46::Variant1 { fld0: (*_11) };
_38.1 = _16.1 - _16.1;
_38.3 = [_4,_4];
_13 = -(-399495970_i32);
_41.1 = !_16.1;
_34 = 17834154917976670961_usize as u8;
SetDiscriminant(_36, 1);
_23.2 = [_32,_21];
Goto(bb16)
}
bb22 = {
_17.1 = _20.1;
_18 = !(-10472_i16);
_4 = _15 as isize;
_22 = _12.0 | _12.0;
_1 = 12531682057926768628_u64 as isize;
_6 = [_8,_8];
Call(_8 = fn10(_20.0.0, _7, _11, _7, _17, _20.0, _23.2, _10, _23.2, _10, _6, _23.2, _23.2, _20.0, _17, _15), ReturnTo(bb8), UnwindUnreachable())
}
bb23 = {
_24.0 = _20.0.0;
_37 = Adt61::Variant0 { fld0: _24 };
place!(Field::<i16>(Variant(_36, 1), 0)) = -_31.1;
_22 = _12.0;
SetDiscriminant(_36, 0);
_41.0 = [5502969445452722038_i64,(-1007763074902697079_i64),147165239940135748_i64];
place!(Field::<char>(Variant(_36, 0), 1)) = _30;
_36 = Adt46::Variant0 { fld0: _12.0,fld1: _30 };
_42 = core::ptr::addr_of_mut!(_38.1);
_16.0 = _41.0;
SetDiscriminant(_37, 1);
place!(Field::<char>(Variant(_36, 0), 1)) = _30;
_23.2 = [_4,_1];
_37 = Adt61::Variant0 { fld0: _20.0 };
place!(Field::<(u16,)>(Variant(_37, 0), 0)) = (_49.0.0,);
_23 = _44;
Goto(bb24)
}
bb24 = {
_49.3 = _27 as i8;
RET = Adt47::Variant0 { fld0: Move(_36),fld1: _29,fld2: _42,fld3: _11,fld4: _15,fld5: (*_42),fld6: (-1012648208183530564_i64),fld7: _12 };
SetDiscriminant(_37, 1);
_45 = !_1;
_41.1 = (*_42) + Field::<u32>(Variant(RET, 0), 5);
_16.2 = _17.2;
_20.0 = (_17.0.0,);
_49.2 = [_31.0,_17.1,_31.0,_31.0,_20.1,_17.1];
_23.2 = [_4,_32];
_12.0 = !Field::<(u8,)>(Variant(RET, 0), 7).0;
_7 = [_21,_43];
_48 = -_21;
_46 = !_17.1;
_54 = !_48;
_49.1 = !_20.1;
SetDiscriminant(Field::<Adt46>(Variant(RET, 0), 0), 0);
_45 = _4;
_32 = _45 >> _4;
_20.3 = _49.3;
place!(Field::<i64>(Variant(RET, 0), 6)) = -(-8506445167158005228_i64);
place!(Field::<Adt46>(Variant(RET, 0), 0)) = Adt46::Variant0 { fld0: _19,fld1: _30 };
place!(Field::<([isize; 2], [bool; 6], [isize; 2])>(Variant(_37, 1), 0)) = _23;
Goto(bb25)
}
bb25 = {
Call(_59 = dump_var(9_usize, 32_usize, Move(_32), 15_usize, Move(_15), 23_usize, Move(_23), 22_usize, Move(_22)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_59 = dump_var(9_usize, 5_usize, Move(_5), 41_usize, Move(_41), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_59 = dump_var(9_usize, 26_usize, Move(_26), 7_usize, Move(_7), 20_usize, Move(_20), 12_usize, Move(_12)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_59 = dump_var(9_usize, 10_usize, Move(_10), 19_usize, Move(_19), 44_usize, Move(_44), 49_usize, Move(_49)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_59 = dump_var(9_usize, 48_usize, Move(_48), 45_usize, Move(_45), 1_usize, Move(_1), 60_usize, _60), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: u16,mut _2: [isize; 2],mut _3: *mut i16,mut _4: [isize; 2],mut _5: ((u16,), bool, [bool; 6], i8),mut _6: (u16,),mut _7: [isize; 2],mut _8: [isize; 2],mut _9: [isize; 2],mut _10: [isize; 2],mut _11: [isize; 2],mut _12: [isize; 2],mut _13: [isize; 2],mut _14: (u16,),mut _15: ((u16,), bool, [bool; 6], i8),mut _16: u128) -> isize {
mir! {
type RET = isize;
let _17: i16;
let _18: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _19: isize;
let _20: [isize; 2];
let _21: f32;
let _22: i8;
let _23: char;
let _24: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _25: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _26: u32;
let _27: [isize; 2];
let _28: f64;
let _29: ((u16,), bool, [bool; 6], i8);
let _30: u32;
let _31: [isize; 2];
let _32: char;
let _33: f32;
let _34: (u8,);
let _35: u16;
let _36: [bool; 5];
let _37: *mut i32;
let _38: [bool; 8];
let _39: *mut usize;
let _40: &'static i64;
let _41: isize;
let _42: isize;
let _43: *mut f64;
let _44: ();
let _45: ();
{
_5.1 = _15.1;
_5.0 = _15.0;
_14 = (_1,);
_15.0.0 = 16350436389339674298_u64 as u16;
_5.0 = _14;
_14 = _5.0;
_10 = _13;
RET = (-11424_i16) as isize;
_1 = _14.0;
_5.0.0 = _16 as u16;
_5.0 = (_14.0,);
_5.1 = _15.1;
_16 = '\u{9863}' as u128;
_18.3 = _10;
Goto(bb1)
}
bb1 = {
_6.0 = _1 * _1;
_13 = [RET,RET];
_15.0 = _6;
_15.3 = _5.3;
_20 = [RET,RET];
_7 = _2;
_20 = [RET,RET];
_18.1 = 153447572_i32 as u32;
_7 = [RET,RET];
_5.1 = _15.1;
_1 = _15.0.0 * _15.0.0;
RET = (-62_isize);
_5.2 = _15.2;
Call(_5.2 = fn11(_18.3, _18.3, _14.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = !_5.0.0;
RET = _18.1 as isize;
_18.1 = 2884636408_u32;
_7 = _12;
_5.0.0 = _1 << _15.3;
_22 = 1256315215_i32 as i8;
_24.2 = [_15.1,_15.1,_15.1,_15.1,_5.1,_15.1];
_24.0 = [(-529798353981739202_i64),(-9026130629250294992_i64),(-3618162479764094521_i64)];
_25.3 = _12;
_11 = [RET,RET];
_21 = 16310382913485747587_usize as f32;
_5.0.0 = !_14.0;
_1 = _5.1 as u16;
_14 = _6;
_18 = (_24.0, 352949541_u32, _24.2, _7);
_18.2 = [_5.1,_5.1,_5.1,_5.1,_5.1,_5.1];
_17 = !18234_i16;
_16 = 179105993749163082813181635357921651560_u128 & 1454826271596295854482198150025077636_u128;
_24.3 = [RET,RET];
_5.2 = [_5.1,_15.1,_15.1,_15.1,_5.1,_5.1];
_9 = [RET,RET];
_15.0 = (_6.0,);
Goto(bb3)
}
bb3 = {
RET = 486306481_i32 as isize;
_25.2 = _5.2;
_15.0.0 = _5.0.0 >> _6.0;
RET = !9223372036854775807_isize;
match _18.1 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
352949541 => bb9,
_ => bb8
}
}
bb4 = {
_1 = !_5.0.0;
RET = _18.1 as isize;
_18.1 = 2884636408_u32;
_7 = _12;
_5.0.0 = _1 << _15.3;
_22 = 1256315215_i32 as i8;
_24.2 = [_15.1,_15.1,_15.1,_15.1,_5.1,_15.1];
_24.0 = [(-529798353981739202_i64),(-9026130629250294992_i64),(-3618162479764094521_i64)];
_25.3 = _12;
_11 = [RET,RET];
_21 = 16310382913485747587_usize as f32;
_5.0.0 = !_14.0;
_1 = _5.1 as u16;
_14 = _6;
_18 = (_24.0, 352949541_u32, _24.2, _7);
_18.2 = [_5.1,_5.1,_5.1,_5.1,_5.1,_5.1];
_17 = !18234_i16;
_16 = 179105993749163082813181635357921651560_u128 & 1454826271596295854482198150025077636_u128;
_24.3 = [RET,RET];
_5.2 = [_5.1,_15.1,_15.1,_15.1,_5.1,_5.1];
_9 = [RET,RET];
_15.0 = (_6.0,);
Goto(bb3)
}
bb5 = {
_6.0 = _1 * _1;
_13 = [RET,RET];
_15.0 = _6;
_15.3 = _5.3;
_20 = [RET,RET];
_7 = _2;
_20 = [RET,RET];
_18.1 = 153447572_i32 as u32;
_7 = [RET,RET];
_5.1 = _15.1;
_1 = _15.0.0 * _15.0.0;
RET = (-62_isize);
_5.2 = _15.2;
Call(_5.2 = fn11(_18.3, _18.3, _14.0), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_25.1 = _18.1;
_23 = '\u{f314d}';
_15.0.0 = _5.0.0 + _5.0.0;
_20 = [RET,RET];
_8 = [RET,RET];
_17 = !3779_i16;
_13 = _18.3;
_5.2 = _24.2;
_29 = _15;
_29 = (_15.0, _5.1, _15.2, _22);
_4 = [RET,RET];
_5.0 = (_29.0.0,);
_5.3 = -_15.3;
RET = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_4 = _10;
_24.1 = _25.1;
_4 = [RET,RET];
_29.3 = _24.1 as i8;
_25.1 = _15.0.0 as u32;
_6.0 = _15.0.0;
Call(_15.1 = fn14(_29.0.0, _12, _25.3, _7, _7, _25.1, _10, _29.0, _14.0), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_19 = RET & RET;
RET = -_19;
_30 = !_18.1;
_15.1 = _30 == _25.1;
_23 = '\u{32139}';
_6 = _15.0;
_27 = [_19,_19];
_23 = '\u{cb1ad}';
_26 = 2_usize as u32;
_15.2 = _5.2;
_33 = _21;
_5.0 = (_14.0,);
_25.2 = [_15.1,_15.1,_15.1,_15.1,_15.1,_15.1];
_25.0 = [3120568038583089213_i64,5172412667868835297_i64,(-2167017541391986213_i64)];
_15.2 = [_15.1,_15.1,_15.1,_15.1,_15.1,_15.1];
_5.1 = _15.1;
_8 = _12;
_32 = _23;
_15.0.0 = _14.0;
_16 = 5775337572064857690_u64 as u128;
_24 = _18;
_10 = [RET,_19];
_34.0 = 99_u8;
_16 = !268405777263167492262335850554376375511_u128;
_29 = _15;
_31 = [RET,RET];
_36 = [_29.1,_5.1,_15.1,_29.1,_5.1];
_18.1 = !_25.1;
_15 = (_29.0, _29.1, _18.2, _29.3);
Goto(bb11)
}
bb11 = {
_24.0 = _18.0;
Goto(bb12)
}
bb12 = {
_24 = (_25.0, _18.1, _29.2, _7);
RET = -_19;
_26 = !_25.1;
_10 = [_19,RET];
_14.0 = _15.0.0 | _29.0.0;
_7 = [RET,_19];
_31 = [RET,RET];
_34.0 = 209_u8;
_28 = 4194627525182190297_i64 as f64;
_1 = _5.0.0 ^ _5.0.0;
_19 = RET * RET;
_12 = [_19,_19];
_6 = (_29.0.0,);
_14.0 = !_15.0.0;
match _34.0 {
0 => bb7,
1 => bb2,
2 => bb9,
3 => bb6,
4 => bb13,
209 => bb15,
_ => bb14
}
}
bb13 = {
_24.0 = _18.0;
Goto(bb12)
}
bb14 = {
Return()
}
bb15 = {
_15.0.0 = _34.0 as u16;
_26 = _25.1;
_25.2 = _29.2;
_23 = _32;
_34 = (158_u8,);
_25.3 = [_19,_19];
_1 = !_29.0.0;
Goto(bb16)
}
bb16 = {
Call(_44 = dump_var(10_usize, 27_usize, Move(_27), 26_usize, Move(_26), 16_usize, Move(_16), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(10_usize, 8_usize, Move(_8), 7_usize, Move(_7), 36_usize, Move(_36), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(10_usize, 13_usize, Move(_13), 31_usize, Move(_31), 17_usize, Move(_17), 29_usize, Move(_29)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_44 = dump_var(10_usize, 12_usize, Move(_12), 32_usize, Move(_32), 15_usize, Move(_15), 45_usize, _45), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [isize; 2],mut _2: [isize; 2],mut _3: u16) -> [bool; 6] {
mir! {
type RET = [bool; 6];
let _4: i8;
let _5: i16;
let _6: ([isize; 2],);
let _7: *mut i32;
let _8: Adt61;
let _9: f64;
let _10: bool;
let _11: (u8,);
let _12: *const isize;
let _13: &'static i64;
let _14: i64;
let _15: ([isize; 2],);
let _16: (u8,);
let _17: bool;
let _18: u16;
let _19: [u32; 6];
let _20: isize;
let _21: char;
let _22: bool;
let _23: bool;
let _24: *const char;
let _25: f32;
let _26: Adt55;
let _27: ([isize; 2], [bool; 6], [isize; 2]);
let _28: [u32; 6];
let _29: ();
let _30: ();
{
_3 = 50672_u16 & 27094_u16;
RET = [true,true,false,false,true,true];
RET = [false,false,false,true,false,true];
RET = [false,false,true,false,true,true];
RET = [false,false,false,false,false,false];
_4 = 27_i8 ^ (-89_i8);
_2 = [9223372036854775807_isize,(-9223372036854775808_isize)];
RET = [true,true,true,false,true,false];
_4 = (-17_isize) as i8;
_2 = _1;
_2 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_1 = _2;
_5 = !14095_i16;
_3 = 60074_u16 >> _4;
_6 = (_1,);
_5 = !(-11522_i16);
_5 = (-28969_i16) - 16759_i16;
RET = [true,false,true,true,false,true];
RET = [false,true,false,true,false,true];
Goto(bb1)
}
bb1 = {
_6 = (_2,);
_6 = (_2,);
RET = [false,true,true,false,true,false];
_9 = 9223372036854775807_isize as f64;
_2 = _6.0;
_6 = (_1,);
_3 = 5154441864249259213_i64 as u16;
RET = [true,false,false,true,false,false];
Goto(bb2)
}
bb2 = {
_6.0 = [39_isize,(-9223372036854775808_isize)];
_9 = (-726437893_i32) as f64;
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET = [true,false,false,true,true,true];
_3 = 65413_u16;
_3 = 2800_u16 | 34670_u16;
_9 = 3699825560_u32 as f64;
_9 = 3325025588945576345_u64 as f64;
_11 = (60_u8,);
_4 = _11.0 as i8;
_6 = (_2,);
_4 = 5088814229531606193_u64 as i8;
RET = [false,true,true,true,false,false];
_11.0 = '\u{9ccf7}' as u8;
_10 = false;
_9 = 99399691508402550256590373405362220375_u128 as f64;
Goto(bb3)
}
bb3 = {
_6 = (_2,);
RET = [_10,_10,_10,_10,_10,_10];
_11.0 = 2802284743533930059_i64 as u8;
_2 = [9223372036854775807_isize,(-127_isize)];
_2 = _6.0;
_9 = 55456010202687837002619719055079353514_u128 as f64;
Call(_6.0 = fn12(_4, _2, _5, _1, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_3 = 29130_u16 - 13202_u16;
_6 = (_1,);
RET = [_10,_10,_10,_10,_10,_10];
_9 = (-8248597966124546519_i64) as f64;
RET = [_10,_10,_10,_10,_10,_10];
_11 = (29_u8,);
_1 = _6.0;
_6 = (_2,);
_11 = (89_u8,);
_9 = _11.0 as f64;
_1 = _2;
match _11.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
89 => bb10,
_ => bb9
}
}
bb5 = {
_6 = (_2,);
RET = [_10,_10,_10,_10,_10,_10];
_11.0 = 2802284743533930059_i64 as u8;
_2 = [9223372036854775807_isize,(-127_isize)];
_2 = _6.0;
_9 = 55456010202687837002619719055079353514_u128 as f64;
Call(_6.0 = fn12(_4, _2, _5, _1, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_6.0 = [39_isize,(-9223372036854775808_isize)];
_9 = (-726437893_i32) as f64;
_1 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET = [true,false,false,true,true,true];
_3 = 65413_u16;
_3 = 2800_u16 | 34670_u16;
_9 = 3699825560_u32 as f64;
_9 = 3325025588945576345_u64 as f64;
_11 = (60_u8,);
_4 = _11.0 as i8;
_6 = (_2,);
_4 = 5088814229531606193_u64 as i8;
RET = [false,true,true,true,false,false];
_11.0 = '\u{9ccf7}' as u8;
_10 = false;
_9 = 99399691508402550256590373405362220375_u128 as f64;
Goto(bb3)
}
bb7 = {
_6 = (_2,);
_6 = (_2,);
RET = [false,true,true,false,true,false];
_9 = 9223372036854775807_isize as f64;
_2 = _6.0;
_6 = (_1,);
_3 = 5154441864249259213_i64 as u16;
RET = [true,false,false,true,false,false];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = !47_i8;
_10 = true;
_5 = 21321_i16 << _4;
_10 = true;
RET = [_10,_10,_10,_10,_10,_10];
_6 = (_2,);
_6 = (_1,);
_3 = !31157_u16;
_13 = &_14;
_13 = &(*_13);
_6.0 = [(-9223372036854775808_isize),(-7_isize)];
_11.0 = !158_u8;
_6.0 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_10 = !false;
_4 = 59_i8 >> _5;
_15 = (_1,);
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_16.0 = 226833334154724274048645126300922739522_u128 as u8;
Call(_3 = fn13(_4, _11, _6.0, _5, _6.0, _1, _16.0, _6, _6, _6, _15, RET), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_11.0 = _16.0 | _16.0;
_15.0 = [106_isize,(-58_isize)];
_11.0 = _16.0;
RET = [_10,_10,_10,_10,_10,_10];
_3 = 6105_u16 ^ 25793_u16;
_18 = _3 << _3;
_1 = [(-117_isize),9223372036854775807_isize];
RET = [_10,_10,_10,_10,_10,_10];
_11 = _16;
_19 = [474895078_u32,1584038549_u32,2461239580_u32,305106041_u32,3495433072_u32,2689139372_u32];
_19 = [1636453895_u32,2264164472_u32,3704242751_u32,1004952485_u32,583093508_u32,887476456_u32];
_5 = 5027_i16;
_1 = [(-9223372036854775808_isize),(-128_isize)];
Call(_4 = core::intrinsics::transmute(_10), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_20 = 61_isize + (-9223372036854775808_isize);
_4 = -66_i8;
_3 = '\u{17546}' as u16;
_17 = !_10;
_15 = (_2,);
_16.0 = !_11.0;
RET = [_10,_10,_17,_10,_10,_17];
_5 = _9 as i16;
_14 = 1798501035259290231_i64;
_13 = &_14;
_23 = _17 & _17;
_24 = core::ptr::addr_of!(_21);
_4 = 93_i8;
_15.0 = _6.0;
_15 = (_2,);
_18 = !_3;
_5 = 3306_i16 ^ (-19175_i16);
_14 = _18 as i64;
_6 = _15;
_1 = [_20,_20];
_9 = 12249043997910453643_u64 as f64;
_15.0 = [_20,_20];
_22 = _9 > _9;
RET = [_17,_10,_23,_10,_22,_22];
_9 = _20 as f64;
match _4 {
93 => bb13,
_ => bb4
}
}
bb13 = {
_1 = [_20,_20];
_5 = 146115899835234015548599953186419014486_u128 as i16;
_11 = (_16.0,);
_16.0 = _11.0;
_5 = -(-25804_i16);
RET = [_23,_23,_22,_17,_17,_17];
_6 = (_2,);
_27.0 = _15.0;
_17 = _22;
_15 = (_1,);
_27.2 = [_20,_20];
_27.0 = _2;
_25 = 1380349120_u32 as f32;
match _4 {
0 => bb9,
1 => bb5,
2 => bb3,
3 => bb6,
4 => bb14,
5 => bb15,
93 => bb17,
_ => bb16
}
}
bb14 = {
_20 = 61_isize + (-9223372036854775808_isize);
_4 = -66_i8;
_3 = '\u{17546}' as u16;
_17 = !_10;
_15 = (_2,);
_16.0 = !_11.0;
RET = [_10,_10,_17,_10,_10,_17];
_5 = _9 as i16;
_14 = 1798501035259290231_i64;
_13 = &_14;
_23 = _17 & _17;
_24 = core::ptr::addr_of!(_21);
_4 = 93_i8;
_15.0 = _6.0;
_15 = (_2,);
_18 = !_3;
_5 = 3306_i16 ^ (-19175_i16);
_14 = _18 as i64;
_6 = _15;
_1 = [_20,_20];
_9 = 12249043997910453643_u64 as f64;
_15.0 = [_20,_20];
_22 = _9 > _9;
RET = [_17,_10,_23,_10,_22,_22];
_9 = _20 as f64;
match _4 {
93 => bb13,
_ => bb4
}
}
bb15 = {
_3 = 29130_u16 - 13202_u16;
_6 = (_1,);
RET = [_10,_10,_10,_10,_10,_10];
_9 = (-8248597966124546519_i64) as f64;
RET = [_10,_10,_10,_10,_10,_10];
_11 = (29_u8,);
_1 = _6.0;
_6 = (_2,);
_11 = (89_u8,);
_9 = _11.0 as f64;
_1 = _2;
match _11.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
89 => bb10,
_ => bb9
}
}
bb16 = {
Return()
}
bb17 = {
_25 = _20 as f32;
_27.0 = [_20,_20];
_6 = (_27.0,);
_22 = _17 <= _10;
_16 = (_11.0,);
_13 = &_14;
_19 = [2354815551_u32,104140904_u32,3815874706_u32,1562949967_u32,139810665_u32,3753965297_u32];
_16 = (_11.0,);
_27.1 = RET;
_26.fld0 = core::ptr::addr_of!((*_24));
Goto(bb18)
}
bb18 = {
Call(_29 = dump_var(11_usize, 16_usize, Move(_16), 23_usize, Move(_23), 14_usize, Move(_14), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_29 = dump_var(11_usize, 20_usize, Move(_20), 4_usize, Move(_4), 10_usize, Move(_10), 17_usize, Move(_17)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_29 = dump_var(11_usize, 1_usize, Move(_1), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: i8,mut _2: [isize; 2],mut _3: i16,mut _4: [isize; 2],mut _5: [isize; 2]) -> [isize; 2] {
mir! {
type RET = [isize; 2];
let _6: f32;
let _7: Adt50;
let _8: ([isize; 2],);
let _9: Adt57;
let _10: Adt49;
let _11: f32;
let _12: *const u64;
let _13: [u32; 6];
let _14: (u8,);
let _15: [bool; 5];
let _16: [i64; 3];
let _17: i128;
let _18: f32;
let _19: [isize; 2];
let _20: char;
let _21: ([isize; 2], [bool; 6], [isize; 2]);
let _22: Adt46;
let _23: [isize; 8];
let _24: [bool; 8];
let _25: isize;
let _26: bool;
let _27: f32;
let _28: ();
let _29: ();
{
RET = [56_isize,45_isize];
RET = [(-9223372036854775808_isize),(-45_isize)];
_2 = [60_isize,27_isize];
_5 = [85_isize,(-9223372036854775808_isize)];
_2 = [(-19_isize),(-86_isize)];
_8.0 = [(-107_isize),9223372036854775807_isize];
_6 = (-52157018710589587030314491279303886734_i128) as f32;
_7.fld2 = false as isize;
RET = _4;
_7.fld0.0 = 22_u8;
RET = [_7.fld2,_7.fld2];
_7.fld0.0 = !17_u8;
_1 = (-127_i8) + 54_i8;
Call(_2 = core::intrinsics::transmute(_4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7.fld0.0 = 59_u8 + 63_u8;
_7.fld0.0 = 228_u8;
_7.fld0.0 = !150_u8;
_3 = 27131_i16;
RET = [_7.fld2,_7.fld2];
RET = [_7.fld2,_7.fld2];
_5 = [_7.fld2,_7.fld2];
_8.0 = _5;
RET = [_7.fld2,_7.fld2];
_11 = 334633739262797750587002859678206483694_u128 as f32;
RET = [_7.fld2,_7.fld2];
_8 = (_2,);
_6 = 104830597931010348795557899924419461531_i128 as f32;
_7.fld0 = (220_u8,);
_8.0 = [_7.fld2,_7.fld2];
_4 = [_7.fld2,_7.fld2];
_8.0 = [_7.fld2,_7.fld2];
_7.fld0.0 = !187_u8;
_13 = [4176370501_u32,3949978739_u32,3497074811_u32,2846332124_u32,3644441679_u32,1811571004_u32];
_6 = _11 + _11;
_7.fld2 = !9223372036854775807_isize;
_4 = [_7.fld2,_7.fld2];
_6 = _7.fld0.0 as f32;
_11 = _6 - _6;
_11 = _6;
_14 = _7.fld0;
_1 = (-60_i8);
_1 = 61_i8;
Goto(bb2)
}
bb2 = {
_5 = RET;
_5 = RET;
_4 = [_7.fld2,_7.fld2];
_7.fld0.0 = (-4942834691439045835_i64) as u8;
_7.fld0.0 = _11 as u8;
_7.fld0.0 = !_14.0;
_3 = (-2208_i16) & 15829_i16;
_5 = _4;
RET = [_7.fld2,_7.fld2];
_15 = [false,true,false,false,false];
_8.0 = RET;
_17 = false as i128;
_7.fld2 = (-80_isize);
_8 = (_5,);
_7.fld2 = (-9223372036854775808_isize);
RET = _4;
_11 = 8223_u16 as f32;
RET = [_7.fld2,_7.fld2];
_13 = [280098434_u32,3926976919_u32,3008794558_u32,2382729103_u32,2446687956_u32,1246472066_u32];
_13 = [108093902_u32,3912735718_u32,3859964014_u32,3932628913_u32,1682060610_u32,681194370_u32];
_18 = _6;
_6 = _7.fld0.0 as f32;
_4 = _8.0;
_7.fld2 = 9223372036854775807_isize;
_7.fld2 = '\u{40d6a}' as isize;
match _1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
61 => bb11,
_ => bb10
}
}
bb3 = {
_7.fld0.0 = 59_u8 + 63_u8;
_7.fld0.0 = 228_u8;
_7.fld0.0 = !150_u8;
_3 = 27131_i16;
RET = [_7.fld2,_7.fld2];
RET = [_7.fld2,_7.fld2];
_5 = [_7.fld2,_7.fld2];
_8.0 = _5;
RET = [_7.fld2,_7.fld2];
_11 = 334633739262797750587002859678206483694_u128 as f32;
RET = [_7.fld2,_7.fld2];
_8 = (_2,);
_6 = 104830597931010348795557899924419461531_i128 as f32;
_7.fld0 = (220_u8,);
_8.0 = [_7.fld2,_7.fld2];
_4 = [_7.fld2,_7.fld2];
_8.0 = [_7.fld2,_7.fld2];
_7.fld0.0 = !187_u8;
_13 = [4176370501_u32,3949978739_u32,3497074811_u32,2846332124_u32,3644441679_u32,1811571004_u32];
_6 = _11 + _11;
_7.fld2 = !9223372036854775807_isize;
_4 = [_7.fld2,_7.fld2];
_6 = _7.fld0.0 as f32;
_11 = _6 - _6;
_11 = _6;
_14 = _7.fld0;
_1 = (-60_i8);
_1 = 61_i8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_20 = '\u{668c2}';
_6 = _11 + _11;
_4 = _5;
_4 = _5;
_2 = _5;
_19 = [_7.fld2,_7.fld2];
_19 = [_7.fld2,_7.fld2];
_16 = [3465835214655187971_i64,(-4819292324753043530_i64),(-865623513212734314_i64)];
_7.fld0 = (_14.0,);
_16 = [(-6507732839901450486_i64),4361556845736274634_i64,(-1550237458157094348_i64)];
_6 = _11 + _18;
_21.1 = [true,true,true,false,false,false];
_14 = (_7.fld0.0,);
_7.fld0 = (_14.0,);
_15 = [true,false,false,true,false];
_11 = -_6;
_15 = [false,false,true,false,false];
_13 = [1990543877_u32,3031197475_u32,1936117421_u32,2503666964_u32,1098462490_u32,287157793_u32];
_4 = [_7.fld2,_7.fld2];
_4 = _2;
_3 = _1 as i16;
_14 = _7.fld0;
_5 = _8.0;
_15 = [true,true,true,true,false];
_13 = [83565556_u32,1574820418_u32,1145664362_u32,3146764803_u32,3418352185_u32,1394960533_u32];
_8.0 = _5;
_3 = !(-3062_i16);
_8 = (_19,);
Goto(bb12)
}
bb12 = {
_21.2 = [_7.fld2,_7.fld2];
_23 = [_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2];
_8.0 = _2;
_14 = (_7.fld0.0,);
_14.0 = _7.fld0.0;
_1 = 104_i8;
_7.fld0 = (_14.0,);
_21.1 = [true,true,false,false,true,false];
_7.fld2 = 9223372036854775807_isize;
_23 = [_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2];
_7.fld0 = (_14.0,);
_21.2 = [_7.fld2,_7.fld2];
_3 = 42661_u16 as i16;
_23 = [_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2,_7.fld2];
_11 = _6 + _6;
RET = [_7.fld2,_7.fld2];
_22 = Adt46::Variant1 { fld0: _3 };
_3 = Field::<i16>(Variant(_22, 1), 0);
_11 = -_6;
_21.1 = [true,false,false,true,false,true];
_8 = (_4,);
_27 = -_18;
match _7.fld2 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
9223372036854775807 => bb19,
_ => bb18
}
}
bb13 = {
_20 = '\u{668c2}';
_6 = _11 + _11;
_4 = _5;
_4 = _5;
_2 = _5;
_19 = [_7.fld2,_7.fld2];
_19 = [_7.fld2,_7.fld2];
_16 = [3465835214655187971_i64,(-4819292324753043530_i64),(-865623513212734314_i64)];
_7.fld0 = (_14.0,);
_16 = [(-6507732839901450486_i64),4361556845736274634_i64,(-1550237458157094348_i64)];
_6 = _11 + _18;
_21.1 = [true,true,true,false,false,false];
_14 = (_7.fld0.0,);
_7.fld0 = (_14.0,);
_15 = [true,false,false,true,false];
_11 = -_6;
_15 = [false,false,true,false,false];
_13 = [1990543877_u32,3031197475_u32,1936117421_u32,2503666964_u32,1098462490_u32,287157793_u32];
_4 = [_7.fld2,_7.fld2];
_4 = _2;
_3 = _1 as i16;
_14 = _7.fld0;
_5 = _8.0;
_15 = [true,true,true,true,false];
_13 = [83565556_u32,1574820418_u32,1145664362_u32,3146764803_u32,3418352185_u32,1394960533_u32];
_8.0 = _5;
_3 = !(-3062_i16);
_8 = (_19,);
Goto(bb12)
}
bb14 = {
_7.fld0.0 = 59_u8 + 63_u8;
_7.fld0.0 = 228_u8;
_7.fld0.0 = !150_u8;
_3 = 27131_i16;
RET = [_7.fld2,_7.fld2];
RET = [_7.fld2,_7.fld2];
_5 = [_7.fld2,_7.fld2];
_8.0 = _5;
RET = [_7.fld2,_7.fld2];
_11 = 334633739262797750587002859678206483694_u128 as f32;
RET = [_7.fld2,_7.fld2];
_8 = (_2,);
_6 = 104830597931010348795557899924419461531_i128 as f32;
_7.fld0 = (220_u8,);
_8.0 = [_7.fld2,_7.fld2];
_4 = [_7.fld2,_7.fld2];
_8.0 = [_7.fld2,_7.fld2];
_7.fld0.0 = !187_u8;
_13 = [4176370501_u32,3949978739_u32,3497074811_u32,2846332124_u32,3644441679_u32,1811571004_u32];
_6 = _11 + _11;
_7.fld2 = !9223372036854775807_isize;
_4 = [_7.fld2,_7.fld2];
_6 = _7.fld0.0 as f32;
_11 = _6 - _6;
_11 = _6;
_14 = _7.fld0;
_1 = (-60_i8);
_1 = 61_i8;
Goto(bb2)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_5 = RET;
_5 = RET;
_4 = [_7.fld2,_7.fld2];
_7.fld0.0 = (-4942834691439045835_i64) as u8;
_7.fld0.0 = _11 as u8;
_7.fld0.0 = !_14.0;
_3 = (-2208_i16) & 15829_i16;
_5 = _4;
RET = [_7.fld2,_7.fld2];
_15 = [false,true,false,false,false];
_8.0 = RET;
_17 = false as i128;
_7.fld2 = (-80_isize);
_8 = (_5,);
_7.fld2 = (-9223372036854775808_isize);
RET = _4;
_11 = 8223_u16 as f32;
RET = [_7.fld2,_7.fld2];
_13 = [280098434_u32,3926976919_u32,3008794558_u32,2382729103_u32,2446687956_u32,1246472066_u32];
_13 = [108093902_u32,3912735718_u32,3859964014_u32,3932628913_u32,1682060610_u32,681194370_u32];
_18 = _6;
_6 = _7.fld0.0 as f32;
_4 = _8.0;
_7.fld2 = 9223372036854775807_isize;
_7.fld2 = '\u{40d6a}' as isize;
match _1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
61 => bb11,
_ => bb10
}
}
bb19 = {
_21.0 = _2;
_14.0 = _7.fld0.0 + _7.fld0.0;
_27 = _6 - _6;
_13 = [1924199301_u32,3687261280_u32,2348587262_u32,2266557456_u32,3888062668_u32,3841467469_u32];
Goto(bb20)
}
bb20 = {
Call(_28 = dump_var(12_usize, 14_usize, Move(_14), 23_usize, Move(_23), 13_usize, Move(_13), 17_usize, Move(_17)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_28 = dump_var(12_usize, 4_usize, Move(_4), 15_usize, Move(_15), 5_usize, Move(_5), 29_usize, _29), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: i8,mut _2: (u8,),mut _3: [isize; 2],mut _4: i16,mut _5: [isize; 2],mut _6: [isize; 2],mut _7: u8,mut _8: ([isize; 2],),mut _9: ([isize; 2],),mut _10: ([isize; 2],),mut _11: ([isize; 2],),mut _12: [bool; 6]) -> u16 {
mir! {
type RET = u16;
let _13: isize;
let _14: isize;
let _15: *mut u16;
let _16: [bool; 6];
let _17: Adt50;
let _18: f32;
let _19: ([isize; 2],);
let _20: f64;
let _21: i16;
let _22: usize;
let _23: f64;
let _24: i32;
let _25: f64;
let _26: i8;
let _27: u32;
let _28: *mut u32;
let _29: [usize; 8];
let _30: [isize; 8];
let _31: Adt61;
let _32: usize;
let _33: isize;
let _34: [bool; 8];
let _35: *mut [isize; 8];
let _36: bool;
let _37: f32;
let _38: (u16,);
let _39: [i64; 3];
let _40: Adt53;
let _41: isize;
let _42: ([isize; 2], [bool; 6], [isize; 2]);
let _43: u128;
let _44: ([isize; 2],);
let _45: ();
let _46: ();
{
_8 = _10;
_9.0 = [9223372036854775807_isize,(-76_isize)];
RET = '\u{c7380}' as u16;
_10 = (_5,);
_9.0 = [(-4_isize),(-9223372036854775808_isize)];
_10.0 = [(-9223372036854775808_isize),(-114_isize)];
_5 = _3;
_9 = _8;
RET = 16886_u16 << _7;
_9 = _10;
_13 = 28315902_i32 as isize;
RET = 152278694640960361289324918985025914103_i128 as u16;
_9.0 = [_13,_13];
_8 = _11;
_4 = 11215130513485406382227271792058699972_i128 as i16;
_13 = 9223372036854775807_isize | 122_isize;
_15 = core::ptr::addr_of_mut!(RET);
_9 = (_3,);
_8.0 = [_13,_13];
_8 = (_6,);
_4 = 8927_i16 >> _1;
_11 = _10;
_8 = _10;
RET = 221606140376635273214162654451662669732_u128 as u16;
_16 = [true,true,true,true,true,true];
Goto(bb1)
}
bb1 = {
_5 = [_13,_13];
_17.fld2 = _13 * _13;
_11 = (_3,);
_9 = _8;
_11.0 = [_17.fld2,_17.fld2];
_4 = RET as i16;
_8.0 = [_13,_13];
_13 = _17.fld2;
_17.fld2 = _13;
_17.fld2 = _2.0 as isize;
_4 = 117870499976468517172408953586790384395_i128 as i16;
_17.fld2 = false as isize;
_18 = 6814613_i32 as f32;
_17.fld0.0 = _13 as u8;
_7 = !_17.fld0.0;
Goto(bb2)
}
bb2 = {
RET = 111581005418098732362171551005171993679_u128 as u16;
_3 = [_17.fld2,_13];
Call(_10.0 = core::intrinsics::transmute(_3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = _6;
_17.fld0 = _2;
_11.0 = [_13,_13];
_20 = _13 as f64;
_8.0 = [_13,_13];
_6 = [_13,_13];
_14 = _17.fld2 + _13;
_9 = _10;
_9 = (_11.0,);
_15 = core::ptr::addr_of_mut!((*_15));
_6 = [_14,_13];
_15 = core::ptr::addr_of_mut!((*_15));
_12 = _16;
_9 = (_10.0,);
_6 = [_14,_14];
_8 = (_11.0,);
_17.fld0.0 = _7 << _13;
_19.0 = [_14,_13];
_15 = core::ptr::addr_of_mut!(RET);
_16 = _12;
_21 = _4 & _4;
_15 = core::ptr::addr_of_mut!((*_15));
_10 = (_6,);
_2.0 = !_17.fld0.0;
Goto(bb4)
}
bb4 = {
_19 = (_11.0,);
_8.0 = [_13,_13];
_17.fld2 = _14 >> _14;
_10 = (_3,);
_6 = [_13,_17.fld2];
_12 = _16;
_6 = [_17.fld2,_14];
RET = 38541_u16 << _1;
_12 = _16;
_17.fld0.0 = _2.0 & _2.0;
_5 = _10.0;
_1 = 187779644_i32 as i8;
RET = 43038_u16;
_22 = !14112298942363024337_usize;
_9.0 = [_17.fld2,_14];
Goto(bb5)
}
bb5 = {
_15 = core::ptr::addr_of_mut!((*_15));
_23 = RET as f64;
_1 = (-91_i8);
_19 = (_6,);
_4 = _21 | _21;
_2.0 = !_17.fld0.0;
_12 = [true,false,false,true,true,false];
_17.fld0 = _2;
_18 = _23 as f32;
_24 = (-1884942070_i32) * 1917160899_i32;
Goto(bb6)
}
bb6 = {
_11.0 = _9.0;
_5 = _9.0;
_13 = _18 as isize;
_6 = [_17.fld2,_17.fld2];
_2.0 = _17.fld0.0 + _17.fld0.0;
_11.0 = [_17.fld2,_17.fld2];
_9.0 = [_17.fld2,_17.fld2];
_17.fld2 = !_14;
_9 = (_10.0,);
_9.0 = _6;
_9 = (_3,);
_17.fld0 = _2;
_18 = _14 as f32;
_3 = _5;
_8 = (_5,);
_26 = 138584223386489172486640115628611858550_u128 as i8;
Goto(bb7)
}
bb7 = {
_23 = _20;
_23 = -_20;
_4 = _21;
_14 = -_17.fld2;
_13 = -_14;
_17.fld2 = -_14;
_24 = 660276074_i32 * (-201803570_i32);
_6 = [_14,_14];
_25 = _20 * _20;
_11.0 = [_14,_17.fld2];
_17.fld2 = '\u{7f2ec}' as isize;
_2.0 = !_17.fld0.0;
_2 = (_17.fld0.0,);
_13 = -_14;
_13 = _14 | _14;
_17.fld2 = _24 as isize;
_11.0 = [_13,_13];
_2.0 = _17.fld0.0 + _17.fld0.0;
RET = 55631_u16 ^ 47720_u16;
_14 = (-6477795899671685464_i64) as isize;
_27 = 4240198694_u32 >> _13;
_19 = (_8.0,);
_5 = [_13,_14];
_19 = (_8.0,);
_26 = _1 + _1;
_16 = _12;
_11.0 = _6;
_9 = _19;
_18 = RET as f32;
match _1 {
340282366920938463463374607431768211365 => bb9,
_ => bb8
}
}
bb8 = {
_15 = core::ptr::addr_of_mut!((*_15));
_23 = RET as f64;
_1 = (-91_i8);
_19 = (_6,);
_4 = _21 | _21;
_2.0 = !_17.fld0.0;
_12 = [true,false,false,true,true,false];
_17.fld0 = _2;
_18 = _23 as f32;
_24 = (-1884942070_i32) * 1917160899_i32;
Goto(bb6)
}
bb9 = {
_29 = [_22,_22,_22,_22,_22,_22,_22,_22];
_8 = _10;
_11.0 = [_13,_14];
RET = !60201_u16;
_28 = core::ptr::addr_of_mut!(_27);
_8.0 = _11.0;
_28 = core::ptr::addr_of_mut!(_27);
_2 = (_17.fld0.0,);
_26 = _1;
_14 = -_17.fld2;
_11 = (_5,);
_16 = [false,false,false,true,true,true];
_30 = [_13,_13,_13,_13,_13,_13,_13,_13];
_8 = (_5,);
_24 = _18 as i32;
_29 = [_22,_22,_22,_22,_22,_22,_22,_22];
_10 = _11;
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
340282366920938463463374607431768211365 => bb10,
_ => bb6
}
}
bb10 = {
_16 = [true,true,true,true,true,false];
_23 = -_20;
_1 = _22 as i8;
_23 = _21 as f64;
_25 = 228580963503141384152253036943860448729_u128 as f64;
_19.0 = [_13,_17.fld2];
_32 = (-7202308107190969874_i64) as usize;
_1 = _26 & _26;
_7 = !_2.0;
_24 = (*_15) as i32;
_6 = [_13,_13];
_24 = 862926173387757753_u64 as i32;
_13 = -_14;
_9 = (_5,);
_27 = 1693183537_u32;
Goto(bb11)
}
bb11 = {
_23 = _20;
_12 = [true,true,true,false,true,false];
_9.0 = _19.0;
_19 = _8;
_18 = 296014195702027860875648350308778443811_u128 as f32;
_33 = _18 as isize;
_10 = (_8.0,);
_2.0 = _24 as u8;
_5 = _6;
_12 = _16;
_11 = (_8.0,);
_17.fld0.0 = !_7;
_30 = [_14,_14,_17.fld2,_33,_14,_14,_33,_13];
Goto(bb12)
}
bb12 = {
_7 = 122999201229738170443851557291336931691_u128 as u8;
_3 = [_14,_14];
_13 = true as isize;
_34 = [true,false,true,true,false,false,false,false];
_22 = _32;
_17.fld2 = _13;
_27 = 2208403878_u32 - 1417574734_u32;
_6 = [_33,_14];
_26 = _18 as i8;
_5 = _8.0;
_7 = _17.fld0.0;
_10.0 = _3;
_13 = -_33;
_23 = -_20;
_15 = core::ptr::addr_of_mut!((*_15));
_14 = _33 + _33;
_10.0 = [_17.fld2,_13];
_3 = [_13,_17.fld2];
_8.0 = _5;
_19 = (_9.0,);
_21 = _4;
_2 = (_7,);
_17.fld2 = _14 * _14;
_26 = (*_28) as i8;
_2 = (_7,);
_9 = _8;
_25 = _23 + _23;
Goto(bb13)
}
bb13 = {
_6 = _11.0;
_25 = -_23;
_37 = _18 + _18;
_27 = 2608633452_u32 >> _33;
_4 = _21;
_26 = _1 >> _2.0;
_38.0 = !(*_15);
_1 = false as i8;
_36 = true;
_23 = _25;
_42.2 = [_33,_17.fld2];
_15 = core::ptr::addr_of_mut!(RET);
_33 = _17.fld2;
RET = _24 as u16;
Call(RET = core::intrinsics::bswap(_38.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_29 = [_22,_22,_32,_32,_22,_22,_32,_32];
_11.0 = [_17.fld2,_17.fld2];
_10 = (_6,);
_34 = [_36,_36,_36,_36,_36,_36,_36,_36];
_13 = _17.fld2;
_2 = (_17.fld0.0,);
_33 = 132116804220703479708739516022761330069_i128 as isize;
_6 = [_17.fld2,_13];
_30 = [_13,_13,_17.fld2,_17.fld2,_13,_14,_14,_13];
_29 = [_22,_32,_22,_22,_32,_22,_22,_32];
_12 = _16;
_32 = 102247654563591187799803985225175466100_u128 as usize;
_20 = -_25;
_35 = core::ptr::addr_of_mut!(_30);
_42.0 = [_13,_13];
_36 = !false;
_21 = _32 as i16;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(13_usize, 22_usize, Move(_22), 38_usize, Move(_38), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(13_usize, 30_usize, Move(_30), 32_usize, Move(_32), 24_usize, Move(_24), 9_usize, Move(_9)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(13_usize, 26_usize, Move(_26), 29_usize, Move(_29), 12_usize, Move(_12), 36_usize, Move(_36)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(13_usize, 19_usize, Move(_19), 14_usize, Move(_14), 46_usize, _46, 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: u16,mut _2: [isize; 2],mut _3: [isize; 2],mut _4: [isize; 2],mut _5: [isize; 2],mut _6: u32,mut _7: [isize; 2],mut _8: (u16,),mut _9: u16) -> bool {
mir! {
type RET = bool;
let _10: Adt58;
let _11: i64;
let _12: u32;
let _13: isize;
let _14: Adt50;
let _15: bool;
let _16: [i64; 3];
let _17: i64;
let _18: f64;
let _19: Adt56;
let _20: [bool; 5];
let _21: u32;
let _22: ();
let _23: ();
{
RET = !true;
_8.0 = !_9;
_5 = _4;
RET = false & false;
RET = !false;
_2 = [126_isize,9223372036854775807_isize];
_4 = [(-91_isize),9223372036854775807_isize];
_9 = 607_i16 as u16;
_9 = _1;
_8.0 = !_1;
_5 = [4_isize,9223372036854775807_isize];
_3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_3 = _7;
_7 = _3;
_3 = [(-9223372036854775808_isize),(-60_isize)];
_1 = !_8.0;
_5 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_9 = _1 + _1;
_6 = 3004894860_u32 | 323527882_u32;
RET = false;
Goto(bb1)
}
bb1 = {
_8.0 = _1 | _9;
_8 = (_9,);
_8 = (_1,);
_6 = '\u{f2d75}' as u32;
_11 = -8165814537814216663_i64;
_12 = _11 as u32;
_5 = [9223372036854775807_isize,(-79_isize)];
RET = !true;
_3 = _4;
_9 = 274374324403540809187221494144132990448_u128 as u16;
_11 = -(-2589148083222905326_i64);
_11 = (-4696987917384027632_i64);
_4 = [9223372036854775807_isize,9223372036854775807_isize];
_13 = 103_isize;
_3 = _7;
_4 = _7;
_13 = 9223372036854775807_isize | (-9223372036854775808_isize);
_4 = _7;
_7 = [_13,_13];
_3 = [_13,_13];
_13 = 9223372036854775807_isize;
_5 = _4;
Call(_7 = fn15(_1, _5, _4, _1, _4, _4, _1, _8, _4, _8, _8, _5, _4, _8.0, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = !true;
RET = true;
_8.0 = !_1;
_1 = !_8.0;
_14.fld2 = !_13;
RET = false;
_14.fld0 = (99_u8,);
_14.fld2 = _13;
_6 = _12 << _8.0;
_4 = [_14.fld2,_13];
_1 = _8.0 - _8.0;
_1 = _8.0 + _8.0;
_16 = [_11,_11,_11];
match _14.fld2 {
0 => bb3,
1 => bb4,
9223372036854775807 => bb6,
_ => bb5
}
}
bb3 = {
_8.0 = _1 | _9;
_8 = (_9,);
_8 = (_1,);
_6 = '\u{f2d75}' as u32;
_11 = -8165814537814216663_i64;
_12 = _11 as u32;
_5 = [9223372036854775807_isize,(-79_isize)];
RET = !true;
_3 = _4;
_9 = 274374324403540809187221494144132990448_u128 as u16;
_11 = -(-2589148083222905326_i64);
_11 = (-4696987917384027632_i64);
_4 = [9223372036854775807_isize,9223372036854775807_isize];
_13 = 103_isize;
_3 = _7;
_4 = _7;
_13 = 9223372036854775807_isize | (-9223372036854775808_isize);
_4 = _7;
_7 = [_13,_13];
_3 = [_13,_13];
_13 = 9223372036854775807_isize;
_5 = _4;
Call(_7 = fn15(_1, _5, _4, _1, _4, _4, _1, _8, _4, _8, _8, _5, _4, _8.0, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_17 = _11 | _11;
_1 = _8.0;
_11 = _17 | _17;
_17 = '\u{b8784}' as i64;
RET = !false;
_17 = _11;
_1 = '\u{93037}' as u16;
_16 = [_17,_11,_17];
_15 = _6 == _6;
_16 = [_11,_11,_11];
_12 = _6;
_1 = _8.0 - _8.0;
_11 = _17 + _17;
_7 = [_13,_14.fld2];
_14.fld0 = (115_u8,);
_8 = (_1,);
_14.fld1 = core::ptr::addr_of_mut!(_11);
_14.fld1 = core::ptr::addr_of_mut!(_17);
_9 = _14.fld0.0 as u16;
Goto(bb7)
}
bb7 = {
RET = _15 | _15;
_7 = _5;
_14.fld2 = _13;
RET = !_15;
Goto(bb8)
}
bb8 = {
Call(_22 = dump_var(14_usize, 9_usize, Move(_9), 2_usize, Move(_2), 7_usize, Move(_7), 8_usize, Move(_8)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_22 = dump_var(14_usize, 16_usize, Move(_16), 17_usize, Move(_17), 13_usize, Move(_13), 23_usize, _23), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: u16,mut _2: [isize; 2],mut _3: [isize; 2],mut _4: u16,mut _5: [isize; 2],mut _6: [isize; 2],mut _7: u16,mut _8: (u16,),mut _9: [isize; 2],mut _10: (u16,),mut _11: (u16,),mut _12: [isize; 2],mut _13: [isize; 2],mut _14: u16,mut _15: [isize; 2]) -> [isize; 2] {
mir! {
type RET = [isize; 2];
let _16: Adt46;
let _17: i16;
let _18: Adt46;
let _19: u128;
let _20: ((u16,), bool, [bool; 6], i8);
let _21: isize;
let _22: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _23: isize;
let _24: f32;
let _25: [usize; 8];
let _26: Adt46;
let _27: ((u16,), bool, [bool; 6], i8);
let _28: ([i64; 3], u32, [bool; 6], [isize; 2]);
let _29: Adt50;
let _30: isize;
let _31: i8;
let _32: *mut usize;
let _33: ();
let _34: ();
{
_8 = (_11.0,);
_5 = [(-9223372036854775808_isize),9223372036854775807_isize];
_16 = Adt46::Variant1 { fld0: (-1695_i16) };
_13 = [(-9223372036854775808_isize),9223372036854775807_isize];
RET = [9223372036854775807_isize,9223372036854775807_isize];
_11 = (_8.0,);
_1 = !_4;
_14 = !_1;
_11.0 = _8.0 & _10.0;
_8.0 = _7 * _14;
place!(Field::<i16>(Variant(_16, 1), 0)) = !(-6209_i16);
_20.0 = _10;
_1 = !_8.0;
_9 = _6;
_11 = (_7,);
_20.0 = _8;
_20.2 = [false,false,false,false,true,false];
_4 = !_7;
_14 = Field::<i16>(Variant(_16, 1), 0) as u16;
_11.0 = !_8.0;
Call(_20 = fn16(_11, _12, _10, _8, _8, _3, _4, _2, _8, _9, _8.0, _12), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_21 = !9223372036854775807_isize;
_20.0.0 = _4;
_17 = _20.1 as i16;
_19 = !76818662301958780288639304005319923413_u128;
_22.3 = _2;
_17 = Field::<i16>(Variant(_16, 1), 0) - Field::<i16>(Variant(_16, 1), 0);
_22.2 = [_20.1,_20.1,_20.1,_20.1,_20.1,_20.1];
_11 = (_7,);
SetDiscriminant(_16, 0);
place!(Field::<u8>(Variant(_16, 0), 0)) = 65_u8;
_13 = [_21,_21];
_17 = _20.3 as i16;
_22.2 = [_20.1,_20.1,_20.1,_20.1,_20.1,_20.1];
_20.0 = (_1,);
_10.0 = !_1;
_10 = (_20.0.0,);
_4 = (-1687576017_i32) as u16;
_20.3 = !109_i8;
_20.2 = [_20.1,_20.1,_20.1,_20.1,_20.1,_20.1];
_12 = [_21,_21];
Goto(bb2)
}
bb2 = {
_24 = _1 as f32;
place!(Field::<char>(Variant(_16, 0), 1)) = '\u{f899e}';
_20.0.0 = !_1;
_27.0.0 = _10.0 ^ _10.0;
_13 = [_21,_21];
_27 = (_11, _20.1, _22.2, _20.3);
SetDiscriminant(_16, 1);
_7 = 281455037_u32 as u16;
_8.0 = _11.0 & _20.0.0;
_20 = (_8, _27.1, _27.2, _27.3);
_16 = Adt46::Variant1 { fld0: _17 };
Call(_8.0 = core::intrinsics::bswap(_1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_22.1 = 2221952533_u32 + 3162340504_u32;
_21 = 9223372036854775807_isize;
place!(Field::<i16>(Variant(_16, 1), 0)) = _17 >> _27.0.0;
RET = _22.3;
place!(Field::<i16>(Variant(_16, 1), 0)) = _17;
_20.1 = !_27.1;
_27.2 = [_27.1,_27.1,_20.1,_27.1,_27.1,_20.1];
_22.1 = _21 as u32;
_15 = _9;
_25 = [13294029596474217504_usize,11371340045065899429_usize,3_usize,6728208312685049160_usize,3_usize,1_usize,14759533457228165618_usize,12286004369269361912_usize];
_27.0 = (_11.0,);
_4 = !_11.0;
_20.2 = [_27.1,_27.1,_27.1,_27.1,_20.1,_20.1];
_18 = Move(_16);
Goto(bb4)
}
bb4 = {
Call(_33 = dump_var(15_usize, 9_usize, Move(_9), 8_usize, Move(_8), 10_usize, Move(_10), 21_usize, Move(_21)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_33 = dump_var(15_usize, 3_usize, Move(_3), 2_usize, Move(_2), 25_usize, Move(_25), 5_usize, Move(_5)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_33 = dump_var(15_usize, 4_usize, Move(_4), 7_usize, Move(_7), 34_usize, _34, 34_usize, _34), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: (u16,),mut _2: [isize; 2],mut _3: (u16,),mut _4: (u16,),mut _5: (u16,),mut _6: [isize; 2],mut _7: u16,mut _8: [isize; 2],mut _9: (u16,),mut _10: [isize; 2],mut _11: u16,mut _12: [isize; 2]) -> ((u16,), bool, [bool; 6], i8) {
mir! {
type RET = ((u16,), bool, [bool; 6], i8);
let _13: [i64; 3];
let _14: ((u16,), bool, [bool; 6], i8);
let _15: Adt46;
let _16: Adt56;
let _17: (u16,);
let _18: isize;
let _19: *mut i16;
let _20: ();
let _21: ();
{
_3 = (_11,);
_6 = _2;
_5.0 = _9.0 + _1.0;
Call(RET.0 = fn17(_4.0, _5.0, _4, _3, _5.0, _7, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14.2 = [false,true,false,false,false,true];
_13 = [(-4966105390623902086_i64),(-9003017826522479292_i64),(-3047932980712875996_i64)];
_5 = (_1.0,);
_5 = (RET.0.0,);
_9.0 = RET.0.0;
RET.3 = 121_i8 + (-51_i8);
_8 = _12;
RET.2 = _14.2;
RET.3 = -37_i8;
_7 = _3.0 << _11;
_17 = (RET.0.0,);
_9.0 = true as u16;
_5 = (_3.0,);
RET.0.0 = _3.0;
_2 = [(-9223372036854775808_isize),9223372036854775807_isize];
_7 = _5.0;
_12 = _10;
_18 = (-9223372036854775808_isize);
_9 = (_17.0,);
RET.3 = -17_i8;
RET.0.0 = (-87146433586109669484588088123544478444_i128) as u16;
_14.1 = _11 == _3.0;
RET.1 = _14.1;
Goto(bb2)
}
bb2 = {
Call(_20 = dump_var(16_usize, 12_usize, Move(_12), 9_usize, Move(_9), 6_usize, Move(_6), 1_usize, Move(_1)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_20 = dump_var(16_usize, 10_usize, Move(_10), 4_usize, Move(_4), 17_usize, Move(_17), 21_usize, _21), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: u16,mut _2: u16,mut _3: (u16,),mut _4: (u16,),mut _5: u16,mut _6: u16,mut _7: [isize; 2]) -> (u16,) {
mir! {
type RET = (u16,);
let _8: [bool; 6];
let _9: *mut [isize; 8];
let _10: ();
let _11: ();
{
RET.0 = _1;
_6 = 61_u8 as u16;
_1 = !_4.0;
RET = (_4.0,);
_6 = !_4.0;
_8 = [false,true,false,false,true,true];
RET = (_3.0,);
RET.0 = _1 + _1;
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(17_usize, 3_usize, Move(_3), 4_usize, Move(_4), 1_usize, Move(_1), 5_usize, Move(_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{4c115}'), std::hint::black_box(5402_u16), std::hint::black_box(81_i8), std::hint::black_box(26485_i16), std::hint::black_box((-1579080416_i32)), std::hint::black_box(1521052116_u32), std::hint::black_box((-26381839036547051987745048329482998257_i128)), std::hint::black_box(2630817927134110770_usize));
                
            }
#[derive(Debug)]
pub enum Adt46 {
Variant0{
fld0: u8,
fld1: char,

},
Variant1{
fld0: i16,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: Adt46,
fld1: f64,
fld2: *mut u32,
fld3: *mut i16,
fld4: u128,
fld5: u32,
fld6: i64,
fld7: (u8,),

},
Variant1{
fld0: [u32; 6],
fld1: *const isize,
fld2: (u8,),
fld3: *mut u16,
fld4: *const u64,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: *const u64,
fld1: ((u16,), bool, [bool; 6], i8),
fld2: *mut [isize; 8],
fld3: *mut ([isize; 2], [bool; 6], [isize; 2]),
fld4: Adt46,

},
Variant1{
fld0: *mut i32,
fld1: *mut i16,
fld2: isize,
fld3: [i64; 3],

},
Variant2{
fld0: *mut usize,
fld1: f32,
fld2: i128,
fld3: i8,

},
Variant3{
fld0: f64,
fld1: usize,
fld2: *mut i16,
fld3: u32,
fld4: *mut i64,

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: *const char,
fld1: *mut u16,
fld2: ([i64; 3], u32, [bool; 6], [isize; 2]),
fld3: *mut i64,
fld4: *const u64,
fld5: u8,
fld6: [u32; 6],
fld7: Adt47,

},
Variant1{
fld0: *mut i64,
fld1: ([i64; 3], u32, [bool; 6], [isize; 2]),
fld2: isize,
fld3: i8,
fld4: *mut u16,
fld5: *mut ([isize; 2], [bool; 6], [isize; 2]),
fld6: [bool; 5],

},
Variant2{
fld0: bool,
fld1: (u8,),
fld2: *mut u32,
fld3: [isize; 8],
fld4: ([isize; 2],),
fld5: *mut u16,
fld6: ((u16,), bool, [bool; 6], i8),
fld7: [u32; 6],

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: (u8,),
fld1: *mut i64,
fld2: isize,
}
#[derive(Debug)]
pub struct Adt51 {
fld0: bool,
fld1: usize,
fld2: u64,
fld3: *mut ([isize; 2], [bool; 6], [isize; 2]),
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: u8,
fld1: *const u64,
fld2: *const isize,
fld3: [usize; 8],
fld4: ([i64; 3], u32, [bool; 6], [isize; 2]),

},
Variant1{
fld0: *mut usize,
fld1: *mut u16,
fld2: (u16,),
fld3: (u8,),
fld4: u16,
fld5: ([isize; 2], [bool; 6], [isize; 2]),
fld6: [usize; 8],
fld7: *const isize,

},
Variant2{
fld0: *mut f64,
fld1: char,
fld2: i128,

},
Variant3{
fld0: Adt48,
fld1: [i64; 3],
fld2: *mut i64,
fld3: u8,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: *mut u32,
fld1: char,
fld2: Adt47,
fld3: (bool, i16, *const char, *mut i64, [bool; 8]),
fld4: *const isize,
fld5: ([isize; 2],),

},
Variant1{
fld0: i32,
fld1: *mut f64,

},
Variant2{
fld0: Adt46,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: bool,

},
Variant1{
fld0: [bool; 8],

},
Variant2{
fld0: Adt50,
fld1: i128,
fld2: isize,
fld3: *mut u32,

}}
#[derive(Debug)]
pub struct Adt55 {
fld0: *const char,
fld1: Adt52,
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: ([isize; 2],),
fld1: Adt51,
fld2: [i64; 3],
fld3: [u32; 6],
fld4: ([isize; 2], [bool; 6], [isize; 2]),
fld5: i32,

},
Variant1{
fld0: *const char,
fld1: (bool, i16, *const char, *mut i64, [bool; 8]),
fld2: usize,
fld3: *mut f64,
fld4: f32,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: u8,
fld1: ((u16,), bool, [bool; 6], i8),

},
Variant1{
fld0: *mut u32,
fld1: [bool; 8],

},
Variant2{
fld0: Adt56,
fld1: f32,
fld2: [bool; 8],
fld3: u32,
fld4: i128,
fld5: Adt50,

},
Variant3{
fld0: bool,
fld1: Adt56,
fld2: ([i64; 3], u32, [bool; 6], [isize; 2]),
fld3: *mut u16,
fld4: f64,
fld5: ([isize; 2], [bool; 6], [isize; 2]),

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: *mut f64,
fld1: (bool, i16, *const char, *mut i64, [bool; 8]),
fld2: Adt47,
fld3: *mut i16,
fld4: Adt50,
fld5: ([isize; 2], [bool; 6], [isize; 2]),

},
Variant1{
fld0: u64,
fld1: *mut usize,
fld2: u32,
fld3: usize,
fld4: i16,
fld5: i32,
fld6: *const u64,
fld7: Adt48,

},
Variant2{
fld0: ([i64; 3], u32, [bool; 6], [isize; 2]),
fld1: *mut f64,
fld2: (u8,),
fld3: *mut i16,
fld4: *mut [isize; 8],

},
Variant3{
fld0: bool,
fld1: *mut i32,
fld2: [bool; 8],
fld3: *const char,
fld4: (u16,),
fld5: *mut ([isize; 2], [bool; 6], [isize; 2]),
fld6: [isize; 2],
fld7: Adt52,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: u8,
fld1: Adt47,

},
Variant1{
fld0: u64,
fld1: *mut ([isize; 2], [bool; 6], [isize; 2]),
fld2: ([isize; 2], [bool; 6], [isize; 2]),

},
Variant2{
fld0: Adt46,
fld1: (u16,),
fld2: ([isize; 2], [bool; 6], [isize; 2]),
fld3: u16,
fld4: ((u16,), bool, [bool; 6], i8),

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: [isize; 2],
fld1: *mut u32,

},
Variant1{
fld0: bool,
fld1: ([i64; 3], u32, [bool; 6], [isize; 2]),
fld2: Adt54,
fld3: *mut f64,
fld4: [isize; 8],
fld5: ([isize; 2], [bool; 6], [isize; 2]),

}}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: (u16,),

},
Variant1{
fld0: ([isize; 2], [bool; 6], [isize; 2]),
fld1: [isize; 8],
fld2: *mut u16,
fld3: Adt52,
fld4: [i64; 3],

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: Adt59,
fld1: [i64; 3],

},
Variant1{
fld0: [isize; 8],

}}

