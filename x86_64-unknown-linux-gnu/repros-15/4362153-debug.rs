#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u64,mut _2: char,mut _3: i32,mut _4: i128) -> isize {
mir! {
type RET = isize;
let _5: isize;
let _6: [u16; 8];
let _7: Adt65;
let _8: u32;
let _9: Adt57;
let _10: Adt59;
let _11: [u8; 3];
let _12: char;
let _13: [u16; 8];
let _14: bool;
let _15: [u16; 8];
let _16: [u16; 4];
let _17: [u16; 4];
let _18: isize;
let _19: i16;
let _20: [u16; 8];
let _21: ([u64; 6], bool, i128, [i32; 7]);
let _22: i64;
let _23: Adt62;
let _24: f64;
let _25: f32;
let _26: *mut [bool; 1];
let _27: *const [u8; 3];
let _28: u16;
let _29: *const [i8; 1];
let _30: *mut [u32; 3];
let _31: [u32; 3];
let _32: f32;
let _33: f64;
let _34: u8;
let _35: ([u64; 6], bool, i128, [i32; 7]);
let _36: isize;
let _37: usize;
let _38: [u64; 4];
let _39: i32;
let _40: Adt65;
let _41: char;
let _42: Adt57;
let _43: ();
let _44: ();
{
_3 = (-257214214_i32) - (-420084827_i32);
_3 = !(-1220188711_i32);
Call(_2 = fn1(_3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3), bb1, UnwindUnreachable())
}
bb1 = {
RET = 9223372036854775807_isize << _3;
_5 = RET;
_4 = 53259899908648197631994269067790599931_i128 - 49823226125362872342885991197407414827_i128;
_1 = 13476272112229072995_u64 >> _5;
_1 = !16334531961540231732_u64;
_5 = RET;
_1 = 2355952655164172449_u64;
_5 = !RET;
_1 = 9113725443801421537_u64;
_4 = 118_u8 as i128;
_1 = 18269245017019606231_u64;
_8 = true as u32;
RET = _5 >> _8;
_3 = (-816171532_i32) * (-1292158821_i32);
_2 = '\u{b5a76}';
_8 = 112553483869200392524544530182153849999_u128 as u32;
_8 = _3 as u32;
_6 = [2989_u16,34518_u16,38983_u16,6998_u16,2968_u16,108_u16,18302_u16,6750_u16];
RET = _5;
Call(_1 = fn2(_3, _6, _5, _3, _6, _4, RET, _3, RET, _6, RET), bb2, UnwindUnreachable())
}
bb2 = {
_3 = -2048487765_i32;
_2 = '\u{4b98d}';
_8 = 62_u8 as u32;
_8 = 2393582716_u32;
_5 = RET;
_1 = 15778090925326223317_u64 & 14603654775483493436_u64;
_3 = false as i32;
RET = -_5;
RET = _5 << _5;
RET = _5;
_5 = !RET;
RET = 21277938697693303952038168683228423841_u128 as isize;
_6 = [51691_u16,50169_u16,33633_u16,33966_u16,19067_u16,45448_u16,56549_u16,31851_u16];
_6 = [25476_u16,6166_u16,60111_u16,49679_u16,50449_u16,20396_u16,55302_u16,19527_u16];
_11 = [66_u8,189_u8,91_u8];
_6 = [7281_u16,9443_u16,22001_u16,24960_u16,28626_u16,41374_u16,25827_u16,64396_u16];
RET = _5 >> _5;
_1 = (-32526_i16) as u64;
_5 = RET + RET;
_11 = [127_u8,48_u8,117_u8];
RET = _5;
_11 = [69_u8,241_u8,154_u8];
_4 = 111516291693512257741953839154102412138_i128 + 60849375290905818382303514300341685241_i128;
_8 = 530694093_u32;
_1 = 4228674414487921613_u64;
RET = _5;
Goto(bb3)
}
bb3 = {
_13 = [16461_u16,11052_u16,21913_u16,61543_u16,23972_u16,60553_u16,50034_u16,18468_u16];
_8 = 3000047165_u32;
_5 = 6749560671558328053_i64 as isize;
_6 = [18242_u16,46360_u16,55053_u16,4864_u16,33083_u16,52460_u16,37176_u16,30953_u16];
_1 = 5192825602538473589_u64;
_11 = [6_u8,128_u8,182_u8];
RET = !_5;
_11 = [108_u8,237_u8,242_u8];
match _8 {
0 => bb2,
1 => bb4,
3000047165 => bb6,
_ => bb5
}
}
bb4 = {
_3 = -2048487765_i32;
_2 = '\u{4b98d}';
_8 = 62_u8 as u32;
_8 = 2393582716_u32;
_5 = RET;
_1 = 15778090925326223317_u64 & 14603654775483493436_u64;
_3 = false as i32;
RET = -_5;
RET = _5 << _5;
RET = _5;
_5 = !RET;
RET = 21277938697693303952038168683228423841_u128 as isize;
_6 = [51691_u16,50169_u16,33633_u16,33966_u16,19067_u16,45448_u16,56549_u16,31851_u16];
_6 = [25476_u16,6166_u16,60111_u16,49679_u16,50449_u16,20396_u16,55302_u16,19527_u16];
_11 = [66_u8,189_u8,91_u8];
_6 = [7281_u16,9443_u16,22001_u16,24960_u16,28626_u16,41374_u16,25827_u16,64396_u16];
RET = _5 >> _5;
_1 = (-32526_i16) as u64;
_5 = RET + RET;
_11 = [127_u8,48_u8,117_u8];
RET = _5;
_11 = [69_u8,241_u8,154_u8];
_4 = 111516291693512257741953839154102412138_i128 + 60849375290905818382303514300341685241_i128;
_8 = 530694093_u32;
_1 = 4228674414487921613_u64;
RET = _5;
Goto(bb3)
}
bb5 = {
RET = 9223372036854775807_isize << _3;
_5 = RET;
_4 = 53259899908648197631994269067790599931_i128 - 49823226125362872342885991197407414827_i128;
_1 = 13476272112229072995_u64 >> _5;
_1 = !16334531961540231732_u64;
_5 = RET;
_1 = 2355952655164172449_u64;
_5 = !RET;
_1 = 9113725443801421537_u64;
_4 = 118_u8 as i128;
_1 = 18269245017019606231_u64;
_8 = true as u32;
RET = _5 >> _8;
_3 = (-816171532_i32) * (-1292158821_i32);
_2 = '\u{b5a76}';
_8 = 112553483869200392524544530182153849999_u128 as u32;
_8 = _3 as u32;
_6 = [2989_u16,34518_u16,38983_u16,6998_u16,2968_u16,108_u16,18302_u16,6750_u16];
RET = _5;
Call(_1 = fn2(_3, _6, _5, _3, _6, _4, RET, _3, RET, _6, RET), bb2, UnwindUnreachable())
}
bb6 = {
_6 = [36942_u16,59789_u16,5822_u16,4692_u16,4936_u16,14158_u16,46432_u16,19404_u16];
_15 = [22781_u16,32522_u16,20861_u16,27186_u16,10672_u16,24572_u16,59610_u16,15436_u16];
_2 = '\u{10b56a}';
RET = _8 as isize;
_15 = [65373_u16,28159_u16,36751_u16,30643_u16,52780_u16,7917_u16,139_u16,24001_u16];
RET = _5;
_14 = true;
_12 = _2;
_16 = [11451_u16,59825_u16,57924_u16,36812_u16];
RET = _5;
_5 = 200464599423683037801756421131881888975_u128 as isize;
_15 = [59455_u16,16183_u16,50466_u16,52231_u16,55954_u16,17299_u16,42551_u16,57946_u16];
_2 = _12;
_11 = [162_u8,212_u8,168_u8];
RET = _5;
_6 = _15;
_6 = [47523_u16,61584_u16,38050_u16,18814_u16,47795_u16,43935_u16,61330_u16,16041_u16];
_13 = _15;
_16 = [27124_u16,32759_u16,50139_u16,11458_u16];
_16 = [55701_u16,27271_u16,54916_u16,21814_u16];
_21.3 = [_3,_3,_3,_3,_3,_3,_3];
_21.2 = !_4;
Goto(bb7)
}
bb7 = {
_8 = 3686460282_u32;
_23.fld0.1 = !142_u8;
_17 = [57542_u16,42183_u16,40569_u16,62402_u16];
_20 = [51814_u16,25028_u16,15836_u16,32983_u16,39948_u16,51227_u16,60280_u16,57412_u16];
_23.fld0.0 = (_1, 32_i8, (-32340_i16));
_23.fld0.0.1 = (-85_i8);
RET = _5 - _5;
_17 = [56822_u16,63706_u16,10277_u16,26375_u16];
_22 = (-1028199224752754309_i64) ^ (-5718380280270624287_i64);
_23.fld0.0 = (_1, (-126_i8), 23715_i16);
_21.1 = _14;
_23.fld0.0.1 = -(-89_i8);
_4 = _2 as i128;
_23.fld1.1 = 36525_u16 as i8;
_23.fld0.0.2 = 38405_u16 as i16;
_11 = [_23.fld0.1,_23.fld0.1,_23.fld0.1];
_19 = _23.fld0.0.2 << _23.fld1.1;
RET = 16242399332465579502_usize as isize;
RET = _5 ^ _5;
_3 = 27431_u16 as i32;
_23.fld1.2 = !_23.fld0.0.2;
_13 = _20;
match _1 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
5192825602538473589 => bb8,
_ => bb5
}
}
bb8 = {
_23.fld1 = _23.fld0.0;
_24 = _8 as f64;
_11 = [_23.fld0.1,_23.fld0.1,_23.fld0.1];
_31 = [_8,_8,_8];
Goto(bb9)
}
bb9 = {
_21.0 = [_23.fld1.0,_1,_1,_23.fld0.0.0,_23.fld0.0.0,_1];
_25 = _21.2 as f32;
_21.3 = [_3,_3,_3,_3,_3,_3,_3];
_17 = [19935_u16,42305_u16,32780_u16,7582_u16];
_23.fld1.2 = _23.fld0.0.1 as i16;
_1 = _23.fld0.0.0;
_21.2 = -_4;
_8 = 280886126_u32;
_18 = RET ^ _5;
_22 = 5316351750213065841_i64;
_21.2 = _22 as i128;
_5 = _18 >> _21.2;
_6 = [17210_u16,28332_u16,47569_u16,25158_u16,14931_u16,26185_u16,7643_u16,31101_u16];
_24 = _1 as f64;
_30 = core::ptr::addr_of_mut!(_31);
_22 = 8592738434584929249_i64;
_17 = _16;
_24 = RET as f64;
_28 = 64567_u16 >> _5;
_21.2 = _4 ^ _4;
_21.3 = [_3,_3,_3,_3,_3,_3,_3];
_21.3 = [_3,_3,_3,_3,_3,_3,_3];
_23.fld1.2 = 4_usize as i16;
_35.1 = _4 > _21.2;
_20 = [_28,_28,_28,_28,_28,_28,_28,_28];
_23.fld0.0.0 = !_23.fld1.0;
_3 = (-177853860_i32) & 851204709_i32;
_23.fld0.0.0 = _23.fld1.0;
match _22 {
0 => bb7,
1 => bb10,
2 => bb11,
3 => bb12,
8592738434584929249 => bb14,
_ => bb13
}
}
bb10 = {
_23.fld1 = _23.fld0.0;
_24 = _8 as f64;
_11 = [_23.fld0.1,_23.fld0.1,_23.fld0.1];
_31 = [_8,_8,_8];
Goto(bb9)
}
bb11 = {
_13 = [16461_u16,11052_u16,21913_u16,61543_u16,23972_u16,60553_u16,50034_u16,18468_u16];
_8 = 3000047165_u32;
_5 = 6749560671558328053_i64 as isize;
_6 = [18242_u16,46360_u16,55053_u16,4864_u16,33083_u16,52460_u16,37176_u16,30953_u16];
_1 = 5192825602538473589_u64;
_11 = [6_u8,128_u8,182_u8];
RET = !_5;
_11 = [108_u8,237_u8,242_u8];
match _8 {
0 => bb2,
1 => bb4,
3000047165 => bb6,
_ => bb5
}
}
bb12 = {
_6 = [36942_u16,59789_u16,5822_u16,4692_u16,4936_u16,14158_u16,46432_u16,19404_u16];
_15 = [22781_u16,32522_u16,20861_u16,27186_u16,10672_u16,24572_u16,59610_u16,15436_u16];
_2 = '\u{10b56a}';
RET = _8 as isize;
_15 = [65373_u16,28159_u16,36751_u16,30643_u16,52780_u16,7917_u16,139_u16,24001_u16];
RET = _5;
_14 = true;
_12 = _2;
_16 = [11451_u16,59825_u16,57924_u16,36812_u16];
RET = _5;
_5 = 200464599423683037801756421131881888975_u128 as isize;
_15 = [59455_u16,16183_u16,50466_u16,52231_u16,55954_u16,17299_u16,42551_u16,57946_u16];
_2 = _12;
_11 = [162_u8,212_u8,168_u8];
RET = _5;
_6 = _15;
_6 = [47523_u16,61584_u16,38050_u16,18814_u16,47795_u16,43935_u16,61330_u16,16041_u16];
_13 = _15;
_16 = [27124_u16,32759_u16,50139_u16,11458_u16];
_16 = [55701_u16,27271_u16,54916_u16,21814_u16];
_21.3 = [_3,_3,_3,_3,_3,_3,_3];
_21.2 = !_4;
Goto(bb7)
}
bb13 = {
_3 = -2048487765_i32;
_2 = '\u{4b98d}';
_8 = 62_u8 as u32;
_8 = 2393582716_u32;
_5 = RET;
_1 = 15778090925326223317_u64 & 14603654775483493436_u64;
_3 = false as i32;
RET = -_5;
RET = _5 << _5;
RET = _5;
_5 = !RET;
RET = 21277938697693303952038168683228423841_u128 as isize;
_6 = [51691_u16,50169_u16,33633_u16,33966_u16,19067_u16,45448_u16,56549_u16,31851_u16];
_6 = [25476_u16,6166_u16,60111_u16,49679_u16,50449_u16,20396_u16,55302_u16,19527_u16];
_11 = [66_u8,189_u8,91_u8];
_6 = [7281_u16,9443_u16,22001_u16,24960_u16,28626_u16,41374_u16,25827_u16,64396_u16];
RET = _5 >> _5;
_1 = (-32526_i16) as u64;
_5 = RET + RET;
_11 = [127_u8,48_u8,117_u8];
RET = _5;
_11 = [69_u8,241_u8,154_u8];
_4 = 111516291693512257741953839154102412138_i128 + 60849375290905818382303514300341685241_i128;
_8 = 530694093_u32;
_1 = 4228674414487921613_u64;
RET = _5;
Goto(bb3)
}
bb14 = {
_33 = _24;
_28 = _21.2 as u16;
_23.fld0.0.2 = _23.fld1.2;
_23.fld0.0.0 = _23.fld1.0;
_35 = (_21.0, _21.1, _21.2, _21.3);
_6 = [_28,_28,_28,_28,_28,_28,_28,_28];
_16 = [_28,_28,_28,_28];
_23.fld1.1 = _23.fld0.0.1 - _23.fld0.0.1;
_31 = [_8,_8,_8];
_16 = [_28,_28,_28,_28];
_11 = [_23.fld0.1,_23.fld0.1,_23.fld0.1];
_23.fld1 = (_1, _23.fld0.0.1, _23.fld0.0.2);
_33 = _24;
_14 = !_35.1;
_31 = [_8,_8,_8];
_33 = _24 - _24;
_21.2 = _19 as i128;
(*_30) = [_8,_8,_8];
_11 = [_23.fld0.1,_23.fld0.1,_23.fld0.1];
_3 = (-159543048_i32) ^ (-1167694234_i32);
_35.2 = _21.2 | _21.2;
(*_30) = [_8,_8,_8];
_39 = RET as i32;
_21.1 = _14 & _14;
_28 = _1 as u16;
_23.fld0.0.1 = _23.fld1.1;
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(0_usize, 16_usize, Move(_16), 1_usize, Move(_1), 31_usize, Move(_31), 3_usize, Move(_3)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(0_usize, 2_usize, Move(_2), 21_usize, Move(_21), 20_usize, Move(_20), 19_usize, Move(_19)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(0_usize, 6_usize, Move(_6), 5_usize, Move(_5), 18_usize, Move(_18), 44_usize, _44), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i32,mut _2: i32,mut _3: i32,mut _4: i32,mut _5: i32,mut _6: i32,mut _7: i32,mut _8: i32,mut _9: i32,mut _10: i32,mut _11: i32) -> char {
mir! {
type RET = char;
let _12: u32;
let _13: Adt53;
let _14: i64;
let _15: Adt59;
let _16: [u16; 4];
let _17: (f32,);
let _18: isize;
let _19: Adt64;
let _20: i32;
let _21: (u64, i8, i16);
let _22: Adt56;
let _23: isize;
let _24: f32;
let _25: bool;
let _26: u64;
let _27: char;
let _28: ();
let _29: ();
{
_8 = -_11;
_12 = 3157755290_u32;
_3 = _1;
_7 = 227552298359081743228231795977203181377_u128 as i32;
_7 = _4 ^ _9;
_8 = _10;
_14 = 7687968080570787040_i64 << _10;
_8 = _1 & _5;
_6 = _12 as i32;
_12 = 247513785_u32;
RET = '\u{4f1f2}';
_11 = 166415425245703725768120894394059293454_u128 as i32;
_14 = 9223372036854775807_isize as i64;
_11 = !_10;
_14 = -4158775454935701297_i64;
Goto(bb1)
}
bb1 = {
_10 = -_6;
_3 = _7 << _6;
_8 = -_10;
_16 = [61017_u16,2277_u16,22387_u16,43426_u16];
RET = '\u{9f6af}';
_7 = _8 | _10;
_20 = -_4;
_10 = _7;
_14 = 7213597050128799068_i64 - 2608023760510331155_i64;
_4 = 6391638063322659849072158601104878038_u128 as i32;
_21.1 = (-31_i8);
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
247513785 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = _14 as i32;
_12 = 3168303604_u32;
RET = '\u{3a721}';
match _21.1 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb11,
340282366920938463463374607431768211425 => bb13,
_ => bb12
}
}
bb11 = {
_10 = -_6;
_3 = _7 << _6;
_8 = -_10;
_16 = [61017_u16,2277_u16,22387_u16,43426_u16];
RET = '\u{9f6af}';
_7 = _8 | _10;
_20 = -_4;
_10 = _7;
_14 = 7213597050128799068_i64 - 2608023760510331155_i64;
_4 = 6391638063322659849072158601104878038_u128 as i32;
_21.1 = (-31_i8);
match _12 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
247513785 => bb10,
_ => bb9
}
}
bb12 = {
Return()
}
bb13 = {
_20 = _8;
RET = '\u{f86e2}';
_9 = !_5;
_16 = [3104_u16,53518_u16,33802_u16,18041_u16];
_21.2 = (-14097_i16);
_8 = _6 | _2;
_22 = Adt56::Variant1 { fld0: 31323512841009093416440625957870410382_u128 };
_1 = -_5;
_8 = _4;
_21 = (9696354567569106846_u64, (-49_i8), (-12707_i16));
RET = '\u{f4b01}';
_21.0 = 4004416974132195633_u64 >> _21.2;
_17.0 = 16856_u16 as f32;
_22 = Adt56::Variant1 { fld0: 49743768340887701366635978692175454070_u128 };
Goto(bb14)
}
bb14 = {
_21 = (5988335646900075105_u64, (-41_i8), (-22823_i16));
_1 = !_3;
_22 = Adt56::Variant1 { fld0: 175413792288750987232374223764555658126_u128 };
_14 = _3 as i64;
_18 = !(-35_isize);
place!(Field::<u128>(Variant(_22, 1), 0)) = 88715185627463854240068916912052896251_u128;
_13 = Adt53::Variant1 { fld0: false,fld1: 55566_u16,fld2: _17,fld3: (-41555160273175579480598797701061902535_i128),fld4: _21.2 };
place!(Field::<(f32,)>(Variant(_13, 1), 2)) = _17;
_7 = 30452_u16 as i32;
_23 = _18 << _9;
place!(Field::<bool>(Variant(_13, 1), 0)) = !true;
_14 = 16120_u16 as i64;
_23 = _18 * _18;
place!(Field::<(f32,)>(Variant(_13, 1), 2)).0 = _17.0 + _17.0;
place!(Field::<i128>(Variant(_13, 1), 3)) = 104293037841388508450302637453272579853_i128;
_20 = _2;
_25 = !Field::<bool>(Variant(_13, 1), 0);
place!(Field::<u128>(Variant(_22, 1), 0)) = 130360266893521727520992469652652769763_u128;
_26 = !_21.0;
_21.1 = !103_i8;
_14 = _23 as i64;
place!(Field::<(f32,)>(Variant(_13, 1), 2)) = (_17.0,);
_23 = _18 + _18;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(1_usize, 16_usize, Move(_16), 25_usize, Move(_25), 12_usize, Move(_12), 8_usize, Move(_8)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(1_usize, 7_usize, Move(_7), 23_usize, Move(_23), 26_usize, Move(_26), 5_usize, Move(_5)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(1_usize, 3_usize, Move(_3), 4_usize, Move(_4), 29_usize, _29, 29_usize, _29), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: i32,mut _2: [u16; 8],mut _3: isize,mut _4: i32,mut _5: [u16; 8],mut _6: i128,mut _7: isize,mut _8: i32,mut _9: isize,mut _10: [u16; 8],mut _11: isize) -> u64 {
mir! {
type RET = u64;
let _12: i32;
let _13: u32;
let _14: Adt50;
let _15: [i8; 1];
let _16: [i32; 3];
let _17: *const [i8; 1];
let _18: [u64; 6];
let _19: i16;
let _20: usize;
let _21: ([i64; 2], f64, u8);
let _22: i64;
let _23: [u32; 4];
let _24: f32;
let _25: Adt53;
let _26: i32;
let _27: (u8,);
let _28: i128;
let _29: [i64; 2];
let _30: Adt58;
let _31: isize;
let _32: ();
let _33: ();
{
_5 = _2;
_5 = [27250_u16,40808_u16,8646_u16,31691_u16,42787_u16,25376_u16,13_u16,1978_u16];
_10 = _5;
_8 = _4 | _4;
RET = 105738920306584026849918381967198377891_u128 as u64;
_13 = 3499939015_u32 >> _8;
RET = 6475811339826616115_u64;
_8 = _4 | _4;
_14.fld0.1 = [36_u8,213_u8,50_u8];
_9 = false as isize;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
6475811339826616115 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_10 = [17611_u16,47536_u16,57598_u16,9352_u16,61482_u16,25169_u16,52882_u16,41097_u16];
_14.fld1 = 210_u8 as i8;
RET = !7421065508545685727_u64;
_14.fld0.1 = [39_u8,164_u8,99_u8];
RET = 4697866146455095812_u64;
_14.fld0.0.0 = [(-3882846594279624100_i64),(-1860002298605139533_i64)];
_14.fld0.0.2 = 94_u8 >> _13;
_9 = !_7;
_6 = 261509481548411136991090422792496903588_u128 as i128;
_12 = _13 as i32;
_11 = _7;
RET = !17958852544824081275_u64;
RET = !6178270181222152767_u64;
_3 = !_11;
_4 = 1972524711083582452_i64 as i32;
_16 = [_12,_1,_12];
_13 = 1028292353_u32;
RET = '\u{c8ebf}' as u64;
_11 = _9;
_12 = _1;
_3 = _7 ^ _11;
_15 = [_14.fld1];
_6 = !102769283713338554098326931625079901988_i128;
_14.fld0.0.1 = 20940_i16 as f64;
_11 = _3;
_15 = [_14.fld1];
_8 = _4;
_2 = _5;
_9 = _7 | _3;
match _13 {
0 => bb1,
1 => bb4,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
1028292353 => bb12,
_ => bb11
}
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_16 = [_4,_12,_1];
_16 = [_1,_12,_1];
_13 = _12 as u32;
_14.fld0.0.0 = [1681597541712461332_i64,3316348118594041471_i64];
_14.fld0.1 = [_14.fld0.0.2,_14.fld0.0.2,_14.fld0.0.2];
RET = !9550296625398882422_u64;
_14.fld0.0.2 = _1 as u8;
_15 = [_14.fld1];
_19 = !11443_i16;
_21.2 = _14.fld0.0.2;
_17 = core::ptr::addr_of!(_15);
_6 = !14926354540850080137779490306341527060_i128;
_14.fld0.0.2 = _21.2;
_13 = !443863283_u32;
_2 = _5;
_4 = _12 ^ _12;
_22 = -178172152945302419_i64;
_22 = _6 as i64;
Call(_1 = fn3(_2, _9, _11), bb13, UnwindUnreachable())
}
bb13 = {
_5 = _10;
_21.1 = _14.fld0.0.1 * _14.fld0.0.1;
_16 = [_4,_4,_4];
(*_17) = [_14.fld1];
_21.0 = [_22,_22];
_24 = _11 as f32;
_13 = 2679419153_u32;
RET = !5159508597158497677_u64;
RET = 16549140686728063588_u64 * 1429260678279097776_u64;
(*_17) = [_14.fld1];
_3 = _9 + _9;
_14.fld0.1 = [_21.2,_14.fld0.0.2,_14.fld0.0.2];
_23 = [_13,_13,_13,_13];
_14.fld0.0.1 = _21.1 - _21.1;
_21 = _14.fld0.0;
_24 = _13 as f32;
_21.2 = _14.fld0.0.2;
_16 = [_12,_1,_4];
_4 = !_12;
_21.1 = _14.fld0.0.1;
_9 = _3 * _3;
_26 = _12;
_13 = 4258170583_u32;
match _13 {
0 => bb11,
1 => bb4,
2 => bb14,
3 => bb15,
4258170583 => bb17,
_ => bb16
}
}
bb14 = {
_16 = [_4,_12,_1];
_16 = [_1,_12,_1];
_13 = _12 as u32;
_14.fld0.0.0 = [1681597541712461332_i64,3316348118594041471_i64];
_14.fld0.1 = [_14.fld0.0.2,_14.fld0.0.2,_14.fld0.0.2];
RET = !9550296625398882422_u64;
_14.fld0.0.2 = _1 as u8;
_15 = [_14.fld1];
_19 = !11443_i16;
_21.2 = _14.fld0.0.2;
_17 = core::ptr::addr_of!(_15);
_6 = !14926354540850080137779490306341527060_i128;
_14.fld0.0.2 = _21.2;
_13 = !443863283_u32;
_2 = _5;
_4 = _12 ^ _12;
_22 = -178172152945302419_i64;
_22 = _6 as i64;
Call(_1 = fn3(_2, _9, _11), bb13, UnwindUnreachable())
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_29 = _21.0;
_14.fld0.0.0 = [_22,_22];
_21.1 = _14.fld0.0.1;
_23 = [_13,_13,_13,_13];
_10 = [53136_u16,21906_u16,13636_u16,36417_u16,6122_u16,53052_u16,49582_u16,17244_u16];
_17 = core::ptr::addr_of!((*_17));
_14.fld0.1 = [_21.2,_21.2,_21.2];
_26 = -_12;
_31 = _11;
_11 = -_9;
_6 = -743848198770265916326788854658896475_i128;
_31 = !_11;
_7 = -_31;
_8 = -_26;
_27.0 = _13 as u8;
_19 = _21.2 as i16;
_19 = _24 as i16;
_4 = _26;
_5 = _10;
_6 = 36921215024260375611932837723472854010_i128;
Goto(bb18)
}
bb18 = {
Call(_32 = dump_var(2_usize, 7_usize, Move(_7), 3_usize, Move(_3), 6_usize, Move(_6), 10_usize, Move(_10)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_32 = dump_var(2_usize, 19_usize, Move(_19), 4_usize, Move(_4), 11_usize, Move(_11), 15_usize, Move(_15)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_32 = dump_var(2_usize, 22_usize, Move(_22), 13_usize, Move(_13), 9_usize, Move(_9), 33_usize, _33), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [u16; 8],mut _2: isize,mut _3: isize) -> i32 {
mir! {
type RET = i32;
let _4: *mut [u32; 3];
let _5: Adt53;
let _6: usize;
let _7: char;
let _8: f32;
let _9: f32;
let _10: u16;
let _11: Adt63;
let _12: [i128; 8];
let _13: i16;
let _14: i16;
let _15: (([i64; 2], f64, u8), [u8; 3]);
let _16: [u64; 4];
let _17: ();
let _18: ();
{
RET = -163236389_i32;
RET = !170468841_i32;
_1 = [22941_u16,29513_u16,34431_u16,63590_u16,18698_u16,713_u16,64488_u16,39800_u16];
_2 = '\u{f397e}' as isize;
_3 = _2 ^ _2;
RET = 852242263_i32;
_1 = [33573_u16,52506_u16,41432_u16,17323_u16,15833_u16,52263_u16,13534_u16,48618_u16];
_6 = 5_usize + 6_usize;
RET = 754334713_i32;
RET = 950167218_i32 | (-1344840668_i32);
_6 = 13682760250461879347_usize & 1_usize;
RET = (-1892732172_i32) << _3;
_3 = _2 & _2;
_6 = !2_usize;
_7 = '\u{f2892}';
_1 = [23836_u16,43759_u16,48370_u16,3321_u16,44058_u16,13644_u16,12989_u16,27917_u16];
_8 = 74_i8 as f32;
Goto(bb1)
}
bb1 = {
_1 = [3627_u16,20292_u16,23698_u16,28698_u16,38889_u16,30100_u16,28365_u16,62179_u16];
_12 = [55962769708291039920512562470159453869_i128,123148092633237991871073829437128865427_i128,(-122936843689117387680045470425289388953_i128),65684349175078405855048950521602566949_i128,147320913222692827584762394556535505808_i128,(-117814192323972264078639870622987870126_i128),(-83464316261967685377504762556750499025_i128),(-8816269745884346542050766109096774501_i128)];
_7 = '\u{349f5}';
_6 = 0_usize;
RET = -(-1712266705_i32);
_10 = _1[_6] + _1[_6];
_9 = _8;
RET = 6888399209172815682_i64 as i32;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_13 = -9969_i16;
_10 = 9_i8 as u16;
_7 = '\u{aef90}';
_2 = -_3;
_8 = -_9;
_12 = [(-39220380129240159542384768928109612982_i128),(-41855300351529066460534767477046537664_i128),134596467610925566152236372835513956134_i128,(-24617679929589488382021855821607015150_i128),128905860149691471222303602801731727237_i128,112342057109168490761408386177193996163_i128,35240454473643429869226385000360938516_i128,(-93251354203395009122347159398788150024_i128)];
_2 = _8 as isize;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_14 = _13;
_1[_6] = _10;
_15.0.0 = [(-689240863106694380_i64),(-9147236230506429673_i64)];
_1[_6] = _10 >> _14;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_15.0.0[_6] = 5763077486812593847_i64;
_12 = [(-110410359870055059804540847962951182165_i128),(-40617025768143658335887371244570360708_i128),(-107151252286653573617593695887686117520_i128),6705447711927164879594648722656714548_i128,(-29567392688213043413967190640652196340_i128),(-34145295126084691041877214218086226216_i128),7365459488999966018579636282560654581_i128,74096433482881304040167531252755572322_i128];
match _12[_6] {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
229872007050883403658833759468817029291 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8 = _9;
_15.0.0 = [(-8647165485254285303_i64),(-6687979552088073394_i64)];
RET = (-1234339253_i32);
Call(_10 = fn4(_12[_6], _15.0.0, _12[_6], _12[_6], _3, _12, _15.0.0[_6], _12), bb11, UnwindUnreachable())
}
bb11 = {
_15.1 = [85_u8,192_u8,249_u8];
match _6 {
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb12,
5 => bb13,
6 => bb14,
0 => bb16,
_ => bb15
}
}
bb12 = {
_1 = [3627_u16,20292_u16,23698_u16,28698_u16,38889_u16,30100_u16,28365_u16,62179_u16];
_12 = [55962769708291039920512562470159453869_i128,123148092633237991871073829437128865427_i128,(-122936843689117387680045470425289388953_i128),65684349175078405855048950521602566949_i128,147320913222692827584762394556535505808_i128,(-117814192323972264078639870622987870126_i128),(-83464316261967685377504762556750499025_i128),(-8816269745884346542050766109096774501_i128)];
_7 = '\u{349f5}';
_6 = 0_usize;
RET = -(-1712266705_i32);
_10 = _1[_6] + _1[_6];
_9 = _8;
RET = 6888399209172815682_i64 as i32;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_13 = -9969_i16;
_10 = 9_i8 as u16;
_7 = '\u{aef90}';
_2 = -_3;
_8 = -_9;
_12 = [(-39220380129240159542384768928109612982_i128),(-41855300351529066460534767477046537664_i128),134596467610925566152236372835513956134_i128,(-24617679929589488382021855821607015150_i128),128905860149691471222303602801731727237_i128,112342057109168490761408386177193996163_i128,35240454473643429869226385000360938516_i128,(-93251354203395009122347159398788150024_i128)];
_2 = _8 as isize;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_14 = _13;
_1[_6] = _10;
_15.0.0 = [(-689240863106694380_i64),(-9147236230506429673_i64)];
_1[_6] = _10 >> _14;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_15.0.0[_6] = 5763077486812593847_i64;
_12 = [(-110410359870055059804540847962951182165_i128),(-40617025768143658335887371244570360708_i128),(-107151252286653573617593695887686117520_i128),6705447711927164879594648722656714548_i128,(-29567392688213043413967190640652196340_i128),(-34145295126084691041877214218086226216_i128),7365459488999966018579636282560654581_i128,74096433482881304040167531252755572322_i128];
match _12[_6] {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
229872007050883403658833759468817029291 => bb10,
_ => bb9
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_16 = [4858184839261482796_u64,7417189724846487969_u64,15526522034752395841_u64,5467868955970028284_u64];
_15.0.1 = 7030985582325759541_i64 as f64;
_3 = _2;
_16 = [15263087324694873073_u64,8053150083998011451_u64,5936696564804214039_u64,4375372360756767862_u64];
_6 = 5_usize >> _3;
_3 = !_2;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_15.0.1 = 157866957009457418114964920062311332152_i128 as f64;
_15.0.0 = [1386939690496076406_i64,(-8172482747038758212_i64)];
_15.0.2 = 143_u8;
_6 = 12465184039020725244_usize - 4_usize;
_15.1 = [_15.0.2,_15.0.2,_15.0.2];
_13 = _14 >> _6;
_12 = [(-54549020902380501768550158098039007945_i128),(-121972598782603030950188074995243412625_i128),25900790514988743201840547082060893533_i128,1585939681475273833519294576466241897_i128,115152321384664724432275695363225997591_i128,88637449345088253909625904213587809048_i128,139212778365565037748252981615720664032_i128,(-40894572059923052663593492860938969507_i128)];
_3 = _2 * _2;
_15.0.2 = _8 as u8;
_1 = [_10,_10,_10,_10,_10,_10,_10,_10];
_15.0.1 = _6 as f64;
_3 = 214882486791687740_u64 as isize;
_2 = _3 * _3;
_15.0.1 = 697595563104801150_u64 as f64;
Goto(bb17)
}
bb17 = {
Call(_17 = dump_var(3_usize, 14_usize, Move(_14), 7_usize, Move(_7), 6_usize, Move(_6), 10_usize, Move(_10)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_17 = dump_var(3_usize, 16_usize, Move(_16), 18_usize, _18, 18_usize, _18, 18_usize, _18), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: i128,mut _2: [i64; 2],mut _3: i128,mut _4: i128,mut _5: isize,mut _6: [i128; 8],mut _7: i64,mut _8: [i128; 8]) -> u16 {
mir! {
type RET = u16;
let _9: [i64; 2];
let _10: u128;
let _11: i128;
let _12: *mut [bool; 1];
let _13: isize;
let _14: [i128; 3];
let _15: [u16; 8];
let _16: isize;
let _17: isize;
let _18: [u64; 4];
let _19: Adt51;
let _20: Adt64;
let _21: f64;
let _22: f32;
let _23: i64;
let _24: char;
let _25: ([u64; 6], bool, i128, [i32; 7]);
let _26: [usize; 2];
let _27: ([u64; 6], bool, i128, [i32; 7]);
let _28: u16;
let _29: [u64; 4];
let _30: Adt64;
let _31: f32;
let _32: ();
let _33: ();
{
_7 = 3201171195998163179_i64 << _3;
_2 = [_7,_7];
RET = !61572_u16;
_6 = _8;
RET = 49834_u16 & 2292_u16;
Goto(bb1)
}
bb1 = {
_5 = (-55_i8) as isize;
_9 = [_7,_7];
_1 = 1274205718_i32 as i128;
_7 = -(-3782995089054442976_i64);
_10 = 118629365072460117575458936009474182591_u128;
_6 = [_4,_4,_4,_1,_3,_1,_1,_3];
RET = !9305_u16;
_7 = 153_u8 as i64;
_5 = (-69_isize);
_7 = -(-3438040505198194870_i64);
_8 = [_4,_1,_4,_3,_3,_4,_4,_3];
_10 = 187290017310085787584089622604980368432_u128 + 231030626128343934530470675083986825147_u128;
Call(_11 = fn5(_4, _5, _6, _2, _8, _2, _3, _9), bb2, UnwindUnreachable())
}
bb2 = {
_10 = 3310192217_u32 as u128;
_2 = [_7,_7];
_4 = 13833426310750563977_u64 as i128;
_13 = _5;
_4 = _5 as i128;
RET = 47471_u16;
_13 = _5 >> _11;
_4 = !_3;
_3 = (-8_i8) as i128;
_7 = -4957826709858919139_i64;
Call(_12 = fn6(_8, _11, _13, _13, _13, _1, _1, _1, _11, _9), bb3, UnwindUnreachable())
}
bb3 = {
_9 = [_7,_7];
_3 = _11;
_5 = _13;
_7 = (-8016859469231136682_i64);
_11 = _3;
_15 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 36929_u16 | 61942_u16;
_5 = !_13;
_7 = (-685212030355619897_i64) | (-3228543401966646202_i64);
_6 = _8;
RET = 47542_u16;
_16 = _13;
match RET {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
47542 => bb11,
_ => bb10
}
}
bb4 = {
_10 = 3310192217_u32 as u128;
_2 = [_7,_7];
_4 = 13833426310750563977_u64 as i128;
_13 = _5;
_4 = _5 as i128;
RET = 47471_u16;
_13 = _5 >> _11;
_4 = !_3;
_3 = (-8_i8) as i128;
_7 = -4957826709858919139_i64;
Call(_12 = fn6(_8, _11, _13, _13, _13, _1, _1, _1, _11, _9), bb3, UnwindUnreachable())
}
bb5 = {
_5 = (-55_i8) as isize;
_9 = [_7,_7];
_1 = 1274205718_i32 as i128;
_7 = -(-3782995089054442976_i64);
_10 = 118629365072460117575458936009474182591_u128;
_6 = [_4,_4,_4,_1,_3,_1,_1,_3];
RET = !9305_u16;
_7 = 153_u8 as i64;
_5 = (-69_isize);
_7 = -(-3438040505198194870_i64);
_8 = [_4,_1,_4,_3,_3,_4,_4,_3];
_10 = 187290017310085787584089622604980368432_u128 + 231030626128343934530470675083986825147_u128;
Call(_11 = fn5(_4, _5, _6, _2, _8, _2, _3, _9), bb2, UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_18 = [7513715417536121024_u64,3316075664308591221_u64,17094661043571126190_u64,753611421263468562_u64];
_14 = [_4,_11,_4];
_7 = 4758227307724629285_i64 << _13;
_17 = 8492192051252106109_usize as isize;
_5 = true as isize;
_18 = [5942701835298140168_u64,13326296227011687548_u64,9844339688684444444_u64,5283030680686314029_u64];
_14 = [_11,_11,_11];
_21 = 0_usize as f64;
_4 = _3;
_3 = -_4;
_7 = (-1066326386334242032_i64) ^ (-9036527277135277427_i64);
_3 = _11;
RET = _10 as u16;
_13 = '\u{92ea7}' as isize;
_15 = [RET,RET,RET,RET,RET,RET,RET,RET];
_15 = [RET,RET,RET,RET,RET,RET,RET,RET];
_10 = 229683334823910760584941162039351204693_u128;
_14 = [_11,_3,_3];
_11 = _7 as i128;
_16 = _17 + _5;
_22 = 1360802656_i32 as f32;
_9 = _2;
_14 = [_3,_3,_3];
_2 = [_7,_7];
_9 = _2;
_22 = 26_u8 as f32;
Goto(bb12)
}
bb12 = {
_5 = _16 - _16;
_7 = (-2360597655846844296_i64);
_3 = _4;
_22 = 3228630220_u32 as f32;
match _7 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb9,
5 => bb6,
6 => bb7,
340282366920938463461014009775921367160 => bb13,
_ => bb10
}
}
bb13 = {
RET = 7640_u16 << _13;
_17 = _16 ^ _5;
RET = _7 as u16;
_2 = [_7,_7];
_23 = _7;
_3 = -_4;
_21 = _4 as f64;
_21 = _3 as f64;
_2 = _9;
_8 = _6;
_6 = [_4,_3,_3,_3,_4,_3,_4,_3];
_9 = [_23,_7];
_25.1 = false;
_25.2 = _3 + _4;
_25.0 = [8876543388567863546_u64,9303533162037477520_u64,13370691345956041193_u64,14563554140696609344_u64,14539592143558541935_u64,8265213770347669754_u64];
_24 = '\u{10a2b9}';
_25.1 = !true;
_28 = 3_usize as u16;
_26 = [4_usize,4_usize];
_25.3 = [(-919727764_i32),(-1171678617_i32),(-1245207078_i32),1861533608_i32,15312177_i32,(-1600205291_i32),(-1017075182_i32)];
_27 = (_25.0, _25.1, _4, _25.3);
_27.3 = [1567241378_i32,(-1147104190_i32),1523139903_i32,772399410_i32,(-1629929013_i32),1200012685_i32,(-1844467560_i32)];
_23 = _7 * _7;
_24 = '\u{7c5f8}';
match _10 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
6 => bb20,
229683334823910760584941162039351204693 => bb22,
_ => bb21
}
}
bb14 = {
_5 = (-55_i8) as isize;
_9 = [_7,_7];
_1 = 1274205718_i32 as i128;
_7 = -(-3782995089054442976_i64);
_10 = 118629365072460117575458936009474182591_u128;
_6 = [_4,_4,_4,_1,_3,_1,_1,_3];
RET = !9305_u16;
_7 = 153_u8 as i64;
_5 = (-69_isize);
_7 = -(-3438040505198194870_i64);
_8 = [_4,_1,_4,_3,_3,_4,_4,_3];
_10 = 187290017310085787584089622604980368432_u128 + 231030626128343934530470675083986825147_u128;
Call(_11 = fn5(_4, _5, _6, _2, _8, _2, _3, _9), bb2, UnwindUnreachable())
}
bb15 = {
_18 = [7513715417536121024_u64,3316075664308591221_u64,17094661043571126190_u64,753611421263468562_u64];
_14 = [_4,_11,_4];
_7 = 4758227307724629285_i64 << _13;
_17 = 8492192051252106109_usize as isize;
_5 = true as isize;
_18 = [5942701835298140168_u64,13326296227011687548_u64,9844339688684444444_u64,5283030680686314029_u64];
_14 = [_11,_11,_11];
_21 = 0_usize as f64;
_4 = _3;
_3 = -_4;
_7 = (-1066326386334242032_i64) ^ (-9036527277135277427_i64);
_3 = _11;
RET = _10 as u16;
_13 = '\u{92ea7}' as isize;
_15 = [RET,RET,RET,RET,RET,RET,RET,RET];
_15 = [RET,RET,RET,RET,RET,RET,RET,RET];
_10 = 229683334823910760584941162039351204693_u128;
_14 = [_11,_3,_3];
_11 = _7 as i128;
_16 = _17 + _5;
_22 = 1360802656_i32 as f32;
_9 = _2;
_14 = [_3,_3,_3];
_2 = [_7,_7];
_9 = _2;
_22 = 26_u8 as f32;
Goto(bb12)
}
bb16 = {
Return()
}
bb17 = {
_9 = [_7,_7];
_3 = _11;
_5 = _13;
_7 = (-8016859469231136682_i64);
_11 = _3;
_15 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 36929_u16 | 61942_u16;
_5 = !_13;
_7 = (-685212030355619897_i64) | (-3228543401966646202_i64);
_6 = _8;
RET = 47542_u16;
_16 = _13;
match RET {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
47542 => bb11,
_ => bb10
}
}
bb18 = {
Return()
}
bb19 = {
_10 = 3310192217_u32 as u128;
_2 = [_7,_7];
_4 = 13833426310750563977_u64 as i128;
_13 = _5;
_4 = _5 as i128;
RET = 47471_u16;
_13 = _5 >> _11;
_4 = !_3;
_3 = (-8_i8) as i128;
_7 = -4957826709858919139_i64;
Call(_12 = fn6(_8, _11, _13, _13, _13, _1, _1, _1, _11, _9), bb3, UnwindUnreachable())
}
bb20 = {
_10 = 3310192217_u32 as u128;
_2 = [_7,_7];
_4 = 13833426310750563977_u64 as i128;
_13 = _5;
_4 = _5 as i128;
RET = 47471_u16;
_13 = _5 >> _11;
_4 = !_3;
_3 = (-8_i8) as i128;
_7 = -4957826709858919139_i64;
Call(_12 = fn6(_8, _11, _13, _13, _13, _1, _1, _1, _11, _9), bb3, UnwindUnreachable())
}
bb21 = {
_5 = (-55_i8) as isize;
_9 = [_7,_7];
_1 = 1274205718_i32 as i128;
_7 = -(-3782995089054442976_i64);
_10 = 118629365072460117575458936009474182591_u128;
_6 = [_4,_4,_4,_1,_3,_1,_1,_3];
RET = !9305_u16;
_7 = 153_u8 as i64;
_5 = (-69_isize);
_7 = -(-3438040505198194870_i64);
_8 = [_4,_1,_4,_3,_3,_4,_4,_3];
_10 = 187290017310085787584089622604980368432_u128 + 231030626128343934530470675083986825147_u128;
Call(_11 = fn5(_4, _5, _6, _2, _8, _2, _3, _9), bb2, UnwindUnreachable())
}
bb22 = {
_25 = _27;
_1 = 936989237_i32 as i128;
_24 = '\u{c43ec}';
_10 = _23 as u128;
_2 = _9;
_11 = (-413213153_i32) as i128;
_13 = _5;
_27.1 = _25.1;
_5 = _13;
Goto(bb23)
}
bb23 = {
Call(_32 = dump_var(4_usize, 15_usize, Move(_15), 6_usize, Move(_6), 23_usize, Move(_23), 10_usize, Move(_10)), bb24, UnwindUnreachable())
}
bb24 = {
Call(_32 = dump_var(4_usize, 14_usize, Move(_14), 8_usize, Move(_8), 1_usize, Move(_1), 28_usize, Move(_28)), bb25, UnwindUnreachable())
}
bb25 = {
Call(_32 = dump_var(4_usize, 7_usize, Move(_7), 17_usize, Move(_17), 5_usize, Move(_5), 33_usize, _33), bb26, UnwindUnreachable())
}
bb26 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: i128,mut _2: isize,mut _3: [i128; 8],mut _4: [i64; 2],mut _5: [i128; 8],mut _6: [i64; 2],mut _7: i128,mut _8: [i64; 2]) -> i128 {
mir! {
type RET = i128;
let _9: u8;
let _10: u64;
let _11: ();
let _12: ();
{
RET = _7 & _1;
_8 = [(-3893251204539656780_i64),(-3484413513636508981_i64)];
_7 = !RET;
_4 = [(-3549397924349814772_i64),7863049575188801611_i64];
_6 = [4874788294100316014_i64,(-3220397594216233993_i64)];
_6 = [3310502707231598687_i64,8269444758124022192_i64];
_5 = _3;
_1 = '\u{66858}' as i128;
_5 = [_7,RET,_7,RET,_7,_7,_7,RET];
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(5_usize, 1_usize, Move(_1), 5_usize, Move(_5), 6_usize, Move(_6), 4_usize, Move(_4)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [i128; 8],mut _2: i128,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: i128,mut _7: i128,mut _8: i128,mut _9: i128,mut _10: [i64; 2]) -> *mut [bool; 1] {
mir! {
type RET = *mut [bool; 1];
let _11: usize;
let _12: u64;
let _13: f32;
let _14: Adt50;
let _15: (u8,);
let _16: Adt50;
let _17: bool;
let _18: isize;
let _19: Adt54;
let _20: Adt55;
let _21: Adt50;
let _22: Adt61;
let _23: [i128; 8];
let _24: Adt61;
let _25: u16;
let _26: usize;
let _27: f32;
let _28: Adt63;
let _29: *mut [i128; 3];
let _30: (([i64; 2], f64, u8), [u8; 3]);
let _31: char;
let _32: [i32; 8];
let _33: Adt50;
let _34: (u8,);
let _35: isize;
let _36: isize;
let _37: *const [i8; 1];
let _38: Adt59;
let _39: i128;
let _40: Adt65;
let _41: Adt60;
let _42: u8;
let _43: ([i32; 3], (u8,), u128, u32);
let _44: isize;
let _45: i16;
let _46: bool;
let _47: isize;
let _48: bool;
let _49: char;
let _50: (u8,);
let _51: *mut [u32; 3];
let _52: *mut (([i64; 2], f64, u8), [u8; 3]);
let _53: Adt63;
let _54: (u8,);
let _55: bool;
let _56: [bool; 1];
let _57: Adt59;
let _58: u16;
let _59: isize;
let _60: [u16; 4];
let _61: [i8; 1];
let _62: u128;
let _63: isize;
let _64: (u64, i8, i16);
let _65: char;
let _66: char;
let _67: ();
let _68: ();
{
_9 = -_2;
_10 = [2957320054911818121_i64,(-1127909813628936215_i64)];
_10 = [(-1684700331375786846_i64),(-1765961913656339198_i64)];
_6 = _9;
_7 = !_6;
_1 = [_7,_7,_8,_2,_7,_6,_7,_7];
_12 = !4184424569727888028_u64;
_6 = _7 - _2;
_8 = -_6;
_10 = [6813062272646794121_i64,4181211259007553140_i64];
_11 = !1_usize;
_13 = _4 as f32;
_6 = _2 & _2;
_14.fld0.0.0 = _10;
_14.fld1 = (-122_i8) + 68_i8;
_10 = _14.fld0.0.0;
_5 = (-1396201292_i32) as isize;
_9 = 38567_u16 as i128;
_3 = _4 >> _7;
Call(_10 = fn7(_7, _1, _6, _1, _3, _2, _8, _8), bb1, UnwindUnreachable())
}
bb1 = {
_14.fld0.0.1 = _13 as f64;
_14.fld0.0.2 = !237_u8;
_14.fld0.0.0 = [(-8464668400335755389_i64),(-2135546252048434797_i64)];
_15 = (_14.fld0.0.2,);
_15 = (_14.fld0.0.2,);
Goto(bb2)
}
bb2 = {
_7 = !_8;
_14.fld0.1 = [_14.fld0.0.2,_14.fld0.0.2,_15.0];
_8 = !_7;
_17 = true;
_15 = (_14.fld0.0.2,);
_14.fld0.0.2 = _15.0;
_8 = _7;
_12 = !15012833091108102602_u64;
_16.fld1 = 1729182142_i32 as i8;
_3 = _4;
_14.fld0.0.1 = 1050081897_i32 as f64;
_4 = _7 as isize;
_14.fld0.0.2 = _15.0;
_3 = 1345793055_u32 as isize;
Goto(bb3)
}
bb3 = {
_15 = (_14.fld0.0.2,);
_6 = _2;
_14.fld0.0.0 = [(-6207184046604272796_i64),(-3006227331460727330_i64)];
_14.fld0.1 = [_15.0,_15.0,_14.fld0.0.2];
_14.fld0.0.1 = 1989625939_u32 as f64;
_16.fld0 = (_14.fld0.0, _14.fld0.1);
_16.fld0.0.2 = _14.fld0.0.2;
_10 = [2474074065121671235_i64,4079670815857458322_i64];
_8 = _9 << _6;
_16.fld0.0 = (_14.fld0.0.0, _14.fld0.0.1, _14.fld0.0.2);
_14.fld0 = _16.fld0;
_18 = _6 as isize;
_14 = Adt50 { fld0: _16.fld0,fld1: _16.fld1 };
_5 = _4;
_16.fld0.0.1 = _11 as f64;
_10 = [(-6712068701242292054_i64),4761419235520482911_i64];
_16.fld0.0 = _14.fld0.0;
_14 = Adt50 { fld0: _16.fld0,fld1: _16.fld1 };
_16.fld0 = _14.fld0;
_14.fld0 = (_16.fld0.0, _16.fld0.1);
_21.fld0.1 = [_15.0,_14.fld0.0.2,_16.fld0.0.2];
_21 = Adt50 { fld0: _16.fld0,fld1: _16.fld1 };
_14.fld0.0 = _16.fld0.0;
_15.0 = !_21.fld0.0.2;
_21 = Adt50 { fld0: _14.fld0,fld1: _14.fld1 };
_11 = 4_usize * 9253554337456707713_usize;
_21.fld0.0.1 = _16.fld0.0.1 + _16.fld0.0.1;
Goto(bb4)
}
bb4 = {
_9 = !_7;
_1 = [_9,_7,_7,_9,_7,_7,_7,_9];
_2 = _9;
_21.fld0.0.2 = _16.fld0.0.2 << _8;
_16.fld0.0.1 = _21.fld0.0.1;
_16.fld0.1 = [_15.0,_14.fld0.0.2,_15.0];
_6 = -_8;
_21.fld0 = (_14.fld0.0, _14.fld0.1);
_17 = !true;
_21.fld0.1 = _16.fld0.1;
_16.fld0.0.2 = _13 as u8;
_7 = _8;
_16 = Move(_14);
Goto(bb5)
}
bb5 = {
_25 = !35197_u16;
Goto(bb6)
}
bb6 = {
_16.fld1 = _21.fld1;
_14.fld0 = (_16.fld0.0, _16.fld0.1);
_21.fld0.0.0 = [(-6974665693940601143_i64),1787464698715519825_i64];
_30.0.1 = _13 as f64;
_21.fld0.1 = [_21.fld0.0.2,_16.fld0.0.2,_15.0];
_33.fld0.0.2 = _14.fld0.0.2;
Goto(bb7)
}
bb7 = {
_34.0 = _21.fld0.0.2;
_33.fld0.0.1 = _30.0.1 * _30.0.1;
_13 = _11 as f32;
_30.1 = [_34.0,_21.fld0.0.2,_15.0];
_16.fld0.0.0 = _10;
_21.fld0 = (_14.fld0.0, _30.1);
_26 = _11;
_9 = _8 + _7;
_14.fld0.0.0 = _10;
Goto(bb8)
}
bb8 = {
_9 = _8 >> _5;
_31 = '\u{3be21}';
_30.1 = _14.fld0.1;
_35 = !_18;
_30.0.0 = [738630031087189104_i64,(-8350325695649821605_i64)];
_14.fld0.0.2 = _33.fld0.0.2;
_14.fld0.0.2 = _35 as u8;
_36 = 911417739_u32 as isize;
_30.0.2 = _33.fld0.0.2 * _15.0;
_33 = Move(_21);
_30.0.2 = !_14.fld0.0.2;
_16.fld1 = _33.fld1;
Call(_14.fld0.0.1 = core::intrinsics::transmute(_5), bb9, UnwindUnreachable())
}
bb9 = {
_21 = Move(_16);
_30.0.1 = _13 as f64;
_31 = '\u{b462a}';
_21 = Adt50 { fld0: _14.fld0,fld1: _33.fld1 };
_16.fld0.0.0 = [4375843224452011475_i64,812264497864527651_i64];
_4 = _5;
_16.fld0.0 = _21.fld0.0;
_34.0 = _14.fld0.0.2;
_14.fld0.1 = [_14.fld0.0.2,_30.0.2,_34.0];
_14.fld1 = _33.fld1 ^ _21.fld1;
_16.fld1 = 312813310_i32 as i8;
_34.0 = _21.fld0.0.2;
Goto(bb10)
}
bb10 = {
_30.0.2 = !_14.fld0.0.2;
_30.0.2 = !_34.0;
Goto(bb11)
}
bb11 = {
_14.fld0.0.1 = _16.fld0.0.1;
_16.fld0.0 = _30.0;
_21.fld0.0.0 = [1755895703415689501_i64,(-7784425525818563129_i64)];
Goto(bb12)
}
bb12 = {
_47 = -_4;
_9 = _8;
_45 = (-11839_i16);
_18 = 668131641_u32 as isize;
_14.fld0 = _33.fld0;
_14.fld0.0 = _21.fld0.0;
_23 = [_7,_8,_6,_2,_9,_2,_2,_8];
_3 = _47 * _47;
_32 = [1728532816_i32,1657028519_i32,(-815558071_i32),1511869044_i32,493290589_i32,1263676055_i32,(-549779394_i32),1928853471_i32];
_34.0 = !_21.fld0.0.2;
_25 = 52169_u16;
_30.0 = (_21.fld0.0.0, _21.fld0.0.1, _14.fld0.0.2);
_31 = '\u{208b1}';
_44 = _11 as isize;
_9 = _2 * _2;
_14.fld0.1 = _21.fld0.1;
_14.fld0.0.2 = _34.0;
_16.fld0.0.2 = _30.0.2;
_6 = _9 - _9;
_50 = (_14.fld0.0.2,);
_18 = _5;
_35 = !_18;
_47 = _3;
_43.1.0 = !_14.fld0.0.2;
Goto(bb13)
}
bb13 = {
_21.fld0.0.2 = _34.0;
_14.fld0.1 = [_50.0,_50.0,_30.0.2];
Goto(bb14)
}
bb14 = {
_52 = core::ptr::addr_of_mut!(_33.fld0);
_54.0 = _14.fld0.0.2 & _50.0;
_44 = _12 as isize;
_2 = _6 >> _43.1.0;
_16 = Adt50 { fld0: _21.fld0,fld1: _33.fld1 };
_16.fld0.0.1 = _33.fld0.0.1;
_23 = [_7,_6,_7,_9,_2,_6,_7,_6];
_14 = Adt50 { fld0: _21.fld0,fld1: _33.fld1 };
_33.fld0 = _21.fld0;
_55 = _47 > _47;
_16.fld1 = !_33.fld1;
_30.0.2 = _33.fld0.0.2 & _21.fld0.0.2;
_33.fld0 = (_14.fld0.0, _16.fld0.1);
_21.fld0.1 = _33.fld0.1;
_23 = _1;
_14.fld1 = (-8989814399311090477_i64) as i8;
match _25 {
0 => bb1,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
52169 => bb21,
_ => bb20
}
}
bb15 = {
_21.fld0.0.2 = _34.0;
_14.fld0.1 = [_50.0,_50.0,_30.0.2];
Goto(bb14)
}
bb16 = {
_47 = -_4;
_9 = _8;
_45 = (-11839_i16);
_18 = 668131641_u32 as isize;
_14.fld0 = _33.fld0;
_14.fld0.0 = _21.fld0.0;
_23 = [_7,_8,_6,_2,_9,_2,_2,_8];
_3 = _47 * _47;
_32 = [1728532816_i32,1657028519_i32,(-815558071_i32),1511869044_i32,493290589_i32,1263676055_i32,(-549779394_i32),1928853471_i32];
_34.0 = !_21.fld0.0.2;
_25 = 52169_u16;
_30.0 = (_21.fld0.0.0, _21.fld0.0.1, _14.fld0.0.2);
_31 = '\u{208b1}';
_44 = _11 as isize;
_9 = _2 * _2;
_14.fld0.1 = _21.fld0.1;
_14.fld0.0.2 = _34.0;
_16.fld0.0.2 = _30.0.2;
_6 = _9 - _9;
_50 = (_14.fld0.0.2,);
_18 = _5;
_35 = !_18;
_47 = _3;
_43.1.0 = !_14.fld0.0.2;
Goto(bb13)
}
bb17 = {
_14.fld0.0.1 = _13 as f64;
_14.fld0.0.2 = !237_u8;
_14.fld0.0.0 = [(-8464668400335755389_i64),(-2135546252048434797_i64)];
_15 = (_14.fld0.0.2,);
_15 = (_14.fld0.0.2,);
Goto(bb2)
}
bb18 = {
_15 = (_14.fld0.0.2,);
_6 = _2;
_14.fld0.0.0 = [(-6207184046604272796_i64),(-3006227331460727330_i64)];
_14.fld0.1 = [_15.0,_15.0,_14.fld0.0.2];
_14.fld0.0.1 = 1989625939_u32 as f64;
_16.fld0 = (_14.fld0.0, _14.fld0.1);
_16.fld0.0.2 = _14.fld0.0.2;
_10 = [2474074065121671235_i64,4079670815857458322_i64];
_8 = _9 << _6;
_16.fld0.0 = (_14.fld0.0.0, _14.fld0.0.1, _14.fld0.0.2);
_14.fld0 = _16.fld0;
_18 = _6 as isize;
_14 = Adt50 { fld0: _16.fld0,fld1: _16.fld1 };
_5 = _4;
_16.fld0.0.1 = _11 as f64;
_10 = [(-6712068701242292054_i64),4761419235520482911_i64];
_16.fld0.0 = _14.fld0.0;
_14 = Adt50 { fld0: _16.fld0,fld1: _16.fld1 };
_16.fld0 = _14.fld0;
_14.fld0 = (_16.fld0.0, _16.fld0.1);
_21.fld0.1 = [_15.0,_14.fld0.0.2,_16.fld0.0.2];
_21 = Adt50 { fld0: _16.fld0,fld1: _16.fld1 };
_14.fld0.0 = _16.fld0.0;
_15.0 = !_21.fld0.0.2;
_21 = Adt50 { fld0: _14.fld0,fld1: _14.fld1 };
_11 = 4_usize * 9253554337456707713_usize;
_21.fld0.0.1 = _16.fld0.0.1 + _16.fld0.0.1;
Goto(bb4)
}
bb19 = {
_7 = !_8;
_14.fld0.1 = [_14.fld0.0.2,_14.fld0.0.2,_15.0];
_8 = !_7;
_17 = true;
_15 = (_14.fld0.0.2,);
_14.fld0.0.2 = _15.0;
_8 = _7;
_12 = !15012833091108102602_u64;
_16.fld1 = 1729182142_i32 as i8;
_3 = _4;
_14.fld0.0.1 = 1050081897_i32 as f64;
_4 = _7 as isize;
_14.fld0.0.2 = _15.0;
_3 = 1345793055_u32 as isize;
Goto(bb3)
}
bb20 = {
_9 = !_7;
_1 = [_9,_7,_7,_9,_7,_7,_7,_9];
_2 = _9;
_21.fld0.0.2 = _16.fld0.0.2 << _8;
_16.fld0.0.1 = _21.fld0.0.1;
_16.fld0.1 = [_15.0,_14.fld0.0.2,_15.0];
_6 = -_8;
_21.fld0 = (_14.fld0.0, _14.fld0.1);
_17 = !true;
_21.fld0.1 = _16.fld0.1;
_16.fld0.0.2 = _13 as u8;
_7 = _8;
_16 = Move(_14);
Goto(bb5)
}
bb21 = {
(*_52).1 = _14.fld0.1;
_9 = _2 * _2;
_33.fld1 = _14.fld1 ^ _16.fld1;
(*_52).0.0 = [(-2114223738761849998_i64),(-9129974503018086177_i64)];
_41 = Adt60::Variant1 { fld0: _33.fld1 };
_14.fld0.1 = _21.fld0.1;
_43.2 = !109169793453185891451120751472144194335_u128;
_14 = Move(_33);
place!(Field::<i8>(Variant(_41, 1), 0)) = -_21.fld1;
_61 = [_16.fld1];
match _45 {
340282366920938463463374607431768199617 => bb22,
_ => bb13
}
}
bb22 = {
RET = core::ptr::addr_of_mut!(_56);
_30.0.1 = _21.fld0.0.1 + _14.fld0.0.1;
_44 = _25 as isize;
_15 = (_16.fld0.0.2,);
_31 = '\u{1d92a}';
_16.fld0.0.0 = [(-6114224457497547833_i64),1461296215407874358_i64];
SetDiscriminant(_41, 0);
_5 = -_3;
(*_52).0.1 = _45 as f64;
place!(Field::<([i32; 3], (u8,), u128, u32)>(Variant(_41, 0), 0)).0 = [1908503485_i32,739701198_i32,62929890_i32];
_16.fld0.0.1 = _14.fld0.0.1;
_16 = Adt50 { fld0: _30,fld1: _14.fld1 };
_41 = Adt60::Variant1 { fld0: _21.fld1 };
_52 = core::ptr::addr_of_mut!(_16.fld0);
_43.3 = 4203553139_u32;
Goto(bb23)
}
bb23 = {
Call(_67 = dump_var(6_usize, 8_usize, Move(_8), 47_usize, Move(_47), 18_usize, Move(_18), 54_usize, Move(_54)), bb24, UnwindUnreachable())
}
bb24 = {
Call(_67 = dump_var(6_usize, 15_usize, Move(_15), 9_usize, Move(_9), 5_usize, Move(_5), 12_usize, Move(_12)), bb25, UnwindUnreachable())
}
bb25 = {
Call(_67 = dump_var(6_usize, 4_usize, Move(_4), 44_usize, Move(_44), 6_usize, Move(_6), 10_usize, Move(_10)), bb26, UnwindUnreachable())
}
bb26 = {
Call(_67 = dump_var(6_usize, 26_usize, Move(_26), 35_usize, Move(_35), 34_usize, Move(_34), 68_usize, _68), bb27, UnwindUnreachable())
}
bb27 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: i128,mut _2: [i128; 8],mut _3: i128,mut _4: [i128; 8],mut _5: isize,mut _6: i128,mut _7: i128,mut _8: i128) -> [i64; 2] {
mir! {
type RET = [i64; 2];
let _9: ([u64; 6], bool, i128, [i32; 7]);
let _10: isize;
let _11: i32;
let _12: Adt60;
let _13: [u64; 4];
let _14: i32;
let _15: char;
let _16: char;
let _17: [i64; 2];
let _18: (([i64; 2], f64, u8), [u8; 3]);
let _19: bool;
let _20: ((u64, i8, i16), u8);
let _21: *const [i8; 1];
let _22: u64;
let _23: usize;
let _24: Adt57;
let _25: isize;
let _26: char;
let _27: (u64, i8, i16);
let _28: bool;
let _29: char;
let _30: Adt62;
let _31: *const [i8; 1];
let _32: ((u64, i8, i16), u8);
let _33: isize;
let _34: ();
let _35: ();
{
RET = [870038013954811002_i64,(-1385743521737158562_i64)];
RET = [(-7048604598720464883_i64),(-8066160437918838397_i64)];
_6 = _7;
_1 = _7;
_3 = _7 & _6;
_1 = _7;
_1 = _6 << _3;
_5 = !9223372036854775807_isize;
_6 = 95_i8 as i128;
_2 = _4;
_4 = [_3,_3,_7,_1,_7,_3,_8,_8];
_6 = !_3;
_3 = _6 - _7;
_2 = [_3,_6,_1,_3,_3,_7,_1,_3];
_3 = _1;
_1 = -_3;
_1 = _3 & _3;
_3 = _8;
_7 = _1 - _6;
Goto(bb1)
}
bb1 = {
_2 = [_6,_8,_7,_7,_7,_7,_1,_1];
RET = [8157720513444275680_i64,1690339710312440137_i64];
_9.1 = !false;
_9.3 = [(-1920930260_i32),(-907204334_i32),(-1428396189_i32),983767085_i32,(-1233284312_i32),(-228182398_i32),681229887_i32];
_9.0 = [18228483939375614431_u64,6423014858774202732_u64,7826588571969001580_u64,9270630078146174810_u64,6248777185087466389_u64,7396123692518847161_u64];
_7 = -_3;
_7 = !_1;
_9.0 = [5249066602395181083_u64,11004376622347647994_u64,8063800096417678150_u64,15012272867327476892_u64,4685130773627384581_u64,17273275355741404263_u64];
_1 = 25_i8 as i128;
RET = [79412425284602785_i64,350847160119383840_i64];
_9.0 = [7667118280189859116_u64,9118501662961311711_u64,14758619037883677496_u64,2984577900006934811_u64,10406578314540557784_u64,6776146464604708055_u64];
_9.2 = 5768734354008354998_i64 as i128;
_10 = -_5;
_9.0 = [1198954918449445227_u64,2115568777073853876_u64,4859251187230475714_u64,1472447524467028865_u64,8099578399221849788_u64,3978394049054187115_u64];
RET = [5976543297980211220_i64,(-889661877133068334_i64)];
RET = [2444069615148346839_i64,(-1455549929592842998_i64)];
_8 = !_6;
Goto(bb2)
}
bb2 = {
_9.3 = [(-1552793456_i32),172226024_i32,139245089_i32,1831578578_i32,728217116_i32,(-1311819813_i32),1349621719_i32];
_7 = -_3;
Call(_9.3 = fn8(_8, _7, _8, _7, _2, _4, _3, _8, _6, _7, _8, _6, _8), bb3, UnwindUnreachable())
}
bb3 = {
_5 = _10 | _10;
_10 = 9568955494737076099_u64 as isize;
_11 = 110_i8 as i32;
_10 = _5;
_5 = _11 as isize;
_7 = _6;
RET = [(-6235769737021372688_i64),(-8186953326521832186_i64)];
Call(_1 = core::intrinsics::transmute(_7), bb4, UnwindUnreachable())
}
bb4 = {
_4 = [_6,_8,_1,_1,_6,_7,_9.2,_1];
_5 = -_10;
RET = [(-5776356494931228435_i64),(-6010739589636634534_i64)];
_5 = _10 + _10;
_9.2 = _6;
_10 = _5 << _7;
_13 = [6046458630509374787_u64,15268822093115615351_u64,1741877555790433815_u64,12423089754485008449_u64];
RET = [3667034687775722511_i64,(-8213834821034407693_i64)];
RET = [(-4968020303554457276_i64),(-3705966031203195835_i64)];
_5 = !_10;
RET = [(-5345253306906194000_i64),963276878263019038_i64];
RET = [3259282973920222048_i64,(-5466074968141240290_i64)];
RET = [(-9110311226689610187_i64),1329992129056383202_i64];
_10 = _5;
_9.3 = [_11,_11,_11,_11,_11,_11,_11];
_9.3 = [_11,_11,_11,_11,_11,_11,_11];
_3 = -_6;
Goto(bb5)
}
bb5 = {
_9.0 = [14863370059881868742_u64,3149509214173260270_u64,16493695215575199525_u64,10162770080091501662_u64,3779010355267167164_u64,16079265081646006253_u64];
_9.3 = [_11,_11,_11,_11,_11,_11,_11];
_8 = 0_usize as i128;
_1 = _9.2;
_9.1 = _6 == _1;
_9.2 = -_7;
_13 = [6466556967474027852_u64,8217722477907504379_u64,5519932155103921566_u64,16213678236918555912_u64];
_3 = _7;
_1 = _7 ^ _7;
RET = [4033711229649186174_i64,4077653709373556145_i64];
_5 = -_10;
_1 = -_6;
_9.3 = [_11,_11,_11,_11,_11,_11,_11];
Call(_13 = fn11(_10, _9, _2, _2, _7, _10, _5, _10, _9.1, _2, _9), bb6, UnwindUnreachable())
}
bb6 = {
_2 = [_6,_9.2,_8,_7,_7,_1,_6,_1];
_9.0 = [14865939484607438689_u64,11508475368683238625_u64,12277101414524595279_u64,9789355462679809094_u64,2212556706414517467_u64,13877316265073465595_u64];
_13 = [4051563054804832741_u64,3475101164598130066_u64,17915683012722276492_u64,3776132531982081577_u64];
_9.1 = !false;
_11 = 27729_u16 as i32;
_9.0 = [806274957252706164_u64,8456417122564740609_u64,10523836684930597525_u64,9921014350380944326_u64,7882843860668995857_u64,8407413684871648340_u64];
_10 = _5;
_9.3 = [_11,_11,_11,_11,_11,_11,_11];
_9.2 = !_6;
_8 = _7 << _6;
Goto(bb7)
}
bb7 = {
RET = [(-7473486465671422809_i64),(-6834486415736426378_i64)];
_15 = '\u{1fa5f}';
_16 = _15;
_13 = [624278078945211412_u64,13614776716204319736_u64,6885827479569534655_u64,14090968645994474886_u64];
_16 = _15;
Goto(bb8)
}
bb8 = {
_3 = _1 ^ _7;
_3 = -_1;
_11 = 7199148114032191955_usize as i32;
_5 = (-12316_i16) as isize;
_13 = [13441272318839636027_u64,3235917431168629715_u64,7775136181903069827_u64,17779860936378431537_u64];
_10 = _5;
RET = [451218949424844946_i64,3724577945128182015_i64];
RET = [7220521337059973291_i64,4228810813982782320_i64];
_12 = Adt60::Variant1 { fld0: (-29_i8) };
_5 = _15 as isize;
Goto(bb9)
}
bb9 = {
_9.1 = _9.2 >= _8;
_9.3 = [_11,_11,_11,_11,_11,_11,_11];
_9.2 = _1 - _6;
_2 = [_9.2,_8,_8,_9.2,_1,_7,_3,_6];
_9.0 = [2028927183099073912_u64,14390854354232342765_u64,13319344925482441171_u64,1504425035329262004_u64,3968149448773373192_u64,9507348447210720159_u64];
place!(Field::<i8>(Variant(_12, 1), 0)) = -(-14_i8);
_12 = Adt60::Variant1 { fld0: (-108_i8) };
_1 = 61514_u16 as i128;
_4 = [_7,_8,_6,_6,_8,_9.2,_9.2,_7];
Goto(bb10)
}
bb10 = {
_3 = !_9.2;
_1 = _7;
place!(Field::<i8>(Variant(_12, 1), 0)) = 80_i8;
_3 = _9.2 & _9.2;
_15 = _16;
_12 = Adt60::Variant1 { fld0: 3_i8 };
_15 = _16;
_17 = [565013670791464707_i64,6716195638353886310_i64];
_3 = _7 >> _8;
_17 = [(-3103112962204302192_i64),(-6841243589780381589_i64)];
_13 = [14944920781025062588_u64,2804545628681902604_u64,859955652387507807_u64,3928252064070487986_u64];
_10 = _5;
_10 = _5 | _5;
_14 = _11 & _11;
_15 = _16;
_18.0.0 = [(-8957165813912747753_i64),(-6481393360616171904_i64)];
_16 = _15;
Goto(bb11)
}
bb11 = {
_6 = -_1;
_9.0 = [14682554500983595346_u64,12283254885565831862_u64,1406530016508933683_u64,12862927858430499210_u64,13353778188020755890_u64,1504002315793131826_u64];
_18.0.2 = !48_u8;
_9.2 = -_8;
_18.0.2 = 179_u8;
_15 = _16;
_9.3 = [_14,_14,_14,_14,_11,_14,_11];
place!(Field::<i8>(Variant(_12, 1), 0)) = (-6_i8);
_20.0.1 = !Field::<i8>(Variant(_12, 1), 0);
_13 = [5586154308160918937_u64,8222396904598711951_u64,8395705776108231304_u64,10561210217040509051_u64];
_1 = !_7;
_22 = 4332650114991426298_u64 >> _8;
_9.3 = [_14,_11,_14,_14,_14,_14,_14];
_9.3 = [_11,_14,_14,_14,_14,_14,_14];
_17 = _18.0.0;
SetDiscriminant(_12, 2);
_20.0.0 = _22;
_20.0 = (_22, (-116_i8), 16792_i16);
_3 = _9.1 as i128;
place!(Field::<(u64, i8, i16)>(Variant(_12, 2), 3)) = (_22, _20.0.1, _20.0.2);
_19 = _9.1;
RET = [1649927091860913754_i64,(-338159857123602017_i64)];
_23 = _18.0.2 as usize;
Call(_10 = core::intrinsics::transmute(_20.0.0), bb12, UnwindUnreachable())
}
bb12 = {
_25 = _10 + _10;
place!(Field::<[i32; 8]>(Variant(_12, 2), 4)) = [_11,_11,_14,_14,_14,_14,_11,_14];
_18.0.2 = _19 as u8;
RET = [8413611552990712037_i64,464885223138575630_i64];
_13 = [_22,Field::<(u64, i8, i16)>(Variant(_12, 2), 3).0,_20.0.0,_22];
place!(Field::<i32>(Variant(_12, 2), 5)) = _11 * _11;
_18.1 = [_18.0.2,_18.0.2,_18.0.2];
_27.2 = _20.0.2 ^ Field::<(u64, i8, i16)>(Variant(_12, 2), 3).2;
_1 = -_9.2;
_20 = (Field::<(u64, i8, i16)>(Variant(_12, 2), 3), _18.0.2);
place!(Field::<[i32; 3]>(Variant(_12, 2), 2)) = [_14,Field::<i32>(Variant(_12, 2), 5),Field::<i32>(Variant(_12, 2), 5)];
place!(Field::<[usize; 2]>(Variant(_12, 2), 0)) = [_23,_23];
_8 = _3 | _1;
_28 = _9.2 >= _3;
_20.0.2 = Field::<(u64, i8, i16)>(Variant(_12, 2), 3).2 >> _8;
place!(Field::<(u64, i8, i16)>(Variant(_12, 2), 3)).2 = _16 as i16;
_3 = -_8;
_1 = _6 >> _20.0.0;
_30.fld1.0 = _9.1 as u64;
_20.0.0 = _30.fld1.0;
_27.2 = _20.0.2;
RET = [8295586677420100806_i64,2049672693974543701_i64];
_27.1 = _9.2 as i8;
_3 = _1;
_30 = Adt62 { fld0: _20,fld1: Field::<(u64, i8, i16)>(Variant(_12, 2), 3) };
_10 = !_25;
Goto(bb13)
}
bb13 = {
place!(Field::<(u64, i8, i16)>(Variant(_12, 2), 3)) = (_30.fld1.0, _20.0.1, _27.2);
_6 = 3147698676196398151_i64 as i128;
Goto(bb14)
}
bb14 = {
_19 = _28;
place!(Field::<u8>(Variant(_12, 2), 1)) = _18.0.2;
place!(Field::<(u64, i8, i16)>(Variant(_12, 2), 3)) = (_30.fld0.0.0, _30.fld0.0.1, _27.2);
_27 = Field::<(u64, i8, i16)>(Variant(_12, 2), 3);
place!(Field::<u8>(Variant(_12, 2), 1)) = _30.fld0.1;
SetDiscriminant(_12, 2);
_20.0.2 = _30.fld0.0.2;
_30.fld0.1 = !_18.0.2;
_27.1 = -_20.0.1;
place!(Field::<(u64, i8, i16)>(Variant(_12, 2), 3)) = (_20.0.0, _20.0.1, _20.0.2);
_19 = !_9.1;
RET = [8305038737079607399_i64,(-2461482268276728629_i64)];
_25 = _10;
place!(Field::<[i32; 3]>(Variant(_12, 2), 2)) = [_14,_14,_11];
place!(Field::<[i32; 8]>(Variant(_12, 2), 4)) = [_14,_11,_14,_14,_11,_14,_14,_14];
_20.1 = !_18.0.2;
_6 = _10 as i128;
_30.fld0.1 = _20.1;
_18.0.2 = _20.1;
_18.0.1 = _11 as f64;
_29 = _16;
_26 = _16;
_15 = _29;
_18.1 = [_30.fld0.1,_20.1,_20.1];
_30.fld1 = _20.0;
_18.0.2 = !_20.1;
_32 = (_30.fld1, _20.1);
_30.fld1.1 = _20.0.1;
_6 = _8;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(7_usize, 8_usize, Move(_8), 29_usize, Move(_29), 23_usize, Move(_23), 28_usize, Move(_28)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(7_usize, 3_usize, Move(_3), 1_usize, Move(_1), 14_usize, Move(_14), 4_usize, Move(_4)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(7_usize, 27_usize, Move(_27), 6_usize, Move(_6), 13_usize, Move(_13), 11_usize, Move(_11)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_34 = dump_var(7_usize, 17_usize, Move(_17), 35_usize, _35, 35_usize, _35, 35_usize, _35), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: i128,mut _2: i128,mut _3: i128,mut _4: i128,mut _5: [i128; 8],mut _6: [i128; 8],mut _7: i128,mut _8: i128,mut _9: i128,mut _10: i128,mut _11: i128,mut _12: i128,mut _13: i128) -> [i32; 7] {
mir! {
type RET = [i32; 7];
let _14: Adt54;
let _15: f32;
let _16: char;
let _17: isize;
let _18: Adt52;
let _19: i128;
let _20: i64;
let _21: [i16; 8];
let _22: Adt50;
let _23: f64;
let _24: isize;
let _25: u32;
let _26: [i8; 1];
let _27: [usize; 2];
let _28: u16;
let _29: (([i64; 2], f64, u8), [u8; 3]);
let _30: ();
let _31: ();
{
_9 = _11;
RET = [(-438126594_i32),(-511963527_i32),731461571_i32,1748812774_i32,382044515_i32,1937672165_i32,(-1971267203_i32)];
_11 = _12 ^ _13;
_9 = _1;
_3 = (-26044_i16) as i128;
_15 = 14121268047562815069_u64 as f32;
_1 = !_8;
_15 = 11216331330492350178_u64 as f32;
_12 = _8 - _4;
_8 = _12;
_4 = _11;
_10 = _9 << _13;
_7 = !_11;
RET = [(-1195363877_i32),1294854166_i32,(-1938980469_i32),431137899_i32,(-1721373066_i32),128781771_i32,23349178_i32];
RET = [(-399286222_i32),(-2112315164_i32),619748292_i32,1905691080_i32,(-1365968847_i32),387047328_i32,2049762150_i32];
Call(_4 = core::intrinsics::transmute(_7), bb1, UnwindUnreachable())
}
bb1 = {
_3 = -_9;
_16 = '\u{6556f}';
_9 = _4;
_3 = -_9;
_8 = _10;
Goto(bb2)
}
bb2 = {
_11 = _12 >> _1;
_4 = _9 | _9;
_4 = -_12;
_17 = !9223372036854775807_isize;
Goto(bb3)
}
bb3 = {
_12 = false as i128;
_12 = 9138742026621021461_usize as i128;
_8 = !_11;
_16 = '\u{94cca}';
_5 = [_4,_11,_4,_3,_7,_1,_7,_7];
_11 = _15 as i128;
_15 = _1 as f32;
_11 = !_13;
Goto(bb4)
}
bb4 = {
_15 = 54_i8 as f32;
_15 = _2 as f32;
_2 = !_4;
_11 = (-16_i8) as i128;
_11 = _17 as i128;
_13 = !_3;
_17 = !9223372036854775807_isize;
_3 = _13;
_19 = _3 >> _4;
_3 = _7 >> _1;
_13 = !_9;
_6 = [_7,_1,_1,_9,_13,_4,_2,_10];
_10 = !_19;
RET = [523520275_i32,378821687_i32,2044950944_i32,1136080091_i32,(-570500096_i32),2103222858_i32,420696918_i32];
_1 = -_4;
_17 = (-9223372036854775808_isize);
_6 = [_7,_2,_1,_9,_7,_3,_1,_9];
Call(_17 = fn9(_1, _9, _8, _4, _4, _10, _3), bb5, UnwindUnreachable())
}
bb5 = {
_22.fld0.0.1 = (-7204880898745044816_i64) as f64;
_9 = 7_usize as i128;
_19 = _13 ^ _1;
_19 = 55701_u16 as i128;
_20 = 57_i8 as i64;
_23 = 45_i8 as f64;
_22.fld0.0.0 = [_20,_20];
_24 = -_17;
_21 = [17741_i16,5960_i16,24405_i16,21031_i16,10392_i16,(-9657_i16),16537_i16,(-2079_i16)];
_3 = !_7;
_22.fld0.0.2 = !65_u8;
Goto(bb6)
}
bb6 = {
_8 = -_7;
_22.fld0.0.2 = 85_u8;
_23 = _22.fld0.0.1;
_4 = _3 - _3;
_25 = _16 as u32;
_19 = _7 - _13;
RET = [(-1577661270_i32),460513814_i32,(-1244216527_i32),(-1514665130_i32),(-1043583099_i32),(-1553870163_i32),1816904811_i32];
_3 = (-38_i8) as i128;
_17 = _24 << _10;
match _22.fld0.0.2 {
85 => bb7,
_ => bb2
}
}
bb7 = {
RET = [(-239815592_i32),1778410233_i32,(-9778111_i32),(-550672834_i32),749520081_i32,456246042_i32,267180650_i32];
RET = [1893717248_i32,103224638_i32,336180917_i32,669113026_i32,(-1842590443_i32),(-1643657532_i32),805149220_i32];
_1 = (-19795_i16) as i128;
_6 = _5;
_7 = _4;
match _22.fld0.0.2 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
85 => bb16,
_ => bb15
}
}
bb8 = {
_8 = -_7;
_22.fld0.0.2 = 85_u8;
_23 = _22.fld0.0.1;
_4 = _3 - _3;
_25 = _16 as u32;
_19 = _7 - _13;
RET = [(-1577661270_i32),460513814_i32,(-1244216527_i32),(-1514665130_i32),(-1043583099_i32),(-1553870163_i32),1816904811_i32];
_3 = (-38_i8) as i128;
_17 = _24 << _10;
match _22.fld0.0.2 {
85 => bb7,
_ => bb2
}
}
bb9 = {
_22.fld0.0.1 = (-7204880898745044816_i64) as f64;
_9 = 7_usize as i128;
_19 = _13 ^ _1;
_19 = 55701_u16 as i128;
_20 = 57_i8 as i64;
_23 = 45_i8 as f64;
_22.fld0.0.0 = [_20,_20];
_24 = -_17;
_21 = [17741_i16,5960_i16,24405_i16,21031_i16,10392_i16,(-9657_i16),16537_i16,(-2079_i16)];
_3 = !_7;
_22.fld0.0.2 = !65_u8;
Goto(bb6)
}
bb10 = {
_15 = 54_i8 as f32;
_15 = _2 as f32;
_2 = !_4;
_11 = (-16_i8) as i128;
_11 = _17 as i128;
_13 = !_3;
_17 = !9223372036854775807_isize;
_3 = _13;
_19 = _3 >> _4;
_3 = _7 >> _1;
_13 = !_9;
_6 = [_7,_1,_1,_9,_13,_4,_2,_10];
_10 = !_19;
RET = [523520275_i32,378821687_i32,2044950944_i32,1136080091_i32,(-570500096_i32),2103222858_i32,420696918_i32];
_1 = -_4;
_17 = (-9223372036854775808_isize);
_6 = [_7,_2,_1,_9,_7,_3,_1,_9];
Call(_17 = fn9(_1, _9, _8, _4, _4, _10, _3), bb5, UnwindUnreachable())
}
bb11 = {
_12 = false as i128;
_12 = 9138742026621021461_usize as i128;
_8 = !_11;
_16 = '\u{94cca}';
_5 = [_4,_11,_4,_3,_7,_1,_7,_7];
_11 = _15 as i128;
_15 = _1 as f32;
_11 = !_13;
Goto(bb4)
}
bb12 = {
_11 = _12 >> _1;
_4 = _9 | _9;
_4 = -_12;
_17 = !9223372036854775807_isize;
Goto(bb3)
}
bb13 = {
_3 = -_9;
_16 = '\u{6556f}';
_9 = _4;
_3 = -_9;
_8 = _10;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_22.fld0.1 = [_22.fld0.0.2,_22.fld0.0.2,_22.fld0.0.2];
_6 = _5;
_17 = -_24;
_22.fld1 = (-27_i8);
_24 = _16 as isize;
_22.fld1 = !16_i8;
_26 = [_22.fld1];
_15 = 10512577455172504662_u64 as f32;
_29.0.2 = _22.fld0.0.2 ^ _22.fld0.0.2;
_27 = [0_usize,6_usize];
_10 = _17 as i128;
_29 = _22.fld0;
_6 = [_4,_19,_8,_7,_19,_10,_7,_13];
_22.fld0.0.0 = _29.0.0;
RET = [767528067_i32,1805729469_i32,(-1887289708_i32),(-1328566010_i32),1269719446_i32,(-1916640171_i32),1323710369_i32];
_28 = 45675_u16 - 59441_u16;
_19 = _16 as i128;
_1 = _4;
_8 = _17 as i128;
_22.fld0 = (_29.0, _29.1);
RET = [(-1378881857_i32),697624073_i32,(-1854671754_i32),783562221_i32,(-374763871_i32),(-1145319043_i32),1104988410_i32];
Goto(bb17)
}
bb17 = {
Call(_30 = dump_var(8_usize, 8_usize, Move(_8), 24_usize, Move(_24), 12_usize, Move(_12), 1_usize, Move(_1)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(8_usize, 28_usize, Move(_28), 2_usize, Move(_2), 21_usize, Move(_21), 13_usize, Move(_13)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_30 = dump_var(8_usize, 27_usize, Move(_27), 9_usize, Move(_9), 19_usize, Move(_19), 31_usize, _31), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: i128,mut _2: i128,mut _3: i128,mut _4: i128,mut _5: i128,mut _6: i128,mut _7: i128) -> isize {
mir! {
type RET = isize;
let _8: [i16; 8];
let _9: isize;
let _10: f32;
let _11: i64;
let _12: (u64, i8, i16);
let _13: i32;
let _14: *mut ([i64; 2], f64, u8);
let _15: isize;
let _16: Adt64;
let _17: *mut [bool; 1];
let _18: *mut [u32; 3];
let _19: ([i64; 2], f64, u8);
let _20: *const [i8; 1];
let _21: usize;
let _22: bool;
let _23: Adt58;
let _24: [u32; 4];
let _25: i8;
let _26: [i128; 8];
let _27: Adt53;
let _28: [i32; 3];
let _29: u64;
let _30: ();
let _31: ();
{
RET = 13_isize;
_7 = _4 | _6;
_8 = [15752_i16,5828_i16,26796_i16,(-30933_i16),(-22488_i16),3403_i16,(-3112_i16),(-22618_i16)];
RET = (-105_isize);
_4 = -_7;
RET = 27_isize ^ (-9223372036854775808_isize);
_1 = _4 >> _5;
Goto(bb1)
}
bb1 = {
_9 = RET;
RET = !_9;
_2 = _1;
RET = false as isize;
_9 = 3464573437_u32 as isize;
_10 = 50_u8 as f32;
_11 = (-4357615625195547108_i64) << _2;
_4 = _3 | _6;
_9 = RET;
_3 = 36339_u16 as i128;
_12.0 = !10714772946526502679_u64;
_9 = 74_i8 as isize;
_3 = _6 << _11;
_12 = (7961927703125108082_u64, (-41_i8), 5942_i16);
RET = 12619320892564622777_usize as isize;
_12.1 = 14355977140668399775_usize as i8;
_12 = (8501912529973623504_u64, 41_i8, 15919_i16);
_12.2 = (-17649_i16);
_13 = 769374138_i32;
_11 = (-5995143773145829700_i64) + (-5178675811933313509_i64);
_15 = RET;
_13 = (-1546131306_i32) << _1;
Goto(bb2)
}
bb2 = {
_13 = 1169378389_i32 & (-104995929_i32);
_2 = _6 << _3;
Goto(bb3)
}
bb3 = {
_12 = (7092915795809997945_u64, (-51_i8), 20745_i16);
_3 = !_4;
_12.2 = !21100_i16;
_15 = 48877_u16 as isize;
_10 = 2029016456_u32 as f32;
_6 = _1;
_19.1 = RET as f64;
RET = _19.1 as isize;
_19.1 = _13 as f64;
RET = _9 - _9;
_19.0 = [_11,_11];
_12 = (2577775282716220507_u64, 20_i8, 10645_i16);
Goto(bb4)
}
bb4 = {
_12.1 = (-66_i8);
_6 = _7;
_10 = _13 as f32;
_22 = !false;
_19.0 = [_11,_11];
RET = _9;
_3 = '\u{626e3}' as i128;
RET = -_9;
_19.2 = 53_u8 + 235_u8;
_21 = !7_usize;
_12.0 = _21 as u64;
_14 = core::ptr::addr_of_mut!(_19);
_7 = '\u{5b3ad}' as i128;
_10 = _12.1 as f32;
_12.1 = -(-13_i8);
_3 = (*_14).1 as i128;
match _12.2 {
0 => bb1,
10645 => bb5,
_ => bb2
}
}
bb5 = {
_4 = _11 as i128;
_24 = [4180137139_u32,3855752822_u32,2450411394_u32,2657709575_u32];
RET = _9 ^ _9;
_12.2 = -(-30789_i16);
_3 = _1 << _1;
_4 = _2;
_9 = RET << _6;
_6 = _3 ^ _2;
(*_14).1 = _12.2 as f64;
(*_14).1 = _13 as f64;
_29 = _12.0;
_12.2 = 9384_i16 * (-1142_i16);
_7 = _5 & _6;
_12.0 = _29;
_13 = !(-1182134187_i32);
_7 = -_5;
_19.1 = (*_14).2 as f64;
_7 = _4 * _5;
Goto(bb6)
}
bb6 = {
_13 = _12.0 as i32;
_26 = [_6,_6,_1,_5,_7,_4,_1,_5];
_15 = _9 << (*_14).2;
(*_14).0 = [_11,_11];
_8 = [_12.2,_12.2,_12.2,_12.2,_12.2,_12.2,_12.2,_12.2];
_10 = _3 as f32;
_28 = [_13,_13,_13];
Call(RET = fn10(_9, _9, _9, _7, _4, _1), bb7, UnwindUnreachable())
}
bb7 = {
_6 = _2 ^ _7;
(*_14).0 = [_11,_11];
_25 = _12.1;
Goto(bb8)
}
bb8 = {
Call(_30 = dump_var(9_usize, 8_usize, Move(_8), 22_usize, Move(_22), 24_usize, Move(_24), 13_usize, Move(_13)), bb9, UnwindUnreachable())
}
bb9 = {
Call(_30 = dump_var(9_usize, 2_usize, Move(_2), 26_usize, Move(_26), 25_usize, Move(_25), 6_usize, Move(_6)), bb10, UnwindUnreachable())
}
bb10 = {
Call(_30 = dump_var(9_usize, 3_usize, Move(_3), 7_usize, Move(_7), 31_usize, _31, 31_usize, _31), bb11, UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: i128,mut _5: i128,mut _6: i128) -> isize {
mir! {
type RET = isize;
let _7: [u32; 4];
let _8: u64;
let _9: f32;
let _10: ();
let _11: ();
{
_6 = -_4;
_5 = _6 & _4;
_7 = [906243731_u32,3811571454_u32,2388355729_u32,4131270155_u32];
_4 = _5;
_2 = -_3;
RET = _3 >> _2;
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(10_usize, 2_usize, Move(_2), 4_usize, Move(_4), 7_usize, Move(_7), 11_usize, _11), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: ([u64; 6], bool, i128, [i32; 7]),mut _3: [i128; 8],mut _4: [i128; 8],mut _5: i128,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: bool,mut _10: [i128; 8],mut _11: ([u64; 6], bool, i128, [i32; 7])) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _12: f64;
let _13: [usize; 7];
let _14: bool;
let _15: u32;
let _16: [i32; 3];
let _17: [u16; 8];
let _18: Adt54;
let _19: u128;
let _20: Adt55;
let _21: Adt55;
let _22: isize;
let _23: (u64, i8, i16);
let _24: i32;
let _25: isize;
let _26: isize;
let _27: isize;
let _28: i16;
let _29: *const [i8; 1];
let _30: f32;
let _31: i32;
let _32: [i64; 2];
let _33: isize;
let _34: bool;
let _35: f64;
let _36: Adt59;
let _37: f64;
let _38: Adt61;
let _39: bool;
let _40: u16;
let _41: f64;
let _42: isize;
let _43: Adt59;
let _44: [u64; 4];
let _45: Adt57;
let _46: *mut [bool; 1];
let _47: Adt60;
let _48: ();
let _49: ();
{
RET = [5271413211959271030_u64,4602276195262770555_u64,10650621026113978662_u64,11788561629908511972_u64];
_2.2 = _5;
_6 = _2.2 as isize;
_11.2 = -_5;
RET = [12639682591883193994_u64,16081724054092594085_u64,9778321606315558370_u64,4860977354021606899_u64];
_11.0 = [4603628556843221337_u64,3735585707651659088_u64,15892060736775564998_u64,14146744054709279781_u64,12427327844966408889_u64,15756979573298379827_u64];
RET = [2861003295489175441_u64,2496096462752975220_u64,14368259862523296228_u64,10241767641441121144_u64];
_10 = _3;
_8 = 16936152610947903308_u64 as isize;
_2.1 = _9 == _9;
Call(_7 = fn12(_11.2, _6, _9, _6, _3), bb1, UnwindUnreachable())
}
bb1 = {
_3 = _4;
_11.0 = [14160498339307274875_u64,11101623290272297834_u64,4051485140116121897_u64,18118749207299346117_u64,14573090481990821438_u64,11536784494865790810_u64];
_3 = _4;
_2.2 = !_11.2;
_13 = [6278120082738641900_usize,3_usize,677262538694808811_usize,1_usize,5044876227530013325_usize,10817178370496701618_usize,17772514846601178358_usize];
_5 = _2.2;
_7 = _6 ^ _1;
_1 = 2655057554540327817_u64 as isize;
_4 = _10;
_17 = [12671_u16,61581_u16,48539_u16,45044_u16,48969_u16,61413_u16,40188_u16,5358_u16];
Goto(bb2)
}
bb2 = {
_14 = _9 | _11.1;
Call(_15 = core::intrinsics::bswap(4055975256_u32), bb3, UnwindUnreachable())
}
bb3 = {
_15 = !2901911247_u32;
_10 = _3;
_17 = [17825_u16,60563_u16,60768_u16,40216_u16,55450_u16,15045_u16,43366_u16,34395_u16];
Call(_18 = fn13(_9, _7, _2.2, _11, _11.1, _7, _10, _14, _6, _2.1, _3, _6, _11, _11.2, _7, _4), bb4, UnwindUnreachable())
}
bb4 = {
place!(Field::<[u32; 4]>(Variant(_18, 1), 0)) = [_15,_15,_15,_15];
_2.0 = _11.0;
SetDiscriminant(_18, 0);
_19 = 138164294888544485811361748339557268459_u128;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)) = (6472725292744800093_u64, 47_i8, (-28012_i16));
place!(Field::<f32>(Variant(_18, 0), 3)) = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1 as f32;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = !26_i8;
_16 = [518927731_i32,1066562368_i32,1173513267_i32];
_2 = (_11.0, _11.1, _5, _11.3);
_11.0 = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
_23.2 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0 as i16;
RET = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
RET = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
place!(Field::<[i32; 8]>(Variant(_18, 0), 6)) = [(-663491384_i32),70240589_i32,(-1041419975_i32),339504331_i32,(-1049598078_i32),10692691_i32,(-1244539147_i32),(-1387769236_i32)];
place!(Field::<[u32; 3]>(Variant(_18, 0), 4)) = [_15,_15,_15];
_27 = _7;
_24 = _15 as i32;
_23.0 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0 - Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0;
place!(Field::<i128>(Variant(_18, 0), 5)) = _11.2 << _11.2;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).2 = _23.2;
_8 = _7;
_5 = _2.2 + Field::<i128>(Variant(_18, 0), 5);
_2.1 = _5 == Field::<i128>(Variant(_18, 0), 5);
match _19 {
0 => bb3,
1 => bb2,
2 => bb5,
3 => bb6,
138164294888544485811361748339557268459 => bb8,
_ => bb7
}
}
bb5 = {
_15 = !2901911247_u32;
_10 = _3;
_17 = [17825_u16,60563_u16,60768_u16,40216_u16,55450_u16,15045_u16,43366_u16,34395_u16];
Call(_18 = fn13(_9, _7, _2.2, _11, _11.1, _7, _10, _14, _6, _2.1, _3, _6, _11, _11.2, _7, _4), bb4, UnwindUnreachable())
}
bb6 = {
_14 = _9 | _11.1;
Call(_15 = core::intrinsics::bswap(4055975256_u32), bb3, UnwindUnreachable())
}
bb7 = {
_3 = _4;
_11.0 = [14160498339307274875_u64,11101623290272297834_u64,4051485140116121897_u64,18118749207299346117_u64,14573090481990821438_u64,11536784494865790810_u64];
_3 = _4;
_2.2 = !_11.2;
_13 = [6278120082738641900_usize,3_usize,677262538694808811_usize,1_usize,5044876227530013325_usize,10817178370496701618_usize,17772514846601178358_usize];
_5 = _2.2;
_7 = _6 ^ _1;
_1 = 2655057554540327817_u64 as isize;
_4 = _10;
_17 = [12671_u16,61581_u16,48539_u16,45044_u16,48969_u16,61413_u16,40188_u16,5358_u16];
Goto(bb2)
}
bb8 = {
place!(Field::<f32>(Variant(_18, 0), 3)) = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1 as f32;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)) = (_23.0, (-99_i8), _23.2);
_23.1 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1 | Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = _23.1 + _23.1;
_11.1 = _11.2 == _5;
_7 = _8;
_23 = (Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0, Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1, Field::<(u64, i8, i16)>(Variant(_18, 0), 0).2);
_11.0 = [_23.0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,_23.0,_23.0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
_25 = 230_u8 as isize;
_22 = -_7;
_31 = _23.0 as i32;
_23.1 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1 | Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1;
_24 = _31;
_23.0 = _19 as u64;
_2.3 = [_24,_31,_24,_31,_24,_24,_31];
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = _23.1 + _23.1;
place!(Field::<[usize; 2]>(Variant(_18, 0), 1)) = [10477186459809407993_usize,0_usize];
_26 = -_27;
_9 = !_2.1;
_25 = _7 << _7;
Goto(bb9)
}
bb9 = {
place!(Field::<i128>(Variant(_18, 0), 5)) = _11.2;
_34 = _11.1;
RET = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,_23.0];
_2.0 = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
_2 = (_11.0, _9, _11.2, _11.3);
_32 = [4458425575771182306_i64,(-4495773650617418836_i64)];
_25 = _6 - _22;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).0 = '\u{56d62}' as u64;
_8 = _19 as isize;
Goto(bb10)
}
bb10 = {
_2.2 = Field::<i128>(Variant(_18, 0), 5);
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = _19 as i8;
_9 = _34 > _11.1;
_10 = [_2.2,_5,_11.2,Field::<i128>(Variant(_18, 0), 5),Field::<i128>(Variant(_18, 0), 5),_2.2,_5,_5];
_16 = [_24,_24,_31];
_6 = _22;
_12 = (-2411832816442199903_i64) as f64;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = _12 as i8;
_3 = [Field::<i128>(Variant(_18, 0), 5),_2.2,_11.2,_11.2,_5,Field::<i128>(Variant(_18, 0), 5),_5,Field::<i128>(Variant(_18, 0), 5)];
_28 = _23.2;
_11.3 = _2.3;
_11.0 = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,_23.0,_23.0,_23.0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
_26 = -_7;
_33 = _6;
_11.2 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0 as i128;
_14 = Field::<i128>(Variant(_18, 0), 5) != _2.2;
_11 = _2;
_1 = _23.2 as isize;
Goto(bb11)
}
bb11 = {
_13 = [8197664653140945705_usize,1214013856258895248_usize,1_usize,1_usize,15678852505049048306_usize,6_usize,6931315331480312532_usize];
_23 = (Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0, Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1, Field::<(u64, i8, i16)>(Variant(_18, 0), 0).2);
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = _23.1 >> _2.2;
place!(Field::<f32>(Variant(_18, 0), 3)) = _15 as f32;
_16 = [_31,_24,_24];
_2 = (_11.0, _9, Field::<i128>(Variant(_18, 0), 5), _11.3);
_1 = !_7;
_26 = _22;
_41 = -_12;
_42 = !_26;
_17 = [57580_u16,55745_u16,45768_u16,43463_u16,53402_u16,64196_u16,12900_u16,8557_u16];
_2.0 = _11.0;
_26 = _25;
_12 = 37_u8 as f64;
_12 = _41;
_15 = 892709075_u32;
place!(Field::<[usize; 2]>(Variant(_18, 0), 1)) = [4_usize,4_usize];
_44 = [_23.0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,_23.0];
place!(Field::<[usize; 2]>(Variant(_18, 0), 1)) = [6_usize,1_usize];
_44 = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,_23.0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,_23.0];
_4 = _10;
_23.2 = _15 as i16;
_41 = -_12;
match _15 {
0 => bb5,
1 => bb12,
892709075 => bb14,
_ => bb13
}
}
bb12 = {
_14 = _9 | _11.1;
Call(_15 = core::intrinsics::bswap(4055975256_u32), bb3, UnwindUnreachable())
}
bb13 = {
place!(Field::<[u32; 4]>(Variant(_18, 1), 0)) = [_15,_15,_15,_15];
_2.0 = _11.0;
SetDiscriminant(_18, 0);
_19 = 138164294888544485811361748339557268459_u128;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)) = (6472725292744800093_u64, 47_i8, (-28012_i16));
place!(Field::<f32>(Variant(_18, 0), 3)) = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1 as f32;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).1 = !26_i8;
_16 = [518927731_i32,1066562368_i32,1173513267_i32];
_2 = (_11.0, _11.1, _5, _11.3);
_11.0 = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
_23.2 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0 as i16;
RET = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
RET = [Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0,Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0];
place!(Field::<[i32; 8]>(Variant(_18, 0), 6)) = [(-663491384_i32),70240589_i32,(-1041419975_i32),339504331_i32,(-1049598078_i32),10692691_i32,(-1244539147_i32),(-1387769236_i32)];
place!(Field::<[u32; 3]>(Variant(_18, 0), 4)) = [_15,_15,_15];
_27 = _7;
_24 = _15 as i32;
_23.0 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0 - Field::<(u64, i8, i16)>(Variant(_18, 0), 0).0;
place!(Field::<i128>(Variant(_18, 0), 5)) = _11.2 << _11.2;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).2 = _23.2;
_8 = _7;
_5 = _2.2 + Field::<i128>(Variant(_18, 0), 5);
_2.1 = _5 == Field::<i128>(Variant(_18, 0), 5);
match _19 {
0 => bb3,
1 => bb2,
2 => bb5,
3 => bb6,
138164294888544485811361748339557268459 => bb8,
_ => bb7
}
}
bb14 = {
_35 = _12 + _12;
_5 = _11.2;
place!(Field::<(u64, i8, i16)>(Variant(_18, 0), 0)).2 = -_28;
place!(Field::<[usize; 2]>(Variant(_18, 0), 1)) = [2_usize,0_usize];
_11 = _2;
_23.1 = Field::<(u64, i8, i16)>(Variant(_18, 0), 0).1;
_12 = _19 as f64;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(11_usize, 34_usize, Move(_34), 26_usize, Move(_26), 7_usize, Move(_7), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(11_usize, 23_usize, Move(_23), 14_usize, Move(_14), 15_usize, Move(_15), 42_usize, Move(_42)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(11_usize, 11_usize, Move(_11), 9_usize, Move(_9), 17_usize, Move(_17), 2_usize, Move(_2)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(11_usize, 32_usize, Move(_32), 28_usize, Move(_28), 6_usize, Move(_6), 49_usize, _49), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: i128,mut _2: isize,mut _3: bool,mut _4: isize,mut _5: [i128; 8]) -> isize {
mir! {
type RET = isize;
let _6: [i64; 2];
let _7: ();
let _8: ();
{
_4 = 8807234474455972731_u64 as isize;
RET = _2 * _2;
RET = _2;
_4 = RET >> _1;
_1 = '\u{6a498}' as i128;
_2 = 1870760733_i32 as isize;
_5 = [_1,_1,_1,_1,_1,_1,_1,_1];
_2 = _4 & _4;
_3 = _2 > _4;
_2 = -RET;
_2 = 32176_u16 as isize;
_1 = !(-140650356847174961715313588568888107573_i128);
_3 = _4 < RET;
_3 = RET <= _4;
_3 = true | false;
_1 = (-95155064274576259530797305359442532747_i128) & 50855138170721691522581114920905894960_i128;
_5 = [_1,_1,_1,_1,_1,_1,_1,_1];
RET = _4 - _4;
Goto(bb1)
}
bb1 = {
Call(_7 = dump_var(12_usize, 3_usize, Move(_3), 2_usize, Move(_2), 8_usize, _8, 8_usize, _8), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: bool,mut _2: isize,mut _3: i128,mut _4: ([u64; 6], bool, i128, [i32; 7]),mut _5: bool,mut _6: isize,mut _7: [i128; 8],mut _8: bool,mut _9: isize,mut _10: bool,mut _11: [i128; 8],mut _12: isize,mut _13: ([u64; 6], bool, i128, [i32; 7]),mut _14: i128,mut _15: isize,mut _16: [i128; 8]) -> Adt54 {
mir! {
type RET = Adt54;
let _17: u64;
let _18: isize;
let _19: i16;
let _20: i32;
let _21: char;
let _22: Adt63;
let _23: [usize; 2];
let _24: char;
let _25: Adt54;
let _26: char;
let _27: [u16; 8];
let _28: f32;
let _29: i32;
let _30: f64;
let _31: isize;
let _32: [u32; 4];
let _33: ([u64; 6], bool, i128, [i32; 7]);
let _34: f64;
let _35: bool;
let _36: Adt60;
let _37: [u64; 6];
let _38: u32;
let _39: (f32,);
let _40: u64;
let _41: f32;
let _42: [i32; 3];
let _43: f32;
let _44: [i128; 8];
let _45: Adt56;
let _46: *mut [bool; 1];
let _47: Adt58;
let _48: [i8; 1];
let _49: isize;
let _50: Adt65;
let _51: f32;
let _52: Adt65;
let _53: Adt50;
let _54: Adt61;
let _55: Adt51;
let _56: usize;
let _57: isize;
let _58: Adt54;
let _59: Adt66;
let _60: f64;
let _61: char;
let _62: isize;
let _63: Adt51;
let _64: [bool; 1];
let _65: bool;
let _66: [bool; 1];
let _67: [u64; 4];
let _68: *mut ([i64; 2], f64, u8);
let _69: *const [i8; 1];
let _70: [u8; 3];
let _71: f32;
let _72: *mut (([i64; 2], f64, u8), [u8; 3]);
let _73: u16;
let _74: isize;
let _75: ([i32; 3], (u8,), u128, u32);
let _76: i128;
let _77: bool;
let _78: isize;
let _79: char;
let _80: Adt61;
let _81: u64;
let _82: i64;
let _83: ((u64, i8, i16), u8);
let _84: i16;
let _85: Adt65;
let _86: Adt51;
let _87: isize;
let _88: isize;
let _89: bool;
let _90: Adt59;
let _91: bool;
let _92: isize;
let _93: Adt52;
let _94: *mut ([i64; 2], f64, u8);
let _95: [i32; 3];
let _96: isize;
let _97: i64;
let _98: i128;
let _99: Adt60;
let _100: isize;
let _101: u8;
let _102: f64;
let _103: Adt62;
let _104: *mut (([i64; 2], f64, u8), [u8; 3]);
let _105: Adt61;
let _106: [i16; 8];
let _107: u8;
let _108: bool;
let _109: [i8; 1];
let _110: [i128; 8];
let _111: u8;
let _112: bool;
let _113: [i128; 3];
let _114: Adt58;
let _115: ([i64; 2], f64, u8);
let _116: char;
let _117: [i32; 8];
let _118: ([i32; 3], (u8,), u128, u32);
let _119: Adt57;
let _120: f64;
let _121: ((u64, i8, i16), u8);
let _122: Adt55;
let _123: [u8; 3];
let _124: isize;
let _125: i128;
let _126: Adt50;
let _127: [usize; 7];
let _128: u16;
let _129: [u32; 4];
let _130: [usize; 7];
let _131: i8;
let _132: f64;
let _133: ((u64, i8, i16), u8);
let _134: Adt50;
let _135: *mut [bool; 1];
let _136: i32;
let _137: *mut ([i64; 2], f64, u8);
let _138: [u32; 4];
let _139: char;
let _140: i64;
let _141: usize;
let _142: i128;
let _143: bool;
let _144: *mut [i128; 3];
let _145: Adt56;
let _146: char;
let _147: [i32; 7];
let _148: u128;
let _149: (u64, i8, i16);
let _150: [i128; 8];
let _151: u128;
let _152: u64;
let _153: bool;
let _154: bool;
let _155: u64;
let _156: char;
let _157: f32;
let _158: ();
let _159: ();
{
_13.1 = _1;
_4.1 = _8 & _5;
_5 = !_4.1;
_16 = [_4.2,_14,_3,_4.2,_13.2,_4.2,_14,_14];
_13.3 = _4.3;
_16 = [_14,_13.2,_14,_3,_13.2,_14,_13.2,_14];
_4 = (_13.0, _10, _14, _13.3);
_11 = _7;
_17 = 11444635151981737737_u64 + 15275703492550914879_u64;
_13.2 = _14;
_14 = _4.2 >> _3;
_13.3 = [(-1846349891_i32),(-244995538_i32),(-1096933687_i32),1489719368_i32,(-1525359275_i32),407622028_i32,(-1160440549_i32)];
_5 = _15 >= _2;
_6 = _15;
_17 = 15223_u16 as u64;
_4.0 = [_17,_17,_17,_17,_17,_17];
_16 = [_14,_14,_14,_4.2,_14,_3,_14,_3];
_18 = -_6;
_6 = 599820965280215568_usize as isize;
_13.3 = _4.3;
_1 = _4.1 >= _8;
Call(_14 = core::intrinsics::transmute(_13.2), bb1, UnwindUnreachable())
}
bb1 = {
_13.3 = _4.3;
_4.2 = -_13.2;
_11 = [_13.2,_4.2,_14,_4.2,_13.2,_3,_3,_13.2];
_1 = !_5;
_4 = (_13.0, _10, _14, _13.3);
_21 = '\u{72d9e}';
_20 = 4055256148_u32 as i32;
_4.0 = _13.0;
_11 = [_4.2,_3,_3,_14,_4.2,_4.2,_14,_14];
_15 = 237445248148882891104385693097096177934_u128 as isize;
_4.1 = _13.1;
_13.3 = _4.3;
_13.0 = [_17,_17,_17,_17,_17,_17];
_13.1 = _8;
_4 = _13;
_2 = _18 | _12;
_4 = _13;
Goto(bb2)
}
bb2 = {
_5 = !_10;
_9 = -_18;
_1 = _18 != _9;
_17 = 2025963586153704372_u64 + 15644353172599995769_u64;
_7 = [_13.2,_13.2,_13.2,_14,_3,_14,_13.2,_3];
_4.2 = _13.2;
_16 = [_4.2,_3,_3,_14,_4.2,_3,_13.2,_13.2];
_1 = _14 < _14;
_4.2 = !_3;
_18 = _9;
_4 = (_13.0, _8, _13.2, _13.3);
_4 = (_13.0, _1, _3, _13.3);
_13.3 = [_20,_20,_20,_20,_20,_20,_20];
Call(RET = fn14(_1, _5, _8, _4.1, _13.2, _2, _1, _13.2), bb3, UnwindUnreachable())
}
bb3 = {
place!(Field::<(u64, i8, i16)>(Variant(RET, 0), 0)).1 = (-93_i8);
_4.1 = _2 >= _12;
place!(Field::<(u64, i8, i16)>(Variant(RET, 0), 0)).0 = Field::<(u64, i8, i16)>(Variant(RET, 0), 0).2 as u64;
_4.1 = _13.1 <= _13.1;
_4.1 = _10;
place!(Field::<f32>(Variant(RET, 0), 3)) = 51316_u16 as f32;
place!(Field::<[i32; 8]>(Variant(RET, 0), 6)) = [_20,_20,_20,_20,_20,_20,_20,_20];
_24 = _21;
_12 = _18 & _2;
_2 = _18;
place!(Field::<i128>(Variant(RET, 0), 5)) = !_13.2;
_4 = (_13.0, _10, _13.2, _13.3);
_4.3 = _13.3;
_13.2 = _17 as i128;
_24 = _21;
_5 = _9 == _2;
_23 = [8744941699511240196_usize,4234494396019597199_usize];
_14 = _3;
_13.3 = [_20,_20,_20,_20,_20,_20,_20];
_22 = Adt63::Variant0 { fld0: _4.3 };
SetDiscriminant(RET, 1);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
_27 = [57627_u16,5882_u16,61521_u16,35743_u16,42773_u16,56380_u16,25228_u16,49300_u16];
_21 = _24;
_28 = _9 as f32;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 223_u8 - 5_u8;
_14 = 0_usize as i128;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [3637875261_u32,2533770976_u32,1436336764_u32,524208893_u32];
Goto(bb4)
}
bb4 = {
_4.0 = [_17,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = 7261_i16;
_16 = [_3,_4.2,_4.2,_3,_3,_4.2,_3,_3];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-113_i8);
_20 = 885663014_i32;
_5 = !_10;
_12 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0 as isize;
_29 = _20 << _2;
_26 = _24;
_13.2 = _18 as i128;
_10 = _13.2 < _4.2;
_13.3 = [_29,_29,_29,_29,_29,_29,_29];
_24 = _21;
_4.1 = _13.1;
Goto(bb5)
}
bb5 = {
_2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 as isize;
_4.0 = [_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_4.0 = _13.0;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-70_i8) | (-125_i8);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 213_u8;
_27 = [62979_u16,18013_u16,61782_u16,30427_u16,28923_u16,20438_u16,48616_u16,61472_u16];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-3_i8), 10440_i16);
SetDiscriminant(_22, 1);
_33.0 = [_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_15 = _29 as isize;
_14 = _13.2 >> _13.2;
_33.3 = [_29,_29,_29,_29,_29,_29,_29];
_33.2 = !_13.2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 184_u8 >> _9;
_28 = _9 as f32;
_1 = !_8;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 157_u8;
_13.3 = _33.3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, 114_i8, 2917_i16);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -106_i8;
_27 = [24927_u16,27142_u16,13957_u16,19894_u16,25468_u16,38947_u16,2678_u16,17678_u16];
Goto(bb6)
}
bb6 = {
_9 = 35219_u16 as isize;
_34 = 191_u16 as f64;
_4.2 = !_33.2;
_18 = _15;
_6 = !_15;
_32 = Field::<[u32; 4]>(Variant(RET, 1), 0);
_10 = _1;
_20 = _29 | _29;
_37 = _13.0;
_14 = _33.2;
_5 = _4.1;
_19 = 202192055572913522251529844999724340982_u128 as i16;
_4.2 = _21 as i128;
_33.1 = !_13.1;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-44_i8), _19);
_24 = _26;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -75_i8;
_23 = [5_usize,7_usize];
_31 = _2;
_22 = Adt63::Variant0 { fld0: _13.3 };
_13.1 = !_5;
_13.0 = _4.0;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = !75_u8;
_14 = _28 as i128;
_13 = (_4.0, _33.1, _33.2, Field::<[i32; 7]>(Variant(_22, 0), 0));
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = 105_i8 << _6;
_18 = 25033_u16 as isize;
_29 = _20 - _20;
_29 = _20 << _14;
Goto(bb7)
}
bb7 = {
_20 = -_29;
_16 = _11;
_23 = [2688478197460449775_usize,6_usize];
_26 = _21;
SetDiscriminant(_22, 1);
_11 = [_14,_33.2,_33.2,_14,_33.2,_13.2,_13.2,_14];
_17 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0 * Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0;
_35 = _8;
_4.0 = [_17,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_23 = [4866044182749452171_usize,10024273107530673079_usize];
_15 = _6 >> _14;
_9 = _15;
_7 = [_3,_13.2,_33.2,_14,_13.2,_14,_33.2,_13.2];
_37 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,_17,_17,_17,_17];
_33.3 = _13.3;
_27 = [52891_u16,6890_u16,12445_u16,5946_u16,61996_u16,32955_u16,33099_u16,42215_u16];
Goto(bb8)
}
bb8 = {
_27 = [4290_u16,53329_u16,60211_u16,8308_u16,30113_u16,25416_u16,47392_u16,47408_u16];
_4 = (_33.0, _35, _14, _13.3);
_7 = [_33.2,_14,_4.2,_3,_13.2,_33.2,_33.2,_14];
Goto(bb9)
}
bb9 = {
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [2114400099_u32,544127_u32,3691817108_u32,1199830687_u32];
_33 = _4;
_30 = _34;
_33.2 = _4.2;
_39 = (_28,);
_42 = [_20,_20,_20];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = _17;
_41 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as f32;
_19 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2;
_35 = _3 >= _33.2;
Goto(bb10)
}
bb10 = {
_41 = _39.0;
_9 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 as isize;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-29_i8), _19);
_39.0 = _41;
_14 = _4.2 & _33.2;
match Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 {
0 => bb9,
1 => bb8,
2 => bb3,
3 => bb11,
340282366920938463463374607431768211427 => bb13,
_ => bb12
}
}
bb11 = {
_4.0 = [_17,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = 7261_i16;
_16 = [_3,_4.2,_4.2,_3,_3,_4.2,_3,_3];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-113_i8);
_20 = 885663014_i32;
_5 = !_10;
_12 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0 as isize;
_29 = _20 << _2;
_26 = _24;
_13.2 = _18 as i128;
_10 = _13.2 < _4.2;
_13.3 = [_29,_29,_29,_29,_29,_29,_29];
_24 = _21;
_4.1 = _13.1;
Goto(bb5)
}
bb12 = {
_27 = [4290_u16,53329_u16,60211_u16,8308_u16,30113_u16,25416_u16,47392_u16,47408_u16];
_4 = (_33.0, _35, _14, _13.3);
_7 = [_33.2,_14,_4.2,_3,_13.2,_33.2,_33.2,_14];
Goto(bb9)
}
bb13 = {
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 * _19;
_22 = Adt63::Variant0 { fld0: _33.3 };
_38 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as u32;
_5 = _8 ^ _13.1;
_6 = _28 as isize;
_39 = (_28,);
_4.1 = _35;
_2 = -_15;
_29 = _20 >> _33.2;
match Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 {
0 => bb8,
1 => bb7,
2 => bb9,
340282366920938463463374607431768211427 => bb15,
_ => bb14
}
}
bb14 = {
_41 = _39.0;
_9 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 as isize;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-29_i8), _19);
_39.0 = _41;
_14 = _4.2 & _33.2;
match Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 {
0 => bb9,
1 => bb8,
2 => bb3,
3 => bb11,
340282366920938463463374607431768211427 => bb13,
_ => bb12
}
}
bb15 = {
_44 = _11;
_16 = [_3,_33.2,_33.2,_14,_4.2,_14,_13.2,_3];
_16 = [_3,_14,_4.2,_3,_4.2,_33.2,_33.2,_33.2];
_26 = _21;
_16 = [_3,_13.2,_4.2,_13.2,_3,_33.2,_13.2,_14];
_39.0 = 8085320144925646173_i64 as f32;
_39 = (_28,);
_33.0 = [_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
SetDiscriminant(_22, 0);
_3 = _4.2;
_20 = _29 | _29;
_4.0 = [_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_23 = [13727984161041151424_usize,8924755598314454121_usize];
_27 = [48702_u16,26532_u16,63342_u16,33634_u16,45464_u16,48795_u16,14409_u16,26549_u16];
_32 = [_38,_38,_38,_38];
_32 = Field::<[u32; 4]>(Variant(RET, 1), 0);
_53.fld0.0.1 = _33.2 as f64;
_39.0 = _9 as f32;
_53.fld1 = 211999744040603218747671220232800427483_u128 as i8;
_8 = _29 < _20;
_12 = _2;
Goto(bb16)
}
bb16 = {
_32 = [_38,_38,_38,_38];
_30 = -_53.fld0.0.1;
_17 = _8 as u64;
_33.0 = [_17,_17,_17,_17,_17,_17];
_14 = _29 as i128;
_39.0 = _17 as f32;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
_53.fld0.1 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
_15 = _2;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
_32 = [_38,_38,_38,_38];
_31 = -_2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 | _19;
_53.fld0.0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 + Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1;
_39 = (_41,);
_36 = Adt60::Variant1 { fld0: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 };
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = _32;
_39 = (_41,);
Goto(bb17)
}
bb17 = {
_37 = [_17,_17,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_24 = _21;
_12 = _9 >> _2;
_5 = _35;
_60 = _53.fld0.0.1;
_56 = 16617299348702177497_usize;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = _53.fld0.0.2 & _53.fld0.0.2;
_45 = Adt56::Variant1 { fld0: 133456671661852018186391590013603456151_u128 };
_13.3 = _4.3;
_29 = _20 ^ _20;
_39 = (_28,);
_11 = [_14,_3,_14,_3,_3,_4.2,_14,_3];
_13.1 = _14 > _13.2;
_26 = _24;
_43 = _6 as f32;
place!(Field::<i8>(Variant(_36, 1), 0)) = -Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1;
_53.fld0.0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 >> _29;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 ^ _19;
_11 = [_33.2,_13.2,_3,_14,_14,_4.2,_3,_33.2];
_13 = (_37, _5, _33.2, _33.3);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -_53.fld1;
_29 = -_20;
_5 = _8 | _33.1;
place!(Field::<[i32; 7]>(Variant(_22, 0), 0)) = [_29,_29,_20,_20,_20,_20,_29];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = -_19;
_51 = _28;
match _56 {
0 => bb16,
16617299348702177497 => bb18,
_ => bb14
}
}
bb18 = {
_11 = [_14,_3,_13.2,_4.2,_4.2,_14,_33.2,_3];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, Field::<i8>(Variant(_36, 1), 0), _19);
_4.1 = !_10;
_16 = [_4.2,_13.2,_13.2,_3,_13.2,_14,_4.2,_3];
place!(Field::<[i32; 7]>(Variant(_22, 0), 0)) = [_20,_20,_20,_29,_20,_29,_29];
_53.fld0.0.0 = [(-2269264076343255497_i64),(-7570725970553814223_i64)];
_11 = _16;
_60 = _38 as f64;
_4.0 = _13.0;
_23 = [_56,_56];
_53.fld0.0.1 = Field::<i8>(Variant(_36, 1), 0) as f64;
_47 = Adt58::Variant1 { fld0: _53.fld0.0.0,fld1: _26,fld2: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1),fld3: Field::<[i32; 7]>(Variant(_22, 0), 0) };
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0, Field::<i8>(Variant(_36, 1), 0), _19);
place!(Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2)).0 = (Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0, Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1, _19);
Goto(bb19)
}
bb19 = {
_48 = [Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.1];
_13.3 = _4.3;
_32 = [_38,_38,_38,_38];
_29 = _20 & _20;
_4.3 = [_20,_20,_29,_29,_29,_29,_20];
_41 = _51 - _39.0;
_53.fld0.1 = [_53.fld0.0.2,_53.fld0.0.2,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as u64;
_61 = _21;
_51 = _29 as f32;
_67 = [Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0,Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0,Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0,Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0];
_4.1 = !_10;
_10 = !_33.1;
_48 = [Field::<i8>(Variant(_36, 1), 0)];
SetDiscriminant(_22, 0);
_64 = [_35];
place!(Field::<[i32; 7]>(Variant(_47, 1), 3)) = _33.3;
_30 = _34 - _60;
place!(Field::<u128>(Variant(_45, 1), 0)) = 263026993768729398293728842712139701721_u128;
_40 = Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0;
Call(place!(Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2)).1 = core::intrinsics::bswap(_53.fld0.0.2), bb20, UnwindUnreachable())
}
bb20 = {
_60 = _34;
_51 = -_28;
_9 = Field::<i8>(Variant(_36, 1), 0) as isize;
_14 = _61 as i128;
_32 = [_38,_38,_38,_38];
_26 = _24;
_1 = _10;
_62 = !_2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = !Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.2;
_11 = [_3,_4.2,_13.2,_13.2,_3,_3,_33.2,_33.2];
_53.fld0.0.1 = _4.2 as f64;
_53.fld0.0.1 = _34 - _30;
_13 = _4;
place!(Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2)).0.1 = -Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = _53.fld0.0.1 as i8;
Goto(bb21)
}
bb21 = {
_29 = _20 ^ _20;
place!(Field::<[i64; 2]>(Variant(_47, 1), 0)) = _53.fld0.0.0;
_2 = _12 * _31;
_47 = Adt58::Variant1 { fld0: _53.fld0.0.0,fld1: _26,fld2: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1),fld3: _13.3 };
_31 = _56 as isize;
_29 = _20 >> _33.2;
_65 = _15 > _12;
_75.1 = (_53.fld0.0.2,);
place!(Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2)).1 = _75.1.0 & _75.1.0;
_38 = 1760251654_u32 - 1004339090_u32;
_4 = _13;
_47 = Adt58::Variant0 { fld0: _53.fld0.0.0,fld1: Field::<u128>(Variant(_45, 1), 0) };
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = _32;
_6 = _75.1.0 as isize;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 >> _53.fld0.0.2;
_55 = Adt51::Variant3 { fld0: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2,fld1: Move(_53) };
_63 = Move(_55);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_40, Field::<Adt50>(Variant(_63, 3), 1).fld1, Field::<i16>(Variant(_63, 3), 0));
Goto(bb22)
}
bb22 = {
_5 = _10;
_13 = (_4.0, _33.1, _3, _33.3);
_67 = [_40,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = Field::<i16>(Variant(_63, 3), 0);
_33.1 = _28 >= _39.0;
match _56 {
0 => bb1,
1 => bb23,
2 => bb24,
16617299348702177497 => bb26,
_ => bb25
}
}
bb23 = {
_32 = [_38,_38,_38,_38];
_30 = -_53.fld0.0.1;
_17 = _8 as u64;
_33.0 = [_17,_17,_17,_17,_17,_17];
_14 = _29 as i128;
_39.0 = _17 as f32;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
_53.fld0.1 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
_15 = _2;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
_32 = [_38,_38,_38,_38];
_31 = -_2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 | _19;
_53.fld0.0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 + Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1;
_39 = (_41,);
_36 = Adt60::Variant1 { fld0: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 };
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = _32;
_39 = (_41,);
Goto(bb17)
}
bb24 = {
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [2114400099_u32,544127_u32,3691817108_u32,1199830687_u32];
_33 = _4;
_30 = _34;
_33.2 = _4.2;
_39 = (_28,);
_42 = [_20,_20,_20];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = _17;
_41 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as f32;
_19 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2;
_35 = _3 >= _33.2;
Goto(bb10)
}
bb25 = {
place!(Field::<(u64, i8, i16)>(Variant(RET, 0), 0)).1 = (-93_i8);
_4.1 = _2 >= _12;
place!(Field::<(u64, i8, i16)>(Variant(RET, 0), 0)).0 = Field::<(u64, i8, i16)>(Variant(RET, 0), 0).2 as u64;
_4.1 = _13.1 <= _13.1;
_4.1 = _10;
place!(Field::<f32>(Variant(RET, 0), 3)) = 51316_u16 as f32;
place!(Field::<[i32; 8]>(Variant(RET, 0), 6)) = [_20,_20,_20,_20,_20,_20,_20,_20];
_24 = _21;
_12 = _18 & _2;
_2 = _18;
place!(Field::<i128>(Variant(RET, 0), 5)) = !_13.2;
_4 = (_13.0, _10, _13.2, _13.3);
_4.3 = _13.3;
_13.2 = _17 as i128;
_24 = _21;
_5 = _9 == _2;
_23 = [8744941699511240196_usize,4234494396019597199_usize];
_14 = _3;
_13.3 = [_20,_20,_20,_20,_20,_20,_20];
_22 = Adt63::Variant0 { fld0: _4.3 };
SetDiscriminant(RET, 1);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
_27 = [57627_u16,5882_u16,61521_u16,35743_u16,42773_u16,56380_u16,25228_u16,49300_u16];
_21 = _24;
_28 = _9 as f32;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 223_u8 - 5_u8;
_14 = 0_usize as i128;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [3637875261_u32,2533770976_u32,1436336764_u32,524208893_u32];
Goto(bb4)
}
bb26 = {
_53.fld1 = 4273485845145242794_i64 as i8;
Goto(bb27)
}
bb27 = {
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_40, Field::<i8>(Variant(_36, 1), 0), Field::<i16>(Variant(_63, 3), 0));
_13.2 = _33.2 ^ _4.2;
_5 = _1 & _1;
_69 = core::ptr::addr_of!(_48);
_49 = Field::<Adt50>(Variant(_63, 3), 1).fld0.0.2 as isize;
_40 = _62 as u64;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as u8;
_33.2 = _4.2;
Goto(bb28)
}
bb28 = {
_12 = _62 | _2;
_75.2 = Field::<u128>(Variant(_47, 0), 1);
_37 = _13.0;
_22 = Adt63::Variant0 { fld0: _4.3 };
_31 = !_2;
SetDiscriminant(_63, 2);
_22 = Adt63::Variant1 { fld0: _69 };
_69 = core::ptr::addr_of!((*_69));
_4.1 = _35 ^ _35;
_76 = _62 as i128;
place!(Field::<u128>(Variant(_63, 2), 4)) = Field::<u128>(Variant(_47, 0), 1);
_44 = [_3,_76,_13.2,_76,_76,_33.2,_13.2,_13.2];
_53.fld0.0.0 = [3746448478020875460_i64,(-115025138500356502_i64)];
_39 = (_51,);
place!(Field::<*const [i8; 1]>(Variant(_22, 1), 0)) = _69;
_57 = _26 as isize;
_39.0 = _41;
_2 = !_31;
Goto(bb29)
}
bb29 = {
SetDiscriminant(_45, 1);
_82 = (-8073432156502356191_i64);
_9 = !_31;
_79 = _21;
_18 = _38 as isize;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = _75.1.0 << _15;
place!(Field::<i8>(Variant(_36, 1), 0)) = _21 as i8;
_3 = -_33.2;
_32 = Field::<[u32; 4]>(Variant(RET, 1), 0);
SetDiscriminant(_47, 0);
_31 = -_12;
_76 = _4.2 | _3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = _40;
_7 = [_3,_33.2,_3,_13.2,_76,_4.2,_33.2,_3];
_47 = Adt58::Variant0 { fld0: _53.fld0.0.0,fld1: _75.2 };
place!(Field::<usize>(Variant(_63, 2), 5)) = !_56;
_62 = -_9;
_83.0.0 = _40;
_46 = core::ptr::addr_of_mut!(_66);
_29 = _20 << _3;
_68 = core::ptr::addr_of_mut!(_53.fld0.0);
_5 = !_13.1;
Goto(bb30)
}
bb30 = {
_1 = _33.1;
place!(Field::<[u32; 3]>(Variant(_63, 2), 3)) = [_38,_38,_38];
_3 = _76;
(*_46) = [_10];
_46 = core::ptr::addr_of_mut!((*_46));
_35 = _13.1 | _33.1;
_72 = core::ptr::addr_of_mut!(_53.fld0);
place!(Field::<*mut ([i64; 2], f64, u8)>(Variant(_63, 2), 0)) = _68;
(*_72).0.1 = -_30;
(*_68).0 = Field::<[i64; 2]>(Variant(_47, 0), 0);
_53.fld0.0.1 = _30;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = _40 - _40;
_26 = _79;
_13.2 = _76;
Goto(bb31)
}
bb31 = {
SetDiscriminant(_47, 0);
(*_69) = [Field::<i8>(Variant(_36, 1), 0)];
_8 = _13.2 < _76;
(*_72).1 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
SetDiscriminant(_22, 0);
_4.0 = [_17,_83.0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_40,_83.0.0];
_51 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as f32;
(*_72).0.2 = !_75.1.0;
_4.2 = _53.fld0.0.1 as i128;
_62 = !_12;
_9 = _31 >> _53.fld0.0.2;
_75.0 = _42;
_73 = _40 as u16;
_15 = _76 as isize;
place!(Field::<u128>(Variant(_47, 0), 1)) = _75.2;
_53.fld0.1 = [(*_72).0.2,(*_68).2,(*_68).2];
_93 = Adt52::Variant2 { fld0: _23,fld1: _69,fld2: _9,fld3: _53.fld1,fld4: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0,fld5: _53.fld0.0.1,fld6: (*_72),fld7: _7 };
_26 = _79;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
_21 = _24;
_22 = Adt63::Variant0 { fld0: _4.3 };
match _75.2 {
0 => bb1,
1 => bb16,
2 => bb9,
3 => bb14,
4 => bb15,
263026993768729398293728842712139701721 => bb33,
_ => bb32
}
}
bb32 = {
_2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 as isize;
_4.0 = [_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_4.0 = _13.0;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-70_i8) | (-125_i8);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 213_u8;
_27 = [62979_u16,18013_u16,61782_u16,30427_u16,28923_u16,20438_u16,48616_u16,61472_u16];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-3_i8), 10440_i16);
SetDiscriminant(_22, 1);
_33.0 = [_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_15 = _29 as isize;
_14 = _13.2 >> _13.2;
_33.3 = [_29,_29,_29,_29,_29,_29,_29];
_33.2 = !_13.2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 184_u8 >> _9;
_28 = _9 as f32;
_1 = !_8;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 157_u8;
_13.3 = _33.3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, 114_i8, 2917_i16);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -106_i8;
_27 = [24927_u16,27142_u16,13957_u16,19894_u16,25468_u16,38947_u16,2678_u16,17678_u16];
Goto(bb6)
}
bb33 = {
_13.2 = -_3;
_20 = -_29;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = _40;
SetDiscriminant(_22, 0);
_75.1.0 = (*_68).2;
Call(place!(Field::<*const [i8; 1]>(Variant(_93, 2), 1)) = core::intrinsics::arith_offset(_69, (-9223372036854775808_isize)), bb34, UnwindUnreachable())
}
bb34 = {
(*_69) = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1];
_32 = [_38,_38,_38,_38];
_7 = [_76,_13.2,_13.2,_3,_13.2,_33.2,_76,_33.2];
_89 = !_33.1;
_62 = _12;
_88 = _31;
_47 = Adt58::Variant0 { fld0: _53.fld0.0.0,fld1: _75.2 };
_73 = 46908_u16;
place!(Field::<f64>(Variant(_93, 2), 5)) = _56 as f64;
_40 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0;
place!(Field::<u128>(Variant(_45, 1), 0)) = _75.2;
_35 = _33.1;
_77 = _8;
_61 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = Field::<(([i64; 2], f64, u8), [u8; 3])>(Variant(_93, 2), 6).0.2 ^ (*_72).0.2;
_4.1 = _10;
_75.2 = Field::<i8>(Variant(_36, 1), 0) as u128;
_103.fld1.0 = !_83.0.0;
_43 = _39.0;
_83.0.2 = Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2 | Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2;
place!(Field::<isize>(Variant(_93, 2), 2)) = -_15;
match Field::<u128>(Variant(_63, 2), 4) {
263026993768729398293728842712139701721 => bb35,
_ => bb22
}
}
bb35 = {
_96 = !_62;
_55 = Adt51::Variant2 { fld0: _68,fld1: _67,fld2: _73,fld3: Field::<[u32; 3]>(Variant(_63, 2), 3),fld4: Field::<u128>(Variant(_45, 1), 0),fld5: Field::<usize>(Variant(_63, 2), 5) };
_83.0.2 = Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2;
_48 = [Field::<i8>(Variant(_36, 1), 0)];
_11 = [_76,_76,_33.2,_33.2,_3,_3,_3,_13.2];
_98 = _76 + _33.2;
_84 = Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2;
(*_69) = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1];
(*_69) = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1];
_84 = Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2 & Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2;
(*_72).0.2 = _38 as u8;
_70 = _53.fld0.1;
_103.fld1.0 = !_40;
place!(Field::<[u64; 4]>(Variant(_63, 2), 1)) = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,_83.0.0,_17];
_95 = [_20,_29,_20];
Goto(bb36)
}
bb36 = {
_105 = Adt61::Variant1 { fld0: _56,fld1: Move(_47),fld2: Field::<*mut ([i64; 2], f64, u8)>(Variant(_55, 2), 0),fld3: _23,fld4: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1),fld5: Field::<[u32; 3]>(Variant(_63, 2), 3),fld6: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0 };
place!(Field::<Adt58>(Variant(_105, 1), 1)) = Adt58::Variant1 { fld0: (*_72).0.0,fld1: _21,fld2: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1),fld3: _4.3 };
_103.fld0.0 = (Field::<((u64, i8, i16), u8)>(Variant(Field::<Adt58>(Variant(_105, 1), 1), 1), 2).0.0, Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1, Field::<(u64, i8, i16)>(Variant(_105, 1), 6).2);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (Field::<(u64, i8, i16)>(Variant(_93, 2), 4).0, Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.1, Field::<(u64, i8, i16)>(Variant(_93, 2), 4).2);
place!(Field::<(u64, i8, i16)>(Variant(_105, 1), 6)).1 = !Field::<(u64, i8, i16)>(Variant(_93, 2), 4).1;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = Field::<u16>(Variant(_55, 2), 2) as i8;
_65 = _33.1;
_18 = _88;
SetDiscriminant(Field::<Adt58>(Variant(_105, 1), 1), 2);
_14 = Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).1 as i128;
match Field::<u128>(Variant(_55, 2), 4) {
0 => bb37,
263026993768729398293728842712139701721 => bb39,
_ => bb38
}
}
bb37 = {
_27 = [4290_u16,53329_u16,60211_u16,8308_u16,30113_u16,25416_u16,47392_u16,47408_u16];
_4 = (_33.0, _35, _14, _13.3);
_7 = [_33.2,_14,_4.2,_3,_13.2,_33.2,_33.2,_14];
Goto(bb9)
}
bb38 = {
_53.fld1 = 4273485845145242794_i64 as i8;
Goto(bb27)
}
bb39 = {
place!(Field::<(u64, i8, i16)>(Variant(_105, 1), 6)) = (_103.fld1.0, Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1, _84);
_103.fld1.1 = Field::<(u64, i8, i16)>(Variant(_105, 1), 6).1 + Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1;
match Field::<u128>(Variant(_55, 2), 4) {
0 => bb38,
1 => bb2,
2 => bb8,
263026993768729398293728842712139701721 => bb40,
_ => bb18
}
}
bb40 = {
place!(Field::<(f32,)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 5)).0 = _28;
place!(Field::<(([i64; 2], f64, u8), [u8; 3])>(Variant(_93, 2), 6)).0.0 = [_82,_82];
SetDiscriminant(_55, 1);
place!(Field::<(([i64; 2], f64, u8), [u8; 3])>(Variant(_93, 2), 6)).0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 >> _12;
_10 = _83.0.2 > _83.0.2;
place!(Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1)).0 = (Field::<(u64, i8, i16)>(Variant(_93, 2), 4).0, _53.fld1, _84);
place!(Field::<u16>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 2)) = !_73;
_83.1 = _14 as u8;
place!(Field::<char>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 1)) = _26;
place!(Field::<(([i64; 2], f64, u8), [u8; 3])>(Variant(_93, 2), 6)).0.1 = (*_68).1 * _60;
place!(Field::<[u32; 3]>(Variant(_105, 1), 5)) = [_38,_38,_38];
_113 = [_14,_3,_14];
place!(Field::<(u64, i8, i16)>(Variant(_105, 1), 6)).0 = _61 as u64;
_103.fld1.2 = Field::<(u64, i8, i16)>(Variant(_105, 1), 6).2;
_103 = Adt62 { fld0: Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4),fld1: Field::<(u64, i8, i16)>(Variant(_93, 2), 4) };
SetDiscriminant(_93, 0);
place!(Field::<*mut ([i64; 2], f64, u8)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 4)) = core::ptr::addr_of_mut!((*_68));
place!(Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1)).0.0 = _17 - _83.0.0;
place!(Field::<[i8; 1]>(Variant(_93, 0), 7)) = [Field::<i8>(Variant(_36, 1), 0)];
_83.0 = (_17, Field::<i8>(Variant(_36, 1), 0), Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.2);
_69 = core::ptr::addr_of!((*_69));
place!(Field::<(u64, i8, i16)>(Variant(_55, 1), 2)).0 = Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.0 + _103.fld0.0.0;
Goto(bb41)
}
bb41 = {
place!(Field::<u128>(Variant(_63, 2), 4)) = _75.2;
_24 = Field::<char>(Variant(Field::<Adt58>(Variant(_105, 1), 1), 2), 1);
_88 = _9 ^ _31;
(*_68).0 = [_82,_82];
place!(Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1)).0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 * Field::<(u64, i8, i16)>(Variant(_105, 1), 6).2;
_83.0.0 = !_40;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _83.0.2;
SetDiscriminant(_45, 0);
_75.1.0 = _20 as u8;
_107 = _73 as u8;
_10 = _77 >= _33.1;
_24 = _61;
place!(Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1)) = (_103.fld1, _83.1);
SetDiscriminant(_36, 1);
_4 = _13;
_41 = _39.0;
Call(_121 = fn19(_75.1.0, Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).1, _13.3, Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0, _96, _12, _53.fld0.1, Field::<(u64, i8, i16)>(Variant(_55, 1), 2).0, _43, _6, _66, _13.0, (*_72), _9, _33), bb42, UnwindUnreachable())
}
bb42 = {
_39 = (_51,);
place!(Field::<*mut (([i64; 2], f64, u8), [u8; 3])>(Variant(_93, 0), 2)) = core::ptr::addr_of_mut!(_53.fld0);
_59 = Adt66::Variant1 { fld0: Field::<[u32; 3]>(Variant(_105, 1), 5),fld1: Field::<*mut ([i64; 2], f64, u8)>(Variant(_105, 1), 2) };
place!(Field::<u16>(Variant(_63, 2), 2)) = _53.fld0.0.1 as u16;
_86 = Move(_63);
SetDiscriminant(_86, 3);
_43 = _28;
_123 = _53.fld0.1;
_123 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
_117 = [_29,_20,_20,_20,_29,_29,_20,_29];
_3 = _75.2 as i128;
_1 = _76 < _13.2;
place!(Field::<(u64, i8, i16)>(Variant(_55, 1), 2)) = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0;
_15 = _21 as isize;
_72 = core::ptr::addr_of_mut!(place!(Field::<Adt50>(Variant(_86, 3), 1)).fld0);
_115.0 = [_82,_82];
SetDiscriminant(_59, 0);
place!(Field::<[u64; 4]>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 0)) = _67;
_103.fld0.0 = (_40, _121.0.1, _84);
place!(Field::<Adt50>(Variant(_86, 3), 1)) = Adt50 { fld0: _53.fld0,fld1: _103.fld0.0.1 };
_118.1 = (Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).1,);
place!(Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3)) = (_42, _118.1, _75.2, _38);
_96 = _2 + _6;
_126.fld0.0 = (*_72).0;
Goto(bb43)
}
bb43 = {
place!(Field::<(f32,)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 5)) = (_51,);
Goto(bb44)
}
bb44 = {
place!(Field::<(u64, i8, i16)>(Variant(_93, 0), 4)) = Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0;
_4.1 = _5;
_88 = !_6;
_115.0 = [_82,_82];
_99 = Adt60::Variant2 { fld0: _23,fld1: _75.1.0,fld2: _75.0,fld3: Field::<(u64, i8, i16)>(Variant(_93, 0), 4),fld4: _117,fld5: _20 };
_124 = _88;
_14 = _33.2;
_16 = [_98,_98,_33.2,_76,_13.2,_13.2,_14,_98];
place!(Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4)).0 = _103.fld0.0;
_39.0 = _38 as f32;
_84 = Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.2;
_21 = _26;
place!(Field::<Adt51>(Variant(_45, 0), 0)) = Adt51::Variant3 { fld0: _84,fld1: Move(_53) };
_19 = _103.fld0.0.2 ^ Field::<i16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 3), 0);
_132 = Field::<Adt50>(Variant(_86, 3), 1).fld0.0.1 * Field::<Adt50>(Variant(_86, 3), 1).fld0.0.1;
_91 = Field::<(u64, i8, i16)>(Variant(_93, 0), 4).0 < _103.fld1.0;
_40 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0;
_71 = _28;
Goto(bb45)
}
bb45 = {
_67 = [_121.0.0,Field::<(u64, i8, i16)>(Variant(_93, 0), 4).0,Field::<(u64, i8, i16)>(Variant(_93, 0), 4).0,Field::<(u64, i8, i16)>(Variant(_55, 1), 2).0];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = Field::<i16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 3), 0);
SetDiscriminant(Field::<Adt51>(Variant(_45, 0), 0), 2);
match Field::<usize>(Variant(_105, 1), 0) {
0 => bb37,
1 => bb21,
2 => bb11,
3 => bb46,
4 => bb47,
5 => bb48,
16617299348702177497 => bb50,
_ => bb49
}
}
bb46 = {
_5 = !_10;
_9 = -_18;
_1 = _18 != _9;
_17 = 2025963586153704372_u64 + 15644353172599995769_u64;
_7 = [_13.2,_13.2,_13.2,_14,_3,_14,_13.2,_3];
_4.2 = _13.2;
_16 = [_4.2,_3,_3,_14,_4.2,_3,_13.2,_13.2];
_1 = _14 < _14;
_4.2 = !_3;
_18 = _9;
_4 = (_13.0, _8, _13.2, _13.3);
_4 = (_13.0, _1, _3, _13.3);
_13.3 = [_20,_20,_20,_20,_20,_20,_20];
Call(RET = fn14(_1, _5, _8, _4.1, _13.2, _2, _1, _13.2), bb3, UnwindUnreachable())
}
bb47 = {
_48 = [Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.1];
_13.3 = _4.3;
_32 = [_38,_38,_38,_38];
_29 = _20 & _20;
_4.3 = [_20,_20,_29,_29,_29,_29,_20];
_41 = _51 - _39.0;
_53.fld0.1 = [_53.fld0.0.2,_53.fld0.0.2,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2 as u64;
_61 = _21;
_51 = _29 as f32;
_67 = [Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0,Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0,Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0,Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0];
_4.1 = !_10;
_10 = !_33.1;
_48 = [Field::<i8>(Variant(_36, 1), 0)];
SetDiscriminant(_22, 0);
_64 = [_35];
place!(Field::<[i32; 7]>(Variant(_47, 1), 3)) = _33.3;
_30 = _34 - _60;
place!(Field::<u128>(Variant(_45, 1), 0)) = 263026993768729398293728842712139701721_u128;
_40 = Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2).0.0;
Call(place!(Field::<((u64, i8, i16), u8)>(Variant(_47, 1), 2)).1 = core::intrinsics::bswap(_53.fld0.0.2), bb20, UnwindUnreachable())
}
bb48 = {
_12 = _62 | _2;
_75.2 = Field::<u128>(Variant(_47, 0), 1);
_37 = _13.0;
_22 = Adt63::Variant0 { fld0: _4.3 };
_31 = !_2;
SetDiscriminant(_63, 2);
_22 = Adt63::Variant1 { fld0: _69 };
_69 = core::ptr::addr_of!((*_69));
_4.1 = _35 ^ _35;
_76 = _62 as i128;
place!(Field::<u128>(Variant(_63, 2), 4)) = Field::<u128>(Variant(_47, 0), 1);
_44 = [_3,_76,_13.2,_76,_76,_33.2,_13.2,_13.2];
_53.fld0.0.0 = [3746448478020875460_i64,(-115025138500356502_i64)];
_39 = (_51,);
place!(Field::<*const [i8; 1]>(Variant(_22, 1), 0)) = _69;
_57 = _26 as isize;
_39.0 = _41;
_2 = !_31;
Goto(bb29)
}
bb49 = {
_32 = [_38,_38,_38,_38];
_30 = -_53.fld0.0.1;
_17 = _8 as u64;
_33.0 = [_17,_17,_17,_17,_17,_17];
_14 = _29 as i128;
_39.0 = _17 as f32;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
_53.fld0.1 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
_15 = _2;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
_32 = [_38,_38,_38,_38];
_31 = -_2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 | _19;
_53.fld0.0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 + Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1;
_39 = (_41,);
_36 = Adt60::Variant1 { fld0: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 };
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = _32;
_39 = (_41,);
Goto(bb17)
}
bb50 = {
_106 = [_19,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.2,Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.2,_84,Field::<(u64, i8, i16)>(Variant(_93, 0), 4).2,Field::<(u64, i8, i16)>(Variant(_55, 1), 2).2,Field::<(u64, i8, i16)>(Variant(_55, 1), 2).2,_121.0.2];
_14 = -_76;
SetDiscriminant(_99, 2);
place!(Field::<Adt58>(Variant(_105, 1), 1)) = Adt58::Variant1 { fld0: (*_72).0.0,fld1: _26,fld2: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1),fld3: _4.3 };
_46 = core::ptr::addr_of_mut!((*_46));
SetDiscriminant(Field::<Adt58>(Variant(_105, 1), 1), 2);
_53.fld0 = ((*_72).0, Field::<Adt50>(Variant(_86, 3), 1).fld0.1);
place!(Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4)).1 = _75.1.0;
_53.fld0.0 = (Field::<Adt50>(Variant(_86, 3), 1).fld0.0.0, Field::<Adt50>(Variant(_86, 3), 1).fld0.0.1, _118.1.0);
_50 = Adt65::Variant2 { fld0: _73,fld1: _46 };
_134.fld0 = (*_72);
place!(Field::<usize>(Variant(place!(Field::<Adt51>(Variant(_45, 0), 0)), 2), 5)) = !Field::<usize>(Variant(_105, 1), 0);
place!(Field::<i64>(Variant(_93, 0), 6)) = _82;
_103.fld0.0 = (Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.0, _121.0.1, Field::<(u64, i8, i16)>(Variant(_93, 0), 4).2);
place!(Field::<*mut ([i64; 2], f64, u8)>(Variant(place!(Field::<Adt51>(Variant(_45, 0), 0)), 2), 0)) = core::ptr::addr_of_mut!((*_72).0);
_118.1.0 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 & _83.1;
place!(Field::<i32>(Variant(_93, 0), 5)) = _29 * _29;
_126.fld0.1 = [_118.1.0,_103.fld0.1,_121.1];
place!(Field::<u16>(Variant(place!(Field::<Adt51>(Variant(_45, 0), 0)), 2), 2)) = _73;
_117 = [_20,_20,_20,Field::<i32>(Variant(_93, 0), 5),_20,Field::<i32>(Variant(_93, 0), 5),_29,_20];
_13.3 = [Field::<i32>(Variant(_93, 0), 5),_20,_29,_20,Field::<i32>(Variant(_93, 0), 5),_29,Field::<i32>(Variant(_93, 0), 5)];
place!(Field::<(u64, i8, i16)>(Variant(_99, 2), 3)).2 = -_103.fld0.0.2;
match Field::<i64>(Variant(_93, 0), 6) {
0 => bb10,
1 => bb16,
2 => bb36,
3 => bb46,
4 => bb51,
5 => bb52,
340282366920938463455301175275265855265 => bb54,
_ => bb53
}
}
bb51 = {
_5 = !_10;
_9 = -_18;
_1 = _18 != _9;
_17 = 2025963586153704372_u64 + 15644353172599995769_u64;
_7 = [_13.2,_13.2,_13.2,_14,_3,_14,_13.2,_3];
_4.2 = _13.2;
_16 = [_4.2,_3,_3,_14,_4.2,_3,_13.2,_13.2];
_1 = _14 < _14;
_4.2 = !_3;
_18 = _9;
_4 = (_13.0, _8, _13.2, _13.3);
_4 = (_13.0, _1, _3, _13.3);
_13.3 = [_20,_20,_20,_20,_20,_20,_20];
Call(RET = fn14(_1, _5, _8, _4.1, _13.2, _2, _1, _13.2), bb3, UnwindUnreachable())
}
bb52 = {
_2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 as isize;
_4.0 = [_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_4.0 = _13.0;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-70_i8) | (-125_i8);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 213_u8;
_27 = [62979_u16,18013_u16,61782_u16,30427_u16,28923_u16,20438_u16,48616_u16,61472_u16];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-3_i8), 10440_i16);
SetDiscriminant(_22, 1);
_33.0 = [_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_15 = _29 as isize;
_14 = _13.2 >> _13.2;
_33.3 = [_29,_29,_29,_29,_29,_29,_29];
_33.2 = !_13.2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 184_u8 >> _9;
_28 = _9 as f32;
_1 = !_8;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 157_u8;
_13.3 = _33.3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, 114_i8, 2917_i16);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -106_i8;
_27 = [24927_u16,27142_u16,13957_u16,19894_u16,25468_u16,38947_u16,2678_u16,17678_u16];
Goto(bb6)
}
bb53 = {
_20 = -_29;
_16 = _11;
_23 = [2688478197460449775_usize,6_usize];
_26 = _21;
SetDiscriminant(_22, 1);
_11 = [_14,_33.2,_33.2,_14,_33.2,_13.2,_13.2,_14];
_17 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0 * Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0;
_35 = _8;
_4.0 = [_17,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_23 = [4866044182749452171_usize,10024273107530673079_usize];
_15 = _6 >> _14;
_9 = _15;
_7 = [_3,_13.2,_33.2,_14,_13.2,_14,_33.2,_13.2];
_37 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,_17,_17,_17,_17];
_33.3 = _13.3;
_27 = [52891_u16,6890_u16,12445_u16,5946_u16,61996_u16,32955_u16,33099_u16,42215_u16];
Goto(bb8)
}
bb54 = {
place!(Field::<i32>(Variant(_93, 0), 5)) = !_29;
Goto(bb55)
}
bb55 = {
place!(Field::<char>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 1)) = _24;
_52 = Move(_50);
_83 = (Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0, Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).1);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = Field::<(u64, i8, i16)>(Variant(_105, 1), 6).2;
_27 = [Field::<u16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 2),_73,Field::<u16>(Variant(_52, 2), 0),_73,Field::<u16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 2),Field::<u16>(Variant(_52, 2), 0),Field::<u16>(Variant(_52, 2), 0),_73];
_53.fld0.0.0 = (*_72).0.0;
_50 = Move(_52);
(*_72).0.0 = _134.fld0.0.0;
_36 = Adt60::Variant2 { fld0: Field::<[usize; 2]>(Variant(_105, 1), 3),fld1: (*_68).2,fld2: Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).0,fld3: Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0,fld4: _117,fld5: _20 };
_17 = !_103.fld0.0.0;
_13.0 = [Field::<(u64, i8, i16)>(Variant(_55, 1), 2).0,Field::<(u64, i8, i16)>(Variant(_93, 0), 4).0,_83.0.0,_83.0.0,_103.fld0.0.0,Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.0];
(*_68).1 = _30;
_9 = _12 ^ _88;
_21 = _26;
match Field::<usize>(Variant(_105, 1), 0) {
0 => bb46,
1 => bb2,
2 => bb27,
3 => bb44,
4 => bb52,
5 => bb56,
16617299348702177497 => bb58,
_ => bb57
}
}
bb56 = {
_2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 as isize;
_4.0 = [_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_4.0 = _13.0;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-70_i8) | (-125_i8);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 213_u8;
_27 = [62979_u16,18013_u16,61782_u16,30427_u16,28923_u16,20438_u16,48616_u16,61472_u16];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-3_i8), 10440_i16);
SetDiscriminant(_22, 1);
_33.0 = [_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_15 = _29 as isize;
_14 = _13.2 >> _13.2;
_33.3 = [_29,_29,_29,_29,_29,_29,_29];
_33.2 = !_13.2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 184_u8 >> _9;
_28 = _9 as f32;
_1 = !_8;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 157_u8;
_13.3 = _33.3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, 114_i8, 2917_i16);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -106_i8;
_27 = [24927_u16,27142_u16,13957_u16,19894_u16,25468_u16,38947_u16,2678_u16,17678_u16];
Goto(bb6)
}
bb57 = {
_32 = [_38,_38,_38,_38];
_30 = -_53.fld0.0.1;
_17 = _8 as u64;
_33.0 = [_17,_17,_17,_17,_17,_17];
_14 = _29 as i128;
_39.0 = _17 as f32;
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = [_38,_38,_38,_38];
_53.fld0.1 = [Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1];
_15 = _2;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
_32 = [_38,_38,_38,_38];
_31 = -_2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = _19 | _19;
_53.fld0.0.2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 + Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1;
_39 = (_41,);
_36 = Adt60::Variant1 { fld0: Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.1 };
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, _53.fld1, _19);
place!(Field::<[u32; 4]>(Variant(RET, 1), 0)) = _32;
_39 = (_41,);
Goto(bb17)
}
bb58 = {
_94 = Field::<*mut ([i64; 2], f64, u8)>(Variant(_105, 1), 2);
_87 = _65 as isize;
_24 = _26;
place!(Field::<[i32; 3]>(Variant(_99, 2), 2)) = [_20,_29,Field::<i32>(Variant(_36, 2), 5)];
_121 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1);
place!(Field::<*mut ([i64; 2], f64, u8)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 4)) = core::ptr::addr_of_mut!((*_72).0);
_22 = Adt63::Variant1 { fld0: _69 };
_115 = ((*_68).0, (*_72).0.1, (*_94).2);
place!(Field::<[i32; 8]>(Variant(_99, 2), 4)) = [Field::<i32>(Variant(_93, 0), 5),_20,_29,Field::<i32>(Variant(_93, 0), 5),Field::<i32>(Variant(_93, 0), 5),Field::<i32>(Variant(_36, 2), 5),_20,_29];
place!(Field::<[i64; 2]>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 6)) = [Field::<i64>(Variant(_93, 0), 6),Field::<i64>(Variant(_93, 0), 6)];
SetDiscriminant(_50, 1);
_81 = _121.0.0;
_135 = core::ptr::addr_of_mut!(_66);
_118.2 = Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).2 | Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).2;
_136 = -_20;
_134.fld0.0.1 = (*_94).1 * _115.1;
_118.1 = ((*_68).2,);
_134.fld0.0 = ((*_72).0.0, _53.fld0.0.1, Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).1.0);
_87 = _62;
_138 = Field::<[u32; 4]>(Variant(RET, 1), 0);
_121 = (Field::<(u64, i8, i16)>(Variant(_93, 0), 4), (*_68).2);
_110 = [_76,_13.2,_33.2,_98,_14,_98,_76,_14];
match _82 {
340282366920938463455301175275265855265 => bb60,
_ => bb59
}
}
bb59 = {
_2 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1 as isize;
_4.0 = [_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
_4.0 = _13.0;
_24 = _21;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-70_i8) | (-125_i8);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 213_u8;
_27 = [62979_u16,18013_u16,61782_u16,30427_u16,28923_u16,20438_u16,48616_u16,61472_u16];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, (-3_i8), 10440_i16);
SetDiscriminant(_22, 1);
_33.0 = [_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
_15 = _29 as isize;
_14 = _13.2 >> _13.2;
_33.3 = [_29,_29,_29,_29,_29,_29,_29];
_33.2 = !_13.2;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 184_u8 >> _9;
_28 = _9 as f32;
_1 = !_8;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = 157_u8;
_13.3 = _33.3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0 = (_17, 114_i8, 2917_i16);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = -106_i8;
_27 = [24927_u16,27142_u16,13957_u16,19894_u16,25468_u16,38947_u16,2678_u16,17678_u16];
Goto(bb6)
}
bb60 = {
_121 = _83;
_53.fld0.1 = [_83.1,_103.fld0.1,Field::<u8>(Variant(_36, 2), 1)];
_103.fld1 = (Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.0, _121.0.1, Field::<(u64, i8, i16)>(Variant(_93, 0), 4).2);
_127 = [_56,Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5),Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5),Field::<usize>(Variant(_105, 1), 0),Field::<usize>(Variant(_105, 1), 0),_56,Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5)];
SetDiscriminant(_36, 2);
_61 = _79;
_111 = _28 as u8;
_53 = Adt50 { fld0: Field::<Adt50>(Variant(_86, 3), 1).fld0,fld1: _121.0.1 };
_121.1 = _82 as u8;
_97 = Field::<i64>(Variant(_93, 0), 6) << Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.2;
place!(Field::<*mut (([i64; 2], f64, u8), [u8; 3])>(Variant(_59, 0), 1)) = _72;
_108 = !_77;
place!(Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4)).0.2 = _103.fld1.2;
_139 = _61;
_71 = _41 - _51;
SetDiscriminant(_22, 1);
_19 = Field::<Adt50>(Variant(_86, 3), 1).fld0.0.1 as i16;
_113 = [_13.2,_98,_33.2];
(*_68) = (_134.fld0.0.0, (*_72).0.1, Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).1);
_121.0.2 = _43 as i16;
place!(Field::<i16>(Variant(_45, 0), 1)) = -Field::<(u64, i8, i16)>(Variant(_93, 0), 4).2;
_49 = _21 as isize;
_96 = -_87;
_103.fld0.0.1 = _53.fld1 ^ _121.0.1;
match Field::<u16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 2) {
0 => bb29,
1 => bb24,
46908 => bb62,
_ => bb61
}
}
bb61 = {
_4.0 = [_17,_17,_17,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0,_17];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = 7261_i16;
_16 = [_3,_4.2,_4.2,_3,_3,_4.2,_3,_3];
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.1 = (-113_i8);
_20 = 885663014_i32;
_5 = !_10;
_12 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0 as isize;
_29 = _20 << _2;
_26 = _24;
_13.2 = _18 as i128;
_10 = _13.2 < _4.2;
_13.3 = [_29,_29,_29,_29,_29,_29,_29];
_24 = _21;
_4.1 = _13.1;
Goto(bb5)
}
bb62 = {
(*_94).2 = !Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).1;
place!(Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4)).0 = (Field::<(u64, i8, i16)>(Variant(_55, 1), 2).0, _103.fld1.1, Field::<i16>(Variant(_45, 0), 1));
place!(Field::<[u64; 4]>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 0)) = [_17,Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.0,Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.0,Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).0.0];
place!(Field::<u8>(Variant(_36, 2), 1)) = _38 as u8;
place!(Field::<(u64, i8, i16)>(Variant(_36, 2), 3)).2 = !_121.0.2;
_83.0.0 = !Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.0;
place!(Field::<[usize; 7]>(Variant(_59, 0), 0)) = [_56,Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5),Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5),Field::<usize>(Variant(_105, 1), 0),Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5),Field::<usize>(Variant(_105, 1), 0),_56];
place!(Field::<(u64, i8, i16)>(Variant(_36, 2), 3)) = _103.fld0.0;
_115.0 = [_97,_97];
_7 = [_33.2,_98,_98,_76,_33.2,_33.2,_98,_98];
_148 = !Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).2;
_55 = Adt51::Variant2 { fld0: _94,fld1: Field::<[u64; 4]>(Variant(Field::<Adt58>(Variant(_105, 1), 1), 2), 0),fld2: _73,fld3: Field::<[u32; 3]>(Variant(_105, 1), 5),fld4: _75.2,fld5: _56 };
(*_46) = [_10];
_31 = Field::<u128>(Variant(_55, 2), 4) as isize;
place!(Field::<(u64, i8, i16)>(Variant(_36, 2), 3)).0 = !_121.0.0;
_133.0 = (_103.fld0.0.0, _103.fld0.0.1, Field::<(u64, i8, i16)>(Variant(_93, 0), 4).2);
place!(Field::<u128>(Variant(place!(Field::<Adt51>(Variant(_45, 0), 0)), 2), 4)) = _148;
place!(Field::<[i32; 3]>(Variant(_99, 2), 2)) = [_136,Field::<i32>(Variant(_93, 0), 5),_20];
match Field::<i64>(Variant(_93, 0), 6) {
0 => bb25,
340282366920938463455301175275265855265 => bb64,
_ => bb63
}
}
bb63 = {
SetDiscriminant(_45, 1);
_82 = (-8073432156502356191_i64);
_9 = !_31;
_79 = _21;
_18 = _38 as isize;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = !_17;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).1 = _75.1.0 << _15;
place!(Field::<i8>(Variant(_36, 1), 0)) = _21 as i8;
_3 = -_33.2;
_32 = Field::<[u32; 4]>(Variant(RET, 1), 0);
SetDiscriminant(_47, 0);
_31 = -_12;
_76 = _4.2 | _3;
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.0 = _40;
_7 = [_3,_33.2,_3,_13.2,_76,_4.2,_33.2,_3];
_47 = Adt58::Variant0 { fld0: _53.fld0.0.0,fld1: _75.2 };
place!(Field::<usize>(Variant(_63, 2), 5)) = !_56;
_62 = -_9;
_83.0.0 = _40;
_46 = core::ptr::addr_of_mut!(_66);
_29 = _20 << _3;
_68 = core::ptr::addr_of_mut!(_53.fld0.0);
_5 = !_13.1;
Goto(bb30)
}
bb64 = {
(*_68).0 = [_97,_97];
_53.fld1 = Field::<(u64, i8, i16)>(Variant(_36, 2), 3).1 + _133.0.1;
place!(Field::<(u64, i8, i16)>(Variant(_36, 2), 3)).0 = _133.0.0;
Goto(bb65)
}
bb65 = {
place!(Field::<Adt50>(Variant(_86, 3), 1)).fld1 = _35 as i8;
_53.fld0.0.1 = Field::<Adt50>(Variant(_86, 3), 1).fld0.0.1 + _126.fld0.0.1;
place!(Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3)) = (_75.0, _118.1, _148, _38);
place!(Field::<i64>(Variant(_93, 0), 6)) = _20 as i64;
_143 = !_33.1;
_126.fld1 = Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.1 & _121.0.1;
_118.3 = !_38;
(*_135) = _64;
place!(Field::<f64>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 7)) = (*_68).1 + _53.fld0.0.1;
place!(Field::<u16>(Variant(_55, 2), 2)) = _83.1 as u16;
_133 = (_103.fld1, Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1).1);
_37 = [Field::<(u64, i8, i16)>(Variant(_36, 2), 3).0,Field::<(u64, i8, i16)>(Variant(_36, 2), 3).0,_40,_103.fld0.0.0,Field::<(u64, i8, i16)>(Variant(_36, 2), 3).0,_133.0.0];
_111 = _97 as u8;
_107 = Field::<i32>(Variant(_93, 0), 5) as u8;
_28 = -_43;
(*_68).1 = Field::<f64>(Variant(Field::<Adt58>(Variant(_105, 1), 1), 2), 7) * Field::<f64>(Variant(Field::<Adt58>(Variant(_105, 1), 1), 2), 7);
_120 = _53.fld0.0.1;
_57 = -_88;
place!(Field::<(f32,)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 5)) = (_71,);
_96 = _62 - _9;
_81 = Field::<(u64, i8, i16)>(Variant(_36, 2), 3).0;
_141 = _56 & Field::<usize>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 5);
_45 = Adt56::Variant0 { fld0: Move(_55),fld1: Field::<(u64, i8, i16)>(Variant(_36, 2), 3).2 };
_28 = _71 + _41;
match _73 {
0 => bb36,
1 => bb24,
2 => bb66,
46908 => bb68,
_ => bb67
}
}
bb66 = {
_94 = Field::<*mut ([i64; 2], f64, u8)>(Variant(_105, 1), 2);
_87 = _65 as isize;
_24 = _26;
place!(Field::<[i32; 3]>(Variant(_99, 2), 2)) = [_20,_29,Field::<i32>(Variant(_36, 2), 5)];
_121 = Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1);
place!(Field::<*mut ([i64; 2], f64, u8)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 4)) = core::ptr::addr_of_mut!((*_72).0);
_22 = Adt63::Variant1 { fld0: _69 };
_115 = ((*_68).0, (*_72).0.1, (*_94).2);
place!(Field::<[i32; 8]>(Variant(_99, 2), 4)) = [Field::<i32>(Variant(_93, 0), 5),_20,_29,Field::<i32>(Variant(_93, 0), 5),Field::<i32>(Variant(_93, 0), 5),Field::<i32>(Variant(_36, 2), 5),_20,_29];
place!(Field::<[i64; 2]>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 6)) = [Field::<i64>(Variant(_93, 0), 6),Field::<i64>(Variant(_93, 0), 6)];
SetDiscriminant(_50, 1);
_81 = _121.0.0;
_135 = core::ptr::addr_of_mut!(_66);
_118.2 = Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).2 | Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).2;
_136 = -_20;
_134.fld0.0.1 = (*_94).1 * _115.1;
_118.1 = ((*_68).2,);
_134.fld0.0 = ((*_72).0.0, _53.fld0.0.1, Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).1.0);
_87 = _62;
_138 = Field::<[u32; 4]>(Variant(RET, 1), 0);
_121 = (Field::<(u64, i8, i16)>(Variant(_93, 0), 4), (*_68).2);
_110 = [_76,_13.2,_33.2,_98,_14,_98,_76,_14];
match _82 {
340282366920938463455301175275265855265 => bb60,
_ => bb59
}
}
bb67 = {
place!(Field::<char>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 1)) = _24;
_52 = Move(_50);
_83 = (Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0, Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).1);
place!(Field::<((u64, i8, i16), u8)>(Variant(RET, 1), 1)).0.2 = Field::<(u64, i8, i16)>(Variant(_105, 1), 6).2;
_27 = [Field::<u16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 2),_73,Field::<u16>(Variant(_52, 2), 0),_73,Field::<u16>(Variant(Field::<Adt51>(Variant(_45, 0), 0), 2), 2),Field::<u16>(Variant(_52, 2), 0),Field::<u16>(Variant(_52, 2), 0),_73];
_53.fld0.0.0 = (*_72).0.0;
_50 = Move(_52);
(*_72).0.0 = _134.fld0.0.0;
_36 = Adt60::Variant2 { fld0: Field::<[usize; 2]>(Variant(_105, 1), 3),fld1: (*_68).2,fld2: Field::<([i32; 3], (u8,), u128, u32)>(Variant(_93, 0), 3).0,fld3: Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0,fld4: _117,fld5: _20 };
_17 = !_103.fld0.0.0;
_13.0 = [Field::<(u64, i8, i16)>(Variant(_55, 1), 2).0,Field::<(u64, i8, i16)>(Variant(_93, 0), 4).0,_83.0.0,_83.0.0,_103.fld0.0.0,Field::<((u64, i8, i16), u8)>(Variant(_55, 1), 1).0.0];
(*_68).1 = _30;
_9 = _12 ^ _88;
_21 = _26;
match Field::<usize>(Variant(_105, 1), 0) {
0 => bb46,
1 => bb2,
2 => bb27,
3 => bb44,
4 => bb52,
5 => bb56,
16617299348702177497 => bb58,
_ => bb57
}
}
bb68 = {
SetDiscriminant(_45, 0);
_96 = _62 << _111;
_134 = Adt50 { fld0: (*_72),fld1: _126.fld1 };
_153 = _65 ^ _33.1;
Goto(bb69)
}
bb69 = {
_72 = core::ptr::addr_of_mut!(_53.fld0);
_93 = Adt52::Variant1 { fld0: Field::<*mut (([i64; 2], f64, u8), [u8; 3])>(Variant(_59, 0), 1) };
_55 = Adt51::Variant2 { fld0: _68,fld1: _67,fld2: _73,fld3: Field::<[u32; 3]>(Variant(_105, 1), 5),fld4: _75.2,fld5: _141 };
_36 = Adt60::Variant1 { fld0: Field::<((u64, i8, i16), u8)>(Variant(_105, 1), 4).0.1 };
_78 = _97 as isize;
place!(Field::<*mut [i128; 3]>(Variant(RET, 1), 2)) = core::ptr::addr_of_mut!(_113);
_33.0 = [_121.0.0,_81,_17,_133.0.0,_103.fld1.0,Field::<(u64, i8, i16)>(Variant(_105, 1), 6).0];
_134.fld0.0.2 = _83.1 >> _83.0.1;
_103.fld1 = (_17, _133.0.1, Field::<(u64, i8, i16)>(Variant(_99, 2), 3).2);
place!(Field::<Adt56>(Variant(_59, 0), 5)) = Adt56::Variant0 { fld0: Move(_55),fld1: Field::<(u64, i8, i16)>(Variant(_99, 2), 3).2 };
_39 = Field::<(f32,)>(Variant(Field::<Adt58>(Variant(_105, 1), 1), 2), 5);
(*_72).0.0 = [_97,_97];
(*_94).1 = -_30;
_62 = _18;
place!(Field::<(f32,)>(Variant(place!(Field::<Adt58>(Variant(_105, 1), 1)), 2), 5)) = (_28,);
_61 = _26;
Goto(bb70)
}
bb70 = {
Call(_158 = dump_var(13_usize, 11_usize, Move(_11), 61_usize, Move(_61), 10_usize, Move(_10), 83_usize, Move(_83)), bb71, UnwindUnreachable())
}
bb71 = {
Call(_158 = dump_var(13_usize, 108_usize, Move(_108), 89_usize, Move(_89), 38_usize, Move(_38), 76_usize, Move(_76)), bb72, UnwindUnreachable())
}
bb72 = {
Call(_158 = dump_var(13_usize, 107_usize, Move(_107), 5_usize, Move(_5), 21_usize, Move(_21), 17_usize, Move(_17)), bb73, UnwindUnreachable())
}
bb73 = {
Call(_158 = dump_var(13_usize, 26_usize, Move(_26), 133_usize, Move(_133), 70_usize, Move(_70), 33_usize, Move(_33)), bb74, UnwindUnreachable())
}
bb74 = {
Call(_158 = dump_var(13_usize, 106_usize, Move(_106), 95_usize, Move(_95), 18_usize, Move(_18), 56_usize, Move(_56)), bb75, UnwindUnreachable())
}
bb75 = {
Call(_158 = dump_var(13_usize, 62_usize, Move(_62), 141_usize, Move(_141), 148_usize, Move(_148), 15_usize, Move(_15)), bb76, UnwindUnreachable())
}
bb76 = {
Call(_158 = dump_var(13_usize, 13_usize, Move(_13), 23_usize, Move(_23), 67_usize, Move(_67), 79_usize, Move(_79)), bb77, UnwindUnreachable())
}
bb77 = {
Call(_158 = dump_var(13_usize, 48_usize, Move(_48), 91_usize, Move(_91), 138_usize, Move(_138), 77_usize, Move(_77)), bb78, UnwindUnreachable())
}
bb78 = {
Call(_158 = dump_var(13_usize, 117_usize, Move(_117), 12_usize, Move(_12), 1_usize, Move(_1), 29_usize, Move(_29)), bb79, UnwindUnreachable())
}
bb79 = {
Call(_158 = dump_var(13_usize, 153_usize, Move(_153), 64_usize, Move(_64), 111_usize, Move(_111), 73_usize, Move(_73)), bb80, UnwindUnreachable())
}
bb80 = {
Call(_158 = dump_var(13_usize, 66_usize, Move(_66), 159_usize, _159, 159_usize, _159, 159_usize, _159), bb81, UnwindUnreachable())
}
bb81 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: i128,mut _6: isize,mut _7: bool,mut _8: i128) -> Adt54 {
mir! {
type RET = Adt54;
let _9: [usize; 7];
let _10: Adt65;
let _11: [i32; 8];
let _12: ([i64; 2], f64, u8);
let _13: f32;
let _14: isize;
let _15: *const [u8; 3];
let _16: (([i64; 2], f64, u8), [u8; 3]);
let _17: ();
let _18: ();
{
_5 = _8 & _8;
_5 = _8;
_9 = [13396111336398685287_usize,16472974534100924355_usize,0_usize,5_usize,18112611706848155641_usize,7_usize,0_usize];
_8 = 3930413561_u32 as i128;
_5 = -_8;
_1 = !_7;
_4 = !_2;
_7 = !_3;
_2 = _7 | _7;
_9 = [7_usize,11543410303284354385_usize,16192078166395708054_usize,4_usize,4_usize,4_usize,10295340744814414237_usize];
_2 = _1;
_2 = _3;
_8 = _5 >> _6;
_5 = 3061578371_u32 as i128;
_6 = (-9223372036854775808_isize) << _8;
_9 = [3_usize,12103287790160659672_usize,6924758759241909627_usize,0_usize,3_usize,17492676567201765767_usize,2_usize];
_9 = [10103423483491026378_usize,6_usize,2398175225435885679_usize,1_usize,0_usize,7_usize,1_usize];
_11 = [(-2055215422_i32),(-321550153_i32),1285406680_i32,(-1496456349_i32),758029887_i32,68533961_i32,(-101288666_i32),239862215_i32];
_6 = !84_isize;
_7 = _1;
_7 = _3 ^ _1;
_7 = !_3;
Call(_4 = fn15(_7, _8, _7, _7, _2, _3, _1, _3), bb1, UnwindUnreachable())
}
bb1 = {
_4 = _3 < _2;
_3 = _4;
_5 = 1706685510_u32 as i128;
_12.2 = !83_u8;
_3 = !_4;
_7 = _3;
Goto(bb2)
}
bb2 = {
_12.2 = 47_u8;
_13 = 6867007721645184056_u64 as f32;
Call(RET = fn16(_3, _2, _4, _8, _7, _8, _11, _2, _4, _3, _1, _4, _2, _3), bb3, UnwindUnreachable())
}
bb3 = {
_12.1 = 5350491123731902510_usize as f64;
_10 = Adt65::Variant2 { fld0: 11628_u16,fld1: Field::<*mut [bool; 1]>(Variant(RET, 0), 2) };
_12.1 = Field::<(u64, i8, i16)>(Variant(RET, 0), 0).0 as f64;
_6 = !(-118_isize);
place!(Field::<(u64, i8, i16)>(Variant(RET, 0), 0)).2 = (-23467_i16) ^ (-10588_i16);
place!(Field::<[i32; 8]>(Variant(RET, 0), 6)) = [(-265978130_i32),(-1616634261_i32),1915474523_i32,1311377930_i32,5948271_i32,(-2117355238_i32),(-1571291528_i32),254738034_i32];
_11 = Field::<[i32; 8]>(Variant(RET, 0), 6);
place!(Field::<(u64, i8, i16)>(Variant(RET, 0), 0)).0 = !13319297931990320646_u64;
_16.1 = [_12.2,_12.2,_12.2];
Goto(bb4)
}
bb4 = {
Call(_17 = dump_var(14_usize, 11_usize, Move(_11), 7_usize, Move(_7), 9_usize, Move(_9), 5_usize, Move(_5)), bb5, UnwindUnreachable())
}
bb5 = {
Call(_17 = dump_var(14_usize, 3_usize, Move(_3), 18_usize, _18, 18_usize, _18, 18_usize, _18), bb6, UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: i128,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool) -> bool {
mir! {
type RET = bool;
let _9: ([i32; 3], (u8,), u128, u32);
let _10: ();
let _11: ();
{
RET = _8 < _8;
RET = _3;
_8 = !_5;
RET = _3 > _3;
RET = _7;
RET = _1 < _8;
_1 = _3 & _8;
_9.1 = (188_u8,);
_9.1 = (169_u8,);
_8 = !_1;
_3 = !_6;
_3 = _7;
Goto(bb1)
}
bb1 = {
Call(_10 = dump_var(15_usize, 4_usize, Move(_4), 2_usize, Move(_2), 1_usize, Move(_1), 5_usize, Move(_5)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: i128,mut _5: bool,mut _6: i128,mut _7: [i32; 8],mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool,mut _13: bool,mut _14: bool) -> Adt54 {
mir! {
type RET = Adt54;
let _15: i16;
let _16: bool;
let _17: Adt61;
let _18: Adt61;
let _19: [u16; 4];
let _20: u8;
let _21: Adt63;
let _22: isize;
let _23: bool;
let _24: *mut [i128; 3];
let _25: f64;
let _26: Adt63;
let _27: [bool; 1];
let _28: i16;
let _29: isize;
let _30: ((u64, i8, i16), u8);
let _31: u32;
let _32: Adt56;
let _33: isize;
let _34: bool;
let _35: [i8; 1];
let _36: *mut [bool; 1];
let _37: char;
let _38: f64;
let _39: char;
let _40: isize;
let _41: f32;
let _42: Adt53;
let _43: bool;
let _44: [u32; 3];
let _45: i32;
let _46: [usize; 7];
let _47: *mut ([i64; 2], f64, u8);
let _48: f32;
let _49: i16;
let _50: u16;
let _51: Adt61;
let _52: i32;
let _53: [u8; 3];
let _54: i128;
let _55: isize;
let _56: i8;
let _57: i64;
let _58: *mut [bool; 1];
let _59: Adt64;
let _60: f32;
let _61: [usize; 7];
let _62: f32;
let _63: isize;
let _64: [usize; 7];
let _65: f64;
let _66: isize;
let _67: ([i32; 3], (u8,), u128, u32);
let _68: Adt62;
let _69: Adt62;
let _70: (([i64; 2], f64, u8), [u8; 3]);
let _71: [u32; 3];
let _72: [u16; 8];
let _73: i64;
let _74: u32;
let _75: [usize; 7];
let _76: [i32; 7];
let _77: [u32; 3];
let _78: [i32; 3];
let _79: ([u64; 6], bool, i128, [i32; 7]);
let _80: u32;
let _81: i128;
let _82: isize;
let _83: i64;
let _84: isize;
let _85: f32;
let _86: [u32; 3];
let _87: (f32,);
let _88: Adt56;
let _89: u8;
let _90: usize;
let _91: isize;
let _92: (f32,);
let _93: bool;
let _94: u8;
let _95: i128;
let _96: (f32,);
let _97: f64;
let _98: char;
let _99: isize;
let _100: ((u64, i8, i16), u8);
let _101: [i32; 8];
let _102: isize;
let _103: Adt59;
let _104: [i8; 1];
let _105: u32;
let _106: isize;
let _107: [u16; 4];
let _108: isize;
let _109: Adt50;
let _110: Adt53;
let _111: u16;
let _112: Adt50;
let _113: i8;
let _114: f32;
let _115: ([i32; 3], (u8,), u128, u32);
let _116: u16;
let _117: u32;
let _118: u16;
let _119: isize;
let _120: char;
let _121: (u8,);
let _122: ([i32; 3], (u8,), u128, u32);
let _123: i32;
let _124: Adt58;
let _125: [i32; 8];
let _126: f32;
let _127: Adt56;
let _128: (f32,);
let _129: [usize; 2];
let _130: [u16; 4];
let _131: Adt51;
let _132: f32;
let _133: Adt58;
let _134: Adt51;
let _135: isize;
let _136: Adt50;
let _137: i32;
let _138: (([i64; 2], f64, u8), [u8; 3]);
let _139: [i16; 8];
let _140: u16;
let _141: isize;
let _142: (u8,);
let _143: i64;
let _144: bool;
let _145: i16;
let _146: bool;
let _147: f64;
let _148: Adt50;
let _149: u128;
let _150: Adt58;
let _151: Adt58;
let _152: f64;
let _153: ();
let _154: ();
{
_12 = !_14;
_7 = [(-2082283884_i32),(-1791414381_i32),632929939_i32,(-1839722051_i32),(-2093361960_i32),807801637_i32,366901738_i32,(-453539172_i32)];
_14 = !_3;
_9 = _11 <= _5;
_11 = _12;
_1 = _12;
_11 = _5 != _13;
_13 = _1;
_9 = _12 | _10;
_8 = _11;
_15 = !(-14726_i16);
_3 = _5;
_16 = _2 < _9;
_1 = !_13;
Call(_4 = core::intrinsics::bswap(_6), bb1, UnwindUnreachable())
}
bb1 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb2 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb3 = {
_11 = _1;
_16 = _12 | _9;
_23 = _12;
_13 = _11;
_19 = [27492_u16,39652_u16,37845_u16,8909_u16];
SetDiscriminant(_21, 0);
_12 = _8;
_15 = -(-14069_i16);
_15 = -(-4866_i16);
_25 = _15 as f64;
_19 = [25588_u16,52914_u16,15180_u16,34517_u16];
_23 = _4 >= _4;
place!(Field::<[i32; 7]>(Variant(_21, 0), 0)) = [(-912901739_i32),(-1115958910_i32),270244258_i32,196050039_i32,671342847_i32,1383060936_i32,404398727_i32];
_10 = _14;
_4 = '\u{8bbfc}' as i128;
_14 = !_9;
_12 = _13 != _2;
_14 = _5 <= _5;
SetDiscriminant(_21, 1);
_3 = _13;
_10 = _16 & _8;
_4 = _6 - _6;
_13 = _12;
_15 = 18259_i16;
_22 = (-9223372036854775808_isize);
_13 = _1;
_15 = _10 as i16;
_1 = _3 & _10;
_6 = _4;
Goto(bb4)
}
bb4 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb5 = {
_14 = !_23;
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb6 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb7 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb8 = {
_3 = _9;
_1 = !_14;
_5 = !_2;
match _20 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
91 => bb17,
_ => bb16
}
}
bb9 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb10 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb11 = {
_14 = !_23;
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb12 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb13 = {
_11 = _1;
_16 = _12 | _9;
_23 = _12;
_13 = _11;
_19 = [27492_u16,39652_u16,37845_u16,8909_u16];
SetDiscriminant(_21, 0);
_12 = _8;
_15 = -(-14069_i16);
_15 = -(-4866_i16);
_25 = _15 as f64;
_19 = [25588_u16,52914_u16,15180_u16,34517_u16];
_23 = _4 >= _4;
place!(Field::<[i32; 7]>(Variant(_21, 0), 0)) = [(-912901739_i32),(-1115958910_i32),270244258_i32,196050039_i32,671342847_i32,1383060936_i32,404398727_i32];
_10 = _14;
_4 = '\u{8bbfc}' as i128;
_14 = !_9;
_12 = _13 != _2;
_14 = _5 <= _5;
SetDiscriminant(_21, 1);
_3 = _13;
_10 = _16 & _8;
_4 = _6 - _6;
_13 = _12;
_15 = 18259_i16;
_22 = (-9223372036854775808_isize);
_13 = _1;
_15 = _10 as i16;
_1 = _3 & _10;
_6 = _4;
Goto(bb4)
}
bb14 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb15 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb16 = {
Return()
}
bb17 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb18 = {
Return()
}
bb19 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb20 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb21 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb22 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb23 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb24 = {
_3 = _9;
_1 = !_14;
_5 = !_2;
match _20 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
91 => bb17,
_ => bb16
}
}
bb25 = {
_14 = !_23;
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb26 = {
_6 = '\u{27841}' as i128;
_20 = 160_u8;
_10 = _9 >= _8;
_16 = _9;
_3 = _16;
_12 = !_10;
_11 = _23;
_27 = [_14];
_25 = 23347_u16 as f64;
_5 = _15 != _15;
_11 = _3;
_23 = !_2;
_8 = _16 == _12;
_19 = [33056_u16,13945_u16,32155_u16,14917_u16];
_19 = [7543_u16,904_u16,60298_u16,59825_u16];
_7 = [(-9143745_i32),1561391329_i32,1567389857_i32,2057547258_i32,1424704130_i32,(-1593908142_i32),(-726993276_i32),(-1066305751_i32)];
_3 = _16;
_5 = _2 != _11;
match _22 {
0 => bb12,
1 => bb27,
2 => bb28,
3 => bb29,
4 => bb30,
340282366920938463454151235394913435648 => bb32,
_ => bb31
}
}
bb27 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb28 = {
_14 = !_23;
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb29 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb30 = {
_3 = _9;
_1 = !_14;
_5 = !_2;
match _20 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
91 => bb17,
_ => bb16
}
}
bb31 = {
_14 = !_23;
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb32 = {
_6 = _15 as i128;
_28 = _15;
_16 = _12;
_16 = _12 <= _5;
_30.0.0 = 8218910863502688981_u64;
_28 = !_15;
_3 = _10 == _12;
_10 = !_14;
_30.0.0 = 13921661225053166416_u64;
_10 = !_13;
_2 = !_13;
_30.0.1 = (-44_i8);
match _20 {
0 => bb30,
1 => bb28,
2 => bb33,
3 => bb34,
4 => bb35,
5 => bb36,
6 => bb37,
160 => bb39,
_ => bb38
}
}
bb33 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb34 = {
_3 = _9;
_1 = !_14;
_5 = !_2;
match _20 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
91 => bb17,
_ => bb16
}
}
bb35 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb36 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb37 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb38 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb39 = {
_30.0.2 = !_15;
_12 = _14;
_31 = 2554927846_u32;
_3 = _13;
_22 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_12 = !_11;
_6 = _4;
_29 = 2041396068361896578_usize as isize;
_30.0.1 = !(-40_i8);
_16 = _13;
_25 = _30.0.0 as f64;
_30.0.2 = -_15;
_10 = _2;
_8 = _11;
_10 = _16 > _14;
_13 = _28 >= _28;
_3 = _9;
_10 = _3;
_31 = !1730834676_u32;
_30.1 = _20;
_15 = _28;
_19 = [46962_u16,13278_u16,20949_u16,47530_u16];
_34 = _1 & _5;
Goto(bb40)
}
bb40 = {
_19 = [53389_u16,38957_u16,42683_u16,56140_u16];
_13 = !_11;
_38 = _22 as f64;
_16 = _4 <= _6;
_38 = _25 - _25;
_1 = !_13;
_39 = '\u{12909}';
_35 = [_30.0.1];
_5 = !_34;
_13 = _9;
_33 = 11075517188814595699_usize as isize;
_5 = !_1;
Goto(bb41)
}
bb41 = {
_36 = core::ptr::addr_of_mut!(_27);
(*_36) = [_1];
_37 = _39;
_12 = !_5;
_9 = !_2;
_35 = [_30.0.1];
_28 = !_30.0.2;
_14 = _23 == _34;
_30.0 = (7047059921767556732_u64, 46_i8, _28);
_41 = _30.0.0 as f32;
_40 = _33;
_38 = _25 - _25;
_28 = _30.0.2 | _30.0.2;
match _30.0.0 {
0 => bb1,
7047059921767556732 => bb42,
_ => bb10
}
}
bb42 = {
_2 = !_12;
_39 = _37;
_27 = [_9];
_12 = !_3;
_43 = !_16;
_32 = Adt56::Variant1 { fld0: 260619416387319475859218975332708785291_u128 };
_11 = !_3;
place!(Field::<u128>(Variant(_32, 1), 0)) = _25 as u128;
_9 = _30.0.0 > _30.0.0;
match _30.0.0 {
0 => bb9,
1 => bb7,
2 => bb20,
3 => bb32,
7047059921767556732 => bb44,
_ => bb43
}
}
bb43 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb44 = {
_29 = _31 as isize;
_16 = !_10;
(*_36) = [_12];
_30.0.0 = 6587564541293505968_u64;
_43 = !_11;
_3 = _34;
_4 = _37 as i128;
Goto(bb45)
}
bb45 = {
_8 = _1;
_31 = !3051602747_u32;
_30.0.0 = 12618992596695280220_u64 ^ 12863337284335569082_u64;
_30.0.1 = -(-61_i8);
_12 = !_14;
_33 = _30.0.1 as isize;
_39 = _37;
_7 = [(-2111869119_i32),(-1965563372_i32),887327871_i32,709484820_i32,(-914298396_i32),(-716081119_i32),872317540_i32,159037880_i32];
_4 = _6;
_15 = 22439_u16 as i16;
_28 = !_30.0.2;
_36 = core::ptr::addr_of_mut!((*_36));
place!(Field::<u128>(Variant(_32, 1), 0)) = 166021320977921352313260499042942626416_u128 ^ 134119719934465657173479609300207564502_u128;
_44 = [_31,_31,_31];
_1 = !_12;
_30.0.2 = _22 as i16;
place!(Field::<*const [i8; 1]>(Variant(_21, 1), 0)) = core::ptr::addr_of!(_35);
_5 = _43 == _2;
(*_36) = [_16];
_37 = _39;
(*_36) = [_12];
_30.0 = (6152448790285077143_u64, 11_i8, _28);
(*_36) = [_2];
_26 = Move(_21);
(*_36) = [_2];
(*_36) = [_1];
match _30.0.0 {
0 => bb46,
1 => bb47,
6152448790285077143 => bb49,
_ => bb48
}
}
bb46 = {
Return()
}
bb47 = {
_11 = _1;
_16 = _12 | _9;
_23 = _12;
_13 = _11;
_19 = [27492_u16,39652_u16,37845_u16,8909_u16];
SetDiscriminant(_21, 0);
_12 = _8;
_15 = -(-14069_i16);
_15 = -(-4866_i16);
_25 = _15 as f64;
_19 = [25588_u16,52914_u16,15180_u16,34517_u16];
_23 = _4 >= _4;
place!(Field::<[i32; 7]>(Variant(_21, 0), 0)) = [(-912901739_i32),(-1115958910_i32),270244258_i32,196050039_i32,671342847_i32,1383060936_i32,404398727_i32];
_10 = _14;
_4 = '\u{8bbfc}' as i128;
_14 = !_9;
_12 = _13 != _2;
_14 = _5 <= _5;
SetDiscriminant(_21, 1);
_3 = _13;
_10 = _16 & _8;
_4 = _6 - _6;
_13 = _12;
_15 = 18259_i16;
_22 = (-9223372036854775808_isize);
_13 = _1;
_15 = _10 as i16;
_1 = _3 & _10;
_6 = _4;
Goto(bb4)
}
bb48 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb49 = {
_37 = _39;
_46 = [560798191485446361_usize,0_usize,18299102030709027830_usize,311222017880359071_usize,7278313636080365955_usize,2_usize,2_usize];
_30.1 = !_20;
place!(Field::<*const [i8; 1]>(Variant(_26, 1), 0)) = core::ptr::addr_of!(_35);
_44 = [_31,_31,_31];
_27 = [_3];
_16 = !_11;
place!(Field::<u128>(Variant(_32, 1), 0)) = !124552767959704495218670632839420748408_u128;
match _30.0.0 {
0 => bb50,
6152448790285077143 => bb52,
_ => bb51
}
}
bb50 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb51 = {
_30.0.2 = !_15;
_12 = _14;
_31 = 2554927846_u32;
_3 = _13;
_22 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_12 = !_11;
_6 = _4;
_29 = 2041396068361896578_usize as isize;
_30.0.1 = !(-40_i8);
_16 = _13;
_25 = _30.0.0 as f64;
_30.0.2 = -_15;
_10 = _2;
_8 = _11;
_10 = _16 > _14;
_13 = _28 >= _28;
_3 = _9;
_10 = _3;
_31 = !1730834676_u32;
_30.1 = _20;
_15 = _28;
_19 = [46962_u16,13278_u16,20949_u16,47530_u16];
_34 = _1 & _5;
Goto(bb40)
}
bb52 = {
_50 = 62640_u16 >> _6;
_52 = _30.0.0 as i32;
_9 = !_5;
_30.0 = (1759442138512598794_u64, (-19_i8), _28);
_22 = _29 + _29;
SetDiscriminant(_32, 1);
_15 = _28 - _28;
_1 = !_2;
_16 = _3 & _2;
_44 = [_31,_31,_31];
_36 = core::ptr::addr_of_mut!(_27);
_14 = !_9;
(*_36) = [_1];
_35 = [_30.0.1];
_53 = [_30.1,_20,_30.1];
_38 = -_25;
_49 = -_30.0.2;
match _30.0.0 {
0 => bb19,
1 => bb6,
2 => bb45,
3 => bb38,
4 => bb53,
5 => bb54,
6 => bb55,
1759442138512598794 => bb57,
_ => bb56
}
}
bb53 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb54 = {
Return()
}
bb55 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb56 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb57 = {
_28 = _30.0.0 as i16;
_30.0.2 = _31 as i16;
_8 = _23 < _23;
_41 = _28 as f32;
_33 = -_22;
_13 = !_11;
_29 = 4_usize as isize;
_7 = [_52,_52,_52,_52,_52,_52,_52,_52];
_54 = _4 << _49;
_27 = [_3];
_1 = _14;
_15 = !_28;
SetDiscriminant(_26, 0);
_10 = _15 > _15;
_55 = _22 + _29;
_34 = !_14;
_2 = _11;
place!(Field::<u128>(Variant(_32, 1), 0)) = 8583588513799639435_usize as u128;
_28 = _15 ^ _49;
_54 = _6 << _6;
_13 = _9;
_41 = _25 as f32;
_13 = !_14;
_40 = _22 & _55;
Goto(bb58)
}
bb58 = {
_12 = _16;
_43 = _3 >= _10;
_33 = _40 | _55;
_43 = !_34;
_30.0.2 = 0_usize as i16;
_23 = _13;
_43 = _49 != _28;
_57 = (-4014633570991692144_i64);
_49 = _28 & _15;
match _30.0.1 {
0 => bb59,
1 => bb60,
340282366920938463463374607431768211437 => bb62,
_ => bb61
}
}
bb59 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb60 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb61 = {
Return()
}
bb62 = {
_39 = _37;
_30.1 = _22 as u8;
match _30.0.1 {
0 => bb63,
1 => bb64,
340282366920938463463374607431768211437 => bb66,
_ => bb65
}
}
bb63 = {
_11 = _1;
_16 = _12 | _9;
_23 = _12;
_13 = _11;
_19 = [27492_u16,39652_u16,37845_u16,8909_u16];
SetDiscriminant(_21, 0);
_12 = _8;
_15 = -(-14069_i16);
_15 = -(-4866_i16);
_25 = _15 as f64;
_19 = [25588_u16,52914_u16,15180_u16,34517_u16];
_23 = _4 >= _4;
place!(Field::<[i32; 7]>(Variant(_21, 0), 0)) = [(-912901739_i32),(-1115958910_i32),270244258_i32,196050039_i32,671342847_i32,1383060936_i32,404398727_i32];
_10 = _14;
_4 = '\u{8bbfc}' as i128;
_14 = !_9;
_12 = _13 != _2;
_14 = _5 <= _5;
SetDiscriminant(_21, 1);
_3 = _13;
_10 = _16 & _8;
_4 = _6 - _6;
_13 = _12;
_15 = 18259_i16;
_22 = (-9223372036854775808_isize);
_13 = _1;
_15 = _10 as i16;
_1 = _3 & _10;
_6 = _4;
Goto(bb4)
}
bb64 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb65 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb66 = {
_10 = !_14;
_58 = core::ptr::addr_of_mut!((*_36));
_46 = [1007481389605137349_usize,6_usize,2931885239424833722_usize,6_usize,1_usize,6748055912950528032_usize,5772820982235218904_usize];
_12 = _8;
_33 = _22;
place!(Field::<[i32; 7]>(Variant(_26, 0), 0)) = [_52,_52,_52,_52,_52,_52,_52];
_58 = core::ptr::addr_of_mut!(_27);
(*_36) = [_43];
_8 = !_43;
_38 = -_25;
(*_36) = [_10];
_55 = _33 | _40;
_37 = _39;
_64 = _46;
_8 = !_11;
_28 = _15;
SetDiscriminant(_26, 0);
_4 = -_6;
place!(Field::<u128>(Variant(_32, 1), 0)) = !214346743294439626543517965232863237867_u128;
_62 = _41 + _41;
match _30.0.0 {
0 => bb67,
1759442138512598794 => bb69,
_ => bb68
}
}
bb67 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb68 = {
_14 = !_23;
match _22 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb69 = {
_56 = _30.1 as i8;
(*_58) = [_13];
_41 = -_62;
_11 = _13 & _16;
SetDiscriminant(_32, 0);
_30.0 = (13860026882927772666_u64, _56, _15);
(*_36) = [_11];
place!(Field::<[i32; 7]>(Variant(_26, 0), 0)) = [_52,_52,_52,_52,_52,_52,_52];
_9 = !_10;
_65 = _38 + _38;
_30.0.2 = !_28;
SetDiscriminant(_26, 1);
_27 = [_10];
_31 = 837029433_u32 ^ 2036994946_u32;
_68.fld0.1 = !_30.1;
_68.fld0.0.1 = _30.0.1;
_4 = _54 - _6;
(*_58) = [_16];
_69 = Adt62 { fld0: _30,fld1: _30.0 };
_12 = _43 ^ _3;
_68 = Adt62 { fld0: _30,fld1: _69.fld0.0 };
_30.0.2 = _52 as i16;
_45 = !_52;
_29 = -_55;
Goto(bb70)
}
bb70 = {
_30.0.0 = _31 as u64;
_30 = (_68.fld0.0, _69.fld0.1);
_35 = [_30.0.1];
_57 = _30.0.0 as i64;
_69.fld0.0 = (_69.fld1.0, _30.0.1, _30.0.2);
_67.1.0 = _31 as u8;
_68 = Move(_69);
_44 = [_31,_31,_31];
_30.0.1 = _68.fld0.0.1;
_48 = _41;
_74 = _31 * _31;
_49 = _15;
_66 = _55 << _57;
_69.fld1.0 = !_68.fld1.0;
_70.0.0 = [_57,_57];
(*_58) = [_34];
_69.fld0.0.2 = _30.0.2;
_4 = _57 as i128;
_48 = _62 * _62;
_47 = core::ptr::addr_of_mut!(_70.0);
_30.0 = (_68.fld0.0.0, _68.fld0.0.1, _69.fld0.0.2);
_15 = _66 as i16;
_69.fld1.1 = -_68.fld1.1;
match _30.0.0 {
0 => bb65,
13860026882927772666 => bb71,
_ => bb44
}
}
bb71 = {
_10 = _49 == _69.fld0.0.2;
_70.0.1 = _65 - _38;
_73 = _57;
_68.fld0.1 = _52 as u8;
(*_58) = [_10];
_70.0.2 = !_68.fld0.1;
_57 = (*_47).1 as i64;
place!(Field::<*const [i8; 1]>(Variant(_26, 1), 0)) = core::ptr::addr_of!(_35);
_11 = _12;
_68.fld1.0 = !_30.0.0;
_7 = [_52,_52,_45,_45,_45,_45,_52,_52];
_69.fld1.1 = _68.fld1.1 * _30.0.1;
_25 = (*_47).1;
_72 = [_50,_50,_50,_50,_50,_50,_50,_50];
_3 = !_11;
_62 = _41;
Call(_7 = fn18(_43, _70.0, (*_47).2, _70.0, _10, (*_47).0, _46, _47, _73, _12, _45), bb72, UnwindUnreachable())
}
bb72 = {
_62 = _50 as f32;
_67.3 = _74;
_28 = _49 + _15;
_16 = _8;
_68.fld1.2 = _48 as i16;
_36 = core::ptr::addr_of_mut!((*_36));
_67.0 = [_45,_52,_45];
_2 = _43 <= _23;
_67.3 = !_31;
_32 = Adt56::Variant1 { fld0: 131568972090607087343441000729598241490_u128 };
_69.fld0.0 = (_69.fld1.0, _69.fld1.1, _49);
_32 = Adt56::Variant1 { fld0: 50554059633652002480808652134342938419_u128 };
_21 = Adt63::Variant1 { fld0: Field::<*const [i8; 1]>(Variant(_26, 1), 0) };
(*_47).0 = [_73,_73];
_37 = _39;
(*_47).1 = _65;
_74 = _67.3;
place!(Field::<u128>(Variant(_32, 1), 0)) = _45 as u128;
_69.fld1 = _69.fld0.0;
place!(Field::<u128>(Variant(_32, 1), 0)) = 208808498579930127881926807909356991800_u128 + 241213560152887984058009463546408401659_u128;
_20 = _73 as u8;
_23 = _3;
_61 = [7664434379038548498_usize,0_usize,4_usize,3_usize,3_usize,11518373416507149755_usize,2_usize];
_46 = [15190990973981390617_usize,0_usize,0_usize,3_usize,6_usize,16704818448117253154_usize,14446896656518625274_usize];
_3 = _10 < _11;
SetDiscriminant(_26, 0);
(*_47).0 = [_73,_73];
_69 = Adt62 { fld0: _30,fld1: _68.fld1 };
(*_47).0 = [_73,_73];
_69.fld1.1 = _56;
match _69.fld0.0.0 {
0 => bb1,
1 => bb13,
2 => bb39,
3 => bb73,
4 => bb74,
5 => bb75,
13860026882927772666 => bb77,
_ => bb76
}
}
bb73 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb74 = {
_30.0.0 = _31 as u64;
_30 = (_68.fld0.0, _69.fld0.1);
_35 = [_30.0.1];
_57 = _30.0.0 as i64;
_69.fld0.0 = (_69.fld1.0, _30.0.1, _30.0.2);
_67.1.0 = _31 as u8;
_68 = Move(_69);
_44 = [_31,_31,_31];
_30.0.1 = _68.fld0.0.1;
_48 = _41;
_74 = _31 * _31;
_49 = _15;
_66 = _55 << _57;
_69.fld1.0 = !_68.fld1.0;
_70.0.0 = [_57,_57];
(*_58) = [_34];
_69.fld0.0.2 = _30.0.2;
_4 = _57 as i128;
_48 = _62 * _62;
_47 = core::ptr::addr_of_mut!(_70.0);
_30.0 = (_68.fld0.0.0, _68.fld0.0.1, _69.fld0.0.2);
_15 = _66 as i16;
_69.fld1.1 = -_68.fld1.1;
match _30.0.0 {
0 => bb65,
13860026882927772666 => bb71,
_ => bb44
}
}
bb75 = {
_30.0.2 = !_15;
_12 = _14;
_31 = 2554927846_u32;
_3 = _13;
_22 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_12 = !_11;
_6 = _4;
_29 = 2041396068361896578_usize as isize;
_30.0.1 = !(-40_i8);
_16 = _13;
_25 = _30.0.0 as f64;
_30.0.2 = -_15;
_10 = _2;
_8 = _11;
_10 = _16 > _14;
_13 = _28 >= _28;
_3 = _9;
_10 = _3;
_31 = !1730834676_u32;
_30.1 = _20;
_15 = _28;
_19 = [46962_u16,13278_u16,20949_u16,47530_u16];
_34 = _1 & _5;
Goto(bb40)
}
bb76 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb77 = {
_33 = _66 - _29;
_7 = [_45,_45,_45,_52,_52,_52,_52,_45];
_78 = [_45,_52,_45];
_78 = _67.0;
_28 = _69.fld0.0.2 - _68.fld0.0.2;
_13 = _9 ^ _11;
_30 = (_69.fld0.0, (*_47).2);
_70.0.0 = [_73,_73];
(*_36) = [_2];
_36 = core::ptr::addr_of_mut!((*_36));
_69.fld0.0.2 = _49;
(*_36) = [_11];
SetDiscriminant(_21, 0);
_64 = [2828433338846285561_usize,4_usize,5_usize,9998714846502603442_usize,5324557400704419186_usize,1_usize,15168832453086659217_usize];
_69.fld0.0.1 = -_68.fld1.1;
match _30.0.0 {
0 => bb54,
13860026882927772666 => bb78,
_ => bb2
}
}
bb78 = {
SetDiscriminant(_32, 0);
_69.fld0.0.1 = 313582937779199134611114198488996460186_u128 as i8;
_77 = [_74,_31,_74];
_16 = !_14;
_79.1 = _10;
place!(Field::<[i32; 7]>(Variant(_26, 0), 0)) = [_45,_45,_52,_45,_45,_52,_52];
_7 = [_52,_52,_52,_45,_45,_45,_45,_45];
_74 = _67.3;
(*_47).1 = _25 * _38;
_71 = [_74,_31,_74];
_81 = !_54;
SetDiscriminant(_26, 1);
_23 = !_1;
_69.fld1 = _68.fld0.0;
_77 = [_31,_67.3,_67.3];
_32 = Adt56::Variant1 { fld0: 289237917367751394842293551426798427958_u128 };
_16 = !_12;
_36 = core::ptr::addr_of_mut!((*_36));
_76 = [_45,_45,_45,_52,_45,_52,_52];
(*_47).2 = _68.fld0.1 ^ _30.1;
match _68.fld0.0.0 {
0 => bb19,
1 => bb50,
2 => bb67,
3 => bb72,
13860026882927772666 => bb79,
_ => bb32
}
}
bb79 = {
place!(Field::<u128>(Variant(_32, 1), 0)) = !323878663275371045637029756428195174896_u128;
_69.fld1.2 = _68.fld1.1 as i16;
_16 = _45 != _52;
_81 = !_4;
_67.3 = _31 - _74;
_67.1 = (_20,);
_40 = _66 & _55;
SetDiscriminant(_32, 1);
(*_47).0 = [_73,_73];
(*_47).2 = _67.1.0;
_45 = _52 - _52;
_73 = _39 as i64;
_9 = _10;
_4 = _54;
(*_58) = [_8];
_22 = _41 as isize;
Goto(bb80)
}
bb80 = {
_68.fld1.0 = _69.fld1.0 << _52;
_48 = (*_47).1 as f32;
_69.fld1.1 = _62 as i8;
_14 = !_23;
_84 = _40;
_46 = [1_usize,17622781251082873811_usize,1_usize,1064709330080375008_usize,1_usize,18343936858837413019_usize,13814025261715899806_usize];
Goto(bb81)
}
bb81 = {
_68.fld0.0.0 = _45 as u64;
_68.fld0.1 = (*_47).2;
_83 = _57 << _45;
_12 = !_8;
_28 = _30.0.2;
_16 = _11;
_21 = Adt63::Variant0 { fld0: _76 };
_79.2 = -_6;
_57 = -_83;
SetDiscriminant(_21, 1);
_23 = _9;
_86 = _44;
_69.fld0.0.1 = (*_47).2 as i8;
_49 = (*_47).1 as i16;
_67.0 = _78;
_79.2 = _81 | _54;
_28 = _50 as i16;
_30.0.2 = _68.fld0.0.2 - _28;
_75 = [16739315747347000447_usize,4972648191688206392_usize,5_usize,4_usize,12444662215881246215_usize,2296090446342575467_usize,3350158901254634949_usize];
_41 = _62;
_80 = _15 as u32;
Goto(bb82)
}
bb82 = {
_69.fld0.0 = _69.fld1;
_10 = _43;
_87.0 = -_62;
_67.1.0 = _15 as u8;
_60 = _69.fld1.1 as f32;
_70.0.1 = _57 as f64;
_86 = _71;
_85 = _62 + _41;
_3 = !_9;
_70.1 = [_70.0.2,_67.1.0,_70.0.2];
_68.fld0.0 = _69.fld1;
_53 = _70.1;
_25 = _70.0.1 + _70.0.1;
_68 = Move(_69);
_19 = [_50,_50,_50,_50];
_68.fld1.0 = _30.0.0 | _30.0.0;
_69.fld0.1 = !_70.0.2;
_88 = Adt56::Variant1 { fld0: 91278610398901875379643692049191140521_u128 };
_69.fld0.1 = _67.1.0;
_68.fld0.0.1 = _70.0.2 as i8;
_68.fld1.1 = _68.fld0.0.1;
_68 = Adt62 { fld0: _30,fld1: _30.0 };
_68.fld0 = (_68.fld1, _70.0.2);
(*_58) = [_12];
_37 = _39;
_30.0.2 = _37 as i16;
_22 = _33 | _40;
Goto(bb83)
}
bb83 = {
_41 = _60 + _85;
_62 = -_41;
_46 = [7_usize,5_usize,1_usize,14682670776292481015_usize,15833195388631318639_usize,1_usize,8562826182869372165_usize];
_49 = 6805949682193827011_usize as i16;
_55 = _70.0.1 as isize;
_69.fld1.0 = _68.fld1.0;
_72 = [_50,_50,_50,_50,_50,_50,_50,_50];
_82 = !_33;
_92 = (_60,);
_65 = _70.0.1 + (*_47).1;
_15 = _68.fld0.0.2 | _28;
_94 = !_68.fld0.1;
_69.fld1.1 = _68.fld0.0.1 - _68.fld0.0.1;
_68.fld0.1 = _67.1.0;
_70.0.1 = 5383546450143721275_usize as f64;
_69.fld0.0 = (_69.fld1.0, _69.fld1.1, _28);
_69.fld1.2 = _69.fld0.0.2;
match _68.fld0.0.0 {
0 => bb19,
13860026882927772666 => bb84,
_ => bb62
}
}
bb84 = {
_31 = _80 << _84;
match _68.fld1.0 {
0 => bb59,
1 => bb28,
2 => bb48,
3 => bb8,
4 => bb85,
5 => bb86,
13860026882927772666 => bb88,
_ => bb87
}
}
bb85 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb86 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb87 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb88 = {
_40 = _22;
_28 = _68.fld1.2 ^ _68.fld0.0.2;
(*_58) = [_16];
_46 = [10889600508357086279_usize,0_usize,2_usize,0_usize,1949790974761061516_usize,11939023492432651520_usize,0_usize];
_67.1.0 = (*_47).2;
_91 = _39 as isize;
_68.fld0.0 = (_30.0.0, _56, _68.fld1.2);
_16 = !_79.1;
_70.1 = [_20,_67.1.0,_68.fld0.1];
_93 = !_2;
_68 = Move(_69);
_88 = Adt56::Variant1 { fld0: 51548599728907430571584629441975676836_u128 };
_74 = _31;
_54 = _81 | _4;
_99 = !_55;
match _30.0.0 {
0 => bb38,
1 => bb61,
2 => bb29,
3 => bb31,
4 => bb52,
5 => bb89,
13860026882927772666 => bb91,
_ => bb90
}
}
bb89 = {
_19 = [2730_u16,64892_u16,1927_u16,40272_u16];
_12 = !_14;
_19 = [9345_u16,31105_u16,49936_u16,37693_u16];
_1 = _13;
_23 = !_9;
_4 = !_6;
_4 = _15 as i128;
Goto(bb5)
}
bb90 = {
_8 = _13 < _3;
_5 = !_13;
_3 = _16;
_16 = _13 <= _12;
_3 = _11;
_11 = _8 > _10;
_7 = [30774093_i32,1696445150_i32,333456422_i32,(-1700292345_i32),(-187694157_i32),(-364598478_i32),396288331_i32,(-1571400172_i32)];
_11 = _14;
_10 = !_12;
_16 = _12 | _12;
_19 = [34271_u16,59753_u16,19261_u16,44924_u16];
_19 = [32766_u16,9856_u16,43000_u16,63602_u16];
_9 = !_10;
_6 = _4 << _4;
_15 = !(-23770_i16);
_22 = -103_isize;
_2 = _13;
Call(_21 = fn17(_10, _16, _11, _6, _14, _2, _12, _2), bb2, UnwindUnreachable())
}
bb91 = {
_97 = -_65;
_89 = !_30.1;
_30.0 = (_68.fld1.0, _56, _68.fld1.2);
_57 = _74 as i64;
_4 = _68.fld0.0.0 as i128;
place!(Field::<*const [i8; 1]>(Variant(_21, 1), 0)) = core::ptr::addr_of!(_35);
place!(Field::<*const [i8; 1]>(Variant(_21, 1), 0)) = core::ptr::addr_of!(_35);
_69 = Adt62 { fld0: _68.fld0,fld1: _30.0 };
_95 = _43 as i128;
Goto(bb92)
}
bb92 = {
_95 = !_54;
_79.3 = [_52,_52,_45,_52,_52,_52,_52];
_26 = Move(_21);
_46 = _64;
_92.0 = -_60;
SetDiscriminant(_26, 0);
_21 = Adt63::Variant0 { fld0: _76 };
_76 = [_45,_52,_45,_52,_52,_52,_52];
_69.fld0 = (_68.fld0.0, _94);
_100.0.2 = _69.fld1.2 | _28;
SetDiscriminant(_21, 1);
place!(Field::<[i32; 7]>(Variant(_26, 0), 0)) = _76;
_38 = _81 as f64;
_60 = _87.0 * _85;
_64 = [9583902946339407135_usize,4407738458310682358_usize,16399093615881964722_usize,6_usize,4_usize,14671135135852965699_usize,1_usize];
_69.fld0.0.0 = _68.fld0.0.0 >> _15;
SetDiscriminant(_26, 1);
(*_47).0 = [_57,_83];
_93 = _10 & _23;
_70.0.1 = _52 as f64;
_70.0.2 = _30.1 + _89;
_73 = !_57;
match _69.fld1.0 {
13860026882927772666 => bb94,
_ => bb93
}
}
bb93 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb94 = {
_30 = (_69.fld0.0, _69.fld0.1);
_74 = _31;
place!(Field::<*const [i8; 1]>(Variant(_21, 1), 0)) = core::ptr::addr_of!(_35);
place!(Field::<*const [i8; 1]>(Variant(_26, 1), 0)) = Field::<*const [i8; 1]>(Variant(_21, 1), 0);
_56 = _69.fld1.1;
SetDiscriminant(_26, 1);
_69.fld0.0.0 = !_68.fld1.0;
_67.0 = [_45,_52,_45];
(*_47).2 = !_69.fld0.1;
match _69.fld1.0 {
0 => bb93,
1 => bb95,
13860026882927772666 => bb97,
_ => bb96
}
}
bb95 = {
Return()
}
bb96 = {
_50 = 62640_u16 >> _6;
_52 = _30.0.0 as i32;
_9 = !_5;
_30.0 = (1759442138512598794_u64, (-19_i8), _28);
_22 = _29 + _29;
SetDiscriminant(_32, 1);
_15 = _28 - _28;
_1 = !_2;
_16 = _3 & _2;
_44 = [_31,_31,_31];
_36 = core::ptr::addr_of_mut!(_27);
_14 = !_9;
(*_36) = [_1];
_35 = [_30.0.1];
_53 = [_30.1,_20,_30.1];
_38 = -_25;
_49 = -_30.0.2;
match _30.0.0 {
0 => bb19,
1 => bb6,
2 => bb45,
3 => bb38,
4 => bb53,
5 => bb54,
6 => bb55,
1759442138512598794 => bb57,
_ => bb56
}
}
bb97 = {
_58 = core::ptr::addr_of_mut!((*_36));
_101 = [_52,_52,_52,_45,_45,_52,_52,_52];
_100.0.2 = _30.0.2;
_26 = Move(_21);
_100.0.2 = -_15;
_96.0 = -_92.0;
_79.0 = [_69.fld0.0.0,_68.fld1.0,_30.0.0,_69.fld1.0,_69.fld1.0,_30.0.0];
_89 = !_70.0.2;
match _68.fld1.0 {
0 => bb94,
1 => bb82,
2 => bb89,
3 => bb26,
4 => bb98,
13860026882927772666 => bb100,
_ => bb99
}
}
bb98 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb99 = {
_19 = [42016_u16,12526_u16,121_u16,50409_u16];
_16 = _23 >= _5;
_13 = _1 >= _3;
_19 = [16995_u16,59431_u16,55441_u16,38330_u16];
_14 = _5;
_4 = _6 + _6;
match _20 {
0 => bb18,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
91 => bb26,
_ => bb25
}
}
bb100 = {
place!(Field::<u128>(Variant(_32, 1), 0)) = 289674903017735900857124981163110868331_u128 + 5471823634077787292312120164492263824_u128;
_1 = _9;
_34 = _3;
_92 = _96;
(*_58) = [_34];
_32 = Adt56::Variant1 { fld0: 226738300343072347632758792619753122930_u128 };
_102 = _33 >> _69.fld0.0.0;
_25 = _38 - _70.0.1;
_95 = _79.2 * _81;
SetDiscriminant(_26, 1);
_74 = _80 | _80;
_40 = _70.0.2 as isize;
_67.3 = _68.fld0.0.1 as u32;
_69.fld1.1 = -_68.fld1.1;
_102 = _73 as isize;
_46 = [7_usize,1737192922729283827_usize,0_usize,3_usize,14295247412779408581_usize,667020662735815598_usize,0_usize];
_67.0 = _78;
_104 = [_69.fld0.0.1];
_8 = (*_47).1 == _25;
Goto(bb101)
}
bb101 = {
place!(Field::<u128>(Variant(_32, 1), 0)) = !70009659527311067740829753592291701940_u128;
_68.fld1 = _68.fld0.0;
match _69.fld1.0 {
0 => bb10,
1 => bb2,
2 => bb22,
3 => bb75,
4 => bb35,
13860026882927772666 => bb102,
_ => bb17
}
}
bb102 = {
_5 = !_14;
_10 = !_93;
_100.0.1 = 17844744762630644741_usize as i8;
_70.0.2 = !_89;
_30.0 = _68.fld1;
_35 = [_69.fld0.0.1];
_30.0.2 = _100.0.2 ^ _69.fld1.2;
_68.fld1.1 = _70.0.1 as i8;
_19 = [_50,_50,_50,_50];
_39 = _37;
_109.fld0.0.1 = _25;
_109.fld1 = _40 as i8;
_70.0.2 = !_20;
Goto(bb103)
}
bb103 = {
_3 = _23;
_54 = -_4;
_45 = _52;
_70.0.1 = -_65;
_109.fld0 = _70;
(*_47).0 = _109.fld0.0.0;
_69.fld1.0 = _73 as u64;
_82 = _39 as isize;
_70.0.0 = _109.fld0.0.0;
_68 = Move(_69);
_38 = -(*_47).1;
(*_47) = (_109.fld0.0.0, _97, _109.fld0.0.2);
_26 = Adt63::Variant0 { fld0: _79.3 };
_100.0.0 = _30.0.0;
_88 = Move(_32);
_68.fld1.2 = _15 & _68.fld0.0.2;
_1 = !_23;
_78 = [_52,_45,_45];
_69.fld0.0.2 = !_30.0.2;
_109.fld0.0.1 = _31 as f64;
_65 = _57 as f64;
_111 = !_50;
Goto(bb104)
}
bb104 = {
_73 = !_57;
_115 = (_67.0, _67.1, Field::<u128>(Variant(_88, 1), 0), _74);
_40 = _69.fld0.0.2 as isize;
SetDiscriminant(_26, 0);
_71 = [_74,_115.3,_80];
_69 = Move(_68);
_112.fld0 = (_109.fld0.0, _70.1);
_16 = _5 != _1;
SetDiscriminant(_88, 0);
_79.0 = [_30.0.0,_100.0.0,_100.0.0,_100.0.0,_30.0.0,_30.0.0];
_113 = !_109.fld1;
_69.fld0 = (_100.0, (*_47).2);
place!(Field::<[i32; 7]>(Variant(_26, 0), 0)) = _76;
Call(_116 = core::intrinsics::transmute(_30.0.2), bb105, UnwindUnreachable())
}
bb105 = {
_70.0 = (_112.fld0.0.0, _25, _109.fld0.0.2);
_47 = core::ptr::addr_of_mut!(_70.0);
SetDiscriminant(_26, 0);
_67.2 = _115.2 - _115.2;
_112.fld0.0 = (_109.fld0.0.0, (*_47).1, _69.fld0.1);
_75 = [4_usize,104448691245500219_usize,5_usize,16985737061701203341_usize,4_usize,3_usize,1507188623786658570_usize];
_78 = [_45,_45,_52];
_79.3 = [_45,_52,_45,_52,_45,_45,_45];
_68.fld1.0 = _69.fld1.0 - _100.0.0;
_87.0 = _96.0 * _96.0;
_75 = [16581221120834061127_usize,7_usize,5_usize,15983863053866757231_usize,3_usize,6_usize,6_usize];
_118 = _116;
_39 = _37;
_68.fld0 = (_100.0, _89);
_68.fld1 = _100.0;
_7 = [_45,_52,_45,_45,_52,_52,_45,_52];
_106 = _66;
_96.0 = _45 as f32;
_67.3 = _74;
_30.0 = _100.0;
(*_47).1 = -_38;
Goto(bb106)
}
bb106 = {
_47 = core::ptr::addr_of_mut!(_70.0);
_37 = _39;
_69 = Move(_68);
_69 = Adt62 { fld0: _30,fld1: _30.0 };
place!(Field::<Adt51>(Variant(_88, 0), 0)) = Adt51::Variant3 { fld0: _100.0.2,fld1: Move(_109) };
_68.fld0.0.2 = _28 & _28;
(*_47) = (Field::<Adt50>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 1).fld0.0.0, _112.fld0.0.1, _69.fld0.1);
_112.fld1 = _15 as i8;
_108 = 5_usize as isize;
_23 = _34 & _34;
(*_47).2 = _67.2 as u8;
_6 = _79.2 & _79.2;
_114 = -_60;
_31 = !_80;
_19 = [_116,_116,_50,_116];
_39 = _37;
_42 = Adt53::Variant1 { fld0: _14,fld1: _118,fld2: _92,fld3: _81,fld4: _30.0.2 };
_69.fld0 = _30;
_65 = _70.0.1 - _97;
_96 = Field::<(f32,)>(Variant(_42, 1), 2);
(*_47).1 = -Field::<Adt50>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 1).fld0.0.1;
(*_36) = [_13];
_99 = _22;
_1 = _96.0 >= _87.0;
match _100.0.0 {
0 => bb68,
1 => bb16,
13860026882927772666 => bb108,
_ => bb107
}
}
bb107 = {
_16 = !_11;
_9 = _8 | _3;
_20 = 91_u8;
_10 = _2;
Goto(bb3)
}
bb108 = {
_30.0.1 = Field::<Adt50>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 1).fld1;
_4 = !_95;
_84 = _112.fld0.0.1 as isize;
Goto(bb109)
}
bb109 = {
_68.fld0.0 = (_69.fld1.0, Field::<Adt50>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 1).fld1, _100.0.2);
_110 = Adt53::Variant1 { fld0: _34,fld1: Field::<u16>(Variant(_42, 1), 1),fld2: Field::<(f32,)>(Variant(_42, 1), 2),fld3: _6,fld4: Field::<i16>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 0) };
SetDiscriminant(_110, 0);
_9 = _114 >= _62;
_100.0.2 = -Field::<i16>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 0);
_30.1 = !_67.1.0;
_124 = Adt58::Variant1 { fld0: _112.fld0.0.0,fld1: _37,fld2: _69.fld0,fld3: _79.3 };
_69.fld1.1 = _112.fld1;
_118 = _111;
_100.1 = _115.3 as u8;
_30 = (_69.fld0.0, _20);
_98 = _39;
_73 = _28 as i64;
_74 = Field::<i16>(Variant(_42, 1), 4) as u32;
_112.fld0.0.1 = _65 + _65;
Goto(bb110)
}
bb110 = {
_96.0 = -_87.0;
place!(Field::<Adt50>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 1)).fld0 = (_112.fld0.0, _112.fld0.1);
_68.fld0.0.1 = _113;
_62 = _30.0.0 as f32;
_128.0 = _15 as f32;
_61 = _64;
_21 = Adt63::Variant0 { fld0: _76 };
_93 = _20 >= _89;
_33 = _84;
_82 = _115.2 as isize;
_109.fld0 = ((*_47), _53);
_105 = _74;
SetDiscriminant(_124, 1);
Goto(bb111)
}
bb111 = {
place!(Field::<((u64, i8, i16), u8)>(Variant(_124, 1), 2)).0 = _30.0;
_68.fld1.2 = !Field::<i16>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 0);
_77 = [_115.3,_80,_105];
_70.1 = [_30.1,_30.1,_69.fld0.1];
place!(Field::<i16>(Variant(_42, 1), 4)) = _45 as i16;
SetDiscriminant(_21, 1);
place!(Field::<i16>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 0)) = _28 | Field::<i16>(Variant(_42, 1), 4);
_126 = _30.0.2 as f32;
(*_47).0 = [_83,_57];
(*_47).2 = _45 as u8;
_6 = _81 & _54;
_71 = [_105,_67.3,_80];
SetDiscriminant(_42, 0);
place!(Field::<Adt50>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 1)).fld0 = ((*_47), _53);
(*_47).0 = _112.fld0.0.0;
_69.fld0.0.2 = -_15;
_5 = _43;
_80 = _115.3 >> _83;
_68 = Move(_69);
_44 = [_80,_80,_105];
Call(_100.0.0 = core::intrinsics::transmute(_66), bb112, UnwindUnreachable())
}
bb112 = {
_19 = [_111,_50,_116,_50];
_89 = !_20;
_11 = Field::<Adt50>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 1).fld0.0.2 > _109.fld0.0.2;
_68.fld1.0 = _30.0.0;
Goto(bb113)
}
bb113 = {
_43 = _10 | _11;
_129 = [7_usize,8406522207761434607_usize];
_20 = _70.0.2;
_115.0 = _78;
_73 = _83 ^ _57;
_135 = _55;
_102 = _66;
_69.fld0.0.1 = _68.fld1.1;
_113 = Field::<Adt50>(Variant(Field::<Adt51>(Variant(_88, 0), 0), 3), 1).fld1;
_122.0 = [_52,_52,_45];
place!(Field::<Adt50>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 1)).fld0.0 = (*_47);
SetDiscriminant(Field::<Adt51>(Variant(_88, 0), 0), 3);
_130 = [_111,_116,_111,_111];
_36 = _58;
_109.fld1 = !_112.fld1;
_123 = _45 + _45;
place!(Field::<*mut (([i64; 2], f64, u8), [u8; 3])>(Variant(_42, 0), 0)) = core::ptr::addr_of_mut!(place!(Field::<Adt50>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 1)).fld0);
place!(Field::<Adt50>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 1)).fld0.0.0 = (*_47).0;
place!(Field::<[usize; 7]>(Variant(_42, 0), 2)) = [4948822010544587862_usize,5_usize,6266599551690940523_usize,0_usize,456474103421433868_usize,2_usize,15427956074137009404_usize];
_116 = _118;
_134 = Adt51::Variant3 { fld0: _30.0.2,fld1: Move(_112) };
_91 = !_66;
_68.fld1.2 = Field::<i16>(Variant(_134, 3), 0) | _100.0.2;
place!(Field::<*const [i8; 1]>(Variant(_21, 1), 0)) = core::ptr::addr_of!(_104);
_63 = _33 * _135;
match _30.0.0 {
0 => bb53,
1 => bb87,
2 => bb114,
13860026882927772666 => bb116,
_ => bb115
}
}
bb114 = {
Return()
}
bb115 = {
_8 = _1;
_31 = !3051602747_u32;
_30.0.0 = 12618992596695280220_u64 ^ 12863337284335569082_u64;
_30.0.1 = -(-61_i8);
_12 = !_14;
_33 = _30.0.1 as isize;
_39 = _37;
_7 = [(-2111869119_i32),(-1965563372_i32),887327871_i32,709484820_i32,(-914298396_i32),(-716081119_i32),872317540_i32,159037880_i32];
_4 = _6;
_15 = 22439_u16 as i16;
_28 = !_30.0.2;
_36 = core::ptr::addr_of_mut!((*_36));
place!(Field::<u128>(Variant(_32, 1), 0)) = 166021320977921352313260499042942626416_u128 ^ 134119719934465657173479609300207564502_u128;
_44 = [_31,_31,_31];
_1 = !_12;
_30.0.2 = _22 as i16;
place!(Field::<*const [i8; 1]>(Variant(_21, 1), 0)) = core::ptr::addr_of!(_35);
_5 = _43 == _2;
(*_36) = [_16];
_37 = _39;
(*_36) = [_12];
_30.0 = (6152448790285077143_u64, 11_i8, _28);
(*_36) = [_2];
_26 = Move(_21);
(*_36) = [_2];
(*_36) = [_1];
match _30.0.0 {
0 => bb46,
1 => bb47,
6152448790285077143 => bb49,
_ => bb48
}
}
bb116 = {
_29 = _6 as isize;
_131 = Adt51::Variant3 { fld0: _68.fld1.2,fld1: Move(_109) };
place!(Field::<Adt50>(Variant(_131, 3), 1)) = Move(Field::<Adt50>(Variant(_134, 3), 1));
_136.fld0.0.2 = !_68.fld0.1;
_48 = -_96.0;
_36 = _58;
_138 = (_70.0, Field::<Adt50>(Variant(_131, 3), 1).fld0.1);
_66 = _99;
_70 = (Field::<Adt50>(Variant(_131, 3), 1).fld0.0, Field::<Adt50>(Variant(_131, 3), 1).fld0.1);
_67.1.0 = _138.0.2;
_142 = _67.1;
_141 = _98 as isize;
(*_47).1 = Field::<Adt50>(Variant(_131, 3), 1).fld0.0.1;
_109.fld0.0.1 = _138.0.1 + _25;
_76 = [_123,_123,_123,_52,_45,_52,_45];
_112.fld1 = _69.fld0.0.1;
_122.1.0 = !_67.1.0;
_69.fld0 = (_68.fld1, (*_47).2);
place!(Field::<Adt50>(Variant(place!(Field::<Adt51>(Variant(_88, 0), 0)), 3), 1)).fld0.0.2 = !(*_47).2;
_69.fld1.0 = _118 as u64;
SetDiscriminant(_21, 0);
_35 = [_112.fld1];
place!(Field::<[i32; 7]>(Variant(_21, 0), 0)) = [_45,_52,_123,_45,_52,_45,_45];
_69 = Adt62 { fld0: _68.fld0,fld1: _68.fld0.0 };
_134 = Move(_131);
_86 = _77;
Goto(bb117)
}
bb117 = {
_6 = (*_47).2 as i128;
_108 = _102;
place!(Field::<*mut (([i64; 2], f64, u8), [u8; 3])>(Variant(_110, 0), 0)) = core::ptr::addr_of_mut!(_138);
_119 = _67.2 as isize;
_138.0.1 = Field::<Adt50>(Variant(_134, 3), 1).fld0.0.1;
place!(Field::<[i32; 7]>(Variant(_21, 0), 0)) = _76;
_56 = _112.fld1 ^ _112.fld1;
_149 = _67.2;
_97 = (*_47).1;
SetDiscriminant(_134, 2);
_79.0 = [_69.fld1.0,_69.fld1.0,_68.fld1.0,_30.0.0,_68.fld0.0.0,Field::<((u64, i8, i16), u8)>(Variant(_124, 1), 2).0.0];
_10 = _2;
RET = Adt54::Variant0 { fld0: _69.fld0.0,fld1: _129,fld2: _36,fld3: _126,fld4: _77,fld5: _4,fld6: _101 };
_109.fld0.0.2 = _138.0.2;
place!(Field::<[i64; 2]>(Variant(_124, 1), 0)) = [_57,_73];
_120 = _37;
_26 = Move(_21);
_135 = _22;
_136.fld0.0.0 = (*_47).0;
(*_58) = [_12];
_75 = _46;
_112.fld0.1 = [_70.0.2,_115.1.0,_100.1];
Goto(bb118)
}
bb118 = {
Call(_153 = dump_var(16_usize, 111_usize, Move(_111), 55_usize, Move(_55), 83_usize, Move(_83), 81_usize, Move(_81)), bb119, UnwindUnreachable())
}
bb119 = {
Call(_153 = dump_var(16_usize, 123_usize, Move(_123), 7_usize, Move(_7), 4_usize, Move(_4), 73_usize, Move(_73)), bb120, UnwindUnreachable())
}
bb120 = {
Call(_153 = dump_var(16_usize, 75_usize, Move(_75), 84_usize, Move(_84), 31_usize, Move(_31), 57_usize, Move(_57)), bb121, UnwindUnreachable())
}
bb121 = {
Call(_153 = dump_var(16_usize, 67_usize, Move(_67), 37_usize, Move(_37), 54_usize, Move(_54), 56_usize, Move(_56)), bb122, UnwindUnreachable())
}
bb122 = {
Call(_153 = dump_var(16_usize, 101_usize, Move(_101), 10_usize, Move(_10), 94_usize, Move(_94), 86_usize, Move(_86)), bb123, UnwindUnreachable())
}
bb123 = {
Call(_153 = dump_var(16_usize, 9_usize, Move(_9), 82_usize, Move(_82), 106_usize, Move(_106), 46_usize, Move(_46)), bb124, UnwindUnreachable())
}
bb124 = {
Call(_153 = dump_var(16_usize, 11_usize, Move(_11), 77_usize, Move(_77), 3_usize, Move(_3), 108_usize, Move(_108)), bb125, UnwindUnreachable())
}
bb125 = {
Call(_153 = dump_var(16_usize, 100_usize, Move(_100), 19_usize, Move(_19), 35_usize, Move(_35), 14_usize, Move(_14)), bb126, UnwindUnreachable())
}
bb126 = {
Call(_153 = dump_var(16_usize, 1_usize, Move(_1), 105_usize, Move(_105), 113_usize, Move(_113), 98_usize, Move(_98)), bb127, UnwindUnreachable())
}
bb127 = {
Call(_153 = dump_var(16_usize, 30_usize, Move(_30), 76_usize, Move(_76), 13_usize, Move(_13), 130_usize, Move(_130)), bb128, UnwindUnreachable())
}
bb128 = {
Call(_153 = dump_var(16_usize, 79_usize, Move(_79), 28_usize, Move(_28), 104_usize, Move(_104), 43_usize, Move(_43)), bb129, UnwindUnreachable())
}
bb129 = {
Call(_153 = dump_var(16_usize, 2_usize, Move(_2), 154_usize, _154, 154_usize, _154, 154_usize, _154), bb130, UnwindUnreachable())
}
bb130 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: i128,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool) -> Adt63 {
mir! {
type RET = Adt63;
let _9: [bool; 1];
let _10: [u64; 6];
let _11: ((u64, i8, i16), u8);
let _12: f64;
let _13: Adt50;
let _14: isize;
let _15: *mut [i128; 3];
let _16: i32;
let _17: *mut ([i64; 2], f64, u8);
let _18: f32;
let _19: [i128; 3];
let _20: [i128; 3];
let _21: [i32; 7];
let _22: f32;
let _23: char;
let _24: bool;
let _25: i32;
let _26: ([i32; 3], (u8,), u128, u32);
let _27: [i32; 7];
let _28: Adt55;
let _29: bool;
let _30: [i128; 3];
let _31: bool;
let _32: [i32; 7];
let _33: Adt64;
let _34: Adt54;
let _35: bool;
let _36: char;
let _37: usize;
let _38: [bool; 1];
let _39: *const [i8; 1];
let _40: [u8; 3];
let _41: u16;
let _42: i32;
let _43: isize;
let _44: *mut [bool; 1];
let _45: ();
let _46: ();
{
_4 = 518725993269279074_usize as i128;
_3 = _1;
_8 = !_3;
_9 = [_8];
_9 = [_8];
Goto(bb1)
}
bb1 = {
_11.1 = !114_u8;
_3 = !_2;
Goto(bb2)
}
bb2 = {
_11.0.1 = (-23_i8) + 99_i8;
_13.fld0.0.1 = 129316961351481435038641534442079820719_u128 as f64;
Goto(bb3)
}
bb3 = {
_13.fld0.0.2 = !_11.1;
_12 = _13.fld0.0.1;
_11.0.0 = '\u{aa992}' as u64;
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_11.0.1 = _11.0.0 as i8;
_13.fld0.0.2 = !_11.1;
_7 = _2 ^ _2;
_3 = !_2;
_2 = !_7;
_13.fld0.0.0 = [1234227516046506346_i64,3594374888988700326_i64];
_11.0.0 = 2739919725011297725_u64 + 15564745717704947252_u64;
_9 = [_3];
_13.fld0.1 = [_13.fld0.0.2,_11.1,_13.fld0.0.2];
_9 = [_6];
_13.fld0.1 = [_11.1,_11.1,_11.1];
_8 = !_7;
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_11.0.0 = !2565299737832842858_u64;
_14 = 9223372036854775807_isize - 9223372036854775807_isize;
_4 = _13.fld0.0.2 as i128;
Goto(bb4)
}
bb4 = {
_12 = _13.fld0.0.1;
_13.fld1 = _11.0.1;
_3 = _7;
_8 = _2;
_11.0.0 = 5831168735749522811_u64;
_16 = !1640609239_i32;
_3 = !_5;
match _11.0.0 {
5831168735749522811 => bb5,
_ => bb3
}
}
bb5 = {
_11.0.2 = 18810_i16;
_16 = _11.0.2 as i32;
Call(_13.fld1 = core::intrinsics::bswap(_11.0.1), bb6, UnwindUnreachable())
}
bb6 = {
_3 = _8 == _1;
_17 = core::ptr::addr_of_mut!(_13.fld0.0);
_13.fld0.0.0 = [(-4241085543363555461_i64),(-171511152930719967_i64)];
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_17 = core::ptr::addr_of_mut!((*_17));
(*_17).0 = [(-3093079750300189202_i64),4580945702655836643_i64];
_4 = 142901756103024099465006455248253694948_i128;
_11.1 = (*_17).2;
(*_17).1 = -_12;
_13.fld0.0.2 = _11.1 >> _11.1;
_8 = _6 < _3;
_14 = !(-9223372036854775808_isize);
_21 = [_16,_16,_16,_16,_16,_16,_16];
_1 = _5 < _8;
Goto(bb7)
}
bb7 = {
_11.0 = (1351095155270963861_u64, _13.fld1, 30658_i16);
_22 = (*_17).2 as f32;
_13.fld1 = _11.0.2 as i8;
_15 = core::ptr::addr_of_mut!(_19);
_2 = _1 != _8;
_20 = [_4,_4,_4];
_1 = !_7;
_6 = _3;
_11.0.0 = 14644097700428716477_u64;
(*_17).2 = _4 as u8;
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_24 = _6 < _1;
_15 = core::ptr::addr_of_mut!(_19);
_11.0 = (168331799228655698_u64, _13.fld1, 20169_i16);
_16 = (-1733873079_i32);
_17 = core::ptr::addr_of_mut!(_13.fld0.0);
(*_17).1 = -_12;
Goto(bb8)
}
bb8 = {
_11.0.2 = (-14920_i16);
_20 = [_4,_4,_4];
RET = Adt63::Variant0 { fld0: _21 };
_13.fld1 = -_11.0.1;
_24 = !_5;
match _4 {
142901756103024099465006455248253694948 => bb9,
_ => bb3
}
}
bb9 = {
(*_17).1 = -_12;
_5 = _6;
_5 = !_6;
(*_15) = _20;
_20 = [_4,_4,_4];
(*_15) = [_4,_4,_4];
_26.2 = 176779476761976338610003744377742952150_u128;
_19 = _20;
_12 = -(*_17).1;
_26.1 = (_11.1,);
_9 = [_8];
_25 = _16;
SetDiscriminant(RET, 1);
_27 = _21;
_21 = [_16,_25,_25,_16,_16,_25,_25];
_23 = '\u{e4273}';
Goto(bb10)
}
bb10 = {
(*_15) = _20;
_21 = [_25,_25,_25,_16,_16,_16,_16];
_15 = core::ptr::addr_of_mut!((*_15));
RET = Adt63::Variant0 { fld0: _21 };
_20 = [_4,_4,_4];
_21 = [_25,_16,_25,_16,_25,_16,_16];
_22 = (-8476204008641646909_i64) as f32;
(*_15) = [_4,_4,_4];
_26.0 = [_25,_16,_25];
_24 = _1 <= _3;
_16 = !_25;
_27 = [_16,_25,_16,_25,_16,_16,_16];
_26.3 = !2385845859_u32;
_9 = [_5];
SetDiscriminant(RET, 0);
(*_17).1 = _12 - _12;
match _11.0.0 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb7,
6 => bb11,
168331799228655698 => bb13,
_ => bb12
}
}
bb11 = {
_3 = _8 == _1;
_17 = core::ptr::addr_of_mut!(_13.fld0.0);
_13.fld0.0.0 = [(-4241085543363555461_i64),(-171511152930719967_i64)];
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_17 = core::ptr::addr_of_mut!((*_17));
(*_17).0 = [(-3093079750300189202_i64),4580945702655836643_i64];
_4 = 142901756103024099465006455248253694948_i128;
_11.1 = (*_17).2;
(*_17).1 = -_12;
_13.fld0.0.2 = _11.1 >> _11.1;
_8 = _6 < _3;
_14 = !(-9223372036854775808_isize);
_21 = [_16,_16,_16,_16,_16,_16,_16];
_1 = _5 < _8;
Goto(bb7)
}
bb12 = {
_11.0.2 = (-14920_i16);
_20 = [_4,_4,_4];
RET = Adt63::Variant0 { fld0: _21 };
_13.fld1 = -_11.0.1;
_24 = !_5;
match _4 {
142901756103024099465006455248253694948 => bb9,
_ => bb3
}
}
bb13 = {
(*_17).2 = _22 as u8;
_22 = (*_17).1 as f32;
_30 = (*_15);
_19 = [_4,_4,_4];
_18 = _22 + _22;
RET = Adt63::Variant0 { fld0: _21 };
_17 = core::ptr::addr_of_mut!((*_17));
SetDiscriminant(RET, 1);
_26.0 = [_16,_25,_16];
_26.2 = !296930017665803000016434301094557890191_u128;
_3 = _7;
_22 = -_18;
match _4 {
0 => bb7,
1 => bb4,
142901756103024099465006455248253694948 => bb14,
_ => bb6
}
}
bb14 = {
_13.fld0.1 = [_13.fld0.0.2,_13.fld0.0.2,_11.1];
_12 = (*_17).1 * (*_17).1;
_6 = _1 == _8;
_14 = 64_isize;
_13.fld0.0.0 = [5045280934805083426_i64,(-2054507445990684461_i64)];
_26.0 = [_16,_25,_16];
_35 = _5;
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_35 = _6;
_29 = _3;
(*_17).2 = !_11.1;
_20 = [_4,_4,_4];
_13.fld1 = !_11.0.1;
(*_17).1 = (-5752016811237216680_i64) as f64;
_17 = core::ptr::addr_of_mut!(_13.fld0.0);
_13.fld0.0.0 = [5876418220577285541_i64,1403248461526334781_i64];
_11.1 = _13.fld0.0.2;
_36 = _23;
_11.1 = 1210701996616768140_usize as u8;
match _11.0.2 {
0 => bb11,
1 => bb2,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
340282366920938463463374607431768196536 => bb20,
_ => bb19
}
}
bb15 = {
(*_17).2 = _22 as u8;
_22 = (*_17).1 as f32;
_30 = (*_15);
_19 = [_4,_4,_4];
_18 = _22 + _22;
RET = Adt63::Variant0 { fld0: _21 };
_17 = core::ptr::addr_of_mut!((*_17));
SetDiscriminant(RET, 1);
_26.0 = [_16,_25,_16];
_26.2 = !296930017665803000016434301094557890191_u128;
_3 = _7;
_22 = -_18;
match _4 {
0 => bb7,
1 => bb4,
142901756103024099465006455248253694948 => bb14,
_ => bb6
}
}
bb16 = {
_12 = _13.fld0.0.1;
_13.fld1 = _11.0.1;
_3 = _7;
_8 = _2;
_11.0.0 = 5831168735749522811_u64;
_16 = !1640609239_i32;
_3 = !_5;
match _11.0.0 {
5831168735749522811 => bb5,
_ => bb3
}
}
bb17 = {
_3 = _8 == _1;
_17 = core::ptr::addr_of_mut!(_13.fld0.0);
_13.fld0.0.0 = [(-4241085543363555461_i64),(-171511152930719967_i64)];
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_17 = core::ptr::addr_of_mut!((*_17));
(*_17).0 = [(-3093079750300189202_i64),4580945702655836643_i64];
_4 = 142901756103024099465006455248253694948_i128;
_11.1 = (*_17).2;
(*_17).1 = -_12;
_13.fld0.0.2 = _11.1 >> _11.1;
_8 = _6 < _3;
_14 = !(-9223372036854775808_isize);
_21 = [_16,_16,_16,_16,_16,_16,_16];
_1 = _5 < _8;
Goto(bb7)
}
bb18 = {
_11.0 = (1351095155270963861_u64, _13.fld1, 30658_i16);
_22 = (*_17).2 as f32;
_13.fld1 = _11.0.2 as i8;
_15 = core::ptr::addr_of_mut!(_19);
_2 = _1 != _8;
_20 = [_4,_4,_4];
_1 = !_7;
_6 = _3;
_11.0.0 = 14644097700428716477_u64;
(*_17).2 = _4 as u8;
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_24 = _6 < _1;
_15 = core::ptr::addr_of_mut!(_19);
_11.0 = (168331799228655698_u64, _13.fld1, 20169_i16);
_16 = (-1733873079_i32);
_17 = core::ptr::addr_of_mut!(_13.fld0.0);
(*_17).1 = -_12;
Goto(bb8)
}
bb19 = {
(*_17).1 = -_12;
_5 = _6;
_5 = !_6;
(*_15) = _20;
_20 = [_4,_4,_4];
(*_15) = [_4,_4,_4];
_26.2 = 176779476761976338610003744377742952150_u128;
_19 = _20;
_12 = -(*_17).1;
_26.1 = (_11.1,);
_9 = [_8];
_25 = _16;
SetDiscriminant(RET, 1);
_27 = _21;
_21 = [_16,_25,_25,_16,_16,_25,_25];
_23 = '\u{e4273}';
Goto(bb10)
}
bb20 = {
_3 = _1 < _7;
_27 = [_25,_16,_25,_25,_16,_25,_25];
_40 = [_11.1,_26.1.0,_26.1.0];
_29 = _7 > _3;
_36 = _23;
_26.1 = (_13.fld0.0.2,);
_37 = _4 as usize;
(*_17).0 = [8283028407891906754_i64,4693760306628553263_i64];
_13.fld0.0.1 = -_12;
_22 = _16 as f32;
_31 = _29 != _29;
_10 = [_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0,_11.0.0];
_43 = _25 as isize;
(*_17).0 = [3102508043579533_i64,7375973345056948961_i64];
_41 = !58809_u16;
_26.3 = 4006614665_u32 & 2545581775_u32;
_20 = [_4,_4,_4];
_8 = !_2;
RET = Adt63::Variant0 { fld0: _27 };
(*_17).2 = _11.1;
Goto(bb21)
}
bb21 = {
Call(_45 = dump_var(17_usize, 43_usize, Move(_43), 29_usize, Move(_29), 6_usize, Move(_6), 14_usize, Move(_14)), bb22, UnwindUnreachable())
}
bb22 = {
Call(_45 = dump_var(17_usize, 24_usize, Move(_24), 41_usize, Move(_41), 10_usize, Move(_10), 35_usize, Move(_35)), bb23, UnwindUnreachable())
}
bb23 = {
Call(_45 = dump_var(17_usize, 4_usize, Move(_4), 8_usize, Move(_8), 27_usize, Move(_27), 3_usize, Move(_3)), bb24, UnwindUnreachable())
}
bb24 = {
Call(_45 = dump_var(17_usize, 11_usize, Move(_11), 9_usize, Move(_9), 21_usize, Move(_21), 46_usize, _46), bb25, UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: bool,mut _2: ([i64; 2], f64, u8),mut _3: u8,mut _4: ([i64; 2], f64, u8),mut _5: bool,mut _6: [i64; 2],mut _7: [usize; 7],mut _8: *mut ([i64; 2], f64, u8),mut _9: i64,mut _10: bool,mut _11: i32) -> [i32; 8] {
mir! {
type RET = [i32; 8];
let _12: i32;
let _13: ([i64; 2], f64, u8);
let _14: ();
let _15: ();
{
(*_8) = (_4.0, _2.1, _4.2);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_2 = _4;
_6 = _4.0;
(*_8).1 = 3187_u16 as f64;
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(18_usize, 6_usize, Move(_6), 11_usize, Move(_11), 10_usize, Move(_10), 3_usize, Move(_3)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: u8,mut _2: u8,mut _3: [i32; 7],mut _4: (u64, i8, i16),mut _5: isize,mut _6: isize,mut _7: [u8; 3],mut _8: u64,mut _9: f32,mut _10: isize,mut _11: [bool; 1],mut _12: [u64; 6],mut _13: (([i64; 2], f64, u8), [u8; 3]),mut _14: isize,mut _15: ([u64; 6], bool, i128, [i32; 7])) -> ((u64, i8, i16), u8) {
mir! {
type RET = ((u64, i8, i16), u8);
let _16: [i16; 8];
let _17: bool;
let _18: i128;
let _19: ();
let _20: ();
{
RET.0.0 = !_8;
RET.0 = (_8, _4.1, _4.2);
_14 = _6 << _8;
_13.0.0 = [6020307315645802906_i64,(-9140222672964365789_i64)];
_17 = _15.1;
RET = (_4, _1);
RET.0.2 = _8 as i16;
_3 = _15.3;
RET = (_4, _2);
_15.2 = 162230389407416893673094057552039426019_i128 + 140268309346821785994452841692819481118_i128;
_9 = _13.0.1 as f32;
_16 = [_4.2,_4.2,RET.0.2,_4.2,RET.0.2,_4.2,RET.0.2,_4.2];
RET.0.1 = _4.1 << _8;
Goto(bb1)
}
bb1 = {
Call(_19 = dump_var(19_usize, 10_usize, Move(_10), 12_usize, Move(_12), 7_usize, Move(_7), 16_usize, Move(_16)), bb2, UnwindUnreachable())
}
bb2 = {
Call(_19 = dump_var(19_usize, 14_usize, Move(_14), 4_usize, Move(_4), 15_usize, Move(_15), 20_usize, _20), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(3578645766577046429_u64), std::hint::black_box('\u{94e7d}'), std::hint::black_box((-620420111_i32)), std::hint::black_box((-140435666734375046792747968090779363481_i128)));
                
            }
#[derive(Debug)]
pub struct Adt50 {
fld0: (([i64; 2], f64, u8), [u8; 3]),
fld1: i8,
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: u16,
fld1: [usize; 7],
fld2: [i128; 8],
fld3: (u64, i8, i16),
fld4: (f32,),
fld5: ((u64, i8, i16), u8),
fld6: usize,

},
Variant1{
fld0: *mut [u32; 3],
fld1: ((u64, i8, i16), u8),
fld2: (u64, i8, i16),
fld3: f32,
fld4: f64,

},
Variant2{
fld0: *mut ([i64; 2], f64, u8),
fld1: [u64; 4],
fld2: u16,
fld3: [u32; 3],
fld4: u128,
fld5: usize,

},
Variant3{
fld0: i16,
fld1: Adt50,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt52 {
Variant0{
fld0: [bool; 1],
fld1: [usize; 7],
fld2: *mut (([i64; 2], f64, u8), [u8; 3]),
fld3: ([i32; 3], (u8,), u128, u32),
fld4: (u64, i8, i16),
fld5: i32,
fld6: i64,
fld7: [i8; 1],

},
Variant1{
fld0: *mut (([i64; 2], f64, u8), [u8; 3]),

},
Variant2{
fld0: [usize; 2],
fld1: *const [i8; 1],
fld2: isize,
fld3: i8,
fld4: (u64, i8, i16),
fld5: f64,
fld6: (([i64; 2], f64, u8), [u8; 3]),
fld7: [i128; 8],

},
Variant3{
fld0: ([i32; 3], (u8,), u128, u32),
fld1: [usize; 7],
fld2: [i128; 8],
fld3: [u32; 3],
fld4: u64,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: *mut (([i64; 2], f64, u8), [u8; 3]),
fld1: u32,
fld2: [usize; 7],
fld3: usize,

},
Variant1{
fld0: bool,
fld1: u16,
fld2: (f32,),
fld3: i128,
fld4: i16,

},
Variant2{
fld0: bool,
fld1: [u64; 4],
fld2: [u32; 4],
fld3: [i32; 3],
fld4: *mut [i128; 3],
fld5: *mut (([i64; 2], f64, u8), [u8; 3]),
fld6: [i128; 8],

},
Variant3{
fld0: u32,
fld1: char,
fld2: [i32; 3],
fld3: Adt52,
fld4: u64,
fld5: ([i32; 3], (u8,), u128, u32),
fld6: *const [i8; 1],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: (u64, i8, i16),
fld1: [usize; 2],
fld2: *mut [bool; 1],
fld3: f32,
fld4: [u32; 3],
fld5: i128,
fld6: [i32; 8],

},
Variant1{
fld0: [u32; 4],
fld1: ((u64, i8, i16), u8),
fld2: *mut [i128; 3],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt55 {
Variant0{
fld0: [u64; 6],
fld1: [usize; 2],
fld2: i32,
fld3: *const [i8; 1],

},
Variant1{
fld0: [u16; 4],
fld1: (f32,),
fld2: [i16; 8],
fld3: [u32; 4],
fld4: *mut ([i64; 2], f64, u8),

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: Adt51,
fld1: i16,

},
Variant1{
fld0: u128,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: ([i32; 3], (u8,), u128, u32),
fld1: char,
fld2: [u16; 8],
fld3: u64,
fld4: (f32,),

},
Variant1{
fld0: i128,
fld1: u128,
fld2: [i128; 8],
fld3: Adt50,
fld4: *const [i8; 1],

},
Variant2{
fld0: Adt56,
fld1: [u16; 4],

},
Variant3{
fld0: ([u64; 6], bool, i128, [i32; 7]),
fld1: char,
fld2: f32,
fld3: (f32,),
fld4: f64,
fld5: Adt53,
fld6: [i64; 2],
fld7: ((u64, i8, i16), u8),

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: [i64; 2],
fld1: u128,

},
Variant1{
fld0: [i64; 2],
fld1: char,
fld2: ((u64, i8, i16), u8),
fld3: [i32; 7],

},
Variant2{
fld0: [u64; 4],
fld1: char,
fld2: u16,
fld3: Adt53,
fld4: *mut ([i64; 2], f64, u8),
fld5: (f32,),
fld6: [i64; 2],
fld7: f64,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: [i128; 8],
fld1: [u16; 4],
fld2: isize,
fld3: [u64; 4],
fld4: ([u64; 6], bool, i128, [i32; 7]),
fld5: Adt58,
fld6: *const [u8; 3],

},
Variant1{
fld0: [i128; 8],
fld1: Adt53,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt60 {
Variant0{
fld0: ([i32; 3], (u8,), u128, u32),

},
Variant1{
fld0: i8,

},
Variant2{
fld0: [usize; 2],
fld1: u8,
fld2: [i32; 3],
fld3: (u64, i8, i16),
fld4: [i32; 8],
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: *const [u8; 3],
fld1: [u8; 3],
fld2: (u64, i8, i16),
fld3: [i128; 3],
fld4: [u16; 8],
fld5: *mut [bool; 1],
fld6: ([i64; 2], f64, u8),

},
Variant1{
fld0: usize,
fld1: Adt58,
fld2: *mut ([i64; 2], f64, u8),
fld3: [usize; 2],
fld4: ((u64, i8, i16), u8),
fld5: [u32; 3],
fld6: (u64, i8, i16),

}}
#[derive(Debug)]
pub struct Adt62 {
fld0: ((u64, i8, i16), u8),
fld1: (u64, i8, i16),
}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: [i32; 7],

},
Variant1{
fld0: *const [i8; 1],

}}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: f32,
fld1: Adt55,
fld2: u64,
fld3: *const [i8; 1],

},
Variant1{
fld0: u32,
fld1: ([i32; 3], (u8,), u128, u32),
fld2: [u32; 3],
fld3: [i32; 7],
fld4: (u8,),
fld5: [u16; 8],

},
Variant2{
fld0: [i16; 8],
fld1: Adt54,
fld2: u8,

}}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: ([i64; 2], f64, u8),
fld1: ([u64; 6], bool, i128, [i32; 7]),
fld2: *mut (([i64; 2], f64, u8), [u8; 3]),
fld3: Adt54,
fld4: i64,

},
Variant1{
fld0: Adt59,

},
Variant2{
fld0: u16,
fld1: *mut [bool; 1],

},
Variant3{
fld0: ([u64; 6], bool, i128, [i32; 7]),
fld1: char,
fld2: ([i32; 3], (u8,), u128, u32),
fld3: i64,
fld4: Adt62,
fld5: *const [u8; 3],

}}
#[derive(Debug)]
pub enum Adt66 {
Variant0{
fld0: [usize; 7],
fld1: *mut (([i64; 2], f64, u8), [u8; 3]),
fld2: Adt52,
fld3: u16,
fld4: i16,
fld5: Adt56,

},
Variant1{
fld0: [u32; 3],
fld1: *mut ([i64; 2], f64, u8),

},
Variant2{
fld0: [i16; 8],
fld1: (u8,),
fld2: isize,
fld3: ([i32; 3], (u8,), u128, u32),
fld4: Adt53,
fld5: *mut [i128; 3],

}}

