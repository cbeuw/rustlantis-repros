#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u64,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: u128,mut _8: u32,mut _9: usize,mut _10: u8) -> *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)) {
mir! {
type RET = *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _11: *const (i16, isize);
let _12: isize;
let _13: isize;
let _14: *const [i16; 1];
let _15: f64;
let _16: Adt47;
let _17: char;
let _18: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _19: isize;
let _20: ();
let _21: ();
{
_8 = 1695638873_u32 * 875308904_u32;
_4 = 3792_u16 as i8;
_3 = (-9223372036854775808_isize) ^ 91_isize;
_2 = '\u{67dd2}';
_3 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_2 = '\u{a074d}';
_5 = !2670_i16;
_9 = !3_usize;
_10 = 23_u8 + 225_u8;
_6 = -(-928191687_i32);
_7 = 43771965250865209485499915679173161819_u128 * 151625360207067247333864007406221287639_u128;
Goto(bb1)
}
bb1 = {
_12 = _3;
_7 = 92961378778751608429158002842973140070_i128 as u128;
_4 = (-84_i8) | 2_i8;
_7 = 322774059094257689563509672979897689152_u128;
_9 = !0_usize;
_2 = '\u{dee18}';
_10 = _8 as u8;
_6 = (-1010183000_i32);
_10 = !10_u8;
_6 = (-408708501_i32);
_5 = -19665_i16;
_12 = -_3;
_8 = 2943757446_u32;
_5 = _10 as i16;
_1 = !12696289296266571337_u64;
_10 = !203_u8;
_3 = -_12;
Call(RET = fn1(_7, _3, _1, _3, _4, _12, _12, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = 12951470971474182390_usize & 7_usize;
_10 = 78_u8 + 15_u8;
_12 = _3 << _10;
_5 = 14378_u16 as i16;
_7 = _4 as u128;
_13 = _3 - _12;
_3 = _13 - _12;
_5 = -(-29815_i16);
_4 = 99_i8;
_2 = '\u{ec09e}';
_3 = _12;
_7 = 267114736657016287950868667462888312085_u128 - 237998195733482349955104195962629481748_u128;
_17 = _2;
Goto(bb3)
}
bb3 = {
Call(_20 = dump_var(0_usize, 3_usize, Move(_3), 1_usize, Move(_1), 5_usize, Move(_5), 6_usize, Move(_6)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_20 = dump_var(0_usize, 4_usize, Move(_4), 12_usize, Move(_12), 21_usize, _21, 21_usize, _21), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u128,mut _2: isize,mut _3: u64,mut _4: isize,mut _5: i8,mut _6: isize,mut _7: isize,mut _8: char) -> *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)) {
mir! {
type RET = *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _9: i64;
let _10: [u128; 5];
let _11: ();
let _12: ();
{
_1 = 117554399397307209242917119228126251776_u128;
_2 = 27138_u16 as isize;
_2 = _7 >> _6;
_1 = 308119475696982299272618510696704518764_u128;
_1 = 102491641438394307047997987276507931604_u128;
_5 = (-118_i8) >> _6;
_8 = '\u{b75be}';
_5 = (-49_i8);
_2 = 8337_u16 as isize;
_1 = 3977300619717993879_usize as u128;
_1 = 4_u8 as u128;
_2 = _6;
_1 = !192189499862187916257159479509356981564_u128;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463463374607431768211407 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_8 = '\u{9b5d}';
_9 = false as i64;
_2 = -_4;
_7 = _5 as isize;
_3 = !13050260326857930163_u64;
_4 = _2;
_3 = 16631387375867168062_u64 << _1;
_5 = 98_i8 & 99_i8;
_3 = !6584225159117653496_u64;
_6 = -_4;
_3 = 45421_u16 as u64;
_7 = (-3367_i16) as isize;
_6 = _2;
_6 = _4 - _2;
_5 = (-68_i8);
_4 = _2 & _6;
_1 = 16820943628944293923662911077633334885_u128 & 74219951977944017986020097171248090342_u128;
_8 = '\u{a5c84}';
Call(RET = fn2(_4, _4, _8, _6, _1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_2 = !_6;
_5 = 49_i8;
_6 = _4;
_8 = '\u{2814a}';
_8 = '\u{4f5ac}';
_1 = !161744171519387995048486085069103382018_u128;
_5 = !(-118_i8);
_6 = _4 + _4;
_1 = _9 as u128;
_5 = 3_usize as i8;
_9 = (-10363_i16) as i64;
_7 = 22554_u16 as isize;
_8 = '\u{b31c4}';
_4 = -_6;
_3 = 4148497913584239871_u64;
_9 = -4278419914775237010_i64;
_8 = '\u{3643c}';
_2 = !_6;
_10 = [_1,_1,_1,_1,_1];
_8 = '\u{84408}';
_1 = 111909198212970834581142724482522579983_u128;
_6 = _2;
Goto(bb11)
}
bb11 = {
Call(_11 = dump_var(1_usize, 4_usize, Move(_4), 2_usize, Move(_2), 3_usize, Move(_3), 5_usize, Move(_5)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_11 = dump_var(1_usize, 6_usize, Move(_6), 12_usize, _12, 12_usize, _12, 12_usize, _12), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: isize,mut _2: isize,mut _3: char,mut _4: isize,mut _5: u128) -> *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)) {
mir! {
type RET = *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _6: isize;
let _7: [i16; 1];
let _8: i32;
let _9: u64;
let _10: [i16; 7];
let _11: u128;
let _12: Adt55;
let _13: (u16, bool, f32);
let _14: (char, i8, u8);
let _15: i8;
let _16: [u16; 6];
let _17: char;
let _18: *mut f64;
let _19: *mut (i128,);
let _20: Adt53;
let _21: (f32, bool);
let _22: ();
let _23: ();
{
_2 = _1 * _1;
_2 = _1;
_2 = _4;
_5 = 158031933862000047120274781552231991497_u128;
_6 = _2;
match _5 {
158031933862000047120274781552231991497 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_1 = _2;
_1 = 9477285348072808514_usize as isize;
_5 = 219196405363720010567481548272426406872_u128 >> _4;
_5 = 23462_i16 as u128;
_1 = _2 << _2;
_2 = _4 & _1;
_6 = !_2;
_8 = 39_u8 as i32;
_8 = -(-217475815_i32);
_9 = _3 as u64;
_2 = (-34_i8) as isize;
_8 = (-662316475_i32) - (-1666852145_i32);
_8 = -(-513640951_i32);
_7 = [7009_i16];
_7 = [29797_i16];
_6 = _4;
_9 = 7413769265366185187_u64;
_6 = _1;
_10 = [4150_i16,28963_i16,30346_i16,(-15903_i16),(-9574_i16),(-27735_i16),(-7003_i16)];
match _9 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
7413769265366185187 => bb10,
_ => bb9
}
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_5 = 147_u8 as u128;
_10 = [32137_i16,(-27163_i16),29677_i16,(-17572_i16),32128_i16,26794_i16,964_i16];
_11 = _5;
_2 = -_6;
_5 = _11 | _11;
_1 = _2 >> _6;
_7 = [(-9421_i16)];
_13.1 = !false;
_14 = (_3, (-15_i8), 69_u8);
_8 = -(-1798491446_i32);
_10 = [(-16955_i16),26963_i16,29400_i16,17285_i16,(-18215_i16),(-25496_i16),4393_i16];
_15 = _14.1 - _14.1;
_13.2 = 0_usize as f32;
_6 = (-1797690657558348880_i64) as isize;
_9 = 17899527482516510202_u64;
_14.2 = !155_u8;
_14.0 = _3;
Call(RET = fn3(_11, _14.0, _14.0, _15, _4, _15, _7, _10, _3, _1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_11 = _5 & _5;
_5 = !_11;
_13.2 = _15 as f32;
_13.1 = false;
_2 = _4 | _1;
_14.2 = 78_u8;
_9 = 17667945709000859654_u64;
_17 = _14.0;
_14.2 = 221_u8 - 110_u8;
_13.2 = 57815_u16 as f32;
_1 = _2;
_17 = _14.0;
_17 = _14.0;
_14.1 = _15 * _15;
_11 = _5;
_21.1 = _13.1 & _13.1;
_14 = (_3, _15, 22_u8);
_11 = !_5;
_21.1 = !_13.1;
_1 = !_2;
_8 = (-128429996_i32);
Goto(bb12)
}
bb12 = {
Call(_22 = dump_var(2_usize, 17_usize, Move(_17), 2_usize, Move(_2), 9_usize, Move(_9), 8_usize, Move(_8)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_22 = dump_var(2_usize, 1_usize, Move(_1), 7_usize, Move(_7), 4_usize, Move(_4), 23_usize, _23), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: u128,mut _2: char,mut _3: char,mut _4: i8,mut _5: isize,mut _6: i8,mut _7: [i16; 1],mut _8: [i16; 7],mut _9: char,mut _10: isize) -> *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)) {
mir! {
type RET = *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _11: [i16; 1];
let _12: [u8; 8];
let _13: [usize; 4];
let _14: u16;
let _15: u128;
let _16: (i128,);
let _17: [usize; 4];
let _18: (u16, bool, f32);
let _19: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _20: Adt56;
let _21: [u128; 3];
let _22: bool;
let _23: *mut (i128,);
let _24: i32;
let _25: ((*mut *mut char,), i32, i16);
let _26: Adt59;
let _27: i8;
let _28: [i16; 1];
let _29: (i16, isize);
let _30: Adt47;
let _31: (i64, u8, *mut i8);
let _32: [u8; 8];
let _33: isize;
let _34: *mut char;
let _35: i128;
let _36: u8;
let _37: bool;
let _38: (f32, i16, i128, usize, i32, u32);
let _39: f32;
let _40: [i64; 4];
let _41: i32;
let _42: usize;
let _43: f64;
let _44: *const (i16, isize);
let _45: [isize; 1];
let _46: Adt59;
let _47: [usize; 4];
let _48: isize;
let _49: *mut *mut char;
let _50: [isize; 1];
let _51: i32;
let _52: f32;
let _53: i64;
let _54: [u128; 5];
let _55: Adt56;
let _56: f32;
let _57: (f32, bool);
let _58: char;
let _59: [u128; 5];
let _60: (f32, bool);
let _61: (u128,);
let _62: i64;
let _63: bool;
let _64: *mut *mut char;
let _65: Adt59;
let _66: (i128,);
let _67: [u8; 8];
let _68: *mut i8;
let _69: i64;
let _70: isize;
let _71: (u16, bool, f32);
let _72: *mut (i128,);
let _73: [u8; 8];
let _74: (char, i8, u8);
let _75: f32;
let _76: f32;
let _77: (f32, i16, i128, usize, i32, u32);
let _78: u128;
let _79: i8;
let _80: (u128,);
let _81: Adt51;
let _82: isize;
let _83: [i16; 1];
let _84: [i16; 1];
let _85: char;
let _86: u128;
let _87: u32;
let _88: f64;
let _89: f64;
let _90: *const (i16, isize);
let _91: isize;
let _92: Adt57;
let _93: *mut *mut char;
let _94: i16;
let _95: i8;
let _96: u128;
let _97: f64;
let _98: (char, i8, u8);
let _99: (f32, i16, i128, usize, i32, u32);
let _100: u128;
let _101: Adt49;
let _102: u8;
let _103: f32;
let _104: isize;
let _105: (char, i8, u8);
let _106: *const (i16, isize);
let _107: ((*mut *mut char,), i32, i16);
let _108: [isize; 1];
let _109: bool;
let _110: Adt51;
let _111: isize;
let _112: bool;
let _113: *mut i8;
let _114: i32;
let _115: usize;
let _116: [i16; 7];
let _117: (f32, i16, i128, usize, i32, u32);
let _118: u128;
let _119: f64;
let _120: [u16; 6];
let _121: i8;
let _122: Adt56;
let _123: [u16; 6];
let _124: [u8; 8];
let _125: isize;
let _126: (f32, i16, i128, usize, i32, u32);
let _127: isize;
let _128: char;
let _129: i64;
let _130: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _131: i64;
let _132: char;
let _133: Adt53;
let _134: i128;
let _135: (f32, i16, i128, usize, i32, u32);
let _136: f32;
let _137: [u8; 8];
let _138: i128;
let _139: ();
let _140: ();
{
_6 = _4 & _4;
_6 = _4 << _10;
_2 = _3;
_5 = _10;
_2 = _9;
_1 = 85_u8 as u128;
_4 = _6 & _6;
_6 = _4;
_6 = (-1312211157_i32) as i8;
_3 = _9;
_9 = _2;
_3 = _2;
_2 = _3;
_11 = _7;
_11 = [(-8947_i16)];
_6 = _4;
_2 = _3;
_3 = _2;
_12 = [158_u8,231_u8,140_u8,234_u8,16_u8,4_u8,144_u8,174_u8];
_6 = _4 >> _10;
_1 = 88439083570196630338537653248116011189_u128 * 240990085967263359243151916333117138266_u128;
_4 = 21732101191805895081633697749685395528_i128 as i8;
_7 = [11464_i16];
_9 = _2;
_3 = _9;
_6 = !_4;
Call(_2 = fn4(_9, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = _9;
_5 = -_10;
_3 = _9;
_9 = _2;
Goto(bb2)
}
bb2 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb3 = {
_6 = _4;
_3 = _2;
_1 = !67402487009942909492455006278564859544_u128;
_4 = _6 | _6;
_1 = !62436494608003735323996994122626389449_u128;
_1 = !262870707614772736036124979110668170403_u128;
_9 = _3;
_5 = _10 - _10;
_2 = _3;
_13 = [9511123469942928663_usize,0_usize,4_usize,18252542539340606984_usize];
_13 = [6_usize,6_usize,6_usize,15077279027595497699_usize];
_6 = _4;
_2 = _3;
_4 = _2 as i8;
_11 = [11130_i16];
_7 = [(-20773_i16)];
_10 = !_5;
_2 = _9;
_16 = (118141921928562029210206818354030688825_i128,);
_8 = [(-20872_i16),(-32638_i16),(-16810_i16),16811_i16,(-8884_i16),(-1961_i16),11576_i16];
_2 = _3;
_13 = [3552076951063304698_usize,17612045134387690110_usize,6_usize,0_usize];
match _16.0 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
118141921928562029210206818354030688825 => bb10,
_ => bb9
}
}
bb4 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb5 = {
_2 = _9;
_5 = -_10;
_3 = _9;
_9 = _2;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = !_6;
_8 = [(-19109_i16),14917_i16,(-22648_i16),(-4149_i16),(-30756_i16),(-14002_i16),18751_i16];
_7 = [(-23355_i16)];
_5 = !_10;
_13 = [1680625043515449885_usize,4_usize,3_usize,11948512436924093865_usize];
_13 = [10237516243996945860_usize,5_usize,3542679997422952314_usize,1_usize];
_11 = [(-19989_i16)];
_1 = !77690878936938333201539151193899501610_u128;
_17 = _13;
_16 = ((-23089740249454604414150268503289040816_i128),);
_5 = _10;
_6 = true as i8;
_18.0 = _14;
_9 = _3;
_16.0 = 45503726039798118224609882670576267057_i128 + 131657715906606573262274949818002251682_i128;
_14 = !_18.0;
_2 = _9;
_1 = _16.0 as u128;
_3 = _9;
_18.1 = false;
_6 = 3_usize as i8;
_7 = _11;
_16.0 = 652103372488192649_u64 as i128;
_9 = _3;
_9 = _3;
_18.0 = !_14;
Goto(bb11)
}
bb11 = {
_15 = _1 | _1;
_18.1 = !false;
_12 = [171_u8,85_u8,13_u8,109_u8,133_u8,223_u8,193_u8,145_u8];
_18.2 = _16.0 as f32;
_16.0 = -(-92432040495984877499067177484783074396_i128);
_4 = _10 as i8;
_5 = _10;
_18.2 = 9479476104965185850_u64 as f32;
_23 = core::ptr::addr_of_mut!(_16);
_16 = ((-42567223311008976397939837000917912817_i128),);
Goto(bb12)
}
bb12 = {
_15 = 12206893712915156373_usize as u128;
_21 = [_1,_1,_15];
_22 = _18.1;
_4 = _6;
_5 = 91_u8 as isize;
(*_23) = ((-117672651255090787698065926499559801301_i128),);
_25.1 = _18.0 as i32;
_6 = _4 * _4;
_22 = !_18.1;
_24 = _25.1;
_7 = _11;
_16 = (84083099094477809270360886014770540741_i128,);
_25.2 = !(-28876_i16);
_5 = !_10;
_1 = !_15;
(*_23).0 = 120888701457751857001876698537054684071_i128;
_2 = _9;
_10 = !_5;
_11 = [_25.2];
Goto(bb13)
}
bb13 = {
_15 = _1 >> _5;
_2 = _9;
_8 = [_25.2,_25.2,_25.2,_25.2,_25.2,_25.2,_25.2];
_4 = _6;
Goto(bb14)
}
bb14 = {
_17 = _13;
_18.0 = !_14;
match _16.0 {
0 => bb15,
1 => bb16,
120888701457751857001876698537054684071 => bb18,
_ => bb17
}
}
bb15 = {
Return()
}
bb16 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb17 = {
_4 = !_6;
_8 = [(-19109_i16),14917_i16,(-22648_i16),(-4149_i16),(-30756_i16),(-14002_i16),18751_i16];
_7 = [(-23355_i16)];
_5 = !_10;
_13 = [1680625043515449885_usize,4_usize,3_usize,11948512436924093865_usize];
_13 = [10237516243996945860_usize,5_usize,3542679997422952314_usize,1_usize];
_11 = [(-19989_i16)];
_1 = !77690878936938333201539151193899501610_u128;
_17 = _13;
_16 = ((-23089740249454604414150268503289040816_i128),);
_5 = _10;
_6 = true as i8;
_18.0 = _14;
_9 = _3;
_16.0 = 45503726039798118224609882670576267057_i128 + 131657715906606573262274949818002251682_i128;
_14 = !_18.0;
_2 = _9;
_1 = _16.0 as u128;
_3 = _9;
_18.1 = false;
_6 = 3_usize as i8;
_7 = _11;
_16.0 = 652103372488192649_u64 as i128;
_9 = _3;
_9 = _3;
_18.0 = !_14;
Goto(bb11)
}
bb18 = {
_3 = _9;
_28 = [_25.2];
_27 = _6;
(*_23) = ((-134269107458232483944060888113671958904_i128),);
_17 = [2514598123666434993_usize,7_usize,17553746654078859810_usize,2_usize];
_2 = _3;
_16.0 = 16053480132242240304_u64 as i128;
Goto(bb19)
}
bb19 = {
(*_23) = ((-58931127362771465158829970361218181263_i128),);
_15 = _1;
(*_23).0 = _10 as i128;
_9 = _3;
_25.2 = (-21430_i16) >> _10;
_18.1 = _25.2 == _25.2;
Goto(bb20)
}
bb20 = {
_31.2 = core::ptr::addr_of_mut!(_4);
_10 = _5 - _5;
_18.0 = !_14;
_8 = [_25.2,_25.2,_25.2,_25.2,_25.2,_25.2,_25.2];
_10 = _5 - _5;
_3 = _9;
_30 = Adt47::Variant2 { fld0: _18.2 };
_18.0 = _14 >> _4;
_31.0 = !2924450704944695306_i64;
_23 = core::ptr::addr_of_mut!((*_23));
Call(_1 = core::intrinsics::transmute(_16.0), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_24 = -_25.1;
_1 = _18.1 as u128;
_21 = [_1,_1,_1];
_31.1 = _10 as u8;
(*_23) = ((-100475369970657182339150080997155750736_i128),);
_22 = _18.1;
_28 = [_25.2];
place!(Field::<f32>(Variant(_30, 2), 0)) = _18.2;
_35 = -(*_23).0;
_10 = 701857728262036574_usize as isize;
_29.0 = -_25.2;
SetDiscriminant(_30, 0);
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_5 = _10 * _10;
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_38.5 = 3272009850_u32 >> _31.1;
_38.2 = _24 as i128;
_11 = [_25.2];
_38.4 = _25.1 | _25.1;
_25.0.0 = core::ptr::addr_of_mut!(_34);
_18.2 = _31.0 as f32;
_18.2 = _29.0 as f32;
_32 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
Goto(bb22)
}
bb22 = {
_2 = _9;
_38.0 = _18.2;
_36 = _31.1;
_21 = [_1,_1,_1];
_38.4 = -_25.1;
_22 = !_18.1;
_16 = (_38.2,);
_11 = [_25.2];
Goto(bb23)
}
bb23 = {
_29 = (_25.2, _5);
(*_23).0 = _35;
_6 = _27;
_34 = core::ptr::addr_of_mut!(_9);
_43 = _31.0 as f64;
_38.0 = _18.2;
Goto(bb24)
}
bb24 = {
_35 = -_38.2;
_36 = _18.0 as u8;
_3 = _9;
_44 = core::ptr::addr_of!(_29);
_43 = 3280677233674167573_u64 as f64;
_44 = core::ptr::addr_of!((*_44));
_16.0 = _6 as i128;
_15 = !_1;
_43 = _38.5 as f64;
_16 = (_38.2,);
_38.1 = _18.2 as i16;
_47 = [4_usize,0_usize,9685903851065156348_usize,12863371665979866265_usize];
_14 = _18.0;
(*_44) = (_38.1, _5);
_38.4 = 9081419624774106848_usize as i32;
Goto(bb25)
}
bb25 = {
_32 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
_13 = _17;
_29.0 = _25.2;
_30 = Adt47::Variant2 { fld0: _38.0 };
_10 = (*_44).1;
_27 = !_6;
_34 = core::ptr::addr_of_mut!(_2);
_37 = _18.1 != _22;
(*_44) = (_25.2, _10);
_6 = _38.5 as i8;
_29.0 = _38.0 as i16;
_2 = _3;
_10 = (*_44).1;
_35 = _31.1 as i128;
_38.3 = !5160383238162666753_usize;
_38.3 = 17541512068734923877_usize;
_10 = !(*_44).1;
_42 = _38.3;
_41 = -_25.1;
_50 = [(*_44).1];
_48 = _10;
(*_44) = (_25.2, _5);
_45 = [(*_44).1];
_9 = (*_34);
match _42 {
17541512068734923877 => bb26,
_ => bb14
}
}
bb26 = {
SetDiscriminant(_30, 1);
_45 = [(*_44).1];
_9 = (*_34);
place!(Field::<*mut *mut char>(Variant(_30, 1), 3)) = _25.0.0;
_1 = !_15;
_52 = _18.2 - _38.0;
_38 = (_18.2, _29.0, _35, _42, _24, 1132870161_u32);
place!(Field::<[u8; 8]>(Variant(_30, 1), 0)) = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
_36 = _38.1 as u8;
place!(Field::<u16>(Variant(_30, 1), 4)) = _29.1 as u16;
place!(Field::<*mut f64>(Variant(_30, 1), 5)) = core::ptr::addr_of_mut!(_43);
_7 = _28;
_48 = _29.1;
_18.0 = !_14;
place!(Field::<i64>(Variant(_30, 1), 6)) = _31.0;
_52 = _18.2 + _38.0;
_15 = _1;
_13 = [_42,_38.3,_38.3,_42];
Goto(bb27)
}
bb27 = {
_32 = Field::<[u8; 8]>(Variant(_30, 1), 0);
_57 = (_52, _18.1);
place!(Field::<*mut f64>(Variant(_30, 1), 5)) = core::ptr::addr_of_mut!(_43);
place!(Field::<u8>(Variant(_30, 1), 7)) = (*_34) as u8;
_49 = core::ptr::addr_of_mut!(_34);
_25.1 = _57.0 as i32;
_39 = -_52;
_12 = [_31.1,_36,_36,_31.1,_36,_31.1,_31.1,_36];
_53 = Field::<i64>(Variant(_30, 1), 6);
_18 = (_14, _37, _57.0);
place!(Field::<isize>(Variant(_30, 1), 2)) = _25.1 as isize;
(*_34) = _9;
place!(Field::<i64>(Variant(_30, 1), 6)) = _53 + _31.0;
_31.1 = _36;
place!(Field::<*mut f64>(Variant(_30, 1), 5)) = core::ptr::addr_of_mut!(_43);
_58 = (*_34);
_40 = [_53,Field::<i64>(Variant(_30, 1), 6),_53,Field::<i64>(Variant(_30, 1), 6)];
place!(Field::<u8>(Variant(_30, 1), 7)) = _36 >> _25.2;
(*_34) = _58;
place!(Field::<*mut *mut char>(Variant(_30, 1), 3)) = _49;
_38.5 = 1151872422_u32;
(*_34) = _9;
Goto(bb28)
}
bb28 = {
_25.0 = (_49,);
_18.0 = !_14;
_30 = Adt47::Variant0 { fld0: _57 };
_39 = _31.1 as f32;
_5 = _29.1;
_52 = _31.0 as f32;
_27 = -_6;
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_57.1;
_50 = [(*_44).1];
_53 = _31.0;
_48 = -_10;
_4 = !_6;
_60.0 = _38.0;
_4 = _6 + _27;
_60.1 = _22;
_25.0.0 = _49;
_38.0 = _57.0 + _57.0;
_47 = [_42,_38.3,_42,_42];
_22 = _18.1;
_17 = [_42,_38.3,_42,_38.3];
_18 = (_14, _22, _38.0);
_32 = [_36,_36,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
_18.2 = _57.0;
Goto(bb29)
}
bb29 = {
_51 = _35 as i32;
_42 = _38.3;
(*_23) = (_38.2,);
_40 = [_53,_53,_31.0,_31.0];
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).0 = _60.0;
match _42 {
0 => bb25,
1 => bb14,
2 => bb28,
3 => bb30,
4 => bb31,
5 => bb32,
17541512068734923877 => bb34,
_ => bb33
}
}
bb30 = {
_4 = !_6;
_8 = [(-19109_i16),14917_i16,(-22648_i16),(-4149_i16),(-30756_i16),(-14002_i16),18751_i16];
_7 = [(-23355_i16)];
_5 = !_10;
_13 = [1680625043515449885_usize,4_usize,3_usize,11948512436924093865_usize];
_13 = [10237516243996945860_usize,5_usize,3542679997422952314_usize,1_usize];
_11 = [(-19989_i16)];
_1 = !77690878936938333201539151193899501610_u128;
_17 = _13;
_16 = ((-23089740249454604414150268503289040816_i128),);
_5 = _10;
_6 = true as i8;
_18.0 = _14;
_9 = _3;
_16.0 = 45503726039798118224609882670576267057_i128 + 131657715906606573262274949818002251682_i128;
_14 = !_18.0;
_2 = _9;
_1 = _16.0 as u128;
_3 = _9;
_18.1 = false;
_6 = 3_usize as i8;
_7 = _11;
_16.0 = 652103372488192649_u64 as i128;
_9 = _3;
_9 = _3;
_18.0 = !_14;
Goto(bb11)
}
bb31 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb32 = {
_35 = -_38.2;
_36 = _18.0 as u8;
_3 = _9;
_44 = core::ptr::addr_of!(_29);
_43 = 3280677233674167573_u64 as f64;
_44 = core::ptr::addr_of!((*_44));
_16.0 = _6 as i128;
_15 = !_1;
_43 = _38.5 as f64;
_16 = (_38.2,);
_38.1 = _18.2 as i16;
_47 = [4_usize,0_usize,9685903851065156348_usize,12863371665979866265_usize];
_14 = _18.0;
(*_44) = (_38.1, _5);
_38.4 = 9081419624774106848_usize as i32;
Goto(bb25)
}
bb33 = {
_15 = 12206893712915156373_usize as u128;
_21 = [_1,_1,_15];
_22 = _18.1;
_4 = _6;
_5 = 91_u8 as isize;
(*_23) = ((-117672651255090787698065926499559801301_i128),);
_25.1 = _18.0 as i32;
_6 = _4 * _4;
_22 = !_18.1;
_24 = _25.1;
_7 = _11;
_16 = (84083099094477809270360886014770540741_i128,);
_25.2 = !(-28876_i16);
_5 = !_10;
_1 = !_15;
(*_23).0 = 120888701457751857001876698537054684071_i128;
_2 = _9;
_10 = !_5;
_11 = [_25.2];
Goto(bb13)
}
bb34 = {
_61.0 = _1 | _1;
_47 = [_42,_42,_38.3,_38.3];
_51 = _25.1 + _25.1;
_17 = [_42,_38.3,_38.3,_38.3];
_7 = _11;
_29.1 = _48;
_68 = core::ptr::addr_of_mut!(_27);
_66 = ((*_23).0,);
_59 = [_15,_1,_15,_61.0,_61.0];
_61 = (_1,);
_71.1 = _60.1;
_36 = !_31.1;
_21 = [_61.0,_15,_15];
(*_23).0 = _38.5 as i128;
(*_23).0 = _66.0 - _35;
_18.1 = _6 > _6;
_58 = _9;
(*_23) = (_66.0,);
Goto(bb35)
}
bb35 = {
_53 = !_31.0;
_36 = _31.1;
_21 = [_61.0,_15,_15];
(*_68) = _51 as i8;
_18.2 = Field::<(f32, bool)>(Variant(_30, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = _71.1;
_28 = [_38.1];
_25.0.0 = _49;
_1 = _15 + _15;
_74.0 = _58;
SetDiscriminant(_30, 1);
_24 = -_51;
_74 = (_58, _6, _31.1);
match _42 {
0 => bb36,
1 => bb37,
2 => bb38,
3 => bb39,
4 => bb40,
5 => bb41,
17541512068734923877 => bb43,
_ => bb42
}
}
bb36 = {
_2 = _9;
_38.0 = _18.2;
_36 = _31.1;
_21 = [_1,_1,_1];
_38.4 = -_25.1;
_22 = !_18.1;
_16 = (_38.2,);
_11 = [_25.2];
Goto(bb23)
}
bb37 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb38 = {
_4 = !_6;
_8 = [(-19109_i16),14917_i16,(-22648_i16),(-4149_i16),(-30756_i16),(-14002_i16),18751_i16];
_7 = [(-23355_i16)];
_5 = !_10;
_13 = [1680625043515449885_usize,4_usize,3_usize,11948512436924093865_usize];
_13 = [10237516243996945860_usize,5_usize,3542679997422952314_usize,1_usize];
_11 = [(-19989_i16)];
_1 = !77690878936938333201539151193899501610_u128;
_17 = _13;
_16 = ((-23089740249454604414150268503289040816_i128),);
_5 = _10;
_6 = true as i8;
_18.0 = _14;
_9 = _3;
_16.0 = 45503726039798118224609882670576267057_i128 + 131657715906606573262274949818002251682_i128;
_14 = !_18.0;
_2 = _9;
_1 = _16.0 as u128;
_3 = _9;
_18.1 = false;
_6 = 3_usize as i8;
_7 = _11;
_16.0 = 652103372488192649_u64 as i128;
_9 = _3;
_9 = _3;
_18.0 = !_14;
Goto(bb11)
}
bb39 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb40 = {
_4 = !_6;
_8 = [(-19109_i16),14917_i16,(-22648_i16),(-4149_i16),(-30756_i16),(-14002_i16),18751_i16];
_7 = [(-23355_i16)];
_5 = !_10;
_13 = [1680625043515449885_usize,4_usize,3_usize,11948512436924093865_usize];
_13 = [10237516243996945860_usize,5_usize,3542679997422952314_usize,1_usize];
_11 = [(-19989_i16)];
_1 = !77690878936938333201539151193899501610_u128;
_17 = _13;
_16 = ((-23089740249454604414150268503289040816_i128),);
_5 = _10;
_6 = true as i8;
_18.0 = _14;
_9 = _3;
_16.0 = 45503726039798118224609882670576267057_i128 + 131657715906606573262274949818002251682_i128;
_14 = !_18.0;
_2 = _9;
_1 = _16.0 as u128;
_3 = _9;
_18.1 = false;
_6 = 3_usize as i8;
_7 = _11;
_16.0 = 652103372488192649_u64 as i128;
_9 = _3;
_9 = _3;
_18.0 = !_14;
Goto(bb11)
}
bb41 = {
Return()
}
bb42 = {
_32 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
_13 = _17;
_29.0 = _25.2;
_30 = Adt47::Variant2 { fld0: _38.0 };
_10 = (*_44).1;
_27 = !_6;
_34 = core::ptr::addr_of_mut!(_2);
_37 = _18.1 != _22;
(*_44) = (_25.2, _10);
_6 = _38.5 as i8;
_29.0 = _38.0 as i16;
_2 = _3;
_10 = (*_44).1;
_35 = _31.1 as i128;
_38.3 = !5160383238162666753_usize;
_38.3 = 17541512068734923877_usize;
_10 = !(*_44).1;
_42 = _38.3;
_41 = -_25.1;
_50 = [(*_44).1];
_48 = _10;
(*_44) = (_25.2, _5);
_45 = [(*_44).1];
_9 = (*_34);
match _42 {
17541512068734923877 => bb26,
_ => bb14
}
}
bb43 = {
_63 = _60.1 & _60.1;
_56 = -_57.0;
_30 = Adt47::Variant0 { fld0: _57 };
_25.2 = _29.0 ^ (*_44).0;
_73 = _32;
(*_68) = !_6;
_28 = [_29.0];
_25.2 = !(*_44).0;
_77 = _38;
_77.4 = -_25.1;
_25.0 = (_49,);
_53 = (*_68) as i64;
_28 = [_38.1];
_71.2 = _53 as f32;
_42 = _77.3;
_14 = !_18.0;
_77 = _38;
_43 = _53 as f64;
_6 = (*_68);
(*_34) = _58;
_60.0 = _25.1 as f32;
_75 = Field::<(f32, bool)>(Variant(_30, 0), 0).0;
_5 = _10 + _29.1;
match _77.3 {
0 => bb44,
1 => bb45,
2 => bb46,
17541512068734923877 => bb48,
_ => bb47
}
}
bb44 = {
_15 = 12206893712915156373_usize as u128;
_21 = [_1,_1,_15];
_22 = _18.1;
_4 = _6;
_5 = 91_u8 as isize;
(*_23) = ((-117672651255090787698065926499559801301_i128),);
_25.1 = _18.0 as i32;
_6 = _4 * _4;
_22 = !_18.1;
_24 = _25.1;
_7 = _11;
_16 = (84083099094477809270360886014770540741_i128,);
_25.2 = !(-28876_i16);
_5 = !_10;
_1 = !_15;
(*_23).0 = 120888701457751857001876698537054684071_i128;
_2 = _9;
_10 = !_5;
_11 = [_25.2];
Goto(bb13)
}
bb45 = {
_2 = _9;
_5 = -_10;
_3 = _9;
_9 = _2;
Goto(bb2)
}
bb46 = {
_3 = _9;
_28 = [_25.2];
_27 = _6;
(*_23) = ((-134269107458232483944060888113671958904_i128),);
_17 = [2514598123666434993_usize,7_usize,17553746654078859810_usize,2_usize];
_2 = _3;
_16.0 = 16053480132242240304_u64 as i128;
Goto(bb19)
}
bb47 = {
_24 = -_25.1;
_1 = _18.1 as u128;
_21 = [_1,_1,_1];
_31.1 = _10 as u8;
(*_23) = ((-100475369970657182339150080997155750736_i128),);
_22 = _18.1;
_28 = [_25.2];
place!(Field::<f32>(Variant(_30, 2), 0)) = _18.2;
_35 = -(*_23).0;
_10 = 701857728262036574_usize as isize;
_29.0 = -_25.2;
SetDiscriminant(_30, 0);
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_5 = _10 * _10;
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_38.5 = 3272009850_u32 >> _31.1;
_38.2 = _24 as i128;
_11 = [_25.2];
_38.4 = _25.1 | _25.1;
_25.0.0 = core::ptr::addr_of_mut!(_34);
_18.2 = _31.0 as f32;
_18.2 = _29.0 as f32;
_32 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
Goto(bb22)
}
bb48 = {
_38.1 = _27 as i16;
_77 = (Field::<(f32, bool)>(Variant(_30, 0), 0).0, _25.2, _66.0, _38.3, _51, _38.5);
_24 = _25.1 + _51;
_18.2 = _75;
SetDiscriminant(_30, 3);
_40 = [_53,_31.0,_53,_53];
_71.0 = !_14;
_42 = _38.3;
match _77.5 {
0 => bb20,
1 => bb47,
2 => bb39,
3 => bb32,
1151872422 => bb50,
_ => bb49
}
}
bb49 = {
_24 = -_25.1;
_1 = _18.1 as u128;
_21 = [_1,_1,_1];
_31.1 = _10 as u8;
(*_23) = ((-100475369970657182339150080997155750736_i128),);
_22 = _18.1;
_28 = [_25.2];
place!(Field::<f32>(Variant(_30, 2), 0)) = _18.2;
_35 = -(*_23).0;
_10 = 701857728262036574_usize as isize;
_29.0 = -_25.2;
SetDiscriminant(_30, 0);
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_5 = _10 * _10;
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_38.5 = 3272009850_u32 >> _31.1;
_38.2 = _24 as i128;
_11 = [_25.2];
_38.4 = _25.1 | _25.1;
_25.0.0 = core::ptr::addr_of_mut!(_34);
_18.2 = _31.0 as f32;
_18.2 = _29.0 as f32;
_32 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
Goto(bb22)
}
bb50 = {
(*_23) = _66;
_18.1 = !_57.1;
_57 = _60;
(*_44) = (_77.1, _5);
_38 = (_57.0, _77.1, _77.2, _77.3, _77.4, _77.5);
(*_44).0 = _38.1;
_29.0 = !_25.2;
(*_23).0 = -_66.0;
_18.0 = _5 as u16;
_38.5 = !_77.5;
match _77.5 {
0 => bb9,
1 => bb25,
2 => bb42,
3 => bb44,
4 => bb23,
1151872422 => bb51,
_ => bb22
}
}
bb51 = {
_74.1 = (*_68);
_58 = _74.0;
_10 = (*_44).1 ^ _5;
_70 = _10;
place!(Field::<[u16; 6]>(Variant(_30, 3), 1)) = [_14,_71.0,_18.0,_14,_71.0,_18.0];
_69 = _53;
_18 = (_14, _60.1, _52);
_39 = -_38.0;
_38.2 = _77.4 as i128;
_61.0 = 4844095450165323651_u64 as u128;
(*_44).1 = -_70;
_25.1 = !_24;
_24 = (*_34) as i32;
_57 = (_39, _63);
_11 = _7;
_70 = -(*_44).1;
_47 = [_42,_38.3,_38.3,_77.3];
_32 = [_31.1,_31.1,_74.2,_36,_31.1,_36,_74.2,_74.2];
Goto(bb52)
}
bb52 = {
_49 = core::ptr::addr_of_mut!(_34);
_80 = (_1,);
_77.1 = _29.0;
(*_44).1 = _77.1 as isize;
_82 = _71.2 as isize;
_79 = _18.1 as i8;
_31 = (_69, _36, _68);
(*_34) = _9;
_14 = _71.0;
_38.1 = -_77.1;
_77.0 = -_57.0;
_24 = _25.1 - _25.1;
_4 = _27;
_1 = !_80.0;
_71 = (_18.0, _22, _57.0);
_85 = _9;
_52 = -_77.0;
_83 = [(*_44).0];
_64 = _49;
_23 = core::ptr::addr_of_mut!((*_23));
_38.1 = _42 as i16;
(*_23).0 = _77.2;
(*_34) = _58;
_12 = _73;
place!(Field::<[u16; 6]>(Variant(_30, 3), 1)) = [_71.0,_71.0,_71.0,_71.0,_14,_14];
_75 = _1 as f32;
_42 = !_38.3;
(*_49) = core::ptr::addr_of_mut!((*_34));
Goto(bb53)
}
bb53 = {
(*_44).1 = _36 as isize;
_67 = [_74.2,_74.2,_74.2,_36,_74.2,_36,_36,_31.1];
_63 = _18.1 ^ _71.1;
place!(Field::<[u16; 6]>(Variant(_30, 3), 1)) = [_18.0,_18.0,_71.0,_71.0,_18.0,_71.0];
Goto(bb54)
}
bb54 = {
_23 = core::ptr::addr_of_mut!(_16);
_77.3 = _38.3 % _38.3;
_51 = _24;
_3 = _74.0;
_72 = _23;
(*_68) = (*_44).0 as i8;
_66.0 = !(*_23).0;
_17 = [_38.3,_77.3,_77.3,_42];
_11 = [_77.1];
(*_44) = (_77.1, _82);
place!(Field::<[u128; 5]>(Variant(_30, 3), 0)) = _59;
_14 = (*_34) as u16;
match _77.5 {
0 => bb23,
1 => bb55,
2 => bb56,
3 => bb57,
4 => bb58,
5 => bb59,
1151872422 => bb61,
_ => bb60
}
}
bb55 = {
(*_44).1 = _36 as isize;
_67 = [_74.2,_74.2,_74.2,_36,_74.2,_36,_36,_31.1];
_63 = _18.1 ^ _71.1;
place!(Field::<[u16; 6]>(Variant(_30, 3), 1)) = [_18.0,_18.0,_71.0,_71.0,_18.0,_71.0];
Goto(bb54)
}
bb56 = {
_49 = core::ptr::addr_of_mut!(_34);
_80 = (_1,);
_77.1 = _29.0;
(*_44).1 = _77.1 as isize;
_82 = _71.2 as isize;
_79 = _18.1 as i8;
_31 = (_69, _36, _68);
(*_34) = _9;
_14 = _71.0;
_38.1 = -_77.1;
_77.0 = -_57.0;
_24 = _25.1 - _25.1;
_4 = _27;
_1 = !_80.0;
_71 = (_18.0, _22, _57.0);
_85 = _9;
_52 = -_77.0;
_83 = [(*_44).0];
_64 = _49;
_23 = core::ptr::addr_of_mut!((*_23));
_38.1 = _42 as i16;
(*_23).0 = _77.2;
(*_34) = _58;
_12 = _73;
place!(Field::<[u16; 6]>(Variant(_30, 3), 1)) = [_71.0,_71.0,_71.0,_71.0,_14,_14];
_75 = _1 as f32;
_42 = !_38.3;
(*_49) = core::ptr::addr_of_mut!((*_34));
Goto(bb53)
}
bb57 = {
_35 = -_38.2;
_36 = _18.0 as u8;
_3 = _9;
_44 = core::ptr::addr_of!(_29);
_43 = 3280677233674167573_u64 as f64;
_44 = core::ptr::addr_of!((*_44));
_16.0 = _6 as i128;
_15 = !_1;
_43 = _38.5 as f64;
_16 = (_38.2,);
_38.1 = _18.2 as i16;
_47 = [4_usize,0_usize,9685903851065156348_usize,12863371665979866265_usize];
_14 = _18.0;
(*_44) = (_38.1, _5);
_38.4 = 9081419624774106848_usize as i32;
Goto(bb25)
}
bb58 = {
_24 = -_25.1;
_1 = _18.1 as u128;
_21 = [_1,_1,_1];
_31.1 = _10 as u8;
(*_23) = ((-100475369970657182339150080997155750736_i128),);
_22 = _18.1;
_28 = [_25.2];
place!(Field::<f32>(Variant(_30, 2), 0)) = _18.2;
_35 = -(*_23).0;
_10 = 701857728262036574_usize as isize;
_29.0 = -_25.2;
SetDiscriminant(_30, 0);
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_5 = _10 * _10;
place!(Field::<(f32, bool)>(Variant(_30, 0), 0)).1 = !_22;
_38.5 = 3272009850_u32 >> _31.1;
_38.2 = _24 as i128;
_11 = [_25.2];
_38.4 = _25.1 | _25.1;
_25.0.0 = core::ptr::addr_of_mut!(_34);
_18.2 = _31.0 as f32;
_18.2 = _29.0 as f32;
_32 = [_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1,_31.1];
Goto(bb22)
}
bb59 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb60 = {
_32 = Field::<[u8; 8]>(Variant(_30, 1), 0);
_57 = (_52, _18.1);
place!(Field::<*mut f64>(Variant(_30, 1), 5)) = core::ptr::addr_of_mut!(_43);
place!(Field::<u8>(Variant(_30, 1), 7)) = (*_34) as u8;
_49 = core::ptr::addr_of_mut!(_34);
_25.1 = _57.0 as i32;
_39 = -_52;
_12 = [_31.1,_36,_36,_31.1,_36,_31.1,_31.1,_36];
_53 = Field::<i64>(Variant(_30, 1), 6);
_18 = (_14, _37, _57.0);
place!(Field::<isize>(Variant(_30, 1), 2)) = _25.1 as isize;
(*_34) = _9;
place!(Field::<i64>(Variant(_30, 1), 6)) = _53 + _31.0;
_31.1 = _36;
place!(Field::<*mut f64>(Variant(_30, 1), 5)) = core::ptr::addr_of_mut!(_43);
_58 = (*_34);
_40 = [_53,Field::<i64>(Variant(_30, 1), 6),_53,Field::<i64>(Variant(_30, 1), 6)];
place!(Field::<u8>(Variant(_30, 1), 7)) = _36 >> _25.2;
(*_34) = _58;
place!(Field::<*mut *mut char>(Variant(_30, 1), 3)) = _49;
_38.5 = 1151872422_u32;
(*_34) = _9;
Goto(bb28)
}
bb61 = {
_56 = _57.0;
_48 = (*_44).1;
_71.2 = _75 * _39;
_31.2 = _68;
place!(Field::<[u8; 8]>(Variant(_30, 3), 3)) = _67;
_35 = (*_72).0 << _31.1;
_39 = _43 as f32;
Goto(bb62)
}
bb62 = {
_34 = core::ptr::addr_of_mut!(_2);
_31.1 = !_36;
_38.0 = _60.0;
_32 = [_74.2,_36,_36,_36,_31.1,_31.1,_74.2,_74.2];
_42 = _77.3 / _38.3;
(*_64) = core::ptr::addr_of_mut!((*_34));
_45 = _50;
_11 = [_77.1];
_86 = _71.1 as u128;
(*_34) = _85;
_66.0 = (*_72).0 & (*_23).0;
_12 = [_31.1,_36,_31.1,_31.1,_31.1,_74.2,_36,_31.1];
_49 = core::ptr::addr_of_mut!((*_64));
_3 = (*_34);
_16.0 = _77.2 * _77.2;
_66.0 = _22 as i128;
place!(Field::<[isize; 1]>(Variant(_30, 3), 2)) = [_48];
match _77.5 {
1151872422 => bb64,
_ => bb63
}
}
bb63 = {
_35 = -_38.2;
_36 = _18.0 as u8;
_3 = _9;
_44 = core::ptr::addr_of!(_29);
_43 = 3280677233674167573_u64 as f64;
_44 = core::ptr::addr_of!((*_44));
_16.0 = _6 as i128;
_15 = !_1;
_43 = _38.5 as f64;
_16 = (_38.2,);
_38.1 = _18.2 as i16;
_47 = [4_usize,0_usize,9685903851065156348_usize,12863371665979866265_usize];
_14 = _18.0;
(*_44) = (_38.1, _5);
_38.4 = 9081419624774106848_usize as i32;
Goto(bb25)
}
bb64 = {
_53 = _31.0;
_60.0 = _71.2 - _57.0;
_67 = [_31.1,_74.2,_36,_36,_74.2,_31.1,_74.2,_31.1];
_38.0 = -_77.0;
_28 = [(*_44).0];
_80 = _61;
_10 = (*_44).1 << _25.2;
_70 = (*_44).1 >> _74.2;
_25.0 = (_49,);
_22 = !_57.1;
_6 = _74.1;
SetDiscriminant(_30, 2);
_32 = [_36,_36,_36,_74.2,_31.1,_36,_36,_36];
_66 = (*_72);
(*_44).0 = -_25.2;
(*_72).0 = _38.2;
match _77.5 {
0 => bb65,
1 => bb66,
2 => bb67,
3 => bb68,
4 => bb69,
5 => bb70,
1151872422 => bb72,
_ => bb71
}
}
bb65 = {
_35 = -_38.2;
_36 = _18.0 as u8;
_3 = _9;
_44 = core::ptr::addr_of!(_29);
_43 = 3280677233674167573_u64 as f64;
_44 = core::ptr::addr_of!((*_44));
_16.0 = _6 as i128;
_15 = !_1;
_43 = _38.5 as f64;
_16 = (_38.2,);
_38.1 = _18.2 as i16;
_47 = [4_usize,0_usize,9685903851065156348_usize,12863371665979866265_usize];
_14 = _18.0;
(*_44) = (_38.1, _5);
_38.4 = 9081419624774106848_usize as i32;
Goto(bb25)
}
bb66 = {
_4 = !_6;
_8 = [(-19109_i16),14917_i16,(-22648_i16),(-4149_i16),(-30756_i16),(-14002_i16),18751_i16];
_7 = [(-23355_i16)];
_5 = !_10;
_13 = [1680625043515449885_usize,4_usize,3_usize,11948512436924093865_usize];
_13 = [10237516243996945860_usize,5_usize,3542679997422952314_usize,1_usize];
_11 = [(-19989_i16)];
_1 = !77690878936938333201539151193899501610_u128;
_17 = _13;
_16 = ((-23089740249454604414150268503289040816_i128),);
_5 = _10;
_6 = true as i8;
_18.0 = _14;
_9 = _3;
_16.0 = 45503726039798118224609882670576267057_i128 + 131657715906606573262274949818002251682_i128;
_14 = !_18.0;
_2 = _9;
_1 = _16.0 as u128;
_3 = _9;
_18.1 = false;
_6 = 3_usize as i8;
_7 = _11;
_16.0 = 652103372488192649_u64 as i128;
_9 = _3;
_9 = _3;
_18.0 = !_14;
Goto(bb11)
}
bb67 = {
_56 = _57.0;
_48 = (*_44).1;
_71.2 = _75 * _39;
_31.2 = _68;
place!(Field::<[u8; 8]>(Variant(_30, 3), 3)) = _67;
_35 = (*_72).0 << _31.1;
_39 = _43 as f32;
Goto(bb62)
}
bb68 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb69 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb70 = {
_15 = 12206893712915156373_usize as u128;
_21 = [_1,_1,_15];
_22 = _18.1;
_4 = _6;
_5 = 91_u8 as isize;
(*_23) = ((-117672651255090787698065926499559801301_i128),);
_25.1 = _18.0 as i32;
_6 = _4 * _4;
_22 = !_18.1;
_24 = _25.1;
_7 = _11;
_16 = (84083099094477809270360886014770540741_i128,);
_25.2 = !(-28876_i16);
_5 = !_10;
_1 = !_15;
(*_23).0 = 120888701457751857001876698537054684071_i128;
_2 = _9;
_10 = !_5;
_11 = [_25.2];
Goto(bb13)
}
bb71 = {
(*_23) = _66;
_18.1 = !_57.1;
_57 = _60;
(*_44) = (_77.1, _5);
_38 = (_57.0, _77.1, _77.2, _77.3, _77.4, _77.5);
(*_44).0 = _38.1;
_29.0 = !_25.2;
(*_23).0 = -_66.0;
_18.0 = _5 as u16;
_38.5 = !_77.5;
match _77.5 {
0 => bb9,
1 => bb25,
2 => bb42,
3 => bb44,
4 => bb23,
1151872422 => bb51,
_ => bb22
}
}
bb72 = {
_66 = (*_72);
_54 = [_1,_86,_86,_86,_86];
_92.fld1 = _18.0 as u64;
_73 = [_36,_31.1,_31.1,_74.2,_36,_74.2,_31.1,_74.2];
_60.0 = -_57.0;
_71.1 = _57.1 & _37;
_60.0 = _75;
_92 = Adt57 { fld0: _49,fld1: 9089912403667421099_u64 };
_3 = _85;
_97 = -_43;
_92.fld1 = 10566596320437517294_u64 * 11189257258570171463_u64;
(*_49) = core::ptr::addr_of_mut!(_85);
(*_34) = _58;
_16.0 = _97 as i128;
_41 = _38.5 as i32;
_94 = (*_44).0;
_35 = _18.0 as i128;
_61 = (_1,);
match _38.3 {
0 => bb73,
1 => bb74,
17541512068734923877 => bb76,
_ => bb75
}
}
bb73 = {
_74.1 = (*_68);
_58 = _74.0;
_10 = (*_44).1 ^ _5;
_70 = _10;
place!(Field::<[u16; 6]>(Variant(_30, 3), 1)) = [_14,_71.0,_18.0,_14,_71.0,_18.0];
_69 = _53;
_18 = (_14, _60.1, _52);
_39 = -_38.0;
_38.2 = _77.4 as i128;
_61.0 = 4844095450165323651_u64 as u128;
(*_44).1 = -_70;
_25.1 = !_24;
_24 = (*_34) as i32;
_57 = (_39, _63);
_11 = _7;
_70 = -(*_44).1;
_47 = [_42,_38.3,_38.3,_77.3];
_32 = [_31.1,_31.1,_74.2,_36,_31.1,_36,_74.2,_74.2];
Goto(bb52)
}
bb74 = {
_2 = _9;
_38.0 = _18.2;
_36 = _31.1;
_21 = [_1,_1,_1];
_38.4 = -_25.1;
_22 = !_18.1;
_16 = (_38.2,);
_11 = [_25.2];
Goto(bb23)
}
bb75 = {
_56 = _57.0;
_48 = (*_44).1;
_71.2 = _75 * _39;
_31.2 = _68;
place!(Field::<[u8; 8]>(Variant(_30, 3), 3)) = _67;
_35 = (*_72).0 << _31.1;
_39 = _43 as f32;
Goto(bb62)
}
bb76 = {
_98.2 = _74.2;
_47 = [_77.3,_42,_42,_77.3];
_86 = _61.0 ^ _61.0;
match _38.3 {
0 => bb19,
1 => bb2,
2 => bb32,
3 => bb44,
4 => bb57,
5 => bb10,
6 => bb37,
17541512068734923877 => bb78,
_ => bb77
}
}
bb77 = {
_6 = (-8821_i16) as i8;
_4 = 9815_u16 as i8;
_1 = 168275352228847309974645608137258195563_u128;
_11 = [(-31080_i16)];
_9 = _3;
_9 = _2;
_8 = [(-32334_i16),21164_i16,30542_i16,(-32734_i16),(-4182_i16),1033_i16,(-5962_i16)];
_5 = 2_usize as isize;
_1 = !274179772308789836880648011123903376428_u128;
_11 = _7;
_6 = _4 + _4;
_5 = !_10;
_5 = _10 & _10;
_7 = _11;
_2 = _3;
_2 = _3;
_9 = _3;
_13 = [7399187428617224978_usize,2_usize,5_usize,7_usize];
_11 = _7;
_10 = _5 | _5;
_3 = _2;
_14 = 27209_u16;
_12 = [120_u8,0_u8,44_u8,178_u8,66_u8,97_u8,81_u8,133_u8];
Goto(bb3)
}
bb78 = {
_51 = _25.1;
_80 = _61;
_64 = _25.0.0;
_80.0 = _86;
_98.2 = _71.2 as u8;
(*_44) = (_94, _48);
(*_23).0 = _38.2 - _66.0;
(*_23) = (_77.2,);
_66 = (*_23);
_51 = -_77.4;
_44 = core::ptr::addr_of!((*_44));
_36 = _31.1 - _74.2;
_89 = _43;
Goto(bb79)
}
bb79 = {
(*_72).0 = _77.2 - _38.2;
(*_23) = (_66.0,);
_38 = _77;
_62 = _31.0 >> _61.0;
_60.1 = !_63;
_60 = (_57.0, _71.1);
_38.3 = _77.5 as usize;
_54 = [_1,_86,_61.0,_80.0,_61.0];
_62 = _53 << _86;
_40 = [_31.0,_69,_62,_69];
_41 = _1 as i32;
_77.0 = _39;
_29.0 = _74.0 as i16;
_41 = _29.1 as i32;
_97 = _89 * _43;
(*_72) = _66;
Goto(bb80)
}
bb80 = {
_99.1 = _38.1 * _25.2;
_39 = _77.0;
place!(Field::<f32>(Variant(_30, 2), 0)) = _52;
(*_23) = (_66.0,);
_15 = _61.0;
_66 = ((*_72).0,);
_18.0 = _14;
_90 = _44;
_99.0 = _53 as f32;
Goto(bb81)
}
bb81 = {
_99.4 = _38.4 + _24;
_44 = core::ptr::addr_of!((*_44));
SetDiscriminant(_30, 2);
_98 = (_85, _27, _31.1);
_61.0 = !_86;
_98 = ((*_34), _79, _36);
(*_72) = (_38.2,);
_92.fld0 = core::ptr::addr_of_mut!((*_64));
_45 = [(*_90).1];
_6 = !_4;
_58 = _98.0;
_40 = [_62,_53,_69,_53];
_38.0 = _75 + _56;
_40 = [_53,_31.0,_31.0,_69];
(*_68) = _6 >> _69;
_70 = -_29.1;
_16 = (_66.0,);
Goto(bb82)
}
bb82 = {
(*_44) = (_38.1, _48);
_105 = ((*_34), _27, _74.2);
_107.1 = -_99.4;
_104 = -(*_44).1;
_96 = !_15;
_38 = _77;
_71 = (_14, _37, _99.0);
(*_72) = (_77.2,);
_16.0 = _92.fld1 as i128;
_105.1 = _89 as i8;
_77.5 = _38.5 << _41;
_45 = _50;
_100 = _57.1 as u128;
_60 = (_75, _63);
_35 = -_38.2;
_92.fld1 = !12521717803658002941_u64;
_92.fld1 = !15419628139326773210_u64;
_38.5 = _18.1 as u32;
Goto(bb83)
}
bb83 = {
_92.fld1 = !14468751388472487818_u64;
_38.3 = _42;
(*_68) = _105.1;
_108 = [_10];
_57.0 = _38.0 + _56;
_5 = _69 as isize;
_100 = !_1;
_101 = Adt49::Variant2 { fld0: _92.fld1,fld1: _38,fld2: _64,fld3: _35,fld4: _40,fld5: _86 };
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_101, 2), 1)).5 = _77.5 + _77.5;
_71.1 = _18.1;
Goto(bb84)
}
bb84 = {
_87 = _77.5;
_114 = _99.4 + _25.1;
_74.0 = (*_34);
_107.0 = (_25.0.0,);
_25.2 = _99.1 * (*_44).0;
_2 = _58;
_27 = _4;
_52 = -_57.0;
_61.0 = _15 & _15;
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_101, 2), 1)).3 = _77.3 | _38.3;
_23 = _72;
Goto(bb85)
}
bb85 = {
_1 = !_96;
(*_23).0 = Field::<i128>(Variant(_101, 2), 3) * Field::<i128>(Variant(_101, 2), 3);
_57.1 = _82 > _70;
_50 = [_29.1];
_38.5 = _35 as u32;
_81 = Adt51::Variant1 { fld0: _23,fld1: _77.0,fld2: _79 };
(*_44) = (_38.1, _48);
_31.2 = core::ptr::addr_of_mut!(_6);
_99.2 = !_16.0;
_99.4 = _89 as i32;
_105.2 = _36;
_71.2 = (*_44).1 as f32;
_42 = !_38.3;
(*_44).0 = !_77.1;
_33 = _71.1 as isize;
_7 = [_29.0];
Goto(bb86)
}
bb86 = {
_117.0 = _39 * _60.0;
_51 = -_25.1;
(*_72).0 = Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_101, 2), 1).1 as i128;
_92 = Adt57 { fld0: _49,fld1: Field::<u64>(Variant(_101, 2), 0) };
_78 = _96;
(*_34) = _2;
_71.0 = _18.0 + _18.0;
_112 = _22 ^ _18.1;
Goto(bb87)
}
bb87 = {
_60.1 = _63 & _71.1;
_105.1 = _104 as i8;
Goto(bb88)
}
bb88 = {
(*_44).0 = _94;
(*_90).1 = _82 & _10;
Goto(bb89)
}
bb89 = {
_23 = core::ptr::addr_of_mut!((*_23));
_57.0 = -_38.0;
_31.2 = _68;
_82 = (*_90).1 - (*_90).1;
_111 = Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_101, 2), 1).5 as isize;
_99.0 = _29.1 as f32;
_71.2 = _117.0;
_21 = [_78,_96,_100];
SetDiscriminant(_101, 1);
_40 = [_69,_69,_31.0,_69];
Goto(bb90)
}
bb90 = {
_117 = (_52, _25.2, (*_23).0, _38.3, _114, _87);
_15 = !_100;
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_101, 1), 1)).5 = _39 as u32;
_110 = Adt51::Variant0 { fld0: _18.0,fld1: _25 };
_23 = _72;
_84 = [_117.1];
_12 = _32;
place!(Field::<((*mut *mut char,), i32, i16)>(Variant(_110, 0), 1)).0.0 = core::ptr::addr_of_mut!((*_49));
_3 = _58;
_120 = [_71.0,_14,_14,Field::<u16>(Variant(_110, 0), 0),_14,_71.0];
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_101, 1), 1)).2 = _16.0 ^ _77.2;
_93 = core::ptr::addr_of_mut!((*_49));
_101 = Adt49::Variant0 { fld0: _74,fld1: (*_72),fld2: _92.fld1,fld3: _25,fld4: (*_93) };
_103 = -_52;
Goto(bb91)
}
bb91 = {
_47 = _13;
_57.1 = _63 ^ _18.1;
_80.0 = !_100;
_105.0 = (*_34);
_99.3 = _42;
_17 = [_117.3,_42,_42,_77.3];
(*_93) = Field::<*mut char>(Variant(_101, 0), 4);
_62 = -_53;
_106 = core::ptr::addr_of!(_29);
(*_72).0 = _77.2 * _38.2;
_45 = _50;
_29 = (Field::<((*mut *mut char,), i32, i16)>(Variant(_101, 0), 3).2, _82);
_32 = _67;
_53 = _69;
place!(Field::<(i128,)>(Variant(_101, 0), 1)).0 = !(*_72).0;
_99.0 = _56;
Goto(bb92)
}
bb92 = {
_72 = core::ptr::addr_of_mut!((*_23));
_71 = (Field::<u16>(Variant(_110, 0), 0), _60.1, _52);
_18 = _71;
_117.3 = _53 as usize;
place!(Field::<f32>(Variant(_81, 1), 1)) = _77.0;
Goto(bb93)
}
bb93 = {
(*_72).0 = -_99.2;
_52 = _75;
_81 = Adt51::Variant0 { fld0: Field::<u16>(Variant(_110, 0), 0),fld1: _25 };
Goto(bb94)
}
bb94 = {
_126.1 = _87 as i16;
_74.2 = !_31.1;
SetDiscriminant(_101, 1);
_130 = (_54, _117);
Goto(bb95)
}
bb95 = {
_1 = !_80.0;
place!(Field::<f32>(Variant(_30, 2), 0)) = _60.0;
_107.1 = !_77.4;
_100 = !_80.0;
(*_90).1 = !_33;
_64 = core::ptr::addr_of_mut!((*_93));
RET = core::ptr::addr_of_mut!(_130);
_99.2 = _89 as i128;
place!(Field::<((*mut *mut char,), i32, i16)>(Variant(_81, 0), 1)).0.0 = core::ptr::addr_of_mut!((*_64));
_109 = !_60.1;
_77 = (_60.0, (*RET).1.1, _38.2, _130.1.3, _25.1, (*RET).1.5);
Goto(bb96)
}
bb96 = {
Call(_139 = dump_var(3_usize, 74_usize, Move(_74), 100_usize, Move(_100), 37_usize, Move(_37), 40_usize, Move(_40)), ReturnTo(bb97), UnwindUnreachable())
}
bb97 = {
Call(_139 = dump_var(3_usize, 10_usize, Move(_10), 4_usize, Move(_4), 73_usize, Move(_73), 48_usize, Move(_48)), ReturnTo(bb98), UnwindUnreachable())
}
bb98 = {
Call(_139 = dump_var(3_usize, 5_usize, Move(_5), 108_usize, Move(_108), 41_usize, Move(_41), 15_usize, Move(_15)), ReturnTo(bb99), UnwindUnreachable())
}
bb99 = {
Call(_139 = dump_var(3_usize, 61_usize, Move(_61), 21_usize, Move(_21), 13_usize, Move(_13), 32_usize, Move(_32)), ReturnTo(bb100), UnwindUnreachable())
}
bb100 = {
Call(_139 = dump_var(3_usize, 33_usize, Move(_33), 1_usize, Move(_1), 7_usize, Move(_7), 112_usize, Move(_112)), ReturnTo(bb101), UnwindUnreachable())
}
bb101 = {
Call(_139 = dump_var(3_usize, 70_usize, Move(_70), 3_usize, Move(_3), 28_usize, Move(_28), 85_usize, Move(_85)), ReturnTo(bb102), UnwindUnreachable())
}
bb102 = {
Call(_139 = dump_var(3_usize, 109_usize, Move(_109), 94_usize, Move(_94), 67_usize, Move(_67), 17_usize, Move(_17)), ReturnTo(bb103), UnwindUnreachable())
}
bb103 = {
Call(_139 = dump_var(3_usize, 8_usize, Move(_8), 78_usize, Move(_78), 35_usize, Move(_35), 63_usize, Move(_63)), ReturnTo(bb104), UnwindUnreachable())
}
bb104 = {
Call(_139 = dump_var(3_usize, 120_usize, Move(_120), 2_usize, Move(_2), 83_usize, Move(_83), 140_usize, _140), ReturnTo(bb105), UnwindUnreachable())
}
bb105 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: char,mut _2: isize) -> char {
mir! {
type RET = char;
let _3: f32;
let _4: Adt63;
let _5: u16;
let _6: char;
let _7: bool;
let _8: *const (i16, isize);
let _9: usize;
let _10: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _11: [u16; 6];
let _12: (i64, u8, *mut i8);
let _13: f64;
let _14: [isize; 1];
let _15: (f32, bool);
let _16: char;
let _17: u16;
let _18: bool;
let _19: [usize; 4];
let _20: u32;
let _21: char;
let _22: ();
let _23: ();
{
RET = _1;
RET = _1;
_2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_1 = RET;
_1 = RET;
RET = _1;
_1 = RET;
RET = _1;
_2 = (-66_isize) << 1044430626078990671_i64;
RET = _1;
RET = _1;
_2 = !(-9223372036854775808_isize);
_1 = RET;
RET = _1;
RET = _1;
RET = _1;
_2 = 9223372036854775807_isize;
RET = _1;
RET = _1;
RET = _1;
_1 = RET;
Goto(bb1)
}
bb1 = {
_3 = 2458_u16 as f32;
_3 = 0_usize as f32;
RET = _1;
RET = _1;
RET = _1;
_2 = 9223372036854775807_isize;
_2 = !31_isize;
_5 = 47669_u16;
RET = _1;
_4 = Adt63::Variant0 { fld0: 33835877613330959188966978635096029093_i128 };
RET = _1;
RET = _1;
_4 = Adt63::Variant0 { fld0: (-144017021152262473408485370177290628690_i128) };
_2 = (-9223372036854775808_isize);
place!(Field::<i128>(Variant(_4, 0), 0)) = 157181748572063890722121442537465726562_i128;
_2 = 12410681927954496442_usize as isize;
place!(Field::<i128>(Variant(_4, 0), 0)) = (-65565236588985747876888387776979951384_i128);
RET = _1;
_6 = _1;
_2 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _6;
SetDiscriminant(_4, 3);
RET = _6;
place!(Field::<Adt58>(Variant(_4, 3), 4)).fld2 = [4025088625943107132_usize,2_usize,0_usize,0_usize];
place!(Field::<[i16; 7]>(Variant(_4, 3), 3)) = [19020_i16,(-10490_i16),(-16657_i16),11486_i16,(-25398_i16),12306_i16,(-8916_i16)];
_1 = RET;
Goto(bb2)
}
bb2 = {
place!(Field::<Adt47>(Variant(_4, 3), 1)) = Adt47::Variant2 { fld0: _3 };
place!(Field::<f32>(Variant(place!(Field::<Adt47>(Variant(_4, 3), 1)), 2), 0)) = _3;
place!(Field::<[u8; 8]>(Variant(_4, 3), 2)) = [144_u8,103_u8,161_u8,229_u8,224_u8,200_u8,31_u8,101_u8];
place!(Field::<[i64; 4]>(Variant(_4, 3), 6)) = [1445214428505239003_i64,1803724994815424518_i64,(-4310227137694920428_i64),3827710170979274509_i64];
_1 = _6;
Call(place!(Field::<*mut (i128,)>(Variant(_4, 3), 0)) = fn5(_2, Field::<[i16; 7]>(Variant(_4, 3), 3), Field::<Adt47>(Variant(_4, 3), 1), Field::<[u8; 8]>(Variant(_4, 3), 2), Field::<Adt47>(Variant(_4, 3), 1), Field::<[i64; 4]>(Variant(_4, 3), 6), Field::<[i16; 7]>(Variant(_4, 3), 3), Field::<[u8; 8]>(Variant(_4, 3), 2)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
place!(Field::<[u8; 8]>(Variant(_4, 3), 2)) = [240_u8,52_u8,252_u8,175_u8,187_u8,56_u8,225_u8,23_u8];
RET = _6;
SetDiscriminant(Field::<Adt47>(Variant(_4, 3), 1), 3);
_4 = Adt63::Variant0 { fld0: 161741931970288773862482811423819485242_i128 };
_6 = _1;
RET = _6;
match _5 {
47669 => bb4,
_ => bb1
}
}
bb4 = {
RET = _1;
place!(Field::<i128>(Variant(_4, 0), 0)) = 70704442978101032684689934897240150270_i128 & 139264896691362353745001558029095894021_i128;
_7 = !true;
Goto(bb5)
}
bb5 = {
_1 = RET;
RET = _6;
RET = _1;
_6 = _1;
_2 = 62_isize;
place!(Field::<i128>(Variant(_4, 0), 0)) = -(-83554793481576832917068594710238389498_i128);
_7 = !false;
_9 = 6_usize;
_4 = Adt63::Variant0 { fld0: 102989045859121747635233912101022372104_i128 };
_10.1.1 = 16343_i16;
_10.1.3 = (-157823652401332515953546946362966588955_i128) as usize;
place!(Field::<i128>(Variant(_4, 0), 0)) = 15382743017866648689_u64 as i128;
_10.0 = [307195708206687835532943287489439271935_u128,289086491936183195238106999818290876687_u128,188660013386876594284348144391850738766_u128,270153841271433525395657053374476150903_u128,226425696251705327940801349454497713826_u128];
match _2 {
0 => bb2,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
62 => bb11,
_ => bb10
}
}
bb6 = {
RET = _1;
place!(Field::<i128>(Variant(_4, 0), 0)) = 70704442978101032684689934897240150270_i128 & 139264896691362353745001558029095894021_i128;
_7 = !true;
Goto(bb5)
}
bb7 = {
place!(Field::<[u8; 8]>(Variant(_4, 3), 2)) = [240_u8,52_u8,252_u8,175_u8,187_u8,56_u8,225_u8,23_u8];
RET = _6;
SetDiscriminant(Field::<Adt47>(Variant(_4, 3), 1), 3);
_4 = Adt63::Variant0 { fld0: 161741931970288773862482811423819485242_i128 };
_6 = _1;
RET = _6;
match _5 {
47669 => bb4,
_ => bb1
}
}
bb8 = {
place!(Field::<Adt47>(Variant(_4, 3), 1)) = Adt47::Variant2 { fld0: _3 };
place!(Field::<f32>(Variant(place!(Field::<Adt47>(Variant(_4, 3), 1)), 2), 0)) = _3;
place!(Field::<[u8; 8]>(Variant(_4, 3), 2)) = [144_u8,103_u8,161_u8,229_u8,224_u8,200_u8,31_u8,101_u8];
place!(Field::<[i64; 4]>(Variant(_4, 3), 6)) = [1445214428505239003_i64,1803724994815424518_i64,(-4310227137694920428_i64),3827710170979274509_i64];
_1 = _6;
Call(place!(Field::<*mut (i128,)>(Variant(_4, 3), 0)) = fn5(_2, Field::<[i16; 7]>(Variant(_4, 3), 3), Field::<Adt47>(Variant(_4, 3), 1), Field::<[u8; 8]>(Variant(_4, 3), 2), Field::<Adt47>(Variant(_4, 3), 1), Field::<[i64; 4]>(Variant(_4, 3), 6), Field::<[i16; 7]>(Variant(_4, 3), 3), Field::<[u8; 8]>(Variant(_4, 3), 2)), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_3 = 2458_u16 as f32;
_3 = 0_usize as f32;
RET = _1;
RET = _1;
RET = _1;
_2 = 9223372036854775807_isize;
_2 = !31_isize;
_5 = 47669_u16;
RET = _1;
_4 = Adt63::Variant0 { fld0: 33835877613330959188966978635096029093_i128 };
RET = _1;
RET = _1;
_4 = Adt63::Variant0 { fld0: (-144017021152262473408485370177290628690_i128) };
_2 = (-9223372036854775808_isize);
place!(Field::<i128>(Variant(_4, 0), 0)) = 157181748572063890722121442537465726562_i128;
_2 = 12410681927954496442_usize as isize;
place!(Field::<i128>(Variant(_4, 0), 0)) = (-65565236588985747876888387776979951384_i128);
RET = _1;
_6 = _1;
_2 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _6;
SetDiscriminant(_4, 3);
RET = _6;
place!(Field::<Adt58>(Variant(_4, 3), 4)).fld2 = [4025088625943107132_usize,2_usize,0_usize,0_usize];
place!(Field::<[i16; 7]>(Variant(_4, 3), 3)) = [19020_i16,(-10490_i16),(-16657_i16),11486_i16,(-25398_i16),12306_i16,(-8916_i16)];
_1 = RET;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_6 = RET;
_10.1.5 = 784489083_u32;
_10.1.4 = !835889599_i32;
_10.1.2 = -Field::<i128>(Variant(_4, 0), 0);
_10.1.0 = _10.1.3 as f32;
_10.0 = [254282886879955156661267429831949755024_u128,164360470343358371461587030938555535221_u128,309998358413750207173746492489809276034_u128,282606291109514794098706016082824223450_u128,77229176722490965508735067603207575243_u128];
_10.1.5 = 2806391478_u32;
_4 = Adt63::Variant0 { fld0: _10.1.2 };
_1 = RET;
_3 = -_10.1.0;
_12.0 = _10.1.4 as i64;
_10.1.1 = 2823_i16 ^ (-8099_i16);
_1 = _6;
SetDiscriminant(_4, 1);
_5 = !46117_u16;
_15.0 = -_10.1.0;
match _10.1.5 {
2806391478 => bb12,
_ => bb1
}
}
bb12 = {
_10.1.0 = _15.0 * _3;
_6 = RET;
_16 = _1;
_9 = !_10.1.3;
_10.1.1 = 8930_i16;
_16 = _1;
_10.1.2 = (-132924766757404423071804467667785282916_i128);
_7 = true ^ true;
place!(Field::<(f32, bool)>(Variant(_4, 1), 0)).1 = _6 >= _1;
place!(Field::<u32>(Variant(_4, 1), 3)) = 74_u8 as u32;
_11 = [_5,_5,_5,_5,_5,_5];
place!(Field::<u32>(Variant(_4, 1), 3)) = _10.1.5;
place!(Field::<u32>(Variant(_4, 1), 3)) = _10.1.5 & _10.1.5;
_14 = [_2];
_10.1 = (_15.0, 18758_i16, 93157741649960639458068846613102201242_i128, _9, 271198725_i32, Field::<u32>(Variant(_4, 1), 3));
_9 = _10.1.3 + _10.1.3;
_12.1 = 3993009173058820303_u64 as u8;
_15.1 = _10.1.2 == _10.1.2;
_10.0 = [311963522623139915674239154832403986937_u128,221963758950654052200796789147203405705_u128,3142853679636586637435109819193516308_u128,231799051012878446498135575314596883706_u128,36970065008073912153963508797483839368_u128];
match _10.1.2 {
0 => bb8,
1 => bb6,
2 => bb5,
93157741649960639458068846613102201242 => bb14,
_ => bb13
}
}
bb13 = {
_6 = RET;
_10.1.5 = 784489083_u32;
_10.1.4 = !835889599_i32;
_10.1.2 = -Field::<i128>(Variant(_4, 0), 0);
_10.1.0 = _10.1.3 as f32;
_10.0 = [254282886879955156661267429831949755024_u128,164360470343358371461587030938555535221_u128,309998358413750207173746492489809276034_u128,282606291109514794098706016082824223450_u128,77229176722490965508735067603207575243_u128];
_10.1.5 = 2806391478_u32;
_4 = Adt63::Variant0 { fld0: _10.1.2 };
_1 = RET;
_3 = -_10.1.0;
_12.0 = _10.1.4 as i64;
_10.1.1 = 2823_i16 ^ (-8099_i16);
_1 = _6;
SetDiscriminant(_4, 1);
_5 = !46117_u16;
_15.0 = -_10.1.0;
match _10.1.5 {
2806391478 => bb12,
_ => bb1
}
}
bb14 = {
place!(Field::<u32>(Variant(_4, 1), 3)) = !_10.1.5;
_14 = [_2];
_10.1.1 = 13677_i16 & (-18462_i16);
_19 = [_9,_9,_9,_9];
_21 = _16;
_13 = 81_i8 as f64;
_10.1.4 = _10.1.5 as i32;
_10.1.1 = _13 as i16;
_15.0 = _2 as f32;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(4_usize, 7_usize, Move(_7), 14_usize, Move(_14), 16_usize, Move(_16), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(4_usize, 21_usize, Move(_21), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: [i16; 7],mut _3: Adt47,mut _4: [u8; 8],mut _5: Adt47,mut _6: [i64; 4],mut _7: [i16; 7],mut _8: [u8; 8]) -> *mut (i128,) {
mir! {
type RET = *mut (i128,);
let _9: [u128; 5];
let _10: f32;
let _11: char;
let _12: f64;
let _13: [u128; 5];
let _14: f32;
let _15: i64;
let _16: [i64; 4];
let _17: f64;
let _18: [i16; 7];
let _19: Adt49;
let _20: bool;
let _21: f32;
let _22: [u128; 5];
let _23: isize;
let _24: Adt57;
let _25: ();
let _26: ();
{
SetDiscriminant(_5, 2);
_7 = [31752_i16,(-11349_i16),13015_i16,12813_i16,(-29810_i16),32491_i16,5887_i16];
_4 = [83_u8,206_u8,184_u8,139_u8,239_u8,162_u8,45_u8,50_u8];
_8 = [75_u8,241_u8,235_u8,104_u8,180_u8,147_u8,116_u8,127_u8];
_8 = _4;
_5 = _3;
_8 = _4;
_8 = [117_u8,194_u8,46_u8,251_u8,48_u8,203_u8,240_u8,246_u8];
_4 = [169_u8,242_u8,58_u8,15_u8,39_u8,47_u8,218_u8,215_u8];
_9 = [147155051277502384811877051093492531967_u128,322617531749748672706259544043995437752_u128,37095336541158710802614489259290074404_u128,213290940271195160132187488459785190486_u128,236646059976654685532395629286752770127_u128];
_1 = 9223372036854775807_isize;
_2 = [32327_i16,14366_i16,800_i16,(-13667_i16),(-19915_i16),(-14704_i16),(-7446_i16)];
_10 = -Field::<f32>(Variant(_3, 2), 0);
_1 = 9223372036854775807_isize;
_10 = 604739258868423320_u64 as f32;
_10 = -Field::<f32>(Variant(_3, 2), 0);
_6 = [(-4448102000805087935_i64),(-8859243964866349600_i64),6070895493298735095_i64,7576520872162076781_i64];
match _1 {
0 => bb1,
1 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_7 = [26369_i16,30364_i16,(-14100_i16),548_i16,23166_i16,(-8308_i16),10362_i16];
place!(Field::<f32>(Variant(_3, 2), 0)) = (-89489840712410901465632832708954069088_i128) as f32;
place!(Field::<f32>(Variant(_5, 2), 0)) = _10 - Field::<f32>(Variant(_3, 2), 0);
_4 = _8;
place!(Field::<f32>(Variant(_3, 2), 0)) = -_10;
_1 = 13_u8 as isize;
_3 = Adt47::Variant2 { fld0: Field::<f32>(Variant(_5, 2), 0) };
_1 = (-84_isize) - (-9223372036854775808_isize);
_3 = _5;
_4 = [69_u8,197_u8,162_u8,233_u8,111_u8,84_u8,117_u8,119_u8];
SetDiscriminant(_5, 3);
place!(Field::<[u128; 5]>(Variant(_5, 3), 0)) = [99504401361506104756355956627133426991_u128,179337897974490864222822510009402795886_u128,264567198236672639277997755042531243674_u128,242748518209867988844410083825227315679_u128,237517428051353172782708473130907773093_u128];
place!(Field::<[isize; 1]>(Variant(_5, 3), 2)) = [_1];
_4 = [4_u8,148_u8,232_u8,179_u8,45_u8,73_u8,59_u8,37_u8];
_15 = -(-3464052848140849443_i64);
place!(Field::<[u128; 5]>(Variant(_5, 3), 0)) = [180082815756453639066971376956482872401_u128,292173485150783824145450948559257582084_u128,90368015580317316355024832653890745838_u128,123964921693504027293081921944665458187_u128,97435760148143465542059234124405635024_u128];
_8 = _4;
_11 = '\u{ab372}';
Call(place!(Field::<[u16; 6]>(Variant(_5, 3), 1)) = fn6(_9, _2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_12 = _15 as f64;
_14 = Field::<f32>(Variant(_3, 2), 0);
_14 = Field::<f32>(Variant(_3, 2), 0) + _10;
_4 = [162_u8,213_u8,245_u8,124_u8,111_u8,129_u8,192_u8,180_u8];
_5 = _3;
_5 = Adt47::Variant2 { fld0: _14 };
_16 = [_15,_15,_15,_15];
_3 = _5;
_2 = [15307_i16,14452_i16,(-30652_i16),9572_i16,22406_i16,(-30766_i16),(-3778_i16)];
place!(Field::<f32>(Variant(_5, 2), 0)) = Field::<f32>(Variant(_3, 2), 0);
_14 = _12 as f32;
_18 = [9892_i16,(-21186_i16),(-6320_i16),(-8168_i16),(-30027_i16),(-12282_i16),(-928_i16)];
_3 = _5;
_6 = [_15,_15,_15,_15];
place!(Field::<f32>(Variant(_3, 2), 0)) = Field::<f32>(Variant(_5, 2), 0);
_18 = [12913_i16,25646_i16,13414_i16,(-3304_i16),19081_i16,24810_i16,1967_i16];
_15 = 3489541393616925475_i64;
place!(Field::<f32>(Variant(_3, 2), 0)) = _10;
place!(Field::<f32>(Variant(_5, 2), 0)) = Field::<f32>(Variant(_3, 2), 0) + _10;
_5 = _3;
_17 = -_12;
_14 = -Field::<f32>(Variant(_5, 2), 0);
_2 = [2048_i16,(-13035_i16),(-22250_i16),14382_i16,(-634_i16),(-13733_i16),19105_i16];
SetDiscriminant(_3, 0);
_5 = Adt47::Variant2 { fld0: _14 };
place!(Field::<(f32, bool)>(Variant(_3, 0), 0)).1 = !false;
_17 = (-78361667014200069016567154592485692238_i128) as f64;
_14 = _10;
match _15 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
3489541393616925475 => bb9,
_ => bb8
}
}
bb6 = {
_7 = [26369_i16,30364_i16,(-14100_i16),548_i16,23166_i16,(-8308_i16),10362_i16];
place!(Field::<f32>(Variant(_3, 2), 0)) = (-89489840712410901465632832708954069088_i128) as f32;
place!(Field::<f32>(Variant(_5, 2), 0)) = _10 - Field::<f32>(Variant(_3, 2), 0);
_4 = _8;
place!(Field::<f32>(Variant(_3, 2), 0)) = -_10;
_1 = 13_u8 as isize;
_3 = Adt47::Variant2 { fld0: Field::<f32>(Variant(_5, 2), 0) };
_1 = (-84_isize) - (-9223372036854775808_isize);
_3 = _5;
_4 = [69_u8,197_u8,162_u8,233_u8,111_u8,84_u8,117_u8,119_u8];
SetDiscriminant(_5, 3);
place!(Field::<[u128; 5]>(Variant(_5, 3), 0)) = [99504401361506104756355956627133426991_u128,179337897974490864222822510009402795886_u128,264567198236672639277997755042531243674_u128,242748518209867988844410083825227315679_u128,237517428051353172782708473130907773093_u128];
place!(Field::<[isize; 1]>(Variant(_5, 3), 2)) = [_1];
_4 = [4_u8,148_u8,232_u8,179_u8,45_u8,73_u8,59_u8,37_u8];
_15 = -(-3464052848140849443_i64);
place!(Field::<[u128; 5]>(Variant(_5, 3), 0)) = [180082815756453639066971376956482872401_u128,292173485150783824145450948559257582084_u128,90368015580317316355024832653890745838_u128,123964921693504027293081921944665458187_u128,97435760148143465542059234124405635024_u128];
_8 = _4;
_11 = '\u{ab372}';
Call(place!(Field::<[u16; 6]>(Variant(_5, 3), 1)) = fn6(_9, _2), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_17 = _12 + _12;
_16 = [_15,_15,_15,_15];
_9 = [49036731057823498754370517404620154367_u128,49726832198641610202217790855965064351_u128,320035686307277411105853256083789718953_u128,31116164226677613748352268079537502427_u128,37368146578209070039044859946005274404_u128];
_3 = _5;
_11 = '\u{e97e9}';
_12 = _17 * _17;
place!(Field::<f32>(Variant(_3, 2), 0)) = 163628099_u32 as f32;
_3 = _5;
Call(_19 = fn18(_12, _2, _15, _3, _4, _5, _5, _10, _11, _7), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
RET = Field::<*mut (i128,)>(Variant(_19, 1), 6);
_10 = Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1).0;
_11 = '\u{7cd89}';
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1)) = (Field::<(f32, bool)>(Variant(_19, 1), 2).0, Field::<((*mut *mut char,), i32, i16)>(Variant(_19, 1), 0).2, (-88518612541776177354129273833270290278_i128), 7938607948889222337_usize, Field::<((*mut *mut char,), i32, i16)>(Variant(_19, 1), 0).1, 1311480694_u32);
place!(Field::<*mut (i128,)>(Variant(_19, 1), 6)) = RET;
_16 = [_15,_15,_15,_15];
_20 = !Field::<(f32, bool)>(Variant(_19, 1), 2).1;
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1)).2 = (-92736794015995325560839786374266046010_i128) & (-161073679434973131229062713325725712664_i128);
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1)).1 = Field::<((*mut *mut char,), i32, i16)>(Variant(_19, 1), 0).2 + Field::<((*mut *mut char,), i32, i16)>(Variant(_19, 1), 0).2;
_10 = _12 as f32;
_4 = [Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7),Field::<u8>(Variant(_19, 1), 7)];
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1)).0 = -Field::<(f32, bool)>(Variant(_19, 1), 2).0;
_21 = Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1).4 as f32;
place!(Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1)).2 = !148740735800563078892699628921784193738_i128;
place!(Field::<((*mut *mut char,), i32, i16)>(Variant(_19, 1), 0)).2 = -Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1).1;
_24.fld1 = 3277635312260093270_u64 >> Field::<(f32, i16, i128, usize, i32, u32)>(Variant(_19, 1), 1).3;
place!(Field::<f32>(Variant(_3, 2), 0)) = _10;
_24.fld0 = Field::<((*mut *mut char,), i32, i16)>(Variant(_19, 1), 0).0.0;
_11 = '\u{5c7c3}';
place!(Field::<u8>(Variant(_19, 1), 7)) = 64_u8;
Goto(bb11)
}
bb11 = {
Call(_25 = dump_var(5_usize, 1_usize, Move(_1), 2_usize, Move(_2), 6_usize, Move(_6), 7_usize, Move(_7)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_25 = dump_var(5_usize, 16_usize, Move(_16), 11_usize, Move(_11), 26_usize, _26, 26_usize, _26), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [u128; 5],mut _2: [i16; 7]) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _3: Adt49;
let _4: f32;
let _5: i16;
let _6: [usize; 4];
let _7: [i16; 7];
let _8: [usize; 4];
let _9: Adt47;
let _10: f32;
let _11: i16;
let _12: f32;
let _13: i8;
let _14: Adt60;
let _15: [i16; 7];
let _16: i128;
let _17: f64;
let _18: bool;
let _19: ((*mut *mut char,), i32, i16);
let _20: Adt53;
let _21: bool;
let _22: *mut char;
let _23: f64;
let _24: char;
let _25: bool;
let _26: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _27: Adt47;
let _28: f32;
let _29: f32;
let _30: ();
let _31: ();
{
_2 = [22206_i16,4018_i16,(-16839_i16),13025_i16,22347_i16,9487_i16,(-5053_i16)];
RET = [52782_u16,5953_u16,44922_u16,17665_u16,10108_u16,46969_u16];
RET = [21809_u16,55465_u16,14022_u16,37079_u16,45840_u16,29350_u16];
_2 = [(-8064_i16),(-23344_i16),8520_i16,(-29959_i16),(-1490_i16),(-11514_i16),(-22121_i16)];
RET = [9809_u16,18170_u16,41314_u16,55075_u16,42856_u16,29065_u16];
RET = [48307_u16,48811_u16,36535_u16,13926_u16,41696_u16,62282_u16];
_1 = [221214474639470780004305049756978570106_u128,283978621521676558773878446774684306921_u128,109118884114738512964267675179628245853_u128,271070232174702158059028154249989639287_u128,293941326952626534187867342827785042578_u128];
RET = [21499_u16,18196_u16,42835_u16,18136_u16,39330_u16,26219_u16];
Goto(bb1)
}
bb1 = {
RET = [487_u16,2423_u16,56377_u16,44562_u16,23196_u16,51160_u16];
RET = [42696_u16,28364_u16,11671_u16,11884_u16,8842_u16,2845_u16];
_1 = [265763948269794713892148737854830279825_u128,11027521062157570434881804845266892402_u128,247418604206316956681310768049148292538_u128,250460181184615059926117234262363073674_u128,254008868084384226087170276087429604524_u128];
RET = [56416_u16,45611_u16,45685_u16,31657_u16,19849_u16,22290_u16];
RET = [29493_u16,64619_u16,34081_u16,48197_u16,12393_u16,25571_u16];
RET = [7924_u16,63859_u16,10932_u16,22748_u16,13193_u16,43185_u16];
RET = [23131_u16,41033_u16,25682_u16,18099_u16,51451_u16,3008_u16];
_4 = (-1188081138_i32) as f32;
_5 = 327087083613932652357522577951936565643_u128 as i16;
RET = [45810_u16,50815_u16,37541_u16,56926_u16,58328_u16,48208_u16];
RET = [55881_u16,43024_u16,42123_u16,33818_u16,8643_u16,43286_u16];
RET = [40009_u16,4118_u16,41209_u16,40168_u16,45238_u16,19252_u16];
RET = [19846_u16,40949_u16,1686_u16,39929_u16,8775_u16,49895_u16];
_4 = 16114226782866208505_usize as f32;
_6 = [11580431012046734934_usize,5298529759842074697_usize,0_usize,1_usize];
_5 = 10408_i16 & (-12429_i16);
_4 = 7_usize as f32;
RET = [55957_u16,42993_u16,65322_u16,19918_u16,50770_u16,18932_u16];
_1 = [20715839928885882811482057899447949547_u128,252268732446551051730500941506634661037_u128,89190522256386871049123358570261676708_u128,305468233790402646526016449085349264703_u128,279644813098139683945091280009670746407_u128];
_1 = [240850735777829104485661682794127235434_u128,93030849546445002926885712610965149607_u128,164010271707647809188894014532266691630_u128,327616050208021530815901578810977091278_u128,10837581495601489049790532134780740791_u128];
_6 = [14093041370042589835_usize,3_usize,3_usize,7_usize];
RET = [12667_u16,28957_u16,14015_u16,64962_u16,58737_u16,37740_u16];
_4 = 3013835674_u32 as f32;
_6 = [15324671620761609462_usize,10920752546727835094_usize,11850415229592936729_usize,0_usize];
_4 = 16774792868857318429_u64 as f32;
RET = [37189_u16,14890_u16,18383_u16,21928_u16,891_u16,36161_u16];
Call(RET = fn7(_2, _5, _1, _2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7 = [_5,_5,_5,_5,_5,_5,_5];
RET = [42744_u16,41376_u16,44012_u16,42235_u16,13674_u16,20986_u16];
_5 = 118404466181824998108624812547929909018_i128 as i16;
RET = [5004_u16,59161_u16,1675_u16,33926_u16,51713_u16,49197_u16];
_7 = _2;
RET = [54482_u16,48881_u16,6376_u16,18956_u16,45734_u16,7925_u16];
RET = [47911_u16,55300_u16,29483_u16,33892_u16,23240_u16,32293_u16];
_7 = [_5,_5,_5,_5,_5,_5,_5];
RET = [24662_u16,48758_u16,41557_u16,45804_u16,58069_u16,17890_u16];
_6 = [7_usize,13041350203285917267_usize,6_usize,402650030444038991_usize];
RET = [20988_u16,53453_u16,54795_u16,8653_u16,18725_u16,2680_u16];
_5 = !(-4312_i16);
RET = [4190_u16,51102_u16,41962_u16,49772_u16,40569_u16,44720_u16];
_7 = _2;
_2 = [_5,_5,_5,_5,_5,_5,_5];
RET = [61677_u16,31152_u16,36129_u16,56761_u16,63460_u16,58496_u16];
_8 = _6;
_2 = [_5,_5,_5,_5,_5,_5,_5];
Goto(bb3)
}
bb3 = {
_8 = [16946954846434362191_usize,2_usize,7_usize,5627154989511225999_usize];
_6 = _8;
_7 = [_5,_5,_5,_5,_5,_5,_5];
_7 = [_5,_5,_5,_5,_5,_5,_5];
_11 = -_5;
_10 = _4;
_5 = !_11;
_4 = (-111668340679256074372830592992624458876_i128) as f32;
_4 = _10;
RET = [14093_u16,9670_u16,13595_u16,31161_u16,56234_u16,33073_u16];
RET = [19906_u16,57756_u16,39794_u16,34675_u16,22902_u16,40954_u16];
Goto(bb4)
}
bb4 = {
_2 = [_5,_5,_11,_5,_11,_11,_11];
_6 = [7_usize,7988902201839591847_usize,1_usize,6_usize];
_8 = _6;
_10 = _4 - _4;
_12 = _10;
_1 = [108138748528760285906013277829185267795_u128,12209495370442754007539603729506287218_u128,132458080386046982679021388568728270251_u128,66148693739538244115511112298658690319_u128,314922528965973651338573535515540733338_u128];
_13 = -(-97_i8);
_6 = _8;
_13 = 15988615910464939826_usize as i8;
_10 = _12;
_8 = [3_usize,7_usize,3365138994438092591_usize,7_usize];
_1 = [72527862857005221084889114712017802252_u128,12056407292566602724323645568720316455_u128,48905598462426665201729675840950291118_u128,317162990409930207617763999967477901143_u128,175821282624312664833892728303427754588_u128];
_10 = _12;
_10 = -_12;
RET = [43474_u16,63199_u16,27308_u16,63725_u16,842_u16,65219_u16];
_9 = Adt47::Variant2 { fld0: _12 };
_4 = _12;
_13 = -44_i8;
SetDiscriminant(_9, 2);
_1 = [44913937886829696131524385435355536036_u128,319671224550827839682407666667147112604_u128,47350597498758040762709255884267057724_u128,92426038586417154086228458699570520525_u128,191398989802099527411909901596173122018_u128];
_7 = _2;
_9 = Adt47::Variant2 { fld0: _12 };
Goto(bb5)
}
bb5 = {
_15 = _2;
_13 = (-1388475384_i32) as i8;
_5 = _11;
_6 = [1_usize,993778181451406715_usize,7_usize,12354079130977322960_usize];
_2 = [_5,_11,_11,_11,_5,_5,_11];
place!(Field::<f32>(Variant(_9, 2), 0)) = 13789890619053542638_u64 as f32;
_7 = [_5,_5,_5,_11,_11,_11,_11];
_5 = _11;
_16 = (-9223372036854775808_isize) as i128;
RET = [5951_u16,45691_u16,24825_u16,40572_u16,17345_u16,44249_u16];
_12 = -_10;
place!(Field::<f32>(Variant(_9, 2), 0)) = _12 + _10;
_10 = _12 * _12;
_1 = [22863176671432483154031108502435170906_u128,52744713834886504199888652624013553649_u128,135130000227983437094523029063056143940_u128,162597096740585035256868440519389594173_u128,18584759363486257303664575104702237774_u128];
_6 = _8;
Goto(bb6)
}
bb6 = {
_13 = 104896144986410490051425168767525084367_u128 as i8;
_2 = [_5,_11,_11,_5,_11,_11,_5];
_13 = (-12_i8) & 120_i8;
_2 = [_11,_11,_11,_11,_11,_11,_11];
RET = [14415_u16,11635_u16,1363_u16,47859_u16,19494_u16,49424_u16];
_7 = [_11,_11,_5,_11,_11,_5,_11];
_7 = [_11,_11,_5,_11,_11,_11,_11];
_17 = _10 as f64;
_6 = _8;
RET = [33738_u16,38227_u16,15878_u16,32399_u16,43384_u16,54448_u16];
_12 = _4 + Field::<f32>(Variant(_9, 2), 0);
Goto(bb7)
}
bb7 = {
_8 = [13019399187814157096_usize,4_usize,11817494347032147627_usize,15224585814954506097_usize];
_15 = [_11,_11,_11,_5,_5,_5,_11];
_15 = [_11,_5,_5,_5,_11,_11,_11];
_2 = [_5,_5,_5,_5,_5,_11,_11];
_2 = [_11,_11,_11,_5,_11,_11,_11];
Goto(bb8)
}
bb8 = {
_10 = Field::<f32>(Variant(_9, 2), 0);
_5 = (-548638693_i32) as i16;
RET = [43604_u16,51230_u16,38917_u16,15688_u16,54020_u16,23383_u16];
_13 = (-27_i8);
_4 = 152_u8 as f32;
_10 = -_12;
_17 = 3_usize as f64;
_16 = -(-165749182871480852699978286659968497574_i128);
_11 = _5 * _5;
RET = [12130_u16,41246_u16,43634_u16,3873_u16,11573_u16,64786_u16];
Goto(bb9)
}
bb9 = {
_9 = Adt47::Variant2 { fld0: _10 };
_7 = _2;
Goto(bb10)
}
bb10 = {
_12 = 21_isize as f32;
_11 = 170_u8 as i16;
_12 = _17 as f32;
_5 = _11;
_17 = _5 as f64;
_10 = (-2017595115_i32) as f32;
_17 = 7741674131100026890_i64 as f64;
_7 = _15;
_8 = [16521012452325939526_usize,7_usize,3722736979927476101_usize,9288125252201419251_usize];
_19.2 = _12 as i16;
_16 = 76976933716810450529708864685685195545_i128 * 156926702126406978659609425582443685796_i128;
_19.2 = 8449881076134361019_u64 as i16;
_6 = _8;
_18 = !false;
_8 = [1_usize,662344218871358896_usize,1_usize,5_usize];
SetDiscriminant(_9, 2);
_19.2 = -_5;
place!(Field::<f32>(Variant(_9, 2), 0)) = _10;
_17 = _13 as f64;
_6 = [16446511533565124760_usize,2_usize,10602729205262294507_usize,13497423509129695887_usize];
_19.2 = 4845027975754204720_i64 as i16;
SetDiscriminant(_9, 0);
RET = [33787_u16,49778_u16,21780_u16,12564_u16,14870_u16,61555_u16];
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)) = (_4, _18);
_8 = _6;
_19.2 = 219891780418609007870263115812580890894_u128 as i16;
Call(_19.0 = fn9(_9, _9, _9), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_19.1 = 187584134_i32 >> _16;
SetDiscriminant(_9, 1);
place!(Field::<u8>(Variant(_9, 1), 7)) = _11 as u8;
place!(Field::<u8>(Variant(_9, 1), 7)) = 127_u8;
place!(Field::<*mut f64>(Variant(_9, 1), 5)) = core::ptr::addr_of_mut!(_23);
_23 = _17 + _17;
_21 = !_18;
_9 = Adt47::Variant2 { fld0: _12 };
_4 = _12 - _10;
_24 = '\u{edc16}';
_5 = _16 as i16;
_22 = core::ptr::addr_of_mut!(_24);
_2 = _15;
SetDiscriminant(_9, 1);
_4 = 541_u16 as f32;
_9 = Adt47::Variant2 { fld0: _4 };
_10 = 2103018540477498658_i64 as f32;
RET = [64448_u16,65272_u16,10147_u16,44930_u16,32633_u16,4103_u16];
_1 = [118332161398856700148549522936322452510_u128,92795437190589891513032722412505631326_u128,290240795026879123082380460954136689351_u128,236092701920843151351441286632361534452_u128,52254741622253513798085747973635172856_u128];
_16 = !135706936964949838513507306902126152443_i128;
_25 = !_21;
_2 = [_5,_5,_11,_11,_5,_19.2,_5];
match _13 {
0 => bb10,
1 => bb9,
2 => bb8,
3 => bb12,
4 => bb13,
5 => bb14,
340282366920938463463374607431768211429 => bb16,
_ => bb15
}
}
bb12 = {
_12 = 21_isize as f32;
_11 = 170_u8 as i16;
_12 = _17 as f32;
_5 = _11;
_17 = _5 as f64;
_10 = (-2017595115_i32) as f32;
_17 = 7741674131100026890_i64 as f64;
_7 = _15;
_8 = [16521012452325939526_usize,7_usize,3722736979927476101_usize,9288125252201419251_usize];
_19.2 = _12 as i16;
_16 = 76976933716810450529708864685685195545_i128 * 156926702126406978659609425582443685796_i128;
_19.2 = 8449881076134361019_u64 as i16;
_6 = _8;
_18 = !false;
_8 = [1_usize,662344218871358896_usize,1_usize,5_usize];
SetDiscriminant(_9, 2);
_19.2 = -_5;
place!(Field::<f32>(Variant(_9, 2), 0)) = _10;
_17 = _13 as f64;
_6 = [16446511533565124760_usize,2_usize,10602729205262294507_usize,13497423509129695887_usize];
_19.2 = 4845027975754204720_i64 as i16;
SetDiscriminant(_9, 0);
RET = [33787_u16,49778_u16,21780_u16,12564_u16,14870_u16,61555_u16];
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)) = (_4, _18);
_8 = _6;
_19.2 = 219891780418609007870263115812580890894_u128 as i16;
Call(_19.0 = fn9(_9, _9, _9), ReturnTo(bb11), UnwindUnreachable())
}
bb13 = {
_9 = Adt47::Variant2 { fld0: _10 };
_7 = _2;
Goto(bb10)
}
bb14 = {
RET = [487_u16,2423_u16,56377_u16,44562_u16,23196_u16,51160_u16];
RET = [42696_u16,28364_u16,11671_u16,11884_u16,8842_u16,2845_u16];
_1 = [265763948269794713892148737854830279825_u128,11027521062157570434881804845266892402_u128,247418604206316956681310768049148292538_u128,250460181184615059926117234262363073674_u128,254008868084384226087170276087429604524_u128];
RET = [56416_u16,45611_u16,45685_u16,31657_u16,19849_u16,22290_u16];
RET = [29493_u16,64619_u16,34081_u16,48197_u16,12393_u16,25571_u16];
RET = [7924_u16,63859_u16,10932_u16,22748_u16,13193_u16,43185_u16];
RET = [23131_u16,41033_u16,25682_u16,18099_u16,51451_u16,3008_u16];
_4 = (-1188081138_i32) as f32;
_5 = 327087083613932652357522577951936565643_u128 as i16;
RET = [45810_u16,50815_u16,37541_u16,56926_u16,58328_u16,48208_u16];
RET = [55881_u16,43024_u16,42123_u16,33818_u16,8643_u16,43286_u16];
RET = [40009_u16,4118_u16,41209_u16,40168_u16,45238_u16,19252_u16];
RET = [19846_u16,40949_u16,1686_u16,39929_u16,8775_u16,49895_u16];
_4 = 16114226782866208505_usize as f32;
_6 = [11580431012046734934_usize,5298529759842074697_usize,0_usize,1_usize];
_5 = 10408_i16 & (-12429_i16);
_4 = 7_usize as f32;
RET = [55957_u16,42993_u16,65322_u16,19918_u16,50770_u16,18932_u16];
_1 = [20715839928885882811482057899447949547_u128,252268732446551051730500941506634661037_u128,89190522256386871049123358570261676708_u128,305468233790402646526016449085349264703_u128,279644813098139683945091280009670746407_u128];
_1 = [240850735777829104485661682794127235434_u128,93030849546445002926885712610965149607_u128,164010271707647809188894014532266691630_u128,327616050208021530815901578810977091278_u128,10837581495601489049790532134780740791_u128];
_6 = [14093041370042589835_usize,3_usize,3_usize,7_usize];
RET = [12667_u16,28957_u16,14015_u16,64962_u16,58737_u16,37740_u16];
_4 = 3013835674_u32 as f32;
_6 = [15324671620761609462_usize,10920752546727835094_usize,11850415229592936729_usize,0_usize];
_4 = 16774792868857318429_u64 as f32;
RET = [37189_u16,14890_u16,18383_u16,21928_u16,891_u16,36161_u16];
Call(RET = fn7(_2, _5, _1, _2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_7 = [_5,_5,_5,_5,_5,_5,_5];
RET = [42744_u16,41376_u16,44012_u16,42235_u16,13674_u16,20986_u16];
_5 = 118404466181824998108624812547929909018_i128 as i16;
RET = [5004_u16,59161_u16,1675_u16,33926_u16,51713_u16,49197_u16];
_7 = _2;
RET = [54482_u16,48881_u16,6376_u16,18956_u16,45734_u16,7925_u16];
RET = [47911_u16,55300_u16,29483_u16,33892_u16,23240_u16,32293_u16];
_7 = [_5,_5,_5,_5,_5,_5,_5];
RET = [24662_u16,48758_u16,41557_u16,45804_u16,58069_u16,17890_u16];
_6 = [7_usize,13041350203285917267_usize,6_usize,402650030444038991_usize];
RET = [20988_u16,53453_u16,54795_u16,8653_u16,18725_u16,2680_u16];
_5 = !(-4312_i16);
RET = [4190_u16,51102_u16,41962_u16,49772_u16,40569_u16,44720_u16];
_7 = _2;
_2 = [_5,_5,_5,_5,_5,_5,_5];
RET = [61677_u16,31152_u16,36129_u16,56761_u16,63460_u16,58496_u16];
_8 = _6;
_2 = [_5,_5,_5,_5,_5,_5,_5];
Goto(bb3)
}
bb16 = {
SetDiscriminant(_9, 0);
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)).0 = _19.2 as f32;
_2 = [_5,_5,_19.2,_5,_19.2,_5,_19.2];
_8 = [986751991382425175_usize,90573962547346101_usize,3905278649972886632_usize,16826666554077315355_usize];
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)).0 = (-9223372036854775808_isize) as f32;
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)) = (_10, _21);
_27 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_9, 0), 0) };
_7 = [_5,_11,_5,_19.2,_11,_11,_5];
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)) = Field::<(f32, bool)>(Variant(_27, 0), 0);
Goto(bb17)
}
bb17 = {
Call(_30 = dump_var(6_usize, 6_usize, Move(_6), 13_usize, Move(_13), 21_usize, Move(_21), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(6_usize, 24_usize, Move(_24), 15_usize, Move(_15), 18_usize, Move(_18), 31_usize, _31), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [i16; 7],mut _2: i16,mut _3: [u128; 5],mut _4: [i16; 7],mut _5: [usize; 4]) -> [u16; 6] {
mir! {
type RET = [u16; 6];
let _6: isize;
let _7: f64;
let _8: bool;
let _9: (i64, u8, *mut i8);
let _10: (i128,);
let _11: u128;
let _12: Adt61;
let _13: (u16, bool, f32);
let _14: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _15: u32;
let _16: u128;
let _17: isize;
let _18: [usize; 4];
let _19: [isize; 1];
let _20: (f32, bool);
let _21: Adt63;
let _22: ();
let _23: ();
{
RET = [14857_u16,3320_u16,53767_u16,27436_u16,38386_u16,63271_u16];
_2 = 327789209258856959863571388868305650446_u128 as i16;
_5 = [15326782366450260098_usize,7_usize,4617729723112612786_usize,15113592191725875788_usize];
_3 = [200270099318364707665521296165317861176_u128,204808395916174791656966579342584479239_u128,20787109929160438072607222951720530376_u128,256820705827656244442416070272085816524_u128,211527581222575827103057092544302643432_u128];
_5 = [7_usize,7_usize,11894081039476763082_usize,1_usize];
RET = [16586_u16,3877_u16,22977_u16,50035_u16,61509_u16,23802_u16];
_3 = [95214505749703416215526438457217041082_u128,315945982825136112754265182553499720872_u128,333019508099149998078064944472759966325_u128,332689216908343715980692283297870950927_u128,33380818018374208479993623579812726393_u128];
_2 = -(-17067_i16);
_5 = [3029769198018765890_usize,2515540875514739179_usize,479864180699164036_usize,4_usize];
_1 = [_2,_2,_2,_2,_2,_2,_2];
_5 = [13717692132636386632_usize,3_usize,7_usize,4806126037508938167_usize];
_6 = 11933_u16 as isize;
_1 = _4;
_1 = [_2,_2,_2,_2,_2,_2,_2];
_3 = [209161379675494840618063454805746006117_u128,282601856276504400003132349205375578823_u128,123488116220543775064005106067382186957_u128,81302348373900319775784690615926766291_u128,72606717872545960393755262435024612567_u128];
_4 = [_2,_2,_2,_2,_2,_2,_2];
_3 = [234023994963003164522359851299728816336_u128,253837090286000814854157773174680387307_u128,272462797378411995642142007301165533891_u128,162856045195999631878765514804282984896_u128,244979518676133823883596917900974456232_u128];
_1 = [_2,_2,_2,_2,_2,_2,_2];
RET = [58921_u16,30128_u16,36926_u16,49162_u16,49288_u16,43157_u16];
_3 = [14133418641497907724240251565601370151_u128,299041473272284273059561429186491829162_u128,267187611114766975965257548478597257615_u128,314106039758910046586840723177529536538_u128,291726425908928705268725271212194687527_u128];
RET = [39237_u16,18931_u16,61536_u16,25927_u16,32297_u16,41422_u16];
Goto(bb1)
}
bb1 = {
_6 = _2 as isize;
_7 = _6 as f64;
_4 = [_2,_2,_2,_2,_2,_2,_2];
RET = [13753_u16,53707_u16,45425_u16,21722_u16,5645_u16,38388_u16];
_3 = [93145891847017067404001990504008784106_u128,334604948875421818203264047727961464430_u128,150036743510823762273150203495174204015_u128,248726618205314997194120994207590406849_u128,121071341674044596052501474945493338029_u128];
_2 = false as i16;
_4 = [_2,_2,_2,_2,_2,_2,_2];
RET = [54923_u16,6334_u16,42489_u16,3090_u16,1543_u16,50455_u16];
_7 = _2 as f64;
_8 = !false;
_1 = [_2,_2,_2,_2,_2,_2,_2];
_2 = (-8594_i16) | (-5217_i16);
RET = [11016_u16,9179_u16,32173_u16,12288_u16,26385_u16,58904_u16];
_2 = (-5014_i16);
_8 = false;
RET = [40995_u16,6798_u16,53400_u16,49840_u16,7969_u16,11675_u16];
RET = [1975_u16,3015_u16,27697_u16,33376_u16,3189_u16,46730_u16];
_7 = (-1624015523_i32) as f64;
RET = [63238_u16,3241_u16,55844_u16,43778_u16,56735_u16,46798_u16];
RET = [31354_u16,42248_u16,41792_u16,9134_u16,13429_u16,40714_u16];
_5 = [5_usize,8442477884008774243_usize,1_usize,6_usize];
Call(_3 = fn8(RET, RET, _8, _5, RET, _8, _8, _6, _6, RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = (-1335059881174318547_i64) as i16;
RET = [42526_u16,50191_u16,43399_u16,40520_u16,38616_u16,52905_u16];
_4 = [_2,_2,_2,_2,_2,_2,_2];
_2 = 271188138004875779179533331739459973814_u128 as i16;
_9.0 = 7027560666491281363_i64;
_9.1 = 1381123358_i32 as u8;
_10.0 = 16951085840412265856_usize as i128;
_11 = 3102808567_u32 as u128;
_10 = ((-114225546472117580581951088944128327225_i128),);
_6 = _8 as isize;
_3 = [_11,_11,_11,_11,_11];
_12.fld0.2 = 5824263830963121527_u64 as i16;
match _10.0 {
0 => bb3,
1 => bb4,
226056820448820882881423518487639884231 => bb6,
_ => bb5
}
}
bb3 = {
_6 = _2 as isize;
_7 = _6 as f64;
_4 = [_2,_2,_2,_2,_2,_2,_2];
RET = [13753_u16,53707_u16,45425_u16,21722_u16,5645_u16,38388_u16];
_3 = [93145891847017067404001990504008784106_u128,334604948875421818203264047727961464430_u128,150036743510823762273150203495174204015_u128,248726618205314997194120994207590406849_u128,121071341674044596052501474945493338029_u128];
_2 = false as i16;
_4 = [_2,_2,_2,_2,_2,_2,_2];
RET = [54923_u16,6334_u16,42489_u16,3090_u16,1543_u16,50455_u16];
_7 = _2 as f64;
_8 = !false;
_1 = [_2,_2,_2,_2,_2,_2,_2];
_2 = (-8594_i16) | (-5217_i16);
RET = [11016_u16,9179_u16,32173_u16,12288_u16,26385_u16,58904_u16];
_2 = (-5014_i16);
_8 = false;
RET = [40995_u16,6798_u16,53400_u16,49840_u16,7969_u16,11675_u16];
RET = [1975_u16,3015_u16,27697_u16,33376_u16,3189_u16,46730_u16];
_7 = (-1624015523_i32) as f64;
RET = [63238_u16,3241_u16,55844_u16,43778_u16,56735_u16,46798_u16];
RET = [31354_u16,42248_u16,41792_u16,9134_u16,13429_u16,40714_u16];
_5 = [5_usize,8442477884008774243_usize,1_usize,6_usize];
Call(_3 = fn8(RET, RET, _8, _5, RET, _8, _8, _6, _6, RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_12.fld0.2 = '\u{d26ed}' as i16;
_6 = 9223372036854775807_isize >> _12.fld0.2;
_12.fld0.1 = (-1380810268_i32);
_9.0 = !6760289247156706893_i64;
_12.fld2 = 4443650277619013514_u64 as u16;
RET = [_12.fld2,_12.fld2,_12.fld2,_12.fld2,_12.fld2,_12.fld2];
_13.0 = _12.fld2 >> _9.0;
_13.2 = _6 as f32;
_9.0 = _12.fld0.1 as i64;
_6 = 1_usize as isize;
_2 = _8 as i16;
_13.1 = _8;
_8 = !_13.1;
_12.fld1 = _9.1;
_12.fld1 = _9.1 >> _12.fld0.1;
_12.fld1 = _9.1;
Goto(bb7)
}
bb7 = {
_10.0 = !(-20471031789863425073397543666260463513_i128);
_10.0 = -(-61867395897846367406807350889140079483_i128);
RET = [_13.0,_13.0,_12.fld2,_13.0,_13.0,_12.fld2];
_2 = _12.fld0.2;
_10 = ((-106281260717925768834574819244804691459_i128),);
RET = [_13.0,_12.fld2,_13.0,_13.0,_12.fld2,_13.0];
_8 = _13.1;
_7 = _6 as f64;
_13.1 = _9.0 != _9.0;
_8 = _13.1;
_13.2 = 11749068023210411464_usize as f32;
_11 = 315469109568921797515841831174716772290_u128;
_12.fld0.2 = _2;
_13.0 = _12.fld0.2 as u16;
_16 = _12.fld2 as u128;
Goto(bb8)
}
bb8 = {
_11 = _16 >> _12.fld0.2;
_10.0 = 112558635939216220021449759197572511204_i128;
_7 = _9.0 as f64;
match _10.0 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb9,
112558635939216220021449759197572511204 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
_12.fld0.2 = '\u{d26ed}' as i16;
_6 = 9223372036854775807_isize >> _12.fld0.2;
_12.fld0.1 = (-1380810268_i32);
_9.0 = !6760289247156706893_i64;
_12.fld2 = 4443650277619013514_u64 as u16;
RET = [_12.fld2,_12.fld2,_12.fld2,_12.fld2,_12.fld2,_12.fld2];
_13.0 = _12.fld2 >> _9.0;
_13.2 = _6 as f32;
_9.0 = _12.fld0.1 as i64;
_6 = 1_usize as isize;
_2 = _8 as i16;
_13.1 = _8;
_8 = !_13.1;
_12.fld1 = _9.1;
_12.fld1 = _9.1 >> _12.fld0.1;
_12.fld1 = _9.1;
Goto(bb7)
}
bb11 = {
_15 = 2135554747_u32 << _6;
RET = [_13.0,_12.fld2,_12.fld2,_12.fld2,_12.fld2,_13.0];
_5 = [13417945919566442191_usize,5292055425971033640_usize,5_usize,0_usize];
_4 = _1;
_2 = _12.fld0.2;
_13.2 = 90_i8 as f32;
_3 = [_11,_11,_16,_11,_11];
_7 = _11 as f64;
_15 = 3448148791_u32 ^ 2040992918_u32;
_12.fld2 = _13.0;
match _12.fld0.1 {
0 => bb8,
1 => bb4,
340282366920938463463374607430387401188 => bb13,
_ => bb12
}
}
bb12 = {
_11 = _16 >> _12.fld0.2;
_10.0 = 112558635939216220021449759197572511204_i128;
_7 = _9.0 as f64;
match _10.0 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb9,
112558635939216220021449759197572511204 => bb11,
_ => bb10
}
}
bb13 = {
_12.fld1 = !_9.1;
_10.0 = _12.fld2 as i128;
_15 = 858262790_u32 << _13.0;
_5 = [14211089150238833462_usize,4_usize,8611114434728295754_usize,9919184607446149669_usize];
_12.fld0.1 = _12.fld2 as i32;
_9.0 = (-2986179424302661768_i64);
_18 = [5_usize,4451890186674341213_usize,738790920352800836_usize,3_usize];
RET = [_12.fld2,_12.fld2,_13.0,_13.0,_13.0,_13.0];
_18 = [1_usize,6401053271607789572_usize,3_usize,12278731907084889241_usize];
_17 = _13.1 as isize;
_8 = _13.1;
match _9.0 {
0 => bb9,
1 => bb8,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
340282366920938463460388428007465549688 => bb20,
_ => bb19
}
}
bb14 = {
_6 = _2 as isize;
_7 = _6 as f64;
_4 = [_2,_2,_2,_2,_2,_2,_2];
RET = [13753_u16,53707_u16,45425_u16,21722_u16,5645_u16,38388_u16];
_3 = [93145891847017067404001990504008784106_u128,334604948875421818203264047727961464430_u128,150036743510823762273150203495174204015_u128,248726618205314997194120994207590406849_u128,121071341674044596052501474945493338029_u128];
_2 = false as i16;
_4 = [_2,_2,_2,_2,_2,_2,_2];
RET = [54923_u16,6334_u16,42489_u16,3090_u16,1543_u16,50455_u16];
_7 = _2 as f64;
_8 = !false;
_1 = [_2,_2,_2,_2,_2,_2,_2];
_2 = (-8594_i16) | (-5217_i16);
RET = [11016_u16,9179_u16,32173_u16,12288_u16,26385_u16,58904_u16];
_2 = (-5014_i16);
_8 = false;
RET = [40995_u16,6798_u16,53400_u16,49840_u16,7969_u16,11675_u16];
RET = [1975_u16,3015_u16,27697_u16,33376_u16,3189_u16,46730_u16];
_7 = (-1624015523_i32) as f64;
RET = [63238_u16,3241_u16,55844_u16,43778_u16,56735_u16,46798_u16];
RET = [31354_u16,42248_u16,41792_u16,9134_u16,13429_u16,40714_u16];
_5 = [5_usize,8442477884008774243_usize,1_usize,6_usize];
Call(_3 = fn8(RET, RET, _8, _5, RET, _8, _8, _6, _6, RET, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_15 = 2135554747_u32 << _6;
RET = [_13.0,_12.fld2,_12.fld2,_12.fld2,_12.fld2,_13.0];
_5 = [13417945919566442191_usize,5292055425971033640_usize,5_usize,0_usize];
_4 = _1;
_2 = _12.fld0.2;
_13.2 = 90_i8 as f32;
_3 = [_11,_11,_16,_11,_11];
_7 = _11 as f64;
_15 = 3448148791_u32 ^ 2040992918_u32;
_12.fld2 = _13.0;
match _12.fld0.1 {
0 => bb8,
1 => bb4,
340282366920938463463374607430387401188 => bb13,
_ => bb12
}
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_11 = _16 >> _12.fld0.2;
_10.0 = 112558635939216220021449759197572511204_i128;
_7 = _9.0 as f64;
match _10.0 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb9,
112558635939216220021449759197572511204 => bb11,
_ => bb10
}
}
bb19 = {
_10.0 = !(-20471031789863425073397543666260463513_i128);
_10.0 = -(-61867395897846367406807350889140079483_i128);
RET = [_13.0,_13.0,_12.fld2,_13.0,_13.0,_12.fld2];
_2 = _12.fld0.2;
_10 = ((-106281260717925768834574819244804691459_i128),);
RET = [_13.0,_12.fld2,_13.0,_13.0,_12.fld2,_13.0];
_8 = _13.1;
_7 = _6 as f64;
_13.1 = _9.0 != _9.0;
_8 = _13.1;
_13.2 = 11749068023210411464_usize as f32;
_11 = 315469109568921797515841831174716772290_u128;
_12.fld0.2 = _2;
_13.0 = _12.fld0.2 as u16;
_16 = _12.fld2 as u128;
Goto(bb8)
}
bb20 = {
_13.0 = !_12.fld2;
_9.1 = _12.fld1 << _15;
_20.0 = _13.2;
_6 = _17 + _17;
_12.fld0.2 = -_2;
_10 = ((-27039510948050920851590107752501182278_i128),);
_20 = (_13.2, _13.1);
_19 = [_6];
_3 = [_11,_11,_16,_11,_11];
_20 = (_13.2, _13.1);
RET = [_13.0,_13.0,_12.fld2,_13.0,_13.0,_13.0];
_20.0 = _2 as f32;
RET = [_13.0,_13.0,_13.0,_13.0,_13.0,_12.fld2];
_9.0 = (-3911505368025726595_i64);
_12.fld1 = _9.1 + _9.1;
_18 = _5;
_9.0 = 6294707170718723800_i64;
_13.1 = _20.1;
_8 = _7 >= _7;
_9.0 = (-752662212267249287_i64) * 1564345169182140426_i64;
_8 = _13.2 < _20.0;
_2 = _12.fld0.2;
_8 = !_20.1;
_13.2 = _20.0;
_10.0 = (-21174718993581820855347442460458467237_i128) & 160576054531134049270676957960847912259_i128;
RET = [_12.fld2,_13.0,_12.fld2,_12.fld2,_12.fld2,_12.fld2];
_13 = (_12.fld2, _20.1, _20.0);
_10.0 = -(-140202251307410731905671899023271608896_i128);
Goto(bb21)
}
bb21 = {
Call(_22 = dump_var(7_usize, 2_usize, Move(_2), 16_usize, Move(_16), 10_usize, Move(_10), 17_usize, Move(_17)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_22 = dump_var(7_usize, 5_usize, Move(_5), 3_usize, Move(_3), 19_usize, Move(_19), 23_usize, _23), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [u16; 6],mut _2: [u16; 6],mut _3: bool,mut _4: [usize; 4],mut _5: [u16; 6],mut _6: bool,mut _7: bool,mut _8: isize,mut _9: isize,mut _10: [u16; 6],mut _11: isize) -> [u128; 5] {
mir! {
type RET = [u128; 5];
let _12: (u128,);
let _13: isize;
let _14: Adt49;
let _15: (f32, i16, i128, usize, i32, u32);
let _16: [u8; 8];
let _17: [u16; 6];
let _18: Adt47;
let _19: usize;
let _20: Adt60;
let _21: (i16, isize);
let _22: i16;
let _23: i32;
let _24: [i16; 1];
let _25: (u16, bool, f32);
let _26: char;
let _27: [u8; 8];
let _28: isize;
let _29: u32;
let _30: bool;
let _31: f64;
let _32: f64;
let _33: [usize; 4];
let _34: [u8; 8];
let _35: u64;
let _36: isize;
let _37: (f32, bool);
let _38: [i64; 4];
let _39: (f32, i16, i128, usize, i32, u32);
let _40: u64;
let _41: ((*mut *mut char,), i32, i16);
let _42: (f32, bool);
let _43: ();
let _44: ();
{
_4 = [3_usize,6_usize,13202142812128451848_usize,3_usize];
_8 = _9 ^ _11;
_10 = [8380_u16,35219_u16,34302_u16,34770_u16,58921_u16,4608_u16];
_9 = !_11;
_5 = _1;
RET = [229864388367275725498116143400810378263_u128,176347817279172420275008888833202822219_u128,136727397085429640001064871108806360861_u128,259746611965090434898225468142802507878_u128,170615260487697264400353004759144798241_u128];
_2 = _1;
_3 = _7;
_1 = [60151_u16,22112_u16,4203_u16,38759_u16,4712_u16,14054_u16];
_12 = (278515910856987720176954109663289230918_u128,);
_15.4 = 2146621533_i32;
_12.0 = 3275467321_u32 as u128;
_3 = !_6;
_3 = _7;
_15.1 = -24628_i16;
_8 = '\u{81b85}' as isize;
_11 = -_9;
_5 = [5213_u16,31704_u16,55930_u16,29237_u16,44737_u16,3958_u16];
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_15.1 = _8 as i16;
Goto(bb1)
}
bb1 = {
_9 = !_11;
_16 = [161_u8,237_u8,195_u8,66_u8,162_u8,134_u8,49_u8,123_u8];
_7 = _3;
_12 = (266564377402304002544164501912927217457_u128,);
_8 = _11;
_13 = !_8;
_10 = _5;
_11 = _13 | _13;
_15.4 = -(-36763590_i32);
_15.4 = _9 as i32;
_2 = [10139_u16,28408_u16,26692_u16,61744_u16,11074_u16,1609_u16];
_11 = _8;
_3 = _12.0 > _12.0;
_9 = 5252563197463418179_usize as isize;
_15.4 = 1551305891_i32 & 1289806366_i32;
_15.2 = 108549137369059465042468531932770968986_i128 * (-39501628541395697442842947335849832880_i128);
_19 = 3192808000196846515_usize;
_11 = !_13;
_2 = [61424_u16,17855_u16,13464_u16,25022_u16,61591_u16,13109_u16];
_11 = _12.0 as isize;
_17 = [27659_u16,37217_u16,64211_u16,57733_u16,46854_u16,10637_u16];
_5 = [29039_u16,26371_u16,18735_u16,20053_u16,28376_u16,65359_u16];
match _19 {
0 => bb2,
1 => bb3,
2 => bb4,
3192808000196846515 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_21.1 = _9;
_17 = [24501_u16,18746_u16,7801_u16,39439_u16,43494_u16,13810_u16];
_15.0 = _15.4 as f32;
_13 = 619643848511654220_i64 as isize;
_21.1 = !_9;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_15.4 = (-2880440599731008177_i64) as i32;
_6 = _3;
_9 = -_8;
_23 = _15.4;
_15.3 = 120_i8 as usize;
_12.0 = !260077576604672032088620531117203186580_u128;
_5 = [62551_u16,52067_u16,48141_u16,38052_u16,33730_u16,60203_u16];
_15.5 = 3065400879_u32 >> _11;
_19 = !_15.3;
_25.1 = _3;
_10 = [59990_u16,56745_u16,33881_u16,11020_u16,51708_u16,5931_u16];
_6 = _23 != _15.4;
_21.1 = _11;
_21.1 = _9;
_8 = _11 - _11;
_21.0 = _12.0 as i16;
Goto(bb7)
}
bb7 = {
_1 = _2;
_15.5 = !3379877017_u32;
_22 = _15.2 as i16;
_25 = (47348_u16, _6, _15.0);
_21.1 = _11;
_15.0 = _25.2;
_21 = (_22, _11);
_9 = _21.1 - _21.1;
_15.2 = !(-33707431560510791499559001995156744144_i128);
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_25.2 = _15.0;
_15 = (_25.2, _22, 147806745498276313814818780835376493379_i128, _19, _23, 2256092668_u32);
_8 = _9 * _9;
_23 = _15.0 as i32;
_19 = !_15.3;
_23 = -_15.4;
_8 = _13 << _15.5;
_3 = _25.1;
_15.1 = _22 | _21.0;
_23 = _15.5 as i32;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_11 = _13;
_25.0 = !43263_u16;
_15.1 = -_21.0;
Call(_15.4 = core::intrinsics::bswap(_23), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_28 = _8 * _21.1;
_12 = (337437679786220520388033474285806249842_u128,);
match _15.5 {
0 => bb6,
2256092668 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_8 = (-105_i8) as isize;
_25 = (64352_u16, _3, _15.0);
_13 = !_21.1;
_15.3 = _19 + _19;
_24 = [_22];
_31 = 10775172327521660619_u64 as f64;
_30 = !_3;
_21 = (_22, _11);
_13 = _28 & _28;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_10 = _17;
_1 = [_25.0,_25.0,_25.0,_25.0,_25.0,_25.0];
_9 = !_13;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_15 = (_25.2, _21.0, (-129841446739629646945775521535330387680_i128), _19, _23, 937398862_u32);
_15.1 = _21.0;
_25.2 = -_15.0;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_8 = _9 - _13;
_21.1 = -_9;
_24 = [_22];
Call(_13 = core::intrinsics::transmute(_8), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_25.1 = _30;
_11 = _13 & _13;
_1 = [_25.0,_25.0,_25.0,_25.0,_25.0,_25.0];
_13 = -_28;
_13 = !_8;
_7 = _25.1;
_29 = 82_i8 as u32;
_25.2 = _25.0 as f32;
_32 = _31 + _31;
Goto(bb12)
}
bb12 = {
_15.4 = _23 ^ _23;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_30 = !_6;
_33 = [_19,_19,_19,_15.3];
_31 = -_32;
_25.1 = _6;
_25 = (61812_u16, _3, _15.0);
_36 = _15.3 as isize;
_15.3 = _15.2 as usize;
_22 = !_15.1;
_6 = _30;
RET = [_12.0,_12.0,_12.0,_12.0,_12.0];
_10 = _5;
match _15.5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb5,
937398862 => bb14,
_ => bb13
}
}
bb13 = {
_9 = !_11;
_16 = [161_u8,237_u8,195_u8,66_u8,162_u8,134_u8,49_u8,123_u8];
_7 = _3;
_12 = (266564377402304002544164501912927217457_u128,);
_8 = _11;
_13 = !_8;
_10 = _5;
_11 = _13 | _13;
_15.4 = -(-36763590_i32);
_15.4 = _9 as i32;
_2 = [10139_u16,28408_u16,26692_u16,61744_u16,11074_u16,1609_u16];
_11 = _8;
_3 = _12.0 > _12.0;
_9 = 5252563197463418179_usize as isize;
_15.4 = 1551305891_i32 & 1289806366_i32;
_15.2 = 108549137369059465042468531932770968986_i128 * (-39501628541395697442842947335849832880_i128);
_19 = 3192808000196846515_usize;
_11 = !_13;
_2 = [61424_u16,17855_u16,13464_u16,25022_u16,61591_u16,13109_u16];
_11 = _12.0 as isize;
_17 = [27659_u16,37217_u16,64211_u16,57733_u16,46854_u16,10637_u16];
_5 = [29039_u16,26371_u16,18735_u16,20053_u16,28376_u16,65359_u16];
match _19 {
0 => bb2,
1 => bb3,
2 => bb4,
3192808000196846515 => bb6,
_ => bb5
}
}
bb14 = {
_30 = _6;
_11 = !_8;
_8 = _21.1;
_5 = [_25.0,_25.0,_25.0,_25.0,_25.0,_25.0];
_26 = '\u{3d205}';
_15.0 = _25.2 * _25.2;
_10 = [_25.0,_25.0,_25.0,_25.0,_25.0,_25.0];
_12 = (163515380753003169701068427583438010982_u128,);
Goto(bb15)
}
bb15 = {
Call(_43 = dump_var(8_usize, 11_usize, Move(_11), 19_usize, Move(_19), 22_usize, Move(_22), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_43 = dump_var(8_usize, 26_usize, Move(_26), 36_usize, Move(_36), 2_usize, Move(_2), 28_usize, Move(_28)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_43 = dump_var(8_usize, 33_usize, Move(_33), 23_usize, Move(_23), 30_usize, Move(_30), 7_usize, Move(_7)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_43 = dump_var(8_usize, 16_usize, Move(_16), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: Adt47,mut _2: Adt47,mut _3: Adt47) -> (*mut *mut char,) {
mir! {
type RET = (*mut *mut char,);
let _4: Adt53;
let _5: usize;
let _6: [i16; 7];
let _7: (u128,);
let _8: f32;
let _9: f32;
let _10: (u128,);
let _11: f32;
let _12: bool;
let _13: (f32, i16, i128, usize, i32, u32);
let _14: *const [i16; 1];
let _15: ();
let _16: ();
{
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_2, 0), 0).1;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = Field::<(f32, bool)>(Variant(_3, 0), 0).1;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = 7044899543117696709_u64 as f32;
place!(Field::<(f32, bool)>(Variant(_3, 0), 0)).0 = Field::<(f32, bool)>(Variant(_2, 0), 0).0;
Goto(bb1)
}
bb1 = {
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)) = Field::<(f32, bool)>(Variant(_3, 0), 0);
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_3, 0), 0).0 + Field::<(f32, bool)>(Variant(_3, 0), 0).0;
_1 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_2, 0), 0) };
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_2, 0), 0).0;
_1 = _2;
_2 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_3, 0), 0) };
_3 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_1, 0), 0) };
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = Field::<(f32, bool)>(Variant(_1, 0), 0).0 * Field::<(f32, bool)>(Variant(_1, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_2, 0), 0).1;
SetDiscriminant(_1, 0);
_7 = (43138395020718819085420862490901186540_u128,);
_6 = [(-26676_i16),18505_i16,4666_i16,15471_i16,11487_i16,(-22438_i16),13497_i16];
_7 = (36780786694041795823629747836253369767_u128,);
_5 = 15529587003416142024_usize << _7.0;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_3, 0), 0).0;
_7 = (45123043405928314521601569659469997556_u128,);
_3 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_2, 0), 0) };
_3 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_2, 0), 0) };
_3 = _2;
_7 = (247965748829822945084206257705764778127_u128,);
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = Field::<(f32, bool)>(Variant(_2, 0), 0).1 & Field::<(f32, bool)>(Variant(_3, 0), 0).1;
_1 = Adt47::Variant2 { fld0: Field::<(f32, bool)>(Variant(_3, 0), 0).0 };
place!(Field::<(f32, bool)>(Variant(_3, 0), 0)).1 = Field::<(f32, bool)>(Variant(_2, 0), 0).1;
_1 = _3;
_7 = (265580733087922255067691792887091546632_u128,);
_3 = _1;
Call(_1 = fn10(_3, Field::<(f32, bool)>(Variant(_3, 0), 0), _6, _6, _3, Field::<(f32, bool)>(Variant(_3, 0), 0), Field::<(f32, bool)>(Variant(_2, 0), 0).1, _2, _3, Field::<(f32, bool)>(Variant(_2, 0), 0), _2, _2, _3, Field::<(f32, bool)>(Variant(_2, 0), 0).0, _2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)) = Field::<(f32, bool)>(Variant(_2, 0), 0);
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = 16749_i16 as f32;
_6 = [(-22881_i16),(-11158_i16),19460_i16,7440_i16,7681_i16,(-3207_i16),(-27933_i16)];
place!(Field::<(f32, bool)>(Variant(_3, 0), 0)) = (Field::<(f32, bool)>(Variant(_2, 0), 0).0, Field::<(f32, bool)>(Variant(_1, 0), 0).1);
_1 = _3;
_3 = Adt47::Variant2 { fld0: Field::<(f32, bool)>(Variant(_1, 0), 0).0 };
_2 = _1;
match _7.0 {
265580733087922255067691792887091546632 => bb4,
_ => bb3
}
}
bb3 = {
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)) = Field::<(f32, bool)>(Variant(_3, 0), 0);
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_3, 0), 0).0 + Field::<(f32, bool)>(Variant(_3, 0), 0).0;
_1 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_2, 0), 0) };
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_2, 0), 0).0;
_1 = _2;
_2 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_3, 0), 0) };
_3 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_1, 0), 0) };
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = Field::<(f32, bool)>(Variant(_1, 0), 0).0 * Field::<(f32, bool)>(Variant(_1, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_2, 0), 0).1;
SetDiscriminant(_1, 0);
_7 = (43138395020718819085420862490901186540_u128,);
_6 = [(-26676_i16),18505_i16,4666_i16,15471_i16,11487_i16,(-22438_i16),13497_i16];
_7 = (36780786694041795823629747836253369767_u128,);
_5 = 15529587003416142024_usize << _7.0;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_3, 0), 0).0;
_7 = (45123043405928314521601569659469997556_u128,);
_3 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_2, 0), 0) };
_3 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_2, 0), 0) };
_3 = _2;
_7 = (247965748829822945084206257705764778127_u128,);
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = Field::<(f32, bool)>(Variant(_2, 0), 0).1 & Field::<(f32, bool)>(Variant(_3, 0), 0).1;
_1 = Adt47::Variant2 { fld0: Field::<(f32, bool)>(Variant(_3, 0), 0).0 };
place!(Field::<(f32, bool)>(Variant(_3, 0), 0)).1 = Field::<(f32, bool)>(Variant(_2, 0), 0).1;
_1 = _3;
_7 = (265580733087922255067691792887091546632_u128,);
_3 = _1;
Call(_1 = fn10(_3, Field::<(f32, bool)>(Variant(_3, 0), 0), _6, _6, _3, Field::<(f32, bool)>(Variant(_3, 0), 0), Field::<(f32, bool)>(Variant(_2, 0), 0).1, _2, _3, Field::<(f32, bool)>(Variant(_2, 0), 0), _2, _2, _3, Field::<(f32, bool)>(Variant(_2, 0), 0).0, _2, _6), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_9 = -Field::<(f32, bool)>(Variant(_1, 0), 0).0;
SetDiscriminant(_1, 2);
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)) = (_9, false);
_2 = _3;
_9 = -Field::<f32>(Variant(_2, 2), 0);
_1 = _2;
_5 = 17565704884934531392_usize;
_2 = _1;
place!(Field::<f32>(Variant(_2, 2), 0)) = Field::<f32>(Variant(_3, 2), 0);
_7 = (19791144425642126606886413302375675948_u128,);
_2 = _1;
place!(Field::<f32>(Variant(_1, 2), 0)) = -Field::<f32>(Variant(_3, 2), 0);
Call(RET.0 = fn11(_7.0, _2, _7.0, _6), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_6 = [18501_i16,(-17134_i16),22018_i16,20301_i16,15840_i16,(-15206_i16),(-7668_i16)];
_10.0 = 1280613104_i32 as u128;
_9 = Field::<f32>(Variant(_2, 2), 0);
_3 = _2;
_13.1 = (-16051_i16) | 31096_i16;
_10.0 = _7.0;
_10.0 = _7.0;
_13.3 = (-64234225536792891152143515446018969105_i128) as usize;
_13.3 = '\u{e7819}' as usize;
_9 = -Field::<f32>(Variant(_1, 2), 0);
_13.4 = 1426713107_i32;
_12 = true;
_13 = (_9, (-9337_i16), 93410687166205721953493083277218547397_i128, _5, (-976486840_i32), 1523431414_u32);
place!(Field::<f32>(Variant(_1, 2), 0)) = -_9;
_13.5 = 2704222691_u32 - 2628579555_u32;
_5 = !_13.3;
_11 = -_13.0;
_8 = _9;
_2 = _3;
_13 = (_11, (-14968_i16), 93060321064980071375370154702658669291_i128, _5, 817553657_i32, 649820404_u32);
_13.4 = (-852811992_i32) + (-714757897_i32);
_13.2 = 8212286007634258818395968610057447359_i128;
place!(Field::<f32>(Variant(_2, 2), 0)) = Field::<f32>(Variant(_1, 2), 0) + _11;
_13 = (_11, 32364_i16, (-135170063149638950521974788552768224206_i128), _5, (-276859613_i32), 1452330919_u32);
_12 = true ^ true;
_10 = (_7.0,);
Goto(bb6)
}
bb6 = {
Call(_15 = dump_var(9_usize, 7_usize, Move(_7), 6_usize, Move(_6), 16_usize, _16, 16_usize, _16), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: Adt47,mut _2: (f32, bool),mut _3: [i16; 7],mut _4: [i16; 7],mut _5: Adt47,mut _6: (f32, bool),mut _7: bool,mut _8: Adt47,mut _9: Adt47,mut _10: (f32, bool),mut _11: Adt47,mut _12: Adt47,mut _13: Adt47,mut _14: f32,mut _15: Adt47,mut _16: [i16; 7]) -> Adt47 {
mir! {
type RET = Adt47;
let _17: i64;
let _18: Adt48;
let _19: Adt60;
let _20: f32;
let _21: Adt48;
let _22: [usize; 4];
let _23: bool;
let _24: (i64, u8, *mut i8);
let _25: [i64; 4];
let _26: u128;
let _27: f64;
let _28: i128;
let _29: [i64; 4];
let _30: Adt52;
let _31: [u8; 8];
let _32: (f32, bool);
let _33: char;
let _34: i64;
let _35: ();
let _36: ();
{
SetDiscriminant(_13, 1);
_13 = Adt47::Variant0 { fld0: _6 };
place!(Field::<(f32, bool)>(Variant(_5, 0), 0)) = Field::<(f32, bool)>(Variant(_8, 0), 0);
place!(Field::<(f32, bool)>(Variant(_12, 0), 0)).0 = -Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_7 = !Field::<(f32, bool)>(Variant(_11, 0), 0).1;
_6.0 = -Field::<(f32, bool)>(Variant(_13, 0), 0).0;
_6 = (_2.0, Field::<(f32, bool)>(Variant(_12, 0), 0).1);
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)).1 = Field::<(f32, bool)>(Variant(_15, 0), 0).0 < _10.0;
_16 = [(-8011_i16),(-13087_i16),(-16015_i16),(-31906_i16),(-24391_i16),(-15533_i16),(-13935_i16)];
_6 = (_10.0, Field::<(f32, bool)>(Variant(_11, 0), 0).1);
place!(Field::<(f32, bool)>(Variant(_5, 0), 0)) = (_10.0, _6.1);
place!(Field::<(f32, bool)>(Variant(_13, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_12, 0), 0).1;
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)).0 = 307701529834554569525117738860230101234_u128 as f32;
SetDiscriminant(_13, 0);
_17 = (-8788133620916349796_i64);
place!(Field::<(f32, bool)>(Variant(_12, 0), 0)).0 = _14;
_2.1 = _6.1 ^ _6.1;
_10 = (_6.0, _2.1);
RET = _5;
_9 = RET;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)) = Field::<(f32, bool)>(Variant(_9, 0), 0);
_16 = [16962_i16,10465_i16,(-8179_i16),13043_i16,(-6554_i16),22603_i16,(-23541_i16)];
_11 = _1;
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)).0 = _2.0 * _2.0;
place!(Field::<(f32, bool)>(Variant(_13, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_5, 0), 0).1;
match _17 {
0 => bb1,
340282366920938463454586473810851861660 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
RET = _9;
_1 = _12;
_2.0 = Field::<(f32, bool)>(Variant(_1, 0), 0).0 + Field::<(f32, bool)>(Variant(_15, 0), 0).0;
_14 = (-1_i8) as f32;
place!(Field::<(f32, bool)>(Variant(_13, 0), 0)) = Field::<(f32, bool)>(Variant(_12, 0), 0);
_22 = [3_usize,6_usize,8508871934093753044_usize,3001234099029065360_usize];
RET = Adt47::Variant2 { fld0: _6.0 };
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)) = (Field::<(f32, bool)>(Variant(_8, 0), 0).0, _2.1);
_13 = _12;
SetDiscriminant(_5, 1);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = Field::<(f32, bool)>(Variant(_9, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_13, 0), 0)).0 = -Field::<(f32, bool)>(Variant(_9, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_15, 0), 0)).1 = Field::<(f32, bool)>(Variant(_1, 0), 0).1;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_2.0, Field::<(f32, bool)>(Variant(_9, 0), 0).1);
_7 = !Field::<(f32, bool)>(Variant(_11, 0), 0).1;
SetDiscriminant(_1, 3);
place!(Field::<f32>(Variant(RET, 2), 0)) = _6.0;
place!(Field::<u8>(Variant(_5, 1), 7)) = 219_u8;
place!(Field::<(f32, bool)>(Variant(_15, 0), 0)).0 = _17 as f32;
_2.1 = _7;
place!(Field::<(f32, bool)>(Variant(_15, 0), 0)) = (_10.0, _10.1);
_4 = [(-19263_i16),(-25511_i16),11795_i16,(-13076_i16),21206_i16,(-22547_i16),(-13123_i16)];
place!(Field::<i64>(Variant(_5, 1), 6)) = _17 ^ _17;
place!(Field::<[u128; 5]>(Variant(_1, 3), 0)) = [35860960010503453984423612854925650823_u128,11081176037947409791309156044808366735_u128,321197134435455418898228410561910083607_u128,91226635540223169640410872017293413302_u128,61347397084553483989899477506775731139_u128];
place!(Field::<(f32, bool)>(Variant(_15, 0), 0)).0 = _2.0;
_6.1 = _10.1;
place!(Field::<(f32, bool)>(Variant(_15, 0), 0)).0 = Field::<(f32, bool)>(Variant(_12, 0), 0).0 + Field::<(f32, bool)>(Variant(_13, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_12, 0), 0)) = (Field::<(f32, bool)>(Variant(_9, 0), 0).0, Field::<(f32, bool)>(Variant(_15, 0), 0).1);
match Field::<u8>(Variant(_5, 1), 7) {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
219 => bb10,
_ => bb9
}
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_27 = Field::<u8>(Variant(_5, 1), 7) as f64;
place!(Field::<(f32, bool)>(Variant(_15, 0), 0)).0 = _14 - Field::<(f32, bool)>(Variant(_11, 0), 0).0;
SetDiscriminant(_15, 1);
_6.0 = 31311832437755132174071958315122395903_i128 as f32;
_6.0 = (-119_isize) as f32;
place!(Field::<isize>(Variant(_5, 1), 2)) = (-60_isize) * 9223372036854775807_isize;
RET = Adt47::Variant2 { fld0: _2.0 };
place!(Field::<[u16; 6]>(Variant(_1, 3), 1)) = [8054_u16,41781_u16,54178_u16,12875_u16,1959_u16,26644_u16];
SetDiscriminant(_12, 2);
place!(Field::<isize>(Variant(_15, 1), 2)) = Field::<isize>(Variant(_5, 1), 2) + Field::<isize>(Variant(_5, 1), 2);
_20 = Field::<(f32, bool)>(Variant(_11, 0), 0).0 * Field::<(f32, bool)>(Variant(_9, 0), 0).0;
_16 = [11222_i16,(-21996_i16),10240_i16,13367_i16,11395_i16,11442_i16,(-9442_i16)];
_4 = [27605_i16,11220_i16,(-5182_i16),25357_i16,5059_i16,23360_i16,905_i16];
Goto(bb11)
}
bb11 = {
_28 = 12274268248575671701_usize as i128;
_24.0 = -Field::<i64>(Variant(_5, 1), 6);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = _6;
match Field::<u8>(Variant(_5, 1), 7) {
0 => bb12,
1 => bb13,
2 => bb14,
219 => bb16,
_ => bb15
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_1 = _11;
place!(Field::<u16>(Variant(_15, 1), 4)) = Field::<isize>(Variant(_15, 1), 2) as u16;
SetDiscriminant(_8, 3);
place!(Field::<u16>(Variant(_5, 1), 4)) = Field::<u16>(Variant(_15, 1), 4) | Field::<u16>(Variant(_15, 1), 4);
place!(Field::<(f32, bool)>(Variant(_13, 0), 0)).1 = _10.1;
place!(Field::<[u128; 5]>(Variant(_8, 3), 0)) = [257774665772583806507606446246979710329_u128,249565713674147629314856599057305819838_u128,246600323457653724857443956925659727225_u128,152012122800378162406938090128689540336_u128,67226579442190124139509634528043270745_u128];
_10.0 = Field::<(f32, bool)>(Variant(_9, 0), 0).0;
SetDiscriminant(RET, 0);
place!(Field::<(f32, bool)>(Variant(_9, 0), 0)).0 = _28 as f32;
place!(Field::<[u8; 8]>(Variant(_8, 3), 3)) = [Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7),Field::<u8>(Variant(_5, 1), 7)];
place!(Field::<[u8; 8]>(Variant(_5, 1), 0)) = Field::<[u8; 8]>(Variant(_8, 3), 3);
match Field::<u8>(Variant(_5, 1), 7) {
0 => bb17,
1 => bb18,
2 => bb19,
3 => bb20,
219 => bb22,
_ => bb21
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
_28 = 12274268248575671701_usize as i128;
_24.0 = -Field::<i64>(Variant(_5, 1), 6);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = _6;
match Field::<u8>(Variant(_5, 1), 7) {
0 => bb12,
1 => bb13,
2 => bb14,
219 => bb16,
_ => bb15
}
}
bb22 = {
place!(Field::<isize>(Variant(_15, 1), 2)) = Field::<isize>(Variant(_5, 1), 2) - Field::<isize>(Variant(_5, 1), 2);
_24.1 = !Field::<u8>(Variant(_5, 1), 7);
_8 = _9;
place!(Field::<[isize; 1]>(Variant(_15, 1), 1)) = [Field::<isize>(Variant(_15, 1), 2)];
_23 = _6.1;
RET = _11;
_29 = [_17,_17,_24.0,_17];
_24.0 = -Field::<i64>(Variant(_5, 1), 6);
Goto(bb23)
}
bb23 = {
Call(_35 = dump_var(10_usize, 28_usize, Move(_28), 17_usize, Move(_17), 23_usize, Move(_23), 29_usize, Move(_29)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: u128,mut _2: Adt47,mut _3: u128,mut _4: [i16; 7]) -> *mut *mut char {
mir! {
type RET = *mut *mut char;
let _5: i8;
let _6: (f32, bool);
let _7: f32;
let _8: Adt47;
let _9: [u16; 6];
let _10: f32;
let _11: [usize; 4];
let _12: (u16, bool, f32);
let _13: char;
let _14: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _15: isize;
let _16: [u128; 3];
let _17: [u8; 8];
let _18: isize;
let _19: u16;
let _20: f64;
let _21: f64;
let _22: isize;
let _23: (u16, bool, f32);
let _24: Adt53;
let _25: (u128,);
let _26: isize;
let _27: [isize; 1];
let _28: [i64; 4];
let _29: [u128; 3];
let _30: isize;
let _31: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _32: u32;
let _33: [u128; 5];
let _34: u32;
let _35: (f32, bool);
let _36: char;
let _37: f64;
let _38: isize;
let _39: *const (i16, isize);
let _40: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _41: (f32, i16, i128, usize, i32, u32);
let _42: f64;
let _43: [u16; 6];
let _44: Adt47;
let _45: (*mut *mut char,);
let _46: isize;
let _47: Adt63;
let _48: f64;
let _49: [isize; 1];
let _50: isize;
let _51: [i64; 4];
let _52: char;
let _53: isize;
let _54: f64;
let _55: f32;
let _56: [u128; 3];
let _57: Adt53;
let _58: [i16; 1];
let _59: isize;
let _60: Adt58;
let _61: i64;
let _62: f64;
let _63: char;
let _64: (f32, bool);
let _65: u8;
let _66: char;
let _67: u8;
let _68: u8;
let _69: Adt51;
let _70: u16;
let _71: Adt49;
let _72: bool;
let _73: u16;
let _74: [i16; 7];
let _75: isize;
let _76: [i128; 2];
let _77: bool;
let _78: isize;
let _79: f32;
let _80: [i16; 7];
let _81: Adt49;
let _82: char;
let _83: (i128,);
let _84: Adt53;
let _85: *mut f64;
let _86: f64;
let _87: Adt56;
let _88: f64;
let _89: f32;
let _90: f64;
let _91: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _92: isize;
let _93: isize;
let _94: (char, i8, u8);
let _95: (f32, bool);
let _96: isize;
let _97: isize;
let _98: bool;
let _99: f32;
let _100: isize;
let _101: f64;
let _102: Adt48;
let _103: i64;
let _104: f64;
let _105: bool;
let _106: u8;
let _107: char;
let _108: bool;
let _109: u8;
let _110: Adt59;
let _111: [isize; 1];
let _112: *mut (i128,);
let _113: f32;
let _114: f64;
let _115: [i16; 1];
let _116: [u128; 5];
let _117: char;
let _118: [i16; 1];
let _119: Adt50;
let _120: f64;
let _121: isize;
let _122: isize;
let _123: [usize; 4];
let _124: [u128; 5];
let _125: Adt47;
let _126: Adt52;
let _127: Adt52;
let _128: [i64; 4];
let _129: (*mut *mut char,);
let _130: (i16, isize);
let _131: Adt53;
let _132: u128;
let _133: [u128; 5];
let _134: (i16, isize);
let _135: i8;
let _136: f64;
let _137: Adt47;
let _138: f64;
let _139: f64;
let _140: Adt55;
let _141: [i16; 1];
let _142: isize;
let _143: isize;
let _144: u128;
let _145: isize;
let _146: (f32, i16, i128, usize, i32, u32);
let _147: [usize; 4];
let _148: Adt58;
let _149: Adt50;
let _150: [isize; 1];
let _151: [isize; 1];
let _152: ();
let _153: ();
{
_1 = (-28772_i16) as u128;
_1 = _3 | _3;
SetDiscriminant(_2, 0);
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = 2414396190_u32 as f32;
_1 = '\u{bd226}' as u128;
_1 = 13148874115555323673_u64 as u128;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).1 = true;
match _3 {
0 => bb1,
1 => bb2,
19791144425642126606886413302375675948 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_4 = [11594_i16,(-17997_i16),(-22096_i16),18297_i16,(-11919_i16),5914_i16,32573_i16];
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _3 as f32;
_4 = [(-19497_i16),(-28892_i16),11686_i16,(-8257_i16),(-4670_i16),283_i16,(-12083_i16)];
_6 = (Field::<(f32, bool)>(Variant(_2, 0), 0).0, Field::<(f32, bool)>(Variant(_2, 0), 0).1);
_5 = (-28_i8);
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _6.0 * _6.0;
_3 = _1 & _1;
_7 = _5 as f32;
_2 = Adt47::Variant0 { fld0: _6 };
_5 = (-118_i8) & 102_i8;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).1 = !_6.1;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _7;
_4 = [(-3194_i16),1633_i16,(-5617_i16),32446_i16,8436_i16,(-25478_i16),13789_i16];
_8 = Adt47::Variant2 { fld0: _7 };
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).1 = !_6.1;
place!(Field::<f32>(Variant(_8, 2), 0)) = (-1372957624_i32) as f32;
_6 = (Field::<f32>(Variant(_8, 2), 0), Field::<(f32, bool)>(Variant(_2, 0), 0).1);
SetDiscriminant(_2, 0);
_6 = (_7, true);
_3 = _1;
Goto(bb5)
}
bb5 = {
_7 = Field::<f32>(Variant(_8, 2), 0) * Field::<f32>(Variant(_8, 2), 0);
_9 = [5832_u16,56849_u16,42279_u16,13894_u16,42610_u16,14974_u16];
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _3 as f32;
_6.0 = -Field::<(f32, bool)>(Variant(_2, 0), 0).0;
_9 = [15785_u16,44920_u16,23949_u16,44325_u16,36548_u16,35754_u16];
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).1 = _5 == _5;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)) = (_7, _6.1);
_4 = [17711_i16,32469_i16,29192_i16,(-19983_i16),22707_i16,(-8894_i16),(-17624_i16)];
Goto(bb6)
}
bb6 = {
_10 = -_6.0;
place!(Field::<f32>(Variant(_8, 2), 0)) = 3_usize as f32;
_12 = (5637_u16, _6.1, _7);
_7 = -_12.2;
_4 = [(-2422_i16),23673_i16,(-15599_i16),(-24806_i16),31414_i16,(-5061_i16),29306_i16];
_11 = [16825171223054919483_usize,7_usize,13800359966937764578_usize,3_usize];
_7 = 9223372036854775807_isize as f32;
_14.0 = [_1,_1,_1,_3,_1];
_14.1.4 = -(-142826302_i32);
_12.1 = _6.1 > _6.1;
_14.1.3 = 0_usize;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).1 = _12.2 == _10;
_12 = (30464_u16, Field::<(f32, bool)>(Variant(_2, 0), 0).1, Field::<(f32, bool)>(Variant(_2, 0), 0).0);
_4 = [(-18290_i16),8904_i16,14967_i16,(-4961_i16),(-10496_i16),(-27748_i16),(-25233_i16)];
_9 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_1 = _3;
_13 = '\u{b6171}';
_4 = [(-27703_i16),(-6450_i16),14980_i16,8843_i16,(-27155_i16),(-14616_i16),(-24323_i16)];
_6 = Field::<(f32, bool)>(Variant(_2, 0), 0);
_14.1.5 = 122_u8 as u32;
_12 = (3972_u16, _6.1, _6.0);
_14.1.0 = _6.0 + _6.0;
_6.1 = _12.1;
match _14.1.3 {
0 => bb8,
_ => bb7
}
}
bb7 = {
_7 = Field::<f32>(Variant(_8, 2), 0) * Field::<f32>(Variant(_8, 2), 0);
_9 = [5832_u16,56849_u16,42279_u16,13894_u16,42610_u16,14974_u16];
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _3 as f32;
_6.0 = -Field::<(f32, bool)>(Variant(_2, 0), 0).0;
_9 = [15785_u16,44920_u16,23949_u16,44325_u16,36548_u16,35754_u16];
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).1 = _5 == _5;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)) = (_7, _6.1);
_4 = [17711_i16,32469_i16,29192_i16,(-19983_i16),22707_i16,(-8894_i16),(-17624_i16)];
Goto(bb6)
}
bb8 = {
_18 = 9223372036854775807_isize + (-9223372036854775808_isize);
_17 = [149_u8,216_u8,55_u8,160_u8,53_u8,222_u8,203_u8,254_u8];
_14.1.1 = _6.1 as i16;
_1 = _3 - _3;
_14.1 = (_6.0, 11002_i16, 4073919799938168104646725232542843194_i128, 5500816640890194092_usize, 556920445_i32, 2548679738_u32);
match _14.1.2 {
4073919799938168104646725232542843194 => bb9,
_ => bb4
}
}
bb9 = {
_23.2 = 6884691353101977392_i64 as f32;
_2 = _8;
_14.1.4 = -779276202_i32;
_12.0 = _14.1.3 as u16;
_12.2 = _18 as f32;
_20 = _18 as f64;
_23.0 = _18 as u16;
_6 = (_7, _12.1);
_23 = (_12.0, _12.1, _12.2);
_8 = _2;
_14.1.1 = _14.1.0 as i16;
_14.1.3 = !14372572721670380792_usize;
_6.1 = _23.1;
_12.2 = _23.2 - _14.1.0;
place!(Field::<f32>(Variant(_8, 2), 0)) = _5 as f32;
_14.1.0 = Field::<f32>(Variant(_2, 2), 0);
_14.1.1 = 21315_i16 * 3987_i16;
SetDiscriminant(_8, 0);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).1 = !_6.1;
_8 = Adt47::Variant0 { fld0: _6 };
_21 = -_20;
_6.1 = Field::<(f32, bool)>(Variant(_8, 0), 0).1;
_6.0 = _7 + _12.2;
_12 = (_23.0, _6.1, _23.2);
Goto(bb10)
}
bb10 = {
_25.0 = 14569703305805238488_u64 as u128;
_13 = '\u{c2daf}';
_22 = _18;
_25.0 = _12.0 as u128;
_26 = _18;
_19 = !_23.0;
_5 = _23.0 as i8;
_12.2 = -_6.0;
_17 = [68_u8,71_u8,113_u8,93_u8,198_u8,87_u8,42_u8,247_u8];
_14.1.0 = Field::<f32>(Variant(_2, 2), 0);
_26 = _18 | _18;
_27 = [_26];
_8 = Adt47::Variant2 { fld0: _23.2 };
place!(Field::<f32>(Variant(_2, 2), 0)) = _14.1.2 as f32;
_25 = (_1,);
_12.1 = _6.1 | _6.1;
_2 = _8;
_7 = _6.0;
_25.0 = !_1;
_13 = '\u{e3ef0}';
_25 = (_1,);
_3 = _14.1.1 as u128;
_14.1.4 = 91_u8 as i32;
_17 = [66_u8,145_u8,223_u8,1_u8,203_u8,18_u8,142_u8,63_u8];
_14.1.5 = 2123684261_u32;
_25.0 = !_1;
_26 = !_22;
_15 = !_22;
Goto(bb11)
}
bb11 = {
_22 = 1890912232442368894_i64 as isize;
_1 = !_25.0;
_21 = _20;
_23.2 = -_7;
_6 = (_7, _12.1);
_6.1 = _23.1 <= _23.1;
_2 = Adt47::Variant2 { fld0: _12.2 };
_15 = _13 as isize;
_28 = [5426837334507578355_i64,3858088716064631568_i64,8927893466923150676_i64,(-3492248747679492689_i64)];
_6.0 = 4487879908709232216_i64 as f32;
match _14.1.2 {
0 => bb7,
1 => bb8,
2 => bb3,
4073919799938168104646725232542843194 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_13 = '\u{45333}';
_18 = 140_u8 as isize;
_23 = (_12.0, _6.1, _12.2);
_12.0 = !_23.0;
_27 = [_22];
Goto(bb14)
}
bb14 = {
_31.1.3 = _14.1.3 >> _19;
_31 = (_14.0, _14.1);
_12.1 = _23.1;
_20 = _21 * _21;
_9 = [_12.0,_12.0,_12.0,_19,_12.0,_12.0];
_14.1.3 = !_31.1.3;
_31.1.5 = _14.1.5 * _14.1.5;
_5 = (-106_i8) * (-18_i8);
place!(Field::<f32>(Variant(_8, 2), 0)) = -_7;
_8 = _2;
Goto(bb15)
}
bb15 = {
_1 = _12.2 as u128;
_20 = _21 - _21;
_9 = [_23.0,_12.0,_23.0,_12.0,_23.0,_12.0];
place!(Field::<f32>(Variant(_8, 2), 0)) = _14.1.0;
SetDiscriminant(_8, 0);
_32 = _31.1.5;
_14 = _31;
_7 = 9341110923902429915_u64 as f32;
_14.1.3 = _31.1.3 * _31.1.3;
_14.0 = _31.0;
_14.1.5 = _32 & _32;
_6.0 = -_23.2;
_14.1.4 = _31.1.4;
_1 = !_25.0;
_12 = _23;
_16 = [_25.0,_25.0,_3];
Call(_10 = fn12(_14.1.2, _31.1.2, _23.0, _23.0, _31.1.2, _2, _2, _14.1.2, _6), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_31.0 = _14.0;
_33 = _14.0;
_35.0 = -_12.2;
_14.1.2 = _25.0 as i128;
_25.0 = _26 as u128;
_17 = [158_u8,247_u8,54_u8,182_u8,84_u8,178_u8,19_u8,64_u8];
_7 = -Field::<f32>(Variant(_2, 2), 0);
_17 = [108_u8,210_u8,51_u8,72_u8,153_u8,93_u8,34_u8,201_u8];
_29 = _16;
_22 = _14.1.2 as isize;
_8 = Adt47::Variant0 { fld0: _6 };
_32 = !_14.1.5;
_23.2 = _12.2;
_31.1.1 = -_14.1.1;
_17 = [7_u8,59_u8,179_u8,215_u8,50_u8,29_u8,248_u8,165_u8];
SetDiscriminant(_2, 0);
_31.1 = (Field::<(f32, bool)>(Variant(_8, 0), 0).0, _14.1.1, _14.1.2, _14.1.3, _14.1.4, _32);
_11 = [_31.1.3,_14.1.3,_31.1.3,_14.1.3];
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)) = (_23.2, _6.1);
_14.1.4 = _14.1.3 as i32;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (Field::<(f32, bool)>(Variant(_2, 0), 0).0, _23.1);
_37 = _12.0 as f64;
_14.1.0 = _5 as f32;
Call(_14.1.1 = fn13(_2, _23.0, _12, _23, _6.1, _14.1.2, _2, _8, _14.1.3, _10, _8), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)) = (_23.2, Field::<(f32, bool)>(Variant(_8, 0), 0).1);
_40.1 = (Field::<(f32, bool)>(Variant(_2, 0), 0).0, _31.1.1, _14.1.2, _14.1.3, _14.1.4, _32);
_21 = -_37;
_38 = _13 as isize;
_35.0 = -_6.0;
_40.0 = _33;
_14.1.0 = -_23.2;
_23.1 = !_12.1;
_30 = -_26;
_40 = _31;
_41.3 = !_14.1.3;
_14.1.0 = -_35.0;
Goto(bb18)
}
bb18 = {
_6.0 = _10 + _31.1.0;
_41.0 = -_40.1.0;
_1 = _5 as u128;
_19 = _23.0;
_12.2 = _41.0 - _10;
Goto(bb19)
}
bb19 = {
_15 = Field::<(f32, bool)>(Variant(_8, 0), 0).1 as isize;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = _7 * Field::<(f32, bool)>(Variant(_2, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _40.1.0;
_41.2 = 13893530948417586996_u64 as i128;
_41 = _14.1;
_41.1 = -_14.1.1;
_35 = (Field::<(f32, bool)>(Variant(_2, 0), 0).0, Field::<(f32, bool)>(Variant(_2, 0), 0).1);
_41.4 = _14.1.4;
_14.1.2 = !_41.2;
_35 = _6;
_44 = Adt47::Variant2 { fld0: _31.1.0 };
_34 = !_32;
_14.1.0 = _30 as f32;
_6 = (_41.0, Field::<(f32, bool)>(Variant(_2, 0), 0).1);
_41.2 = _40.1.2 >> _40.1.3;
SetDiscriminant(_2, 2);
_34 = !_31.1.5;
_31.1.0 = _35.0;
SetDiscriminant(_44, 3);
_41.5 = _31.1.4 as u32;
_14.1.4 = _41.4 + _40.1.4;
_12 = _23;
_11 = [_31.1.3,_41.3,_41.3,_14.1.3];
_17 = [246_u8,86_u8,107_u8,243_u8,9_u8,97_u8,224_u8,30_u8];
_14.1.1 = _31.1.1;
_14.1.3 = _31.1.3 | _31.1.3;
_14.1.5 = !_31.1.5;
_25.0 = _1 << _34;
_40.1 = (Field::<(f32, bool)>(Variant(_8, 0), 0).0, _14.1.1, _14.1.2, _41.3, _14.1.4, _14.1.5);
Goto(bb20)
}
bb20 = {
_12.0 = _14.1.3 as u16;
_31 = (_14.0, _40.1);
_40 = (_14.0, _31.1);
place!(Field::<[u8; 8]>(Variant(_44, 3), 3)) = [232_u8,26_u8,178_u8,150_u8,247_u8,36_u8,120_u8,145_u8];
_14.0 = _31.0;
place!(Field::<[isize; 1]>(Variant(_44, 3), 2)) = [_15];
_15 = _30 ^ _22;
_31.0 = [_25.0,_1,_25.0,_25.0,_25.0];
_5 = 46_i8;
_37 = -_21;
_31 = (_40.0, _40.1);
_40.1.3 = _14.1.3 >> _22;
_41 = _31.1;
SetDiscriminant(_8, 3);
_28 = [(-7277400068026310868_i64),(-4865462522760145309_i64),(-9098583480871117794_i64),997577627171901602_i64];
_23.2 = _7 * _35.0;
Goto(bb21)
}
bb21 = {
_31.1.2 = !_41.2;
_31 = (_14.0, _41);
_29 = [_1,_25.0,_25.0];
_40.1.5 = _31.1.0 as u32;
_12.1 = !_35.1;
_12.2 = _34 as f32;
place!(Field::<[u128; 5]>(Variant(_8, 3), 0)) = _33;
_41.5 = _34;
match _5 {
0 => bb9,
1 => bb22,
2 => bb23,
3 => bb24,
4 => bb25,
46 => bb27,
_ => bb26
}
}
bb22 = {
Return()
}
bb23 = {
_15 = Field::<(f32, bool)>(Variant(_8, 0), 0).1 as isize;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = _7 * Field::<(f32, bool)>(Variant(_2, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_2, 0), 0)).0 = _40.1.0;
_41.2 = 13893530948417586996_u64 as i128;
_41 = _14.1;
_41.1 = -_14.1.1;
_35 = (Field::<(f32, bool)>(Variant(_2, 0), 0).0, Field::<(f32, bool)>(Variant(_2, 0), 0).1);
_41.4 = _14.1.4;
_14.1.2 = !_41.2;
_35 = _6;
_44 = Adt47::Variant2 { fld0: _31.1.0 };
_34 = !_32;
_14.1.0 = _30 as f32;
_6 = (_41.0, Field::<(f32, bool)>(Variant(_2, 0), 0).1);
_41.2 = _40.1.2 >> _40.1.3;
SetDiscriminant(_2, 2);
_34 = !_31.1.5;
_31.1.0 = _35.0;
SetDiscriminant(_44, 3);
_41.5 = _31.1.4 as u32;
_14.1.4 = _41.4 + _40.1.4;
_12 = _23;
_11 = [_31.1.3,_41.3,_41.3,_14.1.3];
_17 = [246_u8,86_u8,107_u8,243_u8,9_u8,97_u8,224_u8,30_u8];
_14.1.1 = _31.1.1;
_14.1.3 = _31.1.3 | _31.1.3;
_14.1.5 = !_31.1.5;
_25.0 = _1 << _34;
_40.1 = (Field::<(f32, bool)>(Variant(_8, 0), 0).0, _14.1.1, _14.1.2, _41.3, _14.1.4, _14.1.5);
Goto(bb20)
}
bb24 = {
Return()
}
bb25 = {
_1 = _12.2 as u128;
_20 = _21 - _21;
_9 = [_23.0,_12.0,_23.0,_12.0,_23.0,_12.0];
place!(Field::<f32>(Variant(_8, 2), 0)) = _14.1.0;
SetDiscriminant(_8, 0);
_32 = _31.1.5;
_14 = _31;
_7 = 9341110923902429915_u64 as f32;
_14.1.3 = _31.1.3 * _31.1.3;
_14.0 = _31.0;
_14.1.5 = _32 & _32;
_6.0 = -_23.2;
_14.1.4 = _31.1.4;
_1 = !_25.0;
_12 = _23;
_16 = [_25.0,_25.0,_3];
Call(_10 = fn12(_14.1.2, _31.1.2, _23.0, _23.0, _31.1.2, _2, _2, _14.1.2, _6), ReturnTo(bb16), UnwindUnreachable())
}
bb26 = {
_25.0 = 14569703305805238488_u64 as u128;
_13 = '\u{c2daf}';
_22 = _18;
_25.0 = _12.0 as u128;
_26 = _18;
_19 = !_23.0;
_5 = _23.0 as i8;
_12.2 = -_6.0;
_17 = [68_u8,71_u8,113_u8,93_u8,198_u8,87_u8,42_u8,247_u8];
_14.1.0 = Field::<f32>(Variant(_2, 2), 0);
_26 = _18 | _18;
_27 = [_26];
_8 = Adt47::Variant2 { fld0: _23.2 };
place!(Field::<f32>(Variant(_2, 2), 0)) = _14.1.2 as f32;
_25 = (_1,);
_12.1 = _6.1 | _6.1;
_2 = _8;
_7 = _6.0;
_25.0 = !_1;
_13 = '\u{e3ef0}';
_25 = (_1,);
_3 = _14.1.1 as u128;
_14.1.4 = 91_u8 as i32;
_17 = [66_u8,145_u8,223_u8,1_u8,203_u8,18_u8,142_u8,63_u8];
_14.1.5 = 2123684261_u32;
_25.0 = !_1;
_26 = !_22;
_15 = !_22;
Goto(bb11)
}
bb27 = {
_14.1.5 = _26 as u32;
_31.1.4 = _40.1.4;
_40 = _31;
_14.1.0 = _6.0 + _23.2;
_37 = _20 * _21;
_40.1.0 = 158_u8 as f32;
_41.5 = _31.1.5;
place!(Field::<[u8; 8]>(Variant(_8, 3), 3)) = [204_u8,227_u8,123_u8,211_u8,168_u8,187_u8,182_u8,34_u8];
_31.0 = _40.0;
_48 = -_37;
_14.1.4 = _31.1.4 >> _14.1.3;
place!(Field::<[u8; 8]>(Variant(_44, 3), 3)) = [183_u8,247_u8,188_u8,84_u8,93_u8,105_u8,31_u8,205_u8];
_14.1.2 = _23.1 as i128;
_19 = _12.0 + _23.0;
_35.0 = _23.2;
_27 = Field::<[isize; 1]>(Variant(_44, 3), 2);
_42 = -_37;
_31.1.5 = _41.3 as u32;
Goto(bb28)
}
bb28 = {
place!(Field::<[isize; 1]>(Variant(_8, 3), 2)) = _27;
_26 = !_18;
_23.0 = _31.1.3 as u16;
_35.0 = -_31.1.0;
_40 = (Field::<[u128; 5]>(Variant(_8, 3), 0), _14.1);
_43 = [_19,_19,_12.0,_12.0,_23.0,_19];
_5 = (-62_i8) << _40.1.2;
Goto(bb29)
}
bb29 = {
_7 = _35.0 + _40.1.0;
_36 = _13;
_31.1.3 = _40.1.3;
_48 = _42 + _21;
_25 = (_1,);
_40.1.1 = -_14.1.1;
_2 = Adt47::Variant3 { fld0: Field::<[u128; 5]>(Variant(_8, 3), 0),fld1: _43,fld2: _27,fld3: Field::<[u8; 8]>(Variant(_8, 3), 3) };
_6.1 = _35.0 <= _35.0;
_23.1 = _6.1;
_8 = _2;
_42 = _37 + _21;
SetDiscriminant(_2, 1);
SetDiscriminant(_8, 2);
_15 = _38 & _30;
_55 = _40.1.0 * _41.0;
_8 = Adt47::Variant0 { fld0: _6 };
_6.0 = 159_u8 as f32;
place!(Field::<*mut f64>(Variant(_2, 1), 5)) = core::ptr::addr_of_mut!(_37);
_40 = _14;
SetDiscriminant(_8, 0);
Goto(bb30)
}
bb30 = {
_42 = _21 * _20;
_8 = Adt47::Variant3 { fld0: _31.0,fld1: _9,fld2: _27,fld3: _17 };
Goto(bb31)
}
bb31 = {
_14.1.3 = 8504111957484708971_u64 as usize;
_31.1.4 = -_40.1.4;
_54 = _42 + _48;
_52 = _13;
_14.1.1 = _6.1 as i16;
_9 = Field::<[u16; 6]>(Variant(_8, 3), 1);
place!(Field::<[u128; 5]>(Variant(_44, 3), 0)) = _40.0;
SetDiscriminant(_8, 0);
_23.0 = _52 as u16;
_40.1.0 = _42 as f32;
Goto(bb32)
}
bb32 = {
_46 = _15 ^ _15;
_14.1.0 = -_40.1.0;
place!(Field::<u16>(Variant(_2, 1), 4)) = _19 & _23.0;
_40.1.5 = _3 as u32;
_22 = _30;
_31.1.1 = _14.1.1;
_16 = [_3,_25.0,_3];
_33 = _40.0;
_7 = _10 * _31.1.0;
_14.1.1 = _18 as i16;
_44 = Adt47::Variant0 { fld0: _6 };
_9 = _43;
_62 = 135_u8 as f64;
place!(Field::<[u8; 8]>(Variant(_2, 1), 0)) = [189_u8,123_u8,133_u8,0_u8,32_u8,82_u8,206_u8,44_u8];
place!(Field::<isize>(Variant(_2, 1), 2)) = Field::<(f32, bool)>(Variant(_44, 0), 0).1 as isize;
SetDiscriminant(_44, 2);
_40.1.1 = -_31.1.1;
_65 = !10_u8;
_31.1.1 = _32 as i16;
Goto(bb33)
}
bb33 = {
_33 = _31.0;
_34 = _31.1.5;
_63 = _52;
_41.0 = -_35.0;
_31.0 = [_3,_1,_25.0,_3,_1];
Goto(bb34)
}
bb34 = {
_40.1.4 = !_31.1.4;
place!(Field::<i64>(Variant(_2, 1), 6)) = 322632845039394806_i64 << _5;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_23.2, _23.1);
_65 = 204_u8 + 223_u8;
_15 = Field::<isize>(Variant(_2, 1), 2);
_41.0 = -_7;
_40.1.3 = !_41.3;
_14.1.5 = Field::<u16>(Variant(_2, 1), 4) as u32;
SetDiscriminant(_8, 0);
_41.5 = _54 as u32;
_66 = _13;
_61 = _37 as i64;
_12.2 = _41.5 as f32;
_6 = _35;
_75 = -Field::<isize>(Variant(_2, 1), 2);
_25.0 = !_1;
Goto(bb35)
}
bb35 = {
_42 = _48 + _21;
_40.1.5 = !_32;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = _6;
_68 = _65 ^ _65;
_68 = _65;
_37 = _75 as f64;
_44 = Adt47::Variant3 { fld0: _31.0,fld1: _43,fld2: _27,fld3: Field::<[u8; 8]>(Variant(_2, 1), 0) };
_70 = Field::<u16>(Variant(_2, 1), 4);
_26 = _54 as isize;
_62 = _42;
_62 = _12.2 as f64;
_14.1.3 = _41.3;
place!(Field::<[isize; 1]>(Variant(_2, 1), 1)) = [_15];
place!(Field::<[u16; 6]>(Variant(_44, 3), 1)) = [_19,Field::<u16>(Variant(_2, 1), 4),_19,Field::<u16>(Variant(_2, 1), 4),_19,_19];
_54 = _41.5 as f64;
_67 = _23.1 as u8;
_7 = _23.2 * _55;
_50 = _15;
_38 = Field::<i64>(Variant(_2, 1), 6) as isize;
_49 = [_15];
_14.1.2 = -_31.1.2;
_49 = Field::<[isize; 1]>(Variant(_44, 3), 2);
_40 = (_14.0, _41);
_72 = !_23.1;
_51 = [_61,_61,_61,Field::<i64>(Variant(_2, 1), 6)];
place!(Field::<u8>(Variant(_2, 1), 7)) = !_67;
Goto(bb36)
}
bb36 = {
_72 = _23.1;
SetDiscriminant(_44, 0);
_14.1.2 = _31.1.2 ^ _40.1.2;
_64 = (_55, _72);
Goto(bb37)
}
bb37 = {
_79 = _12.2 - _64.0;
_41.0 = _31.1.1 as f32;
_31.1.0 = _1 as f32;
_38 = -_15;
_16 = [_3,_3,_3];
_59 = _50 | _26;
_82 = _63;
Goto(bb38)
}
bb38 = {
SetDiscriminant(_8, 3);
_40.1.1 = _31.1.1 & _31.1.1;
_67 = !Field::<u8>(Variant(_2, 1), 7);
place!(Field::<[u128; 5]>(Variant(_8, 3), 0)) = _14.0;
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).0 = -_35.0;
_6.0 = _40.1.3 as f32;
place!(Field::<[isize; 1]>(Variant(_8, 3), 2)) = [_26];
_40.1.3 = _31.1.1 as usize;
_43 = _9;
_8 = Adt47::Variant2 { fld0: _7 };
_40.1.0 = _64.0 - _79;
_14.1 = _40.1;
_6 = _64;
_53 = _1 as isize;
_16 = [_25.0,_3,_3];
_37 = -_62;
_22 = !_75;
_14.1.2 = _41.2 | _40.1.2;
_31.1.5 = _14.1.5 & _40.1.5;
_5 = 40_i8;
_53 = _75 - _15;
place!(Field::<[isize; 1]>(Variant(_2, 1), 1)) = [_26];
SetDiscriminant(_8, 1);
_77 = _23.1;
_76 = [_31.1.2,_31.1.2];
Goto(bb39)
}
bb39 = {
_23 = (_70, _6.1, _7);
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).0 = _40.1.0 * _7;
_14.1.5 = !_40.1.5;
place!(Field::<i64>(Variant(_2, 1), 6)) = _40.1.5 as i64;
_55 = _64.0;
_12 = _23;
place!(Field::<*mut f64>(Variant(_2, 1), 5)) = core::ptr::addr_of_mut!(_48);
_5 = (-36_i8);
_40.0 = _33;
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).1 = _77 ^ _23.1;
_91.1.1 = !_41.1;
_14.1.0 = _67 as f32;
_83 = (_14.1.2,);
_12.1 = !Field::<(f32, bool)>(Variant(_44, 0), 0).1;
_68 = _67 | _67;
_49 = [_26];
_50 = _53;
match _5 {
0 => bb24,
1 => bb25,
2 => bb26,
340282366920938463463374607431768211420 => bb41,
_ => bb40
}
}
bb40 = {
Return()
}
bb41 = {
_20 = _37 * _62;
_63 = _82;
_41.3 = _40.1.3 + _31.1.3;
_46 = _15;
_92 = _50;
_75 = _14.1.2 as isize;
_8 = _44;
_3 = !_25.0;
_25 = (_1,);
SetDiscriminant(_8, 0);
_76 = [_40.1.2,_41.2];
_43 = [_19,_23.0,_23.0,_19,Field::<u16>(Variant(_2, 1), 4),_23.0];
_70 = _19 | Field::<u16>(Variant(_2, 1), 4);
_93 = _92 | _92;
_17 = [_68,Field::<u8>(Variant(_2, 1), 7),Field::<u8>(Variant(_2, 1), 7),Field::<u8>(Variant(_2, 1), 7),_67,_68,_67,_68];
_31 = _40;
_7 = _15 as f32;
_2 = _44;
_94 = (_13, _5, _67);
_90 = _48 - _37;
_6 = (_40.1.0, _12.1);
_62 = -_37;
_64 = _6;
_12 = (_19, _6.1, Field::<(f32, bool)>(Variant(_2, 0), 0).0);
Call(_58 = fn15(Field::<(f32, bool)>(Variant(_2, 0), 0), _44, _44, _40.1.0, Field::<(f32, bool)>(Variant(_2, 0), 0), _64, _64.1, _31.1, _26), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
_12.1 = _6.1 & _64.1;
_14.1.3 = _41.3 - _31.1.3;
_14.1.2 = _23.0 as i128;
_56 = [_25.0,_25.0,_1];
_76 = [_14.1.2,_83.0];
_18 = -_26;
_89 = _6.0 * Field::<(f32, bool)>(Variant(_2, 0), 0).0;
_91.1.1 = _40.1.1;
_63 = _82;
_67 = _68 >> _12.0;
match _94.1 {
0 => bb3,
1 => bb43,
2 => bb44,
3 => bb45,
340282366920938463463374607431768211420 => bb47,
_ => bb46
}
}
bb43 = {
_14.1.3 = 8504111957484708971_u64 as usize;
_31.1.4 = -_40.1.4;
_54 = _42 + _48;
_52 = _13;
_14.1.1 = _6.1 as i16;
_9 = Field::<[u16; 6]>(Variant(_8, 3), 1);
place!(Field::<[u128; 5]>(Variant(_44, 3), 0)) = _40.0;
SetDiscriminant(_8, 0);
_23.0 = _52 as u16;
_40.1.0 = _42 as f32;
Goto(bb32)
}
bb44 = {
_7 = _35.0 + _40.1.0;
_36 = _13;
_31.1.3 = _40.1.3;
_48 = _42 + _21;
_25 = (_1,);
_40.1.1 = -_14.1.1;
_2 = Adt47::Variant3 { fld0: Field::<[u128; 5]>(Variant(_8, 3), 0),fld1: _43,fld2: _27,fld3: Field::<[u8; 8]>(Variant(_8, 3), 3) };
_6.1 = _35.0 <= _35.0;
_23.1 = _6.1;
_8 = _2;
_42 = _37 + _21;
SetDiscriminant(_2, 1);
SetDiscriminant(_8, 2);
_15 = _38 & _30;
_55 = _40.1.0 * _41.0;
_8 = Adt47::Variant0 { fld0: _6 };
_6.0 = 159_u8 as f32;
place!(Field::<*mut f64>(Variant(_2, 1), 5)) = core::ptr::addr_of_mut!(_37);
_40 = _14;
SetDiscriminant(_8, 0);
Goto(bb30)
}
bb45 = {
_31.1.2 = !_41.2;
_31 = (_14.0, _41);
_29 = [_1,_25.0,_25.0];
_40.1.5 = _31.1.0 as u32;
_12.1 = !_35.1;
_12.2 = _34 as f32;
place!(Field::<[u128; 5]>(Variant(_8, 3), 0)) = _33;
_41.5 = _34;
match _5 {
0 => bb9,
1 => bb22,
2 => bb23,
3 => bb24,
4 => bb25,
46 => bb27,
_ => bb26
}
}
bb46 = {
_1 = _12.2 as u128;
_20 = _21 - _21;
_9 = [_23.0,_12.0,_23.0,_12.0,_23.0,_12.0];
place!(Field::<f32>(Variant(_8, 2), 0)) = _14.1.0;
SetDiscriminant(_8, 0);
_32 = _31.1.5;
_14 = _31;
_7 = 9341110923902429915_u64 as f32;
_14.1.3 = _31.1.3 * _31.1.3;
_14.0 = _31.0;
_14.1.5 = _32 & _32;
_6.0 = -_23.2;
_14.1.4 = _31.1.4;
_1 = !_25.0;
_12 = _23;
_16 = [_25.0,_25.0,_3];
Call(_10 = fn12(_14.1.2, _31.1.2, _23.0, _23.0, _31.1.2, _2, _2, _14.1.2, _6), ReturnTo(bb16), UnwindUnreachable())
}
bb47 = {
_62 = _20;
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).1 = _64.1 ^ _12.1;
_42 = _21;
_99 = -_6.0;
_31 = _40;
_91.1.2 = _41.2 + _31.1.2;
_89 = _61 as f32;
_65 = _67;
_98 = !Field::<(f32, bool)>(Variant(_44, 0), 0).1;
_77 = _98 & _6.1;
_97 = _93 & _93;
_50 = _55 as isize;
Goto(bb48)
}
bb48 = {
_91.0 = [_3,_3,_3,_1,_3];
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = _99 * _6.0;
_86 = _83.0 as f64;
_91.1.5 = _40.1.5;
_36 = _13;
_82 = _36;
_14.1.3 = _41.3;
_1 = _25.0 | _3;
match _94.1 {
0 => bb45,
1 => bb49,
2 => bb50,
3 => bb51,
4 => bb52,
340282366920938463463374607431768211420 => bb54,
_ => bb53
}
}
bb49 = {
_42 = _48 + _21;
_40.1.5 = !_32;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = _6;
_68 = _65 ^ _65;
_68 = _65;
_37 = _75 as f64;
_44 = Adt47::Variant3 { fld0: _31.0,fld1: _43,fld2: _27,fld3: Field::<[u8; 8]>(Variant(_2, 1), 0) };
_70 = Field::<u16>(Variant(_2, 1), 4);
_26 = _54 as isize;
_62 = _42;
_62 = _12.2 as f64;
_14.1.3 = _41.3;
place!(Field::<[isize; 1]>(Variant(_2, 1), 1)) = [_15];
place!(Field::<[u16; 6]>(Variant(_44, 3), 1)) = [_19,Field::<u16>(Variant(_2, 1), 4),_19,Field::<u16>(Variant(_2, 1), 4),_19,_19];
_54 = _41.5 as f64;
_67 = _23.1 as u8;
_7 = _23.2 * _55;
_50 = _15;
_38 = Field::<i64>(Variant(_2, 1), 6) as isize;
_49 = [_15];
_14.1.2 = -_31.1.2;
_49 = Field::<[isize; 1]>(Variant(_44, 3), 2);
_40 = (_14.0, _41);
_72 = !_23.1;
_51 = [_61,_61,_61,Field::<i64>(Variant(_2, 1), 6)];
place!(Field::<u8>(Variant(_2, 1), 7)) = !_67;
Goto(bb36)
}
bb50 = {
_13 = '\u{45333}';
_18 = 140_u8 as isize;
_23 = (_12.0, _6.1, _12.2);
_12.0 = !_23.0;
_27 = [_22];
Goto(bb14)
}
bb51 = {
_18 = 9223372036854775807_isize + (-9223372036854775808_isize);
_17 = [149_u8,216_u8,55_u8,160_u8,53_u8,222_u8,203_u8,254_u8];
_14.1.1 = _6.1 as i16;
_1 = _3 - _3;
_14.1 = (_6.0, 11002_i16, 4073919799938168104646725232542843194_i128, 5500816640890194092_usize, 556920445_i32, 2548679738_u32);
match _14.1.2 {
4073919799938168104646725232542843194 => bb9,
_ => bb4
}
}
bb52 = {
_25.0 = 14569703305805238488_u64 as u128;
_13 = '\u{c2daf}';
_22 = _18;
_25.0 = _12.0 as u128;
_26 = _18;
_19 = !_23.0;
_5 = _23.0 as i8;
_12.2 = -_6.0;
_17 = [68_u8,71_u8,113_u8,93_u8,198_u8,87_u8,42_u8,247_u8];
_14.1.0 = Field::<f32>(Variant(_2, 2), 0);
_26 = _18 | _18;
_27 = [_26];
_8 = Adt47::Variant2 { fld0: _23.2 };
place!(Field::<f32>(Variant(_2, 2), 0)) = _14.1.2 as f32;
_25 = (_1,);
_12.1 = _6.1 | _6.1;
_2 = _8;
_7 = _6.0;
_25.0 = !_1;
_13 = '\u{e3ef0}';
_25 = (_1,);
_3 = _14.1.1 as u128;
_14.1.4 = 91_u8 as i32;
_17 = [66_u8,145_u8,223_u8,1_u8,203_u8,18_u8,142_u8,63_u8];
_14.1.5 = 2123684261_u32;
_25.0 = !_1;
_26 = !_22;
_15 = !_22;
Goto(bb11)
}
bb53 = {
_23.2 = 6884691353101977392_i64 as f32;
_2 = _8;
_14.1.4 = -779276202_i32;
_12.0 = _14.1.3 as u16;
_12.2 = _18 as f32;
_20 = _18 as f64;
_23.0 = _18 as u16;
_6 = (_7, _12.1);
_23 = (_12.0, _12.1, _12.2);
_8 = _2;
_14.1.1 = _14.1.0 as i16;
_14.1.3 = !14372572721670380792_usize;
_6.1 = _23.1;
_12.2 = _23.2 - _14.1.0;
place!(Field::<f32>(Variant(_8, 2), 0)) = _5 as f32;
_14.1.0 = Field::<f32>(Variant(_2, 2), 0);
_14.1.1 = 21315_i16 * 3987_i16;
SetDiscriminant(_8, 0);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).1 = !_6.1;
_8 = Adt47::Variant0 { fld0: _6 };
_21 = -_20;
_6.1 = Field::<(f32, bool)>(Variant(_8, 0), 0).1;
_6.0 = _7 + _12.2;
_12 = (_23.0, _6.1, _23.2);
Goto(bb10)
}
bb54 = {
_76 = [_40.1.2,_41.2];
_66 = _94.0;
_64.0 = _7 + _99;
_36 = _82;
_96 = 1407618253354323398_u64 as isize;
_94.2 = _68 << _92;
_35.0 = _79 - _40.1.0;
Goto(bb55)
}
bb55 = {
_25 = (_1,);
_95 = Field::<(f32, bool)>(Variant(_2, 0), 0);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).1 = Field::<(f32, bool)>(Variant(_44, 0), 0).1 & _35.1;
_40.1.3 = !_41.3;
_97 = -_93;
_41.5 = _41.4 as u32;
_15 = _18 >> _94.2;
_40 = (_91.0, _31.1);
Goto(bb56)
}
bb56 = {
_32 = _93 as u32;
_78 = -_15;
_41.2 = _31.1.2 | _14.1.2;
_65 = !_94.2;
SetDiscriminant(_8, 2);
_35.0 = -_64.0;
_40.1.3 = _41.3;
_79 = -_23.2;
_74 = [_40.1.1,_40.1.1,_14.1.1,_14.1.1,_31.1.1,_40.1.1,_91.1.1];
_73 = _94.1 as u16;
_91.1.0 = _12.2 - _12.2;
_94.0 = _63;
_91.1.3 = _14.1.3 - _40.1.3;
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).0 = _31.1.0;
_53 = -_59;
_12.0 = _19;
_95 = Field::<(f32, bool)>(Variant(_2, 0), 0);
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).0 = _23.2;
_77 = _38 > _93;
_88 = -_20;
_91.1.2 = _98 as i128;
SetDiscriminant(_44, 0);
_49 = [_93];
_88 = _64.0 as f64;
_103 = _61 << _65;
_100 = _65 as isize;
_64.1 = _95.1;
_35.1 = _64.1;
_40.0 = [_25.0,_1,_3,_3,_25.0];
match _94.1 {
0 => bb29,
1 => bb48,
2 => bb47,
3 => bb57,
4 => bb58,
5 => bb59,
340282366920938463463374607431768211420 => bb61,
_ => bb60
}
}
bb57 = {
_33 = _31.0;
_34 = _31.1.5;
_63 = _52;
_41.0 = -_35.0;
_31.0 = [_3,_1,_25.0,_3,_1];
Goto(bb34)
}
bb58 = {
SetDiscriminant(_8, 3);
_40.1.1 = _31.1.1 & _31.1.1;
_67 = !Field::<u8>(Variant(_2, 1), 7);
place!(Field::<[u128; 5]>(Variant(_8, 3), 0)) = _14.0;
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)).0 = -_35.0;
_6.0 = _40.1.3 as f32;
place!(Field::<[isize; 1]>(Variant(_8, 3), 2)) = [_26];
_40.1.3 = _31.1.1 as usize;
_43 = _9;
_8 = Adt47::Variant2 { fld0: _7 };
_40.1.0 = _64.0 - _79;
_14.1 = _40.1;
_6 = _64;
_53 = _1 as isize;
_16 = [_25.0,_3,_3];
_37 = -_62;
_22 = !_75;
_14.1.2 = _41.2 | _40.1.2;
_31.1.5 = _14.1.5 & _40.1.5;
_5 = 40_i8;
_53 = _75 - _15;
place!(Field::<[isize; 1]>(Variant(_2, 1), 1)) = [_26];
SetDiscriminant(_8, 1);
_77 = _23.1;
_76 = [_31.1.2,_31.1.2];
Goto(bb39)
}
bb59 = {
Return()
}
bb60 = {
_40.1.4 = !_31.1.4;
place!(Field::<i64>(Variant(_2, 1), 6)) = 322632845039394806_i64 << _5;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_23.2, _23.1);
_65 = 204_u8 + 223_u8;
_15 = Field::<isize>(Variant(_2, 1), 2);
_41.0 = -_7;
_40.1.3 = !_41.3;
_14.1.5 = Field::<u16>(Variant(_2, 1), 4) as u32;
SetDiscriminant(_8, 0);
_41.5 = _54 as u32;
_66 = _13;
_61 = _37 as i64;
_12.2 = _41.5 as f32;
_6 = _35;
_75 = -Field::<isize>(Variant(_2, 1), 2);
_25.0 = !_1;
Goto(bb35)
}
bb61 = {
_8 = Adt47::Variant0 { fld0: _64 };
_63 = _66;
_100 = _6.0 as isize;
_18 = _59 >> _67;
_40.1.2 = _91.1.2;
_85 = core::ptr::addr_of_mut!(_104);
_14.1.1 = !_40.1.1;
_104 = _21 + _54;
_105 = Field::<(f32, bool)>(Variant(_2, 0), 0).1 > _77;
_60.fld2 = _11;
_82 = _66;
_88 = -_48;
_41.1 = _52 as i16;
_96 = !_97;
_23.2 = _40.1.0 * _64.0;
SetDiscriminant(_2, 3);
_25 = (_1,);
_14.1.3 = _46 as usize;
_31.1.3 = !_91.1.3;
_66 = _63;
SetDiscriminant(_8, 0);
_72 = _64.1;
match _5 {
0 => bb57,
340282366920938463463374607431768211420 => bb63,
_ => bb62
}
}
bb62 = {
_72 = _23.1;
SetDiscriminant(_44, 0);
_14.1.2 = _31.1.2 ^ _40.1.2;
_64 = (_55, _72);
Goto(bb37)
}
bb63 = {
_56 = [_3,_3,_25.0];
_1 = !_25.0;
_14.1.3 = !_91.1.3;
_38 = _78 + _53;
_3 = _103 as u128;
_31.0 = [_3,_3,_3,_3,_3];
_41 = (_23.2, _40.1.1, _40.1.2, _91.1.3, _14.1.4, _32);
_109 = _41.5 as u8;
_94.0 = _66;
_52 = _82;
_14.1.0 = _37 as f32;
_53 = !_78;
_30 = _31.1.1 as isize;
_56 = _29;
_105 = _78 != _50;
_40.1.4 = -_14.1.4;
_12.0 = !_70;
_83.0 = _91.1.2;
_74 = [_91.1.1,_40.1.1,_91.1.1,_91.1.1,_31.1.1,_31.1.1,_40.1.1];
_58 = [_40.1.1];
_59 = -_78;
Goto(bb64)
}
bb64 = {
_100 = _78;
_68 = _31.1.1 as u8;
_113 = _12.0 as f32;
_31.1.4 = _98 as i32;
place!(Field::<[u8; 8]>(Variant(_2, 3), 3)) = [_94.2,_94.2,_67,_94.2,_94.2,_67,_65,_109];
_3 = !_1;
place!(Field::<[u128; 5]>(Variant(_2, 3), 0)) = [_25.0,_25.0,_3,_25.0,_1];
Call(_118 = core::intrinsics::transmute(_41.1), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
_40.1 = (_95.0, _91.1.1, _41.2, _91.1.3, _31.1.4, _31.1.5);
_114 = -_20;
_16 = [_25.0,_1,_1];
_22 = _18 + _38;
_6 = (_64.0, _12.1);
_122 = _75;
_119 = Adt50::Variant1 { fld0: _94,fld1: _63,fld2: _58,fld3: _12,fld4: _91.1.1,fld5: _31.1.4,fld6: _109 };
_66 = _94.0;
_62 = _14.1.3 as f64;
_48 = _20 * (*_85);
_117 = _13;
_94.0 = _13;
_41.0 = _31.1.1 as f32;
_6 = (_89, _105);
_23.1 = _105 ^ _6.1;
_5 = _109 as i8;
_40.1.5 = 9080679564448595523_u64 as u32;
_12 = Field::<(u16, bool, f32)>(Variant(_119, 1), 3);
_6 = _95;
Goto(bb66)
}
bb66 = {
_14.1.0 = _6.0 + _95.0;
_31.1.3 = _41.3 - _40.1.3;
_103 = _61;
_111 = [_100];
_31.1 = _40.1;
match _94.1 {
0 => bb67,
1 => bb68,
2 => bb69,
3 => bb70,
4 => bb71,
340282366920938463463374607431768211420 => bb73,
_ => bb72
}
}
bb67 = {
_40.1 = (_95.0, _91.1.1, _41.2, _91.1.3, _31.1.4, _31.1.5);
_114 = -_20;
_16 = [_25.0,_1,_1];
_22 = _18 + _38;
_6 = (_64.0, _12.1);
_122 = _75;
_119 = Adt50::Variant1 { fld0: _94,fld1: _63,fld2: _58,fld3: _12,fld4: _91.1.1,fld5: _31.1.4,fld6: _109 };
_66 = _94.0;
_62 = _14.1.3 as f64;
_48 = _20 * (*_85);
_117 = _13;
_94.0 = _13;
_41.0 = _31.1.1 as f32;
_6 = (_89, _105);
_23.1 = _105 ^ _6.1;
_5 = _109 as i8;
_40.1.5 = 9080679564448595523_u64 as u32;
_12 = Field::<(u16, bool, f32)>(Variant(_119, 1), 3);
_6 = _95;
Goto(bb66)
}
bb68 = {
_13 = '\u{45333}';
_18 = 140_u8 as isize;
_23 = (_12.0, _6.1, _12.2);
_12.0 = !_23.0;
_27 = [_22];
Goto(bb14)
}
bb69 = {
_33 = _31.0;
_34 = _31.1.5;
_63 = _52;
_41.0 = -_35.0;
_31.0 = [_3,_1,_25.0,_3,_1];
Goto(bb34)
}
bb70 = {
_42 = _48 + _21;
_40.1.5 = !_32;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = _6;
_68 = _65 ^ _65;
_68 = _65;
_37 = _75 as f64;
_44 = Adt47::Variant3 { fld0: _31.0,fld1: _43,fld2: _27,fld3: Field::<[u8; 8]>(Variant(_2, 1), 0) };
_70 = Field::<u16>(Variant(_2, 1), 4);
_26 = _54 as isize;
_62 = _42;
_62 = _12.2 as f64;
_14.1.3 = _41.3;
place!(Field::<[isize; 1]>(Variant(_2, 1), 1)) = [_15];
place!(Field::<[u16; 6]>(Variant(_44, 3), 1)) = [_19,Field::<u16>(Variant(_2, 1), 4),_19,Field::<u16>(Variant(_2, 1), 4),_19,_19];
_54 = _41.5 as f64;
_67 = _23.1 as u8;
_7 = _23.2 * _55;
_50 = _15;
_38 = Field::<i64>(Variant(_2, 1), 6) as isize;
_49 = [_15];
_14.1.2 = -_31.1.2;
_49 = Field::<[isize; 1]>(Variant(_44, 3), 2);
_40 = (_14.0, _41);
_72 = !_23.1;
_51 = [_61,_61,_61,Field::<i64>(Variant(_2, 1), 6)];
place!(Field::<u8>(Variant(_2, 1), 7)) = !_67;
Goto(bb36)
}
bb71 = {
_8 = Adt47::Variant0 { fld0: _64 };
_63 = _66;
_100 = _6.0 as isize;
_18 = _59 >> _67;
_40.1.2 = _91.1.2;
_85 = core::ptr::addr_of_mut!(_104);
_14.1.1 = !_40.1.1;
_104 = _21 + _54;
_105 = Field::<(f32, bool)>(Variant(_2, 0), 0).1 > _77;
_60.fld2 = _11;
_82 = _66;
_88 = -_48;
_41.1 = _52 as i16;
_96 = !_97;
_23.2 = _40.1.0 * _64.0;
SetDiscriminant(_2, 3);
_25 = (_1,);
_14.1.3 = _46 as usize;
_31.1.3 = !_91.1.3;
_66 = _63;
SetDiscriminant(_8, 0);
_72 = _64.1;
match _5 {
0 => bb57,
340282366920938463463374607431768211420 => bb63,
_ => bb62
}
}
bb72 = {
_14.1.5 = _26 as u32;
_31.1.4 = _40.1.4;
_40 = _31;
_14.1.0 = _6.0 + _23.2;
_37 = _20 * _21;
_40.1.0 = 158_u8 as f32;
_41.5 = _31.1.5;
place!(Field::<[u8; 8]>(Variant(_8, 3), 3)) = [204_u8,227_u8,123_u8,211_u8,168_u8,187_u8,182_u8,34_u8];
_31.0 = _40.0;
_48 = -_37;
_14.1.4 = _31.1.4 >> _14.1.3;
place!(Field::<[u8; 8]>(Variant(_44, 3), 3)) = [183_u8,247_u8,188_u8,84_u8,93_u8,105_u8,31_u8,205_u8];
_14.1.2 = _23.1 as i128;
_19 = _12.0 + _23.0;
_35.0 = _23.2;
_27 = Field::<[isize; 1]>(Variant(_44, 3), 2);
_42 = -_37;
_31.1.5 = _41.3 as u32;
Goto(bb28)
}
bb73 = {
_124 = [_1,_3,_3,_25.0,_25.0];
_79 = _6.0 + _64.0;
_72 = !_12.1;
_29 = [_3,_1,_25.0];
_43 = [_12.0,_23.0,_19,_70,_23.0,Field::<(u16, bool, f32)>(Variant(_119, 1), 3).0];
_75 = -_59;
_80 = [_31.1.1,_41.1,_31.1.1,_91.1.1,_40.1.1,_41.1,_31.1.1];
_36 = _117;
_107 = Field::<(char, i8, u8)>(Variant(_119, 1), 0).0;
_12 = (_19, _72, Field::<(u16, bool, f32)>(Variant(_119, 1), 3).2);
_64.0 = -_113;
_34 = !_41.5;
_94.1 = _5;
_105 = _35.1;
(*_85) = _42 * _20;
_128 = [_61,_103,_103,_61];
_95.0 = -_10;
_109 = _67 * _65;
place!(Field::<(u16, bool, f32)>(Variant(_119, 1), 3)).0 = _23.0 ^ _19;
_35 = _64;
_14.1.4 = 12320289079403323485_u64 as i32;
_41.5 = !_34;
_38 = _100;
_91.1 = (_14.1.0, Field::<i16>(Variant(_119, 1), 4), _40.1.2, _14.1.3, _31.1.4, _41.5);
_54 = _20;
SetDiscriminant(_119, 0);
Goto(bb74)
}
bb74 = {
_12.2 = _79 * _23.2;
_39 = core::ptr::addr_of!(_130);
Goto(bb75)
}
bb75 = {
_65 = _94.2;
_38 = _97;
_89 = _40.1.0;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_14.1.0, _12.1);
(*_39).1 = _59 + _78;
_67 = _109;
_119 = Adt50::Variant1 { fld0: _94,fld1: _117,fld2: _58,fld3: _23,fld4: _14.1.1,fld5: _40.1.4,fld6: _67 };
_92 = _31.1.2 as isize;
_79 = _40.1.0 + _89;
_105 = _53 != _97;
_1 = _3 | _3;
_14 = (_31.0, _31.1);
_82 = _63;
Call((*_39) = fn16(_23.2, _23.2, _91.1.4, _114, _83, _18, _31.1, _91, _15, _91.1.0, _40.1.2, _88, _41.2, _41.5, _94.1, _40), ReturnTo(bb76), UnwindUnreachable())
}
bb76 = {
_111 = _49;
_38 = (*_39).1 & _18;
_130 = (Field::<i16>(Variant(_119, 1), 4), _96);
_91.1.2 = _1 as i128;
_91.1.3 = _31.1.3;
_91.1.2 = _31.1.2;
_111 = [_97];
_29 = [_3,_1,_1];
_115 = Field::<[i16; 1]>(Variant(_119, 1), 2);
_135 = -_94.1;
_40.0 = [_3,_3,_25.0,_1,_25.0];
_78 = _93 | _75;
_134.1 = (*_39).1 | _38;
_33 = _31.0;
_73 = _70 | _19;
_109 = _67 >> _31.1.2;
_21 = _104;
(*_39).0 = Field::<i16>(Variant(_119, 1), 4);
_118 = _58;
_44 = _8;
(*_39).1 = -_15;
_88 = _114 + _54;
_66 = _63;
_41.1 = (*_39).0 + (*_39).0;
_41 = (_23.2, _31.1.1, _40.1.2, _14.1.3, Field::<i32>(Variant(_119, 1), 5), _32);
_121 = (*_39).1;
Goto(bb77)
}
bb77 = {
_40.1.1 = _14.1.1;
_72 = !_98;
_122 = _75 - (*_39).1;
_16 = _29;
_85 = core::ptr::addr_of_mut!(_120);
_56 = _29;
_6.1 = Field::<(f32, bool)>(Variant(_8, 0), 0).1;
_35.1 = _122 > _53;
place!(Field::<(char, i8, u8)>(Variant(_119, 1), 0)).0 = _36;
_40.1.4 = _14.1.4 * _14.1.4;
_72 = _35.1;
_74 = [_91.1.1,(*_39).0,_91.1.1,(*_39).0,_130.0,Field::<i16>(Variant(_119, 1), 4),_130.0];
_94.0 = _63;
Goto(bb78)
}
bb78 = {
_7 = -_12.2;
_6.1 = !_77;
_48 = _92 as f64;
_15 = Field::<i32>(Variant(_119, 1), 5) as isize;
_120 = Field::<(u16, bool, f32)>(Variant(_119, 1), 3).0 as f64;
place!(Field::<[isize; 1]>(Variant(_2, 3), 2)) = [_59];
_66 = _117;
_91.1.4 = _14.1.4 + _14.1.4;
_134 = _130;
_57 = Adt53::Variant0 { fld0: _94.2,fld1: _31.1.3,fld2: _130,fld3: _91.1.5,fld4: _23 };
_23.0 = Field::<(u16, bool, f32)>(Variant(_57, 0), 4).0;
_40.0 = _33;
Goto(bb79)
}
bb79 = {
_95.0 = -_6.0;
_57 = Adt53::Variant0 { fld0: _109,fld1: _91.1.3,fld2: _130,fld3: _91.1.5,fld4: _12 };
_108 = _65 >= Field::<u8>(Variant(_119, 1), 6);
_130.1 = _134.1 * _75;
SetDiscriminant(_44, 0);
_4 = _80;
place!(Field::<[u16; 6]>(Variant(_2, 3), 1)) = _43;
(*_39) = _134;
_120 = _86 * _114;
place!(Field::<[u8; 8]>(Variant(_2, 3), 3)) = _17;
_94.1 = -_135;
_46 = _22 >> Field::<u32>(Variant(_57, 0), 3);
_95.0 = -_12.2;
place!(Field::<(u16, bool, f32)>(Variant(_57, 0), 4)).1 = !Field::<(f32, bool)>(Variant(_8, 0), 0).1;
_95.1 = Field::<(f32, bool)>(Variant(_8, 0), 0).1 ^ _35.1;
_4 = [Field::<(i16, isize)>(Variant(_57, 0), 2).0,Field::<i16>(Variant(_119, 1), 4),_40.1.1,Field::<i16>(Variant(_119, 1), 4),_134.0,(*_39).0,(*_39).0];
_94.0 = _36;
SetDiscriminant(_8, 3);
_141 = Field::<[i16; 1]>(Variant(_119, 1), 2);
SetDiscriminant(_57, 0);
_41 = _40.1;
SetDiscriminant(_119, 0);
_3 = _92 as u128;
_2 = Adt47::Variant2 { fld0: _99 };
_101 = -_48;
_133 = _14.0;
_123 = [_31.1.3,_14.1.3,_40.1.3,_14.1.3];
Goto(bb80)
}
bb80 = {
_118 = [_130.0];
_31.1.5 = !_32;
place!(Field::<(f32, bool)>(Variant(_44, 0), 0)) = _95;
_23 = (_12.0, _108, Field::<(f32, bool)>(Variant(_44, 0), 0).0);
place!(Field::<[u16; 6]>(Variant(_8, 3), 1)) = [_70,_70,_19,_73,_73,_73];
_146.5 = !_31.1.5;
_41.1 = -_130.0;
_137 = _44;
_41.2 = _114 as i128;
_91.0 = [_3,_3,_3,_3,_3];
_119 = Adt50::Variant0 { fld0: _51,fld1: _76 };
_88 = -(*_85);
place!(Field::<(f32, bool)>(Variant(_137, 0), 0)).0 = -_95.0;
_146.1 = -_130.0;
_93 = (*_39).1;
_57 = Adt53::Variant0 { fld0: _65,fld1: _41.3,fld2: _134,fld3: _32,fld4: _12 };
_42 = _120;
place!(Field::<(i16, isize)>(Variant(_57, 0), 2)) = (*_39);
_138 = (*_85) - (*_85);
_146 = (_40.1.0, _134.0, _83.0, _41.3, _91.1.4, _31.1.5);
_40.1.1 = _130.0 | _130.0;
_143 = _46;
_41 = (Field::<(u16, bool, f32)>(Variant(_57, 0), 4).2, (*_39).0, _146.2, _91.1.3, _91.1.4, _32);
_56 = _29;
_105 = _95.1;
SetDiscriminant(_57, 1);
Call(_41 = fn17(_3, _97, _72), ReturnTo(bb81), UnwindUnreachable())
}
bb81 = {
_8 = _44;
_40.0 = [_3,_3,_3,_3,_25.0];
_13 = _82;
_116 = [_3,_3,_3,_3,_25.0];
Goto(bb82)
}
bb82 = {
_120 = _138;
_12.0 = !_23.0;
_56 = [_3,_1,_3];
_85 = core::ptr::addr_of_mut!(_104);
_145 = -(*_39).1;
_64 = (_113, _6.1);
_41.0 = -Field::<(f32, bool)>(Variant(_137, 0), 0).0;
RET = core::ptr::addr_of_mut!(place!(Field::<*mut char>(Variant(_57, 1), 5)));
_31.0 = _133;
_23.1 = !Field::<(f32, bool)>(Variant(_137, 0), 0).1;
_91.1.4 = _41.5 as i32;
_12.2 = _40.1.0;
_95.0 = _91.1.0 * Field::<(f32, bool)>(Variant(_8, 0), 0).0;
_23.1 = !Field::<(f32, bool)>(Variant(_137, 0), 0).1;
_149 = Adt50::Variant0 { fld0: _51,fld1: Field::<[i128; 2]>(Variant(_119, 0), 1) };
(*_85) = _101;
SetDiscriminant(_2, 0);
_129.0 = core::ptr::addr_of_mut!((*RET));
_91.1 = _31.1;
_75 = _93 | (*_39).1;
place!(Field::<(f32, bool)>(Variant(_137, 0), 0)).1 = _64.1;
Goto(bb83)
}
bb83 = {
Call(_152 = dump_var(11_usize, 115_usize, Move(_115), 36_usize, Move(_36), 134_usize, Move(_134), 130_usize, Move(_130)), ReturnTo(bb84), UnwindUnreachable())
}
bb84 = {
Call(_152 = dump_var(11_usize, 76_usize, Move(_76), 27_usize, Move(_27), 123_usize, Move(_123), 66_usize, Move(_66)), ReturnTo(bb85), UnwindUnreachable())
}
bb85 = {
Call(_152 = dump_var(11_usize, 3_usize, Move(_3), 49_usize, Move(_49), 5_usize, Move(_5), 116_usize, Move(_116)), ReturnTo(bb86), UnwindUnreachable())
}
bb86 = {
Call(_152 = dump_var(11_usize, 72_usize, Move(_72), 100_usize, Move(_100), 145_usize, Move(_145), 46_usize, Move(_46)), ReturnTo(bb87), UnwindUnreachable())
}
bb87 = {
Call(_152 = dump_var(11_usize, 18_usize, Move(_18), 143_usize, Move(_143), 78_usize, Move(_78), 133_usize, Move(_133)), ReturnTo(bb88), UnwindUnreachable())
}
bb88 = {
Call(_152 = dump_var(11_usize, 56_usize, Move(_56), 92_usize, Move(_92), 11_usize, Move(_11), 34_usize, Move(_34)), ReturnTo(bb89), UnwindUnreachable())
}
bb89 = {
Call(_152 = dump_var(11_usize, 93_usize, Move(_93), 141_usize, Move(_141), 124_usize, Move(_124), 121_usize, Move(_121)), ReturnTo(bb90), UnwindUnreachable())
}
bb90 = {
Call(_152 = dump_var(11_usize, 135_usize, Move(_135), 59_usize, Move(_59), 19_usize, Move(_19), 96_usize, Move(_96)), ReturnTo(bb91), UnwindUnreachable())
}
bb91 = {
Call(_152 = dump_var(11_usize, 33_usize, Move(_33), 117_usize, Move(_117), 4_usize, Move(_4), 73_usize, Move(_73)), ReturnTo(bb92), UnwindUnreachable())
}
bb92 = {
Call(_152 = dump_var(11_usize, 16_usize, Move(_16), 52_usize, Move(_52), 30_usize, Move(_30), 118_usize, Move(_118)), ReturnTo(bb93), UnwindUnreachable())
}
bb93 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: i128,mut _2: i128,mut _3: u16,mut _4: u16,mut _5: i128,mut _6: Adt47,mut _7: Adt47,mut _8: i128,mut _9: (f32, bool)) -> f32 {
mir! {
type RET = f32;
let _10: [u16; 6];
let _11: i8;
let _12: [u128; 5];
let _13: f32;
let _14: u32;
let _15: bool;
let _16: [i16; 7];
let _17: Adt50;
let _18: isize;
let _19: f64;
let _20: isize;
let _21: [u128; 5];
let _22: ();
let _23: ();
{
_4 = _3;
_5 = _1 & _1;
_7 = _6;
_4 = !_3;
_9 = (Field::<f32>(Variant(_7, 2), 0), true);
RET = (-90_i8) as f32;
place!(Field::<f32>(Variant(_6, 2), 0)) = _9.0;
_10 = [_4,_4,_3,_4,_4,_3];
RET = 18048974755835674112_u64 as f32;
place!(Field::<f32>(Variant(_7, 2), 0)) = _9.0;
place!(Field::<f32>(Variant(_7, 2), 0)) = Field::<f32>(Variant(_6, 2), 0) + _9.0;
SetDiscriminant(_7, 2);
_13 = _9.0 * _9.0;
SetDiscriminant(_6, 3);
RET = (-2719868255221269549_i64) as f32;
_5 = 303_i16 as i128;
_7 = Adt47::Variant2 { fld0: _13 };
_8 = 9223372036854775807_isize as i128;
Goto(bb1)
}
bb1 = {
SetDiscriminant(_7, 0);
_10 = [_4,_3,_4,_4,_3,_3];
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
4073919799938168104646725232542843194 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
place!(Field::<[u8; 8]>(Variant(_6, 3), 3)) = [31_u8,169_u8,18_u8,212_u8,173_u8,17_u8,77_u8,3_u8];
place!(Field::<[u16; 6]>(Variant(_6, 3), 1)) = [_4,_3,_3,_3,_3,_4];
_8 = _2 | _2;
_13 = _9.0;
_15 = _9.1;
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)).0 = 169995705609036388634389633108525834785_u128 as f32;
_9.0 = -Field::<(f32, bool)>(Variant(_7, 0), 0).0;
_12 = [142116064782845558815597639965644524462_u128,217180804760559279817072241241462734288_u128,78135062041463025488514771563496848333_u128,266101044942644614608859256021684418194_u128,202930214523528822600173343370473408536_u128];
_9.0 = _13;
_4 = !_3;
_3 = _4 + _4;
_11 = _9.0 as i8;
match _1 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
4073919799938168104646725232542843194 => bb16,
_ => bb15
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
SetDiscriminant(_7, 0);
_10 = [_4,_3,_4,_4,_3,_3];
match _1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
4073919799938168104646725232542843194 => bb9,
_ => bb8
}
}
bb16 = {
_16 = [13601_i16,17866_i16,18045_i16,(-20780_i16),19736_i16,21494_i16,5816_i16];
place!(Field::<[u16; 6]>(Variant(_6, 3), 1)) = _10;
_5 = _13 as i128;
place!(Field::<[isize; 1]>(Variant(_6, 3), 2)) = [42_isize];
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)) = (_13, _9.1);
_14 = !1781859280_u32;
RET = _13;
place!(Field::<[u128; 5]>(Variant(_6, 3), 0)) = [272786743774683594153162012374362400676_u128,291835850828408040051035182278511961953_u128,58516159439764399046485490592755571317_u128,50234102737030212488594631326723445710_u128,278206682107620424661453181353775801229_u128];
_16 = [(-28132_i16),(-11542_i16),(-6049_i16),(-20354_i16),(-28732_i16),26191_i16,(-18082_i16)];
_11 = (-26_i8);
RET = Field::<(f32, bool)>(Variant(_7, 0), 0).0 * Field::<(f32, bool)>(Variant(_7, 0), 0).0;
_20 = '\u{ca910}' as isize;
_10 = Field::<[u16; 6]>(Variant(_6, 3), 1);
RET = -_13;
_5 = _1 - _2;
_2 = 12822677790133810292_u64 as i128;
_18 = !_20;
_12 = [196100692188929682035754271357521370326_u128,31493641708605594192103663168943290909_u128,308432934572502796578227266247522278926_u128,186469214104716042810026840864554933474_u128,255339855951834791940952293886978921976_u128];
Goto(bb17)
}
bb17 = {
Call(_22 = dump_var(12_usize, 15_usize, Move(_15), 8_usize, Move(_8), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_22 = dump_var(12_usize, 3_usize, Move(_3), 14_usize, Move(_14), 11_usize, Move(_11), 23_usize, _23), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: Adt47,mut _2: u16,mut _3: (u16, bool, f32),mut _4: (u16, bool, f32),mut _5: bool,mut _6: i128,mut _7: Adt47,mut _8: Adt47,mut _9: usize,mut _10: f32,mut _11: Adt47) -> i16 {
mir! {
type RET = i16;
let _12: u64;
let _13: u128;
let _14: *mut i8;
let _15: (i64, u8, *mut i8);
let _16: [i64; 4];
let _17: ((*mut *mut char,), i32, i16);
let _18: Adt63;
let _19: char;
let _20: isize;
let _21: [i16; 1];
let _22: Adt55;
let _23: i64;
let _24: u32;
let _25: [u16; 6];
let _26: f64;
let _27: f32;
let _28: u32;
let _29: i128;
let _30: (u16, bool, f32);
let _31: [i16; 7];
let _32: [i16; 1];
let _33: [i16; 7];
let _34: ();
let _35: ();
{
_9 = !9438306884563955045_usize;
_3.0 = !_2;
_4 = (_3.0, Field::<(f32, bool)>(Variant(_1, 0), 0).1, Field::<(f32, bool)>(Variant(_7, 0), 0).0);
RET = (-30869_i16) * (-29452_i16);
_3.1 = !_5;
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)) = (_10, Field::<(f32, bool)>(Variant(_1, 0), 0).1);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (Field::<(f32, bool)>(Variant(_7, 0), 0).0, _3.1);
_9 = '\u{c768b}' as usize;
_2 = !_3.0;
_4.2 = _6 as f32;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).1 = _10 >= _10;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)) = (Field::<(f32, bool)>(Variant(_8, 0), 0).0, Field::<(f32, bool)>(Variant(_11, 0), 0).1);
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)) = (_10, Field::<(f32, bool)>(Variant(_8, 0), 0).1);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = -Field::<(f32, bool)>(Variant(_11, 0), 0).0;
Goto(bb1)
}
bb1 = {
_4.2 = Field::<(f32, bool)>(Variant(_8, 0), 0).0;
_10 = Field::<(f32, bool)>(Variant(_1, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_1 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_11, 0), 0) };
Goto(bb2)
}
bb2 = {
_4 = _3;
_13 = 316397569680625108689656429408826006902_u128 << _3.0;
_16 = [(-3835256899657184943_i64),(-1486064526200663027_i64),(-4961524075107011812_i64),7305856435570561556_i64];
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = _4.2 - _10;
_16 = [6318959641559736872_i64,2934588142969056069_i64,(-6743076466321614095_i64),(-9168586699224725531_i64)];
_18 = Adt63::Variant0 { fld0: _6 };
_8 = _7;
RET = -(-23593_i16);
place!(Field::<i128>(Variant(_18, 0), 0)) = _13 as i128;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_3.2, Field::<(f32, bool)>(Variant(_7, 0), 0).1);
SetDiscriminant(_18, 3);
_12 = Field::<(f32, bool)>(Variant(_8, 0), 0).1 as u64;
RET = (-14_isize) as i16;
_4.1 = _5;
_8 = Adt47::Variant2 { fld0: _3.2 };
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)).0 = -Field::<(f32, bool)>(Variant(_1, 0), 0).0;
_17.1 = (-966117451_i32);
_3.2 = Field::<(f32, bool)>(Variant(_1, 0), 0).0 + Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_3 = (_2, Field::<(f32, bool)>(Variant(_1, 0), 0).1, Field::<(f32, bool)>(Variant(_11, 0), 0).0);
_17.2 = -RET;
_3 = _4;
_5 = !Field::<(f32, bool)>(Variant(_1, 0), 0).1;
SetDiscriminant(_7, 2);
_20 = 98_isize & 9223372036854775807_isize;
place!(Field::<[i64; 4]>(Variant(_18, 3), 6)) = _16;
place!(Field::<[u8; 8]>(Variant(_18, 3), 2)) = [32_u8,198_u8,156_u8,191_u8,147_u8,53_u8,140_u8,255_u8];
Goto(bb3)
}
bb3 = {
_7 = _11;
_13 = !92082267609855767263098661095872262180_u128;
_13 = 222363440792300410051985836214425237643_u128 | 208142149696852686959519901751504308981_u128;
RET = (-32_i8) as i16;
place!(Field::<[i64; 4]>(Variant(_18, 3), 6)) = [1098651009402131718_i64,23828922033151414_i64,2358192092521253032_i64,(-2879392769112991579_i64)];
_3 = (_4.0, _4.1, _4.2);
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)).0 = Field::<f32>(Variant(_8, 2), 0) * _3.2;
SetDiscriminant(_1, 3);
place!(Field::<Adt47>(Variant(_18, 3), 1)) = Adt47::Variant2 { fld0: Field::<(f32, bool)>(Variant(_11, 0), 0).0 };
_21 = [RET];
_5 = _4.1 & _3.1;
place!(Field::<f32>(Variant(_8, 2), 0)) = -Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_15.0 = _4.1 as i64;
SetDiscriminant(_8, 0);
_13 = _3.1 as u128;
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_11, 0), 0).1;
_3.2 = -Field::<(f32, bool)>(Variant(_7, 0), 0).0;
_2 = _3.0 >> _17.1;
SetDiscriminant(Field::<Adt47>(Variant(_18, 3), 1), 1);
_7 = _11;
_12 = !1464560101312404797_u64;
_13 = _20 as u128;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_4.2, _3.1);
_2 = _4.0 ^ _4.0;
place!(Field::<u8>(Variant(place!(Field::<Adt47>(Variant(_18, 3), 1)), 1), 7)) = _2 as u8;
_15.0 = 8055863770193606041_i64;
match _17.1 {
340282366920938463463374607430802094005 => bb4,
_ => bb1
}
}
bb4 = {
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)).1 = !_4.1;
place!(Field::<[i16; 7]>(Variant(_18, 3), 3)) = [_17.2,RET,RET,_17.2,_17.2,RET,RET];
RET = _12 as i16;
_15.0 = _2 as i64;
place!(Field::<[u8; 8]>(Variant(_1, 3), 3)) = [Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7)];
_4.2 = -Field::<(f32, bool)>(Variant(_8, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = Field::<(f32, bool)>(Variant(_7, 0), 0).0;
place!(Field::<[isize; 1]>(Variant(_1, 3), 2)) = [_20];
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)) = (Field::<(f32, bool)>(Variant(_8, 0), 0).0, Field::<(f32, bool)>(Variant(_11, 0), 0).1);
match _17.1 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
340282366920938463463374607430802094005 => bb10,
_ => bb9
}
}
bb5 = {
_7 = _11;
_13 = !92082267609855767263098661095872262180_u128;
_13 = 222363440792300410051985836214425237643_u128 | 208142149696852686959519901751504308981_u128;
RET = (-32_i8) as i16;
place!(Field::<[i64; 4]>(Variant(_18, 3), 6)) = [1098651009402131718_i64,23828922033151414_i64,2358192092521253032_i64,(-2879392769112991579_i64)];
_3 = (_4.0, _4.1, _4.2);
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)).0 = Field::<f32>(Variant(_8, 2), 0) * _3.2;
SetDiscriminant(_1, 3);
place!(Field::<Adt47>(Variant(_18, 3), 1)) = Adt47::Variant2 { fld0: Field::<(f32, bool)>(Variant(_11, 0), 0).0 };
_21 = [RET];
_5 = _4.1 & _3.1;
place!(Field::<f32>(Variant(_8, 2), 0)) = -Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_15.0 = _4.1 as i64;
SetDiscriminant(_8, 0);
_13 = _3.1 as u128;
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_11, 0), 0).1;
_3.2 = -Field::<(f32, bool)>(Variant(_7, 0), 0).0;
_2 = _3.0 >> _17.1;
SetDiscriminant(Field::<Adt47>(Variant(_18, 3), 1), 1);
_7 = _11;
_12 = !1464560101312404797_u64;
_13 = _20 as u128;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_4.2, _3.1);
_2 = _4.0 ^ _4.0;
place!(Field::<u8>(Variant(place!(Field::<Adt47>(Variant(_18, 3), 1)), 1), 7)) = _2 as u8;
_15.0 = 8055863770193606041_i64;
match _17.1 {
340282366920938463463374607430802094005 => bb4,
_ => bb1
}
}
bb6 = {
_4 = _3;
_13 = 316397569680625108689656429408826006902_u128 << _3.0;
_16 = [(-3835256899657184943_i64),(-1486064526200663027_i64),(-4961524075107011812_i64),7305856435570561556_i64];
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).0 = _4.2 - _10;
_16 = [6318959641559736872_i64,2934588142969056069_i64,(-6743076466321614095_i64),(-9168586699224725531_i64)];
_18 = Adt63::Variant0 { fld0: _6 };
_8 = _7;
RET = -(-23593_i16);
place!(Field::<i128>(Variant(_18, 0), 0)) = _13 as i128;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = (_3.2, Field::<(f32, bool)>(Variant(_7, 0), 0).1);
SetDiscriminant(_18, 3);
_12 = Field::<(f32, bool)>(Variant(_8, 0), 0).1 as u64;
RET = (-14_isize) as i16;
_4.1 = _5;
_8 = Adt47::Variant2 { fld0: _3.2 };
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)).0 = -Field::<(f32, bool)>(Variant(_1, 0), 0).0;
_17.1 = (-966117451_i32);
_3.2 = Field::<(f32, bool)>(Variant(_1, 0), 0).0 + Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_3 = (_2, Field::<(f32, bool)>(Variant(_1, 0), 0).1, Field::<(f32, bool)>(Variant(_11, 0), 0).0);
_17.2 = -RET;
_3 = _4;
_5 = !Field::<(f32, bool)>(Variant(_1, 0), 0).1;
SetDiscriminant(_7, 2);
_20 = 98_isize & 9223372036854775807_isize;
place!(Field::<[i64; 4]>(Variant(_18, 3), 6)) = _16;
place!(Field::<[u8; 8]>(Variant(_18, 3), 2)) = [32_u8,198_u8,156_u8,191_u8,147_u8,53_u8,140_u8,255_u8];
Goto(bb3)
}
bb7 = {
_4.2 = Field::<(f32, bool)>(Variant(_8, 0), 0).0;
_10 = Field::<(f32, bool)>(Variant(_1, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_1, 0), 0)).0 = Field::<(f32, bool)>(Variant(_11, 0), 0).0;
_1 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_11, 0), 0) };
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11 = _8;
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).1 = _4.1 & Field::<(f32, bool)>(Variant(_7, 0), 0).1;
place!(Field::<Adt58>(Variant(_18, 3), 4)).fld2 = [_9,_9,_9,_9];
place!(Field::<[u8; 8]>(Variant(_18, 3), 2)) = [Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7)];
place!(Field::<i64>(Variant(place!(Field::<Adt47>(Variant(_18, 3), 1)), 1), 6)) = _15.0;
_17.2 = _13 as i16;
place!(Field::<[u16; 6]>(Variant(_1, 3), 1)) = [_3.0,_2,_2,_3.0,_2,_2];
_19 = '\u{59d0f}';
_17.1 = -(-1343678396_i32);
place!(Field::<[isize; 1]>(Variant(place!(Field::<Adt47>(Variant(_18, 3), 1)), 1), 1)) = Field::<[isize; 1]>(Variant(_1, 3), 2);
_3 = (_2, Field::<(f32, bool)>(Variant(_8, 0), 0).1, _10);
_9 = Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7) as usize;
_23 = Field::<i64>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 6);
SetDiscriminant(_7, 0);
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)).1 = _5;
Goto(bb11)
}
bb11 = {
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)) = (_10, Field::<(f32, bool)>(Variant(_8, 0), 0).1);
_3.0 = _2;
_3.1 = Field::<(f32, bool)>(Variant(_7, 0), 0).1;
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)).0 = -Field::<(f32, bool)>(Variant(_8, 0), 0).0;
place!(Field::<(f32, bool)>(Variant(_11, 0), 0)) = Field::<(f32, bool)>(Variant(_8, 0), 0);
place!(Field::<isize>(Variant(place!(Field::<Adt47>(Variant(_18, 3), 1)), 1), 2)) = 28_i8 as isize;
_12 = !9608533860680967677_u64;
_19 = '\u{84ee7}';
place!(Field::<[u8; 8]>(Variant(_18, 3), 2)) = [Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7)];
place!(Field::<[u8; 8]>(Variant(place!(Field::<Adt47>(Variant(_18, 3), 1)), 1), 0)) = [Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7)];
_30.2 = _3.2;
place!(Field::<[i16; 7]>(Variant(_18, 3), 3)) = [RET,RET,_17.2,_17.2,_17.2,_17.2,RET];
_17.1 = _12 as i32;
SetDiscriminant(_7, 1);
Goto(bb12)
}
bb12 = {
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7)];
Call(_10 = fn14(Field::<[u8; 8]>(Variant(_7, 1), 0), Field::<[u16; 6]>(Variant(_1, 3), 1), Field::<[u8; 8]>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 0), _30.2, _3, Field::<i64>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 6), _3.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
place!(Field::<[u8; 8]>(Variant(_18, 3), 2)) = [Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7),Field::<u8>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 1), 7)];
place!(Field::<(f32, bool)>(Variant(_8, 0), 0)) = Field::<(f32, bool)>(Variant(_11, 0), 0);
_4.1 = _5;
_30.1 = _9 > _9;
_25 = [_4.0,_3.0,_3.0,_3.0,_3.0,_3.0];
place!(Field::<Adt47>(Variant(_18, 3), 1)) = Adt47::Variant2 { fld0: _4.2 };
_17.1 = !(-87529455_i32);
_33 = [_17.2,_17.2,_17.2,_17.2,RET,_17.2,_17.2];
_3 = (_2, _30.1, Field::<f32>(Variant(Field::<Adt47>(Variant(_18, 3), 1), 2), 0));
_28 = 1596804246_u32;
_13 = 99_u8 as u128;
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = [_20];
_11 = Adt47::Variant0 { fld0: Field::<(f32, bool)>(Variant(_8, 0), 0) };
place!(Field::<[u8; 8]>(Variant(_18, 3), 2)) = Field::<[u8; 8]>(Variant(_1, 3), 3);
_15.1 = 238_u8;
match _15.1 {
238 => bb14,
_ => bb7
}
}
bb14 = {
_5 = _30.1 != _3.1;
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [_15.1,_15.1,_15.1,_15.1,_15.1,_15.1,_15.1,_15.1];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(13_usize, 16_usize, Move(_16), 28_usize, Move(_28), 19_usize, Move(_19), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(13_usize, 21_usize, Move(_21), 6_usize, Move(_6), 2_usize, Move(_2), 35_usize, _35), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [u8; 8],mut _2: [u16; 6],mut _3: [u8; 8],mut _4: f32,mut _5: (u16, bool, f32),mut _6: i64,mut _7: u16) -> f32 {
mir! {
type RET = f32;
let _8: bool;
let _9: f64;
let _10: (u16, bool, f32);
let _11: bool;
let _12: [i128; 2];
let _13: i128;
let _14: u16;
let _15: u8;
let _16: f32;
let _17: isize;
let _18: [i16; 7];
let _19: (i16, isize);
let _20: Adt53;
let _21: isize;
let _22: isize;
let _23: *mut char;
let _24: isize;
let _25: [u8; 8];
let _26: (f32, i16, i128, usize, i32, u32);
let _27: [i16; 7];
let _28: [i16; 7];
let _29: ();
let _30: ();
{
_5.0 = _7;
RET = _4;
_2 = [_7,_5.0,_5.0,_7,_7,_7];
_4 = _5.2;
_5 = (_7, false, RET);
RET = _4;
_5.2 = RET * RET;
_5 = (_7, true, _4);
_7 = (-113078726782794673003887699312196900998_i128) as u16;
_10 = (_7, _5.1, _5.2);
_5.1 = _10.1 >= _10.1;
RET = _10.2 - _4;
Goto(bb1)
}
bb1 = {
_5.1 = _5.0 >= _7;
_6 = 9000415717583122359_i64;
_8 = _10.1;
_5 = (_10.0, _8, _4);
_2 = [_5.0,_7,_5.0,_5.0,_5.0,_7];
_10.1 = !_8;
_5 = (_10.0, _8, RET);
_10.2 = _5.2 + _4;
_5 = (_10.0, _10.1, _10.2);
_5.2 = RET + _10.2;
_11 = _5.2 < _5.2;
_10.2 = _5.2 * _5.2;
_9 = (-46_i8) as f64;
_12 = [(-102816406029637643100943856311406968261_i128),142580870375224070895347626435074496487_i128];
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9000415717583122359 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = [_10.0,_10.0,_10.0,_7,_7,_10.0];
_10.2 = _5.2;
_10.0 = _10.2 as u16;
_2 = [_10.0,_10.0,_10.0,_10.0,_10.0,_10.0];
_8 = RET < _5.2;
_8 = _5.1 | _10.1;
_12 = [(-108279310347357141716255066037568440269_i128),69045721677716076708434417297866671307_i128];
_12 = [(-77631218377574164716412651005895811587_i128),(-107827545787954446883519800194321849422_i128)];
_5.0 = !_10.0;
_10.2 = _5.2;
_14 = !_5.0;
_9 = _6 as f64;
_3 = _1;
_13 = 117264530950237560904549245446030107840_u128 as i128;
_11 = _5.1 ^ _8;
_17 = 73_isize;
_10.0 = 21_i8 as u16;
_14 = (-30822_i16) as u16;
match _6 {
0 => bb1,
1 => bb8,
2 => bb3,
9000415717583122359 => bb10,
_ => bb4
}
}
bb10 = {
_10 = (_5.0, _11, RET);
_10.1 = _5.1;
_14 = _5.0 + _10.0;
_10.1 = _8 >= _11;
_9 = 23_i8 as f64;
_10 = (_14, _11, _5.2);
_10 = (_5.0, _8, _5.2);
_10.1 = !_8;
_5.0 = !_14;
_16 = -_10.2;
_18 = [10241_i16,5393_i16,19018_i16,3062_i16,(-13403_i16),(-31516_i16),(-27587_i16)];
_19.0 = '\u{94d79}' as i16;
_5.1 = !_10.1;
_19.0 = 67_u8 as i16;
_19.1 = _17;
_6 = -5616555331045155977_i64;
_16 = _19.1 as f32;
_14 = _5.0;
_22 = -_17;
_10.1 = _8;
_3 = [106_u8,104_u8,108_u8,227_u8,41_u8,130_u8,43_u8,224_u8];
_26.1 = !_19.0;
Goto(bb11)
}
bb11 = {
_15 = 212_u8;
_26.3 = 8545846830162455434_usize * 3_usize;
_10 = (_5.0, _11, _5.2);
_26.2 = !_13;
_19.1 = _9 as isize;
_26.1 = _19.0 * _19.0;
_26.5 = 1942881111_u32;
_19.0 = _26.1;
_26.5 = 2485819754_u32;
_26.4 = -(-281270034_i32);
_28 = [_19.0,_19.0,_19.0,_19.0,_26.1,_19.0,_26.1];
_19.1 = -_17;
_25 = [_15,_15,_15,_15,_15,_15,_15,_15];
_16 = -_5.2;
_20 = Adt53::Variant0 { fld0: _15,fld1: _26.3,fld2: _19,fld3: _26.5,fld4: _10 };
_26.1 = !Field::<(i16, isize)>(Variant(_20, 0), 2).0;
_13 = !_26.2;
_11 = !_10.1;
_26.0 = Field::<usize>(Variant(_20, 0), 1) as f32;
match _26.5 {
0 => bb9,
1 => bb4,
2485819754 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_2 = [_5.0,_14,Field::<(u16, bool, f32)>(Variant(_20, 0), 4).0,_10.0,_5.0,_10.0];
_20 = Adt53::Variant0 { fld0: _15,fld1: _26.3,fld2: _19,fld3: _26.5,fld4: _10 };
_20 = Adt53::Variant0 { fld0: _15,fld1: _26.3,fld2: _19,fld3: _26.5,fld4: _10 };
_19.0 = 52_i8 as i16;
_2 = [_14,_5.0,_5.0,Field::<(u16, bool, f32)>(Variant(_20, 0), 4).0,_14,_14];
place!(Field::<(i16, isize)>(Variant(_20, 0), 2)).0 = !_26.1;
_19.1 = -_17;
_10.2 = _13 as f32;
_7 = Field::<(u16, bool, f32)>(Variant(_20, 0), 4).0;
RET = _5.2 * _5.2;
Goto(bb14)
}
bb14 = {
Call(_29 = dump_var(14_usize, 7_usize, Move(_7), 2_usize, Move(_2), 11_usize, Move(_11), 3_usize, Move(_3)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_29 = dump_var(14_usize, 22_usize, Move(_22), 14_usize, Move(_14), 19_usize, Move(_19), 17_usize, Move(_17)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: (f32, bool),mut _2: Adt47,mut _3: Adt47,mut _4: f32,mut _5: (f32, bool),mut _6: (f32, bool),mut _7: bool,mut _8: (f32, i16, i128, usize, i32, u32),mut _9: isize) -> [i16; 1] {
mir! {
type RET = [i16; 1];
let _10: bool;
let _11: ();
let _12: ();
{
_5.0 = _1.0 + _4;
SetDiscriminant(_2, 2);
_8 = (Field::<(f32, bool)>(Variant(_3, 0), 0).0, (-18463_i16), 39064130723703149158434635127336172067_i128, 1_usize, 63278048_i32, 414025126_u32);
_8.0 = -_1.0;
_1.0 = _4;
SetDiscriminant(_3, 0);
place!(Field::<(f32, bool)>(Variant(_3, 0), 0)).1 = _6.1;
RET = [_8.1];
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(15_usize, 7_usize, Move(_7), 12_usize, _12, 12_usize, _12, 12_usize, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: f32,mut _2: f32,mut _3: i32,mut _4: f64,mut _5: (i128,),mut _6: isize,mut _7: (f32, i16, i128, usize, i32, u32),mut _8: ([u128; 5], (f32, i16, i128, usize, i32, u32)),mut _9: isize,mut _10: f32,mut _11: i128,mut _12: f64,mut _13: i128,mut _14: u32,mut _15: i8,mut _16: ([u128; 5], (f32, i16, i128, usize, i32, u32))) -> (i16, isize) {
mir! {
type RET = (i16, isize);
let _17: [i16; 7];
let _18: f32;
let _19: [u128; 3];
let _20: (u128,);
let _21: Adt63;
let _22: (i128,);
let _23: [u128; 5];
let _24: Adt50;
let _25: f64;
let _26: bool;
let _27: (i16, isize);
let _28: ();
let _29: ();
{
_8.1.0 = -_2;
_7.3 = _10 as usize;
_15 = 69_i8 - 31_i8;
_2 = -_16.1.0;
_16.1.2 = -_8.1.2;
RET.0 = _16.1.1 + _7.1;
_16.1.5 = _14;
RET.0 = _6 as i16;
_18 = _8.1.0;
_12 = -_4;
_16.1.5 = _8.1.5 & _14;
_7.4 = _16.1.0 as i32;
_22.0 = _8.1.2 << _8.1.4;
_11 = _13 & _22.0;
_18 = _1;
_4 = _16.1.0 as f64;
_2 = _16.1.0;
_5 = _22;
Goto(bb1)
}
bb1 = {
_22 = (_5.0,);
RET.0 = _8.1.1;
_7.0 = _7.3 as f32;
_20 = (13365285019473150646156057475013186041_u128,);
_16.1.5 = _8.1.5 + _8.1.5;
RET = (_8.1.1, _9);
_16.1.3 = _20.0 as usize;
_19 = [_20.0,_20.0,_20.0];
_23 = [_20.0,_20.0,_20.0,_20.0,_20.0];
_10 = _9 as f32;
_7.5 = _14;
_8.0 = [_20.0,_20.0,_20.0,_20.0,_20.0];
_17 = [_16.1.1,_8.1.1,_16.1.1,_16.1.1,_7.1,_8.1.1,_16.1.1];
_13 = _5.0;
_25 = _4;
_8 = _16;
_20 = (253699588275836936969492356764744284356_u128,);
_7.5 = _16.1.5;
RET.1 = _13 as isize;
_23 = [_20.0,_20.0,_20.0,_20.0,_20.0];
_15 = (-59_i8);
_27 = (_16.1.1, _9);
Goto(bb2)
}
bb2 = {
Call(_28 = dump_var(16_usize, 20_usize, Move(_20), 13_usize, Move(_13), 14_usize, Move(_14), 3_usize, Move(_3)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_28 = dump_var(16_usize, 22_usize, Move(_22), 23_usize, Move(_23), 5_usize, Move(_5), 29_usize, _29), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: u128,mut _2: isize,mut _3: bool) -> (f32, i16, i128, usize, i32, u32) {
mir! {
type RET = (f32, i16, i128, usize, i32, u32);
let _4: Adt50;
let _5: u64;
let _6: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _7: isize;
let _8: Adt56;
let _9: Adt60;
let _10: bool;
let _11: ();
let _12: ();
{
RET.1 = !24594_i16;
RET.4 = 1806892978_i32 + (-808588274_i32);
RET.5 = (-7751351708500637201_i64) as u32;
RET.1 = _2 as i16;
RET.1 = (-22706_i16) & (-16033_i16);
_3 = !false;
_6.0 = [_1,_1,_1,_1,_1];
_5 = _1 as u64;
_6.1.1 = _3 as i16;
RET.1 = _6.1.1;
_6.1.3 = 11283_u16 as usize;
RET.5 = 1877943894_u32;
RET.4 = !(-490957473_i32);
RET.0 = _2 as f32;
Call(RET.1 = core::intrinsics::transmute(_6.1.1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = '\u{30110}' as isize;
RET.3 = _6.1.3;
match RET.5 {
0 => bb2,
1 => bb3,
1877943894 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
RET.1 = _6.1.1;
RET.5 = !547686954_u32;
_5 = !11874608427062960594_u64;
_6.1.5 = _1 as u32;
_5 = !15131960149501094282_u64;
RET.2 = -(-161327513421710995646814033239976476659_i128);
_6.1.4 = -RET.4;
RET.2 = 119283726891848278915058825160398519729_i128;
RET.5 = _6.1.5;
RET.2 = 45414_u16 as i128;
_6.1.4 = RET.2 as i32;
_6.1.3 = RET.3 + RET.3;
_6.1.2 = !RET.2;
Goto(bb6)
}
bb6 = {
Call(_11 = dump_var(17_usize, 1_usize, Move(_1), 5_usize, Move(_5), 12_usize, _12, 12_usize, _12), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: f64,mut _2: [i16; 7],mut _3: i64,mut _4: Adt47,mut _5: [u8; 8],mut _6: Adt47,mut _7: Adt47,mut _8: f32,mut _9: char,mut _10: [i16; 7]) -> Adt49 {
mir! {
type RET = Adt49;
let _11: [u128; 3];
let _12: Adt62;
let _13: isize;
let _14: i8;
let _15: f64;
let _16: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _17: i16;
let _18: u64;
let _19: isize;
let _20: i128;
let _21: i32;
let _22: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _23: [isize; 1];
let _24: (char, i8, u8);
let _25: [i16; 1];
let _26: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _27: bool;
let _28: i8;
let _29: i8;
let _30: f64;
let _31: u8;
let _32: [i64; 4];
let _33: Adt54;
let _34: [i128; 2];
let _35: Adt57;
let _36: [i128; 2];
let _37: Adt63;
let _38: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _39: isize;
let _40: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _41: isize;
let _42: (f32, i16, i128, usize, i32, u32);
let _43: Adt56;
let _44: [u128; 3];
let _45: char;
let _46: f64;
let _47: char;
let _48: char;
let _49: (u16, bool, f32);
let _50: f32;
let _51: isize;
let _52: bool;
let _53: (i16, isize);
let _54: i8;
let _55: *const [i16; 1];
let _56: *mut i8;
let _57: f32;
let _58: u32;
let _59: (char, i8, u8);
let _60: Adt56;
let _61: (i16, isize);
let _62: [u128; 3];
let _63: i64;
let _64: usize;
let _65: char;
let _66: (f32, bool);
let _67: i8;
let _68: (i16, isize);
let _69: (f32, bool);
let _70: (f32, i16, i128, usize, i32, u32);
let _71: u128;
let _72: *mut i8;
let _73: (u16, bool, f32);
let _74: u64;
let _75: f32;
let _76: i128;
let _77: (f32, i16, i128, usize, i32, u32);
let _78: (f32, bool);
let _79: char;
let _80: u128;
let _81: char;
let _82: i64;
let _83: (i128,);
let _84: u32;
let _85: *mut (i128,);
let _86: (u16, bool, f32);
let _87: u8;
let _88: (u128,);
let _89: f64;
let _90: char;
let _91: f64;
let _92: Adt59;
let _93: i32;
let _94: [i16; 1];
let _95: (f32, bool);
let _96: bool;
let _97: [isize; 1];
let _98: (u128,);
let _99: Adt52;
let _100: u128;
let _101: isize;
let _102: ((*mut *mut char,), i32, i16);
let _103: [i128; 2];
let _104: Adt62;
let _105: (i128,);
let _106: i16;
let _107: Adt50;
let _108: bool;
let _109: f32;
let _110: usize;
let _111: i8;
let _112: [u8; 8];
let _113: u8;
let _114: (char, i8, u8);
let _115: isize;
let _116: *mut *mut char;
let _117: Adt48;
let _118: f64;
let _119: bool;
let _120: isize;
let _121: f64;
let _122: f32;
let _123: u128;
let _124: [u128; 5];
let _125: Adt59;
let _126: u16;
let _127: i64;
let _128: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _129: f32;
let _130: u64;
let _131: (u16, bool, f32);
let _132: [u128; 5];
let _133: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _134: [u128; 5];
let _135: usize;
let _136: [u16; 6];
let _137: f64;
let _138: isize;
let _139: u16;
let _140: bool;
let _141: u32;
let _142: i128;
let _143: isize;
let _144: Adt52;
let _145: u128;
let _146: Adt52;
let _147: isize;
let _148: [i16; 1];
let _149: usize;
let _150: bool;
let _151: char;
let _152: [u128; 3];
let _153: isize;
let _154: bool;
let _155: Adt62;
let _156: [i64; 4];
let _157: isize;
let _158: u8;
let _159: *mut char;
let _160: f64;
let _161: (f32, bool);
let _162: bool;
let _163: isize;
let _164: isize;
let _165: (f32, i16, i128, usize, i32, u32);
let _166: isize;
let _167: *mut (f32, bool);
let _168: f32;
let _169: Adt58;
let _170: [i128; 2];
let _171: f32;
let _172: (f32, bool);
let _173: [u128; 3];
let _174: f32;
let _175: [i16; 1];
let _176: bool;
let _177: *mut i8;
let _178: isize;
let _179: [u16; 6];
let _180: *mut (f32, bool);
let _181: isize;
let _182: bool;
let _183: Adt59;
let _184: Adt56;
let _185: isize;
let _186: Adt58;
let _187: isize;
let _188: isize;
let _189: u64;
let _190: Adt49;
let _191: isize;
let _192: bool;
let _193: ((*mut *mut char,), i32, i16);
let _194: [u8; 8];
let _195: i128;
let _196: char;
let _197: [u128; 3];
let _198: f64;
let _199: bool;
let _200: usize;
let _201: u8;
let _202: f32;
let _203: i8;
let _204: [i16; 7];
let _205: isize;
let _206: bool;
let _207: *const [i16; 1];
let _208: i64;
let _209: ((*mut *mut char,), i32, i16);
let _210: usize;
let _211: [usize; 4];
let _212: [i16; 1];
let _213: u8;
let _214: f64;
let _215: ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _216: bool;
let _217: Adt58;
let _218: [u128; 3];
let _219: f32;
let _220: isize;
let _221: f64;
let _222: isize;
let _223: [i128; 2];
let _224: (f32, i16, i128, usize, i32, u32);
let _225: bool;
let _226: i8;
let _227: u64;
let _228: i128;
let _229: ();
let _230: ();
{
_9 = '\u{90cbe}';
_10 = [21810_i16,(-15622_i16),(-20248_i16),7760_i16,(-10295_i16),(-30267_i16),(-13183_i16)];
place!(Field::<f32>(Variant(_7, 2), 0)) = _1 as f32;
place!(Field::<f32>(Variant(_7, 2), 0)) = (-535_i16) as f32;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
3489541393616925475 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
SetDiscriminant(_7, 2);
_2 = [1135_i16,(-31799_i16),27385_i16,(-8320_i16),1182_i16,21208_i16,10130_i16];
_10 = [25081_i16,(-18045_i16),30446_i16,(-5455_i16),(-6871_i16),(-24062_i16),(-10920_i16)];
_10 = [(-31179_i16),14009_i16,(-8549_i16),21696_i16,25986_i16,(-9654_i16),(-12438_i16)];
place!(Field::<f32>(Variant(_7, 2), 0)) = _8;
_4 = _6;
SetDiscriminant(_7, 3);
_7 = _4;
place!(Field::<f32>(Variant(_7, 2), 0)) = 65916175943008461800369318026510426958_i128 as f32;
Goto(bb7)
}
bb7 = {
_16.1.4 = 36622899_i32;
_16.1 = (Field::<f32>(Variant(_4, 2), 0), (-13252_i16), (-169495067943297321285370458582445154986_i128), 8355778274825600752_usize, 1565158646_i32, 2264969434_u32);
SetDiscriminant(_6, 0);
_6 = _7;
_16.1 = (_8, (-20124_i16), (-54569679400075109596736018607842094185_i128), 4_usize, (-1352129017_i32), 1416029756_u32);
_16.1.0 = Field::<f32>(Variant(_6, 2), 0) - Field::<f32>(Variant(_4, 2), 0);
_7 = _6;
place!(Field::<f32>(Variant(_7, 2), 0)) = _16.1.0;
_9 = '\u{1023e1}';
_5 = [45_u8,181_u8,135_u8,41_u8,53_u8,157_u8,97_u8,39_u8];
_16.1.1 = (-24838_i16) - 30024_i16;
_14 = (-108_i8);
_14 = 3_i8;
_13 = (-60_isize) - 55_isize;
_18 = 31387_u16 as u64;
Goto(bb8)
}
bb8 = {
_22.1.0 = -Field::<f32>(Variant(_4, 2), 0);
_20 = !_16.1.2;
_13 = 9223372036854775807_isize;
_16.1.0 = Field::<f32>(Variant(_6, 2), 0);
_22.1.5 = !_16.1.5;
_22.1.0 = Field::<f32>(Variant(_7, 2), 0) + _16.1.0;
_13 = !9223372036854775807_isize;
_1 = _14 as f64;
_14 = 6_i8;
_14 = _16.1.1 as i8;
_21 = !_16.1.4;
place!(Field::<f32>(Variant(_7, 2), 0)) = -_22.1.0;
_16.1.0 = Field::<f32>(Variant(_7, 2), 0);
_23 = [_13];
_24.2 = !20_u8;
_16.1.3 = 4_usize - 8738473542191891335_usize;
_3 = 4653492429320156059_i64;
_22.1.2 = _20 + _20;
_17 = !_16.1.1;
match _16.1.2 {
0 => bb6,
1 => bb2,
2 => bb5,
285712687520863353866638588823926117271 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_20 = _22.1.2 | _22.1.2;
_11 = [170299452281186424985519631198030358747_u128,324970461677142801077307129128641233407_u128,69761090523180994699293307583263848090_u128];
_10 = _2;
_22.1.3 = _16.1.1 as usize;
_26.1.5 = _22.1.5;
SetDiscriminant(_7, 1);
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = _23;
_16.1.4 = !_21;
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_22.1.4 = _24.2 as i32;
_24.1 = _14 << _21;
match _16.1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
285712687520863353866638588823926117271 => bb12,
_ => bb11
}
}
bb11 = {
_16.1.4 = 36622899_i32;
_16.1 = (Field::<f32>(Variant(_4, 2), 0), (-13252_i16), (-169495067943297321285370458582445154986_i128), 8355778274825600752_usize, 1565158646_i32, 2264969434_u32);
SetDiscriminant(_6, 0);
_6 = _7;
_16.1 = (_8, (-20124_i16), (-54569679400075109596736018607842094185_i128), 4_usize, (-1352129017_i32), 1416029756_u32);
_16.1.0 = Field::<f32>(Variant(_6, 2), 0) - Field::<f32>(Variant(_4, 2), 0);
_7 = _6;
place!(Field::<f32>(Variant(_7, 2), 0)) = _16.1.0;
_9 = '\u{1023e1}';
_5 = [45_u8,181_u8,135_u8,41_u8,53_u8,157_u8,97_u8,39_u8];
_16.1.1 = (-24838_i16) - 30024_i16;
_14 = (-108_i8);
_14 = 3_i8;
_13 = (-60_isize) - 55_isize;
_18 = 31387_u16 as u64;
Goto(bb8)
}
bb12 = {
_26.0 = [138421460161301632082434592895320210520_u128,177767423788948788636742668357310195322_u128,212831846101850570637500943740918382754_u128,117263840933287291723761615552892113395_u128,180123727621469934217198089153215082508_u128];
_16.1.1 = _17;
SetDiscriminant(_6, 2);
_3 = -(-823330389414648417_i64);
_1 = 75004886343628044700000992459337846211_u128 as f64;
Goto(bb13)
}
bb13 = {
place!(Field::<f32>(Variant(_6, 2), 0)) = -_16.1.0;
_19 = _13;
_25 = [_16.1.1];
_24.0 = _9;
_24.1 = true as i8;
place!(Field::<i64>(Variant(_7, 1), 6)) = !_3;
place!(Field::<isize>(Variant(_7, 1), 2)) = !_19;
_15 = _1 - _1;
_26.1.4 = Field::<isize>(Variant(_7, 1), 2) as i32;
_22.1.3 = _16.1.3;
_22.1.0 = _24.1 as f32;
_21 = _16.1.4;
_16.1.1 = _17 << _22.1.5;
_16.1.3 = _22.1.3 + _22.1.3;
place!(Field::<*mut f64>(Variant(_7, 1), 5)) = core::ptr::addr_of_mut!(_1);
_16.0 = [272371241630714275851363600751903902298_u128,226346921849626363701716715463378403007_u128,315065110842500414230168630058385105280_u128,114903213687048986450245242479252559088_u128,77809205666119001499107131651758468299_u128];
_16.1.2 = true as i128;
_28 = _21 as i8;
_23 = Field::<[isize; 1]>(Variant(_7, 1), 1);
_22.0 = _26.0;
Goto(bb14)
}
bb14 = {
_23 = Field::<[isize; 1]>(Variant(_7, 1), 1);
_8 = 221974586236000953554431348409793331479_u128 as f32;
Goto(bb15)
}
bb15 = {
_6 = Adt47::Variant2 { fld0: _8 };
_24.0 = _9;
_26.1.0 = 9689_u16 as f32;
_31 = _24.2 & _24.2;
_19 = Field::<isize>(Variant(_7, 1), 2);
Goto(bb16)
}
bb16 = {
_3 = Field::<f32>(Variant(_4, 2), 0) as i64;
_26.1.2 = _22.1.2;
_4 = Adt47::Variant2 { fld0: _16.1.0 };
_26.1 = (Field::<f32>(Variant(_4, 2), 0), _16.1.1, _22.1.2, _16.1.3, _21, _22.1.5);
_22.1.4 = _26.1.4;
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [_31,_31,_24.2,_31,_31,_24.2,_31,_24.2];
_22.1.5 = !_16.1.5;
match _16.1.5 {
0 => bb1,
1 => bb8,
2 => bb17,
3 => bb18,
4 => bb19,
5 => bb20,
6 => bb21,
1416029756 => bb23,
_ => bb22
}
}
bb17 = {
Return()
}
bb18 = {
_22.1.0 = -Field::<f32>(Variant(_4, 2), 0);
_20 = !_16.1.2;
_13 = 9223372036854775807_isize;
_16.1.0 = Field::<f32>(Variant(_6, 2), 0);
_22.1.5 = !_16.1.5;
_22.1.0 = Field::<f32>(Variant(_7, 2), 0) + _16.1.0;
_13 = !9223372036854775807_isize;
_1 = _14 as f64;
_14 = 6_i8;
_14 = _16.1.1 as i8;
_21 = !_16.1.4;
place!(Field::<f32>(Variant(_7, 2), 0)) = -_22.1.0;
_16.1.0 = Field::<f32>(Variant(_7, 2), 0);
_23 = [_13];
_24.2 = !20_u8;
_16.1.3 = 4_usize - 8738473542191891335_usize;
_3 = 4653492429320156059_i64;
_22.1.2 = _20 + _20;
_17 = !_16.1.1;
match _16.1.2 {
0 => bb6,
1 => bb2,
2 => bb5,
285712687520863353866638588823926117271 => bb10,
_ => bb9
}
}
bb19 = {
Return()
}
bb20 = {
_16.1.4 = 36622899_i32;
_16.1 = (Field::<f32>(Variant(_4, 2), 0), (-13252_i16), (-169495067943297321285370458582445154986_i128), 8355778274825600752_usize, 1565158646_i32, 2264969434_u32);
SetDiscriminant(_6, 0);
_6 = _7;
_16.1 = (_8, (-20124_i16), (-54569679400075109596736018607842094185_i128), 4_usize, (-1352129017_i32), 1416029756_u32);
_16.1.0 = Field::<f32>(Variant(_6, 2), 0) - Field::<f32>(Variant(_4, 2), 0);
_7 = _6;
place!(Field::<f32>(Variant(_7, 2), 0)) = _16.1.0;
_9 = '\u{1023e1}';
_5 = [45_u8,181_u8,135_u8,41_u8,53_u8,157_u8,97_u8,39_u8];
_16.1.1 = (-24838_i16) - 30024_i16;
_14 = (-108_i8);
_14 = 3_i8;
_13 = (-60_isize) - 55_isize;
_18 = 31387_u16 as u64;
Goto(bb8)
}
bb21 = {
Return()
}
bb22 = {
_20 = _22.1.2 | _22.1.2;
_11 = [170299452281186424985519631198030358747_u128,324970461677142801077307129128641233407_u128,69761090523180994699293307583263848090_u128];
_10 = _2;
_22.1.3 = _16.1.1 as usize;
_26.1.5 = _22.1.5;
SetDiscriminant(_7, 1);
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = _23;
_16.1.4 = !_21;
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_22.1.4 = _24.2 as i32;
_24.1 = _14 << _21;
match _16.1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
285712687520863353866638588823926117271 => bb12,
_ => bb11
}
}
bb23 = {
_26 = (_22.0, _16.1);
_26.1.5 = _22.1.5;
_7 = Adt47::Variant2 { fld0: Field::<f32>(Variant(_6, 2), 0) };
_25 = [_26.1.1];
_17 = _16.1.1;
_22.1.5 = !_26.1.5;
_29 = _20 as i8;
_30 = _26.1.4 as f64;
_22 = _16;
Goto(bb24)
}
bb24 = {
_16.1.3 = !_26.1.3;
_18 = 1814727146421460584_u64;
_16.1.3 = !_26.1.3;
_38.1 = (Field::<f32>(Variant(_7, 2), 0), _16.1.1, _20, _26.1.3, _21, _26.1.5);
_36 = [_38.1.2,_20];
_9 = _24.0;
_23 = [_13];
_35.fld1 = _17 as u64;
_26.0 = _16.0;
_38.1.3 = !_16.1.3;
_41 = _13 ^ _19;
_28 = 33192999173727826086108473215841027717_u128 as i8;
_40.1.4 = _38.1.4;
_38.1.0 = Field::<f32>(Variant(_4, 2), 0);
match _16.1.5 {
0 => bb25,
1 => bb26,
1416029756 => bb28,
_ => bb27
}
}
bb25 = {
SetDiscriminant(_7, 2);
_2 = [1135_i16,(-31799_i16),27385_i16,(-8320_i16),1182_i16,21208_i16,10130_i16];
_10 = [25081_i16,(-18045_i16),30446_i16,(-5455_i16),(-6871_i16),(-24062_i16),(-10920_i16)];
_10 = [(-31179_i16),14009_i16,(-8549_i16),21696_i16,25986_i16,(-9654_i16),(-12438_i16)];
place!(Field::<f32>(Variant(_7, 2), 0)) = _8;
_4 = _6;
SetDiscriminant(_7, 3);
_7 = _4;
place!(Field::<f32>(Variant(_7, 2), 0)) = 65916175943008461800369318026510426958_i128 as f32;
Goto(bb7)
}
bb26 = {
Return()
}
bb27 = {
_16.1.4 = 36622899_i32;
_16.1 = (Field::<f32>(Variant(_4, 2), 0), (-13252_i16), (-169495067943297321285370458582445154986_i128), 8355778274825600752_usize, 1565158646_i32, 2264969434_u32);
SetDiscriminant(_6, 0);
_6 = _7;
_16.1 = (_8, (-20124_i16), (-54569679400075109596736018607842094185_i128), 4_usize, (-1352129017_i32), 1416029756_u32);
_16.1.0 = Field::<f32>(Variant(_6, 2), 0) - Field::<f32>(Variant(_4, 2), 0);
_7 = _6;
place!(Field::<f32>(Variant(_7, 2), 0)) = _16.1.0;
_9 = '\u{1023e1}';
_5 = [45_u8,181_u8,135_u8,41_u8,53_u8,157_u8,97_u8,39_u8];
_16.1.1 = (-24838_i16) - 30024_i16;
_14 = (-108_i8);
_14 = 3_i8;
_13 = (-60_isize) - 55_isize;
_18 = 31387_u16 as u64;
Goto(bb8)
}
bb28 = {
_27 = _40.1.4 != _22.1.4;
_22.1.0 = _38.1.2 as f32;
_9 = _24.0;
_40.1.1 = -_17;
_34 = [_20,_20];
_26.1.3 = _16.1.3;
_5 = [_24.2,_24.2,_31,_31,_31,_31,_31,_31];
_7 = _4;
_38.1 = _26.1;
_27 = !true;
_17 = !_22.1.1;
_16.1.2 = _20 & _20;
_31 = !_24.2;
_22.1.4 = _19 as i32;
SetDiscriminant(_7, 2);
place!(Field::<f32>(Variant(_7, 2), 0)) = _22.1.0 * _22.1.0;
_26.1.1 = _22.1.1;
Goto(bb29)
}
bb29 = {
_16.0 = _26.0;
_25 = [_22.1.1];
_22.1.5 = _38.1.5 - _38.1.5;
_26.1.5 = _41 as u32;
SetDiscriminant(_7, 1);
_26.1.5 = _18 as u32;
_40.1 = (_22.1.0, _17, _16.1.2, _16.1.3, _26.1.4, _22.1.5);
place!(Field::<u8>(Variant(_7, 1), 7)) = _24.2;
_40.1.3 = _15 as usize;
_16.1.5 = _40.1.5 * _22.1.5;
_32 = [_3,_3,_3,_3];
_40 = (_16.0, _22.1);
SetDiscriminant(_4, 0);
_22.1.4 = _38.1.4;
_28 = _24.1 + _29;
SetDiscriminant(_6, 3);
_16.1 = (_26.1.0, _26.1.1, _20, _38.1.3, _22.1.4, _40.1.5);
_16.1.1 = -_26.1.1;
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = [_41];
match _18 {
0 => bb27,
1 => bb5,
2 => bb3,
1814727146421460584 => bb31,
_ => bb30
}
}
bb30 = {
place!(Field::<f32>(Variant(_6, 2), 0)) = -_16.1.0;
_19 = _13;
_25 = [_16.1.1];
_24.0 = _9;
_24.1 = true as i8;
place!(Field::<i64>(Variant(_7, 1), 6)) = !_3;
place!(Field::<isize>(Variant(_7, 1), 2)) = !_19;
_15 = _1 - _1;
_26.1.4 = Field::<isize>(Variant(_7, 1), 2) as i32;
_22.1.3 = _16.1.3;
_22.1.0 = _24.1 as f32;
_21 = _16.1.4;
_16.1.1 = _17 << _22.1.5;
_16.1.3 = _22.1.3 + _22.1.3;
place!(Field::<*mut f64>(Variant(_7, 1), 5)) = core::ptr::addr_of_mut!(_1);
_16.0 = [272371241630714275851363600751903902298_u128,226346921849626363701716715463378403007_u128,315065110842500414230168630058385105280_u128,114903213687048986450245242479252559088_u128,77809205666119001499107131651758468299_u128];
_16.1.2 = true as i128;
_28 = _21 as i8;
_23 = Field::<[isize; 1]>(Variant(_7, 1), 1);
_22.0 = _26.0;
Goto(bb14)
}
bb31 = {
_17 = _40.1.1 & _40.1.1;
_31 = !_24.2;
_40.1.5 = _22.1.5 + _16.1.5;
_31 = !Field::<u8>(Variant(_7, 1), 7);
_42.4 = _21;
_37 = Adt63::Variant0 { fld0: _38.1.2 };
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = [_19];
SetDiscriminant(_37, 0);
_16.1.5 = _40.1.5;
place!(Field::<[isize; 1]>(Variant(_6, 3), 2)) = [_13];
_42.0 = -_40.1.0;
_40.1.4 = !_38.1.4;
_24.2 = Field::<u8>(Variant(_7, 1), 7) & _31;
_19 = -_41;
_44 = [268528592717707136464528564072799120725_u128,200616469125209513052393553066482334122_u128,94275738048183518496905852932052926542_u128];
_16.1.0 = _42.0;
_40.1.0 = -_42.0;
_22.1.0 = _40.1.0;
place!(Field::<[u16; 6]>(Variant(_6, 3), 1)) = [59901_u16,45326_u16,60305_u16,4468_u16,52425_u16,6035_u16];
_42.2 = _16.1.2;
_38.1 = _40.1;
place!(Field::<u16>(Variant(_7, 1), 4)) = !42124_u16;
match _18 {
0 => bb4,
1 => bb32,
2 => bb33,
3 => bb34,
4 => bb35,
1814727146421460584 => bb37,
_ => bb36
}
}
bb32 = {
_20 = _22.1.2 | _22.1.2;
_11 = [170299452281186424985519631198030358747_u128,324970461677142801077307129128641233407_u128,69761090523180994699293307583263848090_u128];
_10 = _2;
_22.1.3 = _16.1.1 as usize;
_26.1.5 = _22.1.5;
SetDiscriminant(_7, 1);
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = _23;
_16.1.4 = !_21;
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2,_24.2];
_22.1.4 = _24.2 as i32;
_24.1 = _14 << _21;
match _16.1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
285712687520863353866638588823926117271 => bb12,
_ => bb11
}
}
bb33 = {
SetDiscriminant(_7, 2);
_2 = [1135_i16,(-31799_i16),27385_i16,(-8320_i16),1182_i16,21208_i16,10130_i16];
_10 = [25081_i16,(-18045_i16),30446_i16,(-5455_i16),(-6871_i16),(-24062_i16),(-10920_i16)];
_10 = [(-31179_i16),14009_i16,(-8549_i16),21696_i16,25986_i16,(-9654_i16),(-12438_i16)];
place!(Field::<f32>(Variant(_7, 2), 0)) = _8;
_4 = _6;
SetDiscriminant(_7, 3);
_7 = _4;
place!(Field::<f32>(Variant(_7, 2), 0)) = 65916175943008461800369318026510426958_i128 as f32;
Goto(bb7)
}
bb34 = {
Return()
}
bb35 = {
_22.1.0 = -Field::<f32>(Variant(_4, 2), 0);
_20 = !_16.1.2;
_13 = 9223372036854775807_isize;
_16.1.0 = Field::<f32>(Variant(_6, 2), 0);
_22.1.5 = !_16.1.5;
_22.1.0 = Field::<f32>(Variant(_7, 2), 0) + _16.1.0;
_13 = !9223372036854775807_isize;
_1 = _14 as f64;
_14 = 6_i8;
_14 = _16.1.1 as i8;
_21 = !_16.1.4;
place!(Field::<f32>(Variant(_7, 2), 0)) = -_22.1.0;
_16.1.0 = Field::<f32>(Variant(_7, 2), 0);
_23 = [_13];
_24.2 = !20_u8;
_16.1.3 = 4_usize - 8738473542191891335_usize;
_3 = 4653492429320156059_i64;
_22.1.2 = _20 + _20;
_17 = !_16.1.1;
match _16.1.2 {
0 => bb6,
1 => bb2,
2 => bb5,
285712687520863353866638588823926117271 => bb10,
_ => bb9
}
}
bb36 = {
Return()
}
bb37 = {
_26.1.5 = _16.1.5;
_15 = 304467292810305425294433395787082568133_u128 as f64;
_26.1.3 = _30 as usize;
match _18 {
0 => bb35,
1 => bb11,
2 => bb4,
3 => bb38,
1814727146421460584 => bb40,
_ => bb39
}
}
bb38 = {
_16.1.4 = 36622899_i32;
_16.1 = (Field::<f32>(Variant(_4, 2), 0), (-13252_i16), (-169495067943297321285370458582445154986_i128), 8355778274825600752_usize, 1565158646_i32, 2264969434_u32);
SetDiscriminant(_6, 0);
_6 = _7;
_16.1 = (_8, (-20124_i16), (-54569679400075109596736018607842094185_i128), 4_usize, (-1352129017_i32), 1416029756_u32);
_16.1.0 = Field::<f32>(Variant(_6, 2), 0) - Field::<f32>(Variant(_4, 2), 0);
_7 = _6;
place!(Field::<f32>(Variant(_7, 2), 0)) = _16.1.0;
_9 = '\u{1023e1}';
_5 = [45_u8,181_u8,135_u8,41_u8,53_u8,157_u8,97_u8,39_u8];
_16.1.1 = (-24838_i16) - 30024_i16;
_14 = (-108_i8);
_14 = 3_i8;
_13 = (-60_isize) - 55_isize;
_18 = 31387_u16 as u64;
Goto(bb8)
}
bb39 = {
_16.1.4 = 36622899_i32;
_16.1 = (Field::<f32>(Variant(_4, 2), 0), (-13252_i16), (-169495067943297321285370458582445154986_i128), 8355778274825600752_usize, 1565158646_i32, 2264969434_u32);
SetDiscriminant(_6, 0);
_6 = _7;
_16.1 = (_8, (-20124_i16), (-54569679400075109596736018607842094185_i128), 4_usize, (-1352129017_i32), 1416029756_u32);
_16.1.0 = Field::<f32>(Variant(_6, 2), 0) - Field::<f32>(Variant(_4, 2), 0);
_7 = _6;
place!(Field::<f32>(Variant(_7, 2), 0)) = _16.1.0;
_9 = '\u{1023e1}';
_5 = [45_u8,181_u8,135_u8,41_u8,53_u8,157_u8,97_u8,39_u8];
_16.1.1 = (-24838_i16) - 30024_i16;
_14 = (-108_i8);
_14 = 3_i8;
_13 = (-60_isize) - 55_isize;
_18 = 31387_u16 as u64;
Goto(bb8)
}
bb40 = {
place!(Field::<[u16; 6]>(Variant(_6, 3), 1)) = [Field::<u16>(Variant(_7, 1), 4),Field::<u16>(Variant(_7, 1), 4),Field::<u16>(Variant(_7, 1), 4),Field::<u16>(Variant(_7, 1), 4),Field::<u16>(Variant(_7, 1), 4),Field::<u16>(Variant(_7, 1), 4)];
_16.0 = [5355076432643506480544392422764957388_u128,84668781241679222094571978702624489720_u128,39129316470439963384437930102904080498_u128,12588385907472296315332848869319421268_u128,114178766991681939265507146854092803081_u128];
Goto(bb41)
}
bb41 = {
_46 = -_1;
_22.1.4 = _16.1.5 as i32;
_3 = _41 as i64;
_5 = [_24.2,_24.2,_24.2,_31,_31,_24.2,_24.2,_31];
_42.5 = _40.1.5;
_8 = _16.1.0;
_9 = _24.0;
_40.1.5 = _26.1.5 << _16.1.5;
_8 = -_38.1.0;
_42.5 = !_22.1.5;
_18 = _35.fld1 >> _42.2;
place!(Field::<i64>(Variant(_7, 1), 6)) = _3 & _3;
_49.1 = _40.1.5 >= _26.1.5;
_13 = _30 as isize;
_49.2 = _18 as f32;
_26.1 = (_42.0, _22.1.1, _42.2, _22.1.3, _21, _40.1.5);
_40.1.2 = _16.1.2 - _42.2;
_38.1 = (_40.1.0, _26.1.1, _40.1.2, _40.1.3, _22.1.4, _40.1.5);
_50 = -_16.1.0;
place!(Field::<u8>(Variant(_7, 1), 7)) = _29 as u8;
_17 = _38.1.1 - _22.1.1;
_1 = _38.1.1 as f64;
Goto(bb42)
}
bb42 = {
_28 = !_29;
_40.1.2 = !_26.1.2;
_22.1.1 = !_38.1.1;
_26.1.1 = _17 << _26.1.5;
_9 = _24.0;
_41 = _30 as isize;
_38.1.2 = _42.2 + _26.1.2;
_8 = _40.1.0;
_38.1.3 = _22.1.3 + _22.1.3;
_42 = _22.1;
_33 = Adt54::Variant1 { fld0: _9 };
_22.1.1 = _13 as i16;
_39 = _41 << Field::<u8>(Variant(_7, 1), 7);
_38.0 = [317675349691703013464912361313830080018_u128,266106420723657682045983141612994670184_u128,177464353522221388885602652524978554734_u128,255030077246914361694989518367739498011_u128,262951522979391076632365032784055355007_u128];
_5 = [Field::<u8>(Variant(_7, 1), 7),Field::<u8>(Variant(_7, 1), 7),Field::<u8>(Variant(_7, 1), 7),Field::<u8>(Variant(_7, 1), 7),_24.2,Field::<u8>(Variant(_7, 1), 7),_31,Field::<u8>(Variant(_7, 1), 7)];
_52 = !_27;
_9 = _24.0;
_6 = Adt47::Variant2 { fld0: _38.1.0 };
_24.2 = !Field::<u8>(Variant(_7, 1), 7);
_34 = [_20,_38.1.2];
_51 = -_39;
_15 = Field::<u16>(Variant(_7, 1), 4) as f64;
place!(Field::<(f32, bool)>(Variant(_4, 0), 0)).1 = !_49.1;
Goto(bb43)
}
bb43 = {
_22 = (_40.0, _16.1);
_29 = _8 as i8;
_2 = [_26.1.1,_26.1.1,_26.1.1,_26.1.1,_26.1.1,_26.1.1,_26.1.1];
place!(Field::<isize>(Variant(_7, 1), 2)) = _51;
_42.2 = _22.1.2;
_26.0 = [236575940081490197466703443030135537503_u128,53122988311863319439736386967144635800_u128,117216074636614088468376757134317617986_u128,97266657996408897955806521364967389784_u128,133887458879862593232283232390089096321_u128];
_49.2 = _16.1.0 + _50;
Goto(bb44)
}
bb44 = {
_45 = Field::<char>(Variant(_33, 1), 0);
_26.1.4 = _42.4;
_25 = [_42.1];
_26.1.5 = !_38.1.5;
_38.1.4 = Field::<char>(Variant(_33, 1), 0) as i32;
_40.1.5 = _38.1.5;
place!(Field::<i128>(Variant(_37, 0), 0)) = _49.1 as i128;
Goto(bb45)
}
bb45 = {
_42.2 = _26.1.2;
place!(Field::<*mut f64>(Variant(_7, 1), 5)) = core::ptr::addr_of_mut!(_15);
_16.1.2 = _20;
_49.0 = Field::<u16>(Variant(_7, 1), 4);
_54 = Field::<(f32, bool)>(Variant(_4, 0), 0).1 as i8;
_56 = core::ptr::addr_of_mut!(_54);
place!(Field::<i128>(Variant(_37, 0), 0)) = 120788493528887739738848701158815837510_u128 as i128;
_17 = -_26.1.1;
_57 = Field::<f32>(Variant(_6, 2), 0);
_30 = _46;
_40.1.4 = _18 as i32;
_40.1 = _26.1;
_58 = _26.1.5;
_9 = _24.0;
_59.2 = _24.2;
_53.1 = !_51;
_24.0 = _9;
_53.1 = _51;
_38.1.2 = _42.2 + _40.1.2;
Goto(bb46)
}
bb46 = {
_57 = 311351234739624501630382999704254463515_u128 as f32;
place!(Field::<(f32, bool)>(Variant(_4, 0), 0)).1 = _49.1 & _49.1;
_10 = _2;
_59.1 = _54 << _54;
_42 = (_8, _40.1.1, _16.1.2, _26.1.3, _40.1.4, _26.1.5);
_42.2 = _38.1.2 >> _42.4;
place!(Field::<*mut f64>(Variant(_7, 1), 5)) = core::ptr::addr_of_mut!(_30);
place!(Field::<(f32, bool)>(Variant(_4, 0), 0)).0 = _26.1.1 as f32;
_16.1.2 = _42.2;
place!(Field::<char>(Variant(_33, 1), 0)) = _45;
_51 = _53.1 + _53.1;
_61.1 = _38.1.2 as isize;
_38.1.3 = _24.2 as usize;
_22.1.0 = _50;
_55 = core::ptr::addr_of!(_25);
_26.1.2 = _40.1.2;
_38.0 = [141354310128675722093138471323976844503_u128,225248073777925851828908515701429386375_u128,55309650069349536144680852049775082662_u128,244554387403075130274196081810187813590_u128,86298394766700280412501947722544560718_u128];
_61.1 = _41;
_40.1.1 = _16.1.1 * _42.1;
_55 = core::ptr::addr_of!(_25);
Goto(bb47)
}
bb47 = {
_58 = _42.5 & _40.1.5;
_42 = _26.1;
_49.1 = !Field::<(f32, bool)>(Variant(_4, 0), 0).1;
_38.0 = _16.0;
_40.1.5 = _58;
_48 = _24.0;
_40.1.3 = _38.1.3;
_47 = _45;
_40.0 = _26.0;
_16.1.3 = _40.1.3;
_40 = (_16.0, _38.1);
_42.3 = _1 as usize;
_26.1 = (Field::<f32>(Variant(_6, 2), 0), _22.1.1, _42.2, _42.3, _42.4, _40.1.5);
_22.1 = _42;
_19 = _53.1 & _51;
Call(_16.1.5 = core::intrinsics::bswap(_40.1.5), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
_59 = (_48, _54, Field::<u8>(Variant(_7, 1), 7));
_26.1.0 = _49.2;
_44 = [229769433546194206127362209602750331917_u128,283856340094997184151239043467512210200_u128,269862402071209200563662163750667736614_u128];
SetDiscriminant(_6, 1);
_49 = (Field::<u16>(Variant(_7, 1), 4), Field::<(f32, bool)>(Variant(_4, 0), 0).1, _40.1.0);
_42.2 = _49.0 as i128;
Goto(bb49)
}
bb49 = {
_49.2 = _22.1.4 as f32;
_45 = _47;
_40.1.2 = _20 & _20;
Goto(bb50)
}
bb50 = {
_15 = _29 as f64;
_61.0 = _42.5 as i16;
_36 = [_40.1.2,_38.1.2];
place!(Field::<isize>(Variant(_6, 1), 2)) = _41 * _19;
_59 = (_9, _29, Field::<u8>(Variant(_7, 1), 7));
_40 = _16;
Goto(bb51)
}
bb51 = {
_16 = _26;
_65 = _48;
_52 = _49.1;
_22.1.1 = !_26.1.1;
_66 = (_42.0, Field::<(f32, bool)>(Variant(_4, 0), 0).1);
place!(Field::<char>(Variant(_33, 1), 0)) = _45;
_44 = [107859105932204159631887325485121950465_u128,94288362045120085328814180756801293331_u128,233309195732049150890812455693915701418_u128];
_20 = _40.1.2;
_26.1.1 = !_42.1;
place!(Field::<[u8; 8]>(Variant(_7, 1), 0)) = [_59.2,Field::<u8>(Variant(_7, 1), 7),_59.2,Field::<u8>(Variant(_7, 1), 7),_24.2,Field::<u8>(Variant(_7, 1), 7),_59.2,Field::<u8>(Variant(_7, 1), 7)];
_26.1.0 = -_40.1.0;
_40.1 = (_16.1.0, _17, _16.1.2, _38.1.3, _42.4, _22.1.5);
place!(Field::<u8>(Variant(_6, 1), 7)) = _59.2;
_53 = (_17, Field::<isize>(Variant(_7, 1), 2));
place!(Field::<*mut f64>(Variant(_6, 1), 5)) = Field::<*mut f64>(Variant(_7, 1), 5);
_26.1.1 = !_17;
_4 = Adt47::Variant0 { fld0: _66 };
_55 = core::ptr::addr_of!((*_55));
_42.0 = _50 + _66.0;
_38.1.4 = _40.1.4;
_38.0 = [108919699899530174116682573873446141028_u128,255454484343946814769077277908615970160_u128,95126210012719955405972676677268473155_u128,144222645784268461408584344005327212496_u128,72455999486068760780018514824439394454_u128];
_69.0 = -_66.0;
_70.5 = _22.1.5 * _16.1.5;
_7 = _4;
_71 = !192654252314317872863871661189371764927_u128;
_69.1 = _40.1.5 <= _38.1.5;
place!(Field::<(f32, bool)>(Variant(_7, 0), 0)).1 = !Field::<(f32, bool)>(Variant(_4, 0), 0).1;
Goto(bb52)
}
bb52 = {
_17 = _42.1;
_40.1.0 = _22.1.0;
(*_56) = !_29;
_51 = _49.0 as isize;
_31 = Field::<u8>(Variant(_6, 1), 7) + _59.2;
_67 = _59.1 + _59.1;
_62 = [_71,_71,_71];
_42.5 = _16.1.5;
_16.1.4 = !_38.1.4;
_64 = _38.1.3;
_59.1 = _29;
SetDiscriminant(_7, 3);
place!(Field::<[isize; 1]>(Variant(_7, 3), 2)) = [_53.1];
_70.5 = _22.1.5 & _40.1.5;
SetDiscriminant(_4, 1);
(*_55) = [_17];
(*_55) = [_26.1.1];
_40.1.0 = _42.0 * _16.1.0;
_68 = (_61.0, _19);
_53.1 = -_51;
_59.2 = !_31;
SetDiscriminant(_37, 1);
_24 = (_48, _29, _31);
_26.1.1 = _53.0 | _68.0;
Goto(bb53)
}
bb53 = {
_73.1 = !_66.1;
_22.1.0 = _49.0 as f32;
_17 = _42.1;
_70 = (_8, _68.0, _38.1.2, _40.1.3, _16.1.4, _42.5);
_22.0 = _40.0;
_46 = _15;
place!(Field::<i64>(Variant(_4, 1), 6)) = _3;
_42.3 = _70.3 + _22.1.3;
_23 = [Field::<isize>(Variant(_6, 1), 2)];
_22 = (_16.0, _38.1);
place!(Field::<[isize; 1]>(Variant(_6, 1), 1)) = [_19];
_73.0 = _49.0 ^ _49.0;
_42.5 = !_40.1.5;
_38.1 = (_22.1.0, _70.1, _40.1.2, _40.1.3, _70.4, _22.1.5);
_10 = [_38.1.1,_42.1,_26.1.1,_17,_42.1,_40.1.1,_17];
_59 = (_24.0, (*_56), _31);
place!(Field::<u8>(Variant(_4, 1), 7)) = _31;
_72 = core::ptr::addr_of_mut!(_24.1);
Goto(bb54)
}
bb54 = {
_40.1.2 = _20;
Goto(bb55)
}
bb55 = {
_24 = (_59.0, (*_56), _31);
_26.1 = (_40.1.0, _53.0, _20, _64, _40.1.4, _40.1.5);
_76 = !_38.1.2;
place!(Field::<(f32, bool)>(Variant(_37, 1), 0)) = (_40.1.0, _73.1);
_16.1.3 = _3 as usize;
_74 = _35.fld1;
_73 = _49;
_56 = core::ptr::addr_of_mut!(_67);
_77.0 = _22.1.4 as f32;
_74 = _49.0 as u64;
Goto(bb56)
}
bb56 = {
_70 = (_50, _26.1.1, _26.1.2, _22.1.3, _42.4, _38.1.5);
(*_72) = _29 + (*_56);
_41 = Field::<isize>(Variant(_6, 1), 2) & Field::<isize>(Variant(_6, 1), 2);
_71 = !243251010384945889218962124908163311777_u128;
_40.1.2 = _40.1.3 as i128;
_17 = _68.0;
place!(Field::<u8>(Variant(_6, 1), 7)) = _49.0 as u8;
_46 = -_15;
place!(Field::<u8>(Variant(_6, 1), 7)) = !_59.2;
_38.1.4 = _59.0 as i32;
SetDiscriminant(_33, 0);
_40.1.5 = (*_72) as u32;
_37 = Adt63::Variant0 { fld0: _70.2 };
_27 = Field::<isize>(Variant(_6, 1), 2) >= _68.1;
_73 = (_49.0, _66.1, _8);
_83.0 = _26.1.2 << _38.1.1;
_81 = _9;
_65 = _48;
_56 = core::ptr::addr_of_mut!(_29);
place!(Field::<u8>(Variant(_4, 1), 7)) = _42.1 as u8;
_40.1.5 = _18 as u32;
place!(Field::<i64>(Variant(_4, 1), 6)) = _1 as i64;
place!(Field::<(f32, bool)>(Variant(_33, 0), 0)).0 = _26.1.0;
_77.4 = _71 as i32;
_16.1.1 = !_42.1;
Goto(bb57)
}
bb57 = {
_59 = _24;
_6 = Adt47::Variant2 { fld0: _40.1.0 };
SetDiscriminant(_6, 1);
_69.1 = _27 & _52;
_26.1.5 = _70.5;
_26.1.3 = !_64;
_75 = -_8;
_73.2 = _26.1.2 as f32;
place!(Field::<[u8; 8]>(Variant(_4, 1), 0)) = [_24.2,Field::<u8>(Variant(_4, 1), 7),_31,_24.2,_59.2,Field::<u8>(Variant(_4, 1), 7),_59.2,Field::<u8>(Variant(_4, 1), 7)];
_10 = [_42.1,_26.1.1,_17,_42.1,_40.1.1,_42.1,_61.0];
_16.1.0 = _26.1.0;
place!(Field::<isize>(Variant(_33, 0), 2)) = _41 >> _70.2;
_63 = Field::<u8>(Variant(_4, 1), 7) as i64;
_61 = _53;
_38.1.0 = _66.0;
_77.1 = -_70.1;
_86.2 = _26.1.0 - Field::<(f32, bool)>(Variant(_33, 0), 0).0;
_35.fld1 = _61.0 as u64;
_77.3 = _64 >> _63;
_86.1 = (*_72) <= _59.1;
_24.1 = (*_56);
SetDiscriminant(_37, 2);
_27 = _59.1 >= _67;
_78.1 = _52 != _66.1;
place!(Field::<[isize; 1]>(Variant(_6, 1), 1)) = [Field::<isize>(Variant(_33, 0), 2)];
_16.1.0 = _83.0 as f32;
Goto(bb58)
}
bb58 = {
place!(Field::<u8>(Variant(_6, 1), 7)) = _65 as u8;
place!(Field::<(f32, bool)>(Variant(_33, 0), 0)).1 = !_49.1;
(*_55) = [_17];
place!(Field::<u16>(Variant(_4, 1), 4)) = _73.0;
place!(Field::<u16>(Variant(_6, 1), 4)) = !Field::<u16>(Variant(_4, 1), 4);
_64 = !_77.3;
_38.1.0 = -_26.1.0;
_32 = [_63,Field::<i64>(Variant(_4, 1), 6),_63,_63];
_78.0 = _73.2 + _69.0;
_83 = (_22.1.2,);
_26 = _16;
_89 = _46;
place!(Field::<i64>(Variant(_4, 1), 6)) = _63;
_77.2 = _20;
_40.1 = _16.1;
_77 = (_26.1.0, _16.1.1, _70.2, _70.3, _70.4, _22.1.5);
_49.2 = _77.3 as f32;
_38.1 = (_16.1.0, _68.0, _20, _64, _77.4, _77.5);
_63 = _3;
_21 = _35.fld1 as i32;
Goto(bb59)
}
bb59 = {
_6 = Adt47::Variant2 { fld0: _78.0 };
SetDiscriminant(_6, 2);
place!(Field::<[u8; 8]>(Variant(_7, 3), 3)) = [_24.2,_31,_31,Field::<u8>(Variant(_4, 1), 7),Field::<u8>(Variant(_4, 1), 7),Field::<u8>(Variant(_4, 1), 7),_31,Field::<u8>(Variant(_4, 1), 7)];
place!(Field::<f32>(Variant(_6, 2), 0)) = _39 as f32;
_16.1.4 = _40.1.4 + _22.1.4;
_71 = _49.1 as u128;
_70.4 = -_77.4;
_75 = -Field::<(f32, bool)>(Variant(_33, 0), 0).0;
_95.0 = -_86.2;
_98.0 = _71;
_76 = _71 as i128;
_67 = (*_56);
(*_55) = [_26.1.1];
Goto(bb60)
}
bb60 = {
_13 = _41 ^ Field::<isize>(Variant(_33, 0), 2);
_81 = _65;
_26.1.3 = !_64;
_101 = !Field::<isize>(Variant(_33, 0), 2);
_103 = [_38.1.2,_77.2];
_85 = core::ptr::addr_of_mut!(_83);
_26.1.1 = !_53.0;
_24 = _59;
_70.4 = _42.4 * _26.1.4;
_36 = [_76,(*_85).0];
_86 = _49;
_61.0 = !_26.1.1;
_32 = [Field::<i64>(Variant(_4, 1), 6),Field::<i64>(Variant(_4, 1), 6),Field::<i64>(Variant(_4, 1), 6),Field::<i64>(Variant(_4, 1), 6)];
_57 = -_86.2;
_77.5 = !_38.1.5;
_73.0 = _49.0;
SetDiscriminant(_6, 3);
_6 = Adt47::Variant0 { fld0: _66 };
SetDiscriminant(_6, 3);
_25 = [_16.1.1];
_28 = _59.1;
_24.2 = _71 as u8;
_8 = _73.0 as f32;
_62 = [_98.0,_71,_71];
_80 = _71;
_45 = _47;
_100 = !_71;
Goto(bb61)
}
bb61 = {
_26.1.5 = !_42.5;
_31 = !Field::<u8>(Variant(_4, 1), 7);
Goto(bb62)
}
bb62 = {
_95.1 = _86.1;
_4 = Adt47::Variant0 { fld0: _66 };
_78.0 = _95.0;
_66.1 = Field::<(f32, bool)>(Variant(_33, 0), 0).1 ^ _78.1;
_68.0 = _61.0;
_66 = (_38.1.0, _86.1);
_40.1.5 = _38.1.5;
_68.1 = _16.1.5 as isize;
_38.0 = [_80,_80,_98.0,_98.0,_100];
_69 = (_77.0, _52);
_75 = _78.0 + _95.0;
_36 = [_76,_83.0];
_22.1.1 = _47 as i16;
_85 = core::ptr::addr_of_mut!(_83);
_91 = _46 + _46;
_38.1.4 = _26.1.4;
_26.1.2 = _3 as i128;
_75 = _100 as f32;
Goto(bb63)
}
bb63 = {
_88 = (_71,);
_73.0 = _18 as u16;
_110 = _42.3 ^ _64;
_102.2 = _38.1.1;
_35.fld1 = _18 << _16.1.1;
_53.0 = -_40.1.1;
place!(Field::<[u16; 6]>(Variant(_6, 3), 1)) = [_73.0,_73.0,_73.0,_73.0,_73.0,_73.0];
_38.0 = [_80,_71,_88.0,_98.0,_71];
(*_56) = !_54;
place!(Field::<(f32, bool)>(Variant(_33, 0), 0)) = (_16.1.0, _52);
SetDiscriminant(_4, 0);
_9 = _47;
_24.2 = !_31;
_115 = _70.2 as isize;
_105 = ((*_85).0,);
_15 = -_30;
_59.2 = _24.0 as u8;
_114 = (_81, _28, _31);
_42.5 = _16.1.5 | _38.1.5;
_86.2 = _69.0;
_70.3 = _63 as usize;
_46 = _91 * _91;
_90 = _81;
_82 = _21 as i64;
_25 = [_68.0];
place!(Field::<u32>(Variant(_33, 0), 5)) = _16.1.5;
_95.1 = !_52;
place!(Field::<*const (i16, isize)>(Variant(_33, 0), 1)) = core::ptr::addr_of!(_53);
Goto(bb64)
}
bb64 = {
_66 = (_38.1.0, _86.1);
place!(Field::<[isize; 1]>(Variant(_6, 3), 2)) = [_13];
_97 = [Field::<isize>(Variant(_33, 0), 2)];
_106 = _27 as i16;
_115 = !_19;
_26.1.4 = _77.4 + _70.4;
Goto(bb65)
}
bb65 = {
place!(Field::<(f32, bool)>(Variant(_33, 0), 0)).0 = _18 as f32;
_24.0 = _45;
_77.4 = _21;
_40.1 = _22.1;
_69 = _78;
_16.1.5 = !_42.5;
place!(Field::<(f32, bool)>(Variant(_4, 0), 0)).0 = _95.0;
(*_55) = [_38.1.1];
_56 = core::ptr::addr_of_mut!((*_72));
_114.0 = _59.0;
Goto(bb66)
}
bb66 = {
_70.4 = _26.1.0 as i32;
_8 = _110 as f32;
(*_72) = _59.1;
_13 = -_41;
_16.1.2 = _20 - _70.2;
_70.4 = _21 ^ _38.1.4;
place!(Field::<i64>(Variant(_33, 0), 3)) = _82 * _82;
_83 = (_16.1.2,);
Goto(bb67)
}
bb67 = {
_75 = _53.0 as f32;
_40.1.2 = _38.1.2 + _83.0;
_26 = _40;
_68 = _53;
_62 = _44;
_108 = !_66.1;
(*_55) = [_16.1.1];
_34 = [_40.1.2,(*_85).0];
Goto(bb68)
}
bb68 = {
place!(Field::<[u128; 5]>(Variant(_7, 3), 0)) = _38.0;
place!(Field::<i64>(Variant(_33, 0), 3)) = !_82;
_123 = _98.0;
_75 = Field::<i64>(Variant(_33, 0), 3) as f32;
place!(Field::<[u16; 6]>(Variant(_7, 3), 1)) = [_73.0,_86.0,_73.0,_49.0,_73.0,_73.0];
_126 = !_73.0;
place!(Field::<isize>(Variant(_33, 0), 2)) = !_13;
_6 = Adt47::Variant0 { fld0: _78 };
_66 = (_38.1.0, Field::<(f32, bool)>(Variant(_6, 0), 0).1);
place!(Field::<[u128; 5]>(Variant(_7, 3), 0)) = [_88.0,_80,_100,_88.0,_71];
_4 = Adt47::Variant2 { fld0: _66.0 };
_22.0 = [_71,_80,_98.0,_100,_71];
_100 = !_71;
_70.1 = -_102.2;
_21 = Field::<f32>(Variant(_4, 2), 0) as i32;
_88.0 = _80;
_40.1.5 = _16.1.5 ^ _16.1.5;
(*_85).0 = _16.1.2 - _105.0;
_24.2 = _114.2 << _38.1.3;
_16.1.1 = _16.1.0 as i16;
SetDiscriminant(_6, 2);
Call(_44 = core::intrinsics::transmute(_62), ReturnTo(bb69), UnwindUnreachable())
}
bb69 = {
_121 = _46;
_86.1 = Field::<(f32, bool)>(Variant(_33, 0), 0).1;
place!(Field::<Adt51>(Variant(_33, 0), 4)) = Adt51::Variant1 { fld0: _85,fld1: _42.0,fld2: _59.1 };
_68 = (_17, _13);
_103 = [_40.1.2,_77.2];
place!(Field::<(f32, bool)>(Variant(_33, 0), 0)).0 = _35.fld1 as f32;
_1 = _24.2 as f64;
_84 = !_38.1.5;
_38.1.2 = !(*_85).0;
_77.2 = _70.2;
_42.1 = _77.1 << _115;
_53.1 = _13 << _98.0;
_8 = _49.2 + _77.0;
_69.1 = !_108;
_16.1.3 = _78.1 as usize;
_25 = [_70.1];
Goto(bb70)
}
bb70 = {
SetDiscriminant(_33, 1);
_26.1.3 = !_22.1.3;
_123 = _21 as u128;
_121 = -_1;
_98 = (_88.0,);
_53 = (_17, _13);
_103 = [_16.1.2,_26.1.2];
_87 = !_24.2;
_61 = _53;
_83 = (_26.1.2,);
_31 = !_87;
Goto(bb71)
}
bb71 = {
_74 = _35.fld1;
SetDiscriminant(_7, 3);
_22.1.1 = _53.0;
_81 = _90;
_40.1.4 = _77.4;
_136 = [_73.0,_73.0,_126,_73.0,_73.0,_73.0];
_36 = _34;
_133.1.3 = _77.3;
_127 = _81 as i64;
_22.1.3 = !_110;
_24.1 = _59.1 >> _114.1;
_133.1.0 = _70.0;
_101 = _19;
_70.5 = _38.1.5 + _42.5;
_21 = _45 as i32;
_119 = !_27;
_102.1 = _52 as i32;
_19 = _68.1;
_14 = _18 as i8;
_91 = _68.1 as f64;
_56 = _72;
_24.0 = _65;
_126 = _73.0;
_14 = _28 << _74;
_24.2 = _73.1 as u8;
_128 = core::ptr::addr_of_mut!(_40);
_2 = [_42.1,_38.1.1,_16.1.1,_16.1.1,_70.1,_22.1.1,_42.1];
_63 = _82 * _82;
_107 = Adt50::Variant0 { fld0: _32,fld1: _103 };
SetDiscriminant(_4, 3);
Goto(bb72)
}
bb72 = {
_42 = _16.1;
_78.1 = !_52;
place!(Field::<[isize; 1]>(Variant(_4, 3), 2)) = [_39];
place!(Field::<[u8; 8]>(Variant(_7, 3), 3)) = [_87,_87,_24.2,_87,_24.2,_24.2,_114.2,_24.2];
_109 = -_42.0;
_57 = _26.1.3 as f32;
_133.1 = (_78.0, _22.1.1, (*_85).0, _42.3, _70.4, _38.1.5);
_114.1 = _59.1;
_40.1.1 = _16.1.1;
_133.1.4 = (*_72) as i32;
_33 = Adt54::Variant1 { fld0: _9 };
_114 = (_90, _24.1, _31);
SetDiscriminant(_107, 0);
_70.4 = _1 as i32;
SetDiscriminant(_33, 1);
_89 = _46;
_42.3 = _64 * _16.1.3;
_29 = !_114.1;
_141 = _114.2 as u32;
_76 = _20 << _70.1;
_65 = _9;
_38.0 = [_88.0,_123,_100,_71,_123];
_132 = [_100,_100,_80,_71,_98.0];
_77.5 = !_58;
_133.1.1 = _9 as i16;
_21 = _133.1.4 ^ _133.1.4;
_105.0 = -_16.1.2;
Goto(bb73)
}
bb73 = {
_15 = _121 + _91;
_23 = [_19];
_91 = _15;
_42.5 = !_16.1.5;
_111 = _40.1.4 as i8;
_95 = _78;
_77.5 = !_58;
Goto(bb74)
}
bb74 = {
_37 = Adt63::Variant0 { fld0: _77.2 };
_42.4 = _91 as i32;
(*_56) = _42.3 as i8;
place!(Field::<[isize; 1]>(Variant(_7, 3), 2)) = _97;
_107 = Adt50::Variant0 { fld0: _32,fld1: _34 };
_24 = _114;
place!(Field::<f32>(Variant(_6, 2), 0)) = _100 as f32;
(*_128).1.3 = _133.1.3 & _42.3;
_77.3 = (*_128).1.3 >> (*_128).1.2;
_31 = (*_85).0 as u8;
_137 = _77.5 as f64;
_114.0 = _81;
(*_85) = _105;
_27 = (*_128).1.3 > (*_128).1.3;
_42.5 = _133.1.5;
Call(_100 = core::intrinsics::transmute(_77.2), ReturnTo(bb75), UnwindUnreachable())
}
bb75 = {
place!(Field::<[isize; 1]>(Variant(_7, 3), 2)) = [_115];
_126 = (*_128).1.3 as u16;
_68.1 = _42.3 as isize;
Goto(bb76)
}
bb76 = {
_24 = _59;
_136 = [_126,_73.0,_126,_126,_126,_126];
_55 = core::ptr::addr_of!((*_55));
SetDiscriminant(_6, 3);
_120 = _68.1;
SetDiscriminant(_37, 0);
_51 = -_53.1;
_20 = -_38.1.2;
_108 = _78.1 | _66.1;
_12 = Adt62::Variant1 { fld0: _123,fld1: _2,fld2: Move(_107),fld3: _36 };
_58 = !_16.1.5;
_130 = _74;
_24.2 = _114.2 * _31;
_69.0 = _89 as f32;
_85 = core::ptr::addr_of_mut!((*_85));
Goto(bb77)
}
bb77 = {
_44 = [Field::<u128>(Variant(_12, 1), 0),_98.0,_98.0];
_86.2 = _69.0 * _133.1.0;
SetDiscriminant(_12, 1);
_95.1 = _108;
_94 = [_22.1.1];
_77 = _38.1;
_154 = _70.0 < _38.1.0;
place!(Field::<[isize; 1]>(Variant(_4, 3), 2)) = [_61.1];
_87 = _40.1.3 as u8;
_33 = Adt54::Variant1 { fld0: _24.0 };
_42.0 = _8 * _109;
_96 = !_108;
_28 = _29 + (*_56);
_66.1 = _78.1;
place!(Field::<[u16; 6]>(Variant(_4, 3), 1)) = _136;
(*_128).1.4 = (*_85).0 as i32;
Call(_130 = core::intrinsics::transmute(Field::<[isize; 1]>(Variant(_4, 3), 2)), ReturnTo(bb78), UnwindUnreachable())
}
bb78 = {
_40.1.0 = -_42.0;
_160 = _91;
_53 = (_106, _51);
_129 = _26.1.0;
_72 = _56;
_51 = !_120;
_38.1.4 = _16.1.1 as i32;
_156 = [_63,_82,_82,_63];
_112 = [_87,_114.2,_114.2,_87,_24.2,_87,_24.2,_114.2];
_133.1.2 = _83.0 * (*_85).0;
Call(place!(Field::<[i16; 7]>(Variant(_12, 1), 1)) = core::intrinsics::transmute(_10), ReturnTo(bb79), UnwindUnreachable())
}
bb79 = {
_156 = [_82,_63,_82,_82];
_106 = (*_128).1.1 | (*_128).1.1;
_16.1.0 = _86.2;
SetDiscriminant(_33, 1);
place!(Field::<Adt50>(Variant(_12, 1), 2)) = Adt50::Variant1 { fld0: _114,fld1: _114.0,fld2: _25,fld3: _86,fld4: _106,fld5: _26.1.4,fld6: _31 };
place!(Field::<i32>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 5)) = _40.1.3 as i32;
_26.1.1 = _106 ^ _61.0;
_105.0 = (*_85).0;
_88 = (_98.0,);
SetDiscriminant(Field::<Adt50>(Variant(_12, 1), 2), 1);
_163 = _22.1.3 as isize;
_102.1 = _16.1.4;
_165.3 = _16.1.3;
place!(Field::<(u16, bool, f32)>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 3)).1 = _78.1 ^ _86.1;
(*_128).1.1 = _16.1.1 << _35.fld1;
_22.0 = [_100,_80,_80,_100,_80];
_86.0 = !_126;
(*_128) = (_22.0, _42);
_40.1 = _42;
_107 = Adt50::Variant0 { fld0: _156,fld1: _34 };
_161.0 = _26.1.0;
_77.0 = _16.1.0 + _78.0;
Goto(bb80)
}
bb80 = {
(*_128).1 = (_49.2, _106, (*_85).0, _38.1.3, _77.4, _16.1.5);
_131.2 = _86.2;
_40.1.0 = -_73.2;
Goto(bb81)
}
bb81 = {
place!(Field::<[i16; 1]>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 2)) = [(*_128).1.1];
_11 = _44;
_158 = _46 as u8;
_77 = (_133.1.0, (*_128).1.1, (*_85).0, (*_128).1.3, _16.1.4, _133.1.5);
_131.2 = -_73.2;
_53.1 = _22.1.3 as isize;
_126 = _158 as u16;
_133.1.2 = !_83.0;
_38.1.3 = !_16.1.3;
_95.1 = !_119;
_42.0 = _75 - _133.1.0;
_55 = core::ptr::addr_of!((*_55));
_143 = -_61.1;
place!(Field::<[u16; 6]>(Variant(_7, 3), 1)) = [_86.0,_126,_126,_86.0,_126,_126];
_42.2 = _70.2 & (*_128).1.2;
Goto(bb82)
}
bb82 = {
_29 = -_24.1;
place!(Field::<(u16, bool, f32)>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 3)) = _86;
_42.2 = -(*_85).0;
SetDiscriminant(_107, 1);
_148 = (*_55);
_44 = [_98.0,_98.0,_100];
_107 = Adt50::Variant1 { fld0: _114,fld1: _81,fld2: Field::<[i16; 1]>(Variant(Field::<Adt50>(Variant(_12, 1), 2), 1), 2),fld3: _86,fld4: (*_128).1.1,fld5: _42.4,fld6: _87 };
_40 = (_38.0, _42);
_93 = Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_12, 1), 2), 1), 3).0 as i32;
Goto(bb83)
}
bb83 = {
_49.2 = (*_128).1.0 - _129;
_26.0 = [_98.0,_88.0,_123,_80,_88.0];
_26.0 = (*_128).0;
place!(Field::<[i128; 2]>(Variant(_12, 1), 3)) = [_76,_26.1.2];
_163 = _41;
_7 = Adt47::Variant0 { fld0: _78 };
_70.1 = !_17;
Goto(bb84)
}
bb84 = {
SetDiscriminant(_7, 1);
Goto(bb85)
}
bb85 = {
place!(Field::<(char, i8, u8)>(Variant(_107, 1), 0)) = (_59.0, _24.1, _158);
_62 = _11;
_55 = core::ptr::addr_of!(_94);
(*_85).0 = (*_128).1.1 as i128;
_64 = _110;
_122 = -_73.2;
_168 = _129;
Goto(bb86)
}
bb86 = {
_155 = Adt62::Variant1 { fld0: _88.0,fld1: _10,fld2: Move(_107),fld3: _103 };
_7 = Adt47::Variant0 { fld0: _69 };
_36 = [_83.0,_20];
_8 = _49.2 - _168;
(*_128).0 = [_123,_88.0,_71,_123,_80];
_133.1.3 = _22.1.3;
_42 = ((*_128).1.0, _53.0, _105.0, _77.3, _77.4, _58);
Goto(bb87)
}
bb87 = {
_172.0 = _42.0 + _75;
_40.1.4 = !_38.1.4;
_65 = _81;
_22.1.0 = Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 3).2 + _66.0;
place!(Field::<[u128; 5]>(Variant(_4, 3), 0)) = _132;
_102.2 = _53.0 - _106;
(*_128).0 = [_123,_80,_88.0,_88.0,Field::<u128>(Variant(_155, 1), 0)];
_70.2 = _77.2 & (*_128).1.2;
_8 = -_122;
_140 = _27;
_67 = _59.1;
_81 = _65;
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 0)) = (Field::<char>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 1), _24.1, _158);
_113 = _24.2 << _88.0;
(*_128).1.4 = _16.1.4;
_31 = _73.1 as u8;
Goto(bb88)
}
bb88 = {
_38 = (_26.0, _42);
place!(Field::<u128>(Variant(_12, 1), 0)) = _98.0 - _88.0;
_94 = [_53.0];
_97 = [_53.1];
_4 = Adt47::Variant2 { fld0: Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_12, 1), 2), 1), 3).2 };
_70.2 = _133.1.4 as i128;
_22.1 = (*_128).1;
Goto(bb89)
}
bb89 = {
_22.1 = (_69.0, _26.1.1, _42.2, _38.1.3, _21, _84);
_88 = (Field::<u128>(Variant(_155, 1), 0),);
_165.4 = _69.1 as i32;
_86.1 = _141 < _38.1.5;
place!(Field::<[i16; 1]>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 2)) = _25;
(*_85) = (_76,);
_131.1 = _42.0 < _109;
_151 = _65;
place!(Field::<u8>(Variant(place!(Field::<Adt50>(Variant(_12, 1), 2)), 1), 6)) = _26.1.4 as u8;
_38.1.5 = _40.1.5;
Goto(bb90)
}
bb90 = {
_73 = (_86.0, _52, (*_128).1.0);
place!(Field::<[u16; 6]>(Variant(_6, 3), 1)) = [Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_12, 1), 2), 1), 3).0,_73.0,_86.0,Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 3).0,Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 3).0,_86.0];
(*_128).1.2 = _38.1.2 + _38.1.2;
_63 = _82 * _82;
_185 = !_51;
_77.5 = !_70.5;
_34 = [_77.2,_40.1.2];
_38.1.2 = _105.0;
(*_85).0 = !(*_128).1.2;
Goto(bb91)
}
bb91 = {
_111 = _14;
Goto(bb92)
}
bb92 = {
_174 = _26.1.0 * _172.0;
place!(Field::<Adt50>(Variant(_12, 1), 2)) = Adt50::Variant1 { fld0: _59,fld1: _59.0,fld2: Field::<[i16; 1]>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 2),fld3: Field::<(u16, bool, f32)>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 3),fld4: _38.1.1,fld5: _22.1.4,fld6: Field::<u8>(Variant(Field::<Adt50>(Variant(_155, 1), 2), 1), 6) };
_139 = _73.0;
_128 = core::ptr::addr_of_mut!(_38);
_149 = Field::<u8>(Variant(Field::<Adt50>(Variant(_12, 1), 2), 1), 6) as usize;
_42.3 = _22.1.3 * _133.1.3;
_134 = [_100,_88.0,_98.0,_71,_88.0];
_143 = _41 & _51;
_176 = _165.3 < _149;
_78.1 = _66.1;
_38.1.3 = !_22.1.3;
_68 = (_106, _61.1);
_61 = (_42.1, _53.1);
_173 = [Field::<u128>(Variant(_12, 1), 0),_100,_88.0];
_189 = !_74;
SetDiscriminant(_12, 2);
place!(Field::<[u128; 5]>(Variant(_6, 3), 0)) = _22.0;
_30 = _1 - _15;
_180 = core::ptr::addr_of_mut!(place!(Field::<(f32, bool)>(Variant(_7, 0), 0)));
Goto(bb93)
}
bb93 = {
_68.0 = _102.2;
_172.0 = _31 as f32;
_122 = _77.0;
_179 = Field::<[u16; 6]>(Variant(_6, 3), 1);
_131 = _73;
_157 = _78.0 as isize;
_158 = !_114.2;
Call((*_128).1.2 = fn19(Move(_155), _75, _13, _78, _21, _83.0, _77, _94, _40.1.4, _73, _185, _154, _95.1), ReturnTo(bb94), UnwindUnreachable())
}
bb94 = {
_37 = Adt63::Variant0 { fld0: _83.0 };
_64 = _42.3;
_1 = -_30;
_59.2 = (*_180).0 as u8;
(*_128).1 = (Field::<(f32, bool)>(Variant(_7, 0), 0).0, _68.0, _70.2, _149, _77.4, _22.1.5);
SetDiscriminant(_37, 1);
_16.1.3 = !(*_128).1.3;
_193.0.0 = core::ptr::addr_of_mut!(_159);
_16.1.2 = _70.2 << _67;
_187 = _19 << _68.0;
_16.1 = (*_128).1;
place!(Field::<f32>(Variant(_4, 2), 0)) = _133.1.3 as f32;
_45 = _81;
_53 = (_42.1, _187);
_53.1 = _143 + _51;
_16.1.3 = _77.3 << (*_56);
(*_56) = !_114.1;
Goto(bb95)
}
bb95 = {
_172 = (_109, _69.1);
_133 = (_22.0, (*_128).1);
_124 = [_100,_71,_98.0,_98.0,_71];
(*_128).1.1 = -_53.0;
_1 = _15 * _137;
_35.fld0 = core::ptr::addr_of_mut!(_159);
_16.1.0 = _69.0;
_168 = _101 as f32;
place!(Field::<(f32, bool)>(Variant(_37, 1), 0)) = (_42.0, _49.1);
_24 = (_48, _54, _87);
Goto(bb96)
}
bb96 = {
_161.1 = (*_180).1;
_164 = _120 | _185;
_38.1.3 = _64 >> _41;
_133.1.2 = !_40.1.2;
(*_128).1.2 = !(*_85).0;
(*_180) = (_16.1.0, _108);
_147 = -_157;
_105 = (_22.1.2,);
_154 = _77.0 == _73.2;
_86.0 = _131.0;
_42.5 = _49.1 as u32;
_84 = _58 << (*_85).0;
_66 = _161;
Goto(bb97)
}
bb97 = {
SetDiscriminant(_4, 1);
_42 = _133.1;
_112 = _5;
_42.3 = _102.1 as usize;
_57 = _38.1.0;
_14 = _114.1;
SetDiscriminant(_7, 1);
_126 = _86.0 + _73.0;
_133 = (_38.0, _70);
_159 = core::ptr::addr_of_mut!(_65);
Call(_111 = core::intrinsics::transmute(_78.1), ReturnTo(bb98), UnwindUnreachable())
}
bb98 = {
_49.1 = _131.1;
_40.1 = _22.1;
_14 = _67 >> _164;
_72 = core::ptr::addr_of_mut!((*_72));
_193.1 = _131.0 as i32;
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = [_41];
_169.fld2 = [_38.1.3,_64,_16.1.3,_165.3];
_68 = (_106, _187);
place!(Field::<isize>(Variant(_4, 1), 2)) = -_157;
_40.1.4 = !_93;
_40 = (*_128);
Goto(bb99)
}
bb99 = {
(*_128).1.0 = _75;
place!(Field::<*mut *mut char>(Variant(_4, 1), 3)) = core::ptr::addr_of_mut!(_159);
(*_56) = !_28;
_205 = !Field::<isize>(Variant(_4, 1), 2);
(*_56) = -_29;
place!(Field::<*mut *mut char>(Variant(_4, 1), 3)) = _193.0.0;
_68 = ((*_128).1.1, _157);
_209.2 = _133.1.4 as i16;
Call(_193.1 = core::intrinsics::bswap(_42.4), ReturnTo(bb100), UnwindUnreachable())
}
bb100 = {
_172.0 = _61.0 as f32;
_16 = ((*_128).0, _38.1);
_85 = core::ptr::addr_of_mut!((*_85));
_157 = _164;
_167 = _180;
_112 = [_24.2,_87,_31,_31,_158,_113,_158,_31];
_40.1.5 = _35.fld1 as u32;
_125 = Adt59::Variant0 { fld0: _167,fld1: _95 };
_52 = _108 | _108;
place!(Field::<[isize; 1]>(Variant(_7, 1), 1)) = [_143];
_142 = _38.1.2;
_173 = [_88.0,_123,_88.0];
_183 = Move(_125);
(*_128).0 = [_100,_88.0,_80,_100,_80];
_26.1.1 = _17;
_113 = _74 as u8;
place!(Field::<*mut f64>(Variant(_4, 1), 5)) = core::ptr::addr_of_mut!(_46);
_133.1.1 = (*_128).1.1 & (*_128).1.1;
SetDiscriminant(_183, 0);
_182 = _108;
_29 = _28 - _67;
place!(Field::<i64>(Variant(_4, 1), 6)) = _82;
Goto(bb101)
}
bb101 = {
_1 = _15 + _15;
_131.1 = _172.1;
_133.1 = (_49.2, _22.1.1, (*_85).0, _40.1.3, _193.1, (*_128).1.5);
place!(Field::<isize>(Variant(_7, 1), 2)) = !_185;
_4 = Adt47::Variant2 { fld0: _50 };
_125 = Adt59::Variant0 { fld0: _167,fld1: _69 };
_41 = _19;
Call(_70.4 = core::intrinsics::bswap(_16.1.4), ReturnTo(bb102), UnwindUnreachable())
}
bb102 = {
(*_159) = _114.0;
_161 = (_172.0, _172.1);
SetDiscriminant(_125, 1);
_86.1 = !_52;
_152 = _44;
_165 = (_77.0, _22.1.1, _16.1.2, _38.1.3, _42.4, _40.1.5);
Goto(bb103)
}
bb103 = {
_86 = (_73.0, _66.1, _57);
_123 = !_71;
_102.0.0 = _193.0.0;
(*_128) = (Field::<[u128; 5]>(Variant(_6, 3), 0), _22.1);
_77.2 = _26.1.2;
_77.0 = -_95.0;
_89 = (*_128).1.2 as f64;
_19 = _24.2 as isize;
_111 = _80 as i8;
_201 = _59.2;
Goto(bb104)
}
bb104 = {
_42.2 = !_40.1.2;
Call(_38.1.5 = core::intrinsics::bswap(_141), ReturnTo(bb105), UnwindUnreachable())
}
bb105 = {
_117 = Adt48::Variant0 { fld0: _189,fld1: _22.1.2,fld2: _187,fld3: (*_72),fld4: _11,fld5: _128,fld6: _82 };
_16.1.3 = _40.1.3;
place!(Field::<*mut ([u128; 5], (f32, i16, i128, usize, i32, u32))>(Variant(_37, 1), 2)) = core::ptr::addr_of_mut!((*_128));
_105 = (*_85);
_165.4 = -_93;
_78.0 = -_77.0;
_63 = -Field::<i64>(Variant(_117, 0), 6);
place!(Field::<*mut char>(Variant(_125, 1), 3)) = core::ptr::addr_of_mut!(_196);
_56 = core::ptr::addr_of_mut!(_54);
_24.2 = _113 - _114.2;
SetDiscriminant(_4, 0);
Goto(bb106)
}
bb106 = {
_102.0 = (_193.0.0,);
_209.0 = _102.0;
place!(Field::<(f32, bool)>(Variant(_4, 0), 0)) = (_57, Field::<(f32, bool)>(Variant(_37, 1), 0).1);
_167 = core::ptr::addr_of_mut!(place!(Field::<(f32, bool)>(Variant(_183, 0), 1)));
_69.0 = _161.0 + (*_128).1.0;
place!(Field::<u8>(Variant(_7, 1), 7)) = _53.0 as u8;
place!(Field::<[i16; 1]>(Variant(_125, 1), 1)) = (*_55);
_219 = _69.0;
_203 = !(*_72);
_71 = !_98.0;
_133.1.5 = !_58;
place!(Field::<([u128; 5], (f32, i16, i128, usize, i32, u32))>(Variant(_125, 1), 5)).1.5 = _66.1 as u32;
_61.1 = !_163;
place!(Field::<u16>(Variant(_7, 1), 4)) = _131.0 >> _59.1;
_172.0 = Field::<u8>(Variant(_7, 1), 7) as f32;
_42.1 = _106;
place!(Field::<[i16; 1]>(Variant(_125, 1), 1)) = [_133.1.1];
_218 = [_88.0,_123,_71];
_215.1.4 = _113 as i32;
_40.1.0 = _133.1.1 as f32;
_124 = _40.0;
_157 = !_187;
_120 = -_68.1;
RET = Adt49::Variant1 { fld0: _102,fld1: (*_128).1,fld2: Field::<(f32, bool)>(Variant(_4, 0), 0),fld3: _168,fld4: _98,fld5: _55,fld6: _85,fld7: _201 };
Goto(bb107)
}
bb107 = {
Call(_229 = dump_var(18_usize, 71_usize, Move(_71), 141_usize, Move(_141), 62_usize, Move(_62), 51_usize, Move(_51)), ReturnTo(bb108), UnwindUnreachable())
}
bb108 = {
Call(_229 = dump_var(18_usize, 147_usize, Move(_147), 105_usize, Move(_105), 34_usize, Move(_34), 136_usize, Move(_136)), ReturnTo(bb109), UnwindUnreachable())
}
bb109 = {
Call(_229 = dump_var(18_usize, 13_usize, Move(_13), 149_usize, Move(_149), 81_usize, Move(_81), 114_usize, Move(_114)), ReturnTo(bb110), UnwindUnreachable())
}
bb110 = {
Call(_229 = dump_var(18_usize, 20_usize, Move(_20), 205_usize, Move(_205), 59_usize, Move(_59), 173_usize, Move(_173)), ReturnTo(bb111), UnwindUnreachable())
}
bb111 = {
Call(_229 = dump_var(18_usize, 47_usize, Move(_47), 10_usize, Move(_10), 98_usize, Move(_98), 151_usize, Move(_151)), ReturnTo(bb112), UnwindUnreachable())
}
bb112 = {
Call(_229 = dump_var(18_usize, 93_usize, Move(_93), 176_usize, Move(_176), 120_usize, Move(_120), 103_usize, Move(_103)), ReturnTo(bb113), UnwindUnreachable())
}
bb113 = {
Call(_229 = dump_var(18_usize, 134_usize, Move(_134), 156_usize, Move(_156), 19_usize, Move(_19), 74_usize, Move(_74)), ReturnTo(bb114), UnwindUnreachable())
}
bb114 = {
Call(_229 = dump_var(18_usize, 130_usize, Move(_130), 201_usize, Move(_201), 54_usize, Move(_54), 5_usize, Move(_5)), ReturnTo(bb115), UnwindUnreachable())
}
bb115 = {
Call(_229 = dump_var(18_usize, 9_usize, Move(_9), 115_usize, Move(_115), 76_usize, Move(_76), 87_usize, Move(_87)), ReturnTo(bb116), UnwindUnreachable())
}
bb116 = {
Call(_229 = dump_var(18_usize, 132_usize, Move(_132), 106_usize, Move(_106), 2_usize, Move(_2), 123_usize, Move(_123)), ReturnTo(bb117), UnwindUnreachable())
}
bb117 = {
Call(_229 = dump_var(18_usize, 127_usize, Move(_127), 63_usize, Move(_63), 32_usize, Move(_32), 29_usize, Move(_29)), ReturnTo(bb118), UnwindUnreachable())
}
bb118 = {
Call(_229 = dump_var(18_usize, 68_usize, Move(_68), 23_usize, Move(_23), 154_usize, Move(_154), 44_usize, Move(_44)), ReturnTo(bb119), UnwindUnreachable())
}
bb119 = {
Call(_229 = dump_var(18_usize, 119_usize, Move(_119), 48_usize, Move(_48), 185_usize, Move(_185), 28_usize, Move(_28)), ReturnTo(bb120), UnwindUnreachable())
}
bb120 = {
Call(_229 = dump_var(18_usize, 112_usize, Move(_112), 230_usize, _230, 230_usize, _230, 230_usize, _230), ReturnTo(bb121), UnwindUnreachable())
}
bb121 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: Adt62,mut _2: f32,mut _3: isize,mut _4: (f32, bool),mut _5: i32,mut _6: i128,mut _7: (f32, i16, i128, usize, i32, u32),mut _8: [i16; 1],mut _9: i32,mut _10: (u16, bool, f32),mut _11: isize,mut _12: bool,mut _13: bool) -> i128 {
mir! {
type RET = i128;
let _14: (f32, i16, i128, usize, i32, u32);
let _15: i64;
let _16: isize;
let _17: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32));
let _18: [u128; 5];
let _19: [i16; 1];
let _20: ();
let _21: ();
{
_4.1 = _10.1 ^ _10.1;
_4 = (_7.0, _13);
RET = _7.2;
_14.3 = !_7.3;
_13 = !_4.1;
SetDiscriminant(_1, 1);
_14.0 = _7.2 as f32;
_14.0 = _10.2;
_4 = (_14.0, _10.1);
_5 = '\u{d993d}' as i32;
_14.1 = _7.1 * _7.1;
_16 = _11;
_15 = -(-6512134939398421082_i64);
_18 = [182701647171921947085076617304097818512_u128,22035770677598715113663303666567301165_u128,88819937397163431743197223058403823795_u128,151135848251195018755185955951613026465_u128,193310506131248515996849858178320979752_u128];
_7.3 = _14.3;
_14 = (_7.0, _7.1, _6, _7.3, _9, _7.5);
place!(Field::<[i128; 2]>(Variant(_1, 1), 3)) = [RET,_7.2];
_7.1 = -_14.1;
_16 = _11;
_18 = [215767634112812767670542679985460958967_u128,17807047774449856839019952913797320040_u128,52052749407368866565725526799526829882_u128,295217351280858365326030447746370966331_u128,190039846038006960172941968799732985396_u128];
_2 = 187_u8 as f32;
_5 = '\u{81b39}' as i32;
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(19_usize, 6_usize, Move(_6), 11_usize, Move(_11), 3_usize, Move(_3), 8_usize, Move(_8)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(19_usize, 13_usize, Move(_13), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(2157346318960876876_u64), std::hint::black_box('\u{7e993}'), std::hint::black_box(9_isize), std::hint::black_box(124_i8), std::hint::black_box(3751_i16), std::hint::black_box(123045139_i32), std::hint::black_box(73806591287786162850282558074837036434_u128), std::hint::black_box(1563525882_u32), std::hint::black_box(0_usize), std::hint::black_box(129_u8));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt47 {
Variant0{
fld0: (f32, bool),

},
Variant1{
fld0: [u8; 8],
fld1: [isize; 1],
fld2: isize,
fld3: *mut *mut char,
fld4: u16,
fld5: *mut f64,
fld6: i64,
fld7: u8,

},
Variant2{
fld0: f32,

},
Variant3{
fld0: [u128; 5],
fld1: [u16; 6],
fld2: [isize; 1],
fld3: [u8; 8],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: u64,
fld1: i128,
fld2: isize,
fld3: i8,
fld4: [u128; 3],
fld5: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)),
fld6: i64,

},
Variant1{
fld0: [i16; 1],
fld1: usize,
fld2: isize,
fld3: u16,
fld4: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)),
fld5: f32,
fld6: *const (i16, isize),
fld7: [i16; 7],

},
Variant2{
fld0: bool,
fld1: Adt47,
fld2: (i64, u8, *mut i8),
fld3: *const (i16, isize),

},
Variant3{
fld0: Adt47,
fld1: char,
fld2: *const (i16, isize),
fld3: i8,
fld4: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)),
fld5: (f32, i16, i128, usize, i32, u32),
fld6: *mut (f32, bool),

}}
#[derive(Debug)]
pub enum Adt49 {
Variant0{
fld0: (char, i8, u8),
fld1: (i128,),
fld2: u64,
fld3: ((*mut *mut char,), i32, i16),
fld4: *mut char,

},
Variant1{
fld0: ((*mut *mut char,), i32, i16),
fld1: (f32, i16, i128, usize, i32, u32),
fld2: (f32, bool),
fld3: f32,
fld4: (u128,),
fld5: *const [i16; 1],
fld6: *mut (i128,),
fld7: u8,

},
Variant2{
fld0: u64,
fld1: (f32, i16, i128, usize, i32, u32),
fld2: *mut *mut char,
fld3: i128,
fld4: [i64; 4],
fld5: u128,

},
Variant3{
fld0: u16,
fld1: (f32, bool),
fld2: [isize; 1],
fld3: *mut char,
fld4: *mut *mut char,
fld5: u128,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: [i64; 4],
fld1: [i128; 2],

},
Variant1{
fld0: (char, i8, u8),
fld1: char,
fld2: [i16; 1],
fld3: (u16, bool, f32),
fld4: i16,
fld5: i32,
fld6: u8,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: u16,
fld1: ((*mut *mut char,), i32, i16),

},
Variant1{
fld0: *mut (i128,),
fld1: f32,
fld2: i8,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: i128,
fld2: isize,
fld3: usize,
fld4: (i64, u8, *mut i8),
fld5: (char, i8, u8),
fld6: (i128,),

},
Variant1{
fld0: u16,
fld1: [i16; 7],
fld2: [u128; 5],
fld3: ([u128; 5], (f32, i16, i128, usize, i32, u32)),
fld4: *const (i16, isize),
fld5: *mut i8,
fld6: *mut f64,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: u8,
fld1: usize,
fld2: (i16, isize),
fld3: u32,
fld4: (u16, bool, f32),

},
Variant1{
fld0: *mut (f32, bool),
fld1: Adt47,
fld2: isize,
fld3: i64,
fld4: *const [i16; 1],
fld5: *mut char,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: (f32, bool),
fld1: *const (i16, isize),
fld2: isize,
fld3: i64,
fld4: Adt51,
fld5: u32,

},
Variant1{
fld0: char,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: (char, i8, u8),
fld1: (i128,),
fld2: Adt50,
fld3: [i64; 4],
fld4: Adt54,
fld5: Adt52,
fld6: i64,

},
Variant1{
fld0: *mut f64,
fld1: *const [i16; 1],
fld2: Adt48,
fld3: (*mut *mut char,),
fld4: ((*mut *mut char,), i32, i16),
fld5: (f32, bool),

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: u16,
fld1: [usize; 4],
fld2: Adt49,
fld3: u32,
fld4: (*mut *mut char,),
fld5: Adt54,

},
Variant1{
fld0: [i64; 4],
fld1: Adt51,

},
Variant2{
fld0: (f32, bool),
fld1: u64,
fld2: Adt51,
fld3: *const (i16, isize),
fld4: u16,
fld5: f64,
fld6: Adt55,
fld7: *mut f64,

}}
#[derive(Debug)]
pub struct Adt57 {
fld0: *mut *mut char,
fld1: u64,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: Adt52,
fld1: Adt49,
fld2: [usize; 4],
}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: *mut (f32, bool),
fld1: (f32, bool),

},
Variant1{
fld0: Adt56,
fld1: [i16; 1],
fld2: [u128; 3],
fld3: *mut char,
fld4: f32,
fld5: ([u128; 5], (f32, i16, i128, usize, i32, u32)),

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: Adt48,
fld1: (*mut *mut char,),
fld2: isize,
fld3: i8,
fld4: [u128; 5],
fld5: [u128; 3],
fld6: u64,
fld7: i128,

},
Variant1{
fld0: ((*mut *mut char,), i32, i16),
fld1: Adt49,
fld2: *mut char,

},
Variant2{
fld0: *mut (f32, bool),
fld1: [u128; 3],
fld2: Adt55,
fld3: f64,
fld4: i16,
fld5: Adt59,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: ((*mut *mut char,), i32, i16),
fld1: u8,
fld2: u16,
}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: [u128; 5],
fld1: (u16, bool, f32),
fld2: Adt48,
fld3: Adt60,
fld4: u64,

},
Variant1{
fld0: u128,
fld1: [i16; 7],
fld2: Adt50,
fld3: [i128; 2],

},
Variant2{
fld0: Adt54,
fld1: u32,

}}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: i128,

},
Variant1{
fld0: (f32, bool),
fld1: Adt59,
fld2: *mut ([u128; 5], (f32, i16, i128, usize, i32, u32)),
fld3: u32,
fld4: u8,

},
Variant2{
fld0: Adt49,
fld1: Adt56,

},
Variant3{
fld0: *mut (i128,),
fld1: Adt47,
fld2: [u8; 8],
fld3: [i16; 7],
fld4: Adt58,
fld5: *mut *mut char,
fld6: [i64; 4],
fld7: Adt56,

}}

