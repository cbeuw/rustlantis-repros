#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i64,mut _2: u8,mut _3: u64,mut _4: i8,mut _5: i16) -> char {
mir! {
type RET = char;
let _6: i16;
let _7: Adt57;
let _8: Adt63;
let _9: i64;
let _10: usize;
let _11: Adt61;
let _12: [u8; 3];
let _13: [u16; 2];
let _14: f64;
let _15: [u64; 8];
let _16: f32;
let _17: [i64; 6];
let _18: char;
let _19: isize;
let _20: [i32; 4];
let _21: char;
let _22: [u16; 2];
let _23: [bool; 5];
let _24: u32;
let _25: [u128; 3];
let _26: isize;
let _27: ();
let _28: ();
{
_2 = 216_u8 | 51_u8;
RET = '\u{e712b}';
_3 = 16256767016738714196_u64;
_5 = (-1966_i16);
_4 = 88_i8 - 33_i8;
_3 = 7230470815834934465_u64;
match _5 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463463374607431768209490 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = 138983535758671854_u64;
_1 = !(-1166168615299943786_i64);
Call(_2 = fn1(_3, _4, _4, _5, _5, _4, _5, _4), bb10, UnwindUnreachable())
}
bb10 = {
RET = '\u{3182a}';
RET = '\u{10d0a0}';
RET = '\u{92061}';
_5 = 122666650000334113743952746609207198973_u128 as i16;
_5 = (-28987_i16) - 20980_i16;
_3 = 18060957940833486237_u64 | 17075394497397357668_u64;
RET = '\u{b3000}';
RET = '\u{181e8}';
RET = '\u{8b4a4}';
_6 = _5;
_1 = !3543579195552377567_i64;
_5 = (-240842423_i32) as i16;
_2 = !153_u8;
_5 = _6 & _6;
RET = '\u{74913}';
_1 = (-8158637503910915902_i64) * (-6372863994071239328_i64);
Goto(bb11)
}
bb11 = {
_6 = _5 << _5;
_6 = _5;
_6 = (-1769950396_i32) as i16;
_2 = _3 as u8;
_5 = RET as i16;
_1 = -7293658968315342279_i64;
_2 = 50710_u16 as u8;
_6 = _5 << _3;
_3 = (-1891251383_i32) as u64;
RET = '\u{39ad0}';
_10 = 12149188633219787262_usize - 2291325220029384545_usize;
_2 = 57_u8;
_2 = 90_u8 * 116_u8;
_3 = !15664664472464789890_u64;
_9 = _1;
_2 = !176_u8;
_2 = !67_u8;
RET = '\u{69a0d}';
_3 = 585559314859757226_u64 + 7689783459366493087_u64;
_3 = !1771283732102242262_u64;
_9 = _1 * _1;
_10 = 7_usize ^ 1_usize;
_3 = 12447432228720718570_u64 + 13666805162522790275_u64;
_6 = 1340360629_i32 as i16;
Goto(bb12)
}
bb12 = {
_6 = _4 as i16;
_1 = _9 >> _5;
RET = '\u{4c32b}';
_2 = 175_u8 * 62_u8;
_2 = 220_u8 | 60_u8;
_2 = 111_u8;
_12 = [_2,_2,_2];
_12 = [_2,_2,_2];
_1 = _9;
_1 = _9;
RET = '\u{2da38}';
_13 = [18772_u16,32364_u16];
_13 = [20497_u16,49208_u16];
_2 = _9 as u8;
_13 = [35028_u16,26384_u16];
_4 = 9678261900930143211046120608006580404_u128 as i8;
_5 = _6 >> _3;
_3 = !9895264880220258165_u64;
_10 = _5 as usize;
_5 = !_6;
_14 = 128571488_i32 as f64;
_14 = _2 as f64;
RET = '\u{d869f}';
_1 = _9 << _5;
_10 = 5184386364055522294_usize | 3_usize;
Goto(bb13)
}
bb13 = {
_15 = [_3,_3,_3,_3,_3,_3,_3,_3];
_5 = !_6;
_10 = 4332184154525644119_usize * 7_usize;
_9 = _1;
_16 = _4 as f32;
_1 = _9 >> _6;
RET = '\u{b4842}';
_3 = _2 as u64;
_12 = [_2,_2,_2];
_1 = _14 as i64;
_18 = RET;
_18 = RET;
_13 = [62082_u16,63522_u16];
_15 = [_3,_3,_3,_3,_3,_3,_3,_3];
_18 = RET;
_12 = [_2,_2,_2];
RET = _18;
_17 = [_1,_1,_9,_9,_9,_9];
RET = _18;
_6 = _2 as i16;
Goto(bb14)
}
bb14 = {
_6 = !_5;
_9 = !_1;
RET = _18;
_21 = RET;
_13 = [64977_u16,46190_u16];
_19 = _5 as isize;
_12 = [_2,_2,_2];
_3 = !14195350906853741720_u64;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(0_usize, 12_usize, Move(_12), 9_usize, Move(_9), 21_usize, Move(_21), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(0_usize, 18_usize, Move(_18), 4_usize, Move(_4), 10_usize, Move(_10), 28_usize, _28), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u64,mut _2: i8,mut _3: i8,mut _4: i16,mut _5: i16,mut _6: i8,mut _7: i16,mut _8: i8) -> u8 {
mir! {
type RET = u8;
let _9: f64;
let _10: Adt59;
let _11: *const ([u16; 2],);
let _12: [isize; 1];
let _13: [u16; 2];
let _14: i128;
let _15: f64;
let _16: ([u16; 2],);
let _17: *mut [usize; 7];
let _18: u32;
let _19: u128;
let _20: i32;
let _21: i16;
let _22: [char; 5];
let _23: (i32,);
let _24: f32;
let _25: bool;
let _26: [char; 5];
let _27: isize;
let _28: [i64; 6];
let _29: ();
let _30: ();
{
_7 = 1505476666_i32 as i16;
_1 = !10534826519577635680_u64;
_4 = _5 - _5;
RET = 145_u8 >> _2;
_5 = -_4;
_3 = 9154046138943200873_i64 as i8;
_7 = _4;
_3 = false as i8;
_9 = 6117970221091356176_usize as f64;
_4 = true as i16;
_5 = _4;
_3 = RET as i8;
_6 = -_3;
_10 = Adt59::Variant0 { fld0: (-7635550384394269784_i64) };
_10 = Adt59::Variant0 { fld0: (-2374682025401365604_i64) };
_1 = 2194260108325573055_u64 >> _2;
_4 = -_5;
_5 = -_7;
_10 = Adt59::Variant0 { fld0: (-4925634041582503156_i64) };
RET = 44_u8;
_3 = _6 + _2;
place!(Field::<i64>(Variant(_10, 0), 0)) = (-29_isize) as i64;
_2 = !_6;
RET = !5_u8;
Call(_4 = fn2(_3, _3, _7, _3, _7, _3, _6, _8, _1, _3, _6, _2, _6, _8), bb1, UnwindUnreachable())
}
bb1 = {
_2 = -_3;
_10 = Adt59::Variant0 { fld0: (-2200008307441389015_i64) };
_10 = Adt59::Variant0 { fld0: 1963096329739236120_i64 };
_2 = _6 * _6;
_5 = !_4;
_4 = (-547817608198698672_i64) as i16;
_7 = -_5;
_2 = _3;
_1 = 1957352729442000444_u64;
place!(Field::<i64>(Variant(_10, 0), 0)) = 1522436651389028275_i64 - (-5756333675040444235_i64);
SetDiscriminant(_10, 1);
_14 = false as i128;
place!(Field::<u128>(Variant(_10, 1), 1)) = !163241543627244267879597147290573012454_u128;
_16.0 = [33810_u16,850_u16];
place!(Field::<i16>(Variant(_10, 1), 3)) = _7;
place!(Field::<i32>(Variant(_10, 1), 0)) = !1035795290_i32;
_12 = [9223372036854775807_isize];
_2 = _6 & _6;
_14 = 44522611704156973844610329155191373322_i128;
_7 = 3568344064_u32 as i16;
_10 = Adt59::Variant0 { fld0: (-2602270392898129718_i64) };
_2 = 1093025261465860157_i64 as i8;
_10 = Adt59::Variant0 { fld0: (-1075946614394864473_i64) };
Goto(bb2)
}
bb2 = {
_15 = _9;
_12 = [(-9223372036854775808_isize)];
place!(Field::<i64>(Variant(_10, 0), 0)) = (-6163521140533379890_i64) ^ (-4478230668832862186_i64);
_11 = core::ptr::addr_of!(_16);
_15 = -_9;
SetDiscriminant(_10, 0);
_10 = Adt59::Variant1 { fld0: (-539369625_i32),fld1: 304791280530532970027982074692446397223_u128,fld2: (*_11).0,fld3: _5 };
_13 = [27290_u16,40865_u16];
_7 = Field::<i16>(Variant(_10, 1), 3) | _5;
(*_11).0 = [21859_u16,18113_u16];
_4 = _7 >> _6;
_7 = _4;
place!(Field::<u128>(Variant(_10, 1), 1)) = 269915907241670178072626457279712487155_u128 - 221416472181153166289358029125114495109_u128;
_6 = _3 * _3;
_19 = _8 as u128;
match _14 {
44522611704156973844610329155191373322 => bb4,
_ => bb3
}
}
bb3 = {
_2 = -_3;
_10 = Adt59::Variant0 { fld0: (-2200008307441389015_i64) };
_10 = Adt59::Variant0 { fld0: 1963096329739236120_i64 };
_2 = _6 * _6;
_5 = !_4;
_4 = (-547817608198698672_i64) as i16;
_7 = -_5;
_2 = _3;
_1 = 1957352729442000444_u64;
place!(Field::<i64>(Variant(_10, 0), 0)) = 1522436651389028275_i64 - (-5756333675040444235_i64);
SetDiscriminant(_10, 1);
_14 = false as i128;
place!(Field::<u128>(Variant(_10, 1), 1)) = !163241543627244267879597147290573012454_u128;
_16.0 = [33810_u16,850_u16];
place!(Field::<i16>(Variant(_10, 1), 3)) = _7;
place!(Field::<i32>(Variant(_10, 1), 0)) = !1035795290_i32;
_12 = [9223372036854775807_isize];
_2 = _6 & _6;
_14 = 44522611704156973844610329155191373322_i128;
_7 = 3568344064_u32 as i16;
_10 = Adt59::Variant0 { fld0: (-2602270392898129718_i64) };
_2 = 1093025261465860157_i64 as i8;
_10 = Adt59::Variant0 { fld0: (-1075946614394864473_i64) };
Goto(bb2)
}
bb4 = {
_3 = !_6;
_10 = Adt59::Variant1 { fld0: (-1688648526_i32),fld1: _19,fld2: _13,fld3: _4 };
place!(Field::<u128>(Variant(_10, 1), 1)) = _19;
place!(Field::<i32>(Variant(_10, 1), 0)) = _4 as i32;
_10 = Adt59::Variant1 { fld0: (-453465166_i32),fld1: _19,fld2: (*_11).0,fld3: _7 };
Goto(bb5)
}
bb5 = {
_16.0 = [53580_u16,24789_u16];
_4 = _3 as i16;
_21 = !_7;
_9 = 2983613327_u32 as f64;
_18 = 1271740510_u32;
RET = !158_u8;
_16 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
(*_11) = (_13,);
_7 = -Field::<i16>(Variant(_10, 1), 3);
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [52782_u16,54059_u16];
_23.0 = -301840966_i32;
_7 = _21 << _21;
_9 = _15 + _15;
_21 = _23.0 as i16;
_9 = -_15;
(*_11).0 = [37457_u16,22399_u16];
_22 = ['\u{fe868}','\u{82c42}','\u{85b2}','\u{aac36}','\u{19c54}'];
_21 = _14 as i16;
_16 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
match _1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
1957352729442000444 => bb11,
_ => bb10
}
}
bb6 = {
_3 = !_6;
_10 = Adt59::Variant1 { fld0: (-1688648526_i32),fld1: _19,fld2: _13,fld3: _4 };
place!(Field::<u128>(Variant(_10, 1), 1)) = _19;
place!(Field::<i32>(Variant(_10, 1), 0)) = _4 as i32;
_10 = Adt59::Variant1 { fld0: (-453465166_i32),fld1: _19,fld2: (*_11).0,fld3: _7 };
Goto(bb5)
}
bb7 = {
_2 = -_3;
_10 = Adt59::Variant0 { fld0: (-2200008307441389015_i64) };
_10 = Adt59::Variant0 { fld0: 1963096329739236120_i64 };
_2 = _6 * _6;
_5 = !_4;
_4 = (-547817608198698672_i64) as i16;
_7 = -_5;
_2 = _3;
_1 = 1957352729442000444_u64;
place!(Field::<i64>(Variant(_10, 0), 0)) = 1522436651389028275_i64 - (-5756333675040444235_i64);
SetDiscriminant(_10, 1);
_14 = false as i128;
place!(Field::<u128>(Variant(_10, 1), 1)) = !163241543627244267879597147290573012454_u128;
_16.0 = [33810_u16,850_u16];
place!(Field::<i16>(Variant(_10, 1), 3)) = _7;
place!(Field::<i32>(Variant(_10, 1), 0)) = !1035795290_i32;
_12 = [9223372036854775807_isize];
_2 = _6 & _6;
_14 = 44522611704156973844610329155191373322_i128;
_7 = 3568344064_u32 as i16;
_10 = Adt59::Variant0 { fld0: (-2602270392898129718_i64) };
_2 = 1093025261465860157_i64 as i8;
_10 = Adt59::Variant0 { fld0: (-1075946614394864473_i64) };
Goto(bb2)
}
bb8 = {
_15 = _9;
_12 = [(-9223372036854775808_isize)];
place!(Field::<i64>(Variant(_10, 0), 0)) = (-6163521140533379890_i64) ^ (-4478230668832862186_i64);
_11 = core::ptr::addr_of!(_16);
_15 = -_9;
SetDiscriminant(_10, 0);
_10 = Adt59::Variant1 { fld0: (-539369625_i32),fld1: 304791280530532970027982074692446397223_u128,fld2: (*_11).0,fld3: _5 };
_13 = [27290_u16,40865_u16];
_7 = Field::<i16>(Variant(_10, 1), 3) | _5;
(*_11).0 = [21859_u16,18113_u16];
_4 = _7 >> _6;
_7 = _4;
place!(Field::<u128>(Variant(_10, 1), 1)) = 269915907241670178072626457279712487155_u128 - 221416472181153166289358029125114495109_u128;
_6 = _3 * _3;
_19 = _8 as u128;
match _14 {
44522611704156973844610329155191373322 => bb4,
_ => bb3
}
}
bb9 = {
_2 = -_3;
_10 = Adt59::Variant0 { fld0: (-2200008307441389015_i64) };
_10 = Adt59::Variant0 { fld0: 1963096329739236120_i64 };
_2 = _6 * _6;
_5 = !_4;
_4 = (-547817608198698672_i64) as i16;
_7 = -_5;
_2 = _3;
_1 = 1957352729442000444_u64;
place!(Field::<i64>(Variant(_10, 0), 0)) = 1522436651389028275_i64 - (-5756333675040444235_i64);
SetDiscriminant(_10, 1);
_14 = false as i128;
place!(Field::<u128>(Variant(_10, 1), 1)) = !163241543627244267879597147290573012454_u128;
_16.0 = [33810_u16,850_u16];
place!(Field::<i16>(Variant(_10, 1), 3)) = _7;
place!(Field::<i32>(Variant(_10, 1), 0)) = !1035795290_i32;
_12 = [9223372036854775807_isize];
_2 = _6 & _6;
_14 = 44522611704156973844610329155191373322_i128;
_7 = 3568344064_u32 as i16;
_10 = Adt59::Variant0 { fld0: (-2602270392898129718_i64) };
_2 = 1093025261465860157_i64 as i8;
_10 = Adt59::Variant0 { fld0: (-1075946614394864473_i64) };
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
_14 = (-14066988538365028994141296141273764825_i128);
_2 = _23.0 as i8;
Goto(bb12)
}
bb12 = {
_1 = 4371854395834712601_u64;
_5 = Field::<i16>(Variant(_10, 1), 3) * Field::<i16>(Variant(_10, 1), 3);
_2 = '\u{3100d}' as i8;
_1 = 9181266165108815011_u64 >> _7;
_15 = _9;
place!(Field::<i32>(Variant(_10, 1), 0)) = _23.0;
_1 = !537604811052177887_u64;
_3 = _6 - _6;
_2 = _6;
_2 = _3 * _6;
_23.0 = !Field::<i32>(Variant(_10, 1), 0);
Goto(bb13)
}
bb13 = {
_16.0 = [54368_u16,64688_u16];
_12 = [(-9223372036854775808_isize)];
_3 = _2 & _2;
RET = !178_u8;
_13 = [33200_u16,61829_u16];
_25 = _3 == _2;
_8 = _7 as i8;
_19 = _25 as u128;
_1 = 16826207957768217381_u64 * 3457661500875569695_u64;
place!(Field::<u128>(Variant(_10, 1), 1)) = _18 as u128;
SetDiscriminant(_10, 1);
_12 = [9223372036854775807_isize];
_12 = [(-9223372036854775808_isize)];
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [61713_u16,38041_u16];
_15 = -_9;
(*_11).0 = Field::<[u16; 2]>(Variant(_10, 1), 2);
_13 = [41786_u16,24354_u16];
_1 = 9223372036854775807_isize as u64;
_16 = (_13,);
match _14 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb11,
4 => bb14,
5 => bb15,
326215378382573434469233311290494446631 => bb17,
_ => bb16
}
}
bb14 = {
_16.0 = [53580_u16,24789_u16];
_4 = _3 as i16;
_21 = !_7;
_9 = 2983613327_u32 as f64;
_18 = 1271740510_u32;
RET = !158_u8;
_16 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
(*_11) = (_13,);
_7 = -Field::<i16>(Variant(_10, 1), 3);
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [52782_u16,54059_u16];
_23.0 = -301840966_i32;
_7 = _21 << _21;
_9 = _15 + _15;
_21 = _23.0 as i16;
_9 = -_15;
(*_11).0 = [37457_u16,22399_u16];
_22 = ['\u{fe868}','\u{82c42}','\u{85b2}','\u{aac36}','\u{19c54}'];
_21 = _14 as i16;
_16 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
match _1 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
1957352729442000444 => bb11,
_ => bb10
}
}
bb15 = {
_2 = -_3;
_10 = Adt59::Variant0 { fld0: (-2200008307441389015_i64) };
_10 = Adt59::Variant0 { fld0: 1963096329739236120_i64 };
_2 = _6 * _6;
_5 = !_4;
_4 = (-547817608198698672_i64) as i16;
_7 = -_5;
_2 = _3;
_1 = 1957352729442000444_u64;
place!(Field::<i64>(Variant(_10, 0), 0)) = 1522436651389028275_i64 - (-5756333675040444235_i64);
SetDiscriminant(_10, 1);
_14 = false as i128;
place!(Field::<u128>(Variant(_10, 1), 1)) = !163241543627244267879597147290573012454_u128;
_16.0 = [33810_u16,850_u16];
place!(Field::<i16>(Variant(_10, 1), 3)) = _7;
place!(Field::<i32>(Variant(_10, 1), 0)) = !1035795290_i32;
_12 = [9223372036854775807_isize];
_2 = _6 & _6;
_14 = 44522611704156973844610329155191373322_i128;
_7 = 3568344064_u32 as i16;
_10 = Adt59::Variant0 { fld0: (-2602270392898129718_i64) };
_2 = 1093025261465860157_i64 as i8;
_10 = Adt59::Variant0 { fld0: (-1075946614394864473_i64) };
Goto(bb2)
}
bb16 = {
_3 = !_6;
_10 = Adt59::Variant1 { fld0: (-1688648526_i32),fld1: _19,fld2: _13,fld3: _4 };
place!(Field::<u128>(Variant(_10, 1), 1)) = _19;
place!(Field::<i32>(Variant(_10, 1), 0)) = _4 as i32;
_10 = Adt59::Variant1 { fld0: (-453465166_i32),fld1: _19,fld2: (*_11).0,fld3: _7 };
Goto(bb5)
}
bb17 = {
(*_11) = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
place!(Field::<i32>(Variant(_10, 1), 0)) = _23.0;
RET = 26_u8;
place!(Field::<u128>(Variant(_10, 1), 1)) = (-33_isize) as u128;
_12 = [(-9223372036854775808_isize)];
_26 = ['\u{c88b}','\u{978ea}','\u{44e31}','\u{22689}','\u{12c24}'];
(*_11).0 = [20423_u16,11437_u16];
_23.0 = Field::<i32>(Variant(_10, 1), 0) | Field::<i32>(Variant(_10, 1), 0);
_5 = _19 as i16;
_13 = [54376_u16,9570_u16];
(*_11) = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_24 = _19 as f32;
place!(Field::<i16>(Variant(_10, 1), 3)) = -_5;
_27 = 9223372036854775807_isize & (-9223372036854775808_isize);
_21 = _5 | Field::<i16>(Variant(_10, 1), 3);
_27 = !(-9223372036854775808_isize);
Goto(bb18)
}
bb18 = {
Call(_29 = dump_var(1_usize, 2_usize, Move(_2), 7_usize, Move(_7), 26_usize, Move(_26), 5_usize, Move(_5)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_29 = dump_var(1_usize, 3_usize, Move(_3), 14_usize, Move(_14), 8_usize, Move(_8), 19_usize, Move(_19)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_29 = dump_var(1_usize, 4_usize, Move(_4), 25_usize, Move(_25), 30_usize, _30, 30_usize, _30), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: i8,mut _2: i8,mut _3: i16,mut _4: i8,mut _5: i16,mut _6: i8,mut _7: i8,mut _8: i8,mut _9: u64,mut _10: i8,mut _11: i8,mut _12: i8,mut _13: i8,mut _14: i8) -> i16 {
mir! {
type RET = i16;
let _15: (i32,);
let _16: i32;
let _17: f32;
let _18: char;
let _19: f64;
let _20: i16;
let _21: u32;
let _22: [i64; 6];
let _23: [usize; 7];
let _24: [bool; 5];
let _25: i32;
let _26: u64;
let _27: [u64; 8];
let _28: *const [usize; 8];
let _29: ([u16; 2],);
let _30: isize;
let _31: isize;
let _32: i128;
let _33: *const ([u16; 2],);
let _34: [u64; 8];
let _35: (i32,);
let _36: [u16; 2];
let _37: *const [usize; 8];
let _38: char;
let _39: Adt51;
let _40: [char; 6];
let _41: [u8; 3];
let _42: *const i16;
let _43: char;
let _44: [i64; 6];
let _45: Adt59;
let _46: ();
let _47: ();
{
_11 = !_12;
Call(_15.0 = fn3(_4, _7, _1, _6, _3, _7), bb1, UnwindUnreachable())
}
bb1 = {
_5 = -_3;
_1 = _15.0 as i8;
RET = 6206998904441734376_i64 as i16;
_5 = _3 & _3;
_2 = -_4;
_12 = 239_u8 as i8;
_6 = !_10;
_5 = _3;
Goto(bb2)
}
bb2 = {
_11 = -_10;
_5 = _3;
_11 = _7 ^ _6;
_3 = 244_u8 as i16;
_5 = RET & RET;
_7 = _2;
_17 = 181_u8 as f32;
_2 = 20246_u16 as i8;
_16 = -_15.0;
_1 = _4 ^ _4;
_12 = -_6;
Goto(bb3)
}
bb3 = {
_19 = 19451_u16 as f64;
_8 = _11;
_19 = 424939275_u32 as f64;
_10 = _8;
_5 = _3 + RET;
_22 = [5789214724408496710_i64,(-5407887243897390338_i64),5162947880727039104_i64,(-5559160411609794347_i64),4349369832171690338_i64,1047946816245210161_i64];
_20 = -RET;
_15.0 = !_16;
_18 = '\u{8e5f0}';
_11 = _10;
_23 = [2_usize,5_usize,11710214929769471071_usize,6_usize,0_usize,0_usize,7718409768761069162_usize];
RET = _20 | _5;
_23 = [0_usize,0_usize,15353430581431251673_usize,17464616368417165861_usize,5_usize,4880571851045796183_usize,3_usize];
Goto(bb4)
}
bb4 = {
_6 = _13;
_14 = 5347016347347357914_i64 as i8;
_5 = _3 | RET;
_19 = 146914549973911599220485067350908239320_u128 as f64;
_2 = (-2584796238592544922_i64) as i8;
Goto(bb5)
}
bb5 = {
_23 = [7_usize,1_usize,5917341345385002154_usize,13183017834338228182_usize,3_usize,13427122079479499978_usize,4_usize];
_11 = _8;
_8 = _10;
_21 = 2783573801_u32 * 1951543511_u32;
Goto(bb6)
}
bb6 = {
_2 = _10 >> _11;
_5 = RET;
_2 = _8;
_15 = (_16,);
_25 = (-107421312378798715851963498899758657544_i128) as i32;
_17 = _5 as f32;
_21 = 628104269_u32 * 278080792_u32;
_8 = 9223372036854775807_isize as i8;
_6 = _1;
_12 = _4 * _11;
_4 = !_10;
_7 = !_10;
_11 = _14 << _1;
_25 = _19 as i32;
_3 = !_20;
_23 = [5_usize,2_usize,3_usize,7242628160524153489_usize,0_usize,5_usize,4030149110560780763_usize];
_2 = 9223372036854775807_isize as i8;
_31 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_10 = _12 & _1;
Goto(bb7)
}
bb7 = {
_10 = !_12;
Goto(bb8)
}
bb8 = {
_27 = [_9,_9,_9,_9,_9,_9,_9,_9];
_12 = _1;
_8 = _4 >> _1;
_24 = [true,true,true,true,false];
_19 = _15.0 as f64;
_7 = _12 - _10;
Goto(bb9)
}
bb9 = {
_26 = !_9;
_8 = 12979369966794157603_usize as i8;
_29.0 = [14609_u16,41447_u16];
_11 = -_7;
_3 = -_5;
_21 = !1682718497_u32;
_10 = -_7;
_18 = '\u{e8852}';
_22 = [(-4482491822868913657_i64),(-5489710388294099557_i64),(-4426691626525129425_i64),8538565192622031319_i64,1268585604103033396_i64,6239894716623007338_i64];
_18 = '\u{a6574}';
_18 = '\u{4bb0f}';
_14 = _10;
_29.0 = [20394_u16,46377_u16];
_12 = _7;
Goto(bb10)
}
bb10 = {
_35.0 = -_15.0;
_19 = _9 as f64;
_1 = -_10;
_5 = -RET;
_33 = core::ptr::addr_of!(_29);
Goto(bb11)
}
bb11 = {
_24 = [false,false,false,false,true];
_34 = [_26,_9,_26,_9,_9,_26,_9,_9];
(*_33).0 = [23871_u16,63568_u16];
_34 = [_9,_9,_9,_26,_26,_26,_26,_26];
_21 = !991803013_u32;
_30 = _31;
_33 = core::ptr::addr_of!((*_33));
(*_33).0 = [34607_u16,30658_u16];
_18 = '\u{47f20}';
_35.0 = -_25;
(*_33).0 = [61076_u16,44360_u16];
_23 = [9675196943292893487_usize,15307943477082770661_usize,6_usize,4_usize,6_usize,2703508361144010682_usize,2_usize];
_33 = core::ptr::addr_of!((*_33));
Goto(bb12)
}
bb12 = {
_36 = (*_33).0;
_31 = _30 << _14;
_35 = _15;
RET = -_5;
_42 = core::ptr::addr_of!(_20);
_15.0 = _16 >> _7;
_15 = (_16,);
(*_33) = (_36,);
_35.0 = _16 * _15.0;
Goto(bb13)
}
bb13 = {
_6 = _7 | _14;
_18 = '\u{57094}';
Goto(bb14)
}
bb14 = {
_35.0 = !_16;
_23 = [842390633089640483_usize,4_usize,1_usize,6_usize,3_usize,7_usize,3598991333170226942_usize];
_35.0 = _25 + _16;
_45 = Adt59::Variant1 { fld0: _35.0,fld1: 47080129301389761605837885687844583480_u128,fld2: (*_33).0,fld3: (*_42) };
place!(Field::<[u16; 2]>(Variant(_45, 1), 2)) = [10545_u16,2519_u16];
_30 = _31 - _31;
_17 = 275847751567262134908688447207934946227_u128 as f32;
_30 = _31 >> _14;
(*_33).0 = _36;
_2 = _6 & _11;
_33 = core::ptr::addr_of!(_29);
_21 = 4234179605_u32 >> _31;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(2_usize, 16_usize, Move(_16), 13_usize, Move(_13), 1_usize, Move(_1), 5_usize, Move(_5)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(2_usize, 26_usize, Move(_26), 15_usize, Move(_15), 18_usize, Move(_18), 36_usize, Move(_36)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(2_usize, 14_usize, Move(_14), 11_usize, Move(_11), 31_usize, Move(_31), 29_usize, Move(_29)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(2_usize, 20_usize, Move(_20), 30_usize, Move(_30), 35_usize, Move(_35), 47_usize, _47), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: i8,mut _2: i8,mut _3: i8,mut _4: i8,mut _5: i16,mut _6: i8) -> i32 {
mir! {
type RET = i32;
let _7: i16;
let _8: f32;
let _9: u64;
let _10: Adt62;
let _11: Adt58;
let _12: [char; 6];
let _13: Adt56;
let _14: char;
let _15: *const ([u16; 2],);
let _16: char;
let _17: isize;
let _18: (i32,);
let _19: bool;
let _20: isize;
let _21: isize;
let _22: Adt49;
let _23: ([u16; 2],);
let _24: Adt58;
let _25: [u16; 2];
let _26: f64;
let _27: f32;
let _28: bool;
let _29: [u128; 3];
let _30: Adt54;
let _31: f64;
let _32: i128;
let _33: isize;
let _34: char;
let _35: isize;
let _36: [char; 6];
let _37: u8;
let _38: [u128; 3];
let _39: f32;
let _40: [u128; 3];
let _41: ();
let _42: ();
{
_3 = 13858_u16 as i8;
_2 = -_4;
RET = true as i32;
RET = 1735848328_i32 << _1;
RET = true as i32;
_2 = -_4;
RET = !(-1930553154_i32);
_2 = 8025626746931931408_u64 as i8;
_4 = -_1;
_1 = _6;
_7 = 205299828811014843251919307119848777284_u128 as i16;
_4 = _1;
_6 = -_4;
_6 = -_1;
Goto(bb1)
}
bb1 = {
_4 = -_3;
_3 = _6;
_5 = 43363507677057485118871228969267693623_u128 as i16;
_6 = RET as i8;
_7 = _5 - _5;
_14 = '\u{86d6d}';
_4 = 7662114232692236141_u64 as i8;
_2 = _3;
RET = 51521_u16 as i32;
_12 = [_14,_14,_14,_14,_14,_14];
_3 = _2;
_9 = RET as u64;
Call(RET = fn4(_3, _6, _7, _6, _9, _3, _7, _3, _3, _7, _9, _1, _6, _3, _4, _1), bb2, UnwindUnreachable())
}
bb2 = {
_5 = _14 as i16;
_4 = -_3;
_3 = false as i8;
_14 = '\u{8efd7}';
_9 = 7635834671289935843_u64;
_8 = 198470108764321234955167475518441011801_u128 as f32;
_8 = 0_usize as f32;
_5 = (-1451168114702360248_i64) as i16;
_5 = 198_u8 as i16;
_2 = _14 as i8;
_9 = 9970696636802154784_u64;
_8 = 2107268852357703586_usize as f32;
_7 = _5 ^ _5;
_7 = (-76796297453428762853595308815506543633_i128) as i16;
RET = -576199145_i32;
_12 = [_14,_14,_14,_14,_14,_14];
_6 = _14 as i8;
RET = (-1847099491_i32);
_12 = [_14,_14,_14,_14,_14,_14];
_6 = -_4;
_4 = -_2;
match _9 {
0 => bb1,
9970696636802154784 => bb4,
_ => bb3
}
}
bb3 = {
_4 = -_3;
_3 = _6;
_5 = 43363507677057485118871228969267693623_u128 as i16;
_6 = RET as i8;
_7 = _5 - _5;
_14 = '\u{86d6d}';
_4 = 7662114232692236141_u64 as i8;
_2 = _3;
RET = 51521_u16 as i32;
_12 = [_14,_14,_14,_14,_14,_14];
_3 = _2;
_9 = RET as u64;
Call(RET = fn4(_3, _6, _7, _6, _9, _3, _7, _3, _3, _7, _9, _1, _6, _3, _4, _1), bb2, UnwindUnreachable())
}
bb4 = {
RET = 13_u8 as i32;
_7 = _5;
_1 = _3;
_12 = [_14,_14,_14,_14,_14,_14];
_18.0 = RET;
_7 = _5;
Goto(bb5)
}
bb5 = {
_2 = !_1;
_19 = !true;
_17 = _9 as isize;
_5 = _7 - _7;
_9 = !247053964321140860_u64;
_17 = !9223372036854775807_isize;
_8 = 313980315647926282952076203376283089085_u128 as f32;
_20 = 36166_u16 as isize;
_2 = _4 ^ _6;
_18 = (RET,);
_5 = !_7;
_2 = 8264393416958777417_i64 as i8;
_14 = '\u{99962}';
_8 = 89186010775754118146321748051151391761_i128 as f32;
Goto(bb6)
}
bb6 = {
_3 = -_2;
_6 = !_2;
_9 = RET as u64;
_12 = [_14,_14,_14,_14,_14,_14];
_15 = core::ptr::addr_of!(_23);
_3 = _1;
_17 = -_20;
Goto(bb7)
}
bb7 = {
_3 = _4;
RET = _18.0;
RET = 43915_u16 as i32;
_2 = !_1;
_9 = !12573152764973612566_u64;
_9 = 12459870506448248293_u64 - 11943849375842217551_u64;
_9 = !15529728361790228616_u64;
(*_15).0 = [5411_u16,57902_u16];
_4 = _2;
_15 = core::ptr::addr_of!((*_15));
_6 = _3;
_20 = _17;
_14 = '\u{c37e4}';
_7 = 288600910211170305116973654921160542337_u128 as i16;
_9 = 10351368130029832789_u64;
_4 = _3 + _1;
_15 = core::ptr::addr_of!((*_15));
(*_15).0 = [32949_u16,34020_u16];
_23.0 = [32946_u16,27935_u16];
_12 = [_14,_14,_14,_14,_14,_14];
_19 = _1 > _1;
_2 = _5 as i8;
_19 = false ^ true;
_6 = -_4;
_2 = 1881139240_u32 as i8;
_15 = core::ptr::addr_of!(_23);
_9 = 686072997733164130_u64 * 2870855593737128295_u64;
_14 = '\u{52ad2}';
RET = !_18.0;
_21 = _14 as isize;
Goto(bb8)
}
bb8 = {
_16 = _14;
_25 = [29972_u16,45789_u16];
_17 = !_21;
_3 = _5 as i8;
(*_15) = (_25,);
_8 = _3 as f32;
_8 = _9 as f32;
_12 = [_14,_16,_16,_16,_16,_14];
_2 = _4;
_4 = _2 | _1;
_23.0 = [19504_u16,50705_u16];
RET = _18.0 + _18.0;
_7 = _9 as i16;
_28 = !_19;
_14 = _16;
_29 = [55500107294813268710165107925440989081_u128,234378963796980115772260081331591741501_u128,213406180504192386402939227161371199765_u128];
(*_15).0 = [56013_u16,15131_u16];
_21 = _2 as isize;
Goto(bb9)
}
bb9 = {
_6 = _1;
_8 = 74380820585958913_usize as f32;
_4 = 53099_u16 as i8;
(*_15).0 = _25;
RET = -_18.0;
(*_15) = (_25,);
_23.0 = _25;
_17 = _21;
_19 = !_28;
_12 = [_16,_14,_14,_16,_16,_14];
_20 = _17;
(*_15).0 = [40868_u16,8732_u16];
_25 = [50625_u16,58550_u16];
_20 = _28 as isize;
Goto(bb10)
}
bb10 = {
(*_15).0 = [3095_u16,13087_u16];
_15 = core::ptr::addr_of!((*_15));
_16 = _14;
_32 = 89985320058178290381222735359229303886_u128 as i128;
_34 = _14;
_32 = 74184861219684544518500518441931124051_i128;
_7 = _21 as i16;
(*_15).0 = [14256_u16,32795_u16];
_31 = _5 as f64;
_1 = _6;
_3 = _14 as i8;
_33 = !_20;
_23 = (_25,);
_19 = !_28;
_23.0 = [43685_u16,41756_u16];
RET = 109_u8 as i32;
(*_15).0 = [23427_u16,32748_u16];
_9 = _32 as u64;
_1 = _3 | _4;
_33 = _21;
_18.0 = _9 as i32;
_4 = _7 as i8;
_14 = _34;
Goto(bb11)
}
bb11 = {
_38 = [3079347707623266990073172191106760724_u128,55913769101223112424231265213373007411_u128,124337470541572318123456885633933420322_u128];
_27 = _9 as f32;
_7 = _5 + _5;
_31 = _9 as f64;
_7 = _5 ^ _5;
(*_15) = (_25,);
RET = _18.0;
_17 = _34 as isize;
RET = 146636623406515870133744799410714824600_u128 as i32;
(*_15) = (_25,);
_26 = _31 - _31;
_2 = _4 - _3;
_35 = _33;
_19 = _2 == _3;
(*_15) = (_25,);
_3 = _6 * _6;
_36 = [_16,_16,_34,_34,_34,_16];
_17 = _35;
_1 = _2;
match _32 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
74184861219684544518500518441931124051 => bb17,
_ => bb16
}
}
bb12 = {
_4 = -_3;
_3 = _6;
_5 = 43363507677057485118871228969267693623_u128 as i16;
_6 = RET as i8;
_7 = _5 - _5;
_14 = '\u{86d6d}';
_4 = 7662114232692236141_u64 as i8;
_2 = _3;
RET = 51521_u16 as i32;
_12 = [_14,_14,_14,_14,_14,_14];
_3 = _2;
_9 = RET as u64;
Call(RET = fn4(_3, _6, _7, _6, _9, _3, _7, _3, _3, _7, _9, _1, _6, _3, _4, _1), bb2, UnwindUnreachable())
}
bb13 = {
_6 = _1;
_8 = 74380820585958913_usize as f32;
_4 = 53099_u16 as i8;
(*_15).0 = _25;
RET = -_18.0;
(*_15) = (_25,);
_23.0 = _25;
_17 = _21;
_19 = !_28;
_12 = [_16,_14,_14,_16,_16,_14];
_20 = _17;
(*_15).0 = [40868_u16,8732_u16];
_25 = [50625_u16,58550_u16];
_20 = _28 as isize;
Goto(bb10)
}
bb14 = {
RET = 13_u8 as i32;
_7 = _5;
_1 = _3;
_12 = [_14,_14,_14,_14,_14,_14];
_18.0 = RET;
_7 = _5;
Goto(bb5)
}
bb15 = {
_3 = _4;
RET = _18.0;
RET = 43915_u16 as i32;
_2 = !_1;
_9 = !12573152764973612566_u64;
_9 = 12459870506448248293_u64 - 11943849375842217551_u64;
_9 = !15529728361790228616_u64;
(*_15).0 = [5411_u16,57902_u16];
_4 = _2;
_15 = core::ptr::addr_of!((*_15));
_6 = _3;
_20 = _17;
_14 = '\u{c37e4}';
_7 = 288600910211170305116973654921160542337_u128 as i16;
_9 = 10351368130029832789_u64;
_4 = _3 + _1;
_15 = core::ptr::addr_of!((*_15));
(*_15).0 = [32949_u16,34020_u16];
_23.0 = [32946_u16,27935_u16];
_12 = [_14,_14,_14,_14,_14,_14];
_19 = _1 > _1;
_2 = _5 as i8;
_19 = false ^ true;
_6 = -_4;
_2 = 1881139240_u32 as i8;
_15 = core::ptr::addr_of!(_23);
_9 = 686072997733164130_u64 * 2870855593737128295_u64;
_14 = '\u{52ad2}';
RET = !_18.0;
_21 = _14 as isize;
Goto(bb8)
}
bb16 = {
_3 = -_2;
_6 = !_2;
_9 = RET as u64;
_12 = [_14,_14,_14,_14,_14,_14];
_15 = core::ptr::addr_of!(_23);
_3 = _1;
_17 = -_20;
Goto(bb7)
}
bb17 = {
_15 = core::ptr::addr_of!(_23);
_14 = _16;
_8 = _27;
_37 = _26 as u8;
_29 = _38;
(*_15).0 = [59512_u16,47251_u16];
_29 = _38;
_33 = !_35;
_32 = _5 as i128;
_25 = [61167_u16,61873_u16];
_1 = _26 as i8;
(*_15).0 = [40680_u16,65122_u16];
_18.0 = _2 as i32;
_38 = [41631452873583573763498848467116804229_u128,212531142711909543694278617265467071189_u128,193295176370922754972242283339383145350_u128];
_36 = _12;
_36 = _12;
_31 = _26;
_38 = [160308992803413648200621873367466686611_u128,229637366485576054608709933935204985305_u128,8610938259924270690891372633587277004_u128];
RET = -_18.0;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(3_usize, 17_usize, Move(_17), 25_usize, Move(_25), 3_usize, Move(_3), 21_usize, Move(_21)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(3_usize, 5_usize, Move(_5), 28_usize, Move(_28), 32_usize, Move(_32), 18_usize, Move(_18)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(3_usize, 12_usize, Move(_12), 38_usize, Move(_38), 9_usize, Move(_9), 4_usize, Move(_4)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_41 = dump_var(3_usize, 16_usize, Move(_16), 42_usize, _42, 42_usize, _42, 42_usize, _42), bb22, UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i8,mut _2: i8,mut _3: i16,mut _4: i8,mut _5: u64,mut _6: i8,mut _7: i16,mut _8: i8,mut _9: i8,mut _10: i16,mut _11: u64,mut _12: i8,mut _13: i8,mut _14: i8,mut _15: i8,mut _16: i8) -> i32 {
mir! {
type RET = i32;
let _17: [bool; 5];
let _18: Adt54;
let _19: u32;
let _20: (i32,);
let _21: Adt50;
let _22: (i32,);
let _23: i16;
let _24: ([u16; 2],);
let _25: Adt60;
let _26: [u64; 8];
let _27: u8;
let _28: i32;
let _29: *const ([u16; 2],);
let _30: (i64, usize, ([u16; 2],));
let _31: f32;
let _32: Adt63;
let _33: [u128; 3];
let _34: f32;
let _35: *const f32;
let _36: i128;
let _37: f32;
let _38: Adt59;
let _39: Adt50;
let _40: [i32; 4];
let _41: u128;
let _42: ();
let _43: ();
{
_7 = _10;
_14 = -_12;
RET = 86391781980932669416482104598720738420_u128 as i32;
RET = 14434212810425239598_usize as i32;
_12 = 6_usize as i8;
_17 = [false,true,true,false,true];
RET = 1255786679_i32 | 1091679008_i32;
_2 = _14 * _1;
_17 = [true,false,true,true,false];
_6 = _15 + _2;
_12 = !_9;
_2 = -_14;
RET = (-50255798_i32) >> _14;
_5 = RET as u64;
_6 = _1 ^ _9;
_19 = !3135157091_u32;
RET = (-493031360_i32);
_15 = 6702061883747833226_i64 as i8;
_13 = _5 as i8;
_5 = _11;
Call(_20.0 = core::intrinsics::bswap(RET), bb1, UnwindUnreachable())
}
bb1 = {
_9 = _1;
_8 = _6 * _6;
_17 = [true,true,true,false,false];
_3 = false as i16;
_8 = _6;
_15 = _8 << _6;
RET = (-1779248574_i32);
_17 = [true,true,true,false,false];
_7 = '\u{44068}' as i16;
_13 = !_2;
_6 = true as i8;
_16 = _14;
_20.0 = !RET;
RET = -_20.0;
_12 = -_14;
_12 = _14 - _13;
_19 = !2415963787_u32;
_2 = _15;
_17 = [true,false,false,false,false];
_17 = [false,false,false,false,false];
_5 = _19 as u64;
_3 = _7 | _7;
_22 = _20;
Goto(bb2)
}
bb2 = {
_7 = _3 - _3;
_1 = _20.0 as i8;
_5 = 119_u8 as u64;
_4 = 326184036475181947606789329087060060927_u128 as i8;
_1 = _2;
_9 = _15;
_22.0 = RET << _9;
_2 = _9;
_3 = _7 << _6;
_4 = _19 as i8;
_22 = _20;
_24.0 = [39944_u16,14579_u16];
_1 = _8;
_19 = 1332605584_u32 * 1046232612_u32;
_2 = !_15;
_20.0 = 62086_u16 as i32;
_23 = _5 as i16;
_26 = [_11,_5,_11,_5,_11,_5,_11,_11];
_25.fld1 = '\u{689a1}';
_1 = _9 << _15;
_22 = _20;
_3 = (-26091300134295154724162034105385732145_i128) as i16;
_24.0 = [29456_u16,38269_u16];
RET = -_20.0;
_16 = -_2;
Goto(bb3)
}
bb3 = {
_29 = core::ptr::addr_of!(_24);
_20.0 = _22.0;
Goto(bb4)
}
bb4 = {
RET = !_22.0;
_19 = 2670782338_u32 & 2567031034_u32;
_10 = _3 * _7;
_29 = core::ptr::addr_of!(_24);
_19 = 3206807282_u32 + 2319561593_u32;
_20.0 = RET * RET;
_8 = _9 & _1;
_30.2 = (*_29);
_22 = (_20.0,);
Call(_27 = fn5(_20.0, _9, _1, _8, _30.2), bb5, UnwindUnreachable())
}
bb5 = {
_30 = (4234802875482129294_i64, 11918269487437473543_usize, (*_29));
_22.0 = _20.0 | _20.0;
_4 = _1 ^ _15;
_31 = (-9223372036854775808_isize) as f32;
_25.fld0 = core::ptr::addr_of!(_31);
_27 = true as u8;
_25.fld1 = '\u{109f05}';
_8 = _14 << _12;
_33 = [216583239176213018847461983016515608801_u128,256977888917388934485030059708208426497_u128,129124197948183717292212963359355524612_u128];
(*_29).0 = [62028_u16,5105_u16];
_28 = _30.1 as i32;
_15 = _16;
_6 = 72132637389501057626167510203010688812_u128 as i8;
_34 = _31 * _31;
(*_29).0 = [10077_u16,35148_u16];
_30.1 = 10225790562919095661_usize;
_8 = !_4;
_27 = 44_u8 | 172_u8;
(*_29) = (_30.2.0,);
_24.0 = [46355_u16,51709_u16];
Goto(bb6)
}
bb6 = {
_7 = _10;
_36 = -(-4612387144779257458049093122846737032_i128);
match _30.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4234802875482129294 => bb8,
_ => bb7
}
}
bb7 = {
_29 = core::ptr::addr_of!(_24);
_20.0 = _22.0;
Goto(bb4)
}
bb8 = {
RET = _28 | _28;
_13 = _14 + _9;
_10 = _7;
(*_29) = (_30.2.0,);
_25.fld0 = core::ptr::addr_of!(_31);
_23 = -_7;
_22.0 = RET | RET;
_20 = _22;
match _30.1 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
10225790562919095661 => bb17,
_ => bb16
}
}
bb9 = {
_29 = core::ptr::addr_of!(_24);
_20.0 = _22.0;
Goto(bb4)
}
bb10 = {
_7 = _10;
_36 = -(-4612387144779257458049093122846737032_i128);
match _30.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4234802875482129294 => bb8,
_ => bb7
}
}
bb11 = {
_30 = (4234802875482129294_i64, 11918269487437473543_usize, (*_29));
_22.0 = _20.0 | _20.0;
_4 = _1 ^ _15;
_31 = (-9223372036854775808_isize) as f32;
_25.fld0 = core::ptr::addr_of!(_31);
_27 = true as u8;
_25.fld1 = '\u{109f05}';
_8 = _14 << _12;
_33 = [216583239176213018847461983016515608801_u128,256977888917388934485030059708208426497_u128,129124197948183717292212963359355524612_u128];
(*_29).0 = [62028_u16,5105_u16];
_28 = _30.1 as i32;
_15 = _16;
_6 = 72132637389501057626167510203010688812_u128 as i8;
_34 = _31 * _31;
(*_29).0 = [10077_u16,35148_u16];
_30.1 = 10225790562919095661_usize;
_8 = !_4;
_27 = 44_u8 | 172_u8;
(*_29) = (_30.2.0,);
_24.0 = [46355_u16,51709_u16];
Goto(bb6)
}
bb12 = {
RET = !_22.0;
_19 = 2670782338_u32 & 2567031034_u32;
_10 = _3 * _7;
_29 = core::ptr::addr_of!(_24);
_19 = 3206807282_u32 + 2319561593_u32;
_20.0 = RET * RET;
_8 = _9 & _1;
_30.2 = (*_29);
_22 = (_20.0,);
Call(_27 = fn5(_20.0, _9, _1, _8, _30.2), bb5, UnwindUnreachable())
}
bb13 = {
_29 = core::ptr::addr_of!(_24);
_20.0 = _22.0;
Goto(bb4)
}
bb14 = {
_7 = _3 - _3;
_1 = _20.0 as i8;
_5 = 119_u8 as u64;
_4 = 326184036475181947606789329087060060927_u128 as i8;
_1 = _2;
_9 = _15;
_22.0 = RET << _9;
_2 = _9;
_3 = _7 << _6;
_4 = _19 as i8;
_22 = _20;
_24.0 = [39944_u16,14579_u16];
_1 = _8;
_19 = 1332605584_u32 * 1046232612_u32;
_2 = !_15;
_20.0 = 62086_u16 as i32;
_23 = _5 as i16;
_26 = [_11,_5,_11,_5,_11,_5,_11,_11];
_25.fld1 = '\u{689a1}';
_1 = _9 << _15;
_22 = _20;
_3 = (-26091300134295154724162034105385732145_i128) as i16;
_24.0 = [29456_u16,38269_u16];
RET = -_20.0;
_16 = -_2;
Goto(bb3)
}
bb15 = {
_9 = _1;
_8 = _6 * _6;
_17 = [true,true,true,false,false];
_3 = false as i16;
_8 = _6;
_15 = _8 << _6;
RET = (-1779248574_i32);
_17 = [true,true,true,false,false];
_7 = '\u{44068}' as i16;
_13 = !_2;
_6 = true as i8;
_16 = _14;
_20.0 = !RET;
RET = -_20.0;
_12 = -_14;
_12 = _14 - _13;
_19 = !2415963787_u32;
_2 = _15;
_17 = [true,false,false,false,false];
_17 = [false,false,false,false,false];
_5 = _19 as u64;
_3 = _7 | _7;
_22 = _20;
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
_30.2.0 = (*_29).0;
_35 = core::ptr::addr_of!(_37);
(*_29) = (_30.2.0,);
_29 = core::ptr::addr_of!((*_29));
_37 = _31 * _31;
(*_29) = (_30.2.0,);
_30.1 = 2_usize;
RET = -_20.0;
_31 = -_37;
_40 = [_20.0,RET,RET,RET];
_5 = _11 | _11;
_34 = _37;
_24 = _30.2;
_24.0 = [26506_u16,25626_u16];
_33 = [232165553071542054524339798879210889117_u128,95362034161889176735441492091319913392_u128,22171232812153824278933363305559767022_u128];
_25.fld2.0 = core::ptr::addr_of!(_3);
_12 = !_8;
Goto(bb18)
}
bb18 = {
Call(_42 = dump_var(4_usize, 26_usize, Move(_26), 12_usize, Move(_12), 28_usize, Move(_28), 1_usize, Move(_1)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_42 = dump_var(4_usize, 30_usize, Move(_30), 11_usize, Move(_11), 13_usize, Move(_13), 6_usize, Move(_6)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(4_usize, 36_usize, Move(_36), 10_usize, Move(_10), 27_usize, Move(_27), 24_usize, Move(_24)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_42 = dump_var(4_usize, 22_usize, Move(_22), 5_usize, Move(_5), 43_usize, _43, 43_usize, _43), bb22, UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: i32,mut _2: i8,mut _3: i8,mut _4: i8,mut _5: ([u16; 2],)) -> u8 {
mir! {
type RET = u8;
let _6: isize;
let _7: [u128; 3];
let _8: *const u32;
let _9: bool;
let _10: f64;
let _11: Adt60;
let _12: char;
let _13: [bool; 5];
let _14: i8;
let _15: *const [usize; 8];
let _16: [u8; 8];
let _17: [char; 5];
let _18: (i64, usize, ([u16; 2],));
let _19: bool;
let _20: [bool; 5];
let _21: [i64; 6];
let _22: [u16; 2];
let _23: *const ([u16; 2],);
let _24: Adt63;
let _25: i16;
let _26: usize;
let _27: Adt59;
let _28: u32;
let _29: [i64; 6];
let _30: (([u16; 2],), ([u16; 2],), f32);
let _31: (*const i16,);
let _32: (i32,);
let _33: isize;
let _34: ();
let _35: ();
{
_1 = (-1219497968_i32);
RET = 135_u8;
_4 = '\u{fbfb1}' as i8;
_7 = [257044608449262515603597989694027605224_u128,271120685349430100806224656843674443376_u128,90860286790908046042798048456695436760_u128];
_7 = [138693167746348277307513862702305332393_u128,189036979763068108703113544700304854628_u128,25440602174464291012051047509174237858_u128];
_5.0 = [55211_u16,56166_u16];
_1 = (-1790521615_i32) & 1719516074_i32;
_6 = 9915_i16 as isize;
_11.fld1 = '\u{401a9}';
_5.0 = [40309_u16,36148_u16];
_4 = -_3;
_6 = _3 as isize;
_4 = 12304_i16 as i8;
_10 = 6271256069048778150_u64 as f64;
_7 = [218183333349173669043512286041844035907_u128,70769369514619442947100561195807773243_u128,190036586755230769367532442422153148070_u128];
RET = !52_u8;
_7 = [222004848111585715393818867095039398295_u128,246495808266127280891680512755224765942_u128,305819213165059848718816584281289549829_u128];
_3 = _2 << _6;
_7 = [152588808679462394329258442228710460802_u128,135071493176480846786158146198561279215_u128,43294112772606627550198844573010588064_u128];
Call(_11 = fn6(_6, _6, _2, _3, _3, _6, _2, _3, _3), bb1, UnwindUnreachable())
}
bb1 = {
Goto(bb2)
}
bb2 = {
_13 = [true,true,false,false,false];
_1 = 655570969_i32;
_3 = !_2;
_10 = (-3722_i16) as f64;
_6 = -(-43_isize);
_12 = _11.fld1;
_10 = (-808588221588009370_i64) as f64;
_1 = 860874544_i32 & (-815456085_i32);
_13 = [false,false,false,false,true];
_6 = (-7260297881905563072_i64) as isize;
_14 = -_2;
_1 = (-773501030_i32);
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = _14;
_2 = (-6255865076236621623_i64) as i8;
_13 = [false,true,true,true,false];
RET = !122_u8;
_10 = _6 as f64;
_4 = -_14;
_1 = (-638426725_i32);
_4 = _3 - _14;
Goto(bb3)
}
bb3 = {
_6 = (-4351740248036425150_i64) as isize;
_11.fld1 = _12;
_17 = [_11.fld1,_12,_12,_12,_11.fld1];
_5.0 = [7433_u16,28358_u16];
_7 = [39865803916733434005552073072356081941_u128,297995895249689692597328683749206626076_u128,149166776283550495697548507708351867725_u128];
RET = 69_u8;
_18 = (4880757535831295225_i64, 9497575928403136200_usize, _5);
_12 = _11.fld1;
_2 = -_4;
_9 = !true;
_18.2.0 = _5.0;
_5.0 = _18.2.0;
_9 = true | false;
_5.0 = [25949_u16,21272_u16];
_14 = _2;
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_14 = _4;
_18.2 = (_5.0,);
_13 = [_9,_9,_9,_9,_9];
_12 = _11.fld1;
_10 = (-13805_i16) as f64;
RET = 64_u8 | 132_u8;
_12 = _11.fld1;
_7 = [119261986813458649456372258683853418892_u128,137797207502550857050842808622531921292_u128,297997565212455412639722427322152394795_u128];
_20 = [_9,_9,_9,_9,_9];
match _18.1 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
9497575928403136200 => bb8,
_ => bb7
}
}
bb4 = {
_13 = [true,true,false,false,false];
_1 = 655570969_i32;
_3 = !_2;
_10 = (-3722_i16) as f64;
_6 = -(-43_isize);
_12 = _11.fld1;
_10 = (-808588221588009370_i64) as f64;
_1 = 860874544_i32 & (-815456085_i32);
_13 = [false,false,false,false,true];
_6 = (-7260297881905563072_i64) as isize;
_14 = -_2;
_1 = (-773501030_i32);
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = _14;
_2 = (-6255865076236621623_i64) as i8;
_13 = [false,true,true,true,false];
RET = !122_u8;
_10 = _6 as f64;
_4 = -_14;
_1 = (-638426725_i32);
_4 = _3 - _14;
Goto(bb3)
}
bb5 = {
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_2 = 62587_u16 as i8;
_10 = _18.1 as f64;
_9 = !true;
_10 = RET as f64;
_17 = [_12,_11.fld1,_11.fld1,_11.fld1,_12];
_2 = _6 as i8;
_9 = !true;
_6 = 9223372036854775807_isize;
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_6 = (-9223372036854775808_isize);
_18 = ((-2321601830920002044_i64), 1067314886107212188_usize, _5);
_13 = [_9,_9,_9,_9,_9];
_12 = _11.fld1;
_11.fld1 = _12;
_5.0 = _18.2.0;
_21 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_7 = [118537741389933035238400357449213204603_u128,69450638395932048269819057360578915183_u128,311417781949883625839803317489519545637_u128];
_9 = true;
RET = 124_u8 >> _4;
_9 = true;
RET = (-109740337197078399771166113314829164118_i128) as u8;
_19 = !_9;
_10 = 12564073506620335234_u64 as f64;
_19 = _9;
_3 = 57099757077710730595000994869670362636_i128 as i8;
_12 = _11.fld1;
_4 = _14 - _14;
match _18.1 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb5,
1067314886107212188 => bb9,
_ => bb6
}
}
bb9 = {
_14 = !_4;
_18.2.0 = [27201_u16,42459_u16];
Goto(bb10)
}
bb10 = {
_6 = -(-105_isize);
RET = !223_u8;
_21 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_21 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_20 = [_19,_9,_9,_9,_19];
_16 = [RET,RET,RET,RET,RET,RET,RET,RET];
_20 = _13;
_5 = (_18.2.0,);
_22 = [21314_u16,42664_u16];
_23 = core::ptr::addr_of!(_5);
_23 = core::ptr::addr_of!(_5);
_20 = [_19,_19,_19,_9,_9];
_25 = 16975137178797042786_u64 as i16;
_2 = _10 as i8;
_6 = !(-55_isize);
match _18.0 {
340282366920938463461053005600848209412 => bb12,
_ => bb11
}
}
bb11 = {
Goto(bb2)
}
bb12 = {
_18.0 = 3313726457548710273_i64 | (-4491835730661985674_i64);
_26 = _18.1 % _18.1;
_1 = _19 as i32;
_20 = [_9,_9,_9,_9,_19];
_23 = core::ptr::addr_of!(_18.2);
_5 = (*_23);
_18.1 = _26 >> _4;
_19 = !_9;
_9 = _18.1 < _18.1;
(*_23) = _5;
_17 = [_12,_12,_11.fld1,_12,_11.fld1];
_18 = (6698028675208904770_i64, _26, _5);
RET = !53_u8;
(*_23).0 = [13021_u16,3659_u16];
Goto(bb13)
}
bb13 = {
(*_23) = (_22,);
_8 = core::ptr::addr_of!(_28);
(*_8) = !457788234_u32;
_29 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_5 = ((*_23).0,);
_30.0.0 = (*_23).0;
_27 = Adt59::Variant1 { fld0: _1,fld1: 70066452909892683772777002603712850880_u128,fld2: (*_23).0,fld3: _25 };
_33 = _6 - _6;
RET = _9 as u8;
_11.fld2.0 = core::ptr::addr_of!(place!(Field::<i16>(Variant(_27, 1), 3)));
_18.0 = -6622977910776053438_i64;
_8 = core::ptr::addr_of!((*_8));
place!(Field::<u128>(Variant(_27, 1), 1)) = 245930266115735166723392636797610330048_u128 + 112108450422335788002201027482672946439_u128;
Goto(bb14)
}
bb14 = {
Call(_34 = dump_var(5_usize, 3_usize, Move(_3), 28_usize, Move(_28), 14_usize, Move(_14), 22_usize, Move(_22)), bb15, UnwindUnreachable())
}
bb15 = {
Call(_34 = dump_var(5_usize, 17_usize, Move(_17), 4_usize, Move(_4), 20_usize, Move(_20), 25_usize, Move(_25)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(5_usize, 2_usize, Move(_2), 33_usize, Move(_33), 12_usize, Move(_12), 35_usize, _35), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: isize,mut _3: i8,mut _4: i8,mut _5: i8,mut _6: isize,mut _7: i8,mut _8: i8,mut _9: i8) -> Adt60 {
mir! {
type RET = Adt60;
let _10: *mut usize;
let _11: [i32; 4];
let _12: isize;
let _13: Adt51;
let _14: [u16; 2];
let _15: isize;
let _16: [i64; 6];
let _17: Adt55;
let _18: i32;
let _19: i32;
let _20: *const i16;
let _21: f64;
let _22: Adt65;
let _23: *const ([u16; 2],);
let _24: [u128; 3];
let _25: u32;
let _26: Adt61;
let _27: f64;
let _28: [char; 5];
let _29: i64;
let _30: [u8; 8];
let _31: *const *const i16;
let _32: [u8; 8];
let _33: [u128; 3];
let _34: *const *const i16;
let _35: [isize; 1];
let _36: [bool; 5];
let _37: [i32; 4];
let _38: Adt54;
let _39: [u8; 3];
let _40: Adt57;
let _41: Adt49;
let _42: u32;
let _43: [u64; 8];
let _44: [char; 6];
let _45: *const ([u16; 2],);
let _46: bool;
let _47: isize;
let _48: (i32,);
let _49: u8;
let _50: u16;
let _51: Adt56;
let _52: u64;
let _53: *mut usize;
let _54: Adt62;
let _55: bool;
let _56: Adt56;
let _57: i64;
let _58: [u8; 3];
let _59: isize;
let _60: bool;
let _61: Adt59;
let _62: u16;
let _63: usize;
let _64: [usize; 7];
let _65: [bool; 5];
let _66: bool;
let _67: i16;
let _68: Adt50;
let _69: i16;
let _70: i128;
let _71: *mut usize;
let _72: [char; 6];
let _73: Adt65;
let _74: [i64; 6];
let _75: u32;
let _76: (i64, usize, ([u16; 2],));
let _77: [u8; 3];
let _78: u128;
let _79: ();
let _80: ();
{
RET.fld1 = '\u{c56e3}';
_5 = -_3;
_9 = _3;
_5 = _8;
RET.fld1 = '\u{3dfc1}';
_3 = _5 + _5;
_6 = _2 >> _5;
RET.fld1 = '\u{7dc9d}';
_4 = -_5;
_4 = _7 - _3;
_7 = !_5;
_2 = _1 & _6;
_1 = -_2;
RET.fld1 = '\u{e8903}';
_7 = !_5;
_7 = _4 & _4;
_3 = 132_u8 as i8;
_2 = 3139_i16 as isize;
_4 = _7;
_8 = _7;
_9 = -_4;
_4 = !_5;
_3 = !_9;
_3 = _8;
_5 = _4;
_8 = -_7;
_6 = -_1;
_4 = 312519752_i32 as i8;
_5 = _3 | _8;
_7 = 131013878468177220827677471396851634809_u128 as i8;
Goto(bb1)
}
bb1 = {
_8 = -_5;
RET.fld1 = '\u{4004e}';
_1 = _6 >> _8;
_1 = _6 >> _3;
_8 = _9;
_1 = _6 * _6;
_5 = (-142078147713458179782291656074671864697_i128) as i8;
_2 = _1 & _1;
_1 = _6;
RET.fld1 = '\u{22fbe}';
_3 = _8 * _8;
RET.fld1 = '\u{30cf}';
RET.fld1 = '\u{13dcb}';
_1 = _2 >> _3;
_11 = [1025955422_i32,2033925022_i32,758758916_i32,(-1892498482_i32)];
_4 = _3 - _9;
_8 = _9;
_5 = true as i8;
_3 = 16580151668511391719_u64 as i8;
_9 = _8;
_3 = _9;
Call(_4 = fn7(_6, _1, _8, _2, _6, _9, _6, _8, _1, _6, _2, _2, _2, _1, _2), bb2, UnwindUnreachable())
}
bb2 = {
_4 = 18861_i16 as i8;
_6 = _2;
_7 = 3320496793_u32 as i8;
RET.fld1 = '\u{a7960}';
_2 = -_6;
_9 = _8;
_5 = _9;
_12 = 185_u8 as isize;
_4 = 762212551_i32 as i8;
_9 = -_8;
_6 = _1;
Goto(bb3)
}
bb3 = {
_7 = -_9;
_11 = [(-1167480817_i32),(-989391569_i32),(-454866032_i32),1972199227_i32];
RET.fld1 = '\u{fe447}';
_8 = _5;
_12 = -_6;
_2 = (-28730879532113973087371069435750963134_i128) as isize;
Call(_11 = fn8(_1, _1, _9), bb4, UnwindUnreachable())
}
bb4 = {
_14 = [17632_u16,8795_u16];
_12 = _1 + _1;
_12 = _6;
_14 = [58019_u16,29545_u16];
_14 = [25434_u16,12717_u16];
_17.fld0 = [7868135924482267146_u64,7985227314227591191_u64,17938971881727063517_u64,7721414778909828376_u64,1669235786046932317_u64,1277305071114426211_u64,17974068498135624950_u64,13727012902051470524_u64];
_15 = _1 << _5;
_14 = [54020_u16,28596_u16];
RET.fld1 = '\u{32caf}';
_5 = !_7;
_15 = _6;
_6 = _15;
_5 = _8 - _9;
_5 = _3;
_2 = -_12;
_6 = _2;
_5 = -_8;
_11 = [(-1532872139_i32),(-1545561210_i32),(-1833019556_i32),(-170660244_i32)];
_2 = _15 + _15;
_11 = [415201074_i32,977617480_i32,(-708850505_i32),(-1843730931_i32)];
_11 = [(-2064077029_i32),1180967970_i32,(-1534778150_i32),(-670498343_i32)];
_4 = !_5;
_18 = true as i32;
Goto(bb5)
}
bb5 = {
_15 = _6 << _8;
_9 = _5 & _3;
_7 = !_9;
RET.fld1 = '\u{61a18}';
_8 = -_9;
_1 = _2 * _12;
_11 = [_18,_18,_18,_18];
RET.fld1 = '\u{d09de}';
_2 = 2784840029513061471_u64 as isize;
_16 = [3523509712939573517_i64,1528394848314300552_i64,(-1936925482751188567_i64),(-2131812218761596947_i64),5145434475045102872_i64,4678223452365360272_i64];
_21 = 2622784641561065322496110028647628176_i128 as f64;
_17.fld0 = [6993995124953928011_u64,15097578491886837910_u64,17670424837863880847_u64,4742761559252213884_u64,955402635512995459_u64,13099555023633122046_u64,7515160873784510484_u64,16526043251738907285_u64];
_15 = _1 >> _4;
_6 = 3272591603_u32 as isize;
_2 = _12;
Goto(bb6)
}
bb6 = {
_25 = !4271242450_u32;
_2 = _15;
_24 = [235457219933879965339428967775825902989_u128,76961216766002306221295430829661658455_u128,184192900636107281860236175546695352853_u128];
_3 = _8;
_2 = _7 as isize;
_7 = 17314863404034797210_u64 as i8;
_15 = _1;
Goto(bb7)
}
bb7 = {
_24 = [220464460316083550395515644128310990879_u128,97242945462643036932812183619382848043_u128,1040269358988532010216911101796790504_u128];
_11 = [_18,_18,_18,_18];
RET.fld1 = '\u{58199}';
_14 = [27277_u16,42572_u16];
_2 = _1;
_12 = _1 & _1;
Goto(bb8)
}
bb8 = {
_17.fld0 = [12822389236530009445_u64,3528900086183911169_u64,3926650687031366058_u64,15298748699354199608_u64,9322701294903880394_u64,11470683514764902290_u64,10439714508361714985_u64,6461836414074896791_u64];
_14 = [49414_u16,53070_u16];
RET.fld1 = '\u{2ef9b}';
_4 = 93_u8 as i8;
_24 = [8682002367777770288040184227385425194_u128,39325802397400454052651406238086117426_u128,88668411514432346887368376612712724022_u128];
_11 = [_18,_18,_18,_18];
_8 = _7;
Call(_24 = core::intrinsics::transmute(_16), bb9, UnwindUnreachable())
}
bb9 = {
_18 = !(-1869556268_i32);
RET.fld1 = '\u{6b106}';
_28 = [RET.fld1,RET.fld1,RET.fld1,RET.fld1,RET.fld1];
Goto(bb10)
}
bb10 = {
_28 = [RET.fld1,RET.fld1,RET.fld1,RET.fld1,RET.fld1];
_27 = _21;
_5 = -_9;
_27 = _21 + _21;
_21 = -_27;
_3 = !_9;
_2 = _25 as isize;
_8 = _3 >> _15;
Goto(bb11)
}
bb11 = {
_21 = 41813_u16 as f64;
_32 = [36_u8,101_u8,85_u8,45_u8,249_u8,142_u8,44_u8,0_u8];
_14 = [27997_u16,56851_u16];
_24 = [85816154155512706224196106738148438491_u128,304585140890975331020593194597012694238_u128,133482175435241252133488947654258073990_u128];
_19 = _18;
_12 = _15 + _15;
_2 = -_15;
_1 = _18 as isize;
_24 = [104757812799374956760320521121018141699_u128,19998901038383190448957640330941605924_u128,100381467867890139286250544214590467065_u128];
_8 = 31937_i16 as i8;
_29 = 995616561582153338_i64 | (-2513814374398518595_i64);
_12 = _15 * _15;
_33 = [292661103902490961827638841444976466499_u128,287282623565469896439297657414807149936_u128,249319526918430036024779381140481968317_u128];
_8 = !_9;
Goto(bb12)
}
bb12 = {
_17.fld0 = [12204289144503754059_u64,8969981609524312830_u64,17030922978657600314_u64,1168200100725347029_u64,682129084606140710_u64,315051662145937797_u64,1991685202703034228_u64,7530525463949329303_u64];
_14 = [29905_u16,16244_u16];
_7 = _9 | _3;
_2 = -_15;
Goto(bb13)
}
bb13 = {
_31 = core::ptr::addr_of!(_20);
_28 = [RET.fld1,RET.fld1,RET.fld1,RET.fld1,RET.fld1];
_30 = [74_u8,153_u8,2_u8,175_u8,8_u8,197_u8,92_u8,99_u8];
_11 = [_19,_18,_19,_19];
RET.fld1 = '\u{1f67}';
_15 = !_12;
_34 = core::ptr::addr_of!(_17.fld1);
_19 = _21 as i32;
_5 = _8;
RET.fld1 = '\u{ec504}';
_5 = RET.fld1 as i8;
_16 = [_29,_29,_29,_29,_29,_29];
RET.fld1 = '\u{104d46}';
_7 = _3 ^ _9;
_24 = [194249705430686280628416299416289421827_u128,100792605428927281962780494176893648639_u128,246726028634326557847110896483139166495_u128];
_31 = core::ptr::addr_of!((*_34));
Goto(bb14)
}
bb14 = {
_2 = -_15;
_17.fld0 = [3388126216835220228_u64,626199437018831540_u64,16637851329181085631_u64,15098266660809713030_u64,2111489212536240623_u64,6741829189093250209_u64,8264994869660617013_u64,5432590861428233080_u64];
_29 = 4479558959352861230_i64 << _12;
_6 = _12;
_1 = _15 ^ _6;
_34 = core::ptr::addr_of!((*_31));
_16 = [_29,_29,_29,_29,_29,_29];
_16 = [_29,_29,_29,_29,_29,_29];
_36 = [false,false,false,false,false];
_17.fld0 = [606306135984953161_u64,2203577011835781923_u64,11015892297469164855_u64,13781107829049366431_u64,10565513024899298239_u64,5929287632054504452_u64,14132643546720349250_u64,7034382063516886153_u64];
_27 = _21;
_12 = !_1;
_35 = [_1];
_35 = [_12];
_27 = _21 * _21;
_29 = (-1629290846034484254_i64) ^ (-5627743252614334668_i64);
_12 = 4_usize as isize;
_2 = _6;
_38 = Adt54::Variant0 { fld0: _11,fld1: RET.fld1,fld2: _28,fld3: _25 };
SetDiscriminant(_38, 0);
_31 = core::ptr::addr_of!(_20);
place!(Field::<char>(Variant(_38, 0), 1)) = RET.fld1;
Goto(bb15)
}
bb15 = {
_24 = _33;
place!(Field::<[char; 5]>(Variant(_38, 0), 2)) = _28;
_24 = [103731756898919014136941445652725050675_u128,301356585268766725750982600684075890733_u128,156033876212499361226433559328559991646_u128];
_19 = !_18;
_15 = _1 >> _1;
_14 = [51585_u16,31748_u16];
_32 = [194_u8,201_u8,164_u8,249_u8,49_u8,165_u8,76_u8,143_u8];
_34 = core::ptr::addr_of!((*_34));
_15 = _2;
_18 = _19;
_35 = [_1];
Goto(bb16)
}
bb16 = {
_5 = 4_usize as i8;
_11 = [_18,_18,_19,_19];
_27 = _18 as f64;
_35 = [_2];
_43 = [8953976847556052711_u64,2417874639667543192_u64,3851868478687483826_u64,3251324730880611822_u64,3483225540763103788_u64,16532864866891963718_u64,3625527185217695696_u64,7677460802383237755_u64];
_6 = !_1;
place!(Field::<[i32; 4]>(Variant(_38, 0), 0)) = [_18,_19,_19,_19];
_42 = _25 & _25;
_12 = !_1;
_37 = [_19,_19,_18,_18];
_19 = 50007726722367023331531576544125552673_i128 as i32;
_32 = [142_u8,120_u8,27_u8,66_u8,245_u8,179_u8,76_u8,177_u8];
place!(Field::<u32>(Variant(_38, 0), 3)) = !_42;
_2 = -_15;
Goto(bb17)
}
bb17 = {
_47 = -_2;
_42 = _25 * Field::<u32>(Variant(_38, 0), 3);
_39 = [49_u8,63_u8,108_u8];
_14 = [37898_u16,26374_u16];
_39 = [186_u8,231_u8,244_u8];
_5 = _8;
_48 = (_18,);
_46 = true;
_48.0 = _18;
_16 = [_29,_29,_29,_29,_29,_29];
_47 = (-24451_i16) as isize;
_5 = 19877_i16 as i8;
_6 = -_12;
SetDiscriminant(_38, 1);
_15 = _1;
_38 = Adt54::Variant0 { fld0: _37,fld1: RET.fld1,fld2: _28,fld3: _42 };
_34 = core::ptr::addr_of!(_17.fld1);
_11 = Field::<[i32; 4]>(Variant(_38, 0), 0);
_39 = [9_u8,43_u8,246_u8];
_16 = [_29,_29,_29,_29,_29,_29];
_49 = 26_u8;
_11 = [_19,_48.0,_19,_18];
_48.0 = _19;
match _49 {
0 => bb14,
1 => bb5,
26 => bb19,
_ => bb18
}
}
bb18 = {
_18 = !(-1869556268_i32);
RET.fld1 = '\u{6b106}';
_28 = [RET.fld1,RET.fld1,RET.fld1,RET.fld1,RET.fld1];
Goto(bb10)
}
bb19 = {
match _49 {
0 => bb1,
1 => bb12,
2 => bb14,
3 => bb11,
4 => bb16,
5 => bb10,
6 => bb20,
26 => bb22,
_ => bb21
}
}
bb20 = {
_5 = 4_usize as i8;
_11 = [_18,_18,_19,_19];
_27 = _18 as f64;
_35 = [_2];
_43 = [8953976847556052711_u64,2417874639667543192_u64,3851868478687483826_u64,3251324730880611822_u64,3483225540763103788_u64,16532864866891963718_u64,3625527185217695696_u64,7677460802383237755_u64];
_6 = !_1;
place!(Field::<[i32; 4]>(Variant(_38, 0), 0)) = [_18,_19,_19,_19];
_42 = _25 & _25;
_12 = !_1;
_37 = [_19,_19,_18,_18];
_19 = 50007726722367023331531576544125552673_i128 as i32;
_32 = [142_u8,120_u8,27_u8,66_u8,245_u8,179_u8,76_u8,177_u8];
place!(Field::<u32>(Variant(_38, 0), 3)) = !_42;
_2 = -_15;
Goto(bb17)
}
bb21 = {
_31 = core::ptr::addr_of!(_20);
_28 = [RET.fld1,RET.fld1,RET.fld1,RET.fld1,RET.fld1];
_30 = [74_u8,153_u8,2_u8,175_u8,8_u8,197_u8,92_u8,99_u8];
_11 = [_19,_18,_19,_19];
RET.fld1 = '\u{1f67}';
_15 = !_12;
_34 = core::ptr::addr_of!(_17.fld1);
_19 = _21 as i32;
_5 = _8;
RET.fld1 = '\u{ec504}';
_5 = RET.fld1 as i8;
_16 = [_29,_29,_29,_29,_29,_29];
RET.fld1 = '\u{104d46}';
_7 = _3 ^ _9;
_24 = [194249705430686280628416299416289421827_u128,100792605428927281962780494176893648639_u128,246726028634326557847110896483139166495_u128];
_31 = core::ptr::addr_of!((*_34));
Goto(bb14)
}
bb22 = {
_6 = _1;
_18 = _48.0 + _19;
_48.0 = _19;
_32 = [_49,_49,_49,_49,_49,_49,_49,_49];
_5 = -_8;
_29 = _9 as i64;
_52 = 16029213323001520504_u64;
_47 = _15 ^ _1;
_44 = [RET.fld1,Field::<char>(Variant(_38, 0), 1),RET.fld1,Field::<char>(Variant(_38, 0), 1),RET.fld1,RET.fld1];
_21 = _42 as f64;
_52 = 6224107934127365133_u64;
_15 = _47;
match _52 {
0 => bb10,
1 => bb9,
2 => bb17,
3 => bb21,
4 => bb19,
6224107934127365133 => bb23,
_ => bb6
}
}
bb23 = {
_7 = _9;
_37 = [_19,_19,_18,_19];
_29 = _1 as i64;
_32 = _30;
_57 = _29 >> _5;
_48.0 = _18;
_50 = _52 as u16;
_52 = !1361769494298318336_u64;
_50 = 45611_u16 - 54480_u16;
_16 = [_57,_29,_57,_29,_29,_29];
_19 = -_18;
Goto(bb24)
}
bb24 = {
_60 = !_46;
_48.0 = _19;
_4 = _60 as i8;
_8 = _7;
_19 = _18 & _48.0;
match _49 {
0 => bb1,
1 => bb17,
26 => bb25,
_ => bb14
}
}
bb25 = {
_21 = 12622339233807496788_usize as f64;
place!(Field::<[i32; 4]>(Variant(_38, 0), 0)) = [_48.0,_18,_19,_19];
_18 = !_19;
SetDiscriminant(_38, 0);
_34 = core::ptr::addr_of!((*_34));
place!(Field::<char>(Variant(_38, 0), 1)) = RET.fld1;
_36 = [_46,_46,_46,_46,_60];
_60 = _6 != _2;
_30 = [_49,_49,_49,_49,_49,_49,_49,_49];
_31 = core::ptr::addr_of!((*_31));
_7 = _9 * _3;
_12 = -_2;
_47 = -_2;
place!(Field::<[char; 5]>(Variant(_38, 0), 2)) = [Field::<char>(Variant(_38, 0), 1),Field::<char>(Variant(_38, 0), 1),RET.fld1,Field::<char>(Variant(_38, 0), 1),RET.fld1];
_58 = [_49,_49,_49];
_39 = [_49,_49,_49];
match _49 {
26 => bb26,
_ => bb17
}
}
bb26 = {
_28 = Field::<[char; 5]>(Variant(_38, 0), 2);
_42 = _25;
_57 = -_29;
_15 = _1;
_28 = [RET.fld1,Field::<char>(Variant(_38, 0), 1),RET.fld1,Field::<char>(Variant(_38, 0), 1),RET.fld1];
_48 = (_19,);
_10 = core::ptr::addr_of_mut!(_63);
_62 = _49 as u16;
_6 = _12 << _1;
_2 = _12;
RET.fld1 = Field::<char>(Variant(_38, 0), 1);
RET.fld1 = Field::<char>(Variant(_38, 0), 1);
_12 = _1 - _2;
Goto(bb27)
}
bb27 = {
_35 = [_6];
(*_31) = core::ptr::addr_of!(_67);
_37 = [_48.0,_18,_18,_18];
_30 = [_49,_49,_49,_49,_49,_49,_49,_49];
_12 = _15;
place!(Field::<u32>(Variant(_38, 0), 3)) = _25;
_59 = -_47;
_49 = !77_u8;
_19 = !_48.0;
_72 = [Field::<char>(Variant(_38, 0), 1),RET.fld1,Field::<char>(Variant(_38, 0), 1),Field::<char>(Variant(_38, 0), 1),RET.fld1,Field::<char>(Variant(_38, 0), 1)];
(*_10) = !2_usize;
_38 = Adt54::Variant0 { fld0: _37,fld1: RET.fld1,fld2: _28,fld3: _25 };
Goto(bb28)
}
bb28 = {
_64 = [(*_10),(*_10),(*_10),_63,(*_10),(*_10),(*_10)];
place!(Field::<char>(Variant(_38, 0), 1)) = RET.fld1;
_63 = !1_usize;
(*_34) = core::ptr::addr_of!(_67);
_48 = (_19,);
(*_31) = core::ptr::addr_of!((*_20));
_62 = _52 as u16;
(*_20) = 3958_i16 + 15455_i16;
SetDiscriminant(_38, 1);
place!(Field::<i128>(Variant(_38, 1), 7)) = RET.fld1 as i128;
_24 = [1731632236842605241104352039592961933_u128,228748903836239546030423218762926779083_u128,81093469019200846727616376773674771877_u128];
place!(Field::<(i64, usize, ([u16; 2],))>(Variant(_38, 1), 3)).0 = _27 as i64;
_12 = -_2;
Goto(bb29)
}
bb29 = {
_60 = !_46;
(*_20) = !(-22299_i16);
RET.fld2 = ((*_34),);
place!(Field::<[u16; 2]>(Variant(_38, 1), 0)) = [_50,_50];
RET.fld0 = core::ptr::addr_of!(place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_38, 1), 5)).3.2);
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_38, 1), 5)).1.1 = _18;
place!(Field::<u128>(Variant(_38, 1), 4)) = _57 as u128;
_23 = core::ptr::addr_of!(place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_38, 1), 5)).3.1);
place!(Field::<(i64, usize, ([u16; 2],))>(Variant(_38, 1), 3)).2.0 = [_50,_50];
_17.fld0 = [_52,_52,_52,_52,_52,_52,_52,_52];
(*_34) = core::ptr::addr_of!((*_20));
_31 = core::ptr::addr_of!(RET.fld2.0);
_53 = _10;
RET.fld1 = '\u{a561c}';
Goto(bb30)
}
bb30 = {
Call(_79 = dump_var(6_usize, 72_usize, Move(_72), 59_usize, Move(_59), 14_usize, Move(_14), 3_usize, Move(_3)), bb31, UnwindUnreachable())
}
bb31 = {
Call(_79 = dump_var(6_usize, 47_usize, Move(_47), 52_usize, Move(_52), 36_usize, Move(_36), 12_usize, Move(_12)), bb32, UnwindUnreachable())
}
bb32 = {
Call(_79 = dump_var(6_usize, 8_usize, Move(_8), 1_usize, Move(_1), 46_usize, Move(_46), 39_usize, Move(_39)), bb33, UnwindUnreachable())
}
bb33 = {
Call(_79 = dump_var(6_usize, 37_usize, Move(_37), 44_usize, Move(_44), 4_usize, Move(_4), 29_usize, Move(_29)), bb34, UnwindUnreachable())
}
bb34 = {
Call(_79 = dump_var(6_usize, 58_usize, Move(_58), 11_usize, Move(_11), 5_usize, Move(_5), 33_usize, Move(_33)), bb35, UnwindUnreachable())
}
bb35 = {
Call(_79 = dump_var(6_usize, 32_usize, Move(_32), 35_usize, Move(_35), 80_usize, _80, 80_usize, _80), bb36, UnwindUnreachable())
}
bb36 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: isize,mut _3: i8,mut _4: isize,mut _5: isize,mut _6: i8,mut _7: isize,mut _8: i8,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: isize,mut _13: isize,mut _14: isize,mut _15: isize) -> i8 {
mir! {
type RET = i8;
let _16: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64);
let _17: (([u16; 2],), ([u16; 2],), f32);
let _18: (*const *const i16, *const *const i16);
let _19: isize;
let _20: char;
let _21: f32;
let _22: f32;
let _23: ();
let _24: ();
{
_5 = !_10;
_16.1.1 = 1718763909803117626_u64 as i32;
RET = _8 ^ _8;
_16.3.2 = _6 as f32;
_14 = -_4;
_16.1.3 = 176461324287581884074072903044277029370_u128;
_16.2 = [17725531484751442974_usize,14484387523863391732_usize,1275647004220979320_usize,1_usize,13852332602984978815_usize,3607624051594140290_usize,3_usize,831870893460144366_usize];
_16.1.0 = [_16.1.3,_16.1.3,_16.1.3];
_15 = -_4;
_16.0 = _16.3.2 + _16.3.2;
_16.1.3 = 262371711215237969920704112237526875960_u128;
RET = _8;
_10 = _1;
_16.3.1.0 = [40240_u16,54549_u16];
_7 = _4 + _14;
_17.1 = _16.3.1;
_16.5 = _16.1.1 as f64;
_16.3.1.0 = _17.1.0;
_14 = _12;
_11 = _1 & _7;
_17.0.0 = _17.1.0;
_6 = _8 & _3;
_17 = (_16.3.1, _16.3.1, _16.3.2);
_16.1.3 = _16.1.1 as u128;
_20 = '\u{104742}';
Goto(bb1)
}
bb1 = {
Call(_23 = dump_var(7_usize, 10_usize, Move(_10), 8_usize, Move(_8), 14_usize, Move(_14), 3_usize, Move(_3)), bb2, UnwindUnreachable())
}
bb2 = {
Call(_23 = dump_var(7_usize, 13_usize, Move(_13), 2_usize, Move(_2), 4_usize, Move(_4), 11_usize, Move(_11)), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: isize,mut _2: isize,mut _3: i8) -> [i32; 4] {
mir! {
type RET = [i32; 4];
let _4: isize;
let _5: ([u16; 2],);
let _6: i8;
let _7: Adt63;
let _8: [usize; 7];
let _9: Adt50;
let _10: isize;
let _11: [usize; 8];
let _12: [usize; 7];
let _13: [usize; 7];
let _14: (usize, u32, *const u32);
let _15: [usize; 7];
let _16: u64;
let _17: ();
let _18: ();
{
RET = [365476599_i32,618032209_i32,1245050294_i32,2060318725_i32];
_3 = 34_i8 * 62_i8;
RET = [1032258903_i32,(-1801959626_i32),1763721592_i32,(-8444578_i32)];
RET = [(-527478088_i32),702893194_i32,1724985844_i32,876627674_i32];
Goto(bb1)
}
bb1 = {
_3 = (-125_i8) * 57_i8;
Goto(bb2)
}
bb2 = {
_1 = -_2;
_3 = -(-20_i8);
_4 = '\u{f5182}' as isize;
RET = [710423372_i32,(-377918206_i32),1749530683_i32,1163831053_i32];
_2 = _1;
_1 = _2 | _2;
RET = [1971419157_i32,(-708436657_i32),(-97635649_i32),1516567637_i32];
_1 = _3 as isize;
_1 = _2 >> _2;
_1 = 165_u8 as isize;
_2 = _1 << _1;
_4 = _2 - _2;
_4 = _2 & _2;
_5.0 = [41662_u16,54029_u16];
RET = [(-673189051_i32),445748615_i32,(-504832832_i32),(-1014516060_i32)];
_1 = 246366002622481290866562074342840061264_u128 as isize;
_6 = _3;
RET = [(-719962577_i32),778085423_i32,591526792_i32,1840363402_i32];
_4 = 2814368210_u32 as isize;
_1 = -_2;
_5.0 = [30361_u16,23785_u16];
_8 = [4_usize,12060696003958055559_usize,5_usize,18292728463472137200_usize,10019382426835638119_usize,5_usize,3143228289730259458_usize];
_5.0 = [3063_u16,9195_u16];
RET = [895482559_i32,1722122870_i32,890971717_i32,1684477076_i32];
_2 = (-19074_i16) as isize;
RET = [(-187452843_i32),(-739952577_i32),(-1988773842_i32),(-723706912_i32)];
_8 = [6_usize,4_usize,2926888053706926958_usize,13717819363038990195_usize,4_usize,5_usize,4794640727389480816_usize];
Goto(bb3)
}
bb3 = {
_5.0 = [9050_u16,40699_u16];
_10 = _1;
_1 = !_4;
_4 = !_10;
_3 = -_6;
_10 = (-4549926822246359500_i64) as isize;
_1 = _4;
RET = [(-506506676_i32),(-1100246802_i32),888539525_i32,(-439737808_i32)];
_10 = 217362062571783320119712900507489241244_u128 as isize;
_2 = -_1;
_8 = [5_usize,2_usize,4_usize,123485926271501122_usize,6_usize,0_usize,11207689137769358861_usize];
RET = [(-644966607_i32),847568633_i32,687638870_i32,(-314921629_i32)];
_4 = _1 - _2;
_3 = _6 - _6;
_11 = [1_usize,2486919552953602865_usize,18206079061469809661_usize,3707628178642930421_usize,5_usize,8714425480202312962_usize,5689349379536701744_usize,1_usize];
_13 = [7_usize,4_usize,3_usize,3715682109490085756_usize,0_usize,7_usize,17462553785622000774_usize];
_14.1 = !3720518017_u32;
_11 = [3_usize,3693162032730546493_usize,6_usize,6_usize,3_usize,5_usize,12087961144364160649_usize,8012623142353180459_usize];
_1 = -_2;
_14.2 = core::ptr::addr_of!(_14.1);
_6 = -_3;
_6 = '\u{c7709}' as i8;
_4 = _2;
_15 = [4640473156537837434_usize,4_usize,0_usize,13833704921551197050_usize,2_usize,700400707784422954_usize,13719310246853389598_usize];
_14.2 = core::ptr::addr_of!(_14.1);
Call(_9 = fn9(_2, _15, _8, RET, _11, _2), bb4, UnwindUnreachable())
}
bb4 = {
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0)).1.3 = Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1).3 | Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1).3;
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1)).2 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1.2;
_14.0 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).4 as usize;
_12 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
RET = [Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1.1,Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1).1,Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1).1,Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1).1];
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1)) = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1;
_4 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).4;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0)).1.0 = Field::<[u128; 3]>(Variant(_9, 0), 2);
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_9, 0), 1)) = (Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1.0, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1.1, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1.2, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(_9, 0), 0).1.3);
_8 = _12;
SetDiscriminant(_9, 1);
place!(Field::<(*const *const i16, *const *const i16)>(Variant(_9, 1), 5)).0 = core::ptr::addr_of!(place!(Field::<(*const i16,)>(Variant(_9, 1), 3)).0);
Goto(bb5)
}
bb5 = {
Call(_17 = dump_var(8_usize, 6_usize, Move(_6), 2_usize, Move(_2), 15_usize, Move(_15), 11_usize, Move(_11)), bb6, UnwindUnreachable())
}
bb6 = {
Call(_17 = dump_var(8_usize, 10_usize, Move(_10), 3_usize, Move(_3), 18_usize, _18, 18_usize, _18), bb7, UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: isize,mut _2: [usize; 7],mut _3: [usize; 7],mut _4: [i32; 4],mut _5: [usize; 8],mut _6: isize) -> Adt50 {
mir! {
type RET = Adt50;
let _7: i16;
let _8: f64;
let _9: char;
let _10: isize;
let _11: char;
let _12: i16;
let _13: [u8; 3];
let _14: i8;
let _15: Adt55;
let _16: u32;
let _17: i128;
let _18: ();
let _19: ();
{
_2 = [475260563472320202_usize,17251558044661000169_usize,0_usize,2082521434497248042_usize,3_usize,15202829220418966431_usize,5_usize];
_7 = !(-15290_i16);
Goto(bb1)
}
bb1 = {
_6 = !_1;
_5 = [1347392130848832987_usize,5_usize,13431116987141474750_usize,6089823664022807470_usize,4_usize,4_usize,9445763685509010202_usize,3_usize];
_7 = 17070_i16;
_7 = 28758_i16 & 14979_i16;
_9 = '\u{9dbe6}';
_4 = [643015640_i32,(-854865790_i32),2017820753_i32,(-1096210256_i32)];
_3 = _2;
_9 = '\u{10e07}';
_1 = (-106_i8) as isize;
_3 = [7_usize,0_usize,0_usize,1989501269360667589_usize,6_usize,1785327483430468496_usize,3771067500703605541_usize];
_3 = _2;
_5 = [3_usize,4_usize,17338938531822546214_usize,10223969894455414379_usize,2_usize,3_usize,3210476227525654815_usize,2381386065908077958_usize];
_3 = [5824726328837870249_usize,5_usize,3_usize,11654439406070119861_usize,1_usize,11204214216076968575_usize,3_usize];
_10 = 1438954833_u32 as isize;
_10 = _6;
_1 = _6;
_10 = _6 * _6;
_3 = [7505009285769354371_usize,5_usize,3_usize,3709782298405798002_usize,2_usize,3_usize,14699537867286520696_usize];
_9 = '\u{935ee}';
_1 = _7 as isize;
_12 = _7 ^ _7;
Call(RET = fn10(_1, _10, _10, _10, _5, _4), bb2, UnwindUnreachable())
}
bb2 = {
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).1 = Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1);
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).2 = _5;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.1 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).3.0;
place!(Field::<[usize; 8]>(Variant(RET, 0), 7)) = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).2;
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)) = (Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.0, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.1, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.2, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.3);
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).5 = 30183646408101063180572766465044584845_i128 as f64;
_15.fld0 = [16730671202825862245_u64,14832974090083840763_u64,18035022755805658422_u64,11423307331544547454_u64,8868636940876813234_u64,15351668604880365041_u64,7360746774667769495_u64,15307168676150403568_u64];
place!(Field::<*const ([u16; 2],)>(Variant(RET, 0), 6)) = core::ptr::addr_of!(place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.1);
place!(Field::<[u128; 3]>(Variant(RET, 0), 2)) = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.0;
place!(Field::<[u128; 3]>(Variant(RET, 0), 2)) = [Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.3,Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.3,Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).3];
Goto(bb3)
}
bb3 = {
Call(_18 = dump_var(9_usize, 3_usize, Move(_3), 12_usize, Move(_12), 10_usize, Move(_10), 2_usize, Move(_2)), bb4, UnwindUnreachable())
}
bb4 = {
Call(_18 = dump_var(9_usize, 9_usize, Move(_9), 19_usize, _19, 19_usize, _19, 19_usize, _19), bb5, UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: [usize; 8],mut _6: [i32; 4]) -> Adt50 {
mir! {
type RET = Adt50;
let _7: u64;
let _8: *const ([u16; 2],);
let _9: Adt65;
let _10: Adt59;
let _11: u16;
let _12: isize;
let _13: (i64, usize, ([u16; 2],));
let _14: f64;
let _15: [i32; 4];
let _16: isize;
let _17: (u8, u64, ([u128; 3], i32, *mut i64, u128));
let _18: usize;
let _19: (i32,);
let _20: i64;
let _21: [i64; 6];
let _22: isize;
let _23: (i64, usize, ([u16; 2],));
let _24: isize;
let _25: bool;
let _26: [bool; 5];
let _27: isize;
let _28: f64;
let _29: [i32; 4];
let _30: bool;
let _31: [u8; 8];
let _32: u64;
let _33: u32;
let _34: i16;
let _35: [usize; 8];
let _36: [char; 5];
let _37: [i64; 6];
let _38: [bool; 5];
let _39: i64;
let _40: u64;
let _41: [u8; 3];
let _42: Adt51;
let _43: u16;
let _44: u64;
let _45: (i32,);
let _46: *const f32;
let _47: u32;
let _48: *const [usize; 8];
let _49: [i32; 4];
let _50: [i32; 4];
let _51: isize;
let _52: *const u32;
let _53: [usize; 7];
let _54: f32;
let _55: u128;
let _56: char;
let _57: isize;
let _58: u64;
let _59: i64;
let _60: *const f32;
let _61: ([u16; 2],);
let _62: (([u16; 2],), ([u16; 2],), f32);
let _63: bool;
let _64: f32;
let _65: [bool; 5];
let _66: usize;
let _67: char;
let _68: bool;
let _69: i8;
let _70: bool;
let _71: f32;
let _72: [i32; 4];
let _73: ([u16; 2],);
let _74: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64);
let _75: [i64; 6];
let _76: u64;
let _77: u16;
let _78: bool;
let _79: [u128; 3];
let _80: f64;
let _81: *const [usize; 8];
let _82: i64;
let _83: [u128; 3];
let _84: f64;
let _85: ([u16; 2],);
let _86: bool;
let _87: Adt59;
let _88: *const i16;
let _89: bool;
let _90: [char; 6];
let _91: bool;
let _92: [usize; 8];
let _93: [char; 5];
let _94: Adt65;
let _95: f32;
let _96: [i64; 6];
let _97: bool;
let _98: [isize; 1];
let _99: [char; 5];
let _100: [i64; 6];
let _101: [bool; 5];
let _102: *mut i64;
let _103: Adt51;
let _104: u32;
let _105: i32;
let _106: [u8; 8];
let _107: [char; 6];
let _108: char;
let _109: isize;
let _110: char;
let _111: isize;
let _112: u16;
let _113: isize;
let _114: f32;
let _115: Adt52;
let _116: bool;
let _117: Adt54;
let _118: *mut usize;
let _119: (i64, usize, ([u16; 2],));
let _120: u8;
let _121: char;
let _122: [bool; 5];
let _123: isize;
let _124: Adt65;
let _125: [usize; 8];
let _126: bool;
let _127: bool;
let _128: Adt59;
let _129: [u8; 8];
let _130: usize;
let _131: f64;
let _132: Adt57;
let _133: isize;
let _134: [u128; 3];
let _135: f32;
let _136: isize;
let _137: isize;
let _138: isize;
let _139: ([u128; 3], i32, *mut i64, u128);
let _140: [u16; 2];
let _141: Adt56;
let _142: Adt56;
let _143: (([u16; 2],), ([u16; 2],), f32);
let _144: *const *const i16;
let _145: [usize; 8];
let _146: [i32; 4];
let _147: Adt59;
let _148: bool;
let _149: bool;
let _150: f32;
let _151: [i32; 4];
let _152: (i32,);
let _153: [u128; 3];
let _154: char;
let _155: bool;
let _156: [isize; 1];
let _157: [i32; 4];
let _158: Adt52;
let _159: [u128; 3];
let _160: *const *const i16;
let _161: ([u128; 3], i32, *mut i64, u128);
let _162: [isize; 1];
let _163: Adt53;
let _164: i64;
let _165: bool;
let _166: *const i16;
let _167: [u8; 3];
let _168: *const i16;
let _169: isize;
let _170: ();
let _171: ();
{
_7 = 2598059570665422618_u64 << _4;
Call(_4 = core::intrinsics::transmute(_3), bb1, UnwindUnreachable())
}
bb1 = {
_3 = -_4;
_1 = -_2;
_7 = !969382499628309594_u64;
_2 = -_4;
Goto(bb2)
}
bb2 = {
_6 = [1082491508_i32,1717609623_i32,(-778837036_i32),(-1637330417_i32)];
_5 = [3018790963269984459_usize,1681520238051337715_usize,1082390122500675423_usize,6858844732243088881_usize,0_usize,6_usize,13619383430495533106_usize,506037721657047549_usize];
_6 = [(-1039909108_i32),514522656_i32,(-1639008760_i32),(-579128349_i32)];
_4 = _1;
_5 = [7350130190119429340_usize,3_usize,10939131417105099896_usize,6_usize,7059563716502776839_usize,13217976805107695194_usize,3953051534217370690_usize,5_usize];
_3 = 26787_i16 as isize;
_4 = !_3;
_6 = [(-1288750257_i32),(-1535861040_i32),(-1850307148_i32),(-930775925_i32)];
_1 = _4;
_1 = _2;
_5 = [9310964770169346000_usize,4_usize,1_usize,1162052539941152001_usize,11278690882501570609_usize,2_usize,100228943350829506_usize,7566357199432684866_usize];
_5 = [0_usize,1_usize,6150057512074291421_usize,6_usize,0_usize,13807620434539074607_usize,7_usize,5921737336532911192_usize];
_1 = _3;
_4 = _1 | _1;
_3 = _1 - _2;
_4 = _3 | _3;
_5 = [18091916983916990298_usize,1_usize,7_usize,10116999779878156781_usize,6_usize,12929821467659950056_usize,5_usize,3054816021828880090_usize];
_6 = [1859593461_i32,945359015_i32,1073903338_i32,(-403987669_i32)];
Goto(bb3)
}
bb3 = {
_6 = [102408174_i32,727873718_i32,510268777_i32,(-45514780_i32)];
_7 = 5034364464611708253_u64 | 13367978664604834099_u64;
_5 = [7_usize,1793575720068480542_usize,342177121464115490_usize,2_usize,13557353024045365336_usize,15430401770584626132_usize,4_usize,0_usize];
_11 = !16228_u16;
_7 = 5979854289164928369_u64;
_7 = 857245773334650725_u64;
_10 = Adt59::Variant0 { fld0: 6354658144647743664_i64 };
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
857245773334650725 => bb8,
_ => bb7
}
}
bb4 = {
_6 = [1082491508_i32,1717609623_i32,(-778837036_i32),(-1637330417_i32)];
_5 = [3018790963269984459_usize,1681520238051337715_usize,1082390122500675423_usize,6858844732243088881_usize,0_usize,6_usize,13619383430495533106_usize,506037721657047549_usize];
_6 = [(-1039909108_i32),514522656_i32,(-1639008760_i32),(-579128349_i32)];
_4 = _1;
_5 = [7350130190119429340_usize,3_usize,10939131417105099896_usize,6_usize,7059563716502776839_usize,13217976805107695194_usize,3953051534217370690_usize,5_usize];
_3 = 26787_i16 as isize;
_4 = !_3;
_6 = [(-1288750257_i32),(-1535861040_i32),(-1850307148_i32),(-930775925_i32)];
_1 = _4;
_1 = _2;
_5 = [9310964770169346000_usize,4_usize,1_usize,1162052539941152001_usize,11278690882501570609_usize,2_usize,100228943350829506_usize,7566357199432684866_usize];
_5 = [0_usize,1_usize,6150057512074291421_usize,6_usize,0_usize,13807620434539074607_usize,7_usize,5921737336532911192_usize];
_1 = _3;
_4 = _1 | _1;
_3 = _1 - _2;
_4 = _3 | _3;
_5 = [18091916983916990298_usize,1_usize,7_usize,10116999779878156781_usize,6_usize,12929821467659950056_usize,5_usize,3054816021828880090_usize];
_6 = [1859593461_i32,945359015_i32,1073903338_i32,(-403987669_i32)];
Goto(bb3)
}
bb5 = {
_3 = -_4;
_1 = -_2;
_7 = !969382499628309594_u64;
_2 = -_4;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
place!(Field::<i64>(Variant(_10, 0), 0)) = -1127288267324148289_i64;
_8 = core::ptr::addr_of!(_13.2);
_3 = _4 >> _4;
_13.0 = Field::<i64>(Variant(_10, 0), 0) ^ Field::<i64>(Variant(_10, 0), 0);
SetDiscriminant(_10, 1);
(*_8).0 = [_11,_11];
place!(Field::<i32>(Variant(_10, 1), 0)) = _11 as i32;
_13.1 = 1_usize >> _4;
place!(Field::<u128>(Variant(_10, 1), 1)) = _13.0 as u128;
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [_11,_11];
_5 = [_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1];
_3 = _4 << _13.0;
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = (*_8).0;
(*_8).0 = [_11,_11];
_10 = Adt59::Variant0 { fld0: _13.0 };
match _7 {
857245773334650725 => bb9,
_ => bb2
}
}
bb9 = {
_4 = _2;
_12 = _2;
_15 = [(-299734967_i32),(-1837009549_i32),(-771148979_i32),(-757738211_i32)];
_11 = !747_u16;
_13.1 = 8906159186672534247_usize << Field::<i64>(Variant(_10, 0), 0);
_14 = _11 as f64;
_5 = [_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1];
SetDiscriminant(_10, 1);
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = _13.2.0;
_16 = _3 + _12;
match _7 {
0 => bb1,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
857245773334650725 => bb15,
_ => bb14
}
}
bb10 = {
place!(Field::<i64>(Variant(_10, 0), 0)) = -1127288267324148289_i64;
_8 = core::ptr::addr_of!(_13.2);
_3 = _4 >> _4;
_13.0 = Field::<i64>(Variant(_10, 0), 0) ^ Field::<i64>(Variant(_10, 0), 0);
SetDiscriminant(_10, 1);
(*_8).0 = [_11,_11];
place!(Field::<i32>(Variant(_10, 1), 0)) = _11 as i32;
_13.1 = 1_usize >> _4;
place!(Field::<u128>(Variant(_10, 1), 1)) = _13.0 as u128;
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [_11,_11];
_5 = [_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1,_13.1];
_3 = _4 << _13.0;
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = (*_8).0;
(*_8).0 = [_11,_11];
_10 = Adt59::Variant0 { fld0: _13.0 };
match _7 {
857245773334650725 => bb9,
_ => bb2
}
}
bb11 = {
_6 = [102408174_i32,727873718_i32,510268777_i32,(-45514780_i32)];
_7 = 5034364464611708253_u64 | 13367978664604834099_u64;
_5 = [7_usize,1793575720068480542_usize,342177121464115490_usize,2_usize,13557353024045365336_usize,15430401770584626132_usize,4_usize,0_usize];
_11 = !16228_u16;
_7 = 5979854289164928369_u64;
_7 = 857245773334650725_u64;
_10 = Adt59::Variant0 { fld0: 6354658144647743664_i64 };
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
857245773334650725 => bb8,
_ => bb7
}
}
bb12 = {
Return()
}
bb13 = {
_3 = -_4;
_1 = -_2;
_7 = !969382499628309594_u64;
_2 = -_4;
Goto(bb2)
}
bb14 = {
_6 = [1082491508_i32,1717609623_i32,(-778837036_i32),(-1637330417_i32)];
_5 = [3018790963269984459_usize,1681520238051337715_usize,1082390122500675423_usize,6858844732243088881_usize,0_usize,6_usize,13619383430495533106_usize,506037721657047549_usize];
_6 = [(-1039909108_i32),514522656_i32,(-1639008760_i32),(-579128349_i32)];
_4 = _1;
_5 = [7350130190119429340_usize,3_usize,10939131417105099896_usize,6_usize,7059563716502776839_usize,13217976805107695194_usize,3953051534217370690_usize,5_usize];
_3 = 26787_i16 as isize;
_4 = !_3;
_6 = [(-1288750257_i32),(-1535861040_i32),(-1850307148_i32),(-930775925_i32)];
_1 = _4;
_1 = _2;
_5 = [9310964770169346000_usize,4_usize,1_usize,1162052539941152001_usize,11278690882501570609_usize,2_usize,100228943350829506_usize,7566357199432684866_usize];
_5 = [0_usize,1_usize,6150057512074291421_usize,6_usize,0_usize,13807620434539074607_usize,7_usize,5921737336532911192_usize];
_1 = _3;
_4 = _1 | _1;
_3 = _1 - _2;
_4 = _3 | _3;
_5 = [18091916983916990298_usize,1_usize,7_usize,10116999779878156781_usize,6_usize,12929821467659950056_usize,5_usize,3054816021828880090_usize];
_6 = [1859593461_i32,945359015_i32,1073903338_i32,(-403987669_i32)];
Goto(bb3)
}
bb15 = {
_8 = core::ptr::addr_of!((*_8));
_17.2.3 = 41073313427960359937874038035310410576_u128;
_10 = Adt59::Variant0 { fld0: _13.0 };
_13.0 = Field::<i64>(Variant(_10, 0), 0);
Goto(bb16)
}
bb16 = {
_17.2.2 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_10, 0), 0)));
(*_8).0 = [_11,_11];
_2 = _4 >> _4;
_10 = Adt59::Variant0 { fld0: _13.0 };
_15 = [(-1546990008_i32),357022216_i32,(-1370724895_i32),(-933925109_i32)];
_16 = !_1;
_13.1 = 10041355850700297929_usize * 6526227823741157547_usize;
_15 = [1172831770_i32,1312821523_i32,942269947_i32,909628976_i32];
_17.2.1 = 1146812176_i32;
_18 = _13.1 ^ _13.1;
_10 = Adt59::Variant0 { fld0: _13.0 };
SetDiscriminant(_10, 0);
_7 = 705064356190781169_u64;
_17.2.3 = 156_u8 as u128;
match _7 {
0 => bb10,
1 => bb6,
2 => bb13,
3 => bb9,
4 => bb17,
705064356190781169 => bb19,
_ => bb18
}
}
bb17 = {
_6 = [102408174_i32,727873718_i32,510268777_i32,(-45514780_i32)];
_7 = 5034364464611708253_u64 | 13367978664604834099_u64;
_5 = [7_usize,1793575720068480542_usize,342177121464115490_usize,2_usize,13557353024045365336_usize,15430401770584626132_usize,4_usize,0_usize];
_11 = !16228_u16;
_7 = 5979854289164928369_u64;
_7 = 857245773334650725_u64;
_10 = Adt59::Variant0 { fld0: 6354658144647743664_i64 };
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
857245773334650725 => bb8,
_ => bb7
}
}
bb18 = {
_6 = [1082491508_i32,1717609623_i32,(-778837036_i32),(-1637330417_i32)];
_5 = [3018790963269984459_usize,1681520238051337715_usize,1082390122500675423_usize,6858844732243088881_usize,0_usize,6_usize,13619383430495533106_usize,506037721657047549_usize];
_6 = [(-1039909108_i32),514522656_i32,(-1639008760_i32),(-579128349_i32)];
_4 = _1;
_5 = [7350130190119429340_usize,3_usize,10939131417105099896_usize,6_usize,7059563716502776839_usize,13217976805107695194_usize,3953051534217370690_usize,5_usize];
_3 = 26787_i16 as isize;
_4 = !_3;
_6 = [(-1288750257_i32),(-1535861040_i32),(-1850307148_i32),(-930775925_i32)];
_1 = _4;
_1 = _2;
_5 = [9310964770169346000_usize,4_usize,1_usize,1162052539941152001_usize,11278690882501570609_usize,2_usize,100228943350829506_usize,7566357199432684866_usize];
_5 = [0_usize,1_usize,6150057512074291421_usize,6_usize,0_usize,13807620434539074607_usize,7_usize,5921737336532911192_usize];
_1 = _3;
_4 = _1 | _1;
_3 = _1 - _2;
_4 = _3 | _3;
_5 = [18091916983916990298_usize,1_usize,7_usize,10116999779878156781_usize,6_usize,12929821467659950056_usize,5_usize,3054816021828880090_usize];
_6 = [1859593461_i32,945359015_i32,1073903338_i32,(-403987669_i32)];
Goto(bb3)
}
bb19 = {
_22 = 37_u8 as isize;
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_4 = _17.2.3 as isize;
_20 = _13.0;
_17.0 = 10_u8;
_21 = [_20,_20,_13.0,_20,_20,_13.0];
_19.0 = _17.0 as i32;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: (*_8).0,fld3: (-8510_i16) };
_17.0 = !124_u8;
_13.2.0 = [_11,_11];
_13.1 = 2667026397_u32 as usize;
_16 = _3;
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_23.0 = _14 as i64;
Call(_23.0 = core::intrinsics::bswap(_13.0), bb20, UnwindUnreachable())
}
bb20 = {
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_10 = Adt59::Variant1 { fld0: _17.2.1,fld1: _17.2.3,fld2: (*_8).0,fld3: (-990_i16) };
_13.0 = _23.0 >> _2;
_20 = _14 as i64;
_12 = -_16;
_17.1 = (-112_i8) as u64;
_20 = _13.0 ^ _13.0;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: (*_8).0,fld3: 12980_i16 };
_12 = !_16;
Goto(bb21)
}
bb21 = {
_5 = [_18,_18,_18,_18,_18,_18,_18,_18];
_23.2 = (*_8);
(*_8).0 = Field::<[u16; 2]>(Variant(_10, 1), 2);
_11 = !19915_u16;
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_3 = _4;
_17.2.3 = _2 as u128;
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_15 = [Field::<i32>(Variant(_10, 1), 0),_17.2.1,_19.0,_17.2.1];
(*_8).0 = [_11,_11];
_6 = [_17.2.1,Field::<i32>(Variant(_10, 1), 0),_19.0,_19.0];
place!(Field::<u128>(Variant(_10, 1), 1)) = _17.2.3;
_25 = _13.0 != _20;
_23 = (_20, _18, (*_8));
_17.1 = _7 << _23.0;
_28 = -_14;
(*_8).0 = _23.2.0;
place!(Field::<i16>(Variant(_10, 1), 3)) = !(-27979_i16);
_19.0 = !_17.2.1;
_12 = 1927136789_u32 as isize;
_16 = _2 << _17.2.1;
_17.1 = _7;
_21 = [_20,_23.0,_13.0,_23.0,_20,_20];
_25 = true;
(*_8) = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
place!(Field::<i32>(Variant(_10, 1), 0)) = -_17.2.1;
place!(Field::<i32>(Variant(_10, 1), 0)) = _17.2.1 | _17.2.1;
Goto(bb22)
}
bb22 = {
_13.0 = _17.2.3 as i64;
_17.2.1 = _17.1 as i32;
(*_8) = _23.2;
_13.2 = _23.2;
_30 = _25;
place!(Field::<u128>(Variant(_10, 1), 1)) = 42_i8 as u128;
_17.2.0 = [_17.2.3,_17.2.3,_17.2.3];
_5 = [_18,_18,_18,_18,_18,_23.1,_23.1,_13.1];
_14 = _28;
_29 = [_19.0,Field::<i32>(Variant(_10, 1), 0),_19.0,Field::<i32>(Variant(_10, 1), 0)];
_15 = [_17.2.1,_17.2.1,_17.2.1,Field::<i32>(Variant(_10, 1), 0)];
_21 = [_13.0,_20,_20,_23.0,_13.0,_23.0];
_7 = _17.1 % _17.1;
Call(_20 = fn11(_13, Field::<i32>(Variant(_10, 1), 0), _17, _22, _16, _23, Move(_10), _17.2, _2, _17.2.2, _2), bb23, UnwindUnreachable())
}
bb23 = {
_1 = _19.0 as isize;
_26 = [_25,_30,_30,_25,_30];
_10 = Adt59::Variant0 { fld0: _23.0 };
_13.2 = (_23.2.0,);
_25 = _30;
_13.2.0 = [_11,_11];
_1 = _2 * _16;
place!(Field::<i64>(Variant(_10, 0), 0)) = _20;
_19 = (_17.2.1,);
SetDiscriminant(_10, 0);
_13.1 = _23.1 * _23.1;
_23.2.0 = [_11,_11];
_5 = [_13.1,_23.1,_18,_13.1,_13.1,_23.1,_13.1,_18];
_23.2 = ((*_8).0,);
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: _13.2.0,fld3: 12040_i16 };
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_32 = !_7;
match _17.1 {
0 => bb13,
1 => bb24,
705064356190781169 => bb26,
_ => bb25
}
}
bb24 = {
_13.0 = _17.2.3 as i64;
_17.2.1 = _17.1 as i32;
(*_8) = _23.2;
_13.2 = _23.2;
_30 = _25;
place!(Field::<u128>(Variant(_10, 1), 1)) = 42_i8 as u128;
_17.2.0 = [_17.2.3,_17.2.3,_17.2.3];
_5 = [_18,_18,_18,_18,_18,_23.1,_23.1,_13.1];
_14 = _28;
_29 = [_19.0,Field::<i32>(Variant(_10, 1), 0),_19.0,Field::<i32>(Variant(_10, 1), 0)];
_15 = [_17.2.1,_17.2.1,_17.2.1,Field::<i32>(Variant(_10, 1), 0)];
_21 = [_13.0,_20,_20,_23.0,_13.0,_23.0];
_7 = _17.1 % _17.1;
Call(_20 = fn11(_13, Field::<i32>(Variant(_10, 1), 0), _17, _22, _16, _23, Move(_10), _17.2, _2, _17.2.2, _2), bb23, UnwindUnreachable())
}
bb25 = {
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_10 = Adt59::Variant1 { fld0: _17.2.1,fld1: _17.2.3,fld2: (*_8).0,fld3: (-990_i16) };
_13.0 = _23.0 >> _2;
_20 = _14 as i64;
_12 = -_16;
_17.1 = (-112_i8) as u64;
_20 = _13.0 ^ _13.0;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: (*_8).0,fld3: 12980_i16 };
_12 = !_16;
Goto(bb21)
}
bb26 = {
_35 = _5;
_33 = 3506261383_u32 ^ 1455869892_u32;
_34 = _32 as i16;
_8 = core::ptr::addr_of!(_23.2);
_2 = _1 << _23.0;
_18 = _23.1 * _23.1;
(*_8).0 = _13.2.0;
_3 = _16 << _33;
_17.1 = _14 as u64;
_1 = -_2;
_22 = _2;
Goto(bb27)
}
bb27 = {
_23.1 = _17.1 as usize;
_4 = _1 ^ _1;
_5 = [_23.1,_18,_18,_18,_18,_18,_13.1,_18];
_19 = (Field::<i32>(Variant(_10, 1), 0),);
_2 = !_4;
_15 = [_17.2.1,_17.2.1,Field::<i32>(Variant(_10, 1), 0),_19.0];
_17.0 = 31_u8 & 120_u8;
Goto(bb28)
}
bb28 = {
_23.2.0 = [_11,_11];
_14 = -_28;
_36 = ['\u{75ce1}','\u{a5fc7}','\u{741ad}','\u{c590a}','\u{e026f}'];
_17.2.1 = !Field::<i32>(Variant(_10, 1), 0);
place!(Field::<i32>(Variant(_10, 1), 0)) = _2 as i32;
_13.0 = _34 as i64;
place!(Field::<i16>(Variant(_10, 1), 3)) = -_34;
_7 = 158397169777473405893739268070319204021_i128 as u64;
_30 = !_25;
_22 = _4;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_7 = _17.0 as u64;
_30 = _20 <= _20;
_23 = (_20, _13.1, _13.2);
Goto(bb29)
}
bb29 = {
_47 = !_33;
_37 = _21;
place!(Field::<i16>(Variant(_10, 1), 3)) = _34 - _34;
_23 = (_20, _13.1, _13.2);
_17.2.1 = _20 as i32;
_48 = core::ptr::addr_of!(_5);
_16 = _30 as isize;
_40 = _17.0 as u64;
_48 = core::ptr::addr_of!(_35);
_17.0 = 125_u8 ^ 238_u8;
SetDiscriminant(_10, 1);
_19.0 = _17.2.1;
_39 = _23.0;
_5 = (*_48);
_17.2.0 = [_17.2.3,_17.2.3,_17.2.3];
_3 = -_2;
Goto(bb30)
}
bb30 = {
_21 = [_23.0,_13.0,_39,_20,_23.0,_20];
_17.0 = _23.0 as u8;
_8 = core::ptr::addr_of!(_23.2);
_49 = [_17.2.1,_17.2.1,_19.0,_17.2.1];
_13.0 = _7 as i64;
(*_48) = [_13.1,_13.1,_13.1,_18,_18,_23.1,_18,_13.1];
_10 = Adt59::Variant1 { fld0: _17.2.1,fld1: _17.2.3,fld2: _13.2.0,fld3: _34 };
_25 = !_30;
_19 = (_17.2.1,);
_43 = Field::<i16>(Variant(_10, 1), 3) as u16;
_17.1 = _7;
_49 = [Field::<i32>(Variant(_10, 1), 0),Field::<i32>(Variant(_10, 1), 0),_19.0,_19.0];
_8 = core::ptr::addr_of!((*_8));
_43 = _17.2.3 as u16;
(*_8) = (_13.2.0,);
_11 = Field::<i16>(Variant(_10, 1), 3) as u16;
_17.2.0 = [_17.2.3,Field::<u128>(Variant(_10, 1), 1),_17.2.3];
_23.0 = _39 | _39;
_13.0 = -_20;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: (*_8).0,fld3: _34 };
_25 = _17.2.1 <= _19.0;
SetDiscriminant(_10, 1);
Call(_2 = core::intrinsics::bswap(_4), bb31, UnwindUnreachable())
}
bb31 = {
_44 = 111576966790375783458392718772408862791_i128 as u64;
_32 = _40 | _44;
_52 = core::ptr::addr_of!(_33);
_2 = !_4;
_40 = !_7;
place!(Field::<i32>(Variant(_10, 1), 0)) = !_19.0;
place!(Field::<u128>(Variant(_10, 1), 1)) = _17.2.3 + _17.2.3;
_10 = Adt59::Variant1 { fld0: _17.2.1,fld1: _17.2.3,fld2: _23.2.0,fld3: _34 };
_33 = _47;
_28 = -_14;
_17.2.3 = Field::<u128>(Variant(_10, 1), 1) >> _1;
(*_8) = _13.2;
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
(*_52) = _47;
_15 = [_19.0,_17.2.1,Field::<i32>(Variant(_10, 1), 0),_19.0];
SetDiscriminant(_10, 0);
(*_52) = _47 * _47;
_13.0 = _43 as i64;
_17.0 = (-33255767156612368654556932331050916523_i128) as u8;
_12 = _4 + _16;
_24 = _17.2.1 as isize;
_17.2.3 = !23749185684198395792186320880144538214_u128;
_23 = _13;
_33 = _47 | _47;
_44 = !_32;
_41 = [_17.0,_17.0,_17.0];
_52 = core::ptr::addr_of!(_33);
Call(_43 = fn12(_13.0, _22, _12, _3), bb32, UnwindUnreachable())
}
bb32 = {
_27 = _12;
(*_8) = _13.2;
_17.0 = 50_u8 ^ 108_u8;
(*_52) = _22 as u32;
_39 = !_23.0;
_53 = [_23.1,_18,_13.1,_13.1,_18,_13.1,_13.1];
_54 = _13.0 as f32;
_32 = 2_i8 as u64;
_43 = _17.2.1 as u16;
(*_8) = _13.2;
_17.2.3 = 58378549238970539031112989027010584764_u128 << _3;
_53 = [_18,_13.1,_13.1,_13.1,_23.1,_18,_18];
_38 = [_30,_25,_30,_25,_30];
_49 = _15;
_14 = _28;
_46 = core::ptr::addr_of!(_54);
_33 = _25 as u32;
_58 = _7 << _17.2.1;
_34 = _19.0 as i16;
(*_8) = (_13.2.0,);
(*_48) = _5;
_45 = _19;
_19 = _45;
Call(_62.1.0 = fn13(_1, _45, _22, _22, _27, _13, _22, _17.2.3, _34, _7, _23), bb33, UnwindUnreachable())
}
bb33 = {
_51 = _12;
_13.0 = !_20;
_62.0.0 = [_43,_43];
_10 = Adt59::Variant0 { fld0: _13.0 };
_45 = (_17.2.1,);
(*_8).0 = _62.0.0;
_50 = [_19.0,_45.0,_45.0,_19.0];
Goto(bb34)
}
bb34 = {
_62.0 = (*_8);
_35 = [_18,_13.1,_13.1,_18,_13.1,_13.1,_23.1,_13.1];
_17.2.2 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_10, 0), 0)));
_30 = _3 != _2;
_1 = !_51;
_63 = _30;
SetDiscriminant(_10, 0);
_62.1.0 = [_43,_43];
_13.2.0 = [_43,_43];
_62 = (_23.2, _13.2, _54);
_60 = core::ptr::addr_of!(_62.2);
_23 = _13;
_27 = -_22;
_2 = _27 + _4;
_61 = (_62.0.0,);
(*_8).0 = [_43,_43];
_19.0 = _45.0 << _22;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
Call(_17.2.0 = core::intrinsics::transmute(_21), bb35, UnwindUnreachable())
}
bb35 = {
_33 = !_47;
place!(Field::<i64>(Variant(_10, 0), 0)) = !_39;
_59 = _17.2.3 as i64;
_23.0 = _59;
_17.1 = _32 ^ _58;
_58 = !_17.1;
_2 = _1 & _24;
_23.1 = !_18;
_56 = '\u{d3e00}';
_65 = [_30,_30,_30,_63,_30];
_32 = _58;
_64 = (*_60) + (*_60);
_56 = '\u{14868}';
(*_8) = (_62.0.0,);
_63 = !_30;
_43 = _11 - _11;
Goto(bb36)
}
bb36 = {
_7 = _58;
Goto(bb37)
}
bb37 = {
_12 = !_22;
_63 = !_25;
_11 = _43 - _43;
SetDiscriminant(_10, 0);
_71 = (*_60);
_25 = !_30;
_72 = [_17.2.1,_17.2.1,_19.0,_17.2.1];
_74.1.1 = _19.0 ^ _45.0;
_56 = '\u{1030fb}';
_74.3.2 = -(*_46);
_66 = _13.1;
_11 = !_43;
_17.2.1 = !_19.0;
_70 = _25;
_53 = [_23.1,_23.1,_18,_23.1,_23.1,_23.1,_23.1];
_2 = _12 >> _59;
_74.3.0 = (_61.0,);
_61 = (_62.1.0,);
_74.0 = -_74.3.2;
_22 = _25 as isize;
_58 = _32;
(*_8) = _62.0;
_74.1.1 = _17.2.1;
_18 = _23.1 * _66;
Goto(bb38)
}
bb38 = {
_62.0.0 = [_11,_43];
_74 = ((*_46), _17.2, _5, _62, _1, _14);
_23.0 = _20 << _59;
_19.0 = (*_52) as i32;
(*_46) = _62.2;
_57 = _51;
_57 = _43 as isize;
_74.0 = (*_46) - (*_60);
_68 = !_63;
_62 = _74.3;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_74.3.0.0 = [_43,_43];
_75 = [_59,_23.0,_59,_23.0,_59,_13.0];
_19.0 = _17.2.1 + _17.2.1;
_72 = [_17.2.1,_19.0,_17.2.1,_74.1.1];
_33 = _17.1 as u32;
_26 = _65;
(*_52) = _47;
Goto(bb39)
}
bb39 = {
_28 = _17.2.3 as f64;
(*_48) = [_18,_18,_23.1,_13.1,_23.1,_18,_18,_18];
_55 = _17.2.3 & _17.2.3;
Goto(bb40)
}
bb40 = {
Goto(bb41)
}
bb41 = {
_58 = _7;
_62.1 = (_74.3.1.0,);
_74.0 = (*_46);
_26 = [_63,_70,_30,_30,_25];
_16 = -_27;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _74.1.3,fld2: _74.3.1.0,fld3: _34 };
_76 = _32;
_80 = _17.0 as f64;
_80 = _28;
Goto(bb42)
}
bb42 = {
(*_48) = [_18,_66,_18,_23.1,_18,_18,_66,_18];
_13.0 = _17.0 as i64;
_23.1 = _18 + _18;
place!(Field::<i32>(Variant(_10, 1), 0)) = _17.2.1 >> _20;
_13.2.0 = _62.0.0;
_79 = _17.2.0;
_72 = [_19.0,_19.0,_17.2.1,Field::<i32>(Variant(_10, 1), 0)];
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [_43,_11];
_85.0 = _74.3.1.0;
_74.4 = _4;
(*_52) = _76 as u32;
place!(Field::<[u16; 2]>(Variant(_10, 1), 2)) = [_43,_43];
Goto(bb43)
}
bb43 = {
_27 = _3;
(*_60) = _54 - _64;
(*_48) = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1,_66,_18];
_62 = _74.3;
_82 = _59;
_71 = _7 as f32;
_2 = _59 as isize;
Goto(bb44)
}
bb44 = {
(*_48) = [_23.1,_13.1,_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_74.3.1.0 = [_43,_43];
_17.1 = _4 as u64;
_17.2 = (_79, Field::<i32>(Variant(_10, 1), 0), _74.1.2, Field::<u128>(Variant(_10, 1), 1));
_16 = _22;
_68 = _30;
_22 = _64 as isize;
_58 = _17.1 * _17.1;
_24 = _2;
_17 = (214_u8, _58, _74.1);
SetDiscriminant(_10, 0);
_18 = _23.1;
_23.1 = _18;
_74.3.1.0 = [_11,_11];
_89 = _70;
(*_8).0 = [_43,_43];
_61 = (_74.3.0.0,);
_77 = _82 as u16;
_20 = _58 as i64;
_40 = !_76;
_30 = !_70;
_33 = _28 as u32;
_74.1.3 = (*_52) as u128;
_88 = core::ptr::addr_of!(_34);
match _17.0 {
0 => bb16,
1 => bb45,
2 => bb46,
3 => bb47,
4 => bb48,
214 => bb50,
_ => bb49
}
}
bb45 = {
_6 = [102408174_i32,727873718_i32,510268777_i32,(-45514780_i32)];
_7 = 5034364464611708253_u64 | 13367978664604834099_u64;
_5 = [7_usize,1793575720068480542_usize,342177121464115490_usize,2_usize,13557353024045365336_usize,15430401770584626132_usize,4_usize,0_usize];
_11 = !16228_u16;
_7 = 5979854289164928369_u64;
_7 = 857245773334650725_u64;
_10 = Adt59::Variant0 { fld0: 6354658144647743664_i64 };
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
857245773334650725 => bb8,
_ => bb7
}
}
bb46 = {
Return()
}
bb47 = {
_6 = [1082491508_i32,1717609623_i32,(-778837036_i32),(-1637330417_i32)];
_5 = [3018790963269984459_usize,1681520238051337715_usize,1082390122500675423_usize,6858844732243088881_usize,0_usize,6_usize,13619383430495533106_usize,506037721657047549_usize];
_6 = [(-1039909108_i32),514522656_i32,(-1639008760_i32),(-579128349_i32)];
_4 = _1;
_5 = [7350130190119429340_usize,3_usize,10939131417105099896_usize,6_usize,7059563716502776839_usize,13217976805107695194_usize,3953051534217370690_usize,5_usize];
_3 = 26787_i16 as isize;
_4 = !_3;
_6 = [(-1288750257_i32),(-1535861040_i32),(-1850307148_i32),(-930775925_i32)];
_1 = _4;
_1 = _2;
_5 = [9310964770169346000_usize,4_usize,1_usize,1162052539941152001_usize,11278690882501570609_usize,2_usize,100228943350829506_usize,7566357199432684866_usize];
_5 = [0_usize,1_usize,6150057512074291421_usize,6_usize,0_usize,13807620434539074607_usize,7_usize,5921737336532911192_usize];
_1 = _3;
_4 = _1 | _1;
_3 = _1 - _2;
_4 = _3 | _3;
_5 = [18091916983916990298_usize,1_usize,7_usize,10116999779878156781_usize,6_usize,12929821467659950056_usize,5_usize,3054816021828880090_usize];
_6 = [1859593461_i32,945359015_i32,1073903338_i32,(-403987669_i32)];
Goto(bb3)
}
bb48 = {
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_10 = Adt59::Variant1 { fld0: _17.2.1,fld1: _17.2.3,fld2: (*_8).0,fld3: (-990_i16) };
_13.0 = _23.0 >> _2;
_20 = _14 as i64;
_12 = -_16;
_17.1 = (-112_i8) as u64;
_20 = _13.0 ^ _13.0;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: (*_8).0,fld3: 12980_i16 };
_12 = !_16;
Goto(bb21)
}
bb49 = {
_23.2.0 = [_11,_11];
_14 = -_28;
_36 = ['\u{75ce1}','\u{a5fc7}','\u{741ad}','\u{c590a}','\u{e026f}'];
_17.2.1 = !Field::<i32>(Variant(_10, 1), 0);
place!(Field::<i32>(Variant(_10, 1), 0)) = _2 as i32;
_13.0 = _34 as i64;
place!(Field::<i16>(Variant(_10, 1), 3)) = -_34;
_7 = 158397169777473405893739268070319204021_i128 as u64;
_30 = !_25;
_22 = _4;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_7 = _17.0 as u64;
_30 = _20 <= _20;
_23 = (_20, _13.1, _13.2);
Goto(bb29)
}
bb50 = {
_74.3.0 = _85;
_90 = [_56,_56,_56,_56,_56,_56];
_34 = 6567_i16;
_13.2.0 = [_77,_77];
_66 = _19.0 as usize;
(*_8) = _13.2;
Goto(bb51)
}
bb51 = {
_39 = -_20;
_85.0 = _62.1.0;
_7 = _17.1 | _40;
(*_8).0 = [_11,_77];
_73.0 = [_77,_77];
_86 = _30;
_73.0 = [_77,_77];
_39 = -_23.0;
_13 = (_20, _66, _73);
_75 = [_82,_13.0,_20,_82,_82,_20];
_69 = 145147284089103229741753429700012456913_i128 as i8;
_24 = _2 & _2;
(*_46) = -_71;
_42 = Adt51::Variant0 { fld0: _13.2.0,fld1: _88,fld2: _4,fld3: (*_48),fld4: _62,fld5: _90,fld6: _37,fld7: _74.1.3 };
match _17.0 {
0 => bb28,
1 => bb41,
2 => bb3,
3 => bb47,
4 => bb5,
5 => bb50,
214 => bb52,
_ => bb29
}
}
bb52 = {
_62.1.0 = [_77,_77];
_62 = ((*_8), (*_8), _71);
place!(Field::<[i64; 6]>(Variant(_42, 0), 6)) = _21;
_64 = (*_52) as f32;
_82 = _39 << _23.1;
_23.0 = _13.0 ^ _13.0;
_29 = [_19.0,_19.0,_74.1.1,_19.0];
(*_88) = 30280_i16 & (-20190_i16);
_10 = Adt59::Variant1 { fld0: _74.1.1,fld1: _74.1.3,fld2: Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1.0,fld3: _34 };
_19 = (_45.0,);
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).0.0 = [_77,_77];
match _17.0 {
0 => bb5,
1 => bb50,
2 => bb40,
3 => bb53,
4 => bb54,
214 => bb56,
_ => bb55
}
}
bb53 = {
(*_48) = [_23.1,_13.1,_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_74.3.1.0 = [_43,_43];
_17.1 = _4 as u64;
_17.2 = (_79, Field::<i32>(Variant(_10, 1), 0), _74.1.2, Field::<u128>(Variant(_10, 1), 1));
_16 = _22;
_68 = _30;
_22 = _64 as isize;
_58 = _17.1 * _17.1;
_24 = _2;
_17 = (214_u8, _58, _74.1);
SetDiscriminant(_10, 0);
_18 = _23.1;
_23.1 = _18;
_74.3.1.0 = [_11,_11];
_89 = _70;
(*_8).0 = [_43,_43];
_61 = (_74.3.0.0,);
_77 = _82 as u16;
_20 = _58 as i64;
_40 = !_76;
_30 = !_70;
_33 = _28 as u32;
_74.1.3 = (*_52) as u128;
_88 = core::ptr::addr_of!(_34);
match _17.0 {
0 => bb16,
1 => bb45,
2 => bb46,
3 => bb47,
4 => bb48,
214 => bb50,
_ => bb49
}
}
bb54 = {
_62.0 = (*_8);
_35 = [_18,_13.1,_13.1,_18,_13.1,_13.1,_23.1,_13.1];
_17.2.2 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_10, 0), 0)));
_30 = _3 != _2;
_1 = !_51;
_63 = _30;
SetDiscriminant(_10, 0);
_62.1.0 = [_43,_43];
_13.2.0 = [_43,_43];
_62 = (_23.2, _13.2, _54);
_60 = core::ptr::addr_of!(_62.2);
_23 = _13;
_27 = -_22;
_2 = _27 + _4;
_61 = (_62.0.0,);
(*_8).0 = [_43,_43];
_19.0 = _45.0 << _22;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
Call(_17.2.0 = core::intrinsics::transmute(_21), bb35, UnwindUnreachable())
}
bb55 = {
_23.2.0 = [_11,_11];
_14 = -_28;
_36 = ['\u{75ce1}','\u{a5fc7}','\u{741ad}','\u{c590a}','\u{e026f}'];
_17.2.1 = !Field::<i32>(Variant(_10, 1), 0);
place!(Field::<i32>(Variant(_10, 1), 0)) = _2 as i32;
_13.0 = _34 as i64;
place!(Field::<i16>(Variant(_10, 1), 3)) = -_34;
_7 = 158397169777473405893739268070319204021_i128 as u64;
_30 = !_25;
_22 = _4;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_7 = _17.0 as u64;
_30 = _20 <= _20;
_23 = (_20, _13.1, _13.2);
Goto(bb29)
}
bb56 = {
_75 = _21;
_85 = (_13.2.0,);
SetDiscriminant(_42, 0);
_34 = -Field::<i16>(Variant(_10, 1), 3);
_43 = _77 ^ _77;
_91 = _70;
_18 = _28 as usize;
_24 = _2;
_73 = ((*_8).0,);
_16 = _27 >> _58;
(*_8) = _74.3.0;
_66 = _23.1 | _13.1;
SetDiscriminant(_10, 1);
(*_48) = _5;
_93 = _36;
(*_8) = _73;
_53 = [_66,_23.1,_66,_66,_13.1,_23.1,_13.1];
_89 = !_86;
_95 = _23.0 as f32;
_32 = _58;
_34 = !(-20123_i16);
_26 = [_70,_68,_70,_70,_86];
match _17.0 {
0 => bb39,
1 => bb41,
2 => bb3,
3 => bb16,
4 => bb57,
5 => bb58,
6 => bb59,
214 => bb61,
_ => bb60
}
}
bb57 = {
_21 = [_23.0,_13.0,_39,_20,_23.0,_20];
_17.0 = _23.0 as u8;
_8 = core::ptr::addr_of!(_23.2);
_49 = [_17.2.1,_17.2.1,_19.0,_17.2.1];
_13.0 = _7 as i64;
(*_48) = [_13.1,_13.1,_13.1,_18,_18,_23.1,_18,_13.1];
_10 = Adt59::Variant1 { fld0: _17.2.1,fld1: _17.2.3,fld2: _13.2.0,fld3: _34 };
_25 = !_30;
_19 = (_17.2.1,);
_43 = Field::<i16>(Variant(_10, 1), 3) as u16;
_17.1 = _7;
_49 = [Field::<i32>(Variant(_10, 1), 0),Field::<i32>(Variant(_10, 1), 0),_19.0,_19.0];
_8 = core::ptr::addr_of!((*_8));
_43 = _17.2.3 as u16;
(*_8) = (_13.2.0,);
_11 = Field::<i16>(Variant(_10, 1), 3) as u16;
_17.2.0 = [_17.2.3,Field::<u128>(Variant(_10, 1), 1),_17.2.3];
_23.0 = _39 | _39;
_13.0 = -_20;
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: (*_8).0,fld3: _34 };
_25 = _17.2.1 <= _19.0;
SetDiscriminant(_10, 1);
Call(_2 = core::intrinsics::bswap(_4), bb31, UnwindUnreachable())
}
bb58 = {
Return()
}
bb59 = {
_74.3.0 = _85;
_90 = [_56,_56,_56,_56,_56,_56];
_34 = 6567_i16;
_13.2.0 = [_77,_77];
_66 = _19.0 as usize;
(*_8) = _13.2;
Goto(bb51)
}
bb60 = {
_5 = [_18,_18,_18,_18,_18,_18,_18,_18];
_23.2 = (*_8);
(*_8).0 = Field::<[u16; 2]>(Variant(_10, 1), 2);
_11 = !19915_u16;
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_3 = _4;
_17.2.3 = _2 as u128;
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_15 = [Field::<i32>(Variant(_10, 1), 0),_17.2.1,_19.0,_17.2.1];
(*_8).0 = [_11,_11];
_6 = [_17.2.1,Field::<i32>(Variant(_10, 1), 0),_19.0,_19.0];
place!(Field::<u128>(Variant(_10, 1), 1)) = _17.2.3;
_25 = _13.0 != _20;
_23 = (_20, _18, (*_8));
_17.1 = _7 << _23.0;
_28 = -_14;
(*_8).0 = _23.2.0;
place!(Field::<i16>(Variant(_10, 1), 3)) = !(-27979_i16);
_19.0 = !_17.2.1;
_12 = 1927136789_u32 as isize;
_16 = _2 << _17.2.1;
_17.1 = _7;
_21 = [_20,_23.0,_13.0,_23.0,_20,_20];
_25 = true;
(*_8) = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
place!(Field::<i32>(Variant(_10, 1), 0)) = -_17.2.1;
place!(Field::<i32>(Variant(_10, 1), 0)) = _17.2.1 | _17.2.1;
Goto(bb22)
}
bb61 = {
_85.0 = [_43,_43];
_97 = _25;
_86 = !_70;
place!(Field::<i32>(Variant(_10, 1), 0)) = _17.2.1;
_41 = [_17.0,_17.0,_17.0];
place!(Field::<i16>(Variant(_10, 1), 3)) = (*_88);
_70 = !_25;
_74.3.2 = _77 as f32;
_85 = (_13.2.0,);
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)) = (_62.1, _85, _95);
(*_8) = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1;
_74.1.2 = core::ptr::addr_of_mut!(_82);
_74.2 = (*_48);
(*_60) = -_64;
_71 = _28 as f32;
_16 = _1;
_62.0 = _62.1;
_40 = _32;
_6 = [_17.2.1,_19.0,Field::<i32>(Variant(_10, 1), 0),_17.2.1];
_65 = _26;
_110 = _56;
Goto(bb62)
}
bb62 = {
_102 = core::ptr::addr_of_mut!(_23.0);
_66 = _13.1 | _13.1;
(*_8) = (_13.2.0,);
_6 = [Field::<i32>(Variant(_10, 1), 0),_45.0,_45.0,_17.2.1];
_86 = (*_46) > (*_46);
_74.1.1 = -Field::<i32>(Variant(_10, 1), 0);
_105 = _17.2.1 & _74.1.1;
_81 = core::ptr::addr_of!(_5);
_11 = !_43;
_103 = Adt51::Variant0 { fld0: _62.1.0,fld1: _88,fld2: _2,fld3: _5,fld4: _62,fld5: _90,fld6: _75,fld7: _55 };
_113 = _4;
_61.0 = [_43,_43];
SetDiscriminant(_103, 1);
_43 = _11 * _11;
_11 = _28 as u16;
_92 = [_66,_66,_13.1,_66,_18,_13.1,_23.1,_66];
_63 = !_91;
_96 = [_20,_82,_82,_13.0,_59,_13.0];
(*_88) = Field::<i16>(Variant(_10, 1), 3) - Field::<i16>(Variant(_10, 1), 3);
_19 = _45;
_70 = _63 & _91;
match _17.0 {
0 => bb8,
1 => bb63,
214 => bb65,
_ => bb64
}
}
bb63 = {
_1 = _19.0 as isize;
_26 = [_25,_30,_30,_25,_30];
_10 = Adt59::Variant0 { fld0: _23.0 };
_13.2 = (_23.2.0,);
_25 = _30;
_13.2.0 = [_11,_11];
_1 = _2 * _16;
place!(Field::<i64>(Variant(_10, 0), 0)) = _20;
_19 = (_17.2.1,);
SetDiscriminant(_10, 0);
_13.1 = _23.1 * _23.1;
_23.2.0 = [_11,_11];
_5 = [_13.1,_23.1,_18,_13.1,_13.1,_23.1,_13.1,_18];
_23.2 = ((*_8).0,);
_10 = Adt59::Variant1 { fld0: _19.0,fld1: _17.2.3,fld2: _13.2.0,fld3: 12040_i16 };
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_32 = !_7;
match _17.1 {
0 => bb13,
1 => bb24,
705064356190781169 => bb26,
_ => bb25
}
}
bb64 = {
_27 = _3;
(*_60) = _54 - _64;
(*_48) = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1,_66,_18];
_62 = _74.3;
_82 = _59;
_71 = _7 as f32;
_2 = _59 as isize;
Goto(bb44)
}
bb65 = {
_13.1 = !_66;
_99 = [_56,_110,_56,_110,_56];
_17.2.1 = _45.0 + _74.1.1;
Call(_98 = fn15(_70, _12, _17.0, _97, _3, _74, _45), bb66, UnwindUnreachable())
}
bb66 = {
_109 = _1;
_96 = [_82,_13.0,_39,_20,_82,_13.0];
_99 = _93;
_24 = -_4;
_107 = [_110,_56,_110,_110,_56,_110];
_17.2.1 = _74.1.1;
place!(Field::<[i64; 6]>(Variant(_42, 0), 6)) = [(*_102),_39,_59,_20,_20,_20];
_17.2.3 = !_55;
_23.2.0 = [_77,_77];
place!(Field::<[usize; 8]>(Variant(_42, 0), 3)) = [_66,_66,_13.1,_18,_66,_66,_66,_18];
place!(Field::<u128>(Variant(_42, 0), 7)) = _17.2.3 - _17.2.3;
_24 = _27;
_48 = _81;
_97 = _91;
_13.2 = (*_8);
_85 = _62.1;
(*_48) = [_18,_23.1,_23.1,_18,_18,_66,_13.1,_66];
_110 = _56;
_62.1 = ((*_8).0,);
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).0.0 = _23.2.0;
_111 = _16;
match _17.0 {
0 => bb30,
214 => bb68,
_ => bb67
}
}
bb67 = {
_6 = [102408174_i32,727873718_i32,510268777_i32,(-45514780_i32)];
_7 = 5034364464611708253_u64 | 13367978664604834099_u64;
_5 = [7_usize,1793575720068480542_usize,342177121464115490_usize,2_usize,13557353024045365336_usize,15430401770584626132_usize,4_usize,0_usize];
_11 = !16228_u16;
_7 = 5979854289164928369_u64;
_7 = 857245773334650725_u64;
_10 = Adt59::Variant0 { fld0: 6354658144647743664_i64 };
match _7 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
857245773334650725 => bb8,
_ => bb7
}
}
bb68 = {
_27 = !_24;
_17.1 = !_40;
_32 = !_58;
_112 = _77 ^ _11;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).0.0 = (*_8).0;
place!(Field::<[i64; 6]>(Variant(_42, 0), 6)) = _96;
_75 = Field::<[i64; 6]>(Variant(_42, 0), 6);
_122 = [_91,_68,_91,_30,_30];
_27 = _74.1.1 as isize;
_64 = -(*_60);
_119 = (_39, _66, _62.1);
_36 = [_56,_110,_56,_56,_110];
_84 = _76 as f64;
place!(Field::<[usize; 8]>(Variant(_42, 0), 3)) = (*_48);
_51 = _24;
_19 = _45;
_25 = _74.4 != _16;
_101 = [_97,_68,_97,_30,_68];
_97 = _86 & _86;
_10 = Adt59::Variant1 { fld0: _74.1.1,fld1: _17.2.3,fld2: (*_8).0,fld3: _34 };
_2 = _1;
place!(Field::<bool>(Variant(_103, 1), 0)) = !_63;
_28 = -_80;
_67 = _110;
_119 = _13;
SetDiscriminant(_10, 0);
Goto(bb69)
}
bb69 = {
_108 = _56;
_32 = !_17.1;
_15 = [_74.1.1,_45.0,_74.1.1,_19.0];
_116 = !_70;
_93 = [_67,_56,_108,_108,_56];
(*_60) = -_64;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
(*_8).0 = [_11,_77];
_74.3.0.0 = _85.0;
_75 = _21;
_69 = (-54_i8);
match _17.0 {
0 => bb63,
1 => bb46,
2 => bb37,
3 => bb54,
4 => bb21,
5 => bb42,
214 => bb70,
_ => bb57
}
}
bb70 = {
_106 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_21 = [_59,_119.0,_59,_119.0,_119.0,(*_102)];
_17.1 = _17.0 as u64;
_108 = _110;
_51 = _109 ^ _109;
_60 = _46;
_61 = (_62.1.0,);
(*_46) = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).2;
_60 = core::ptr::addr_of!(_54);
_34 = _17.1 as i16;
_74.3.0.0 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1.0;
_74.5 = -_84;
_36 = _99;
_74.1.3 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).2 as u128;
_20 = _13.1 as i64;
match _17.0 {
0 => bb56,
1 => bb32,
2 => bb30,
3 => bb45,
214 => bb72,
_ => bb71
}
}
bb71 = {
_62.0 = (*_8);
_35 = [_18,_13.1,_13.1,_18,_13.1,_13.1,_23.1,_13.1];
_17.2.2 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_10, 0), 0)));
_30 = _3 != _2;
_1 = !_51;
_63 = _30;
SetDiscriminant(_10, 0);
_62.1.0 = [_43,_43];
_13.2.0 = [_43,_43];
_62 = (_23.2, _13.2, _54);
_60 = core::ptr::addr_of!(_62.2);
_23 = _13;
_27 = -_22;
_2 = _27 + _4;
_61 = (_62.0.0,);
(*_8).0 = [_43,_43];
_19.0 = _45.0 << _22;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
Call(_17.2.0 = core::intrinsics::transmute(_21), bb35, UnwindUnreachable())
}
bb72 = {
(*_88) = (-5454_i16);
_35 = (*_81);
(*_46) = _64;
_21 = [(*_102),_119.0,(*_102),_59,_13.0,_20];
_117 = Adt54::Variant0 { fld0: _29,fld1: _56,fld2: _36,fld3: _33 };
_72 = Field::<[i32; 4]>(Variant(_117, 0), 0);
_18 = !_119.1;
_92 = (*_48);
(*_88) = 27967_i16 >> _109;
RET = Adt50::Variant0 { fld0: _74,fld1: _74.1,fld2: _74.1.0,fld3: _69,fld4: _81,fld5: _88,fld6: _8,fld7: (*_81) };
SetDiscriminant(RET, 0);
place!(Field::<[char; 6]>(Variant(_42, 0), 5)) = [_108,_56,_56,_56,_108,_56];
Call(_74.1.2 = fn16(_119, _53, _26, (*_102)), bb73, UnwindUnreachable())
}
bb73 = {
(*_81) = [_119.1,_119.1,_119.1,_66,_18,_23.1,_66,_66];
_78 = _68;
_23.2 = (_61.0,);
_120 = _17.0 ^ _17.0;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.1.0 = [_11,_112];
_23.2.0 = [_77,_77];
_48 = core::ptr::addr_of!((*_81));
_73 = (_23.2.0,);
_45.0 = _17.0 as i32;
(*_46) = _95;
match _17.0 {
0 => bb51,
1 => bb74,
214 => bb76,
_ => bb75
}
}
bb74 = {
_62.1.0 = [_77,_77];
_62 = ((*_8), (*_8), _71);
place!(Field::<[i64; 6]>(Variant(_42, 0), 6)) = _21;
_64 = (*_52) as f32;
_82 = _39 << _23.1;
_23.0 = _13.0 ^ _13.0;
_29 = [_19.0,_19.0,_74.1.1,_19.0];
(*_88) = 30280_i16 & (-20190_i16);
_10 = Adt59::Variant1 { fld0: _74.1.1,fld1: _74.1.3,fld2: Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1.0,fld3: _34 };
_19 = (_45.0,);
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).0.0 = [_77,_77];
match _17.0 {
0 => bb5,
1 => bb50,
2 => bb40,
3 => bb53,
4 => bb54,
214 => bb56,
_ => bb55
}
}
bb75 = {
Return()
}
bb76 = {
_70 = _68;
_74.3.2 = -_64;
_36 = [_110,_67,Field::<char>(Variant(_117, 0), 1),_56,Field::<char>(Variant(_117, 0), 1)];
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).1 = _74.1;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).0 = -_95;
_133 = _2 << _74.4;
_73.0 = [_11,_11];
_122 = [_68,_86,Field::<bool>(Variant(_103, 1), 0),_91,_70];
_113 = _2 ^ _133;
Goto(bb77)
}
bb77 = {
SetDiscriminant(_117, 0);
_119.2 = (_73.0,);
place!(Field::<isize>(Variant(_42, 0), 2)) = _111;
_23.2 = (_13.2.0,);
_57 = _3;
place!(Field::<[u128; 3]>(Variant(RET, 0), 2)) = [Field::<u128>(Variant(_42, 0), 7),_55,_74.1.3];
_73 = (Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).3.1.0,);
place!(Field::<[u128; 3]>(Variant(RET, 0), 2)) = [Field::<u128>(Variant(_42, 0), 7),Field::<u128>(Variant(_42, 0), 7),_17.2.3];
_74.1.3 = !Field::<u128>(Variant(_42, 0), 7);
_88 = core::ptr::addr_of!(_34);
Goto(bb78)
}
bb78 = {
_119.0 = !(*_102);
_25 = !_70;
_119.2 = (Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1.0,);
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)).3 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.3;
_77 = !_11;
_2 = -_3;
place!(Field::<*const ([u16; 2],)>(Variant(RET, 0), 6)) = core::ptr::addr_of!(_61);
_50 = _72;
_123 = _27 << _13.1;
_48 = core::ptr::addr_of!((*_48));
place!(Field::<*const ([u16; 2],)>(Variant(RET, 0), 6)) = core::ptr::addr_of!(_13.2);
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).5 = _28;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).2 = [_119.1,_66,_13.1,_13.1,_119.1,_119.1,_23.1,_66];
_117 = Adt54::Variant0 { fld0: _6,fld1: _67,fld2: _99,fld3: (*_52) };
place!(Field::<[usize; 8]>(Variant(RET, 0), 7)) = _92;
_19.0 = _43 as i32;
place!(Field::<*const i16>(Variant(RET, 0), 5)) = _88;
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)).3 = _17.0 as u128;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).2 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).0 * _74.3.2;
_134 = Field::<[u128; 3]>(Variant(RET, 0), 2);
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).1.1 = _74.1.1;
(*_52) = Field::<u32>(Variant(_117, 0), 3);
Call(place!(Field::<[u16; 2]>(Variant(_42, 0), 0)) = core::intrinsics::transmute(_74.3.0.0), bb79, UnwindUnreachable())
}
bb79 = {
place!(Field::<i128>(Variant(_103, 1), 2)) = 115811509103624089190462727432312914698_i128;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.2 = _64 - _71;
SetDiscriminant(_117, 0);
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_107 = [_110,_56,_56,_110,_110,_67];
_59 = _23.0 >> _45.0;
_116 = !_30;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3 = _74.3;
_47 = (*_52);
_73 = (_62.1.0,);
_119.2 = (_85.0,);
(*_60) = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).0 * Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).0;
_17.1 = _40;
_32 = !_58;
_74.4 = _123;
_100 = [_59,_20,(*_102),_39,(*_102),_119.0];
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.1 = (*_8);
_57 = _3 << _33;
_29 = [_19.0,_105,_74.1.1,_19.0];
place!(Field::<isize>(Variant(_42, 0), 2)) = Field::<i128>(Variant(_103, 1), 2) as isize;
_17 = (_120, _7, _74.1);
_8 = core::ptr::addr_of!((*_8));
(*_102) = _40 as i64;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).5 = _84 * _28;
place!(Field::<*const i16>(Variant(_42, 0), 1)) = core::ptr::addr_of!((*_88));
match _69 {
0 => bb49,
1 => bb63,
2 => bb80,
3 => bb81,
4 => bb82,
340282366920938463463374607431768211402 => bb84,
_ => bb83
}
}
bb80 = {
_28 = _17.2.3 as f64;
(*_48) = [_18,_18,_23.1,_13.1,_23.1,_18,_18,_18];
_55 = _17.2.3 & _17.2.3;
Goto(bb40)
}
bb81 = {
(*_81) = [_119.1,_119.1,_119.1,_66,_18,_23.1,_66,_66];
_78 = _68;
_23.2 = (_61.0,);
_120 = _17.0 ^ _17.0;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.1.0 = [_11,_112];
_23.2.0 = [_77,_77];
_48 = core::ptr::addr_of!((*_81));
_73 = (_23.2.0,);
_45.0 = _17.0 as i32;
(*_46) = _95;
match _17.0 {
0 => bb51,
1 => bb74,
214 => bb76,
_ => bb75
}
}
bb82 = {
_5 = [_18,_18,_18,_18,_18,_18,_18,_18];
_23.2 = (*_8);
(*_8).0 = Field::<[u16; 2]>(Variant(_10, 1), 2);
_11 = !19915_u16;
_13.2 = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
_3 = _4;
_17.2.3 = _2 as u128;
_17.2.2 = core::ptr::addr_of_mut!(_13.0);
_15 = [Field::<i32>(Variant(_10, 1), 0),_17.2.1,_19.0,_17.2.1];
(*_8).0 = [_11,_11];
_6 = [_17.2.1,Field::<i32>(Variant(_10, 1), 0),_19.0,_19.0];
place!(Field::<u128>(Variant(_10, 1), 1)) = _17.2.3;
_25 = _13.0 != _20;
_23 = (_20, _18, (*_8));
_17.1 = _7 << _23.0;
_28 = -_14;
(*_8).0 = _23.2.0;
place!(Field::<i16>(Variant(_10, 1), 3)) = !(-27979_i16);
_19.0 = !_17.2.1;
_12 = 1927136789_u32 as isize;
_16 = _2 << _17.2.1;
_17.1 = _7;
_21 = [_20,_23.0,_13.0,_23.0,_20,_20];
_25 = true;
(*_8) = (Field::<[u16; 2]>(Variant(_10, 1), 2),);
place!(Field::<i32>(Variant(_10, 1), 0)) = -_17.2.1;
place!(Field::<i32>(Variant(_10, 1), 0)) = _17.2.1 | _17.2.1;
Goto(bb22)
}
bb83 = {
_6 = [1082491508_i32,1717609623_i32,(-778837036_i32),(-1637330417_i32)];
_5 = [3018790963269984459_usize,1681520238051337715_usize,1082390122500675423_usize,6858844732243088881_usize,0_usize,6_usize,13619383430495533106_usize,506037721657047549_usize];
_6 = [(-1039909108_i32),514522656_i32,(-1639008760_i32),(-579128349_i32)];
_4 = _1;
_5 = [7350130190119429340_usize,3_usize,10939131417105099896_usize,6_usize,7059563716502776839_usize,13217976805107695194_usize,3953051534217370690_usize,5_usize];
_3 = 26787_i16 as isize;
_4 = !_3;
_6 = [(-1288750257_i32),(-1535861040_i32),(-1850307148_i32),(-930775925_i32)];
_1 = _4;
_1 = _2;
_5 = [9310964770169346000_usize,4_usize,1_usize,1162052539941152001_usize,11278690882501570609_usize,2_usize,100228943350829506_usize,7566357199432684866_usize];
_5 = [0_usize,1_usize,6150057512074291421_usize,6_usize,0_usize,13807620434539074607_usize,7_usize,5921737336532911192_usize];
_1 = _3;
_4 = _1 | _1;
_3 = _1 - _2;
_4 = _3 | _3;
_5 = [18091916983916990298_usize,1_usize,7_usize,10116999779878156781_usize,6_usize,12929821467659950056_usize,5_usize,3054816021828880090_usize];
_6 = [1859593461_i32,945359015_i32,1073903338_i32,(-403987669_i32)];
Goto(bb3)
}
bb84 = {
_139.2 = core::ptr::addr_of_mut!((*_102));
_60 = core::ptr::addr_of!(_74.3.2);
_85 = (_74.3.1.0,);
_1 = _108 as isize;
_108 = _67;
_27 = _78 as isize;
_116 = _43 <= _11;
match Field::<i128>(Variant(_103, 1), 2) {
0 => bb85,
115811509103624089190462727432312914698 => bb87,
_ => bb86
}
}
bb85 = {
_3 = -_4;
_1 = -_2;
_7 = !969382499628309594_u64;
_2 = -_4;
Goto(bb2)
}
bb86 = {
_106 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_21 = [_59,_119.0,_59,_119.0,_119.0,(*_102)];
_17.1 = _17.0 as u64;
_108 = _110;
_51 = _109 ^ _109;
_60 = _46;
_61 = (_62.1.0,);
(*_46) = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).2;
_60 = core::ptr::addr_of!(_54);
_34 = _17.1 as i16;
_74.3.0.0 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1.0;
_74.5 = -_84;
_36 = _99;
_74.1.3 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).2 as u128;
_20 = _13.1 as i64;
match _17.0 {
0 => bb56,
1 => bb32,
2 => bb30,
3 => bb45,
214 => bb72,
_ => bb71
}
}
bb87 = {
_116 = _25;
place!(Field::<*const [usize; 8]>(Variant(RET, 0), 4)) = _81;
_73.0 = _23.2.0;
SetDiscriminant(_42, 0);
_5 = Field::<[usize; 8]>(Variant(RET, 0), 7);
_24 = _58 as isize;
_139.0 = _17.2.0;
place!(Field::<*const [usize; 8]>(Variant(RET, 0), 4)) = core::ptr::addr_of!((*_81));
_121 = _110;
_80 = -Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).5;
_135 = _69 as f32;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).1.0 = [_17.2.3,_17.2.3,Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).3];
_1 = _3;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.0 = (Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).3.1.0,);
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)).2 = core::ptr::addr_of_mut!((*_102));
place!(Field::<bool>(Variant(_103, 1), 0)) = _25;
_83 = _134;
Goto(bb88)
}
bb88 = {
_75 = _100;
_38 = _101;
_78 = _80 > _80;
place!(Field::<*const i16>(Variant(RET, 0), 5)) = core::ptr::addr_of!((*_88));
_33 = _47;
_1 = !_27;
_114 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.1 as f32;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).2 = _43 as f32;
_131 = _17.2.3 as f64;
_27 = _123;
place!(Field::<*const i16>(Variant(_42, 0), 1)) = core::ptr::addr_of!(_34);
_87 = Adt59::Variant1 { fld0: _19.0,fld1: _55,fld2: _74.3.0.0,fld3: (*_88) };
_23.2.0 = [_43,_11];
_115 = Adt52::Variant1 { fld0: Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).2,fld1: _17.1,fld2: _107,fld3: _13.0 };
_118 = core::ptr::addr_of_mut!(_130);
_37 = [_119.0,_59,_82,(*_102),(*_102),_59];
(*_60) = _105 as f32;
_98 = [_51];
Goto(bb89)
}
bb89 = {
_13.2.0 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).3.0.0;
_17.0 = !_120;
place!(Field::<[u16; 2]>(Variant(_42, 0), 0)) = [_43,_43];
Goto(bb90)
}
bb90 = {
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)).1 = _120 as i32;
_147 = Move(_87);
_74.5 = _82 as f64;
_56 = _67;
place!(Field::<(*const i16,)>(Variant(_103, 1), 1)).0 = core::ptr::addr_of!(_34);
_148 = _63;
match _69 {
0 => bb64,
1 => bb91,
2 => bb92,
3 => bb93,
340282366920938463463374607431768211402 => bb95,
_ => bb94
}
}
bb91 = {
_13.0 = _17.2.3 as i64;
_17.2.1 = _17.1 as i32;
(*_8) = _23.2;
_13.2 = _23.2;
_30 = _25;
place!(Field::<u128>(Variant(_10, 1), 1)) = 42_i8 as u128;
_17.2.0 = [_17.2.3,_17.2.3,_17.2.3];
_5 = [_18,_18,_18,_18,_18,_23.1,_23.1,_13.1];
_14 = _28;
_29 = [_19.0,Field::<i32>(Variant(_10, 1), 0),_19.0,Field::<i32>(Variant(_10, 1), 0)];
_15 = [_17.2.1,_17.2.1,_17.2.1,Field::<i32>(Variant(_10, 1), 0)];
_21 = [_13.0,_20,_20,_23.0,_13.0,_23.0];
_7 = _17.1 % _17.1;
Call(_20 = fn11(_13, Field::<i32>(Variant(_10, 1), 0), _17, _22, _16, _23, Move(_10), _17.2, _2, _17.2.2, _2), bb23, UnwindUnreachable())
}
bb92 = {
(*_48) = [_23.1,_13.1,_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_74.3.1.0 = [_43,_43];
_17.1 = _4 as u64;
_17.2 = (_79, Field::<i32>(Variant(_10, 1), 0), _74.1.2, Field::<u128>(Variant(_10, 1), 1));
_16 = _22;
_68 = _30;
_22 = _64 as isize;
_58 = _17.1 * _17.1;
_24 = _2;
_17 = (214_u8, _58, _74.1);
SetDiscriminant(_10, 0);
_18 = _23.1;
_23.1 = _18;
_74.3.1.0 = [_11,_11];
_89 = _70;
(*_8).0 = [_43,_43];
_61 = (_74.3.0.0,);
_77 = _82 as u16;
_20 = _58 as i64;
_40 = !_76;
_30 = !_70;
_33 = _28 as u32;
_74.1.3 = (*_52) as u128;
_88 = core::ptr::addr_of!(_34);
match _17.0 {
0 => bb16,
1 => bb45,
2 => bb46,
3 => bb47,
4 => bb48,
214 => bb50,
_ => bb49
}
}
bb93 = {
(*_81) = [_119.1,_119.1,_119.1,_66,_18,_23.1,_66,_66];
_78 = _68;
_23.2 = (_61.0,);
_120 = _17.0 ^ _17.0;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).3.1.0 = [_11,_112];
_23.2.0 = [_77,_77];
_48 = core::ptr::addr_of!((*_81));
_73 = (_23.2.0,);
_45.0 = _17.0 as i32;
(*_46) = _95;
match _17.0 {
0 => bb51,
1 => bb74,
214 => bb76,
_ => bb75
}
}
bb94 = {
_23.2.0 = [_11,_11];
_14 = -_28;
_36 = ['\u{75ce1}','\u{a5fc7}','\u{741ad}','\u{c590a}','\u{e026f}'];
_17.2.1 = !Field::<i32>(Variant(_10, 1), 0);
place!(Field::<i32>(Variant(_10, 1), 0)) = _2 as i32;
_13.0 = _34 as i64;
place!(Field::<i16>(Variant(_10, 1), 3)) = -_34;
_7 = 158397169777473405893739268070319204021_i128 as u64;
_30 = !_25;
_22 = _4;
_31 = [_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0,_17.0];
_7 = _17.0 as u64;
_30 = _20 <= _20;
_23 = (_20, _13.1, _13.2);
Goto(bb29)
}
bb95 = {
_97 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.1 > Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.1;
place!(Field::<[usize; 8]>(Variant(RET, 0), 7)) = [_119.1,_23.1,_119.1,_18,_119.1,_23.1,_13.1,_66];
_74.3.1.0 = [_112,_112];
_136 = !_3;
place!(Field::<[char; 6]>(Variant(_42, 0), 5)) = [_56,_56,_56,_67,_67,_67];
(*_8) = (_61.0,);
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)) = (_61, _73, (*_60));
_17.2.0 = [_55,_17.2.3,_74.1.3];
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)) = (_17.2.0, _19.0, Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.2, Field::<u128>(Variant(_147, 1), 1));
_99 = [_110,_67,_56,_67,_67];
_155 = _86;
_128 = Move(_147);
(*_118) = !_66;
_159 = [Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).3,_17.2.3,_17.2.3];
_54 = Field::<i32>(Variant(_128, 1), 0) as f32;
_6 = [_105,Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).1,_74.1.1,_105];
SetDiscriminant(_115, 3);
Goto(bb96)
}
bb96 = {
_137 = _74.4;
_99 = [_108,_56,_67,_67,_121];
_86 = !_25;
_96 = [_20,(*_102),(*_102),(*_102),_82,_23.0];
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)).3 = !Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.3;
_85 = (_62.0.0,);
_143.0 = (_13.2.0,);
_81 = core::ptr::addr_of!((*_81));
_156 = _98;
_155 = _30;
_22 = _24;
_23.2.0 = _73.0;
place!(Field::<i128>(Variant(_103, 1), 2)) = _67 as i128;
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_115, 3), 2)).3 = !Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.3;
place!(Field::<i8>(Variant(RET, 0), 3)) = _40 as i8;
_74.0 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.1 as f32;
_74.3.2 = _74.0;
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1)).0 = [Field::<u128>(Variant(_128, 1), 1),Field::<u128>(Variant(_128, 1), 1),_74.1.3];
Call(_150 = fn17(Field::<*const i16>(Variant(_42, 0), 1), _17.0, _131, _88, _80, _23.2, Field::<(*const i16,)>(Variant(_103, 1), 1), _74), bb97, UnwindUnreachable())
}
bb97 = {
_8 = core::ptr::addr_of!(_74.3.1);
_23.2.0 = [_112,_77];
place!(Field::<i16>(Variant(_128, 1), 3)) = (*_88);
_74.3.0 = (_85.0,);
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).2 = [_13.1,(*_118),_66,_130,_130,_18,(*_118),_18];
_85 = (_73.0,);
_161.0 = Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).0;
place!(Field::<[i32; 4]>(Variant(_117, 0), 0)) = [_105,_19.0,Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.1,_19.0];
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4)).0.0 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_42, 0), 4).1.0;
_129 = [_120,_120,_120,_120,_17.0,_17.0,_17.0,_17.0];
_48 = core::ptr::addr_of!(_92);
(*_46) = -_95;
_137 = _12;
_40 = _32 - _7;
_32 = _17.1;
_143.1.0 = (*_8).0;
(*_118) = !_119.1;
_118 = core::ptr::addr_of_mut!(_23.1);
place!(Field::<*const u32>(Variant(_115, 3), 3)) = _52;
_32 = Field::<i8>(Variant(RET, 0), 3) as u64;
_61 = (_62.0.0,);
_18 = _130 ^ _23.1;
_119.1 = Field::<i8>(Variant(RET, 0), 3) as usize;
Call(_161.1 = fn18(_16, _50, Field::<[i32; 4]>(Variant(_117, 0), 0), _74.0, _159, _74.1.2, _25, Field::<*const [usize; 8]>(Variant(RET, 0), 4), Move(_103), _131), bb98, UnwindUnreachable())
}
bb98 = {
_137 = _112 as isize;
_18 = _130 & _13.1;
_159 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).1.0;
_97 = _70 | _86;
_4 = _1;
_85 = (_143.0.0,);
_62.2 = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).0;
place!(Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_115, 3), 2)).2 = core::ptr::addr_of_mut!(_13.0);
(*_46) = _71 * _62.2;
place!(Field::<i16>(Variant(_128, 1), 3)) = Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).3 as i16;
SetDiscriminant(_128, 0);
_96 = _75;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)) = ((*_60), Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1), _35, _74.3, _74.4, _74.5);
_98 = _156;
(*_8) = Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0).3.1;
_44 = _32;
_74.3.1.0 = [_77,_11];
_53 = [_119.1,_66,_130,_130,_23.1,_13.1,_130];
_78 = !_68;
_81 = _48;
(*_52) = _47;
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).1 = Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1);
_23 = (_39, _130, (*_8));
place!(Field::<(f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)>(Variant(RET, 0), 0)).4 = _59 as isize;
_161.3 = Field::<([u128; 3], i32, *mut i64, u128)>(Variant(RET, 0), 1).3 & Field::<([u128; 3], i32, *mut i64, u128)>(Variant(_115, 3), 2).3;
_74.4 = _111;
Goto(bb99)
}
bb99 = {
Call(_170 = dump_var(10_usize, 121_usize, Move(_121), 57_usize, Move(_57), 20_usize, Move(_20), 47_usize, Move(_47)), bb100, UnwindUnreachable())
}
bb100 = {
Call(_170 = dump_var(10_usize, 65_usize, Move(_65), 129_usize, Move(_129), 113_usize, Move(_113), 30_usize, Move(_30)), bb101, UnwindUnreachable())
}
bb101 = {
Call(_170 = dump_var(10_usize, 4_usize, Move(_4), 136_usize, Move(_136), 63_usize, Move(_63), 58_usize, Move(_58)), bb102, UnwindUnreachable())
}
bb102 = {
Call(_170 = dump_var(10_usize, 61_usize, Move(_61), 5_usize, Move(_5), 90_usize, Move(_90), 155_usize, Move(_155)), bb103, UnwindUnreachable())
}
bb103 = {
Call(_170 = dump_var(10_usize, 38_usize, Move(_38), 50_usize, Move(_50), 49_usize, Move(_49), 67_usize, Move(_67)), bb104, UnwindUnreachable())
}
bb104 = {
Call(_170 = dump_var(10_usize, 119_usize, Move(_119), 56_usize, Move(_56), 34_usize, Move(_34), 3_usize, Move(_3)), bb105, UnwindUnreachable())
}
bb105 = {
Call(_170 = dump_var(10_usize, 25_usize, Move(_25), 92_usize, Move(_92), 85_usize, Move(_85), 122_usize, Move(_122)), bb106, UnwindUnreachable())
}
bb106 = {
Call(_170 = dump_var(10_usize, 24_usize, Move(_24), 6_usize, Move(_6), 96_usize, Move(_96), 15_usize, Move(_15)), bb107, UnwindUnreachable())
}
bb107 = {
Call(_170 = dump_var(10_usize, 78_usize, Move(_78), 108_usize, Move(_108), 31_usize, Move(_31), 109_usize, Move(_109)), bb108, UnwindUnreachable())
}
bb108 = {
Call(_170 = dump_var(10_usize, 29_usize, Move(_29), 72_usize, Move(_72), 36_usize, Move(_36), 82_usize, Move(_82)), bb109, UnwindUnreachable())
}
bb109 = {
Call(_170 = dump_var(10_usize, 86_usize, Move(_86), 83_usize, Move(_83), 106_usize, Move(_106), 12_usize, Move(_12)), bb110, UnwindUnreachable())
}
bb110 = {
Call(_170 = dump_var(10_usize, 134_usize, Move(_134), 100_usize, Move(_100), 2_usize, Move(_2), 1_usize, Move(_1)), bb111, UnwindUnreachable())
}
bb111 = {
Call(_170 = dump_var(10_usize, 35_usize, Move(_35), 156_usize, Move(_156), 120_usize, Move(_120), 171_usize, _171), bb112, UnwindUnreachable())
}
bb112 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: (i64, usize, ([u16; 2],)),mut _2: i32,mut _3: (u8, u64, ([u128; 3], i32, *mut i64, u128)),mut _4: isize,mut _5: isize,mut _6: (i64, usize, ([u16; 2],)),mut _7: Adt59,mut _8: ([u128; 3], i32, *mut i64, u128),mut _9: isize,mut _10: *mut i64,mut _11: isize) -> i64 {
mir! {
type RET = i64;
let _12: [u128; 3];
let _13: i8;
let _14: Adt60;
let _15: ();
let _16: ();
{
RET = (*_10) ^ _6.0;
_3.2.2 = core::ptr::addr_of_mut!((*_10));
(*_10) = RET;
place!(Field::<i32>(Variant(_7, 1), 0)) = _2;
_1.0 = !(*_10);
_8 = (_3.2.0, Field::<i32>(Variant(_7, 1), 0), _3.2.2, _3.2.3);
_1.2 = _6.2;
_3.2.1 = -Field::<i32>(Variant(_7, 1), 0);
_3.0 = 77_u8;
_1.0 = 96030949057501596469133133933927136852_i128 as i64;
_8 = (_3.2.0, _3.2.1, _10, _3.2.3);
(*_10) = _6.0;
(*_10) = Field::<i16>(Variant(_7, 1), 3) as i64;
_8.1 = -_3.2.1;
(*_10) = 30963_u16 as i64;
_8 = (_3.2.0, Field::<i32>(Variant(_7, 1), 0), _10, _3.2.3);
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(11_usize, 9_usize, Move(_9), 5_usize, Move(_5), 4_usize, Move(_4), 16_usize, _16), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: i64,mut _2: isize,mut _3: isize,mut _4: isize) -> u16 {
mir! {
type RET = u16;
let _5: i8;
let _6: (i32,);
let _7: ([u16; 2],);
let _8: [u128; 3];
let _9: ();
let _10: ();
{
_4 = 6_usize as isize;
RET = false as u16;
RET = !42911_u16;
RET = true as u16;
_4 = _2 * _3;
RET = !11718_u16;
_1 = (-5752661228577991792_i64);
_2 = _4 | _4;
_5 = 7_i8 << _3;
RET = 20766_u16 * 65161_u16;
RET = !23288_u16;
_4 = _3 ^ _3;
_3 = -_4;
RET = 33803_u16 * 36227_u16;
_3 = _2 | _4;
_5 = _1 as i8;
_3 = 16584732918932712990_u64 as isize;
_4 = !_2;
_3 = !_4;
_1 = (-46867745922708869244043317081650751749_i128) as i64;
RET = 23011_u16 >> _2;
_5 = -(-126_i8);
_6.0 = !1838706398_i32;
_6 = (897325532_i32,);
_5 = (-11_i8);
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(12_usize, 3_usize, Move(_3), 5_usize, Move(_5), 6_usize, Move(_6), 10_usize, _10), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: isize,mut _2: (i32,),mut _3: isize,mut _4: isize,mut _5: isize,mut _6: (i64, usize, ([u16; 2],)),mut _7: isize,mut _8: u128,mut _9: i16,mut _10: u64,mut _11: (i64, usize, ([u16; 2],))) -> [u16; 2] {
mir! {
type RET = [u16; 2];
let _12: i64;
let _13: [usize; 8];
let _14: u8;
let _15: (*const i16,);
let _16: i64;
let _17: (i32,);
let _18: Adt65;
let _19: *mut [usize; 7];
let _20: (i64, usize, ([u16; 2],));
let _21: char;
let _22: [i32; 4];
let _23: *const f32;
let _24: isize;
let _25: isize;
let _26: f64;
let _27: i32;
let _28: [u64; 8];
let _29: char;
let _30: bool;
let _31: ();
let _32: ();
{
_11.2 = (_6.2.0,);
RET = [18292_u16,31190_u16];
_11.2.0 = [25850_u16,38452_u16];
_2 = (1694823133_i32,);
_6.2 = _11.2;
_8 = 269987754136354579425349652569249395603_u128 >> _5;
_6.2 = (RET,);
_12 = _11.0;
_14 = !27_u8;
RET = [18755_u16,37148_u16];
_2.0 = (-1626786320_i32);
Goto(bb1)
}
bb1 = {
_15.0 = core::ptr::addr_of!(_9);
_6.1 = _11.1 >> _3;
_13 = [_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1,_6.1];
_17.0 = _2.0;
match _17.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607430141425136 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_15.0 = core::ptr::addr_of!(_9);
_17.0 = -_2.0;
Goto(bb8)
}
bb8 = {
_9 = -19443_i16;
_17.0 = _2.0 >> _10;
RET = _6.2.0;
_11.2.0 = [46890_u16,22113_u16];
_8 = 178794982199070418033703230943341454631_u128;
_20.1 = _2.0 as usize;
Goto(bb9)
}
bb9 = {
_9 = (-31544_i16);
_20 = (_11.0, _6.1, _6.2);
_17.0 = _2.0;
_2 = _17;
_16 = -_6.0;
_20 = _6;
RET = [54769_u16,18882_u16];
_15.0 = core::ptr::addr_of!(_9);
_2 = (_17.0,);
_20.2 = (_6.2.0,);
match _9 {
0 => bb1,
1 => bb10,
340282366920938463463374607431768179912 => bb12,
_ => bb11
}
}
bb10 = {
_9 = -19443_i16;
_17.0 = _2.0 >> _10;
RET = _6.2.0;
_11.2.0 = [46890_u16,22113_u16];
_8 = 178794982199070418033703230943341454631_u128;
_20.1 = _2.0 as usize;
Goto(bb9)
}
bb11 = {
Return()
}
bb12 = {
_6.0 = _12 >> _20.1;
_11.2.0 = [7206_u16,34542_u16];
_11.1 = _8 as usize;
_14 = 241_u8 & 123_u8;
_6 = _20;
_4 = !_5;
_20 = (_16, _6.1, _11.2);
_6.2.0 = _20.2.0;
_6.2 = (_11.2.0,);
_22 = [_17.0,_17.0,_17.0,_2.0];
_20.2.0 = [59715_u16,5940_u16];
_6.2.0 = [12982_u16,49434_u16];
_11.2.0 = [48926_u16,20596_u16];
_6 = (_11.0, _20.1, _20.2);
_14 = !30_u8;
_6.1 = _20.1 ^ _20.1;
_11.2.0 = RET;
_25 = _7 & _3;
_21 = '\u{9490}';
_2.0 = _10 as i32;
_11 = (_16, _20.1, _20.2);
_22 = [_2.0,_17.0,_2.0,_2.0];
_20.2 = (RET,);
_15.0 = core::ptr::addr_of!(_9);
_11 = (_20.0, _20.1, _20.2);
_11.2.0 = [62033_u16,60065_u16];
_15.0 = core::ptr::addr_of!(_9);
Goto(bb13)
}
bb13 = {
_20.0 = _16 ^ _16;
_1 = !_7;
_11.0 = _12;
_21 = '\u{e141e}';
Call(_17.0 = fn14(_7, _5, _11.1, _3, _4, _7, _4, _13, _20.1, _4, _6.1, _6), bb14, UnwindUnreachable())
}
bb14 = {
_10 = !6508195918230893587_u64;
_9 = 4224_i16 & (-31809_i16);
_16 = !_20.0;
_15.0 = core::ptr::addr_of!(_9);
_14 = 122_u8 >> _4;
_20.1 = _6.1;
_11.2.0 = RET;
_5 = !_1;
_11.2 = (_20.2.0,);
_17 = (_2.0,);
_3 = !_7;
_4 = _1;
_1 = _25;
_7 = !_25;
_6 = _20;
_17 = _2;
_26 = 36979_u16 as f64;
_6.1 = _5 as usize;
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(13_usize, 9_usize, Move(_9), 3_usize, Move(_3), 2_usize, Move(_2), 16_usize, Move(_16)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(13_usize, 14_usize, Move(_14), 7_usize, Move(_7), 1_usize, Move(_1), 4_usize, Move(_4)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(13_usize, 13_usize, Move(_13), 11_usize, Move(_11), 32_usize, _32, 32_usize, _32), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: isize,mut _2: isize,mut _3: usize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: [usize; 8],mut _9: usize,mut _10: isize,mut _11: usize,mut _12: (i64, usize, ([u16; 2],))) -> i32 {
mir! {
type RET = i32;
let _13: [u128; 3];
let _14: u64;
let _15: ();
let _16: ();
{
_9 = !_11;
RET = _4 as i32;
_11 = !_9;
_11 = _12.1;
_10 = !_6;
_3 = _11;
_4 = 3966724572_u32 as isize;
_4 = !_2;
_10 = _7 >> _3;
_11 = _9 | _9;
_7 = _6;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(14_usize, 2_usize, Move(_2), 12_usize, Move(_12), 1_usize, Move(_1), 9_usize, Move(_9)), bb2, UnwindUnreachable())
}
bb2 = {
Call(_15 = dump_var(14_usize, 5_usize, Move(_5), 10_usize, Move(_10), 16_usize, _16, 16_usize, _16), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: isize,mut _3: u8,mut _4: bool,mut _5: isize,mut _6: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64),mut _7: (i32,)) -> [isize; 1] {
mir! {
type RET = [isize; 1];
let _8: [isize; 1];
let _9: ();
let _10: ();
{
_6.0 = 18130_u16 as f32;
_6.3.0.0 = [38378_u16,33294_u16];
_6.0 = _2 as f32;
RET = [_6.4];
_6.4 = -_2;
_6.1.1 = _7.0;
_6.3.1.0 = [6823_u16,10423_u16];
_8 = [_2];
_6.0 = _6.3.2;
_8 = [_6.4];
_6.3.1.0 = [50949_u16,34754_u16];
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(15_usize, 3_usize, Move(_3), 2_usize, Move(_2), 1_usize, Move(_1), 10_usize, _10), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: (i64, usize, ([u16; 2],)),mut _2: [usize; 7],mut _3: [bool; 5],mut _4: i64) -> *mut i64 {
mir! {
type RET = *mut i64;
let _5: u32;
let _6: [u16; 2];
let _7: Adt55;
let _8: ();
let _9: ();
{
_1.2.0 = [53022_u16,56655_u16];
RET = core::ptr::addr_of_mut!(_4);
_3 = [false,false,true,true,true];
_3 = [true,true,true,false,false];
_3 = [true,false,true,true,false];
(*RET) = !_1.0;
_1.1 = !1801317112353039314_usize;
_1.2.0 = [36737_u16,21123_u16];
_5 = 208_u8 as u32;
_4 = _1.0 & _1.0;
_1.1 = 6503294597574922008_usize;
_1.0 = (*RET);
(*RET) = 11077718089663120912_u64 as i64;
_4 = -_1.0;
_1.0 = (*RET) | (*RET);
RET = core::ptr::addr_of_mut!(_1.0);
_3 = [false,false,false,false,false];
Goto(bb1)
}
bb1 = {
Call(_8 = dump_var(16_usize, 2_usize, Move(_2), 3_usize, Move(_3), 9_usize, _9, 9_usize, _9), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: *const i16,mut _2: u8,mut _3: f64,mut _4: *const i16,mut _5: f64,mut _6: ([u16; 2],),mut _7: (*const i16,),mut _8: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64)) -> f32 {
mir! {
type RET = f32;
let _9: f64;
let _10: [isize; 1];
let _11: Adt51;
let _12: char;
let _13: [char; 6];
let _14: ();
let _15: ();
{
_8.3.0.0 = [35859_u16,56812_u16];
(*_4) = _8.1.1 as i16;
_8.1.3 = 90525844808154928990455342274269235283_u128 | 64405069061891715408805644686106628378_u128;
_8.1.1 = 825659742_i32 ^ 270243050_i32;
RET = _8.0;
_9 = -_3;
_9 = _3;
RET = -_8.3.2;
_7 = (_1,);
_8.3.1 = _6;
_8.3.1.0 = [62872_u16,44976_u16];
_8.2 = [18327637681685801089_usize,16298171258273838014_usize,4_usize,4_usize,0_usize,7690274508289536126_usize,1694110962136466663_usize,3707558818645340771_usize];
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(17_usize, 6_usize, Move(_6), 15_usize, _15, 15_usize, _15, 15_usize, _15), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: isize,mut _2: [i32; 4],mut _3: [i32; 4],mut _4: f32,mut _5: [u128; 3],mut _6: *mut i64,mut _7: bool,mut _8: *const [usize; 8],mut _9: Adt51,mut _10: f64) -> i32 {
mir! {
type RET = i32;
let _11: (([u16; 2],), ([u16; 2],), f32);
let _12: i16;
let _13: *const *const i16;
let _14: [u8; 8];
let _15: i64;
let _16: bool;
let _17: [u8; 3];
let _18: (usize, u32, *const u32);
let _19: u8;
let _20: u32;
let _21: Adt57;
let _22: f32;
let _23: [char; 5];
let _24: f64;
let _25: f32;
let _26: [usize; 7];
let _27: f32;
let _28: [u16; 2];
let _29: [isize; 1];
let _30: char;
let _31: u64;
let _32: [usize; 8];
let _33: f64;
let _34: f32;
let _35: char;
let _36: isize;
let _37: (*const *const i16, *const *const i16);
let _38: char;
let _39: u128;
let _40: i64;
let _41: i32;
let _42: u64;
let _43: [u64; 8];
let _44: (i32,);
let _45: Adt54;
let _46: [u8; 3];
let _47: (([u16; 2],), ([u16; 2],), f32);
let _48: [u64; 8];
let _49: [i64; 6];
let _50: bool;
let _51: ();
let _52: ();
{
place!(Field::<i128>(Variant(_9, 1), 2)) = 88712090073591141839346489860911996276_i128;
_11.0.0 = [42120_u16,6283_u16];
SetDiscriminant(_9, 1);
place!(Field::<bool>(Variant(_9, 1), 0)) = _7 & _7;
Goto(bb1)
}
bb1 = {
_1 = (-11931_i16) as isize;
_7 = Field::<bool>(Variant(_9, 1), 0);
_4 = 30000_u16 as f32;
(*_8) = [3_usize,15036415462817455261_usize,4622547384760873941_usize,7_usize,9661463917360447118_usize,6_usize,8401053979302334963_usize,2713258166810332922_usize];
_2 = [1987023654_i32,(-52102052_i32),479573156_i32,(-373495179_i32)];
_1 = (-9223372036854775808_isize) + 9223372036854775807_isize;
place!(Field::<i128>(Variant(_9, 1), 2)) = !158229399473486789101685156516682618578_i128;
RET = (-1695117835_i32);
_11.0.0 = [42352_u16,64349_u16];
place!(Field::<(*const i16,)>(Variant(_9, 1), 1)).0 = core::ptr::addr_of!(_12);
_11.1.0 = _11.0.0;
_11.0 = (_11.1.0,);
Call(_12 = fn19(Move(_9), _6, _6, _6, _3, _3, _3, _3, _6, _7, _6, _6), bb2, UnwindUnreachable())
}
bb2 = {
_11.0 = (_11.1.0,);
_8 = core::ptr::addr_of!((*_8));
_2 = [RET,RET,RET,RET];
_12 = 295889165859572198505819301928692118245_u128 as i16;
Goto(bb3)
}
bb3 = {
_11.1.0 = [49685_u16,20095_u16];
_6 = core::ptr::addr_of_mut!(_15);
_10 = 14304307332793582576_usize as f64;
_15 = (-888285327455987729_i64);
_11.0.0 = [3030_u16,39628_u16];
_12 = (-16167_i16);
(*_8) = [699317711709368807_usize,13571578507166664415_usize,0_usize,4075708244508908232_usize,1_usize,1318877193390748002_usize,0_usize,2444982108993966609_usize];
_14 = [205_u8,111_u8,151_u8,238_u8,70_u8,98_u8,150_u8,34_u8];
_8 = core::ptr::addr_of!((*_8));
_1 = !(-9223372036854775808_isize);
_1 = (-19_isize) + 70_isize;
Goto(bb4)
}
bb4 = {
_3 = [RET,RET,RET,RET];
_18.1 = 3943579496_u32;
_2 = _3;
_18.2 = core::ptr::addr_of!(_20);
_11.0 = (_11.1.0,);
_11.0.0 = [30686_u16,23433_u16];
_20 = !_18.1;
_20 = _12 as u32;
_18.2 = core::ptr::addr_of!(_20);
_19 = 197_u8 << RET;
_18.2 = core::ptr::addr_of!(_20);
_11.2 = -_4;
RET = 1568274960_i32;
_16 = _7;
RET = (-775415297_i32) | (-1057354593_i32);
_23 = ['\u{9995c}','\u{9d676}','\u{334a9}','\u{f04fe}','\u{35cde}'];
(*_6) = _1 as i64;
_14 = [_19,_19,_19,_19,_19,_19,_19,_19];
(*_6) = 5135172123141988595_i64;
_11.1 = _11.0;
_4 = _11.2;
_17 = [_19,_19,_19];
Goto(bb5)
}
bb5 = {
_2 = [RET,RET,RET,RET];
_8 = core::ptr::addr_of!((*_8));
(*_6) = _19 as i64;
_24 = _20 as f64;
_22 = _4 * _4;
(*_8) = [10254480374145421506_usize,6_usize,15124819419418550402_usize,7_usize,6_usize,4_usize,13148882774827679742_usize,1_usize];
_19 = _10 as u8;
_24 = _10 - _10;
_18.0 = 8344969065988397214_usize;
_15 = !4258809127706749580_i64;
(*_6) = (-4083273977629098744_i64) ^ (-5854023008399858879_i64);
_7 = _16;
_8 = core::ptr::addr_of!((*_8));
_11.1.0 = [30259_u16,33216_u16];
(*_8) = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_11.1 = (_11.0.0,);
Goto(bb6)
}
bb6 = {
_19 = 235_u8 - 121_u8;
_10 = (-113_i8) as f64;
_28 = [48601_u16,50119_u16];
Goto(bb7)
}
bb7 = {
_29 = [_1];
_18.0 = 12875931824711542567_usize;
_11.1.0 = _11.0.0;
_20 = !_18.1;
(*_8) = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463463374607431768195289 => bb8,
_ => bb6
}
}
bb8 = {
_28 = _11.0.0;
_25 = _1 as f32;
_8 = core::ptr::addr_of!((*_8));
_20 = _18.1 * _18.1;
RET = 733153787_i32 - (-2008806311_i32);
_11.0 = _11.1;
_19 = 104_u8 & 185_u8;
_18.1 = _20 + _20;
_28 = [20412_u16,528_u16];
Goto(bb9)
}
bb9 = {
_30 = '\u{d8ab3}';
_17 = [_19,_19,_19];
_27 = (-146740473828412333080889688590805037001_i128) as f32;
_18.1 = _20 ^ _20;
_6 = core::ptr::addr_of_mut!((*_6));
_3 = [RET,RET,RET,RET];
_5 = [21741482090241617210932352324646299919_u128,42274623061759586708970700938288593492_u128,207370582295912968201741111501887576027_u128];
_29 = [_1];
_11.0 = (_28,);
_31 = !14793177200381253659_u64;
_16 = _7 ^ _7;
_33 = _20 as f64;
_11.1 = (_11.0.0,);
_18.1 = (-109420679978073723927868047037491661595_i128) as u32;
_34 = RET as f32;
_4 = _25 - _25;
_11.1 = (_28,);
Goto(bb10)
}
bb10 = {
_8 = core::ptr::addr_of!((*_8));
(*_6) = !6185537660999126744_i64;
_11.2 = _34;
_35 = _30;
_14 = [_19,_19,_19,_19,_19,_19,_19,_19];
_1 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_32 = (*_8);
_11.2 = _20 as f32;
_10 = 65509692367783784092039071746443692586_i128 as f64;
_11.0.0 = _28;
_32 = (*_8);
_7 = _16 & _16;
_11.1.0 = [50715_u16,22113_u16];
match _12 {
0 => bb11,
340282366920938463463374607431768195289 => bb13,
_ => bb12
}
}
bb11 = {
_29 = [_1];
_18.0 = 12875931824711542567_usize;
_11.1.0 = _11.0.0;
_20 = !_18.1;
(*_8) = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463463374607431768195289 => bb8,
_ => bb6
}
}
bb12 = {
_11.1.0 = [49685_u16,20095_u16];
_6 = core::ptr::addr_of_mut!(_15);
_10 = 14304307332793582576_usize as f64;
_15 = (-888285327455987729_i64);
_11.0.0 = [3030_u16,39628_u16];
_12 = (-16167_i16);
(*_8) = [699317711709368807_usize,13571578507166664415_usize,0_usize,4075708244508908232_usize,1_usize,1318877193390748002_usize,0_usize,2444982108993966609_usize];
_14 = [205_u8,111_u8,151_u8,238_u8,70_u8,98_u8,150_u8,34_u8];
_8 = core::ptr::addr_of!((*_8));
_1 = !(-9223372036854775808_isize);
_1 = (-19_isize) + 70_isize;
Goto(bb4)
}
bb13 = {
_5 = [266422807736064290015250049798848940391_u128,323673937971513218950627482919010093946_u128,288537048788553367024676183528377047410_u128];
_34 = -_22;
_41 = !RET;
RET = -_41;
_5 = [139641464442484944162649737509139416442_u128,60930031529586807448536597877305026394_u128,259472417741530434010888432970850893429_u128];
(*_8) = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_40 = _15;
_17 = [_19,_19,_19];
_17 = [_19,_19,_19];
_18.0 = 13128038544880267838_usize >> _20;
_26 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_11.1.0 = _11.0.0;
_34 = _11.2 - _4;
_43 = [_31,_31,_31,_31,_31,_31,_31,_31];
_38 = _35;
_44 = (_41,);
_29 = [_1];
_18.2 = core::ptr::addr_of!(_20);
Goto(bb14)
}
bb14 = {
_11.2 = _19 as f32;
_6 = core::ptr::addr_of_mut!(_15);
_40 = 204284516989586883529415013204212401316_u128 as i64;
_11.2 = _12 as f32;
_47.2 = _4 * _11.2;
_4 = _18.1 as f32;
_1 = (-102_isize);
_15 = -_40;
_47.1 = _11.1;
_42 = _31 & _31;
_16 = _7 < _7;
_4 = -_22;
_30 = _35;
_1 = 9223372036854775807_isize & (-9223372036854775808_isize);
_42 = _34 as u64;
(*_6) = _40 | _40;
_47.0.0 = [57854_u16,19465_u16];
_15 = !_40;
_2 = [_44.0,RET,RET,_41];
_34 = _12 as f32;
RET = _42 as i32;
_49 = [_40,_40,(*_6),_40,(*_6),_15];
_7 = _16;
_17 = [_19,_19,_19];
_22 = _4;
Goto(bb15)
}
bb15 = {
Call(_51 = dump_var(18_usize, 38_usize, Move(_38), 17_usize, Move(_17), 26_usize, Move(_26), 32_usize, Move(_32)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_51 = dump_var(18_usize, 44_usize, Move(_44), 23_usize, Move(_23), 35_usize, Move(_35), 41_usize, Move(_41)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(18_usize, 31_usize, Move(_31), 15_usize, Move(_15), 42_usize, Move(_42), 19_usize, Move(_19)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_51 = dump_var(18_usize, 12_usize, Move(_12), 52_usize, _52, 52_usize, _52, 52_usize, _52), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: Adt51,mut _2: *mut i64,mut _3: *mut i64,mut _4: *mut i64,mut _5: [i32; 4],mut _6: [i32; 4],mut _7: [i32; 4],mut _8: [i32; 4],mut _9: *mut i64,mut _10: bool,mut _11: *mut i64,mut _12: *mut i64) -> i16 {
mir! {
type RET = i16;
let _13: ([u128; 3], i32, *mut i64, u128);
let _14: [char; 6];
let _15: bool;
let _16: [i32; 4];
let _17: (i64, usize, ([u16; 2],));
let _18: u128;
let _19: Adt53;
let _20: Adt59;
let _21: Adt59;
let _22: Adt49;
let _23: (([u16; 2],), ([u16; 2],), f32);
let _24: f32;
let _25: u8;
let _26: isize;
let _27: u128;
let _28: usize;
let _29: char;
let _30: [usize; 7];
let _31: ();
let _32: ();
{
_11 = _3;
place!(Field::<(*const i16,)>(Variant(_1, 1), 1)).0 = core::ptr::addr_of!(RET);
_9 = _4;
_3 = _9;
_3 = _4;
RET = 1020254644967282036_usize as i16;
place!(Field::<bool>(Variant(_1, 1), 0)) = _10 & _10;
_6 = _5;
_4 = _12;
_3 = _12;
_13.0 = [14708295133045281240852569724931322042_u128,150237507882174792651654724290437650644_u128,204441909422974231137007536389800043883_u128];
_9 = _4;
_3 = _9;
_13.1 = -1369853080_i32;
place!(Field::<i128>(Variant(_1, 1), 2)) = 50737673736698956248841618461902265650_i128;
_4 = _3;
_15 = _10;
_7 = _6;
_12 = core::ptr::addr_of_mut!(_17.0);
place!(Field::<(*const i16,)>(Variant(_1, 1), 1)).0 = core::ptr::addr_of!(RET);
match Field::<i128>(Variant(_1, 1), 2) {
50737673736698956248841618461902265650 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_17.1 = !7_usize;
_13.3 = 117916958967613469847466382252561497761_u128;
match Field::<i128>(Variant(_1, 1), 2) {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
50737673736698956248841618461902265650 => bb8,
_ => bb7
}
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_17.0 = 5899324090010715164_i64 << RET;
_13.1 = Field::<i128>(Variant(_1, 1), 2) as i32;
_18 = _13.3;
RET = 5274_i16;
_13.2 = _2;
_2 = core::ptr::addr_of_mut!((*_12));
_17.2.0 = [8904_u16,61880_u16];
place!(Field::<bool>(Variant(_1, 1), 0)) = _10;
place!(Field::<(*const i16,)>(Variant(_1, 1), 1)).0 = core::ptr::addr_of!(RET);
_21 = Adt59::Variant1 { fld0: _13.1,fld1: _13.3,fld2: _17.2.0,fld3: RET };
(*_2) = Field::<i128>(Variant(_1, 1), 2) as i64;
SetDiscriminant(_1, 0);
_13.0 = [Field::<u128>(Variant(_21, 1), 1),_13.3,Field::<u128>(Variant(_21, 1), 1)];
match Field::<i16>(Variant(_21, 1), 3) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
5274 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4)).1 = _17.2;
place!(Field::<[i64; 6]>(Variant(_1, 0), 6)) = [(*_12),(*_2),(*_2),(*_12),(*_2),_17.0];
place!(Field::<[u16; 2]>(Variant(_1, 0), 0)) = _17.2.0;
_15 = !_10;
_12 = core::ptr::addr_of_mut!((*_2));
_17.0 = 40_u8 as i64;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4)).0.0 = [30359_u16,50553_u16];
_3 = _11;
place!(Field::<isize>(Variant(_1, 0), 2)) = !88_isize;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4)).2 = 2621417251_u32 as f32;
_12 = core::ptr::addr_of_mut!((*_12));
_23.0.0 = [57216_u16,38893_u16];
_14 = ['\u{da37a}','\u{1f151}','\u{f1028}','\u{1ca39}','\u{bc26b}','\u{dcd50}'];
_18 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4).2 as u128;
_10 = _15;
_13.1 = !Field::<i32>(Variant(_21, 1), 0);
_13.2 = _3;
place!(Field::<[usize; 8]>(Variant(_1, 0), 3)) = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
Goto(bb11)
}
bb11 = {
_20 = Move(_21);
_23.1.0 = _23.0.0;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4)).2 = (*_2) as f32;
_23.0.0 = [37980_u16,21607_u16];
_4 = core::ptr::addr_of_mut!(_17.0);
RET = Field::<i16>(Variant(_20, 1), 3);
_6 = [_13.1,_13.1,_13.1,Field::<i32>(Variant(_20, 1), 0)];
_13.0 = [Field::<u128>(Variant(_20, 1), 1),_13.3,_13.3];
place!(Field::<[char; 6]>(Variant(_1, 0), 5)) = _14;
place!(Field::<u128>(Variant(_1, 0), 7)) = _18;
_7 = [_13.1,_13.1,Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0)];
_7 = [Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0)];
_23.0.0 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4).0.0;
_6 = [Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0)];
_21 = Adt59::Variant1 { fld0: _13.1,fld1: _13.3,fld2: Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4).0.0,fld3: Field::<i16>(Variant(_20, 1), 3) };
(*_4) = (-9164022961500134605_i64) | 7268185283700860831_i64;
place!(Field::<i32>(Variant(_20, 1), 0)) = _13.1 >> Field::<i16>(Variant(_21, 1), 3);
_17.2.0 = [3932_u16,17094_u16];
place!(Field::<i16>(Variant(_20, 1), 3)) = RET;
_23.1 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4).1;
_15 = Field::<u128>(Variant(_21, 1), 1) != Field::<u128>(Variant(_20, 1), 1);
RET = _13.1 as i16;
match Field::<i16>(Variant(_21, 1), 3) {
0 => bb2,
1 => bb12,
5274 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
place!(Field::<[u16; 2]>(Variant(_20, 1), 2)) = [11999_u16,17603_u16];
_8 = [Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_20, 1), 0),Field::<i32>(Variant(_21, 1), 0)];
_23 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4);
_2 = _11;
place!(Field::<[char; 6]>(Variant(_1, 0), 5)) = ['\u{90152}','\u{12be9}','\u{83724}','\u{4c7cf}','\u{1fb20}','\u{1762c}'];
_13.3 = _18;
place!(Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4)).0.0 = [48064_u16,36782_u16];
place!(Field::<u128>(Variant(_1, 0), 7)) = _18 ^ _13.3;
place!(Field::<i16>(Variant(_21, 1), 3)) = Field::<i16>(Variant(_20, 1), 3) << Field::<i32>(Variant(_21, 1), 0);
place!(Field::<[u16; 2]>(Variant(_21, 1), 2)) = _23.1.0;
_23.1.0 = [50191_u16,30542_u16];
_3 = _13.2;
_13.1 = 49282_u16 as i32;
(*_4) = (-5523341491830152723_i64) * (-372917282558530629_i64);
_2 = core::ptr::addr_of_mut!((*_12));
_12 = _13.2;
_25 = 68_u8 >> Field::<i32>(Variant(_20, 1), 0);
place!(Field::<i32>(Variant(_21, 1), 0)) = Field::<i32>(Variant(_20, 1), 0) >> (*_4);
_17.0 = 767400858470543265_i64;
place!(Field::<i32>(Variant(_20, 1), 0)) = Field::<i32>(Variant(_21, 1), 0);
place!(Field::<[i64; 6]>(Variant(_1, 0), 6)) = [(*_4),_17.0,(*_2),(*_4),_17.0,(*_4)];
_23.1.0 = Field::<(([u16; 2],), ([u16; 2],), f32)>(Variant(_1, 0), 4).0.0;
_23.1 = (Field::<[u16; 2]>(Variant(_20, 1), 2),);
SetDiscriminant(_20, 1);
place!(Field::<*const i16>(Variant(_1, 0), 1)) = core::ptr::addr_of!(place!(Field::<i16>(Variant(_21, 1), 3)));
(*_2) = (-5555681646076830286_i64) * 4716641968296681120_i64;
_4 = core::ptr::addr_of_mut!(_17.0);
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(19_usize, 14_usize, Move(_14), 15_usize, Move(_15), 6_usize, Move(_6), 8_usize, Move(_8)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(19_usize, 10_usize, Move(_10), 32_usize, _32, 32_usize, _32, 32_usize, _32), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box((-8871753123756718974_i64)), std::hint::black_box(174_u8), std::hint::black_box(12583753974096956963_u64), std::hint::black_box((-70_i8)), std::hint::black_box((-6843_i16)));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: *mut usize,

},
Variant1{
fld0: [i32; 4],
fld1: *const ([u16; 2],),
fld2: isize,
fld3: u128,
fld4: f64,
fld5: [isize; 1],

},
Variant2{
fld0: u8,
fld1: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64),
fld2: (usize, u32, *const u32),
fld3: [u128; 3],

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64),
fld1: ([u128; 3], i32, *mut i64, u128),
fld2: [u128; 3],
fld3: i8,
fld4: *const [usize; 8],
fld5: *const i16,
fld6: *const ([u16; 2],),
fld7: [usize; 8],

},
Variant1{
fld0: usize,
fld1: [char; 6],
fld2: isize,
fld3: (*const i16,),
fld4: Adt49,
fld5: (*const *const i16, *const *const i16),
fld6: u128,
fld7: [usize; 7],

},
Variant2{
fld0: f64,
fld1: [i32; 4],
fld2: *mut [usize; 7],

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [u16; 2],
fld1: *const i16,
fld2: isize,
fld3: [usize; 8],
fld4: (([u16; 2],), ([u16; 2],), f32),
fld5: [char; 6],
fld6: [i64; 6],
fld7: u128,

},
Variant1{
fld0: bool,
fld1: (*const i16,),
fld2: i128,

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: u16,
fld1: [u8; 3],
fld2: [u128; 3],
fld3: (usize, u32, *const u32),
fld4: [char; 5],
fld5: [bool; 5],
fld6: f32,
fld7: [u16; 2],

},
Variant1{
fld0: *mut i64,
fld1: u64,
fld2: [char; 6],
fld3: i64,

},
Variant2{
fld0: (usize, u32, *const u32),
fld1: i64,
fld2: (*const *const i16, *const *const i16),
fld3: [char; 6],
fld4: [bool; 5],

},
Variant3{
fld0: [u64; 8],
fld1: i32,
fld2: ([u128; 3], i32, *mut i64, u128),
fld3: *const u32,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: bool,
fld1: (u8, u64, ([u128; 3], i32, *mut i64, u128)),
fld2: *const f32,
fld3: (*const *const i16, *const *const i16),
fld4: *const [usize; 8],
fld5: i128,

},
Variant1{
fld0: *const u32,
fld1: ([u16; 2],),
fld2: [u128; 3],

},
Variant2{
fld0: *mut usize,
fld1: [i64; 6],
fld2: u32,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: [i32; 4],
fld1: char,
fld2: [char; 5],
fld3: u32,

},
Variant1{
fld0: [u16; 2],
fld1: *const *const i16,
fld2: isize,
fld3: (i64, usize, ([u16; 2],)),
fld4: u128,
fld5: (f32, ([u128; 3], i32, *mut i64, u128), [usize; 8], (([u16; 2],), ([u16; 2],), f32), isize, f64),
fld6: u32,
fld7: i128,

}}
#[derive(Debug)]
pub struct Adt55 {
fld0: [u64; 8],
fld1: *const i16,
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: *const [usize; 8],
fld1: u128,
fld2: *mut [usize; 7],
fld3: (usize, u32, *const u32),

},
Variant1{
fld0: Adt53,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: u128,
fld1: u64,
fld2: [isize; 1],
fld3: i8,
fld4: [u16; 2],
fld5: (([u16; 2],), ([u16; 2],), f32),
fld6: [char; 6],
fld7: Adt51,

},
Variant1{
fld0: [i64; 6],
fld1: [bool; 5],
fld2: isize,
fld3: [i32; 4],
fld4: f32,
fld5: *const *const i16,
fld6: i64,
fld7: [u128; 3],

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: [u8; 8],
fld1: *const f32,
fld2: (usize, u32, *const u32),

},
Variant1{
fld0: *mut usize,

},
Variant2{
fld0: [char; 6],
fld1: [u64; 8],
fld2: [u128; 3],
fld3: usize,

},
Variant3{
fld0: Adt49,
fld1: char,
fld2: ([u16; 2],),
fld3: *const ([u16; 2],),

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: i64,

},
Variant1{
fld0: i32,
fld1: u128,
fld2: [u16; 2],
fld3: i16,

}}
#[derive(Debug)]
pub struct Adt60 {
fld0: *const f32,
fld1: char,
fld2: (*const i16,),
}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: f64,
fld1: (u8, u64, ([u128; 3], i32, *mut i64, u128)),

},
Variant1{
fld0: bool,
fld1: *const ([u16; 2],),

},
Variant2{
fld0: *mut [usize; 7],
fld1: u8,
fld2: Adt57,
fld3: [bool; 5],
fld4: Adt58,
fld5: ([u128; 3], i32, *mut i64, u128),
fld6: i64,
fld7: Adt56,

},
Variant3{
fld0: (u8, u64, ([u128; 3], i32, *mut i64, u128)),

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: *mut i64,
fld1: Adt59,

},
Variant1{
fld0: *const u32,
fld1: u16,
fld2: i32,
fld3: (*const i16,),

},
Variant2{
fld0: u32,
fld1: char,
fld2: Adt59,
fld3: (u8, u64, ([u128; 3], i32, *mut i64, u128)),
fld4: i16,
fld5: u128,
fld6: [char; 5],

}}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: *const i16,
fld1: char,
fld2: ([u128; 3], i32, *mut i64, u128),
fld3: (i64, usize, ([u16; 2],)),

},
Variant1{
fld0: u16,
fld1: Adt53,
fld2: *const *const i16,

},
Variant2{
fld0: Adt56,
fld1: i128,
fld2: [bool; 5],

}}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: Adt56,
fld1: (*const i16,),
fld2: [i32; 4],
fld3: i8,
fld4: Adt59,
fld5: [char; 6],

},
Variant1{
fld0: ([u128; 3], i32, *mut i64, u128),
fld1: *const *const i16,
fld2: [u8; 8],
fld3: u64,
fld4: ([u16; 2],),

}}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: (i32,),
fld1: *mut i64,
fld2: *mut [usize; 7],
fld3: [char; 5],
fld4: Adt49,
fld5: Adt56,

},
Variant1{
fld0: (*const i16,),
fld1: f32,
fld2: *mut [usize; 7],
fld3: Adt57,
fld4: Adt58,
fld5: [char; 6],
fld6: i64,
fld7: Adt49,

}}

