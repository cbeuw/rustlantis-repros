#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u16,mut _2: char,mut _3: isize,mut _4: u32,mut _5: i64,mut _6: i32) -> char {
mir! {
type RET = char;
let _7: Adt61;
let _8: [i8; 5];
let _9: u8;
let _10: bool;
let _11: u8;
let _12: u32;
let _13: f64;
let _14: [char; 8];
let _15: ([u32; 3], *const [u16; 8], *const [u16; 8]);
let _16: f32;
let _17: ((u32,), bool, u8);
let _18: *mut *mut u16;
let _19: f32;
let _20: (bool,);
let _21: [char; 8];
let _22: (bool,);
let _23: char;
let _24: i8;
let _25: [i8; 5];
let _26: (u32,);
let _27: i64;
let _28: ();
let _29: ();
{
_5 = 2036821244815477269_i64 ^ (-6600929316808922556_i64);
_5 = (-961369248334888279_i64) << (-86_i8);
_6 = 9223372036854775807_isize as i32;
RET = '\u{10ca66}';
_1 = 62469_u16 - 60042_u16;
RET = '\u{eb955}';
_3 = 16359442132886506914_u64 as isize;
Goto(bb1)
}
bb1 = {
_6 = 2561030448_u32 as i32;
RET = '\u{5ec78}';
_7.fld0.fld1 = _6 << _5;
_3 = !9223372036854775807_isize;
_7.fld0.fld0 = 4052385326_u32 - 1740026931_u32;
_7.fld0.fld4 = 14006_i16;
_7.fld0.fld2 = _3;
_4 = _7.fld0.fld0 ^ _7.fld0.fld0;
match _7.fld0.fld4 {
0 => bb2,
1 => bb3,
14006 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7.fld0.fld4 = (-14238_i16);
_9 = 230_u8;
_3 = -_7.fld0.fld2;
Goto(bb6)
}
bb6 = {
_3 = _5 as isize;
Call(_7.fld0.fld3 = fn1(_7.fld0.fld4, _6, _4), bb7, UnwindUnreachable())
}
bb7 = {
_9 = _7.fld0.fld1 as u8;
_1 = !Field::<u16>(Variant(_7.fld0.fld3, 1), 2);
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0)).1 = Field::<u16>(Variant(_7.fld0.fld3, 1), 2) & _1;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0)).1 = Field::<u16>(Variant(_7.fld0.fld3, 1), 2);
_9 = 198_u8;
place!(Field::<f64>(Variant(_7.fld0.fld3, 1), 6)) = _5 as f64;
place!(Field::<(bool,)>(Variant(_7.fld0.fld3, 1), 5)) = (true,);
place!(Field::<i8>(Variant(_7.fld0.fld3, 1), 3)) = (-13_i8);
_7.fld0.fld4 = Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0).0 | Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0).0;
_3 = _7.fld0.fld2;
_13 = _9 as f64;
_12 = _7.fld0.fld1 as u32;
_6 = _7.fld0.fld1 ^ _7.fld0.fld1;
place!(Field::<[u16; 8]>(Variant(_7.fld0.fld3, 1), 7)) = [Field::<u16>(Variant(_7.fld0.fld3, 1), 2),Field::<u16>(Variant(_7.fld0.fld3, 1), 2),_1,Field::<u16>(Variant(_7.fld0.fld3, 1), 2),Field::<u16>(Variant(_7.fld0.fld3, 1), 2),Field::<u16>(Variant(_7.fld0.fld3, 1), 2),_1,_1];
_7.fld0.fld0 = _4;
place!(Field::<*mut u16>(Variant(_7.fld0.fld3, 1), 1)) = core::ptr::addr_of_mut!(_1);
_4 = _12;
_7.fld0.fld0 = _12 >> Field::<u16>(Variant(_7.fld0.fld3, 1), 2);
_15.1 = core::ptr::addr_of!(place!(Field::<[u16; 8]>(Variant(_7.fld0.fld3, 1), 7)));
_11 = !_9;
_10 = !Field::<(bool,)>(Variant(_7.fld0.fld3, 1), 5).0;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0)).2 = _11 as i16;
match _9 {
0 => bb8,
1 => bb9,
198 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
_7.fld0.fld4 = (-14238_i16);
_9 = 230_u8;
_3 = -_7.fld0.fld2;
Goto(bb6)
}
bb10 = {
Return()
}
bb11 = {
_2 = RET;
_15.0 = [_7.fld0.fld0,_7.fld0.fld0,_7.fld0.fld0];
_13 = Field::<f64>(Variant(_7.fld0.fld3, 1), 6);
_15.2 = _15.1;
_14 = [RET,_2,_2,RET,_2,_2,_2,_2];
_17.1 = _10;
_17.0.0 = _5 as u32;
place!(Field::<i8>(Variant(_7.fld0.fld3, 1), 3)) = _13 as i8;
_7.fld0.fld0 = !_17.0.0;
_10 = _7.fld0.fld4 != Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0).0;
_5 = 7978628224547880764_i64 ^ (-3082795970420424434_i64);
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0)).2 = _7.fld0.fld4;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0)).2 = -Field::<(i16, u16, i16, *mut isize)>(Variant(_7.fld0.fld3, 1), 0).0;
_15.0 = [_17.0.0,_7.fld0.fld0,_12];
_9 = !_11;
SetDiscriminant(_7.fld0.fld3, 0);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_7.fld0.fld3, 0), 3)).1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_7.fld0.fld3, 0), 6)));
place!(Field::<(bool,)>(Variant(_7.fld0.fld3, 0), 4)) = (_10,);
place!(Field::<(bool,)>(Variant(_7.fld0.fld3, 0), 4)).0 = _1 <= _1;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_7.fld0.fld3, 0), 1)).1 = [_1,_1,_1,_1,_1,_1,_1,_1];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_7.fld0.fld3, 0), 3)).1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_7.fld0.fld3, 0), 6)));
_19 = _9 as f32;
_5 = _7.fld0.fld2 as i64;
place!(Field::<[char; 6]>(Variant(_7.fld0.fld3, 0), 0)) = [RET,RET,_2,_2,_2,RET];
_7.fld0.fld0 = _12 & _17.0.0;
Goto(bb12)
}
bb12 = {
RET = _2;
_5 = (-1523335351221604702_i64);
_20.0 = !Field::<(bool,)>(Variant(_7.fld0.fld3, 0), 4).0;
_12 = 414901243422151301_usize as u32;
_21 = _14;
_12 = !_7.fld0.fld0;
_23 = _2;
_7.fld0.fld4 = !10065_i16;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_7.fld0.fld3, 0), 3)).2 = _6 as i64;
match _5 {
0 => bb13,
340282366920938463461851272080546606754 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_7.fld0.fld3, 0), 3)).3 = core::ptr::addr_of_mut!(_7.fld0.fld2);
RET = _23;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_7.fld0.fld3, 0), 1)).1 = [_1,_1,_1,_1,_1,_1,_1,_1];
_21 = [_23,_2,RET,_2,RET,_2,RET,_23];
Goto(bb16)
}
bb16 = {
Call(_28 = dump_var(0_usize, 4_usize, Move(_4), 11_usize, Move(_11), 14_usize, Move(_14), 23_usize, Move(_23)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(0_usize, 21_usize, Move(_21), 9_usize, Move(_9), 12_usize, Move(_12), 29_usize, _29), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: i16,mut _2: i32,mut _3: u32) -> Adt51 {
mir! {
type RET = Adt51;
let _4: usize;
let _5: char;
let _6: Adt58;
let _7: i128;
let _8: [i32; 5];
let _9: i128;
let _10: *mut *mut u16;
let _11: (*mut [u64; 1], u8, u64, u64, char);
let _12: bool;
let _13: [i128; 4];
let _14: f32;
let _15: u128;
let _16: i32;
let _17: [u64; 1];
let _18: [usize; 3];
let _19: [char; 6];
let _20: u128;
let _21: [i32; 5];
let _22: f64;
let _23: i64;
let _24: i64;
let _25: *mut [u16; 8];
let _26: isize;
let _27: (u128, u32, *mut u16, ((u32,), bool, u8));
let _28: [u16; 8];
let _29: f64;
let _30: [u16; 8];
let _31: i64;
let _32: [i8; 5];
let _33: (u128, u32, *mut u16, ((u32,), bool, u8));
let _34: f64;
let _35: isize;
let _36: Adt54;
let _37: f64;
let _38: [char; 8];
let _39: [i16; 6];
let _40: u64;
let _41: u16;
let _42: bool;
let _43: *mut *mut u16;
let _44: (u128, u32, *mut u16, ((u32,), bool, u8));
let _45: [i8; 5];
let _46: [i16; 6];
let _47: f64;
let _48: i16;
let _49: char;
let _50: u8;
let _51: i128;
let _52: (bool,);
let _53: [i16; 6];
let _54: Adt54;
let _55: ([u32; 3], *const [u16; 8], *const [u16; 8]);
let _56: f64;
let _57: char;
let _58: (u32,);
let _59: u16;
let _60: u32;
let _61: u8;
let _62: (*mut [u64; 1], u8, u64, u64, char);
let _63: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize);
let _64: Adt51;
let _65: (u32,);
let _66: f64;
let _67: char;
let _68: f32;
let _69: [i128; 4];
let _70: [i128; 4];
let _71: isize;
let _72: f32;
let _73: u8;
let _74: (i16, u16, i16, *mut isize);
let _75: Adt54;
let _76: [usize; 3];
let _77: bool;
let _78: [char; 6];
let _79: ((u32,), bool, u8);
let _80: Adt54;
let _81: [i16; 6];
let _82: (u32,);
let _83: f64;
let _84: ([i128; 4], [u16; 8]);
let _85: i128;
let _86: ([i128; 4], [u16; 8]);
let _87: u16;
let _88: u32;
let _89: Adt52;
let _90: f32;
let _91: i32;
let _92: isize;
let _93: bool;
let _94: ([i128; 4], [u16; 8]);
let _95: *const u16;
let _96: [i8; 5];
let _97: [char; 6];
let _98: f64;
let _99: u128;
let _100: isize;
let _101: (i16, u16, i16, *mut isize);
let _102: u8;
let _103: Adt65;
let _104: Adt64;
let _105: [i16; 6];
let _106: i8;
let _107: Adt49;
let _108: Adt55;
let _109: char;
let _110: *mut *mut [u16; 8];
let _111: char;
let _112: isize;
let _113: isize;
let _114: [i32; 5];
let _115: [u16; 8];
let _116: (u32,);
let _117: Adt55;
let _118: usize;
let _119: bool;
let _120: [i128; 4];
let _121: [i128; 4];
let _122: [usize; 3];
let _123: isize;
let _124: (bool,);
let _125: char;
let _126: bool;
let _127: u32;
let _128: Adt61;
let _129: bool;
let _130: f64;
let _131: Adt55;
let _132: isize;
let _133: Adt58;
let _134: f32;
let _135: isize;
let _136: [u64; 1];
let _137: char;
let _138: bool;
let _139: f64;
let _140: isize;
let _141: u8;
let _142: *mut u16;
let _143: [u16; 8];
let _144: (u32,);
let _145: f32;
let _146: [char; 6];
let _147: ((u32,), bool, u8);
let _148: (i16, u16, i16, *mut isize);
let _149: char;
let _150: ((u32,), bool, u8);
let _151: Adt50;
let _152: Adt60;
let _153: Adt60;
let _154: f32;
let _155: i32;
let _156: (i16, u16, i16, *mut isize);
let _157: f32;
let _158: isize;
let _159: [i128; 4];
let _160: [i8; 5];
let _161: [i128; 4];
let _162: (bool,);
let _163: Adt50;
let _164: [i8; 5];
let _165: [i16; 6];
let _166: [i64; 8];
let _167: f64;
let _168: ((u32,), bool, u8);
let _169: char;
let _170: f64;
let _171: [i64; 8];
let _172: i32;
let _173: (bool,);
let _174: Adt63;
let _175: *mut [u64; 1];
let _176: isize;
let _177: [u32; 3];
let _178: u16;
let _179: u128;
let _180: isize;
let _181: u32;
let _182: u8;
let _183: u128;
let _184: (bool,);
let _185: Adt49;
let _186: f32;
let _187: isize;
let _188: u16;
let _189: Adt57;
let _190: u16;
let _191: char;
let _192: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize);
let _193: isize;
let _194: char;
let _195: isize;
let _196: [i32; 5];
let _197: char;
let _198: char;
let _199: [u16; 1];
let _200: [i16; 6];
let _201: [i128; 4];
let _202: isize;
let _203: (bool,);
let _204: ();
let _205: ();
{
_1 = 2529_i16;
_2 = (-487853272_i32);
_1 = -(-25971_i16);
_1 = 31512_i16 & (-8807_i16);
_4 = !7_usize;
_4 = 5717436361781983318_usize + 2_usize;
_3 = 2440640052_u32 & 2638279810_u32;
_5 = '\u{8d427}';
_2 = _1 as i32;
_5 = '\u{641e3}';
_2 = (-854925743_i32);
_2 = 3513_u16 as i32;
_3 = !1366241214_u32;
_2 = 1490398407_i32 * (-1079519867_i32);
Goto(bb1)
}
bb1 = {
_5 = '\u{69197}';
_1 = 16631_i16;
_3 = 506456225_u32 | 57421306_u32;
_2 = (-60951337_i32) * 387463797_i32;
_2 = 1545202617_i32 >> _3;
_5 = '\u{850e7}';
_3 = 1174776595_u32 << _2;
_7 = !130923476375037660254544337365608421146_i128;
_1 = (-98_isize) as i16;
_5 = '\u{81c1}';
_4 = 9223372036854775807_isize as usize;
_4 = 1_usize;
_2 = -(-527531284_i32);
_2 = 1222002983_i32 | 398233390_i32;
_4 = 5_usize ^ 2_usize;
_2 = 1879582384_i32;
_2 = 1080912332_i32 | 365948519_i32;
_4 = 7_usize;
_2 = (-108480772_i32);
_2 = (-1726103950_i32) | 1808571534_i32;
_7 = _1 as i128;
_1 = (-1_i8) as i16;
_5 = '\u{76aed}';
_7 = (-47313767662346042470020161404573746993_i128) * (-33268882605030914183407539975806686067_i128);
_4 = !12066152468689160159_usize;
_5 = '\u{18963}';
Goto(bb2)
}
bb2 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb3 = {
_7 = -122035898792810538184708000475356332442_i128;
_3 = _4 as u32;
_6 = Adt58::Variant1 { fld0: true,fld1: _8,fld2: 18403256625120867330_u64 };
place!(Field::<bool>(Variant(_6, 1), 0)) = true;
place!(Field::<u64>(Variant(_6, 1), 2)) = Field::<bool>(Variant(_6, 1), 0) as u64;
_8 = [_2,_2,_2,_2,_2];
_2 = 823667047_i32;
_4 = 3534645772244839645_usize;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _8;
_6 = Adt58::Variant1 { fld0: false,fld1: _8,fld2: 2067957810852391063_u64 };
_8 = [_2,_2,_2,_2,_2];
_4 = 2_usize;
_11.1 = !59_u8;
_11.2 = 13078047003911501322_u64;
match _11.2 {
0 => bb1,
1 => bb2,
13078047003911501322 => bb5,
_ => bb4
}
}
bb4 = {
_5 = '\u{69197}';
_1 = 16631_i16;
_3 = 506456225_u32 | 57421306_u32;
_2 = (-60951337_i32) * 387463797_i32;
_2 = 1545202617_i32 >> _3;
_5 = '\u{850e7}';
_3 = 1174776595_u32 << _2;
_7 = !130923476375037660254544337365608421146_i128;
_1 = (-98_isize) as i16;
_5 = '\u{81c1}';
_4 = 9223372036854775807_isize as usize;
_4 = 1_usize;
_2 = -(-527531284_i32);
_2 = 1222002983_i32 | 398233390_i32;
_4 = 5_usize ^ 2_usize;
_2 = 1879582384_i32;
_2 = 1080912332_i32 | 365948519_i32;
_4 = 7_usize;
_2 = (-108480772_i32);
_2 = (-1726103950_i32) | 1808571534_i32;
_7 = _1 as i128;
_1 = (-1_i8) as i16;
_5 = '\u{76aed}';
_7 = (-47313767662346042470020161404573746993_i128) * (-33268882605030914183407539975806686067_i128);
_4 = !12066152468689160159_usize;
_5 = '\u{18963}';
Goto(bb2)
}
bb5 = {
_1 = 4044_i16;
place!(Field::<bool>(Variant(_6, 1), 0)) = true;
_14 = _11.1 as f32;
_1 = !14482_i16;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _2 & _8[_4];
_13 = [_7,_7,_7,_7];
_12 = Field::<bool>(Variant(_6, 1), 0) >= Field::<bool>(Variant(_6, 1), 0);
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = !_2;
_11.3 = !_11.2;
Goto(bb6)
}
bb6 = {
_5 = '\u{4fd07}';
_12 = Field::<bool>(Variant(_6, 1), 0);
_14 = 53093_u16 as f32;
_11.4 = _5;
_3 = 1067719121_u32 & 455615117_u32;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.2 >> _3;
_12 = Field::<bool>(Variant(_6, 1), 0) & Field::<bool>(Variant(_6, 1), 0);
_9 = !_13[_4];
_13 = [_7,_9,_9,_9];
place!(Field::<bool>(Variant(_6, 1), 0)) = !_12;
place!(Field::<u64>(Variant(_6, 1), 2)) = !_11.3;
_11.2 = _11.3;
_11.2 = _11.3 << _9;
_5 = _11.4;
_8 = [_2,Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_2,_2,Field::<[i32; 5]>(Variant(_6, 1), 1)[_4]];
_11.2 = _11.3 + Field::<u64>(Variant(_6, 1), 2);
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _8;
_15 = 193460253862022735220892295827962251094_u128 - 3121744072881557833729569972399478466_u128;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _2 + _2;
_11.0 = core::ptr::addr_of_mut!(_17);
_8[_4] = _2;
_8[_4] = Field::<[i32; 5]>(Variant(_6, 1), 1)[_4];
_8[_4] = _3 as i32;
Goto(bb7)
}
bb7 = {
_14 = _8[_4] as f32;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _13[_4] as i32;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_8[_4],_8[_4],_2];
_11.2 = !_11.3;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _2 + _2;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _8[_4] - _8[_4];
_8[_4] = Field::<[i32; 5]>(Variant(_6, 1), 1)[_4] - Field::<[i32; 5]>(Variant(_6, 1), 1)[_4];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = -_8[_4];
_15 = 254692177249690131194249130486526850477_u128 ^ 192194916428086081899953210927122505700_u128;
_19[_4] = _5;
_8 = Field::<[i32; 5]>(Variant(_6, 1), 1);
_5 = _19[_4];
_19[_4] = _5;
_2 = !_8[_4];
Goto(bb8)
}
bb8 = {
_11.1 = !207_u8;
_2 = -_8[_4];
Goto(bb9)
}
bb9 = {
_1 = 30422_i16;
_20 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_2,_8[_4],_8[_4]];
_11.1 = _20 as u8;
_21 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4],_8[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4]];
_13 = [_9,_7,_7,_9];
_7 = _9;
_22 = 127_isize as f64;
_18 = [_4,_4,_4];
_24 = (-43775642749400216_i64) ^ (-9021490623666393231_i64);
_8 = _21;
Goto(bb10)
}
bb10 = {
_21[_4] = _8[_4];
_3 = 3791540084_u32;
_8 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_21[_4],_2,_2];
SetDiscriminant(_6, 1);
_12 = true & true;
Goto(bb11)
}
bb11 = {
_19 = [_5,_11.4,_11.4,_11.4,_11.4,_5];
_8[_4] = _2 * _2;
_18 = [_4,_4,_4];
_1 = (-30_isize) as i16;
_1 = 11193_i16;
place!(Field::<bool>(Variant(_6, 1), 0)) = _11.2 != _11.2;
_26 = !9223372036854775807_isize;
_9 = !_7;
_13 = [_9,_9,_9,_7];
Goto(bb12)
}
bb12 = {
_18[_4] = !_4;
_19[_4] = _11.4;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.3 | _11.3;
_18[_4] = !_4;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_8[_4],_8[_4],_21[_4],_21[_4]];
_19[_4] = _5;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_21[_4],_8[_4],_8[_4],_2];
_22 = _26 as f64;
_27.3.0.0 = _3;
_28 = [2525_u16,62617_u16,46600_u16,62710_u16,34828_u16,39863_u16,40235_u16,6618_u16];
_24 = -6721022980673239403_i64;
_26 = _28[_4] as isize;
_27.3.2 = !_11.1;
_3 = !_27.3.0.0;
_17 = [_11.3];
_28 = [5999_u16,30821_u16,21514_u16,44139_u16,51125_u16,47172_u16,60184_u16,28828_u16];
_13 = [_7,_7,_7,_9];
_27.1 = _27.3.0.0;
_27.1 = _3 ^ _27.3.0.0;
_30 = _28;
_13 = [_7,_7,_9,_9];
_19[_4] = _11.4;
_2 = _26 as i32;
_27.3.0 = (_27.1,);
_11.3 = _14 as u64;
match _30[_4] {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
21514 => bb20,
_ => bb19
}
}
bb13 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb14 = {
_7 = -122035898792810538184708000475356332442_i128;
_3 = _4 as u32;
_6 = Adt58::Variant1 { fld0: true,fld1: _8,fld2: 18403256625120867330_u64 };
place!(Field::<bool>(Variant(_6, 1), 0)) = true;
place!(Field::<u64>(Variant(_6, 1), 2)) = Field::<bool>(Variant(_6, 1), 0) as u64;
_8 = [_2,_2,_2,_2,_2];
_2 = 823667047_i32;
_4 = 3534645772244839645_usize;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _8;
_6 = Adt58::Variant1 { fld0: false,fld1: _8,fld2: 2067957810852391063_u64 };
_8 = [_2,_2,_2,_2,_2];
_4 = 2_usize;
_11.1 = !59_u8;
_11.2 = 13078047003911501322_u64;
match _11.2 {
0 => bb1,
1 => bb2,
13078047003911501322 => bb5,
_ => bb4
}
}
bb15 = {
_1 = 30422_i16;
_20 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_2,_8[_4],_8[_4]];
_11.1 = _20 as u8;
_21 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4],_8[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4]];
_13 = [_9,_7,_7,_9];
_7 = _9;
_22 = 127_isize as f64;
_18 = [_4,_4,_4];
_24 = (-43775642749400216_i64) ^ (-9021490623666393231_i64);
_8 = _21;
Goto(bb10)
}
bb16 = {
_11.1 = !207_u8;
_2 = -_8[_4];
Goto(bb9)
}
bb17 = {
_14 = _8[_4] as f32;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _13[_4] as i32;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_8[_4],_8[_4],_2];
_11.2 = !_11.3;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _2 + _2;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _8[_4] - _8[_4];
_8[_4] = Field::<[i32; 5]>(Variant(_6, 1), 1)[_4] - Field::<[i32; 5]>(Variant(_6, 1), 1)[_4];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = -_8[_4];
_15 = 254692177249690131194249130486526850477_u128 ^ 192194916428086081899953210927122505700_u128;
_19[_4] = _5;
_8 = Field::<[i32; 5]>(Variant(_6, 1), 1);
_5 = _19[_4];
_19[_4] = _5;
_2 = !_8[_4];
Goto(bb8)
}
bb18 = {
_5 = '\u{4fd07}';
_12 = Field::<bool>(Variant(_6, 1), 0);
_14 = 53093_u16 as f32;
_11.4 = _5;
_3 = 1067719121_u32 & 455615117_u32;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.2 >> _3;
_12 = Field::<bool>(Variant(_6, 1), 0) & Field::<bool>(Variant(_6, 1), 0);
_9 = !_13[_4];
_13 = [_7,_9,_9,_9];
place!(Field::<bool>(Variant(_6, 1), 0)) = !_12;
place!(Field::<u64>(Variant(_6, 1), 2)) = !_11.3;
_11.2 = _11.3;
_11.2 = _11.3 << _9;
_5 = _11.4;
_8 = [_2,Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_2,_2,Field::<[i32; 5]>(Variant(_6, 1), 1)[_4]];
_11.2 = _11.3 + Field::<u64>(Variant(_6, 1), 2);
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _8;
_15 = 193460253862022735220892295827962251094_u128 - 3121744072881557833729569972399478466_u128;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _2 + _2;
_11.0 = core::ptr::addr_of_mut!(_17);
_8[_4] = _2;
_8[_4] = Field::<[i32; 5]>(Variant(_6, 1), 1)[_4];
_8[_4] = _3 as i32;
Goto(bb7)
}
bb19 = {
_1 = 4044_i16;
place!(Field::<bool>(Variant(_6, 1), 0)) = true;
_14 = _11.1 as f32;
_1 = !14482_i16;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = _2 & _8[_4];
_13 = [_7,_7,_7,_7];
_12 = Field::<bool>(Variant(_6, 1), 0) >= Field::<bool>(Variant(_6, 1), 0);
place!(Field::<[i32; 5]>(Variant(_6, 1), 1))[_4] = !_2;
_11.3 = !_11.2;
Goto(bb6)
}
bb20 = {
_27.0 = _15 - _20;
_5 = _11.4;
_23 = _26 as i64;
_18 = [_4,_4,_4];
_16 = -_2;
place!(Field::<bool>(Variant(_6, 1), 0)) = Field::<[i32; 5]>(Variant(_6, 1), 1)[_4] != Field::<[i32; 5]>(Variant(_6, 1), 1)[_4];
_1 = !(-5933_i16);
match _4 {
0 => bb9,
1 => bb13,
3 => bb18,
4 => bb5,
5 => bb11,
6 => bb7,
2 => bb22,
_ => bb21
}
}
bb21 = {
_18[_4] = !_4;
_19[_4] = _11.4;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.3 | _11.3;
_18[_4] = !_4;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_8[_4],_8[_4],_21[_4],_21[_4]];
_19[_4] = _5;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_21[_4],_8[_4],_8[_4],_2];
_22 = _26 as f64;
_27.3.0.0 = _3;
_28 = [2525_u16,62617_u16,46600_u16,62710_u16,34828_u16,39863_u16,40235_u16,6618_u16];
_24 = -6721022980673239403_i64;
_26 = _28[_4] as isize;
_27.3.2 = !_11.1;
_3 = !_27.3.0.0;
_17 = [_11.3];
_28 = [5999_u16,30821_u16,21514_u16,44139_u16,51125_u16,47172_u16,60184_u16,28828_u16];
_13 = [_7,_7,_7,_9];
_27.1 = _27.3.0.0;
_27.1 = _3 ^ _27.3.0.0;
_30 = _28;
_13 = [_7,_7,_9,_9];
_19[_4] = _11.4;
_2 = _26 as i32;
_27.3.0 = (_27.1,);
_11.3 = _14 as u64;
match _30[_4] {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
21514 => bb20,
_ => bb19
}
}
bb22 = {
_2 = Field::<bool>(Variant(_6, 1), 0) as i32;
_30 = [_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4]];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_2,_2,_2,_16];
_17 = [_11.2];
_1 = (-51_i8) as i16;
_32[_4] = (-47_i8);
SetDiscriminant(_6, 1);
_32 = [88_i8,(-65_i8),(-89_i8),(-2_i8),65_i8];
_33.3 = (_27.3.0, _12, _11.1);
_27.3.1 = _12;
_16 = _23 as i32;
_33.3.0.0 = _9 as u32;
_16 = _27.3.2 as i32;
_2 = _21[_4];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_21[_4],_16,_8[_4],_2,_2];
_19[_4] = _11.4;
_25 = core::ptr::addr_of_mut!(_30);
Goto(bb23)
}
bb23 = {
_17 = [_11.3];
_10 = core::ptr::addr_of_mut!(_27.2);
_11.3 = !_11.2;
_1 = _5 as i16;
_30 = [_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4]];
_15 = _8[_4] as u128;
_18[_4] = _5 as usize;
_27.1 = !_33.3.0.0;
_27.3.0.0 = _27.1;
_4 = _18[_4];
_27.1 = !_3;
place!(Field::<bool>(Variant(_6, 1), 0)) = _12;
_30 = [9532_u16,2255_u16,58869_u16,2692_u16,57969_u16,58496_u16,6459_u16,4642_u16];
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.3;
SetDiscriminant(_6, 1);
_17 = [_11.3];
_33.3.0 = _27.3.0;
_12 = _9 <= _9;
place!(Field::<bool>(Variant(_6, 1), 0)) = _33.3.1 | _12;
place!(Field::<u64>(Variant(_6, 1), 2)) = !_11.3;
_8 = [_2,_2,_2,_2,_2];
_24 = _23 + _23;
_27.3.1 = _15 <= _15;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.3;
Call(_15 = core::intrinsics::bswap(_27.0), bb24, UnwindUnreachable())
}
bb24 = {
_34 = _22;
_37 = _22 + _34;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_16,_2,_2,_2];
_33.1 = _14 as u32;
_12 = !_27.3.1;
(*_10) = core::ptr::addr_of_mut!(_41);
SetDiscriminant(_6, 1);
_27.3 = _33.3;
_35 = _26;
_33.2 = core::ptr::addr_of_mut!(_41);
_38 = [_5,_11.4,_5,_11.4,_5,_11.4,_11.4,_5];
_34 = _22 + _37;
_27.3.2 = !_33.3.2;
(*_25) = _28;
_27.3.0.0 = _33.1 ^ _33.1;
_7 = _9 + _9;
_33.1 = _27.3.0.0 ^ _33.3.0.0;
_5 = _11.4;
_33.3.0.0 = _35 as u32;
_38 = [_5,_5,_11.4,_5,_11.4,_5,_5,_5];
_36 = Adt54::Variant2 { fld0: _11.4 };
place!(Field::<bool>(Variant(_6, 1), 0)) = _12;
Goto(bb25)
}
bb25 = {
(*_25) = [14996_u16,41853_u16,35419_u16,61872_u16,15653_u16,35065_u16,23404_u16,57543_u16];
_3 = !_27.1;
SetDiscriminant(_36, 0);
_34 = -_37;
_5 = _11.4;
_43 = core::ptr::addr_of_mut!((*_10));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).3 = core::ptr::addr_of_mut!(_35);
_33 = _27;
_11.2 = _11.3;
_29 = _1 as f64;
_27.0 = !_33.0;
place!(Field::<u64>(Variant(_6, 1), 2)) = _4 as u64;
_22 = _4 as f64;
_22 = _15 as f64;
_26 = _35 * _35;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).3 = core::ptr::addr_of_mut!(_35);
_11.3 = _11.2 * _11.2;
_34 = _1 as f64;
_33.3.2 = _27.3.2;
_44.3.1 = _34 == _22;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).0 = core::ptr::addr_of!(_28);
_36 = Adt54::Variant2 { fld0: _5 };
Goto(bb26)
}
bb26 = {
_44.1 = _1 as u32;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_2,_2,_2,_2];
_44.0 = _33.3.2 as u128;
_11.1 = !_27.3.2;
_27.2 = core::ptr::addr_of_mut!(_41);
_23 = _24 * _24;
_31 = _23 >> _27.3.2;
_27.3.1 = !_44.3.1;
(*_25) = [49512_u16,43952_u16,31908_u16,43465_u16,29307_u16,48219_u16,11569_u16,26201_u16];
place!(Field::<bool>(Variant(_6, 1), 0)) = _12 ^ _12;
_27 = _33;
_13 = [_9,_7,_9,_7];
Goto(bb27)
}
bb27 = {
_44.3.2 = _11.1 * _27.3.2;
_54 = Move(_36);
_51 = _7 | _9;
_42 = !Field::<bool>(Variant(_6, 1), 0);
_46 = [_1,_1,_1,_1,_1,_1];
_25 = core::ptr::addr_of_mut!((*_25));
_10 = core::ptr::addr_of_mut!(_44.2);
_33.0 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _21;
_42 = !Field::<bool>(Variant(_6, 1), 0);
_44.3 = _27.3;
_27.3.2 = _11.1;
_40 = _11.2;
_11.3 = _40 | _11.2;
_42 = Field::<bool>(Variant(_6, 1), 0);
_29 = _34;
_26 = !_35;
_14 = _51 as f32;
_30 = [35515_u16,2412_u16,30619_u16,57034_u16,3476_u16,44540_u16,13983_u16,45811_u16];
_32 = [67_i8,(-108_i8),(-28_i8),(-58_i8),114_i8];
_33.3.1 = _42;
Goto(bb28)
}
bb28 = {
_16 = !_2;
_34 = _37 * _22;
_33 = _27;
_44 = _33;
_27.1 = !_27.3.0.0;
_14 = _27.0 as f32;
_48 = !_1;
_11.0 = core::ptr::addr_of_mut!(_17);
_30 = _28;
_11.2 = _34 as u64;
_33.3.2 = _11.1 >> _2;
_24 = _31;
_55.1 = core::ptr::addr_of!(_30);
_46 = [_1,_1,_1,_48,_48,_1];
_27 = _33;
_4 = !0_usize;
Goto(bb29)
}
bb29 = {
_16 = _34 as i32;
_34 = _37 + _22;
_3 = _51 as u32;
_23 = -_31;
_4 = 6878624552427170751_usize;
_42 = !Field::<bool>(Variant(_6, 1), 0);
_5 = Field::<char>(Variant(_54, 2), 0);
_44.3 = (_27.3.0, _42, _27.3.2);
Goto(bb30)
}
bb30 = {
_33.3.2 = 0_i8 as u8;
_44.0 = _48 as u128;
_33.0 = _15;
_44.3.0.0 = !_33.1;
_28 = (*_25);
_23 = _2 as i64;
(*_10) = core::ptr::addr_of_mut!(_41);
_3 = _44.3.0.0 & _33.3.0.0;
_36 = Adt54::Variant2 { fld0: _5 };
place!(Field::<char>(Variant(_36, 2), 0)) = Field::<char>(Variant(_54, 2), 0);
_31 = _35 as i64;
_27.3.0.0 = _14 as u32;
_51 = _2 as i128;
_47 = -_37;
_55.2 = core::ptr::addr_of!((*_25));
_52.0 = _15 >= _15;
_19 = [_5,_11.4,_5,_5,Field::<char>(Variant(_54, 2), 0),_11.4];
_31 = _4 as i64;
_46 = [_1,_1,_48,_1,_48,_1];
_52 = (Field::<bool>(Variant(_6, 1), 0),);
match _4 {
6878624552427170751 => bb32,
_ => bb31
}
}
bb31 = {
(*_25) = [14996_u16,41853_u16,35419_u16,61872_u16,15653_u16,35065_u16,23404_u16,57543_u16];
_3 = !_27.1;
SetDiscriminant(_36, 0);
_34 = -_37;
_5 = _11.4;
_43 = core::ptr::addr_of_mut!((*_10));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).3 = core::ptr::addr_of_mut!(_35);
_33 = _27;
_11.2 = _11.3;
_29 = _1 as f64;
_27.0 = !_33.0;
place!(Field::<u64>(Variant(_6, 1), 2)) = _4 as u64;
_22 = _4 as f64;
_22 = _15 as f64;
_26 = _35 * _35;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).3 = core::ptr::addr_of_mut!(_35);
_11.3 = _11.2 * _11.2;
_34 = _1 as f64;
_33.3.2 = _27.3.2;
_44.3.1 = _34 == _22;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).0 = core::ptr::addr_of!(_28);
_36 = Adt54::Variant2 { fld0: _5 };
Goto(bb26)
}
bb32 = {
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.2 ^ _11.2;
_48 = -_1;
_9 = _51;
_33.3 = (_27.3.0, _52.0, _44.3.2);
_60 = _27.3.0.0;
_17 = [Field::<u64>(Variant(_6, 1), 2)];
_55.0 = [_3,_44.3.0.0,_60];
_44.3.2 = _27.3.2 * _33.3.2;
_11.4 = Field::<char>(Variant(_54, 2), 0);
_53 = [_1,_1,_48,_1,_48,_48];
_62.1 = _44.3.2;
_59 = !48631_u16;
place!(Field::<char>(Variant(_54, 2), 0)) = _5;
_62.3 = Field::<bool>(Variant(_6, 1), 0) as u64;
_8 = [_2,_2,_16,_16,_16];
_63.2 = !_24;
_62.0 = _11.0;
_55.1 = core::ptr::addr_of!(_28);
_47 = _22 * _37;
Goto(bb33)
}
bb33 = {
_31 = _24 ^ _24;
_57 = _11.4;
SetDiscriminant(_6, 1);
_58.0 = _33.1;
_23 = -_63.2;
_58.0 = _44.3.0.0;
_63.1 = _11;
_21 = _8;
_33.2 = core::ptr::addr_of_mut!(_59);
match _4 {
0 => bb1,
1 => bb19,
2 => bb32,
3 => bb26,
4 => bb12,
5 => bb6,
6 => bb34,
6878624552427170751 => bb36,
_ => bb35
}
}
bb34 = {
_1 = 30422_i16;
_20 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_2,_8[_4],_8[_4]];
_11.1 = _20 as u8;
_21 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4],_8[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4]];
_13 = [_9,_7,_7,_9];
_7 = _9;
_22 = 127_isize as f64;
_18 = [_4,_4,_4];
_24 = (-43775642749400216_i64) ^ (-9021490623666393231_i64);
_8 = _21;
Goto(bb10)
}
bb35 = {
(*_25) = [14996_u16,41853_u16,35419_u16,61872_u16,15653_u16,35065_u16,23404_u16,57543_u16];
_3 = !_27.1;
SetDiscriminant(_36, 0);
_34 = -_37;
_5 = _11.4;
_43 = core::ptr::addr_of_mut!((*_10));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).3 = core::ptr::addr_of_mut!(_35);
_33 = _27;
_11.2 = _11.3;
_29 = _1 as f64;
_27.0 = !_33.0;
place!(Field::<u64>(Variant(_6, 1), 2)) = _4 as u64;
_22 = _4 as f64;
_22 = _15 as f64;
_26 = _35 * _35;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).3 = core::ptr::addr_of_mut!(_35);
_11.3 = _11.2 * _11.2;
_34 = _1 as f64;
_33.3.2 = _27.3.2;
_44.3.1 = _34 == _22;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).0 = core::ptr::addr_of!(_28);
_36 = Adt54::Variant2 { fld0: _5 };
Goto(bb26)
}
bb36 = {
_9 = !_7;
_44.2 = core::ptr::addr_of_mut!(_41);
_13 = [_9,_51,_7,_51];
_34 = _16 as f64;
_56 = _47;
_15 = !_33.0;
place!(Field::<char>(Variant(_54, 2), 0)) = _57;
_55.1 = core::ptr::addr_of!((*_25));
_33.3 = (_44.3.0, _52.0, _27.3.2);
_55.1 = core::ptr::addr_of!(_28);
_33.1 = _27.3.0.0;
_33.3.0 = _58;
_44 = (_33.0, _3, _33.2, _33.3);
_33.3.0 = (_3,);
_55.2 = core::ptr::addr_of!((*_25));
_11.2 = _34 as u64;
_13 = [_9,_51,_9,_51];
match _4 {
0 => bb29,
1 => bb37,
2 => bb38,
3 => bb39,
4 => bb40,
5 => bb41,
6878624552427170751 => bb43,
_ => bb42
}
}
bb37 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb38 = {
_2 = Field::<bool>(Variant(_6, 1), 0) as i32;
_30 = [_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4]];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_2,_2,_2,_16];
_17 = [_11.2];
_1 = (-51_i8) as i16;
_32[_4] = (-47_i8);
SetDiscriminant(_6, 1);
_32 = [88_i8,(-65_i8),(-89_i8),(-2_i8),65_i8];
_33.3 = (_27.3.0, _12, _11.1);
_27.3.1 = _12;
_16 = _23 as i32;
_33.3.0.0 = _9 as u32;
_16 = _27.3.2 as i32;
_2 = _21[_4];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_21[_4],_16,_8[_4],_2,_2];
_19[_4] = _11.4;
_25 = core::ptr::addr_of_mut!(_30);
Goto(bb23)
}
bb39 = {
_7 = -122035898792810538184708000475356332442_i128;
_3 = _4 as u32;
_6 = Adt58::Variant1 { fld0: true,fld1: _8,fld2: 18403256625120867330_u64 };
place!(Field::<bool>(Variant(_6, 1), 0)) = true;
place!(Field::<u64>(Variant(_6, 1), 2)) = Field::<bool>(Variant(_6, 1), 0) as u64;
_8 = [_2,_2,_2,_2,_2];
_2 = 823667047_i32;
_4 = 3534645772244839645_usize;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _8;
_6 = Adt58::Variant1 { fld0: false,fld1: _8,fld2: 2067957810852391063_u64 };
_8 = [_2,_2,_2,_2,_2];
_4 = 2_usize;
_11.1 = !59_u8;
_11.2 = 13078047003911501322_u64;
match _11.2 {
0 => bb1,
1 => bb2,
13078047003911501322 => bb5,
_ => bb4
}
}
bb40 = {
_5 = '\u{69197}';
_1 = 16631_i16;
_3 = 506456225_u32 | 57421306_u32;
_2 = (-60951337_i32) * 387463797_i32;
_2 = 1545202617_i32 >> _3;
_5 = '\u{850e7}';
_3 = 1174776595_u32 << _2;
_7 = !130923476375037660254544337365608421146_i128;
_1 = (-98_isize) as i16;
_5 = '\u{81c1}';
_4 = 9223372036854775807_isize as usize;
_4 = 1_usize;
_2 = -(-527531284_i32);
_2 = 1222002983_i32 | 398233390_i32;
_4 = 5_usize ^ 2_usize;
_2 = 1879582384_i32;
_2 = 1080912332_i32 | 365948519_i32;
_4 = 7_usize;
_2 = (-108480772_i32);
_2 = (-1726103950_i32) | 1808571534_i32;
_7 = _1 as i128;
_1 = (-1_i8) as i16;
_5 = '\u{76aed}';
_7 = (-47313767662346042470020161404573746993_i128) * (-33268882605030914183407539975806686067_i128);
_4 = !12066152468689160159_usize;
_5 = '\u{18963}';
Goto(bb2)
}
bb41 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb42 = {
_1 = 30422_i16;
_20 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_2,_8[_4],_8[_4]];
_11.1 = _20 as u8;
_21 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4],_8[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4]];
_13 = [_9,_7,_7,_9];
_7 = _9;
_22 = 127_isize as f64;
_18 = [_4,_4,_4];
_24 = (-43775642749400216_i64) ^ (-9021490623666393231_i64);
_8 = _21;
Goto(bb10)
}
bb43 = {
_62.1 = _27.3.2 ^ _63.1.1;
_62.4 = _5;
Call(_63.0 = core::intrinsics::arith_offset(_55.2, (-9223372036854775808_isize)), bb44, UnwindUnreachable())
}
bb44 = {
_5 = Field::<char>(Variant(_36, 2), 0);
_41 = _59 & _59;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _21;
_66 = _22;
_65.0 = _33.1 - _3;
_63.1.4 = _62.4;
_11.2 = _4 as u64;
_48 = _1;
_69 = _13;
_41 = !_59;
_44.3.1 = !_42;
_27.3.0 = (_60,);
_68 = _14 * _14;
_44.3.2 = _62.1 & _63.1.1;
_14 = _62.1 as f32;
Goto(bb45)
}
bb45 = {
_44.1 = _33.1 * _33.3.0.0;
match _4 {
0 => bb27,
1 => bb46,
2 => bb47,
3 => bb48,
6878624552427170751 => bb50,
_ => bb49
}
}
bb46 = {
_1 = 30422_i16;
_20 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_2,_8[_4],_8[_4]];
_11.1 = _20 as u8;
_21 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4],_8[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4]];
_13 = [_9,_7,_7,_9];
_7 = _9;
_22 = 127_isize as f64;
_18 = [_4,_4,_4];
_24 = (-43775642749400216_i64) ^ (-9021490623666393231_i64);
_8 = _21;
Goto(bb10)
}
bb47 = {
_18[_4] = !_4;
_19[_4] = _11.4;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.3 | _11.3;
_18[_4] = !_4;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_8[_4],_8[_4],_21[_4],_21[_4]];
_19[_4] = _5;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_21[_4],_8[_4],_8[_4],_2];
_22 = _26 as f64;
_27.3.0.0 = _3;
_28 = [2525_u16,62617_u16,46600_u16,62710_u16,34828_u16,39863_u16,40235_u16,6618_u16];
_24 = -6721022980673239403_i64;
_26 = _28[_4] as isize;
_27.3.2 = !_11.1;
_3 = !_27.3.0.0;
_17 = [_11.3];
_28 = [5999_u16,30821_u16,21514_u16,44139_u16,51125_u16,47172_u16,60184_u16,28828_u16];
_13 = [_7,_7,_7,_9];
_27.1 = _27.3.0.0;
_27.1 = _3 ^ _27.3.0.0;
_30 = _28;
_13 = [_7,_7,_9,_9];
_19[_4] = _11.4;
_2 = _26 as i32;
_27.3.0 = (_27.1,);
_11.3 = _14 as u64;
match _30[_4] {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
21514 => bb20,
_ => bb19
}
}
bb48 = {
_1 = 30422_i16;
_20 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_2,_2,_8[_4],_8[_4]];
_11.1 = _20 as u8;
_21 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4],_8[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_8[_4]];
_13 = [_9,_7,_7,_9];
_7 = _9;
_22 = 127_isize as f64;
_18 = [_4,_4,_4];
_24 = (-43775642749400216_i64) ^ (-9021490623666393231_i64);
_8 = _21;
Goto(bb10)
}
bb49 = {
_34 = _22;
_37 = _22 + _34;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_16,_2,_2,_2];
_33.1 = _14 as u32;
_12 = !_27.3.1;
(*_10) = core::ptr::addr_of_mut!(_41);
SetDiscriminant(_6, 1);
_27.3 = _33.3;
_35 = _26;
_33.2 = core::ptr::addr_of_mut!(_41);
_38 = [_5,_11.4,_5,_11.4,_5,_11.4,_11.4,_5];
_34 = _22 + _37;
_27.3.2 = !_33.3.2;
(*_25) = _28;
_27.3.0.0 = _33.1 ^ _33.1;
_7 = _9 + _9;
_33.1 = _27.3.0.0 ^ _33.3.0.0;
_5 = _11.4;
_33.3.0.0 = _35 as u32;
_38 = [_5,_5,_11.4,_5,_11.4,_5,_5,_5];
_36 = Adt54::Variant2 { fld0: _11.4 };
place!(Field::<bool>(Variant(_6, 1), 0)) = _12;
Goto(bb25)
}
bb50 = {
_44.1 = !_33.1;
_42 = !_52.0;
_9 = _7;
_44.3.2 = !_33.3.2;
_44.3.0 = _65;
_21 = [_16,_2,_16,_16,_16];
_39 = [_48,_1,_48,_48,_48,_48];
_62.2 = _63.1.2;
_63.1.1 = _34 as u8;
_33.3.2 = !_62.1;
match _4 {
0 => bb36,
1 => bb15,
2 => bb40,
3 => bb19,
4 => bb9,
5 => bb14,
6878624552427170751 => bb52,
_ => bb51
}
}
bb51 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb52 = {
place!(Field::<bool>(Variant(_6, 1), 0)) = _12 > _52.0;
_46 = [_1,_48,_48,_1,_48,_48];
_11 = (_63.1.0, _63.1.1, _62.2, _62.3, _62.4);
_63.1 = (_11.0, _27.3.2, _11.3, _11.3, _62.4);
_71 = _26 * _26;
_27.3.0.0 = _60;
_63.3 = core::ptr::addr_of_mut!(_35);
_27.3 = (_33.3.0, _52.0, _62.1);
_67 = _57;
_44.0 = _27.0;
(*_10) = _33.2;
match _4 {
0 => bb8,
1 => bb28,
2 => bb23,
3 => bb53,
6878624552427170751 => bb55,
_ => bb54
}
}
bb53 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb54 = {
_2 = Field::<bool>(Variant(_6, 1), 0) as i32;
_30 = [_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4]];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_2,_2,_2,_16];
_17 = [_11.2];
_1 = (-51_i8) as i16;
_32[_4] = (-47_i8);
SetDiscriminant(_6, 1);
_32 = [88_i8,(-65_i8),(-89_i8),(-2_i8),65_i8];
_33.3 = (_27.3.0, _12, _11.1);
_27.3.1 = _12;
_16 = _23 as i32;
_33.3.0.0 = _9 as u32;
_16 = _27.3.2 as i32;
_2 = _21[_4];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_21[_4],_16,_8[_4],_2,_2];
_19[_4] = _11.4;
_25 = core::ptr::addr_of_mut!(_30);
Goto(bb23)
}
bb55 = {
_33.1 = _27.3.2 as u32;
place!(Field::<char>(Variant(_36, 2), 0)) = Field::<char>(Variant(_54, 2), 0);
_46 = [_1,_48,_1,_48,_48,_1];
SetDiscriminant(_54, 0);
_35 = _11.3 as isize;
_74.3 = _63.3;
_27.3.0 = _65;
_27.3.0.0 = _27.3.1 as u32;
_11.4 = Field::<char>(Variant(_36, 2), 0);
_74.1 = _59 | _41;
_55.0 = [_27.3.0.0,_65.0,_27.3.0.0];
_33.3.1 = _22 > _34;
_39 = _46;
_54 = Move(_36);
_14 = _68;
_42 = !_33.3.1;
_44.3.2 = !_33.3.2;
_61 = !_27.3.2;
(*_10) = _27.2;
SetDiscriminant(_54, 1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 1), 2)).1.3 = _27.3.2 as u64;
Call(_27.1 = core::intrinsics::transmute(_27.3.0.0), bb56, UnwindUnreachable())
}
bb56 = {
_13 = [_51,_51,_9,_51];
_63.1.3 = _11.3;
_55.0 = [_27.3.0.0,_27.3.0.0,_27.3.0.0];
_44.2 = _33.2;
_70 = [_51,_51,_51,_51];
_51 = -_7;
_33.0 = _27.1 as u128;
_49 = _5;
(*_10) = core::ptr::addr_of_mut!(_59);
_50 = _44.3.2;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 1), 2)).1.2 = _48 as u64;
_77 = !_52.0;
_54 = Adt54::Variant0 { fld0: _63 };
_44.3.0.0 = _4 as u32;
_44.3.1 = !_12;
_36 = Adt54::Variant2 { fld0: _49 };
_33.3.2 = !_11.1;
_43 = core::ptr::addr_of_mut!(_33.2);
_33.3.0.0 = !_27.3.0.0;
_9 = _74.1 as i128;
_55.1 = core::ptr::addr_of!(_28);
match _4 {
0 => bb57,
6878624552427170751 => bb59,
_ => bb58
}
}
bb57 = {
_9 = !_7;
_44.2 = core::ptr::addr_of_mut!(_41);
_13 = [_9,_51,_7,_51];
_34 = _16 as f64;
_56 = _47;
_15 = !_33.0;
place!(Field::<char>(Variant(_54, 2), 0)) = _57;
_55.1 = core::ptr::addr_of!((*_25));
_33.3 = (_44.3.0, _52.0, _27.3.2);
_55.1 = core::ptr::addr_of!(_28);
_33.1 = _27.3.0.0;
_33.3.0 = _58;
_44 = (_33.0, _3, _33.2, _33.3);
_33.3.0 = (_3,);
_55.2 = core::ptr::addr_of!((*_25));
_11.2 = _34 as u64;
_13 = [_9,_51,_9,_51];
match _4 {
0 => bb29,
1 => bb37,
2 => bb38,
3 => bb39,
4 => bb40,
5 => bb41,
6878624552427170751 => bb43,
_ => bb42
}
}
bb58 = {
_2 = Field::<bool>(Variant(_6, 1), 0) as i32;
_30 = [_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4],_28[_4]];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_2,_2,_2,_16];
_17 = [_11.2];
_1 = (-51_i8) as i16;
_32[_4] = (-47_i8);
SetDiscriminant(_6, 1);
_32 = [88_i8,(-65_i8),(-89_i8),(-2_i8),65_i8];
_33.3 = (_27.3.0, _12, _11.1);
_27.3.1 = _12;
_16 = _23 as i32;
_33.3.0.0 = _9 as u32;
_16 = _27.3.2 as i32;
_2 = _21[_4];
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_21[_4],_16,_8[_4],_2,_2];
_19[_4] = _11.4;
_25 = core::ptr::addr_of_mut!(_30);
Goto(bb23)
}
bb59 = {
_44.1 = _27.3.0.0 ^ _27.1;
_9 = _33.0 as i128;
_61 = _33.3.2 ^ _11.1;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_16,_2,_16,_2,_16];
(*_43) = core::ptr::addr_of_mut!(_41);
_33.3.1 = _52.0 & Field::<bool>(Variant(_6, 1), 0);
_24 = !_23;
_76 = _18;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).1 = (_11.0, _44.3.2, _11.3, _63.1.3, _67);
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_2,_2,_2,_16,_16];
_65 = (_27.1,);
_16 = !_2;
_75 = Move(_54);
_27.3 = (_33.3.0, _33.3.1, _61);
_33.3.0.0 = !_65.0;
_75 = Adt54::Variant2 { fld0: Field::<char>(Variant(_36, 2), 0) };
_74.1 = _41 >> _23;
_23 = _31 * _31;
Call(_70 = core::intrinsics::transmute(_69), bb60, UnwindUnreachable())
}
bb60 = {
SetDiscriminant(_36, 2);
_36 = Adt54::Variant0 { fld0: _63 };
_74.0 = _35 as i16;
_11.0 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0).1.0;
_68 = _14;
_27.3.1 = _12;
_79.2 = _63.2 as u8;
_52.0 = _33.3.1;
_19 = [_49,_67,_11.4,_11.4,_5,_11.4];
_79.0.0 = !_33.3.0.0;
_56 = _34 + _34;
_35 = !_71;
Goto(bb61)
}
bb61 = {
_11.3 = _33.3.2 as u64;
_44.3.0.0 = _79.0.0 + _65.0;
_55.2 = core::ptr::addr_of!((*_25));
Goto(bb62)
}
bb62 = {
_45 = _32;
_11.4 = _49;
_38 = [_49,_5,_63.1.4,_5,_62.4,_62.4,_63.1.4,_63.1.4];
_8 = [_2,_16,_2,_2,_16];
_44.0 = _33.0;
_71 = _35 << Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0).1.2;
match _4 {
0 => bb15,
1 => bb8,
2 => bb47,
3 => bb36,
4 => bb37,
5 => bb63,
6878624552427170751 => bb65,
_ => bb64
}
}
bb63 = {
_33.1 = _27.3.2 as u32;
place!(Field::<char>(Variant(_36, 2), 0)) = Field::<char>(Variant(_54, 2), 0);
_46 = [_1,_48,_1,_48,_48,_1];
SetDiscriminant(_54, 0);
_35 = _11.3 as isize;
_74.3 = _63.3;
_27.3.0 = _65;
_27.3.0.0 = _27.3.1 as u32;
_11.4 = Field::<char>(Variant(_36, 2), 0);
_74.1 = _59 | _41;
_55.0 = [_27.3.0.0,_65.0,_27.3.0.0];
_33.3.1 = _22 > _34;
_39 = _46;
_54 = Move(_36);
_14 = _68;
_42 = !_33.3.1;
_44.3.2 = !_33.3.2;
_61 = !_27.3.2;
(*_10) = _27.2;
SetDiscriminant(_54, 1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 1), 2)).1.3 = _27.3.2 as u64;
Call(_27.1 = core::intrinsics::transmute(_27.3.0.0), bb56, UnwindUnreachable())
}
bb64 = {
_16 = _34 as i32;
_34 = _37 + _22;
_3 = _51 as u32;
_23 = -_31;
_4 = 6878624552427170751_usize;
_42 = !Field::<bool>(Variant(_6, 1), 0);
_5 = Field::<char>(Variant(_54, 2), 0);
_44.3 = (_27.3.0, _42, _27.3.2);
Goto(bb30)
}
bb65 = {
place!(Field::<u64>(Variant(_6, 1), 2)) = _62.3 >> _23;
_25 = core::ptr::addr_of_mut!((*_25));
_9 = _49 as i128;
_17 = [Field::<u64>(Variant(_6, 1), 2)];
_79.0 = _27.3.0;
_63.2 = -Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0).2;
_63.1.2 = _62.1 as u64;
_34 = -_56;
_46 = _39;
_13 = [_7,_7,_51,_9];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_36, 0), 0)).1.1 = _11.4 as u8;
_63.3 = _74.3;
_44.3.2 = _4 as u8;
_78 = _19;
_10 = core::ptr::addr_of_mut!(_33.2);
_63.1.2 = !Field::<u64>(Variant(_6, 1), 2);
_11.1 = _27.3.2 | _27.3.2;
_52 = (_27.3.1,);
_44.3.1 = _52.0;
_27.3.0.0 = _33.3.0.0;
place!(Field::<bool>(Variant(_6, 1), 0)) = _62.2 < _62.3;
(*_10) = core::ptr::addr_of_mut!(_41);
Goto(bb66)
}
bb66 = {
_33.2 = core::ptr::addr_of_mut!(_59);
_19 = _78;
_76 = [_4,_4,_4];
_73 = _11.1 >> _33.0;
_25 = core::ptr::addr_of_mut!(_28);
_80 = Move(_36);
_37 = -_56;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)) = _63;
_27.3.0.0 = !_65.0;
Goto(bb67)
}
bb67 = {
_58 = (_27.3.0.0,);
_62 = (_63.1.0, _33.3.2, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.2, Field::<u64>(Variant(_6, 1), 2), Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.4);
Goto(bb68)
}
bb68 = {
_46 = _53;
_11.3 = !_62.2;
_44.2 = core::ptr::addr_of_mut!(_74.1);
_19 = _78;
_79.2 = _11.1;
_68 = _14;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1 = (_62.0, _79.2, _11.3, Field::<u64>(Variant(_6, 1), 2), _57);
_84.1 = _28;
(*_10) = _44.2;
_65 = (_44.1,);
_72 = _23 as f32;
_30 = [_74.1,_74.1,_74.1,_74.1,_59,_74.1,_74.1,_74.1];
SetDiscriminant(_6, 0);
_57 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.4;
_58.0 = _27.1;
_60 = _79.0.0 + _44.1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1.1 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.1 * _73;
_51 = _9 << _62.3;
_60 = !_65.0;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).2 = _31 + _31;
match _4 {
0 => bb69,
6878624552427170751 => bb71,
_ => bb70
}
}
bb69 = {
_18[_4] = !_4;
_19[_4] = _11.4;
place!(Field::<u64>(Variant(_6, 1), 2)) = _11.3 | _11.3;
_18[_4] = !_4;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_8[_4],_8[_4],_21[_4],_21[_4]];
_19[_4] = _5;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = [_8[_4],_21[_4],_8[_4],_8[_4],_2];
_22 = _26 as f64;
_27.3.0.0 = _3;
_28 = [2525_u16,62617_u16,46600_u16,62710_u16,34828_u16,39863_u16,40235_u16,6618_u16];
_24 = -6721022980673239403_i64;
_26 = _28[_4] as isize;
_27.3.2 = !_11.1;
_3 = !_27.3.0.0;
_17 = [_11.3];
_28 = [5999_u16,30821_u16,21514_u16,44139_u16,51125_u16,47172_u16,60184_u16,28828_u16];
_13 = [_7,_7,_7,_9];
_27.1 = _27.3.0.0;
_27.1 = _3 ^ _27.3.0.0;
_30 = _28;
_13 = [_7,_7,_9,_9];
_19[_4] = _11.4;
_2 = _26 as i32;
_27.3.0 = (_27.1,);
_11.3 = _14 as u64;
match _30[_4] {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
21514 => bb20,
_ => bb19
}
}
bb70 = {
_1 = 20061_i16;
Call(_8 = fn2(_2, _1, _5, _7, _5), bb3, UnwindUnreachable())
}
bb71 = {
_12 = _52.0;
_6 = Adt58::Variant1 { fld0: _77,fld1: _21,fld2: _62.3 };
_18 = [_4,_4,_4];
_79.1 = _77 & Field::<bool>(Variant(_6, 1), 0);
_43 = _10;
_44.3 = (_65, Field::<bool>(Variant(_6, 1), 0), _73);
_62.0 = core::ptr::addr_of_mut!(_17);
_22 = -_37;
_55.2 = core::ptr::addr_of!(_30);
_37 = _22 * _22;
_84 = (_69, (*_25));
_83 = _74.0 as f64;
_14 = -_72;
_62.0 = _11.0;
_60 = !_33.3.0.0;
_33.1 = !_44.3.0.0;
_88 = _60 + _33.1;
Goto(bb72)
}
bb72 = {
_75 = Adt54::Variant2 { fld0: _57 };
_1 = _79.1 as i16;
_86.1 = [_74.1,_74.1,_74.1,_74.1,_74.1,_74.1,_74.1,_74.1];
_57 = _62.4;
_16 = _33.0 as i32;
_23 = _63.2 >> _24;
_79.2 = _65.0 as u8;
_71 = _35 | _35;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1 = (_63.1.0, _11.1, _63.1.2, _62.2, _49);
_9 = _27.3.2 as i128;
_55.2 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).0;
_44.3 = (_27.3.0, Field::<bool>(Variant(_6, 1), 0), Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.1);
match _4 {
0 => bb38,
1 => bb5,
2 => bb73,
6878624552427170751 => bb75,
_ => bb74
}
}
bb73 = {
_44.3.2 = _11.1 * _27.3.2;
_54 = Move(_36);
_51 = _7 | _9;
_42 = !Field::<bool>(Variant(_6, 1), 0);
_46 = [_1,_1,_1,_1,_1,_1];
_25 = core::ptr::addr_of_mut!((*_25));
_10 = core::ptr::addr_of_mut!(_44.2);
_33.0 = _15;
place!(Field::<[i32; 5]>(Variant(_6, 1), 1)) = _21;
_42 = !Field::<bool>(Variant(_6, 1), 0);
_44.3 = _27.3;
_27.3.2 = _11.1;
_40 = _11.2;
_11.3 = _40 | _11.2;
_42 = Field::<bool>(Variant(_6, 1), 0);
_29 = _34;
_26 = !_35;
_14 = _51 as f32;
_30 = [35515_u16,2412_u16,30619_u16,57034_u16,3476_u16,44540_u16,13983_u16,45811_u16];
_32 = [67_i8,(-108_i8),(-28_i8),(-58_i8),114_i8];
_33.3.1 = _42;
Goto(bb28)
}
bb74 = {
_44.1 = _33.1 * _33.3.0.0;
match _4 {
0 => bb27,
1 => bb46,
2 => bb47,
3 => bb48,
6878624552427170751 => bb50,
_ => bb49
}
}
bb75 = {
_59 = _74.1 + _74.1;
_57 = _62.4;
SetDiscriminant(_80, 0);
_78 = _19;
_19 = [_49,_62.4,Field::<char>(Variant(_75, 2), 0),_57,_67,_63.1.4];
_74.2 = -_1;
_64 = Adt51::Variant1 { fld0: _74,fld1: (*_43),fld2: _59,fld3: (-114_i8),fld4: _4,fld5: _52,fld6: _83,fld7: _86.1 };
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_64, 1), 0)).2 = !_1;
_16 = _2;
_20 = _33.0 >> _74.0;
_18 = [_4,_4,Field::<usize>(Variant(_64, 1), 4)];
_78 = _19;
_42 = _77 ^ _33.3.1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.2 = !_63.1.2;
SetDiscriminant(_6, 0);
_87 = !_59;
_24 = -_23;
place!(Field::<i8>(Variant(_64, 1), 3)) = !(-121_i8);
_93 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.2 == _62.3;
_17 = [_63.1.2];
SetDiscriminant(_64, 0);
_11.2 = _63.1.2 & _63.1.2;
_94.1 = [_87,_59,_74.1,_74.1,_59,_59,_87,_59];
Goto(bb76)
}
bb76 = {
_20 = _44.0;
_66 = _37 * _22;
place!(Field::<*mut [char; 8]>(Variant(_64, 0), 5)) = core::ptr::addr_of_mut!(_38);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_64, 0), 6)));
_82 = _33.3.0;
_101.1 = _74.1 << _65.0;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1.4 = _49;
(*_43) = core::ptr::addr_of_mut!(_87);
_74.3 = core::ptr::addr_of_mut!(_100);
_101.1 = !_59;
Goto(bb77)
}
bb77 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)) = (_55.2, _11, _23, _63.3);
_33.3.2 = _11.1 - _44.3.2;
_96 = _45;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_64, 0), 6)));
_92 = _71 * _35;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).2 = _101.1 as i64;
_33.0 = _44.3.2 as u128;
_33.3.2 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.1 >> _87;
_79.0.0 = _33.1 + _27.1;
(*_10) = core::ptr::addr_of_mut!(_74.1);
_46 = [_74.2,_1,_74.0,_1,_74.2,_74.2];
_34 = -_66;
_86.0 = _70;
_27.3.0.0 = !_82.0;
_16 = _2 << _33.1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1 = _63.1;
_65.0 = !_27.1;
SetDiscriminant(_80, 0);
_11.4 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.0 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.0;
_109 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4;
_82 = _44.3.0;
_105 = [_74.0,_74.2,_74.0,_74.2,_74.0,_74.2];
match _4 {
0 => bb3,
6878624552427170751 => bb79,
_ => bb78
}
}
bb78 = {
_21[_4] = _8[_4];
_3 = 3791540084_u32;
_8 = [Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],Field::<[i32; 5]>(Variant(_6, 1), 1)[_4],_21[_4],_2,_2];
SetDiscriminant(_6, 1);
_12 = true & true;
Goto(bb11)
}
bb79 = {
_94 = _84;
_43 = core::ptr::addr_of_mut!((*_10));
Goto(bb80)
}
bb80 = {
_91 = _16 + _16;
_6 = Adt58::Variant1 { fld0: _79.1,fld1: _21,fld2: _62.3 };
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.4 = _62.4;
_101.3 = core::ptr::addr_of_mut!(_71);
_77 = !_93;
_33.3.1 = _77;
_108 = Adt55::Variant2 { fld0: _76,fld1: _11.1,fld2: _27.3 };
_97 = [_11.4,_62.4,_67,_63.1.4,_62.4,_11.4];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).2 = _74.0 as i64;
_63.1 = (Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.0, _33.3.2, _11.3, _62.2, Field::<char>(Variant(_75, 2), 0));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.4 = _62.4;
_94.0 = _69;
_55.0 = [_27.3.0.0,_27.3.0.0,_27.3.0.0];
place!(Field::<[u64; 1]>(Variant(_64, 0), 6)) = [_11.2];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.3 = _57 as u64;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).3 = core::ptr::addr_of_mut!(_35);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.3 = _74.1 as u64;
_44.3.2 = _63.1.1 * _63.1.1;
_94.0 = [_51,_51,_51,_51];
_89 = Adt52::Variant0 { fld0: _32,fld1: _78,fld2: _58.0,fld3: _22 };
_3 = _44.1 | _33.3.0.0;
place!(Field::<*mut [char; 8]>(Variant(_64, 0), 5)) = core::ptr::addr_of_mut!(_38);
_2 = _91 >> _16;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).0 = core::ptr::addr_of!(place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)).1);
Goto(bb81)
}
bb81 = {
place!(Field::<(bool,)>(Variant(_64, 0), 4)).0 = Field::<((u32,), bool, u8)>(Variant(_108, 2), 2).1 & Field::<((u32,), bool, u8)>(Variant(_108, 2), 2).1;
_19 = Field::<[char; 6]>(Variant(_89, 0), 1);
place!(Field::<bool>(Variant(_6, 1), 0)) = _33.3.1;
_30 = [_87,_74.1,_87,_74.1,_74.1,_59,_74.1,_101.1];
_58.0 = _4 as u32;
_4 = 6_usize | 6374318776780597101_usize;
_63.1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_64, 0), 6)));
_71 = _87 as isize;
_107 = Adt49::Variant2 { fld0: _55,fld1: _32,fld2: _78 };
_58 = (_3,);
_50 = _44.3.2 + _63.1.1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.3 = _62.3 | Field::<u64>(Variant(_6, 1), 2);
_98 = -_56;
_40 = _11.3;
_63.1.0 = core::ptr::addr_of_mut!(_17);
_27.1 = _65.0;
_70 = _94.0;
Goto(bb82)
}
bb82 = {
_62.3 = Field::<((u32,), bool, u8)>(Variant(_108, 2), 2).2 as u64;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.1 = !_63.1.1;
_90 = _72 - _72;
(*_25) = [_59,_87,_59,_59,_101.1,_101.1,_87,_59];
_68 = -_90;
_29 = _68 as f64;
place!(Field::<(bool,)>(Variant(_64, 0), 4)).0 = _44.3.1 < _33.3.1;
_53 = [_1,_74.2,_1,_74.0,_1,_74.2];
place!(Field::<((u32,), bool, u8)>(Variant(_108, 2), 2)).2 = _27.3.2;
place!(Field::<((u32,), bool, u8)>(Variant(_108, 2), 2)).1 = _77;
_94.1 = [_59,_74.1,_59,_101.1,_74.1,_101.1,_101.1,_59];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).3 = core::ptr::addr_of_mut!(_100);
_95 = core::ptr::addr_of!(_59);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.2 = _62.2 - Field::<u64>(Variant(_6, 1), 2);
Goto(bb83)
}
bb83 = {
_113 = !_92;
_1 = (-98_i8) as i16;
_85 = _44.1 as i128;
_104 = Adt64::Variant1 { fld0: Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_107, 2), 0),fld1: _76,fld2: _94.1 };
_109 = _57;
_44.3 = (_79.0, Field::<(bool,)>(Variant(_64, 0), 4).0, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).1.1);
_55.1 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).0;
Goto(bb84)
}
bb84 = {
_118 = _4 & _4;
_86.1 = Field::<[u16; 8]>(Variant(_104, 1), 2);
_26 = _113;
_24 = _63.2 ^ _63.2;
_52 = (_42,);
_115 = _86.1;
_119 = !Field::<((u32,), bool, u8)>(Variant(_108, 2), 2).1;
Goto(bb85)
}
bb85 = {
_44.3.1 = Field::<bool>(Variant(_6, 1), 0) == _42;
(*_25) = _94.1;
_50 = _27.3.2;
_27.3 = (Field::<((u32,), bool, u8)>(Variant(_108, 2), 2).0, _44.3.1, _33.3.2);
_62.1 = _71 as u8;
_27.2 = (*_10);
place!(Field::<((u32,), bool, u8)>(Variant(_108, 2), 2)).0 = _44.3.0;
place!(Field::<[i8; 5]>(Variant(_107, 2), 1)) = [12_i8,114_i8,110_i8,(-7_i8),97_i8];
_63.3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).3;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.3 = _33.1 as u64;
_33.3.0 = (_58.0,);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)).1.4 = _49;
_34 = -_37;
Goto(bb86)
}
bb86 = {
SetDiscriminant(_6, 1);
place!(Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_104, 1), 0)) = (_55.0, Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_107, 2), 0).2, _55.1);
SetDiscriminant(_108, 1);
place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)).1 = _30;
_19 = [_63.1.4,_109,_11.4,_57,Field::<char>(Variant(_75, 2), 0),_62.4];
place!(Field::<([i128; 4], [u16; 8])>(Variant(_108, 1), 2)).1 = [_74.1,_74.1,_74.1,_87,_101.1,_101.1,(*_95),(*_95)];
_11.2 = !_11.3;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_108, 1), 2)).0 = [_51,_51,_9,_51];
Goto(bb87)
}
bb87 = {
_12 = _27.3.1;
place!(Field::<i8>(Variant(_108, 1), 3)) = !28_i8;
SetDiscriminant(_89, 2);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0)) = (Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).0, _63.1, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).2, _101.3);
_73 = _27.3.2 | _79.2;
_110 = core::ptr::addr_of_mut!(_25);
_74 = (_48, (*_95), _1, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0).3);
_6 = Adt58::Variant0 { fld0: _19,fld1: _55.0,fld2: Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 0), 0),fld3: _33.0 };
Call(_72 = core::intrinsics::transmute(_79.0.0), bb88, UnwindUnreachable())
}
bb88 = {
_96 = [Field::<i8>(Variant(_108, 1), 3),Field::<i8>(Variant(_108, 1), 3),Field::<i8>(Variant(_108, 1), 3),Field::<i8>(Variant(_108, 1), 3),Field::<i8>(Variant(_108, 1), 3)];
_47 = -_22;
_30 = (*_25);
_79.0 = (_33.1,);
SetDiscriminant(_80, 1);
_41 = (*_95) << _87;
_35 = !_71;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).0 = _55.1;
_75 = Adt54::Variant1 { fld0: _20,fld1: _11.4,fld2: Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2),fld3: Field::<i8>(Variant(_108, 1), 3),fld4: _70,fld5: Field::<[u32; 3]>(Variant(_6, 0), 1),fld6: _31,fld7: _110 };
_67 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 1), 2).1.4;
_62.0 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.0;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).1.3 = Field::<i8>(Variant(_75, 1), 3) as u64;
_33.2 = _44.2;
_124 = (_52.0,);
_84.1 = [_101.1,_74.1,_41,_41,(*_95),_74.1,_101.1,_87];
_14 = _90;
_36 = Adt54::Variant2 { fld0: Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 1), 2).1.4 };
place!(Field::<i8>(Variant(_80, 1), 3)) = Field::<i8>(Variant(_75, 1), 3);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1.1 = _16 as u8;
place!(Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_107, 2), 0)) = (Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_104, 1), 0).0, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).0, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 1), 2).0);
place!(Field::<[i128; 4]>(Variant(_80, 1), 4)) = [_85,_85,_85,_51];
Call(place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 1), 2)).2 = core::intrinsics::transmute(_11.2), bb89, UnwindUnreachable())
}
bb89 = {
place!(Field::<[char; 6]>(Variant(_107, 2), 2)) = [_109,Field::<char>(Variant(_75, 1), 1),_11.4,_5,_57,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 1), 2).1.4];
_82.0 = !_44.1;
_56 = _91 as f64;
SetDiscriminant(_6, 0);
_101 = (_74.0, _59, _74.2, _63.3);
place!(Field::<[u16; 8]>(Variant(_104, 1), 2)) = [_74.1,_74.1,_41,_74.1,_74.1,(*_95),_41,_59];
_125 = _62.4;
place!(Field::<i8>(Variant(_80, 1), 3)) = Field::<i8>(Variant(_108, 1), 3);
_101.2 = _118 as i16;
place!(Field::<char>(Variant(_75, 1), 1)) = _57;
_63 = (Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_107, 2), 0).1, _62, Field::<i64>(Variant(_75, 1), 6), Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).3);
_36 = Move(_75);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1 = (_62.0, _27.3.2, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.3, _62.2, _57);
_54 = Move(_36);
_2 = _16;
SetDiscriminant(_104, 1);
place!(Field::<([i128; 4], [u16; 8])>(Variant(_89, 2), 0)) = (_70, _84.1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).1.4 = Field::<char>(Variant(_54, 1), 1);
_131 = Adt55::Variant2 { fld0: _18,fld1: _44.3.2,fld2: _79 };
_128.fld0.fld4 = _101.2;
_42 = !_93;
_113 = _51 as isize;
Goto(bb90)
}
bb90 = {
_5 = _125;
_116.0 = !_44.3.0.0;
_101.2 = _101.0 + _101.0;
place!(Field::<u128>(Variant(_80, 1), 0)) = _44.0;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_108, 1), 2)) = _84;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).1 = (_63.1.0, _61, _63.1.3, _62.3, _5);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.4 = Field::<char>(Variant(_54, 1), 1);
(*_25) = [_74.1,_101.1,(*_95),_59,_101.1,(*_95),_41,_41];
place!(Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_107, 2), 0)).1 = _55.2;
_72 = _14;
_112 = _26 ^ _113;
_106 = _116.0 as i8;
place!(Field::<*mut [char; 8]>(Variant(_64, 0), 5)) = core::ptr::addr_of_mut!(_38);
_101.1 = _41;
_60 = _33.3.0.0 ^ _82.0;
_76 = [_118,_4,_4];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 1), 2)).1.0 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).1.0;
Goto(bb91)
}
bb91 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.1 = _35 as u8;
place!(Field::<char>(Variant(_54, 1), 1)) = _125;
place!(Field::<((u32,), bool, u8)>(Variant(_131, 2), 2)).0.0 = _116.0 - _60;
_128.fld0.fld2 = _71 >> Field::<u128>(Variant(_80, 1), 0);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).2 = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 1), 2).2;
place!(Field::<char>(Variant(_80, 1), 1)) = _63.1.4;
SetDiscriminant(_131, 0);
place!(Field::<*const *mut u16>(Variant(_131, 0), 3)) = core::ptr::addr_of!((*_43));
SetDiscriminant(_54, 0);
_125 = _67;
_42 = _52.0;
_66 = _88 as f64;
_101.0 = _128.fld0.fld4 - _128.fld0.fld4;
_71 = _113 << _59;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).0 = core::ptr::addr_of!(_94.1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.2 = _11.2 | _40;
_33.3.0.0 = !_44.3.0.0;
_2 = _16;
Goto(bb92)
}
bb92 = {
_29 = _74.1 as f64;
_19 = Field::<[char; 6]>(Variant(_107, 2), 2);
place!(Field::<i16>(Variant(_131, 0), 4)) = -_101.0;
(*_110) = core::ptr::addr_of_mut!(place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)).1);
_26 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).2 as isize;
place!(Field::<i8>(Variant(_80, 1), 3)) = -_106;
_73 = _44.1 as u8;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).2 = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).2;
Goto(bb93)
}
bb93 = {
_56 = -_47;
SetDiscriminant(_107, 2);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).3 = core::ptr::addr_of_mut!(_112);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).3;
_63.2 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).2 | Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0).2;
_55.0 = [_65.0,_3,_3];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)) = (_55.2, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).1, _23, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).3);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).3 = core::ptr::addr_of_mut!(_71);
_141 = _44.3.2;
_63.1 = (Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).1.0, _44.3.2, _62.2, _11.3, _125);
_94.1 = [_74.1,_74.1,_87,_101.1,_59,(*_95),_74.1,_87];
_79.1 = _77;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).1.3 = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.2;
_149 = _63.1.4;
_148.2 = _128.fld0.fld4 | Field::<i16>(Variant(_131, 0), 4);
_136 = [_11.2];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_131, 0), 2)).3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).3;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_131, 0), 2)).1.4 = _63.1.4;
_14 = _68 + _90;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.0 = _62.0;
Goto(bb94)
}
bb94 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_64, 0), 6)));
place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)) = Field::<([i128; 4], [u16; 8])>(Variant(_108, 1), 2);
Call(place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).2 = core::intrinsics::bswap(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).2), bb95, UnwindUnreachable())
}
bb95 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_131, 0), 2)).0 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).0;
place!(Field::<[char; 6]>(Variant(_107, 2), 2)) = [_125,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4,Field::<char>(Variant(_80, 1), 1),_63.1.4,_125,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4];
place!(Field::<*const *mut u16>(Variant(_64, 0), 2)) = core::ptr::addr_of!(_142);
place!(Field::<*mut [u64; 1]>(Variant(_131, 0), 0)) = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_64, 0), 6)));
place!(Field::<[u32; 3]>(Variant(_6, 0), 1)) = [_27.1,_44.3.0.0,_79.0.0];
place!(Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_104, 1), 0)).0 = Field::<[u32; 3]>(Variant(_6, 0), 1);
(*_25) = [_87,_59,_41,_41,_87,_74.1,(*_95),_74.1];
_79.0 = _116;
_76 = [_4,_118,_4];
_106 = Field::<i8>(Variant(_80, 1), 3);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2)).1.1 = _62.1;
_29 = _34 + _34;
Goto(bb96)
}
bb96 = {
_84 = (Field::<[i128; 4]>(Variant(_80, 1), 4), Field::<([i128; 4], [u16; 8])>(Variant(_108, 1), 2).1);
_53 = _105;
Goto(bb97)
}
bb97 = {
_38 = [_125,_63.1.4,_57,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2).1.4,_149,_49,_125,_63.1.4];
_147.2 = _141;
_147 = _27.3;
_28 = [_74.1,(*_95),_41,(*_95),_41,(*_95),_59,_74.1];
_151 = Adt50::Variant1 { fld0: _63.3,fld1: _27.3,fld2: Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.2,fld3: _33.2,fld4: _84.1,fld5: Field::<*mut [char; 8]>(Variant(_64, 0), 5) };
_44.3.0.0 = _71 as u32;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).1.4 = _63.1.4;
SetDiscriminant(_151, 1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).3 = core::ptr::addr_of_mut!(_92);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.4 = _11.4;
_150.2 = _11.1;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)).1 = [_59,(*_95),_74.1,(*_95),_101.1,_74.1,_87,(*_95)];
place!(Field::<f64>(Variant(_108, 1), 1)) = -_37;
_135 = _92 | _112;
_151 = Adt50::Variant0 { fld0: _27.3.1,fld1: _63.1,fld2: _65,fld3: _20,fld4: _62.0,fld5: Field::<[u32; 3]>(Variant(_6, 0), 1) };
_154 = _148.2 as f32;
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_151, 0), 1)).0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_64, 0), 6)));
(*_110) = core::ptr::addr_of_mut!(_86.1);
place!(Field::<[i8; 5]>(Variant(_107, 2), 1)) = [Field::<i8>(Variant(_80, 1), 3),_106,Field::<i8>(Variant(_80, 1), 3),Field::<i8>(Variant(_80, 1), 3),Field::<i8>(Variant(_80, 1), 3)];
_153.fld4 = _148.2;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).2 = _63.2;
(*_95) = !_41;
_128.fld0.fld4 = _27.3.1 as i16;
_16 = _2 | _91;
Goto(bb98)
}
bb98 = {
place!(Field::<i16>(Variant(_108, 1), 4)) = Field::<i8>(Variant(_80, 1), 3) as i16;
_33.0 = _42 as u128;
_148 = (_101.2, (*_95), Field::<i16>(Variant(_131, 0), 4), _74.3);
_32 = Field::<[i8; 5]>(Variant(_107, 2), 1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).2 = -Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).2;
_25 = core::ptr::addr_of_mut!(_30);
_152.fld4 = !_128.fld0.fld4;
SetDiscriminant(_151, 2);
Goto(bb99)
}
bb99 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).3 = core::ptr::addr_of_mut!(_158);
Goto(bb100)
}
bb100 = {
_128.fld0.fld3 = Adt51::Variant0 { fld0: Field::<[char; 6]>(Variant(_107, 2), 2),fld1: _86,fld2: Field::<*const *mut u16>(Variant(_131, 0), 3),fld3: Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_80, 1), 2),fld4: _124,fld5: Field::<*mut [char; 8]>(Variant(_64, 0), 5),fld6: _17 };
_80 = Adt54::Variant2 { fld0: _63.1.4 };
_44.2 = (*_43);
_58.0 = _60;
_33.3.0.0 = _116.0;
_89 = Adt52::Variant0 { fld0: Field::<[i8; 5]>(Variant(_107, 2), 1),fld1: _19,fld2: _60,fld3: _83 };
_156.0 = -_152.fld4;
_162.0 = _40 > Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.3;
place!(Field::<*mut [char; 8]>(Variant(_128.fld0.fld3, 0), 5)) = core::ptr::addr_of_mut!(_38);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_131, 0), 2)).1.0 = core::ptr::addr_of_mut!(place!(Field::<[u64; 1]>(Variant(_128.fld0.fld3, 0), 6)));
(*_110) = core::ptr::addr_of_mut!((*_25));
SetDiscriminant(_128.fld0.fld3, 0);
_39 = _105;
place!(Field::<([u32; 3], *const [u16; 8], *const [u16; 8])>(Variant(_107, 2), 0)).2 = core::ptr::addr_of!(place!(Field::<([i128; 4], [u16; 8])>(Variant(_128.fld0.fld3, 0), 1)).1);
Goto(bb101)
}
bb101 = {
_16 = _2;
_150.0 = (_116.0,);
_110 = core::ptr::addr_of_mut!(_25);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).2 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0).2;
_11 = (_62.0, _150.2, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.2, Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.2, Field::<char>(Variant(_80, 2), 0));
_160 = [_106,_106,_106,_106,_106];
_138 = _124.0 ^ _93;
place!(Field::<(bool,)>(Variant(_128.fld0.fld3, 0), 4)) = _124;
_117 = Adt55::Variant2 { fld0: _76,fld1: _50,fld2: _44.3 };
_31 = _11.2 as i64;
_121 = [_9,_51,_85,_85];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).1.4 = _49;
_44.3.1 = Field::<(bool,)>(Variant(_64, 0), 4).0;
_118 = !_4;
_152.fld2 = !_112;
_19 = [_62.4,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0).1.4,_149,_62.4,Field::<char>(Variant(_80, 2), 0),_149];
_149 = _62.4;
_85 = _118 as i128;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1.4 = _109;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_128.fld0.fld3, 0), 3)).1.1 = !_147.2;
_127 = _44.3.0.0 * _58.0;
_168.1 = _162.0;
_161 = _84.0;
_131 = Adt55::Variant2 { fld0: _76,fld1: _33.3.2,fld2: _147 };
_50 = !_63.1.1;
Goto(bb102)
}
bb102 = {
_129 = !_124.0;
_124 = Field::<(bool,)>(Variant(_64, 0), 4);
_152.fld0 = Field::<((u32,), bool, u8)>(Variant(_117, 2), 2).0.0;
_156.0 = !_152.fld4;
_79.1 = _119;
_44.0 = !_20;
_128.fld0.fld2 = _152.fld2 - _152.fld2;
_44.3.2 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_128.fld0.fld3, 0), 3).1.1 | Field::<((u32,), bool, u8)>(Variant(_131, 2), 2).2;
_153.fld4 = -_128.fld0.fld4;
_90 = _68 + _72;
_24 = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).2;
SetDiscriminant(_117, 0);
_27.2 = core::ptr::addr_of_mut!(_101.1);
_142 = core::ptr::addr_of_mut!(_74.1);
_30 = _115;
_13 = [_51,_51,_51,_51];
_62.1 = _29 as u8;
place!(Field::<[i8; 5]>(Variant(_107, 2), 1)) = [_106,_106,_106,_106,_106];
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0)).3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).3;
_101 = _148;
_114 = _21;
Goto(bb103)
}
bb103 = {
SetDiscriminant(_131, 1);
_27 = (_33.0, _44.3.0.0, _44.2, _44.3);
place!(Field::<u32>(Variant(_89, 0), 2)) = _60;
_63.3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0).3;
_74.1 = _65.0 as u16;
_63.1.4 = Field::<char>(Variant(_80, 2), 0);
_29 = -_37;
Goto(bb104)
}
bb104 = {
place!(Field::<usize>(Variant(_117, 0), 7)) = _93 as usize;
_44.3.0.0 = _60;
place!(Field::<[u64; 1]>(Variant(_128.fld0.fld3, 0), 6)) = [_63.1.2];
_123 = _135 ^ _26;
place!(Field::<usize>(Variant(_117, 0), 7)) = _4;
SetDiscriminant(_89, 2);
_107 = Adt49::Variant3 { fld0: _21,fld1: _110,fld2: _34,fld3: _97,fld4: Field::<i16>(Variant(_108, 1), 4),fld5: _65.0 };
place!(Field::<i128>(Variant(_151, 2), 1)) = -_51;
_80 = Adt54::Variant2 { fld0: _109 };
_44.3 = _33.3;
_173 = (_124.0,);
_33.3.2 = _150.2;
place!(Field::<[char; 6]>(Variant(_64, 0), 0)) = [Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.4,_49,_63.1.4,_149,_125,Field::<char>(Variant(_80, 2), 0)];
SetDiscriminant(_107, 1);
_102 = _50 >> Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).2;
place!(Field::<*mut [u64; 1]>(Variant(_117, 0), 0)) = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.0;
(*_95) = _118 as u16;
_144 = _150.0;
_122 = _76;
Goto(bb105)
}
bb105 = {
place!(Field::<u64>(Variant(_131, 1), 0)) = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).1.3;
SetDiscriminant(_64, 0);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_128.fld0.fld3, 0), 3)).1.4 = _49;
_55.0 = [_44.3.0.0,_3,_116.0];
_57 = _5;
_153.fld3 = Adt51::Variant1 { fld0: _148,fld1: (*_43),fld2: _41,fld3: _106,fld4: Field::<usize>(Variant(_117, 0), 7),fld5: _173,fld6: _37,fld7: _94.1 };
_148.0 = _153.fld4 * _156.0;
_150.1 = !_168.1;
_175 = core::ptr::addr_of_mut!(_174.fld1);
place!(Field::<[usize; 3]>(Variant(_104, 1), 1)) = _122;
_111 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_89, 2), 0)).0 = [_51,Field::<i128>(Variant(_151, 2), 1),_51,_9];
_128.fld0.fld3 = _153.fld3;
_3 = _144.0 >> _102;
_176 = !_26;
place!(Field::<u32>(Variant(_151, 2), 0)) = _56 as u32;
place!(Field::<i8>(Variant(_108, 1), 3)) = _106 ^ Field::<i8>(Variant(_153.fld3, 1), 3);
_58.0 = !_3;
SetDiscriminant(_128.fld0.fld3, 1);
place!(Field::<(bool,)>(Variant(_128.fld0.fld3, 1), 5)) = _52;
Goto(bb106)
}
bb106 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).0 = _55.2;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.3 = Field::<i8>(Variant(_108, 1), 3) as u64;
place!(Field::<(bool,)>(Variant(_64, 0), 4)) = (_150.1,);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).2 = -_23;
_132 = _113;
place!(Field::<*mut isize>(Variant(_107, 1), 3)) = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0).3;
_152.fld3 = Adt51::Variant1 { fld0: Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0),fld1: _44.2,fld2: (*_142),fld3: Field::<i8>(Variant(_108, 1), 3),fld4: _4,fld5: Field::<(bool,)>(Variant(_128.fld0.fld3, 1), 5),fld6: _22,fld7: (*_25) };
place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)).1 = [_74.1,_41,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,_74.1,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_152.fld3, 1), 0).1,_148.1];
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0)) = Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0);
_83 = _29 - Field::<f64>(Variant(_153.fld3, 1), 6);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_117, 0), 2)).3 = core::ptr::addr_of_mut!(_158);
_126 = !_173.0;
_40 = _11.2;
_113 = _152.fld2;
_63.3 = core::ptr::addr_of_mut!(_153.fld2);
_70 = [_9,Field::<i128>(Variant(_151, 2), 1),_51,Field::<i128>(Variant(_151, 2), 1)];
place!(Field::<[usize; 3]>(Variant(_107, 1), 4)) = [Field::<usize>(Variant(_117, 0), 7),Field::<usize>(Variant(_117, 0), 7),_118];
place!(Field::<i8>(Variant(_153.fld3, 1), 3)) = -Field::<i8>(Variant(_108, 1), 3);
Call(_167 = core::intrinsics::transmute(_123), bb107, UnwindUnreachable())
}
bb107 = {
_156.2 = _74.0;
place!(Field::<[u16; 8]>(Variant(_117, 0), 5)) = Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1).1;
_19 = _97;
place!(Field::<u64>(Variant(_107, 1), 2)) = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_54, 0), 0).1.3 - _40;
place!(Field::<[u16; 1]>(Variant(_131, 1), 6)) = [_74.1];
place!(Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1)).1 = Field::<[u16; 8]>(Variant(_117, 0), 5);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_117, 0), 2)).1.0 = Field::<*mut [u64; 1]>(Variant(_117, 0), 0);
_70 = [Field::<i128>(Variant(_151, 2), 1),Field::<i128>(Variant(_151, 2), 1),Field::<i128>(Variant(_151, 2), 1),_9];
_122 = Field::<[usize; 3]>(Variant(_104, 1), 1);
_130 = _63.1.1 as f64;
_74.1 = _90 as u16;
place!(Field::<[char; 6]>(Variant(_6, 0), 0)) = [_62.4,_63.1.4,_111,_49,_5,Field::<char>(Variant(_80, 2), 0)];
_152.fld0 = _65.0 ^ _58.0;
_54 = Move(_80);
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_152.fld3, 1), 0)).1 = _74.1 * Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1;
Call(place!(Field::<f64>(Variant(_128.fld0.fld3, 1), 6)) = core::intrinsics::transmute(_135), bb108, UnwindUnreachable())
}
bb108 = {
_163 = Move(_151);
_116 = (_27.1,);
_81 = _39;
_51 = Field::<i128>(Variant(_163, 2), 1) * Field::<i128>(Variant(_163, 2), 1);
_148.1 = _74.1;
(*_175) = _17;
_168.0.0 = _116.0;
_20 = _27.0 & _33.0;
place!(Field::<*mut [u64; 1]>(Variant(_89, 2), 1)) = _62.0;
_147.0 = (_150.0.0,);
_5 = _49;
_146 = [_63.1.4,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4,_5,_49,_62.4,_125];
place!(Field::<[u16; 8]>(Variant(_128.fld0.fld3, 1), 7)) = [_41,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,_148.1,Field::<u16>(Variant(_153.fld3, 1), 2),(*_142),_74.1,Field::<(i16, u16, i16, *mut isize)>(Variant(_152.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1];
_124.0 = _73 <= _73;
_143 = Field::<([i128; 4], [u16; 8])>(Variant(_64, 0), 1).1;
place!(Field::<f64>(Variant(_152.fld3, 1), 6)) = _44.3.0.0 as f64;
_74 = (_156.0, _101.1, Field::<i16>(Variant(_108, 1), 4), _101.3);
_168.2 = _16 as u8;
_44.3.2 = !_50;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.4 = _109;
place!(Field::<u16>(Variant(_128.fld0.fld3, 1), 2)) = !_101.1;
Goto(bb109)
}
bb109 = {
_133 = Adt58::Variant1 { fld0: _138,fld1: _114,fld2: Field::<u64>(Variant(_107, 1), 2) };
_43 = core::ptr::addr_of_mut!((*_10));
_58.0 = _150.0.0;
_62.0 = core::ptr::addr_of_mut!((*_175));
_51 = Field::<i128>(Variant(_163, 2), 1) + Field::<i128>(Variant(_163, 2), 1);
place!(Field::<([i128; 4], [u16; 8])>(Variant(_89, 2), 0)).1 = [Field::<(i16, u16, i16, *mut isize)>(Variant(_152.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_152.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_152.fld3, 1), 0).1,(*_142)];
_148.3 = _74.3;
_150.0.0 = !_152.fld0;
place!(Field::<u16>(Variant(_128.fld0.fld3, 1), 2)) = !_74.1;
place!(Field::<i8>(Variant(_128.fld0.fld3, 1), 3)) = _125 as i8;
_75 = Adt54::Variant0 { fld0: _63 };
_192 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2);
place!(Field::<char>(Variant(_54, 2), 0)) = _5;
SetDiscriminant(_152.fld3, 0);
_99 = _33.0 & _27.0;
_150 = _44.3;
Goto(bb110)
}
bb110 = {
(*_10) = _142;
place!(Field::<[u64; 1]>(Variant(_152.fld3, 0), 6)) = [Field::<u64>(Variant(_133, 1), 2)];
SetDiscriminant(_89, 1);
place!(Field::<([i128; 4], [u16; 8])>(Variant(_152.fld3, 0), 1)).1 = [Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1,Field::<u16>(Variant(_153.fld3, 1), 2),(*_142),_101.1,_41,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,(*_142)];
_41 = _101.1 >> Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 0), 0).1.3;
_101.3 = _192.3;
_106 = _2 as i8;
place!(Field::<f64>(Variant(_89, 1), 1)) = Field::<f64>(Variant(_108, 1), 1);
_35 = _112 + _71;
_64 = _153.fld3;
_170 = -_47;
_128.fld0 = Adt60 { fld0: _168.0.0,fld1: _2,fld2: _35,fld3: _64,fld4: _74.0 };
(*_25) = [Field::<u16>(Variant(_128.fld0.fld3, 1), 2),Field::<u16>(Variant(_64, 1), 2),(*_142),Field::<u16>(Variant(_153.fld3, 1), 2),Field::<u16>(Variant(_153.fld3, 1), 2),_148.1,Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0).1,Field::<u16>(Variant(_128.fld0.fld3, 1), 2)];
_121 = [_51,Field::<i128>(Variant(_163, 2), 1),_9,Field::<i128>(Variant(_163, 2), 1)];
Goto(bb111)
}
bb111 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 0), 0)).2 = _192.2;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_64, 1), 0)).2 = _152.fld4 + _153.fld4;
SetDiscriminant(_64, 0);
_167 = _66 - _170;
_86.0 = [Field::<i128>(Variant(_163, 2), 1),Field::<i128>(Variant(_163, 2), 1),_51,Field::<i128>(Variant(_163, 2), 1)];
_162 = _124;
_52 = Field::<(bool,)>(Variant(_153.fld3, 1), 5);
_184.0 = !_42;
_151 = Move(_163);
_178 = !Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2)).1.4 = _57;
place!(Field::<u16>(Variant(_153.fld3, 1), 2)) = Field::<u16>(Variant(_128.fld0.fld3, 1), 2);
_142 = core::ptr::addr_of_mut!((*_142));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)) = (_63.0, _192.1, _23, Field::<(i16, u16, i16, *mut isize)>(Variant(_128.fld0.fld3, 1), 0).3);
SetDiscriminant(_153.fld3, 1);
place!(Field::<i128>(Variant(_107, 1), 7)) = !Field::<i128>(Variant(_151, 2), 1);
SetDiscriminant(_151, 0);
place!(Field::<([i128; 4], [u16; 8])>(Variant(_131, 1), 2)) = (_84.0, _28);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 0), 0)).1.0 = core::ptr::addr_of_mut!(_17);
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_153.fld3, 1), 0)).3 = Field::<*mut isize>(Variant(_107, 1), 3);
_171 = [_63.2,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).2,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_75, 0), 0).2,_192.2,_192.2,_192.2,Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3).2,_24];
place!(Field::<*const *mut u16>(Variant(_152.fld3, 0), 2)) = core::ptr::addr_of!((*_10));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_64, 0), 3)).1.4 = _192.1.4;
Goto(bb112)
}
bb112 = {
_27.3 = (_33.3.0, _129, _61);
_63.2 = !_24;
_147.0 = (_128.fld0.fld0,);
SetDiscriminant(_75, 1);
SetDiscriminant(_133, 0);
SetDiscriminant(_128.fld0.fld3, 1);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_152.fld3, 0), 3)).2 = -_24;
_162.0 = _138;
place!(Field::<*mut isize>(Variant(_107, 1), 3)) = _192.3;
_191 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_6, 0), 2).1.4;
_106 = _23 as i8;
RET = Adt51::Variant1 { fld0: _148,fld1: (*_43),fld2: _148.1,fld3: _106,fld4: _4,fld5: _162,fld6: _98,fld7: _143 };
_153.fld4 = -_152.fld4;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_152.fld3, 0), 3)).1.0 = _175;
Goto(bb113)
}
bb113 = {
Call(_204 = dump_var(1_usize, 127_usize, Move(_127), 65_usize, Move(_65), 112_usize, Move(_112), 69_usize, Move(_69)), bb114, UnwindUnreachable())
}
bb114 = {
Call(_204 = dump_var(1_usize, 78_usize, Move(_78), 16_usize, Move(_16), 92_usize, Move(_92), 168_usize, Move(_168)), bb115, UnwindUnreachable())
}
bb115 = {
Call(_204 = dump_var(1_usize, 20_usize, Move(_20), 42_usize, Move(_42), 3_usize, Move(_3), 28_usize, Move(_28)), bb116, UnwindUnreachable())
}
bb116 = {
Call(_204 = dump_var(1_usize, 143_usize, Move(_143), 162_usize, Move(_162), 150_usize, Move(_150), 105_usize, Move(_105)), bb117, UnwindUnreachable())
}
bb117 = {
Call(_204 = dump_var(1_usize, 124_usize, Move(_124), 86_usize, Move(_86), 82_usize, Move(_82), 79_usize, Move(_79)), bb118, UnwindUnreachable())
}
bb118 = {
Call(_204 = dump_var(1_usize, 2_usize, Move(_2), 35_usize, Move(_35), 178_usize, Move(_178), 184_usize, Move(_184)), bb119, UnwindUnreachable())
}
bb119 = {
Call(_204 = dump_var(1_usize, 144_usize, Move(_144), 1_usize, Move(_1), 109_usize, Move(_109), 99_usize, Move(_99)), bb120, UnwindUnreachable())
}
bb120 = {
Call(_204 = dump_var(1_usize, 18_usize, Move(_18), 76_usize, Move(_76), 77_usize, Move(_77), 81_usize, Move(_81)), bb121, UnwindUnreachable())
}
bb121 = {
Call(_204 = dump_var(1_usize, 41_usize, Move(_41), 93_usize, Move(_93), 114_usize, Move(_114), 160_usize, Move(_160)), bb122, UnwindUnreachable())
}
bb122 = {
Call(_204 = dump_var(1_usize, 129_usize, Move(_129), 147_usize, Move(_147), 125_usize, Move(_125), 123_usize, Move(_123)), bb123, UnwindUnreachable())
}
bb123 = {
Call(_204 = dump_var(1_usize, 61_usize, Move(_61), 118_usize, Move(_118), 46_usize, Move(_46), 4_usize, Move(_4)), bb124, UnwindUnreachable())
}
bb124 = {
Call(_204 = dump_var(1_usize, 73_usize, Move(_73), 50_usize, Move(_50), 102_usize, Move(_102), 59_usize, Move(_59)), bb125, UnwindUnreachable())
}
bb125 = {
Call(_204 = dump_var(1_usize, 23_usize, Move(_23), 85_usize, Move(_85), 94_usize, Move(_94), 30_usize, Move(_30)), bb126, UnwindUnreachable())
}
bb126 = {
Call(_204 = dump_var(1_usize, 149_usize, Move(_149), 40_usize, Move(_40), 205_usize, _205, 205_usize, _205), bb127, UnwindUnreachable())
}
bb127 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: i32,mut _2: i16,mut _3: char,mut _4: i128,mut _5: char) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _6: u64;
let _7: char;
let _8: i32;
let _9: *mut *mut u16;
let _10: isize;
let _11: f32;
let _12: char;
let _13: [i16; 6];
let _14: Adt53;
let _15: [u16; 1];
let _16: (bool,);
let _17: [char; 6];
let _18: ();
let _19: ();
{
RET = [_1,_1,_1,_1,_1];
_5 = _3;
_1 = _2 as i32;
_2 = 5101_i16;
_2 = !20301_i16;
_4 = (-64202146614846136827675367429183471106_i128);
RET = [_1,_1,_1,_1,_1];
RET = [_1,_1,_1,_1,_1];
_6 = 12606782268498958581_u64 - 11227758958756872511_u64;
RET = [_1,_1,_1,_1,_1];
RET = [_1,_1,_1,_1,_1];
_2 = (-26250_i16) + 8644_i16;
Goto(bb1)
}
bb1 = {
_7 = _3;
RET = [_1,_1,_1,_1,_1];
_1 = _6 as i32;
_2 = 9709_i16;
_2 = (-31148_i16);
_2 = !27272_i16;
_8 = 32_i8 as i32;
_2 = 14545_i16 + 29209_i16;
match _4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
276080220306092326635699240002584740350 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = [_1,_1,_1,_1,_8];
RET = [_8,_1,_1,_1,_1];
_3 = _5;
_6 = 8194560670486041911_u64;
_2 = (-15951_i16);
_7 = _5;
_6 = 15550684792098632013_u64 ^ 10435557180862277661_u64;
_4 = (-86221992538760271259311087150658427700_i128);
_5 = _7;
_6 = 7986322346762254894_u64 ^ 12844225928645596857_u64;
_4 = false as i128;
match _2 {
0 => bb4,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
340282366920938463463374607431768195505 => bb13,
_ => bb12
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_1 = 1_usize as i32;
_2 = 31033_i16;
RET = [_1,_1,_8,_8,_8];
_6 = !761511836084024934_u64;
_3 = _5;
_4 = 49275188506392167159077006661092784346_i128 >> _2;
_1 = _8 & _8;
_7 = _3;
RET = [_1,_1,_1,_1,_1];
_11 = 229_u8 as f32;
RET = [_1,_1,_1,_1,_8];
_2 = _6 as i16;
_10 = 2701994025800179513_usize as isize;
Call(_10 = fn3(_1, _2), bb14, UnwindUnreachable())
}
bb14 = {
RET = [_1,_1,_8,_1,_8];
_10 = (-9223372036854775808_isize);
_10 = (-81_isize);
RET = [_8,_1,_1,_1,_8];
_3 = _5;
_12 = _7;
_10 = 293557926037173271256998759858599370455_u128 as isize;
_11 = _1 as f32;
RET = [_8,_1,_1,_8,_1];
_13 = [_2,_2,_2,_2,_2,_2];
_12 = _7;
_13 = [_2,_2,_2,_2,_2,_2];
_13 = [_2,_2,_2,_2,_2,_2];
_6 = 2798162526805777463_u64 - 5614930595196836604_u64;
_3 = _5;
_3 = _7;
_3 = _7;
_15 = [22678_u16];
_6 = false as u64;
_7 = _3;
_15 = [11670_u16];
_12 = _7;
_13 = [_2,_2,_2,_2,_2,_2];
_7 = _5;
_6 = _10 as u64;
Goto(bb15)
}
bb15 = {
Call(_18 = dump_var(2_usize, 7_usize, Move(_7), 3_usize, Move(_3), 4_usize, Move(_4), 6_usize, Move(_6)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_18 = dump_var(2_usize, 5_usize, Move(_5), 1_usize, Move(_1), 19_usize, _19, 19_usize, _19), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: i32,mut _2: i16) -> isize {
mir! {
type RET = isize;
let _3: *mut u8;
let _4: [i32; 5];
let _5: u128;
let _6: isize;
let _7: u8;
let _8: char;
let _9: ([i128; 4], [u16; 8]);
let _10: isize;
let _11: *const [u16; 8];
let _12: f64;
let _13: isize;
let _14: [char; 8];
let _15: ((u32,), bool, u8);
let _16: Adt50;
let _17: i16;
let _18: u32;
let _19: bool;
let _20: isize;
let _21: char;
let _22: ();
let _23: ();
{
RET = (-9223372036854775808_isize) & 9223372036854775807_isize;
RET = (-16_isize);
RET = !9223372036854775807_isize;
_2 = (-9869_i16) << RET;
Call(_2 = fn4(RET, RET, _1, _1, _1, _1, RET), bb1, UnwindUnreachable())
}
bb1 = {
RET = (-9223372036854775808_isize);
RET = 9223372036854775807_isize;
_2 = -28507_i16;
_4 = [_1,_1,_1,_1,_1];
RET = 100666484744179861_i64 as isize;
_1 = 1303143015_i32 ^ 636568953_i32;
_5 = !125201646923407596184362049819901320335_u128;
RET = false as isize;
_4 = [_1,_1,_1,_1,_1];
_2 = 10072_i16 & 3419_i16;
_5 = 224578841184578988866352205109558145418_u128 + 194567708325384428070760192352374155603_u128;
_4 = [_1,_1,_1,_1,_1];
_5 = 147_u8 as u128;
RET = 9223372036854775807_isize >> _5;
_1 = _5 as i32;
_4 = [_1,_1,_1,_1,_1];
_1 = !(-105636368_i32);
_5 = 141440320864895435317855405039452406841_u128 - 91953367214750799830601120711467719578_u128;
_1 = _2 as i32;
RET = 9223372036854775807_isize;
_6 = 6069070742848418684_usize as isize;
_2 = (-9753_i16) << _1;
RET = !_6;
RET = _6;
_7 = _5 as u8;
Call(_2 = core::intrinsics::bswap(11741_i16), bb2, UnwindUnreachable())
}
bb2 = {
_5 = 175676033749656328821839778491348502910_u128 - 201587498844965179574801611168141759990_u128;
_1 = !885902810_i32;
_7 = 55_u8;
_1 = (-108_i8) as i32;
_10 = !RET;
_6 = _10;
_2 = 17022_i16;
_4 = [_1,_1,_1,_1,_1];
Call(_10 = core::intrinsics::transmute(_6), bb3, UnwindUnreachable())
}
bb3 = {
_3 = core::ptr::addr_of_mut!(_7);
RET = _6 | _10;
_8 = '\u{41f79}';
_9.0 = [(-38050269971358485278096554677005595620_i128),(-109577472359584235360085248796239416032_i128),(-112112332563290686674583995582744701971_i128),109453648244761523496011791471162319364_i128];
_9.1 = [23554_u16,57329_u16,12840_u16,52974_u16,7585_u16,20108_u16,50192_u16,43574_u16];
Call(RET = core::intrinsics::transmute(_6), bb4, UnwindUnreachable())
}
bb4 = {
(*_3) = !144_u8;
_7 = _8 as u8;
_5 = 101772695677732444721502573208353759048_u128 - 20587314087199617870512334092308341226_u128;
_5 = 196516126603783147347632297834573679380_u128;
_10 = RET;
_7 = !65_u8;
_4 = [_1,_1,_1,_1,_1];
_7 = 18005136859421090502252319713809499634_i128 as u8;
_12 = 1570385985_u32 as f64;
_6 = _10 * _10;
_4 = [_1,_1,_1,_1,_1];
match _5 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
196516126603783147347632297834573679380 => bb9,
_ => bb8
}
}
bb5 = {
_3 = core::ptr::addr_of_mut!(_7);
RET = _6 | _10;
_8 = '\u{41f79}';
_9.0 = [(-38050269971358485278096554677005595620_i128),(-109577472359584235360085248796239416032_i128),(-112112332563290686674583995582744701971_i128),109453648244761523496011791471162319364_i128];
_9.1 = [23554_u16,57329_u16,12840_u16,52974_u16,7585_u16,20108_u16,50192_u16,43574_u16];
Call(RET = core::intrinsics::transmute(_6), bb4, UnwindUnreachable())
}
bb6 = {
_5 = 175676033749656328821839778491348502910_u128 - 201587498844965179574801611168141759990_u128;
_1 = !885902810_i32;
_7 = 55_u8;
_1 = (-108_i8) as i32;
_10 = !RET;
_6 = _10;
_2 = 17022_i16;
_4 = [_1,_1,_1,_1,_1];
Call(_10 = core::intrinsics::transmute(_6), bb3, UnwindUnreachable())
}
bb7 = {
RET = (-9223372036854775808_isize);
RET = 9223372036854775807_isize;
_2 = -28507_i16;
_4 = [_1,_1,_1,_1,_1];
RET = 100666484744179861_i64 as isize;
_1 = 1303143015_i32 ^ 636568953_i32;
_5 = !125201646923407596184362049819901320335_u128;
RET = false as isize;
_4 = [_1,_1,_1,_1,_1];
_2 = 10072_i16 & 3419_i16;
_5 = 224578841184578988866352205109558145418_u128 + 194567708325384428070760192352374155603_u128;
_4 = [_1,_1,_1,_1,_1];
_5 = 147_u8 as u128;
RET = 9223372036854775807_isize >> _5;
_1 = _5 as i32;
_4 = [_1,_1,_1,_1,_1];
_1 = !(-105636368_i32);
_5 = 141440320864895435317855405039452406841_u128 - 91953367214750799830601120711467719578_u128;
_1 = _2 as i32;
RET = 9223372036854775807_isize;
_6 = 6069070742848418684_usize as isize;
_2 = (-9753_i16) << _1;
RET = !_6;
RET = _6;
_7 = _5 as u8;
Call(_2 = core::intrinsics::bswap(11741_i16), bb2, UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
_4 = [_1,_1,_1,_1,_1];
_2 = (-21491_i16) & (-4673_i16);
_9.0 = [(-78529243421506609965053083609847340093_i128),(-48164686060212363856654170645377461626_i128),(-22937643436627019645789424657930811568_i128),18748009246057576890971522412434200616_i128];
_8 = '\u{e3f63}';
_10 = !_6;
RET = _2 as isize;
RET = _10;
_4 = [_1,_1,_1,_1,_1];
_9.1 = [20039_u16,46488_u16,36327_u16,41677_u16,38725_u16,60213_u16,7173_u16,16741_u16];
(*_3) = _1 as u8;
_14 = [_8,_8,_8,_8,_8,_8,_8,_8];
_15.2 = (-42_i8) as u8;
_15.0.0 = 2877258686_u32;
Call(_9.1 = core::intrinsics::transmute(_5), bb10, UnwindUnreachable())
}
bb10 = {
_14 = [_8,_8,_8,_8,_8,_8,_8,_8];
_15.0 = (2616771245_u32,);
_14 = [_8,_8,_8,_8,_8,_8,_8,_8];
_11 = core::ptr::addr_of!(_9.1);
_2 = !13192_i16;
_9.1 = [55567_u16,43607_u16,2567_u16,21544_u16,27702_u16,10078_u16,6135_u16,35011_u16];
_8 = '\u{6d8d6}';
(*_3) = _1 as u8;
_9.0 = [(-82090908061188250643910317989905458633_i128),(-43615723087293735326295876871671560781_i128),44162585015970451493669115463806174604_i128,18363596607907839813466799880869903223_i128];
_15.1 = !true;
_15.0 = (2022860539_u32,);
match _15.0.0 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
2022860539 => bb17,
_ => bb16
}
}
bb11 = {
_3 = core::ptr::addr_of_mut!(_7);
RET = _6 | _10;
_8 = '\u{41f79}';
_9.0 = [(-38050269971358485278096554677005595620_i128),(-109577472359584235360085248796239416032_i128),(-112112332563290686674583995582744701971_i128),109453648244761523496011791471162319364_i128];
_9.1 = [23554_u16,57329_u16,12840_u16,52974_u16,7585_u16,20108_u16,50192_u16,43574_u16];
Call(RET = core::intrinsics::transmute(_6), bb4, UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
RET = (-9223372036854775808_isize);
RET = 9223372036854775807_isize;
_2 = -28507_i16;
_4 = [_1,_1,_1,_1,_1];
RET = 100666484744179861_i64 as isize;
_1 = 1303143015_i32 ^ 636568953_i32;
_5 = !125201646923407596184362049819901320335_u128;
RET = false as isize;
_4 = [_1,_1,_1,_1,_1];
_2 = 10072_i16 & 3419_i16;
_5 = 224578841184578988866352205109558145418_u128 + 194567708325384428070760192352374155603_u128;
_4 = [_1,_1,_1,_1,_1];
_5 = 147_u8 as u128;
RET = 9223372036854775807_isize >> _5;
_1 = _5 as i32;
_4 = [_1,_1,_1,_1,_1];
_1 = !(-105636368_i32);
_5 = 141440320864895435317855405039452406841_u128 - 91953367214750799830601120711467719578_u128;
_1 = _2 as i32;
RET = 9223372036854775807_isize;
_6 = 6069070742848418684_usize as isize;
_2 = (-9753_i16) << _1;
RET = !_6;
RET = _6;
_7 = _5 as u8;
Call(_2 = core::intrinsics::bswap(11741_i16), bb2, UnwindUnreachable())
}
bb14 = {
_5 = 175676033749656328821839778491348502910_u128 - 201587498844965179574801611168141759990_u128;
_1 = !885902810_i32;
_7 = 55_u8;
_1 = (-108_i8) as i32;
_10 = !RET;
_6 = _10;
_2 = 17022_i16;
_4 = [_1,_1,_1,_1,_1];
Call(_10 = core::intrinsics::transmute(_6), bb3, UnwindUnreachable())
}
bb15 = {
_3 = core::ptr::addr_of_mut!(_7);
RET = _6 | _10;
_8 = '\u{41f79}';
_9.0 = [(-38050269971358485278096554677005595620_i128),(-109577472359584235360085248796239416032_i128),(-112112332563290686674583995582744701971_i128),109453648244761523496011791471162319364_i128];
_9.1 = [23554_u16,57329_u16,12840_u16,52974_u16,7585_u16,20108_u16,50192_u16,43574_u16];
Call(RET = core::intrinsics::transmute(_6), bb4, UnwindUnreachable())
}
bb16 = {
_5 = 175676033749656328821839778491348502910_u128 - 201587498844965179574801611168141759990_u128;
_1 = !885902810_i32;
_7 = 55_u8;
_1 = (-108_i8) as i32;
_10 = !RET;
_6 = _10;
_2 = 17022_i16;
_4 = [_1,_1,_1,_1,_1];
Call(_10 = core::intrinsics::transmute(_6), bb3, UnwindUnreachable())
}
bb17 = {
_16 = Adt50::Variant2 { fld0: _15.0.0,fld1: 74342106089562541061767688222370152834_i128 };
RET = _10;
_15.1 = !false;
_10 = !_6;
_13 = -RET;
_15.1 = false | false;
(*_3) = !_15.2;
_18 = _8 as u32;
_11 = core::ptr::addr_of!((*_11));
Goto(bb18)
}
bb18 = {
Call(_22 = dump_var(3_usize, 13_usize, Move(_13), 14_usize, Move(_14), 8_usize, Move(_8), 5_usize, Move(_5)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_22 = dump_var(3_usize, 15_usize, Move(_15), 4_usize, Move(_4), 23_usize, _23, 23_usize, _23), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: isize,mut _2: isize,mut _3: i32,mut _4: i32,mut _5: i32,mut _6: i32,mut _7: isize) -> i16 {
mir! {
type RET = i16;
let _8: i32;
let _9: ([i128; 4], [u16; 8]);
let _10: Adt62;
let _11: bool;
let _12: *const *mut u16;
let _13: (bool,);
let _14: f64;
let _15: f64;
let _16: u8;
let _17: Adt50;
let _18: Adt62;
let _19: [i128; 4];
let _20: f64;
let _21: Adt55;
let _22: (u32,);
let _23: i16;
let _24: [u16; 1];
let _25: [char; 8];
let _26: isize;
let _27: (*mut [u64; 1], u8, u64, u64, char);
let _28: u64;
let _29: [u32; 3];
let _30: ();
let _31: ();
{
RET = 7558_i16;
_6 = -_3;
_2 = !_1;
_8 = _3;
_4 = -_5;
match RET {
0 => bb1,
7558 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
RET = (-12273_i16);
_8 = -_4;
_11 = !true;
_3 = 0_usize as i32;
RET = (-29974_i16) * (-25823_i16);
_3 = _8;
_13 = (_11,);
_2 = 238_u8 as isize;
Call(_1 = fn5(_8, _8), bb4, UnwindUnreachable())
}
bb4 = {
_14 = _2 as f64;
_3 = !_6;
_9.1 = [20148_u16,52716_u16,54919_u16,1877_u16,4166_u16,45097_u16,56370_u16,11565_u16];
_14 = 23787168186559364516181900349941761938_u128 as f64;
_13.0 = _11;
Goto(bb5)
}
bb5 = {
RET = 32474_i16;
_14 = 18261948714835582743_u64 as f64;
_5 = _4;
RET = (-23351_i16);
_8 = -_6;
_9.1 = [6161_u16,27612_u16,16187_u16,55677_u16,3145_u16,18267_u16,3555_u16,65006_u16];
_2 = _1 << _8;
_5 = _4 | _4;
_1 = _2 | _2;
RET = 12487_i16;
RET = 8641_i16;
_13 = (_11,);
_11 = _1 > _2;
_14 = 55755_u16 as f64;
_6 = _4 << _2;
_15 = -_14;
_13.0 = _11 < _11;
RET = (-48_i8) as i16;
_8 = _3 ^ _5;
_13 = (_11,);
Goto(bb6)
}
bb6 = {
_16 = 3894432318_u32 as u8;
_9.0 = [54203888446677432011269464747159610791_i128,(-16194118660530993221460250037415125452_i128),(-81253241619980596786865931142009302064_i128),(-10353482480420662629203572080972935204_i128)];
Call(_9.1 = fn19(_2, _13.0, _1, _2, _13, _13.0), bb7, UnwindUnreachable())
}
bb7 = {
_3 = _1 as i32;
RET = -(-16910_i16);
RET = (-5478_i16);
RET = !(-30386_i16);
_22.0 = !1304687869_u32;
_13.0 = !_11;
Goto(bb8)
}
bb8 = {
RET = '\u{351b}' as i16;
_14 = _15;
_1 = _2 & _2;
_16 = 29370622402396371440281787855049336155_u128 as u8;
_16 = (-1568210960747021662_i64) as u8;
_14 = _1 as f64;
_2 = _1 + _7;
_1 = 128786844157934083104259874658832123793_u128 as isize;
_23 = RET & RET;
RET = _23 & _23;
_23 = 9167879409296919_u64 as i16;
_6 = _3 + _3;
_14 = _15 + _15;
_24 = [27293_u16];
_25 = ['\u{d9014}','\u{7d620}','\u{105612}','\u{a3d0e}','\u{8a3a1}','\u{84cd7}','\u{37985}','\u{fb625}'];
_26 = -_2;
_9.0 = [152241473997674636163177816794553106955_i128,167467748101946867309163744924310016100_i128,(-151903014912102127639900438483703189632_i128),(-28894097407671913417413797103278888994_i128)];
_22 = (1829085004_u32,);
_11 = _13.0;
_8 = _6 ^ _3;
_17 = Adt50::Variant2 { fld0: _22.0,fld1: 33612992446609581035561847803478885937_i128 };
_22.0 = Field::<u32>(Variant(_17, 2), 0) << _26;
_5 = 57520_u16 as i32;
_6 = 33707_u16 as i32;
_25 = ['\u{d459}','\u{e9890}','\u{50586}','\u{16f3a}','\u{9bf83}','\u{f9e9a}','\u{bfd0a}','\u{22e70}'];
Call(_20 = core::intrinsics::transmute(_26), bb9, UnwindUnreachable())
}
bb9 = {
_7 = _26;
_6 = !_4;
place!(Field::<u32>(Variant(_17, 2), 0)) = _22.0;
_9.1 = [19441_u16,2406_u16,31140_u16,39973_u16,4751_u16,35723_u16,28659_u16,39575_u16];
_13 = (_11,);
place!(Field::<i128>(Variant(_17, 2), 1)) = _11 as i128;
_9.0 = [Field::<i128>(Variant(_17, 2), 1),Field::<i128>(Variant(_17, 2), 1),Field::<i128>(Variant(_17, 2), 1),Field::<i128>(Variant(_17, 2), 1)];
_19 = _9.0;
Call(_4 = core::intrinsics::transmute(_22.0), bb10, UnwindUnreachable())
}
bb10 = {
_27.3 = !12558705057814486025_u64;
Goto(bb11)
}
bb11 = {
_9.1 = [62984_u16,42966_u16,4242_u16,23921_u16,34840_u16,12856_u16,58072_u16,45578_u16];
RET = _4 as i16;
Goto(bb12)
}
bb12 = {
Call(_30 = dump_var(4_usize, 3_usize, Move(_3), 2_usize, Move(_2), 11_usize, Move(_11), 19_usize, Move(_19)), bb13, UnwindUnreachable())
}
bb13 = {
Call(_30 = dump_var(4_usize, 9_usize, Move(_9), 6_usize, Move(_6), 5_usize, Move(_5), 16_usize, Move(_16)), bb14, UnwindUnreachable())
}
bb14 = {
Call(_30 = dump_var(4_usize, 4_usize, Move(_4), 31_usize, _31, 31_usize, _31, 31_usize, _31), bb15, UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: i32,mut _2: i32) -> isize {
mir! {
type RET = isize;
let _3: (bool,);
let _4: [char; 6];
let _5: *mut isize;
let _6: Adt57;
let _7: *mut *mut [u16; 8];
let _8: ([i128; 4], [u16; 8]);
let _9: [i8; 5];
let _10: i32;
let _11: bool;
let _12: char;
let _13: *mut u8;
let _14: [i128; 4];
let _15: i128;
let _16: *mut [u64; 1];
let _17: *mut isize;
let _18: u16;
let _19: char;
let _20: Adt63;
let _21: *mut [u64; 1];
let _22: f64;
let _23: u32;
let _24: ((u32,), bool, u8);
let _25: bool;
let _26: u128;
let _27: f32;
let _28: [i16; 6];
let _29: [i8; 5];
let _30: (u32,);
let _31: ([i128; 4], [u16; 8]);
let _32: isize;
let _33: [char; 6];
let _34: [i64; 8];
let _35: f32;
let _36: u128;
let _37: [u16; 8];
let _38: bool;
let _39: [i8; 5];
let _40: ();
let _41: ();
{
RET = (-32_isize);
_2 = !_1;
_2 = _1 >> RET;
_1 = '\u{6555c}' as i32;
RET = 33_isize >> _1;
_3 = (false,);
_2 = _1;
_3 = (false,);
RET = 0_usize as isize;
_3 = (false,);
RET = (-9223372036854775808_isize) - 9223372036854775807_isize;
_3.0 = false;
_1 = 3_usize as i32;
_3.0 = !true;
RET = -72_isize;
_3 = (false,);
_3.0 = false;
RET = 9223372036854775807_isize >> _1;
Call(RET = fn6(_1, _3.0, _2, _1, _3.0, _3, _2), bb1, UnwindUnreachable())
}
bb1 = {
_3.0 = _1 <= _1;
_3.0 = !true;
_4 = ['\u{30d4}','\u{fa8ca}','\u{83b88}','\u{12966}','\u{28c20}','\u{be742}'];
RET = 99_isize >> _1;
RET = 105707857999826406193372905975001721323_u128 as isize;
_4 = ['\u{9ac96}','\u{b7b03}','\u{4558c}','\u{be590}','\u{539f5}','\u{bc2cd}'];
_5 = core::ptr::addr_of_mut!(RET);
RET = (-9223372036854775808_isize) << _2;
_3.0 = !false;
(*_5) = 2565023618_u32 as isize;
_8.1 = [43739_u16,10941_u16,21551_u16,25991_u16,31339_u16,63233_u16,8408_u16,53154_u16];
RET = 146_u8 as isize;
_5 = core::ptr::addr_of_mut!(RET);
_9 = [62_i8,(-17_i8),(-10_i8),(-7_i8),(-128_i8)];
RET = 65033_u16 as isize;
_9 = [(-42_i8),110_i8,6_i8,90_i8,77_i8];
_10 = _3.0 as i32;
Goto(bb2)
}
bb2 = {
_1 = 121_u8 as i32;
(*_5) = 9223372036854775807_isize - (-9223372036854775808_isize);
_1 = -_10;
RET = !9223372036854775807_isize;
RET = (-9223372036854775808_isize) + 105_isize;
_2 = !_10;
(*_5) = !(-9223372036854775808_isize);
_3.0 = true & false;
_8.1 = [32879_u16,44020_u16,63829_u16,27377_u16,62007_u16,5607_u16,59813_u16,58259_u16];
_1 = _2 >> (*_5);
_5 = core::ptr::addr_of_mut!((*_5));
RET = -(-9223372036854775808_isize);
_2 = _1;
_2 = _10 | _10;
_10 = _1;
_3 = (true,);
_1 = !_10;
_4 = ['\u{b4fd}','\u{c1211}','\u{51ce1}','\u{69ee6}','\u{8c8fb}','\u{dd838}'];
Goto(bb3)
}
bb3 = {
_9 = [82_i8,(-112_i8),(-63_i8),(-43_i8),49_i8];
_4 = ['\u{7f486}','\u{f2579}','\u{fbf8a}','\u{61e2c}','\u{3d729}','\u{55dd0}'];
_2 = _1;
_9 = [65_i8,4_i8,43_i8,32_i8,(-109_i8)];
_8.0 = [2930734230118925796185848137785554045_i128,144683379938124575263161386981056662508_i128,(-151138876724052116758527172537895086345_i128),(-26262418188492354746301531047226405625_i128)];
_5 = core::ptr::addr_of_mut!((*_5));
_9 = [59_i8,(-104_i8),101_i8,(-9_i8),(-17_i8)];
_4 = ['\u{dcc6e}','\u{4e8d4}','\u{100c9c}','\u{a326c}','\u{b4766}','\u{67c71}'];
RET = (-9223372036854775808_isize) & 32_isize;
_11 = (*_5) == (*_5);
_2 = _10 | _10;
_4 = ['\u{4665d}','\u{ab97c}','\u{85d72}','\u{8e238}','\u{93710}','\u{875df}'];
Goto(bb4)
}
bb4 = {
_10 = _1;
_3.0 = _11 < _11;
_5 = core::ptr::addr_of_mut!((*_5));
_9 = [32_i8,114_i8,(-37_i8),(-90_i8),(-65_i8)];
Goto(bb5)
}
bb5 = {
_8.0 = [70344044945585438558264380797630076043_i128,(-121297205496862107458551199964605829425_i128),130820295033070135853545816830463999990_i128,(-111630136958231585131712663390134480849_i128)];
_10 = _1 & _2;
_10 = 2816_i16 as i32;
_17 = core::ptr::addr_of_mut!((*_5));
_15 = 55062_u16 as i128;
_8.1 = [31371_u16,3498_u16,8234_u16,57362_u16,64196_u16,29010_u16,39950_u16,49857_u16];
_12 = '\u{beac9}';
(*_17) = 9223372036854775807_isize | (-9223372036854775808_isize);
_14 = [_15,_15,_15,_15];
_14 = [_15,_15,_15,_15];
(*_17) = 8785379753552490524_usize as isize;
_8.0 = _14;
RET = _15 as isize;
RET = -(-9223372036854775808_isize);
_5 = core::ptr::addr_of_mut!((*_17));
_15 = 121609767417567006799401244241317420296_i128 ^ (-129358404950466996901225876881592029345_i128);
_8.1 = [30119_u16,24387_u16,25815_u16,36982_u16,40753_u16,9787_u16,14674_u16,4522_u16];
_20.fld0 = core::ptr::addr_of!(_18);
_14 = [_15,_15,_15,_15];
(*_17) = -9223372036854775807_isize;
_11 = !_3.0;
_4 = [_12,_12,_12,_12,_12,_12];
Goto(bb6)
}
bb6 = {
_22 = (-16750_i16) as f64;
(*_5) = 9223372036854775807_isize ^ (-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
_20.fld1 = [7922189218415699246_u64];
(*_17) = -9223372036854775807_isize;
_18 = _15 as u16;
_3 = (_11,);
(*_17) = !9_isize;
_21 = core::ptr::addr_of_mut!(_20.fld1);
(*_5) = -(-9223372036854775808_isize);
_10 = _12 as i32;
(*_5) = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_23 = 38_u8 as u32;
RET = (-9223372036854775808_isize);
_19 = _12;
Call(_14 = core::intrinsics::transmute(_8.0), bb7, UnwindUnreachable())
}
bb7 = {
_30.0 = _23;
_17 = _5;
_21 = core::ptr::addr_of_mut!((*_21));
Goto(bb8)
}
bb8 = {
_20.fld2 = [_2,_1,_2,_2,_1];
_9 = [(-97_i8),(-117_i8),(-98_i8),9_i8,94_i8];
Call(_24.2 = core::intrinsics::transmute(_11), bb9, UnwindUnreachable())
}
bb9 = {
_9 = [21_i8,(-23_i8),114_i8,(-65_i8),(-43_i8)];
_13 = core::ptr::addr_of_mut!(_24.2);
_20.fld2 = [_2,_2,_2,_1,_2];
_21 = core::ptr::addr_of_mut!(_20.fld1);
_8.0 = _14;
_27 = 40_i8 as f32;
_28 = [(-20915_i16),3687_i16,6618_i16,1475_i16,(-3173_i16),(-19633_i16)];
_30.0 = _23 >> (*_13);
_22 = (*_17) as f64;
_8.1 = [_18,_18,_18,_18,_18,_18,_18,_18];
(*_5) = _18 as isize;
_25 = !_3.0;
(*_17) = !9223372036854775807_isize;
(*_21) = [500804544734913960_u64];
_14 = [_15,_15,_15,_15];
_18 = !7386_u16;
_31 = _8;
Goto(bb10)
}
bb10 = {
_24.1 = _3.0;
_24 = (_30, _25, 39_u8);
_20.fld0 = core::ptr::addr_of!(_18);
Goto(bb11)
}
bb11 = {
_11 = !_3.0;
_20.fld2 = [_2,_1,_1,_1,_1];
Goto(bb12)
}
bb12 = {
(*_13) = _27 as u8;
Call(_36 = core::intrinsics::transmute(_31.1), bb13, UnwindUnreachable())
}
bb13 = {
_17 = _5;
_32 = RET * RET;
_24.0 = _30;
_9 = [1_i8,41_i8,72_i8,(-100_i8),(-42_i8)];
_32 = -(*_17);
(*_17) = _30.0 as isize;
_14 = _8.0;
_26 = _36 + _36;
_26 = 76_i8 as u128;
_8.1 = [_18,_18,_18,_18,_18,_18,_18,_18];
_35 = 16654299077447389144_u64 as f32;
_3.0 = _11;
_8 = _31;
_26 = _36 ^ _36;
_20.fld1 = [9276926317147315513_u64];
RET = _32 | _32;
_12 = _19;
_32 = (*_5);
_16 = _21;
(*_17) = _32 & _32;
_26 = _36;
Goto(bb14)
}
bb14 = {
(*_13) = !1_u8;
(*_5) = _32 - _32;
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(5_usize, 24_usize, Move(_24), 25_usize, Move(_25), 15_usize, Move(_15), 4_usize, Move(_4)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(5_usize, 32_usize, Move(_32), 26_usize, Move(_26), 10_usize, Move(_10), 3_usize, Move(_3)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(5_usize, 12_usize, Move(_12), 9_usize, Move(_9), 14_usize, Move(_14), 41_usize, _41), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: i32,mut _2: bool,mut _3: i32,mut _4: i32,mut _5: bool,mut _6: (bool,),mut _7: i32) -> isize {
mir! {
type RET = isize;
let _8: [i32; 5];
let _9: f32;
let _10: u128;
let _11: f32;
let _12: [u16; 8];
let _13: char;
let _14: [usize; 3];
let _15: (bool,);
let _16: u8;
let _17: *mut *mut u16;
let _18: ([i128; 4], [u16; 8]);
let _19: isize;
let _20: [char; 8];
let _21: [i128; 4];
let _22: [i128; 4];
let _23: ((u32,), bool, u8);
let _24: bool;
let _25: bool;
let _26: [usize; 3];
let _27: isize;
let _28: [i32; 5];
let _29: Adt60;
let _30: isize;
let _31: [u32; 3];
let _32: char;
let _33: [char; 8];
let _34: isize;
let _35: *const *mut u16;
let _36: ((u32,), bool, u8);
let _37: *mut [u16; 8];
let _38: isize;
let _39: bool;
let _40: isize;
let _41: ();
let _42: ();
{
RET = 9223372036854775807_isize;
_7 = _4;
RET = 9223372036854775807_isize;
RET = '\u{f5697}' as isize;
_3 = 262666810240103602757461166762063445434_u128 as i32;
RET = (-9223372036854775808_isize) ^ (-111_isize);
Call(_7 = core::intrinsics::transmute(_4), bb1, UnwindUnreachable())
}
bb1 = {
_3 = _1 ^ _4;
_7 = _3;
_8 = [_3,_3,_4,_3,_1];
_8 = [_1,_7,_4,_3,_3];
_6.0 = _7 > _7;
RET = !9223372036854775807_isize;
_7 = 64203_u16 as i32;
_8 = [_3,_4,_4,_7,_4];
_6 = (_2,);
_5 = _6.0;
_5 = !_2;
_2 = _5;
_3 = !_7;
_6.0 = !_2;
_4 = -_3;
RET = -87_isize;
_5 = _2 > _6.0;
_2 = _5 <= _5;
RET = '\u{fd9ff}' as isize;
_4 = _7;
_8 = [_1,_3,_3,_1,_3];
_9 = (-87_i8) as f32;
_7 = '\u{1bd14}' as i32;
_10 = 190029855119076936786606973109390177946_u128;
RET = (-7731_i16) as isize;
_5 = !_6.0;
_9 = 3659935632_u32 as f32;
match _10 {
0 => bb2,
1 => bb3,
2 => bb4,
190029855119076936786606973109390177946 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_11 = _9;
_6.0 = !_2;
RET = _6.0 as isize;
_6 = (_5,);
RET = 9223372036854775807_isize;
_2 = _6.0;
_4 = 617396965_u32 as i32;
_1 = _4 >> RET;
_11 = -_9;
_11 = _9 + _9;
RET = (-9223372036854775808_isize);
_6 = (_5,);
_2 = !_6.0;
_2 = _5;
_11 = (-7193635242931717488_i64) as f32;
_1 = -_7;
_9 = -_11;
_6 = (_2,);
_6 = (_2,);
_12 = [12590_u16,14912_u16,332_u16,26205_u16,28245_u16,27523_u16,11468_u16,54814_u16];
_4 = _7 * _1;
_9 = -_11;
_3 = 9037156994492522447_i64 as i32;
_6 = (_2,);
RET = 9223372036854775807_isize >> _7;
_10 = 282802688510070106926417124967957212471_u128 << _4;
_10 = !258924683692703793033995241994824303392_u128;
Call(_13 = fn7(_10, _5, _5, _6, _6, _12, _11, _12, _10, _7, _12, _12, _7, _6.0), bb7, UnwindUnreachable())
}
bb7 = {
_12 = [2514_u16,52893_u16,7968_u16,2407_u16,19125_u16,21274_u16,39056_u16,52372_u16];
_5 = _9 != _11;
_2 = !_5;
RET = (-9223372036854775808_isize);
_4 = _1 * _1;
_8 = [_4,_3,_3,_4,_7];
_10 = !235725843981601997383006766835025156576_u128;
RET = 9223372036854775807_isize - 9223372036854775807_isize;
_4 = _1 * _3;
_2 = !_6.0;
_5 = _4 >= _4;
Goto(bb8)
}
bb8 = {
RET = (-9223372036854775808_isize) << _7;
_4 = !_7;
RET = (-9223372036854775808_isize) | (-90_isize);
_3 = RET as i32;
_10 = 41906244162573561156852733014207279921_u128;
_15.0 = _5 & _5;
_15.0 = _5;
_8 = [_7,_4,_1,_7,_4];
_3 = _1 + _7;
_16 = 55_i8 as u8;
_13 = '\u{512e8}';
_16 = 199_u8;
_16 = (-128_i8) as u8;
_9 = _11;
Goto(bb9)
}
bb9 = {
_18.1 = _12;
_6.0 = !_5;
_11 = -_9;
_18.0 = [23791012692555572726363727926041383075_i128,115986972122524974571063290432870707292_i128,(-100630782709128127991548700374962297373_i128),(-31147816476754535738080880509264795679_i128)];
_8 = [_3,_3,_4,_4,_1];
_8 = [_7,_3,_4,_3,_3];
_14 = [8026750897843447435_usize,9714392069206340679_usize,1454277765551226281_usize];
_1 = _7;
_19 = _3 as isize;
_16 = !174_u8;
_11 = _9 - _9;
RET = _19;
_4 = -_3;
_13 = '\u{b2fed}';
_20 = [_13,_13,_13,_13,_13,_13,_13,_13];
_12 = [54178_u16,58528_u16,3374_u16,54303_u16,20869_u16,35004_u16,52414_u16,49288_u16];
_13 = '\u{43daa}';
_14 = [18442720497386805981_usize,1_usize,4_usize];
_13 = '\u{c1fc7}';
RET = _19 << _10;
_21 = _18.0;
_15.0 = _6.0;
RET = !_19;
match _10 {
0 => bb6,
1 => bb5,
41906244162573561156852733014207279921 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_15 = (_5,);
_9 = _11;
RET = 8092146402249825999_u64 as isize;
_14 = [16990813272695378259_usize,3063347327926291883_usize,17116121233164669133_usize];
_13 = '\u{7123}';
_22 = _18.0;
_6 = _15;
RET = _19 + _19;
_20 = [_13,_13,_13,_13,_13,_13,_13,_13];
_7 = _1;
_23.1 = _15.0;
_3 = -_4;
_16 = 174_u8 - 232_u8;
_19 = RET;
RET = _19;
_5 = _6.0;
_2 = _5;
_18 = (_22, _12);
RET = _19;
_26 = [2324055136162863744_usize,17624384230643104279_usize,1_usize];
_18.0 = [(-105900800703816477846368375902292821708_i128),(-19807832900393633401683193210194731027_i128),(-48546870283553053552807649220158791584_i128),(-13697299563276405007587659974337356710_i128)];
Goto(bb12)
}
bb12 = {
_25 = !_6.0;
_23.0.0 = !3672867083_u32;
_15.0 = !_25;
_8 = [_7,_3,_4,_4,_1];
_14 = _26;
_5 = _23.1;
_9 = _23.0.0 as f32;
_23.1 = _6.0;
_24 = _6.0;
_16 = _7 as u8;
_14 = [3897182260554708143_usize,2_usize,2_usize];
_11 = -_9;
_19 = !RET;
_4 = _7 | _3;
_7 = 82_i8 as i32;
_11 = _9;
_23.2 = !_16;
_14 = _26;
_11 = _9;
_24 = !_25;
_29.fld1 = _19 as i32;
_13 = '\u{230e5}';
_8 = [_1,_29.fld1,_29.fld1,_3,_29.fld1];
_27 = (-156545289417480254305530419355988013493_i128) as isize;
_5 = !_6.0;
_32 = _13;
Goto(bb13)
}
bb13 = {
_28 = [_3,_7,_3,_29.fld1,_7];
_28 = _8;
_11 = _9 + _9;
_21 = [(-75684275035884511346823078505732402744_i128),142157511802199418053148213322390527102_i128,71339677650819521592691096347886400061_i128,(-70269929555587048920794213161214985256_i128)];
_18 = (_21, _12);
_1 = !_29.fld1;
_29.fld0 = _23.0.0;
_20 = [_13,_32,_13,_13,_13,_32,_13,_32];
_3 = !_7;
_12 = [687_u16,36211_u16,32344_u16,5473_u16,31047_u16,414_u16,13242_u16,14452_u16];
_6 = _15;
_24 = !_5;
_20 = [_32,_32,_13,_32,_13,_13,_32,_13];
_19 = !RET;
_3 = -_7;
_33 = _20;
_14 = _26;
_29.fld1 = (-158512608830625853422786419231351225707_i128) as i32;
_18.0 = [77237960521257022813347406638549838404_i128,(-110939222703416003511455428197573740085_i128),(-111631465600230426544411442400395297766_i128),(-99653493840000220162764873367987068098_i128)];
_28 = _8;
_28 = _8;
_36.2 = _23.2;
_29.fld2 = _19 * _19;
_3 = _7 << _29.fld0;
match _10 {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb14,
4 => bb15,
41906244162573561156852733014207279921 => bb17,
_ => bb16
}
}
bb14 = {
_3 = _1 ^ _4;
_7 = _3;
_8 = [_3,_3,_4,_3,_1];
_8 = [_1,_7,_4,_3,_3];
_6.0 = _7 > _7;
RET = !9223372036854775807_isize;
_7 = 64203_u16 as i32;
_8 = [_3,_4,_4,_7,_4];
_6 = (_2,);
_5 = _6.0;
_5 = !_2;
_2 = _5;
_3 = !_7;
_6.0 = !_2;
_4 = -_3;
RET = -87_isize;
_5 = _2 > _6.0;
_2 = _5 <= _5;
RET = '\u{fd9ff}' as isize;
_4 = _7;
_8 = [_1,_3,_3,_1,_3];
_9 = (-87_i8) as f32;
_7 = '\u{1bd14}' as i32;
_10 = 190029855119076936786606973109390177946_u128;
RET = (-7731_i16) as isize;
_5 = !_6.0;
_9 = 3659935632_u32 as f32;
match _10 {
0 => bb2,
1 => bb3,
2 => bb4,
190029855119076936786606973109390177946 => bb6,
_ => bb5
}
}
bb15 = {
_15 = (_5,);
_9 = _11;
RET = 8092146402249825999_u64 as isize;
_14 = [16990813272695378259_usize,3063347327926291883_usize,17116121233164669133_usize];
_13 = '\u{7123}';
_22 = _18.0;
_6 = _15;
RET = _19 + _19;
_20 = [_13,_13,_13,_13,_13,_13,_13,_13];
_7 = _1;
_23.1 = _15.0;
_3 = -_4;
_16 = 174_u8 - 232_u8;
_19 = RET;
RET = _19;
_5 = _6.0;
_2 = _5;
_18 = (_22, _12);
RET = _19;
_26 = [2324055136162863744_usize,17624384230643104279_usize,1_usize];
_18.0 = [(-105900800703816477846368375902292821708_i128),(-19807832900393633401683193210194731027_i128),(-48546870283553053552807649220158791584_i128),(-13697299563276405007587659974337356710_i128)];
Goto(bb12)
}
bb16 = {
Return()
}
bb17 = {
_36.0 = (_29.fld0,);
_9 = _10 as f32;
_18 = (_22, _12);
_23.0 = _36.0;
Goto(bb18)
}
bb18 = {
Call(_41 = dump_var(6_usize, 2_usize, Move(_2), 19_usize, Move(_19), 33_usize, Move(_33), 20_usize, Move(_20)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(6_usize, 28_usize, Move(_28), 21_usize, Move(_21), 10_usize, Move(_10), 3_usize, Move(_3)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(6_usize, 23_usize, Move(_23), 32_usize, Move(_32), 16_usize, Move(_16), 25_usize, Move(_25)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_41 = dump_var(6_usize, 12_usize, Move(_12), 42_usize, _42, 42_usize, _42, 42_usize, _42), bb22, UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: u128,mut _2: bool,mut _3: bool,mut _4: (bool,),mut _5: (bool,),mut _6: [u16; 8],mut _7: f32,mut _8: [u16; 8],mut _9: u128,mut _10: i32,mut _11: [u16; 8],mut _12: [u16; 8],mut _13: i32,mut _14: bool) -> char {
mir! {
type RET = char;
let _15: (bool,);
let _16: [u64; 1];
let _17: bool;
let _18: [u16; 1];
let _19: [u32; 3];
let _20: u128;
let _21: u64;
let _22: i32;
let _23: [u16; 8];
let _24: [u64; 1];
let _25: [i32; 5];
let _26: [i16; 6];
let _27: u16;
let _28: u16;
let _29: [u16; 1];
let _30: f32;
let _31: [char; 8];
let _32: [i128; 4];
let _33: u128;
let _34: Adt51;
let _35: [i128; 4];
let _36: bool;
let _37: (i16, u16, i16, *mut isize);
let _38: isize;
let _39: [u64; 1];
let _40: i8;
let _41: [i32; 5];
let _42: i128;
let _43: f32;
let _44: [u32; 3];
let _45: bool;
let _46: ();
let _47: ();
{
_6 = [523_u16,16099_u16,20243_u16,59233_u16,62212_u16,45271_u16,33597_u16,52948_u16];
_6 = [61061_u16,34395_u16,47112_u16,13467_u16,15450_u16,63625_u16,7013_u16,3463_u16];
_5.0 = _3;
_4 = _5;
_3 = _13 != _10;
RET = '\u{e07ee}';
_2 = _10 >= _13;
_5.0 = _3 ^ _2;
_3 = _2;
RET = '\u{8b826}';
_13 = _7 as i32;
_4.0 = _2 == _14;
_4 = (_5.0,);
_14 = _2 & _5.0;
_10 = _13 * _13;
_15.0 = _5.0 > _4.0;
_14 = !_15.0;
RET = '\u{e41a5}';
_13 = _10 - _10;
_5.0 = _15.0;
_1 = _13 as u128;
_4.0 = !_15.0;
_15 = (_5.0,);
_16 = [15360562626191934271_u64];
_1 = _9 * _9;
Call(_11 = fn8(_16, _5.0, _5.0, _5.0, _8, _4, _6, _5, _5.0, _14, _4), bb1, UnwindUnreachable())
}
bb1 = {
_8 = [36528_u16,27332_u16,65180_u16,9853_u16,7692_u16,23387_u16,49278_u16,53683_u16];
_7 = (-3122530198218133388_i64) as f32;
_19 = [1409492626_u32,3039123398_u32,841169158_u32];
_5.0 = _4.0 > _14;
_17 = !_14;
_5.0 = _15.0 ^ _2;
_8 = [42612_u16,59952_u16,20844_u16,15745_u16,33824_u16,31022_u16,40581_u16,43500_u16];
_18 = [34657_u16];
_5 = (_14,);
_5.0 = !_4.0;
_13 = -_10;
_18 = [59975_u16];
RET = '\u{33112}';
_18 = [63091_u16];
_6 = _8;
_10 = !_13;
_4 = (_5.0,);
_19 = [3775097953_u32,3507711101_u32,1794340691_u32];
_11 = _12;
Call(_15 = fn18(_5, _19, _17, _19), bb2, UnwindUnreachable())
}
bb2 = {
_7 = 8547215985677818146_u64 as f32;
_15.0 = _14;
Goto(bb3)
}
bb3 = {
_21 = 14374533868988971992_u64 * 15595900873337876466_u64;
_11 = [10240_u16,32982_u16,63808_u16,64306_u16,46919_u16,8607_u16,27925_u16,54863_u16];
_4 = (_15.0,);
_4.0 = !_14;
_8 = _11;
_20 = _1;
_10 = _13 - _13;
_11 = [16956_u16,41117_u16,44512_u16,50274_u16,55058_u16,2197_u16,2407_u16,23599_u16];
_22 = _10;
_8 = [59960_u16,32874_u16,10761_u16,35556_u16,55861_u16,62838_u16,34797_u16,44123_u16];
_6 = [908_u16,59432_u16,10429_u16,6145_u16,48655_u16,7038_u16,344_u16,25262_u16];
_19 = [1658750238_u32,1928726544_u32,1645010636_u32];
_13 = _22;
_10 = -_22;
_23 = [46897_u16,51548_u16,18024_u16,32994_u16,62678_u16,9376_u16,30068_u16,21873_u16];
_9 = _20 | _1;
_22 = RET as i32;
_9 = !_20;
Goto(bb4)
}
bb4 = {
_15.0 = !_3;
_5.0 = !_17;
Goto(bb5)
}
bb5 = {
RET = '\u{ab435}';
RET = '\u{e7508}';
_9 = _20;
_12 = [41513_u16,56912_u16,36794_u16,26877_u16,1206_u16,36189_u16,54788_u16,30283_u16];
_25 = [_10,_13,_13,_10,_10];
_7 = (-19765_i16) as f32;
_17 = !_5.0;
_16 = [_21];
_30 = _10 as f32;
_15.0 = !_17;
RET = '\u{ddc77}';
_12 = [53296_u16,48056_u16,22431_u16,63991_u16,15126_u16,59727_u16,63506_u16,19771_u16];
_4 = _15;
_3 = !_17;
Call(_8 = core::intrinsics::transmute(_12), bb6, UnwindUnreachable())
}
bb6 = {
_15 = (_14,);
_31 = [RET,RET,RET,RET,RET,RET,RET,RET];
_29 = [18272_u16];
_15 = (_4.0,);
_31 = [RET,RET,RET,RET,RET,RET,RET,RET];
_20 = _15.0 as u128;
RET = '\u{5fa67}';
_24 = _16;
_3 = !_5.0;
_21 = 13117_i16 as u64;
_21 = 2204515738508173277_u64;
Goto(bb7)
}
bb7 = {
_4.0 = !_17;
_27 = 18238_u16 << _1;
_27 = !42562_u16;
_29 = [_27];
_20 = _1 + _9;
_35 = [77923942918156270633817013303162212968_i128,(-154544627875439721377065800240342360394_i128),42816330847877867310738944130186515615_i128,(-17684019764483746840612217008000914083_i128)];
_21 = !11331686066045521907_u64;
RET = '\u{f5bfa}';
_35 = [(-41923898074488668115016251469779870407_i128),82672249361929888471725609048312718072_i128,(-79475241189554462641685937944722639339_i128),(-113093875812587752741153178139278859049_i128)];
_7 = -_30;
Goto(bb8)
}
bb8 = {
_32 = [(-108177388742684898842542277767821480769_i128),122647696119048484364557436850250111486_i128,47665758250779914851088555930510902231_i128,(-63660395835544893803504623085952261275_i128)];
_26 = [18956_i16,19357_i16,19650_i16,(-6665_i16),(-11070_i16),(-10798_i16)];
RET = '\u{7ccb7}';
_11 = _8;
_25 = [_10,_13,_22,_22,_13];
_6 = [_27,_27,_27,_27,_27,_27,_27,_27];
RET = '\u{96d1d}';
Goto(bb9)
}
bb9 = {
_17 = !_15.0;
_37.2 = 13926_i16;
_13 = _10;
_26 = [_37.2,_37.2,_37.2,_37.2,_37.2,_37.2];
_25 = [_22,_13,_10,_13,_22];
_37.1 = !_27;
_10 = -_13;
_36 = _13 >= _10;
_7 = _30 * _30;
_15.0 = !_4.0;
RET = '\u{e5312}';
_12 = [_27,_27,_37.1,_37.1,_27,_27,_27,_37.1];
_23 = [_37.1,_37.1,_37.1,_27,_27,_37.1,_27,_27];
match _37.2 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb4,
13926 => bb10,
_ => bb6
}
}
bb10 = {
_32 = [105882804797763005743561508436299317739_i128,(-105088982010519905227851572146062318483_i128),(-65632674148815784708282764718501871316_i128),(-59765288567063067941249894775658521482_i128)];
_9 = _20;
_7 = -_30;
_39 = [_21];
_21 = 5162836740518466204_u64;
_6 = [_37.1,_27,_37.1,_37.1,_27,_27,_37.1,_27];
_20 = _9 + _9;
Goto(bb11)
}
bb11 = {
_35 = _32;
_31 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = '\u{b8a8e}';
_20 = !_9;
_28 = !_37.1;
_20 = !_9;
_19 = [1909714037_u32,4024114960_u32,3169574740_u32];
_22 = _10;
_18 = [_27];
_11 = _12;
_30 = _7;
_9 = _1;
_19 = [1525378941_u32,4057988337_u32,2493990579_u32];
_37.3 = core::ptr::addr_of_mut!(_38);
_7 = _30;
_26 = [_37.2,_37.2,_37.2,_37.2,_37.2,_37.2];
_37.0 = _37.2;
_38 = (-9223372036854775808_isize);
_12 = [_37.1,_27,_28,_28,_27,_28,_27,_37.1];
_5 = _15;
_21 = 3190555248245977361_u64 * 9325473410873129378_u64;
match _37.2 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb12,
13926 => bb14,
_ => bb13
}
}
bb12 = {
_4.0 = !_17;
_27 = 18238_u16 << _1;
_27 = !42562_u16;
_29 = [_27];
_20 = _1 + _9;
_35 = [77923942918156270633817013303162212968_i128,(-154544627875439721377065800240342360394_i128),42816330847877867310738944130186515615_i128,(-17684019764483746840612217008000914083_i128)];
_21 = !11331686066045521907_u64;
RET = '\u{f5bfa}';
_35 = [(-41923898074488668115016251469779870407_i128),82672249361929888471725609048312718072_i128,(-79475241189554462641685937944722639339_i128),(-113093875812587752741153178139278859049_i128)];
_7 = -_30;
Goto(bb8)
}
bb13 = {
_17 = !_15.0;
_37.2 = 13926_i16;
_13 = _10;
_26 = [_37.2,_37.2,_37.2,_37.2,_37.2,_37.2];
_25 = [_22,_13,_10,_13,_22];
_37.1 = !_27;
_10 = -_13;
_36 = _13 >= _10;
_7 = _30 * _30;
_15.0 = !_4.0;
RET = '\u{e5312}';
_12 = [_27,_27,_37.1,_37.1,_27,_27,_27,_37.1];
_23 = [_37.1,_37.1,_37.1,_27,_27,_37.1,_27,_27];
match _37.2 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb4,
13926 => bb10,
_ => bb6
}
}
bb14 = {
_25 = [_22,_22,_10,_10,_10];
_22 = _13 & _10;
_1 = !_20;
_15.0 = _5.0;
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(7_usize, 14_usize, Move(_14), 22_usize, Move(_22), 32_usize, Move(_32), 38_usize, Move(_38)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(7_usize, 28_usize, Move(_28), 27_usize, Move(_27), 29_usize, Move(_29), 4_usize, Move(_4)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(7_usize, 11_usize, Move(_11), 16_usize, Move(_16), 26_usize, Move(_26), 19_usize, Move(_19)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(7_usize, 17_usize, Move(_17), 9_usize, Move(_9), 23_usize, Move(_23), 21_usize, Move(_21)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_46 = dump_var(7_usize, 36_usize, Move(_36), 47_usize, _47, 47_usize, _47, 47_usize, _47), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [u64; 1],mut _2: bool,mut _3: bool,mut _4: bool,mut _5: [u16; 8],mut _6: (bool,),mut _7: [u16; 8],mut _8: (bool,),mut _9: bool,mut _10: bool,mut _11: (bool,)) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _12: f32;
let _13: u128;
let _14: bool;
let _15: u128;
let _16: [u64; 1];
let _17: Adt52;
let _18: Adt53;
let _19: i128;
let _20: isize;
let _21: isize;
let _22: bool;
let _23: [char; 8];
let _24: ([i128; 4], [u16; 8]);
let _25: [i128; 4];
let _26: isize;
let _27: [char; 6];
let _28: char;
let _29: [i32; 5];
let _30: i32;
let _31: [usize; 3];
let _32: [u16; 1];
let _33: char;
let _34: *mut [u64; 1];
let _35: char;
let _36: isize;
let _37: [char; 8];
let _38: u128;
let _39: [u32; 3];
let _40: isize;
let _41: (i16, u16, i16, *mut isize);
let _42: ();
let _43: ();
{
RET = _7;
_8.0 = _9;
_5 = RET;
_8.0 = _9 != _9;
_5 = RET;
_6 = _11;
_1 = [10255833828338810748_u64];
_8.0 = _2 < _11.0;
_13 = 96471305734173626238178728994628677085_u128 + 318535262389768887837261939352547818767_u128;
_1 = [18426477092449809128_u64];
_2 = _11.0;
_10 = !_8.0;
_3 = _10 == _6.0;
_9 = _6.0 == _3;
_10 = _6.0 >= _9;
_1 = [18062039142934915369_u64];
_10 = _8.0 != _8.0;
_6.0 = _10 ^ _3;
RET = [34141_u16,11022_u16,48737_u16,11782_u16,33265_u16,9539_u16,62906_u16,18524_u16];
_7 = [18815_u16,48394_u16,25077_u16,40434_u16,4049_u16,53906_u16,44166_u16,50201_u16];
_3 = !_6.0;
RET = [25332_u16,61162_u16,7195_u16,48860_u16,64362_u16,57122_u16,57733_u16,22339_u16];
_12 = (-70_i8) as f32;
_6 = _8;
_1 = [12355179763084619862_u64];
_13 = !243972177940458596256126448002132962182_u128;
Goto(bb1)
}
bb1 = {
_11.0 = !_3;
_12 = (-9223372036854775808_isize) as f32;
_8.0 = !_11.0;
_15 = _13;
_14 = !_11.0;
_6.0 = _14 > _3;
_13 = _15 >> _15;
_12 = 9223372036854775807_isize as f32;
_7 = [57449_u16,2626_u16,55866_u16,54389_u16,60952_u16,55338_u16,37740_u16,61930_u16];
_6 = (_8.0,);
_8 = (_3,);
_8 = (_10,);
_8 = (_14,);
_10 = _3;
_11.0 = _3;
RET = [21654_u16,1051_u16,34266_u16,21653_u16,41146_u16,55862_u16,10414_u16,16133_u16];
_16 = [14243683120415033138_u64];
RET = [35856_u16,45043_u16,24664_u16,44218_u16,14131_u16,41413_u16,53058_u16,46478_u16];
_2 = !_9;
_2 = _14 > _3;
_8.0 = !_14;
_11 = (_10,);
_6.0 = !_8.0;
Call(RET = fn9(_10, _2, _10, _2, _8.0, _2, _11.0, _8.0, _2), bb2, UnwindUnreachable())
}
bb2 = {
RET = [7908_u16,57669_u16,10617_u16,51239_u16,12691_u16,22893_u16,11276_u16,58940_u16];
_20 = _13 as isize;
_11.0 = !_6.0;
_3 = _11.0;
_5 = [21635_u16,5674_u16,32_u16,39681_u16,64922_u16,46472_u16,38010_u16,3548_u16];
_5 = _7;
Goto(bb3)
}
bb3 = {
_10 = !_8.0;
_11.0 = _4;
_2 = !_14;
_6 = (_2,);
_12 = 42652_u16 as f32;
_6 = _8;
_22 = _2 != _6.0;
_13 = _15;
_19 = '\u{49454}' as i128;
_21 = _22 as isize;
_8 = (_10,);
_23 = ['\u{3d676}','\u{2f9fe}','\u{50c52}','\u{ea4ba}','\u{12fa8}','\u{6c62c}','\u{b449b}','\u{5f90a}'];
RET = [12651_u16,60237_u16,60126_u16,45642_u16,43874_u16,16832_u16,61210_u16,41636_u16];
_9 = _4;
_3 = _8.0 & _22;
_11.0 = !_2;
_24.1 = [51957_u16,23511_u16,3377_u16,44997_u16,19670_u16,39256_u16,38456_u16,29580_u16];
_22 = !_14;
_8 = (_22,);
_16 = _1;
_1 = [1752844651908401619_u64];
_6 = _11;
_11 = (_10,);
_8 = (_22,);
Goto(bb4)
}
bb4 = {
Goto(bb5)
}
bb5 = {
_6 = (_14,);
_10 = _11.0 & _2;
_11.0 = _3 < _10;
_5 = [37127_u16,47073_u16,8054_u16,21409_u16,54047_u16,8707_u16,20280_u16,53313_u16];
_2 = _10;
_15 = !_13;
Goto(bb6)
}
bb6 = {
_12 = 1_i16 as f32;
_8 = (_4,);
_12 = (-32591_i16) as f32;
Goto(bb7)
}
bb7 = {
_26 = 1472_i16 as isize;
_20 = !_21;
_16 = [6021529404229108511_u64];
_2 = _10 != _3;
_14 = !_3;
_8 = _11;
_24.1 = _7;
_24.1 = [8191_u16,42487_u16,62441_u16,49908_u16,60740_u16,56216_u16,4144_u16,50584_u16];
_24.0 = [_19,_19,_19,_19];
Goto(bb8)
}
bb8 = {
_6.0 = _3;
_1 = [2898415776353027886_u64];
_13 = _15;
_8.0 = !_11.0;
RET = [2043_u16,5938_u16,41591_u16,22715_u16,29150_u16,44275_u16,33090_u16,14681_u16];
_1 = [6238645780302026606_u64];
_27 = ['\u{fc59d}','\u{cab2a}','\u{b98f8}','\u{100c71}','\u{265b0}','\u{6fd57}'];
Goto(bb9)
}
bb9 = {
_31 = [16873205227255138367_usize,6640594726350996529_usize,1638445065443211185_usize];
_8 = (_10,);
_14 = _22;
_31 = [6_usize,0_usize,5_usize];
_28 = '\u{10632b}';
_21 = _20 & _20;
_15 = _13;
_14 = _10;
_21 = _20;
_14 = _11.0 | _22;
Goto(bb10)
}
bb10 = {
_22 = _8.0;
_11.0 = !_10;
_9 = _10 ^ _22;
_20 = _21 * _21;
_24.0 = [_19,_19,_19,_19];
_8 = (_11.0,);
_19 = 63848756777465325999117935298505587893_i128 & (-43659639984236772835248043287901928121_i128);
_31 = [3194758414265249369_usize,6257457939173231215_usize,2618907423591191201_usize];
_28 = '\u{b6f08}';
_29 = [133977718_i32,1675915587_i32,969147825_i32,1777414817_i32,1489080485_i32];
_33 = _28;
_34 = core::ptr::addr_of_mut!(_1);
_8.0 = _4 > _2;
_13 = 110284476_u32 as u128;
_10 = !_2;
RET = _7;
_6.0 = _8.0 == _9;
_14 = !_2;
Goto(bb11)
}
bb11 = {
_12 = 16207261684639444194_usize as f32;
_24.1 = [50690_u16,21464_u16,39180_u16,61818_u16,10187_u16,55164_u16,58971_u16,38076_u16];
_17 = Adt52::Variant2 { fld0: _24,fld1: _34 };
_32 = [36612_u16];
place!(Field::<([i128; 4], [u16; 8])>(Variant(_17, 2), 0)).1 = _7;
_5 = [23219_u16,26017_u16,4763_u16,8674_u16,30830_u16,6281_u16,2416_u16,46888_u16];
_6.0 = _20 == _21;
_33 = _28;
_4 = !_3;
_7 = Field::<([i128; 4], [u16; 8])>(Variant(_17, 2), 0).1;
_23 = [_33,_28,_28,_28,_28,_33,_33,_28];
(*_34) = _16;
_24 = (Field::<([i128; 4], [u16; 8])>(Variant(_17, 2), 0).0, _7);
SetDiscriminant(_17, 3);
_4 = !_8.0;
_34 = core::ptr::addr_of_mut!((*_34));
place!(Field::<u8>(Variant(_17, 3), 0)) = 180_u8;
match Field::<u8>(Variant(_17, 3), 0) {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
180 => bb18,
_ => bb17
}
}
bb12 = {
_11.0 = !_3;
_12 = (-9223372036854775808_isize) as f32;
_8.0 = !_11.0;
_15 = _13;
_14 = !_11.0;
_6.0 = _14 > _3;
_13 = _15 >> _15;
_12 = 9223372036854775807_isize as f32;
_7 = [57449_u16,2626_u16,55866_u16,54389_u16,60952_u16,55338_u16,37740_u16,61930_u16];
_6 = (_8.0,);
_8 = (_3,);
_8 = (_10,);
_8 = (_14,);
_10 = _3;
_11.0 = _3;
RET = [21654_u16,1051_u16,34266_u16,21653_u16,41146_u16,55862_u16,10414_u16,16133_u16];
_16 = [14243683120415033138_u64];
RET = [35856_u16,45043_u16,24664_u16,44218_u16,14131_u16,41413_u16,53058_u16,46478_u16];
_2 = !_9;
_2 = _14 > _3;
_8.0 = !_14;
_11 = (_10,);
_6.0 = !_8.0;
Call(RET = fn9(_10, _2, _10, _2, _8.0, _2, _11.0, _8.0, _2), bb2, UnwindUnreachable())
}
bb13 = {
_31 = [16873205227255138367_usize,6640594726350996529_usize,1638445065443211185_usize];
_8 = (_10,);
_14 = _22;
_31 = [6_usize,0_usize,5_usize];
_28 = '\u{10632b}';
_21 = _20 & _20;
_15 = _13;
_14 = _10;
_21 = _20;
_14 = _11.0 | _22;
Goto(bb10)
}
bb14 = {
_6.0 = _3;
_1 = [2898415776353027886_u64];
_13 = _15;
_8.0 = !_11.0;
RET = [2043_u16,5938_u16,41591_u16,22715_u16,29150_u16,44275_u16,33090_u16,14681_u16];
_1 = [6238645780302026606_u64];
_27 = ['\u{fc59d}','\u{cab2a}','\u{b98f8}','\u{100c71}','\u{265b0}','\u{6fd57}'];
Goto(bb9)
}
bb15 = {
_26 = 1472_i16 as isize;
_20 = !_21;
_16 = [6021529404229108511_u64];
_2 = _10 != _3;
_14 = !_3;
_8 = _11;
_24.1 = _7;
_24.1 = [8191_u16,42487_u16,62441_u16,49908_u16,60740_u16,56216_u16,4144_u16,50584_u16];
_24.0 = [_19,_19,_19,_19];
Goto(bb8)
}
bb16 = {
RET = [7908_u16,57669_u16,10617_u16,51239_u16,12691_u16,22893_u16,11276_u16,58940_u16];
_20 = _13 as isize;
_11.0 = !_6.0;
_3 = _11.0;
_5 = [21635_u16,5674_u16,32_u16,39681_u16,64922_u16,46472_u16,38010_u16,3548_u16];
_5 = _7;
Goto(bb3)
}
bb17 = {
_6 = (_14,);
_10 = _11.0 & _2;
_11.0 = _3 < _10;
_5 = [37127_u16,47073_u16,8054_u16,21409_u16,54047_u16,8707_u16,20280_u16,53313_u16];
_2 = _10;
_15 = !_13;
Goto(bb6)
}
bb18 = {
_14 = _11.0 > _11.0;
place!(Field::<((u32,), bool, u8)>(Variant(_17, 3), 3)).1 = _8.0;
place!(Field::<((u32,), bool, u8)>(Variant(_17, 3), 3)).0.0 = 4058529394_u32;
_36 = -_20;
_8 = (_11.0,);
_41.1 = 18157_u16 - 4511_u16;
_15 = Field::<((u32,), bool, u8)>(Variant(_17, 3), 3).0.0 as u128;
Goto(bb19)
}
bb19 = {
Call(_42 = dump_var(8_usize, 23_usize, Move(_23), 24_usize, Move(_24), 11_usize, Move(_11), 7_usize, Move(_7)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_42 = dump_var(8_usize, 16_usize, Move(_16), 14_usize, Move(_14), 22_usize, Move(_22), 15_usize, Move(_15)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_42 = dump_var(8_usize, 36_usize, Move(_36), 20_usize, Move(_20), 29_usize, Move(_29), 5_usize, Move(_5)), bb22, UnwindUnreachable())
}
bb22 = {
Call(_42 = dump_var(8_usize, 2_usize, Move(_2), 31_usize, Move(_31), 43_usize, _43, 43_usize, _43), bb23, UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _10: i8;
let _11: Adt62;
let _12: f32;
let _13: [usize; 3];
let _14: [char; 6];
let _15: Adt50;
let _16: bool;
let _17: f64;
let _18: [i64; 8];
let _19: i32;
let _20: f32;
let _21: [u16; 1];
let _22: i64;
let _23: i16;
let _24: (u32,);
let _25: i128;
let _26: [char; 6];
let _27: Adt57;
let _28: [u16; 1];
let _29: [i128; 4];
let _30: [i64; 8];
let _31: [i16; 6];
let _32: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize);
let _33: bool;
let _34: Adt49;
let _35: [usize; 3];
let _36: f32;
let _37: Adt53;
let _38: [i128; 4];
let _39: (bool,);
let _40: f64;
let _41: (bool,);
let _42: [u64; 1];
let _43: char;
let _44: Adt52;
let _45: [char; 6];
let _46: u128;
let _47: ((u32,), bool, u8);
let _48: isize;
let _49: ();
let _50: ();
{
RET = [60332_u16,39251_u16,59293_u16,10759_u16,2519_u16,25370_u16,36701_u16,17198_u16];
_1 = _9 != _4;
_4 = _1 & _7;
_7 = _8;
_7 = !_3;
_5 = _4;
RET = [30726_u16,9463_u16,35377_u16,3727_u16,42232_u16,32772_u16,59140_u16,17575_u16];
_2 = !_5;
_10 = 3_i8;
RET = [56547_u16,28214_u16,14400_u16,38368_u16,50017_u16,2634_u16,10614_u16,52160_u16];
RET = [52800_u16,12691_u16,44029_u16,53107_u16,29582_u16,11619_u16,62540_u16,13726_u16];
_9 = !_5;
_10 = 48_u8 as i8;
RET = [58245_u16,53259_u16,43883_u16,63546_u16,56772_u16,35646_u16,44886_u16,9314_u16];
_6 = _2 < _3;
_4 = !_9;
_10 = (-31_i8);
_10 = 84_i8 - (-16_i8);
_4 = _2 & _7;
_1 = _8;
_4 = _3 <= _2;
_8 = _9 < _6;
Goto(bb1)
}
bb1 = {
_10 = 61_i8 + 115_i8;
_12 = 245310953995319842118258804178775045959_u128 as f32;
_9 = !_1;
_3 = !_8;
_10 = (-28_i8) >> (-12056_i16);
_9 = _5 < _3;
_3 = !_8;
_2 = _8 >= _3;
_10 = 24664_i16 as i8;
RET = [27406_u16,2549_u16,9820_u16,3110_u16,60675_u16,64967_u16,58677_u16,32569_u16];
RET = [65418_u16,9485_u16,22675_u16,32779_u16,42052_u16,36060_u16,46781_u16,7602_u16];
_3 = _1;
_13 = [10839410109802727890_usize,16634408854938827497_usize,1770043192048619685_usize];
_5 = _2;
_12 = 3_usize as f32;
_3 = !_9;
_8 = !_6;
_6 = _5;
_9 = _2;
_8 = !_1;
_10 = _12 as i8;
Goto(bb2)
}
bb2 = {
_16 = !_9;
_2 = !_9;
_2 = !_5;
_18 = [6845006791539154359_i64,(-2104504176332441791_i64),1565442827146884616_i64,5650909992474947746_i64,(-2695739862641713033_i64),243095824794023227_i64,5296947492281494601_i64,(-8194104553447800797_i64)];
_6 = _4 > _5;
_12 = 164_u8 as f32;
_20 = -_12;
_6 = _9;
_6 = _8 | _16;
_3 = _16 | _9;
_3 = !_16;
_17 = _10 as f64;
Goto(bb3)
}
bb3 = {
_23 = !26210_i16;
_3 = _16;
_21 = [38516_u16];
_23 = -(-7491_i16);
Call(_11 = fn10(_6, _16, _16, _5, _6, _16, _7), bb4, UnwindUnreachable())
}
bb4 = {
_19 = -99023634_i32;
_20 = _12 + _12;
Goto(bb5)
}
bb5 = {
_19 = 1455312158_i32 - 528970137_i32;
_22 = (-9038618906526880850_i64);
_23 = Field::<f64>(Variant(_11, 1), 0) as i16;
_17 = -Field::<f64>(Variant(_11, 1), 0);
_3 = !_9;
_12 = -_20;
_4 = _16 != _3;
_22 = Field::<f64>(Variant(_11, 1), 0) as i64;
_3 = !_6;
_24 = (4058873954_u32,);
_6 = !_7;
_1 = !_5;
RET = [263_u16,60985_u16,13864_u16,8385_u16,18005_u16,39052_u16,23306_u16,1246_u16];
_1 = _8;
_26 = ['\u{bfbe1}','\u{8ce3e}','\u{acd74}','\u{135cc}','\u{c2f76}','\u{9b3be}'];
_9 = _3;
_26 = ['\u{a4ce7}','\u{1b3e1}','\u{b8a2e}','\u{7b588}','\u{c3c4d}','\u{c571}'];
_14 = ['\u{fd2b6}','\u{10bea2}','\u{c903a}','\u{629ab}','\u{c2cea}','\u{447e9}'];
RET = [32682_u16,23498_u16,9926_u16,36354_u16,6236_u16,5961_u16,27278_u16,6387_u16];
place!(Field::<f64>(Variant(_11, 1), 0)) = _17 - _17;
_6 = _4;
_20 = _12;
_23 = Field::<i16>(Variant(_11, 1), 3);
_30 = _18;
RET = [14314_u16,30827_u16,47878_u16,17951_u16,36281_u16,43965_u16,45229_u16,11392_u16];
Goto(bb6)
}
bb6 = {
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_8 = _3 < _9;
_8 = !_2;
_7 = _3 | _16;
SetDiscriminant(_11, 1);
_15 = Adt50::Variant2 { fld0: _24.0,fld1: 113340667408403063922661183947196061080_i128 };
_28 = _21;
_32.1.3 = (-47534295662360971645037266679108386405_i128) as u64;
_25 = -146217307023143733117506703295307711696_i128;
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_14 = ['\u{94406}','\u{104220}','\u{b86ca}','\u{41d4b}','\u{1d11c}','\u{5ecb4}'];
_20 = _12 - _12;
_20 = Field::<u32>(Variant(_15, 2), 0) as f32;
_22 = (-6720291500154268139_i64) + (-9124172921992472363_i64);
_24.0 = 486417451574411769_usize as u32;
_29 = [_25,_25,_25,_25];
place!(Field::<i16>(Variant(_11, 1), 3)) = _23 - _23;
_33 = _9 == _1;
_19 = !(-1373028560_i32);
_21 = _28;
_32.1.4 = '\u{aa665}';
_1 = !_5;
place!(Field::<i128>(Variant(_15, 2), 1)) = _25;
_32.1.2 = _32.1.3 * _32.1.3;
_6 = _2 & _1;
_13 = [8454721700608566758_usize,10268016408982612227_usize,7734802388742431634_usize];
_14 = _26;
_32.0 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb7 = {
_17 = _10 as f64;
_28 = _21;
_31 = [Field::<i16>(Variant(_11, 1), 3),Field::<i16>(Variant(_11, 1), 3),Field::<i16>(Variant(_11, 1), 3),Field::<i16>(Variant(_11, 1), 3),_23,_23];
place!(Field::<i16>(Variant(_11, 1), 3)) = _10 as i16;
_25 = Field::<i128>(Variant(_15, 2), 1) * Field::<i128>(Variant(_15, 2), 1);
_33 = _9;
_32.2 = !_22;
SetDiscriminant(_15, 0);
_26 = _14;
_3 = _1;
place!(Field::<(u32,)>(Variant(_15, 0), 2)) = _24;
_35 = [1_usize,2_usize,16255802599944467394_usize];
_10 = (-116_i8) >> _19;
_4 = !_8;
place!(Field::<(u32,)>(Variant(_15, 0), 2)).0 = _24.0;
_24.0 = _19 as u32;
place!(Field::<f64>(Variant(_11, 1), 0)) = -_17;
_5 = _33;
RET = [59710_u16,2874_u16,40395_u16,27747_u16,32307_u16,21426_u16,28587_u16,43093_u16];
_10 = !(-84_i8);
_21 = [32233_u16];
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_15, 0), 1)).1 = _32.2 as u8;
_22 = _32.2 & _32.2;
_19 = !(-850747773_i32);
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_15, 0), 1)).1 = !25_u8;
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_15, 0), 1)).3 = !_32.1.2;
_10 = 1_i8 << _22;
_22 = _32.2;
_21 = [55591_u16];
match _23 {
0 => bb6,
1 => bb5,
2 => bb8,
9765 => bb10,
_ => bb9
}
}
bb8 = {
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_8 = _3 < _9;
_8 = !_2;
_7 = _3 | _16;
SetDiscriminant(_11, 1);
_15 = Adt50::Variant2 { fld0: _24.0,fld1: 113340667408403063922661183947196061080_i128 };
_28 = _21;
_32.1.3 = (-47534295662360971645037266679108386405_i128) as u64;
_25 = -146217307023143733117506703295307711696_i128;
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_14 = ['\u{94406}','\u{104220}','\u{b86ca}','\u{41d4b}','\u{1d11c}','\u{5ecb4}'];
_20 = _12 - _12;
_20 = Field::<u32>(Variant(_15, 2), 0) as f32;
_22 = (-6720291500154268139_i64) + (-9124172921992472363_i64);
_24.0 = 486417451574411769_usize as u32;
_29 = [_25,_25,_25,_25];
place!(Field::<i16>(Variant(_11, 1), 3)) = _23 - _23;
_33 = _9 == _1;
_19 = !(-1373028560_i32);
_21 = _28;
_32.1.4 = '\u{aa665}';
_1 = !_5;
place!(Field::<i128>(Variant(_15, 2), 1)) = _25;
_32.1.2 = _32.1.3 * _32.1.3;
_6 = _2 & _1;
_13 = [8454721700608566758_usize,10268016408982612227_usize,7734802388742431634_usize];
_14 = _26;
_32.0 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb9 = {
_10 = 61_i8 + 115_i8;
_12 = 245310953995319842118258804178775045959_u128 as f32;
_9 = !_1;
_3 = !_8;
_10 = (-28_i8) >> (-12056_i16);
_9 = _5 < _3;
_3 = !_8;
_2 = _8 >= _3;
_10 = 24664_i16 as i8;
RET = [27406_u16,2549_u16,9820_u16,3110_u16,60675_u16,64967_u16,58677_u16,32569_u16];
RET = [65418_u16,9485_u16,22675_u16,32779_u16,42052_u16,36060_u16,46781_u16,7602_u16];
_3 = _1;
_13 = [10839410109802727890_usize,16634408854938827497_usize,1770043192048619685_usize];
_5 = _2;
_12 = 3_usize as f32;
_3 = !_9;
_8 = !_6;
_6 = _5;
_9 = _2;
_8 = !_1;
_10 = _12 as i8;
Goto(bb2)
}
bb10 = {
place!(Field::<(u32,)>(Variant(_15, 0), 2)) = (_24.0,);
_8 = _1 | _2;
place!(Field::<bool>(Variant(_15, 0), 0)) = _33 == _1;
_15 = Adt50::Variant2 { fld0: _24.0,fld1: _25 };
_38 = [Field::<i128>(Variant(_15, 2), 1),_25,Field::<i128>(Variant(_15, 2), 1),Field::<i128>(Variant(_15, 2), 1)];
_36 = _12 - _20;
_20 = -_36;
_32.1.4 = '\u{9d7a0}';
place!(Field::<f64>(Variant(_11, 1), 0)) = -_17;
place!(Field::<f64>(Variant(_11, 1), 0)) = _32.1.2 as f64;
_32.1.1 = !183_u8;
_24 = (Field::<u32>(Variant(_15, 2), 0),);
match _23 {
0 => bb1,
1 => bb9,
2 => bb7,
3 => bb8,
4 => bb5,
5 => bb6,
6 => bb11,
9765 => bb13,
_ => bb12
}
}
bb11 = {
_16 = !_9;
_2 = !_9;
_2 = !_5;
_18 = [6845006791539154359_i64,(-2104504176332441791_i64),1565442827146884616_i64,5650909992474947746_i64,(-2695739862641713033_i64),243095824794023227_i64,5296947492281494601_i64,(-8194104553447800797_i64)];
_6 = _4 > _5;
_12 = 164_u8 as f32;
_20 = -_12;
_6 = _9;
_6 = _8 | _16;
_3 = _16 | _9;
_3 = !_16;
_17 = _10 as f64;
Goto(bb3)
}
bb12 = {
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_8 = _3 < _9;
_8 = !_2;
_7 = _3 | _16;
SetDiscriminant(_11, 1);
_15 = Adt50::Variant2 { fld0: _24.0,fld1: 113340667408403063922661183947196061080_i128 };
_28 = _21;
_32.1.3 = (-47534295662360971645037266679108386405_i128) as u64;
_25 = -146217307023143733117506703295307711696_i128;
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_14 = ['\u{94406}','\u{104220}','\u{b86ca}','\u{41d4b}','\u{1d11c}','\u{5ecb4}'];
_20 = _12 - _12;
_20 = Field::<u32>(Variant(_15, 2), 0) as f32;
_22 = (-6720291500154268139_i64) + (-9124172921992472363_i64);
_24.0 = 486417451574411769_usize as u32;
_29 = [_25,_25,_25,_25];
place!(Field::<i16>(Variant(_11, 1), 3)) = _23 - _23;
_33 = _9 == _1;
_19 = !(-1373028560_i32);
_21 = _28;
_32.1.4 = '\u{aa665}';
_1 = !_5;
place!(Field::<i128>(Variant(_15, 2), 1)) = _25;
_32.1.2 = _32.1.3 * _32.1.3;
_6 = _2 & _1;
_13 = [8454721700608566758_usize,10268016408982612227_usize,7734802388742431634_usize];
_14 = _26;
_32.0 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb13 = {
_31 = [_23,_23,_23,_23,_23,_23];
place!(Field::<[i8; 5]>(Variant(_11, 1), 2)) = [_10,_10,_10,_10,_10];
SetDiscriminant(_15, 1);
_16 = _6;
_35 = _13;
_6 = _5;
_13 = [4_usize,7844411767832758278_usize,6514719644864045002_usize];
_24.0 = 1571578332_u32;
_35 = [415740277149017147_usize,9622426474731131391_usize,9705288722859360224_usize];
place!(Field::<((u32,), bool, u8)>(Variant(_15, 1), 1)).0 = _24;
_39.0 = _33 ^ _16;
match _23 {
0 => bb6,
1 => bb10,
2 => bb3,
3 => bb4,
4 => bb14,
5 => bb15,
9765 => bb17,
_ => bb16
}
}
bb14 = {
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_8 = _3 < _9;
_8 = !_2;
_7 = _3 | _16;
SetDiscriminant(_11, 1);
_15 = Adt50::Variant2 { fld0: _24.0,fld1: 113340667408403063922661183947196061080_i128 };
_28 = _21;
_32.1.3 = (-47534295662360971645037266679108386405_i128) as u64;
_25 = -146217307023143733117506703295307711696_i128;
_30 = [_22,_22,_22,_22,_22,_22,_22,_22];
_14 = ['\u{94406}','\u{104220}','\u{b86ca}','\u{41d4b}','\u{1d11c}','\u{5ecb4}'];
_20 = _12 - _12;
_20 = Field::<u32>(Variant(_15, 2), 0) as f32;
_22 = (-6720291500154268139_i64) + (-9124172921992472363_i64);
_24.0 = 486417451574411769_usize as u32;
_29 = [_25,_25,_25,_25];
place!(Field::<i16>(Variant(_11, 1), 3)) = _23 - _23;
_33 = _9 == _1;
_19 = !(-1373028560_i32);
_21 = _28;
_32.1.4 = '\u{aa665}';
_1 = !_5;
place!(Field::<i128>(Variant(_15, 2), 1)) = _25;
_32.1.2 = _32.1.3 * _32.1.3;
_6 = _2 & _1;
_13 = [8454721700608566758_usize,10268016408982612227_usize,7734802388742431634_usize];
_14 = _26;
_32.0 = core::ptr::addr_of!(RET);
Goto(bb7)
}
bb15 = {
_10 = 61_i8 + 115_i8;
_12 = 245310953995319842118258804178775045959_u128 as f32;
_9 = !_1;
_3 = !_8;
_10 = (-28_i8) >> (-12056_i16);
_9 = _5 < _3;
_3 = !_8;
_2 = _8 >= _3;
_10 = 24664_i16 as i8;
RET = [27406_u16,2549_u16,9820_u16,3110_u16,60675_u16,64967_u16,58677_u16,32569_u16];
RET = [65418_u16,9485_u16,22675_u16,32779_u16,42052_u16,36060_u16,46781_u16,7602_u16];
_3 = _1;
_13 = [10839410109802727890_usize,16634408854938827497_usize,1770043192048619685_usize];
_5 = _2;
_12 = 3_usize as f32;
_3 = !_9;
_8 = !_6;
_6 = _5;
_9 = _2;
_8 = !_1;
_10 = _12 as i8;
Goto(bb2)
}
bb16 = {
_17 = _10 as f64;
_28 = _21;
_31 = [Field::<i16>(Variant(_11, 1), 3),Field::<i16>(Variant(_11, 1), 3),Field::<i16>(Variant(_11, 1), 3),Field::<i16>(Variant(_11, 1), 3),_23,_23];
place!(Field::<i16>(Variant(_11, 1), 3)) = _10 as i16;
_25 = Field::<i128>(Variant(_15, 2), 1) * Field::<i128>(Variant(_15, 2), 1);
_33 = _9;
_32.2 = !_22;
SetDiscriminant(_15, 0);
_26 = _14;
_3 = _1;
place!(Field::<(u32,)>(Variant(_15, 0), 2)) = _24;
_35 = [1_usize,2_usize,16255802599944467394_usize];
_10 = (-116_i8) >> _19;
_4 = !_8;
place!(Field::<(u32,)>(Variant(_15, 0), 2)).0 = _24.0;
_24.0 = _19 as u32;
place!(Field::<f64>(Variant(_11, 1), 0)) = -_17;
_5 = _33;
RET = [59710_u16,2874_u16,40395_u16,27747_u16,32307_u16,21426_u16,28587_u16,43093_u16];
_10 = !(-84_i8);
_21 = [32233_u16];
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_15, 0), 1)).1 = _32.2 as u8;
_22 = _32.2 & _32.2;
_19 = !(-850747773_i32);
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_15, 0), 1)).1 = !25_u8;
place!(Field::<(*mut [u64; 1], u8, u64, u64, char)>(Variant(_15, 0), 1)).3 = !_32.1.2;
_10 = 1_i8 << _22;
_22 = _32.2;
_21 = [55591_u16];
match _23 {
0 => bb6,
1 => bb5,
2 => bb8,
9765 => bb10,
_ => bb9
}
}
bb17 = {
_21 = [26974_u16];
_19 = (-1543665263_i32) * 1128313051_i32;
_23 = Field::<i16>(Variant(_11, 1), 3) >> _32.1.1;
_36 = _12;
_35 = [6_usize,2075080370765078809_usize,5_usize];
place!(Field::<*mut [u64; 1]>(Variant(_11, 1), 1)) = core::ptr::addr_of_mut!(_42);
_41 = (_8,);
_20 = _12;
_20 = -_12;
place!(Field::<((u32,), bool, u8)>(Variant(_15, 1), 1)).1 = _4 != _6;
place!(Field::<((u32,), bool, u8)>(Variant(_15, 1), 1)).2 = _32.1.1 - _32.1.1;
SetDiscriminant(_11, 1);
_14 = [_32.1.4,_32.1.4,_32.1.4,_32.1.4,_32.1.4,_32.1.4];
_23 = 31154_i16;
_42 = [_32.1.2];
_19 = (-1096897189_i32) & 948120777_i32;
place!(Field::<i16>(Variant(_11, 1), 3)) = _23;
_32.1.4 = '\u{7e5c5}';
_38 = [_25,_25,_25,_25];
Goto(bb18)
}
bb18 = {
Call(_49 = dump_var(9_usize, 19_usize, Move(_19), 33_usize, Move(_33), 39_usize, Move(_39), 22_usize, Move(_22)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_49 = dump_var(9_usize, 28_usize, Move(_28), 2_usize, Move(_2), 38_usize, Move(_38), 31_usize, Move(_31)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_49 = dump_var(9_usize, 42_usize, Move(_42), 5_usize, Move(_5), 29_usize, Move(_29), 41_usize, Move(_41)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_49 = dump_var(9_usize, 24_usize, Move(_24), 10_usize, Move(_10), 25_usize, Move(_25), 50_usize, _50), bb22, UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool) -> Adt62 {
mir! {
type RET = Adt62;
let _8: Adt54;
let _9: Adt56;
let _10: bool;
let _11: [u64; 1];
let _12: [char; 6];
let _13: bool;
let _14: u64;
let _15: i64;
let _16: (u128, u32, *mut u16, ((u32,), bool, u8));
let _17: ([u32; 3], *const [u16; 8], *const [u16; 8]);
let _18: (bool,);
let _19: Adt64;
let _20: [i32; 5];
let _21: *mut isize;
let _22: Adt59;
let _23: [u16; 1];
let _24: isize;
let _25: (i16, u16, i16, *mut isize);
let _26: bool;
let _27: i8;
let _28: [u16; 8];
let _29: isize;
let _30: (u128, u32, *mut u16, ((u32,), bool, u8));
let _31: bool;
let _32: (bool,);
let _33: isize;
let _34: isize;
let _35: char;
let _36: u8;
let _37: f64;
let _38: u128;
let _39: Adt53;
let _40: [i128; 4];
let _41: [u16; 1];
let _42: *mut u16;
let _43: [char; 6];
let _44: ([i128; 4], [u16; 8]);
let _45: *mut *mut u16;
let _46: isize;
let _47: f32;
let _48: Adt57;
let _49: *mut [char; 8];
let _50: bool;
let _51: u8;
let _52: ();
let _53: ();
{
_2 = !_4;
_2 = _6 | _6;
_4 = _1;
_9.fld4 = [51_i8,40_i8,122_i8,77_i8,(-128_i8)];
_2 = _4 > _5;
_10 = _3;
_5 = _6;
Goto(bb1)
}
bb1 = {
_6 = _2;
_9.fld7.0 = !_2;
_3 = _5;
_10 = _1 == _5;
_12 = ['\u{2c50d}','\u{1cb0}','\u{86315}','\u{fc659}','\u{24b99}','\u{bf450}'];
_9.fld3 = 145_u8 as f32;
_9.fld7.0 = !_3;
_1 = _5 > _6;
Goto(bb2)
}
bb2 = {
_9.fld5 = 1366287431_i32;
_3 = _1 <= _6;
_2 = _7 <= _1;
_1 = _3;
_9.fld5 = 27570_u16 as i32;
_5 = _7;
_13 = _10;
_9.fld3 = 6452023119851557681_u64 as f32;
_4 = !_1;
_9.fld3 = 4845367237481019547_usize as f32;
_12 = ['\u{ad91f}','\u{939fc}','\u{51cda}','\u{e2beb}','\u{19af7}','\u{8fe24}'];
Goto(bb3)
}
bb3 = {
_9.fld7 = (_13,);
_10 = !_3;
_2 = !_4;
_2 = !_3;
_7 = _4 & _2;
_1 = _13 >= _3;
_8 = Adt54::Variant2 { fld0: '\u{4ba03}' };
_14 = 310498534205215714054027428739845059595_u128 as u64;
_6 = _3 == _10;
_6 = _2;
_15 = 2473446415942620897_i64 * 8031791117024772765_i64;
_10 = _1 >= _2;
_12 = ['\u{925a6}','\u{a0443}','\u{f3589}','\u{6cb4e}','\u{37351}','\u{72f7a}'];
_6 = _10;
_1 = _2 & _9.fld7.0;
_9.fld7.0 = _13;
_16.3.2 = 27_u8;
_15 = (-8498402759460623189_i64);
_16.3.1 = _9.fld7.0;
_1 = !_9.fld7.0;
_16.3.2 = 60_u8 | 3_u8;
_14 = 14719160399851083956_u64;
Goto(bb4)
}
bb4 = {
_9.fld3 = 4_usize as f32;
place!(Field::<char>(Variant(_8, 2), 0)) = '\u{9dd47}';
_2 = _6 | _10;
_15 = 7127958026665876639_i64 | 283621788612387824_i64;
SetDiscriminant(_8, 0);
_18 = (_9.fld7.0,);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.0 = core::ptr::addr_of_mut!(_11);
_7 = _6;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.1 = _5 as u8;
_9.fld5 = !732788208_i32;
_6 = _5;
_16.1 = 41009_u16 as u32;
_16.3.1 = _2 == _13;
_7 = _18.0;
_3 = _13;
_16.0 = !253998815746682624719841392227279229843_u128;
_9.fld3 = (-39_i8) as f32;
_11 = [_14];
_9.fld3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0).1.1 as f32;
_16.0 = !104358718089213061946848479131637582831_u128;
_3 = _7 < _18.0;
_16.3.0.0 = (-3_i8) as u32;
Goto(bb5)
}
bb5 = {
_16.3.0.0 = _16.1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.0 = core::ptr::addr_of_mut!(_11);
_6 = !_4;
_6 = _1 ^ _2;
_18 = (_16.3.1,);
_14 = 18138531587512781761_u64 & 9717503875331597467_u64;
_23 = [13564_u16];
_1 = _2;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).2 = _16.3.0.0 as i64;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.3 = !_14;
_13 = _3 >= _16.3.1;
_1 = !_13;
_8 = Adt54::Variant2 { fld0: '\u{b7a4a}' };
_17.0 = [_16.3.0.0,_16.3.0.0,_16.1];
_16.3.0.0 = !_16.1;
_20 = [_9.fld5,_9.fld5,_9.fld5,_9.fld5,_9.fld5];
_1 = _4 | _18.0;
_14 = _16.1 as u64;
_9.fld7 = _18;
_11 = [_14];
_1 = _6 ^ _3;
_20 = [_9.fld5,_9.fld5,_9.fld5,_9.fld5,_9.fld5];
_20 = [_9.fld5,_9.fld5,_9.fld5,_9.fld5,_9.fld5];
_18 = (_1,);
_12 = ['\u{ce37b}','\u{e7a74}','\u{50310}','\u{5cec3}','\u{82247}','\u{82d8e}'];
_4 = _16.3.1 < _10;
Call(_21 = fn11(_6, _18.0, _16.3.1), bb6, UnwindUnreachable())
}
bb6 = {
_16.3.0 = (_16.1,);
_15 = (-72564707773850702268002116396891159359_i128) as i64;
_9.fld4 = [13_i8,110_i8,(-21_i8),66_i8,44_i8];
Goto(bb7)
}
bb7 = {
_6 = _9.fld3 >= _9.fld3;
_16.3.1 = !_5;
_7 = _6;
_12 = ['\u{45d6c}','\u{a9e7e}','\u{a11a9}','\u{c3242}','\u{55ecc}','\u{3a6fb}'];
_15 = !1349384912064620124_i64;
_9.fld7.0 = _4;
_16.3.1 = _6;
_18 = (_9.fld7.0,);
_16.3.0 = (_16.1,);
_24 = 9223372036854775807_isize;
_15 = _4 as i64;
_9.fld7 = _18;
_9.fld5 = 1360787447_i32;
_23 = [30271_u16];
_12 = ['\u{30082}','\u{c33a7}','\u{e0bc5}','\u{46ff7}','\u{fa42d}','\u{671de}'];
_25.2 = -12810_i16;
_16.3.0.0 = _16.1 << _16.1;
_27 = -(-78_i8);
_9.fld4 = [_27,_27,_27,_27,_27];
_27 = (-93_i8) * (-53_i8);
_21 = core::ptr::addr_of_mut!(_24);
_25 = ((-12516_i16), 43252_u16, (-19559_i16), _21);
_26 = _5;
_16.3.2 = _25.2 as u8;
_25 = (10980_i16, 62192_u16, (-9080_i16), _21);
_6 = _10 ^ _4;
place!(Field::<char>(Variant(_8, 2), 0)) = '\u{10c84f}';
match _25.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
62192 => bb9,
_ => bb8
}
}
bb8 = {
_9.fld5 = 1366287431_i32;
_3 = _1 <= _6;
_2 = _7 <= _1;
_1 = _3;
_9.fld5 = 27570_u16 as i32;
_5 = _7;
_13 = _10;
_9.fld3 = 6452023119851557681_u64 as f32;
_4 = !_1;
_9.fld3 = 4845367237481019547_usize as f32;
_12 = ['\u{ad91f}','\u{939fc}','\u{51cda}','\u{e2beb}','\u{19af7}','\u{8fe24}'];
Goto(bb3)
}
bb9 = {
_10 = !_1;
_9.fld1 = core::ptr::addr_of_mut!(_28);
_29 = (*_21);
_23 = [_25.1];
_29 = _16.3.2 as isize;
_2 = _1 == _6;
_16.2 = core::ptr::addr_of_mut!(_25.1);
_9.fld2 = core::ptr::addr_of!(_25.1);
_21 = core::ptr::addr_of_mut!(_29);
_15 = 6842455992056172052_i64 | (-8484063422672466815_i64);
_15 = (-1426153504065674543_i64) + (-8384171990667817362_i64);
_29 = _15 as isize;
_16.1 = _16.3.0.0 >> _25.1;
_16.3.0 = (_16.1,);
_25.1 = 49963_u16;
_9.fld5 = 481045825_i32;
_8 = Adt54::Variant2 { fld0: '\u{bd749}' };
_30 = (_16.0, _16.3.0.0, _16.2, _16.3);
_30.1 = !_16.1;
_8 = Adt54::Variant2 { fld0: '\u{2c8fc}' };
_12 = ['\u{4054c}','\u{4d827}','\u{5ac66}','\u{f3cf3}','\u{1d0f4}','\u{10dabc}'];
Goto(bb10)
}
bb10 = {
_30.3 = (_16.3.0, _4, _16.3.2);
_28 = [_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1];
Call(_2 = fn14(_16, _16.3.1, _16.3.1, _13, _13, _30.3, _10, _16.3, _30.3.1), bb11, UnwindUnreachable())
}
bb11 = {
_17.1 = core::ptr::addr_of!(_28);
_16.3.1 = _4;
_9.fld4 = [_27,_27,_27,_27,_27];
place!(Field::<char>(Variant(_8, 2), 0)) = '\u{b3d98}';
_9.fld2 = core::ptr::addr_of!(_25.1);
_29 = _24;
_30.3.0 = (_16.3.0.0,);
_32 = (_6,);
_35 = Field::<char>(Variant(_8, 2), 0);
_17.2 = core::ptr::addr_of!(_28);
(*_21) = _24;
_31 = !_10;
_24 = (*_21);
_30.2 = core::ptr::addr_of_mut!(_25.1);
Call(_30.3 = fn15(_32.0, _6, _3, _5, _32), bb12, UnwindUnreachable())
}
bb12 = {
_38 = _30.0 * _30.0;
_9.fld3 = _24 as f32;
_25.1 = 43392_u16 + 41520_u16;
_33 = -_29;
_9.fld7 = (_1,);
_34 = (*_21);
_24 = _15 as isize;
_17.0 = [_30.1,_16.3.0.0,_16.3.0.0];
_16.3.0.0 = !_30.1;
_9.fld1 = core::ptr::addr_of_mut!(_28);
_24 = _35 as isize;
_7 = !_9.fld7.0;
_30.1 = _16.3.0.0 % _30.3.0.0;
_9.fld4 = [_27,_27,_27,_27,_27];
_18 = (_6,);
_37 = _16.3.2 as f64;
place!(Field::<char>(Variant(_8, 2), 0)) = _35;
_25 = (25537_i16, 37018_u16, (-8276_i16), _21);
_26 = !_4;
_27 = !59_i8;
_16.3.1 = !_4;
match _25.0 {
25537 => bb14,
_ => bb13
}
}
bb13 = {
_9.fld3 = 4_usize as f32;
place!(Field::<char>(Variant(_8, 2), 0)) = '\u{9dd47}';
_2 = _6 | _10;
_15 = 7127958026665876639_i64 | 283621788612387824_i64;
SetDiscriminant(_8, 0);
_18 = (_9.fld7.0,);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.0 = core::ptr::addr_of_mut!(_11);
_7 = _6;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.1 = _5 as u8;
_9.fld5 = !732788208_i32;
_6 = _5;
_16.1 = 41009_u16 as u32;
_16.3.1 = _2 == _13;
_7 = _18.0;
_3 = _13;
_16.0 = !253998815746682624719841392227279229843_u128;
_9.fld3 = (-39_i8) as f32;
_11 = [_14];
_9.fld3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0).1.1 as f32;
_16.0 = !104358718089213061946848479131637582831_u128;
_3 = _7 < _18.0;
_16.3.0.0 = (-3_i8) as u32;
Goto(bb5)
}
bb14 = {
_9.fld7.0 = !_32.0;
_34 = _16.0 as isize;
_40 = [(-19600757713172636471754810355288316790_i128),(-62487059585745954267745650069225054432_i128),(-131564568269267769356553319917094120747_i128),63385007705372354292001780902195249843_i128];
SetDiscriminant(_8, 1);
_26 = _13 != _32.0;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).1.0 = core::ptr::addr_of_mut!(_11);
_30.2 = _16.2;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).2 = _15 << _16.1;
_16.3 = _30.3;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).1.1 = _9.fld5 as u8;
match _25.1 {
0 => bb8,
1 => bb10,
2 => bb15,
3 => bb16,
4 => bb17,
37018 => bb19,
_ => bb18
}
}
bb15 = {
_9.fld7 = (_13,);
_10 = !_3;
_2 = !_4;
_2 = !_3;
_7 = _4 & _2;
_1 = _13 >= _3;
_8 = Adt54::Variant2 { fld0: '\u{4ba03}' };
_14 = 310498534205215714054027428739845059595_u128 as u64;
_6 = _3 == _10;
_6 = _2;
_15 = 2473446415942620897_i64 * 8031791117024772765_i64;
_10 = _1 >= _2;
_12 = ['\u{925a6}','\u{a0443}','\u{f3589}','\u{6cb4e}','\u{37351}','\u{72f7a}'];
_6 = _10;
_1 = _2 & _9.fld7.0;
_9.fld7.0 = _13;
_16.3.2 = 27_u8;
_15 = (-8498402759460623189_i64);
_16.3.1 = _9.fld7.0;
_1 = !_9.fld7.0;
_16.3.2 = 60_u8 | 3_u8;
_14 = 14719160399851083956_u64;
Goto(bb4)
}
bb16 = {
_6 = _9.fld3 >= _9.fld3;
_16.3.1 = !_5;
_7 = _6;
_12 = ['\u{45d6c}','\u{a9e7e}','\u{a11a9}','\u{c3242}','\u{55ecc}','\u{3a6fb}'];
_15 = !1349384912064620124_i64;
_9.fld7.0 = _4;
_16.3.1 = _6;
_18 = (_9.fld7.0,);
_16.3.0 = (_16.1,);
_24 = 9223372036854775807_isize;
_15 = _4 as i64;
_9.fld7 = _18;
_9.fld5 = 1360787447_i32;
_23 = [30271_u16];
_12 = ['\u{30082}','\u{c33a7}','\u{e0bc5}','\u{46ff7}','\u{fa42d}','\u{671de}'];
_25.2 = -12810_i16;
_16.3.0.0 = _16.1 << _16.1;
_27 = -(-78_i8);
_9.fld4 = [_27,_27,_27,_27,_27];
_27 = (-93_i8) * (-53_i8);
_21 = core::ptr::addr_of_mut!(_24);
_25 = ((-12516_i16), 43252_u16, (-19559_i16), _21);
_26 = _5;
_16.3.2 = _25.2 as u8;
_25 = (10980_i16, 62192_u16, (-9080_i16), _21);
_6 = _10 ^ _4;
place!(Field::<char>(Variant(_8, 2), 0)) = '\u{10c84f}';
match _25.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb5,
62192 => bb9,
_ => bb8
}
}
bb17 = {
_10 = !_1;
_9.fld1 = core::ptr::addr_of_mut!(_28);
_29 = (*_21);
_23 = [_25.1];
_29 = _16.3.2 as isize;
_2 = _1 == _6;
_16.2 = core::ptr::addr_of_mut!(_25.1);
_9.fld2 = core::ptr::addr_of!(_25.1);
_21 = core::ptr::addr_of_mut!(_29);
_15 = 6842455992056172052_i64 | (-8484063422672466815_i64);
_15 = (-1426153504065674543_i64) + (-8384171990667817362_i64);
_29 = _15 as isize;
_16.1 = _16.3.0.0 >> _25.1;
_16.3.0 = (_16.1,);
_25.1 = 49963_u16;
_9.fld5 = 481045825_i32;
_8 = Adt54::Variant2 { fld0: '\u{bd749}' };
_30 = (_16.0, _16.3.0.0, _16.2, _16.3);
_30.1 = !_16.1;
_8 = Adt54::Variant2 { fld0: '\u{2c8fc}' };
_12 = ['\u{4054c}','\u{4d827}','\u{5ac66}','\u{f3cf3}','\u{1d0f4}','\u{10dabc}'];
Goto(bb10)
}
bb18 = {
_30.3 = (_16.3.0, _4, _16.3.2);
_28 = [_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1];
Call(_2 = fn14(_16, _16.3.1, _16.3.1, _13, _13, _30.3, _10, _16.3, _30.3.1), bb11, UnwindUnreachable())
}
bb19 = {
_40 = [(-111445563294613725257635476061005117417_i128),58496662397910067754247780610563800214_i128,103458041521676353303240345585075215661_i128,82942533252982470282015230114165249464_i128];
_3 = _30.3.1 | _30.3.1;
_43 = _12;
_12 = [_35,_35,_35,_35,_35,_35];
place!(Field::<i64>(Variant(_8, 1), 6)) = -Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).2;
_9.fld7 = (_18.0,);
_43 = [_35,_35,_35,_35,_35,_35];
_30.3.2 = !_16.3.2;
_9.fld6 = Adt51::Variant1 { fld0: _25,fld1: _30.2,fld2: _25.1,fld3: _27,fld4: 9412281035046726799_usize,fld5: _32,fld6: _37,fld7: _28 };
(*_21) = _24 << Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).1;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).2 = Field::<i64>(Variant(_8, 1), 6);
Goto(bb20)
}
bb20 = {
place!(Field::<u128>(Variant(_8, 1), 0)) = _38 * _38;
_9.fld7.0 = !Field::<(bool,)>(Variant(_9.fld6, 1), 5).0;
_16.3 = (_30.3.0, _6, _30.3.2);
_33 = (*_21);
_4 = _26;
_14 = 8963646075377205542_u64 << (*_21);
_33 = _30.1 as isize;
place!(Field::<i64>(Variant(_8, 1), 6)) = -Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).2;
_31 = !_32.0;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0)).0 = Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).2;
Goto(bb21)
}
bb21 = {
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).2 = Field::<i64>(Variant(_8, 1), 6) * Field::<i64>(Variant(_8, 1), 6);
_16.3.2 = Field::<i64>(Variant(_8, 1), 6) as u8;
_6 = !_32.0;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).1.2 = !_14;
place!(Field::<usize>(Variant(_9.fld6, 1), 4)) = 2_usize;
_30.0 = _38;
_20 = [_9.fld5,_9.fld5,_9.fld5,_9.fld5,_9.fld5];
_16.3.2 = Field::<usize>(Variant(_9.fld6, 1), 4) as u8;
_36 = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.1;
_41 = [_25.1];
place!(Field::<[i128; 4]>(Variant(_8, 1), 4)) = [(-96932568841492092358675132001692263964_i128),90450047970175499870551747795019235360_i128,(-4695117822158197081786589916313047893_i128),(-150911417782424900638716130204899190645_i128)];
_18.0 = !_7;
place!(Field::<i8>(Variant(_9.fld6, 1), 3)) = _27;
_9.fld3 = _30.3.2 as f32;
(*_21) = _33 >> Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.1;
_9.fld1 = core::ptr::addr_of_mut!(_28);
match _25.0 {
0 => bb11,
1 => bb20,
2 => bb22,
3 => bb23,
25537 => bb25,
_ => bb24
}
}
bb22 = {
_6 = _2;
_9.fld7.0 = !_2;
_3 = _5;
_10 = _1 == _5;
_12 = ['\u{2c50d}','\u{1cb0}','\u{86315}','\u{fc659}','\u{24b99}','\u{bf450}'];
_9.fld3 = 145_u8 as f32;
_9.fld7.0 = !_3;
_1 = _5 > _6;
Goto(bb2)
}
bb23 = {
_30.3 = (_16.3.0, _4, _16.3.2);
_28 = [_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1,_25.1];
Call(_2 = fn14(_16, _16.3.1, _16.3.1, _13, _13, _30.3, _10, _16.3, _30.3.1), bb11, UnwindUnreachable())
}
bb24 = {
_9.fld3 = 4_usize as f32;
place!(Field::<char>(Variant(_8, 2), 0)) = '\u{9dd47}';
_2 = _6 | _10;
_15 = 7127958026665876639_i64 | 283621788612387824_i64;
SetDiscriminant(_8, 0);
_18 = (_9.fld7.0,);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.0 = core::ptr::addr_of_mut!(_11);
_7 = _6;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0)).1.1 = _5 as u8;
_9.fld5 = !732788208_i32;
_6 = _5;
_16.1 = 41009_u16 as u32;
_16.3.1 = _2 == _13;
_7 = _18.0;
_3 = _13;
_16.0 = !253998815746682624719841392227279229843_u128;
_9.fld3 = (-39_i8) as f32;
_11 = [_14];
_9.fld3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 0), 0).1.1 as f32;
_16.0 = !104358718089213061946848479131637582831_u128;
_3 = _7 < _18.0;
_16.3.0.0 = (-3_i8) as u32;
Goto(bb5)
}
bb25 = {
SetDiscriminant(_9.fld6, 0);
_5 = !_10;
place!(Field::<[char; 6]>(Variant(_9.fld6, 0), 0)) = [_35,_35,_35,_35,_35,_35];
place!(Field::<*const *mut u16>(Variant(_9.fld6, 0), 2)) = core::ptr::addr_of!(_30.2);
place!(Field::<*const *mut u16>(Variant(_9.fld6, 0), 2)) = core::ptr::addr_of!(_30.2);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_9.fld6, 0), 3)).3 = core::ptr::addr_of_mut!(_34);
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).1.3 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.2 >> _30.1;
place!(Field::<char>(Variant(_8, 1), 1)) = _35;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).1.3 = _14 | Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.2;
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_9.fld6, 0), 3)).2 = !_15;
_9.fld3 = _30.0 as f32;
_25.1 = !52202_u16;
place!(Field::<([i128; 4], [u16; 8])>(Variant(_9.fld6, 0), 1)).0 = [(-77983725103199950499038475328509666103_i128),143057571653052486319527431334855258190_i128,2975855890265051648342159073652680721_i128,64413309943085981478756400160931784290_i128];
_13 = _30.3.1;
_32 = (_16.3.1,);
_25 = (13824_i16, 37904_u16, 9765_i16, _21);
_9.fld6 = Adt51::Variant1 { fld0: _25,fld1: _30.2,fld2: _25.1,fld3: _27,fld4: 262015124259326478_usize,fld5: _18,fld6: _37,fld7: _28 };
_35 = Field::<char>(Variant(_8, 1), 1);
_25.1 = Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).1;
place!(Field::<u128>(Variant(_8, 1), 0)) = Field::<i8>(Variant(_9.fld6, 1), 3) as u128;
_7 = _32.0 > _26;
place!(Field::<u16>(Variant(_9.fld6, 1), 2)) = _25.1 ^ _25.1;
place!(Field::<u128>(Variant(_8, 1), 0)) = _30.0 >> Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).2;
_44.1 = [_25.1,_25.1,Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).1,Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).1,_25.1,Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).1,_25.1];
_6 = _5 == _16.3.1;
_16.3 = (_30.3.0, _26, _30.3.2);
Call(_24 = fn16(Field::<*mut u16>(Variant(_9.fld6, 1), 1), _3, _26, _3), bb26, UnwindUnreachable())
}
bb26 = {
_30.3.0.0 = _2 as u32;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0)).2 = _25.0;
_37 = -Field::<f64>(Variant(_9.fld6, 1), 6);
place!(Field::<i64>(Variant(_8, 1), 6)) = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).2 << Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).2;
place!(Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0)) = _25;
_42 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_9.fld6, 1), 2)));
place!(Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2)).1.4 = Field::<char>(Variant(_8, 1), 1);
_30.0 = !Field::<u128>(Variant(_8, 1), 0);
RET = Adt62::Variant1 { fld0: _37,fld1: Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.0,fld2: _9.fld4,fld3: Field::<(i16, u16, i16, *mut isize)>(Variant(_9.fld6, 1), 0).2 };
_14 = Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.3 >> _29;
_45 = core::ptr::addr_of_mut!(place!(Field::<*mut u16>(Variant(_9.fld6, 1), 1)));
_9.fld3 = _30.3.0.0 as f32;
_51 = !Field::<(*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize)>(Variant(_8, 1), 2).1.1;
Goto(bb27)
}
bb27 = {
Call(_52 = dump_var(10_usize, 40_usize, Move(_40), 51_usize, Move(_51), 24_usize, Move(_24), 1_usize, Move(_1)), bb28, UnwindUnreachable())
}
bb28 = {
Call(_52 = dump_var(10_usize, 23_usize, Move(_23), 3_usize, Move(_3), 4_usize, Move(_4), 29_usize, Move(_29)), bb29, UnwindUnreachable())
}
bb29 = {
Call(_52 = dump_var(10_usize, 10_usize, Move(_10), 12_usize, Move(_12), 14_usize, Move(_14), 18_usize, Move(_18)), bb30, UnwindUnreachable())
}
bb30 = {
Call(_52 = dump_var(10_usize, 11_usize, Move(_11), 41_usize, Move(_41), 7_usize, Move(_7), 5_usize, Move(_5)), bb31, UnwindUnreachable())
}
bb31 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: bool,mut _2: bool,mut _3: bool) -> *mut isize {
mir! {
type RET = *mut isize;
let _4: (bool,);
let _5: isize;
let _6: [u64; 1];
let _7: *mut isize;
let _8: isize;
let _9: i32;
let _10: u16;
let _11: Adt59;
let _12: *const u16;
let _13: isize;
let _14: char;
let _15: [u16; 8];
let _16: *mut *mut u16;
let _17: u32;
let _18: [i32; 5];
let _19: isize;
let _20: [i16; 6];
let _21: ();
let _22: ();
{
_3 = _2;
_3 = _1;
_4.0 = _3 < _3;
_3 = _4.0 & _2;
RET = core::ptr::addr_of_mut!(_5);
(*RET) = (-9223372036854775808_isize) * 9223372036854775807_isize;
_4 = (_1,);
_5 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_5 = 84_isize;
_6 = [16826568664180839979_u64];
_1 = _2 ^ _4.0;
_2 = _3 <= _4.0;
_6 = [7497431777419630027_u64];
_6 = [10039917545783512203_u64];
_1 = !_3;
Call((*RET) = fn12(_4, _4, _3, _2, _2, _4.0, _4, _3, _2, _4.0, _4.0, _1), bb1, UnwindUnreachable())
}
bb1 = {
_2 = _1 ^ _1;
_4.0 = !_1;
(*RET) = (-38_isize);
_4 = (_3,);
_8 = -(*RET);
(*RET) = 3395262652608414042_i64 as isize;
(*RET) = !_8;
(*RET) = _2 as isize;
RET = core::ptr::addr_of_mut!(_8);
_4.0 = _5 <= _5;
(*RET) = 12531_u16 as isize;
_2 = _1;
_2 = _4.0 <= _4.0;
_10 = !42928_u16;
_6 = [1502119668286123013_u64];
(*RET) = _5 ^ _5;
(*RET) = -_5;
_1 = _2;
_5 = (*RET);
_8 = _5 >> _5;
_6 = [12931378263357619929_u64];
_4.0 = _1 < _2;
_4 = (_3,);
_9 = !(-1430727655_i32);
(*RET) = (-9234_i16) as isize;
_2 = _3;
RET = core::ptr::addr_of_mut!((*RET));
Goto(bb2)
}
bb2 = {
_1 = _4.0;
RET = core::ptr::addr_of_mut!((*RET));
(*RET) = !_5;
_3 = _8 != (*RET);
(*RET) = _5;
(*RET) = _5 >> _5;
_9 = !1463447067_i32;
_13 = _5;
_1 = _3 ^ _2;
_7 = core::ptr::addr_of_mut!((*RET));
_4 = (_2,);
_15 = [_10,_10,_10,_10,_10,_10,_10,_10];
_10 = 47844_u16 & 60814_u16;
Goto(bb3)
}
bb3 = {
_10 = !45940_u16;
_3 = _1 <= _1;
RET = _7;
_15 = [_10,_10,_10,_10,_10,_10,_10,_10];
(*RET) = !_5;
_4.0 = _3;
_14 = '\u{9a7f0}';
_9 = 1517202192_i32;
_14 = '\u{e48be}';
(*_7) = _5;
_3 = (*_7) >= (*_7);
_10 = !59447_u16;
_6 = [7791974830137446703_u64];
_17 = (*_7) as u32;
(*_7) = -_5;
(*RET) = 6966262677100408734091146117392503862_i128 as isize;
_20 = [22261_i16,(-28423_i16),(-1248_i16),(-3868_i16),(-28231_i16),(-30971_i16)];
_18 = [_9,_9,_9,_9,_9];
_1 = !_3;
Goto(bb4)
}
bb4 = {
Call(_21 = dump_var(11_usize, 10_usize, Move(_10), 20_usize, Move(_20), 6_usize, Move(_6), 5_usize, Move(_5)), bb5, UnwindUnreachable())
}
bb5 = {
Call(_21 = dump_var(11_usize, 17_usize, Move(_17), 2_usize, Move(_2), 15_usize, Move(_15), 22_usize, _22), bb6, UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: (bool,),mut _2: (bool,),mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: (bool,),mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool) -> isize {
mir! {
type RET = isize;
let _13: usize;
let _14: isize;
let _15: f64;
let _16: [i16; 6];
let _17: isize;
let _18: (*mut [u64; 1], u8, u64, u64, char);
let _19: i32;
let _20: char;
let _21: char;
let _22: bool;
let _23: [u64; 1];
let _24: *mut [u64; 1];
let _25: (u32,);
let _26: u32;
let _27: (bool,);
let _28: usize;
let _29: [i16; 6];
let _30: Adt53;
let _31: Adt52;
let _32: u16;
let _33: [char; 6];
let _34: *mut [char; 8];
let _35: isize;
let _36: Adt52;
let _37: (u128, u32, *mut u16, ((u32,), bool, u8));
let _38: Adt50;
let _39: [char; 8];
let _40: *mut *mut u16;
let _41: bool;
let _42: *mut isize;
let _43: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize);
let _44: i128;
let _45: ([i128; 4], [u16; 8]);
let _46: [char; 6];
let _47: f32;
let _48: [i32; 5];
let _49: ();
let _50: ();
{
_2.0 = !_7.0;
_2 = _1;
RET = 9223372036854775807_isize - 9223372036854775807_isize;
RET = 4836761508447458172_i64 as isize;
_7 = _2;
_1 = (_2.0,);
_1.0 = !_7.0;
RET = (-15567_i16) as isize;
_3 = !_1.0;
_9 = !_12;
_10 = !_3;
_8 = !_10;
_2 = (_3,);
_10 = _11 <= _5;
RET = 1943356135_u32 as isize;
_13 = 305341208_i32 as usize;
_3 = _9;
RET = (-9223372036854775808_isize) << _13;
Call(_5 = fn13(_2, _7, _3, _2, _7, _7.0, _10), bb1, UnwindUnreachable())
}
bb1 = {
_2 = (_6,);
_7 = (_2.0,);
_13 = 16995341452026372278_usize;
_7.0 = _2.0;
_10 = !_12;
_7 = (_1.0,);
_5 = _8;
Goto(bb2)
}
bb2 = {
_1 = _7;
_3 = !_1.0;
_10 = _2.0;
_14 = -RET;
_5 = _6;
_1 = (_11,);
_13 = !8321257187349273043_usize;
_1.0 = _12 != _6;
_8 = _12 <= _11;
_10 = _2.0;
_16 = [14625_i16,(-5405_i16),(-7785_i16),29499_i16,(-3636_i16),(-10448_i16)];
_10 = !_9;
_7 = (_9,);
_15 = 11344777837563065596_u64 as f64;
_17 = (-83357775225207539197202608231396080154_i128) as isize;
_11 = _8;
_8 = !_5;
_14 = RET;
_5 = !_8;
_7 = _2;
_6 = _2.0 & _9;
_14 = RET;
_4 = _3;
_5 = _12;
_18.4 = '\u{10518}';
RET = !_14;
Goto(bb3)
}
bb3 = {
_3 = _9;
_2.0 = _10;
_18.3 = 15865114205337043169_u64;
_2 = (_1.0,);
_18.2 = _18.3;
_2.0 = _4;
_1.0 = _7.0 ^ _8;
_11 = !_6;
_15 = 107_i8 as f64;
_4 = !_9;
_2.0 = _11 >= _6;
_1 = (_2.0,);
_18.1 = 224_u8;
RET = _18.4 as isize;
_18.2 = _18.3;
_21 = _18.4;
_22 = !_3;
_15 = 1723675489_u32 as f64;
_17 = _14 + _14;
_22 = !_6;
_2 = _1;
_19 = !(-1737847995_i32);
_18.3 = _18.2;
_17 = _14 & _14;
_21 = _18.4;
RET = _17;
match _18.2 {
0 => bb1,
1 => bb2,
2 => bb4,
15865114205337043169 => bb6,
_ => bb5
}
}
bb4 = {
_1 = _7;
_3 = !_1.0;
_10 = _2.0;
_14 = -RET;
_5 = _6;
_1 = (_11,);
_13 = !8321257187349273043_usize;
_1.0 = _12 != _6;
_8 = _12 <= _11;
_10 = _2.0;
_16 = [14625_i16,(-5405_i16),(-7785_i16),29499_i16,(-3636_i16),(-10448_i16)];
_10 = !_9;
_7 = (_9,);
_15 = 11344777837563065596_u64 as f64;
_17 = (-83357775225207539197202608231396080154_i128) as isize;
_11 = _8;
_8 = !_5;
_14 = RET;
_5 = !_8;
_7 = _2;
_6 = _2.0 & _9;
_14 = RET;
_4 = _3;
_5 = _12;
_18.4 = '\u{10518}';
RET = !_14;
Goto(bb3)
}
bb5 = {
_2 = (_6,);
_7 = (_2.0,);
_13 = 16995341452026372278_usize;
_7.0 = _2.0;
_10 = !_12;
_7 = (_1.0,);
_5 = _8;
Goto(bb2)
}
bb6 = {
_16 = [15232_i16,4847_i16,9944_i16,31602_i16,21318_i16,(-32359_i16)];
_13 = 6384429794096184326_usize;
RET = 14613_i16 as isize;
_19 = !1453695009_i32;
Call(_19 = core::intrinsics::bswap((-1187742349_i32)), bb7, UnwindUnreachable())
}
bb7 = {
_18.0 = core::ptr::addr_of_mut!(_23);
_7 = _1;
_6 = !_7.0;
_25 = (1224103989_u32,);
_7.0 = _8;
_3 = _6;
_9 = _8 >= _8;
_10 = !_4;
RET = (-4099348191450958613_i64) as isize;
_27.0 = !_5;
_23 = [_18.3];
_9 = _7.0;
_25.0 = !2999304203_u32;
_13 = 11588315875566329542_usize;
_2 = _1;
_26 = 74_i8 as u32;
_10 = !_1.0;
Goto(bb8)
}
bb8 = {
_22 = !_7.0;
_11 = _5 >= _9;
_18.0 = core::ptr::addr_of_mut!(_23);
Goto(bb9)
}
bb9 = {
_20 = _21;
_25 = (_26,);
_23 = [_18.3];
_4 = !_1.0;
_18.4 = _20;
_2.0 = !_5;
_18.2 = _18.3;
_20 = _18.4;
_32 = 5124_u16;
_29 = _16;
_1.0 = !_3;
_29 = [23046_i16,10297_i16,(-17718_i16),12334_i16,11806_i16,11638_i16];
_18.3 = !_18.2;
_11 = _2.0;
_24 = core::ptr::addr_of_mut!(_23);
_20 = _18.4;
RET = !_17;
_5 = _11 < _9;
_3 = !_5;
_35 = RET;
match _18.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb7,
15865114205337043169 => bb11,
_ => bb10
}
}
bb10 = {
_3 = _9;
_2.0 = _10;
_18.3 = 15865114205337043169_u64;
_2 = (_1.0,);
_18.2 = _18.3;
_2.0 = _4;
_1.0 = _7.0 ^ _8;
_11 = !_6;
_15 = 107_i8 as f64;
_4 = !_9;
_2.0 = _11 >= _6;
_1 = (_2.0,);
_18.1 = 224_u8;
RET = _18.4 as isize;
_18.2 = _18.3;
_21 = _18.4;
_22 = !_3;
_15 = 1723675489_u32 as f64;
_17 = _14 + _14;
_22 = !_6;
_2 = _1;
_19 = !(-1737847995_i32);
_18.3 = _18.2;
_17 = _14 & _14;
_21 = _18.4;
RET = _17;
match _18.2 {
0 => bb1,
1 => bb2,
2 => bb4,
15865114205337043169 => bb6,
_ => bb5
}
}
bb11 = {
RET = 4_i8 as isize;
_6 = !_10;
_26 = _25.0 >> _17;
_8 = _12;
_4 = _5;
_37.3.0 = (_26,);
_7 = _1;
_28 = !_13;
_2 = (_6,);
match _18.2 {
15865114205337043169 => bb13,
_ => bb12
}
}
bb12 = {
_3 = _9;
_2.0 = _10;
_18.3 = 15865114205337043169_u64;
_2 = (_1.0,);
_18.2 = _18.3;
_2.0 = _4;
_1.0 = _7.0 ^ _8;
_11 = !_6;
_15 = 107_i8 as f64;
_4 = !_9;
_2.0 = _11 >= _6;
_1 = (_2.0,);
_18.1 = 224_u8;
RET = _18.4 as isize;
_18.2 = _18.3;
_21 = _18.4;
_22 = !_3;
_15 = 1723675489_u32 as f64;
_17 = _14 + _14;
_22 = !_6;
_2 = _1;
_19 = !(-1737847995_i32);
_18.3 = _18.2;
_17 = _14 & _14;
_21 = _18.4;
RET = _17;
match _18.2 {
0 => bb1,
1 => bb2,
2 => bb4,
15865114205337043169 => bb6,
_ => bb5
}
}
bb13 = {
_32 = !26731_u16;
_11 = _8 ^ _2.0;
_26 = !_25.0;
_12 = _3;
_8 = _2.0 >= _3;
RET = _35 - _14;
_18.0 = _24;
_18.3 = _11 as u64;
_37.3.0 = _25;
(*_24) = [_18.3];
_22 = _10;
_2 = (_7.0,);
_15 = _32 as f64;
_37.1 = _25.0;
_17 = _14 >> _18.3;
_14 = _17 >> _17;
_2.0 = !_5;
_1 = (_2.0,);
_25.0 = !_37.1;
_9 = !_6;
_29 = _16;
_24 = _18.0;
_27 = _1;
_13 = !_28;
_21 = _18.4;
_24 = core::ptr::addr_of_mut!(_23);
_33 = [_20,_20,_18.4,_18.4,_21,_21];
_11 = !_1.0;
Goto(bb14)
}
bb14 = {
_8 = _6;
_18.3 = !_18.2;
_5 = !_27.0;
_37.1 = _25.0;
_41 = _4;
_18.3 = !_18.2;
_10 = !_4;
_37.3 = (_25, _22, _18.1);
_18.0 = _24;
_37.2 = core::ptr::addr_of_mut!(_32);
_43.1.1 = _37.3.2;
_43.1.4 = _18.4;
_40 = core::ptr::addr_of_mut!(_37.2);
_43.1.2 = !_18.3;
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(12_usize, 22_usize, Move(_22), 3_usize, Move(_3), 26_usize, Move(_26), 29_usize, Move(_29)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(12_usize, 17_usize, Move(_17), 5_usize, Move(_5), 9_usize, Move(_9), 16_usize, Move(_16)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(12_usize, 41_usize, Move(_41), 13_usize, Move(_13), 35_usize, Move(_35), 19_usize, Move(_19)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(12_usize, 2_usize, Move(_2), 25_usize, Move(_25), 23_usize, Move(_23), 50_usize, _50), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: (bool,),mut _2: (bool,),mut _3: bool,mut _4: (bool,),mut _5: (bool,),mut _6: bool,mut _7: bool) -> bool {
mir! {
type RET = bool;
let _8: *mut u16;
let _9: ();
let _10: ();
{
_4 = _2;
RET = !_4.0;
_2.0 = _1.0;
_1.0 = _2.0;
_7 = _6 == _2.0;
_5 = (_1.0,);
RET = _7 == _5.0;
_3 = _4.0 != RET;
_1.0 = !_2.0;
_3 = _4.0;
_4 = (_1.0,);
_2.0 = !_6;
_5 = _4;
_5 = (_2.0,);
_2.0 = _7;
_2.0 = _3 > _4.0;
_4 = _1;
_5.0 = _3 ^ _2.0;
_4.0 = _1.0 | _5.0;
_3 = _4.0;
_5 = _2;
_2 = (_7,);
_1.0 = !_5.0;
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(13_usize, 4_usize, Move(_4), 5_usize, Move(_5), 6_usize, Move(_6), 10_usize, _10), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: (u128, u32, *mut u16, ((u32,), bool, u8)),mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: ((u32,), bool, u8),mut _7: bool,mut _8: ((u32,), bool, u8),mut _9: bool) -> bool {
mir! {
type RET = bool;
let _10: char;
let _11: isize;
let _12: Adt53;
let _13: Adt59;
let _14: u64;
let _15: *const *mut u16;
let _16: u32;
let _17: ();
let _18: ();
{
_1.3.0.0 = (-1218220353_i32) as u32;
_1.3 = (_8.0, _5, _6.2);
RET = _8.1 | _4;
_1.3.0.0 = _8.0.0;
_8.1 = !_2;
_8.2 = !_1.3.2;
_6.1 = _9 == _5;
_3 = _2 ^ _9;
_2 = _6.1 ^ _6.1;
_1.3.2 = !_6.2;
_6.0.0 = _1.3.0.0;
_14 = !324209201128908124_u64;
_6.0 = (_1.1,);
_7 = _9;
_8.0.0 = !_1.1;
_7 = _6.1 >= _5;
_15 = core::ptr::addr_of!(_1.2);
_14 = !2974529648562777075_u64;
_8.1 = _1.3.1 | _4;
_6.0 = (_1.1,);
_1.3.0.0 = _6.0.0;
_1.3.0.0 = _6.0.0;
_1.1 = _1.0 as u32;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(14_usize, 6_usize, Move(_6), 14_usize, Move(_14), 7_usize, Move(_7), 4_usize, Move(_4)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: (bool,)) -> ((u32,), bool, u8) {
mir! {
type RET = ((u32,), bool, u8);
let _6: isize;
let _7: [i16; 6];
let _8: bool;
let _9: ();
let _10: ();
{
_3 = _5.0 & _4;
RET.0 = (285046394_u32,);
RET.0 = (2796248164_u32,);
RET.2 = (-23_i8) as u8;
RET.1 = _5.0;
RET.0 = (2373899251_u32,);
RET.2 = 208_u8;
RET.0 = (871392295_u32,);
_6 = RET.2 as isize;
_3 = _5.0 & RET.1;
_4 = _1;
_2 = !_1;
RET.1 = _3 <= _2;
RET.0 = (3191587857_u32,);
_8 = _4;
RET.0 = (1875212712_u32,);
RET.0 = (595813545_u32,);
RET.2 = 8080145775094632023_usize as u8;
_7 = [(-14460_i16),25693_i16,20446_i16,(-15545_i16),14493_i16,19411_i16];
RET.1 = _8;
_8 = !_3;
Goto(bb1)
}
bb1 = {
Call(_9 = dump_var(15_usize, 6_usize, Move(_6), 8_usize, Move(_8), 4_usize, Move(_4), 2_usize, Move(_2)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: *mut u16,mut _2: bool,mut _3: bool,mut _4: bool) -> isize {
mir! {
type RET = isize;
let _5: [i64; 8];
let _6: u8;
let _7: Adt56;
let _8: [i16; 6];
let _9: (bool,);
let _10: Adt61;
let _11: [char; 6];
let _12: isize;
let _13: isize;
let _14: f32;
let _15: (bool,);
let _16: ();
let _17: ();
{
RET = 9223372036854775807_isize * (-9223372036854775808_isize);
_5 = [7917667978061323674_i64,1733246972016350991_i64,(-1524640202177934169_i64),5372539479733209608_i64,(-5284123462624661627_i64),5306347322347304438_i64,1774974470776283113_i64,7735164340505122542_i64];
_4 = !_2;
_3 = (*_1) != (*_1);
RET = (-19_isize);
RET = 54_isize - 9223372036854775807_isize;
_7.fld7 = (_2,);
(*_1) = 17659171911992729828_u64 as u16;
_6 = 117_u8;
RET = (*_1) as isize;
_7.fld2 = core::ptr::addr_of!((*_1));
_7.fld5 = (-1334700335_i32) ^ (-1641689113_i32);
_7.fld4 = [(-127_i8),43_i8,(-102_i8),55_i8,(-42_i8)];
_4 = _2;
RET = 9223372036854775807_isize - 9223372036854775807_isize;
_7.fld2 = core::ptr::addr_of!((*_1));
_9 = _7.fld7;
_3 = _9.0 ^ _9.0;
_10.fld0.fld0 = 4062545859_u32;
_7.fld3 = _10.fld0.fld0 as f32;
_4 = _7.fld7.0 < _7.fld7.0;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
117 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_7.fld5 = (-5468454131842906954_i64) as i32;
_10.fld0.fld4 = 195652582964446751052820808971343507416_u128 as i16;
_8 = [_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4];
_11 = ['\u{5142d}','\u{64296}','\u{46e11}','\u{11507}','\u{8c914}','\u{63b14}'];
_6 = 160_u8;
_7.fld2 = core::ptr::addr_of!((*_1));
Goto(bb9)
}
bb9 = {
_10.fld0.fld1 = _7.fld5;
_4 = !_3;
_10.fld0.fld4 = 165654121096809653741625684904249406861_i128 as i16;
_9 = (_4,);
_8 = [_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4];
_11 = ['\u{7410b}','\u{b46ac}','\u{69842}','\u{a5e0e}','\u{85201}','\u{90470}'];
_8 = [_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4];
_8 = [_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4];
_10.fld0.fld2 = -RET;
_7.fld5 = _10.fld0.fld1 + _10.fld0.fld1;
_13 = RET;
_2 = !_9.0;
_10.fld0.fld1 = -_7.fld5;
_13 = -_10.fld0.fld2;
_7.fld2 = core::ptr::addr_of!((*_1));
_9.0 = _2 & _2;
_7.fld5 = _10.fld0.fld1;
_13 = _10.fld0.fld2;
_7.fld7 = (_9.0,);
_12 = 2764417822853873568_u64 as isize;
_9 = (_7.fld7.0,);
_7.fld7.0 = !_9.0;
_11 = ['\u{59f2d}','\u{b74e2}','\u{5ebff}','\u{8b901}','\u{5b2a0}','\u{d9432}'];
_10.fld0.fld4 = (-22034_i16) >> _6;
_7.fld5 = !_10.fld0.fld1;
_13 = _10.fld0.fld2 & _12;
_14 = _7.fld3 * _7.fld3;
_15 = _7.fld7;
Call(_7.fld2 = fn17(_3, _15.0, _3, _15), bb10, UnwindUnreachable())
}
bb10 = {
(*_1) = 62091_u16 * 13370_u16;
_4 = _7.fld7.0 ^ _3;
_7.fld2 = core::ptr::addr_of!((*_1));
_5 = [(-6447071762229443776_i64),(-8292879657640555569_i64),(-1191844731753056389_i64),(-340486778306887833_i64),1780932172846157816_i64,4812035586051004967_i64,6337924065140953985_i64,(-3613055915245719056_i64)];
_15 = _7.fld7;
match _10.fld0.fld0 {
0 => bb5,
1 => bb9,
2 => bb11,
4062545859 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_10.fld0.fld1 = -_7.fld5;
_13 = _6 as isize;
_15.0 = !_3;
_3 = !_9.0;
Goto(bb14)
}
bb14 = {
_15.0 = _3 != _4;
(*_1) = 42982_u16;
RET = !_13;
(*_1) = 12583_u16;
_10.fld0.fld2 = !RET;
_14 = _7.fld3 * _7.fld3;
_10.fld0.fld2 = RET;
_3 = !_9.0;
_8 = [_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4,_10.fld0.fld4];
_1 = core::ptr::addr_of_mut!((*_1));
RET = 1_usize as isize;
Goto(bb15)
}
bb15 = {
Call(_16 = dump_var(16_usize, 12_usize, Move(_12), 5_usize, Move(_5), 2_usize, Move(_2), 9_usize, Move(_9)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_16 = dump_var(16_usize, 11_usize, Move(_11), 17_usize, _17, 17_usize, _17, 17_usize, _17), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: (bool,)) -> *const u16 {
mir! {
type RET = *const u16;
let _5: [u32; 3];
let _6: f32;
let _7: f32;
let _8: (*mut [u64; 1], u8, u64, u64, char);
let _9: f64;
let _10: f64;
let _11: bool;
let _12: i128;
let _13: [i64; 8];
let _14: f64;
let _15: f64;
let _16: char;
let _17: u8;
let _18: f32;
let _19: Adt60;
let _20: (bool,);
let _21: isize;
let _22: i16;
let _23: u64;
let _24: isize;
let _25: i8;
let _26: isize;
let _27: char;
let _28: *mut u8;
let _29: Adt55;
let _30: ([u32; 3], *const [u16; 8], *const [u16; 8]);
let _31: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize);
let _32: (u32,);
let _33: i8;
let _34: *mut u16;
let _35: bool;
let _36: Adt61;
let _37: i8;
let _38: i64;
let _39: bool;
let _40: f64;
let _41: f64;
let _42: bool;
let _43: usize;
let _44: i8;
let _45: [u32; 3];
let _46: i8;
let _47: isize;
let _48: [i64; 8];
let _49: i64;
let _50: char;
let _51: bool;
let _52: f32;
let _53: f32;
let _54: (bool,);
let _55: [char; 8];
let _56: u32;
let _57: [char; 6];
let _58: [char; 6];
let _59: [u16; 1];
let _60: [usize; 3];
let _61: ();
let _62: ();
{
_4 = (_1,);
_2 = _4.0 & _3;
_1 = _2 <= _4.0;
_1 = _3;
_3 = _1;
_4.0 = _2;
_2 = !_3;
_2 = _3 >= _1;
_4.0 = _1;
_1 = _3;
_2 = !_3;
_4 = (_2,);
_4 = (_2,);
_3 = !_1;
_3 = _4.0;
_2 = _1;
_3 = _1 ^ _1;
_1 = _2;
Goto(bb1)
}
bb1 = {
_5 = [3894172191_u32,2136765940_u32,385195611_u32];
_9 = 110_i8 as f64;
_6 = 1882201551_i32 as f32;
_1 = _2 & _3;
_3 = _1 > _4.0;
_8.4 = '\u{7878f}';
Call(_8.3 = core::intrinsics::bswap(11429058494754511341_u64), bb2, UnwindUnreachable())
}
bb2 = {
_6 = (-7661_i16) as f32;
_3 = !_4.0;
_4 = (_1,);
_8.2 = !17002322876201324032_u64;
_8.1 = (-95_i8) as u8;
_7 = _6 + _6;
_1 = _3;
Goto(bb3)
}
bb3 = {
_10 = _9 - _9;
_7 = _6 + _6;
_4 = (_1,);
_3 = _4.0 ^ _2;
Goto(bb4)
}
bb4 = {
_6 = 9223372036854775807_isize as f32;
_2 = _3;
_13 = [6895134105650660334_i64,3291849260714163987_i64,(-6923888067385328315_i64),7702901161980277410_i64,(-2324135662869331460_i64),(-6673906680193417246_i64),(-7143786859677594007_i64),3888184713176237835_i64];
_8.4 = '\u{a99c7}';
_1 = _4.0 | _4.0;
_4 = (_2,);
_12 = _8.1 as i128;
_5 = [2107055935_u32,3083972727_u32,4102616283_u32];
_8.4 = '\u{218a6}';
_2 = _1 < _1;
_4.0 = !_2;
_8.4 = '\u{37185}';
_7 = -_6;
_1 = _2;
_16 = _8.4;
_2 = _3 == _3;
_9 = 104_i8 as f64;
_6 = (-1738708303_i32) as f32;
_5 = [256313794_u32,3067112806_u32,2147307576_u32];
Goto(bb5)
}
bb5 = {
_12 = _7 as i128;
_11 = _3;
_17 = _2 as u8;
_11 = _4.0;
_1 = !_2;
_19.fld0 = 2374795940_u32 << _17;
_10 = _9 + _9;
_19.fld1 = _8.2 as i32;
_8.3 = _8.2;
_15 = _10 - _9;
Goto(bb6)
}
bb6 = {
_14 = -_15;
_8.3 = _11 as u64;
_20 = (_2,);
_8.4 = _16;
_16 = _8.4;
_15 = -_14;
_18 = 23833_u16 as f32;
_19.fld0 = 3603850859_u32;
_4.0 = _3;
_23 = _8.3;
_4.0 = _1;
_14 = -_9;
_6 = _18 * _18;
_2 = !_4.0;
_19.fld4 = _12 as i16;
_8.3 = _19.fld1 as u64;
_5 = [_19.fld0,_19.fld0,_19.fld0];
_10 = _12 as f64;
_10 = _9;
_2 = !_4.0;
_12 = 158699197454316676832688660226326171070_i128;
_7 = _6 + _6;
Goto(bb7)
}
bb7 = {
_7 = _18 - _6;
_24 = 9223372036854775807_isize;
_22 = _19.fld4 + _19.fld4;
_19.fld4 = _22;
_7 = _12 as f32;
_18 = _19.fld1 as f32;
Goto(bb8)
}
bb8 = {
_21 = !_24;
_18 = -_6;
_24 = _21 << _17;
_4.0 = !_20.0;
_3 = !_11;
_12 = 2600253126709588129_usize as i128;
_17 = !_8.1;
_20.0 = _11;
_15 = -_14;
_2 = _1 <= _4.0;
Goto(bb9)
}
bb9 = {
_8.2 = !_23;
_25 = !107_i8;
_12 = !(-11420320688562085715337420387073765199_i128);
_8.2 = _23 >> _23;
_27 = _16;
_2 = _20.0;
_1 = _24 >= _24;
_18 = -_6;
_6 = _18 + _18;
_11 = _4.0 >= _3;
match _19.fld0 {
0 => bb3,
1 => bb7,
2 => bb10,
3603850859 => bb12,
_ => bb11
}
}
bb10 = {
_6 = 9223372036854775807_isize as f32;
_2 = _3;
_13 = [6895134105650660334_i64,3291849260714163987_i64,(-6923888067385328315_i64),7702901161980277410_i64,(-2324135662869331460_i64),(-6673906680193417246_i64),(-7143786859677594007_i64),3888184713176237835_i64];
_8.4 = '\u{a99c7}';
_1 = _4.0 | _4.0;
_4 = (_2,);
_12 = _8.1 as i128;
_5 = [2107055935_u32,3083972727_u32,4102616283_u32];
_8.4 = '\u{218a6}';
_2 = _1 < _1;
_4.0 = !_2;
_8.4 = '\u{37185}';
_7 = -_6;
_1 = _2;
_16 = _8.4;
_2 = _3 == _3;
_9 = 104_i8 as f64;
_6 = (-1738708303_i32) as f32;
_5 = [256313794_u32,3067112806_u32,2147307576_u32];
Goto(bb5)
}
bb11 = {
_10 = _9 - _9;
_7 = _6 + _6;
_4 = (_1,);
_3 = _4.0 ^ _2;
Goto(bb4)
}
bb12 = {
_8.1 = _17 - _17;
_1 = _3;
_13 = [(-7719933061755249371_i64),3272769293079098876_i64,2708496916061157520_i64,(-6259893128017902599_i64),(-6385465636965234558_i64),(-4638938965011447964_i64),967011864146372070_i64,(-1687684046376020234_i64)];
_20.0 = _3 ^ _11;
_4.0 = !_2;
_28 = core::ptr::addr_of_mut!(_17);
_3 = _23 > _8.2;
Goto(bb13)
}
bb13 = {
_31.1.1 = !(*_28);
_8.3 = _19.fld4 as u64;
_31.1.4 = _27;
_31.2 = (-7825952129789762152_i64);
_19.fld0 = 2622349265_u32;
_8.4 = _16;
_19.fld0 = _14 as u32;
_31.1.4 = _8.4;
_10 = _14 * _9;
_4.0 = _3;
_1 = _3;
_26 = !_24;
_22 = _19.fld4 - _19.fld4;
_10 = _8.1 as f64;
_25 = -(-6_i8);
_20 = (_1,);
_19.fld1 = 1377116112_i32 ^ (-1311005615_i32);
_3 = !_1;
_31.3 = core::ptr::addr_of_mut!(_24);
_7 = _6 + _6;
_23 = _8.2 * _8.2;
_32.0 = _19.fld0 ^ _19.fld0;
_7 = _6;
_24 = _26;
_14 = -_10;
_24 = _8.1 as isize;
Call(_26 = core::intrinsics::transmute(_8.2), bb14, UnwindUnreachable())
}
bb14 = {
_8.3 = _8.2;
_10 = _14;
_5 = [_32.0,_32.0,_32.0];
(*_28) = !_8.1;
_5 = [_19.fld0,_32.0,_19.fld0];
_13 = [_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2];
_26 = -_21;
_33 = _25;
_8.3 = _8.2 << _8.2;
_31.1.1 = (*_28) >> _8.3;
_5 = [_32.0,_32.0,_19.fld0];
_18 = _33 as f32;
_19.fld0 = _32.0 + _32.0;
_10 = _14 * _15;
_31.1.2 = _8.2 | _8.3;
_36.fld0.fld4 = _24 as i16;
_4.0 = _1 & _3;
_4.0 = _1;
(*_28) = !_31.1.1;
match _31.2 {
0 => bb10,
1 => bb13,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
340282366920938463455548655301978449304 => bb20,
_ => bb19
}
}
bb15 = {
_31.1.1 = !(*_28);
_8.3 = _19.fld4 as u64;
_31.1.4 = _27;
_31.2 = (-7825952129789762152_i64);
_19.fld0 = 2622349265_u32;
_8.4 = _16;
_19.fld0 = _14 as u32;
_31.1.4 = _8.4;
_10 = _14 * _9;
_4.0 = _3;
_1 = _3;
_26 = !_24;
_22 = _19.fld4 - _19.fld4;
_10 = _8.1 as f64;
_25 = -(-6_i8);
_20 = (_1,);
_19.fld1 = 1377116112_i32 ^ (-1311005615_i32);
_3 = !_1;
_31.3 = core::ptr::addr_of_mut!(_24);
_7 = _6 + _6;
_23 = _8.2 * _8.2;
_32.0 = _19.fld0 ^ _19.fld0;
_7 = _6;
_24 = _26;
_14 = -_10;
_24 = _8.1 as isize;
Call(_26 = core::intrinsics::transmute(_8.2), bb14, UnwindUnreachable())
}
bb16 = {
_8.1 = _17 - _17;
_1 = _3;
_13 = [(-7719933061755249371_i64),3272769293079098876_i64,2708496916061157520_i64,(-6259893128017902599_i64),(-6385465636965234558_i64),(-4638938965011447964_i64),967011864146372070_i64,(-1687684046376020234_i64)];
_20.0 = _3 ^ _11;
_4.0 = !_2;
_28 = core::ptr::addr_of_mut!(_17);
_3 = _23 > _8.2;
Goto(bb13)
}
bb17 = {
_10 = _9 - _9;
_7 = _6 + _6;
_4 = (_1,);
_3 = _4.0 ^ _2;
Goto(bb4)
}
bb18 = {
_10 = _9 - _9;
_7 = _6 + _6;
_4 = (_1,);
_3 = _4.0 ^ _2;
Goto(bb4)
}
bb19 = {
_21 = !_24;
_18 = -_6;
_24 = _21 << _17;
_4.0 = !_20.0;
_3 = !_11;
_12 = 2600253126709588129_usize as i128;
_17 = !_8.1;
_20.0 = _11;
_15 = -_14;
_2 = _1 <= _4.0;
Goto(bb9)
}
bb20 = {
_35 = _2 != _11;
_31.1.2 = _8.2 + _23;
_31.1.2 = _8.3;
_16 = _31.1.4;
_19.fld1 = 1867179405_i32 - (-1189244703_i32);
_31.3 = core::ptr::addr_of_mut!(_21);
_27 = _31.1.4;
_39 = _11;
_40 = 3_usize as f64;
_36.fld0.fld2 = _8.4 as isize;
_32 = (_19.fld0,);
_19.fld2 = _11 as isize;
_31.1.1 = (*_28);
_9 = _40;
_14 = _10 * _10;
_17 = _31.1.1;
_11 = _3;
_15 = 271680869634922819334218668232609498592_u128 as f64;
_36.fld0.fld1 = _27 as i32;
_15 = _14 + _14;
_8.1 = _36.fld0.fld4 as u8;
_22 = !_19.fld4;
_11 = !_4.0;
_17 = _31.1.1;
Goto(bb21)
}
bb21 = {
_32 = (_19.fld0,);
_31.2 = 1504621801324635845_i64;
_11 = !_39;
_26 = _19.fld2;
_11 = !_35;
_32 = (_19.fld0,);
_25 = _33;
_39 = _35;
_15 = 6900909323464724018_usize as f64;
_36.fld0.fld1 = _19.fld1 * _19.fld1;
_20.0 = _3 & _4.0;
_5 = [_19.fld0,_19.fld0,_32.0];
_31.1.4 = _8.4;
_19.fld1 = _17 as i32;
_8.3 = _8.2;
match _31.2 {
0 => bb20,
1 => bb22,
2 => bb23,
3 => bb24,
1504621801324635845 => bb26,
_ => bb25
}
}
bb22 = {
_6 = (-7661_i16) as f32;
_3 = !_4.0;
_4 = (_1,);
_8.2 = !17002322876201324032_u64;
_8.1 = (-95_i8) as u8;
_7 = _6 + _6;
_1 = _3;
Goto(bb3)
}
bb23 = {
_31.1.1 = !(*_28);
_8.3 = _19.fld4 as u64;
_31.1.4 = _27;
_31.2 = (-7825952129789762152_i64);
_19.fld0 = 2622349265_u32;
_8.4 = _16;
_19.fld0 = _14 as u32;
_31.1.4 = _8.4;
_10 = _14 * _9;
_4.0 = _3;
_1 = _3;
_26 = !_24;
_22 = _19.fld4 - _19.fld4;
_10 = _8.1 as f64;
_25 = -(-6_i8);
_20 = (_1,);
_19.fld1 = 1377116112_i32 ^ (-1311005615_i32);
_3 = !_1;
_31.3 = core::ptr::addr_of_mut!(_24);
_7 = _6 + _6;
_23 = _8.2 * _8.2;
_32.0 = _19.fld0 ^ _19.fld0;
_7 = _6;
_24 = _26;
_14 = -_10;
_24 = _8.1 as isize;
Call(_26 = core::intrinsics::transmute(_8.2), bb14, UnwindUnreachable())
}
bb24 = {
_10 = _9 - _9;
_7 = _6 + _6;
_4 = (_1,);
_3 = _4.0 ^ _2;
Goto(bb4)
}
bb25 = {
_8.3 = _8.2;
_10 = _14;
_5 = [_32.0,_32.0,_32.0];
(*_28) = !_8.1;
_5 = [_19.fld0,_32.0,_19.fld0];
_13 = [_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2,_31.2];
_26 = -_21;
_33 = _25;
_8.3 = _8.2 << _8.2;
_31.1.1 = (*_28) >> _8.3;
_5 = [_32.0,_32.0,_19.fld0];
_18 = _33 as f32;
_19.fld0 = _32.0 + _32.0;
_10 = _14 * _15;
_31.1.2 = _8.2 | _8.3;
_36.fld0.fld4 = _24 as i16;
_4.0 = _1 & _3;
_4.0 = _1;
(*_28) = !_31.1.1;
match _31.2 {
0 => bb10,
1 => bb13,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
340282366920938463455548655301978449304 => bb20,
_ => bb19
}
}
bb26 = {
_35 = _3;
_37 = _19.fld1 as i8;
_28 = core::ptr::addr_of_mut!((*_28));
_19.fld1 = !_36.fld0.fld1;
_5 = [_32.0,_19.fld0,_32.0];
_39 = _1 ^ _4.0;
_30.0 = [_19.fld0,_19.fld0,_32.0];
_31.3 = core::ptr::addr_of_mut!(_19.fld2);
_10 = _14 - _14;
_19.fld2 = _6 as isize;
_16 = _27;
_47 = !_26;
_8.3 = _8.2 >> (*_28);
_3 = _39;
_10 = -_14;
_38 = _8.4 as i64;
_31.1.1 = !(*_28);
_25 = _37 + _37;
_10 = 21632_u16 as f64;
_27 = _16;
_43 = 0_usize;
_48 = [_38,_13[_43],_31.2,_31.2,_13[_43],_38,_38,_13[_43]];
_49 = -_13[_43];
_8.3 = _8.2;
Goto(bb27)
}
bb27 = {
_36.fld0.fld0 = _30.0[_43];
_7 = -_6;
_28 = core::ptr::addr_of_mut!((*_28));
_33 = _25 | _25;
_20 = _4;
Goto(bb28)
}
bb28 = {
_46 = _37 + _25;
_39 = (*_28) != (*_28);
_25 = _46;
_51 = _1 | _1;
(*_28) = _18 as u8;
_44 = _37 - _33;
_28 = core::ptr::addr_of_mut!(_17);
_45 = [_30.0[_43],_19.fld0,_19.fld0];
_35 = !_3;
_5 = _30.0;
_36.fld0.fld4 = _31.1.1 as i16;
_57 = [_8.4,_16,_27,_27,_8.4,_27];
_31.3 = core::ptr::addr_of_mut!(_19.fld2);
_38 = _31.2 | _48[_43];
_47 = _26;
RET = core::ptr::addr_of!(_59[_43]);
Goto(bb29)
}
bb29 = {
Call(_61 = dump_var(17_usize, 24_usize, Move(_24), 3_usize, Move(_3), 5_usize, Move(_5), 32_usize, Move(_32)), bb30, UnwindUnreachable())
}
bb30 = {
Call(_61 = dump_var(17_usize, 37_usize, Move(_37), 22_usize, Move(_22), 17_usize, Move(_17), 57_usize, Move(_57)), bb31, UnwindUnreachable())
}
bb31 = {
Call(_61 = dump_var(17_usize, 2_usize, Move(_2), 33_usize, Move(_33), 16_usize, Move(_16), 51_usize, Move(_51)), bb32, UnwindUnreachable())
}
bb32 = {
Call(_61 = dump_var(17_usize, 44_usize, Move(_44), 1_usize, Move(_1), 38_usize, Move(_38), 11_usize, Move(_11)), bb33, UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: (bool,),mut _2: [u32; 3],mut _3: bool,mut _4: [u32; 3]) -> (bool,) {
mir! {
type RET = (bool,);
let _5: i32;
let _6: isize;
let _7: bool;
let _8: ([u32; 3], *const [u16; 8], *const [u16; 8]);
let _9: char;
let _10: ();
let _11: ();
{
_1.0 = _3;
RET = (_3,);
RET.0 = _1.0 > _1.0;
_1 = RET;
_5 = (-763745050_i32);
_2 = _4;
_4 = [3621715550_u32,2171594590_u32,3168477063_u32];
RET = _1;
_1 = (_3,);
RET.0 = !_3;
RET = _1;
_6 = (-9223372036854775808_isize) << _5;
RET.0 = !_3;
RET.0 = !_3;
_3 = RET.0 <= _1.0;
RET.0 = !_1.0;
_5 = !(-717750204_i32);
_2 = [4226305928_u32,2111147340_u32,692532771_u32];
RET.0 = _3 | _3;
RET = _1;
_8.0 = _4;
_2 = [1587295604_u32,2627651085_u32,1054679018_u32];
Call(_5 = core::intrinsics::bswap((-1725218769_i32)), bb1, UnwindUnreachable())
}
bb1 = {
_8.0 = [1234434099_u32,2557242340_u32,1768914131_u32];
_2 = [4091206205_u32,2704169067_u32,2919636494_u32];
_2 = _8.0;
RET.0 = _1.0 < _3;
_5 = !1526362705_i32;
_7 = _6 < _6;
_1 = RET;
Goto(bb2)
}
bb2 = {
Call(_10 = dump_var(18_usize, 6_usize, Move(_6), 3_usize, Move(_3), 5_usize, Move(_5), 11_usize, _11), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: isize,mut _2: bool,mut _3: isize,mut _4: isize,mut _5: (bool,),mut _6: bool) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _7: u16;
let _8: (bool,);
let _9: char;
let _10: Adt64;
let _11: [i64; 8];
let _12: char;
let _13: [i16; 6];
let _14: u64;
let _15: Adt59;
let _16: ();
let _17: ();
{
_1 = _4;
_1 = _3 | _4;
_4 = 11443394852197419176_u64 as isize;
_1 = _4;
_3 = !_4;
_1 = _3;
_7 = 17327_u16 ^ 14208_u16;
_4 = 151574241178497047581834693928082214319_u128 as isize;
_8 = (_2,);
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
_8.0 = !_6;
Goto(bb1)
}
bb1 = {
_1 = _4 | _4;
Goto(bb2)
}
bb2 = {
_8 = (_6,);
_5 = (_2,);
_8.0 = _2 | _6;
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
_9 = '\u{78c1}';
_1 = _6 as isize;
_6 = _2 <= _2;
_5 = _8;
_8.0 = _2;
_5.0 = _6;
_7 = 44616_u16 << _1;
_5.0 = _6 > _2;
_11 = [3751768054229556573_i64,2373779147363718174_i64,1051317266388409301_i64,4680195574998186176_i64,8120588518670929683_i64,(-4840935485383117284_i64),(-1460565691611284062_i64),(-2072607586018888344_i64)];
_2 = _1 <= _1;
_12 = _9;
_1 = 26577_i16 as isize;
_12 = _9;
_2 = _7 < _7;
Goto(bb3)
}
bb3 = {
_13 = [(-4116_i16),9868_i16,(-26330_i16),(-18153_i16),(-16751_i16),5313_i16];
_3 = (-45493642224439257336544796520279230638_i128) as isize;
_5 = (_6,);
_6 = _5.0 != _2;
_13 = [(-25665_i16),16904_i16,(-131_i16),14644_i16,(-23642_i16),(-29351_i16)];
_8.0 = _5.0;
Goto(bb4)
}
bb4 = {
_8.0 = _6;
_13 = [(-21265_i16),(-17389_i16),(-15759_i16),(-2203_i16),(-687_i16),23182_i16];
_5.0 = _2;
_13 = [(-18428_i16),(-623_i16),3377_i16,(-20638_i16),31606_i16,27721_i16];
_6 = _8.0;
_13 = [(-9747_i16),(-27805_i16),(-19946_i16),(-19153_i16),11115_i16,6846_i16];
_9 = _12;
RET = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = _8;
Goto(bb5)
}
bb5 = {
Call(_16 = dump_var(19_usize, 13_usize, Move(_13), 12_usize, Move(_12), 9_usize, Move(_9), 8_usize, Move(_8)), bb6, UnwindUnreachable())
}
bb6 = {
Call(_16 = dump_var(19_usize, 6_usize, Move(_6), 2_usize, Move(_2), 17_usize, _17, 17_usize, _17), bb7, UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(12745_u16), std::hint::black_box('\u{8bf3f}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(1820881117_u32), std::hint::black_box((-8210079387134235484_i64)), std::hint::black_box(1336760635_i32));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: *mut *mut [u16; 8],
fld1: [i64; 8],
fld2: (u128, u32, *mut u16, ((u32,), bool, u8)),
fld3: *const u16,
fld4: i16,
fld5: ([i128; 4], [u16; 8]),
fld6: [usize; 3],

},
Variant1{
fld0: u128,
fld1: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),
fld2: u64,
fld3: *mut isize,
fld4: [usize; 3],
fld5: usize,
fld6: *mut u8,
fld7: i128,

},
Variant2{
fld0: ([u32; 3], *const [u16; 8], *const [u16; 8]),
fld1: [i8; 5],
fld2: [char; 6],

},
Variant3{
fld0: [i32; 5],
fld1: *mut *mut [u16; 8],
fld2: f64,
fld3: [char; 6],
fld4: i16,
fld5: u32,

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: bool,
fld1: (*mut [u64; 1], u8, u64, u64, char),
fld2: (u32,),
fld3: u128,
fld4: *mut [u64; 1],
fld5: [u32; 3],

},
Variant1{
fld0: *mut isize,
fld1: ((u32,), bool, u8),
fld2: u64,
fld3: *mut u16,
fld4: [u16; 8],
fld5: *mut [char; 8],

},
Variant2{
fld0: u32,
fld1: i128,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt51 {
Variant0{
fld0: [char; 6],
fld1: ([i128; 4], [u16; 8]),
fld2: *const *mut u16,
fld3: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),
fld4: (bool,),
fld5: *mut [char; 8],
fld6: [u64; 1],

},
Variant1{
fld0: (i16, u16, i16, *mut isize),
fld1: *mut u16,
fld2: u16,
fld3: i8,
fld4: usize,
fld5: (bool,),
fld6: f64,
fld7: [u16; 8],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: [i8; 5],
fld1: [char; 6],
fld2: u32,
fld3: f64,

},
Variant1{
fld0: [i64; 8],
fld1: f64,
fld2: *mut *mut u16,

},
Variant2{
fld0: ([i128; 4], [u16; 8]),
fld1: *mut [u64; 1],

},
Variant3{
fld0: u8,
fld1: Adt50,
fld2: (bool,),
fld3: ((u32,), bool, u8),

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: bool,
fld1: Adt51,
fld2: i64,
fld3: u8,

},
Variant1{
fld0: u32,
fld1: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),

},
Variant1{
fld0: u128,
fld1: char,
fld2: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),
fld3: i8,
fld4: [i128; 4],
fld5: [u32; 3],
fld6: i64,
fld7: *mut *mut [u16; 8],

},
Variant2{
fld0: char,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: *mut [u64; 1],
fld1: Adt49,
fld2: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),
fld3: *const *mut u16,
fld4: i16,
fld5: [u16; 8],
fld6: (u32,),
fld7: usize,

},
Variant1{
fld0: u64,
fld1: f64,
fld2: ([i128; 4], [u16; 8]),
fld3: i8,
fld4: i16,
fld5: Adt49,
fld6: [u16; 1],

},
Variant2{
fld0: [usize; 3],
fld1: u8,
fld2: ((u32,), bool, u8),

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: Adt53,
fld1: *mut [u16; 8],
fld2: *const u16,
fld3: f32,
fld4: [i8; 5],
fld5: i32,
fld6: Adt51,
fld7: (bool,),
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: bool,
fld1: ((u32,), bool, u8),
fld2: f32,
fld3: [i8; 5],
fld4: [i64; 8],

},
Variant1{
fld0: Adt56,
fld1: Adt49,
fld2: i64,
fld3: u128,
fld4: *mut u8,

},
Variant2{
fld0: [i32; 5],
fld1: u16,
fld2: [u16; 8],
fld3: (u32,),
fld4: ([u32; 3], *const [u16; 8], *const [u16; 8]),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt58 {
Variant0{
fld0: [char; 6],
fld1: [u32; 3],
fld2: (*const [u16; 8], (*mut [u64; 1], u8, u64, u64, char), i64, *mut isize),
fld3: u128,

},
Variant1{
fld0: bool,
fld1: [i32; 5],
fld2: u64,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: *mut *mut u16,
fld1: char,
fld2: [char; 8],
fld3: i8,

},
Variant1{
fld0: Adt49,
fld1: u64,
fld2: isize,
fld3: i8,
fld4: *mut *mut u16,
fld5: Adt56,
fld6: (u128, u32, *mut u16, ((u32,), bool, u8)),
fld7: *const [u16; 8],

},
Variant2{
fld0: *const *mut u16,
fld1: Adt54,
fld2: *mut [u16; 8],
fld3: *mut u8,
fld4: i16,
fld5: ([u32; 3], *const [u16; 8], *const [u16; 8]),
fld6: [i128; 4],

}}
#[derive(Debug)]
pub struct Adt60 {
fld0: u32,
fld1: i32,
fld2: isize,
fld3: Adt51,
fld4: i16,
}
#[derive(Debug)]
pub struct Adt61 {
fld0: Adt60,
}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: *mut [u16; 8],
fld1: ((u32,), bool, u8),

},
Variant1{
fld0: f64,
fld1: *mut [u64; 1],
fld2: [i8; 5],
fld3: i16,

}}
#[derive(Debug)]
pub struct Adt63 {
fld0: *const u16,
fld1: [u64; 1],
fld2: [i32; 5],
fld3: Adt58,
fld4: Adt53,
}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: Adt58,
fld1: ([i128; 4], [u16; 8]),
fld2: (bool,),
fld3: Adt55,
fld4: [u16; 8],
fld5: [usize; 3],
fld6: u64,

},
Variant1{
fld0: ([u32; 3], *const [u16; 8], *const [u16; 8]),
fld1: [usize; 3],
fld2: [u16; 8],

},
Variant2{
fld0: Adt50,
fld1: Adt55,
fld2: i8,

}}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: bool,
fld1: char,
fld2: Adt53,
fld3: *const u16,
fld4: Adt64,
fld5: *mut [u64; 1],

},
Variant1{
fld0: Adt49,
fld1: *mut [u64; 1],
fld2: Adt64,
fld3: Adt57,
fld4: Adt53,
fld5: Adt50,
fld6: u128,
fld7: Adt61,

},
Variant2{
fld0: Adt53,
fld1: *mut [char; 8],
fld2: isize,
fld3: i8,
fld4: [u16; 8],
fld5: (u32,),
fld6: Adt64,

},
Variant3{
fld0: [char; 8],
fld1: Adt51,
fld2: [u16; 1],
fld3: [u16; 8],
fld4: Adt54,
fld5: [u64; 1],

}}

