#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16,mut _12: u32,mut _13: u64,mut _14: u128) -> *mut [u16; 8] {
mir! {
type RET = *mut [u16; 8];
let _15: *const usize;
let _16: [bool; 5];
let _17: u16;
let _18: f64;
let _19: f32;
let _20: f64;
let _21: bool;
let _22: isize;
let _23: f64;
let _24: f64;
let _25: f32;
let _26: i64;
let _27: f32;
let _28: Adt62;
let _29: u16;
let _30: f32;
let _31: f32;
let _32: [i64; 3];
let _33: f64;
let _34: [i128; 6];
let _35: [i8; 4];
let _36: i32;
let _37: u32;
let _38: *const usize;
let _39: *mut [u16; 8];
let _40: (f32, i32, f64);
let _41: [bool; 5];
let _42: Adt63;
let _43: i32;
let _44: isize;
let _45: *const *mut [i64; 3];
let _46: char;
let _47: u32;
let _48: f64;
let _49: isize;
let _50: Adt48;
let _51: [u32; 4];
let _52: *mut (char, usize, i16);
let _53: [u32; 5];
let _54: u64;
let _55: char;
let _56: [usize; 7];
let _57: isize;
let _58: isize;
let _59: (char, usize, i16);
let _60: i64;
let _61: u16;
let _62: Adt63;
let _63: [u8; 3];
let _64: f64;
let _65: f32;
let _66: u128;
let _67: Adt56;
let _68: [i64; 1];
let _69: i32;
let _70: *mut f64;
let _71: [bool; 5];
let _72: isize;
let _73: Adt51;
let _74: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _75: isize;
let _76: [usize; 7];
let _77: i64;
let _78: [u16; 8];
let _79: char;
let _80: u32;
let _81: char;
let _82: (u32, (char, usize, i16), i8, *mut u8);
let _83: [usize; 7];
let _84: i64;
let _85: i32;
let _86: f32;
let _87: Adt50;
let _88: ();
let _89: ();
{
_10 = true as u8;
_11 = !50347_u16;
_14 = 270215657591020268455366235900488329233_u128;
Goto(bb1)
}
bb1 = {
_13 = 2836938379361959789_u64;
_12 = 3183239825_u32 | 404959320_u32;
_8 = 22_i8 as i128;
_4 = !4_i8;
_2 = '\u{72f1}';
_6 = !756970299_i32;
_12 = 560173500_u32;
_10 = true as u8;
_5 = 9018_i16 | (-16481_i16);
_2 = '\u{9c21f}';
_3 = _4 as isize;
_15 = core::ptr::addr_of!(_9);
_1 = !true;
_4 = 30_i8;
_10 = 254_u8;
_11 = 5244_u16;
_9 = 7_usize & 7274935373169648952_usize;
_1 = true;
Call(_2 = fn1(_1, _10, (*_15), _14, _3, _15, _15, _4, _3, _14, _15), bb2, UnwindUnreachable())
}
bb2 = {
_2 = '\u{7711c}';
_17 = _12 as u16;
_2 = '\u{3fe3}';
_19 = _12 as f32;
_1 = true;
_14 = 162032749512169779104307618798133363501_u128 & 149019603669268194435903335522125372432_u128;
_10 = 160_u8;
Goto(bb3)
}
bb3 = {
(*_15) = _14 as usize;
_21 = _1;
_16 = [_21,_21,_1,_21,_1];
_2 = '\u{104db5}';
_16 = [_21,_1,_21,_1,_21];
_5 = _3 as i16;
_1 = !_21;
_21 = !_1;
_20 = _10 as f64;
_8 = !(-104444960371755627222599015502450744974_i128);
_14 = 287158688065906923423650690351286575263_u128;
(*_15) = _13 as usize;
_7 = _1 as i64;
_18 = _4 as f64;
_16 = [_1,_21,_1,_21,_1];
_15 = core::ptr::addr_of!(_9);
_13 = 9992322606391926818_u64 | 13692434431238516174_u64;
_2 = '\u{b5ee4}';
_4 = _12 as i8;
_22 = !_3;
_2 = '\u{58064}';
_3 = _10 as isize;
_20 = -_18;
Goto(bb4)
}
bb4 = {
_14 = 302270119580672268026003909120927272748_u128;
_25 = -_19;
_19 = _25;
Goto(bb5)
}
bb5 = {
_21 = _1;
Goto(bb6)
}
bb6 = {
_2 = '\u{7447d}';
_25 = _19;
_3 = -_22;
_23 = _10 as f64;
(*_15) = 259457869929687903_usize;
_3 = _22 & _22;
_8 = 125456119526174968136868416249292124337_i128;
_22 = _6 as isize;
_9 = 7_usize;
_10 = 237_u8 * 237_u8;
_28.fld1.0 = [_4,_4,_4,_4];
_28.fld1.3.0.1.0 = _2;
_28.fld1.3.3 = (_25, _6, _23);
Goto(bb7)
}
bb7 = {
_28.fld1.3.0.1.2 = _28.fld1.3.3.0 as i16;
_28.fld3 = -_8;
match _14 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb9,
302270119580672268026003909120927272748 => bb11,
_ => bb10
}
}
bb8 = {
_2 = '\u{7447d}';
_25 = _19;
_3 = -_22;
_23 = _10 as f64;
(*_15) = 259457869929687903_usize;
_3 = _22 & _22;
_8 = 125456119526174968136868416249292124337_i128;
_22 = _6 as isize;
_9 = 7_usize;
_10 = 237_u8 * 237_u8;
_28.fld1.0 = [_4,_4,_4,_4];
_28.fld1.3.0.1.0 = _2;
_28.fld1.3.3 = (_25, _6, _23);
Goto(bb7)
}
bb9 = {
_2 = '\u{7711c}';
_17 = _12 as u16;
_2 = '\u{3fe3}';
_19 = _12 as f32;
_1 = true;
_14 = 162032749512169779104307618798133363501_u128 & 149019603669268194435903335522125372432_u128;
_10 = 160_u8;
Goto(bb3)
}
bb10 = {
_13 = 2836938379361959789_u64;
_12 = 3183239825_u32 | 404959320_u32;
_8 = 22_i8 as i128;
_4 = !4_i8;
_2 = '\u{72f1}';
_6 = !756970299_i32;
_12 = 560173500_u32;
_10 = true as u8;
_5 = 9018_i16 | (-16481_i16);
_2 = '\u{9c21f}';
_3 = _4 as isize;
_15 = core::ptr::addr_of!(_9);
_1 = !true;
_4 = 30_i8;
_10 = 254_u8;
_11 = 5244_u16;
_9 = 7_usize & 7274935373169648952_usize;
_1 = true;
Call(_2 = fn1(_1, _10, (*_15), _14, _3, _15, _15, _4, _3, _14, _15), bb2, UnwindUnreachable())
}
bb11 = {
_10 = 136_u8;
_28.fld1.3.3.2 = _18 - _23;
_29 = !_17;
_17 = _29 | _11;
_28.fld1.4 = [_12,_12,_12,_12];
_7 = 5605773771392297946_i64;
_28.fld1.3.0.1.1 = _12 as usize;
_19 = _25 - _25;
_28.fld5.0 = _28.fld1.3.0.1.0;
_13 = 5523958062467923016_u64 & 1209380918170705909_u64;
_22 = _3;
_26 = _18 as i64;
_9 = _28.fld1.3.0.1.1 + _28.fld1.3.0.1.1;
_28.fld1.3.0.2 = _4;
_28.fld1.3.0.3 = core::ptr::addr_of_mut!(_10);
_28.fld1.3.0.1.2 = _5 - _5;
_28.fld4 = _28.fld1.3.0.1.2;
_26 = _7;
_20 = _18 + _23;
_7 = _26;
_29 = _17;
_1 = !_21;
_2 = _28.fld1.3.0.1.0;
Call(_19 = core::intrinsics::transmute(_28.fld1.0), bb12, UnwindUnreachable())
}
bb12 = {
_13 = !3560572300483737576_u64;
_35 = [_28.fld1.3.0.2,_4,_28.fld1.3.0.2,_28.fld1.3.0.2];
_32 = [_7,_7,_26];
_32 = [_26,_26,_26];
_33 = -_23;
_25 = _13 as f32;
_28.fld1.3.3.1 = _6;
_28.fld1.3.3.1 = _6;
_28.fld5.2 = _28.fld4;
_31 = (*_15) as f32;
_35 = [_28.fld1.3.0.2,_28.fld1.3.0.2,_28.fld1.3.0.2,_4];
_24 = -_28.fld1.3.3.2;
match _12 {
0 => bb6,
1 => bb10,
2 => bb13,
3 => bb14,
560173500 => bb16,
_ => bb15
}
}
bb13 = {
_14 = 302270119580672268026003909120927272748_u128;
_25 = -_19;
_19 = _25;
Goto(bb5)
}
bb14 = {
_13 = 2836938379361959789_u64;
_12 = 3183239825_u32 | 404959320_u32;
_8 = 22_i8 as i128;
_4 = !4_i8;
_2 = '\u{72f1}';
_6 = !756970299_i32;
_12 = 560173500_u32;
_10 = true as u8;
_5 = 9018_i16 | (-16481_i16);
_2 = '\u{9c21f}';
_3 = _4 as isize;
_15 = core::ptr::addr_of!(_9);
_1 = !true;
_4 = 30_i8;
_10 = 254_u8;
_11 = 5244_u16;
_9 = 7_usize & 7274935373169648952_usize;
_1 = true;
Call(_2 = fn1(_1, _10, (*_15), _14, _3, _15, _15, _4, _3, _14, _15), bb2, UnwindUnreachable())
}
bb15 = {
(*_15) = _14 as usize;
_21 = _1;
_16 = [_21,_21,_1,_21,_1];
_2 = '\u{104db5}';
_16 = [_21,_1,_21,_1,_21];
_5 = _3 as i16;
_1 = !_21;
_21 = !_1;
_20 = _10 as f64;
_8 = !(-104444960371755627222599015502450744974_i128);
_14 = 287158688065906923423650690351286575263_u128;
(*_15) = _13 as usize;
_7 = _1 as i64;
_18 = _4 as f64;
_16 = [_1,_21,_1,_21,_1];
_15 = core::ptr::addr_of!(_9);
_13 = 9992322606391926818_u64 | 13692434431238516174_u64;
_2 = '\u{b5ee4}';
_4 = _12 as i8;
_22 = !_3;
_2 = '\u{58064}';
_3 = _10 as isize;
_20 = -_18;
Goto(bb4)
}
bb16 = {
_28.fld5.1 = _5 as usize;
_28.fld1.3.1 = [_10,_10,_10];
_13 = !4615950165395578922_u64;
_28.fld1.3.0.1.1 = !_9;
_28.fld1.2 = _10 as f32;
_34 = [_8,_28.fld3,_8,_28.fld3,_8,_8];
_19 = -_31;
_35 = [_28.fld1.3.0.2,_28.fld1.3.0.2,_4,_28.fld1.3.0.2];
_28.fld2 = [_26,_26,_26];
_28.fld1.3.3.1 = _28.fld1.3.0.2 as i32;
_28.fld1.3.3.0 = _7 as f32;
_28.fld1.3.0.1.0 = _28.fld5.0;
_27 = -_31;
_40.1 = -_28.fld1.3.3.1;
_28.fld2 = [_7,_7,_7];
_41 = [_1,_21,_21,_1,_21];
_28.fld1.4 = [_12,_12,_12,_12];
_28.fld5.1 = _4 as usize;
Goto(bb17)
}
bb17 = {
_30 = -_28.fld1.2;
_1 = !_21;
_42.fld3.2 = [_3,_22,_22];
_28.fld1.3.0.2 = _4;
_32 = [_26,_7,_26];
_28.fld1.4 = [_12,_12,_12,_12];
_42.fld0.fld4 = _28.fld1.3.0.1.2 + _28.fld1.3.0.1.2;
match _7 {
0 => bb1,
1 => bb10,
2 => bb11,
3 => bb4,
4 => bb13,
5605773771392297946 => bb18,
_ => bb6
}
}
bb18 = {
_28.fld1.3.0.1.1 = _14 as usize;
_18 = _10 as f64;
_42.fld3.0.1.1 = _28.fld4 as usize;
_42.fld3.0.1 = _28.fld1.3.0.1;
_42.fld4 = (_28.fld1.3.3,);
_28.fld1.3.3.1 = _40.1 >> (*_15);
_28.fld2 = [_26,_26,_7];
_44 = _3 - _22;
_42.fld3.0.0 = _1 as u32;
_43 = _42.fld4.0.1 + _6;
_42.fld2 = _42.fld3.2;
_3 = _22;
_42.fld3.3 = (_31, _6, _28.fld1.3.3.2);
(*_15) = !_28.fld5.1;
_9 = !_42.fld3.0.1.1;
_28.fld1.3.0.1 = (_2, _9, _28.fld5.2);
_2 = _28.fld1.3.0.1.0;
_11 = !_17;
_36 = -_42.fld3.3.1;
_28.fld1.3.3 = (_28.fld1.2, _43, _42.fld4.0.2);
_28.fld5.2 = _26 as i16;
_42.fld3.0 = (_12, _28.fld5, _28.fld1.3.0.2, _28.fld1.3.0.3);
_42.fld3.0.1.1 = (*_15);
_42.fld3.1 = [_10,_10,_10];
_28.fld1.1 = _12;
_9 = _42.fld3.0.1.1 ^ _28.fld1.3.0.1.1;
_37 = _28.fld1.1;
_28.fld5.0 = _42.fld3.0.1.0;
Goto(bb19)
}
bb19 = {
_10 = 29_u8;
_28.fld1.3.0.0 = _28.fld3 as u32;
_40.1 = _10 as i32;
_40.2 = -_33;
_10 = 24_u8 << _17;
_28.fld1.3.0.1 = (_2, (*_15), _28.fld4);
_14 = 316830473790792078447661710524054247143_u128;
_42.fld0.fld1 = _29 as u64;
_42.fld3.3 = _42.fld4.0;
_28.fld1.3.0.1.2 = _28.fld1.3.0.2 as i16;
_10 = _1 as u8;
_28.fld1.2 = _42.fld4.0.0;
_31 = -_27;
_23 = _28.fld3 as f64;
_40.2 = _24 - _18;
_16 = [_21,_1,_21,_21,_21];
_42.fld3.0.2 = _28.fld1.3.0.2;
_23 = -_24;
_28.fld1.3.0.1.2 = _28.fld4;
_42.fld3 = (_28.fld1.3.0, _28.fld1.3.1, _42.fld2, _28.fld1.3.3);
_42.fld4.0.0 = _28.fld1.2;
_28.fld1.1 = _27 as u32;
_49 = _3;
_42.fld0.fld1 = _13;
_42.fld3.0.3 = core::ptr::addr_of_mut!(_10);
_28.fld5.2 = _28.fld4 & _42.fld0.fld4;
_28.fld1.3 = (_42.fld3.0, _42.fld3.1, _42.fld2, _42.fld4.0);
_28.fld1.3.0.3 = _42.fld3.0.3;
Goto(bb20)
}
bb20 = {
_42.fld2 = [_3,_22,_22];
_40.2 = _42.fld4.0.2 + _42.fld4.0.2;
_19 = _28.fld1.3.3.0 * _30;
_8 = _28.fld3;
_33 = _42.fld3.3.2 * _28.fld1.3.3.2;
_28.fld5.1 = !_9;
_28.fld1.3.0.1 = _42.fld3.0.1;
_28.fld1.3.3.1 = -_40.1;
_42.fld4 = (_28.fld1.3.3,);
_36 = _42.fld3.3.1;
_42.fld3.3.1 = _8 as i32;
_1 = _9 != _28.fld1.3.0.1.1;
_53 = [_28.fld1.1,_28.fld1.1,_42.fld3.0.0,_28.fld1.1,_42.fld3.0.0];
_54 = _42.fld0.fld1;
_25 = _28.fld1.2 * _42.fld3.3.0;
_28.fld1.3.3 = _42.fld3.3;
_51 = [_42.fld3.0.0,_28.fld1.3.0.0,_28.fld1.3.0.0,_12];
_25 = _27;
Goto(bb21)
}
bb21 = {
_28.fld1.3.0.2 = -_4;
_27 = -_30;
_38 = _15;
_28.fld1.0 = [_4,_42.fld3.0.2,_28.fld1.3.0.2,_4];
_52 = core::ptr::addr_of_mut!(_59);
_2 = _28.fld1.3.0.1.0;
_59.1 = _9;
(*_52).0 = _28.fld1.3.0.1.0;
_42.fld4.0 = _28.fld1.3.3;
_31 = _26 as f32;
_28.fld1.0 = _35;
_42.fld3 = (_28.fld1.3.0, _28.fld1.3.1, _28.fld1.3.2, _42.fld4.0);
_3 = _49;
_52 = core::ptr::addr_of_mut!(_59);
_42.fld3.0.1.0 = _59.0;
(*_15) = _28.fld5.1;
(*_15) = _59.1;
_42.fld3.3.2 = -_28.fld1.3.3.2;
_42.fld0.fld1 = _13;
(*_52).0 = _2;
_62.fld0.fld6 = _41;
_64 = _33 * _42.fld3.3.2;
_36 = _40.1 & _28.fld1.3.3.1;
_33 = _42.fld3.3.2;
_62.fld3.0.3 = _28.fld1.3.0.3;
Call(_28.fld5.1 = core::intrinsics::transmute((*_38)), bb22, UnwindUnreachable())
}
bb22 = {
_42.fld0.fld4 = -_28.fld5.2;
_62.fld4.0.2 = -_40.2;
_59.2 = _1 as i16;
_28.fld1.3.3.0 = _30 * _19;
_62.fld3.3.2 = _62.fld4.0.2;
_60 = _26 & _26;
(*_52).2 = _28.fld5.2 | _42.fld0.fld4;
Goto(bb23)
}
bb23 = {
_62.fld3.3.2 = _24 + _42.fld3.3.2;
_55 = _59.0;
_58 = _3;
_42.fld3.0.3 = core::ptr::addr_of_mut!(_10);
_16 = _41;
_62.fld3.0.1.0 = _42.fld3.0.1.0;
_6 = _40.1 << _42.fld3.0.1.1;
_62.fld4 = (_28.fld1.3.3,);
_41 = [_1,_1,_21,_21,_21];
_42.fld0.fld6 = _41;
_24 = _40.2 + _62.fld4.0.2;
Goto(bb24)
}
bb24 = {
_42.fld3.3 = (_62.fld4.0.0, _36, _40.2);
_62.fld4.0 = _42.fld3.3;
_48 = _14 as f64;
_42.fld3.3 = _62.fld4.0;
_36 = -_43;
(*_52).1 = (*_15);
_17 = _29;
_27 = _25 - _62.fld4.0.0;
_28.fld1.1 = _44 as u32;
_4 = _2 as i8;
_42.fld3.3 = (_25, _62.fld4.0.1, _62.fld3.3.2);
_30 = _28.fld1.2 - _27;
_28.fld1.3.0.1.2 = _8 as i16;
_7 = _28.fld1.3.0.2 as i64;
_62.fld3.0.1.1 = _59.1 * (*_15);
_15 = _38;
_62.fld3.3.1 = (*_38) as i32;
_40.1 = _59.2 as i32;
_62.fld0.fld4 = (*_52).2 >> _17;
_28.fld1.0 = [_42.fld3.0.2,_4,_28.fld1.3.0.2,_4];
Goto(bb25)
}
bb25 = {
_42.fld0.fld1 = (*_52).2 as u64;
_48 = _28.fld1.3.3.2 - _33;
_40.1 = _62.fld0.fld4 as i32;
_30 = _28.fld1.1 as f32;
_74.0.1.1 = (*_52).1;
_28.fld1.3.0.1.2 = _7 as i16;
_28.fld1.3.2 = [_22,_22,_44];
_62.fld3.2 = _28.fld1.3.2;
_28.fld4 = (*_52).2;
_46 = (*_52).0;
_28.fld1.4 = [_12,_28.fld1.1,_28.fld1.3.0.0,_28.fld1.3.0.0];
_42.fld0.fld5 = [_12,_28.fld1.1,_42.fld3.0.0,_28.fld1.1,_12];
_28.fld1.3.3.2 = -_18;
_12 = _28.fld1.1;
_69 = _6;
_74.3.0 = _28.fld1.3.3.0;
_66 = _14;
match _66 {
0 => bb9,
1 => bb13,
2 => bb16,
3 => bb8,
4 => bb20,
5 => bb10,
6 => bb26,
316830473790792078447661710524054247143 => bb28,
_ => bb27
}
}
bb26 = {
_13 = 2836938379361959789_u64;
_12 = 3183239825_u32 | 404959320_u32;
_8 = 22_i8 as i128;
_4 = !4_i8;
_2 = '\u{72f1}';
_6 = !756970299_i32;
_12 = 560173500_u32;
_10 = true as u8;
_5 = 9018_i16 | (-16481_i16);
_2 = '\u{9c21f}';
_3 = _4 as isize;
_15 = core::ptr::addr_of!(_9);
_1 = !true;
_4 = 30_i8;
_10 = 254_u8;
_11 = 5244_u16;
_9 = 7_usize & 7274935373169648952_usize;
_1 = true;
Call(_2 = fn1(_1, _10, (*_15), _14, _3, _15, _15, _4, _3, _14, _15), bb2, UnwindUnreachable())
}
bb27 = {
_42.fld0.fld4 = -_28.fld5.2;
_62.fld4.0.2 = -_40.2;
_59.2 = _1 as i16;
_28.fld1.3.3.0 = _30 * _19;
_62.fld3.3.2 = _62.fld4.0.2;
_60 = _26 & _26;
(*_52).2 = _28.fld5.2 | _42.fld0.fld4;
Goto(bb23)
}
bb28 = {
_9 = _59.1 << _12;
_42.fld3.0.1 = (_28.fld1.3.0.1.0, _62.fld3.0.1.1, _62.fld0.fld4);
_74.0.1.2 = _59.2 + _42.fld3.0.1.2;
_28.fld1.3 = (_42.fld3.0, _42.fld3.1, _62.fld3.2, _42.fld4.0);
(*_52) = (_42.fld3.0.1.0, _9, _28.fld4);
match _26 {
0 => bb1,
1 => bb10,
2 => bb27,
3 => bb29,
5605773771392297946 => bb31,
_ => bb30
}
}
bb29 = {
_2 = '\u{7711c}';
_17 = _12 as u16;
_2 = '\u{3fe3}';
_19 = _12 as f32;
_1 = true;
_14 = 162032749512169779104307618798133363501_u128 & 149019603669268194435903335522125372432_u128;
_10 = 160_u8;
Goto(bb3)
}
bb30 = {
_42.fld0.fld4 = -_28.fld5.2;
_62.fld4.0.2 = -_40.2;
_59.2 = _1 as i16;
_28.fld1.3.3.0 = _30 * _19;
_62.fld3.3.2 = _62.fld4.0.2;
_60 = _26 & _26;
(*_52).2 = _28.fld5.2 | _42.fld0.fld4;
Goto(bb23)
}
bb31 = {
_65 = _37 as f32;
_42.fld4 = (_62.fld4.0,);
_40.0 = _27 - _25;
_75 = !_22;
RET = core::ptr::addr_of_mut!(_78);
_82.1.1 = _62.fld4.0.0 as usize;
_42.fld3.0.1 = ((*_52).0, (*_15), (*_52).2);
Goto(bb32)
}
bb32 = {
Call(_88 = dump_var(0_usize, 58_usize, Move(_58), 54_usize, Move(_54), 10_usize, Move(_10), 44_usize, Move(_44)), bb33, UnwindUnreachable())
}
bb33 = {
Call(_88 = dump_var(0_usize, 21_usize, Move(_21), 66_usize, Move(_66), 59_usize, Move(_59), 13_usize, Move(_13)), bb34, UnwindUnreachable())
}
bb34 = {
Call(_88 = dump_var(0_usize, 16_usize, Move(_16), 7_usize, Move(_7), 46_usize, Move(_46), 4_usize, Move(_4)), bb35, UnwindUnreachable())
}
bb35 = {
Call(_88 = dump_var(0_usize, 14_usize, Move(_14), 12_usize, Move(_12), 17_usize, Move(_17), 8_usize, Move(_8)), bb36, UnwindUnreachable())
}
bb36 = {
Call(_88 = dump_var(0_usize, 22_usize, Move(_22), 6_usize, Move(_6), 60_usize, Move(_60), 41_usize, Move(_41)), bb37, UnwindUnreachable())
}
bb37 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: bool,mut _2: u8,mut _3: usize,mut _4: u128,mut _5: isize,mut _6: *const usize,mut _7: *const usize,mut _8: i8,mut _9: isize,mut _10: u128,mut _11: *const usize) -> char {
mir! {
type RET = char;
let _12: (char, usize, i16);
let _13: [u32; 5];
let _14: [char; 1];
let _15: [u64; 2];
let _16: [u32; 4];
let _17: Adt57;
let _18: Adt48;
let _19: ((f32, i32, f64),);
let _20: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _21: f32;
let _22: [i8; 4];
let _23: usize;
let _24: f32;
let _25: bool;
let _26: ((f32, i32, f64),);
let _27: bool;
let _28: Adt54;
let _29: f64;
let _30: *mut u8;
let _31: ();
let _32: ();
{
RET = '\u{7d5e2}';
_3 = !(*_11);
RET = '\u{a587}';
RET = '\u{4ba4c}';
_2 = !125_u8;
_9 = 8780758808418768061_i64 as isize;
_13 = [3521785998_u32,3661441565_u32,3845522083_u32,3758218809_u32,1993356248_u32];
(*_6) = _3 >> _9;
_12.2 = (-21847_i16) & (-19932_i16);
_12.2 = 24510_i16;
_8 = (-58_i8);
_6 = core::ptr::addr_of!((*_7));
(*_11) = _10 as usize;
_12.0 = RET;
Goto(bb1)
}
bb1 = {
_10 = _2 as u128;
_12.2 = !(-30235_i16);
_11 = core::ptr::addr_of!((*_7));
_12.2 = !5839_i16;
RET = _12.0;
_12.0 = RET;
_3 = _4 as usize;
_12 = (RET, (*_11), (-10799_i16));
_14 = [RET];
_1 = (*_6) >= _3;
Goto(bb2)
}
bb2 = {
_12.0 = RET;
_15 = [17724343691092577088_u64,3894722559733840518_u64];
_13 = [1051290841_u32,579700318_u32,1608892107_u32,3733907478_u32,1275372977_u32];
(*_7) = _9 as usize;
RET = _12.0;
_12.1 = (*_6);
_19.0.0 = _2 as f32;
Call((*_11) = fn2(_11, _12.2, _11, _3, _12.2, _12, _13, _2, RET, _9, _4, _14, _12.2, _11), bb3, UnwindUnreachable())
}
bb3 = {
(*_6) = _12.2 as usize;
_1 = true;
_12 = (RET, (*_7), (-10034_i16));
(*_11) = !_12.1;
_12.1 = (-926717053_i32) as usize;
_8 = -95_i8;
_13 = [352605424_u32,1018957844_u32,3315549706_u32,3650165855_u32,2076350831_u32];
(*_11) = !_3;
_12 = (RET, (*_11), 6683_i16);
_10 = 7911979412728894090_u64 as u128;
(*_6) = _12.1 ^ _3;
_14 = [RET];
(*_7) = 3280956569_u32 as usize;
_12.1 = !(*_6);
(*_6) = _3 + _12.1;
_2 = 43_u8 ^ 111_u8;
Goto(bb4)
}
bb4 = {
_12.0 = RET;
(*_6) = !_3;
_8 = (-74_i8);
_19.0.2 = _8 as f64;
_20.0.1 = _12;
_19.0.0 = _20.0.1.2 as f32;
_20.3 = (_19.0.0, (-1134767950_i32), _19.0.2);
_19.0.1 = -_20.3.1;
_21 = _19.0.0;
_9 = _2 as isize;
_20.3.2 = _2 as f64;
_1 = _12.0 > _20.0.1.0;
(*_7) = _20.0.1.1 * _12.1;
(*_6) = _3;
_6 = _7;
_20.0.0 = _20.3.1 as u32;
_6 = core::ptr::addr_of!(_12.1);
_20.0.1.2 = _12.2;
RET = _12.0;
(*_6) = (*_7);
_16 = [_20.0.0,_20.0.0,_20.0.0,_20.0.0];
_11 = core::ptr::addr_of!((*_11));
(*_6) = (*_11) * (*_11);
match _20.3.1 {
0 => bb3,
1 => bb2,
2 => bb5,
3 => bb6,
340282366920938463463374607430633443506 => bb8,
_ => bb7
}
}
bb5 = {
(*_6) = _12.2 as usize;
_1 = true;
_12 = (RET, (*_7), (-10034_i16));
(*_11) = !_12.1;
_12.1 = (-926717053_i32) as usize;
_8 = -95_i8;
_13 = [352605424_u32,1018957844_u32,3315549706_u32,3650165855_u32,2076350831_u32];
(*_11) = !_3;
_12 = (RET, (*_11), 6683_i16);
_10 = 7911979412728894090_u64 as u128;
(*_6) = _12.1 ^ _3;
_14 = [RET];
(*_7) = 3280956569_u32 as usize;
_12.1 = !(*_6);
(*_6) = _3 + _12.1;
_2 = 43_u8 ^ 111_u8;
Goto(bb4)
}
bb6 = {
_12.0 = RET;
_15 = [17724343691092577088_u64,3894722559733840518_u64];
_13 = [1051290841_u32,579700318_u32,1608892107_u32,3733907478_u32,1275372977_u32];
(*_7) = _9 as usize;
RET = _12.0;
_12.1 = (*_6);
_19.0.0 = _2 as f32;
Call((*_11) = fn2(_11, _12.2, _11, _3, _12.2, _12, _13, _2, RET, _9, _4, _14, _12.2, _11), bb3, UnwindUnreachable())
}
bb7 = {
_10 = _2 as u128;
_12.2 = !(-30235_i16);
_11 = core::ptr::addr_of!((*_7));
_12.2 = !5839_i16;
RET = _12.0;
_12.0 = RET;
_3 = _4 as usize;
_12 = (RET, (*_11), (-10799_i16));
_14 = [RET];
_1 = (*_6) >= _3;
Goto(bb2)
}
bb8 = {
_19.0.1 = _20.3.1;
_20.0.1 = (_12.0, (*_11), _12.2);
_19.0 = (_20.3.0, _20.3.1, _20.3.2);
_19.0.1 = 31963_u16 as i32;
(*_6) = !(*_7);
_20.3.0 = _19.0.0 * _21;
match _20.3.1 {
340282366920938463463374607430633443506 => bb9,
_ => bb1
}
}
bb9 = {
_7 = core::ptr::addr_of!((*_11));
_3 = !(*_11);
_1 = !false;
_21 = -_20.3.0;
_8 = (-94_i8) & 5_i8;
_4 = !_10;
_20.0.1.0 = _12.0;
_20.0.0 = _1 as u32;
_1 = true;
_20.2 = [_9,_9,_9];
_10 = _2 as u128;
(*_6) = !(*_11);
_11 = core::ptr::addr_of!((*_11));
(*_11) = _9 as usize;
(*_6) = 1719572073556221813_i64 as usize;
_24 = -_21;
RET = _20.0.1.0;
_20.0.0 = _19.0.2 as u32;
_26.0 = (_24, _20.3.1, _20.3.2);
Call(_27 = fn3(_12.2, _20.3.0, (*_11), _26.0.1), bb10, UnwindUnreachable())
}
bb10 = {
_12.2 = _10 as i16;
match _26.0.1 {
0 => bb1,
1 => bb7,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
340282366920938463463374607430633443506 => bb17,
_ => bb16
}
}
bb11 = {
_10 = _2 as u128;
_12.2 = !(-30235_i16);
_11 = core::ptr::addr_of!((*_7));
_12.2 = !5839_i16;
RET = _12.0;
_12.0 = RET;
_3 = _4 as usize;
_12 = (RET, (*_11), (-10799_i16));
_14 = [RET];
_1 = (*_6) >= _3;
Goto(bb2)
}
bb12 = {
_19.0.1 = _20.3.1;
_20.0.1 = (_12.0, (*_11), _12.2);
_19.0 = (_20.3.0, _20.3.1, _20.3.2);
_19.0.1 = 31963_u16 as i32;
(*_6) = !(*_7);
_20.3.0 = _19.0.0 * _21;
match _20.3.1 {
340282366920938463463374607430633443506 => bb9,
_ => bb1
}
}
bb13 = {
_10 = _2 as u128;
_12.2 = !(-30235_i16);
_11 = core::ptr::addr_of!((*_7));
_12.2 = !5839_i16;
RET = _12.0;
_12.0 = RET;
_3 = _4 as usize;
_12 = (RET, (*_11), (-10799_i16));
_14 = [RET];
_1 = (*_6) >= _3;
Goto(bb2)
}
bb14 = {
_12.0 = RET;
_15 = [17724343691092577088_u64,3894722559733840518_u64];
_13 = [1051290841_u32,579700318_u32,1608892107_u32,3733907478_u32,1275372977_u32];
(*_7) = _9 as usize;
RET = _12.0;
_12.1 = (*_6);
_19.0.0 = _2 as f32;
Call((*_11) = fn2(_11, _12.2, _11, _3, _12.2, _12, _13, _2, RET, _9, _4, _14, _12.2, _11), bb3, UnwindUnreachable())
}
bb15 = {
(*_6) = _12.2 as usize;
_1 = true;
_12 = (RET, (*_7), (-10034_i16));
(*_11) = !_12.1;
_12.1 = (-926717053_i32) as usize;
_8 = -95_i8;
_13 = [352605424_u32,1018957844_u32,3315549706_u32,3650165855_u32,2076350831_u32];
(*_11) = !_3;
_12 = (RET, (*_11), 6683_i16);
_10 = 7911979412728894090_u64 as u128;
(*_6) = _12.1 ^ _3;
_14 = [RET];
(*_7) = 3280956569_u32 as usize;
_12.1 = !(*_6);
(*_6) = _3 + _12.1;
_2 = 43_u8 ^ 111_u8;
Goto(bb4)
}
bb16 = {
_12.0 = RET;
_15 = [17724343691092577088_u64,3894722559733840518_u64];
_13 = [1051290841_u32,579700318_u32,1608892107_u32,3733907478_u32,1275372977_u32];
(*_7) = _9 as usize;
RET = _12.0;
_12.1 = (*_6);
_19.0.0 = _2 as f32;
Call((*_11) = fn2(_11, _12.2, _11, _3, _12.2, _12, _13, _2, RET, _9, _4, _14, _12.2, _11), bb3, UnwindUnreachable())
}
bb17 = {
_28.fld1.0.2 = _19.0.2;
_26.0.1 = _19.0.1;
_12.1 = (*_7);
_12 = (_20.0.1.0, _3, _20.0.1.2);
(*_7) = (*_6);
_12.1 = _3 + (*_7);
_20.3 = _26.0;
RET = _12.0;
_4 = _9 as u128;
_28.fld1.0.0 = 4633240440049941809_u64 as f32;
_12.0 = RET;
_20.0.3 = core::ptr::addr_of_mut!(_2);
_20.0.2 = _8 + _8;
_22 = [_8,_8,_20.0.2,_20.0.2];
RET = _20.0.1.0;
_23 = !_20.0.1.1;
_26 = (_19.0,);
_22 = [_20.0.2,_8,_20.0.2,_8];
_28.fld1.0.1 = _20.3.1 ^ _19.0.1;
_7 = core::ptr::addr_of!(_12.1);
_23 = _2 as usize;
Goto(bb18)
}
bb18 = {
Call(_31 = dump_var(1_usize, 3_usize, Move(_3), 27_usize, Move(_27), 15_usize, Move(_15), 13_usize, Move(_13)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(1_usize, 8_usize, Move(_8), 2_usize, Move(_2), 23_usize, Move(_23), 10_usize, Move(_10)), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: *const usize,mut _2: i16,mut _3: *const usize,mut _4: usize,mut _5: i16,mut _6: (char, usize, i16),mut _7: [u32; 5],mut _8: u8,mut _9: char,mut _10: isize,mut _11: u128,mut _12: [char; 1],mut _13: i16,mut _14: *const usize) -> usize {
mir! {
type RET = usize;
let _15: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _16: isize;
let _17: f32;
let _18: i8;
let _19: u32;
let _20: [i8; 4];
let _21: i32;
let _22: Adt64;
let _23: (f32, i32, f64);
let _24: f32;
let _25: [i64; 3];
let _26: Adt52;
let _27: [i64; 1];
let _28: f64;
let _29: (f32, i32, f64);
let _30: i32;
let _31: (char, usize, i16);
let _32: ();
let _33: ();
{
_6.1 = !_4;
_11 = 144010731151862002396954358265667645091_u128 + 329201095347432512094612963724398729029_u128;
_12 = [_9];
_12 = [_6.0];
_4 = !_6.1;
_15.0.1.2 = false as i16;
_15.0.2 = 96_i8 ^ 60_i8;
_15.0.3 = core::ptr::addr_of_mut!(_8);
_15.3.1 = (-861318656_i32);
_6.2 = 2795340843027373309_u64 as i16;
_16 = _10;
_4 = !_6.1;
_15.0.1 = _6;
RET = _4;
_15.0.0 = !4023697909_u32;
_15.2 = [_16,_16,_16];
_15.0.2 = _11 as i8;
RET = true as usize;
_6 = _15.0.1;
_17 = _15.0.0 as f32;
_15.3.2 = _8 as f64;
_15.1 = [_8,_8,_8];
_15.0.1 = _6;
Goto(bb1)
}
bb1 = {
_6.0 = _15.0.1.0;
_15.0.1 = (_6.0, _4, _2);
_8 = 235_u8;
_9 = _6.0;
_15.2 = [_16,_16,_16];
_7 = [_15.0.0,_15.0.0,_15.0.0,_15.0.0,_15.0.0];
_6 = (_9, _4, _13);
_17 = _8 as f32;
_15.1 = [_8,_8,_8];
_15.0.1.0 = _6.0;
_8 = 62_u8 - 126_u8;
_15.3.2 = (-1983324615697000964_i64) as f64;
_10 = _16;
_15.3.2 = _16 as f64;
_6.0 = _15.0.1.0;
_6.2 = _17 as i16;
_10 = _11 as isize;
_15.0.1.1 = !_6.1;
_15.3.0 = _17;
_9 = _6.0;
_15.0.1 = _6;
_15.0.1 = _6;
_9 = _15.0.1.0;
_18 = -_15.0.2;
_7 = [_15.0.0,_15.0.0,_15.0.0,_15.0.0,_15.0.0];
_9 = _15.0.1.0;
_4 = 49892_u16 as usize;
_15.0.1 = (_6.0, _4, _6.2);
match _2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768200657 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_15.3.2 = (-21913504835353391945588737015147215293_i128) as f64;
_15.3.0 = 4200849538569870473_i64 as f32;
_15.0.3 = core::ptr::addr_of_mut!(_8);
_17 = _15.3.0 * _15.3.0;
_15.0.3 = core::ptr::addr_of_mut!(_8);
_15.3.2 = _15.3.1 as f64;
_20 = [_15.0.2,_18,_15.0.2,_18];
_7 = [_15.0.0,_15.0.0,_15.0.0,_15.0.0,_15.0.0];
_2 = true as i16;
RET = !_6.1;
_7 = [_15.0.0,_15.0.0,_15.0.0,_15.0.0,_15.0.0];
_13 = _15.0.0 as i16;
_6.2 = _13;
_15.3.2 = _15.0.0 as f64;
_15.0.3 = core::ptr::addr_of_mut!(_8);
Goto(bb11)
}
bb11 = {
RET = 4896_u16 as usize;
_5 = _2 ^ _6.2;
Goto(bb12)
}
bb12 = {
_15.3.0 = -_17;
_6.1 = _4;
_19 = !_15.0.0;
_21 = _15.3.1 << _4;
_13 = _5 + _6.2;
_6 = (_15.0.1.0, _4, _5);
_6.2 = _19 as i16;
_18 = -_15.0.2;
_20 = [_18,_18,_18,_15.0.2];
_15.0.1.0 = _6.0;
_20 = [_18,_18,_15.0.2,_15.0.2];
_7 = [_19,_19,_15.0.0,_15.0.0,_15.0.0];
_15.3.1 = _21;
Goto(bb13)
}
bb13 = {
_24 = _18 as f32;
_23 = _15.3;
_6.1 = RET & RET;
_7 = [_15.0.0,_15.0.0,_15.0.0,_19,_19];
_7 = [_15.0.0,_15.0.0,_19,_19,_15.0.0];
_15.1 = [_8,_8,_8];
_12 = [_6.0];
_23.0 = _23.2 as f32;
Call(_24 = core::intrinsics::transmute(_21), bb14, UnwindUnreachable())
}
bb14 = {
_15.3 = _23;
_6.0 = _9;
_23 = _15.3;
_3 = _14;
_23.0 = -_15.3.0;
_24 = _23.2 as f32;
_15.0.1.1 = _4;
_29.2 = _17 as f64;
_6.0 = _9;
_23.1 = _13 as i32;
_29 = (_17, _15.3.1, _23.2);
_13 = !_15.0.1.2;
_15.3.0 = _29.0;
_7 = [_19,_19,_15.0.0,_15.0.0,_15.0.0];
_24 = -_29.0;
_29.0 = -_15.3.0;
_15.3 = (_24, _21, _23.2);
_15.0.1 = _6;
_31.0 = _9;
_31.2 = !_5;
_25 = [(-1512645335689770719_i64),4407012011797059099_i64,(-4587484253680182706_i64)];
_23.1 = _29.1;
_29.2 = _23.2;
_2 = _5 & _5;
_15.0.1.2 = _5;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(2_usize, 9_usize, Move(_9), 13_usize, Move(_13), 25_usize, Move(_25), 16_usize, Move(_16)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(2_usize, 11_usize, Move(_11), 7_usize, Move(_7), 18_usize, Move(_18), 20_usize, Move(_20)), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: i16,mut _2: f32,mut _3: usize,mut _4: i32) -> bool {
mir! {
type RET = bool;
let _5: isize;
let _6: usize;
let _7: isize;
let _8: bool;
let _9: char;
let _10: (char, usize, i16);
let _11: [bool; 5];
let _12: Adt61;
let _13: f64;
let _14: f64;
let _15: isize;
let _16: u128;
let _17: [bool; 5];
let _18: i32;
let _19: *const u128;
let _20: (f32, i32, f64);
let _21: [char; 1];
let _22: u32;
let _23: Adt53;
let _24: (char, usize, i16);
let _25: isize;
let _26: *mut [u16; 8];
let _27: (f32, i32, f64);
let _28: ((f32, i32, f64),);
let _29: (char, usize, i16);
let _30: isize;
let _31: f64;
let _32: Adt61;
let _33: [char; 1];
let _34: [u32; 4];
let _35: u128;
let _36: isize;
let _37: f32;
let _38: i8;
let _39: u64;
let _40: isize;
let _41: [i8; 4];
let _42: ();
let _43: ();
{
_1 = (-6762_i16);
_2 = 61_i8 as f32;
_1 = 6818908095345735529_u64 as i16;
_2 = 91156442408385044258775428482077318596_u128 as f32;
RET = !true;
_1 = !(-9698_i16);
RET = false | false;
_2 = 15730788473372337366_u64 as f32;
_1 = -22289_i16;
_2 = _4 as f32;
_3 = 4_usize;
RET = false & true;
_4 = -(-759100060_i32);
_5 = -(-92_isize);
_5 = (-9223372036854775808_isize);
_1 = !(-7678_i16);
RET = true;
RET = false;
_2 = 119_u8 as f32;
Call(_3 = fn4(_5, _5, _2, _5, _4, RET, _5, _5, _5, _5, RET, RET, RET, _1), bb1, UnwindUnreachable())
}
bb1 = {
_4 = !1529257077_i32;
_3 = 14929307834760339998_usize & 7898710987027183011_usize;
_3 = 0_u8 as usize;
_5 = _4 as isize;
RET = false & false;
RET = true;
RET = true;
_4 = -(-462062276_i32);
_5 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_2 = (-110636907894965560740124055224622645148_i128) as f32;
_6 = _1 as usize;
RET = false;
_5 = -9223372036854775807_isize;
_6 = _4 as usize;
_6 = _2 as usize;
_4 = (-787526298_i32);
_5 = -123_isize;
_3 = (-66_i8) as usize;
_7 = _5;
RET = !true;
_1 = -30786_i16;
RET = _4 < _4;
RET = !false;
Call(_5 = core::intrinsics::transmute(_3), bb2, UnwindUnreachable())
}
bb2 = {
_1 = 29343_i16;
_7 = _5 | _5;
_4 = (-316270709_i32);
_2 = _1 as f32;
match _4 {
0 => bb3,
340282366920938463463374607431451940747 => bb5,
_ => bb4
}
}
bb3 = {
_4 = !1529257077_i32;
_3 = 14929307834760339998_usize & 7898710987027183011_usize;
_3 = 0_u8 as usize;
_5 = _4 as isize;
RET = false & false;
RET = true;
RET = true;
_4 = -(-462062276_i32);
_5 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_2 = (-110636907894965560740124055224622645148_i128) as f32;
_6 = _1 as usize;
RET = false;
_5 = -9223372036854775807_isize;
_6 = _4 as usize;
_6 = _2 as usize;
_4 = (-787526298_i32);
_5 = -123_isize;
_3 = (-66_i8) as usize;
_7 = _5;
RET = !true;
_1 = -30786_i16;
RET = _4 < _4;
RET = !false;
Call(_5 = core::intrinsics::transmute(_3), bb2, UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
RET = !false;
Goto(bb6)
}
bb6 = {
_9 = '\u{7d43e}';
_8 = _7 <= _7;
_1 = -(-8759_i16);
Goto(bb7)
}
bb7 = {
RET = _8;
_5 = _7 * _7;
Goto(bb8)
}
bb8 = {
_8 = RET;
_6 = 12109_u16 as usize;
_4 = (-1238092646_i32) >> _5;
_3 = !_6;
_10.0 = _9;
_8 = !RET;
_2 = 2205024057231883757_i64 as f32;
RET = _8;
_10.0 = _9;
_4 = (-1522347437_i32);
RET = !_8;
_10 = (_9, _3, _1);
_10.1 = _6 + _6;
Goto(bb9)
}
bb9 = {
_8 = RET == RET;
_10.2 = _5 as i16;
_3 = _10.2 as usize;
_11 = [_8,_8,_8,_8,RET];
_13 = _2 as f64;
_2 = 210221444_u32 as f32;
RET = _10.0 > _9;
_1 = _4 as i16;
_4 = 309863812_i32;
RET = !_8;
_10 = (_9, _3, _1);
_3 = 18154047571992272428_u64 as usize;
_1 = _10.2;
_15 = _5 | _7;
_7 = _5 | _15;
_10 = (_9, _3, _1);
_6 = _10.1;
_5 = _15 | _7;
Goto(bb10)
}
bb10 = {
_14 = _1 as f64;
_8 = _7 != _5;
_16 = 82041004579809849102058018499394858083_u128 * 294950709526730009273754933876767545600_u128;
_16 = 23721112166310706521385360083761688747_u128;
_11 = [_8,_8,_8,_8,_8];
_13 = _14;
_10.2 = (-5183223761790417872401066816736522266_i128) as i16;
_7 = _5 * _5;
_10.2 = 11375_u16 as i16;
_1 = _10.2 + _10.2;
_7 = _15 | _5;
_18 = _4 ^ _4;
_2 = 97_u8 as f32;
_10.1 = _3;
_5 = _7;
_20 = (_2, _18, _14);
_16 = 308118992254601925963354105680023281517_u128 * 258721791935393415511481603300978474589_u128;
_16 = 318409276508728537560628764404500808734_u128;
_20.1 = -_4;
_22 = 3525609966_u32 & 4219223034_u32;
_8 = RET;
_17 = _11;
RET = !_8;
_14 = -_13;
_4 = _20.1;
Goto(bb11)
}
bb11 = {
_9 = _10.0;
match _16 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
6 => bb7,
318409276508728537560628764404500808734 => bb12,
_ => bb8
}
}
bb12 = {
_19 = core::ptr::addr_of!(_16);
_9 = _10.0;
(*_19) = 75790755494658659105236666834656912042_u128 << _7;
_28.0.1 = _20.1 * _20.1;
_27 = _20;
_27 = _20;
_14 = -_13;
_13 = 15169316518836213377_u64 as f64;
_28.0.1 = _27.0 as i32;
_10.1 = _3;
Goto(bb13)
}
bb13 = {
_31 = _20.2;
_28.0.2 = _27.2 - _27.2;
_28 = (_20,);
_29.2 = _6 as i16;
_24.0 = _9;
Goto(bb14)
}
bb14 = {
_11 = _17;
_28.0.0 = -_2;
_21 = [_24.0];
_27 = (_28.0.0, _18, _28.0.2);
RET = _8;
_7 = 62424_u16 as isize;
_10.2 = _1;
Goto(bb15)
}
bb15 = {
Call(_42 = dump_var(3_usize, 11_usize, Move(_11), 18_usize, Move(_18), 15_usize, Move(_15), 6_usize, Move(_6)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_42 = dump_var(3_usize, 5_usize, Move(_5), 4_usize, Move(_4), 17_usize, Move(_17), 1_usize, Move(_1)), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: isize,mut _2: isize,mut _3: f32,mut _4: isize,mut _5: i32,mut _6: bool,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: bool,mut _12: bool,mut _13: bool,mut _14: i16) -> usize {
mir! {
type RET = usize;
let _15: char;
let _16: usize;
let _17: u32;
let _18: [i8; 4];
let _19: (f32, i32, f64);
let _20: ((f32, i32, f64),);
let _21: u8;
let _22: isize;
let _23: (char, usize, i16);
let _24: (char, usize, i16);
let _25: *mut i64;
let _26: [u64; 2];
let _27: i16;
let _28: ();
let _29: ();
{
_9 = _1 & _4;
_6 = _12;
_10 = _9 - _2;
RET = !1007958391635451525_usize;
_3 = (-76273037237506616206952653445493985183_i128) as f32;
_10 = _1 | _9;
_7 = -_4;
_14 = !4456_i16;
_1 = _5 as isize;
_14 = !15739_i16;
_4 = !_10;
_16 = RET << _10;
_11 = _8 == _4;
_10 = _3 as isize;
_17 = 1764010611_u32 * 828655499_u32;
_7 = -_4;
_7 = _8 & _10;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463454151235394913435648 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_12 = !_11;
_12 = _10 == _4;
_12 = _2 != _7;
_5 = -(-2125948213_i32);
_1 = 36_u8 as isize;
_18 = [111_i8,56_i8,111_i8,(-70_i8)];
_15 = '\u{e5b3}';
_11 = _12;
_17 = !1889591621_u32;
match _8 {
0 => bb8,
1 => bb9,
340282366920938463454151235394913435648 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_20.0.1 = _5 | _5;
_12 = !_11;
_4 = 2368804447485672241_i64 as isize;
Call(_19.2 = fn5(_9, _2, _10), bb12, UnwindUnreachable())
}
bb12 = {
_10 = -_1;
Goto(bb13)
}
bb13 = {
_4 = _10;
_19.0 = _3 * _3;
_2 = _17 as isize;
_5 = _19.2 as i32;
_10 = _9 ^ _9;
_15 = '\u{47f69}';
_20.0.1 = _5 | _5;
_11 = _13 | _12;
_20.0 = (_3, _5, _19.2);
_20.0.2 = 29634_u16 as f64;
_20.0.1 = _5 | _5;
_14 = _15 as i16;
_19 = (_20.0.0, _20.0.1, _20.0.2);
_20 = (_19,);
_22 = _2;
_19.2 = -_20.0.2;
_23.2 = _14;
_4 = !_10;
_21 = 4636284350537950345_i64 as u8;
_21 = 71416369967027247437299858522765944804_u128 as u8;
_20.0.0 = _3 + _3;
_23.1 = _16 ^ _16;
_8 = !_9;
_19.1 = _20.0.2 as i32;
_3 = _10 as f32;
_2 = !_10;
Call(RET = core::intrinsics::bswap(_23.1), bb14, UnwindUnreachable())
}
bb14 = {
_24.1 = _20.0.0 as usize;
_24.2 = _16 as i16;
_23.1 = _16 ^ _16;
_14 = _23.2;
_24.0 = _15;
_23 = (_15, RET, _24.2);
_14 = _24.2 * _23.2;
_20.0.2 = _19.2 * _19.2;
_18 = [87_i8,(-65_i8),(-59_i8),85_i8];
_23.0 = _15;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(4_usize, 1_usize, Move(_1), 12_usize, Move(_12), 14_usize, Move(_14), 21_usize, Move(_21)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(4_usize, 18_usize, Move(_18), 15_usize, Move(_15), 23_usize, Move(_23), 6_usize, Move(_6)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(4_usize, 17_usize, Move(_17), 5_usize, Move(_5), 29_usize, _29, 29_usize, _29), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: isize,mut _3: isize) -> f64 {
mir! {
type RET = f64;
let _4: i32;
let _5: [i128; 6];
let _6: [i8; 4];
let _7: *mut ([i64; 3], char);
let _8: u16;
let _9: ([i64; 3], char);
let _10: *const *mut [i64; 3];
let _11: (f32, i32, f64);
let _12: [u16; 8];
let _13: f32;
let _14: i8;
let _15: f64;
let _16: *const usize;
let _17: isize;
let _18: *mut f64;
let _19: u32;
let _20: usize;
let _21: [u32; 5];
let _22: f32;
let _23: i64;
let _24: bool;
let _25: [u16; 8];
let _26: char;
let _27: isize;
let _28: [isize; 3];
let _29: bool;
let _30: ((f32, i32, f64),);
let _31: [isize; 3];
let _32: f32;
let _33: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]);
let _34: ();
let _35: ();
{
RET = 39_u8 as f64;
_3 = '\u{bb062}' as isize;
RET = 106310163663025427871004119429988606663_i128 as f64;
RET = 33_u8 as f64;
_2 = -_1;
_5 = [163315637403753330997291715855776159046_i128,54301779891272389936136507768263905151_i128,(-146505127896538213117976551375988833327_i128),(-126043584619440118238235224741904792743_i128),159208281632322882505170288780693471153_i128,8468618169485743185462419785521343355_i128];
_4 = 6_usize as i32;
_2 = _1;
_5 = [(-84257201944037210158647877737337115322_i128),9112329193726745570136931497287809020_i128,2011195642255932265723293813543466747_i128,125089389402643928016157126129923570424_i128,(-95116293257812487801484318620987850701_i128),23311409975237768612750121882798131101_i128];
_3 = _1 >> _1;
_3 = !_1;
_6 = [(-49_i8),(-15_i8),26_i8,52_i8];
_6 = [(-76_i8),(-15_i8),(-54_i8),(-20_i8)];
RET = (-108220983641420440020365373543221129315_i128) as f64;
_5 = [129386928742534773915181247880963150474_i128,(-144900333076249160582618436955594681304_i128),(-16077171221698831500889230735685973817_i128),52766371218565319030436743426739288819_i128,(-17598653140102983404751373179037447717_i128),111469190192580500557485486524885764240_i128];
_6 = [67_i8,(-72_i8),57_i8,117_i8];
_6 = [(-16_i8),(-98_i8),87_i8,32_i8];
_1 = !_2;
_3 = !_2;
_2 = _1 >> _3;
_1 = _3;
_4 = 2072528838_i32 & 806385557_i32;
_5 = [117132997095338061876494460864631486026_i128,(-98413788161771227428180541500001854619_i128),33208658564504461541174369528931019559_i128,150116543574474385194845013898785641073_i128,81338007763739745353426993829591827605_i128,17455827360534165268135980613872121845_i128];
RET = (-8607_i16) as f64;
RET = _2 as f64;
_5 = [115920529171377475731705201982889272665_i128,147084698481721886616535725010189208541_i128,(-163296224479568745630011816202804596856_i128),131272139577013842302544198356321620827_i128,(-76312224572699381314782416289794826288_i128),103787422537072208907089895146881928131_i128];
_5 = [20398055615009191979983507952154021549_i128,(-156638267526838239298022774879693568522_i128),146140787579142243835819492290167090502_i128,135197381053512056007405262257196486709_i128,74142358724557945385869546583534588274_i128,140516924301631630043999600979285069218_i128];
Goto(bb1)
}
bb1 = {
RET = (-162326333673754772232693096652672684932_i128) as f64;
_7 = core::ptr::addr_of_mut!(_9);
_3 = _1 * _1;
(*_7).1 = '\u{ded72}';
_8 = !40904_u16;
(*_7).1 = '\u{56cb2}';
_11.0 = 22480308540687644822375458905543499969_i128 as f32;
_11.2 = _3 as f64;
_3 = 36_i8 as isize;
_6 = [(-121_i8),62_i8,(-103_i8),75_i8];
_3 = _2;
_9.0 = [(-2480005518290649377_i64),2427308429444435581_i64,(-2621695669857216729_i64)];
(*_7).1 = '\u{74dec}';
_7 = core::ptr::addr_of_mut!(_9);
_13 = _11.0;
_11.1 = -_4;
_11.0 = _13;
_12 = [_8,_8,_8,_8,_8,_8,_8,_8];
_9.0 = [(-8145174202019146912_i64),(-3829298210297298445_i64),(-2560277439782435317_i64)];
Call(_2 = fn6(_7, _7, _3, _4, _7, (*_7).1, _7, _5, _11.1), bb2, UnwindUnreachable())
}
bb2 = {
_15 = _11.2 + _11.2;
_1 = _3;
_14 = -21_i8;
(*_7).1 = '\u{97de8}';
_15 = 6_usize as f64;
_17 = !_1;
_6 = [_14,_14,_14,_14];
_12 = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _11.1 + _11.1;
_11.1 = _4;
_9.1 = '\u{fd14b}';
_2 = _17;
_15 = 5_usize as f64;
_6 = [_14,_14,_14,_14];
_6 = [_14,_14,_14,_14];
_11 = (_13, _4, RET);
_15 = _11.2;
_7 = core::ptr::addr_of_mut!((*_7));
RET = _11.2 * _15;
_8 = 45481_u16 + 43303_u16;
Goto(bb3)
}
bb3 = {
(*_7).0 = [3310978128949755186_i64,6601830945224212739_i64,(-6786578918005125670_i64)];
_7 = core::ptr::addr_of_mut!((*_7));
_5 = [(-18642080397162099562788367035155252606_i128),139105632276350162964005369670822382470_i128,(-90829611129424882340831764235929139032_i128),69994726832816765080076685317229518782_i128,29623968121284832064614570908241900349_i128,100294358643645818272707079497211338213_i128];
_11.2 = -RET;
_5 = [2168820735169366716383575098522876808_i128,(-74207352407067553862270060934656795617_i128),114426591047891300238193054462427780032_i128,(-118159692091407697014206712447868843473_i128),(-49706090100023912859259849085476096303_i128),121300555870148448226588646647890392909_i128];
_1 = _3;
RET = _15;
_14 = 104_i8 & (-14_i8);
_19 = 4095842998_u32 & 2529343594_u32;
_8 = 42244_u16 * 10734_u16;
_11.2 = RET - _15;
_9.1 = '\u{9d203}';
RET = -_15;
RET = _11.2 * _15;
_8 = 44472_u16;
_7 = core::ptr::addr_of_mut!((*_7));
(*_7).1 = '\u{5fca2}';
Goto(bb4)
}
bb4 = {
_16 = core::ptr::addr_of!(_20);
_9.1 = '\u{9842}';
_6 = [_14,_14,_14,_14];
_24 = !false;
_8 = 22382_u16;
_17 = _1;
(*_7).0 = [1172943070777329526_i64,8146506523765451202_i64,(-6358598283203110012_i64)];
(*_16) = 4_usize;
_11 = (_13, _4, _15);
_5 = [(-78645520771846749510471335196895100063_i128),31242813538432949041187503562561798995_i128,(-136724737014668818658353982619519569401_i128),(-116026481863321827001221217098862375887_i128),93801396359692046563217320201539035341_i128,(-151589205725635320586943839770624122752_i128)];
_21 = [_19,_19,_19,_19,_19];
_11.1 = 224_u8 as i32;
(*_7).1 = '\u{33f79}';
_25[_20] = _8 >> _20;
RET = -_15;
(*_16) = !291600299667185928_usize;
_18 = core::ptr::addr_of_mut!(_11.2);
_9.0 = [(-5765528062591403636_i64),2612937376617613293_i64,5459938223551580500_i64];
_23 = 166656955654626837258557269355209063620_i128 as i64;
match _8 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
22382 => bb11,
_ => bb10
}
}
bb5 = {
(*_7).0 = [3310978128949755186_i64,6601830945224212739_i64,(-6786578918005125670_i64)];
_7 = core::ptr::addr_of_mut!((*_7));
_5 = [(-18642080397162099562788367035155252606_i128),139105632276350162964005369670822382470_i128,(-90829611129424882340831764235929139032_i128),69994726832816765080076685317229518782_i128,29623968121284832064614570908241900349_i128,100294358643645818272707079497211338213_i128];
_11.2 = -RET;
_5 = [2168820735169366716383575098522876808_i128,(-74207352407067553862270060934656795617_i128),114426591047891300238193054462427780032_i128,(-118159692091407697014206712447868843473_i128),(-49706090100023912859259849085476096303_i128),121300555870148448226588646647890392909_i128];
_1 = _3;
RET = _15;
_14 = 104_i8 & (-14_i8);
_19 = 4095842998_u32 & 2529343594_u32;
_8 = 42244_u16 * 10734_u16;
_11.2 = RET - _15;
_9.1 = '\u{9d203}';
RET = -_15;
RET = _11.2 * _15;
_8 = 44472_u16;
_7 = core::ptr::addr_of_mut!((*_7));
(*_7).1 = '\u{5fca2}';
Goto(bb4)
}
bb6 = {
_15 = _11.2 + _11.2;
_1 = _3;
_14 = -21_i8;
(*_7).1 = '\u{97de8}';
_15 = 6_usize as f64;
_17 = !_1;
_6 = [_14,_14,_14,_14];
_12 = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _11.1 + _11.1;
_11.1 = _4;
_9.1 = '\u{fd14b}';
_2 = _17;
_15 = 5_usize as f64;
_6 = [_14,_14,_14,_14];
_6 = [_14,_14,_14,_14];
_11 = (_13, _4, RET);
_15 = _11.2;
_7 = core::ptr::addr_of_mut!((*_7));
RET = _11.2 * _15;
_8 = 45481_u16 + 43303_u16;
Goto(bb3)
}
bb7 = {
RET = (-162326333673754772232693096652672684932_i128) as f64;
_7 = core::ptr::addr_of_mut!(_9);
_3 = _1 * _1;
(*_7).1 = '\u{ded72}';
_8 = !40904_u16;
(*_7).1 = '\u{56cb2}';
_11.0 = 22480308540687644822375458905543499969_i128 as f32;
_11.2 = _3 as f64;
_3 = 36_i8 as isize;
_6 = [(-121_i8),62_i8,(-103_i8),75_i8];
_3 = _2;
_9.0 = [(-2480005518290649377_i64),2427308429444435581_i64,(-2621695669857216729_i64)];
(*_7).1 = '\u{74dec}';
_7 = core::ptr::addr_of_mut!(_9);
_13 = _11.0;
_11.1 = -_4;
_11.0 = _13;
_12 = [_8,_8,_8,_8,_8,_8,_8,_8];
_9.0 = [(-8145174202019146912_i64),(-3829298210297298445_i64),(-2560277439782435317_i64)];
Call(_2 = fn6(_7, _7, _3, _4, _7, (*_7).1, _7, _5, _11.1), bb2, UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_25 = _12;
_26 = _9.1;
_6 = [_14,_14,_14,_14];
_25 = [_8,_8,_8,_8,_8,_8,_8,_8];
_16 = core::ptr::addr_of!((*_16));
_20 = !6_usize;
(*_18) = -RET;
_2 = -_1;
Goto(bb12)
}
bb12 = {
_9.0 = [_23,_23,_23];
_17 = -_1;
match _8 {
0 => bb11,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb5,
5 => bb6,
22382 => bb13,
_ => bb7
}
}
bb13 = {
_15 = -(*_18);
RET = -_15;
_11 = (_13, _4, RET);
_20 = 1980065214393723504_u64 as usize;
_11.0 = -_13;
_27 = _17;
_19 = _4 as u32;
_30 = (_11,);
_30 = (_11,);
_29 = _24;
(*_7).1 = _26;
_19 = _30.0.2 as u32;
_11 = (_13, _30.0.1, RET);
(*_7).1 = _26;
RET = _30.0.2 - (*_18);
match _8 {
0 => bb1,
1 => bb2,
2 => bb5,
22382 => bb14,
_ => bb4
}
}
bb14 = {
_1 = _2;
_11.2 = _15 + RET;
_6 = [_14,_14,_14,_14];
_6 = [_14,_14,_14,_14];
(*_7).1 = _26;
(*_16) = RET as usize;
_1 = _3 | _17;
_7 = core::ptr::addr_of_mut!((*_7));
_20 = !0_usize;
_33.3.0.0 = !_19;
_8 = !10099_u16;
(*_18) = 117221504918184676242497805066159023521_i128 as f64;
_25 = [_8,_8,_8,_8,_8,_8,_8,_8];
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(5_usize, 4_usize, Move(_4), 1_usize, Move(_1), 6_usize, Move(_6), 9_usize, Move(_9)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(5_usize, 20_usize, Move(_20), 5_usize, Move(_5), 23_usize, Move(_23), 17_usize, Move(_17)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(5_usize, 27_usize, Move(_27), 3_usize, Move(_3), 35_usize, _35, 35_usize, _35), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: *mut ([i64; 3], char),mut _2: *mut ([i64; 3], char),mut _3: isize,mut _4: i32,mut _5: *mut ([i64; 3], char),mut _6: char,mut _7: *mut ([i64; 3], char),mut _8: [i128; 6],mut _9: i32) -> isize {
mir! {
type RET = isize;
let _10: *mut [u16; 8];
let _11: *const u128;
let _12: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]);
let _13: *mut [i64; 3];
let _14: [u32; 4];
let _15: [u64; 2];
let _16: ((f32, i32, f64),);
let _17: i32;
let _18: f32;
let _19: f32;
let _20: f64;
let _21: u16;
let _22: *mut [i64; 3];
let _23: [i64; 3];
let _24: *mut [u16; 8];
let _25: *mut (char, usize, i16);
let _26: bool;
let _27: bool;
let _28: [isize; 3];
let _29: ([i64; 3], char);
let _30: f64;
let _31: *const usize;
let _32: char;
let _33: ();
let _34: ();
{
(*_7).0 = [(-1835894168968077449_i64),(-1363720396519946261_i64),3965101480045804755_i64];
(*_7).1 = _6;
_1 = core::ptr::addr_of_mut!((*_2));
(*_2).1 = _6;
(*_1).0 = [7765314075216432094_i64,(-1142291958994096751_i64),6108023853668642649_i64];
RET = _3 | _3;
Call((*_5) = fn7(_5, _8, _8, _8, RET, _4, _1, RET, _2, _7, _5, _2, RET, _3, RET, _3), bb1, UnwindUnreachable())
}
bb1 = {
RET = _3 << _4;
(*_2).1 = _6;
_1 = _5;
_7 = core::ptr::addr_of_mut!((*_1));
(*_7).0 = [(-5916984670945947450_i64),(-5383058086057994663_i64),2976424424317272553_i64];
(*_7).1 = _6;
_6 = (*_7).1;
(*_7).0 = [1287122819084735838_i64,(-612371384215480269_i64),(-1758881122102030195_i64)];
_8 = [(-57291084960759563190631543978890563395_i128),56244565480529083307695041445263872483_i128,(-151860357823248205536185560013950080678_i128),112673529146825390904631941619762352004_i128,10875338054906976836733428762276021890_i128,(-20765089732270152071742320394280907548_i128)];
(*_2).0 = [(-8499421293753345630_i64),8239539539015953442_i64,(-6807968622727244955_i64)];
_14 = [1513857471_u32,4145367011_u32,3887334570_u32,3706820915_u32];
_12.0 = [94_i8,121_i8,59_i8,(-16_i8)];
_13 = core::ptr::addr_of_mut!((*_7).0);
_5 = core::ptr::addr_of_mut!((*_7));
_12.3.3.2 = _9 as f64;
_1 = _7;
_8 = [(-96294154204058575442790123335088071439_i128),(-23169440860393878699265422629410913272_i128),44606444819700948537602020731175017946_i128,104712943859847699295662793572359943315_i128,73198497698548518812284378981666092738_i128,130950398673641384272159171324809978899_i128];
_12.1 = 29_i8 as u32;
(*_5).0 = [(-568189292519799579_i64),4399239249489948327_i64,(-7801823378185140556_i64)];
(*_2).1 = _6;
_12.3.0.1.2 = 4786198839603105776_i64 as i16;
(*_2).1 = _6;
_5 = core::ptr::addr_of_mut!((*_1));
Call(_12.3.0.1.0 = fn9(_2, (*_5).1, _1, _12.3.3.2, (*_2).1, (*_2).0, _3, (*_1).1, (*_1).0, (*_5).1, _14, (*_2).1, RET, _3, (*_1).0, _9), bb2, UnwindUnreachable())
}
bb2 = {
_12.3.3.2 = 6876193270885872919_u64 as f64;
_12.2 = 140_u8 as f32;
_12.3.0.2 = (-111_i8) & (-45_i8);
_12.3.0.1 = ((*_1).1, 2_usize, 3007_i16);
_12.4 = [_12.1,_12.1,_12.1,_12.1];
Goto(bb3)
}
bb3 = {
_12.3.1 = [136_u8,51_u8,233_u8];
_12.3.3.0 = _12.2;
(*_2).1 = _6;
(*_5).1 = _12.3.0.1.0;
(*_2).0 = [3026609977051547846_i64,773976735862702438_i64,8154647738503245564_i64];
_14 = _12.4;
_12.1 = 291553387167362248441572827938527259065_u128 as u32;
(*_7).1 = _6;
_9 = _4;
(*_13) = [4908213921820281739_i64,5872520814663405152_i64,(-603391679010809620_i64)];
_12.3.3.1 = _4 - _4;
_16.0.1 = _12.3.3.1 | _12.3.3.1;
Goto(bb4)
}
bb4 = {
(*_5).0 = [(-4004165827512976724_i64),5165153319600731335_i64,5185825118945113831_i64];
(*_1).1 = _12.3.0.1.0;
(*_13) = [(-8390822262908818312_i64),3818142733373427350_i64,(-1260321345955626466_i64)];
_12.1 = 4031068145_u32;
_12.3.0.0 = 6952021265089091120_u64 as u32;
(*_2).0 = [1222519685732002838_i64,7698687571898340043_i64,562206660197798397_i64];
(*_1).1 = _12.3.0.1.0;
(*_7).0 = [6746361402758550717_i64,(-7150753284462920673_i64),8008065449688257888_i64];
_12.3.3.1 = !_16.0.1;
RET = 135_u8 as isize;
_19 = -_12.2;
_5 = core::ptr::addr_of_mut!((*_5));
_20 = -_12.3.3.2;
(*_7).0 = [4979734394431704055_i64,(-8614041064312438835_i64),(-869280330074536106_i64)];
_12.3.0.0 = _12.1;
_2 = core::ptr::addr_of_mut!((*_1));
match _12.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4031068145 => bb7,
_ => bb6
}
}
bb5 = {
_12.3.1 = [136_u8,51_u8,233_u8];
_12.3.3.0 = _12.2;
(*_2).1 = _6;
(*_5).1 = _12.3.0.1.0;
(*_2).0 = [3026609977051547846_i64,773976735862702438_i64,8154647738503245564_i64];
_14 = _12.4;
_12.1 = 291553387167362248441572827938527259065_u128 as u32;
(*_7).1 = _6;
_9 = _4;
(*_13) = [4908213921820281739_i64,5872520814663405152_i64,(-603391679010809620_i64)];
_12.3.3.1 = _4 - _4;
_16.0.1 = _12.3.3.1 | _12.3.3.1;
Goto(bb4)
}
bb6 = {
_12.3.3.2 = 6876193270885872919_u64 as f64;
_12.2 = 140_u8 as f32;
_12.3.0.2 = (-111_i8) & (-45_i8);
_12.3.0.1 = ((*_1).1, 2_usize, 3007_i16);
_12.4 = [_12.1,_12.1,_12.1,_12.1];
Goto(bb3)
}
bb7 = {
_3 = _12.3.3.2 as isize;
_16.0.2 = 50337_u16 as f64;
_16.0 = _12.3.3;
(*_1).1 = _6;
(*_5).0 = [(-5333632816287513458_i64),880731067562506383_i64,7149506692578342076_i64];
_16.0 = _12.3.3;
(*_5).1 = _6;
_12.0 = [_12.3.0.2,_12.3.0.2,_12.3.0.2,_12.3.0.2];
(*_7).0 = [2031988640558218558_i64,3752549432512846912_i64,(-7367999756571440009_i64)];
_12.0 = [_12.3.0.2,_12.3.0.2,_12.3.0.2,_12.3.0.2];
_16.0.0 = -_12.2;
_1 = core::ptr::addr_of_mut!((*_2));
_9 = 53_u8 as i32;
_1 = _2;
_1 = _2;
match _12.3.0.1.2 {
0 => bb1,
1 => bb2,
2 => bb6,
3007 => bb8,
_ => bb5
}
}
bb8 = {
_21 = 49969_u16 >> _12.3.3.1;
_3 = 5495550843497089942_i64 as isize;
_14 = [_12.1,_12.1,_12.1,_12.3.0.0];
(*_2).0 = [5443425237510589326_i64,4621670214701363511_i64,7553242654248108632_i64];
_6 = _12.3.0.1.0;
match _12.3.0.1.2 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
3007 => bb10,
_ => bb9
}
}
bb9 = {
_12.3.3.2 = 6876193270885872919_u64 as f64;
_12.2 = 140_u8 as f32;
_12.3.0.2 = (-111_i8) & (-45_i8);
_12.3.0.1 = ((*_1).1, 2_usize, 3007_i16);
_12.4 = [_12.1,_12.1,_12.1,_12.1];
Goto(bb3)
}
bb10 = {
match _12.3.0.1.1 {
0 => bb5,
1 => bb11,
3 => bb13,
4 => bb14,
5 => bb15,
2 => bb17,
_ => bb16
}
}
bb11 = {
_12.3.3.2 = 6876193270885872919_u64 as f64;
_12.2 = 140_u8 as f32;
_12.3.0.2 = (-111_i8) & (-45_i8);
_12.3.0.1 = ((*_1).1, 2_usize, 3007_i16);
_12.4 = [_12.1,_12.1,_12.1,_12.1];
Goto(bb3)
}
bb12 = {
_21 = 49969_u16 >> _12.3.3.1;
_3 = 5495550843497089942_i64 as isize;
_14 = [_12.1,_12.1,_12.1,_12.3.0.0];
(*_2).0 = [5443425237510589326_i64,4621670214701363511_i64,7553242654248108632_i64];
_6 = _12.3.0.1.0;
match _12.3.0.1.2 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
3007 => bb10,
_ => bb9
}
}
bb13 = {
_3 = _12.3.3.2 as isize;
_16.0.2 = 50337_u16 as f64;
_16.0 = _12.3.3;
(*_1).1 = _6;
(*_5).0 = [(-5333632816287513458_i64),880731067562506383_i64,7149506692578342076_i64];
_16.0 = _12.3.3;
(*_5).1 = _6;
_12.0 = [_12.3.0.2,_12.3.0.2,_12.3.0.2,_12.3.0.2];
(*_7).0 = [2031988640558218558_i64,3752549432512846912_i64,(-7367999756571440009_i64)];
_12.0 = [_12.3.0.2,_12.3.0.2,_12.3.0.2,_12.3.0.2];
_16.0.0 = -_12.2;
_1 = core::ptr::addr_of_mut!((*_2));
_9 = 53_u8 as i32;
_1 = _2;
_1 = _2;
match _12.3.0.1.2 {
0 => bb1,
1 => bb2,
2 => bb6,
3007 => bb8,
_ => bb5
}
}
bb14 = {
_12.3.3.2 = 6876193270885872919_u64 as f64;
_12.2 = 140_u8 as f32;
_12.3.0.2 = (-111_i8) & (-45_i8);
_12.3.0.1 = ((*_1).1, 2_usize, 3007_i16);
_12.4 = [_12.1,_12.1,_12.1,_12.1];
Goto(bb3)
}
bb15 = {
RET = _3 << _4;
(*_2).1 = _6;
_1 = _5;
_7 = core::ptr::addr_of_mut!((*_1));
(*_7).0 = [(-5916984670945947450_i64),(-5383058086057994663_i64),2976424424317272553_i64];
(*_7).1 = _6;
_6 = (*_7).1;
(*_7).0 = [1287122819084735838_i64,(-612371384215480269_i64),(-1758881122102030195_i64)];
_8 = [(-57291084960759563190631543978890563395_i128),56244565480529083307695041445263872483_i128,(-151860357823248205536185560013950080678_i128),112673529146825390904631941619762352004_i128,10875338054906976836733428762276021890_i128,(-20765089732270152071742320394280907548_i128)];
(*_2).0 = [(-8499421293753345630_i64),8239539539015953442_i64,(-6807968622727244955_i64)];
_14 = [1513857471_u32,4145367011_u32,3887334570_u32,3706820915_u32];
_12.0 = [94_i8,121_i8,59_i8,(-16_i8)];
_13 = core::ptr::addr_of_mut!((*_7).0);
_5 = core::ptr::addr_of_mut!((*_7));
_12.3.3.2 = _9 as f64;
_1 = _7;
_8 = [(-96294154204058575442790123335088071439_i128),(-23169440860393878699265422629410913272_i128),44606444819700948537602020731175017946_i128,104712943859847699295662793572359943315_i128,73198497698548518812284378981666092738_i128,130950398673641384272159171324809978899_i128];
_12.1 = 29_i8 as u32;
(*_5).0 = [(-568189292519799579_i64),4399239249489948327_i64,(-7801823378185140556_i64)];
(*_2).1 = _6;
_12.3.0.1.2 = 4786198839603105776_i64 as i16;
(*_2).1 = _6;
_5 = core::ptr::addr_of_mut!((*_1));
Call(_12.3.0.1.0 = fn9(_2, (*_5).1, _1, _12.3.3.2, (*_2).1, (*_2).0, _3, (*_1).1, (*_1).0, (*_5).1, _14, (*_2).1, RET, _3, (*_1).0, _9), bb2, UnwindUnreachable())
}
bb16 = {
(*_5).0 = [(-4004165827512976724_i64),5165153319600731335_i64,5185825118945113831_i64];
(*_1).1 = _12.3.0.1.0;
(*_13) = [(-8390822262908818312_i64),3818142733373427350_i64,(-1260321345955626466_i64)];
_12.1 = 4031068145_u32;
_12.3.0.0 = 6952021265089091120_u64 as u32;
(*_2).0 = [1222519685732002838_i64,7698687571898340043_i64,562206660197798397_i64];
(*_1).1 = _12.3.0.1.0;
(*_7).0 = [6746361402758550717_i64,(-7150753284462920673_i64),8008065449688257888_i64];
_12.3.3.1 = !_16.0.1;
RET = 135_u8 as isize;
_19 = -_12.2;
_5 = core::ptr::addr_of_mut!((*_5));
_20 = -_12.3.3.2;
(*_7).0 = [4979734394431704055_i64,(-8614041064312438835_i64),(-869280330074536106_i64)];
_12.3.0.0 = _12.1;
_2 = core::ptr::addr_of_mut!((*_1));
match _12.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4031068145 => bb7,
_ => bb6
}
}
bb17 = {
_12.3.1 = [61_u8,252_u8,218_u8];
_26 = false;
_6 = (*_2).1;
_16.0.2 = _12.3.3.2;
_25 = core::ptr::addr_of_mut!(_12.3.0.1);
(*_25).2 = (-6774_i16);
_27 = _26;
_26 = !_27;
_18 = _12.3.3.0;
(*_7).1 = _6;
(*_25).0 = (*_5).1;
_9 = !_16.0.1;
(*_2).1 = (*_25).0;
_26 = _27;
_12.1 = _3 as u32;
(*_2).1 = (*_25).0;
_16 = (_12.3.3,);
_7 = _2;
(*_7).1 = (*_25).0;
(*_25).0 = _6;
_16.0 = _12.3.3;
_12.3.1 = [39_u8,115_u8,195_u8];
_12.3.3.0 = _19;
RET = !_3;
_16.0.0 = -_12.2;
_12.4 = _14;
Goto(bb18)
}
bb18 = {
Call(_33 = dump_var(6_usize, 3_usize, Move(_3), 9_usize, Move(_9), 27_usize, Move(_27), 6_usize, Move(_6)), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *mut ([i64; 3], char),mut _2: [i128; 6],mut _3: [i128; 6],mut _4: [i128; 6],mut _5: isize,mut _6: i32,mut _7: *mut ([i64; 3], char),mut _8: isize,mut _9: *mut ([i64; 3], char),mut _10: *mut ([i64; 3], char),mut _11: *mut ([i64; 3], char),mut _12: *mut ([i64; 3], char),mut _13: isize,mut _14: isize,mut _15: isize,mut _16: isize) -> ([i64; 3], char) {
mir! {
type RET = ([i64; 3], char);
let _17: [i64; 3];
let _18: f32;
let _19: *mut [i64; 3];
let _20: i16;
let _21: i32;
let _22: i32;
let _23: [u64; 2];
let _24: bool;
let _25: [i64; 1];
let _26: u128;
let _27: isize;
let _28: *mut u8;
let _29: *mut f64;
let _30: i8;
let _31: i16;
let _32: (char, usize, i16);
let _33: u16;
let _34: Adt56;
let _35: ([i64; 3], char);
let _36: Adt55;
let _37: i32;
let _38: isize;
let _39: (f32, i32, f64);
let _40: [u64; 2];
let _41: isize;
let _42: u128;
let _43: (char, usize, i16);
let _44: [u32; 4];
let _45: u64;
let _46: u128;
let _47: [u64; 2];
let _48: isize;
let _49: i16;
let _50: i128;
let _51: [i64; 3];
let _52: [u16; 8];
let _53: [u32; 5];
let _54: [i8; 4];
let _55: isize;
let _56: [u8; 3];
let _57: i16;
let _58: ();
let _59: ();
{
_6 = 7149789146751411633011380128924112704_i128 as i32;
RET.1 = '\u{6fe0a}';
RET.0 = [3720320089422666616_i64,(-6624539126187383993_i64),7670714077133920748_i64];
_7 = _9;
_5 = _13;
_16 = !_15;
_18 = 12059793202162504801_u64 as f32;
_22 = 18_u8 as i32;
_8 = !_15;
_20 = -27280_i16;
_3 = [96983055380932504669170288167275486277_i128,(-142385138643548519135074004543881429352_i128),(-110765866695919345678214423820491062354_i128),(-35973205819765798104829782833825631192_i128),89187481884738276758641598604567508384_i128,(-2066945829307926596690167977050956364_i128)];
RET.1 = '\u{3e62c}';
Call(_15 = fn8(_16, _9, _13, _1, _16, _11, _7, _5, _14, _8), bb1, UnwindUnreachable())
}
bb1 = {
_11 = _12;
_16 = 121_u8 as isize;
_24 = !true;
_20 = 2921_i16;
_5 = _15;
_24 = _14 != _15;
_7 = core::ptr::addr_of_mut!(RET);
(*_7).1 = '\u{d7a1b}';
RET.1 = '\u{fa7b5}';
_1 = core::ptr::addr_of_mut!((*_7));
_1 = core::ptr::addr_of_mut!(RET);
(*_7).1 = '\u{59241}';
_17 = [7568430554743317006_i64,(-8946062165205508843_i64),(-6689818526341879137_i64)];
_4 = [(-59474774422749476370535680570488722868_i128),99547991704283543614351585833130901673_i128,(-85519843192870131617643061545595549798_i128),18095772594565410658450545204541837251_i128,131335524007720303671003760751634247421_i128,(-9772281670477397539961352488322329012_i128)];
RET.0 = [(-3698723443486629510_i64),2415562158709224296_i64,6619382320586520284_i64];
RET.1 = '\u{8cf4f}';
_25 = [(-2510894151302492326_i64)];
_6 = _22;
(*_1).1 = '\u{cfa93}';
_21 = !_6;
_6 = -_22;
_3 = [(-116182003306005872193783270731526295135_i128),(-67723393362443249368156741847934578777_i128),(-52116847893352099937621803234318918614_i128),(-90245927231192733969415733492790464864_i128),20808725766532025610365823675542233157_i128,108364538012056568255996907904129824779_i128];
Goto(bb2)
}
bb2 = {
RET = (_17, '\u{9b68d}');
match _20 {
0 => bb1,
1 => bb3,
2921 => bb5,
_ => bb4
}
}
bb3 = {
_11 = _12;
_16 = 121_u8 as isize;
_24 = !true;
_20 = 2921_i16;
_5 = _15;
_24 = _14 != _15;
_7 = core::ptr::addr_of_mut!(RET);
(*_7).1 = '\u{d7a1b}';
RET.1 = '\u{fa7b5}';
_1 = core::ptr::addr_of_mut!((*_7));
_1 = core::ptr::addr_of_mut!(RET);
(*_7).1 = '\u{59241}';
_17 = [7568430554743317006_i64,(-8946062165205508843_i64),(-6689818526341879137_i64)];
_4 = [(-59474774422749476370535680570488722868_i128),99547991704283543614351585833130901673_i128,(-85519843192870131617643061545595549798_i128),18095772594565410658450545204541837251_i128,131335524007720303671003760751634247421_i128,(-9772281670477397539961352488322329012_i128)];
RET.0 = [(-3698723443486629510_i64),2415562158709224296_i64,6619382320586520284_i64];
RET.1 = '\u{8cf4f}';
_25 = [(-2510894151302492326_i64)];
_6 = _22;
(*_1).1 = '\u{cfa93}';
_21 = !_6;
_6 = -_22;
_3 = [(-116182003306005872193783270731526295135_i128),(-67723393362443249368156741847934578777_i128),(-52116847893352099937621803234318918614_i128),(-90245927231192733969415733492790464864_i128),20808725766532025610365823675542233157_i128,108364538012056568255996907904129824779_i128];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
(*_7).0 = [6429338207455910777_i64,6101734578570666987_i64,7026962578042046900_i64];
RET.0 = _17;
RET = (_17, '\u{3904a}');
_21 = -_22;
_26 = 187299258072375264361022859318426831689_u128;
_16 = _15 ^ _15;
_6 = _21 ^ _21;
_19 = core::ptr::addr_of_mut!(_17);
RET.0 = _17;
_2 = [113565452607989844110057625284961891598_i128,16475232903802940517353771520623947990_i128,(-39264870717823890201003026281289765757_i128),90204570237018969969660257601089630455_i128,115453891437060265845369849427082070861_i128,137421387690514513095929723029786203514_i128];
_4 = [141930950991138573780971890376134101735_i128,(-3850950668120639429175460370900549037_i128),(-167718928694655297517563588507922229419_i128),(-61459143998755110919087585322703061292_i128),51936344224188737015871395726231801487_i128,26305865153159265640265617690588676389_i128];
_24 = false;
_19 = core::ptr::addr_of_mut!((*_19));
_15 = !_13;
_19 = core::ptr::addr_of_mut!((*_7).0);
RET = (_17, '\u{6c847}');
_14 = 122038063029148800216898247817934413864_i128 as isize;
_30 = -(-100_i8);
(*_7).0 = [(-65576740726839840_i64),(-4868602108751805942_i64),7592349351876269979_i64];
_32.1 = !5_usize;
(*_7) = (_17, '\u{13755}');
_18 = 50750663419851195797585942168312793828_i128 as f32;
(*_1) = (_17, '\u{725fb}');
RET.0 = [(-7980954496844488384_i64),(-3107910392115396610_i64),3054725703854389029_i64];
RET.0 = [3246617579690995004_i64,822665448810144905_i64,5224553175331300574_i64];
Goto(bb6)
}
bb6 = {
_14 = _16 + _16;
(*_1).0 = [(-7989538462372103703_i64),(-1466886995740632049_i64),4233668501233131476_i64];
_27 = _5 * _14;
_35 = (_17, (*_7).1);
_35 = (*_7);
_32.2 = 53944_u16 as i16;
_32.2 = _20;
(*_1).0 = [1905126781153888052_i64,(-2391981683266279288_i64),(-416611290113725939_i64)];
_22 = _6 + _6;
_33 = 8337_u16 | 50164_u16;
_29 = core::ptr::addr_of_mut!(_39.2);
_32.0 = (*_7).1;
_17 = [6563579011071549374_i64,(-915306875069586975_i64),(-1243338987748755358_i64)];
Goto(bb7)
}
bb7 = {
(*_7) = _35;
_1 = _9;
_26 = 39341710345288161215264719649365568490_u128 + 18247595896977239922109555133379579350_u128;
RET.0 = [(-4733237505537779499_i64),7341207519527385818_i64,(-8279637865235633242_i64)];
(*_19) = [(-455170556683684422_i64),5180970730723383301_i64,(-2130166660680392907_i64)];
match _32.2 {
0 => bb6,
1 => bb4,
2 => bb5,
3 => bb8,
2921 => bb10,
_ => bb9
}
}
bb8 = {
_14 = _16 + _16;
(*_1).0 = [(-7989538462372103703_i64),(-1466886995740632049_i64),4233668501233131476_i64];
_27 = _5 * _14;
_35 = (_17, (*_7).1);
_35 = (*_7);
_32.2 = 53944_u16 as i16;
_32.2 = _20;
(*_1).0 = [1905126781153888052_i64,(-2391981683266279288_i64),(-416611290113725939_i64)];
_22 = _6 + _6;
_33 = 8337_u16 | 50164_u16;
_29 = core::ptr::addr_of_mut!(_39.2);
_32.0 = (*_7).1;
_17 = [6563579011071549374_i64,(-915306875069586975_i64),(-1243338987748755358_i64)];
Goto(bb7)
}
bb9 = {
_11 = _12;
_16 = 121_u8 as isize;
_24 = !true;
_20 = 2921_i16;
_5 = _15;
_24 = _14 != _15;
_7 = core::ptr::addr_of_mut!(RET);
(*_7).1 = '\u{d7a1b}';
RET.1 = '\u{fa7b5}';
_1 = core::ptr::addr_of_mut!((*_7));
_1 = core::ptr::addr_of_mut!(RET);
(*_7).1 = '\u{59241}';
_17 = [7568430554743317006_i64,(-8946062165205508843_i64),(-6689818526341879137_i64)];
_4 = [(-59474774422749476370535680570488722868_i128),99547991704283543614351585833130901673_i128,(-85519843192870131617643061545595549798_i128),18095772594565410658450545204541837251_i128,131335524007720303671003760751634247421_i128,(-9772281670477397539961352488322329012_i128)];
RET.0 = [(-3698723443486629510_i64),2415562158709224296_i64,6619382320586520284_i64];
RET.1 = '\u{8cf4f}';
_25 = [(-2510894151302492326_i64)];
_6 = _22;
(*_1).1 = '\u{cfa93}';
_21 = !_6;
_6 = -_22;
_3 = [(-116182003306005872193783270731526295135_i128),(-67723393362443249368156741847934578777_i128),(-52116847893352099937621803234318918614_i128),(-90245927231192733969415733492790464864_i128),20808725766532025610365823675542233157_i128,108364538012056568255996907904129824779_i128];
Goto(bb2)
}
bb10 = {
(*_7).1 = _35.1;
_31 = _32.2 - _20;
_23 = [6587937559733069920_u64,6855803724052305157_u64];
_26 = 233861643435495354106023588734767527427_u128;
_27 = _14 + _16;
_20 = _32.2 >> _14;
_37 = _22 & _22;
RET.1 = _35.1;
_45 = 12076772173854816217_u64 >> _20;
(*_7).0 = [7949905634577741898_i64,4686654002691924603_i64,1178563199159939589_i64];
_11 = _7;
_14 = _20 as isize;
(*_7).0 = _35.0;
_40 = _23;
_14 = !_27;
(*_11) = (_35.0, _35.1);
_47 = _40;
_5 = _27 - _14;
_21 = !_37;
_16 = _5 >> _27;
_46 = _26 ^ _26;
_39.0 = -_18;
(*_29) = 2758025969_u32 as f64;
_48 = !_16;
_12 = core::ptr::addr_of_mut!((*_11));
Goto(bb11)
}
bb11 = {
_6 = 105_u8 as i32;
_23 = _47;
_18 = _39.0 * _39.0;
RET.0 = _35.0;
_45 = 16512346761587309495_u64 & 399289240191314170_u64;
_5 = _48 | _16;
_46 = !_26;
_49 = _20 - _20;
RET.0 = [3330476091409543753_i64,7009222953963833637_i64,(-3462550231775197291_i64)];
_41 = !_14;
(*_12).0 = [(-1583226245655451434_i64),5037788306972003777_i64,(-125952502957013710_i64)];
_38 = !_8;
_3 = _4;
_35.1 = _32.0;
_33 = _24 as u16;
_43.2 = _24 as i16;
_38 = _26 as isize;
_49 = _20 - _20;
_22 = _21 * _37;
_44 = [4223422308_u32,4188962182_u32,2429512106_u32,3911684847_u32];
_13 = _41;
_17 = _35.0;
_18 = _32.1 as f32;
Goto(bb12)
}
bb12 = {
_46 = _26;
_39.2 = 3414388871_u32 as f64;
_39.0 = _18 - _18;
(*_11).1 = _32.0;
RET.1 = _35.1;
_22 = _37 * _21;
(*_7) = (_35.0, _32.0);
(*_12) = (_35.0, _35.1);
_42 = !_46;
(*_19) = [(-3498796284213955387_i64),8759009940011592084_i64,6283100396775362247_i64];
match _46 {
0 => bb13,
233861643435495354106023588734767527427 => bb15,
_ => bb14
}
}
bb13 = {
(*_7).0 = [6429338207455910777_i64,6101734578570666987_i64,7026962578042046900_i64];
RET.0 = _17;
RET = (_17, '\u{3904a}');
_21 = -_22;
_26 = 187299258072375264361022859318426831689_u128;
_16 = _15 ^ _15;
_6 = _21 ^ _21;
_19 = core::ptr::addr_of_mut!(_17);
RET.0 = _17;
_2 = [113565452607989844110057625284961891598_i128,16475232903802940517353771520623947990_i128,(-39264870717823890201003026281289765757_i128),90204570237018969969660257601089630455_i128,115453891437060265845369849427082070861_i128,137421387690514513095929723029786203514_i128];
_4 = [141930950991138573780971890376134101735_i128,(-3850950668120639429175460370900549037_i128),(-167718928694655297517563588507922229419_i128),(-61459143998755110919087585322703061292_i128),51936344224188737015871395726231801487_i128,26305865153159265640265617690588676389_i128];
_24 = false;
_19 = core::ptr::addr_of_mut!((*_19));
_15 = !_13;
_19 = core::ptr::addr_of_mut!((*_7).0);
RET = (_17, '\u{6c847}');
_14 = 122038063029148800216898247817934413864_i128 as isize;
_30 = -(-100_i8);
(*_7).0 = [(-65576740726839840_i64),(-4868602108751805942_i64),7592349351876269979_i64];
_32.1 = !5_usize;
(*_7) = (_17, '\u{13755}');
_18 = 50750663419851195797585942168312793828_i128 as f32;
(*_1) = (_17, '\u{725fb}');
RET.0 = [(-7980954496844488384_i64),(-3107910392115396610_i64),3054725703854389029_i64];
RET.0 = [3246617579690995004_i64,822665448810144905_i64,5224553175331300574_i64];
Goto(bb6)
}
bb14 = {
(*_7).1 = _35.1;
_31 = _32.2 - _20;
_23 = [6587937559733069920_u64,6855803724052305157_u64];
_26 = 233861643435495354106023588734767527427_u128;
_27 = _14 + _16;
_20 = _32.2 >> _14;
_37 = _22 & _22;
RET.1 = _35.1;
_45 = 12076772173854816217_u64 >> _20;
(*_7).0 = [7949905634577741898_i64,4686654002691924603_i64,1178563199159939589_i64];
_11 = _7;
_14 = _20 as isize;
(*_7).0 = _35.0;
_40 = _23;
_14 = !_27;
(*_11) = (_35.0, _35.1);
_47 = _40;
_5 = _27 - _14;
_21 = !_37;
_16 = _5 >> _27;
_46 = _26 ^ _26;
_39.0 = -_18;
(*_29) = 2758025969_u32 as f64;
_48 = !_16;
_12 = core::ptr::addr_of_mut!((*_11));
Goto(bb11)
}
bb15 = {
_37 = _21;
_35 = ((*_7).0, (*_11).1);
_52 = [_33,_33,_33,_33,_33,_33,_33,_33];
(*_19) = [6722449620964915379_i64,(-5544250922245848955_i64),(-7570141817695098424_i64)];
RET.1 = _35.1;
_16 = _32.1 as isize;
_22 = _49 as i32;
(*_12) = (_17, _35.1);
Goto(bb16)
}
bb16 = {
Call(_58 = dump_var(7_usize, 45_usize, Move(_45), 15_usize, Move(_15), 2_usize, Move(_2), 37_usize, Move(_37)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_58 = dump_var(7_usize, 25_usize, Move(_25), 32_usize, Move(_32), 48_usize, Move(_48), 27_usize, Move(_27)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_58 = dump_var(7_usize, 30_usize, Move(_30), 38_usize, Move(_38), 14_usize, Move(_14), 46_usize, Move(_46)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_58 = dump_var(7_usize, 22_usize, Move(_22), 49_usize, Move(_49), 24_usize, Move(_24), 41_usize, Move(_41)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_58 = dump_var(7_usize, 20_usize, Move(_20), 3_usize, Move(_3), 59_usize, _59, 59_usize, _59), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: isize,mut _2: *mut ([i64; 3], char),mut _3: isize,mut _4: *mut ([i64; 3], char),mut _5: isize,mut _6: *mut ([i64; 3], char),mut _7: *mut ([i64; 3], char),mut _8: isize,mut _9: isize,mut _10: isize) -> isize {
mir! {
type RET = isize;
let _11: f64;
let _12: u128;
let _13: ();
let _14: ();
{
_10 = !_1;
_7 = _4;
_1 = -_5;
_7 = _4;
_8 = !_1;
_10 = _1;
Call(_9 = core::intrinsics::transmute(_8), bb1, UnwindUnreachable())
}
bb1 = {
_8 = -_9;
_9 = 286802211749400202532310082139700279688_u128 as isize;
_10 = _5;
_4 = _2;
_4 = _2;
_8 = 315386323289632209163638822287460403190_u128 as isize;
_2 = _7;
_6 = _7;
_6 = _7;
_1 = 44355909649765337197634075516733933204_u128 as isize;
RET = _3;
_11 = 117213721892102641009622024111499429473_i128 as f64;
_4 = _6;
_2 = _4;
_8 = '\u{b2d1e}' as isize;
_4 = _2;
_4 = _7;
_1 = !RET;
_5 = (-1082359121_i32) as isize;
_8 = _9;
_1 = _3 ^ _3;
_6 = _7;
_6 = _2;
_7 = _4;
_2 = _7;
RET = -_8;
Goto(bb2)
}
bb2 = {
RET = !_3;
_3 = -_5;
_2 = _7;
RET = _1;
Goto(bb3)
}
bb3 = {
Call(_13 = dump_var(8_usize, 1_usize, Move(_1), 9_usize, Move(_9), 5_usize, Move(_5), 14_usize, _14), bb4, UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: *mut ([i64; 3], char),mut _2: char,mut _3: *mut ([i64; 3], char),mut _4: f64,mut _5: char,mut _6: [i64; 3],mut _7: isize,mut _8: char,mut _9: [i64; 3],mut _10: char,mut _11: [u32; 4],mut _12: char,mut _13: isize,mut _14: isize,mut _15: [i64; 3],mut _16: i32) -> char {
mir! {
type RET = char;
let _17: ([i64; 3], char);
let _18: *const usize;
let _19: *mut ([i64; 3], char);
let _20: *mut [i64; 3];
let _21: isize;
let _22: isize;
let _23: [usize; 7];
let _24: isize;
let _25: char;
let _26: *mut u8;
let _27: isize;
let _28: [u32; 4];
let _29: (f32, i32, f64);
let _30: Adt57;
let _31: *mut [i64; 3];
let _32: i64;
let _33: *const u128;
let _34: char;
let _35: u8;
let _36: i128;
let _37: f32;
let _38: f64;
let _39: [isize; 3];
let _40: i64;
let _41: [u8; 3];
let _42: char;
let _43: usize;
let _44: [i8; 4];
let _45: [isize; 3];
let _46: bool;
let _47: bool;
let _48: f32;
let _49: [i64; 1];
let _50: ();
let _51: ();
{
_15 = (*_1).0;
(*_1).1 = _10;
_6 = (*_1).0;
_12 = (*_1).1;
_15 = (*_1).0;
_4 = 32409_i16 as f64;
RET = (*_3).1;
_3 = core::ptr::addr_of_mut!((*_1));
(*_3) = (_15, _10);
_4 = (-2181543648588595829_i64) as f64;
RET = (*_3).1;
_4 = 3546566215211571312_u64 as f64;
_7 = 47_u8 as isize;
_10 = (*_1).1;
_16 = (-2088496986_i32);
_17.0 = [5964370969862839218_i64,7700678594549203464_i64,1145571360903454124_i64];
_11 = [3539947543_u32,3500818209_u32,843125184_u32,1744577358_u32];
_11 = [213462456_u32,2617082966_u32,2435622589_u32,2707181846_u32];
Goto(bb1)
}
bb1 = {
_6 = [2541838066891461557_i64,8965940815075107500_i64,(-8443542739847800518_i64)];
(*_3).0 = _17.0;
_16 = 11780793229431282148_usize as i32;
_20 = core::ptr::addr_of_mut!((*_1).0);
(*_1) = (_15, _5);
(*_20) = [832233844703314248_i64,(-6222308335004792605_i64),8607639626427909921_i64];
_11 = [2674978437_u32,3904679064_u32,3744690713_u32,712861284_u32];
(*_3).1 = _12;
_21 = _13 ^ _13;
_17 = (*_1);
_19 = core::ptr::addr_of_mut!((*_3));
_14 = _13 + _21;
_21 = _13;
_20 = core::ptr::addr_of_mut!((*_3).0);
_16 = 795411954_i32;
_7 = 0_usize as isize;
(*_3).0 = [5643189861400389163_i64,6660892709640531445_i64,(-4298998575935318194_i64)];
match _16 {
0 => bb2,
1 => bb3,
795411954 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Call(_24 = fn10((*_1), _3, _1, _17.0, _1, _1, _4, _3, _1, _2, _14, (*_19).0, _12, (*_1).0, (*_19).1), bb6, UnwindUnreachable())
}
bb6 = {
_23 = [7649353761464517723_usize,898213403551381191_usize,0_usize,3175885788606847401_usize,3541819786838551528_usize,4_usize,6_usize];
(*_1).1 = RET;
(*_3).0 = [(-8513986702792246458_i64),(-6777362780732048031_i64),(-8181906202435832504_i64)];
_13 = _24;
(*_3).0 = [(-9044591230867911597_i64),8048164880158793118_i64,2349129978833595128_i64];
(*_3).0 = _9;
_27 = _14;
_28 = _11;
_25 = _10;
(*_19).0 = [(-225126263791645053_i64),(-3985734044137493708_i64),(-5698041013071918185_i64)];
(*_3).0 = _17.0;
(*_1).0 = [3073040257678654481_i64,(-4431965543264962638_i64),(-4192578107025716786_i64)];
(*_19).0 = [6616466790880974095_i64,798296895687805809_i64,(-4987196054954007173_i64)];
_24 = _13 ^ _14;
_22 = _4 as isize;
_5 = RET;
(*_19).1 = _2;
(*_3) = (_6, _12);
_29.2 = _4 * _4;
(*_19).1 = _10;
_7 = _24;
_12 = _8;
(*_3).0 = [(-1239676049240075927_i64),(-6603331028458175828_i64),(-4492425339426282898_i64)];
(*_20) = _9;
_14 = _7;
_3 = core::ptr::addr_of_mut!((*_3));
_29.2 = 3358491666_u32 as f64;
Goto(bb7)
}
bb7 = {
(*_3).0 = _6;
_17 = ((*_19).0, (*_1).1);
(*_20) = [(-5483788675147208859_i64),(-1815705717414152769_i64),6535880182908007508_i64];
RET = _10;
_8 = RET;
_6 = _17.0;
(*_3).1 = _2;
_29.1 = -_16;
_29.2 = 148175040001720086570127105693129565989_i128 as f64;
Call((*_1) = fn11(_27, _27, _14, _24), bb8, UnwindUnreachable())
}
bb8 = {
_6 = [243014572335215353_i64,(-2757349371751354623_i64),310478627386462651_i64];
RET = (*_3).1;
_5 = (*_1).1;
_15 = [830185794506870312_i64,(-3154020455244078875_i64),(-4072413155247113072_i64)];
_10 = _17.1;
_9 = (*_1).0;
_29.1 = !_16;
_15 = [7971778811065395518_i64,5074060029585430668_i64,4001102759305512225_i64];
_17.0 = [1737256771061453242_i64,5760989478788466610_i64,(-1690940133451774220_i64)];
_7 = _24;
_24 = !_7;
_32 = 3903559744240688860_i64;
_6 = [_32,_32,_32];
_32 = 3106087047312231834_i64 + 5368927683854606706_i64;
(*_19).1 = _8;
_16 = _29.1 + _29.1;
_25 = (*_3).1;
_10 = _8;
_8 = _17.1;
_12 = (*_1).1;
_6 = [_32,_32,_32];
(*_19) = _17;
Goto(bb9)
}
bb9 = {
(*_3).0 = _15;
(*_3) = _17;
_29.1 = _16;
(*_1) = _17;
Goto(bb10)
}
bb10 = {
_11 = [1453566821_u32,1008721309_u32,3297139184_u32,1766834296_u32];
_35 = true as u8;
_28 = _11;
_26 = core::ptr::addr_of_mut!(_35);
(*_19).0 = _15;
_7 = !_13;
_29.0 = _29.2 as f32;
_31 = core::ptr::addr_of_mut!((*_1).0);
_34 = _17.1;
(*_31) = [_32,_32,_32];
RET = (*_1).1;
_16 = _35 as i32;
_13 = _14 | _27;
(*_19).1 = _2;
_37 = _29.0;
(*_1).0 = _6;
(*_31) = [_32,_32,_32];
(*_3) = (_17.0, _10);
Goto(bb11)
}
bb11 = {
_20 = core::ptr::addr_of_mut!((*_31));
(*_1) = _17;
(*_20) = [_32,_32,_32];
(*_19) = (_17.0, _2);
_32 = (-8927107347668899476_i64) << _14;
(*_3).1 = _34;
(*_3) = _17;
(*_26) = !9_u8;
_6 = [_32,_32,_32];
_37 = _29.0;
(*_1) = _17;
_20 = core::ptr::addr_of_mut!(_9);
RET = (*_1).1;
(*_1) = _17;
_20 = _31;
(*_1).1 = _2;
(*_19).1 = _5;
_17 = (_6, _34);
_17.0 = [_32,_32,_32];
_36 = !(-153571801035865769535650635875121125579_i128);
(*_3).0 = [_32,_32,_32];
_12 = (*_19).1;
_29.0 = _32 as f32;
_17.1 = RET;
(*_26) = 81_u8 * 253_u8;
_32 = (-7556850141456711361_i64) >> _13;
_38 = _29.2 - _29.2;
(*_3) = (_17.0, _25);
_24 = _13;
Goto(bb12)
}
bb12 = {
(*_19).1 = _25;
(*_19) = (_6, _10);
(*_19) = (_6, _17.1);
_8 = (*_1).1;
_5 = _25;
_17 = (*_3);
_28 = _11;
_37 = _29.0 - _29.0;
_17.1 = RET;
_1 = core::ptr::addr_of_mut!((*_1));
_39 = [_13,_13,_24];
_22 = !_27;
Goto(bb13)
}
bb13 = {
(*_19).1 = _25;
_14 = _7 - _13;
(*_31) = [_32,_32,_32];
_41 = [(*_26),(*_26),(*_26)];
_9 = (*_20);
_12 = _5;
_17.0 = (*_20);
_16 = !_29.1;
_3 = core::ptr::addr_of_mut!((*_19));
_45 = _39;
_42 = _12;
_5 = (*_19).1;
_17 = (*_1);
Goto(bb14)
}
bb14 = {
_24 = _13;
_6 = [_32,_32,_32];
_38 = 17607_u16 as f64;
(*_1) = (_17.0, _5);
_46 = false;
_2 = (*_19).1;
(*_3) = (_17.0, _2);
_18 = core::ptr::addr_of!(_43);
_17.1 = (*_19).1;
(*_19).0 = [_32,_32,_32];
_3 = core::ptr::addr_of_mut!((*_19));
(*_20) = [_32,_32,_32];
(*_19).1 = _17.1;
(*_3).1 = _34;
(*_20) = _6;
_36 = (-118221576452618319602776116880157986829_i128);
_29.0 = -_37;
RET = _12;
_48 = _29.0;
_8 = _2;
(*_19).1 = _2;
_10 = (*_1).1;
_41 = [(*_26),(*_26),_35];
_14 = _24 + _24;
_19 = _1;
_14 = 9_i8 as isize;
_9 = [_32,_32,_32];
_4 = _29.2 * _38;
_4 = _38 + _29.2;
Goto(bb15)
}
bb15 = {
Call(_50 = dump_var(9_usize, 6_usize, Move(_6), 27_usize, Move(_27), 14_usize, Move(_14), 8_usize, Move(_8)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_50 = dump_var(9_usize, 46_usize, Move(_46), 42_usize, Move(_42), 5_usize, Move(_5), 21_usize, Move(_21)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_50 = dump_var(9_usize, 15_usize, Move(_15), 35_usize, Move(_35), 23_usize, Move(_23), 32_usize, Move(_32)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_50 = dump_var(9_usize, 7_usize, Move(_7), 22_usize, Move(_22), 17_usize, Move(_17), 51_usize, _51), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: ([i64; 3], char),mut _2: *mut ([i64; 3], char),mut _3: *mut ([i64; 3], char),mut _4: [i64; 3],mut _5: *mut ([i64; 3], char),mut _6: *mut ([i64; 3], char),mut _7: f64,mut _8: *mut ([i64; 3], char),mut _9: *mut ([i64; 3], char),mut _10: char,mut _11: isize,mut _12: [i64; 3],mut _13: char,mut _14: [i64; 3],mut _15: char) -> isize {
mir! {
type RET = isize;
let _16: isize;
let _17: Adt51;
let _18: ();
let _19: ();
{
(*_2).1 = _10;
_1.0 = [(-8995648717335883699_i64),9006763500701633074_i64,2170961174708877785_i64];
RET = _11;
(*_3).0 = [(-146139917090400595_i64),2061288667369556892_i64,(-4664804981108538909_i64)];
_10 = (*_3).1;
_12 = (*_9).0;
(*_6).0 = [(-2023735737902026296_i64),(-6118111858450203801_i64),3071635487703653977_i64];
(*_6).0 = _4;
(*_5).0 = [1378905189502069375_i64,(-6522060144375145183_i64),28954608888826300_i64];
RET = !_11;
_3 = core::ptr::addr_of_mut!((*_8));
Goto(bb1)
}
bb1 = {
Call(_18 = dump_var(10_usize, 13_usize, Move(_13), 14_usize, Move(_14), 15_usize, Move(_15), 4_usize, Move(_4)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize) -> ([i64; 3], char) {
mir! {
type RET = ([i64; 3], char);
let _5: char;
let _6: isize;
let _7: [u16; 8];
let _8: char;
let _9: (char, usize, i16);
let _10: isize;
let _11: [i64; 1];
let _12: i8;
let _13: [i64; 1];
let _14: i8;
let _15: u64;
let _16: [isize; 3];
let _17: (f32, i32, f64);
let _18: u128;
let _19: [i8; 4];
let _20: [isize; 3];
let _21: char;
let _22: [u64; 2];
let _23: char;
let _24: i64;
let _25: char;
let _26: [i128; 6];
let _27: bool;
let _28: u8;
let _29: [isize; 3];
let _30: char;
let _31: (char, usize, i16);
let _32: Adt48;
let _33: ();
let _34: ();
{
RET.1 = '\u{8a9ed}';
_4 = _3;
RET.1 = '\u{f7072}';
RET.0 = [(-1503831465350413206_i64),3915515774687296234_i64,(-1830727376483102213_i64)];
RET.1 = '\u{84cfa}';
RET.1 = '\u{1538}';
_3 = _1 ^ _1;
_1 = 123410330885947433_i64 as isize;
_3 = 100_i8 as isize;
RET.0 = [8385913142327673973_i64,2392489627403887246_i64,(-4958454827000666102_i64)];
RET.1 = '\u{fcdb2}';
_2 = 99236167223095011587282956146864775583_i128 as isize;
_6 = _4 + _4;
_3 = _6 * _6;
_7 = [4820_u16,36187_u16,41117_u16,61627_u16,26288_u16,15994_u16,54702_u16,29517_u16];
_4 = -_3;
_4 = !_3;
_3 = _4 & _4;
_1 = !_4;
_3 = 7_usize as isize;
RET.0 = [(-6713044133344809838_i64),(-531459685790831580_i64),8338543000547435796_i64];
_8 = RET.1;
_8 = RET.1;
_3 = _1;
Call(RET = fn12(_3, _1, _1, _1), bb1, UnwindUnreachable())
}
bb1 = {
_4 = _1 + _1;
_3 = 16953_u16 as isize;
_8 = RET.1;
_1 = !_6;
_7 = [50331_u16,31877_u16,52460_u16,10126_u16,26872_u16,27780_u16,30897_u16,36756_u16];
_9 = (RET.1, 2307442090002350244_usize, (-23231_i16));
RET.1 = _8;
match _9.1 {
2307442090002350244 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
RET.1 = _9.0;
_6 = 152114275402526669451202184887872979432_u128 as isize;
_4 = _1 >> _1;
RET.1 = _9.0;
RET.1 = _9.0;
_8 = _9.0;
_10 = !_3;
_2 = _4;
_13 = [(-860321721764794451_i64)];
_9.2 = (-407_i16);
_1 = 16_i8 as isize;
_9.2 = (-9967_i16) | 11110_i16;
_1 = _4 << _4;
_11 = [7532699429122699711_i64];
RET.1 = _8;
_11 = _13;
_9.2 = (-645997991213110035_i64) as i16;
RET.0 = [(-5901321438793486221_i64),249447755867408052_i64,7990951813470141967_i64];
_5 = _9.0;
_4 = -_2;
_12 = 92_i8;
_12 = 38_i8;
RET.0 = [(-6103545821798948240_i64),2059001221404743716_i64,3091432672365277873_i64];
_16 = [_4,_1,_4];
_15 = 10453167781282037075_u64 * 13507897894018898366_u64;
match _9.1 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
2307442090002350244 => bb10,
_ => bb9
}
}
bb4 = {
Return()
}
bb5 = {
_4 = _1 + _1;
_3 = 16953_u16 as isize;
_8 = RET.1;
_1 = !_6;
_7 = [50331_u16,31877_u16,52460_u16,10126_u16,26872_u16,27780_u16,30897_u16,36756_u16];
_9 = (RET.1, 2307442090002350244_usize, (-23231_i16));
RET.1 = _8;
match _9.1 {
2307442090002350244 => bb3,
_ => bb2
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6 = -_2;
_3 = _6 << _4;
_5 = _8;
_9 = (_5, 11381772232847933482_usize, 20237_i16);
_8 = _9.0;
Goto(bb11)
}
bb11 = {
_16 = [_4,_2,_6];
_4 = _15 as isize;
_14 = -_12;
_7 = [869_u16,18033_u16,35103_u16,34556_u16,56951_u16,37624_u16,48825_u16,3136_u16];
RET.1 = _8;
_17.0 = 58603_u16 as f32;
_11 = _13;
_5 = _8;
_10 = _1;
RET.0 = [(-3357079309779413146_i64),(-4654497743968717950_i64),5123600633319333521_i64];
_3 = !_10;
_21 = _5;
_14 = (-7647038605166637458_i64) as i8;
_9 = (_21, 4848533692316162167_usize, 30478_i16);
_15 = !6450733042688482507_u64;
Goto(bb12)
}
bb12 = {
_19 = [_14,_12,_14,_12];
_22 = [_15,_15];
_22 = [_15,_15];
_18 = 328128068895491271273768729482443227971_u128;
_26 = [13611589767824093610871831414699853754_i128,117548464453806076862540872492933759090_i128,(-84046385790297869265361767182488907324_i128),(-13609602169162555738081548790169893694_i128),(-123924769686987942293698754686691012827_i128),(-112175856610328981890688216696435253217_i128)];
_9.0 = _5;
Call(_9.1 = core::intrinsics::transmute(_6), bb13, UnwindUnreachable())
}
bb13 = {
_9.1 = 7_usize;
_28 = 0_u8 * 48_u8;
_20 = [_6,_2,_1];
_21 = _9.0;
_9 = (RET.1, 6_usize, 28210_i16);
RET.1 = _8;
_25 = _5;
_26 = [73409527838346683287424494312771243212_i128,86793875602421884880025306203875792183_i128,(-64489706894250744315259604556560593352_i128),136967755221138996950329085061250972138_i128,169286915006350789520174796462481179965_i128,138525402678383017760296178568229601516_i128];
match _9.2 {
0 => bb4,
1 => bb2,
2 => bb5,
3 => bb14,
28210 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET.1 = _9.0;
_10 = _25 as isize;
_17.0 = _28 as f32;
RET.1 = _25;
_1 = _6;
_29 = [_2,_6,_1];
_16 = [_6,_2,_6];
RET.1 = _21;
_17.2 = (-446264440_i32) as f64;
Goto(bb17)
}
bb17 = {
Call(_33 = dump_var(11_usize, 7_usize, Move(_7), 22_usize, Move(_22), 19_usize, Move(_19), 12_usize, Move(_12)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_33 = dump_var(11_usize, 21_usize, Move(_21), 18_usize, Move(_18), 20_usize, Move(_20), 15_usize, Move(_15)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_33 = dump_var(11_usize, 10_usize, Move(_10), 11_usize, Move(_11), 3_usize, Move(_3), 2_usize, Move(_2)), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize) -> ([i64; 3], char) {
mir! {
type RET = ([i64; 3], char);
let _5: u8;
let _6: Adt61;
let _7: *const u128;
let _8: u16;
let _9: f64;
let _10: [char; 1];
let _11: [i128; 6];
let _12: bool;
let _13: [u16; 8];
let _14: Adt63;
let _15: u64;
let _16: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]);
let _17: Adt53;
let _18: *mut [u16; 8];
let _19: i32;
let _20: *const usize;
let _21: [isize; 3];
let _22: [i128; 6];
let _23: [u8; 3];
let _24: ((f32, i32, f64),);
let _25: i8;
let _26: u16;
let _27: Adt55;
let _28: Adt62;
let _29: i64;
let _30: [u32; 5];
let _31: isize;
let _32: char;
let _33: char;
let _34: (f32, i32, f64);
let _35: (f32, i32, f64);
let _36: isize;
let _37: [i64; 1];
let _38: ();
let _39: ();
{
RET.0 = [(-4399968004880302109_i64),4179376989626799257_i64,(-5333486010735918712_i64)];
RET.1 = '\u{b588}';
_3 = _4 * _2;
RET.0 = [(-2087617667725892511_i64),6806633851388861083_i64,2090833283818852834_i64];
_1 = _2 & _2;
RET.0 = [(-6116797477886715166_i64),1727631721474108259_i64,(-7970745295802377718_i64)];
_2 = -_1;
_4 = -_2;
_2 = !_4;
_3 = (-11547_i16) as isize;
_2 = 319712705471962634603304174810577299944_u128 as isize;
RET.0 = [2061599066896349745_i64,(-2764007050865822122_i64),(-4621073097395458027_i64)];
_4 = _1 >> _1;
_2 = !_4;
RET.1 = '\u{9ce3b}';
_1 = -_2;
RET.1 = '\u{6426a}';
_1 = 1572745933_i32 as isize;
RET.1 = '\u{d19de}';
RET.1 = '\u{cde5e}';
Goto(bb1)
}
bb1 = {
RET.1 = '\u{6b8b8}';
_5 = 158_u8 - 25_u8;
_5 = !180_u8;
_2 = !_4;
_1 = _5 as isize;
RET.0 = [(-7343324113577662084_i64),6295601676664193958_i64,(-4502831166567456750_i64)];
_5 = RET.1 as u8;
_2 = -_4;
RET.1 = '\u{31009}';
RET.1 = '\u{e2c67}';
_5 = !39_u8;
RET.0 = [1819102480927584725_i64,(-3176236963933382078_i64),1038348908393108904_i64];
RET.1 = '\u{11612}';
RET.1 = '\u{da87f}';
RET.1 = '\u{da75d}';
_8 = 29759_u16;
RET.0 = [(-4189416982450659747_i64),(-3899432168734361578_i64),3321949505352813748_i64];
Goto(bb2)
}
bb2 = {
_8 = 264623873363816917619215601562479873982_u128 as u16;
_3 = _4 ^ _2;
_4 = (-196471443_i32) as isize;
RET.0 = [3937769286885779308_i64,6854401898975500053_i64,(-325374440710233989_i64)];
_9 = (-6118261278319553152_i64) as f64;
RET.0 = [(-4897839353409862193_i64),1687210420464907529_i64,(-3971669297383009495_i64)];
RET.0 = [740790909880781437_i64,(-3343420068699892532_i64),5167042717437933356_i64];
_2 = -_3;
_5 = 198_u8 << _2;
_4 = _3;
RET.1 = '\u{b8b3f}';
_1 = _9 as isize;
RET.1 = '\u{7cb9f}';
Call(RET.1 = fn13(_2, _5, _2, _2, _2, _4, _3, _2, _4, _4, _4, _3, _3, _3), bb3, UnwindUnreachable())
}
bb3 = {
Goto(bb4)
}
bb4 = {
_3 = _2 & _4;
RET.0 = [(-8966352763889352760_i64),(-1365774466736054469_i64),715839177011809786_i64];
RET.1 = '\u{19e1d}';
_3 = (-19092_i16) as isize;
_3 = !_2;
RET.0 = [7495344786681724514_i64,(-14158203360618731_i64),(-7166328766753958625_i64)];
_4 = _3 | _3;
_3 = _2 + _4;
RET.0 = [714881775194080361_i64,4883008807311490697_i64,8303133923054065912_i64];
_2 = _4 - _3;
_14.fld3.1 = [_5,_5,_5];
_14.fld3.3.2 = _9 + _9;
_14.fld3.2 = [_2,_3,_2];
_3 = (-5709200245842012328_i64) as isize;
_14.fld0.fld1 = !14996405810901766545_u64;
_2 = !_4;
_14.fld3.0.2 = _9 as i8;
Goto(bb5)
}
bb5 = {
_16.2 = (-324545385_i32) as f32;
_16.3.0.0 = !1100846551_u32;
_14.fld3.0.1 = (RET.1, 5_usize, (-14777_i16));
_16.4 = [_16.3.0.0,_16.3.0.0,_16.3.0.0,_16.3.0.0];
_16.3.0.1 = _14.fld3.0.1;
_9 = _14.fld0.fld1 as f64;
_14.fld0.fld4 = _14.fld3.0.1.2;
_14.fld3.0.0 = _16.3.0.0;
_14.fld4.0.0 = -_16.2;
_12 = !false;
_14.fld3.3.2 = _9 + _9;
RET.1 = _14.fld3.0.1.0;
Goto(bb6)
}
bb6 = {
RET.1 = _16.3.0.1.0;
_10 = [RET.1];
_2 = -_4;
_11 = [(-13123895583820234711014269877442677480_i128),55140795027397310685756429914029680510_i128,(-36587996776914274797869835465466609188_i128),85109597461043942707184559522103958015_i128,168746253661841236946480535541481525744_i128,(-104218452719052685540675566553771881949_i128)];
_16.4 = [_14.fld3.0.0,_14.fld3.0.0,_14.fld3.0.0,_14.fld3.0.0];
_16.3.0.0 = !_14.fld3.0.0;
_14.fld3.0.3 = core::ptr::addr_of_mut!(_5);
_16.3.3.1 = _14.fld0.fld1 as i32;
_16.3.0 = (_14.fld3.0.0, _14.fld3.0.1, _14.fld3.0.2, _14.fld3.0.3);
RET.0 = [(-3132376522554487825_i64),8556718139209096205_i64,4834037856900964566_i64];
_18 = core::ptr::addr_of_mut!(_13);
_24.0.0 = _8 as f32;
_14.fld3.1 = [_5,_5,_5];
_14.fld3.0.1.0 = _16.3.0.1.0;
_15 = _2 as u64;
_16.3.3.2 = -_14.fld3.3.2;
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
_1 = !_4;
_14.fld3.0.3 = core::ptr::addr_of_mut!(_5);
_16.1 = _16.3.0.0 ^ _16.3.0.0;
Call(_5 = core::intrinsics::bswap(129_u8), bb7, UnwindUnreachable())
}
bb7 = {
_16.3.1 = _14.fld3.1;
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
_28.fld1.3.0.1.2 = _16.1 as i16;
_14.fld3.3.0 = _14.fld4.0.0;
_28.fld1.3.0.0 = !_16.1;
_16.3.1 = [_5,_5,_5];
_14.fld3.3 = (_14.fld4.0.0, _16.3.3.1, _16.3.3.2);
_16.2 = _14.fld3.3.0;
_28.fld1.3.3.2 = _16.3.3.2;
match _14.fld3.0.1.2 {
0 => bb4,
1 => bb8,
340282366920938463463374607431768196679 => bb10,
_ => bb9
}
}
bb8 = {
RET.1 = _16.3.0.1.0;
_10 = [RET.1];
_2 = -_4;
_11 = [(-13123895583820234711014269877442677480_i128),55140795027397310685756429914029680510_i128,(-36587996776914274797869835465466609188_i128),85109597461043942707184559522103958015_i128,168746253661841236946480535541481525744_i128,(-104218452719052685540675566553771881949_i128)];
_16.4 = [_14.fld3.0.0,_14.fld3.0.0,_14.fld3.0.0,_14.fld3.0.0];
_16.3.0.0 = !_14.fld3.0.0;
_14.fld3.0.3 = core::ptr::addr_of_mut!(_5);
_16.3.3.1 = _14.fld0.fld1 as i32;
_16.3.0 = (_14.fld3.0.0, _14.fld3.0.1, _14.fld3.0.2, _14.fld3.0.3);
RET.0 = [(-3132376522554487825_i64),8556718139209096205_i64,4834037856900964566_i64];
_18 = core::ptr::addr_of_mut!(_13);
_24.0.0 = _8 as f32;
_14.fld3.1 = [_5,_5,_5];
_14.fld3.0.1.0 = _16.3.0.1.0;
_15 = _2 as u64;
_16.3.3.2 = -_14.fld3.3.2;
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
_1 = !_4;
_14.fld3.0.3 = core::ptr::addr_of_mut!(_5);
_16.1 = _16.3.0.0 ^ _16.3.0.0;
Call(_5 = core::intrinsics::bswap(129_u8), bb7, UnwindUnreachable())
}
bb9 = {
RET.1 = '\u{6b8b8}';
_5 = 158_u8 - 25_u8;
_5 = !180_u8;
_2 = !_4;
_1 = _5 as isize;
RET.0 = [(-7343324113577662084_i64),6295601676664193958_i64,(-4502831166567456750_i64)];
_5 = RET.1 as u8;
_2 = -_4;
RET.1 = '\u{31009}';
RET.1 = '\u{e2c67}';
_5 = !39_u8;
RET.0 = [1819102480927584725_i64,(-3176236963933382078_i64),1038348908393108904_i64];
RET.1 = '\u{11612}';
RET.1 = '\u{da87f}';
RET.1 = '\u{da75d}';
_8 = 29759_u16;
RET.0 = [(-4189416982450659747_i64),(-3899432168734361578_i64),3321949505352813748_i64];
Goto(bb2)
}
bb10 = {
_23 = [_5,_5,_5];
_14.fld3.3 = (_14.fld4.0.0, _16.3.3.1, _28.fld1.3.3.2);
_14.fld3.0.1.2 = _14.fld3.0.2 as i16;
_16.3.3.0 = _24.0.0;
_28.fld5.1 = _14.fld3.0.1.1 ^ _16.3.0.1.1;
_28.fld1.3.0.3 = core::ptr::addr_of_mut!(_5);
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
(*_18) = [_8,_8,_8,_8,_8,_8,_8,_8];
_14.fld0.fld0 = core::ptr::addr_of_mut!(RET);
_32 = RET.1;
_14.fld2 = [_1,_1,_1];
_28.fld2 = [5347503232255980514_i64,(-4668315653049558781_i64),(-1891651997315512771_i64)];
_21 = [_2,_4,_4];
_28.fld1.3.1 = _14.fld3.1;
_28.fld5.0 = _14.fld3.0.1.0;
_2 = _1 ^ _1;
_23 = [_5,_5,_5];
_16.3.3.2 = _9;
_16.3.0.1 = _14.fld3.0.1;
Goto(bb11)
}
bb11 = {
_28.fld1.3.0.1.1 = _28.fld5.0 as usize;
_15 = _14.fld0.fld1 ^ _14.fld0.fld1;
_16.3.2 = _14.fld3.2;
match _16.3.0.1.1 {
0 => bb1,
1 => bb9,
2 => bb12,
3 => bb13,
4 => bb14,
6 => bb16,
5 => bb18,
_ => bb17
}
}
bb12 = {
_23 = [_5,_5,_5];
_14.fld3.3 = (_14.fld4.0.0, _16.3.3.1, _28.fld1.3.3.2);
_14.fld3.0.1.2 = _14.fld3.0.2 as i16;
_16.3.3.0 = _24.0.0;
_28.fld5.1 = _14.fld3.0.1.1 ^ _16.3.0.1.1;
_28.fld1.3.0.3 = core::ptr::addr_of_mut!(_5);
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
(*_18) = [_8,_8,_8,_8,_8,_8,_8,_8];
_14.fld0.fld0 = core::ptr::addr_of_mut!(RET);
_32 = RET.1;
_14.fld2 = [_1,_1,_1];
_28.fld2 = [5347503232255980514_i64,(-4668315653049558781_i64),(-1891651997315512771_i64)];
_21 = [_2,_4,_4];
_28.fld1.3.1 = _14.fld3.1;
_28.fld5.0 = _14.fld3.0.1.0;
_2 = _1 ^ _1;
_23 = [_5,_5,_5];
_16.3.3.2 = _9;
_16.3.0.1 = _14.fld3.0.1;
Goto(bb11)
}
bb13 = {
RET.1 = '\u{6b8b8}';
_5 = 158_u8 - 25_u8;
_5 = !180_u8;
_2 = !_4;
_1 = _5 as isize;
RET.0 = [(-7343324113577662084_i64),6295601676664193958_i64,(-4502831166567456750_i64)];
_5 = RET.1 as u8;
_2 = -_4;
RET.1 = '\u{31009}';
RET.1 = '\u{e2c67}';
_5 = !39_u8;
RET.0 = [1819102480927584725_i64,(-3176236963933382078_i64),1038348908393108904_i64];
RET.1 = '\u{11612}';
RET.1 = '\u{da87f}';
RET.1 = '\u{da75d}';
_8 = 29759_u16;
RET.0 = [(-4189416982450659747_i64),(-3899432168734361578_i64),3321949505352813748_i64];
Goto(bb2)
}
bb14 = {
RET.1 = _16.3.0.1.0;
_10 = [RET.1];
_2 = -_4;
_11 = [(-13123895583820234711014269877442677480_i128),55140795027397310685756429914029680510_i128,(-36587996776914274797869835465466609188_i128),85109597461043942707184559522103958015_i128,168746253661841236946480535541481525744_i128,(-104218452719052685540675566553771881949_i128)];
_16.4 = [_14.fld3.0.0,_14.fld3.0.0,_14.fld3.0.0,_14.fld3.0.0];
_16.3.0.0 = !_14.fld3.0.0;
_14.fld3.0.3 = core::ptr::addr_of_mut!(_5);
_16.3.3.1 = _14.fld0.fld1 as i32;
_16.3.0 = (_14.fld3.0.0, _14.fld3.0.1, _14.fld3.0.2, _14.fld3.0.3);
RET.0 = [(-3132376522554487825_i64),8556718139209096205_i64,4834037856900964566_i64];
_18 = core::ptr::addr_of_mut!(_13);
_24.0.0 = _8 as f32;
_14.fld3.1 = [_5,_5,_5];
_14.fld3.0.1.0 = _16.3.0.1.0;
_15 = _2 as u64;
_16.3.3.2 = -_14.fld3.3.2;
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
_1 = !_4;
_14.fld3.0.3 = core::ptr::addr_of_mut!(_5);
_16.1 = _16.3.0.0 ^ _16.3.0.0;
Call(_5 = core::intrinsics::bswap(129_u8), bb7, UnwindUnreachable())
}
bb15 = {
_16.3.1 = _14.fld3.1;
_14.fld0.fld6 = [_12,_12,_12,_12,_12];
_28.fld1.3.0.1.2 = _16.1 as i16;
_14.fld3.3.0 = _14.fld4.0.0;
_28.fld1.3.0.0 = !_16.1;
_16.3.1 = [_5,_5,_5];
_14.fld3.3 = (_14.fld4.0.0, _16.3.3.1, _16.3.3.2);
_16.2 = _14.fld3.3.0;
_28.fld1.3.3.2 = _16.3.3.2;
match _14.fld3.0.1.2 {
0 => bb4,
1 => bb8,
340282366920938463463374607431768196679 => bb10,
_ => bb9
}
}
bb16 = {
Goto(bb4)
}
bb17 = {
_3 = _2 & _4;
RET.0 = [(-8966352763889352760_i64),(-1365774466736054469_i64),715839177011809786_i64];
RET.1 = '\u{19e1d}';
_3 = (-19092_i16) as isize;
_3 = !_2;
RET.0 = [7495344786681724514_i64,(-14158203360618731_i64),(-7166328766753958625_i64)];
_4 = _3 | _3;
_3 = _2 + _4;
RET.0 = [714881775194080361_i64,4883008807311490697_i64,8303133923054065912_i64];
_2 = _4 - _3;
_14.fld3.1 = [_5,_5,_5];
_14.fld3.3.2 = _9 + _9;
_14.fld3.2 = [_2,_3,_2];
_3 = (-5709200245842012328_i64) as isize;
_14.fld0.fld1 = !14996405810901766545_u64;
_2 = !_4;
_14.fld3.0.2 = _9 as i8;
Goto(bb5)
}
bb18 = {
_31 = _28.fld1.3.0.0 as isize;
_28.fld1.2 = _14.fld4.0.0;
_31 = _1 * _1;
_14.fld3.0.2 = _5 as i8;
_28.fld1.3.0.1 = (_16.3.0.1.0, _14.fld3.0.1.1, _14.fld3.0.1.2);
_28.fld1.0 = [_14.fld3.0.2,_14.fld3.0.2,_14.fld3.0.2,_14.fld3.0.2];
_34.0 = _16.3.0.1.1 as f32;
_35.0 = _16.3.0.1.1 as f32;
_24.0.2 = -_16.3.3.2;
_14.fld3.3 = (_24.0.0, _16.3.3.1, _28.fld1.3.3.2);
RET.0 = _28.fld2;
Goto(bb19)
}
bb19 = {
Call(_38 = dump_var(12_usize, 11_usize, Move(_11), 4_usize, Move(_4), 10_usize, Move(_10), 15_usize, Move(_15)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_38 = dump_var(12_usize, 3_usize, Move(_3), 12_usize, Move(_12), 2_usize, Move(_2), 39_usize, _39), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: isize,mut _2: u8,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: isize,mut _13: isize,mut _14: isize) -> char {
mir! {
type RET = char;
let _15: Adt62;
let _16: [u32; 5];
let _17: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]);
let _18: Adt60;
let _19: Adt60;
let _20: Adt53;
let _21: [char; 1];
let _22: f32;
let _23: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _24: f32;
let _25: *mut u8;
let _26: [i64; 3];
let _27: *mut ([i64; 3], char);
let _28: Adt51;
let _29: char;
let _30: isize;
let _31: (f32, i32, f64);
let _32: Adt58;
let _33: isize;
let _34: [i8; 4];
let _35: [i128; 6];
let _36: Adt48;
let _37: (u32, (char, usize, i16), i8, *mut u8);
let _38: [u32; 4];
let _39: [i8; 4];
let _40: ();
let _41: ();
{
RET = '\u{da9f9}';
_15.fld1.3.0.1.0 = RET;
_15.fld1.2 = (-5292346004792469719_i64) as f32;
Goto(bb1)
}
bb1 = {
_15.fld3 = (-33504824310145504711825459931551119748_i128);
_3 = _9;
_15.fld1.4 = [3381287857_u32,989877925_u32,2094294_u32,3343881959_u32];
_16 = [642665601_u32,1708614367_u32,1469294233_u32,1288951447_u32,750423511_u32];
_13 = _7 ^ _7;
_18.fld1 = RET;
_17.1 = 3926445611_u32;
_22 = _15.fld1.2;
_15.fld5 = (_18.fld1, 7_usize, 1235_i16);
_17.1 = !198718017_u32;
_19.fld0 = false;
_17.3.3.1 = -1106891902_i32;
_15.fld1.3.0.1 = (_18.fld1, _15.fld5.1, _15.fld5.2);
_15.fld1.0 = [46_i8,120_i8,120_i8,(-20_i8)];
_9 = 67093437568530268508425882095398576288_u128 as isize;
_23.0.1.1 = (-9215890229789024144_i64) as usize;
_23.0.3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb2 = {
_23.3.1 = _22 as i32;
_25 = core::ptr::addr_of_mut!(_2);
_15.fld1.3.0.3 = core::ptr::addr_of_mut!((*_25));
_15.fld1.3.1 = [(*_25),(*_25),_2];
_17.3.0.3 = core::ptr::addr_of_mut!((*_25));
_17.3.3.0 = _22;
_5 = _8;
_17.3.3.2 = 49469_u16 as f64;
_24 = _15.fld1.2 * _15.fld1.2;
_3 = 42381_u16 as isize;
_15.fld1.3.0.0 = !_17.1;
_26 = [2811278470548775211_i64,(-9132527709245459062_i64),(-8096378166513648744_i64)];
_15.fld4 = !_15.fld1.3.0.1.2;
_15.fld1.2 = (-5_i8) as f32;
_15.fld5.2 = _15.fld4;
_25 = core::ptr::addr_of_mut!((*_25));
_17.1 = !_15.fld1.3.0.0;
_13 = _12;
match _15.fld1.3.0.1.2 {
1235 => bb4,
_ => bb3
}
}
bb3 = {
_15.fld3 = (-33504824310145504711825459931551119748_i128);
_3 = _9;
_15.fld1.4 = [3381287857_u32,989877925_u32,2094294_u32,3343881959_u32];
_16 = [642665601_u32,1708614367_u32,1469294233_u32,1288951447_u32,750423511_u32];
_13 = _7 ^ _7;
_18.fld1 = RET;
_17.1 = 3926445611_u32;
_22 = _15.fld1.2;
_15.fld5 = (_18.fld1, 7_usize, 1235_i16);
_17.1 = !198718017_u32;
_19.fld0 = false;
_17.3.3.1 = -1106891902_i32;
_15.fld1.3.0.1 = (_18.fld1, _15.fld5.1, _15.fld5.2);
_15.fld1.0 = [46_i8,120_i8,120_i8,(-20_i8)];
_9 = 67093437568530268508425882095398576288_u128 as isize;
_23.0.1.1 = (-9215890229789024144_i64) as usize;
_23.0.3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb4 = {
RET = _15.fld1.3.0.1.0;
_23.3.0 = _22;
_23.3.0 = _15.fld1.2;
_15.fld1.3.3.0 = _5 as f32;
_21 = [_18.fld1];
_17.3.0 = (_15.fld1.3.0.0, _15.fld5, (-51_i8), _23.0.3);
_4 = _1 ^ _7;
_11 = _8;
_17.2 = _15.fld1.3.3.0 * _15.fld1.3.3.0;
_29 = _17.3.0.1.0;
_17.0 = _15.fld1.0;
_19.fld0 = !true;
Call(_19.fld2 = fn14(_10, _23.0.3, _15.fld5, _6), bb5, UnwindUnreachable())
}
bb5 = {
_15.fld1.3.3.2 = -Field::<((f32, i32, f64),)>(Variant(_19.fld2, 1), 4).0.2;
_15.fld1.3.0 = (Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_19.fld2, 1), 5).0, Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_19.fld2, 1), 5).1, Field::<i8>(Variant(_19.fld2, 1), 3), Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_19.fld2, 1), 5).3);
_15.fld1.3.3 = Field::<((f32, i32, f64),)>(Variant(_19.fld2, 1), 4).0;
_17.3.0.1.1 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_19.fld2, 1), 5).1.1;
_17.3.2 = [_1,_10,_13];
_19.fld1 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_19.fld2, 1), 5).1.0;
_23.0.0 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_19.fld2, 1), 5).0 + _15.fld1.3.0.0;
_23.0.1 = (_17.3.0.1.0, _17.3.0.1.1, _15.fld1.3.0.1.2);
_5 = 46622_u16 as isize;
_23.0.1.0 = _18.fld1;
SetDiscriminant(_19.fld2, 2);
_23.0.0 = _15.fld1.3.0.0;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).0 = [_17.3.0.2,_17.3.0.2,_15.fld1.3.0.2,_15.fld1.3.0.2];
_17.3.0.0 = _17.3.0.1.1 as u32;
_23 = (_15.fld1.3.0, _15.fld1.3.1, _17.3.2, _15.fld1.3.3);
place!(Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2)).0 = [(-1045684263632583200_i64),4088780555673076081_i64,4289635370824462838_i64];
_13 = _7 | _6;
_15.fld1.1 = !_17.3.0.0;
_23.0.1.0 = _19.fld1;
_5 = _6 >> _13;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).3.0.1.0 = RET;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).4 = [_15.fld1.1,_17.3.0.0,_15.fld1.3.0.0,_17.3.0.0];
_15.fld1.3.2 = [_11,_5,_1];
_17.3.0 = _15.fld1.3.0;
_32.fld5 = [_15.fld1.3.0.0,_15.fld1.1,_17.3.0.0,_15.fld1.1,_15.fld1.3.0.0];
match _15.fld3 {
0 => bb3,
1 => bb6,
2 => bb7,
3 => bb8,
306777542610792958751549147500217091708 => bb10,
_ => bb9
}
}
bb6 = {
RET = _15.fld1.3.0.1.0;
_23.3.0 = _22;
_23.3.0 = _15.fld1.2;
_15.fld1.3.3.0 = _5 as f32;
_21 = [_18.fld1];
_17.3.0 = (_15.fld1.3.0.0, _15.fld5, (-51_i8), _23.0.3);
_4 = _1 ^ _7;
_11 = _8;
_17.2 = _15.fld1.3.3.0 * _15.fld1.3.3.0;
_29 = _17.3.0.1.0;
_17.0 = _15.fld1.0;
_19.fld0 = !true;
Call(_19.fld2 = fn14(_10, _23.0.3, _15.fld5, _6), bb5, UnwindUnreachable())
}
bb7 = {
_15.fld3 = (-33504824310145504711825459931551119748_i128);
_3 = _9;
_15.fld1.4 = [3381287857_u32,989877925_u32,2094294_u32,3343881959_u32];
_16 = [642665601_u32,1708614367_u32,1469294233_u32,1288951447_u32,750423511_u32];
_13 = _7 ^ _7;
_18.fld1 = RET;
_17.1 = 3926445611_u32;
_22 = _15.fld1.2;
_15.fld5 = (_18.fld1, 7_usize, 1235_i16);
_17.1 = !198718017_u32;
_19.fld0 = false;
_17.3.3.1 = -1106891902_i32;
_15.fld1.3.0.1 = (_18.fld1, _15.fld5.1, _15.fld5.2);
_15.fld1.0 = [46_i8,120_i8,120_i8,(-20_i8)];
_9 = 67093437568530268508425882095398576288_u128 as isize;
_23.0.1.1 = (-9215890229789024144_i64) as usize;
_23.0.3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb8 = {
_23.3.1 = _22 as i32;
_25 = core::ptr::addr_of_mut!(_2);
_15.fld1.3.0.3 = core::ptr::addr_of_mut!((*_25));
_15.fld1.3.1 = [(*_25),(*_25),_2];
_17.3.0.3 = core::ptr::addr_of_mut!((*_25));
_17.3.3.0 = _22;
_5 = _8;
_17.3.3.2 = 49469_u16 as f64;
_24 = _15.fld1.2 * _15.fld1.2;
_3 = 42381_u16 as isize;
_15.fld1.3.0.0 = !_17.1;
_26 = [2811278470548775211_i64,(-9132527709245459062_i64),(-8096378166513648744_i64)];
_15.fld4 = !_15.fld1.3.0.1.2;
_15.fld1.2 = (-5_i8) as f32;
_15.fld5.2 = _15.fld4;
_25 = core::ptr::addr_of_mut!((*_25));
_17.1 = !_15.fld1.3.0.0;
_13 = _12;
match _15.fld1.3.0.1.2 {
1235 => bb4,
_ => bb3
}
}
bb9 = {
_15.fld3 = (-33504824310145504711825459931551119748_i128);
_3 = _9;
_15.fld1.4 = [3381287857_u32,989877925_u32,2094294_u32,3343881959_u32];
_16 = [642665601_u32,1708614367_u32,1469294233_u32,1288951447_u32,750423511_u32];
_13 = _7 ^ _7;
_18.fld1 = RET;
_17.1 = 3926445611_u32;
_22 = _15.fld1.2;
_15.fld5 = (_18.fld1, 7_usize, 1235_i16);
_17.1 = !198718017_u32;
_19.fld0 = false;
_17.3.3.1 = -1106891902_i32;
_15.fld1.3.0.1 = (_18.fld1, _15.fld5.1, _15.fld5.2);
_15.fld1.0 = [46_i8,120_i8,120_i8,(-20_i8)];
_9 = 67093437568530268508425882095398576288_u128 as isize;
_23.0.1.1 = (-9215890229789024144_i64) as usize;
_23.0.3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb10 = {
_31.0 = _15.fld1.3.3.0;
_31 = _23.3;
_12 = -_5;
place!(Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2)).1 = _15.fld5.0;
_23.3.2 = -_31.2;
_23.0.3 = core::ptr::addr_of_mut!(_2);
place!(Field::<i16>(Variant(_19.fld2, 2), 4)) = !_15.fld4;
_15.fld2 = [(-59267894931563764_i64),(-6428226723749456114_i64),(-2974813845474945201_i64)];
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).1 = _15.fld1.1 * _15.fld1.3.0.0;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).0 = [_15.fld1.3.0.2,_15.fld1.3.0.2,_15.fld1.3.0.2,_23.0.2];
_17.3.3.2 = -_23.3.2;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).3.0.1.1 = _15.fld1.3.0.1.1 | _15.fld1.3.0.1.1;
_6 = (*_25) as isize;
_23.0.1.2 = _15.fld1.3.0.1.2;
_15.fld1.3.3.0 = 48614_u16 as f32;
_15.fld1.3.0.2 = _23.3.2 as i8;
_15.fld1.3.0.1 = (_18.fld1, _17.3.0.1.1, _17.3.0.1.2);
_15.fld1.3.0.3 = core::ptr::addr_of_mut!(_2);
place!(Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2)) = (_26, _19.fld1);
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).3.0.2 = _17.3.0.2;
_30 = _7 ^ _5;
(*_25) = 2039536262832425230_i64 as u8;
_37.1.0 = Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2).1;
match _15.fld3 {
0 => bb9,
1 => bb6,
2 => bb5,
306777542610792958751549147500217091708 => bb11,
_ => bb4
}
}
bb11 = {
_17.3.0.0 = (*_25) as u32;
_23.0.1 = (Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2).1, _15.fld1.3.0.1.1, _15.fld1.3.0.1.2);
RET = Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2).1;
match _15.fld3 {
0 => bb5,
1 => bb2,
2 => bb12,
3 => bb13,
306777542610792958751549147500217091708 => bb15,
_ => bb14
}
}
bb12 = {
_31.0 = _15.fld1.3.3.0;
_31 = _23.3;
_12 = -_5;
place!(Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2)).1 = _15.fld5.0;
_23.3.2 = -_31.2;
_23.0.3 = core::ptr::addr_of_mut!(_2);
place!(Field::<i16>(Variant(_19.fld2, 2), 4)) = !_15.fld4;
_15.fld2 = [(-59267894931563764_i64),(-6428226723749456114_i64),(-2974813845474945201_i64)];
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).1 = _15.fld1.1 * _15.fld1.3.0.0;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).0 = [_15.fld1.3.0.2,_15.fld1.3.0.2,_15.fld1.3.0.2,_23.0.2];
_17.3.3.2 = -_23.3.2;
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).3.0.1.1 = _15.fld1.3.0.1.1 | _15.fld1.3.0.1.1;
_6 = (*_25) as isize;
_23.0.1.2 = _15.fld1.3.0.1.2;
_15.fld1.3.3.0 = 48614_u16 as f32;
_15.fld1.3.0.2 = _23.3.2 as i8;
_15.fld1.3.0.1 = (_18.fld1, _17.3.0.1.1, _17.3.0.1.2);
_15.fld1.3.0.3 = core::ptr::addr_of_mut!(_2);
place!(Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2)) = (_26, _19.fld1);
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).3.0.2 = _17.3.0.2;
_30 = _7 ^ _5;
(*_25) = 2039536262832425230_i64 as u8;
_37.1.0 = Field::<([i64; 3], char)>(Variant(_19.fld2, 2), 2).1;
match _15.fld3 {
0 => bb9,
1 => bb6,
2 => bb5,
306777542610792958751549147500217091708 => bb11,
_ => bb4
}
}
bb13 = {
_23.3.1 = _22 as i32;
_25 = core::ptr::addr_of_mut!(_2);
_15.fld1.3.0.3 = core::ptr::addr_of_mut!((*_25));
_15.fld1.3.1 = [(*_25),(*_25),_2];
_17.3.0.3 = core::ptr::addr_of_mut!((*_25));
_17.3.3.0 = _22;
_5 = _8;
_17.3.3.2 = 49469_u16 as f64;
_24 = _15.fld1.2 * _15.fld1.2;
_3 = 42381_u16 as isize;
_15.fld1.3.0.0 = !_17.1;
_26 = [2811278470548775211_i64,(-9132527709245459062_i64),(-8096378166513648744_i64)];
_15.fld4 = !_15.fld1.3.0.1.2;
_15.fld1.2 = (-5_i8) as f32;
_15.fld5.2 = _15.fld4;
_25 = core::ptr::addr_of_mut!((*_25));
_17.1 = !_15.fld1.3.0.0;
_13 = _12;
match _15.fld1.3.0.1.2 {
1235 => bb4,
_ => bb3
}
}
bb14 = {
_15.fld3 = (-33504824310145504711825459931551119748_i128);
_3 = _9;
_15.fld1.4 = [3381287857_u32,989877925_u32,2094294_u32,3343881959_u32];
_16 = [642665601_u32,1708614367_u32,1469294233_u32,1288951447_u32,750423511_u32];
_13 = _7 ^ _7;
_18.fld1 = RET;
_17.1 = 3926445611_u32;
_22 = _15.fld1.2;
_15.fld5 = (_18.fld1, 7_usize, 1235_i16);
_17.1 = !198718017_u32;
_19.fld0 = false;
_17.3.3.1 = -1106891902_i32;
_15.fld1.3.0.1 = (_18.fld1, _15.fld5.1, _15.fld5.2);
_15.fld1.0 = [46_i8,120_i8,120_i8,(-20_i8)];
_9 = 67093437568530268508425882095398576288_u128 as isize;
_23.0.1.1 = (-9215890229789024144_i64) as usize;
_23.0.3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb15 = {
_34 = [_15.fld1.3.0.2,Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0).3.0.2,_17.3.0.2,Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0).3.0.2];
place!(Field::<([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4])>(Variant(_19.fld2, 2), 0)).3.3.0 = 33949888046913789945682114268522361673_u128 as f32;
Goto(bb16)
}
bb16 = {
Call(_40 = dump_var(13_usize, 3_usize, Move(_3), 6_usize, Move(_6), 21_usize, Move(_21), 13_usize, Move(_13)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(13_usize, 29_usize, Move(_29), 11_usize, Move(_11), 4_usize, Move(_4), 1_usize, Move(_1)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(13_usize, 9_usize, Move(_9), 8_usize, Move(_8), 41_usize, _41, 41_usize, _41), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: *mut u8,mut _3: (char, usize, i16),mut _4: isize) -> Adt55 {
mir! {
type RET = Adt55;
let _5: f32;
let _6: [char; 1];
let _7: [i8; 4];
let _8: [i64; 1];
let _9: (f32, i32, f64);
let _10: [usize; 7];
let _11: isize;
let _12: f64;
let _13: u32;
let _14: *mut u8;
let _15: isize;
let _16: isize;
let _17: *mut [i64; 3];
let _18: [u32; 5];
let _19: f32;
let _20: *mut ([i64; 3], char);
let _21: Adt61;
let _22: bool;
let _23: bool;
let _24: [char; 1];
let _25: *const usize;
let _26: (f32, i32, f64);
let _27: ((f32, i32, f64),);
let _28: *mut [i64; 3];
let _29: isize;
let _30: f32;
let _31: i32;
let _32: [bool; 5];
let _33: [u16; 8];
let _34: f64;
let _35: [bool; 5];
let _36: Adt61;
let _37: isize;
let _38: [bool; 5];
let _39: [i8; 4];
let _40: char;
let _41: [i64; 3];
let _42: Adt52;
let _43: u128;
let _44: isize;
let _45: *mut i64;
let _46: [u64; 2];
let _47: f32;
let _48: u16;
let _49: [u32; 5];
let _50: isize;
let _51: u128;
let _52: [bool; 5];
let _53: [u64; 2];
let _54: i32;
let _55: *mut ([i64; 3], char);
let _56: Adt50;
let _57: u8;
let _58: f32;
let _59: ([i64; 3], char);
let _60: [i64; 1];
let _61: [bool; 5];
let _62: Adt51;
let _63: isize;
let _64: usize;
let _65: bool;
let _66: isize;
let _67: [isize; 3];
let _68: Adt61;
let _69: *mut (char, usize, i16);
let _70: f32;
let _71: char;
let _72: Adt61;
let _73: i128;
let _74: [usize; 7];
let _75: ((f32, i32, f64),);
let _76: [i128; 6];
let _77: (char, usize, i16);
let _78: usize;
let _79: usize;
let _80: [isize; 3];
let _81: Adt49;
let _82: Adt56;
let _83: isize;
let _84: i8;
let _85: i128;
let _86: Adt57;
let _87: Adt55;
let _88: [char; 1];
let _89: isize;
let _90: f64;
let _91: char;
let _92: u16;
let _93: [bool; 5];
let _94: char;
let _95: Adt54;
let _96: isize;
let _97: Adt64;
let _98: ([i64; 3], char);
let _99: isize;
let _100: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _101: [u32; 5];
let _102: Adt61;
let _103: [u32; 5];
let _104: i8;
let _105: ((f32, i32, f64),);
let _106: bool;
let _107: bool;
let _108: [isize; 3];
let _109: u128;
let _110: Adt59;
let _111: Adt54;
let _112: i128;
let _113: u128;
let _114: isize;
let _115: [u16; 8];
let _116: [u32; 5];
let _117: i8;
let _118: bool;
let _119: f32;
let _120: bool;
let _121: bool;
let _122: bool;
let _123: Adt58;
let _124: bool;
let _125: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _126: f32;
let _127: usize;
let _128: [u8; 3];
let _129: [i64; 3];
let _130: [u64; 2];
let _131: Adt56;
let _132: Adt61;
let _133: isize;
let _134: usize;
let _135: f32;
let _136: Adt53;
let _137: Adt54;
let _138: *mut f64;
let _139: bool;
let _140: [u32; 4];
let _141: f32;
let _142: Adt60;
let _143: f32;
let _144: Adt55;
let _145: Adt49;
let _146: u128;
let _147: f64;
let _148: [isize; 3];
let _149: i8;
let _150: char;
let _151: [isize; 3];
let _152: [char; 1];
let _153: *mut u8;
let _154: Adt57;
let _155: u32;
let _156: f64;
let _157: isize;
let _158: u32;
let _159: usize;
let _160: u32;
let _161: isize;
let _162: u16;
let _163: *mut f64;
let _164: Adt59;
let _165: [i128; 6];
let _166: isize;
let _167: [u8; 3];
let _168: u8;
let _169: u32;
let _170: f32;
let _171: i64;
let _172: f32;
let _173: i32;
let _174: u64;
let _175: char;
let _176: bool;
let _177: [i64; 3];
let _178: *const bool;
let _179: [u32; 5];
let _180: ();
let _181: ();
{
_3.0 = '\u{2bcd4}';
_4 = _1 ^ _1;
_5 = _3.1 as f32;
Call(_5 = core::intrinsics::transmute(_3.0), bb1, UnwindUnreachable())
}
bb1 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb2 = {
_3 = ('\u{17f3e}', 5_usize, 167_i16);
_3 = ('\u{3c235}', 5_usize, (-7387_i16));
_5 = 17943283249494950567_u64 as f32;
_3.2 = 32398_i16 & (-6900_i16);
_6 = [_3.0];
_5 = 40532_u16 as f32;
_4 = _1;
_7 = [(-29_i8),110_i8,(-5_i8),72_i8];
_1 = (-103812131204687269923601505510097165988_i128) as isize;
_3 = ('\u{509fb}', 17122132011181224842_usize, 30926_i16);
(*_2) = !153_u8;
(*_2) = !229_u8;
_6 = [_3.0];
_7 = [(-114_i8),113_i8,(-11_i8),(-40_i8)];
_4 = 268825049422665386879579270856244997767_u128 as isize;
_3.2 = 3577_i16 >> _3.1;
_2 = core::ptr::addr_of_mut!((*_2));
_1 = _4;
_3.0 = '\u{ac60c}';
_3.2 = !(-28930_i16);
(*_2) = !170_u8;
_4 = _1;
match _3.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
17122132011181224842 => bb9,
_ => bb8
}
}
bb3 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb10 = {
_5 = (*_2) as f32;
Call(_3.1 = core::intrinsics::transmute(_1), bb11, UnwindUnreachable())
}
bb11 = {
_5 = 6110142675025085035_u64 as f32;
_6 = [_3.0];
_3 = ('\u{76de6}', 3_usize, (-5527_i16));
_5 = 25556_u16 as f32;
_3.0 = '\u{5e8a6}';
_7 = [80_i8,(-38_i8),(-77_i8),93_i8];
_3 = ('\u{5c7b8}', 3_usize, (-4691_i16));
_4 = _1;
_7 = [78_i8,106_i8,81_i8,85_i8];
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = _3.2 as u8;
_3.1 = !14466559563892981781_usize;
_5 = 105560110643890292383112646109046284636_i128 as f32;
_6 = [_3.0];
(*_2) = 117_u8;
_5 = (*_2) as f32;
_6 = [_3.0];
(*_2) = (-82_i8) as u8;
_8 = [(-277129260595550973_i64)];
Call(_9.2 = fn15(_3, _4, _1, _5, _3.0, _3.0, _7, _3.2, _4), bb12, UnwindUnreachable())
}
bb12 = {
_9.0 = _5 - _5;
(*_2) = 236_u8;
_9.2 = 552345677_i32 as f64;
match (*_2) {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb13,
4 => bb14,
5 => bb15,
236 => bb17,
_ => bb16
}
}
bb13 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb14 = {
_5 = (*_2) as f32;
Call(_3.1 = core::intrinsics::transmute(_1), bb11, UnwindUnreachable())
}
bb15 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb16 = {
Return()
}
bb17 = {
_9.2 = 114281936588248143480485150815544360357_u128 as f64;
_3.2 = (-24330_i16) - 8603_i16;
_3.0 = '\u{109419}';
_7 = [63_i8,27_i8,(-7_i8),(-128_i8)];
_11 = _3.1 as isize;
_7 = [113_i8,(-96_i8),(-50_i8),58_i8];
(*_2) = 40_u8 ^ 142_u8;
_8 = [7687052929847622672_i64];
_3.1 = true as usize;
_10 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_5 = -_9.0;
_2 = core::ptr::addr_of_mut!((*_2));
_13 = 33984_u16 as u32;
_3.1 = !5_usize;
_3.0 = '\u{1ca22}';
_3.2 = (-11609_i16) & 7934_i16;
_12 = 114524654655292068162852275169960815899_u128 as f64;
_12 = _9.2 - _9.2;
_11 = _1 & _4;
_8 = [1224204579606662896_i64];
_1 = (-120_i8) as isize;
_8 = [4500562369338101498_i64];
_11 = _4 * _4;
_6 = [_3.0];
_4 = _3.0 as isize;
Goto(bb18)
}
bb18 = {
_9.1 = 2060940569_i32 * (-1984236036_i32);
_9.2 = _13 as f64;
_6 = [_3.0];
_3.1 = 3_usize - 0_usize;
_3 = ('\u{12078}', 7_usize, 22852_i16);
_11 = _9.2 as isize;
_2 = core::ptr::addr_of_mut!((*_2));
_8 = [6977122177607893282_i64];
_5 = -_9.0;
_6 = [_3.0];
_9.1 = -1254190990_i32;
_18 = [_13,_13,_13,_13,_13];
Goto(bb19)
}
bb19 = {
_3 = ('\u{dfdec}', 7_usize, (-13562_i16));
_4 = -_1;
_14 = core::ptr::addr_of_mut!((*_2));
_9.1 = 1088919522_i32;
(*_14) = 199_u8;
_19 = _9.1 as f32;
_14 = _2;
(*_2) = !192_u8;
_19 = -_9.0;
_10 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_3.0 = '\u{103755}';
_2 = _14;
_18 = [_13,_13,_13,_13,_13];
_1 = _12 as isize;
_4 = _1 & _11;
(*_2) = 255_u8;
(*_14) = 133_u8;
_15 = _4 & _1;
(*_2) = 226_u8 << _3.1;
(*_2) = 68_u8;
_3.0 = '\u{bc17e}';
(*_14) = 107_u8 << _1;
_16 = 35493_u16 as isize;
_4 = true as isize;
_15 = true as isize;
Call(_4 = fn16(_6, _3.2, _2), bb20, UnwindUnreachable())
}
bb20 = {
_7 = [(-124_i8),(-61_i8),(-28_i8),45_i8];
_1 = _4 * _4;
_13 = !2612839563_u32;
_19 = _5 * _9.0;
_2 = core::ptr::addr_of_mut!((*_14));
_1 = (*_2) as isize;
_11 = (*_2) as isize;
_9.0 = _5 + _5;
_23 = !false;
match _3.1 {
0 => bb5,
1 => bb17,
7 => bb22,
_ => bb21
}
}
bb21 = {
Return()
}
bb22 = {
_22 = !_23;
_9.0 = _19;
_25 = core::ptr::addr_of!(_3.1);
_14 = core::ptr::addr_of_mut!((*_14));
_25 = core::ptr::addr_of!((*_25));
_19 = (*_25) as f32;
_22 = _23;
_19 = -_5;
(*_25) = 3_usize;
_5 = -_19;
(*_14) = 92_u8;
_3.1 = !2_usize;
_13 = 3735043964_u32;
_9 = (_5, 951204145_i32, _12);
_4 = _16 & _1;
_6 = [_3.0];
_15 = _16;
(*_2) = _13 as u8;
_27.0.1 = 64947_u16 as i32;
_11 = !_4;
_24 = [_3.0];
_29 = _16 ^ _16;
Goto(bb23)
}
bb23 = {
_9.1 = _27.0.1 + _27.0.1;
_27 = (_9,);
_11 = 28163_u16 as isize;
_27.0.1 = _9.1;
_32 = [_22,_22,_22,_22,_23];
_3 = ('\u{8bd09}', 7971695136638814083_usize, (-32454_i16));
_13 = _23 as u32;
_30 = 15052125411738497500_u64 as f32;
_22 = !_23;
_8 = [2319603180224759972_i64];
_32 = [_23,_22,_22,_22,_23];
_27 = (_9,);
_34 = -_9.2;
_27.0 = (_30, _9.1, _9.2);
_19 = _9.0 - _9.0;
_30 = 6948_u16 as f32;
_37 = 2268365740114612512_i64 as isize;
(*_2) = 213_u8 << _29;
(*_14) = 109_u8 ^ 68_u8;
_4 = _29;
_35 = [_22,_23,_22,_22,_23];
_31 = (-30953084724270963459838388129169971665_i128) as i32;
_8 = [(-7102054285877589890_i64)];
_24 = _6;
Goto(bb24)
}
bb24 = {
_26.1 = _9.1 >> (*_2);
_3.2 = !(-10186_i16);
_26.2 = 6686714703007719547_u64 as f64;
_5 = 3241_u16 as f32;
_19 = (*_2) as f32;
_27.0 = _9;
_3.1 = 2_usize ^ 1_usize;
_31 = _27.0.1 ^ _9.1;
_15 = _23 as isize;
_29 = -_11;
(*_2) = 138_u8 - 201_u8;
_38 = _35;
Goto(bb25)
}
bb25 = {
_6 = [_3.0];
_27.0.1 = _26.2 as i32;
_6 = _24;
_9.0 = -_30;
_26.2 = _12 + _12;
_38 = [_23,_23,_22,_23,_22];
_25 = core::ptr::addr_of!(_3.1);
_40 = _3.0;
_17 = core::ptr::addr_of_mut!(_41);
_3.2 = -19423_i16;
_7 = [(-116_i8),9_i8,88_i8,66_i8];
_13 = 3818256089_u32;
_28 = core::ptr::addr_of_mut!((*_17));
_3.1 = !6465616020184632034_usize;
_15 = _13 as isize;
_41 = [2432137834183583843_i64,2313834231908603553_i64,4919652328653547124_i64];
(*_2) = 162_u8;
_9.0 = (-11823668888336922_i64) as f32;
Call(_27 = fn17(_22, _9.1, (*_2), _5, _3.0, (*_17), _3.0, _2, (*_28)), bb26, UnwindUnreachable())
}
bb26 = {
_14 = _2;
_18 = [_13,_13,_13,_13,_13];
_28 = core::ptr::addr_of_mut!((*_17));
_4 = (*_14) as isize;
_17 = core::ptr::addr_of_mut!((*_17));
_10 = [(*_25),(*_25),(*_25),(*_25),(*_25),_3.1,(*_25)];
_40 = _3.0;
_14 = core::ptr::addr_of_mut!((*_14));
_15 = _3.1 as isize;
match _13 {
0 => bb8,
1 => bb27,
2 => bb28,
3 => bb29,
4 => bb30,
5 => bb31,
6 => bb32,
3818256089 => bb34,
_ => bb33
}
}
bb27 = {
Return()
}
bb28 = {
Return()
}
bb29 = {
_9.1 = _27.0.1 + _27.0.1;
_27 = (_9,);
_11 = 28163_u16 as isize;
_27.0.1 = _9.1;
_32 = [_22,_22,_22,_22,_23];
_3 = ('\u{8bd09}', 7971695136638814083_usize, (-32454_i16));
_13 = _23 as u32;
_30 = 15052125411738497500_u64 as f32;
_22 = !_23;
_8 = [2319603180224759972_i64];
_32 = [_23,_22,_22,_22,_23];
_27 = (_9,);
_34 = -_9.2;
_27.0 = (_30, _9.1, _9.2);
_19 = _9.0 - _9.0;
_30 = 6948_u16 as f32;
_37 = 2268365740114612512_i64 as isize;
(*_2) = 213_u8 << _29;
(*_14) = 109_u8 ^ 68_u8;
_4 = _29;
_35 = [_22,_23,_22,_22,_23];
_31 = (-30953084724270963459838388129169971665_i128) as i32;
_8 = [(-7102054285877589890_i64)];
_24 = _6;
Goto(bb24)
}
bb30 = {
_5 = (*_2) as f32;
Call(_3.1 = core::intrinsics::transmute(_1), bb11, UnwindUnreachable())
}
bb31 = {
Return()
}
bb32 = {
_3 = ('\u{17f3e}', 5_usize, 167_i16);
_3 = ('\u{3c235}', 5_usize, (-7387_i16));
_5 = 17943283249494950567_u64 as f32;
_3.2 = 32398_i16 & (-6900_i16);
_6 = [_3.0];
_5 = 40532_u16 as f32;
_4 = _1;
_7 = [(-29_i8),110_i8,(-5_i8),72_i8];
_1 = (-103812131204687269923601505510097165988_i128) as isize;
_3 = ('\u{509fb}', 17122132011181224842_usize, 30926_i16);
(*_2) = !153_u8;
(*_2) = !229_u8;
_6 = [_3.0];
_7 = [(-114_i8),113_i8,(-11_i8),(-40_i8)];
_4 = 268825049422665386879579270856244997767_u128 as isize;
_3.2 = 3577_i16 >> _3.1;
_2 = core::ptr::addr_of_mut!((*_2));
_1 = _4;
_3.0 = '\u{ac60c}';
_3.2 = !(-28930_i16);
(*_2) = !170_u8;
_4 = _1;
match _3.1 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
17122132011181224842 => bb9,
_ => bb8
}
}
bb33 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb34 = {
_26 = (_27.0.0, _9.1, _27.0.2);
_9.0 = _19;
_6 = [_3.0];
_14 = core::ptr::addr_of_mut!((*_14));
_43 = 160158008089037535009904590782093909659_u128;
_19 = (-2575933540757197202_i64) as f32;
(*_2) = !0_u8;
_48 = 68325134468324053242806429964042844703_i128 as u16;
_31 = _27.0.1;
_3 = (_40, 8860627688952255038_usize, (-17942_i16));
_46 = [2713176941663223094_u64,6048334019733136464_u64];
Call(_7 = fn19((*_2), (*_25), _9.1, (*_25), (*_25), _27.0.2, (*_25), (*_14), _26.1), bb35, UnwindUnreachable())
}
bb35 = {
_7 = [(-42_i8),(-1_i8),(-47_i8),60_i8];
_9 = _26;
_26.2 = _27.0.2 - _9.2;
_51 = _43;
_54 = _40 as i32;
_31 = 7598109740191906076919123435374118015_i128 as i32;
_18 = [_13,_13,_13,_13,_13];
_8 = [(-7795006976631126212_i64)];
_9 = (_19, _26.1, _27.0.2);
Goto(bb36)
}
bb36 = {
_15 = _29;
_3.1 = _51 as usize;
_17 = _28;
match _3.2 {
0 => bb23,
1 => bb37,
2 => bb38,
3 => bb39,
4 => bb40,
5 => bb41,
6 => bb42,
340282366920938463463374607431768193514 => bb44,
_ => bb43
}
}
bb37 = {
Return()
}
bb38 = {
_5 = 6110142675025085035_u64 as f32;
_6 = [_3.0];
_3 = ('\u{76de6}', 3_usize, (-5527_i16));
_5 = 25556_u16 as f32;
_3.0 = '\u{5e8a6}';
_7 = [80_i8,(-38_i8),(-77_i8),93_i8];
_3 = ('\u{5c7b8}', 3_usize, (-4691_i16));
_4 = _1;
_7 = [78_i8,106_i8,81_i8,85_i8];
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = _3.2 as u8;
_3.1 = !14466559563892981781_usize;
_5 = 105560110643890292383112646109046284636_i128 as f32;
_6 = [_3.0];
(*_2) = 117_u8;
_5 = (*_2) as f32;
_6 = [_3.0];
(*_2) = (-82_i8) as u8;
_8 = [(-277129260595550973_i64)];
Call(_9.2 = fn15(_3, _4, _1, _5, _3.0, _3.0, _7, _3.2, _4), bb12, UnwindUnreachable())
}
bb39 = {
Return()
}
bb40 = {
Return()
}
bb41 = {
_7 = [(-124_i8),(-61_i8),(-28_i8),45_i8];
_1 = _4 * _4;
_13 = !2612839563_u32;
_19 = _5 * _9.0;
_2 = core::ptr::addr_of_mut!((*_14));
_1 = (*_2) as isize;
_11 = (*_2) as isize;
_9.0 = _5 + _5;
_23 = !false;
match _3.1 {
0 => bb5,
1 => bb17,
7 => bb22,
_ => bb21
}
}
bb42 = {
_5 = (*_2) as f32;
Call(_3.1 = core::intrinsics::transmute(_1), bb11, UnwindUnreachable())
}
bb43 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb44 = {
_17 = _28;
_37 = _15 * _15;
match _3.2 {
0 => bb1,
1 => bb2,
2 => bb23,
3 => bb18,
340282366920938463463374607431768193514 => bb45,
_ => bb40
}
}
bb45 = {
_2 = _14;
_9.2 = _26.2 - _26.2;
_49 = [_13,_13,_13,_13,_13];
_27.0.0 = _30;
_14 = _2;
_9 = (_27.0.0, _54, _26.2);
_22 = !_23;
_54 = !_31;
_53 = [5065909137694741045_u64,13622319766837664391_u64];
_37 = -_29;
_50 = _29 + _37;
match _43 {
0 => bb10,
1 => bb37,
2 => bb46,
3 => bb47,
4 => bb48,
5 => bb49,
160158008089037535009904590782093909659 => bb51,
_ => bb50
}
}
bb46 = {
_17 = _28;
_37 = _15 * _15;
match _3.2 {
0 => bb1,
1 => bb2,
2 => bb23,
3 => bb18,
340282366920938463463374607431768193514 => bb45,
_ => bb40
}
}
bb47 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb48 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb49 = {
Return()
}
bb50 = {
_26 = (_27.0.0, _9.1, _27.0.2);
_9.0 = _19;
_6 = [_3.0];
_14 = core::ptr::addr_of_mut!((*_14));
_43 = 160158008089037535009904590782093909659_u128;
_19 = (-2575933540757197202_i64) as f32;
(*_2) = !0_u8;
_48 = 68325134468324053242806429964042844703_i128 as u16;
_31 = _27.0.1;
_3 = (_40, 8860627688952255038_usize, (-17942_i16));
_46 = [2713176941663223094_u64,6048334019733136464_u64];
Call(_7 = fn19((*_2), (*_25), _9.1, (*_25), (*_25), _27.0.2, (*_25), (*_14), _26.1), bb35, UnwindUnreachable())
}
bb51 = {
_19 = _26.0;
_33 = [_48,_48,_48,_48,_48,_48,_48,_48];
(*_17) = [7724903482307492762_i64,6792485483919292239_i64,3692786569467205835_i64];
(*_17) = [(-5353522951045453851_i64),5557371275180535958_i64,(-4069372674777197077_i64)];
_37 = -_16;
(*_14) = !249_u8;
_41 = [5715158309027316340_i64,9079188677661333469_i64,5200176726724760020_i64];
_9.2 = _26.2 * _26.2;
_5 = _19;
_3 = (_40, 12594670033008444562_usize, (-5625_i16));
match (*_25) {
0 => bb52,
12594670033008444562 => bb54,
_ => bb53
}
}
bb52 = {
_26.1 = _9.1 >> (*_2);
_3.2 = !(-10186_i16);
_26.2 = 6686714703007719547_u64 as f64;
_5 = 3241_u16 as f32;
_19 = (*_2) as f32;
_27.0 = _9;
_3.1 = 2_usize ^ 1_usize;
_31 = _27.0.1 ^ _9.1;
_15 = _23 as isize;
_29 = -_11;
(*_2) = 138_u8 - 201_u8;
_38 = _35;
Goto(bb25)
}
bb53 = {
_5 = 6110142675025085035_u64 as f32;
_6 = [_3.0];
_3 = ('\u{76de6}', 3_usize, (-5527_i16));
_5 = 25556_u16 as f32;
_3.0 = '\u{5e8a6}';
_7 = [80_i8,(-38_i8),(-77_i8),93_i8];
_3 = ('\u{5c7b8}', 3_usize, (-4691_i16));
_4 = _1;
_7 = [78_i8,106_i8,81_i8,85_i8];
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = _3.2 as u8;
_3.1 = !14466559563892981781_usize;
_5 = 105560110643890292383112646109046284636_i128 as f32;
_6 = [_3.0];
(*_2) = 117_u8;
_5 = (*_2) as f32;
_6 = [_3.0];
(*_2) = (-82_i8) as u8;
_8 = [(-277129260595550973_i64)];
Call(_9.2 = fn15(_3, _4, _1, _5, _3.0, _3.0, _7, _3.2, _4), bb12, UnwindUnreachable())
}
bb54 = {
(*_25) = 7_usize;
_11 = -_16;
_27.0.2 = _5 as f64;
_57 = (*_14) - (*_2);
_3.2 = 13903_i16;
_59.0 = [(-7924872007167894555_i64),(-3309562048557934892_i64),(-6731478492043267573_i64)];
(*_17) = [9159116810162613374_i64,(-7724576319619184827_i64),(-8525455948766574298_i64)];
_26.1 = _9.1;
_7 = [111_i8,(-101_i8),38_i8,(-100_i8)];
_18 = [_13,_13,_13,_13,_13];
_32 = [_22,_23,_22,_23,_22];
_59.1 = _40;
match _13 {
0 => bb34,
1 => bb47,
2 => bb3,
3 => bb41,
4 => bb55,
3818256089 => bb57,
_ => bb56
}
}
bb55 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb56 = {
Return()
}
bb57 = {
_27.0 = (_30, _26.1, _34);
_11 = _3.0 as isize;
_26.2 = 2778531777047708481615161320116909437_i128 as f64;
_23 = _37 >= _11;
_17 = _28;
_14 = core::ptr::addr_of_mut!((*_2));
_4 = _13 as isize;
_3 = (_59.1, 3_usize, 24434_i16);
_9.0 = -_19;
_27.0.2 = _9.2 + _9.2;
_3.0 = _59.1;
_37 = _15 | _1;
_9.2 = -_27.0.2;
_25 = core::ptr::addr_of!((*_25));
_49 = _18;
_63 = !_37;
_47 = _26.0 - _19;
Goto(bb58)
}
bb58 = {
_55 = core::ptr::addr_of_mut!(_59);
(*_55).1 = _40;
_20 = core::ptr::addr_of_mut!((*_55));
_59.0 = [1307462040587232138_i64,5528322738274698366_i64,(-2816442156908148114_i64)];
_67 = [_50,_11,_11];
(*_14) = _57;
_67 = [_37,_16,_29];
(*_55).0 = (*_28);
_54 = _31;
_52 = [_23,_23,_22,_23,_23];
_32 = [_23,_23,_23,_23,_22];
_65 = _23 | _22;
_26.1 = _9.1 ^ _9.1;
(*_28) = [8142244742582249452_i64,(-1441129172540826357_i64),5521485067107816947_i64];
_9.2 = _13 as f64;
_4 = (*_2) as isize;
_34 = -_27.0.2;
Goto(bb59)
}
bb59 = {
_43 = _51;
_10 = [(*_25),_3.1,(*_25),(*_25),(*_25),(*_25),_3.1];
(*_2) = !_57;
_65 = !_22;
(*_55).1 = _40;
_39 = [(-59_i8),88_i8,20_i8,(-102_i8)];
_29 = _11;
_28 = core::ptr::addr_of_mut!((*_55).0);
_14 = core::ptr::addr_of_mut!((*_14));
(*_28) = [386939286665276990_i64,6074373890172596066_i64,(-5676740850769001542_i64)];
_9.0 = _27.0.0;
match _3.1 {
0 => bb39,
1 => bb19,
3 => bb61,
_ => bb60
}
}
bb60 = {
Return()
}
bb61 = {
_15 = _34 as isize;
_24 = [_40];
_66 = _16;
_70 = _47;
_30 = _47;
_61 = [_23,_23,_23,_65,_65];
_22 = _34 < _27.0.2;
_61 = [_22,_22,_22,_22,_22];
_8 = [(-7161804803477283079_i64)];
(*_14) = _48 as u8;
_55 = core::ptr::addr_of_mut!(_59);
_27.0.2 = _48 as f64;
_55 = core::ptr::addr_of_mut!(_59);
_26.1 = -_27.0.1;
_19 = -_30;
_6 = [_3.0];
(*_20) = ((*_17), _3.0);
_9 = _26;
_50 = -_15;
_11 = _15 | _37;
(*_17) = [4244174936178173536_i64,9106907086342595218_i64,(-1730864905751482305_i64)];
_12 = _34;
_35 = [_22,_22,_22,_22,_22];
_18 = [_13,_13,_13,_13,_13];
_49 = [_13,_13,_13,_13,_13];
(*_25) = !7302942560918011486_usize;
_10 = [(*_25),(*_25),(*_25),(*_25),_3.1,(*_25),(*_25)];
Goto(bb62)
}
bb62 = {
_65 = _12 != _12;
_47 = _9.0 - _9.0;
(*_20).1 = _3.0;
_31 = _27.0.1 * _9.1;
_2 = core::ptr::addr_of_mut!((*_2));
_51 = (-7622866084022488526_i64) as u128;
_7 = _39;
_19 = _30;
(*_28) = (*_17);
_16 = _50;
_63 = _50;
_53 = [9895880399939572611_u64,9723575858306580307_u64];
(*_20) = (_41, _40);
_74 = [(*_25),(*_25),(*_25),_3.1,_3.1,(*_25),(*_25)];
_64 = !(*_25);
_75.0.2 = _12;
match _43 {
0 => bb14,
1 => bb16,
2 => bb25,
160158008089037535009904590782093909659 => bb63,
_ => bb34
}
}
bb63 = {
_77.2 = _3.2;
_75.0 = (_5, _31, _12);
_27.0.1 = _75.0.1;
_78 = _64 >> _11;
_27.0.1 = _54;
(*_14) = _57;
_8 = [3088977649618200548_i64];
_26 = (_75.0.0, _31, _75.0.2);
_11 = !_16;
_69 = core::ptr::addr_of_mut!(_77);
_59.1 = _3.0;
_80 = [_16,_16,_63];
_9.0 = _26.0 + _5;
_73 = -158948734943971765460599353034762573300_i128;
_64 = _78;
_3.2 = _78 as i16;
(*_55) = ((*_17), _3.0);
_60 = [(-7974568540048640889_i64)];
_14 = core::ptr::addr_of_mut!(_57);
Goto(bb64)
}
bb64 = {
_9.1 = 5219797936060520561_u64 as i32;
_83 = _63 & _15;
_3.0 = (*_20).1;
_13 = _3.2 as u32;
_84 = 111_i8;
_27 = _75;
(*_25) = _64;
_37 = _15 | _16;
(*_55) = (_41, _40);
_7 = [_84,_84,_84,_84];
_3.2 = _77.2 >> _3.1;
_1 = _3.2 as isize;
(*_69).1 = _73 as usize;
_61 = _32;
_26 = (_5, _75.0.1, _75.0.2);
_54 = _27.0.1 + _31;
_53 = [5644981029048561087_u64,12593634015950812478_u64];
match (*_69).2 {
0 => bb41,
1 => bb35,
2 => bb21,
3 => bb17,
4 => bb42,
24434 => bb65,
_ => bb27
}
}
bb65 = {
_32 = [_65,_23,_65,_22,_22];
_71 = (*_20).1;
_66 = !_29;
_89 = _13 as isize;
_3.2 = (*_69).2;
_62 = Adt51::Variant2 { fld0: _19,fld1: _33,fld2: _46 };
(*_17) = [8774173279621030510_i64,(-3788284628602850578_i64),5386272144881970119_i64];
_47 = _5;
_88 = [_3.0];
(*_17) = [8608840216590597467_i64,1335006709874064861_i64,(-3480548769531228180_i64)];
_53 = [6610862941279508771_u64,7724332323126497634_u64];
(*_55).0 = [(-8470459905242879602_i64),(-8457099777820575932_i64),8372366263441214861_i64];
_27.0.0 = (-7687298571767942398_i64) as f32;
(*_28) = [8192102224441205217_i64,(-3902007340123374747_i64),(-3455559077990412347_i64)];
_2 = _14;
_75.0 = _27.0;
(*_69).1 = (*_25);
Call(_50 = core::intrinsics::transmute((*_69).1), bb66, UnwindUnreachable())
}
bb66 = {
_27 = (_75.0,);
(*_69).0 = _40;
(*_55) = ((*_17), _71);
_25 = core::ptr::addr_of!(_78);
(*_69).1 = (*_2) as usize;
_16 = !_37;
_83 = _16 ^ _63;
_3.0 = (*_20).1;
_2 = core::ptr::addr_of_mut!((*_2));
_64 = _3.1 >> _83;
_38 = [_65,_22,_65,_65,_22];
_29 = -_37;
_76 = [_73,_73,_73,_73,_73,_73];
(*_55) = ((*_17), _40);
_8 = [(-8849649762412260368_i64)];
_61 = [_22,_22,_22,_65,_65];
_95.fld1 = _75;
_43 = _51 << _37;
_95.fld3 = core::ptr::addr_of!(_43);
_9 = (_19, _54, _12);
_78 = !_64;
_77.0 = (*_55).1;
_98.0 = [(-7953200109615109660_i64),5436483090845855339_i64,(-7527294174647872377_i64)];
_64 = (*_25);
_75.0.2 = _9.2 * _95.fld1.0.2;
(*_55).0 = [5889575790026550050_i64,(-1474011958218585367_i64),(-6712495997081340193_i64)];
(*_69) = ((*_20).1, _78, _3.2);
match _3.2 {
0 => bb67,
1 => bb68,
2 => bb69,
3 => bb70,
4 => bb71,
5 => bb72,
24434 => bb74,
_ => bb73
}
}
bb67 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb68 = {
_7 = [(-124_i8),(-61_i8),(-28_i8),45_i8];
_1 = _4 * _4;
_13 = !2612839563_u32;
_19 = _5 * _9.0;
_2 = core::ptr::addr_of_mut!((*_14));
_1 = (*_2) as isize;
_11 = (*_2) as isize;
_9.0 = _5 + _5;
_23 = !false;
match _3.1 {
0 => bb5,
1 => bb17,
7 => bb22,
_ => bb21
}
}
bb69 = {
Return()
}
bb70 = {
_7 = [(-124_i8),(-61_i8),(-28_i8),45_i8];
_1 = _4 * _4;
_13 = !2612839563_u32;
_19 = _5 * _9.0;
_2 = core::ptr::addr_of_mut!((*_14));
_1 = (*_2) as isize;
_11 = (*_2) as isize;
_9.0 = _5 + _5;
_23 = !false;
match _3.1 {
0 => bb5,
1 => bb17,
7 => bb22,
_ => bb21
}
}
bb71 = {
Return()
}
bb72 = {
_5 = (*_2) as f32;
Call(_3.1 = core::intrinsics::transmute(_1), bb11, UnwindUnreachable())
}
bb73 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb74 = {
_7 = [_84,_84,_84,_84];
_98 = ((*_17), (*_69).0);
_59.0 = [(-7309474480263318882_i64),(-3872562598698424531_i64),2770739932636594562_i64];
_55 = _20;
_41 = (*_28);
_3.2 = (*_69).2;
SetDiscriminant(_62, 1);
_67 = _80;
_100.0.1.0 = _71;
_85 = -_73;
_13 = 4105096634_u32;
_100.0.1.1 = _77.1 ^ _77.1;
_52 = [_65,_23,_22,_22,_65];
_99 = (*_69).0 as isize;
_100.3.1 = _89 as i32;
Goto(bb75)
}
bb75 = {
place!(Field::<[u32; 5]>(Variant(_62, 1), 4)) = [_13,_13,_13,_13,_13];
_75.0.1 = _22 as i32;
Goto(bb76)
}
bb76 = {
(*_55).0 = _98.0;
_105.0.2 = -_34;
_50 = _3.0 as isize;
_100.3.1 = (*_69).0 as i32;
_101 = [_13,_13,_13,_13,_13];
(*_25) = _64 - (*_69).1;
_100.0.1.2 = _3.2 * _3.2;
(*_69).1 = _64 & (*_25);
(*_69).2 = _100.0.1.2 + _3.2;
_100.0.3 = core::ptr::addr_of_mut!((*_14));
_60 = [(-6546507249352709327_i64)];
_77.2 = _3.1 as i16;
_3.2 = _19 as i16;
_98 = ((*_17), _3.0);
_66 = _59.1 as isize;
_26 = (_30, _75.0.1, _12);
_100.0.0 = !_13;
(*_20) = _98;
_26.0 = _70;
place!(Field::<isize>(Variant(_62, 1), 2)) = _85 as isize;
match _84 {
0 => bb59,
111 => bb77,
_ => bb51
}
}
bb77 = {
_75.0.1 = -_27.0.1;
_95.fld6 = [9431516595684969591_u64,15477122644040333664_u64];
_104 = !_84;
_100.3.0 = -_70;
place!(Field::<i32>(Variant(_62, 1), 1)) = !_26.1;
(*_55) = _98;
_54 = Field::<i32>(Variant(_62, 1), 1);
_59 = _98;
_44 = _11 - _16;
_95.fld1.0 = (_9.0, Field::<i32>(Variant(_62, 1), 1), _75.0.2);
(*_17) = [(-2836265137783125046_i64),(-4587945819052464278_i64),5752289710138184347_i64];
_51 = _13 as u128;
(*_69).1 = !_64;
_3.0 = _100.0.1.0;
_12 = _27.0.2 - _95.fld1.0.2;
_100.3.2 = _9.2;
_51 = !_43;
match _84 {
0 => bb78,
111 => bb80,
_ => bb79
}
}
bb78 = {
_6 = [_3.0];
_27.0.1 = _26.2 as i32;
_6 = _24;
_9.0 = -_30;
_26.2 = _12 + _12;
_38 = [_23,_23,_22,_23,_22];
_25 = core::ptr::addr_of!(_3.1);
_40 = _3.0;
_17 = core::ptr::addr_of_mut!(_41);
_3.2 = -19423_i16;
_7 = [(-116_i8),9_i8,88_i8,66_i8];
_13 = 3818256089_u32;
_28 = core::ptr::addr_of_mut!((*_17));
_3.1 = !6465616020184632034_usize;
_15 = _13 as isize;
_41 = [2432137834183583843_i64,2313834231908603553_i64,4919652328653547124_i64];
(*_2) = 162_u8;
_9.0 = (-11823668888336922_i64) as f32;
Call(_27 = fn17(_22, _9.1, (*_2), _5, _3.0, (*_17), _3.0, _2, (*_28)), bb26, UnwindUnreachable())
}
bb79 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb80 = {
_9.0 = _19;
_9.2 = 5696389034364178222_u64 as f64;
_111.fld1.0.2 = (*_69).2 as f64;
_105.0.1 = _95.fld1.0.1 + _100.3.1;
_51 = !_43;
(*_69).2 = !_100.0.1.2;
_58 = -_9.0;
_18 = _49;
_47 = _58;
_31 = _13 as i32;
_111.fld1 = (_95.fld1.0,);
_100.3.1 = !_111.fld1.0.1;
_103 = Field::<[u32; 5]>(Variant(_62, 1), 4);
_57 = 74_u8;
_20 = core::ptr::addr_of_mut!((*_20));
_91 = _98.1;
_59.0 = (*_17);
_9 = _100.3;
_9.0 = _48 as f32;
Call(place!(Field::<[u32; 5]>(Variant(_62, 1), 4)) = core::intrinsics::transmute(_103), bb81, UnwindUnreachable())
}
bb81 = {
_113 = !_43;
_43 = !_51;
_39 = _7;
_18 = [_13,_100.0.0,_13,_100.0.0,_13];
_95.fld5 = core::ptr::addr_of_mut!(_75.0.2);
_117 = _113 as i8;
_111.fld6 = _53;
_26.2 = _100.3.2;
_38 = [_22,_65,_65,_65,_65];
_4 = _70 as isize;
_9.0 = _5;
_80 = _67;
_18 = _103;
_47 = _58;
_8 = [1597691193292038050_i64];
_98.0 = (*_28);
_105.0 = _9;
_65 = _22;
_100.0.1.0 = _91;
_28 = _17;
_95.fld1.0.1 = !_111.fld1.0.1;
_1 = -_89;
(*_25) = _77.1 - _100.0.1.1;
_90 = _43 as f64;
match (*_2) {
74 => bb83,
_ => bb82
}
}
bb82 = {
_5 = (*_2) as f32;
Call(_3.1 = core::intrinsics::transmute(_1), bb11, UnwindUnreachable())
}
bb83 = {
_92 = (*_69).2 as u16;
_119 = _70 - _30;
(*_20) = ((*_17), _98.1);
_124 = _90 >= _26.2;
_111.fld0 = !_65;
Call(_43 = core::intrinsics::bswap(_113), bb84, UnwindUnreachable())
}
bb84 = {
_8 = [9157900529437650693_i64];
(*_14) = _48 as u8;
_119 = _111.fld1.0.1 as f32;
_125.0.1.2 = _3.2;
_90 = _27.0.2;
_92 = !_48;
_114 = _16 - _29;
_20 = _55;
_77.0 = _98.1;
_111.fld1.0.1 = _26.1 | _9.1;
_37 = _92 as isize;
Call(_100.0.1.2 = core::intrinsics::bswap((*_69).2), bb85, UnwindUnreachable())
}
bb85 = {
_100.0.1.2 = !_3.2;
_123.fld0 = core::ptr::addr_of_mut!((*_20));
_69 = core::ptr::addr_of_mut!(_100.0.1);
Goto(bb86)
}
bb86 = {
_121 = _124;
_80 = _67;
_22 = _124;
_10 = [_100.0.1.1,_78,_64,_100.0.1.1,(*_25),(*_25),(*_25)];
_125.0.2 = (*_69).1 as i8;
_79 = 4181038976626444943_u64 as usize;
_100.2 = _67;
_96 = _16 ^ _114;
_48 = !_92;
_96 = _114 * _114;
_112 = _73 * _85;
_118 = _114 < _114;
_84 = _117 ^ _125.0.2;
_119 = _114 as f32;
_119 = _105.0.0;
_95.fld5 = core::ptr::addr_of_mut!(_100.3.2);
Goto(bb87)
}
bb87 = {
_111.fld6 = _46;
_29 = !_83;
_23 = !_124;
_71 = _91;
_35 = [_121,_118,_124,_118,_23];
_113 = _43;
_19 = -_70;
_26 = (_105.0.0, Field::<i32>(Variant(_62, 1), 1), _105.0.2);
_77.1 = _30 as usize;
match _13 {
0 => bb24,
1 => bb88,
4105096634 => bb90,
_ => bb89
}
}
bb88 = {
_5 = _3.1 as f32;
_3.1 = 5_usize;
(*_2) = 14_u8;
_6 = [_3.0];
_3.1 = 17585782585655248723_usize + 18230938707744995013_usize;
_5 = 6377072751230523404_u64 as f32;
_3 = ('\u{ac8c6}', 5_usize, (-4129_i16));
_3.1 = 8474943837124414000172922340061830566_i128 as usize;
_5 = _3.1 as f32;
_3.1 = 1853408062433727582_usize * 7_usize;
Goto(bb2)
}
bb89 = {
_3 = ('\u{dfdec}', 7_usize, (-13562_i16));
_4 = -_1;
_14 = core::ptr::addr_of_mut!((*_2));
_9.1 = 1088919522_i32;
(*_14) = 199_u8;
_19 = _9.1 as f32;
_14 = _2;
(*_2) = !192_u8;
_19 = -_9.0;
_10 = [_3.1,_3.1,_3.1,_3.1,_3.1,_3.1,_3.1];
_3.0 = '\u{103755}';
_2 = _14;
_18 = [_13,_13,_13,_13,_13];
_1 = _12 as isize;
_4 = _1 & _11;
(*_2) = 255_u8;
(*_14) = 133_u8;
_15 = _4 & _1;
(*_2) = 226_u8 << _3.1;
(*_2) = 68_u8;
_3.0 = '\u{bc17e}';
(*_14) = 107_u8 << _1;
_16 = 35493_u16 as isize;
_4 = true as isize;
_15 = true as isize;
Call(_4 = fn16(_6, _3.2, _2), bb20, UnwindUnreachable())
}
bb90 = {
_59.1 = (*_69).0;
_131 = Adt56::Variant2 { fld0: _20,fld1: _95.fld3 };
_123.fld4 = -(*_69).2;
_120 = _111.fld0 > _22;
(*_55).1 = _3.0;
_125.0.1.1 = _3.1;
_40 = (*_55).1;
_2 = core::ptr::addr_of_mut!((*_2));
_117 = _125.0.2 | _125.0.2;
_137.fld3 = Field::<*const u128>(Variant(_131, 2), 1);
_59 = ((*_17), (*_69).0);
_137.fld5 = core::ptr::addr_of_mut!(_9.2);
_125.0.0 = _13;
_2 = core::ptr::addr_of_mut!(_57);
_125.3 = (_26.0, _111.fld1.0.1, _27.0.2);
(*_69).0 = (*_20).1;
_3 = ((*_69).0, (*_69).1, (*_69).2);
_75.0.1 = Field::<i32>(Variant(_62, 1), 1) ^ _9.1;
_31 = !_100.3.1;
_100.0.2 = _117;
(*_2) = 716808688437856171_u64 as u8;
_75.0.1 = _43 as i32;
_2 = core::ptr::addr_of_mut!((*_2));
Goto(bb91)
}
bb91 = {
_9.2 = _12;
_77.1 = (*_25) * (*_25);
_7 = [_84,_125.0.2,_117,_125.0.2];
_88 = _24;
SetDiscriminant(_131, 0);
_123.fld1 = 10264379001868241572_u64 & 8245260207181957218_u64;
_93 = [_118,_118,_120,_111.fld0,_22];
(*_20).0 = [7759932036422859723_i64,749322077273950813_i64,(-6094198520723597225_i64)];
_137.fld6 = [_123.fld1,_123.fld1];
_125.1 = [(*_2),(*_14),_57];
_92 = !_48;
_81 = Adt49::Variant1 { fld0: _69,fld1: _75,fld2: _101,fld3: _100.0 };
(*_69).2 = -_125.0.1.2;
_141 = _19;
_28 = core::ptr::addr_of_mut!((*_28));
_137.fld0 = !_111.fld0;
(*_28) = [(-1402781152020596788_i64),1687644591469413756_i64,(-1867758659759142511_i64)];
_105.0 = _27.0;
_95.fld1.0.0 = -_19;
Goto(bb92)
}
bb92 = {
(*_2) = _111.fld1.0.2 as u8;
_3.0 = _59.1;
_137.fld4 = _81;
place!(Field::<((f32, i32, f64),)>(Variant(_81, 1), 1)).0 = _125.3;
Goto(bb93)
}
bb93 = {
_39 = [Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).2,Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).2,_117,Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).2];
_137.fld1.0 = (_141, Field::<((f32, i32, f64),)>(Variant(_137.fld4, 1), 1).0.1, _9.2);
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3)).2 = -Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).2;
_95.fld0 = !_120;
_30 = _141;
(*_69) = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).1;
_7 = [_100.0.2,Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).2,_84,_125.0.2];
_50 = _16;
_1 = -_114;
_43 = _51 ^ _51;
(*_17) = [5093441880779506740_i64,8264378931777319630_i64,8296399115991998130_i64];
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3)).0 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).0;
_111.fld5 = core::ptr::addr_of_mut!(_100.3.2);
place!(Field::<((f32, i32, f64),)>(Variant(_131, 0), 3)) = _111.fld1;
_100.0.0 = _83 as u32;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3)) = (_100.0.0, _77, _100.0.2, _100.0.3);
_141 = Field::<((f32, i32, f64),)>(Variant(_131, 0), 3).0.0 * _9.0;
_59.1 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).1.0;
_57 = !238_u8;
_80 = [_83,_44,_114];
_100 = (Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3), _125.1, _80, _75.0);
match _125.0.0 {
0 => bb78,
1 => bb36,
2 => bb9,
3 => bb16,
4 => bb32,
5 => bb53,
6 => bb94,
4105096634 => bb96,
_ => bb95
}
}
bb94 = {
_5 = 53668_u16 as f32;
_4 = -_1;
(*_2) = 67_u8 & 197_u8;
_4 = -_1;
_3.0 = '\u{bc906}';
_5 = (*_2) as f32;
_2 = core::ptr::addr_of_mut!((*_2));
_3.2 = (-14146_i16) | 4644_i16;
Goto(bb10)
}
bb95 = {
Return()
}
bb96 = {
place!(Field::<[u32; 5]>(Variant(_81, 1), 2)) = Field::<[u32; 5]>(Variant(_137.fld4, 1), 2);
_95.fld6 = [_123.fld1,_123.fld1];
_102 = Adt61::Variant1 { fld0: (*_69).1,fld1: (*_69).2,fld2: _100,fld3: _111.fld1.0.1 };
_108 = [_63,_29,_1];
place!(Field::<isize>(Variant(_62, 1), 2)) = _44;
_125.0.1.1 = !(*_25);
_148 = [_96,_1,_44];
_67 = [_44,_1,_114];
_121 = _51 >= _43;
_75.0.0 = -_58;
_140 = [Field::<((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64))>(Variant(_102, 1), 2).0.0,Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).0,Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).0,_100.0.0];
_68 = Move(_102);
_123.fld6 = [_111.fld0,_120,_121,_121,_22];
_105.0.1 = -_9.1;
_36 = Move(_68);
_111.fld3 = _95.fld3;
_125.0.3 = core::ptr::addr_of_mut!((*_14));
_125.0.1 = _3;
_127 = !_64;
_126 = _30 + _47;
Goto(bb97)
}
bb97 = {
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3)).0 = Field::<((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64))>(Variant(_36, 1), 2).0.0;
_87 = Adt55::Variant1 { fld0: 969105778335104066_i64,fld1: _51,fld2: (*_28),fld3: _84,fld4: Field::<((f32, i32, f64),)>(Variant(_137.fld4, 1), 1),fld5: _100.0 };
_76 = [_85,_73,_73,_73,_112,_112];
_142.fld1 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).1.0;
_137.fld1 = (_100.3,);
place!(Field::<[i64; 3]>(Variant(_87, 1), 2)) = [5817633516075437110_i64,(-1675441098244419720_i64),3759536347348168186_i64];
place!(Field::<i8>(Variant(_87, 1), 3)) = -_117;
match _125.0.0 {
4105096634 => bb98,
_ => bb41
}
}
bb98 = {
_58 = _123.fld1 as f32;
(*_20).0 = (*_17);
_111.fld6 = [_123.fld1,_123.fld1];
(*_20).1 = _98.1;
_152 = _24;
_142.fld1 = _98.1;
place!(Field::<i32>(Variant(_36, 1), 3)) = !_75.0.1;
SetDiscriminant(_36, 0);
Call(_95.fld1.0.2 = core::intrinsics::transmute(_63), bb99, UnwindUnreachable())
}
bb99 = {
_9.1 = _26.1 & _111.fld1.0.1;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3)).1.1 = !_100.0.1.1;
_26.2 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).0 as f64;
_137.fld1.0.1 = Field::<u128>(Variant(_87, 1), 1) as i32;
place!(Field::<((f32, i32, f64),)>(Variant(_87, 1), 4)) = Field::<((f32, i32, f64),)>(Variant(_131, 0), 3);
(*_20).0 = (*_17);
place!(Field::<Adt49>(Variant(_62, 1), 3)) = Adt49::Variant1 { fld0: _69,fld1: Field::<((f32, i32, f64),)>(Variant(_131, 0), 3),fld2: Field::<[u32; 5]>(Variant(_62, 1), 4),fld3: Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3) };
_120 = !_95.fld0;
place!(Field::<(f32, i32, f64)>(Variant(_131, 0), 2)).0 = _9.0 + _141;
_123.fld4 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_137.fld4, 1), 3).1.2 ^ _77.2;
_95.fld1.0 = Field::<((f32, i32, f64),)>(Variant(_81, 1), 1).0;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_87, 1), 5)).2 = -Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 3).2;
_119 = -_141;
_105.0.0 = _95.fld1.0.2 as f32;
SetDiscriminant(_137.fld4, 0);
Goto(bb100)
}
bb100 = {
_135 = _126;
_84 = !Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 3).2;
_158 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 3).0 & Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).0;
_125 = _100;
_156 = Field::<((f32, i32, f64),)>(Variant(_81, 1), 1).0.2;
_45 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_87, 1), 0)));
place!(Field::<i64>(Variant(_87, 1), 0)) = !8527775460301633042_i64;
SetDiscriminant(_87, 1);
SetDiscriminant(_81, 1);
_47 = _105.0.0 - _19;
place!(Field::<*mut (char, usize, i16)>(Variant(_81, 1), 0)) = core::ptr::addr_of_mut!((*_69));
_100.2 = _148;
_125.0.3 = _14;
_65 = _118;
_77.2 = _123.fld4;
_111.fld4 = Adt49::Variant1 { fld0: Field::<*mut (char, usize, i16)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 0),fld1: Field::<((f32, i32, f64),)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 1),fld2: Field::<[u32; 5]>(Variant(_62, 1), 4),fld3: Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 3) };
_98.1 = _40;
_44 = -_83;
place!(Field::<((f32, i32, f64),)>(Variant(_131, 0), 3)).0.0 = Field::<((f32, i32, f64),)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 1).0.0 + _126;
place!(Field::<[isize; 3]>(Variant(_131, 0), 4)) = [_11,Field::<isize>(Variant(_62, 1), 2),_96];
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_87, 1), 5)).1 = _3;
_32 = _93;
Goto(bb101)
}
bb101 = {
(*_14) = 219_u8 >> _158;
(*_55).1 = _91;
_111 = Adt54 { fld0: _65,fld1: Field::<((f32, i32, f64),)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 1),fld2: _45,fld3: _95.fld3,fld4: Field::<Adt49>(Variant(_62, 1), 3),fld5: _95.fld5,fld6: _95.fld6,fld7: (*_17) };
_58 = _113 as f32;
_123.fld1 = 770032702935787480_u64;
(*_69).2 = !_123.fld4;
SetDiscriminant(_111.fld4, 1);
(*_20).1 = _40;
_142.fld0 = _23;
_50 = _1;
_100.0 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 3);
_91 = (*_55).1;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3)).1.0 = (*_69).0;
_10 = [_77.1,_100.0.1.1,(*_25),_125.0.1.1,_125.0.1.1,_78,(*_25)];
place!(Field::<((f32, i32, f64),)>(Variant(_87, 1), 4)).0.0 = _105.0.0 - _105.0.0;
place!(Field::<*const bool>(Variant(_137.fld4, 0), 2)) = core::ptr::addr_of!(_122);
_27.0.2 = _34 + _12;
_18 = [_125.0.0,_100.0.0,_100.0.0,_100.0.0,_158];
place!(Field::<Adt54>(Variant(_36, 0), 2)).fld1.0.1 = _9.1;
place!(Field::<i16>(Variant(_137.fld4, 0), 1)) = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(Field::<Adt49>(Variant(_62, 1), 3), 1), 3).1.2 * _77.2;
place!(Field::<((f32, i32, f64),)>(Variant(_131, 0), 3)).0.1 = !Field::<i32>(Variant(_62, 1), 1);
_77.1 = _125.0.1.1;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3)).2 = _117 - _125.0.2;
match _13 {
0 => bb102,
1 => bb103,
2 => bb104,
4105096634 => bb106,
_ => bb105
}
}
bb102 = {
_26.1 = _9.1 >> (*_2);
_3.2 = !(-10186_i16);
_26.2 = 6686714703007719547_u64 as f64;
_5 = 3241_u16 as f32;
_19 = (*_2) as f32;
_27.0 = _9;
_3.1 = 2_usize ^ 1_usize;
_31 = _27.0.1 ^ _9.1;
_15 = _23 as isize;
_29 = -_11;
(*_2) = 138_u8 - 201_u8;
_38 = _35;
Goto(bb25)
}
bb103 = {
_121 = _124;
_80 = _67;
_22 = _124;
_10 = [_100.0.1.1,_78,_64,_100.0.1.1,(*_25),(*_25),(*_25)];
_125.0.2 = (*_69).1 as i8;
_79 = 4181038976626444943_u64 as usize;
_100.2 = _67;
_96 = _16 ^ _114;
_48 = !_92;
_96 = _114 * _114;
_112 = _73 * _85;
_118 = _114 < _114;
_84 = _117 ^ _125.0.2;
_119 = _114 as f32;
_119 = _105.0.0;
_95.fld5 = core::ptr::addr_of_mut!(_100.3.2);
Goto(bb87)
}
bb104 = {
_92 = (*_69).2 as u16;
_119 = _70 - _30;
(*_20) = ((*_17), _98.1);
_124 = _90 >= _26.2;
_111.fld0 = !_65;
Call(_43 = core::intrinsics::bswap(_113), bb84, UnwindUnreachable())
}
bb105 = {
_26 = (_27.0.0, _9.1, _27.0.2);
_9.0 = _19;
_6 = [_3.0];
_14 = core::ptr::addr_of_mut!((*_14));
_43 = 160158008089037535009904590782093909659_u128;
_19 = (-2575933540757197202_i64) as f32;
(*_2) = !0_u8;
_48 = 68325134468324053242806429964042844703_i128 as u16;
_31 = _27.0.1;
_3 = (_40, 8860627688952255038_usize, (-17942_i16));
_46 = [2713176941663223094_u64,6048334019733136464_u64];
Call(_7 = fn19((*_2), (*_25), _9.1, (*_25), (*_25), _27.0.2, (*_25), (*_14), _26.1), bb35, UnwindUnreachable())
}
bb106 = {
place!(Field::<*const u128>(Variant(_137.fld4, 0), 0)) = _95.fld3;
Goto(bb107)
}
bb107 = {
_111.fld1.0.2 = -_90;
(*_17) = [(-6111441119903099842_i64),(-3868303818855228885_i64),(-4012396494003182435_i64)];
_61 = [_137.fld0,_137.fld0,_111.fld0,_120,_65];
place!(Field::<(f32, i32, f64)>(Variant(_131, 0), 2)).2 = _90 * _12;
match _123.fld1 {
0 => bb101,
1 => bb11,
2 => bb22,
3 => bb76,
770032702935787480 => bb108,
_ => bb50
}
}
bb108 = {
_9.2 = -_137.fld1.0.2;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_87, 1), 5)).2 = _27.0.0 as i8;
_31 = _100.0.0 as i32;
match _123.fld1 {
770032702935787480 => bb109,
_ => bb67
}
}
bb109 = {
place!(Field::<Adt54>(Variant(_36, 0), 2)).fld6 = [_123.fld1,_123.fld1];
place!(Field::<((f32, i32, f64),)>(Variant(_87, 1), 4)).0.2 = _123.fld1 as f64;
place!(Field::<((f32, i32, f64),)>(Variant(_81, 1), 1)).0.2 = _9.1 as f64;
_143 = -_105.0.0;
SetDiscriminant(Field::<Adt49>(Variant(_62, 1), 3), 0);
_100.3 = (Field::<((f32, i32, f64),)>(Variant(_87, 1), 4).0.0, Field::<i32>(Variant(_62, 1), 1), _12);
place!(Field::<i32>(Variant(_131, 0), 5)) = _105.0.1 * _137.fld1.0.1;
_27.0.1 = !_31;
_38 = _123.fld6;
_161 = _73 as isize;
_155 = !_100.0.0;
_75.0.2 = _58 as f64;
_5 = _70 + _143;
place!(Field::<[i64; 3]>(Variant(place!(Field::<Adt49>(Variant(_62, 1), 3)), 0), 3)) = [8898038654175629781_i64,2469793799400957830_i64,(-5026391390489583705_i64)];
_68 = Adt61::Variant1 { fld0: Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_87, 1), 5).1.1,fld1: Field::<i16>(Variant(_137.fld4, 0), 1),fld2: _125,fld3: _9.1 };
(*_20).0 = (*_17);
_139 = (*_2) >= (*_14);
SetDiscriminant(_68, 3);
_9.1 = (*_14) as i32;
Goto(bb110)
}
bb110 = {
_125.0.1.2 = !(*_69).2;
place!(Field::<(f32, i32, f64)>(Variant(_131, 0), 2)).1 = _54;
_3.1 = !_77.1;
place!(Field::<(f32, i32, f64)>(Variant(_131, 0), 2)).2 = _26.2 - _95.fld1.0.2;
place!(Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_111.fld4, 1), 3)).1.0 = _40;
_100.3 = (_58, _111.fld1.0.1, _34);
_100.0.2 = _84 - _84;
_125.1 = [(*_14),(*_2),(*_2)];
place!(Field::<Adt54>(Variant(_36, 0), 2)).fld7 = [(-5065126094800725245_i64),6649929673683671973_i64,1070259220148779313_i64];
_100 = _125;
_149 = Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).2;
place!(Field::<((f32, i32, f64),)>(Variant(_111.fld4, 1), 1)).0.0 = Field::<((f32, i32, f64),)>(Variant(_87, 1), 4).0.0;
_27.0.0 = Field::<((f32, i32, f64),)>(Variant(_111.fld4, 1), 1).0.0;
place!(Field::<((f32, i32, f64),)>(Variant(_81, 1), 1)).0 = (_5, _125.3.1, _156);
_33 = [_48,_48,_92,_92,_48,_92,_48,_48];
_39 = [_125.0.2,_117,_149,Field::<(u32, (char, usize, i16), i8, *mut u8)>(Variant(_81, 1), 3).2];
_3 = (_100.0.1.0, _125.0.1.1, _100.0.1.2);
place!(Field::<[i64; 3]>(Variant(_87, 1), 2)) = [(-4172902271062722249_i64),(-3740110960792205719_i64),9187866071612396810_i64];
place!(Field::<*const *mut [i64; 3]>(Variant(_62, 1), 0)) = core::ptr::addr_of!(_17);
_95.fld1 = (_26,);
_8 = [(-8265579395269389249_i64)];
Goto(bb111)
}
bb111 = {
_95.fld2 = core::ptr::addr_of_mut!(_171);
place!(Field::<i16>(Variant(_68, 3), 0)) = _77.2 >> _95.fld1.0.1;
Goto(bb112)
}
bb112 = {
place!(Field::<((f32, i32, f64),)>(Variant(_87, 1), 4)).0 = (_58, _27.0.1, _75.0.2);
place!(Field::<[u32; 5]>(Variant(_81, 1), 2)) = [_155,_100.0.0,_100.0.0,_125.0.0,_100.0.0];
place!(Field::<i64>(Variant(_87, 1), 0)) = (-6031016476565661143_i64);
_3 = _100.0.1;
_137.fld6 = [_123.fld1,_123.fld1];
_100.0.1.0 = _142.fld1;
_119 = _58;
(*_28) = [Field::<i64>(Variant(_87, 1), 0),Field::<i64>(Variant(_87, 1), 0),Field::<i64>(Variant(_87, 1), 0)];
place!(Field::<[i64; 3]>(Variant(_137.fld4, 0), 3)) = [Field::<i64>(Variant(_87, 1), 0),Field::<i64>(Variant(_87, 1), 0),Field::<i64>(Variant(_87, 1), 0)];
SetDiscriminant(_137.fld4, 0);
Goto(bb113)
}
bb113 = {
_15 = _114 | _29;
_4 = _96;
_133 = _77.2 as isize;
_15 = _112 as isize;
(*_69).2 = Field::<i16>(Variant(_68, 3), 0);
place!(Field::<Adt54>(Variant(_36, 0), 2)).fld1.0.0 = -_111.fld1.0.0;
_166 = _1;
place!(Field::<Adt54>(Variant(_36, 0), 2)).fld5 = core::ptr::addr_of_mut!(place!(Field::<Adt54>(Variant(_36, 0), 2)).fld1.0.2);
_52 = _61;
_75.0 = (_105.0.0, _100.3.1, Field::<(f32, i32, f64)>(Variant(_131, 0), 2).2);
place!(Field::<*const u128>(Variant(place!(Field::<Adt49>(Variant(_62, 1), 3)), 0), 0)) = _95.fld3;
place!(Field::<i16>(Variant(_137.fld4, 0), 1)) = Field::<i16>(Variant(_68, 3), 0) << _125.0.0;
place!(Field::<Adt54>(Variant(_36, 0), 2)).fld1.0.0 = -_27.0.0;
place!(Field::<[u32; 5]>(Variant(_111.fld4, 1), 2)) = [_100.0.0,_125.0.0,_100.0.0,_125.0.0,_155];
_125.0.1.0 = _91;
RET = Adt55::Variant1 { fld0: Field::<i64>(Variant(_87, 1), 0),fld1: _51,fld2: (*_20).0,fld3: _117,fld4: _27,fld5: _100.0 };
Goto(bb114)
}
bb114 = {
Call(_180 = dump_var(14_usize, 98_usize, Move(_98), 84_usize, Move(_84), 91_usize, Move(_91), 3_usize, Move(_3)), bb115, UnwindUnreachable())
}
bb115 = {
Call(_180 = dump_var(14_usize, 155_usize, Move(_155), 23_usize, Move(_23), 96_usize, Move(_96), 16_usize, Move(_16)), bb116, UnwindUnreachable())
}
bb116 = {
Call(_180 = dump_var(14_usize, 50_usize, Move(_50), 40_usize, Move(_40), 41_usize, Move(_41), 77_usize, Move(_77)), bb117, UnwindUnreachable())
}
bb117 = {
Call(_180 = dump_var(14_usize, 49_usize, Move(_49), 161_usize, Move(_161), 76_usize, Move(_76), 158_usize, Move(_158)), bb118, UnwindUnreachable())
}
bb118 = {
Call(_180 = dump_var(14_usize, 43_usize, Move(_43), 139_usize, Move(_139), 112_usize, Move(_112), 127_usize, Move(_127)), bb119, UnwindUnreachable())
}
bb119 = {
Call(_180 = dump_var(14_usize, 4_usize, Move(_4), 121_usize, Move(_121), 52_usize, Move(_52), 61_usize, Move(_61)), bb120, UnwindUnreachable())
}
bb120 = {
Call(_180 = dump_var(14_usize, 46_usize, Move(_46), 39_usize, Move(_39), 88_usize, Move(_88), 10_usize, Move(_10)), bb121, UnwindUnreachable())
}
bb121 = {
Call(_180 = dump_var(14_usize, 92_usize, Move(_92), 83_usize, Move(_83), 35_usize, Move(_35), 113_usize, Move(_113)), bb122, UnwindUnreachable())
}
bb122 = {
Call(_180 = dump_var(14_usize, 15_usize, Move(_15), 6_usize, Move(_6), 1_usize, Move(_1), 48_usize, Move(_48)), bb123, UnwindUnreachable())
}
bb123 = {
Call(_180 = dump_var(14_usize, 148_usize, Move(_148), 166_usize, Move(_166), 79_usize, Move(_79), 38_usize, Move(_38)), bb124, UnwindUnreachable())
}
bb124 = {
Call(_180 = dump_var(14_usize, 152_usize, Move(_152), 29_usize, Move(_29), 22_usize, Move(_22), 181_usize, _181), bb125, UnwindUnreachable())
}
bb125 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: (char, usize, i16),mut _2: isize,mut _3: isize,mut _4: f32,mut _5: char,mut _6: char,mut _7: [i8; 4],mut _8: i16,mut _9: isize) -> f64 {
mir! {
type RET = f64;
let _10: f64;
let _11: [usize; 7];
let _12: u32;
let _13: [i128; 6];
let _14: char;
let _15: [i128; 6];
let _16: f32;
let _17: (f32, i32, f64);
let _18: [u32; 4];
let _19: isize;
let _20: Adt48;
let _21: i64;
let _22: i16;
let _23: u128;
let _24: *mut (char, usize, i16);
let _25: [bool; 5];
let _26: isize;
let _27: usize;
let _28: Adt53;
let _29: ();
let _30: ();
{
_1.1 = 1330393590057975178_usize;
_1.2 = _1.1 as i16;
RET = (-10706984719637294437056382224647861729_i128) as f64;
_10 = RET * RET;
_10 = RET - RET;
_2 = _3;
_10 = _1.2 as f64;
_6 = _1.0;
_4 = 8838865533588911692_i64 as f32;
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = _10;
_3 = (-1932301084_i32) as isize;
_7 = [(-24_i8),36_i8,(-46_i8),40_i8];
RET = (-333897186_i32) as f64;
_7 = [(-24_i8),(-120_i8),105_i8,(-72_i8)];
RET = 17143316374971026839_u64 as f64;
_13 = [(-125231902903265246229451736922536050793_i128),8339841826977453244022559149219446749_i128,96178567844642482646473955255357545179_i128,29677817567583474580061651160854199556_i128,(-67553887613092952038321893888708167035_i128),105139324586548652182734390084126731142_i128];
_1 = (_6, 0_usize, _8);
_5 = _6;
_15 = [163149939738857752541889831010660837974_i128,69293914622760880804805453583168109741_i128,68490109844331081675128266218860135673_i128,15675666438966100634155809872689944895_i128,96576600087535961596229521446326503812_i128,542730805047359812405984235351335141_i128];
_1 = (_6, 3_usize, _8);
_17 = (_4, (-137746486_i32), RET);
Goto(bb1)
}
bb1 = {
_17 = (_4, (-1789200973_i32), RET);
_1.2 = _8;
_17 = (_4, 1710857136_i32, _10);
_8 = !_1.2;
_17.1 = (-409446928_i32);
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_12 = !2313438639_u32;
_8 = _1.2 + _1.2;
_10 = _17.1 as f64;
_7 = [117_i8,(-63_i8),(-22_i8),90_i8];
match _1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607431768206765 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_19 = _2 >> _1.1;
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_8 = 664152549113336885_i64 as i16;
_19 = -_9;
_15 = _13;
_1.0 = _5;
_8 = !_1.2;
_6 = _5;
_3 = -_19;
_17.0 = 241_u8 as f32;
_1 = (_5, 14922789426671598964_usize, _8);
_5 = _1.0;
_1 = (_6, 3_usize, _8);
_14 = _6;
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1 = (_6, 7321214568374626527_usize, _8);
_10 = _17.2 + _17.2;
_12 = 1503762621_u32;
_21 = _17.2 as i64;
_1.1 = 1_usize;
_18 = [_12,_12,_12,_12];
_13 = [(-89911207050963270550915727759070807287_i128),70834210563619167419835798059463409886_i128,(-15688068793770764620555010109749581501_i128),71907123759273147935614635053655834536_i128,26494868093354894974204998261647301987_i128,(-12257962898886978020557306498468466481_i128)];
_1 = (_5, 1314846770992846700_usize, _8);
Goto(bb8)
}
bb8 = {
_5 = _1.0;
_15 = [(-15516146560229780501449918473987947784_i128),(-153070528346586884432449561308985578853_i128),(-95700883579422731138084790510638906213_i128),27670119504155199851677917414918667021_i128,44157839966945462449048909891200597613_i128,(-93131972699467942567583186789940565014_i128)];
_5 = _6;
_24 = core::ptr::addr_of_mut!(_1);
_15 = [48662901777328444976419971219811541579_i128,(-3188551792994110572335343086544345888_i128),(-138131402777481202002355552223544322114_i128),77121301943041726812697542385989284298_i128,(-102681906323759434010626890528752087758_i128),93248042433134547583052667038604513540_i128];
_21 = (-1143087132482469394_i64) & 5599236804636318687_i64;
_1.0 = _5;
_2 = _3;
_24 = core::ptr::addr_of_mut!(_1);
(*_24).0 = _6;
_1.2 = -_8;
_3 = -_19;
_21 = (-2178297209883663570_i64) | 89766371005424129_i64;
(*_24).2 = !_8;
(*_24).0 = _6;
_16 = _4;
(*_24).1 = 3_usize * 2_usize;
_12 = 798618573_u32;
_17.2 = RET - _10;
(*_24) = (_5, 3_usize, _8);
_1 = (_5, 7863693286378034325_usize, _8);
_11 = [(*_24).1,(*_24).1,(*_24).1,_1.1,(*_24).1,(*_24).1,_1.1];
Goto(bb9)
}
bb9 = {
(*_24).0 = _6;
_17.1 = 19496003275784434698428905513764589503_i128 as i32;
_1.0 = _6;
RET = _17.2 - _10;
_1.1 = 2_usize - 11982355520301164574_usize;
_17.2 = -_10;
_1.0 = _5;
_18 = [_12,_12,_12,_12];
(*_24).0 = _14;
_12 = 936319512_u32 * 428394122_u32;
_3 = _2;
(*_24).2 = _8;
(*_24).0 = _14;
_21 = 192657634747714285_i64;
_6 = (*_24).0;
(*_24).2 = _8 << _1.1;
match _21 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
192657634747714285 => bb18,
_ => bb17
}
}
bb10 = {
_5 = _1.0;
_15 = [(-15516146560229780501449918473987947784_i128),(-153070528346586884432449561308985578853_i128),(-95700883579422731138084790510638906213_i128),27670119504155199851677917414918667021_i128,44157839966945462449048909891200597613_i128,(-93131972699467942567583186789940565014_i128)];
_5 = _6;
_24 = core::ptr::addr_of_mut!(_1);
_15 = [48662901777328444976419971219811541579_i128,(-3188551792994110572335343086544345888_i128),(-138131402777481202002355552223544322114_i128),77121301943041726812697542385989284298_i128,(-102681906323759434010626890528752087758_i128),93248042433134547583052667038604513540_i128];
_21 = (-1143087132482469394_i64) & 5599236804636318687_i64;
_1.0 = _5;
_2 = _3;
_24 = core::ptr::addr_of_mut!(_1);
(*_24).0 = _6;
_1.2 = -_8;
_3 = -_19;
_21 = (-2178297209883663570_i64) | 89766371005424129_i64;
(*_24).2 = !_8;
(*_24).0 = _6;
_16 = _4;
(*_24).1 = 3_usize * 2_usize;
_12 = 798618573_u32;
_17.2 = RET - _10;
(*_24) = (_5, 3_usize, _8);
_1 = (_5, 7863693286378034325_usize, _8);
_11 = [(*_24).1,(*_24).1,(*_24).1,_1.1,(*_24).1,(*_24).1,_1.1];
Goto(bb9)
}
bb11 = {
_19 = _2 >> _1.1;
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_8 = 664152549113336885_i64 as i16;
_19 = -_9;
_15 = _13;
_1.0 = _5;
_8 = !_1.2;
_6 = _5;
_3 = -_19;
_17.0 = 241_u8 as f32;
_1 = (_5, 14922789426671598964_usize, _8);
_5 = _1.0;
_1 = (_6, 3_usize, _8);
_14 = _6;
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1 = (_6, 7321214568374626527_usize, _8);
_10 = _17.2 + _17.2;
_12 = 1503762621_u32;
_21 = _17.2 as i64;
_1.1 = 1_usize;
_18 = [_12,_12,_12,_12];
_13 = [(-89911207050963270550915727759070807287_i128),70834210563619167419835798059463409886_i128,(-15688068793770764620555010109749581501_i128),71907123759273147935614635053655834536_i128,26494868093354894974204998261647301987_i128,(-12257962898886978020557306498468466481_i128)];
_1 = (_5, 1314846770992846700_usize, _8);
Goto(bb8)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_17 = (_4, (-1789200973_i32), RET);
_1.2 = _8;
_17 = (_4, 1710857136_i32, _10);
_8 = !_1.2;
_17.1 = (-409446928_i32);
_11 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_12 = !2313438639_u32;
_8 = _1.2 + _1.2;
_10 = _17.1 as f64;
_7 = [117_i8,(-63_i8),(-22_i8),90_i8];
match _1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607431768206765 => bb7,
_ => bb6
}
}
bb18 = {
_8 = 52921_u16 as i16;
_15 = [169219868341342547946533215614061311802_i128,81147395488594472610716163464051542882_i128,159477827256367038654367749250843804785_i128,(-167902049926035187330090384900964261035_i128),(-3358287178729485135795689490063913990_i128),(-108247724050189393310546959885919014534_i128)];
_10 = _17.2;
_1.1 = 157_u8 as usize;
_19 = _9 ^ _2;
_9 = 14792830951679344506_u64 as isize;
_1.0 = _5;
Goto(bb19)
}
bb19 = {
Call(_29 = dump_var(15_usize, 14_usize, Move(_14), 13_usize, Move(_13), 1_usize, Move(_1), 9_usize, Move(_9)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_29 = dump_var(15_usize, 15_usize, Move(_15), 11_usize, Move(_11), 7_usize, Move(_7), 6_usize, Move(_6)), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [char; 1],mut _2: i16,mut _3: *mut u8) -> isize {
mir! {
type RET = isize;
let _4: bool;
let _5: Adt53;
let _6: Adt52;
let _7: [i64; 1];
let _8: *mut u8;
let _9: Adt59;
let _10: [u32; 4];
let _11: bool;
let _12: f32;
let _13: u64;
let _14: u128;
let _15: [u8; 3];
let _16: Adt55;
let _17: f64;
let _18: [i64; 1];
let _19: i8;
let _20: Adt57;
let _21: f32;
let _22: (char, usize, i16);
let _23: Adt53;
let _24: isize;
let _25: Adt57;
let _26: isize;
let _27: bool;
let _28: [bool; 5];
let _29: Adt64;
let _30: ();
let _31: ();
{
RET = 9223372036854775807_isize;
_1 = ['\u{59014}'];
_4 = !false;
_2 = (-4841_i16) - (-22558_i16);
_2 = -15987_i16;
_2 = !29050_i16;
_3 = core::ptr::addr_of_mut!((*_3));
_1 = ['\u{18032}'];
RET = -(-9223372036854775808_isize);
(*_3) = 203_u8 << RET;
_1 = ['\u{8f11f}'];
_1 = ['\u{50d0b}'];
RET = 48_isize;
_2 = (-3196_i16);
_3 = core::ptr::addr_of_mut!((*_3));
_1 = ['\u{46c63}'];
_2 = 758414687_i32 as i16;
_2 = 2993422904353219096_u64 as i16;
_2 = 7854_i16 << RET;
(*_3) = 230_u8 & 2_u8;
(*_3) = !101_u8;
Goto(bb1)
}
bb1 = {
(*_3) = 63_u8;
(*_3) = 12099095715518538333460643299631617471_i128 as u8;
_3 = core::ptr::addr_of_mut!((*_3));
_3 = core::ptr::addr_of_mut!((*_3));
_3 = core::ptr::addr_of_mut!((*_3));
RET = 9223372036854775807_isize;
(*_3) = !58_u8;
(*_3) = !9_u8;
_1 = ['\u{d82a1}'];
_3 = core::ptr::addr_of_mut!((*_3));
_4 = true;
_7 = [5969932749052369420_i64];
(*_3) = 66_u8 | 191_u8;
RET = (-5046299711863331676197663853197204333_i128) as isize;
_8 = core::ptr::addr_of_mut!((*_3));
Goto(bb2)
}
bb2 = {
(*_8) = 1004578693_i32 as u8;
Goto(bb3)
}
bb3 = {
_1 = ['\u{b8829}'];
_8 = core::ptr::addr_of_mut!((*_8));
_3 = _8;
(*_3) = 165_u8;
_1 = ['\u{a18bf}'];
_7 = [(-149392657150517584_i64)];
_12 = 10185721864612452324_usize as f32;
_2 = 26483_i16;
_13 = 4699802013557144852_u64;
_13 = 1401022960396528393_u64 | 15612995027023089944_u64;
_1 = ['\u{9d604}'];
_11 = _4;
_7 = [(-2496841985888801513_i64)];
(*_8) = 123_u8 * 49_u8;
_10 = [19039247_u32,443804211_u32,3253676731_u32,3576769444_u32];
_8 = _3;
_13 = !12767171300856397138_u64;
RET = -(-12_isize);
Goto(bb4)
}
bb4 = {
_1 = ['\u{9f0d4}'];
_14 = !215291728687923648399659726602106444672_u128;
(*_8) = !34_u8;
RET = (-96_i8) as isize;
_2 = 48_i8 as i16;
(*_3) = 3795188566_u32 as u8;
_13 = !14584696240763641311_u64;
(*_8) = 197_u8;
_11 = _4;
_3 = _8;
_17 = 47445_u16 as f64;
(*_3) = 231_u8 << _2;
_8 = core::ptr::addr_of_mut!((*_8));
_4 = _11 | _11;
_2 = (-3971_i16) >> (*_8);
(*_3) = 180_u8;
(*_3) = 19_u8;
RET = 36_isize >> _13;
match (*_3) {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
19 => bb11,
_ => bb10
}
}
bb5 = {
_1 = ['\u{b8829}'];
_8 = core::ptr::addr_of_mut!((*_8));
_3 = _8;
(*_3) = 165_u8;
_1 = ['\u{a18bf}'];
_7 = [(-149392657150517584_i64)];
_12 = 10185721864612452324_usize as f32;
_2 = 26483_i16;
_13 = 4699802013557144852_u64;
_13 = 1401022960396528393_u64 | 15612995027023089944_u64;
_1 = ['\u{9d604}'];
_11 = _4;
_7 = [(-2496841985888801513_i64)];
(*_8) = 123_u8 * 49_u8;
_10 = [19039247_u32,443804211_u32,3253676731_u32,3576769444_u32];
_8 = _3;
_13 = !12767171300856397138_u64;
RET = -(-12_isize);
Goto(bb4)
}
bb6 = {
(*_8) = 1004578693_i32 as u8;
Goto(bb3)
}
bb7 = {
(*_3) = 63_u8;
(*_3) = 12099095715518538333460643299631617471_i128 as u8;
_3 = core::ptr::addr_of_mut!((*_3));
_3 = core::ptr::addr_of_mut!((*_3));
_3 = core::ptr::addr_of_mut!((*_3));
RET = 9223372036854775807_isize;
(*_3) = !58_u8;
(*_3) = !9_u8;
_1 = ['\u{d82a1}'];
_3 = core::ptr::addr_of_mut!((*_3));
_4 = true;
_7 = [5969932749052369420_i64];
(*_3) = 66_u8 | 191_u8;
RET = (-5046299711863331676197663853197204333_i128) as isize;
_8 = core::ptr::addr_of_mut!((*_3));
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
(*_3) = 158_u8;
_11 = !_4;
_8 = core::ptr::addr_of_mut!((*_3));
_18 = [954093635983554129_i64];
_19 = 115_i8;
_15 = [(*_8),(*_8),(*_8)];
_14 = !4098660347728505848746806338866215026_u128;
_10 = [1524916589_u32,941183428_u32,3366442831_u32,741161238_u32];
_15 = [(*_8),(*_8),(*_3)];
_13 = !16167649753295368952_u64;
_4 = _11;
_19 = 97_i8 * (-92_i8);
_14 = !101416487611134227290353886926439616212_u128;
_15 = [(*_3),(*_8),(*_3)];
(*_8) = 224_u8;
_18 = [2137899034674336613_i64];
_8 = core::ptr::addr_of_mut!((*_3));
_7 = [(-7580304751672831817_i64)];
_2 = (-11592_i16);
_8 = core::ptr::addr_of_mut!((*_8));
_18 = _7;
_15 = [(*_8),(*_8),(*_3)];
Goto(bb12)
}
bb12 = {
(*_8) = 31_u8 | 192_u8;
_19 = _17 as i8;
_22.2 = _2;
_22.0 = '\u{d6c04}';
RET = (-9223372036854775808_isize) ^ 122_isize;
_15 = [(*_8),(*_3),(*_3)];
_26 = RET >> _19;
_22.0 = '\u{fef1d}';
_22.0 = '\u{b8096}';
_8 = _3;
_22.2 = _2 >> _26;
_24 = !_26;
_2 = 13720257270610925444_usize as i16;
_15 = [(*_3),(*_3),(*_8)];
_22 = ('\u{88e3a}', 10231309067553039606_usize, _2);
_22.1 = (-157650616272203686991368049674548708201_i128) as usize;
_4 = _24 >= RET;
_19 = (-125_i8);
_26 = _24;
(*_8) = 81_u8 << _22.1;
_2 = _22.2;
_19 = 65_i8 ^ 5_i8;
_21 = _13 as f32;
_13 = 4208731590571170608_u64 ^ 17868929278711920941_u64;
_19 = 4_i8;
(*_3) = _2 as u8;
_8 = core::ptr::addr_of_mut!((*_8));
_14 = 219344081371867937215353995531386324517_u128;
RET = _24;
_22.0 = '\u{12bc8}';
Goto(bb13)
}
bb13 = {
_2 = _14 as i16;
_21 = _12 + _12;
_21 = -_12;
_27 = _4 < _11;
Goto(bb14)
}
bb14 = {
_26 = _2 as isize;
RET = _26 << _24;
_11 = _4;
_22.0 = '\u{3a882}';
(*_3) = 326919411_i32 as u8;
_12 = _21 - _21;
_11 = _27 & _27;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(16_usize, 14_usize, Move(_14), 11_usize, Move(_11), 18_usize, Move(_18), 2_usize, Move(_2)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(16_usize, 13_usize, Move(_13), 19_usize, Move(_19), 7_usize, Move(_7), 31_usize, _31), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: bool,mut _2: i32,mut _3: u8,mut _4: f32,mut _5: char,mut _6: [i64; 3],mut _7: char,mut _8: *mut u8,mut _9: [i64; 3]) -> ((f32, i32, f64),) {
mir! {
type RET = ((f32, i32, f64),);
let _10: u128;
let _11: isize;
let _12: [bool; 5];
let _13: [isize; 3];
let _14: i64;
let _15: *const usize;
let _16: [isize; 3];
let _17: isize;
let _18: i16;
let _19: *const usize;
let _20: f32;
let _21: f32;
let _22: [u8; 3];
let _23: [usize; 7];
let _24: f32;
let _25: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _26: Adt50;
let _27: u128;
let _28: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]);
let _29: u32;
let _30: isize;
let _31: i8;
let _32: usize;
let _33: u128;
let _34: [usize; 7];
let _35: u32;
let _36: f64;
let _37: (char, usize, i16);
let _38: i32;
let _39: i128;
let _40: char;
let _41: ();
let _42: ();
{
RET.0.2 = _4 as f64;
RET.0.1 = _2;
_7 = _5;
(*_8) = _3 | _3;
_11 = 9223372036854775807_isize;
_2 = 15040_i16 as i32;
_7 = _5;
_1 = !true;
RET.0.0 = -_4;
_10 = !173216384670371758594080162508181340733_u128;
RET.0.0 = -_4;
_8 = core::ptr::addr_of_mut!((*_8));
(*_8) = _3;
_6 = _9;
_11 = 57_isize << _3;
RET.0.1 = _2;
_9 = _6;
_4 = 10389699044929816339_u64 as f32;
_12 = [_1,_1,_1,_1,_1];
RET.0.1 = _2 << _2;
RET.0.1 = _2;
Goto(bb1)
}
bb1 = {
_14 = (-4502622305199221523_i64) & 7089465603134984256_i64;
(*_8) = _3;
_14 = RET.0.0 as i64;
RET.0.2 = 15874_i16 as f64;
RET.0.2 = _11 as f64;
_12 = [_1,_1,_1,_1,_1];
(*_8) = _3;
_4 = RET.0.0;
_6 = [_14,_14,_14];
_13 = [_11,_11,_11];
_3 = 2_usize as u8;
_6 = [_14,_14,_14];
_12 = [_1,_1,_1,_1,_1];
(*_8) = _3 * _3;
RET.0.0 = _10 as f32;
RET.0.0 = 17242048583698020933_usize as f32;
_1 = false;
_9 = [_14,_14,_14];
_16 = [_11,_11,_11];
RET.0.2 = _11 as f64;
_9 = _6;
_17 = _11;
Goto(bb2)
}
bb2 = {
_12 = [_1,_1,_1,_1,_1];
_18 = (-56_i16);
_22 = [(*_8),(*_8),_3];
_6 = _9;
_21 = -RET.0.0;
_23 = [3_usize,0_usize,13308512286747709855_usize,2_usize,15360403071591729808_usize,11554569604403329753_usize,1097026132800792683_usize];
_16 = [_11,_11,_17];
_17 = -_11;
_25.3.2 = RET.0.2 - RET.0.2;
RET.0.1 = !_2;
_14 = (-4444935872382757748_i64) | (-7556926846673608734_i64);
_3 = (*_8) & (*_8);
Goto(bb3)
}
bb3 = {
_25.0.3 = core::ptr::addr_of_mut!((*_8));
_25.0.1 = (_7, 17924567825655695922_usize, _18);
_20 = _4;
_15 = core::ptr::addr_of!(_25.0.1.1);
_25.0.0 = !3210391238_u32;
match (*_15) {
0 => bb2,
1 => bb4,
17924567825655695922 => bb6,
_ => bb5
}
}
bb4 = {
_12 = [_1,_1,_1,_1,_1];
_18 = (-56_i16);
_22 = [(*_8),(*_8),_3];
_6 = _9;
_21 = -RET.0.0;
_23 = [3_usize,0_usize,13308512286747709855_usize,2_usize,15360403071591729808_usize,11554569604403329753_usize,1097026132800792683_usize];
_16 = [_11,_11,_17];
_17 = -_11;
_25.3.2 = RET.0.2 - RET.0.2;
RET.0.1 = !_2;
_14 = (-4444935872382757748_i64) | (-7556926846673608734_i64);
_3 = (*_8) & (*_8);
Goto(bb3)
}
bb5 = {
_14 = (-4502622305199221523_i64) & 7089465603134984256_i64;
(*_8) = _3;
_14 = RET.0.0 as i64;
RET.0.2 = 15874_i16 as f64;
RET.0.2 = _11 as f64;
_12 = [_1,_1,_1,_1,_1];
(*_8) = _3;
_4 = RET.0.0;
_6 = [_14,_14,_14];
_13 = [_11,_11,_11];
_3 = 2_usize as u8;
_6 = [_14,_14,_14];
_12 = [_1,_1,_1,_1,_1];
(*_8) = _3 * _3;
RET.0.0 = _10 as f32;
RET.0.0 = 17242048583698020933_usize as f32;
_1 = false;
_9 = [_14,_14,_14];
_16 = [_11,_11,_11];
RET.0.2 = _11 as f64;
_9 = _6;
_17 = _11;
Goto(bb2)
}
bb6 = {
_3 = !(*_8);
_19 = _15;
_20 = _21;
(*_19) = _2 as usize;
_25.3.0 = _4;
RET.0 = (_21, _2, _25.3.2);
Call((*_8) = fn18(_8, _1), bb7, UnwindUnreachable())
}
bb7 = {
_25.0.1.0 = _5;
_8 = _25.0.3;
RET.0.0 = _14 as f32;
_8 = _25.0.3;
_25.0.2 = 2_i8;
_17 = _11;
_20 = _17 as f32;
_20 = -_4;
_25.3 = RET.0;
_17 = _11;
_25.2 = [_11,_17,_17];
_23 = [(*_19),(*_15),_25.0.1.1,(*_19),(*_19),(*_19),(*_19)];
(*_15) = !7_usize;
_28.3 = (_25.0, _22, _13, _25.3);
_14 = 821678596460386372_i64;
Goto(bb8)
}
bb8 = {
_23 = [(*_15),_25.0.1.1,_28.3.0.1.1,_25.0.1.1,_25.0.1.1,_25.0.1.1,(*_15)];
_18 = -_25.0.1.2;
RET.0 = _25.3;
_25.0.1.2 = 6727886405009672199_u64 as i16;
_25.0.3 = core::ptr::addr_of_mut!((*_8));
(*_15) = _28.3.0.1.1;
_25.0.1.2 = -_28.3.0.1.2;
RET = (_25.3,);
(*_19) = _28.3.0.1.1 ^ _28.3.0.1.1;
_10 = 265542898053682594946041176164465520709_u128;
_28.3.2 = [_17,_17,_11];
match _28.3.0.1.2 {
0 => bb9,
1 => bb10,
2 => bb11,
340282366920938463463374607431768211400 => bb13,
_ => bb12
}
}
bb9 = {
_14 = (-4502622305199221523_i64) & 7089465603134984256_i64;
(*_8) = _3;
_14 = RET.0.0 as i64;
RET.0.2 = 15874_i16 as f64;
RET.0.2 = _11 as f64;
_12 = [_1,_1,_1,_1,_1];
(*_8) = _3;
_4 = RET.0.0;
_6 = [_14,_14,_14];
_13 = [_11,_11,_11];
_3 = 2_usize as u8;
_6 = [_14,_14,_14];
_12 = [_1,_1,_1,_1,_1];
(*_8) = _3 * _3;
RET.0.0 = _10 as f32;
RET.0.0 = 17242048583698020933_usize as f32;
_1 = false;
_9 = [_14,_14,_14];
_16 = [_11,_11,_11];
RET.0.2 = _11 as f64;
_9 = _6;
_17 = _11;
Goto(bb2)
}
bb10 = {
_3 = !(*_8);
_19 = _15;
_20 = _21;
(*_19) = _2 as usize;
_25.3.0 = _4;
RET.0 = (_21, _2, _25.3.2);
Call((*_8) = fn18(_8, _1), bb7, UnwindUnreachable())
}
bb11 = {
_12 = [_1,_1,_1,_1,_1];
_18 = (-56_i16);
_22 = [(*_8),(*_8),_3];
_6 = _9;
_21 = -RET.0.0;
_23 = [3_usize,0_usize,13308512286747709855_usize,2_usize,15360403071591729808_usize,11554569604403329753_usize,1097026132800792683_usize];
_16 = [_11,_11,_17];
_17 = -_11;
_25.3.2 = RET.0.2 - RET.0.2;
RET.0.1 = !_2;
_14 = (-4444935872382757748_i64) | (-7556926846673608734_i64);
_3 = (*_8) & (*_8);
Goto(bb3)
}
bb12 = {
_12 = [_1,_1,_1,_1,_1];
_18 = (-56_i16);
_22 = [(*_8),(*_8),_3];
_6 = _9;
_21 = -RET.0.0;
_23 = [3_usize,0_usize,13308512286747709855_usize,2_usize,15360403071591729808_usize,11554569604403329753_usize,1097026132800792683_usize];
_16 = [_11,_11,_17];
_17 = -_11;
_25.3.2 = RET.0.2 - RET.0.2;
RET.0.1 = !_2;
_14 = (-4444935872382757748_i64) | (-7556926846673608734_i64);
_3 = (*_8) & (*_8);
Goto(bb3)
}
bb13 = {
RET.0.1 = -_2;
_8 = core::ptr::addr_of_mut!(_3);
_23 = [_25.0.1.1,_28.3.0.1.1,(*_15),_25.0.1.1,(*_19),_28.3.0.1.1,(*_19)];
_25.3.0 = (*_8) as f32;
_6 = _9;
_25.0.1.2 = _28.3.0.1.2 << (*_15);
_29 = !_25.0.0;
_11 = !_17;
_32 = _25.0.1.1 ^ _25.0.1.1;
_28.0 = [_28.3.0.2,_25.0.2,_25.0.2,_28.3.0.2];
_11 = _17 ^ _17;
(*_8) = 19_u8;
_25.0.1.2 = _25.3.1 as i16;
_30 = _29 as isize;
(*_15) = !_32;
_25.1 = [(*_8),_3,_3];
_15 = core::ptr::addr_of!((*_19));
_33 = _14 as u128;
_6 = [_14,_14,_14];
_11 = _1 as isize;
match _28.3.0.2 {
0 => bb1,
1 => bb2,
3 => bb4,
4 => bb8,
5 => bb9,
6 => bb11,
2 => bb15,
_ => bb14
}
}
bb14 = {
_3 = !(*_8);
_19 = _15;
_20 = _21;
(*_19) = _2 as usize;
_25.3.0 = _4;
RET.0 = (_21, _2, _25.3.2);
Call((*_8) = fn18(_8, _1), bb7, UnwindUnreachable())
}
bb15 = {
_2 = RET.0.1 << (*_8);
_25 = (_28.3.0, _22, _16, RET.0);
_24 = 45076_u16 as f32;
_28.3.0.0 = _29 | _25.0.0;
_8 = _25.0.3;
RET.0.1 = !_28.3.3.1;
(*_19) = !_32;
_28.1 = !_28.3.0.0;
_30 = _17;
_10 = _28.3.0.2 as u128;
(*_19) = _32;
_23 = [_32,(*_15),_25.0.1.1,(*_19),(*_19),_25.0.1.1,_25.0.1.1];
_37.1 = _28.3.0.1.1;
_25.0.1.2 = _28.3.0.1.2;
_37 = (_25.0.1.0, (*_19), _18);
_36 = RET.0.2 + _28.3.3.2;
_14 = _28.1 as i64;
RET.0.0 = _25.3.0;
_28.3.1 = _25.1;
_25.1 = [(*_8),(*_8),_3];
_23 = [(*_19),_32,(*_15),(*_15),_25.0.1.1,(*_19),_32];
_36 = RET.0.2;
_7 = _25.0.1.0;
_10 = _33;
_3 = !(*_8);
_40 = _7;
Goto(bb16)
}
bb16 = {
Call(_41 = dump_var(17_usize, 23_usize, Move(_23), 40_usize, Move(_40), 37_usize, Move(_37), 1_usize, Move(_1)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_41 = dump_var(17_usize, 32_usize, Move(_32), 13_usize, Move(_13), 3_usize, Move(_3), 16_usize, Move(_16)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(17_usize, 2_usize, Move(_2), 33_usize, Move(_33), 11_usize, Move(_11), 42_usize, _42), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: *mut u8,mut _2: bool) -> u8 {
mir! {
type RET = u8;
let _3: i16;
let _4: Adt57;
let _5: f32;
let _6: *const u128;
let _7: Adt55;
let _8: f32;
let _9: f32;
let _10: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64));
let _11: [i64; 1];
let _12: [u32; 5];
let _13: [usize; 7];
let _14: Adt60;
let _15: f64;
let _16: [bool; 5];
let _17: Adt59;
let _18: isize;
let _19: isize;
let _20: Adt60;
let _21: isize;
let _22: [u32; 5];
let _23: usize;
let _24: char;
let _25: isize;
let _26: isize;
let _27: *mut i64;
let _28: [u64; 2];
let _29: *mut i64;
let _30: f64;
let _31: [bool; 5];
let _32: (f32, i32, f64);
let _33: u16;
let _34: i128;
let _35: [u16; 8];
let _36: [char; 1];
let _37: [i64; 3];
let _38: isize;
let _39: (char, usize, i16);
let _40: f32;
let _41: i64;
let _42: [u32; 5];
let _43: i64;
let _44: f64;
let _45: *mut [i64; 3];
let _46: ();
let _47: ();
{
RET = !197_u8;
_1 = core::ptr::addr_of_mut!(RET);
_2 = false;
_2 = !false;
RET = !39_u8;
RET = 210_u8 >> 23036_i16;
RET = 224_u8 - 218_u8;
_1 = core::ptr::addr_of_mut!(RET);
_3 = 9223372036854775807_isize as i16;
_3 = -(-19951_i16);
(*_1) = 146_u8;
RET = 106_u8 ^ 2_u8;
(*_1) = !52_u8;
(*_1) = !22_u8;
Goto(bb1)
}
bb1 = {
_2 = !false;
(*_1) = 178_u8 << _3;
(*_1) = 175_u8;
_3 = 16439205331045813380_u64 as i16;
_5 = 426614357_i32 as f32;
_5 = 2239_u16 as f32;
(*_1) = !221_u8;
_1 = core::ptr::addr_of_mut!((*_1));
(*_1) = !107_u8;
_3 = -13725_i16;
_10.0.2 = 56_i8;
_10.3.0 = _5;
_10.0.1.0 = '\u{d04ec}';
_10.0.1.0 = '\u{b3670}';
_10.0.1 = ('\u{70f39}', 2_usize, _3);
_10.0.1.1 = _2 as usize;
_10.3.1 = (-128037946_i32) * (-556358398_i32);
_2 = _10.0.1.2 >= _10.0.1.2;
_5 = _10.3.0;
_10.2 = [(-9223372036854775808_isize),(-9223372036854775808_isize),13_isize];
_11 = [7603106316038026598_i64];
_10.0.0 = 1438099506_u32;
_8 = 5476432374645350810_u64 as f32;
RET = _10.0.1.2 as u8;
_2 = true;
match _10.0.2 {
56 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
RET = 161_u8;
_10.0.3 = _1;
_10.3.1 = -(-1613358177_i32);
_11 = [(-3378767635874240652_i64)];
_13 = [_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_14.fld0 = _2;
_10.0.1 = ('\u{c27be}', 3_usize, _3);
_10.3.2 = _10.3.1 as f64;
_10.2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10.1 = [(*_1),RET,(*_1)];
_10.0.3 = core::ptr::addr_of_mut!(RET);
Goto(bb4)
}
bb4 = {
(*_1) = 168_u8 & 16_u8;
_10.3.2 = _10.0.1.1 as f64;
(*_1) = _10.0.1.2 as u8;
_10.3.2 = _10.0.1.2 as f64;
_13 = [_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_10.0.0 = 974181272_u32 >> (*_1);
_10.2 = [9223372036854775807_isize,100_isize,(-9223372036854775808_isize)];
_10.0.1 = ('\u{32acb}', 1_usize, _3);
(*_1) = _10.3.2 as u8;
_10.3.1 = 599337925_i32 ^ 951947286_i32;
_10.0.0 = 90239343861198103695252642988977993949_u128 as u32;
_14.fld0 = _2;
_2 = _14.fld0;
_10.0.0 = 3107458791_u32;
RET = _10.3.1 as u8;
_10.3.2 = _5 as f64;
_14.fld3 = _10.0.1.1 ^ _10.0.1.1;
RET = 47255_u16 as u8;
_10.0.3 = core::ptr::addr_of_mut!((*_1));
match _10.0.1.1 {
0 => bb1,
1 => bb5,
_ => bb3
}
}
bb5 = {
_18 = (-119977989067457938753081867293135841848_i128) as isize;
RET = 30_u8 * 252_u8;
_1 = core::ptr::addr_of_mut!((*_1));
_5 = _10.3.0 + _10.3.0;
RET = !117_u8;
_1 = core::ptr::addr_of_mut!(RET);
_13 = [_10.0.1.1,_14.fld3,_14.fld3,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1];
_16 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_2];
_19 = _18 | _18;
RET = 564850588345638366_u64 as u8;
_10.0.0 = _3 as u32;
_10.3.0 = -_5;
_10.3.2 = _10.0.1.1 as f64;
_15 = _10.3.2;
_1 = core::ptr::addr_of_mut!((*_1));
_20.fld1 = _10.0.1.0;
Goto(bb6)
}
bb6 = {
_12 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_1 = core::ptr::addr_of_mut!(RET);
_14.fld1 = _20.fld1;
_13 = [_14.fld3,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1,_10.0.1.1,_14.fld3];
_10.0.1 = (_14.fld1, _14.fld3, _3);
_10.0.0 = 175077087830948558354323404503218165574_u128 as u32;
RET = 225_u8 >> _10.0.1.1;
_24 = _10.0.1.0;
_10.2 = [_18,_19,_19];
_13 = [_14.fld3,_10.0.1.1,_14.fld3,_10.0.1.1,_14.fld3,_14.fld3,_10.0.1.1];
_10.2 = [_19,_19,_18];
_1 = core::ptr::addr_of_mut!((*_1));
(*_1) = 119108829240756113178319405045410055905_i128 as u8;
_21 = _10.3.1 as isize;
_10.3.2 = -_15;
_19 = _10.0.1.1 as isize;
_8 = _10.3.0;
Goto(bb7)
}
bb7 = {
_15 = 45993714074206042370200892418175903888_i128 as f64;
_16 = [_2,_2,_2,_2,_2];
_13 = [_14.fld3,_10.0.1.1,_10.0.1.1,_14.fld3,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_3 = _10.0.1.0 as i16;
_11 = [2143178984265480677_i64];
_13 = [_10.0.1.1,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_22 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_2 = _10.0.1.2 < _3;
_30 = -_10.3.2;
_10.0.1.1 = !_14.fld3;
_22 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_10.2 = [_19,_19,_19];
_30 = _10.3.2;
_31 = [_14.fld0,_2,_2,_2,_2];
_23 = _10.0.1.1 * _10.0.1.1;
_33 = _18 as u16;
_28 = [15814711656699465193_u64,14316510878813642470_u64];
_10.0.1.0 = _20.fld1;
_24 = _20.fld1;
_20.fld0 = _2;
_10.3.2 = _30;
_12 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_10.1 = [(*_1),(*_1),(*_1)];
_10.3.1 = _33 as i32;
_19 = 15226717900853945231_u64 as isize;
match _10.0.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
56 => bb10,
_ => bb9
}
}
bb8 = {
_12 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_1 = core::ptr::addr_of_mut!(RET);
_14.fld1 = _20.fld1;
_13 = [_14.fld3,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1,_10.0.1.1,_14.fld3];
_10.0.1 = (_14.fld1, _14.fld3, _3);
_10.0.0 = 175077087830948558354323404503218165574_u128 as u32;
RET = 225_u8 >> _10.0.1.1;
_24 = _10.0.1.0;
_10.2 = [_18,_19,_19];
_13 = [_14.fld3,_10.0.1.1,_14.fld3,_10.0.1.1,_14.fld3,_14.fld3,_10.0.1.1];
_10.2 = [_19,_19,_18];
_1 = core::ptr::addr_of_mut!((*_1));
(*_1) = 119108829240756113178319405045410055905_i128 as u8;
_21 = _10.3.1 as isize;
_10.3.2 = -_15;
_19 = _10.0.1.1 as isize;
_8 = _10.3.0;
Goto(bb7)
}
bb9 = {
RET = 161_u8;
_10.0.3 = _1;
_10.3.1 = -(-1613358177_i32);
_11 = [(-3378767635874240652_i64)];
_13 = [_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_14.fld0 = _2;
_10.0.1 = ('\u{c27be}', 3_usize, _3);
_10.3.2 = _10.3.1 as f64;
_10.2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10.1 = [(*_1),RET,(*_1)];
_10.0.3 = core::ptr::addr_of_mut!(RET);
Goto(bb4)
}
bb10 = {
_10.0.1 = (_24, _23, _3);
_34 = !84196916529002802565827917603819705293_i128;
_10.3.1 = 13340923547099429944_u64 as i32;
_20.fld3 = 909479270847963245_i64 as usize;
_10.0.3 = core::ptr::addr_of_mut!((*_1));
_15 = -_10.3.2;
_9 = _5;
_10.0.2 = (-126_i8);
_36 = [_24];
_16 = [_20.fld0,_20.fld0,_20.fld0,_20.fld0,_2];
_10.0.3 = core::ptr::addr_of_mut!((*_1));
_10.0.1.0 = _20.fld1;
_35 = [_33,_33,_33,_33,_33,_33,_33,_33];
_10.0.1.1 = RET as usize;
RET = !195_u8;
_10.0.1.1 = _14.fld0 as usize;
_32 = (_5, _10.3.1, _10.3.2);
(*_1) = !221_u8;
_29 = core::ptr::addr_of_mut!(_41);
_8 = _32.0;
match _10.0.2 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
340282366920938463463374607431768211330 => bb19,
_ => bb18
}
}
bb11 = {
RET = 161_u8;
_10.0.3 = _1;
_10.3.1 = -(-1613358177_i32);
_11 = [(-3378767635874240652_i64)];
_13 = [_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_14.fld0 = _2;
_10.0.1 = ('\u{c27be}', 3_usize, _3);
_10.3.2 = _10.3.1 as f64;
_10.2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10.1 = [(*_1),RET,(*_1)];
_10.0.3 = core::ptr::addr_of_mut!(RET);
Goto(bb4)
}
bb12 = {
_12 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_1 = core::ptr::addr_of_mut!(RET);
_14.fld1 = _20.fld1;
_13 = [_14.fld3,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1,_10.0.1.1,_14.fld3];
_10.0.1 = (_14.fld1, _14.fld3, _3);
_10.0.0 = 175077087830948558354323404503218165574_u128 as u32;
RET = 225_u8 >> _10.0.1.1;
_24 = _10.0.1.0;
_10.2 = [_18,_19,_19];
_13 = [_14.fld3,_10.0.1.1,_14.fld3,_10.0.1.1,_14.fld3,_14.fld3,_10.0.1.1];
_10.2 = [_19,_19,_18];
_1 = core::ptr::addr_of_mut!((*_1));
(*_1) = 119108829240756113178319405045410055905_i128 as u8;
_21 = _10.3.1 as isize;
_10.3.2 = -_15;
_19 = _10.0.1.1 as isize;
_8 = _10.3.0;
Goto(bb7)
}
bb13 = {
_15 = 45993714074206042370200892418175903888_i128 as f64;
_16 = [_2,_2,_2,_2,_2];
_13 = [_14.fld3,_10.0.1.1,_10.0.1.1,_14.fld3,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_3 = _10.0.1.0 as i16;
_11 = [2143178984265480677_i64];
_13 = [_10.0.1.1,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_22 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_2 = _10.0.1.2 < _3;
_30 = -_10.3.2;
_10.0.1.1 = !_14.fld3;
_22 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_10.2 = [_19,_19,_19];
_30 = _10.3.2;
_31 = [_14.fld0,_2,_2,_2,_2];
_23 = _10.0.1.1 * _10.0.1.1;
_33 = _18 as u16;
_28 = [15814711656699465193_u64,14316510878813642470_u64];
_10.0.1.0 = _20.fld1;
_24 = _20.fld1;
_20.fld0 = _2;
_10.3.2 = _30;
_12 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_10.1 = [(*_1),(*_1),(*_1)];
_10.3.1 = _33 as i32;
_19 = 15226717900853945231_u64 as isize;
match _10.0.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
56 => bb10,
_ => bb9
}
}
bb14 = {
_12 = [_10.0.0,_10.0.0,_10.0.0,_10.0.0,_10.0.0];
_1 = core::ptr::addr_of_mut!(RET);
_14.fld1 = _20.fld1;
_13 = [_14.fld3,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1,_10.0.1.1,_14.fld3];
_10.0.1 = (_14.fld1, _14.fld3, _3);
_10.0.0 = 175077087830948558354323404503218165574_u128 as u32;
RET = 225_u8 >> _10.0.1.1;
_24 = _10.0.1.0;
_10.2 = [_18,_19,_19];
_13 = [_14.fld3,_10.0.1.1,_14.fld3,_10.0.1.1,_14.fld3,_14.fld3,_10.0.1.1];
_10.2 = [_19,_19,_18];
_1 = core::ptr::addr_of_mut!((*_1));
(*_1) = 119108829240756113178319405045410055905_i128 as u8;
_21 = _10.3.1 as isize;
_10.3.2 = -_15;
_19 = _10.0.1.1 as isize;
_8 = _10.3.0;
Goto(bb7)
}
bb15 = {
_18 = (-119977989067457938753081867293135841848_i128) as isize;
RET = 30_u8 * 252_u8;
_1 = core::ptr::addr_of_mut!((*_1));
_5 = _10.3.0 + _10.3.0;
RET = !117_u8;
_1 = core::ptr::addr_of_mut!(RET);
_13 = [_10.0.1.1,_14.fld3,_14.fld3,_14.fld3,_14.fld3,_14.fld3,_10.0.1.1];
_16 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0,_2];
_19 = _18 | _18;
RET = 564850588345638366_u64 as u8;
_10.0.0 = _3 as u32;
_10.3.0 = -_5;
_10.3.2 = _10.0.1.1 as f64;
_15 = _10.3.2;
_1 = core::ptr::addr_of_mut!((*_1));
_20.fld1 = _10.0.1.0;
Goto(bb6)
}
bb16 = {
(*_1) = 168_u8 & 16_u8;
_10.3.2 = _10.0.1.1 as f64;
(*_1) = _10.0.1.2 as u8;
_10.3.2 = _10.0.1.2 as f64;
_13 = [_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_10.0.0 = 974181272_u32 >> (*_1);
_10.2 = [9223372036854775807_isize,100_isize,(-9223372036854775808_isize)];
_10.0.1 = ('\u{32acb}', 1_usize, _3);
(*_1) = _10.3.2 as u8;
_10.3.1 = 599337925_i32 ^ 951947286_i32;
_10.0.0 = 90239343861198103695252642988977993949_u128 as u32;
_14.fld0 = _2;
_2 = _14.fld0;
_10.0.0 = 3107458791_u32;
RET = _10.3.1 as u8;
_10.3.2 = _5 as f64;
_14.fld3 = _10.0.1.1 ^ _10.0.1.1;
RET = 47255_u16 as u8;
_10.0.3 = core::ptr::addr_of_mut!((*_1));
match _10.0.1.1 {
0 => bb1,
1 => bb5,
_ => bb3
}
}
bb17 = {
RET = 161_u8;
_10.0.3 = _1;
_10.3.1 = -(-1613358177_i32);
_11 = [(-3378767635874240652_i64)];
_13 = [_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1,_10.0.1.1];
_14.fld0 = _2;
_10.0.1 = ('\u{c27be}', 3_usize, _3);
_10.3.2 = _10.3.1 as f64;
_10.2 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_10.1 = [(*_1),RET,(*_1)];
_10.0.3 = core::ptr::addr_of_mut!(RET);
Goto(bb4)
}
bb18 = {
Return()
}
bb19 = {
_10.0.2 = _10.3.1 as i8;
_15 = _32.2 - _10.3.2;
_41 = _18 as i64;
_10.0.0 = !3061808394_u32;
_10.0.1.2 = !_3;
_16 = _31;
_12 = _22;
_14.fld1 = _10.0.1.0;
_29 = core::ptr::addr_of_mut!((*_29));
_20.fld1 = _14.fld1;
_10.2 = [_21,_21,_21];
_10.0.3 = _1;
_10.0.1 = (_20.fld1, _23, _3);
_19 = _10.0.2 as isize;
Goto(bb20)
}
bb20 = {
Call(_46 = dump_var(18_usize, 35_usize, Move(_35), 3_usize, Move(_3), 36_usize, Move(_36), 2_usize, Move(_2)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_46 = dump_var(18_usize, 28_usize, Move(_28), 18_usize, Move(_18), 34_usize, Move(_34), 22_usize, Move(_22)), bb22, UnwindUnreachable())
}
bb22 = {
Call(_46 = dump_var(18_usize, 41_usize, Move(_41), 47_usize, _47, 47_usize, _47, 47_usize, _47), bb23, UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: u8,mut _2: usize,mut _3: i32,mut _4: usize,mut _5: usize,mut _6: f64,mut _7: usize,mut _8: u8,mut _9: i32) -> [i8; 4] {
mir! {
type RET = [i8; 4];
let _10: Adt63;
let _11: i8;
let _12: [usize; 7];
let _13: u32;
let _14: f64;
let _15: *const bool;
let _16: i16;
let _17: Adt52;
let _18: [usize; 7];
let _19: Adt57;
let _20: bool;
let _21: [u32; 5];
let _22: *mut f64;
let _23: ();
let _24: ();
{
_6 = (-9223372036854775808_isize) as f64;
_8 = _2 as u8;
_6 = 1717808273951628203776173815560800717_i128 as f64;
RET = [(-103_i8),62_i8,18_i8,28_i8];
RET = [(-38_i8),(-111_i8),11_i8,(-126_i8)];
Goto(bb1)
}
bb1 = {
_8 = !_1;
_4 = !_2;
_6 = 64416963587433800324204739380815290985_u128 as f64;
_4 = _5;
_1 = _8;
RET = [(-111_i8),(-69_i8),119_i8,(-72_i8)];
_4 = _5 & _2;
_3 = _9;
_4 = _5;
Call(_2 = core::intrinsics::transmute(_5), bb2, UnwindUnreachable())
}
bb2 = {
_6 = _9 as f64;
_10.fld3.0.1 = ('\u{3228b}', _5, (-13703_i16));
_10.fld3.2 = [46_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_10.fld2 = [9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
_8 = _1 - _1;
_10.fld0.fld1 = 15327380573728402771_u64;
_10.fld4.0.0 = 283357197562792549961280350615018769779_u128 as f32;
_9 = _3 * _3;
match _10.fld3.0.1.1 {
0 => bb3,
1 => bb4,
2 => bb5,
8860627688952255038 => bb7,
_ => bb6
}
}
bb3 = {
_8 = !_1;
_4 = !_2;
_6 = 64416963587433800324204739380815290985_u128 as f64;
_4 = _5;
_1 = _8;
RET = [(-111_i8),(-69_i8),119_i8,(-72_i8)];
_4 = _5 & _2;
_3 = _9;
_4 = _5;
Call(_2 = core::intrinsics::transmute(_5), bb2, UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_10.fld3.0.3 = core::ptr::addr_of_mut!(_8);
_1 = _10.fld4.0.0 as u8;
_10.fld3.1 = [_1,_8,_8];
_10.fld4.0.0 = _10.fld0.fld1 as f32;
_10.fld4.0.0 = _3 as f32;
_10.fld0.fld4 = _10.fld3.0.1.2;
match _10.fld3.0.1.2 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb8,
4 => bb9,
340282366920938463463374607431768197753 => bb11,
_ => bb10
}
}
bb8 = {
_8 = !_1;
_4 = !_2;
_6 = 64416963587433800324204739380815290985_u128 as f64;
_4 = _5;
_1 = _8;
RET = [(-111_i8),(-69_i8),119_i8,(-72_i8)];
_4 = _5 & _2;
_3 = _9;
_4 = _5;
Call(_2 = core::intrinsics::transmute(_5), bb2, UnwindUnreachable())
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_8 = _1;
_10.fld3.0.1.0 = '\u{437db}';
_10.fld3.0.0 = !4212927837_u32;
_13 = !_10.fld3.0.0;
_10.fld3.1 = [_1,_8,_8];
_10.fld3.3 = (_10.fld4.0.0, _9, _6);
_11 = (-81_i8);
_10.fld3.3.1 = _9;
_10.fld3.0.1.2 = !_10.fld0.fld4;
_10.fld3.0.0 = _13 & _13;
_4 = _10.fld3.0.1.1;
_10.fld3.0.1.2 = -_10.fld0.fld4;
_10.fld0.fld6 = [false,false,true,true,true];
Call(_14 = core::intrinsics::transmute(_5), bb12, UnwindUnreachable())
}
bb12 = {
_12 = [_7,_10.fld3.0.1.1,_7,_7,_10.fld3.0.1.1,_7,_4];
_10.fld4.0.1 = _3;
_10.fld4.0.2 = _10.fld3.0.1.2 as f64;
_16 = _10.fld0.fld4;
_10.fld3.0.3 = core::ptr::addr_of_mut!(_1);
_10.fld3.0.1.0 = '\u{55d6f}';
_6 = -_10.fld3.3.2;
_10.fld3.3.0 = _10.fld3.0.0 as f32;
_10.fld3.3.0 = _9 as f32;
_10.fld0.fld4 = -_16;
_10.fld4.0.0 = _10.fld3.3.0 * _10.fld3.3.0;
_1 = !_8;
_10.fld3.0.2 = -_11;
_10.fld3.0.2 = _11 << _2;
_10.fld0.fld4 = _5 as i16;
_16 = _10.fld3.0.1.2 & _10.fld0.fld4;
_10.fld3.3.0 = _9 as f32;
_10.fld0.fld1 = 10657349270785732016_u64 ^ 16521974596894279348_u64;
_4 = _2 % _5;
_4 = !_5;
RET = [_10.fld3.0.2,_10.fld3.0.2,_10.fld3.0.2,_10.fld3.0.2];
_18 = _12;
Call(_4 = core::intrinsics::transmute(_7), bb13, UnwindUnreachable())
}
bb13 = {
_10.fld3.3.0 = _10.fld4.0.0 * _10.fld4.0.0;
_4 = _7;
_3 = _1 as i32;
_5 = _7;
_8 = 358_u16 as u8;
_6 = _10.fld4.0.2;
_10.fld3.2 = [9223372036854775807_isize,32_isize,9223372036854775807_isize];
_4 = _10.fld3.0.1.1;
_10.fld3.0.2 = !_11;
_10.fld4.0.0 = _10.fld3.3.0 - _10.fld3.3.0;
_10.fld0.fld5 = [_10.fld3.0.0,_13,_10.fld3.0.0,_10.fld3.0.0,_10.fld3.0.0];
_10.fld4.0 = _10.fld3.3;
Call(_10.fld3.0.1.1 = core::intrinsics::bswap(_5), bb14, UnwindUnreachable())
}
bb14 = {
_10.fld0.fld6 = [false,true,false,false,true];
_13 = _10.fld3.0.0;
_10.fld4.0 = (_10.fld3.3.0, _3, _14);
_5 = _10.fld3.3.0 as usize;
_10.fld3.3.1 = _16 as i32;
_10.fld0.fld4 = _16 ^ _10.fld3.0.1.2;
_10.fld3.3.0 = _14 as f32;
_10.fld0.fld6 = [true,false,true,false,false];
_5 = _7 + _2;
_10.fld0.fld1 = 12950349159410893347_u64;
_15 = core::ptr::addr_of!(_20);
_7 = _5 << _16;
_7 = !_5;
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(19_usize, 2_usize, Move(_2), 8_usize, Move(_8), 9_usize, Move(_9), 4_usize, Move(_4)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(19_usize, 3_usize, Move(_3), 13_usize, Move(_13), 24_usize, _24, 24_usize, _24), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{f02ce}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(79_i8), std::hint::black_box(21937_i16), std::hint::black_box(1143875674_i32), std::hint::black_box((-3657193501171961580_i64)), std::hint::black_box((-148797422591349291654974352351959652109_i128)), std::hint::black_box(12504116911789426073_usize), std::hint::black_box(192_u8), std::hint::black_box(18696_u16), std::hint::black_box(3271144005_u32), std::hint::black_box(8037205849775390945_u64), std::hint::black_box(262755208824132098462251135391188046429_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: *mut u8,
fld1: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)),
fld2: [bool; 5],
fld3: i8,
fld4: *const bool,

},
Variant1{
fld0: [u8; 3],
fld1: i16,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: *const u128,
fld1: i16,
fld2: *const bool,
fld3: [i64; 3],

},
Variant1{
fld0: *mut (char, usize, i16),
fld1: ((f32, i32, f64),),
fld2: [u32; 5],
fld3: (u32, (char, usize, i16), i8, *mut u8),

}}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: [i128; 6],
fld1: Adt49,
fld2: ([i64; 3], char),

},
Variant1{
fld0: Adt48,
fld1: *mut [i64; 3],
fld2: [i8; 4],
fld3: ([i64; 3], char),

},
Variant2{
fld0: [isize; 3],
fld1: [char; 1],
fld2: isize,
fld3: u64,
fld4: [i64; 1],
fld5: (u32, (char, usize, i16), i8, *mut u8),

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: *mut [i64; 3],

},
Variant1{
fld0: *const *mut [i64; 3],
fld1: i32,
fld2: isize,
fld3: Adt49,
fld4: [u32; 5],

},
Variant2{
fld0: f32,
fld1: [u16; 8],
fld2: [u64; 2],

}}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: [i64; 1],
fld1: char,
fld2: i64,
fld3: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]),
fld4: [i8; 4],

},
Variant1{
fld0: Adt50,
fld1: char,
fld2: *mut [u16; 8],
fld3: i8,
fld4: [u16; 8],
fld5: *mut u8,
fld6: [u32; 5],
fld7: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)),

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: i128,
fld1: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]),

},
Variant1{
fld0: Adt52,

}}
#[derive(Debug)]
pub struct Adt54 {
fld0: bool,
fld1: ((f32, i32, f64),),
fld2: *mut i64,
fld3: *const u128,
fld4: Adt49,
fld5: *mut f64,
fld6: [u64; 2],
fld7: [i64; 3],
}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: f64,
fld1: [i64; 3],
fld2: u128,
fld3: [u8; 3],
fld4: *mut u8,
fld5: [bool; 5],
fld6: *mut f64,
fld7: *mut ([i64; 3], char),

},
Variant1{
fld0: i64,
fld1: u128,
fld2: [i64; 3],
fld3: i8,
fld4: ((f32, i32, f64),),
fld5: (u32, (char, usize, i16), i8, *mut u8),

},
Variant2{
fld0: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]),
fld1: f64,
fld2: ([i64; 3], char),
fld3: Adt49,
fld4: i16,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: bool,
fld1: Adt55,
fld2: (f32, i32, f64),
fld3: ((f32, i32, f64),),
fld4: [isize; 3],
fld5: i32,

},
Variant1{
fld0: [isize; 3],
fld1: ([i64; 3], char),
fld2: Adt49,
fld3: i8,

},
Variant2{
fld0: *mut ([i64; 3], char),
fld1: *const u128,

},
Variant3{
fld0: [isize; 3],
fld1: [i64; 1],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt57 {
Variant0{
fld0: *const *mut [i64; 3],
fld1: [u32; 5],
fld2: u128,

},
Variant1{
fld0: *const *mut [i64; 3],
fld1: *mut [u16; 8],
fld2: *mut f64,

}}
#[derive(Debug)]
pub struct Adt58 {
fld0: *mut ([i64; 3], char),
fld1: u64,
fld2: *mut i64,
fld3: Adt50,
fld4: i16,
fld5: [u32; 5],
fld6: [bool; 5],
}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: bool,
fld1: char,
fld2: u32,
fld3: i8,
fld4: *const u128,
fld5: Adt52,
fld6: u16,
fld7: u128,

},
Variant1{
fld0: Adt53,
fld1: Adt49,
fld2: [u32; 4],
fld3: [i8; 4],
fld4: u128,
fld5: *const u128,
fld6: u8,
fld7: [char; 1],

}}
#[derive(Debug)]
pub struct Adt60 {
fld0: bool,
fld1: char,
fld2: Adt55,
fld3: usize,
}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: u16,
fld1: usize,
fld2: Adt54,

},
Variant1{
fld0: usize,
fld1: i16,
fld2: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)),
fld3: i32,

},
Variant2{
fld0: [u32; 4],
fld1: ([i64; 3], char),
fld2: ((f32, i32, f64),),

},
Variant3{
fld0: i16,
fld1: *mut i64,
fld2: *const *mut [i64; 3],

}}
#[derive(Debug)]
pub struct Adt62 {
fld0: Adt56,
fld1: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]),
fld2: [i64; 3],
fld3: i128,
fld4: i16,
fld5: (char, usize, i16),
}
#[derive(Debug)]
pub struct Adt63 {
fld0: Adt58,
fld1: Adt51,
fld2: [isize; 3],
fld3: ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)),
fld4: ((f32, i32, f64),),
fld5: Adt50,
}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: bool,
fld1: ((f32, i32, f64),),
fld2: isize,
fld3: i8,
fld4: Adt51,
fld5: u16,
fld6: [usize; 7],
fld7: [i128; 6],

},
Variant1{
fld0: ([i8; 4], u32, f32, ((u32, (char, usize, i16), i8, *mut u8), [u8; 3], [isize; 3], (f32, i32, f64)), [u32; 4]),

}}

